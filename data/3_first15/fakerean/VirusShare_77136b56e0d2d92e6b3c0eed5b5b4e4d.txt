sbb
add
out
jl
pop
hlt
mov
outsl
popa
in
das
nop
iret
subb
das
mov
xchg
andl
int3
jne
cmp
out
xor
sahf
pop
jmp
leave
jns
or
ret
das
jp
push
cwtl
pusha
fmuls
push
mov
fadds
push
outsl
ljmp
pop
and
fistpl
imul
add
es
js
enter
dec
in
rcll
inc
xchg
in
nop
cmp
pop
in
scas
jns
adc
push
adc
push
jl
inc
mov
leave
sbb
popf
loope
ss
sub
aas
xor
loop
xchg
cli
mov
out
icebp
mov
insl
push
xchg
std
cmc
mov
mov
xchg
ret
addr16
sbb
adc
add
jno
adc
js
test
push
enter
dec
mov
je
pop
aam
add
and
adc
mov
inc
xchg
xchg
pop
and
lods
mov
xlat
sub
pop
movsb
cmp
into
test
lock
mov
push
cltd
int
sbb
add
sbb
fnstsw
dec
xchg
lock
test
in
dec
pusha
leave
les
pop
xchg
push
movsl
add
scas
cmp
pop
fstpt
lds
xchg
sahf
ficoms
sarb
and
outsb
in
add
outsl
insl
dec
outsb
pop
jbe
xlat
cmp
pop
push
push
and
les
mov
pop
sbb
divl
jne
mov
pop
dec
into
xchg
jle
mov
stos
popa
xor
sbb
pusha
call
and
out
and
push
and
pop
rcr
imul
sbb
and
pop
out
push
cmp
imul
inc
leave
cli
imul
inc
or
jae
push
das
mov
fcmovnb
mov
dec
cmpsl
cmp
aam
fdivrl
sub
push
mov
pop
pop
sahf
pop
add
mov
dec
dec
test
xchg
dec
inc
and
inc
mov
inc
fcmovbe
nop
fildll
mov
mov
mov
xchg
es
jge
sbb
sub
mov
mov
dec
inc
fisubl
mov
lds
std
fidivrs
add
in
test
cld
adc
push
leave
push
aam
shrb
inc
scas
movsb
cwtl
popa
jmp
xchg
notb
add
mov
imulb
adc
scas
in
int
jp
popa
push
xchg
mov
sbb
jg
or
adc
mov
mov
loope
push
mov
mov
jno
inc
ljmp
daa
xchg
dec
pop
nop
mov
insb
mov
or
sub
shlb
ljmp
xchg
jno
inc
popa
loope
cld
je
push
out
addr16
push
pop
push
pop
rorl
movb
shlb
inc
cmp
popf
popf
lds
mov
mov
xor
scas
adc
ret
test
ja
push
push
mov
push
fwait
addr16
movsl
mov
mov
mov
in
jmp
dec
hlt
pop
ret
inc
popa
and
mov
fwait
xchg
and
xchg
pop
push
push
push
jne
and
push
xchg
add
jbe
mov
cmc
or
scas
push
movsb
fsubrl
sarb
js
into
pop
xchg
push
ja
dec
jnp
xor
stc
loop
dec
lds
loope
cs
insb
pop
jle
test
xchg
sub
ja
push
mov
push
mov
sar
or
mov
les
or
pop
fs
mov
dec
pushl
mov
mov
push
fistpll
js
inc
fistps
sbb
mov
in
cmpsl
xchg
lahf
pop
sbb
dec
push
adc
shrl
cmpsl
cmp
push
push
fbstp
and
imul
mov
cmp
sarb
inc
mov
dec
rolb
int
aam
test
inc
hlt
push
jne
shlb
sbb
stos
fs
dec
or
add
loopne
add
addl
sbb
xchg
jbe
jne
in
push
ret
push
cs
addr16
push
stc
push
cmp
daa
rorb
xchg
cmp
sub
iret
dec
insb
push
std
mov
test
roll
lds
xchg
xor
lahf
pop
jmp
jbe
paddb
push
sbb
les
push
pop
pop
cmp
mov
repnz
js
jbe
sub
and
jg
add
dec
mov
scas
sub
cmp
in
and
out
sbb
and
adcb
inc
xor
into
clc
sbb
arpl
inc
push
cmp
sub
js
push
mov
mov
shlb
inc
into
adc
mov
shlb
pop
jl
lahf
mov
lcall
repz
mov
adc
pusha
mov
jns
jecxz
mov
sub
incb
pop
dec
push
test
mov
jns
mov
pop
pop
scas
loop
out
lret
mov
and
inc
xchg
sbb
xor
fimull
sbb
outsl
mov
jge
dec
shl
dec
fcompl
cmpsb
icebp
movb
cmc
sbb
dec
or
jmp
adc
cmpsl
jg,pn
mov
shrb
pop
mov
mov
or
testl
and
and
addw
into
in
dec
mov
out
mov
aam
pop
std
nop
push
add
std
cmpsl
test
jle
fwait
js
pxor
mov
ljmp
mov
dec
mov
sub
mov
jne
leave
js
out
jae
sub
scas
mov
inc
lret
add
mov
mov
add
and
lret
sub
pop
cs
and
mov
cmp
out
and
inc
es
xchg
ret
adc
out
decb
je
mov
popa
xchg
inc
push
lret
xchg
jg
push
mov
call
mov
mov
outsb
adc
scas
xlat
imul
mov
xor
cmpsb
dec
fwait
test
dec
inc
xor
rcl
imul
cmp
movsb
lods
out
mov
popf
fimuls
xchg
enter
mov
and
or
outsl
aaa
mov
dec
fwait
cld
pop
popa
divb
push
cld
push
daa
insb
push
bound
shl
es
push
out
push
xchg
ds
mov
jb
mov
sub
xor
fnsave
inc
loop
stc
inc
jnp
xchg
sub
scas
xchg
mov
push
insl
sub
dec
xor
xor
mov
sbb
insb
adc
mov
inc
add
adc
jp
mov
xchg
out
stc
and
rcr
test
jp
dec
pop
sbb
out
test
lret
in
icebp
xor
testb
cmp
aad
cmpsl
push
lcall
pop
pop
nop
pop
push
jno
gs
enter
pusha
lods
xchg
xchg
je
add
rcr
cltd
in
adc
and
daa
mov
mov
mov
lret
and
or
in
adc
mov
xor
add
inc
lea
inc
imul
cwtl
insb
xlat
popl
mov
jl
sub
xchg
daa
adc
leave
out
jmp
mov
out
and
push
mov
addr16
in
adc
mov
hlt
pusha
xor
mov
or
icebp
je
aad
enter
inc
dec
in
add
stc
cli
and
pop
mov
in
add
in
fildl
shlb
in
push
dec
xchg
imul
push
movsb
subl
inc
inc
cmp
call
scas
lods
aaa
call
in
push
pop
in
ficoms
rol
leave
jne
xchg
dec
pop
lods
pop
cltd
rolb
testl
jae
pusha
pop
cmc
fdiv
mov
push
add
rol
xchg
inc
ret
test
xchg
mov
stos
pop
imulb
pop
adc
lahf
pushf
cmpl
fldenv
xchg
or
in
pop
clc
fnstenv
xchg
mov
inc
push
and
data16
push
jno
mov
pop
repz
adc
in
scas
loopne
addr16
lret
mov
repz
inc
or
outsl
lret
sub
xchg
adc
imul
mov
ret
adc
repz
and
and
shll
cmpsb
push
leave
cmpsb
jae
jns
dec
mov
cmc
push
test
sub
pop
jno
hlt
sbb
sub
xor
or
mov
dec
adc
aas
mov
sub
ss
adc
inc
adc
cmp
mov
mov
and
adc
mov
sbb
pop
sbb
adc
fsubrs
sbb
imul
popa
xchg
movsl
or
shl
push
dec
iret
es
inc
adc
in
movsb
cli
sahf
dec
push
cmpsl
in
pusha
cmp
or
and
cmp
mov
xor
add
fiadds
testl
jecxz
dec
fstpl
pop
inc
pop
push
fcmove
arpl
sbb
sbb
loope
clc
jo
adc
or
jg
outsb
icebp
add
adc
add
aas
mov
popf
cltd
jo
xchg
dec
mov
jp
popa
popl
push
jno
testb
imul
jmp
cmp
lods
shll
mov
xchg
cmpsb
push
and
imul
or
cmp
mov
mov
cmc
sarb
jmp
sbb
push
into
inc
jnp
cmpsb
push
aaa
xchg
mov
es
sbb
push
scas
jmp
mov
jns
push
mov
or
into
mov
or
push
or
fs
div
jp
xchg
mov
push
movsl
inc
or
out
jnp
in
je
movsb
mov
xchg
out
push
jbe
ret
jp
out
xchg
out
stc
push
xchg
sbb
push
and
mov
insb
scas
negb
mov
cmp
push
push
xor
pop
jmp
cli
daa
jnp
lock
rcrb
mov
jl
mov
imul
loope
pop
inc
mov
cmp
mov
xchg
das
int3
sbb
clc
lods
and
dec
clc
mov
fcmove
mov
lret
mov
cmpb
mov
cmp
add
insb
cmp
loope
lds
ret
xor
out
ds
mov
int
cmp
pop
adc
fs
leave
arpl
pop
xor
jmp
cli
or
dec
jne
cwtl
and
or
ljmp
jno
jle
loop
clc
es
mov
imul
push
iret
lea
or
notb
inc
ss
fs
out
add
lea
popa
pop
or
movsb
push
add
sub
cwtl
cs
mov
pop
orb
add
or
fmul
icebp
iret
adc
dec
xor
mov
int
pop
adc
push
push
cwtl
adc
sti
test
in
test
mov
push
ds
inc
push
aam
stos
loop
fs
xor
imul
mov
push
out
scas
cs
in
mul
cltd
adc
das
add
sahf
sub
dec
jae
call
cld
pushf
push
insl
dec
xchg
sbb
pop
jecxz
popf
fsubr
mov
imul
sbb
mov
jns
dec
mov
addl
sbb
mov
jmp
je
jge
xchg
push
fsts
adc
jno
cli
pop
jno
mov
jns
aam
stc
in
in
cmp
jbe
loope
xchg
shll
xchg
fsts
rcl
fistpll
pop
pop
sbb
sbb
xor
and
cmp
jp
sar
lret
sub
stos
out
xchg
rorb
push
cmp
out
ljmp
cmpsb
loop
push
rclb
cmp
mov
mov
stc
cwtl
lahf
clc
aaa
jnp
adc
cmp
data16
mov
fisttpll
push
arpl
ret
xchg
popa
and
xchg
dec
orb
lds
jo
cwtl
out
es
sbb
mov
inc
xchg
mov
jle
mov
xchg
cltd
sub
cmp
add
mov
cmp
sub
mov
sbb
aaa
adc
loope
jne
sti
or
mov
sub
push
xchg
std
mov
pop
pop
inc
dec
popf
push
or
mov
jo
out
in
sbb
and
inc
test
dec
inc
xchg
ja
xor
adc
and
aam
test
mov
flds
scas
sbb
push
sbb
mov
pop
lret
push
dec
add
push
mov
pop
inc
int
xchg
outsl
and
dec
ret
pop
loopne
or
cmp
mov
scas
rcrl
imul
adc
ljmp
lcall
jp
sarl
in
mov
aam
adc
les
push
popf
fdivl
sbbb
lock
lcall
cmpsb
mov
mov
lret
jl
fninit
rcrb
test
jb
test
lahf
mov
dec
jno
movsb
cmp
xchg
call
xor
lods
mov
inc
push
lods
xchg
loopne
or
xchg
mov
adc
xor
jmp
jno
or
sub
jle
jno
dec
sbb
out
lret
inc
sub
push
cmp
mov
add
xor
jmp
push
mov
or
test
movsl
lret
es
inc
fisttpll
mov
fs
jns
dec
bound
test
dec
mov
cli
cmp
aas
out
aas
loopne
aad
decl
xchg
sbb
addb
enter
add
jle
and
lods
xor
add
inc
adc
mov
mov
mov
negb
jmp
adc
lret
cwtl
add
jge
inc
pop
ret
mov
dec
outsb
mov
dec
dec
add
push
or
hlt
xorb
and
mov
stos
fstps
enter
idivl
dec
mov
in
stc
xchg
ja
jmp
xor
mov
mov
lahf
xorl
push
popf
xchg
xchg
and
fadd
popa
inc
aam
data16
ror
jnp
pop
mov
mov
jecxz
sbb
shll
mov
arpl
xchg
sub
ljmp
pusha
push
data16
inc
stos
rclb
xor
jecxz
lock
jmp
adc
dec
xchg
repz
jo
cmpsl
push
mov
mov
cmpb
cli
jnp
mov
mov
loopne
xchg
lcall
pop
xor
xchg
xor
cld
mov
and
imul
adc
xchg
sbb
out
mov
fidivrl
inc
or
stos
dec
hlt
out
loope
and
aam
mov
or
filds
stc
fisttpll
add
aam
jae
outsl
popa
rolb
inc
mov
jbe,pt
in
or
xorl
fisttpll
clc
mov
int
mov
lea
xchg
ja
lods
inc
or
mov
add
cmp
jbe
stos
mov
insb
add
fisttps
xchg
push
adc
xor
mov
mov
test
das
aam
mov
mul
xor
mov
xchg
test
lret
mov
xchg
rcrl
push
in
dec
scas
adc
xor
cmp
pop
stc
loopne
pop
lahf
in
jno
imulb
mov
out
out
imul
dec
fucomp
popa
cwtl
xor
inc
and
push
lock
pushf
ljmp
imul
out
dec
aaa
bound
jmp
in
push
fwait
push
and
mov
xor
aaa
cmp
cmp
repz
dec
ja
sub
mov
ljmp
enter
nop
mov
pop
sub
cltd
or
push
lcall
icebp
or
push
sub
insl
or
movsb
jmp
jb
mov
fs
insb
in
mov
xor
cmpsl
out
hlt
loopne
scas
dec
jl
pop
and
lahf
pop
mov
aaa
and
cmp
xlat
inc
push
sbb
inc
pop
mov
fs
loop
push
adc
ret
jne
push
adc
pop
arpl
push
mov
int
push
jge
ja
dec
icebp
rorl
enter
add
xor
dec
outsl
xorps
jecxz
ret
cwtl
outsb
mov
jge
test
mov
and
in
lock
jnp
cmp
stos
out
fwait
cli
ljmp
icebp
mov
cmp
add
test
ret
lret
leave
mulb
sub
fcoms
int
fistps
and
xor
mov
mov
sub
mov
loope
xchg
lret
jbe
sbb
outsb
lret
loopne
addl
jnp
hlt
fsubl
lret
arpl
fs
pushf
stos
cmc
cmp
popa
cli
and
xchg
sub
movsl
test
scas
lret
scas
xchg
pop
xchg
scas
push
xor
mov
sub
lret
aaa
lret
iret
les
idivb
inc
mov
push
and
and
pop
loop
cld
push
repnz
ja
cmpsb
dec
pop
pop
stc
test
daa
push
es
jne
xchg
xor
inc
mov
mov
dec
sub
cmc
pusha
sarb
mov
adc
jmp
or
mov
push
jl
test
aas
mov
jno
and
lcall
call
mov
jbe
jl
outsl
inc
add
mov
aaa
test
lret
cmp
mov
negl
pop
inc
adc
in
push
cmp
dec
xchg
inc
lods
sbb
fldt
cld
nopl
sub
jp
and
mov
or
mov
outsb
push
incl
jle
stos
mov
hlt
mov
jno
xor
cltd
repz
xchg
out
push
cmp
fwait
sbb
insb
lcall
imul
add
loop
adc
add
adc
adc
rcl
sbb
mov
inc
or
dec
mov
shll
cmp
add
dec
jo
ljmp
mov
rorl
jp
stos
les
out
sbb
mov
sbb
mov
fsts
andb
lahf
push
in
cmp
or
test
mov
cmp
lock
dec
add
add
jb
cmpsb
cmc
fadd
sahf
xchg
shlb
mov
inc
or
and
test
push
cmp
fmulp
dec
out
push
sub
push
mov
imul
xchg
lcall
mov
jae
push
mov
imul
add
or
icebp
rcrb
and
mov
sub
mov
aaa
pusha
dec
ljmp
mov
adc
jp
mov
int3
fildl
inc
lods
adc
mov
jmp
cld
lahf
xorl
insb
insl
sub
xor
xor
and
pusha
dec
dec
movsl
sbb
add
jg
xchg
inc
sub
inc
cmc
inc
inc
lea
imulb
mov
adc
mov
and
lret
pextrw
mov
add
scas
push
xor
lret
ja
mov
test
es
xchg
nop
dec
xchg
mov
pop
rorb
cmp
jae
sbb
repz
mov
stc
sub
test
sbb
shl
mov
pop
test
outsb
aad
inc
xor
int
sub
mov
sub
adc
dec
insl
nop
roll
add
pop
adc
enter
int3
dec
sbb
inc
xor
mov
sbb
std
aad
pop
xor
push
push
mov
cmp
into
js
push
hlt
idivb
fiaddl
out
mov
pushf
push
arpl
inc
aas
arpl
test
adc
ds
pop
imul
mov
shll
mov
xchg
push
mov
jb
pop
adc
lea
mov
div
add
push
ficoml
dec
lahf
je
adc
cmpsl
adc
inc
jae
adc
lea
dec
mov
cld
jecxz
mov
cmovs
lods
out
mov
in
cmp
loop
push
xor
bound
add
fnstenv
inc
cmc
leave
test
mov
mul
adc
mov
pop
mov
sub
pop
cmp
les
cmp
negb
in
lods
insb
push
mov
orl
mov
stos
leave
mov
pop
pop
cmp
sub
mov
cmpb
pop
leave
adc
pop
fiadds
lcall
cmpsb
push
imul
adc
rcrl
frstor
lds
ljmp
test
sbb
and
add
je
pop
mov
or
icebp
mov
mov
out
in
inc
scas
xor
cmc
add
jns
jl
sbb
xchg
scas
inc
jp
cmpsl
lods
cld
pop
les
outsl
pop
inc
xor
sub
in
clc
sbb
sub
mov
inc
ja
mov
mov
lods
inc
jbe
cmp
dec
fs
xor
cs
cmpl
jl
outsl
pusha
ljmp
scas
mov
sub
insb
inc
cld
mov
js
xchg
push
cmp
iret
lret
and
push
and
jae
ret
clc
cli
icebp
addr16
adcb
ja
dec
stos
fwait
std
inc
popf
idivb
mov
sbb
xchg
dec
or
mov
pop
sbb
mov
xchg
xor
stc
push
popf
shll
jnp
fistps
pop
xchg
jl
sbb
lea
ficomps
push
push
cli
frstor
xchg
sbb
sub
fldl
mov
inc
or
and
cwtl
xchg
xchg
pop
popl
movsb
mov
test
mov
cmc
adcl
mov
jns
jg
push
sbb
mov
add
jae
xchg
jbe
dec
in
jp
jg
mov
push
std
aaa
dec
out
inc
xchg
mov
dec
jp
std
pop
cmp
xor
ss
add
test
add
pushf
outsb
xor
test
lods
jmp
xchg
cmp
std
mov
or
xchg
in
xor
add
popa
bound
push
mov
jne
roll
mov
cmp
dec
jmp
out
mov
lods
scas
pusha
repz
add
adc
mov
jle
cs
mov
pop
xchg
push
jecxz
or
mov
inc
hlt
dec
loop
jb
sahf
add
inc
and
mov
int
dec
idivb
push
adc
lahf
push
ret
sbb
sti
fwait
cmp
lods
int3
lahf
dec
cmpsl
cltd
enter
lods
scas
jle
popf
mov
fisubrl
xchg
inc
and
fisttpll
rcrl
hlt
mov
lcall
iret
xor
push
xchg
daa
shll
cld
cmpsl
cmp
das
mov
sahf
push
js
outsb
push
std
neg
scas
push
or
nop
test
mov
and
lahf
addl
or
sbb
fidivrl
pop
sbb
mov
test
insl
lahf
cld
inc
test
inc
gs
sti
inc
imul
pop
xchg
and
add
adc
call
ja
xor
pusha
dec
sbb
xchg
mov
insl
pop
jnp
sub
addl
pop
fisttpll
pop
sub
jb
ret
xchg
pop
lods
cwtl
dec
je
andl
dec
lahf
test
sbb
dec
int3
testb
mov
or
test
cmp
mov
scas
addr16
loope
lods
xor
roll
mov
cltd
testl
mov
push
clc
mov
push
adc
sbb
hlt
xor
and
jae
cli
stos
mov
dec
div
fsts
xchg
push
or
flds
jo
mov
fwait
jbe
xlat
cmp
mov
pop
mov
dec
into
pusha
xor
stc
jl
cmp
xchg
mov
xchg
cli
pop
sti
in
lahf
int3
jne
push
in
push
mov
pop
lds
sub
pop
inc
push
xchg
xchg
cld
aad
es
mov
and
adc
or
ret
sbb
jge
repz
pop
sub
xor
icebp
cltd
sti
and
push
cmpl
cld
repz
mov
cli
aas
xchg
in
xchg
insb
dec
out
insl
mov
mov
decb
adc
std
and
lea
push
jnp
push
lods
cwtl
shll
test
inc
stos
adc
rol
dec
insl
mull
mov
adc
inc
scas
jle
popa
xor
bound
dec
mov
idiv
ss
add
lret
loop
xor
test
mov
sbb
repz
sub
push
cmp
out
xchg
push
aaa
stos
cmpw
std
ljmp
stos
lret
outsb
and
adc
mov
inc
fucomip
or
jge
mov
xchg
inc
lea
xlat
rcrl
xchg
pop
add
arpl
test
push
adc
sahf
je
cmp
lcall
mov
enter
stos
mov
aaa
add
movsl
std
jns
cs
inc
popf
ja
cmpsb
push
outsb
movsb
mov
pop
dec
lahf
lcall
xor
ficompl
repnz
gs
xor
mov
or
dec
hlt
and
push
test
add
xor
repz
xchg
jo
int
or
pop
and
movsl
arpl
add
adc
pop
inc
in
push
daa
mov
mov
sbb
mov
pop
popf
pop
lcall
shrb
andl
fstpl
add
pop
sbb
les
or
movsb
testb
sti
adc
push
pop
jmp
adc
inc
subl
cltd
movsl
or
call
jp
frndint
xor
inc
pushf
jo
mov
mov
push
or
enter
lahf
cmc
sbbb
mov
push
test
ds
in
cmp
dec
and
mov
out
stc
mov
inc
imul
bound
pop
aad
push
xchg
leave
rcrb
fnstenv
jl
iret
pushf
lret
or
xchg
mov
mov
dec
dec
and
xchg
mov
pop
push
mov
adc
and
add
or
call
aas
xchg
scas
leave
jmp
aam
cmpsl
jmp
stos
adc
lds
aaa
cmp
cmp
shl
popa
jne
stc
jle
xchg
lock
add
inc
pop
les
dec
adc
and
xchg
cmp
dec
movsl
inc
std
pop
pop
fildl
pushf
cwtl
sub
out
jl
adc
push
inc
xor
add
cs
fcomps
xor
ficoml
pop
cmpsl
mov
mov
and
shr
hlt
push
popa
or
out
pop
notb
mov
dec
xchg
mov
out
pusha
or
jl
lock
adc
subb
movsb
mull
inc
xor
ss
test
pusha
xor
add
rorl
xor
push
inc
add
nop
shr
sti
jge
fwait
ds
push
into
gs
xor
daa
mov
inc
pop
jb
mov
fdivl
mov
inc
and
sub
jno
add
and
mov
std
cld
cmc
cmp
and
push
push
rorb
test
fadds
and
xchg
dec
xlat
mov
clc
testb
sbb
push
cmpsl
lret
jmp
sub
loope
loopne
outsl
andb
loope
or
cli
je
sbb
push
cmp
xor
outsb
in
add
in
jae
stos
mov
fwait
push
repz
addl
add
repnz
add
xor
pop
push
fnstenv
cli
mov
push
jg
lret
add
cmp
sti
addl
sbb
leave
imul
sbb
les
ja
movsl
jo
test
repnz
stos
out
jnp
xor
repz
adcb
adc
cwtl
int
lods
inc
jno
fsts
add
jecxz
sub
adc
nop
test
dec
cmpb
xor
pmaxub
xchg
xor
fiaddl
gs
test
lea
mov
repnz
inc
fs
jo
pop
and
and
add
push
rorl
test
leave
hlt
movsl
mov
loopne
imul
cmp
in
popf
insl
push
leave
mov
add
cmp
outsb
mov
xlat
lods
push
xor
scas
pop
out
out
jg
loopne
add
add
clc
jle
jns
shl
cltd
gs
dec
mov
jl
jnp
mov
testl
mov
sbbb
je
sti
jle
popf
mov
xchg
mov
and
sub
pop
push
clc
andl
popa
pop
xchg
mov
movb
sbb
mov
je
inc
cwtl
in
or
cld
and
cs
ss
shlb
fidivs
add
or
xchg
mov
test
fwait
js
jbe
or
inc
xchg
pop
pop
xchg
inc
cmp
cmp
or
pop
xor
and
and
jb
push
inc
into
loopne
jns
adc
push
inc
adc
or
mov
jne
inc
cmp
mov
mov
das
jge
mov
adc
dec
test
into
push
jl
in
sub
pop
cmp
outsl
je
mov
ja
fisubl
std
and
jecxz
jl
mov
movsb
inc
push
push
mov
mov
cmp
mov
jb
mov
push
and
filds
mov
int3
ret
insb
fiaddl
push
push
cltd
pop
inc
push
mov
xchg
push
xor
cmp
sbb
sub
fwait
into
mov
push
js
xchg
pusha
test
imul
cmp
test
xchg
repz
andb
xchg
fnstenv
push
inc
divb
fnstsw
push
notl
repnz
pop
repnz
es
out
fs
jno
add
push
adc
mov
inc
sbb
or
jg
jmp
cmp
fsubrs
and
test
mov
mov
in
adc
push
rclb
test
sbb
or
push
pop
test
lahf
shll
xchg
clc
shlb
adc
pop
xlat
ficoml
inc
test
or
pop
or
push
add
add
stc
shr
inc
xor
mov
jle
and
cmp
daa
stos
loopne
out
jne
and
test
or
testb
in
negl
repnz
dec
sub
mov
stc
sarb
mov
imul
xchg
mov
sbb
xor
pushl
sub
ds
add
mov
dec
rorb
dec
adc
outsb
xor
xor
ret
dec
xchg
adc
sti
or
lds
out
add
fs
add
mov
sbb
inc
std
xchg
mov
push
sub
sbb
push
sahf
setns
and
bound
in
fsubr
mov
pop
subl
fcoms
ficoms
data16
mov
lds
xchg
adc
std
pusha
in
popa
jecxz
jg
push
xchg
sub
shl
and
mov
jecxz
sub
xchg
add
pop
outsb
pop
adc
mov
pop
adc
das
ss
pusha
sti
inc
cs
cmp
sub
pop
retw
inc
or
jge
pop
bound
lods
popfw
mov
jl
or
ss
cmp
loope
add
dec
and
adc
adc
xchg
int
add
sbb
ljmp
arpl
fisttpll
pop
xlat
jne
mov
pop
inc
faddl
sarb
jl
push
sbbl
jo
pop
or
stos
adc
adcb
repnz
sti
or
ret
lahf
sub
mov
rolb
imul
pushf
push
adc
jne
and
out
push
in
out
inc
lret
fwait
jmp
movsb
inc
mov
jb
fwait
je
adc
inc
fmuls
xchg
xor
cmpb
lahf
test
bound
pop
clc
lods
test
rolb
cld
add
xchg
cmp
loopne
jg
push
nop
inc
jno
xchg
arpl
daa
push
iret
fcompl
ret
cwtl
cmp
mov
fldt
js
popa
test
mov
inc
outsb
movsl
sub
adc
jae
jnp
mov
xchg
cmc
pop
adc
jns
out
xor
call
or
or
rcll
loope
xchg
cs
xchg
in
cli
and
imul
imul
loope
lds
outsb
test
cmp
fidivrs
xor
sahf
dec
sub
mov
mov
enter
mov
jne
pushl
mov
pusha
sub
lret
in
mov
mov
mov
jg
test
mov
sbb
or
inc
icebp
mov
shl
nop
fsubl
mov
and
pxor
mov
xlat
dec
push
addr16
lret
imul
jae
cwtl
mov
mov
mov
das
pop
icebp
pop
xor
popf
data16
aas
add
mov
fadds
sbb
fcoml
mov
cmp
jbe
pushf
fsubrl
fsts
ret
sub
out
stos
lret
pushl
lods
popf
xchg
adc
outsb
fwait
push
js
les
dec
ret
daa
sbb
rcrb
mov
ficompl
pop
or
sub
add
dec
hlt
adc
lret
push
xor
in
xchg
mov
loopne
sarl
jb
enter
sti
int3
out
cwtl
out
loopne
mov
inc
out
je
cmpsl
mov
pop
jns
push
push
enter
sub
imul
shld
inc
mov
cmp
orb
mov
arpl
push
arpl
data16
call
int3
out
imul
xchg
mov
outsb
inc
lret
jg
aam
cmp
pop
and
pop
push
aaa
enter
pop
cwtl
shll
cmovl
jno
mov
cmc
jl
pop
faddp
gs
xchg
outsl
lcall
xor
push
imul
jmp
mov
lock
or
pop
and
pop
fmulp
int3
insl
pop
cmp
cmp
movsb
xchg
adc
xchg
xor
push
cmpsb
xor
imul
add
jbe
aam
sub
aas
int3
sbb
rorb
testl
fisttpl
or
fsubs
mov
mov
in
mov
bound
cltd
xlat
popl
in
pop
jle
mov
sbb
pop
inc
out
in
add
lods
xor
jl
push
dec
outsl
mov
jle
lods
lds
ss
xlat
jg
mov
mov
data16
int
aam
rorl
xor
lods
in
cwtl
mov
pop
icebp
push
fwait
out
cmp
lock
jmp
fists
popl
lods
inc
mov
mov
add
les
sbb
mov
jns
or
xchg
es
cld
xchg
xchg
push
add
jae
outsb
bound
mov
fidivrs
mov
adc
notl
mov
jg
xchg
in
setbe
arpl
xor
enter
stos
pop
ret
aam
mov
test
mov
popa
pop
mov
xorl
mov
lock
mov
out
lahf
inc
cli
mov
inc
sub
enter
inc
pop
jb
gs
inc
cmp
sub
mov
repz
dec
mov
fs
lock
sbb
js
xor
lock
int
push
mov
fldcw
adc
or
fistps
aaa
addr16
and
out
lock
je
loop
shlb
dec
je
call
jns
cltd
pop
xor
cmp
add
jnp
jno
lret
pop
fcmove
mov
mov
adcb
mov
in
fmul
mov
testb
adc
cmp
loopne
mov
fnstcw
jo
xchg
ljmp
jae
cmpsl
cmp
fistps
imul
sub
pop
push
pop
mov
or
and
stos
inc
lock
add
xor
fwait
data16
sub
pop
inc
icebp
jno
shlb
adc
fs
dec
fstl
mov
mov
xchg
sub
inc
jge
fisubs
ja
cmp
es
in
cmpsb
add
int3
inc
pop
test
adc
pop
mov
fisubs
xor
fbstp
stc
lods
cs
ss
pop
out
sarb
bound
out
or
insl
hlt
stc
pop
lods
add
and
mov
xchg
bound
dec
hlt
sbbb
sbb
dec
leavew
ljmp
loop
mov
push
cld
insb
fisttpl
cmpsb
add
dec
push
icebp
jg
in
sbb
mov
sbb
sbbb
test
inc
fsubrl
test
push
mov
sbb
negl
mov
scas
mov
mov
fld
xlat
push
scas
add
xor
push
lock
push
sar
or
cmp
pop
shlb
jb
sbb
addb
sub
aad
xchg
sub
push
add
mov
mov
loop
and
pop
mov
sbb
je
dec
gs
dec
orb
scas
push
add
addb
into
jecxz
scas
pop
jp
shl
clc
inc
scas
iret
or
pop
cs
cli
aad
push
je
enter
fcoml
sbb
lods
sub
es
adc
xchg
push
xor
mov
mov
insb
aam
imul
sub
sub
popa
movswl
add
ret
test
cmc
mov
fs
leave
int
pop
int3
cmp
push
and
add
ficoml
xor
sbb
adc
popa
xor
mov
cmp
das
fidivrs
pusha
or
or
adc
test
push
lcall
inc
into
test
ret
clc
pop
xchg
push
sbb
icebp
loopne
lock
fwait
ds
sub
cwtl
adc
xor
out
mov
adc
push
sub
enter
clc
mov
mov
call
and
add
xlat
insb
mov
ds
out
xor
inc
push
push
fadds
insl
enter
cmp
insl
out
dec
cmp
stos
dec
negl
syscall
loopne
lock
sbb
rcl
dec
mov
add
push
in
jmp
out
loope
jno
inc
shr
inc
cltd
inc
add
movsb
stos
fnsave
sbbl
loop
mov
mov
push
int3
out
aaa
adc
xchg
sti
xchg
stc
fidivrl
leave
inc
jnp
adc
insl
sbb
mov
mov
xlat
aad
sbb
ss
sub
out
sub
jns
adc
or
mov
mov
mov
xchg
cmp
cmp
and
adc
sarl
outsl
aas
test
es
jbe,pt
js
fxch
push
xchg
mov
lret
js
aad
or
je
loope
dec
or
push
mov
or
add
adcl
in
popa
mov
sbb
clc
mov
cli
adcb
adc
nop
mov
sub
scas
xchg
jmp
inc
fucomp
and
pop
mov
loopne
jo
jnp
loope
hlt
xchg
std
xchg
jnp
ljmp
jb
lahf
jb
out
add
aas
or
ss
loop
and
rcll
inc
mov
xchg
pop
lcall
ljmp
adc
imul
aas
sub
ja
scas
fisubs
jmp
dec
lods
add
popa
mov
in
push
pop
test
sbb
jo
cwtl
sub
mov
fldl
xchg
adcl
pop
fnstcw
cltd
pop
cmp
xor
cltd
push
fstpt
scas
add
into
scas
les
loope
fs
or
stos
fdivl
lea
fdivrs
scas
mov
mov
and
ret
je
dec
push
leave
mov
cld
out
enter
xchg
shrl
add
jne
pop
cs
imul
std
fwait
pop
cmpsb
jmp
sbb
pop
add
bound
out
lea
jbe
mov
mov
pop
pop
imul
cmp
mov
mov
ret
pop
adc
sahf
jecxz
xchg
push
int
sbb
gs
cmp
js
mov
xchg
fmuls
leave
test
fadds
push
or
hlt
das
dec
jo
jne
and
bound
lods
mov
jp
and
push
cmc
xchg
fabs
inc
xchg
orps
cs
jle
fisubrs
xor
cmp
lods
push
and
scas
fmuls
ucomiss
or
call
std
setno
jg
add
jle
into
lock
mov
mov
mov
gs
loopne
or
add
iret
inc
repnz
push
das
cli
test
push
cltd
leave
fsubl
sbb
and
mov
adc
mov
mov
es
fcomip
clc
cmp
jnp
mov
pop
mov
out
xchg
cmpb
cmp
pop
jg
les
pop
xchg
scas
or
jg
js
inc
pop
stos
dec
and
cmpsl
ret
adc
sub
js
cmpsb
xchg
jp
es
dec
mov
inc
xchg
scas
xchg
loop
mov
adc
mov
fdivr
movb
orb
cmpsl
xchg
jo
push
fsub
xor
and
jl,pn
lret
pop
or
adc
lds
push
call
add
repnz
mov
and
scas
fistpl
mov
cmp
inc
rclb
outsl
mov
sub
ficoms
cmpsb
adc
mov
push
push
cmp
push
inc
cmp
xlat
ja
jne
in
sbb
cmpsl
movsl
push
cltd
gs
xor
dec
ja
das
enter
pop
or
or
ret
data16
cmc
sub
xor
sbb
xchg
leave
rcrb
lock
orl
mov
sbb
fcomi
lret
lods
mov
xchg
dec
inc
adc
xchg
or
data16
imul
or
out
inc
ret
fnsave
or
aas
adc
in
adc
fisttpl
into
adc
jge
and
in
xlat
mov
xchg
ret
lea
mov
add
movsl
mov
jp
jp
xchg
pop
insb
mov
mov
dec
je
aaa
mov
jle
add
sub
mov
adc
mov
insb
in
jae
push
or
mov
mov
xor
loopne
clc
mov
lock
xor
insl
push
mov
push
ret
stos
xor
inc
ror
mov
jecxz
sbb
mov
mov
fidivrl
xlat
outsl
xor
push
jl
xchg
mov
fdivr
leave
or
out
push
push
mov
int
push
jle
in
xchg
pop
aas
out
sti
jle
mov
inc
jle
test
mov
addr16
ret
jecxz
mov
push
add
hlt
push
inc
sbb
inc
dec
out
push
mov
imul
ja
int
subb
fsts
dec
cmpsl
and
mov
cmp
shll
adcb
loope
mov
inc
cmp
cmp
and
mov
outsb
lods
iret
or
sbb
push
add
and
pop
dec
jg
sub
lods
js
adc
mov
dec
lret
negl
adc
dec
and
scas
addr16
cli
sub
xchg
add
std
push
into
dec
add
xchg
mov
jp
adc
xor
mov
lcall
inc
aam
fisubrl
iret
mov
pop
cmp
sub
inc
jo
mov
xchg
jp
cmp
mov
icebp
popf
sub
jle
or
mov
or
mov
cmpsb
pusha
sbb
or
xchg
and
outsb
pop
into
mov
in
lods
adc
xchg
popf
mov
pop
dec
inc
arpl
sub
aam
push
sbb
and
ret
in
not
xor
adc
imul
pop
pop
call
sub
test
push
push
iret
dec
rcl
dec
mov
inc
hlt
pop
sbb
int
imul
call
and
frstor
xchg
lret
imul
mov
xchg
pop
xor
mov
xor
cmpb
mov
ficompl
int
sbb
push
mov
push
movsb
pop
mov
pushf
inc
sbb
lcall
sti
sbb
inc
iret
and
pop
mov
fucomp
fs
inc
add
aam
add
dec
adc
outsl
sub
push
jl
sarb
cmpsl
jno
inc
sub
pushfw
lcall
lea
mov
enter
test
sub
lret
dec
rclb
outsb
sub
insl
dec
mov
fiadds
jne
aam
movsl
inc
imul
stc
adc
icebp
ja
popf
xchg
mov
jbe
cwtl
movsl
imul
xchg
faddl
xor
lds
or
push
cwtl
mov
push
out
xchg
push
mov
mov
mov
mov
mov
cmp
mov
jne
mov
dec
xchg
add
icebp
ds
cmp
mov
adc
daa
ja
lret
lcall
data16
movsb
inc
lock
adc
popf
ljmp
push
or
es
stos
mov
mov
jne
xor
sti
movsl
sbb
cmc
xchg
add
pop
mov
xchg
pop
adc
aas
out
int
jo
add
xchg
imul
xchg
lret
jns
push
in
repz
lcall
pop
jne
jno
cmpsl
adc
jg
fiaddl
mov
mov
mov
inc
fbstp
arpl
or
cs
js
xor
ss
pop
or
and
lds
sub
das
pop
jbe
sub
mov
xor
repnz
mov
sti
cli
push
fsubr
call
push
jnp
movsl
jae
lcall
shl
push
cmp
outsl
push
ds
arpl
iret
pop
jo
inc
and
fxch
xchg
sub
jp
jns
push
add
jmp
mov
push
sub
es
roll
rcll
lret
adc
in
mov
int
clc
testb
adc
mov
jecxz
imul
and
cltd
popf
push
push
insl
jle
mov
mov
mov
sub
dec
loope
dec
jbe
adc
loop
stc
mov
addr16
push
mov
or
clc
rorb
sarb
push
xchg
insl
mov
cmp
inc
scas
cltd
outsb
stc
lods
or
das
int3
pop
or
sahf
imul
test
inc
push
adc
jnp
inc
mov
movsl
scas
pop
rolb
mov
push
push
xor
in
adc
sbb
call
push
jnp
pop
scas
sbb
mov
jge
ljmp
popa
fildll
pop
test
enter
or
ja
scas
fxtract
push
ljmp
cs
jecxz
mov
xchg
aas
xor
mov
inc
pop
fsubl
add
inc
dec
or
xchg
fs
fwait
push
rcr
insl
pop
and
jb
lock
pop
cmp
ret
adc
fstps
inc
icebp
outsb
mov
sbb
push
cs
dec
daa
mov
daa
pop
cmp
pop
popf
mov
xor
sub
sub
mov
inc
mov
fnstcw
push
mov
inc
setbe
and
inc
sbbb
adc
mov
das
jae
ficoms
or
dec
cwtl
ret
lcall
xchg
add
fwait
sti
push
sub
outsb
dec
jg
adc
sbb
bound
mov
or
sub
sbb
gs
popf
in
mov
jbe
jnp
sbb
sbb
clc
add
push
sti
mov
loop
jo
and
in
addr16
popf
fsubl
jbe
je
in
xor
icebp
pop
and
inc
dec
movsb
sub
lds
addr16
and
repz
pop
or
out
lock
xchg
insl
inc
push
iret
adc
sub
idiv
clc
push
add
lahf
cltd
icebp
mov
sbb
push
jo
mov
jge
sbb
shll
hlt
mov
or
cmpl
add
push
xor
lock
push
lods
inc
popf
les
xchg
mov
add
add
cmpb
aam
pusha
mov
cmp
mov
xor
movsl
jecxz
pop
mov
jno
int3
or
add
inc
xchg
mov
sbb
into
dec
packssdw
pop
aam
xchg
xor
mov
lods
push
into
xor
gs
div
push
pushf
imul
scas
push
add
mov
and
in
bound
orb
or
mov
and
fildl
in
lahf
imul
dec
rcll
push
mov
es
aas
hlt
lods
cmp
inc
push
popf
mov
lock
stos
push
loope
xor
sub
dec
clc
test
xchg
add
aas
and
sub
divb
pop
sbb
cmc
xchg
sahf
sub
arpl
xchg
loopne
and
aas
stos
mov
cli
ja
xchg
adc
push
cwtl
pop
inc
es
aam
lahf
mov
sub
cli
iret
push
cld
jecxz
cmp
xchg
push
daa
xchg
scas
out
shlb
xchg
jbe
mov
inc
mov
mov
mov
out
or
and
icebp
pop
repnz
repnz
imul
ljmp
ljmp
outsl
or
imul
lea
lahf
jge
rorb
in
push
and
xlat
or
push
mov
test
add
int3
std
adc
jecxz
inc
test
popa
daa
fidivrs
leave
push
movsl
xor
jl
jg
adcl
test
pop
adc
jnp
fdivl
dec
int
or
adc
cmpsb
dec
fs
adc
push
add
lods
jbe
lret
js
sbb
mov
aam
fwait
mov
mov
mul
pushf
mov
add
lock
icebp
add
push
fdivrs
insb
xor
ffreep
cltd
adc
popf
loope
aad
dec
sub
clc
mov
cmp
pmaddwd
lds
and
jns
into
jno
inc
jecxz
jl
shlb
adc
mov
push
pop
mov
inc
iret
fldcw
push
mov
jmp
jp
and
and
xchg
and
mov
cmpsl
imul
in
xchg
cs
adc
lahf
cmpsl
ficomps
jmp
mov
insl
out
or
outsb
xchg
mov
cmp
or
outsl
dec
test
fmul
mov
sbb
repnz
mov
dec
xorl
testb
insl
hlt
aad
pop
cmp
adc
idivb
ja
les
neg
pop
sub
fucom
mov
fstpt
cmpsb
push
or
bound
std
dec
loope
mov
je
jnp
and
inc
in
dec
call
pusha
push
int3
xor
mov
movsl
aam
outsb
fildl
mov
adc
ljmp
stc
fildl
sub
mov
cmpl
cmp
cld
mov
dec
test
adc
lcall
cmpl
fbstp
int3
or
fidivl
lods
mov
mov
pop
outsl
aam
inc
jo
mov
inc
adc
fildll
jae
dec
nop
add
push
aas
out
jmp
mov
rolb
mov
xchg
sbb
lcall
sub
mov
cld
inc
mov
pop
mov
pop
sub
lret
sbb
sbb
shll
in
mov
lea
vcvtss2sd
orl
mov
outsb
daa
adc
jmp
mov
pop
sub
jo
mov
jg
adcl
ja
dec
or
mov
inc
icebp
sub
and
mov
lret
mov
pop
cmp
das
mov
fdivs
mov
cmp
dec
and
repz
lods
out
insb
popf
or
inc
push
std
bound
das
inc
stos
dec
sub
pop
sahf
xor
loope
mov
push
or
and
fsts
and
les
int
out
jmp
xchg
hlt
int
push
pushf
adc
cmp
sbb
fs
sub
dec
mov
pop
mov
lock
lret
pop
jne
cli
or
pop
pop
sbb
out
push
add
lock
daa
or
pop
xchg
stc
push
lods
xor
mov
mul
test
adcb
mov
vmaxss
pop
sbb
add
mov
sbb
flds
stos
and
sbb
fmulp
cmpsl
push
pop
jge
cmp
mov
adc
push
cmp
aaa
sbb
mov
ljmp
adc
adc
lods
test
xor
mov
scas
mov
jae
inc
pop
jg
cmp
test
push
mov
je
fwait
lods
es
in
sahf
loop
aas
scas
lahf
adc
dec
xor
daa
or
push
icebp
aad
mov
sub
in
loop
jecxz
or
cmp
cmpsl
sbb
push
mov
jne
inc
out
repz
ljmp
ljmp
test
add
mov
adc
cmp
inc
xchg
adc
xchg
stos
out
pop
sub
lahf
xchg
lahf
sbb
jae
pushf
pop
xchg
out
fwait
in
mov
cmp
sbb
mov
pop
jmp
jecxz
repz
lret
jmp
ret
push
sbb
imul
ret
mov
xor
xchg
mov
or
lods
add
rcrl
dec
sbb
orb
loopne
lret
pusha
mov
jbe
push
adc
inc
js
cmp
testl
mov
dec
fistl
mov
jns
cmp
lods
cmc
jnp
aas
dec
fwait
das
dec
xor
inc
pop
and
push
mov
pop
sbb
fildll
popa
mov
or
push
push
mov
int
lahf
popa
mov
dec
xchg
fildll
les
filds
adc
jnp
cmp
pop
push
daa
dec
int
mov
out
pop
pop
jg
jmp
jge
mov
jge
fwait
fs
je
xchg
cmp
add
jbe
mov
scas
sarl
inc
out
xchg
cs
mov
push
aad
and
xchg
jne
movsb
gs
mov
lods
mov
cmp
repnz
adc
mov
mov
push
stos
adc
push
aad
lods
mov
fcoml
cmp
out
lock
jns
push
or
xor
repnz
xor
iret
sbb
rolb
pop
pop
leave
or
or
or
jmp
test
sub
pop
ljmp
push
sbb
outsl
xchg
pop
sub
inc
js
clc
mov
and
mov
xorl
add
mov
mov
jns
push
adc
mov
out
dec
or
call
arpl
lock
add
out
lock
xlat
ror
xchg
pop
mov
into
dec
in
xor
arpl
xor
jg
ret
push
pop
pop
in
mov
aam
add
mov
out
in
dec
pop
cmpsl
int3
adcl
adcb
cmp
jns
sbb
pop
sbb
cmp
into
pusha
in
push
or
inc
xchg
cmp
pop
ficoml
aam
add
out
push
sub
jne
mov
lods
ficoml
xor
inc
xchg
jnp
arpl
jno
cli
insl
xor
and
call
xor
fs
outsb
mov
jae
or
jne
movsl
aad
jmp
xchg
lods
jns
in
inc
ret
lahf
cmpl
pop
scas
imulb
dec
cmp
xor
test
pop
lds
mov
push
into
sub
test
pop
loop
dec
sub
sbb
movsb
cmc
bsf
jle
in
int
xchg
sub
int
cmc
imul
or
cli
or
xchg
jle
push
rorl
movsb
repz
dec
incl
fistpll
pop
add
add
mov
es
in
bound
imul
cmpsb
call
xchg
xchg
sbb
data16
sub
icebp
mov
mov
inc
sub
call
ret
sub
fwait
pop
fiadds
or
imul
sub
lock
cmc
into
mov
cmp
jb
sbb
mov
cwtl
or
mov
scas
xor
loope
mov
cmp
adc
out
lea
dec
pushl
fsubs
sub
push
mov
lods
call
lcall
xchg
and
pop
xchg
mov
roll
sub
insl
call
mov
or
cmc
dec
lock
btr
or
xchg
dec
loope
stc
rorl
lods
adc
jp
into
movsl
mov
cmp
out
xchg
shrl
inc
mov
rcr
movsl
add
cmp
mov
popf
lret
mov
push
dec
cmpsb
aaa
pop
sahf
add
iret
inc
or
pop
stos
daa
mov
jbe
ror
add
dec
dec
xor
pop
stc
fwait
popa
mov
out
pop
xchg
and
out
dec
mov
xchg
mov
popf
push
pop
popa
mov
rcr
dec
das
in
andb
test
lahf
mov
mov
xlat
mov
call
sarl
cmp
mov
push
int3
mov
cltd
xor
loopne
pop
je
pop
pop
or
andl
xchg
add
arpl
sarl
push
jecxz
ret
loope
or
clc
sub
je
mov
cwtl
cmp
bound
call
dec
mov
xlat
frstor
mov
ss
mov
dec
loope
pop
movsl
je
int3
les
mov
call
mov
xor
cwtl
jo
in
sbb
insl
pop
mov
int
xchg
add
mov
jge
hlt
sbbl
adc
cmp
mov
pop
sub
shrb
imull
aas
sub
shlb
enter
mov
or
out
and
ja
sbb
cli
jmp
inc
xchg
pushf
pushf
or
dec
jne
inc
fbstp
ds
repz
push
mov
stos
aad
call
in
pop
fnsave
or
push
imul
push
add
jb
mov
rolb
pop
popf
dec
lahf
scas
sub
cmp
cld
xchg
lcall
or
add
inc
mov
jbe
scas
ret
ja
test
fildll
fwait
cmpb
adc
xor
popf
rcrb
in
push
push
mov
mov
adc
push
adc
pop
rclb
shl
jle
xchg
stos
lgs
dec
stos
pop
mov
cwtl
cs
enter
std
push
aad
pop
add
pop
xchg
stos
data16
leave
fs
xchg
xlat
sbb
popa
jnp
lods
cltd
pop
ret
negb
xchg
sti
daa
sub
hlt
cmp
sub
outsb
rorl
cmp
inc
js
mov
clc
xchg
ds
sahf
mov
inc
or
cmp
xchg
arpl
pop
aaa
inc
pop
ds
shufps
cmpsb
add
mov
push
call
test
test
jg
or
clc
adc
push
out
mov
mov
in
lahf
ljmp
pop
xchg
pop
fwait
orl
rorl
ja
mov
lock
ret
aam
pop
aad
pop
int3
cwtl
mov
push
dec
sub
add
mov
xchg
shll
adcb
je
imul
dec
push
ret
addb
xchg
das
insb
lahf
mov
pop
arpl
pop
insl
outsb
xchg
and
gs
inc
mov
ret
nop
mov
aad
aad
xchg
movsl
jge
in
sti
out
lods
cmpsb
cld
sub
adc
out
mov
jnp
lods
loopne
sbb
int
insb
inc
pop
mov
lods
mov
cld
mov
jbe
fisttpll
dec
mov
dec
inc
cmpb
into
sbb
fsubs
movsb
or
sub
lock
mov
test
mov
mov
push
mov
push
or
lods
lret
adc
mov
cmp
popf
mov
mov
dec
daa
data16
clc
out
or
imul
ret
cmp
notb
add
dec
mov
mov
icebp
mov
sbb
int3
imul
popl
sub
push
pop
pop
dec
aad
push
pop
jns
sbb
or
jmp
notb
jne
pop
and
cli
out
pop
sbb
mov
mov
inc
mov
jg
insb
adc
mov
inc
loopne
jnp
ds
mov
push
das
leave
dec
push
std
and
mov
ja
imul
xor
mov
js
xchg
vandps
scas
cmpsb
mov
inc
addr16
dec
cvttps2pi
mov
out
jbe
cli
lea
addb
and
push
lods
dec
mov
xchg
data16
mov
in
mov
pop
inc
in
jl
inc
jmp
xor
or
in
mov
shll
or
fisttps
pop
andl
sbb
in
and
jge
adc
inc
les
jp
jnp
dec
fwait
nop
and
scas
push
add
shrb
mov
inc
inc
lcall
xchg
inc
rorl
inc
test
cmpsl
enter
jecxz
xchg
testl
movsl
add
sti
adcl
pop
push
cmp
jl
int
hlt
dec
sbb
push
insl
push
mov
pop
into
cwtl
and
test
jae
out
imul
addr16
insl
and
cs
sbb
dec
jecxz
xor
sahf
lods
aam
or
jge
imul
jno
mov
cmpsl
insl
popa
sti
inc
nop
imull
adc
out
push
inc
outsl
rorb
push
pop
push
ret
loop
jb
inc
lret
push
xlat
jge
aam
adc
sub
pop
push
ficompl
jmp
mov
push
in
loopne
mul
mov
test
push
sbb
xor
dec
out
jae
mov
push
or
pushf
faddl
stos
repnz
add
sub
repz
or
movsw
lds
jmp
mov
ds
sbb
mov
dec
mov
push
lcall
mov
imul
push
mov
insb
pop
dec
xorb
mov
push
pop
scas
mov
test
pminsw
xlat
je
cmpb
and
test
fidivs
sub
xor
xor
clc
cmp
das
xor
call
loope
jmp
and
mov
sub
sub
ret
adc
inc
mov
nop
adc
or
iret
imul
es
mov
sub
pop
lock
fsts
inc
push
mov
shll
mov
dec
cmc
mov
int3
sbb
lods
std
lds
imul
daa
in
jmp
sbb
push
cmp
push
shlb
arpl
aaa
cmp
shlb
push
sti
int
mov
add
mov
jne
mov
pop
xlat
sbb
and
mov
cmp
inc
loope
das
lret
pop
loop
and
sub
add
or
pop
inc
stos
sbb
xchg
mov
cmpps
sub
in
or
cwtl
push
xor
xchg
push
stc
sahf
aam
arpl
dec
sbb
sbb
lret
sbb
pop
out
pop
mov
scas
jle
rcl
pop
push
imul
push
dec
lds
iret
add
cmp
imul
dec
push
rol
mov
leave
push
test
sbb
cmp
pushf
pop
inc
je
enter
hlt
pop
scas
cmpsl
or
sbb
jmp
sbb
ds
lock
cmp
jo
adcb
in
je
jp
xorb
cmp
daa
push
cmp
adc
jb
cmp
jg
punpcklwd
add
jnp
stos
icebp
loope
sbb
stos
mov
data16
idivl
dec
flds
loop
mov
test
data16
or
cmp
pusha
mov
and
mov
es
mov
mov
scas
inc
cmpsb
xchg
inc
xorl
pop
push
jne
jae
movsb
inc
cmpsl
dec
add
adc
lds
adc
mov
cmc
std
out
cmp
mov
dec
jl
shll
shll
lret
jmp
adc
xor
arpl
daa
mov
inc
test
dec
aaa
pusha
inc
testb
push
rorl
jnp
jo
movsb
stos
dec
mov
es
sub
pop
iret
inc
aaa
adc
inc
xchg
and
pop
sub
push
addr16
fdivrl
xchg
ss
cmp
loop
aaa
or
roll
xchg
pop
leave
outsl
dec
insl
push
cmp
mov
test
mov
popf
xor
test
popa
pop
lahf
lcall
lcall
or
sub
xor
fs
push
ret
and
push
jnp
mov
sbb
cmpsb
mov
mov
ret
outsl
mov
xor
xor
xchg
call
sahf
push
push
xor
dec
pop
inc
popa
mov
fidivl
jns
sub
mov
mov
mov
out
dec
loope
insb
movsb
mov
cli
repz
sub
out
sahf
out
adc
dec
insl
jns
lret
mov
pusha
jne
adc
lods
mov
stc
adcb
std
inc
insb
inc
pmulhuw
push
arpl
xchg
stos
xchg
testb
sub
inc
pop
push
outsb
lods
fmull
aad
pop
dec
std
lods
insb
mov
pop
dec
ret
cwtl
lahf
andl
stos
lods
data16
popa
imul
and
movl
sbb
fdivrl
je
lret
mov
pop
divl
out
mov
out
xchg
pop
pop
jl
lods
push
dec
push
mov
push
enter
xor
xchg
fldenv
inc
cld
popf
stc
aas
xor
in
out
push
bound
jge
ds
scas
and
cmpsl
das
sahf
xchg
cld
out
add
mov
cmp
add
adc
imul
loop
mov
fisttpll
pop
iret
adc
mov
fs
sbb
or
jns
sbbl
lret
insl
or
or
dec
stos
sarl
mov
xchg
inc
or
or
sbb
or
fs
xchg
aaa
adc
in
sub
inc
adc
mov
in
cmp
jecxz
add
sub
adc
jne
push
sub
dec
les
cmp
fs
cmc
sub
jo
in
or
shrb
jle
push
cmp
movsl
sub
in
stos
inc
and
push
xchg
jg
ss
test
rcrb
fidivl
orb
jbe
lea
mov
das
or
cltd
stos
popf
xor
iret
or
out
lds
jae
inc
fcmovbe
dec
out
mov
scas
inc
mov
push
fsubr
or
dec
scas
adc
dec
sub
inc
xorb
loope
das
enter
lock
mov
cmp
inc
dec
jmp
adc
mov
nop
movsb
or
dec
pop
cmp
dec
fisubrs
push
stos
insb
and
jecxz
cwtl
jbe
aam
icebp
ret
mov
push
adc
jg
fistps
decl
fsubr
xchg
pop
divl
out
or
jge
or
sbb
pop
mov
rcl
mov
pop
cmpsb
and
lcall
iret
fsub
arpl
inc
jo
mov
and
xchg
ja
xor
cld
jecxz
push
dec
add
mov
rolb
push
popf
bound
mov
lcall
pop
loop
push
inc
popa
jae
enter
insb
xor
lock
pop
out
pop
fucomip
andps
hlt
lock
in
push
loopne
outsb
xor
adc
sti
popf
or
cmp
adc
arpl
bound
rcr
testl
xor
dec
insl
cmpsb
outsl
add
in
mov
nop
cmp
cld
xchg
inc
xlat
mov
iret
repz
adc
clc
or
fiadds
dec
ret
add
loopne
cmp
inc
and
rclb
pop
jp
into
add
sbb
mov
fdivrl
xchg
sub
lea
add
insl
nop
push
adc
push
dec
dec
xchg
push
xchg
pop
add
xchg
les
and
iret
std
or
aaa
dec
xor
pusha
lret
pop
sbb
push
and
es
mov
js,pt
repnz
cmp
sub
popa
cld
in
lds
dec
in
jmp
shll
testb
dec
xchg
inc
jnp
mov
mov
jmp
fisttpl
inc
mov
xlat
arpl
dec
cs
sub
sahf
xor
scas
in
pop
scas
mov
shlb
inc
stos
mov
adc
loopne
jae
jle
jp
imul
jle
ds
mov
xor
icebp
in
or
push
inc
test
shrb
lcall
enter
pop
adc
aad
cmp
bound
inc
mov
imulb
push
cli
das
push
rol
push
sub
jmp
cli
inc
daa
mov
in
stc
mov
mov
iret
sub
jmp
sahf
out
sahf
lret
xor
enter
xor
ljmp
push
jmp
and
gs
fwait
shll
ja
add
sub
cmp
ljmp
mov
and
add
push
jne
pop
xchg
filds
xchg
push
imull
mov
push
cltd
sub
imul
testl
push
mov
lcall
mov
stos
push
test
gs
sahf
adc
adc
cmp
xor
mov
cmc
sub
dec
push
mov
fdivrs
vfrczsd
cmpsl
xchg
push
adc
mov
sbbb
jne
ret
in
cmpsb
fsts
dec
xor
gs
xor
mov
lret
push
push
pop
and
jg
pop
cmp
mov
or
cld
push
ret
sbb
pop
dec
jns
in
xchg
lods
ljmp
inc
movsl
pop
mov
addr16
dec
test
test
ret
sub
sbb
adc
xchg
out
cmp
hlt
push
insl
ret
sbb
test
in
ss
cmp
jb
addb
xchg
sahf
les
and
push
lea
stos
jae
testl
and
cmpsl
fimuls
and
xor
sub
int3
xchg
add
sub
adc
das
cltd
das
cmpb
test
jle
stos
lods
or
pop
ret
popf
lds
jecxz
push
mov
stos
inc
pop
lods
mov
imull
ljmp
test
cmc
ficomps
jne
jns
mov
es
and
jae
in
xlat
jecxz
shlb
lahf
push
subb
sub
xor
shrl
fildll
dec
dec
jl
add
inc
les
and
es
ds
mov
pop
cltd
cmc
jp
ljmp
jno
outsb
js
mov
cmpsl
push
sub
int3
aaa
in
mov
xor
test
dec
push
push
sub
xchg
int
es
jb
sarb
push
aad
out
mov
lret
iret
dec
or
sbb
fwait
adc
stc
imul
and
mov
imul
pusha
dec
aad
popa
loopne
push
into
movb
inc
mov
sub
lods
scas
mov
das
push
mov
fincstp
test
push
iret
pop
mov
sti
pop
cmp
jno
fdivrl
in
loope
cmc
mov
into
cli
fadds
outsb
jne
and
dec
pop
fldenv
pop
add
arpl
cs
jl
cmp
add
dec
mov
iret
adc
jns
adcl
ljmp
add
and
sbb
cmp
mov
into
int
xor
ss
ret
cmp
add
cld
hlt
mov
lret
es
pushf
outsb
iret
sbb
aas
aam
fwait
mov
mov
lret
pushf
xchg
and
iret
dec
cs
and
aam
adc
ret
inc
xor
inc
pusha
jo
frstor
jnp
xchg
sbb
in
inc
icebp
xchg
shll
movsl
jo
stos
rcll
sub
and
mov
lret
fidivrs
xor
dec
dec
lock
imul
fnclex
shrb
aaa
cltd
sahf
cmp
adc
jge
pop
mov
lret
sbbb
inc
and
daa
adc
test
leave
adc
sub
mov
sub
mov
adc
roll
popl
jns
xchg
lret
jle
ds
rorb
push
adc
pop
xor
jge
mov
xor
fyl2x
mov
aaa
mov
add
push
shll
in
pop
fistps
clc
es
cli
clc
out
xchg
das
outsl
sahf
cmpb
mov
xor
push
jnp
dec
and
or
hlt
inc
push
jae
mov
out
scas
mov
test
mov
bound
pop
xor
mov
rol
mov
jno
insb
cmc
hlt
push
in
jecxz
popa
shll
push
scas
jnp
test
stc
cmp
inc
sbb
adc
jne
pop
test
mov
testl
push
scas
mov
mov
mov
mov
mov
imul
xchg
jbe
lcall
clc
jnp
int3
sti
loope
push
les
daa
std
mov
xor
push
mov
sbb
test
aas
mov
aas
add
ljmp
out
cld
inc
add
xchg
push
mov
imul
rcll
pop
mov
jb
cmp
add
or
imul
inc
xchg
pusha
popa
mov
outsl
xor
jb
fnstsw
jp
jge
bound
mov
sub
push
cs
or
sbb
cmp
movsl
pop
mov
in
push
fmuls
mov
sbb
lds
jle
jno
pop
fstpt
push
pusha
mov
adc
lcall
mov
fsubs
sub
f2xm1
shr
xchg
bound
inc
int
out
sub
ds
mov
lcall
add
fsub
and
popf
mov
out
rolb
sti
fsubr
cmp
movsb
mov
out
clc
mov
loope
jo
push
addr16
xor
mov
loop
in
xchg
incb
outsl
js
adc
sbb
les
sub
stos
test
inc
popa
nop
fiadds
dec
and
cmp
add
out
dec
push
xchg
es
insl
mov
test
cltd
fldcw
inc
divb
jb
in
jb
lds
jg
or
shrb
dec
fstl
mov
add
and
xchg
cmp
mov
sti
vmovsd
in
mov
sarb
enter
loopne
add
mov
adc
in
xchg
call
cwtl
repnz
lcall
cmp
jl
js
dec
mov
xor
cs
neg
mov
lret
jbe
adc
loop
dec
test
pop
pop
jae
mov
push
cs
jnp
ja
fdivl
cli
push
enter
orb
adc
sub
leave
subl
mov
fisubl
fnstsw
inc
loope
aad
cmp
bound
and
add
mov
mov
scas
clc
in
testl
das
jae
mov
cs
fcomps
mov
loopne
movsb
out
test
adc
and
in
popf
dec
adc
or
inc
xlat
dec
shrl
ror
lret
mov
testl
fisttps
cmpb
fistpl
cmp
ss
daa
xor
inc
cli
push
rclb
lods
cld
add
push
fdivrl
mov
aad
mov
dec
pop
jge
mov
dec
enter
andb
icebp
xor
jbe
push
ficoms
sub
fnstsw
in
mov
pusha
ljmp
inc
repnz
loop
setnp
psllw
cmp
hlt
ljmp
mov
jg
xlat
out
xchg
fnsetpm(287
test
or
cmpl
cwtl
or
ret
mov
and
xchg
dec
sti
adc
sti
sbb
mov
ret
scas
mov
call
outsb
xchg
dec
dec
inc
mov
xor
sti
and
test
cwtl
dec
add
xchg
mov
or
cmc
imul
and
pop
mov
cmc
in
inc
ret
adc
mov
lret
scas
xchg
fisttpll
mov
outsl
repz
inc
mov
test
cmp
dec
or
sbb
xor
in
jmp
push
addb
or
fnstcw
icebp
and
sbb
dec
loop
sub
cmp
mov
inc
lret
mov
testb
or
insb
push
add
cwtl
test
jae
mov
xchg
inc
mov
push
cmp
jne
inc
add
mov
inc
pushf
adc
int
add
mov
mulb
xchg
lcall
inc
loop
pop
mov
lea
fcomi
pop
je
xor
xor
ds
dec
push
sbb
sub
and
shlb
push
sbb
push
mov
call
out
popf
sub
inc
and
jg
xchg
push
dec
cmp
imul
push
pop
push
mov
or
icebp
out
std
icebp
cs
and
mov
daa
ret
scas
xor
aad
lods
aaa
into
xchg
xlat
cmp
cmp
add
lcall
popf
popa
jmp
sub
mov
add
or
jmp
test
dec
sbb
hlt
fcmovnbe
movsl
sub
test
pop
or
insl
sub
xorl
fdivs
cmpsb
mov
mov
add
add
test
jno
xchg
jecxz
inc
sbb
lods
das
cld
xlat
loop
int
int
in
repz
lds
cli
movl
jae
mov
add
repnz
je
mov
pop
sbb
jge
xor
cmp
arpl
jnp
jge
mov
push
adc
test
mov
pop
pop
mov
xor
das
xchg
sahf
fcompl
dec
mov
add
jb
dec
in
push
out
xlat
gs
in
jle
rolb
and
pop
imul
mov
sbb
xchg
inc
cld
jae
jns
pop
lods
mov
inc
sub
out
dec
or
pushf
inc
cmp
loopne
in
lock
pop
add
lcall
sub
push
scas
loope
aad
adc
icebp
mov
push
cwtl
push
mov
ljmp
pop
test
fistpl
cmpsl
ret
push
icebp
lret
mov
insb
xchg
fisubl
add
test
mov
sbb
adc
ja
aam
push
in
add
jbe
dec
jmp
jmp
cmpb
or
divl
shlb
into
imul
fidivrl
dec
add
jle
adc
scas
and
mov
fidivrl
xchg
subb
xchg
dec
shlb
inc
lcall
mov
pop
out
pop
cwtl
pop
mov
or
cmp
and
mov
fldt
push
fstps
mulb
shrb
pop
sbb
clc
aaa
cmp
mov
shlb
in
sbb
cmp
cmc
mov
push
lock
negb
addr16
pop
dec
subl
xchg
ds
xor
mov
jge
in
cmp
loop
out
mov
aam
adc
add
and
xor
sub
or
in
add
inc
stos
jns
jecxz
fwait
mov
addr16
stos
mov
sub
cmp
push
adcl
xchg
cwtl
or
adc
and
jbe
cmpsl
cmp
scas
sbb
push
js
test
xlat
inc
clc
jge
decb
inc
and
jl
into
ret
out
jecxz
repz
fisttps
xchg
icebp
sub
and
dec
push
std
mov
and
dec
fstp
cli
pop
pushf
and
fbld
loope
scas
lahf
inc
fcmovb
cmc
sahf
xchg
ss
jle
test
pop
mov
mov
pusha
jb
fildll
xchg
xchg
jp
and
or
sbb
outsl
jp
leave
ja
add
xor
mov
mov
sub
jo
cs
mov
xchg
push
jmp
or
addr16
movsb
or
test
scas
test
leave
fdivrs
les
xlat
rorl
ret
nop
jl
cmp
sti
sahf
xchg
cmpsl
mov
push
pop
aaa
sub
lahf
mov
int
cmc
in
adc
cmp
insl
out
scas
popa
das
push
pop
and
fbld
mov
out
les
cmp
sub
fistpll
pop
rcr
movsl
push
push
mov
das
sbb
das
ret
xor
pop
xor
inc
stos
aas
pop
push
or
shrl
cmpsl
fidivrs
repz
outsb
pop
in
mov
int
dec
xchg
or
jle
imul
mov
cmp
inc
enter
or
sub
jp
cwtl
inc
xor
clc
bound
imul
call
mov
sbb
mov
arpl
clc
insb
mov
nop
cs
and
rolb
jge
jmp
pop
cmp
mov
sbb
loope
es
adc
push
jno
mov
addl
outsl
adc
mov
pop
adc
sbb
loope
fcoml
lret
test
fdivl
out
es
cmp
or
rol
jbe
jmp
mov
push
cmpsl
test
jle
mov
push
mov
sub
outsl
cmp
repz
xor
and
add
testl
xor
cmc
insb
dec
inc
shlb
das
repz
xchg
ror
dec
jae
xchg
into
jne
sbb
push
xchg
pop
or
lahf
es
dec
jno
les
xchg
adc
repz
cmc
dec
jno
in
pop
jecxz
stos
xchg
sahf
jnp
stos
add
mov
jno
jb
stc
scas
int
movsl
out
scas
cmpsb
sbb
mov
xchg
mov
adc
inc
jg
imul
jmp
jnp
imul
shl
test
ss
inc
adc
and
mov
mov
jge
cmpsb
sub
mov
push
in
pop
stos
cmpsl
stc
leave
fistpll
xor
add
int3
add
xor
mov
ljmp
jae
cmp
or
xor
lret
ror
xor
mul
push
imul
ret
icebp
jecxz
jp
dec
mov
xlat
movsb
pusha
cmpsb
jo
mov
mov
jno
test
and
mov
loopne
outsl
xchg
daa
jmp
mov
frstor
sub
adc
xchg
or
add
addr16
dec
push
popf
jo
dec
iret
inc
mov
outsb
aas
xchg
pusha
push
loopne
rcrl
sahf
adc
jbe
xor
and
xchg
sbb
or
les
sub
stos
mov
movzbl
xchg
lds
sub
adc
mov
aam
addb
lea
sbb
repnz
cmp
jae
cmpsb
pop
jmp
aam
mov
adc
imul
mov
jmp
leave
ds
test
xchg
lea
sbb
loop
sub
xor
cmp
imul
mov
daa
push
das
aad
mov
mov
out
loopne
dec
and
test
add
lret
adcl
in
mov
mov
or
jle
leave
mov
jb
roll
xor
and
push
stos
cld
add
ljmp
fcomi
pop
int3
push
and
dec
and
xchg
fsubl
out
add
jle
mov
daa
sahf
sbb
sbb
stc
sahf
xlat
lea
add
out
lds
mov
in
push
pop
and
pop
mov
push
ret
or
fwait
rclb
mov
pop
rolb
sub
les
add
enter
cmp
lret
scas
clc
push
shll
js
dec
fbstp
call
or
xor
mov
mov
inc
testl
icebp
sub
gs
xor
int3
adc
inc
pushf
aaa
jge
in
push
sbb
and
cmp
subb
jle
adc
sub
push
scas
out
mov
andl
mov
and
jp
push
leave
ja
sbbl
push
test
inc
jl
xchg
lea
ret
jne
pusha
xchg
cmp
repz
aaa
and
pop
pop
loop
push
dec
sahf
jne
pop
mov
gs
dec
decl
mov
roll
sbb
xchg
cli
xor
ljmp
out
icebp
mov
xchg
call
xor
repnz
dec
lods
cmp
push
inc
divl
shrb
loopne
mov
into
loopne
push
sub
mov
stos
push
into
test
outsl
cmc
inc
shl
call
xor
ss
pop
shrb
pop
mov
xchg
sbb
fistps
test
mov
cmpsb
cmp
mov
lods
test
leave
or
repz
popf
cmp
cmp
mov
jp
ret
fcomp
mov
aad
mov
mov
cltd
sub
push
mov
sub
mov
pop
popf
jg
and
pop
jg
push
sub
or
andl
daa
sbb
sbb
sahf
mov
jno
pushf
cs
xchg
lock
push
bound
lock
lret
and
cltd
cwtl
movsl
sub
jp
rorl
pop
into
fisttpl
dec
ret
dec
cwtl
mov
add
xor
je
clc
filds
adc
scas
push
fld
pop
sub
dec
xor
outsl
test
scas
test
pop
mov
ret
stos
sub
and
mov
sub
adc
les
inc
mov
lcall
mov
pop
scas
xor
cwtl
mov
and
scas
das
xor
or
outsb
loopne
adc
hlt
ret
sbb
push
add
pushf
lods
mov
mov
cmp
scas
mov
daa
out
sub
fists
pop
stc
sbb
outsl
add
pop
das
out
data16
in
sbb
punpckhbw
pop
icebp
xchg
mov
loopne
repnz
sub
xchg
cmp
cmpsl
dec
mov
sub
ror
xlat
in
add
inc
pop
adc
ret
or
test
mov
mov
cmpsl
lods
lret
je
xor
imul
lcall
iret
sbb
ficomps
mov
in
insb
and
aad
sti
or
xchg
xor
scas
pop
out
pop
test
sub
inc
stc
iret
negb
pop
inc
mov
or
sbb
bound
or
dec
or
std
sub
mov
and
jmp
into
jno
adc
sub
fidivrl
jmp
addb
mov
jl
or
jg
daa
and
out
mov
es
push
test
nop
push
andl
adc
push
jne
ja
inc
outsb
das
shll
in
addr16
addl
cli
out
addr16
pusha
enter
mov
icebp
adc
jb
mov
xchg
pop
repnz
addr16
out
addr16
xchg
adc
jnp
fnstenv
shlb
fmull
pop
lock
aad
clc
ret
dec
ret
xor
dec
add
hlt
jno
shlb
add
adc
mov
lcall
lods
mov
push
fwait
mov
sub
test
aaa
insl
jge,pn
mov
idivl
jns
imul
jb
mov
xchg
pop
sbb
jmp
and
cld
pop
lods
in
push
mov
mov
shrb
or
outsl
dec
cwtl
pop
jae
and
sti
in
cmp
je
jecxz
loop
dec
std
jns
sbb
mov
lods
out
not
adcb
mov
sti
rolb
stc
cmp
cwtl
push
int3
je
pop
adc
ficoms
into
jno
pop
lds
or
imul
jl
add
rcrb
outsl
stos
jp
orb
xchg
test
cmpl
adc
jp
into
sub
sub
in
aaa
sti
sbb
mov
into
push
mov
mov
fld
lret
inc
xchg
xchg
mov
movsl
inc
push
scas
add
fs
divb
xor
and
lods
add
xchg
pop
lret
jo
sbb
loope
clc
lods
aas
loope
fisubrl
outsl
or
xorl
in
hlt
fcmovbe
roll
jmp
jmp
cmp
cmpsb
mov
fistpl
push
ret
mov
pop
fsubp
dec
aas
cmpsl
mov
and
pop
mov
out
jmp
jns
and
mov
lret
push
xor
out
testb
mov
pop
fnstcw
mov
mov
cmpsb
mov
xchg
test
cmp
push
aaa
fmull
dec
repz
xchg
das
inc
add
adc
jae
add
inc
jbe
sbb
jle
sbb
mov
xchg
sub
cltd
out
mov
ss
xchg
mov
fbld
xor
add
stos
rolb
mov
mov
pop
insb
mov
and
jo
push
cmp
push
cli
jno
cltd
mov
movsl
mov
je
je
mov
xorl
lcall
aad
cltd
lods
sbb
arpl
mov
mov
xor
push
mov
add
std
movzwl
stc
mov
xchg
xor
mov
or
cmpsb
or
fidivs
stos
es
into
or
pop
and
sbb
sbb
pop
jnp
xchg
dec
scas
pop
out
movsb
jmp
dec
lea
call
in
repz
add
push
int3
mov
imul
scas
mov
cmp
adc
dec
inc
sbb
movl
or
daa
lds
xor
mov
arpl
push
pop
push
mov
xor
ret
cmpsb
sti
pop
cs
lods
dec
mov
dec
ljmp
xchg
sbb
push
sbb
and
or
dec
adc
mov
jmp
aaa
pop
add
sti
lret
testb
jle
aaa
push
popa
int3
je
loop
je
cmp
add
jns
fistps
pop
mov
mov
fidivrl
xchg
call
add
sub
ds
rorb
in
xor
and
inc
cltd
scas
jp
xor
push
test
stos
xor
jne
mov
fdivs
movsl
pushf
sahf
div
mov
mov
mov
xor
cs
jno
andl
pusha
shrl
sub
lcall
inc
mov
cld
jno
fcoml
pusha
sub
lock
dec
add
cmpsb
dec
and
lcall
jp
out
pop
and
cld
int
sbb
lds
mov
push
lods
mov
cmp
mov
dec
out
fsubr
out
stos
insb
adc
fstpl
cmp
aad
std
mov
es
push
push
popf
push
push
jbe
push
cmp
movw
jge
fld
lds
je
loop
aaa
push
shl
repnz
enter
in
mov
pop
jmp
in
mov
je
xorl
inc
mov
fidivrs
cld
mov
or
cmp
ret
fldt
je
stc
or
repnz
jne
hlt
std
pop
in
pop
mov
cmp
mov
repnz
das
push
out
lcall
aam
int3
adc
cmp
les
mov
push
in
jnp
dec
mull
and
push
xchg
shrb
sarb
ds
mov
movsb
ficoms
sub
push
fisubs
imul
mov
mov
jp
jo
ljmp
xlat
mov
jne
mov
adc
jp
scas
adc
mov
mov
pop
jno
jp
adc
scas
mov
in
push
sub
mov
lock
pop
jmp
les
xlat
lods
insl
icebp
fmuls
xor
sbb
outsb
sbb
mov
push
fsubl
lods
scas
lock
jle
jecxz
add
les
lcall
mov
pusha
repnz
xchg
mov
mov
addl
aas
int3
test
data16
jno
mov
push
sti
dec
mov
adc
shl
gs
aad
xor
in
jo
cmpb
lods
ja
xchg
push
roll
pop
rolb
cltd
int3
or
scas
xchg
into
cwtl
dec
outsl
addl
mov
imul
loop
sarb
push
pop
pop
es
add
mov
sub
jb
mov
cli
inc
cmp
or
divl
pop
pop
sub
mov
je
test
je
add
adc
std
pop
jl
or
sti
xor
jmp
mov
in
or
pop
lret
aam
cwtl
sbb
fstpt
sub
sub
jnp
mov
cs
aaa
and
cmp
rorb
jl
aas
dec
mov
je
push
ljmp
mov
scas
cmpsb
xchg
jp
sub
shlb
imul
mov
je
lds
les
push
ret
lahf
inc
hlt
aaa
sbb
jl
add
xlat
add
add
pop
mov
push
cltd
insl
fldl
lds
sbb
or
adc
inc
push
adc
aad
andb
lcall
cmp
lahf
outsb
xor
std
mov
hlt
lahf
das
jb
test
adc
imul
mov
mov
sbb
dec
sub
xchg
lds
fs
add
mov
hlt
mov
xlat
xchg
jmp
and
iret
cwtl
das
movsl
loopne
dec
pop
repnz
loop
push
dec
enter
dec
shlb
daa
and
sub
inc
nop
cld
mov
mov
pop
jp
test
sbb
jns
xchg
inc
push
sub
dec
insb
out
gs
jns
mov
int3
lcall
sub
repz
fs
mov
mov
rorb
or
repz
jge
insb
pop
lcall
and
imul
inc
ja
push
insb
jge
sub
dec
jmp
ret
icebp
or
xchg
or
mov
and
xor
mov
lahf
mov
xchg
shrl
jb
scas
stos
mov
cmc
jmp
push
mov
mov
sbb
pop
add
jle
shrl
lahf
mov
and
je
sub
inc
subb
pop
lods
out
lds
out
divb
je
pop
push
cld
sub
add
cmp
pop
adc
arpl
lods
mov
cmp
jp
das
xchg
inc
mov
scas
popf
dec
jecxz
dec
out
popa
out
mov
jbe
xlat
inc
inc
int
xchg
push
insb
pop
cli
call
xor
stos
ds
add
sahf
out
cld
push
daa
and
mov
add
scas
mov
inc
inc
and
add
mov
pop
push
dec
testb
xchg
sub
sub
not
js
and
ljmp
les
out
dec
xchg
dec
ljmp
call
mov
clc
gs
mov
outsl
divb
out
cmp
mull
in
flds
je
sub
out
pop
hlt
andl
sub
insb
test
stc
xor
test
lods
inc
movsb
dec
out
lahf
ljmp
into
mov
lea
adc
pop
arpl
sub
rclb
movsl
scas
ret
ret
das
mov
aas
mov
mov
xchg
icebp
loop
inc
subl
cltd
jge
jb
mov
xor
inc
sahf
aaa
inc
xchg
jg
cmc
orl
rcll
jnp
aaa
pop
pop
mov
dec
mov
cmp
push
iret
mov
or
hlt
cmp
jns
pop
pop
orl
xor
aaa
pop
stos
es
jae
jmp
adc
push
dec
mov
dec
adc
xor
pop
mov
mov
aam
gs
inc
pop
ficoms
ror
pop
enter
push
out
fwait
lret
cmc
das
call
and
or
mov
inc
call
ret
xchg
dec
in
in
loope
sbb
pop
adc
adc
add
mov
mov
add
push
ja
jl
mov
icebp
fcmove
mov
cmp
out
arpl
push
bnd
aaa
cmpsb
and
inc
push
mov
testb
inc
movsb
mov
orl
pop
mov
or
mov
ja
xchg
shlb
fdivrs
adc
cltd
add
add
lcall
pop
sub
and
mov
and
orb
stc
or
xchg
sbb
push
leave
cmp
mov
xchg
and
ss
jae
jbe
mov
icebp
pop
xchg
mov
and
jnp
sbb
sbb
mov
jae
es
ja
pop
pop
fstpt
pop
jecxz
aaa
jmp
pop
xor
adc
fcmovnb
xchg
call
mov
jo
xchg
lahf
dec
out
sbb
jnp
imul
jmp
xor
push
pop
das
sub
jbe
mov
icebp
or
pop
or
mov
lret
fs
rcrb
in
inc
mov
cmp
mov
movsl
lcall
xchg
pushf
fucomi
push
add
incl
stos
inc
arpl
sbb
outsl
xor
xchg
xor
cmp
lcall
lods
and
in
addb
sbb
xchg
jge
xor
sbb
test
cmpsb
add
out
test
add
add
arpl
dec
jnp
rorb
int
dec
jne
inc
xchg
jne
inc
adc
lods
cld
lret
xchg
cmc
mov
mov
pop
aam
push
mov
adc
andl
inc
dec
out
mov
mov
test
jmp
ljmp
and
popf
mov
xchg
jl
add
les
xorb
and
xlat
icebp
punpckldq
leave
xchg
and
ret
cmpsl
aam
jbe
pop
pop
mov
out
orl
jmp
mov
inc
pop
and
jge
out
xchg
aam
pop
and
mov
pop
xor
test
call
in
mov
or
inc
add
mov
pop
cwtl
jno
nop
cmp
inc
mov
dec
push
push
in
cld
or
xor
movsl
add
push
xlat
jno
movsb
outsl
jecxz
lods
inc
in
scas
fnstsw
adc
mov
mov
push
mov
lret
xlat
mov
push
movsl
enter
xchg
pop
and
cwtl
int3
js
adc
jne
inc
mov
and
loop
addr16
jns
test
dec
dec
gs
shll
movsl
xor
and
shlb
outsb
pop
mov
scas
es
jb
in
js
in
jb
jbe
mov
and
xchg
and
adc
adc
outsb
xchg
cmpsl
sub
inc
addr16
mov
ret
sbb
sbb
add
jno
xor
xchg
or
mov
dec
clc
jg
sbb
or
ret
cltd
pop
pop
test
ret
cltd
jg
xchg
pop
mov
js
push
into
aaa
dec
inc
dec
pop
mov
jp
xchg
in
or
cmp
lahf
mov
pop
push
loope
icebp
int
pop
scas
cmp
enter
dec
pop
dec
sbb
mov
outsb
inc
cmc
or
adc
xchg
adc
mov
lahf
sub
pop
mov
mov
jno
inc
cwtl
mov
xchg
neg
jp
js
test
clc
push
mov
add
ja
add
sbb
push
cmc
inc
int
cmp
mov
ror
mov
push
dec
sbb
or
sub
cmp
and
cmp
pop
cmp
lods
fistpll
std
lds
cmp
sbb
jnp
adc
jo
xchg
cmc
sbb
jne
mov
push
cmp
scas
jae
das
std
xlat
sub
fcomps
cltd
xchg
dec
add
repz
push
sti
sub
std
xchg
inc
cltd
fdivrs
fsubs
dec
push
incb
or
imul
ss
lcall
iret
sub
pop
mov
call
leave
pop
ja
call
jbe
mov
es
iret
outsb
cmpsb
mov
mov
jbe
lods
adc
jmp
sbb
stos
icebp
test
adc
negl
and
inc
imul
pop
or
inc
mov
xor
cmp
and
or
push
cmpsl
bound
inc
jne
add
shll
jb
sbb
loopne
js
pop
and
sbb
mov
inc
jnp
int
mov
jae
push
xchg
jno
lea
xchg
rcl
test
movsl
fsubs
aad
cwtl
std
cli
cltd
arpl
jne
mov
hlt
cmp
mov
rcl
or
test
cltd
or
mov
pop
int3
inc
dec
pop
movsl
jb
pop
push
xor
or
or
xchg
add
fnstcw
pop
iret
xchg
loope
fdivrs
out
mov
mov
jo
rorl
and
cmp
rorb
and
sbb
jecxz
or
lret
out
lea
andl
je
xchg
aam
jbe
jmp
cmp
add
fists
pusha
scas
push
arpl
pop
or
jnp
xor
stc
and
adc
aad
pop
sti
or
jne
push
sbb
xchg
fadds
cwtl
or
pop
lret
sub
mov
gs
cwtl
mov
in
mov
lret
dec
and
repz
hlt
popl
bound
add
fsubrl
xor
aam
ret
jbe
xor
dec
fnstsw
ret
inc
insb
push
push
jmp
arpl
sbb
pop
adc
aam
pop
xchg
mov
pushf
push
rorb
and
in
hlt
ljmp
mov
neg
cmp
inc
repz
cmp
xor
icebp
out
mov
mov
push
inc
mov
push
push
or
jne
roll
push
insl
mov
into
ret
sbb
pop
adc
or
repz
cld
xor
ljmp
jl
mov
ds
insl
jns
cmp
mov
pop
add
mov
push
std
or
insb
int3
ror
addl
xchg
in
cmc
add
cld
pop
movsb
push
std
xor
rcr
push
mov
sti
adc
testb
rclb
sti
fimuls
adc
xchg
nop
cmp
push
and
std
xorl
xchg
or
pop
mov
fs
sbb
mov
xchg
jg
mov
mov
iret
or
mov
stos
mov
inc
mov
movsl
mov
repnz
loopne
jno
xor
in
insl
adc
and
lret
lods
xchg
mov
jae
icebp
movsb
sbb
pop
fsts
jnp
jmp
and
cmp
inc
cwtl
xchg
int3
dec
pop
in
mov
inc
jb
cmpsl
movb
dec
icebp
jno
cmc
std
test
dec
loopne
ret
jl
push
push
rorl
push
xorl
repnz
and
adc
in
jle
data16
cmc
xchg
repnz
fwait
ret
xor
cmp
lds
into
gs
lahf
divl
icebp
adc
jbe
and
roll
andb
add
rorl
xor
cmp
push
rcrl
pop
dec
cmc
xchg
arpl
iret
ret
pop
pop
pop
cmp
and
cmp
and
out
fcoml
fadds
incb
sbb
repnz
inc
loopne
pop
mov
mov
bound
jge
in
cmp
adc
jp
sbb
aad
mov
xor
inc
test
loop
cltd
dec
adc
stc
add
sub
fcmovu
gs
add
js
adc
pop
add
fdivrl
jno
pop
mov
outsl
mov
js
xchg
add
xor
les
cltd
in
pop
xchg
push
enter
xchg
xchg
or
cs
or
ficoml
jne
lock
pop
outsb
faddp
test
cwtl
stos
out
cmp
imul
mov
sbb
inc
cmc
xchg
ss
mov
cmpsb
push
push
xchg
es
sbb
stos
pop
repz
mov
mov
jge
stos
lret
sbb
inc
xchg
daa
cmp
and
dec
xchg
push
add
jle
pushf
push
dec
add
add
lcall
mulb
push
sti
mov
dec
and
mov
in
addl
dec
jp
adc
pop
jmp
jl
mov
stos
cmc
xor
mov
fisttpll
or
cmp
mov
inc
push
insb
pop
mov
fisubs
mov
sbb
mov
adc
aas
pop
loope
add
imul
jmp
and
xor
push
mov
pop
fildl
fwait
sahf
mov
insb
xor
push
pop
push
xchg
sahf
and
mov
push
fs
cmc
sarl
outsl
sar
repz
mul
out
call
inc
test
ja
xchg
xchg
push
push
bound
push
dec
div
mov
dec
pop
in
push
rcrb
loope
subb
push
pusha
push
mov
fstpt
or
xor
aam
fadds
call
lods
jp
jae
imul
out
push
shlb
push
jge
lds
imul
in
xchg
arpl
push
sahf
push
pmaddwd
aaa
push
xchg
sbb
cmp
inc
pop
xor
ret
lods
or
test
push
cmpsb
in
xlat
lea
xchg
divb
add
and
sbb
fldl
sub
push
imulb
push
adc
sbb
xlat
test
and
cli
lock
and
add
add
mov
mov
mov
fists
es
addr16
fistps
cld
push
add
cmp
fs
out
mov
jecxz
or
imul
mov
pusha
jnp
pop
or
push
scas
mov
jecxz
arpl
adc
loopne
mov
jl
aam
rcl
push
xchg
jmp
arpl
das
mov
mov
aam
inc
arpl
ret
outsl
hlt
loop
adc
adc
xchg
jecxz
fsubrl
mov
lret
mov
lods
mov
fstl
and
cwtl
ja
fdivr
and
and
out
je
xchg
rclb
ja
lods
clc
jo
rcrl
mov
inc
outsl
movsl
stc
mov
or
in
pop
rcl
ficompl
add
xlat
sub
jns
xchg
pop
repnz
iret
push
in
test
scas
mov
sbb
scas
lds
adc
cmp
scas
lods
jno
mov
nop
cwtl
loope
xlat
data16
aad
cmp
imul
pop
sbb
fisttps
pushf
cwtl
pop
arpl
jb
ljmp
push
push
sub
ret
jecxz
jecxz
add
dec
xor
or
les
mov
or
mov
pop
cltd
push
lods
inc
aas
jg
mov
adc
adc
cmp
sub
sbb
sarb
xor
out
jmp
pop
cld
mov
outsl
sbb
xchg
pushf
jae
pop
push
inc
push
push
pusha
add
mov
cmc
lods
mov
roll
xchg
jae
push
mov
out
aam
pushf
xor
xchg
push
aaa
outsl
in
call
mov
push
pop
int
cmp
fdivl
inc
test
and
mov
or
rcll
inc
mov
aaa
mov
dec
pop
jb
mov
es
flds
sbb
mov
sbb
loop
movsb
icebp
cltd
ss
shll
cmpsb
in
xchg
dec
push
mov
andb
lret
cmc
mov
xchg
mov
adc
cmp
xchg
and
pop
movsl
call
inc
aaa
or
test
xor
cmpsl
stc
inc
in
lret
jb
mov
adc
mov
rorl
out
xor
cld
pop
xchg
lods
out
in
and
lds
mov
cmp
mov
xor
mov
sbb
jns
in
dec
lcall
sbb
nop
add
loope
clc
or
stos
imul
lret
jl
pop
loope
leave
xlat
lcall
cmp
stos
mov
aas
pop
inc
je
and
les
xchg
ret
xor
mov
or
fs
and
imul
mov
mov
push
scas
dec
sub
cmpl
mov
dec
hlt
imul
arpl
getsec
add
mov
repz
pop
push
sahf
lcall
mov
sbb
dec
cs
or
stc
ds
sbb
mov
mov
push
scas
pop
cmp
lea
scas
lods
lods
xor
leave
push
outsb
xor
in
pop
xchg
les
icebp
pop
dec
cmpb
daa
mov
mov
out
sub
pop
sub
jmp
xchg
inc
pusha
add
into
dec
inc
int3
lock
sub
sub
cmc
adc
popa
cmpsl
loopne
outsb
add
rcll
mov
dec
and
cwtl
xchg
mov
mov
int3
bound
popa
sub
std
sbb
andl
dec
sarl
ja
mov
sub
mov
into
aas
cld
xlat
jne
mov
cmp
lret
dec
push
and
nop
ficoms
hlt
sar
in
out
pop
mov
sbb
mov
or
xor
inc
outsb
jo
jge
stos
mov
int3
adc
icebp
pop
test
push
and
xchg
lahf
sahf
inc
lcall
notl
dec
xor
faddl
test
decl
push
cmpl
repz
cld
sbb
inc
in
ja
das
lcall
xlat
or
dec
shl
leave
movsb
test
cs
daa
jns
pop
popa
dec
push
sub
sub
sbb
xor
sti
js
xchg
popf
out
repnz
jmp
inc
fistpll
inc
push
lahf
jae
rorl
aad
cmp
dec
mov
arpl
pop
jmp
jmp
enter
sarb
loopne
scas
push
gs
imul
loop
in
arpl
iret
push
inc
jg
xor
shll
mov
cld
mov
aam
and
mov
mov
cli
mov
push
inc
pop
mov
xor
push
push
leave
lods
lret
or
cwtl
push
arpl
and
jb
jo
inc
pusha
cmp
les
in
leave
push
push
mov
jg
ret
push
add
sbbb
enter
xchg
and
jl
sub
iret
or
inc
scas
mov
jno
cmc
sarb
loop
cmp
sub
shlb
popa
add
out
andb
mov
lods
mov
in
pop
in
sbb
sbb
mov
xchg
adc
jg
shll
xchg
mov
jno
mov
scas
lahf
mov
sbb
rcll
mov
mov
mov
fwait
xor
pop
add
ret
pop
repnz
pop
jle
and
popf
cmpsb
mov
int
cs
or
pop
into
cmp
fwait
cwtl
add
cmp
push
dec
test
sbb
es
rolb
push
xchg
sub
in
fsub
and
or
pop
push
mov
test
lcall
cmp
mov
bound
mov
les
jecxz
xor
outsl
jo
push
jge
addr16
lret
repz
xchg
ud2
mov
pop
stc
cmp
lds
jmp
xchg
hlt
mov
repz
leave
shlb
cmp
xor
pop
mov
dec
loope
fnstcw
pop
fnstenv
fsubrl
subb
lods
xchg
cwtl
pop
xchg
and
push
lcall
cmp
aam
jb
and
or
adc
stos
sarb
loope
mov
iret
jne
imul
adc
nop
mov
jo
sub
lahf
cmp
lds
idiv
ds
and
dec
mov
mov
jmp
dec
std
movsb
mov
cmp
lret
xor
push
xor
push
insl
xchg
cmp
outsb
mov
ret
fwait
cmp
outsl
popf
cmp
cltd
jg
fisubrl
ret
mov
es
inc
cltd
jno
rcll
push
push
mov
mov
aam
jp
dec
out
inc
out
pop
push
jns
cld
sbb
js
clc
xor
xchg
js
adc
sbb
mov
out
lock
and
xor
add
daa
test
fs
mov
sub
in
sbb
lods
mov
testb
add
sbb
hlt
int
dec
roll
cmpb
adc
movsb
ret
sbb
jae
mov
iret
in
mov
in
sbb
cmc
sbb
lods
pop
dec
mov
aam
adc
rol
cmc
dec
inc
idivl
popa
sub
fisubl
shrl
lock
data16
or
into
add
pop
jle
or
movsb
sbb
mov
push
mov
pop
outsl
adcb
dec
jnp
mov
fadds
popf
push
fildl
push
xchg
jo
cld
adc
xor
xchg
mov
inc
pushf
rolb
add
jno
sbb
popf
mov
gs
in
xchg
adc
push
mov
jb
sbb
and
imul
das
hlt
and
test
gs
push
in
sbb
xchg
and
in
in
inc
idivl
dec
pop
je
inc
call
pop
iret
dec
nop
xchg
in
pusha
mov
pushf
inc
cmc
rolb
data16
mov
pushf
aaa
xor
cli
ljmp
pop
inc
adc
jg
and
inc
dec
fidivl
popf
insb
ffreep
push
stos
fnstsw
mov
bound
sub
ret
cmpsl
rorl
add
aaa
dec
xor
hlt
mov
and
mov
xor
jl
xorl
or
subb
mov
popa
push
clc
pusha
push
cmp
xchg
sub
push
pop
mov
imul
fsubs
leave
pop
push
loope
filds
adc
and
icebp
cmp
jl
popa
xor
add
fldenv
xchg
or
sub
icebp
bound
xorb
xor
cmc
mov
in
ret
aas
xor
mov
sbb
xchg
dec
push
sbb
jae
loop
mov
xor
aad
pop
xchg
imul
xchg
fdiv
jle
xlat
and
mov
cmpsl
push
sub
mov
movsl
push
inc
add
mov
pop
mov
mov
push
xlat
sub
xor
mov
sbb
dec
stos
addr16
movb
ss
cltd
rorb
xor
add
daa
popf
dec
mov
xor
inc
fs
in
pop
pop
pop
sub
out
insb
push
jo
xchg
aaa
xor
mov
add
add
iret
mov
lods
call
pushf
jecxz
mov
inc
push
sbb
cmc
fisttpll
cmp
aaa
inc
fdivs
jecxz
cmpsb
push
cmp
jp
jbe
nop
mov
mov
out
pushf
and
add
je
in
or
lret
push
jne
mov
mov
in
sub
push
lcall
inc
stc
xor
ljmp
addl
hlt
ljmp
bound
mov
sbb
sbb
cwtl
cmp
sbb
mov
pop
lods
cmp
xchg
fldcw
std
mov
lcall
jp
orl
pop
mov
mov
repnz
xor
mov
dec
push
leave
sub
sarb
cmpsl
lods
pop
mov
xor
inc
movl
dec
cmp
adc
add
and
popf
cmpsl
nop
jae
mul
repnz
mov
lret
adc
int3
sbb
imul
dec
repnz
add
ds
adc
nop
xor
popa
push
lock
mov
sub
clc
sub
je
lock
inc
dec
pop
dec
or
ficoms
lods
insl
shl
dec
pop
mov
das
cmp
nop
push
inc
sbb
sub
in
jne
aam
ret
fldl
ja
mov
dec
add
dec
sbb
hlt
int
fadds
mov
jno
sub
or
mov
add
repnz
xchg
cmp
xor
push
arpl
in
dec
test
arpl
out
mov
daa
dec
jp
fwait
cmp
push
cmc
aam
jmp
add
add
enter
les
in
stc
cmp
dec
ljmp
mov
add
insl
xor
add
repnz
or
lea
cli
iret
loop
push
cmpsb
rolb
xor
add
imul
xor
adcb
jnp
jbe
fidivrl
iret
inc
mov
movl
test
pop
jecxz
scas
cwtl
call
push
je
push
dec
in
pop
mov
sub
mov
pop
jecxz
cld
cmp
push
std
fcomip
aad
mov
lret
das
lret
sub
ror
out
dec
mov
mov
test
jecxz
pop
adc
jae
jns
sub
std
jbe
lcall
pop
pop
lcall
or
adc
inc
xlat
inc
cmp
rcrb
cli
daa
popf
call
fldl
or
dec
aam
lahf
pop
cmp
sbb
xchg
and
cmp
subl
push
dec
and
mov
das
jmp
cmpsb
movsb
push
mov
in
neg
sub
int
lret
lds
mov
lock
cmpsb
mov
mov
mov
outsl
sbb
stos
cmp
jp
pushl
jo
dec
cmp
movsl
jle
adc
jnp
and
dec
ja
xchg
pop
test
js
in
cmp
mov
les
xchg
pushf
adcl
stc
aas
adc
inc
pop
adc
or
in
out
rolb
and
and
loop
cwtl
fs
in
push
cwtl
cwtl
fisubs
inc
in
mov
cmpsl
xor
cmp
test
bound
pop
cmpsb
insb
adc
mov
pop
fwait
out
jl
cmp
fwait
lea
nop
jmp
fildl
push
sub
pop
loope
mov
popa
aam
cmp
test
and
outsb
outsb
outsb
mov
xchg
add
inc
fs
jbe
xchg
xchg
pop
sarl
aam
add
and
xchg
or
data16
inc
inc
mov
dec
outsl
push
cmp
jb
cld
int
push
or
sbb
add
jnp
fildl
dec
loop
ret
mov
pop
dec
jle
shrl
xlat
in
rolb
and
cmc
insb
scas
lods
dec
sub
mov
sub
popl
sbb
into
or
popl
pushl
xlat
mov
mov
popa
push
es
sub
rclb
jo
push
adc
and
bnd
dec
paddq
pop
or
dec
mov
loope,pn
and
and
in
pop
rol
aad
push
test
mov
xchg
push
insl
fs
pop
mov
jnp
pop
lret
ret
repz
es
cmp
stos
mov
and
pop
pusha
jnp
insb
ljmp
and
and
push
sbb
int
enter
ds
je
push
cli
xlat
jmp
addl
out
pop
nop
imul
sbb
call
std
inc
inc
jmp
cwtl
mov
cs
cli
movsl
sti
cmpsb
bound
adc
mov
push
inc
js
shrb
jge
ret
shll
mov
test
push
xor
or
push
imul
lret
pop
adc
jle
inc
jp
xchg
pop
sub
inc
sarl
call
outsb
scas
xor
inc
mov
in
cmp
xchg
imul
mov
les
and
iret
sbb
cltd
enter
xor
repz
inc
jbe
mov
xlat
test
cwtl
out
sbb
outsl
imul
popf
mov
xchg
pushf
dec
test
xor
ss
inc
mov
sub
in
pop
mov
cmpsl
pop
inc
jp
inc
icebp
push
dec
movd
or
adc
and
roll
sahf
aad
fstps
gs
or
pop
mov
mov
xor
and
xchg
or
mov
xchg
jle
mov
push
xchg
jnp
rolb
inc
and
fdivl
aaa
shll
fs
pop
int
test
mov
int3
sti
and
in
mov
mov
and
dec
test
mov
negl
cmpsl
jl
adc
out
out
movsl
fdivs
nop
and
ljmp
add
sub
mov
pop
cmp
mov
repz
cmp
adc
cmp
unpckhps
dec
enter
cmp
cmpsb
jmp
adc
imul
jp
jg
popf
jo
cmpsl
sbb
pop
inc
imul
fptan
xchg
cld
popa
fs
push
aad
loope
lods
and
push
mov
cmc
mov
pop
or
jp
mov
push
jns
nop
jecxz
jp
dec
ret
dec
cmp
sarb
mov
add
dec
and
mov
push
cmpsl
out
sarb
mov
lea
das
xchg
sub
xchg
jmp
xor
jns
fwait
aaa
ret
add
push
je
arpl
leave
xchg
push
cmp
cmpsb
adc
push
mov
daa
jecxz
xchg
pushf
je
shl
fmuls
sbb
addb
lods
xchg
mov
inc
div
notb
sbb
sbb
js
xchg
insl
mov
packssdw
add
sbb
push
shll
add
cmp
or
inc
mov
sub
imul
cmp
lahf
mov
xchg
outsb
adc
inc
or
stc
push
out
push
lcall
loope
mov
fwait
jmp
mov
notb
int
mov
mov
sbb
test
cmp
fldcw
xchg
add
shrl
xchg
repz
or
rolb
push
pop
push
dec
jb
mov
sub
in
xor
and
fisubrl
stc
movsl
jecxz
xlat
jae
lds
int3
rcl
das
out
push
iret
mov
movsb
shl
pop
cmp
pop
xor
mov
aas
dec
insb
repnz
or
dec
sahf
jb
jb
jmp
fucom
std
fisubrl
sub
jns
stc
ret
push
popa
mov
out
sub
sub
cli
mov
xor
pop
sti
movsb
inc
pop
adc
mov
lods
jmp
cli
xor
ljmp
xchg
sbb
out
mov
ljmp
mov
shll
mov
enter
movsb
sbb
imul
lods
xchg
test
test
xor
jne
sub
hlt
cs
lock
pop
sub
popf
outsb
or
cmpb
dec
adc
andb
aas
sub
jle
xor
mov
in
pop
scas
int3
and
adc
and
aad
xchg
insl
sarb
mov
call
icebp
jmp
xchg
pusha
ficoms
and
xchg
mov
ljmp
add
mov
icebp
stos
inc
adc
sub
or
cmp
ds
pop
push
adc
mov
je
dec
and
jmp
cli
inc
pusha
and
movsb
stos
jg
das
mov
push
inc
push
nop
repnz
out
subb
outsb
cmpsl
xor
testb
pusha
jmp
scas
leave
fadds
bound
adc
push
inc
mov
cwtl
jnp
fistps
test
in
hlt
in
movsb
cmc
push
ret
sbb
into
mov
lcall
pop
dec
bswap
pop
test
data16
cld
stos
sti
pop
pop
shlb
clc
pop
add
mov
cmp
leave
adc
int3
xor
jne
in
fcmovnu
out
imul
ret
mov
pop
cmc
or
lcall
incb
pushf
sbb
mov
sub
inc
fwait
insb
jne
pop
or
xchg
je
add
shll
push
or
jno
xchg
fmuls
mov
pop
mov
cld
testl
pop
lahf
test
daa
or
pop
push
inc
out
insl
xlat
mov
fmuls
mov
xor
push
repnz
sti
sarl
iret
stos
mov
xor
in
mov
xchg
jno
imul
xor
inc
fucomp
jecxz
movsb
cli
push
into
je
and
cli
mov
rcll
sbbb
xor
loope
and
movsl
cmp
add
int3
sub
iret
sub
loope
jecxz
sub
push
xor
and
jmp
pop
pop
add
mov
sahf
ss
dec
lret
add
ret
or
stc
mov
sub
xchg
jp
mov
jb
jle
fildll
inc
mov
jg
fbstp
mov
popf
pop
jbe
push
push
js
lods
out
cmp
dec
xchg
mov
jb
jns
andb
stos
mov
ljmp
sbb
inc
shl
xchg
lock
notb
inc
push
xchg
and
xor
mov
repnz
adc
sbb
cmp
mov
ret
comiss
mov
out
mov
fldcw
addr16
lcall
dec
dec
xchg
mov
rol
cmp
xor
pop
lods
sbb
testb
pop
movsb
jmp
jo
js
cwtl
imul
or
in
out
mull
icebp
add
cld
ljmp
jnp
xchg
pushf
jns
sbb
inc
fidivrs
and
and
cld
jge
push
jnp
mov
gs
cmpsb
shrl
or
cwtl
and
pop
into
int
test
xchg
out
in
push
std
enter
xor
push
xchg
and
jbe
mov
pop
adc
in
out
popf
or
mov
jbe
mov
ljmp
xor
pop
pop
repnz
arpl
fcmove
std
adc
cmp
mov
ds
imul
or
mov
pop
in
jne
or
test
inc
sub
push
dec
mov
dec
cmpsl
and
mov
repnz
sub
insb
fiaddl
mov
imul
inc
push
test
xchg
ret
mov
cmp
and
gs
mov
cmpb
adcb
sub
in
repnz
cmp
clc
ret
cmp
icebp
sbb
lods
gs
ret
popl
dec
inc
sbb
and
popf
fdivrl
mov
shrb
ret
jmp
fnstenv
int3
inc
jge
jns
lea
or
cli
and
test
or
adc
mov
arpl
stc
sub
cmp
jne
adc
jne
pushf
pop
dec
int
ss
fistpll
add
mov
cmp
fwait
rolb
and
fildl
jae
lcall
loopne
pop
dec
pop
push
inc
int3
push
mov
repnz
jae
xchg
pop
pop
fwait
in
repz
dec
dec
imul
jo
mov
cmpsl
sahf
setne
mov
xchg
pop
daa
jp
sbb
das
jecxz
arpl
add
in
xor
dec
add
cli
mov
aam
insb
addb
jae
pop
mov
mov
in
dec
adc
or
dec
xor
call
pop
loope
dec
sbb
scas
sbbl
add
xchg
push
loope
add
sbb
rcrb
aas
inc
test
xor
mov
shl
dec
xchg
inc
icebp
call
dec
sub
movsl
mov
push
jp
adc
jo
jo
mov
aad
pop
xchg
mov
inc
aas
mov
mov
mov
and
xchg
pushl
mov
das
pop
fldl
mov
lods
mov
iret
xchg
mov
xor
adc
dec
loopne
mov
sidtl
cmp
sub
cmp
xor
jne
in
jl
pop
sbb
push
jbe
daa
cmp
inc
outsl
hlt
xor
mov
dec
mov
gs
pop
add
fldt
arpl
addr16
xchg
mov
ret
sahf
das
imul
lods
iret
insb
dec
sub
jbe
fdivr
scas
mov
and
fcoms
shr
pop
out
lret
mov
gs
lcall
mov
jo
or
and
or
loop
in
sahf
xchg
hlt
mov
adc
pushf
test
push
mov
mov
lret
call
dec
sbb
sbbb
pop
xchg
call
iret
ret
das
repnz
inc
call
aad
in
jle
test
mov
cmp
nop
arpl
lods
dec
sbb
incl
ja
popa
xchg
jno
pop
jle
neg
mov
inc
add
mov
or
js
adc
xchg
add
or
cmp
sub
and
loop
dec
imul
repnz
out
xchg
cmp
push
hlt
pushf
jne
or
xchg
loopne
fisubrl
push
cmp
cmp
fldcw
ljmp
icebp
pop
test
inc
mov
test
hlt
mov
inc
mov
push
sahf
xchg
dec
lcall
and
out
clc
out
fstps
test
aaa
mov
and
xchg
ret
pop
inc
xor
lret
adc
cmpsb
inc
leave
fwait
cld
hlt
inc
mov
cli
ja
jg
mov
mov
rolb
movsl
fistpl
mov
xor
daa
fisubs
pop
les
add
movsb
mov
out
mov
or
xchg
jno
xchg
dec
clc
and
xchg
and
add
dec
or
mov
fcompp
jnp
jg
push
push
repz
jmp
pop
add
dec
loopne
mov
push
ljmp
sahf
sahf
push
add
xchg
decb
cmp
mov
jo
jg
outsb
lods
outsl
call
insb
add
cld
icebp
cmp
cmc
sbb
cld
pop
adc
pop
dec
test
sahf
push
test
xor
lcall
mov
adc
pop
mov
xchg
lock
dec
js
mov
shll
xchg
or
dec
dec
clc
ret
movsl
out
popa
jmp
pop
sub
lock
sbb
cmp
stos
push
in
pushf
jbe
fcoms
je
xchg
dec
pop
stos
test
fdivs
int3
and
ss
push
xor
cld
dec
bound
xor
cmpsl
adc
in
es
dec
clc
sahf
mov
cmp
movsl
cmp
sbb
jmp
scas
int3
inc
insl
repnz
sahf
add
stc
insb
out
ficomps
lea
dec
cld
cltd
movsl
fldenv
stos
mov
in
lock
aas
or
outsb
les
insl
ret
add
sti
out
dec
push
out
and
rcll
ljmp
test
sbb
rolb
adc
cmc
icebp
lahf
aad
fs
push
daa
push
js
and
xchg
add
dec
jo
mov
mov
xor
hlt
inc
adc
xlat
mov
out
insb
dec
push
push
fwait
or
insl
mov
mov
mov
adc
mov
enter
jnp
fwait
in
in
jnp
mov
mov
out
pop
pop
sbb
pop
jns
subb
in
out
cmc
les
cmp
and
push
popa
ds
outsl
push
xor
dec
js
ret
idivl
mov
add
cmpsl
sub
push
pop
in
and
fs
sbb
xchg
and
pusha
add
add
fs
mov
mov
movb
je,pn
or
and
movsb
mov
xlat
loopne
sub
jnp
loope
in
sbb
dec
repz
dec
mov
data16
push
arpl
adc
repnz
jg
mov
dec
push
and
or
test
in
mov
data16
dec
rcr
jnp
mov
imul
ficoml
sub
cmp
es
mov
mov
sub
mov
loopne
repnz
xchg
lret
lea
aad
mov
int3
addr16
out
jp
je
jno
pop
jl
xor
data16
mov
inc
lock
mov
pop
out
mov
ss
mov
dec
push
dec
fsub
dec
fbld
mov
xchg
mov
mov
arpl
loopew
xor
fxch
inc
js
in
jae
and
push
lahf
mov
push
adc
inc
jmp
cli
jbe
dec
in
stc
cmpsb
bound
cld
inc
xor
mov
inc
sbb
mov
pop
or
or
movsl
xchg
inc
cld
lcall
in
push
and
inc
pusha
insb
sub
addr16
ja
lret
xor
sub
iret
jg
dec
dec
sahf
test
loop
xchg
xchg
aam
mov
dec
push
push
outsb
adc
xchg
pop
scas
dec
push
and
pop
iret
testb
pusha
out
mulb
lock
mov
or
loopne
mov
adc
mov
jnp
mov
int3
and
loope
jnp
shl
test
movsl
inc
bound
out
call
mov
dec
mov
jb
xchg
add
fisubl
jmp
dec
dec
push
mull
ljmp
dec
xor
fldenv
movsl
dec
jnp
cmp
cs
mov
aam
dec
insb
repnz
movsb
lret
scas
aaa
push
js
mov
nop
data16
in
cmp
mov
pop
jno
and
and
push
out
sbb
fsts
outsl
loope
jl
pop
out
lahf
lea
popa
fs
sub
leave
mov
inc
sub
push
mov
pop
in
lea
cmp
adcl
fmuls
hlt
cmp
cmp
and
xor
add
repz
btr
xchg
mov
pushf
mov
imul
push
cld
adc
cmp
xchg
sbb
xor
fdivl
fsubs
mov
sub
push
xchg
leave
add
sbb
ljmp
xor
mov
mov
sbb
pop
jno
lea
call
mov
imul
jne
mov
lahf
mov
ja
out
and
or
adc
mov
adc
xchg
fbstp
and
out
shrb
and
shl
cmp
arpl
jg
push
pop
jo
push
dec
repnz
push
into
and
dec
push
sbb
or
add
add
cld
jo
push
fwait
jg
test
push
sbb
adc
int
mov
pop
ss
xor
and
add
mov
mov
jl
sub
outsb
jecxz
iret
xchg
cmp
pop
mov
fisttps
jae
aaa
int
out
mov
pop
loopne
rcl
pusha
lock
pop
adc
jns
lea
nop
arpl
stos
jp,pt
in
pop
jae
mov
aas
pusha
xchg
xorl
aam
xchg
cmp
aam
call
popf
sub
repnz
shlb
jle
mov
sub
icebp
popa
idivb
cmp
adc
cmp
data16
fisttps
xlat
or
pushf
cmp
sti
ds
outsl
push
pop
mov
mov
enter
mov
test
movsl
adc
pop
sbb
pop
iret
sar
push
sbb
cmp
push
add
js
ret
and
and
mov
leave
cmpb
jbe
or
addl
dec
push
xchg
nop
test
mov
cmp
lahf
lcall
or
cmpsb
or
sbb
rolb
test
inc
cmp
leave
mov
or
mov
loopne
cld
xchg
pop
lock
add
in
and
cmp
push
sti
test
push
inc
or
mov
and
aam
ljmp
add
popf
push
xor
call
add
psllq
mov
test
inc
mov
xchg
push
xchg
mov
je
jecxz
fldenv
mov
fists
lahf
fdivs
sbb
lock
movsl
push
stos
mov
jno
into
xor
out
jbe
sarb
dec
test
add
push
adc
dec
clc
push
mov
mov
mov
xor
xchg
mulb
mov
fs
sub
out
popa
aas
xchg
add
and
xchg
fnstenv
cmp
shrl
in
push
inc
dec
stos
sub
cli
mov
lcall
ret
movsb
cwtl
es
dec
bound
stos
popf
and
js
jnp
bswap
mov
jnp
enter
sarb
scas
lcall
pusha
fs
dec
push
add
lds
jae
mov
inc
popa
call
xchg
jne
je
enter
out
fistpl
pop
das
inc
mov
ret
dec
mov
xor
dec
orl
xor
cmpb
inc
jp
out
nop
and
gs
out
fiaddl
and
mov
pop
sbbl
ja
in
pop
bound
arpl
adc
pop
cmp
xor
jo
ret
push
out
imul
dec
mov
or
scas
sbb
je
cmp
subb
push
jo
call
sub
cld
fistpl
mov
leave
fnstsw
adc
mov
mov
pushf
in
xchg
sbb
movsl
inc
cmp
mov
push
inc
inc
and
daa
mov
push
in
jg
and
mov
cmp
shl
xchg
sub
inc
mov
xor
pop
jp
jle
inc
and
inc
jle
rcl
add
std
dec
mov
mov
lret
mov
add
mov
adc
movsl
test
dec
push
xchg
xor
loop
xchg
pushf
mov
lahf
xor
sti
cwtl
imul
clc
repz
jne
mov
mov
push
mov
cmp
pop
inc
cwtl
ds
mov
sub
add
lods
sbb
stos
jae
pop
sysret
pop
andl
addr16
mov
popa
sub
lods
jno
sarb
test
faddl
or
dec
jmp
sbb
pusha
mov
dec
lea
loope
idivl
and
push
es
push
je
notl
add
sbb
jp
sar
sub
movb
mov
cltd
pop
aaa
mov
leave
xor
or
enter
pop
mov
jp
pusha
mov
mov
mov
js
addr16
jb
xchg
movsl
jne
pop
in
push
fwait
enter
test
xchg
pop
mov
pop
cmp
mov
scas
xor
neg
push
sub
adc
cmp
sub
lret
jo
addr16
aam
jmp
ret
push
or
pop
rcr
stos
stc
pop
pop
ja
insl
ss
shll
push
sarl
fs
xchg
in
dec
pop
inc
aad
add
outsl
push
dec
std
scas
jb
add
push
mov
not
pop
jp
inc
lods
or
lret
test
lods
dec
adc
lea
xchg
les
cltd
add
fldenv
repz
xor
ja
jp
inc
mov
push
inc
popf
push
push
xchg
daa
stos
lds
jl
push
xchg
leave
xchg
mov
scas
sub
mov
pop
or
imul
xlat
scas
data16
dec
cmpsb
mov
rclb
sbb
inc
js
bound
fptan
xchg
fcoms
icebp
inc
mov
mov
jle
or
inc
xor
sti
pop
mov
mov
push
cmp
jno
out
pop
es
pop
xor
sahf
mov
or
pusha
cmp
aaa
stos
cmp
pop
fnstenv
std
jecxz
outsl
sub
test
shlb
sub
sbb
stc
cmp
sahf
addr16
outsl
dec
adc
std
clc
enter
lods
inc
aas
aam
push
outsl
mov
sub
mov
or
scas
add
inc
hlt
lret
add
sahf
inc
cmp
ja
in
ficomps
cmp
jae
push
cld
push
xor
add
inc
inc
les
jp
add
mov
mov
and
test
dec
nop
in
jg
subb
cmp
lahf
mov
mov
loop
mov
dec
mov
jo
jb
push
in
neg
stc
movl
cli
xchg
popf
enter
xchg
push
and
mov
leave
mov
and
mov
or
sbb
sbb
in
stos
sub
xchg
in
xchg
sbbb
pop
add
insl
icebp
sub
loop
call
int
lods
sbb
dec
inc
push
push
test
dec
sti
lret
mov
push
ljmp
sub
add
sbb
cmp
arpl
adc
lahf
mov
jg
xchg
and
aas
sub
fwait
and
push
dec
fisubrs
adc
adc
into
dec
add
cs
mov
mov
xchg
adc
movsb
les
xchg
test
and
fnstcw
inc
dec
jl
jge
in
xor
and
dec
dec
or
add
lds
fildl
cmp
dec
xlat
js
mov
xlat
cmp
add
or
and
cmp
inc
dec
imul
call
sbb
inc
and
stos
stos
fldenv
loopne
es
mov
inc
pop
enter
aam
into
fcmovnb
jp
fucomi
mov
out
jmp
mov
stos
inc
out
and
sub
mov
and
repnz
pop
jp
fwait
testl
int3
rcrb
es
inc
aad
outsl
sbb
lret
sbb
test
stos
ja
xchg
add
adc
ja
aad
dec
inc
dec
loop
aam
pop
iret
test
xlat
push
and
les
int
adc
jae
jnp
lods
jp
imul
lea
xchg
pop
push
arpl
mov
mov
test
aaa
xlat
test
lods
sahf
ret
movsl
gs
push
iret
jmp
mov
call
es
mov
jbe
fs
or
or
stos
xchg
mov
insb
inc
stos
insb
push
pop
xchg
pop
push
lcall
xchg
and
mov
lret
mov
inc
dec
xchg
cld
lea
outsl
nop
daa
je
nop
std
mov
imul
inc
dec
in
pop
inc
add
xchg
sub
jl
lods
inc
movsl
aaa
aas
mov
and
xchg
dec
jno
aas
dec
shrb
mov
outsb
jno
inc
daa
adc
adcb
mov
clc
lret
pusha
rol
int3
add
push
push
lock
arpl
pop
jl
in
cmpsb
fsubl
cmpsl
push
pop
add
into
notl
adc
sub
inc
fnsave
sbb
rorb
pop
push
sbb
in
in
mov
push
sbb
jns
insb
or
xchg
into
fnstsw
push
xchg
cmc
jb
daa
sub
add
cmp
jp
rclb
movsb
jl
mov
jae
fisubrs
xchg
nop
dec
add
pusha
inc
lods
add
imul
jo
pop
pop
dec
lea
push
pop
mov
mov
cmp
out
fisubrl
notb
push
mov
inc
mov
jae
xchg
and
mov
aad
movsb
ficompl
mov
nop
mov
xor
inc
or
int
jp
jnp
lcall
ljmp
xor
lret
cmp
sbb
ja
add
dec
add
shr
imul
lahf
stos
dec
dec
and
adc
jns
push
push
mov
enter
push
mov
fnstcw
aas
pop
das
mov
repz
das
pop
dec
test
cmp
out
and
aam
mov
and
xchg
push
popa
hlt
lea
mov
stos
es
ficompl
js
cmpsl
add
xor
push
sub
sahf
and
sbb
push
clc
orl
dec
push
and
jnp
sbb
fisubl
adc
inc
pop
dec
pushf
inc
sub
cmc
clc
test
add
push
jl
out
cli
sub
jle
loopne
jge
es
adc
test
icebp
push
stos
sbb
fldl2t
int3
push
pop
rcl
daa
pop
movsb
push
cmpsl
test
inc
add
sti
lret
fs
fsts
out
cmpsl
or
jo
dec
aas
and
enter
loopne
stos
outsl
repz
sub
ljmp
mov
insb
cmp
lods
ljmp
jne
adc
sbb
rcll
add
and
sbb
int
cmp
jo
inc
out
call
jmp
mov
jle
lea
push
cmpsb
lcall
adc
cmp
shlb
sti
cmp
div
pusha
pop
shrl
push
inc
ss
mov
bound
or
dec
push
divl
jecxz
add
pop
cmpb
lcall
pop
adc
lcall
add
push
sbb
cmp
push
pop
jns
sbb
mov
xor
iret
sahf
jo
push
bnd
mov
add
mov
rcrl
repnz
stos
push
in
adc
add
gs
fcmovbe
add
or
inc
pushf
mov
xor
xlat
adc
stos
dec
xchg
test
push
lds
xchg
pusha
push
aas
lods
adc
jb
add
addr16
mov
or
sub
shrl
jp
in
xlat
je
xchg
mov
std
and
test
ljmp
dec
cmc
cwtl
addb
mov
movsb
int3
cltd
cmc
adc
sbb
lock
leave
xor
leave
rclb
aad
push
leave
lret
xchg
pusha
pop
or
cmc
sub
fiadds
rol
adc
pop
mov
jp
mov
xor
loope
pop
js
lret
cli
jae
scas
inc
sbb
hlt
ret
jnp
testl
mov
dec
jae
sub
ds
mov
sub
outsb
cld
cwtl
or
xchg
out
outsl
idiv
add
je
nop
mov
jp
stos
ss
cmpb
imul
dec
scas
pop
das
or
cltd
mov
jnp
leave
ja
xor
pop
aam
nop
cli
mov
dec
dec
frstor
mov
std
sbb
mov
test
pop
std
push
pop
ret
mov
stos
push
dec
arpl
pop
inc
hlt
outsl
push
mov
movsl
aas
or
jns
sti
cmp
out
leave
mov
in
iret
lds
ljmp
and
ficoml
jb
addl
xor
popa
out
inc
gs
in
mov
jp
mov
in
cmp
ja
aad
add
ret
fwait
push
in
jp
lret
sub
js
jmp
sti
pop
cli
leave
adc
mov
les
inc
dec
cmp
push
subl
outsl
sti
data16
add
push
sbb
ret
jbe
push
fwait
xor
dec
test
test
bound
add
cmpsl
rcl
jo
lds
outsb
mov
pop
fistpll
movsl
or
rol
test
aam
jae
jmp
out
xchg
test
sti
push
fnsave
leave
push
xlat
js
iret
sarl
push
ja
pop
xchg
or
mov
enter
orl
push
faddl
jnp
aaa
sub
dec
out
inc
mov
adc
pusha
jns
in
xchg
outsb
test
bound
lcall
js
pushf
dec
pushf
jge
and
mov
jmp
fs
test
push
movsb
push
lcall
sub
or
add
mov
je
or
mov
fs
arpl
sub
repnz
push
fcoml
push
das
cs
loop
push
aad
sbb
dec
ja
push
popf
iret
lock
aaa
in
out
and
cmpsl
adc
xlat
mov
push
aaa
sub
scas
test
adc
cmp
clc
out
jo
ror
mov
orl
push
add
mov
in
cltd
fistpll
adc
fldln2
test
sbb
and
movsl
xor
mov
iret
inc
mov
arpl
jne
cwtl
divl
jo
in
jp
lret
adc
lods
fidivrl
sub
in
jbe
fstps
aaa
imul
xor
mov
dec
mov
xchg
scas
dec
mov
xchg
sbb
pop
das
push
test
cmc
dec
mov
pop
test
cld
add
inc
mov
es
lods
xchg
xor
ja
fdivl
addr16
xor
push
repnz
aas
or
cli
push
or
xor
ja
inc
gs
inc
xchg
xorl
lea
aad
or
fdivs
xor
and
mov
jae
xlat
push
imul
out
pop
fwait
pop
gs
jmp
dec
add
xor
jge
adc
in
mov
sbb
mov
mov
scas
or
stos
add
mov
shlb
xor
cmp
cmp
mov
cmp
dec
xor
neg
jb
mov
adc
jmp
pop
or
push
inc
pop
cmpsl
pop
xor
inc
cld
xor
inc
lret
cld
push
inc
cmp
pop
out
js
shlb
mov
cmp
pusha
pop
lea
or
adc
out
ljmp
test
push
dec
bound
in
cmp
push
and
jne
dec
mov
sub
mov
imul
sub
addr16
aad
push
loop
inc
in
insb
cmp
movsl
mov
add
sub
jp
push
and
push
scas
into
pop
pop
outsl
xchg
movsb
or
mov
mov
mov
cmpsb
pop
pop
testb
lea
jg
or
imul
jmp
aas
daa
sub
repnz
mov
orb
pop
pop
inc
aad
jne
inc
add
adc
ljmp
sub
push
sub
ljmp
je
aaa
out
dec
cld
mov
fidivrs
cmp
and
sbb
or
mov
xchg
xchg
inc
xchg
push
in
mov
movsl
pusha
mov
pop
cld
std
jl
push
movl
dec
ja
das
fadd
repz
call
aam
xor
nop
inc
aam
leave
mov
cmpsb
and
or
loope
in
insb
setg
and
push
shr
mov
dec
cwtl
add
loope
cmp
xchg
push
pop
dec
jecxz
addr16
pushf
push
shl
ret
arpl
es
xchg
inc
daa
jno
xchg
sbb
add
push
inc
push
stc
in
stc
cwtl
fucomi
mov
mov
add
imul
out
leave
pop
push
out
rcrb
out
inc
add
add
jecxz
pop
pop
or
icebp
add
adc
adc
mov
jns
mov
clc
xlat
cs
sbb
popa
out
dec
in
and
xor
sbb
dec
push
add
ret
jecxz
or
int
test
outsb
and
dec
jecxz
push
cltd
adc
jle
inc
into
mov
jle
rcrl
mov
out
sub
jo
in
mov
aaa
sahf
stos
clc
mov
out
fwait
pop
push
icebp
mov
pcmpeqw
inc
mov
out
adc
and
jb
icebp
iret
mov
ljmp
pop
aas
mov
in
jns
clc
xor
aaa
mov
push
pop
shl
fwait
test
je
adc
rorl
dec
insb
dec
sub
jns
pop
mov
jg
fdivrp
jmp
out
arpl
inc
fidivl
mov
cli
dec
lret
xchg
push
mov
daa
push
push
mov
inc
nop
cmp
mov
mov
decb
es
jne
xchg
cmp
jl
out
imul
aaa
push
enter
pop
ret
mov
movsl
and
push
jecxz
popf
xor
or
jl
mov
std
cwtl
mov
fwait
int3
xor
ret
dec
pop
iret
push
stos
jno
popa
shlb
xchg
aas
mov
sbb
push
jae
cmpsl
mov
dec
cmpsb
and
mov
mov
addb
call
cmpb
xchg
push
jne
sarl
std
pop
sub
cmp
cmc
add
nop
fistps
pop
sbb
outsl
lret
lahf
aad
push
daa
mov
jl
mov
pop
jmp
test
sbb
mov
into
mov
fdivrs
lret
shl
push
fmul
push
arpl
and
aad
mov
inc
jge
or
mov
pop
xor
data16
adc
call
in
std
std
not
jo
das
sub
push
lock
sbb
pop
insl
adc
shl
mov
jge
ficoms
enter
repnz
fdivl
sarl
jp
adc
outsl
sahf
lods
cmpsl
and
mov
and
outsb
les
xchg
subl
lods
or
jae
jbe
test
arpl
call
std
adc
inc
mov
or
jae
or
sbb
jmp
pop
mov
out
stos
orl
jo
push
cmp
fcoms
aad
jmp
stos
pop
cmpsl
aaa
xchg
or
adc
inc
test
or
mov
jb
mov
out
push
inc
xor
popf
scas
push
jmp
or
cmpsl
les
and
or
push
jae
xchg
cmpw
enter
mov
pop
jno,pt
loopnew
mov
sub
dec
push
test
adc
test
cli
mov
cmp
arpl
jp
jg
adc
cmpsl
enter
jns
cmp
jbe
fldln2
push
xor
fwait
pop
std
lahf
movsl
pushf
xor
pop
repnz
mov
test
pop
popf
fs
out
mov
dec
inc
insb
cmp
dec
adc
into
dec
je
mov
out
out
or
jecxz
sbbl
in
shl
repnz
mov
mov
ret
xor
lock
je
xchg
jns
sarb
inc
xchg
insl
lds
mov
push
push
das
mov
inc
stc
dec
repnz
jae
pop
icebp
cmp
leave
stc
mov
cmp
mov
mov
cwtl
adc
add
cmpsl
pop
sub
sub
imul
sub
test
jle
es
cmp
jg
imul
aad
and
push
mov
ret
inc
or
movsl
aad
in
or
push
jmp
inc
xchg
xchg
cs
lods
mov
stos
cwtl
mov
mov
mov
pop
out
dec
pop
jge
mov
test
clc
push
dec
orl
mov
xor
pop
insb
shrl
cmp
cmp
inc
pop
mov
mov
mov
ret
adc
push
inc
inc
lock
xlat
popa
shrb
gs
imul
sbb
cltd
mov
pop
bound
pop
or
outsl
mov
inc
add
cmp
push
mov
sub
push
mov
push
fwait
cltd
les
xchg
popa
cli
pop
sub
adc
and
push
cmpsl
cmp
or
xor
adc
pop
cmc
loope
add
ret
loop
lret
and
xlat
mov
and
mov
out
stos
and
lods
xor
mov
cmp
jge
push
in
add
cltd
inc
or
pop
arpl
mov
rorb
cmp
loop
stos
ja
adc
push
insl
imul
jo
jae
loop
pusha
rol
cmpsl
lret
xor
or
jns
test
lock
out
aam
dec
add
fdivl
hlt
xacquire
push
arpl
push
scas
outsb
mov
pushl
adc
leave
mov
pop
adc
sub
push
scas
jp
rolb
mov
inc
mov
jno
roll
lret
movsb
fistpll
jo
outsb
rcl
jb
add
cli
push
movsl
fstps
mov
aad
cmpb
insb
lret
cmp
xchg
inc
mov
pop
sub
jp
cmp
xchg
out
push
in
scas
mov
pop
adc
lock
sub
xchg
ljmp
dec
sbb
test
ja
push
jg
sbb
pop
scas
inc
xchg
adc
mov
cmp
pop
and
scas
or
and
cmp
popa
arpl
fisttps
jmp
pop
or
cmp
sbb
repz
mov
cmpsl
push
fs
and
addb
lock
stc
mov
test
leave
mov
pop
mov
subl
and
lret
out
adc
scas
or
iretw
int
hlt
mov
ficompl
shlb
cmp
xor
js
pop
js
lcall
fwait
mov
or
xor
and
xchg
sub
arpl
bound
cmpb
dec
and
fisubrl
push
or
push
mov
xor
push
push
jge
aad
sub
call
pop
xor
cmpsl
sbb
movsb
xor
mov
or
jecxz
xchg
pop
fistps
or
inc
into
nop
aam
jg
sub
push
pushf
adc
push
insb
lock
push
arpl
lahf
cs
push
cmpsl
sbb
int
inc
mov
imul
enter
loopne
add
out
xchg
daa
add
mov
push
or
xchg
pop
jmp
adc
insl
mov
ljmp
sti
pop
ret
dec
xor
cltd
outsl
mov
popa
mov
pop
out
xchg
repnz
add
popa
sub
or
cltd
movsb
lods
mov
xor
adcb
push
int
lods
rorb
mov
sub
push
cmp
push
jg
pop
lahf
ja
cmp
ds
roll
inc
adc
mov
jp
rcrb
in
cmp
mov
push
adcl
push
xor
sub
jmp
cmp
ds
rcrl
lcall
jg
aaa
or
push
insb
mov
sbb
xchg
mov
dec
test
pop
lock
sbb
arpl
out
ss
inc
out
stos
sub
scas
and
and
jb
push
cmc
xor
iret
std
movsb
mov
jb
dec
cmp
in
scas
outsl
inc
lods
cmc
sub
outsb
repnz
cs
pop
add
or
aaa
rorl
bnd
icebp
xor
cmp
xchg
push
popa
lret
addr16
cmp
call
mov
sti
xchg
mov
pushf
js
and
mov
pop
xlat
int3
sub
shlb
stos
dec
or
in
cmc
outsb
cwtl
loopne
mov
enter
jb
stc
iret
imul
repnz
and
out
shll
cmp
fcompl
xor
jae
stc
xchg
mov
bound
jl
adc
clc
fsub
imul
pop
fistpll
in
sub
cmp
push
mov
dec
int
pop
mov
cmpsb
xchg
insb
into
notl
cmp
add
pop
repnz
pop
mov
dec
mov
mov
cmp
cli
mov
xchg
cli
repz
mov
dec
lea
sbb
xchg
mov
xchg
imulb
jnp
or
cmp
lods
mov
fadd
outsb
mov
iret
jno
xchg
xchg
ret
mov
cmp
jl
xchg
mov
push
out
jnp
or
add
fstpl
xchg
repnz
mov
or
outsl
shrl
mov
loopne
push
jb
push
test
iret
les
add
and
and
jne
mov
cmp
cmp
aad
sub
jecxz
xor
hlt
fisubrl
jmp
xor
lret
loop
sti
mov
data16
fistl
push
adc
pop
xor
es
jbe
add
mov
rolb
mov
imul
cmp
pop
in
cmp
or
inc
insl
pusha
xchg
pop
daa
xchg
test
insl
fs
es
out
adc
gs
mov
mov
mov
testb
push
call
jmp
mov
imul
or
cmp
or
stos
dec
lds
cmpsl
out
aaa
push
dec
adc
lcall
jp
jmp
fsts
push
inc
in
fmulp
sbb
inc
sbb
xchg
outsl
not
jbe
xor
or
andl
testb
shlb
imul
sarl
fimuls
pop
insl
movsl
ret
and
call
pop
add
or
loope
mov
mov
fdivs
sub
in
sbb
xor
sub
insl
loop
cmp
incl
sbb
out
sarb
cmc
ss
dec
dec
mov
mov
imul
movsl
mov
mov
int3
xchg
outsl
or
test
fistps
pop
lcall
das
mov
and
dec
lahf
lods
in
into
jmp
filds
sti
adc
fwait
enter
les
fcom
mov
cmp
aam
push
pop
mov
xlat
mov
cmp
cs
cmp
cmp
in
faddl
pop
cli
sbbl
or
ret
pop
in
and
xchg
jecxz
gs
and
cmp
or
cmp
inc
clc
sbb
jae
dec
jbe
in
in
clc
leave
push
fisttps
mov
mov
pop
inc
xchg
lds
ror
sbb
fwait
sub
sub
dec
pushf
in
pusha
add
arpl
xor
popa
sub
xchg
xchg
test
fs
std
cmp
test
enter
jmp
fisubrl
inc
sub
nop
xorb
mov
repnz
adc
cltd
push
jecxz
fistpll
in
loop
cmp
pop
sub
int
mov
bound
xchg
std
ljmp
xchg
bnd
imul
push
rclb
lods
jmp
jg
loope
cmpl
inc
and
pop
mov
and
pmuludq
aas
loopne
mov
cwtl
push
or
aaa
jmp
aad
xor
in
cmp
ljmp
dec
pop
aad
inc
sbb
fidivs
imul
push
lods
setl
xor
push
adc
outsl
mov
dec
push
daa
fldcw
jecxz
or
iret
add
out
out
iret
inc
repnz
jl
dec
push
cli
push
scas
mov
loope
pop
out
cs
sti
adc
jge
lcall
push
xchg
scas
addr16
xchg
add
test
jo
mov
mov
xchg
les
inc
cmp
out
mov
insb
mov
andl
ret
andl
push
add
cld
xchg
aas
fincstp
sbb
pop
dec
adc
mov
mov
xchg
xchg
das
lahf
leave
lds
sub
arpl
xor
cld
sbb
stos
inc
bswap
mov
sbb
cmc
je
fs
mov
popa
jge
xchg
les
mov
iret
mov
sub
push
clc
scas
addr16
sub
js
fidivrl
mov
mov
fldcw
fidivrs
xchg
aad
call
arpl
mov
pop
shll
movb
in
outsb
je
adc
cmp
lret
ds
push
cmp
out
icebp
dec
xchg
jae
push
clc
sbb
stc
mov
dec
call
pop
cld
fnsave
push
loop
scas
iret
xor
shrl
outsl
adc
dec
fstl
adc
mov
movsb
cmc
in
mov
js
daa
push
aaa
or
mov
pop
mov
inc
cmpsb
dec
mov
fildll
sahf
push
adc
rol
inc
iret
sbb
cld
push
jg
push
push
dec
pop
cwtl
jmp
xchg
pop
adc
pop
sti
lahf
pop
mov
in
cmp
adc
sti
push
or
xor
xchg
stc
mov
xlat
pop
and
push
cmc
dec
fimuls
into
adc
jae
and
mov
sub
ljmp
fisttps
cwtl
jns
nop
xor
push
jno
cli
aaa
and
mov
or
sub
ret
cmp
out
mov
or
pop
xchg
mov
das
data16
ret
inc
les
inc
jno
sti
adc
insl
cwtl
rorl
outsb
push
out
mov
cmp
pop
mov
jno
lcall
movsl
enter
inc
bound
dec
xlat
pushf
cs
xor
fstpl
int
add
sub
lods
lods
lret
jecxz
stos
jbe
cmp
pusha
xchg
out
movl
aaa
dec
dec
loop
popf
scas
mov
inc
inc
scas
mov
aas
jne
mov
mov
fstl
imul
pop
dec
and
mov
enter
cmp
nop
push
mov
mov
rcrl
testl
cld
mov
xchg
pop
fsubl
or
xlat
xchg
jo
adc
cmpsb
jae
not
nop
dec
and
push
mov
push
cmp
andl
sub
cmp
mov
add
movb
xchg
add
jecxz
jmp
mov
inc
mov
pop
adc
inc
outsb
inc
and
aam
bound
xchg
sbb
lea
inc
xchg
std
into
xor
je
xlat
jns
add
fldenv
or
fadd
mov
sbb
test
rcrb
mov
dec
in
push
cmc
popf
inc
das
dec
mov
ljmp
std
xchg
cmp
filds
pusha
repz
out
loop
xor
sbb
xor
insl
mov
je
imul
negb
imul
ret
xorl
mov
mov
hlt
sti
push
cltd
lret
mov
push
jo
das
adc
pop
sbb
mov
inc
fists
stc
lods
arpl
cmovg
es
cmp
xor
cmp
icebp
add
addl
xchg
lock
mov
lret
inc
pop
frstor
jns
push
dec
sub
dec
sbb
imul
imul
push
addl
dec
int
repnz
sti
xchg
das
aas
pop
sub
scas
test
jnp
insb
orb
out
push
lods
dec
in
mov
sub
scas
js
popa
xchg
ss
mov
fdivl
pop
jns
arpl
mov
cli
and
mov
out
arpl
pop
std
xchg
push
lds
mov
xchg
jno
adc
jne
shrb
xchg
leave
or
mov
inc
xchg
pop
or
mov
and
int
fnstcw
gs
xor
inc
or
cmp
jmp
mov
mov
push
loop
sti
cmp
dec
push
push
jmp
sbb
mov
xchg
mov
adc
mov
ss
or
je
dec
dec
pushf
xchg
int3
jl
push
ljmp
int3
inc
ud1
add
cmpsb
dec
fprem
aam
or
xchg
xchg
add
cmpsb
push
outsb
jne
je
cmp
pop
jne
cmp
in
adc
arpl
cmpsb
fnstenv
xchg
xor
insb
mov
enter
out
notl
pop
push
dec
jae
out
cmp
mov
lea
add
dec
dec
xor
shll
mov
mov
add
fistps
cltd
scas
in
jl
aaa
neg
mov
mov
loop
cmp
or
shlb
mov
and
pop
sbb
jae
xor
cmp
pushf
xor
sub
ret
jmp
xchg
aaa
movsb
mov
mov
add
jecxz
fsubs
jne
lcall
pop
jbe
adc
xchg
icebp
push
push
or
mov
lods
test
insb
divl
popf
inc
lahf
test
xchg
pop
testb
add
jns
into
push
subb
and
rorb
pop
in
inc
or
jp
mov
insl
test
les
inc
jns
inc
jle
ret
mov
pushf
ret
xchg
dec
jg
mov
iret
sub
int
push
fs
or
test
xor
or
addb
add
mov
or
push
mov
faddl
push
and
add
mov
ss
sti
nop
insb
add
push
sbb
lock
cmp
dec
ret
add
dec
sbb
xor
movb
in
movsl
mov
pop
jp
pop
or
adc
rolb
stc
pop
jecxz
das
mov
movsb
xchg
cmp
pop
pop
arpl
ds
sub
sti
inc
push
sti
mov
test
aas
dec
fisttpl
pop
ljmp
sbb
loope
pop
mov
or
sub
push
xor
sub
loope
sub
cmp
add
imul
in
push
das
aas
ficomps
cmp
push
cmc
ljmp
in
sbb
and
aam
addr16
pop
inc
ds
or
inc
popf
adc
and
sub
jge
scas
xchg
jae
adc
or
rdpmc
jmp
fsubs
pushf
pop
dec
xor
into
bound
lods
je
or
adc
icebp
adc
mov
xchg
cmp
sub
push
shll
push
adc
inc
cmpsl
or
add
test
inc
aas
pop
mov
jno
cmp
and
das
lea
xor
sarl
pop
adc
sti
in
es
push
or
xor
mov
pop
repnz
shlb
inc
inc
adc
and
outsl
call
adc
cmp
jle
mov
test
sub
fcmovnu
std
push
enter
cmp
or
pop
xor
jg
cld
push
mov
adc
push
add
jo
mov
xor
sbb
out
dec
dec
test
jge
out
adc
add
jns
lcall
mov
or
inc
cmp
xchg
nop
loopne
pop
or
mov
pop
mov
std
pop
jp
and
mov
inc
cmp
popf
add
mov
sub
out
imul
incb
inc
in
inc
add
das
xor
jmp
push
inc
iret
mov
jnp
fimuls
popa
jns
into
out
xchg
xchg
adc
jo
pop
das
int
mov
loop
repnz
sub
lahf
imul
fxrstor
enter
pushf
pusha
xchg
outsb
repnz
xlat
out
movsl
sub
sahf
mov
or
jb
jne
mov
popa
repz
sub
movsb
and
xorb
xor
clc
sbb
xor
cmp
lret
mov
push
mov
stc
sbb
inc
orl
call
pushf
and
mov
cmpsl
push
jnp
jne
and
je
mov
in
inc
outsb
bound
xor
xchg
push
add
fldl
cmp
and
insl
mov
xchg
test
adc
mov
in
lods
add
pop
mov
ja
das
aas
sahf
out
xor
out
test
addr16
mov
cmp
movsb
je
andl
push
inc
push
mov
add
subb
or
fcom
mull
dec
test
mov
adc
ret
movsb
test
and
sub
test
mov
pop
jp,pn
push
jecxz
loope
loope
andl
in
repz
xor
call
mov
or
cmp
mov
in
shll
daa
scas
cs
mov
push
out
jb
shll
push
xor
pop
sbbb
movl
movsb
nop
ljmp
lods
mov
add
insl
add
aas
mov
fsubs
ret
fildll
or
fs
cmp
dec
add
ja
movsl
mov
xlat
jae
shl
cli
inc
jp
fmuls
std
adc
into
xchg
sbb
mov
rclb
in
fldl
imul
arpl
adc
faddl
and
xchg
mov
add
lret
scas
push
pop
jno
xchg
mov
out
dec
and
mov
fisubs
add
fs
fisubs
mov
mov
or
test
clc
out
push
dec
xchg
shrb
inc
in
or
imul
sub
jmp
and
push
leave
enter
sub
lret
arpl
push
popa
mov
iret
and
stc
mov
sbb
or
mov
adcb
fisttps
and
outsb
pop
mov
fmul
lods
pop
and
arpl
dec
jns
mov
adc
je
and
jmp
or
stos
jns
rcl
xor
ds
pushf
sub
sbb
cmc
fstl
das
xorb
les
imulb
rclb
mov
nop
jle
mov
cmpsb
out
jns
fdivrl
mov
out
fs
adc
and
pop
push
jne
maskmovq
idivl
add
inc
push
xchg
pop
push
repnz
lods
inc
push
push
fisubs
mov
bound
fs
xor
leave
push
dec
mov
xchg
insb
leave
aad
ficompl
daa
lcall
jbe
sbb
mov
dec
jg
orl
lea
mov
xchg
dec
cld
add
lcall
scas
in
cmp
and
ds
xchg
lahf
dec
inc
cmpsl
and
and
pop
add
testb
dec
cmc
or
ret
out
fwait
into
add
and
jp
aas
mov
mov
lcall
dec
cli
xchg
test
aam
popa
or
sbbl
popa
xchg
xor
pop
cmpl
cltd
repz
mov
dec
sbb
pmaxub
xor
das
shll
mov
sbb
xor
cltd
xchg
inc
sbb
xchg
out
and
repnz
int
or
xor
xlat
int3
mov
in
test
sahf
bound
cld
gs
or
loopne
pop
xchg
lret
dec
mov
jle
test
xor
sub
or
adc
data16
pusha
dec
js
xor
sahf
pop
js
push
sbb
mov
jmp
inc
cmpsl
scas
mov
pop
fwait
mov
lret
pop
mov
stc
xchg
mov
xlat
int3
xor
cmp
mov
int3
sub
rcr
movsl
test
jae
jp
or
scas
aaa
push
push
aaa
mov
nop
lods
cmp
repnz
shll
ss
pop
out
mov
ret
lcall
popf
dec
das
mov
xchg
nop
adc
mov
adc
add
cmp
xchg
loope
xlat
mov
inc
adc
negb
sbb
out
lock
or
mov
rcr
mov
add
or
lret
mov
cmc
js
jnp
push
insb
add
pop
popa
call
mov
sahf
hlt
insb
mov
data16
arpl
int3
cwtd
cmp
pop
or
xlat
divb
xor
or
sti
aas
sbb
mov
and
aaa
mov
cmp
jl
addb
in
sbb
insl
pushf
js
xor
fists
dec
adc
pop
xor
fwait
inc
xchg
mov
aam
jnp
fisttps
test
fisttps
jmp
xor
movb
psrld
sub
rorb
decl
dec
mov
int3
mov
cmpsb
xor
cmp
mov
mov
je
jp
test
pop
jl
enter
mov
cmc
jg
or
sbb
or
jb
lods
test
sub
stos
jg
push
inc
int
mov
mov
add
in
sbb
add
push
lock
js
test
xchg
hlt
rsm
mov
add
data16
nop
cli
cmpsb
les
in
mov
mov
mov
sub
push
movsl
xchg
mov
test
push
add
mov
test
jbe
jmp
out
lea
movsb
add
jecxz
jmp
out
mov
jno
lahf
insl
rorl
ds
mov
add
mov
aas
in
stos
rcrl
sub
dec
jo
or
push
cld
fs
pop
loop
and
in
enter
lret
xchg
sbb
adc
fdivl
xor
pop
in
cltd
aad
out
sti
mov
add
or
idivb
insl
add
mov
mov
andl
mov
and
mov
xchg
gs
dec
fldl
call
addr16
fucomip
ljmp
mov
fisubrl
lea
add
clc
outsb
in
mov
or
dec
popa
ret
lret
fldt
jnp
push
mov
rclb
ss
jnp
xor
mov
sarl
adc
test
clc
cmc
inc
mov
cmp
mov
xchg
mov
leave
adc
idivl
sub
std
xor
enter
mov
nop
and
inc
xchg
ljmp
in
into
cmp
jno
out
mov
loope
adc
push
outsb
lahf
ljmp
movsl
sbb
out
ljmp
and
xor
xor
pop
pop
xchg
mov
cmp
faddl
test
cmp
stc
xor
leave
dec
aad
add
aam
xchg
jmp
add
mov
push
cmp
sbb
gs
sub
sub
adc
loop
jb
sub
xchg
scas
out
imul
sub
cs
jmp
mov
push
test
mov
cmp
mov
xchg
ret
loop
mov
mov
mov
and
sbb
push
pop
cmpsb
das
pop
inc
and
stc
idivl
jns
cmc
inc
jge
xor
movups
sbb
js
xchg
out
notb
mov
fnstsw
mov
cmp
into
and
or
popl
outsb
lods
cmpsb
cwtl
inc
or
pushf
aad
mov
out
or
inc
pop
cmp
ret
sub
cmp
xchg
out
insl
mov
cltd
dec
cmp
pop
addl
in
xor
xor
test
dec
adc
cmp
fcomps
xor
fstps
sub
fxch
test
push
sbb
jge
aam
mov
ja
cltd
inc
lds
lret
jae
es
mov
fwait
rcr
aas
loopne
and
xor
outsl
fisubrl
mov
imul
adc
lods
mov
adc
fbld
cld
sbb
cwtl
insl
lods
loop
fcmovnbe
ficomps
or
jecxz
mov
ljmp
adc
fs
icebp
or
adc
jg
cmp
sbb
push
sti
push
lods
shl
frstor
ret
pop
adc
jnp
sarl
sarb
js
fxch
mov
xor
add
lods
stos
mov
cltd
lcall
xor
imul
pop
or
mov
push
mov
jb
js
arpl
adc
mov
inc
jnp
ds
std
imul
cltd
mov
movsb
mov
rol
or
test
push
adcl
inc
and
mov
in
adcb
out
inc
or
pop
out
adc
lret
jl
int3
cmpsb
outsl
filds
push
xchg
xchg
sub
ljmp
out
enter
iret
test
pop
mov
inc
movd
arpl
in
xchg
cmp
pushf
daa
jg
aam
in
dec
insl
adc
push
aam
ds
mov
push
andb
inc
int3
inc
add
jl
imul
lcall
orl
push
mov
das
rcl
push
outsb
add
cmpsl
sti
loopne
xchg
or
cmp
sti
and
dec
adcb
fs
and
push
adc
jnp
push
arpl
not
push
push
int
jnp
push
jmp
stos
pop
push
enter
pop
out
mov
rcrl
adc
std
adc
sbb
scas
in
lea
mov
dec
fidivs
fisubs
inc
mov
bound
cmp
nop
cli
xor
out
rclb
loope
test
sbb
pushf
lcall
aas
xor
mov
insl
cmpsb
inc
push
pop
fwait
inc
pop
repnz
xchg
cmp
icebp
or
add
mov
orl
push
push
ret
inc
jnp
xor
fidivl
pusha
mov
frstor
dec
jmp
or
dec
fdivrl
aam
mov
sub
enter
mov
jge
cmc
fcmovbe
mov
or
mov
fcomps
repz
mov
test
lret
loopne
jmp
dec
jne
adc
jmp
movsl
or
pop
or
cmpsb
mov
clc
jbe
ja
inc
add
cwtl
or
mov
xchg
mov
mov
push
cmpsl
mov
xchg
mov
adc
lods
add
push
lret
sub
mov
and
call
stc
lret
pop
data16
gs
out
pop
cmp
and
inc
int
inc
push
ds
mov
adcl
and
insl
icebp
movsb
sbb
sub
pop
test
in
fmul
cli
xor
push
pop
add
ret
es
in
popa
adc
jb
loop
lahf
pop
mov
xor
xor
push
pop
mov
mov
xor
mov
das
idivb
jmp
addr16
movsl
add
out
inc
push
push
lea
sub
imul
push
jecxz
outsb
ficoml
rolb
dec
sbb
es
add
cmp
inc
aaa
adc
shrl
insl
scas
mov
xor
mov
mov
repnz
dec
iret
jae
pop
into
jns
bound
lea
bound
cmp
dec
jns
mov
imul
lds
mov
jmp
lret
push
cmp
out
scas
js
mov
shrb
jnp
fdivrl
adc
add
iret
pop
push
xchg
sub
sbb
daa
mov
mov
sbb
mov
popf
call
adc
fbld
adc
sahf
fstpl
loop
pop
adc
fs
mov
push
cmpl
aad
sbb
into
mov
out
mov
ret
sti
shll
mov
jns
inc
jns
data16
mov
pop
outsb
and
adc
rcrb
cmpb
pop
inc
xchg
pop
shll
push
sub
lcall
cmpsb
sti
sbb
add
dec
xchg
sarl
fmull
outsb
bound
add
fiadds
ds
addr16
push
jnp
daa
jnp
xor
xchg
inc
test
mov
or
pop
xchg
stc
bound
pop
mov
and
lods
repz
test
xor
xchg
fisubl
ret
stos
mov
loope
into
lea
lea
rclb
lock
subl
jns
xlat
gs
xchg
pusha
pop
sbb
inc
add
stos
sub
sub
sub
test
stc
mov
mov
sub
fcom
xchg
lahf
hlt
cmc
or
jp
push
int3
repz
ret
pop
in
insb
popa
push
int3
cltd
gs
jbe
sub
sub
std
out
jns
rol
and
mov
or
sarl
pop
dec
enter
jmp
fs
movsb
mov
std
lcall
int
inc
jg
test
adc
and
insl
push
ds
push
arpl
cmpsl
and
push
hlt
cmp
xchg
mov
and
adc
cld
fwait
sbb
lds
jo
pop
mov
xor
bound
out
int3
push
sarb
lds
pop
daa
mov
pop
pop
jb
aad
test
shrb
shlb
and
lret
xchg
inc
sar
pusha
mov
and
pop
cmp
add
aam
imul
jl
push
sbb
shl
lahf
orl
sub
ja
into
or
or
xchg
lret
dec
mov
outsl
fimull
adc
push
outsl
jmp
mov
rol
iret
xchg
fwait
mov
repz
lods
dec
mov
popa
shrl
mov
xor
stos
fwait
adc
pop
pop
std
xchg
pop
xchg
pop
divl
mov
adc
dec
es
lcall
pop
aaa
test
ljmp
jmp
push
dec
fwait
aaa
xor
mov
or
pushf
scas
rcrl
lcall
test
or
negl
mov
fs
cmc
loop
xchg
hlt
jle
pop
outsl
outsb
mov
fwait
sahf
out
dec
shlb
cmovg
fstps
sbb
sbb
scas
loop
popf
test
ret
or
or
jge
pop
jg
jo
cld
in
jbe
mov
mov
daa
out
movsb
icebp
test
inc
push
push
addr16
push
pop
inc
push
inc
fisubrl
cs
jle
dec
fs
sbb
mov
gs
push
xor
adc
imul
repz
mov
outsl
add
cmpsb
jge
leave
or
imul
mov
inc
inc
xor
loop
mov
xchg
aas
test
cmp
inc
ret
pop
fnstsw
inc
add
nop/reserved
into
jo
ljmpw
mov
call
pop
ret
rcll
add
in
arpl
cli
in
stos
mov
jg
push
outsl
ret
aad
mov
add
call
bound
sar
outsl
sub
cs
test
filds
lcall
mov
je
ljmp
push
add
cmc
insb
pop
ja
push
roll
cmp
pop
xor
pop
jecxz
clc
lret
dec
xor
in
daa
jp
ss
xor
hlt
ds
sub
movb
mov
daa
cmpsl
test
pop
and
es
jg
repz
and
fs
inc
aam
mov
mov
inc
fidivl
adc
jbe
sbbb
mov
push
sub
jmp
repnz
inc
into
data16
hlt
jecxz
mov
mov
and
leave
mov
in
addr16
std
clc
add
push
dec
scas
js
jb
repnz
es
movsl
jnp
cwtl
bound
dec
push
repz
in
jns
mov
jg
xor
sbb
xor
clc
pop
dec
lret
cld
adc
sti
cmp
clc
dec
cld
xchg
data16
jo
sub
mov
pop
out
push
loopne
imul
stc
and
adcl
insl
stos
push
orl
and
xchg
cmp
int
test
test
adc
lcall
dec
popa
daa
sub
repz
or
inc
enter
adc
inc
rclb
je
or
hlt
xchg
mov
addr16
insb
jne
pop
into
xchg
add
jae
stc
out
cmp
in
cmp
push
clc
sub
mov
lea
outsl
test
adc
push
jbe
imull
popf
xchg
loopne
cmp
cmp
adc
mul
andb
push
movsb
push
and
pop
fwait
push
dec
gs
cs
sbb
mov
jle
insl
outsl
pusha
or
dec
mov
and
aad
mov
xchg
fadds
sub
jne,pt
leave
add
add
imul
in
inc
int
aam
js,pt
push
aam
insb
ss
or
clc
pop
lahf
xor
jb
out
xchg
push
push
pop
in
sbb
adc
insl
ret
cmp
add
aam
loope
dec
aad
adc
arpl
jg
fistpl
into
lods
cld
addr16
pop
into
adc
aas
add
sbb
push
xchg
subb
xlat
mov
rcl
popa
pusha
dec
sahf
popf
aad
sahf
mov
fdiv
in
sbb
push
cmpsb
or
jge
rolb
lock
outsl
add
pop
lea
push
or
ret
cmpsb
add
cmc
cmp
jbe
jmp
test
xor
xor
ljmp
sbb
stos
outsl
mov
ret
mov
mov
jg,pn
loope
pop
sbbb
jo
mov
adc
inc
add
lret
int
pop
jns
sti
dec
dec
push
cwtl
movsb
sub
and
sbb
dec
jbe
outsb
pop
ficoms
push
inc
jno
jb
loop
sub
dec
sbb
cmp
xchg
xchg
movsb
push
mov
lret
add
sub
popf
jmp
push
add
bound
jno
cmpsl
std
sarb
sub
xchg
xor
xchg
cmc
mov
push
test
pop
ret
fs
shll
add
push
pop
shlb
in
pop
jge
mov
imul
add
adc
mov
repz
pop
mulb
repnz
ljmp
xchg
and
mov
adc
mov
dec
cmp
lret
in
push
xchg
bnd
add
push
push
xchg
mov
xchg
fildll
lods
clc
jns
lret
in
outsl
call
xchg
in
jecxz
mov
sub
into
loop
adc
nop
dec
inc
and
dec
loope
outsb
fdivl
pop
aad
cmp
adc
dec
test
jmp
pop
sbbl
or
xchg
mov
repnz
dec
enter
pop
jne
and
mov
movsl
inc
xchg
adc
lahf
inc
scas
int3
jb
das
notb
shlb
fucomi
divb
push
dec
hlt
xchg
xor
push
sub
cmc
sahf
popa
cmpps
push
add
and
aad
jecxz
repz
xchg
mov
xchg
icebp
push
mov
mov
in
add
mov
jge
mov
dec
mov
es
push
idiv
insl
push
jno
mov
call
sti
xor
arpl
mov
fisubl
push
leave
sbb
shrl
stos
fldl
ficomps
fistpll
or
sbb
push
inc
mov
push
fisubs
mov
or
mov
or
lahf
xchg
sbb
aaa
pop
movhps
aam
lret
mov
pop
jmp
bound
mov
bound
jecxz
xor
jbe
sar
outsl
inc
dec
into
jecxz
movsl
xchg
mov
xchg
xchg
in
lds
jbe
mov
or
mov
xor
jmp
xorb
leave
orb
lds
lret
je
cmpsb
lret
repz
pop
mov
jl
and
fimuls
pinsrw
cmp
and
xor
pop
sbb
loopne
mov
ljmp
push
pop
adc
pusha
iret
pusha
add
cmp
dec
clc
xor
cmp
arpl
clc
sahf
clc
lock
sahf
push
and
or
ds
in
in
shlb
push
lock
mov
lcall
outsl
sub
xchg
jns
lds
sbb
shlb
out
sub
ficomps
and
insl
aad
lcall
adc
repnz
les
daa
xchg
in
sub
fmull
callw
in
jp
aam
iret
lods
dec
mov
out
add
sti
sub
mov
fistl
add
add
and
mov
sub
fisttpll
rorl
call
inc
mov
fldl
cltd
and
pop
pushf
rcrb
fsubs
xchg
cwtl
call
and
xor
das
imul
jae
jbe
and
push
mov
pop
aad
sahf
mov
jno
lods
dec
push
imul
hlt
iret
repnz
mov
mov
and
fistl
pusha
int
push
mov
js
fcoms
and
xchg
leave
pop
dec
pop
cmp
inc
jo
pop
ds
shrb
mov
and
or
pushf
pop
push
cmp
cmc
and
outsl
dec
mov
out
sbb
jo
mov
pusha
xor
mov
or
pop
jns
ret
inc
or
add
scas
int3
and
add
aad
mov
push
add
pop
pop
cmp
test
mov
fmuls
testb
cmpb
dec
hlt
mov
ljmp
fwait
scas
aas
jmp
mov
mov
int
movsb
xor
ja
push
xor
dec
test
cwtl
mov
inc
mov
sbb
lret
addr16
xchg
ret
push
xor
shlb
out
loopne
ret
rclb
xor
out
pop
mov
inc
mov
pop
mov
lahf
in
jae
cmp
loopne
xchg
xchg
jmp
hlt
scas
or
aad
fmuls
outsb
loop,pn
into
jge
pop
xchg
jnp
ret
mov
push
adc
movl
pop
lock
fistpl
sahf
push
sub
add
xor
cmp
or
orb
repnz
adc
push
popf
fldenv
add
mov
jmp
push
adc
sbb
sub
aad
ss
or
pop
jnp
or
mulb
jle
negl
loopne
cs
andb
inc
pop
xchg
or
pop
sub
movsl
fdivr
push
and
mov
das
sbb
and
or
mov
into
addl
pusha
fidivs
movd
aad
xor
fildll
test
mov
sub
sub
jbe
aam
out
xlat
enter
push
rclb
or
fs
out
xor
icebp
loop
pop
add
stos
dec
cmc
call
fstl
bound
push
out
loop
push
outsl
pop
sahf
mov
rorb
leave
mov
xor
push
jnp
sahf
cmp
cmpsb
add
push
jo
out
adcl
inc
pop
sub
sbb
and
inc
fcomp
mov
nop
or
sti
xor
ss
aaa
rcrl
popa
in
aad
push
xchg
lahf
es
or
inc
and
mov
cmpl
jae
movsb
xlat
call
scas
iret
es
or
push
cmp
cmpsl
jae
iret
iret
addr16
push
and
xchg
push
add
jne
push
lods
inc
add
mov
inc
and
or
adc
arpl
rcrb
mov
jmp
std
xor
sbb
daa
dec
js
arpl
pop
lahf
mov
or
pop
inc
sub
cmp
movsb
dec
mov
xorl
out
cwtl
push
insl
or
nop
add
add
mov
fwait
mov
push
out
pop
clc
push
and
mov
loop
xchg
pusha
icebp
repnz
sbb
lcall
sbb
ds
add
dec
es
sbb
add
sbb
pop
mov
icebp
mov
into
cmc
shlb
imul
xor
mov
mov
decb
shr
xchg
pop
hlt
in
mov
stos
pop
int
stos
imul
jl
adc
inc
push
mov
mov
pop
xor
inc
xlat
pop
jg
hlt
bound
repz
stc
jmp
repnz
dec
inc
and
loopne
pop
mov
jno
cmc
sub
popa
mov
xor
xor
lds
test
ds
mov
insl
jno
icebp
mov
daa
xor
movsb
fisttps
dec
sub
adc
mov
js
popf
jmp
pop
sarb
lods
lret
sbb
add
inc
jmpw
movsb
fstps
mov
push
sbb
cmp
xchg
dec
insl
popa
push
data16
inc
jge
sub
sub
sub
hlt
sub
shr
lret
mov
pop
lods
test
jae
imul
push
pop
aam
inc
ds
adc
and
mov
popa
frstor
mov
sbb
dec
jae
jae
mov
mov
ja
push
pop
sub
es
jmp
subl
scas
fs
dec
xor
arpl
xchg
popa
pop
cmpsl
repnz
mov
or
repz
js
imul
shl
xor
lcall
xlat
mov
out
pop
mov
aaa
jecxz
enter
fiaddl
sbb
xchg
pop
push
popf
cltd
cmpb
and
js
adc
jp
jle
jle
and
add
push
jnp
dec
cmp
and
or
fs
or
push
sbbb
out
jle
repnz
scas
mov
mov
add
in
cltd
ljmp
cmp
call
out
mov
inc
push
cmpb
fnstenv
mov
cmp
pop
mov
cmpsb
sarb
mov
je
mov
loope
jecxz
jle
mov
or
cmpb
notb
and
test
mov
mov
cld
xchg
dec
hlt
dec
xor
out
repnz
mov
aaa
jle
inc
push
in
pusha
inc
mov
xchg
xchg
xlat
push
out
mov
incb
dec
inc
mov
adc
dec
lea
shl
sub
out
nop
mov
or
outsb
insl
test
mov
or
pop
test
push
call
insl
xor
std
aaa
fs
pop
mov
lock
sub
and
mov
into
mov
mov
test
call
pop
enter
and
mov
mov
js
fwait
xor
xor
mov
or
sbb
notb
xor
sub
pop
test
sub
pop
cmp
mov
pop
fsubrl
pop
adc
cmp
je
daa
jle
leave
outsb
or
push
leave
aam
lea
push
xchg
jne
fcmovb
lret
xor
jmp
aam
scas
lods
call
fs
push
cmpsl
repnz
cs
repz
mov
dec
cmpsl
jbe
fsubrs
push
mov
mov
push
shl
and
adc
sarl
iret
cmpsb
pop
pop
test
xchg
adc
cs
into
jb
add
int3
aas
int3
or
mov
fcmove
out
test
cmp
mov
stos
cmpl
cmp
xchg
testb
mov
pop
nop
pop
pop
fnstenv
bound
jae
test
adc
stos
adcl
jb
inc
or
mov
push
iret
cmp
jmp
inc
xor
mov
fprem
adc
rcrb
test
leave
cmc
mov
or
cwtl
test
imul
ffree
mov
sub
xchg
inc
cmc
lds
mov
rcr
iret
lcall
pop
repz
jmp
adc
mov
pop
std
xchg
xor
cmp
dec
fnstsw
push
add
negb
int
or
loope
push
movsl
out
pop
repz
dec
pusha
fistpll
or
cmpl
pop
pop
sbb
mov
mov
ret
subl
push
mov
add
inc
inc
sarl
cmpsb
popa
mov
mov
cltd
pop
lea
cmp
rcll
inc
mov
mov
inc
jno
addb
and
add
and
mov
jge
pop
dec
jne
es
aaa
push
jge
icebp
testb
inc
lds
lahf
push
mov
push
sti
repz
scas
sub
inc
pop
jmp
xor
jp
iret
movsb
cmpsb
or
stc
cld
scas
lods
loop
xor
inc
cmpl
push
inc
push
mov
mov
dec
sahf
push
sbb
jbe
addr16
aam
mov
mov
xchg
sbb
gs
aad
inc
cmc
rolb
imul
je
loop
and
dec
fisttps
xor
shll
mov
pushf
in
push
mov
xor
sbb
pop
cmpsb
movsb
mov
cli
adc
and
hlt
inc
clc
cmp
out
pop
out
push
imul
imul
mov
das
rcrb
dec
lret
dec
mov
jnp
sbb
cmp
mov
imulb
cltd
add
call
imull
push
pop
movsb
pop
push
in
push
push
mov
fadds
sub
mov
add
dec
cmp
and
cmp
inc
popf
mov
push
adc
xchg
mov
pop
lcall
xchg
sahf
xchg
and
jo
inc
add
pop
sbb
rcrb
insb
stos
jmp
add
daa
cmp
mov
mov
loopne
jge
mov
sub
mov
pushf
test
jge
xchg
test
int
push
xor
cmpsl
cmp
cmp
scas
adc
xchg
push
jecxz
push
hlt
aad
iret
ds
nop
jbe
lods
sbb
push
in
mov
fsubs
cmpsb
mov
enter
xlat
loope
xchg
sbb
aas
and
xchg
arpl
fldt
mov
adcb
push
jle
ljmp
adc
sub
or
xor
sbb
dec
adc
xor
test
cmpsb
sbb
stc
pop
lods
sbb
pop
mov
inc
imul
ss
adc
push
test
cmpsl
lds
cvtpi2ps
out
iret
in
jae
pop
daa
lea
push
scas
or
sbb
sarb
sbb
in
or
xchg
inc
and
jp
push
loope
ljmp
fisubs
rcrl
mov
and
or
cmp
adc
jg
pop
push
popf
notl
pop
inc
fstl
aas
fidivs
bound
push
dec
sbb
xor
pop
ja
fldenv
add
cwtl
in
sub
leave
push
daa
add
imul
loope
hlt
xor
lahf
sbb
sti
in
aam
jno
adc
xchg
cmpsb
pop
sub
jg
imul
cmc
inc
pop
or
mov
fisttpl
dec
int
add
xchg
popa
ret
into
mov
lds
pop
push
rcl
adc
cltd
inc
sbb
mov
push
pop
jbe
addr16
xchg
or
fiadds
lods
in
mov
cmp
mov
int
mov
movsb
pop
and
xchg
push
sbb
test
cs
add
shrl
mov
xchg
xorl
in
ror
enter
sub
xchg
dec
xor
pop
sti
or
rcll
mov
shll
inc
xchg
mov
movsl
outsb
cmp
imul
bound
and
dec
cmp
pushf
pop
pop
sub
mov
cltd
hlt
jecxz
mov
and
add
and
and
and
lea
jge
add
jne
leave
xor
movb
cmp
push
jns
jecxz
std
fmuls
es
cmpsb
mov
mov
lods
das
lds
icebp
or
int3
in
clc
loopne
subb
jo
inc
jmp
push
jb
jae
mov
push
pop
imul
and
ja
bound
loop
data16
xchg
mov
imul
lcall
adc
cltd
mov
or
cld
mov
daa
outsb
fidivs
dec
mov
mov
iret
inc
pop
pop
or
mov
pop
dec
and
dec
enter
fstpl
sub
pushf
xor
push
add
or
jg
or
push
adc
push
sahf
jnp
gs
int
pop
sbb
push
gs
test
push
push
add
aaa
and
mov
jbe
dec
dec
mov
data16
testl
ret
cmp
call
cmp
sub
call
je
int3
movsl
sbb
shll
xchg
subl
lods
or
test
jae
cmp
jg
jo
imul
pop
scas
fisubs
xchg
rorb
sub
imul
push
jg
sbb
mov
cltd
cmp
dec
xor
and
cmpsl
xor
mov
push
in
xlat
jbe
push
mov
mov
insl
sbb
or
lock
mov
jne
dec
and
divb
mov
sbb
jp
int
adc
lock
loop
sbb
xchg
push
xchg
pop
xchg
das
lods
ljmp
mov
cmpsl
mov
inc
mov
jge
pop
mov
mov
fisubl
xor
add
rol
aam
aad
inc
jb
adcb
jmp
push
dec
push
sub
loope
inc
adc
mov
ss
xchg
inc
stos
dec
ja
sbb
sahf
sub
faddl
push
xchg
cmp
rorl
sbb
movsl
arpl
cmp
stc
cltd
xor
mov
imul
in
loop
pop
sarb
test
push
pop
inc
lcall
mov
ja
pop
aad
fcmovne
outsb
loopne,pt
push
or
in
cmc
xchg
mov
inc
xlat
inc
xchg
xor
or
aas
imul
and
adc
test
test
inc
mov
sub
mov
and
cmp
cmpsl
jb
lcall
test
inc
adc
scas
testl
push
stc
ret
std
adc
rolb
and
cmp
ror
lods
hlt
or
sub
adc
stos
mov
rcl
clc
and
and
js
call
pop
push
inc
or
mov
stos
adc
cld
sti
pop
push
adc
lods
inc
xor
or
inc
cmp
fs
push
and
sub
ljmp
and
rclb
mov
dec
neg
xlat
mov
mov
daa
jp
or
or
inc
cmp
pop
mov
cs
aaa
xor
xlat
cltd
mov
sbb
insl
int3
mov
mov
xor
mov
and
jmp
push
aaa
push
and
cmp
int3
dec
out
cmp
cmp
mov
mov
push
jno
pushf
jo
jl
adc
sbb
stos
and
or
hlt
cmpsb
dec
in
mov
sbb
in
mov
sbb
pop
es
rcr
movsb
and
int3
cli
call
shr
xor
repnz
mov
leave
pop
daa
fstps
movsl
test
ficomps
xchg
sub
pop
jmp
dec
ljmp
push
inc
and
xor
scas
cmc
lcall
pushf
ljmp
jmp
fistps
xor
fcomps
pushf
int
enter
mov
gs
pusha
jg
xor
push
divb
mov
cmp
in
out
mov
in
mov
jl
pop
dec
cmpsl
in
sbb
in
adc
inc
jae
hlt
jge
lret
add
dec
test
jle
lahf
shll
cld
cmp
movsb
cmp
xchg
movsl
mov
std
repz
and
mov
pop
mov
or
push
push
loopne
pop
cli
stos
and
push
jae
push
xchg
jmp
push
insb
inc
pop
repz
add
push
push
inc
cltd
pop
cmp
in
enter
jg
and
cmp
sub
imul
das
fidivl
insb
adc
mov
mov
sub
int
push
stos
mov
mov
mov
mov
cld
dec
mov
and
cmp
add
jne
notl
in
fsts
sbb
mov
loopne
repnz
cli
shl
cmpsl
pushf
lret
outsl
into
gs
mov
out
pop
into
add
inc
mov
or
dec
stos
lds
mov
loope
loop
jne
mov
sub
push
mov
aam
fsubrs
faddl
mov
call
jae
add
pop
add
test
fwait
jecxz
jmp
adc
roll
arpl
or
sub
and
dec
roll
and
sahf
add
aas
sbb
fwait
jnp
jne
repz
sub
dec
mov
push
mov
mov
dec
imul
cwtl
movsb
es
iret
cmp
ret
jo
push
negl
dec
loope
jne
loope
adc
pop
ret
adc
cmc
fbstp
add
dec
stos
iret
or
sar
add
mov
sub
imul
fidivrs
pop
addr16
shlb
dec
add
and
in
repnz
fidivrl
shr
das
test
xchg
nop
je
arpl
dec
out
in
lock
shrl
mov
sub
sub
ja
mov
push
sarl
sahf
add
mov
enter
pop
shl
idiv
iret
adc
movsl
lock
or
out
xor
test
sti
cwtl
les
cwtl
outsl
std
addb
popa
or
mov
dec
adc
scas
xor
and
and
lds
cmp
scas
aaa
mov
lea
enter
mov
pop
xor
test
fimuls
dec
aad
add
jp
mov
and
and
mov
loop
sbb
mov
movsl
pusha
sarb
in
ds
add
cmp
or
pop
push
jno
decl
jge
jmp
dec
xchg
popf
sub
lret
push
jne
mov
stos
fisubs
ret
adc
aad
lock
xchg
cmc
and
mov
adc
mov
dec
es
lds
daa
and
lods
lods
movsb
movsb
out
inc
sub
and
daa
xor
push
js
int3
jmp
jmp
cltd
insb
cs
xchg
sub
imul
mov
decb
inc
imul
xor
mov
dec
push
dec
out
adc
adc
stc
frstor
ja
add
adc
gs
fs
in
outsl
sbbl
pop
sbb
ret
dec
ss
sbb
ret
cmp
mov
mov
xchg
int3
mov
hlt
adc
imul
mov
clc
mov
das
imul
cli
jg,pt
xorl
push
out
and
mov
icebp
xor
or
push
cmpsl
repnz
stc
xor
inc
fst
push
pushf
and
sub
mov
inc
and
arpl
lret
xor
stos
pop
nop
das
dec
pop
dec
fwait
in
cmpb
mov
inc
add
inc
imul
push
sbb
imul
cltd
mov
and
mov
xchg
leave
out
repnz
push
or
ja
test
popa
mov
iret
fwait
aam
xchg
sbb
sbb
ss
inc
testb
mov
aaa
xor
jne
aad
aas
mov
mov
sahf
or
mov
dec
aam
add
stos
adc
test
mov
or
push
je
call
push
loop
in
fisttps
cmp
pusha
imul
xchg
dec
inc
adc
add
mov
cltd
repz
mov
mov
insl
cmp
enter
addr16
add
cmpsl
pop
push
push
insl
sbb
cltd
sbb
add
xor
dec
stos
jbe
cmp
xor
inc
out
push
lcall
cmp
jne
aas
sub
and
inc
xor
or
fisubs
mov
adc
loope
les
lods
xorl
enter
ret
daa
jmp
mov
dec
mov
push
into
xchg
lods
test
scas
daa
imul
lahf
cmc
fbld
stos
fildl
repnz
outsb
gs
imul
rcl
adc
rcll
xchg
scas
push
cmp
push
pop
mov
adc
sub
std
adc
cmp
xchg
push
or
in
cmp
into
fstl
int
aas
cmp
or
pop
mov
mov
loope
xlat
sub
std
mov
add
sub
mov
outsb
pop
jmp
pop
adc
sbb
enter
add
push
lds
sub
repnz
mov
pop
rorl
sub
push
mov
jecxz
mov
or
mov
and
mov
mov
pop
push
pop
das
les
out
push
lods
call
fs
insl
and
push
jns
cmp
xchg
ss
enter
stc
xor
jno
pop
mov
sbbb
xorb
ret
insl
add
shr
inc
aad
cld
xor
cmp
insb
adc
icebp
mov
or
inc
dec
jl
ret
into
adc
nop
xchg
daa
pop
mov
imul
insb
push
icebp
push
add
or
scas
inc
or
and
hlt
xchg
add
or
in
xchg
out
dec
stos
push
inc
jle
idiv
cmp
mov
int3
cli
mov
fmulp
add
lret
mov
scas
mov
or
inc
dec
and
inc
dec
xlat
fs
push
aam
pop
dec
fs
pushf
sub
pushf
scas
jle
sahf
sahf
xchg
pop
pusha
mov
push
sti
fsubrl
clc
inc
mov
sub
hlt
cmc
sub
jl
movsl
push
and
or
fwait
into
push
jge
cwtl
mov
fcompl
sub
bnd
in
push
imul
mov
jo
jne
cmpb
sub
andb
add
fcomp
pop
loop
loop
adcb
cli
repnz
loopne
enter
jb
rclb
mov
and
out
out
jns
stos
jbe
and
mov
inc
movsl
fs
inc
inc
dec
mov
sahf
mov
in
xchg
add
inc
out
jl
jl
cmp
fldenv
xchg
js
imul
xchg
jne
rolw
ljmp
aad
lods
into
xchg
fadds
divps
movsl
inc
aad
jae
cmp
fmull
pop
in
add
sub
cs
andw
cwtl
xor
clc
scas
test
push
cmpsl
mov
dec
insb
int3
jbe
mov
adc
repnz
scas
cltd
jb
adc
scas
orb
push
cmpsl
sahf
push
mov
sbb
nop
cmp
clc
xchg
je
or
mov
add
mov
add
mov
add
adc
cmp
adcl
mov
rorl
jmp
jb
outsl
sbb
cli
mov
sti
bound
mov
rclb
jge
cli
add
ljmp
jns
mov
loopne
fidivl
push
fsubs
xchg
jae
adc
inc
into
sarl
stos
mov
mov
xchg
and
pop
dec
in
jns
push
movups
mov
lds
jns
sub
aas
add
test
cmp
jmp
mov
inc
xor
ret
xor
inc
fstps
mov
popf
add
ret
mov
aas
dec
pushf
sbb
cmpsl
mov
sbb
dec
ljmp
add
sarl
aas
mov
je
mov
pop
dec
mov
mov
lret
sub
and
mov
inc
inc
mov
mov
sbb
in
xchg
insl
push
subb
in
cmp
xor
adc
stos
pop
out
mov
outsb
xor
push
jp
aaa
mov
int3
xchg
mov
jb
mov
int3
out
cmc
push
xor
mov
sbb
int3
fldl
add
pop
pop
jo
and
in
ljmp
and
fsubrl
adc
aad
mov
ja
shll
cmpsl
outsb
xchg
cmc
push
add
inc
fwait
push
ficompl
cmpsl
loope
sub
out
mov
push
pop
scas
cmpsb
mov
xchg
mov
sub
inc
sarb
jae
pop
aam
scas
mov
cmp
lods
in
xchg
pop
aas
pop
sahf
loope
mov
push
adc
dec
push
mov
sub
cmp
pop
adc
and
jge
or
push
push
pop
out
sbb
lret
inc
cwtl
mov
scas
cmc
mov
repnz
shl
xor
jo
wbinvd
cmpb
cli
cmp
gs
jns
cwtl
cld
nop
or
add
out
loope
hlt
pop
enter
hlt
push
fmull
mov
pop
inc
scas
sbb
sub
repz
roll
xchg
fadds
incb
cmp
push
cld
dec
mov
aaa
clc
xorl
adc
sub
adc
in
aam
popf
mov
jns
sbb
pop
sarb
cmp
stos
gs
cmp
xchg
stc
fldt
add
pusha
arpl
pop
in
mov
iret
cltd
sti
enter
insl
fcmovbe
push
dec
ror
ja
fsubl
insl
fstpt
add
ret
mov
add
clc
mov
sahf
fwait
sahf
lret
adc
imul
call
hlt
jns
mov
and
push
cmp
int
pop
inc
and
call
popa
ds
and
or
sbb
sub
shll
bts
sub
mov
arpl
jp
aam
stos
in
cmp
mov
stos
es
and
sbbb
jns
push
mov
test
shlb
mov
push
push
ret
lcall
mov
dec
mov
pop
add
roll
nop
int
daa
mov
ljmp
add
add
rcll
dec
jnp
cmc
push
jae
cwtl
cwtl
mov
cs
les
adcb
xor
pusha
jb
scas
xlat
shlb
mov
shrl
mov
push
sub
popa
test
push
insb
xchg
inc
mov
inc
shrb
push
sbb
enter
mov
cmp
into
jg
scas
mov
sbbl
rorw
sahf
sub
mov
pusha
or
push
loopne
jge
cmp
test
xchg
dec
xor
shll
cmp
scas
mov
sub
outsl
popa
loop
push
mov
xorb
pop
pop
pop
add
fucomip
inc
cmp
test
popa
popa
cltd
in
and
jl
aas
or
push
rcl
mov
dec
ss
aaa
add
in
int3
clc
repz
leave
xchg
jg
or
rcrb
lret
jo
rolb
fs
fimull
mov
fidivs
mov
loop
push
mov
jne
sti
faddl
pop
mov
push
ds
add
push
imul
mov
lds
mov
test
cli
jg
xlat
ljmp
adc
cwtl
dec
pop
xlat
adc
and
scas
sub
or
popf
sbb
and
je
shll
push
lahf
cmp
mov
adc
outsl
call
imul
scas
pop
dec
inc
in
and
sub
or
sbb
push
out
outsl
mov
sub
push
movsb
mov
ds
jl
cmc
out
sub
sbb
xchg
imul
lcall
pusha
or
inc
in
inc
adc
xchg
pop
push
cmpsb
sub
mov
popw
dec
mov
mov
dec
xchg
test
sbb
xchg
icebp
cld
stc
stos
stc
xchg
lods
in
xor
push
lods
out
xchg
cwtl
jmp
sub
rol
push
popf
outsl
iret
xlat
pop
push
stos
leave
jp
mov
in
pusha
les
movsl
ret
or
pop
movsb
jmp
mov
jge
xchg
popa
pop
test
fmul
xor
push
mov
lods
loop
test
adc
push
dec
mov
sub
mov
gs
or
sti
sti
push
mov
mov
das
fadds
and
xchg
fcomps
adc
lock
ret
mov
in
xchg
pop
inc
idivb
in
xor
sub
dec
mov
pushf
dec
test
push
and
ud1
pusha
or
mov
adc
insl
dec
sub
scas
dec
pop
and
shr
cmpsl
stos
dec
in
sbb
mov
add
mov
test
cli
mov
xor
fbld
xor
jmp
cmc
adc
call
cmp
xchg
pusha
rcll
ficoml
shrb
sub
sub
pop
push
scas
loopne
divb
xor
mov
in
shll
imul
push
stos
loop
or
nop
movsl
jne
xor
fldenv
add
or
and
xchg
push
dec
jbe
scas
loope
cmpsl
outsl
testb
lret
or
adc
scas
mov
addr16
js
mov
mov
ds
jg
sbb
ret
cwtl
orl
in
stos
jg
sti
mov
dec
pop
pop
outsl
pop
mov
mov
adc
dec
roll
xlat
xor
pop
jae
pop
fisttpll
or
out
dec
mov
fbstp
in
inc
sti
out
xchg
hlt
push
cmpsb
jbe
ror
sub
push
push
fbld
jmp
test
and
and
or
popf
xchg
dec
cmpb
daa
packuswb
imull
dec
pop
cli
adc
pusha
jecxz
mov
test
out
bound
sub
inc
mov
das
sahf
push
daa
push
loopne
lea
or
xchg
popf
xor
nop
pop
cltd
push
in
fcmovne
sub
xchg
jno
icebp
je
je
pop
aad
push
ret
pop
enter
mov
sahf
ret
or
add
adc
and
pop
push
in
jne
mov
das
leave
sbb
sub
lret
out
xchg
stos
jecxz
sub
loop
adc
jmp
int3
daa
test
and
jecxz
mov
stos
and
jecxz
and
dec
jno
ja
mov
aas
ret
push
push
leave
in
sub
imul
shr
jns
fptan
xor
in
lcall
rcr
rcll
sub
inc
out
mov
loope
out
push
sub
inc
aaa
jmp
loop
push
inc
divb
rcr
sub
jo
xchg
aad
fisttpll
sbb
fdivr
pop
xchg
mov
xor
sbb
lods
rolb
nop
mov
test
ret
push
das
push
jb
or
daa
adcb
les
or
mov
pop
push
sbb
xor
inc
inc
mov
xlat
sbb
lahf
pop
or
sbb
insb
bound
int3
js
push
mov
inc
das
repz
pushf
les
xlat
imul
mov
test
push
push
arpl
jp
mov
adc
lahf
mov
pop
xor
icebp
repnz
dec
orl
sbb
xor
clc
jmp
push
cmpsb
xchg
popa
mov
xchg
or
jb
mov
outsl
push
adc
pop
scas
pushf
fnstsw
or
shlb
and
pop
pop
cmp
and
out
popf
mov
stos
mov
in
mov
repnz
in
dec
xchg
and
adc
dec
sub
rcrb
sbb
test
jne
inc
sbb
fadds
out
imul
popa
or
dec
xor
cmp
pop
sub
cmp
xchg
push
push
mov
mov
add
pop
inc
in
add
lods
stc
call
outsl
movsb
imul
push
cmc
popf
pop
ljmp
or
push
mov
add
sbb
xchg
pop
sbb
mov
sarb
ficompl
add
mov
pusha
fcoms
jmp
jle
jns
ret
and
add
adc
in
pushf
sub
aad
bound
sbb
aas
in
mov
inc
inc
mov
and
cs
rcl
and
sbb
ror
mov
or
call
lcallw
scas
fs
aas
adc
mov
fistpl
add
dec
and
push
cmp
addr16
jge
cmp
mov
or
inc
dec
call
loope
sub
push
sti
sub
icebp
dec
pop
xor
push
cli
fiadds
jae
ljmp
enter
inc
ds
aam
mov
out
xchg
xchg
push
mov
and
pop
shlb
inc
xchg
jp
jne
lock
mov
cmp
xor
pop
mov
in
cmpsl
or
in
movsl
adc
mov
stos
outsl
sahf
divl
push
lret
mov
fcoml
xlat
xchg
sub
iret
mov
xor
shr
sub
inc
or
dec
jle
hlt
cmc
xor
mov
movl
cli
sub
loopne
cld
and
mov
jmp
add
mov
mov
pop
push
gs
inc
aad
dec
xor
sub
jl
jecxz
mov
insl
cmp
xchg
jp
int
cmp
xchg
jg
gs
and
jno
mov
data16
fwait
dec
cli
aas
jmp
test
pop
test
leave
dec
rcll
arpl
jmp
mov
fdivrl
dec
scas
es
xorl
adc
into
inc
inc
add
lds
inc
movsl
and
inc
cmp
jl
jmp
lods
mov
sahf
je
cltd
lahf
dec
enter
pop
lds
or
bound
mov
sbb
sub
dec
ds
lods
push
xor
insl
xor
nop
pop
dec
mov
dec
cli
int3
mov
ret
cmp
cs
sbb
sbb
je
mov
imul
rcr
inc
paddsb
fs
mov
sahf
fsubl
test
adc
add
xor
sbb
pop
xlat
push
jns
shrl
adc
jmp
xor
inc
es
aam
dec
out
mov
push
or
clc
data16
xor
pop
sub
mov
pop
lret
pop
pushf
movsl
faddl
mov
mov
mul
xor
pop
dec
inc
or
ret
in
out
mov
ja
cmp
popa
and
add
inc
cli
push
jecxz
push
inc
adc
push
js
lock
and
outsb
jl
mov
or
push
mov
mov
jl
into
inc
cmp
cmp
and
mov
push
notb
pop
cmp
dec
or
out
sbb
pop
jle
test
mov
fsubl
popl
lock
in
add
add
xchg
mov
xchg
inc
incl
inc
lods
xor
pusha
divb
inc
inc
sbb
decl
aaa
test
lcall
daa
push
test
jmp
xchg
push
pop
cmpsb
clc
in
fildl
push
mov
xchg
faddl
icebp
popf
pop
mov
repz
iret
add
mov
jnp
fwait
xchg
and
cmc
ss
lods
cvtpi2ps
mov
pop
sbb
pop
jmp
scas
bound
lods
adc
inc
sbb
lret
lcall
test
xor
cmp
in
fcomip
jecxz
xor
or
mov
xchg
push
scas
or
cmp
loope
rolb
or
lods
pushf
sub
xchg
push
mov
jbe
adc
inc
cmp
xchg
clc
dec
insl
pop
pop
cli
cmp
sub
loop
pop
push
pop
push
push
push
scas
inc
andl
dec
push
mov
inc
cmp
or
mov
sub
sub
adc
out
clc
push
lock
adc
sub
ffree
clc
push
testb
fsubs
pop
cmp
int
inc
insl
mov
push
lds
sbb
mov
sub
test
jp
xor
test
fsubrp
push
ljmp
movsl
in
mov
mov
cwtl
push
jns
jp
lret
sbb
cmp
push
pop
aam
stos
push
mov
mov
ret
xchg
int3
mov
push
push
add
lret
jne
mov
mov
xorl
jne,pn
push
cltd
pop
fisttpll
in
mov
push
and
dec
dec
push
xor
lds
mov
xor
fwait
dec
ss
cmpsb
xchg
add
jno
sub
jg
add
mov
int
or
fists
bt
cmp
pop
arpl
cmp
inc
cmpsl
add
cmp
ficompl
and
pop
cmp
pop
test
repnz
mov
stos
mov
pop
jecxz
fsubs
ds
loop
cmp
jl
sub
jb
daa
push
push
xchg
xor
repnz
jmp
jecxz
mov
push
insb
mov
lahf
mov
xor
mov
scas
insl
leave
mov
jecxz
lds
sbb
mov
movsb
sub
fstps
dec
add
jmp
push
or
sub
inc
rorl
jl
shlb
xor
mov
lret
sbb
mov
fisttps
bound
mov
xchg
mov
cmpsl
into
cmp
jg
mov
or
iret
fnstsw
adc
mov
popa
xchg
inc
fldt
push
pop
ss
jne
stc
cmp
rcrb
cmp
pop
or
mov
mov
sbb
mov
enter
mov
aaa
imul
jl
test
mov
stos
xlat
imul
mov
mov
inc
je
mov
out
add
add
mov
mov
neg
xchg
xchg
jecxz
out
inc
jp
shlb
xchg
push
xor
cltd
pop
lcall
cmp
jge
inc
add
inc
jo
xor
jge
movsb
dec
inc
pop
subl
cwtl
add
addr16
sarb
rclb
fwait
lcall
outsl
jg
ljmp
add
jg
cltd
rolb
xlat
lds
test
ljmp
lock
push
in
xchg
pop
and
popf
movzbl
js
dec
jno
jnp
and
inc
lahf
sub
jl
scas
dec
sbb
rcl
insl
inc
scas
dec
repnz
pop
roll
pop
cmp
hlt
mov
ss
insb
sub
mov
mov
inc
mov
jg
jle
subb
push
fistpll
dec
imul
fbld
adc
cwtl
lahf
inc
filds
jbe
push
add
xchg
xor
or
repz
lds
frstpm(287
imul
xor
cmpsl
jp,pt
cmp
and
sar
mov
pop
mov
cmpsb
icebp
adc
cmp
fcoms
mov
mov
out
add
push
inc
and
adc
aad
jnp
add
xor
jecxz
cmpsb
mov
mov
xchg
addr16
inc
mov
enter
add
ficoms
pop
sub
jo
sbb
inc
lahf
jae
adc
les
pushf
je
loop
scas
nop
subb
cmp
sbb
adc
add
add
mov
xorb
stos
outsb
pusha
cld
push
adc
or
fstp
lock
cli
mov
sbbl
jp
das
sub
jo
rcl
fwait
mov
fidivrl
inc
mov
iret
mov
pop
jmp
xor
mov
jno
mov
dec
cmc
sbb
mov
inc
xchg
clc
push
fstpt
movsl
mov
decb
movsb
sarl
ljmp
mov
popf
jb
pop
adc
shll
lret
rcr
cmpsl
inc
push
rorl
sbb
add
add
arpl
or
sbbb
out
and
xchg
xor
lret
push
in
and
push
icebp
insb
mov
pop
and
rcl
aam
push
dec
popl
test
jmp
enter
mov
push
xchg
cmp
push
mov
fadd
ficomps
fidivs
cmp
aas
xchg
nop
sub
popa
dec
lods
mov
and
adc
hlt
sub
movb
das
inc
or
mov
cwtl
xlat
mov
fmull
jl
shlb
push
in
push
xor
jnp
or
leave
dec
sub
aam
pop
fcmove
ss
adc
mul
clc
inc
sub
in
jns
xor
inc
inc
inc
push
or
fstp
daa
test
aas
into
cs
insl
xchg
sarb
lods
mov
push
adc
sbb
jo
mov
call
mov
jns
xor
lcall
and
and
bound
cs
stc
jno
sbb
mov
scas
pop
mov
je
mov
out
inc
jl
and
cmp
leave
out
das
mov
shlb
xlat
loope
pop
adc
daa
cmp
sub
aad
ljmp
rol
repz
lods
cmp
mov
shrl
push
mov
std
sbb
lock
add
push
es
or
cmp
lret
mov
xchg
xchg
cmp
test
jae
pop
sahf
dec
out
mov
and
out
lock
sbb
xor
inc
adc
out
ljmp
lock
adc
pusha
lcall
lock
cltd
pop
sbb
loop
imul
bound
jb
jae
cmove
into
rorl
adc
dec
shl
jle
pop
repz
std
cmpsb
add
xchg
mov
dec
adc
movsb
jo
jmp
mov
adc
add
jp
mov
mov
mov
mov
xchg
test
add
add
inc
inc
add
sub
vcomisd
mov
mov
int
push
es
or
adc
daa
fidivs
or
imul
cmp
inc
dec
add
inc
clc
mov
or
outsl
pop
cltd
iret
mov
add
addr16
mov
add
cmp
popa
mov
mov
lret
ja
js
sub
xchg
sti
cltd
add
sbb
lahf
stc
cltd
fwait
sbbl
dec
xor
pop
xor
add
cli
mov
push
push
cmp
xor
addr16
decb
inc
xchg
sarb
divl
pcmpeqb
xor
cltd
or
pop
shr
add
jle
aad
push
in
jl
decb
inc
xor
cmpsl
mov
pop
stos
sub
cltd
sbb
jbe
test
fwait
mov
mov
scas
cs
fdivrl
movsb
out
push
ror
cltd
retw
out
rcrl
sti
rclb
mov
es
xchg
dec
fwait
enter
fwait
jl
int
pop
dec
fimuls
movsb
sbb
push
jno
sar
sbb
stos
cmp
xchg
out
xchg
imul
cs
ljmp
sbb
nop
inc
lds
daa
lret
jle
mov
xchg
outsl
sbb
sbb
cwtl
jl
repnz
lods
fs
xchg
mov
push
pop
fdivrp
cld
pop
test
push
cmp
cld
push
ja
lock
xor
xor
test
rclb
push
leave
mov
pop
shll
loop
push
aaa
mov
sub
stos
mov
push
das
dec
sbb
fstpt
inc
cltd
fdivrs
out
mull
test
and
pushf
mov
aam
xchg
jb
ds
pop
in
sub
mov
rcl
loopne
jae
xchg
mov
ljmp
rsqrtps
ss
push
push
dec
jno
in
pop
xlat
in
adc
xor
sti
movsw
mov
call
lahf
popf
xor
push
lds
xchg
loop
call
or
push
lret
imul
cli
mov
sub
mov
cmp
mov
add
dec
xchg
lock
ljmp
lods
fimull
xchg
cmp
inc
clc
repz
pop
out
pop
cmp
push
xlat
es
sub
mov
insl
inc
sbb
movsb
dec
iret
sub
out
stos
xor
in
mov
mov
mov
shr
ficompl
jle
iret
repnz
and
cmp
clc
xchg
scas
cs
pusha
cmp
cmp
fwait
dec
cltd
cmp
insb
in
dec
pop
push
stos
add
xor
aad
push
mov
xor
pop
or
cmp
mov
xchg
iret
or
dec
adc
out
fwait
sub
orl
pop
ret
sbb
loopne
enter
ljmp
rcll
data16
or
cmp
push
out
fwait
enter
hlt
ds
js
ljmp
xchg
push
cmpsl
cmp
fwait
xchg
xchg
sbb
sbb
push
push
out
cmpsl
ss
dec
jno
mov
pop
pop
mov
dec
loope
mov
imul
push
adc
sub
push
clc
call
inc
xchg
repz
mov
gs
jns
fidivrs
xchg
mov
fsts
icebp
nop
jl
daa
xor
xchg
pusha
addl
xchg
sbb
xchg
xchg
notb
push
dec
mov
das
cmpsl
shufps
inc
scas
push
or
dec
xchg
rcrl
in
movsb
jno
mov
dec
mov
lea
mov
pop
insl
push
push
int3
mov
mov
lds
mov
lds
adc
lock
out
jg
pop
ljmp
out
jae
lea
add
sti
scas
jecxz
imul
cmp
push
das
mov
mov
jo
fistpll
cmpsl
mov
inc
jnp
add
arpl
aaa
xchg
mov
ficomps
jge
or
movsb
jb
mov
dec
lea
sbb
scas
cld
sbbb
clc
aaa
clc
test
iret
jmp
push
andl
push
arpl
jo
pop
mov
push
xor
jb
test
nop
mov
push
lahf
cmc
call
jmp
imul
pop
gs
adc
cmp
outsl
or
pop
push
xchg
popf
xor
mov
out
incb
pop
jmp
sub
leave
aam
jbe
sbb
outsb
xor
jae
and
in
push
fnstsw
dec
mov
incb
push
inc
mov
lock
sbb
xchg
add
push
xor
cld
xchg
lret
adc
imul
sbb
pop
daa
cs
push
mov
std
xchg
jo
testl
mov
sti
mov
aam
dec
aas
xchg
and
jmp
repnz
aad
ds
push
xor
movsb
pop
fcomi
push
cmp
jnp
xlat
adc
push
pop
dec
negl
pop
xchg
dec
xchg
pop
jbe
test
in
jne
pop
pop
repnz
jbe
adc
insb
mov
loope
jp
sbb
adc
push
data16
adc
mov
imul
dec
sub
in
sub
rorb
or
lea
or
stos
lcall
xchg
jp
lcall
add
mov
or
pop
ljmp
and
test
mov
movsb
iret
loope
enter
jg
push
pop
pop
outsl
mov
ds
or
sbb
faddp
movsl
adc
sub
push
test
and
int
push
cmpsb
cmp
cmp
xchg
ret
push
mov
mov
filds
push
xchg
and
cmpl
mov
sbb
pop
mov
add
in
pusha
loopne
cmpsb
xlat
sub
adc
jne
mov
jno
mov
daa
cli
flds
and
fcoms
cs
rorb
inc
or
cs
mov
rcrl
std
hlt
adc
imul
inc
xchg
frstor
repz
jbe
dec
or
mov
sbb
in
imul
das
pop
inc
clc
sbb
subb
data16
inc
cmp
cmpsb
xor
pop
andl
jmp
inc
pop
rorb
xor
cmp
sbb
xchg
sbb
loop
fmuls
add
fisubrs
pushf
pushl
xlat
stc
test
cmp
mov
pop
add
movl
mov
dec
insb
mov
test
xlat
scas
sbb
stos
aaa
loop
xor
mov
and
xchg
loope
imul
js
imul
jb
loop
xor
mov
xchg
jbe
inc
pushf
dec
fcompl
imul
add
mov
xchg
mov
inc
xchg
jae
sbb
cvttps2pi
outsl
out
stos
scas
fsubl
sbb
adc
fists
and
fnstsw
xchg
xor
bound
orb
xor
insb
lock
arpl
cmpsb
push
int3
cwtl
popf
icebp
cmp
cmp
cmp
enter
pusha
xor
inc
mov
xor
negl
sub
jp
test
aas
aas
je
or
lahf
filds
dec
test
sub
inc
insb
inc
push
aam
fbld
pushf
arpl
pop
fnstenv
xor
leave
dec
int
add
mov
in
xor
add
in
cltd
jno
jo
pop
pop
ja,pn
sti
stc
or
xor
mov
rcrl
push
dec
lret
shlb
mov
dec
call
adc
mov
xchg
or
adc
mov
scas
xchg
add
iret
add
daa
pop
fwait
popf
mov
xor
leave
cmpl
and
ljmp
cmp
stc
xchg
push
mov
xor
arpl
lret
hlt
sti
test
je
aad
add
xchg
ret
mov
push
or
fdivr
subb
add
test
ja
sub
jb
mov
cmp
sbb
xchg
cmp
scas
loope
fildl
sub
xchg
ret
xor
add
data16
jbe
shlb
mov
sbb
xlat
xchg
pushf
fs
inc
sbb
sarl
mov
fdivs
or
or
and
dec
scas
outsl
jge
jnp
inc
test
into
lock
adc
pop
xchg
and
push
es
mov
repz
xlat
test
out
insl
pop
test
jmp
adcl
aad
jl
xchg
inc
mov
aaa
sbb
xchg
mov
fs
jg
xor
ja
lods
loope
push
test
call
xor
lods
clc
sub
loopne
andl
add
scas
push
or
cmp
dec
in
xchg
ficoml
mov
jge
push
pop
jno
xchg
loop
arpl
insb
dec
outsb
dec
jmp
cwtl
loop
lods
movl
icebp
popa
xchg
push
sbb
sub
and
stos
mov
jp
lock
jmp
fstl
push
ss
xor
pop
push
ss
jmp
inc
or
pop
das
add
test
xchg
push
mov
cli
mov
ds
pushf
adcb
xchg
xor
sbb
jmp
aas
stos
sub
aam
push
sbb
mov
adc
xchg
mov
lea
inc
xchg
pop
daa
cltd
adc
subb
subl
add
addl
lods
pop
sbb
icebp
js
jmp
gs
loopne
ror
pop
gs
lcall
inc
add
jg
adc
into
dec
call
lock
int3
mov
push
adc
add
dec
repnz
push
daa
mov
xor
roll
inc
ljmp
and
or
push
xchg
xchg
pop
cmp
mov
sbb
jecxz
rol
inc
movsl
cmp
arpl
sahf
mov
adc
push
jno
xor
xchg
dec
adc
pop
lods
adc
cwtl
mov
cmp
sub
aas
not
fldt
fstpl
cld
add
mov
sub
dec
stos
mov
dec
mov
negb
jecxz
lahf
xor
test
push
jge
push
vpaddd
pop
xchg
mov
xchg
adc
out
mov
mov
cmp
dec
mov
lea
mov
mov
inc
outsb
pop
adc
mov
sbbb
or
and
in
push
pop
adc
add
jne
sub
in
add
mov
in
outsl
cwtl
std
pop
push
cmp
adcb
mov
ss
rcrl
pop
mov
imul
xor
xor
xchg
sub
lods
gs
popf
idivb
pop
push
or
dec
fidivrs
dec
mov
add
push
xchg
xchg
mov
mov
popa
adcl
daa
repnz
ffreep
jmp
fildll
adc
push
push
mov
jo
mov
inc
aaa
les
ss
or
push
call
xor
bswap
rcrl
add
jnp
test
jmp
mov
adc
jno
xchg
dec
movb
scas
divb
xchg
call
inc
xchg
inc
cmp
xchg
imul
cmc
in
mov
sbb
icebp
jmp
pop
mov
cmp
out
pop
mov
cli
into
dec
std
repz
sbb
fsubr
mov
sti
call
jp
or
jbe
in
inc
fstpt
lcall
loope
mov
jbe
xor
xchg
pop
test
fisubrs
js
out
push
jl
shlb
mov
push
addr16
jo
xor
and
adc
mov
adcb
pop
das
scas
stos
and
daa
lret
imul
aad
pop
test
xchg
cli
icebp
inc
and
inc
jnp
clc
xchg
xor
push
repnz
fcomps
in
inc
push
sub
jae
in
xor
xor
dec
es
fisubrs
mov
das
je
add
nop
push
xchg
add
add
jmp
testb
push
out
insb
inc
fisttpll
bound
xchg
movsb
mov
leave
and
sub
cld
push
sub
mov
movsl
xor
cli
and
dec
mov
adcl
jbe
xor
int
xchg
mov
out
cmp
and
fldenv
sub
lahf
repz
ljmp
add
sti
xchg
jg
mov
mov
leave
movsl
stc
rorl
popf
jecxz
aam
add
cs
not
sbb
cmovae
xchg
ljmp
shlb
addr16
dec
lock
daa
jae
and
and
push
mov
mov
inc
mov
das
xchg
xchg
loopne
push
mov
jg
xor
outsb
xchg
mov
inc
xor
ds
or
mov
out
adc
xor
lret
js
rorb
dec
jno
xchg
sbb
push
push
cmp
xchg
mov
das
add
inc
divl
mov
jb
push
mov
out
pop
cmp
pop
and
xor
icebp
stc
push
out
or
jecxz
sbbl
dec
into
push
push
or
rcr
sub
int3
cmp
dec
lods
cmp
mov
call
and
sbb
pop
xchg
xor
mov
loope
call
stos
mov
gs
jmp
aas
mov
jle
add
mov
pop
shrl
push
mov
sub
out
in
cs
ljmp
addr16
int3
add
inc
pop
pusha
pop
mov
mov
outsb
add
dec
jle
sbb
ret
mov
push
jmp
rclb
ja
aas
jmp
sbb
iret
xchg
cmp
sub
hlt
and
sbb
fistps
fsub
movsb
imul
ja
std
sahf
shlb
jnp
adc
pop
push
cmp
out
push
mov
and
fs
in
push
mov
loope
out
inc
int
bound
out
xor
jnp
leave
in
xchg
fsub
daa
cld
adc
call
ret
lret
and
stc
popa
lods
xor
mov
mov
movsb
mov
sbb
cwtl
scas
mov
js
inc
jnp
push
or
cmc
mov
and
sub
sbb
jecxz
add
push
pusha
mov
out
push
pop
inc
xor
push
jns
and
ret
out
aad
in
not
jbe
cmp
scas
ss
stos
sti
test
pop
cmp
sahf
dec
imul
inc
lds
insb
push
sbb
push
aaa
push
jne
aad
and
inc
mov
ljmp
cmc
lods
mov
les
imul
adc
enter
mov
mov
or
fmull
xor
movsb
ret
cmp
xor
adc
in
and
sub
in
ja
test
int
jo
mov
sahf
jge
js
push
cmp
sub
jne
dec
jne
jmp
roll
jg
mov
cmp
stos
int3
fldcw
dec
push
push
les
sbb
aas
ret
ret
out
fcmove
xchg
in
pop
fnstenv
sbbb
lods
sbb
rcrl
dec
jns
lock
popa
stos
gs
pop
jns
xor
xor
mov
stos
sub
mov
ljmp
cmpl
mov
cmpsb
or
pop
xchg
jns
push
xor
adc
add
and
das
test
shr
js
test
cli
jbe
rcll
aam
test
cli
xor
adc
mov
push
sbb
xchg
sub
sahf
mov
mov
pop
sub
sbb
and
ljmp
jl
inc
push
jl
test
aad
ss
inc
inc
insl
push
in
push
in
jg
faddl
lock
loope
xchg
adc
ss
or
int3
iret
insb
leave
rcrl
sbb
rcl
daa
iret
push
adc
xor
mov
lret
or
sbb
insb
adc
in
dec
inc
aad
addb
negb
inc
mov
cmc
cltd
mov
cmp
lret
push
fcomp
xor
add
xchg
lock
cltd
cld
outsl
std
dec
je
mov
and
inc
adc
push
in
add
das
or
movsl
cmp
loope
inc
lock
lods
ds
jno
push
stos
into
bound
push
xlat
js
inc
imul
pop
std
cmp
js
inc
sub
scas
pop
jns
data16
mov
testl
adc
cmpsb
insb
push
push
add
cmc
mov
lret
cmpsl
sti
std
popf
pop
mov
scas
mov
add
out
test
mov
aam
ds
nop
inc
sti
jle
xchg
movsl
lret
adc
repz
push
or
cltd
popa
cmp
cmp
clc
xchg
jne
movsb
xlat
lret
or
pop
push
push
lcall
cmp
les
or
out
jns
inc
inc
fwait
popa
stc
inc
aas
imul
cmp
loopne
inc
or
mov
test
adc
jge
cmp
shrl
xor
js
test
add
cs
testl
lret
xor
push
pop
cmp
out
push
mov
and
popf
es
in
filds
pop
outsb
xor
xchg
mov
mov
jbe
imul
pop
xor
xchg
rcr
addr16
sbb
xchg
lock
and
cmp
mov
fstl
push
xchg
aas
mov
push
ljmp
dec
out
pop
and
mov
sub
inc
js
mov
lds
inc
cli
mov
inc
mov
lcall
mov
add
xorl
xor
xchg
mov
hlt
push
lret
hlt
push
push
pop
pop
arpl
sti
je
xor
fiadds
adc
pusha
popa
movsl
aas
adc
ret
in
rcll
mov
fistpll
daa
xor
mov
and
inc
xchg
stos
sbb
cmpsl
lods
dec
mov
in
les
jo
movsl
add
sbb
imul
shlb
mov
sub
cltd
and
sub
mov
xchg
pop
ret
mov
mov
ret
rcrl
cmc
xor
cmp
xchg
and
les
sbb
pop
scas
mov
loope
stc
xchg
lods
inc
test
jne
dec
or
out
jle
std
test
daa
out
mov
lds
push
or
add
popf
je
testb
jg
cltd
repz
sbb
jg
adc
lahf
mov
or
sahf
cwtl
popl
fmull
pop
scas
leave
push
add
mov
mov
in
pop
shrl
std
inc
and
mov
or
mov
repz
or
xor
ss
cmp
sub
scas
push
sub
outsl
jg
cmpsl
inc
push
jo
jg
jl
enter
inc
push
movb
sub
scas
adc
xchg
mov
cmpsb
push
mov
xor
mull
fadds
cmp
popf
in
fsubs
jecxz
cmp
pop
fists
shlb
mov
push
aam
push
arpl
sbb
dec
arpl
xor
jne
push
pop
lock
lock
in
nop
xchg
aad
jno
orl
rcrb
xor
add
add
rclb
cltd
ss
pop
jl
add
nop
sahf
sub
outsb
or
adc
dec
lcall
ret
adc
lods
fisubs
sahf
sti
push
push
test
xchg
xor
jbe
sub
sub
insb
adc
and
add
pop
jecxz
jo
push
int
mov
push
pushf
pop
mov
imul
pop
cmp
adc
in
cmc
or
cld
xchg
leave
bndldx
pop
out
jecxz
arpl
xchg
xchg
jg
out
fidivrl
push
xchg
jp
call
je
pusha
mov
scas
and
fs
push
adc
movsl
pop
and
test
mov
bound
std
jle
and
sbb
cmpsb
adc
ror
out
xchg
sbb
mov
dec
movsb
mov
rorl
ret
imul
cmp
cs
or
cli
sub
or
mov
push
jno
lds
outsl
dec
out
mov
rol
sbb
add
stos
adc
bound
adc
stos
ja
dec
mov
mov
cmp
fs
das
add
std
leave
mov
mov
mov
mov
add
add
rol
mov
and
add
bound
arpl
ret
inc
scas
inc
cmp
es
mov
les
sub
xchg
cmp
test
push
jbe
sti
js
mov
and
add
mov
ret
push
jo
and
sbb
clc
push
aad
jmp
divb
test
daa
jmp
mov
pushf
cld
jnp
enter
xor
mull
jae
push
add
lock
sub
fwait
xchg
adc
mov
mov
sbb
adc
push
stc
icebp
push
mov
sarb
push
xor
sbb
nop
mov
jbe
test
adc
mov
mov
cmp
clc
daa
and
out
out
cmpsb
lret
faddl
scas
sub
fistl
jg
ljmp
mov
in
pop
mov
mov
jnp
sub
inc
enter
add
sub
jae
add
mov
outsb
sbb
mov
mov
mov
scas
push
gs
cmp
sbb
or
out
fsubl
in
pop
dec
jbe
fisubs
push
mov
xor
ja
neg
pop
adc
ss
xor
adc
pop
pop
pusha
jno
fwait
mov
dec
fisubrl
inc
pop
mov
daa
sbb
ficoml
mov
mov
adc
movsl
outsb
lods
xchg
idivb
mov
stc
test
mov
cltd
bound
push
pop
roll
out
ss
inc
in
mov
adc
les
shrb
fwait
mov
dec
sbb
les
push
pop
les
inc
push
out
push
lds
dec
out
stos
mov
cmp
loop
sub
push
pop
jmp
mov
dec
inc
add
mov
pusha
sbb
mov
addr16
sub
lock
push
loop
clts
push
dec
repnz
pinsrw
icebp
xchg
lea
xor
hlt
adc
jmp
call
stos
cli
popf
dec
sub
scas
dec
jge
mov
jp
pop
dec
in
ss
inc
mov
sub
and
cmpsl
aam
cmc
je
inc
mov
jae
sbb
push
push
jb
int3
stos
jne
int
popf
arpl
fwait
addl
adc
push
ss
mov
sub
leave
into
insl
rol
add
or
push
inc
inc
popf
xchg
xor
sub
push
or
cltd
xlat
cmp
loope
cmc
outsb
in
mov
popa
ljmp
shrd
adc
adc
jne
inc
scas
mov
sub
or
inc
repz
arpl
je
jbe
mov
cltd
jne
fistps
pop
sub
repnz
dec
ss
jno
addr16
insb
jb
jbe
out
mov
add
jl
mov
adc
sbb
icebp
jmp
addr16
nop
arpl
lret
hlt
sbb
cmp
dec
inc
es
int
inc
into
popf
aas
jb
cmp
jg
pop
push
bound
je
inc
mov
and
dec
xor
clc
cld
dec
mov
loop
inc
shrb
test
mov
jmp
nop
sub
out
mov
push
clc
inc
fidivrl
data16
fnstsw
mov
incb
inc
out
dec
pop
sbb
sub
out
rcrl
jbe
popa
aas
mov
lcall
fsubrs
cs
fistpl
cmpsb
stos
icebp
dec
adc
cmp
int
in
mov
ret
and
push
push
and
push
imull
pop
and
imul
jbe
cli
jmp
mov
xor
pop
fcompl
hlt
xchg
adc
pop
iret
into
or
jns
push
xor
and
dec
data16
inc
add
pushf
rorb
cmp
pop
mov
push
push
or
mov
iret
inc
cld
xchg
mov
ror
adc
out
arpl
shl
xor
jno
xor
and
dec
arpl
mov
andl
pop
cltd
out
mov
ja
dec
insl
mov
dec
dec
or
lds
imul
sbb
lahf
insb
mov
int3
sub
fisubrl
mov
jno
mov
pop
insb
test
lcall
nop
jge
daa
mov
ret
xchg
add
sub
mov
mov
mov
lock
xchg
lcall
frstor
inc
fdivl
pop
out
or
dec
xor
into
or
xor
and
cmp
aad
xchg
mov
xor
adc
cmp
lahf
inc
sarl
test
lea
fistl
int
ljmp
les
sbb
lods
stc
jl
rcll
xchg
fmul
iret
mov
push
mov
push
dec
adc
ja
mov
xor
cli
movsl
and
roll
push
or
movsb
int3
inc
mov
popa
jae
or
les
push
shlb
test
inc
push
mov
jmp
mov
loope
insl
inc
xchg
add
add
add
push
jo
push
sub
ficompl
lods
je
add
ds
ret
mov
push
mov
mov
fisttpl
stc
adc
adcb
inc
pop
pop
dec
or
pop
test
mov
je
fs
and
xchg
ret
and
shrb
push
ljmp
int
pop
xor
adc
inc
lds
push
aaa
idivl
test
push
popa
sub
adc
scas
movsb
jge
movsb
insb
in
lods
test
cmp
shrb
popa
sarl
in
push
pop
sbb
pop
jl
jmp
xchg
jae
cmpsb
inc
fdivrs
lret
sbb
pop
shrd
pushf
lret
push
add
mov
or
dec
mov
push
dec
shrb
adc
jl
scas
pop
out
je
inc
lcall
jne
pop
hlt
cmpsb
lret
je
loop
fxam
mov
repnz
mov
jmp
dec
sbb
cli
lea
jmp
mov
rcrl
cli
xor
ret
push
sarb
xor
sbbl
fistps
sub
and
and
fidivrs
adc
add
dec
mov
fmul
ljmp
lds
mov
popa
xor
mov
cltd
enter
pop
aam
push
push
pop
cld
inc
sub
jo
test
inc
lods
and
loop
push
lahf
sti
in
sbb
pop
ljmp
andb
xor
sbb
andb
bound
push
pop
mov
mov
mov
or
and
and
mov
cld
sbb
loop
mov
add
pop
rcrb
enter
mov
mov
or
xchg
lods
les
jmp
outsl
sbb
in
std
stos
dec
inc
into
lock
in
push
xchg
push
lds
mov
call
rol
testb
arpl
sahf
sub
movsl
mov
sahf
jbe
add
sbb
movsl
push
cmpsl
xor
lret
add
push
das
mov
pop
xor
mov
mov
sti
shlb
or
xchg
jp
mov
xor
shrl
lods
sub
std
cmp
loope
dec
jno
addb
iret
imul
jg
jle
das
out
adc
movsb
sbb
in
cs
adc
inc
pop
es
jge
cmpsl
sbb
xor
fistpl
mov
push
or
adc
adc
loop
or
mov
dec
cwtl
mov
push
xor
xor
repnz
mov
push
push
inc
test
jle
mov
aas
aaa
les
addl
or
imul
cmp
xchg
clc
outsl
iret
sub
test
addr16
mov
into
pushf
loope,pn
lock
mov
inc
or
and
or
push
sahf
leave
fiaddl
cmc
cli
xchg
lods
pop
adc
and
fbstp
xor
std
mov
movsl
jp
adc
and
push
dec
test
adc
iret
xchg
jno
shlb
cmpsl
push
dec
add
cwtl
mov
add
fwait
dec
repnz
movsl
jge
sub
outsb
shl
loopne
std
xchg
jnp
pop
int3
clc
push
xor
das
mov
adc
in
lds
lahf
data16
mov
jo
pop
jnp
repnz
mov
inc
lahf
add
push
movsb
sbb
js
jge
adcb
andb
inc
and
pushf
movsb
incl
add
mov
mov
sbb
ljmp
cmpsl
push
pop
jnp
repnz
add
scas
ss
insb
scas
or
idivl
dec
xchg
inc
push
mov
mov
inc
and
addsubpd
call
inc
ss
movsl
mov
loope
aad
ret
or
test
push
lea
int
dec
xchg
sub
test
outsl
jl
jmp
cmp
jmp
inc
mov
push
push
in
in
pop
dec
mov
push
pop
push
jge
inc
push
sarl
dec
enter
lock
sbbb
clc
addr16
std
cwtl
jnp
dec
mov
stos
rclb
jp,pt
rcrl
push
sub
in
rcll
test
aad
cmpsl
sbb
int3
lret
fsubl
fs
int3
add
mov
cs
sbb
xchg
mov
cmp
stos
aaa
cld
int3
cld
mov
jb
out
xchg
xorb
inc
mov
sahf
icebp
das
xchg
mov
inc
mov
scas
std
nop
jne
negl
mov
stc
test
daa
or
mov
cmp
in
shrl
ret
imulb
xor
mov
lret
jp
repz
jl
add
dec
jle
adc
loop
pop
mov
in
pop
pop
cli
push
add
add
pop
push
aam
sub
mov
fnstsw
jmp
cmc
cli
hlt
and
lcall
bound
push
sub
test
fwait
stc
cld
dec
lock
jmp
mov
cmp
inc
jno
adc
stos
aaa
pop
imul
jno
jle
and
mov
inc
fwait
sub
push
enter
mov
mov
dec
fwait
sbb
pop
mov
je
pop
dec
pop
push
cmc
dec
fnsave
and
out
add
int3
nop
dec
mov
repnz
jo
cli
mov
jnp
cs
xchg
xor
cwtl
pusha
and
cld
cmp
addr16
pop
and
push
jne
je
cmc
jne
ss
inc
pop
lds
mov
iret
fs
jb
and
dec
xor
dec
repz
ds
int3
cli
test
fsubl
repz
or
mov
mov
mov
and
mov
pop
mov
xorl
jl
movsl
cmp
mov
aas
cld
aas
or
inc
dec
push
fdivl
fisttps
dec
pusha
test
and
inc
push
mov
push
xor
repnz
into
xor
and
xor
add
aas
stc
push
jl
sbb
cmpsb
dec
sahf
loope
dec
adc
cmp
sbb
mov
lcall
mov
mov
add
pop
or
and
xchg
sub
mov
mov
sbb
pop
insl
les
rol
out
jb
imulb
xor
dec
cmc
sbb
fisttpl
cld
adc
ja
daa
pop
lods
in
dec
xchg
cwtl
pop
pop
mov
ss
sub
mov
or
test
cwtl
mov
cmp
push
test
dec
rcll
dec
popa
add
cmpb
lea
icebp
fdiv
inc
loop
xor
std
cltd
push
add
stc
dec
lock
push
and
loopne
ret
xchg
fsubrl
push
out
mov
or
mov
dec
xor
pop
push
sbb
push
jl
dec
rcrl
lock
fs
lock
dec
test
fildll
adc
inc
imul
push
xor
ja
sbb
cwtl
mov
inc
mov
shll
xor
add
xor
mov
pop
pushf
ret
cmp
ljmp
fiaddl
sbb
clc
mov
jne
mov
mov
fst
cmp
push
clc
jg
dec
iret
jb
mov
insl
pop
icebp
or
pop
jns
sub
shll
jne
dec
and
inc
lods
jne
xor
xchg
sbb
repnz
cmc
pop
inc
fs
es
jno
jecxz
daa
push
push
pop
or
push
sbb
cmp
sti
mov
icebp
icebp
jecxz
sbb
aam
test
rsqrtps
imul
jnp
inc
outsb
pop
pop
adc
or
nop
push
jne
ds
adc
mov
pop
ret
cld
xchg
and
stos
in
jge
movsl
dec
sub
adc
cmpsb
inc
jle
bnd
sbb
or
or
mov
sub
cmp
add
fcoms
xor
dec
add
insl
xorl
movsl
inc
or
dec
dec
std
push
dec
mov
int
inc
jl
aas
lods
adc
push
pop
xchg
movsb
jl
in
out
es
mov
xor
fisubrl
pusha
mov
sarl
sbb
aas
mov
inc
add
xchg
fcompl
sub
out
out
mov
pop
push
adc
loope
gs
mov
mov
outsb
mov
sbb
ja
fistpll
push
push
xor
ljmp
inc
jnp
ret
xchg
xchg
test
bound
sarl
iret
inc
push
jns
ds
xorb
fcoml
shrb
xchg
aaa
xor
jae
rcrl
pushw
pop
ja
jle
gs
xor
sub
cmp
xchg
insb
pop
xchg
lret
jecxz
bound
or
test
add
pop
jle
dec
rol
je
lods
iret
mov
xchg
mov
ljmp
or
sbb
fldl
sub
jge
push
mov
in
jo
dec
aas
pop
ljmp
jle
adc
ljmp
cmp
xchg
or
mov
dec
pop
pop
into
fists
sbb
cmpsb
and
into
cmp
push
ret
repz
xor
dec
das
cmp
test
lret
dec
inc
aas
loopne
and
loope
mov
xchg
cmp
adc
mov
test
or
jo
jns
mov
out
cld
mov
lret
fwait
and
add
outsl
subl
arpl
jp
scas
testb
cmp
pop
bound
xorb
shrl
lock
movsl
outsl
nop
jnp
jecxz
inc
lds
push
lret
das
add
sti
outsb
scas
mov
call
adc
pop
fxch
mov
enter
or
xchg
pop
insb
idiv
gs
mov
push
or
add
cwtl
or
mov
pop
lods
add
sbb
inc
leave
jnp
and
pop
mov
mov
xchg
cmp
sbb
fnstsw
inc
aaa
jne
push
push
insl
outsb
cmp
lcall
cmpsb
cld
add
jle
neg
pop
imul
adcl
shlb
pushf
movsl
sub
cld
pop
mov
and
mov
adc
mov
lods
lds
mov
in
cltd
mov
xor
and
dec
xchg
cmp
mov
push
dec
xor
inc
scas
cmp
sti
sbb
mov
gs
ret
pushf
mov
ja
xor
pop
fsubrl
negb
mov
loop
pop
fcmove
pusha
test
repnz
jle
loop
sar
xchg
push
jecxz
repz
nop
dec
jl
push
or
test
add
lcall
test
mov
arpl
sbb
mov
aas
cmp
les
xchg
shrd
daa
sbb
dec
aaa
mov
cmp
loope
orb
add
lret
icebp
cmp
sar
dec
and
addr16
sarb
bound
out
aam
mov
lea
push
pop
test
cmp
insl
pop
jne
sbb
cmc
movsb
aaa
xor
lret
in
mov
inc
ret
mov
push
pop
add
scas
mov
out
movsl
pop
push
lahf
push
jae,pn
int
push
sub
xor
stos
sub
xor
or
push
clc
shrl
add
push
mov
jns
and
mov
pop
cwtl
adc
sti
push
push
bound
imull
fcomps
mov
lock
or
repz
lcall
and
jno
repz
jle
push
lods
xorb
xchg
icebp
fisubrl
lods
mov
and
test
cmp
es
xor
andl
adc
jbe
jp
fisubs
jge
mov
xchg
add
cli
xor
pusha
push
popf
jecxz
xor
cmp
xchg
pop
imul
fsubl
repnz
imul
push
jnp
rorl
cmp
dec
jp
inc
pop
test
add
xchg
xor
adc
push
cmp
xchg
lret
fdivs
xlat
sbb
ss
aad
push
icebp
inc
jno
xchg
hlt
push
es
jae
push
divb
sbb
stos
and
loope
popa
dec
ret
mov
push
dec
insl
movswl
lcall
mov
mov
lock
and
pop
add
into
sub
stc
inc
mov
and
sub
test
mov
xor
leave
adc
je
or
cmc
mov
pop
mov
mov
add
dec
pusha
lods
add
mov
shrb
popa
push
dec
jno
icebp
lods
jns
xchg
test
loop
scas
or
cmpsl
nop
aaa
jns
mov
test
test
lcall
inc
inc
add
testb
mov
fistps
or
out
lret
arpl
lret
inc
stos
jge
scas
inc
fildl
loopne
lret
sbb
jne
adc
lret
lahf
inc
pop
bound
mov
cmp
out
mov
lock
jns
push
dec
xchg
and
mov
adc
incb
jmp
xor
mov
xchg
cmp
push
adc
cmc
cmc
sti
xor
out
pusha
mov
cmpsl
movsl
rcpps
adc
int
flds
push
mov
add
cmp
ds
add
sar
cmpsb
test
iret
mov
pusha
nop
arpl
fisubrl
cld
pop
cmp
sbb
aad
notl
outsb
outsb
add
jmp
stos
test
add
mov
inc
sarb
dec
in
fisubl
jnp
jmp
sub
mov
cmpb
cmp
stos
mov
dec
arpl
sub
add
jmp
mov
and
dec
pop
imul
jae
bnd
sbb
cld
mov
or
scas
sbb
in
or
cs
pop
adc
mov
mov
or
sbb
adc
test
loop
xor
jnp
jecxz
add
pop
mov
cmp
mov
sub
xchg
orb
xchg
stc
push
es
js
jge
and
jmp
into
xchg
sbb
lock
out
mov
add
bound
pop
call
mov
popl
inc
andl
ret
and
push
mov
movsl
cld
sub
repz
pop
jecxz
jp
cltd
rol
xor
cmpsl
and
addl
push
adc
pusha
jl
mov
push
xor
rolb
jb
cwtl
loope
test
push
mov
outsb
sub
cs
insb
aas
in
fwait
xor
inc
jecxz
daa
daa
leave
inc
cmp
outsb
mov
addb
cld
jo
pop
add
outsl
mov
mov
rclb
push
mov
pop
or
test
popf
pop
adc
push
in
mov
bound
cli
mov
inc
imul
aas
pop
cwtl
push
push
lods
sub
pop
mov
mov
shll
dec
mov
setle
ret
clc
out
testb
in
mov
ds
jno
mov
rcrb
loope
int3
mov
mov
adc
mov
sub
aaa
test
imul
inc
inc
fsub
xor
push
mov
fisttpll
xchg
je
jecxz
out
js
inc
mov
mov
inc
xchg
loop
xchg
jnp
xchg
fstp
cmp
sub
dec
inc
mov
cmpsb
sti
ret
or
popf
push
mov
sahf
in
repz
xchg
cmp
cli
xchg
fldt
int
xchg
out
leave
mov
xor
mov
xchg
cmpsl
sbb
sub
push
scas
push
aam
jecxz
pop
outsl
jae
dec
aas
lock
outsb
or
mov
push
adc
dec
scas
dec
repnz
jmp
lea
mov
in
inc
mov
push
or
addr16
call
mov
cmp
int3
jl
inc
push
rorb
cs
pop
movsl
push
hlt
sub
push
add
add
mov
inc
pushf
xor
test
in
faddl
xor
ss
aas
mov
pop
jno
fs
push
sub
decl
cmp
mov
dec
cwtl
pushf
mov
jge
nop
fistpll
roll
outsl
imul
into
mov
mov
add
icebp
or
insl
inc
xchg
inc
ja
inc
sahf
test
sub
inc
test
sbb
xchg
data16
leave
js
std
xor
add
cmpsl
push
xor
cwtl
scas
stc
les
mov
add
sar
and
jns
sbb
ret
inc
hlt
addr16
jb
lea
inc
cmp
cmp
xor
mov
cmc
fs
jno
lcall
sbb
cld
loope
mov
sbb
inc
fst
push
xor
repnz
mov
add
adc
pop
shll
cmp
imul
push
inc
pop
das
rcrb
xor
call
and
clc
icebp
mov
dec
pop
ja
inc
mov
cmovnp
fwait
out
mov
or
cmp
push
pop
shlb
cwtl
cmc
mov
push
sti
imul
leave
hlt
cmp
sahf
mov
pop
or
fildl
outsb
aas
pop
ret
jns
lods
sub
mov
and
movsb
sub
clc
mov
sub
out
xor
icebp
mov
mov
jae
ret
enter
gs
aad
sti
cmp
icebp
fmuls
jbe
icebp
pop
pop
in
inc
out
mov
xchg
out
or
sub
or
pop
adc
mov
in
fwait
popf
inc
inc
stos
adc
adc
shrb
adc
fisubrs
pusha
cs
add
je
mov
dec
cltd
lea
mov
sub
add
mov
sarl
or
clc
fbld
js
push
dec
mov
in
orb
shll
cmp
test
arpl
fcmovne
ret
pop
pushf
ljmp
and
xchg
jle
adc
cs
xchg
dec
push
repnz
out
pushf
xchg
cmc
inc
mov
jecxz
xchg
dec
shll
or
lcall
mov
xor
xor
lret
xchg
scas
mov
das
lods
mov
sub
icebp
mov
pop
loopne
cwtl
sbb
in
xor
imul
xchg
push
aad
mov
jae
pop
imul
push
outsb
out
dec
ss
sbb
jae
mulb
in
dec
ret
call
sub
into
and
dec
inc
pop
loope
mov
mov
xlat
mov
orb
mov
sbb
sub
and
and
sub
inc
std
mul
cwtl
cmp
loope
rcrl
fisttpl
inc
mov
sub
xchg
jae
jmp
xchg
stos
movsl
pop
mov
pop
inc
idiv
jle
inc
in
dec
int3
sbb
mov
mov
sbb
push
cld
incb
xchg
and
pop
and
or
sarl
push
js
dec
mov
sbb
sbb
ss
mov
xchg
cwtl
stc
sahf
stos
shr
adc
data16
mov
ret
jmp
xor
mov
xlat
sti
xchg
repnz
call
add
out
cmp
mov
inc
sbb
sbb
push
inc
dec
ljmp
sub
in
stos
jmp
mov
push
mov
and
mov
call
jns
xor
shlb
sbb
xchg
lock
ret
sbb
jnp
sub
jmp
xchg
push
dec
mov
std
and
adc
xor
adc
mov
pop
mov
mov
fwait
xor
cmpsl
xchg
sbb
in
xor
scas
sub
cmp
push
sub
pop
loope
xlat
xor
mov
ret
enter
jnp
sahf
cli
lods
dec
shrl
les
jbe
mov
sub
lea
push
in
lahf
cmp
xor
das
mov
xchg
xchg
fdivr
mov
mov
jle
sbb
pop
enter
push
mov
imul
out
push
enter
je
jl
in
mov
je
push
aaa
inc
rcrl
xlat
jmp
std
xchg
cmp
outsb
mov
idivb
inc
in
sar
sub
mov
cmp
out
insb
sub
push
jmp
frstor
mov
inc
test
mov
rol
jmp
pop
sub
lret
aam
popf
and
mov
addr16
fisttps
push
lcall
cmp
mov
nop
les
jg
push
int
mov
push
fdivrl
inc
dec
gs
mov
lret
xor
loope
dec
out
mov
xor
sbb
scas
mov
xchg
mov
lea
sahf
ret
movsl
wrmsr
adc
pop
lods
cmp
push
repnz
jle
int
jb
mul
xor
jb
mov
inc
inc
mov
insl
inc
sbb
adc
add
ret
scas
adc
mov
sbb
loope
add
outsl
test
xor
inc
or
mov
xchg
mov
fistpll
xor
xchg
adc
ret
cwtl
add
xchg
or
xor
mov
inc
sub
shld
lds
or
xor
std
pop
xchg
test
adc
das
pop
adc
mov
sbb
pop
inc
loopne
xchg
fadds
out
pop
aam
lods
xor
pop
inc
jge
pop
rorb
dec
mov
mov
daa
insb
add
out
scas
jle
test
or
push
leave
xchg
xchg
xor
in
and
push
dec
out
and
inc
rorl
loope
fisubl
sub
fldcw
js
aaa
out
call
adc
and
lds
mov
test
push
fs
add
sbb
popf
ja
ret
mov
pop
xlat
xlat
lret
cltd
lret
xlat
and
push
inc
xlat
push
loope
test
gs
mov
scas
and
sub
mov
pop
shlb
or
jmp
mov
mov
call
cmp
mov
ja
test
adc
loopne
adc
addr16
out
in
scas
fidivrl
sbb
leave
mov
push
scas
data16
or
and
cs
and
in
sub
mov
adcb
mov
or
pop
pop
adc
sub
stos
movsb
adc
push
jno
fwait
out
ds
sbb
ja
dec
sub
jecxz
into
adc
xchg
xchg
adc
cwtl
cli
adc
lret
mov
cli
and
ds
jno
pop
mov
xchg
lcall
fstl
mov
push
nop
aam
push
lcall
mov
cld
mov
mov
push
add
fldenv
in
call
scas
cmpsl
aaa
jecxz
pushf
or
out
leave
sti
ss
sti
icebp
xchg
push
loopne
in
jb
out
or
icebp
fcom
aad
and
sub
mov
icebp
or
jne
and
pop
inc
fstpt
enter
inc
mov
popa
push
hlt
int3
cmp
ret
or
cs
xor
mov
in
mov
jge
insl
mov
inc
mov
fisttpl
stc
and
fcmove
mov
imul
out
xor
aaa
loopne
fwait
fwait
and
add
testl
into
stc
xchg
mov
lods
xchg
daa
dec
dec
cmpsb
es
xchg
xchg
inc
mov
mov
dec
call
fwait
push
hlt
cmp
shl
mov
cmc
push
mov
jo
mov
fisttpll
sbb
push
add
jae
dec
mov
inc
out
out
insb
xchg
xchg
dec
aaa
pop
mov
in
sub
aad
or
mov
andb
les
mov
pop
lret
shlb
insb
push
loopne
xlat
xchg
test
dec
mov
addl
je
mov
nop
filds
fdivrs
or
push
xor
push
lods
xor
inc
fs
jp
inc
dec
cltd
insb
rcll
stos
cmpsb
test
push
addb
push
jnp
push
in
shrb
jnp
mov
rorb
lret
scas
sbb
inc
mov
xor
stos
mov
xor
stos
add
mov
dec
jge
ja
imul
cmp
xor
ljmp
adc
mov
xlat
mov
stc
push
mov
mov
cmpsb
inc
mov
into
in
fidivl
pushf
or
lods
jb
std
lret
dec
cli
xchg
test
pop
and
push
mov
and
je
pop
std
inc
xor
jg
xor
sbb
lcall
lea
hlt
adc
arpl
repnz
add
push
jecxz
inc
ja
imul
loope
leave
inc
fisubrs
pop
push
fldl
gs
push
jbe
inc
mov
xor
jbe
push
ss
sbb
fldl
hlt
cmpsl
test
pop
and
pop
mov
mov
dec
fs
lcall
std
inc
mov
mov
xchg
cmp
repz
xchg
shrb
ror
mov
dec
mov
push
in
clc
and
lahf
aam
orl
fisubs
mov
dec
mov
ds
pop
sub
mov
lock
xor
cwtl
xlat
jno
lahf
push
mov
xchg
stos
cmp
mov
dec
sub
inc
push
sbb
inc
and
xor
sbb
xchg
push
jmp
or
xchg
xor
test
pop
pusha
xor
in
ja
jmp
push
xor
xchg
gs
sub
notb
jp
lods
shlb
add
ja
push
movsb
adc
lods
cltd
jns
sub
std
jecxz
mov
inc
cli
inc
adc
inc
xchg
bnd
rcll
mov
xchg
cmp
sbb
repnz
pop
jnp
dec
adc
aam
ficoml
lock
ret
pop
inc
icebp
push
inc
and
and
xchg
mov
mov
push
stos
in
and
into
movsl
push
arpl
jmp
push
and
in
jb
fimull
sub
subb
insb
push
stc
xchg
mov
js
and
sahf
mov
push
mov
xorb
push
data16
sbbb
inc
mov
sub
hlt
cmp
shlb
nop
and
push
ss
ljmp
mov
imull
mov
test
das
mov
fwait
cmp
leave
dec
lcall
es
mov
out
push
cmp
pop
push
add
lds
xlat
test
sub
dec
sbb
xor
fidivrl
call
sbb
dec
xchg
movsb
add
add
test
cmp
loopne
pop
sbb
out
out
mov
test
cld
mov
mov
sub
popf
into
idivb
imul
stos
pop
fcomip
gs
xchg
jg
mov
ret
sub
cmp
jecxz
dec
in
enter
sti
shl
or
inc
fs
push
cmp
in
mov
mov
notb
pop
loopne
xchg
ret
loope
or
test
icebp
xchg
ret
sub
jg
mov
push
or
dec
adc
sbb
xor
repnz
sub
fst
out
outsl
adc
mov
lea
inc
cli
add
mov
mov
mov
xchg
mov
fistps
mov
cmpsb
test
jae
pop
and
cmpsb
ss
mov
jbe
cmp
popl
add
jle
rcrl
dec
cmp
push
ds
ret
pusha
dec
mov
adc
repz
cmp
xor
xchg
lods
and
lret
xchg
add
and
add
add
jns
test
mov
rcrb
mov
xchg
cld
inc
enter
pop
mov
sub
sbb
bnd
cmp
sahf
loopne
jp
add
lods
adc
or
sub
jbe
decl
jl
add
loopne
rcrl
sahf
fcmovne
xchg
or
pusha
inc
mov
jp
push
scas
xor
div
adc
mov
scas
push
out
jge
jmp
adc
add
in
fdivl
mov
adc
push
loope
cli
fadd
cmp
popf
xlat
jno
inc
inc
inc
dec
lods
mov
push
xchg
mov
push
jae
xchg
icebp
test
pop
dec
jmp
and
mov
add
mov
mov
andb
jnp
stc
clc
insl
in
and
xor
daa
je
stc
mov
popa
push
or
sub
out
lcall
inc
rorl
pop
mov
adc
enter
mov
inc
or
test
sbb
add
rdtsc
or
int
outsl
jne
mov
sbb
xchg
icebp
dec
hlt
int
shll
sub
jmp
cmpsl
and
test
push
xor
lcall
mov
lds
cli
and
or
add
rol
out
mov
cmc
jg
or
dec
cs
stc
mov
mov
mov
inc
scas
dec
ret
and
sbbl
sbb
mov
loopne
pop
lods
xchg
mov
ds
xchg
adc
sbb
in
lds
mov
push
divb
lds
sbb
mov
adcl
pop
fwait
out
sub
mov
repnz
cmpsl
sub
sarl
aad
jmp
mov
iret
xor
and
rorl
mov
push
lds
ror
add
aam
cmpsb
les
dec
xchg
jne
mov
jns
push
push
fdiv
stos
in
push
mov
sbb
test
popa
fcomp
xor
lods
roll
cmpsl
dec
xchg
sbbb
cltd
and
mov
pop
jbe
and
divb
push
dec
mov
cmpsl
ror
push
sub
add
xor
test
xchg
cli
fwait
addr16
rcll
pop
xor
or
cmp
adc
call
inc
das
out
sub
adc
sti
mov
test
cld
xchg
pop
adc
or
loop
into
je
fcoms
mov
add
and
shlb
and
addr16
xor
repnz
push
test
outsb
mov
lcall
cs
cli
and
push
mov
fwait
aam
cmp
es
lods
sti
pop
je
cmp
stos
lods
ds
xchg
mov
stos
adc
fmuls
into
sti
pop
xor
push
push
out
ss
and
in
or
dec
movsb
and
les
lea
xchg
mov
sbb
and
inc
cmp
fcmovne
out
in
out
mov
xor
sub
cmp
adc
cld
inc
xchg
icebp
mov
inc
push
mov
bound
mov
lret
fcomps
push
aad
imull
xor
loopne
push
insb
push
lock
dec
adc
sbb
inc
sub
lods
cmp
mov
mov
std
dec
cmc
imul
bound
fstpl
pusha
jo
ret
arpl
ret
fsubs
ror
mov
xchg
imul
nop
inc
or
mov
dec
xchg
pop
clc
test
mov
jg
orb
sti
dec
loopne
jg
outsb
inc
nop
lahf
loope
frstor
jns
call
int
mov
jns
sahf
nop
dec
mov
jno
repz
or
jge
xlat
jne
imul
test
sahf
mov
popf
jp
out
test
out
cmp
mov
nop
cmp
jns
aas
add
insl
ret
xor
sbbb
dec
sarl
inc
lods
push
pop
pop
popa
mov
imul
pop
sarb
dec
and
inc
xchg
jno
inc
cld
lock
pop
fs
call
mov
mov
stos
in
sub
and
or
push
or
adc
fmuls
insb
int3
adc
aaa
std
push
cs
ds
mov
test
ret
insb
sbb
in
daa
mov
jmp
adc
sahf
xchg
and
push
div
push
test
push
mov
out
sub
cmp
fs
fiaddl
decb
rcr
sbb
nop
sub
jo
and
or
sbb
cmp
mov
adc
push
adc
inc
in
scas
jg
pop
movsl
ret
es
jmp
ljmp
insb
and
jno
andb
les
lcall
jnp
lea
mov
cmp
popl
sti
mov
pop
scas
icebp
push
push
mov
dec
and
xor
xchg
clc
cmpsb
cmp
outsb
stc
data16
mov
mov
rorb
jbe
xor
jge
pop
cs
push
or
fisttps
xchg
rol
jns
ret
mov
and
jge
or
mov
xchg
pop
ljmp
jnp
cmc
ljmp
and
int
jecxz
cmpsb
lret
mov
add
mov
push
outsl
je
lods
popa
pushf
out
mov
jno
dec
cmp
push
or
jnp
xlat
or
dec
loop
repz
rcl
std
inc
lahf
push
outsb
push
mov
test
shl
into
ss
jg
add
pop
inc
iret
test
push
cmpsb
lret
cmpsl
int
mov
add
adc
or
cmpsb
jge
push
das
in
cmp
pushf
pop
fisttps
mov
push
ja
push
call
push
sbb
lods
jp
mov
fbld
sti
and
pop
sbb
jp
sbb
pop
sub
sbb
int3
push
cmpsb
mov
lds
test
push
jg
pop
in
cmp
js
stc
sarb
fs
test
pop
jecxz
or
loope
call
xor
jb
jge
ss
push
int3
cmp
xchg
cld
dec
std
pop
std
adc
je
test
insb
ja
imul
push
shll
mov
jmp
add
dec
daa
xchg
mov
hlt
insl
pop
addb
loop
mov
lret
fsts
ret
pop
rol
sub
push
cmp
jl
push
jle
mov
andb
adc
pop
inc
ljmp
add
shr
sti
fnsave
jecxz
arpl
jo
mov
cmpsl
mov
iret
in
cmp
cmpsb
les
push
dec
push
pusha
dec
insb
inc
into
js
sub
pusha
ret
jbe
movsl
fisttps
mov
mov
or
outsl
mov
mov
xlat
test
gs
mov
and
jg
push
xor
arpl
mov
inc
jecxz
inc
mov
les
orb
orb
test
push
hlt
sbb
cmp
lret
and
dec
jmp
push
out
stos
filds
inc
xchg
fnsetpm(287
adc
insb
lea
push
int3
pusha
hlt
jp
pushf
mov
call
sub
stc
enter
fwait
jno
push
int3
xor
xor
out
in
hlt
xor
imul
lret
dec
dec
dec
mov
scas
repnz
nop
stos
ja
mov
push
jmp
pusha
cmpsb
fadds
dec
cld
ja
sbb
clc
and
leave
loop
sbb
arpl
cli
mov
mov
inc
lahf
ss
rclb
mov
xor
pushf
outsl
xchg
or
xor
rcrb
and
cmpxchg
jmp
nop
ja
arpl
mov
fwait
aaa
bound
cmp
sub
push
or
aad
jne
fwait
notl
gs
in
sub
jo
cld
pop
xchg
mov
mov
sbbb
push
pop
psubsb
inc
lret
loopne
jno
lea
outsl
fmull
inc
out
sbb
fwait
loopne
sub
cld
int3
adcl
or
push
movsl
insb
pop
xlat
outsl
pop
cmpsb
add
ret
out
inc
sub
nop
loop
push
rclb
or
add
clc
xchg
es
pop
add
pop
js
inc
aam
into
sahf
jecxz
push
gs
pop
sbb
out
rcrl
icebp
in
fmull
pop
dec
push
mov
ret
or
sub
lcall
pop
in
scas
es
ret
cmp
mov
mov
js
inc
popf
ljmp
fs
les
fsts
pop
or
data16
test
adc
cmp
cs
add
pop
rorl
cld
cmpb
in
push
in
sahf
jbe
mov
cmc
mov
sub
add
ja
xor
test
add
loope
jo
lret
aaa
jge
mov
sti
les
add
jno
pop
loope
lea
lods
xor
out
xor
fists
dec
cmc
nop
lcall
scas
stc
cltd
imul
fcmovu
xchg
popa
push
in
lcall
test
xchg
bnd
andb
fsubrl
insb
cs
cmpsb
add
pop
jg,pt
into
pop
sar
xchg
xchg
stc
adc
movsl
sbb
fcoms
or
shrb
out
xchg
lret
test
xor
and
mov
and
lahf
arpl
push
das
inc
fs
data16
in
mov
sbb
jecxz
sbb
jno
cmp
push
ja
stc
cmpsb
out
test
and
sbb
fs
push
pop
pop
cmc
dec
lret
out
jle,pt
xor
sub
addb
mov
aad
loope
xor
and
stos
lods
inc
jb
int3
hlt
jmp
imull
test
inc
mov
arpl
mov
mov
push
adc
gs
lods
cmp
xor
pop
push
push
cmp
mov
iret
ret
ds
dec
fists
cmp
js
mov
or
add
pop
mov
test
movsl
inc
jmp
mov
das
cli
dec
inc
or
sub
imul
push
jo
dec
cmpl
loopne
jnp
and
inc
inc
shrb
pop
das
fidivs
hlt
sbb
scas
test
outsl
in
dec
lods
mov
jecxz
push
mov
or
mov
xchg
mov
xchg
adcl
js
aaa
ljmp
mov
push
add
cwtl
xor
sub
xor
int3
adc
push
fadds
cmp
aam
into
imul
and
pop
inc
hlt
mov
mov
sbb
rol
in
orb
pop
mov
cmp
jecxz
xchg
or
movsb
fwait
cltd
xor
mov
or
xor
lahf
lea
stos
xchg
add
pop
lock
pop
dec
mov
push
and
sub
inc
scas
dec
addr16
fs
cmp
and
lods
adc
out
out
jmp
das
jbe
stos
pop
xor
stc
mov
push
stos
mov
out
ret
jo
cwtl
sub
in
fcmovnu
mov
sbb
je
in
push
jns
mov
push
fs
movsl
push
shl
push
mov
std
jmp
gs
cmpsl
loop
out
in
sbb
repz
insl
mov
add
xchg
mov
cmp
cld
pop
mov
mov
addr16
outsb
lcall
in
outsl
or
lods
aad
ret
out
std
jecxz
imul
jno
fcmovnbe
out
jnp
and
sbb
ds
inc
gs
mov
jns
sub
in
push
mov
aad
xchg
jb
add
lret
jnp
inc
sbb
insl
mov
mov
mov
jnp
sbb
repz
add
xor
daa
adc
out
cmpl
mov
cmp
stc
test
mov
les
int
pop
push
xchg
cs
out
loopne
pop
sbb
push
xchg
mov
inc
gs
gs
fsubs
mov
je
jecxz
adc
inc
jp
mov
inc
jae
pop
xchg
lret
or
in
pop
cmp
fimuls
cs
pop
lods
adcb
inc
push
mov
gs
lret
lock
bound
leave
xor
lret
or
lock
add
fmull
push
popa
sub
mov
jle
ds
out
pop
out
out
lret
lock
mov
inc
add
movsb
out
xchg
ja
jge
imul
or
movsl
icebp
fsubr
fisttpll
daa
xchg
enter
push
movsb
and
cli
mov
ret
popf
les
out
mov
and
andl
loopne
jp
icebp
sbb
mov
mov
mov
dec
cli
dec
mov
jmp
sahf
adc
jecxz
fs
add
cs
push
dec
dec
mov
cmp
mov
pop
push
cmpsl
sub
mov
ljmp
mov
cs
inc
cmp
ficoms
xor
pop
aas
mov
sub
xchg
mov
lods
add
aad
push
sti
jb
mov
outsb
lahf
jmp
jp
mov
mov
insl
jp
add
sbb
sub
jle
push
push
push
cltd
mov
popa
push
icebp
inc
jl
stc
out
out
nop
xorl
mov
sbb
les
es
xor
mov
inc
add
xor
add
ss
mov
test
xchg
pusha
scas
xchg
jns
es
xchg
add
push
int3
and
scas
and
nop
cmc
push
repnz
add
add
sub
aad
js
daa
xor
xchg
dec
mov
mov
dec
mov
int3
xchg
mov
lds
ret
rolb
test
test
adc
add
aaa
rorb
xchg
mov
cmp
inc
jne
cmpsb
inc
lea
daa
sbb
into
add
sahf
or
sahf
arpl
call
pop
push
push
jecxz
fmuls
test
xchg
icebp
cwtl
mov
outsl
ja
arpl
mov
and
pusha
int
int
stc
aaa
mov
pushf
adc
mov
aas
adc
sub
sub
repz
mov
mov
adcb
or
sbb
sbb
mov
jle
push
add
test
adc
xchg
lcall
xor
dec
leave
insb
dec
shlb
out
in
sahf
push
sahf
hlt
test
sbb
iret
test
or
ja
push
and
popf
dec
lcall
push
mov
jg
notl
pop
sbb
xchg
loope
xchg
pop
je
sub
hlt
mov
stos
enter
sbb
insl
xchg
std
mul
adc
ds
jmp
incb
ljmp
and
cmc
insb
cld
sbb
mulb
ljmp
cwtl
daa
shll
add
icebp
and
adc
dec
mov
jecxz
push
push
inc
xlat
repz
in
imul
and
push
inc
call
dec
int3
jge
shll
add
aam
mov
and
mov
out
aaa
or
mov
sbb
sub
loope
push
sbb
push
shlb
add
aas
sbb
sahf
ss
cmp
fnstenv
xchg
mov
sbb
arpl
int
jmp
scas
std
cmp
daa
add
nop
xchg
out
inc
jae
iret
js
xchg
and
cmp
or
std
and
xchg
jb
clc
xor
jmp
mov
dec
in
lea
bound
sbb
les
popf
cltd
jns
mov
mov
xchg
push
pushl
inc
aaa
je
aas
aas
cltd
add
rcrb
mov
sti
call
je
scas
cmpsb
insl
sbb
pop
sub
aad
stos
push
call
sar
push
mov
inc
xchg
jmp
pop
sub
or
fbstp
sub
movsb
xor
shll
pop
mov
mov
adc
jmp
pop
outsb
or
dec
xchg
mov
push
dec
xorb
fldl
mov
mov
jbe
mov
jecxz
push
ljmp
adc
fisubs
nop
leave
xor
in
sbbb
mov
popf
lret
mov
cmp
int
push
lods
cmp
mov
pop
and
xchg
fidivl
test
cmpb
adcb
inc
dec
cmp
out
std
je
xor
fwait
dec
imul
imul
sti
adc
mov
shrb
sar
loop
in
xor
inc
int
stos
and
lds
jmp
icebp
sub
fwait
bswap
aaa
xchg
lock
or
lods
mov
xor
ljmp
sbb
hlt
out
and
push
mov
lret
inc
aad
push
jp
clc
and
lahf
inc
dec
mov
inc
jl
inc
xor
mov
add
ja
pusha
in
sub
push
inc
aas
aam
dec
sarb
cmp
or
cmpb
pop
enter
stc
scas
mov
jnp
sbb
push
arpl
lock
out
pusha
push
xchg
shlb
pop
xchg
sahf
bound
adc
pop
repz
xor
xor
test
jecxz
rcll
fisttps
dec
sub
xchg
sbb
pop
leave
xchg
add
cld
push
cld
in
dec
cmpsl
add
das
jle
cmp
jb
sbb
mov
and
repz
adc
inc
xor
mov
popa
pop
int
dec
in
insb
push
lret
xor
lods
xchg
jb
and
cltd
xor
cmp
orb
adc
jg
pop
add
pop
ret
movsl
dec
inc
sbb
mov
mov
fimuls
stos
hlt
lcall
push
cmp
pop
cld
mov
lods
xor
daa
bound
icebp
out
loope
andb
lds
les
adc
andb
pop
mov
cmp
mov
inc
adc
mov
jmp
jae
mov
sbb
lret
or
mov
cmpsb
cmp
add
and
fmull
push
mov
arpl
pushf
sbb
jb
mov
sub
xor
push
jecxz
cmp
imul
div
clc
xor
or
stos
js
lret
in
dec
push
add
xchg
aas
pop
mov
push
pop
xchg
pop
cltd
add
push
mov
leave
repz
jno
popf
jg
push
in
movsl
mov
data16
or
jmp
scas
nop
js
adc
out
lea
mov
arpl
inc
test
cli
mov
xor
push
and
or
pop
ret
movsl
sti
xchg
or
out
xchg
jbe
call
int3
mov
ss
pop
ffreep
lods
xchg
and
stos
loop
mov
sub
inc
sti
mov
incb
std
cmpsl
cs
test
cs
xor
cli
dec
pop
mov
sbb
movsb
mov
aad
push
push
outsb
sub
jge
out
lea
cmp
mov
faddl
mov
cmp
repnz
es
push
pushf
mov
sahf
cmove
pop
push
subl
sahf
repz
or
cltd
mov
or
std
or
pop
add
jno
or
cmp
inc
cmp
aam
pusha
int3
push
cmc
mov
or
add
mov
fdiv
jp
fidivl
add
or
mov
addb
pusha
sbb
xor
pop
movsb
jbe
aam
xor
shll
xchg
lahf
shrb
stc
jne
sti
jb
push
loop
loop
xchg
jb
in
xor
addr16
andb
xor
push
xchg
cmp
xchg
imul
ja
add
js
mov
dec
and
jae
push
mov
mov
sub
sub
and
adc
pop
lret
adc
loopne
subb
push
call
fwait
movsl
testb
in
fwait
add
in
mov
and
xor
jb
or
out
jns
in
xchg
cli
test
sti
jbe
loop
sbb
fcmovb
movb
outsl
imul
or
das
popa
std
xchg
loopne
in
jns
idiv
add
inc
sub
int
xchg
xor
cmpsl
ja
cs
outsb
push
cmp
mov
xor
jl
sbb
sarb
mov
push
pop
ljmp
mov
push
xchg
out
sub
fmull
cli
push
test
xchg
jne
adc
or
xchg
test
jmp
js
cld
jnp
push
inc
in
cltd
stos
sbb
dec
mov
in
mov
cli
addl
inc
imul
std
iret
pop
or
mov
data16
pop
clc
mov
sarb
or
rorl
inc
and
push
dec
gs
xchg
ss
les
sti
out
cmpsl
pop
mov
sub
outsb
jns
inc
daa
mov
fiadds
iret
movsb
jns
outsb
and
adc
lds
mov
dec
dec
je
jo
fwait
pop
mov
fldt
dec
xor
jne
js
sub
fucomip
lahf
jge
sbb
rorl
cli
test
jle
jb
add
out
xchg
outsb
aas
xchg
in
mov
push
in
pop
jge
subl
inc
mov
aaa
mov
jb
mov
loope
int
ja
iret
movsb
cmp
cmp
add
repnz
mov
orb
push
inc
leave
scas
jecxz
jecxz
adc
cmp
pop
jno
sub
sub
lods
inc
xchg
inc
mov
aas
sub
cmc
cmp
addr16
lods
fnstenv
rclb
cmpsb
mov
push
in
ds
xchg
loopne
jo
mov
pusha
aaa
lret
in
jns
xor
pop
xor
hlt
push
out
xor
push
pop
inc
insl
rcr
mov
test
out
sub
in
jl
and
ds
jnp
lods
jnp
jp
mov
cmp
ret
loope
sbb
push
imul
xorb
icebp
leave
hlt
popf
jae
sub
xchg
mov
ds
mov
sahf
push
out
jae
xchg
jns
fistl
aaa
icebp
inc
fadd
in
fldenv
es
jae
fbld
push
mov
push
mov
cmp
jg
jp
repz
pusha
xchg
dec
lds
xchg
push
aaa
dec
cs
lods
sbb
pop
pusha
cmp
mov
and
aaa
push
xchg
and
inc
test
lds
insl
push
adc
sahf
add
fistpll
cmp
pushf
pop
jg
fisubs
shll
into
test
and
dec
push
lcall
dec
aam
cmpsb
mov
mov
in
adc
adc
inc
sbb
push
or
in
lods
icebp
cmc
pop
mov
or
lods
push
push
scas
cwtl
mov
xchg
cs
movsl
loopne
jl
add
sub
mov
movsb
fcompl
cli
nop
pop
xchg
sti
repz
jbe
std
fwait
jg
or
out
jg
jge
jecxz
test
jl
jmp
divps
xorl
mov
push
and
leave
pop
shr
gs
in
xchg
sub
fs
pop
add
cltd
and
mov
out
mov
int3
push
add
gs
loope
mov
cli
or
addr16
das
xlat
push
push
xchg
mov
and
inc
xlat
lds
jbe
push
shr
mov
cmp
adcb
lds
mov
out
stos
mov
lds
xor
mov
xchg
std
ja
cmp
sub
cltd
mov
insl
dec
cmp
idiv
repz
jl
out
loop
in
in
popa
and
dec
sahf
push
sub
pop
incb
sub
insl
popa
push
shlb
arpl
jp
cmp
sbb
add
cmc
and
adc
popa
and
bound
js
dec
xchg
mov
mov
mov
jo
cld
push
fwait
mov
andl
sahf
inc
or
xchg
cli
les
xchg
dec
mov
sub
jge
movsl
pop
shrl
mov
leave
cmc
xor
xchg
les
enterw
movsl
push
mov
and
aam
ljmp
loop
popa
out
or
sub
mov
xchg
shlb
repz
xchg
dec
pop
ds
pusha
sub
scas
fdivrl
int3
leave
xor
insl
int
lods
ljmp
mov
xor
in
jl
add
das
ret
dec
or
jno
add
sbb
mov
adc
imul
mov
xor
xlat
mov
int
and
mov
adc
ljmp
insb
sub
mov
xor
mov
push
sub
push
arpl
addl
xor
sbb
roll
or
mov
sbb
or
pop
inc
pop
bnd
leave
inc
movsb
enter
aas
insb
mov
fisubrl
inc
mov
cld
mov
cltd
mov
adc
mov
or
xor
fisubl
jp
aas
mov
mov
pusha
adc
inc
lds
daa
jle
jns
pop
in
lds
movsl
out
jle
mov
or
test
pushl
pop
mov
jle
sub
aas
jns
mov
or
push
or
aas
pop
pop
and
fidivrs
cmpb
push
pop
jmp
imull
cmp
mov
dec
inc
dec
mov
adc
sbb
mov
mov
sbb
add
fwait
adc
mov
push
movsb
inc
add
aam
rcr
add
in
idivl
repz
in
push
push
insl
mov
pop
inc
sarl
shll
out
lds
fidivrl
xor
fsubrs
insb
pop
xchg
sub
call
shlb
pop
cwtl
inc
fxch
movsb
shl
daa
in
dec
popw
push
movsl
out
pop
mov
mov
adc
sub
mov
data16
xor
repnz
add
jp
fs
pop
pop
mov
sbb
inc
cmp
jl
in
jns
adc
xor
ret
mov
dec
mov
xchg
push
mov
test
shrb
dec
call
lods
aaa
fsubrl
or
fadd
mov
fbld
adc
push
xor
enter
push
fidivrl
mov
aas
xchg
mov
lret
in
push
xor
stc
add
add
fadd
sub
jne
fsubs
sbb
dec
jo
or
jmp
ss
pop
xor
fcoms
pusha
movsl
jmp
shll
jmp
dec
mov
pop
lods
fwait
sbb
cld
add
aas
gs
xor
add
pop
jne
lods
fildl
into
jmp
cwtl
lret
jns
popa
les
jp
mov
mov
fidivl
inc
xchg
sub
push
xor
xchg
or
not
mov
pop
incb
lcall
and
popa
or
dec
jg
adc
or
sarl
rclb
lret
sub
dec
dec
push
xor
add
lcall
es
sub
inc
fdivs
push
stos
mov
mov
scas
mov
dec
add
das
or
sub
mov
jg
scas
fisttps
cmp
dec
jmp
outsb
pop
pop
push
xlat
xchg
cs
in
lds
xchg
in
lcall
xchg
shl
lods
cmpsb
xor
outsb
pop
out
lcall
add
and
aam
inc
cmc
in
movsb
pusha
rcr
mov
push
subb
add
mov
mov
jb
aaa
or
pop
adc
jo
sahf
pop
and
pop
mov
fidivs
cmp
cs
in
and
pop
add
arpl
ljmp
xor
and
cld
lahf
cmp
in
mov
push
adc
movsb
mov
mov
testb
mov
push
iretw
cmp
cltd
jo
test
out
cwtl
cwtl
data16
adc
sbb
in
enter
dec
cmp
out
jnp
icebp
movsl
mov
pop
arpl
lea
cmp
ljmp
aas
outsl
jno
movsl
lock
mov
mov
xchg
mov
int3
xor
mov
stc
lods
jg
ljmp
push
fsub
ljmp
sbb
sbbb
mov
icebp
inc
aam
mov
xlat
mov
pushf
je
in
lahf
jmp
ret
sub
daa
outsl
add
sub
out
jg
sub
sbb
es
sbb
mov
pop
push
mov
xor
push
jb
xor
push
mov
mov
jmp
and
xor
imul
loop
loop
pop
cwtl
mov
stc
pop
pop
mov
pop
aad
mov
fisttpl
and
ror
out
rcl
aaa
or
pop
mov
insb
js
adc
mov
add
ret
pop
das
pusha
fmuls
pushf
stos
mov
rorb
stc
or
dec
mov
cmp
mov
insl
mov
add
mov
pop
pop
push
and
adc
pop
sub
movsl
xchg
loopne
and
push
adc
or
insb
sbb
and
outsb
pusha
mov
push
cmp
rcrl
aam
add
ret
fwait
push
pop
int
clc
repz
iret
inc
jl
cmpsl
sub
mov
lods
pop
inc
in
xor
mov
sbb
jno
imull
mov
pusha
loope
or
push
sbb
lea
mov
cmc
mov
das
pop
mov
cmp
mov
mov
aas
enter
fwait
push
stos
cmp
pusha
xchg
inc
xchg
sbb
xchg
and
out
ss
loope
push
adc
push
xor
sub
mov
ljmp
cmp
mov
jle
inc
out
mov
add
inc
xchg
fadd
xlat
int3
push
mov
fwait
cld
shll
aas
lret
mov
or
ljmp
sub
in
push
jo
bound
pop
mov
adc
fadd
pop
cmpsl
xchg
mov
popf
adc
sbb
mov
test
mov
mov
data16
jge
cli
jmp
fs
das
int
out
push
or
test
sbb
fisttpl
adc
push
mov
test
cmpsl
loop
jp
inc
xlat
mov
pop
out
fwait
and
mov
push
jb
dec
xchg
andl
mov
dec
imull
rcrb
dec
jnp
push
inc
lea
jge
aas
movsl
push
aas
imul
sbb
xchg
call
mov
and
data16
stc
int
sbb
jmp
inc
sub
push
dec
mov
dec
loopne
mov
and
ret
je
adc
inc
jge
or
jne
lods
out
dec
inc
jnp
loopne
lods
xchg
and
mov
addl
jge
xor
jo
xchg
adc
mov
adc
mov
jl
mov
mov
lret
pop
test
mov
jle
mov
jl
cmp
rcrb
scas
jb
push
jbe
sbb
ficomps
sbb
sbb
pop
pushl
pop
add
xchg
popa
or
pop
push
test
xchg
mov
pop
in
lahf
outsl
cmp
and
fsubl
dec
insb
adc
sub
out
pop
insl
cld
push
filds
add
mov
pop
jns
out
inc
mov
dec
inc
and
inc
jmp
cmc
js
jl
in
sbb
xchg
mov
hlt
add
mov
mov
jnp
stos
shll
dec
push
cli
outsb
pop
in
adc
xchg
mov
cli
adc
lods
ret
in
jp
jnp
dec
inc
mov
fmul
test
mov
mov
pusha
push
lret
mov
mov
add
sti
mov
push
aad
jmp
sbb
lock
or
jae
cmp
cs
idivb
lods
or
int
adc
jbe
add
mov
xchg
daa
out
inc
mov
sub
lret
flds
xor
pop
mov
ret
rclb
xor
int
push
or
xchg
je
mov
xchg
insb
and
inc
loope
cmp
sti
push
call
inc
hlt
mov
xchg
xor
mov
enter
enter
call
sbb
sub
jnp
imulb
sahf
jno
mov
or
rcll
xor
test
jns
stos
or
xor
dec
inc
mov
mov
push
testl
push
or
and
inc
mov
sbb
lcall
lea
sub
xor
movsb
mov
test
icebp
jecxz
push
jae
sahf
dec
ret
and
jb
out
jo
imul
clc
xor
cmp
jnp
fsubp
and
push
sub
jbe
dec
push
and
mov
hlt
outsb
sarb
sbb
xor
je
in
mov
push
lcall
sub
leave
sub
out
dec
fsubrp
xchg
push
xrelease
or
jp
and
fwait
stos
mov
push
dec
in
fidivrs
lahf
in
push
adc
arpl
fisubs
mov
test
hlt
dec
inc
sub
pop
add
in
dec
fsubp
mov
add
dec
push
and
repz
test
call
mov
push
push
ret
sbb
sti
stos
jns
dec
push
daa
adc
fwait
dec
push
mull
popa
sub
pop
outsl
xchg
mov
mov
jecxz
mov
and
lret
jge
test
lods
inc
fadds
cmp
push
mov
sbb
push
scas
xchg
cmp
pop
ds
mov
add
fwait
mov
add
pop
jl
hlt
daa
xchg
pop
lret
xorl
jle
cmp
sbb
cmp
jb
and
adc
cmpl
popf
cmp
mov
sbb
xor
sbb
inc
push
jae
cli
lea
pop
sub
jg
xchg
fnsave
int
pop
push
scas
int3
in
xlat
push
ret
insl
push
jne
cmp
in
je
xor
push
out
mov
fwait
xchg
inc
and
out
jle
dec
rcll
sbb
in
js
ret
mov
in
in
sbb
rcr
scas
mov
arpl
scas
int3
outsl
ret
lock
mov
ja
iret
push
mov
push
push
xlat
lahf
add
jo
pop
mov
orl
dec
pushf
fwait
arpl
pop
cld
shl
jo
fiaddl
and
adc
leave
out
aad
inc
movsb
sub
jb
enter
popl
stos
xchg
xchg
gs
test
or
movsb
pop
pop
jge
lds
leave
cmp
xchg
int3
cli
push
mov
clc
ljmp
add
cmp
int
jo
jo
mov
arpl
mov
cwtl
add
xor
push
pop
outsb
push
cmpl
mov
inc
mov
in
jns
loopne
sub
and
add
push
inc
sbb
sub
rol
outsb
sti
and
lods
jns
jge
adc
add
push
xor
repnz
jecxz
iret
sarl
inc
enter
lds
mov
adc
icebp
inc
push
sbb
mov
addr16
adcl
orl
adc
cmpsl
insl
jl
and
lods
addr16
insl
movsb
lea
addl
xchg
lock
stos
xchg
test
pop
arpl
inc
xor
mov
mull
or
push
das
xchg
std
shlb
or
mov
add
adc
or
or
or
sti
inc
cmp
cmp
jp
out
push
hlt
pushf
add
pushw
inc
sti
ds
imul
sbb
fidivrl
cmp
adc
adc
mov
sub
mov
push
xchg
xchg
sub
cmp
movsb
xchg
mov
jns
outsl
xorb
pushf
ret
inc
xor
mov
gs
mov
mov
cmpsb
mov
add
mov
pop
push
and
mov
les
insl
std
std
ja
push
jmp
sbb
jecxz
xchg
cmp
mov
jo
fadd
adc
stos
rcll
ja
inc
test
data16
and
mov
int3
shlb
scas
cmpsl
mov
push
sub
cmpsb
lds
outsl
dec
popf
and
xor
jo
outsb
mov
lds
sahf
jo
nop
cmp
arpl
mov
inc
mov
imul
mov
leave
mov
insl
xchg
jbe
mov
in
or
aas
insb
addb
cmp
ficoms
sahf
test
sub
stc
out
pop
movsb
popf
imul
sub
push
and
inc
and
test
adc
scas
repnz
int3
fstl
popa
popa
mov
push
movsl
addr16
jnp
ret
jnp
fcmovbe
std
loop
rorb
push
mov
mov
pop
pop
lahf
daa
mov
cmp
leave
jmp
jae
dec
fcoml
mov
lret
adc
lret
shrl
xor
stc
rcrl
mov
mov
jle
es
add
lahf
xchg
mov
test
mov
lods
outsb
xor
jl
inc
popf
push
repnz
xchg
jno
or
adc
fimuls
sahf
fstps
incb
jns
repnz
mov
cmp
jecxz
adc
gs
jecxz
cltd
sbb
mov
push
test
and
and
in
stos
pop
clc
xchg
mov
jmp
fisubl
jge
mov
pusha
xchg
les
filds
sub
in
test
adc
cltd
push
push
sahf
cmp
loope
daa
test
add
sub
stos
xlat
mov
add
aam
dec
or
andl
js
loop
xchg
jmp
push
or
push
sub
sar
adc
xor
sbb
and
jle
cmp
repz
mov
enter
sbb
pushf
pop
jp
mov
push
fxch
xchg
cltd
or
xchg
push
data16
push
cs
cld
outsb
in
add
pop
jns
fnsave
mov
mov
test
or
jmp
pusha
iretw
jl
add
lahf
jae
mov
cmp
push
ja
lret
push
insl
cmp
xor
cmpsb
dec
dec
imull
sub
xchg
addb
inc
dec
insl
dec
xor
push
pop
ret
pop
loop
fwait
loopne
fwait
in
fsts
lock
aaa
repz
push
movsl
aad
xor
or
push
sbb
dec
sbb
mov
push
in
in
mov
cmp
push
add
in
and
testb
mov
outsl
aam
mov
mov
cmpsl
data16
xor
xor
mov
xor
add
inc
jle
in
stc
fnstcw
pop
popa
xor
outsb
ret
sub
cmpsl
inc
mul
shl
dec
push
movsl
in
movsl
inc
push
push
mov
out
jg,pt
jge
mov
loope
mov
mov
cmp
shlb
or
repz
mov
add
inc
in
out
negl
inc
push
pop
outsl
movsl
push
pop
or
cld
xchg
push
push
cld
lods
arpl
sahf
lahf
inc
roll
jmp
mov
aad
adc
mov
test
aam
out
std
idivb
pop
sahf
adc
cli
orl
pop
inc
pop
rolb
sub
add
pop
pop
and
in
pop
enter
or
jbe
mov
pop
popf
inc
sahf
push
scas
and
mov
cwtl
mov
rol
lds
add
jl
sbb
pop
jae
push
std
add
addr16
dec
leave
scas
cld
adc
jmp
xchg
cli
les
subl
mov
popf
pop
outsl
addr16
xchg
mov
les
mov
jp
inc
add
dec
mov
pushl
push
fcmovne
bound
and
mov
adc
adc
imul
inc
mov
inc
sbb
fisttpll
mov
add
out
cmc
ds
std
es
pop
push
popf
pop
jmp
pop
push
jecxz
divl
mov
sbb
nop
pushf
int3
sbb
add
frstor
popf
icebp
iret
and
scas
xor
mov
dec
and
mov
push
popf
inc
cmpl
mov
test
inc
mov
shll
jmp
mov
loopne
hlt
pop
stc
xchg
dec
out
jmp
std
push
nop
and
stos
push
dec
push
adc
or
pop
inc
dec
mov
pop
inc
jne
mov
aaa
ja
repz
aad
clc
and
xchg
in
pop
clc
fistpll
cmp
push
adc
mov
xchg
add
push
sub
dec
push
dec
nop
and
xchg
outsl
cwtl
push
xchg
in
add
sti
add
mov
pop
inc
and
insl
in
mov
add
leave
jg
cltd
mov
jmp
aas
divl
add
adc
clc
ret
jae
imul
push
xor
dec
test
fcmove
push
jp
rcll
leave
test
nop
mov
push
sbb
std
or
sub
es
sub
xor
mov
test
jp
outsb
in
jnp
enter
push
push
ret
cs
cmp
in
add
cmpsl
test
jns
xor
pop
cmpb
mov
hlt
das
adc
jge
push
call
mov
push
inc
adc
roll
outsb
enter
arpl
call
dec
clc
loope
push
addr16
mov
pop
jnp
add
push
xchg
cmp
push
cs
imul
adc
adc
cmp
sbb
xchg
mov
xchg
nop
je
movsb
outsb
cld
mov
fwait
icebp
stos
clc
mov
addr16
punpckhwd
mov
or
lahf
ds
sbb
scas
rcrl
sub
out
ret
pop
fs
movsb
sbb
dec
cmp
jno
pop
into
xchg
and
mov
or
lret
sahf
pop
pop
and
movsl
pop
insl
outsl
mov
into
jl
rep
gs
shrl
adc
mov
mov
inc
leave
jns
mov
jbe
sbb
cld
and
mov
in
addr16
and
push
push
xorl
psubb
call
mov
cmp
fisubl
lahf
mov
jne
or
in
imul
ss
pushf
cwtl
daa
cmp
mov
cltd
int3
cltd
pop
xchg
les
and
std
jmp
das
lea
mov
jl
mov
test
stos
push
xchg
push
js
aam
xor
lea
jns
adc
negl
stc
ret
adc
or
ja
mov
mov
imul
xchg
clc
dec
stos
push
cltd
mov
or
ljmp
test
mov
sbb
cs
rcll
mov
lods
das
dec
xor
shrl
js
and
sub
cmp
mov
ret
sbb
sub
scas
test
pop
and
push
pusha
stos
sbb
mov
add
push
stos
mov
jno
xor
add
pop
in
stos
adc
popf
in
daa
test
scas
push
ror
pop
xchg
or
int3
push
jae
inc
in
mov
lods
sarb
enter
adc
xor
mov
out
mov
ss
jnp
mov
lret
adc
mov
push
popa
enter
mov
push
push
sahf
icebp
lret
xor
pusha
adc
push
lret
and
idivl
ss
mov
jl
idivb
fnstsw
in
rcrb
loop
jns
push
addr16
clc
insl
loop
fldcw
adc
fdivl
xchg
cmpsl
rorb
adc
sub
or
push
shll
pop
mov
into
sbb
wbinvd
cli
push
sahf
out
add
ja
js
out
mov
negb
mov
out
imul
dec
pop
xchg
ds
or
dec
jnp
scas
mov
jne
cmp
adc
divb
pop
or
pop
insb
ljmp
call
outsl
xchg
test
sahf
fisubs
insb
fwait
mov
pushf
pop
mov
loopne
testb
andl
lods
addr16
out
rolb
add
jae
sbb
mov
xchg
mov
fwait
iret
and
mov
aaa
jnp
mov
clc
mov
inc
mov
jno
xchg
add
or
adc
aam
or
mov
cmc
xchg
cmp
in
pop
push
cmp
sahf
cmp
adc
test
sbb
cmc
mov
push
mov
fcom
enter
mov
mov
jp
sub
add
cmp
or
mov
shrb
add
jb
arpl
imul
into
adc
ss
or
sub
mov
pop
mov
insb
aad
repz
cmpsl
mov
add
push
std
scas
push
pop
or
lods
mov
jle
div
push
xchg
fsubs
lret
xchg
lcall
aas
xchg
inc
cwtl
shrl
and
aas
and
ja
jp
mov
inc
pusha
fmull
ss
xor
sbb
mov
clc
inc
std
cmpsb
jno
loopne
cwtl
popa
adc
fistps
dec
xor
fstp
and
xchg
in
xchg
adc
sarl
add
mov
ret
xchg
fisttpll
jge
sub
or
mov
dec
movsb
push
sbbl
scas
test
mov
push
cld
outsl
xor
ljmp
sbb
lock
roll
and
sbbl
lods
ror
dec
scas
adc
mov
in
jbe
insb
add
xchg
stos
arpl
nop
lret
pusha
lock
and
inc
popa
cmp
jg
les
aam
push
inc
lret
out
add
cli
ret
outsl
sub
dec
mov
in
sbb
push
ffreep
mov
adc
negb
inc
jno
adc
int3
adc
js
xor
out
pop
sbb
pop
aaa
lret
mov
data16
xchg
stc
dec
mov
in
push
cld
adc
sbb
cmc
sbb
loopne
adc
repnz
sarl
std
dec
stc
fstp
psubsw
jnp
pop
daa
scas
mov
shr
jmp
push
sbbb
leave
iret
dec
fs
hlt
test
pop
xchg
sub
fldenv
push
dec
repnz
loopne
test
lods
ficompl
or
or
mov
loop
stos
mov
xchg
enter
mov
xchg
sbb
movsb
mov
es
inc
fsts
add
movsb
xor
pop
sub
adc
mov
sbb
inc
stos
cld
or
insb
enter
adc
jb
pop
add
xchg
ds
mov
lods
inc
add
fiadds
das
bound
fstps
mov
sub
pop
pop
in
mov
nop
jl
push
insb
mov
dec
cmpsl
sbb
lock
enter
mov
cmpsl
leave
clc
outsl
sbb
nop
or
paddb
xor
pushf
lahf
push
cmpsb
add
popa
mov
mov
lret
je
push
xchg
nop
sbbb
js
cwtd
in
loopne
pop
fmull
lds
add
sub
pop
lock
clc
cmc
icebp
fisubl
inc
xor
jbe
sbb
lret
xchg
aad
test
jp
lods
pop
mov
cmp
sub
dec
pop
scas
sti
and
loopne
out
aad
addr16
dec
sbb
adc
adc
cltd
jmp
jno
popf
leave
mov
xor
clc
sti
stos
sti
sub
xchg
pushf
fwait
adc
ss
enter
adcb
cmpsb
sbb
stc
test
outsl
mov
das
or
mov
push
outsb
adc
add
adc
test
mov
lahf
cmp
out
das
push
sbb
xor
adc
loopne
jg
or
sti
push
xor
mov
jns
stos
mov
loop
cmc
mov
popf
dec
pop
sarl
lcall
mov
or
mov
or
mov
dec
push
clc
cld
sbb
jge
std
outsb
lret
mov
xor
icebp
outsb
das
xlat
rcll
icebp
push
mov
and
mov
mov
cmp
aad
lcall
in
stc
mov
shr
lret
mov
adc
cmp
or
int3
lret
or
and
push
sub
mov
imulb
dec
sub
cmpsb
arpl
push
jl
cmp
faddp
inc
and
adc
xchg
cmpl
sti
push
push
out
hlt
push
and
out
sub
in
out
subl
mov
cld
inc
jge
cli
daa
fs
fs
gs
bound
insl
or
xchg
movsb
push
arpl
leave
dec
inc
test
sbbb
popf
and
adc
int3
loope
mov
add
pop
icebp
pop
outsb
xchg
add
rolb
fcompl
ficoms
dec
fsubrs
and
add
cmp
cmc
and
cmpsb
shll
mov
pushf
cltd
xor
sbb
mov
dec
mov
fdivrs
cltd
movsl
lea
xlat
mov
lea
sbb
addr16
push
jne
iret
jmp
or
adc
xchg
in
mov
sbb
jae
xlat
push
sbbl
cwtl
loope
or
adc
mov
and
inc
jo
xchg
iret
arpl
add
leave
sbb
mov
popf
shlb
cmpsl
pop
cmpsl
jle
repz
pop
repnz
gs
lock
adc
and
cmp
aas
cs
fs
mov
xor
popf
sub
sub
jmp
jb
aad
mov
xchg
ljmp
lcall
cmp
push
repnz
sub
stos
ficomps
pop
mov
mov
push
inc
faddp
xchg
inc
lcall
int
pop
sarl
or
jb
gs
aam
fmull
loope
or
int
mov
and
jnp
addb
dec
adc
mov
stos
jns
stos
stos
lret
jae
aaa
cmp
dec
jne
loope
daa
and
mov
sbb
mov
out
cmpsl
out
and
mov
or
mov
enter
jg
ret
dec
loop
ljmp
js
jmp
jo
inc
in
mov
fwait
ss
xorb
mov
or
push
add
jne
sub
mov
mov
addb
lods
rorl
jecxz
mov
je
jnp
scas
stc
cwtl
imul
aad
mov
xchg
inc
jmp
cvtdq2ps
lret
xor
out
rcrb
std
vpmulhuw
test
jne
std
iret
sub
add
popf
hlt
clc
push
xor
pushl
lar
xor
or
push
or
and
xlat
jae
ret
xchg
sbb
cld
push
sbb
cmpsl
or
or
xlat
jl
scas
sbb
dec
iret
jle
ret
dec
sub
sub
rclb
mov
lods
sbb
jb
insb
sub
push
xor
aaa
out
enter
pop
mov
fsts
in
xchg
mov
jge,pn
outsb
jne
out
cmp
or
imul
pusha
xchg
inc
icebp
or
inc
std
mov
insl
mov
sbb
sahf
pop
in
test
ret
mov
push
xlat
mov
mov
scas
add
int
inc
lods
sub
cmp
shrl
add
insl
inc
mov
lods
mov
adc
imul
stc
pop
xchg
pusha
test
xchg
jmp
lret
call
pop
cli
sbb
in
cli
dec
push
jnp
sub
mov
cmpsl
scas
sar
movsb
pop
popa
out
xor
lahf
ja
push
icebp
xchg
into
into
test
testl
stos
inc
cs
notl
add
jmp
push
repz
clc
jmp
xor
jecxz
clc
pop
shr
dec
popa
ljmp
pusha
jns
mov
or
add
and
jge
arpl
pop
out
lahf
fidivl
sbb
sar
push
es
pop
sub
push
xlat
loopne
lock
decb
mov
dec
arpl
loopne
mov
xor
aas
in
jno
mov
mov
mov
cmp
or
xor
and
cmp
push
dec
pop
dec
sti
mov
fldt
bound
cmp
inc
add
popf
push
mov
sub
push
push
adc
xlat
mov
outsl
js
jl
jne
pusha
adc
in
loopne
adc
fbld
cld
fsubrs
shr
out
movsl
rorl
push
jae
inc
rcll
lea
sub
mov
fucom
fnstenv
int3
movsl
xor
mov
lret
lahf
in
cmp
xchg
sub
clc
fcmovb
daa
inc
jecxz
mov
push
xchg
mov
test
or
push
dec
sub
xor
lock
pop
loopne
popa
lods
out
div
aam
sub
sub
and
push
lahf
nop
scas
sbb
and
ret
adc
clc
aaa
jg
jle
and
mov
rorl
dec
push
push
cmp
cmc
dec
jecxz
lods
mov
xor
dec
dec
pop
rclb
test
mov
hlt
cmp
pop
or
insb
mov
bound
insl
jmp
xor
movsl
inc
push
sub
inc
add
sti
pop
adc
je
das
loope
scas
sarb
sahf
cmc
scas
out
mov
xor
mov
xchg
shll
es
in
mov
rclb
jbe
lret
mov
xlat
dec
sbb
aas
pop
xchg
mov
inc
adc
es
movsb
in
jb
in
adc
push
movsl
push
or
cmp
xchg
aam
lea
pop
aas
push
in
out
cmp
cmpsb
rcr
adc
jnp
cmp
rcr
and
push
inc
movsl
ret
push
mov
pop
mov
push
fmul
fsubr
or
out
nop
mov
lock
and
mov
push
aad
dec
lahf
std
fxtract
aad
lahf
jp
adc
ja
icebp
in
into
pop
cld
loope
in
sub
popl
pop
xor
iret
add
das
xchg
or
mov
std
fmulp
mov
outsl
jge
daa
js
das
and
mov
sub
notl
test
jns
sbb
cs
fs
cmp
test
mov
mov
push
aaa
jle
push
bound
mov
lcall
push
leave
push
dec
int
dec
stos
cmpl
aad
cmp
cmc
sbb
jns
mov
push
or
mull
cltd
and
sti
sbb
sub
xchg
imul
dec
mov
clc
rcrb
enter
lcall
xlat
push
fldt
cmpsl
cmpl
jmp
leave
movsb
inc
push
pop
inc
pop
scas
jb
int
clc
mov
xlat
mov
and
push
sbb
sub
loop
dec
sbb
popf
sub
jle
fs
sbb
sub
cmp
jecxz
shl
std
mov
and
sbbl
push
mov
scas
mov
add
mov
hlt
lods
test
adc
dec
add
cwtl
sbb
mov
jb
rcrl
mov
mov
cmpsb
mov
loope
shll
pusha
push
aaa
sbb
call
mov
sub
cmp
lods
lret
pop
push
sbb
inc
mov
jae
aam
insl
cld
shlb
fnsave
fidivs
shufps
ret
xchg
jns
dec
mov
dec
bound
lret
mov
dec
ljmp
dec
mov
adc
sub
sub
sub
mov
xchg
insb
push
or
add
pop
xor
subb
lods
cmp
rolb
out
push
adc
cmp
or
jecxz
std
jecxz
mov
cmpsb
je
fs
dec
jbe
cmc
lahf
adc
lret
sub
ljmp
cmp
or
stos
lret
movsb
mov
mov
movsl
popa
push
lods
push
std
jb
jae
es
sbb
inc
ret
sbb
lret
adc
lods
pop
inc
lcall
lcall
ljmp
sub
pop
xchg
out
fisttpll
sbb
into
jecxz
mov
cmp
jb
data16
pop
cwtl
push
or
xor
dec
inc
jl
mov
cmp
sbb
mov
shlb
lds
push
push
mov
xchg
fnsave
sbb
mov
mov
subl
outsl
add
adc
cvttps2pi
sub
or
dec
jns
dec
mov
inc
pop
orl
push
pop
sbb
addr16
fcoms
or
sub
ret
sbb
iret
js
xor
lods
push
or
fstpt
lea
and
adc
add
adc
mov
mov
push
add
vmovntdq
dec
xor
xor
mov
roll
hlt
fsubrl
cmp
add
push
jne
nop
push
fisubrs
mov
xor
shlb
mov
mov
mov
xchg
outsb
xor
sbb
jns
scas
mov
mov
adc
sbb
and
jmp
stc
add
stos
jne
addr16
pop
xor
and
lret
jne
lret
dec
rcrb
bound
xor
dec
mov
ret
mov
mov
enter
gs
outsl
pop
mov
cli
add
js
xchg
jo
enter
sbb
cltd
lahf
xchg
xchg
adc
mov
mov
jl
sbb
out
or
ljmp
cltd
jo
out
ret
rorb
inc
nop
xlat
mov
pop
jle
insl
pop
adc
jo
sbb
in
in
mov
push
lcall
ficoml
fadd
pop
push
mov
or
clc
dec
xor
push
stos
lods
inc
dec
pop
mov
sbb
out
and
push
add
fisttps
mov
movsb
fnsave
push
sub
or
repnz
fidivrs
pop
mov
mov
das
add
cmp
jmp
push
and
mov
cmp
lret
xchg
cmpsl
adc
outsl
sub
xchg
imul
push
cmp
inc
and
mov
xchg
scas
adcb
mov
fiadds
inc
dec
sahf
dec
xor
std
stos
in
sub
mov
mov
test
adc
and
ja
push
in
mov
mov
mov
xor
fdiv
mov
sbbb
dec
cmp
sti
bound
rorl
js
arpl
pop
loope
das
inc
adc
push
stos
call
or
test
imul
lret
movsl
aad
stos
adc
mov
sub
mov
mov
mov
dec
popf
adc
mov
pop
sahf
ss
es
ja
add
je
mov
push
and
push
pop
and
jo
jl
into
rcrb
sahf
ret
push
rol
rclb
shrl
jae
push
cmp
incl
or
gs
jns
jmp
push
dec
andl
pop
adc
jle
push
add
push
int
inc
ret
into
pop
dec
es
adc
mov
movsl
push
das
imull
push
imul
call
mov
inc
pop
inc
test
in
adc
stc
sbb
inc
sub
jo
filds
mov
negl
sub
jb
adc
mov
paddusw
hlt
loope
jmp
in
out
inc
roll
add
out
lret
arpl
mov
xor
dec
pop
in
imul
gs
sub
test
scas
inc
je
xor
add
add
clc
rcl
shlb
push
test
and
rclb
mov
add
fisubl
rclb
mov
jp
dec
fdivr
shrl
icebp
ja
push
repnz
in
pop
pop
sbb
mov
mov
out
inc
aas
push
scas
sub
movsb
xlat
stos
push
std
sub
ds
stos
add
jle
ss
cli
mov
in
enter
add
cmpl
jb
push
pop
mov
mov
xchg
out
cli
mov
mov
xor
or
push
rcll
cltd
pop
sbb
mov
iret
lods
push
cmp
sahf
mov
push
jb
out
jl
adc
mov
fdiv
mov
fwait
enter
adc
pop
mov
movsl
rorl
and
mov
mov
xchg
in
xchg
dec
mov
cmpsb
hlt
aad
adc
cmp
jmp
out
shr
aam
rcrb
or
fists
imul
push
in
cmpb
add
testb
mov
sub
popf
sbbl
insb
sbb
xchg
out
incb
dec
ja
in
xchg
xchg
jo
iret
je
or
mov
arpl
mov
push
fmul
addr16
popf
mov
rcrl
pop
mov
cmpsl
lea
and
rcrl
adc
popa
mov
inc
lahf
add
xchg
dec
ja
shlb
pop
ret
dec
in
data16
and
push
pop
mov
add
lods
enter
sub
shl
inc
shr
in
xchg
shlb
loope
loopne
insb
xor
mov
cmp
aaa
fmuls
pop
repnz
and
outsb
sahf
std
clc
dec
cmpsl
pop
and
inc
cs
sub
mov
loop
in
adc
loope
xchg
out
insl
jl
call
mov
sub
adc
ljmp
pop
rolb
mov
enter
popf
jp
jns
adc
fcomp
cltd
mov
xchg
push
inc
xchg
xchg
jns
lcall
jecxz
mov
mov
scas
mov
imul
lods
lret
jmp
push
add
add
int3
dec
sub
add
cld
jl
addr16
sub
dec
aas
inc
mov
pop
cmc
scas
sbb
adc
push
cmp
lods
mov
ss
xchg
jmp
push
adc
dec
daa
add
insl
call
outsb
jmp
int
ror
xchg
mov
loopne
jl
dec
fcomps
jg
inc
divb
lds
add
mov
mov
cmpsb
das
aas
mov
fiadds
mov
adc
sub
xchg
cmp
xchg
mov
pop
add
repnz
ret
xchg
push
add
and
loope
loope
imul
adc
and
gs
jmp
dec
adc
add
into
mov
mov
aaa
loop
lods
test
xchg
mov
mov
sub
push
ljmp
out
inc
fsub
cmp
daa
mov
cmpsl
insb
cmp
roll
in
shrl
inc
adc
mov
inc
aad
dec
leave
mov
fwait
mov
jnp
or
aam
int
ret
add
lea
int3
int
push
into
dec
imul
insb
and
pusha
dec
popf
dec
push
repz
pop
outsl
nop
and
mov
arpl
call
xchg
dec
cwtl
stc
pop
insb
lret
ret
sbb
dec
sub
sbb
ljmp
or
iret
mov
cmp
pop
pop
cmp
inc
rol
into
pop
jno
jecxz
out
mov
jb
pushf
dec
inc
lahf
mov
push
cmp
les
inc
inc
lods
test
sbb
jo
jl
test
and
xchg
cmp
outsb
pop
mov
nop
pop
or
lret
sbb
nop
mov
xchg
ja
mov
cwtl
pop
daa
pop
clc
or
mov
les
sbb
or
push
inc
mov
daa
ror
mov
push
add
repz
frndint
test
ret
xchg
add
pop
push
pop
cmc
in
scas
and
add
pop
in
loope
pop
or
pop
dec
dec
or
cmpsb
jb
add
mov
xchg
dec
outsb
cmpsl
xchg
push
jne
mov
insl
mov
fstpt
les
adc
cltd
fdivr
popf
add
fisubs
mov
sub
xchg
jmp
scas
inc
ret
push
mov
cmpsb
std
das
sub
jecxz
into
mov
inc
out
cltd
xor
jo
paddusw
call
popf
mov
xor
or
pop
cmp
lcall
mov
jb
adc
pop
sahf
sbb
insb
xor
add
sub
movsl
push
adc
mov
pop
sbb
sahf
test
rol
sbb
mov
adc
cwtl
jp
xor
int3
mov
imul
out
gs
xchg
pop
pop
pop
in
dec
sbb
shl
inc
das
fwait
xchg
sahf
movsl
into
hlt
mov
std
and
mov
out
mulb
or
js
out
mov
cmp
pop
fwait
clc
push
call
pop
mov
xchg
mov
mov
sti
cld
mov
xchg
pop
cmp
mov
sbbb
sti
pop
and
adc
aas
adc
ret
mov
xor
xchg
mov
add
bound
or
scas
push
out
mov
xchg
jg
fdivl
mov
cli
mov
das
mov
lods
div
out
mov
repnz
addl
mulb
pop
in
fstpl
pop
sbb
xor
cmpl
std
lds
repz
xchg
mov
fisttpll
aam
bound
pop
imul
or
dec
cmp
mov
dec
pop
loope
cmc
fistps
jmp
call
dec
lret
roll
lods
sahf
cmp
or
mov
jnp
cmp
loope
and
adc
loope
insb
or
call
mov
jae
out
push
test
call
add
dec
adc
rorl
push
bound
dec
mov
mov
sti
dec
cmc
dec
or
jge
mov
movsb
fwait
test
scas
fistpll
push
and
roll
call
enter
jnp
aam
dec
dec
jg
sbb
cmp
mov
xor
mov
es
pop
push
adc
fabs
xchg
nop
jmp
ficoms
and
or
inc
les
lods
aaa
test
sub
cmpsb
icebp
adc
and
lods
and
enter
and
dec
leave
sub
loop
test
jae
mov
push
icebp
popf
ja
jmp
mov
movsb
test
or
pop
sbb
lds
jmp
pop
xor
adc
ss
add
and
xor
mov
lock
cwtl
pop
xchg
inc
pushf
rorb
add
inc
jb
add
inc
jge
fwait
push
mov
adc
mov
pop
cmp
jg
adc
xchg
cwtl
jo
sbb
or
cmc
add
fxam
outsb
and
xchg
mov
xchg
mov
push
mov
repz
or
stc
daa
xor
sbb
mov
mov
pop
sub
rorl
pop
sub
and
dec
cmp
push
inc
test
imul
dec
cmp
outsb
sbb
in
mov
orb
xor
xor
xchg
popf
test
pusha
lods
ret
cli
pop
repz
cmc
xchg
movsl
das
pop
mov
popf
sbb
add
lds
push
into
dec
aam
xchg
rcrb
in
adc
adc
into
pop
icebp
ret
data16
in
sbb
and
sub
jae
add
movsl
lret
out
pop
xchg
pop
fiaddl
lods
push
pop
sbb
mov
lock
out
push
bound
lret
test
movsl
xchg
add
inc
pushf
cli
fstl
in
cmp
mov
add
clc
int3
out
add
cmp
or
push
or
repnz
out
jl
add
mov
cmp
push
pop
mov
js
mov
sub
das
sbb
out
cwtl
iret
xor
movsl
pop
pop
mull
int3
ss
or
jne
wrmsr
sub
inc
sub
sub
mov
pop
clc
ljmp
stc
xchg
test
ret
jo
orl
adc
add
test
fs
call
mov
shl
loop
stos
fisttps
mov
mov
sub
pop
orl
pop
dec
movsl
stos
cltd
fs
dec
insb
into
stc
iret
out
sbb
xchg
ret
lfs
and
jl
mov
in
mov
jnp
scas
shrl
imul
int3
push
aaa
popf
rorl
pop
xlat
out
nop
and
mov
in
test
cli
mov
aaa
push
jp
push
into
aas
test
pop
jbe
mov
in
and
mov
decl
pop
inc
std
shl
adc
pop
ja
push
les
ret
hlt
inc
push
int
or
mov
jmp
cmp
stos
mov
in
cmp
mov
gs
dec
adc
call
push
sbb
outsb
out
dec
cmp
addr16
repnz
lcall
and
sti
push
mov
out
out
ret
push
sbb
sbb
test
leave
xor
pop
xchg
push
xor
nop
bound
lahf
cwtl
sbb
mov
fwait
ljmp
cmpsl
fidivrl
push
mov
movsl
mov
and
mul
push
rcrl
inc
push
icebp
lds
clc
inc
add
or
and
shlb
mov
add
stos
mov
adc
into
inc
xorb
cmpsb
sub
or
add
int
xchg
xchg
pusha
fidivrs
pop
adc
or
sub
pop
test
repz
ret
xlat
in
lret
fstl
and
mov
sti
sbb
cmp
pushf
xchg
adc
xor
push
pop
pop
inc
test
sub
fs
push
imul
push
orb
mov
test
popa
pop
shrb
or
push
and
xchg
jmp
test
pop
inc
sub
sub
xor
jo
push
arpl
mov
hlt
xorb
fldenv
mov
cmp
das
xchg
or
stos
jecxz
mov
popa
rorl
pop
jnp
ret
sub
dec
push
sbbb
xchg
adc
add
mov
jle
fiadds
cmpb
mov
jbe
das
mov
pop
cmp
ret
test
cmp
nop
mov
mov
mov
test
leave
add
arpl
shll
fldenv
ljmp
repnz
scas
lods
lock
xor
jecxz
addl
sbb
jne
sub
mov
jne
and
and
into
xor
shrl
ja
add
add
lock
nop
dec
addb
adc
push
inc
sub
dec
fwait
and
lea
cmovs
or
cmp
dec
pop
mov
jnp
mov
sub
scas
js
cmp
xor
mov
movsb
repnz
cmc
repnz
mov
push
mov
cmc
or
xor
repnz
cmpsl
stos
cmpsb
mov
jno
jle
addr16
imul
stc
push
out
mov
mov
and
out
mov
les
push
pop
popa
add
and
mov
cltd
pop
fistl
and
mov
push
or
sbb
mov
adc
inc
cmp
mov
pop
push
mov
cltd
sbb
inc
sahf
add
xorl
cld
push
xor
sbb
sub
sbb
sub
shll
and
inc
xchg
fwait
loop
ficoms
movsl
cmc
inc
leave
fwait
jle
icebp
cltd
cld
xor
sbb
sahf
sub
sbb
mov
fnstcw
pop
repz
add
adc
cwtl
xor
out
xor
mov
aas
ds
xor
int3
pop
mov
mov
lret
dec
and
inc
mov
or
jnp
in
inc
in
fbld
imul
rclb
and
xchg
pop
out
pop
jl
mov
xchg
movsb
aad
fmul
jg
mov
mov
inc
mov
jmp
cwtl
xor
loope
sub
fwait
outsb
lock
stc
bound
pop
lods
jae
add
mov
xlat
cltd
arpl
mov
pop
cmp
cmpsb
repnz
mov
mov
lret
mov
add
jae
imul
lret
fldlg2
je
sbb
aam
lcall
es
lret
or
pop
cmpsb
lret
adc
int
add
gs
addr16
ss
jo
xchg
sahf
xor
xchg
cmp
push
ret
jo
hlt
push
out
xchg
xchg
xchg
pushf
adc
xchg
rcrb
orb
cmp
xorb
insb
push
sub
mull
sub
addr16
stos
inc
sub
popa
lret
adc
cltd
pusha
cli
mov
mov
dec
add
cltd
out
mov
je
faddl
mov
enter
pop
mov
and
lret
hlt
mov
subl
or
movsl
sub
xchg
xor
es
dec
or
adc
aaa
pop
movsl
dec
movsl
sub
lahf
dec
pop
inc
mov
add
movsl
jmp
adc
popa
mov
test
loope
jbe
or
xchg
push
lahf
sti
ficompl
pop
lds
add
sub
test
sub
test
loop
sarl
push
test
test
mov
scas
xchg
jae
test
cltd
and
jns
inc
jno
cld
iret
lods
std
pop
mov
sbb
lods
lods
mov
xor
enter
ret
inc
mov
mov
jae
jo
lret
pusha
xor
push
and
xor
jnp
mov
cltd
enter
push
lret
xor
test
push
xlat
sbb
orb
cmp
add
inc
push
jg
adc
pop
mov
xchg
xchg
cmp
sbb
mov
pop
pop
rcll
pop
inc
xchg
cwtl
add
xchg
inc
testb
push
push
push
mov
mov
cmp
cmp
cmpb
xor
jge
loopne
sub
cmp
push
pushf
cmp
and
out
repz
jns
sbb
mov
push
test
xchg
mov
add
or
mov
mov
jb
adc
mov
jo
das
mov
mov
or
push
sub
mov
jo
aaa
fistl
jge
andl
movsl
shlb
jae
push
imul
cmp
jae
scas
stos
mov
dec
adc
jg
imull
popa
jecxz
ret
cmc
pop
pushf
mov
jmp
das
daa
sbb
push
pushf
data16
stos
test
cmp
or
fstpl
xchg
mov
sbb
pop
pop
and
cltd
das
jns
pop
fistps
jecxz
mov
xor
aad
xor
adc
clc
sarl
and
sub
dec
mov
fisubrl
popf
fs
test
mov
mov
sahf
sarb
leave
push
mov
fldcw
add
idiv
jp
loop
mov
scas
inc
jae
popa
in
je
rorw
jp
jb
nop
xor
test
roll
pop
cmp
mov
nop
push
test
dec
stc
test
xor
int
out
lods
fsubrs
icebp
jmp
pop
add
hlt
loop
in
loop
icebp
in
jle
mov
insl
lcall
pop
scas
and
jmp
add
sti
cld
imul
xchg
mov
loop
cmp
daa
push
xchg
jb
xchg
adc
dec
jle
xchg
sbb
jbe
xlat
sub
iret
add
add
popa
add
popf
rol
insb
mov
lds
loopne
rcrb
hlt
sbb
xor
inc
add
xchg
push
mov
jl
clc
add
mov
adc
repnz
jl
cs
mov
cs
mov
rcl
sahf
pop
lds
dec
and
cld
aaa
clc
into
xchg
fsubl
insl
dec
jle
push
sub
xchg
es
cltd
add
cltd
mov
mov
dec
push
cld
cmp
fcoml
jne
push
lock
push
test
insl
jg
adc
negb
das
mov
jnp
clc
xchg
outsb
push
adc
sub
sbb
sub
repz
shlb
dec
inc
inc
cltd
xchg
pop
dec
pop
xor
iret
sbb
or
cwtl
fisttpl
cmp
lret
pop
or
and
mov
cmc
loopne
xor
lds
jns
popa
jl
enter
mov
ja
jl
hlt
mov
adc
repz
es
jns
js
pop
test
pop
pop
ljmp
push
pop
nop
je
mov
and
xchg
daa
cli
and
cltd
push
mov
aam
xor
push
lods
and
lock
mov
and
aas
stos
stc
sbb
mov
mov
push
ja
jp
js
cmc
xor
xchg
pop
mov
xchg
pop
and
int3
xor
or
rorl
push
jg
cmpsb
xchg
mov
add
sbb
je
je
fs
add
jecxz
xchg
adcl
pop
mov
pop
adc
inc
shl
ficomps
cli
ret
or
js
sbb
dec
jg
shl
andw
popa
adc
jge
push
test
es
test
jo
jge
adc
or
xor
fwait
mov
fiadds
mov
push
imul
stos
outsb
cmp
cltd
and
push
mov
and
enter
mov
xchg
sub
cmpsl
in
imul
cmp
mov
jg
pop
sub
mov
cmp
lods
lahf
lahf
sbb
test
test
in
xchg
jae
or
leave
not
mov
jno
imul
sbb
fisubrl
xchg
xlat
pop
rorb
outsl
or
cmp
lret
xchg
add
pop
pusha
pop
jle
and
daa
dec
sbb
or
test
lret
pop
xor
and
jecxz
rolb
shrd
mov
xor
xchg
movsb
ss
dec
pop
shlb
sti
lods
ffree
xor
cwtl
into
ja
jmp
inc
mov
bound
pop
xor
aad
scas
negl
les
pop
xchg
inc
add
cli
dec
imull
sub
xor
repnz
adc
ja
ret
sub
ret
das
fs
int
pop
mov
cmp
mov
mov
scas
lret
cli
add
call
bound
outsb
arpl
into
orb
inc
add
test
shl
lret
and
in
shll
push
aam
push
movsb
push
xchg
mov
inc
out
add
ret
popf
push
std
adc
xor
aam
sbb
stc
lret
push
test
push
inc
and
pop
out
xor
mov
push
cltd
or
jge
dec
loope
xchg
xlat
mov
repz
rcll
fwait
push
jnp
jnp
push
lret
cmp
ljmp
leave
aas
pop
divl
and
or
or
jo
add
mov
mov
cmp
ret
into
fdivr
xor
push
pop
pop
icebp
jecxz
adc
fs
test
sar
xchg
movsb
fsubs
or
and
mov
lods
mov
cld
mull
clc
test
jp
jno
fstp
push
sub
and
xchg
ja
test
cli
jmp
insb
mov
pop
insl
xchg
jo
push
pop
leave
aam
jmp
pop
addr16
cmpsb
out
fbstp
fnstenv
jo
xchg
lcall
shll
mov
and
loop
dec
mov
adc
lods
mov
mov
iret
xor
in
or
xor
aas
mov
and
xchg
ja
daa
fdivr
xorl
and
jbe,pn
push
mov
pop
fbstp
cli
push
rorl
das
lret
adc
int3
sti
jge
insl
enter
insl
mov
mov
pop
in
sarl
jns
sub
popa
mov
sub
sbb
call
jg
jnp
and
les
sahf
mov
jp
xchg
shll
push
push
dec
or
aam
movb
shlb
jb
sbb
test
adc
sbb
adc
xor
pushf
dec
aad
mov
sahf
test
inc
add
inc
jl
pop
jmp
fs
pushf
daa
addr16
xchg
mov
addr16
stc
adc
jbe
mov
in
xor
outsl
pop
jnp
mov
mov
push
xchg
fcoms
lock
hlt
cmc
sahf
movsl
fsub
jno
xor
ret
data16
lcall
and
imul
dec
ja
bound
and
stc
lock
cwtl
jp
aaa
into
and
mov
movsl
or
dec
xchg
pop
jae
scas
mov
and
in
fildl
push
cld
aaa
and
jno
shll
adc
shl
xchg
es
rol
std
div
pop
mov
ret
push
insl
roll
dec
ja
mov
shrb
adc
sbb
es
out
mov
fsubl
aaa
in
jae
and
adc
cmpsl
scas
cmpb
loop
stos
movsb
mov
subb
sbb
lret
xor
add
imul
jo
or
xchg
sub
loope
les
pop
ja
pop
dec
or
call
sti
ljmp
jne
pop
movsl
or
mov
in
fisubrs
xchg
outsb
push
mov
jnp
stos
fwait
int
scas
and
rcrl
push
mov
pop
cs
cmp
cld
jns
mov
cli
leave
inc
lcall
cmp
adc
dec
push
lea
int
add
js
mov
or
mov
sub
into
enter
mov
mov
fists
popa
sbb
or
outsl
fstl
jle
cltd
inc
or
popf
fwait
xchg
mov
hlt
sbb
inc
pop
cmpsl
dec
sub
add
and
push
xor
leave
or
or
filds
xchg
pop
mov
je
dec
in
nop
inc
insl
movsb
outsl
rorl
pop
sub
cli
fsubr
sbb
pop
xchg
leave
pop
fisubs
add
cmpl
lahf
mov
push
insb
stos
xor
mull
xor
ss
in
ss
pop
fldl
dec
sbb
mov
and
pop
mov
popa
fs
inc
ja
cmpl
cli
jle
ja
mov
dec
mov
lock
xorb
xchg
lea
and
and
and
adc
sub
inc
or
and
cwtl
xchg
jp
mov
aam
xchg
dec
loope
and
sti
dec
stos
push
cltd
jecxz
enter
dec
sbb
in
cmp
adc
xchg
fs
adc
pop
lahf
sbb
jecxz
mov
cmpsl
mov
xor
adc
insb
jge
xorb
or
jne
add
aad
adc
insl
xor
mov
or
lock
mov
addr16
inc
and
stos
mov
bound
cmpsb
fisubl
jnp
xlat
in
popf
xchg
notb
add
pop
pushf
andb
std
lock
mov
sub
repz
call
xchg
movsl
mov
or
rcrl
mov
xor
xor
sbbl
cmp
and
out
dec
push
repz
ret
stos
es
js
dec
xchg
cmp
adc
mov
rcl
std
cmp
loope
call
dec
scas
lahf
inc
fsubr
pusha
pop
int
sahf
test
add
jg
xchg
in
lock
mov
push
push
idiv
cmp
mov
pusha
leave
xchg
cmp
outsb
xor
mov
repnz
mov
outsl
int3
fisubrl
mov
lahf
arpl
sbb
icebp
icebp
outsl
outsl
jo
hlt
hlt
jno
lcall
or
cmp
rcrb
inc
sbb
dec
repz
gs
xchg
cmpsl
aam
mov
dec
or
xchg
repz
mov
inc
mov
inc
aaa
insb
fldcw
flds
mov
xor
cwtl
mov
icebp
mull
inc
test
ror
loopne
jns
jl
je
enter
test
in
xchg
movups
and
mov
mov
mov
xchg
les
movsb
stc
cwtl
sbb
xlat
xor
xchg
or
push
sbb
jp
data16
cld
xchg
lcall
push
outsb
cmp
push
insl
sbb
and
jg
mov
sbb
ret
dec
nop
sbb
sub
mov
mov
pop
cltd
aas
dec
mov
enter
or
or
jge
xchg
fistpll
dec
rep
xor
call
adc
mov
jns
mov
add
dec
xor
xchg
add
or
sbb
dec
adc
jno
jmp
popl
loopne
leave
loope
popf
pusha
ss
stos
dec
aas
push
pop
arpl
inc
repnz
jb
jp
movmskps
push
adc
or
cmp
lods
xlat
notl
or
lea
pop
cmp
ljmp
out
lock
mov
or
mov
andb
adc
push
repnz
nop
sub
pop
test
push
repnz
ds
pop
fcompl
xor
adc
into
call
inc
push
jb
add
sti
jb
jne
xchg
arpl
or
ret
xor
cmp
stc
in
xchg
in
mov
mov
inc
lea
push
fs
add
orb
in
dec
rcrl
jp
fcoml
sbb
mov
out
push
pop
pushf
out
or
data16
dec
xchg
xchg
in
add
mov
sbb
xorl
cld
xchg
push
dec
dec
adc
es
insb
and
mov
movsbl
pusha
dec
rcr
mov
js
out
push
push
repnz
adc
sbb
cmp
ret
sub
or
cmp
loope
jb
shl
stos
lods
jmp
lods
fsubs
sub
or
mov
adc
pop
cwtl
fnstenv
outsb
stos
mov
cmp
popf
add
out
mov
xchg
js
aam
push
cld
sbb
xor
xor
mov
jecxz
adc
fcoms
das
or
es
pop
sub
xor
or
add
inc
sub
aad
pop
cmp
dec
push
pop
popf
std
sbb
pop
shlb
mov
xchg
inc
xor
fcoms
xchg
jbe
sub
fildll
call
test
push
test
xchg
cmp
inc
jb
mov
outsb
and
xchg
and
outsb
sub
cwtl
lret
sbb
pop
xchg
or
sub
out
push
out
mov
xlat
rclb
int3
setns
fisttpl
xchg
or
sar
inc
fidivs
xchg
daa
pop
push
sub
mov
popa
call
push
es
scas
aam
xchg
loopne
pushf
dec
jg
dec
gs
enter
mov
push
sub
nop
mov
notb
test
loope
gs
and
insb
stos
hlt
int3
sub
into
sbb
mov
push
mov
pop
mov
ret
out
ss
or
ret
pop
xor
mov
lret
add
push
insl
sub
fwait
add
imull
and
jo
cmovl
mov
cltd
movsl
lcall
add
push
push
mov
xorb
ljmp
in
mov
cwtl
push
cwtl
add
mov
imul
jne
cmp
push
xchg
pop
dec
je
call
mov
loop
fistpll
les
aaa
cltd
call
data16
push
dec
nop
sbb
jne
adc
inc
add
repnz
or
mov
cs
adc
iret
mov
mov
clc
mov
adc
or
mov
and
or
icebp
push
fmull
adc
arpl
jmp
es
pop
cmpsl
add
jle
out
sbb
jns
mov
cmp
cmpsb
inc
fiaddl
mov
test
imul
push
or
testb
pushf
adc
fisubrl
push
push
jecxz
rcl
push
or
rol
mov
lds
loopne
or
shlb
mov
js
mov
addr16
xor
xchg
idiv
pop
xor
dec
and
fisubl
xor
lcall
les
pop
arpl
in
xchg
insb
loope
dec
cmp
mov
xchg
shr
shrd
lret
jns
test
pop
sub
jg
lock
insl
jl
into
divb
add
repnz
mov
fdivrl
sbb
add
inc
fnstsw
lds
jecxz
cs
lea
push
ficoms
lea
jb
test
sub
push
push
iret
fwait
jmp
nop
adc
and
pop
cmp
pushw
rcrl
dec
fldl
leave
hlt
lret
cmp
xor
push
sahf
sarl
dec
push
jg
loopne
cwtl
dec
popf
and
js
pop
push
pushf
dec
aad
loop
fadds
iret
sub
adc
mov
aad
push
rcr
push
mov
xlat
dec
loopne
rcll
stos
xchg
inc
jnp
outsb
leave
daa
cmp
or
xor
test
and
call
sub
lahf
mov
inc
daa
icebp
ss
dec
mov
cmc
mov
in
jno
pop
push
xor
test
mov
les
sbb
mov
xchg
sbb
nop
xlat
mov
xor
dec
xchg
mov
jmp
into
mov
inc
or
inc
add
inc
xor
imul
sub
jge
mov
push
dec
repz
fwait
mov
ja
jmp
outsb
fidivrl
xchg
or
push
mov
dec
lahf
lret
jle
dec
je
inc
xchg
es
pop
dec
push
dec
mov
out
pop
insl
lcall
mov
iret
mov
sti
test
mov
out
mov
das
mov
jp
jnp
and
jbe
jl
gs
mov
loop
xchg
push
pop
loopne
cli
xor
xor
js
je
xchg
sbbl
lods
mov
inc
push
xorl
xchg
arpl
jg
push
jo
jno
sar
mov
inc
jge
xchg
sbb
stos
jbe
loopne
pop
xor
jp
sub
add
data16
adc
mov
pop
push
adc
fcmovbe
jb
push
sbb
cmc
rorl
outsl
orl
lods
dec
inc
cmpsb
int
lret
xor
or
and
cmovl
arpl
xchg
sub
in
imul
mov
adc
jl
add
neg
inc
and
sub
jb
cmp
and
stos
jae
lret
loopne
popf
dec
andl
jno
xchg
mov
and
test
adc
pop
sarb
das
dec
mov
cli
faddp
and
pop
repnz
or
xlat
aas
sub
jge
in
push
adc
jge
loope
jmp
jbe
rcrb
lock
loop
jo
push
jno
lea
push
fbstp
out
mov
mov
and
jl
rorb
mov
adc
inc
sub
dec
cmpsb
cmp
mov
jecxz
test
outsl
popa
repz
stos
add
cmp
rcl
jge
cmp
adc
bound
jae
data16
pop
sub
xchg
push
jecxz
stos
jo
dec
mov
cs
daa
imul
push
push
scas
pop
imulb
bswap
lods
add
cmpsb
add
push
data16
outsb
dec
ss
lds
cmp
mov
loop
or
jno
cli
lret
ljmp
data16
lods
aam
xor
test
in
pop
sbb
rcll
xchg
and
mov
sbb
arpl
xchg
cli
xor
stc
push
ss
out
or
lahf
out
loope
into
popf
mov
scas
cmp
lock
bound
das
fstpl
inc
fdiv
testl
sub
push
popa
arpl
xchg
or
xchg
sbbb
ret
jno
mov
inc
fcos
jns
cmp
fwait
push
call
repnz
lcall
mov
cmp
sub
popa
xchg
or
jno
gs
jp
push
sub
aaa
dec
mov
mov
rclb
push
andl
sti
push
mov
aad
aas
mov
aad
jnp
frstor
inc
cs
or
or
dec
mov
lods
dec
pop
into
arpl
adc
aad
jae
fmull
adc
in
rorb
cld
pop
cmpsb
cs
sbb
neg
mov
filds
call
mov
push
clc
rclb
inc
sti
fistps
cld
sbb
iret
shr
pop
jg
and
in
arpl
sahf
stc
push
scas
xchg
fnstenv
scas
fistl
jecxz
xor
scas
push
mov
in
mov
jge
pop
sub
outsb
mov
loop
mov
jo
mov
sahf
insb
imul
jmp
adc
bnd
inc
cmp
adc
or
mov
sub
lret
cld
insb
das
outsl
lahf
mov
popf
or
fisttpl
mov
sub
jb
arpl
push
das
adc
sahf
enter
jge
lahf
fstpl
sub
call
sbb
es
in
push
mov
inc
dec
push
sub
fadd
xor
cmp
dec
fcmovne
mov
sub
arpl
jbe
lods
movsb
daa
test
psubusw
mov
jmp
and
lods
dec
test
cs
dec
mov
xor
mov
test
mov
inc
and
rcl
testb
orl
aas
es
cmp
aam
jle
jge
cwtl
das
xor
jb
xor
cmpl
nop
stc
outsb
fwait
push
daa
hlt
sub
sahf
fcomp
add
pop
dec
addr16
inc
rcrb
jae
xchg
cmp
in
cwtl
mov
orl
or
std
pop
lahf
or
and
cmp
imul
mov
inc
xor
and
int
mov
xchg
shll
mov
adc
les
or
mov
ret
sbb
and
xor
xchg
ljmp
inc
push
sub
aas
add
pop
in
and
xor
call
cltd
repnz
lahf
xchg
mov
add
bound
xor
mov
cmp
xor
in
jmp
push
ds
cmc
pop
mov
sub
mov
mov
fstl
iret
push
loop
imul
out
fdivp
orl
fldcw
pop
adc
add
dec
in
jmp
loopne
enter
scas
push
cmp
add
mov
lret
cmpsl
pusha
popf
xor
inc
pop
leave
sub
inc
fstpl
addb
lea
mov
push
ja
add
xchg
inc
and
scas
aaa
out
jge
inc
mov
mov
push
xchg
shlb
test
lcall
mov
movsb
lret
pop
fxch
pop
vmovntpd
enter
sbb
sub
adc
pop
sub
leave
js
inc
push
sub
dec
leave
or
in
or
push
hlt
lret
test
out
cmp
into
xchg
or
pop
fstpt
lret
das
filds
fisttps
cmpl
test
jmp
add
sub
pushf
push
xor
or
pushf
repz
aad
mov
inc
push
mov
jbe
in
insl
and
mov
nop
push
cmpsb
stc
rolb
cmp
mov
or
xor
scas
arpl
clc
jne
dec
jne
sub
inc
lcall
cmc
insl
sub
mov
mov
shll
pop
push
dec
out
adc
loope
inc
mov
dec
mov
mov
push
cmp
movsb
daa
mov
fdivrs
jo
cltd
or
cmpsl
mov
fidivrl
aam
insb
mov
ret
jo
nop
bound
inc
xor
mov
add
imul
cmp
or
xor
out
jmp
insl
pop
fisttpll
out
insb
sbb
add
xor
jb
inc
push
shrl
add
adc
xchg
push
mov
loop
inc
or
into
xor
mov
cmp
dec
jg
mov
cmp
pop
fstps
aad
test
or
mov
out
in
cmp
mov
adc
and
arpl
mov
rcrb
fisubrs
enter
les
fnsave
flds
imul
sbb
lret
mov
test
test
mov
out
dec
int3
mov
aad
sub
imul
add
sub
adc
loopne
sbb
xor
pop
clc
and
adc
inc
js
loopne
push
push
pop
jle
jge
cmp
sbb
loope
inc
cmp
cmp
mov
pop
imul
std
xchg
and
dec
jbe
xor
ss
inc
pop
test
push
inc
xchg
lods
jge
xchg
daa
lods
mov
jno
jecxz
aas
jmp
push
ss
loopne
outsl
push
mov
sbb
jg
outsb
fldl
adc
sub
push
pop
jno
push
ljmp
fpatan
in
cltd
call
repnz
pop
jo
movhlps
fstpl
inc
sti
mov
mov
push
or
addr16
xchg
mov
push
stos
popa
sbb
movsl
mov
scas
dec
sti
sti
push
loop
std
mov
mov
fwait
jbe
mov
add
jno
jecxz
insb
cmp
or
mov
aas
loopne
push
data16
mov
pop
jl
mov
xchg
out
cmp
or
cmp
shr
aas
in
bound
cmp
push
ja
stc
stos
popl
cwtl
xor
stc
push
push
int3
fsubl
push
dec
sarl
aaa
scas
xorl
scas
mov
jno
mov
repnz
adc
imul
scas
or
dec
mov
test
add
jmp
shll
pop
cmpsb
call
adc
movsb
and
jecxz
outsl
out
jns
push
xacquire
cltd
push
mov
sbb
push
popf
call
xchg
mov
jg
push
out
xor
sub
out
clc
js
and
inc
stc
xchg
call
jne
mov
mov
pop
push
push
adc
outsl
inc
in
add
fcmovb
push
add
mov
das
mov
ja
adc
filds
aam
std
mov
inc
shl
push
outsb
jecxz
sahf
popf
out
outsb
cltd
loope
or
cmp
push
xchg
loop
sahf
arpl
and
sbb
in
loope
out
out
xor
cwtl
xor
push
jno
push
or
movsb
inc
leave
dec
and
inc
repnz
adc
xchg
inc
or
push
pushf
sub
add
push
adc
sub
das
call
push
mov
and
gs
pop
xchg
ficoml
mov
ja
fwait
cmp
xor
fsts
test
call
rorb
mov
fwait
sahf
pop
mov
add
ret
fld
and
jnp
cmp
popf
int
in
or
mov
mov
sub
add
ficoml
jae
imul
and
pop
xor
lea
sbbb
and
push
gs
sub
leave
xor
xor
in
mov
add
sbb
daa
push
out
into
mov
aad
xor
push
add
sbb
popa
jo
les
pop
mov
out
inc
sbb
jmp
inc
rcl
jae
push
punpcklwd
sti
addr16
and
push
pop
mov
pop
cmpsl
pop
mov
scas
adc
mov
fiaddl
mov
cld
nop
cmp
test
xor
xor
dec
sub
xor
dec
push
xchg
sub
jmp
sub
lds
sub
and
or
fbld
pop
mov
xor
shlb
dec
push
xchg
jmp
rorl
stc
int3
push
xchg
out
das
fcomip
iret
inc
das
jnp
ja
rol
int3
and
push
aas
xor
pop
add
fcom
cmp
fs
lds
lahf
mov
dec
push
xor
sbb
outsb
fsubrl
pop
pushf
fstl
xchg
gs
and
in
insb
test
or
and
rolb
dec
push
jb
pop
aad
xor
sub
inc
mov
adc
push
mov
sbb
call
jmp
imul
sub
jns
xchg
xor
int
rolb
or
aam
lods
cltd
fiaddl
pop
mov
insb
jp
lods
cmpsl
scas
lret
mov
jb
lcall
mov
dec
lods
inc
iret
mov
cmp
cwtl
sub
icebp
sbb
les
xor
pop
jb
dec
test
mov
in
xor
js
or
outsb
jno
xchg
jne
fadds
add
and
pop
inc
adc
shrl
imul
mov
or
mov
xchg
inc
jno
jl
test
xor
jnp
sbb
dec
pushf
testb
fimull
cwtl
inc
aam
push
mov
test
cmp
or
pop
test
dec
mov
xchg
icebp
jae
data16
mov
outsb
sub
iret
cwtl
fmull
push
clc
cmp
push
xor
addps
lret
aaa
pushf
js
jb
push
push
jno
aam
sti
cmp
or
inc
inc
pop
neg
mov
lret
mov
ljmp
sub
callw
dec
imul
push
sbb
xchg
mov
add
mov
pop
push
enter
popf
inc
pop
xchg
cmp
outsl
sti
dec
cmp
je
mov
testb
shlb
jmp
push
mov
lret
sarb
mov
jmp
jbe
push
shrb
lds
jnp
jno
adc
xlat
and
and
out
in
mov
stc
divb
stos
mov
aad
out
ds
dec
lds
cli
mov
xchg
sbb
mov
xchg
cs
mov
inc
and
fistpl
jmp
pop
xor
mov
pusha
scas
repz
scas
lcallw
mov
sbb
jmp
test
das
pop
dec
jecxz
stos
add
stos
das
xlat
xor
jo
inc
mov
mov
fbld
mov
test
fwait
adc
testl
out
cld
cmp
jg
inc
xchg
xchg
mov
iret
push
out
mov
sub
and
insl
pop
adc
sbb
in
jmp
xchg
xlat
aam
mov
cld
push
mov
stos
and
mov
es
inc
push
cli
ss
faddl
pop
add
mov
inc
stc
sub
jns
shrb
mov
jmp
in
push
divl
std
sbb
outsb
leave
mov
pop
jmp
xchg
mov
add
out
sbbb
xchg
xor
loope
out
jp
adc
stc
sub
roll
adc
add
pushf
push
imul
test
fwait
cmp
out
repz
dec
sbbl
js
int
push
out
dec
dec
xor
roll
jge
fistpll
insb
push
sub
leave
ret
xchg
sti
inc
leave
incb
mov
cmp
int3
out
inc
cmpsb
lock
int
add
stos
mov
xchg
fldl
loope
dec
sahf
cmp
jmp
dec
lods
sub
push
adc
push
mov
mov
test
inc
cli
test
ljmp
xor
mov
std
cld
pop
add
movsl
scas
pop
ret
jge
or
cs
mov
lret
pop
add
mov
jle
sahf
sub
dec
or
xor
aad
mov
xchg
mov
mov
repnz
rcr
inc
ja
jl
dec
xor
jb
and
sbb
mov
shll
imul
out
jecxz
rcll
aas
xchg
jne
pop
add
xchg
pop
or
cmp
pop
mov
push
int
mov
xor
cli
sub
aaa
sub
nop
mov
jecxz
jno
sub
cwtl
mov
lods
lret
pop
push
jg
test
or
or
jg
movsl
popa
imul
fimuls
es
call
mov
dec
dec
mov
push
cwtl
aad
xlat
sub
les
add
jmp
and
aad
mov
add
mov
fcompl
cld
stos
test
repz
dec
mov
popf
or
jne
test
sub
popa
dec
jmp
xor
pop
xor
xchg
mov
test
in
arpl
add
icebp
jmp
nop
xor
mov
dec
lahf
mov
xchg
mov
pushf
rcrl
mov
and
add
sbb
into
push
and
push
jae
push
scas
mov
dec
dec
xchg
jb
ror
pop
loopne
pop
leave
jb
and
dec
adc
mov
es
jle
ffree
jnp
push
adc
mov
cltd
xchg
int3
pop
outsl
movsl
lahf
sbb
mov
adc
rcll
sbb
pop
pop
cmp
push
mov
cwtl
add
mov
mov
out
push
outsl
push
cs
movsl
rol
inc
aas
cld
sar
jp
mov
jecxz
sub
pop
loope
dec
or
adc
lcall
dec
pop
cs
loop
ret
xor
lds
jns
rep
roll
negb
scas
outsl
ffreep
es
mov
pop
push
insl
arpl
lret
insl
pop
cltd
aam
std
leave
ljmp
push
inc
and
sbb
idiv
jo
and
jno
popl
xor
loopne
cmpsl
mov
sub
ss
adc
jle
lret
sub
mov
aam
adc
xchg
push
mov
jbe
and
das
pop
iret
add
in
ljmp
dec
outsl
mov
mov
sub
pusha
lea
or
and
lahf
ret
imul
or
add
and
jl
sub
dec
xchg
and
jg
lods
inc
les
mov
xchg
lahf
jne
push
lcall
popf
scas
xchg
mov
lret
mov
push
mov
dec
push
mov
mov
into
xor
dec
jae
mov
sub
imul
negl
movsl
sub
aaa
jmp
add
jmp
test
cmp
fldpi
enter
ljmp
adc
sbb
or
xchg
out
mov
pop
lds
or
out
mov
push
fidivl
fistl
jl
xchg
popa
fstp
mov
add
adc
xor
mov
xchg
fmull
xchg
sbb
shll
cmpsb
fs
mov
push
in
xor
add
xchg
lret
outsl
lock
mov
cmpsb
in
push
sbb
cmpsl
pop
jo
std
mov
mov
ds
xor
add
inc
mov
movsl
jle
mov
sub
sbb
cmp
inc
lock
std
repnz
cs
jge
mov
xor
cltd
pop
or
into
jno
pop
fwait
je
adc
jnp
mov
subl
pusha
fsubr
call
lea
test
cmp
in
jge
add
xchg
icebp
inc
inc
sti
nop
sub
in
mov
pop
cmp
or
pop
js
scas
jl
dec
jg
jecxz
pop
mov
out
jge
sub
add
movsl
stos
push
sbb
test
cltd
cmc
mov
jb
gs
sbb
je
and
sub
rorl
aaa
out
or
imul
lods
mov
insl
jbe
jp
jbe
jg
mov
clc
pop
mov
rcrb
addr16
ss
jl
out
ss
dec
or
and
into
int3
call
pop
dec
adc
sahf
or
and
xorb
mull
add
test
mov
hlt
rclb
scas
cmpsb
mov
push
ret
in
xor
clc
pop
aas
stos
sub
mov
call
lea
cmp
ficoms
dec
pushfw
mov
call
push
push
or
into
outsb
in
subb
sarl
push
push
icebp
inc
sbb
dec
jmp
arpl
xor
rcrb
or
adc
data16
jb
xchg
and
in
and
int3
imul
out
in
inc
jnp
or
push
mov
mov
pop
sub
ds
lret
jnp
push
sti
or
imul
test
dec
or
and
or
ret
mov
xchg
lahf
or
xor
inc
xchg
pop
repnz
inc
xor
insb
pop
dec
into
adc
or
push
sub
insl
movsl
popf
sbb
leave
pop
add
or
or
addr16
mov
clc
mov
dec
fwait
mov
repnz
adc
iret
cmc
dec
pop
pop
jno
test
push
pushf
mov
xor
xchg
cmp
xor
push
mov
or
dec
sbb
pop
jbe
sbb
into
pop
mov
ss
gs
jge
push
int3
mov
add
cwtl
dec
dec
in
mov
push
sarl
mov
adc
and
cmp
pusha
pop
nop
sbb
repz
inc
lret
adc
xchg
fisubl
jae
fs
pop
or
jns
aam
inc
push
and
pop
cmp
roll
arpl
adc
in
jns
jbe
jo
ret
popf
pop
std
cmp
adc
leave
push
scas
sub
and
add
mov
testl
sbb
adc
movzbl
jmp
outsb
or
and
inc
gs
inc
push
inc
adc
cmpb
xchg
xchg
xlat
icebp
andb
int3
outsb
sub
bound
hlt
rcl
iret
push
lahf
outsb
add
out
mov
testb
and
je
into
or
mov
add
in
pusha
push
aad
mov
mov
xor
sahf
adc
lahf
outsb
sub
xlat
inc
xchg
popa
dec
aad
cmp
enter
mov
or
outsl
ror
jg
adc
cs
daa
ret
call
je
adc
roll
nop
and
cld
mov
lea
clc
rcrb
and
test
push
test
and
adc
ret
les
loopne
xchg
xchg
test
cmpb
clc
in
jmp
stos
stos
pop
shrb
ja
repnz
insl
in
mov
sub
mov
cmp
ret
lea
pusha
mov
inc
inc
add
jge
sub
je
mov
and
jge
mov
fnsave
test
mov
in
jne
popa
push
in
sbb
cli
andl
mov
jmp
cmpsl
cli
pop
sarb
rcrl
andb
adc
sbb
jp
push
sbb
inc
mov
xor
leave
sub
lods
test
and
rep
xchg
pop
cmpsb
repnz
mov
or
cmp
outsl
insb
in
inc
adc
cmp
mov
pop
in
dec
push
addr16
lods
loope
lock
cmp
popa
xchg
aaa
outsb
mov
mov
out
sub
filds
fcmovbe
cmp
cmp
push
rclb
adc
inc
ss
ljmp
xchg
mov
and
lret
push
test
les
xor
mov
add
sub
fcompl
dec
insl
aam
scas
cltd
aad
push
adc
in
shrb
es
xlat
das
pop
mov
xlat
mov
pop
and
daa
xor
inc
lea
lahf
mov
or
aas
scas
fsubrs
inc
xor
mov
xchg
mov
cli
mov
jl
pop
leave
loopne
mov
sti
and
mov
adcb
shll
mov
push
xor
jbe
cmp
jmpw
add
sub
mov
and
xchg
addb
push
inc
add
sbb
xchg
xchg
mov
mov
sarl
into
inc
daa
sarb
mov
xchg
leave
sub
les
mov
xchg
aad
popf
pextrw
lcall
hlt
imulb
mov
add
sbb
push
or
hlt
mov
add
mov
mov
mov
push
cs
js
pop
push
lcall
in
push
dec
out
sbb
mov
ja
and
aam
cmpsl
xor
mov
adc
xchg
call
dec
inc
mov
ss
xchg
mov
rorl
xor
fdivrl
mov
mov
xor
add
pusha
aam
nop
addr16
or
mov
shll
leave
es
cmp
jl
jle
sub
sbb
jns
or
rorl
mov
inc
jo
pop
clc
sbb
sbb
sti
shll
bnd
and
mov
sbb
xor
sbb
adc
xor
jbe
ljmp
and
push
sbb
and
int
sahf
xor
xor
mov
cmc
icebp
scas
push
lods
add
adc
pusha
mov
push
xchg
mov
das
ror
sbb
cld
inc
cmpb
sbb
stos
xchg
in
push
pop
cmc
add
roll
pop
inc
test
dec
dec
mov
sbb
pop
addr16
push
jl
shl
mov
lods
add
mov
jnp
and
cmp
push
cmpsb
jle
and
imul
cmp
shlb
test
pop
stc
out
mov
test
scas
aas
ja
lds
add
jle
mov
int3
test
inc
add
cltd
jnp
mov
mov
setnp
mov
jmp
jne
aam
add
cli
repz
mov
jmp
mov
test
pop
test
shrl
cld
jecxz
js
jae
fwait
repz
hlt
ret
jle
dec
movsb
xor
xor
push
cmp
dec
push
sbb
or
push
imul
out
sbb
addr16
jmp
pushf
or
xchg
aas
lcall
mov
cmc
adcl
sahf
bnd
pop
jnp
lret
into
push
sahf
inc
cli
sbb
cmp
out
test
addr16
cmp
pop
cltd
xchg
mov
and
insl
add
mov
aam
jmp
jnp
pop
xchg
call
shl
rclb
in
enter
inc
cli
pop
jae
adc
jge
adc
mov
movsl
rdtsc
push
or
sbb
or
scas
jae
sub
mov
jae
jecxz
jnp
adc
inc
sub
jle
adcl
push
jg
ljmp
mov
in
out
jecxz
jns
or
mov
inc
mov
fwait
je
dec
cmc
mov
sub
jns
lods
jnp
mov
or
mov
xchg
out
andl
push
mov
repnz
add
leave
mov
dec
popa
mov
xor
push
lds
mov
pop
and
lcall
insb
ja
dec
out
pop
lret
daa
aas
aad
and
ficomps
push
iret
pop
pop
mov
sbb
jne
push
daa
in
and
aaa
in
add
sub
pop
fldt
jmp
inc
sub
outsb
dec
ja
inc
adc
lock
push
hlt
mov
jb
push
mov
sbb
mov
jge
sub
jb
fcomps
sub
sbb
push
and
xor
mov
pop
cmpsb
sahf
fwait
mov
jecxz
jae
xchg
in
cmp
movsl
jg
mov
faddp
icebp
iret
push
loope
pop
das
sbb
fidivs
xchg
cmp
in
push
ja
icebp
push
aas
and
rclb
jnp
or
out
jne
dec
jne
sub
push
js
test
mov
inc
pop
cmp
sahf
lret
adc
fistl
addr16
sbb
sahf
jne
bound
movsb
mov
or
add
push
mov
sub
popf
xchg
mov
imul
in
ja
cld
mov
push
repz
lock
adc
and
push
das
pop
cs
cmp
out
push
mov
sbb
jne
nop
inc
jmp
dec
add
and
push
jae
fcompl
or
and
jns
xor
mov
pop
xor
repnz
sbb
mov
shlb
dec
rcrl
xchg
xchg
in
pop
fbstp
popf
pop
lcall
or
stc
sub
popa
sub
cmp
test
cmpsl
stc
jb
js
adc
imul
arpl
push
mov
xchg
cli
or
sbb
cwtl
in
loope
imul
add
inc
mov
push
loopne
and
fnstsw
in
push
mov
flds
pop
cltd
les
adc
push
into
mov
shr
aad
ret
xchg
xlat
pop
jp
sub
jbe
dec
cwtl
pop
jge
jmp
xchg
cwtl
ficoml
iret
rcrl
push
sub
xchg
inc
pop
xor
push
ja
jae
incb
dec
sub
xor
mov
xchg
lods
pavgw
push
hlt
xchg
dec
and
imul
xchg
add
cltd
fadds
call
mov
jg
jmp
int
stos
jns
add
and
test
adc
fs
push
out
fisttpl
mov
dec
or
arpl
inc
jecxz
cmovnp
sbb
push
mov
jmp
aad
jae
ljmp
in
test
jge
push
sbb
je
mov
in
inc
add
sarb
pop
mov
push
adc
movsl
mov
jle
push
mov
push
sub
cld
icebp
or
mov
jmp
fildll
jb
adc
or
lcall
xchg
push
shrl
rcrb
std
xchg
lcall
call
mov
xchg
iret
and
sub
add
popf
fsubrs
rclb
insb
aas
stos
push
and
pop
inc
mov
shr
and
inc
mov
inc
jbe
or
rol
lods
ljmp
add
xor
cmpsl
lahf
inc
pop
xlat
sti
sub
push
pop
xchg
jmp
push
ds
mov
stc
adcl
push
adc
fistl
cmp
mov
ds
jne
mov
pop
dec
nop
int
imul
adc
mulb
mov
adc
pop
scas
mov
xchg
lock
int
and
mov
fcmove
sbb
aas
sbb
mov
mov
les
mov
and
test
imul
or
test
lret
outsl
popf
jmp
inc
inc
or
int3
adc
fcoms
les
cmp
push
and
dec
std
adcb
leave
jmp
xchg
repnz
fs
pushf
push
push
inc
jecxz
fsubrl
push
xor
mov
and
into
lret
iret
adc
add
outsl
loop
pop
mov
sub
mov
mov
mov
cmp
push
popa
lods
stc
xchg
pop
mov
fmul
repz
ja
sub
imul
mov
fnstenv
or
std
mov
incl
push
push
pop
call
imul
je
sub
jns
jns
push
es
pusha
aas
call
arpl
cmp
add
stc
fbld
sub
push
mov
test
and
lods
mov
jge
test
or
xchg
test
lods
ret
cmp
pop
test
aad
ret
ja
sub
insl
in
hlt
and
sbb
push
out
mov
adcb
mov
pushf
jmp
xor
jae
jg
dec
xchg
inc
jns
in
push
cld
movsl
in
sub
mov
test
xchg
jg
push
and
sub
loop
int3
into
insb
fnstcw
aad
adc
popa
lret
punpcklbw
loopne
scas
mov
stc
cmpsb
add
adc
mov
leave
bound
stc
fcmovne
jl
hlt
in
ljmp
in
cmp
ja
mull
and
in
sbb
jne
sbb
or
push
movsl
out
cmpxchg
loopne
adc
addr16
sub
xchg
ret
movsl
fimull
fsub
sub
pushf
int3
cwtl
cmp
enter
jmp
jae
cmp
add
cld
push
mov
pop
fdiv
stc
xchg
lret
lods
testb
sti
mov
mov
lds
gs
adc
or
mov
pop
dec
lea
xchg
call
aaa
fs
lret
mov
sbb
je,pn
out
push
test
nop
push
shl
pop
divb
push
mov
imull
push
sub
out
mov
adc
aas
cwtl
cmp
mov
fstl
or
adc
scas
imull
shrl
rorb
mov
das
loopne
stos
icebp
lods
shlb
cmp
je
and
push
xor
lods
lret
inc
push
xchg
xchg
jbe
xchg
mulb
out
cmpsl
arpl
pop
popf
jb
push
loop
ret
lods
test
test
and
inc
adc
adc
mov
push
iret
xor
daa
xchg
mov
ds
nop
mov
ljmp
cmp
test
mov
mov
mov
std
lret
rorl
cmc
dec
negl
push
mov
leave
push
out
shll
cli
sub
outsl
xor
fdivrs
mov
fwait
aas
cmc
clc
sbb
adc
out
imul
mov
sub
dec
add
sar
mov
rolb
cmpsl
push
dec
pop
xchg
jno
mov
adc
iret
or
cld
pop
lcall
mov
int
or
cmc
dec
cmp
adc
or
add
xor
jg
lahf
lea
jg
daa
cwtl
inc
jge
jae
loope
jecxz
and
das
inc
adc
mov
cli
mov
jg
ja
inc
jnp
in
idivb
aad
jns
lahf
pop
jo
mov
insl
xchg
mov
and
and
sub
xor
and
stos
test
sti
cli
push
movsl
or
aaa
ficomps
pop
cmpsl
xor
sub
movsl
pop
push
mov
in
mov
movsl
sarb
insb
js
xor
bound
ds
fisubs
inc
sub
in
mov
sbb
jle
outsl
mov
fldt
lcall
mov
repz
mov
in
xchg
xchg
sub
fwait
jns
cmp
out
mov
test
cmp
pop
adc
xor
fbstp
pop
sub
cmp
jp
leave
movl
mulb
inc
leave
movsl
lcall
push
mov
and
repz
in
daa
jge
inc
xchg
push
mov
sbb
xor
pop
shlb
lock
les
mov
movsl
xchg
enter
popa
adcb
outsl
iret
or
scas
push
pop
mov
dec
enter
loopne
mov
pop
mov
imul
pusha
repz
nop
cmp
add
stos
mov
cwtl
adc
scas
push
movsl
dec
int3
jno
pop
clc
mov
mov
les
out
dec
add
pop
sbb
rolb
add
addb
outsb
scas
mov
arpl
jl
mov
jge
mov
sub
mov
mov
mov
adc
call
jmp
out
jge
dec
addl
mov
lahf
jmp
sbb
inc
mov
iret
test
test
jae
sub
sbb
into
shll
imul
scas
or
sbb
sub
xor
out
jbe
dec
test
or
stc
mov
aad
mov
cmpsb
test
mov
ret
int
mov
sbb
sub
lahf
mov
cwtl
outsl
dec
or
mov
pop
js
or
or
in
inc
xchg
adc
ret
jne
add
sub
or
and
xlat
mov
xor
jp
es
repnz
pslld
popa
pop
adc
sub
icebp
hlt
ret
add
add
mov
adc
mov
sub
ret
dec
xor
testl
popa
ljmp
push
mov
stos
jle
xchg
sbb
cmp
es
pop
fxch
jp
dec
pop
ljmp
movsb
jmp
faddp
lock
loope
push
or
and
push
xchg
shll
dec
mov
or
inc
mov
xlat
aas
daa
mov
mov
add
cltd
loop
pop
les
push
movsb
jge
ret
sbb
out
mov
mov
pop
loope
jne
and
js
xchg
ljmp
mov
dec
xchg
xor
and
enter
std
ja
jae
xchg
clc
jae
mov
sbb
inc
add
stos
in
pop
adc
mov
daa
or
je
cmc
inc
cmpsb
jnp
negl
push
test
test
add
leave
jmp
loop
xor
sub
cmp
nop
xchg
or
adc
adc
jp
outsb
xchg
add
push
sbb
ss
push
sbb
mov
cltd
lds
jmp
push
aaa
rcrl
xlat
cltd
jnp
or
mov
adc
xchg
add
jmp
out
dec
cmp
inc
scas
adc
lret
jmp
adc
movsb
stos
adc
dec
imul
cmp
sahf
inc
lret
xchg
add
xor
pop
add
fdivl
push
cmpsl
jbe
repnz
sbb
pop
adc
pop
roll
hlt
mov
sub
xor
outsl
ret
inc
in
dec
push
imul
mov
ljmp
fdivl
xor
seto
ret
dec
mov
int
xchg
jo
ret
mov
pushf
adc
jge
int3
jno
and
xchg
dec
lea
popa
xchg
and
xchg
fdivrl
test
jl
push
pop
loopne
pusha
jge
jge
push
movsl
verw
lods
push
sbb
popf
mov
pushf
cltd
ret
popa
fildl
in
test
jle
mov
sub
cmp
shrb
or
es
mov
mov
sbb
fidivs
push
daa
adc
jno
les
jne
xchg
sbb
mov
in
out
inc
sub
mov
xor
mov
mov
in
pusha
pop
iret
jb
ljmp
js
push
mov
movsb
xor
xchg
ljmp
popf
mov
add
faddl
fsubrs
add
jp
xor
mov
popf
push
rcrl
mov
mov
mov
cli
stos
jecxz
xchg
shll
leave
or
xchg
dec
cltd
lahf
mov
out
js
mov
jo
fdivrs
or
imul
notb
push
push
cmp
mov
mov
mov
aad
or
testb
sbb
jg
imul
pop
or
xor
sbbl
sub
adc
jae
mov
lds
and
repnz
push
adc
jg
mov
shl
lods
insb
rcl
mov
int
repnz
add
mov
sub
jo
fsts
mov
fisttpll
mov
pop
data16
aas
sbb
mov
push
adc
cmp
rolb
ljmp
daa
lock
lods
adc
scas
lds
lods
sub
lods
leave
js
mov
inc
inc
mov
sbb
cld
inc
gs
sub
or
sti
out
add
in
jmp
dec
fcompl
fwait
negl
or
push
dec
xor
in
adc
lock
adc
push
fldcw
in
jmpw
push
jb
push
lds
add
in
aad
pop
jge
dec
jb
in
enter
std
out
or
sbb
lock
sub
pop
or
dec
sub
pop
pop
jle
ss
sbb
xor
data16
mov
js
arpl
xchg
xor
mov
mov
in
enter
fwait
sarl
call
and
xchg
dec
mov
aaa
jle
loopne
sub
jno
shll
xor
repnz
adc
inc
inc
inc
jne
or
adc
cmp
cmc
adc
sbb
xor
in
mov
push
xor
xorb
lcall
add
ret
mov
and
std
in
xor
or
mov
fidivrl
out
add
mov
or
push
cwtl
sbb
cli
loope
push
mov
mov
inc
adc
faddl
out
add
mulb
inc
sub
aam
lcall
cwtl
ficompl
ss
pusha
push
dec
pop
cmpl
inc
fstl
adc
add
sti
xor
mov
mov
hlt
sub
lods
out
xor
inc
or
sub
mov
mov
push
lods
mov
jmp
inc
xchg
push
lea
add
stos
dec
push
enter
sub
jmp
daa
aam
mov
in
hlt
add
sbb
cmp
clc
fcmovbe
daa
bnd
mov
xor
pop
mov
popa
faddp
jl
jb
sti
dec
hlt
insb
loop
xchg
stos
cmp
cmpsl
jl
jl
xorl
enter
inc
pusha
push
mov
sub
inc
push
push
push
cs
js
or
call
sarl
test
lcall
mov
mov
sub
dec
xchg
je
sub
cltd
and
pusha
fsubrs
mov
insb
cmpb
xor
mov
xchg
pop
add
xorl
cs
fsubp
mov
insb
fmul
int
cltd
mov
aam
lea
or
aaa
sarl
adc
int
mov
cld
fldl
mov
cltd
pop
addr16
jb
je
lods
sub
push
dec
xchg
popf
inc
decb
dec
mov
pop
loopne
hlt
sti
pop
dec
fcoml
lahf
ds
gs
sahf
arpl
dec
cmp
inc
push
adc
aam
or
mov
pop
loopne
out
mov
jno
ret
inc
add
adc
jnp
adc
and
dec
mov
xor
ret
mov
jg
in
mov
jae
cs
inc
fbld
mull
mov
xchg
mov
or
dec
jo
lahf
dec
int
push
sub
jmp
cmpsl
pop
sbb
clc
cmpsb
cmpsl
pop
movsb
jae
push
outsb
movsb
cs
pop
cmc
mov
xchg
xor
rcrl
enter
aam
sub
push
int
ret
lahf
mov
push
pop
add
cli
fwait
nop
or
in
dec
bound
cmp
xchg
cltd
or
mov
pop
jae
inc
mov
ss
xchg
repnz
pop
popa
add
in
out
daa
mov
jnp
stos
mov
iret
shrl
das
stos
or
or
lock
in
ficomps
aad
and
cli
fs
sbb
xchg
fs
or
dec
fdivl
add
or
ror
dec
imul
fs
xchg
cmp
mov
cmp
pop
outsl
aas
mov
je
inc
sbb
call
nop
leave
scas
test
out
fdivrl
xchg
xor
mov
sahf
jge
cmp
cmp
pop
adc
xchg
imul
sbb
nop
outsl
and
mov
mov
jmp
push
aas
push
repz
aad
repnz
inc
inc
lds
fbld
fnstsw
cmp
popa
fisubrl
je
or
pop
iret
or
push
mov
popf
sarl
xor
inc
pushl
out
testl
pop
sub
pop
aaa
pop
pusha
stos
sub
lods
rcrb
jmp
rclb
in
mov
cmp
add
arpl
std
push
mov
and
pop
insl
push
leave
add
roll
push
sbbl
sahf
fisubs
jg
mov
repnz
outsb
in
dec
lcall
outsb
les
cmc
jae
mov
int3
inc
fnstcw
addl
xchg
adc
mov
cli
cmpb
push
sub
adc
in
popf
mov
inc
jl
fcmovbe
leave
movsl
adc
popa
fnstcw
pop
or
jne
inc
lahf
in
lods
mov
mov
mov
jecxz
lods
mov
les
sarb
stc
mov
mov
cs
test
in
push
scas
lahf
imul
sub
pop
sub
mov
lds
add
in
outsb
sbb
jno
push
or
or
les
cmp
dec
sbbl
clc
cmp
xchg
adc
data16
cmp
ss
out
mov
add
iret
mov
adc
pop
lea
rcrl
lds
adc
lret
push
xchg
xlat
inc
xchg
loopne
adc
adc
pop
scas
cli
sub
fidivrs
push
mov
loop
out
xor
dec
stos
pop
sbb
testl
xor
aam
and
bound
shl
inc
shll
xlat
mov
sbb
pop
or
stos
daa
in
daa
divb
mov
repnz
xchg
push
cld
loop
fildl
adc
sti
lret
sub
ss
pop
aas
aam
fst
in
jb
or
not
mov
or
add
outsl
or
fs
out
push
cmp
mov
dec
test
fnstenv
cli
test
outsb
jge
test
cltd
mov
insl
push
ror
mov
adc
xchg
insb
popa
mov
xchg
push
loopne
or
movsb
xchg
xchg
adc
into
out
fcmovnu
popf
mov
xor
and
adc
sahf
push
icebp
inc
mov
pop
movsl
loop
jecxz
sarl
sbb
dec
xor
stos
lock
cmp
mov
pop
ss
inc
push
xor
stos
sti
mov
rorl
push
mov
ss
ljmp
xchg
rcr
insb
out
mov
fistpl
push
push
daa
mov
mov
cmp
icebp
add
scas
inc
xor
sub
add
call
out
dec
mov
sub
fisubrl
jns
xchg
jnp
aad
rorl
add
or
mov
das
and
push
sub
aad
push
call
jnp
mov
mov
fisubrs
test
jmp
mov
xchg
shll
add
lods
movsb
lcall
or
pop
inc
push
rcl
aam
cmp
dec
outsb
xchg
ja
add
mov
bound
arpl
test
inc
ja
lds
stos
mov
outsb
movsb
int
and
dec
or
mov
clc
cmp
gs
xchg
cmpsb
inc
das
mov
sub
push
ret
push
inc
in
fimuls
xchg
out
pop
aam
mov
push
ret
add
fiadds
hlt
jmp
xor
and
sbb
xchg
mov
test
inc
push
xchg
outsb
xchg
je
pop
stc
faddl
call
popf
repz
inc
xor
daa
or
lahf
pop
inc
push
popa
mov
popa
jb
gs
adc
sub
imul
mov
aas
in
int3
xchg
mov
lea
xchg
adc
outsl
fnsave
dec
mov
lock
mov
lea
daa
daa
push
and
push
aaa
nop
adc
subl
adc
mov
dec
ficomps
sahf
shll
push
dec
cs
push
push
ret
xchg
mov
lcall
loope
ficoms
inc
or
psrlq
movsb
pop
arpl
aam
fsubl
imul
dec
inc
pop
test
pop
rolb
mov
pop
xchg
or
add
mov
sbb
push
das
jno
adc
roll
cmp
xlat
lea
dec
fbld
movb
or
test
scas
lods
in
mov
cmp
add
push
xchg
into
out
bound
dec
push
shll
mov
jo
sbb
fstl
push
cli
cld
mov
adc
out
shlb
jp
test
call
mov
or
lret
sub
push
cwtl
gs
inc
outsb
cmp
xchg
fsubrs
lcall
cmp
and
cli
lea
ljmp
es
in
fwait
cmp
inc
sub
jge
or
jp
jne
ret
and
divl
push
and
sbb
arpl
roll
mov
and
inc
xor
scas
adc
stos
xchg
cs
xor
fcompl
cli
adc
sub
aas
push
negl
push
setge
push
sti
orl
sub
xlat
sub
jb
cmpb
addl
int
push
mov
dec
divl
call
xor
call
or
mov
xchg
adc
shrl
mov
and
push
in
out
mov
fcompl
outsl
push
push
push
fists
lret
pop
inc
jecxz
or
pop
ss
or
xor
enter
push
jge
mov
and
cmp
in
cmpsb
sbb
dec
out
or
arpl
jae
dec
cli
cmp
adc
loopne
cmp
mov
out
xchg
dec
or
movsl
mov
mov
loope
rcr
mov
loope
mov
enter
xorl
stos
push
jno
orb
dec
adc
adc
and
cmp
pop
loop
adc
cmp
and
xchg
cli
neg
fwait
add
mov
ret
insl
jae
bound
or
lods
mov
push
jb
mov
sbb
mov
jl
jbe
mov
imul
out
xor
nop
mov
push
into
int3
rcrb
cld
outsb
xchg
data16
mov
test
sti
xchg
or
out
fdivrp
aaa
push
cmc
lods
pop
xchg
xor
sbb
ret
dec
cld
mov
sbb
scas
mov
mov
imul
push
sti
jb
mov
enter
mov
testl
add
jae
lret
dec
xor
sbb
jns
dec
dec
sub
push
mov
fucomip
stos
sub
mov
inc
daa
or
push
dec
outsb
pop
int3
sbbb
aas
xor
movsl
sbb
jecxz
ds
arpl
cmp
out
jns
jno
lret
mov
iret
cwtl
or
sti
push
mov
loope
stos
mov
xor
std
add
scas
ljmp
mov
jecxz
icebp
and
lret
aas
pop
cmp
push
sahf
loope
mov
add
loope
imul
mov
add
sub
pop
jge
jecxz
mov
mov
repz
movsb
cltd
sub
aad
mov
dec
cmp
cmp
push
mov
cmc
sub
push
loope
out
pop
movsb
lock
dec
aad
insl
mov
popa
dec
mov
jmp
pop
arpl
mov
pop
aad
and
and
jmp
pop
jp
and
or
add
rcrl
aam
in
rorb
fnstcw
shlb
inc
cmp
xor
je
or
fmull
in
add
aam
cmc
lret
xchg
cmpsb
jbe
jmp
test
outsl
loopne
mov
adc
call
test
sbb
pop
xchg
popf
enter
and
xor
push
daa
dec
pop
jbe
lock
adc
pushf
aad
insl
psrlq
les
xchg
std
insb
popl
int
push
ljmp
js
push
test
cwtl
or
mov
testl
popa
inc
xchg
or
aam
or
cmp
push
cmp
mov
pop
rep
add
fadds
sub
idiv
pop
mov
iret
jns
add
jb
xlat
xchg
mov
mov
test
push
ds
sarb
repz
push
jns
outsb
repz
pusha
imul
xor
pusha
movsl
in
inc
fucomip
aaa
mov
cli
xchg
fimull
in
push
or
jecxz
bound
mov
mov
dec
mov
add
cmp
inc
mov
addr16
lods
mov
arpl
test
push
mov
adc
in
shrb
movsb
leave
movsl
sbb
inc
or
add
jbe
sbb
stos
or
pop
test
int
dec
jmp
js
mov
pop
jae
arpl
fistpll
pusha
nop
pop
cwtl
cmpsb
into
mov
push
into
sub
loop
out
or
mov
mov
jnp
int
xor
pop
fwait
mov
pusha
push
and
aam
ja
std
jmp
out
sbb
and
push
les
icebp
xor
pop
jp
jmp
ja
movsb
push
test
xor
lock
or
inc
insb
bound
loope
es
call
push
addr16
sahf
xor
dec
into
jg
mov
jo
in
sbb
add
pop
dec
in
mov
xchg
fisttpl
in
or
xchg
mov
sbb
sbb
sbb
or
push
mov
mov
hlt
cmc
aad
cs
insb
int
test
or
clc
mov
push
je
pop
xor
xchg
sub
push
dec
out
xchg
in
shrl
scas
out
aam
lret
mov
cmp
pop
xchg
push
leave
int
cwtl
inc
cmpsl
imul
xchg
dec
push
into
fstps
into
xor
mov
aaa
aas
outsl
lock
shll
mov
cmp
cs
insl
cmpsb
sahf
cmc
aaa
adc
nop
test
sub
punpckhdq
fs
push
test
jp
aaa
lahf
cmc
clc
and
mov
xor
test
mov
es
xchg
popf
adc
sti
jnp
idivl
lods
imul
inc
mov
pop
or
sti
in
popf
add
lods
enter
ljmp
xor
dec
popf
sub
sti
sub
shrb
xchg
jg
cmpsb
ljmp
jecxz
mov
shll
loop
jbe
sbb
test
inc
jno
jo
dec
iret
pop
loope
enter
test
pop
je
sub
lock
dec
add
add
and
repz
add
mov
pop
int3
sub
stos
mov
sbb
cmpsl
mov
inc
adc
nop
mov
ficompl
iret
or
repz
adc
cmp
shlb
jge
in
sbb
jno
test
insb
iret
data16
xchg
lock
cli
movsl
loope
xchg
sub
sbb
push
aad
add
lods
jb
sbb
movsl
pop
jne
pop
ljmp
jno
in
and
pop
dec
leave
add
mov
and
inc
mov
out
jbe
movsl
mov
pop
cmpsl
lcall
jp
jo
daa
add
and
es
out
into
cli
xor
add
or
inc
xchg
jnp
aad
jge
mov
mov
adc
rcrb
add
iret
sub
mov
adc
clc
or
xchg
jns
inc
cwtl
outsb
adc
inc
bound
pop
imul
dec
adc
scas
cmp
enter
pop
in
lcall
mov
dec
scas
push
pushf
xchg
mov
int3
scas
in
add
mov
cs
mov
push
in
mov
sub
in
popa
jg
outsl
and
out
xor
mov
cmp
outsl
push
push
imul
sahf
loope
into
frstor
or
pop
scas
ret
sbb
mov
sarb
sbb
test
mov
xlat
push
imul
xchg
cltd
lahf
mov
mov
in
roll
push
call
fisttps
adc
adc
mov
xchg
call
loopne
dec
cwtl
mov
and
adc
lcall
sarl
jge
and
mov
push
cmpsb
sahf
nop
ds
lea
std
aad
and
mov
ss
jge
aas
rcll
push
sbb
fs
cld
mov
lahf
aad
xchg
jecxz
cmpb
xor
add
in
sub
ret
push
mov
dec
xlat
inc
pop
sub
xchg
xchg
inc
sub
adc
sbb
xor
lahf
inc
push
xchg
xchg
adc
jmp
sahf
out
cmc
negl
pop
jle
andl
xchg
push
popa
in
sub
push
loopne
mov
pop
sbb
pop
sub
jmp
popa
rol
int
sahf
xor
jl
cmp
pop
and
outsl
in
aam
lahf
stos
std
xchg
das
xchg
cmp
decb
push
in
pop
test
dec
pop
dec
sti
leave
push
or
ret
loope
ret
out
cmp
cmp
lret
dec
mov
test
cmp
cmp
push
cmp
dec
ljmp
sub
loop
sub
adc
daa
adc
mov
lcall
adc
sbb
sub
xchg
cmp
xor
and
inc
xor
arpl
subb
pop
out
pop
sub
xor
xchg
mov
xchg
pop
cli
fildl
leave
int3
pop
addl
fisubs
cmp
lods
inc
sahf
adc
mov
fidivs
pop
ss
loopne
hlt
loopne
jnp
and
xchg
adc
ficomps
jo
dec
dec
cltd
gs
sub
in
sub
ja
xor
or
aam
or
cld
push
push
cmp
jo
inc
lock
mov
cmpsb
jp
jmp
not
jecxz
mov
pop
pop
jle
cmp
mov
ret
scas
pop
mov
lret
sahf
xchg
pop
lret
lret
popa
lahf
int3
roll
cld
loop
and
jo
pop
lds
and
aad
push
mov
add
pop
mov
xchg
call
inc
outsl
xchg
lods
test
cltd
mov
push
das
sbb
sbb
enter
cltd
inc
mov
frstor
mov
pushf
int3
sub
lahf
pop
jb
scas
mov
nop
mov
dec
jecxz
jmp
adc
dec
lods
cmp
sbb
mov
mov
sub
pop
inc
loope
aam
mov
dec
scas
sbb
fnsave
and
setns
cmp
rorb
and
xchg
lods
stos
inc
xchg
xchg
mov
sub
xchg
mov
in
fnstcw
pop
outsb
fnstcw
pop
testb
pop
sub
dec
sub
mov
sbb
aas
adc
adc
aaa
xor
mov
cmp
shll
add
mov
inc
mov
xchg
dec
test
add
mov
mov
push
xchg
rcrb
sbbb
notl
shll
lcall
test
mov
mov
push
loope
xor
js
imul
mov
push
lds
dec
push
ljmp
xor
xlat
aaa
inc
and
fs
outsb
pusha
enter
in
xor
iret
xor
mov
movsl
push
nop
das
arpl
pop
outsl
push
cltd
add
push
pop
lret
aaa
mov
addr16
test
std
push
inc
mull
jne
imul
out
hlt
pushf
scas
int3
fnsave
or
jo
lods
and
pop
mov
inc
data16
push
mov
and
or
sbb
push
sbb
push
fwait
lds
jp
sub
es
xor
xor
add
jb
pop
arpl
stos
in
cs
dec
or
and
fldpi
push
cmp
insb
sub
mov
adc
sti
rolb
rorl
pop
dec
rol
js
daa
pop
mov
aas
jnp
stos
iret
mov
cli
mov
negb
dec
dec
call
xor
sub
push
cmp
rclb
sub
mov
pop
mov
cmpsb
jp
in
shlb
in
inc
andb
xchg
sub
sbb
aaa
lods
add
adc
in
scas
mov
add
and
push
push
andb
xlat
add
nop
jnp
sub
dec
cmp
jns
sbb
push
lods
adc
mov
adc
dec
std
add
ret
jo
imul
gs
inc
fwait
adcl
push
jmp
cmp
test
xchg
nop
jns
xor
add
dec
addr16
jnp
cmpsl
scas
jae
pusha
xchg
push
pop
mov
js
mov
fs
xor
aas
pop
popa
std
ljmp
mov
cli
push
jp
xchg
cmp
loope
test
sbb
pop
sub
lcall
push
sbb
push
add
lds
std
add
adc
arpl
dec
cmpsb
add
push
xor
cmp
mov
sbb
fstps
in
cs
shrl
mov
lcall
lds
mov
scas
pop
imul
jecxz
push
fcoml
mov
inc
test
mov
adc
and
fsubrs
cltd
cmp
or
rolb
lock
test
jne
lods
pop
inc
dec
loop
int
push
movsb
into
or
sbb
inc
fstpl
icebp
int3
aad
leave
popa
pusha
adc
sbbl
sbb
pop
outsl
add
pop
mov
nop
pusha
cmc
test
arpl
sbb
shlb
fisubrl
inc
jno
ds
bound
outsl
jmp
push
push
xchg
push
fisttpll
dec
push
dec
fimull
in
shr
xchg
int
pop
cmpsl
repz
ja
popf
jae
jno
or
xor
mov
out
das
xchg
push
sub
dec
inc
lret
and
jo
lods
mov
add
xchg
pop
pop
adc
in
mov
inc
inc
mov
inc
sti
pop
fisubrl
test
xlat
push
rorb
cmp
dec
lahf
or
pop
and
jae
mov
insl
mov
adc
pop
addb
ret
call
or
js,pt
mov
movsb
jno
dec
stos
push
flds
or
inc
jnp
pop
sub
adc
or
or
pop
push
aas
sub
mov
outsb
mov
decb
lods
xor
insb
in
aad
pop
dec
fxch
clc
xchg
dec
dec
push
adc
lcall
test
fwait
cmpb
and
cmp
xchg
and
mov
cmp
insl
ljmp
out
or
outsb
or
push
test
xchg
or
sbb
sub
inc
dec
daa
xor
iret
inc
inc
and
pop
dec
rcrl
stc
lcall
adc
cli
pop
jnp
int3
sub
hlt
gs
scas
jg
sub
ljmp
xor
xor
jle
pop
cwtl
in
call
lock
mov
bound
filds
and
fcoml
sub
adc
sti
mov
jbe
dec
mov
fwait
cmp
les
cltd
in
mov
cmc
lea
out
insb
test
and
lret
outsl
pop
jb
ficoms
imul
cwtl
iret
pusha
lods
pop
adc
out
xchg
enter
int
xchg
stc
jb
pop
pop
fnstcw
fs
mov
push
inc
pop
push
push
push
sub
push
sbb
xor
push
jp
pop
test
adc
ljmp
jle
mov
mov
movsl
jg
adc
dec
pop
rolb
pop
out
cld
cmpsl
clc
push
in
hlt
stos
ficoms
push
hlt
int3
and
push
mov
in
lcall
mov
movsl
add
pushf
loop
push
jns
in
add
loop
push
js
sub
inc
insl
add
pop
jp
push
jae
lock
movsb
dec
jnp
inc
jb
jmp
in
dec
cld
fcoms
cmpsl
scas
xchg
pop
imul
jno
insb
mov
loope
adc
push
cmp
dec
or
mov
xchg
pushf
js
cmc
and
lahf
cmp
jecxz
push
jb
popa
lahf
cmp
pop
or
aaa
mov
jp
cltd
sub
mov
xchg
push
js
add
xchg
adc
jmp
sub
xchg
cwtl
dec
or
cmp
dec
mov
mov
mov
movl
xlat
xor
outsl
push
xorl
sbb
mov
out
push
cs
or
mov
jno
movsl
scas
fwait
adc
fsubs
test
sbb
xor
test
sti
stos
mov
pop
xchg
cli
or
in
add
mov
loop
dec
push
jbe
ret
xchg
adc
jl
cmp
es
xor
inc
xor
adc
test
sub
and
xchg
xor
push
and
cmpl
shll
int3
jecxz
adc
xor
mov
and
imulb
das
test
mov
jo
lret
ss
enter
inc
ret
pop
xchg
mov
popa
out
loop
pop
pop
addr16
dec
xchg
mov
rclb
loopne
cmpsl
mov
popa
shll
in
push
jno
fcompl
aaa
xor
push
mov
jns
clc
nop
ret
jg
jmp
fs
sbb
sbb
out
sub
enter
sbb
fstpl
fdivs
mov
leave
inc
mov
add
sbb
mov
dec
adcl
and
push
mov
sbb
add
pop
jecxz
mov
outsl
inc
fidivs
mov
mov
xchg
mov
xor
adc
and
pusha
pop
pushf
inc
iret
adc
mov
push
jbe
std
test
jo
pop
sbb
subb
fldl
xor
data16
nop
cli
dec
inc
mov
or
push
aad
insl
cmc
ret
cmpsl
test
jo
add
or
lret
cmpl
and
es
push
push
inc
mov
sti
inc
jle
or
iret
popa
mov
scas
cmpsb
xor
insl
arpl
and
movswl
in
iret
adc
mov
fidivl
sbb
dec
popf
dec
mov
aaa
xchg
subl
push
xchg
sub
imul
mov
mov
sahf
cmp
imul
pop
testb
fildll
arpl
mov
mov
cmp
stos
sbb
add
lea
iret
and
or
jle
popa
imul
xchg
insb
mov
fisttpll
or
mov
adc
out
jp
add
cmp
inc
xchg
lret
test
or
xchg
cltd
add
xchg
xchg
mov
jns
push
mov
lods
movsl
dec
shlb
and
cmp
jmp
dec
jl
cmp
ljmp
cmp
inc
aaa
adc
int3
lea
addb
push
pop
mov
xchg
in
or
fadds
repnz
jb
push
sbb
rcrl
repz
pop
out
sub
cs
int3
cmp
out
xor
les
enter
out
popf
push
out
dec
jae
sbb
cs
jns
arpl
popa
xlat
push
sbb
mov
int3
andl
xor
sub
sub
lods
fmulp
dec
idivl
daa
andl
into
addl
sbb
hlt
mov
cli
xchg
xchg
add
sub
ret
push
fildll
out
cmpsb
xchg
std
dec
push
gs
mov
fadd
xchg
push
enter
fcoms
sub
mov
repnz
or
xchg
les
add
cmpsb
ret
dec
mov
inc
push
bound
outsb
mov
sbb
fistl
fdivl
std
mov
cwtl
out
xchg
dec
and
or
hlt
decl
mov
mov
sbb
cmpsl
jl
lock
push
mov
flds
jecxz
lahf
mov
in
push
loopne
and
xchg
leave
in
into
repnz
rcll
cmp
pop
push
std
push
mov
daa
sub
inc
pop
stc
lds
or
fninit
or
adc
or
test
adc
repz
insb
mov
jl
xchg
lcall
jmp
into
outsl
repz
sub
hlt
pop
pushf
js
mov
mov
xchg
mov
xchg
pushf
scas
mov
inc
testb
adc
orb
sbb
addr16
insb
dec
je
ficompl
cwtl
shll
in
and
or
xlat
push
negb
imul
in
aaa
call
aaa
hlt
push
jbe
add
add
fisubl
ja
enter
sbb
je
xchg
xor
cld
imul
mov
in
fs
aad
cmpl
rolb
std
out
inc
mov
sbb
int3
jb
or
je
mov
cltd
movl
mov
nop
pop
stc
mov
fmull
dec
xor
mov
ret
adc
pcmpgtw
inc
adc
fs
leave
push
cmp
dec
lods
ds
outsb
inc
add
pop
repz
add
push
lea
mov
pop
sbb
jl
dec
xchg
dec
ss
inc
enter
xchg
and
cmp
push
mov
js
xchg
dec
push
arpl
popl
int
nop
push
push
cld
nop
frstor
stc
stos
and
divl
jmp
mov
mov
pop
lret
pusha
lods
jmp
or
pop
in
xchg
std
mov
mov
push
dec
lea
sbb
daa
mov
loope
pop
pop
loopne
add
in
cmpsb
jae
pop
mov
cmpsb
daa
subb
mov
cld
enter
adc
dec
int
mov
or
stos
in
div
dec
aaa
popa
scas
dec
adc
mov
mov
jnp
in
inc
mov
mov
pop
dec
clc
mov
stc
cmpsl
mov
mov
mov
jnp
loop
push
rolb
cs
mov
rcrb
js
xor
jl
lds
xor
imul
aad
std
xor
scas
mov
and
int3
sub
lret
fdivrl
cmp
std
js
push
inc
add
mov
and
cmp
repnz
adc
or
add
gs
test
xor
sbb
mov
sub
jne
cmpsl
mov
xchg
leave
lret
aad
adc
jmp
mov
cmc
mov
xor
outsb
add
mov
ja
ret
int3
fwait
inc
test
or
divb
pushf
fldcw
icebp
cmp
jmp
fiadds
push
shrl
xor
sbb
cmp
pushf
mov
push
lds
add
mov
fs
iret
or
or
xor
dec
and
data16
and
cltd
les
mov
dec
pop
fsts
sub
sbb
mov
cld
hlt
sub
aam
cmp
setae
mov
or
mov
subl
lods
mov
mov
pushf
xchg
call
mov
mov
js
mov
add
daa
xchg
jecxz
push
inc
add
cs
dec
adc
out
jle
xchg
xor
dec
cmp
ror
movsl
pop
xor
icebp
ret
xchg
and
and
inc
jae
adc
dec
xchg
das
push
rcr
sahf
mov
fisttps
ss
jnp
xchg
push
xchg
xlat
fcmovbe
sbb
mov
push
aam
mov
rsm
ret
shl
das
and
aas
in
cmp
or
addr16
and
xor
loope
xor
pop
jmp
and
bound
clc
inc
rorb
aas
fnstcw
sub
sar
dec
or
cmp
mov
xlat
mov
cmp
nop
mov
jno
adc
pusha
push
ret
xor
inc
daa
add
lock
pop
sarl
and
pop
jmp
jge
into
jno
shrl
xor
sahf
mov
and
ss
lcall
xchg
call
push
xlat
xor
movsl
pop
mov
enter
fucomip
leave
pusha
sahf
mov
ds
xor
dec
jge
push
imul
jmp
fsubrl
add
sub
jmp
std
sub
xchg
sub
scas
fisttps
jecxz
test
aaa
repnz
movsl
lret
stc
cmp
and
push
in
lcall
xchg
mov
or
pop
jne
add
ja
xor
mov
inc
fwait
data16
fisttpll
adc
mov
sbb
cmpsb
fcom
imul
push
cld
subb
cs
imull
push
xchg
xor
out
shrl
pusha
daa
scas
xchg
fisttps
stos
lock
andb
jo
sarl
mov
xchg
jne
pop
mov
test
es
aaa
cli
push
subb
sbb
paddsb
cmp
cmc
pusha
popa
jne
repnz
jns
gs
shrb
push
pop
cld
inc
in
jae
push
movsl
sub
dec
dec
jmp
inc
int3
aam
mov
xor
inc
lret
xchg
bound
jg
jbe
adc
mov
in
lds
outsb
add
mov
pop
out
jg
gs
pop
scas
xchg
mov
cmp
in
dec
fwait
or
cwtl
xchg
mov
dec
lahf
cld
lcall
fs
push
push
or
les
pop
dec
xlat
jbe
fidivs
inc
hlt
shlb
ljmp
or
push
mov
rclb
bound
pop
sub
mov
pop
subb
and
cmpb
inc
les
je
mov
xchg
xchg
and
ret
mov
sbb
sbb
addr16
je
push
call
sub
mov
inc
in
and
push
cwtl
outsb
and
dec
imul
adc
xor
and
push
cld
fcoms
fistps
adc
mov
sub
inc
pop
xchg
enter
jae
ljmp
scas
adc
mov
push
mov
bound
int3
or
xor
inc
sbb
mov
je
mov
and
pop
pop
mov
fs
repnz
das
push
mov
push
nop
addl
bnd
fwait
ljmp
jo
ss
andl
mov
mov
mov
flds
jne,pt
lods
jo
mov
adc
insl
stc
shll
repnz
mov
pop
adc
jg
cmpsb
outsb
ret
push
mov
xlat
popa
lods
fwait
out
pushf
out
cltd
fnstcw
xlat
in
fmulp
jno
mov
cmp
mov
rorb
out
and
jmp
rcl
ret
and
xor
cs
or
push
loop
add
xchg
mov
cmpsb
cmpsl
push
into
inc
jb
dec
adc
je
jge
lahf
aaa
mov
sbb
and
add
mov
lods
cmp
aaa
mov
jmp
out
xor
aam
mov
cld
in
adcb
clc
scas
jle
popf
jge
jp
pop
jns
mov
sti
cmpsb
inc
sbb
push
jp
hlt
in
popa
in
sub
sbb
or
xchg
insl
clc
jo
sbb
fisubrs
popf
push
xchg
in
push
jae
hlt
fs
pop
push
hlt
dec
call
out
nop
and
or
cmp
push
mov
sbb
dec
fdivrp
push
out
pop
daa
cmp
add
jae
push
mov
mov
add
push
dec
pop
mov
mov
rorb
or
cmp
mov
mov
push
mov
dec
add
inc
mov
outsl
std
leave
pop
lods
push
cltd
es
fstl
cmp
leave
sub
push
and
push
jb
push
cltd
subb
lds
dec
stc
inc
jbe
imul
es
stos
push
mov
xchg
dec
jae
insl
fcoms
int3
cmp
pop
mov
dec
xchg
xor
sub
inc
or
test
outsl
roll
pop
pushl
imul
in
in
mov
pop
jae
or
jns
es
xor
jmp
mov
dec
sbb
or
or
and
push
mov
arpl
xor
push
dec
dec
inc
sub
lret
mov
cli
fwait
mov
dec
jmp
lods
test
jecxz
or
cs
cs
mov
sub
sbb
repz
lds
jb
test
add
pusha
lea
imul
aad
inc
mov
in
add
daa
in
mov
push
cmp
pop
hlt
in
jb
mov
adc
pushf
sahf
pop
inc
pop
loop
andl
mov
mov
leave
push
out
push
mov
dec
inc
jecxz
jo
pop
push
test
adc
sub
sti
jne
test
call
sbb
mov
adc
mov
and
mov
jmp
push
test
fsubl
mov
push
push
jbe
cmpsl
int
sbb
data16
testl
pop
sub
mov
loope
dec
xor
std
push
inc
jne
push
les
dec
imull
push
clc
test
xlat
aas
push
mov
ret
and
lcall
jo
xor
inc
mov
jbe
out
loop
pop
pop
rcll
push
mov
add
mov
mov
pop
decl
stos
in
repnz
push
pop
jg
inc
ret
scas
sub
mov
call
mov
mov
adc
ficoml
std
xchg
test
outsl
jmp
roll
mov
in
jno
repnz
mov
in
shr
rcl
mov
push
or
jmp
into
push
pop
bnd
lret
lret
and
test
lods
in
out
cmp
ficompl
testl
add
inc
popf
mov
test
push
xor
outsb
and
dec
sbb
push
jge
dec
je
sbb
push
popa
aad
cwtl
pop
loope
pop
daa
dec
ss
into
inc
xchg
adc
xchg
mov
ret
cmp
xchg
adc
xchg
clc
add
dec
and
out
cmp
iret
adc
add
cld
fistps
push
in
xchg
ds
sub
icebp
leave
xchg
add
sub
cmpsl
jnp
xchg
xlat
mov
idiv
repnz
addr16
mov
push
push
jnp
aaa
gs
loopne
cmp
ja
shlb
xorl
es
leave
dec
or
movsl
push
hlt
hlt
mov
scas
dec
out
cmpsb
shr
adc
xor
lods
adc
and
lods
xchg
popa
xchg
int
out
iret
xchg
sub
mov
dec
mov
mov
sarl
xor
jle
dec
push
inc
shll
add
mov
jg
or
dec
jnp
push
cmp
jecxz
dec
insb
jle
or
cmp
inc
jno
aad
and
movsb
roll
je
push
arpl
movsl
sub
enter
adc
in
call
push
out
dec
push
call
inc
lods
das
aas
mov
insb
xchg
pop
jle
dec
sub
mov
or
xlat
sub
push
sub
jecxz
ja
pop
iret
cmpsb
imul
xor
and
in
sub
inc
jae
dec
mov
cmpsl
adc
pop
das
mov
jnp
inc
daa
push
scas
jae
mov
xchg
subl
mov
ljmp
cmp
mov
orl
push
outsl
arpl
sub
in
sbbb
das
in
pop
fisubl
loop
rolb
lock
in
lods
aam
pop
ret
xchg
push
sbb
add
pop
sbb
fsubp
decb
xchg
push
lods
pop
sub
cmp
jmp
xor
jo
sub
aad
pop
jmp
mov
fwait
addr16
xchg
mov
pop
hlt
data16
pop
lock
daa
xlat
shrb
push
fimuls
jmp
lea
fwait
and
sbb
inc
or
divl
sub
out
sub
dec
mov
icebp
adc
data16
sub
cmp
pop
in
push
lea
test
stos
xchg
frstor
sbb
pop
jg
sub
arpl
arpl
xchg
jb
dec
mov
add
fwait
scas
sbb
sub
push
cmp
or
fucomp
int3
cwtl
out
sbb
outsb
lods
mov
jg
test
rcrl
mov
mov
add
into
in
dec
adcl
jp
xchg
nop
popf
pop
mov
call
add
bound
ljmp
push
fcompl
out
mov
std
mov
sbb
sub
stos
int
jnp
es
loop
int
adc
pop
cmpsl
lock
and
call
mov
inc
or
call
aad
pop
fnstenv
imul
mov
mov
inc
and
bound
sub
ret
pop
jmp
push
fildll
xor
out
and
je
rcrl
jg
jbe
stc
cld
cli
add
mov
movsl
jg
rcl
mov
lock
shrb
int3
sub
call
pop
pop
mov
sbb
adc
push
and
mov
xchg
daa
fisttpll
out
and
mov
addb
xchg
pop
sti
add
rcrb
xchg
adc
fistl
lcall
icebp
and
fdiv
test
jbe
scas
scas
sbb
loopne
notb
loopne
sbb
insl
ret
cwtl
clc
sbbl
scas
inc
call
sub
out
xchg
jno
outsb
fdivl
push
out
les
dec
xchg
out
das
lret
scas
xchg
mov
pop
ja
pop
sarl
arpl
pop
mov
shrl
call
inc
sub
mov
ja,pt
fimull
test
fnstsw
cwtl
lahf
cmp
rcll
xchg
mov
int
mov
ljmp
sahf
cli
sti
pop
push
jp
dec
or
sbb
fisubrs
mov
mov
jne
adc
inc
jbe
les
int
cmp
popf
mov
xchg
ret
mov
shrb
pusha
stc
outsb
pop
out
cmc
mov
sub
fdivrs
scas
stos
mov
loopne
je
testb
mov
sahf
and
out
jno
scas
ficomps
or
dec
push
nop
pop
jecxz
in
test
sbb
fcomps
inc
insl
popf
ret
mov
aam
jb
jbe
push
jno
dec
cmpsb
je
push
addr16
ret
movsbl
jnp
jae
push
mov
jg
xor
call
in
iret
or
dec
int
addr16
int3
pusha
add
mov
fs
aad
out
mov
push
or
lcall
and
xor
jno
das
push
sub
in
in
and
ret
scas
mov
cmp
shll
cltd
push
daa
std
scas
test
xor
scas
or
lds
sti
movsb
cmpb
shll
push
jns
icebp
mov
mov
lds
and
jno
ss
sbb
push
lds
sbb
add
or
cltd
mov
jp
cmp
fimuls
dec
xor
fnsave
jnp
inc
push
xchg
inc
fsts
jp
mov
jae
sub
xlat
fwait
gs
cwtl
lret
jnp
and
xchg
mov
jno
xor
nop
popl
inc
ljmp
pop
push
daa
sub
scas
adc
in
scas
bound
or
adc
sub
loope
in
or
lds
add
enter
mov
xor
pop
pop
mov
shlb
inc
dec
sbb
mov
mov
mov
inc
aad
fstpl
mov
test
cmp
add
sub
push
and
lret
fsubr
gs
test
fbstp
pusha
aaa
ja
mov
das
cli
adc
sbb
cmp
xchg
and
pop
xchg
je
push
pop
movsb
in
clc
jne
lods
pop
add
fistps
out
hlt
sub
fdivs
ret
fmull
addr16
lret
lds
or
dec
mov
fsubl
je
mov
popf
fsts
cwtl
or
orb
in
shl
mov
adc
adc
testl
cwtl
dec
mov
adc
popl
push
jae
or
popa
imul
daa
inc
sub
ja
dec
push
lret
sbb
popf
int
out
iret
jle
mov
xor
push
pop
push
popl
pop
mov
daa
fsub
bound
sub
test
xrelease
movsb
pop
inc
shr
and
mov
xchg
push
sbb
sbb
std
fisubl
adc
push
inc
cmp
push
das
xchg
jne
xchg
call
adc
rcrb
adc
lods
xchg
xchg
or
mov
adc
cmp
mov
sub
xchg
and
hlt
mov
sbb
repnz
mov
jbe
mov
add
fucomp
add
inc
mov
sbb
xchg
sub
js
test
adc
mov
inc
ret
lcall
lds
ret
js
outsl
call
leave
push
negl
ret
jge
push
push
lods
push
cmp
xorl
jae
lret
ja
push
out
outsb
sub
dec
sahf
aaa
jl
add
xchg
jb
leave
nop
popa
mov
add
lea
sub
out
or
cmp
insl
shll
cmpl
ret
test
cltd
pop
je
and
clc
mov
mov
fsubp
sbb
mov
mov
jl
lahf
mov
xor
js
stc
scas
stos
inc
fildll
ds
lret
mov
cmc
sub
sub
mov
cmc
mov
mov
sbbb
enter
out
mov
mov
addb
outsb
ja
test
inc
mov
test
cs
cmp
dec
inc
inc
jl
mov
stos
ficomps
xlat
dec
jne
and
popf
push
in
aaa
jbe
sub
fildl
dec
out
in
sub
pop
subb
jne
scas
imul
cwtl
int3
dec
cltd
mov
gs
cmp
dec
aam
xchg
xchg
xorl
pop
cld
out
adc
lahf
sti
imul
ret
stos
push
pop
in
icebp
leave
into
jge
mov
cli
call
pop
xchg
sahf
in
cli
and
mov
dec
sbb
inc
sti
das
jb
cltd
sbb
push
inc
fwait
or
out
and
mov
push
cmp
push
push
mov
push
pusha
sti
cmpsb
test
test
subb
add
jno
inc
pushf
movsb
adc
inc
movsl
lahf
dec
ljmp
data16
add
push
or
push
add
out
or
aam
or
pop
jge
sbb
mov
mov
imul
pop
cmp
notb
orb
dec
imull
ficoms
mov
cmp
inc
jb
add
adc
cmp
pop
cmc
ljmp
cmpsl
ja
xorl
aad
xchg
inc
jbe
into
or
shll
or
bswap
aam
and
cmpsl
mov
add
pop
jno
adc
jno
repz
rorl
lea
loop
xor
in
mov
pushf
hlt
or
sbb
insl
orb
inc
xchg
pop
test
xchg
xor
sbbl
xchg
inc
fsubrl
repz
adc
cli
test
cmp
idivl
push
repz
and
push
aaa
sub
filds
addr16
xchg
dec
jns
dec
lods
aad
std
xor
ret
les
add
fdivs
lea
pop
and
sahf
pop
xor
mov
push
or
sub
cmp
and
cmp
xchg
imul
jmp
sbb
xlat
or
fidivl
push
pop
pop
pop
cmp
testl
cmpsl
pop
aad
bound
mov
lcall
cs
pop
data16
ffree
ss
adc
push
loope
ss
cmc
xchg
or
fistl
dec
add
pop
mov
inc
sbb
sub
dec
jl
daa
jno
push
push
jae
xchg
or
pop
dec
sbb
into
jecxz
push
je
mov
scas
push
mov
mov
je
and
fnsave
lahf
mov
mov
stos
jns
jno
jmp
push
adc
inc
addr16
jp
xchg
stos
aaa
add
lods
xchg
ret
faddl
test
pop
inc
arpl
mov
ret
add
stc
js
ja
lds
aas
cmp
mov
scas
mov
inc
mov
pop
cli
outsb
inc
ja
ss
or
fwait
jg
lods
andnps
out
ja
int
or
sbb
bound
sub
pushf
mov
mov
xor
pop
into
adc
into
mov
and
test
or
and
push
sub
js
jne
scas
ficoml
jg
lods
jo
data16
into
dec
andl
test
xchg
lods
inc
mov
mov
push
jne
jle
ret
roll
push
popa
add
pusha
or
call
jge
in
ret
in
push
mov
add
jg
xor
cmp
arpl
pop
mov
fisubl
lahf
pop
push
push
hlt
cmc
cltd
or
ret
imul
mov
in
inc
mov
or
pusha
dec
and
jmp
push
cmp
dec
mov
add
fisubl
lret
cmpsw
push
add
enter
xor
into
add
mov
xchg
inc
pop
icebp
out
mov
dec
fcoml
test
jle
out
lahf
push
imul
lods
mov
in
mov
into
push
fistl
out
xchg
dec
lret
mov
in
adc
mov
pop
lahf
xchg
gs
xor
in
mov
cmp
xor
fsts
mov
push
insb
jne
out
cli
inc
rcr
enter
mov
pop
mov
push
in
push
add
xchg
shrb
mov
xchg
sub
xchg
test
insb
testb
cmpl
andl
movsb
test
xor
dec
sub
aaa
lahf
in
sub
std
insl
inc
add
jmp
mov
imul
bnd
add
pop
push
adc
and
inc
xor
push
cmp
bound
push
aas
jb
cld
out
loopne
std
sub
enter
cmp
or
mov
mov
fnsave
int
mov
add
pop
ja
insl
aaa
dec
lret
fisubrs
pop
fsubp
and
adc
stc
dec
or
ffree
push
xchg
mov
inc
lea
ror
lret
sarb
repz
loope
stos
sbb
sbb
inc
outsl
in
add
cmp
stos
pop
call
fmuls
adc
or
xchg
cmpsb
hlt
mov
mov
clc
dec
leave
daa
mov
inc
sub
jecxz
sbbb
stos
push
cwtl
ret
in
ficoml
dec
sbb
rolb
xor
imul
adc
leave
mov
sub
faddl
je
cmp
aam
sbb
cld
pusha
clc
fiadds
addr16
or
daa
test
xchg
movsb
dec
jmp
rcrb
push
ret
lret
pop
flds
outsl
add
dec
cmp
test
push
stc
insb
cmpsb
inc
insb
xor
push
push
or
ja
das
add
pop
push
mov
shl
loopne
xchg
add
out
ljmp
out
fsubr
add
push
sbb
je
lcall
cltd
or
mov
pop
enter
stos
mov
sbb
sbb
sub
fstl
pop
stc
mov
leave
adc
mov
adc
mov
cs
and
fidivrl
hlt
xchg
arpl
cwtl
dec
nop
ds
bound
rcll
inc
lock
jb
aaa
in
std
test
push
dec
addr16
cmp
fistpl
jb
fdiv
xor
imul
mov
cmp
jmp
sub
icebp
mov
je
mov
adc
outsb
aam
sbb
cwtl
cmp
insl
push
mov
xchg
dec
jbe
scas
in
add
mov
xrelease
push
mov
xor
mov
test
into
sbb
or
out
xchg
mov
xor
out
dec
adc
iret
test
jecxz
push
push
test
rcrl
addr16
rolb
sub
shl
add
movsl
loop
xchg
lcall
leave
outsb
or
mov
out
lods
ds
pop
pop
popl
rorl
jno
into
pop
nop
rolb
mov
mov
mov
mov
push
inc
movsb
sub
lcall
in
rcrl
cld
ds
in
loop
and
add
jmp
pusha
pop
lods
out
outsl
inc
cld
add
shl
dec
mov
sbb
movsb
and
push
mov
sbb
das
push
cli
push
mov
mov
outsb
xchg
and
xor
fs
aad
push
sub
aas
push
or
mov
pause
jge
fucomi
jne
notb
push
and
mov
aas
xor
out
sub
mov
shll
outsb
bound
mov
jmp
sub
push
subb
bound
pop
jl
pop
popa
rolb
add
sub
or
xchg
imul
or
dec
lcall
sbb
mov
pushf
xor
pop
or
sub
leave
mov
roll
into
xor
data16
addr16
jnp
in
scas
mov
inc
push
addb
incl
rcr
data16
divl
push
nop
shlb
stos
add
mov
sbb
sbbl
and
insl
test
inc
inc
mov
int3
repz
xlat
mov
sub
nop
shrb
aam
xlat
mov
fsubrs
adcl
hlt
inc
cmp
sub
sub
repz
push
jnp
icebp
sub
inc
je
inc
jge
dec
sub
add
into
hlt
push
cli
jo
js
push
dec
mov
mov
arpl
xchg
addl
mov
nop
divb
and
dec
sti
rcr
mov
stos
cmp
call
mov
and
cmp
push
mov
pop
cmp
insl
push
es
sbb
mov
cmp
js
cwtl
sbbb
lods
sub
gs
adc
addb
add
data16
shrb
sarl
adc
movsb
mov
cmc
inc
jno
lret
mov
and
and
mov
testl
xchg
into
ret
daa
xchg
adc
pop
sbb
lcall
orl
mov
pop
sbb
fsubs
or
mov
sahf
and
stos
xor
leave
dec
sub
mov
iret
xorl
test
lcall
nop
gs
imul
xchg
mov
enter
mov
mov
mov
out
pop
movsl
outsb
dec
xchg
aaa
sub
pop
dec
mov
mov
aam
outsl
xchg
dec
mov
jmp
cltd
mov
push
sub
mov
push
mov
mov
ljmp
pop
pop
sub
ljmp
jb
hlt
sub
daa
xchg
nop
ljmp
ljmp
cli
gs
add
icebp
xchg
fsubrs
inc
xor
int3
imul
xchg
sti
aad
jae
sub
arpl
xchg
push
inc
test
outsl
sarl
scas
add
pop
adc
xor
push
inc
out
dec
add
dec
jo
jecxz
pop
test
sub
sub
stos
pop
ja
jno
xchg
and
shll
outsb
je
sbb
test
push
pop
repz
out
aaa
ud1
lret
push
les
stos
std
cmp
inc
adcl
je
push
push
out
mov
jb,pn
mov
pop
dec
cltd
push
ret
cltd
pop
jmp
xor
pop
adc
repz
xchg
pushf
leave
int
sti
push
inc
push
mov
xchg
jo
sbb
xchg
cmc
aaa
add
inc
inc
push
js
jge
int
xchg
js
test
push
aaa
pop
sbbb
js
jnp
test
push
stc
jp
jl
push
inc
imul
jno
mov
pusha
mov
jmp
sub
cmp
mov
mov
pop
and
sbb
mov
cltd
movsl
jno
cmc
add
dec
adc
scas
ror
test
jb
xor
xor
or
xchg
cmp
jne
test
sti
mov
xchg
add
mov
jnp
pop
jae
inc
adc
jbe
movsb
dec
movsb
cltd
push
mov
inc
xor
loopne
and
dec
scas
sbb
ss
jmp
stc
cli
inc
sub
or
cld
cmpsb
jne
out
mov
pop
pop
daa
lods
pop
xchg
xlat
and
jbe
xor
push
add
popa
push
insl
cs
push
mov
loope
outsl
push
mov
pop
sbb
xchg
cmpsb
shlb
push
push
xchg
scas
mov
pop
test
mov
divl
dec
mov
or
inc
jb
lret
std
and
and
fiaddl
lahf
mov
leave
fstl
add
popf
mov
dec
ror
jbe
fucom
mull
sub
cld
add
cmp
scas
lret
mov
add
lock
inc
test
and
xor
sub
mov
ds
aam
pop
pop
mov
dec
xlat
scas
xor
jg
imul
add
divl
jl
inc
jbe
and
push
add
pop
inc
clc
lods
daa
inc
stc
mov
mov
mov
cld
out
xor
filds
xor
fistpl
jl
dec
dec
inc
add
add
cmp
mov
rcrb
notb
sbb
outsb
rcll
cli
shl
mov
xchg
in
arpl
mov
daa
mov
loop
das
lret
ror
and
bound
jb
mov
mov
inc
in
xor
xchg
dec
adc
cmpsb
mov
xor
push
mov
pop
and
fsubrl
xor
inc
inc
outsb
push
mov
leave
sbb
push
sub
jl
js
out
jl
mov
xor
ss
push
in
xchg
dec
adc
pop
fldt
je
cltd
dec
jae
mov
hlt
arpl
fstps
fcmovne
cmp
test
sbb
xchg
add
sub
lret
in
inc
outsb
xor
jmp
data16
fmull
mov
into
call
in
push
inc
inc
push
int3
mov
jmp
lods
inc
ds
pusha
adc
fwait
cmpsb
out
roll
leave
dec
and
sub
mov
xor
xchg
sbb
fidivl
mov
fwait
in
cmpb
rcrb
sub
jno
clc
push
mov
out
aam
xor
imul
sbb
push
and
xchg
stos
mov
push
fs
sub
adc
inc
loopne
shll
fwait
xchg
push
in
mov
pop
lret
add
push
insb
add
aaa
loop
loop
out
xchg
adc
push
into
jle
js
insb
push
pop
jmp
cmp
push
adc
loopne
jae
dec
add
es
dec
shlb
inc
ficoms
lock
inc
hlt
mov
mov
sub
scas
fsubrs
out
ja
jae
add
stc
mov
pop
push
mov
inc
mov
dec
lcall
or
loop
push
jmp
add
leave
sti
add
or
sub
in
aam
jo
lahf
stos
add
jb
xlat
add
mov
push
test
lret
cmp
adc
shll
and
ja
and
xchg
and
fisubl
in
adc
pusha
in
pop
loope
xor
cmp
test
fbstp
ret
sbb
mov
cmp
fmul
mov
fisubrl
in
inc
gs
ds
test
or
in
sbb
movsl
in
test
jnp
rcrl
divl
mov
sbb
mov
ss
push
loopne
scas
xchg
es
cld
sbb
cmp
rcrb
idivb
dec
lods
jne
loop
mov
inc
lcall
scas
out
ds
movsl
nop
and
dec
add
lods
in
pop
movsl
push
xor
xor
mov
shlb
stos
pop
mov
and
or
lahf
int
popf
dec
ret
cld
push
inc
movsb
xchg
icebp
xor
imul
mov
jae
loop
in
mov
inc
movsl
sub
test
lret
and
adc
jne
in
insl
cmp
mov
jo
sbb
mov
pop
scas
test
test
adc
jae
inc
lods
xchg
outsb
xlat
xor
lret
mov
or
sbb
and
push
clc
fistps
xor
pop
movsl
leave
lret
ds
inc
xchg
imul
lcall
loopne
test
push
jge
popa
lds
sar
push
dec
test
and
lods
imul
rol
mov
mov
push
mov
add
cmp
add
stos
test
mov
and
xchg
and
lock
pop
cs
jnp
int3
pop
outsl
nop
xchg
cmp
lods
inc
int
mov
fisubl
lea
js,pn
mov
mov
and
out
lods
cld
add
mov
cltd
xchg
mov
icebp
test
sahf
sti
push
loope
lcall
stos
xlat
call
mov
pop
xor
pop
add
out
mov
inc
dec
adc
data16
mov
out
int3
sbb
mov
mov
cwtl
scas
cwtl
pusha
inc
inc
lods
jl
in
add
adc
fs
pop
push
lds
icebp
insl
adc
loope
pop
addr16
cli
xchg
aam
and
jg
lea
adc
mov
ret
lock
push
jno
daa
adcb
cmp
sub
movsl
data16
and
inc
adc
stos
dec
leave
mov
push
das
push
or
scas
les
enter
addr16
adc
pop
into
in
cwtl
sbb
xchg
lret
movsb
lea
cmp
pop
adc
int3
jnp
dec
mov
adc
adc
cmpsb
mov
ljmp
pusha
pop
jmp
iret
es
ss
divb
push
mov
pop
mov
xchg
inc
mov
cmp
sub
je
jns
lods
scas
es
xchg
loope,pn
xchg
daa
rorl
lret
idivl
push
push
rcrb
pop
mov
loope
xchg
jns
popf
cltd
jnp
nop
xchg
cmp
jae
jnp
fists
push
sbb
sub
pop
les
ja
test
fcmove
roll
fucomip
les
jnp
adc
repnz
sbb
mov
lret
pop
mov
xchg
jp,pn
aas
jp
and
mov
xchg
lret
imul
mov
push
sbb
inc
rorb
imul
dec
iret
fisubs
jl,pn
cmp
lds
movb
or
pusha
sahf
pop
add
adc
ja
or
mov
popf
mov
pop
sub
pop
sbb
cmp
ljmp
int
inc
pusha
push
enter
mov
ds
aam
add
mov
lods
pop
xchg
outsl
gs
cmc
insb
add
inc
dec
rclb
jle
jl
xorl
adc
sarb
adc
mov
pop
mov
ret
jmp
cmc
int3
sub
sub
ret
jo
sub
insl
mov
push
pushf
ret
pop
pop
and
push
incb
gs
lcall
jo
inc
xchg
mov
test
add
lea
dec
popf
ret
mov
pop
push
lock
out
arpl
test
call
and
out
ficomps
sbb
divl
xor
or
data16
addb
out
add
cmp
jge
add
push
orb
mov
leave
dec
or
xchg
in
adc
bound
std
mov
dec
push
xchg
enter
int
popa
cmp
js
insl
mov
gs
dec
negb
cmp
lods
enter
inc
iret
or
inc
adc
xchg
fstl
mov
pop
jp
xchg
mov
stos
mov
mov
xorl
xchg
dec
decb
fwait
repz
dec
cmp
jnp
jge
add
in
cmpsl
mov
mov
test
mov
jmp
aam
stc
xchg
pop
cmp
and
out
sub
js
addl
popf
mov
inc
sub
out
outsl
lock
ds
pusha
imul
mov
xor
lods
cmp
inc
int3
in
add
and
loop
out
das
fldcw
popa
cmp
sub
cmpsb
xchg
pop
aad
fidivrl
jl
sub
jmp
shrl
dec
leave
addl
push
pop
cld
adc
out
ds
and
or
orl
outsb
outsl
mov
pop
les
out
adc
pop
sbb
mov
mov
sub
ds
and
mov
dec
scas
testl
jae
dec
lret
inc
jle
and
fs
cmc
xchg
fdivrl
add
dec
jno,pt
jecxz
cmc
outsb
movsb
adc
stc
loope
leave
jno
xchg
jnp
ljmp
jle
cmp
xchg
xchg
and
lret
sbb
cmp
ret
movb
fs
and
popa
mulb
repz
dec
push
xor
pop
mov
ljmp
xchg
dec
ss
pop
push
test
mov
sbb
adcb
cmc
int
xchg
mov
pop
pop
incb
out
and
pop
das
add
mov
jge
xchg
mov
push
fnstenv
ljmp
dec
in
in
mov
das
aam
imul
mov
jl
jp
xor
cmp
xor
xchg
and
sbb
in
mov
sahf
into
mov
add
movsb
or
jge
add
sarl
pop
js
dec
shl
fcomip
mov
shll
enter
out
fld
adc
dec
fs
js
mov
mov
insl
imul
xor
jne
jbe
lret
leave
fildl
rcll
out
xor
pop
hlt
rclb
sub
aaa
jo
sbb
out
daa
call
rorb
imull
mov
mov
inc
addl
xchg
call
mov
jmp
popa
sbb
jle
pop
enter
daa
adc
fwait
and
out
leave
fwait
and
mov
push
sti
adcl
cmp
enter
scas
imul
enter
and
add
mov
leave
push
mov
int
insb
push
push
sub
loopne
test
lret
js
sub
xor
push
scas
push
sbb
adc
repnz
adc
mov
mov
adc
pop
xchg
popf
jb
sub
mov
bound
push
insl
cld
orl
cs
jno
addr16
ja
insb
push
cli
sbb
sbbb
sbb
and
loope
imul
testl
or
inc
cmp
inc
leave
xor
movsl
mov
inc
inc
and
cmp
orl
pop
gs
xchg
mov
push
mov
jbe
xlat
pop
icebp
in
cmp
mov
jecxz
pop
sub
push
cmp
stos
psubb
gs
lea
into
sbb
sahf
jae
mov
in
fistpl
mov
xchg
out
or
sbb
lds
mov
shlb
pop
stos
add
leave
iret
movsb
mov
lods
jnp
enter
jecxz
lods
stos
jns
stc
lea
add
rcll
push
pop
mov
mov
popa
push
popf
dec
add
lret
lock
pop
xchg
dec
loopne
call
rorb
cmpsl
sbb
adc
and
clc
push
inc
stc
dec
push
inc
mov
or
fisubs
jg
jnp
dec
sahf
push
in
test
sub
xor
and
xchg
repnz
pop
xchg
adcl
mov
cmp
mov
sub
scas
popa
cvtps2pd
jecxz
or
outsl
and
mov
iret
inc
decb
mov
or
jne
xchg
xchg
and
mov
imul
ja
push
mov
ja
mov
mov
cmp
cs
fmul
jnp
adc
test
jae
testl
lret
pop
pop
cmp
loop
ss
imul
sbb
inc
pop
adc
dec
cmp
xchg
push
jo
inc
dec
mov
jne
jmp
mov
mov
stos
cmp
mov
adc
fwait
or
mov
pop
mov
xchg
mov
mov
mov
js
xchg
xchg
andb
mov
mov
mov
repnz
xchg
dec
repz
jge
pop
in
sub
std
enter
mov
sti
in
xlat
lds
sub
xor
dec
or
ds
test
mov
jne
lcall
lds
jnp
cmp
xlat
sbb
flds
push
add
int
ss
rclb
mov
loope
rorb
fidivl
xor
sub
test
les
repz
das
popf
js
outsb
pop
fildll
fildl
or
add
outsb
fsubl
sti
xor
mov
repz
pop
lods
sub
ret
and
mov
jbe
mov
inc
in
or
out
xchg
movsb
loope
xchg
jp
scas
mov
sahf
aam
jae
fnstcw
mov
aam
ds
mov
jle
jle
nop
dec
dec
mov
xlat
pop
hlt
shll
int3
pop
mov
mov
cli
orl
test
and
shll
cli
sbb
and
inc
xchg
xor
push
sub
icebp
pop
mov
or
cmp
cltd
lret
push
out
pop
out
in
andb
sub
inc
lret
insl
idivb
xchg
xchg
sarb
es
aaa
dec
dec
cmc
mov
sbbb
das
cltd
cmpsb
mov
xchg
pop
jecxz
and
xchg
repnz
push
shrb
mov
cwtl
lods
jmp
add
divb
dec
jno
add
out
test
pop
push
dec
out
test
shll
movsl
shll
stos
jno
push
sub
or
adcb
lea
int3
adc
pop
add
dec
push
xchg
dec
lods
push
xor
sahf
push
test
adc
sbb
orb
jp
mov
adc
mov
sub
or
fwait
gs
pop
or
cmp
pop
scas
adc
popf
loope
adc
and
or
lret
test
pop
push
ret
movsl
mov
or
into
stc
mov
sahf
outsl
shrb
insl
jbe
shlb
push
rep
out
and
push
fdivl
movsl
xlat
adc
dec
cld
pop
push
cmp
mov
push
nop
inc
push
or
and
lds
test
xlat
push
push
stos
mull
cs
daa
cmpsl
adc
pop
cmp
xor
xchg
fs
aas
jle
out
in
pxor
das
sub
and
xchg
mov
jbe
and
cmp
lods
and
mov
bound
sub
gs
jb
xor
mov
and
xchg
push
rcrb
adc
sub
xor
adc
lea
call
jmp
inc
outsl
mov
cmp
xchg
in
jge
testl
jp
inc
in
inc
stos
aas
mov
add
lahf
ds
or
inc
nop
mov
mov
pop
out
lret
jecxz
dec
scas
cmp
xor
jne
push
xor
outsb
stos
jecxz
test
xor
cmp
adc
jns
jle
dec
add
xchg
leave
push
cmp
cli
mov
pop
shll
cmc
push
imul
mov
insl
mov
pop
mov
lret
xchg
ja
rolb
cmpsb
xor
es
test
and
or
sub
add
xchg
jne
leave
mov
sub
dec
mov
jmp
jp
adc
test
decl
in
imul
cmpsl
aas
inc
sub
sbb
idivl
dec
test
inc
mov
add
jge
add
sbb
lea
dec
add
cs
xchg
out
jne
loopne
out
cmp
iret
adc
in
adc
add
push
outsb
sub
fiadds
hlt
sbb
inc
and
insl
mov
jl
mov
shlb
int
cmp
jns
mov
cltd
test
shll
push
nop
je
push
mov
dec
decl
sub
push
sbb
lea
arpl
addr16
lcall
dec
lods
mov
sbb
mov
iret
in
fs
bound
lods
cmpl
jg
sahf
sahf
mov
adc
les
dec
test
pop
jmp
loopne
aaa
mov
shlb
xor
cmp
jl
xchg
mov
sub
pushf
jae
gs
sub
in
sbb
pop
aad
cs
sbb
mov
xor
mov
push
jg
lret
sub
pusha
inc
cmpsl
gs
shll
out
aad
movl
push
js
push
push
loopne
mov
add
stos
push
loop
stos
sbb
popf
pop
add
aad
rcrl
push
xchg
lcall
dec
roll
mov
dec
jp
in
jae
push
push
jb
arpl
lods
mov
pop
jnp
cmpl
xchg
jle
call
xlat
pop
sbb
inc
jb
ljmp
daa
bound
pop
out
test
fwait
ss
das
std
sbbl
fmuls
movb
pop
sbb
cmp
and
test
cltd
mov
fwait
insl
fwait
adc
mov
sar
adc
pop
jp
jl
jno
sti
daa
popa
into
xchg
push
pop
dec
or
xor
adc
icebp
int3
lods
or
lahf
xchg
stc
jecxz
outsl
out
ja
adc
adc
mov
out
test
lcall
jmp
dec
stos
flds
dec
int3
fdivr
pop
dec
pop
in
shlb
shll
repnz
xchg
iret
xor
cld
push
loopne
push
xlat
mov
je
inc
movsb
xchg
dec
sahf
inc
mov
or
lods
bnd
cmp
daa
mov
sbb
mov
xor
jo
lret
mov
xchg
xchg
mov
lea
subl
sbb
jmp
push
lcall
xchg
nop
cmp
fstl
insb
dec
mov
imul
stos
adc
in
stc
push
aam
inc
push
inc
mov
ljmp
adc
sarl
or
xor
out
in
ret
or
xlat
or
add
push
out
shr
ja
xor
xchg
mov
inc
mov
mov
stos
cmpsb
les
in
and
push
rcrl
dec
mov
mov
jl
xchg
lret
jno
jmp
ja
add
dec
sti
mov
test
in
lea
mov
insl
or
xchg
movsl
cmc
adc
cld
cmpb
imul
iret
popa
decb
ret
addr16
adc
int
subb
dec
xchg
cmovae
adc
sahf
adc
fisttpl
push
rcrl
xor
push
ja
out
mov
jge
ss
inc
adc
push
xchg
imul
out
jmp
je
mov
sti
cmpsl
rcrb
and
inc
decl
mov
sub
mov
enter
les
xchg
jecxz
or
push
rorb
repz
fnstenv
mov
jg
lea
adc
out
adc
xchg
lret
lret
xchg
push
push
and
aad
dec
sub
ret
inc
ret
bound
and
inc
sub
fstpl
sbb
cwtl
imul
shlb
and
dec
add
lcall
jp
add
dec
mov
std
jp
imul
mull
fs
dec
repnz
std
fisttpll
mov
add
jl
or
pop
mov
or
lcall
sbbb
andb
stos
mov
sub
test
push
sbb
out
and
stos
loop
jo
jns
push
inc
jae
mov
add
test
sub
jmp
mov
xor
ret
je
icebp
pop
popl
fnsave
arpl
sub
lods
adc
out
jge
mov
test
xor
lret
mov
repz
dec
fcomps
and
popf
cmpl
leave
mov
mov
jmp
inc
cmp
js
aas
mov
stos
adc
cli
hlt
sar
xor
push
insb
inc
scas
add
imul
inc
jp
mov
rclb
mov
xor
sbb
cmp
negb
stos
es
imul
movsb
fistpll
mov
lret
bound
bound
add
or
filds
sbb
pop
jnp
and
fisubrl
lods
cmp
or
insl
test
loopne
mov
push
mov
data16
je
mov
dec
popa
ret
sbb
iret
push
loopne
scas
adc
stos
fdivr
mov
cltd
cmpsl
cs
enter
je
xchg
or
sub
int3
lcall
pushf
pop
test
dec
jae
and
lock
roll
cmp
add
out
icebp
or
imul
add
or
mov
outsl
fnsetpm(287
imul
test
call
fidivl
stos
push
imul
add
xor
movsb
xlat
mov
pop
or
cmc
push
cmp
or
aas
cltd
hlt
xor
mov
and
push
jns
jecxz
loope
ja
ret
imul
test
sub
orl
cmp
xchg
sub
ret
fsubrp
in
jp
dec
movsb
negb
xorl
jmp
mov
sarb
lds
shrl
pop
jp
lods
and
fwait
lods
push
jl
pop
dec
ret
aas
dec
jae
xor
cs
ja
mov
sub
shll
mov
into
int3
fistpl
out
or
xorl
mov
pop
lods
and
inc
pop
pop
pop
xor
nop
stc
pusha
xor
sub
mov
dec
ret
lahf
adc
pop
cmp
lds
insl
adc
ret
testl
std
iret
or
sbb
movsb
arpl
add
call
mov
pop
sbb
xchg
or
push
mov
add
dec
pop
add
loopne
xchg
add
test
inc
sbb
pop
push
mov
arpl
aas
xchg
pusha
outsb
int3
sbb
imul
jmp
addb
jo
andl
cli
mov
dec
into
cltd
fstpt
outsl
xor
lcall
cmc
add
pop
and
mull
int
jmp
inc
lods
movsl
sub
jno
sbbl
adc
dec
cmp
jg
jae
push
mov
in
inc
pusha
ret
inc
pop
sub
cld
jge
insb
pop
pop
mov
sahf
mov
mov
loop
xor
imul
jp
sbb
in
addl
lods
int
jno
cmp
xor
punpckhbw
sub
in
sarb
mov
mov
mov
push
rclb
loopne
shr
jmp
or
idivb
shrb
or
cmp
call
mov
push
fadds
xchg
and
nop
sbbb
hlt
stos
stos
jle,pn
cmp
pop
xlat
std
inc
add
ret
and
lahf
xchg
add
pop
adc
in
popa
push
push
mov
leave
mov
stos
pop
pop
gs
arpl
pop
mov
lcall
faddp
ss
jne
xchg
cmpb
cli
xchg
ret
insl
and
lea
imul
jne
pop
jmp
lods
xchg
mov
pop
and
push
dec
ljmp
and
mov
sahf
adcl
adc
sbb
in
es
cmp
mov
pop
mov
mov
fs
lock
notl
or
shlb
inc
pop
pop
mov
clc
mov
test
sub
pushf
xor
data16
xor
add
sub
xor
mov
dec
daa
dec
subl
mov
xor
gs
xchg
jmp
mov
xchg
movsb
add
inc
cmp
nop
jle
push
pop
mov
sub
push
adc
lret
xor
jmp
add
jmp
into
addr16
add
decb
negb
imul
jl
cld
jae
sbb
mov
and
jmp
and
push
xor
andb
xor
xchg
adc
sbb
pop
push
or
jne
ret
sub
jp
pop
xor
lds
push
dec
add
mov
add
adc
je
js
outsb
mov
notb
add
out
aad
ljmp
adcb
sbb
cmp
popf
xchg
push
mov
divb
and
in
sub
cmp
lret
sbb
and
ja
pop
pop
icebp
dec
mov
std
mov
sub
arpl
jb
mov
xchg
addr16
sub
negb
leave
dec
or
push
clc
dec
add
xchg
mov
xor
jecxz
mov
in
jb
in
loop
add
pop
jp
mov
ss
dec
aas
iret
dec
enter
xchg
or
xchg
mov
das
mov
repnz
cmpsb
or
mov
ret
out
daa
xchg
iret
fwait
in
dec
daa
hlt
mov
fisttpll
push
insl
ds
aaa
std
sti
xor
push
lcall
inc
dec
in
inc
sbb
ljmp
mov
xlat
setg
jo
dec
imul
mov
mov
je
movsb
sti
cmp
cmc
das
ds
push
sub
outsl
pop
sbb
lock
push
push
pop
fs
xchg
add
fcomip
sbb
push
add
dec
mov
out
cmp
push
cmp
in
lret
les
mov
pop
addr16
insb
adc
add
lods
out
add
xor
fstp
lcall
push
icebp
ljmp
pushf
lods
fisubrs
repnz
mov
xchg
into
pusha
adc
psubq
in
sub
mov
sub
mov
sub
xor
fsubs
adc
rclb
in
sahf
mov
jl
xor
and
lcall
pop
mov
dec
rcr
xor
imul
test
push
sbb
shll
sbb
adc
dec
imul
add
outsl
cs
pop
pop
or
sbb
push
in
std
lock
inc
addr16
mov
ret
ficomps
or
cmp
push
xor
xchg
icebp
bound
add
out
dec
in
jnp,pt
shlb
aas
push
aad
mov
or
jg
and
lock
mov
mov
sub
mov
stos
cmp
sahf
inc
leave
cmpsb
pop
fisubrs
popf
dec
and
roll
push
imul
jno
movsl
push
adc
ret
pop
adc
fwait
mov
mov
jo
inc
cli
cmp
adc
pop
cli
xor
in
pop
cmc
je
pop
dec
stos
mov
cld
xlat
push
daa
int
dec
inc
decl
dec
test
inc
je,pn
imul
lcall
and
cmpb
fwait
push
push
stos
outsl
add
adc
insb
cmpsl
dec
mov
mov
in
orb
gs
push
add
bound
in
fwait
adc
push
and
mov
jnp
pop
repz
int
lret
scas
cs
push
pop
xor
push
mov
adc
js
cltd
push
stos
add
push
cli
insl
loopne
ret
das
mov
xchg
dec
add
ds
data16
push
push
lret
xchg
sbb
inc
pop
sbb
dec
xorl
cli
mov
push
ficoml
xchg
cmc
cmp
daa
les
sbb
inc
adc
push
lret
and
nop
sbb
pop
push
jl
push
aad
std
push
push
cmpsb
cmp
and
xchg
mov
pop
sbb
icebp
repnz
insl
daa
cli
aas
mov
xchg
sub
cmp
sahf
in
pop
mov
pop
push
mov
in
pop
xor
mov
inc
adc
dec
inc
mov
sbb
add
and
cmpsl
insl
cmpl
mov
xchg
add
jmp
mov
mov
xorb
shlb
push
xor
xor
nop
out
outsl
cld
lods
or
pop
cmp
jg
test
inc
in
inc
mov
in
aad
aam
cmp
cli
adc
adc
pop
push
jmp
sub
add
or
push
popf
inc
cmp
bnd
mov
lods
aam
out
roll
enter
ret
jge
cmpsb
push
cltd
je
stos
mov
mov
dec
push
mov
test
in
and
lds
cltd
sbb
sbb
sub
pop
cmp
pop
jne
pop
xor
mov
inc
jl
or
and
imul
add
add
addr16
aas
and
repnz
repnz
jb
pop
and
xor
aad
fidivrs
push
pop
or
nop
test
mov
popa
xchg
ss
mov
xchg
pop
icebp
inc
fisttpl
imul
sbb
ss
mov
adc
mov
test
push
les
enter
pop
inc
test
sbb
hlt
sbb
and
ret
jecxz
aad
fninit
in
nop
mov
sub
psllw
sbb
outsb
jl
out
cmp
push
jbe
fidivrl
xchg
mov
mov
jne
js
insl
enter
repz
fldenv
and
enter
repz
jbe
adcb
jbe
xchg
push
enter
nop
mov
xchg
ret
mov
mov
sbb
mov
enter
sub
inc
loopne
jnp
mov
out
in
stos
adc
sub
cmp
xchg
movsl
ljmp
iret
shl
mov
lock
loopne
fwait
icebp
xchg
and
enter
or
push
call
dec
stc
pop
push
mov
cmc
mov
leave
dec
jge
cmp
in
pop
pushf
sbb
mov
push
pop
rcrb
test
xor
cmpsb
jo
out
out
loop
arpl
daa
mov
out
mov
movsl
adc
sbb
sbb
cmp
cmc
mov
fstps
ror
jns
fs
ja
jno
xchg
cltd
mov
in
jl
xchg
mov
nopl
lahf
pop
mov
scas
in
xchg
and
cmp
adc
jnp,pn
inc
sbb
daa
cmp
push
iret
enter
and
xchg
outsb
cli
loopne
jg
xchg
sub
pop
dec
push
jb
adc
mov
shrl
inc
jno
push
sbb
xor
sbb
cmpsb
sbb
repnz
or
jne
push
jnp
push
jne
dec
jle
adcb
mov
and
mov
fidivrs
daa
fcoms
aas
mov
lret
xor
call
adc
pop
mov
call
add
mov
clc
mov
sti
adc
gs
sbb
imul
fsubrl
push
xlat
adc
sahf
outsl
add
mov
cmpl
push
mov
and
shl
cli
add
cmpsb
or
lds
mov
js
test
bound
xor
repnz
inc
inc
flds
pop
daa
jo
bnd
jp
je
stc
incb
ret
aaa
hlt
leave
xor
xchg
mov
xor
outsl
xchg
rcl
hlt
xchg
pop
inc
leave
lret
repnz
out
scas
xor
cmp
out
inc
movsl
push
mov
aas
mov
inc
insl
jmp
sbb
or
stos
dec
mov
rcl
adc
dec
js
int
stos
rcll
sbbl
xor
test
and
sub
enter
push
add
push
sub
xor
rsqrtps
inc
mov
iret
sbb
adc
dec
mov
out
xchg
imul
and
lret
popa
sub
cmpsl
dec
jns
mov
push
mov
pop
cli
aas
push
mov
push
fistpll
mov
xor
pop
outsl
xor
mov
pop
jmp
inc
std
inc
xchg
xchg
push
ret
dec
pop
int
adc
mov
insb
movsb
mov
push
shr
or
sti
mov
pop
add
cmp
mov
cmp
jnp
lret
dec
sub
mov
or
cltd
test
dec
pop
add
insl
lods
lods
into
xchg
subl
lea
push
lods
shlb
push
popa
sbb
add
in
mov
add
sbb
push
fidivs
movsb
insb
mov
dec
pop
sbb
nop
add
mov
aam
sbb
mov
xchg
or
in
sahf
sub
adc
push
inc
adc
pop
jns
sub
in
or
mov
and
add
cmp
xor
lods
adc
lret
pop
jge
ret
aam
loope
sti
xchg
loop
loope
pop
jne
adc
hlt
and
js
xchg
fdivrl
push
xlat
pop
sti
rclb
push
pop
push
ljmp
fs
test
adc
push
addb
mov
bound
push
in
dec
imul
xor
push
gs
dec
sbb
in
sub
cmpsl
mov
dec
mov
jbe
repz
jo
push
lock
andb
jb
mov
fcomi
jge
enter
adc
mov
xor
mov
out
adc
in
out
stos
in
fldcw
lret
sub
add
cmp
aam
je
mov
push
mov
mov
mov
xchg
dec
lea
mov
adc
or
xchg
inc
cmp
sbb
lret
xchg
ja
daa
aad
ret
insl
jecxz
or
and
mov
push
lcall
mov
out
dec
in
in
mov
or
sbb
add
pop
or
pop
push
sbb
mov
and
push
xor
inc
ret
dec
cs
jmp
jns
jp
out
cmpsl
lcall
jbe
stos
lret
cmovge
sbb
cmp
xchg
out
shlb
daa
inc
daa
pop
enter
in
pop
add
mov
or
cmp
push
iret
mov
clc
std
inc
add
dec
push
inc
adc
or
jle
xchg
shrb
imul
jle
add
ret
out
fdivs
mov
mov
stos
and
dec
xchg
in
mov
pop
mov
aam
shrb
cmp
pop
adc
cmc
ret
ficompl
and
cmp
pop
xlat
jecxz
mov
mov
push
ds
add
loope
push
std
mov
jmp
add
adc
or
int3
sbb
out
ljmp
test
test
xchg
or
ret
inc
xchg
enter
xor
flds
pop
mov
cli
ret
cwtl
in
mov
int
dec
aad
push
iret
lret
leave
pop
mov
fstpt
ljmp
stc
inc
lds
out
fwait
inc
je
andb
push
adc
mov
sbb
dec
movsb
xchg
gs
out
les
xlat
pop
insl
jmp
pop
jmp
inc
xchg
pop
rorb
and
je
lret
jp
repnz
std
sub
cwtl
loop
nop
int
mov
fsubs
sub
push
xchg
sub
cmpsl
pop
sti
and
jg
jl
test
mov
lds
xor
inc
lret
push
dec
loope
jp
inc
loopne
subl
lods
push
loopne
ret
jge
popa
mov
insl
das
bound
mov
push
lds
fs
mov
add
popf
or
adc
imul
sub
cmpsl
push
out
mov
movsb
push
dec
out
enter
push
xor
add
cmp
push
out
cmpsb
pop
dec
mov
sarb
push
xchg
paddsw
ficoml
mov
push
js
test
daa
cmp
fidivrl
mov
or
sbb
push
inc
pop
adc
mov
shlb
cmp
sbb
push
std
sbb
xor
sbb
lea
repz
or
out
test
scas
push
push
out
mov
push
or
push
jne
jns
add
xor
jnp
fadds
or
mov
fmuls
jae
mov
cmp
repz
jb
inc
or
imul
leave
mov
xchg
fisttpl
xor
xor
jns
dec
daa
xor
loope
clc
movsl
fldcw
and
xchg
dec
xorb
out
add
mov
or
call
mov
in
jnp
mov
fs
adc
push
imul
in
bound
cmpsl
dec
jp
loope
pop
xchg
cmp
sbb
fnsave
sbb
das
adc
cmp
lea
int
std
push
pop
sbb
aaa
mov
test
rcrb
pop
aad
mov
sbb
and
popa
popa
mov
xor
adc
lahf
pushf
movsl
mov
sub
arpl
push
or
or
rorl
les
loop
ljmp
int3
dec
gs
or
icebp
add
js
enter
xor
adc
mov
mov
pop
dec
inc
adc
xor
rcrb
es
popa
inc
add
fdivrs
cmp
addr16
xchg
inc
mov
repnz
out
push
lea
cmp
dec
sbb
in
popl
ds
sbb
lds
fbld
lds
pop
cmpsl
jg
jl
dec
shrb
fisubrs
cmp
jle
adc
adcl
cwtl
jns
adc
ret
jecxz
ret
in
dec
cmpsb
out
sti
sub
xor
rcll
dec
ret
sbb
hlt
test
cli
jo
shll
out
jnp
xorb
pop
xlat
lret
xchg
xchg
fdiv
repz
outsl
dec
sbb
dec
ljmp
imul
mov
cmp
scas
ds
in
inc
sbb
fcmovu
lock
das
arpl
xor
enter
adc
inc
lods
mulb
mov
dec
pop
xchg
cs
aam
enter
into
sbb
and
mov
push
adc
nop
aas
pusha
loope
cmp
pop
mov
fwait
sub
ret
add
leave
rcl
loope
sub
in
xlat
or
cmp
sub
ret
leave
shr
jl
sbb
pop
mov
lock
cmpb
cmp
ja
or
and
dec
ds
mov
xchg
push
add
cmp
repz
dec
xor
cmpsl
aam
add
mov
xor
lret
insb
jp
aad
pop
jno
pop
fwait
fwait
hlt
shr
push
dec
negl
pop
add
jge
sbb
cmp
xchg
push
nop
push
les
sbb
add
cwtl
adc
mov
aad
adc
test
fwait
cmp
dec
scas
inc
mov
sbb
mov
adc
dec
repz
push
push
push
fmuls
bts
lock
das
xchg
sub
mov
popa
inc
mov
jge
out
imul
lds
lcall
add
mov
int3
imul
adc
add
rolb
dec
test
les
jnp
xchg
cmp
outsl
adc
ja
in
sub
xlat
jmp
fs
inc
xchg
xchg
loop
mov
out
imul
enter
mov
mov
pop
addr16
pushf
push
mov
data16
dec
pop
movsl
das
push
jne
push
dec
cld
loope
je
icebp
pop
shll
jp
jecxz
jae
xor
popa
inc
pop
mov
shll
scas
jge
or
mov
int3
cmp
cli
das
xor
mov
in
in
xchg
push
xor
mov
ja
inc
adc
out
sub
push
mov
pop
mov
lea
dec
jp
or
dec
loopne
jg
fidivrl
or
loop
out
jo
pop
cmp
push
jns
aad
mov
cmp
fisubl
jo
adc
and
fisttpl
xchg
repz
adc
pusha
sub
das
das
decl
out
imul
movsb
mov
mov
inc
jo
cmp
and
xchg
movsb
mov
cmp
dec
xor
int
xchg
pop
jbe
inc
sub
ljmp
cmp
in
push
leave
xor
ficoms
xchg
push
out
cmp
ljmp
ljmp
and
lret
xchg
arpl
aaa
jo
push
mov
mulb
or
or
jae
mov
stc
push
pop
adc
loope
push
adc
pop
inc
arpl
cmc
xorl
psrad
in
aam
ret
repnz
xor
aam
push
sub
sahf
int3
mov
and
pop
fnstsw
add
aad
into
rcrl
lock
sub
push
push
pop
sbb
outsl
sbb
and
xor
nop
cmpsl
push
dec
push
add
mov
rcll
addl
decb
push
xchg
insb
divb
loopne
xor
pop
jg
lods
cmp
mov
mov
sar
clc
mov
sbb
daa
push
add
mov
bound
rolb
scas
adc
adcb
lds
cli
mov
push
xor
mov
and
sbb
repnz
xorl
rorl
xchg
xor
call
add
sub
hlt
xlat
popf
pop
in
push
sahf
hlt
cmp
xchg
cmpsb
aam
xchg
rclb
mov
pop
shll
sbb
cs
push
inc
cmp
stc
jmp
psllw
mov
sbb
dec
sbb
cwtl
sub
ja
dec
das
icebp
fucomi
push
adc
push
orb
and
shlb
push
mov
mov
lods
shlb
dec
xlat
mov
in
inc
imul
jne
lcall
outsl
lock
lret
sbb
dec
call
or
ret
jle
xchg
mov
mov
sub
cmc
ret
sub
push
es
push
pop
dec
mov
pop
int3
pop
xchg
cltd
inc
or
jg
mov
push
sub
dec
in
cli
jno
ret
popa
ret
or
jle
lock
mov
push
mov
dec
sub
push
daa
and
adc
notb
mov
lret
xor
cmp
jmp
test
mov
xchg
mov
stos
xchg
jnp
arpl
push
mov
outsb
mov
lea
in
movsb
mov
lea
jns
and
sbb
inc
mov
aam
mov
orl
mov
inc
sbb
stc
icebp
push
pop
lods
mov
outsb
imul
cmp
inc
push
stos
and
dec
add
scas
or
pop
mov
ljmp
xor
xchg
out
xchg
jb
orl
mov
movsb
cmp
adc
scas
adc
loope
mov
dec
mov
mov
or
mov
rcrl
mov
xchg
in
daa
fs
stos
rorl
dec
shlb
xchg
cltd
call
adc
shrl
in
in
pop
mov
add
sbb
jg
mov
mov
movsb
sbb
loopne
and
stos
mulb
xlat
jne
pushf
mov
dec
dec
shrb
mov
jno
js
test
add
ret
mov
push
cmp
fsubrs
lret
sub
loope
inc
mov
sahf
sub
ljmp
mov
push
adc
adc
sbb
jecxz
or
insl
lods
jmp
jae
xchg
ret
call
mov
sar
pop
jmp
ret
push
pushf
mov
inc
decl
in
cmpsb
gs
in
or
xchg
push
lods
out
push
or
fisubrs
test
mov
sub
mov
stos
mov
jbe,pn
inc
pop
in
sub
inc
movsl
jno
hlt
out
imul
pop
xchg
and
xchg
cld
push
add
cwtl
mov
fidivrs
adc
pop
mov
and
sbbb
sbb
dec
lods
inc
and
fldenv
mov
idiv
and
vmread
xchg
int3
iret
adc
sub
xchg
in
sbb
or
lods
popa
pop
iret
int
mov
mov
pop
jnp
dec
inc
repz
adc
push
pop
sbb
adc
in
daa
ffree
or
mov
add
dec
into
add
mov
rclb
push
xchg
fs
in
je
ja
or
mov
and
mov
fldl
loope
pop
xchg
into
mov
pop
jg
xchg
ds
xchg
int3
test
mov
dec
cli
lcall
in
dec
fistpl
dec
mov
mov
sbb
dec
daa
movsl
mov
and
lock
ds
mov
lock
testl
pop
fsts
dec
or
leave
lret
stos
add
imul
cmp
or
sbb
sub
jp
sub
xor
ja
iret
mov
outsb
psubsb
push
out
fwait
mov
sbb
xchg
mov
pop
pusha
into
mov
fwait
ret
push
popa
jecxz
lods
xchg
inc
jecxz
jbe
cld
mov
pop
add
pop
mov
stos
mov
cmp
jmp
push
adc
cmp
add
addr16
pop
das
jg
cs
dec
pop
mov
mov
cmp
imul
jecxz
or
cmc
dec
roll
cmpsl
mov
mov
insb
out
out
cs
inc
pop
adc
push
enter
pop
cmp
test
sbb
and
add
lea
xchg
jl
enter
sbb
invd
stc
cmp
rorl
ret
xchg
dec
sbb
adc
or
pop
shlb
adc
mov
in
jbe
loop
sti
cmpsb
mov
cli
adc
and
notl
cmp
fcomi
adc
aam
int
jae
outsl
pop
test
inc
mov
cli
sub
xchg
addr16
stos
mov
test
add
push
and
daa
push
out
add
or
cmp
jno
popaw
rcr
cltd
push
in
bound
test
das
inc
inc
mov
icebp
movsb
fsubrl
dec
xor
stos
jae
add
lretw
jns
in
addr16
mov
add
sahf
pop
jo
sbb
push
sub
shlb
test
fbstp
push
xlat
push
adc
add
mov
jg
adc
gs
fistpl
ret
mov
sub
ds
lahf
out
fimuls
fistps
out
sbb
pop
and
xchg
xchg
nop
jb
cmp
sti
int
out
adc
sbb
push
inc
adcb
je
lds
xchg
int
jns
aas
xor
cmp
lock
push
mov
xchg
and
push
mov
loope
jmp
inc
fnstenv
imul
push
sub
sbb
loope
sub
lcall
clc
xchg
sarb
adc
inc
dec
jnp
jne
lods
fiaddl
dec
lods
jb
dec
movsb
ja,pn
pop
out
xor
imul
fiadds
add
mov
popf
stos
andb
adc
inc
rclb
and
out
add
inc
les
outsl
fs
outsb
cltd
pop
push
aam
push
add
movsl
mov
lods
pop
xor
and
and
or
xorb
push
mov
je
mov
push
cmp
jns
xchg
loope
mov
inc
out
mov
repz
mov
jnp
mov
sbb
jmp
pop
pop
sub
adcb
cmp
scas
push
push
leave
sbb
and
pop
dec
lds
je
push
ja
mov
in
leave
sub
lds
lods
cltd
xchg
out
in
jecxz
addr16
jmp
pop
ret
inc
xchg
push
scas
call
bound
scas
icebp
push
xor
push
js
jp
mov
mov
cmp
mov
lods
lahf
fidivs
mov
or
ret
and
dec
icebp
int
out
pop
jge
push
push
rcl
mov
rcrb
mov
daa
mov
scas
cmc
jo
xchg
xchg
sub
in
pop
clc
roll
sub
sahf
imul
add
xchg
sbbl
pushf
cli
mov
scas
sarl
fcomi
xor
fsubs
subl
cmp
push
fisubrl
nop
xor
mov
fcompl
sbb
xchg
test
mov
push
inc
repnz
sub
out
scas
frstor
or
fwait
pop
loopne
jae
pop
jecxz
cmpsl
test
iret
jns
inc
dec
xchg
jge
lcall
xchg
xchg
mov
lahf
das
out
stos
xor
scas
andl
mov
mov
jnp
rcrl
pop
cmp
sub
sti
pop
gs
insl
adc
cmp
out
push
push
fstps
idivb
adc
sbb
lea
sub
dec
ljmp
dec
push
pop
or
in
rcll
mov
jb
adc
or
jl
mov
and
test
or
test
mov
pushf
je
and
shll
popf
jae
in
imul
push
xor
pop
addr16
hlt
out
mov
inc
loope
mov
adc
jmp
rcrl
cmp
test
mov
das
adc
jo
dec
mov
popa
dec
int
je
imul
cld
jbe
push
ss
jbe
popa
pop
mov
into
mov
lahf
cwtl
or
fwait
mov
push
ror
rol
mov
xor
xchg
int3
pop
movsb
xchg
push
cmp
repz
xchg
sub
cs
std
insb
fs
repz
sub
push
cmc
stos
dec
ud1
dec
enter
dec
fnstenv
mov
adc
mov
inc
cmpsb
pushf
dec
rcr
icebp
push
xchg
add
xor
mov
aam
jne
rcrb
jmp
jl
jge
data16
leave
shr
mov
jle
xchg
neg
xchg
shl
dec
test
and
ret
imul
lea
aad
js
lods
mov
sub
ret
lcall
faddl
sub
inc
stos
dec
cmpsl
dec
pop
mov
pop
test
shl
push
loopne
xlat
aam
int
jp
jbe
cmp
dec
push
adc
fadd
xchg
int3
in
iret
xchg
imul
inc
in
sub
sti
inc
push
sub
pop
xchg
in
dec
add
cs
pop
jno
mov
xor
cli
sbbl
lcall
loope
enter
dec
jnp
xchg
add
mov
jns
inc
std
cmp
jp
xchg
pop
std
and
shll
shr
xchg
fisubl
inc
or
cmp
jmp
push
cltd
xchg
repnz
lret
popf
stos
ja
lret
dec
mov
cmp
xchg
mov
jnp
add
xor
iret
loopne
and
pusha
incb
js
adc
adc
xor
pop
xor
test
cmpsl
jmp
inc
and
icebp
in
fstp
pop
jg
vcvtss2si
dec
xor
dec
pop
push
and
jp
sub
mov
inc
iret
xlat
out
lods
mov
outsl
sbb
repz
sbb
push
ds
add
push
sbb
bound
fwait
xor
pop
imulb
cld
out
push
hlt
xor
mov
mov
ret
repnz
lret
dec
stos
mov
add
add
lock
pop
push
pushf
xor
arpl
mov
sub
cmpl
and
sbb
ret
add
cli
or
xlat
push
fwait
pop
rcll
cmp
dec
mov
icebp
sub
pop
inc
mov
enter
btc
sub
push
xor
es
out
cmp
xchg
add
in
sub
addr16
in
pop
jp
les
test
loop
fs
call
out
mov
mov
or
sahf
repz
jl,pt
jno
push
vunpckhpd
cmc
dec
leave
fadd
pusha
xor
sub
sub
push
prefetch
cmpsl
cmp
push
adc
stc
aaa
sbb
adc
jecxz
xchg
cli
sub
mov
shll
repz
cmpsb
mov
das
sub
in
push
dec
dec
sbb
xchg
sbb
mov
in
fwait
leave
push
test
out
or
lret
dec
xlat
or
xor
clc
sub
ss
xor
sub
das
bound
lods
in
aam
mov
outsl
and
jb
cwtl
push
jnp
push
mov
shlb
lods
jo
lret
xchg
lcall
ljmp
or
mov
in
and
jmp
inc
aad
std
jbe
xor
and
fdivs
out
jbe
lret
jmp
and
fcmovbe
dec
xchg
xor
jl
jmp
inc
jmp
and
shrb
pusha
adc
das
out
adc
mov
push
das
shlb
call
jnp
xchg
jl
add
enter
cmp
mov
push
mov
sbb
daa
pcmpeqd
std
and
in
out
dec
mov
sarl
add
dec
inc
rclb
inc
xor
or
sbb
cmpsl
js
ljmp
add
jae
stos
jns
sahf
mov
or
cli
adc
sub
and
inc
sbb
inc
cli
add
gs
mov
fisubs
jmp
xor
cvttps2pi
add
loopne
bnd
imul
icebp
mov
shrb
ljmp
aam
cmpsl
add
stos
and
scas
push
mov
and
js
hlt
leave
cmpsl
lods
ja
stc
loope
in
sbb
pusha
dec
sub
add
push
outsl
dec
ljmp
gs
lods
leave
pop
test
iret
icebp
test
imul
adc
xchg
sahf
mov
in
adc
stos
jbe
cmpsl
lock
js
in
and
icebp
push
add
cmp
add
and
cli
dec
fidivrs
aas
stc
out
cmp
out
jle
rclb
leave
pop
jl
sub
push
loopne
fadds
aaa
in
shrl
lret
out
sub
push
push
cld
icebp
add
or
xchg
fwait
push
cltd
cmp
mov
jecxz
jne
call
dec
sar
push
mov
push
mov
inc
hlt
icebp
cmp
jbe
sbb
fdivl
cltd
clc
and
xchg
mov
sub
xlat
aaa
adc
insb
add
mov
lods
mov
xlat
popa
rcrb
mov
jbe
xor
stos
push
sar
adc
dec
cmc
out
cmpsl
ret
or
xchg
push
xor
mov
test
mov
and
push
repnz
xor
cmp
in
stc
adc
in
mov
stos
cwtl
pushf
fadds
mul
mov
xorb
leave
shl
push
add
jo
xchg
sbb
mov
fcompp
clc
dec
mov
and
int3
xchg
ffreep
iret
pop
sbb
mov
andb
cmp
cmp
inc
dec
movsl
rolb
insl
mov
push
insb
sahf
outsb
in
filds
mov
and
outsl
cli
and
fdivrl
jae
fdivrp
inc
inc
mov
fldt
push
adc
insl
sbb
inc
fstpl
loopne
psubusb
fnsave
int
pop
test
push
sbb
push
xor
jno
leave
aam
mov
ljmp
inc
movb
mov
push
inc
int
cli
popf
inc
lock
xor
mov
jmp
repz
push
pushf
rcl
into
push
rorb
or
push
ds
sbb
jg
mov
dec
mov
pushf
xlat
pop
bound
or
cmp
ror
aam
dec
sbb
mov
lods
mov
stos
movsl
push
outsl
jl
push
mov
jae
push
xor
pop
sbb
mov
dec
xor
insb
insb
xor
dec
dec
icebp
ds
mov
mov
pop
js
daa
and
std
dec
popf
mov
fsubrs
pop
add
cmpsb
das
mov
fisttps
clc
cmpsl
cmp
xchg
test
sub
cmpsl
fnstcw
sub
fcmovbe
jmp
shlb
push
and
pushf
leave
dec
sbb
xor
scas
sbb
fisubl
push
pop
jno
repnz
xor
and
xlat
fimull
jno
push
mov
mov
hlt
addl
into
mov
stos
loop
push
stos
push
mov
inc
shll
mov
std
dec
jae
mov
xchg
nop
sbb
jnp
sbb
in
scas
adc
lea
push
lcall
lds
jmp
add
pop
outsb
xchg
fwait
pop
cmpsb
std
roll
scas
outsb
test
rol
cmpsb
dec
jns
in
test
jge
or
xchg
dec
sbb
pop
sub
movsb
cmp
icebp
int3
fscale
repnz
xor
jno
jp
push
inc
stos
popa
xchg
incb
and
pusha
jl
pusha
enter
mov
mov
jecxz
mov
sbbl
nop
cmp
ret
icebp
dec
or
push
shlb
cltd
or
adc
das
ror
test
ficompl
mov
stos
add
mov
push
push
sbb
sbb
xchg
mov
rol
xchg
xchg
or
pop
std
repnz
and
clc
mov
aas
int
sub
mov
lahf
mov
bound
cwtl
bound
inc
jo
fcomp
jle
cmpsb
addr16
or
add
ret
test
and
popa
imul
rclb
inc
repnz
out
xor
add
dec
mov
or
pusha
pop
pop
mov
push
pop
aaa
out
sbb
das
push
and
scas
pop
mov
mov
icebp
bnd
mov
pop
push
sbb
lret
dec
clc
xor
cs
mov
cmp
mov
pop
fidivl
xor
icebp
push
outsl
jge
pop
add
pop
cmpb
out
repnz
fildl
or
xchg
mov
sub
push
daa
mov
lcall
subl
pcmpgtd
sub
inc
ljmp
add
push
jb
xor
add
jnp
cmpsl
xchg
pop
or
mov
outsl
loope
or
insb
std
mov
xor
lret
cmc
jp
cmpsb
bound
sahf
adc
iret
in
arpl
data16
push
in
push
fdivr
andb
mov
mov
in
or
callw
mov
lods
stos
mov
jle
outsb
push
ljmp
jle
scas
pop
mov
subl
inc
popa
xor
mov
mov
ret
xchg
dec
xchg
test
xor
add
in
movsl
adc
xchg
fimuls
jecxz
movsb
sub
sub
pop
xchg
popf
das
out
repz
dec
and
shll
fcmovnbe
daa
dec
adc
imull
adc
fsubl
dec
mov
sahf
adc
fnsetpm(287
stc
cmp
sub
adc
mov
mov
push
insb
rcrb
push
stos
mov
mov
mov
das
or
inc
fnstcw
or
inc
insl
or
dec
or
mov
pop
jp
pop
stos
pop
repz
jbe
pop
ja
sti
sbb
fsub
dec
adc
lret
or
shrl
sub
jns
cmp
dec
mov
fcmovne
pop
movsl
faddl
cmpsl
mov
gs
out
mov
sub
adc
push
jns
add
shll
orb
int3
fs
fisttpl
int
insb
orb
lret
mov
push
enter
stc
or
xorl
testl
jo
or
xor
lods
add
dec
shlb
mul
mov
mov
push
stos
cmpsl
fisttpl
jns
call
clc
pop
call
sar
push
into
in
sbb
outsl
aas
push
jle
fidivrs
push
cld
std
test
into
jl
in
adc
out
pushf
lods
push
inc
sub
mov
ljmp
cmc
xchg
fisubrl
xchg
and
sub
push
jne
adc
cmpsl
pop
loope
sub
adc
lods
stos
mov
xchg
inc
ja
repz
inc
in
dec
mov
fbstp
xor
orl
dec
push
aas
roll
test
orl
pop
adc
imul
mov
sub
pop
mov
dec
divb
push
pop
push
pop
jp
sti
ss
imul
popf
pop
sub
push
lret
inc
xor
sub
and
xchg
jno
inc
imul
aam
adc
imul
jns
cli
or
and
jns
jnp
imul
push
push
inc
lret
fnstcw
push
in
cs
nop
sub
lea
in
mov
jo
mov
adc
pop
scas
dec
xchg
ret
push
clc
sar
aad
mov
shrb
scas
add
out
push
or
pop
push
andb
push
push
in
pop
pop
fcmovbe
mov
fstpl
xor
lock
div
pop
cmp
mov
sub
and
inc
loopne
bound
nop
mov
data16
lods
cmp
inc
mov
scas
test
push
aas
orl
xchg
cmp
inc
clc
popl
jne
lds
jmp
cmc
js
testb
inc
and
mov
jb
cmpsb
jle
es
outsl
xor
push
mov
cmc
addr16
lea
mov
pop
or
addr16
xchg
sbb
add
daa
movsl
or
inc
lahf
dec
mov
es
xor
fiaddl
pop
mov
out
dec
scas
xor
fsts
mov
xor
jl
fcomps
fistl
aad
fmull
fs
mov
out
mov
mov
js
imul
mov
xchg
mov
iret
arpl
add
test
jbe
ret
mov
cmp
sub
mov
jle
pushf
xor
adc
push
xlat
cmp
inc
scas
jo
or
jmp
js
dec
dec
xchg
addr16
les
nop
sub
sub
cs
pop
jae
pop
arpl
or
mov
sbb
popf
fisubs
pop
pop
mov
sbb
dec
in
out
sbb
jne
xchg
ret
pop
dec
dec
xchg
cld
xchg
and
shrb
in
mov
fiaddl
sub
mov
xor
add
sub
mov
mov
lea
sbb
adc
and
jp
mov
push
dec
sbb
lahf
sub
push
cmp
add
mov
jne
jno
mov
sub
push
decl
mov
pusha
mov
cmpsl
jne
xor
leave
push
pop
mov
dec
test
push
cmp
jle
mov
mov
fdivs
cmpsl
xor
addl
jecxz
xchg
in
adc
pop
loop
enter
xorl
pop
cmp
xchg
ds
ret
cmc
jns
shll
loope
lods
mov
cli
dec
sahf
pop
pop
push
dec
push
mov
out
sub
loope
push
aas
pop
jl
lahf
mov
mov
lret
push
iret
xchg
xchg
push
aas
mov
loopne
nop
jl
sbb
mov
xor
sarb
rcrb
into
push
ss
sub
sbb
xor
sahf
aam
das
cli
mov
xchg
xor
mov
cltd
aad
lret
or
mov
imul
add
lea
jno
mov
adc
mov
pop
sub
aad
lds
stc
lcall
pop
sub
aaa
mov
mov
mov
bnd
mov
out
lea
hlt
into
sub
ficompl
add
push
adc
mov
imul
push
xorl
and
and
test
xchg
add
jle
ljmp
jge
dec
test
jle
lea
fcoms
ret
std
jb
dec
push
inc
andl
inc
jbe,pn
mov
leave
add
incb
sub
std
jecxz
xor
pop
mov
stos
mov
lret
and
or
jl
sub
jp
in
mov
dec
push
sub
aam
cmpsb
rcr
jg
sub
mov
push
push
dec
dec
pop
mov
outsl
jae
insb
jo
add
pop
lds
pcmpeqw
sbb
into
loopne
push
gs
jle
int
call
mov
xchg
pusha
lcall
in
addl
push
jno
sbb
add
movsl
mov
xchg
das
movsb
xor
ljmp
std
jge
or
jl
cmp
sub
push
dec
xchg
push
das
xchg
int
ret
adc
fdivl
mov
adc
or
xchg
mov
out
insb
lahf
pop
les
arpl
movsb
call
mov
xchg
daa
std
sub
cmp
mov
inc
sub
out
jae
in
clc
add
imul
pop
mov
xchg
popf
hlt
rorl
iret
and
in
mov
mov
fcmovbe
fistpl
shlb
data16
notb
into
push
mov
sbb
push
inc
xchg
mov
ret
enter
daa
fcoml
sbb
lods
or
std
lods
subb
and
xor
cmpsb
pop
ds
les
std
pop
sti
adc
sbb
cmc
jmp
movsl
pop
fwait
das
lods
aaa
repnz
jae
inc
sub
je
repz
mull
outsl
jmp
mov
pop
arpl
sub
xor
ljmp
cwtl
inc
inc
test
es
and
das
pop
inc
leave
push
jecxz
add
jmp
jecxz
les
leave
push
xlat
daa
xchg
add
push
mov
sub
adc
xchg
xor
cmp
lock
lock
repz
mov
in
leave
xchg
jae
push
ljmp
adc
push
push
push
test
inc
aas
push
out
frstor
aam
out
mov
sub
andl
sbb
sbb
sbb
cmp
hlt
jne
xor
hlt
das
jp
dec
adc
pop
sub
mov
and
jo
mov
xor
xchg
into
outsb
lods
cltd
mov
inc
sub
test
xchg
cli
adc
pop
mov
mov
and
decl
sub
inc
xlat
or
push
pop
negb
jp
lods
add
push
insb
adc
pushf
and
pop
jns
scas
and
or
xor
push
add
sub
mov
jg
aaa
popa
pushf
jp
repnz
inc
test
popf
push
jecxz
cmpsl
inc
int3
dec
or
dec
dec
mov
dec
call
imul
dec
and
out
ds
nop
ss
push
inc
addb
pop
mov
jmp
push
aad
mov
cs
aad
insl
test
sbb
in
pop
dec
dec
icebp
loopne
sbb
cmp
popa
cmp
bound
push
mov
cltd
push
lret
and
popf
pop
into
inc
mov
pop
cmp
add
mov
mov
adc
js
leave
cmpsb
lcall
test
insl
pop
imul
test
and
mov
gs
inc
out
adc
pusha
out
dec
inc
jp
aas
or
mov
ja
mov
cmc
clc
sub
test
scas
lret
jbe
xor
or
je
decb
adc
and
cmc
pop
and
jo
decb
fstenv
iret
cwtl
mov
xchg
cmc
sti
das
xor
push
ret
push
loope
bound
xchg
loop,pt
adc
or
les
push
out
xor
jl
lock
imul
inc
adc
fldcw
call
mov
movsb
jmp
pop
mov
ljmp
adc
pushf
out
sbb
pop
push
jnp
repz
dec
and
mov
stc
repz
fwait
mov
mov
cld
scas
jb
push
dec
xor
add
mov
mov
jne
cld
and
orb
xchg
insb
int
daa
push
jl
ja
rorb
fisttpll
adc
pushf
cwtl
lods
into
icebp
stos
in
pop
jo
xchg
jg
jmp
mov
adc
mov
xchg
xor
add
subl
xlat
test
sbb
loope
dec
inc
stos
aam
mov
pop
push
jmp
cwtl
pop
or
cmp
xchg
or
or
sub
mov
and
dec
mov
mov
lcall
cmpsl
stc
enter
sbb
fcomps
mov
push
pop
out
into
pop
pop
sbb
mov
ja
js
cmp
fs
hlt
xorl
hlt
imul
lret
mov
xchg
fcompl
leave
ucomiss
aaa
jg
ljmp
jae
in
dec
mov
subl
mov
push
aad
jnp
pop
js
sarb
outsb
cltd
add
cmp
out
test
cld
mov
and
aad
icebp
test
push
sub
scas
cmp
sbb
xchg
fstl
in
xchg
outsb
mov
loope
inc
jp
sbb
ret
inc
mov
mov
jno
push
icebp
lea
xchg
loope
test
mov
inc
rcrb
push
sbb
out
add
out
pop
jl
sbb
fs
cmp
pop
push
mov
scas
rcrb
cmc
or
fiaddl
jne
icebp
scas
dec
scas
lds
pushf
daa
jnp,pt
pop
adc
jne
pop
sub
inc
sarl
jns
and
adc
loope
rorl
push
sbb
test
mov
pop
push
test
sahf
aam
mov
loop,pn
push
sbb
loopne
fsts
roll
testl
popf
xor
addb
push
les
pop
jne
cmpsb
cld
lock
mov
or
flds
or
push
mov
or
push
scas
mov
mov
mov
cld
adc
jmp
jg
xorl
clc
jo
stc
mov
popa
or
pusha
cmpsl
out
mov
xor
fimuls
in
insl
lcall
xor
cli
mov
ret
ret
ret
xor
lcall
jp
xchg
lds
xor
sar
and
xchg
repz
sbb
bound
lods
mov
ficoms
cmp
repz
pop
scas
mov
add
inc
sub
js
inc
clc
icebp
test
scas
dec
shlb
sbb
xor
cmp
ds
test
mov
lret
inc
mov
cmp
or
in
call
lds
dec
jbe,pt
cmp
lods
push
inc
jno
movsb
scas
pop
je
aam
pop
test
mov
in
popa
jle
dec
cwtl
mov
mov
xchg
xchg
fmuls
mov
outsb
xor
bound
mov
pop
ret
jne
push
out
arpl
add
inc
sbb
ret
lret
pop
dec
add
adc
mov
mov
enter
je
jg
jno
xor
push
movsb
adc
sar
shll
push
into
out
jno
pusha
xor
repnz
iret
lds
loopne
push
fsts
jmp
loope
test
movaps
lcall
xor
push
sbb
mov
mov
jge
out
popf
xor
loopne
dec
cmp
int3
dec
notb
int
int3
andl
push
inc
mov
cmp
xchg
es
scas
sti
lock
and
cmpsl
jmp
sahf
iret
mov
dec
and
hlt
pop
push
jmp
xchg
xchg
stos
push
and
out
dec
gs
pusha
mov
sbb
cmpsb
sbb
cmp
dec
or
jns
push
adc
dec
aam
lea
imul
lcall
movsl
data16
cmc
int
enter
dec
and
les
mov
pop
mov
lock
sti
add
cli
bound
inc
xchg
notl
or
add
inc
adc
lret
lret
adc
andl
xlat
movsl
mov
fadds
repz
outsb
dec
lret
roll
fisttps
push
frstor
add
fstp
xchg
push
out
inc
sub
loope
mov
dec
punpckhwd
xor
pusha
or
inc
cmp
jo
xchg
xacquire
pop
and
xchg
stc
adc
pop
add
jns
xor
std
jno
fdivrs
mov
xor
rorb
jl
xor
fsubr
dec
ja
and
cmp
in
aas
mov
or
cmc
or
pusha
fs
xchg
cmpsb
jns
enter
fsubr
dec
or
pop
jbe
test
mov
jmp
sahf
push
lcall
test
mov
lock
stos
pop
cmpsb
imul
xor
int3
inc
fistl
push
jecxz
bound
jb
out
xor
sar
cli
pop
adc
iret
shlb
mov
sbbl
arpl
add
jge
adc
push
movsl
adc
fs
xor
inc
call
cmp
inc
ja
dec
imul
jbe
mov
test
dec
mov
imul
adc
mov
dec
cmp
mov
jg
daa
push
in
xchg
iret
cli
or
adc
push
mov
incb
sub
sub
jp,pn
sub
push
out
std
in
adc
andb
psrlq
inc
mov
cld
xchg
sbb
dec
jmp
push
insl
and
in
imul
add
xlat
scas
lea
fiaddl
inc
and
push
insl
cmpsb
fdivs
adc
shl
out
mov
test
rol
inc
sbb
xlat
xlat
adc
out
pushf
lods
pop
cmp
xchg
stc
dec
lods
push
fmuls
push
rcrb
mov
xchg
loop
lock
into
rcr
mov
xchg
jne
data16
jno
mov
enter
out
jmp
inc
mov
mov
test
cmp
adc
mov
xchg
mov
in
ss
into
jb
jg
ret
cmp
add
pop
push
xchg
or
add
xorb
repnz
iret
jmp
je
xlat
xchg
sbbb
dec
inc
mov
mov
into
mov
daa
aad
lods
jno
mov
sub
dec
push
idiv
popf
or
stos
lods
jmp
cmp
aas
mov
scas
or
movsl
loope
or
aas
sbb
or
lds
xor
pop
mov
inc
out
icebp
push
out
js
inc
movsb
xor
push
adc
mov
test
sbb
mov
clc
pop
ja
lahf
mov
das
cs
dec
push
test
ret
or
mov
decb
or
in
mov
pop
cltd
add
mov
std
push
dec
xor
and
lcall
cmp
les
std
nop
popa
add
pop
and
rcr
lds
xchg
mov
dec
loop
imul
mov
adc
xchg
roll
dec
loope
fwait
inc
jns
cmpsb
adc
xchg
or
popf
std
mov
push
and
cmpl
aaa
test
mov
xchg
lahf
rorl
xor
push
push
jge
fs
xchg
frstor
stos
adc
mov
in
cli
clc
iret
sbb
sbb
push
repz
in
dec
ds
cli
in
scas
pop
sub
xor
sbb
adc
mov
ret
xchg
mov
fistps
scas
dec
divb
sti
add
fdivs
cwtl
loopne
jge
mov
inc
mov
jl
mov
aad
enterw
cmp
inc
es
pop
jae
lret
and
xor
xchg
xchg
push
stos
test
add
addb
push
cli
ss
and
cwtl
sbb
xchg
xor
fsubrl
movsb
pop
ljmp
jns
fdivrl
out
rcrl
icebp
jg
test
mov
xchg
lods
pop
xchg
sbb
sub
adc
js
lea
je
adc
sbb
xchg
xchg
pop
or
mov
lcall
sub
lret
push
dec
repnz
add
jl
push
lret
mov
adc
jmp
das
shlb
xchg
inc
push
jge
inc
xchg
xor
pop
mov
aaa
jno
shll
repz
jne
push
push
add
xchg
sbb
sbb
lods
adcl
mov
das
push
xchg
int
leave
mov
mov
lock
jge
cltd
sbb
and
sbb
nop
ljmp
mov
mov
aaa
adc
adc
push
test
out
inc
out
cltd
xchg
jp
xor
sub
sub
dec
and
adc
jo
dec
cmc
dec
call
mov
xor
pop
xor
mov
add
mov
ljmp
adc
or
sbb
lods
mov
stos
mov
icebp
into
pop
pop
cmp
lahf
daa
cmp
aaa
jb
pop
xchg
sbb
xorb
xor
pop
std
pusha
cmpsb
cli
sbbb
xchg
stos
pop
aad
addr16
jne
mov
inc
loop
sbb
mov
push
or
icebp
rcrl
xchg
sub
negb
out
sub
subl
xlat
mov
sar
test
or
cld
add
loopne
movsl
jns
stos
call
jb
int3
adc
insl
loope
rcrb
add
or
mov
mov
scas
inc
push
xchg
or
es
xor
in
jno
cmpsl
sbb
jl
data16
ret
rorb
hlt
int
push
je
push
sarl
test
pop
sar
pusha
je
sub
cmpsb
fbld
mov
aas
mov
pop
jecxz
sub
pop
add
pop
xchg
cmp
or
xchg
xchg
mov
outsb
idivl
ret
jmp
push
inc
inc
test
in
push
pop
pop
xchg
jg
mov
jns
fsubr
sbb
insb
push
mov
fiadds
inc
out
push
pop
push
push
push
das
aas
fsub
je
mov
sahf
pop
xchg
addr16
jae
xlat
lret
arpl
jae
imul
cmp
inc
ret
mov
sub
dec
ss
cs
adc
popa
inc
ljmp
lcall
lds
cmc
daa
test
imul
mov
mov
dec
mov
inc
dec
or
popf
jp
rol
cs
mov
mov
cmp
mov
and
push
sub
out
stc
cmp
mov
notl
adc
lea
xor
jns
mov
js
pop
test
adc
adc
mov
test
mov
sub
out
inc
pop
std
pushf
mov
icebp
icebp
jle
push
and
xchg
test
test
imul
xchg
leave
and
outsl
cmpl
pop
mov
cmp
jno
aas
punpcklwd
sbb
es
imul
std
aas
xchg
std
pop
and
icebp
arpl
inc
or
dec
out
ret
and
mov
xchg
pop
mov
or
movl
mov
fsubrl
pop
test
fwait
movsb
ljmp
insb
push
mov
test
iret
loop
out
mov
fistps
movsl
inc
add
dec
pop
lock
sbb
and
and
mov
push
loope
cmp
mov
mov
mov
jo
jmp
jnp
inc
cmp
jmp
les
pusha
cmpl
call
mov
sti
push
xor
xor
sahf
push
pop
pusha
jmp
sub
pop
sub
inc
fadds
sbb
xchg
fsubrs
stos
mov
cmc
sub
jecxz
add
es
pop
and
and
push
negb
mov
gs
aaa
inc
inc
popa
cmp
xor
adc
sub
cwtl
testb
mov
jno
repnz
cli
dec
xor
aas
aas
inc
cmpsl
fistps
cmpsb
mov
add
lcall
jle
mov
arpl
pop
jg
int3
arpl
adc
icebp
or
or
shll
loopne
icebp
frstor
sub
adc
repnz
jp
dec
out
ret
mov
fdivrs
cmp
sbb
dec
cli
mov
and
or
cmpsl
inc
fnstenv
decl
push
repz
or
nop
and
and
and
aam
mov
push
cmp
daa
xchg
sub
into
lock
adc
repz
aas
pop
dec
mov
mov
or
mov
testl
dec
and
jnp
inc
pop
mov
dec
insb
daa
mov
xor
add
pop
fs
pop
rcrb
stos
pop
dec
mov
out
mov
cld
mov
pop
jecxz
enter
sbb
int3
adc
stc
or
lret
mov
jne
add
pop
inc
mov
xchg
in
mulb
pop
add
mov
cmp
adc
out
xlat
sbb
call
push
mov
out
jo
xchg
push
sub
cs
addr16
repz
xchg
sbb
ss
in
icebp
mov
push
repnz
fistpl
or
cmp
cmp
and
push
sbb
lret
jl
dec
dec
pop
xchg
mov
mov
sbb
in
cmp
rcll
repnz
add
xchg
pop
aad
aaa
and
enter
xor
adc
rorl
into
pop
lcall
repnz
inc
pop
push
and
adc
sbbl
adcb
int3
fdivl
pusha
jecxz
dec
mov
movsl
inc
push
je
cmpb
jno
ret
mov
xor
fcoml
push
mov
mov
stos
pop
imull
inc
and
movsl
aad
clc
stos
mov
in
xchg
xlat
and
cmp
xor
xlat
shlb
jne
jge
adc
add
and
or
mov
inc
xor
fisubl
neg
test
loop
push
mov
dec
jno
cmpsb
adc
or
mov
in
cmp
orl
popa
mov
mov
jbe
js
lcall
mov
inc
cmp
jl
mov
sbb
scas
call
adc
sbb
sahf
xor
mov
or
fldenv
in
rclb
ja
test
enter
xchg
lds
cltd
cltd
pop
enter
sahf
int
addb
dec
gs
insb
or
lahf
xchg
fildl
call
in
or
mov
jge
add
xor
dec
lahf
and
xor
test
aam
fidivs
cli
push
mov
repnz
inc
fimuls
cltd
jo
jae
aam
cmc
ror
mov
rcl
or
negb
sarl
mov
scas
xchg
jbe
cmp
mov
in
test
cltd
in
aaa
sbb
add
test
pop
mov
jmp
xor
nop
inc
xchg
xchg
mov
jecxz
fildll
cmpl
mov
lods
push
xlat
or
cli
outsl
xchg
aas
out
cmp
add
mov
pop
out
rclb
hlt
dec
mov
sub
fmull
lock
jecxz
addr16
pop
jge
adc
test
jp
scas
xor
add
loopne
or
or
sub
inc
sbb
and
inc
push
sbb
outsb
xor
pop
pop
pop
push
or
mov
jmp
rol
pop
movsb
mov
imul
fcmovnbe
arpl
call
movups
push
movb
and
mov
mov
mov
dec
and
add
cmpsb
faddl
sub
test
scas
jnp
out
jp
data16
jl
and
jle
fnstcw
lea
cs
lret
gs
mov
int
push
add
je
or
mov
jno
fcomi
out
jp
pop
fcomps
lea
repnz
push
out
pminsw
sbb
cmc
push
push
outsb
stc
and
into
nop
scas
jle
dec
push
xor
flds
bound
sub
test
push
fmuls
push
pop
adc
jbe
push
movsl
xchg
jno
push
negl
pop
mov
push
fsubl
bswap
or
out
push
lods
mov
mov
xor
int
lods
pop
shlb
add
inc
lret
fbld
int3
push
in
movsl
les
and
add
lock
in
and
loope
push
pusha
cmp
push
fistpll
adc
addr16
jb
pop
es
cli
test
sub
movsl
in
push
aas
cmp
adc
mov
cmp
je
jle
out
mov
add
jge
sub
cmc
xchg
mov
imull
cmpsb
imul
push
sbb
or
pusha
adc
in
shlb
push
les
arpl
xchg
test
add
mov
pop
decb
jmp
mov
adc
and
jae
es
gs
adc
inc
aaa
pushf
mov
and
orb
pop
cmpsb
cli
imul
push
jnp
cmpsl
push
push
aam
lea
imul
sub
shl
cmp
ja
jmp
sbb
add
lahf
pop
push
insb
addr16
xor
je
popa
dec
sti
xchg
jbe
fscale
test
dec
fldenv
or
sub
je
aam
jge
pushf
fs
lret
dec
xlat
mulb
lods
push
inc
andl
mov
jns
in
sub
shll
jb
push
sub
add
fs
in
sbb
sub
xchg
and
or
arpl
dec
add
mov
xchg
push
mov
sbb
jae
cmp
in
lods
lret
push
int
fwait
add
and
push
out
mov
fwait
in
inc
xchg
inc
jge
cmp
push
aam
popf
mov
aam
iret
sbb
add
adc
mov
and
mov
out
and
repnz
popf
xlat
imul
xlat
mov
and
cmp
mov
add
add
test
xchg
mull
pushf
rolb
addr16
jle
xchg
dec
stc
xor
and
mov
jbe
sub
sti
mov
mov
sbb
sbb
xchg
inc
sbb
push
int
idivb
and
pop
dec
shr
or
cmp
xor
mov
pop
cmpsb
add
lea
stc
repnz
cmc
mov
dec
cmp
popf
lods
mov
mov
pop
mov
push
adcb
jle
stos
nop
faddl
sti
icebp
or
sub
pushf
and
out
push
sub
push
mov
xor
fcom
push
cmp
enter
sub
fs
data16
das
scas
mov
push
push
lods
and
aam
fyl2x
adc
jg
movsl
sub
arpl
push
inc
es
push
pop
cli
cmp
jno
sub
dec
jne
pop
jle
pop
xchg
scas
int
dec
cmpsb
or
rcr
es
sub
xchg
inc
pop
pop
ret
shl
sbb
pushf
fdivrl
mov
cmp
sbb
repz
insl
jmp
jo
inc
lahf
jns
int3
jne
push
call
test
xorl
xlat
mov
loopne
clc
ret
push
and
or
ljmp
cmpsb
aam
addb
push
xor
sbb
lds
push
icebp
add
dec
xchg
cli
cmpsb
push
mov
cmc
push
mov
ja
mov
psubq
mov
jnp
inc
mov
sbbl
sti
mov
enter
pop
mov
stc
pop
movsl
cltd
incb
mov
ret
sub
jg
repz
and
push
and
loopne
push
mov
test
inc
dec
sbb
xchg
out
sbb
and
inc
pop
mov
pushf
add
add
divl
cmp
or
jbe
push
and
xlat
dec
addb
addr16
mov
insb
jno
cmp
ljmp
and
sub
and
push
cld
in
in
jmp
fwait
in
ret
pop
pushf
arpl
mov
loopne
mov
mov
repz
adc
add
mov
and
mov
cmp
pusha
dec
mov
outsb
pop
mov
inc
hlt
cmpsb
cs
push
test
ffreep
inc
iret
fcmovnu
nop
cli
xchg
mov
pop
dec
mov
sub
pop
sbb
fbld
fistps
aaa
adc
adc
daa
push
jge
mov
in
xor
int
aaa
push
add
pop
int
or
dec
std
popf
push
sbb
les
push
xchg
aad
mov
push
adc
ss
icebp
or
negl
pusha
imul
cmpb
popl
shrb
adc
mov
insl
adc
dec
or
or
pusha
inc
mov
xchg
xchg
inc
lea
add
scas
mov
imull
incl
add
scas
lds
repnz
mov
jo
es
mov
push
jae
xchg
dec
popa
in
fdivrs
imul
movb
stc
insb
arpl
mov
mov
or
sub
sub
sbb
mov
enter
jnp
repz
push
adc
pop
mov
pop
jno
add
adcb
jge
lahf
xor
das
sub
add
andb
sbb
mov
imul
xchg
ret
mov
test
xlat
ljmp
mov
shl
or
mov
jb
cmp
and
scas
push
mov
mov
lds
mov
mov
jb
out
rcrl
push
add
mov
ss
aas
sbb
cmp
sarb
pop
or
dec
or
inc
sbb
insb
mov
sbb
xchg
aam
xchg
or
roll
jge
sbb
mov
dec
jo
shlb
xchg
jne
fs
ljmp
lods
int3
push
dec
addr16
pop
aaa
movl
pop
adc
pushf
dec
xchg
dec
push
fwait
pop
orb
jns
add
push
xchg
xor
into
aas
xor
sbb
and
mov
aas
aas
xchg
jns
mov
pop
push
es
test
mul
xor
jns
stc
hlt
sar
arpl
in
in
inc
sub
ja
jo
lods
orl
out
call
imulb
xchg
ss
test
iret
ja
shl
movsb
pop
fsubrs
fwait
lret
and
repnz
fisttpl
iret
sahf
push
cmpsl
jbe
cmpsb
aam
mov
inc
dec
cli
repz
lea
out
popa
and
mov
dec
mov
add
in
sub
test
mov
and
notb
daa
int
popa
pop
inc
fwait
dec
lods
or
pop
sar
daa
in
pop
test
adc
push
push
daa
rcll
sub
filds
dec
in
cmp
jmp
sbb
pop
lods
fiaddl
xor
cwtl
pop
pop
and
xchg
ljmp
popf
pusha
mov
push
adc
cmp
fs
dec
movsb
cltd
or
jno
pop
inc
pop
mov
inc
push
cld
sti
mov
sub
sub
xchg
roll
dec
loop
mov
loope
pop
mulb
bound
in
arpl
inc
cs
sahf
push
scas
hlt
cs
stos
mov
jo
in
jp
inc
add
out
mov
mov
jno
and
push
pop
daa
push
mov
or
dec
outsb
jecxz
sti
push
jns
out
add
in
push
pop
sbb
add
scas
jle
int
push
adc
mov
and
dec
push
add
pop
ret
pop
dec
jp
xchg
jnp
jg
inc
dec
push
mov
movsb
testb
sub
cmc
shlb
push
xlat
mov
inc
imul
mov
jecxz
push
jmp
sub
nop
adc
ret
pop
jcxz
pop
jo
lret
loope
push
mov
add
jge
xchg
test
sub
adc
mov
inc
push
xor
repnz
pop
into
daa
mov
imul
faddl
ja
pop
not
sbb
into
insl
test
pop
sub
sbb
inc
mov
mov
xor
push
rorl
jbe
stos
jecxz
lock
mov
lods
jnp
mov
push
jl
in
ret
stos
sub
cmp
cmp
popf
cld
mov
nop
loopne
insb
add
dec
stc
mov
ja
sub
mov
mov
lods
cmp
scas
stos
je
mov
cmpsl
inc
aaa
pop
push
stc
jmp
cmp
xchg
sub
adc
shlb
sahf
movsl
in
cli
dec
adc
clc
xor
mov
clc
jmp
insl
sahf
mov
es
test
int
enter
add
jle
rep
lock
push
jecxz
mov
sbb
fidivrs
xchg
or
jne
hlt
cs
sub
enter
mov
mov
inc
lcall
or
daa
sub
popf
mov
push
movsl
ds
jle
lock
lcall
push
dec
dec
jns
popa
dec
jno
adc
loope
xchg
std
sbbl
mov
mov
aad
loopne
test
add
aad
or
out
js
repz
shl
cltd
jecxz
dec
sub
ja
in
aad
adc
negl
sub
cmpsb
mov
aad
mov
insb
xchg
mov
repz
fnstsw
xchg
nop
in
dec
xor
lahf
adc
jmp
adc
jp
adc
and
adc
and
mov
rorb
jge
sarb
repz
sbb
inc
clc
and
inc
rcr
push
sub
and
pushf
shr
or
and
mov
mov
pop
dec
xchg
or
xor
jae
mov
dec
sbb
les
dec
jno
inc
leave
ja
js
aaa
xor
dec
and
shll
inc
cmpsl
xor
movsb
std
into
sub
xorl
es
fildl
in
sbb
and
xchg
and
aad
dec
int3
adc
es
cmpsb
icebp
adc
into
sub
dec
mov
in
sub
fisubrs
in
mov
push
mull
or
dec
jl
loop
sti
fs
and
lods
ja
enter
cwtl
or
shl
inc
pop
dec
mov
rcrl
test
xchg
push
in
adc
icebp
mov
adc
mov
inc
ja
jns
dec
and
popa
mov
js
jns
frstor
jecxz
xor
xchg
pop
popa
loope
movsl
mov
add
out
dec
pop
sarl
lcall
mov
shll
scas
or
add
lds
stos
dec
add
pusha
cmpsb
cmpsb
push
imul
push
movsb
stc
dec
je
jp
jmp
mov
call
or
and
jb
dec
inc
fcompl
clc
gs
lahf
daa
sbb
add
dec
add
in
movsl
push
mov
xchg
and
mov
fidivrl
fnstenv
inc
xlat
and
js
or
xor
mov
cmp
push
add
fcompl
pop
jle
cmc
insb
lods
sahf
or
aas
das
xchg
dec
jmp
pop
sbb
in
push
pop
loopne
aas
sub
sti
jecxz
jno
data16
lock
xchg
ret
frstor
push
mov
ja
pop
jno
lcall
mov
jle
jnp
nop
pop
rcrl
jg
orb
clc
mov
cwtl
pop
test
pop
sub
mov
inc
jne
lret
adc
dec
or
enter
stos
out
out
push
xchg
fcoml
and
pop
shlb
into
sub
fisubrs
inc
in
ret
nop
es
in
sbb
mov
outsl
add
sahf
insb
push
xchg
movsl
mov
shll
add
adc
adc
sbb
int3
icebp
mov
push
jl
mov
icebp
and
scas
push
sbb
cmp
lahf
jmp
inc
sbb
cmp
cmp
xor
clc
push
mov
cltd
in
loope
or
jb
add
js
mov
dec
pop
pusha
mov
adc
movsl
mov
neg
mov
xchg
dec
push
sbb
pop
out
push
or
dec
xor
je
stos
nop
arpl
xor
or
shll
xchg
and
push
jo
pop
inc
mov
jbe
jp
popa
cmp
notb
lcall
lahf
clc
pop
mov
data16
push
cmp
loopne
out
inc
imull
adc
jg
fcompl
les
popa
sub
scas
lret
push
dec
out
data16
fisttpll
jbe
outsb
jnp
sbb
pop
cli
shlb
ljmp
push
nop
pushf
cli
cmc
sub
int
jb
add
xor
mov
addb
cmp
mov
ss
xchg
xor
nop
lahf
js
push
out
pop
fs
jb
mov
push
repnz
dec
or
cs
and
push
xchg
mov
rolb
push
out
rcrl
notb
xor
es
mov
xor
scas
out
ret
add
mov
push
imul
push
sar
push
mov
adc
sbb
or
sub
into
inc
fidivrs
fcomi
mov
sub
push
or
mov
movl
xchg
pushf
push
sub
jnp
mov
pop
push
cwtl
cmp
mov
fimull
pop
sub
adc
lods
and
pop
cmp
jb
xor
mov
scas
enterw
mov
imul
add
mov
adc
mov
popa
icebp
hlt
mov
adc
adc
les
out
jns
fwait
add
icebp
cmp
or
inc
push
filds
std
outsb
fiadds
dec
or
pushl
je
test
loopne
adc
sub
fs
sub
sub
aas
and
test
dec
int
das
fcoms
dec
push
mov
and
dec
addr16
call
ds
sbb
scas
sub
jo
test
lock
jne
inc
push
dec
loopne
sub
lock
push
test
xor
jle
sti
adc
aaa
xchg
mov
mov
fcompl
jns
and
sbbb
sub
xor
repz
lret
sbb
sub
popf
adc
mov
fiadds
adc
mov
jl
lock
fnstcw
in
ds
cmpl
dec
movsl
or
jno
jle
daa
rorl
xor
ja
rcr
jb
jecxz
ja
cmpsl
mov
inc
icebp
rol
mov
sbb
inc
adc
and
push
pop
lds
ja
mov
inc
xor
ss
test
fwait
dec
je
addr16
mov
cmp
rcr
add
mov
sahf
jno
ret
push
das
pusha
in
push
xor
mov
cmp
sub
dec
push
jno
cs
into
or
xchg
cmc
cmc
sahf
jmp
push
jne
inc
testb
xchg
stos
xchg
dec
addl
rorb
inc
mov
jae
jl
rcr
jmp
stos
dec
inc
loop
jg
ffree
lea
cmp
mov
outsb
testl
mov
insb
in
insl
leave
inc
icebp
ss
pop
cmp
xchg
sarl
lods
das
loop
cwtl
int3
sbb
push
dec
stos
jge
jo
jne
jmp
jne
insl
pusha
mov
jns
xchg
xchg
ret
push
rorb
cmp
je
cmpsl
stos
shrl
pop
cmpsl
add
push
rclb
add
aaa
lods
dec
mov
loope
shl
sbb
jmp
loop
leave
xchg
jo
push
or
pop
imul
je
out
andl
gs
and
adc
in
cmpl
sub
push
out
mov
mov
sbb
ret
mov
je
mov
sbb
arpl
sahf
gs
push
imul
pusha
addl
jb
cmp
ret
push
cmc
mov
jl
ss
jae
xor
scas
movsl
pushl
jp
adc
insb
es
push
out
fidivrl
add
push
std
adcb
fidivrs
stos
int
cltd
mov
jne
fwait
pushf
push
adc
out
xchg
push
insb
mov
popa
cs
jnp
sbb
dec
sahf
pop
ret
lods
sarb
xorb
cmp
lock
jno
insl
mov
and
imul
pop
je
sbb
mov
pop
push
adc
push
and
push
mov
add
adcb
jne
data16
jbe
cmpb
cli
cld
lahf
jbe
sbb
push
jl
mov
aaa
aad
or
jbe
sbb
loop
mov
pop
lock
mov
or
cmc
pusha
ret
pop
movsb
cld
test
lahf
mov
fisttpl
fstpt
mov
shl
arpl
jae
xor
jecxz
lea
jb
xor
inc
sti
imul
push
xor
pop
xchg
mov
push
sbb
dec
into
push
mov
mov
mov
jl
repz
imull
imul
add
out
jo
cmp
or
scas
flds
push
mov
jnp
adc
pop
addb
ret
lods
and
test
mov
andl
dec
in
pop
out
fidivrl
loop
pop
dec
or
clc
and
in
push
cli
fadds
mov
xchg
in
sub
push
push
jb
pop
outsb
push
lds
jo
cmc
xchg
or
inc
clc
repz
es
dec
push
pusha
add
leave
push
inc
loopne
dec
hlt
push
xchg
mov
push
push
pushf
lret
fnstcw
cmp
inc
test
out
jne
fidivrs
outsl
test
dec
jl
adc
cmc
sub
data16
rcrb
lea
or
adc
les
cmp
mov
fmull
push
pop
rcrl
ret
add
filds
mov
lods
inc
out
idivl
orb
inc
faddp
add
xchg
rolb
movsb
add
mov
repnz
xchg
sub
push
push
dec
jne
inc
movsl
or
mov
fnsave
mov
rorb
jnp
roll
pop
insb
jl
lods
rcrb
xchg
cltd
push
mov
mov
push
es
rcrb
data16
jne
and
push
loopne
lret
int
jmp
mov
xchg
cmpsl
push
dec
out
adc
xchg
xor
outsb
mov
ds
jg
nop
jnp
xchg
idivb
dec
loopne
jnp
ficoml
cwtl
xor
or
mov
pop
jmp
dec
bnd
mov
sub
push
stc
test
cmp
add
movsl
push
xorl
aad
call
out
pop
lods
scas
fisttps
enter
jmp
cmp
xchg
mov
clc
cwtl
add
in
imul
cmp
jb
sbb
jo
jmp
lahf
jae
ss
std
xchg
pop
adc
and
fwait
inc
or
add
sti
jge
cmp
push
cwtl
rcl
repnz
sbb
sbbl
mov
arpl
loop
mov
fmulp
ljmp
arpl
and
aaa
fmul
mov
nop
daa
dec
lock
sub
xor
std
movsb
pop
rcrl
jae
in
das
into
mov
into
out
pop
cli
testl
sub
inc
lds
jmp
lea
push
call
aaa
stos
loope
addr16
push
orl
cmp
scas
bound
mov
in
out
rcr
loope
jle
stos
addr16
pop
mov
fyl2xp1
js
lret
cmp
mov
lods
ficoms
add
in
shll
ret
pop
mov
pop
lret
fistpl
mov
and
scas
xlat
pop
inc
adc
xchg
int
popf
mulb
jl
push
out
add
je
aam
sbb
or
hlt
pop
jmp
push
push
inc
xor
cmpsl
inc
jge
pop
movsb
fwait
adc
out
mov
flds
fnsave
mov
cmp
xor
inc
sbb
sub
jb
fwait
adc
mov
add
and
or
cmp
shl
pop
les
cmp
les
ret
and
pushf
leave
push
cwtl
adc
xor
and
cmp
jl
sub
cmpsb
int3
scas
mov
in
test
dec
jns
daa
mov
push
mov
mov
cmp
out
movsl
cs
pop
dec
and
imul
fcoms
xchg
pop
cmp
or
jp
aas
mov
mov
or
sbb
or
sbb
cmp
rclb
fs
cltd
mov
shr
test
shrb
sub
lret
sti
ja
into
insb
dec
sub
ret
or
ljmp
jmp
ss
pop
mov
js
pop
orb
mov
sub
repnz
and
lods
push
es
sub
inc
stos
aaa
sub
bound
enter
sbb
and
das
stc
rclb
cmpsl
insb
lods
gs
pop
decl
clc
fisttpl
imul
xchg
jmp
inc
outsb
xchg
in
shll
add
jb
leave
jge
inc
das
int
xchg
fst
pop
sti
loop
inc
push
xor
xor
xchg
or
outsl
jge
testl
adc
loop
adc
insb
cmp
jno
or
icebp
rcll
fisttps
jb
testl
pop
pop
jl
pop
pop
adc
test
mov
pop
add
cld
xor
xchg
mov
mov
xor
inc
outsl
cli
sbb
jae
pop
pop
aam
mov
sbb
psubsb
mov
cmp
add
aam
inc
divb
lods
rorb
mov
jo
sub
stos
inc
and
mov
sbb
push
enter
lds
inc
xor
jmp
fs
add
or
adc
xchg
dec
mov
testl
pop
add
mov
adc
leave
loope
cli
mov
adc
repnz
pop
sti
dec
nop
test
jmp
ret
subl
adcb
scas
xor
xchg
push
outsl
sub
jmp
inc
jb
mov
cmpsl
mov
ret
jp
inc
add
add
outsb
cwtl
add
xorb
sub
mov
dec
aas
shl
out
fmull
int3
jne
pop
sbb
sarb
cwtl
adc
inc
iret
jns
push
arpl
iret
repnz
pop
add
js
mov
ss
cmp
xchg
int3
cmpsb
or
inc
lock
mov
mov
in
sti
jge
push
enter
stos
mov
jl
out
data16
pop
dec
jb
xchg
out
push
jmp
in
add
shrb
xor
xchg
loope
push
sub
sbb
ss
mov
dec
mov
push
push
loopne
popa
jo
movsb
and
mov
gs
pop
and
out
and
stos
mov
push
in
aaa
sti
sub
hlt
mov
lds
jb
lcall
xor
aam
das
subb
cmpsl
cmp
jnp
adc
mov
push
pop
cld
ja
in
xchg
inc
and
das
sub
xorb
inc
dec
adc
adc
and
leave
stc
push
imul
test
out
sahf
cmp
xchg
mov
psraw
push
fwait
stc
jg
xor
xor
outsl
sbb
lahf
je
stc
sub
pop
jecxz
lret
imul
enter
scas
iret
dec
xchg
fwait
mov
xchg
popl
adc
push
dec
clc
push
cld
outsb
sub
adc
push
and
add
and
or
loopw
loopne
push
inc
stos
sub
push
push
add
xor
sbb
lock
xor
lcall
push
imull
out
and
in
push
sub
jae
xchg
cwtl
or
push
jg
call
and
je
pop
xchg
mov
dec
xchg
pop
gs
roll
pop
cmpsb
in
lock
xchg
push
inc
mov
test
and
push
test
imul
cwtl
or
js
outsl
sarb
sub
lock
jle
lods
notrack
mov
push
lods
xchg
pop
ds
adc
pop
subb
add
mov
pop
xor
and
jne
push
jb
jl
mov
or
mov
mov
outsb
or
and
add
pusha
xlat
push
xchg
push
or
fbstp
ss
xchg
out
sub
es
push
rcrb
clc
sub
mov
push
mov
xor
loopne
js
hlt
ficompl
sbbb
fwait
popf
lret
stos
and
mov
push
scas
ss
loope
xchg
enter
adc
fistpll
mov
dec
xchg
adc
iret
push
and
sti
in
scas
xor
xchg
or
jne
jl
cmp
insb
movsl
xchg
sbb
out
fisubl
inc
sbb
je
bound
mov
and
sub
dec
mov
aam
or
test
popa
lahf
iret
mov
into
nop
and
daa
mov
leave
pop
mov
hlt
leave
outsb
sbb
mov
xchg
push
sbb
pop
cmp
or
daa
mov
pop
ret
popa
in
mov
pop
outsl
sti
nop
mov
cmp
pop
cltd
push
stos
out
mov
bnd
add
xchg
cmp
lds
mov
fistps
push
mov
jns
addb
insb
cmp
dec
inc
mov
mul
fidivl
jl
mov
adc
roll
sbb
pop
jl
iret
pop
mov
push
popf
jae
ss
jmp
roll
rorl
cmc
ret
push
mov
dec
cs
pop
js
in
cmpsl
xchg
insb
arpl
out
mov
cli
movsb
xor
das
loope
test
pop
hlt
jmp
sti
iret
cmp
or
sbbl
pop
in
scas
fs
dec
push
je
in
fcomps
loope
adc
rcrb
jl
and
cmp
or
lcall
cld
pop
pop
jge
mulb
jge
mov
or
lcall
push
dec
add
xor
out
cltd
aad
imul
sub
push
mov
add
hlt
push
mov
fstp
pop
dec
rcrl
pop
not
fwait
jl
pop
lock
push
cwtl
jae
pop
arpl
int3
pop
mov
jecxz
out
loope
addr16
or
sub
cmc
cmp
mov
lock
xor
mov
sub
insb
idivl
pop
jecxz
jge
cs
mov
mov
mov
scas
fcoml
pop
into
sbb
ret
jnp,pt
mov
add
in
leave
ss
stc
mov
fisubrs
imul
and
clc
jmp
or
cmp
dec
lret
cli
xor
and
mov
push
mov
scas
fldl
sahf
aad
mov
popa
loop
lods
mov
or
pop
add
cmp
xchg
out
aas
pop
push
mov
repz
movsb
int3
in
cmp
stos
test
scas
xor
and
mov
jge
outsb
jbe
or
daa
in
jns
push
stos
or
jno
sub
cwtl
daa
sbb
mov
jnp
outsl
out
fmuls
pop
xchg
mov
adc
cltd
lahf
data16
call
jge
fdivrp
sub
pushf
jmp
mov
in
aad
pop
or
and
add
cltd
aad
inc
jno
scas
pop
outsl
xor
adc
insb
xchg
push
test
mov
mov
int3
popf
sub
mov
cmp
dec
jp
les
ficompl
in
jmp
mov
inc
shl
out
dec
fwait
xorl
stc
xchg
xchg
mov
lods
adc
jmp
inc
sub
loopne
mov
mov
in
lret
and
test
dec
inc
daa
insl
xor
call
test
shll
cld
cmp
leave
lds
iret
and
push
aam
adc
sub
xchg
jno
gs
inc
push
cli
push
add
insb
dec
push
xchg
push
jo
cwtl
ret
mov
mov
fcomps
insl
push
divb
add
enter
shll
mov
and
aad
ret
inc
ss
sub
adc
cmp
inc
mov
stos
icebp
clc
fisubs
ja
mov
and
push
pop
xlat
jge
popa
mov
fwait
push
and
mov
dec
mov
jl
push
add
push
mov
or
sahf
jns
pop
lods
fistps
lret
adc
insl
mov
sub
mov
sub
jle
lahf
jle
jl
test
xchg
dec
adc
add
mov
mov
xchg
push
xchg
jns
mov
sahf
sbb
leave
and
jmp
cmp
out
cwtl
dec
cmp
xor
sarl
sub
xor
push
xchg
xor
leave
test
mov
aam
xor
jbe
or
push
push
sub
outsb
cmp
mov
pop
jecxz
xor
sbb
mov
incl
daa
push
push
pop
divb
insl
and
int3
in
lret
inc
add
jg
rcrb
adc
dec
mov
mov
jge
in
and
mov
popf
push
sarb
mov
add
cwtl
adc
movsb
and
add
xor
mov
adc
scas
adc
icebp
lret
cmp
pushf
mov
cmp
in
cmp
cmpsl
sbb
lods
push
jecxz
push
push
adc
movb
or
loope
inc
pop
sub
int
lds
inc
sar
mov
push
test
xchg
add
mov
test
mov
in
repz
jg
addr16
fnsave
push
repz
out
inc
dec
push
push
ja
lret
mov
movsb
inc
mov
inc
inc
cmp
mov
jo
sub
lds
xchg
gs
jne
inc
outsl
in
and
mov
jle
mov
stc
cmp
scas
test
mov
inc
pop
mov
sub
or
mov
xchg
loopne
add
sahf
jmp
cmp
inc
notb
jo
int3
inc
js
inc
pop
cmp
into
jns
movsl
or
pop
outsl
data16
xchg
movsb
dec
push
sbb
and
es
dec
sub
pop
sbb
jnp
jo
push
addr16
sub
dec
push
and
outsb
fcoml
psubw
pop
mov
popa
ffreep
dec
mov
push
mov
dec
xorl
int
dec
mov
jo
sbb
out
addr16
fnstenv
scas
mov
xchg
arpl
xchg
movsb
sbb
nop
daa
sbb
mov
in
mov
das
lcall
rcrl
sbb
lock
push
adc
ljmp
shrb
or
jmp
aad
add
test
xchg
clc
mov
insl
out
mov
mov
ds
sub
enter
jne
and
loope
jmp
push
push
xchg
call
ljmp
sub
fdivrs
adc
aaa
sub
cmp
mov
ss
repz
mov
dec
jecxz
inc
xor
sub
fwait
mov
mov
adc
fld
add
andb
xor
in
vucomisd
mov
mov
scas
xchg
inc
imul
nop
fwait
test
lods
aam
push
jmp
notl
pop
or
mov
push
sbb
clc
out
xor
movsl
mov
push
jae
sbb
outsl
nop
sbb
mov
cmp
adc
insl
mov
push
mov
enter
aam
loope
dec
fadds
test
xlat
fwait
cmp
decl
push
das
lods
add
nop
sub
test
inc
mov
in
mov
cmp
insl
or
sbb
jnp
jle
sbb
daa
fdivrl
sub
aam
cmp
jl
jg
repz
mov
push
insl
or
lds
cld
sub
or
mov
dec
inc
mov
insl
into
or
shrl
sub
andl
icebp
xor
pop
in
dec
mov
add
jle
mov
push
pop
adcl
adc
adc
cmc
fmul
push
out
divb
rolb
jmp
out
add
xor
cld
inc
xor
gs
inc
fmul
add
int3
and
inc
hlt
mov
cmpb
sub
sti
pop
push
cmp
hlt
insl
sti
pop
mov
or
pop
mov
push
sbb
jae
lods
xor
lret
xor
push
sub
cmpsl
push
jnp
cmp
lcall
repz
add
jae
sub
and
fisttps
sub
nop
ret
xchg
ljmp
test
aam
arpl
test
dec
scas
and
sbb
testb
fsubs
je
xchg
insl
jns
inc
and
jnp
or
push
mov
insl
inc
mulb
sub
pop
cltd
in
shlb
or
xchg
loop
dec
js
mov
mov
fistl
je
lret
dec
mov
pusha
testb
jbe
jne
scas
mov
xchg
mov
cmp
cmp
aas
or
pop
lcall
push
inc
std
cmp
cmp
lea
outsb
notb
jp
jg
icebp
xchg
push
test
lret
add
jl
cmp
in
jle
xchg
loop
push
xor
mov
lea
sbb
push
sbb
bound
cld
aaa
sbb
addr16
decb
jne
sbb
rcrl
addl
mov
testb
shlb
aad
aaa
cltd
ficomps
int
cwtl
sbb
jle
test
sbb
mov
ss
out
inc
xchg
or
shrb
xchg
and
push
addl
sub
lock
jb
cmp
imul
or
iret
push
pop
pop
icebp
ret
enter
pop
jge
pop
jno
xchg
jne
sub
outsb
pop
in
ss
adc
hlt
out
inc
out
inc
arpl
add
out
in
and
or
xchg
lds
mov
addr16
rorl
jg
cs
xchg
in
pop
in
dec
mov
or
xchg
test
insl
mov
mov
sub
loope
clc
lahf
repz
jns
lock
fistl
cli
aas
push
jnp
xchg
add
bound
aaa
stos
stos
mov
xor
inc
ret
add
fcoms
cli
out
mov
movsb
aas
pop
es
stc
mov
xchg
test
mov
mov
adc
adc
mov
cmpsl
and
xchg
jne
push
ljmp
fcos
andb
xchg
jle
mov
ror
pop
or
or
out
mov
cmpsb
pushf
mov
mov
mov
shll
es
push
jmp
sub
pop
push
cmpsb
ss
sub
sub
adc
in
mov
inc
mov
and
mov
fistpl
sbb
shll
add
daa
xchg
dec
insb
sbbl
ret
lock
stos
push
dec
adc
add
test
jge
mov
push
dec
fadd
sbb
and
dec
repz
and
pop
cmp
retw
incl
stos
jbe
push
lahf
push
js
popa
notl
xor
ds
loop
frstor
into
movsb
or
mov
mov
push
sbbl
in
jbe
dec
inc
cmpsl
sbb
lods
imul
and
cmp
inc
mov
dec
out
add
fimuls
aad
stos
cmp
add
test
and
sbb
add
pop
adc
imulb
pop
mov
imul
fisttps
sub
imul
loop
push
push
testb
popf
dec
daa
movsb
mov
sbb
and
jge
cld
pop
mov
test
lcall
jle
lock
jmp
jnp
mov
jge
xor
data16
adc
fwait
jge
push
iret
jp
inc
adc
push
sub
cmc
push
ja
sub
in
pop
fs
push
ljmp
repz
int
lcall
push
or
xor
mov
out
mov
mov
pop
out
cwtl
lock
fs
jno
xor
pop
scas
cltd
xchg
push
mov
or
xchg
pop
outsl
sbb
pop
mov
push
icebp
adc
add
xor
push
mov
addr16
push
insb
insl
lcall
icebp
cmpsl
add
jae
xchg
add
scas
add
push
ficomps
lahf
xor
addr16
aas
scas
mov
jbe
adc
fdivl
scas
aad
jns
pop
dec
xchg
and
jns
mov
mov
pop
int
push
lret
jmp
and
or
inc
mov
lret
or
mov
ja
mov
jmp
insb
fcmovne
insl
jle
adc
mov
push
mov
dec
add
test
lods
mov
lods
cli
dec
mov
push
jp
les
mov
mov
xor
shlb
xor
dec
popf
add
lahf
sbb
sbb
loope
stos
or
dec
stos
jge
mov
shlb
push
repnz
js
lds
out
mov
ja
add
ds
mov
cwtl
sub
pop
das
xor
jb
aad
std
in
or
aas
lods
pop
int
xchg
xchg
fisubrs
ret
sbb
mov
rcr
mov
mov
fs
in
sub
inc
sahf
sbb
xchg
jecxz
mov
pop
pop
pusha
push
or
outsb
mov
cltd
xlat
shlb
xor
xchg
cltd
mov
dec
les
leave
mov
jmp
rcrb
sub
and
mov
icebp
pop
pop
lret
jmp
cmpb
mov
or
cli
cld
mov
repnz
push
adc
push
repz
add
sbb
xor
push
mov
movsb
sub
sbb
dec
addr16
jae
adc
repnz
cmpsb
xor
cmp
and
xchg
gs
sbb
add
es
lret
mov
push
enter
sbb
sbb
add
rclb
das
cmp
push
jno
test
push
incb
add
add
inc
jl
dec
aas
xor
cld
xchg
sbb
das
pusha
add
mov
adc
dec
gs
inc
fadds
clc
jae
mov
pusha
mov
sbb
jno
mov
movsl
mov
fwait
lds
arpl
pushf
xor
xor
imull
mov
mov
into
das
xor
loope
cs
js
mov
sub
mov
add
sub
fsubr
push
sbb
push
addr16
in
aad
in
sbb
cmp
push
add
mov
enter
in
pop
mov
gs
dec
pop
loop
push
shl
mov
int
push
mov
ret
lcall
fs
les
push
inc
pop
test
xor
js
push
aad
lea
jae
push
add
push
dec
lahf
push
mov
ffree
jne
push
dec
mov
mov
pop
jle
sbb
jmp
scas
imul
out
hlt
lret
xor
mov
ss
ficoml
sbb
es
cs
mov
cltd
sbb
jno
or
xchg
sbb
mov
mov
cmc
loop
std
pop
mov
pop
xor
mov
lret
add
mov
inc
inc
js
rcl
mov
out
jp
dec
popf
jl
repz
pusha
mov
push
dec
sbb
push
leave
in
pop
mov
cmc
leave
fucomi
faddl
sbb
push
dec
add
movl
sar
cmp
push
dec
aaa
mov
fwait
sbb
push
dec
jl
add
cwtl
loop
xor
in
dec
mov
mov
sub
and
sub
cwtl
adc
adc
lds
fimuls
cld
sub
mov
xchg
lods
xor
outsb
or
sub
call
jge
mov
cmp
xlat
loopne
cmpsl
or
loope
or
cmp
xchg
or
push
cmp
popf
int3
les
add
lea
aas
test
popf
mov
mov
sbb
mov
jg
push
lea
andb
push
xchg
in
xor
popa
sahf
cmp
xchg
mov
mov
les
add
and
stos
push
xchg
or
push
test
sbb
rolb
in
mov
mov
in
insl
sbb
stc
movsb
mov
jnp
dec
or
jnp
hlt
jnp
mov
add
cmc
xchg
jl
pushf
int
add
push
push
inc
int
push
or
icebp
sbb
js
hlt
loope
cmp
out
movsl
sbb
pop
mov
mov
sub
sti
cmp
ss
rolb
pop
rorl
movsb
sbb
pop
mov
out
push
ljmp
in
lock
xlat
imul
adcb
cld
jle
inc
in
mov
enter
dec
out
ffree
jb
inc
cmp
cmp
or
jne
fdivrl
sbb
ret
inc
mov
nop
xchg
into
lds
in
shrl
shl
cwtl
push
out
add
and
int3
popf
repz
xchg
lahf
dec
cmp
push
ficoms
nop
cmc
add
faddl
fs
and
cmp
mov
ss
jnp
push
lcall
shll
jno
dec
mov
push
adc
dec
mov
fisubl
mov
sub
cmp
xchg
dec
ss
push
push
inc
xor
jno
inc
cmp
and
jnp
or
xchg
cli
insl
sbb
mov
jbe
push
xor
jge
jne
xlat
lods
imul
incl
and
in
adc
dec
push
ret
xorb
imul
shrl
xor
repnz
shl
inc
mov
pop
arpl
insb
mov
std
out
push
cwtl
nop
and
cmp
insb
loop
das
xchg
xlat
sub
mov
dec
hlt
sub
jg
mov
outsl
pop
insl
ret
stos
nop
iret
mov
inc
mov
jl
pop
jmp
add
iret
mov
paddd
dec
lods
fstpt
pop
jp
inc
mov
idiv
mov
arpl
pop
pushf
mov
fiadds
aam
lret
xchg
out
mov
int3
int
push
je
dec
push
or
fistl
push
push
stos
popf
add
push
lock
fadd
mov
push
jle
mov
adcb
sbb
ja
leave
xchg
mov
sub
add
insl
mov
mov
jbe
inc
pop
inc
rorl
fistps
mov
cs
add
imul
cmpsb
dec
arpl
pop
cmp
hlt
andb
das
pop
pop
push
out
mov
inc
mov
xlat
popf
repz
pop
dec
add
xchg
mov
dec
data16
cwtl
je
mov
shlb
dec
or
push
push
mov
ds
testb
sub
mov
pop
sub
push
pushf
pop
sbb
arpl
jbe
bound
xchg
pop
ret
mov
pusha
es
ja
pop
push
pushf
add
sbb
idiv
jg
adc
sub
out
pop
jle
add
dec
cmp
imul
hlt
jbe
insl
and
jle
enter
cmp
fstps
cmpsb
imul
xor
push
xlat
orb
mov
pop
rclb
jae
incb
imul
cmp
out
pop
mov
mov
pop
dec
std
aaa
push
sbb
xchg
ljmp
mov
fs
es
mull
mov
testb
fmull
and
in
mov
dec
cmp
ret
or
shll
les
fsubrs
ds
push
mov
call
xlat
hlt
sti
cmc
dec
aad
mov
add
or
and
std
fidivrl
xor
cmpsl
xor
test
aaa
and
fmuls
nopl
movsl
pop
xor
mov
or
sbb
inc
dec
push
dec
lahf
mov
push
int
pop
pop
lahf
leave
rcr
xor
lcall
jecxz
in
loope
movsl
leave
sub
push
dec
clc
dec
cwtl
xchg
add
jns
inc
cltd
mov
fcoml
xchg
adc
adc
fwait
ss
aas
insl
fstps
pop
outsb
ds
sbb
clc
iret
mov
pushf
push
scas
das
mov
push
dec
push
pop
mov
adc
push
inc
mov
out
xlat
mov
jecxz
jmp
push
movsl
inc
sub
push
adc
std
mov
jmp
mov
sbb
cmp
out
mov
inc
add
jg
out
insl
push
cmp
fs
dec
mov
lods
repz
lret
fisttpll
movsl
push
pop
jne
mov
push
ljmp
jp
mov
cmpsb
jns
lock
int3
std
cwtl
and
cli
mov
notb
enter
insb
push
mov
ret
and
add
sub
mov
push
aam
push
adcb
sub
dec
pop
mov
sbb
addb
xlat
icebp
push
and
dec
mov
enter
imul
inc
cmp
arpl
jp
mov
and
jne
jbe
movsl
xchg
pusha
xchg
mov
lock
shl
mov
xor
call
push
pop
mov
fadd
mov
mov
pop
je
jno
adc
cmp
into
sub
stos
sbb
rcrb
push
mov
in
or
push
ljmp
cmp
jp
and
mov
insb
js
or
rorb
ds
sti
push
pop
push
sub
les
loopne
mov
inc
das
sub
hlt
sbb
adc
adc
ja
cmp
aaa
lods
imul
test
jmp
enter
and
cwtl
xchg
loopne
pop
mov
leave
call
hlt
icebp
pop
xor
sub
iret
popa
inc
pusha
jb
sbb
mov
xor
cmp
mov
imul
rorl
leave
push
loopne
stos
and
dec
test
and
lock
mov
xchg
cmc
sbb
iret
test
or
or
test
mov
outsl
push
lock
lea
adcb
and
in
inc
mov
dec
fstps
das
mov
fiaddl
add
arpl
jg
ret
or
test
movsb
sbb
push
ret
leave
popf
mov
dec
in
daa
popf
and
push
cmp
push
and
test
pop
hlt
scas
xchg
jno
jno
int3
insb
dec
xor
mov
and
pop
sbb
pop
mov
mov
or
mov
lods
aas
sti
fwait
insb
cmp
xchg
cmpsl
xchg
fwait
dec
pop
pop
push
pop
call
or
jg
cmp
inc
outsb
lret
push
jecxz
jo
fst
fldpi
pop
insl
xchg
nop
mov
enter
test
fnstsw
add
mov
ret
lahf
call
xor
imul
lds
pop
in
lahf
aas
repz
pop
cwtl
fst
adcb
dec
inc
lea
push
cltd
outsl
inc
movb
cltd
push
sub
dec
repnz
push
push
repz
and
call
cwtl
jns
cmovb
add
and
xor
xor
inc
fwait
sub
or
xchg
movsb
or
sub
lods
push
push
xchg
ds
jg
xchg
inc
xchg
jo
movsl
loope
mov
dec
xchg
xlat
mov
mov
inc
xchg
popf
adc
lods
inc
aas
xorl
int3
out
ret
jle
in
jl
outsb
and
imul
cmp
rcrl
aam
sub
dec
mov
and
mov
jmp
cs
sahf
push
fldl
xlat
ljmp
mov
jne
popf
xor
movsb
xchg
cmp
jl
lds
push
push
pop
clc
mov
push
xor
fcomps
movl
scas
xchg
out
popa
dec
pop
divl
fmull
lods
pop
aas
jecxz
pop
sbb
jl
pmulhuw
dec
pop
inc
pushl
clc
pop
cmp
push
aas
mov
ja
pop
pop
jbe
lea
and
mov
mov
outsl
xor
cld
dec
pop
mov
push
vcvtsi2ss
sahf
mov
mov
jno
jecxz
and
jp
and
bound
push
rol
or
cltd
xor
js
ja
sub
dec
mulb
push
jl
stc
pop
pop
repnz
xor
mov
subb
xor
int
add
aam
lock
int3
sbb
fwait
inc
push
pop
bound
aad
sub
dec
outsl
cmp
icebp
insl
or
ret
rcr
or
cli
or
call
int3
jle
lcall
or
scas
dec
mov
sahf
imul
jae
push
push
lods
mov
sub
rcrb
movsb
sub
data16
shufps
mov
jno
addr16
xor
ret
push
xchg
inc
mov
ficoml
add
push
pop
pop
mov
jbe
xchg
jl
int
sbb
push
push
sbb
dec
ds
daa
add
and
leave
ljmp
out
inc
and
or
jnp
and
or
dec
xlat
push
mov
cld
add
xchg
scas
xor
push
xor
sub
int3
scas
or
or
fdivr
pushf
incl
push
aas
and
push
adc
mov
testb
in
mov
inc
cwtl
push
xor
add
pop
xchg
adcl
stc
xor
mov
mov
fcomip
lds
xor
xchg
es
push
test
cmpb
xchg
fucom
es
mov
mov
lods
jnp,pt
and
cmp
cld
dec
push
lods
shl
push
push
rorb
pop
ja
rorb
cld
rcrb
daa
inc
xchg
lods
lret
movsb
fwait
bound
inc
sub
sahf
cmp
clc
adc
sbb
js
or
arpl
test
bound
loopne
jle
testl
fcoms
mov
data16
push
sub
mov
out
or
push
push
pop
inc
repnz
mov
mov
adc
mov
out
loopne
fistps
popf
ja
pushf
mov
mov
imul
daa
sub
std
jae
jo
pusha
iret
out
mov
cld
fsts
test
popf
xor
mov
sbb
lea
mov
iret
cmp
loop
adcl
adc
shll
imul
insb
loop
xchg
sbb
out
and
lods
pusha
dec
adc
imul
mov
pop
nop
cmc
adc
adc
ja
jbe
push
popf
sub
pop
repnz
cmp
mov
add
test
push
leave
pop
sbb
dec
ss
inc
imul
lret
cltd
inc
insb
ljmp
xor
inc
and
xlat
sbb
dec
ss
jo
push
test
and
jg
mov
mov
sbb
out
jecxz
and
sbb
sub
mov
add
clc
popf
sahf
lods
aad
pop
fmull
rorl
aas
filds
mov
icebp
fistpll
push
push
je
xlat
data16
cli
jle
popa
insb
lods
movsl
inc
mov
in
inc
jp
std
mov
pop
push
idiv
jno
lock
add
dec
push
std
faddp
test
dec
adcb
mov
imul
fwait
sbb
jge
dec
shr
dec
xor
sbb
rorl
xchg
bound
pusha
jbe
sub
xchg
cmp
push
mov
jmp
ret
je
fwait
push
dec
hlt
and
push
ret
ror
daa
push
inc
and
movsl
out
adc
jp
or
push
shr
sub
lock
dec
es
xor
loop
inc
dec
mov
fwait
jno
jle
fisttpl
std
mov
movsl
enter
out
sbb
cmp
out
xorl
add
adc
je
mov
shr
mov
sti
shrb
jo
in
dec
loop
xchg
push
push
fcomps
icebp
push
pop
aaa
aaa
add
xchg
or
lret
lret
push
ss
push
inc
loop
cmp
dec
cld
mov
mov
or
std
fildll
xor
mov
out
adc
stc
ljmp
adc
pop
dec
push
cwtl
xor
mov
lret
aaa
xor
or
loope
xor
icebp
js
data16
or
jo
push
xor
or
popa
shrl
arpl
inc
jl
sbb
add
xchg
test
jo
xor
cmp
sub
jl
pop
lods
test
enter
fldcw
ljmp
fcmove
xlat
or
test
mov
movsl
mov
popf
push
ds
loopne
mov
cmc
repnz
lret
outsl
iret
sbb
shr
mov
lods
ret
fmuls
jl
das
stc
icebp
out
add
lcall
mov
lret
fnstsw
in
test
mov
int
fbstp
push
jle
sbb
push
and
sbb
dec
mov
bound
push
and
cmp
imul
xlat
jg
roll
fisttpl
adc
loop
mov
dec
inc
ret
int
push
push
sub
out
xchg
pushf
add
push
call
pop
add
dec
add
pop
pusha
daa
pop
jge
nop
gs
cld
cmpsb
and
and
jp
shrb
sbb
sbb
sub
shrb
sbb
hlt
xor
in
fwait
hlt
dec
jecxz
pusha
xchg
movsl
xchg
xor
call
mov
jge
out
sub
rcr
add
cmp
push
jle
mov
jp
push
movsb
and
jo
cmp
and
cmpsl
jmp
inc
and
cmp
mov
mov
sbb
aad
inc
fidivrl
loop
dec
add
imul
push
insl
or
push
icebp
and
enter
xchg
sub
add
sahf
lods
lcall
cli
cmpsl
push
xchg
push
dec
adc
cmc
mov
les
shr
test
cltd
cmp
push
stos
jle
out
fimuls
push
mov
dec
pop
pushf
out
out
inc
add
call
jl
cmp
jmp
sub
cli
xorb
insb
pop
movsb
jle
or
xlat
mov
xchg
out
leave
aad
xchg
dec
push
sahf
xor
adcl
and
dec
mov
sahf
mov
jne
or
pop
stos
push
or
stos
pop
dec
add
fsubr
mov
scas
loopne
jmp
push
pop
jp
call
incb
stc
adc
cld
lods
imul
push
jno
xchg
xchg
test
jecxz
andl
imul
dec
mov
and
fs
loop
fstps
into
lahf
clc
outsb
adc
movsb
lcall
jg
lods
xchg
pop
ret
int3
das
nop
cli
push
shrb
pop
sub
mov
sbb
pop
sbb
rorb
mov
push
loopne
jle
enter
pop
pop
jns
adc
and
mov
xchg
lods
jbe
lea
pop
fwait
cmp
pop
push
jo
and
add
cmp
loop
fldenv
push
divl
outsb
push
stos
or
dec
mov
and
add
and
push
aad
aas
mov
cld
xchg
or
mov
fistpll
pop
daa
push
jmp
jne
xchg
call
repz
mov
repnz
jb
dec
ret
lahf
repz
cmp
mov
in
pusha
xor
xchg
fdivrl
sub
das
fisttps
or
adc
movsb
outsb
movl
lret
cltd
pushf
sub
cmp
out
mov
outsl
test
data16
into
xor
push
arpl
sub
adc
aas
dec
inc
jle
scas
pop
inc
sub
and
test
andl
adc
xchg
rcrb
or
pop
mov
sub
inc
push
jns
stos
xchg
dec
out
adcb
push
add
lods
es
xchg
movsl
add
loopne
fldenv
jb
mov
pop
insb
pop
loope
jne
push
addr16
sar
xlat
pop
jl
push
outsl
jecxz
and
int3
shlb
push
mov
and
fs
and
aaa
jl
fidivrs
cmp
jecxz
xchg
fucom
out
fldcw
and
gs
mull
mov
sbb
jecxz
imulb
cmp
mov
xor
test
fimull
sbb
dec
or
inc
cltd
fcomip
push
add
add
in
dec
lods
add
imul
out
jno
xchg
hlt
sahf
fisttpl
mov
or
adc
mov
nop
subl
and
mov
inc
inc
push
jbe
test
xor
jle
sbb
hlt
femms
cmp
aam
ret
inc
scas
aam
jo
into
scas
subb
lret
test
in
sarb
cmp
fs
aaa
imul
or
loope
xchg
test
movsl
xlat
pop
adc
jg
rcr
dec
cmpb
movsl
push
es
jbe
xchg
or
imul
push
sbb
jecxz
cli
ljmp
mov
add
push
or
sbb
daa
fcoml
cwtl
mov
xchg
aad
dec
rcll
test
mov
cmpb
adcb
out
sub
jnp
push
insb
add
in
outsb
jbe
imul
push
pop
jnp
cmp
cmp
lret
popa
and
xchg
inc
cwtl
mov
jno
aad
and
or
push
push
xchg
lcall
mov
sbb
cmc
cmp
out
icebp
mov
jle
je
mov
popa
add
lret
mov
insb
scas
push
out
ja
scas
popf
adc
push
mov
push
xor
lock
subl
call
xchg
int
in
pushf
mov
jle
sub
pop
dec
jg
cmp
out
sub
in
mov
std
hlt
in
hlt
mov
test
in
sub
push
aad
data16
pop
pop
enter
adcb
test
outsb
ja
sbb
clc
jbe
mov
fs
cmc
cmp
mov
jecxz
inc
rcrl
pop
pop
sbb
cmp
stos
data16
fadds
dec
aam
cmp
js
cmp
fiaddl
sbbb
inc
and
je
sahf
and
ljmp
or
cmp
loop
test
cmp
std
cli
addr16
in
fldt
xchg
pop
iret
dec
stc
adc
dec
aaa
jle
lret
arpl
pop
xchg
pop
inc
sub
shr
jl
xor
pop
mov
push
dec
jl
out
loopne
pop
int
push
and
test
add
in
xchg
fwait
in
mov
inc
lods
xor
inc
push
and
movsb
sub
dec
mov
and
dec
lods
xor
dec
mov
xlat
sti
aas
push
pop
mov
xor
xor
gs
xchg
rolb
das
test
outsb
inc
shlb
shll
push
enter
push
dec
fnsave
in
mov
xchg
cmpsb
mov
pop
popa
scas
in
adcl
jle
pop
adc
or
xor
pop
js
xor
icebp
and
sbbb
mov
daa
xor
cmp
xchg
cltd
push
lcall
insb
dec
leave
mov
cmp
fsubr
outsb
clc
xor
dec
or
insl
aam
sbb
mov
mov
pop
or
orl
inc
push
inc
pop
int
lahf
mov
xor
push
and
imul
sbb
xchg
dec
ret
test
test
mov
mov
mov
inc
add
cmp
out
stos
and
or
rcrb
jnp
push
adc
in
mov
cmpsl
lock
ja
shl
lock
scas
cmc
divl
loope
sbb
test
in
dec
sub
sti
xchg
icebp
loop
or
pop
pop
aas
push
fld
adc
ficoml
shlb
mov
jl
fistpl
daa
decl
enter
outsl
repnz
and
mov
orl
clc
mov
or
push
outsb
leave
rolb
add
mov
adc
aaa
flds
enter
lcall
mov
sbb
and
pop
dec
mov
sub
jbe
add
cmp
rclb
mov
pop
ss
xchg
mov
inc
lea
outsl
cltd
hlt
lods
sub
pushf
xor
xchg
shl
sbb
and
mov
jecxz
xchg
push
ljmp
in
mov
or
mov
mov
pop
add
cld
loop
pop
clc
ljmp
leave
popa
or
mov
cmp
pop
loop
aad
sub
sbb
jp
mov
data16
shl
in
inc
bound
xchg
sarb
cmp
test
iret
sbb
push
les
test
xor
vmovsd
test
mov
ja
mov
jae
cmp
jne
pop
aad
dec
cmpsl
mov
je
and
int3
pop
lcall
ds
push
xor
cmp
mov
mov
in
dec
scas
push
sar
inc
divb
jae
jb
inc
nop
loope
push
jb
add
mov
dec
je
cmp
sub
ret
mov
inc
dec
subb
into
jg
insb
insb
rcl
nop
js
aad
loope
dec
mov
scas
dec
out
adc
stc
xchg
add
fstpl
or
jae
adc
push
subl
mov
jnp
pop
or
inc
and
mov
ja
jmp
xchg
and
inc
loope
repz
push
jno
jo
inc
faddp
aad
lret
inc
stc
and
xchg
enter
adc
pop
xor
or
flds
pusha
sub
cwtl
shlb
std
andl
xorb
ret
sbb
pop
xchg
scas
fimuls
jno
iret
pop
add
leave
dec
movsb
es
xlat
sub
jg
shlb
sarb
inc
loope
sub
out
mov
fwait
data16
xchg
ret
popf
jmp
lods
lahf
cmp
pop
hlt
ficoms
int
icebp
icebp
imull
cmpsl
adc
call
cmp
fs
or
stos
xor
sbb
testl
xchg
fwait
xor
push
cmp
clc
jg
andb
or
repnz
fwait
mov
xchg
xchg
jl
adc
imul
imulb
out
cmp
or
jne
out
sti
push
arpl
mov
testb
jge
mov
dec
xor
fists
inc
shlb
jbe
movsb
sbb
iret
mov
call
jge
lret
inc
xor
leave
dec
ljmp
lods
aaa
sbb
mov
lods
fwait
inc
cwtl
call
pop
and
int3
pop
jl
leave
into
cwtl
add
imul
dec
jbe
cld
xor
ljmp
xchg
pop
jnp
add
in
dec
sub
fsubrp
or
cvtpi2ps
or
pop
xchg
addr16
insl
or
add
pop
adc
mov
mov
fldl
jecxz
push
fildll
or
xchg
sub
add
jnp
aam
add
ss
stos
cli
adc
stos
and
cmp
cli
fstpl
int3
das
mov
mov
daa
repnz
test
pop
cmp
call
sti
mov
dec
adc
roll
add
mov
cmp
mov
bound
push
adc
mov
lock
test
das
fst
pop
ror
cmc
inc
adc
push
enter
pop
mov
mov
pop
shll
mov
sub
push
lret
or
addb
bswap
iret
xor
mov
mov
mov
push
iret
out
jno
sub
mov
int
sbb
push
call
mov
rorl
cmpsl
loope
sub
sub
cmp
and
jl
dec
jmp
cmp
lret
jb
or
and
ja
xor
fdivrs
push
xchg
push
mov
mov
add
loop
mov
out
hlt
js
or
bound
testb
lods
std
cmc
mov
lahf
lods
fmul
test
sbb
lret
stos
out
enter
stos
sub
and
fs
cli
ljmp
and
dec
mov
jo
cmc
pop
shl
popa
shrl
loop
fcoml
xchg
ss
pushf
les
mulb
repz
lret
arpl
jge
or
push
addb
lea
lret
pop
sbb
jb
nop
dec
lret
out
adc
push
mov
mov
mov
sub
add
xchg
arpl
mov
push
aam
xchg
call
dec
sub
jnp
daa
mov
int
jne
push
cmpsl
testl
mov
mov
mov
into
out
aas
lods
addl
sub
mov
imul
push
dec
push
mov
mov
ljmp
aaa
int
ds
cwtl
inc
cmp
ds
push
push
and
sbb
mov
add
sub
ds
mov
aaa
lock
push
rcr
jbe
xor
cltd
xchg
vpmacswd
outsb
insb
ss
cmpl
add
in
imul
jae
not
fs
add
rol
fidivl
loope
mov
push
imul
cltd
fbld
jnp
ja
or
xchg
mov
sbb
or
push
pop
ljmp
sub
aaa
divb
or
and
mov
cmp
inc
push
inc
testb
cmp
push
mulb
add
adc
add
xlat
mov
push
sahf
divl
fs
aam
inc
jne
test
or
cmp
ret
fiadds
call
push
je
stos
es
outsl
xchg
out
subl
in
sarl
or
or
sub
psrld
xlat
insb
mov
sbb
mov
sysexit
aad
sbb
add
je
push
pop
sub
fstps
ret
jo
data16
mov
xchg
add
jg
in
repnz
xchg
jnp
cmpsl
mov
jno
int3
add
sub
inc
mov
dec
mov
fimull
mov
cli
iret
adc
dec
in
cld
xchg
scas
hlt
sbb
jmp
adc
lea
out
inc
dec
mov
ljmp
and
mov
push
mov
pop
ja
lret
test
insl
pushf
pop
dec
mov
stos
adc
lods
push
cmpsl
pop
mov
insl
mov
rcl
es
jl
fs
fsubrs
adc
fs
popa
jbe
imul
push
xchg
mov
mov
push
hlt
cltd
divb
out
mov
mov
add
jge
mov
call
test
hlt
cwtl
bound
jb
and
cs
sbb
daa
jne
inc
repnz
or
jp
ss
push
sarb
in
pop
sbb
sub
sbb
jmp
test
jle
cmpsb
pop
aaa
mov
insl
aam
das
add
subl
dec
movb
mov
push
dec
or
push
inc
daa
push
ret
adc
test
pop
cli
cmp
jb
xor
adc
pop
divl
xchg
xchg
pop
mov
ret
jg
xchg
pop
mov
pop
mov
inc
movsl
pop
xchg
cmp
leave
imul
and
pusha
fcmovnb
jg
or
sbb
cmp
out
mov
ss
data16
inc
jmp
add
int3
cld
pop
push
xchg
loope
inc
out
adc
push
jnp
mov
daa
adc
xchg
adc
rcll
dec
xorb
jae
xchg
sub
mov
pop
gs
sbbl
mulb
cmpsl
int3
lods
add
je
and
dec
mov
and
adc
repnz
shlb
dec
arpl
mov
inc
popf
mov
mov
jmp
imul
jo
sarb
testb
mov
pop
ja
icebp
or
jecxz
insl
aaa
notl
insl
cmpsl
push
jmp
iret
lret
mov
popf
dec
das
pop
dec
inc
jne
dec
jl
int3
mov
fistpl
mov
mov
xchg
cld
gs
jg
inc
lea
sub
mov
inc
pop
push
cmp
sti
sbb
iret
push
mov
in
aas
inc
inc
adc
js
mov
pop
xor
incl
mov
or
in
out
out
daa
and
cmp
or
inc
fcompl
and
sbb
loopne
popf
push
pushf
shlb
ret
gs
int
stos
loopne
stos
insl
fwait
mov
icebp
adc
xchg
call
xor
jmp
push
imul
push
jmp
mov
stos
psubw
leave
push
in
imul
add
jmp
mov
jno
xchg
push
nop
mov
or
outsb
mov
push
pop
xor
nop
and
add
lea
or
aas
pop
sbb
cwtl
rcll
std
mov
test
sub
push
push
sub
xor
xchg
sarb
dec
test
pushf
cwtl
jo
aam
repz
sbb
and
inc
shll
cmp
inc
call
popf
addr16
jno
lods
loop
iret
cmp
jl
mov
rcrb
daa
sbb
lret
leave
ret
push
adc
sbb
mov
nop
inc
je
add
mov
aaa
icebp
xor
push
push
sub
xor
fbstp
fstpl
mov
mov
mov
mov
jp
add
xlat
arpl
test
cmp
or
test
jge
adc
cltd
into
loop
cld
or
outsb
mov
push
dec
mov
leave
sub
mov
dec
subl
cmc
adc
sbb
cmpsb
bound
fldenv
leave
cwtl
mov
or
ljmp
sti
sbb
loopne
pop
mov
mov
pop
shl
dec
ja
les
inc
mov
jnp
push
sub
inc
sbb
cmp
rcrl
and
add
repnz
sahf
cmp
clc
pop
test
xor
jmp
subl
mov
jbe
shrl
fisubl
add
lock
dec
pop
mov
sbb
adc
jbe
lea
movsb
sbb
ret
or
mov
rcr
jnp
gs
xchg
addb
sbb
jno
pop
insb
lds
icebp
cltd
add
sub
fbstp
mov
inc
inc
jl
push
dec
sbbl
ja
aam
andl
daa
ja
add
sbb
xchg
adc
ljmp
loope
movsl
mov
comiss
adc
loopne
mov
dec
and
addr16
jb
in
sub
fdivrl
mov
or
sbb
lahf
push
mov
push
and
mov
and
repz
test
jecxz
xor
or
jne
xor
mov
cltd
jmp
adc
xor
dec
push
and
mov
mov
and
lahf
dec
aaa
jns
mov
jo
push
aam
imul
mov
fstpl
adc
imul
rcrb
add
mov
push
lcall
test
orl
or
std
push
inc
jmp
and
mov
add
jb
jae
mov
jbe
or
jne
or
stos
add
scas
loop
fisubs
and
in
cmp
outsb
cmp
ret
pop
add
pop
pop
xchg
xchg
aam
lea
mov
mov
aaa
sbb
mov
mov
pusha
mov
rclb
pop
lahf
push
pushl
stos
scas
dec
push
aas
imulb
repnz
push
cmpsl
push
jno
mov
lcall
jns
leave
dec
shll
out
testl
mov
aam
cmpsl
add
shrb
jle
inc
push
nop
popf
adc
mov
movsb
stc
lods
xchg
jecxz
scas
fld1
out
cmp
in
cmpsl
push
shlb
mov
cmc
mov
xchg
add
adc
cmp
xchg
mov
xor
adc
lret
push
sub
stc
mov
divb
sti
dec
cmp
sub
jecxz
pop
adc
ret
pavgb
fbld
daa
xor
push
sub
pop
inc
adc
shll
xor
xchg
mov
int
mov
popa
xor
jecxz
add
dec
cmp
shl
add
or
sbb
int
push
bound
dec
loopne
dec
scas
xorb
sbbl
mov
push
into
int
xor
jbe
clc
dec
xchg
push
cmp
xor
andl
cmp
xor
adc
jl
add
or
imul
xor
outsb
mov
sti
lds
xor
sbbb
test
push
xor
pop
hlt
lret
out
out
jno
sahf
pop
out
pop
mov
arpl
aaa
loop
clc
pusha
cltd
pop
leave
jge
sbb
cs
in
and
movsb
and
loopne
jne
adc
setne
pop
add
inc
mov
aaa
loop
stc
in
mov
cmp
xchg
stc
mov
push
mov
fimull
sar
es
jne
add
fwait
xchg
movsb
negl
es
or
repnz
xchg
or
mov
aas
mov
lea
pop
mov
mov
ljmp
test
into
push
mov
pop
jmp
daa
mov
push
push
sbb
lcall
inc
inc
adc
rcll
or
bound
adc
pop
test
fisubrs
js
push
jle
pushl
push
int
adc
outsl
push
inc
jae
movsl
cmp
push
movsl
imull
or
cmp
xor
insl
call
fwait
add
pop
lds
xchg
into
sub
ret
shlb
and
push
push
pop
adc
subb
push
adc
or
pop
mov
fidivs
and
pop
fwait
cmp
and
movsl
mov
loope
fsubrl
outsb
sbb
mov
sbb
adc
shlb
xchg
jno
jnp
rorb
xor
mov
in
gs
cmpsl
sahf
cmp
daa
inc
fiaddl
and
push
mov
xchg
xchg
dec
sbb
mov
mov
xchg
sub
aas
or
inc
ds
inc
push
dec
rclb
dec
test
movsl
dec
mov
and
mov
lret
les
out
pop
shlb
lret
stos
mov
adc
mov
sub
dec
ss
cli
std
insl
repnz
push
arpl
and
cmpsl
out
out
cmpsb
pop
js
and
jb
fcoml
sahf
mov
sub
add
cmp
cmp
inc
ds
fwait
hlt
stos
push
fisttpll
stc
movsb
insl
push
fldcw
loope
xchg
mov
inc
icebp
jns
insl
fstp
sahf
cwtl
data16
add
hlt
shll
xor
xor
jp
add
stos
mov
mov
mov
xor
mov
mov
xchg
or
xchg
pop
jl
xchg
sbb
inc
test
fisubs
jg
mov
pop
mov
dec
cmp
or
cmp
inc
or
mov
jae
nop
inc
mov
xchg
pop
enter
scas
in
xchg
sahf
adc
pop
dec
jno
jo
mov
out
leave
mov
gs
call
cmpsb
adc
dec
mov
inc
pop
jnp
mov
std
mov
dec
mov
sti
cmpsl
jecxz
cld
pop
lock
jge
cwtl
fnstsw
dec
je
mov
pop
or
loop
sbb
mov
arpl
mov
mov
ss
cs
jmp
movsb
jmp
popa
lret
adc
outsb
test
enter
cmp
push
leave
enter
mov
popf
xchg
mov
sbb
out
mov
adc
mov
leave
sub
out
rcll
andl
inc
aam
cmc
xchg
cmp
inc
pop
sbb
dec
aas
ror
lds
xchg
les
sub
dec
notb
pop
and
sub
rolb
shl
sbb
fs
das
nop
mov
rorb
testb
xchg
lock
inc
lret
scas
imul
push
loop
mov
movsb
cs
mov
xlat
add
das
inc
lret
insb
jne
fidivrl
and
xchg
arpl
mov
push
imul
add
dec
fwait
jnp
movsl
cs
sub
ss
ljmp
push
les
das
mov
hlt
mov
dec
add
xchg
imul
xor
cltd
loopne
lret
sbb
mov
fs
loope
push
je
and
mov
scas
dec
gs
les
adc
push
mov
dec
cmp
stc
jb
adc
mov
add
into
lods
push
mov
les
or
pop
mov
jmp
in
jnp
mov
movl
mov
or
mov
adc
lea
int
repz
or
adc
arpl
push
outsb
jle
orl
rol
xor
jnp
xchg
mov
movsb
sub
imul
or
jg
stc
inc
gs
cmpsl
mov
push
push
push
loope
fcomip
jno
lock
push
ret
aam
and
repz
push
cmp
add
jp
scas
xor
cmovl
xor
clc
xor
pop
jae
movl
and
sub
ljmp
int
pop
pop
push
mov
add
sub
xchg
and
pop
std
es
pop
jp
jae
popa
std
loopne
out
sbb
negl
repnz
fstl
adc
addr16
or
xor
jns
scas
adc
out
cmpsb
inc
pop
and
fbstp
mov
push
mov
sub
out
sub
inc
rclb
inc
sbb
push
scas
sub
rorl
gs
rcrb
pop
pop
push
or
stos
sbb
daa
add
jnp
inc
xlat
inc
iret
clc
test
andb
ss
int
push
movsb
mov
add
dec
jb
stos
mov
out
jne
lods
mov
mov
sub
adc
popf
ret
or
lock
mov
sub
fs
mov
pop
insb
cs
adc
lahf
fbstp
or
or
adc
mov
xchg
dec
dec
jo
dec
add
in
xlat
and
adc
add
test
sbb
lods
add
add
mov
addr16
cmpsl
jmp
mov
or
push
pop
dec
xor
inc
repz
test
mov
sbb
sub
dec
xor
jl
jp
bound
std
pop
mov
add
jge
pop
mov
cmp
sbb
cmp
pop
sbb
nop
ficoml
lds
testl
pop
dec
inc
pushf
fistpl
cld
jns
daa
loope
imul
mov
sub
pop
pop
fs
jo
dec
in
in
fsubl
mov
jne
add
sub
mov
push
fldenv
mov
adc
stos
push
int
pusha
push
jge
jg
mov
and
sub
and
imul
out
out
cmp
and
sub
xor
enter
lods
andl
jns
cmp
jns
jbe
fwait
stos
or
js
adc
testl
movsb
jae
inc
xchg
add
ljmp
pop
js
sub
sbb
fiadds
dec
pop
int3
jnp
xchg
pushf
mov
inc
add
jmp
lds
pop
lahf
cmpsb
and
mov
mov
cltd
cmp
jae
in
rorb
scas
xor
mov
mov
inc
imull
ljmp
in
adc
pop
cli
sub
xchg
lea
sub
push
pop
pop
mov
ret
int
inc
sub
cmpsb
into
ror
xchg
loope
ljmp
xlat
insl
loopne
rcrb
mov
insb
fs
in
mov
dec
mov
hlt
scas
push
dec
adc
std
or
cli
xchg
in
ror
lea
pop
repnz
testl
and
arpl
push
cs
jmp
inc
inc
xchg
ds
dec
push
adc
ds
cmpb
hlt
cs
addl
pop
insl
addr16
popa
push
pop
stc
mov
xor
shrb
mov
cmp
xchg
call
jno
fsubrl
and
nop
mov
stc
aam
pop
sub
push
xlat
jbe
add
dec
inc
mov
xchg
adc
dec
and
jmp
mov
add
and
sti
mov
xor
cltd
mov
imul
jns
mov
lock
call
xlat
mov
cwtl
mov
nop
mov
mov
sub
filds
mov
or
gs
int
pop
lahf
ficomps
mov
or
or
call
sbb
push
cmp
fsubs
sti
adc
movsl
lods
repnz
add
mov
pop
xor
mov
pop
mov
inc
test
jg
adc
int
pop
test
ja
ds
jmp
add
pushf
mov
cwtl
outsl
jo
hlt
loop
mov
outsl
xor
orb
dec
loop
les
xchg
aad
jle
repnz
xchg
cli
fildll
hlt
pop
scas
push
in
mov
adc
pop
and
jmp
clc
std
sbb
push
lods
pop
xor
repz
leave
cmp
pop
ja
adc
add
jbe
cli
rolb
stos
xchg
xor
ljmp
fnstenv
scas
jp
int3
pop
fwait
loope
data16
xchg
lods
xchg
js
sub
pop
fistpll
fnstcw
jno
cwtl
sbb
mov
mov
mov
mov
inc
sub
jle
arpl
cmp
lds
pop
sbb
adc
push
and
stc
stc
test
imul
stc
sub
leave
cltd
or
addr16
inc
push
add
mov
dec
xchg
dec
mov
test
jnp
pop
ja
pop
dec
leave
leave
mov
fcmovbe
mov
lcall
xchg
test
or
fxch
pop
ret
sub
js
adc
mov
lahf
or
clc
pushf
test
repnz
push
int
pushf
arpl
cs
cs
lahf
lods
cmp
ds
sbb
add
jg
repnz
jne
pop
adc
jns
and
and
cmpsl
xchg
cmp
cwtl
and
pop
les
mov
scas
outsb
xchg
push
dec
insl
or
repz
scas
dec
shlb
sbb
jmp
cmp
mov
xor
sbb
sti
xlat
xor
xlat
xchg
dec
inc
or
sub
ret
cld
adc
jp
negb
setae
and
je
loope
inc
mov
xchg
stc
leave
pushf
and
unpcklps
mov
movsb
adc
mull
jmp
iret
and
push
jp
int
xor
sbb
push
push
jle
sbb
lcall
clc
in
orl
pop
push
stc
movsb
inc
cmp
inc
xor
popa
roll
movsb
pop
inc
jbe
call
xchg
push
pop
sbb
push
and
mov
loop
stos
int3
and
and
xor
xor
lcall
pop
jp
repnz
test
ja
adc
xchg
or
adc
jne
jo
stc
jno
jb
outsl
stos
mov
sti
out
pushf
lret
test
stos
add
outsb
jmp
lods
gs
push
add
xor
in
xchg
mov
lret
sti
andb
call
inc
dec
mov
dec
mov
pushf
add
or
fwait
sub
out
cli
fistpll
add
pop
popf
test
mov
jg
es
jl
push
xchg
jnp
andl
push
add
inc
aas
inc
mov
jae
cmp
sbb
mov
dec
jne
int
cli
sbbb
pop
inc
sbb
icebp
stc
push
rolb
jns,pn
or
out
jno
iret
inc
shll
push
push
push
mov
mov
and
les
and
leave
jp
rcll
leave
cld
pushf
inc
and
mov
cwtl
shll
int3
aad
ljmp
loop
jo
aad
pop
pop
out
mov
aad
data16
cmp
adc
movsl
push
xor
sub
addr16
int
fsubrs
imul
pop
pop
and
xor
test
inc
ljmp
pop
test
insb
les
ljmp
outsb
stos
lcall
imul
xchg
in
push
out
push
push
jo
flds
pop
xchg
lret
or
js
repnz
fcmovne
xchg
push
cmp
jge
xchg
sbb
lret
xchg
stos
lds
mov
mov
pop
dec
lods
bts
daa
je
lods
or
or
lods
pop
mov
fcomp
jg
scas
jno
lock
rol
add
sbb
mov
fsubrl
hlt
movsb
je
loopne
jecxz
lods
dec
ficomps
adc
jns
mov
jmp
rcrl
scas
je
jbe
mov
ljmp
stos
aaa
loopne
cmpsb
imul
cmc
mov
inc
dec
xchg
into
aas
vmwrite
sbb
or
add
push
jno
fstpl
pusha
xchg
push
jno
gs
lret
cmp
inc
jle
scas
inc
stc
xlat
in
out
or
les
js
adc
mov
dec
dec
hlt
int3
sbb
cmp
mov
in
mov
scas
pop
bound
dec
jae
push
es
jp
sahf
push
aam
inc
andb
cwtl
jb
pushf
ja
push
or
jne
add
jb
xchg
fmul
push
xchg
xchg
sbb
pop
jb
push
fucomip
movsb
iret
pop
sub
dec
sahf
loope
shlb
xchg
push
sbb
gs
movsl
mov
jae
test
sarl
cwtl
xchg
out
sbb
cwtl
negl
lcall
scas
popl
insb
in
add
pop
jg
xchg
mov
imul
in
or
pop
mov
lcall
cmp
cmp
outsb
mov
dec
push
cmp
fldlg2
testl
aas
mov
or
adc
in
dec
jne
sbb
stos
inc
stos
mov
mov
into
push
fdivl
rcrl
or
mov
sub
stos
mov
xorl
cld
jbe
imul
mov
sub
xchg
push
jbe
insl
cmp
cmp
stos
adc
push
adc
jg
int
icebp
inc
mov
pop
dec
lods
sbbb
xchg
int
xor
scas
bound
imull
sahf
ja
enter
and
popa
lahf
jne
push
arpl
shlb
imul
xor
out
shlb
jge
mov
sbb
iret
adc
or
push
cwtl
lret
sub
sahf
std
mov
std
lods
lods
adc
fisubs
mov
flds
dec
popf
out
mov
test
mov
push
fidivl
xor
incb
and
imul
out
cmpsl
shr
pop
mov
bound
fwait
enter
add
aad
shr
mov
ljmp
or
jne
cld
xchg
sbb
add
cmpsl
stos
inc
sbb
pop
adcb
daa
lea
mov
loopne
adc
das
pop
lea
dec
out
into
repz
push
call
jg
std
lods
push
fwait
pop
cmp
or
mov
mov
ss
jl
jmp
sbb
sahf
idiv
cmpsl
cmp
mov
push
in
mov
enter
mov
mov
sub
jo
xchg
mov
testb
clc
xchg
lods
jo
hlt
xorl
loopne
rorb
xor
ss
jns
xchg
insl
movsb
call
push
sub
jo
mov
scas
pop
cmc
sub
cmp
mov
push
pop
mov
cs
in
shrl
dec
js
fstp
cmp
pop
sub
inc
inc
mov
mov
cld
sti
xchg
popf
test
movsb
mov
cmc
cltd
pusha
js
xor
cltd
popf
pop
rcrb
cwtl
add
cs
insl
icebp
jmp
inc
outsl
arpl
movsb
in
mov
mov
decl
and
ja
call
xor
fwait
pop
mov
inc
cmpsb
sub
sub
xchg
mov
ficoms
xchg
xchg
shrl
loope
icebp
mov
sbb
ret
rorl
mov
in
jecxz
aad
ds
mov
push
test
mov
jno
inc
xchg
jmp
inc
and
aam
jg
int
arpl
outsl
test
loop
mov
fs
add
push
mov
out
jo
sti
cld
mov
stos
mov
std
cmp
xchg
pop
test
mov
inc
test
jl
xchg
mov
inc
fcmovb
jge
xchg
lret
lock
icebp
fistps
pop
cmp
mov
scas
add
sbb
mov
lock
inc
jp
jmp
xchg
xor
imul
movsb
cmp
shlb
aad
or
mov
xchg
xor
adc
imul
mov
or
fnstcw
fwait
pop
insb
adcb
lock
ret
cli
imul
push
xlat
in
in
jae
dec
cmp
insb
hlt
mov
xchg
orl
cmp
sarl
arpl
inc
movsb
cmp
cs
xor
loop
adc
sub
cs
xor
jle
iret
mov
cld
cmp
insb
lcall
cmp
mov
mov
jmp
cmp
in
inc
sub
lock
push
mov
pop
dec
xchg
jo
mov
mov
push
scas
repnz
iret
push
pop
push
and
add
pop
int3
cmp
jo
pop
std
mov
adc
adc
fistpll
imul
hlt
in
jecxz
cmp
lock
lods
int
and
nop
adcb
inc
lret
iret
mov
cltd
cmp
xor
sbb
rorb
pushf
cwtl
rorb
sarl
scas
inc
incb
sub
inc
lahf
addl
rol
sbb
in
pop
sbb
or
into
xchg
sti
mov
jge
ss
fstpl
mov
mov
sub
rorl
xchg
push
test
shr
mul
add
movb
loope
push
cwtl
call
push
inc
or
scas
mov
pop
icebp
dec
sbb
popa
mov
ja
dec
test
aas
scas
push
dec
mov
sbb
xchg
dec
xor
dec
pop
add
aas
repnz
stc
lret
pushf
mov
lock
jno
pusha
inc
aas
mov
loop
insl
xor
push
mov
out
jp
mov
loope
scas
std
leave
test
push
pop
cmp
dec
fcmovnb
es
cmp
movsb
push
xchg
mov
dec
dec
sub
arpl
mov
mov
dec
sub
inc
negb
push
cmp
stc
cmp
mov
mov
clc
sarb
lcall
dec
push
mov
or
adc
push
jl
test
ljmp
xor
jo
hlt
aam
mov
lahf
adc
mov
cwtl
cmc
xchg
sbb
mov
mov
adc
push
jmp
cltd
and
rcrb
mov
inc
lea
add
outsl
pop
das
pop
cld
push
mov
push
push
mov
jmp
out
mov
and
push
not
lods
push
gs
jmp
fcmovnu
xor
scas
pop
mov
add
dec
mov
push
inc
rorb
mov
cmpsb
out
pop
pop
dec
lret
adc
mov
popf
into
and
lahf
dec
sbbl
pop
sbb
adc
dec
cmpsl
cmpsb
mov
dec
jg
shll
mov
scas
add
rcr
sbb
fsubs
pop
call
jbe
xor
lret
jmp
int
or
and
or
and
cmp
rsqrtps
testb
cld
mov
dec
clc
scas
cmc
cmp
sahf
lds
scas
sbb
arpl
les
mov
jp
xor
ret
xor
lahf
out
xchg
in
lds
imull
out
add
push
and
hlt
push
js
loope
leave
push
lahf
into
jle
dec
stos
push
push
cmpsl
mov
cmpsl
les
mov
imul
clc
mov
pop
xlat
jg
int
lods
sub
daa
lods
outsl
pushw
sbb
and
cltd
shrb
mov
lods
stos
mov
fwait
lods
sti
lahf
je
adc
push
push
mov
lret
mov
push
ret
movsb
cmpsb
in
mov
movntps
xor
mov
fmull
cltd
aaa
std
add
testl
addr16
xor
add
jno
std
pushf
xor
lods
adc
cmpsl
notrack
cmpsl
xchg
cltd
fsubl
cli
cmp
dec
jl
fwait
dec
aaa
inc
bnd
rorl
push
jecxz
push
rcrl
stos
test
jns
ror
stos
dec
jno
jb
xor
mov
pop
lods
inc
aaa
xchg
lock
stc
in
push
std
mov
jnp
jl
cmpsb
outsb
fmuls
adc
xor
pusha
xor
mov
and
lcall
cmc
fmul
jnp
scas
mov
ja
inc
sbb
fstps
movsb
mov
bound
mov
inc
push
mov
mov
jecxz
scas
outsl
shrb
ret
out
xor
sbb
jnp
sbb
notl
push
fisubs
dec
aaa
jbe
jno
add
mov
shrl
and
or
sub
add
pop
dec
int
mov
jae
ljmp
xchg
xor
cmpsl
in
mov
cmpsb
aaa
mov
lret
xchg
lods
outsl
xor
mov
pop
negb
fs
test
lret
popf
adc
outsb
in
jb
push
scas
adc
les
ja
pop
lods
add
push
lods
inc
in
outsl
jg
shlb
mov
outsl
imul
inc
ljmp
jmp
fidivs
mov
frstor
or
push
xchg
dec
adc
mov
sub
jecxz
mov
loope
stos
jmp
in
addr16
mov
mov
dec
mov
inc
jle
or
cmp
mov
mov
inc
addr16
sub
cli
in
loop
jecxz
fwait
push
jno
jae
inc
mov
movsb
and
inc
lods
out
push
cmp
add
fwait
dec
xor
das
push
xchg
es
jbe
inc
sub
jae
push
inc
mov
out
cmc
ljmp
jbe
xlat
cmpsl
pop
sub
xchg
push
pop
stos
add
push
pop
cmp
dec
lods
ds
mov
add
ja
cld
lret
xor
leave
and
shl
pusha
jo
mov
imul
lea
sbb
icebp
out
mov
lock
jle
cmp
jb
dec
mov
addl
sub
lcallw
shlb
pop
int3
push
add
pop
pop
inc
fcoms
pop
push
xchg
sbb
cmpsb
icebp
or
mov
mov
fcomps
cld
mov
outsb
pop
adc
jle
dec
dec
lahf
mov
outsb
outsb
mov
ret
lret
rol
jp
out
scas
int
pop
rcrb
cwtl
into
xchg
call
js
sbb
mov
xor
cmp
pop
push
mov
push
imul
and
lods
inc
fldcw
cltd
pop
insl
stc
add
dec
pop
or
mov
mov
stc
ljmp
adc
out
sti
pop
jne
sub
inc
mov
mov
mov
or
add
mov
xchg
mov
sbb
xchg
cmp
mov
lret
incl
mov
rcl
and
push
pusha
adc
mov
mov
out
cmp
scas
mov
jae
push
nop
sbb
sbb
and
or
ja
jl
jecxz
ljmp
or
aaa
mov
cmp
jle
inc
mov
cmp
mov
mov
jo
je
in
xor
jp
sbb
mov
cmpsl
fisubl
cwtl
pop
sbb
in
rorl
jp
push
mov
jg
xor
fcompl
jge
movsb
std
ljmp
push
xor
mov
push
mov
push
inc
cmp
fwait
into
xlat
int
jecxz
dec
fbld
in
inc
insl
test
icebp
sbb
loop
push
mov
sbb
jnp
add
inc
sbb
jb
push
xor
add
inc
out
mov
xchg
mov
inc
jne
sbb
out
dec
sbb
inc
pop
out
dec
out
jecxz
mov
jge
xchg
pusha
divb
jmp
loop
in
aas
mov
jno
cmp
sti
pop
lret
ret
cmp
rolb
cmovbe
inc
jp
adc
test
cmpsl
xor
outsb
outsl
xor
cmp
cld
or
sub
inc
mov
fdiv
adc
sub
push
push
arpl
xorb
lods
jge
xchg
jg
jmp
loopne
test
movsl
jbe
push
scas
movaps
insb
cmpsl
push
jmp
sbb
xchg
cmp
mov
das
scas
enter
sti
lds
jnp
xchg
cmpsb
inc
jnp
fwait
cmp
mov
arpl
test
cmp
xchg
rcr
insl
pop
xchg
shll
and
adc
xor
nop
enter
mov
repnz
push
aaa
xchg
xor
mov
mov
in
inc
hlt
mov
test
pushf
lods
pop
mov
subb
jns
lret
sbb
pop
sbb
jb
xor
add
fstps
mov
std
pop
aas
or
mov
mov
in
xchg
fsts
ja
or
sbb
movsb
daa
insl
mov
pop
push
cmp
mov
cmc
pop
cli
mov
call
pop
cmp
or
add
mov
leave
fiaddl
fstpt
add
out
jno
xor
add
push
loop
nop
or
js
mov
cmp
jecxz
cmp
fbld
lret
into
enter
adcl
or
mov
out
sub
imul
sub
xor
pop
xchg
adc
xchg
in
push
test
sbb
jbe
mov
push
pop
aas
scas
cmp
leave
daa
adc
jo
add
ja
or
pop
out
xchg
jmp
gs
ret
adc
xor
loopne
fidivrl
insb
ljmp
ljmp
mov
stos
popf
push
mov
shr
dec
cmp
pop
pusha
pop
sub
push
pop
pusha
fwait
sbb
or
cli
xchg
das
je
jns
lds
ljmp
orl
daa
mov
inc
imul
xor
xchg
roll
out
fistpl
mov
jmp
cltd
fldcw
jmp
lds
inc
ja
out
jp
bound
int
test
outsl
in
mov
fbld
icebp
sub
jo
gs
or
xchg
sub
pushf
jne
pop
mov
pop
inc
or
push
push
push
adc
int
add
xor
clc
sub
out
aam
mov
scas
inc
jge
fildl
jne
ss
aaa
lds
cmp
cmp
scas
fstpl
jecxz
test
pop
pop
or
fmuls
inc
add
inc
and
xchg
xor
cld
dec
cmp
mov
pop
loopne
and
dec
dec
insl
inc
lods
aad
jecxz
pop
sub
cwtl
jl
fistpll
idiv
cmp
aad
pop
sbb
cld
ljmp
cmp
in
xchg
data16
je
xor
fwait
lds
out
push
insb
ret
aam
dec
mov
jne
test
shrb
cmp
push
jmp
mov
mov
pop
fistl
fs
mov
jg
adc
fsubrl
mov
xchg
xchg
and
adc
stc
cmp
or
dec
outsl
sbb
pop
movsl
inc
arpl
xor
movsb
push
lahf
test
lds
jmp
cmc
and
mov
mov
adc
enter
push
cmp
movsb
mov
ja
inc
dec
mov
mov
es
aad
and
jns
xchg
bnd
sbb
mov
scas
pop
cmp
xlat
cmp
inc
cmp
sti
clc
mov
xor
cmp
xlat
mov
push
inc
sub
mov
and
lock
pop
inc
push
out
jp
inc
movl
inc
lret
push
out
jl
pop
sbb
out
insb
std
lcall
lods
jb
sbb
shll
cmp
push
sub
lret
fnstcw
sub
push
jb
mov
push
nop
bound
or
pushf
add
scas
mov
push
or
push
out
mov
mov
dec
cmp
pushf
hlt
push
cmp
jl
outsl
int
inc
aaa
movsl
in
out
xor
das
out
rcrl
sub
int3
mov
mov
inc
push
outsb
adcl
repnz
popa
inc
ficompl
pop
or
mov
push
idivl
dec
and
or
xchg
aam
jg
sbb
cmc
xchg
loopne
pop
jae
add
lods
aaa
out
mov
test
jbe
push
out
add
inc
std
in
jno
divl
in
insb
push
push
fwait
movsb
cltd
cmp
cmp
fcmovbe
outsl
xlat
mov
in
das
or
add
scas
cld
sbb
daa
movsl
sub
add
out
add
jo
int3
insl
pop
enter
cmp
fcoml
add
mov
arpl
jno
outsb
and
data16
into
stc
pop
stos
add
lahf
rclb
and
or
cmpsb
add
xor
out
or
add
and
data16
test
cld
idiv
mov
jmp
mov
pop
pop
clc
sub
stc
into
daa
or
je
fmuls
js
scas
cwtl
ja
enter
das
mov
outsl
loopne
pop
pop
and
call
add
pusha
scas
aaa
ss
jmp
add
outsl
xchg
and
mov
lea
stc
int
popf
loope
sub
pop
testb
xor
sbb
mov
lahf
rcrb
cmp
mov
rcl
es
push
push
dec
pop
jns
inc
mov
sbb
stos
sub
nop
or
loope
push
enter
mov
loop
push
push
push
push
std
lret
inc
dec
mov
lret
dec
push
pop
sub
sahf
mov
test
out
fucom
adc
xchg
pushf
add
imul
ficoml
jge
cmpsb
or
shl
mov
cltd
dec
xor
mov
je
mov
lret
imul
leave
movl
sub
and
enter
ficoms
jp
push
ds
lret
mov
mov
mov
leave
fwait
and
or
in
push
pop
lds
in
stos
mov
fucomp
pop
cmp
mov
mov
inc
sub
mov
and
pcmpgtw
movsb
sub
js
bound
jbe
mov
cltd
into
inc
mov
push
and
add
mov
push
push
in
mov
adc
shlb
into
sub
add
insb
xor
je
repnz
lret
pop
fcomip
imul
stc
and
int3
test
aaa
jge
nop
je
mov
aam
pushf
and
and
insl
xor
neg
fimuls
jo
popf
add
fstl
adc
hlt
and
jmp
cmpsb
xchg
loopne
inc
push
and
xor
stos
inc
pop
out
arpl
add
xor
rclb
mov
mov
add
aad
repnz
inc
testb
lods
outsb
push
sbb
or
jnp
cs
push
xorl
stos
sbb
nop
pop
cmp
fdivl
into
subb
pop
sbb
adc
dec
int
in
pop
mov
or
in
xor
decb
jne
lea
or
adc
stos
cmp
mov
sbb
jae
shrl
push
or
lock
xchg
gs
adc
and
push
dec
jnp
xchg
lret
adc
xchg
lds
sub
out
pop
jg
pusha
add
mov
dec
cs
insb
mov
inc
loopne
push
xlat
sbb
mov
dec
mov
jp
sbbl
cmp
pusha
cmpsb
xlat
lock
imul
lret
ficompl
dec
mov
sahf
clc
les
add
rol
mov
add
sbb
sbb
xorl
je
add
mov
and
jg
addr16
jns
mov
cmpsb
inc
insb
and
orl
and
or
dec
imul
xchg
cli
jno
inc
xchg
cwtl
sub
jmp
cmp
pop
inc
mov
test
test
push
cmpsb
xchg
and
orb
mov
sbb
ret
xor
jno
mov
or
outsb
pop
jbe
add
pusha
push
lahf
lods
into
xchg
loope
lahf
or
xlat
add
pop
or
pop
inc
add
dec
xchg
ljmp
mov
jge
xchg
jmp
out
cld
push
scas
jmp
rolb
jo
adc
scas
or
aad
mov
or
fnstenv
iret
ret
adc
imulb
out
mov
push
pop
adc
add
mov
lahf
or
xor
push
mov
movsl
mov
adc
out
ljmp
or
cmp
cmpsl
decb
sbb
pop
sub
shll
xlat
pop
push
mov
insl
aas
push
sub
push
inc
xchg
fiadds
arpl
les
addr16
out
shll
cli
or
call
jb
cs
cmp
shll
lock
mov
outsl
shrb
push
hlt
shrb
rcrb
popa
sub
imul
mov
int3
inc
lret
mov
jmp
test
not
cld
xor
sahf
mov
mov
jmp
rclb
iret
pop
in
fldenv
mov
sub
inc
enter
ja
int3
jnp
cmpsl
psubq
mov
popa
adc
enter
jb
adcb
pushf
in
sbb
inc
stc
add
push
push
jns
mov
jne
adc
dec
xchg
sarb
jp
mov
and
imul
xor
pushf
mov
sub
stc
fmuls
or
push
lret
mov
cmpsb
cltd
mov
shll
add
xchg
popa
cmpb
loope
jg
lds
imul
rclb
test
outsl
mov
adc
pop
test
cmp
lret
or
scas
xchg
add
aam
mov
jno
dec
in
pop
sbb
xor
add
enter
jl
jns
cli
cmp
ljmp
mov
ljmp
dec
daa
call
push
xchg
pavgw
rcrl
sbb
xor
pushf
imul
inc
mov
popa
sub
inc
movsl
dec
xchg
aaa
cld
adc
imul
hlt
xor
inc
sarl
xchg
inc
xchg
out
loope
pop
xor
repz
push
mov
sub
inc
movsl
daa
outsl
aam
add
xchg
dec
inc
push
adc
ror
sub
jmp
std
mov
pop
repz
rcr
pop
mov
jp
mov
fistl
and
idivb
leave
stos
push
mov
pop
subb
add
fisubrs
arpl
mov
sti
lret
sub
stos
inc
arpl
in
add
das
aaa
mov
fcmovnb
jo
lcall
xchg
daa
fcmovu
cmp
sahf
mov
sub
shll
sti
add
imul
out
loop
xor
mov
adc
rorb
loopne
cmp
les
add
inc
mov
adc
mov
test
dec
add
pop
stos
push
push
outsb
aas
jnp
push
popa
xor
not
stos
push
ror
mov
or
sarl
loopne
push
xchg
sarl
pushf
jo
test
aas
notb
or
mulb
inc
mov
pop
add
out
pop
add
and
inc
nop
cmpsl
fildll
clc
mov
ljmp
test
js
aaa
jo
and
and
pop
inc
sub
ret
gs
adc
cltd
fldenv
negl
lods
test
stos
mov
jbe
dec
clc
sahf
fldl
push
push
push
mov
pop
mov
mov
and
test
mov
cltd
dec
dec
mov
mov
lcall
lods
push
adc
cmp
cmp
or
push
jl
and
xor
mov
cmp
mov
fld
shlb
out
or
inc
pop
inc
xor
mov
and
push
stos
sbb
dec
je
sar
cmp
into
adc
or
outsl
leave
jecxz
inc
pop
outsb
fbstp
int
in
push
or
in
ljmp
sbb
and
test
jnp
and
scas
xchg
mov
pop
mov
test
scas
jns
xchg
inc
inc
xor
sub
ret
jne
xor
imul
mov
dec
cmpsb
loop
rorb
dec
mov
cltd
mov
int
cli
jnp
lods
mov
cmp
xor
movsl
mov
nop
sahf
mov
cltd
xchg
cmc
out
dec
fsubrs
out
dec
sub
cmp
inc
inc
mov
ja
and
cltd
mov
jmp
aad
xchg
jno
inc
sahf
addr16
jns
pop
fidivrl
test
mov
int
jg
cmpsb
sub
test
mov
dec
jmp
fimuls
popa
sub
out
dec
jbe
and
sub
enter
mov
mov
mov
inc
lea
and
les
xchg
and
push
xchg
push
xor
scas
orb
push
push
sub
fisttpll
jmp
adc
mov
out
mov
xchg
mov
push
cld
mov
cmp
pop
xor
insb
lods
std
cs
sub
loopne
pop
and
sbb
and
cmc
ret
jmp
push
or
clc
ds
fnstenv
les
xchg
mov
rcl
sbbl
mov
or
add
add
mov
cs
xchg
mov
notl
fdivl
or
push
in
pop
enter
cwtl
lcall
hlt
or
sub
icebp
push
pop
push
adc
pushf
dec
cmp
and
in
dec
mov
dec
push
fdivrl
xor
cmp
mov
das
mov
jo
frstor
out
and
mov
jecxz
aad
inc
repz
fcmovu
jmp
shll
shlb
lds
nop
dec
call
push
aam
mov
xchg
ret
fcmovb
mov
mov
mov
push
pushf
mov
mov
jmp
mov
sub
popa
xchg
aad
or
mov
xchg
adc
adc
stos
xorl
cs
clc
scas
mov
mov
pop
iret
shr
jns
stos
push
into
fcmovnu
xlat
dec
sub
adc
insb
ds
adc
pop
in
das
fs
jecxz
adc
daa
jmp
push
add
subl
inc
int3
pop
shlb
jg
jp
lcall
xor
jp
push
ja
cmpsl
mov
sub
sahf
cs
fs
xlat
jge
ljmp
aam
sbb
push
cli
lahf
sub
mov
fbld
cmpsl
addr16
dec
cmp
dec
ret
mov
out
aas
loopne
pop
movb
jge
and
orb
sub
gs
insb
add
icebp
jmp
jp
jg
stc
pop
and
mov
mov
enter
add
into
out
popa
bound
test
dec
repz
xorb
xchg
mov
vpcmov
ljmp
mov
jae
push
int
mov
out
out
xor
inc
stc
mov
lods
mov
les
iret
leave
or
mov
xchg
or
or
cltd
clc
gs
scas
sub
repz
testb
and
mov
sub
dec
and
mov
ja
test
aaa
inc
adc
add
pop
sbb
insl
mov
xor
xor
inc
imul
pop
fucomip
xchg
aas
mov
xor
pop
dec
lods
push
aas
pop
and
and
dec
test
aam
into
loopne
cmp
lea
in
fsubrs
mov
xor
enter
push
inc
outsl
xchg
icebp
push
test
movsb
hlt
jecxz
push
dec
or
or
dec
jecxz
in
stc
lods
cmc
std
enter
dec
cld
std
insl
inc
out
notl
push
sti
xchg
repz
fisttps
daa
es
ret
adc
lahf
sbb
add
in
daa
or
in
adc
scas
jmp
outsb
xchg
push
sub
ljmp
sar
lea
mov
jns
adcb
pop
or
in
test
outsl
jmp
std
pop
testb
inc
sbb
pop
sbb
aaa
lret
adc
jle
cmp
clc
jnp,pt
mov
mov
xchg
lret
push
data16
shll
mov
repnz
scas
lcall
jmp
fcomps
test
push
lahf
lcall
fwait
dec
loope
push
mov
ds
pop
push
shll
lret
push
jae
sub
xor
add
jns
popa
addr16
outsb
cmc
cmp
stos
rolb
xlat
pop
cmpsl
insl
les
cmpsl
or
in
push
icebp
sub
test
sbb
adc
adc
ds
mov
push
lds
insl
insl
lret
std
subb
cmp
call
sbb
jl
xchg
sbbb
mov
jne
daa
mov
mov
insb
sarl
dec
mov
addb
and
aaa
dec
leave
sub
push
and
out
loope
pop
je
sbb
mov
test
imul
int
mov
push
lock
in
mov
pop
lds
stc
add
je
mov
jb
repz
xchg
mov
popf
test
enter
or
dec
test
push
sbb
mull
add
inc
clc
fstl
pop
sub
testb
stos
lods
push
repnz
test
push
cwtl
scas
add
movsl
and
and
fldenv
pop
daa
ja
mov
xor
rcrb
incl
push
stos
clc
sti
inc
adc
scas
cli
jmp
pop
bound
xchg
and
divb
add
push
inc
mov
cmp
push
push
mov
faddp
pop
xchg
inc
cmpsb
xor
cmp
push
inc
inc
and
mov
daa
pop
jg
out
orb
test
push
int3
inc
in
xor
jns
leave
push
and
sub
sbb
mov
mov
cmp
lret
mov
mov
sarb
out
jbe
push
sub
fwait
repnz
cmp
xor
jg
jno
subl
daa
jbe
cltd
push
addl
cmp
pop
dec
dec
jp
out
imul
test
mov
sahf
push
mov
pop
ret
mov
adc
pushf
loopne
push
shll
push
andb
out
xor
mov
adc
mov
add
sbb
and
sub
xor
xchg
fwait
or
dec
jp
or
jl
mov
inc
xor
mov
adc
dec
or
push
cmp
xchg
add
add
nop
lods
je
fwait
stc
push
jp
sahf
mov
fcmovbe
mov
xlat
mov
pop
sbb
in
mov
enter
cli
and
jl
jp
push
mov
xchg
mov
push
cs
cmpsb
gs
jne
xchg
push
jp
mov
fisubrs
pushf
inc
xor
xor
mov
es
shlb
dec
or
les
cmp
jns
jo
sub
cwtl
or
inc
inc
sbb
movsl
fiadds
test
dec
xor
or
ja
mov
inc
inc
addl
or
add
push
cli
sbb
inc
dec
repz
leave
decl
xchg
sahf
jne
mov
or
adc
fidivrs
and
mov
adc
out
sbb
push
inc
scas
clc
aam
loope
or
dec
sub
mov
ficomps
and
lock
pushf
pop
and
into
dec
dec
adc
mov
stos
inc
cmc
sub
ror
ret
fbstp
add
mov
add
stc
adc
sub
push
push
sub
xor
or
mov
push
push
movsl
cmpsb
mov
pusha
sti
jae
xor
inc
push
pop
adc
mov
rcrb
insl
or
cmp
pop
pop
push
or
out
push
jl
insb
mov
push
and
ja
adc
sbb
imul
lds
lcall
cmc
and
insl
adc
jbe
mov
sub
movsb
pop
sub
lret
sub
adc
inc
rclb
scas
add
pop
fs
jmp
aad
or
cmp
mov
pop
stos
in
pop
xchg
insl
pop
mov
mov
in
sbb
insl
push
ljmp
dec
dec
andb
ljmp
loope
fstpt
jmp
bnd
in
mov
addr16
xor
dec
std
xor
stos
push
fcoms
aam
mov
popf
xor
es
pop
dec
sbb
jp
dec
mov
test
dec
push
ret
pushf
jnp
mov
and
cs
cmpsl
movb
bound
stc
mov
fistpl
cmpsl
add
ss
ret
imul
sbb
sahf
cmpsb
adc
jb
sub
push
sbb
and
in
xor
dec
je
mov
jo
in
jnp
xor
fcomps
mov
mov
mov
fwait
je
mov
ficoms
inc
dec
das
rclb
out
out
pop
inc
add
out
hlt
fdivl
jno
xor
ljmp
dec
jmp
dec
fcom
sbb
add
rol
xchg
js
mov
punpcklwd
pusha
xchg
xchg
mov
das
push
and
test
fwait
sbb
sub
dec
fwait
rcrb
sbb
push
pop
in
clc
lret
imul
in
add
inc
lods
lret
fidivrs
jne
js
int3
push
gs
push
or
jbe
mov
mov
test
sbb
stos
sbb
xlat
mov
les
test
push
ret
jmp
shl
cmp
xlat
and
outsl
ss
movsb
jp
mov
test
stos
or
sub
xchg
int3
scas
outsb
adcl
test
sti
in
lods
ja
sbb
push
pushf
xor
adc
in
ja
scas
and
push
dec
xlat
xor
cmp
add
xchg
mov
rcr
or
fwait
pop
fcmovb
fdivs
mov
test
scas
andl
push
aaa
push
cmp
lcall
fistps
jl
pop
jg
dec
xchg
mov
and
cmp
loope
hlt
xor
mov
sahf
and
push
pop
lods
pusha
lock
pop
mov
jbe
aas
mov
jp
jno
sbb
xor
rorb
dec
cmp
ret
mov
outsb
cmp
cmp
mov
mov
cmp
bound
popa
fidivrs
mov
mov
inc
push
outsb
adc
jg
cmp
or
imul
arpl
cmp
jbe
push
mov
scas
ret
mov
mov
insb
pop
aas
cmp
in
sub
jae
jo
lea
pop
dec
inc
repnz
sbb
cmp
idivb
or
push
mov
cmp
jno
pop
notb
lret
mov
xor
jnp
sbb
push
fcomi
inc
daa
mov
iret
clc
sub
sarl
lret
call
test
sub
mull
lea
jnp
jns
sbb
or
lock
shr
in
mov
inc
stc
adc
sbb
test
dec
lods
jbe
pushf
dec
out
test
push
in
sub
aas
out
int3
lods
fs
ss
inc
rcr
stos
xchg
mov
out
sub
push
and
sbb
pop
cmc
test
or
inc
enter
mov
push
in
ja
sub
into
or
js
insb
cltd
mov
dec
mov
clc
loopne
arpl
jle
lea
push
jae
cltd
add
inc
adc
or
mov
adc
movsb
mov
dec
clc
neg
lods
cld
or
pop
inc
dec
popa
mov
ss
ret
movsb
xlat
fsubl
test
les
es
leave
popf
push
out
push
enter
xchg
call
in
fbstp
push
aaa
repz
scas
aas
xor
cmp
jnp
push
inc
stos
fwait
scas
stos
xchg
adcl
enter
scas
pushf
lods
ret
cmp
decb
outsl
xchg
xchg
cmp
movsb
mov
sub
sti
jae
test
test
push
add
sub
sbb
sbbl
sbb
fisubl
or
jge
cs
push
inc
fstpl
sbb
in
add
out
idivb
scas
mov
hlt
push
fistl
mov
mov
rclb
cmp
xchg
xchg
inc
dec
mov
xor
les
sub
popf
loop
ljmp
andb
push
jb
adc
mov
cmp
ds
imul
cmpsl
pop
jb
test
divl
shrl
sbb
jbe
push
inc
in
je
adc
fisttpll
add
in
loopne
push
imul
inc
lds
fabs
jns
cmc
pop
and
rorl
jl
stos
jns
mov
xchg
pop
mov
jmp
cltd
in
push
xchg
xlat
std
les
sub
mov
pop
xchg
arpl
pushf
lock
nop
push
rcr
test
adc
mov
sti
jp
sahf
xchg
mov
sub
mov
mov
mov
jge
hlt
popa
dec
xchg
outsl
sbb
xor
dec
inc
mov
lcall
xor
rorb
lcall
mov
dec
rcrb
outsl
and
add
inc
mov
enter
shrl
and
add
aam
rorb
push
pop
xor
into
sub
cmc
setne
test
addl
pop
adc
adc
pop
or
xchg
xchg
mov
jae
cmp
dec
xchg
test
fcomps
cltd
add
jb
mov
std
sbb
sarl
mov
es
cltd
movsl
imul
lahf
or
cmp
dec
ret
loopne
fdivr
pop
stos
les
sbb
ja
iret
push
push
cli
xchg
dec
fiaddl
insl
add
in
cltd
cmpsl
push
stc
inc
mov
arpl
andb
bound
aad
jb
adc
pop
xor
inc
and
fwait
in
xor
or
push
xlat
rorl
ret
pop
popa
rclb
xchg
pop
sub
movsb
sub
test
arpl
sbb
add
loop
dec
mov
imul
push
rorl
lret
orb
popa
jae
and
xor
dec
dec
xor
aad
push
add
push
fcoml
pop
insl
in
xchg
je
push
jae
sarl
pop
les
bound
movsl
mov
sub
push
pop
adc
mov
pop
mov
int
scas
sahf
lret
cmp
shll
add
push
into
jmp
ret
and
fldl
scas
xchg
dec
mov
jns
mov
ljmp
xchg
in
mov
lahf
jp
fcom
iret
mov
ret
lahf
or
mov
xor
dec
pop
xchg
test
pop
cmp
lods
jmp
divl
mov
adcl
sub
dec
setnp
inc
mov
in
sub
add
shrl
scas
stos
bound
fldt
lock
lock
lods
adc
inc
push
inc
imul
mov
adc
test
mul
aad
push
mov
xor
adc
imul
and
repz
test
pusha
movl
fidivl
add
loopne
jecxz
scas
jno
cli
jbe
imul
cmp
sarb
ss
fistpl
or
mov
sbb
or
cmovle
cmp
xchg
dec
push
mov
je
mov
adc
pop
int3
cmp
push
daa
mov
jg
lcall
fcoml
jb
inc
push
sbb
ljmp
mov
cmp
mov
lahf
inc
inc
mov
and
rcl
scas
xchg
mov
ja
lds
in
push
fisubrl
test
les
push
in
jne
sti
dec
icebp
or
lds
add
xchg
ss
insl
jg
aaa
loop
nop
lret
ret
inc
xchg
push
rcrl
mov
mov
scas
std
pop
lods
xchg
mov
xchg
mov
int3
adc
add
adc
xor
pop
std
mov
adc
aas
adc
push
mov
out
cltd
xor
scas
add
enter
test
push
sub
mov
and
shl
mov
xlat
paddusb
lods
les
aaa
adc
fsubrl
orb
cmp
sar
jae
cld
sub
dec
jb
sub
or
in
ds
push
test
mov
fwait
jle
in
sbb
fs
lock
mov
repnz
in
lods
scas
mov
push
scas
jecxz
movl
or
jge
insb
push
aas
or
xchg
push
les
lret
jns
add
sbb
in
cmp
sub
sahf
inc
or
inc
daa
push
ljmp
push
xor
mov
insl
cli
push
sbb
lret
push
nop
call
fwait
pop
divl
inc
push
cli
or
inc
and
mov
pop
in
out
loope
pushf
mov
adc
sar
out
jns
testl
std
int3
ss
sub
out
imul
cmp
dec
inc
lds
out
cmp
ret
fcoml
rolb
push
pushf
pop
fldenv
xchg
xchg
lret
pop
mov
mov
adc
test
and
sbb
mov
push
scas
or
pop
jae
pop
inc
mov
jp
test
int
sahf
pop
mov
jle
pop
shrb
sbb
xor
scas
inc
push
jne
dec
inc
je
or
mov
adc
hlt
fldt
aas
inc
cmc
jg
dec
and
subb
xchg
sub
add
nop
dec
iret
or
inc
jle
jmp
test
dec
and
loop
imulb
cltd
fisttpll
mov
pop
loope
fstp
xchg
fmul
and
int
mov
pop
mov
decb
inc
jno
pop
movsb
mov
mov
in
jb
das
jbe
mov
mov
sub
inc
subl
jmp
jle
push
sub
jo
pop
icebp
dec
mov
mov
loopne
jbe
add
sysenter
and
lds
fs
cmp
add
pop
sbb
cmc
jle
neg
dec
sbb
cli
and
mov
js
bound
in
or
lds
or
mov
inc
push
addr16
ja
mov
mov
fldcw
xchg
insb
cmp
jb
aam
sti
sub
lods
sbb
pop
cmpsb
and
inc
in
mov
sub
push
push
repnz
sub
out
xor
jmp
mov
rol
adc
jge
xchg
jge
imul
push
es
jb
sub
or
jp
in
stos
pusha
xorl
adc
dec
insl
xor
mov
add
dec
push
decl
pop
xchg
mov
aas
push
mov
out
adc
addr16
mov
loopw
xlat
lret
push
int
push
in
call
cmp
jbe
dec
in
shr
dec
cmc
xchg
bswap
loope
mov
dec
orl
popf
loope,pn
xchg
add
inc
mov
jmp
cltd
xor
stos
icebp
jnp
pusha
data16
fists
add
mov
and
into
dec
pop
push
pop
shll
jg
fnstsw
dec
push
mov
cmpsb
cmpsb
jb
int
mov
pop
and
test
leave
mov
xchg
nop
ss
int
mov
imul
cmpsb
ds
xchg
or
sub
les
fs
bound
orb
fimull
mov
adc
jno
js
mov
or
test
stos
jmp
and
adc
lcall
clc
stos
cmc
mov
lea
xchg
adc
sub
and
jmp
test
pushl
sbb
inc
dec
jecxz
xor
lds
inc
pop
sub
ud0
mov
inc
push
jecxz
mov
in
push
div
sbb
popa
adc
mov
jl
cmc
scas
jmp
das
sub
sbb
jno
vpmovsxbd
gs
cmp
pop
mov
mov
xlat
in
bound
lcall
pusha
jno
push
cld
ljmp
movsl
fmull
pop
ss
bound
cmp
xchg
jns
pop
xchg
adcl
mov
push
inc
popa
sub
cmpsb
xchg
stc
lahf
add
call
cmp
sub
adc
jae
icebp
rclb
in
and
mov
push
inc
pop
leave
pusha
xorb
dec
mov
stc
xor
sbb
jnp
xchg
mov
lret
jl
dec
sbb
push
cmp
adc
ret
movl
jno
lahf
sub
cmp
mov
insl
clc
inc
adc
faddl
push
adc
cli
popf
enter
repz
jp
adc
repnz
testb
rorb
loope
dec
and
jl
inc
addb
cli
stos
fdivl
into
out
cmc
cli
loopne
mov
out
lahf
je
ljmp
out
imul
mov
add
sub
test
ja
aaa
add
dec
cs
in
cmp
or
into
into
lahf
imul
ljmp
cmp
das
jbe
mov
push
sbb
mov
jle
cmp
adc
cmp
ret
cmp
xchg
pop
push
sub
fsts
fstpl
fdivs
outsl
push
xchg
mov
test
xlat
cmp
jns
pop
add
mov
addl
dec
sub
cwtl
enter
cmpl
into
jmp
jecxz
repnz
dec
bound
push
les
mov
push
out
sub
push
jne
xor
pop
and
mov
arpl
mov
subb
outsb
adc
xchg
push
ss
test
pushf
in
mov
mov
push
ret
es
dec
pop
iret
mov
lock
jb
int3
sti
xchg
rcl
shll
sbb
jg
push
fcoml
inc
outsl
xlat
push
cmc
mov
pop
das
mov
gs
stos
xchg
sub
not
call
test
outsb
popa
int
mov
adc
int3
and
fst
cmp
jmp
int3
inc
ret
jle
cmpsl
loopne
add
ret
xchg
jns
popf
cmp
cs
test
and
fmulp
dec
stos
mov
add
scas
popa
aas
mov
mov
and
dec
lahf
outsb
cmc
sti
cld
idivl
ret
ret
testb
sbb
add
bound
xchg
in
repz
or
sahf
sub
insb
dec
adc
adc
cmp
sahf
movsb
sbb
div
pop
push
stos
mov
push
cld
insb
or
sbb
fmul
mov
xchg
jbe
out
xchg
arpl
xchg
test
ds
cmp
inc
mov
cmp
das
sub
arpl
push
call
pop
imul
jae
mov
adc
mov
sub
and
ljmp
xchg
sbb
sub
cmp
pop
lret
pop
jb
leave
fyl2xp1
xorl
mov
mov
cli
out
and
sub
scas
xchg
pusha
or
aas
clc
dec
daa
dec
popa
imull
fsubs
je
aad
das
inc
fldl
xor
xor
xchg
dec
cmc
out
mov
jno
xchg
cmpl
fsubs
sti
jae
pop
sbb
sub
xor
ja
cmp
jecxz
mov
lods
pop
push
cltd
and
push
cs
mov
fdivrp
and
bound
xor
push
jge
cld
fwait
fidivrs
pop
out
jno
leave
fwait
mov
pop
fwait
or
xor
mov
into
mov
cwtl
std
arpl
adc
aaa
and
add
test
iret
sub
out
mov
xor
cs
fucom
fidivl
xchg
mov
add
mov
shl
out
inc
push
xchg
movzbl
jae
movsb
cwtl
mov
je
ds
jle
out
mov
test
inc
sub
rorl
pop
mov
jecxz
lahf
jge
stos
rcrl
fldcw
pop
mov
sbb
cmp
pushf
bound
push
fwait
dec
cli
test
mov
cwtl
push
pop
push
xor
mov
inc
lret
xlat
sub
in
scas
into
mov
adc
or
jmp
orb
xor
push
cmpsb
pop
and
mov
pop
gs
ss
inc
and
jno
push
out
sub
mov
femms
std
das
out
mov
mov
fsts
sub
fiaddl
mov
lret
push
jecxz
inc
pop
cmp
dec
jno
push
pop
sahf
movsb
popa
and
data16
mov
or
push
xor
divl
dec
and
xchg
push
aaa
rclb
fwait
mov
scas
mov
mov
and
data16
cltd
js,pn
popw
call
imul
cwtl
call
pop
daa
jmp
testb
or
push
imul
mov
or
add
dec
adc
or
xlat
fildll
pop
mov
and
sbb
popf
lods
xchg
xor
nop
mov
out
cmpsl
stos
dec
repz
es
sbb
sbb
pop
insb
sti
pop
pop
mov
pop
mov
and
lods
aaa
or
mov
cmp
push
pushf
and
or
jb
hlt
cltd
jge
mov
cmpsl
outsl
mov
stc
mov
cmp
test
repz
int3
gs
test
push
inc
ds
insb
or
jo
adc
pop
outsl
mov
mov
sarl
stos
add
or
mov
sub
imul
out
or
fdivrs
mov
sbb
adc
or
mov
stos
push
or
pop
movsl
mov
adc
adc
lea
stc
mov
mov
xchg
inc
out
inc
or
rcl
cmp
jns
adc
inc
ss
inc
pop
mov
ljmp
imul
test
ficompl
add
jno
mov
shll
test
loop
sub
add
clc
adc
xor
cmp
jb
mov
xchg
jge
cmc
mov
mov
xlat
iret
xchg
pop
inc
dec
out
std
push
lret
outsb
sub
and
fists
pop
or
popl
insb
ret
int
xchg
dec
dec
sub
xor
mov
lcall
shrl
mov
test
dec
rcl
jmp
test
movsl
dec
adc
clc
test
cld
or
inc
push
add
mov
fbld
adc
mov
xchg
in
add
imulb
xlat
jmp
je
jae
xchg
shlb
cs
testl
not
sarb
fldcw
push
xor
aam
inc
jge
sub
mov
arpl
xchg
les
into
pop
pop
sub
fisubl
push
shrl
loope
jl
gs
mov
pop
addb
xchg
dec
sub
addl
pushw
das
data16
inc
cmpsb
ja
loopne
or
in
dec
jo
loop
cmp
lahf
push
jp
mov
sarl
lods
mov
cwtl
rcl
xor
xchg
mov
mov
imul
mov
pop
or
jnp
jne
and
push
xchg
inc
pop
inc
mulb
ja
and
dec
cld
push
shr
mov
and
push
scas
incl
xchg
xchg
ror
fnstsw
fisubrl
shll
add
sub
mov
mov
pop
cwtl
adc
push
sbb
cmp
add
inc
loop
and
mov
push
push
in
aam
dec
adc
stos
out
ss
imul
adc
loop
mov
xchg
sbb
add
push
jecxz
sub
test
outsb
loopne
push
xor
jmp
pop
fucomp
jns
cmpl
in
inc
std
xchg
bound
pop
inc
xchg
dec
inc
push
lods
aam
push
ret
das
or
adc
pop
xchg
xchg
push
ret
popf
xor
push
push
in
xor
fwait
cmc
xchg
pusha
sub
xchg
inc
leave
insb
shl
jbe
mov
and
mov
mov
cmp
int3
mov
mov
pusha
out
shlb
out
xchg
xor
xchg
push
loope
push
es
push
or
insb
inc
cmp
jae
fsubs
mov
je
daa
cli
cwtl
inc
and
js
imul
in
pop
inc
mov
push
inc
mov
fbld
test
movsl
aas
int3
je
int3
push
mov
mov
inc
push
mov
xchg
shl
idiv
sub
jge
xor
iret
xor
es
shlb
in
movsl
mov
fidivs
mov
mov
jmp
inc
push
jns
or
dec
rorb
adc
andb
adc
push
xchg
cmp
out
lahf
ret
out
mov
mov
jbe
scas
out
clc
mov
mov
push
sbb
in
test
pop
push
sub
push
and
push
cltd
jnp
lock
outsl
jmp
sbb
inc
mov
dec
clc
clc
push
mov
inc
pop
sub
shr
popf
sub
cmpsb
add
mov
out
cmc
hlt
call
shrl
addr16
enter
movsb
test
mov
sub
dec
cs
jno
sub
out
push
mov
daa
lcall
mov
pop
mov
sbbl
mov
pop
int3
stc
dec
dec
addr16
push
lret
lock
jecxz
dec
xchg
jo
push
mov
push
xchg
or
or
sbb
rdmsr
insl
inc
fdiv
fnsave
dec
jmp
mov
lea
sbb
dec
fcmovnbe
xchg
and
dec
loopne
inc
jg
pop
stos
loope
stos
movsl
cmp
out
adcl
scas
sbb
popa
lahf
test
xchg
in
cltd
addl
pop
lea
xor
jge
cmpsl
cmp
adc
dec
pop
xlat
hlt
inc
cmc
sar
sti
into
lods
jnp
or
arpl
rcrb
inc
push
add
dec
divb
cmp
lret
dec
cld
adc
sub
mov
pop
aas
pop
inc
xchg
pop
sahf
rep
les
addr16
adc
lahf
aaa
pop
cmc
mov
mov
push
cmp
sbb
cmp
lea
inc
lea
lahf
hlt
xor
sbb
jg
imul
xchg
fldt
jb
shlb
icebp
mov
jbe
and
clc
out
movsl
mov
push
and
mov
out
pop
push
aas
std
ret
cli
fdivs
lea
mov
test
sub
out
dec
jne
jb
jne
or
imul
or
fs
rclb
insb
aam
inc
sub
adc
shl
mov
xchg
pop
jecxz
addr16
lret
mov
or
jmp
cmp
mov
cld
jecxz
repz
movsl
movsb
outsl
rcrl
adc
or
ret
pop
inc
movsl
std
cmp
adc
mov
inc
adc
stos
push
cs
std
add
fwait
scas
data16
js
push
mov
lock
and
sub
scas
test
and
iret
lahf
mov
test
jns
cwtl
in
sbb
push
sub
xchg
pop
mov
sbb
arpl
add
fildl
mov
xlat
xor
xor
scas
mov
mov
test
movb
mov
cwtl
or
push
xchg
dec
push
out
lret
ret
adc
lock
dec
sarb
jl
mov
es
jle
int3
and
mov
hlt
cmp
lret
scas
cmp
mov
or
out
das
sub
inc
push
or
out
xor
mov
push
inc
jnp
cmp
adc
lea
push
mov
icebp
int3
in
cwtl
dec
lods
add
arpl
fdivrl
fsubrl
fidivs
sbb
xchg
into
jmp
out
jae
sub
inc
lock
mov
xchg
xor
icebp
inc
pop
rcrl
loop
inc
loope
adc
cwtl
inc
mov
lret
xlat
dec
movsb
adc
aaa
data16
jno
fisttpl
mov
push
in
push
adc
pop
mov
test
adc
dec
movsl
cmpsb
dec
sti
jns
enter
in
fnsave
mov
xor
xchg
enter
pop
arpl
dec
add
testl
pop
ss
std
push
xchg
sub
subb
lods
inc
and
or
push
aam
pop
sbb
in
out
push
jle
jmp
int3
adc
mov
or
dec
icebp
testb
and
xchg
lahf
outsb
jb
jle
inc
mov
int3
mov
lcall
clc
loopne
jne
mov
add
insl
jo
iret
ja
sarl
nop
imul
rorb
mov
stos
push
js
xor
ret
add
cwtl
dec
dec
xchg
sbb
repnz
xchg
sbb
call
xor
femms
movsl
and
push
hlt
sbb
push
clc
push
cs
mov
nop
add
mov
ljmp
out
sbb
daa
add
sub
loop
shrl
inc
jle
iret
push
mov
cs
in
mov
cld
cmp
dec
test
cmpsb
roll
inc
stos
xlat
outsl
lcall
out
fsub
pop
mov
jnp
cmp
movsb
jecxz
into
xchg
mov
fnstenv
decb
pop
test
lea
pop
xor
pop
mov
fdiv
mov
stos
mov
rcrl
push
jmp
imul
daa
aaa
pop
loopne
rcr
adc
and
loop
or
fstps
ljmp
jns
adc
pop
mov
adc
scas
daa
xlat
popa
cmp
sbb
cmc
mov
aaa
stc
or
shlb
xor
sub
bound
mov
in
fmull
cld
dec
scas
int
cmc
jns
lods
xchg
stos
sbb
int3
das
sti
push
mov
pusha
stc
out
stos
icebp
cmpb
xchg
aad
fidivs
mov
out
scas
adc
push
mov
mov
dec
add
shlb
int
ljmp
cmpsl
in
aaa
fbstp
bsr
xchg
js
rcll
cmpsl
lds
push
mov
shl
stos
icebp
push
mov
push
int
jae
fistpll
ss
push
push
xor
outsl
int3
mov
add
imul
aaa
inc
dec
pop
addl
mov
popf
outsb
test
aad
mov
mov
dec
sbb
enter
filds
pop
fwait
out
push
shlb
jmp
repz
roll
loope
adc
xchg
out
gs
sbb
push
mov
inc
mov
sub
adc
mov
icebp
jne
sbb
aaa
ja
mov
push
push
mov
mov
push
cli
fisttpl
sub
adc
pop
pop
es
pop
add
arpl
sub
dec
pop
stos
loop
ja
aam
jo
sub
push
popa
cmpsb
stos
mov
outsl
test
jb
mov
pusha
xchg
sub
add
sbbb
jecxz
mov
and
popa
aaa
test
test
mov
xchg
addr16
mov
dec
xchg
mulb
xor
xchg
xor
fisubl
and
lock
out
add
loope
inc
push
jp
mov
jno
inc
in
fadds
xor
adc
loope
mov
mov
mov
mov
push
xor
movsl
jecxz
dec
jnp
or
pop
xchg
fwait
dec
xchg
cld
into
in
sub
and
test
lahf
and
push
cmp
clc
int3
push
mov
aaa
and
add
test
pop
or
sub
xlat
sahf
jge
fcoms
dec
push
and
ret
stos
mov
lea
pop
cltd
and
cmp
or
movsb
outsb
test
cmp
sbb
je
or
jbe
mov
sub
xor
jno
loopne
inc
push
adc
mov
inc
and
gs
gs
cmpsl
pop
mov
pop
adc
add
mov
push
lea
or
inc
rcll
fisttpl
mov
dec
enter
push
out
dec
decb
cli
cmc
cmp
ret
fwait
test
sbb
sub
insl
add
sub
sub
es
pop
mov
aas
or
ja
dec
addr16
pop
jnp
jmp
adc
pop
mov
scas
lds
das
imul
stc
gs
cld
int3
jmp
sbb
lock
sub
inc
ss
fsubl
std
xchg
fwait
ja
repz
aaa
dec
out
das
inc
sahf
into
in
imul
xchg
clc
cmp
push
popa
or
shlb
sbb
int3
ret
imul
push
lods
push
into
cmp
cli
xor
and
jg
fdivr
mov
scas
mov
mov
and
fdivr
aaa
popa
scas
bound
int3
es
adc
sbb
jne
lsl
sbbl
std
pop
xor
in
fcmovne
jb
stc
mov
popf
sahf
dec
scas
jne
lods
pop
enter
pop
lds
and
popf
mov
mov
sub
mov
mov
out
scas
push
cmp
out
xor
sbb
cs
adc
rcr
and
push
mov
icebp
dec
outsb
mov
pop
xchg
orb
inc
movsb
cmc
pop
sbb
andb
scas
hlt
test
adc
mov
mov
sub
out
jns
inc
call
cmp
sub
nop
out
insb
xor
in
add
scas
push
jbe
inc
rcl
mov
lea
pop
and
in
mov
jnp
stc
shr
inc
xchg
in
jne
aas
add
mov
fldenv
shlb
mov
call
cmpsb
and
popa
in
mov
mov
call
out
dec
dec
or
fxch
dec
dec
test
fsubl
repz
in
unpcklps
and
rorl
lods
ficoms
in
jg
xchg
push
dec
outsb
jg
cmp
repnz
cld
sahf
adc
pushw
in
gs
ret
inc
call
jbe
pop
cmpsb
pop
dec
popa
popa
or
rol
xorl
and
dec
push
mov
jb
push
adc
cmpsl
pop
mov
out
xlat
cs
pushf
push
in
sbb
adc
insl
xor
fdivs
mov
fwait
push
or
pop
scas
cmp
sub
jmp
arpl
mov
xchg
lcall
mov
adc
sti
add
push
push
push
outsl
lods
test
add
push
sbb
cmp
inc
les
mov
mov
inc
xor
lahf
xchg
icebp
inc
sbb
outsb
scas
inc
aas
dec
rol
or
shrb
loopne,pt
mov
mov
ss
mov
mov
shrl
inc
or
adc
lret
pusha
scas
pop
loope
cmp
add
decb
sbb
add
jle
mov
jb
jno
sub
negb
cli
loopne
addr16
ret
addr16
imul
aad
xchg
adc
pop
push
push
sub
push
pop
jl
cmpsb
pop
and
test
scas
aad
out
and
pop
icebp
cwtl
xor
enter
fisttpl
mov
scas
ret
in
or
test
fadd
rcrb
pop
out
sub
xchg
adcb
jmp
shrl
test
rep
add
push
std
mov
out
pushf
in
adc
mov
shll
addr16
shrb
cld
pop
repz
mov
in
lret
sbb
loope
dec
pusha
jnp
sub
insb
out
and
and
cld
in
aaa
push
pop
pushf
inc
cmp
js
inc
addr16
mov
jae
adc
xchg
in
negl
fcmovnbe
notl
or
aas
arpl
mov
icebp
xchg
pop
sub
mov
iret
lock
adc
pop
add
scas
int
push
mov
add
in
mov
sub
shrl
cmp
out
lcall
cmp
xchg
sub
fidivrs
sbb
add
adc
enter
lock
mov
lahf
pop
dec
jmp
aaa
fidivrs
jmpw
imul
rorb
mov
mov
call
sbb
fabs
shl
and
xchg
scas
ret
mov
mov
pop
xchg
divl
rorb
adc
test
int
jo
mov
push
fcomps
xchg
push
mov
leave
push
sub
imul
push
xchg
mov
adc
sub
inc
and
mov
rclb
loopne
push
pop
inc
xchg
in
mov
fwait
inc
clc
es
pop
enter
push
sub
add
cmpsb
inc
int
scas
fildll
jmp
lret
xchg
mov
arpl
loop
push
imul
cmp
popf
mov
es
jns
add
cs
push
dec
xchg
lods
cmp
dec
data16
cld
lods
jnp
out
mov
les
mov
stc
push
xchg
mov
lret
movsb
push
xchg
movb
jl
sbb
icebp
adc
xchg
les
outsb
fldenv
icebp
push
fadds
jp
mov
mov
out
cmp
aam
sub
mov
stc
cmp
lcall
jle
outsb
xchg
jle
adc
scas
dec
mov
sub
cwtl
pop
xchg
inc
ret
mov
gs
out
icebp
add
addr16
or
xchg
inc
nop
xchg
pop
sbb
stos
lcall
cmp
mov
mov
push
jbe
call
pushl
dec
inc
sbbb
mov
xor
sub
sub
test
adc
adc
in
ret
psubb
xor
xchg
or
push
xor
adc
sti
jge
out
testb
xchg
arpl
lret
mov
loop
adc
sub
ret
cwtl
pusha
push
pop
dec
into
pop
movsl
nop
test
loope
test
mov
dec
sub
pop
loope
push
jnp
test
mov
and
cwtl
pop
ja
cmp
pop
fnstsw
std
mov
mov
cmp
sub
cld
jnp
push
scas
jns
cmp
mov
pop
pop
or
mov
shll
inc
in
repnz
addr16
movsl
push
adc
aam
lret
push
js
adc
xchg
sub
jle
in
sbb
or
jmp
ret
mov
sti
insl
xchg
add
push
fildll
ss
mov
mov
test
inc
sbb
in
lds
in
mov
add
dec
jno
fstpl
cmp
mov
stos
jl
jno
pop
pop
or
pop
xchg
dec
sbb
jecxz
notl
enter
add
or
jae
xor
rol
jae
or
jg
push
fxtract
xchg
enter
xchg
mov
stos
sbb
add
pop
filds
ss
xlat
aad
repz
ret
xor
js
dec
xchg
lea
popa
dec
pusha
aam
in
addb
out
jae
insl
dec
shll
add
fadds
pop
mov
fwait
lcall
xor
push
add
test
lret
add
sbb
repnz
cwtl
inc
sahf
mov
js
fnstenv
or
push
push
orl
fpatan
mov
push
add
inc
ljmp
outsl
dec
mov
jo
popf
cli
test
push
mov
mov
xchg
imul
mov
int
out
mov
cmp
jge
rolb
sbb
scas
and
lret
cwtl
loop
aas
xor
loopne
int3
int
fldl
imul
mov
mov
dec
jb
push
mov
and
or
xchg
andb
fwait
outsb
cmp
dec
movsb
push
xchg
movb
inc
sbb
push
jno
or
pusha
xchg
cs
popa
arpl
orl
jg
sbb
dec
shl
repnz
out
xor
repz
bnd
xor
lock
pop
push
test
int3
and
xor
sbb
mov
std
imul
and
fidivrs
inc
add
mov
adc
jp
xchg
jbe,pn
inc
out
mov
mov
movsb
jge
mov
lock
xor
pop
sbb
ds
adc
xor
inc
out
jo
hlt
xchg
sbb
xchg
add
aas
mov
add
push
bound
lods
mov
fisttpll
nop
out
fwait
pop
andl
pop
nop
jne
inc
xor
shlb
mov
testl
insl
xchg
aaa
or
and
jl
imul
sbb
lahf
adc
push
cmp
jno
cmp
fistpll
xchg
cmc
inc
fistpl
sub
mov
cs
sbbb
cmc
pop
or
inc
inc
dec
in
ret
dec
mov
mov
test
cmpsb
jg
push
mov
and
add
lods
push
pusha
scas
mov
faddp
mov
inc
mov
in
push
loope
in
jmp
gs
scas
xor
lea
cld
mov
movsl
add
jne
xor
xor
jne
jmp
cld
cs
scas
iret
xchg
lods
test
push
jle
out
mov
imul
push
cmp
jb
es
and
mov
repz
mov
insb
pop
dec
faddl
mov
scas
in
jns
shr
add
add
pop
imul
push
pop
pusha
sbb
mov
push
lods
push
pop
add
or
xchg
dec
test
imul
or
test
out
cmp
popa
pushf
pop
pushf
push
sub
cmp
cmp
xor
mov
test
shll
out
xor
adc
mov
inc
jl
cmovle
or
sbb
loopne
repz
movsb
mov
cld
jg
stc
call
stos
jo,pn
ljmp
or
gs
repz
or
movd
arpl
scas
xor
jnp
sahf
popa
mov
ljmp
clc
lret
es
mov
sbb
cld
mov
xor
adc
push
cmc
cmpb
dec
mov
les
int
aad
push
xchg
lcall
xchg
cmpsl
into
xor
pushf
in
lds
xor
sbb
push
mov
mov
adc
mov
ret
sbb
inc
xchg
movsl
jmp
pop
mov
daa
idivb
and
dec
push
mov
mov
inc
push
test
cmp
push
int3
add
jb
and
ret
jb
mov
jo
movsl
fnsave
mov
add
fstps
pop
popa
sub
pop
cmp
pop
sahf
outsb
dec
cmc
push
or
icebp
scas
push
ja
or
pmuludq
inc
xchg
pop
xchg
sbb
jnp
movsl
pop
repz
and
or
clc
pop
adc
int
fisttpl
mov
out
out
mov
ja
add
push
push
cmpsb
mov
xchg
fs
push
adc
jle
gs
bnd
mov
add
pop
jmp
pop
insl
repz
push
cmp
fwait
and
scas
lock
xor
inc
stos
popa
cmc
test
dec
add
bound
mov
cld
scas
cmp
arpl
test
jp
pop
xchg
cmp
dec
lret
jle
and
pop
je
mov
ss
ror
call
popa
ret
pcmpeqw
dec
sub
movsl
jge
test
push
cmp
pop
sbb
xchg
add
sti
pop
cmpsl
fwait
jb
or
fcompl
mov
stos
xchg
iret
orl
sarl
mov
out
dec
push
mov
or
jo
mov
push
mov
shll
cmp
out
shll
push
icebp
mov
add
adc
pop
iret
jns
lret
outsb
mov
push
push
sub
pop
sti
inc
mov
roll
push
pop
mov
jle
popf
les
sub
insl
mov
leave
push
dec
in
push
push
pop
adc
cmpsb
xor
add
mov
bnd
or
mov
or
fucom
inc
sti
fs
jns
je
pusha
mov
jl
jb
xchg
mov
jmp
cmp
aad
dec
push
fisubrl
inc
mov
cmpsl
mov
pushf
add
lahf
push
xor
xchg
mov
aaa
nop
pop
es
ds
stos
mov
xchg
jge
pop
cld
test
je
mov
mov
mov
and
push
outsb
jl
rorl
xchg
and
push
fwait
sub
mov
rcrb
fcmovb
fsubrl
cs
sahf
mov
ss
jl
inc
jle
sub
cld
jmp
outsb
sub
xchg
hlt
cltd
js
iret
fldl
or
imul
mov
or
dec
aam
aad
inc
js
push
push
pop
push
std
cmp
push
mov
fsubrs
addr16
in
jmp
push
xor
decl
loopne
sbb
lock
mov
xchg
pop
gs
scas
cmc
daa
or
lock
xchg
jle
push
mov
fiaddl
sub
popf
push
insb
add
stos
sub
jo
sahf
arpl
dec
mov
cld
mov
xor
sti
cmp
xorl
xor
repz
and
jno
push
pop
lods
lods
pop
dec
ljmp
aam
inc
insl
jle
cmp
iret
in
mov
push
xlat
and
int3
mov
repnz
mov
std
je
mov
int
mov
sbb
dec
jmp
test
mov
std
popf
adc
out
test
push
repnz
cmp
cli
dec
out
mov
dec
cmp
jno
loope
and
lea
jno
sbb
xor
mov
mov
cmpsl
es
jbe
push
cmp
pop
xchg
or
movsb
mov
outsb
mov
pop
int
sub
xorl
sbb
sti
sub
cld
sbbb
pop
lds
outsl
shl
dec
push
jb
sbb
push
add
fildll
inc
push
fwait
test
xchg
mov
add
out
mov
stc
sbb
mov
xor
or
inc
cs
cltd
pusha
jne
test
jno
incb
dec
xor
jne
js
adc
hlt
fisubs
mov
lcall
and
icebp
pusha
in
xor
cmpsb
mov
test
dec
add
fnsave
add
sub
in
stc
js
pop
shlb
out
inc
cli
int
repnz
lret
jl
hlt
adc
add
mov
xchg
scas
inc
jno
lea
mov
push
nop
jg
jbe
sub
aaa
cs
jmp
mov
push
mov
out
fwait
mov
fbld
or
scas
sar
stc
add
cmpsl
xor
push
mov
jae
lss
lret
mov
pusha
mov
and
pop
add
scas
sti
fwait
das
and
jmp
pop
pop
add
fwait
cmp
loope
dec
out
jl
shlb
dec
pop
sub
fprem
sbb
dec
pop
jns
rcrl
jle
pop
ds
add
andl
insb
mov
jecxz
jo
or
cmp
lds
mov
out
fsubrs
pop
fs
adc
push
jle
push
sub
stos
inc
mov
leave
and
jo
ja
scas
cmp
cmp
in
pop
jo
lock
adc
aaa
cs
mov
xchg
sbb
fldl
dec
jg
and
push
cmp
cld
xor
lock
clc
cmp
cs
les
in
sahf
loope
jp
stos
push
stos
fstps
and
add
cmp
insl
ja
lcall
dec
loopne
shl
outsl
cli
cmpl
rcrl
add
loopne
fsub
dec
gs
push
adc
mov
or
dec
std
addr16
or
jge
lds
cwtl
in
in
es
push
push
xchg
imull
lock
jbe
mov
or
fcomp
or
inc
nop
lret
addl
into
out
scas
dec
pop
push
andb
movsl
jmpw
popf
imul
inc
out
lcall
xor
cmp
mov
loop
xor
int3
shll
adcb
shll
clc
idiv
sti
add
jp
sbb
loop
sub
hlt
xor
data16
addr16
and
sbb
repz
ja
push
into
pop
jae
sahf
adc
sbb
cmp
cmc
xor
mov
lock
daa
ret
xlat
mov
sbb
mov
nop
xchg
filds
xchg
lcall
popa
outsb
outsl
inc
fsub
out
jo
pop
xor
jns
mov
sti
xchg
repnz
sub
jl
push
mov
fdivs
dec
hlt
jnp
sub
hlt
jmp
insb
insl
mov
fnsave
jmp
fwait
push
mov
mov
fdivr
jne
cld
inc
dec
jle
cmp
mov
or
cmp
and
push
es
jo
int
fldt
cmpsb
je
dec
lds
sbb
imul
add
movsb
es
push
decb
cli
xchg
jl
filds
ret
mov
jns
and
stos
inc
fldenv
outsb
push
movsl
stc
and
cwtl
into
std
popa
adc
inc
nop
sub
lods
push
cmc
mov
daa
xchg
dec
scas
pushf
and
ret
adc
inc
dec
sti
mov
dec
and
mov
dec
fst
jns
sti
mov
pop
pop
or
fidivs
mov
xor
xchg
sbbb
ss
cmc
iret
aaa
dec
mov
push
rorl
rolb
mov
sbbb
and
jecxz
out
xor
cmp
xor
addr16
push
xor
push
pop
adc
mov
and
xor
lea
gs
cmp
push
jae
das
mov
cwtl
mov
ja
rorb
fstl
out
dec
xchg
push
lea
xor
lds
std
jns
mov
dec
loope
xor
mov
pushw
jbe
jp
loop
pushf
popa
mov
jl
sub
dec
add
iret
xor
push
fstps
add
cmc
into
rcrl
test
test
dec
mov
ds
rcrl
or
pop
mov
sbb
xchg
loop
out
cmp
push
sub
aam
xchg
je
cmp
pop
cmp
ja
jae
dec
mov
adc
and
out
dec
inc
enter
or
or
int3
inc
js
jne
fimull
and
jnp
iret
mov
out
xchg
sbb
pop
cwtl
jle
ret
or
lcall
addr16
jg
lods
sbb
jge
ret
mov
push
jns
or
xchg
mov
mov
and
jl
les
enter
xchg
and
xor
fwait
or
cltd
loopne
cmp
xor
aad
fsubrp
push
jmp
sahf
mov
int
inc
mov
les
add
push
dec
enter
aad
mov
loope
lahf
shl
dec
inc
adc
int3
sti
test
incl
and
imul
xor
or
push
sub
inc
push
mov
loope
inc
mov
outsb
call
repz
mov
jmp
inc
adc
jg
imul
aaa
sub
pop
jnp
pop
ljmp
sub
imul
push
cmpsl
repnz
sub
es
repnz
mov
lcall
in
dec
add
jae
xor
aam
inc
cmp
pop
mov
push
pushf
popa
ljmp
daa
cmc
cmp
xor
roll
es
sbb
inc
jl
aam
fwait
mov
mov
pushf
addr16
arpl
in
lods
jge
or
stos
out
ficoms
jecxz
scas
insb
mov
sbb
push
roll
movsl
adc
dec
mov
sbb
mov
lcall
pop
test
aam
xlat
or
pop
lret
inc
imul
and
scas
mov
insb
jb
movsl
popa
pop
sbb
and
enter
mov
fadd
adc
aad
inc
rcrl
push
outsl
out
shll
or
mov
into
cmp
mov
adc
pusha
push
and
fstl
mov
sbb
xchg
dec
jg
push
repnz
pushf
mov
mov
enter
daa
and
pop
pop
lods
sbb
xor
mov
repnz
pop
bound
fs
loope
sbb
pop
popf
test
push
cltd
movsb
xor
lret
and
fmull
add
xchg
je
dec
or
pop
movb
jecxz
loopne
aam
push
push
xchg
packssdw
sub
sbb
es
lods
out
mov
lahf
inc
xor
scas
xor
or
cmp
fidivrs
aad
test
je
mov
sub
je
into
les
mov
or
cld
cmc
repnz
repnz
dec
je
enter
jne
frstor
mov
add
xor
mov
mov
dec
ret
or
jb
push
ret
sti
cwtl
or
loopne
ret
int3
mov
mov
xchg
popf
outsb
lods
test
sarl
inc
sbb
fiadds
mov
cs
rcr
shlb
push
add
lods
stc
iret
sbb
pushf
lret
outsb
cmp
mov
dec
jae
and
inc
scas
sahf
aas
jmp
mov
fsubl
jno
sbb
mov
sbb
out
pop
les
fadds
jbe
cli
hlt
adc
std
push
loope
mov
jl
or
jmp
and
je
fiaddl
push
mov
sbb
les
sub
dec
and
push
jbe
xor
dec
bound
sub
rcrb
into
mov
out
mov
ds
fistl
enter
mov
in
xchg
jb
aaa
jb
dec
sbb
or
mov
fdivrs
fwait
dec
data16
push
decb
mov
movsb
stc
mov
jg
adc
bndldx
or
add
sbb
aas
lret
outsl
fiaddl
bound
and
shr
mov
cli
push
icebp
xchg
shrl
idivl
jns
inc
pushf
lock
mov
movl
mov
mov
jmp
jmp
add
repz
ja
xor
out
mov
imul
xchg
push
popf
mov
insb
ret
jb
pop
pop
push
sub
scas
insb
xchg
stc
jg
nop
test
inc
add
add
mov
mov
fisubl
stc
xor
xchg
in
jno
pop
pushf
mov
lds
ror
shlb
cli
jo
pushw
inc
loope
xchg
fldenv
inc
movsl
loopne
mov
js
shrl
ret
enter
adc
adc
hlt
push
push
adc
cmp
imul
sbb
xor
xchg
nop
push
jmp
and
push
push
lods
jle
fsubl
xlat
out
and
adc
into
inc
push
bound
push
cmc
xchg
cmp
fsubp
mov
ds
fdivr
pop
pop
cld
fistpl
push
add
rolb
push
movb
sahf
lods
movl
pushf
pop
and
sbb
aas
push
ljmp
mov
cmp
pop
inc
push
xchg
or
xchg
xor
cld
and
xor
gs
xor
ljmp
arpl
mov
cltd
lahf
movsl
fstpt
jno
jnp
pop
cwtl
dec
test
xor
push
adc
pop
fstps
bnd
pusha
cli
sar
fdivrl
and
and
repz
and
bound
insb
pop
loopne
shll
push
jbe
add
sbb
mov
shrb
adc
ret
scas
pop
mov
mov
in
inc
int3
jmp
fbstp
pop
or
jmp
add
sbb
mov
in
test
mov
lods
int3
mov
sbb
and
ds
and
daa
add
dec
dec
xchg
je
pusha
lea
mov
aam
out
pushf
add
outsb
jle
xchg
inc
xchg
push
add
xor
adc
cmp
jl
cmp
movsl
mov
fisttps
out
stos
mov
xchg
mov
and
add
mov
gs
adc
lock
fld
xchg
push
or
xchg
dec
rcll
fcmovb
mov
add
inc
mov
adc
je
movsb
enter
loopne
cli
push
imul
inc
hlt
add
xchg
fwait
inc
push
roll
pop
push
pop
lods
lock
sub
adc
stos
movsb
jne
addb
test
xchg
xlat
add
or
push
fcompl
pushl
mov
jmp
sbb
or
mov
pop
mov
pop
sbb
xor
pop
jb
inc
pop
in
rclb
dec
mov
add
jmp
out
lods
mov
popf
pop
and
xor
inc
sub
in
xchg
ss
test
rcrb
fsubrl
or
std
add
push
int
pusha
pop
cmp
jg
push
mov
jle
scas
daa
cmp
jae
cwtl
adc
sbb
xchg
xchg
inc
aaa
mov
cltd
and
add
in
out
mov
ret
xlat
pushf
and
cmpsl
imul
popa
shlb
adc
and
shrb
inc
jmp
lea
mov
push
cltd
ljmp
int
push
inc
ja
nop
sub
leave
adc
es
out
sub
mov
push
pop
popf
out
push
sub
sub
sub
cmpsb
int
pop
mov
push
or
lock
fwait
dec
xor
les
loop
cli
outsb
adc
xor
push
rcll
sbb
pop
cltd
cld
jmp
stos
push
mov
mov
fwait
popa
adc
mov
in
push
or
inc
movsb
pop
add
dec
hlt
jno
loop
ror
mov
cmp
imul
pop
mov
pop
aas
repz
loope
mov
ret
dec
jnp
and
dec
dec
shlb
cmpsl
xor
jbe
inc
test
insl
aas
leave
ret
cmc
popf
test
jo
ret
std
mov
jmp
mov
orb
adc
daa
mov
nop
adc
jae
push
into
mov
pusha
xorps
movsl
dec
ret
xor
leave
out
testl
add
and
inc
dec
popf
addr16
in
cmpsl
dec
dec
sar
lret
pop
or
lret
sbb
dec
aad
leave
pop
rol
mov
pop
iret
into
cli
add
and
scas
das
es
jbe
inc
mov
adc
cmp
xchg
inc
dec
dec
cli
add
jmp
sub
mov
push
dec
xor
xchg
push
pop
lea
gs
jge
das
loop
arpl
sbb
leave
cmp
add
push
andb
mov
cltd
jo
and
les
notb
inc
or
and
lock
jno
test
pop
not
fucom
in
mov
push
jp
cmp
mov
test
lahf
cwtl
push
inc
jmp
nop
sbb
mov
jnp
dec
sub
mov
lods
stos
xchg
mov
into
cmp
rcl
mov
sbb
dec
lret
mov
xor
cmc
xor
sti
fucomi
mov
jge
push
adc
jnp
in
iret
mov
pop
and
pop
jnp
out
aam
and
xchg
cmp
rcr
xor
push
orb
mov
adc
in
ja
iret
push
inc
xchg
adc
popf
idivl
jp
push
push
je
stos
cltd
ror
and
dec
jne
fadd
mov
test
cs
push
pcmpeqb
outsl
push
ficoms
je
or
sub
dec
in
mov
inc
mov
out
xchg
clc
mov
jo
and
xchg
push
test
ss
punpckldq
sahf
scas
ja
sub
push
out
roll
enter
pop
xor
leave
jne
pop
insl
bnd
add
ljmp
leave
test
adc
popf
jae
fcmovnu
out
xchg
mov
sub
inc
pop
sahf
ret
pop
leave
mov
push
push
mov
push
sub
add
aad
cmp
aaa
or
shrb
sbb
xor
xchg
mov
movsl
bound
daa
addr16
and
xchg
out
orb
xor
hlt
das
xor
rcr
jle
cmc
sti
xchg
xor
ret
stos
xor
jecxz
loop
jg
mov
shl
xchg
stos
dec
xor
inc
subb
jmp
lds
xor
cmc
dec
jnp
pusha
repz
fisubl
mov
jge
jg
loope
or
mov
or
lret
scas
push
or
jns
ret
cld
xor
iret
jae
xor
in
imul
aam
push
mov
int3
pop
mov
jmp
das
popw
adc
stos
cli
dec
out
mov
push
cmp
xor
icebp
int
mov
popf
int3
jg
push
insl
xchg
sbb
mov
js
ret
outsl
rcrb
stos
cmp
pop
mov
in
mov
xchg
outsl
popl
movsb
push
fidivs
lahf
mov
jl
pop
cli
mov
cmp
fsubrs
xchg
mov
in
andl
dec
rolb
push
idiv
xchg
mov
sbb
addr16
fwait
outsl
push
addb
sub
jo
xor
adc
mov
aas
movsl
ja
sbb
ret
les
pushf
std
outsl
cmpsl
and
js
outsb
lods
outsb
pop
lds
xor
mov
aaa
jg
and
in
xor
arpl
insb
pusha
pop
call
push
ficompl
jg
or
push
andl
test
hlt
stc
and
icebp
and
xchg
mov
xor
lcall
js
sub
push
cmp
push
jl
mov
mov
xlat
push
or
xchg
nop
xor
inc
or
pop
xchg
mov
and
push
jo
fmuls
cmp
mov
iret
scas
push
and
push
lds
xchg
pop
jge
pop
ficompl
xchg
es
lcall
cmc
lods
out
mov
add
lea
sbb
push
mov
rcrb
xchg
jo
jns
pop
scas
and
das
xor
and
test
pop
rclb
mov
cmpsl
push
xor
xor
add
sti
mov
icebp
lcall
cmpsb
lret
jmp
std
sbb
sbb
sbb
mov
cmp
hlt
cmpsl
mov
repz
mov
popf
and
and
je
xchg
in
sub
cmp
jmp
iret
aaa
ja
sbb
pushf
insb
mov
sub
dec
cmpl
jbe
sub
adc
decb
inc
mov
mov
out
push
test
and
out
mov
dec
jmp
adcl
inc
add
dec
roll
xchg
push
lea
test
lds
lea
cs
sub
or
outsl
and
and
test
testl
mov
sahf
or
mov
mov
mov
std
stos
lods
mov
out
cli
ljmp
sbb
fisubl
cmc
adc
inc
mulb
jp
ja
imul
mov
jo
push
das
pop
mov
jns
push
xor
dec
mov
ljmp
mov
adc
loope
jle
pop
shl
cmp
psllw
sub
cmp
mov
cmp
in
lea
cmp
outsl
fildll
jg
dec
scas
ds
pushf
mov
jae
jp
dec
jb
outsl
add
push
pop
repz
mov
push
mov
mov
imul
adc
fwait
hlt
repnz
ja
js
and
xchg
mov
in
cmp
jno
push
lds
clc
popf
rcr
ret
sub
dec
lea
xchg
nop
ljmp
cmp
xor
xor
ret
mov
decl
movsb
pop
and
cmp
in
call
mov
lret
test
addr16
loope
jmp
shr
aad
and
hlt
imul
push
mov
fdivrl
mov
mov
and
fmulp
int3
mov
jne
mov
mov
insl
jae
stos
adc
add
pop
jmp
sub
sbb
outsl
mov
mov
jns
shll
rcl
and
and
or
jmp
stos
or
mov
aam
mov
xchg
dec
sub
int
mov
popa
test
inc
icebp
mov
add
mov
and
test
lcall
pmaxub
or
iret
lret
pop
and
cs
jnp
sub
mov
mov
in
das
aas
mov
pop
rolb
dec
sub
cmpl
add
lahf
xchg
pop
adc
xor
inc
cmpsl
lahf
adc
orb
aas
stos
mov
xchg
dec
pop
dec
loop
mov
pop
insb
testb
mov
mov
dec
fucomi
ret
std
add
jns
and
sbb
mov
flds
jp
loop
dec
push
arpl
jns
imul
xchg
inc
lock
popa
jmp
test
dec
and
add
jae
cmp
add
mov
dec
loope
mov
jl
iret
out
adc
aas
cmpsl
mov
mov
xchg
mov
push
aas
push
sbb
and
fcoms
pushf
sbb
xor
scas
cmp
out
inc
adc
add
out
dec
cmpsb
push
outsl
push
add
push
pop
mov
adc
nop
jle
pop
roll
adc
mov
mov
movsl
mov
or
fdivl
fmul
call
repz
sti
aaa
pop
cwtl
loopne
int
xor
and
and
xchg
pop
dec
in
push
movsl
aad
xor
mov
popl
decb
nop
sub
inc
inc
mov
fcompl
push
sub
std
insb
testl
mov
xchg
jns
mov
int3
xchg
popf
rcrb
test
xor
sub
inc
les
negl
add
jmp
ds
xor
lahf
inc
arpl
andl
inc
push
cwtl
in
jne
stc
xchg
push
xchg
loopne
xor
int3
mov
jecxz
mov
insb
inc
mov
fucomp
or
xchg
cmp
or
mov
mov
aas
dec
push
cltd
mov
jmp
pop
insb
lret
xchg
js
sahf
adc
incb
stc
sub
mov
sar
inc
ljmp
or
mov
ss
test
sub
aaa
push
js
fdivrl
dec
pminub
sub
lock
cmp
mov
std
sub
aaa
mov
imul
insl
aam
in
cmp
cwtl
and
js
jns
mov
sbb
lahf
jmp
cmp
and
adc
in
je
fs
dec
filds
insl
leave
lods
xor
shl
aas
dec
and
repz
xor
test
cmp
sahf
fs
ljmp
and
or
push
sbb
xadd
insb
mov
les
xchg
or
adc
jne
sbb
outsb
xchg
mov
and
dec
mov
int
fisttpl
cmpb
jae
loope
mov
xchg
shl
cmp
js
outsb
ja
iret
push
repnz
cmpsl
fs
pop
outsb
mov
jns
cmpl
fildl
movsbl
out
jnp
mov
dec
jns
fdivs
ret
sbb
sbbb
jge
xchg
jg
lahf
out
mov
push
or
inc
jnp
pop
clc
movsl
jl
cld
pop
lods
push
jno
lcall
xchg
dec
jl
popf
sti
out
fcoml
iret
fs
daa
xchg
iret
psubq
mov
repz
icebp
sub
sbb
lods
xchg
hlt
cmc
or
add
ja
add
shrl
ss
push
add
push
das
jo
loopne
xchg
mov
jle
les
nop
jmp
mov
popa
andl
cwtl
adc
add
shlb
xchg
xchg
imul
rcrl
cltd
or
push
or
sub
in
sbb
dec
pop
out
dec
xchg
sbb
loopne
jmp
jnp
out
sub
cmp
mov
divb
add
fcomip
sbbl
push
sub
lahf
jbe
and
mov
fcompl
daa
ss
adc
aaa
repnz
fldl
sarb
dec
iret
daa
push
pop
sbb
sub
jl
outsl
xchg
dec
dec
mov
lods
pop
out
pop
cli
jo
pushl
xlat
add
out
or
loope
movsb
lods
inc
into
inc
dec
outsl
lods
gs
insl
jns
insl
and
rolb
nop
inc
mov
add
adc
dec
add
mov
dec
fistl
cs
add
adcb
cmp
adc
daa
or
sarb
xchg
test
sbb
sub
iret
cli
sbb
jmp
or
add
xor
dec
xor
pop
fmul
int
mov
dec
sub
cmp
push
in
lea
xchg
and
or
push
pop
and
and
call
loop
xchg
add
ret
not
addr16
pop
dec
push
je
mov
sub
mov
inc
add
mov
mov
cmp
push
out
aaa
lods
dec
add
jecxz
or
vpcmpeqb
loope
fists
lcall
sbb
dec
pop
pop
std
stos
shl
mov
push
or
mov
mov
push
subl
clc
dec
pop
inc
cmp
int
ds
stos
dec
mov
pop
sahf
fcompl
adc
ret
loope
and
pop
das
pop
cmp
pusha
jg
dec
mov
in
jmp
adc
sub
inc
in
popa
dec
cmp
mov
inc
aas
pop
test
adc
cmp
fidivrl
cltd
test
mov
xchg
mov
icebp
or
xor
mov
and
repz
das
hlt
mov
mov
mov
xchg
sahf
fnstcw
xor
jnp
sub
xchg
call
test
ss
and
imull
inc
mov
aas
iret
jae
rolb
or
add
xor
sarl
subb
mov
or
call
js
aam
pushf
inc
scas
cmp
mov
sub
push
stos
mov
mov
xor
jo
sahf
cmp
cld
sbb
int3
mov
mov
mov
push
inc
mov
aad
jae
pusha
sbb
shl
mov
sub
insl
fstps
xchg
xchg
mov
out
ljmp
jbe
push
inc
jecxz
fcoms
movsl
ljmp
in
fnsave
pop
mov
pusha
mov
xor
mov
sub
xor
and
stos
cmp
mov
test
mov
jle
adc
int3
outsl
nop
cmp
pop
shll
and
sbb
adc
pop
jbe
inc
inc
add
outsl
cmp
push
push
iret
xor
out
fdivr
mov
in
dec
mov
push
data16
sarl
jae
jle
scas
mov
mov
je
add
mov
iret
cmp
and
mov
add
hlt
pusha
iret
xor
pop
jge
cltd
push
out
sbb
dec
outsl
mov
aaa
adc
cmp
fwait
enter
xor
xor
or
les
mov
scas
jmpw
ss
dec
xor
sub
sub
xchg
pminub
push
push
xor
jmp
mov
xchg
jp
out
loop
lret
or
aaa
dec
repnz
and
or
cli
xor
je
rol
icebp
aam
repz
lahf
test
cwtl
add
mov
arpl
jle
fwait
xchg
inc
xchg
lret
dec
add
pop
xor
andl
sbbb
mov
out
icebp
scas
test
inc
nop
xchg
lock
stos
sahf
mov
dec
lret
xlat
xor
mov
test
test
fiaddl
add
or
mov
lret
ja
mov
test
cltd
pop
lea
inc
cld
test
aad
into
push
adc
int
mov
ret
rorl
inc
mov
shll
or
cmp
shrl
loop
rcrb
adc
jnp
aad
lcall
mov
push
dec
cmp
or
mov
mov
pop
fiadds
dec
sub
pop
ret
out
add
not
sbb
xlat
mov
adc
pushf
inc
xor
sub
mov
jmp
mov
cli
xor
out
stos
push
jg
fwait
data16
xlat
add
inc
jne
mov
lock
fsubs
test
sbb
cmc
adc
mov
in
or
movsb
stos
push
push
enter
push
ficompl
loop
jge
push
clc
lds
dec
loope
xor
lret
sbb
out
ds
dec
pop
es
or
mov
xchg
sbb
js
mov
sub
push
dec
push
test
dec
sarb
nop
and
pop
push
mov
cmp
jecxz
mov
lods
inc
cs
sub
pop
add
push
sahf
mov
pop
mov
aas
cmp
cmp
dec
repnz
leave
xlat
jle
fldl
cmp
and
push
rcrb
add
cmp
lods
sbb
in
or
jecxz
rcrb
cmp
pop
sub
mov
imul
lret
mov
imul
mov
js
dec
repnz
out
inc
pushf
cmc
sub
imul
inc
add
add
adc
sbb
clc
mov
es
cmp
xchg
hlt
pop
cs
xor
push
add
and
es
icebp
adc
dec
sbb
dec
lods
sub
xor
rcrb
push
sub
push
pop
aaa
js
xchg
sub
xchg
or
or
sahf
xlat
lahf
xchg
fimull
xor
xor
cmp
clc
adc
rorl
shrl
ret
jg
repnz
mov
cmpl
lcall
scas
in
ljmp
or
or
xlat
hlt
cmp
adc
push
xchg
jge
addr16
imul
push
pop
cmp
xor
ss
mull
dec
das
lret
xchg
lea
arpl
xchg
inc
hlt
das
das
jae
int3
fsubrs
les
jmp
in
mov
mov
ljmp
sbb
aaa
js
mov
incl
sar
loopne
adc
fistpll
xor
ljmp
or
imul
and
push
inc
movsb
ret
subb
inc
mov
and
pop
and
mov
loopne
cmp
or
leave
add
pop
out
shlb
sub
movsl
sub
ret
aam
cmpsl
mov
mov
sti
mov
mov
les
add
sub
and
adc
pop
cmpl
out
mov
cmpsl
popf
out
mov
push
inc
andl
add
jb
sub
xchg
jbe
in
mov
data16
adc
movsl
xor
mov
xlat
mov
lods
dec
sub
pushf
dec
mov
popf
adc
sub
rcl
add
xor
xchg
or
lret
sbb
mov
scas
push
mov
aam
lahf
pop
ret
imulb
cwtl
call
lret
test
push
daa
dec
mov
jg
adc
cmp
aam
sbbl
test
mov
jecxz
fnstcw
mov
mov
sbb
dec
add
cmpsb
fnsave
imul
add
out
pop
sbb
mov
jnp
add
or
adc
inc
xchg
mov
add
sbb
xor
imul
and
test
sub
test
lds
push
and
jo
pop
pop
jo
add
test
or
mov
daa
sti
push
xchg
lret
jmp
cmc
xchg
dec
lahf
jae
jns
mov
aad
jg
push
and
outsb
ret
push
fwait
out
out
out
xrelease
or
hlt
mov
sub
adc
or
mov
lahf
jle
jl
cmp
cmc
sbb
imul
insl
pop
xor
push
jnp
push
xchg
decb
mov
lcall
inc
xchg
fcompl
addr16
test
aam
adc
je
push
mov
bound
sub
pop
hlt
in
add
into
mov
call
sbb
cmp
rclb
lret
loop
pop
cmpsl
xchg
adc
mov
jmp
int3
js
test
push
mov
mov
sbb
loop
push
dec
int3
mov
ljmp
cmp
sbb
adc
ljmp
push
jmp
mov
and
aad
sbb
stc
push
adc
pmulhw
loope
jmp
dec
movsb
cs
std
xchg
add
mov
inc
aad
js
cltd
pop
das
in
push
xorl
or
test
mull
pop
and
add
into
mov
ret
dec
adc
cwtl
xchg
dec
pop
lret
imul
ds
sub
movsb
repz
adc
jmp
jle
andl
and
popa
int3
data16
lock
iret
jb
jecxz
sub
std
add
dec
mov
popa
and
ja
cmpsl
push
jns
push
roll
mov
mov
call
outsb
xor
push
and
ret
jg
pop
stos
or
insb
movsl
xchg
add
pop
dec
cwtl
sub
xor
pop
in
dec
jmp
fmul
imul
jl
pop
cmp
add
jecxz
push
enter
mov
mov
jmp
inc
and
dec
in
sbbb
sbb
mov
pop
int
out
xchg
jns
iret
adc
shll
lret
jnp
jge
cmpb
xor
xchg
push
pop
in
mov
fs
jne
leave
dec
jecxz
aas
fwait
and
lahf
aam
ds
das
cli
hlt
or
mov
ret
push
cmp
rcr
cwtl
enter
sub
idivl
mov
test
test
push
out
in
inc
adcb
fcoml
inc
dec
jge
sbb
lahf
popf
jg
rolb
cmc
cmp
sbb
addl
hlt
mov
popl
cmp
call
sub
nop
jmp
sbb
mov
addr16
jne
sub
daa
lods
jmp
in
fsubrs
mov
xchg
mov
sbb
mov
ljmp
sub
lods
ficoms
pop
xor
xor
data16
cmpb
xchg
push
xchg
fsubs
in
repz
xor
and
out
mov
loop
pop
ss
arpl
rcrl
test
add
mov
ror
movsl
out
jns
shl
cmp
pusha
add
inc
rcrl
xlat
leave
or
pop
les
push
jmp
pop
adc
xchg
sub
push
sbb
outsl
dec
mov
ror
fldlg2
insl
pop
jno
or
stc
push
pop
cmp
mov
add
mov
xchg
add
jo
push
mov
andb
push
mov
pop
aas
movsb
add
add
push
mov
push
cs
mov
add
cmpb
pushl
xchg
cmp
xor
jo
movsb
xor
or
ljmp
push
repz
dec
lds
add
sbbb
lahf
jmp
stos
xchg
inc
jo
pop
jnp
or
into
xor
xor
adc
les
cmp
ljmp
xchg
mov
pop
push
out
aad
orl
cwtl
push
fwait
and
bound
mov
inc
call
stos
pop
xor
das
mov
jb
cmc
sbb
addr16
inc
icebp
das
clc
mov
sarl
sbb
pop
je
cmc
sbb
stc
out
das
jnp
adc
sbb
xchg
insb
les
jne
into
pushf
push
push
daa
sub
jno
insl
pop
mov
xor
xchg
jae
adc
sbb
in
lea
sbb
stos
movsl
aam
pop
sbb
lods
xor
test
lea
adc
lret
xchg
pop
adc
jl
cltd
or
fs
daa
jae
inc
jo
daa
das
sbb
test
in
sarl
sbb
adc
lret
add
jp
sub
mull
add
mov
iret
loope
sub
cld
adc
test
or
pop
in
sub
in
push
mov
sub
gs
idivl
dec
sub
jmp
push
scas
mov
nop
ja
and
rep
mov
andl
adc
mov
sub
jo
in
sbb
or
mov
xchg
sub
hlt
mov
mov
mov
sbb
ret
xlat
leave
jae
add
outsl
ficoml
nop
push
data16
in
fisubl
ja
mov
outsb
pushf
push
sub
inc
push
mov
mov
mov
cmpb
std
sub
sbb
call
jne
pop
hlt
loop
xlat
dec
jmp
mov
aam
push
nop
mov
mov
mov
or
lods
and
sbb
dec
sub
sbb
lret
xchg
das
repz
dec
pop
fnsave
inc
cmp
sub
xor
xor
addr16
push
movsl
jl
out
sarl
lods
loope
inc
scas
cmp
jnp
inc
iret
pop
test
cwtl
sub
aad
xor
and
lret
or
cmp
push
fs
mov
xchg
dec
xor
sub
sub
adc
or
sbb
push
dec
mov
mov
lock
mov
fmulp
adc
fidivrs
gs
pusha
or
popf
push
mov
sub
popf
into
xchg
lcall
popf
jle
movsbl
es
and
sub
inc
xchg
lcall
cmp
push
mov
adc
ds
test
mov
sti
aas
les
mov
or
push
in
sbb
cmpsb
pop
dec
in
adc
mov
push
xchg
sub
rcrb
fbld
xchg
push
dec
adcl
imul
inc
cmp
jae
cmp
ja
js
mov
sub
dec
mov
pop
out
scas
and
xchg
subb
jg
jne
dec
mov
mov
cmp
iret
imul
and
jg,pn
leave
dec
pusha
xor
bound
repnz
lods
jg
int
mov
pop
stos
test
fadds
adcb
pop
or
inc
push
mov
lock
xchg
std
ret
pop
mov
jnp
add
mov
inc
test
test
sahf
xchg
xbegin
pop
imul
inc
stc
pop
aaa
lock
repnz
in
mov
rcrl
fidivrs
cmp
jne
stos
sahf
xor
dec
test
add
cmpsb
push
cmp
inc
and
jecxz
pop
cltd
stos
dec
in
fwait
mov
sub
adc
lea
pop
mov
mov
bound
or
inc
roll
sbb
sub
in
fbstp
push
call
cmpsb
imul
sbb
mov
cmp
cmc
push
pop
push
xor
pop
pop
lahf
ret
aas
aas
xorb
rolb
cld
imul
jle
sbb
push
adc
xchg
imul
out
or
rolb
cmp
sbb
dec
mov
sbb
rcll
rcrl
scas
rorb
cmp
rol
orl
cmc
adc
and
out
and
lcall
jecxz
sbb
ja
and
movl
ret
xchg
jne
jl
lahf
test
inc
shr
divl
xchg
push
jae
mov
sub
xor
pop
mov
sub
nop
push
outsb
dec
fwait
inc
jl
pop
lcall
sub
pop
mov
out
push
mov
je
pop
adc
inc
test
add
adc
int3
jmp
jp
mov
sub
push
mov
sbb
pop
pop
lock
inc
jmp
add
in
mov
cmp
dec
dec
jecxz
inc
decb
test
repz
pop
mov
xchg
jge
mov
push
int3
stos
dec
add
xor
cmc
xor
rcr
xchg
jbe
cld
enter
mov
pop
jns
int3
jecxz
or
pop
jbe
cmp
insl
cld
inc
mulb
stos
int3
pusha
mov
in
nop
repz
fists
dec
dec
cs
pop
sahf
xchg
mov
cs
or
mov
out
adc
xor
xchg
outsb
mull
mov
xor
xchg
out
ret
test
int
stos
pop
dec
mov
sbb
addl
ret
cmpsl
xlat
andb
pop
adc
pop
loop
lds
add
pop
push
cli
loop
mov
std
lea
or
aaa
ret
popf
imul
aas
sub
push
add
test
push
addr16
movsl
mov
cmp
mov
or
insb
and
jmp
sub
out
inc
psubusw
or
adc
cmp
adc
addr16
push
sub
add
hlt
mov
test
xchg
push
dec
or
push
sub
mov
mov
dec
aad
sbb
outsl
sbb
sti
call
int
mov
iret
cmp
inc
inc
cmpsb
lcall
ficomps
pop
add
out
orl
jnp
sti
ret
cmpsb
adcb
lahf
push
xchg
sbb
mov
fldcw
pop
jmp
daa
and
rcr
jg
pop
outsl
jl
bound
stc
adc
push
mov
out
pop
nop
ds
test
jb
add
aaa
add
inc
adc
inc
dec
out
insl
lret
orb
adc
daa
imul
xor
jne
into
add
and
xor
mov
roll
push
ljmp
add
and
sub
add
push
fnstenv
mov
ljmp
mov
mov
push
icebp
sub
cli
pop
mov
iret
loopne
into
jg
nop
mov
cmp
mov
mov
mov
xchg
mov
jmp
cmp
sbb
inc
sub
mov
mov
mov
lea
pop
aam
arpl
ret
out
test
rcrl
jns
or
pushf
loopne
notl
test
pusha
in
pop
push
aad
cmp
stos
jno
jg
sub
and
jns
in
lahf
daa
xchg
fsubl
push
add
dec
fildll
sarl
imul
push
and
addr16
repz
pop
cmc
dec
fcmovu
into
push
outsl
pop
push
arpl
fimull
out
pushf
sbb
xor
inc
jecxz
and
xchg
pushf
jae
jbe
xchg
stc
out
sbb
dec
inc
std
add
lock
adc
add
jmp
sbb
push
scas
stos
and
pop
ret
push
in
dec
int
inc
fdivl
fdivl
xchg
jbe
sbb
mov
xor
shlb
lock
push
mov
xchg
shll
sub
sbb
pusha
xchg
scas
fwait
addb
int3
test
leave
stos
or
inc
xor
and
xchg
ss
sarl
daa
sub
push
outsb
xchg
out
aam
mov
cmp
xor
repnz
dec
dec
lret
cmp
jl
test
popf
int3
adc
in
repnz
add
cmp
ss
cmp
test
push
enter
or
adc
pop
adc
mull
or
and
xchg
leave
nop
add
testl
pusha
lods
add
bnd
js
cmpsb
pop
xor
dec
or
sar
dec
xchg
cmc
sahf
add
mov
sub
pop
mov
and
xor
jmp
mov
mov
scas
pop
les
push
mov
shll
pop
bound
int3
xor
xor
mov
pop
push
sub
xor
push
pop
ss
lock
inc
addr16
pop
xchg
pop
mov
jg
out
cmpl
out
mov
push
or
jge
jno
mov
inc
pop
out
sbb
out
mov
insl
lea
sti
jge
or
add
loop
ret
or
jb
xchg
jnp
icebp
xor
cwtl
clc
mov
lret
inc
in
or
testb
adc
adc
pop
fnstcw
mov
fnstcw
or
jns
pushf
xchg
in
push
xor
aas
pop
push
mov
hlt
sbb
scas
mov
call
adc
test
mov
mov
hlt
lods
repnz
mov
fdiv
or
or
xchg
dec
dec
inc
aas
mov
cmp
dec
repz
notb
call
inc
andb
adc
loopne
inc
nop
mov
pop
repz
pushf
stos
mov
mov
js
jno
push
bound
jne
jg
sbb
jno
and
mov
xor
push
cwtl
pop
je
pusha
rcrb
rorl
mov
pop
mov
xchg
pmaxub
stc
lds
sbb
mov
fisubs
test
adc
jmp
int3
or
inc
xor
mov
jl
gs
pop
into
pop
repz
and
pop
pop
pop
daa
cs
daa
test
and
inc
pop
iret
movsl
out
mov
repnz
sbb
bound
ja
insb
cmp
rolb
mov
push
loopne
imul
cmp
mov
xor
es
mov
dec
mov
adc
and
cmp
mov
cli
je
and
cmp
in
adc
and
xor
scas
mov
xchg
repnz
adc
or
jbe
cmp
sahf
xchg
outsl
cwtl
sub
scas
int
inc
outsl
and
sub
push
out
mov
mov
scas
mov
sub
dec
mov
test
scas
mov
mov
push
das
movsl
or
das
idivb
mov
test
push
sarb
add
pop
jno
dec
xchg
cld
push
popa
sbb
mov
jl
daa
cltd
push
add
out
xor
inc
xlat
push
ja
sub
out
add
sub
shrb
fisubs
aad
loopne
jne
outsb
outsb
cwtl
insb
and
fcompl
lret
out
lods
icebp
jecxz
mov
loope
pop
int
int3
fcoml
dec
cmp
and
dec
loope
jne
sbb
sahf
jge
fcoml
pop
sub
xchg
xor
sti
mov
cs
push
jg
adc
mov
push
inc
lods
mov
decl
sub
movsl
cwtl
mov
gs
repnz
adcb
jg
pop
sti
xchg
or
cld
inc
sbbb
push
insb
test
mov
xor
leave
mov
adc
subl
or
and
stos
aam
xchg
xchg
repz
adc
out
sbb
loopne
ret
push
cmpsb
push
mov
mov
sahf
sbbb
fwait
jae
push
jmp
fnstsw
int
sub
leave
fwait
ret
add
cmp
sub
dec
insl
in
inc
push
cltd
dec
fldt
adc
xor
pop
ds
lea
cmpsl
sub
cltd
jo
jae
mov
mov
or
dec
xchg
mov
test
sbb
sub
sti
mov
pop
dec
mov
lods
dec
sahf
pop
int3
mov
xchg
mov
call
cltd
xlat
cmp
mov
and
add
out
dec
jle
jo
dec
mov
pop
or
iret
xor
arpl
adc
push
push
inc
pslld
lock
adc
cld
xchg
insb
shll
inc
lret
and
jmp
dec
adc
pop
mov
add
sbbb
sbb
mov
lods
pop
sbbl
dec
mov
xorl
jp
call
sub
dec
xchg
fcompl
push
ss
push
push
in
xor
push
jbe
jmp
lods
mov
lods
call
sub
jo
ja
sarb
rclb
cmpsb
sti
jecxz
cmp
jmp
xor
sub
dec
mov
and
fmull
shll
cli
jbe
mul
jo
decl
nop
and
lret
adc
int
pop
add
jne
repz
divb
and
test
xor
insb
jge
fwait
inc
addb
ja
negb
mov
ret
sbb
mov
int3
or
mov
cmc
imul
mov
lods
dec
test
xchg
inc
adc
push
lahf
add
cmpsb
sub
mov
xchg
std
aaa
loope
adc
lret
inc
lahf
mov
mov
popf
gs
jbe
add
mov
pop
mov
adc
jle
les
js
outsb
out
inc
mov
pop
test
call
mov
jae
xorb
jno
lods
or
data16
rcr
mov
pop
jg
lahf
adc
setnp
sub
enter
cld
fdivr
pushf
daa
and
sub
into
orb
popa
gs
dec
out
repnz
adc
sbb
or
ret
cmpsb
ds
and
arpl
xchg
nop
xchg
mov
imulb
jbe
iret
cmc
dec
adc
and
adc
fldl
mov
jg
jno
add
xchg
jnp
adc
rorl
and
mov
xlat
cmp
pop
inc
xor
fidivs
fbld
cmp
sbb
jl
jns
or
in
lea
sub
fwait
mov
fisubs
cmc
out
sbb
jecxz
xor
inc
das
aad
sub
pop
xor
jb
lds
out
cmpl
out
mov
repnz
sub
in
mov
bound
mov
mov
arpl
mov
pusha
cmpb
cmp
dec
mov
cwtl
dec
or
shl
and
xchg
insb
fldt
cwtl
xchg
int
subb
inc
test
lods
jns
inc
scas
xchg
cmpsb
ljmp
xor
push
cltd
xchg
mov
sbb
jae
sub
lahf
mov
adc
sbb
lea
int3
mov
xor
cmp
dec
fisttps
pop
jle
cmpps
mov
shrl
stc
inc
sbb
mov
jg
adc
mov
sbb
cmc
sbb
xlat
mov
mov
add
shll
fs
test
sub
mov
lahf
inc
cmp
push
dec
gs
sbb
les
dec
pop
scas
test
adc
sbb
data16
jmp
fdivr
mov
xor
adc
xor
out
mov
cmp
mov
add
mov
sub
pop
and
aas
sub
addr16
hlt
mov
orb
mov
cwtl
mulb
rcll
cmp
movsb
and
mov
mov
xchg
std
loope
dec
scas
dec
jecxz
mov
lock
mov
out
in
aaa
or
sbb
imul
dec
push
jno
insb
int
daa
sbb
xchg
mov
push
inc
call
push
jle
jno
sub
push
in
xor
or
ror
cmc
mov
jbe
mov
push
shll
fists
push
iret
mov
and
add
inc
xor
sub
aam
push
sub
pop
into
shll
xchg
insl
mov
adc
sbb
push
lock
add
cmp
inc
inc
movsb
fincstp
lods
push
push
jno
push
js
icebp
mov
daa
fstps
xchg
cmpsl
icebp
sbb
aas
mov
sub
dec
mov
and
sarl
adc
arpl
xchg
nop
cmp
dec
aad
and
lds
lods
out
aaa
fcmovbe
push
outsl
dec
adc
pop
repnz
mov
stos
sbb
out
jp
mov
xchg
lahf
jecxz
sbb
mov
jne
xchg
loop
popa
lock
in
cmp
mov
insb
pop
xchg
pop
mov
popf
pop
das
mov
ljmp
add
sbb
addr16
cmp
daa
inc
nop
mov
xor
rol
and
adc
sub
or
mov
xchg
jne
fbstp
mov
scas
inc
leave
lock
or
sub
mov
clc
mov
mov
arpl
push
pop
je
lret
cs
shl
stos
mov
nop
xlat
gs
mov
push
aam
inc
sbb
fidivs
push
mov
sub
out
repnz
in
push
lahf
pop
shrb
fmuls
xchg
daa
dec
stos
fcoml
daa
in
pop
push
xor
add
jae
or
cmp
aad
subb
push
xchg
add
mov
cmp
push
fs
leave
ds
jb
sti
out
stos
cmpsl
into
pop
or
test
push
add
inc
fisttps
jno
movsb
adc
adc
push
pop
scas
imul
push
xlat
xor
push
pop
and
in
sbb
dec
subl
mov
mov
out
dec
push
insl
mov
sbb
sbb
fiaddl
loopne
fldenv
or
lods
fistpl
popa
jmp
sub
mov
outsl
sub
rorb
icebp
stos
jno
adc
movsl
rorl
fs
bound
mov
mov
fmul
mov
xchg
setp
mov
insb
mov
fldcw
dec
cmp
mov
test
dec
test
sahf
das
jnp
sbb
or
das
int3
cmp
push
in
mov
or
add
mov
xor
cmp
out
movsb
mov
roll
jne
dec
pushf
or
sub
pop
je
shlb
ljmp
out
sarb
mov
pop
or
cmp
push
das
movsl
pop
aaa
xchg
sahf
adc
jp
push
pop
cmp
xchg
mov
sbb
push
inc
jnp
sub
mov
cmpsb
ds
sub
mov
xor
adc
outsl
mov
scas
loope
in
pop
add
and
ss
mov
mov
shll
or
mov
mov
neg
jl
xchg
outsb
mov
push
pop
mov
xchg
and
dec
jbe
push
jl
xchg
inc
hlt
jns
loop
sbb
loope
sub
jne
sbb
sub
divl
jae
adc
cld
or
dec
adc
jnp
imul
sarb
in
sbbb
add
or
adc
xlat
pop
inc
stos
aaa
adc
add
jl
bsf
push
adc
xchg
adc
lret
stos
out
jg
adc
shl
push
jp
cmp
ljmp
lcall
cltd
negb
jbe
mov
adc
scas
or
sbb
cmpsl
js
sub
dec
out
sti
adc
fidivl
xor
jnp
sbb
mov
fcmovnb
aaa
mov
push
cmpb
sbbl
mov
cmp
xchg
mov
jecxz
xchg
jae
mov
cmpsb
es
popf
push
shrb
cmpsl
sub
xchg
fnstsw
pushf
xor
inc
push
sub
addr16
ret
repz
jecxz
mov
xor
movsb
mov
aaa
push
aas
pop
imul
out
jp
pusha
inc
dec
mov
mov
fisttpl
sub
mov
leave
mov
mov
jle
stos
xchg
xor
std
mov
lret
adc
push
adc
in
sbb
mov
outsb
in
xor
inc
out
in
push
hlt
out
les
inc
cmp
sbb
and
cmpsl
cmp
or
mov
mov
pop
into
push
test
loope
shll
push
adc
std
cmp
xor
cmp
or
ret
lods
and
and
push
imul
jno
mov
xchg
mov
lret
shrl
xor
dec
sarl
jge
in
inc
test
ds
pusha
aas
lahf
lahf
adc
inc
adc
notb
xchg
pop
dec
outsb
dec
inc
cmc
popf
stos
adc
insl
in
adc
shr
sub
xor
cmc
outsb
push
loope
in
call
pushf
mov
out
ljmp
stos
in
mov
sti
xchg
fs
pop
or
movsb
jno
scas
adc
shrl
and
fstpl
imul
leave
ret
and
add
mov
mov
push
pop
adc
rorl
inc
int3
ret
jmp
inc
rcrb
in
xorb
dec
sbb
data16
fistl
int3
fstl
sub
imul
xor
fmul
inc
fwait
or
push
pop
mov
popl
inc
scas
xchg
repnz
in
pop
gs
sub
aaa
mov
sbb
mov
pop
add
aaa
and
stos
lods
stc
daa
aaa
or
fbld
cmc
mov
dec
ja
scas
test
add
popf
call
push
ljmp
jg
mov
cwtl
hlt
cmc
mov
sbb
iret
pop
inc
scas
jl
out
das
lock
sub
cmpsl
lret
xorb
jecxz
cmp
decl
cld
pushl
rcrb
adc
dec
sbb
enter
mov
cmp
lcall
mov
je
cltd
push
out
mov
pop
stc
wbinvd
lcall
into
adc
and
inc
repnz
imull
roll
xchg
xchg
mov
mov
imul
jbe
and
daa
jae
jnp
xchg
int3
push
ret
mov
call
jecxz
dec
push
popf
notl
repnz
pop
xchg
ds
lods
nop
in
xlat
adc
in
pop
insl
push
xchg
divl
addr16
and
mov
test
pop
xchg
sub
mov
jg
cltd
xchg
adc
loope
test
xchg
fdivrp
adc
int
ljmp
pop
rorl
scas
cltd
pop
shll
lods
adc
mov
dec
int3
nop
mov
popa
adc
inc
pop
mov
dec
fs
stos
mov
in
fcoml
pop
rcrl
pop
adc
xchg
push
test
mov
addl
push
and
cli
loope
xlat
test
out
or
popa
cwtl
inc
shrb
cmc
add
xor
outsb
ret
mov
sarl
stc
shrl
mov
cmp
jp
push
shr
rcll
jecxz
xor
mov
loop
mov
sbb
jge
xlat
mov
sub
je
jno
cmpsl
xchg
sbb
cmp
xchg
popa
jle
shl
push
xchg
call
adc
sbb
cmp
loope
int
adc
push
imul
lahf
cmp
cwtl
int3
push
lret
int3
mov
mov
cmpsl
push
jno
lret
div
xchg
rolb
test
pop
dec
mov
ljmp
fucomp
push
lahf
movsb
add
sbb
cs
adc
and
inc
sbb
jl
add
xor
test
cwtl
shl
repnz
lahf
inc
and
jmp
fildll
mov
lahf
push
dec
and
rcrb
xor
jno
sub
aam
pusha
xor
fnsave
sub
fisubl
in
decb
cmp
test
inc
add
pop
rcll
dec
rcrb
sub
mov
insb
addr16
dec
adc
xchg
jg
mov
add
push
mov
cli
sub
aam
inc
mov
setp
xor
fbstp
lahf
add
adc
sbb
pop
sbb
mov
cs
pop
lret
ljmp
inc
sbb
jmp
mov
in
sbb
pop
xor
test
test
mov
test
jne
inc
out
ret
xchg
push
jp
lret
imul
sahf
mov
push
dec
in
jmp
xchg
push
cs
imul
pop
push
push
sbb
out
ror
push
in
lret
fldl
sbb
enter
push
ret
lcall
fdivrl
jb
into
pushf
imul
loop
jo
lcall
xchg
or
mull
mov
es
cmp
loop
mov
dec
or
mov
inc
out
adc
mov
push
sbb
stos
jne
mov
subl
cs
cltd
mov
xor
push
jp
or
jnp
lea
fcompl
sub
mov
shlb
int
dec
mov
stos
xchg
out
lods
out
popf
jg
or
cmp
mov
jl
jbe
mov
int
jno
jno
or
outsl
cmp
jb
movsb
or
dec
imul
daa
mov
cs
shlb
ret
adc
and
mov
fdivl
das
mov
mov
fstps
arpl
xlat
jp
xlat
hlt
fdivrl
pop
push
pop
repz
icebp
mov
dec
sbb
pop
data16
mov
scas
in
jo
sub
mov
cltd
adc
dec
mov
mov
test
mov
je
jns
shrb
adc
int
fbld
sub
jmp
jae
sub
movsl
add
push
mov
dec
shr
mov
push
dec
xchg
cmpsl
inc
mov
pop
pop
loope
aam
gs
push
test
mov
fstpt
cmp
dec
mov
sbb
insl
popf
sub
inc
pop
sub
xor
adc
sti
add
sarl
stc
push
loop
aaa
jb
int
sbb
push
mov
stos
xchg
lods
jge
imul
ret
inc
sbbl
sub
or
fucomi
mov
inc
pop
inc
adc
mov
mov
push
inc
popf
int3
sub
fdivrp
sarb
mov
push
pusha
cltd
cmp
fdivl
popa
xor
sub
jo
push
lods
or
pop
lret
std
adc
cltd
pop
sbb
mov
jp
mov
ret
cmp
xor
ja
lea
cmc
pusha
fiadds
je
test
das
inc
pop
jecxz,pt
xchg
lods
jl
adc
aas
pop
adcb
or
inc
repnz
ror
repz
into
flds
aam
scas
mov
sbb
or
cmp
ds
arpl
cmp
roll
adc
out
xor
test
pop
addr16
outsb
ret
fnstenv
ror
aaa
xchg
roll
push
nop
push
inc
outsb
fcoms
inc
pop
pop
mov
inc
repnz
stos
outsb
xchg
loop
push
push
sub
mov
aad
jl
rorl
decl
xchg
mulps
mov
or
loope
inc
jecxz
xor
dec
in
lods
push
xchg
insl
jae
adc
sbb
inc
mov
ja
enter
jge
push
and
pmaxsw
jmp
xchg
jb
pop
lods
push
pusha
sub
pop
dec
imul
movsl
xchg
adc
cwtl
xchg
stos
test
sahf
subl
icebp
jp
stos
push
cmpsl
out
clc
xchg
lret
les
pop
adc
mov
stc
push
sub
enter
imul
cmp
jb
imul
enter
aad
mov
inc
jle
scas
popf
outsb
jae
push
xor
clc
mov
jp
mov
push
push
mov
out
aam
fwait
push
jne
sbb
jl
dec
pop
jae
hlt
es
jge
xchg
in
in
sbb
mov
in
sbb
js
or
xor
rclb
or
std
pushf
jbe
addr16
jp
fdivrl
sti
icebp
call
pop
scas
loope
ret
aas
dec
movsb
push
or
es
or
xchg
fildl
mov
aaa
test
lret
push
arpl
into
cli
mov
jo
dec
jno
or
inc
lret
clc
jb
adc
jecxz
shl
sarl
xor
sbb
fcoms
pop
test
mov
idivb
jbe
rorb
push
mov
jge
cld
push
add
mov
push
jnp
xchg
mov
test
adc
das
mov
cmp
adc
jns
xlat
ss
push
inc
fucom
in
ret
inc
ja
cmpsb
outsb
popa
fdivl
dec
push
and
hlt
insl
rolb
and
std
das
add
sbb
sarl
sbb
xchg
push
inc
lods
outsl
jne
jae
mov
xchg
mov
jne
inc
jg
jmp
lock
push
add
and
xlat
cmpsl
scas
pop
popf
dec
push
xchg
stos
inc
sar
sub
xchg
adc
je
push
add
int
mov
push
daa
jo
inc
into
jecxz
lret
loopne
jle
repz
or
dec
adc
adc
cmc
cli
adc
dec
stc
adc
cmp
fiadds
pop
sbb
int3
mov
in
pop
dec
fwait
adc
stos
jge
cmp
addr16
int
outsl
shrl
cmp
in
imul
mov
xor
or
icebp
add
lock
xor
sub
outsb
ds
dec
mov
rcll
dec
xlat
add
xchg
and
xchg
sbb
imull
icebp
in
add
jg
fwait
jbe
lret
mov
xchg
jge
rcrl
int
arpl
push
outsb
sbb
inc
or
roll
popf
mov
pcmpeqb
xchg
aas
inc
testb
into
scas
or
push
test
cmpsl
inc
cwtl
pop
sarl
or
call
in
inc
mov
xchg
loope
stos
inc
jnp
sarb
out
test
xchg
stos
cmp
leave
idivb
and
or
fcomp
adc
mov
lock
shlb
movsb
add
clc
mov
ss
pop
adc
cld
aam
repnz
int3
mov
cld
dec
jecxz
mov
cld
cmp
les
dec
test
cmp
gs
adc
aaa
mov
cwtl
loope
stc
call
out
cld
jmp
mov
push
pop
mov
testl
push
jge
arpl
dec
inc
adc
pop
xor
adc
nop
movb
lahf
pop
or
xor
addr16
roll
cltd
push
inc
movl
push
outsb
insb
jmp
and
xor
sub
jb
mov
imul
adc
setbe
daa
pusha
dec
stos
rorl
scas
leave
xchg
dec
or
and
push
jne
sar
roll
sub
scas
out
dec
push
out
repz
adc
mov
push
inc
lret
test
fistpll
xor
movl
dec
push
shr
fwait
xchg
sti
sub
add
or
bound
or
cld
pop
stc
cmpsl
xor
jbe
in
sbb
dec
jl
data16
test
cmp
lods
xchg
ret
lar
mov
jl
dec
add
lock
addr16
cmpsl
pushf
dec
cmovbe
mov
jg
push
icebp
pop
repnz
jecxz
mov
repz
jmp
xorb
ss
loope
xchg
jae
mov
into
jl
ljmp
mov
xchg
addr16
aad
and
push
mov
mov
mov
loopne
subb
pop
mov
pop
imul
xchg
push
and
out
or
xchg
int
push
or
inc
mov
ljmp
mov
push
push
mov
adc
orl
push
icebp
test
cmp
cmpsl
in
xor
cwtl
mov
mov
test
xlat
mov
dec
jns
xchg
out
outsl
por
mov
les
jmp
stos
mov
shl
jns
mov
ljmp
pop
dec
cli
dec
test
dec
mov
xchg
andl
int
out
cmp
outsl
adc
mov
xor
in
loopne
xchg
dec
mov
jp
xchg
rcr
dec
sub
adc
push
mov
xor
in
inc
mov
pop
mov
sbb
dec
add
xchg
popa
lds
cmp
inc
stos
cmp
push
lret
outsl
stc
pusha
add
or
and
addr16
pop
addr16
int3
push
pop
in
pop
jb
push
jne
pop
adc
je
xor
push
sar
xor
insb
jle
lock
mov
xor
sub
divl
pop
pop
sbb
mov
mov
cmpsl
push
push
add
push
lcall
jnp
adc
add
fwait
test
int3
jmp
popa
adc
cmp
sti
into
adc
ret
fldcw
call
cmp
add
push
mov
push
lret
insb
outsl
subl
das
jno
inc
in
in
popa
pop
mov
daa
scas
mov
test
cmp
int3
xor
mov
adc
pop
mov
arpl
pop
dec
xchg
lock
cmc
jmp
push
jmp
shll
pop
addl
mov
aam
mov
flds
cmpsb
sbbb
sub
frstor
cmp
and
sub
loop
xor
movups
roll
xchg
mov
call
ljmp
mov
sbb
pop
push
or
fisubrs
add
jno
xor
pop
sarb
fs
outsb
pop
pop
imul
mov
fcoms
mov
fists
adc
xchg
inc
loope
xor
sahf
mov
in
lock
lahf
mov
xchg
xchg
jl
cltd
in
xchg
xchg
xchg
cli
mov
dec
mov
mov
or
les
adc
hlt
les
mov
jo
ja
xchg
cmc
fimuls
stos
push
jns
and
sub
in
inc
jnp
jbe
test
xchg
push
in
add
int
roll
xchg
dec
adc
sbb
cmp
cmp
mov
daa
mov
mov
cs
into
mov
ret
xor
into
loopne
rep
jge
ljmp
sbb
mov
std
jo
dec
mov
cwtl
mov
ffreep
aad
or
in
pop
and
jae
push
outsl
xchg
nop
cli
mov
lcall
arpl
hlt
loope
insl
pop
add
pop
dec
shl
lods
jae
pop
jbe
out
xor
jbe
addl
push
leave
out
gs
jg
cmp
rcll
xor
repnz
xchg
movsl
es
pop
xchg
notb
pusha
stos
mov
addr16
mov
cmp
lret
jmp
out
xor
ljmp
cmp
mov
inc
jae
shll
push
arpl
jmp
in
sbbl
jge
addr16
xchg
jbe
outsb
inc
inc
loope
jbe
addr16
and
inc
lock
jl
mov
xlat
lds
add
vmwrite
inc
mov
sbb
sti
pusha
cmp
jo
imul
movsl
jmpw
cmc
jnp
mov
scas
stos
mov
jno
mov
mov
cltd
pop
push
fsts
push
inc
ret
adc
jmp
inc
js
push
pop
xor
test
or
repnz
cmp
sbb
xchg
in
and
inc
scas
push
lret
push
hlt
andb
aaa
mov
sub
cld
pop
insl
jecxz
xlat
aam
fbstp
ss
push
or
mov
cmp
push
push
mov
loopne
out
lock
adc
fcmovnu
ret
inc
lods
cmp
mov
sub
fxch
mov
dec
sub
sbb
lods
pop
xor
loope
insb
jo
out
dec
inc
inc
aas
cmp
xchg
or
cli
sub
pushf
and
arpl
or
arpl
xor
inc
lret
fisubs
lea
jmp
push
sub
mov
loop
push
cmp
in
scas
mov
mov
data16
rolb
ret
jb
out
pop
xor
mov
insb
lock
inc
sbb
mov
push
cli
inc
hlt
bnd
mov
ret
hlt
xchg
out
jmp
jns
dec
adcb
daa
imul
popf
popa
cli
sbbl
push
add
push
in
sarb
and
push
sub
pop
cmpsl
dec
xor
pop
shll
test
fsub
lret
xor
adc
cmp
mov
mov
std
inc
mov
mov
dec
into
mov
rorl
cmp
add
dec
sbb
out
cmp
lret
mov
jmp
mov
sar
sahf
gs
stos
add
mov
sbb
ret
mov
cs
and
pop
mov
push
dec
lock
ss
mov
leave
lods
cmpsb
cwtl
push
test
jl
fwait
jnp
jp
jbe
pop
and
insb
loope
in
scas
mov
or
test
aam
add
aas
hlt
pusha
push
mov
mov
stc
fsubr
std
or
sbb
sub
push
scas
mov
or
and
repnz
mov
jl
mov
mov
cld
xor
scas
adc
or
cmp
add
add
pop
jbe
add
add
pop
mov
fwait
in
iret
xor
fwait
mov
call
xchg
testl
fisttps
iret
cmpsl
neg
mov
dec
push
mov
out
push
lcall
sarb
adc
xor
inc
imul
out
dec
ja
inc
xchg
push
bnd
out
lods
sub
ret
cmp
retw
out
cwtl
adc
cmp
jg
rorb
rcrb
jecxz
sbb
dec
adc
inc
push
sub
cmpsl
or
push
push
ret
stc
pop
inc
aaa
lret
xlat
mov
jecxz
hlt
mov
sahf
fdivs
jbe
test
mov
jmp
mov
push
add
sub
cmp
adc
adc
cmc
fdivs
mov
cmpsb
dec
sub
xchg
arpl
xor
cmp
sbb
or
mov
mov
mov
or
shll
pop
out
mov
es
jno
or
jl
in
stos
andb
fcomps
insb
in
fwait
push
push
rcl
cs
sub
cs
rorb
test
jmp
sub
mov
mov
cli
and
mov
aad
adc
movsl
punpcklbw
mov
sbbb
push
mov
xchg
cmpsb
xor
ret
mov
cmp
idivb
or
xor
je
sbb
sbb
sub
stos
mov
loop
pop
dec
jl
jae
or
and
or
mov
push
ljmp
test
or
mov
arpl
adc
loop
cmc
orl
push
cmp
daa
and
jns
jno
cmp
es
adc
stos
loopne
push
cld
add
cmc
or
out
mov
nop
aaa
mov
fsubl
ret
dec
pop
xchg
mov
mov
outsb
inc
fcomp
jge
cld
jg
cmc
je
rcrb
dec
xor
decb
or
push
cmp
jge
das
shrb
pop
jnp
lds
jbe
sahf
dec
sub
cmp
xor
idivl
pop
arpl
sbb
jmp
cmpb
popl
int
cltd
sti
mov
insb
stc
mov
loope
std
aas
enter
movsb
mov
cmp
lret
mov
mov
sbb
hlt
and
leavew
jae
push
sub
xlat
xor
pop
inc
push
mov
and
lcall
ja
push
cmp
adc
mov
mov
xor
ja
test
mov
mov
ja
movsl
jp
jb
outsl
movsb
rorb
mov
xlat
js
and
cmpsl
mov
push
sub
insl
out
sbb
scas
and
jge
mov
repnz
pop
adc
mov
leave
adc
js
add
aad
iret
and
daa
and
xchg
pop
and
mov
leave
jnp
sbb
ja
mov
movb
xor
push
push
or
enter
adc
clc
aas
outsb
ret
iret
stos
inc
mov
push
and
into
dec
addr16
cmc
js
jecxz
push
mov
mov
leave
xor
insb
xchg
mov
inc
add
dec
inc
mov
xchg
cmp
jmp
mov
fisttpl
xchg
inc
add
mov
lea
or
daa
or
mov
in
xor
jmp
pusha
and
aas
sbb
mov
insb
sbb
push
shrd
push
lods
loopne
push
mov
pop
dec
xchg
test
xor
addl
popf
add
mov
push
in
sbbb
cmpsb
sahf
leave
mov
fxch
and
add
adc
in
mov
sahf
lods
push
mov
sbbl
daa
sub
outsb
scas
fwait
or
ljmp
cmp
adc
sbb
cmp
popa
nop
inc
sub
leave
in
add
inc
and
pop
xor
lret
imul
and
outsl
xchg
repz
cmp
mov
xchg
fs
sbb
mov
mov
pop
sbb
pop
mov
in
pop
adc
fimuls
imul
pushf
fistpl
int
sub
pop
mov
pusha
in
ja
inc
adc
jle
xchg
jg
iret
cli
sub
stos
pop
jb
inc
inc
adc
clc
loopne
mov
dec
push
cmpsl
inc
mov
adc
cwtl
mov
mov
mov
jp
add
fwait
hlt
bound
int3
fcmovbe
cmp
dec
insb
popf
add
bndstx
or
rcrb
dec
imulb
add
sub
mov
pop
loope
push
out
sbb
push
lods
lret
xor
lea
sub
xchg
sub
xchg
and
insb
inc
inc
xlat
lahf
mov
fmull
rorl
mov
jne
sub
enter
inc
in
ja
inc
aaa
mov
or
jge
jae
test
aas
sbb
xor
add
and
push
and
stos
cli
push
cmp
clc
fwait
xchg
xchg
pop
addl
mov
in
xor
daa
push
data16
ret
pushf
test
xchg
clc
mov
inc
mov
lods
mov
xchg
iret
jae
mov
or
fidivrs
pop
inc
lods
fildl
push
pop
pop
mov
xchg
cltd
pop
popf
loope
cwtl
aam
out
cmp
cmp
es
push
mov
insl
push
scas
cmp
cmp
in
jl
push
jb,pt
out
testb
mov
stos
fcomp
in
jo
stos
cltd
imul
dec
in
mov
ljmp
push
cmp
imul
aad
mov
sbb
aad
fs
adc
cmc
mov
push
dec
ror
or
pop
ficompl
jnp
push
pop
pop
lods
xor
fimull
mov
pop
cmp
int
mov
mov
push
cmp
xchg
inc
sub
xor
lret
adc
call
mov
aad
xor
jnp
or
sbb
jecxz
mov
shl
les
aas
mov
inc
jne
mov
push
fucomi
dec
inc
stc
mov
cs
jecxz
popf
sbb
or
lods
idiv
loope
fs
shll
fwait
xor
cltd
mov
xor
jno
cs
out
mov
addr16
cmp
xchg
jbe
imul
sub
and
je
sub
out
rcll
pusha
xchg
dec
jl
xor
mov
jo
aaa
orl
in
push
mov
pop
ret
int3
cmc
dec
inc
je
lods
push
push
xor
cmp
xchg
inc
arpl
nop
fidivrs
clc
lods
ret
mov
push
push
fmulp
shlb
dec
pusha
stos
in
mov
addl
pop
cli
fcmove
sbb
fs
rol
sbb
rcr
arpl
lret
jle
inc
xor
cmp
mov
xor
jg
xor
lds
xor
out
or
jge
push
stc
add
sti
je
mov
mov
mov
xor
popa
pop
sbb
mov
lods
lods
sbb
add
cmp
dec
xchg
pop
xorl
es
lahf
inc
add
inc
hlt
or
push
cmc
push
cmp
movsb
cli
sub
inc
inc
and
add
or
xchg
add
scas
pusha
push
test
xchg
outsb
pop
pop
mov
movsb
dec
xlat
or
mov
jecxz
pop
adc
cmpsl
and
sub
std
lret
pushf
inc
lds
mov
mov
inc
add
sbb
mov
sbb
jmp
mov
xchg
mov
xchg
cmpsl
test
or
das
addr16
repnz
jbe
pop
scas
fisttps
pushf
outsb
push
les
xchg
inc
scas
push
fistl
xchg
outsl
pop
lock
cmc
inc
xorl
std
mov
insb
add
movsb
jge
cs
cmp
mov
sarl
pusha
out
scas
and
jnp
out
jg
pop
pusha
mov
inc
mov
dec
addr16
imul
in
dec
ret
xor
ljmp
fyl2x
inc
addl
daa
dec
ljmp
jno
lea
xchg
adc
data16
jns
mov
out
adc
mov
mov
cwtl
jge
inc
dec
int
inc
inc
inc
push
mov
adc
xchg
scas
leave
dec
cmp
pop
dec
pusha
sbbl
and
leave
sub
pop
insb
jb
sti
add
popa
lret
rclb
inc
sub
test
adc
or
sahf
mov
or
out
push
adcb
outsl
xchg
pop
sbb
adc
mov
pop
xor
cs
push
ret
nop
popa
sahf
sub
cmp
sbb
xchg
scas
pop
push
outsb
cmovle
into
xor
mov
mov
divl
sub
xchg
hlt
cmp
mov
das
pop
inc
xlat
sbb
jmp
insb
mov
or
dec
xchg
push
mov
lds
mov
loope
rorb
enter
pushf
xchg
xchg
mov
inc
mov
push
sub
jmp
push
pop
cmp
addr16
je,pt
hlt
lods
mov
dec
or
sbb
adc
pop
pop
insb
imul
mov
sarb
loopne
or
subb
xchg
sti
pusha
fimuls
ljmp
iret
arpl
les
sarb
int
ja
and
dec
loope
inc
mov
lods
je
pop
sbb
jno
into
fld
sets
call
popa
add
push
adc
enter
push
hlt
adc
fistpll
xor
mov
jb
cmp
lds
call
mov
shlb
notl
push
ret
and
xor
cmp
mov
and
fcomps
add
or
ds
mov
movl
out
and
cmp
cld
mov
inc
movsl
cmp
inc
xchg
lret
dec
pop
and
sbb
inc
jg
and
cmc
mov
or
push
and
insl
fisttpll
adc
xor
aas
out
out
add
enter
stos
jnp
inc
cmp
mov
lret
mov
nop
mov
xchg
push
adc
mov
es
xor
fdivrl
in
movsb
insl
je
cwtl
xchg
inc
jecxz
out
ss
push
inc
adc
or
sbb
rcl
add
out
mov
and
cmpsl
leave
rclb
hlt
cmp
sub
push
cltd
mov
xor
adc
pop
sub
movsb
pop
lret
mov
dec
arpl
mov
push
ja
cmp
inc
jo
xchg
and
lock
ja
or
push
add
ss
clc
arpl
fs
add
jle
jmp
out
pusha
jb
mov
xchg
nop
flds
test
push
mov
mov
mov
dec
movsl
sub
cmpsl
aad
out
mov
mov
cmp
mov
and
cmpsb
popf
xchg
in
pop
xlat
scas
test
dec
add
push
push
lods
iret
mov
jge
in
sbb
ja
xor
bound
xchg
sahf
sbb
dec
jg
mov
push
cmpb
or
and
repz
das
add
daa
in
xorb
xchg
mov
jne,pn
cwtl
mov
lret
rcl
or
fdivr
faddl
lock
mov
xchg
add
loope
sbb
sar
push
lcall
fwait
and
xchg
loop
dec
push
xor
mov
pop
adc
aam
pop
aaa
cmc
pop
pusha
mov
shr
xchg
adc
iret
gs
loop
sbb
push
sbb
sbb
mov
iret
divb
xchg
jb
xchg
cmp
dec
pusha
movsb
jle
adc
mov
aad
mov
aaa
shlb
sub
neg
sti
ret
enter
or
cmp
jp
leave
mov
jl
aaa
pusha
lds
jg
icebp
or
and
dec
xchg
jg
adc
cwtl
mov
cmpl
ja
or
addr16
addb
mov
into
pop
je
sbb
pop
sbb
inc
adc
pop
addr16
sahf
xor
or
push
sub
mov
mov
test
jns
iret
jne
push
sti
popf
outsl
jb
jb
aam
cmp
pop
lods
fdivp
icebp
test
out
inc
sbb
imul
in
call
xchg
outsb
test
stos
andl
and
push
aaa
adc
inc
mov
sbb
mov
lods
push
dec
dec
inc
ljmp
mov
and
repnz
call
dec
data16
mov
lds
fdivs
xchg
jo
adc
xor
xchg
jge
add
pop
stos
jecxz
in
mov
adc
jmp
fstpt
mov
js
mov
inc
lods
mov
sti
xor
mov
dec
add
dec
ret
fisttps
mov
pushf
int
dec
clc
in
mov
jle
xchg
pop
test
adc
ljmp
and
inc
pushf
cwtl
shr
lret
sub
rcr
lods
stos
and
ds
mov
jmp
mov
jmp
das
sbb
out
dec
mov
dec
cld
pop
adc
push
ljmp
les
jle
popa
sbb
sub
out
pop
cmp
hlt
or
adc
dec
jp
in
sti
and
ret
cmc
lahf
test
data16
shll
loope
cmp
mov
insb
mov
faddl
cmp
in
inc
add
bound
sbb
scas
incl
pop
roll
jmp
inc
adcb
pop
mov
xlat
pop
xchg
adc
icebp
push
ds
mov
imul
aaa
aaa
in
jnp
ljmp
inc
pop
pop
lret
mov
and
adc
shufps
pop
das
out
cmp
jecxz
dec
and
pop
fldl
mov
divb
jbe
pusha
daa
sub
dec
lcall
roll
mov
data16
add
push
imul
lods
sub
dec
stc
push
jmp
mov
aas
or
incb
adc
mov
push
stos
adc
hlt
cmp
pop
mov
leave
push
mov
xlat
out
outsl
xchg
cmpsl
ja
movsb
sbb
loope
into
daa
lcall
mov
mov
bound
push
into
jo
dec
inc
sub
rolb
jl
jns
push
sub
loope
cmp
xchg
test
rcll
dec
push
or
rolb
mov
xlat
fiadds
push
or
mov
int
jmp
aas
adc
inc
test
sbb
jb
sbb
jp
bound
mov
push
mov
dec
pusha
orb
cld
popa
mov
addl
sub
int3
dec
dec
fidivs
lahf
push
pop
push
sbb
test
out
cmpsb
push
daa
adc
dec
jmp
shlb
push
mov
stos
mov
push
push
or
mov
push
jnp
sti
mov
gs
sarl
shrl
jmp
cmp
mov
lods
gs
sahf
iret
loope
push
add
lret
ds
mov
mov
push
ja
popa
js
add
inc
ljmp
rolb
outsb
jmp
add
add
add
dec
mov
add
and
mov
sar
pop
cmp
imul
ja
cmp
xor
xchg
xchg
mov
xchg
cmp
and
mov
pop
inc
pusha
push
imul
test
push
push
js
mulb
xchg
and
jb
mov
sarb
push
bound
orb
jae
and
cmpsl
xchg
push
cmc
mov
ret
jle
ds
fcmovbe
cmp
sbb
dec
jne
clc
add
dec
pop
mov
imulb
add
out
cmc
sub
movsl
add
aas
mov
repnz
mov
mov
jge
jne
xchg
cmp
mov
inc
ret
add
xor
xchg
aas
pop
ja
arpl
mov
mov
or
pop
sub
pop
movsl
jne,pn
lods
lock
test
daa
xchg
pop
dec
add
movsb
cmpsb
arpl
dec
sbb
sub
sbb
cwtl
leave
rcrl
pop
mov
adcl
test
cwtl
into
dec
jl
imul
pop
hlt
pop
flds
mov
loope
push
fcos
xchg
jno
adc
dec
adc
mov
movb
sbbl
jmp
ds
in
mov
leave
rcll
jl
mov
jb
daa
pusha
jl
mov
dec
sub
aas
in
out
fisubrl
and
cmp
into
pop
sbb
popf
data16
mov
add
jbe
mov
and
mov
jp
mov
cltd
ret
sub
cmp
jl
mov
mov
jmp
xchg
mov
adcl
dec
clc
inc
cmp
pop
scas
orb
push
sub
dec
sub
stos
adc
dec
xor
push
test
push
sti
or
and
les
sbb
daa
int3
push
lds
fcmovnu
jnp
leave
mov
adc
mov
pushf
out
push
lcall
js
cmp
sub
nop
dec
sbb
or
je
push
mov
je
mov
test
stc
aad
insl
jno
and
jo
cmp
and
std
pop
xchg
pop
lods
test
leave
add
cltd
repz
aad
andb
pop
xchg
loopne
rcl
xor
out
or
or
cmpsl
push
lret
popf
shlb
das
add
cmp
cmp
jmp
push
xchg
xor
push
jne
sbb
and
adc
movsb
or
pop
es
inc
movsb
jmp
enter
fs
pop
or
push
cmpsl
into
and
add
ds
aas
jno
sub
push
ret
cs
or
jmp
test
movsl
dec
mov
lret
inc
xlat
mov
sbb
mov
inc
imulb
sub
dec
xchg
hlt
cmp
loop
inc
mov
imul
imul
push
adc
add
lret
cld
in
adc
jle
fcompl
roll
pop
jno
outsb
inc
jno
test
dec
out
je
js
loop
dec
orb
jns
mov
jbe
mov
notb
int
mov
aad
jns
inc
and
push
xor
sub
in
out
and
xlat
pushl
or
cltd
shll
das
movsb
insl
cwtl
shll
sbb
push
mov
js
test
xchg
add
lea
out
fstps
cmp
dec
and
dec
mov
or
xor
lods
leave
pop
xor
push
loope
sub
aad
cmpsb
mov
push
pop
mov
test
stos
sti
push
add
xchg
pop
mov
mov
adc
fwait
cwtl
dec
adc
mov
inc
pop
xor
sub
mov
xor
push
push
mov
cmc
lock
inc
sbb
into
fwait
mov
sub
or
nop
in
xchg
mov
jmp
decl
xchg
cli
fxam
add
push
aad
out
push
test
pop
sub
aaa
mov
xchg
pop
jnp
mov
mov
xlat
imul
jbe
cmp
dec
pop
cmp
in
inc
sbb
xchg
mov
out
test
xchg
dec
mov
mov
dec
fs
xchg
cli
negl
xchg
iret
pop
mov
es
inc
mov
clc
fdivs
pop
xchg
divl
lods
sub
xchg
push
mov
std
fs
lods
cmc
cmp
mov
push
pop
pop
xchg
push
lret
pop
movb
push
ficoms
stc
sub
out
mov
jp
outsl
mov
decb
mov
pop
xor
jle
pop
insl
cmp
imull
test
mov
or
adc
cmpsl
cmpsb
dec
test
inc
sub
mov
inc
or
clc
leave
aad
xchg
push
add
mov
rcr
popa
jmp
push
adc
fstpt
test
or
sti
insl
or
push
jnp
inc
lods
jecxz
cmp
dec
sub
push
repnz
sahf
scas
ss
stc
inc
rcll
xchg
lods
insl
aad
loop
pusha
popa
push
test
insb
sub
sbb
int3
idiv
sahf
stc
ja
jae
mov
test
xor
inc
ss
es
std
cmp
cwtl
or
jge
inc
js
cmp
out
jb
sbb
xor
rcll
push
jae
dec
adc
lds
loop
fiaddl
jecxz
sbbb
jle
add
insl
icebp
xor
test
xor
pop
cmc
imul
dec
sahf
mulb
loopne
bound
push
mov
pop
movsl
mov
scas
clc
xlat
add
sbb
rorl
mov
pop
xlat
and
mov
cmc
xchg
push
push
sub
jg
jb
adc
pop
jnp
hlt
sti
addr16
dec
dec
lahf
inc
xchg
cmp
out
ss
int
aad
popa
push
dec
cmp
cmp
mov
and
lahf
xchg
xchg
cmp
dec
test
adc
bound
pop
mov
popw
cwtl
cmp
cs
lea
test
dec
jbe
ret
sub
dec
shufps
add
out
insb
adc
sub
mov
lahf
rcll
cltd
jae
jb
sbb
leave
jne
mov
addl
dec
pusha
mov
aas
imul
adc
test
pop
push
and
or
js
out
lods
cmp
mov
xchg
fs
xchg
pop
jo
std
adc
pop
xchg
outsb
lds
push
test
sub
popf
mov
sub
xor
mov
out
mov
cmp
dec
dec
add
dec
ficoms
adcl
inc
adc
push
imul
fwait
or
out
in
add
out
mov
ror
xor
or
add
aaa
dec
push
adc
or
jb
xor
jge
shr
test
xchg
inc
ret
pop
inc
xchg
jnp
addr16
xor
fdivrs
ret
inc
mov
lret
cld
out
icebp
xchg
and
jg
leave
cmp
leave
or
sub
shll
cmp
and
cmp
inc
xchg
sbb
mov
aaa
inc
rclb
rorb
and
xchg
jnp
ror
push
jns
jp
jge
cltd
xchg
subb
push
mov
fildl
orl
dec
movsl
icebp
arpl
cmp
int
into
push
out
inc
js
roll
nop
fldl
jle
test
pop
inc
sti
add
inc
leave
adc
imul
rcl
jne
mov
fwait
jns
das
cltd
icebp
mov
sub
add
xor
add
push
adc
fmul
dec
arpl
xchg
shrb
jae
inc
repnz
movsb
in
xchg
popa
jno
push
or
aas
push
cmpsl
int3
jg
lahf
xchg
fmuls
dec
nop
sbb
outsl
cli
inc
or
inc
dec
mov
lcall
andl
mov
repnz
outsl
jle
mov
jle
clc
rcr
lods
mov
fcoml
aam
cmp
add
sub
mov
test
stos
fwait
xchg
aaa
mov
and
pop
shrl
jbe
aaa
jl
in
js
scas
lea
stc
into
popa
push
inc
pop
push
fwait
cmpsl
in
and
je
push
test
leave
adc
dec
stos
and
mov
bound
cmc
cltd
add
cmpsb
sbbb
rcll
ficomps
and
push
dec
xor
mov
pop
loopne
jae
pusha
mov
inc
outsl
mov
popa
movsb
cmpsb
jmp
mov
lret
pop
les
and
stc
dec
movsb
fisttpll
xchg
mov
insb
pop
mov
aam
aam
movsl
sbbb
stos
fists
mov
sub
adc
push
cli
mov
or
dec
iret
inc
xlat
aam
push
and
mov
inc
insb
js
lds
lods
pop
mov
or
mov
ljmp
leave
sub
push
fcomi
insl
sti
imul
imul
sbb
and
stos
adc
stos
bound
xchg
jb
xchg
jnp
inc
in
subb
out
mov
pop
jns
pop
jl
or
sbbb
sub
and
fdiv
jecxz
sub
out
stos
jne
inc
fsubrs
gs
out
data16
push
jb
test
mov
sub
mov
cmp
std
xchg
sub
enter
xor
adc
in
ljmp
mov
inc
cli
push
xchg
nop
cmp
jbe
cld
in
cmp
mov
xor
add
lret
lea
add
xor
push
aam
xor
nop
mov
rolb
roll
adc
mov
sarb
add
xchg
jge
leave
stos
add
push
insl
dec
pop
loope
cmovno
mov
add
repz
and
scas
sbb
movnti
dec
fs
xor
int3
push
push
outsb
sbb
ss
iret
mov
jne
inc
scas
ret
pop
fwait
stos
int3
cwtl
and
nop
mov
xchg
in
pop
inc
sbb
sub
or
push
sub
scas
dec
int3
xor
push
aad
or
sti
sub
int
stc
dec
orb
add
insl
je
outsl
and
test
int
into
out
inc
add
sbb
test
mov
stc
mov
mov
push
aaa
in
jmp
jb
jmp
xor
push
js
push
hlt
xchg
cmp
mov
push
push
into
rcl
cmp
clc
in
cmpsb
int
or
cmpsb
xchg
fistpll
mov
call
inc
cwtl
pop
lcall
and
jmp
sti
mov
call
add
sarb
mov
sarb
out
pop
mov
or
mov
fisubl
mov
fwait
pop
mov
out
stos
mov
add
lret
rcl
nop
pop
xor
test
mov
mulb
inc
lock
nop
xchg
jae
icebp
pop
xchg
mov
cmp
jne
xorl
add
adc
push
dec
dec
mov
lahf
sub
cld
jns
out
int3
call
adc
inc
btc
push
pop
adc
stos
mulb
add
cmpsb
in
push
icebp
mov
rcrl
int
repz
call
loopne
je
mov
inc
bound
push
ljmp
add
out
jg
push
inc
ja
daa
pop
or
leave
xor
in
loopne
and
xorl
jno
xchg
stos
xchg
mov
lret
jbe
xchg
or
mov
cmp
jecxz
jle
mov
sbb
xor
xor
jo
mov
jecxz
adc
leave
popa
jbe
mull
adc
or
inc
jnp
dec
scas
push
cmp
jmp
lods
xor
adc
sti
lock
sub
sbb
inc
mov
lahf
fwait
in
repz
or
inc
cs
lea
fcomps
xor
mov
push
xchg
mov
xlat
cltd
shrl
add
lds
sbb
mov
and
inc
or
push
push
lods
arpl
and
jb
cwtl
xor
sub
fiadds
roll
mov
pusha
push
leave
aaa
test
fcoml
insl
mov
dec
jl
dec
imul
sbb
inc
xor
dec
push
repz
or
lret
and
xor
xchg
repnz
push
xchg
mov
jae
mov
jmp
mov
push
push
dec
xchg
dec
lock
sbb
mov
or
int3
ss
mov
xor
pop
push
jae
inc
lahf
or
mov
rcl
mov
jno
mov
cld
test
xchg
scas
lret
idivl
test
mov
pop
out
dec
push
push
roll
je
sahf
add
daa
jge
imul
or
jecxz
adc
or
bound
pop
adc
sbb
outsl
arpl
out
je
pushf
sahf
mov
mov
inc
sbb
sub
cmp
jge
rclb
dec
ret
or
mov
pop
jae
xor
cmp
insb
cmp
jno
sub
sbb
push
fiadds
jnp
mov
mov
push
aad
mov
xchg
nop
xchg
mov
aad
inc
adc
pop
xchg
insl
mov
and
roll
ret
sub
aad
insl
xlat
mov
or
fwait
push
lods
jge
push
inc
sbb
xor
movntps
sbb
cltd
pop
xchg
arpl
and
mov
pop
jbe
sbb
cli
movsb
loop
xor
xor
pop
or
cmp
dec
mov
cmpsb
pop
mov
or
lea
xchg
xchg
sarb
adc
cmp
ret
in
lret
lcall
jge
push
test
mov
test
addb
pop
pop
and
adc
fbld
adcb
add
dec
lods
cmc
inc
fnstcw
orl
dec
or
aas
pop
push
inc
pop
xlat
push
sub
stos
or
xor
sbb
mov
lods
jge
cmp
mov
frstor
jp
mov
and
rcrb
inc
mov
aaa
fisttpll
xchg
mov
push
or
adc
fsubs
pop
adc
clc
inc
pusha
dec
and
std
xor
dec
aad
mov
and
das
sahf
js
cmp
pop
inc
hlt
push
je
cmp
ljmp
stc
cmpsl
in
lea
mov
sbb
jb
fadds
addl
sbb
xor
mov
mov
divb
mov
fists
adc
sub
add
mov
imul
lock
jnp
push
mov
addr16
push
adc
jg
test
sub
decl
xor
shl
cmp
mull
popf
adc
mov
fucomip
pop
repnz
pop
sbb
popf
sbb
inc
push
call
push
les
xor
stos
cs
mov
test
cmp
fisttpl
push
sbb
pop
push
popa
fwait
sbb
cmp
mull
inc
sahf
call
aad
adc
mov
imul
repnz
mov
rcrb
rol
and
icebp
xor
sbb
xchg
lret
jae
adc
test
dec
insb
js
and
es
es
sbb
ss
cltd
xor
cli
push
push
je
fistpll
dec
xchg
fwait
fs
or
sub
daa
nop
xor
shrl
jl
iret
adc
jmp
and
data16
imul
jb
mov
sbb
push
stos
repz
pop
sbbb
in
mov
popf
xor
adc
jne
out
scas
mov
aaa
add
inc
jmp
adc
popf
bound
test
xchg
movsb
jbe
jne
and
imul
loope
mov
mov
add
dec
lret
aaa
lea
test
cli
push
xchg
int3
pop
xor
push
stos
pop
cltd
repnz
outsl
xor
or
jne
test
pop
mov
push
daa
ja
jne
dec
mov
faddl
inc
xor
adc
cmp
push
or
pop
jno
imulb
jne
mov
pop
push
xor
adc
loop
fwait
jns
mov
xchg
cmp
push
xor
nop
ja
lock
pushf
std
sbb
and
adc
pop
xchg
and
and
and
les
test
jp
push
test
repnz
jns
int
or
loope
in
aam
std
push
adc
dec
fildll
mov
stc
repnz
pop
int
jmp
push
mov
call
popf
push
clc
addl
mov
cli
ret
insb
cs
or
inc
push
leave
ss
das
int
add
fimuls
sbb
loopne
jo
adc
sub
mov
mov
arpl
and
push
loop
sbb
xor
repz
arpl
stos
mov
mov
in
imul
shr
loope
imul
fistl
jl
mov
sbbl
test
mov
in
popf
pop
add
adc
out
push
pusha
xor
adc
add
cmp
sbb
jmp
repnz
inc
leave
push
jl
mov
sbb
mov
sbb
lock
and
aad
dec
shlb
jae
test
xchg
push
xchg
lcall
add
adc
push
mov
xor
nop
push
lret
xchg
jne
les
std
not
pop
push
lods
ret
lret
shr
xor
icebp
mov
sahf
pop
iretw
push
in
and
or
lea
data16
cwtl
xor
mov
push
jecxz
sbb
jp
fnsave
push
aaa
hlt
inc
outsb
das
jae
xor
jge
push
push
js
jl,pn
push
ret
inc
clc
enter
dec
fxch
pusha
mov
cmp
xor
mov
adc
push
jae
xchg
cs
mov
sub
fcompl
rorb
and
pushf
sti
mov
or
jo
add
pop
test
fmull
add
pop
pop
inc
mov
adc
cld
pop
xchg
cmpb
lea
data16
mov
mov
mov
pop
das
sqrtps
fbld
xchg
aas
aam
add
stos
lock
jb
mov
jbe
pop
enter
adc
les
aam
dec
aaa
jmp
mull
mov
mov
sbb
xchg
repnz
inc
mov
jmp
jno
dec
lea
je
add
cmpsb
shl
iret
inc
bound
mov
into
outsb
inc
jno
insb
pop
mov
jbe
xor
insl
lcall
mov
dec
adc
xchg
int
std
push
add
push
pop
jnp
insl
mov
fldt
pop
std
bound
mov
out
dec
aad
sbb
arpl
cmp
jb
xchg
outsb
test
jno
in
aas
out
xchg
sbb
leave
cli
iret
test
xchg
sub
sbb
ss
inc
arpl
add
je
fucomi
mov
or
dec
aam
sbb
subb
addb
rep
push
shll
jg
cmp
icebp
or
pop
cmpsl
pop
aaa
xchg
dec
bound
test
mov
ja
lea
or
xor
jecxz
sbb
add
xchg
dec
scas
lock
mov
jp
fistl
repz
pop
jae
dec
scas
xor
push
sub
ja
in
pusha
pop
out
lods
icebp
fsubrs
icebp
dec
scas
sbb
pop
mov
lds
inc
and
sbb
sub
mov
lock
out
pop
mov
ffree
or
add
nop
movsl
adc
and
inc
rol
sahf
pop
ret
xor
or
pop
cmp
sahf
sti
insb
loopew
mov
or
push
imul
pushf
outsl
jp
movl
enter
sub
push
pop
mov
stos
std
dec
fs
inc
add
sub
ja
inc
sbb
mov
and
aad
or
mov
jle
lret
and
mov
leave
push
in
cs
test
cmp
pop
sbb
int
jp
daa
fs
inc
and
insl
jb
imul
cltd
cmpsb
cld
mov
push
jecxz
es
mov
mov
cltd
in
xchg
xchg
mov
adc
lds
aaa
inc
shr
das
out
mov
sahf
mov
jno
int
jl
add
cmc
sti
push
jge
sbb
push
shlb
dec
mov
ss
adc
stc
sub
pop
dec
cwtl
jg
mov
add
inc
sbb
repnz
ret
cmp
or
icebp
jbe
popf
cmpsb
push
fadds
adc
sub
sbb
gs
jg
stos
jp
mov
adc
sbb
call
adc
pop
pop
test
pop
aaa
mov
pop
and
jmp
pop
ret
lcall
fbld
into
rcl
int3
aad
dec
sbb
lea
push
xchg
and
pushl
jecxz
in
test
into
pop
pop
mov
insb
and
mov
sub
repnz
fwait
xchg
jmp
pop
push
and
fstp
loopne
mov
add
push
mov
mov
sti
push
add
testl
cltd
aad
fdivr
cltd
orb
xlat
lahf
adc
xchg
sub
ret
or
insb
int3
dec
add
stos
stc
pop
xchg
rorl
dec
jecxz
pop
pop
pop
dec
das
mov
push
fidivrl
ja
push
iret
arpl
adc
mov
mov
jle
scas
cmp
nop
xor
mov
test
push
mov
mov
and
inc
call
mov
pop
mov
xchg
jnp
cli
push
ret
out
pop
cmpsb
mov
inc
inc
adc
imul
sub
or
or
xchg
iret
mov
add
jg
scas
push
in
xchg
sub
daa
mov
or
pop
xlat
push
mov
ror
jb
insl
jle
pop
inc
nop
lods
rcr
cld
test
jo
adc
inc
cmp
sub
iret
push
mov
dec
sarl
stos
inc
pop
xor
pop
xchg
ds
bound
xchg
in
movsb
sarb
and
mov
adc
mov
or
inc
sub
inc
das
fmuls
jg
fldenv
jge
sbb
inc
mov
movsl
push
add
mov
loop
dec
push
fsubrp
nop
aam
lds
imul
push
inc
aam
push
mov
or
xlat
inc
out
dec
jg
xchg
sbb
inc
xor
test
stos
pushf
lock
ja
push
jae
sub
jl
into
pop
bound
imul
rep
sbb
xchg
in
jbe
enter
in
sub
inc
in
adc
dec
cmp
movsl
jg
aas
nop
jmp
pusha
dec
mov
mov
int
or
inc
call
lret
and
xchg
pop
sbb
mov
cmp
pop
add
mov
das
push
cmpsl
mov
mov
arpl
fdivs
pop
dec
adc
loope
dec
ss
and
adc
aam
popa
bound
and
dec
dec
xor
aam
ljmp
xchg
mov
push
pop
dec
pop
sub
popf
push
pusha
jnp
or
xor
rcll
sub
das
test
or
je
add
mov
inc
das
add
aad
inc
cwtl
lahf
sbb
or
inc
jns
cmp
cmc
mov
rcr
jmp
mov
rorb
mov
call
jns
sbb
pop
mov
xchg
in
push
add
cmp
and
xchg
sub
loopne
inc
mov
in
outsb
sub
icebp
leave
jp
cmp
lahf
in
push
ljmp
inc
pushf
xor
sahf
pop
push
mov
xlat
xchg
fnstsw
pop
mov
push
iret
sbb
arpl
or
push
movsl
lahf
pop
sbb
mov
adc
mov
xor
scas
je
sub
and
xchg
xor
scas
call
xlat
shrb
fwait
adc
mov
fisttpll
mov
ret
test
lock
pusha
pop
mov
faddl
sub
loopne
je
ds
xchg
shlb
cld
test
sub
lret
add
leave
lcall
pop
push
adc
insl
stos
jle
xor
testl
push
xlat
add
rclb
lea
jae
push
loop
mov
lahf
daa
sbb
mov
jb
cmp
mov
mov
mov
mov
fdivrs
int3
xor
scas
or
xchg
cld
push
mov
lret
sbb
sub
inc
mov
xacquire
roll
mov
mov
cmp
outsb
mov
jb
mov
in
adc
inc
repnz
cmpl
ficompl
andl
test
dec
sub
mov
and
fs
stc
xchg
addr16
les
fisttpl
fwait
data16
test
cmp
fisttpl
enter
loopne
mov
test
stc
es
jle
mov
and
jmp
add
or
gs
cmp
fs
enter
adc
movsl
sub
aam
rcr
call
or
js
aad
jmp
push
cltd
or
mov
pop
loopne
addr16
jnp
lahf
sbb
adc
loop
or
sbb
push
inc
ljmp
cmpl
inc
loopne
pop
lds
xchg
testb
ds
push
inc
notl
cs
and
add
lods
ret
cmp
pop
mov
push
sbb
mov
cld
jnp
lods
sub
mov
cmp
lock
inc
mov
imul
cmpsl
sti
pop
cmp
dec
sti
test
add
lahf
push
into
imul
inc
psrad
xchg
js
mov
iret
xlat
xor
jg
lahf
push
adc
imul
out
lret
push
out
lods
dec
in
add
inc
jle
gs
mov
rolb
test
jno
lods
adc
sbb
pop
js
imulb
call
sahf
pop
jbe
cli
mov
mov
mov
fdivrl
imull
ret
and
add
fcoml
inc
cs
lahf
scas
and
lods
cli
pop
cs
icebp
bnd
sarb
push
mov
and
or
inc
mov
fldcw
xchg
cli
es
sarl
and
or
mov
inc
add
adc
pop
mov
mov
xchg
and
in
jne
jmp
push
movsl
push
js
and
add
insb
cmp
popf
push
test
loopne
jmp
and
enter
and
mov
inc
hlt
push
xor
loopne
out
mov
push
lret
lret
mov
mov
and
jg
add
xchg
inc
push
xchg
test
push
hlt
dec
xchg
sub
push
in
xchg
dec
sub
jns
ja
not
mov
daa
cmpsb
loopne
cmp
lcall
int3
repz
sub
sub
gs
dec
fbstp
stc
lods
xchg
aad
in
cmp
and
sub
sti
push
gs
jg
and
shll
in
inc
subb
or
ss
pop
test
mov
pusha
dec
outsl
mov
aam
push
test
and
icebp
jo,pn
pop
sub
cmp
inc
xor
pop
jge
pop
int3
jge
or
sbb
aas
pop
and
cmp
pop
or
jmp
adcl
imul
mov
fcoml
dec
pop
mov
adc
lcall
inc
xchg
sbb
hlt
sub
lahf
pop
inc
and
cld
leave
fidivrl
sbb
fs
xor
scas
repnz
rcl
inc
sbb
cmp
adc
iret
mov
pop
sub
out
pop
stc
sti
pop
pop
mov
and
das
lock
js
fld
cld
invd
scas
leave
and
jns
pop
sti
xchg
nop
adc
cwtl
sbb
inc
lea
mov
jg
test
xchg
adc
mov
and
pop
jle
adc
dec
pop
in
jmp
aam
pop
nop
pusha
inc
dec
mov
ja
clc
sahf
stos
and
hlt
inc
add
pop
in
fldcw
jo
loope
adc
pop
fimuls
imull
adc
inc
lahf
mov
je
push
jae
or
fsub
popf
pop
add
mov
adc
addl
and
push
adc
clc
or
xor
out
test
jnp
adc
test
js
jmp
repnz
dec
mov
push
ret
inc
mov
fwait
mov
or
outsl
mov
lcall
xlat
cmp
add
imul
mov
jbe
push
mov
xchg
or
dec
rol
and
mov
mov
add
lods
repz
test
cmc
xchg
popl
mov
sbb
xor
xchg
and
in
das
push
and
arpl
lcall
ret
push
xchg
inc
std
mov
ds
or
cmc
mov
inc
pop
addb
hlt
pop
inc
xor
sahf
mov
push
dec
mov
cmc
cmp
test
mov
xor
dec
sub
dec
mov
rolb
jmp
mov
cmpsb
cmp
xchg
scas
aas
ja
mov
mov
mov
mov
mov
mov
cs
pop
pop
cmpsl
sub
std
shl
dec
insl
push
push
mov
lret
push
or
les
adc
dec
data16
mov
std
cltd
cwtl
test
push
inc
pop
dec
imul
nop
xlat
jecxz
cld
cmp
and
adc
xlat
sbb
xchg
or
sub
outsb
cwtl
ljmp
jp
jle
xchg
cld
sub
icebp
shlb
gs
lods
incl
cs
loopne
jmp
test
xlat
shlb
out
sbb
jo
std
adc
in
pushf
lahf
or
xchg
inc
mov
cmp
fdiv
daa
adc
lret
sub
jge
insl
mov
pusha
stc
test
mov
sbb
rorl
ret
dec
and
scas
jle
aaa
push
stc
mov
xlat
bound
in
dec
fcoms
adc
jge
mov
sarb
cmp
pop
jle
sbb
enter
cmc
es
mov
mov
mov
iret
pop
dec
sbb
divb
scas
mov
loopne
push
fs
dec
mov
jne
iret
fidivrs
pop
pop
push
xchg
push
jl
jnp
xchg
out
cmc
jne
aaa
xlat
iret
xor
push
pop
aaa
test
in
loop
push
xlat
push
mov
test
cmpsb
ljmp
sbb
mov
mov
sbb
mov
leave
mov
jg
bound
pop
inc
imul
out
add
cmp
xor
jne
pop
cmp
pop
dec
sahf
in
mov
adc
shll
repnz
sbb
mul
sbb
leave
daa
mov
adc
xor
mov
pop
sbb
aas
xchg
jb
mov
or
bound
mov
push
xchg
jno
cmp
push
cmpsl
cmp
adc
mov
and
adc
sub
scas
cmp
and
mov
add
dec
dec
mov
and
cltd
ss
adc
sti
xchg
faddl
cmp
add
lds
aam
jbe
bound
std
mov
xchg
lods
pop
mov
movsl
inc
pop
pushf
and
cmp
cmp
ja
and
push
les
pop
jl
mov
mov
stos
shr
pop
push
out
xchg
mov
sbb
loopne
mov
imul
xchg
in
enter
gs
outsb
insl
xchg
push
push
dec
stc
aad
lods
mov
incb
das
in
lods
dec
push
xchg
orb
lock
pop
cmp
dec
sbb
push
addr16
adc
shl
jne
inc
out
outsb
dec
sarl
mov
enter
fstl
das
repz
mov
orl
rcll
cld
dec
ds
mov
jmp
jecxz
aas
push
sbb
scas
aam
or
enter
jo
in
in
lret
push
outsl
in
pop
mov
jnp
mov
inc
iret
pop
mov
dec
cmpsb
push
inc
mov
lods
inc
jl
mov
data16
hlt
test
cmpsb
mov
mov
je
ss
sbb
pushf
sub
xor
ret
or
loopne
xor
hlt
jecxz
int3
loopne
leave
jns
or
fildll
inc
push
aad
std
jmp
add
jns
in
adcb
push
in
sub
out
xchg
and
inc
bound
lahf
shlb
cmp
adc
jns
loope
lods
cmp
add
repz
lds
shll
aam
inc
in
rol
lock
cmp
lods
push
push
idivl
xor
bnd
pop
inc
jb
mov
lock
xor
mov
xor
ljmp
cs
dec
push
cmpsl
add
pop
xlat
int
call
or
lret
daa
lahf
jl
sbb
outsl
aas
cmp
mov
movsb
faddl
sar
ds
and
push
mov
movsl
vpunpcklbw
lcall
mov
andb
add
jbe
jg
arpl
bswap
push
sbb
fnstsw
lock
ja
jl
cmp
call
stos
mov
lret
js
orl
mov
mov
jmp
lea
sbb
iret
cs
sub
lock
loopne
mov
popf
shll
mov
or
out
push
jge
mov
xchg
aas
leave
popa
xchg
and
rcll
mov
je
adc
jg
fwait
add
leave
aad
push
pop
outsl
ret
lret
or
cmp
in
mov
lret
sti
call
and
sbb
inc
adc
jns
cmp
ds
div
mulb
pusha
fs
ret
hlt
out
mov
jo
push
sub
push
cli
xchg
jl
inc
inc
and
xor
xchg
mov
mov
add
mov
jne
xor
aas
sub
cmp
arpl
xor
fs
lcall
pop
pop
or
out
nop
cmp
xor
fildl
js
mov
movsl
pop
dec
movsb
push
push
sbb
out
js
and
aas
pop
aam
or
pop
cmpsb
out
pop
rcr
sub
pop
fdivl
mov
rorb
xchg
mov
sub
test
roll
adc
cmpb
pusha
fistl
dec
pop
push
popf
push
aas
adc
add
add
bound
lods
and
push
sbb
dec
push
test
inc
shr
hlt
shll
int
lret
cmp
jb
pop
leave
lret
in
clc
ljmp
cwtl
fsubrl
cmp
dec
mov
ss
inc
fprem1
add
jbe
fs
jno
ss
mov
mov
arpl
inc
imul
jecxz
rorb
mov
lea
jae
push
xlat
mov
divb
orb
shlb
mov
inc
mov
dec
push
hlt
loope
adc
imull
xchg
iret
inc
mov
mov
sar
adc
and
jmp
inc
push
sbb
sbb
or
xchg
into
jns
push
mov
jnp
pushf
adc
pushf
mov
das
ret
cmpsb
cli
pop
or
mov
pusha
cmp
push
mov
mov
fwait
dec
scas
or
rolb
jecxz
cmc
stos
sbb
repnz
mov
xchg
cmp
mov
push
mov
cwtl
add
ja
push
ss
dec
rorb
movsb
outsb
iret
imul
in
movsl
loope
insl
adc
pop
jp
mov
sub
ljmp
xchg
xchg
mov
pcmpgtb
and
mov
nop
repz
push
outsl
xchg
jo
sub
sbb
mov
cmp
mov
mulb
in
clc
mov
imul
fistpll
pop
add
mov
add
mov
lcall
dec
pop
ret
int3
not
jp
idiv
js
out
or
icebp
xchg
sub
inc
testb
int3
mov
push
dec
repz
insl
mov
shlb
and
cld
mov
gs
ss
lret
fsubs
loop
pop
je
xor
int3
in
cmp
movsl
mov
lahf
sub
hlt
push
cmp
xchg
mov
mov
xchg
lgs
push
dec
insl
outsb
and
push
outsb
cmp
push
into
mov
mov
mov
jle
xchg
stos
mov
xchg
mov
sti
lock
push
cs
sbb
out
xchg
push
imul
loop
push
mov
fistpl
fdivl
loopne
in
in
adc
mov
adc
addr16
sub
push
mov
pop
loopne
jmp
lds
add
subl
xlat
je
pusha
cltd
pop
and
inc
imul
in
inc
and
mov
in
xchg
cmpsb
mov
and
scas
push
int3
push
or
movsl
cmpsb
fstpt
jg
les
repz
les
out
adc
les
sahf
jno
push
sub
popf
sbb
rolb
push
xor
cmc
pop
mov
cmp
add
fcoml
adc
fmull
aad
xchg
lds
pop
add
mov
inc
add
rclb
insl
xor
mov
xchg
push
stos
test
dec
adc
mov
rorl
dec
sbb
pop
adc
push
ljmp
adc
loope
inc
mov
rclb
mov
iret
dec
and
or
roll
sbb
test
jle
jp
adc
pop
daa
jnp
insl
mov
cmp
adc
movsl
lea
out
adc
addb
add
push
mov
and
xor
mov
mov
mov
push
sti
xchg
adc
enter
dec
out
fldt
pop
sub
lea
inc
lcall
cmp
aas
sub
daa
mov
mov
inc
shl
insl
push
fistpll
xchg
mov
jbe
jbe
xchg
sub
in
movsb
pop
inc
cmp
jmp
popa
adc
push
mov
fcomps
jmp
stos
addr16
repz
pop
js
adc
movq
mov
clc
jnp
shrl
enter
jo
xchg
xchg
filds
push
inc
sbb
int
fs
add
outsb
sub
inc
arpl
adc
jmp
xor
dec
cmpsl
mov
pop
or
sbb
ljmp
fbld
ffree
mov
fstpt
jmp
jecxz
push
inc
sahf
mov
or
ficoml
jge
insb
enter
scas
adc
sarl
fsubl
and
daa
cld
push
sub
stos
sub
ss
fnsaves
xchg
fidivs
push
out
fcoms
fisttpll
test
xchg
or
iret
out
enter
stc
push
dec
jmp
decb
jle
xor
fdivs
adc
stc
dec
pop
adc
jbe
movsl
sbb
mov
or
dec
mov
fiaddl
or
xchg
test
test
hlt
sbb
dec
pusha
int3
pop
insl
shl
cmp
shr
mov
out
or
jp
push
stos
mov
pop
pop
pop
ds
pop
mov
ret
xchg
jno,pt
rclb
pop
andb
scas
mov
subl
inc
loope
test
pop
aas
mov
fisttps
pushf
jns
pop
scas
or
pop
or
popf
mov
push
in
fbstp
fbld
jbe
iret
push
xchg
cld
js
or
ret
jge
push
ss
xchg
into
ret
mov
mov
les
js
mov
and
pop
pop
sub
call
xlat
sbb
mov
lahf
lock
imul
arpl
xchg
shrb
std
adc
sbb
mov
jno
xchg
repnz
dec
data16
punpckhwd
fidivl
push
push
mov
mov
pop
xlat
or
add
iret
popf
mov
shrb
icebp
incb
mov
mov
cmc
ret
enter
dec
or
stos
mov
je
sahf
dec
out
push
xlat
push
lea
popa
xor
rcl
insb
add
push
in
inc
out
stc
jno
xor
cmp
sub
lea
aas
adc
or
push
jno
adc
mov
push
add
scas
xchg
in
or
mov
fldl
xor
cmp
push
imul
push
xchg
imul
jle
jle
movsb
or
inc
cli
jno
jae
push
fdivrl
pusha
jecxz
fadd
sbb
pop
or
mov
stc
je
and
xor
sub
ficompl
or
and
mov
imul
jb
sub
sbb
lock
dec
xor
xchg
mov
dec
xchg
sub
inc
jp
stos
icebp
cmc
rcrb
sarb
cmp
add
push
clc
outsl
js
in
lret
les
cmp
mov
mov
sbb
mov
add
std
std
dec
xchg
aas
aas
out
pop
pop
cmc
icebp
imul
mov
jno
add
cli
or
add
fcomps
fsincos
push
dec
sbb
xchg
stos
test
xchg
xchg
xchg
out
or
push
js
psubsw
lock
inc
loopne
aam
jmp
cmc
je
push
and
mulb
add
inc
or
insl
shlb
add
adc
std
xor
cmpsb
jne
add
sbb
sub
pop
pop
ror
into
xchg
mov
les
sub
push
xchg
test
insb
xlat
xchg
xchg
test
or
xchg
or
dec
mov
dec
mov
stos
jp
pop
cltd
dec
lret
aad
aas
cltd
sahf
push
mov
lds
stos
pop
cld
shll
sahf
xor
stc
mov
lock
test
push
add
loop
sbb
nop
and
rcll
mov
push
inc
push
mov
insb
rol
adc
push
sbb
push
scas
jl
scas
and
stos
mov
cs
mov
xchg
testl
loop
and
sbb
aad
inc
and
shll
mov
nop
sti
xor
test
dec
sub
pop
adc
ret
lahf
adc
pop
mov
mov
movsl
dec
sub
std
xchg
dec
or
xchg
jnp
and
idivb
shll
xor
andl
and
aam
lret
jl
push
fidivl
leave
mov
pop
aam
mov
mul
inc
arpl
add
cli
pop
and
jae
in
jne
jns
lea
jle
and
mov
xchg
aam
dec
movsl
sub
add
dec
pop
cmp
mov
add
xor
add
lcall
adc
and
fdivrl
push
mov
in
sbb
test
ret
push
adc
xchg
mov
fistl
in
test
shrb
sub
outsl
push
in
sbb
aad
pop
xor
imul
add
jge
stos
bound
push
call
sub
outsl
inc
repz
push
test
adc
mov
cmpsl
and
xor
sahf
ret
xor
inc
movb
pusha
add
mov
bound
outsl
addr16
ja
xchg
add
and
xchg
sub
arpl
sbb
sbb
sbb
fwait
and
lods
dec
lahf
lods
stos
jge
mov
dec
int
push
cmpsb
or
std
repnz
pop
jmp
cmpsb
popf
sahf
sbb
cmp
mov
das
imul
pop
rcl
xchg
mov
sub
xor
push
xchg
dec
arpl
xlat
imul
jnp
enter
jbe
stc
rcr
inc
jl
stc
insb
ja
outsl
fstenv
cmp
pop
jbe
add
inc
xor
aaa
movsl
sahf
fs
jnp
xor
inc
lea
test
mov
jns
jecxz
and
in
adcb
inc
xor
pop
aaa
sti
sub
shlb
mov
loopne
into
nop
push
aas
cmp
push
mov
mov
adc
insb
push
or
rcr
dec
fiadds
sbb
push
and
fsubrs
sub
int
inc
cmp
fcompl
add
andl
jns
stos
pop
jmp
pop
mov
sbb
mov
mov
push
pop
pop
loopne,pt
jns
lods
dec
je
sbb
or
js
pop
scas
pop
fildl
mov
movsl
shlb
cmp
in
pop
lock
jp
stc
lahf
push
out
mov
hlt
mov
adc
sbb
push
cld
dec
inc
popl
test
dec
push
inc
sbbb
inc
aas
adc
fneni(8087
jge
and
sbb
cs
les
push
push
inc
jp
jl
sub
xchg
sub
cltd
repz
sbb
movsl
pop
decb
pop
ss
cmp
sbb
sbb
mov
test
mov
std
jge
orl
and
aas
mov
adc
mov
dec
dec
ret
popa
lods
lock
jge
into
lret
imul
outsb
imul
insl
sti
out
test
cwtl
fsubl
aas
xchg
sub
je
addr16
pushf
rol
into
ficompl
je
add
xchg
cmp
pop
mov
mov
cmp
test
mov
mov
movsl
lea
out
mov
bound
fstpt
andb
mov
dec
inc
push
push
popf
mov
stos
push
das
xorl
cmpl
mov
pushf
or
push
push
pop
imul
in
out
mov
push
jno
hlt
sbbb
mov
cmp
adc
inc
and
aam
cmp
sahf
adc
cmpsb
mov
fbld
mov
aas
rorl
mov
fprem
push
cmp
mov
push
xchg
sbb
xor
in
or
scas
lock
loop
scas
loopne
flds
pushf
xchg
push
cmp
jnp
sub
test
dec
xlat
daa
mulb
mov
in
sbb
lcall
scas
jnp
dec
sbb
push
pop
out
mov
add
out
add
mov
sbb
incb
mov
push
out
je
xchg
xchg
ljmp
jecxz
flds
dec
sub
stc
addb
negb
or
sub
test
rcrl
pop
sbb
in
rorb
pop
mov
pop
push
aaa
stc
adc
lods
test
shll
push
in
mov
fldcw
mov
mov
out
jmp
sub
mov
sub
jmp
out
mov
ds
ficomps
push
dec
dec
cmc
push
jmp
dec
or
xor
sbb
enter
sub
mov
jecxz
cmc
hlt
sbb
cmpsb
pop
adc
dec
sub
shrb
mov
test
push
adc
sbb
inc
aaa
repz
xor
daa
xor
pop
outsb
or
je
mov
shrb
outsb
aam
xchg
pop
cld
push
jecxz
sbb
jge
xor
jno
sub
or
inc
mov
mov
mov
ja,pt
jge
std
cli
jg
sbb
or
xchg
in
fadd
idivl
fidivl
rcl
scas
enter
lea
add
lret
sub
cmp
mov
je
addr16
add
lods
inc
in
addr16
push
mov
dec
inc
cmp
out
into
in
mov
mov
jbe
mov
or
test
fstpt
mov
jl
dec
ror
imul
xchg
ljmp
jnp
fisubl
sahf
cmp
loop
mov
mov
add
loopne
cmp
mov
pop
sub
bound
mov
jle
and
pop
enter
mov
int
into
inc
pop
iret
dec
xlat
shll
lret
push
ret
out
mov
mov
and
imul
imul
ficomps
int3
xchg
mov
sbb
call
loope
xchg
arpl
mov
sbb
leave
outsb
arpl
les
pop
cltd
pop
xchg
sub
mov
bound
mov
inc
pop
jne
xlat
ljmp
xor
cld
mov
repnz
aaa
insl
fisubrl
jmp
push
pop
jns
push
mov
inc
mov
movsb
cmpsl
out
and
lret
pop
lahf
les
adcb
dec
pop
and
iret
popf
xorl
icebp
jle
xor
test
mov
xchg
mov
addr16
sbb
sbb
dec
clc
cs
sbb
stc
or
push
lds
dec
xchg
jo
cmpsb
add
je
pushf
out
dec
aad
xchg
int3
out
mov
rcrb
mov
mov
xchg
or
xchg
lret
jg
sbbl
out
bound
jmp
lcall
scas
and
dec
sub
outsl
fwait
lret
lds
inc
inc
mov
ljmp
ljmp
mov
cmp
dec
sbb
push
cmpsl
test
incl
daa
nop
dec
movsl
adc
out
fistpl
loop
or
cld
lret
mov
mov
popa
andps
dec
push
pop
ja
pop
dec
test
dec
mov
insb
or
jp
in
sub
mov
lds
fadd
shll
inc
ss
jmp
ficoml
les
in
mov
mov
sbb
jge
les
mov
loop
inc
int
stos
pop
jns
fimull
and
adc
sub
or
adc
mov
mov
ret
jecxz
mov
ljmp
scas
aam
pop
sbb
loopne
and
cmp
sbb
adc
cld
pop
inc
mov
rcrb
inc
iret
addr16
lret
bound
xchg
out
push
repnz
clc
mov
cli
add
cltd
push
jb
pop
add
inc
fdivrl
and
lock
pop
jae
mov
pusha
xor
or
cwtl
lea
les
pop
adc
jge
je
cmp
stos
bnd
fldt
std
xor
sbb
inc
ret
mov
dec
ret
call
insb
and
fisubl
push
mov
mov
or
cmp
xor
jae
mov
flds
mov
mov
popa
jns
xor
dec
clc
jp
push
loop
mov
in
call
addb
outsb
mov
jno
jle
adc
mov
ja
adc
xchg
xor
add
mov
imul
fucomp
jl
stos
popa
sarl
out
outsl
adc
in
outsl
lea
outsb
movl
lahf
mov
outsb
mov
push
in
xor
out
cwtl
and
dec
movsb
stos
jge
xlat
xchg
cli
mov
outsl
pop
cmp
cmpl
daa
fmul
std
ds
addr16
ja
inc
data16
xchg
inc
pop
sahf
xchg
and
dec
adc
outsb
mov
std
lcall
xor
sub
mov
movq
sub
ret
pop
stc
xor
cmpsb
rorb
cmp
mov
leave
in
mov
adc
test
pop
psadbw
mull
in
jbe
pop
repz
cli
pop
cmpsl
pop
aaa
adc
push
rorl
leave
dec
dec
outsl
out
push
add
dec
ljmp
push
outsl
adc
negl
jge
adc
test
push
cmp
cmp
int3
test
mov
insl
add
aad
addr16
mov
cmp
scas
and
cmp
mov
data16
aad
iret
and
adcb
cmp
cmpsl
pushf
cmp
rcrb
dec
loopne
outsl
mov
mov
cld
jmp
stos
push
jnp
cmp
leave
repnz
divb
insb
jb
push
mov
in
push
fisubl
cwtl
push
pop
cmpsl
fisttps
cmp
out
lock
arpl
push
cmp
into
cmp
mov
mov
mov
rcll
js
mov
icebp
sbb
inc
aas
movsb
lahf
jge
ja
ljmp
push
xchg
addr16
outsl
cmc
dec
inc
lods
jmp
add
mov
xchg
mov
out
jle
roll
movsb
andl
sahf
lret
lods
add
adc
vpsllw
cltd
arpl
scas
mov
enter
cmpsl
pop
inc
lret
shrl
test
sub
mov
xchg
mov
jbe
xchg
orb
shrb
fidivs
mov
jbe
sbb
in
test
mov
add
jle
icebp
stc
lcall
outsl
jmp
cmp
imul
ds
push
lods
or
mov
mov
adc
dec
push
cli
andb
add
xor
cmp
jl
jmp
nop
sub
lea
jl
xchg
sahf
loopne
mov
test
mov
and
adc
fisubrs
pop
jns
xchg
ja
dec
pop
insl
cmp
insl
jns
stc
jle
js
push
mov
nop
sub
add
arpl
xor
ret
dec
cmc
daa
push
push
and
aaa
or
fdivl
ror
addr16
adc
cmp
xor
lret
adc
mov
and
cli
mov
call
cmp
testl
cmpsl
mov
mov
ljmp
jne
jae
sbb
iret
es
mulb
add
scas
je
cmc
js
mov
ret
sub
mov
mov
outsb
sbbl
repz
xor
shrb
push
sub
xchg
adc
mov
roll
popf
mov
mov
aaa
stc
jge
cmpsl
xchg
ss
or
add
jge
pop
enter
ror
arpl
mov
hlt
xchg
popf
xchg
push
or
mov
mov
pop
test
dec
mov
xchg
push
orb
leave
dec
sbb
sbb
pop
and
int3
out
mov
mov
xor
js
call
aam
dec
popf
scas
push
xor
xor
cmp
mov
divl
out
push
pusha
pop
in
rcr
scas
and
adcb
data16
sbb
dec
push
sbb
fbstp
ds
into
or
enter
loopne
aam
pop
loop
pop
mov
push
fcomp
inc
or
cld
jae
cmp
into
not
andb
mov
push
psubb
add
push
add
mov
sbb
sahf
rorb
loope
mov
lods
inc
mov
and
sub
es
pop
push
push
cmp
lock
push
jne
das
lods
test
test
es
fcomps
pusha
xor
hlt
pusha
cli
dec
loop
icebp
inc
mov
das
jae
xchg
cmp
add
mov
pop
and
in
pop
out
dec
adc
ss
pop
pop
stos
loop
xor
cmp
jge
sub
bound
xor
add
jno
dec
mov
insl
inc
push
outsb
int3
es
fsts
andl
dec
loopne
pusha
in
enter
add
call
or
push
mov
out
mov
js
jle
sbb
cld
cmpsl
push
sbb
lcall
or
testb
jle
jns
imul
mov
rcrb
fidivl
pusha
inc
std
xchg
das
test
push
fisubl
inc
jg
xor
dec
repz
insl
jp
push
lret
and
sbb
cmpsb
xchg
ror
shlb
mov
jmp
xchg
xor
fmuls
outsb
mov
adc
jmp
jle
cmp
sahf
mov
push
insl
les
pop
test
rcl
repz
cli
mov
cmp
fstps
inc
jmp
mov
movl
or
mov
xor
or
test
mov
mov
shll
dec
arpl
adc
test
fcomi
inc
dec
cld
mov
fs
xchg
outsl
out
cmp
push
mov
pushf
push
sahf
call
xchg
cmc
subl
dec
adc
cld
fsts
jg
test
das
ss
pop
aas
mov
mov
xchg
pop
shlb
jno
xor
dec
lods
cmc
xchg
mov
jnp
pop
mov
inc
sbb
pop
into
dec
aad
sub
ds
in
push
inc
jmp
mov
adc
sub
push
xor
push
pop
add
pop
dec
icebp
pop
xchg
push
cmp
shrb
stc
add
mov
push
inc
aad
out
jae
imul
emms
pushf
mov
mov
insl
jge
loopne
not
ja
in
sub
pop
xor
add
sub
mov
lahf
cmp
loop
mov
mov
and
inc
enter
je
sub
xor
movsb
mov
lods
inc
sub
aas
mov
lods
std
xor
dec
enter
stos
jle
cs
and
iret
lahf
jg
push
mov
dec
imul
jl
subb
cmpsb
adcl
cli
idivl
dec
sub
pop
adc
cwtl
adc
cltd
rcrl
xchg
int3
bound
cmc
sub
mov
iret
mov
or
push
sbb
leave
sbb
shll
out
out
cmp
sahf
push
pop
cmp
popf
lret
enter
mov
ss
cmpsl
push
xor
pop
mov
repnz
jae
cwtl
xchg
or
inc
inc
shrl
call
xorb
lret
cs
fisttps
pop
xchg
cmp
pop
and
jbe
mov
mov
bound
pop
stos
sbb
in
mov
cmp
shl
mov
pop
jle
mov
cmpb
jns
out
pop
pop
icebp
mov
stos
fistpll
addr16
mov
insl
xchg
inc
jne
shl
aaa
sbbl
jmp
outsb
adc
and
mov
lock
jecxz
out
xchg
rol
sbb
jno
sbb
sbb
mov
lea
mov
nop
pop
test
adc
data16
cwtl
cmpsb
add
sahf
and
push
pop
inc
stos
adc
cld
data16
pop
mov
jp
mov
lods
in
push
stos
pop
cwtl
fwait
mov
inc
sub
push
inc
pop
movsb
popa
xchg
fsubl
mov
out
and
call
insb
push
inc
out
add
cmp
add
xor
outsb
sub
fsubs
les
loope
call
lret
cli
mov
mov
push
push
test
jge
sbb
sub
pop
dec
int
test
cltd
fisttpll
xlat
pushf
inc
pushw
mov
test
jge
mov
les
orl
sub
mov
fwait
in
fcoml
inc
outsl
jecxz
or
push
dec
dec
pop
dec
not
or
xchg
jae
in
addl
in
loop
jp
xchg
xor
out
test
mov
or
insl
and
les
push
ds
mov
jne
hlt
lret
insb
andl
or
fiaddl
fs
lret
dec
push
jne
xchg
sahf
addr16
int
popa
or
mov
scas
pop
int3
lahf
mov
xor
pop
xchg
mov
mov
add
pop
in
pop
aas
cwtl
das
pop
test
loopne
jns
push
nop
cld
out
popf
cmc
clc
inc
aad
aas
xchg
cmp
pushf
addr16
mov
shll
pop
pop
jl
dec
enter
mov
cmp
cld
inc
jmp
int3
stos
push
scas
repnz
lea
mov
jne
mov
sbb
pop
pop
jg
lret
and
stos
pop
mov
lock
test
addr16
clc
out
and
aaa
xor
lods
add
stc
add
push
scas
int3
lods
or
daa
jmp
bswap
stos
mov
jo
mov
sarb
mov
fstpt
int3
clc
xor
jbe
adc
mov
ficompl
mov
xor
dec
stos
sbb
int
rclb
insl
test
or
imul
fs
push
stos
jnp
mov
daa
repz
int3
mov
loop
push
mov
mov
cmp
fimull
cmp
inc
lret
mov
jle
xor
shlb
leave
cwtl
fsub
scas
xorb
mov
fcomp
pop
icebp
sbb
dec
push
jp
sarl
test
sahf
div
inc
insb
rcll
jmp
mov
sar
arpl
push
out
loop
adc
mov
mov
cmp
icebp
dec
pushf
aam
add
mov
pop
pcmpgtd
inc
incl
mov
je
cwtl
daa
mov
or
or
cwtl
push
lret
sbb
in
mov
adc
mov
mov
inc
lret
sbb
mov
arpl
push
das
mov
mov
sub
je
std
jmp
pop
jne
popf
mov
mov
sbb
pop
movsb
pop
push
mov
mov
popf
pop
dec
inc
out
pusha
fistl
dec
mov
jle
lcall
lds
cmp
lahf
xor
out
iret
push
add
add
mov
or
daa
pop
stos
jb
and
and
xchg
cltd
sbb
and
dec
mov
ficoms
or
pop
inc
outsb
add
pop
shrb
outsb
xchg
mov
mov
push
ljmp
ficoml
hlt
call
jg
andb
mov
hlt
sbbl
lcall
pop
les
mov
mov
mov
dec
stos
push
in
std
dec
mov
dec
mov
jne
add
mov
scas
jg
dec
scas
stc
inc
int3
aad
or
push
movsl
out
cmc
stc
inc
fs
mov
mov
dec
or
and
imul
pop
sbb
jnp
inc
cmc
cmpsl
pop
sahf
mov
xchg
incb
push
mov
shll
bound
xor
mov
imul
inc
adc
cmp
stos
pop
test
xor
mov
jb
out
lock
lret
adc
push
jbe
lock
pop
popl
fcmovnbe
scas
push
add
sbb
mov
xor
addr16
ret
sti
rcr
xchg
mov
add
adc
ja
test
mov
imul
xor
dec
ret
gs
jne
sbb
jmp
xor
xchg
or
mov
push
mov
mov
and
mov
iret
aas
xchg
fisttpll
rorl
push
mov
or
pop
dec
pop
pop
jl
ret
push
jp
inc
adc
popa
scas
xchg
out
hlt
ret
dec
nop
fdivrp
test
decl
das
adc
mov
cmp
in
cs
iret
movsl
pop
push
sub
iret
aam
imulb
jmp
int
es
push
fldcw
inc
jnp
lahf
cmp
out
adc
test
ror
sbb
adc
adc
cmp
aad
movsl
rorl
mov
inc
mov
pop
bound
aam
mov
xor
cmpsb
mov
sarb
lahf
sub
out
mov
stc
mov
and
leave
pop
pop
cmp
insb
add
fisttpll
dec
push
pop
loope
das
fwait
ret
movl
test
push
movsb
lods
in
insl
fimull
xchg
dec
rcrb
out
mov
pop
and
scas
inc
adc
xor
in
push
test
push
inc
out
mov
out
int3
insl
cli
stc
pop
rorl
addr16
in
pop
das
mov
shll
sahf
lods
xlat
mov
stos
add
ror
cld
mov
lods
in
lods
test
sbb
jl
shll
mov
lret
js
aaa
sbb
and
shrb
lds
xchg
inc
scas
inc
jge
dec
cli
sub
jmp
ds
mov
mov
xchg
fdivl
outsl
call
mov
jecxz
jl
and
pop
and
stos
imul
out
outsb
add
pop
xchg
adc
pop
cmp
add
jp
adc
loop
int
psubusb
xor
test
xor
and
mov
jge
pop
adc
movsl
jecxz
nop
fwait
int3
cmp
rorl
pushf
mov
inc
lds
mov
test
fisttps
test
sbb
lahf
and
dec
mov
jb
inc
jnp
out
pushf
xor
mov
cmp
and
jne
movsl
or
xchg
xchg
test
addb
mov
sub
jbe
lock
mov
cmp
mov
in
gs
jne
mov
sub
int
dec
call
mov
jns
movsb
movsb
out
dec
jns
and
adcb
xor
mov
xlat
add
sub
mov
lock
in
sbbl
cmpsb
aam
scas
add
adc
jl
xlat
mov
pop
ror
dec
add
sbb
movl
fwait
imul
push
adc
dec
lods
and
in
lcall
out
outsb
orl
lock
jmp
jp,pn
je,pn
adc
xlat
shlb
cmpsl
fstl
mov
lahf
add
lea
jno
add
dec
out
mov
adc
das
popa
dec
or
dec
js
sbb
jmp
fdivrl
subb
pop
mov
inc
sbb
xchg
sahf
fisubl
mov
loope
stos
mov
std
xor
adcl
daa
push
in
fnstcw
fbstp
outsb
loop
popa
push
data16
jns
pop
bound
clc
negl
add
ds
ffreep
arpl
push
xchg
cmp
xor
rorb
into
ss
adc
or
dec
pop
push
pop
push
aas
movsb
fs
call
mov
and
cld
movsb
mov
mov
mov
adc
inc
add
pop
std
popf
and
mov
pop
ljmp
inc
leave
cltd
mov
mov
ret
mov
pop
xchg
call
punpcklbw
sub
movsl
sti
xor
mov
xor
push
inc
jno
sbb
mov
daa
loopne
jnp
aad
popf
push
cmp
adc
adc
fisubrl
aam
inc
mov
cmp
xchg
pop
mov
adc
jp
adc
xchg
in
jmp
jmp
test
pop
mov
in
cld
push
sub
int
pop
mov
mov
outsb
ret
jb,pn
imul
jo
out
ljmp
repnz
mov
mov
mov
or
das
cmp
sahf
test
roll
sbb
or
mov
add
nop
sub
ret
imulb
and
mov
xchg
xor
inc
cmp
inc
xor
int
scas
je
add
outsb
lahf
jae
sub
xchg
cld
dec
and
loop
jno
sti
call
cmp
test
int
cmpsb
popl
sahf
pop
sbb
or
cmp
fists
scas
out
jmp
inc
add
daa
js
adc
pop
and
sbb
add
ret
inc
out
push
or
mov
stos
mov
ds
bound
and
punpckldq
in
lods
rolb
dec
dec
jo
ss
es
adc
int3
sbb
cli
xchg
pop
je
xchg
rorl
shll
nop
and
sbb
cmp
rolb
mov
imul
xchg
adc
mov
imul
out
popa
andb
inc
sub
sar
lcall
arpl
insb
mov
adc
outsb
cmp
sbb
pop
iret
mov
dec
add
in
nop
push
test
pop
mov
ret
inc
inc
int
mov
or
rcll
pop
and
push
int
and
dec
push
jp
push
daa
xor
xchg
je
ljmp
int
pop
sub
push
mov
jle
add
adc
movsl
fisttpll
das
jecxz
testl
cmp
lret
roll
andb
out
repz
sub
jle
std
sbb
xlat
in
xchg
in
fmulp
stc
pop
dec
cmp
sub
dec
cmp
popf
fadds
dec
push
rcrl
in
test
inc
mov
jnp
imul
mov
popa
aam
cwtl
imul
dec
jae
gs
xlat
sub
push
jo
or
outsl
faddl
fcos
negb
into
cmp
das
push
test
cmp
rcrb
daa
unpcklps
in
in
cmc
add
jle
sub
sub
pop
out
je
xor
lea
sub
inc
jno
leave
mov
lcall
sub
pushf
jg
leave
in
inc
lcall
fcmovu
and
xlat
xchg
inc
in
movsl
fstpt
scas
pop
xlat
xor
and
out
test
outsl
je
jmp
mov
cmp
dec
dec
lret
cmc
sbb
gs
int3
xchg
jg
stos
sub
mov
faddl
fwait
or
jmp
xchg
leave
into
test
sub
loopne
cmp
mov
dec
aaa
call
repnz
lret
push
dec
mov
inc
sbb
and
jecxz
scas
sahf
fcompl
shlb
loope
jle
mov
and
jnp
sbb
cltd
outsl
outsb
jno
add
lret
inc
cmpl
clc
outsl
push
lret
xor
mov
xor
dec
mov
push
jmp
pop
rclb
cmp
pop
addl
and
jmp
ljmp
movsb
push
adc
mov
out
jmp
push
pop
popa
and
xor
lret
stos
jle
out
or
jno
sbbl
xchg
loop
fidivrs
cwtl
pop
mov
adc
xchg
in
inc
stc
popf
repz
fistpl
lahf
pop
in
inc
xor
negl
and
hlt
ljmp
insb
movl
sbb
sub
pop
inc
lods
lock
xlat
push
cwtl
inc
push
dec
xchg
mov
sbb
rol
jle
dec
dec
push
stc
cmp
mov
arpl
mov
cmp
sub
lahf
mov
or
cltd
fnsave
jg
dec
push
lods
sub
xor
mov
mov
mov
mov
gs
loopne
jg
adc
dec
int3
add
loope
bound
dec
fs
gs
mov
imul
in
dec
mov
mov
test
cltd
out
orl
add
mov
or
aam
cli
mov
sub
adcb
jne
stos
cld
pusha
loopne
lods
jge
pop
test
xchg
aas
jb
pop
mul
xchg
adc
xchg
push
cmpsl
lds
mov
jo
mov
adc
jp
adc
pop
dec
movsb
or
xor
mov
nop
ds
mov
sub
mov
outsl
addr16
mov
enter
xchg
mov
pop
stc
mov
into
push
leave
pop
inc
stos
lcall
fs
push
mov
jae
sbb
jl
jl
out
out
aaa
ljmp
test
mov
lods
mov
or
pop
sbb
or
ror
push
push
je
lcall
imul
jb
clc
cmc
xor
jb
outsb
xor
fucomip
sbb
pop
sti
inc
sbb
aas
push
int3
xchg
mov
adc
adc
pusha
mov
cmc
stos
jb
ret
popf
inc
lahf
mov
mov
inc
cmp
daa
incl
xor
xlat
aas
jecxz
adc
aaa
jl
jg
je
lds
xchg
ds
out
test
loop
xchg
xchg
icebp
cmp
popf
cmc
jbe
mov
cld
push
mov
mov
cmp
adc
push
xchg
adcb
or
ja
pop
cmpsb
stc
xchg
xor
mov
mov
icebp
or
mov
inc
cmp
adc
push
xor
sub
jge
cmpsb
adc
enter
pop
dec
cmp
test
pop
jecxz
cmp
out
add
xchg
aad
or
inc
mov
inc
push
xchg
lods
mov
ret
lods
jmp
test
out
pop
xor
imul
and
adc
mov
cs
sti
call
out
mov
inc
mov
inc
inc
adc
fcmovne
repz
lcall
rcll
push
dec
jne
sub
add
ds
mov
cmc
pop
imul
and
or
mov
dec
xor
mov
fnstenv
sub
ret
sbbb
lods
nop
jge
pushf
rolb
das
push
jnp
pop
pop
mov
push
in
adc
mov
out
push
adc
clc
mov
dec
mov
jb
dec
bound
push
push
xchg
and
jns
mov
scas
nop
pushf
insb
scas
incl
sahf
int
push
outsl
popf
or
mov
push
enter
int3
clc
dec
in
inc
inc
mov
dec
cmp
push
sub
pop
inc
repnz
iret
xor
js
cmp
add
popf
adc
aam
fs
mov
arpl
adc
ret
aas
div
mov
xorl
addb
adc
fdivl
or
mov
in
in
sub
cmc
repz
out
hlt
mov
jno
cmp
jp
cmpsl
movsl
lods
push
divb
or
mov
call
lcall
jbe
not
gs
ja
pop
lock
inc
dec
or
jle
pop
pop
fwait
popa
data16
ficomps
insl
pop
stc
sbb
push
insl
cmp
mov
xor
push
xchg
je
mov
lods
mul
pop
cli
mov
mov
xchg
fisttps
popa
or
adc
xchg
in
aad
dec
push
mov
xor
sbb
mov
push
jnp
sbb
lods
ss
cmp
outsb
jmp
icebp
push
inc
inc
fbld
xor
xchg
into
inc
rclb
leave
dec
or
xlat
jne
test
cmpsl
imul
inc
jbe
xchg
adc
stos
scas
addb
jne
test
dec
ljmp
fsubrl
xor
iret
and
addl
pop
insb
test
or
mov
repz
in
in
pop
mov
add
or
inc
cs
xor
jle
loope
bound
ret
dec
sbb
pop
push
call
lods
orl
xchg
fs
testb
inc
pop
in
cmp
jno
sub
outsb
ret
push
cmp
xchg
jbe
loopne
or
ja
mov
out
inc
sahf
mov
arpl
pop
std
das
xor
fdivrl
in
lods
cld
add
leave
pop
repz
dec
lods
out
fs
bound
test
adc
ss
jo
jle
sub
test
or
ja
mov
xchg
rclb
add
loope
std
jmp
push
cs
cmpsl
mov
add
into
mov
pop
mov
xor
inc
leave
xchg
into
adc
lret
inc
xchg
lds
aas
cmp
add
test
mov
xchg
xchg
ss
aas
or
pop
mov
test
fs
dec
cmp
int
mov
cmp
icebp
pop
or
jae
ljmp
sub
cmp
push
xor
cs
pop
nop
jle
add
enter
fdivl
call
or
lret
mov
lahf
mov
push
sbb
pop
leave
int
cli
daa
je
inc
jno
lcall
aaa
push
mov
mov
adc
xchg
sub
or
ja
adc
mov
push
xor
xchg
sarl
repz
fstpl
jnp
adc
push
roll
in
jge
neg
mov
lcall
imul
adc
sub
and
dec
lret
and
mov
fst
inc
push
cmp
mov
fisubl
ss
clc
outsb
mov
push
sub
dec
decl
pop
loopne
hlt
inc
sub
xlat
in
push
xor
clc
out
popa
pop
lock
fwait
insb
and
push
lods
inc
mov
cmp
sub
jge
pop
push
shrb
fbstp
cmpb
adc
fldt
jb
push
out
xlat
xchg
inc
fnstsw
test
jne
lock
mov
sbbl
cmpsb
lcall
out
fnstenv
movsb
scas
mov
xorb
aam
stos
xor
test
cli
and
arpl
shll
sarl
add
add
cvtps2pi
mov
fnstcw
cwtl
out
cltd
inc
mov
lods
dec
inc
push
clc
mov
or
inc
ljmp
int
int
push
shll
sti
jp
lcall
cmp
out
pop
add
push
add
mov
shlb
leave
inc
imul
insl
jnp
sbb
or
fmull
fbstp
jno
fdivp
mov
lods
arpl
fwait
adc
movsb
xor
movsl
rorb
addl
outsb
adc
inc
mov
popf
sbb
add
push
mov
mov
in
inc
add
shl
fimuls
iret
aaa
adc
ret
jle
jge
inc
lock
xchg
sub
leave
or
adcl
sbb
loopne
inc
fimuls
cltd
mov
loope
stos
repz
xchg
arpl
jmp
movsb
sbb
add
pop
dec
lahf
push
jge
imul
cmpb
mov
jno
jl
cmpsb
enter
scas
jl
iret
loop
cwtl
call
push
sahf
js
les
cmp
mov
xorl
scas
fdivs
and
rcl
mov
je
jb
daa
xlat
repz
lahf
xchg
adcl
cld
popa
cltd
xor
jge
cmp
dec
sbb
sub
mov
sti
xchg
mov
pop
mov
lret
or
addr16
cmpl
rclb
je
sahf
dec
sti
std
adc
mov
divb
cmp
test
out
adc
mov
sti
outsl
das
jbe
jmp
outsl
fisubrl
jmp
dec
push
jmp
xor
stos
jns
cmp
or
sbb
mov
xor
xlat
pusha
dec
sti
in
push
fimull
into
xor
adc
sub
mov
push
aas
fidivl
in
and
jne
jmp
es
shll
xchg
jno
mov
int3
shll
movsl
and
insl
ja
fs
aaa
xchg
aas
push
push
jg
movsl
adc
lcall
pop
dec
pop
push
pop
mov
dec
sbb
mov
mov
loop
and
sub
popf
int
leave
jbe
mov
test
js
daa
cmpsl
xlat
push
notl
or
adc
mov
aas
popf
dec
leave
jle
xchg
divl
andl
cmp
rcl
inc
insb
mov
repnz
mov
push
loope
pop
mov
xlat
or
dec
xor
xchg
testl
cmpsl
movsb
adc
mov
lea
mov
ljmp
mov
popa
push
cmpsl
lahf
imul
mov
in
sbb
cmpsl
out
mov
push
adc
jg
hlt
xchg
addr16
and
and
xchg
ret
addps
out
cmpsl
mov
lahf
pushf
adc
dec
add
add
mov
lds
pop
iret
or
in
int3
pop
andl
mov
and
cmpsb
sbb
and
mov
push
and
push
add
ss
movsb
push
push
and
test
jns
dec
and
add
adc
xchg
pop
or
mov
jnp
jmp
test
mov
mov
stos
fisubrs
or
repz
or
into
jmp
add
jns
jge
test
nop
pop
je
mov
and
mov
fsubs
mov
push
mov
not
jne
push
push
add
filds
hlt
and
test
mov
xchg
and
into
mov
mov
mov
stos
sub
icebp
mov
xor
mov
in
test
stos
arpl
mov
add
or
outsl
lahf
idivb
dec
rorl
pop
and
push
fldl
mov
andb
cmpsl
loopne
add
das
mov
les
mov
push
xor
xchg
and
mov
in
popa
and
jb
dec
xchg
and
sub
mov
mov
in
sti
mov
mov
xchg
add
divl
mov
jl
jns
fs
cmp
lret
es
mov
lock
and
dec
pop
int3
xor
leave
or
jg
aaa
push
repz
dec
xor
dec
and
rcrl
sub
popa
js
in
iret
sub
adc
dec
out
push
or
into
mov
push
adc
lock
xorb
xor
pop
jnp
clc
repnz
mov
mov
mov
xchg
push
xor
mov
inc
sti
pop
mov
fbld
xor
jo
decb
mov
adc
jp
mov
jne
iret
scas
ret
imul
cmpb
setp
sbb
int3
in
xlat
lds
cmp
or
jno
xchg
gs
stos
fs
mov
cs
lock
test
jecxz
and
xchg
insb
jle
subl
ljmp
rcr
or
xor
jne
mov
or
pop
cmp
inc
jno,pt
sbb
cmpsl
leave
lods
roll
ljmp
mov
xor
mov
adc
and
test
xchg
dec
leave
fdivrl
push
mov
out
sub
xchg
xchg
imul
inc
lret
dec
pop
mov
addr16
jecxz
sub
ljmp
cs
jle
pushf
push
aam
sub
mov
mov
pop
ficompl
loope
mov
fistpll
push
pop
cwtl
add
xchg
cmp
jmp
mov
sub
sbb
jge
out
test
add
pop
shll
sti
xchg
movsb
int
xchg
push
sub
in
flds
mov
or
fdivl
inc
push
popa
mov
sbb
dec
jecxz
xchg
inc
adc
mov
jmp
popf
addl
push
arpl
cltd
cmpsb
or
roll
inc
icebp
xchg
push
xchg
fbld
dec
sti
mov
push
scas
inc
pushf
add
fbld
test
jmp
mov
sub
adc
push
int3
or
mov
jg
pop
cmp
incb
leave
pushf
sub
dec
cli
and
mov
fcompl
pop
sbb
mov
xlat
mov
lds
jno
xchg
dec
cwtl
sti
repnz
mov
mov
or
pop
das
dec
cwtl
les
and
jg
ljmp
scas
cmp
mov
mov
test
insl
pop
imull
pop
aaa
sub
pop
pop
mov
add
popf
mov
inc
ret
stos
int
jne
ljmp
adc
xor
repnz
xor
sub
dec
xor
or
fists
rcll
mov
stos
in
pop
in
gs
mov
mov
jle
lock
lcall
je
out
dec
pop
jae
cmp
jbe
into
push
pop
mov
outsl
inc
xchg
std
test
sub
mov
aad
imul
jbe
add
add
inc
fidivl
fucomip
xchg
mov
xor
xor
pop
inc
jecxz
xor
jne
addr16
ret
add
add
xlat
scas
movsl
xor
lret
xor
ljmp
jno
std
and
ficomps
inc
fsubr
push
xor
sbb
out
cmc
xchg
aas
jmp
pop
ret
or
sub
add
lds
stc
jno
xor
jp
popf
fildll
dec
insb
mov
add
sub
pop
push
rcrl
sti
packssdw
and
call
outsb
stos
enter
andb
gs
mov
out
inc
mov
in
dec
or
adc
popa
js
in
adc
ja
cmp
mov
pop
pop
push
adc
outsb
aam
cwtl
push
hlt
lea
jnp
mov
cmpsl
in
adc
loop
scas
cmp
int
scas
xchg
cmp
es
int3
and
xchg
mov
rcrl
cmpb
push
js
lds
xor
and
xorb
jecxz
xlat
rep
inc
mov
pop
inc
ljmp
in
xlat
jae
ss
push
cmp
fistpll
roll
mov
xor
testl
mov
xor
imul
or
dec
addr16
out
test
push
dec
inc
sbb
stc
dec
xchg
xor
or
in
xchg
shl
add
dec
mov
jge
jbe
jle
fisubrs
sbb
xor
test
rcr
icebp
sti
push
push
roll
loopne
ss
dec
adc
icebp
mov
push
fsubs
xor
jmp
shl
pop
into
pop
xlat
xchg
sbb
sub
sbb
rclb
jp
bound
shlb
lods
dec
sub
fisubrs
ds
push
clc
flds
and
cld
jmp
push
or
and
inc
push
not
jnp
fs
addr16
jge
sub
popa
fsubs
jle,pn
lods
adc
les
cmp
sbb
xchg
aas
data16
int3
pop
xor
pop
cld
sbb
inc
das
shlb
inc
and
dec
sub
lahf
movsb
test
sti
sub
push
pop
daa
cmp
cs
leave
je
ds
inc
sbb
xchg
xor
adc
cmpsl
mov
push
inc
hlt
push
sub
out
cmpsb
in
push
dec
enter
outsl
add
xchg
imul
mov
imul
fildll
xchg
aaa
cltd
aas
stos
mov
fdivrs
movsl
les
push
xchg
test
fstl
lcall
repz
inc
test
mov
jecxz
jns
sbb
mov
cwtl
mov
imul
push
enter
jg
dec
add
push
and
mov
jnp
add
stos
cld
mov
int3
js
pop
repnz
push
aaa
adc
mov
test
adc
jle
inc
fcoms
jp
and
fwait
dec
jecxz
test
xor
push
int
push
add
push
mov
ljmp
inc
test
jns
hlt
mov
push
xchg
movsl
push
scas
jnp
push
or
insb
add
xor
fcompl
inc
push
mov
call
es
cmpsl
push
inc
sbb
lahf
fistpl
cltd
repnz
out
ret
jle
fs
aaa
or
stc
mov
loopne
xchg
add
inc
cmp
cs
sbb
test
jg
out
sbb
sub
aas
sbb
mov
pop
enter
lret
mov
mov
mov
inc
push
addr16
loope
or
repz
sbb
inc
popf
lea
mov
jne
call
mov
out
and
pop
insl
ja
loope
mov
scas
lods
push
pop
imul
mov
test
mov
arpl
pusha
push
into
pop
leave
vmovq
mov
rcll
cmp
sahf
lods
clc
sub
add
add
notl
or
clc
loopne
xchg
mov
retw
pusha
adc
mov
in
push
jne
sbb
xor
push
jo
ljmp
leave
fisttps
add
je
mov
aad
pop
jle
lods
jmp
sbb
add
push
adc
mov
js
xchg
push
xchg
and
out
dec
int3
pusha
scas
add
pushf
bound
popf
push
mov
cli
test
mov
aam
sbb
and
sbb
and
int
hlt
mov
iret
adc
lods
or
mov
jmp
lock
push
push
push
cmpsb
xchg
sbb
and
imul
jb
pushf
les
sbb
enter
cmp
sti
and
and
iret
push
dec
jmp
fwait
pop
jbe
cmp
mov
sbb
cwtl
iret
pusha
ret
dec
push
adc
mov
cmp
outsl
xchg
test
push
insb
aam
js
aad
push
cs
push
bndldx
lret
pop
add
adc
push
pop
leave
xor
cmpsb
jmp
rcr
lods
cwtl
dec
loop
std
cld
adc
and
adc
in
fdivrl
inc
inc
cwtl
adcb
fsts
dec
dec
fidivs
xchg
pop
sti
pop
xchg
jae
gs
int3
add
mov
pop
imul
les
sub
mov
lahf
cmpsl
add
fstpt
jp
mov
es
dec
inc
insb
imul
cmpsb
jg
mov
test
ja
inc
out
ja
xchg
je
xor
mov
les
or
add
mov
jo
add
decl
jnp
pop
jno
ret
mov
pop
aam
push
stos
mov
push
pop
xchg
xchg
popa
sub
push
xor
cmpsb
sbb
shrb
mov
pop
int3
push
fmuls
mov
push
pop
xchg
xor
je
aad
jg
mov
ss
pop
fmuls
fcompl
inc
test
inc
popa
jae
mov
push
out
xor
movsb
jp
mov
pop
dec
fwait
cmc
ficoms
inc
andb
shll
add
fimull
popa
lods
mov
leave
push
mov
mov
or
jnp
imull
pop
adc
cmp
cmp
nop
cmc
jge
add
test
enter
cmp
idivl
push
lods
cli
xchg
cltd
push
insb
test
aaa
shl
xchg
stos
ds
arpl
jns
and
cmp
mov
jecxz
add
cli
mov
fs
sub
xchg
or
sbb
xchg
sub
test
out
rcrb
dec
xchg
xor
dec
pop
mov
add
sbb
jg
sbb
sub
fisttpl
pop
lret
jbe
insl
push
sub
inc
add
mov
push
arpl
pushf
es
cld
fnstsw
popf
lret
insl
sti
jns
xor
mov
inc
sub
sbb
sub
jle
scas
fistl
xor
stc
xor
fidivrs
sahf
rcl
or
ficoms
dec
mov
call
push
lods
push
loope
stos
and
sub
jge
hlt
aaa
mov
ljmp
in
cmp
mov
loopne
inc
adc
mov
push
lock
xchg
fs
lock
inc
movsl
pop
cmp
jp
repz
sub
sub
in
jne
adcb
js
jnp
sub
fldcw
or
sub
notb
jle
ret
xor
js
push
jnp
adc
lods
std
sbb
push
jecxz
mov
jns
xchg
inc
sbb
pusha
arpl
or
pop
xlat
inc
and
inc
dec
repz
add
dec
popf
jae
scas
popl
aas
jecxz
ficomps
fs
mov
dec
pop
dec
sbb
sbbb
call
mov
pop
jb
jnp
test
lret
mov
push
mov
push
mov
and
jne
divl
xchg
or
sub
or
enter
fimuls
scas
jmp
jno
push
and
push
aas
inc
sar
xor
rcl
mov
lahf
mov
sub
faddp
int
and
jg
xor
add
sbb
mov
adc
jge
loop
pop
test
xchg
xor
nop
lcallw
pop
add
push
ret
loope
add
cmp
push
ss
pushf
leave
add
out
loop
or
scas
push
xchg
jg
test
mov
call
mov
xor
jle
push
enter
repnz
push
sub
mov
mov
lea
scas
in
mov
jno
jno
dec
int3
push
call
aaa
adc
shl
sub
fdivs
dec
ror
xchg
repnz
inc
popf
sahf
sub
out
push
cmp
add
arpl
jle
stc
ja
cmp
jnp
xchg
mov
iret
push
pop
push
ss
fcmovnbe
rolb
jne
jns
cmp
dec
push
and
lods
xor
sub
ja
sbbl
adc
mov
out
sub
fidivl
xor
popf
mov
pop
rclb
mov
fwait
lods
in
xchg
test
aad
and
scas
jno
mov
out
jnp
jmp
push
inc
add
loop
jmp
jle
dec
dec
lea
mov
arpl
lahf
movsb
inc
lock
or
sub
in
inc
jge
inc
cmc
mov
mov
mov
aad
ret
movsl
jnp
inc
loopne
int
ljmp
cmp
xor
incl
xchg
jo
mov
or
sahf
cmp
enter
adc
inc
xor
loop
mov
inc
jno
ret
inc
push
sbb
ret
shrl
lahf
lea
add
cmpsb
ret
jae
add
test
and
cmpl
ret
ljmp
test
pop
test
xchg
jl
aas
ds
mov
das
push
stos
xor
stos
dec
aad
sub
add
push
fs
push
hlt
pusha
push
add
fwait
and
inc
stos
jle
cmpsl
scas
xchg
jns
mov
addr16
xchg
or
cld
mov
jmp
xchg
jb
ljmp
xor
jae
mov
push
insb
or
pop
movaps
popa
mov
in
dec
imul
xor
call
aam
ja
insb
jle
fucomip
insl
push
fiaddl
fcomip
push
outsl
in
or
les
jg,pn
jo
push
inc
cmp
xor
aam
mov
out
roll
mov
outsb
cltd
dec
std
inc
addl
mov
aad
cwtl
push
push
and
mov
mov
jmp
xor
into
outsl
cmc
dec
loope
sbb
stos
inc
add
jp
subb
jg
lret
push
jg
sub
xchg
push
lret
mov
mov
and
push
mov
jge
aaa
sbb
outsl
inc
mov
lods
out
cld
lret
pop
mov
fldcw
out
xor
xchg
shr
imul
hlt
je
xlat
sbb
pop
test
pop
orl
mov
pushf
dec
push
out
stos
imul
lret
inc
test
push
push
popa
sub
sbb
aaa
xor
sbb
insl
cmpsl
jle
int
rcrb
and
jp
sbb
xor
sarb
or
fwait
push
mov
out
imul
shl
fsubrl
xchg
cmp
jo
orps
mov
jge
gs
imul
arpl
xor
mov
mov
and
cmpsb
pop
cmp
dec
pushf
xor
fwait
inc
arpl
inc
pop
pop
push
frstor
sub
pop
cmp
mov
push
lods
iret
mov
popf
inc
insl
mov
lds
xor
mov
sbb
loopne
sbb
in
movsl
jmp
sbb
daa
es
or
test
dec
out
out
sbbl
dec
adc
incl
jb
stc
test
fwait
out
xchg
clc
sbb
pop
dec
jmp
lcall
sar
xor
loope
pop
imul
into
call
leave
or
dec
mov
push
pop
xorb
jp
mov
xor
addr16
arpl
stos
add
aam
pusha
lret
pop
movsl
fcmovne
mov
xor
mov
xchg
xor
lcall
ljmp
xchg
cmp
xlat
cmp
cmp
push
jno
push
adc
dec
les
stos
outsl
and
subb
or
or
adc
add
les
push
shr
andl
jecxz
mov
jne
xchg
xchg
push
movsb
and
dec
das
and
cmp
shll
xchg
add
push
xchg
fcoml
or
out
and
mov
test
in
insl
enter
cmc
lods
fwait
dec
pop
mov
rcll
subl
loope
xchg
sbb
outsb
push
sub
mov
or
cld
shrb
push
inc
jg
lahf
iret
xor
add
movb
fsts
iret
inc
lds
or
test
ljmp
or
jno
out
leave
ja
repnz
ljmp
rclb
inc
cmp
mov
lret
xchg
loopne
cmp
cld
jo
cmpb
add
ljmp
mov
lds
cli
mov
fisttpl
push
cmp
popf
daa
and
lods
inc
mov
cmp
lret
push
push
shll
jle
data16
into
dec
movntps
or
aas
push
sub
and
into
lea
and
push
sub
lcall
lods
mov
movb
pop
pop
movsl
rol
push
xchg
fs
sbb
inc
xor
push
jg
cmp
rorb
idivl
jmp
push
push
mov
sbb
aad
and
mov
in
jg
sub
dec
sbb
je
test
loope
test
xchg
jl
movsl
xchg
js
sub
out
dec
sbb
inc
pushf
inc
sbb
test
addr16
and
std
in
fildl
sbb
jl
lds
or
cmpsl
ret
push
out
out
gs
test
out
dec
mov
fmull
mov
bound
pop
jecxz
or
mov
and
stos
add
sub
lret
enter
pushf
pop
inc
sbb
insl
std
cmp
arpl
xor
imul
pusha
imul
loop
cltd
inc
nop
push
inc
fistpl
dec
sahf
xor
cmp
xor
pop
or
jne
adc
xchg
xchg
sbb
and
xor
mov
pop
je
icebp
fsts
jecxz
outsl
out
xchg
and
fiaddl
jge
push
pop
sbb
pop
pop
cmp
out
pop
inc
cmp
lods
mov
mov
mov
cmc
xchg
mov
in
jmp
cli
inc
push
into
jns
cmp
ds
sbbb
lock
inc
aad
dec
mov
stos
jl
mov
pop
lahf
mov
jne
adc
push
and
cmp
inc
test
dec
inc
and
and
std
test
cmp
mov
leave
mov
stos
adc
jb
sub
pop
fwait
pop
out
fcomps
nop
mov
cmp
mov
xor
in
les
inc
mov
mov
les
mov
xchg
es
repnz
ljmp
shrl
out
cwtl
lods
mov
push
stc
and
aam
push
adc
popf
fstpt
shr
and
sti
mov
out
int3
ljmp
sbb
out
push
and
in
push
out
repz
mov
sub
lods
stos
xor
pop
pop
dec
mov
sbbb
sbb
mov
mov
out
ret
les
jmp
xchg
lcall
je
adc
inc
xlat
movsb
mov
mov
aad
inc
pop
mov
cli
dec
push
imul
xchg
mov
std
sbb
fcmove
inc
sbb
push
in
and
xlat
jp
xchg
insl
sbb
fs
mov
ret
xchg
sahf
addb
and
sub
mov
add
dec
gs
movsb
xchg
lea
cmp
xor
lcall
cmp
or
push
fs
cmpsl
xor
xchg
add
lcall
xor
into
aas
testb
pop
stc
xchg
out
jle
push
pop
dec
cmp
xor
loopne
popl
cmpsl
bound
pop
fs
lds
clc
cs
pusha
loopne
fcomps
jg
push
fisubl
cmpsb
test
mov
jge
cmc
push
mov
dec
xlat
pop
dec
insl
mov
pusha
xor
jae
imul
mov
xor
xlat
rcrl
out
sarl
jg
mov
adc
or
mov
scas
mov
mull
push
scas
je
loopne
test
icebp
inc
stos
jns
ss
mov
lds
mov
nop
fcmovne
insl
mov
xchg
xorb
aas
lret
std
sub
in
jle
addb
cmp
xchg
xchg
push
xchg
rcrb
xchg
inc
jle
push
inc
icebp
stos
mov
cmpsb
xchg
lret
loop
stos
dec
fs
sti
pusha
sbb
aad
cli
test
adc
ja
jmp
cmpsb
xor
das
push
pop
aad
cmp
or
add
test
sub
inc
mov
rol
pusha
fisubs
jne
sbb
shr
int3
outsl
into
imul
cmp
pop
das
clc
mov
gs
in
push
imul
scas
es
mov
into
orb
addr16
dec
inc
jbe
or
xchg
cmp
fwait
mov
jo
mov
xchg
jbe
cmp
int
fldcw
dec
inc
aam
aad
jb
repnz
sbb
xor
jle
dec
and
jnp
in
push
and
sahf
xlat
cli
loopne
pop
mov
sub
mov
aad
sbb
roll
bound
jp
sbb
call
pop
pusha
jo
filds
mov
into
sub
fdivrp
push
jg
add
jne
mov
pop
push
mov
and
xchg
mov
adc
cmp
xchg
shll
jb
scas
pop
jo
jecxz
cli
mull
cmpsl
stos
sbb
fsubrl
mov
mov
and
rep
jns
cltd
xor
xor
div
mov
dec
sbb
cmpsb
sbb
mov
mov
add
mov
sbb
pop
or
pop
or
adcb
mov
in
jge
cltd
test
mov
fs
call
mov
rclb
or
or
jmp
pop
test
mov
test
mov
fwait
sub
out
or
inc
in
imulb
roll
inc
frstor
mov
test
sub
sbbl
ds
pop
popa
inc
cmp
cmpsl
pusha
mov
pop
xchg
inc
pop
pusha
ljmp
sbb
jl
stos
into
mov
dec
ljmp
mov
lea
out
push
mov
adc
xchg
inc
and
jnp
es
test
fs
push
or
aas
jmp
xchg
and
adcb
aad
push
sbb
test
shlb
push
push
insb
fldcw
stos
xor
dec
push
daa
stos
push
sbb
pushf
pop
or
sub
popf
lret
out
imul
aad
push
adc
mov
pop
aad
aad
rclb
lea
test
mov
lds
pop
jp
xchg
insl
ja
jg
jo
xor
xchg
cltd
mov
cmc
out
outsl
xchg
mov
into
pop
addr16
ljmp
inc
or
fcomps
and
mov
andb
fwait
out
pop
and
imull
subb
dec
pop
scas
fidivl
sub
cli
mov
mov
lcall
pop
test
xchg
cmp
aam
inc
sub
roll
add
or
incb
divl
dec
xchg
xor
ds
add
in
xor
dec
aaa
aaa
mov
psrlw
mov
xor
jo
or
jp
std
jb
mov
dec
xchg
fcmove
mov
adc
push
and
addb
adc
std
mov
dec
and
xchg
iret
and
mov
fldl
daa
out
negl
jmp
and
inc
mov
mov
fildl
sub
rcrb
in
or
mov
cmp
xchg
adc
rorl
lea
inc
aas
jl
data16
lods
sub
incb
out
lahf
mov
loop
inc
push
sbb
xchg
test
push
mov
je
cld
jge
das
xchg
std
ror
or
and
mov
movsb
mov
loopne
push
jns
ret
cvtpi2ps
xchg
jp
cmp
xchg
out
mov
test
lods
imul
lcall
xchg
add
inc
dec
ret
xor
nop
mov
stc
or
icebp
mov
test
orl
push
mov
sub
dec
js
pop
scas
lea
out
pushf
outsl
xor
mov
xor
mov
jns
xor
test
je,pn
push
gs
popf
sub
add
sub
sti
cmpsl
fwait
mov
sti
gs
fiadds
daa
xchg
mov
int
lods
push
movsl
pop
sub
out
adc
cmp
cwtl
lcall
and
jbe
loopne
and
push
les
hlt
jl
dec
and
mov
lret
jbe
arpl
mov
test
mov
xor
add
fwait
movsl
das
xor
insl
insb
push
add
fcomps
lds
popa
pop
dec
xchg
lock
pushf
fmuls
icebp
inc
dec
aad
cmpsb
js
pop
insb
sarl
loope
lods
push
push
hlt
sub
or
mov
in
adc
stc
pop
loope
std
ret
in
shll
in
mov
orl
mov
xbegin
aam
ds
insl
jmp
enter
fs
insb
xchg
pop
in
int
popa
repnz
das
xor
inc
dec
and
in
dec
push
jg
xchg
mov
dec
fiaddl
mov
push
gs
aas
test
pop
mov
push
mov
cmp
movsl
rcll
dec
push
mov
mov
xorb
adc
loope
repnz
popf
xor
stos
xchg
cmpsl
aaa
aad
pop
pop
cmp
pop
push
js
xor
jmp
jo
jne
inc
pop
push
pop
ret
arpl
jbe
test
mov
cmpl
inc
loopne
insl
ret
dec
stos
jns
sbb
mov
add
rcrb
mov
sbb
jp
xor
push
push
bound
or
mov
ret
mov
add
add
test
hlt
mov
jp
out
inc
mov
mov
fsub
repz
lahf
and
lds
sub
cld
pushf
adc
sub
fcoml
and
pop
decb
and
mov
mov
aam
stos
dec
xchg
cmovl
xchg
xchg
xchg
outsl
and
cmp
jp
xchg
lcall
adc
and
int3
xchg
mov
mov
mov
insw
sbb
aad
sub
hlt
bnd
into
and
pop
inc
popa
repnz
xor
xchg
mov
mov
adc
outsl
stos
addr16
jnp
inc
iret
jmp
js
pop
stc
push
in
ja
fisttpl
enter
xor
push
pop
pop
xor
ljmp
xchg
dec
das
call
fdivrl
imul
mov
gs
and
or
mov
sar
push
daa
xchg
mov
enter
inc
cmp
pop
test
xchg
int3
cmc
cmp
push
xor
jle
add
mov
ja
outsb
in
push
arpl
xor
loope
mov
inc
filds
cmpsb
sub
pop
sbb
dec
in
movsb
jns
dec
fists
movsl
cmp
sub
xor
push
fs
xor
popf
testb
sbb
xchg
pop
or
xlat
inc
push
xchg
xchg
in
imul
scas
inc
test
pop
fdivl
mov
xor
les
scas
les
fdivs
ja
leave
mov
mov
ss
repz
lret
xchg
int
dec
pop
jae
mov
cmp
icebp
xchg
mov
xchg
cmpsl
repnz
inc
cmc
pause
mov
cli
pop
xor
sub
push
lcall
sahf
xchg
cmp
outsl
cltd
jmp
cmp
lret
cmp
out
pop
cmp
mov
jns
rolb
nop
xchg
fnstsw
lahf
neg
xchg
sub
xor
mov
xchg
adc
fs
fisubrs
xchg
or
mov
adc
ja
push
fwait
xchg
inc
push
fists
xor
ljmp
mov
hlt
leave
sub
xor
mov
xlat
frstor
inc
push
sub
scas
jle
jge
call
out
inc
and
ret
lret
in
imul
fxam
mov
pop
imul
mov
lahf
mov
int3
jno
inc
xchg
in
fidivs
int
sub
cmpsb
aaa
xor
int3
inc
pop
fdiv
addr16
inc
imul
and
inc
sub
mov
and
cs
sbb
jge
adcl
mov
repz
push
outsb
out
cwtl
cli
dec
stos
push
mov
pusha
lods
jp
mov
xchg
std
lahf
mov
out
fidivrl
xor
add
and
sub
adc
fs
inc
cmpsb
inc
out
movsl
pop
and
pop
pop
sahf
sbb
lcall
push
adc
rol
jg
push
flds
ds
jns
xorb
mov
xlat
fdivr
rclb
mov
hlt
add
pop
not
add
leave
dec
pop
lret
sbb
nop
stc
out
sbb
imul
adc
or
or
fnop
push
cwtl
sbb
aaa
jge
pop
lods
mov
into
fsubs
adc
and
test
fiaddl
mov
jg
rcrb
pop
das
shrb
jecxz
fildll
pop
repnz
out
filds
push
outsb
mov
adc
dec
fidivs
cmp
pusha
mov
fsubrl
int
pushf
imulb
jge
and
push
lcall
in
test
clc
ja
lret
fldenv
xchg
and
push
mov
push
mov
push
in
sub
mov
lcall
int3
fidivrs
mov
and
cmpsb
orl
xor
and
imul
cs
inc
sbb
xchg
cmp
jmp
sbb
out
bound
fldt
jmp
stos
push
fcmovnbe
sbb
xor
mov
inc
stos
mov
ret
addr16
xchg
pop
loop
sti
and
and
pusha
xor
pop
mov
xchg
pop
sahf
push
inc
push
push
pop
arpl
mov
add
or
inc
add
aas
cwtl
and
nop
xor
xchg
jnp
mov
mov
adc
jno
sub
fstpl
insl
xchg
ds
mov
mov
jae
out
into
aad
and
pop
dec
nop
push
fcmovnbe
sahf
mov
adc
push
jnp
cmp
scas
mov
cmp
push
adc
lock
mov
sbb
repz
or
cmpsl
jmp
pop
mov
mov
leave
data16
call
nop
xchg
sbb
or
nop
rolb
call
in
add
mov
cmp
in
xchg
sti
mov
pop
popa
mov
test
call
fcompl
xchg
add
mov
icebp
inc
xchg
ret
jmp
lcall
push
loop
mov
lahf
popf
sub
loop
stos
pop
fistpll
shrb
fs
add
aaa
mov
jg
insl
jb
inc
or
jnp
push
insb
mov
jmp
and
adc
aam
xchg
andl
test
dec
cmpsl
xchg
adc
mov
mov
push
lds
icebp
pop
ret
jo
adc
stc
ljmp
pop
and
lock
lahf
mov
aam
and
xchg
les
push
scas
stc
push
push
pop
test
pop
imulb
js
push
inc
or
push
stos
enter
stc
jbe
incb
and
xor
cmp
jno
pop
push
subl
outsl
mov
adc
stc
add
aam
notb
scas
adc
gs
jae
test
ljmp
adc
ja
add
xor
lods
pop
push
add
push
rep
push
icebp
repnz
ja
dec
adc
test
mov
fistpl
inc
cmc
je
repnz
lret
xor
add
xchg
and
leave
dec
inc
in
adc
dec
fbstp
stc
lahf
dec
sub
push
xchg
cmp
fdivrs
ss
jo
shl
or
mov
shrb
test
push
sbb
mov
xchg
push
daa
xlat
cmp
adc
add
xchg
stc
pop
jle
gs
push
outsb
xor
movsb
inc
mov
push
xchg
inc
cltd
push
dec
jmp
mov
xchg
pusha
in
cld
mov
xchg
imul
adc
out
push
das
incl
xlat
ds
insl
stos
stos
adc
repz
adc
imul
shrl
push
and
aam
adcl
lock
mov
insb
mov
jl
loop
gs
std
into
repnz
pop
cmp
cmp
or
into
insb
mov
rcrb
hlt
ret
andb
mov
das
repz
cmp
xor
in
xchg
mov
inc
mov
in
pushf
out
movsl
mov
mov
mov
rcpps
movsl
dec
jecxz
mov
fdivl
push
push
out
sub
aaa
bound
jmp
ja
pop
and
fisttps
arpl
sub
add
rcr
lcall
shll
and
jl
jmp
sahf
movsl
jb
pop
ja
out
stos
popf
fnstcw
roll
add
rorb
ss
xchg
add
mov
add
cwtl
test
imulb
mov
loopne
mov
aas
inc
sub
ja
aaa
sbb
jecxz
lods
jmp
jo
sbb
mov
xchg
xor
sub
cli
pop
push
inc
dec
mov
mov
ljmp
in
cmp
js
das
or
jno
push
cmpb
iret
aad
push
imul
rcrb
and
icebp
sub
xor
insl
notb
push
adc
out
int3
xchg
mov
adc
pop
std
mov
xor
mov
mov
push
and
push
cmp
in
sbb
mov
loope
xor
out
fdivrl
jns
mov
leave
mov
and
insb
jae
movsb
dec
out
add
add
aaa
xor
pop
sub
mov
dec
jne
insb
jl
pop
jge
in
mov
insl
pop
jmp
inc
nop
push
in
pushf
fs
xchg
sti
inc
fcom
rol
push
aad
insl
pop
rcrl
arpl
push
pop
fsub
in
movsl
in
add
loopne
adc
jg
inc
in
test
adc
mov
subl
loop
cmp
sarl
fstpl
out
lds
xchg
push
test
incl
adc
push
dec
dec
cmp
outsl
lret
sbb
faddl
testb
xlat
fs
xor
pop
and
enter
test
int
push
je
jg
inc
ljmp
xor
jnp
jp
faddl
mov
mov
je
fbld
or
and
xchg
sbb
push
sbb
outsb
push
xchg
fcomi
pop
in
push
sbbb
push
mov
mov
lcall
lock
sbb
cmp
xchg
call
or
sub
mov
add
jmp
and
fs
inc
cltd
push
xlat
or
cmp
and
or
xchg
jge
addb
repz
pop
push
fcomi
sub
movsl
pop
add
adc
test
lahf
call
xchg
out
jmp
pusha
or
push
push
negb
inc
pop
mov
push
test
push
gs
lds
dec
ds
xor
jg
xchg
jno
jmp
sub
mov
mov
mov
test
dec
imul
shrd
sti
pop
jnp
push
cmp
hlt
pop
push
fsubr
or
aas
pusha
mov
add
add
movsl
mov
mov
mov
rorb
scas
ljmp
adc
fnsave
cmp
dec
dec
shll
test
out
pushf
nop
add
mov
xchg
and
in
add
add
orb
hlt
pop
mov
popa
shl
stc
mov
fimuls
dec
popf
decl
mov
stc
mov
inc
addr16
daa
outsb
lds
pushf
push
sbb
loop
test
rolb
mov
mov
inc
jg
sarb
jecxz
dec
sbb
jns
test
jbe
mov
loop
out
cwtl
orb
push
insl
xor
cli
jl
sbb
mov
adc
add
insb
mov
jl
inc
push
sub
rcr
loopne
mov
fwait
push
dec
xchg
xlat
aas
hlt
in
test
adc
inc
pop
inc
bound
int
mov
pop
and
dec
xor
in
xor
mov
repz
push
ljmp
or
imul
daa
lds
lea
sbb
jp
mov
test
repnz
mov
pop
sub
push
sub
gs
push
push
mov
pop
mov
xchg
mov
dec
push
or
stc
xor
mov
sbb
lahf
test
nop
fcoms
inc
xor
pop
in
mov
sub
mov
clc
movsb
stos
loope
adc
mov
mov
popa
xchg
in
mov
rcrl
daa
dec
dec
negl
adc
rorb
and
mov
fidivs
mov
mov
lgdtl
jge
out
subl
lahf
push
adc
mov
arpl
popf
cmpsb
dec
adc
jmp
lods
addr16
pop
jl
imul
sbb
xor
xchg
pop
aas
inc
cmpsb
insb
imul
dec
mov
push
sahf
dec
jp
sbb
in
add
and
pop
and
sti
lret
movsb
cmp
inc
or
pop
movsl
sbb
enter
into
out
inc
adc
imul
or
sub
and
shl
xor
into
into
insb
shrl
jecxz
sbb
mov
xlat
add
sbb
xchg
push
lcall
xor
mov
pop
icebp
xor
inc
and
jl
fwait
jb
cmp
add
xchg
jmp
shll
or
inc
aam
outsl
cmpsb
hlt
pop
cltd
out
es
dec
jbe
frstor
nop
lds
sub
push
imul
mov
pop
stos
or
mul
enter
insb
sbb
adc
cwtl
cmp
mov
jge
dec
arpl
cmc
pop
out
jno
rorl
sub
sahf
push
ret
mov
arpl
jae
dec
jo
pop
pop
outsb
les
mov
ss
lret
test
insb
ret
imul
es
fsubl
bound
cld
repz
jne
in
pop
add
arpl
pushf
xchg
fisubrl
enter
sub
insl
xchg
cmp
jns
add
scas
add
sub
cmp
sub
ss
stos
dec
pushf
sbb
push
out
add
mov
lret
lcall
mov
es
in
mov
sbb
push
xchg
stos
dec
stos
out
push
in
xor
inc
orl
sti
push
adc
repz
mov
or
ja
xchg
add
outsl
add
xlat
xor
mov
cmc
jmp
leave
cmp
mov
mull
inc
lds
mov
and
push
mov
inc
hlt
flds
add
adc
lret
cmp
xor
mov
mov
jle
xor
enter
dec
outsb
shlb
push
lea
xor
mov
fisttps
rol
dec
jecxz
insl
jg
in
jne
add
jle
fnsave
and
cmp
add
or
mov
loop
jbe
adc
jecxz
test
into
sbb
fiaddl
inc
fsubrs
mov
ret
icebp
clc
in
iret
dec
out
jecxz
mov
jmp
ljmp
scas
in
or
mov
shll
push
insb
and
out
sbb
push
mov
mov
pop
sub
data16
jp
push
xlat
dec
adc
or
xchg
imul
push
out
hlt
ss
mov
fcmovbe
mov
jnp
dec
push
xor
arpl
xchg
in
rorb
cmp
sub
dec
fistl
mov
daa
fwait
leave
push
xchg
shl
rolb
arpl
cmp
orb
loop
aas
jbe
sub
pop
push
mov
pop
push
cltd
cmp
mov
fdivs
fwait
xor
insl
jns
out
lcall
push
mov
stos
adc
ficompl
loop
xor
mov
sbb
mov
roll
in
jle
je
jecxz
xor
jne
test
jecxz
add
sbb
adc
lret
pop
ja
sub
mov
sbb
test
mov
jge
mov
push
popa
dec
mov
xor
sub
cmp
mov
repnz
or
mov
mov
repnz
int3
nop
mov
dec
xchg
jno
lret
push
or
inc
mov
mov
loope
test
cmpsb
lds
subl
mov
das
cmp
mov
nop
jmp
lods
rcl
aam
and
inc
or
inc
ror
mov
inc
pop
je
or
call
daa
lea
adc
add
pop
sub
push
fcoms
inc
xor
mov
rcll
lods
pop
jb
jge
sub
ja
pop
mov
outsl
ljmp
sbb
aaa
push
push
xchg
les
xchg
test
cmpsb
popa
out
pop
xchg
addr16
loop
push
outsl
dec
sub
cmpsb
adc
sub
mov
cwtl
shlb
js
clc
fwait
shll
mov
insb
es
sub
jl
dec
mov
in
dec
push
std
sbb
test
mov
xchg
ret
push
ja
arpl
sbb
call
add
xchg
gs
push
sarb
sti
dec
jo
and
sahf
dec
dec
es
daa
nop
test
lods
nop
adc
adc
dec
lds
add
cld
xor
stos
cmc
jbe
cmp
xor
loopne
mov
ss
mov
clc
fs
into
mov
movsl
mov
mov
or
popa
xchg
pop
dec
lcall
mov
cmp
mov
pop
mov
jns
cmc
jbe
loopne
out
xchg
fisttpl
mov
addr16
and
insb
mov
out
push
and
mov
push
fwait
outsb
sbb
adc
ds
mov
fdivs
stos
stc
testl
add
xor
in
leave
push
fwait
inc
add
xchg
fisttpll
stos
push
sub
xchg
adc
cmc
cmp
lahf
shlb
das
in
jo
jne
jb
add
cmpsl
cmpsl
roll
cmp
pop
not
xor
pushf
or
stc
roll
fcmovb
mov
xor
icebp
xor
fwait
or
inc
out
xchg
adc
outsl
push
inc
push
adc
mov
mov
fisubrl
add
sahf
xchg
pop
adc
lock
add
inc
pop
or
in
cwtl
ficompl
popa
mov
das
pop
je
jbe
ret
inc
test
cmp
mov
add
push
push
lock
or
dec
rorb
add
stos
lods
cmpsb
mov
or
cltd
repnz
out
scas
mov
in
les
loop
mov
mov
mov
pusha
stos
pop
adc
pop
xchg
lcall
inc
and
mov
cmp
and
push
lret
jnp
pushf
add
adc
dec
mov
jp
inc
stos
inc
or
lahf
pop
dec
ret
dec
mov
push
xor
std
fdivrl
mov
xor
jne
icebp
pop
mov
in
shl
mov
cmpsb
and
add
imul
cmp
cmp
cmp
repz
iret
mov
sbb
push
sbb
loopne
mov
xor
push
pop
add
push
popa
fs
jl
xor
sub
or
rorl
outsb
ljmp
pushf
mov
call
inc
and
mov
sub
loopne
xchg
ja
into
test
add
pop
sbb
pop
adc
divl
stc
sub
mov
and
js
lock
sub
dec
push
push
fstps
stos
xchg
mull
popl
ja
dec
xchg
sub
out
out
ret
jbe
jg
or
push
jmp
outsb
pop
xor
cli
push
stos
adcl
int3
pushl
push
cmp
or
xchg
mov
cmp
cmp
pop
cmp
push
test
je
push
cli
testl
xor
in
notl
scas
mov
sbbb
sub
inc
leave
mov
dec
call
ret
mov
filds
sti
fdivrp
dec
lock
mov
jmp
sbb
dec
mov
inc
dec
stc
add
push
leave
dec
gs
clc
cmpsb
lret
and
and
add
ret
xor
aaa
mov
in
xchg
stos
fs
jnp
jmp
sahf
pop
push
call
movsl
repz
push
xchg
outsl
or
sub
test
push
rorb
imul
enter
scas
fwait
mov
pop
pop
sbb
dec
orl
sbb
out
mov
out
jmp
sarb
sub
in
inc
add
test
cmp
aad
call
cltd
sbb
xor
xor
jl
xchg
jae
mov
shl
push
out
dec
stc
stc
push
divb
cmpsb
dec
xor
pop
mov
outsl
xchg
or
xor
pop
ljmp
xchg
sub
inc
or
lds
jmp
data16
xchg
out
pop
ja
cmpsb
push
ja
lret
mov
mov
sti
lea
xor
icebp
xor
mov
push
or
ss
aaa
je
fcoml
adc
pusha
sbb
inc
xchg
rcr
add
pop
adc
jmp
mov
pop
shl
stos
popa
ja
xchg
cmp
xor
dec
pop
cmp
ja
outsl
jno
xor
or
mov
fwait
pushl
jns
mov
add
xchg
cmpl
inc
pushf
cmpsb
sbb
arpl
xor
sub
cmpl
xor
and
ja
neg
sub
push
or
jmp
es
mov
jne
sub
mov
adc
lahf
push
sbb
repz
std
jbe
loopne
jecxz
rcrl
test
subb
xlat
daa
call
movsl
dec
sti
pop
hlt
dec
or
cli
jl
cmc
les
js
adcb
les
mov
movsl
lret
sbbb
nop
les
test
mov
mov
in
jno
imul
mov
lret
or
mov
xchg
jg
mov
xchg
shr
pop
nop
mov
jb
imul
pusha
nop
inc
pop
sub
je
dec
sbb
and
jo
push
hlt
ljmp
test
xor
mov
jle
popa
loope
xlat
ss
jecxz
sbb
sub
push
push
stos
inc
xchg
sbb
mov
pushf
cld
xor
aas
negb
push
push
je
or
push
mov
or
mov
int3
loop
fidivrl
loopne
cltd
cld
lcall
push
or
mov
ret
in
in
insl
fdivl
sub
pop
or
aam
ljmp
sub
jecxz
movsl
mov
xor
fistl
inc
push
dec
jbe
sbb
inc
sbb
fwait
sub
lcall
inc
roll
call
push
inc
cmpsb
pop
pop
mull
sti
mov
mov
xchg
mov
stc
cli
add
cmp
gs
ljmp
test
ljmp
dec
leave
int
mov
jmp
push
and
insb
mov
loope
xlat
jmp
cmpsl
add
cmpsl
loopne
inc
pop
in
repnz
mov
and
mov
jg
aam
jl
int
dec
fcmovne
sbb
outsb
pop
jl
and
push
cmp
lcall
push
pop
mov
or
int
andl
sbb
or
sub
shrb
sbb
add
movsb
jmp
push
lss
jnp
lea
loop
inc
add
and
and
mov
xchg
xor
pop
lods
and
addl
mov
mov
test
inc
adc
or
popf
push
les
orl
int3
push
cmp
orl
popf
add
jmp
push
push
arpl
mov
sbb
out
and
inc
inc
pop
out
adc
test
call
sub
jae
rcll
xchg
mov
fcmovnu
xchg
and
xchg
xchg
insl
add
gs
inc
pop
sub
mov
dec
mov
pop
push
out
loop
outsl
call
and
sti
daa
inc
jp
fwait
cwtl
movsb
xchg
rcrb
pop
jnp
pushl
mov
xchg
inc
std
adc
imul
push
shll
test
iret
jb
fistpll
jne
je
or
out
sub
jne
jg
int
pop
in
andb
xchg
xchg
in
bnd
aam
test
inc
jecxz
or
sub
movsb
xchg
sub
loope
inc
mov
add
cmpsl
mov
andl
inc
jl
movsb
sahf
jbe
sbb
adc
mov
mov
mov
pushf
rol
addr16
and
xor
adc
adc
sti
imul
aad
mov
dec
push
cltd
ds
int
push
and
lds
sti
stc
lahf
and
fdivl
inc
adc
and
lret
mov
jno
repnz
adc
jne
cs
xchg
mov
mov
xor
adc
and
dec
xchg
xchg
inc
out
iret
mov
test
push
mov
les
fldt
cmc
iret
subb
out
insb
pusha
dec
es
ficoms
testl
lock
xchg
filds
lret
arpl
cmp
mov
or
jbe
leave
js
shrb
cmp
sub
xor
pop
cmp
das
in
sbb
add
xchg
dec
cltd
mov
out
sub
js
punpckhdq
lcall
movsbl
mov
xchg
test
pop
or
lret
inc
test
push
inc
sti
inc
mov
push
test
fs
adc
mov
in
sub
dec
jno
ret
shll
and
leave
bound
pusha
insb
xor
xchg
dec
add
xchg
mov
insb
mov
push
imul
push
sub
lods
add
pop
sti
dec
xor
lahf
cmp
outsb
mov
loope
cld
jno
movsb
sub
cmp
jl
lds
cmpsb
sub
xchg
sub
notl
shrb
addr16
push
inc
mov
cli
push
sarb
mov
pop
orb
push
ret
sbb
pop
xor
push
pop
mov
inc
rorb
mov
dec
cmp
add
and
xchg
aas
fcoml
jbe
sub
fiadds
xchg
aam
xor
and
cmc
repnz
fdivs
pusha
bound
insb
xchg
hlt
mov
jae
add
xor
sbb
in
sub
adc
jb
imul
pop
pushf
neg
andl
xor
int3
out
mov
push
idivb
mov
and
loop
stc
sub
lcall
fucom
icebp
push
mov
fadds
sbb
cmpl
sbb
sub
icebp
icebp
ds
and
add
mov
inc
sahf
dec
xchg
movsb
test
pop
fdivrs
orb
pop
ret
in
imul
stos
mov
cld
xchg
jmp
dec
xorl
test
daa
push
push
sbb
test
push
or
test
aam
or
sub
add
mov
adc
xor
fildl
pop
imul
idivb
xor
xchg
aaa
stc
push
xlat
sahf
adc
cwtl
push
int3
insl
leave
fiadds
imul
inc
jns
aam
and
and
mov
xor
jg
nop
add
repz
pop
dec
mov
loopne
repz
pop
sub
adc
lds
xchg
mov
jo
cmp
outsb
mov
cmp
aad
add
into
loope
add
lods
icebp
sbb
sbb
iret
pop
je
xchg
sbb
aas
inc
lds
sbb
int3
das
adc
scas
xlat
xchg
dec
lds
pop
out
sbb
test
js
add
adc
xchg
cmp
cmp
push
jp
stos
adc
cmp
push
sbb
push
xchg
dec
jno
lcall
add
notb
dec
add
mov
pop
xor
lods
push
add
std
and
push
sub
div
push
pop
push
ret
push
out
push
fdivl
pop
cmpsl
sahf
xchg
mov
addb
inc
out
jecxz
xor
hlt
cli
pop
xchg
cmpb
or
and
xchg
or
insl
movsb
or
xchg
test
dec
adc
or
cltd
adc
mov
lret
mov
pop
jg
xchg
adc
sbb
adc
adc
adc
xchg
inc
in
jl
mov
mov
xchg
pop
mov
ret
pop
mov
cmp
mov
fucomi
test
mov
dec
cmp
sbb
out
ljmp
xchg
fninit
inc
dec
inc
cmp
mov
inc
daa
in
test
bound
cmp
push
and
dec
cmc
aam
sub
sub
push
daa
sbb
cld
cmp
je
or
pusha
call
and
mov
pushf
jmp
daa
mov
shlb
mov
mov
cmp
add
test
adc
lock
pop
jmp
jnp
mov
pop
mov
dec
push
in
mov
das
imul
int
loop
or
add
mov
add
mov
aam
inc
subb
subb
add
dec
xchg
and
fcmovu
mov
repz
ficomps
shrb
add
lahf
aaa
pop
fidivrl
lcall
mov
cmp
add
scas
outsl
adc
adc
add
mov
xchg
xchg
cmp
frstor
mov
cld
push
pop
into
into
stc
mov
mov
mov
cltd
mov
pusha
mov
fwait
mov
mov
imul
lahf
xchg
sbb
xchg
push
and
jae
out
mov
lcall
and
adc
rolb
push
mov
sub
ljmp
pushf
inc
adcl
dec
push
sub
repnz
and
adc
sbb
aad
add
mull
ror
push
mov
mov
and
int
xchg
loop
inc
xor
sbb
jge
add
sub
sub
lds
out
or
sub
fchs
dec
sbb
cmpl
xor
pop
ret
shll
adc
and
jbe
adc
cld
jmp
insl
out
sub
jp
test
inc
add
arpl
and
aaa
hlt
sub
inc
shlb
fisubrs
addb
dec
inc
dec
loopne
mov
pop
fadds
and
sbb
cmp
xchg
xor
inc
inc
lds
addr16
cltd
sarl
test
dec
incb
call
jnp
je
mov
adc
add
pop
popa
movsl
movsb
mov
sbbl
loopne
cmp
pop
inc
adc
sub
push
cmp
repz
sbb
scas
cmp
icebp
add
and
in
adc
dec
movsl
lret
mov
mov
nop
pop
pop
in
xor
add
cmp
mov
jge
divb
cmpl
movsl
xchg
rcrl
pop
add
pop
lahf
pushf
mov
xchg
and
jle
xchg
sahf
pop
jp
sub
pop
mov
arpl
lock
mov
cli
imul
hlt
call
popa
pop
fmull
and
cmp
in
out
arpl
ljmp
jp
rcll
cwtl
cwtl
push
fcompl
sub
clc
dec
dec
jne
das
ret
push
pusha
adc
pop
cmc
cltd
ljmp
adc
xchg
mov
cmp
pop
aas
test
pop
pop
loope
cmp
test
jge
sub
mov
je
test
pop
cmp
imul
xchg
xor
scas
sub
sub
fistpll
cvtps2pd
and
jo
mov
fisubl
push
xor
xchg
pushf
push
mov
dec
sbb
ja
pop
mov
mov
mov
inc
mov
cli
fidivs
std
scas
cltd
push
jl
cmc
mov
movsl
push
std
data16
gs
fdivrl
sbb
repnz
out
push
ret
ret
movsb
and
jmp
int3
pop
push
jmp
xchg
cli
daa
dec
sub
mov
jge
pop
jmp
std
testl
mov
mov
es
mov
leave
and
ret
dec
pop
push
movsl
or
sahf
sahf
xlat
add
push
pop
mov
testb
dec
lcall
push
and
pop
clc
jbe
daa
fnsave
cmp
cmpl
repnz
push
mov
out
adc
lcall
lret
popf
dec
adc
scas
fisttps
lea
fcomps
adc
je
fcoml
iret
pop
scas
mov
pushf
inc
insb
mov
test
mov
and
pop
incl
movsl
imul
add
outsl
test
ja
mov
mov
dec
gs
loopne
out
add
in
lds
push
xorps
fiaddl
or
mov
xchg
adc
dec
jle
and
daa
push
outsl
mov
fs
push
mov
test
add
ficomps
call
sti
jo
and
vmovhps
or
jg
and
sbb
mov
popa
jle,pt
jg
ja
pop
cmp
dec
or
xorb
jae
shll
sub
dec
leave
stc
test
nop
sub
mov
fcom
push
pop
addr16
mov
cmp
inc
add
push
in
sub
aam
inc
xchg
or
call
hlt
and
inc
or
dec
jecxz
fs
mov
js
movsb
repz
cmpsb
int
movsb
sbb
xor
sahf
or
pop
stos
add
cmpsb
clc
sub
sub
sbb
add
xchg
mul
arpl
adc
sbb
mov
daa
push
inc
xlat
push
mov
negl
add
fisubl
pop
sbb
jmp
cmp
iret
dec
or
arpl
or
fucomi
in
negl
movsl
and
push
popf
xlat
je
cmp
fmul
push
cmp
fidivl
xchg
mov
mov
out
xor
mov
popa
adc
sub
pop
imul
lea
pop
mov
loop
mov
aaa
mov
sbb
sbb
clc
jecxz
xchg
cmp
std
ret
mov
in
imul
cmp
push
dec
ds
xor
popa
ret
xor
jp
mov
out
adc
jg
pop
mov
mov
and
or
stos
add
add
shll
sti
pop
imul
cmpsb
cmc
xor
scas
lret
xor
adc
adcl
mov
shrl
inc
lret
loopne
jae
ret
in
push
mov
sub
mov
jnp
imul
xlat
nop
out
leave
mov
les
push
mov
in
not
jns
mov
xchg
and
pop
insb
mov
ret
lcall
inc
lds
jp
mov
out
pusha
xor
cwtl
lea
mov
pop
xor
or
movsl
cltd
push
sub
sub
mov
dec
popf
repnz
subl
mulb
fisubs
push
aaa
lds
shr
or
add
jg
icebp
and
add
add
xlat
cmp
mov
add
stos
fs
mov
and
fidivl
fadd
ret
scas
out
out
sahf
in
adc
mov
neg
in
scas
repnz
mov
sar
mov
stos
outsb
jo
stc
or
icebp
push
cltd
jns
mov
jo
jnp
and
sbb
ja
aam
mov
cmpb
or
gs
aam
lods
jae
push
std
lret
or
push
fistps
nop
jae
test
bts
rcrb
adc
js
roll
hlt
lcall
mov
test
xor
inc
test
out
or
test
sqrtps
cwtl
xor
rolb
mov
aaa
inc
jl
ficompl
sarb
adc
lcall
inc
aas
sub
les
arpl
mov
add
mov
inc
rorb
jge
pop
push
lock
inc
fldenv
ss
adc
ja
stos
das
loope
pop
or
xchg
gs
mov
fs
fwait
and
int
in
mov
dec
cmpsb
bnd
insb
xchg
test
ret
daa
fadds
aas
lcall
or
fnstenv
sbb
mov
mov
lock
mov
sbb
imul
sub
in
sbb
inc
popf
adc
pop
cli
jns
xchg
jnp
mov
push
fwait
adcb
jecxz
rcrl
es
dec
cmpsb
xchg
xor
sar
fmul
pop
addb
imul
std
icebp
xorb
mov
mov
or
adc
sahf
fwait
pop
push
lea
jne
push
stos
xchg
lret
insl
ljmp
mov
cmp
jmp
or
adc
pop
movsl
jle
jecxz
add
and
sub
sub
rcr
inc
scas
pop
scas
jne
mov
pushf
push
data16
lods
stos
mov
pop
lock
fmuls
cltd
je
lods
inc
mov
mov
and
rcrb
pop
add
jne
xchg
loope
pop
subb
iret
mov
xor
pop
mov
mov
push
cwtl
call
loop
std
jno
pusha
nop
hlt
xlat
push
sarl
repz
inc
pop
outsl
and
stc
je
pusha
pop
repz
xor
push
lret
nop
jmp
xchg
dec
xor
outsl
addb
push
leave
xor
es
jae
xor
repnz
fldcw
mov
xchg
add
xor
jno
push
insl
inc
or
and
das
cmp
jo
jno
cmp
lods
loopne
mov
in
and
pop
xchg
mov
jns
pop
mov
xchg
or
jge
frstor
repz
or
fwait
sub
in
mov
xor
push
add
arpl
xor
mov
imull
xchg
or
cli
lds
fwait
dec
cwtl
lahf
adc
repz
xchg
jg
je
repz
cmp
jae
aaa
sub
mov
xchg
cli
js
or
test
lret
idivb
jb
jae
enter
pop
or
or
sti
scas
notl
sahf
popl
xchg
fiadds
pop
lret
push
sbb
and
add
testl
call
popa
cmp
lahf
adc
add
jge
mov
pop
shrb
loop
inc
sub
add
lock
arpl
pushf
mov
je
cmc
sar
mov
dec
out
xchg
sub
movsl
mov
sbb
xor
mov
sbb
aam
jge
xchg
sbb
cmp
xor
pop
test
or
aad
outsb
hlt
push
addb
lahf
xor
cltd
aam
jp
push
les
sbb
leave
or
adc
dec
mov
cmp
lea
rorl
dec
mov
mov
dec
testb
or
leave
inc
sbb
fisubrs
mov
arpl
lds
and
dec
xlat
mov
les
je
mov
in
lods
cmc
add
bsf
out
jl
push
xchg
gs
cmc
das
ret
insl
out
shl
push
xlat
in
gs
les
fistpll
cmp
sahf
test
scas
mov
or
ss
rorl
in
daa
lret
sbbb
xchg
pop
fisubl
mov
setg
pop
shll
scas
push
pop
and
enter
loope
pusha
inc
inc
mov
test
xchg
cs
in
pop
mov
xchg
pop
pushf
shrl
es
shll
and
jmp
outsb
push
xor
neg
hlt
out
jmp
rorb
pop
addb
pushf
out
jmp
dec
mov
loopne
push
add
mov
mov
out
loop
push
jmp
in
cmpsb
add
jg
mov
in
jl
jae
sarl
xor
xor
loop
addr16
mov
lods
mov
rorl
orl
movsl
xor
bound
mov
dec
cwtl
in
mov
aam
lds
mov
ds
idivl
pushf
inc
out
call
sub
xchg
dec
add
sbb
cmp
rclb
cwtl
mov
nop
xor
sub
add
pushf
sbb
in
lret
pop
movsb
and
outsb
mov
pop
insb
jge
mov
aad
sbb
jb
loopne
cmp
mov
sbb
lret
jne
scas
ffreep
repz
pushf
decb
clc
sbb
out
int
sti
les
loope
push
inc
and
add
clc
mov
adc
je
add
ja
mov
xor
stos
add
fwait
ss
pop
das
sysexit
ficomps
inc
sbb
mov
mov
adc
and
lret
jnp
mov
in
sub
test
dec
jge
lods
mov
push
pop
jp
dec
addb
xor
mov
cmp
mov
dec
inc
insb
push
push
mov
gs
add
daa
les
sbb
dec
or
fdivs
push
xchg
xchg
mov
or
pop
popf
orb
cmc
pop
stc
pop
sahf
sbb
dec
loopne
adc
adcl
push
sbb
nop
cltd
mov
mov
jns
shrb
mov
insb
mov
call
and
pop
sbb
aam
cmp
call
cmp
mov
mov
aas
pop
dec
hlt
or
outsl
cmp
stos
sti
lds
or
sbb
or
jp
movsb
loopne
push
push
pop
jmp
xchg
leave
sbb
lahf
pop
pop
mov
mov
fisttps
dec
mov
testl
jl
mov
adc
jns
and
xor
movsl
arpl
mov
sub
or
or
dec
data16
cs
outsb
cwtl
sti
mov
adc
test
inc
fcmovnb
inc
xchg
dec
add
inc
ljmp
sub
pop
dec
rol
inc
sti
lcall
jbe
pop
sbb
ds
dec
jnp
jmp
enter
cmp
popf
sub
ss
push
fistps
jmp
in
or
mov
inc
inc
sub
xor
mov
test
sub
mov
cmp
aaa
add
repz
xor
xlat
mov
dec
scas
push
jo
ret
insl
jo
aas
adc
test
aad
mov
pop
inc
push
adc
mov
sarb
fistps
cmc
test
adc
add
in
inc
sbb
bnd
cmp
xor
push
jno
insl
fildll
jg
cmp
jo
imul
inc
nop
mov
int
adc
out
add
xchg
test
and
pop
mov
nop
cmc
mov
repz
out
sbb
jbe
cmp
or
arpl
jae
adc
int3
andb
popa
mov
xchg
sub
lret
test
loop
dec
fdivl
dec
imul
fstpt
pop
xchg
sub
imul
xchg
mov
sub
test
lret
out
dec
loope
dec
out
xchg
cltd
scas
push
sbb
arpl
pushf
das
sbb
addb
inc
pop
nop
dec
cmp
add
lock
aaa
push
adc
dec
cwtl
fdivl
rcrl
nop
fstps
inc
jns
repz
add
xchg
aad
pusha
push
adcb
push
fldcw
mov
push
popa
pop
imul
pop
roll
jae
sub
iret
pop
sbb
xor
dec
outsb
lea
repnz
xchg
bound
mov
mull
or
pop
icebp
or
xchg
fnstenv
jnp
lods
dec
xor
icebp
mov
aas
xchg
stos
stos
adc
xor
arpl
adc
stos
movsl
pusha
stc
cmp
fucom
or
cmp
or
cmpsb
inc
mov
fmul
adc
jns
movsb
out
lods
adc
push
or
scas
inc
sarb
lea
jbe
pop
roll
add
rclb
orl
lret
cmp
jle
test
inc
dec
shlb
dec
ss
inc
inc
mov
mov
xchg
clc
rcll
add
imul
into
out
dec
fsubrp
insb
pushl
roll
inc
add
add
xchg
push
dec
imulb
test
das
cli
inc
and
daa
gs
xchg
xchg
fnstcw
ds
xor
pushf
je
or
test
int
push
sub
sbb
insb
and
cmc
mov
out
sarl
pop
and
fdivs
push
jl
xchg
scas
pop
js
pop
cmpsb
loopne
add
mov
cmp
mov
and
xchg
lahf
add
in
inc
cmpl
cmpsl
cwtl
into
pusha
pop
stc
call
xchg
andb
popf
adc
and
mov
pop
test
or
stos
xor
fldt
xchg
popa
leave
jo
leave
lock
out
cmc
sbb
xchg
add
pop
jae
sahf
dec
test
push
sub
or
cwtl
mov
xchg
loope
mov
mov
repnz
scas
mov
movsb
cmp
lret
mov
add
outsl
andb
xor
aad
pusha
cltd
mov
test
cmp
subl
jge
loopne
cmp
pop
push
ljmp
adc
sub
or
and
js
sub
inc
outsb
push
adc
jmp
inc
mov
in
add
outsb
call
xor
movsl
sbbl
clc
lahf
inc
mov
movsb
inc
jge
pop
div
fsubl
icebp
mov
dec
mov
push
pusha
bound
xor
sahf
or
repnz
inc
iret
mov
je
pop
jno
add
je
ljmp
hlt
mov
scas
push
sbb
data16
adc
mov
xor
lods
mov
inc
dec
jno
push
je
fs
pop
mov
in
push
pop
jle
je
xchg
ljmp
xchg
pop
or
push
fnsave
pushf
push
lahf
aaa
mov
dec
lods
stos
fnstsw
add
and
pop
repnz
stc
js
xor
jno
addl
sti
int3
xlat
ss
fwait
jl
repz
jo
in
cwtl
mov
lods
in
cwtl
js
or
in
push
adc
or
pop
sbb
xlat
loopne
andl
fstl
add
xchg
sbb
sub
sbb
xchg
mov
aaa
xchg
inc
adc
add
mov
pop
xchg
mov
aaa
ficoms
xor
cli
push
pop
je
and
inc
sbb
cmc
dec
daa
inc
std
adc
dec
subb
insl
push
xchg
sub
fwait
rorl
ljmp
xor
lds
jo
inc
pop
or
sahf
sbb
loope
leave
inc
fisttpl
sarb
outsb
mov
cmc
mov
outsb
mov
xor
or
push
mov
adc
cmp
js
data16
pop
aas
ret
mov
and
or
or
or
imul
int3
sub
iret
dec
xchg
clc
push
fcoms
inc
out
cwtl
int
mov
mov
mov
shr
imul
notl
adc
dec
pop
pop
test
out
rcl
lcall
fldt
pop
in
inc
sbb
sahf
fwait
mov
ret
addb
mov
lock
lahf
js
repnz
bnd
push
das
cmp
xor
jae
xor
enter
push
test
cmpsb
imul
dec
jecxz
ret
loop
mov
ror
and
cmp
insl
out
dec
xchg
add
push
nop
push
rcrl
sbb
pop
jne
dec
mov
rolb
xor
push
ja
or
cmp
rcll
mov
xlat
pushl
and
jb
movsb
mov
incb
xchg
add
dec
dec
jae
inc
dec
loop
sub
inc
js
and
repz
adc
xchg
sarb
cwtl
ret
push
inc
sbb
inc
loop
sti
mov
stos
xchg
aas
mov
xor
push
int
adc
ss
mov
inc
mov
add
push
test
mov
or
orb
loopne
jno
sbb
mov
push
out
push
jmp
mov
mov
push
lds
nop
push
jmp
and
js
pop
cltd
insb
mov
dec
jmp
test
sub
aaa
adc
push
mov
aad
xchg
pop
aas
mov
jae
idivl
and
out
xor
arpl
push
or
fisubrs
push
jecxz
ljmp
in
mov
sti
inc
jge
push
push
mov
inc
and
ret
xchg
and
stos
ljmp
bound
sahf
gs
movsb
cmpsb
inc
sbbl
inc
aam
adc
loope
std
and
sbbl
or
lods
hlt
mov
pop
jle
sub
mull
adc
jecxz
fiadds
xlat
xor
mov
mov
ss
sbb
push
pop
jae
imul
out
into
insb
and
repz
ds
lret
pop
dec
out
push
mov
mov
push
add
add
xor
mov
and
test
lds
mov
fstps
xchg
ljmp
das
movl
pop
jb
iret
add
stos
in
into
clc
stc
pop
ret
cmp
xor
pop
push
shlb
js
sbb
sbb
test
jbe
sbb
test
jl
jmp
nop
pop
jo
mov
lcall
pop
dec
adcl
sub
ss
aaa
fisubs
xor
rcll
andl
jle
lret
bound
or
push
mov
and
or
lahf
cmp
push
cld
loop
jmp
adc
daa
jnp
push
fs
cmp
sub
popa
out
arpl
mov
cmp
jb
movsl
aad
in
inc
cmp
mov
jmp
inc
loopnew
push
inc
jl
shr
jne
stc
xchg
push
les
inc
andl
push
into
inc
int3
and
pop
stc
mov
clc
adc
xor
and
icebp
cmp
sbb
bswap
pop
adc
pop
rcrb
mov
add
cld
loop
mov
xorb
push
fmuls
mov
in
sub
ljmp
stos
adc
xlat
and
leave
lods
ljmp
cmp
loop
int3
inc
mov
jmp
jmp
js
mov
sarb
je
mov
adc
mov
pop
or
mov
dec
dec
pop
pop
xor
sahf
push
stos
push
dec
mov
pop
xchg
in
addr16
fldl
out
pop
popf
hlt
mov
push
mov
and
or
pop
jecxz
mov
in
flds
loopne
mov
movsl
jl
stos
loop
mov
das
xchg
orb
mov
cwtl
jle
inc
aas
stc
sub
andnps
inc
xor
sub
addr16
popa
ja
mov
adc
mov
sub
out
movb
sarb
adc
lret
pop
mov
cwtl
pop
mov
cmpsb
jno
xor
in
ret
mov
pop
cwtl
hlt
sub
sbb
jo
dec
es
or
inc
adc
test
push
xor
lea
and
jnp
imul
jl
inc
ss
pushf
addb
test
shll
xor
mov
ss
ds
pop
fcompl
adc
clc
lds
out
jno
xchg
mov
loop
dec
leave
or
cmp
or
dec
inc
or
xor
std
pop
enter
ljmp
test
jg
xchg
popa
seta
ds
and
fsubp
pop
add
xchg
insl
xchg
and
outsl
std
lods
mov
cs
sbb
or
lea
fs
fiadds
push
jge
jns
ja
ret
dec
jl
add
rolb
sub
mov
test
jmp
rcrl
xor
ljmp
insl
push
mov
orb
rcrl
hlt
inc
push
mov
adcl
ret
insl
mov
sub
inc
dec
xchg
stos
jecxz
jno
xchg
jg
inc
pop
mov
aaa
mov
aas
adc
mov
cs
sub
pop
shlb
adc
xchg
pop
dec
mov
lea
mov
pop
xchg
pop
sti
sub
fstps
adcb
lret
mov
cmp
inc
jg
jg
mov
pop
inc
or
ret
or
cmp
sub
pop
lret
sbb
xorb
adc
jl
sbb
test
add
cmp
mov
lcall
add
fidivs
sti
or
mov
jae
mov
jnp
decb
pop
repnz
push
pminsw
add
jo
clc
movsl
push
enter
roll
sahf
sbb
outsb
adc
mov
lret
imul
mov
dec
add
lock
mov
adc
stc
dec
insl
pop
test
popa
in
or
cmpsl
or
sub
jnp
test
int
fistl
leave
sub
mov
mov
add
and
cmp
call
loopne
mov
les
jle
shr
insb
outsl
push
adc
mov
addr16
and
lahf
adc
or
mov
loope
imul
mov
test
ss
mov
pop
xor
cmpb
cmp
mov
and
push
mov
ret
pop
mov
std
dec
insl
adc
mov
adc
clc
push
daa
cwtl
mov
dec
insl
jb
popf
in
sahf
das
or
ret
adc
fdivrs
xor
push
sahf
loop
enter
fsubrp
loop
sbb
push
pop
and
fcoms
mov
pop
inc
mov
test
cmpsb
and
adc
push
push
mov
and
fs
xor
adc
fsubrl
jmp
mov
fldcw
lods
bound
int
mov
dec
shlb
xor
pop
mov
pop
push
in
enter
cmp
mov
loope
jmp
jp
push
fcoms
jne
out
sarb
lcall
test
aad
rolb
add
pop
gs
stc
leave
xchg
sub
lock
add
or
mov
fdivr
test
xchg
test
inc
inc
test
push
popl
sbb
lds
test
pop
into
sub
mov
or
or
or
fidivrl
movsb
sbb
ret
sub
or
jg
xlat
shlb
xchg
add
fnstcw
sub
jecxz
loope
arpl
jmp
jmp
test
repz
jge
inc
pop
jb,pn
popa
es
cmc
or
test
xchg
lret
pop
pop
sahf
cs
mov
xor
mov
fiadds
inc
sub
mov
dec
dec
jne
sbb
icebp
sbb
imul
inc
xchg
bound
push
cmp
mov
addr16
dec
pop
cmc
push
test
dec
lcall
out
sbb
movsb
hlt
sub
mov
jl
mov
push
jbe
inc
mov
jg
push
mov
popf
pop
lock
mov
sub
cmp
mov
int3
pop
sahf
or
lret
pop
xchg
cmc
mov
add
xlat
and
cmp
int3
out
ljmp
stos
repz
gs
mov
inc
cld
push
shrl
cld
insl
loop
in
dec
xor
sbb
adc
cltd
mov
lcall
push
push
mov
stos
cmp
dec
std
insb
test
in
push
cli
ss
cld
pop
inc
mov
adc
hlt
mov
rcrb
out
loopne
adc
dec
call
or
nop
ret
sahf
push
jns
push
ja
cmpsb
dec
xchg
iret
movsb
into
pop
je
sub
loope
xchg
add
or
imul
inc
fucomip
sti
in
popa
adc
out
mov
xchg
mov
push
mov
cmp
xchg
divb
fcmovnb
leave
xchg
push
frstor
enter
add
mov
sub
jmp
inc
ffreep
hlt
jns
or
mov
mov
rcrb
repz
xor
or
pop
out
push
sbb
push
push
sahf
shl
jl
jb
ja
cmp
or
adc
and
push
pusha
cmpsb
and
mov
xlat
fdivs
xchg
dec
lds
loop
mov
lahf
inc
lods
add
cmpl
popa
pop
mov
lods
lcall
arpl
sarb
fcmovb
mov
jp
xor
aas
sahf
jl
imul
je
xor
mov
pop
fdivr
jbe
mov
mov
and
xchg
int
jle
cwtl
push
cmpsl
arpl
aam
jle
std
fs
sbb
stos
andl
mov
test
mov
inc
mov
scas
xor
add
sub
adc
jg
std
orl
icebp
dec
sub
cmpsl
fs
lcall
jecxz
ja
mov
cmp
push
sbb
repz
push
mov
dec
pop
test
and
minps
fs
ficomps
shrb
cli
sbb
sbb
xchg
lea
aam
stos
pop
mov
ja
xchg
jp
jmp
fmuls
incb
nop
pop
sub
or
sbb
push
or
cmp
clc
xchg
or
lock
sbb
dec
stos
xlat
fldcw
mov
scas
or
push
js
aaa
in
and
fmul
lcall
xlat
sti
xchg
lds
ljmp
inc
jae
notl
in
cmp
xor
imul
das
aaa
or
arpl
insl
mov
leave
mov
push
punpckldq
sub
cli
fs
loope
xlat
xchg
inc
jnp
cmpsl
mov
and
dec
ficomps
out
in
lods
icebp
in
cwtl
push
mov
pop
mov
adc
fsub
pop
aad
inc
adc
push
pushf
adc
cmpsl
mov
repz
pop
xchg
adc
lds
aad
inc
fbstp
jl
lods
popf
pop
dec
bound
fisttpll
popa
popa
fcoml
or
sahf
mov
push
inc
push
jge
lods
addl
bound
iret
movsb
lock
icebp
push
mov
repz
popf
out
imul
xor
push
mov
aad
sahf
cmp
and
mov
cli
jmp
sarb
push
decb
mov
pusha
jb
out
out
out
paddsw
xchg
in
popa
cmpsb
or
adc
mov
lods
inc
in
lahf
and
repnz
pop
pop
push
lods
add
test
jecxz
fwait
jnp
inc
dec
add
xor
sbb
cmp
scas
cli
fistl
xchg
cmp
data16
je
aaa
or
dec
adc
push
mov
fiadds
nop
xor
test
push
adc
xlat
and
rolb
outsb
push
push
lds
fldcw
xchg
fs
bound
pop
mov
popf
mov
mov
and
loop
mov
jo
jae
adc
cld
stos
out
ss
add
icebp
inc
in
subl
arpl
push
add
and
lds
cmp
and
aad
mov
fsub
lret
jle
loop
inc
insl
xchg
je
fadds
mov
jecxz
lods
aad
ret
shll
fcomps
cmp
test
sbb
dec
fwait
dec
aam
cs
pop
movsb
dec
jae,pt
lds
leave
icebp
jo
inc
shrl
scas
add
sti
mov
decb
xchg
enter
jb
cwtl
outsb
fsubrp
dec
out
cltd
popa
ss
ffreep
popa
sub
push
stos
mov
aas
call
lock
mov
xor
scas
sub
mov
fists
test
jb
shrl
mov
mov
add
scas
scas
lods
cmp
loop
jb
out
pop
pop
cli
aaa
jle
jle
shrl
pop
popf
shl
push
dec
ljmp
hlt
int
lret
add
and
sbb
into
icebp
inc
sbb
das
push
cmp
sub
movsb
sahf
sub
call
mov
jmp
shll
and
mov
gs
dec
arpl
and
sub
xchg
pop
adc
xor
clc
mov
out
cmp
test
shrb
movsb
hlt
orl
pop
or
pop
add
cmp
outsl
loop
xchg
push
cld
loop
dec
push
insl
loope
arpl
jo
sahf
popa
rcrb
sub
or
cli
aam
cmp
xor
adc
adc
add
jo
cmp
jb
gs
scas
sbb
sbb
cmpsl
dec
push
fsincos
stc
xor
in
and
xor
sbb
sbb
movsl
ja
mov
cmp
xor
gs
cld
xchg
lods
ret
fwait
adc
insb
call
inc
scas
mov
clc
std
pop
jae
sub
fwait
scas
movsl
inc
and
out
icebp
aaa
inc
roll
sub
pop
cmpsb
outsl
into
imul
fwait
mov
xchg
not
adc
mov
mov
into
cmp
jmp
js
or
insb
jp
jmp
and
adc
inc
cmovp
dec
adc
outsl
jno
arpl
xchg
daa
nop
jecxz
dec
sbb
mov
jb
xor
mov
cli
adc
and
mov
addb
add
add
dec
push
or
mov
out
adc
add
and
mov
or
arpl
jge
fs
cmpsl
cmp
push
jnp
lret
add
push
mov
pop
subb
data16
out
or
mov
add
popf
cmp
cmp
push
push
cmc
jns
pop
in
and
orl
mov
and
and
ljmp
fisubrs
stos
mov
add
xchg
in
sbb
rol
pop
iret
cmp
movsb
xlat
scas
gs
imul
ret
roll
lods
ficoml
xor
inc
xor
xor
jp
xchg
adc
or
repnz
orl
fmul
dec
mov
leave
mov
xchg
lock
ljmp
xor
gs
jge
mov
sbb
xchg
aas
addr16
pop
cmp
inc
cli
push
cld
mov
ret
add
popf
and
pop
push
fidivl
je
mov
xor
ljmp
mov
xchg
lods
jae
or
pop
les
orl
sbb
dec
cmpsb
iret
sbb
inc
fwait
sub
xchg
dec
cmp
fdivr
cld
mov
repnz
scas
inc
cmp
adc
inc
sbb
int3
iret
add
sti
mov
jne
mov
fsubs
push
mov
insl
ljmp
loopne
imul
sbb
stos
sub
fistps
call
test
nop
jno
popf
pop
rolb
inc
mov
mov
xor
add
fisubrl
pop
add
inc
testb
dec
or
mov
jmp
mulb
or
push
mov
push
or
mov
jl
ja
popf
xchg
out
mov
ds
or
pop
bound
cs
sub
jle
mov
testb
xor
in
mov
cmpsl
cmp
data16
sub
xchg
into
ss
loop
scas
repz
out
push
add
xor
outsl
dec
add
aam
in
or
loope
subl
gs
mov
dec
popa
insb
mov
loope
sbb
pop
and
aad
mov
push
std
lahf
xchg
mov
push
fcompl
mov
aaa
or
pop
cmp
rep
mov
scas
das
mov
pop
inc
test
cli
in
sub
cli
jns
les
int
insb
mov
dec
movsl
adc
add
push
in
inc
and
scas
mov
loop
popf
mov
ja
loopne
aas
test
jne
repnz
addr16
or
repnz
jmp
loopw
adc
push
jno
push
notb
arpl
xlat
jecxz
in
cmp
test
pop
pusha
add
rcll
pop
adc
mov
loop
jmp
aad
enter
push
ljmp
dec
or
shlb
push
xor
pop
xlat
ret
adc
enter
sub
popf
idivb
add
ljmp
gs
fdivrl
add
pop
scas
stos
cmp
xchg
iret
and
cmp
inc
dec
cmp
xor
sub
sarl
sub
arpl
xchg
or
fcomip
stos
jae
and
notl
sub
enter
out
and
jns
push
iret
enter
loope
fldenv
mov
cmp
rcrb
movsl
stos
lahf
js
stos
cmp
or
in
loope
addr16
loopne
mov
iret
jnp
lods
mov
mov
and
lds
mov
ja
cmc
insb
repz
stos
lret
sbb
sub
out
push
test
sbb
or
sub
fidivl
jecxz
sbb
scas
scas
sub
jnp
addb
popf
test
lds
ret
cltd
out
pop
inc
lcall
popf
pop
xor
fdivr
lahf
cmpsl
xchg
pop
push
and
fstps
pop
ds
xchg
andl
lds
lret
andb
push
inc
ret
cmpl
cmp
lods
cpuid
aaa
test
pop
ret
test
sbb
xor
sub
push
ret
test
fnstcw
jb
repz
test
xlat
cmp
and
mov
mov
xchg
out
dec
mov
test
pushf
cltd
bound
adc
inc
scas
movsl
and
ljmp
std
setbe
repz
addb
loop
test
inc
jmp
mov
push
jge
mov
in
pop
out
shlb
mov
subl
pop
int
jno
test
imul
data16
movsl
pop
mov
xor
ljmp
loopne
test
pop
pop
imul
mov
and
in
bound
in
mov
je
pushf
int
mov
jg
cmp
inc
xorb
mov
add
aad
dec
call
pop
imul
sti
jo
pop
mov
adc
pushf
jle
aaa
mov
sub
cld
pop
jg
jns
inc
outsl
jle
or
lds
and
jno
inc
push
xor
movsb
sub
xchg
out
decl
sub
jno
inc
popa
pop
add
pop
inc
xor
push
inc
xchg
aam
lea
dec
popf
dec
pushf
pop
dec
or
xchg
cmp
js
orl
jmp
shlb
js
inc
jns
dec
inc
fimuls
pushf
gs
test
push
adc
rorl
outsl
mov
mov
fldt
loop
fistps
lret
into
stc
outsb
sti
sbb
adc
sbb
shl
lods
jle
test
sbbb
ss
xchg
int3
movsl
rolb
inc
mov
sahf
mov
inc
adc
mov
cmpsb
cmp
fbstp
xchg
mov
mov
cmp
rorl
decb
dec
cwtl
lods
clc
dec
mov
xchg
in
inc
ds
sbb
sahf
clc
mov
jmp
sub
jnp
add
fcmovne
jle
xchg
adc
mov
mov
xchg
mov
push
mov
adc
push
fldz
fdivrp
xchg
enter
mov
lods
cmpsb
dec
sahf
pusha
push
cmp
cmc
adc
rorl
pop
dec
cmp
push
sbb
and
sarb
inc
cli
sarb
repz
outsb
fists
hlt
pop
adc
leave
jp
stc
inc
sub
jge
pop
xchg
lahf
mov
icebp
jbe
inc
shlb
push
subb
popl
add
arpl
pop
mov
pop
daa
fisubrl
xchg
pop
pop
mov
fiaddl
rclb
mov
aam
mov
lods
push
xchg
adc
and
jb
pop
pushf
jge
push
out
inc
mov
jmp
inc
xlat
jbe
jle
sarl
dec
push
push
and
push
cs
imul
rorl
xchg
or
lcall
xchg
ds
jne
popa
cmp
xchg
movsl
test
pop
iret
mov
stc
or
sbb
outsl
push
movsb
es
dec
ret
enter
roll
cwtl
cmp
dec
dec
daa
enter
dec
mov
adc
jbe
sub
jne
testl
lahf
pop
or
add
andl
pop
sub
inc
std
std
and
roll
cmp
xchg
xor
js
and
scas
cmp
test
add
cmp
pop
mov
jge
in
cmp
or
and
call
iret
iret
scas
lock
xchg
repz
cmp
leave
mov
adc
les
sbb
pusha
loop
cmp
add
adc
int3
mov
out
jo
decl
inc
test
dec
adc
and
and
push
jns
mov
fwait
adc
dec
adc
adc
loope
inc
sub
mov
jne
int
xchg
shrl
nop
notb
xor
xor
cltd
pop
out
push
shll
fs
orl
loop
cli
iret
and
ljmp
cmp
mov
mov
fmuls
dec
cld
cwtl
xor
cmp
lret
call
xor
adc
jg
pop
inc
add
pop
popa
insl
dec
fcmove
or
fcoml
mov
imul
cmpsb
jge
test
or
push
mov
push
sbb
ljmp
push
cmpsl
aas
shlb
mov
push
mov
cmp
adc
inc
aam
in
repz
mov
jp
nop
add
mov
daa
iret
test
subl
fwait
lahf
out
push
movsb
pop
js
sbb
fidivrl
and
xchg
push
pop
inc
adc
pop
sbb
xchg
out
cli
add
xchg
mov
adc
int3
mov
xchg
and
gs
inc
add
xor
mov
sub
push
push
push
and
ds
movsb
sbb
sbb
jle
repnz
pop
test
cmp
das
xchg
rcrb
cmp
fildl
mov
aam
out
xchg
or
int
jl
addr16
sub
pop
adc
cmp
lea
dec
lret
add
outsl
imul
fdivs
mov
xchg
fcoml
rorl
push
inc
lret
popf
add
das
mov
push
push
pop
cmp
adc
sti
insb
stc
push
and
push
sti
movsb
test
icebp
ret
rcrl
lahf
fs
adc
mov
xor
pop
fisttpll
loope
push
in
ror
les
loopne
pop
pop
ljmp
ds
fiadds
rcrl
lahf
add
mov
add
xchg
imul
stc
mov
inc
orl
outsl
mov
sub
jmp
inc
lea
xor
ret
lods
push
test
jne
pop
aad
data16
imul
movsb
mov
pop
and
mov
mov
outsl
movsl
dec
lods
mov
cmpsl
popa
aaa
movsl
stc
jge
decb
add
clc
das
ret
andl
sbb
inc
mov
and
adc
jl
out
xchg
imul
in
out
movsb
stos
data16
loop
mov
mov
mov
jbe
loop
sbb
pop
es
sarb
jns
xor
cs
pop
mov
mov
sub
mov
in
pushf
stos
push
hlt
dec
mov
sub
inc
xor
push
sahf
adcb
mov
mov
roll
shlb
push
jnp
mov
mov
xlat
sbb
adc
jns
repz
sbbb
pop
aas
xor
inc
movsb
cmp
imul
push
cltd
dec
iret
xor
add
dec
icebp
arpl
int
inc
loopne
and
cmp
sahf
int
in
rclb
call
sub
pop
jg
ss
or
and
in
jmp
mov
sub
pop
inc
repnz
imul
scas
les
push
dec
mov
jl
data16
xchg
dec
call
es
mov
push
dec
repz
mov
loop
mov
mov
cli
xlat
push
ret
loope
sub
push
das
lods
lret
mov
pop
cmp
ret
les
xchg
call
dec
and
sub
inc
ss
jns
mov
movsl
call
or
test
xor
jge
adc
inc
movsl
and
adc
std
loopne
jp
xchg
loope
aas
repz
or
in
inc
int
dec
lea
and
adc
add
mov
movsl
jne
ffree
push
pop
sbb
or
aam
fsubrs
out
pop
hlt
mov
sub
dec
mov
cmp
out
cmc
inc
xchg
push
sbb
jo
andl
and
ret
xchg
push
mov
mov
sbb
and
lret
cwtl
jg
adc
push
adc
les
sbb
jge
sub
sti
divl
sahf
cli
sub
mov
rcrb
imul
sbb
sub
popa
aam
jge
and
mov
cmp
outsb
cmc
cmc
je
jne
ds
arpl
js
pop
and
iret
push
cmpsl
dec
mov
sub
add
loope
xchg
xorb
xorb
or
mov
dec
and
daa
mov
jg
xchg
aas
notl
or
or
pop
mov
leave
or
pop
xor
setns
fwait
xor
and
adc
xchg
dec
mov
inc
pop
pop
mov
fsubrs
or
or
push
push
out
lods
push
shll
xchg
jp
shrb
push
xor
dec
pop
in
xlat
pop
lret
in
sti
and
xor
popa
incb
mov
jo
addr16
adc
jge
out
pusha
fs
repz
or
frstor
xchg
bnd
in
inc
pop
outsl
lds
fs
movsb
mov
pusha
mov
mov
clc
stos
cli
sbb
inc
cwtl
adc
fisttpll
adc
mov
sub
mov
movsb
cmp
loopne
and
je
xor
jno
xchg
sbb
mov
cmp
idivl
cmp
fwait
mov
idivl
cwtl
push
scas
dec
mov
sub
dec
movsl
icebp
jp
jg
push
int
in
xor
jmp
arpl
sbb
sbb
iret
or
adcb
add
mov
pop
call
out
lds
sub
inc
icebp
cmp
jo
jb
cltd
sbb
dec
mov
sub
push
loop
sbb
dec
leave
outsb
xchg
push
mov
mov
jge
cs
inc
jae
inc
jb
sar
jne
mov
add
and
sti
inc
frstor
lahf
rcr
ret
je
in
mov
pop
int3
stos
or
fwait
add
sub
jmp
in
add
fsub
push
sub
xor
cmpsb
mov
push
cmp
out
xor
ljmp
stos
cmp
test
sbb
xor
add
aas
fdivl
sahf
mov
push
xor
ja
add
dec
xchg
push
sti
or
test
mov
cltd
mov
xor
or
or
fwait
sub
or
rorl
sbb
int3
ss
jle
dec
mov
dec
scas
or
pop
mov
and
mov
adc
push
stc
inc
cld
pop
cmp
mov
flds
mov
popa
xchg
into
outsb
sbb
insb
fcompl
call
data16
insl
jb
push
jne,pn
fs
scas
pop
scas
add
ret
mov
mov
pop
enter
stc
sbb
clc
fcmovu
in
icebp
jmp
push
xchg
push
cs
movl
adc
jl
fnstcw
ret
push
xor
inc
int
add
dec
inc
aas
push
sub
ljmp
mov
pushf
in
adc
jge
aaa
jo
sti
lods
add
repz
fdivr
stos
sub
in
dec
xchg
xchg
xor
sbb
nop
mov
mov
in
clc
scas
movsb
test
test
jne
mov
movsb
adc
jl
and
mov
std
mov
sub
and
pop
sbb
mov
fwait
stos
ss
adc
pop
pop
and
dec
push
add
lret
inc
push
cmp
pop
outsb
into
sbb
add
adc
movsl
cmpsb
lcall
xchg
repz
enter
movsb
inc
push
scas
push
rcrb
shrl
dec
cltd
and
push
pop
fs
mov
ja
mov
roll
sbb
pop
fdivs
shl
imul
jg
jl
cmp
inc
out
xor
jne
fisubs
out
jle
add
mov
aam
and
mov
andl
pop
add
mov
pusha
inc
cmp
cmp
ljmp
rcr
jge
adc
enter
sti
pop
push
cli
dec
or
cmpl
loope
lret
loope
add
loopne
jmp
or
pop
push
shr
sbb
push
hlt
fs
loop
mov
aaa
rorb
jge
xor
test
xchg
mov
scas
lcall
std
lea
inc
jb
enter
mulb
sbb
cmpsb
scas
pop
xor
xor
sbb
fmuls
xlat
imul
cwtl
pop
pop
nop
movsb
addr16
adc
push
mov
in
leave
jg
jo
push
push
inc
out
enter
test
inc
sub
or
and
jle
das
xchg
ljmp
fmuls
stos
adc
jnp
mov
dec
mov
jecxz
jmp
fnstsw
push
addl
das
mov
jae
data16
push
in
jnp
rcl
das
mov
push
inc
lock
or
popf
mov
dec
mov
xor
sti
sbb
mov
ret
aad
adc
test
pop
aam
xchg
pop
sahf
imul
push
cmpsl
aad
enter
sbb
call
sub
mov
xor
mov
pop
xchg
xchg
sub
xor
adc
xor
aas
popf
inc
das
rcll
push
and
popf
fs
fistps
int
leave
cltd
dec
rcrl
std
mov
sti
test
cmpsb
mov
lods
bound
xor
mov
push
fdivrs
jl
scas
sbb
loope
cld
xor
inc
rcll
cld
pop
add
cmp
inc
jecxz
sub
daa
mov
push
roll
outsb
sbb
push
and
mov
sbb
jb
mov
in
or
popl
outsb
stos
xchg
pop
mov
and
mov
and
punpcklwd
inc
mov
cmpsl
sub
lahf
xlat
pusha
add
mov
and
clc
mov
shrl
adc
xchg
and
repz
mov
jle
inc
dec
stos
faddp
mov
xor
and
push
add
mov
in
loopne
sbb
lret
out
das
movsb
enter
imul
testb
out
loop
bnd
push
cwtl
dec
pop
xchg
mov
push
adc
mov
addl
xor
les
xchg
ds
jb
int
jnp
push
aas
call
dec
and
dec
sbb
sub
adc
in
inc
loop
scas
adc
xor
mov
sub
negb
sub
int
stos
fwait
es
aam
inc
or
jecxz
add
ds
mov
std
lahf
repnz
xchg
fimull
fidivrs
shr
gs
cmp
xchg
leave
jg
out
es
jns
mov
mov
cli
stos
lcall
mov
out
std
sub
ljmp
pop
pop
ja
xor
mov
jb
adc
in
adcl
inc
sbb
jge
ljmp
adc
fdivp
mov
add
mov
int
mov
xchg
insb
cmp
mov
shlb
pop
cld
pop
insl
std
outsb
aam
stos
loop
into
test
cmp
mov
fmuls
jge
lret
cwtl
jo
cmp
jno
loope
shlb
lock
cmp
xor
or
ds
stos
iret
das
sub
and
lcall
or
bound
jge
movl
mov
gs
call
add
xchg
inc
and
pop
push
push
mov
cld
sub
lds
test
out
bound
aad
mov
shlw
jno
push
cltd
and
xchg
sbb
in
cmpsl
pop
out
scas
mov
xor
fs
dec
inc
fadds
pop
clc
xor
mov
cwtl
movsl
cmpb
xor
adc
add
add
cli
xor
xchg
mov
mov
mov
push
dec
rorl
sub
imul
dec
xor
jecxz
jns
jo
sub
jnp
ds
push
lea
mov
dec
outsl
pop
and
cli
aaa
jle
mov
or
push
in
dec
inc
jbe
lcall
out
lret
data16
rol
xor
cmp
and
sbbb
xor
or
xchg
sub
or
adc
push
xor
rsqrtps
hlt
ss
sbb
cli
out
sub
jge
inc
call
push
test
ja
jo
sahf
xchg
push
mov
pop
inc
mov
jb
fs
scas
cmp
push
jbe
call
jecxz
add
push
push
cmp
je
mov
or
and
xchg
dec
sti
lods
cwtl
lret
jge
adc
imul
xor
jae
and
mov
out
icebp
sub
gs
jge
inc
mov
shll
mov
jle
idivb
add
shrl
cmpsl
inc
mov
xor
mov
pop
or
push
jb
sub
mov
sub
sub
pop
fdivrl
xlat
mov
dec
xor
je
pushf
inc
mov
out
cmpsl
sub
xchg
pop
inc
mov
bound
in
lcall
loopne
lods
in
push
cmp
sbb
inc
or
xchg
mov
xor
js
out
lret
xchg
aam
lret
adc
sbb
cmc
or
push
dec
jne
mov
testb
xor
mov
test
rcrl
xchg
enter
jl
xor
bswap
or
sysenter
je
addr16
mov
inc
jo
cmpsb
mov
adc
rolb
xor
std
push
sbb
leave
scas
movsl
lock
es
testl
lods
ja
aad
arpl
jp
jbe
mov
cmpsb
and
in
lds
sbb
scas
in
outsl
mov
cmp
fbld
mov
mov
aaa
mov
pop
cli
xor
int3
fldl
push
std
test
mov
icebp
xorl
mov
mov
mov
mov
aad
add
mov
loope
test
cmpsl
mov
cmpsb
xor
negb
jnp
mov
enter
nop
aam
sub
icebp
sub
icebp
out
in
push
ja
xchg
sbb
sub
dec
out
mov
scas
shlb
lock
mov
fbld
sbb
xor
rcr
data16
jmp
gs
sub
sbb
cmp
ljmp
dec
push
xchg
dec
push
jbe
and
lahf
pop
in
push
cld
xor
ljmp
xchg
dec
ficoms
or
or
imul
shll
enter
loop
ret
bound
pop
mov
jecxz
je
in
push
ja
sbb
inc
bndstx
mov
dec
test
cs
and
mov
in
or
int
mov
cmp
sbb
mov
mov
xchg
mov
jae
sar
xor
mov
add
mov
int3
xchg
push
mov
mov
or
cmc
cmpsb
clc
mov
scas
cli
push
cmc
push
jae
mov
inc
scas
repnz
insl
inc
mov
sub
stos
in
and
jge
sub
in
imulb
mov
dec
bnd
dec
or
out
or
call
pop
sbb
xchg
fwait
push
aas
sbb
sbb
movsb
adc
test
sub
mov
inc
iret
mov
hlt
pop
out
adc
lahf
mov
pop
or
stc
icebp
mov
adc
jl
cmpsl
into
sub
jns
and
adc
cmp
fldenv
push
xor
cmc
lret
fsubrs
ljmp
lock
add
repnz
in
jecxz
adc
cmp
or
mov
add
xor
ljmp
sbb
sar
mov
jp
inc
out
sub
jb
and
mov
nop
fcompl
loop
jle
jecxz
cmp
xchg
fiaddl
cmp
and
jne
ljmp
jnp
mov
xchg
lret
mov
dec
incl
mov
test
mov
lahf
sbb
xchg
in
out
sub
aas
cmpsl
mov
loope
ljmp
mov
std
mov
push
fldt
stos
ja
cmpsl
rcll
xchg
cmc
orl
nop
das
push
add
and
subl
push
lahf
sahf
xchg
jg
jp
cmpsl
in
pop
fidivl
inc
arpl
pop
hlt
mov
out
or
daa
mov
xor
cmp
jp
jo
jge
or
xchg
pop
mov
lret
jg
sbb
or
pushf
cld
or
push
fldt
or
adc
mov
insb
mov
je
mov
rcll
leave
xchg
xlat
push
loope
inc
jnp
xor
dec
je
clc
into
cmpsl
dec
popa
sub
iret
jae
xor
test
inc
add
push
in
fcomip
pop
std
cli
jno
sar
mov
int3
popa
cmp
lahf
and
pop
push
clc
lods
adc
fdiv
push
mov
cmpsb
add
dec
mov
xorl
cmpsl
xor
xor
repnz
test
xor
or
pop
push
aas
imul
incl
dec
outsl
mov
repnz
jecxz
data16
pop
adc
cmp
fistps
rclb
rclb
jge
xor
mov
dec
jne
mov
or
xchg
xchg
cmp
sar
sbb
and
fwait
mov
cli
sarl
int3
mov
jp
dec
jge
mov
push
leave
repnz
into
mov
dec
adc
mov
cltd
and
arpl
in
insb
nop
push
add
fistpl
sbb
mov
jb
mov
enter
repnz
cli
popf
subb
orl
jl
sbbl
lods
movswl
fisttpl
in
out
mov
pushf
cmpsb
mov
ljmp
mov
lods
mov
in
jb
jmp
or
fadd
push
pushl
dec
and
xchg
lods
lds
test
stos
mov
shr
cmp
add
sbb
pop
gs
or
xor
inc
pop
lock
loop
int
pop
xor
mov
push
xchg
test
pop
in
sub
lcall
or
mov
inc
sahf
cmc
push
cld
nop
lea
xchg
aam
popf
divl
xchg
jp
popa
pop
cmp
arpl
lods
cli
pop
dec
mov
jno
mov
push
and
sbb
dec
mov
xchg
sub
cmp
xchg
scas
stos
cmpsb
mov
xor
daa
js
mov
sbb
xchg
add
adc
xor
leave
sar
repnz
outsb
fists
jg
jl
jnp
dec
sbb
fisubs
pop
and
sub
push
and
std
jecxz
in
push
adc
add
mov
sbb
pop
call
cmpsb
cmpsb
call
aas
or
sbb
imul
dec
into
lcall
inc
addr16
imul
jmp
mov
cs
cmp
std
mov
sbb
aad
push
xor
imul
add
loop
sub
inc
cmp
xor
icebp
popa
lods
add
repnz
aam
daa
mov
pop
dec
jmp
loop
or
jecxz
in
outsl
xchg
xchg
shlb
test
adc
push
inc
pop
popa
pop
jne
push
int
sti
pushf
loop
mov
add
sbb
sub
stos
out
cmpsl
orb
and
sub
icebp
data16
fistpl
cltd
push
dec
ss
sub
clc
lea
test
pminub
sub
repnz
dec
mov
xor
inc
sub
aam
push
dec
dec
stos
jno
sarl
ljmp
dec
mov
dec
in
insb
mov
lea
xchg
xor
dec
lods
pushf
cmp
pushf
fwait
add
stos
dec
jo
and
jb
fstpl
and
stc
or
call
stos
push
pop
adc
add
shrb
jmp
adcl
movsl
or
and
and
inc
sub
jb
mov
insb
jo
setbe
jo
xchg
mov
loopne
adc
sbb
shlb
mov
sti
pop
out
mov
out
pop
out
stc
sub
or
xchg
cmp
shlb
int3
jbe
add
mov
add
andb
push
arpl
xchg
out
mov
lds
or
mov
ror
and
insb
cli
push
add
push
push
bound
mov
pop
and
cld
push
sbb
cmp
adc
sbb
add
mov
pop
xchg
mov
dec
push
inc
arpl
lcall
enter
push
xor
loop
add
sbb
push
jo
fisubrs
aad
push
add
les
rorl
repnz
mov
pop
fmuls
pop
mov
cmp
cltd
popf
mov
bound
ficoml
jae
mov
imul
lcall
push
mov
or
arpl
fistps
jne
push
jae
addr16
mov
popf
cmpsb
cmp
dec
iret
in
mov
es
push
loopne
dec
ljmp
mov
jp
mov
out
cmpsb
or
add
or
dec
repz
int3
into
fs
lret
pop
addr16
out
mov
insl
adc
pop
mov
shl
frstor
jb
push
add
icebp
jmp
insw
neg
xor
dec
dec
and
sub
mov
push
lods
mov
es
or
add
leave
rorl
dec
ds
mov
add
jle
cmc
dec
inc
in
iret
push
cmp
add
add
and
jb
call
push
jmp
pop
arpl
xor
mov
push
imul
add
jb
mov
test
stos
out
popf
mov
pop
xlat
dec
inc
in
push
push
insl
push
nopl
test
adc
pop
in
or
addb
sub
and
or
push
xchg
mov
xlat
dec
and
arpl
fs
std
mov
call
xchg
sub
mulb
inc
xchg
mov
ds
gs
clts
stos
lahf
mov
imul
in
sub
mov
sbb
dec
pop
addr16
xchg
jns
stc
xor
and
arpl
inc
dec
outsl
fcoml
xchg
pop
xchg
faddl
incl
pop
push
fiaddl
cmp
in
xor
popf
mov
pop
mull
mov
pop
notl
adc
fistps
xchg
mov
jge
in
xchg
lock
pop
outsl
cmp
jae
ds
jge
lods
out
mov
icebp
gs
sahf
xor
lods
inc
sub
rorl
and
sbb
adc
fsubl
xchg
sbb
mov
mov
mov
mov
aam
rcll
in
xchg
daa
xchg
or
xlat
lock
add
jmp
dec
ds
and
vsubpd
fisubrl
push
outsb
add
notl
cmpsb
es
cwtl
loopne
aad
xchg
lret
mov
fiadds
in
mov
or
mov
aas
outsl
adc
mov
cmpsl
push
negl
jp
cmp
xchg
mov
shll
cmp
add
push
js
jne
stc
ret
xor
mov
out
mov
cwtl
sub
lea
in
pop
push
test
gs
push
jmp
or
and
and
xlat
lret
das
pop
divb
and
ljmp
shll
out
imull
jmp
xor
or
xor
les
outsl
js
leave
loope
call
gs
jge
ljmp
sub
in
mov
cmc
xor
sbb
dec
enter
xchg
cmpsb
aam
daa
xchg
dec
adc
scas
fcmovbe
mov
fiadds
cli
mov
shrl
push
iret
xor
fldt
dec
ret
jp
js
dec
cmpxchg
rcl
std
pushw
lcall
nop
mov
sbb
dec
ficomps
mov
add
mov
jbe
jb
inc
lahf
add
dec
jle
push
mov
jo
mov
pop
ret
mov
pop
and
and
pop
test
and
sub
out
dec
sub
rcl
mov
sbb
test
jns
mov
cwtl
arpl
lret
jl
and
aam
dec
notl
cmp
xchg
xor
jo
stos
jne
sub
das
or
add
popa
sbbl
push
outsb
call
rcll
lods
and
add
jmp
sbb
xchg
ss
xchg
roll
xor
cli
push
out
aad
or
mov
add
push
add
pop
cmc
sbb
xor
repnz
es
bound
jmp
pop
jmp
pop
mov
cwtl
pushf
aas
movsb
or
mov
or
sbb
repz
pop
xchg
insl
push
pop
ds
shrb
xchg
xchg
inc
xchg
or
inc
xchg
data16
jbe
dec
dec
sahf
add
xchg
dec
mov
xchg
scas
lcall
push
aad
loop
inc
xchg
push
lea
mov
push
sbb
ljmp
lret
mov
pop
fdivl
xor
test
shl
cwtl
enter
sub
out
jbe
sarb
sbb
pop
sub
inc
jp
add
jp
cmpsl
movsl
push
shrl
push
cli
fildl
mov
xlat
xchg
aam
adc
out
js
mov
jmp
push
out
es
xor
add
addb
push
dec
jl
and
cmpsl
mov
sub
pushf
call
mov
stos
cmp
dec
pop
insl
aad
nop
jb
pushf
mov
shll
xlat
popa
outsl
sub
mov
mov
push
fwait
mov
inc
mov
int3
ss
push
push
jle
int
mov
loop
and
push
dec
jbe
xchg
out
inc
adc
push
mov
mov
scas
push
stos
sub
push
pop
jb
jne
inc
aas
mov
sub
outsl
cmp
repz
dec
filds
imul
add
mov
dec
lret
jnp
push
pusha
pop
jmp
pusha
std
or
imul
mov
scas
and
cld
inc
or
mov
bound
lods
pop
mov
and
inc
gs
lahf
faddl
orb
es
mov
je
shll
js
cmp
mov
sbb
xorl
inc
leave
jno
dec
cltd
daa
jnp
lods
outsl
shlb
les
ljmp
mov
sub
push
xchg
subl
divb
std
push
dec
push
cwtl
addl
sub
cwtl
xor
mov
mov
ret
dec
and
scas
push
repnz
and
stc
inc
sbb
inc
adc
and
jmp
jno
mov
out
lret
xchg
jne
fstl
xor
les
sti
jmp
aam
fcoms
pop
ja
in
lods
gs
mov
jl
fldt
ret
mov
adc
cmpsl
pop
decl
test
pop
ja
dec
and
stos
into
in
jge
das
cwtl
mov
into
xrelease
repnz
enter
cmp
push
ja
mov
fcmovnb
pusha
mov
in
xchg
notl
in
aad
cltd
and
xchg
mov
popf
mov
cmp
add
jecxz,pn
jecxz
lea
jbe
adc
bound
sub
dec
or
or
into
sub
rorb
adc
mov
inc
cmp
jo
test
inc
rcl
and
push
push
xchg
xchg
fisubrs
xor
xchg
mov
adc
push
mov
push
mov
loopne
fcmovnbe
cli
jp
ja
jge
shrb
cltd
test
sub
addl
subl
out
mov
and
xor
cmpsl
adc
push
int3
mov
popa
scas
inc
sti
ljmp
push
fstps
mov
xlat
dec
mov
sub
or
xorl
pop
pop
popf
inc
movsl
cmp
fiadds
add
xchg
lahf
test
scas
sub
add
fists
xlat
cmp
jmp
sbb
xor
dec
stos
add
mov
adc
gs
mov
adc
mov
pop
loop
xor
mov
hlt
push
inc
mov
cld
mov
ss
jg
xchg
or
add
add
add
dec
imul
int
sub
lret
adc
xor
cltd
jnp
iret
ljmp
cmc
xchg
outsb
loopne
ret
mov
inc
xchg
and
push
or
push
nop
push
dec
test
adc
sub
mov
daa
and
je
add
repnz
cltd
inc
mov
or
inc
loopne
pop
mov
inc
testl
divb
sti
mull
scas
jb
fs
incl
iret
mov
notb
push
popf
stos
mov
fnsave
mov
jae
jbe
in
mov
add
mov
nop
aam
add
dec
sub
xchg
cltd
out
out
pop
mov
pop
call
xor
fistps
mov
cmp
loop
rcrb
iret
mov
sub
sbb
xor
cmp
sbb
popf
jb
add
sub
lea
mov
cltd
into
cltd
mov
mov
lods
jno
enter
gs
push
mov
fnstsw
fs
mov
add
pop
std
pop
das
loopne
loop
push
xor
movsl
push
dec
scas
add
dec
inc
jmp
jno
pop
xor
cltd
les
mov
pop
int
mov
jae
dec
mov
insl
sbb
stos
inc
clc
imul
dec
aas
mov
pop
jmp
call
popf
dec
push
dec
mov
shll
ds
shll
js
dec
push
or
pop
ds
mov
rcrb
fistpl
mov
jae
pop
adc
sub
mov
cwtl
and
push
sub
xor
lcallw
push
sub
aas
fisttps
bound
push
repnz
lea
inc
addr16
sub
sub
and
xlat
pop
mov
mov
leave
rcrb
xlat
lock
cmovg
ljmp
popa
sub
shrb
daa
mov
cs
xor
and
out
adc
pop
je
fidivrl
fdivr
std
pop
xchg
aaa
cmpsl
insl
pop
add
addr16
mov
sbb
out
and
neg
add
es
pop
mov
fisubs
dec
inc
iret
pop
adc
xor
bound
hlt
push
xchg
lret
pop
lea
push
nop
fsts
aam
push
imul
pop
jne
inc
dec
mov
mov
lods
pop
stos
rorb
push
notl
ret
xchg
and
add
inc
lock
sbb
popa
mov
xlat
push
fstp
inc
in
sti
dec
adc
add
mov
filds
or
mov
fsubrl
ret
or
ret
mov
mov
xor
cmp
push
aas
iret
mov
jle
push
add
cld
icebp
mov
push
aaa
hlt
into
cwtl
or
sbb
not
idivl
sbb
sbb
pop
xlat
daa
push
mov
pop
fdivr
dec
jne
push
or
mov
fwait
sbb
push
dec
jae
subl
pop
dec
inc
sahf
xlat
mov
lods
mov
scas
lahf
or
test
loopne
mov
push
popa
jg
out
inc
cmpsl
jnp
inc
fimull
xchg
cli
mov
mov
lds
in
xchg
adc
cmpsl
outsl
loope
xchg
pop
xor
in
jmp
pushl
push
fisttpl
movsl
insb
ja
test
rclb
lods
sarb
sti
cmp
clc
adc
sbb
xchg
xchg
dec
shlb
dec
adc
cwtl
movsl
sbb
daa
enter
jle
imul
fstpt
cmp
faddl
dec
stos
ret
add
dec
cmp
inc
jmp
call
or
adc
fnstenv
dec
push
adc
cmpl
mov
pusha
sar
adc
mov
repnz
push
xchg
jp
test
in
jl
adc
and
sbb
mov
mov
js
dec
pusha
fdiv
test
and
or
xchg
stc
jo
push
je
pop
jl
adc
out
and
mov
je
test
mov
sbb
jmp
movsb
mov
popf
adc
adc
inc
mov
mov
movsl
test
inc
arpl
fstpl
mov
cwtl
mov
lahf
aam
jb
loopne
cmpl
into
mov
js
mov
adc
std
cmc
aad
std
arpl
sbb
pop
jecxz
inc
lret
stos
call
imul
add
into
pusha
add
add
and
lock
and
push
xchg
out
movsl
fistpl
dec
stc
jg
lret
nop
xor
inc
pop
hlt
and
jne
hlt
push
sub
cld
bound
xchg
test
cmp
ds
into
mov
pop
leave
stos
ror
mov
lock
and
adc
or
lea
dec
cld
mov
pop
shl
fsubrs
add
xor
fucomi
repnz
dec
or
ds
cmp
cmpl
mov
testl
lods
xchg
nop
addr16
jmp
push
inc
add
cmp
push
in
cmp
out
jbe
jnp
stos
jmp
pop
mov
jne
mov
and
les
mov
add
cmpsl
jns
fs
stos
sbbl
inc
movsl
rolb
es
pop
mov
mov
pop
adc
sbb
xor
xchg
es
sub
jmp
aam
sub
enter
or
dec
lods
push
mov
pop
mov
cld
jecxz
push
cmpsl
call
adc
push
fwait
int
lret
daa
dec
popa
push
pop
out
jo
inc
in
mov
in
loope
cmpsl
push
cmp
jl
fbstp
pop
dec
repz
roll
xor
mov
push
sub
out
adc
push
out
adc
dec
push
xchg
pop
hlt
aas
push
cmpsb
mov
fisttps
push
icebp
clc
xchg
imul
outsl
push
mov
aam
out
push
rol
stos
cmp
inc
inc
je
add
stos
hlt
cmpsb
inc
outsb
push
bound
out
cmpsb
mov
jp
out
dec
pusha
sub
aam
scas
int
cwtl
mov
data16
or
xorl
jecxz
pop
lret
shll
mov
fdiv
xor
xor
cmp
ljmp
in
icebp
jbe
push
aam
xor
mov
xor
ret
movsl
js
repnz
mov
pop
push
sub
shl
ja
dec
xor
cmp
movsl
ss
xchg
cmp
imul
repz
xor
pop
mov
jns
xor
mov
or
fwait
cs
adc
jae
aam
mov
dec
push
cmpsl
fldt
and
test
pop
xchg
jmp
jns
mov
jp
jno
and
inc
fld
jge
lds
pop
mov
inc
hlt
popf
dec
movsb
xor
inc
into
push
lret
out
jbe
stc
jns
push
mov
lea
cmp
inc
mov
dec
jns
test
mov
dec
pop
add
clc
jo
dec
mov
jns
mov
insb
lret
dec
mov
and
dec
push
mov
aam
aaa
hlt
add
leave
xchg
sbb
movsl
mov
jg,pt
into
rol
pop
loope
or
jp
cmp
pushf
jl
repz
pop
in
aas
sbbb
js
fisubs
je
test
ja
js
repz
sub
bnd
and
and
mov
mov
lea
cmp
pop
push
ljmp
sbb
xchg
adc
dec
mov
stos
test
xor
jg
adc
insl
lcall
dec
les
cli
cmp
sub
pop
test
frstor
pop
test
sbb
ja
mov
and
push
or
aas
push
loopne
or
or
xorb
sbb
outsb
ljmp
mov
in
cwtl
cmp
jo
iret
lds
dec
ret
xchg
mov
std
push
dec
inc
mov
mov
and
push
fwait
hlt
ret
adc
fstl
in
jmp
mov
iret
sub
rep
les
jb
repz
jmp
mov
enter
fwait
adc
xchg
jno
std
pop
pop
pop
xchg
sbbb
js
stc
out
mov
popf
mov
outsb
jno
pushf
stc
ljmp
cmp
dec
push
jl
or
pusha
cmpb
negb
xor
lea
jo
outsb
mov
shlb
dec
adcl
xchg
cmpsb
mov
out
xor
out
jmp
out
cwtl
mov
inc
add
inc
jb
testb
xor
gs
mov
pop
lods
mov
aas
nop
loope
icebp
rcr
loop
mov
cmp
adc
ss
lcall
cwtl
add
cltd
arpl
arpl
xor
add
leave
sbb
mov
fs
loop
cmp
mov
adc
out
cmp
pop
testl
stc
imul
jno
leave
push
inc
and
test
mov
xchg
sahf
jge
call
xchg
push
outsb
mov
dec
pop
mov
and
and
sti
pop
xchg
jb
fwait
clc
insl
and
movsl
cmpsl
daa
pop
sbb
mov
mov
adc
outsb
out
pop
stc
and
adc
mov
test
stos
cmp
or
scas
sub
das
test
fs
jg
jns
pop
pop
inc
fs
out
add
adc
inc
in
ljmp
inc
push
sbb
js
adc
mov
mov
mov
jns
cli
out
adc
or
inc
pop
add
cmp
xor
decl
xchg
rolb
lock
subl
gs
test
dec
or
lods
add
push
shll
xchg
adc
test
stos
xchg
lods
pop
xchg
repz
inc
cmp
mov
decb
jbe
data16
push
in
xchg
lret
cli
movsb
push
sahf
or
imul
sub
xchg
insl
cld
cmp
popf
xchg
push
call
jg
inc
jp
pop
add
push
xchg
jmp
inc
mov
jne
add
mov
add
push
out
xorl
daa
mov
scas
mov
pop
pop
mov
outsl
sarb
xor
xchg
adc
cld
fs
daa
cmp
psllw
repz
test
cmp
mov
sub
sbb
xchg
nop
jl
sbb
adc
xchg
sub
repnz
insb
sub
jmp
sahf
sbb
or
sub
pop
sbb
lods
adc
sbb
sbb
out
cmp
lret
outsl
aam
inc
lods
daa
inc
cmp
in
or
into
fsubrs
adc
mov
adc
or
insl
fwait
scas
ljmp
cltd
and
cwtl
and
xor
aam
int3
xlat
cmpb
gs
jge
jl
and
in
dec
pop
js
push
loop
fs
mov
inc
mov
rol
sbb
ret
cmpsb
imul
jle
sbb
sub
inc
fiaddl
push
cmp
data16
or
leave
repnz
orb
add
scas
sub
xchg
mov
insl
pop
add
mov
test
sub
cltd
pop
mov
cs
mov
arpl
int
repnz
push
ss
mov
test
xlat
fisubrl
sub
and
hlt
sti
imul
in
pop
sub
push
int3
cs
outsl
js
jne
push
mov
mov
jp
push
dec
or
push
sub
les
loopne
and
mov
or
fnsave
outsl
loop
cmp
inc
mov
ds
sti
jns
jle
xchg
call
je
adc
xor
and
jmp
addr16
rcll
and
sub
fwait
in
jb
adc
xlat
ret
mov
inc
jbe
dec
dec
imulb
mov
add
cld
cmp
add
lods
and
ret
lods
ljmp
cmpsb
clc
xchg
imul
pop
push
dec
inc
mov
push
adc
push
loopne
insl
lods
jmp
sahf
imul
inc
inc
push
cmc
jnp
faddp
push
stos
popf
push
iret
jnp
push
inc
or
or
out
out
les
pop
inc
or
shrb
insb
stos
fisubl
xchg
push
loopne
mov
rclb
and
push
mov
xchg
cmpsl
inc
mov
test
call
cwtl
jge
inc
xor
inc
fstl
repz
cmp
mov
jmp
aas
sbb
xlat
ret
scas
int3
mov
lret
jg
xor
xor
fidivl
mov
cmp
dec
ret
jl
mov
aaa
and
enter
pushf
cli
add
pusha
mov
pop
repz
xchg
cmp
sub
in
lret
cmp
pushf
testb
pop
adc
out
aas
xchg
stos
rcrb
lods
clc
mov
cmpsb
or
cmp
pop
andb
stc
pop
xchg
cmp
mov
mov
mov
xchg
into
call
or
xlat
hlt
xchg
mov
jbe
and
adc
loopne
dec
dec
push
es
insb
sbb
mov
std
push
call
jne
repnz
pushf
push
cwtl
clc
popf
dec
add
jb
nop
stos
std
inc
cltd
mov
xchg
call
cmp
jb
jmp
mov
add
sti
ljmp
mov
xor
adc
ftst
bound
arpl
mov
out
mov
leave
adc
notl
and
insb
jae
movsl
inc
lahf
pop
cmpsl
lods
dec
xor
and
sub
pop
jb
gs
sub
sbb
cmp
mov
stos
fildl
push
add
adc
sub
call
popf
jnp
out
lods
xor
call
or
imul
jne
ljmp
jno
lea
sbbb
rcrl
in
mov
ficoms
shl
xor
lahf
insl
add
addl
dec
aaa
push
adc
jne
std
xor
insl
mov
lret
push
bound
mov
ja
insl
or
aaa
pop
mov
xor
adc
add
lcall
push
dec
inc
addr16
lret
jne
jae
mov
mov
pusha
xchg
rcrl
mov
jno
mov
fsubrl
test
adc
jecxz
cltd
rorl
and
insb
in
fsubrs
pop
ret
insl
lahf
popa
scas
lea
test
js
out
aad
rclb
lods
pop
xchg
pop
clc
data16
lods
cmpsb
mov
ljmp
push
enter
mov
dec
or
mov
ret
pop
adc
cmp
popa
cmp
or
sub
xor
hlt
fistpl
push
lods
in
das
sub
adc
push
xchg
dec
scas
mov
xor
lods
test
xor
movsb
sbb
jp
jno
subb
dec
push
pusha
jmp
das
fsub
in
adc
shll
sbb
sbb
popa
jge
or
mov
xor
mov
sub
jp
cmpsl
xlat
mov
clc
mov
lcall
or
add
pop
aam
adc
dec
jmp
jmp
insb
dec
out
es
xchg
cmpl
and
and
push
popf
jnp
adc
inc
push
dec
inc
test
lock
or
xor
mov
add
cltd
xchg
rcrl
xchg
xor
xchg
push
rclb
jg
mov
push
movb
inc
cmp
movl
add
adc
jnp
ja
inc
loopne
mov
xchg
test
add
push
jmp
lcall
lret
mov
cmp
test
repz
cs
xor
out
jns
mull
cmc
dec
xor
testb
ja
xchg
push
fsubrl
xchg
pop
das
out
loope
and
add
or
cmp
shl
adc
adc
aas
push
cwtl
pop
xor
repnz
lea
sahf
xchg
inc
enter
out
mov
in
pop
incl
jns,pt
add
xor
or
mov
in
jne
dec
ret
js
add
jecxz
arpl
adc
mov
ja
cmp
nop
jmp
scas
sti
mov
aaa
mov
sbb
lret
push
into
es
cltd
adc
cmp
insb
adc
bound
stos
ss
rclb
push
jb
adc
ret
scas
mov
dec
push
cmp
iret
and
push
jbe
lret
icebp
and
loop
add
fdivr
xchg
pop
xor
jns
outsl
insl
dec
mov
lea
sti
push
insl
cmp
jecxz
cmp
cld
add
mov
cmp
scas
es
aad
lret
or
dec
nop
add
xchg
and
sbb
imul
sub
jns
pop
notb
adc
mov
fsubrs
jns
cmp
or
mov
inc
pop
popa
push
insl
out
lret
icebp
mov
push
sahf
xchg
decl
jns
into
push
pop
mov
loop
or
ret
cmp
xchg
adcb
mov
rorl
or
mov
jno
cmc
popf
cli
inc
enter
test
and
sbb
dec
mov
loop
dec
test
out
xor
mov
daa
fwait
arpl
loope
addr16
ss
cmpsb
scas
cltd
aad
shll
pop
sub
xor
push
xchg
cmpsl
pop
fidivrs
daa
sub
cmp
pop
jnp
xchg
mov
mov
imul
lea
sahf
lcall
es
push
mov
adc
and
mov
inc
dec
jl
pusha
pop
pop
imul
out
test
inc
ds
dec
insl
insl
data16
cld
jbe
js
std
aad
pop
xor
dec
cmp
or
xchg
leave
add
cmp
pop
inc
out
inc
mov
lock
pop
or
or
imul
out
ds
dec
jmp
mov
mov
sbb
in
sbb
and
mov
int3
testb
outsb
out
dec
adc
fbld
push
mov
mov
popf
push
popa
fldt
out
pop
and
push
jns
fsubrp
or
or
jecxz
mulb
int3
xchg
into
clc
iret
repnz
jo
aam
add
aad
mov
xchg
cmpsb
cmpsb
imul
xor
loop
mov
pop
xchg
lds
cltd
divb
in
inc
cmp
mov
mov
loopne
xchg
adc
aaa
mov
add
xchg
pause
sub
pop
add
and
ret
inc
xor
dec
push
inc
jp
sub
cmp
imul
pop
cmp
or
and
xchg
test
fdivs
xor
mov
stc
and
fiadds
dec
or
push
mov
ret
stos
mov
test
xchg
rolb
mov
push
loope
jle
add
repz
pop
jo
dec
mov
xor
movsl
fcmovnu
cmp
jne
push
lcall
mulb
mov
xchg
push
rolb
cltd
adc
in
push
xchg
inc
jl
arpl
loope
int
in
mov
ret
sbb
mov
push
rorl
pop
cmc
loopne
es
xchg
adc
sahf
repz
out
ja
arpl
add
xlat
stos
xchg
sub
or
push
ljmp
xchg
pop
movsb
lea
notl
out
xchg
inc
mov
stc
ss
sbb
std
and
dec
outsb
ds
cmpsl
jle
mov
xor
sbb
leave
stos
ja
fisubl
loop
roll
dec
cmp
icebp
mov
movsl
and
xor
jbe
pop
enter
insl
push
fwait
mov
inc
or
movsb
jg
mov
xlat
xchg
cld
inc
icebp
or
xlat
ficoms
test
pop
jns
mov
ss
addr16
pop
xor
xor
and
push
or
clc
ss
jge
jge
fwait
xchg
cmpsb
sub
xchg
or
mov
sub
mov
int
shl
in
push
sbb
push
aas
mov
xor
jecxz
xchg
js
movsl
dec
jp
subb
pushf
jp
cmp
pop
mov
mov
cmpsl
divl
mov
adc
pushf
push
fisttps
push
pushf
pop
jae
in
and
and
lock
mov
inc
inc
cltd
mov
and
jg
or
push
aam
in
xchg
dec
jle
jae
fnsave
fisubrs
or
inc
xchg
icebp
push
push
stos
movsb
or
cs
cmpsb
rol
pop
test
jae
cmpsb
mov
sbb
ret
mov
sbb
test
push
roll
jns
xor
repnz
inc
dec
dec
bound
push
mov
insb
fldcw
insb
jle
loop
cmpsl
and
or
jp
sbb
scas
xor
add
pop
jo
test
mov
enter
ret
insb
dec
insb
cmp
cmp
xchg
loop
out
or
jle
sbb
mov
mov
lods
add
mov
and
push
inc
sbb
mov
ljmp
add
adc
std
inc
jl
push
lods
mov
jle
xchg
or
pop
pop
ljmp
addr16
in
into
pop
jmp
rorl
scas
dec
jne
sbb
mov
test
cli
lea
xchg
outsl
adc
js
xor
adc
outsb
das
or
cmpsb
jne
pop
xchg
cmpsb
aad
xor
jns
imul
inc
inc
fwait
stos
and
clc
jl
xor
ds
add
lods
mov
pop
sti
jo
inc
inc
lods
jle
sub
dec
mov
test
fwait
push
js
scas
sbb
dec
sub
popf
stos
mov
decl
out
call
popa
mov
jno
pop
cpuid
loop
es
jo
push
xchg
mov
cmp
mov
cmp
pop
pop
push
cmpl
xchg
xlat
test
rolb
and
xor
adc
sub
mov
dec
or
jmp
mov
fmul
mov
imul
mov
mov
in
in
sub
cli
fwait
stos
cmp
loopne
ss
ds
out
jno
push
fdiv
outsl
rcrl
adc
add
jne
sub
push
jl
jg
mov
daa
adc
outsl
adc
popf
dec
fcomi
sahf
test
rclb
mov
xchg
sbb
pop
out
test
xor
test
push
inc
ja
jo
pop
dec
les
mov
stc
out
inc
pop
je
je
inc
mov
and
xlat
xor
mov
jbe
out
fnstenv
ja
pop
add
shlb
dec
sbb
adc
xchg
jb
add
outsl
jmp
and
std
inc
notl
outsb
pop
popa
lods
frstpm(287
out
push
out
lahf
incb
adcl
jns
popf
mov
pop
mov
pop
sbb
dec
hlt
adc
decb
cld
cmpb
rclb
aam
popa
ds
mov
nop
or
jnp
push
and
aas
add
fwait
xorl
mov
ss
mov
mov
popa
jne
jmp
xchg
testl
pop
lret
or
xlat
in
cmp
mov
jb
sbb
inc
pop
cmc
sbb
mov
xchg
in
jne
push
pop
fdivl
jecxz
pop
mov
sti
decl
mov
jne
mov
xchg
in
les
add
add
jo
mov
das
add
pop
cmpsb
push
mov
insb
mov
inc
xor
pop
bound
out
test
xor
pop
fdivr
and
ja
pop
mov
jbe
arpl
sub
sub
or
mov
add
test
loop
cmpsl
fdivl
mov
and
inc
xchg
mov
mov
fstps
pop
add
jno
je
xor
shrb
andb
push
ja
jp
mov
scas
dec
pop
jge
and
sub
rcrl
ljmp
add
mov
cmp
jl
es
rcrl
inc
das
std
jl
xor
sbb
in
in
js
adc
or
lods
popf
loop
mov
xlat
insl
pop
dec
or
sti
jns
jb
jno
data16
iret
inc
fs
push
lcall
gs
imul
xchg
mov
icebp
xchg
xor
shll
ljmp
outsl
pop
cmp
mov
jl
icebp
or
or
or
jp
push
jae
scas
pop
xchg
rorl
mov
addb
xchg
dec
ror
xor
xor
enter
xchg
fwait
sub
sub
dec
inc
push
inc
cld
mov
daa
dec
daa
xchg
fcomi
test
or
scas
inc
neg
notb
arpl
jle
dec
lret
push
fbstp
xor
push
xchg
xchg
in
or
aas
in
lahf
mov
and
jne
or
aaa
xor
mov
inc
lods
fs
addr16
testb
fadd
push
and
rcll
jge
sarb
insb
loope
lea
sbb
pop
push
and
push
out
pop
fsts
mov
and
ds
or
mulb
shrb
sub
lods
xchg
rclb
fnstsw
es
pusha
push
mov
push
aad
inc
cmpsb
popf
jge
sub
lds
js
rclb
dec
stos
adc
xchg
call
popa
out
sub
enter
icebp
pop
mov
xchg
cmpsl
repnz
cs
enter
cmp
sbb
xchg
mov
mov
or
stc
scas
jb
movl
cltd
roll
outsb
or
icebp
lcall
jno
xchg
dec
iret
popa
adc
mov
or
leave
pop
ljmp
cmp
mov
repnz
mov
jne
jmp
jl
mov
pop
mov
stc
mov
dec
stos
push
dec
hlt
lcall
mov
inc
pop
add
jae
subb
sbb
fcoms
lods
test
test
sbb
enter
push
mov
dec
cmpsl
mov
aam
repnz
std
dec
push
lret
xor
adc
mov
bndldx
inc
shlb
mov
cwtl
lret
push
jbe
xor
shl
push
push
sti
xchg
scas
iret
mov
cmpsl
lahf
movsl
jmp
lcall
repnz
adc
sub
lock
dec
repnz
mov
dec
aam
push
fistpll
sbb
and
or
lahf
push
iret
mov
push
scas
and
jns
cwtl
into
inc
int
inc
cmpsb
xor
imul
pop
dec
dec
mov
aas
imul
cmp
fwait
lahf
bound
xchg
add
mov
aad
aas
js
mov
sti
in
xor
jge
xchg
mov
sub
idivl
out
mov
or
jne
rcrb
and
sbb
mov
pop
push
cmp
mov
jns
sub
out
mov
dec
repz
sbb
rcll
jbe
or
jo
sarl
dec
xor
fxch
push
mov
inc
inc
sub
adc
jge
insl
hlt
insl
inc
or
jo
sub
xchg
rclb
movsb
mov
in
jge
cmp
inc
xchg
lods
sar
mov
pop
loopne
mov
cmpsl
xor
in
in
in
fs
scas
jmp
xchg
sahf
inc
out
adc
imul
jb
mov
sub
ds
or
mov
test
inc
sbb
pop
xor
dec
popa
sahf
sub
cmp
call
fimuls
das
test
add
mov
jns
dec
xchg
fimuls
lahf
mov
nop
fcoms
or
out
popf
lcall
ja
mov
mov
and
cli
lea
cmp
mov
out
sbb
cwtl
cmp
adc
mov
das
sbb
mov
push
notb
daa
xchg
push
cmp
sub
aas
icebp
pop
mov
cs
dec
pop
push
pop
testb
mov
fs
adc
roll
inc
cmp
mov
inc
subl
fwait
add
mov
in
lock
daa
lea
xor
test
loopne
das
pop
push
test
sub
pop
cwtl
loope
add
fsub
das
ror
mov
mov
in
lods
mov
lds
push
xlat
out
shrl
and
cmc
outsb
ret
mov
shll
lcall
or
inc
js
or
mov
cmc
test
test
dec
call
jmp
iret
jle
dec
mov
aam
xchg
int
add
dec
cmp
jle
shrl
shlb
adc
add
andb
je
bound
aas
dec
pop
fimull
sbb
push
cmc
out
xchg
mov
bound
nop
cltd
push
cmc
jbe
mov
jmp
cmp
dec
xor
cmp
pushl
pushf
aad
dec
mov
je
outsb
xor
pusha
movsb
loopne
jmp
jmp
fisubrl
sbb
adc
mov
mov
rorb
cli
int3
push
ret
jl
adc
jns
cld
icebp
stos
xchg
loop
imul
inc
fstps
xor
out
cmpsl
inc
insl
mov
call
shrb
pop
mov
bound
and
cs
or
xchg
stos
add
call
jae
or
out
repz
dec
dec
mov
cmp
cmpsl
popf
cmp
in
aas
jge
mov
or
out
lahf
das
mov
cltd
inc
sub
mov
mov
out
lret
xor
push
stos
push
mov
ret
mov
push
push
sub
insb
test
jmp
addr16
xchg
and
fnstsw
aaa
aad
arpl
add
xor
enter
xchg
std
push
pop
mov
dec
pushf
mull
push
sbb
test
clc
cmp
clc
jg
push
xor
xchg
data16
mov
cmpl
int
dec
xor
popf
or
sub
jnp
dec
jle
sbb
push
shrl
adc
jmp
xchg
mov
pop
shll
js
inc
dec
mov
bound
pop
inc
xchg
retw
push
mov
orb
sahf
jne
mov
lret
out
and
jnp
add
fimull
cwtl
orl
lret
scas
loope
fidivrl
mov
jb
jnp
aam
and
inc
aad
fidivs
cmp
pop
push
icebp
inc
std
push
in
repnz
adc
movsl
imul
js
out
insl
and
xchg
pop
shr
dec
inc
daa
aam
insl
imul
xor
sub
ljmp
cmp
dec
jo
cltd
arpl
cmp
xchg
push
mov
mov
das
cmp
loop
xlat
adc
ret
push
push
and
add
dec
pop
rorl
pop
rorb
bound
mov
adc
sbb
mov
mov
test
shlb
aam
mov
orps
xchg
out
dec
add
inc
pushf
out
adc
inc
das
negl
pop
or
cwtl
icebp
or
out
stos
inc
push
and
add
mov
aad
jge
dec
mov
inc
xor
bound
jbe
or
insl
and
fisttps
jle
dec
adc
xor
jne
jnp
adc
aaa
cmp
loop
pushf
jecxz
sub
int
sbb
sti
push
sub
pop
roll
pop
xor
loopne
add
int3
mov
cmpsb
arpl
jecxz
and
jmp
cmp
test
js
dec
push
jecxz
xor
clc
scas
xchg
pop
sbb
pop
sbb
or
sbb
push
icebp
mov
aaa
sub
fcomp
cmp
cmp
adcb
mov
fidivl
mov
out
fildll
movsb
test
rcll
test
jo
adc
cltd
lahf
ret
gs
lret
mov
mov
sahf
addr16
jbe
cwtl
fld1
fnsave
test
xchg
orb
sahf
insl
sub
cs
xchg
bound
fsubl
xchg
sbb
js
stc
inc
js
cmp
mov
cmc
pop
mov
cltd
rol
sub
and
sarb
hlt
pop
es
mov
lret
addr16
dec
or
and
ss
adc
loop
shrl
cld
fs
adc
out
lock
insl
add
movsb
cli
out
addb
inc
sahf
cmp
cmp
push
mov
jne
sti
js
popf
dec
stos
push
les
cmpsl
xlat
or
pushf
test
lahf
jmp
pop
jle
test
mov
test
add
ljmp
jnp
std
add
lods
push
mov
lock
lahf
pop
js
jns
mov
cmp
lock
insb
add
gs
dec
pop
jns
mul
push
addl
daa
mov
xchg
inc
imul
sbb
sub
sub
adc
lods
adc
dec
inc
sbb
sahf
push
mov
pop
ret
xchg
cs
leave
push
hlt
test
out
lds
pop
lods
inc
xchg
rcrl
hlt
out
mov
adc
repz
sub
andl
test
jmp
out
pop
push
xchg
dec
adc
insb
push
sbb
xchg
cmp
in
loop
mov
mov
and
and
xchg
jne
jne
jo
pop
mov
jno
sub
cmpsb
sub
xchg
mov
and
aam
cmpsb
adc
mov
adc
push
xor
je
scas
xchg
xor
push
outsl
mov
pop
mov
jnp
adc
push
push
cltd
imul
xchg
out
xor
adc
sub
cmp
sbb
dec
add
adc
or
xorl
adc
fs
sub
gs
shr
sbbb
mov
pop
or
out
aam
inc
call
xor
and
inc
adc
sub
call
xor
sub
inc
out
cmp
and
xchg
fwait
call
int3
mov
mov
sub
pop
cmp
scas
push
daa
cli
lds
dec
mov
fmull
jmp
mov
ss
aaa
imul
sbb
fcompl
iret
push
or
ss
aaa
nop
inc
dec
cmp
mov
cmpsb
push
imull
cmpl
out
out
mov
mov
test
sbb
or
add
fsubrs
stos
daa
mov
fs
lret
pop
jmp
and
cld
dec
sub
adc
adc
movsb
push
sub
push
loop
xorl
and
arpl
sub
pop
mov
sarb
aaa
fnsave
mov
jno
pop
mov
push
lods
cltd
adc
dec
sub
sahf
cld
mov
or
sbb
stc
sub
les
mov
pop
jecxz
mov
lods
push
les
sbb
pop
stc
test
jns
fcoml
nop
xchg
cmp
mov
iret
mov
pop
outsl
fstl
xchg
mov
push
popf
xchg
test
mov
insb
notb
rolb
sahf
cmp
adc
mov
sub
fs
shrl
std
adc
sti
insl
lods
add
out
lds
outsb
div
shrd
mov
cmp
lcall
call
push
push
add
test
sbb
dec
scas
inc
mov
push
push
pop
adc
or
cmp
ret
in
lods
mov
sub
cmp
loope
or
mov
ret
push
imulb
mov
insl
sahf
popf
sub
sarl
int
xchg
dec
sbb
sbb
pop
mov
in
add
cmc
icebp
mov
sahf
jl
repz
cmpsb
andl
or
shlb
daa
dec
lea
test
jmp
pop
out
stos
and
xor
or
jo
dec
mov
pop
sub
push
jo
sub
aaa
test
pop
jne
push
or
xor
jl
mov
jns
jne
lcall
push
fsubrs
jns
fwait
pop
je
rcrl
repz
test
sub
into
jmp
movsb
imul
lret
insb
lock
test
jo
cmp
jno,pt
cltd
and
in
fstl
mov
ss
fcoms
cli
jmp
push
pop
es
insl
rorb
and
jge
in
pop
ret
call
add
mov
mov
es
sbb
adc
sbbb
add
mov
push
xchg
inc
mov
cmpsb
fs
add
mov
pushf
inc
scas
outsl
out
adc
mulb
loop
or
loope
dec
add
mov
and
sub
fwait
andl
stos
pop
mov
inc
and
adcb
push
cs
fisubs
fcomps
fwait
outsb
and
pushl
sahf
add
imul
lret
and
pop
sbb
jle
jbe
mov
xchg
imul
jg
scas
inc
sub
pop
sbb
cli
bound
ljmp
int
mov
pop
inc
xlat
or
out
sub
jg
mov
aas
jge
lahf
mov
sahf
pop
add
cs
dec
xrelease
cld
icebp
lods
into
jbe
repz
lret
add
negb
sbb
hlt
iret
lret
adc
scas
sub
push
dec
repz
ljmp
pushf
cmp
fcmovb
sub
cltd
cmpsl
mov
or
add
arpl
mov
sbb
jae
xlat
jb
mov
adc
out
out
jb
rclb
arpl
scas
or
fidivrl
sub
outsl
es
mov
enter
pop
mov
bound
mov
fsubr
cwtl
clc
jmp
cmp
gs
mov
lcall
jmp
clc
xchg
sub
jb
mov
and
stos
mov
jle
sti
add
mov
fwait
push
iret
cmpl
or
jns
ss
push
cmp
push
jle
data16
sbb
popf
stos
or
xorb
es
fdivs
movsb
sub
imul
pop
push
shll
pop
in
test
xorb
mov
mov
divb
pop
jmp
or
js
imul
pop
mov
sahf
jb
insb
jmp
aaa
jmp
outsb
loop
mov
adc
loopne
fists
imul
sbb
loope
lods
xor
mov
mov
and
pushf
inc
int3
push
xorb
adc
and
daa
test
int
sub
sub
push
xchg
mov
sub
lds
icebp
icebp
xchg
pop
outsb
movsl
fwait
mov
push
adc
cmp
jle
pop
loopne
dec
sub
pusha
push
mov
push
shl
jle
cs
pop
arpl
sbb
xor
std
or
shrb
xchg
test
cld
cwtl
add
pop
jg
mov
ret
movups
popf
add
jl
mov
stos
xchg
movsb
rol
inc
les
inc
pop
cwtl
mov
xor
insb
dec
sti
pop
mov
jne
dec
out
add
mov
imul
jg
arpl
mov
push
sbbl
repnz
scas
jp
mov
sub
jb
popa
xor
repz
jo
push
mov
int3
dec
pop
jb
scas
js
mov
lret
add
inc
in
ficoms
cmpsl
cmc
adc
mov
mov
or
xchg
add
pop
rorb
mov
pop
sbb
popf
xor
mov
jg
sbb
test
push
lahf
jl
divl
jl
jp
inc
add
push
mov
js
pushf
pop
mov
sub
movsl
sbb
mov
dec
icebp
lret
mov
sub
rcl
fcomps
movsl
pop
scas
pop
test
mov
jns
stc
xchg
inc
adc
fstl
push
sbb
lods
das
pop
or
mov
ljmp
imul
push
cmp
dec
sub
or
inc
sbb
faddl
enter
je
adc
pushf
jecxz
es
int3
sahf
ret
pop
sbb
call
daa
sti
dec
hlt
mov
inc
cld
cld
cmp
iret
sahf
mov
push
in
jle
mov
test
mov
jb
int
adc
repz
jo
jg
std
les
pushf
out
sub
ret
test
jmp
dec
or
fsub
dec
lret
ret
adcl
pop
mov
cmp
ficompl
sti
aaa
xchg
dec
mov
xchg
or
inc
out
inc
or
push
gs
mov
call
adc
push
jmp
bound
cmpl
xchg
or
pop
fstpt
sub
or
jno
in
cmpsl
sub
aam
inc
arpl
jle
icebp
sub
mov
xchg
mov
pop
mov
inc
sub
pushf
push
add
outsb
or
mov
xor
pop
push
ja
std
push
jp
loopne
xor
mov
ljmp
add
add
aad
sub
aad
gs
jge
fistl
lcallw
inc
cwtl
int
pop
cmpsb
std
loop
xchg
xor
pop
sub
mov
inc
hlt
outsl
cmp
lods
push
out
and
mov
push
rcl
popa
stos
mov
fdivrs
mov
arpl
xor
fdivl
adc
mov
fwait
movsl
dec
iret
sbb
add
enter
add
nop
rcrb
popa
push
movsb
push
cld
and
cs
jge
js
outsl
loopne
lcall
repz
insl
or
sti
lods
mov
fbld
xor
fbstp
push
psllw
call
loop
movsb
in
mov
dec
jo
dec
jbe
das
filds
pop
incb
and
mov
adc
cmpsl
imul
xchg
sub
mov
push
in
inc
lcall
sbb
aaa
add
into
and
mov
jp
cmp
fs
loopne
fldcw
and
fldt
push
cmpsb
jo
mov
bound
pop
cli
repnz
rol
push
xchg
jecxz
add
mov
je
rol
fdiv
imul
adc
mov
movsb
jmp
push
jge
pop
sbb
adc
in
sti
movd
mov
cmp
lret
and
and
sarl
xchg
addr16
jo
stos
jg
scas
outsb
leave
pop
inc
addb
mov
cmp
xchg
jo
sub
shl
jnp
pop
cmp
mov
push
imul
test
insl
jecxz
cmpb
cs
lret
pop
repnz
addr16
bound
nop
jle
push
lods
rorl
jle
mov
dec
or
mov
xor
push
jb
or
imul
sbb
je
lods
aad
push
lds
jne
pop
test
jp
xor
pop
push
pop
cwtl
jae
stos
rcll
mov
mov
jns
mov
and
test
sbb
push
xor
arpl
mov
shll
sub
mov
sbb
rol
mov
mov
sbb
lock
pusha
ja
lret
sahf
add
sbbb
mov
adcl
adc
cmp
scas
lcall
jns
push
xchg
pushf
loope
ror
ljmp
xchg
cld
testb
std
arpl
ds
sbb
in
scas
frstor
stos
and
fiadds
pushf
xor
aaa
test
pop
pop
ret
cmp
xchg
adc
mov
adc
or
sbb
mov
lret
int3
jb
dec
xchg
ss
xlat
xchg
mov
lods
mov
xchg
repnz
add
arpl
and
adc
sbb
rclb
mov
fdivrs
out
push
pop
aaa
arpl
jecxz
and
sub
aam
aas
rcrb
cs
hlt
and
lea
stos
sbb
mov
jb
test
repnz
repz
dec
les
in
mov
sub
sub
ds
inc
xchg
data16
sub
jne
cmp
mov
repnz
inc
mov
test
fbld
iret
xor
mov
sub
inc
inc
nop
es
xchg
cwtl
and
mov
insb
mov
xchg
int
jg
jae
loop
jl
xchg
and
subb
out
pop
aas
loope
sahf
or
fcompl
push
push
mov
daa
jecxz
mov
sbbb
add
hlt
jb
dec
leave
shlb
idivl
repnz
andl
pop
xchg
lret
loop
iret
mov
mov
test
cmp
push
and
add
push
lret
aaa
fldenv
add
popaw
push
and
mov
leave
orl
sbb
inc
pushf
jmp
xchg
out
mov
jo
pushf
push
cmp
js
scas
iret
arpl
push
data16
dec
dec
das
jecxz
popf
mov
pop
repz
mov
add
or
push
jle
cmp
lret
mov
adc
push
mov
cmp
mov
xchg
xchg
js
lods
mov
mov
insb
out
dec
in
icebp
pop
fidivrl
fsts
xor
push
jg
in
xor
pop
inc
je
sbb
dec
mov
popf
call
push
jae
lods
dec
and
mov
mov
mov
mov
es
scas
dec
mov
lret
jle
in
pop
stos
pop
es
push
mov
clc
dec
mov
push
or
mov
push
push
lods
jnp
jbe
push
mov
je
pop
cs
arpl
dec
movsl
imul
pushf
add
mov
xchg
jno
fmulp
ja
add
sub
aad
xor
dec
mov
test
cmp
cmp
or
jge
or
xor
sub
loopne
jg
cmc
int3
outsl
test
jae
cmp
xchg
adc
xor
push
movsb
xchg
stos
lcall
pop
and
and
cmp
inc
xchg
pop
mov
push
fcoms
dec
cmp
sub
mov
lea
nop
loope
ficoml
sbb
jbe
lods
nop
insb
arpl
pop
mov
mov
jp
adc
sbbb
enter
leave
add
sbb
cmp
aam
push
fs
dec
loope
push
dec
insl
scas
mov
repnz
sti
pusha
movsb
jecxz
insb
test
repnz
sti
movsl
in
mov
mov
scas
push
in
mov
inc
aad
dec
cli
cli
cmpsb
push
fisttpll
xlat
and
cmp
or
repnz
inc
int
xor
movsb
inc
mov
neg
sbb
fdivp
sarb
push
pop
mov
sbb
lock
das
mov
mov
xlat
imul
and
pop
cmp
test
arpl
insl
dec
jl
mov
push
or
jp
or
movsb
test
aaa
and
repnz
lret
xchg
idivl
dec
adc
icebp
leave
lods
mov
ds
push
push
int
cld
test
dec
int
or
jae
add
add
cmp
call
and
ja
lret
adc
aad
arpl
std
fldcw
push
lret
jo
fwait
sahf
pusha
mov
fisubrs
insl
fsubrs
sbb
mov
int3
loopne
aam
cmp
cli
in
mov
jo
adc
shrb
arpl
cmp
adc
adc
nop
out
cmpsl
pop
addl
notl
cwtl
pop
xor
ret
les
stc
mov
xchg
xor
shl
add
jae
cmpsb
xchg
pop
in
cmp
cmp
mov
mov
sbb
call
loope
int
iret
mov
mov
mov
dec
push
jle
jmp
loope
call
sub
rclb
cltd
ds
stos
test
sub
lock
push
mov
test
jo
sahf
divps
xchg
jge
push
adc
mov
outsl
fisttps
rorb
imul
cmp
movsl
xchg
jl
pop
sarl
imul
dec
scas
daa
insl
jg
ret
sbbb
lea
ret
cmp
jmp
adc
data16
jne
pop
scas
dec
idivb
gs
add
stc
adc
dec
ljmp
adc
lock
push
rcrb
dec
cld
imul
push
stos
or
pop
or
push
andw
xchg
mov
dec
sbb
bound
loop
push
pop
mov
dec
mov
adc
lahf
mov
mov
add
sbb
dec
ljmp
adc
fcompl
dec
lock
icebp
jb
push
in
shll
sub
mov
or
cmp
pop
adc
adc
push
xchg
pop
jle
xchg
fistpl
ljmp
sub
incb
jns
inc
xor
pop
cmp
movaps
test
mov
push
es
addb
cmpsl
out
int
mov
pop
test
ljmp
dec
pop
jmp
popf
cmpsl
repnz
push
das
repnz
jge
aaa
std
add
insl
mov
xor
int3
mov
shll
xchg
daa
pop
lods
pop
xor
mov
dec
jne
push
xchg
sbb
sub
sahf
push
inc
ret
adc
ret
push
insl
dec
xchg
push
add
inc
add
jno
inc
nop
stos
add
push
outsb
sub
sbb
xor
enter
xor
add
mov
or
ljmp
aam
add
test
cmp
pop
imul
ret
stc
and
stos
popa
std
sbb
dec
lret
xor
xor
nop
or
dec
enter
test
jmp
cmpsb
xor
fisubl
imul
inc
dec
ret
andb
gs
cmp
jne
mov
or
xorb
dec
pushf
adc
lods
pop
and
fmull
stc
pop
clc
sbb
out
scas
call
imul
fwait
movsb
stos
add
jmp
xchg
pop
das
fsubs
xchg
lret
hlt
jmp
lret
cmp
add
sbb
push
xor
dec
mov
hlt
dec
aad
ljmp
sbb
or
inc
cwtl
and
mov
jge
out
sbbb
iret
xorb
out
jp
shll
jo
push
push
loop
or
lahf
mov
aas
jmp
lock
imul
xchg
lret
cmp
adc
jnp
call
insb
aaa
and
int3
and
int
fildl
mov
scas
and
test
cmp
test
les
insl
fwait
data16
and
or
and
adc
inc
xchg
mov
and
ficomps
mov
bound
aas
dec
pop
fisubs
or
lret
pop
test
lret
mov
mov
or
sbb
mov
in
fs
andb
adc
jae
fnstcw
leave
movsl
sub
pusha
push
pop
mov
sub
and
adc
sbb
dec
cmp
test
mov
out
std
adc
or
flds
and
add
pop
sbb
push
pop
scas
jl
movsb
jae
aaa
jl
shl
ret
gs
test
dec
je
lds
xor
pop
in
subb
xlat
xchg
loopne
js
enter
add
aad
push
jb
lock
iret
ja
or
push
test
cmc
ret
mov
dec
adc
mov
es
hlt
lods
mov
and
data16
xchg
enter
test
fs
out
sbb
mov
mov
pop
and
testl
push
decl
pop
jnp
mov
xchg
pusha
adc
xor
lahf
aad
aas
add
in
fstpt
aas
ja
dec
cli
clc
out
jg
mov
jns
jno
fucom
or
sti
jno
push
daa
daa
jae
cmp
cmp
hlt
call
jbe
sub
lds
stos
push
xor
pop
sbb
xchg
lahf
in
aam
or
mov
fbld
fisubrs
or
shrb
fdivl
lcall
push
andl
fcomps
cmp
testb
enter
pop
and
data16
mov
push
dec
mov
out
test
ret
push
movsl
test
push
in
sti
movsl
enter
loopne
dec
sub
mov
das
cmp
sbb
cwtl
out
leave
fnstsw
jns
mov
jns
push
outsl
dec
and
jno
fbstp
test
xchg
jae,pt
xchg
sbb
rcrl
notb
lcall
push
xchg
lods
imul
data16
jl
nop
lret
fs
cmc
imul
pop
xbegin
daa
sbb
or
push
dec
mov
bound
into
add
lds
cmp
test
fisttps
movsb
push
sbbb
pop
sbb
mov
jle
sub
pop
jmp
add
push
and
jne
insb
pop
orl
mov
mov
shlb
int3
jg
sti
ret
loope
sbb
pop
lret
adc
xchg
test
mov
pop
into
nop
mov
mov
dec
lcall
ret
sahf
int
addr16
cmpsb
clrssbsy
into
mov
cld
mov
insb
loopne
inc
cmp
push
jge
jb
xchg
or
lds
and
mov
and
adcl
inc
in
pop
mov
outsl
cli
cmp
xchg
add
into
popw
xchg
imul
cli
out
iret
loope
mov
shrb
cld
fisttpll
ffree
xor
in
dec
movsl
jge
or
dec
inc
mov
ss
pop
adc
add
addb
es
inc
out
or
and
stos
xor
mov
loopne,pt
inc
jg
dec
cmpsl
jmp
xchg
pop
xchg
or
mov
cli
cli
lds
cmp
imul
mov
test
push
mov
ds
push
les
out
notl
lods
jg
push
dec
pop
cmpsb
sub
xchg
push
adc
jne
xor
cmp
or
mov
jp
adc
xchg
das
sbb
mov
cld
fistl
js
sbb
cli
cs
aaa
test
aas
sbbb
pop
jnp
in
leave
addb
iret
mov
in
sub
cli
xchg
dec
clc
add
xor
push
and
add
loopne,pt
and
xchg
lods
int3
dec
jmp
ljmp
xchg
jle
lea
sti
xchg
movsb
and
nop
cmp
cli
jno
bound
js
xlat
jno
inc
in
out
sarb
lods
mov
test
test
fistps
cmp
fs
fcmovnbe
jb
push
push
mov
jnp
mov
rcrb
rcrb
repnz
mov
sti
sahf
xorb
pop
test
into
push
add
dec
sbb
dec
and
push
out
sub
and
and
mov
sbb
push
xchg
cmp
sub
pusha
aaa
loope
xor
bound
insb
jmp
cli
test
cltd
xchg
mov
out
xor
xchg
ror
mov
dec
push
hlt
push
jl
cwtl
out
push
sub
xchg
push
ret
mov
lock
icebp
jmp
lods
jae
sarl
aam
test
add
add
js
pop
pop
in
xchg
add
inc
testb
icebp
gs
shlb
jecxz
fdivr
mov
shl
xchg
jne
xchg
pusha
loope
mov
fs
test
stc
dec
stos
pop
pop
xor
lock
call
or
das
incb
dec
push
pop
aaa
rcrl
push
fimuls
leave
outsl
sbb
jne
lods
push
or
test
cmp
jge
jb
popa
lods
loopne
dec
js
push
push
insb
sti
and
test
repz
mov
ds
sub
fisttps
scas
xor
int3
mov
ret
inc
jo
jl
add
fadd
lea
xor
mov
or
push
and
std
xlat
sbb
push
shl
mov
aad
int
test
adc
gs
mov
or
repnz
leave
xchg
dec
nop
mov
mov
rorb
jge
in
jnp
lods
adc
push
pop
dec
pop
sbb
jns
iret
sub
cmp
cmp
jbe
mov
and
mov
fistpl
data16
xlat
mov
shrb
cs
fadds
les
ror
jo
xchg
sub
mov
addl
sub
inc
and
xchg
mov
pop
out
loope
jecxz
mov
xlat
pop
sbb
dec
mov
lock
shlb
ss
loop
cltd
or
dec
push
jbe
mov
outsl
fcmovbe
into
push
inc
daa
mov
fwait
sbb
dec
and
scas
jge
out
pop
sub
mov
in
in
aas
jle
das
enter
mov
lds
mov
popf
out
popf
pop
mov
mov
loope
repz
pushf
mov
icebp
inc
pop
push
or
xor
mov
mov
and
outsb
push
icebp
mov
add
aam
jge
cmp
and
xor
dec
sbb
fldt
sbb
push
out
and
mov
aad
dec
cld
dec
mov
pop
mov
mov
mov
popf
pop
adc
adc
fisttpll
push
cmp
hlt
pop
faddl
dec
int
push
pop
je
insl
fwait
int
adc
bound
ss
int3
sub
or
add
js
lret
es
sbb
adc
push
cmpl
mov
in
sbb
cmp
add
cmp
jb
mov
outsl
sbb
loopne
je
or
adc
add
scas
sub
adc
and
fcomps
add
sbb
icebp
pop
aas
leave
cmp
or
push
cmpsb
xorl
sub
lahf
push
xchg
xor
icebp
pusha
fisubrs
adc
adc
nop
cmp
xchg
ja
adc
lret
nop
sbb
out
mov
mov
out
pop
nop
sti
cmp
pop
push
cmp
xor
das
scas
daa
inc
or
pop
in
pushl
pop
jb
lock
addr16
imul
popf
inc
inc
ret
xor
cmpsl
sbb
xor
int3
pop
add
and
pop
and
dec
popf
outsb
cmp
lds
pop
sbb
inc
cmp
mov
sbb
popf
es
mov
and
dec
hlt
test
aaa
in
stc
lcall
cld
bound
mov
mov
addr16
cmpsb
cmp
sbb
shrb
hlt
in
mov
xchg
rorl
dec
rcr
xor
stc
lods
fsubrl
adc
js
cmp
push
mov
mov
mov
push
js
push
vpunpckhbw
mov
sub
popf
sub
int3
dec
sti
decb
cmc
mov
jl
popf
out
aas
push
adc
xor
mov
and
sahf
push
jno
add
ret
cwtl
scas
inc
lahf
ss
in
sub
or
inc
fmull
fadd
idivb
and
test
jmp
add
fdiv
incb
aad
mov
aam
sbb
aam
cmp
icebp
pop
xchg
jge
xchg
xlat
es
jge
add
sbb
leave
rcrb
mov
mov
divl
mov
cltd
js
jb
js
dec
push
mov
test
out
rorb
into
or
dec
push
popf
into
push
stos
lret
pop
movsb
sarl
in
arpl
lcall
leave
xchg
scas
fwait
aas
push
popf
clc
lods
pusha
and
fwait
xchg
mov
jecxz
fiaddl
dec
rolb
pop
fists
fnstsw
and
push
dec
and
pop
dec
lock
shrd
rcrl
and
jno
adc
aas
cmp
rorb
fcmovb
aaa
xor
jne
xor
sub
sahf
add
gs
cmpsb
mov
push
das
in
pushf
ret
dec
pop
icebp
movsl
fcmove
mov
push
movsb
jno
jp
jns
rcll
xchg
mov
addl
pushf
xlat
cltd
aas
out
mov
js
and
subb
dec
out
sbb
mov
mov
lock
popa
out
cmc
jns
lea
int3
das
bound
stos
in
aaa
fdivs
xchg
fmul
jmp
cmp
int3
scas
mov
das
or
cmpsl
inc
pop
mov
push
inc
xor
insl
dec
rol
sub
sbb
orb
in
jbe
ljmp
cld
and
enter
and
mov
jne
mov
push
adc
movsb
ret
popf
mov
or
lret
add
lods
mov
add
jl
clc
mov
bound
lods
out
ficoml
jns
xchg
mov
subb
xor
jg
jae
lds
pop
jg
lods
sbb
jge
xor
sbb
ret
popf
movsb
sarb
stos
sbb
nop
mov
imul
cmpsb
push
xor
lahf
fwait
aad
dec
jae
and
loope
aas
sbb
pop
shr
xchg
push
adc
les
sbb
xchg
jl
test
push
jle
int3
push
fdivrs
test
xchg
frstor
daa
dec
loopne
add
fdivrl
pop
mov
fwait
adc
sbb
mov
in
adcb
xor
dec
jg
scas
xor
arpl
jge
jge
mov
repnz
mov
jbe
cwtl
dec
sub
ret
mov
pop
call
dec
fdivrs
pushf
xchg
inc
cmpsl
pushf
push
jle
pop
lods
out
test
cmp
sub
mov
incl
or
adc
dec
mov
or
imull
sub
loop
ret
movsl
loopne
mov
je
int
jmp
dec
push
and
lods
mov
fwait
mov
pop
cmpsb
mov
icebp
insl
cltd
nop
and
sub
inc
adc
jecxz
adc
and
pop
ljmp
popf
or
js
dec
stos
pop
test
int
xchg
aas
sub
daa
add
kxorw
bound
test
cli
cld
repnz
and
cltd
addr16
insb
xchg
cld
fcmovnu
ss
cld
jmp
sub
inc
adc
and
or
sbb
inc
cltd
ljmp
xor
add
mov
dec
in
and
push
xadd
sti
jb
test
pop
and
outsb
jp
dec
adc
sbb
arpl
ds
cmpsb
and
lods
jbe
inc
or
outsb
aas
adc
lahf
repz
sbb
lods
pop
int3
sub
pop
jg
clc
arpl
xchg
std
pop
mov
into
cmc
mov
push
jp
sbb
mov
add
mov
jg
dec
xor
mov
xlat
daa
jbe
mov
test
arpl
out
add
stos
xchg
inc
cmp
fidivrl
dec
mov
adc
into
out
mov
or
int
adc
les
addr16
inc
inc
std
stos
rcr
mov
xchg
dec
push
js
cmp
jp,pt
cli
add
push
and
lea
rcll
arpl
mov
sti
push
pop
gs
stos
lret
pop
jbe
xlat
aad
inc
jecxz
cmp
repnz
test
mov
leave
mov
cmp
and
mov
xor
imull
or
lret
sbb
sub
mov
arpl
jo
pop
jmp
mov
addr16
pop
pop
stc
jp
xchg
movsb
arpl
stos
mov
push
dec
xchg
pop
cwtl
scas
cmp
mov
shr
lea
pop
pop
dec
and
cltd
js
sbb
mov
lods
lahf
cmp
mov
pushf
mov
or
mov
dec
mov
rorb
lcall
imul
mov
inc
inc
push
lock
movsb
aam
pop
mov
push
mov
xchg
lods
inc
mov
sub
push
and
cmpsl
repnz
adc
fdivr
cs
ljmp
push
lea
int
fstl
shl
ret
ret
xor
dec
add
and
mov
push
sub
push
nop
lds
pop
cmp
jbe
insl
out
mov
mov
and
mov
gs
pushf
dec
scas
sysret
and
out
shll
xchg
mov
xor
fldt
test
pop
aaa
jmp
or
and
sahf
mov
xchg
das
popf
shrb
stos
push
fstps
mov
into
cmp
sti
sbb
ss
shll
mov
jg
pop
pop
in
xchg
into
shll
inc
add
mov
lock
fdivrl
sbb
insb
lock
test
sar
xor
rcrb
out
pop
fsubs
loop
add
cmp
mov
mov
sub
clc
out
imul
mov
pop
push
push
cltd
in
mov
insl
cs
cltd
inc
xchg
xor
cwtl
pop
stos
les
dec
add
mov
pop
xor
xchg
push
jecxz
jno
and
xor
jmp
pop
xchg
dec
fcmovnb
xlat
sub
push
nop
mov
sbb
adc
jl
xchg
inc
pop
jns
aam
cmp
cmpsb
xchg
pop
movsl
lea
add
nop
cs
sahf
push
cmpsl
dec
inc
arpl
test
clc
ja
repz
je
adc
inc
in
fiaddl
fistpll
sub
test
dec
sbb
cmp
aas
ss
mov
sahf
test
in
and
cld
loopne
mov
in
xchg
mov
repnz
push
test
inc
inc
inc
js
testl
rclb
jp
sub
fdivs
bound
icebp
cmc
loop
bound
test
xor
pop
add
xchg
aam
repz
push
mov
shll
jae
filds
jbe
mov
mov
sbb
lcall
and
aad
mov
sti
movsb
dec
in
adc
mov
leave
sub
cmpsb
lahf
jmp
fmuls
bound
inc
pop
and
dec
xor
ret
sarl
lcall
mov
jb,pt
iret
push
xchg
icebp
mov
test
rol
push
mov
leave
and
popa
xor
sub
in
add
fldenv
js
pop
xchg
lods
je
movsl
and
test
dec
hlt
xorl
adc
jns
nop
and
push
mov
icebp
mov
push
cmpsl
outsl
arpl
cmp
sub
ja
shlb
sbb
cli
insl
cmp
fdivrs
mov
jns
mov
outsb
sub
pop
mov
je
cld
scas
sbb
mov
repnz
sub
dec
or
inc
popf
out
dec
adc
jno
lock
inc
sub
jp
lock
and
out
sar
push
jb
jno
scas
or
and
hlt
repnz
js
push
pop
or
fcmovnu
popf
addr16
push
fdiv
icebp
xchg
xor
loope
fbstp
xlat
push
or
cs
arpl
and
xrelease
dec
fadds
mov
cmpsb
cli
test
lds
dec
xchg
push
pop
dec
lcall
jle
mov
out
in
sbb
aas
popa
fimuls
sti
call
add
adc
mov
add
cmp
cwtl
out
mov
rcl
add
cwtl
mov
push
dec
or
add
int
int3
or
jno
or
mov
sbb
repz
jg
divb
jmp
cwtl
mov
jbe
fidivl
cmp
mov
pop
iret
cld
rcll
pop
fildl
cli
dec
aas
push
xchg
cmp
cli
xlat
movsl
hlt
sub
xor
jecxz
push
sti
insb
mov
les
pop
repnz
in
ret
dec
popf
and
xchg
jno
or
call
or
dec
ss
sub
xchg
dec
ja
idivb
sub
push
clc
repz
gs
nop
daa
rolb
add
and
jecxz
ret
roll
int3
es
data16
aam
mov
add
mov
mov
pop
rcll
sbb
mov
dec
pusha
mov
mov
inc
lds
mov
mov
scas
aam
jmp
test
scas
nop
incb
inc
in
in
pop
lret
wrmsr
adc
mov
mov
inc
jae
push
rorl
pushf
fcmovnu
sbb
insb
loopne
and
dec
out
xor
mov
iret
call
orl
aas
fildll
movsb
lea
push
mov
cmp
test
leave
push
xchg
js
cmpsl
push
inc
adc
arpl
lods
dec
hlt
frstor
ret
mov
sub
pop
icebp
jns
xor
sub
fnsave
dec
mov
fsubrp
xchg
adc
roll
xor
mov
addr16
inc
js
lock
and
lahf
add
add
int3
xor
pop
loop
mov
ds
pop
adc
mov
lret
pop
pop
mov
sub
mov
lahf
mov
inc
iret
repnz
fstl
lock
mov
inc
loop
lcall
adc
push
inc
stc
lret
jne
and
mov
pop
adc
pop
loopne
test
bound
inc
pop
mov
inc
mov
je
xchg
test
mov
stos
cld
jg
inc
daa
jle
mov
sub
mov
in
jle
mov
bound
mov
mov
daa
add
push
cmp
mov
jl
lock
aam
imul
arpl
xor
push
cltd
lock
shr
adc
and
sub
jb
hlt
pop
out
lahf
add
insb
and
test
cmp
push
cmp
icebp
test
jns
sub
stos
mov
mov
lcall
mov
jge
jecxz
xchg
pop
xor
inc
or
enter
out
fdivrs
lcall
cmp
cmpsb
gs
cmp
fmull
mov
iret
das
mov
push
arpl
jbe
rcl
or
cs
mov
test
test
imull
mov
fnstenv
rcr
lret
cmc
jge
add
xchg
xor
insl
rolb
imul
adc
es
sbb
int
cmpsb
and
inc
inc
xchg
loop
mov
adc
js
in
mull
push
jmp
out
or
or
pop
shr
insb
loop
adc
insl
push
jnp
movsl
xor
test
lods
add
jle
test
mov
and
pop
add
enter
dec
mov
mov
repz
push
pop
aas
rorl
lods
jb
fstpt
jle
scas
cmp
or
ljmp
jmp
scas
jmp
mov
sbbl
addr16
mov
push
adc
dec
sbbl
xor
xchg
add
adc
or
call
push
ds
cmpsl
imul
call
test
push
movsb
jecxz
pop
in
cli
mov
pop
fcom
cmpsl
xchg
jecxz
loopne
mov
cmpsl
add
out
or
mov
repz
add
sbb
inc
test
mov
push
push
mov
adc
or
adc
scas
or
add
lods
and
pop
mov
nop
fcmovnu
out
lcall
adc
dec
mov
les
pop
add
lods
xor
pop
stc
nop
dec
jg
or
jo
ror
in
mov
cli
dec
xor
mov
sub
mov
jne
punpckhdq
or
test
mov
jmp
lcall
test
insl
ficoml
insl
data16
push
sbb
cmp
sub
adc
cmpsl
mov
xchg
sub
cmpsb
mov
out
fwait
adc
arpl
std
hlt
repz
mov
into
jns
mov
adc
sub
fwait
orl
add
mov
mov
adc
pop
insl
pop
xor
sbb
in
cmpsl
xchg
mov
cmp
push
ljmp
mov
clc
dec
add
jmp
xchg
pop
sbb
cmc
sub
daa
mov
mov
hlt
cs
aaa
adc
push
add
sbb
subb
outsb
ficoms
negb
inc
imul
cmp
daa
test
adc
loopne
jp
add
and
cs
cmp
mov
lods
imulb
imul
mov
mov
cmc
insl
fs
dec
mov
dec
cmpsb
cld
nop
insb
arpl
jmp
sahf
xor
out
cmpsb
mull
pop
ror
mov
or
mov
mov
in
imul
adc
mov
sub
mov
in
push
outsl
xchg
sub
mov
xchg
int
cmpsb
xchg
int3
lahf
mov
cli
cmp
add
cmpsl
cltd
lods
dec
cmpsl
xor
mov
and
inc
pop
imul
push
xchg
bound
jne
js
test
stc
inc
xor
mov
rcrb
pop
jp
in
mov
push
xor
mov
add
jne
and
dec
sbbb
xchg
jnp
or
insb
inc
sub
outsl
mov
xchg
dec
fwait
mov
mov
adc
adc
cmc
or
mov
jle
push
jns
scas
pop
mov
call
aaa
cmp
jb
xchg
dec
repnz
jne
mov
aad
icebp
inc
mov
out
in
or
and
or
mov
loop
jg
setl
repz
jno
mov
push
pop
dec
xchg
mov
in
jle
dec
mov
cli
pop
sti
pusha
hlt
xchg
sub
or
sub
sub
inc
icebp
or
leave
inc
fnsave
mov
orl
aad
lret
xor
add
dec
cs
stc
or
sub
mov
out
lcall
test
pushf
gs
or
imul
leave
mov
inc
daa
mov
mov
repz
fwait
mov
sti
xor
mov
lock
lock
out
jno
pushf
fcoml
adc
mov
int3
push
fnstcw
adc
pop
rorl
dec
outsl
push
push
iret
push
fcoms
lods
and
jns
xchg
cmp
dec
cwtl
imull
mov
jmp
std
mov
or
je
fisubl
push
add
in
mov
enter
or
lret
ds
aad
rcl
mov
push
icebp
sbb
insl
inc
rorl
sbb
sub
dec
lods
push
xchg
sub
xchg
aam
mov
psrad
cmp
ret
cwtl
lds
inc
push
fcomp
inc
int
add
and
outsb
xlat
xor
xor
sbb
mov
ret
jae
imul
rcl
movsb
icebp
daa
mov
outsl
xor
movb
inc
mov
mov
cltd
pop
insl
inc
cltd
pop
mov
inc
sbb
pop
or
addr16
stos
into
xchg
vsubss
dec
mov
hlt
xlat
outsb
fwait
mov
mov
and
mov
fnstsw
mov
call
push
dec
xor
cli
jg
cltd
mov
test
pop
mov
int
dec
iret
pop
and
pusha
fsubr
mov
push
lods
cmpps
push
inc
mov
subl
jle
movsl
mov
aas
lret
add
pop
les
insl
into
flds
sahf
fsubrs
pop
pusha
movsl
mov
inc
pop
pushf
jp
imul
mov
cmp
repnz
sti
arpl
gs
pop
jmp
fildl
inc
stc
push
adc
lods
xchg
add
lcall
push
xor
xchg
aam
daa
leave
sub
data16
stos
aam
pop
and
push
inc
xchg
ljmp
push
and
nop
aad
cmp
inc
pop
xor
xchg
sbbb
adc
sub
incb
push
add
out
fwait
int
scas
or
xor
cmpsb
pop
mov
shlb
mov
jno
es
push
push
sub
pop
in
cmp
jl
xchg
pushf
xchg
repz
push
inc
jge
enter
lahf
arpl
sub
xchg
iret
mov
xchg
sbb
push
sbb
inc
inc
inc
mov
mov
sbb
dec
push
lock
jb
pop
testl
daa
test
lret
push
inc
cmpsl
lds
xchg
mov
xrelease
in
jg
sar
cmp
sbb
xor
dec
iret
xorb
xchg
fwait
shlb
stos
xchg
mov
pop
mov
add
push
xlat
popf
dec
adc
sub
sbb
xchg
sub
sbb
mov
in
mov
xchg
or
cs
int
inc
and
addl
lds
cmp
inc
push
call
movb
push
sbb
push
mov
shlb
cmp
sarl
outsb
mov
cmp
push
push
cmp
imul
jl
adc
mov
jae
imul
fdivs
jecxz
mov
fwait
inc
les
lock
sub
jecxz
pop
cmp
inc
lea
xor
or
ljmp
adc
mov
popf
push
mov
imul
mov
add
fiaddl
std
pop
aas
sub
scas
aaa
outsl
sarl
inc
lods
push
add
pop
testb
movsb
push
mov
mov
sub
sbb
jp
lcall
lcall
pop
popf
xor
repz
pusha
dec
inc
cmc
mov
scas
dec
cli
addb
arpl
loopne
cmp
mov
or
in
add
jg
jnp
mov
sub
imul
mov
je
ja
es
cld
mov
leave
lret
push
inc
call
inc
aad
xor
or
popa
lahf
icebp
inc
in
std
repnz
jb
jp
xchg
mov
or
inc
stc
cmpsb
push
and
inc
ja
lret
addr16
andl
in
sbb
or
jmp
cwtl
in
mov
in
stos
stos
jo
dec
pop
add
and
shll
dec
hlt
cmp
mov
aam
xlat
push
popa
pop
add
test
stos
push
lret
push
leave
pop
aas
or
sbb
push
imul
fistps
xchg
iret
xor
and
push
cld
lds
das
mov
push
and
and
ja
out
mov
pcmpgtd
adc
jp
bound
pop
xor
add
push
or
pop
addr16
mov
rolb
jo
jmp
push
frstor
and
jne
dec
lea
cmc
add
mov
aaa
lods
and
pop
xor
fdivrl
mov
jno
movsb
mov
fcompl
jmp
jl
in
add
pop
pop
mov
je
dec
in
lods
dec
out
test
aaa
jg
sub
ror
xor
mul
cmp
adc
loop
std
loop
stos
cltd
call
sbb
inc
and
test
inc
fdivrs
xchg
xchg
gs
cwtl
popa
es
scas
push
outsb
mov
sarl
iret
shll
xchg
aam
lret
xlat
dec
adc
ret
es
out
das
and
adc
mov
push
push
std
ss
out
mov
daa
mov
fidivrl
lock
aaa
and
and
repz
ds
add
pop
mov
add
push
add
inc
rcrl
fisttps
sbb
xchg
outsb
inc
mov
insb
ret
mov
scas
int
push
push
test
sbb
mov
and
push
mov
push
xor
iret
xor
bswap
mov
jl
inc
sbb
lock
lds
mov
mov
fdivs
jo
les
cltd
fsubr
jae
jne
mov
sub
or
test
xchg
cmp
adc
or
mov
pushf
call
mov
add
ljmp
ljmp
adc
repnz
sub
pop
lock
xor
out
mov
sub
pop
push
inc
rclb
push
daa
xchg
fistpll
adc
add
mov
pop
sub
mov
mov
xchg
xor
ss
stos
sbb
or
cmp
and
fsubrl
in
decb
ret
hlt
ds
cmpsl
in
jecxz
cmc
jnp
dec
pop
xor
hlt
mov
push
add
rcrl
shlb
iret
popa
fwait
adc
cmpsl
sbb
pop
sbb
dec
sub
cmp
adc
nop
ja
int
sbb
mov
lea
sahf
mov
jne
add
push
sub
test
xor
out
mov
sub
mov
cli
imul
add
mov
sbb
dec
ja
xorb
jecxz
lret
mov
cmp
cwtl
jae
jmp
or
jg
rcr
lock
sahf
movsl
push
push
sbb
loopne
ss
dec
pop
jae
pop
add
inc
aam
jmp
test
add
xor
dec
pop
jae
cmc
adc
add
mov
aas
popf
test
clc
pop
popf
cltd
lret
in
movsb
cmp
lods
mov
mov
sub
js
insb
outsb
out
jb
cmp
insb
mov
mov
cmp
call
jnp
fildll
outsl
ljmp
mov
pop
inc
clc
imul
ja
cmp
pop
xchg
jmp
cmp
xor
aaa
rclb
push
sub
push
dec
push
fnstsw
subl
dec
pop
pushl
js
pop
xor
sbb
out
and
xlat
shr
mov
push
dec
xchg
jnp
test
sbb
xor
mov
jne
test
das
nop
ss
and
jl
idivl
fidivrl
mov
stos
pop
cmpxchg
fsts
adc
jns
mov
in
dec
std
pop
sub
jbe
xlat
pop
push
jns
xchg
cmp
mov
loop
loop
movsb
mov
mov
test
push
lods
out
testl
jno
cwtl
and
adc
and
rclb
out
stos
mov
or
mov
cmc
jp
das
pop
and
xchg
scas
or
cli
adc
mov
mov
mov
in
stos
fldl
gs
daa
imul
mov
mov
and
aad
or
jge
aad
cs
xor
dec
sti
cmpsl
pop
ss
sbb
scas
pop
shrl
jae
pop
and
ljmp
add
je
je
data16
pushf
push
dec
fisubrs
test
inc
in
pushf
mov
mov
fmul
sarb
ret
mov
fdivrs
cmp
xchg
pop
shll
in
sub
roll
xlat
adc
sahf
push
add
xlat
scas
ret
je
mov
lea
ret
or
cmp
mov
imul
insw
fs
insb
rcl
pop
dec
jle
jecxz
sbb
inc
mov
cli
jp
adc
sub
jne
xchg
mov
push
fcmovu
mov
cwtl
xlat
rcr
int3
idivb
rclb
rclb
push
mov
stc
pop
enter
or
outsb
test
cmp
dec
jmp
call
inc
sub
push
pop
push
leave
push
fildll
enter
mov
rcl
pop
ror
mov
adc
and
hlt
mov
in
std
sub
xor
std
inc
sub
icebp
lret
pop
inc
push
cmp
jg
and
sbb
sbb
outsb
xor
sbb
pop
call
icebp
mov
pop
imul
adc
mov
shrl
jno
push
scas
into
pop
pushf
xor
js
push
outsl
add
push
aaa
push
dec
in
pushf
outsb
sar
mov
mov
ljmp
mov
lock
pop
mov
mov
lret
insb
jecxz
inc
jmp
out
dec
mov
jmp
jecxz
test
loope
inc
sub
lds
mul
inc
sbb
test
js
ljmp
fdivrp
clc
or
cmp
inc
cmpl
sbb
push
div
add
daa
xor
mov
pop
jnp
adcl
push
sbb
pop
sub
cmpsl
dec
push
jo
outsl
pop
sbb
adc
adc
push
add
cmp
adc
aas
and
push
ss
fildll
inc
push
pushf
bound
stc
jae
subb
and
rorb
popf
mov
scas
xchg
stos
jle
lods
and
pop
dec
pop
cmp
lock
scas
add
decl
test
mov
mov
xor
ror
xor
test
orl
fdecstp
dec
leave
push
dec
push
nop
imul
cs
mov
xor
int3
mov
fidivl
insl
xchg
popa
data16
push
inc
movsb
mov
dec
int3
stc
mov
pop
test
mov
fldenv
cwtl
pusha
loope
lret
and
pop
jmp
test
jmp
or
int3
pop
cmp
xchg
jp
jo,pt
cmpsb
push
lock
lret
mov
vmovntdq
lret
insb
addr16
fimuls
loopne
xchg
aam
repnz
and
aaa
adc
nop
movsb
xchg
les
les
push
divl
adc
insl
addr16
mov
pop
mov
or
jp
lcall
mov
adc
sub
jmp
add
xor
and
xorl
imul
mov
into
push
or
jne
sub
bound
icebp
cmpsb
lret
clc
mov
push
cmpsl
aam
mov
pop
das
fsubs
test
sub
movsb
dec
loope
pusha
mov
jecxz
pop
add
and
cmp
or
jmp
pop
fimull
dec
inc
sahf
cmp
outsl
rclb
mov
dec
lret
mov
arpl
inc
mov
sbb
sbb
push
xor
pusha
mov
cmp
lret
xchg
mov
outsl
or
jbe
dec
rclb
aaa
stos
pop
cltd
scas
in
in
sbb
cld
ret
or
inc
cwtl
std
or
push
jns
out
addr16
mov
mov
sbb
push
push
mov
das
xchg
fisubrl
pop
sbb
and
mov
pop
sub
push
insl
fnstsw
push
inc
xchg
ss
add
fnstenv
aaa
shl
push
cmp
addl
add
lea
jae
das
shlb
jle
sub
cld
jg
fstpl
pop
mov
xchg
dec
enter
jno
test
cmpsl
push
jp
icebp
fcompl
cld
pop
movsl
xchg
std
sarl
into
jo
enter
fsub
mov
jl
push
aaa
je
sbb
loopne
pop
jo
mov
mov
dec
adcl
pop
scas
sbb
popa
pop
mov
mov
inc
mov
int3
aaa
sbb
lea
arpl
in
cmp
ss
dec
cmp
xor
mov
movsb
xchg
gs
ds
push
dec
or
inc
fninit
push
lods
shlb
and
and
lahf
sbbb
lods
push
lcall
push
inc
jns
in
jae
cmp
and
and
sar
pop
sahf
xor
xor
test
mov
aam
lea
mov
decb
sbb
or
inc
in
lret
push
arpl
pop
dec
cmp
mov
mov
fsub
scas
in
imul
pop
xchg
push
push
push
inc
xchg
stc
mov
mov
in
sbb
test
rcl
dec
and
mov
dec
test
cmp
sbb
xor
js
and
in
push
sub
dec
mov
outsl
leave
adc
jnp
fcmovnu
lcall
sbb
pushl
add
push
fcoml
ljmp
lahf
es
inc
dec
insl
push
in
jno
mov
cmp
js
add
mov
inc
xor
adc
je
mov
sbb
mov
push
xlat
js
clc
xor
add
in
lret
push
rcrl
pushf
and
filds
mov
fadd
xchg
les
aaa
adc
lods
call
ret
adc
push
dec
pop
rorb
dec
out
dec
or
and
inc
adc
adc
xchg
hlt
loop
aas
and
rol
cmp
add
add
push
push
mov
je
leave
inc
das
adc
aad
push
dec
dec
xor
imul
test
adc
test
adcb
push
cmpsl
sub
inc
mov
jbe
test
push
xchg
dec
lods
jge
mov
sbb
mov
sete
aas
movsl
aad
dec
je
mov
ljmp
in
push
std
loop
xchg
daa
divl
xchg
repnz
mov
and
fsubs
add
data16
fmuls
push
ficompl
lret
test
xchg
sub
ja
cmpsl
push
in
jge
push
lock
push
bound
xor
jg
sbb
in
hlt
popf
jbe
mov
push
mov
lock
sbb
jno
jl
lods
cmp
xor
mov
scas
adc
or
push
adc
inc
and
faddp
push
sbb
mov
pusha
aad
mov
gs
push
rcll
rorl
xorl
cmc
cmpsb
jbe
int3
xchg
mov
in
icebp
sub
leave
in
add
jp
dec
mov
push
test
jo
mov
loopne
inc
jge
pop
add
fldt
jbe
js
jl
scas
mov
aad
adc
push
jb
and
out
push
jns
fucom
inc
outsb
rcll
int3
pop
fisubrl
sbb
popf
mov
dec
mov
mov
inc
inc
pop
and
fistl
roll
sahf
add
inc
xor
aam
pop
orl
xchg
shll
pop
xorb
jb
test
push
push
insb
jl
dec
das
xchg
loop
das
in
call
jae
addr16
push
flds
mov
out
cmp
dec
arpl
xchg
loope
jmp
xchg
or
cmc
mov
and
mov
pusha
mov
mov
mov
mov
push
adc
inc
xchg
or
sbb
icebp
bound
shr
out
popf
lea
pop
or
rclb
sub
rclb
jl
imul
mov
push
cmp
shlb
orl
inc
and
xor
mov
push
jle
lcall
insb
mov
jle
into
ret
and
loope
fistl
fsubrl
fdivs
mov
mov
push
fwait
sub
adc
scas
fsubl
iret
rol
cmpsl
call
xchg
jno
scas
mov
shlb
add
das
cmp
mov
fs
pop
jno
inc
mov
test
clc
scas
data16
push
push
lcall
xor
int3
dec
pop
clc
mov
cmp
inc
mov
lods
jg
nop
repnz
lcall
mov
jle
daa
xchg
in
inc
in
in
mov
mov
mov
xchg
mov
ret
dec
jo
mov
loope
jmp
leave
movsb
lret
dec
jno
les
ss
movsb
in
inc
inc
dec
outsb
in
fmuls
pop
stos
ljmp
xchg
and
popa
and
push
fcmovbe
xchg
cmp
push
sarb
xor
jge
cmc
mov
test
inc
pop
jbe
jnp
inc
inc
ljmp
xchg
inc
in
out
enter
nop
fistl
insb
aam
mov
and
arpl
pop
mov
popa
stos
cld
xor
pop
mov
jmp
jno
lea
xchg
or
xchg
lret
inc
lcall
cwtl
jp
cmc
int
shl
xchg
les
addl
sbb
ret
push
cltd
mov
adc
mov
stos
jge
and
imul
dec
jg
mov
xchg
sbb
mov
es
cs
jno
pop
pushf
pop
mov
push
sub
lds
and
or
adc
pop
mov
or
lds
mov
jge
leave
shlb
mov
shl
mov
icebp
lds
xor
mov
ss
call
sahf
mov
cltd
test
mov
cltd
loopne
int3
pop
stos
into
lea
cli
mov
data16
sbb
dec
addr16
push
xchg
mov
cmp
repz
stos
jnp
push
and
addr16
xor
cmp
ja
addr16
negb
pop
and
mov
aas
and
outsb
mov
orb
mov
add
rolb
sahf
sub
mov
mov
js
aam
je
add
push
mov
das
icebp
aaa
fistl
rol
imul
or
pop
lret
pop
mov
pop
mov
rol
jne
mov
mov
scas
je
sbb
movsb
in
loopne
popf
mov
ret
mov
mov
or
pop
std
aam
xchg
xchg
ljmp
adc
cmp
ja
xchg
push
addr16
and
lods
add
mov
divb
cli
inc
xchg
in
dec
mov
jb
jno
cs
stc
cmc
roll
repnz
inc
nop
aad
scas
nop
mov
jbe
test
ror
push
pop
fcmovnb
mov
loope
mov
and
js
and
into
cmp
pop
out
in
dec
out
pop
enter
arpl
jmp
push
add
sub
mov
shl
adc
mov
jle
push
cmp
sub
push
mov
jae
sbb
adc
push
mov
and
repnz
jge
jb
lds
in
notb
add
mov
mov
sahf
ficoms
clc
cld
sbb
dec
sub
dec
ss
in
mov
addr16
outsl
push
adc
cmp
mov
and
icebp
test
dec
cmp
cli
pop
or
and
lds
insl
outsb
push
and
ret
fldenv
mov
in
ja
dec
and
rcll
fwait
cmpsl
fidivrs
filds
adc
sbb
ljmp
pusha
jb
les
les
cmp
imul
cmp
jne
inc
lods
mov
std
xor
adc
scas
jae
mov
jo
add
lods
stos
xchg
add
popa
js
les
scas
imul
xor
sub
imul
mov
test
dec
mov
loopne
and
dec
les
das
je
dec
ret
mov
adc
jmp
stos
rorl
iret
loopne
mov
cmpb
mov
das
clc
cmpb
push
stos
pop
pop
shlb
sbb
sbb
inc
addb
daa
lret
scas
lret
shlb
shrb
dec
mov
pop
xchg
stos
xor
fimull
fwait
and
sub
or
cmp
jmp
xor
lock
call
pop
jbe
push
mov
in
lret
rorb
push
cmp
mov
xchg
imul
addr16
out
out
cmp
pop
aaa
push
mov
pop
inc
fildll
xchg
pusha
mulb
jnp
not
ljmp
jns
cmpsl
and
in
xchg
imul
lds
aam
xor
shll
cmp
shrb
call
lock
inc
dec
inc
and
lahf
sub
and
jge
pop
jbe
jae
out
out
pop
shll
dec
xor
jecxz
hlt
sub
sti
mov
xchg
and
or
lahf
ljmp
ret
pop
push
add
aad
add
ljmp
xlat
test
pop
pop
or
jne
ret
xor
xchg
adc
sub
loopne
pop
jge
insb
push
xchg
out
inc
inc
sbb
sbb
push
andb
mov
mov
inc
cli
ja
inc
cmpsl
sbb
and
lret
add
sub
pop
test
mov
adc
ds
dec
rolb
mov
popl
and
cmp
cld
cmp
mov
loopne
hlt
jbe
add
daa
or
fdivrl
movsb
insl
pop
fistl
dec
cli
test
and
pushf
pop
cmp
pop
xchg
cs
sbb
add
xchg
in
movsb
jmp
div
xorl
mov
lret
mov
pop
imulb
mov
and
sbb
dec
mov
arpl
cmp
xchg
mov
mov
scas
xor
pushf
or
pop
pop
arpl
mov
mov
fstpl
imul
test
xlat
imul
mov
pop
cmpsb
loope
sbb
fwait
xchg
xchg
pusha
pusha
mov
stos
jle
subl
js
and
mov
cmp
mov
scas
inc
jnp
mov
ja
dec
or
cld
cmp
jb
mov
fnstsw
aaa
into
push
aas
inc
ret
int3
cmpsl
and
dec
mov
adc
icebp
fwait
sub
and
add
xorb
imul
xchg
add
dec
and
mov
mov
inc
in
inc
inc
bound
test
in
lea
cmpsl
adc
popa
mov
cld
mov
inc
sbb
bound
in
movsl
dec
subl
cmp
je
or
cmpsl
test
pop
insb
inc
push
dec
nop
lahf
inc
mov
fildl
pop
stc
test
pop
jae
push
shlb
addr16
pop
fistpll
add
sbb
cld
lea
pop
lock
xchg
jo
sub
in
cmp
adc
sub
movsb
sbb
mov
leave
pop
pop
ficoml
scas
insl
jl
bound
shrl
sbb
in
call
les
add
test
mov
sub
push
int3
or
nop
mov
pop
add
sub
jle
jmp
filds
sub
test
cmp
dec
pop
inc
dec
and
add
pushf
jmp
aaa
sbb
pop
add
sub
jl
mov
lahf
cmp
ss
sub
ficoms
lods
sub
js
adc
movl
fildll
leave
sahf
cmp
mov
stos
into
insb
ja
pop
push
outsl
inc
into
mov
js
into
mov
movsl
jns
cmpsb
notl
leave
imul
mov
rolb
mov
inc
jl
mov
adc
in
jo
push
ret
adc
sbb
popa
or
mov
sub
popa
jg
mov
xor
sahf
and
loop
sbb
push
jnp
push
insb
fsubs
mov
loopne
sub
popf
adc
inc
test
out
xor
mov
test
pop
fwait
sti
mov
add
fisubrs
addb
aam
pop
jno
subb
sub
push
out
mov
fidivl
push
sti
push
sub
adc
enter
stc
dec
push
xchg
or
sub
pop
jns
in
jbe
inc
repnz
movsl
nop
aas
jl
pusha
pop
cmpsb
mov
push
jecxz
mov
xchg
inc
dec
mov
icebp
divb
imulb
fists
cld
or
cmp
fcom
jl
add
jbe
sub
scas
call
or
cmp
adc
nop
mov
test
mov
dec
loopw
pop
out
add
mov
je
clc
ds
sbb
in
dec
push
stc
sti
es
sbb
mov
lahf
fstps
arpl
mov
dec
jnp
cmp
cmp
daa
fmul
and
pusha
pop
and
push
iret
es
and
jle
orl
or
xchg
clc
stc
neg
add
dec
xchg
mov
movsb
or
iret
push
ss
cmpsl
mov
bound
jmp
jmp
ja
jno
outsl
enter
in
and
push
dec
inc
jbe
scas
mov
insl
jno
jge
jle
cli
fnstenv
movsl
push
xor
xlat
out
or
test
mov
stc
pop
mov
jne
push
frstor
mov
xlat
arpl
lcall
outsb
addr16
ficomps
rorb
pushf
xchg
xchg
shll
or
movsb
push
jmp
sbb
inc
sbb
dec
adc
mov
xor
jp
rolb
repz
xchg
fcoml
xchg
dec
and
stos
or
cltd
cmp
aaa
lret
inc
out
jae
lods
adc
stc
sub
mov
sub
incb
inc
mov
xor
sti
gs
and
in
cwtl
jo
dec
inc
and
pop
mov
fidivl
or
dec
filds
inc
gs
and
cmp
shrl
pop
call
xorb
clc
cmpsb
ljmp
add
std
dec
jg
mov
lea
imul
mov
mov
mov
xchg
lea
incl
ret
pop
pushf
lds
insb
sbb
mov
pop
mov
mov
and
div
jns
loop
daa
xchg
shlb
pop
stc
adc
or
xor
int3
test
shlb
out
lcall
inc
out
push
adcb
sbb
mov
or
cmpsb
int
pushf
mov
pop
jmp
pop
les
jbe
and
sbbl
inc
add
aas
les
push
cltd
in
movsb
pop
call
sbb
xor
mov
aas
cmpsb
sub
lods
mov
xchg
pop
xchg
lahf
pop
repz
js
movsb
jmp
pop
ret
addb
repnz
negb
lahf
cmp
out
cs
inc
jl
lock
dec
mov
push
arpl
js
jge
push
fwait
or
xchg
ss
es
cli
js
lods
sub
arpl
jmp
sub
mov
or
jecxz
mov
inc
mov
inc
push
or
sbb
addl
int
mov
add
pushf
jae
sarl
jno
test
ljmp
xor
outsb
xchg
sub
mov
ret
jl
add
jno
repnz
out
xor
mov
and
and
imul
sub
mov
nop
pop
outsl
dec
inc
mov
testb
sub
std
imul
cmp
insb
lods
adc
inc
outsl
pop
scas
sbbl
and
aas
jnp
xor
xor
push
mov
cmp
sarl
movsl
popf
movsb
cmp
push
repz
jbe
popf
pop
shr
loope
outsb
jp
pushw
jae
push
mov
lock
jge
jb
aaa
cs
into
jae
push
sbb
lcall
sahf
dec
and
xchg
push
sbb
xor
popf
dec
mov
inc
in
pop
xor
lods
or
add
mov
cs
inc
aam
testl
fmuls
clc
or
xor
adc
mov
cmp
fistpl
mov
cmp
add
jecxz
mov
sub
inc
call
cmp
fdivrs
pop
cmp
cmp
popa
out
jl
mov
pop
add
fistps
pusha
pop
and
mov
mov
inc
nopl
test
test
repnz
imul
mov
cld
lock
test
lock
add
je
add
aaa
jne
push
mov
out
movsl
add
jmp
shll
jecxz
test
arpl
mov
xlat
dec
lods
inc
pop
idivb
pop
add
js
adc
sbb
xor
rcl
data16
cmp
sbb
adc
inc
test
or
push
pop
dec
cmpsb
repz
inc
sahf
jnp
add
push
scas
lods
loop
fldt
add
ret
add
xchg
scas
stc
js
sub
sbb
sbb
mov
pop
mov
sub
add
jnp
push
pusha
div
cmp
pop
push
mov
fmul
jg
mov
popf
sub
sbb
fimull
stc
mov
jbe
mov
inc
mov
aam
mov
pushf
cmp
or
and
adc
inc
mov
test
dec
repnz
xor
loop
fimull
push
out
lods
inc
mov
cmp
int
sub
test
insl
push
cli
imulb
push
cld
daa
sub
sbb
rcll
jnp
outsb
rorl
or
int3
aam
rcrl
faddl
jo
and
in
mov
pop
jno
xor
push
and
and
repnz
aas
fwait
inc
pop
and
dec
jge
jg
pushf
mov
loop
cltd
insl
add
mov
movsl
inc
jl
and
stos
mov
lret
add
shlb
jg
fdivr
add
loope
sbb
into
xchg
sub
mov
push
test
push
jne
cmpsb
mov
and
mov
push
cli
inc
into
push
fldt
and
mov
adc
sarb
pop
popf
inc
xchg
xchg
in
or
pop
push
inc
cwtl
adc
dec
fcmove
jno
push
mov
xor
xchg
add
or
and
xchg
push
pop
xor
jne
inc
mov
dec
lds
jnp
insl
mov
movsb
negb
xchg
xlat
in
xchg
std
pop
mov
pop
cltd
fucomip
shll
dec
popf
popf
mov
inc
lods
push
sahf
nop
push
fistpll
ss
shlb
test
jecxz
jno
adc
repz
fimuls
jge
mov
fnsave
les
mov
mov
fdiv
sbb
fsubr
pop
stc
push
es
push
push
sbb
ja
outsb
imul
test
mov
sub
inc
or
aas
pop
push
outsl
jno
shl
nop
aam
sub
cld
popf
mov
xchg
enter
movsb
and
push
add
pushf
dec
test
mov
jle
push
jo
jle
xlat
test
das
dec
pushf
mov
dec
xlat
unpcklps
shrb
inc
lea
cli
adc
sub
into
insl
aaa
stos
or
xor
loope
imull
add
aaa
ror
in
pop
popa
sub
cltd
cmp
and
or
add
pusha
or
out
iret
mov
scas
inc
daa
inc
in
mov
xchg
aad
add
jecxz
fadds
jle
inc
push
aam
adc
push
xchg
scas
mov
insb
out
test
mov
or
inc
dec
cli
jo
cmp
xchg
dec
cmc
call
ror
pop
call
mov
out
pop
mov
push
add
cli
jl
std
and
pop
dec
mov
stos
clc
jb
cmp
sub
sbb
or
movsb
rol
dec
loop
pop
jns
mov
inc
ret
imul
lret
inc
cmp
cmp
xchg
int
outsb
cwtl
sbb
jnp
movsl
mov
call
mov
adc
and
sbb
jmp
mov
movsl
gs
pop
pop
inc
adc
std
xlat
add
dec
leave
cmc
xchg
dec
and
loop
lcall
pop
sahf
inc
xor
inc
fistl
mov
hlt
push
adc
pop
sbb
xor
inc
mov
sbb
sbb
enter
lods
out
cltd
xlat
xchg
mov
mov
mov
out
pop
lret
cmp
pop
ss
pusha
add
mov
jne
gs
mov
enter
jg
push
cld
push
insb
clc
jmp
aas
mov
pop
push
adc
inc
mov
push
cmpsl
push
movsl
push
nop
pop
mov
call
cmp
outsl
mov
jbe
jmp
in
in
ja
mov
xlat
test
aad
or
les
sbb
jge
sbb
rcrb
aas
in
popa
hlt
xchg
jmp
cmc
jg
sbb
stc
and
xchg
out
sahf
hlt
mov
push
stos
scas
jle
adc
imul
iret
sub
iret
xor
mov
ss
fstps
sbb
mov
es
ficomps
adc
xchg
xchg
push
sub
daa
sbb
xchg
push
nop
hlt
pop
xor
les
pushf
cwtl
fdivrl
mov
bound
or
je
gs
insl
jle
out
pop
xchg
inc
cmpl
jle
mov
add
aad
jbe
test
pop
mov
xor
cli
adcb
shlb
cli
push
pop
dec
xor
loop
xchg
rcrl
mov
insl
mov
ljmp
aad
jle
inc
pop
jne
rcl
ficomps
jp
jno
mov
push
cwtl
dec
adc
ljmp
lret
ret
add
stos
vpsubd
adc
sbb
xchg
dec
or
stc
or
jmp
lcall
pop
xchg
cld
nop
das
push
js
fisttpll
or
shll
adc
add
lret
cmp
dec
mov
mov
arpl
xor
pop
cld
inc
test
push
sbb
dec
incl
pop
push
sbb
hlt
add
fdivrs
lret
cmp
mov
subb
idivl
sub
repz
jecxz
mov
and
inc
rclb
scas
pop
push
call
ret
jne
loop
movsb
ret
cmp
jecxz
into
push
lods
cmpsb
push
xchg
adc
jbe
in
pop
xchg
mov
and
in
ss
stc
push
push
xor
loope
jns
lret
std
pop
xchg
cld
in
cmpb
or
jle
push
lcall
pop
mov
mov
push
ficoms
mov
icebp
or
push
rorl
cmp
mov
sbb
mov
inc
xchg
add
jg
add
insl
adc
adc
out
fadds
sub
mov
mov
enter
cmpb
sub
dec
icebp
add
xchg
jbe
or
adc
jae
or
inc
pop
outsb
scas
sbb
mov
stos
mov
mov
mov
jne
sbbb
dec
inc
nop
jns
imul
cmp
mov
push
xchg
jge
test
or
lahf
jge
jle
jge
lea
jbe
das
push
mov
mov
dec
test
xchg
mov
inc
in
mov
jnp
lods
pushf
repz
shlb
sbb
dec
outsl
jmp
mov
loope
in
sub
dec
outsb
inc
daa
clc
sbb
and
pop
int
out
lods
into
pusha
outsb
les
imul
xorb
sarb
leave
jg
shlb
lds
pop
jae
cld
sbb
inc
mov
cmpsl
xchg
lahf
leave
daa
xor
out
inc
push
idiv
outsb
mov
mov
out
xchg
fmull
add
xchg
outsl
mov
xchg
pop
mov
out
stos
pop
pop
pop
std
aaa
jle
imul
bound
or
jne
clc
inc
adc
or
scas
in
push
adc
and
sbb
bound
mov
xlat
xchg
ret
adcl
push
lods
imul
ret
test
mov
cmp
shll
ret
mov
fsub
jae
jnp
out
loope
fwait
sbb
jno
mov
call
sub
je
sub
inc
push
dec
mov
mov
and
cmpsl
add
cmp
out
jno
and
sbb
xor
inc
add
pop
movsb
mov
imul
loope
stc
xchg
aas
cmp
inc
adc
loop
outsl
mov
pop
sbb
outsl
pop
inc
faddl
test
in
lock
or
loopne
add
dec
call
lret
leave
or
sbb
xlat
daa
in
dec
imul
shrb
add
int3
pop
xchg
ret
movsl
cmp
mov
mov
sub
int3
insl
int3
mov
enter
xor
add
in
negb
pop
shrl
lock
das
bnd
inc
lds
or
fldl
or
or
sbb
jl
mov
mov
sbb
pop
sarl
stc
sub
add
lea
mov
daa
jne
mov
jge
fistps
sub
and
in
mov
xchg
inc
cld
sti
enter
pop
arpl
xor
cmc
test
sbb
std
cwtl
ljmp
push
sarb
pop
sti
addl
adc
and
cmp
loop
jmp
shll
and
sti
add
lcall
jnp
out
jmpw
negl
xchg
adc
xchg
push
in
mov
outsb
fimull
test
loop
rep
shlb
test
xor
pop
push
loopne
cmc
mov
test
ljmp
aad
xchg
or
lahf
dec
jl
int
push
std
rclb
scas
lret
pop
nop
xchg
add
jb
jmp
push
dec
mov
add
dec
andl
push
or
jb
ljmp
mov
inc
xchg
jecxz
aad
aam
mov
sbb
and
js
mov
fs
add
outsl
sahf
gs
dec
push
repz
fmul
or
test
imul
add
clc
repnz
test
clc
jae
pop
insb
dec
adc
test
jle
pusha
push
xor
push
mov
aas
push
out
das
mov
dec
sbb
xlat
sub
sbb
mov
pusha
imul
not
adc
push
xor
push
mov
mov
push
leave
dec
jnp
and
inc
mov
fwait
movsl
pop
cmp
xor
loop
mov
mov
ljmp
into
push
arpl
out
ficomps
jnp
add
jmp
ficoms
adc
lret
pop
mov
cmpsb
fcmovnu
mov
add
add
xchg
out
mov
inc
out
cmc
add
dec
push
add
sub
adc
mov
or
or
loope
stos
add
pop
imul
sbb
aam
neg
in
xor
shlb
les
sub
mov
pop
sub
rcl
addl
orb
xor
lcall
adcl
jg
jge
test
mov
or
repz
std
sti
mov
popa
dec
xor
mov
mov
xchg
addl
pop
adc
inc
movsb
dec
sbb
sbb
outsb
jl
inc
pop
xchg
cs
sub
insb
popa
xlat
mov
mov
push
and
cmp
mov
jecxz
call
arpl
ret
in
cmp
sbb
sbb
jge
mov
ret
lds
xchg
jecxz
cmc
push
test
mov
mov
xor
repnz
andl
mov
in
xlat
dec
mov
in
shrl
shl
and
outsb
dec
adc
dec
scas
or
in
cwtl
in
mov
adc
dec
xchg
cmp
jne
pop
mov
mov
aaa
dec
add
les
mov
in
adc
loop
lds
xor
push
out
mov
out
inc
push
repz
jae
js
rcl
adc
sub
xorl
pop
fwait
in
mov
jmp
stos
mov
mov
and
lahf
ljmp
and
or
dec
xchg
imul
push
loope
aam
mov
xor
arpl
repz
dec
clc
push
and
addr16
stos
xorl
push
adc
repnz
fstl
in
imul
loopne
inc
sbb
dec
sbb
out
incb
adc
jne
lods
aas
cmp
clc
js
lea
cmc
cwtl
add
sub
cld
push
out
add
push
dec
xchg
push
lret
aaa
mov
inc
mov
xchg
cmp
ljmp
or
push
sub
adc
sahf
sbb
shll
xchg
mov
pop
and
and
jns
push
and
sbb
imul
pusha
jo
lea
sbb
xor
and
mov
jge
cmp
xor
in
out
jge
int
add
repnz
mov
scas
mov
adc
sbb
stos
clc
jo
sbb
pop
mov
ja
cmpsl
imul
fisubrl
js
fdivl
in
lock
out
mov
inc
cwtl
mov
rcr
aaa
pop
fwait
add
dec
sbb
aaa
je
dec
or
mulb
bound
aam
xchg
loopne
addr16
lcall
hlt
arpl
push
jmp
cmp
and
jp
shlb
or
xchg
fsubl
jp
add
sub
sahf
mov
fisubrs
and
or
imul
arpl
sbb
leave
outsl
outsl
std
push
jg
shll
leave
pop
sbb
sub
cltd
rclb
ja
adc
pop
mov
xchg
ss
pop
stos
jl
negb
or
popa
adcb
sti
data16
fcomi
jg
lock
inc
leave
je
dec
jl
xor
push
vmovmskps
aaa
push
mov
add
hlt
lcall
mov
jns
jge
and
out
insb
mov
push
enter
push
ljmp
aad
adc
dec
sub
jae
mov
mov
fisttpl
in
or
arpl
push
ja
sub
lret
insb
dec
aaa
cmp
int
negb
cmp
pop
ret
clc
or
jle
daa
sub
jge
push
imul
jmp
incb
out
sub
jl,pn
jns
cmp
xor
data16
pop
inc
setae
ret
xor
add
or
mov
fsts
sbb
sbb
repz
adc
in
leave
push
cmp
sbb
test
clc
cwtl
or
sti
jmp
fdivrl
int3
and
push
and
xlat
fsub
xorb
cld
or
jno
mov
push
mov
or
enter
mov
inc
outsl
sbb
test
xor
inc
aaa
cs
fstpt
sbbl
je
add
xor
int
xchg
cmc
push
ljmp
push
popf
call
add
and
mov
fistpl
lods
rorb
addl
lret
mov
subl
dec
fs
rcll
mov
popf
inc
adc
arpl
mov
iret
jmp
sbb
mov
push
adc
push
add
jg
scas
and
in
mov
pop
clc
pop
repnz
mov
mov
hlt
je
push
or
dec
push
sbb
popa
les
push
mov
out
jo
pop
mov
push
mov
jo
jne
scas
xchg
in
cmp
or
jnp
lret
inc
push
push
inc
mov
push
test
rol
stc
mov
cli
adc
popa
xchg
add
mov
pop
sahf
lea
jle
sbbb
lods
dec
shrb
shrb
dec
push
aad
add
or
stos
out
mov
insb
jno
mov
and
or
dec
fcoms
sub
bound
cld
or
dec
imul
add
xchg
test
xlat
imul
push
cmp
mov
shl
mov
xchg
add
das
add
popa
jne
adc
faddl
jns
lds
pop
mov
into
or
inc
pop
inc
mov
sarb
cmp
push
mov
mov
adc
mov
push
push
mov
es
sarb
push
jne
or
into
xorb
sub
mov
nop
pop
fdivrs
jno
loopne
out
jmp
xchg
push
decb
shlb
filds
jg
popf
xor
add
push
push
lret
pop
jg
add
cld
sarl
cltd
arpl
in
dec
xor
cwtl
or
xchg
iret
push
lods
mov
mov
or
mov
out
dec
xchg
xor
rclb
mov
call
cmpsb
pop
sbb
aam
pop
outsl
mov
inc
insl
fbld
mov
frstor
push
push
cmp
data16
push
pop
adc
jnp
rolb
cmc
add
into
sbb
inc
lea
cmp
jno
popa
lock
out
data16
js
addb
mov
push
pop
push
xlat
mov
arpl
sub
pop
aam
filds
lods
nop
aaa
or
or
adc
pop
mov
out
xchg
lods
ss
sarl
fldcw
loope
nop
cltd
stc
sub
inc
mov
mov
int
arpl
lock
sub
pop
rcll
jo
icebp
popa
data16
iret
frstor
fs
push
jnp
push
inc
mov
jb
aaa
nop
es
std
dec
mov
xchg
jge
and
test
jb
sbb
mov
test
in
ret
sub
jnp
or
pop
sub
mov
or
mov
enter
cmp
mov
mov
std
pop
add
add
sub
mov
mov
or
repz
pop
fs
stc
xor
jecxz
jecxz
inc
ficompl
cmp
out
push
mov
adc
push
dec
adc
stc
sub
lcall
mov
push
arpl
cmpsl
les
and
shl
mov
inc
jmp
pop
ds
add
test
dec
add
xor
in
lds
in
jle
xchg
jb
and
pop
scas
scas
cmp
je
shlb
test
sbb
divb
es
xlat
mov
negb
push
ds
test
lahf
or
out
in
jbe
cli
cld
scas
lock
fbld
sbb
loop
enter
push
mov
gs
xchg
inc
nop
dec
stos
adc
vpunpcklwd
push
ffree
pop
mov
pop
into
ljmp
nop
ja
fldenv
mov
pop
push
loop
dec
jbe
mov
xchg
dec
pop
insb
in
ljmp
adc
sahf
xlat
in
and
shrl
inc
outsb
mov
rcrl
enter
shll
push
sbb
in
xor
dec
or
xor
mov
pop
jecxz
inc
ja
lret
mov
out
cwtl
mov
mov
into
push
andb
insl
dec
imul
shlb
int
xchg
clc
cmp
jge
inc
les
ficoms
mov
pop
add
pop
ss
mov
xor
mov
lods
addb
imul
dec
test
pop
rorb
addr16
push
sti
push
push
mov
xchg
jge
stos
and
int3
or
adc
sbb
mov
cltd
enter
pop
sti
dec
cmp
sub
shl
inc
ljmp
movsl
dec
xchg
push
jbe
dec
sbb
mov
add
lcall
aad
mov
mov
js
fcom
fwait
aad
out
mov
das
neg
or
xor
imul
inc
mov
cmc
cmpsl
mov
hlt
xorl
repnz
lret
mov
test
lcall
lds
sub
js
mov
sbb
push
dec
inc
mov
inc
jnp
inc
jg
mov
jmp
or
sub
mov
add
xchg
cmc
mov
movsb
addr16
andb
pushf
inc
pusha
jno
jne
repnz
mov
hlt
out
jb
cmp
fsubl
addl
push
xchg
aaa
popa
xlat
xchg
jo
adc
mov
enter
mov
jp
add
pusha
mov
cli
scas
push
inc
mov
mov
test
push
nop
xor
mov
push
add
pop
mov
pop
add
jnp
fidivrs
mov
leave
out
hlt
jle
fcmovu
inc
mov
mov
inc
jge
jmp
xlat
data16
sub
or
mov
pop
movsl
pushf
xlat
xchg
jns
push
stc
pop
xlat
fsubp
std
push
lods
sub
and
mov
dec
sbb
push
fwait
std
sub
jb
in
mov
cwtl
arpl
loope
fldl
in
jne
dec
or
enter
xchg
test
jmp
out
mov
stos
pusha
callw
ffree
lea
add
pop
stc
hlt
mov
and
xor
mov
dec
inc
mov
adc
popl
fwait
or
pop
cwtl
in
aad
push
mov
out
cmp
call
in
xor
dec
in
cli
xor
mov
fistps
call
dec
or
lds
dec
xor
aam
loope
push
pusha
jp
sub
jbe
and
sbbb
jo
pop
xchg
mov
push
jmp
loopne
inc
pop
repnz
in
xchg
sbb
aad
dec
lret
lret
dec
mov
xchg
enter
and
pop
shl
cs
inc
cltd
jns
xor
sbb
xchg
sub
fmull
push
xor
cmpl
lcall
fsubrl
mov
dec
lret
sbb
ja
hlt
iret
cmp
icebp
mov
in
orb
add
and
in
jp
fiadds
rcl
xor
dec
inc
das
jae
rcr
dec
mov
in
adc
dec
std
inc
and
shlb
bound
jne
adc
cs
insb
pop
jno
addr16
popf
je
in
loopne
fistpl
cltd
js
stc
dec
mov
pushf
cmpb
insb
aas
lret
shrl
inc
out
dec
mov
mov
push
call
inc
loop
push
dec
mov
or
pushf
cmp
jmp
pop
arpl
testb
sub
mov
mov
cld
or
dec
aam
es
lahf
fdivrl
mov
notb
sbb
mov
test
sub
daa
mov
dec
mov
sahf
aas
mov
mov
sub
sbb
jmp
cmpsb
aaa
cmpsb
inc
fsub
cmp
xchg
jnp
pushl
and
movsb
dec
mov
pop
lods
daa
fdiv
sub
repnz
enter
pushf
mov
scas
mov
jmp
dec
shll
adc
adc
imul
out
stc
xor
movsb
adc
movsb
jnp
fs
or
inc
xchg
loope
cltd
lret
sti
mov
mov
jmp
xor
jmp
fidivrs
cmpsb
pop
adc
mov
mov
repnz
sub
inc
mov
or
pop
fdivrs
or
dec
add
icebp
mov
mov
int3
cltd
bound
imul
adc
sub
std
push
into
arpl
fidivl
aas
rol
dec
mov
imul
je
cmp
scas
dec
cmp
jae
gs
push
imul
movsl
pop
aas
adcb
lcall
xchg
scas
fdivrl
pop
jnp
and
push
adc
repz
lahf
sbb
push
out
jl
xchg
imul
shlb
jle
popa
pop
adc
leave
lods
loop
add
cmp
jge
test
test
pop
adc
pop
scas
jo
pop
in
jmp
jp
or
ret
movsb
cmp
lods
jl
dec
out
jo
inc
mov
subl
out
rorl
daa
xor
pop
nop
mov
cmp
adc
addl
push
xchg
and
insl
jecxz
sub
xlat
mov
divl
mov
jle
ljmp
mov
out
test
std
pop
add
in
pop
fisttps
fnstcw
pusha
mov
popa
je
cmp
fwait
cmpsw
lcall
mov
or
sahf
jmp
imul
add
adc
mov
xchg
jmp
add
mov
sahf
xchg
mov
nopl
je
lods
sub
sbb
out
inc
lcall
int
add
cmc
popa
and
inc
rorl
inc
ret
popa
jb
shrl
add
les
rol
divl
jp
shlb
mov
andl
mov
adc
mov
das
inc
xchg
test
xor
inc
testb
pusha
sarb
xchg
aaa
push
popa
inc
ret
inc
mov
test
stos
dec
mov
in
call
pop
loopne
cmpsb
dec
adc
inc
popf
popa
movsl
sub
pusha
sarl
add
inc
stos
in
callw
adc
mov
inc
dec
sti
inc
dec
jo
sbb
lods
pop
cmp
inc
sti
cld
inc
mov
loop
push
int
pop
addr16
push
push
cmp
imul
sbb
jno
cmpsb
pop
movsl
nop
out
cmpsl
xchg
clc
iret
xor
xlat
jnp
cmpsb
push
jmp
in
lods
adc
pop
xor
sahf
xor
sbb
pop
cmc
pop
lods
cmp
mov
sub
insl
gs
test
pop
repnz
addw
movsb
ret
mov
pop
pop
and
xor
sbb
mov
sbb
or
in
inc
call
xchg
xchg
cmp
push
xchg
lcall
int3
lea
dec
cmp
mov
pop
dec
popf
dec
push
data16
shlb
inc
and
jb
test
add
sbb
stc
pop
push
or
rol
aaa
xor
push
or
cmp
xor
pop
leave
in
add
in
sbb
push
push
pop
sahf
stos
lret
xchg
pop
into
adc
adc
adc
inc
xor
xchg
xor
jo
jecxz
adc
dec
inc
xor
cmc
nop
pusha
lahf
lret
adc
push
xchg
mov
mov
mov
cmp
fidivrl
imul
lods
pop
mov
dec
jmp
fidivl
xlat
lret
rcll
movl
cmp
add
or
mov
sub
xchg
out
lcall
jnp
into
jg
out
mov
decl
mov
pop
loop
out
outsb
cmp
out
fsubrs
loope
les
loope
jae
jge
lods
lods
mov
and
dec
movl
push
jecxz
mov
xor
xchg
or
incb
repz
out
ss
mov
push
movsl
outsl
xor
push
orb
in
sbb
inc
sub
das
jnp
cmp
sub
ss
movsl
lods
mov
test
cld
ja
movsb
notl
daa
dec
dec
sahf
movl
jg
sub
pop
and
shlb
pop
adc
out
mov
dec
mov
jp
sti
jo
add
mov
pop
outsl
pop
sub
fldl
ljmp
push
cmpsb
fstpl
cmp
or
xorb
or
sub
pusha
stos
pop
push
adc
popf
ret
adc
shrb
testl
jle
scas
mov
mov
and
sbb
mov
ja
stos
dec
sbb
xor
lea
and
xor
fisubrs
shlb
shlb
dec
aaa
inc
push
ret
popa
fisubl
xchg
xor
sub
and
shl
mov
shr
mov
adc
mov
test
data16
aad
repnz
aam
add
mov
das
push
dec
dec
push
or
popf
or
lret
test
and
lahf
fsubrs
cvtpi2ps
push
sbb
mov
arpl
mov
fsubl
das
imul
jnp
xchg
xchg
mov
lcall
cmp
popa
dec
hlt
imul
dec
sarb
jo
xor
mov
pop
add
fsubr
pop
das
jp
pcmpgtw
jle
shlb
aaa
lahf
and
in
nop
fimull
and
dec
into
int
inc
cmc
in
ja
xor
orb
jmp
iret
and
or
jp
aas
xlat
imul
outsl
mov
push
xchg
dec
cmc
in
dec
pop
int
movsl
cmp
sub
cld
std
pop
and
pop
imul
add
jle
push
pop
inc
or
push
imull
and
loop
mov
push
js
xchg
clc
mov
pop
adc
add
xchg
and
aam
stc
es
mov
in
mov
mov
pop
mov
inc
into
jno
rcl
repnz
sbb
sti
dec
pop
cmp
xchg
ss
rcll
xlat
jl
adc
mov
jge
push
fmul
faddl
fidivrl
jmp
call
xchg
fwait
add
inc
pop
scas
popf
leave
push
out
jnp
inc
andb
lock
dec
filds
arpl
inc
shl
loope
ja
cmp
in
mov
mov
mov
fistpll
scas
cmp
clc
cmpsl
popa
int
repnz
mov
or
inc
loopne
mov
jb
push
iret
jb
in
mov
and
out
lret
inc
push
xchg
loope
xorb
xchg
cwtl
adc
mov
arpl
scas
mov
movsl
push
in
inc
push
xchg
lock
adc
jnp
shl
jne
sbb
fistl
xchg
pop
das
pop
movsb
mov
fwait
cmp
jp
lock
sub
stos
mov
fmull
dec
mov
fs
xchg
jmp
dec
test
adc
outsb
push
mov
push
add
lret
cwtl
inc
ret
testb
jmp
push
je
add
scas
nop
imul
push
in
pop
lret
inc
clc
out
mov
pop
sahf
scas
out
adc
das
mov
dec
mov
sbb
xchg
or
xor
scas
fstpt
mov
dec
je
xor
pop
push
nop
xchg
sbb
and
mov
mov
pop
mov
jmp
bound
sub
into
sub
imul
out
and
jp
repnz
inc
outsl
shl
mov
jb
idivb
inc
in
fistl
cmp
mov
mov
mov
outsl
pop
add
add
jnp
nop
test
xlat
jns
pop
lea
xor
addr16
sti
or
push
xor
jne
sub
xor
sbb
rcll
adc
cmpsb
dec
push
pop
repz
cmp
fisubl
mov
or
jmp
push
shrl
adc
xchg
push
test
inc
inc
out
out
mov
sbb
repnz
nop
in
jno
pop
aas
jae
sub
xchg
aas
clc
jnp
or
adc
dec
sahf
and
cwtl
cltd
xchg
and
adc
pop
lods
cmp
gs
lds
stos
push
push
xchg
ret
lods
iret
sbb
push
mov
stos
decl
jno
lods
xor
jb
inc
sub
mov
std
push
cli
and
int3
and
jecxz
dec
movsb
test
dec
dec
mov
pop
jnp
cmc
xchg
lahf
jmp
rorl
loopne
jo
je
xchg
add
in
add
and
test
or
push
dec
dec
xchg
mov
sub
pop
ficomps
jns
or
ret
jns
pop
xchg
mov
jl
repz
sbb
add
mov
shl
xchg
sbb
sarl
fisttpll
sbb
cmp
ljmp
negb
orl
fwait
pop
sarb
and
cmpl
shrb
dec
clc
cltd
scas
fwait
xchg
mov
xor
push
mov
cmp
mov
inc
mov
push
popf
lds
mov
pop
jns
add
jp
add
test
cmp
jb
pop
dec
imul
movsl
dec
or
repnz
js
in
ljmp
jae
mov
dec
xchg
insb
fstl
movsl
and
adc
ljmp
xor
out
inc
into
in
push
jge
pop
sub
enter
loop
xchg
mov
divl
lods
xor
scas
xchg
fstl
aam
jmp
push
stc
das
in
mov
in
fsubs
and
hlt
movl
cltd
cli
pop
or
push
das
cli
xchg
pop
pop
add
insl
das
and
mov
mov
push
push
mov
mov
lods
idiv
imul
xchg
mov
mov
or
std
xchg
ss
pop
adc
mov
sub
cmp
sbb
mov
scas
loopne
jmp
dec
mov
sti
inc
pop
lret
out
mov
mov
mov
cmp
adc
popf
jp
mov
test
lods
mov
psrlw
mov
psrad
xor
lea
xchg
std
lcall
push
leave
sub
int
push
enter
lds
adc
mov
enter
jns
mov
sti
out
push
mov
mov
inc
mov
inc
sub
adc
xchg
or
and
push
scas
gs
imul
jae
dec
cmp
jnp
sbb
pop
mov
jl
jno
int3
add
inc
mov
jmp
dec
test
or
mov
lds
lcall
xor
cmp
sub
or
sub
sbb
repz
xchg
cmp
popfw
sub
cmpsb
sub
roll
pop
xchg
cmpsb
cmpsb
sbb
fnstenv
add
aad
sbb
repnz
jb
inc
mov
pop
push
sbb
add
mov
ficoml
xor
test
cmpsl
shlb
push
jo
or
pop
or
data16
mov
pushf
loope
add
jmp
inc
test
mov
xchg
sbb
stos
push
add
mov
mov
and
cmp
jmp
pop
xchg
nop
inc
mov
pop
jb
pop
imul
push
xor
pop
insb
in
fs
add
and
push
ret
pop
cmp
jb,pt
push
sub
mov
inc
sbbl
jne
cld
inc
push
int
push
add
addr16
loopne
adc
dec
shll
inc
push
sbbb
loop
push
pop
push
aam
inc
or
pop
mov
test
repz
mov
gs
lea
push
inc
push
aas
and
clc
sbb
mov
sar
fisubs
jle
dec
jmp
rcrb
inc
orl
mov
dec
dec
mov
out
mov
push
push
cmp
cmp
stos
in
mov
adc
frstor
mov
dec
jno
lea
fwait
push
fwait
cmp
sti
fbstp
sub
bound
pop
cmp
mov
add
push
mov
dec
sub
mov
and
cmp
in
push
push
push
push
pop
shl
frstor
sbb
cs
fsubrp
not
xchg
cmpsb
add
mov
jg
loop
cmpsb
call
push
mov
outsl
stos
cltd
sahf
push
in
push
cmpsl
outsl
lcall
mov
push
vpsrlq
test
in
mov
sub
bound
test
and
fstps
mov
sbb
inc
pop
ficoml
add
add
out
adc
fdivrl
or
subb
dec
call
daa
add
mov
adc
push
pop
imul
out
inc
gs
xor
in
mov
scas
movsb
mov
in
push
ret
iret
gs
mov
pushf
xor
mov
or
fnstsw
jg
mov
stos
lahf
mov
xchg
incl
pop
adc
shll
loope
pop
out
popa
movups
pop
jo
clc
dec
movsb
in
adcl
rcrl
push
shrb
aam
test
mov
sub
or
fadd
add
icebp
mov
mov
aas
jge
stc
push
shrb
enter
lret
repz
addr16
jns
outsb
xchg
pop
sub
jne
jae
push
fistps
adc
pop
push
cmc
cmp
dec
push
xor
scas
enter
inc
xorl
dec
fdivrs
sub
test
pop
jle
add
adc
movsb
lret
in
lret
add
idiv
cmp
hlt
daa
mov
add
rolb
shlb
jle
sub
sbb
adc
iret
aaa
sub
cmp
mov
xchg
xchg
pop
mov
mov
scas
mov
fisubrl
leave
sarb
test
xor
mov
push
mov
xchg
jl
scas
add
imull
arpl
jecxz
jnp
inc
test
inc
mov
lea
pop
fstps
push
dec
pop
mov
xor
mov
xor
jnp
or
sbb
mul
jnp
arpl
dec
hlt
or
out
and
inc
aam
insl
in
addr16
xchg
lds
add
or
divl
jne
push
jg
pop
sti
push
bound
out
dec
jae
jb
dec
rolb
adc
test
pushf
psrld
xor
mov
stc
or
jnp
add
inc
bound
sub
push
sub
and
or
loope
arpl
lret
out
je
pusha
shrl
xor
into
iret
push
andl
dec
dec
push
mov
add
push
mov
movsb
push
daa
cmp
add
mov
in
inc
push
sub
xchg
fistps
into
lret
jmp
cwtl
call
sahf
iret
js
pop
iret
sahf
or
cmp
mov
push
sub
insb
pop
aad
and
xor
std
scas
sbb
adc
and
adc
xchg
fcom
iret
sbb
xchg
inc
insl
in
and
cmc
fnstenv
jne
push
bound
and
cltd
sub
outsl
test
lds
mov
scas
add
cmc
jp
pusha
inc
mov
loop
adc
data16
inc
cli
lods
jge
push
jge
sbb
sahf
shll
lds
roll
pop
inc
xchg
mov
mov
into
loopne
mov
push
dec
ret
jmp
inc
sub
inc
mov
dec
inc
shlb
mov
jae
rcrl
rorl
xor
inc
adc
pop
xchg
cltd
inc
ja
add
mov
mov
xchg
dec
push
and
mov
lret
scas
roll
icebp
je
orb
mov
dec
and
mov
mov
cmpl
jmp
adc
or
in
xchg
cwtl
shlb
dec
das
std
jnp
movsb
mov
xor
jg
aad
jne
movsb
pop
xor
into
jg
js
rcr
sub
sub
movsl
into
aad
loope
jmp
decl
adc
inc
out
mov
add
mov
jmp
imul
pop
jo
insl
fldln2
xchg
clc
cmp
mov
mov
repz
or
stos
add
dec
cwtl
insl
mov
repnz
ret
adc
push
sub
inc
xchg
push
repnz
xchg
cmp
arpl
push
nop
mov
add
adc
loopne
outsb
test
inc
add
test
sub
sub
aaa
dec
fs
cmp
outsl
call
aam
gs
mov
dec
inc
mov
mov
stos
loope
inc
cld
jg
stc
xchg
cmp
inc
jg
xlat
aad
inc
dec
out
mov
pop
add
adc
dec
xlat
ret
push
xchg
add
push
and
jp
lea
in
cmc
add
rolb
mov
lahf
hlt
or
xlat
mov
clc
sarb
cmp
jmp
cmp
mov
inc
lock
or
mov
sub
faddl
pop
leave
leave
inc
adc
jb
and
mov
fincstp
add
adc
or
lret
cmp
ljmp
out
push
leave
xchg
xor
mov
dec
xchg
jns
aam
fninit
jne
push
test
dec
jmp
repz
decb
xor
loopne
fld
or
ja
les
bound
sbb
nop
push
ds
por
std
bound
bound
sar
push
call
cwtl
cli
pop
fsubrl
and
cmp
call
xchg
sub
add
or
das
clc
scas
push
stos
add
jp
test
dec
xor
in
lea
xor
fidivrs
sub
nop
scas
push
in
imul
xchg
sbb
fimull
clc
push
inc
push
adc
sbb
fistps
mov
outsb
push
fisubl
dec
jp
mov
adc
psrlq
repnz
pop
pop
shlb
xchg
mov
js
push
and
leave
push
sbb
cmp
jnp
in
ss
pushf
stc
sbb
jp
aad
call
aas
cmp
lock
mov
in
les
and
inc
add
add
adc
mov
sbb
dec
outsb
jp
and
sub
repz
xor
movsb
jl
stos
jg
dec
mov
fisubs
pushf
arpl
mulb
mov
into
mov
scas
mov
jmp
cmc
inc
mov
pusha
dec
cmpsb
xor
mov
adc
adc
pop
pop
mov
push
test
enter
adc
bound
push
push
dec
call
add
shrb
movsb
pop
pop
cmp
js
dec
insl
sbb
adc
cld
xchg
fisubl
or
fbstp
mov
cmc
or
pop
test
rorl
shll
out
xor
lock
pop
cmc
mov
scas
movsl
imul
dec
or
xlat
mov
repz
fldln2
mov
push
mov
fidivrl
pop
lahf
notl
xchg
cmp
jmp
and
adc
mov
cltd
fiadds
mov
cs
jb
sub
js
mov
lahf
or
in
andb
mov
scas
notb
xchg
scas
mov
and
movb
pushf
loop
xchg
inc
test
insb
aas
sbb
mov
incb
adc
inc
mov
jmp
sbb
mull
clc
jecxz
xchg
addr16
fmull
scas
lods
fcomps
je
int
rorl
aas
mov
adcb
cmc
lods
jp
rolb
out
push
loope
addr16
xchg
push
ds
inc
inc
sbb
dec
out
mov
cmc
sti
and
les
lret
fs
cli
ja
out
adc
inc
fcmovu
cwtl
fidivrs
hlt
push
enter
sub
lret
shll
subl
cs
xchg
inc
xor
je
sarb
push
cmc
in
push
nop
mov
cmc
push
sub
push
nop
jo
imul
cmp
xchg
adc
xorl
pop
mov
mov
ljmp
pop
push
or
aas
das
or
xorb
movl
push
and
xor
pop
addl
insl
jecxz
or
imull
add
aaa
jp
and
ss
sub
fwait
loopne
divl
lods
pusha
mov
inc
mov
sbb
push
mov
jmp
repz
cmp
ret
icebp
dec
insl
out
pop
stos
cmp
xchg
xchg
add
and
dec
mov
jae
jne
gs
mov
mov
push
dec
mov
push
shl
cltd
aad
icebp
sub
movl
in
je
mov
outsl
jl
push
xor
adc
xor
aam
fnstcw
inc
into
clc
mov
mov
pop
andb
rep
mov
lea
push
jo
lods
mov
jo
sub
or
mov
inc
stc
es
inc
ret
dec
je
fnstenv
shr
loop
jnp
daa
adc
sar
mov
jmp
shrb
cmc
and
and
jb
or
mov
sar
leave
ret
mov
or
movsl
sbb
movsl
and
jle
mov
daa
sti
mov
mov
repnz
inc
scas
sub
push
rorb
cmp
mov
xchg
and
in
pop
inc
sub
aas
and
sbb
out
jns
pop
add
inc
xchg
mov
dec
subb
lahf
add
out
iret
push
dec
push
fimuls
mov
mov
clc
xchg
lret
call
mov
xorb
testb
dec
mov
stc
xor
inc
pop
ret
orl
shr
jne
int
mov
ja
jmp
sub
xchg
xchg
or
xchg
std
push
cli
pop
mov
das
nop
mov
xchg
loop
out
dec
xor
icebp
or
les
out
ja
inc
and
popa
loopne
dec
jb
je
pusha
jle
or
adc
imul
cmpl
mov
add
or
aaa
cmp
cwtl
and
lcall
ret
jae
sbb
sti
jmp
xor
testb
xorl
mov
push
sub
xor
dec
shlb
mov
inc
dec
fwait
mov
push
adc
push
jne
push
pop
or
cmpsb
iret
stos
mov
mov
or
sahf
or
int3
divb
dec
xor
pop
adc
cs
push
mov
daa
adc
cltd
mov
pop
add
stc
loop
iret
or
jg
sbbb
movsb
mov
sbb
imul
push
xchg
cmp
mov
int
testb
pop
dec
into
pusha
rorb
fimuls
xorb
ficoms
jb
inc
jno
incl
sub
push
pop
jne
add
int3
cmc
cmp
pop
cwtl
ss
scas
or
xor
ss
adc
pop
xchg
dec
aad
rcll
imul
mov
bound
movsl
push
sub
arpl
dec
movsl
int3
jl
and
ljmp
adc
in
addr16
add
inc
into
xchg
sub
dec
xchg
aam
add
cmp
bound
pop
fidivs
test
fnstcw
popa
jmp
clc
sahf
lret
orl
fwait
jo
add
rol
cli
inc
insl
inc
mov
adc
push
scas
call
mov
push
cmp
orb
out
push
inc
mov
mov
std
or
gs
sbb
jne
and
jle
in
lret
push
adc
push
or
jnp
stc
movb
adc
xor
adc
adc
stos
xlat
xor
fsubrs
lods
pushf
push
xor
push
test
xlat
push
andb
mov
jge
fbstp
and
pop
hlt
shrl
push
mov
insb
insl
lret
jmp
or
popf
lods
push
test
lods
cltd
push
lods
dec
test
insb
mov
ja
sub
mov
push
sar
fs
mov
xchg
fisubs
out
mov
xchg
ret
scas
pop
adc
popf
aam
mov
jge
mov
push
imul
cmpsb
orl
and
sub
sarl
fwait
sar
rcr
aaa
rolb
jg
stos
leave
les
mov
mov
lock
rolb
cwtl
rcrb
mov
cwtl
fsubrs
enter
in
mov
jb
sub
push
xorb
in
dec
gs
sbb
jns
mov
mov
add
inc
dec
rorl
dec
push
jge
in
mov
cmpl
jl
das
or
aam
pop
repnz
ss
mov
add
xchg
pop
aad
ret
jo
push
or
jp
mov
pop
fldcw
push
icebp
push
nop
mov
outsb
scas
push
cmp
jb,pn
cmpsb
mov
mov
adc
es
xorl
sub
repnz
leave
dec
es
sub
ljmp
cltd
xchg
mov
cltd
mov
jno
mov
nop
add
and
fistpl
jne
xor
sbb
fildll
shl
xchg
out
add
add
das
lods
stc
test
iret
inc
xor
scas
and
sub
jmp
imul
cmpsl
jmp
dec
add
mov
shlb
inc
xchg
lea
push
pop
fsubrs
pop
addr16
lret
test
iret
iret
or
jle
xchg
mov
divl
ror
inc
mov
sahf
pop
int
fstpt
or
sbb
popa
pop
sbb
loop
rcl
leave
adc
cmp
inc
lods
pop
add
movsb
sbb
pop
jbe
mov
lea
mov
mov
cmp
in
loopne
in
cmp
adc
mov
pop
push
lea
scas
mov
lods
aas
jne
inc
les
shlb
clc
jg
ret
fucom
aad
jbe
mov
push
dec
push
dec
or
jo
cmpsb
test
int3
hlt
jg
pop
add
sbb
icebp
call
mov
add
fucom
mov
aam
mov
mov
pop
call
test
mov
sub
arpl
lds
jl
xlat
sub
jnp
ss
pop
ret
pop
lret
or
cmpsl
fmull
jbe
mov
add
sbb
mov
mov
jne
outsb
sbb
jmp
or
fsubl
fldt
jb
and
mov
xchg
mov
push
jb
push
mov
push
mov
ja
xchg
xchg
mov
mov
cmp
xchg
cltd
sub
inc
es
cld
cmp
jo
stos
pop
cmp
jae
sbb
mov
mov
xchg
mov
les
sbb
fstpt
inc
dec
add
mov
repz
fisttpl
into
stos
adcl
cmp
jmp
xchg
in
out
pop
call
sub
add
sbb
stos
andl
rorb
icebp
in
push
pushf
xor
repz
adc
mov
sbb
cmpl
push
je
jecxz
mov
mov
out
cmpb
sub
xchg
pop
xchg
jecxz
sbb
adc
test
fiaddl
scas
dec
fistpll
xchg
push
cmp
push
adc
cmpsb
jbe
pop
cmpsb
jne
adc
insl
sub
inc
push
pusha
mov
push
add
pop
insl
fistpl
clc
fsubs
mov
cmc
data16
repz
and
dec
ret
lods
lock
pop
in
test
dec
xor
sub
loope
inc
pop
xor
iret
iret
add
ss
sub
cwtl
sub
shl
jecxz
jecxz
test
js
pop
enter
cltd
mov
jnp
xorb
add
or
cmpsb
mov
adc
jnp
adc
pop
outsb
adc
and
fldl
xchg
mov
add
xchg
or
repz
jl
and
enter
jle
jmp
mov
mov
sub
jg
decb
insl
sub
sbb
cmpsl
inc
mov
sti
in
or
mov
jle
sbb
sbb
sub
xor
cmpsl
gs
mov
mov
inc
adc
sbb
std
xor
mov
ljmp
push
cltd
add
in
dec
adc
mov
mov
sbbb
fmul
dec
outsb
cmp
int
jmp
jl
loopne
mov
outsl
icebp
outsl
sub
jp
sbb
lea
mov
ret
mov
lock
aas
mov
jge
sub
lock
mov
mov
ds
int
push
in
repnz
std
cmp
sbbl
push
lock
jmp
test
fsubl
xchg
cs
cmp
shll
pop
cli
jnp
mov
lahf
pop
cmpsl
mov
add
push
jb
lcall
pop
gs
add
flds
ja
cmp
add
adc
dec
lret
insl
mov
test
xchg
sbbb
mov
sub
mov
adc
push
sahf
icebp
icebp
xorb
mov
ljmp
lods
push
loopne
pop
das
call
fld1
mov
mov
jnp
dec
xchg
testl
lock
insb
ficomps
repz
das
xchg
inc
xor
rolb
inc
jmp
in
adc
mov
jge
cltd
sub
adc
mov
xchg
stos
pop
cld
int3
repz
and
push
pop
add
das
add
dec
stos
add
push
or
xchg
sub
ljmp
mov
shll
into
rorl
fcoml
das
xchg
cmpsb
cld
pop
push
divb
rcl
lods
sarl
jne
mov
inc
test
adc
mov
mov
fidivrs
pop
push
push
lret
sbb
clc
fwait
push
dec
sub
int3
adc
xchg
and
xor
cmp
cltd
mov
mov
aad
mov
and
inc
pop
jg
jns
push
mov
hlt
push
jp
es
popa
hlt
mov
scas
loope
cs
cmp
add
icebp
imull
cmpsb
jb
gs
add
movsl
rcll
sub
std
push
shrb
or
jp
lock
lcall
mov
mov
mov
and
or
mov
gs
out
imul
add
and
cmp
push
jmp
mov
and
out
test
sub
mov
jge
fmul
xchg
cmp
cmp
and
inc
enter
outsl
mov
test
icebp
scas
loop
mov
jmp
call
xchg
push
mov
jno
outsl
cld
aam
cmp
and
unpckhps
jne
sahf
fidivs
pop
mov
push
cmp
push
sub
adc
stos
xor
mov
loop
loopne
insl
popa
shrb
dec
je
bound
loopne
orl
and
sarb
into
sti
mov
test
aas
rorb
sub
inc
jno
pop
insb
popl
jns
stos
rorl
loop
cltd
lea
test
stos
je
mov
into
and
daa
jne
out
pop
scas
out
sahf
stc
and
add
xor
test
shll
imul
lds
pop
cmp
inc
lcall
lret
add
mov
rcrb
cli
xlat
push
xchg
in
dec
inc
pop
inc
arpl
jno
adc
adc
pop
iret
test
lods
add
lds
andl
cwtl
pop
add
in
mov
pop
ret
push
gs
mov
jge
cmp
push
add
fildl
lock
or
inc
es
mov
stos
rol
push
in
pop
mov
pop
call
std
push
pop
sbb
addl
les
pop
xorb
jne
mov
repz
dec
mov
imul
jge
mov
scas
add
sub
mov
negb
xchg
fldl
pop
lds
outsl
push
fildl
push
jns
adc
out
test
popa
adc
jg
inc
xor
jno
xor
pop
test
stos
jo
icebp
loop
cmp
xor
lret
and
xchg
fwait
push
or
jnp
out
push
loope
push
loopne
add
dec
out
pop
in
pop
test
or
loop
xchg
jb
inc
xor
imul
ja
ljmp
rorb
push
out
xchg
es
push
push
clc
xchg
dec
les
mov
pop
cltd
cld
push
push
mov
loope
xchg
cmpsl
pushl
test
xor
cmc
pusha
mov
xor
popa
adc
into
outsb
imul
js
sbb
bound
adc
dec
or
stos
ss
xchg
lock
fmuls
fcmovu
or
dec
mov
arpl
dec
std
dec
jp
outsb
inc
cltd
out
andl
sub
sahf
sbb
sbb
mov
push
push
outsb
sub
mov
das
lret
hlt
xor
not
je
aaa
mov
fistl
out
mov
out
jle
jmp
push
pop
out
mov
cmp
out
fidivrl
mov
mov
mov
inc
adc
int3
sbb
jecxz
aaa
and
and
pop
sub
arpl
add
inc
aas
or
xchg
ss
mov
mov
outsb
inc
mov
aam
data16
hlt
xor
loop
jge
lcall
ss
inc
and
fdivr
xor
jo
adc
mov
data16
push
jno
les
in
pushf
mov
je
loopne
popf
push
cmc
jns
inc
xchg
add
ljmp
dec
add
mov
xor
xchg
in
outsb
out
rclb
fidivrl
test
sub
jae
lret
out
or
jb
jb
mov
xchg
mov
loop
add
rep
sbb
jae
icebp
jbe
lods
mov
data16
xchg
mov
mul
testl
jecxz
dec
pop
cmp
insb
js
das
or
xchg
cwtl
dec
inc
loopne
leave
pushw
js
loope
ret
or
fstpt
mov
aad
jge
jge
gs
shrl
subb
mov
shlb
setno
out
xchg
in
mov
pushf
push
pop
mov
sbb
hlt
sahf
testb
adcl
loopne
subps
and
mov
call
gs
rcll
aaa
ret
push
scas
leave
out
cmp
test
jnp
loop
sbbb
mov
cmp
dec
jecxz
add
ret
out
arpl
loope
mov
sar
sbb
in
js
push
std
pop
cmp
jbe
sti
imul
test
std
pushf
int
jae
jecxz
fildll
roll
in
jne
jb
adc
lock
pop
popf
xchg
ss
push
cmp
ds
adc
into
push
adc
test
sbbl
out
add
push
push
sti
add
dec
adc
and
lea
inc
mov
sub
pusha
dec
xchg
enter
aad
int3
fistl
stc
insl
add
insb
out
add
cmpsl
aaa
aaa
inc
cld
or
add
xor
dec
cmp
push
lods
inc
adc
ficoms
or
pop
mov
mov
das
push
mov
pop
fisubs
enter
cmpsl
dec
movsb
xor
js
inc
pop
mov
fcoms
dec
mov
fnstenv
inc
inc
bound
popf
or
cmp
lret
clc
sbb
movl
pop
mov
push
test
fisubs
test
popa
js
and
imul
mov
imul
ret
pop
mov
push
sub
loope
sub
test
hlt
fiadds
fdivr
pop
testb
ficomps
sbb
jne
sahf
sub
test
aas
mov
adc
lea
pop
fstps
daa
adc
lock
xor
and
imul
cld
or
mov
sbb
in
lods
stos
dec
mov
mov
int
xor
adc
adc
mov
bound
fs
pop
testl
inc
je
add
jno
loopne
js
rorb
test
inc
aad
daa
in
ja
pop
jo
pop
lret
push
dec
xor
sub
arpl
aad
rcrb
add
add
push
xchg
adc
fstl
pushf
in
fsubl
cmp
cltd
or
les
ds
inc
cmp
lret
jo
fsubl
jle
subl
test
mov
loop
mov
aad
aam
ret
test
xchg
imul
jmp
jmp
cmp
xchg
mov
xor
test
and
lea
pop
mov
lret
jp
sbbl
loop
dec
roll
out
or
or
aaa
scas
cmc
out
out
lcall
inc
and
movsb
xor
jle
loopne
push
lods
dec
lret
std
inc
jnp
sub
imul
dec
mov
mov
xchg
push
sahf
bound
ljmp
aas
xchg
push
or
mov
xchg
xchg
mov
in
mov
pop
loopne
xor
inc
bound
dec
pop
test
rorl
leave
xchg
mov
mov
cmp
pop
adc
or
lods
shll
scas
and
jge
sub
mov
cltd
icebp
dec
dec
aam
ret
in
repnz
dec
pop
xchg
shl
test
xor
push
dec
orb
pop
leave
lea
add
jle
cmp
je
shll
repz
dec
cmp
sub
testb
jnp
adc
outsb
cmp
iret
and
lea
sub
jnp
repz
sub
imulb
arpl
pusha
loopne
jg
push
pusha
dec
jo
fldl
ljmp
mov
lock
rorl
shrb
andl
stos
inc
jns
jmp
fldenv
inc
add
jns
mov
cmp
mov
inc
int3
ljmp
xlat
sub
loop
imul
fadds
fwait
mov
adc
out
sub
mov
stos
or
sti
int3
rcrb
test
clc
clc
pop
xor
push
call
jmp
dec
in
or
adc
inc
insb
lock
in
mov
sbb
add
lcall
sbb
lahf
add
mov
and
lods
push
xchg
dec
mov
and
loopne
movsl
push
aaa
push
test
xor
dec
js
mov
jle
int
lret
jbe
jo
mov
add
sbb
lock
cmp
stc
or
push
jp
enter
adc
mov
add
imul
cmpsl
ja
mov
jo
fisubl
aam
mov
mov
sub
outsl
ret
push
push
push
je
addb
jb
in
and
xchg
jmp
xorb
add
aas
jl
addb
xchg
das
rcll
and
nop
adc
and
enter
adc
cmp
stc
cmpsb
add
divb
xchg
dec
hlt
loope
push
pop
popl
in
jmp
jl
mull
inc
aas
mov
dec
add
add
imul
add
scas
jl
aad
xor
jo
xchg
xor
imul
push
xchg
mov
js
jns
lcall
data16
jle
adc
jmp
pop
mov
jmp
nop
mov
imul
mov
sarb
gs
lcall
iret
daa
xchg
scas
scas
mov
and
stos
das
popf
aas
push
dec
mov
lock
adc
sbb
jno
das
adcl
mov
mov
mov
sub
stc
mov
mov
xchg
pop
mov
push
sub
jo
enter
es
lods
mov
sbb
jl
mov
out
test
mov
push
push
push
jno
iret
scas
enter
loope
push
cli
push
mov
call
push
push
push
inc
mov
push
das
or
js
mov
fstl
dec
icebp
sbbl
jle
mov
xor
sub
stos
popf
push
push
cmp
pop
andl
mov
test
push
inc
lret
aas
adc
insb
daa
inc
ljmp
leave
add
inc
cmpb
jmp
xchg
out
jns
lret
and
inc
sbb
adc
cmp
jns
fucom
loope
pop
adc
adc
out
in
cmp
sub
sbb
js
ds
lcall
insl
mov
lahf
insb
xchg
jo
dec
nop
cltd
sbb
lods
push
sahf
or
subl
nop
push
pushf
fcomi
lret
jb
add
push
gs
push
mov
or
in
daa
pop
jmp
addr16
pop
out
adc
dec
pusha
sub
scas
mov
js
mov
pop
adc
fs
lcall
and
inc
movsl
or
test
inc
aad
or
add
xchg
vmread
in
sbb
mov
jp
mov
push
xor
mov
mov
dec
jmp
xor
push
xor
and
in
xor
jbe
cmp
sbb
sbb
rcrb
sub
rclb
js
call
lret
lahf
movsb
cmp
aam
adc
mov
imul
push
cwtl
pop
outsb
addr16
pop
mov
xchg
mov
or
xchg
mov
or
decl
lcall
enter
insb
jp
jmp
and
cmp
mov
test
pop
jo
ds
mov
and
rcll
xchg
and
or
frstor
mulb
inc
lret
xchg
jge
inc
mov
pushf
add
inc
mov
cmc
cwtl
aaa
scas
dec
xchg
sub
cs
outsl
std
pushl
fadds
das
jmp
xchg
mov
loop
jp
sub
mov
add
fnsave
mov
push
shrb
sub
xchg
lahf
adc
pop
jno
arpl
std
and
add
test
mov
mov
lcall
jbe
cwtl
shlb
jbe
lcall
adc
cli
sub
sbb
cmp
xchg
mov
mov
fbstp
push
push
or
jl
push
mov
nop
int3
jno
ja
adc
xor
dec
and
cmpsl
push
add
mov
rclb
mov
in
jne
enter
cmp
into
mov
cmc
lock
xchg
sbb
hlt
mov
push
jns
lahf
pop
xor
addb
lcall
lcall
out
mov
mov
jp
aad
push
mov
repnz
insb
xor
add
rcrb
mov
in
mov
sbb
and
mov
or
andb
xchg
cmpsb
sub
mov
push
mov
cmp
sar
xchg
and
ss
pop
js
xor
pop
mov
xor
lret
push
cmp
dec
sbb
mov
pop
push
inc
adc
lret
out
mov
out
les
xchg
ljmp
imul
mov
aas
inc
or
dec
scas
dec
mov
jmp
pop
hlt
xchg
push
dec
in
xor
movsl
clc
repz
xor
aaa
xor
mov
orb
clc
adc
mov
pop
insb
or
nop
into
xchg
test
loop
sbbl
repnz
gs
pop
mov
movsb
mov
mov
mov
test
mov
jp
stc
lock
push
sub
call
xchg
in
shll
mov
test
leave
dec
xor
out
test
in
mov
lret
jbe
pop
xlat
or
xor
inc
shll
int3
and
pop
aam
iret
cld
mov
jae
js
jb
push
mov
popf
add
mov
push
enter
ss
ficoms
sub
mov
or
mov
fdivrl
mulb
xchg
popa
scas
jmp
adc
xlat
cmp
push
imul
lock
clc
push
xor
pop
stos
imul
xchg
push
xchg
dec
cld
insl
shrb
ss
push
push
adc
scas
imul
cld
stc
repnz
lret
inc
inc
or
and
xor
pusha
and
cli
adc
aaa
mov
or
aam
in
jnp
mov
dec
mov
cmc
stos
fadds
imul
or
loope
ret
lods
test
pop
mov
sbb
sub
cmpsw
xchg
pop
mov
out
shl
mov
pop
clc
add
mov
cmc
mov
sub
push
or
int
loop
lods
push
jns
in
sbb
movsb
xor
push
int3
jecxz
and
xor
dec
out
mov
pop
leave
sub
sti
movsl
in
std
rcrl
pop
cmpsb
or
mov
xchg
xchg
pop
mov
cmp
mov
push
adc
push
jno
jb
in
or
fs
loop
xorl
lds
push
mov
cmp
sbb
sub
punpckhbw
int3
push
scas
jne
jge
push
incb
pop
xchg
jb
cmp
mov
ljmp
fsts
sar
test
mov
push
fwait
es
sbb
sub
xor
repnz
lret
into
rcrl
lods
lret
call
aam
loopne
jno
dec
nop
xchg
cld
mov
inc
ja
adc
jns
add
sbb
pop
push
mov
pushf
or
and
sub
orl
js
adc
iret
and
push
repnz
mov
mov
or
les
cmpsl
fwait
sar
mov
out
push
dec
xor
fcomip
adc
xchg
and
iret
aad
inc
pop
xor
mov
lret
scas
std
cmp
in
pushf
lcall
mov
inc
iret
daa
insb
cmp
mov
cmc
inc
scas
push
sbb
inc
loope
scas
imul
mov
stc
mov
mov
ja
xor
insl
mov
scas
dec
sbb
xchg
mov
xor
test
outsb
lcall
inc
lar
mov
adcl
sarb
mov
jnp
lods
cmpsb
aas
sub
scas
cmp
stos
ret
cmp
inc
lret
xchg
inc
neg
std
sub
int3
in
fstl
inc
out
inc
xor
adcl
sub
dec
and
pop
mov
fwait
sbb
sub
or
jo
mov
sub
stos
push
imul
jle
imul
pop
mov
mov
cmp
mov
dec
push
test
mov
imul
sub
in
xchg
ret
das
jmp
in
mov
dec
adc
inc
aad
xchg
ja
mov
fmull
mov
gs
pop
lret
in
pop
cld
pop
xchg
arpl
push
fs
dec
lret
and
push
pop
psubd
sub
addr16
jb
mov
fisubrl
mov
cwtl
push
inc
ss
lret
pop
adc
test
adc
cmp
sti
and
mov
xchg
daa
in
push
popa
push
daa
test
pop
dec
inc
cmpl
mov
dec
sub
cmpsl
fistl
adc
lret
adc
stc
inc
add
arpl
mov
sbb
insb
fldl
dec
gs
xlat
int3
push
jb
add
mov
movsb
js
jb
xor
push
clc
push
int
out
fnstcw
mov
add
clc
sbb
dec
mov
xchg
push
mov
je
cmpsb
mov
jnp
leave
dec
jmp
hlt
sbb
lods
arpl
sub
inc
inc
insb
adc
mov
cltd
mov
mov
jmp
push
push
and
push
cltd
mov
pop
pop
and
ljmp
pusha
sbb
cwtl
inc
ja
jl
push
mov
movsl
dec
pop
xor
jle
sbb
push
push
inc
rcll
in
in
fisttpll
ret
sub
mov
inc
bound
xlat
push
add
gs
pop
fstpt
fcomps
add
push
mov
adc
shlb
aaa
enter
jmp
andb
jb
mov
xchg
aaa
nop
xor
add
sbb
js
jae
and
jno
cli
pushf
aam
xor
and
push
ds
jne
xchg
rcll
and
inc
jne
fcomi
out
fcmove
dec
mov
lret
pop
adc
jno
add
and
xor
cmpsl
cwtl
das
mov
lds
icebp
mov
cmp
pop
push
sbb
push
jecxz
pop
icebp
mov
into
jmp
je
mov
mov
cmp
stos
mov
sub
les
leave
mov
loope
test
push
fbld
jnp
mov
xchg
ljmp
mov
push
and
pusha
jp
xchg
aaa
inc
das
cwtl
lds
dec
test
inc
int
and
jnp
pop
adc
std
mov
cld
xor
cmp
lahf
fmul
aas
int
cmp
xchg
fnsave
test
iret
cld
inc
hlt
pop
arpl
fs
orl
clc
push
popf
fwait
or
mov
mov
std
pop
mov
pusha
out
jmp
enter
mov
add
ret
and
gs
fcoml
cli
clc
jge
cmc
mov
inc
mov
addb
lds
adc
in
and
jecxz
loopne
sbb
cmpsl
add
xor
cmc
repz
mov
cmp
and
out
call
or
jge
push
loopne
bswap
pop
mov
test
inc
ror
ret
pop
jae
inc
pop
insl
push
cmp
and
mov
popa
xchg
insl
or
sbb
and
mov
pop
inc
push
xor
add
call
adc
cmpl
test
pop
push
mov
pusha
fs
ja
jbe
mov
je
dec
shlb
sbb
jle
test
adc
dec
adc
mov
push
xchg
cmp
sub
xchg
jle
sub
loopne
sti
jmp
inc
mov
pop
adc
out
pop
sub
in
pop
cmp
xor
int
or
push
sbb
rcrl
jns
subl
mov
ret
lret
inc
ficomps
push
cli
out
dec
push
sti
sbb
fcompl
insl
xor
cmp
ljmp
pop
rclb
outsl
jp
subl
xchg
sti
out
xchg
or
ficoms
je
test
stos
lods
xor
xor
mov
je
mov
faddl
rcrl
add
sbb
push
movsb
pop
dec
cli
push
repz
lods
xchg
or
jle
cmc
in
and
shlb
daa
xor
and
jp
sbb
sti
stos
add
movl
idivb
adc
les
jae
das
xlat
xlat
dec
pop
imul
loop
xchg
insl
scas
cmp
rolb
cmc
movsl
push
shll
jp
sub
cwtl
ret
daa
push
outsl
fstpt
imul
cmpl
lret
jmp
jge
in
mov
fistpl
fsubs
lds
pop
mov
xchg
sub
push
scas
inc
cwtl
icebp
popf
push
add
push
jno
js
push
xor
mov
clc
je
insb
xchg
test
inc
dec
push
jo
adc
cmpsb
in
and
jmp
push
je
cmpl
fs
lret
lret
dec
dec
sbb
gs
mov
fs
mov
bound
sahf
cmpsb
push
loop
and
stos
push
fs
in
adc
or
mov
shrl
into
push
leave
dec
and
inc
push
inc
bound
imul
bound
ljmp
inc
mov
inc
pop
lahf
adc
lret
pop
and
pop
jnp
sbb
mov
or
xor
std
push
mov
into
pop
push
pop
pop
inc
push
jnp
in
scas
pop
hlt
mov
sub
lods
mov
or
inc
jb
adc
fcmove
or
push
push
sub
shl
mov
ficompl
adc
add
call
int
arpl
sbb
cmp
inc
cmp
and
lret
aad
xor
inc
jle
push
insl
or
push
sub
mov
addb
iret
inc
or
loop
rolb
jbe
les
popa
test
jecxz
mul
aad
gs
lcall
add
xchg
xchg
pop
sahf
addr16
pop
sbb
arpl
add
add
mov
sub
mov
lock
jnp
dec
aam
pop
loop
xlat
sub
ror
movsb
xchg
imul
shll
sbb
cmpl
lcall
mov
out
movl
ror
dec
fildll
mov
sub
jmp
mov
adc
sbb
shrl
lock
mov
push
dec
mov
pop
sub
and
adc
and
das
out
scas
mov
sub
cld
rorl
pop
xor
and
mov
and
addr16
xchg
sahf
call
mov
cmp
inc
leave
sysret
push
jge
mov
int3
loopne
dec
sbbl
fucomp
pushw
dec
and
in
mov
gs
fstpl
sbb
push
or
xor
ret
mov
sbb
fcoms
test
notl
dec
pusha
jmp
or
jno
nop
mov
inc
xlat
sub
xchg
mov
and
jge
mov
xchg
aam
or
rclb
je
and
push
adc
int3
pusha
ss
push
mov
std
fimuls
test
jb
xchg
mov
cwtl
cmpl
push
push
shrb
idivb
es
push
xchg
mov
dec
mov
jbe
jmp
stos
mov
mov
icebp
jne
push
repnz
shrl
jg
sbb
enter
sbb
hlt
ret
loopne
cmc
or
or
dec
insl
aaa
xor
push
imul
mov
xchg
fsts
xor
hlt
xor
test
inc
pop
dec
jl
in
push
add
in
call
jnp
shrl
jl
mov
iret
into
push
jg
aaa
leave
mov
pop
pop
jg
negb
clc
lea
cmp
and
insl
movsl
call
cmpsb
sub
cmp
push
add
dec
or
imul
xor
push
test
js
adc
push
pop
lds
cli
cltd
ret
xor
loope
mov
mov
shrb
lods
decl
xchg
push
push
dec
ja
sbb
jns
mov
sbb
cmp
stc
lahf
addr16
lcall
pop
cmc
fidivrs
mov
mov
call
xchg
shl
xchg
cs
popf
pop
or
int3
psubusb
fistl
int3
sub
pop
cmpsl
ljmp
xor
push
frstor
shrl
dec
jl
pusha
add
and
adc
jmp
cltd
test
lretw
mov
js
adc
js
loopne
and
pop
adc
cmpsb
pop
sar
enter
sbb
outsl
out
sbb
fistpl
in
imul
lods
in
lods
xor
mov
or
lock
xor
jmp
xor
out
mov
mov
sbb
fs
add
inc
cmp
inc
repz
movsb
movb
cmp
out
lock
mov
mov
jb
into
ret
adc
data16
int3
push
mov
xor
push
pop
sub
addr16
in
xor
repz
in
fwait
push
imul
lds
jnp
xor
mov
ja
jmp
cmp
cmp
dec
xor
inc
sbb
rcrb
inc
add
cmpsb
push
lret
jnp
iret
add
xchg
cwtl
ds
push
inc
and
and
popf
jno
dec
call
cld
std
insl
les
dec
mov
iret
or
insb
and
pop
clc
andb
xor
mov
lret
mov
xchg
aam
aam
lea
std
test
mov
loope
mov
loope
pop
dec
std
jne
cmp
es
cwtl
mov
push
mov
out
and
jb
and
xchg
dec
sbb
pop
fdivrl
insb
pop
mov
mov
sub
sbb
test
add
jmp
dec
aad
sub
dec
xchg
jno
mov
movsl
pop
xchg
add
or
xor
shlb
mov
or
addr16
lea
roll
push
mov
mov
clc
das
testl
push
mov
and
jmp
jge
fcmovnb
data16
std
push
in
nop
cmp
xor
sahf
add
adc
and
push
lret
ffree
xchg
push
movsb
push
aaa
stc
flds
fisttps
or
jp
leave
sub
negb
pop
push
shlb
insb
loop
mov
out
in
icebp
sbb
fmuls
push
and
xor
sub
aaa
or
mov
sub
mov
cwtl
in
adc
movsb
and
push
xor
mov
jnp
fs
or
pop
jbe
ret
subb
adc
dec
sahf
push
cmp
jge
loopne
xchg
fdivl
jb
cli
out
shlb
mov
shlb
cs
xchg
xchg
sub
popa
xchg
push
pop
sbb
xchg
pusha
test
pop
fisttpl
inc
push
mov
add
repz
sbb
inc
adc
xor
incl
jp
ja
fisttpl
lock
test
lock
pop
pop
pusha
outsl
insb
hlt
jb
divb
sbb
stc
in
andl
repnz
clc
cmp
mov
fbld
stc
mov
fdivl
incb
and
mov
or
mov
mov
mov
ljmp
dec
inc
shr
or
or
in
pusha
mov
adc
mov
xlat
cmp
add
andl
fsubrs
adc
jne
mov
mov
mov
test
sub
out
xchg
cld
cmp
sbb
in
xor
push
cld
cmc
sbb
lcall
xor
ret
pop
push
pop
pop
into
mov
inc
rorl
mov
mov
icebp
inc
popa
nop
or
ljmp
and
mov
dec
push
pop
cltd
cmp
orl
xchg
seto
test
sbb
sub
sub
mov
lret
pushf
dec
push
or
pusha
xor
sub
sbb
xor
push
push
xchg
mov
dec
push
push
insb
in
xchg
ljmp
loope
or
add
not
jo
popa
stos
andl
sbb
shll
sti
cmp
fidivl
mov
negb
adc
data16
lret
or
outsl
pusha
test
loope
or
in
std
and
js
test
mov
inc
loop
cld
daa
out
dec
shl
push
mov
rcll
push
jg
cmp
das
lret
pop
pop
mov
fistpll
mov
pop
xchg
mov
inc
push
fs
jmp
ljmp
sbb
arpl
movsb
or
xchg
inc
je
ret
xchg
cwtl
dec
sahf
lahf
sub
sub
cmp
xchg
scas
cltd
push
dec
out
jge
fildll
cmp
mov
les
imul
mov
jg
inc
jle
fisubrs
into
ds
xchg
rol
rorb
pop
dec
or
jmp
loopne
repnz
lahf
jns
mov
call
dec
push
push
jns
and
xchg
pop
adc
ret
mov
test
mov
imull
movsl
push
cmp
repnz
dec
lret
jge
js
jne
das
xchg
inc
sbb
pop
das
pop
mov
pop
incl
cld
jns
cmpsb
mov
aam
jns
dec
adc
outsl
test
lods
aam
sbb
lahf
stos
test
jg
int
xchg
pop
sbb
and
xchg
xor
xchg
push
pop
mov
inc
jg
or
loopne
outsl
adc
ds
fistpll
push
scas
cs
push
pop
pop
and
stos
jns
insb
inc
push
ret
xchg
pop
pushf
movsl
or
pusha
lret
jmp
out
adc
das
jb
sub
sub
lds
push
adc
cmc
sub
cmpsb
sarb
fstl
sbb
cmp
pusha
pop
enter
dec
int3
cmp
test
repnz
stos
add
and
mov
add
sub
mov
inc
mov
xchg
in
aad
outsl
aam
adc
icebp
and
cmp
mov
pop
mov
xchg
mov
jmp
sbb
push
xor
popf
adc
ficomps
popa
dec
insl
maskmovq
mull
mov
push
aaa
dec
push
pop
or
lock
pushf
jle
lahf
ret
jbe
dec
test
fiaddl
shrb
stos
mov
je
push
pcmpgtd
mov
adc
jl
or
cmp
adc
and
mov
arpl
lcall
loop
pop
sub
push
ret
or
orb
fsubrs
leave
xchg
lea
and
int
push
add
cmp
mov
adc
and
stos
popa
fwait
and
fsub
into
and
xchg
dec
xchg
inc
repz
popf
push
sbb
add
lahf
mov
insl
dec
shlb
adc
push
mov
push
jecxz
into
ja
cmp
clc
push
out
mov
hlt
sbb
sarl
xor
mov
push
ret
das
aam
xor
xchg
cli
jne
sti
and
inc
xchg
jp
pop
push
dec
ss
test
pop
nop
inc
movsb
mov
ljmp
cmp
or
jl
sti
push
or
push
and
adc
dec
aad
scas
repz
lcall
pop
iret
inc
mov
test
add
int
sahf
daa
dec
mov
iret
jnp
jge
sbb
sbb
or
jle
int3
outsl
pop
loop
inc
pop
dec
pmaxsw
sbb
xchg
insl
jns
enter
sbb
adc
ret
not
and
in
lock
push
mov
leave
es
es
add
sbb
jmp
add
clc
push
lods
jecxz
jge
xlat
pop
int3
in
pop
pusha
repz
repnz
test
cmpsl
pop
fsub
fisubrs
je
adc
sbb
fstpt
sahf
fcoml
xchg
shrl
rorl
popa
sar
mov
popa
addb
xlat
pop
add
lahf
mov
jle
xchg
lret
push
or
push
fldlg2
push
dec
dec
mov
aaa
pop
sahf
dec
push
lcall
mov
fisubrl
lcall
shlb
jmp
push
or
mov
into
cmp
pop
sub
inc
bound
and
push
add
sub
dec
push
mov
mov
ja
pop
cmp
sahf
mov
add
or
lods
adc
test
and
nop
xchg
es
add
cmp
mov
ret
add
mov
dec
popf
fadd
imul
cmc
popa
adc
xchg
fcoms
or
mov
data16
lea
nop
mov
loop
aaa
scas
cltd
ret
mov
jnp
es
pmulhw
test
roll
scas
loope
pop
bound
mov
push
mov
mov
cmp
pop
imul
pushf
mov
jae
xlat
leave
adc
add
lds
popa
gs
cmp
mov
mov
mov
and
fisubrs
into
push
loop
dec
aad
jmp
pop
flds
push
bound
in
and
mov
leave
and
mov
movsl
pop
adc
das
in
arpl
dec
adcb
out
bound
js
dec
sbb
mov
push
sbb
aam
lock
lock
sub
dec
sahf
stc
pop
adc
pushl
out
leave
rcll
test
cmc
pushf
and
cmp
pop
fstl
movsb
xor
sub
push
xchg
iret
fildll
pushf
movsl
xchg
cltd
push
scas
xor
insb
call
mov
push
lea
xlat
iret
inc
add
shrb
in
dec
idivb
je
inc
fmul
pop
jl
ret
push
int3
or
je
ds
pop
inc
pop
ss
gs
xor
mov
xor
dec
or
insb
cld
mov
push
out
add
pusha
add
and
cmpsl
add
push
add
xor
pusha
shl
sbb
arpl
jae
jp
sub
test
push
aad
fsubrs
sub
out
xor
jmp
mov
adc
lods
push
and
pop
dec
mov
stc
int3
int
popf
popa
ficoms
pusha
aas
xor
jecxz
ss
pop
fisubs
leave
add
lret
mov
outsl
in
out
call
call
mov
ja
mov
and
push
dec
cs
out
pop
pushl
xchg
xchg
movsb
js
daa
lock
dec
call
clc
add
xchg
adc
xchg
insl
xchg
push
and
ss
sub
popf
inc
and
jle
adc
xchg
sub
pop
lea
push
push
hlt
call
imul
push
pop
mov
mov
push
mov
xchg
rolb
js
push
jecxz
cmp
sbb
sub
mov
fmull
mov
daa
sti
rolb
add
scas
xchg
push
jl
insb
mov
xchg
call
mov
mov
push
movsb
sbb
into
jno
rclb
xor
mov
dec
imul
repnz
jge
inc
rcll
fbld
into
into
dec
and
xor
fistpll
into
fcoml
jae
test
jo
push
icebp
mov
inc
inc
jae
mov
cwtl
push
pop
adc
outsb
pop
andb
dec
inc
cs
push
mov
andl
mov
js
bound
mov
lahf
out
fdivl
sub
out
iret
sbb
mov
je
popa
mov
xchg
xchg
push
mov
inc
out
lds
xchg
pop
or
xchg
mov
setno
mov
xchg
adc
js
pushl
loopne
mov
push
push
mov
inc
pop
lret
add
jl
ljmp
in
cmp
sbb
xchg
repz
add
xchg
ret
add
add
add
js
mov
mov
das
pop
iret
or
addb
cmp
pusha
ret
or
nop
xlat
cs
dec
mov
jns
outsb
or
nopl
inc
xor
xchg
push
xchg
shll
mov
xor
cs
decl
jle
sub
ret
inc
push
rol
leave
adc
fldl
jns
adc
inc
jmp
xchg
inc
lret
cli
mov
pop
stos
push
inc
cmp
cs
mov
sub
scas
test
cmp
mov
xor
push
adc
je
hlt
ret
arpl
xor
add
sub
sti
pop
bound
pop
outsl
jmp
iret
xor
mov
fnstenv
sub
inc
lret
or
enter
add
mov
mov
push
dec
mov
xchg
mov
inc
mov
cwtl
movsb
jno
scas
ret
sbb
test
xchg
xorl
scas
sub
dec
lock
orb
sbb
adc
stos
int3
negl
insl
dec
fiaddl
mov
jae
rcrb
mov
lea
test
lret
lcall
in
or
repz
ret
test
push
test
xor
adc
shll
and
adc
dec
mov
jnp
int
sbb
adc
hlt
xor
mov
icebp
lds
lock
cmc
loop
ret
out
loop
lds
incb
mov
lds
mov
cltd
in
pop
mov
or
adc
lahf
sbbb
jnp
fists
xor
jns
mov
and
cwtl
adc
mov
xlat
lds
repnz
inc
cmc
jo
push
mov
dec
add
scas
cmpsl
iret
pop
es
or
mov
adc
jp
inc
and
jge
lods
fbld
push
xlat
mov
sub
adc
out
and
sbb
cmp
lahf
sub
sub
or
lcall
in
jp
jmp
ret
out
or
stos
dec
xor
loopne
mov
fidivs
movsl
mov
add
insb
cmp
addr16
arpl
inc
and
pop
xchg
sub
mov
ret
sbb
inc
dec
cwtl
xchg
mov
arpl
sbb
mov
cmpsb
fwait
imul
loop
or
sarl
mov
scas
ljmp
lret
insl
push
xor
out
mov
mov
sub
ror
or
dec
xor
xor
out
gs
sub
cmpsb
cmp
push
in
jg
scas
leave
imul
hlt
inc
hlt
int3
pop
xlat
and
xchg
mov
lret
lods
cmpsb
xchg
mov
mov
inc
mov
cmpsl
cmpsl
cwtl
mov
shlb
add
scas
lea
je
mov
test
push
imul
pop
sbb
mov
mov
stos
jp
or
ss
and
and
mov
add
pop
jmp
dec
adc
push
fisttps
js
xchg
out
xor
pop
dec
jp
xchg
cmp
insb
pop
or
addr16
lods
aad
into
push
cwtl
pusha
xchg
fs
dec
jmp
and
jecxz
arpl
cmp
adc
pop
ror
ss
leave
popa
int
fldenv
das
insl
add
xchg
or
test
and
dec
or
test
adc
or
in
outsl
mov
inc
sti
out
xchg
sbb
and
or
dec
jl
mov
cwtl
aam
lock
data16
jecxz
outsb
cmp
andb
insb
lret
xchg
mov
test
arpl
pusha
enter
sti
or
sti
and
add
lods
into
xchg
insl
aaa
or
cmp
out
mov
test
push
push
rol
movsb
lods
adc
mov
adc
add
rcrb
pop
adc
dec
mov
mov
aam
incl
jbe
mov
pop
xor
test
aas
mov
cmp
dec
jne
lea
mov
stc
in
xlat
sbb
gs
jb
repz
loop
bound
adc
push
int
ret
call
and
arpl
cmpl
ja
mov
cmp
inc
dec
hlt
les
ds
dec
jecxz
add
inc
es
and
adc
pop
sarl
aas
and
lods
sahf
sbb
pop
push
mov
pop
lcall
in
test
sbb
cmpsl
stos
mov
sarl
clc
cltd
ficomps
imul
adc
loopne
xchg
mov
test
add
inc
repnz
sub
and
in
adc
orl
out
mov
sub
jecxz
dec
mov
cld
outsl
jecxz
scas
sahf
out
adc
push
xacquire
pop
sti
loope
enter
fbstp
xchg
icebp
cmpsb
xchg
stos
sbbb
or
sbb
add
pop
cmp
mov
xor
xlat
jecxz
or
push
jb
cmp
in
sbb
sub
xlat
or
inc
stos
dec
or
jno
flds
repnz
fcmovb
lret
xor
negl
inc
add
xor
jp
and
sbb
mov
test
jle
jns
xchg
mov
sub
out
xchg
jg
jb
fdiv
lcall
push
je
push
pop
mov
xchg
aas
jge
and
jl
dec
mov
enter
xchg
xchg
les
adc
push
movsl
dec
daa
mov
jge
adcb
and
and
sbb
sub
bnd
jle
test
inc
dec
xor
lods
test
dec
sub
cmpl
and
add
push
fwait
xchg
hlt
dec
idivb
stos
in
fs
adc
pop
pop
sbb
and
aaa
xor
scas
loope
pminub
sub
jnp
dec
popl
jg
mov
sbb
push
sbb
and
or
fwait
sbb
mov
pop
cmpl
iret
push
sti
subb
push
push
and
out
sbb
subb
fiadds
or
xchg
das
in
pushf
shrb
lods
es
adc
test
rcrl
xchg
daa
ja
rolb
xchg
push
ficoml
cmp
pop
sbb
cmpsl
xchg
mov
dec
call
add
dec
out
fdivr
mov
dec
fs
sub
sub
cmp
hlt
rolb
push
int3
push
fmul
and
mov
movsb
call
cmpsl
add
push
outsl
push
xchg
inc
xchg
fsubrl
mov
into
dec
scas
ret
jns
lea
pop
bound
adc
or
leave
or
lock
fsub
jne
lods
loop
sub
cmc
mov
xor
and
jecxz
mov
popf
mov
repz
sbb
cmp
popf
fstl
cli
mov
inc
jbe
ret
loopne
fsubs
repnz
mov
cmc
out
mov
or
jg
xchg
sbb
divb
push
imul
std
xor
push
fbstp
mull
xchg
dec
movsb
cli
movsl
mov
mov
lock
in
adc
fdivrs
pop
add
xor
sbb
jl
mov
aas
jo
xchg
into
pop
loopne
inc
sbb
int
xchg
jecxz
cmpsl
dec
fsubs
lahf
popf
stc
pop
addr16
cmp
inc
cwtl
lea
data16
loop
cmpsl
ja
mov
test
cltd
sarl
pushf
push
repnz
outsb
xor
jbe
inc
cmp
fnstenv
bnd
cmp
push
loope
out
test
dec
mov
or
xchg
lret
mov
xor
mov
jo
fildl
icebp
push
sub
js
dec
sub
jnp
lret
je
cmp
mov
bound
fmuls
dec
dec
or
pop
pop
stos
xchg
bound
sbb
add
loop
xchg
xchg
push
mov
fsubrs
aam
push
pop
and
sbb
jecxz
push
and
and
push
mov
fdivrs
sub
xchg
push
fdivl
loopne
in
jle
daa
lahf
loope
test
fadds
sbb
imul
pop
xchg
xor
aas
xor
sbb
add
xchg
int3
push
jb
or
js
jns,pn
or
decb
movsl
pop
adc
imul
imul
cwtl
xchg
jnp
sbb
in
stos
lcall
lock
dec
dec
inc
add
imull
jnp
mov
ja
icebp
repnz
rorb
loopne
fidivl
stc
and
mov
lods
insl
and
pusha
pop
jns
mov
imul
jmp
add
mov
push
shlb
fbstp
cwtl
fildl
sbbl
pop
int
adcb
xor
xor
xchg
leave
out
xor
jbe
push
mov
call
sarb
adc
pop
dec
iret
jbe
mov
mov
jmp
scas
xor
out
jns
lret
pop
rcrl
sub
arpl
pusha
cmp
nop
inc
fwait
mov
and
lret
mov
or
lea
loopne
lds
sub
aam
xchg
inc
mov
mov
lret
adcl
jns
test
xchg
mov
push
call
push
push
in
cli
dec
or
or
aad
cmp
mov
iret
sahf
int
test
push
jmp
inc
dec
mov
mov
mov
sub
sahf
fnstcw
jae
cmp
xchg
jnp
xlat
dec
leave
int
dec
or
and
sub
out
mov
sbb
pop
adc
lahf
fs
in
xchg
xorl
in
mov
sbb
js
pop
jne
jle
jl
pop
and
sub
dec
pop
fs
and
cmpxchg
cmpsb
cmp
sbb
mov
and
jno
xlat
and
das
mov
lret
inc
das
insb
adc
sub
cmc
jnp
pusha
pop
add
add
xor
loope
xchg
movsb
lods
push
add
sbb
hlt
jl
loope
add
push
dec
add
xchg
or
scas
adc
mov
ficoml
or
rcrl
in
xchg
movsb
into
stos
xor
pop
imul
inc
aaa
shr
xchg
cmp
out
mov
sti
and
push
call
mov
out
mov
pop
xchg
sub
add
mov
inc
push
lds
mov
out
lret
int3
ljmp
clc
hlt
ret
gs
xchg
mov
lods
and
stos
mov
and
jne
xchg
lret
test
push
sbb
pop
xchg
xchg
into
sub
push
fcom
pop
and
fsubr
inc
adc
and
mov
mov
mov
mov
gs
repnz
popf
xor
cltd
mov
dec
out
dec
pop
jnp
fs
cwtl
mov
dec
je
xchg
add
in
lods
fcmovnu
stc
xor
cs
popf
cmp
xor
in
push
adc
aas
xlat
jo
addr16
and
inc
cmp
fldl
or
pop
xchg
ja
jnp
cmp
cmp
push
mov
call
sbb
sbb
push
scas
pushf
test
lcall
dec
mov
faddl
ret
imul
loop
je
arpl
ss
and
dec
adc
orl
jne
jmp
shll
addr16
sbb
sbb
aad
ja
mov
dec
push
pop
inc
mov
cmpb
in
daa
imul
notl
movsl
sbb
sbb
xchg
shll
in
mov
inc
aam
fnstenv
cmp
sub
pop
push
lods
fimull
sub
fs
arpl
and
xchg
xchg
les
or
xchg
pop
ss
daa
lret
dec
cmc
sub
xor
aad
fs
or
aam
movsb
jmp
sbb
fidivl
mov
mov
mov
adc
ror
sbb
mov
das
adc
movsb
cmp
fstpl
adc
es
jae
int
and
adc
mov
and
cli
cmpl
jb
ds
addb
sub
jbe
mov
shll
jns
cs
jno
mov
jl
xchg
mov
push
lahf
jp
xorb
insl
outsb
cmp
out
adc
out
cld
arpl
cmp
pop
insb
and
lods
pop
movsb
push
iret
pop
test
negb
divl
push
push
jns
outsl
or
add
repz
add
sub
in
lods
sbb
mov
test
std
or
in
std
adc
mov
mov
shr
mov
sbbl
jb
cmpsl
sbb
cli
add
add
pushf
push
movsl
je
mov
into
inc
loop
stos
pop
xchg
sti
and
or
cmp
cltd
xor
cmp
cmp
pop
xchg
clc
add
xchg
pop
fs
push
stc
cmpl
jmp
xchg
push
xor
dec
mov
xor
xlat
xchg
mov
ljmp
jo
dec
repnz
cmp
repz
add
mov
mov
mov
out
add
scas
sti
mov
dec
pop
pcmpgtw
mov
aad
inc
out
inc
jle
inc
mov
pop
push
imul
aaa
push
test
lds
sbb
sbb
imul
stos
lcall
sub
out
xchg
cs
repnz
lret
and
xor
sub
lcall
mov
sbb
fbstp
cmp
out
mov
cli
mov
pop
pop
into
leave
dec
leave
cltd
pushf
fdivp
cmp
xchg
add
inc
cmpl
jne
ret
insl
mov
mov
mov
mov
enter
xorl
clc
outsl
pop
aaa
cmp
push
cmp
adc
sbb
sbb
inc
add
pushf
jne
sub
sub
jo
lods
cs
imul
lods
mov
es
cwtl
addb
daa
loope
add
rorb
inc
hlt
lds
incl
fbstp
cmp
stc
outsl
push
push
inc
mov
xor
add
and
lods
in
lods
or
daa
add
mov
iret
cmp
js
adc
iret
scas
insl
inc
imul
lcall
out
jge
cli
pop
add
mov
fxch
daa
fdivs
inc
sub
jae
sub
or
dec
cs
fadd
xor
out
popf
outsl
sti
sub
xchg
loopne
mov
cwtl
scas
add
push
dec
xchg
xor
iret
imul
or
fwait
add
sub
iret
sbb
or
mov
scas
xor
jns
pop
push
and
outsl
cmp
push
mov
nop
inc
mov
xor
iret
dec
lea
mov
add
mov
adc
cmp
lock
xchg
out
out
xchg
xor
pop
or
sbb
ljmp
ljmp
mov
dec
stos
pop
iret
xchg
lret
jp
push
xchg
pop
jne
in
aas
into
dec
ja
xor
int
mov
shlb
jge
and
jmp
les
pop
pop
push
fs
int3
into
push
jl
mov
loope
mov
outsb
dec
icebp
pop
in
clc
or
push
xchg
in
jg
cli
cmp
ret
mov
aas
xor
aaa
push
cmp
jg
scas
push
sbb
jb
dec
fwait
jmp
mov
dec
add
cs
mov
loopne
dec
filds
ret
xchg
xchg
adcb
je
movsl
das
int3
add
adc
xor
mov
cli
mov
rcr
aad
cltd
push
movsl
cmp
xlat
std
mov
sub
or
pop
loope
push
push
les
sub
jne
mov
and
and
popf
mov
inc
repz
mov
aad
clc
ret
jl
or
mov
push
add
mov
shrl
xchg
jp
ror
stc
push
push
lahf
call
data16
sub
icebp
xchg
loop
mov
mov
repnz
into
cmp
js
arpl
mov
icebp
push
in
in
mov
nop
or
mov
clc
inc
shll
adc
ficomps
fldl
jne
sub
mov
add
cmp
xor
ja
into
rcrb
out
pusha
insb
pop
stc
std
jl
jmp
inc
mov
push
inc
jmp
clc
es
xchg
aad
out
testb
rcll
add
and
lea
xor
jmp
pushl
xor
shlb
cmpsl
push
inc
sub
pusha
loopne
rcrb
mov
movsl
insb
arpl
enter
add
add
fisubs
xor
inc
incl
push
arpl
nopl
and
sbb
out
cmpl
push
pop
jmp
int
outsl
shlb
mov
orl
inc
xlat
dec
cmpsb
push
or
call
jecxz
push
in
xchg
add
push
push
and
fldt
imull
or
push
mov
cmp
in
jg
shr
test
roll
test
inc
dec
imul
mov
mov
enter
stos
mov
lods
inc
dec
fidivs
repz
jg
xor
xchg
ljmp
frstor
mov
push
pop
cmpsl
sub
daa
push
mov
or
mov
sahf
jl
lea
mov
je
xor
stos
mov
or
add
out
mov
add
xor
pushf
ficompl
push
inc
pop
notb
pusha
pushf
popf
bswap
movb
fisubs
xchg
xchg
cld
mov
nop
add
cli
repnz
pop
and
mov
push
pushf
inc
mov
testl
movsl
xchg
test
push
and
inc
mov
push
fldl
and
in
in
lods
addr16
lret
int3
pop
mov
ror
daa
fldl
jecxz
fstps
int
jo
cli
dec
movsl
cmp
push
mov
mov
mov
push
das
rorb
stc
pop
jecxz
adcl
in
cmp
movsb
sub
sarl
in
lods
jbe
iret
jle
sbb
pop
inc
pop
xor
jmp
sub
dec
jns
test
and
aas
cmpsl
shrb
ja
aad
gs
in
repz
mov
dec
inc
pop
ret
pop
imulb
jae
out
icebp
adc
pop
es
xorl
jnp
mov
push
inc
sti
loope
sbb
mov
daa
pop
loopne
outsb
fwait
sbb
scas
imul
push
mov
adc
and
or
push
jg
or
jl
push
lods
loope
ds
sub
push
insb
test
mov
cli
cmp
adc
mov
arpl
scas
push
sbb
and
lret
aas
mov
int
sub
in
lods
outsb
cld
adc
xlat
out
out
lret
mov
sbb
or
dec
outsl
enter
aas
mov
jecxz
pop
lret
pop
cmp
std
jecxz
sub
shl
jecxz
fs
add
adc
fs
sbb
scas
add
sub
bound
jno
xchg
ja
mov
adc
mov
push
test
adc
pop
arpl
repnz
xor
jno
and
stc
fsubs
sub
xchg
jns
in
xchg
mov
rcl
inc
mov
pop
addl
jecxz
into
pop
sbb
out
and
add
mov
xorl
xchg
pop
and
aaa
daa
add
ja
sub
xchg
push
sub
cli
dec
push
test
movsl
sub
mov
mov
sub
mov
ja
mov
rclb
notl
xor
into
aas
leave
adc
pop
sbb
add
push
pop
mov
lock
xchg
sbb
add
inc
aaa
in
pop
adc
add
stc
and
lods
push
mov
loope
and
icebp
jl
mov
push
push
cs
mov
pop
scas
xor
inc
jne
fwait
shr
fistpll
ret
fstl
fdiv
push
mov
rorl
sub
rol
pop
xchg
lret
sahf
pushf
cmp
pop
xchg
std
fs
push
adc
bound
shrb
push
in
in
mov
jecxz
js
cmc
fisubs
aad
push
cmc
mov
jmp
sarb
pop
dec
js
ficoml
cld
xlat
dec
cmp
xchg
pushf
pop
test
orb
sub
je
into
jge
push
push
cli
loope
lds
ss
ret
xchg
rcll
pop
xchg
sbb
sub
fcompl
mov
es
mov
mov
lods
aam
lea
insl
add
mov
jbe
addr16
xor
push
js
adc
mov
mov
je
or
call
stos
jmp
enter
fidivrs
mov
cld
into
scas
mov
xor
ret
adc
movsb
loopne
pusha
fimull
mov
jns
sub
int
xor
mov
push
inc
ficoms
jb
aaa
rolb
sarl
xor
and
xchg
dec
cld
int
int3
test
cmp
sub
das
lds
sbb
jmp
addr16
insl
mov
out
or
inc
shll
cmp
and
pushf
dec
or
cmc
xchg
jg
xor
inc
js
cmpsb
dec
pop
pushf
sub
xlat
mov
adc
add
mov
and
out
outsb
push
push
fnsave
stos
dec
or
push
cmp
data16
stos
and
jge
push
sahf
imulb
dec
shlb
out
imul
rol
dec
add
jg
cmp
sub
sti
mov
pop
inc
mov
push
fsubs
or
xchg
sbbl
pop
push
sbb
dec
outsl
sub
dec
xor
xor
inc
jge
cmp
mov
mov
push
arpl
lret
insb
mov
cmp
push
xor
popw
adc
stc
mov
je
bound
and
pop
push
ss
adc
cwtl
push
jecxz
add
ja
mov
loopne
or
add
jae
mov
cmp
mov
sub
je
push
ret
lods
data16
ljmp
add
cwtl
loop
aad
sbb
rolb
stos
mov
ret
or
fwait
adc
out
or
daa
test
xor
dec
aad
repnz
pop
in
stc
in
aam
ret
dec
int
pop
inc
pop
lds
dec
xor
in
loope
fwait
mov
adc
leave
pop
sbb
int3
mov
jecxz
push
pop
adc
add
cmp
shrl
int
dec
sar
cmc
mov
jecxz
and
cwtl
leave
dec
mov
pop
jmp
push
imul
or
jne
xchg
or
sub
dec
lods
test
lret
mov
sbb
or
inc
jns
inc
xchg
popa
lret
jns
dec
xchg
xchg
arpl
push
add
xchg
arpl
xchg
add
cmp
cli
fwait
loopne
push
lahf
push
sub
js
jno
inc
mov
pop
and
push
or
xor
aaa
dec
fiadds
mov
and
add
in
jg
adc
push
sub
xlat
xchg
imul
push
ja
test
rolb
fnstsw
push
jp
aam
std
shll
mov
mov
push
add
add
xorl
jns
mov
cmpsl
dec
stc
mov
jmp
jle
scas
testl
or
scas
sub
pushf
xchg
repnz
addr16
idivl
lret
jnp
rorb
shl
jo
push
js
xor
lds
out
jnp
pusha
stos
addr16
outsl
adc
adc
or
jbe
jecxz
adc
or
lds
adc
push
jl
adc
andl
mov
inc
mov
push
stos
mov
xchg
fucom
pop
aas
mov
mov
and
repz
sbb
or
sbb
dec
pop
das
int
cmp
mov
cmpsl
add
cmp
outsl
scas
or
sahf
out
inc
les
in
sahf
insb
mov
stos
and
jge
sub
dec
push
popa
aaa
ds
mov
lods
std
dec
rcrb
sar
xor
cmp
addr16
mov
inc
test
filds
out
popf
pop
cli
in
adc
pop
aam
jno
mov
xchg
mov
and
ret
mov
fsub
pop
ret
sub
loop
inc
mov
add
xlat
clc
mov
push
into
bound
divb
cs
in
and
ljmp
inc
inc
jl
adc
and
sahf
jae
dec
mov
dec
mov
cmpsb
leave
push
and
jno
add
jg
clc
pusha
nop
into
cld
mov
push
cmc
fisubl
idivb
stos
pop
xchg
ja
lds
out
xchg
arpl
jbe
push
adc
out
rcrl
les
jne
cmp
push
test
test
ret
rcrb
aam
sub
std
mov
in
pop
cli
scas
pop
or
mov
dec
push
lea
mov
popa
jnp
test
mov
mov
xchg
adc
adc
or
sbb
jle
pop
sbb
ds
inc
sub
fbld
jbe
cld
mov
xor
int
ds
and
sbb
pushl
pop
and
loop
nop
out
lret
xor
dec
pop
sbb
lock
push
rcll
add
sub
pop
mov
aaa
dec
pop
outsb
mov
pop
imul
add
cwtl
jl
call
das
repz
sub
dec
cwtl
shlb
stos
mov
mov
dec
pushf
sarl
xor
and
xchg
add
cmp
jne
lods
mov
jo
aaa
test
pop
negl
lret
and
subl
and
sbb
int3
test
nop
jne
fwait
shl
mov
jnp
loope
loopne
test
adc
dec
int3
sbb
cmpsl
bound
or
pop
xchg
rcr
mov
cmp
dec
pop
lret
bound
lock
pop
sub
fistps
jle
xchg
inc
mov
or
int
js
add
insl
sbb
sahf
dec
mov
adc
mov
and
or
repz
cmp
in
lcall
dec
aas
imul
cmp
mov
cmpsl
addr16
int
sub
mov
fucomip
sti
pop
or
movb
xchg
push
imul
cs
mov
jnp
pop
cs
insb
push
pop
mov
push
popa
mov
pop
hlt
popf
push
sarl
popf
outsb
lret
xchg
data16
cmp
xor
dec
mov
jbe
lock
jnp
dec
mov
jg
idivl
mov
insb
jne
sub
xchg
aam
fcoml
int
jg
ret
out
repnz
cwtl
and
pop
les
push
xchg
stc
fs
sbb
stos
xchg
sbb
bound
out
scas
or
xchg
loop
divb
jae
lret
add
xchg
xlat
sarl
out
add
hlt
pop
data16
flds
out
or
imul
shlb
push
add
movsb
pop
sbb
push
mov
fidivl
in
movsl
in
loop
mov
mov
push
pop
pop
ret
jae
fstpl
pop
negb
filds
cmpsl
mov
cmc
push
xchg
push
int3
leave
ss
mov
push
lret
lahf
mov
movsb
sbb
pop
mov
add
inc
clc
add
or
call
or
subb
jg
jge
das
mov
cs
loop
dec
inc
xchg
inc
inc
imul
push
bound
xor
cmp
ss
inc
aaa
sub
and
cmp
xchg
lahf
in
jb
mov
popl
test
int
lret
inc
cwtl
lret
mov
in
and
lret
insb
lcallw
stos
mov
adc
mov
xor
xor
xorl
dec
mov
les
lds
xor
pop
test
int3
xchg
pusha
leave
les
dec
pop
mov
fsts
mov
adc
mov
pusha
mov
mov
sbb
movsb
and
mov
sbb
in
aam
sub
jne
imul
inc
out
dec
and
pop
dec
add
push
std
lahf
nop
repnz
into
fisubs
or
mov
push
int3
out
and
xor
loop
and
xchg
push
mov
fucomip
mov
cli
adc
mov
or
dec
xor
pop
lahf
pop
sbb
aaa
rep
pop
popa
adc
pop
repz
mov
mov
pop
or
addr16
stos
ja
cmp
jecxz
into
les
push
adc
adc
gs
les
adc
and
inc
sub
out
and
shlb
sub
aaa
nop
daa
insl
enter
insb
push
adc
mov
or
pop
sarl
in
and
jns
xchg
xchg
jo
and
lds
xchg
imul
stc
mov
lret
push
popa
xchg
push
je
mov
cmp
mov
addb
cld
cmpsb
nop
jae
or
mov
test
xchg
int3
loopne
popa
mov
sarb
dec
rcll
mov
movsb
mov
xchg
decl
and
dec
push
sarb
aam
ror
xchg
fidivs
sbb
sbb
add
cwtl
push
insl
sub
xor
clc
inc
xchg
hlt
subb
insl
xlat
stos
lods
add
inc
adc
in
daa
lods
xchg
outsl
cmc
shrl
xchg
stos
push
ljmp
insb
pop
repz
out
inc
shrl
addr16
mov
mov
hlt
and
xorl
push
mov
mov
cltd
andb
or
inc
mov
fwait
push
jp
push
lahf
pop
cwtl
imul
dec
sub
pushf
popa
lahf
xor
aam
rep
mov
negl
pusha
inc
jno
fs
and
mov
mov
sbb
addr16
mov
inc
cltd
inc
inc
or
cmp
cmpsl
in
or
cltd
test
push
stos
add
lahf
test
cltd
mov
pop
mov
or
pop
hlt
cmp
jge
clc
fisttpll
push
in
and
test
mov
xchg
aaa
jns
mov
nop
cmc
fwait
sub
jnp
or
and
in
jge
outsb
ret
mov
jg
dec
xorb
add
imul
jmp
test
inc
jg
adc
mov
leave
add
stc
mov
idivb
jo
or
insl
pop
stos
loop
ret
inc
jp
es
or
mov
in
in
sbb
sbb
dec
pop
xor
jnp
enter
xor
adc
inc
out
jge
ret
mov
fmul
or
push
sub
daa
push
mov
lods
out
inc
into
sti
or
out
jp
dec
cmpsl
jecxz
test
call
fldl
shrb
fbstp
xchg
inc
mov
test
or
xchg
movsb
outsl
push
mov
xchg
outsl
add
jecxz
je
ret
xor
cmp
push
and
jnp
out
fbld
inc
adc
jp
repnz
sub
roll
mov
sbb
lahf
inc
mov
sub
cmp
sub
enter
xchg
aaa
jo
push
mov
mov
push
jbe
xchg
pop
scas
xchg
aas
pop
sti
jae
inc
sarb
repnz
push
and
sub
rcrb
dec
jb
scas
pop
dec
sub
sub
pop
jl
add
cmpsl
mov
ljmp
add
repz
repz
xchg
pop
gs
inc
cltd
pop
shrl
pushf
adc
imul
xchg
and
mov
jo
push
mov
cmp
mov
jg
and
pop
cwtl
push
addl
cmp
incl
fstps
add
repnz
and
loopne
mov
das
mov
dec
mov
cli
jmp
inc
or
add
xchg
fisttpl
push
popf
lods
outsb
or
mov
ds
or
fiaddl
jo
hlt
insb
outsl
pop
test
aad
adc
mov
cmp
cwtl
push
movsl
sub
push
pop
bound
sbb
arpl
xchg
inc
icebp
mov
jbe
push
adc
out
cmp
adc
push
cmp
mov
into
pop
js
int
in
or
movsl
imul
jmp
loope
das
adc
fwait
mov
hlt
push
sbb
frstor
fwait
inc
pop
add
out
mov
andb
fidivl
out
xor
lahf
movsl
bound
mov
cltd
cmp
pop
leave
jo
fldl
pop
fisttps
in
insb
mov
sbb
or
dec
in
scas
not
and
incl
mov
fwait
xchg
subb
jle
pop
out
dec
cmc
or
mov
add
mov
inc
add
or
sahf
loopne
add
jge
pop
push
xchg
xor
jge
lahf
sarb
daa
mov
jg
rcrl
scas
daa
push
cmp
cmpsb
negl
daa
sbb
or
cmp
fsubl
cmp
lret
mov
add
iret
cmpsl
cmpsl
aad
std
sbb
out
dec
sub
call
insb
push
enter
cltd
sub
scas
jne
push
rdmsr
pop
fsubrs
int3
int
mov
filds
mov
mov
ret
pop
stos
mov
ljmp
mov
lock
orb
push
and
test
aam
cld
lods
sbb
sbbb
incl
adcl
pop
lret
out
push
movsl
pop
mov
icebp
xor
sbb
sbb
movb
inc
rcll
sbb
in
jg
mov
mov
ficompl
sbb
mov
mov
xorb
adc
jo
pop
adc
lds
dec
movsl
xchg
sbb
sub
lds
lods
dec
inc
mov
cmpsb
je
test
sahf
mov
push
scas
cld
andb
mov
enter
ficomps
mov
sub
dec
cld
aam
lahf
mov
dec
mov
fists
jb
mov
push
push
cmpsl
sub
ret
cmp
stos
jne
mov
fwait
daa
or
dec
cmp
das
inc
cmp
add
push
jp
inc
mov
nop
pminub
aad
mov
and
sarb
popa
in
jp
mov
cmp
rorb
ljmp
sti
jl
push
lret
sarb
adc
mov
fwait
out
fisubrs
sbb
pushf
sahf
fldenv
scas
out
mov
cmp
ss
push
outsb
scas
cmc
xor
pusha
addr16
repz
cmp
lret
int3
popf
out
call
imul
add
pop
mov
imul
ljmp
ret
add
rcl
out
dec
ja
outsb
fistpl
or
fisubrl
insl
or
push
xchg
loope
add
das
pusha
xchg
sbb
imul
xchg
test
xchg
or
add
cmpsw
pop
int3
xchg
rclb
les
outsl
or
outsl
and
xor
or
in
sbb
lret
cmp
pop
xor
jmp
sbb
testl
lods
test
mov
sub
fs
addr16
gs
cmp
outsb
jge
flds
inc
jmp
clc
mov
add
jmp
fiadds
aas
push
push
imul
add
cmp
lret
leave
fbstp
or
enter
imul
cmp
int3
daa
xlat
sahf
mov
and
mov
shlb
pop
jbe
bound
std
push
dec
rclb
dec
xchg
inc
mov
lock
add
xchg
or
mov
add
cmp
clc
hlt
fistpll
pop
and
or
push
add
inc
adc
lock
ss
cmpsl
lcall
add
xchg
movsl
push
cli
fmul
jae
pop
jle
sti
sbb
je
jno
mov
idivl
dec
loopne
pop
in
mov
jge
outsl
addl
btc
bound
push
adc
lods
xchg
std
jnp
jle
in
ds
insl
push
mov
cmp
and
fldt
fisubl
leave
adc
test
daa
push
xor
cmp
scas
adc
and
in
push
pop
aaa
dec
cmp
addl
and
pop
jb
inc
fsts
add
mull
shlb
pop
adc
sub
dec
ljmp
sub
pop
imul
lods
xor
arpl
jo
cli
or
cvtps2pd
mov
mov
adc
out
xchg
in
or
das
shlb
and
clc
and
outsl
test
push
sarb
mov
cmp
fs
clc
pop
or
ss
jle
dec
lock
adcl
enter
fisubl
jbe
fsubrl
inc
gs
in
dec
push
aas
pushf
pusha
movq
mov
les
out
aaa
bound
hlt
decb
cmp
mov
mov
and
and
cmp
or
jno
nop
sbb
ja
int3
je
out
xchg
pop
orb
cmp
mov
movsb
xor
dec
sub
mov
pop
sbb
jecxz
mov
cmp
popa
jns
in
pop
push
mov
mov
mov
or
jae
test
cmp
shl
cs
mov
popa
sub
iret
popa
test
data16
stos
fistl
cmp
mov
out
inc
lret
daa
push
faddl
jne
jno
in
jnp
pusha
sbb
pop
pop
gs
push
mull
mov
popa
cmp
push
fwait
mov
fidivl
jbe
mov
jae
mov
es
scas
stc
jge
push
pop
inc
hlt
fnsave
rcr
push
rolb
cld
movsb
inc
out
fists
push
rclb
loopne
or
dec
imulb
test
xchg
movl
out
dec
inc
mov
rcll
pop
mulb
ja
rcr
mov
je
scas
notl
sahf
adc
mov
xor
mov
insl
or
daa
or
lods
mov
insb
add
iret
ljmp
xchg
dec
sahf
and
push
ret
jl
xchg
jbe
pop
ss
arpl
repz
jecxz
jbe
loopne
js
dec
call
xchg
fildll
pusha
shll
adc
push
cmp
or
outsl
les
mov
mov
aas
xchg
or
sub
cmp
xabort
or
adc
imul
rcl
and
stos
ror
adc
adc
or
aas
cmp
daa
sbbl
fcos
mov
cmpsl
arpl
pop
pop
inc
mov
repz
cmpsb
ret
sbb
movsl
cmp
aas
xchg
push
test
cli
dec
std
mov
ds
xchg
idivb
in
adc
xchg
mov
lock
cmp
fisttps
jno
jns
movsb
ljmp
negl
aas
sub
stos
adc
js
jle
out
imul
test
call
icebp
cmp
xchg
in
lret
cs
fwait
loop
jns
ja
xchg
int3
pop
jmp
scas
popf
pop
xchg
push
inc
loop
or
in
mov
popf
dec
sbb
jg
cmp
cmc
fwait
loopne
dec
push
mov
push
jae
enter
push
in
std
mov
mov
sub
adc
les
sub
lret
adc
mov
daa
push
mov
out
or
jnp
cltd
std
mov
fadds
mov
fmul
push
pop
aaa
dec
pop
scas
movsb
fdivrl
jl
xchg
jp
stos
lds
xchg
int
jo
inc
push
lock
repnz
xlat
add
test
mov
mov
lods
lock
mov
cltd
pop
mov
sbb
jge
aad
dec
pop
inc
fs
loop
xchg
xor
dec
cmpsb
sub
cmp
pop
js
mov
icebp
pushf
push
pop
add
cli
mov
add
roll
sub
aam
xor
xchg
xor
imul
cmpsb
push
arpl
xor
inc
pushf
mov
int3
cs
sti
jae
inc
int
sbb
push
std
mov
pop
push
pop
xor
add
cwtl
xchg
push
gs
mov
test
xchg
jecxz
jns
xchg
andb
dec
mov
pop
loopne
repnz
push
imul
ret
cld
xchg
int3
pop
shrl
iret
mov
neg
pop
pop
shr
popa
pop
lods
mov
pop
mov
andl
push
or
fs
pop
xor
xchg
icebp
ret
lahf
mov
addr16
push
inc
inc
outsb
sbb
scas
pop
js
pusha
xor
int
insb
inc
pop
cwtl
int
pop
fidivrl
inc
jmp
std
push
jbe
fwait
inc
dec
cld
es
sarb
mov
call
fdivp
jg
mov
hlt
and
sub
mov
fs
push
pushf
clc
leave
fsts
cmp
cmpsl
dec
mul
loopne
adc
pop
mov
outsl
or
mov
loope
cld
sub
dec
pop
xor
or
rolb
int
push
inc
ljmp
scas
in
push
lcall
xchg
xor
xchg
cs
cmp
sub
fadds
jge
cmp
cli
fimuls
sub
loop
daa
inc
lods
lds
dec
imul
aam
sarb
mov
ss
dec
jne
adc
aad
dec
negb
dec
out
mov
mov
adc
add
mov
addb
insl
push
cmp
leave
clc
cmc
cmp
into
test
iret
js
fildl
sub
je
adc
in
sbb
inc
in
out
insb
dec
and
outsl
mov
js
fidivs
rep
add
int
out
fistl
push
inc
int
dec
mov
pop
xchg
cmpsb
out
jno
stos
cli
mov
fiadds
jge
imul
int
shrb
lret
push
cmp
call
and
dec
hlt
dec
xor
stos
pop
push
mov
pop
push
test
lret
mov
push
jnp
xchg
cmp
xor
push
and
mov
mov
jb
sub
std
cmp
adc
push
popa
mov
out
jp
push
ja
fisttpl
test
push
push
sub
add
sub
clc
out
pop
pushf
arpl
jp
xchg
cwtl
jo
es
cmp
jmp
mov
mov
and
call
push
mov
and
popa
inc
mov
xchg
mov
icebp
xchg
sbb
je
sbb
mov
cmp
out
cli
fdivl
test
xor
and
cmpsl
mov
push
pop
lods
push
pop
idivl
popa
hlt
pop
push
mov
movsb
outsl
push
js
fsubrs
xor
mov
xor
jae
outsl
push
mov
pop
aaa
dec
fwait
mov
cli
or
cmp
imul
sub
hlt
out
pushf
shl
dec
rcrb
test
or
mov
sub
std
mul
es
jne
sbb
fdivr
lods
adc
cld
jo
sbb
repz
aas
push
add
lret
inc
rorl
xor
push
test
loope
mov
pop
out
xchg
xchg
stos
movsb
aam
call
mov
add
jle
jno
lods
mov
inc
out
nop
cmp
test
mov
mov
sub
add
mov
and
xor
push
popf
mov
dec
das
lods
in
jo
jo
lock
int
mov
jbe
cmp
sbb
imul
inc
gs
mov
in
lret
push
test
clc
fdivrl
loop
fbstp
jge
dec
lahf
inc
xor
and
dec
jb
std
clc
mov
mov
mov
pop
cmp
xchg
mov
add
push
push
arpl
jne
mov
adc
or
arpl
and
cmp
pop
rcrl
aam
xchg
jnp
sub
data16
add
jne
lods
je
je
jns
rol
stos
or
push
mov
rcll
and
call
fists
jns
rcrb
mov
pop
arpl
push
scas
in
inc
push
mov
sub
insb
ja
inc
push
pop
lods
dec
cmc
xchg
push
sbb
cmp
xchg
or
sbb
mov
xchg
sbb
xchg
ficoml
sbb
adc
outsl
push
and
icebp
sub
je
sahf
and
cltd
les
das
adc
pop
out
inc
test
hlt
xor
jae
sahf
mov
cmp
bound
insb
ja
inc
and
jg
out
xchg
je
inc
xchg
out
stc
addr16
sub
cmp
orb
mov
mov
out
paddsw
mov
or
imul
dec
xchg
sbb
mov
xor
inc
push
lods
pop
mov
mov
gs
lea
clc
in
js
cmc
add
aaa
test
arpl
cltd
gs
inc
jmp
add
sub
adc
xchg
rcll
xchg
mov
rol
push
xor
cmp
xchg
inc
add
ret
ja
addl
dec
fdiv
loop
pop
xchg
inc
xor
push
xchg
inc
shl
inc
ret
xchg
xor
andl
push
test
xchg
out
dec
insb
mov
cltd
dec
mov
cmp
and
xor
add
mov
test
sbb
ss
test
movsl
dec
in
cmpsl
jmp
adc
and
sub
pop
mov
hlt
xor
out
aas
xchg
cmp
outsl
arpl
pop
cwtl
shl
pop
repnz
inc
xchg
adc
or
out
aad
dec
dec
pop
pop
inc
push
scas
icebp
mov
stc
jecxz
sbb
cmpsl
jne
out
sbb
adc
iret
stos
adc
out
sarb
mov
dec
lret
jb
addl
inc
adc
cmp
inc
loope
subl
xorb
lock
loope
in
out
outsb
bound
jle
push
mov
inc
int
xor
dec
xchg
inc
push
push
test
fwait
mov
aaa
xlat
leave
mov
popf
and
mov
or
repz
push
in
out
dec
and
jne
mov
inc
adc
data16
mov
sahf
ret
movsl
dec
mov
cmp
aaa
sub
hlt
js
int
aam
push
test
inc
stc
aad
fdivrl
push
outsb
fimull
mov
adc
fwait
test
mov
popa
xor
push
sbb
add
mov
push
pusha
ljmp
andb
mov
fs
in
cmp
xor
adc
arpl
push
cmp
cs
jns
push
and
addb
xchg
and
inc
sahf
cmpsb
outsl
test
lock
daa
xchg
lods
rcrb
mov
add
pushf
push
andb
pop
mov
lds
in
stos
stos
lock
je
push
inc
xchg
push
mov
inc
add
lcall
and
adc
mov
out
xchg
stos
aam
mov
pop
hlt
fsubr
or
fiaddl
arpl
dec
push
data16
and
xchg
push
rcrb
aam
ja
mov
lods
inc
dec
mov
pop
into
jge
stc
or
dec
loop
add
dec
mov
add
cmp
sbb
inc
ficompl
loopne
adc
daa
pop
mov
and
pop
mov
es
or
dec
iret
out
fstps
fwait
mov
push
cli
das
adc
call
enter
inc
mov
rorb
xor
or
fwait
inc
mov
xchg
lock
popf
in
lea
dec
sahf
mov
test
mov
jl
enter
and
lahf
sub
push
leave
std
lock
xlat
pop
mov
pop
sti
mov
jne
jne
pop
ja
dec
fcoms
stos
shll
jne
pop
incl
lret
pop
inc
cmpl
imul
jnp
or
lods
jmp
cmpsb
enter
test
cmpsb
sub
jl
jae
out
imul
les
cli
mov
daa
xor
and
xchg
jno
pop
cmp
cmp
mov
mov
jno
idivl
imul
jo
jmp
adc
lods
or
sub
leave
pop
shr
daa
scas
push
dec
mov
int
dec
or
dec
mov
push
dec
push
outsl
sbb
insl
xlat
xor
cltd
test
int3
enter
stos
jae
inc
cmpsl
add
std
push
mov
pop
xor
stc
test
mov
jmp
or
std
mov
jmp
add
movsl
sbb
lahf
pop
mov
push
mov
push
insl
inc
repnz
cmp
jns
lods
sahf
out
popa
aam
jge
jecxz
vfrczps
inc
mov
mov
loopne
imul
ljmp
xchg
decl
pushl
les
sti
icebp
cmpsl
clc
movsl
sub
out
in
rolb
std
in
add
notb
mov
fldl
ret
mov
dec
lcall
sub
push
lret
fsubrl
dec
arpl
mov
lahf
xchg
aam
lahf
mov
fisubs
mov
insb
sbb
sahf
in
scas
add
mov
jecxz
adc
xchg
adc
xor
and
imul
push
mov
sbb
rorl
incb
and
add
movsl
pop
leave
sub
in
pusha
lea
bndstx
ljmp
jb
add
sub
fsubr
sub
nopl
adc
inc
sub
iret
in
pop
inc
and
mov
lcall
xchg
bound
pop
out
pop
and
enter
xchg
xlat
and
mov
add
js
adc
fisttpll
xchg
ljmp
jp
pop
cld
inc
add
dec
sbb
mov
sub
enter
mov
lret
sbb
sub
dec
cmpsl
inc
cmpsb
popf
mov
mov
fstl
push
mov
push
xchg
or
lret
loopne
dec
or
pop
lods
cmp
dec
inc
sub
xchg
adc
inc
imull
nop
xor
incb
clc
icebp
movsl
and
jnp
in
daa
insl
ret
cmp
fwait
dec
je
mov
bound
mov
adc
adc
ja
jns
push
xchg
ljmp
or
xor
dec
rolb
cli
adc
xor
and
push
adc
add
mov
pop
ss
rolb
xor
test
xchg
add
pop
xor
clc
cmp
mov
das
out
pminub
dec
cld
xchg
enter
cmp
mov
cmp
fistpll
pop
ret
xchg
cmp
clc
divb
testl
jmp
inc
ret
inc
or
and
pop
shrl
outsl
imul
or
popf
ljmp
add
cmc
adc
loop
jns
mov
dec
xor
ficomps
xchg
fnstcw
xchg
or
insb
push
sahf
sub
insb
or
scas
jmp
and
stos
test
inc
pop
pop
xor
jb
jp
js
lods
imul
int3
mov
or
loopne
daa
stos
push
je
dec
inc
inc
sbbb
mov
mov
lahf
lock
mov
sub
sub
inc
jnp
xor
jl
leave
mov
arpl
sub
sbb
divl
aam
cmc
pop
and
push
sub
jecxz
xor
sbb
xrelease
in
test
lret
ret
sahf
cmpsb
jecxz
out
jae
mov
push
insb
sti
pop
pop
or
mov
arpl
js
pop
dec
int3
dec
adc
out
xchg
test
jae
add
pop
arpl
in
pop
jmp
or
shr
xchg
cld
out
pop
inc
out
test
dec
ss
out
mov
push
pop
fistps
clc
call
cmpl
xchg
icebp
push
pop
lods
faddl
inc
rol
or
cltd
daa
and
jns
int3
sub
arpl
std
cmp
std
pop
icebp
pop
xor
movsl
out
lock
xlat
loope
sub
xchg
sbb
pop
movsb
cmp
mov
sahf
jecxz
clc
out
mov
dec
mov
and
fwait
xchg
xchg
push
and
sbb
js
xchg
cltd
dec
and
pop
test
jecxz
int
mov
mov
aaa
jb
push
fcom
and
jge
and
aaa
ja
fstpt
xorl
adc
mov
stc
push
fucomip
test
ljmp
jecxz
in
jmp
sub
pop
and
mov
inc
xchg
push
cmp
ret
jno
jl
cltd
and
les
js
xlat
inc
pop
iret
add
adc
cmp
popa
div
sub
sarl
movb
fs
loop
xor
mov
pop
add
dec
popf
rorl
mov
insb
out
dec
dec
push
mov
fucom
repz
pop
cmpsb
subb
and
lods
inc
pop
call
push
movsb
add
leave
sub
cwtl
cmp
pop
test
aam
or
mov
sbb
xor
call
out
shr
insl
cmp
xor
sahf
xchg
inc
popa
stc
test
std
and
push
pop
inc
shr
std
insl
cmp
or
fldt
xor
stos
nop
jo
iret
movsb
sbb
testb
mov
mov
in
adc
lds
jae
xchg
inc
push
test
dec
mov
or
cmc
pop
mov
cmp
test
and
add
roll
inc
jo
cwtl
add
lock
jg
setne
stos
mov
push
push
ret
andl
mov
sub
jmp
outsb
fabs
inc
je
int3
add
mov
add
xor
sub
lock
into
outsl
scas
cmp
push
push
mov
jno
out
out
mov
jle
ss
in
mov
out
repz
aam
dec
das
or
lret
out
mov
fcmovu
sbb
inc
xchg
xchg
adc
js
and
sbb
push
dec
pop
pop
cmp
push
sbb
sbb
jno
ljmp
dec
mov
les
sbb
pop
cmpsb
sarl
add
jg
cltd
loopne
xor
jb
lahf
add
test
cs
call
and
test
cmpsl
mov
rcll
jp
cmp
fildll
call
adc
lock
jno
dec
leave
inc
in
or
iret
in
cmpsb
mov
loopne
or
popf
addr16
out
pop
pop
incb
pop
jg
daa
mov
in
inc
cmp
xchg
mov
jns
or
ss
lds
stos
dec
das
jge
movsl
aam
xchg
test
dec
fmull
or
loop
mov
addr16
je
pop
bound
cmp
and
cmpsl
scas
mov
mov
xchg
or
dec
adc
fisubs
xorb
cmp
repnz
xchg
int
xor
hlt
jnp
call
inc
repz
mov
leave
sbb
in
dec
je
mov
sahf
lods
jl
or
aaa
lret
push
insl
cmp
fyl2xp1
mov
push
sub
xchg
ret
push
lock
adc
lds
push
xor
addb
cmp
xlat
loope
push
mov
cmpsb
out
jecxz
insb
adc
mov
sbb
pop
dec
call
imul
pop
pusha
dec
imulb
mov
insl
dec
fs
adcb
mov
add
int
in
push
ficoml
mov
fcmovnb
es
and
fbstp
loopne
push
inc
push
mov
outsl
cmp
pop
jnp
loop
sub
jae
dec
push
sarl
push
push
out
sub
fcompl
mov
and
sbb
sarb
jle
into
shr
jb
jae
inc
insl
setae
mov
lret
cltd
test
push
cwtl
jno
mov
dec
rcr
sub
mov
mov
xrelease
aad
add
mov
pop
stos
jne
inc
mov
scas
jl
sbb
lahf
flds
lock
popf
test
xchg
movsb
js
xchg
xorl
pop
mov
dec
loop
pop
fwait
les
cmc
push
or
ficoml
repnz
ljmp
jns,pt
and
test
cli
repnz
lods
mov
repz
mov
dec
push
shlb
xor
pop
jmp
push
sbb
or
fcmovnu
jle
cwtl
lods
lock
cmpb
sbb
push
xor
iret
aaa
xor
pop
lea
bnd
or
maxps
xor
scas
sti
pop
mov
push
pushf
lret
lcall
and
sti
icebp
scas
stc
or
xor
test
fidivl
lds
mov
sub
jb
movsl
pushf
scas
nop
add
dec
pop
xchg
add
loop
adc
cmp
push
pop
mov
dec
outsl
test
std
sub
or
andb
bound
fidivs
mov
cmp
mov
insl
fld
xor
cltd
aaa
adc
pop
test
mov
push
push
stos
adc
cwtl
xor
and
clc
jno
jne
lret
test
pop
sub
sub
xor
shr
and
xor
push
insl
push
mov
testl
cmp
fld1
mov
or
xchg
sub
add
sub
adc
aaa
jnp
sbb
neg
mov
push
xchg
mov
je
add
into
sahf
add
xchg
and
sub
jge
movsl
pop
jg,pn
cmc
or
aad
and
sbbb
fcom
mov
adc
cmp
cmc
in
sarb
cmc
fadd
dec
lea
iret
jae
rclb
jb
aad
outsl
lds
fs
mov
outsl
xchg
imul
das
mov
pop
lea
cmp
cmp
sub
lods
pop
adc
fisubl
aam
push
aad
or
imulb
les
sub
lret
push
cltd
pop
add
add
in
test
push
add
loope
les
sti
sub
push
lret
imulb
rclb
fs
sahf
sbb
iret
cmc
inc
mov
push
test
ja
scas
fwait
dec
xor
inc
shlb
sbb
lar
sub
or
jmp
scas
add
push
push
aam
outsl
xchg
inc
jns
xor
jmp
out
pop
fnstsw
pcmpgtd
sbb
jecxz
std
inc
mov
popf
mov
pop
scas
negl
mov
lds
xor
mov
dec
adc
mov
cwtl
push
mov
lods
inc
imull
jecxz
push
dec
call
icebp
je
pop
std
testl
pop
scas
push
sub
sub
dec
fldl
push
mov
sub
push
shll
add
push
or
in
js
sbb
out
or
pop
adc
push
pop
adc
mov
xor
sub
push
pop
mov
mov
cwtl
cmc
push
jg
jp
add
stc
mov
lea
sub
loop
fdivrs
notb
add
mov
ret
scas
mov
dec
mov
cmp
xchg
sub
fsubr
ret
push
pop
sarl
push
and
add
les
sub
cmp
cltd
mov
inc
or
adc
sub
scas
fcomps
adc
mov
cli
jecxz
or
pop
push
movsb
icebp
int3
jg
in
jne
sub
pop
stos
cld
add
push
stos
cmp
cli
bound
mov
mov
inc
sbb
and
xor
sub
bound
out
push
xchg
xchg
mov
out
bts
int3
cmpsb
pop
add
daa
mov
loop
or
inc
repz
xchg
sub
inc
sub
mov
sbb
inc
ja
in
adc
or
cmpsl
mov
mov
add
icebp
adcl
jne
sub
popa
push
popa
addr16
add
jmp
sbb
jbe
xchg
imul
mov
mov
cmc
lret
xchg
jne
and
add
je
stos
mov
dec
xchg
dec
leave
pop
mov
dec
sub
jl
mov
and
sbbl
aaa
out
ss
sub
imull
inc
jmp
mov
push
mov
dec
mov
repz
mov
sub
mov
repz
sub
pop
movsb
add
xor
hlt
leave
iret
daa
je
mov
push
inc
js
ficoms
popf
mov
xchg
push
loope
push
sbb
loopne
jecxz
cli
dec
sub
and
arpl
mov
ja
push
call
or
scas
rcrb
cmc
adc
inc
and
adcb
mov
xchg
outsl
xchg
lret
jo
cli
in
mov
ss
popf
pop
popa
inc
test
out
shr
lods
xsave
aam
cmp
outsl
xchg
mov
ficompl
daa
sbb
sub
and
mov
adc
testl
out
cwtl
fstpt
dec
mov
fldenv
pop
jg
je
cmpl
aaa
xchg
cltd
sbb
jae
jecxz
in
xor
loope
dec
xchg
negl
in
popf
jmp
mov
stos
inc
js
sub
test
iret
rolb
xchg
add
xchg
lret
pusha
add
repnz
or
incb
hlt
sub
outsl
mov
mov
lret
push
mov
jne
lds
lods
sbb
xor
stos
data16
jne
test
mov
push
data16
push
xchg
xor
xlat
xchg
xchg
push
add
sub
push
out
inc
push
xor
imul
ja
scas
mov
mov
sti
fimull
sub
pusha
mov
pop
xchg
rcrb
pop
push
xor
inc
add
sub
outsb
lock
pop
int
pop
aaa
mov
and
mov
jmp
sub
mov
jnp
stc
sbbb
das
and
jo
mov
jbe
dec
sub
in
xor
aam
ficompl
pop
cmc
fisubrs
pop
adc
mov
add
subb
cli
stc
or
jge
mov
adc
cmp
shr
jb
pop
xor
jg
shlb
adc
xor
aas
rcr
inc
js
jo
je
insl
mov
icebp
pop
push
lods
sub
xchg
xchg
mulb
cli
pop
cmp
repz
sbb
mov
dec
jl
sbb
stos
lcall
arpl
shrb
add
inc
and
icebp
imul
add
mov
inc
adc
adc
pop
movsl
insb
test
mov
ret
jmp
ret
pop
inc
pop
xchg
loope
adc
int
stc
test
loop
fisubrl
mov
int
xor
in
xor
sub
mov
adc
jge
xchg
and
cmpsl
dec
jo
in
int
inc
xor
pop
xor
pop
cmp
inc
and
mov
cmp
and
ret
xchg
sub
push
push
adc
push
mov
sahf
inc
rol
ss
arpl
outsl
adcl
xor
das
mov
ss
dec
notl
popa
and
mov
dec
jge
repz
xchg
jno
cmp
pop
shrl
mov
into
push
mov
xor
enter
leave
aam
pop
mov
or
aam
pop
jmp
jmp
mov
mov
leave
push
and
pop
adcb
mov
mov
lret
mov
test
inc
clc
inc
inc
test
jl
aaa
stos
cwtl
mov
mov
clc
sub
imul
imul
or
sbb
add
inc
outsb
add
outsl
add
mov
nop
push
xor
in
inc
mov
xchg
stos
ljmp
call
xchg
mov
mov
addl
call
aad
mov
insl
ljmp
sub
jle
ror
xor
ljmp
enter
or
repnz
mov
push
mov
jne
xchg
std
stos
cmpl
xchg
es
lea
lods
faddp
das
pop
xlat
sbb
push
or
ret
movsl
sub
fidivl
sub
or
in
jne
jae
stos
popl
adc
test
das
sti
in
mov
xor
shll
test
lahf
jge
mov
push
push
ds
xchg
cs
in
push
dec
insl
sti
push
fidivrl
out
aas
adc
jge
xchg
pop
dec
sub
pop
mov
mov
pop
iret
dec
mov
sti
xchg
in
les
add
pop
out
scas
cmpb
ror
pop
lock
sbb
mov
cmpsb
adcl
jg
adc
rcrl
into
xchg
inc
adc
mov
push
jg
push
mov
mov
push
xor
mov
outsb
inc
stc
adc
mov
mov
xchg
mov
adc
fidivl
scas
lock
pop
lahf
sbb
lds
sbb
jbe
cmp
in
subl
or
push
jl
jp
popa
shll
into
pop
jge
inc
xchg
and
adc
dec
jl
push
inc
cltd
pop
test
xchg
and
mov
push
enter
ret
push
push
out
cltd
pop
pusha
movsl
gs
pop
adcb
inc
stc
or
popf
pop
arpl
imulb
push
mov
mov
xor
push
dec
movsb
int3
add
push
inc
cmc
rolb
mov
dec
inc
hlt
pop
jp
mov
inc
testb
jg
lods
xor
and
adc
inc
adc
dec
sub
lea
push
nop
add
jg
jge
push
jge
ficompl
push
cmp
jmp
and
mov
loop
or
add
lods
leave
cwtl
xchg
or
js
mov
out
out
js
pop
les
out
mull
sahf
push
pop
xchg
stos
push
ja
sbb
sbb
sbb
mov
fcoml
imul
test
add
mov
fldt
lret
push
mov
lods
sub
scas
aaa
mov
xchg
inc
inc
js
mov
push
cmpsb
xchg
xor
lds
fisttps
in
jle
push
inc
jbe
fwait
mov
xchg
inc
fisubrs
stc
dec
repnz
gs
aad
xchg
push
stos
sbb
jl
dec
jp
xor
pop
push
adc
jno
push
scas
jmp
add
dec
nop
inc
icebp
mov
sub
adc
repz
inc
dec
xor
inc
jmp
add
pop
mov
adc
scas
add
and
shll
fldl
adc
inc
push
mov
pop
sarb
mov
neg
and
cmp
xchg
or
cwtl
fwait
mov
add
orb
lea
xchg
leave
cmpb
pop
mov
mov
cmc
cmp
fsubrl
add
xchg
test
cmc
pop
mov
insl
cmpsl
loop
dec
mov
mov
push
int
orb
mov
jge
add
add
negb
xchg
sbb
cmpsb
add
mov
adc
pop
and
and
mov
inc
and
jns
cld
push
mov
lods
bound
ficompl
std
jno
push
lods
jecxz
xchg
jle
stos
mov
inc
or
in
dec
mov
outsl
push
leave
dec
xor
xor
fiaddl
jge
push
push
data16
in
outsl
gs
lcall
cmpl
roll
dec
movsb
mov
repz
mov
addr16
cmc
fnstcw
adcb
dec
push
iret
mov
aam
push
and
hlt
mov
push
and
imul
pop
push
outsl
fnsave
movsb
or
test
xchg
rolb
add
or
mov
mov
adc
xchg
push
int3
ss
and
sbb
je
rcrl
mov
testl
and
dec
jecxz
xor
xchg
out
std
adc
jge
shrb
or
cmc
cmp
push
xor
in
int
jmp
data16
cs
adc
cmp
and
cmpsl
cmp
enter
sub
adc
and
cmpl
addr16
test
nop
incb
adc
xor
xchg
inc
lahf
into
dec
aad
push
pop
xchg
jae
xchg
lods
int3
mulb
cmpb
cmp
dec
lret
into
adc
stc
fwait
sbb
insl
add
fwait
pusha
shl
into
add
adc
mov
mov
xchg
sub
loop
dec
sti
gs
incl
lods
cmp
inc
stos
in
pushf
movsb
adc
inc
mov
xor
test
cmp
sahf
cmp
pop
lods
or
aas
outsl
or
nop
addb
aam
fisttps
xchg
in
insb
repz
and
aam
add
push
cli
jne
bnd
loopne
xchg
xchg
cld
and
insl
iret
pop
out
push
roll
xchg
push
std
outsb
subb
pop
fwait
add
cmc
aam
and
jl
xchg
ficoms
in
push
push
jo
test
stos
dec
push
int
xchg
fstpl
push
fdivp
mov
test
sub
les
sbb
std
xchg
ds
rcrb
stc
mov
scas
mov
int3
cld
jge
das
mov
out
push
daa
xor
out
inc
and
outsl
jge
xchg
push
fs
enter
adc
mov
sub
les
cmp
mov
sub
xor
sahf
or
nop
in
mov
js
pop
push
push
je
test
fwait
jl
and
test
sub
jne
adc
xor
cmp
cmp
lret
cmp
lds
pop
and
adc
dec
imul
sub
fisubrs
mov
outsb
xchg
push
lods
push
movsl
lret
sbb
loop
push
aad
pop
add
std
mov
sub
mul
mov
int
push
mov
inc
lret
ret
jmp
fucom
jle
lods
mov
jg
push
clc
sub
xlat
movsl
int
xor
mov
cmp
lahf
clc
mov
outsb
cmpl
enter
das
lret
xor
sub
gs
push
or
movsl
cs
xor
lcall
mov
mov
lret
cwtl
fisubl
mov
pop
in
movsl
dec
xorl
cs
add
out
fldl
inc
jl
repnz
out
sub
dec
and
pop
sub
jmp
and
jo
and
sub
in
int3
ljmp
pusha
popa
mov
testb
out
pop
das
test
xchg
inc
aam
lahf
jecxz
notl
lea
dec
cwtl
xchg
xchg
sti
scas
iret
add
push
mov
cmp
cld
xor
loopne
jns
sbb
jle
es
jb
inc
imul
sbb
mov
mov
mov
or
shlb
lret
je
jmp
cmpsb
lods
lahf
insb
sti
and
or
inc
bt
adc
dec
or
or
test
xlat
shl
roll
sbb
adc
mov
sahf
mov
and
dec
add
mov
pusha
aad
fnstenv
xor
outsl
shll
fs
xor
inc
mov
and
outsb
push
sbb
jbe
js
cld
xlat
xor
sub
cmpsb
ja
cli
sub
cld
and
add
or
and
adc
add
test
or
daa
mov
mov
cmp
sbb
cmc
call
pop
into
pop
mov
inc
mov
mov
jmp
mov
mov
add
inc
and
leave
popa
lock
xor
imul
cmpsl
aad
inc
aaa
or
mov
addr16
ds
mov
pusha
or
xor
push
mov
movl
aam
into
and
push
hlt
xor
lret
fdivs
cmc
mull
jmp
jb
lods
in
mov
xor
adc
or
jge
imulb
pop
scas
mov
jns
and
cmpl
jg
mov
js
ja
sub
jae
cld
aas
xchg
popf
push
xor
repnz
jo
dec
jnp
ds
stos
sub
add
xor
xchg
into
or
sub
fidivs
imul
in
loop
lods
repnz
adc
cs
pop
int
aam
push
dec
loopw
insl
clc
pop
insb
xchg
xor
cs
les
dec
and
sub
lock
lea
mov
fcmovu
sti
arpl
jmp
int3
movb
cmc
imull
push
add
xchg
mov
mov
in
ds
faddl
mov
imul
fst
cli
rcr
dec
test
sub
xor
neg
push
in
popa
cmpb
xchg
and
bound
scas
mov
or
stc
push
stos
sub
jnp
cmpsb
dec
mov
mov
dec
adc
std
pop
xor
xchg
dec
lcall
stos
popf
push
ffree
ret
xlat
ss
aam
cmp
dec
mov
sub
stos
mov
adc
ret
mov
repnz
inc
sub
xchg
pop
mov
lahf
test
xlat
lret
ret
es
das
mov
fmuls
jecxz
and
daa
mov
push
dec
or
frstor
and
sbb
cmp
or
sub
imul
out
and
and
lret
xlat
out
mov
out
insl
sbb
pinsrw
lret
js
xchg
mov
mov
jae
inc
add
mov
lret
cld
cmpsb
adc
and
imul
mov
dec
cmp
pop
mov
jecxz
jbe
ja
movsb
aaa
dec
cld
cmp
inc
sub
inc
icebp
push
out
fadds
mov
adc
mov
and
dec
filds
out
pop
loop
cmc
xchg
push
sbb
inc
add
sbb
je
aad
cli
test
inc
and
or
sbb
jle
and
out
lcall
fwait
cmp
lock
fcoms
scas
in
jle
mov
roll
cmpsb
mov
shrl
daa
push
movsl
je
jbe
cwtl
push
xor
lret
or
testb
mov
xor
call
std
mov
mov
testl
sub
mov
push
xchg
fs
hlt
stc
enter
sbb
in
es
addr16
ss
sti
sub
push
cmp
lods
arpl
lret
sub
push
fidivrl
inc
das
cmp
cmp
icebp
pop
nop
add
dec
jle
pop
ret
cmpsl
sti
je
sub
xchg
adc
mov
mov
xor
ja
adc
and
daa
cmp
cli
loopne
and
lret
jmp
mov
outsl
fsubr
stos
enter
add
subb
cmp
ret
repz
sbb
test
stc
mov
push
fwait
mov
test
xor
into
push
cmpsb
outsb
dec
sbb
or
leave
jp
call
cmpb
ljmp
cmp
jne
fcoms
fnstenv
push
daa
jae
idiv
xchg
icebp
jne
fistpll
add
mov
leave
repnz
daa
in
les
fnstsw
fidivl
push
sbb
nop
mov
test
testl
sub
add
xchg
jmp
stos
pop
mov
ljmp
xor
push
mov
sti
or
out
mov
xor
fld
cmp
inc
sub
xchg
fisubs
or
outsl
sbb
mov
add
sahf
lods
mov
pop
xlat
dec
cmp
add
sbb
xorb
adc
and
xchg
test
xor
mov
subl
out
xlat
je,pt
sbb
int3
add
iret
mov
mov
sbb
mov
jl
push
ja
and
cltd
push
sub
arpl
inc
or
lret
sub
xchg
push
push
jns
shll
add
inc
stos
push
lahf
das
push
insl
stc
faddl
fnsave
sub
lret
mov
out
dec
inc
pop
filds
inc
rcr
mov
and
sub
shll
xchg
andl
lahf
adc
rolb
addl
jge
jo
js
cmp
mov
xchg
xor
loop
fcoms
int3
add
gs
insl
jo
adc
mov
into
xor
cmpsl
nop
sub
push
mov
or
adc
and
mov
inc
push
jmp
mov
dec
fsubl
aaa
in
fisttpl
ljmp
inc
stos
cmp
daa
repz
mov
push
pop
imull
ss
bound
iret
mov
sti
adc
cli
xchg
lea
data16
dec
lods
xchg
ljmp
clc
out
sbb
or
or
lret
cmpsb
push
sbb
pusha
mov
sti
jg
test
fwait
xchg
push
in
adc
fnsave
mov
inc
xchg
ja
mov
sub
lahf
orl
sbb
xor
das
enter
int
xchg
adc
push
add
daa
jbe
icebp
aaa
add
xchg
bnd
outsl
call
inc
inc
into
inc
adc
sub
xor
outsl
mov
dec
push
lods
imul
mov
mov
cmp
adc
imul
jb
ja
pop
mov
pusha
xchg
lods
sar
adcl
or
in
pop
jle
mov
pop
nop
test
in
xor
ss
stc
add
fs
mov
mov
popa
mov
rol
cli
shll
sarb
loopne
lret
mov
cs
fnstsw
and
mov
and
inc
loop
sbb
ja
and
pop
xor
fwait
mov
jmp
cmp
dec
je
and
movsb
mov
loop
jge
outsb
jmp
xor
cmp
fs
arpl
fs
sub
fbld
cmp
pusha
inc
add
mov
cmp
iret
add
leave
jle
and
repnz
fldl
in
add
mov
pop
pop
lds
pop
int
imul
cmc
ficoml
mov
mov
icebp
or
mov
shll
xchg
cmp
bound
jb
dec
mov
fs
test
dec
inc
sahf
addr16
push
pop
cwtl
in
leave
push
pop
sub
addl
jecxz
mov
lahf
or
pop
mov
xchg
pop
dec
cmpb
xabort
ja
cwtl
push
or
jp
mov
cld
and
push
into
inc
and
rol
sbb
or
out
aas
sbb
cmp
and
xlat
sbb
adc
cmp
sahf
shl
xor
mov
mov
xchg
movsb
lcall
ret
cmp
dec
cld
sbb
mov
push
dec
pop
ret
insl
mov
testb
in
scas
dec
adc
jno
leave
jne
cmp
shrl
sub
push
sbb
cmp
jg
fisubrs
adc
jmp
sub
xor
arpl
xchg
outsb
and
mov
pop
or
cmp
mov
movsb
das
fwait
mov
inc
xchg
mov
jmp
stos
hlt
sbb
mov
mov
andl
and
je
in
push
xchg
test
mov
adc
pop
int3
cmpl
call
push
sbb
mov
adc
sarb
mov
fstp
repz
mov
mov
jb
bound
addl
lcall
mov
insl
and
test
pop
add
cmp
push
mov
push
sbb
cmc
and
jnp
subl
shll
mov
cmpb
mov
out
jmp
dec
dec
mov
icebp
pop
lcall
shlb
int
push
in
mov
mov
push
xor
fistl
lcall
outsb
pop
pop
popl
push
push
mov
mov
test
or
mov
ret
insl
ret
cmc
xchg
bswap
or
rcrl
filds
push
cmp
and
popa
icebp
sbb
mov
clc
hlt
bound
or
lds
inc
ja
xor
add
sub
movsl
notb
imul
xchg
sbb
adc
sub
repnz
fucom
dec
cmp
decl
sub
lret
cmp
pop
test
popf
cld
ss
sti
xchg
inc
popa
sub
cli
hlt
sbb
sbb
xchg
cwtl
jmp
out
xor
and
jle
push
and
call
dec
loope
xchg
shrl
js
pop
in
adc
gs
adc
daa
jg
iret
je
in
push
imul
inc
or
adc
push
mov
fsubl
lods
pop
and
popf
rcrb
mov
enter
ds
jle
int3
int
sti
jg
lds
inc
insl
ss
addr16
imul
jne
mov
xor
jge
outsb
bound
std
lahf
jo
bound
jg
dec
lock
js
aam
jo
fstpl
jl
popf
push
ljmp
ds
mov
or
rcrl
inc
arpl
ss
std
push
cmp
dec
sbb
or
xchg
inc
sub
cmp
jge
movsb
leave
loopne
into
fdivrp
inc
mov
push
ja
imull
and
incb
es
outsb
test
mov
jns
shrl
sbb
fidivl
frstor
xor
pop
mov
fisubrs
test
cltd
xchg
inc
sub
or
inc
test
into
dec
f2xm1
imul
and
in
mov
insb
mov
popf
imul
incl
cmpsb
jno
lods
mov
mov
xchg
pop
jne
push
ss
shrl
js
shrb
sub
jmp
lods
inc
inc
cmp
enter
lock
pop
sbb
test
sub
pop
jl
dec
fildll
stos
mov
sbb
orb
sub
add
push
xchg
jle
and
jbe
icebp
mov
dec
xor
dec
icebp
aas
xor
pop
mov
sbb
pop
or
add
add
push
add
adc
lock
and
jecxz
leave
notb
push
lret
adc
clc
jp
out
mov
mov
mov
out
cmpsl
xchg
pop
insl
fs
int3
push
xchg
es
pop
adc
sbb
popf
or
in
dec
aaa
push
push
jge
push
mov
pop
movsb
pushf
cmpsl
nop
push
cmp
mov
jl
push
add
mov
jecxz
cmp
jg
mov
adc
and
push
ljmp
enter
jle
cmpl
pusha
lods
in
insb
mov
dec
push
jmp
push
cwtl
int3
cmp
js
stc
jno
addb
mov
push
test
pop
repz
mov
rorl
push
push
dec
and
mov
pop
je
add
push
adc
test
orl
push
and
add
dec
push
shrb
or
cmp
stc
lods
jl
mov
pop
iret
repz
fnsave
and
notl
sbb
and
cmp
xor
popa
mov
insb
ja
dec
ds
shlb
xor
sarb
pop
scas
test
or
cmpsl
mov
pushf
aaa
push
enter
sbb
outsl
inc
mov
adc
push
test
and
mov
lock
sub
cmc
cmp
imul
xchg
inc
push
xor
in
fwait
push
ret
dec
jp
notl
fisubs
ds
xchg
cmp
js
push
repnz
arpl
mov
cmp
hlt
push
ficoml
mov
loopne
imul
mov
aaa
mov
mov
jb
mov
addl
ja
push
dec
out
aam
and
gs
push
and
lods
add
add
lods
inc
jp
ficomps
mov
fisubl
and
jl
dec
add
hlt
cmp
aam
pop
test
sub
and
aam
mov
fisttpll
pop
outsb
cli
push
add
or
xorl
inc
push
mov
mov
dec
fnsave
pop
sbb
outsl
dec
ret
lods
xchg
testb
je
jecxz
insb
jmp
sbb
pop
adc
fmull
jae
call
movsb
int3
xor
add
add
bound
dec
mov
or
and
adc
xchg
je
dec
ss
pop
shrl
pop
mov
push
xchg
daa
lods
cmp
or
shl
lahf
xor
jns
jp
out
jle
inc
int3
dec
pushf
orb
and
add
mov
into
aam
cwtl
sub
scas
xor
sub
pop
dec
jbe
and
inc
jnp
rorl
jne
or
loope
mov
xlat
sbb
jg
xor
or
addr16
jno
cmpsl
push
lds
xchg
mov
in
sbb
aaa
ret
sti
shrb
add
mov
sub
xchg
gs
decb
xchg
out
cmovns
mov
mov
aam
mov
adc
push
push
nop
dec
mov
rcrb
je
imul
sysenter
rcr
cmp
sbb
aad
call
lods
mov
jmp
add
fistpl
xchg
or
cmp
fnstenv
xchg
test
std
roll
add
bound
xor
pop
lock
adc
xlat
mov
inc
scas
jnp
pushf
stos
adc
repz
pop
movsb
cld
ret
das
cmp
mov
pop
and
jne
pop
mov
leave
dec
cli
mov
hlt
out
adc
add
lock
repnz
and
dec
mov
xor
jae
cmp
fisubrl
mov
and
test
js
fildl
and
mov
lcall
dec
in
mov
pushf
dec
inc
push
testl
ljmp
fwait
pop
push
subl
pop
outsl
push
fs
pop
pop
int3
jb
xor
xorb
rcl
lods
mov
xchg
subb
dec
movsl
xchg
fmuls
mov
mov
mov
into
jne
xchg
xor
popa
sub
std
xor
push
push
mov
dec
adc
xchg
pop
sar
pop
aaa
sbb
and
sub
cld
dec
push
push
jmp
and
mov
ds
or
test
or
dec
xchg
popa
add
pop
cmpsb
aas
push
add
lock
das
sub
add
fsubrp
iret
adc
and
cmp
stos
sbb
mov
jns
test
lret
push
movsb
xchg
fisubrs
sub
mov
xor
je
mov
cwtl
mov
or
scas
push
sub
outsb
inc
int3
or
or
mov
lods
add
mov
mov
add
int3
imul
add
xchg
or
fs
loopne
jmp
xlat
cmp
js
dec
mov
mov
fiaddl
out
and
push
outsb
sbbl
pop
inc
mov
shlb
and
pop
or
jne
and
xlat
inc
inc
sub
pop
fdivs
xchg
cmc
arpl
sub
jp
and
add
cmp
fwait
push
les
and
imul
push
and
movsl
push
bound
scas
fs
jl
dec
push
push
test
scas
testl
fwait
adc
mov
jl
pop
or
add
jne
or
mov
cld
repnz
daa
fs
imul
out
test
adc
ret
lret
mov
lcall
xor
cmp
and
cmp
xor
mov
jmp
cli
jns
in
dec
sahf
sahf
push
decb
lret
add
enter
push
addr16
cltd
sub
push
xlat
jne
ja
mov
jae
enter
jl
sbb
mov
jge
or
pop
jo
in
push
push
push
mov
xor
jecxz
in
mov
pop
or
jo
dec
aas
loop
ja
mov
ficompl
std
inc
adc
js
or
popf
dec
leave
shlb
or
sub
add
xor
stc
aaa
xor
mov
inc
dec
jbe
xor
leave
push
lret
cmp
ret
mov
cmpl
scas
push
cli
sarb
xchg
inc
out
xor
shll
pop
jmp
push
mov
je
flds
ret
out
pop
rorl
loopne
pop
cmc
xlat
inc
adc
fisubrs
mov
fstpl
popa
mov
roll
dec
lret
push
imul
fldl
pop
mov
jae
aad
enter
jmp
xchg
and
adc
pop
sbb
js
jecxz
adc
stos
call
in
ss
push
xor
mov
pop
popf
jns
in
xchg
cmp
cmpsl
rolb
data16
mov
out
inc
inc
insl
cmp
mov
loope
imul
mov
add
fnstenv
cli
jbe
psubd
inc
sub
daa
popa
stos
aas
rcrl
or
in
cmp
int3
xor
xchg
push
lods
cmp
lret
mov
sbb
jle
adc
add
popa
rorl
sti
adc
sub
in
ds
mov
sbb
movb
pop
fstl
sbb
pop
xchg
sbb
sahf
add
addr16
pop
nop
xlat
in
loopne
scas
in
add
test
adc
push
jmp
jns
mov
adc
or
hlt
pop
jae,pn
dec
clc
jge
test
rclb
xor
and
div
or
fstpl
cmc
dec
and
and
or
xor
das
ficoms
cmpl
je
std
inc
or
stos
xor
stos
inc
gs
mov
add
cmp
jl
mov
lret
mov
in
repz
int3
gs
jp
add
inc
sbb
inc
ss
xchg
sbb
lret
jbe
push
push
xchg
mov
mov
lret
int
test
jge
mov
out
in
jge
xchg
push
sti
int3
adc
sbbl
cmp
hlt
sbb
jl
pop
popa
sarl
sub
popf
in
test
mov
dec
adc
sbb
mov
in
add
idivb
or
pop
cs
or
shlb
add
dec
pop
mov
dec
mov
adc
rcl
cmp
fs
push
int3
dec
fsubl
stc
push
add
and
cmp
insb
cld
icebp
mov
sarb
ds
out
idivl
sbb
dec
ret
dec
aam
fsts
shlb
pop
mov
nop
jmp
pop
dec
repnz
lds
mov
fwait
add
scas
mov
into
enter
push
xor
dec
cld
push
sub
cmp
xor
sbb
mov
lds
xchg
cmp
jne
jle
fsubl
insb
xlat
jl
sbb
push
or
sbb
test
push
sbb
inc
cltd
push
push
cmp
repz
cmp
cmpsb
and
and
pop
cmpsl
mov
aas
adc
and
lock
xchg
mov
xchg
rorb
lret
gs
xchg
lahf
jb
lea
mov
daa
sub
adc
lret
mov
adc
test
pop
stos
outsb
pop
pop
lret
adc
mov
outsl
xor
sub
xor
adc
cmc
divb
sub
sbb
lds
outsl
or
push
es
out
xchg
jnp
jmp
aas
mov
repnz
dec
movb
sub
jno
dec
sbb
sub
jno
pop
in
outsl
jae
push
aas
repnz
jbe
scas
add
popa
fisubrl
fldenv
test
lea
pusha
jns
sub
fnstenv
cmc
pop
inc
ret
add
outsl
mov
xor
jbe
mov
in
xchg
cmpsl
cld
insl
lahf
stc
pop
enter
and
jno
mov
xlat
stos
nop
sbbb
insb
mov
mov
jne
cli
out
loop
cmpsl
pop
xchg
xchg
notl
cld
or
pushf
jle
xor
dec
or
sub
mov
fcomps
pop
outsl
js
push
pop
or
arpl
sti
mov
adc
or
xor
dec
sub
mov
cmpsb
add
inc
push
gs
jb
cmp
pop
add
rcrl
cmp
adc
pop
pushf
push
xor
mov
addr16
fs
push
xor
je
int3
add
movsl
sub
sbb
jno
cs
movsl
sub
shl
dec
in
das
test
bound
dec
xlat
dec
mov
mov
fisttpl
cmp
and
jmp
inc
mov
lds
dec
scas
cmp
mov
xor
les
fcomi
in
xchg
es
inc
pop
xchg
sub
popf
pop
sti
ret
loope
or
push
fbstp
mov
jge
clc
push
daa
mov
mov
aaa
jnp
inc
popa
std
subl
mov
hlt
jo
pop
into
outsb
out
push
loop
mov
ljmp
inc
ljmp
xchg
xchg
iret
sub
mov
mov
dec
shll
xchg
jno
std
pop
cmp
xchg
test
jp
pop
ss
int
push
stos
add
je
fdivrl
dec
test
jns
adc
mov
push
mul
ror
out
mov
adc
leave
cs
leave
push
aas
idivb
mov
dec
and
pop
mov
jl
lret
push
push
mov
int3
mov
fwait
das
pop
and
push
idivl
mov
mov
add
cmpb
test
mov
inc
or
sbb
sbbb
cmc
enter
stc
jno
in
jp,pn
inc
bound
aad
mov
add
push
dec
lock
cmpsb
mov
pushf
insl
push
lods
clc
mov
sbb
enter
sub
add
mov
cld
aaa
mov
add
add
sub
pop
repz
xchg
lcall
add
adc
call
and
pop
dec
and
js
sub
and
lahf
mov
sbb
insl
jg
inc
or
repz
fwait
ret
jmp
mov
test
mov
ljmp
dec
sti
dec
stos
mov
idivb
pop
in
add
bound
sub
cmp
ljmp
adc
leave
sbb
gs
popf
sbb
adc
fcoml
nop
enter
cmpsb
cltd
mov
notl
repz
sub
fistps
sub
cltd
sub
fcmovbe
out
xchg
mov
xchg
aam
and
orb
pop
cmp
out
in
sbb
out
rcrl
fstl
test
loope
loopne
sub
dec
js
mov
stc
push
or
xchg
jne
jecxz
inc
data16
inc
test
lods
int3
sbb
cld
jno
bound
add
or
pushf
sub
mov
dec
lea
idivb
dec
mov
lcall
jle
gs
push
pop
sub
mov
out
and
xor
cmp
xchg
int
enter
or
lahf
lds
pop
add
inc
test
or
xor
into
jae
cmp
push
push
cmp
cli
mov
cmp
lret
jle
and
or
adc
mov
jne
or
inc
mov
dec
sub
lahf
mov
mov
and
ja
aaa
imul
push
cmpl
out
jmp
and
lret
les
cmp
test
repnz
xchg
dec
rcrl
lret
aam
sub
jae
jle
fidivrs
nop
test
and
mov
je
xor
sbb
ljmp
cltd
xchg
into
cwtl
ss
fsub
push
fldcw
stc
insl
testb
or
std
and
mov
pop
sbb
and
movsb
add
sbb
jae
mov
sub
aam
loopne
aad
sbb
mov
pop
shrb
fwait
mov
loop
sarb
adc
mov
nop/reserved
ret
mov
call
add
xchg
adc
stos
pusha
mov
cmpsb
push
mull
es
popl
and
pop
cmp
mov
and
movsl
fisubrl
loopne
sti
dec
xlat
in
sti
test
jge
inc
xlat
imulb
clc
inc
dec
jg
add
add
hlt
adc
bound
mov
inc
shrl
xlat
andb
add
setl
cs
in
xor
dec
mov
daa
sbb
add
mov
inc
or
adc
inc
dec
addl
add
movsl
sub
lret
dec
movb
dec
xor
xor
adc
ret
xchg
rcrl
dec
sti
arpl
cmpsl
cmp
push
shlb
mov
adc
xchg
addr16
xor
push
jg
cli
jg
dec
push
push
or
push
sahf
dec
std
int
stos
outsb
test
clc
js
ja
rclb
and
test
outsb
mov
pop
jmp
jl
in
cmp
imul
addr16
add
pop
ja
testl
inc
cwtl
xchg
xchg
push
pop
std
xor
mov
aam
or
mov
push
push
stc
xchg
in
nop
mov
aad
lahf
xor
pop
cmp
loope
push
sbb
push
xor
add
jne
in
sub
xor
sbb
dec
sub
or
dec
pop
stos
leave
adc
sbb
mov
mov
cmpsl
jne
jbe
ret
addr16
and
sbb
daa
xor
xchg
and
inc
cmpsl
sahf
push
push
arpl
rep
jge
push
mov
mov
or
mov
ret
jmp
arpl
push
pusha
push
lret
dec
lahf
subl
and
lcall
pop
sti
int3
jae
icebp
and
and
stos
dec
sbb
mov
and
xor
insb
inc
dec
gs
movsl
sbb
in
xor
push
push
ljmp
das
add
xchg
stc
movl
sarl
cli
imul
cmc
pusha
sbb
cmpsl
in
push
rorl
fcoms
pop
mov
jecxz
out
in
cmpl
sub
insb
imull
pop
or
dec
sub
lcall
mov
loopne
sbb
clc
mov
out
inc
test
out
fs
add
add
mov
xchg
pushf
int3
xor
call
sbb
xchg
into
popa
push
aam
inc
push
fcomps
mov
sbb
xor
push
push
fdiv
mov
clc
xchg
pop
insb
mov
jns
xchg
int
dec
nop
subb
jle
out
pop
pop
dec
filds
andl
in
aad
into
icebp
inc
pop
into
sub
pop
data16
cwtl
insb
sub
mov
sbb
mov
das
pop
cmp
lods
iret
mov
sbb
mov
mov
and
and
mov
lahf
push
insb
adc
les
sbb
popf
mov
mov
rcrb
adc
mov
mov
jg
out
gs
movsl
mov
stc
ficomps
int3
addr16
pop
into
cmpsb
xchg
mov
mov
xorb
in
addb
adc
and
repnz
imul
sarl
insb
lea
mov
imul
sbb
xlat
inc
or
outsl
xor
adcl
in
andb
inc
jl
fsubs
xor
stos
and
sub
lods
cmpsb
or
sahf
xchg
sar
jno
xchg
cmp
mov
mov
xor
icebp
in
mov
test
mov
jg
mull
cmp
lods
jl
insl
mov
and
test
ret
and
cmc
pushf
pop
add
int3
out
int
lret
xchg
add
je
ss
negl
xor
inc
std
cmp
push
sbb
dec
lret
pop
dec
sub
in
cmp
je
cltd
push
outsl
lods
fiaddl
or
xchg
in
mov
dec
mov
mov
jle
inc
pop
pop
cmp
add
jecxz
jns
movl
jg
aad
mov
orl
xchg
mov
pop
dec
pop
hlt
pushf
xor
xchg
stos
cwtl
mov
jmp
fsubrl
shll
jae
outsb
fcomps
lods
inc
lret
insb
les
adc
test
iret
fwait
hlt
jne
inc
fadds
insl
push
dec
and
fiadds
dec
and
or
mov
imul
sbb
bound
sub
push
loopne
push
mov
jmp
add
aad
iret
mov
pop
mov
add
outsl
ljmp
stos
push
xor
sti
jle
loopne
push
popa
fdivrs
mov
lea
and
mov
push
cmp
inc
jbe
or
xchg
lcall
adc
mov
rolb
lret
dec
lahf
sbb
lahf
and
inc
pop
shlb
inc
or
dec
ss
test
cli
out
lahf
and
adc
int
xchg
cltd
in
cmp
test
push
sarb
in
dec
dec
fbstp
push
test
and
mov
sbb
jb
xchg
dec
in
lock
imul
bound
hlt
dec
pop
test
add
roll
sub
mov
push
jnp
sbb
orl
cmp
das
fimuls
cld
mov
xchg
sahf
inc
sub
cld
out
imull
addl
insb
xor
test
and
push
xor
mov
fdiv
stc
arpl
popa
or
call
scas
loop
and
arpl
sbb
push
dec
mov
jp
imul
imul
mov
ss
not
mov
or
call
mov
in
into
add
push
mov
int
dec
cmpsl
and
sbbl
sub
push
or
and
jb
vmread
fisubrs
jecxz
nop
scas
sub
push
sbb
push
in
imul
push
dec
ret
outsb
icebp
xchg
cld
lods
pop
sbb
fstps
mov
and
cmpsb
aad
inc
adc
mov
in
mov
mov
out
int3
and
jp
mull
adcl
mov
or
push
pushf
loope
test
imul
les
lret
imul
fcomip
aam
dec
sbb
mov
in
andl
add
or
push
out
lods
add
push
jno
ret
and
pop
insb
stos
push
aaa
xor
mov
inc
hlt
xor
daa
movsl
xchg
mov
push
xchg
xchg
cmpsb
sbb
rolb
sbb
lods
imulb
sub
cmp
push
inc
mov
add
popf
movsl
inc
lods
xchg
into
pop
inc
loopne,pt
subl
mov
push
sub
mov
adc
movntq
ja
pop
cwtl
addl
xor
mov
fildl
test
add
adc
pop
popf
cltd
inc
xchg
adcl
cli
xchg
mov
clc
ss
sub
jae
cld
aam
outsl
les
imul
add
xchg
jno
push
jno
push
lds
pop
out
jecxz
in
or
sbb
ljmp
dec
sbb
mov
mov
mov
subb
movl
in
lahf
out
push
loope
shrb
mov
popf
and
mov
mov
pop
fildll
and
scas
lret
or
sub
xchg
rolb
adc
pop
dec
fldcw
or
pop
imul
cli
fiadds
sti
adc
int
sub
pop
jmp
or
roll
jl
fucomi
cmp
ljmp
shll
mov
adc
ds
mov
mov
movsb
sarb
mov
jns
test
stc
push
sub
xchg
mov
push
xchg
push
clc
sub
roll
or
pop
mov
xchg
and
add
or
negb
lret
test
add
aaa
icebp
loopne
mov
lret
int
add
xlat
iret
jb
or
sub
pop
fistps
icebp
in
add
adc
cmp
std
aad
sub
mov
xor
rcrb
adc
or
movsl
fdivp
jp
insl
push
mov
nop
divb
xor
aad
cld
out
fdiv
inc
mov
xchg
rolb
xlat
pop
mov
inc
mov
fcompl
or
imul
jle
inc
xchg
mov
jo
aas
pop
cmc
cmp
inc
testb
xlat
idiv
pop
call
dec
mov
repnz
in
or
cltd
mov
ret
pop
cmp
lods
inc
lea
mov
fwait
add
ja
jns
mov
pop
mov
movsl
inc
mov
jo
and
mov
push
inc
push
adcb
xchg
mov
dec
mov
xchg
inc
add
lea
in
jl
adc
addr16
movsb
enter
cmc
mov
jl
mov
or
shrb
mov
or
pop
std
dec
cld
ss
jecxz
sbb
mov
mov
inc
mov
cmp
rorb
push
dec
xor
xchg
push
mov
push
sbb
enter
lret
ret
and
or
adc
sbb
in
mov
xor
inc
ds
sbb
imul
jmp
add
lods
mov
adc
add
lahf
in
sub
xor
jecxz
lods
lods
xchg
fnstcw
pop
sbb
and
sbb
dec
xchg
mov
sti
cli
xchg
dec
js
pop
push
xor
ljmp
into
sub
inc
mov
adc
inc
dec
cmp
adc
outsl
jg
call
leave
jns
subl
mov
push
loope
repz
sub
or
movsb
or
divl
jle
inc
je,pn
add
call
cmp
jp
lahf
mov
cmp
mov
and
inc
jo
jmp
mov
ret
insl
fisttps
xchg
sbb
push
jp
call
push
roll
loope
pop
cmp
sub
mov
loopne
jne
je
sub
jmp
cli
cmp
icebp
dec
addr16
dec
arpl
mov
jbe
xlat
add
inc
or
lock
andl
decl
sub
or
dec
pop
loopne
loope
addr16
adc
push
sti
ficompl
xchg
test
cmp
mov
pop
js
into
lcall
jmp
aas
mov
dec
adc
jmp
loop
lcall
ss
mov
xor
push
faddp
ljmp
cmp
dec
out
mov
push
push
insl
fisttpll
aam
mov
jns
fstpt
push
sti
imul
mov
divb
dec
mov
add
xor
pop
imul
push
and
pop
xlat
adc
fcom
or
aaa
mov
dec
xor
out
inc
rorb
das
adc
mov
push
xchg
cli
stos
and
cmp
insb
push
add
xor
pop
pushf
mov
add
insl
cmp
sbb
call
test
inc
adc
xchg
into
movsl
das
mov
jmp
cmpl
popa
int
fiadds
js
jno
jo
push
arpl
and
jnp
lcall
fdivr
mov
mov
push
out
insl
push
adc
xchg
fwait
xchg
or
or
xchg
and
lock
inc
sbbb
sbb
adc
es
repz
fwait
movsl
mov
jmp
adc
pop
and
int
mov
jbe
rcll
xchg
mov
sahf
out
insb
mov
inc
cmpsl
jo
add
int3
stos
clc
lret
testl
mov
sbb
mov
mov
cmpsb
jmp
adc
loop
xor
and
pop
add
cmc
cmp
mov
popf
pop
sahf
aam
pushf
sub
pop
lds
pop
fists
jecxz
inc
mov
sarl
in
dec
out
call
and
scas
or
jmp
out
imul
ret
loopne
out
push
or
jmp
fs
lds
int
test
jne
or
sub
xchg
and
add
sub
scas
rcll
jae
je
loop
pop
adc
pop
jge
and
jae
push
and
cwtl
inc
ljmp
gs
xor
sbb
outsl
addl
push
or
jns
int
and
xchg
pop
jmp
add
or
icebp
jne
dec
xor
jbe
out
xchg
jle
fldenv
sub
imul
fsubs
dec
cmpsl
dec
push
pop
jmp
adc
dec
sub
xchg
loopne
sub
in
out
mov
pop
lods
aaa
xchg
push
adc
xchg
sub
loop
scas
cmpsb
fistpll
int
jl
mov
popf
xchg
jne
mov
inc
xchg
mov
jb
sub
add
add
movsb
std
and
cmp
cli
mov
xchg
push
pop
cli
pop
rclb
out
xchg
cmp
aas
clc
outsb
aas
sbbl
outsb
mov
cmp
fwait
mov
orb
sbb
jmp
add
and
lods
negl
roll
and
dec
test
rclb
rcr
ret
sub
dec
dec
mov
cmp
pop
jno
insl
loop
mov
adc
xor
aas
xchg
cld
mov
adc
sarb
pop
or
roll
mov
mov
lods
in
mov
xchg
mov
xor
movsl
jo
out
arpl
pop
push
inc
test
push
fwait
out
fldt
int
jns
mov
jmp
lcall
test
xchg
lret
cmp
out
dec
testb
fwait
in
mov
fwait
xchg
xchg
imul
pusha
jmp
inc
mov
test
mov
jne
xchg
jno
mov
push
push
mov
inc
daa
out
inc
jp
push
leave
sub
mov
sub
mov
push
imul
loope
andl
loop
mov
push
or
push
scas
iret
loope
mov
outsl
cmp
test
mov
js
adc
cli
in
mov
mov
enter
cmp
xchg
cli
pop
cmp
outsl
adc
cltd
mov
into
jns
jge
xor
sahf
cmpsb
mov
mov
fistpl
insl
push
and
je
or
stc
jo
sub
int
leave
pop
sti
decl
mov
xor
mov
popf
ds
xchg
les
loop
mov
mov
xchg
pop
dec
es
std
lret
mov
ss
addb
push
sub
ret
pushf
imul
mov
sub
adc
cli
inc
xor
sub
stos
mov
scas
popf
xchg
mov
push
mov
xor
lods
insb
lock
iret
pop
dec
xchg
cmp
dec
pop
dec
out
lret
mov
pop
cmc
inc
test
pop
fidivrl
test
adc
rorb
loopne
cmp
xor
movsb
jbe
mov
mov
icebp
and
pusha
aaa
in
aam
jmp
cmc
xor
lea
mov
xor
sub
mov
loopne
hlt
mov
xchg
sarl
mov
mov
scas
test
mov
scas
aam
clc
aas
rclb
jle
jle
cmpb
lods
mov
and
shrb
aas
lahf
dec
in
fsubr
insl
mov
adc
imul
push
popa
adcl
cmp
inc
hlt
add
push
add
dec
fs
or
or
mov
out
call
test
pop
add
push
jg
xchg
shll
ja
int3
aad
mov
outsl
mov
add
mov
cld
es
xchg
iret
lock
jne
dec
adc
push
rcrb
jmp
jle
fcmovb
sbb
jmp
mov
lods
mov
inc
fprem
mov
pusha
sub
hlt
pop
xchg
or
mov
pop
dec
mov
movl
and
pushf
and
fimull
add
and
test
lea
repnz
and
adc
inc
in
jne
jb
pop
xlat
scas
mov
sar
add
test
push
mov
sbbl
jne
mov
loop
and
jl
test
push
movsb
std
negb
xorl
into
out
out
repnz
push
mov
lahf
loop
jmp
imul
dec
pop
lds
dec
rolb
add
xor
jl
iret
in
ja
in
nop
and
or
imul
shlb
jmp
push
adc
fidivs
xor
push
sub
cmpb
in
les
push
cmpsl
push
pop
jge
cmpsl
and
jmp
push
mov
lock
out
mov
mov
sti
add
addr16
jbe
mov
bound
lods
rcl
dec
arpl
repnz
adc
mov
ja
je
sbbb
leave
movsb
push
and
or
rorl
jecxz
stc
fimuls
xlat
cwtl
sbb
mov
insb
push
or
insl
scas
dec
jle
sahf
push
mov
jge
ror
cmp
cmp
ljmp
pusha
in
mov
add
popa
call
fadd
or
and
das
adc
mov
pop
jp
aad
scas
jnp
lret
in
ret
cmpsb
fcmovbe
hlt
xchg
mov
and
mov
shll
test
push
jb
call
loope
and
test
adcb
out
push
ljmp
cmp
ret
sarb
pop
lods
push
in
arpl
add
fisubs
fimull
sbb
gs
bnd
xlat
sbb
mov
aas
cltd
jge
lods
inc
cmp
cmp
shll
rclb
repz
orl
or
or
sti
icebp
lret
mov
cmc
add
mov
xor
adc
cmp
and
addl
imul
inc
mov
popa
mov
cmp
das
dec
lock
sbb
lret
or
lahf
inc
mov
outsb
and
dec
push
jl
repz
sbb
jge
data16
xlat
push
int3
test
rorl
adc
pop
inc
sbb
stc
xchg
cmpsb
std
pop
aas
and
popf
push
inc
sub
push
sub
adc
xchg
cmp
lahf
testb
or
aas
in
pop
pop
scas
leave
inc
mov
lds
daa
jnp
lcall
or
and
xchg
nop
sbb
mov
icebp
icebp
loope
ljmp
xor
adc
jns
fs
mov
les
shr
and
lret
ljmp
clc
gs
jmp
loope
dec
push
push
push
data16
outsl
into
aam
jmp
out
insb
out
repz
push
lea
jecxz
dec
std
stos
pushf
jne
sbb
xor
push
idivl
xchg
in
shrb
xchg
sub
xor
int3
adc
bound
outsb
aas
push
pop
pop
jecxz
fldenv
xchg
jge
xor
lret
adc
add
ds
mov
lahf
push
test
dec
ret
jmp
jle
pop
adc
into
stc
loopne
mull
icebp
sub
lret
add
jb
dec
movl
fisubrl
xchg
inc
vfrczss
and
and
pop
dec
cli
dec
dec
jo
push
movsb
repnz
xchg
movsb
ss
and
andb
push
bound
lret
mov
adc
inc
and
dec
popa
push
xor
loope
jns
add
loop
or
ret
xchg
imul
or
or
xor
stc
pop
arpl
test
cmpb
shr
movsl
jmp
adc
mov
jnp,pn
sahf
dec
in
shlb
sbb
or
inc
sahf
filds
fsubs
pop
in
setge
cmp
sbb
xchg
xor
mov
or
inc
shll
sbb
gs
fisubrs
imul
pusha
fisubl
xchg
adc
sarb
cltd
stc
jno
and
and
scas
and
sbb
mov
rolb
and
add
add
lcall
ret
mov
scas
popa
mov
pop
inc
shlb
cmp
mov
xchg
loope
jnp
sub
dec
int
pusha
cmp
int3
adc
int3
dec
cmp
xchg
movsb
sub
aas
mov
sbb
jl
sbb
adc
ljmp
movsl
jne
inc
xchg
inc
or
add
push
cmpsb
pop
and
fisubs
sub
dec
sarl
fwait
push
iret
adc
ficoml
inc
push
and
lahf
xor
test
addr16
cs
test
fadds
sub
popa
pop
aam
mov
aam
xchg
mov
inc
sbb
sbb
add
xchg
and
sub
daa
mov
div
push
mov
add
push
les
sub
xchg
mov
fwait
mov
cmpsl
jecxz
push
aam
repz
inc
test
lahf
mov
pop
popl
xchg
xor
mov
xor
pusha
dec
jle
cltd
sarl
jno
adc
sti
xchg
mov
out
dec
sbb
int3
cmp
movsl
add
sarl
fwait
push
inc
sbb
arpl
jo
sub
mov
xchg
bound
pop
addr16
pop
popa
nop
push
cmp
sbb
lea
mov
out
mov
repnz
dec
mov
les
sarl
push
sbb
dec
insb
jbe
pushf
or
cli
sub
stos
cmp
loope
repnz
movsl
hlt
pop
dec
or
or
test
xor
jge
sub
in
push
jo
adcb
insb
mov
pop
add
mov
cmp
call
push
addr16
shlb
je
or
mov
leave
out
out
dec
inc
cs
in
shll
outsb
pushf
mov
cmp
or
cs
and
jle
lahf
push
scas
dec
addr16
dec
lods
incl
push
insl
jne
pop
jg
int3
push
xchg
les
sub
out
test
pcmpeqb
pop
dec
inc
aaa
xor
adc
mov
jmp
sarb
jle
je
movsl
into
sbb
cld
push
mov
daa
jo
jge
test
popf
inc
outsl
pop
fists
xchg
push
push
jbe
jp
arpl
sbb
std
lods
into
and
mov
pop
repnz
add
test
scas
lea
xchg
mov
popf
inc
dec
lcall
xchg
mov
xchg
gs
xor
ds
lea
sbbb
push
mov
test
std
push
cmp
inc
jo
xchg
fdivrs
fsub
mov
jmp
push
push
fsub
jbe
pop
pop
pop
adc
outsl
das
ljmp
pop
jp
mov
adc
lcall
add
mov
das
in
xchg
lock
and
popa
push
xchg
inc
jb
fs
iret
ja
cmp
mov
clc
jbe
jnp
push
dec
mov
int3
les
adc
in
hlt
xor
inc
or
inc
std
dec
jecxz
dec
jecxz
in
fimuls
push
pop
das
sahf
mov
scas
or
repnz
test
movsl
mov
mov
pop
lret
movsb
ja
xchg
fwait
add
fcoml
ljmp
sbb
xchg
dec
adc
std
xchg
mov
imul
jo
cmp
aam
pop
mov
inc
addr16
add
xchg
shlb
mov
jbe
cltd
fbld
and
jno
fisubrs
movsb
cmp
xchg
xor
inc
pop
testl
xchg
adc
mov
cli
imul
dec
adc
xchg
adc
pushf
int3
sub
fsts
push
arpl
push
push
jg
push
outsb
popa
dec
clc
fs
adc
mov
add
lret
cld
lahf
ret
pop
cltd
and
pop
jo
call
xchg
fs
sbb
lret
test
repnz
xchg
jge
clc
mov
fldl
push
push
test
mov
or
test
xor
scas
add
or
jns
repz
sbbl
adc
add
push
jl
lret
sub
iret
sarb
inc
mov
call
mov
negb
cmc
push
in
xor
adc
cmp
jp
lcall
dec
dec
dec
cwtl
repz
int
jbe
iret
fldenv
jno
sarb
inc
ja
xor
loope
xor
push
lods
jne
into
push
test
dec
mov
imul
mov
push
cltd
ret
xor
sub
lock
sub
inc
xchg
outsl
mov
popf
stos
jl
je
pop
mov
ss
push
xchg
inc
inc
and
push
cmp
ffree
mov
cmc
ret
fildll
sahf
inc
ljmp
adc
cwtl
repnz
insl
into
lret
add
sub
xchg
sub
pop
adc
mov
mov
dec
mov
inc
cmc
cld
shll
xchg
mov
pusha
push
add
push
push
jno
add
mov
test
in
or
pop
pop
mov
lds
ret
xor
mov
mov
movsl
push
mov
popa
sbb
inc
sub
sahf
adc
scas
cmc
insl
nop
mov
inc
dec
push
leave
lea
sbb
rcr
sbb
pop
sbb
repnz
test
movsl
idivb
mov
sub
icebp
aad
out
push
cli
ja
push
mov
test
movsl
scas
xchg
loop
lea
jae
sub
xchg
mov
lods
and
mov
outsl
cli
sub
cltd
ljmp
jne
ja
xchg
jno
movsl
stos
push
pop
mov
inc
and
lea
cmpsl
mov
clc
into
inc
cmpsb
stos
sbb
popf
stos
xchg
mov
bound
or
push
cld
out
or
clc
es
cmp
xor
push
cld
lcall
cmc
clc
out
cmp
int
loope
push
test
mov
or
into
adc
pop
sarl
mov
cmpsl
out
inc
dec
jp
mov
int
xor
lret
ret
lods
notb
adc
iret
dec
mov
cmp
dec
inc
nop
dec
mov
std
mov
lahf
pop
pusha
leave
or
mov
sub
sbb
push
mov
mul
test
push
mov
sti
pop
cmp
lret
mov
add
pop
or
fmull
push
push
and
sbb
mov
es
jb
or
shrl
add
sti
xlat
idiv
or
rolb
sub
lret
inc
jno
and
addl
dec
fwait
dec
jl
sub
mov
lods
cmpsb
jnp
xchg
mov
aaa
ret
mov
movsl
cmp
or
aam
stos
orl
jae
mov
sbbl
ret
icebp
out
pop
xor
add
mov
daa
imul
in
ror
mov
xchg
cli
int3
xchg
int
stos
testb
arpl
fstl
mov
out
jl
sarb
scas
scas
dec
and
mov
cwtl
out
jae
cmp
mov
int
xor
inc
adc
mov
les
pop
sti
stos
add
sbb
int
jnp
mov
push
pop
lahf
je
jb
fisttpl
loopne
mov
in
loope
lds
ret
inc
test
cltd
mov
xor
jns
out
or
fdivrs
cmp
cmc
sahf
sbb
test
cmp
lret
mov
fiadds
test
negl
mov
mov
fists
daa
cli
sbb
sub
fs
sub
or
jl
in
aam
movsl
divl
lret
lock
sub
insb
add
int3
xchg
nop
push
aaa
cmpl
sub
xlat
cmpsb
mov
add
pop
lcall
cs
mov
mov
inc
ficoms
gs
cltd
cmp
sub
call
push
jle
or
sbb
adcb
dec
out
mov
dec
shr
mov
sub
or
repnz
enter
les
daa
push
fs
mov
xchg
mov
lret
sbb
xor
mov
dec
shrb
push
out
in
fstpt
pop
mov
shrb
adc
inc
lret
roll
clc
inc
popa
loope
pop
fimull
stos
iret
jns
cmp
sub
scas
std
lahf
xor
lahf
pop
inc
roll
jnp
push
pop
mov
jle
dec
xor
fcmovnu
xor
fdiv
enter
adc
jno
xchg
xchg
or
jl
dec
das
nop
inc
add
push
or
add
jmp
lods
mov
add
push
push
cltd
call
iret
jbe
ficoml
xor
fdivr
and
cmc
xchg
call
ret
mov
sbb
jb
and
insb
mov
or
mov
xor
div
addr16
mov
sub
loop
lret
outsb
sbb
xchg
dec
pop
imul
test
sub
sahf
xchg
aad
sub
sahf
repnz
fs
sbb
icebp
mov
lret
xchg
lods
cli
ljmp
mov
push
jp
lret
sbb
cmp
jmp
push
fstpt
xor
movsb
pop
xor
rcr
sbb
mov
out
cmp
and
push
pop
arpl
add
jmp
fwait
pop
adc
mov
add
jns
enter
xchg
or
ljmp
xor
lcall
pop
pusha
out
leave
or
out
push
mov
mov
out
mov
lcall
mov
cmpsl
sbb
xlat
or
jns
iret
jnp
push
add
jp
test
clc
mov
cmc
cwtl
les
push
movsb
jnp
cwtl
popa
in
iret
popf
push
pop
test
int3
int
lods
stos
or
pusha
pop
insl
sbb
out
xchg
push
cli
pop
jp
sti
xchg
pop
pop
movsl
xchg
inc
std
xchg
int
pop
ja
adcl
or
mov
mov
sti
orl
sbb
inc
popa
mov
inc
xor
pop
push
jmp
jno
push
aaa
test
fyl2xp1
cld
mov
rcrl
cmp
cltd
jp
lea
fnstenv
xchg
inc
mov
inc
loop
lock
std
mov
out
in
lock
call
loop
xchg
hlt
incb
lret
leave
lods
inc
daa
pop
sti
push
iret
mov
adc
mov
inc
pop
and
lods
es
push
movsl
pop
sbb
mov
inc
or
mov
or
int3
bswap
push
cmc
pop
les
stc
rol
bound
or
sbbb
xchg
push
mull
and
push
cmpsb
xor
pop
mov
push
cmp
jo
xor
sbb
lahf
je
push
shlb
jp
push
sbb
notb
lea
xor
ss
pop
lret
test
pop
enter
call
decb
push
sbb
pop
arpl
setne
xor
pop
xchg
loope
push
ljmp
cmp
add
dec
ss
and
xchg
add
movb
mov
orb
or
int3
inc
push
pushf
fldl
aas
adc
push
mov
mov
dec
mov
bound
rclb
xor
insl
xlat
and
cmc
shlb
cwtl
icebp
pop
imul
cltd
dec
icebp
mov
mov
std
repz
jmp
cli
jns
xchg
insb
mov
jne
cs
dec
or
sbb
dec
sbb
and
aam
out
fdivs
sbb
xchg
cld
dec
cmp
or
repz
xchg
mov
jle
imul
and
addr16
scas
sub
icebp
dec
aam
mov
jle
push
fcmovu
sub
test
sub
loop
and
insl
jno
cltd
mov
push
mov
cwtl
sbb
push
cmc
sarb
clc
lds
sbb
xchg
and
mov
inc
inc
cmp
inc
enter
sbb
scas
dec
jle
lods
test
gs
mov
enter
in
sub
xchg
fiaddl
dec
pop
imul
xchg
pop
in
add
js
dec
cmpsb
push
pop
and
test
das
arpl
outsl
ret
fwait
sbb
and
or
loope
mov
adc
pusha
sbb
sahf
loope
loopne
stc
mov
in
imul
sub
call
mov
ret
inc
cmp
cli
cwtl
ss
lea
add
inc
and
cmpl
sub
icebp
cli
pusha
mov
push
mov
movsb
psrad
cmp
push
lods
and
daa
push
jae
mov
out
bound
out
mov
xchg
or
mov
mov
rcl
xchg
push
das
xchg
push
ret
jb
dec
mov
es
mov
pop
in
popf
xor
mov
xor
shll
ficoml
into
adc
push
ljmp
sub
or
popf
xchg
arpl
pop
and
loopne
jne
out
sahf
loop
push
push
and
jecxz
push
and
or
xchg
dec
or
jmp
arpl
and
mov
mov
imul
sbb
pop
test
in
and
in
pop
inc
add
or
scas
pop
xchg
pop
jbe
sub
fdivrs
cs
es
cltd
shlb
push
insb
aas
stc
hlt
nop
cmp
mov
add
sbb
out
mov
out
add
cli
ret
add
fsubs
sub
and
jle
xchg
or
jb
test
dec
add
sub
mull
push
rorl
cmp
sahf
leave
jmp
repz
jae
mov
xor
or
clc
pop
in
or
sahf
arpl
add
arpl
adc
add
add
adc
mov
movsb
mov
out
sub
enter
pop
add
into
pushf
mov
dec
pushf
dec
sbb
adc
fisttpll
fwait
jg
negb
dec
sbb
js
in
in
jecxz
loope
inc
in
mov
fildll
xchg
int3
in
mov
std
stos
or
adc
in
cmp
push
or
addr16
mov
mov
pop
jecxz
mov
adc
test
jne
add
inc
pop
mov
jo
adc
sbb
xor
add
and
lcall
add
ds
jnp
arpl
push
jecxz
jmp
dec
sub
aaa
push
xchg
mov
mov
push
xchg
sbb
ds
fwait
add
push
jns
loop
dec
les
xchg
mov
cmpsl
jecxz
push
sar
jae
xchg
and
mov
push
lds
leave
jmp
jno
push
mov
sub
xchg
adc
mov
mov
loopne
ficomps
cli
dec
cwtl
movsb
in
pop
movsb
roll
jne
add
icebp
hlt
dec
sub
test
jecxz
pusha
xor
adc
iret
loope
xchg
mov
ret
push
lds
scas
mov
jns
sar
xor
push
mov
mov
sbb
add
inc
inc
in
sti
jmp
xchg
outsl
adc
and
and
jne
lods
fdivs
lcall
cs
jns
and
shr
push
rorl
aaa
mov
mov
pop
mov
push
loop
or
mov
jle
test
test
loopne
sahf
jmp
in
lcall
inc
shlb
jnp
mov
jg
mov
mov
jae
lods
ffreep
nop
or
pop
mov
lea
adc
cli
push
ret
push
out
pop
gs
cwtl
and
fxch
inc
mov
mov
add
jle
lock
pop
loop
sbb
stos
icebp
pop
rclb
loop
xor
test
add
jl
add
xchg
mov
pop
int3
push
aaa
sahf
pop
out
scas
mov
and
mov
mov
loopew
mov
inc
roll
add
dec
ret
sti
cmpsl
mov
jns
and
scas
cmp
sub
mull
dec
popa
ret
data16
add
adc
in
xchg
add
mov
lret
mov
jmp
adc
sbb
test
stos
xchg
rcr
cmp
inc
out
ja
or
sbb
ret
push
adc
out
cmpb
loopne
movl
popa
xchg
xor
inc
cmp
cmp
sahf
faddl
xchg
insb
mov
aam
xlat
xorb
pushf
or
push
jmp
mov
xchg
popf
call
dec
fsubs
es
push
mov
inc
insl
adcb
jne
push
fs
fdivp
inc
call
xchg
cmpsl
mov
aas
sbb
into
sahf
push
scas
and
shl
inc
pop
lds
icebp
nop
ss
pushf
pusha
xchg
bndstx
imul
adc
loopne
push
push
cwtl
xchg
push
outsl
jle
adc
xor
lcall
lock
xchg
mov
adc
mov
sbb
cmpsb
cmp
orb
pop
loope
clc
imull
adc
lahf
jg
xlat
push
ficomps
stos
cwtl
mov
sbb
push
cmp
adcl
push
test
loopne
cli
scas
mov
imul
into
jge
adc
pop
mov
cmp
fstp
mov
and
pop
inc
add
fidivrs
dec
xchg
push
int3
fimuls
mov
pop
sbb
mov
sbb
stc
dec
fdivl
sti
outsl
incl
jae
mov
cmc
and
inc
pop
cmp
out
or
insl
xchg
push
sbb
mov
out
out
mov
jnp
adc
mov
shll
loop
testl
orb
jae
push
aas
out
sbb
repz
mov
ret
push
in
lahf
test
and
jne
bound
pop
mov
cmp
outsl
jbe
add
mov
das
fsubs
xor
ret
sub
icebp
mov
call
xchg
in
or
and
pop
pop
or
rolb
test
pop
lahf
xchg
lea
fsts
sub
push
cmp
xlat
mov
pusha
idivl
push
das
adc
xor
inc
xorb
test
das
lcall
add
push
jmp
sbb
ss
cmp
xchg
std
lret
ret
pop
mov
xchg
sub
pop
xchg
xor
or
lds
stc
push
or
rcll
imul
std
cld
and
enter
xchg
sub
sahf
scas
push
mov
js
daa
push
pop
lods
dec
or
jecxz
inc
test
mov
mov
inc
inc
arpl
popf
aaa
pop
call
lods
adc
jo
push
and
pop
xchg
inc
int
sbb
mov
xchg
roll
fwait
clc
lods
das
test
sub
sub
mov
add
jmp
mov
add
sub
add
mov
jae
and
aam
xor
lahf
xlat
in
mov
sti
pop
inc
pushw
in
shll
dec
push
sub
push
or
add
loopne
dec
jl
jnp
enter
mov
pop
xchg
das
sub
icebp
test
outsb
jge
push
pop
lds
pop
adc
mov
je
test
das
dec
inc
popa
add
lret
sub
sbb
loopne
sbb
xlat
mov
xabort
shl
mov
test
push
scas
cmp
push
imul
dec
xlat
pop
ja
pop
imul
mov
or
insb
jns
rcll
fidivl
subb
popa
pop
mulb
xchg
imul
xchg
test
repz
sub
data16
out
jno
and
xor
cmp
add
jg
adc
filds
and
out
xchg
cld
mov
sbb
dec
fdivrl
loope
pushf
sub
ljmp
outsl
mov
and
sbb
pop
xor
mov
and
cld
lds
je
ja
dec
xchg
cmc
stc
es
xchg
xchg
adc
in
int3
dec
push
fldt
popl
jne
pop
cld
push
decl
jle
loope
leave
rcrl
add
and
push
xor
mov
or
mov
xchg
pop
add
mov
xor
rcrb
adc
popa
mov
outsl
jecxz
sub
mov
aam
inc
jbe
mov
dec
cmpsb
add
jg
pusha
xchg
adc
rorb
sbb
push
mov
mov
xchg
aad
cmp
stc
add
mov
test
ffreep
or
test
pop
mov
cltd
enter
loop
push
mov
shlb
les
in
mov
insb
ds
orb
push
pop
push
dec
xor
adc
jo
inc
push
loop
rcll
imul
inc
imul
jg
out
jae
mov
xchg
outsl
xchg
jb
push
pop
notl
xchg
notl
das
dec
or
pop
dec
idiv
bound
in
popa
movb
jo
ret
jns
nop
jns
fstpl
cmpsb
push
lcall
lahf
sbb
mov
mov
sbb
into
mov
rcrb
mov
mov
push
movb
pop
dec
push
fs
rcr
dec
and
sub
stos
push
ljmp
jmp
imul
pop
sub
jo
mov
outsl
mov
mov
jg
mov
enter
inc
jno
je
dec
dec
sub
call
clc
xchg
jmpw
xchg
dec
push
mov
push
pop
jmp
data16
popa
inc
fcompl
add
mov
adc
movsl
mov
pusha
sub
mov
pushf
push
push
mov
cld
jg
xlat
push
in
lret
xor
push
mov
sti
ftst
cmp
mov
sbb
pusha
sbb
xlat
pushf
and
xor
pop
push
pop
ds
imul
push
xchg
mov
lods
iret
call
mov
cltd
shrb
jbe
add
sub
lock
insl
shlb
inc
sarb
adc
xor
sub
ret
loop
out
adc
pop
sahf
ss
xchg
add
je
mov
adc
pusha
sub
ljmp
xchg
nop
push
add
add
xchg
out
push
das
data16
mov
xchg
loopne
xchg
add
jnp
ljmp
push
sub
add
jmp
push
shll
je
adc
lods
cmp
and
cmp
jl
sti
leave
sbb
jns
sbb
rorl
les
mov
push
jne
cmpsl
aas
bnd
and
inc
xchg
ljmp
jle
jecxz
mov
xchg
sti
ret
sbbl
cmp
imul
rcll
imul
pop
fldl
pop
add
out
cltd
nop
adc
mov
pushf
jno
push
lret
cmp
lret
je
jl
mov
popf
int3
dec
inc
pop
xor
push
adc
jmp
inc
mov
sub
cmp
sarb
dec
and
ja
xor
out
push
push
sub
mov
mov
fwait
sub
sbb
push
rclb
lods
mov
mov
or
jl
sbb
jno
maxps
cmp
mov
push
or
dec
ss
pop
into
addr16
aad
cmp
sti
sub
ds
xchg
push
mov
or
or
lock
cs
xor
mov
fst
test
sbb
repnz
fcoml
jo
sub
dec
push
mov
in
mov
rorb
in
mov
xchg
fcoml
fwait
xor
arpl
outsb
lret
enter
shlb
adc
xor
mov
mov
lcall
sbb
cmp
or
pop
sbb
cltd
outsl
pop
xor
push
enter
push
imul
and
jo
jecxz
repz
shl
in
mov
int
pusha
ret
fs
mov
cmp
and
cmp
fistl
xchg
loope
sub
cmpsl
mov
idivl
jnp
fistps
pop
inc
jbe
mov
sbb
jmp
push
popf
loopne
pop
mov
pushf
std
pop
push
or
push
lods
push
lds
adc
pushf
adc
stc
sub
ret
ljmp
pop
pop
mov
xor
cmp
addr16
sbb
lret
popf
push
mov
adc
mov
ljmp
or
pushf
or
mov
mov
or
scas
loope
sub
pop
xchg
and
push
aad
dec
or
arpl
mov
push
decl
jge
mul
fldl
and
lds
enter
sbb
imul
or
popa
pop
jnp
ljmp
or
pushf
out
jge
orb
sbb
push
cmpsb
inc
xchg
bound
adc
stos
cs
push
or
aam
inc
cs
dec
jne
and
push
and
imul
xchg
add
test
es
jecxz
mov
fidivs
out
cmp
add
icebp
dec
fcmovne
pusha
cltd
sub
cmpl
cli
in
mov
das
lahf
ja
push
call
dec
pop
jae
sti
mov
dec
cltd
test
sub
cmp
add
insl
xchg
inc
and
xchg
stos
push
dec
dec
ja
adc
sbb
adc
and
lods
cmpsb
ds
add
and
mov
or
xchg
rol
das
push
ljmp
push
scas
nop
stos
iret
mov
and
jg
mov
xor
movsb
cmp
mov
inc
lock
inc
mov
mov
ficompl
or
lds
cmc
xchg
aas
pop
or
dec
aas
ret
dec
mov
pop
pop
xchg
insb
push
adc
or
add
pop
imul
pop
aas
ljmp
sbb
shlb
cmp
fs
lds
push
push
inc
adc
out
test
pop
or
cmp
mov
push
out
bnd
out
popa
pop
mov
sbb
xor
insb
aas
adcl
xor
push
mov
popa
and
xchg
pop
xchg
dec
lret
or
bound
cmp
std
mov
sarl
jno
sarl
inc
sub
xchg
cmp
mov
movsb
adc
push
mov
outsl
mov
jge
fwait
test
es
test
dec
mov
cld
or
jno
ja
mov
mov
mov
inc
mov
fbld
mov
xlat
lock
mov
push
or
insb
popf
inc
mov
ficompl
and
int3
push
lock
aam
xchg
in
stos
pop
in
jnp
pop
stos
das
xchg
mov
xor
sbb
mov
sbb
or
pusha
rolb
in
movsb
mov
ljmp
lret
xchg
loope
jb
sub
xor
test
sbb
inc
sahf
jge
push
dec
fs
xchg
cld
pop
dec
and
sub
and
sub
in
fsts
out
adc
inc
leave
lcall
repnz
in
ffreep
pop
sbb
test
push
lock
loop
mov
lock
xchg
add
aad
lods
add
in
cmpsl
and
aaa
lret
push
inc
sahf
mov
push
jl
jae
lea
iret
rep
add
stos
inc
jno
pop
cld
mov
push
jno
mov
jo
es
adc
xchg
arpl
scas
jno
lea
int
xchg
push
mov
xchg
pop
arpl
int3
ret
mov
rcrl
fucom
ja
cs
cmp
mov
rclb
dec
daa
test
int3
insb
push
data16
sbb
sbb
add
loop
push
xchg
es
outsb
bound
pushf
sarl
inc
cmc
aaa
cltd
pop
in
movsl
nop
cmpsb
shlb
jne
lock
cmp
sti
pop
das
shlb
push
rclb
jo
into
popa
roll
pop
das
popf
pop
mov
cmpsl
pop
movsl
cmp
sbb
shll
cmp
mov
sub
fucomip
insb
and
ljmp
ljmp
cmp
xchg
xor
cmpsl
cmp
sahf
xor
cmp
test
jg
pop
dec
icebp
fstpt
xchg
cmp
jno
add
int
sub
popa
sbb
cmp
xchg
sahf
jge
adc
pop
adc
je
pop
mov
add
pop
add
lock
aad
in
ja
add
jb
cmpsb
and
lea
push
adc
mov
into
xchg
xor
push
fiaddl
jae
cmp
xchg
iret
dec
sbb
jg
and
mov
adc
in
cmp
ja
push
insl
inc
sbbl
add
sbb
dec
jecxz
jb
lcall
movsb
pop
movsb
insb
add
cld
orb
mov
lcall
dec
pop
dec
pop
pop
pop
pop
mov
clc
jmp
lea
fbstp
bound
mov
shrb
mov
pop
cs
jno
das
cmp
and
cmpl
rorb
das
mov
hlt
add
mov
ret
mov
or
mov
xchg
jg
repz
sub
test
add
mov
add
mov
aam
mulb
cmpsb
lds
aad
rcrl
iret
ds
popf
and
adc
aaa
in
in
dec
pop
push
aas
repnz
push
scas
mov
rol
aaa
pop
xor
cmp
xor
cmpsb
xor
rorl
or
and
mov
or
popa
lahf
or
outsl
mov
pop
aam
jnp
adc
add
pop
cwtl
stos
pop
sub
loop
add
pusha
aad
mov
jp
ss
loope
mov
jbe
jg
test
rorl
dec
scas
into
mov
mov
xchg
xchg
mov
test
and
mov
es
outsb
mulb
lret
mov
movsl
add
pop
xlat
mov
cmp
pop
and
into
fcmovu
xchg
repnz
out
mov
movsb
mov
fcomps
pop
std
lods
into
adc
adc
pop
in
outsb
stos
test
add
jge
sar
dec
pop
xchg
mov
dec
sub
mov
fwait
sub
std
fsubrs
and
inc
jp
pop
mov
hlt
dec
bnd
lea
shr
faddl
inc
mov
jmp
mov
jge
mov
sub
cmc
sub
outsl
sub
mov
add
leave
leave
sbb
outsl
fsts
and
sbb
ror
inc
test
cmc
xchg
sbb
push
and
std
shlb
or
cmpsl
fwait
imul
dec
mov
jle
and
inc
dec
pushf
and
adc
fs
fnstcw
add
xchg
mov
lahf
or
inc
add
cltd
fimuls
cmpsb
cltd
push
xorb
inc
mov
mov
notl
pop
repnz
mov
push
aaa
outsb
dec
jnp
out
shll
xchg
js
mov
or
shlb
mov
cmpb
lahf
ret
xor
pop
fldt
push
add
pusha
fwait
lret
mov
out
xor
into
add
loop
push
cld
push
push
xor
out
decb
xchg
scas
pop
adc
filds
sti
inc
sbb
push
aaa
insl
cmp
xchg
stc
add
daa
jg
rolb
aas
pop
push
subb
insb
dec
mov
pop
sub
rcll
mov
test
cli
mov
outsb
in
adc
lea
jecxz
add
pushf
mov
out
inc
jae
inc
aam
into
cltd
cmp
lods
xor
fisttps
or
jne
cwtl
fcoms
mov
cmpsl
xchg
mov
mov
jno
in
push
pop
jg
sub
dec
xor
xchg
mov
jno
pop
lahf
rcrb
mov
aad
jns
adc
mov
xor
jp
arpl
sarl
je
mov
push
mov
push
int
adc
lds
icebp
pushf
iret
scas
sbb
imul
imulb
and
cmove
es
push
mov
xor
loop
adcb
xchg
and
inc
adc
mov
ja
mov
and
in
xor
sub
arpl
cltd
sbb
fmulp
xor
fisubrs
pop
cltd
fiaddl
adc
cli
int3
adc
inc
rcl
out
fidivs
imul
mov
cmp
add
inc
and
push
cli
ja
insl
mov
dec
inc
loopne
out
ret
test
cltd
or
xchg
int3
ficomps
bound
cmp
imul
repnz
test
jbe
pop
mov
lock
scas
out
aaa
jg
out
inc
jne
sub
cwtl
jo
or
fisubs
sbb
scas
mov
repnz
mov
push
fwait
lcall
shl
aas
fwait
and
sbb
push
mov
add
les
shlb
cmp
xchg
imul
jp
es
fwait
aam
push
sbb
in
dec
dec
inc
out
and
mov
pop
jle
xor
pop
lods
mov
sub
mov
data16
or
shlb
and
xchg
jns
push
jns
in
dec
das
cmp
push
daa
pop
pop
cmp
fstp
pop
outsl
lret
adcb
sbb
sub
xlat
sahf
jecxz
fadds
cli
call
or
xor
fisubrs
mov
mov
mov
in
pushf
mov
ja
jp
pop
push
mov
movsb
dec
js
or
repz
pushf
adc
jbe
mov
inc
cmp
and
out
lcall
mov
jbe
incb
push
test
repnz
mov
push
into
mov
push
xor
add
mov
loopne
cmp
mov
cltd
mov
loopne
or
inc
out
sar
add
cmpsb
mov
jbe
mov
hlt
lods
pop
jne
test
pop
imul
sub
lds
and
test
inc
imul
sbb
sub
jge
lcall
enter
stos
pop
std
pop
je
dec
xchg
aas
int3
aaa
dec
das
sub
push
inc
jecxz
mov
test
push
mov
inc
std
dec
stos
int3
pop
movsl
cltd
push
add
ja
mov
data16
jg
out
out
pop
and
popa
bound
mov
ret
mov
pop
lock
mov
incl
gs
inc
inc
sahf
pop
stc
arpl
pop
ficompl
push
adc
mov
sti
sti
xchg
in
ljmp
ds
jmp
outsl
mov
mov
sbb
pop
icebp
dec
int
iret
mov
xchg
cmp
jb
sub
int
ret
lret
repz
std
mov
xchg
xchg
aaa
pusha
int3
push
int
jae
sar
sbb
imul
fldt
mov
inc
pop
cmp
dec
push
iret
pop
inc
testb
lahf
rclb
mov
jge
sbb
pop
ja
in
out
sbb
fcomps
ret
xchg
in
enter
repnz
push
cwtl
xorb
push
jmp
aam
cmp
mov
es
fsts
mov
push
cmpsb
push
sbbl
and
cs
or
mov
xchg
ljmp
pop
movsl
rcll
push
push
mov
stos
inc
cwtl
cmpsl
out
mov
out
sub
pusha
jns
test
std
mov
icebp
push
enter
sub
incl
or
sbb
in
or
scas
mov
loop
ret
test
out
out
sub
cmp
sbb
cmp
nop
movsb
xlat
sbb
cmp
ficomps
cli
aaa
inc
scas
and
jne
xchg
cwtl
stos
xchg
xorl
js
mov
adc
sbb
inc
cmc
push
sbb
iret
jg
push
jae
mov
inc
in
pop
push
rclb
mulb
pop
pop
lods
mov
lods
mov
fisttpl
inc
orl
sbb
out
fstpl
cmp
mov
push
mov
fisubl
pop
mov
add
xchg
mov
cmc
jg
jno
pop
and
adc
aas
rcll
cmp
sub
dec
movsb
lret
mov
xchg
jnp
or
add
decl
sbbl
das
mull
xor
push
cmp
test
ret
sbb
and
ljmp
mul
inc
js
pop
std
bound
jp
pop
adc
in
pop
jp
cmp
cwtl
iret
lahf
mov
roll
pop
sbb
rorl
sub
das
pop
cmp
pop
roll
sub
jmp
xor
and
inc
cmpsb
lret
sub
jg
fisubrl
jno
repnz
nop
jne
mov
sbb
sbb
jne
pop
pop
gs
xor
loope
xchg
mov
push
pop
adc
stc
mov
xchg
cmpsb
das
xor
inc
mov
jnp
fdivl
and
sbb
idiv
cs
inc
add
mov
leave
push
outsl
push
mov
push
cwtl
xchg
dec
inc
bound
data16
push
hlt
rorb
mov
adc
arpl
int3
dec
mov
mov
jb
test
movsb
jmp
sbb
jns
aaa
cmpsl
das
sti
sub
adc
xchg
arpl
jbe
cs
and
cltd
push
std
pop
inc
push
ret
lret
sub
mov
lds
insl
push
lea
gs
mov
xor
imul
mov
jbe
rcll
push
jbe
fidivrl
shlb
gs
mov
mov
or
push
test
stc
pop
notb
mov
inc
push
rolb
sbb
sub
push
aad
imul
pop
lret
rcrl
lahf
pop
into
xor
out
push
sub
aam
cmp
mov
push
sbb
sbb
negb
xor
jp
shll
mov
xchg
shr
cmpsl
adcb
ljmp
divb
xor
fdivrs
rcrl
cmpsl
scas
add
push
subb
sbb
fisubrs
push
mov
jmp
lods
ret
pop
mov
stc
jle
add
dec
xchg
insl
mov
cmp
subb
jb
pop
push
sbb
inc
push
js
jg
cltd
xchg
mov
push
sbb
sbb
mov
sub
popf
xchg
mov
or
repnz
les
ret
xchg
xchg
jns
adc
xchg
jp
sbb
mov
ret
sub
lock
push
cltd
xchg
and
add
pop
lods
orb
push
mov
jmp
bound
pop
pop
fadds
mov
and
mov
stos
fwait
xchg
xlat
dec
sub
and
adc
pop
and
mov
les
es
mov
or
adc
outsl
push
jg
cwtl
mov
jb
test
int3
mov
pop
loope
outsl
pop
out
insb
sbb
movsb
xchg
cmp
cmp
clc
xchg
dec
lret
pop
out
push
arpl
stc
in
mov
stos
mov
mov
pop
and
daa
cmpl
jns
movsl
test
adc
mov
jg
jl
mul
push
sub
mov
mov
mov
fs
rolb
or
jns
and
hlt
push
shlb
mov
pop
shll
ret
dec
aad
sbb
fwait
dec
and
pop
jbe
movsb
bound
pop
mov
enter
dec
xor
mov
lahf
push
sbb
rolb
dec
cmp
adc
cs
fucom
mov
mov
mov
jne
dec
jg
mov
in
stc
notb
int3
or
sub
orl
cmp
ret
subb
xor
mov
shlb
inc
fadds
scas
and
mov
adc
and
hlt
xor
mov
sahf
sarl
enter
cmp
idivl
dec
xor
test
lea
movsl
cmpsl
cs
sbb
repz
loope
shll
shrl
add
and
lret
scas
xchg
call
into
dec
mov
lock
test
fsubrl
inc
mov
gs
jns
jge
dec
pop
dec
mov
shrb
dec
and
xchg
ret
fcoml
mov
push
into
mov
pop
stc
outsl
outsl
xor
cmc
jle
sahf
xor
mov
imul
add
mov
and
mov
in
sbbb
jno
sub
lock
das
mov
repnz
mov
or
repnz
mov
adc
xchg
mov
cmp
imul
or
loop
or
pop
test
les
push
icebp
mov
int
sub
mov
push
dec
mov
pop
lds
adc
nop
mov
fdiv
repz
sub
xchg
pop
inc
mov
mov
jno
fistps
jo
clc
leave
inc
dec
bound
lret
mov
in
dec
ljmp
xor
pop
in
scas
jmp
pop
scas
sub
jno
mov
add
inc
scas
jmp
mov
pop
subl
sbb
loope
subl
inc
sub
ret
push
mov
mov
xor
xor
lret
mov
test
lret
fcomps
jno
out
push
xor
ljmp
je
stos
nop
aad
sub
loopne
je
adc
rclb
mov
cmpsl
push
test
sarl
push
push
jnp
dec
ss
mov
jb
insl
daa
popf
sub
sub
imul
inc
lds
pop
mov
loopne
pop
enter
sbb
bound
scas
inc
cwtl
sub
in
and
jge
push
daa
xchg
jae
and
inc
push
jne
out
jg
sti
test
mov
push
fstpl
in
insb
add
xchg
je
mov
in
jle
rorl
push
cmp
and
lea
add
je
fisubrs
iret
mov
jge
inc
jns
movsb
add
jne
xchg
call
lret
jp
mov
xchg
pop
int
inc
ret
shlb
mov
outsl
int3
or
mov
sbb
push
repnz
mov
test
ret
mov
mov
adc
movsb
movsb
inc
ss
mov
dec
aaa
in
gs
es
push
and
mov
lods
sahf
repz
mov
xor
pusha
scas
sub
loop
jb
push
adc
mov
sbb
cld
or
cmpsl
push
pop
xor
and
jns
push
jns
rclb
add
mov
rorl
jnp
cld
lcall
push
xor
fwait
inc
mulb
ljmp
pop
js
cmc
rcrl
idiv
pop
lahf
repz
push
add
push
mov
adc
lods
xorl
cli
aas
adc
fisubrl
cmc
sub
xor
stos
pop
push
mov
and
insl
or
adc
inc
xchg
cmp
adc
popf
cmp
ret
mov
and
js
popa
pop
inc
mov
push
add
scas
or
lock
dec
dec
mov
mov
mov
dec
jecxz
shrb
or
iret
and
and
test
add
pop
or
push
adc
fldcw
cwtl
pop
pop
sbb
sbb
ficompl
mov
scas
ljmp
loope
out
dec
mov
popa
sbb
and
cmp
popa
cmp
pop
outsl
pop
push
repnz
inc
into
xchg
je
jb
xor
sub
popf
pop
push
dec
arpl
mov
cwtl
les
maskmovq
mull
xchg
xor
inc
or
jo
stos
and
rcll
fcmovne
sbb
ljmp
push
in
mov
dec
jecxz
pop
push
pushl
pop
mov
mov
pop
xchg
push
into
inc
pop
mov
icebp
lds
cmp
pop
pop
sbb
dec
xchg
sub
push
in
shrl
jmp
or
ja
pop
lret
arpl
stos
shrl
jne
add
cmp
cmpsl
nop
mov
and
and
mov
ds
add
and
rorl
ljmp
mov
loopne
adc
and
jle
mov
sbb
dec
xchg
jmp
mov
cmp
push
push
sub
lods
pop
jns
pop
cli
test
adcb
sub
les
sub
add
clc
idivb
push
xor
mov
push
bound
push
sarb
iret
cmpsl
divb
fidivl
fisubrl
stos
xchg
test
sub
mov
sbb
jl
cmp
push
inc
dec
pop
rcrb
aad
nop
sub
lock
movsl
cli
xor
js
das
cltd
cli
lret
sub
pop
mov
xor
int
jne
hlt
out
in
scas
jno
hlt
jp
push
or
rcr
inc
xor
mov
fadds
pop
daa
sbb
test
mov
push
and
pushf
test
cld
jmp
pop
cmp
mov
dec
lods
or
pop
scas
xchg
push
bnd
inc
xchg
ja
push
mov
cld
or
dec
mov
sbb
mov
scas
fisttpll
mov
mov
in
sbb
pop
lret
jo
push
adc
lahf
sub
lahf
shlb
cmp
mov
add
inc
xchg
or
mov
sbb
push
cmp
pop
sbb
js
and
cwtl
sub
les
dec
adc
mov
pop
shll
jg
gs
test
fnsave
xor
sti
add
adc
adc
mov
lods
lea
adc
arpl
xor
insl
push
daa
fistpll
mov
inc
pop
dec
push
fnstenv
loope
pop
mov
cli
dec
mov
or
insb
das
jmp
stos
sbb
out
scas
add
sbb
aad
cmc
jle
lds
dec
mov
push
ficoml
pusha
lret
lea
push
out
xcrypt-ofb
cmpsl
sub
mov
cs
int3
sti
test
xchg
fstpt
arpl
and
pusha
stc
jge
adc
int
ret
mov
mov
mov
cmpl
jbe
inc
or
lahf
loope
add
pusha
mov
mov
or
jne
daa
test
mov
std
xchg
xlat
or
jae
mov
fmuls
xchg
mov
fistl
xor
in
hlt
pop
lods
cmc
jbe
jb
and
sub
fcmovb
ss
std
cmpsb
mov
cmp
gs
iret
push
lcall
mov
mov
sbb
mov
or
shr
mov
call
pop
enter
int
sub
lods
dec
movsl
mov
dec
in
mov
rcrb
sbb
ss
and
out
jge
sbb
shrl
adc
push
inc
sbb
mov
cmp
cs
cmp
int
sbb
cmp
lret
in
cmp
imul
lea
out
mov
sub
push
mov
push
out
mov
xchg
leave
jns
cmp
sub
sbb
mov
dec
ds
dec
ss
jno
jo
jno
mov
adc
cli
movsb
xlat
jl
xlat
lea
pop
mov
jge
push
jle
xor
ret
fidivrl
push
loopne
scas
lods
and
adc
cmovo
sub
or
fbld
add
leave
and
rcrl
mov
aas
inc
xchg
stc
ljmp
mov
cmp
ret
mov
mov
repz
jg
cmpsl
jge
inc
pushf
shlb
in
enter
and
sbb
jecxz
push
cmovge
cs
push
xchg
sub
adc
mov
xor
inc
xchg
sbb
sbb
mov
pop
orb
pushf
ds
dec
adc
rcrl
mov
ret
sbb
jl
push
adc
lahf
lock
push
xor
std
mov
sub
stos
push
or
pop
jnp
je
dec
arpl
cs
jno
int
mov
mov
and
sub
fwait
hlt
sar
push
cmpsb
aad
lock
fistpll
fidivs
sbb
ss
cmp
push
xor
mov
cmc
xchg
mov
push
lcall
in
push
ret
or
sbb
add
cwtl
sti
sbb
mov
mov
arpl
add
or
jb
add
pop
cwtl
jbe
test
or
sub
sbb
roll
or
jno
add
imul
dec
fisttps
xlat
jmp
outsl
fwait
test
lock
mov
mov
in
call
je
clc
mov
adc
mov
mov
pushf
test
in
rcrb
shl
dec
mov
jno
lods
cli
and
iret
add
mov
fimuls
dec
in
adc
jbe
sub
scas
dec
jp
scas
imul
cmpsb
loopne
daa
dec
pop
repnz
add
cli
in
lock
hlt
or
sub
push
cmp
xor
repz
imul
clc
ds
notl
movsb
inc
pop
cmc
cltd
pop
insb
dec
sub
cld
clc
sub
les
sbb
or
nop
and
call
sti
outsb
mov
cmp
leave
dec
mov
jle
ds
in
dec
mov
push
add
adc
ljmp
dec
mov
test
aad
push
xchg
and
and
out
ret
mov
mov
and
jae
inc
push
sub
mov
mov
cmpsl
fwait
mov
outsb
pop
rorb
xchg
inc
adcb
in
je
dec
xor
xchg
mov
gs
mov
add
cli
inc
adc
push
arpl
dec
pop
jns
sbb
push
inc
xchg
movsb
and
sbb
dec
sbb
inc
push
ret
scas
sbb
ja
jp
adc
or
fcmovne
pop
rol
ret
test
mov
fmull
adc
and
out
push
mov
std
sti
cmpsl
scas
jp
enter
aaa
ret
cmp
mov
push
push
fildl
mov
fldl
enter
addr16
ds
in
xchg
dec
jno
mov
in
mov
insl
mov
pusha
aaa
pusha
push
xor
add
movsb
adc
pop
lock
fisubrl
shlb
xor
into
push
lea
jb
mov
xor
insl
jbe
test
inc
popa
mov
and
hlt
sub
cmp
ss
jge
push
jbe
jge
mov
add
shl
dec
pop
lods
jbe
iret
cmp
outsb
xor
and
push
mov
daa
push
insb
fs
pop
xchg
xor
mov
mov
pop
je
xor
out
movsl
cmp
subw
rcr
dec
aam
rep
mov
xchg
cmp
sub
scas
pop
mov
popf
movl
loop
dec
push
out
loopne
mov
and
xchg
test
inc
fbstp
sub
xorl
call
lahf
mov
mov
aaa
push
mov
fcomip
push
jb
xchg
imul
mov
or
xor
iret
cmc
add
xlat
lret
lahf
and
or
insl
mov
and
adc
scas
or
dec
aad
add
cmp
jl
mov
mov
outsb
jmp
jmp
bound
add
cmp
repz
xor
add
enter
add
int3
fwait
ljmp
ja
dec
cmc
inc
sahf
rclb
fld
mov
sub
pusha
mov
pop
cmpsl
mov
aas
adc
and
or
adc
or
pop
xlat
cmp
add
stc
imul
pop
lcall
lods
add
cmp
jnp
mov
inc
repz
xchg
in
iret
push
jbe
add
gs
mov
imul
dec
into
pop
and
inc
out
push
loopne
cmp
aad
sub
arpl
mov
adc
rcrb
fisubs
sub
mov
pop
xchg
mov
ret
movsl
add
out
pop
pop
cld
call
push
cltd
stc
int
xchg
adc
jmp
dec
aaa
jl
jg
sbb
dec
push
ja
lods
ds
mov
ljmp
fbld
jnp
into
mov
ljmp
fstpl
into
push
xchg
insl
pop
mov
sahf
sbb
loop
inc
insl
and
and
push
push
popf
scas
cmc
les
mov
call
pop
pop
mov
data16
add
dec
xchg
jmp
cld
incl
push
add
daa
xchg
cmp
fsub
lods
and
call
push
adc
orb
out
pop
pop
ljmp
xchg
cli
sub
into
jmp
add
test
dec
or
aaa
jbe
int3
ja
pop
push
jl
sahf
cmp
jbe
adc
xor
popf
push
scas
frstor
sbb
xchg
mov
jmp
mov
add
movsl
and
fidivl
mov
xchg
xor
mov
arpl
xlat
jo
inc
cmp
push
add
cmp
rclb
sub
insl
jg
rcrl
sarb
cmp
mov
xchg
dec
stc
mov
sbbb
arpl
test
popf
push
sub
ljmp
mov
sbb
enter
sbb
inc
xchg
lahf
ret
mov
cs
inc
or
lods
fbstp
push
and
push
clc
jno
push
mov
push
inc
xor
hlt
adc
mov
mov
push
jnp
in
mov
pop
mov
ret
inc
jo
cmp
sbb
jae
imul
mov
jmp
mov
mov
adc
pop
fmull
mov
or
and
xchg
shll
or
jmp
je
lds
scas
jno
lcall
pop
pushf
push
mov
jg
loop
and
out
addr16
dec
jecxz
jmp
mov
sbb
loope
and
pop
push
pop
mov
test
iret
jno
and
sub
ss
lret
inc
cmp
mov
xor
xchg
dec
mov
test
loope
outsl
jp
cmp
and
cltd
enter
add
fmuls
shl
push
into
fwait
push
repnz
out
test
dec
mov
ret
sbb
add
dec
lcall
cmp
and
subb
fadd
sbb
cltd
mov
dec
aad
mov
dec
lret
sub
sub
adc
xchg
cwtl
pusha
imul
sbb
negl
adc
mov
pop
mov
push
adc
adc
cli
mov
sub
pop
cmpsl
loop
and
dec
sarl
cmp
cld
mov
mov
ss
movb
pop
aaa
and
xchg
sbb
test
pop
jle
cmp
push
iret
test
out
xchg
cmpsb
inc
les
stos
mov
inc
outsb
in
adc
mov
add
inc
dec
push
enter
in
inc
cmp
sub
insb
mov
pusha
jb
pop
push
mov
arpl
pop
push
into
cmpsb
idivl
lcall
cltd
xchg
lods
cmpsb
loopne
outsl
jp
mov
aam
mov
stos
call
push
and
adc
jae
add
adc
into
stos
mov
iret
fcomp
cltd
add
imul
je
pop
push
arpl
test
dec
push
inc
in
pop
lret
adc
test
xchg
adc
xor
fdiv
cltd
fisttpll
fistpll
daa
stc
cmp
sbbb
push
ja
cmpsb
sbb
and
pop
xchg
cmp
in
add
mov
pop
mov
xor
pop
iret
adc
fs
or
push
call
mov
jg
cmpsb
cmc
fdivrl
push
data16
dec
inc
sti
lods
lret
ljmp
cmpsl
push
dec
test
add
inc
lcall
movsb
out
lea
pusha
imul
dec
dec
enter
sbb
fsubs
shll
daa
pop
mov
sbb
mov
outsb
push
dec
xchg
mov
inc
mov
mov
test
and
out
pop
mov
mov
sbbl
arpl
xchg
mov
repz
mov
jge
add
dec
aaa
dec
mov
cmc
sti
icebp
inc
daa
or
mull
scas
xchg
or
mov
test
test
mov
and
out
sub
dec
push
stos
jle
rcrl
test
ds
mov
push
pop
cmc
imul
in
xchg
sub
cmpsb
imul
sti
mull
std
push
adc
cmp
outsl
insl
mov
call
jmp
movsb
lods
aad
stos
stc
mov
mov
pop
lret
outsb
movsb
or
cmpsb
pusha
adc
out
inc
gs
pop
in
js
pop
mov
out
inc
movsb
cli
stc
push
add
sbb
inc
pop
shll
stos
pusha
shl
mov
jns
sahf
les
jbe
sub
mov
movsl
jg
rclb
cmp
adc
push
xlat
cmpsb
jno
das
inc
inc
mov
xor
sub
jne
inc
inc
fs
mov
lret
mov
xchg
insl
pop
adc
jae
ss
pop
data16
mov
xor
ret
add
inc
in
imul
call
or
cmpb
mov
pop
clc
cmc
pusha
cmpsb
xchg
xor
inc
inc
pop
push
mov
outsl
test
sbb
cmc
mov
test
dec
scas
fidivrl
pop
fbstp
pop
mov
out
push
data16
or
adc
rol
xor
ljmp
xchg
jmp
mov
rcr
and
gs
rorl
or
add
adc
jno
cs
xor
mov
scas
cs
orb
stos
outsl
jns
cwtl
icebp
inc
pop
mov
jg
in
loop
pop
pop
aas
jge
sbb
pop
or
addl
jmp
loope
pop
pushf
and
rclb
push
jo
shrl
scas
das
xor
popf
jge
int3
jp
jp
divb
xorl
out
sub
sar
push
test
in
jg
and
and
or
fldenv
mov
ja
dec
cmp
daa
mov
out
inc
inc
pop
add
or
js
pop
outsl
outsb
pop
call
pushf
mov
lret
lock
daa
mov
shlb
cwtl
adc
test
sbb
into
cld
mov
data16
outsb
push
or
add
hlt
sbb
adc
or
jnp
jae
clc
cmovb
dec
loopne
mov
nop
inc
ss
scas
push
fidivs
loope
popa
lods
ret
pop
ljmp
xchg
sub
and
push
dec
shrl
sbbb
cmpsb
inc
sub
mov
or
cltd
xchg
add
adc
xchg
js
pop
lods
cmp
ret
xchg
inc
mov
in
jmp
js
inc
cwtl
daa
add
push
fs
scas
std
push
inc
mov
fcompl
mov
test
mov
into
adc
cmp
pop
loope
jge
push
dec
push
dec
cmc
sbbb
jne
inc
mov
aaa
call
ja
xor
lcall
into
xchg
gs
stc
pusha
nop
outsl
in
cli
cmp
dec
xor
in
jo
inc
xlat
cltd
xchg
cmpsb
cs
push
mov
cmp
in
dec
lcall
ret
jae
jmp
fucomip
add
fisttpl
pop
pop
cmp
cs
fcoms
cmp
aas
jb
mov
fiaddl
adc
cmpsl
or
int3
orl
into
aam
pop
fucom
add
fstl
mov
adc
mov
dec
in
adc
xchg
pop
jecxz
mov
mov
xchg
add
or
sbb
stc
push
dec
inc
inc
fisubs
imul
mulb
loope
fistps
mov
xor
mov
sub
xlat
daa
fiadds
insl
mov
lcall
push
lock
push
xchg
jge
and
jns
popf
fmuls
inc
enter
pop
loopne
lods
sub
clc
aam
mov
add
maskmovq
notl
cmp
jge
fwait
shl
sbb
aaa
daa
insb
scas
or
cmp
xchg
sbb
push
rol
inc
in
shl
fs
inc
sbb
mov
inc
icebp
mov
pop
push
test
and
jo
sub
push
pop
adc
jmp
add
inc
shlb
xor
out
pop
mov
nop
jb
jg
popf
mov
mov
lds
cmpsb
xchg
dec
bound
movsl
mov
outsl
jns
adcl
add
xor
cli
nop
push
dec
push
sub
mov
lahf
push
dec
pop
fst
inc
cwtl
xchg
icebp
addl
jne
xchg
add
dec
jno
incl
sbb
outsl
sbbl
lret
dec
sbb
adc
negl
mov
pop
adc
add
xor
jmp
mov
xor
lret
pop
jne
dec
adc
sub
sub
mov
int
jecxz
repnz
jb
cmpsl
xchg
ja
and
or
mov
jmp
test
in
cmp
sbb
inc
mov
mov
in
data16
test
out
or
out
sub
cltd
inc
es
mov
mov
shl
pop
inc
lods
fistpll
adc
and
inc
pusha
dec
call
mov
out
outsl
int
test
adc
adc
cli
pop
out
or
cs
ffree
daa
fwait
mov
pop
insb
pop
and
das
inc
and
ret
mov
outsl
mov
mov
call
xor
adc
mov
push
aam
inc
xchg
cmp
sti
lods
mov
push
jge
out
sub
jmp
popf
int
in
inc
inc
popf
jg
adc
popa
cli
stos
pop
mov
mov
lcall
cmp
lds
vpmacsswd
jmp
sbb
mov
mov
push
jg
rep
mov
add
in
sahf
inc
pop
sbb
dec
xchg
xor
push
lock
dec
adc
in
jmp
pop
pop
jae
mov
in
jmp
cmpsb
cmpsl
andl
inc
jbe
fwait
inc
loop
aas
add
add
in
dec
mov
cltd
mov
sbb
add
ret
cmp
mov
pusha
pop
pop
lods
in
out
xchg
inc
sub
add
repz
jns
xor
movsl
outsb
sub
adc
out
inc
push
fmulp
sbb
mov
inc
cmpsb
fwait
xor
cmpsb
sbb
daa
fucom
inc
push
sbb
in
fsub
insl
shll
jb
in
data16
xorl
pop
xchg
mulb
dec
jae
ljmp
xchg
mov
sbb
ljmp
jge,pn
jp
mov
cld
sub
pop
jo
push
and
lcall
fadds
inc
roll
int3
outsb
gs
shlb
fnsave
fwait
lock
mov
sub
and
imul
push
aam
sbb
scas
mov
sbb
sub
mov
mov
lock
push
xchg
or
push
dec
jmp
adc
adcb
ja
pushf
jmp
mov
test
or
sbb
xor
and
lock
mov
ret
and
popf
xor
add
adc
mov
adc
mov
pop
in
push
cmpsb
push
shlb
push
adc
arpl
fdivrl
cmc
fcom
pcmpgtw
icebp
jmp
pop
fidivrl
add
lds
jge
in
dec
push
ss
dec
imul
lret
cmp
mov
xchg
push
sub
mov
int3
xchg
clc
or
iret
outsl
push
dec
incb
lret
in
xlat
mov
push
call
jmp
and
dec
or
push
xlat
adc
cli
jmp
leave
inc
sbb
pop
push
std
cmp
mov
adc
mull
imulb
sub
adc
push
xchg
ss
iret
loop
push
xchg
lods
jns
and
xchg
sub
icebp
lcall
fwait
mov
in
jae
ror
iret
movsb
or
leave
std
mov
adc
mov
mov
fdivrp
data16
jge
mov
cmp
adc
push
adc
das
jecxz
pushf
mov
add
int
iret
test
xorb
pushf
cmpsb
cmp
sbb
shrb
cltd
xchg
jecxz
lods
mov
inc
cmp
sub
xor
popf
xchg
jne
pop
clc
jl
mov
inc
les
repnz
jns
sub
test
mov
flds
subb
inc
rclb
xchg
mov
push
adc
sub
div
sbb
inc
jns
add
shl
ds
ss
xchg
popa
in
sub
das
inc
xchg
stos
fldenv
adc
orb
cmp
xor
dec
rorl
insb
sarb
push
pop
pop
call
adc
jae
imul
mov
les
mov
inc
jp
jb,pn
xlat
sar
sub
fildl
mov
mov
imulb
and
inc
cmp
jle
int
insb
cmp
popf
adc
jmp
dec
and
insb
pop
dec
bound
sub
loope
sbb
pop
cmp
or
movsl
mov
sbb
cmpsl
xlat
loopne
outsl
adc
push
push
pop
movsb
jmp
jb
fdivs
loope
mov
sbb
rorb
cmc
loop
inc
cmp
neg
ret
test
aas
sub
jmp
dec
and
fwait
push
xor
lea
ljmp
mov
and
xchg
fs
arpl
xchg
jae
nop
sbb
std
sub
cmp
fcoms
xchg
sbb
mov
add
insl
lret
les
mov
inc
int3
cmp
imul
iret
or
pop
in
int3
cmp
cwtl
sbb
fisttpl
cmp
rcl
or
jbe
out
pop
adc
dec
and
cmp
mov
adc
out
cwtl
cmp
push
push
clc
nop
mov
inc
cmp
loopne
cli
add
dec
dec
sbb
push
pop
add
cmp
mov
inc
negb
repnz
and
repz
add
ja
fwait
xor
sub
incb
mov
mov
push
push
push
xor
sub
dec
xchg
dec
push
test
sbb
insl
int3
pop
add
xor
mov
mov
jmp
and
push
sbb
addb
jbe
test
jge
pop
mov
mov
mov
pop
scas
xchg
sub
stc
cmpsb
fiaddl
lret
dec
cmp
add
cmp
sub
int
insb
dec
or
outsb
sub
and
jecxz
cmp
xchg
and
movsl
repnz
pop
mov
pop
pusha
loop
call
iret
and
xor
jecxz
nop
int
in
pop
ret
rorl
sahf
in
cmp
je
cmp
mov
stos
mov
icebp
pop
inc
xchg
and
cmc
sub
push
push
lods
arpl
jl
cwtl
mov
mov
dec
popf
iret
cld
outsl
out
cs
fists
jmp
js
push
notb
mov
mov
ljmp
ss
int
cmp
or
sub
loop
push
mov
cld
xor
mov
jmp
pop
inc
xor
cmpsb
cld
pop
in
jecxz
or
sarb
inc
adc
push
xchg
lock
pop
cmp
adc
fcoms
add
or
loope
lahf
dec
pop
loope
and
jmp
ja
xchg
addr16
mov
jbe
lahf
inc
movsb
sub
jnp
scas
pop
add
xchg
stc
pop
adc
mov
pop
aaa
mov
aaa
cld
xchg
add
jg
dec
cmp
jbe
rcll
and
and
es
jp
sbb
test
fs
push
xor
inc
cmc
lret
xor
faddl
or
add
mov
in
xlat
call
inc
aaa
rolb
push
shll
mov
adcl
aam
and
shrb
cmp
dec
lock
ret
xor
push
sub
mov
outsl
pop
mov
xchg
pop
mov
push
scas
inc
in
sub
pop
dec
jmp
idiv
jecxz
popa
andb
push
pop
dec
sbb
add
mov
cli
test
jmp
add
fsub
inc
rcll
clc
add
jecxz
pop
into
fld
test
in
adcw
test
pushf
sub
sti
in
movsl
js
cmp
pop
mov
push
xchg
out
xchg
dec
and
push
aas
imul
pop
repz
lahf
mov
jp
adc
icebp
fstl
push
or
sub
mov
inc
mov
inc
fstps
shll
fnsave
repz
ret
pop
jne
mov
inc
ds
adc
mov
pop
dec
ljmp
sbb
cmp
mov
push
jg
dec
in
sub
dec
int
xchg
mov
scas
ljmp
add
jo
sub
mov
adc
mov
pop
out
fists
jl
inc
xor
and
pusha
in
xor
ljmp
xchg
mov
pop
mov
add
mov
pushf
adcl
arpl
jmp
add
mov
inc
jno
leave
pop
push
jns
sbb
push
jae
lret
lods
push
xchg
in
insb
mov
inc
fwait
sub
adc
adc
subl
sub
stos
mov
out
bound
sub
mov
into
push
and
xchg
dec
push
xlat
dec
loopne
xor
call
xor
jae
jmp
inc
in
mov
sub
xor
pusha
cwtl
stos
cmc
pop
hlt
fs
clc
outsl
jns
pop
arpl
into
es
mov
and
fimuls
and
inc
push
or
fists
mov
sbb
stos
sbb
pop
lcall
in
mov
jns
lret
ss
fsubl
dec
add
cwtl
cmpsb
pop
dec
or
pop
imul
cmp
jp
call
je
es
pushf
stos
jge
jb
mov
sbb
adc
pop
sbb
mov
inc
adc
push
jae
pushf
mov
imul
adc
and
xlat
fcoml
xchg
xchg
dec
push
aam
call
mov
fisubs
imull
cs
inc
push
add
push
cmp
inc
xchg
rcll
pop
jmp
pusha
in
pop
push
imul
cmp
mov
into
lahf
sub
imul
cmpsb
les
mov
aas
add
incl
lret
xchg
xchg
pushf
aaa
lods
dec
push
in
lds
loop
pop
movsl
repnz
lret
fimuls
mov
mov
lods
lahf
sbb
pop
push
sahf
dec
fdivl
ja
mov
dec
rcl
inc
pop
inc
in
shl
jle
ss
mov
fldt
dec
out
xlat
inc
mov
lods
lcall
or
idiv
and
stc
sahf
fs
pop
mov
inc
data16
xor
push
adc
and
ja
sbb
cmp
int
call
push
je
cltd
push
pop
pop
std
pop
xor
mov
jo
rcrl
sti
repz
mov
sub
mov
dec
lret
inc
sti
std
jae
push
push
pop
mov
into
xchg
imul
jb
mov
dec
xor
add
mov
pop
inc
lods
push
ficompl
sbb
cwtl
test
imul
and
jbe
fadd
imul
sub
pop
mov
mov
and
sbb
test
pop
ds
jo
mov
sahf
outsl
sub
fsubl
xor
das
push
or
lds
das
mov
mov
and
repz
inc
dec
push
xor
fs
cmp
jno
cmc
dec
cli
shll
inc
shlb
cmp
dec
and
mov
data16
push
je
stc
mov
lcall
or
jb
stc
es
into
mov
scas
pop
stos
and
inc
cmp
xor
fimull
popf
int
pop
xchg
pop
lods
outsb
leave
cmpsl
int
push
les
pop
loope
jo
mov
js
hlt
cs
fisttps
mov
or
cmp
jge
mov
fldl
sti
fildl
cmp
mov
mov
adc
jge
pop
push
sub
push
imul
mov
jl
add
push
cmp
sbb
icebp
inc
out
or
inc
inc
stos
into
frstor
test
xchg
notb
jne
out
and
ss
xchg
xor
ljmp
cmp
cmp
fld
ret
pop
iret
adc
xchg
lret
cmp
cmc
mov
pop
shl
pop
insb
fwait
xchg
xor
hlt
lods
inc
pushl
faddl
add
test
loopne
push
push
sti
mov
mov
inc
sahf
loope
fmull
lcall
sub
rolb
sub
mov
cs
repz
mov
mov
pop
jmp
out
cmpsb
jp
popl
movsl
cltd
nop
in
aaa
sarb
cmp
xchg
mov
jae
sub
aaa
mov
add
idivl
gs
mov
test
cli
and
push
loope
xor
sub
push
add
mov
jbe
or
aam
insb
loopne
aam
dec
mov
mov
imul
sub
mov
mov
add
in
or
pop
push
loopne
cltd
sar
icebp
cmpsb
test
xlat
das
enter
push
lahf
inc
mov
clc
cmp
test
out
jnp
sar
mov
cmpsb
push
mov
cwtl
xchg
das
stos
xor
mov
jno
push
inc
xchg
bound
inc
nop
jae
imul
out
mov
cmc
xor
test
jge
out
outsb
scas
adc
adc
xchg
and
inc
xchg
or
xor
mov
mov
push
in
jle
das
pop
shl
pop
outsl
cmp
pop
int
or
sbb
cwtl
jmp
jmp
je
add
scas
stos
jae
iret
je
rclb
test
mov
fnsave
sub
jg
out
rcr
xchg
sbbb
int
adc
clc
xchg
cmp
imul
xchg
mov
xor
lods
sbb
push
dec
mov
pop
lcall
leave
rdmsr
cmp
aas
push
gs
mov
imul
add
push
int
pop
or
icebp
push
dec
out
push
push
aaa
adc
in
mov
mov
xchg
and
cmp
shl
xlat
jg
pushf
add
dec
xorl
or
inc
cmc
imul
cmp
dec
pop
push
jmp
lds
enter
mov
js
fidivrs
or
movl
inc
mov
lahf
jnp
stc
outsl
cmp
mov
call
mov
test
repz
cmp
cmpsb
in
xlat
mov
dec
jecxz
sub
sbb
loope
shlb
pop
popa
imul
add
aaa
cmp
and
rol
enter
dec
ja
sbb
stos
mov
fdivs
jmp
mov
lahf
or
xchg
dec
data16
dec
fwait
cli
int3
add
rol
fstpt
inc
insb
adc
test
aaa
lock
ja
mov
jne
mov
sbb
cmc
dec
inc
mov
pushf
icebp
sub
inc
jb
jle
cli
sub
movsb
mov
fcomip
call
lcall
imulb
fsubl
mov
dec
lods
int3
daa
push
mov
rcl
stos
negl
cmpsb
adc
adc
pop
xor
imul
and
adc
scas
pop
jge
loop
lea
pop
pop
cld
jo
pop
inc
sti
ret
pop
adc
mov
enter
aam
pop
jnp
jns
pop
repz
enter
pusha
inc
inc
push
xchg
or
pop
xchg
and
mov
and
stc
enter
aaa
iret
outsb
outsb
cli
adcb
push
or
ret
ret
ret
loope
or
out
inc
gs
mov
xchg
adc
adc
cs
dec
cmpsb
fsts
pop
mov
mov
outsl
test
sub
inc
xchg
dec
rol
ds
push
mov
jl
test
pop
out
mov
incb
jg
adc
inc
orb
jne
orl
cwtl
jg
xor
lods
in
push
mov
cli
mov
cltd
outsb
out
icebp
in
mov
rcrl
or
mov
rolb
mov
sarl
jno
sbb
push
shrb
shll
inc
scas
dec
add
rclb
push
rcl
inc
dec
imul
jns
mov
mov
xchg
pop
inc
jmp
es
pop
ficoms
les
nop
pop
sub
jo
xchg
sbb
ret
adc
or
cmp
fidivs
xchg
mov
incl
mov
fists
mov
pop
cmp
in
adc
pop
sbb
stos
add
inc
adc
adc
and
popa
cmp
insl
adc
xor
cmc
inc
push
out
in
repnz
or
jne
xchg
call
mov
dec
adc
je
sub
jg
cmp
dec
lods
les
adc
xor
mov
imul
and
das
fidivl
rcrl
xor
jle
repz
lods
dec
clc
add
xor
or
sahf
mov
les
xor
mov
push
jle
gs
xchg
push
stos
and
lahf
dec
mov
dec
repz
mulb
cmpsl
std
repz
ret
push
xlat
mov
dec
inc
adc
jae
jns
xor
repnz
lahf
dec
test
adc
jns
loope
rorb
sti
push
movsl
fucomp
sub
rcrb
lds
dec
in
dec
sahf
push
push
sbb
addb
push
pusha
repnz
push
js
imul
hlt
cs
and
jp
in
inc
xchg
mov
icebp
cmpsb
push
adc
stos
mov
add
loop
sbb
mov
vpsllw
and
jle
ret
std
xchg
subl
das
inc
mov
mov
dec
sbb
xchg
dec
inc
ret
jg
loop
adc
jg
adc
or
mov
dec
mov
mov
xlat
clc
mov
stos
dec
sbb
add
push
ljmp
stos
sub
mov
dec
adc
leave
mov
out
insl
mov
std
cwtl
int3
pop
jo
push
ljmp
xorl
add
insl
into
add
imul
aam
mov
xor
inc
xchg
in
jbe
xchg
das
shl
push
in
add
sub
pop
mov
das
jg
std
aas
dec
inc
mov
iret
sahf
dec
jle
jnp
sti
sbb
jb
xor
jge
cltd
pop
out
das
push
lods
mov
xchg
push
adc
insl
pop
mov
dec
jge
ja
clc
loope
mov
mov
mov
gs
mov
and
dec
cmp
ljmp
mov
in
adc
or
addr16
imul
dec
mov
ret
adcl
lret
lahf
or
and
ret
add
inc
aam
jp
rorl
cmc
mov
out
orl
add
iret
ljmp
jge
xor
mov
sarl
push
loop
jmp
xor
add
push
add
orl
ficompl
insl
mov
or
ret
and
jae
push
in
sub
mov
mov
fimuls
sbb
comiss
out
popf
cmp
idivl
shr
ja
fucomip
add
cs
lds
mov
pushf
push
rcll
mov
jg
mov
in
push
cmp
mov
dec
daa
cmp
xchg
shll
xor
jl,pn
in
testb
mov
daa
out
scas
dec
jmp
in
pop
mov
dec
inc
jb
sub
fwait
push
popl
out
and
in
mov
ds
imulb
push
cmpsl
and
add
push
movsl
inc
mov
mov
aas
pop
lods
rol
jg
out
mov
pop
addr16
jecxz
mov
lock
adc
cmp
cmc
and
out
inc
sbb
test
xchg
add
mov
roll
dec
sbbl
lods
dec
push
imul
mov
test
loope
js
loopne,pn
insb
cld
push
push
test
sahf
aaa
lret
push
pop
subl
aad
mov
mov
mov
lret
jo
mov
mov
insl
lods
clc
dec
mov
cmp
mov
sub
or
or
pop
in
fidivl
iret
loope
mov
cwtl
mov
arpl
test
push
pop
lods
cwtl
jbe
push
and
xor
icebp
xor
in
lret
test
push
mov
clc
xchg
cmp
inc
stos
adc
xchg
mov
pop
or
push
movsb
pop
imulb
adc
sti
jmp
dec
pop
pop
lahf
push
pusha
shlb
test
jg
std
cmc
mov
mov
jae
push
clc
and
cs
push
into
cmp
xor
adc
xchg
out
cli
movsb
mov
lcall
inc
scas
mov
dec
xorl
and
cmp
loop
out
sbb
jecxz
es
adc
cmc
and
xchg
enter
lods
insl
cmp
mov
cld
xchg
lcall
xor
cmc
pop
adc
adc
jmp
fisttpll
sti
in
mov
cmp
out
loop
mov
fidivl
push
movsl
cmpsb
popa
push
mov
adc
cmc
dec
mov
mul
in
push
jl
pop
and
mov
fadd
dec
mov
jmp
divb
and
loopne
int
das
add
aaa
mov
adc
xchg
jb
jae
xor
jno
bound
pusha
xchg
adc
fisttpl
xor
das
add
xchg
add
jo
mov
cmp
dec
jmp
xor
cmc
inc
orb
aas
xor
fnstsw
popa
pop
out
sbb
and
or
xchg
xchg
or
fisubrl
fwait
lods
mov
into
sbb
cs
shl
jnp
adc
add
daa
jo
pop
inc
dec
sbb
xchg
and
lods
out
mov
pop
mov
dec
repz
pushf
inc
push
pop
mov
sbb
iret
cmp
out
shr
aad
mov
inc
xor
sub
ja
xor
sbb
dec
fists
xor
loope
pop
mulb
lahf
add
push
out
rcll
inc
adc
test
mov
mov
jbe
gs
out
sarb
jne
scas
andb
push
jb
pop
pop
cld
mov
xor
outsl
mov
pushf
jl
and
pushf
iret
pop
or
inc
jbe
nop
cmpsl
jo
out
fildl
xor
mov
cmpsl
push
xchg
in
cmp
jae
fcoml
push
loopne
pop
mov
jmp
adc
loope
subb
sub
dec
push
call
xor
out
pop
cltd
mov
ja
mov
inc
mov
mov
jo
jne
cwtl
gs
sub
fldl2t
in
xchg
pop
mov
and
push
push
adc
dec
sbb
pop
and
mov
popa
push
adc
inc
scas
cld
mov
leave
mov
add
imul
test
jecxz
stc
cmp
jb
push
lret
xchg
sti
sbb
xchg
jmp
lret
dec
dec
cmpsl
cmc
popa
mov
fisubl
push
pop
jo
popa
fcompl
adc
call
push
inc
sbb
stos
sbb
jl
mov
mov
adc
push
or
dec
push
lahf
mov
outsb
and
decb
xorl
mov
aam
xchg
fs
scas
add
andb
jmp
mov
mov
mov
push
decl
insl
imul
dec
sahf
test
xor
mov
adc
push
mov
dec
mov
movsl
hlt
jno
fwait
jl
add
or
arpl
and
mov
in
stos
inc
popa
je
mov
xlat
xchg
shll
test
pop
sbb
ss
dec
testl
push
jo
movb
push
push
pop
lcall
iret
and
inc
jnp
loopne
mov
mov
sbb
aam
dec
out
lret
icebp
fs
repnz
mov
xor
adc
outsb
jae
jo
in
fisttpll
shrb
dec
push
fcmovb
xorb
mov
xorb
sbb
sub
xlat
jns
outsl
xchg
pop
call
loopw
mov
fstpl
dec
fadds
pop
and
shlb
mov
cmp
adc
fisubs
adc
cmp
and
push
and
adc
lock
leave
mov
sbb
xchg
cmpsb
pop
push
clc
std
test
stos
bswap
mov
cli
pop
jmp
std
stos
push
bound
jge
lea
and
jne
mov
mov
xchg
sbb
aas
mov
xchg
test
xchg
ljmp
sbb
into
xlat
mov
sub
shll
add
xor
stos
push
jno
out
mov
lret
pop
lret
and
adc
mov
mov
scas
pusha
jg
insb
sahf
popa
push
and
push
sbb
jbe
les
xor
in
cltd
push
mov
mov
imul
adc
test
dec
mov
jne
ljmp
aaa
into
sbbb
xor
and
cmp
sbb
xor
sar
cmpb
jnp
std
test
inc
stos
cltd
mov
or
or
cmp
bound
cmp
dec
pushf
inc
repz
inc
enter
and
in
divl
sti
in
inc
jo
sub
stos
inc
xchg
in
or
xor
inc
data16
push
add
test
inc
adc
jb
and
inc
insl
and
xchg
push
mov
dec
add
jo
ljmp
mov
and
shrb
sarl
mov
xlat
mov
pusha
outsb
movl
pop
popf
into
pop
arpl
pop
jae
int3
mov
push
ss
add
sub
arpl
rcrl
sub
push
inc
jmp
dec
jecxz
outsl
js
xchg
sbb
sub
and
int3
adc
icebp
cltd
lds
sahf
push
fisttpl
xlat
das
lods
nop
bound
sub
xor
in
mull
ljmp
cli
test
pop
lods
jne
inc
lret
sti
icebp
out
loop
adc
push
shll
push
mov
jo
and
jnp
popf
pop
inc
je
scas
mov
xchg
push
xchg
dec
aas
mov
jmp
jbe
idivl
mov
roll
xor
lds
sar
mov
and
push
and
lahf
rclb
add
rolb
leave
test
ror
aaa
adc
pop
sbb
xchg
out
shrl
cs
pop
aaa
inc
xchg
insl
roll
mov
pop
test
sub
cli
int
mov
ljmp
loope
add
data16
pop
loopne
int
mov
scas
adc
xchg
das
add
sub
pop
mov
xor
repz
add
rolb
sti
cmpsb
mov
jle
aaa
dec
xchg
pop
mov
nop
cmp
subl
sub
arpl
loop
lcall
call
sub
mov
mov
ds
sahf
pushf
sbb
cs
mov
xchg
jnp
sahf
jmp
push
negl
mov
cmpsl
aam
sbb
jb
adc
pop
jmp
or
in
mov
mov
les
xor
icebp
add
jb
push
aaa
lock
mov
mov
out
dec
and
xchg
scas
shll
lock
push
jno
jbe
test
out
cli
ret
imul
mov
ret
add
sbb
sbb
rcpps
lahf
mov
pop
in
jecxz
pandn
sbb
lea
sbbb
inc
rcl
repz
adc
lret
mov
lea
or
in
in
jns
mov
test
fldenv
sub
icebp
daa
insl
sub
push
cmp
jmp
mov
popf
pusha
jnp
mov
sub
xorb
mov
add
shl
hlt
push
jo
or
je
jl
cmp
add
jnp
dec
mov
adc
icebp
addb
jp
es
jl
sahf
mov
ljmp
lods
xor
out
dec
mov
xor
inc
or
mov
jns
inc
in
adc
xchg
mov
and
pop
test
es
adc
add
mov
shlb
hlt
cmpb
adc
pop
xor
or
fs
mov
movsl
add
xchg
add
lock
movb
and
add
outsl
repz
ss
cmpb
add
sbb
scas
inc
pop
bound
pop
jge
lock
insl
test
mov
int
in
pop
daa
ss
adc
and
pusha
mov
jb
xchg
fsub
es
mov
jle
push
add
nop
pop
or
clc
adc
jb
fdivrp
ljmp
mov
adc
cmp
in
xchg
aaa
jno
pop
rolb
dec
aaa
nop
inc
xor
and
mov
and
jns
popf
push
push
std
pop
ficoms
cmp
or
jg
cmc
test
outsl
mov
push
mov
xor
lock
out
adc
inc
or
test
movsb
dec
roll
outsb
or
mov
pop
shlb
adc
cmp
incb
sti
adc
mov
jno
jmp
lds
jp
out
mov
imul
or
sahf
cs
repnz
outsb
enter
clc
mov
gs
pop
mul
iret
cmp
sub
and
inc
push
imul
xchg
rorl
sbb
fsubs
arpl
cmp
sub
mov
dec
xchg
insl
sub
xchg
cmp
push
pop
jns
in
nop
sbb
out
stos
pop
adc
mov
sbb
inc
leave
paddb
and
int3
push
shrl
sub
call
arpl
sbb
imul
les
dec
rep
negl
sbb
dec
mov
int
sbb
add
icebp
lret
push
mov
sbb
push
sbb
aam
int3
aas
lock
into
rcll
pop
cs
dec
movsb
loope
mov
push
xchg
sbbb
es
sbbb
cmpl
cmpsl
xchg
dec
push
push
bound
enter
push
xchg
aaa
and
cmpsl
cmp
jns
rolb
aaa
pop
cmc
or
aaa
push
dec
lcall
sarl
outsl
jb
add
pop
cmp
dec
andb
sub
or
stos
mov
adc
out
adc
shll
jbe
movsb
js
shrb
cld
add
in
push
ljmp
dec
adc
dec
repnz
adc
cs
jnp
cli
sarb
dec
repnz
rorb
sbb
aaa
xchg
adc
popf
pop
mov
lea
ss
je
lock
mov
test
test
pop
or
sub
cmp
inc
pusha
mov
movsl
mov
pop
push
popf
pop
sub
lods
lcall
outsl
xchg
popa
and
push
sbbl
call
mov
das
cmpl
ljmp
xchg
push
lret
push
jmp
push
sbb
xor
flds
into
cmpsl
sahf
stos
jge
arpl
jp
dec
xor
mov
sbb
adc
or
insl
shrl
pop
rolb
and
sbb
mov
cltd
push
fwait
mov
add
outsl
stc
dec
jg
test
popl
stos
add
sbbb
mov
or
mov
mov
ds
cmc
and
subb
adc
fxam
mov
lods
jmp
mov
aas
jg
popf
inc
pop
sbb
add
sti
in
imul
inc
push
dec
stc
lea
mov
and
lods
leave
mov
nop
adc
aas
das
jmp
adc
jmp
push
mov
ret
inc
js
add
cmp
sbb
pop
xchg
or
and
xchg
mov
push
cmpsl
xchg
mov
aaa
fistpl
fildl
pop
shl
xchg
sbb
aas
data16
bound
loopne
int3
push
push
sbb
sbb
sbb
in
stc
jmp
jne
push
mov
stos
lea
push
incl
dec
movsb
xor
inc
push
jae
xchg
daa
dec
sbb
int3
push
add
mov
push
inc
and
inc
inc
les
pop
loopne
mov
cmp
xlat
jno
mov
xchg
js
dec
cs
rorb
imul
gs
jmp
in
mov
faddl
daa
daa
dec
cmpsl
inc
test
mov
cmp
pop
mov
add
cmpsl
adc
cs
cmp
jns
xlat
ljmp
fwait
and
fidivs
cmp
mov
lock
loopne
nop
aaa
es
fnstenv
add
sbb
push
sub
out
sbb
shll
out
scas
cmpsl
mov
in
or
sbb
adc
bound
mov
jb
adc
arpl
jo
nop
scas
iret
lds
xor
int
pop
xchg
mov
dec
add
push
cs
js
movsb
or
test
dec
rclb
inc
xlat
inc
xchg
push
and
inc
test
adc
sub
mov
aam
scas
lds
testb
dec
ja
test
mov
ret
or
sbb
adc
ds
inc
fadds
aad
xor
push
jecxz
xchg
cmp
leave
orb
cmp
mov
insb
aad
rcrb
test
lods
mov
mov
jbe
std
cmp
pop
lock
sbb
sbb
jmp
mov
mov
lock
push
hlt
push
icebp
cmpsb
movsb
lods
pop
sub
mov
fnstenv
or
xlat
push
and
add
subb
add
in
xor
jecxz
and
jg
jne
gs
js
push
sar
xchg
cmpsb
xor
imul
cli
mov
rol
adc
sahf
jle
sbb
xchg
ret
push
xchg
int3
xchg
aas
dec
cmp
mov
inc
ljmp
repnz
mov
ret
fcom
push
mov
test
xchg
pop
xchg
loopne
and
jbe
stos
inc
mov
out
and
gs
jne
into
pop
mov
push
push
and
stos
sbb
mov
jns
insl
jecxz
pop
jb
popf
rclb
cmp
imul
jecxz
rsqrtps
xchg
jl
mov
xchg
ljmp
aad
add
lret
xlat
idivl
gs
jecxz
aaa
sti
sbb
add
pusha
iret
stos
cli
aas
or
pushf
jns
in
sbb
je
inc
cmpsl
lock
inc
jmp
jae
js
sbb
sbb
push
hlt
mov
pop
call
fpatan
jbe
out
xchg
and
or
js
test
repnz
add
jmp
mov
mov
testl
sub
imul
and
xchg
mov
jne
std
insl
lahf
and
xchg
and
jae
mov
add
sub
decl
stos
mov
lods
shrb
cmpsl
movl
outsb
jecxz
xorl
xor
aaa
das
or
cmc
popf
push
sahf
ljmp
out
jae
sti
aad
mov
hlt
ja
scas
dec
inc
imul
iret
popf
and
push
sub
cs
mov
mov
addb
arpl
mov
jmp
and
stc
mov
push
lret
adc
repnz
mov
xor
add
mull
mov
stc
and
add
sar
inc
pop
mov
pop
mov
and
notb
ss
adc
jmp
pop
stos
lcall
cld
outsl
fiadds
clc
mov
iret
cmpl
jo
js
push
xchg
in
and
outsb
push
js
add
mov
cld
mov
mov
cli
mov
movsl
push
ret
fwait
mov
xchg
or
stos
fnsave
insl
pop
push
bound
popf
in
daa
and
add
lods
adc
ret
dec
cmp
jge
stos
mov
jg
adc
scas
cltd
mov
inc
xchg
sarl
inc
cmpl
cltd
dec
fldl
inc
push
pop
xor
jp
insb
sub
outsl
jp
pop
add
mov
arpl
packuswb
ds
cwtl
mov
fstl
test
aas
adc
stos
lret
stc
inc
mov
cs
sbb
xor
bound
fmuls
jle
subb
ds
mov
mov
mov
scas
arpl
popa
push
fs
cmpb
sub
rol
sti
push
mov
out
dec
repnz
pop
aaa
inc
mov
and
mov
pop
dec
jecxz
jg
xchg
xchg
sub
pusha
insb
out
dec
mov
mov
outsl
out
aam
mov
and
and
mov
imul
cmc
cmp
das
cld
lret
dec
aas
mov
sub
icebp
mov
xor
int
stos
iret
or
sahf
dec
fbstp
adc
jp
mov
mov
dec
inc
sub
jg
popf
pop
sub
lods
mov
sbb
mov
stos
stc
jo
fadds
test
jns
scas
jns
fnsave
jl
int3
ds
sbb
cmp
pop
cmp
pop
jmp
and
adc
pop
data16
cmp
pop
outsb
ljmp
fxtract
pop
andb
xchg
jge
mov
scas
mov
jbe
mov
or
mov
pop
pop
fcompl
and
popf
mov
fs
or
pop
sub
insb
xor
inc
cmp
sub
outsb
mov
hlt
xlat
in
fidivs
pop
fstl
adc
or
inc
jle
jmp
fsubr
jno
or
stos
jmp
mov
repnz
mov
adc
movb
mov
rcr
ret
andl
inc
cld
sbb
aad
dec
fwait
inc
sbb
inc
push
mov
cs
cmpsl
xlat
xchg
out
push
and
add
push
push
inc
mov
shrb
pop
xor
sbb
aad
test
jne
movsb
xor
mov
cmc
xchg
stos
pop
in
hlt
mov
push
call
movsb
out
ja
jb
adc
jecxz
lcall
movsb
inc
outsl
das
int
pop
shlb
mov
call
dec
inc
dec
mov
hlt
test
jmp
pop
jp
dec
movsb
dec
xchg
inc
cmp
cmp
pushf
test
pop
mov
push
jecxz
loopne
fwait
cmp
mov
adc
mov
sbbb
mov
fbld
shll
mov
mov
cmc
in
xchg
cli
addr16
mov
mov
pusha
cld
pop
bound
fldcw
push
test
inc
lret
jp
mov
lds
mov
add
inc
push
add
jp
inc
in
lcall
ds
mov
jmp
dec
insb
scas
mov
sbb
inc
aad
and
ss
and
adc
mov
ss
mov
gs
push
fcoml
add
dec
ja
loop
push
incl
fstps
insl
in
shrl
test
test
push
dec
mov
adc
dec
sub
dec
pop
fdivs
push
dec
dec
mov
jl
mov
adc
push
jne
test
mov
mov
jg
bound
or
jge
and
inc
lock
jmp
and
mov
repz
xchg
lea
xor
sahf
fld
sub
mov
repnz
pop
int
push
jae
pop
adc
mov
push
jns
es
in
hlt
jge
pop
in
mov
in
cmpsl
sub
jnp
pop
sub
xchg
adc
test
jmp
lds
add
lahf
addr16
dec
add
push
movsl
and
xor
inc
leave
sbb
lods
inc
and
mov
push
cmc
xchg
arpl
cmp
add
xchg
sbb
xchg
sbb
push
add
jns
fnstenv
mov
aaa
enter
sub
jmp
or
mov
scas
xchg
jp
loop
mov
arpl
or
je
pop
int
fs
fadd
cmp
jmp
xchg
test
sbb
cmp
sub
xorl
cmp
inc
scas
dec
inc
rol
sarl
pop
pop
popf
enter
scas
cld
outsb
in
or
jg
inc
setl
mov
fwait
jo
mov
repz
push
jge
pop
aam
inc
pop
pop
insl
repnz
cmp
jg
fisttpll
mov
icebp
int3
push
mov
and
push
add
mov
lods
or
fldenv
jmp
mov
push
lahf
dec
mov
mov
lret
and
adc
stc
addb
leave
pop
popf
outsl
and
ss
mov
movsl
icebp
mov
or
mov
in
pop
dec
add
xchg
jmp
xor
push
daa
push
cmpsb
push
fidivrs
dec
jmp
xchg
imulb
xchg
push
js
mov
lock
call
out
dec
loopne
pop
imul
add
aas
pop
dec
lcall
cld
mov
mov
dec
mov
outsl
push
cmpsb
adc
mov
mov
test
pop
mov
mov
fidivl
adc
cmp
dec
inc
and
pushf
gs
shrb
adc
mov
clc
pshufw
fstl
or
cmpsb
adc
das
sbb
push
iret
das
daa
pop
cmp
in
repnz
test
loopne
cmp
sub
mov
sbb
dec
push
jne
adc
test
adcb
push
adc
filds
push
adc
xor
mov
call
insb
sahf
xchg
shrb
cs
push
dec
push
das
lods
or
scas
sub
xor
jbe
jecxz
mov
mov
sub
rclb
push
push
inc
sarl
pushw
cli
cmp
movsl
sbb
lea
and
push
das
jl
leave
rdtsc
cmp
jg
xchg
dec
pop
repnz
sti
or
mov
push
into
enter
stc
cmp
jp
outsb
push
cmp
or
stc
pop
sbb
addr16
pop
rcl
jp
dec
pop
lock
in
out
in
add
lods
int
adc
xchg
xchg
je
icebp
outsb
sbb
mov
adc
cs
into
mov
jmp
cltd
pop
stc
xchg
push
imul
xor
inc
add
rcrb
fnsaves
pop
shlb
scas
push
mov
es
and
aam
addr16
push
mov
jecxz
jno
addr16
mov
pop
and
data16
insb
mov
and
rorb
cmc
cld
xor
shll
mov
lret
jmp
xchg
addr16
xchg
testl
and
fwait
xchg
mov
push
cmpsl
bound
es
cld
stc
lods
sub
hlt
lret
or
dec
jae
mov
sub
scas
cmp
imul
in
mov
jp
sub
lret
pop
cmpsb
out
out
das
sub
and
cmpsb
add
orb
mov
int
mov
or
push
in
add
sub
push
dec
jae
xor
fists
and
test
scas
mov
dec
jae
mov
push
fildll
xchg
lds
or
jb
mov
arpl
rclb
lock
xchg
sarl
jo
cmp
subb
jg
std
arpl
dec
lea
testl
sbb
into
inc
mov
cmpl
inc
lods
fcmovbe
je
fdivs
je
out
push
lods
jmp
mov
stos
add
inc
mul
adc
shlb
test
div
push
mov
or
ss
pushf
mov
in
addr16
add
xchg
sub
ret
orb
mov
scas
pop
sbb
push
inc
push
add
xor
jb
fisttps
mov
int
add
or
stc
loope
mov
into
les
ret
dec
js
mov
cli
xchg
mov
aaa
ror
inc
pop
jmp
cmp
cwtl
dec
lds
popf
jns
mov
das
jg
jo
inc
dec
lcall
dec
in
dec
mov
imul
cmpb
sub
mov
or
sbb
pop
and
movl
xor
push
lea
inc
repnz
mov
jmp
adc
or
and
pop
fstps
jp
mov
sbb
push
xchg
mov
daa
dec
or
mov
sbb
popa
aad
xchg
ror
fcomps
lret
out
xchg
repnz
lahf
mov
test
jge
inc
push
xchg
cmpl
test
push
and
scas
jp
leave
ja
fbstp
imull
push
pop
nop
in
inc
jg
into
in
mov
das
push
js
cmp
add
xchg
leave
xor
stos
ret
or
add
cmp
sbb
mov
leave
fdivrs
scas
sub
fiaddl
ljmp
sub
shlb
jae
jb
jb
push
and
imul
outsl
in
arpl
pop
fidivrl
aas
or
loope
xor
aam
mov
clc
dec
push
lock
loopne
pop
sub
jnp
cmpsl
xchg
repz
xchg
push
xchg
push
jb
mov
push
pop
and
dec
sbb
mov
dec
dec
add
std
xorb
or
mov
sub
cmc
add
stos
mov
sub
fsubrs
pop
push
outsl
pushf
cld
loop
add
loopne
sti
jbe
cmpsb
lods
gs
push
dec
adc
enter
mov
dec
aad
nop
push
mov
stc
xchg
testb
pop
loope
outsb
orl
aaa
xchg
add
add
dec
dec
movsb
sbb
addl
jnp
pop
push
fs
xchg
leave
in
lahf
aas
hlt
fdivr
fwait
mov
push
cmpsb
std
mov
xchg
test
xor
fisttpll
insl
mov
cmp
xchg
sarb
push
insl
rcll
popa
pop
adc
fidivrs
pop
push
imul
pop
or
cwtl
rcrb
fs
inc
push
fsubl
push
aam
mov
sub
outsb
jecxz
roll
rorb
push
push
jp
push
mov
out
out
adc
dec
mov
and
outsb
bound
mov
sub
int3
and
cli
decl
ljmp
adc
aad
jno
aaa
mov
add
loope
cmp
loopne
inc
loop
push
loope
lods
inc
pop
nop
lcall
sub
outsb
cmp
push
xor
stos
scas
jo
cltd
mov
es
cmpsl
xchg
cmpsb
int3
mov
in
in
cmpsb
or
insb
nop
fwait
shlb
test
and
pop
xor
mov
xor
jl
out
mov
es
ds
outsb
xchg
lds
and
popa
inc
dec
cmpsb
push
cmp
cmp
mov
mov
andl
add
mov
pusha
les
pop
inc
jp
into
sarl
xchg
mov
jl
imul
jl
push
imul
adc
enter
xor
jo
and
sub
pop
cltd
add
pop
xorb
pop
jne
cltd
inc
sahf
lods
shll
sbb
jge
ficomps
cmp
push
fidivs
icebp
xor
movsb
jne
insb
ror
lods
aas
xor
cmp
sti
mov
iret
repnz
pusha
int3
movsl
in
popa
test
test
arpl
xchg
mov
cmp
das
cld
cmp
fwait
int
aad
sbb
xchg
iret
dec
xor
mov
adc
lods
sub
dec
mov
sbb
shll
mov
repnz
rcll
mov
leave
xlat
xchg
sub
add
leave
test
mov
xchg
xchg
nop
rcrb
xor
jb
add
mov
data16
xor
xchg
je
jle
jno
int
mov
sub
sbb
inc
in
ljmp
out
pop
mov
inc
clc
or
test
mov
jno
sub
and
adc
xor
push
push
mov
out
xlat
les
lahf
sub
imul
add
cmp
pop
pop
jne
jns
mov
mov
or
push
ficomps
pop
popa
sbb
call
sti
pop
sahf
call
ja
mov
orb
sbb
sbb
jmp
das
sbb
and
fildll
mov
xchg
scas
adc
push
mov
lcall
lds
lea
mov
stos
lock
mov
and
sub
add
sub
loope
lcall
adc
sbb
push
cli
notb
aam
xchg
xchg
movb
pop
fstps
sbb
outsb
fsubrp
cli
cld
mov
adc
jno
adc
sbb
xor
out
xchg
push
ret
fcmovnu
rcll
sub
xor
in
mov
cmp
in
jle
xchg
cmp
sub
mov
adc
shll
xchg
push
andb
jmp
scas
adc
movsb
fimull
mov
jp
inc
or
xor
dec
or
daa
xor
sti
add
mov
xlat
insb
mov
mov
stos
pop
frstor
dec
sbb
ds
xchg
push
sbb
jecxz
insb
out
pop
lods
aaa
sbb
fsts
jg
out
sti
imul
out
mov
mov
adc
js
mov
jae
jge
fmull
mov
dec
stos
xchg
fidivl
xor
dec
dec
cmpsb
adc
cs
stc
cmc
xor
movb
cltd
mov
sbb
stos
xor
sub
into
push
inc
jge
jge
test
aad
mov
shrl
sub
pop
and
ja
lods
int
xchg
mov
cmc
stos
psubw
cmpsb
rcll
fwait
push
mov
mov
and
int3
test
int3
imul
ret
subb
mov
into
jg
cmp
popa
jne
arpl
xchg
inc
cli
lcall
mov
xchg
sub
es
jns
jmp
sub
cmp
ss
aaa
adc
pop
rorl
and
out
and
mov
push
idivb
data16
xchg
add
xor
cmc
dec
and
test
mov
push
fwait
cld
sbbb
xchg
int
sub
outsb
dec
jmp
mov
out
sarl
push
push
mov
popf
inc
sub
lahf
in
sbb
es
cwtl
adc
jnp
jbe
sub
adc
popa
push
and
mov
repz
adc
dec
outsb
dec
mov
mov
jo
cmp
repnz
shll
lds
inc
scas
dec
pusha
mov
imul
cmp
rorl
fwait
je
add
rcll
fwait
mov
push
jno
adc
sub
inc
aaa
sti
xchg
jo
fdiv
fidivrl
pop
or
mov
inc
mov
pop
dec
mov
inc
pop
ljmp
mov
lcall
loopne
adc
sub
push
push
push
add
stos
sbb
fcoms
xor
sub
lret
ds
pop
xchg
enter
xchg
jle
mov
dec
insb
mov
ficompl
and
fcomps
jns
push
dec
shlb
and
in
cmpsl
xorl
fnstenv
mov
bnd
enter
in
jne
mov
xchg
mov
bound
cmp
stc
cmp
jge
or
jno
pop
cmp
push
cmp
loope
into
int3
sbb
inc
aaa
loopne
pop
arpl
xchg
mov
push
cli
mov
pop
sbb
mov
cmc
popa
popa
cmp
add
cltd
inc
jo
sbb
pop
pop
inc
push
mov
adc
add
icebp
pop
adc
lds
in
add
sub
or
cmpsb
and
icebp
aam
out
sbb
fucomi
dec
mov
sarb
sarl
cltd
mov
xorl
mov
fcmovne
dec
xchg
dec
push
and
sub
ret
lea
sti
test
dec
lods
mov
push
insl
push
push
hlt
roll
stos
pop
jecxz
gs
bound
aam
repnz
int
cmp
outsl
in
cwtl
xchg
fucomip
and
xor
idivl
mov
fisubrs
loope
je
and
aas
insl
cmp
xchg
aas
rcrb
enter
lods
add
aas
test
cmc
cwtl
aaa
lock
push
mov
clc
inc
mov
mov
sbb
push
pop
jb
mov
or
cmp
popf
pop
int
xchg
cmpsl
add
addr16
out
mov
xor
and
sbb
outsb
sub
ret
sbb
jge
in
insb
sbb
lret
fwait
xchg
adc
cwtl
std
mull
arpl
xchg
dec
xchg
push
jo
insb
incb
out
adcb
into
mov
push
cmp
pop
sbb
fs
repz
clc
mov
dec
mov
xchg
sub
lcall
roll
mov
jmp
jge
sbb
cmp
dec
cmpsb
enter
pop
cltd
xchg
mov
testb
or
adc
cmp
adc
mov
call
sbb
ja
cmp
ret
loop
sub
in
mov
push
js
leave
aas
arpl
add
push
js
orl
lds
sbb
push
stc
or
cmpsb
or
xor
int
bound
inc
adc
pusha
rcrb
stos
stos
ret
jge
push
dec
lds
jb
jecxz
mov
fstps
sti
stc
xchg
js
sbb
add
and
mov
jnp
es
stc
out
aad
leave
adc
cmp
decb
inc
push
or
dec
mov
pop
mov
outsl
mov
add
mov
xchg
sub
add
cli
cmp
shl
ret
fsubs
pusha
in
add
dec
xchg
shlb
dec
lcall
sub
fldl
test
pop
or
jp
and
shll
dec
stos
loope
jo
push
mov
lea
loop
cmp
mov
mov
bound
es
mov
jbe
stos
cld
ja
inc
push
ja
mov
dec
cmp
mov
pop
out
cmp
movsl
test
outsl
adc
popf
imul
fsts
clc
iret
incl
dec
lret
stos
mov
xchg
sbb
jle
jbe
aam
jg
and
add
aaa
fldenv
aaa
sub
loopne
sbbl
fcomps
sub
pop
xorb
jae
inc
dec
cmp
mov
test
notb
out
movsl
lcall
scas
fisttpll
test
icebp
xor
mov
fwait
mov
cltd
jle
shlb
loopne
sub
outsl
ret
cmp
jbe
mov
out
sbb
mov
mov
inc
dec
xlat
fcoml
movsl
pop
pusha
loope
add
lcall
dec
stos
mov
push
lods
xchg
push
inc
xor
mov
mov
mov
aas
push
aam
loope
mov
dec
clc
fiaddl
xchg
sti
sub
in
and
je
test
inc
mov
mov
add
adc
ds
jmp
cmc
push
out
mov
leave
push
mov
mov
enter
mov
enter
adc
aam
rcll
xchg
xchg
pop
sbb
push
icebp
aad
xchg
jbe
test
mov
sbb
and
test
inc
xchg
push
or
call
sub
fsubrs
mov
and
ret
sbb
daa
ljmp
and
pop
scas
cmp
das
mov
int3
xchg
fildll
pop
xchg
scas
insb
adc
push
mov
or
ret
arpl
or
ds
test
push
mov
repnz
inc
dec
outsb
cmp
int
xchg
dec
scas
inc
push
hlt
and
arpl
cmp
xchg
imul
shl
test
lods
test
xor
stos
xor
stos
xor
mov
mov
and
call
rol
xchg
loopne
std
cmp
sbb
mov
rcll
jl
test
mov
daa
aaa
xchg
daa
push
lret
push
stc
pop
inc
aam
add
cmp
pusha
nop
cs
jmp
push
mov
dec
mov
lahf
or
inc
mov
dec
arpl
jae
aaa
out
mov
std
negb
fwait
cltd
fwait
mov
pop
aas
mov
js
and
inc
movl
mov
scas
push
xorb
out
es
xchg
ja
loope
sub
or
insl
dec
xor
lods
jo
pusha
flds
sub
and
daa
test
sbb
inc
xchg
call
lcall
ret
dec
ror
add
jle
out
jg
call
ljmp
loop
jb
xor
push
flds
inc
and
test
lea
and
jmp
xor
test
lods
pop
ficompl
lods
icebp
cltd
jp
in
xchg
cmp
bound
test
jp
in
inc
cli
loop
sub
push
shr
jne
jns
add
xor
into
xor
lcall
sub
pop
cmp
push
data16
adcl
and
xor
dec
fcomip
pmaddwd
jne
icebp
jae
fiaddl
aas
or
lcall
std
inc
jmp
inc
mov
jb
lea
fistps
icebp
push
jne
imul
gs
cmp
jecxz
gs
pop
rcll
pushf
adc
xlat
iret
adc
mov
fadds
int
mov
dec
mov
inc
out
fs
sub
mov
hlt
insb
lods
int
subl
push
add
test
mov
mov
jne
into
into
cmp
test
je
cmp
adc
cmp
mov
test
or
lea
and
mov
shlb
or
mov
or
faddp
cli
xor
or
dec
pop
mov
add
dec
mov
fsubrl
in
rcl
mov
imul
dec
mov
sub
out
stc
lret
arpl
aaa
addr16
and
packssdw
adc
leave
mov
rorl
enter
outsl
jecxz
lods
fnsave
jno
push
pop
mov
pop
addr16
and
xchg
scas
adc
ss
stos
sbb
pop
fadds
aaa
insb
imul
or
add
mov
lret
pop
xor
lret
mov
neg
in
fsts
in
cltd
call
aas
dec
cmc
imul
mov
es
jno
fwait
xchg
adc
aad
adc
cmovle
xchg
fldcw
rolb
notl
jecxz
inc
sbb
leave
mov
shrl
sub
iret
testl
inc
inc
push
inc
or
and
jbe
mov
in
loop
add
repnz
repz
xchg
stos
push
mov
jae
push
data16
inc
outsb
jnp
cmp
jnp
lret
std
lret
insb
divl
or
movsb
inc
arpl
xor
add
jg
lret
push
ja
test
xchg
mov
add
fiaddl
int3
pop
sarb
mov
add
dec
loopne
and
aas
aad
movsb
sahf
ds
ffreep
adc
dec
xlat
push
test
clc
mov
mov
stos
mov
push
lret
lds
pop
sbb
mov
out
inc
pop
rcll
xchg
out
scas
push
fistpl
jge
jmp
mov
call
xchg
outsl
out
inc
mov
push
cmp
dec
lods
scas
push
imul
inc
push
movsl
push
lret
out
mov
sbb
popl
cmpsl
sub
lea
xor
aaa
cs
or
push
pop
push
lds
sbb
mov
mov
or
sti
sarb
adc
aaa
xchg
fs
lret
push
push
xlat
mov
fwait
add
jne
shlb
or
repnz
adc
mov
popa
inc
testb
les
dec
xchg
cltd
cmp
cmp
jns,pt
rorb
or
inc
inc
hlt
mov
mov
fdivrs
xchg
jg
mov
stc
inc
mov
rol
cwtl
xchg
test
fucomip
je
arpl
adcl
mov
outsb
addr16
jge
out
jnp
inc
cmp
fldlg2
push
sti
mov
dec
inc
mov
pop
xor
jle
sarl
or
jg
inc
leave
icebp
fsubrp
out
decb
outsl
adc
add
scas
dec
outsl
push
mov
cmp
xchg
xchg
mull
xchg
push
and
ret
dec
in
pushf
sbb
repz
into
adc
es
decb
sarb
mov
repz
mov
stos
cli
sub
pop
mov
rcr
cwtl
or
int
movsl
in
icebp
das
popf
adc
sbb
ret
out
push
hlt
aad
mov
inc
stos
dec
jno
xchg
inc
xchg
inc
mov
rclb
icebp
push
sti
or
mov
mov
insl
jp
xor
or
mov
xchg
sub
sub
or
pop
xchg
lea
sub
fsubl
and
out
jmp
mov
data16
mov
and
movsl
out
push
adcl
or
xor
cmp
push
std
stc
lock
adc
movsl
loopne
aad
aaa
fdivrp
ds
test
arpl
mov
icebp
push
addb
add
fmull
jne
xchg
pop
cli
add
bound
pop
adc
sub
cmc
mov
and
sub
popa
inc
in
das
jge
and
xor
sbb
adc
cli
je
and
fistpll
cli
dec
nop
ret
loopne
lret
leave
neg
repz
jns
mov
dec
mov
sbb
and
das
out
popf
jecxz
out
xchg
cwtl
popa
imul
mov
mov
adc
cmp
popf
dec
cltd
je
xchg
cli
subb
add
xchg
add
das
pop
ret
and
pop
and
mov
std
aam
push
fcmovnbe
les
repz
out
popa
and
sub
je
mov
test
in
jns
pop
into
hlt
adc
inc
xor
sbbl
hlt
dec
sub
sub
inc
repnz
inc
xchg
inc
in
sbb
push
leave
fs
in
iret
jo
cld
into
stc
scas
lods
clc
mov
lret
mov
bound
mov
in
dec
lods
pop
mov
addr16
xor
fildll
xor
cmc
rclb
insb
pop
or
sbb
push
mov
sub
dec
pop
xchg
popf
cltd
jmp
pop
pusha
rcrb
movsb
pop
sub
xor
push
push
push
push
pcmpeqd
or
aaa
out
loopne
sub
cmc
jnp
inc
lcall
jae
sbb
push
outsb
xchg
cmc
inc
pushf
or
xor
mov
testl
clc
inc
xchg
lods
movsl
mov
andl
and
push
movsb
fmul
xchg
sbb
xchg
push
mov
fcomps
notl
ret
and
sahf
loop
loope
movsb
mov
fcompl
ss
fcmovu
xchg
cmp
cld
fdiv
jge
xchg
push
xlat
in
push
jle
pop
gs
cmp
push
sub
push
jmp
stos
push
mov
mov
jmp
mov
pop
or
dec
push
sub
ljmp
fwait
ljmp
inc
jae
cmc
dec
cmp
aaa
hlt
dec
shrb
fcoms
or
pusha
sub
mov
mov
mov
cmpsl
loope
push
jo
sub
aad
pop
aam
push
mov
iret
add
mov
cli
scas
xorb
adc
sub
add
mov
pop
inc
lods
inc
pop
nop
xor
fs
and
pop
or
stos
and
and
call
das
or
jl
das
add
rolb
icebp
popa
push
inc
mov
jbe
mov
mov
sub
test
sub
stos
test
cmp
xor
xchg
dec
fldenv
cld
out
pushf
xor
sbb
cli
inc
mov
fst
adc
sub
mov
in
pushf
add
pop
movsl
rol
adcw
testb
pop
jg
add
inc
lahf
push
lock
fnstsw
loopne
cli
cmpsl
addr16
adc
sub
pop
inc
fnstcw
push
fwait
sbb
mov
ror
stc
sti
sbb
pop
enter
pop
push
scas
mov
pop
out
sti
dec
push
pop
cmc
lcall
stos
mov
mov
push
out
xor
pushf
mov
xor
xor
inc
movsb
shlb
imul
xor
push
fbstp
imul
cmp
adc
push
addl
lds
in
pop
or
mov
andl
lcall
pop
pop
repnz
das
xor
cltd
cltd
add
sbb
ret
test
adc
pop
add
imul
push
or
sub
out
fsin
popf
int3
dec
test
scas
popf
jmp
std
sbb
insl
jle
fsub
sahf
mov
stos
orl
shl
std
outsb
ljmp
aad
lods
orl
pop
fbstp
cmp
mov
sub
testl
jno
mov
cmp
mov
xor
jp
cmc
rorl
xor
enter
insb
mov
sahf
std
insl
mov
lcall
sbb
pop
mov
insb
bsr
leave
test
addr16
pop
scas
xchg
inc
das
and
shll
xor
out
dec
fcomip
mov
out
jg
pop
es
mov
rcl
mov
test
mov
cmp
es
imull
mov
xchg
ja
inc
stc
lock
into
jp
push
dec
fnstsw
ja
sbb
daa
es
ffreep
out
scas
pop
stos
push
or
jb
mov
gs
mov
aad
call
hlt
outsb
pushf
and
cmp
mov
sub
stc
push
dec
roll
xchg
sbb
mov
cld
mov
or
and
adc
lods
pop
dec
sbb
sbb
push
or
fstl
shlb
sbb
dec
aam
add
daa
dec
jg
mov
sbb
jl
scas
leave
mov
daa
pushf
insb
mull
xchg
pop
cmp
ret
insb
pop
lock
lret
add
stos
inc
out
fnstcw
aam
or
and
or
jp
sub
jle
mov
test
enter
cvttps2pi
inc
inc
ja
sahf
xchg
outsb
xor
pusha
stos
outsb
int
xlat
js
repz
std
adc
push
ss
scas
lods
jns
or
add
mov
lahf
and
sbb
hlt
enter
pop
push
jle
out
cli
stc
test
pop
and
mov
ret
int
mov
adc
push
inc
push
adc
into
xchg
lret
push
cmp
test
inc
mov
xor
int
divb
mov
subl
lods
sub
imul
cwtl
xor
cmovg
mov
out
xor
cs
lods
dec
jge
pop
fdivrs
mov
adc
mov
subb
cmp
dec
fdivr
in
mov
in
insl
fdivrl
dec
sbb
and
notb
vmread
sarl
adc
mov
or
addl
mov
test
cmp
es
mov
mov
inc
mov
hlt
insl
sbb
enter
push
imul
mov
call
mov
jg
in
fistpl
xchg
stos
sarl
xlat
mov
in
repnz
mov
data16
ds
push
sbb
and
push
adc
dec
xchg
gs
push
dec
lahf
fists
adc
jecxz
pop
push
mov
addr16
push
into
in
jo
nop
loope
jns
cmp
sahf
mov
stos
jo
outsl
stos
push
pop
fisttpl
xchg
dec
loopne,pt
pop
andb
fcompl
jecxz
cmpsb
and
jge
mov
bound
mov
sub
nop
sbb
push
nop
movsb
jb
mov
mov
push
sub
popf
rclb
sbb
jo
lcall
insl
pop
mov
inc
push
sbb
xchg
hlt
cltd
icebp
bound
dec
xchg
sbb
pop
fadds
xor
sub
lds
push
shlb
mov
push
std
ss
sbb
or
pop
and
fidivl
je
jp
mov
dec
rorl
mov
out
cltd
je
out
repz
dec
mov
jne
mov
mov
shlb
insb
lret
rorl
mov
push
outsb
sbb
icebp
bound
loopne
mov
pinsrw
scas
out
aas
movsb
int3
int
add
cwtl
ret
jne
inc
xor
cmp
cmp
pusha
and
cmp
jns
test
and
xor
into
dec
lods
lret
xor
and
in
fcoml
dec
jge
out
jno
div
dec
pop
ljmp
ds
add
ljmp
fmull
sub
cmc
imul
mov
aaa
jge
adc
jge
lods
xchg
push
push
jbe
es
cmp
jb
scas
pop
pop
inc
push
push
cmp
rep
dec
insl
leave
or
lock
imull
cwtl
dec
out
pop
pop
pusha
out
lahf
adcl
mov
inc
nop
or
jae
mov
out
mov
ds
rorl
cwtl
add
lods
jo
sbb
or
mov
subl
enter
jno
add
inc
test
out
xchg
mov
mov
std
call
pop
or
mov
sti
add
push
jecxz
lock
mov
in
sub
mov
mov
sti
jnp
mov
mov
das
dec
jl
push
lea
mov
lcall
adc
mov
mov
shrb
fisttpll
popa
in
ret
orb
sub
and
mov
or
jno
dec
ja
pop
push
xchg
lods
or
mov
int
mov
daa
cmpsl
push
or
hlt
inc
inc
scas
lods
lret
pusha
sub
sub
scas
enter
leave
jnp
movsb
xchg
leave
dec
lret
call
iret
inc
scas
sahf
jmp
pop
lds
xchg
in
xchg
es
out
in
pop
mov
scas
inc
dec
out
movsl
roll
mov
int
push
and
gs
xchg
push
adc
mov
jnp
hlt
insl
sbb
lods
icebp
or
out
popa
das
dec
mov
cmp
es
fldt
popf
xlat
adc
jl
add
rcll
sbb
dec
adc
fdivrs
dec
mov
jo
pop
test
mov
push
jno
in
ret
sub
dec
sbb
rolb
or
inc
in
ret
adc
push
or
in
jno
jae
mov
or
nop
xor
sub
adc
mov
xchg
js
pop
movl
xchg
outsb
shll
sbb
xchg
pop
inc
sub
jnp
xlat
enter
jb
jae
xor
hlt
cli
push
je
unpcklps
in
mov
push
popa
sub
jge
lret
adc
ss
xor
imul
sub
popa
xor
dec
pop
lds
stos
in
sbb
pop
xchg
loopne
or
jb
repz
jne
or
movsl
mov
lcall
push
adc
and
jmp
mov
out
fstpl
sub
push
push
stos
fistl
inc
sarb
xchg
test
dec
rol
int3
dec
call
xor
shll
dec
loope
or
jno
mov
iret
mov
pop
sub
imul
lahf
jecxz
sti
inc
mov
dec
mov
insb
jg
mov
es
lods
jo
sub
aad
cwtl
stos
push
nop
cld
insl
call
push
in
cmp
aad
in
out
mov
outsl
movsb
mov
sbb
out
or
cli
aas
in
es
sbb
push
mov
je
push
icebp
push
xchg
push
shrb
xor
mov
jns
das
fwait
adc
mov
cmp
cmpsb
lds
add
repz
call
mov
sbb
dec
test
shr
mov
rcpps
fs
push
cwtl
fimull
dec
mov
cmpsb
jp
arpl
or
into
cmpsl
mov
fsubr
jmp
mov
cmp
add
bound
lods
xchg
cmp
out
mov
je
sbb
addl
fdivrs
xchg
jge
mov
orb
mov
repz
jae
mov
cmp
push
add
mov
and
cli
xchg
xlat
mov
loop
outsb
out
push
and
xlat
loop
push
scas
subb
xor
cwtl
cwtl
cmp
rclb
push
cpuid
push
push
push
test
sbb
lock
adc
pop
js
addr16
loop
push
out
stos
xchg
lock
push
ror
mov
mov
mov
mov
add
sbb
adc
xchg
shll
test
jo
cmp
shrb
das
sub
mov
mov
push
loope
mov
mov
xchg
jbe
push
leave
mov
data16
push
mov
notb
mov
jle
dec
inc
and
cmp
inc
jg
andl
push
pop
div
in
pop
and
hlt
jp
jle
scas
data16
lods
xor
imul
ficoml
jg
shll
jl
ljmp
pushf
or
notl
test
andb
in
sbbl
mov
or
pop
xor
call
adcl
dec
lods
vsqrtsd
jmp
dec
out
jno
mov
xchg
jne
cs
cltd
ja
pop
push
or
cmp
inc
lret
add
cmpsb
push
push
sbb
lret
inc
subl
cmp
and
shl
pop
addr16
push
cmp
sub
push
adc
out
jl
out
xor
mov
pop
lea
cwtl
gs
jp
aas
call
es
mov
push
out
mov
sub
cli
into
mov
xchg
test
ljmp
stos
daa
xchg
call
add
sbb
hlt
sarl
enter
sbb
inc
cld
jmp
lea
stos
xchg
and
inc
push
push
cmp
lods
jg
dec
jae
test
xor
cmc
test
pop
loope
aaa
pop
cltd
add
lock
and
sarb
add
cltd
add
xor
inc
mov
adc
cmp
sub
in
arpl
call
mov
sbbb
mov
std
dec
repnz
js
xlat
icebp
mov
lods
pop
stos
out
xchg
in
fwait
test
jle
arpl
lock
xchg
dec
mov
or
xchg
imul
xchg
add
insb
jmp
out
das
or
lods
lret
fbld
test
mov
das
cmp
xor
nop
sbb
add
jne
rclb
inc
mov
lock
lods
xchg
jnp
jmp
adcl
pushf
xchg
mov
sahf
sub
imul
pop
xor
push
nop
lcall
fwait
mov
fcmovnbe
cmpsb
jbe
jmp
fisttpl
xchg
jg
das
xchg
arpl
sti
std
fistpl
test
addr16
out
cmp
sub
xchg
mov
sub
mov
adc
mov
sbb
mov
in
add
push
in
ljmp
and
stos
arpl
xchg
pushf
inc
mov
mov
sub
jg
jae
mov
sub
loop
sub
ja
lret
subb
iret
test
adc
jne
js
leave
stc
fimuls
jge
loopne
xor
adc
sub
xor
or
pop
daa
xchg
adc
dec
pop
arpl
or
gs
movsb
sbb
mov
sbb
mov
mov
pop
dec
test
and
dec
push
pop
fistpl
aas
sub
push
cmpsb
jmp
xor
fisubs
adc
push
xchg
insl
icebp
sbb
add
fcoms
std
movsl
cli
inc
xlat
fnstenv
mov
cmpsb
ss
mov
lcall
xlat
sbb
mov
pop
add
fistpl
mov
flds
bound
dec
sbb
cmp
bound
aaa
dec
imul
lcall
movsb
out
mov
cmp
xor
inc
stos
mov
adc
or
idivb
sub
jle
fadds
ds
sbb
mov
mov
sbb
mov
sbb
or
out
cmp
ret
and
dec
std
dec
cmp
add
popa
in
daa
ret
dec
jmp
pop
jno
mov
push
les
cmpb
adc
sbb
fwait
lds
movsb
iret
adc
out
or
fst
adc
jbe
aam
and
out
xorl
push
insl
lods
push
mov
mov
mov
fiaddl
shlb
shll
ficompl
out
xor
xchg
mov
pop
or
pop
mov
push
cmpsl
fucomip
fldcw
pop
sub
pop
popf
cmp
pop
cs
imul
mov
pop
pop
inc
pop
pop
jns
sub
movsl
mov
push
add
xor
push
push
fcomi
inc
or
outsb
fildl
push
inc
mov
stos
pop
mov
shlb
jg
je
hlt
rcpps
mov
mov
test
jne
xor
push
and
add
or
and
add
inc
add
xor
mov
filds
sbb
int
pushf
or
pop
pop
shrl
fists
mov
pop
je
mov
in
mov
cld
jae
test
subb
aas
push
adc
jl
cmp
xchg
mov
pop
inc
fmull
insl
mov
sar
arpl
ret
loope
or
cmp
push
jge
xor
mov
xchg
and
inc
xchg
jge
mov
jle
or
scas
add
clc
pop
in
imul
ret
lods
jmp
xor
xor
add
xchg
push
in
pop
js
sbb
mov
push
sub
dec
frndint
or
mov
out
test
fimuls
xor
test
inc
mov
pop
mov
jl
cmp
shll
cmp
sti
cld
pop
xor
cmpsl
es
mov
xchg
mov
lods
xor
mov
loop
je
loopne
jle
jnp
icebp
in
int3
cmp
sub
mov
call
mov
mov
adc
push
adc
sub
scas
adc
bound
jg
jo
fmulp
pop
outsl
fwait
add
pushf
into
jp
addl
inc
and
arpl
cmc
in
xchg
fs
xchg
loope
in
je
mov
pop
js
push
dec
in
add
cld
fcompl
jge
add
sbb
dec
rcll
outsl
xor
out
pushf
xor
ret
dec
popa
pop
repnz
mov
lret
out
xchg
aaa
and
xchg
icebp
mov
inc
jecxz
dec
loopne
adc
das
fdivrs
fistpll
sub
inc
call
lret
inc
sub
fs
ret
xchg
gs
jbe
inc
mov
xlat
mov
jle
aam
rcrb
faddp
and
inc
lea
mov
stc
inc
sub
jbe
ret
xor
cmp
mov
xorb
jns
fdivl
jne
stos
andl
ja
xchg
mov
inc
rcll
mov
test
add
push
inc
aas
and
sub
jg
stos
mov
add
iret
shrl
jge
pop
fwait
cmc
stc
adc
dec
cmp
shlb
push
loopne
sub
inc
repnz
mov
enter
jge
jg
dec
in
movsb
arpl
test
aam
add
imul
inc
push
aam
fdivr
and
popa
sbb
fsubs
inc
lcall
jnp
cltd
jmp
fstpl
sbb
outsl
cmp
adc
mov
jbe
and
sbb
sarl
mov
jne
inc
ss
dec
negb
pop
sti
jbe
fidivrl
mov
mov
mov
xchg
jge
mov
mov
inc
and
imul
sahf
mov
sub
data16
repnz
aas
pmaxub
stos
iret
scas
lret
mov
xor
xchg
push
xchg
fildll
xchg
divl
sbb
mov
pusha
mov
in
push
jge
jp
sub
pushf
xor
push
cmpsl
call
cmp
shrb
xchg
lret
xor
mov
jbe
loope
sbb
dec
mov
out
mov
fadd
inc
pop
into
pop
pusha
jge
or
lret
fdivrs
aaa
mov
xchg
fs
push
aam
pop
cmp
or
xchg
add
mov
adc
les
inc
jnp
push
inc
cmp
fstl
add
cli
or
adc
es
mov
add
popf
push
cltd
or
iret
pop
mov
in
mov
data16
aam
jge
xchg
outsl
xor
ss
arpl
adc
mov
lahf
xchg
push
jno
popa
push
xlat
loopne
vshufps
cmp
scas
push
shr
push
andl
scas
into
xor
cli
dec
nop
imul
popf
je
mov
xchg
pop
jmp
out
pop
das
push
rclb
jbe
mov
inc
lret
fnsave
xchg
and
ds
mov
shrb
rcll
push
out
push
daa
rorl
fucom
dec
mov
lods
fwait
pop
filds
or
mov
mov
lret
dec
and
cmpsb
int
fs
and
xor
cli
fs
jns
orl
or
jne
stos
push
push
jae
sbb
pushl
adc
cmp
cs
and
mov
les
sub
outsl
jb
into
cwtl
pop
push
fdivl
inc
mov
loopne
movsl
cmp
mov
sbb
jl
mov
dec
jp
leave
pop
out
inc
mov
mov
movsb
jbe
pop
mov
mov
and
aam
sbb
cld
int
xchg
mov
pop
in
ja
push
adc
das
pop
in
inc
pop
xor
mov
mov
or
icebp
pop
cli
aad
outsl
and
test
mov
or
loope
or
push
push
test
lock
in
loope
arpl
sbb
lods
pop
mov
es
cmp
fmull
addr16
pop
mov
pop
xor
sarb
mov
adc
loop
pop
push
shll
ror
and
sbb
adc
fstl
mov
sub
addr16
xlat
test
test
mov
insl
outsl
jle
sbb
xlat
leave
mov
mov
xchg
push
imul
scas
fcmove
pop
pop
movd
cmp
int3
outsb
stc
pop
notl
and
add
out
cmp
add
and
push
lcall
out
dec
lahf
xchg
fistl
mov
cmpsl
jge
jmp
or
pop
pop
leave
xor
daa
sub
inc
mov
mov
gs
mov
inc
cli
xchg
pusha
lods
sub
std
or
push
aad
lods
push
adc
xor
pop
cmc
sbb
popa
imul
cmpsl
xchg
ja
arpl
and
pushw
shr
xchg
add
add
call
cltd
arpl
cmp
pop
push
movsb
hlt
in
adc
loopne
cmc
jo
sub
pop
in
pushf
inc
shrb
movnti
cmpsb
addb
jle
sbb
jl
sbb
loopne
adcl
pop
fs
pop
daa
and
hlt
movsb
push
stos
pop
jnp
divl
lods
dec
jecxz
push
jmp
add
lods
mov
mov
shr
shll
cmp
pop
mov
mov
xor
out
daa
add
xor
lret
leave
jp
scas
lods
jb
stos
cmpsl
mov
jne
jl
out
fistpll
lret
loope
cmp
leave
push
and
sub
aad
mov
fsubs
mov
mov
mov
mov
fst
lret
inc
cmpsb
imul
pusha
adc
aam
es
jne
fstl
into
pop
push
cmc
lahf
push
mov
sub
lret
sbb
sbb
jo
mov
sbb
data16
inc
jne
sub
ret
sub
mov
not
mov
mov
mov
push
decb
pop
cltd
pop
sbb
pop
dec
mov
add
sbb
pop
mov
mov
push
pop
pop
and
fistpll
inc
ficoml
xchg
shrb
cmp
sub
not
out
pop
shl
addr16
sub
test
fidivs
in
push
in
push
adc
pop
sbb
sub
sahf
adc
movsb
repnz
scas
inc
cmc
mov
dec
and
lcall
nop
cmpsb
pop
rolb
stos
ret
scas
movsl
xor
movl
sbb
ret
mov
in
jnp
sub
mov
int
scas
xor
das
xchg
mov
push
xchg
xor
fiaddl
addr16
inc
push
xchg
cmp
mov
cmp
shll
and
or
js
call
loop
sarb
std
fisttpll
loopne
bound
jns
fbstp
mov
or
jb
and
sbb
rcll
cmc
xor
cli
mov
icebp
fsubl
push
and
loope
scas
movq
xorps
pop
push
mov
mov
mov
xchg
mov
cmpsb
test
fldenv
mov
push
int
es
ja
dec
sbb
adc
mov
mov
loop
xchg
mov
test
xchg
imul
mov
sahf
push
loopne
loop
mov
mov
scas
push
mov
add
and
in
xor
ljmp
and
inc
icebp
pop
in
sbb
mov
push
aad
fwait
cmpsl
pop
fdivrs
xchg
repnz
movsl
mov
movsl
sahf
sbb
mov
jle
jbe
hlt
and
popf
add
mov
push
mov
test
mov
mov
cmpsl
fdivrs
xor
mov
out
movsb
pop
dec
js
jl
inc
sub
mov
sahf
dec
push
out
rol
pop
sub
dec
push
mov
add
pop
adc
sahf
inc
jg
cmc
or
pop
xchg
imul
rolb
xor
addl
inc
sub
push
add
int3
popf
or
mov
addr16
clc
jae
push
dec
into
clc
inc
cld
dec
jl
scas
decb
mov
ss
lea
aaa
mov
mov
or
xchg
jp
adcb
xchg
sti
adc
aam
push
mov
sub
adc
ja
xor
xchg
jnp
aaa
cmp
mov
test
add
jle
addr16
xchg
call
bound
xchg
mov
mov
mov
mov
sarl
imulb
jp
in
lret
call
pusha
pop
fisttpll
xor
push
cmp
out
sub
out
add
std
rcll
mov
mov
es
icebp
inc
pop
rcrl
movsl
mov
test
push
outsb
scas
push
int3
lods
inc
ror
popa
mov
fldt
sbb
sbb
ljmp
out
fisubl
push
mov
aas
pop
xchg
adc
push
fistps
stos
fldcw
push
dec
call
mov
xchg
aas
jne
fsubl
cltd
movsl
xchg
lock
xor
or
pop
sahf
icebp
pop
leave
into
jl
cmp
daa
cltd
cld
or
lea
test
mov
push
ljmp
jae
pop
mov
popf
fcomi
add
lahf
dec
jns
mov
inc
icebp
sub
cltd
icebp
jg
pusha
mov
push
aas
sub
or
mov
repnz
pop
test
lea
dec
and
jge
mov
pop
xchg
fstps
adc
push
mov
into
in
jmp
lret
add
xchg
mov
dec
mov
push
or
sbb
push
repnz
adc
jnp
mov
add
xchg
jnp
sub
mov
mov
jo
test
or
xchg
or
xchg
bound
repnz
out
fnsave
sub
and
sub
sub
push
adc
aas
sar
out
cmp
jne
dec
mov
imul
and
fstpt
inc
mov
push
mov
aad
shr
xchg
adc
test
and
js
fisubl
xor
aas
in
jb
or
test
inc
cmp
pop
or
andl
es
add
adc
cmp
fldt
mov
inc
loopne
mov
push
sbb
pop
pushf
and
or
arpl
jle
and
loope
rcrl
aaa
in
test
jb
shrl
das
add
mov
push
out
jbe
xlat
sub
jns
jp
mov
push
cmp
rcrl
ret
mov
bound
inc
mov
xor
jle
jne
adc
dec
fsub
inc
mov
cmp
fiaddl
push
add
loopne
icebp
out
mov
pop
jbe
sbb
in
aaa
mov
mov
push
inc
pop
out
mov
mov
add
cmp
rol
xor
dec
sbb
xchg
xor
xchg
inc
sbb
pop
inc
je
and
idiv
xor
jmp
adc
clc
out
das
or
and
ds
jp
loope
fdivrl
add
pop
jp
call
xchg
cmp
xchg
cmp
mov
ds
movups
into
and
ret
imul
iret
sub
xchg
daa
popl
cwtl
adc
adc
into
movsl
data16
dec
lea
sub
lret
jne
fnstenv
pusha
mov
cwtl
fidivrs
jle
mov
mov
pop
mov
sub
clc
adc
nop
scas
fucom
lahf
mov
cmova
and
xchg
or
push
mov
push
cmp
sub
testb
jp
aas
mov
dec
cmp
inc
jne
movsb
fmul
out
outsb
and
adc
sbb
cltd
pop
push
call
fdiv
jmp
mov
in
lcall
xchg
out
mov
sub
lock
in
seta
aam
imul
dec
sbb
push
sbb
sbb
pop
sarl
mov
push
pop
lea
mov
imul
popa
xchg
mov
inc
enter
in
push
mov
mov
jo
lahf
int3
cmp
inc
jge
gs
mov
sar
stc
or
mov
push
mov
or
push
in
xor
sbb
je
out
and
lods
pop
xchg
jmp
cmp
data16
xor
pop
decb
es
orl
insl
cmpsb
cwtl
pushw
cmp
mov
rcrl
or
cs
adc
mov
outsl
inc
aam
pop
xor
mov
add
xor
inc
les
dec
les
inc
add
fimuls
inc
gs
jo
repz
iret
dec
sarl
in
cmp
insl
adc
jp
xchg
lahf
ja
lcall
fcoml
incb
adc
pop
jl
call
ret
div
mov
mov
and
xor
fwait
and
cmc
mov
sub
xor
dec
dec
dec
push
cli
cmpsb
jb
ljmp
add
push
stos
cld
test
out
lret
pop
jg
cmc
sbb
sar
inc
mov
loop
fmull
cmovp
rcr
push
or
jne
lret
daa
mov
sbb
cmpb
fs
adc
in
and
sub
pop
cltd
incb
or
mov
popf
popa
mov
lods
neg
adc
icebp
xchg
ret
icebp
push
leave
jno
scas
ret
xchg
ljmp
jecxz
mov
popf
aam
sbb
and
ret
adc
inc
adc
xor
mov
fdivr
pop
aas
cmp
cmp
pop
fsub
or
sarb
cmpsl
scas
push
pop
sub
fsubl
in
ss
std
jo
insl
int
movsl
pop
ljmp
jmp
push
and
int
test
mov
out
imul
fmull
sub
mov
ret
movsl
leave
cltd
cmp
nop
in
or
mov
pop
hlt
xor
push
fimull
dec
cmp
mov
dec
ss
stos
inc
mov
jge
push
out
pop
cmp
jge
lods
xchg
mov
lcall
fstps
adc
movsb
xlat
fsts
inc
pop
pop
jle
and
or
mov
mov
or
sub
dec
lods
push
jge
orl
out
lds
jg
dec
insb
fcmovbe
rolb
mov
cmpsl
ja
stc
adc
inc
xchg
in
and
or
rcrl
xlat
xchg
and
mov
mov
icebp
cs
imul
mov
shll
fisttpll
stc
jge
insb
mov
xor
leave
pop
lret
mov
fisttpll
push
ret
xor
jae
fsub
dec
mov
jmp
out
pop
stos
popf
out
lea
mov
sti
int3
dec
add
add
sub
repnz
hlt
fists
cmpl
popf
xchg
shll
jb
add
movsb
stc
les
das
stc
data16
mov
xchg
mov
xlat
or
jecxz
pop
out
inc
mov
push
add
add
xchg
stos
jb
xor
xchg
pop
cmp
rorl
add
cmp
add
frstor
andl
sub
scas
pop
leave
ret
mov
pop
xor
push
mov
aaa
jl
ljmp
repnz
fdecstp
jle
lcall
pop
lret
rcl
push
push
fcoml
inc
out
insb
lods
int
incl
outsb
xor
addr16
push
sahf
cmp
and
jns
adc
les
and
das
pop
inc
dec
inc
sbb
mov
jns
push
mov
cld
sti
popa
ret
fsts
int
jmp
sbb
xor
cmc
push
scas
xchg
leave
int3
xor
mov
sub
sub
popf
add
jg
pop
adc
xor
popf
and
mov
div
mov
pushf
mov
mov
cmp
ja
mov
cli
popf
and
mov
fisubl
outsl
adc
cli
inc
cld
fsubrp
mov
dec
mov
xor
lds
int3
in
mov
jg
cmpsl
push
mov
push
cmp
sarb
dec
sbb
xor
fs
std
sbb
aam
aad
test
fldt
js
mov
jle
ret
mov
or
add
cmp
jb
add
fnstenv
inc
daa
and
inc
pop
jge
xchg
dec
jp
cmpsl
sti
movsb
xchg
es
dec
and
mov
popa
call
cmpsb
out
pop
lahf
xchg
pop
and
cmpl
dec
inc
and
adc
aas
int
sahf
mov
psubsw
pop
push
enter
out
adc
inc
adc
sbb
cs
repnz
pop
inc
push
or
repnz
sbb
sub
mov
movsl
adc
mov
jae
add
mov
ja
test
sub
mov
es
loopne
dec
cpuid
mov
cmpsl
aad
adc
stos
int3
dec
mov
xlat
data16
movsl
xor
mov
sbb
jne
outsl
scas
lret
jmp
mov
cmpb
xchg
xchg
adc
mov
int
out
rcrl
jns
xor
addb
scas
jno
nop
push
jne
and
inc
add
push
les
mov
loopne
and
push
push
xchg
jl
mov
out
mov
shll
xchg
adc
shrl
fwait
sub
pusha
call
xor
inc
movsb
test
movsl
sahf
inc
push
js
inc
lret
ja
or
xchg
inc
sbb
mov
stos
test
or
sbb
dec
lahf
adc
adcl
sarb
xor
push
sbb
cmp
adc
mov
sbb
arpl
sub
pop
shrb
outsl
push
dec
xchg
add
repnz
nop
jae
stos
ret
cli
adc
in
pop
xchg
out
ret
mov
out
xor
sbb
dec
xor
or
adc
xchg
inc
mov
mov
sbb
add
scas
movsb
cmp
jg
cmp
xchg
aas
mov
mov
mov
scas
sbb
or
lahf
dec
adc
cmc
mov
std
mov
or
mov
mov
ja
bound
aaa
lret
decl
push
ror
loop
cs
and
jae
pop
rcll
jno
and
fstpt
cmp
js
cwtl
or
xchg
adc
js
divl
jg
and
xor
leave
mov
pusha
inc
mov
xchg
cmp
lcall
add
sbb
mov
lahf
call
push
sub
int
sar
icebp
sbb
inc
push
pop
or
icebp
pop
in
movsl
dec
jmp
mov
and
loope
dec
sub
xchg
inc
cmp
lret
fdivrl
ljmp
dec
subl
push
in
data16
sbbl
aad
lods
sbbl
mov
xchg
mov
mov
mov
movsl
xor
and
sbb
push
cmp
jge
pop
and
xchg
jge
enter
loop
pop
adc
jb
dec
cmp
aad
jle
add
jno
mov
lods
cltd
roll
jne
fwait
sub
ficoms
cs
jae
scas
jno
outsl
outsb
or
mov
dec
or
inc
mov
mov
jp
jbe
test
add
jno
add
xor
mov
mov
sahf
addr16
inc
loopne
loopne
xor
notl
jb
pop
lea
pop
leave
adc
xlat
test
inc
call
mov
jmp
nop
or
es
pop
or
and
aaa
mov
js
mov
cmp
sub
xchg
nop
or
dec
fidivl
jp
pop
daa
dec
ss
xchg
outsl
test
test
rclb
insb
neg
jg
jg
cmp
std
or
push
rdmsr
cmp
aas
outsb
mov
mov
les
sbb
xor
mov
test
movsb
hlt
sub
add
xor
xchg
clc
cs
push
aad
and
insb
mov
push
bound
mov
sub
add
shlb
mov
sarb
xchg
iret
movsb
test
mov
sbb
insl
hlt
sbb
test
adc
jbe
adc
xchg
sbb
fisubs
daa
mov
cmp
pushf
insb
push
lret
jnp
test
pop
jg
in
jno
enter
movsl
mov
dec
sub
and
xchg
push
mov
popa
int3
nop
out
rorb
lret
outsl
xchg
stc
vmwrite
inc
enter
mov
pusha
xchg
and
fs
sub
outsl
adc
test
out
cmp
mov
std
call
cmp
stos
pop
pop
nop
mov
add
hlt
inc
mov
add
jmp
lret
lds
movsb
call
je
pop
sbb
sahf
xchg
sti
test
pop
add
mov
mov
les
sub
lcall
bound
fsub
arpl
pop
pop
out
sar
push
int
insb
test
push
scas
inc
lds
movsb
sbb
adc
adc
dec
rclb
in
sarl
sub
lods
fisttpl
in
pusha
lret
cmp
fiaddl
push
and
xor
pop
dec
sub
sub
mov
jnp
xor
sbbl
mov
inc
aas
xor
mov
add
cwtl
jl
nop
inc
in
xor
mov
xchg
imul
jae
imul
cltd
mov
push
dec
das
adc
jns
push
cli
xor
ljmp
aad
mov
dec
pop
jae
aam
dec
out
sti
ret
nop
pop
cmp
push
push
push
mov
jmp
mov
add
jg
sbb
pop
lcall
cmp
aas
mov
dec
jne
inc
in
xchg
mov
cmp
int
pop
mov
dec
lret
shl
aam
push
sbb
fsubs
test
pop
cltd
adc
xchg
iret
mov
test
dec
sti
pop
sub
sbb
cltd
xor
push
cmpb
push
or
sub
movsl
jg
fcomps
dec
rcll
add
cmc
mov
and
enter
inc
push
mov
dec
push
int
hlt
test
inc
mov
push
std
ss
adc
loop
and
stos
sahf
fsubrs
insb
adc
out
stos
or
or
fcoms
add
xchg
pop
mov
out
cmp
push
pop
aas
test
icebp
cmc
push
notb
dec
mov
mov
mov
cmpsb
add
mov
dec
psubw
inc
ljmp
cli
shlb
int
push
mov
sub
lahf
ja
rclb
fs
push
xchg
and
jl
adc
mov
pop
inc
hlt
cmpsb
add
popa
push
les
sub
cld
xchg
xor
shlb
xchg
nop
push
xchg
fdivrl
andl
shl
cmp
movsb
test
outsb
in
lcall
ja
scas
xor
ljmp
mov
std
and
add
jnp,pt
scas
mov
in
lods
iret
enter
int3
test
jns
pushf
rorl
sbb
inc
add
int
mov
mov
push
dec
sbb
adc
mov
inc
xchg
loop
inc
push
cmp
mov
xorb
subl
jmp
stos
jbe
push
push
mov
out
cwtl
test
gs
dec
js
add
jns
pop
mov
pop
jmp
jg
mov
lret
or
cmc
or
push
push
ss
mov
testl
test
stos
data16
jne
add
outsl
push
ja
jb
cmp
inc
jg
cmc
fwait
jnp
add
sub
pushf
jne
cs
call
daa
pop
and
pop
cwtl
sbb
ss
ja
inc
jno
mov
mov
pop
jle
cli
jno
dec
dec
pop
scas
adc
fistpl
icebp
mov
mov
add
inc
cmpsl
mov
test
repnz
xor
sub
iret
cmpsb
push
leave
fcmovnb
mov
call
in
ret
dec
jae
rcr
out
cwtl
movsl
push
mov
jmp
adc
push
shrl
cmpsb
nop
ljmp
lods
mov
cmp
mov
aam
xchg
mov
mov
push
dec
pop
jns
ss
ret
pop
lret
dec
mov
cmpsl
jmp
shlb
xor
dec
ja
xchg
xchg
fdivs
jle
hlt
in
fildl
xchg
jge
dec
or
subb
call
add
fildll
in
adcl
mov
xor
mov
cmpsl
lret
pop
pop
out
mov
cmp
lock
inc
mov
push
ja
pushf
fsubrl
add
or
and
movsl
out
jle
mov
fdivrs
mov
inc
in
fs
ds
das
test
and
dec
lods
xor
dec
fwait
enter
jecxz
aam
add
mov
and
xchg
mov
mov
mov
aam
addr16
jle
out
pop
cmpsb
lds
sub
mov
stos
mov
lea
leave
adc
mov
sahf
jge
test
test
leave
and
ja
xor
sti
adc
enter
imul
and
mov
stc
test
mov
les
inc
push
cmp
cwtl
or
xchg
dec
daa
push
inc
sub
stos
dec
stos
xor
mov
repz
test
imul
mov
sub
pop
cmp
iret
mov
sub
or
es
adcb
std
xlat
xchg
repnz
adc
push
add
xchg
pop
push
add
dec
imul
xor
ret
movsb
pop
shrl
in
pop
mov
adc
lea
adc
xchg
xor
aas
das
adc
movsl
int
inc
ja
iret
add
mov
adc
push
imul
gs
rolb
addr16
mov
mov
dec
ret
mov
dec
xor
push
mov
mov
mov
jp
aam
push
mov
outsl
in
dec
dec
in
mov
psubq
push
mov
movl
in
rorb
jae
gs
mov
adc
pop
fwait
xor
aad
jbe
and
xchg
mov
cltd
add
js
cmp
icebp
push
enter
adc
push
ret
mov
jnp
int3
jl
lea
xor
mov
scas
movsl
mov
mov
xor
pop
dec
mov
fcmovnb
cmpsl
push
jp
rorb
loope
in
ss
dec
cmpsl
std
xchg
dec
xor
mov
testb
fists
sti
lret
xor
int3
mov
mov
or
rolb
fidivrs
jne
jae
lcall
stc
in
inc
cmp
ljmp
ds
cli
cmc
jbe
adc
xchg
gs
fisttpl
mov
xchg
jns
and
jecxz
inc
popf
scas
lahf
sbb
jp
mov
sub
sbb
addr16
in
popa
data16
dec
inc
xlat
ljmp
notl
sbb
xchg
outsl
incb
push
ljmp
inc
inc
xor
jo
sti
xchg
imul
adc
jmp
jbe
ds
xlat
jge
pop
das
pop
insb
outsb
dec
xchg
pusha
cmp
addb
lods
dec
lcall
add
sbb
in
push
ja
aaa
add
pop
mov
ds
xchg
aas
push
cltd
mov
int
std
outsl
jg
adc
jge
and
cmp
sub
scas
call
fmuls
fsub
cmpsb
adc
inc
dec
jae
cmp
movl
add
pop
push
push
test
icebp
js
adc
or
pop
inc
dec
fwait
out
pop
xchg
and
jg
dec
ja
adc
inc
add
mov
sub
xchg
xchg
imul
jge
outsl
popa
rcrb
sbb
jle
xor
push
jmp
or
push
or
test
cmpl
dec
sbb
cmp
lahf
shlb
aaa
cmp
std
fisubs
pop
or
cli
mov
in
test
rolb
pop
cmp
mov
std
cmp
xor
add
cmpsb
push
jo
dec
mov
push
mov
out
imul
movb
imul
ret
stos
mov
rolb
fimull
ss
rorl
shl
test
ficomps
lret
mov
mov
push
test
cmpsl
adc
push
shrb
jae
sub
bnd
test
dec
jmp
out
sub
das
daa
jns
and
sbb
lock
sbbb
in
out
test
mull
sub
sub
fs
inc
imul
arpl
ljmp
cmc
test
js
cmp
xchg
cmp
scas
in
sbb
popl
repnz
push
cmpsl
cld
xchg
sbb
sbb
xchg
mov
lds
in
mov
sub
xor
inc
jge
mov
flds
aam
push
add
sub
sbb
xlat
dec
cltd
out
cmp
cmp
std
clts
leave
xor
xor
mov
cmp
sbb
ret
movsb
sub
sub
cld
inc
ret
jae
mov
cmp
mov
int3
jo
jae
adc
jb
cmp
rclb
loopne
mov
xor
inc
jp
and
pop
cs
sub
js
imul
xchg
lcall
add
and
dec
ret
outsl
gs
sbb
fisttpl
push
push
and
push
sub
shrb
mov
outsb
mov
inc
mov
inc
aaa
ss
in
xchg
xchg
push
or
aaa
aad
test
inc
in
xlat
rcll
jns
push
inc
add
sbb
dec
lret
ret
mov
out
stos
icebp
pushf
xor
movsl
in
sbb
mov
mov
call
dec
out
xchg
xlat
push
pusha
mov
fdivrl
xchg
mov
cld
insl
mov
repz
cvtpi2ps
cld
sbb
popa
mov
repz
arpl
mov
adc
push
es
xchg
jbe
adc
inc
jae,pn
mov
js
add
sbb
stc
sbb
test
movsb
mov
and
jmp
mov
sub
push
rcll
jns
sub
repz
or
or
shl
icebp
test
out
inc
cmc
xchg
in
out
insb
push
mov
push
out
orb
outsb
lcall
push
cmc
mov
cmp
mov
cld
in
add
xor
or
fs
jbe
lods
fwait
cmp
pushf
mov
mov
arpl
ljmp
shll
pop
loopne
shr
inc
mov
pop
add
call
xchg
xlat
mov
roll
mov
bound
jb
test
test
ja
xor
sub
movsb
ds
shlb
mov
test
dec
and
xchg
jp
sbb
aas
adc
and
stos
shlb
mov
jbe
lea
jo
test
fldcw
cli
sbb
add
stos
mov
add
xor
pop
push
out
adc
popf
call
or
and
xchg
fists
sti
sub
jp
sbb
ror
sbb
in
jns
inc
xlat
orl
inc
dec
gs
inc
mov
dec
sub
int
xchg
cmp
outsb
fildll
arpl
lret
lods
pop
fdivrl
iret
in
add
xchg
lods
fmuls
mov
rolb
mov
dec
or
fcoms
push
mov
jbe
repz
shl
mov
aam
imul
push
pop
ret
div
enter
mov
sbbb
shr
push
cld
jne
dec
sub
cs
test
and
jecxz
cmpsl
or
mov
or
je
das
out
inc
inc
sub
dec
test
sbb
aas
arpl
jmp
insl
pop
mov
lcall
aas
mov
pop
aam
iret
mov
and
push
sub
fiaddl
lret
push
sarb
dec
in
cmp
mov
cmp
roll
std
mov
xchg
mov
mov
mov
sbb
push
or
into
int3
sub
or
lret
inc
dec
das
lds
and
idiv
outsb
lods
lret
adc
fisubl
pop
stos
jns
mov
mov
cli
sbb
ljmp
clc
cmp
inc
shlb
addr16
push
or
out
jnp
xor
fbstp
cmpsb
push
addr16
lock
lods
sti
test
add
jb
cmpsb
xchg
inc
mov
cli
xchg
insb
mov
jns
pxor
scas
addr16
and
inc
inc
shrb
push
stos
jp
jle
clc
fwait
or
test
pop
inc
sub
mov
jbe
lcall
leave
mov
add
jnp
mov
es
aas
jg
dec
mov
add
mov
in
mov
add
ds
and
xlat
mov
fs
into
jl
fs
adc
dec
jle
lret
adc
xor
ds
test
ret
or
push
mov
in
push
in
mov
loope
nop
ljmp
inc
jo
pop
clc
lds
xchg
sbb
push
push
fs
xor
incb
andb
mov
pop
enter
pop
insl
cmp
ret
jge
sub
pop
fxch
fidivrl
pop
mov
icebp
ffreep
push
lods
sbb
mov
fwait
pop
in
mov
popa
jmp
out
bound
mov
or
movsb
lods
test
mov
aam
test
cli
dec
or
popa
repz
pop
dec
cmp
idivb
pop
lcall
mov
repz
out
inc
dec
push
rcl
inc
pusha
adc
sbb
dec
sub
xor
or
mov
inc
xor
shrb
out
rorl
dec
lock
vorps
or
mov
jp
pusha
jnp
aad
loop
stos
popf
jb
and
repz
pop
and
xchg
enter
xchg
sbb
mov
mov
js
lods
pop
mov
add
jbe
mov
xchg
push
cmp
cmp
jns
aad
xchg
dec
xchg
jl
popa
imul
lret
xchg
xorl
pop
mov
and
movsb
push
mov
fisttpll
test
push
sbb
mov
stc
popa
xchg
xchg
ljmp
loop
jno
xchg
stc
or
popl
shl
and
mov
jge
nop
divb
xchg
jne
jb
imul
ficoms
xchg
lock
arpl
rcrl
inc
inc
insb
jnp
out
popa
inc
mov
aas
inc
xchg
mov
movsb
mov
xchg
xchg
fucomi
mov
and
loope
xchg
jle
mov
adc
jecxz
fs
xor
ret
mov
push
lret
cli
ret
cmp
jbe
xchg
std
push
data16
inc
mov
sbb
cmpsl
dec
ret
push
dec
xlat
sti
sub
jl
xchg
jno
inc
jl
sub
imull
mov
lods
mov
adc
xorl
and
cs
add
jmp
pop
add
sarl
loop
mov
adc
mov
xchg
out
dec
mov
rcll
iret
sbb
mov
test
sar
mov
xchg
testb
cld
out
shlb
rcr
sbb
imul
cltd
aad
xchg
sbb
fwait
dec
push
fmull
sub
clc
dec
add
fcmovne
sbb
dec
xchg
fisubrs
stos
cmp
std
mov
mov
mov
xor
sbb
mov
xchg
cwtl
jl
mov
std
and
mov
cld
sbb
jecxz
int3
ret
or
cmp
push
out
mov
push
lahf
int3
pusha
adcb
js
shr
mov
cmpsb
jecxz
mov
dec
lret
les
and
mov
sbb
cwtl
sbb
je
adc
adc
cmc
test
popf
xchg
jl
nop
incl
cwtl
cs
gs
fdivs
jno
cmp
jl
or
mov
sahf
mov
sbb
add
aaa
push
pop
xchg
in
dec
and
cld
push
pushf
pcmpeqb
ret
repz
ja
pop
enter
and
pop
cmpsl
xor
lcall
addb
out
or
or
cmp
je
out
dec
dec
hlt
dec
xor
stos
mov
test
lcall
arpl
sbb
mov
in
push
xor
aas
out
adc
add
pop
mov
dec
push
in
js
gs
mov
lret
sub
jmp
je
mov
pop
pop
sbb
inc
out
bsr
xchg
jae
push
test
and
fisttpl
mov
subl
mov
jle
xorb
and
mov
jp
xchg
lock
xchg
sub
repz
stc
stc
dec
mov
lods
mov
cwtl
xchg
pop
pop
mov
cmp
xlat
push
js
jmp
mov
ljmp
mov
outsl
inc
jle
icebp
fisubrs
xchg
push
mov
fsubl
cli
fldt
lods
push
mov
mov
jecxz
std
add
mov
and
mov
pop
push
loop
jo
and
sbb
popf
iret
xchg
divb
adc
adc
xlat
into
cmpsl
push
mov
inc
stos
pop
add
test
push
fiaddl
aam
mov
scas
cs
jmp
into
cmp
mov
xor
cmp
pop
popf
sar
mov
test
and
xchg
jle
pop
jb
mov
or
jne
inc
mov
push
and
jp
mov
ja
les
sub
jne
add
inc
or
lret
fs
inc
push
in
jne
jge
add
punpckhwd
push
call
adc
jmp
cmp
popa
and
adc
scas
insb
aaa
jmp
add
ss
add
shl
ja
cmpsb
and
test
xchg
xchg
ja
movsb
pushf
sub
adc
or
xchg
dec
call
adc
cmpsb
inc
test
push
add
cmc
sar
nop
sbb
fistps
popa
mov
mov
addb
mov
divb
mov
addb
inc
push
inc
cmc
push
pop
mov
loope
lock
sar
xchg
jo
sti
out
xchg
lret
xchg
out
adc
mov
je
ror
xchg
mov
mov
aam
cwtl
shrl
fildl
into
sub
imul
cwtl
nop
xorl
int
sbb
ja
in
mov
cli
cmpsl
pushf
cmc
outsb
sub
shl
shlb
iret
ret
sub
xor
add
test
jbe
ret
repz
push
jo
out
add
and
mov
cmc
popf
fistpll
pusha
icebp
stc
fs
jmp
xor
loope
mov
loop
inc
fidivl
dec
adc
clc
sahf
pop
mov
imul
add
sub
or
stos
insl
test
aaa
out
ss
cltd
jbe
cmp
loop
ret
pop
ss
aaa
jns
cmp
into
in
sarl
movsl
pop
mov
sbb
inc
jg
dec
xchg
mov
mov
mov
adc
dec
and
addb
cmc
mov
pop
pop
mov
add
stc
pop
aad
mov
orl
stc
mov
testl
jg
jp,pt
in
inc
out
sbb
or
cmc
adc
jmp
imul
inc
outsb
into
ss
add
jae
in
or
sbb
xchg
jmp
xchg
push
push
sub
xor
lock
lock
push
nop
fwait
lock
arpl
cmc
in
jo
xor
mov
mov
sbb
pop
and
push
mov
icebp
mov
mov
int3
cli
jne
sti
xchg
shr
std
jg
or
lock
insl
adc
xchg
jmp
sbb
cmp
scas
mov
imul
cmp
or
push
mul
hlt
mov
push
pop
xchg
jne
es
loope
insl
add
cmp
pop
in
test
xchg
mull
loope
or
pop
icebp
mov
std
sbb
xchg
lcall
mov
andl
pop
dec
std
inc
sub
pop
jmp
cld
sbb
xrelease
shl
inc
jbe
out
dec
inc
bound
in
push
pop
add
pop
sbb
pop
nop
je
jbe
imul
mov
in
jb
sahf
shll
push
jbe
scas
sbb
push
imul
sahf
es
push
or
xor
or
push
in
adc
pusha
push
fisttpll
adc
insl
dec
jle
cmp
mov
pusha
add
push
gs
aaa
sub
adc
add
hlt
mov
scas
mov
xor
mov
or
outsl
repnz
pop
xchg
push
push
jl
outsb
sbb
das
out
hlt
js
xor
or
xchg
incb
jge
dec
push
push
add
xchg
mov
insl
jno
fdivs
or
mov
out
jge
jo
mov
pop
jg
sub
iret
push
mov
repnz
xchg
call
xchg
leave
sub
push
incl
loop
clc
adc
dec
push
adc
pop
pop
adc
imul
cld
push
cmpsb
cltd
das
lods
jno
es
xchg
or
push
push
shlb
pop
mov
mov
out
and
test
and
jle
int
out
jno
ja
mov
repz
push
jo
aam
push
jno
pop
xchg
jl
mov
lea
cmp
daa
aaa
or
testl
or
pop
cmp
into
ficoms
cltd
test
xor
push
push
mov
mov
dec
in
mov
stc
cmp
lods
ss
stc
push
cmp
sti
cwtl
cmp
dec
enter
in
addl
sub
shlb
xchg
mov
in
les
je
jl,pn
aaa
inc
sub
clc
xchg
add
or
jbe
cmpsl
outsl
std
les
sbb
ds
mov
pop
xchg
mov
mov
jmp
mov
lds
ljmp
sbb
arpl
cmp
push
and
xchg
cli
lods
clc
inc
mov
lahf
loope
dec
data16
adc
push
inc
ret
lret
adcl
repz
stos
sub
xchg
lods
in
mov
testb
rcrb
mov
sub
and
inc
jno
pop
test
mov
sub
cmp
lret
outsb
fdivl
out
in
and
pusha
lahf
pop
add
jnp
mov
jp
and
fs
xchg
data16
popf
andb
in
jns
es
adc
arpl
int
push
sbb
and
outsl
push
xor
das
push
lret
inc
inc
imul
mov
adc
sarl
jle
push
mov
jo
sahf
and
pop
push
mov
sbb
fmull
cmpsl
cltd
cmp
outsl
ret
xor
movl
cmpsl
fbstp
lock
ja
mov
xor
inc
dec
movb
es
ds
push
jb
insb
mov
enter
inc
xor
lock
stc
sbb
xchg
cmp
lcall
or
std
pop
mov
addr16
out
and
mov
sbbb
lods
out
in
xor
fdisi(8087
xchg
sti
xchg
add
sahf
adc
cmpl
xlat
lcall
mov
mov
jecxz
pop
cmp
out
pushl
cmpsb
jecxz
into
inc
popf
mov
cli
sbb
xor
sub
orb
jmp
jg
inc
or
pop
adc
ss
in
mov
xchg
xchg
fisttpll
pop
push
and
fcoms
cmc
lock
data16
insb
fwait
ljmp
les
sbb
aas
int
xor
test
popf
jle
sti
repnz
mov
dec
mov
mov
push
and
lea
hlt
jbe
imull
test
jbe
js
inc
cmp
push
push
push
aas
push
push
out
mov
idiv
and
scas
jb
idivb
mov
adc
xchg
jbe
xor
mov
sti
mov
adc
stc
bound
add
dec
je
data16
addr16
adc
cmp
cmp
lcall
fs
test
dec
and
mov
adcl
push
sti
mov
cmpsb
sub
call
or
sbb
inc
icebp
fidivs
rcl
mov
cli
jg
rcl
icebp
cmp
daa
mov
sbb
cmpsb
inc
mov
ja
push
ret
out
data16
jae
andl
adc
mov
xorb
inc
sti
mov
stos
dec
mov
fistl
out
xchg
test
cmc
das
ja
lcall
popw
inc
lahf
inc
leave
inc
int
into
enter
mov
outsb
lret
xchg
jns
lcall
imul
ds
cmp
and
xchg
xchg
pop
mov
xchg
push
adc
mov
movsl
dec
pushaw
jge
pop
push
xchg
cmp
testb
aas
dec
imull
push
push
jo
adc
inc
outsb
bound
test
mov
repnz
adc
pop
dec
fbstp
inc
pop
sub
mov
cmp
pop
idiv
add
adc
mov
xchg
jbe
inc
inc
sbb
cmpsb
jo
mov
sahf
pusha
xchg
test
in
inc
mov
sub
clc
jp
mov
jle
jae
adc
stc
outsl
jb
sti
sub
sub
and
outsb
mov
push
cwtl
push
xchg
mov
sub
adc
add
ret
lock
xor
daa
xchg
repnz
and
fsubl
push
xchg
cmp
jl
pop
loop
lcall
sub
loopne
adc
dec
dec
mov
es
or
pop
dec
fwait
mov
pop
aam
ret
das
xor
scas
aad
inc
test
orl
jp
sarb
lock
enter
data16
dec
hlt
inc
gs
in
or
inc
out
int3
mov
test
pop
ret
mov
jmp
cmc
pusha
fcmovnu
out
dec
jns
jo
scas
push
rcrb
xchg
pop
push
imul
mov
rcrl
inc
inc
popa
stos
lcall
aam
out
push
push
sbb
pop
pop
notl
je
pop
fdivs
xor
cmp
xchg
arpl
pop
mov
mov
into
lea
pop
rcrb
cmpsb
jne
jmp
cwtl
sub
addr16
pop
mov
mov
xorl
roll
and
rorb
sub
mov
mov
or
push
adc
jo
or
push
jnp
mov
add
and
sbb
jnp
mov
movsb
mov
add
jmp
sub
mov
and
scas
fadds
mov
pop
jl
fsubl
mov
mov
jle
pop
cwtl
cmpsl
cmpsb
sbb
sub
jns
rcrb
cwtl
in
ret
inc
ljmp
nop
lods
scas
arpl
ret
cs
add
dec
xchg
cmp
rorl
pop
popa
add
movsl
inc
dec
or
inc
stos
insb
shl
xor
mov
clc
int
xorb
jns
mov
dec
jge
hlt
jae
push
xchg
add
add
outsl
nop
push
add
xchg
insl
sub
sub
cmp
repz
ss
xor
dec
jle
repz
insl
sbb
in
mov
inc
xchg
dec
mov
or
stos
mov
fidivrs
out
fwait
out
mov
sbb
pop
sti
ljmp
add
fwait
cwtl
ljmp
mov
insl
add
adc
inc
jb
jl
pushf
call
outsb
jmp
mov
mov
inc
loopne
aas
or
stos
mov
sub
mov
outsl
je
sub
cmp
iret
sub
lret
sub
stc
or
gs
pop
cmp
scas
add
movl
in
dec
push
sti
test
jno
mov
rcrb
fidivl
je
aaa
and
dec
inc
cmpsl
outsl
fs
rolb
mov
pop
sub
xchg
or
cmp
aad
xchg
call
inc
test
test
or
sarl
hlt
fwait
and
mov
push
jmp
sub
mov
push
xchg
rorb
out
mov
mov
imul
inc
pop
jmp
add
mov
ljmp
cmp
ljmp
xchg
mov
add
jbe,pn
adc
mov
in
sbb
adc
cmp
cld
int
aas
sbb
and
je
outsl
sahf
cmp
add
adc
fsubrl
pushf
jnp
lret
jl
rolb
jno
imulb
in
pop
das
inc
push
pop
int
fsubrs
dec
lea
inc
cmp
jb
dec
push
jns
daa
dec
xorb
push
popa
loopne
adc
dec
clc
in
out
shll
adc
into
cmc
lahf
mov
stc
xchg
pop
into
xor
push
or
dec
xor
mov
inc
cmp
pushf
xor
gs
jae
test
sti
jmp
mov
mov
push
es
inc
mov
mov
add
arpl
fsub
aas
xchg
xor
sbb
cwtl
xor
out
sub
nop
dec
jmp
cmp
loop
or
shll
xor
clc
rcl
adc
imul
push
roll
sbb
push
inc
cmp
int
cmp
or
xchg
loopne
rcrl
es
pop
outsl
aam
dec
dec
fbld
xlat
xchg
ret
pop
fs
stc
test
enter
stos
or
inc
pusha
sub
lea
push
les
jns
push
repnz
fs
or
ret
jns
test
adc
lret
push
pop
jb
repnz
sub
inc
repnz
xor
shll
nop
shll
imul
andl
dec
rclb
movsl
jecxz
mov
mov
stos
sbb
pop
inc
std
leave
pop
jno
popf
arpl
and
fisubrs
pushf
icebp
aam
gs
pusha
pop
rcr
cld
sbb
leave
ds
pop
aas
outsl
lods
mov
daa
and
xchg
aam
xor
rorb
sbb
cmp
mov
xor
mov
fidivl
and
loope
test
inc
or
nop
pop
es
sbb
inc
insl
jae
add
fincstp
fs
enter
in
cltd
rorb
sub
sarb
xchg
das
leave
cltd
int
pop
sbb
int3
jno
ja
cmpl
jecxz
leave
xchg
test
and
adc
addr16
jnp
adc
xchg
xchg
stos
jl
call
out
fwait
popf
cltd
cwtl
sbb
mov
jne
xchg
or
add
insl
xchg
jb
jle
imul
mov
js
sub
out
test
xchg
xchg
mov
je
popf
shl
mov
add
mov
inc
cmc
dec
jp
push
xor
inc
lret
outsb
cmc
pop
jmp
sbb
in
or
in
add
xorb
test
adc
cmc
data16
push
hlt
out
test
cmp
ret
fisttpl
push
je
mov
andl
sbb
daa
push
rorb
movsb
sbb
sbb
notl
leave
push
lods
loope
test
fstl
adc
js
mov
sub
dec
out
ja
xchg
jae
frstor
xchg
out
cmp
dec
and
jb
or
inc
fcomps
lret
js
jecxz
cmp
jns
mov
mov
or
insl
lret
push
sar
push
mov
fadds
out
aaa
pusha
push
addr16
movsl
mull
mov
inc
loop
pop
mov
pop
push
shlb
mov
cmp
imul
inc
cmp
xor
lods
xchg
cli
and
shl
sbb
out
mov
daa
add
adc
and
mov
jecxz
push
aam
icebp
xchg
icebp
test
push
mov
aad
hlt
pusha
cmp
mov
scas
fadd
mov
push
push
movsl
or
hlt
xchg
pop
mov
aad
psubq
xchg
lods
push
jl
fs
leave
imul
sbb
sbb
pop
pop
or
and
ret
in
movsl
push
ret
adc
jecxz
jae
inc
out
mov
inc
mov
push
out
jge
jne
cvtps2pi
jns
shr
es
lods
jnp
mov
jo
sbbb
enter
das
jno
mov
cmc
pop
fcoms
insb
rorl
sbb
out
call
fstl
std
jns
mov
fsubl
and
add
sub
fs
into
jle
sbb
test
iret
add
outsb
subb
popa
ret
or
cmc
push
or
mov
xor
sbb
and
int
lret
mov
cmp
in
icebp
pop
adc
inc
sbb
mov
aam
adc
adc
inc
inc
push
push
sbb
pop
jns
push
mov
pop
pop
mov
mov
and
andl
mov
sub
sub
imul
popf
adc
cmp
push
shll
lret
in
cli
push
loope
lds
sub
and
cmpsb
rcll
mov
adc
push
or
mov
pop
dec
jecxz
daa
mov
jo
push
out
pusha
fnstcw
mull
xor
filds
mov
push
push
aad
fs
mov
std
sarl
xchg
mov
loope
mov
xchg
mov
push
adc
sbb
pop
stc
lds
out
push
stc
imul
sti
pusha
in
arpl
stos
movsb
push
pushf
out
xor
fmulp
ret
fistpll
xor
add
outsl
filds
cmp
stos
push
xor
repz
or
mov
sub
pop
mov
xor
test
cmpsl
sub
xor
daa
test
sbb
out
cmp
push
add
jno
or
repz
jp
or
or
adc
jne
jge
jl
fneni(8087
xchg
xor
or
ficompl
and
pop
shrl
or
xor
push
or
das
add
out
movsb
aam
out
cld
sar
decl
repnz
add
or
or
mov
pop
aas
add
and
ret
imul
sub
xchg
and
dec
push
xor
data16
insl
addr16
mov
xor
les
mov
adc
aam
sar
mov
lret
xor
cmpsb
and
aam
fildll
cmc
push
cs
and
mov
mov
cmp
add
push
sbb
out
jmp
fisttpll
sub
popf
out
mov
ds
jp
popf
lret
sbb
stc
int
xor
xor
xor
test
push
jle
out
dec
mov
popf
gs
test
cmpsl
xchg
xor
dec
jle
pop
in
inc
xchg
lcall
in
sbb
adc
into
addl
pop
or
loope
cmp
xchg
ret
sbb
push
repnz
mov
shrl
mov
adc
sbb
mov
ja
inc
stos
aas
fldcw
or
jmp
sub
int3
sti
ret
in
push
push
mov
mov
adc
stc
push
mull
inc
mov
lea
arpl
jge
xchg
in
fwait
lea
in
out
adc
and
jbe
fsubr
fisttpll
push
sahf
ja
out
aas
pop
mov
mov
jmp
out
addr16
mov
add
gs
cmp
xchg
cmp
das
ret
xchg
lock
jmp
insl
xchg
gs
leave
sbb
xchg
xor
inc
push
push
and
xchg
cmpl
aas
arpl
jne
pop
repnz
mov
sub
sti
je
jg
sahf
inc
pmaddwd
fisubrs
sbb
push
in
push
and
mov
dec
xor
out
loopne
into
push
call
bound
imul
shlb
test
je
cmp
pop
arpl
mov
mov
jo
int3
sbb
mov
push
insl
fstpt
xor
dec
daa
mov
push
cmp
mov
dec
sbb
out
dec
cmpsl
push
adc
dec
mov
loope
and
add
call
pop
mov
xor
push
mov
inc
pop
pop
push
test
cli
inc
and
push
pusha
or
pop
mov
stos
mov
ds
mov
scas
adc
jge
or
cld
outsb
insb
rclb
mov
pop
push
sbb
lea
push
sub
xchg
fstps
iret
mov
fidivrs
jle
jb
int3
sbb
push
cltd
mov
mov
clc
mov
repz
cld
jmp
xchg
jns
inc
push
push
sbb
adc
inc
inc
adc
sbb
cs
inc
push
fcoms
outsb
loope
adc
pushf
cwtl
ljmp
jns
sbb
sbb
fdivs
inc
sub
jb
mov
mov
aad
das
lods
out
pop
int3
mov
pusha
mov
movsb
sub
dec
cmpb
mov
add
cld
test
into
mov
testl
jno
mov
mov
sub
aaa
fnsave
push
mov
scas
jmp
fisttpll
inc
jae
rcrb
xchg
xchg
mov
jmp
and
mov
shll
mov
aaa
pushl
test
fnstsw
jl
dec
mov
xchg
jl
xchg
bound
loope
mov
mov
lcall
test
sar
xor
pop
loopne
inc
sub
mov
sahf
sub
sub
js
xor
out
push
and
adc
adc
movsl
or
idiv
fwait
xchg
scas
or
push
loopne
loope
test
xchg
xorb
in
mov
pop
sbb
push
ds
jecxz
or
movsl
ss
mov
cmp
jno
addr16
jmp
and
cltd
jno
test
in
mov
pop
jmp
insb
lods
or
add
dec
pop
lret
shrl
push
lcall
iret
cmpsb
scas
lds
js
xchg
cwtl
mov
enter
aaa
add
lahf
in
aad
popa
and
or
jecxz
cmc
repz
xchg
cltd
push
push
fcomip
cmp
xor
mov
pop
scas
ja
push
rcrl
sub
bound
push
sti
add
jg
add
xchg
aam
jo
xchg
xchg
xor
test
sub
ss
cmp
jae
push
mov
negl
es
xor
inc
lods
jbe
inc
ja
loope
mov
pusha
sub
insb
and
inc
and
inc
pop
test
fisubl
fldcw
iret
push
icebp
jno
sub
fwait
js
mov
mov
xchg
hlt
cmpsl
mov
filds
pushf
cmp
das
aas
test
ja
les
mov
frstor
mov
stos
cmpsl
pop
sbb
dec
or
cmpsl
int3
int3
ret
jp
leave
adc
test
out
in
cmc
rcrb
mov
icebp
stc
cmp
push
mov
push
mov
mov
pop
or
cmpb
in
fistpll
jge
jle
cmp
jnp
and
movb
fiadds
xchg
adc
mov
mov
lds
insb
cmp
dec
cmp
xlat
in
dec
outsb
pop
cmp
mov
mov
dec
call
lods
lahf
pusha
fimull
sbb
popa
int3
lea
cwtl
mov
nop
dec
sti
sbb
mov
cmp
mov
pusha
imul
dec
stos
or
jbe
pop
xchg
or
rcl
mov
pop
scas
jl
xor
push
shr
dec
movl
test
jmp
lock
adc
adc
mov
adc
ret
xor
ror
shr
inc
push
mov
and
xor
add
xchg
imul
mov
loope
mov
aaa
imul
in
ja
pop
mov
lcall
sahf
sub
mov
or
and
or
inc
shll
pop
sbb
mov
jp
cltd
out
pop
aam
rcrb
adc
pop
rcll
lret
pop
push
out
cs
mov
idiv
ja
mov
push
dec
dec
push
cmpsl
outsb
sub
divl
hlt
arpl
sbb
negl
xor
push
scas
fimuls
cmpsl
icebp
mov
sbb
mov
test
dec
push
cmpsb
js
cmpsl
pushf
or
sub
sbb
xlat
adc
orb
pop
clc
lods
xchg
mov
jno
dec
lcall
pushf
sub
mov
insl
jmp
leave
les
adcl
test
imul
in
stos
xor
jne
push
lods
sub
cmp
imul
pop
cmpxchg
sub
or
push
pop
enter
mov
aad
xor
leave
loope
shrl
mov
add
inc
ja
mov
cmc
or
mov
and
mov
out
fistpll
lahf
leave
adc
pop
jp
repnz
adc
pop
mov
loop
jbe
mov
andl
mov
and
cld
push
fsubl
push
in
aad
fdivrl
int3
jecxz
lods
imul
mov
add
push
mov
xchg
add
dec
out
sub
movups
mov
push
push
sub
push
pop
ss
out
insl
or
adc
jge
pop
fs
mov
test
xor
scas
push
in
ja
call
adc
cld
push
lret
lahf
jp
sti
loopne
leave
stc
adc
pop
dec
xchg
sar
xor
mov
lock
jmp
pop
lret
mov
loopne
out
pop
xor
test
push
inc
addr16
cli
cmc
dec
pop
shlb
stos
out
leave
lcall
adc
xchg
xchg
gs
popa
xor
xchg
and
mov
adc
adc
cmp
adc
fbstp
mov
ljmp
js
dec
mov
mov
in
xlat
xchg
fistpl
popf
push
fcmovnb
jb
jnp
adc
pop
jnp
adc
or
stc
popa
in
cmp
pusha
xor
cmpsl
js
dec
cld
pop
sub
imul
fs
cmc
lods
lods
inc
ret
scas
dec
fldl
stc
jle
cmpsb
add
rcrb
cmp
and
sbb
stos
mov
dec
into
mov
inc
pop
mov
sub
push
jns
cmpsl
inc
inc
pop
arpl
push
push
popf
repnz
stc
xchg
lahf
push
in
jnp
cmpsl
lcall
mov
jne
ret
pusha
fsubs
mov
cmp
jle
test
fs
arpl
jno
iret
xchg
rolb
rolb
shll
xlat
leave
adc
fsubs
push
jbe
pop
shrl
daa
mov
cmp
sub
test
cwtl
movsl
mov
mov
addr16
dec
pop
aas
jle
and
pop
dec
scas
pop
shll
out
lahf
movsl
push
ss
sub
dec
xchg
icebp
sub
fidivrl
leave
mov
test
mov
cmp
fldenv
mov
cmp
imul
pushf
stc
sbb
jge
les
mov
xor
cld
pop
scas
mov
mov
cmpsb
sub
dec
jb
test
inc
dec
shr
into
fisubrl
adc
popl
dec
xchg
xchg
xlat
out
out
jmp
orb
ret
sbb
pop
mov
jmp
mov
cmp
fcomip
lahf
lods
vphsubsw
pop
loope
add
mov
mov
outsb
dec
test
ljmp
shll
es
lcall
mov
inc
ficoms
adc
push
mov
and
mov
daa
in
mov
push
movsb
sbb
dec
pop
push
sbb
lods
xchg
enter
test
mov
cmp
jge
cmp
addr16
inc
xchg
lahf
jnp
mov
movsl
xchg
mov
mov
sbb
dec
lret
movups
pop
hlt
inc
imul
adc
cmpsl
lods
retw
pop
push
cs
pop
in
or
nop
int3
mov
dec
add
jecxz
pop
push
jecxz
mov
sub
ret
jg
jno
inc
daa
orl
mov
paddw
mov
pop
mov
jnp
addr16
inc
bound
flds
sub
lahf
lahf
jbe
bound
pop
sub
push
cmp
mov
jae
and
adc
cmc
in
dec
dec
dec
scas
iret
pop
je
cmp
cmp
mov
cli
cmpsb
daa
inc
in
mov
ss
cmp
mov
or
scas
pop
add
mov
and
sub
sub
lods
sub
popf
pop
sarb
dec
adc
pusha
fdivp
fmulp
mov
loop
inc
bound
mov
sbb
jmp
test
push
insb
loopne
jle
pushf
test
movsb
in
mov
cmp
adc
ja
sbb
shll
imul
imul
mov
push
pushl
cltd
je
or
outsb
or
dec
xchg
push
sub
adc
or
nop
imul
stc
add
adc
lcall
sbbb
roll
sar
and
jle
or
stos
and
jg
pop
movsl
xchg
fs
dec
mov
test
test
and
in
pop
cwtl
nop
cmp
fcoml
fsubrs
adc
test
adc
int3
push
mov
mov
lea
out
and
mov
aam
shl
add
mov
xchg
fldcw
push
test
sbb
cwtl
dec
sti
mov
and
std
stos
mov
mov
adc
adc
cld
xchg
adc
sbb
pop
pop
ret
mov
sub
mov
fnstsw
std
test
add
outsl
mov
icebp
addb
pushl
fistl
das
outsb
adc
adc
scas
loope
dec
out
lahf
repnz
jo
cwtl
int
leave
add
scas
inc
adc
stos
nop
sbb
xor
aam
jmp
popa
dec
int
les
xchg
sub
out
loop
dec
lds
add
push
negl
sub
inc
sbb
lcall
fimuls
pop
enter
sub
popfw
add
pushf
ja
cmp
dec
aaa
mov
dec
jnp
mov
add
xchg
jae
xchg
rcll
fidivl
jp
scas
xor
and
sub
inc
sbb
mov
sbb
sahf
inc
jbe
and
mov
pop
mov
dec
lahf
push
adc
mov
mov
xchg
push
popf
mov
loope
adc
aam
mov
xchg
lea
push
or
incb
iret
jge
mov
out
lahf
cmp
addl
mov
inc
in
jg
or
fsubrs
popf
das
mov
adc
pushf
outsb
mov
add
rorl
and
fwait
lods
fstp
dec
lds
cmp
mov
mull
mov
and
add
jmp
enter
mov
pop
jmp
pop
adc
leave
jle
pop
jo
mov
push
pop
jge
pusha
fdiv
sub
ss
data16
push
mov
iret
jno
sti
loop
subl
inc
push
imul
mov
push
out
out
jns
jbe
jl
stos
cltd
xchg
pop
pop
jge
repnz
inc
testb
aas
pop
mov
sub
or
dec
jae
xchg
pop
adc
add
sbb
xchg
in
adc
sub
mov
test
enter
xchg
mov
add
imull
iret
rclb
xor
sbb
movsb
scas
mov
jcxz
pop
je
hlt
xor
jp
std
or
mov
lea
cmp
mov
int
adc
add
mov
sbbl
lcall
mov
int3
pop
imul
xor
leave
inc
jnp
repnz
dec
popf
pop
stos
cmp
sub
pop
push
mov
xchg
mov
dec
loop
xorl
push
adc
push
jge
or
data16
lea
testb
or
pop
xor
ja
pusha
mov
pop
mov
fisubrl
ljmp
popf
cmp
xor
rcr
and
outsb
xchg
push
sarl
jo
pop
push
and
popf
ja
or
std
xchg
outsb
mov
xchg
je,pt
push
lds
aam
push
lds
jne
fiadds
ljmp
je
add
fwait
sbb
pop
jne
dec
int
mov
loop
ss
or
lea
or
pop
lds
xlat
sbb
jns
cltd
in
out
and
cltd
fisubrs
rcrb
push
dec
and
inc
iret
push
adc
cli
jno
iret
aaa
mov
sub
xchg
xchg
fistpll
loop
mov
and
mov
dec
mov
adc
fs
sub
shrl
inc
dec
in
or
add
sbb
cmpsl
imul
div
xchg
or
lds
dec
push
mov
push
fs
sbb
cmp
loope
pop
jecxz
mov
ljmp
and
mov
mov
mov
cmp
iret
dec
xorl
pop
lret
je
mov
dec
pop
and
dec
dec
inc
xchg
dec
test
loop
fldl
fmuls
adc
inc
sbb
pop
stos
insl
repnz
test
push
mov
cltd
mov
stos
jb
outsl
sub
js
aad
call
fadds
stos
xchg
hlt
dec
cmp
aas
push
mov
jle
or
mov
pop
cmp
sub
push
cmp
xlat
sahf
xchg
pop
and
out
mov
cmpsl
ret
or
lret
add
mov
lock
js
dec
jle
pop
jl
mov
add
pusha
push
in
inc
jmp
std
push
inc
dec
xchg
incb
into
sub
icebp
jmp
out
pop
cs
sub
mov
adc
push
enter
mov
jp
repnz
sahf
sbb
dec
inc
jb
js
jno
mov
fmuls
mov
dec
push
mov
add
popa
out
mov
ret
pushf
mov
xor
test
xchg
addr16
cmpl
scas
mov
cltd
repz
pop
in
insb
cmpl
loop
and
push
shrb
dec
sub
pop
nop
cltd
mov
push
sub
out
cltd
mov
push
clc
pusha
and
sub
jl
cmp
sbb
repnz
mov
pushf
ror
add
jmp
cmp
je
dec
or
or
mov
push
outsl
mov
sti
stos
inc
sbb
inc
inc
popf
push
adc
and
repnz
jl
les
jbe
mov
imull
andl
fs
jb
mov
lret
push
stos
push
insb
mov
inc
cmp
negl
pop
imul
lcall
dec
mov
adcb
sub
or
xor
dec
cmp
sbb
fisubl
sbb
pusha
bound
in
sub
ljmp
je
sub
popa
les
fs
lods
test
xor
les
pop
cmp
jns
adc
push
mov
enter
jns
arpl
push
test
mov
lods
hlt
xchg
jge
dec
repnz
adc
mov
ljmp
sti
lea
lods
lahf
cs
xor
inc
sub
pusha
push
int
dec
lods
not
sbb
push
lods
shll
jg
sahf
xchg
xchg
pop
adc
daa
jbe
fstpl
shl
push
cld
mov
andb
das
in
arpl
xor
pop
in
xchg
les
inc
stos
ja
leave
xchg
jno
ss
pcmpeqd
jnp
xor
jo
repnz
jae
les
faddl
dec
jno
xchg
sbb
mov
mov
pop
rolb
mov
testb
xor
mov
das
test
pusha
and
add
test
inc
cmp
lea
mov
jno
sub
rol
out
shll
cli
loopne
add
inc
aas
lcall
sarb
push
mov
pop
ja
adc
decb
jo
or
cmp
jmp
mov
icebp
xchg
inc
adc
push
outsb
scas
fisttps
ljmp
mov
cltd
ja
lcall
imul
scas
cmp
dec
xor
jo
xchg
ficoms
adcl
xchg
jecxz
fcmovnbe
sub
mov
cmpsl
adc
sbb
mov
push
pop
in
xorl
adc
inc
sub
xchg
int3
xor
inc
std
and
arpl
jo
fnsave
ja
or
xlat
add
sahf
sahf
dec
or
push
int3
mov
aam
xorb
jne
scas
sub
dec
movsb
fwait
aad
and
fstpt
inc
lret
mov
test
test
mov
cmp
inc
lahf
and
and
adc
sub
inc
lcall
jae
mov
nopl
lret
mov
shlb
loop
xor
sti
outsb
out
or
sbb
push
fistpll
mov
orb
sbb
inc
bound
stos
insb
or
int3
addr16
push
pop
lock
xchg
std
std
and
pop
int3
jp
sub
xor
das
int
movb
roll
mov
test
ret
pop
jnp
mov
out
lahf
xor
dec
lock
pop
inc
and
cmpsl
outsl
push
ret
outsl
adc
movsb
pop
rorl
xor
pop
out
mov
sbb
jo
aaa
xchg
das
inc
cmc
loop
pop
or
adcb
jae
inc
sbb
add
sbb
cmp
xchg
arpl
xchg
mov
sti
fisubrs
mov
ljmp
push
imul
dec
rcrb
jl
in
imul
mov
mov
mov
xchg
ret
dec
adc
add
out
aaa
in
pop
aaa
adc
nop
or
lret
std
test
inc
outsb
push
mov
aad
dec
mov
fbld
sub
rorl
mov
push
push
fstl
dec
and
push
mov
sbb
fstpl
xchg
add
in
shll
xchg
cmpb
iret
frstor
cmp
popa
cwtl
in
inc
pop
imul
test
xchg
or
and
in
adc
jl
data16
mov
loope
shlb
ja
fdivr
jmp
js
arpl
push
pop
mov
mov
sbbb
hlt
es
xchg
inc
inc
es
stos
sti
push
xchg
cs
jecxz
adc
cmp
mov
xor
mov
repz
mov
sbb
pop
sbb
pop
adc
mov
adc
addr16
jl
mov
push
ljmp
jecxz
inc
enter
mov
pop
adc
push
loop
add
jb
test
lahf
popa
cmp
movsb
sbb
and
jns
rcll
xor
cmp
mov
jo
mov
filds
cmp
xor
mov
mov
jle
sahf
scas
and
idivb
clc
xchg
arpl
pop
jbe
movsl
mov
maxps
sti
je
ds
cmc
mov
js
test
iret
mov
dec
ret
mov
lret
or
fcoms
lret
addb
ja
jmp
lods
jg
dec
scas
rol
sbb
iret
movsl
in
jge
adc
mov
outsl
repnz
pop
mov
inc
jl
cmpsl
push
add
fildl
and
fnstcw
inc
int3
arpl
out
fidivl
in
movsl
out
jge
fnstcw
ficomps
and
aaa
adc
outsb
fwait
xchg
sbb
iret
das
xchg
mov
xor
lcall
pop
cmp
push
test
dec
sub
adc
pop
fwait
rcrl
data16
xor
jnp
lods
dec
cmp
sub
push
xchg
sbb
lcall
cmp
cmc
fwait
lods
dec
mov
mov
int
in
cmp
ss
das
aaa
and
bound
outsb
popf
pop
dec
mov
int3
sahf
cmp
mov
xchg
dec
inc
fnstsw
jne
mov
addl
mov
test
in
jno
push
cmp
adc
add
sub
push
adc
jle
adc
movsl
mov
mov
pop
outsl
pusha
adc
movsl
das
fstpl
fimull
jno
lock
dec
cmp
push
dec
clc
inc
stos
sub
lret
test
into
cli
loope
mov
les
sub
and
loope
add
call
cmpsl
push
les
and
pop
adc
test
push
sbbb
xchg
mov
lret
test
push
xchg
sbb
es
jg
test
or
lods
or
fwait
xchg
sbb
and
dec
int3
or
loope
out
jl
fistps
aaa
addr16
stos
ss
add
xchg
stos
jb
test
leave
dec
out
mov
rolb
cld
outsl
jns
adc
cmpl
pop
jecxz
mov
pcmpeqd
into
fwait
pop
mov
sub
fldcw
adc
add
hlt
and
mov
dec
insb
out
addr16
push
test
and
popa
gs
inc
dec
dec
les
adc
mov
mov
mulb
adc
or
mov
jnp
mov
add
or
sub
mov
lahf
xchg
outsl
mov
aam
inc
sbb
iret
inc
xchg
cmpsl
cld
flds
arpl
stc
mov
xlat
mov
push
pop
sbb
jp
pop
or
mov
adc
aad
xchg
cmp
sub
dec
xor
and
sbb
inc
fsubrl
imul
hlt
mov
push
addr16
stos
lret
xchg
std
sar
fstl
sbbl
adc
pop
daa
outsb
sbb
xor
pop
dec
jl
ja,pt
mov
cmpsl
and
mov
sub
popa
test
setl
stos
popf
lahf
cmp
mov
int3
ficompl
adc
cmp
cmp
lods
int
sub
outsb
pop
ja
sar
lock
subb
shll
imul
nop
rcrb
sbb
xor
aas
and
xlat
dec
cmc
insl
sub
cmpsb
cs
lret
loopne
xor
inc
out
rorl
test
pop
mov
repnz
in
push
xor
jno
ds
dec
dec
roll
xchg
mov
sbbb
add
add
cmp
mov
pushf
ljmp
pop
ds
test
test
cmp
inc
fcoms
std
add
sbbl
sbb
xchg
or
mov
movsl
ret
fdivrs
sbb
add
rolb
sbb
clc
repz
shl
pusha
fsubl
outsl
lods
jne
out
addb
or
stos
pop
int3
push
adc
push
stos
mov
test
add
movsl
movsb
mov
add
mov
xlat
add
add
std
clc
jp
sbb
xor
or
lods
gs
mov
push
mov
cmpb
mov
fmull
pop
loopne
cmp
mov
add
mov
pop
or
stos
fs
dec
mov
or
sti
sti
pop
inc
ds
mov
cmpsb
push
add
xbegin
das
fistpl
sbb
insb
dec
mov
mov
mov
fimuls
jle
push
mov
outsl
and
xchg
in
es
enter
fwait
xchg
xchg
push
cmp
nop
and
xchg
pop
lret
mov
push
sbb
sub
dec
xlat
xor
out
push
jbe
aas
insl
mov
das
cmp
mov
mov
int3
push
dec
mov
sub
aas
jmp
hlt
sbb
sub
cmp
les
push
cmp
xchg
lret
fdivrl
jmp
fs
mov
repnz
pusha
mov
outsb
orb
cmp
xor
cmp
sbb
pop
jb
repnz
adc
jno
pop
push
mov
fistl
std
sbb
popa
xchg
adc
sbb
stos
loopne
dec
mov
shrl
lret
mov
or
xchg
out
ret
sub
jnp
pop
jns
or
aas
or
jmp
std
push
pop
imul
insl
push
pop
dec
pusha
sbb
add
out
mov
int3
inc
fsubs
test
mov
xchg
mov
adc
push
push
imul
jno
test
pop
mov
xor
mov
add
jo
mov
jne
or
addr16
jae
test
sahf
xor
test
scas
iret
or
xchg
cmpsb
mov
outsb
mov
out
loope
xor
adc
or
leave
mov
inc
jbe
push
clc
aad
push
jb
push
push
add
out
sbb
pop
fcoms
mov
test
dec
adc
jecxz
pop
inc
add
lcall
lcall
jnp
test
xchg
lods
or
scas
cmp
and
repz
jae
pop
aas
std
dec
add
cmp
dec
mov
mov
dec
and
adc
popf
mov
int
pop
rolb
inc
or
lcall
sbb
and
out
xchg
ljmp
add
adc
push
cli
aaa
xor
add
inc
add
pop
in
cli
lea
sbb
clc
and
cmovle
pop
aad
fsubrp
sbb
pop
push
sbb
xor
mov
cld
cmp
leave
and
shll
sahf
out
data16
xchg
ficoms
and
sub
aas
mov
fadds
std
push
loop
adc
xchg
and
pop
mov
fstps
insb
adc
mov
fcmovne
fdecstp
divb
rcrl
inc
loop
cmp
cmp
iret
adc
incl
fadds
jb
insl
ljmp
mov
sahf
cmp
inc
pop
orb
jne
lcall
aas
in
iret
jmp
jge
fxtract
in
xor
jg
test
iret
jle
xchg
ljmp
sub
stc
enter
dec
inc
inc
popa
mov
sub
test
push
int
cmp
push
fidivrl
fdivrl
leave
sahf
adc
mov
mov
pop
leave
jb
push
cld
sbb
loope
outsb
ror
in
pop
js
pop
in
lock
shll
idivl
test
or
enter
out
pop
push
jnp
pop
sbb
push
cmc
dec
movsl
in
jo
rolb
dec
mov
pop
scas
arpl
xchg
outsl
sahf
clc
xchg
pop
xor
cmp
hlt
mov
adc
scas
jo
sti
sbb
cmc
mov
sbb
and
shrl
jae
jmp
add
clc
pop
mov
dec
inc
loope
sub
cmpsl
push
flds
hlt
jae
fisubrs
push
out
dec
xchg
xor
and
mov
jge
sub
inc
scas
jecxz
jmp
lods
or
lds
sbb
jb
jge
shl
mov
xor
mov
scas
jp
aas
lea
pop
lahf
daa
inc
shll
cld
test
daa
in
xchg
dec
mov
add
int
and
bound
xor
mov
jge
lcall
pop
pop
xchg
shl
cld
mov
mov
sbb
inc
xlat
js
mov
test
aaa
adcb
jns
mov
lcall
and
stos
xor
ss
jae
ja
jle
dec
iret
in
mov
jae
mov
stos
insl
sub
sbbb
mov
lea
loope
pop
jo
outsl
loopne
jb
lret
cmpsb
push
pop
xchg
loopne
mov
mov
call
cwtl
call
lds
enter
jnp
cld
fisubrs
cld
jmp
pusha
loopne
add
aam
out
lret
pop
lods
sbb
jnp
pop
ljmp
push
mov
push
cmc
test
xor
adc
es
orb
hlt
jle
aaa
jmp
xlat
cwtl
lock
push
dec
jbe
lock
jmp
faddl
jmp
out
fiaddl
adc
cmp
daa
pop
adc
dec
xlat
dec
add
aam
pop
cmpsl
push
xchg
lds
rcll
dec
cld
or
lea
dec
fsubrl
inc
sarb
lea
fistl
push
andb
sub
insl
xchg
sbb
inc
dec
or
sub
jle
imul
jae
xor
pop
inc
cmc
test
mov
popa
stos
adcl
xchg
sub
ror
and
push
repnz
jg
sub
notl
sub
lret
xlat
lods
ficompl
popf
ficoml
xchg
mov
or
outsl
call
jns
push
mov
adc
stos
add
mov
call
mov
repnz
push
jnp
xchg
xor
push
sub
mov
push
sahf
stc
push
cs
popf
aad
inc
xchg
clc
mov
lret
dec
jge
lahf
and
dec
mov
fstps
es
aaa
xchg
dec
lahf
lret
sahf
mov
or
test
fidivl
lcall
lret
clc
mov
inc
jno
leave
xchg
cmpsb
dec
fmulp
stos
imul
repz
push
cli
mov
adc
ja
lea
fndisi(8087
inc
jl
cmpsl
adc
sbb
adc
lods
mov
xchg
pop
push
adc
mov
sti
aas
push
mov
js
mov
dec
add
push
mov
fndisi(8087
xor
sub
mov
pop
push
and
mov
jbe
repz
xor
decl
jbe
dec
orb
mov
clc
cmp
xchg
pusha
shlb
sbb
add
out
out
push
pop
dec
ficompl
pop
mov
inc
in
aas
xorb
inc
cltd
insl
inc
pop
test
dec
lds
push
xchg
xor
push
jae
cmp
sahf
shrb
and
fnstcw
in
outsb
cld
fdivrl
jo
mov
in
out
vpshlb
jp
pop
cmpsl
dec
xchg
xor
or
cmc
repz
std
add
sub
je
xchg
mov
jp
les
movsb
bound
inc
decl
jo
inc
mov
sahf
mov
sti
shll
pop
cld
int3
cli
test
ss
insl
dec
repnz
adc
mov
bound
push
pop
xchg
pop
lret
mov
mov
xchg
or
pop
bound
adc
jnp
add
clc
or
mov
iret
mov
xor
jbe
sbbb
sbb
mov
std
dec
mov
push
stc
or
add
frstor
fcoms
sbb
jne
xchg
mov
jnp
in
push
adc
mov
cvtps2pi
mov
dec
test
cld
arpl
push
faddl
mov
stos
sub
fcoml
adc
andb
push
imul
dec
nop
stos
mov
call
stos
lock
cmc
je
and
mov
ret
scas
add
fcoms
add
xchg
lea
sbb
mov
push
cltd
filds
iret
mov
daa
cli
cmp
add
jne
scas
or
movd
add
mov
lret
push
and
add
push
xchg
cmpsb
ror
push
cmp
sub
insb
or
inc
mov
shrb
cld
fnstenv
xor
jno
push
dec
xorb
loopne
loop
push
bound
icebp
out
xlat
add
xlat
mov
test
xor
xor
test
push
insl
scas
push
jae
cwtl
lock
cmp
adc
inc
pop
sbb
insb
test
xchg
shl
movsb
cmpsl
fidivrl
pop
jnp
es
push
fistpl
out
daa
mov
sahf
xor
test
push
pop
les
repnz
fcomps
mov
or
fwait
jecxz
xchg
dec
mov
mov
lahf
push
out
adc
pop
cmc
inc
inc
sbb
or
mov
js
dec
loop
fisubrs
xchg
out
sub
fucomp
fldt
insb
int
mov
test
sti
or
xor
push
movsb
adc
movsl
jg
insl
lods
mov
and
ret
xlat
dec
lea
ja
jp
imul
mov
out
mov
les
cmp
jns
or
idivl
jnp
lret
push
jbe
cmp
add
scas
fwait
sbb
frstor
jbe
jne
in
test
jns
push
xchg
out
lods
pop
insl
ds
and
insb
xchg
orl
and
rol
mov
aad
rcrb
pop
pop
repz
sub
shll
and
dec
dec
mov
pop
scas
mov
jb
movsb
mov
pop
and
mov
jno
cmp
push
adc
ret
or
cmp
scas
xchg
cpuid
lahf
out
sbb
xchg
xchg
mov
jns
and
loopne
gs
daa
fwait
out
pop
inc
mov
andl
loope
popa
sahf
adc
int3
add
xchg
shr
jg
ds
jl
movsl
push
dec
cmc
sub
mov
xchg
jns
dec
repz
test
push
push
insb
dec
cmp
add
ds
mov
cld
shlb
jl
and
js
xchg
sahf
push
testb
lods
lret
or
xor
jecxz
aas
mov
andb
cmp
aam
outsl
xchg
call
jg
mov
loop
pop
mov
sahf
out
pushf
call
sbb
out
mov
and
dec
sbb
shr
mov
test
andb
pop
sbb
xor
add
xlat
dec
sbb
mov
popa
add
sub
subb
mov
mov
sub
cmp
stc
pop
insl
pop
sub
shll
lret
lcall
dec
add
or
sub
ss
shrb
xchg
and
jmp
sar
adc
mov
adcl
jb
filds
push
call
cwtl
jae
sub
or
repnz
nop
ficoms
adc
inc
in
mov
mov
jnp
cs
pop
sub
push
inc
mull
pop
movsb
mov
std
or
inc
test
inc
adc
add
mov
jmp
inc
xor
xchg
jge
jb
xchg
sahf
jl
lret
xchg
mov
mov
dec
jb
rcll
loope
out
dec
or
test
rcr
cmp
out
addr16
outsl
fisttpl
int3
cmp
push
std
shll
ljmp
imull
pusha
adc
lds
pop
or
lcall
and
out
lock
mov
cmp
ja
pop
pop
mov
dec
cld
dec
das
jle
les
cmpsl
ljmp
sbb
push
sub
xor
xchg
daa
out
je
fnstcw
dec
lcall
iret
add
shlb
popf
xchg
shlb
stos
mov
fcomp
mov
ret
dec
lcall
je
lahf
fld
loope
push
pop
stos
mov
pop
pop
insl
xchg
cmp
pushl
outsb
pop
roll
ret
pop
int
jno
mov
and
jns
mov
mov
lods
hlt
das
xor
sub
clc
std
pop
adc
int3
ja
ds
jbe
test
or
jb
inc
mov
push
repnz
fisubrs
test
inc
mov
xor
into
or
ret
lret
test
addr16
jae
lret
outsl
fistl
mov
xor
std
sub
mov
insl
ljmp
movsl
inc
push
addr16
jo
incb
xchg
push
jns
callw
fsubl
stos
xor
nop
dec
out
mov
mov
xorl
test
mov
test
int
xchg
vpsubusw
fists
paddsb
adc
xchg
xchg
stos
test
pop
push
cmpsb
dec
xor
outsb
cmp
push
add
popa
shr
addr16
adc
jbe
add
movsl
mov
shlb
sahf
sbb
lahf
push
fistpl
aaa
shrl
ret
jns
mov
or
test
repnz
int
inc
cli
mov
adc
adc
cs
sub
adc
jmp
mov
pusha
imul
jae
add
pop
in
imul
sbb
les
imul
mov
dec
hlt
mov
int3
int
mov
sbb
int
mov
ljmp
lret
pop
mov
fwait
adc
adc
daa
xor
mov
inc
mov
inc
sub
jecxz
les
loope
or
pop
adc
arpl
cmpsb
daa
adc
sub
cmp
fmuls
lahf
mov
arpl
dec
int3
push
mov
mov
mov
decl
shll
fsubrp
repz
adc
sbb
insl
gs
aam
push
mov
cmc
fs
jg
jb
sbb
inc
lock
hlt
cmp
fdiv
sbb
ds
push
mov
int
pop
jnp
je
add
clc
in
imul
outsl
das
xor
adc
push
arpl
mov
fsubs
push
leave
insl
int3
xor
cmp
popa
add
lock
and
in
xchg
or
fwait
pop
cwtl
dec
push
and
fadds
repz
push
sarb
inc
stos
xchg
mov
and
js
and
imul
sahf
clc
clc
movsl
dec
jmp
mov
or
xor
mov
lods
sbb
xor
dec
inc
cmpsl
jp
in
popa
and
fwait
rcll
ljmp
aam
cmp
add
push
cltd
xor
mov
or
push
cld
leave
cmc
mov
es
in
jg
pop
pop
push
adc
fsubs
or
add
enter
mov
xor
xchg
jg
pushf
xor
std
les
ret
mov
das
pop
add
inc
mov
out
divb
pop
inc
xor
shrb
sub
jb
inc
aam
xor
mov
aas
rcl
ficoml
popf
es
shll
push
ja
insl
pop
ss
push
out
add
xor
cmp
cmpsb
outsb
fnsave
jge
int3
xor
pushf
loopne
sahf
xor
xchg
pop
lods
dec
or
mov
or
stc
inc
push
andl
stc
inc
cmpsl
loopne
adc
mov
adc
push
mov
dec
sbb
arpl
aaa
inc
outsl
mov
orl
mov
adc
or
popf
push
ss
xchg
call
aaa
addr16
outsb
jno
mov
dec
rcr
in
popl
inc
popf
out
fldenv
dec
inc
and
push
add
ljmp
cmp
xchg
sbb
mov
out
add
out
jno
mov
jne
xchg
pop
in
mov
loope
cmp
push
lcall
mov
scas
jno
push
pop
push
notl
out
dec
out
and
adc
js
in
cmpsb
pop
dec
pusha
lods
and
pop
push
ret
stos
pop
jb
and
jo
cmp
out
popa
in
and
sbbl
addr16
int3
xchg
dec
je
and
enter
fnsave
and
mov
cmp
cwtl
outsl
mov
push
xchg
inc
lcall
sub
insl
nop
push
fstps
or
dec
pop
mov
enter
push
inc
ljmp
jmp
inc
mov
dec
test
lcall
cmovo
in
dec
pushf
mov
outsb
adc
and
inc
call
lcall
pop
xchg
mov
mov
cmc
dec
shrb
pop
les
mov
rcl
mov
pop
dec
push
cmpsb
sbb
mov
inc
mov
shll
bound
ljmp
sub
scas
fbstp
addr16
jg
cs
sbb
in
dec
icebp
popa
add
cwtl
add
xchg
sbb
dec
push
push
push
adc
jno
dec
sti
jae
sbb
xlat
adc
dec
pop
and
ds
jg
nop
jmp
sbb
push
hlt
gs
push
xor
jne
and
shrb
movsb
add
push
adc
into
fsub
popf
imul
or
and
inc
mov
mov
add
adc
sub
xchg
cli
cs
push
insl
mov
adc
je
push
ret
jge
enter
or
sbb
loopne
xchg
cmp
sarl
cmp
xchg
sbb
insl
cli
add
push
inc
xlat
popf
sub
adc
movsb
mov
cmpl
xchg
pusha
jge
sub
sbb
sub
addr16
cmp
jg
jp
cmpsb
je
out
xchg
sub
jmp
adc
sbb
pusha
leave
cmc
fstl
shlb
mov
mov
xlat
fs
adc
bound
add
dec
sbb
jnp
inc
out
repnz
call
loopne
cmpsb
jbe
dec
or
test
add
jmp
pop
pop
dec
or
sbb
cmpsl
imulb
stc
iret
in
ss
pop
ret
into
adc
int
or
inc
or
xchg
clc
stc
mov
sub
and
dec
faddp
and
add
lods
mov
jmp
pop
or
xor
cmpsb
movsb
push
jno
inc
or
popa
jne
dec
inc
jp
sbb
adc
shl
pop
mov
pop
push
xor
aas
adc
in
xor
loop
rcrl
dec
xor
adc
cmpsl
or
dec
sbb
popa
push
pop
mov
sbb
in
xchg
add
daa
daa
cmpsb
xlat
js
cmp
pop
aad
and
xchg
mov
popf
add
push
testl
or
arpl
lret
xor
std
movsl
pushf
xchg
pushf
add
andb
shll
xor
loopne
xor
insl
pop
adc
pop
add
add
lea
push
adc
sub
lds
jae
add
imul
xchg
jl
xchg
sub
lods
fbld
movb
cmp
testb
push
movsb
fsts
imul
jns
or
cwtl
imul
addb
mov
stos
imul
aaa
jbe
push
pop
lds
mov
outsl
mov
sub
ret
enter
divb
mov
loop
inc
pop
mov
xor
data16
imul
std
push
push
in
cmp
cmp
mov
and
js
dec
cmpsb
outsl
add
adc
xor
ljmp
mov
cld
push
ss
add
std
stos
add
pop
and
dec
inc
scas
test
push
xchg
fxch
fcompl
inc
pop
inc
bound
mov
add
push
xchg
jmp
js
js
jecxz
and
int
mov
data16
jp
push
push
js
cltd
add
movsl
data16
add
adc
inc
rorl
jne
shlb
imul
idiv
lea
aad
in
out
aad
xchg
add
loopne
push
xor
xchg
mov
and
push
push
lret
ljmp
mov
stos
ret
inc
cmp
cmpb
sbb
and
xchg
fxch
pop
adc
cmc
xchg
xchg
es
or
test
jns,pn
mov
arpl
test
sub
movsl
sarl
and
push
rorb
xchg
test
push
cmp
or
pop
sub
test
xor
mov
adc
mov
cs
dec
jmp
addr16
sbb
and
pop
test
aad
ja
mov
je
pop
imul
aam
dec
sbb
hlt
ss
imul
in
pop
cmp
ret
adc
jle
jl
dec
fnsave
fstps
and
cmp
dec
into
popa
xor
repnz
push
push
cli
and
and
add
test
push
psubq
xor
je
repnz
cmp
push
std
mov
ja
inc
jge
clc
adc
out
or
arpl
loopne
lock
imul
rcr
mov
push
jnp
clc
sub
scas
sbb
and
fldt
sbb
push
ss
mov
mov
pop
mov
pop
outsl
ds
sbb
stc
sub
mov
pop
jl
mov
mov
addr16
icebp
inc
pop
push
mov
stos
mov
push
pop
mov
repnz
fstl
add
cmp
cmpsl
pop
das
dec
inc
sub
lds
and
inc
lods
std
dec
xchg
mov
in
and
add
pop
mov
cmpsb
pop
dec
repz
dec
into
repnz
cmc
cli
cmpsb
adc
out
jle
test
jge
add
cmp
cmpsb
dec
adc
mov
mov
jb
pushf
movsb
out
movsb
mov
and
push
jns
mov
push
adc
adc
push
pop
jbe
and
and
jle
jmp
shl
inc
cld
cs
jl
nop
cld
ret
mov
es
sub
nop
xor
jmp
inc
push
cmp
call
add
es
mov
or
fwait
mov
xchg
add
jle
add
je
jl
cmpsl
ret
out
es
mov
cmp
addb
add
outsl
int
mov
push
and
jne
hlt
inc
out
and
shl
loopne
test
inc
cld
add
test
or
dec
mov
sub
pop
jp
mov
mov
push
cli
dec
cli
data16
cs
mov
sub
sti
add
lods
xor
jmp
push
subb
adc
out
insl
fsubrl
call
mov
sbb
scas
leave
mov
iret
and
bound
mov
jmp
jno
mov
stos
adc
and
add
xor
lock
lret
push
mov
xchg
adc
hlt
mov
cmpsl
lret
in
int3
ja
adcl
loop
in
mov
cli
outsl
lret
das
pop
cld
insl
aad
jne
jbe
ss
and
movsb
mov
mov
cwtl
inc
xor
jecxz
addb
out
push
cwtl
roll
mov
mov
sar
and
ret
popf
sub
mov
lret
sbb
lahf
mov
add
lahf
xchg
addr16
repz
xchg
cli
or
hlt
rclb
cli
outsb
jb
pop
rcrl
fs
call
frstor
repnz
mov
and
mov
xchg
pop
sbbl
aad
mov
sbb
mov
mov
inc
dec
rol
icebp
push
je
lock
inc
adc
jbe
jnp
orl
and
lcall
push
std
xor
mov
sti
push
xchg
mov
or
out
or
loop
xchg
mov
in
pop
out
sbb
push
inc
cmp
icebp
add
sbb
jmp
jae
push
jae
decl
test
xor
scas
data16
or
jecxz
jle
fs
xor
adc
and
add
jno
shl
iret
mov
mov
insl
das
iret
in
sbb
xchg
ljmp
lahf
test
dec
dec
test
xchg
or
into
mov
outsb
pop
fisubrs
aas
adc
xor
enter
fwait
gs
dec
lcall
mov
test
push
fistpll
das
mov
xorl
adc
addr16
cmpsl
jnp
sbb
flds
inc
fisttps
add
adc
sbb
inc
test
arpl
aas
jb
lods
nop
xor
in
jb
lock
push
in
mov
orl
inc
repnz
sub
hlt
sub
subl
into
fwait
call
sbb
js
das
call
push
shl
xor
push
icebp
jae
mov
xor
mov
jg
jno,pn
cmp
gs
sub
jg
push
pop
aas
aam
imul
rcrb
das
les
mov
nop
sbb
arpl
push
push
fists
jle
adc
fdivl
add
imul
rcrb
or
das
ret
push
insl
xor
mov
jle
sbb
rcrb
stos
pop
loope
jno
pushf
mov
add
push
stos
dec
push
ja
ljmp
lods
cmp
les
inc
xchg
sbb
mov
pushf
push
or
adc
aam
sbb
adc
xor
pop
add
pop
adc
int
int
in
nop
xchg
icebp
std
in
adc
mull
adc
repz
or
mov
push
ret
sub
mov
jmp
and
clc
arpl
add
xor
aas
mov
jno
mov
pop
push
jge
int3
lahf
push
outsb
xchg
hlt
dec
ret
jg
int3
adc
pop
add
sub
popa
aam
dec
adc
cmpsb
jle
addl
imul
push
addl
xorb
das
and
sub
push
inc
rclb
jnp
inc
push
insl
movsb
pop
or
sbb
pop
rol
subb
xchg
adc
sub
or
movsl
cld
sub
movsl
ss
or
pop
push
lock
cmp
xchg
push
xchg
dec
loope
xor
inc
shrl
adc
sub
repnz
or
or
xor
push
dec
lcall
xchg
xchg
push
mov
lds
inc
fstpl
dec
adc
pop
imul
pop
jns
es
mov
adc
jno
push
popf
push
jmp
jne
adc
addr16
adc
lds
xchg
jmp
inc
arpl
add
sbb
data16
mov
lea
dec
shll
add
dec
mov
aam
pop
sbb
jo
cmp
loop
push
and
cmp
jmp
lcall
push
cmp
loop
test
mov
push
aaa
mov
mov
xchg
pushf
lret
fdivs
seta
mov
stc
sub
dec
pop
or
xor
sarb
add
and
decl
mov
sub
and
cmpsl
stos
shlb
pop
sbb
add
int3
push
mov
mov
shrl
jecxz
mov
lcall
pop
or
dec
pop
mov
std
sbb
js
aas
mov
inc
out
lock
pop
lea
repnz
inc
xor
int3
push
add
ja
cmp
push
jecxz
xchg
mov
xchg
pop
jp
fldcw
push
dec
ror
jae
outsl
lahf
sub
add
andl
shrl
shlb
loop
and
popa
mov
jne
out
cli
cld
cltd
outsl
sti
pop
xchg
in
xchg
inc
jle
test
out
lods
lcall
pusha
fxch
jae
xchg
lahf
cmpsb
jecxz
stos
inc
add
and
push
lods
and
popf
insl
fs
inc
adcb
movsl
add
movsl
lods
cmp
mov
negb
icebp
data16
aaa
hlt
pop
or
cmpl
cltd
dec
sub
stos
popa
repz
insb
mov
ja
inc
jo
in
xchg
sbb
in
push
inc
fidivs
push
or
sarb
push
jo
xlat
xchg
iret
cltd
int
roll
repnz
mov
popa
out
cld
add
fstpl
inc
sbb
orb
dec
jecxz
push
jecxz
movl
inc
and
repnz
es
std
xor
or
fcmovbe
sbb
cmc
push
fwait
dec
jnp
cs
daa
rcrb
mov
loopne
mov
gs
push
cmpsl
inc
in
add
addb
mov
mov
test
cmp
cmp
ds
adc
stos
cmp
jne
add
sub
cmpsl
enter
fildll
dec
pusha
scas
fistl
pop
movsb
fld
or
call
rcrl
mov
mov
sub
ds
or
xchg
repnz
pop
jmp
pushf
movsl
sbb
shl
stos
fldl
mov
leave
jg
jae
popf
out
xor
add
in
add
and
xlat
not
andl
mov
rclb
fidivs
repnz
into
cmp
push
cmp
fistl
mov
jl
mov
adc
xchg
aad
jg
frstor
xchg
inc
enter
stc
pop
cmp
cmpsl
mov
sar
lds
fs
in
jo
pop
add
and
test
mov
mov
inc
aad
cwtl
mov
or
add
cmp
jo
out
cs
testl
and
lret
int
loop
xor
popf
nop
ja
ret
cwtl
cmp
pop
mov
or
xor
scas
sub
pop
aad
jecxz
cmc
mov
pop
xchg
xor
fisttpll
mov
movsl
call
jae
lret
and
stc
pusha
xchg
mov
les
cmp
into
pusha
mov
fdivrs
cs
sub
stos
xor
mov
imull
jns
mov
pushf
test
mov
adc
sub
and
les
sbb
aas
dec
mov
loope
nop
fdivs
stos
iret
push
test
cmp
mov
cld
push
cs
clc
popa
pop
leave
jne
lods
and
xchg
add
adc
lea
test
mov
xlat
loopne
lret
push
addb
ret
insb
sub
sbb
out
add
cmp
in
mov
adc
cmp
inc
jo
mov
sub
in
add
mov
lods
mov
dec
mov
xor
pop
clc
data16
loopne
ret
rorl
movsb
das
daa
pop
mov
add
loope
rcrb
mov
in
sbb
mov
ds
ret
or
testb
es
or
iret
loope
pushf
lea
sbb
fldl
aas
js
scas
iret
xlat
lret
adc
addr16
in
mov
pushf
fnstcw
sbb
push
leave
repz
rcl
jo
xchg
aas
ret
outsb
jge
sbb
and
xlat
pop
adc
or
les
movsl
xchg
xlat
inc
imul
adc
dec
xchg
xor
les
nop
rclb
cmp
idivl
mov
daa
lods
jae
movsl
sub
in
xchg
add
stc
and
jb
mov
insl
xor
sub
sub
push
andl
rcl
xchg
sbb
cmp
pop
imul
aas
mov
cmp
les
addr16
shr
roll
inc
nop
out
sti
xor
jo
mov
aad
sub
xchg
enter
push
popf
scas
pop
pop
sahf
xor
xchg
aam
xchg
ficomps
cltd
in
shll
pop
test
sbb
les
mov
ret
loope
and
stos
dec
aad
lea
jne
push
add
pusha
and
les
mov
int3
cmp
inc
jcxz
data16
fistpll
mov
cli
push
lods
mov
push
test
pop
dec
nop
mov
or
add
lds
test
mov
push
push
shlb
fldenv
inc
push
push
arpl
int3
xchg
sbb
pop
cld
std
xor
xor
cwtl
xchg
fcomi
sbb
adc
dec
pop
jae
fwait
pusha
rclb
xor
cmc
mov
sub
xchg
arpl
icebp
jmp
mov
mov
inc
test
sub
idiv
aam
mov
inc
iret
fisttpl
and
rcll
lock
fnsave
lret
stc
dec
sti
subb
pop
add
jne
inc
jge
leave
ljmp
mov
inc
adc
jnp
mov
sbb
dec
adc
shll
pop
movsl
mov
mov
int
xlat
mov
and
cs
cmp
mov
call
das
push
push
mov
ror
into
mov
das
inc
dec
rolb
push
mov
out
lahf
push
popa
add
push
xor
ret
pop
adc
push
cmpsl
mov
inc
cmp
mov
pushf
jle
mov
mov
push
insl
sub
fstp
cs
inc
mov
sub
mov
push
out
pusha
aad
lret
nop
cmp
push
loop
decb
dec
push
add
mov
lea
sub
cmpl
loope
mov
es
jns
xchg
mov
mov
fistps
pop
movsb
es
lods
pop
into
sahf
lock
and
jbe
mov
mov
or
lret
add
js
sbb
les
clc
lret
int3
out
pop
jp
cmp
mov
jg
or
or
sub
pop
inc
dec
add
les
scas
outsl
cmp
or
insb
aad
stos
mov
sub
hlt
sarl
jne
push
enter
sar
punpckldq
mov
dec
ja,pn
mov
aas
inc
dec
lret
jns
aad
sbb
sbb
inc
shlb
pop
sbb
imul
or
sti
subl
mov
mov
mov
push
and
ss
mov
sub
push
hlt
insb
sub
xchg
repz
and
xchg
push
enter
iret
out
pop
sub
arpl
dec
das
das
adc
ja
inc
xchg
xor
test
stos
jp
cmpsl
imul
fldt
push
jne
fdiv
into
push
popf
adcb
sti
shr
sbb
mov
rolb
int3
fisttpll
stos
repnz
fisttpl
mov
out
cmp
xor
int3
mov
and
xchg
adc
dec
inc
jae
cmpsl
mov
xchg
dec
cmpsl
push
inc
test
fs
dec
lret
pop
lret
test
jmp
fldl
cmp
testl
outsb
imul
outsl
push
sub
pop
lcall
in
lods
hlt
popf
inc
shr
pop
jbe
adc
lock
leave
inc
push
movsb
or
adc
lret
sbb
mov
mov
xor
fs
add
adc
outsb
les
pushf
or
jbe
fcomps
or
loop
jo
lar
mov
lods
jnp
fistl
mov
gs
inc
negb
sbb
jg
jns
dec
aaa
sbbb
testb
sbb
fs
mov
out
cld
xchg
arpl
add
ret
jbe
outsl
xor
mov
shll
sahf
jmp
cmc
popa
xchg
in
sub
dec
push
sub
sub
xchg
sarl
testb
mov
mov
int3
mov
dec
mov
fldl
and
pushf
push
out
mov
mov
or
scas
test
popa
sbb
lret
jmp
pop
in
push
jns
mov
cmp
push
and
jecxz
stos
cmpl
mov
movsl
fdivl
xor
pusha
or
add
icebp
pop
jp
sarb
nop
xchg
pushf
std
jnp
push
insb
outsl
clc
mov
ret
mov
mov
cmp
jbe
sub
sbb
mov
int
in
push
xor
int3
in
mov
xor
sti
pushf
scas
xorb
ret
mov
fwait
adc
push
or
and
loop
stc
cmp
jo
shlb
outsl
pop
enter
ljmp
lods
cld
dec
add
ds
dec
ret
insb
cwtl
push
test
and
daa
outsl
jne
push
push
push
cli
add
fisubrl
cmp
and
dec
jbe
jp
cmp
jl
sbb
mov
fidivl
dec
dec
pop
jno
cmp
movsl
sbb
dec
xchg
mov
push
add
jge
stos
lods
outsb
je
jne
or
mov
adc
and
addr16
inc
adc
lret
in
cmc
xor
xorb
insl
add
push
mov
cmpsl
sub
data16
inc
loopne
pop
leave
jno
cmp
cmp
xchg
sahf
dec
fstps
jmp
ret
mov
cmp
lods
aad
fistpl
clc
add
loop
rcrl
cmpsb
fidivs
push
pop
mov
out
mov
das
push
mov
je
movl
or
adc
stos
loop
andb
mov
add
pop
pop
test
dec
fadd
lods
js
mov
test
sub
stc
jmp
filds
jb
push
fnstsw
rorl
es
aad
cmpsl
loope
pop
push
fdivrl
leave
mov
sub
rorb
push
stos
jle
mov
shrb
adc
pop
dec
fwait
loop
pusha
mov
pusha
xchg
fs
mov
mov
add
cwtl
push
pop
arpl
cli
pop
pop
pop
sti
add
xor
scas
lahf
int3
push
pop
repz
mov
loope
push
mov
dec
ja
jbe
scas
out
or
add
and
xchg
hlt
jecxz
movsl
es
insl
out
imul
fdivl
sti
inc
lret
bound
add
aad
add
int
cmp
mov
add
repz
jbe
mov
jne
xor
pop
imul
sti
mov
inc
jp
sub
aas
clc
loope
fidivl
fldt
sti
orb
push
pop
xchg
stc
adc
sbb
fidivs
jns
jne
jp
push
scas
xchg
jecxz
rcr
push
cmp
xor
cmpsb
pop
fmul
push
push
sbb
in
xchg
mulb
sbb
ljmp
icebp
shlb
add
cmc
add
push
lods
xor
dec
cmp
xor
dec
dec
cmp
lods
xchg
pop
sahf
add
stos
sub
push
xchg
mov
outsl
mov
in
scas
xchg
sti
shrd
mov
jmp
out
or
dec
inc
aas
mov
push
imulb
and
push
lahf
cmp
fdivr
pushf
fidivl
data16
addr16
pop
mov
stos
cmpsl
or
stos
cwtl
rclb
fisubrl
shl
addr16
rclb
push
aas
scas
dec
iret
mov
lea
jo
xchg
mov
jecxz
cmp
xor
outsb
add
or
xor
iret
jno
mov
fucom
loopne
movsl
jno
and
sub
xchg
mov
mov
arpl
pushf
pop
xchg
ljmp
pop
mov
xchg
push
out
pop
out
add
mov
mov
cwtl
in
int
jbe
popf
sbb
push
mov
popf
lret
ds
mov
lods
mov
push
pop
inc
sub
cs
popl
push
jno
xchg
dec
pop
int
add
jp
stos
pop
hlt
add
inc
outsb
jb
xrelease
pop
xchg
mov
mov
push
ds
int3
arpl
push
cmp
pop
mov
or
sbb
jb
dec
fcmovbe
mov
pop
sti
push
in
pop
leave
imul
loope
loope
jmp
je
clc
xor
push
mov
inc
cwtl
inc
add
adc
lds
pop
jno
xor
jnp
int3
jo
inc
mov
scas
inc
aas
sub
cli
out
xor
jp
cmp
popf
lods
inc
popf
mov
ficompl
shrl
pop
add
arpl
and
in
jne
xlat
cmc
mov
pop
jmp
out
mov
dec
or
push
sar
bound
repz
xor
ds
jae
cmpsl
mov
xchg
mov
mov
fcomps
insl
cmpsb
push
out
inc
popf
outsb
int
jae
test
and
test
imulb
ds
lods
inc
sub
out
mov
xor
pop
icebp
dec
sub
mov
daa
jbe
xor
and
arpl
jno
mov
jno
mov
push
aam
push
sub
push
scas
or
leave
pusha
movsb
mov
jae
subl
push
outsl
outsl
mov
push
mov
add
or
pusha
push
mov
xchg
fisubl
sbb
inc
faddl
mov
pop
pop
sub
out
fmull
adc
mov
pop
sbb
andl
mov
push
sbbb
je
xor
push
imul
in
imul
adc
xor
mov
stos
int
or
mov
inc
in
stos
enter
push
xor
test
or
inc
ds
cwtl
cmpsl
jne
aam
dec
iret
push
fimuls
jbe
xor
pop
xor
jg
jae
clc
push
jmp
hlt
jg
mov
jp
fucomip
movsb
insl
cmp
pop
sti
loopne
imul
cmc
loopne
xchg
and
pop
pusha
iret
shr
push
sub
inc
lds
dec
in
fisubrl
fsubrp
sub
nop
lods
cltd
sahf
loope
and
jno
js
cmp
mov
cmpb
sarl
mov
push
ljmp
bound
popl
movsb
push
arpl
in
cmp
xchg
jae
mov
jge
dec
mov
sub
xchg
lea
jnp
pusha
push
fadds
mov
xor
lods
scas
lahf
push
mov
sahf
addr16
mov
sbb
insb
add
aad
in
cmp
clc
push
or
push
xor
xchg
mov
dec
cmp
lods
mov
out
or
jp
xchg
adc
xchg
imul
aad
les
pusha
adc
push
scas
lods
jl
or
test
jne
fcmovbe
fistps
icebp
scas
jp
enter
sbb
mov
les
loopne
in
push
pop
sahf
push
jo
pop
jp
pop
push
lret
jno
scas
jae
adc
shll
ljmp
jg
add
mov
das
pushl
jnp
data16
sub
mov
pop
rorl
push
subw
push
popa
mov
pusha
and
fwait
pop
add
cmp
lds
jle
movsb
hlt
popf
pop
cmp
mov
cmp
jb
xchg
ds
cmp
cmp
push
cltd
out
xor
out
and
mov
lcall
push
bound
mov
lcall
adc
aad
es
dec
dec
and
leave
sub
cmpsb
loope
fisttpl
cs
sub
xchg
push
stc
push
test
lock
pop
aaa
nop
inc
in
loopne
xor
stc
loop
movsb
sbbl
jb
cmp
jge
sbb
mul
sub
add
or
pop
xchg
jno
add
mov
aad
mov
and
mov
aad
outsl
mov
jo
movsb
adcl
sub
adc
fnstsw
dec
insb
iret
aaa
dec
xlat
cmpsb
pop
aas
jecxz
cli
inc
cmpsl
dec
add
inc
mov
cmp
cli
sub
rcll
pop
xlat
or
aas
out
cmpsb
mov
sub
push
sub
enter
inc
int3
inc
mov
aas
push
cmp
not
fdivl
fistpl
repnz
ret
adc
cmp
jns
sbb
xor
adc
adc
out
inc
cltd
mov
das
mov
pop
out
pop
ror
jl
sahf
push
data16
dec
cmpsb
mov
aaa
js
loope
test
imul
jo
cmpsb
push
dec
popa
push
ss
xor
into
mov
inc
mov
imul
shll
inc
inc
dec
dec
fldl2t
mov
xchg
test
dec
xor
sti
fs
push
pop
insb
imul
rcr
es
inc
aad
inc
sbb
repnz
and
movsl
add
addr16
dec
addb
push
dec
jo
pop
fisttps
push
movsl
popa
inc
js
gs
imul
inc
push
cmp
imul
push
and
cmpsl
insl
push
fstps
mov
aaa
pop
lret
lock
and
stc
test
jmp
cltd
dec
out
gs
and
repnz
xor
mov
jb
daa
jg
push
jmp
outsl
shl
stos
insl
cmp
cmp
cmp
fdivs
out
in
xor
jae
sbb
cmp
mov
les
insl
ljmp
cltd
push
mov
push
jp
subb
push
stos
jae
ja
lods
fisttpl
aad
mov
das
jne
sub
popf
push
pop
adc
insb
mov
xchg
stc
cli
adc
mov
pop
sbb
mov
inc
xchg
pop
test
xchg
mov
push
les
fisttpl
popa
dec
and
aad
int
dec
sub
dec
sti
xchg
and
leave
sbb
sbb
sbb
xchg
xchg
popf
mov
insl
rorl
adc
push
fwait
mov
lahf
out
jge
xchg
jge
ffree
dec
xor
sub
mov
rclb
and
xchg
cmp
pop
jp
cmp
jno
ljmp
call
cmp
jne
mov
sbb
cli
cmc
pusha
into
xor
cltd
mov
adc
je
ja
imul
cmc
lea
dec
adc
enter
pusha
outsb
sbb
xor
scas
dec
cmp
xchg
pop
outsl
in
lret
and
daa
lcall
stos
or
popf
cmp
cmpsb
cmp
cmpsb
mov
mov
mov
into
lahf
lock
mov
mov
test
pop
xchg
int
aad
mov
mov
cs
xor
xor
sbb
add
mov
fstpl
mov
fcoml
dec
jno
jmp
testl
sub
cmp
jge
fisubrl
icebp
add
ret
jl
jne
mov
rcr
mov
cld
fisttpl
ja
jbe
sbb
pop
sbb
mov
cmpsb
js
ja
xor
dec
imul
addr16
lea
sbb
dec
std
fstp
das
bound
inc
inc
pop
fwait
aaa
pop
in
daa
aad
mov
sahf
faddl
mov
mov
fcompl
or
pop
lock
out
adc
mov
ret
jecxz
xlat
xor
rcrb
pop
sbb
push
dec
add
ret
adcl
aam
cltd
out
and
fcoml
jp
daa
jo
dec
jl
lods
fnstenv
jne
push
rolb
outsl
pop
rcll
xchg
movsb
push
cmpsl
inc
jnp
push
mov
imul
call
call
push
mov
mov
dec
lcall
push
and
and
jg
mov
shlb
push
lods
lret
addr16
fistl
sub
inc
jl
imul
lret
pop
dec
ja
cmpsl
cmp
push
adc
fstps
push
roll
xchg
shlb
add
jge
cld
jne
mov
ds
push
dec
movsl
sub
mov
add
sbbb
and
data16
pop
push
add
cmc
xchg
push
sbbl
jb
hlt
sbb
push
vmread
push
les
pop
cmp
nop
and
repz
dec
mov
push
mov
add
sub
mov
rsm
daa
les
xor
xchg
lds
push
add
adc
fsubs
and
xor
pop
movsb
and
lret
neg
jns
mov
mov
jecxz
fs
test
mov
xor
or
insb
or
cmp
int3
and
daa
and
fldcw
push
cvtpi2ps
mov
cmp
mov
inc
jp
ret
ds
cmpsl
jbe
jecxz
decb
or
les
fnsave
test
mov
inc
inc
and
sub
out
add
mov
or
out
cmp
mov
sub
mov
adc
fdivrs
xor
jnp
iret
inc
lea
pop
mov
icebp
push
jbe
sbb
and
xor
mov
push
jbe
std
and
push
cltd
hlt
out
xor
xchg
shrb
and
adc
into
lods
repnz
mov
scas
dec
dec
pusha
pusha
enter
sbb
pop
or
scas
jae
adc
jo
mov
out
mov
add
sub
fisubrs
rolb
sti
movsl
inc
dec
pushf
out
pop
dec
mov
mov
add
pop
out
and
mov
cmpl
push
mov
push
mov
das
fisttpll
mov
stos
outsl
jb
lret
mov
adcb
jle
lock
mov
cwtl
add
jge
lret
lods
int3
iret
pushf
push
lds
jg
lcall
jb
inc
jb
push
int
xchg
jecxz,pn
lret
jge
xchg
movsb
sbb
pop
push
test
xchg
scas
xor
or
sahf
push
xor
arpl
dec
sarb
pop
mov
cmp
fisttps
ds
repnz
outsl
mov
push
enter
aam
adc
dec
daa
sub
loope
jecxz
ret
imul
and
pop
and
mov
aam
mov
push
ja
cli
adc
imul
dec
adc
sti
es
dec
push
xchg
movlps
jae
xor
out
lds
repnz
xlat
dec
lret
sbb
sbbl
mov
pusha
ret
stc
rol
pop
push
idivl
xchg
dec
cmpsl
jle
pop
frstor
jns
and
mov
dec
and
ret
je
xor
mov
jge
movsb
mov
inc
push
sbb
arpl
cmpsb
lods
pop
push
flds
add
dec
pop
lret
or
mov
cwtl
mov
aaa
inc
sub
fwait
pop
das
rcll
fs
insl
rcrl
int3
cmp
adc
or
lods
loope
std
push
clc
sti
nop
sub
and
inc
inc
ja
hlt
das
jmp
bound
adc
xor
scas
stos
mov
sbb
ror
outsb
fbld
push
stos
sbb
xchg
or
mov
test
push
fbstp
jb
xor
pop
push
push
jmp
pop
jae
gs
sub
mov
add
int3
outsb
loope
les
adcb
mov
cmp
filds
cmpsb
idivl
int3
repz
pop
icebp
jno
cmp
es
inc
test
stos
push
sti
sub
nop
inc
and
jp
pop
mov
ja
pop
data16
inc
sbb
gs
mov
repz
out
pop
inc
xchg
add
dec
add
fsubs
jl
pop
in
mov
inc
mov
rcll
mov
jl
out
mov
sub
lcall
int3
fs
ret
out
aaa
rorb
pop
imul
inc
ds
lret
aaa
jbe
lea
mov
or
xchg
nop
in
inc
cs
dec
stos
std
rcr
add
shll
cmp
incl
popf
sbb
add
mov
insl
popf
xchg
mov
jbe
adc
shrb
sub
rcrl
stos
adcl
push
mov
inc
loopne
gs
mov
add
mov
pop
movsl
inc
cmc
scas
aad
fcmovu
mov
sbb
mov
xor
test
cltd
je
das
inc
push
mov
test
lret
pop
xchg
mov
jnp,pt
pop
push
inc
add
jp
orl
push
adc
sahf
imul
cltd
cwtl
xor
push
sub
mov
fs
pop
fstl
add
pop
mov
mov
loope
jp
icebp
fcmovu
xor
out
aam
movsl
cmp
push
push
lods
dec
pop
cmpsl
xor
ljmp
jge
testb
xlat
aam
pop
shrb
in
and
push
fcompl
push
mov
xchg
jp
imul
cmp
aaa
xchg
add
pop
xor
dec
adc
push
xchg
sbb
jo
in
iret
mov
roll
rorl
shr
mov
cmp
xchg
mov
das
test
les
fldl
and
mov
cmp
std
sub
adcl
in
add
icebp
fidivs
dec
xor
notl
ficoml
fistl
adc
dec
jl
sahf
xor
cmpsl
add
xor
imul
divl
je
mov
loope
add
add
and
add
sub
xor
dec
cmp
loopne
data16
mov
dec
inc
lea
mov
fucomip
xchg
imul
sbb
lods
pop
lcall
out
xchg
xchg
repnz
popf
ja
inc
pop
scas
xchg
fbstp
jecxz
dec
cmpsb
cli
pop
arpl
and
out
or
add
sbb
test
sub
clc
pop
push
sub
inc
mov
pop
aam
adc
sub
xchg
push
pop
lcall
jg
cltd
mov
inc
in
adc
cmp
push
shr
mov
xchg
je
xor
jmp
add
ss
into
daa
and
imul
xchg
jmp
inc
inc
pop
and
mov
mov
mov
arpl
daa
jns
and
adc
and
mov
fstp
mov
lret
adc
push
pop
nop
add
mov
inc
cmp
or
dec
adc
push
mov
push
aas
scas
dec
adc
pop
mov
adc
add
fldt
jle
push
sbb
pop
jbe
pop
or
out
lret
leave
push
push
mov
push
pop
xor
adc
mov
or
xchg
cwtl
pop
repz
add
idiv
cwtl
mov
aam
jl
sub
sub
sbb
adc
insb
das
test
sarb
pop
sub
pop
mov
lret
lea
mov
nop
sti
cs
jg
loop
movsb
mov
push
fldpi
xor
sahf
insl
movsb
inc
jecxz
mov
and
lret
mov
aad
cmp
dec
dec
xor
out
jg
lods
jecxz
fcomi
call
test
sub
adc
pop
adc
out
xor
push
jbe
mov
or
fwait
sub
mov
cmp
fisubl
lcall
add
add
adc
sub
adc
test
fsts
or
pop
sbb
pop
jo
shrb
leave
dec
call
test
push
cmc
test
clc
cmp
push
push
mov
pop
leave
ss
inc
push
sbb
mov
clc
mov
add
xlat
out
fisttps
cmpsb
inc
in
les
dec
imul
ret
or
in
lret
mov
in
aas
fwait
add
sub
sub
bound
cwtl
inc
and
sbb
jbe
in
mov
sahf
pop
je
popa
add
loop
cld
mov
mov
add
leave
hlt
fsubrs
fldt
dec
push
addr16
ret
fwait
dec
das
inc
push
and
imulb
cmp
jb
pop
pop
add
dec
jb
or
stos
dec
dec
es
xchg
and
negb
sti
mov
pushf
push
xchg
adc
jo
repz
add
cmp
jmp
shlb
mov
dec
xchg
or
popf
int3
push
inc
sbb
into
mov
cmp
and
inc
push
xchg
imul
push
xor
aad
pushf
repz
lahf
mov
mov
jns
in
aas
iret
testb
and
mov
mov
mov
lds
push
mov
sahf
insl
push
jle
daa
mov
daa
scas
mov
iret
add
add
sbb
mov
pop
mov
dec
bound
mov
sub
shll
loopne
xchg
dec
rolb
push
push
or
scas
push
add
pop
movsl
pop
lods
das
jno
shlb
ja
cltd
and
sub
or
mov
and
repnz
xor
mov
adc
jg
sbb
cmp
sub
lea
popf
adc
iret
xor
mov
push
mov
rolb
cld
dec
add
xchg
scas
lahf
and
ljmp
push
adc
sti
jne
movsb
jno
shl
sbb
cmp
and
dec
rorb
in
mov
mov
mov
or
and
and
cwtl
mov
mov
push
cwtl
in
mov
mov
and
and
jbe
imul
mov
imul
jecxz
mov
outsb
lahf
sbb
loop
pop
imull
xchg
sub
cmp
sbb
faddl
imul
imul
dec
or
cmp
cmc
inc
gs
xchg
sarb
mov
sbb
xor
push
jecxz
test
cmc
mov
repnz
sbb
dec
divb
mov
mov
and
push
aas
dec
mov
inc
jg
add
or
int3
xchg
mov
lods
jno
cltd
jne
jle
aas
in
sahf
mov
dec
mov
and
mov
sub
pop
in
inc
out
je
iret
push
add
xchg
sbb
movsb
outsl
clc
cmp
hlt
inc
xor
mull
fisubrs
xor
pop
cli
pop
int
loopne
fdivs
jns
fwait
rorb
fcoml
nop
push
mov
lods
mov
mov
outsl
mov
add
mov
mov
mov
jnp
lods
sbb
je
sub
sbb
test
adc
arpl
dec
or
add
adc
icebp
andl
sti
cmp
push
gs
mov
jmp
in
ss
dec
les
and
cli
and
cmp
outsb
adc
pop
push
jb
dec
je
outsb
dec
add
fs
adcb
adc
mov
stos
sbb
pop
jecxz
mov
cld
push
lcall
in
sbb
push
out
cmp
je
aas
mov
cmp
sti
pop
adc
lret
xor
cltd
stc
sub
and
dec
jne
mov
call
leave
imul
cmp
sbb
cwtl
sub
xchg
ficompl
inc
and
dec
mov
pop
inc
cmpsb
gs
mov
out
jmp
aaa
jbe
std
mov
inc
leave
and
outsl
xchg
lret
out
leave
cwtl
adc
jno
sbb
and
movsb
adcl
and
mov
jb
movsb
add
jb
xor
mov
adc
mov
mov
sbb
out
push
mov
in
adc
ds
fsts
je
xchg
es
cmp
in
loopne
adc
lcall
push
pop
dec
xchg
movsb
mov
mov
xchg
adc
movsl
adc
test
ljmp
out
xchg
mov
mov
xchg
enter
mov
push
pushf
insl
outsb
xor
adc
mov
push
mov
mov
repnz
fsubr
sbb
loopne
add
and
loopne
jecxz
cmc
adc
pop
out
jge
call
iret
ss
xor
jl
push
fs
and
cmp
add
aam
dec
inc
clc
sub
sbb
fs
js
sbbb
std
dec
out
xchg
sub
sbb
mov
movswl
movsb
notb
and
leave
jne
mov
int
inc
mov
test
shlb
and
out
push
adc
mov
movsl
dec
outsb
cmpsl
in
je
lods
mov
or
lods
and
xchg
mov
jp
push
mov
cs
arpl
popa
mov
ljmp
mov
jno
arpl
lock
std
xor
mov
push
cmp
pop
fwait
sbb
xchg
or
sbb
fucom
or
fwait
push
orl
mov
arpl
data16
das
lods
push
jo
xlat
ds
lea
cmp
int3
test
lods
or
mov
out
std
mov
movsb
and
pop
add
mov
hlt
jmp
inc
insl
pop
mov
aas
cwtl
test
mov
push
xlat
cmp
js
xchg
or
or
push
xchg
movsb
in
dec
inc
cmpsb
hlt
add
mov
push
fsubrl
push
xchg
hlt
pop
push
jg
sbb
adc
dec
and
and
leave
mov
jns
enter
add
xor
insl
hlt
jg,pt
xchg
test
jge
or
ficoms
sub
in
mov
adc
pop
scas
xor
or
shll
scas
adc
sbb
leave
inc
xor
or
cmp
imul
push
xchg
xchg
gs
xor
xor
int3
leave
lahf
dec
rorb
js
push
pushw
sub
xlat
xor
mov
adc
mov
cmp
imul
mov
int
adc
mov
adc
mov
xchg
rcrl
push
int
sub
hlt
sbb
add
inc
popw
mov
lea
outsl
je
mov
push
cmp
xchg
jb
adc
jmp
es
and
sti
inc
push
or
jns
xor
fdivrp
adc
mov
sahf
or
mov
scas
in
sbb
inc
push
push
repnz
in
mov
in
jno
fld
popa
in
cmp
stos
push
fdivrl
sub
cmpsb
in
test
loope
ja
sub
fwait
ja
in
sbb
fldt
sub
and
mov
lret
loop
loop
data16
cld
inc
sub
or
or
mov
dec
lods
lods
mov
cwtl
cwtl
pop
sbb
pop
pmuludq
sub
lret
repz
leave
cmp
mov
fldl
scas
mov
adcl
jbe
cld
test
jo
sub
jge
sarb
imul
ja
add
or
pop
xor
ds
xchg
or
lret
bound
cmpl
loope
nop
push
out
add
popa
pop
mov
lcall
mov
sub
je
mov
sub
arpl
inc
xor
mov
cltd
sbb
push
pop
mov
pop
les
rolb
gs
aaa
shl
ja
lret
shrb
jno
inc
lahf
cmp
push
add
dec
ds
fldcw
cld
push
cmp
xor
in
pusha
fadds
call
cmp
rolb
aaa
adc
push
dec
clc
add
lock
cmp
sbb
ret
cmc
cmp
mov
pusha
dec
lods
scas
js
fsts
jl
mov
add
adc
daa
clc
lea
push
xor
jo
cmp
and
int3
pop
sub
mov
xor
xchg
lods
dec
dec
inc
mov
lahf
dec
cmp
pop
stos
lret
jnp
push
popl
dec
decl
test
cmpb
in
xor
aam
add
icebp
and
sbb
and
inc
xchg
sbb
aaa
inc
je
enter
xchg
sbb
cld
pusha
xor
lea
jo
xchg
mov
sbb
rorl
orb
aas
mov
das
sub
push
loop
decl
mov
jns
mov
dec
js
mov
mov
and
xor
sub
jg
bound
cmp
jnp
mov
pop
pop
cmp
push
mov
call
mov
add
or
inc
mov
sbb
adc
jge
cmp
and
lods
push
lods
daa
out
mov
and
stc
mov
pop
sub
loop
out
mov
pop
stos
pop
lret
mov
pop
push
adc
repz
clc
lock
insl
mov
dec
fs
fisttps
and
jp
int3
orb
sbb
arpl
repnz
mov
and
sbb
test
popa
mov
lods
mov
sub
xchg
dec
xor
decl
cmp
lret
pushf
dec
icebp
in
test
sbb
inc
inc
xorb
pop
jl
mov
jle
ret
xor
mov
fildll
pushf
and
mov
mov
jmp
and
pushf
les
push
loop
cmp
jmp
pop
das
cmp
hlt
and
push
jp
repnz
inc
dec
stos
dec
stc
insl
out
xchg
pushl
push
leave
out
or
sbb
outsl
jno
or
lcall
add
repnz
dec
mov
pop
jecxz
and
movsl
fldl
xlat
test
jmp
jp
adc
aad
and
mov
jle
movsl
test
repz
mov
orl
sbb
cs
xchg
xchg
lods
cld
sbb
and
push
pop
out
je
and
push
test
test
popf
and
rol
das
lods
jne
mov
cli
mov
push
push
jnp
cmp
into
mov
mov
adc
push
xchg
jb
push
mov
lock
cmpsb
fwait
pop
fbld
insb
aad
bound
push
ret
movsl
pop
mov
test
stos
lods
test
sub
stos
jnp
mov
add
or
cmp
js
movb
add
jecxz
lods
mov
subb
scas
and
push
in
xlat
or
repnz
popf
sbb
popf
and
and
and
dec
iret
xor
pop
lahf
mov
jp
pushf
xchg
mov
add
and
xchg
push
mov
mov
mov
sub
roll
mov
sub
repnz
ja
sub
test
inc
mov
repnz
xor
mov
jb
outsl
and
loop
mov
xor
pushf
inc
jp
sbb
out
adc
xchg
out
dec
jno
push
add
pop
imul
je
cltd
inc
movsb
dec
cmp
repz
fdivl
leave
imul
sub
mov
mov
je
sub
aam
imul
mov
aas
mov
and
popl
mov
sbb
aad
js
mov
movsb
xor
cmp
out
or
or
xchg
xor
inc
pop
pop
sub
div
loope
mov
aam
sbb
cmp
xchg
pop
xor
sub
xor
xlat
push
into
int3
dec
pop
xlat
mov
imul
insl
fbld
and
rcrb
enter
mov
fwait
xchg
outsb
rorl
and
bound
cmc
fisubs
in
js
inc
dec
outsb
loopne
shrl
push
cmp
les
jbe
jl
lret
stos
push
mov
outsb
push
jg
pop
aad
and
lock
pop
in
xchg
lea
mov
mov
mov
mov
jne
xchg
jge
adc
into
inc
fsubs
xlat
add
in
pop
js
pusha
mov
push
popf
dec
push
outsl
vpslld
inc
sbb
testb
aas
lods
or
jmp
sbb
or
pop
add
in
les
inc
insl
xchg
xchg
push
clc
add
dec
mov
lods
adc
xchg
cmp
sarb
and
std
aaa
repnz
mov
mov
call
and
lcall
test
sub
rcrl
mov
pop
loop
insb
fnop
dec
cs
aaa
cmp
or
stc
sbb
iret
sbb
loope
pop
test
in
vcvtsd2ss
int3
clc
xchg
cwtl
pop
jle
sbb
pop
mov
int
mov
in
mov
outsl
mov
xor
adc
xchg
movsl
adcl
xchg
adc
inc
adc
loopne
push
mov
cmp
fstp
scas
dec
je
pop
adc
movsb
movntps
in
cmpsl
dec
jge
outsl
sbbb
or
mov
push
loopne
fsubrs
or
nop
loope
stos
cld
and
or
cmp
sahf
xchg
ss
in
pop
pop
pop
data16
scas
mov
scas
ret
sbb
out
repz
cwtl
movsb
leave
xchg
orl
or
stos
xor
lret
scas
pop
imul
stos
push
cmpsb
out
out
inc
aas
fucomi
sbb
cmp
out
out
lret
mov
jmp
xor
pop
or
clc
in
outsb
xchg
xchg
push
xor
insb
ja
mov
mov
add
pop
push
pop
xchg
mov
adc
dec
jno
mov
sbb
popa
sub
and
push
mov
dec
mov
outsb
shlb
cmpsb
mov
sahf
enter
je
xchg
fwait
rcrb
adc
cs
pop
daa
mov
jo
sub
push
pusha
lds
shll
fbstp
push
mov
jle
xchg
in
jmp
push
and
mov
push
mov
dec
mov
pop
cmp
jp
mov
inc
repz
cmpsl
repz
jns
pop
cmp
and
arpl
xorb
mov
repnz
cmp
ljmp
cmp
adc
cmpsb
in
out
ret
stc
iret
ljmp
popa
mov
addr16
push
lcall
rcrl
jno
clc
xor
adc
orb
jno
jp
adc
sub
sbb
mov
mov
movsl
in
cwtl
pop
mov
lods
jp
sbb
xor
pop
cmp
es
push
push
dec
leave
das
and
push
mov
stc
aad
pop
rcl
xchg
mov
xchg
ficoml
push
mov
jno
push
pop
in
mov
jg
test
jp
and
hlt
mov
ja
pop
clc
dec
repnz
inc
test
outsl
pop
push
pop
icebp
les
sbb
pop
push
add
sbb
xchg
loop
push
pusha
adc
test
mov
es
mov
mov
int3
xchg
mov
outsl
sub
push
lret
mov
stos
rorb
lahf
sub
sub
cmp
xor
sti
ficoms
ficoms
in
ja,pn
insl
stos
mov
jmp
xchg
mov
out
int3
rorl
mov
gs
int
lea
mov
pushf
sbb
jno
mov
loop
leave
enter
or
rorl
jne
mov
mov
outsl
xor
mov
ljmp
ja
mov
out
add
xchg
jno
mov
clc
in
rcr
fcoms
mov
ljmp
leave
dec
movsb
sub
jp
pop
sbb
inc
sub
push
pop
fwait
pusha
das
test
insl
push
inc
nop
es
int
loopne
popa
cmp
mov
cmp
dec
push
loop
mov
inc
je
jno
dec
cmp
xchg
adc
xor
rcrb
push
out
std
dec
xor
mov
dec
cmp
mov
xlat
and
ret
sahf
mov
pop
push
xchg
mov
sub
fld
xor
mov
lods
fldl
repz
inc
xlat
cmp
sbb
and
in
insb
xchg
ljmp
inc
cmp
mov
jnp
pop
int3
popa
frstor
insl
mov
and
sbb
dec
dec
inc
sahf
sub
bound
roll
adc
xchg
add
fists
or
mov
inc
lods
inc
push
sub
push
enter
movsl
or
cltd
data16
cmove
out
or
xchg
push
mov
divb
mov
push
mov
inc
dec
xor
lret
push
xlat
xor
pop
pop
inc
popa
cmpsl
mov
mov
mov
cltd
aam
jo
add
xor
adc
fstp
dec
std
inc
cmp
and
repz
into
push
stc
test
xchg
imulb
jb
mov
inc
sbb
rcl
push
repz
sbb
and
and
push
push
in
xchg
call
sbbb
cmpl
imul
mov
dec
in
cs
fs
repz
movsl
stc
or
xchg
movsb
adc
jecxz
aaa
sub
test
fwait
dec
inc
push
clc
mov
in
lods
idivl
dec
fstl
notb
cs
jae
lcall
jp
push
rcl
mov
xchg
rclb
test
into
fisttps
inc
mov
pusha
or
dec
leave
sbb
sub
inc
ss
popf
cwtl
mov
dec
push
add
lea
stc
fwait
lods
xchg
mov
jae
fwait
mov
inc
fdiv
xchg
stos
adc
call
add
cmp
jmp
mov
jno
fldl2e
in
add
dec
xchg
dec
mov
aam
loop
sub
ds
push
dec
cmovne
inc
aam
push
xor
cli
ret
lods
and
adc
lock
mov
inc
loop
popa
push
in
mov
aam
jg
stos
and
icebp
and
mov
stos
out
out
sahf
gs
scas
mov
out
add
data16
shll
cmp
pop
ret
xchg
in
mov
push
pop
xor
or
aas
push
enter
xor
and
sbb
push
addr16
sub
pushf
ret
shll
stos
in
div
mov
and
ss
add
xchg
lret
push
stos
jo
sub
shr
stos
add
cmp
fwait
push
das
cmp
cmp
test
inc
ret
pop
cli
aad
dec
test
xchg
sbb
call
dec
jge
sti
std
int
dec
mov
rorb
int3
arpl
outsb
or
xchg
mov
cwtl
pop
lds
mov
xchg
jbe
jo
loopne
push
sub
xchg
xchg
dec
push
scas
imul
fistps
es
dec
push
pop
shll
pop
jnp
mov
xchg
xchg
dec
jp
add
les
hlt
mov
or
pop
xor
out
push
cmp
and
mov
imul
inc
mov
inc
push
nop
sbb
in
inc
mov
loop
cmp
fisubs
adc
cmp
cmp
cmp
push
outsb
pop
mov
and
pop
adc
frstor
jle
ljmp
add
std
lahf
ficomps
loope
mov
cltd
xchg
ret
or
inc
inc
mov
stos
sub
popa
shlb
sti
enter
adc
push
cld
icebp
xor
xlat
sub
sti
push
cli
addr16
sbb
loop
add
repz
pop
cmpsb
insl
popf
cmp
jb
push
dec
test
xchg
das
mov
pop
pop
jb
adc
ret
and
lods
or
adc
mov
and
jmp
push
or
and
ffree
rcll
push
mov
cmp
es
jnp
loopne
lahf
dec
cmp
daa
dec
pop
dec
xchg
or
cmp
mov
mov
int
roll
inc
xchg
in
roll
or
subl
adc
ds
out
xor
jecxz
aaa
ds
pop
xor
outsl
push
nop
pushf
sub
pop
shrb
jno
repnz
sub
stc
ss
scas
sbb
mov
cmp
enter
test
sub
cmp
pushf
scas
mov
ja
adcl
dec
sub
push
call
mov
mov
int3
inc
mov
jnp
in
and
mov
ret
bound
repz
rcrl
cmp
cmpsl
adc
es
jae
jge
lsl
push
dec
fisubrl
add
mov
in
outsb
sub
loopne
addl
rep
sbb
scas
rclb
ret
push
dec
add
pop
shlb
cmp
lret
push
inc
mov
lcall
mov
cld
in
data16
in
cmpsb
fnstenv
xor
shr
jbe
jge
mov
xchg
fs
sbb
lock
adc
mov
sti
pushl
add
lds
fadds
mov
popf
dec
and
gs
shlb
add
in
mov
sbb
dec
push
insb
cmp
in
clc
pushf
stos
xchg
push
popf
loop
jbe
push
jo
dec
pop
pushl
nop
and
mov
pusha
inc
sarl
shl
push
mov
dec
cmp
add
pop
addr16
fnsave
call
push
mov
lock
lcall
mov
outsl
das
nop
popa
push
test
in
add
xchg
jbe
sbb
cmp
scas
mov
jmp
xchg
imul
inc
rclb
xchg
scas
mov
aam
lret
je
xchg
or
fiadds
push
in
outsb
test
or
pop
aaa
and
dec
stos
loope
mov
aad
push
andb
gs
jnp
jo
js
in
or
cld
movswl
icebp
or
xor
jne
mov
out
xchg
push
or
aas
fists
in
rcrl
inc
sahf
scas
fidivl
ss
pushf
jmp
nop
js
pop
rolb
mov
jmp
mov
push
cwtl
jle
push
pop
movsb
es
ljmp
xor
jo
stos
push
sbb
pop
dec
push
sub
lcall
pusha
add
inc
or
sub
and
add
push
pop
out
fnsave
pop
cmpb
xchg
pop
adc
les
mov
add
jge
loopne
push
aas
sbb
and
dec
xchg
ds
dec
mov
mov
pop
mov
push
xor
into
loope
scas
out
aaa
add
outsb
and
sub
add
fsubrs
dec
pop
sbb
sbb
gs
add
mov
push
cmp
lods
lods
fsubrs
out
aam
mov
loop
pop
or
pop
dec
andb
xchg
movsl
loop
cmp
dec
pop
jne
loopne
xlat
jb
add
pop
jb
mov
xchg
loopne
movsl
lock
mov
adc
jg
sbb
mov
pusha
pop
inc
shl
lret
cmp
arpl
test
flds
hlt
mov
subb
imul
sbb
ljmp
fmul
jbe
mov
cmp
dec
pop
test
stc
pop
pop
mov
dec
xor
les
lcall
pop
enter
jmp
dec
dec
pop
inc
push
orb
push
loopne
pusha
test
adcl
cld
add
ds
fs
inc
sub
test
cmpb
jl
in
jo
stos
hlt
add
jb
sarb
dec
enter
xchg
in
cmova
out
push
aas
enter
or
ljmp
ds
mov
xor
jb
and
ljmp
out
inc
rcrl
jb
pop
dec
fidivl
fidivs
push
or
hlt
xorl
cmp
mov
cmp
or
ficompl
das
push
xchg
test
out
in
fisubs
mov
inc
push
adc
jl
scas
jge
ja
jge
movl
lds
add
and
ss
mov
xchg
cmc
sub
outsl
or
inc
xor
cli
ss
sub
mov
pop
jno
ret
int3
pop
sub
incb
out
mov
leave
andl
fistl
mov
push
leave
mov
or
sbb
sbb
push
dec
mov
in
inc
enter
clc
cmpsb
mov
gs
mul
or
icebp
push
movsb
cmp
gs
mov
test
lcall
notb
fnstenv
push
sub
outsb
daa
inc
aam
mov
int
inc
jge
mov
sti
dec
xchg
icebp
ret
fisubrl
rorb
mov
stos
fdivrp
xchg
jnp
mov
daa
mov
aaa
push
cmpsb
sbb
pop
outsl
pop
xorb
cmpsb
outsl
mov
add
fwait
nop
cs
xchg
sub
mov
in
or
jmp
push
in
das
lods
jl
imul
jnp
cmp
in
xchg
fidivs
cmp
aam
mov
lds
sbb
jmp
pop
push
xchg
cld
sbb
lcall
dec
pop
in
enter
mov
sarl
jmp
xlat
pop
scas
lods
or
test
imul
shll
in
pop
sbb
jge
imul
add
push
mov
xor
xor
jecxz
cld
jb
lods
jle
sub
div
mov
push
in
lea
mov
push
adc
sub
push
jl
push
test
sub
cmp
mov
arpl
lret
imul
xchg
mov
dec
popf
cmp
es
sarl
cmp
shrd
jp
adc
lds
mov
fisubrs
shll
cmpsb
add
push
pop
aam
pop
movsb
fidivl
dec
inc
int
mov
aad
in
xchg
aam
imul
add
imulb
add
cmp
adc
test
dec
lahf
loopne
jo
jp
fldcw
movsb
push
dec
sbb
scas
in
add
jl
sbb
fwait
mov
xor
cmp
testb
mov
sub
les
mov
not
les
les
sbb
mov
and
or
fidivs
dec
adc
jne
mov
jo
mov
inc
mov
push
or
jle
clc
pop
sti
cmp
movsb
cmp
sub
ds
rorb
inc
mov
jbe
adc
adc
mov
sub
mov
mov
and
push
mov
pop
mov
sbb
mov
sbb
dec
jno
stos
jb
sbb
push
enter
mov
sub
rol
mov
push
bound
sub
pop
mov
pop
lock
push
cmp
mov
mov
pop
jmp
xchg
mov
pop
adc
aas
or
stc
nop
lret
xchg
sbb
sub
fldcw
lret
daa
dec
in
lret
mov
cmp
lcall
mov
dec
cmpsb
mov
mov
stc
lcall
lods
test
mov
xlat
sub
ja
or
dec
mov
repnz
or
call
fsubrl
test
insb
testl
and
aad
xchg
sbb
movsl
xor
daa
mov
fucomip
or
inc
adc
and
adc
outsl
movsl
add
out
sbb
out
in
xchg
in
and
popa
cmp
sbb
daa
pop
faddl
scas
iret
pop
addr16
adc
pop
rdmsr
pop
or
iretw
jnp
out
push
insb
ret
sbb
rcl
push
cltd
xor
cli
ret
cmp
mov
adc
push
adcl
xchg
mov
or
jmp
ljmp
mov
fldln2
sbb
xchg
cs
das
cltd
cmp
jge
mov
fnstcw
movsl
stc
loopne
inc
outsb
arpl
shl
push
push
lahf
imul
adc
add
pop
adc
cmp
or
icebp
popa
xor
mov
arpl
or
aaa
clc
sub
add
std
dec
jb
test
sti
int
lea
add
mov
adc
scas
adc
mov
stos
mov
ja
mov
repz
sbb
imul
xor
leave
pop
xor
inc
pop
xlat
jl
enter
les
cmp
into
mov
cmpsl
xor
dec
leave
ja
cmp
push
lret
sahf
stc
or
mov
leave
xchg
int3
mov
mov
fldenv
xlat
bound
inc
inc
push
stc
push
jle
cmp
jg
add
push
jbe
daa
stos
loopne
and
inc
sbb
jbe
std
ss
mov
daa
push
nop
sub
shr
scas
out
cmp
lock
push
and
push
not
xlat
xchg
add
or
mov
and
add
mov
cmp
in
lock
mov
sub
in
fwait
cmc
mov
jmp
andb
mov
inc
stos
pop
mov
mov
fsubl
inc
xlat
pop
js
mov
push
cmp
in
adc
pop
cmp
popa
sub
push
adc
push
loope
cmp
out
push
in
scas
sbb
add
in
sahf
cmp
in
jb
add
fmull
push
pop
loop
imul
sub
movsb
lds
push
mov
fnsave
mov
cmpsl
and
inc
data16
out
sub
jnp
repz
pop
jmp
lret
shlb
into
xor
cmpsb
push
arpl
mov
stc
sti
mov
in
pop
adc
jp
lret
inc
lds
sar
fdivrl
aad
mov
add
or
pop
insb
add
fsubrl
outsl
mov
cmp
jg
mov
hlt
pop
gs
out
pop
outsb
inc
cmpsb
pcmpeqd
nop
xchg
dec
hlt
in
leave
mov
mov
lods
shlb
add
scas
mov
outsl
fdivrs
mov
pop
daa
pop
push
sbb
loopne
das
dec
pop
jnp
popa
loope
xchg
and
mov
sub
shufps
jl
aaa
outsb
mov
or
mov
or
push
outsl
in
pushf
pop
iret
test
out
into
inc
sub
inc
add
or
enter
and
adc
jle
popa
iret
ds
push
add
mov
in
int3
dec
mov
outsl
jbe
adc
repz
gs
aas
data16
pop
jecxz
inc
pop
jbe
mov
and
cs
lret
ret
lods
pop
in
jno
sbb
js
dec
out
sub
andl
fistl
cmpsb
mov
out
mov
test
dec
ljmp
push
les
sub
lret
mov
push
pop
mov
jp
mov
nop
sub
sbb
jge
scas
or
lods
push
xor
cmc
mov
mov
cwtl
stos
and
loopne
out
popa
xchg
movsb
push
cmc
dec
call
out
push
popf
mov
in
pop
push
sbb
lahf
inc
inc
pop
and
out
add
pop
push
lds
add
inc
or
jecxz
cltd
add
xlat
test
push
lcall
repnz
and
adc
dec
daa
mov
sti
xchg
adc
cmp
sub
fisubl
sbb
cld
xchg
add
dec
mov
in
jne
xchg
out
pop
test
xchg
les
test
scas
jae
bound
adc
adc
xchg
add
mov
bound
lods
insl
sub
push
mov
lret
inc
xor
out
inc
add
jb
xchg
jp
mov
gs
or
enter
cltd
icebp
dec
addr16
jg
nop
add
dec
lahf
outsb
insb
jnp
inc
imul
out
xor
sti
fnstsw
dec
and
shll
pop
mov
sbb
or
push
and
inc
push
adc
mov
sahf
jnp
xchg
push
pop
sub
and
leave
adc
mov
ficoml
iret
es
mov
loop
imul
mov
adc
sbb
mov
rcrb
mov
inc
inc
mov
lcall
out
xor
fiadds
push
xor
cmpsb
jp
in
scas
fwait
mov
pusha
sbb
loop
dec
xor
xor
push
fildl
xor
jb
aaa
les
scas
inc
out
dec
rep
push
aad
jae
sbb
jmp
jmp
pushf
cmp
push
mov
xlat
or
pop
cwtl
popa
testl
and
dec
jb
popa
bound
xor
int
xchg
xor
mov
lret
je
sub
mov
or
rolb
xchg
push
pop
mov
dec
cltd
cltd
adc
cwtl
push
in
adc
loop
cmp
inc
daa
jo
sbb
and
xchg
enter
into
add
lret
add
mov
push
push
sarl
xor
xchg
dec
xchg
sti
or
push
ds
push
out
hlt
rclb
pushf
sbb
sub
daa
ficomps
int
xor
nop
fcomps
mov
adc
fdivp
test
rorw
or
sub
mov
aad
jge
xchg
out
push
mov
mov
lods
cld
aam
out
or
mov
fwait
lods
mov
jo
jns
pop
lock
push
xor
sbbb
es
mov
push
call
adc
xchg
xlat
bound
pop
daa
jmp
repz
bound
pusha
leave
sub
insl
scas
popf
addr16
cmp
mov
jno
je
or
xor
or
adc
xchg
cmp
sub
sub
stc
mov
jbe
outsl
fmulp
sub
jnp
dec
mov
rorb
out
daa
div
inc
mov
adc
leave
jae
lea
jg
dec
sbb
jge
int3
sbb
xchg
loop
mov
or
ljmp
mov
lods
negl
sub
sub
or
xchg
arpl
adc
pop
pop
lret
sbb
push
push
fdivrs
neg
repnz
mov
pop
outsb
inc
stos
xor
test
sub
dec
cmp
pop
dec
std
mov
fs
loope
aad
daa
loopne
out
xor
jbe
mov
sub
fstpl
and
mov
xchg
unpckhps
mov
pop
mov
out
inc
mov
push
rcll
jae
mov
inc
jb
lcall
xor
data16
mulb
lea
scas
xor
out
fsubl
pop
out
movl
fcomip
push
inc
push
stos
ljmp
sub
push
ss
outsl
mov
adc
out
in
add
scas
or
push
rorb
int3
jmp
mov
mov
pop
push
push
inc
das
mov
test
lock
or
lds
out
adc
out
out
push
aam
mov
insb
mov
mov
hlt
inc
pop
mov
sahf
adc
mov
dec
daa
add
jbe
fxch
das
mov
mov
jmp
xchg
mov
fcoml
ss
sbbl
sub
loopne
lahf
push
jne
in
jns
faddl
adc
mov
shll
xor
inc
xchg
mov
in
sarl
lods
nop
iret
or
sub
and
xchg
ss
pushf
xor
leave
scas
test
xlat
insl
icebp
add
rorl
cmp
and
push
cli
sbb
or
outsl
clc
adc
jno
add
dec
sub
out
mov
mov
jo
pop
jbe
cltd
cmp
add
cld
xlat
leave
test
pop
out
lds
inc
in
xor
daa
lcall
xchg
mov
mov
xchg
adc
inc
mov
iret
ret
jle
orb
mov
push
xor
rorb
inc
or
mov
psubd
adc
dec
adc
stos
cli
repnz
mov
adc
sbb
inc
mov
push
add
gs
mov
push
insb
mov
ja
mov
sub
in
xor
cmc
xchg
outsb
push
sbb
inc
sub
or
xor
call
or
add
int
pop
push
xchg
sbb
fcoms
mov
sbb
ficoml
mov
loopne
pusha
mov
cmp
fsubl
sbb
push
lahf
inc
fcmovnb
add
nop
into
mov
dec
cmp
inc
xchg
fsubrp
jb
push
cmpsl
std
fsubr
push
in
push
pop
pop
xchg
iret
sub
mov
movsl
inc
es
lcall
fwait
ss
or
and
fldcw
fsubs
or
xchg
loopne
repnz
inc
js
xchg
pop
lods
push
insl
pop
push
cmpsl
sahf
in
lods
or
sbb
dec
aaa
hlt
fidivrs
sahf
cmp
sbb
add
incb
and
in
cmp
xchg
incl
sbb
shrl
push
addb
mov
fisttpl
pop
inc
and
pop
push
jle
pop
cmc
mov
xor
cmp
inc
call
stc
in
and
mov
pop
insl
cmpsb
dec
push
push
or
cmp
les
xchg
arpl
fsts
mov
movl
mov
or
xchg
adc
pop
sub
mov
js
scas
int
inc
and
xor
loop,pt
sub
cmp
retw
insb
jno
shrl
lds
pusha
fbstp
lea
push
imul
mov
sub
out
jg
or
ljmp
xchg
xchg
icebp
mov
push
mov
insl
push
add
xor
add
aad
mov
ljmp
inc
rcl
ja
push
sbb
mov
ljmp
flds
mov
pop
movsl
out
sarb
sub
push
movsb
dec
and
insl
daa
out
add
mov
ja
mov
lret
mov
xchg
xchg
mov
xchg
sarb
jg
sub
sub
cmp
push
rcll
xor
mov
push
mov
hlt
sub
inc
sti
sbb
mov
clc
lcall
cmp
sub
dec
lods
out
sbb
out
lahf
outsb
push
jae
add
pop
mov
mov
test
sti
mov
lods
bound
fbld
fisubl
xchg
fs
in
dec
jge
cmp
cmp
stc
insl
mov
xor
push
ret
hlt
pop
insl
push
pop
xorl
push
sbbl
pop
pmullw
xor
mov
mov
or
jecxz,pn
gs
insb
loope
jno
dec
push
arpl
imull
pop
leave
cwtl
sub
je
and
imul
inc
outsl
imul
out
data16
cmp
push
stos
push
adc
or
cmpsb
scas
lret
cmp
into
jbe
aad
dec
aad
leave
cmp
ds
jle
or
dec
cwtl
cmc
cmp
xor
xchg
arpl
adc
lret
out
orb
roll
rolb
xchg
pop
sbb
mov
insb
imul
dec
and
test
and
jg
lret
in
push
inc
stc
cltd
push
movsl
movsb
push
dec
movsl
push
outsb
mov
sub
mov
in
xchg
xchg
or
ja
imul
in
jmp
je
std
mov
shll
pop
mov
jmp
in
push
les
xor
dec
inc
jnp
xor
and
mov
mov
mov
pop
test
mov
rcrb
push
faddp
push
cmpb
lds
aaa
imul
push
in
sub
xchg
xchg
and
iret
mov
sti
inc
cmp
pop
call
cs
push
mov
test
push
cmp
and
mov
sub
mov
js
lock
ret
cltd
popl
shl
lods
inc
mov
add
push
mov
imul
ret
dec
adcl
jl
mov
sbb
mov
pop
xchg
push
jecxz
arpl
or
cli
mov
ljmp
mov
pop
repz
insb
decl
ds
repz
or
mov
jo
cmpsb
lea
cwtl
imul
in
aad
add
mov
sbb
aad
and
jl
xchg
test
fisubrl
xchg
imul
cmp
dec
ljmp
cmp
out
mov
jne
fwait
das
ret
lock
jmp
imul
or
stos
enter
rorb
sahf
lods
adc
fcmovnbe
mov
dec
int3
mov
enter
cmpl
inc
icebp
fnstcw
adc
not
jnp
scas
arpl
jecxz
push
cmp
es
inc
or
repnz
mov
mov
dec
jae
mov
inc
or
int3
sub
pop
dec
arpl
mov
xchg
xor
fistl
cmp
movsl
test
mov
test
stos
dec
lods
jno
les
nop
push
lea
cmpsb
outsb
mov
jnp
imul
adc
in
mov
sub
or
push
mov
into
jnp
pop
lods
jb
jo
pop
or
je
ss
or
cmc
jae
mov
adc
cmc
scas
dec
int
stc
in
dec
push
xor
add
cli
loopne
imul
add
movsb
aas
pop
mov
xchg
faddl
fidivrl
sti
xor
fists
jne
jne
mov
aam
popf
mov
pop
adc
xchg
cmp
cltd
cwtl
cmp
sbb
pop
pop
push
test
mov
push
jnp
movsb
shl
mov
push
sub
fnsave
push
mov
loopne
cmpsl
ret
sbb
and
out
jp
ja
fsin
jmp
clc
aas
mov
push
fisubrl
pusha
clc
xor
nop
cmp
fimull
hlt
add
out
hlt
sbb
lds
iret
mov
loop
enter
pushf
mov
bound
popa
ss
jge
and
aaa
test
fwait
mov
icebp
pushf
mov
xchg
addr16
repnz
mov
add
push
push
push
rcrb
rolb
xor
adc
mov
lods
test
jmp
cld
es
sbb
jae
sbb
add
jb
jmp
mov
mov
xorl
dec
fcompl
pop
jns
sub
rcrl
clc
test
xor
cmp
out
pusha
pushl
cmp
adc
or
adc
mov
or
pop
adc
insb
iret
loope
push
sbb
or
call
jecxz
or
shlb
lret
xor
in
push
push
xchg
lret
popa
sbb
test
into
jge
jle
dec
test
imul
insb
mov
ljmp
shrl
sbbl
sub
mov
pop
dec
enter
adc
pop
jno
jb
ja
mov
outsb
dec
and
add
out
scas
jb
in
mov
dec
dec
xor
and
push
cmp
icebp
pop
pop
call
jns
sbb
imul
stos
cmp
sub
mov
cmpsl
dec
pop
fiadds
scas
int3
push
jne
icebp
cmc
mov
mov
jne
inc
xorb
inc
lret
push
mov
sub
je
mov
adc
jae
fstl
xchg
push
cmp
inc
mov
adc
push
push
mov
sub
add
adc
sbb
ret
pop
outsl
pop
sahf
sahf
mov
loope
xchg
out
faddl
sub
das
push
lret
inc
hlt
fmuls
fmul
rcl
hlt
jae
sub
adc
stc
xor
test
xor
dec
lahf
mov
pop
push
addb
xchg
xchg
inc
xchg
cwtl
sbb
pop
xchg
in
xor
xor
call
mov
push
xor
push
cmp
cmp
scas
jmp
mov
mov
mov
push
cli
or
bound
xchg
add
shrl
and
adc
call
subb
pop
sub
push
mov
aam
inc
push
sar
into
add
popf
push
in
and
and
andl
cli
mov
aas
popa
fisubs
fstpt
divl
ljmp
mov
je
shrb
rcrl
mov
mov
test
sbb
or
inc
movsb
movsl
je
sbb
rorl
aad
adc
into
and
ljmp
xchg
mov
insb
iret
mov
mov
mov
repnz
xchg
cmpb
lret
sbb
loope
fwait
adc
int3
inc
or
xchg
mov
adc
mov
dec
sub
inc
xchg
xchg
hlt
jecxz
push
repnz
out
fisttpl
out
pop
cli
add
lds
lret
sub
popa
mov
push
adc
ljmp
pusha
sbb
pop
mov
jo
dec
or
dec
mov
pop
adc
stc
sub
les
adc
out
sbb
orl
pusha
sbb
jb
xchg
sti
iret
push
dec
mov
jp,pt
rclw
arpl
jp
cmp
dec
test
mov
dec
xlat
xrelease
mov
or
sub
repnz
mov
scas
movsl
dec
mov
xor
adc
dec
mov
gs
insl
popf
lock
enter
es
lcall
push
xchg
cwtl
pop
loope
mov
mov
jne
push
xchg
lds
fcoms
popa
fnstcw
imul
int3
push
into
mov
cld
test
mov
pop
or
mov
outsl
in
fidivrl
lods
inc
mov
fildl
repnz
push
jo
inc
mov
jae
xor
out
imul
push
sbb
orb
stos
or
cmp
out
and
popf
push
jle
push
or
icebp
pushf
cmp
cmp
clc
insb
repz
fldt
rorl
jno,pn
std
jne
pop
inc
or
das
cld
pop
jnp
xchg
mov
or
int
jle
repnz
jns
iret
pop
add
jno
repz
sbb
das
dec
in
mov
fnstsw
imul
int
test
inc
sub
jo
out
fdivrs
addl
lret
ja
mov
loope
shll
adcl
cmp
adc
cld
pop
xchg
loop
clc
jo
cmc
decb
inc
mov
out
hlt
es
movsb
scas
mov
std
mov
jns
push
test
fcmovnbe
js
arpl
cmp
mov
in
pop
mov
xchg
jnp
inc
mov
dec
adc
les
or
sbb
dec
xchg
or
xor
xchg
push
and
xor
cmp
out
shrb
push
das
mov
insl
mov
ljmpw
jmp
pop
int
cwtl
clc
lcall
fiadds
rcl
dec
dec
pop
sub
pusha
loop
xchg
mov
xlat
and
ret
repz
out
inc
dec
sbb
or
jo
scas
jmp
out
mov
jg
sub
mov
jne
int3
ret
sbb
test
jmp
push
pop
outsb
push
adc
mov
loope
outsl
bound
push
pop
cmp
push
call
jbe
jne
inc
push
mov
lcall
adc
test
mov
aaa
push
xor
test
mov
fmull
or
pop
pop
xor
sub
in
decb
cs
hlt
imul
fs
xchg
insl
sbb
pop
push
iret
stos
inc
pop
loopne
mov
add
mov
jl
insl
adcl
sarb
mov
ja
mov
mov
mov
sub
pushw
aas
xor
fnstenv
xchg
int3
or
call
inc
push
or
in
fsubs
push
ret
jae
dec
shll
cmp
int
and
mov
nop
dec
pop
fdivr
imulb
lods
ret
inc
pushf
movsl
into
xchg
xchg
fimuls
push
pop
pop
mov
in
dec
int
ficompl
stc
xor
negl
out
add
outsl
xchg
sbb
or
cmp
mov
imul
push
dec
div
jnp
adc
mov
sbb
inc
out
in
push
rclb
scas
inc
mov
call
push
gs
inc
pop
movsb
add
out
pop
sbb
lahf
pop
dec
jns
cli
jbe
mov
sarb
jecxz
popf
mov
pop
pusha
fcmovne
xor
roll
mov
mov
or
es
mov
out
pop
fs
mov
outsb
sub
mov
jle
das
lds
jae
cmp
and
stos
into
mov
data16
xchg
fdivs
mov
and
gs
mov
dec
cld
push
push
jns
scas
cmp
out
mov
jmp
mov
mov
subl
add
es
out
cmc
mov
es
cmp
adc
push
mov
jb
mov
loop
xlat
std
push
and
pop
lahf
js
sub
xor
in
mov
fimull
in
mov
and
push
jmp
icebp
or
sti
xchg
int
add
in
xor
xor
cmp
push
push
jnp
in
pop
lea
push
test
aaa
or
insl
aas
repnz
dec
dec
cmp
outsb
or
pop
scas
cmpb
mov
test
mov
mov
fwait
cmpsl
bswap
mov
or
or
dec
xchg
add
or
push
mov
inc
lret
lret
xor
popf
jg
pop
call
aam
faddl
fidivrs
fildll
and
xchg
xor
cmp
pop
out
popa
dec
inc
add
dec
inc
das
cltd
cmpsl
pop
and
loop
out
adc
inc
or
dec
cmp
out
xchg
fsubl
mov
fldcw
xor
enter
jns
or
mov
or
or
jge
stc
mov
nop
sbb
jne
push
adc
pop
sub
xor
cmp
pop
lods
test
or
fistps
lock
test
add
xchg
push
or
int3
test
sbb
mov
cmpsl
movsb
inc
fisubrs
pop
shrl
mov
cmp
inc
ja
movlps
push
inc
lds
add
push
test
repnz
cmp
and
shll
pop
mov
jp
pop
adcl
fsubs
iret
inc
or
icebp
into
sub
int3
push
lds
push
pop
lret
jle
cmp
sti
rorb
pop
mov
les
stos
mov
fdivl
mov
sbb
popf
jmp
in
in
aad
aas
push
test
push
dec
push
push
or
mov
std
cmp
cs
push
push
inc
divb
outsl
popa
jecxz
push
mov
call
cld
es
lret
xchg
mov
mov
sub
dec
jae
xor
inc
cwtl
sub
inc
inc
fdivs
jp
pushf
outsl
xor
add
mov
je
neg
push
xlat
bswap
mov
dec
xchg
adc
popf
cmpl
jo
roll
dec
loopne
call
mov
ja
inc
cld
pop
gs
jae
inc
sub
pop
cmp
aam
js
cltd
daa
aas
in
lret
push
bnd
jb
jne
daa
ja
mov
std
mov
xor
push
push
daa
cld
rol
cli
ret
dec
in
mov
cmpsl
dec
js
mul
pop
and
mov
subl
lret
loope
inc
cmpsb
sbb
hlt
push
int3
xchg
andl
or
mov
push
jae
or
jns
pop
rolb
dec
in
ljmp
and
enter
push
jne
addr16
pop
jb
xorl
adc
test
xlat
mov
push
cs
pop
lret
scas
or
sarl
fs
add
cmp
inc
pop
sbb
cmp
adc
add
add
lret
es
pop
sbb
stos
xor
out
insl
pushf
mov
ja
test
lcall
test
lahf
mov
cmp
insb
rcl
cmp
jmp
les
and
jnp
add
ror
lcall
pop
dec
xchg
popf
xchg
sub
test
pop
mov
mov
cwtl
movsb
ja
xchg
mov
stos
xchg
pusha
out
sub
mov
mov
push
fwait
stos
sbb
lods
test
adc
or
mov
pop
xchg
adc
push
sbb
or
dec
jle
pop
push
in
pop
movsb
aam
or
movsb
add
xor
popa
and
aam
inc
xor
mov
jne
pushf
mov
cmp
enter
mov
hlt
fldcw
jmp
cmp
inc
mov
loop
jecxz
push
gs
add
rcll
ret
xchg
add
push
aaa
loopne
stos
adcb
pop
mov
fstl
mov
xchg
mov
and
int
mov
mov
push
add
push
imul
inc
inc
jmp
sub
dec
or
adc
rsm
pop
mov
inc
loope,pn
jbe
xor
cmp
mov
arpl
adc
dec
imul
dec
iret
push
or
movsl
test
adc
sti
xorl
add
push
dec
mov
lds
adc
icebp
repz
push
pop
cmp
sbb
jns
mov
cwtl
imul
sbb
ficompl
jp
movl
mov
js
cld
xor
xchg
daa
jb
add
push
or
enter
sub
pusha
fs
dec
pop
repz
mov
jae
stos
xor
loopne
pop
ljmp
out
mov
or
and
pop
test
mov
dec
out
outsb
rorl
gs
leave
jecxz
or
cli
xorl
mov
lock
je
cli
jb
out
aad
dec
jle
xor
cmpsl
mov
inc
jae
scas
fwait
in
lret
dec
sarb
mov
aas
dec
leave
iret
scas
daa
sbb
repnz
lods
cmpsb
and
loop
sti
xchg
jle
int3
push
dec
jae
dec
imul
push
lds
mov
push
pop
mov
test
in
dec
sbb
nop
mov
xor
mov
mov
shr
xlat
lahf
mov
aaa
in
scas
in
xchg
sub
clc
ljmp
xor
dec
sahf
and
pop
dec
inc
jp
and
hlt
data16
les
movsl
sbbb
mov
cltd
and
outsl
cmp
cmpsb
adc
clc
mov
aaa
xor
sbb
fsubl
div
push
gs
fwait
jge
mov
es
mov
cli
adc
lock
clc
test
jg
mov
dec
cmp
daa
std
clc
inc
xor
and
in
push
test
add
dec
fisubl
outsb
or
sub
cmp
or
enter
fucomi
shll
outsl
je
es
xchg
xor
adc
xor
adc
popf
add
adc
mov
sbb
sub
outsb
mov
ret
out
or
and
mov
dec
pop
cmpsl
pop
jmp
ficoml
pop
imull
add
mov
bound
inc
push
in
mov
adc
sub
scas
in
xchg
out
daa
pop
dec
xor
fisttpll
lcall
xor
add
sub
fucom
lret
mov
sbb
in
mov
insl
aas
imul
pop
push
adc
movsb
inc
fs
add
adc
in
mov
je
adc
inc
push
hlt
cmp
div
dec
xchg
lods
fimull
cmpsb
xchg
pop
iret
sub
repnz
cmpsl
sbb
push
mov
or
sbbl
mov
ss
stos
jg
dec
cmp
sub
hlt
loope
jnp,pt
mov
xchg
mov
cmp
loop
mov
mov
xchg
xor
adc
add
xlat
sub
rcr
dec
nop
sub
ljmp
cmp
cmpsb
je
xor
mov
aam
xchg
aad
mov
sub
or
lret
xorb
mov
jp
lret
dec
and
lret
cmp
push
shr
arpl
cli
subl
mov
call
mov
les
call
outsl
xchg
push
inc
out
fucomp
pop
sub
inc
jge
dec
fadds
dec
sub
push
inc
mov
xchg
out
sub
xlat
adc
dec
mov
and
into
int3
mov
push
cmp
insb
aam
repz
dec
mov
addl
lret
fs
add
cmp
mov
mov
inc
sarl
sub
fldcw
data16
pop
fnstsw
dec
dec
jne
jle
sub
mov
iret
je
js
mov
sbb
cld
fdivl
imul
or
sti
into
pop
sbb
mov
lods
call
mov
jb
scas
ret
cmpsl
pop
cmp
or
lret
mov
add
mov
cmp
pushf
sub
inc
int
adc
out
mov
add
insb
lods
gs
clc
sub
pop
faddl
ret
outsb
xchg
jge
gs
sbbl
push
push
or
jo
cmp
mov
mov
je
stos
xor
push
push
pop
fldcw
cmp
pop
popa
pushl
jae
es
or
jb
dec
pop
xlat
ficoms
or
or
jle
test
out
xor
mov
jbe
mov
inc
pop
das
jecxz
fdivrs
sbb
cli
in
add
mov
popf
jge
arpl
lods
mov
pop
rorb
pop
lea
adc
in
out
lret
inc
jo
push
jo
nop
cs
mov
jne
insb
test
mov
xor
aaa
mov
push
push
and
in
mov
sub
lret
pop
sub
fiaddl
add
adc
cwtl
mov
and
jnp
pop
push
int3
lret
sub
pusha
jae
arpl
and
pop
scas
pop
sarb
add
cmpsb
lds
out
pop
insl
mov
lret
inc
sub
dec
clc
xchg
push
pop
fcomip
pop
mov
mov
imul
mov
and
inc
ds
sub
pop
ficoms
mov
js
sub
mov
sub
into
xchg
cmp
mov
outsl
adc
mov
stc
rclb
mov
pop
mov
xchg
mov
adc
aaa
cs
xor
push
es
into
insb
insl
or
das
xchg
add
adc
loope
pop
dec
pop
fcoms
test
jge
lahf
mov
data16
repnz
mov
mov
decb
mov
sub
fidivl
sahf
xchg
pop
xor
mov
testb
enter
inc
push
jp
ret
adc
inc
adc
ss
in
mov
iret
mov
notb
fldenv
or
ljmp
add
sbb
jbe
das
push
lcall
test
and
scas
inc
jge
dec
lret
cmp
sub
mov
push
out
stc
lret
rcrl
adc
dec
xor
dec
cmp
lock
push
xchg
cli
cmp
lds
cmp
ss
testl
jae
pop
pop
add
xchg
xor
jmp
pushl
scas
jg
pop
out
mov
shll
xchg
ret
fdivl
sbb
add
push
jno
bound
xor
stos
sbb
les
aam
cmp
test
dec
xchg
daa
xchg
lock
mov
xor
je
jno
and
adc
push
xor
inc
inc
pushf
jle
xchg
jbe
xchg
insl
fwait
addr16
cmp
xchg
test
rcl
scas
or
nop
push
sub
lea
adc
dec
add
ret
stos
xchg
xchg
push
add
stos
lahf
lock
pop
shrb
xchg
aad
mov
jmp
inc
pop
dec
cmp
imul
stos
push
fsubl
loop
int
aas
and
push
out
pop
insb
lahf
test
cld
ds
add
xor
hlt
mov
and
or
ret
mov
sbb
cmc
int3
push
mov
inc
jb
outsl
mulb
sub
lea
subl
jmp
dec
adc
cmpb
adc
in
lds
mov
xchg
pop
test
movsl
int
jno
xor
dec
mov
imul
pop
sub
sub
and
subl
out
add
les
mov
scas
sub
pusha
je
aas
in
or
sti
mov
fbld
fistps
cmpsl
xlat
jns
adc
sahf
xor
adc
in
mov
sub
or
jle
xchg
mov
setl
lods
xor
clc
jg
mov
aad
add
movsl
add
jmp
adc
xchg
enter
das
xor
sub
xchg
repz
stos
pop
add
enter
lods
sarb
push
and
outsl
sub
mov
push
cmp
fmull
pop
ret
adc
add
jae
xor
pop
xor
mov
mov
or
mov
insl
lea
sahf
iret
inc
fidivrs
testl
inc
mov
jecxz
test
out
lret
jmp
shll
sub
ret
sub
divb
nop
mov
sub
fisubs
jno
mov
sub
movsb
test
add
pop
mov
gs
stos
inc
sub
daa
fsubrl
cmc
addr16
mov
mov
out
dec
shll
adc
fbld
pop
pop
cs
lcall
push
jg
flds
sarl
jns
jnp
lods
icebp
xchg
ret
adc
scas
sub
stc
pop
fwait
xlat
xchg
xchg
adc
adc
push
jae
movb
cwtl
cmp
sbb
xor
sub
popa
imul
xchg
leave
stc
inc
mov
xchg
fldpi
cmpsl
inc
into
inc
pusha
push
cmp
sub
inc
outsl
iret
arpl
inc
out
xchg
inc
pop
out
push
push
jns
adc
sub
movsb
shl
aad
sub
outsb
or
push
sahf
shr
loop
js
cmpb
ss
adc
adc
cmp
add
push
sbb
pushf
repnz
ja
sub
inc
or
lcall
fsub
adc
ret
lmsw
mov
ljmp
mov
aam
lea
insl
cwtl
lahf
xchg
mov
in
je
push
inc
jne
test
xchg
xorb
lea
lods
pop
push
jg
nop
repnz
ds
xchg
jmp
pop
iret
mov
cltd
cmpsl
cmp
dec
mov
out
mov
dec
jo
clc
ret
xchg
test
pop
adc
inc
shlb
ficompl
out
out
imul
pop
push
int3
jns,pt
push
aaa
jle
sbb
push
push
pop
push
nop
fstl
stos
mov
mov
and
or
lock
add
xchg
orb
mov
push
lods
add
or
bound
cmp
jo
cmpsb
mov
add
or
in
mov
adc
push
adc
push
inc
xor
or
stc
jp
cmc
stc
cltd
or
loop
push
ret
mov
ja
mov
and
mov
mov
insl
out
sbb
push
shll
xchg
lock
sbb
pop
push
loop
pop
scas
imul
mov
out
insl
xchg
sahf
and
or
or
cltd
inc
stc
inc
dec
sbb
stos
repz
aad
fstps
add
clc
call
cmp
testl
sahf
sub
fwait
out
adc
mov
push
out
xchg
and
sub
nop
xchg
enter
insl
std
cmp
pusha
test
das
push
jo
outsb
scas
sub
mov
sub
movsb
cli
adc
lds
jmp
loopne
mov
iret
fldcw
into
rcll
push
adc
push
lods
imul
xchg
xor
inc
in
mov
pushw
in
aad
js
xchg
lret
sub
push
push
inc
icebp
and
loope
mov
dec
xor
das
sahf
sub
fs
pop
mov
aad
roll
sarb
or
aaa
popf
fcoml
out
aam
outsb
xchg
sub
xchg
xchg
mov
add
in
cltd
cmp
mov
and
add
jge
sahf
or
sahf
mov
inc
inc
or
adc
ds
sub
xor
paddw
stc
bound
lret
mov
cmp
sub
push
mov
sti
add
sbb
cs
adc
adc
fidivl
jns
inc
movsl
mov
dec
xchg
jo
sub
mov
mov
jle
fcomi
mov
int3
adc
scas
lea
xchg
push
imul
in
pop
xchg
inc
sarl
lea
xor
sub
mov
fiadds
push
mov
test
je
push
rcl
jae
xor
cwtl
pusha
and
adc
adc
adc
xchg
xlat
les
add
pop
push
xchg
repnz
movsl
dec
rorb
lahf
fcoml
je,pn
push
inc
loop
lret
aam
sarb
push
adc
cltd
xchg
add
imul
mov
std
or
jg
dec
out
insb
ret
ror
pop
and
mov
cmp
out
mov
pop
test
pop
gs
add
add
sti
adc
nop
or
or
inc
arpl
dec
out
insl
scas
frndint
out
fwait
std
cmp
dec
jne
push
or
or
outsb
fmul
das
gs
xchg
inc
sbb
repz
jle
xor
test
stos
mov
mov
mov
repnz
cmp
sbb
mov
mov
sahf
cs
inc
sub
dec
mov
pop
enter
iret
insb
add
hlt
mov
sub
push
data16
xor
cli
mov
clc
dec
popf
cli
xor
negl
das
push
mov
fs
fwait
jg
std
adc
mov
into
sbb
pushf
or
dec
push
xor
cmp
fmuls
dec
push
dec
push
or
xor
mov
dec
add
pop
and
jo
adc
notb
mov
jge
mov
fnstenv
pop
fldenv
lret
pop
xchg
pop
movsb
add
jecxz
xor
xchg
lea
jge
xchg
shrb
addr16
orl
and
mov
rclb
jmp
loope
aas
hlt
pop
ret
lods
xchg
dec
sub
sub
mov
sahf
xchg
jecxz,pn
sbb
idivl
jo
in
cmp
repnz
mov
xor
scas
inc
mov
pop
rorb
push
xchg
dec
sbb
push
adc
or
jo
inc
ja
aam
iret
adc
pop
adc
sbb
movsb
mov
cs
dec
mov
pop
xlat
mov
sbb
idivb
xchg
out
fmull
xchg
imul
jmp
in
jl
movsl
addl
cmp
mov
ficoml
lods
js
or
xchg
dec
or
sub
dec
add
fidivl
cmp
scas
jg
cmp
add
fs
je
shlb
adc
sbb
aaa
mov
or
push
mov
lahf
and
or
mov
mov
insb
pop
lods
mov
popa
pop
push
mov
add
sbbb
fisubrl
fsub
push
and
jo
iret
xchg
int3
sub
xlat
in
enter
jb
mov
rol
mov
mov
lods
mov
sbb
mov
dec
push
dec
fs
lock
mov
or
xchg
enter
or
mov
popa
cmp
push
xor
sar
sti
popa
mov
ljmp
jae
iret
into
lcall
xor
mov
cmp
ja
out
push
mov
dec
lea
test
cmpsb
and
mov
lods
mov
lds
aaa
xchg
stc
mov
mov
in
xor
insb
add
mov
add
rorb
int
addr16
dec
leave
push
xchg
add
gs
mov
sub
orb
das
lcall
gs
add
fwait
jne
das
addr16
sbb
sub
iret
or
pop
push
mov
add
dec
push
pop
jp
adc
cmc
stc
das
sbbb
scas
mov
dec
xorl
dec
icebp
pop
pop
sti
push
loop
shl
dec
stos
or
cmp
stos
out
push
push
mov
adc
mov
decb
push
negb
dec
pop
pusha
pop
dec
data16
mov
lods
lock
fistpll
nop/reserved
jns
xor
ja
cmc
cmpsb
outsb
fiaddl
mov
and
mov
dec
fdivrs
fiadds
negb
ret
mov
or
xor
xchg
fstps
jnp
loopne
push
inc
outsb
xchg
lret
mov
rcll
rcl
pop
and
fs
mov
cmp
mov
lds
setge
add
or
dec
rcll
xor
aas
out
roll
not
insb
mov
and
fidivs
cmp
mov
fs
shll
test
xchg
pop
jl
add
js
imul
mov
cwtl
fildll
pop
sub
pushf
cs
mov
fcoml
scas
push
dec
lock
in
outsl
cmp
dec
cmpsb
mov
mov
xchg
jmp
pop
pop
enter
push
cmp
sbb
ss
cltd
push
test
fildl
inc
orb
insl
cmp
mov
jg
mov
nop
add
cmp
add
aad
push
mov
or
inc
dec
lret
xchg
mov
std
enter
xor
mov
jne
mov
inc
insb
repz
jo
add
mov
data16
fwait
and
xchg
ljmp
jl
cmp
sbbb
mov
rol
add
bound
mov
jae
mov
mov
push
pushf
and
test
stos
imul
xor
mov
dec
imul
jae
jp
adc
jge
insb
pop
movsb
fmul
sbb
test
icebp
lods
cmp
andl
push
pop
sbb
mov
jle
je
mov
or
movsb
sbbb
sarb
add
mov
mov
bound
jae
notl
add
push
outsb
lock
in
imul
dec
jg
xchg
pop
mov
mov
inc
jb
and
push
mov
dec
sub
or
dec
enter
rolb
or
sub
jg
sti
js
fwait
pop
pop
or
out
push
adc
sub
insl
xorl
mov
mov
test
or
xor
mov
push
in
pop
sbb
add
in
xchg
mov
dec
std
cmc
test
enter
inc
sub
fwait
jbe
pushf
mov
xlat
mov
loop
fbld
ret
mov
orb
fs
jns
jae
mov
testl
js
pop
adcb
or
dec
testl
xor
outsb
dec
int
mov
xor
xor
sub
call
enter
int3
mov
xor
sbb
ret
sahf
xchg
dec
sub
inc
add
jle
inc
push
xor
inc
es
cli
adc
mov
scas
jo
mov
imul
xchg
push
jae
pop
push
push
fidivrl
aas
jge
xchg
mov
stc
pop
adc
movsb
adc
push
push
flds
stos
aaa
sub
fcom
pusha
lret
fnstsw
adc
pop
add
faddl
xor
adc
xchg
pop
lret
push
xchg
or
ss
clc
mov
aas
testb
inc
fwait
lcall
out
mov
push
jae
mov
stos
aam
add
jmp
rcrl
push
xchg
mov
sub
cmp
push
sbb
lret
divl
hlt
scas
into
fnstsw
add
in
jae
mov
ljmp
push
lcall
outsb
pop
push
dec
cltd
jb
push
movsl
scas
jge
lahf
pop
dec
inc
adc
and
aam
test
insl
push
bound
aad
sbb
adc
int
cmp
mov
jmp
dec
jp
or
mov
push
std
ret
or
inc
lock
or
lcall
es
push
cmp
sahf
push
ficompl
sahf
test
repnz
cmpsl
adc
test
push
dec
aam
ds
dec
mov
stos
dec
stc
aam
add
shr
aas
mov
or
outsb
ss
push
insb
xor
cmp
pop
lods
rorl
mov
xor
movsb
outsb
adc
mov
in
and
push
jge
ss
and
jmp
dec
int3
es
push
fimull
sbb
and
fnstcw
mov
push
cmp
fsub
jg
inc
inc
arpl
in
pop
pop
call
mov
adc
pop
jne
addb
mov
sahf
xchg
gs
lea
lcall
int3
cld
inc
add
xchg
fistpl
imul
mov
repz
cmc
pusha
repnz
cwtl
and
mov
inc
cli
inc
test
loopne
cmp
aaa
cs
imul
into
mov
pop
jbe
bound
jb
jge
cmpsb
pop
popa
iret
inc
lods
mov
jle
jae
sbb
inc
cmp
or
scas
std
orb
adc
dec
scas
cmc
adc
dec
hlt
mov
jne
push
inc
shll
xchg
add
push
dec
xor
or
int
push
sub
push
int3
das
es
mov
pop
adc
adc
or
dec
test
outsl
aas
xor
cmpsb
adc
leave
inc
outsl
arpl
mov
mov
push
lahf
in
int
fs
rcr
mov
shll
cs
aad
jb
mov
add
sbb
jae
adc
andl
fwait
pop
pop
mov
lahf
shlb
outsb
jne
in
mov
pop
rcll
ficoms
dec
dec
int3
ficompl
jmp
add
and
ficomps
mov
cmp
lea
xchg
pop
inc
in
xchg
and
pop
or
sbb
and
xlat
jp
lahf
sarb
pop
pushf
inc
mov
cmc
leave
pusha
lahf
out
mov
andl
push
cmp
sbb
fs
jns
pop
sub
flds
mov
nop
scas
pop
sbb
test
dec
add
jmp
cli
shll
adc
hlt
and
int3
iret
pusha
sbb
xchg
sub
inc
push
xchg
mov
sub
and
dec
cmc
imul
aam
adc
jmp
hlt
and
mov
scas
es
add
pop
add
push
mov
xlat
and
adc
fnstcw
inc
pop
mov
les
cmp
mov
add
inc
and
push
and
jmp
and
outsl
roll
in
and
rcrb
lods
or
lahf
repz
mov
xor
mov
mov
cld
imul
inc
and
sarb
sbb
xchg
mov
push
ljmp
mov
inc
cmp
outsb
xchg
cmpsb
pop
mov
lock
push
mov
xchg
jne
mov
adc
fldl
mov
inc
mov
into
mov
pop
jae
and
arpl
jg
aad
popf
scas
push
mov
loopne
pop
lea
lock
fdivs
inc
add
pop
ja
or
test
rolb
out
add
jle
xchg
aad
mov
in
inc
dec
add
bound
repz
fdivrs
xchg
xchg
imul
scas
cmp
push
push
inc
lret
icebp
mulb
dec
xchg
pusha
dec
test
dec
sub
mov
ficoms
cmpsl
and
mov
cs
mov
les
add
insb
fnstcw
mov
std
fucom
pop
lea
cmp
sub
cld
movsb
sub
push
jle
pop
les
pop
leave
push
mov
dec
cmp
inc
sbbb
clc
inc
sbb
xchg
ds
sub
mov
mov
in
iret
inc
orb
cld
hlt
test
ja,pt
xor
arpl
mov
call
mov
pop
mov
jne
cmp
adc
aad
ret
push
fidivl
lods
lahf
fsubp
push
cmp
mov
dec
sbb
call
cmp
xchg
adc
xor
pop
lahf
xor
and
and
lods
and
fs
jge
lahf
inc
and
cmp
iret
divl
andb
iret
gs
mov
test
lock
and
je
jne
popa
pop
lds
pop
loope
cld
lea
and
es
enter
mov
dec
in
inc
push
shll
js
cwtl
jbe
mov
popf
lahf
enter
js
xor
jge
cmp
cmp
mov
out
or
mov
push
ret
jmp
rcr
mov
call
mov
cld
mov
and
push
sub
stos
data16
loop
add
insl
mov
lea
pop
jno
fisubl
pop
ljmp
enter
imul
imul
dec
xor
mov
push
aaa
js
addb
mov
int3
jb
push
lahf
and
addl
push
test
or
add
xor
mov
lret
aas
mov
mov
adc
push
dec
and
pop
shl
ja
sub
inc
xor
das
dec
xor
xor
pushf
movsb
mov
std
ds
sub
fcoms
inc
inc
fcmovbe
add
push
lods
mov
imul
sbb
inc
or
inc
sbb
test
cmp
ret
stc
inc
push
aaa
jno
jle
arpl
adc
rcl
jl
in
adc
inc
mov
test
pop
push
loopne
addl
mov
addr16
adc
in
in
cmp
bound
insb
mov
xchg
pop
cltd
inc
loopne
mov
decw
cld
add
scas
pop
and
mull
mov
push
inc
add
jo
or
mov
xchg
inc
pop
insb
xchg
leave
gs
je
lea
ret
ljmp
dec
in
je
push
scas
push
sti
xchg
xchg
nop
mov
fisttps
addr16
mov
add
xchg
cmp
aaa
lcall
dec
mov
sti
lock
mov
push
xchg
sti
xor
xor
int
cmp
sar
inc
adc
pop
and
pop
ret
push
pushf
ja
jbe
xchg
add
ret
xchg
or
jae
lret
shrl
lahf
push
insl
loop
aas
cwtl
or
xchg
and
and
shlb
and
jp
sub
pusha
in
ja
mov
insl
mov
mov
adc
loopne
andb
movsb
iret
outsb
pusha
cmove
push
jno
sub
push
dec
loop
push
lea
popa
add
xorl
test
xchg
loopne
in
sub
ss
xlat
sbb
cmp
test
nop
je
sti
dec
jb
je
jecxz
xchg
ja
mov
mov
or
mov
dec
inc
cmpsl
jno
push
xchg
and
lock
jl
mov
add
and
cli
jmp
adc
mov
adc
jns
fdiv
popa
addr16
pop
adc
ret
inc
xchg
test
subb
shlb
jmp
data16
movsb
movsl
out
mov
mov
and
mov
push
or
pop
popf
outsb
xor
scas
xchg
jle
orl
cs
arpl
in
fsubl
gs
dec
pop
sub
cs
sub
fistps
mov
cmc
stos
mov
out
rolb
into
xor
dec
xor
mov
inc
adc
push
cmp
jnp
leave
jne
mov
mov
ret
push
cltd
les
jne
je
inc
sub
lods
sbb
shrb
jecxz
cmp
sahf
add
addb
push
inc
and
jo
leave
mulb
mov
pop
inc
push
and
sbb
or
push
ljmp
xchg
rorl
mov
lods
mov
push
movsb
dec
lods
sub
sbbl
and
movsl
inc
or
scas
int3
jbe
add
jl
xor
or
jns
shrl
xorl
sub
das
mov
inc
fsubrp
fstl
sub
test
add
sti
jbe
pop
push
pop
adc
mov
sahf
cld
mov
mov
scas
out
adc
or
xchg
and
sti
adc
nop
rol
out
adc
mov
dec
lret
lds
mov
lret
and
dec
xor
fs
test
test
paddusw
aaa
jne
iret
mov
scas
nop
les
push
xor
rolb
lea
add
xchg
adcl
lds
or
fxtract
addb
pop
stos
adc
sahf
dec
push
aad
stos
mov
insb
and
cmp
cmp
mov
int3
pop
inc
in
pushf
inc
cmc
or
cmp
sub
mov
scas
cmp
xor
mov
xor
push
test
xchg
cmp
stos
xchg
scas
sti
fsubs
shll
lcall
dec
mov
movsl
xchg
xor
loop
xchg
cmp
fsubrl
push
push
es
pop
mov
and
push
push
inc
sub
sbb
cwtl
pushf
imul
or
pop
pop
fistps
xor
mov
pop
stos
cmp
jg
cmp
imul
lods
xor
shll
push
cld
inc
mov
mov
mov
push
stos
into
mov
sbb
sub
push
lret
lret
gs
loope
clc
aaa
sbb
xor
stos
push
leave
ret
fidivl
or
stc
cmpsb
and
pop
daa
pop
sti
add
adc
aaa
dec
sahf
into
sbb
xor
xorb
or
pop
xlat
jecxz
mov
rorb
sub
je
and
ja
sbb
inc
in
xchg
int3
cmp
push
icebp
push
jns
xchg
test
repnz
movsb
push
mov
pop
mov
inc
movsb
xor
mov
xor
movsb
jge
mov
dec
in
and
pusha
int3
mov
dec
or
testb
mov
pop
pop
mov
clc
xchg
mov
push
int3
outsl
jne
cmp
out
add
mov
cmpsl
shrb
push
dec
mov
pusha
inc
push
push
xchg
outsl
jge,pt
dec
cmc
addr16
mov
xlat
mov
loop
jge
loop,pn
mov
aad
jae
faddl
aaa
repnz
pushf
adc
ret
xchg
enter
mov
ret
pop
xor
daa
pop
push
daa
pop
sbb
int3
jno
lds
int3
scas
mov
imul
inc
lea
negl
mov
xor
nop
sahf
cltd
insb
stos
fsubrs
jg
pop
jge
cltd
out
sub
add
out
movsb
repz
pop
cmp
dec
icebp
mov
jnp
mov
scas
lods
xchg
push
push
dec
mov
ficoms
push
mov
rcrb
loop
orl
and
xchg
pop
cmp
jecxz
cli
movsb
popf
xchg
adc
orl
fs
icebp
test
ja
mov
and
add
pop
xlat
cmove
xchg
jb
in
in
xor
subl
insl
dec
call
loopne
fistpll
loope
sahf
test
pop
push
push
fadd
mov
inc
data16
insl
testl
ss
and
pop
xchg
fwait
or
adc
or
loop
add
cli
pop
sti
test
iret
xor
bound
fs
lcall
ljmp
push
push
or
mov
out
sbb
cmc
pushl
stos
mov
xchg
sahf
xchg
outsb
mov
out
repnz
mov
and
or
push
imul
pop
cmp
stos
jbe
sub
cltd
xchg
jmp
test
inc
sahf
popf
roll
mov
daa
mov
sbb
fwait
pop
pop
scas
ss
pop
outsb
and
mov
test
movsl
fistpl
mov
in
xchg
in
dec
or
or
inc
push
outsl
cmp
mov
add
mov
and
xchg
outsl
cmp
lods
or
lods
pop
cmc
mov
cmp
jns
add
into
sub
add
push
cwtl
jae
mov
imul
mov
in
jbe
push
add
xor
insb
fcoml
fmul
xchg
lock
mov
cli
or
pop
xchg
fmull
mov
pop
pop
jae
push
ret
stos
pushf
sbb
out
stos
lods
cmp
out
adc
add
out
stos
dec
cld
and
fisttpll
or
jle
ret
leave
xchg
pop
insl
mov
xor
fs
push
cmpsb
sbb
int3
adc
push
dec
and
scas
into
std
fsts
sub
add
add
js
sti
mov
into
jp
movb
ss
sbb
xchg
lock
lcall
pop
jae
push
or
dec
arpl
add
rorl
cltd
ss
mov
push
movsl
dec
rcll
mov
lods
lret
dec
inc
cs
xchg
stos
jbe
mov
cmp
out
ja
mov
mov
fwait
lods
leave
mov
sbb
pop
inc
pop
jl
subl
out
adc
outsl
popa
mov
xchg
and
rolb
push
roll
push
adc
push
mov
and
mov
ret
and
shlb
inc
mov
int3
fldl
mov
stc
and
shrb
or
xor
xchg
dec
pop
fwait
pop
adc
std
popa
arpl
mov
mov
mov
movsl
xor
adc
flds
pushf
sub
ljmp
sub
pop
shlb
dec
adcb
push
or
test
cmpsb
or
mov
cs
dec
xchg
mov
rcrb
lods
test
pop
in
and
jae
rolb
ret
jae
mov
fcomip
fcmovnbe
pop
sub
mov
pop
sbb
fisttps
and
loop
mov
mov
push
push
mov
cmp
jns
adc
sub
imul
lret
push
inc
lcall
out
mov
pop
add
fld
test
jb
aas
xchg
pmaxsw
rcrb
loopne
push
cmpsb
out
mov
cmp
pop
push
xchg
mov
inc
fsubs
dec
push
xor
pop
add
mov
jnp
pop
and
lahf
adc
cmc
mov
arpl
dec
dec
imul
addb
pusha
scas
inc
insb
fcmovu
into
xchg
addr16
jns
jl
cmpsb
in
pop
int3
ja
sarb
out
loope
inc
mov
adc
push
push
and
and
sub
roll
push
in
xchg
sub
sub
push
lods
test
and
ja
mov
int
imul
add
push
ljmp
mov
imul
xlat
aad
cmp
xlat
jbe
and
jne
or
scas
mov
sbb
test
adc
cli
sbb
leave
sub
data16
mov
or
aas
adc
lea
mov
call
cmpsb
jg
mov
sbb
stos
mov
into
jl
adc
dec
repnz
cmp
add
pop
shll
imul
leave
ret
hlt
sub
pop
cmp
or
mov
arpl
lret
lea
inc
xor
inc
xchg
xchg
stos
test
mov
shr
in
jle
xchg
jl
rolb
add
aaa
pop
shrb
mov
pop
push
pop
pop
into
fwait
out
idivl
addl
cltd
xchg
push
mov
pushl
ret
add
incl
jg
jg
mov
jb
xor
push
add
push
cmp
mov
cs
push
xchg
cmp
sub
pop
or
subl
js
shlb
dec
xchg
xor
insl
and
repz
mov
rcll
aaa
stc
clc
insb
cmp
pop
in
mov
ror
fbstp
insb
pop
xor
stos
sub
mov
mov
jmp
std
or
or
aaa
adc
xchg
adc
fstpt
xchg
mov
sahf
dec
fwait
mov
je,pt
lret
jbe
dec
mov
fs
push
movsb
jo
dec
adc
lret
push
in
xchg
in
addr16
mov
mov
jb
aam
sub
pop
test
enter
xchg
mov
sub
sub
aas
arpl
add
xor
scas
cmpsb
sbb
add
ljmp
cmp
in
pop
inc
lods
add
jo
movsl
rcrl
jg
outsb
or
rcrb
aam
fstl
cwtl
pop
jns
lahf
pop
fmull
pop
les
sbb
out
and
push
push
jnp
mov
xchg
cli
jae
sub
dec
inc
push
or
imul
pop
xchg
sbb
push
movsl
aas
test
in
cmp
and
and
push
loope
dec
fstps
adc
push
outsl
xor
in
shl
pop
mov
inc
fld
daa
je
loopne
das
push
mov
fdiv
in
int
mov
push
jmp
mov
inc
negb
fisttps
fidivl
push
cltd
pop
int3
cmp
pop
pop
sahf
mov
inc
rep
push
add
mov
cmp
int3
je
inc
jo
jb
xor
scas
push
addl
push
push
ficoml
jle
sahf
pop
repz
in
imul
nop
sbb
fcomip
mov
cmp
and
int
lea
dec
pop
stc
ljmp
pop
add
cmp
push
pop
clc
push
hlt
daa
xor
inc
xchg
mov
xchg
out
ja
jbe
dec
xchg
jbe
lmsw
xchg
push
repnz
je
shll
cmp
jecxz
dec
jne
dec
pop
pop
pcmpgtb
mov
jle
fildll
dec
imul
xchg
insl
loop
push
mov
ret
into
in
mov
pop
clc
mov
ljmp
lcall
in
test
stc
adc
andl
add
dec
sbb
gs
adc
push
in
push
jp
out
jge
sti
sbb
fs
or
push
add
and
stos
movsl
and
xor
mov
je
rclb
adc
pop
adc
sub
add
int3
cld
in
push
shlb
mov
add
add
js
sub
mov
fildl
lods
pop
mov
mov
test
addr16
jbe
and
push
cmpsb
aas
cli
test
adc
push
mov
stos
jecxz
jae
cmpsb
stos
ret
sbb
sbb
fwait
add
insb
xor
xchg
loope
addr16
push
jge
sarl
ror
adc
mov
lahf
jp
jno
or
add
cwtl
subl
out
mov
inc
dec
loope
pop
into
loopne
jge
push
aad
mov
mov
adc
clc
xchg
je
std
loop
xor
or
mov
dec
mov
sub
sbb
mov
jae
push
in
cmc
cmp
push
cmp
mov
sub
clc
sbb
stos
mov
mov
mov
mov
sub
cmp
sub
add
negl
nop
pushf
dec
inc
adcb
add
cmc
mov
and
jg
mov
mov
stc
daa
ds
test
mov
gs
out
or
dec
fistpl
pop
ljmp
lahf
xor
lds
mov
sub
in
jo
adc
lcall
push
sahf
push
shll
mov
in
icebp
adc
subb
aad
stc
xchg
fndisi(8087
cmpb
add
xchg
add
iret
lods
rcrb
cmc
in
inc
xor
xchg
jbe
outsb
data16
jae
rorl
sbb
mov
inc
dec
popl
add
pop
mov
pop
or
jb
test
push
test
loopne
cmpsb
hlt
push
rcl
cmp
jno
jnp
stos
idiv
mov
insb
stos
fdivrs
cmp
xchg
or
pop
std
int
jo
cmp
mov
scas
add
js
jmp
test
bnd
mulps
mov
mov
add
xchg
lcall
cmp
sbb
jae
sub
jnp
or
xor
lods
call
cmp
iret
adc
fildl
jb
mov
insl
test
test
and
cmp
sub
sbb
stos
scas
sbb
sarb
adc
rcrl
stc
cmp
ss
sbb
int3
or
insb
inc
call
xor
dec
xor
xchg
mov
sti
loope
mov
pop
pop
mov
pop
sbbb
mov
push
scas
sub
push
mov
cmpsl
aam
subb
in
jmp
movb
jbe
outsl
nop
xchg
push
cmp
fdivs
jns
dec
stos
jmp
repnz
icebp
jae
sbb
sbb
jb
or
test
sbb
outsl
push
fiadds
nop
test
test
int3
addr16
mov
sub
addr16
mov
and
lcall
loop
xor
mov
andb
cmp
mov
xchg
scas
xchg
insb
mov
int
xorb
pop
add
in
jle
pushf
aaa
lea
test
rorb
xchg
inc
push
and
mov
push
dec
mov
xchg
and
mov
push
sbb
fs
lds
inc
inc
jbe
push
jp
subb
inc
adc
push
push
jno
sub
fsub
mov
decb
xchg
xorb
adc
push
pusha
mov
xlat
aas
sahf
lods
xor
sub
test
pusha
cmp
cld
repz
sub
mov
sub
cmpsl
mov
mov
pop
adc
test
fldt
in
fadds
push
push
adc
xchg
ret
push
ffreep
aaa
sub
sarb
jns
pop
adcl
fmull
ret
loop
jbe
xchg
popf
dec
stos
es
adc
ret
mov
aas
sbb
or
jecxz
mov
lds
daa
mov
cmp
mov
adc
sub
adc
xor
lea
push
out
ds
or
shrb
scas
push
jns
pushf
outsl
std
xchg
outsl
hlt
sbb
out
or
adc
mov
lock
imul
jns
les
lret
lret
in
xchg
cmp
je
leave
mov
jno
mov
cmp
shll
imul
add
arpl
inc
fldenv
cmp
mov
mov
pop
push
and
repnz
divl
mov
lds
inc
jns
bound
ret
pop
rclb
cld
push
aaa
xchg
mov
lds
out
orb
test
add
in
and
jge
test
movsl
fwait
les
xor
dec
cs
pushf
arpl
or
dec
xor
xchg
push
bound
push
dec
mov
outsb
sbb
aad
les
jno
xchg
xor
mov
sub
push
and
xchg
inc
out
push
cmc
sbb
out
push
add
ss
les
sbb
loope
inc
pop
dec
arpl
hlt
gs
shlb
jge
mov
mov
das
jmp
add
in
movsb
cs
add
adc
test
repnz
addr16
pushf
cli
xor
mov
dec
pop
fidivl
mulb
jnp
jmp
inc
cmpsl
dec
daa
clc
and
das
xor
cs
je
shll
or
push
xor
sub
es
sti
scas
mov
pop
std
push
sbb
lds
cmp
leave
stos
mov
xor
mov
cmp
mov
bound
adc
ret
mov
icebp
lock
not
mov
mov
mov
jge
pop
xchg
pop
sub
jmp
xchg
xchg
fs
enter
mov
jmp
notl
fdivrs
sbb
push
fbld
cmp
jno
jb
aaa
sbb
lret
notb
push
call
fs
add
outsb
xor
xor
and
cltd
push
addr16
ljmp
adc
js
xchg
rorl
int3
cs
loop
add
test
dec
lods
lods
fwait
jmp
mov
pop
aaa
dec
cmpsl
shll
loop
insb
xchg
lcall
push
pop
mov
in
shl
xchg
fstl
nop
cld
xor
xchg
ret
dec
adc
mov
or
or
pop
mov
bound
cmc
jo
jge
dec
cmp
xor
lds
jmp
imul
mov
mov
mov
or
in
aad
jb
mov
orl
adc
jnp
mov
clc
push
inc
push
clc
xchg
cli
add
icebp
sub
mov
mov
rcr
push
mov
fildl
mov
mov
mov
es
xor
add
cmp
dec
inc
scas
ja
jl
hlt
out
pop
popa
dec
adc
or
pop
lods
repnz
mov
adc
mov
jge
mov
jmp
repz
xchg
in
scas
pop
sub
popf
inc
outsb
les
arpl
pop
pop
mov
subb
cld
jmp
fidivrl
sti
test
dec
jb
int3
aam
xchg
ljmp
loope
jl
cmpl
xlat
mov
inc
jbe
in
cmpl
xorb
scas
dec
mov
rcrl
push
push
xor
cmp
pop
loop
xor
jnp
test
cmp
pushf
lds
sbb
mov
out
insb
xor
mov
lods
lock
sbb
push
into
mov
daa
adc
jecxz
popa
xchg
dec
leave
mov
in
mov
inc
divl
icebp
dec
lcall
inc
push
push
mov
stc
push
inc
inc
in
fimull
push
mov
popf
sbb
bound
mov
push
mov
sarb
popf
ss
stc
mov
pop
xorb
shlb
test
outsb
inc
mov
adc
fs
dec
rcrb
cli
ljmp
push
icebp
data16
stos
movsb
dec
dec
xor
lea
idivb
sahf
dec
dec
mov
jb
mov
jo
pushf
ret
and
neg
and
sbb
and
aaa
out
push
xchg
and
xchg
cmpsb
movl
pusha
in
aad
scas
pop
cld
mov
or
addr16
sub
ja
push
inc
sbb
cmp
jbe
ljmp
pusha
lds
addr16
adc
iret
inc
xchg
fisubrl
sub
jmp
sti
and
push
out
xlat
jg
scas
repz
in
lret
mov
insb
divl
xchg
scas
pop
std
add
js
or
cmc
pop
cmp
rcll
adc
add
out
lcall
dec
sbb
aas
mov
mov
xor
das
inc
fwait
sbb
xor
jb
adc
jge
loop
pop
decl
pusha
repz
sbb
mov
pusha
pop
fcompl
jle
inc
and
ret
push
repnz
ss
push
xor
pushf
cmc
aad
rorb
movsl
out
mov
xchg
cmpb
inc
scas
add
and
repnz
fwait
xchg
cmp
cmc
add
paddusw
out
cmpl
rorb
push
into
adc
jno
outsl
js
cmpsb
jno
frndint
adc
outsl
fisubrs
ret
lock
stc
pop
dec
add
cmp
daa
pop
cmp
or
mov
lods
outsl
sti
call
test
std
dec
les
xchg
test
mov
les
jo
cmp
sbb
pop
push
loope
inc
inc
sub
sub
push
loope
adc
ss
jle
aas
jns
lea
mov
mov
cwtl
cmc
inc
push
outsb
ret
ss
lcall
stos
push
adc
leave
loopne
jp
popa
push
mov
loop
ss
push
pushf
and
add
xchg
jns
outsb
shl
daa
and
enter
mov
pop
sbb
mov
lret
insl
fisttpl
xor
xchg
add
movsb
jg
cmp
pminub
push
and
sar
sbb
and
ljmp
mov
outsl
cmp
stos
shlb
jp
adc
mov
fldt
popa
int
rcrl
repnz
push
loope
out
mov
ud2
push
test
pop
mov
and
adc
or
mov
dec
xor
dec
out
int
inc
insb
fisubl
sub
sub
in
push
out
dec
aaa
push
xlat
jb
or
mov
xchg
jae
push
mov
or
jb
out
adc
repnz
cmp
mov
or
mov
sub
xchg
dec
lds
adc
xchg
inc
cmp
xlat
xlat
es
andl
cmp
sub
push
lds
sub
pop
pop
xorl
notl
or
pop
cmc
mov
ja
sub
and
push
mov
call
jo
test
js
jp
cmp
pop
pushf
das
sbb
and
jbe
inc
pop
call
inc
or
dec
lods
mov
mov
mov
movsb
mov
fldenv
add
ja
sahf
xor
sti
sub
mov
insb
sahf
push
push
xchg
aam
movsl
xchg
dec
add
pop
inc
lea
mov
dec
cmpl
int3
into
fnstsw
xchg
lods
xor
repz
aam
rcrl
int
sub
xor
jmp
xchg
push
iret
pop
cmpl
fs
cmp
mov
adc
leave
call
aaa
inc
rcr
or
push
pop
cmpsb
pop
outsb
cltd
or
dec
xchg
rorl
xchg
mov
mov
dec
push
jp
negl
fcompl
dec
loope
sbb
das
leave
stos
fnstcw
xlat
adc
mov
push
std
shrl
xchg
inc
js
mov
cmp
sub
adc
mov
add
lods
push
gs
xchg
sbb
xor
scas
cmp
mov
cmp
stos
aam
mov
out
jns
sbb
push
mov
imul
pop
daa
das
ret
dec
xor
and
sar
push
in
orb
cs
mov
mov
rorb
popf
in
rcrb
pop
mov
popa
xor
icebp
push
test
adc
push
jo
xchg
outsb
push
or
and
pop
ljmp
mov
push
dec
test
push
das
lods
jb
pop
cmp
xchg
or
sub
ret
xor
ja
sbb
adc
lahf
sbb
dec
mov
mov
rol
lret
sbb
pop
ljmp
inc
or
add
sub
popa
mov
sub
add
xorl
rol
add
pop
shl
insl
push
lods
fildl
add
pop
out
jg
int
or
lods
sub
icebp
mov
sub
cmovg
imul
push
sub
pop
mov
push
aam
inc
incl
cwtl
arpl
cltd
dec
add
cmpsl
or
mov
sti
sbb
add
out
lds
std
cli
xor
test
fcmovnb
repz
filds
ret
fcmovbe
cmp
movsb
ss
lock
fsubr
jbe
adc
jmp
xchg
in
test
cmpsl
mov
dec
and
and
dec
xchg
outsb
inc
jbe
sbb
int
pusha
stos
inc
mov
pop
lret
fstp
mov
jmp
sahf
sbb
dec
jo
idivb
scas
popf
jge
ljmp
inc
xor
sub
inc
lea
xchg
and
mov
mov
or
dec
push
hlt
sbb
pop
or
fadds
jns
out
jno
inc
lods
movzwl
or
pop
mov
jl
xchg
lods
cwtl
rcl
insl
xchg
cmp
les
push
shl
cmpsl
jo
xchg
sub
mov
rorb
test
movsl
mov
adcl
push
shll
out
cmpsl
inc
jne
push
mov
les
and
and
lret
inc
mov
push
xchg
lret
push
rcrl
add
popf
lcall
xchg
cmp
xor
and
push
dec
push
push
sbb
sbb
mov
jle
jnp
pmaxsw
js
cld
add
dec
jbe
jno
loop
rclb
addr16
mov
mov
mov
inc
cmp
xor
or
fldcw
in
jnp
or
and
xchg
mov
mov
pop
sub
jb
add
into
pop
fdivl
int3
fcmovne
rcll
cwtl
out
xchg
add
xor
xor
mov
xor
sbb
xchg
enter
inc
fwait
xchg
lcall
repz
in
push
sub
dec
pop
lret
mov
mov
pop
inc
xor
push
pop
dec
in
lods
ja
stos
les
cmp
outsb
repnz
mov
data16
push
and
pop
push
dec
daa
imul
movsb
outsl
push
mov
lea
les
iret
stos
addr16
push
in
in
or
hlt
nop
in
pop
pop
fimull
mov
adc
adc
mov
mov
or
push
scas
mov
push
pop
data16
std
jb
loope
xor
ds
jno
in
sbb
popa
cmp
pop
scas
in
xchg
clc
adc
leave
repnz
adc
arpl
ret
adcb
out
jmp
dec
push
cld
mov
subl
dec
roll
data16
push
outsl
out
shll
mov
mov
pop
clc
iret
mov
loop
pop
imulb
out
fcomps
outsb
mov
dec
sub
stc
addr16
cmp
lahf
xor
icebp
sub
mov
in
inc
jb
fidivl
lret
pop
push
sub
es
jmp
aad
loopne
push
icebp
mov
mov
loope
testl
add
insb
rcll
lock
push
loopne
mov
clc
xlat
xchg
enter
jmp
cmp
movsl
mov
xchg
xchg
pop
adc
mov
lahf
fstps
das
int3
rorl
int3
xchg
loop
stos
scas
pushf
xchg
sbb
dec
xor
sahf
pop
rcrl
jmp
xchg
jle
aaa
and
and
fwait
scas
mov
imul
mov
and
cmp
cmpsb
loop
jp
cltd
pop
and
inc
push
xor
xchg
aam
jmp
loope
or
imul
sub
push
dec
in
sub
loope
lock
loop
cmp
jle
mov
loope
push
and
inc
lret
dec
mov
stc
arpl
inc
andl
in
xor
out
stos
add
jle,pt
and
mulb
shl
outsl
cmp
cltd
jmp
mov
adc
mov
xchg
add
shrb
ds
and
into
or
lock
sbb
mov
jl
sub
int
nop
ja
jp
inc
out
jmp
test
movl
clc
push
jae
es
clc
pop
adc
or
cwtl
sub
pop
mov
inc
fnstsw
inc
ja
cmp
jmp
icebp
mov
dec
lahf
inc
dec
cmp
test
iret
mov
xor
cmp
in
mov
and
xchg
mov
ljmp
aam
pusha
in
fdivs
adc
ss
push
inc
fisttpll
movsl
ret
xor
mov
jl
mov
movsl
pusha
fs
pushf
aam
and
or
ss
lock
mov
cmp
sub
cmp
cmp
push
dec
xchg
mov
adc
inc
adc
and
mov
cmp
pop
push
xor
mov
pusha
inc
mov
out
push
pop
adc
cltd
jae
inc
sub
daa
xlat
out
stos
jg
je
scas
lods
push
cmp
mov
in
outsl
loopne
cmpsl
mov
fnstsw
outsl
cmpsb
mov
sub
sub
jne
shr
xchg
push
dec
loope
adc
leave
mov
sub
call
adc
adcb
jne
and
dec
jp
stos
dec
idivl
jbe
out
in
dec
dec
xor
push
cmp
cwtl
scas
mov
xchg
lods
in
jne
pushf
scas
ficoms
or
mov
movsb
mulb
xchg
int
inc
mov
lret
jo
add
cmp
mov
loope
jge
repnz
lea
icebp
xchg
push
pop
movsb
sahf
mov
push
jmp
sbb
test
adc
cltd
lea
adc
fcomi
push
push
pop
int3
xlat
in
add
popa
sbb
sbb
mov
add
and
mov
mov
adc
std
push
xchg
fucomp
push
add
in
into
lds
jp
sbb
ficoml
or
adc
xor
loope
mov
jnp
push
sub
loop
adc
inc
rcr
push
pop
rcrb
mov
into
stc
xlat
cwtl
inc
or
das
mov
sub
out
aaa
loope
arpl
lods
fisubrs
stos
jno
fcmove
aas
push
es
add
push
push
push
cmp
insl
add
fs
xor
dec
cmp
into
int3
mov
aad
jns
mov
fiadds
mov
lods
pop
cmp
popa
fstpl
in
add
aad
cld
fsubrl
aaa
fld
stos
imul
inc
ljmp
xchg
push
cltd
mov
loopne
jmp
sub
dec
fsubrl
add
ja
or
mov
cmpl
dec
push
jg
mov
pop
fldl
pop
inc
lods
add
addb
ss
push
xchg
mov
aaa
xor
or
lods
rcrb
cwtl
push
push
mov
mov
sbb
ret
and
es
pop
pop
arpl
scas
fwait
add
into
pop
and
and
addb
mov
or
sbb
outsb
lods
mov
imul
lea
jns
je
cltd
xchg
loopne
and
fwait
js
push
mov
outsl
lcall
sbb
sbb
cli
inc
rclb
xor
dec
mov
mov
xchg
xchg
fstl
adc
jne
xor
sbb
add
outsb
scas
fincstp
push
push
mov
push
test
aaa
push
sbb
xchg
cmpsb
je
push
js
adc
ds
pop
clc
lcall
ds
push
jo
add
insl
popf
jle
cmp
xor
jl
clc
aaa
shrb
sbb
xchg
adc
and
das
ja
pop
mov
inc
jnp
or
push
xlat
xor
push
dec
cs
repnz
andl
data16
push
cltd
jge
lea
and
imul
in
lret
fisubl
repz
xor
cmp
or
mov
push
sti
sbb
imul
js
stc
out
xchg
in
mov
int3
test
lods
and
pop
pop
sahf
adc
outsl
push
sub
sub
pop
daa
mov
xlat
xchg
call
sub
push
aas
outsl
and
aas
mov
imul
std
jmp
cmc
in
pop
clc
push
push
nop
nop
jl
push
mov
jo
mov
cmp
mov
cmc
sbb
mov
mov
repz
jbe
push
les
xchg
or
ds
in
pusha
mov
push
jecxz
in
jb
out
orb
into
in
fisttps
jg
xor
mov
stos
hlt
dec
clc
adc
nop
sub
test
pop
leave
aaa
push
mov
jne
cli
test
lret
inc
push
dec
inc
repnz
pushf
inc
outsl
add
aad
sbb
pop
unpcklps
jbe,pn
lret
ljmp
sar
aas
sbb
jp
lock
stos
sub
jns
mov
pop
cmc
sahf
cmp
pop
daa
and
mov
popf
xchg
lret
repnz
jl
mov
lret
ret
rolb
cmp
loop
pop
inc
popa
mov
in
dec
imul
in
add
cmp
mov
push
dec
mov
hlt
dec
push
stos
jo
int
out
pop
push
imul
clc
iret
cmp
popf
and
add
push
imul
adc
fidivrs
jb
out
mov
roll
lods
mov
mov
jnp
rcll
cmp
insb
xchg
xchg
and
emms
stos
xchg
and
fld
std
ljmp
dec
xchg
jle
mov
sahf
popf
cmpsb
ljmp
sub
in
or
push
scas
push
ret
inc
jmp
sbb
aam
mov
inc
jl
xchg
fs
fwait
stos
out
std
fwait
shlb
dec
test
sub
push
dec
or
in
int
cmp
ljmp
aam
jbe
inc
xchg
xchg
icebp
dec
out
insb
mov
xchg
sbbb
adc
addl
leave
lret
clc
cmp
ljmp
fdivrl
mov
imul
sbb
lcall
and
mov
or
iret
xor
xchg
push
or
add
hlt
popf
stos
bswap
inc
cmp
shlb
icebp
mov
testb
sub
loopne
iret
fnstcw
pusha
inc
adc
xchg
adc
add
xor
add
sub
xor
xor
test
insl
jbe
adc
jp
arpl
rcr
inc
js
or
je
jo
jae
mov
in
xor
aam
jbe
xor
sbb
adc
xchg
mov
and
ret
and
mov
xor
rcr
mov
or
insl
stc
dec
inc
push
scas
cmp
mov
fs
dec
scas
ljmp
or
test
faddp
inc
adc
jb
es
jg
test
stos
out
int3
mov
xchg
rcrb
lret
test
mov
cmc
xchg
inc
lret
and
mov
pop
sti
outsl
and
in
popa
and
xor
mov
xchg
mov
fstps
aad
popa
pop
and
dec
mov
mov
mov
je
adc
cmc
jb
xor
repz
pop
divb
pop
test
call
fcmovu
xchg
int
cltd
push
data16
xchg
inc
hlt
js
scas
adcb
stos
jge
pop
adc
or
push
lods
xlat
jg
cmpsl
in
sub
cmc
mov
repnz
negl
adc
inc
cmp
mov
jp
in
test
stos
sub
mov
sbb
je
mov
outsb
and
xor
add
inc
les
push
add
xchg
in
mov
test
jae
lcall
dec
enter
adc
adc
add
sbb
xor
negl
push
insb
xchg
std
aaa
push
and
xchg
lret
enter
cmp
scas
jb
jg
imul
pusha
outsl
xchg
sub
mov
xor
push
inc
pusha
loop
jl
sbb
outsb
shrb
jl
push
mov
mov
lea
es
mov
mov
rorl
pop
adc
dec
xchg
dec
mov
adc
out
fwait
sbb
imul
dec
sub
repnz
xor
pusha
push
inc
jg
popf
loopne
icebp
push
jbe
push
out
cmp
xor
sbb
call
sbb
mov
xchg
pop
mov
add
je
inc
jge
xor
push
adc
pop
das
imul
ficoms
test
adc
int3
rcl
or
shll
fimull
adc
or
shr
test
pop
add
arpl
pop
mov
inc
bound
jle
sub
sbb
fidivrl
insl
loop
in
inc
aaa
in
mov
test
push
cmp
mov
mov
je
leave
jno
aaa
mov
ret
icebp
imul
xor
call
sar
add
jb
dec
cmc
push
xchg
dec
sbb
dec
add
fmulp
in
adc
jns
push
subl
movb
or
into
jno
cmp
or
sbb
fstpt
clc
pop
sahf
xchg
movsl
push
dec
decl
cltd
enter
jae
dec
xchg
pop
scas
mov
idivl
inc
mov
push
pushf
roll
popa
mov
dec
add
pop
sbbb
mov
push
dec
daa
mov
or
push
lock
and
std
inc
pop
sub
faddl
pop
in
cmpsb
in
cmp
cli
sahf
loop
pop
jbe
mov
push
lcall
jl
test
daa
popf
add
mov
or
adc
popa
xlat
mov
aaa
pop
mov
jb
outsb
pushf
stc
mov
adcl
outsl
enter
jp
sti
sub
adc
adc
mov
aas
cmp
daa
test
mov
push
je
inc
subb
add
js
shrl
mov
sbb
or
stos
jle
stos
add
fucomp
sub
rdmsr
pop
push
xor
push
adc
and
jne
jmp
and
sbb
or
xchg
arpl
cld
hlt
push
adc
cmp
stc
lock
lret
dec
lds
imulb
push
sub
cmpsl
add
cld
xor
cmpsl
repz
out
aam
std
lock
jmp
test
ss
andps
xchg
cmp
ds
jp
stc
ficompl
ljmp
stos
pushf
das
addl
nop
mov
sub
in
inc
or
push
adc
cmp
adc
cmp
addr16
mov
orl
cmp
lcall
int
es
mov
das
sahf
ss
dec
dec
xchg
into
data16
cli
inc
lret
enter
out
or
pop
pop
ja
sbb
sub
cwtl
inc
or
aaa
xor
pusha
add
cmp
js
fucompp
push
pop
mov
sub
scas
sbb
je
outsb
ds
mov
pop
sub
lret
mov
adc
or
xor
mov
hlt
xchg
jmp
imul
cwtl
jge
js
popa
adc
cmpsl
stc
fs
adc
daa
or
aad
pop
push
jne
mov
aas
fbld
adc
lret
int3
hlt
cmp
popf
xchg
js
dec
inc
sahf
mov
pop
jmp
rcll
push
cmpsb
sbb
fistps
cmc
mov
dec
ror
mov
cmp
push
out
xor
pop
cmc
inc
cmp
pop
push
sub
pop
jmp
aam
sub
and
in
call
mov
push
xchg
js
sbb
outsb
or
pcmpeqd
ss
insb
dec
enter
fwait
fwait
aad
cltd
dec
cmp
mov
mov
mov
scas
in
aas
xchg
data16
leave
push
pusha
cld
fimull
ljmp
das
or
ret
dec
das
push
mov
or
pop
xchg
lahf
icebp
or
push
aas
hlt
dec
xor
jg
jge
mov
jbe
lods
push
movsl
and
jb
xor
ss
pop
lahf
adc
mov
xor
cmp
xor
sti
push
xor
or
test
arpl
push
xchg
ss
adc
divb
cmpsl
js
mov
je
adc
jmp
push
nop
mov
cmpsb
mov
pslld
jne
cs
mov
xchg
lds
push
mov
and
je
add
scas
loop
sub
data16
push
mov
or
sub
mov
clc
sub
call
test
adc
sahf
xchg
ret
and
dec
pop
sti
jecxz
dec
jo
out
push
adc
sbb
jb
daa
ffreep
inc
jg
mov
adc
sub
jno
popa
fstl
push
adc
or
lds
jmp
jmp
mov
shll
push
out
add
pop
loop
outsb
mov
mov
mov
out
mov
cmp
test
fdivs
fidivs
pop
and
xor
pop
or
ja
lds
adc
loop
stos
pop
jl
repnz
popa
es
notl
jne
test
cwtl
cmpsb
dec
data16
xchg
xchg
or
mov
stos
push
ds
xchg
int
mov
jge
dec
pop
movsl
inc
fstpt
cli
add
mov
lods
mov
cmp
or
cmp
xchg
add
in
scas
paddb
mov
cmp
pop
mov
dec
xchg
jns
sub
cmpsl
xor
mov
xor
mov
push
push
movsb
pop
dec
cld
mov
mov
sub
pushf
adc
push
mov
movsl
lds
add
cwtl
jnp
std
sub
out
xchg
mov
push
xor
out
inc
mov
fstl
jg
aad
ja
outsb
roll
fimull
dec
loopne
mov
and
ljmp
mov
idivl
sbb
sbb
loope
pusha
imul
sub
xor
fstps
daa
int3
mov
fiadds
stc
shrl
xchg
jmp
mov
sub
or
mov
push
mov
repnz
sub
cmp
cmpsl
loope
adc
fldcw
ds
xchg
jo
sbb
sbb
pop
es
in
repz
inc
lods
add
ds
sbb
lods
xor
push
pop
clc
loopne
out
jne
rorb
lret
call
mov
and
loope
pop
cwtl
xor
inc
repnz
sbb
js
movsl
sarl
mov
and
xchg
test
in
mov
outsb
das
xor
sub
adc
movsb
lds
adc
fwait
jne
dec
xchg
add
jecxz
mov
sub
mov
pop
sahf
into
popa
cmp
divl
push
inc
popf
dec
mov
mov
dec
cmp
stc
mov
outsb
jo
js
mov
pop
rorl
push
mov
aaa
ret
cmp
and
jle
inc
or
call
mov
ljmp
sbb
js
rcrb
lret
xchg
mov
push
stc
fisttpll
mov
mov
in
ficoms
mov
stc
rol
pop
stc
sub
ficomps
lcall
shll
loope
int3
les
push
xor
enter
dec
iret
pushf
cmpsb
mov
lds
jmp
pushf
mov
jno
dec
add
xchg
adcb
and
sbb
std
sub
and
dec
sbb
enter
xor
jae
aam
or
inc
rol
jb
cmp
push
ds
ficompl
push
add
push
rclb
pusha
jb
and
and
fucomi
out
arpl
stos
sbb
into
testb
push
inc
mov
iret
les
js
inc
sbb
addr16
ret
mov
in
push
mov
aas
js
repz
fmulp
push
dec
test
pusha
mov
call
pop
lahf
dec
xchg
sub
cmp
jae
jl
mov
xchg
dec
pop
ja
ret
or
pushf
jb
orb
and
sub
xchg
into
aas
xor
fisttpl
pop
movsl
push
adc
rcrl
loopne
cmp
addr16
cmp
stos
cmc
dec
cmpsl
mov
repz
or
mov
xor
dec
add
and
inc
insl
testl
inc
mov
mov
jno
insb
outsl
xor
sbb
imulb
push
inc
lret
rorl
inc
jb
pop
daa
pushf
xor
data16
subl
mov
lret
mov
mov
es
jecxz
les
add
mov
jle
loope
clc
jecxz
test
fsub
repz
das
lahf
fs
mov
inc
popf
mov
add
fstpl
push
aas
es
test
sub
or
jl
jp
xchg
clc
mov
mov
xor
cmp
int3
jle
pushw
mov
ja
es
mov
or
add
mov
push
call
jbe
mov
sarl
popa
repz
test
jnp
aas
sbb
xchg
pop
or
scas
add
int
push
mov
pop
jns
sbb
jecxz
hlt
lahf
or
xchg
cmc
imul
bound
xchg
in
dec
xlat
enter
adc
sub
sbb
outsl
mov
mov
pop
ficoms
fs
push
mov
in
fs
fbld
mov
cmpb
mov
or
sub
cmp
aaa
ret
out
push
aam
ja
ds
push
lahf
enter
xchg
jge
push
pop
cmpsb
push
mov
pop
push
xchg
in
sub
and
mov
shr
cld
mov
outsb
test
inc
cwtl
inc
mov
cmp
int
fwait
mov
scas
xchg
mov
adc
shl
or
inc
test
push
fcompl
pop
les
rolb
add
jg
int
lret
xlat
shrl
inc
cmpsl
pop
fwait
lret
rolb
and
mov
push
scas
sub
push
jl
mov
lods
mov
aas
inc
imul
outsl
mov
icebp
in
jmp
test
inc
iret
xchg
dec
pusha
out
xor
jae
scas
int3
ss
jl
xchg
pop
insl
aas
push
add
dec
push
mov
call
lahf
sbb
ret
pop
sub
ss
inc
dec
ja
xchg
push
jle
jb
jbe
mov
lret
sahf
xor
pop
fdiv
cld
mov
xlat
and
cld
xor
lret
enter
sub
cmp
sahf
out
mov
mov
adc
stos
sbb
iret
rorl
les
mov
adc
jle
cmpsl
jb
or
sbb
outsb
cmc
lods
pop
ja
shlb
out
pusha
imul
xchg
insb
jbe
pop
sub
mov
in
test
dec
aaa
js
ds
and
sbb
push
into
cli
push
xchg
sbb
inc
pop
mov
fistps
andb
sbb
cmp
mov
mov
jmp
lods
stc
push
andl
bound
flds
or
test
clc
movsb
xchg
pop
xchg
mov
cmp
mov
jne
or
xlat
sbb
add
xchg
mov
dec
jmp
int
daa
mov
testl
push
jmp
cmp
test
ds
in
insb
repnz
cwtl
int3
stos
sub
test
jb
addr16
xor
sbb
mov
jb
shrb
stos
mov
pop
lcall
aaa
stos
xor
lret
xchg
test
jb
and
addr16
popf
aam
shll
add
popa
push
cmp
xchg
aas
adc
rolb
xchg
movsb
mov
push
dec
add
dec
lods
xchg
int
adc
jnp
in
aaa
pop
leave
outsb
sbb
jbe
test
les
clc
adc
fdivs
push
repnz
lret
push
in
mov
mov
int
popf
pop
fdivrs
fnstsw
test
and
cmp
sbb
stc
push
shl
jge
inc
cmp
push
and
sub
add
add
push
xchg
cli
lods
xor
das
dec
mov
jg
stos
icebp
mov
dec
nop
fsts
stos
movsb
adcb
xchg
jb
push
mov
pushf
jnp
fists
mov
mov
xchg
jmp
mov
shll
or
sub
mov
xor
adc
mov
jmp
xchg
movsb
lahf
jae
mov
adc
out
orb
and
cmp
scas
xchg
mov
mov
adc
fnsave
das
cmpl
lea
out
stc
lret
push
imull
push
add
sarb
insb
push
pop
mov
rep
xchg
mov
or
jp
and
xorb
cmp
mov
xor
adc
testl
mov
xchg
fmul
addr16
add
js
call
sub
xchg
aas
cld
xchg
mov
mov
mov
ret
fwait
shlb
mov
cmp
lret
dec
pop
mov
cmp
mov
mov
addl
dec
arpl
cltd
cmp
pop
inc
pop
pop
sub
sbb
adcb
jmp
and
adc
sbb
aas
adc
pop
mov
cmp
jno
in
imul
int
pushf
jbe
and
lea
test
sub
mov
lret
cmp
xchg
in
sub
sbb
cltd
cmp
ficompl
push
dec
pop
int3
in
movsb
mov
ja
push
sub
inc
outsl
xor
aam
inc
xorb
je
xchg
xor
out
push
sub
jno
daa
scas
mov
xchg
aad
arpl
mov
pop
loop
rolb
outsb
lock
fnsave
xor
fs
repnz
push
popl
bndstx
add
cmp
subl
fistpl
adc
cmpb
mov
inc
sbb
push
adc
loop
lds
scas
or
adc
rcll
leave
cmp
jmp
pusha
xor
roll
loopne
dec
ret
enter
ds
insl
or
pop
fmull
shll
cmp
ret
into
sub
movsb
xor
push
cltd
push
and
xor
xchg
sahf
jle
inc
dec
cmp
push
test
jnp
rolb
pusha
fidivs
lods
sub
mov
lret
fs
xor
inc
xlat
sbb
add
js
aaa
mov
jge
insb
daa
repz
out
adc
cld
xor
arpl
pusha
mov
out
inc
and
dec
out
add
daa
push
ljmp
inc
and
icebp
stos
pop
adc
cmp
mov
pop
loop
fdivr
cmc
inc
xor
mov
leave
push
insl
in
adc
sbb
jo
and
and
stc
or
cmovl
repz
jp
out
call
jg
cmp
ja
pop
stc
enter
out
xchg
loop
mov
sbb
fiaddl
xchg
dec
add
mov
add
jns
ds
inc
mov
mov
cmp
pop
mov
cmpl
data16
xchg
ror
lock
pop
int3
mov
and
push
ret
inc
sarb
rorl
and
cmp
fs
mov
add
cli
bound
jmp
mov
xchg
jecxz
or
sbb
sbb
sbb
mov
mov
xchg
scas
mov
loopne
xlat
mov
push
cmc
sub
or
pop
sub
fstps
push
push
dec
adc
aam
test
test
or
add
outsb
jp
not
jae
cmp
cwtl
out
jecxz
push
jle
pusha
inc
push
aaa
test
std
add
and
mulb
jns
outsl
ljmp
and
mov
int3
mov
xchg
mov
lahf
pop
dec
adc
jns
sbb
scas
push
jge
pop
in
ds
call
cmp
std
pop
add
xor
or
fcmovne
in
adc
cmpsl
or
mov
xor
mov
sarl
das
jbe
xor
dec
pop
pop
mov
push
mov
lods
enter
or
jl
stos
pop
shrb
and
dec
fldl
test
fmull
pop
mov
push
movsb
lock
cwtl
stos
add
insl
mov
pop
mov
mov
ja
es
adc
pop
aad
xor
inc
sub
call
xchg
xchg
ficomps
stos
add
bound
js
cltd
cmp
in
std
test
inc
cmpsl
cli
adc
and
icebp
dec
xorl
int
pop
sub
shll
xchg
inc
add
xor
add
mov
loope
or
into
adc
sbb
imul
mulb
sub
and
rcrb
pop
lock
test
cwtl
call
adc
pop
push
repnz
jo
xchg
int3
cwtl
mov
fstl
jbe
and
aam
or
sbb
cmp
mov
jg
mov
push
and
notb
dec
inc
loop
dec
lret
xchg
cmpl
ret
imul
adc
test
repz
mov
stos
int
pop
mov
add
xor
mov
testl
leave
shlb
in
dec
pop
sub
xor
ret
imul
mov
arpl
cmp
cmp
inc
pop
lea
jae
pop
inc
lret
pop
add
out
mov
addr16
int
jl
sub
cs
pop
enter
or
jns
jg
mov
or
shll
jp
sbb
jnp
ds
add
jp
insl
outsb
in
push
sbb
outsb
sub
loopne
jg
ja
mov
push
add
inc
sbb
sbb
xchg
xchg
std
outsb
ficoms
out
mov
imul
mov
mov
xor
test
and
bound
shlb
jnp
repz
mulb
xor
jl
sub
sbb
outsb
dec
mov
pop
sub
mov
shl
aam
mov
and
push
loope
andl
or
mov
jge
push
or
jb
push
pop
jle
ss
sub
cli
pop
sbb
sbb
and
pop
mov
arpl
rorl
adc
jo
adc
dec
mov
pop
popa
sub
lahf
jl
mov
and
ret
out
pusha
aas
loopne
lsl
cld
adc
adc
fucomi
outsl
cld
les
insb
sub
push
inc
int
fstpl
xchg
cld
add
inc
andl
test
xchg
ret
jns
imul
xor
jo
test
push
insb
cmp
inc
mov
cld
pop
add
iret
loop
lods
in
mov
jmp
push
lcall
mov
scas
aad
push
jbe
xchg
pop
ret
std
ficoml
add
sbb
lret
jecxz
mov
int3
ja
daa
cmp
ret
mov
inc
cmp
xchg
pop
jle
ds
aam
loope
adc
adc
imul
pushl
sbb
dec
fwait
mov
test
sub
mov
out
dec
addr16
cmp
lea
sbb
sti
cmp
fs
lret
jmp
mov
lods
mov
ja
inc
xchg
add
jnp
xchg
stc
in
fwait
je
pop
sub
fildl
sbb
sbb
sub
cmp
cmp
addr16
push
or
xchg
fstl
dec
fistpll
jmp
das
mov
pushfw
inc
sbb
push
fcom
adc
xor
sub
cmp
jmp
mov
pop
es
sub
pop
fucompp
pop
cltd
vaddsubps
add
add
xorl
push
scas
cltd
mov
pop
dec
jns
sbb
arpl
test
adc
sub
leave
addr16
icebp
xorps
dec
out
loope
inc
dec
or
les
push
xor
dec
adc
xor
mov
jae
fdivl
xchg
insb
sub
cmp
sbbl
divb
and
cmp
js
mov
adcl
inc
jl
fisttps
push
faddl
nop
adc
leave
movsl
mov
ljmp
in
orl
mov
dec
enter
gs
dec
mov
add
test
xor
mov
dec
addr16
clc
pop
inc
in
into
cmp
xchg
test
fistps
in
je
aam
dec
cmpb
pop
dec
push
xchg
push
adc
std
and
das
inc
orb
ds
fidivl
xchg
outsb
mov
test
jecxz
fwait
shl
xchg
cmpsl
and
sub
out
lret
pop
pop
aaa
imul
fimuls
push
aaa
ds
movsb
add
ret
or
pop
jbe
sti
mov
dec
xchg
int
lea
mov
or
jbe
or
mul
sub
rcr
jle
test
std
inc
or
in
out
call
mov
comiss
xor
pushf
lcall
or
es
inc
push
shlb
jle
xor
xor
mov
jp
xchg
daa
adc
fcmovne
in
and
inc
iret
add
ret
xchg
idiv
or
add
cmp
sti
shlb
bswap
mov
mov
ret
arpl
add
jge
mov
push
inc
dec
lret
mov
pop
iret
add
stc
data16
mov
fcomps
mov
mov
test
pop
sbb
mov
out
pop
cmp
lds
pop
jnp
xor
mov
js
adc
fcmovnb
daa
ficoml
push
fdivs
stos
pop
cld
mov
sarl
mov
sbb
idivl
popa
rolb
inc
or
mov
or
add
pop
xchg
mov
popf
lret
mov
xchg
cmc
test
jb
sti
jmp
or
mov
iret
sbb
call
adc
shll
arpl
int3
iret
sahf
lods
push
pop
orb
xor
cwtl
sub
mov
es
pop
pushf
mov
mov
loope
daa
rcrl
mov
mov
frstor
ljmp
into
sub
dec
in
cmpsl
jecxz
push
pusha
ret
mov
ja
in
sub
mov
in
std
jne
push
dec
pop
xchg
outsl
push
inc
xchg
push
outsl
add
mov
cld
push
sub
sti
flds
outsl
stos
aas
movsb
cmp
push
xchg
popa
jnp
int
dec
repnz
jbe
mov
loope
and
test
lcall
insb
cmp
push
addr16
ret
in
and
repz
loopne
lock
xchg
les
loopne
push
xor
dec
xor
ja
out
push
xchg
mov
stos
idiv
sbb
push
pop
add
or
mov
cmp
xor
ljmp
mov
pop
adc
pop
xor
mov
mov
xchg
int3
popf
or
sti
in
cld
ds
sub
mov
fisubl
cwtl
lret
popf
popa
int3
sbb
mov
mov
rorl
push
test
mov
push
jno
xchg
xchg
sub
sbb
push
mov
fisubs
not
mov
jecxz
jecxz
outsl
jmp
imul
into
out
pop
imul
cmpsl
mov
aas
pop
mov
dec
jmp
mov
inc
mov
cmpsl
clc
leave
lcall
mov
ja
adc
or
movsl
sub
cpuid
xor
and
xchg
insb
sti
push
divl
mov
imull
xchg
and
inc
fs
dec
mov
fwait
add
ja
addr16
mov
xor
inc
add
ror
fstpt
jle
mov
movsb
dec
cmp
ret
repz
aaa
xchg
push
insl
ljmp
sub
sub
jle
jns
icebp
dec
cmp
add
sbb
dec
lret
pop
adc
xor
out
jnp
adc
in
clc
jns
clc
push
nop
cli
movsb
mov
and
sbb
lods
push
push
and
mov
test
jge
sbb
jae
mov
add
mov
add
pop
push
jmp
shlb
xor
in
add
and
inc
xor
fdivrl
fisubrl
mov
dec
pop
xorl
adc
das
inc
popa
cmpb
das
mov
jne
test
mov
cld
or
dec
pop
cmp
jecxz
in
jbe
cmp
sub
xchg
or
hlt
fstpl
add
cmp
jmp
pop
scas
adc
sbb
sub
pop
push
and
aam
pop
push
movsb
mov
or
or
mov
mov
neg
and
inc
adc
sub
pop
pop
sarb
adc
cmc
loopne
inc
sub
push
pop
insb
lock
out
jmp
mov
mov
cmpl
imul
dec
scas
popf
rcll
in
sub
inc
push
push
xor
fistpl
sbb
hlt
jp
mov
ret
test
cmc
dec
rcr
xor
adcl
in
add
pop
or
pop
ret
stos
sub
jge
movsl
pop
add
push
scas
lret
pop
xor
mov
add
orb
dec
add
push
sub
decb
ficoml
mov
push
ss
and
orb
push
test
pop
xor
or
or
mov
pop
dec
pop
mov
cmpsb
in
icebp
sub
loop
shrb
out
adc
or
xchg
push
or
mov
and
mov
addr16
push
test
push
fwait
test
fsubrl
nop
pop
mov
cmp
imul
mov
pushf
lret
xor
fsubrp
adcb
xor
test
cmp
cmp
out
jge
push
dec
jg
inc
xchg
addr16
clc
xchg
dec
iret
mov
dec
or
in
inc
lahf
cmp
sahf
aam
out
sub
cmp
pusha
push
and
sbb
xor
push
cltd
jle
enter
int3
add
imul
fildll
pusha
xlat
fsubs
mov
cmp
mov
add
sbb
sbb
rcll
popf
imul
inc
test
movsb
inc
stos
fld
jp
out
dec
in
rorl
and
in
jne
push
adc
jle
hlt
jo
outsb
jmp
cmp
test
adc
repnz
imul
in
xor
cmp
aaa
loopne
into
sbb
jae
loope
dec
dec
mov
cmp
scas
ja
add
dec
in
xchg
inc
aaa
adc
xchg
mov
mov
xchg
into
stc
cltd
mov
xchg
loop
test
push
jle
mov
or
cmpsb
inc
int3
sbb
lods
lret
shlb
pop
and
mov
loope
mov
aas
push
xchg
ja
sub
fmull
lret
or
inc
pushf
clc
hlt
fwait
out
push
mov
ja
outsl
shrb
lock
sub
lcall
cmpb
mov
scas
nop
mov
adc
dec
adc
adc
pop
popf
sbb
and
jl
das
test
pop
xor
fs
mov
dec
leave
jae
subb
imul
pop
dec
sbb
popa
std
pop
xor
mov
xor
pop
pop
sub
loopne
aam
lods
int3
movsl
push
out
or
lcall
fs
jbe
iret
icebp
popa
push
clc
loopne
cmpb
or
xor
fcoml
cmpsb
add
sbb
or
xlat
mov
sub
push
test
popf
pop
pop
jb
shl
dec
push
iret
pop
mov
jl
stc
es
xchg
push
fnstcw
movsl
sub
xchg
mov
pop
lds
inc
rcl
fdivs
or
cmp
das
and
pmullw
insl
lcall
and
cmp
cmp
mov
and
mov
decl
cmp
or
and
loope
adc
sbb
les
pop
mov
mov
rcrb
jno
mov
cmpsb
jge
mov
ficoms
inc
adc
shl
xor
mov
push
dec
and
in
or
inc
jb
push
xchg
jge
or
add
fidivrl
sbb
mov
xchg
cli
daa
mov
out
sub
pop
dec
mov
ret
jae
loop
repz
mov
sarl
or
mov
cs
xchg
lds
inc
leave
hlt
dec
pusha
mov
sub
fdivs
adc
or
push
test
push
cmpsl
test
mov
js
push
ds
ljmp
mov
mov
aaa
fisubrs
jl
push
dec
hlt
cld
lret
fstl
cmc
cmp
pop
pop
mov
test
sub
test
imul
inc
ficoml
cmp
jnp
outsb
pop
aad
fwait
cmp
adc
dec
cmp
and
mov
das
aas
out
call
add
or
xor
xlat
mov
xor
dec
and
dec
cmpsl
icebp
xchg
pop
test
out
sub
push
inc
ror
adc
inc
leave
mov
scas
inc
and
jb
push
imul
or
lock
adcb
jecxz
in
inc
inc
lcall
xchg
daa
pop
jmp
arpl
dec
int
out
cmp
mov
or
xchg
push
data16
push
nop
ljmp
ds
xchg
in
orb
out
arpl
jae
or
and
ljmp
cmp
jle
jns
mov
adc
inc
push
pop
rclb
les
adc
fadds
or
jno
adcl
and
lods
sub
stos
lahf
jge
lret
lea
pop
shll
sbb
hlt
sti
mov
outsb
mov
add
ja
andl
fidivrs
lock
insl
inc
gs
jge
adc
xor
fdivrp
mov
pop
and
aam
push
push
lea
call
sbb
test
push
pop
sub
pop
pop
sar
pushf
dec
cmp
pop
xor
je
mov
inc
sbbl
cmp
shlb
sub
dec
mov
xor
in
fdiv
daa
cmp
pop
mov
inc
jne
lods
cmp
out
icebp
pop
repnz
ficompl
and
cli
repnz
jo
divb
leave
inc
cmpsb
xchg
add
mov
mov
insb
rorb
mov
adc
out
stos
mov
or
loope
mov
sub
inc
pop
mov
popf
mov
ret
je
inc
ret
mov
jecxz
int
ret
dec
loopne
mov
jnp
repnz
pusha
loopne
pusha
lcall
pushf
and
insb
push
daa
jae
es
das
mov
jmp
sbb
movsl
lcall
jne
mov
out
das
add
and
mov
rcrl
popa
adc
xor
jge
lods
mov
jmp
pop
xor
repnz
jl
test
into
sub
adc
xor
push
cmpl
xchg
mov
aas
jne
cld
cwtl
fsubrl
jle
inc
outsl
add
add
daa
inc
add
and
outsb
test
dec
sub
fwait
daa
aas
inc
je
xchg
push
inc
pop
outsb
xchg
out
test
repnz
mov
mov
push
out
mov
sub
xorb
shll
pushf
mov
jle
sbb
pop
xchg
out
testb
test
push
mov
mov
scas
push
icebp
lcall
pop
push
mov
mov
sub
push
pusha
jne
ljmp
rcrb
sub
adcl
push
js
adc
popf
xor
xchg
imul
mov
lea
lcall
push
into
push
and
fcomi
add
scas
js
aam
fnstsw
mov
inc
sbb
pop
adc
imul
xchg
ret
push
repnz
lods
je
jg
add
cmp
and
pop
fldenv
dec
pop
xor
movsl
pop
mov
shrl
lods
mov
pop
xchg
sub
popf
sub
leave
jbe
mov
fstpl
insb
ds
add
ficompl
or
shlb
das
outsl
cs
sub
jle
jmp
jb
data16
sti
aaa
imul
cmpsb
jo
stc
sahf
fdiv
inc
sbb
sub
inc
push
push
jo
mov
movsl
fdivrs
lret
in
sub
loope
out
pushf
sub
inc
out
xor
mov
dec
mov
cmpb
incl
cmpsb
loope
push
adc
out
les
push
mov
inc
mov
push
arpl
ds
sbb
lds
in
mov
and
mov
cwtl
fcomip
daa
mov
xor
out
dec
gs
out
clc
jb
cmp
push
aad
sbb
mov
inc
cli
push
adc
pop
xchg
cmp
mov
loope
faddl
imul
jge
popf
inc
add
cmpsb
lret
xchg
in
xor
sub
enter
pop
mov
xchg
push
daa
inc
push
push
dec
maxps
xchg
jg
clc
std
cmp
fstl
bound
sub
xor
sti
sub
rclb
and
aad
jns
jae
jne
pop
sbb
jmp
faddl
fistl
iret
and
in
nop
imul
xor
mov
jns
push
mov
or
not
pusha
sbb
fmull
scas
push
and
sbb
pop
cli
dec
sti
cmpsl
daa
pusha
aam
test
jl
push
push
dec
and
mov
dec
or
xlat
jns
mov
frstor
adc
lock
stc
push
push
xor
push
test
cld
inc
xchg
sub
outsb
mov
mov
pop
rclb
xchg
adc
gs
push
movsl
pop
mov
or
dec
push
adc
push
mov
bound
cmp
repnz
mov
pop
lods
imul
aam
stos
sarb
shll
inc
icebp
jmp
adc
ret
enter
leave
dec
shll
sbb
or
ds
xchg
push
add
mov
fists
addb
xchg
cmp
popl
in
xchg
hlt
jecxz
sbb
jecxz
jne
repz
fistl
ret
stos
adc
and
sbb
loop
movsb
imul
sub
mov
add
enter
fadd
jmp
js
pop
roll
xchg
sbb
xor
mov
jmp
cwtl
sbb
scas
fsubs
aas
adc
mov
icebp
not
adc
cmpsl
in
dec
divb
inc
sub
xlat
stc
out
stos
into
pusha
dec
xchg
sbb
xchg
adc
shl
lods
pinsrw
add
and
aaa
int
icebp
push
lock
xchg
lahf
sub
ret
hlt
cltd
sub
cmp
xchg
lods
xor
jns
mov
fimull
test
sub
sbb
mov
enter
shl
lds
in
sub
and
call
jle
xor
or
mov
xchg
inc
fisubrl
mov
push
pop
fcompl
cmpsl
lea
jecxz
inc
lret
mov
fstl
mov
andl
dec
negl
xchg
lods
nop
xor
mov
stos
xorl
adc
sbb
pop
out
cmp
or
mov
inc
iret
ja
nop
in
dec
cmpsl
jne
out
stos
jecxz
pop
mov
push
stos
into
xchg
pop
xchg
push
fwait
enter
adc
or
pop
mov
andl
inc
and
fildl
fwait
inc
dec
sbb
jno
push
dec
pop
xor
jbe
repnz
sbb
aaa
jno
mov
push
mov
mov
mov
jg
fwait
iret
out
add
dec
adc
push
dec
je
js
movsl
jl
lcall
popf
add
es
loopne
loop
dec
pop
fwait
xor
inc
clc
out
insl
pop
aas
gs
int
mov
int
add
and
lods
leave
and
add
in
jns
std
shrb
gs
lea
mov
addr16
mov
jnp
test
mov
or
and
lea
mov
out
pop
lret
subl
pop
mov
or
add
stos
leave
into
mov
stos
jge
cli
mov
cltd
fdivrs
arpl
jp
dec
add
add
sti
push
adc
mov
xchg
mov
ret
scas
scas
negb
mov
ffree
pusha
pop
xchg
xor
imulb
sub
and
or
mov
xor
or
das
cmp
cmpl
sub
jb
mov
cmp
lods
jae
loop
mov
add
pop
ds
add
into
in
mov
ja
ss
push
sub
xor
and
cmp
movl
outsl
daa
or
mov
mov
test
fisttpll
push
add
inc
mov
sub
pop
and
or
pusha
incl
clc
inc
dec
and
xchg
dec
movsl
andb
fcoms
pop
vpsrad
decb
lds
shr
push
cmpsb
mov
jbe
mov
stos
jo
mov
mov
jl
jbe
mov
jae
hlt
lahf
jo
adc
pop
sbbb
ljmp
xchg
in
clc
mov
imul
and
outsl
testb
jo
adc
test
or
lret
mov
cmpsb
shl
out
pop
fidivl
out
pop
sub
cld
push
adc
xchg
mov
xchg
orl
cmpsl
lods
add
push
push
test
aam
dec
mov
sbb
inc
int
fadds
xor
lahf
out
push
faddl
lea
and
addr16
dec
xor
xchg
ja
xor
lret
push
lahf
xor
inc
aad
mov
and
dec
mov
sub
rclb
jno
das
push
cmpsl
mov
mov
out
nop
mov
aam
dec
cmp
dec
jmp
hlt
xchg
mov
mov
rclb
popa
xlat
dec
stos
popl
add
sbb
aas
mov
clc
xor
pop
adc
aaa
cmp
adc
jg
sub
mov
cmp
shlb
adc
jne
lcall
loopne
insl
cmp
push
dec
xchg
out
cmp
stos
movsb
mov
scas
out
mov
je
add
sbb
push
insl
std
mov
pop
dec
sbb
fwait
mov
xchg
stc
and
sbb
js
jmp
push
inc
push
arpl
movsb
movsb
outsl
push
add
stos
dec
push
xchg
cmc
fldt
mov
aad
in
leave
jmpw
lret
inc
jg
gs
cmpsl
jnp
das
xchg
xchg
add
ds
cmpsl
mov
cmpsb
ds
cwtl
or
mov
and
mov
ja
cwtl
dec
scas
lcall
aaa
cmc
test
jecxz
jno
xorb
xchg
pop
or
mov
lods
cmp
mov
cmpsw
cmc
cmp
mov
stc
dec
mov
mov
shrl
sbb
mov
sbb
or
in
insb
or
jbe
nop
xchg
sti
fisubl
pop
int3
mov
or
aam
and
mov
shrl
xchg
inc
and
call
or
test
in
cmp
imul
in
mov
inc
jge
js
ficomps
sub
lcall
js
dec
jo
sbb
xchg
or
xchg
imul
sbb
mov
mov
or
leave
inc
in
push
psubusb
sbb
ret
push
aam
or
in
sub
xchg
gs
pop
or
test
xor
adc
lea
rcll
mov
popl
cld
aam
lret
test
cmc
das
popa
or
imul
std
jne
xor
lahf
push
filds
outsb
insb
dec
mov
stc
xchg
mov
fisttpll
sti
in
mov
pusha
jl
xor
jne
jb
mov
sahf
mul
cmpsb
mov
pop
shlb
enter
jg
out
adc
adc
aas
mov
sahf
out
inc
add
insl
fstpt
and
sbb
dec
jb
dec
cmp
aas
call
sar
out
loop
notl
and
mov
xor
jbe
cmp
or
into
dec
loope
cmpsl
jns
jp
dec
lods
xchg
push
aaa
sbb
into
pushf
dec
dec
lahf
cmp
test
sarl
pop
inc
test
mov
push
jb
aad
adc
mov
pop
jae
push
mov
xor
pop
mov
ljmp
insl
insl
and
fildll
je
or
and
nop
cmp
pop
pop
sbb
dec
adc
inc
loop
fadds
cmp
movsb
enter
add
sub
frstor
aam
outsl
push
test
mov
sbb
xchg
sbb
sub
push
fnsave
adcb
aas
lret
sub
xchg
inc
test
xor
mov
mov
imul
hlt
xlat
mov
sbb
lahf
les
dec
outsl
inc
insb
scas
cs
jo
test
out
xchg
sub
mov
shlb
sbb
or
mov
xor
mov
and
les
jle
out
scas
sarb
pop
mov
mov
and
mov
and
sbb
xchg
aas
cld
inc
dec
shll
lock
or
xchg
repz
add
mov
stc
mov
pop
xor
jg
push
aad
insl
decb
xchg
test
mov
sbb
mov
fwait
pop
adcl
mov
nop
xchg
loop
mov
les
jnp
js
xchg
jne
cmp
inc
xchg
lret
lret
icebp
and
test
cmpsl
orb
mov
shl
xlat
adc
loopne
shlb
jl
pop
rcr
mov
push
bound
shl
pusha
loope
nop
insl
mov
stc
daa
xor
dec
int3
xchg
insl
sub
sub
inc
lds
iret
sarb
outsl
pop
mov
shrl
into
stos
cmp
popa
push
rcrb
cwtl
mov
pop
xchg
gs
ret
orl
pop
mov
leave
dec
int3
dec
jbe
or
iret
in
es
jp
pusha
jns
lea
ret
cld
ror
adc
cli
push
lods
cmpsb
mov
movsb
enter
and
add
fistpl
fnstcw
or
imul
addr16
cs
call
xlat
jb
ficoms
scas
push
lea
mov
sbb
push
lock
sbb
andb
aam
xchg
sbb
enter
inc
xor
lods
pop
dec
pop
cmp
mov
or
jle
std
loope
unpckhps
xchg
stc
push
xorl
sarb
or
stc
push
cmp
int3
mov
xchg
inc
cld
jecxz
or
leave
fdivs
das
fistpl
cmp
std
adc
in
repz
pop
ffreep
test
jnp
cmpsl
pop
jns
scas
dec
mov
pop
xchg
mov
pop
std
cmc
dec
jno
mov
dec
or
in
into
lret
or
es
lcall
popa
inc
mov
insb
and
sub
cmpsl
addr16
repnz
and
lcall
pop
mov
lret
rcl
lds
push
pop
mov
sahf
dec
leave
inc
xchg
mov
cmpl
xlat
xor
mov
xchg
sbb
loope
fwait
ret
cmp
sahf
test
fadd
jnp
or
xlat
pop
notb
jmp
or
fdiv
fwait
vmovntpd
outsb
jg
cmp
or
daa
cmp
xchg
sub
cmp
pushf
cmp
adc
out
mov
jmp
sbb
std
pop
mov
and
mov
daa
out
cltd
jg
pop
xchg
pop
vmwrite
popa
mov
pusha
push
jno
sbb
jne
jno
insl
xor
inc
add
ret
test
mov
test
cmp
scas
adc
jl
lods
pop
insl
iret
push
xor
sub
es
jge
js
cmp
mov
ss
jb
mov
test
adc
je
fisubrs
xor
mov
sbb
mov
add
out
and
das
shr
aaa
std
add
lods
add
xchg
jmp
jle
push
xchg
out
sbb
dec
xchg
adc
mov
push
gs
inc
out
mov
pop
sti
in
mov
pop
mov
loopne
push
pop
inc
xor
push
push
dec
and
inc
pop
repz
addb
shll
pop
jl
imul
and
out
js
rcrl
cmp
push
xor
mov
or
aam
lock
jge
dec
movsl
stc
lahf
cmpsl
dec
cmp
dec
movsb
loop
pop
fimull
pop
out
orl
and
in
mov
jg
adc
jbe
jp
shlb
sub
mov
mov
sub
and
je
sub
push
in
and
fsubrs
aad
push
add
mov
mov
mov
inc
mov
xor
jbe
add
jl
adc
rorb
shr
dec
mov
sub
dec
cli
out
adc
idiv
adc
fisttpll
fcomps
pop
subl
lods
cmp
cli
mov
repnz
adc
stos
lods
push
aas
mov
xor
inc
test
cmp
dec
dec
pop
testb
jmp
and
iret
xchg
dec
gs
movsl
or
imul
std
and
mov
dec
sti
mov
push
enter
fildl
roll
add
pop
arpl
lock
lds
mov
fnstenv
je
sub
dec
dec
ljmp
loopne
jl
sbb
lret
fldl
pop
in
cmp
mov
cmpsl
add
add
repnz
dec
rorb
fisubrl
cmpsl
mov
sbbl
mov
call
sbb
mov
mov
jmp
add
movsl
cmpsl
cwtl
lods
sbb
sbb
inc
pop
rcll
stos
dec
test
aas
ja
xor
out
test
mov
sub
pop
inc
sub
pop
fbld
lahf
cld
stos
mov
mov
leave
lret
out
cmc
fwait
mov
subb
add
dec
data16
fmull
inc
mov
jbe
sbb
mov
xor
out
adc
and
sub
mov
mov
movsl
push
mov
arpl
ucomiss
daa
mov
xchg
addr16
and
sbb
push
add
dec
loop
shl
pop
icebp
cmp
stos
iret
mov
shlb
pop
mov
mov
ljmp
xor
mov
push
mull
mov
add
and
out
inc
and
jmp
scas
jmp
push
sahf
hlt
sbb
sub
pop
or
call
xchg
xor
cli
or
mulb
or
out
test
ss
push
sub
inc
xchg
repnz
dec
mov
je
insl
std
cmp
xchg
popl
mov
adc
jge
mov
mov
push
push
inc
lods
mov
fldt
mov
and
sub
stc
xchg
jns
xchg
inc
mov
jp
int
es
mov
pop
movsl
int3
cli
cmpsl
add
xchg
subl
fisubrl
jbe
cltd
addr16
outsb
inc
cmc
addb
inc
int3
or
jnp
push
jp
fwait
pop
das
dec
pushf
fimuls
rorl
loopne
std
int
stc
popf
fistpl
sahf
sub
in
cld
pop
test
pop
call
inc
lcall
out
es
cwtl
mov
inc
dec
mov
ja
insl
movsb
mov
cmp
xor
rep
ret
pusha
xchg
call
cmp
shlb
je
aam
loop
mov
dec
mov
jno
mov
sahf
enter
and
scas
les
enter
xchg
jg
addl
mov
shrb
in
sub
push
cmp
out
sbb
pusha
mov
mov
lret
test
das
inc
sub
fstps
fisubrs
mov
mov
rcrb
mov
jns
sub
mov
cmp
arpl
mov
iret
jl
jge
add
lret
jle
call
mov
shll
shl
insb
jns
dec
loope
lock
inc
in
loopew
nop
jmp
scas
mov
nop
les
cmp
out
pop
ljmp
lahf
or
inc
add
inc
dec
loop
into
add
fiaddl
leave
jbe
inc
sub
hlt
nop
shrb
inc
imul
xor
aas
clc
xchg
arpl
adc
xorl
shll
push
jl
and
sbb
arpl
push
out
add
inc
push
xchg
int
or
lret
push
push
push
outsb
mov
sbb
fwait
cmp
call
or
movsb
aas
mov
mov
notl
pop
fstp
sub
mov
inc
mov
daa
adc
jmp
jg
cmpsb
push
cld
xor
outsl
cmp
pop
inc
dec
mov
iret
lods
rol
mov
push
cld
lock
cwtl
cmp
fdivr
cmp
mov
sbb
push
nop
cmpsl
lret
stc
push
fisubs
flds
jle
in
iret
ret
jg
xchg
popf
dec
dec
sbb
mov
lods
iret
mov
mov
scas
jl
jmp
sbb
mov
scas
mov
test
push
push
pop
cmp
ds
mov
daa
inc
int3
inc
stos
cmp
sti
push
mov
sub
pop
or
pusha
pusha
xchg
mov
push
sbb
sbb
std
dec
stc
pop
sti
mov
lcall
and
imul
mov
pop
scas
xor
pop
fdivrs
push
mov
and
jne
call
dec
mov
fidivl
sbb
xchg
ret
cmpsl
iret
scas
out
xchg
cmp
pop
lea
pop
stos
mov
clc
sahf
repnz
xchg
sub
add
into
ljmp
sbb
sbb
pop
jmp
scas
pop
rorb
and
fmuls
test
cmp
adc
sti
lret
adc
cltd
notb
flds
mov
lcall
or
loope
rcr
mov
ds
pushf
popf
xchg
push
call
ljmp
mov
sub
je
sub
xor
and
push
insl
push
fwait
in
or
dec
lcall
mov
pop
ds
inc
adc
mov
dec
pop
in
xor
jb
inc
jbe
inc
push
cmc
and
pop
insb
push
cltd
loope
iret
pop
test
and
popf
cmp
fmull
or
pop
std
mov
addr16
cs
pop
push
out
cld
xor
or
jl
fs
test
enter
cwtl
cmpsl
out
inc
scas
mov
and
pop
cmp
or
pop
scas
aam
fmull
mov
sbb
mov
or
idiv
xor
add
int3
xchg
and
and
adc
mov
lret
cwtl
mov
mov
dec
mov
sub
jg
fcoml
aas
pop
dec
iret
test
cld
insb
incb
std
test
andl
jl
xorl
subl
fldt
sub
pop
cmp
dec
test
call
and
loop
push
mov
jl
repnz
adc
stc
push
scas
mov
sub
dec
fsubs
bound
aas
xor
out
lcall
add
cmp
ja
leave
insl
push
aaa
mov
clc
adc
sbb
sbb
sub
xor
sbb
aas
ja
inc
jge
pop
mov
jnp
xor
idiv
xor
pop
push
mov
push
mov
or
aas
jmp
adc
je
in
sbb
aaa
ljmp
push
jmp
xor
mov
or
sub
jle
jae
outsb
fs
pop
ja
das
leave
cwtl
imul
aaa
and
xor
ret
outsb
push
inc
cltd
xchg
ret
scas
call
dec
xor
jmp
sbb
hlt
hlt
test
dec
into
jb
mulb
dec
push
push
lea
jg
sub
out
jecxz
out
pop
inc
dec
lock
mov
push
adc
dec
mov
mov
adc
dec
imul
loope
stos
les
repz
dec
les
and
sub
add
lret
pop
pop
mov
inc
lods
jno
xchg
mov
jae
add
pop
sbb
out
call
in
shrb
test
inc
mov
add
dec
pop
pop
fs
fwait
sub
pop
mov
loopne
mov
lret
enter
pop
scas
xchg
push
jle
fisubrs
mov
les
lret
mov
sub
mov
sbb
cld
ret
pushf
int
add
cmpsb
xor
cmp
call
pushf
xchg
or
push
clc
test
mov
aas
push
and
sbb
sub
fadds
jg
sar
test
les
adc
dec
or
adc
ds
xor
jnp
in
addl
xchg
xor
pop
cmpsl
cmp
outsb
bound
push
pop
xchg
cmc
rclb
mov
addr16
xchg
jg
cmp
lock
lods
int3
xchg
scas
aam
mov
ja
cwtl
sbbl
iret
jbe
lcall
sbb
and
std
jp
jns
and
das
mov
insb
orl
and
nop
shrl
mov
pop
pop
pop
cmp
or
xchg
adc
test
inc
minps
lea
sbb
jle
pop
lods
sarl
and
aad
popa
mov
imul
ret
int
jge
adc
mov
cmpb
popf
inc
add
dec
sbb
push
sub
out
leave
lea
cmp
in
das
and
fnstenv
outsb
mov
xchg
push
adc
mov
xchg
and
out
shrb
pop
mov
pop
push
and
mov
push
xchg
or
stc
imul
lret
iret
jb
rcr
cs
inc
mov
dec
repnz
jecxz
out
pop
sbb
add
push
movsb
fwait
cmp
bound
ficomps
or
pop
add
rolb
fistpll
mov
rcrl
sub
data16
fisttpl
and
ds
or
sbb
push
lock
nop
dec
pop
fnsave
dec
es
aaa
or
nop
mov
dec
fwait
mov
push
test
in
js
daa
mov
dec
push
add
mov
xor
push
xor
cmp
dec
sub
add
adc
lahf
cltd
movsb
inc
push
add
ss
cmc
mov
ljmp
insl
scas
mov
sahf
add
sbb
cltd
popf
mov
inc
push
sub
cmp
faddl
sub
rorl
hlt
xor
xor
push
add
mov
sub
mov
jle
add
pop
sub
pop
sarl
les
sbb
out
cmp
movsb
mov
roll
or
repz
and
jl
push
pop
xchg
jno
sub
mov
mov
imul
adc
sbb
inc
dec
ds
mov
jno
out
cltd
cmp
loop
loop
rcll
ss
mov
jnp
stc
dec
sbb
adc
cmp
pop
inc
jg
dec
fcmovb
loop
jbe
ret
aam
leave
inc
cltd
push
mov
mov
int
xlat
cmc
xchg
or
insl
mov
cmp
sub
fs
add
pop
outsl
mov
xor
add
pushf
mov
xchg
mov
push
sbb
jl
call
add
pop
jg
adc
nop
fwait
stos
mov
jmp
mov
outsl
gs
sbb
pop
mov
mov
lock
adc
pop
test
xchg
pop
xor
mov
inc
or
jmp
cmp
add
lahf
and
xchg
push
arpl
inc
push
ds
movl
int
mov
mov
sahf
push
inc
pop
inc
pop
scas
daa
icebp
addb
jp
bound
mov
jl
dec
int3
cmp
jb
jp
stos
push
rol
mov
in
roll
push
jmp
jae
mov
push
and
push
and
frstor
in
xor
and
sub
xor
mov
pop
mov
and
movsb
das
repz
mov
inc
xchg
cld
gs
and
movsl
mov
imul
adc
xlat
push
fistpl
mov
fnstcw
inc
or
out
dec
loopne
es
popf
pop
dec
pop
add
xor
incb
jg
nop
cli
outsl
cli
pop
sub
iret
out
cli
mull
ror
xchg
lcall
push
test
cmpsb
inc
addr16
cli
add
addr16
xor
mov
scas
pop
daa
gs
addl
test
pop
bound
lret
stc
jbe
cmp
cmp
dec
pop
jo
or
out
mov
and
insl
mov
cltd
xor
add
pop
pop
ljmp
fdivl
push
mov
insb
movsl
mov
push
insb
clc
sbb
rcrl
jnp
test
ret
arpl
lret
ljmp
cwtl
mov
cmpsb
mov
adc
fisttpl
lods
xor
idiv
xchg
pusha
loopne
dec
pusha
outsl
xlat
in
bound
je
shl
push
int
add
lcall
mov
mov
jbe
shlb
rclb
jbe
sbb
mov
inc
xor
mov
jns
insb
or
stos
sbb
sub
and
leave
jge
test
je
clc
int3
dec
rol
imul
repnz
and
xor
int
in
dec
addl
jns
push
in
leave
dec
inc
jg
cs
push
lock
std
adc
mov
dec
stos
push
inc
and
inc
aaa
scas
and
dec
ds
loop
push
cli
add
rolb
add
jle
push
jno
mov
or
push
aas
push
jp
dec
mov
loop
inc
lea
push
nop
sub
loop
sub
aas
adc
xchg
mov
xchg
loope
xlat
test
iret
shr
jno
push
dec
mov
mov
xor
cs
push
filds
mov
push
mov
pop
mov
add
add
jmp
aad
sbb
pop
dec
push
mov
out
int3
jmp
in
mov
es
and
pop
std
mov
push
jmp
stos
push
push
and
lahf
pop
nop
dec
std
clc
mov
movsb
dec
inc
jb
or
dec
cmpl
test
push
dec
jno
xchg
test
addr16
popf
adc
add
repnz
add
jno
imul
into
aas
cmp
lcall
incl
sbb
jb
cmp
ret
subb
mov
sahf
ficomps
repz
mov
lods
test
bound
inc
cmp
mov
mov
data16
cld
adc
cmp
jne
cwtl
xor
inc
dec
pop
xchg
cmpl
shll
repnz
jmp
shll
jno
imul
ficoml
push
inc
jecxz
aaa
or
pop
sbb
or
leave
mov
push
inc
out
sbb
sbb
lcall
insl
jp
das
xor
mov
push
mov
jle
pop
dec
popa
dec
icebp
or
test
inc
int3
xchg
inc
push
mov
cmp
and
insb
xchg
jno
push
inc
data16
mov
adc
cmp
xor
pop
jo
dec
xchg
mov
push
lods
les
lahf
cli
lea
xor
push
aaa
mov
jle
fs
popa
mov
lock
push
sahf
js
ja
jbe
test
pop
sub
dec
in
lret
mov
and
sahf
pop
cmc
in
pop
daa
ja
pop
int
test
mov
mov
mov
cwtl
daa
mov
mov
pop
jb
decl
jp
ds
cltd
repnz
repz
mov
fwait
jnp
xlat
xchg
jno
aam
add
int
mov
jo
push
imul
adc
push
rcrb
add
mov
inc
mov
clc
ja
cmc
fcoml
andl
std
xorb
cmpsb
clc
pop
nop
stos
roll
sbb
mov
add
inc
mov
jne,pt
imul
test
ljmp
and
pop
pusha
or
aad
dec
mov
adc
jno
loope
in
adc
sbb
inc
sub
aas
sbb
fdivs
into
mov
cs
cmp
pusha
add
jmp
stos
mov
test
aas
test
out
or
scas
dec
arpl
ja
test
jne
sti
ficompl
pop
mov
ljmp
repz
lock
jmp
je
fsubrp
test
xor
imul
inc
out
out
xchg
mov
push
mov
push
and
mov
and
out
adc
mov
sub
fldt
orb
mov
adc
mov
sarb
fcomip
test
cli
ss
sti
sti
cmp
adc
outsb
pusha
fwait
insb
cmp
sbb
in
lock
shrb
aas
xor
out
mov
and
into
jge
and
push
fisttpll
push
std
inc
dec
sub
leave
pop
pop
aad
mov
pop
jns
dec
lock
push
mov
push
nop
and
scas
mov
aam
mov
das
aaa
inc
ja
or
pop
lds
test
outsl
and
xchg
mov
ja
push
and
sbb
popa
pop
mov
and
int
mov
mov
xchg
cmp
inc
enter
mov
mov
mov
adcl
xor
or
xchg
mov
mov
jb
int
or
mov
pop
popa
cmp
ljmp
jns
in
and
inc
pop
les
stos
movsl
loopne
jle
mov
push
movsb
in
adc
aam
popf
cmpb
xchg
das
negb
rclb
mov
mov
icebp
adc
insb
icebp
addr16
cmpsl
mov
push
outsb
xor
cmp
ljmp
inc
dec
mov
scas
lret
dec
push
xlat
lea
dec
xchg
cmp
movb
bound
adc
jg
jp
push
cmp
adc
je
out
xor
cmp
shrb
add
rorb
movsb
in
pop
and
cmp
mov
jle
add
cmp
fcmovne
jge
inc
jbe
filds
pop
popcnt
or
jmp
cmc
aas
sub
xchg
popf
or
outsl
nop
popa
test
in
push
jb
mov
jp
mov
mov
iret
push
xchg
dec
inc
sub
mov
dec
in
sahf
dec
js
inc
imul
adc
adc
cmp
jbe
ss
test
iret
xor
outsl
call
lret
adc
sbb
cmc
xchg
sbb
test
mov
mov
ds
cmp
ret
mov
and
mov
mov
dec
cmp
pop
or
push
inc
jmp
pop
push
sti
push
inc
test
pop
cld
dec
cmp
mov
in
outsl
xchg
pop
std
inc
mov
inc
outsb
xchg
and
mov
mov
pop
push
mov
mov
xchg
xchg
inc
push
ds
xor
data16
or
sbb
out
sbb
cmp
sbb
subl
dec
loop
sarl
jb
js
data16
dec
adc
pop
loope
aas
ja
inc
jno
or
sub
push
push
es
push
jmp
adc
ret
and
imul
cmp
cs
xchg
add
and
add
xchg
subb
mov
andl
aas
mov
js
in
pop
push
or
and
mov
out
sahf
shl
mov
fstpl
fsts
les
push
sbb
notb
push
push
and
test
ljmp
mov
les
stos
mov
in
xchg
xchg
cs
jge
xchg
fdivrl
mov
aaa
test
negl
mov
xchg
inc
sbb
std
dec
std
hlt
mov
stc
cmp
shrl
xchg
pop
xchg
dec
dec
movsb
test
mov
mov
push
push
out
xlat
stc
inc
mov
pop
in
test
pop
push
pop
lret
xor
hlt
imul
inc
std
xor
inc
jmp
and
cmpsl
inc
ss
push
push
cwtl
fisubs
adc
test
loop
xchg
mov
ja
hlt
cmp
cmpsl
shl
call
cmp
hlt
pop
mov
push
roll
arpl
inc
cltd
pop
aad
or
movsl
cmp
aaa
lods
push
outsl
add
jmp
cmpsl
xchg
insl
cmp
lds
cwtl
jecxz
inc
fwait
mov
daa
sub
xchg
mov
fldl
mov
jnp
hlt
mulb
xchg
mov
jge
push
iret
pop
popa
mov
sub
pop
cwtl
stc
adc
movsl
sub
jne
out
das
call
adc
sbb
pop
fldcw
jae
addr16
inc
cmp
loop
mov
mov
xor
pushf
loopne
or
outsl
cwtl
and
and
lds
in
mov
sbb
pop
stos
scas
add
cwtl
dec
pushl
fucomi
and
sub
stos
cmp
sub
adc
mov
push
mov
shr
cmc
cmp
lcall
cmpxchg8b
leave
movsb
in
or
lods
cmc
cmp
addr16
dec
cmp
jo
loop
xor
cmpl
fs
sbb
cmpsl
xor
clc
jl
loopne
fstps
fstpl
pusha
mov
fidivs
add
lar
lock
fbld
cmp
aad
inc
and
test
jl
push
push
popf
pushf
in
inc
idiv
aam
in
mov
sbb
mov
sbbb
cli
mov
fisttpll
push
js
mov
bound
lret
outsl
ljmp
pusha
push
jns
xorl
addr16
in
or
lock
sub
das
sbb
push
and
rorb
fisubrs
pushf
decl
push
xchg
add
mov
loopne
popa
push
sarl
div
xor
push
aaa
cltd
mov
out
cmovge
mov
stc
push
clc
pop
or
fstpt
push
les
das
mov
ss
sarb
or
into
int
cmc
in
pop
sub
out
aad
push
es
mov
push
push
jle
mov
aam
jl
mov
insl
std
mov
and
jns
js
aas
imul
sbbb
orb
cli
add
loopne
mov
lcall
push
push
sbb
jle
addr16
mov
insb
lods
test
lock
sbb
sbb
cli
cmp
adc
aas
xor
adc
xor
xor
or
pop
mov
cmpb
push
add
repnz
pop
fwait
sar
aad
sub
aaa
cmpsl
fstpl
cmp
fwait
roll
in
insl
mov
sbb
fstpt
in
lods
jbe
cli
cmp
popa
les
addr16
clc
test
nop
in
add
adc
pushf
mov
ret
mov
pusha
mov
mov
jmp
cmp
in
sbb
lret
xor
pop
dec
lods
push
mov
sub
dec
popf
and
dec
and
stos
xchg
out
jg
call
sti
push
lret
lods
movsl
insl
fbstp
jmp
test
loop
lea
cmp
pop
and
mov
sub
or
push
shlb
xor
ret
mov
dec
inc
iret
pop
sub
inc
push
mov
push
lds
sbbb
je
ja
dec
push
out
sub
aam
and
fucom
sahf
mov
mov
pop
orl
jne
xor
sbb
bound
jmp
xchg
xor
jmp
mov
mov
mov
dec
cmpsb
mov
stos
int
adc
push
sbbb
rclb
adc
scas
xorl
push
sarl
iret
and
lret
cwtl
pushf
and
clc
pop
sbb
xor
ret
sbb
in
les
jp
add
inc
out
sub
enter
fldt
mov
push
cwtl
mov
lahf
cmp
mov
or
adc
scas
and
push
sbb
push
cmpxchg
faddl
xor
fnsetpm(287
cmpsb
in
pop
or
inc
and
and
ret
jg
leave
cmp
or
cmpsl
adcl
jae
jns
xor
cli
xlat
orl
test
adc
sub
hlt
cld
or
test
mov
popf
mov
xchg
mov
push
les
dec
aas
enter
fdivrs
mov
sahf
jg
pushf
dec
mov
mov
aas
arpl
cmp
roll
mov
sub
sub
sub
gs
and
push
int
cmp
cmp
cmp
fwait
movsb
add
pop
push
jno
sub
push
loop
mov
pop
sarl
aaa
jnp
adc
xchg
cmp
ds
daa
std
fists
nop
sub
dec
xorb
aam
test
push
jno
mov
xchg
push
clc
ljmp
mov
jae
jle
or
or
push
push
mov
dec
jl
fcomi
es
inc
inc
arpl
cmc
inc
mov
insl
hlt
sahf
lcall
insb
adc
testb
cld
fnstenv
cld
sbb
inc
lahf
inc
ret
adc
adc
fwait
shr
xchg
shrl
andb
cs
xor
jmp
push
cmpsb
dec
cmp
sub
repnz
int3
dec
adc
pop
mov
insl
or
or
nop
repz
fcomp
mov
adc
aad
fsubrl
out
and
pop
daa
mov
pop
xchg
xor
jb
xor
mov
adc
or
fsts
mull
or
mov
shll
xchg
cmp
ss
xchg
push
lret
mov
mov
dec
fisttpl
jl
jmp
xchg
push
push
cli
add
dec
add
cmp
dec
rcrb
sbb
movsb
push
and
mov
inc
lods
popa
push
xor
push
push
call
dec
mov
push
mov
sub
sarl
xchg
lahf
push
and
cli
mov
ljmp
icebp
add
xlat
mov
mov
add
inc
les
dec
aas
xor
and
das
xchg
repz
xchg
push
seto
fcmovnb
mov
nop
movsb
cmp
shr
mov
aaa
mov
popa
aam
nop
mov
mov
pop
ljmp
mov
inc
mov
imul
stos
fcoms
mov
and
dec
mov
leave
iret
xor
xchg
int
pop
lret
xchg
adc
inc
jecxz
fsubrp
mov
push
out
daa
inc
and
push
jno
clc
sbb
ljmp
aaa
je
out
inc
fsubrl
sub
or
dec
imul
fildl
sub
mov
adc
jmp
mov
jne
adcl
sub
testb
enter
mov
aam
pop
ret
stos
popa
repnz
outsb
inc
fmuls
test
lcall
xchg
inc
sbb
push
xor
movsb
inc
xchg
nop
inc
iret
cmpb
sahf
ud0
push
mov
rcrb
hlt
testl
cli
bsf
lods
int
xor
dec
or
and
jo
test
shl
lcall
cmc
cmp
scas
pushl
inc
adc
pop
in
lea
fstl
pop
stos
int3
pop
lock
in
and
and
jnp
lahf
and
out
lods
sub
stc
in
or
dec
cmpsb
mov
imul
loopne
mov
clc
jle
mov
jg
pop
in
les
mov
roll
xchg
mov
int3
cmpsb
push
adc
cmp
and
ljmp
imul
aam
mov
dec
jne
and
rcrb
jne
cmc
mov
aam
push
adc
cwtl
lds
mov
ror
or
insl
sbb
aad
mov
push
pop
lods
inc
pop
xchg
xchg
and
addr16
xor
jp
dec
cmp
xchg
pop
mov
int3
or
mov
js
push
shlb
lods
mov
or
mov
rclb
ds
sub
mov
arpl
ret
sub
xlat
adc
mov
fisubl
jp
lock
lcall
mov
jbe
adc
jle
or
or
fnstenv
xchg
adc
and
cltd
sub
and
dec
test
jmp
jnp,pt
jmp
frstor
ret
or
mov
jecxz
lret
cmpsl
jle
inc
lods
adc
call
mov
adc
cmp
adc
pop
push
xor
imul
test
mov
push
or
insb
psubsb
mov
pusha
xor
cmp
mov
loop
out
in
add
push
pushf
sub
lods
push
adc
xlat
cmp
dec
out
xchg
add
mov
lret
lahf
leave
mov
aad
cwtl
dec
cmp
lds
jl
mov
cmp
jbe
loope
mov
cmc
and
push
push
andb
and
int
js
push
or
sbb
ds
scas
insl
push
xchg
test
mov
sub
icebp
dec
and
cmp
mov
andl
mov
lcall
jmp
pop
sbb
inc
std
xchg
lds
add
test
pushf
and
lahf
mov
pop
fidivrs
jle
test
aad
aas
leave
dec
pop
lock
and
sub
insb
adc
jmp
in
loope
xor
jo
jmp
cmpsl
pop
mov
mov
shrb
sarl
lods
mov
add
inc
add
sub
das
stos
scas
outsb
cmc
push
push
cmc
mov
cld
ja
pop
ficomps
pusha
cmp
int
adcl
mov
lahf
stc
and
cmc
les
sbb
xorb
daa
testl
and
mov
mov
lret
adc
jb
fidivrl
mov
or
cmp
pop
mov
pop
sub
push
lock
mov
add
test
sbb
cmpsb
xor
push
out
sarl
mov
mov
out
popa
sbb
add
popf
dec
and
clc
rep
mov
mov
pop
xchg
cmpsl
ljmp
mov
xor
lcall
sbb
mov
fsubrl
imul
repz
ja
adc
pop
fsubrs
push
stos
mov
lea
add
push
es
ja
push
loop
pop
mov
sbb
stc
out
cmpsl
mov
and
std
jp
lcall
cmp
test
cwtl
adc
xchg
xchg
clc
xchg
sub
in
imul
popf
push
push
dec
pop
cltd
cmc
jo
mov
data16
cwtl
jle
mov
sarl
movsl
push
push
roll
adc
movsl
in
shrb
fdivrl
popl
clc
inc
adc
push
jge
addl
and
jo
fcmovnb
jns
enter
mov
fcomps
sti
sub
jle
hlt
test
repz
push
addr16
repnz
stos
ja
pop
dec
mov
xchg
ljmp
push
xchg
ds
jo
or
inc
popa
cmp
out
pop
stos
xor
clc
mov
outsl
pop
cmp
call
int3
popl
pop
inc
aaa
mov
jo
or
mov
ja
inc
inc
add
mov
push
clc
mov
inc
or
push
push
sti
push
hlt
mov
mov
cmova
les
push
sbb
clc
orb
inc
fldenv
popf
rorl
ret
adc
cmpsb
imul
push
push
rcr
jb
popf
xchg
scas
je
adc
sub
shl
cmpsl
xchg
sub
mov
ds
xchg
push
sub
popf
cmp
lods
addr16
out
aad
das
rolb
mov
sbb
pop
addr16
or
lea
push
mov
movl
sbb
inc
xlat
stos
pop
pop
in
inc
mov
cli
cmpsb
xlat
aaa
das
outsb
mov
or
addr16
popf
sub
pop
jp
imul
mov
sub
stc
jb
mov
cmp
mov
xchg
cmp
repnz
ficomps
jns
ret
mov
stos
stos
in
stos
sti
add
jp
add
aam
sub
pop
sbb
cmpsl
add
fcoml
pop
repz
sbb
push
cmpsb
xor
pop
sbb
push
mov
xchg
fcmovb
repz
test
pop
enter
es
stos
fwait
fwait
push
push
lret
sarb
or
loope
call
mov
cmpsl
leave
cwtl
sbbb
aad
fildl
sbb
push
in
sub
xor
adc
hlt
stos
push
ror
das
fld
mov
lea
mov
inc
stc
mov
ret
stos
mov
and
pop
call
dec
jb
adc
xor
jns
cmc
int3
data16
add
dec
mov
shrb
dec
in
gs
jg
jle
hlt
mov
insb
sahf
aas
add
push
pusha
test
movsl
xor
xlat
das
adc
add
jecxz
inc
jnp
inc
cmp
leave
jecxz
sub
ret
enter
or
sub
mov
inc
xchg
or
mov
ret
mov
rorb
out
mov
xchg
outsb
movl
lret
mov
jo
dec
xor
adc
xor
xor
addl
icebp
shrb
jle
pusha
xchg
cmc
mov
xchg
mov
in
inc
popa
add
or
or
or
and
scas
adc
and
orl
mov
lock
inc
rclb
loop
lcall
cmpsl
add
out
jo
jne
push
adc
sub
pop
frstor
outsl
push
xlat
jbe
push
cmp
push
enter
les
jae
hlt
lahf
pop
cld
cwtl
rol
mov
imul
mov
or
mov
lret
lock
dec
into
lods
les
pinsrw
negb
mov
sahf
sti
mov
sub
sbb
mov
enter
iret
or
add
orb
outsb
scas
fwait
sbb
sub
xor
push
mov
inc
cwtl
rorl
out
dec
sti
movsl
xor
jbe
scas
dec
push
push
dec
bnd
mov
fisttpll
pop
cmp
pop
mov
jecxz
repnz
push
xor
cltd
test
sbb
and
add
lds
insl
mov
sti
and
jecxz
xor
sub
out
ss
subl
mov
mov
sub
mov
fisubrl
nop
imul
lcall
lcall
mov
cmp
push
sbb
adc
or
ret
add
iret
and
shl
inc
stos
mov
dec
xlat
pop
sbb
xchg
adc
gs
testb
pop
popf
hlt
aas
sbb
lcall
mov
inc
sbb
push
repz
lods
jae
mov
or
sbb
lcall
inc
test
aas
or
mov
push
jl
sub
pop
mov
adc
sbb
mov
cmp
push
dec
inc
scas
jb
subl
sub
mov
daa
test
daa
sub
lds
scas
das
gs
inc
dec
or
and
xchg
xchg
dec
adc
pop
nop
clc
lret
js
and
imul
push
inc
imul
inc
or
enter
mov
mov
gs
mov
mov
push
enter
cmp
ficomps
enter
mov
mov
in
or
xor
popf
popf
cli
sti
sahf
call
sti
jbe
fwait
psllq
popa
pusha
mov
nop
mov
jb
adc
sub
mov
les
push
and
dec
lret
dec
lret
outsb
xchg
ja
insl
sub
aad
fnsave
in
jno
js
lret
rclb
inc
xchg
adc
mov
or
imul
and
rclb
pop
icebp
les
xchg
cmp
fisubl
mov
mov
aaa
xor
mov
adcl
lods
pop
loope
ss
cmp
imul
fstps
aaa
pop
movsl
movd
dec
subl
push
ss
mov
stc
jbe
pushf
dec
insl
jns
push
add
inc
or
jb
jmp
test
xchg
mov
lock
je
pop
divb
sti
pop
mov
inc
jle
rcl
xor
push
xchg
dec
or
cmpsl
je
jle,pn
push
outsb
mov
xchg
inc
test
xor
out
cmpb
orl
add
out
icebp
mov
lcall
into
adcl
push
sbb
add
add
dec
decl
sar
push
xchg
add
divb
in
and
popa
dec
adc
sbb
shrl
pop
xchg
jb
mov
aam
enter
mov
push
mov
sbb
sub
std
frndint
addr16
jg
outsl
repnz
add
dec
or
ds
gs
mov
push
nop
ds
xchg
fidivs
sbb
pop
push
scas
call
int
add
xchg
je
cmpsl
pop
mov
sbb
stc
nop
jmp
sbb
pop
movsl
ss
stos
add
adc
mov
dec
xchg
xor
and
imul
jae
mov
std
sub
fists
fists
mov
fsubr
call
out
inc
jno
out
push
add
cmp
insl
mov
aad
divl
jo
dec
xchg
pushf
add
addr16
fisubrs
nop
mov
xlat
arpl
inc
hlt
fcoms
xlat
sbb
test
adc
jp
mov
sbb
jne
adc
jns
push
mov
pop
ljmp
sbb
fbld
sbb
pop
mov
fcmovb
mov
cld
jb
pushf
cmp
jb
jb
sub
jnp
pop
sbb
pop
cltd
pusha
stos
ucomiss
jo
inc
push
cmp
inc
out
and
cmp
dec
jno
lret
push
sbb
cmpl
repz
dec
scas
sbb
add
out
hlt
mov
mov
adc
dec
mov
pop
loopne
lret
addr16
fdivrs
negb
iret
push
mov
sub
jbe
jmp
lock
mov
in
ds
push
shlb
xor
mov
stc
sarl
xor
pop
mov
jmp
jns
ss
push
dec
dec
mov
cltd
adc
pop
lods
xchg
dec
lods
mov
hlt
repnz
xchg
cmp
in
lret
cltd
jb
push
add
xor
out
aas
xchg
push
cmpsl
add
xor
push
scas
addl
outsl
jo
xchg
cmp
sub
add
test
mov
xchg
fsubrs
sbb
roll
das
stos
and
or
in
cwtl
jge
popa
rcll
jnp
push
hlt
xchg
shl
imull
mov
cmp
pop
jecxz
popf
sub
mov
call
aas
xchg
stos
loope
pop
imul
mov
popf
jbe
dec
dec
push
inc
sti
cmp
pop
push
mov
and
sbb
cmp
mov
mov
mov
repnz
jecxz
faddl
jle
jnp
lcall
jp
rcrb
pop
jno
lods
inc
pop
aas
and
jne
test
cmp
push
jae
fwait
sub
inc
pop
cld
rorb
and
xlat
js
mov
add
dec
rolb
jne
pop
loope
xchg
test
in
inc
gs
sahf
repnz
mov
sbb
cmp
es
stos
sbb
hlt
jns
repz
iret
addr16
insb
and
ficoml
jge
in
adc
dec
lock
cmp
pop
loope
pop
add
mov
jl
xor
out
cwtl
dec
popl
jp
rcll
negl
push
loop
push
stos
in
or
clc
test
clc
push
int
in
or
jnp
test
sbb
jns
pop
fnstcw
add
jo
data16
mov
das
pushf
xor
or
xor
inc
cmp
xchg
data16
cwtl
and
mov
cmpsl
stc
push
lock
out
fmull
enter
add
iret
push
push
fmuls
pushf
scas
xchg
jmp
mov
inc
inc
fs
and
iret
mov
int3
sbb
cmp
push
clc
rol
mov
cs
dec
movsb
sub
jg
and
stc
push
push
push
pop
dec
lods
repnz
out
or
adc
or
and
adc
add
cmpb
xchg
out
sub
and
sbb
fs
out
mov
jne
pop
adc
push
push
and
mov
xor
repnz
fdivr
fstps
int
jo
jno
xlat
inc
mov
out
jg
and
xchg
inc
jns
cmp
pop
inc
push
cli
ljmp
push
mov
push
dec
xor
jg
bound
ds
in
and
cmp
imul
add
scas
xchg
inc
push
mov
in
addr16
pop
stos
or
mov
mov
add
in
je
or
ret
pop
cld
fiaddl
inc
loop
mov
mov
rorb
fiaddl
and
mov
dec
xchg
aas
jle
frstor
mov
test
push
mov
lds
out
mov
mov
insl
arpl
loopne
test
adc
fldl
fisubrs
test
dec
jmp
or
data16
push
cld
pop
dec
rclb
outsb
mov
jo
iret
add
insl
in
jb
std
adc
mov
repz
test
inc
push
sbb
mov
adc
inc
popf
icebp
cmp
mov
sub
cltd
loopne
push
sub
ljmp
push
pop
cs
insb
iret
mov
clc
or
out
sub
test
addr16
pop
stc
sar
fcoml
dec
repnz
fidivs
std
dec
addr16
mov
cmp
in
loopne
mov
aas
jl
xor
jle
lahf
in
mov
pop
push
movsb
mov
jle
fcoms
cmp
add
xchg
popf
movsl
mov
fmulp
and
push
mov
ret
xchg
cwtl
pop
inc
aaa
nop
pop
sub
pop
jmp
lock
xor
mov
ret
scas
push
out
popf
xor
mov
out
add
cli
nop
adc
mov
lcall
jecxz
cmovae
sbb
mov
das
test
and
cmp
push
out
add
fs
and
pop
aas
jl
xor
cmp
imul
insb
adc
fistpll
into
repz
rcll
pop
mov
data16
jecxz
mov
xchg
cld
xchg
add
mov
in
inc
fnstenv
push
or
testl
xchg
cmp
sub
aad
or
mov
mov
adc
ds
dec
inc
pusha
test
outsl
lea
test
xchg
or
std
lods
and
dec
mov
lret
and
out
mov
mov
cmp
fiadds
xchg
fucomi
in
incb
push
insl
lahf
and
aaa
xor
lock
decb
mov
lret
jb
scas
push
ss
fbld
fucomi
and
cli
xchg
xchg
mov
add
and
xchg
cld
xor
jno
and
ud2
xchg
lea
mov
pop
sub
pop
pop
flds
mov
call
cmpsl
shll
push
xchg
pop
or
dec
pushf
lret
in
inc
icebp
jne
js
addr16
repnz
lret
test
rorl
xor
sarl
dec
push
and
push
cltd
xchg
ret
pop
jns
sbb
sbbb
fmuls
dec
gs
jne
sbb
sbb
pop
outsb
fisttps
fistps
push
sbb
ror
push
ret
push
btc
fsubrl
pop
cmp
int
or
sahf
mov
adc
push
jl
lcall
ljmp
or
xchg
cld
xchg
and
ds
mov
sub
mov
dec
dec
mov
shr
mov
add
push
mov
daa
in
adc
int
aam
jmp
dec
adc
fs
xchg
clc
add
sub
and
mov
fnstcw
ret
fdivl
pop
adc
std
lea
mov
xchg
pop
adc
adc
pop
push
addr16
js
xchg
sub
aaa
mov
xorb
daa
aam
mov
sbb
movsb
nop
pop
adcl
jecxz
cmp
divl
mov
scas
add
test
jmp
iret
xor
cld
pop
aad
cmp
pop
pop
jp
cmc
sbb
pop
sbb
sub
inc
ljmp
jp
xchg
and
sub
clc
jns
and
cmp
mov
aas
adc
sbb
daa
imul
adc
cmp
ds
cmpsb
popa
mov
in
es
xor
clc
jp
push
fiaddl
test
or
cmp
sub
sbb
push
xchg
jmp
push
adc
jns
inc
xor
mov
mov
bound
pop
or
ret
daa
cmp
cwtl
pushf
cmp
sub
loope
loope
in
sti
mov
sub
fldl
gs
loopne
adc
rcr
scas
or
push
cmp
sub
imul
mov
sbb
popa
insb
sbb
add
out
dec
sbbb
ret
mov
stos
jo
and
push
mov
pop
adc
decb
imulb
dec
arpl
pop
jecxz
cltd
push
es
push
xchg
mov
in
xor
sbb
push
scas
movsl
pop
fidivrl
or
cmp
pop
xor
mov
sarb
xchg
sub
mov
sub
das
xchg
scas
popa
xchg
xchg
or
xor
pop
lods
add
sub
cmpsb
ja
loopne
cmc
adc
push
dec
imul
test
xchg
stc
shrb
jl
cmp
push
mov
jp
cmc
jns
movb
sahf
imul
xchg
stos
cs
int3
push
jg
xchg
ss
xor
push
sub
lds
out
jge
repnz
push
ljmp
popa
imul
clc
lcall
in
inc
dec
jne
mov
jmp
mov
jp
sbbb
sbb
pop
inc
shll
lcall
add
xor
add
test
stos
movl
or
xchg
movsl
xor
pop
xor
cmp
pop
cmpsb
push
clc
inc
mov
lcall
mov
xchg
arpl
jg
pusha
scas
rorb
cli
mov
mov
jb
mov
and
mov
pop
or
popa
pop
mov
mov
dec
je
mov
popa
ret
cmp
mov
js
movsb
cmpsb
push
cmovs
fucomip
or
repz
cmp
cwtl
xchg
dec
repnz
jp,pt
ljmp
std
xor
add
or
shll
in
outsl
inc
push
sbb
or
fiaddl
mov
push
add
lods
std
mov
outsl
sub
mov
ljmp
rorb
inc
pop
fdivl
mov
adc
adc
into
push
or
stos
std
xor
test
gs
loop
js
aam
adc
or
mov
ja
iret
fwait
out
cmp
inc
xchg
into
cmpsl
lahf
cmpsb
push
or
sub
or
dec
xor
and
adc
idivb
sub
xchg
stos
xor
mov
pop
negl
repz
fs
xor
pop
std
jbe
cmp
movb
lcall
fs
mov
jne
cmpsb
or
daa
mov
xor
rolb
out
pop
ds
add
mov
jo
fs
cwtl
push
imul
inc
insb
std
cmp
xchg
daa
sahf
mov
mov
cmp
repz
loopne
fsubrs
insb
push
in
adc
mov
clc
inc
ffree
cmp
fistpl
jle
sbbb
dec
fwait
adc
mov
xchg
push
sbb
xor
pop
jge
add
jo
gs
out
add
and
test
dec
in
stos
outsb
xor
pushl
or
jne
lahf
clc
sub
dec
scas
xor
in
addr16
mov
and
aas
testb
rcrl
or
sbb
mov
adc
test
call
mov
mov
lds
aaa
dec
roll
je
mov
out
pop
dec
mov
insl
ss
inc
mov
sub
jb
fldt
jle
adc
lea
test
iret
orb
stc
cwtl
mov
adc
lret
je
dec
aas
add
hlt
in
push
stos
push
bound
mov
sarl
or
popa
mov
dec
inc
repz
rorb
push
lcall
sbb
mov
call
jns
sub
sbb
inc
mov
movsl
fiaddl
movsb
ja
aaa
and
or
out
testl
lods
das
test
cmc
mov
adc
cmpsl
inc
add
pop
mov
insl
nop
jge
mov
adc
or
daa
adc
int3
aas
stos
pop
or
stos
aad
xor
inc
pop
sub
stos
mov
lret
mov
fldenv
div
push
lods
lock
push
idivb
mov
mov
mov
aaa
mov
mov
mov
nop
mov
xchg
icebp
lret
mov
jne
push
inc
in
sbb
jns
push
jecxz
cmp
enter
int
addl
addb
lcall
fistpll
fisubrl
push
mov
into
add
xchg
add
insb
dec
scas
dec
jne
jb
lock
rcll
pop
push
cmp
popf
clc
mov
mov
dec
test
sbb
cwtl
add
and
add
in
out
test
rcl
dec
add
cmpsb
xchg
scas
outsb
inc
fwait
std
adc
xchg
xor
xchg
nop
pop
mov
push
cmp
add
loopne
pusha
xor
sarb
push
xlat
dec
pop
pop
outsl
jno
mov
call
pop
cmp
es
sbb
sub
cmp
mov
sti
xor
icebp
pxor
mov
or
popa
lret
inc
movsb
lods
push
negl
call
pop
jecxz
jb
out
pop
push
fidivl
xor
push
popf
imul
xorb
inc
add
lea
xor
sub
cmp
into
cmpsl
pop
add
hlt
push
jp
push
jns
call
aad
cli
mov
rol
fs
xor
stos
push
popa
cli
dec
std
xor
in
insb
pop
shl
inc
push
xlat
cwtl
ljmp
push
sarl
sub
jg
adc
cwtl
out
push
mov
and
or
mov
test
in
bound
mov
push
add
push
adc
mov
addr16
fnstsw
push
mov
outsl
mov
cmp
cmc
data16
scas
xchg
out
stc
push
lret
cmp
aas
push
cmc
push
aas
mov
mov
jnp
push
mov
cli
xchg
mov
mov
sbb
into
jecxz
sub
loop
or
and
push
xchg
in
mov
fwait
jle
xlat
clc
inc
les
add
dec
std
out
aam
and
shll
stc
fcomi
insl
enter
out
adc
scas
mov
ljmp
outsb
lock
add
fcmovbe
dec
sahf
sti
ljmp
imul
mov
and
dec
xor
and
inc
cmp
icebp
jb
repnz
popa
lods
jns
movsl
push
cmp
mov
das
jb
xor
add
inc
jno
aas
dec
fidivrl
pop
mov
ja
cld
ljmp
push
cmp
pop
mov
pop
push
sbb
sbb
das
loope
pop
pop
cwtl
nop
outsb
mov
add
mov
outsb
xor
cmpsl
loope
cwtl
sti
pop
shlb
test
push
pop
mov
push
xchg
int
pop
mov
mov
mov
leave
or
out
scas
insb
adc
xor
in
inc
testl
mov
lods
sbb
cmc
das
and
add
jp
and
cmp
test
clc
cwtl
gs
in
pop
jmp
inc
jae
adc
add
mov
cmp
add
and
sbb
xchg
jmp
divl
loope
mov
rcr
shll
stc
aaa
xchg
ret
sahf
jg
mov
fcmovnbe
mov
call
add
mov
shlb
iret
lods
mov
sbbl
test
ret
push
mov
imul
mov
jle
mov
pusha
adc
adc
adc
insl
xchg
aas
adc
mov
dec
pop
movsl
xor
inc
outsl
or
cmpsl
mov
movsb
aad
or
test
in
lods
adc
inc
dec
jmp
inc
push
push
imul
jb
aad
mov
mov
out
imul
inc
adc
cltd
shlb
mov
jle
xor
imul
push
aaa
mov
mov
pop
inc
sub
push
dec
lods
jns
push
mov
sub
adc
addb
fcoml
pop
loope
and
rcrl
sbb
out
jg
inc
setp
out
movsl
xchg
test
fistl
clc
jg
arpl
pop
inc
into
stc
stos
xor
out
xchg
pop
in
inc
sbb
nop
and
int
or
repz
mov
sahf
dec
mov
addr16
pop
or
data16
popf
lret
push
mov
xor
cmpsb
cmp
ljmp
aad
cli
xor
scas
ret
inc
pop
insb
xchg
repnz
pop
adc
cmp
in
adc
and
enter
sub
pop
mov
xchg
mov
es
fbld
imul
xchg
cmp
cmp
daa
or
jmp
fisttpl
mov
shlb
pop
movsb
and
cli
aas
dec
cmp
cmp
xchg
jo
icebp
xchg
ret
jnp
lea
mov
pop
fldcw
notb
sub
inc
lret
repz
xor
insl
test
xor
repz
dec
xchg
jp
mov
lds
imul
sub
cli
outsb
je
xor
sub
jbe
dec
mov
sub
int3
pop
sub
adc
xchg
addl
fcomp
lret
ss
rcrb
push
cmp
or
pop
cli
inc
je
and
aam
push
mov
sarb
aad
flds
int
adc
mov
movsl
cltd
shr
daa
test
xchg
or
pushf
popf
sub
dec
imul
pop
xlat
inc
mov
mov
xchg
nop
xchg
jecxz
test
repnz
sbb
xor
sbb
subb
push
push
mov
sbb
popf
stc
fcmovnu
nop
repz
rol
cmp
andb
jns
outsb
push
mov
sbb
int
inc
pop
jae
dec
adcl
pop
cmp
in
dec
out
xchg
int
enter
adc
dec
dec
push
add
int
add
inc
mov
pop
inc
popf
inc
pop
dec
adc
lret
data16
das
add
jge
mov
mov
dec
push
inc
xchg
adc
inc
cmpsb
push
sbb
mov
arpl
sahf
aad
push
adc
sub
pop
pop
pop
ljmp
mul
mov
std
and
pop
mov
lods
push
in
fucomi
ljmp
xchg
lcall
add
jne
cmpsl
jnp
jnp
pop
jmp
inc
xor
rcr
or
out
inc
jge
sbb
cs
out
mov
xlat
ljmp
cmp
ret
std
mov
sarl
insb
dec
cmp
mov
data16
aam
outsb
ds
sub
fnsave
adc
or
loopne
xchg
jae
scas
pop
mov
mov
sar
flds
outsb
adc
pop
dec
push
out
mov
cwtl
inc
out
test
lods
aad
dec
adc
pop
aas
fs
fsubrl
push
ss
and
imul
xchg
mov
cmp
pop
dec
add
out
rolb
stos
sbb
mov
lret
jo
testb
pop
repz
jae
jbe
cmp
fcompl
lods
call
jge
and
test
pop
aad
gs
adc
add
push
sti
sahf
out
insl
sbb
lea
add
mov
pop
arpl
lret
sti
adc
loope
shr
inc
mov
cmpsb
js
pop
stc
out
cmpsl
jmp
add
ret
cltd
mov
jns
int3
or
fdivr
rep
lea
das
imul
adc
insl
jno
or
sbb
movsb
mov
pop
pop
xchg
in
sub
pushf
adc
jbe
out
shll
icebp
xor
repnz
movsb
add
popa
in
std
cld
xor
mov
loopne
mov
popa
dec
push
out
push
or
int3
mov
neg
arpl
mov
add
and
mov
test
add
outsb
nop
xor
sbb
cmp
ret
ja
jmp
jge
dec
sti
push
mov
pop
int3
cmp
push
inc
cli
leave
shrl
mov
sbbl
rorb
sbb
adc
add
pop
arpl
out
sbb
inc
sbb
mov
out
xchg
out
pop
mov
adc
push
dec
mov
sbb
dec
movsl
lret
mov
cmpsb
jne
mov
int3
xchg
in
jb
call
cltd
mov
lods
jl
push
jo
jb
push
and
sbb
ljmp
lahf
stos
xchg
icebp
xchg
cmpsl
xor
outsb
dec
fcmove
cld
jno
push
daa
mov
xchg
aam
sub
popf
xchg
or
mov
push
aaa
shl
gs
mov
inc
push
jo
xchg
popw
dec
fisttpl
xlat
jno
sbb
xchg
add
push
pusha
in
orb
mov
movsb
lea
push
sub
int
jp
push
xchg
out
xchg
xor
push
outsb
mulb
dec
das
fildl
cmpsl
xchg
bound
jnp
rcrl
or
int3
ret
dec
or
leave
repnz
xor
adc
les
stos
aaa
aam
mov
out
test
movsl
call
cmp
sbb
sbbb
mov
stos
inc
inc
add
inc
rolb
pop
jno
int3
jmp
fsubs
aas
dec
inc
aaa
sbb
add
mov
xor
cmp
pusha
ret
mov
sub
negb
int
gs
jnp
mov
add
adc
or
inc
xchg
mov
cli
jne
mov
pop
in
bound
ds
cmp
add
xchg
lods
jle
enter
fdivs
sbb
std
inc
arpl
mov
rcrl
popf
mov
popa
aas
enter
mov
test
cmp
jae
xlat
stc
roll
mov
jg
or
das
cmpl
adc
sbb
cmpsb
stos
mov
test
mov
pop
push
sti
or
cmpsl
cltd
jbe
sbb
sarb
fadds
pop
xor
das
es
aaa
arpl
in
enter
and
jp
inc
inc
xor
test
mov
stc
lods
and
or
cmc
into
push
adc
sbb
jp
popf
add
add
lock
movsl
mov
xchg
lret
pop
insb
mov
das
inc
leave
cli
loope
sti
mov
cmp
sbb
jns
and
jae
in
mov
and
dec
enter
enter
push
sbb
fldcw
jne
rcll
and
pop
outsl
fs
fidivrl
inc
stc
es
sbb
adc
addr16
mov
mov
fwait
xchg
out
sub
cmc
pushf
ljmp
nop
pusha
lods
fdivr
and
jge
pop
adc
aas
call
dec
ret
xchg
ja
hlt
sbb
sti
sub
cmpsb
xchg
fwait
mov
inc
test
adc
outsb
add
mov
xor
xor
mov
mov
push
adc
or
jnp
movsl
mov
fs
aaa
add
xor
daa
pop
fildll
shll
inc
jnp
xor
mov
pop
add
pop
in
or
sbb
outsb
dec
flds
aad
pop
scas
int3
dec
lea
repz
scas
and
stos
leave
sub
movsl
std
inc
mov
sbb
cld
fnsave
push
sarl
ss
add
out
loop
sub
pop
inc
fs
negl
mov
sub
into
xchg
cmp
sarl
xor
mov
das
leave
mov
daa
push
lret
idivl
push
fsub
adc
cld
dec
mov
cmp
xor
dec
mov
movsl
sti
outsb
adc
and
andl
aad
pop
scas
lcall
mov
stc
jl
mov
sub
leave
inc
stos
push
mov
ficoms
jge
mov
into
xor
xchg
scas
sub
lods
fnstenv
dec
sub
dec
push
mov
xor
xchg
mov
push
dec
fmul
xchg
mov
push
jae
pop
les
mov
into
jp
pop
add
neg
push
xor
jmp
add
addb
mov
cmpsl
sbb
hlt
sub
mov
iret
add
subb
popf
bound
push
and
pushw
jns
psubusb
orl
jnp
std
cmp
cli
inc
out
sbb
mov
push
mov
mov
mov
fcoms
in
loop
mov
lods
fs
out
call
sar
xchg
pop
cmp
fs
test
lock
ja
mov
xor
or
insb
inc
stos
shl
and
je
movsl
repnz
shlb
xchg
movsl
ret
fs
bnd
jge
dec
ret
sub
jle
push
int3
loop
sub
or
mov
mov
ficoml
outsb
enter
lahf
ffreep
repz
inc
mov
sbb
shrb
mov
imul
jb
test
je
jb
push
pop
adc
and
cmpl
jae
ret
mov
push
movsb
jae
and
fucom
int
cmp
adc
loopne
jl
cwtl
inc
les
and
shll
xchg
pop
imul
int3
inc
sahf
test
push
daa
aaa
shlb
push
pop
aaa
out
pop
cmp
fisttps
ror
and
cmp
repnz
mov
xchg
xor
xchg
jg
jnp
adc
push
pop
ds
mov
mov
call
mov
cmp
insl
imul
xlat
push
or
sbb
test
fwait
sub
push
push
push
sbb
jecxz
pop
dec
sbb
adc
jcxz
cmp
adc
popa
jae
pushf
pushf
xor
test
jno
jnp
push
mov
sbb
mov
mov
loop
push
mov
popl
icebp
adc
adc
enter
shrl
pop
mov
leave
mov
dec
pop
cwtl
ljmp
jae
rorb
or
mulb
push
push
and
pusha
and
and
test
mov
into
xor
pop
fcmovbe
pop
loopne
sar
push
clc
mov
pextrw
test
testl
lods
mov
sti
data16
adc
mov
in
hlt
sub
aaa
rcr
les
shl
adc
add
outsb
pop
ficoml
mov
push
jnp
cmpsb
les
sti
fsubl
filds
inc
lea
ret
sahf
addr16
das
cmpsb
in
sbb
hlt
lcall
pushf
ret
xchg
sub
push
ds
mov
outsb
add
sbb
cwtl
mov
cmp
or
mov
push
xor
movsb
mov
movsl
xchg
xchg
and
jne
in
hlt
mov
inc
gs
mov
aas
pop
mov
or
cli
inc
mov
int
movsl
cmc
cmp
sub
call
mov
xor
xor
stos
iret
rolb
fidivrl
es
cltd
stos
add
push
aas
insb
mov
xchg
mov
xor
into
jbe
cld
nop
inc
jb
and
inc
ficoml
out
sub
shl
imul
ja
sub
outsl
mov
fadd
xchg
push
inc
lret
xor
inc
pop
negl
imul
mov
in
cltd
mov
cmpsb
pop
mov
imul
lea
push
sub
into
inc
fsubr
mov
in
mov
loopne
arpl
ficompl
xlat
adc
jecxz
sbb
fwait
sbbl
inc
outsb
fwait
sti
xchg
fcomps
ss
jne
hlt
mov
dec
repnz
inc
in
and
imul
fsts
shl
xchg
mov
dec
cmp
test
cmpsl
pop
mov
xchg
aaa
adc
inc
sub
pop
adc
insb
lret
jo
cmc
mov
in
test
jne
inc
cld
imul
inc
scas
out
shl
mov
cmp
xchg
mov
lret
mov
cmpsl
gs
push
and
xchg
lret
mov
lock
add
cwtl
movsb
les
imul
hlt
mov
fnsave
andb
or
cmpl
push
fwait
andb
xchg
rcr
push
repz
inc
movsl
xor
test
pop
xor
dec
mov
xor
sbb
addr16
push
roll
call
jno
jmp
test
movsb
jl
cld
enter
and
adc
or
rol
or
loop
or
in
bound
popa
aam
sbb
roll
adcl
xor
rcll
mov
clc
rcrl
testb
cmpsl
sti
add
pushf
imul
fs
push
pop
cltd
movsb
xchg
jmp
sbb
test
mov
xchg
or
xchg
push
sbb
std
sub
push
sbb
sbb
cmp
int3
ret
js
xchg
add
inc
add
aaa
mov
adc
add
ss
or
xchg
jne
ret
ror
repnz
or
inc
ja
sub
jns
pop
push
mov
sub
pusha
bnd
lea
mov
mov
and
cmp
xor
and
sti
mov
test
test
inc
fisubrl
or
movsl
out
or
ret
cld
cltd
test
sbb
adc
loopne
mov
call
call
inc
sub
push
and
mov
rclb
mov
test
popa
mov
cli
and
push
sbb
mov
js
pop
jmp
das
lahf
scas
inc
xor
les
add
sub
push
jb
cmp
push
dec
stos
into
and
inc
pop
movl
movhps
sti
je
xlat
out
repz
lods
mov
les
pop
popf
add
enterw
mov
clc
add
mov
lahf
cmp
mov
mov
mov
negl
cmp
out
sub
je
leave
xor
push
int
pop
stos
out
outsb
out
jmp
repnz
ficompl
loopne
lcall
push
lods
cmpl
sbb
adc
push
and
scas
aas
mov
scas
int3
je
dec
inc
leave
and
mov
inc
dec
add
mov
dec
int3
dec
adc
mov
enter
cmp
push
fimull
xor
iret
and
popa
inc
inc
dec
lcall
call
nop
js
or
in
mov
mov
sub
std
push
cmp
mov
shl
int
pusha
pop
sbb
push
mov
dec
int
addr16
scas
mov
cwtl
sbbl
test
in
enter
call
cltd
js
leave
sti
fnstenv
push
test
dec
test
loope
ret
ljmp
ja
lret
daa
mov
gs
out
jg
in
out
popf
ss
cmpsl
pop
imul
es
sbb
push
cmp
xorl
jbe
int
sbb
mull
nop
out
aas
adc
xchg
inc
jne
add
cmp
jb
arpl
les
push
je
mov
xor
je
mov
in
inc
xlat
or
scas
xchg
mov
int3
mov
jg
mov
or
adc
sub
outsb
push
stos
push
jecxz
ss
mov
jmp
mov
mov
repnz
call
call
mov
pop
or
sbb
in
pop
out
ret
and
push
ficompl
subb
mov
jmp
xor
xchg
or
jno
pop
and
push
lods
push
fwait
stos
pop
mov
popa
inc
and
cmovne
push
adc
fwait
mov
sbb
jl
cmpsl
sbb
adc
push
mov
push
jmp
adc
dec
add
pop
ja
fisubl
fcomps
sbb
je
jge
out
sbb
push
rorl
xor
sbb
inc
pop
mov
fwait
jne
inc
lcall
and
fldenv
clc
pop
inc
fst
std
lock
jmp
out
mov
xchg
jb
sbb
int
and
pop
icebp
xor
and
and
je
gs
cltd
repnz
adc
jmp
sbb
pop
fldt
lahf
test
movsl
int3
add
cltd
lret
cmp
xor
insl
pop
rclb
push
pop
mov
adc
or
mov
pop
aam
mov
sbb
jl
push
sahf
pop
mov
nop
jno
cmp
fbstp
xchg
bound
push
mov
int3
xor
ljmp
and
mov
popa
and
mov
int
adc
add
xchg
sbb
pop
ljmp
je
jp
cltd
out
mov
scas
pop
mull
push
jmp
orb
xchg
mov
lcall
mov
int
stos
test
mov
jno
jbe
jg
inc
popa
jle
and
enter
add
inc
push
adc
jne
jmp
aad
push
xchg
insl
aaa
mov
mov
fildll
lock
stos
and
fucomi
xchg
add
out
inc
jp
mov
and
pop
jp
sbb
aad
push
pop
jg
adc
cmp
gs
aas
xchg
pop
or
fcoms
xchg
bound
idiv
icebp
and
lock
mov
enter
pop
cmp
cli
add
xchg
lods
sbb
bound
sbb
dec
in
in
adc
sti
adc
or
mulb
ret
jnp
jne
ja
cmp
rolb
cmp
sbb
sbb
push
fstps
mov
inc
ret
test
fucomip
pop
mov
push
mov
pop
rol
xabort
les
bnd
add
dec
push
in
pusha
repnz
mov
icebp
pop
in
mov
mov
in
lret
add
jne
xchg
cmpsl
or
cs
xchg
pop
out
testb
inc
aas
xchg
pusha
pusha
sbb
dec
lock
ss
in
push
ror
mov
and
mov
xchg
addr16
mov
cltd
jns
in
or
stc
ja
negl
jmp
nop
or
add
in
ret
je
fmulp
scas
and
aaa
pop
shlb
mov
dec
mov
xor
add
cwtl
sbb
daa
sbb
leave
repnz
mov
xor
repz
mov
sbb
jns
mov
cli
inc
push
int
leave
aad
add
fwait
movsl
inc
or
sub
dec
lds
inc
or
subb
mov
cmc
xor
sbb
pop
cmpsb
in
xchg
pop
cmpsb
std
mov
or
mov
test
and
call
shlb
gs
mov
lds
ss
inc
call
repz
iret
cmp
dec
xor
jmp
pop
test
jns
cmp
nop
enter
xor
push
mov
dec
ds
cltd
dec
out
pushf
push
hlt
mov
arpl
fnstenv
adc
bound
push
sbb
adc
sub
rcrb
mov
fildl
add
dec
xor
popa
sbbb
repnz
sub
in
fiadds
and
dec
or
je
dec
repnz
iret
lret
shll
cmp
xor
xorl
lea
inc
cwtl
lahf
or
fwait
scas
push
mov
clc
jae
xor
pop
sub
icebp
mov
cmp
inc
pop
cmp
add
fwait
shlb
aaa
cltd
inc
mov
jno
pop
jnp
add
xchg
out
cmc
cmp
xor
leave
loopne
adcl
cmc
adc
jae
cwtl
mov
lea
fisubs
pusha
std
sbb
add
imul
mov
push
out
mov
pop
jp
hlt
mov
rorb
jle
sbb
std
ja
pop
adc
pop
cmpsl
test
push
sub
cmp
scas
cmp
outsb
sub
xchg
jo
and
bound
push
jno
das
cmp
pop
or
jae
sbb
add
scas
dec
or
cmpsb
mov
icebp
test
fstps
dec
inc
or
das
out
lods
push
mov
test
lsl
or
dec
push
mov
pop
arpl
xor
leave
mov
fildl
pusha
fists
push
fsubr
lret
dec
repz
cmpsl
aas
xor
pop
insl
gs
mov
subl
xchg
sub
shll
cltd
sub
and
outsl
add
scas
mov
jg
mov
repnz
int
outsb
pop
xchg
push
into
add
sub
xor
inc
mov
loope
aad
call
pusha
cld
dec
inc
fwait
mov
jl
pop
and
ds
dec
icebp
add
int
roll
push
rcrb
xor
xlat
mov
jmp
sub
mov
ss
inc
sbb
les
mov
push
in
orb
jo
stos
xchg
fisubrl
mov
xor
push
cmpsb
pop
mov
ljmp
mov
sbb
inc
dec
dec
adc
repnz
add
shll
sbb
xchg
or
outsb
and
repnz
popa
std
and
push
mov
je
adc
xor
mov
jmp
jg
pop
es
push
push
sub
adc
add
sahf
leave
pop
cmc
sub
insb
xchg
lods
or
popf
mov
insb
loope
testl
cmpsl
in
jno
shll
mov
mov
sbb
dec
leave
test
xor
cmc
push
popf
xlat
cmp
dec
inc
arpl
cmp
jmp
cmp
jecxz
xchg
popf
add
inc
push
rorb
pop
insl
push
mov
xchg
xchg
pop
xchg
aaa
xchg
inc
adc
movsl
pop
pop
push
mov
jecxz
or
push
push
es
in
xchg
bound
mov
lods
inc
into
sub
cmp
imul
and
ss
inc
cmp
stos
in
mov
lods
jp
jl
addr16
test
and
xchg
xor
cmp
fidivs
inc
jl
mov
or
xchg
mov
push
gs
mov
xchg
xchg
inc
pusha
push
xor
cs
xchg
clc
lods
mov
mov
mov
and
in
push
adc
out
xor
cltd
xchg
int
lock
ds
xchg
fcomi
pop
sub
dec
cld
mov
je
mov
mov
adc
sub
sub
jecxz
inc
sahf
repz
sub
mov
test
adc
int3
outsb
inc
xchg
xlat
ret
cld
cmpsl
data16
mov
dec
jmp
mov
xchg
sahf
push
fcomp
mov
leave
mov
cmp
xor
imul
dec
mov
mov
ret
jns
cmc
or
jb
cmp
jmp
add
sbb
or
pusha
loopne
mov
xchg
mov
stos
inc
sub
js
jo
mov
aas
sbb
lods
loop
dec
mov
dec
fldcw
test
push
mov
mov
out
push
shrb
or
mov
mov
movsb
mov
adc
lcall
add
test
add
fildll
inc
icebp
cmpsb
test
dec
lahf
ja
add
mov
pop
subps
dec
sbb
mov
stos
xor
clc
push
sbb
repz
mov
stc
js
add
push
ljmp
sti
insb
into
mov
loope
hlt
arpl
pop
ljmp
outsl
adc
in
push
mov
sub
cmp
shrl
lahf
out
mov
push
mov
clc
fistpl
es
xorl
push
jmp
cld
jne
loope
test
pop
outsb
xlat
je
ss
mov
mov
xor
outsb
and
xor
out
mov
mov
xlat
fidivrl
scas
fildll
fcmovne
aas
adc
pop
cmovg
ss
or
mov
movsl
aad
add
sbb
cld
cmpsl
fcmovbe
sbb
mov
cmpsb
dec
mov
daa
mov
imul
xchg
xor
dec
pusha
outsl
push
test
jg
mov
in
mov
pusha
std
nop
addb
movsl
sub
and
arpl
xchg
mov
jl
cmpl
in
xor
pop
jge
mov
sbb
mov
add
out
in
add
mov
popf
mov
pop
xchg
cli
jecxz
mov
cwtl
addr16
inc
inc
fistpl
adc
rolb
ss
nop
cwtl
aad
ret
cmp
or
push
lahf
addr16
cltd
in
sbb
insb
and
enter
fs
mov
adc
mov
or
cltd
out
fldcw
add
push
mov
repnz
xchg
adc
cmp
and
jle
cmc
pusha
sub
test
jo
mov
testl
cltd
popl
cs
mov
push
cmc
imul
adc
push
test
pop
cltd
add
in
leave
out
lret
cltd
add
loop
mov
mov
inc
and
rcrb
mov
daa
dec
sub
rolb
clc
dec
mov
and
sub
sti
cmp
fisubs
fwait
scas
in
into
dec
cmp
jmp
mov
push
sub
xchg
adc
and
add
pop
mov
xlat
lret
cmp
shrb
data16
fs
fildl
pop
cs
mov
add
pop
les
jae
and
xchg
sahf
xchg
fbld
popa
aad
dec
xchg
adc
lea
pop
sub
leave
jb
push
jae
cs
cmp
push
mov
movsb
fs
sub
or
pop
cmp
gs
mov
adcb
or
sub
stc
fwait
dec
xlat
mov
push
sub
shlb
fmull
fnstenv
push
popf
shrl
inc
mov
cmp
in
ficoms
and
scas
clc
push
cmpsl
stos
jbe
addr16
out
mov
jle
ljmp
imulb
sarl
adc
pop
inc
push
push
fcoml
frstor
sub
fidivrl
shl
rcl
sbb
dec
filds
ret
xchg
test
dec
and
enter
into
enter
push
xor
loopne
mov
pop
outsb
add
cmp
mov
jae
repz
sub
and
xchg
icebp
inc
inc
push
test
je
lods
rolb
sbb
pushl
adc
mov
cmpsb
mov
pushf
sbb
inc
shrl
xchg
xchg
enter
jo
cmp
lea
jmp
jecxz
or
sub
sbb
loopne
add
push
loopne
jmp
push
jle
sbb
dec
imul
insb
imull
in
sub
icebp
jne
dec
push
xchg
push
adc
hlt
lgs
lcall
mov
and
add
addr16
hlt
lds
jmp
push
jge
fnstsw
xchg
sub
sub
or
jl
push
into
sahf
testb
push
mov
mov
or
nop
sti
push
jg
mov
adc
xchg
jb
jp
jo
or
xor
test
testb
repnz
or
lret
pushf
stc
sub
and
mov
scas
adc
sub
iret
jecxz
or
popa
push
or
add
mov
jle
aad
mov
aas
sub
addl
push
dec
sub
adc
loope
idivb
push
mov
and
xlat
addps
inc
in
jl
xor
dec
imul
xor
cmpsb
insl
xor
xchg
mov
pop
popf
push
xchg
dec
lds
xchg
xor
fwait
imul
je
repnz
enter
les
and
addl
lret
xchg
hlt
mov
fs
test
push
daa
lods
or
lock
ret
int3
jnp
add
push
cmpsb
negl
xchg
gs
mov
das
mov
push
iret
ljmp
xor
add
ja
inc
cmpsb
or
xor
aad
ret
adc
xor
dec
inc
rcll
pop
jmp
mov
xchg
daa
addr16
cmp
push
mov
or
pop
movsb
mov
pop
dec
fwait
outsb
dec
pop
dec
cmp
pop
icebp
addr16
adcl
ljmp
iret
scas
jle
pop
mov
jno
mov
aas
out
adc
outsb
and
in
add
xchg
mov
fcmovne
push
fsub
and
add
out
rcrb
fwait
cmp
clc
cmpsb
mov
and
add
add
test
mov
mov
fmuls
mov
push
repz
out
int
je
test
add
les
inc
cmp
stc
add
add
in
xchg
mov
mov
push
xchg
mov
dec
adc
jle
movsl
icebp
loop
icebp
ds
or
mov
or
push
movsb
andl
test
cwtl
lcall
iret
loop
or
dec
push
cmpsl
in
and
push
push
filds
and
mov
shlb
jmp
in
cli
rclb
sub
add
dec
add
fistl
sbb
cmp
shll
lds
pop
push
cli
or
insb
xchg
sbb
push
movmskps
and
stos
sti
xlat
push
cld
mov
jnp
pop
xchg
pushf
hlt
lock
sub
mov
inc
jmp
shl
cld
icebp
sbb
outsb
or
mov
cmc
icebp
roll
dec
cmp
pop
mov
aas
cmp
dec
sahf
sub
sahf
pushf
mov
lock
mov
cmp
xchg
xchg
mov
xchg
jle
pop
cmp
cld
aaa
lahf
xor
sbb
divb
pop
mov
fdivrp
pushf
stc
cli
loop
xchg
mov
adc
movsb
pop
sbb
je
adc
test
negl
lods
loop
inc
sbb
adc
rcr
jmp
rclb
pop
outsl
push
and
inc
add
fidivrl
jb
xchg
or
imul
cmp
push
jge
loope
inc
cmp
jmp
and
cwtl
push
mov
xchg
fsubrl
imul
push
je
mov
loopne
xchg
mov
and
inc
sbb
dec
repnz
cmp
mov
sub
pushl
or
fmull
imul
xchg
sub
lea
movb
sub
push
xchg
jecxz
push
fmuls
push
out
mov
movsl
add
push
lahf
cmp
mov
push
popf
dec
mov
cmp
ret
int
pop
and
std
mov
cmp
scas
xlat
clc
push
enter
sub
shl
xchg
insl
push
xchg
sti
imul
adc
daa
fisubl
sub
mov
in
dec
jecxz
lods
mov
mov
testl
cmp
insl
jno
pop
sub
stos
ret
scas
cmp
sbb
and
and
pop
and
je
adc
push
dec
push
test
mov
cmp
dec
push
lods
roll
icebp
cmpsl
push
ret
dec
mov
pop
cmc
dec
cmp
xor
add
push
repnz
pop
fidivrl
out
shld
xchg
fnstsw
sti
sub
fcmove
cwtl
jns
mov
xor
out
push
notb
ret
inc
push
daa
dec
sub
je
daa
sbb
cs
dec
xlat
push
jp
out
cmpsb
data16
stc
popa
adc
xchg
test
popf
into
mov
jno
lea
push
jbe
mov
cmp
test
pop
add
mov
mov
or
ja
fcomi
int
dec
rcll
adc
mov
scas
enter
shr
mov
call
dec
cwtl
jno
loopne
and
incb
jecxz
pushf
lea
or
daa
lret
shlb
sbb
pop
movsl
insb
lods
sub
cltd
mov
dec
sub
jb
cltd
std
ret
fiadds
or
mov
repnz
jno
jl
pop
pop
add
inc
inc
loope
enter
push
pop
dec
mov
lods
xchg
faddl
rcr
cmp
daa
insl
in
pop
mov
aaa
push
out
fmull
hlt
lods
dec
jnp
mov
outsb
hlt
lods
mov
lea
jo
scas
pop
jg
aad
jae
mov
mov
int3
arpl
xchg
pop
cmp
cmp
in
neg
adc
mov
jno
dec
jge
mov
ret
inc
xor
cmp
js
das
mov
jo
xchg
orb
dec
addb
dec
jnp
das
inc
js
clc
out
pop
imul
add
mov
mov
push
push
lods
test
loop
outsb
aam
or
fcomip
ds
jne
icebp
orl
dec
sub
dec
ret
push
push
test
lcall
test
and
incl
ja
sahf
movsl
lods
fsubs
sub
or
shll
sbb
rcll
xor
push
js
fiadds
mov
mov
xchg
xor
notl
or
push
nop
add
gs
xlat
insb
jno
cwtl
rolb
loope
mov
xor
jns
sub
lahf
testb
xor
and
addr16
clc
dec
insb
inc
pushf
sub
mov
movsl
inc
lds
xchg
mov
pop
jmp
adc
clc
mov
fldl
and
in
lods
sub
mov
repz
imul
mov
sbb
xchg
stos
ret
sbb
je
and
xchg
xlat
push
sarb
ret
and
add
ret
add
arpl
mov
push
nop
xor
xchg
pop
push
adcb
adc
mov
jle
insl
leave
sahf
aas
lret
dec
mov
adc
push
or
and
adc
mov
jbe
hlt
enter
sbb
dec
jbe
add
mov
push
adc
mov
std
adc
inc
shlb
nop
bound
lds
push
sarl
lods
outsb
push
mov
pop
pop
xor
mov
xor
jmp
xlat
inc
sub
inc
jl
or
pop
orl
mov
inc
lea
push
dec
movsb
stos
inc
scas
daa
jne
jecxz
cmp
out
jl
pop
les
mov
xchg
dec
hlt
lret
dec
lret
dec
inc
fidivs
fcmovne
iret
out
notb
scas
jae
push
hlt
dec
inc
adc
pusha
cli
movl
and
out
mov
aad
pop
sti
nop
daa
adc
cli
aad
push
mov
dec
push
push
mov
ljmp
adc
or
pop
aam
xchg
movsbl
fcmovne
xor
mov
int3
ja
pusha
jg
cmc
fisubs
cmp
jecxz
test
xchg
insb
or
xor
jg
rorb
lret
ds
mov
xor
pop
xor
sbb
sti
dec
cmpsb
xchg
fwait
dec
in
pop
dec
pop
lcall
loopne
dec
mov
xor
cli
fimuls
pop
out
inc
fbld
cld
addr16
insb
mov
cmc
dec
push
xchg
sub
insb
scas
and
ljmp
jb
lods
and
jge
les
inc
inc
stos
pop
sbb
bound
or
and
push
icebp
inc
mov
jge
jp
adc
cmpsb
cmc
push
dec
sub
callw
inc
and
pop
stos
stos
adcl
repnz
push
adc
jmp
xchg
xor
mov
jl
adc
imul
hlt
pop
decb
push
loop
daa
insl
inc
push
lods
mov
dec
rol
adc
fstps
add
push
mov
cmp
sub
dec
pop
and
add
sti
mov
icebp
sti
enter
xor
popa
sub
clc
cmp
repnz
js
jg
shll
repz
mov
and
clc
or
push
jae
jl
push
mov
cmpsb
rclb
inc
pop
jle
inc
sbb
scas
mov
xor
ficoml
out
ds
adc
lock
pusha
das
cmpsl
add
aaa
mov
xchg
cmp
popa
inc
popa
je
pop
clc
fldl
call
out
and
aaa
sub
mov
push
call
mov
fsubrp
out
cwtl
icebp
and
jnp
sar
ret
std
cmp
mov
dec
sbb
fwait
push
pop
jle
jns
fisubrl
sub
shll
adc
jo
out
push
add
add
push
jle
mov
jmp
lds
xor
dec
cmc
shlb
xorl
sub
int
dec
pop
jne
setne
or
into
popf
cmp
adc
jmp
sahf
mov
out
jp
adc
movsl
fwait
push
dec
leave
test
mov
lock
ljmp
pop
sbb
fidivs
xchg
mov
and
scas
fistpl
mov
popa
sahf
addr16
in
mov
inc
mov
ja
js
push
push
filds
mov
lea
inc
dec
mov
xor
outsb
adc
or
xor
shll
push
inc
insb
mov
cmpsl
fwait
or
add
push
cmp
add
pop
lret
sar
stos
jmp
mov
cmpsl
sub
push
adc
adc
out
daa
cmp
add
in
sarb
mov
jecxz
es
pop
mov
mov
add
push
fs
dec
nop
jp
jle
pop
jo
inc
xor
or
popa
int
mov
movsl
rcr
dec
mov
mov
rcrl
cmp
xchg
jle
pop
mov
test
pop
lea
movsb
leave
ljmp
or
loope
fcoms
in
gs
ds
test
std
jecxz
insl
inc
insb
int
rcrb
mov
mov
sbb
sbb
in
clc
shrb
cmp
mov
mov
xchg
lea
cld
adc
cmp
pop
shl
adc
cmp
test
lret
pop
cmpsb
jl
mov
mov
cli
repz
xchg
mov
divl
js
ljmp
add
mov
dec
sti
adc
mov
inc
inc
cmp
inc
in
sti
sub
mov
inc
cmc
cmp
push
pop
stos
xor
scas
ja
push
arpl
push
call
gs
jg
das
xchg
sub
ss
daa
sub
push
xlat
nop
enter
xchg
jb
inc
or
cs
push
adc
mov
pop
adc
stos
cmp
push
push
jmp
cmpsb
mov
adcb
sub
sub
movsb
or
lods
scas
push
mov
add
mov
inc
fcoms
pop
in
call
mov
add
xor
mov
in
xchg
xor
in
xchg
int3
dec
mov
and
stos
test
fisubl
pop
aam
insl
mov
pop
das
vmread
imul
xchg
xchg
popa
cmpsb
and
inc
sub
and
push
xchg
mov
and
out
jb
xorl
push
lret
jg
inc
jb
stc
call
mov
addr16
push
mov
mov
test
add
fldt
add
stos
fwait
aaa
and
xor
xor
mov
jnp
mov
iret
and
cmp
sub
cltd
mov
lods
sub
add
cmpl
add
dec
dec
je
or
shl
mov
pusha
inc
loop
cli
dec
cmp
jecxz
cs
xchg
adc
stos
int
pop
out
jg
mov
mov
mov
xlat
lods
pop
push
cmp
cmc
out
xor
cmc
mov
mov
dec
mov
cli
jb
sbb
dec
dec
lahf
xchg
stos
mov
sub
xor
cmp
xor
sub
loopne
fs
movsl
mov
bound
into
out
or
into
test
mov
mov
sti
pavgw
adc
jo
cmp
cmp
jmp
xor
xchg
cmp
dec
xor
hlt
xor
shrb
sti
aad
addl
xchg
xchg
in
inc
add
lods
loope
push
jne
inc
aam
stos
xor
int3
int3
scas
push
pop
pop
lret
adc
outsb
fst
jo
repz
inc
jge
cwtl
or
pop
xorl
das
or
aas
push
fmulp
shll
iret
mov
scas
jl
and
jne
inc
aad
push
adc
mov
pop
xor
jns
sub
mov
jns
orb
fcomps
or
sbb
jmp
loopne
movsl
je
mov
xor
inc
cwtl
leave
xor
fwait
into
in
cmpsb
clc
push
pop
in
fcmovb
sarb
scas
negb
imul
test
mov
push
das
xchg
sbb
push
sub
mov
fwait
and
inc
pop
aas
sbb
pop
lea
idiv
jbe
into
pushf
iret
mov
data16
or
jnp
out
sub
jge
sub
pop
adc
mov
adc
add
fwait
pop
ss
xor
lods
sub
push
inc
xchg
mov
mov
iret
jo
mov
aad
push
scas
fwait
xor
cs
mov
and
jmp
mov
adc
jl
and
lea
cmp
xchg
xchg
loopne
mov
xor
in
mov
arpl
pop
lcall
mov
pop
adc
jmp
pop
aad
and
push
arpl
push
cli
push
and
lock
inc
push
fs
faddl
inc
ljmp
rcrb
inc
rol
add
popf
xchg
sub
xchg
push
insb
lock
aas
adc
lock
test
aam
add
mov
cmp
orb
dec
jo
push
and
test
jmp
xrelease
sbb
orb
test
cmp
mov
mov
push
mov
jbe
lret
dec
ficoml
aam
insl
jecxz
pop
clc
scas
sub
adc
inc
in
push
add
mov
pusha
adc
dec
inc
or
mov
jecxz
es
je
loopne
nop
cmp
pcmpgtb
push
outsl
and
xor
inc
sahf
push
movsl
mov
jno
jmp
mov
sub
mov
cmp
lods
xor
int3
jp
lahf
ljmp
test
lahf
sub
fwait
iret
xchg
sti
out
iret
cwtl
push
dec
pop
fists
nop
pusha
and
inc
xor
test
and
cmp
add
icebp
jp
loope
fidivrl
pop
js
sub
or
cs
mov
mov
out
push
std
ljmp
xlat
xchg
movl
mov
add
mov
fs
ss
outsb
push
push
sub
dec
xchg
nop
icebp
pop
push
lods
popa
and
jmp
adc
movsb
daa
stos
insb
punpckhdq
aas
jne
cmpsb
pop
or
int3
adc
call
sub
fdivrl
mov
push
lds
mov
andl
movsb
push
cwtl
mull
mov
mov
sbb
and
gs
jle
sbb
not
cmpsl
pop
pop
sub
loopne
popa
ret
push
aam
pusha
push
and
cmp
testl
cmp
xor
inc
lock
out
mov
cmc
mov
cmp
cld
adcb
insb
scas
push
rcrl
lret
cltd
jecxz
movsl
and
insl
mov
inc
sti
mov
inc
popf
mov
push
or
push
dec
les
test
push
add
lahf
fidivs
and
aas
stos
or
and
int3
xchg
adc
cmc
addr16
sbb
pop
es
pusha
insb
addl
dec
mov
pop
xlat
push
pusha
and
mov
pushf
jp
popf
stos
push
add
dec
leave
pop
mov
or
shrb
add
xor
adc
sti
enter
add
jnp
jl
and
pop
xchg
jno
shll
int
and
pusha
hlt
mov
cld
sub
rol
sti
push
popa
sarb
sub
sub
mov
xchg
mov
iret
pop
jl
sbbl
rorb
loop
cmp
lds
inc
push
xlat
out
or
inc
clc
dec
cli
jecxz
std
imul
js
sti
dec
jmp
xchg
std
pop
xorb
inc
pop
maskmovq
testl
mov
sub
jo
out
shlb
push
mov
rcrl
mov
ds
mov
in
in
jl
mov
lds
jbe
repnz
fsin
or
ret
sbb
mov
mov
psadbw
adc
add
sub
rolb
xchg
fdivp
insl
std
hlt
in
or
push
testb
xchg
roll
and
jbe
push
cltd
pop
sub
int3
jae
pusha
lock
pop
fcomps
jns
leave
insb
imul
ss
cmp
sbb
mov
mov
in
aaa
add
or
or
push
repz
jecxz,pn
xchg
inc
aas
loop
sub
pop
jnp
ljmp
lea
mov
aaa
inc
fimuls
repnz
inc
xchg
inc
xchg
or
mov
mov
out
xor
pop
test
push
mov
pop
adc
enter
cli
mov
mov
fisttpl
clc
lahf
push
jnp
imul
jo
xchg
push
jmp
lahf
mov
and
call
lret
fs
sbb
cs
icebp
test
addr16
enter
out
push
out
mov
push
dec
mov
daa
test
shlb
jl
lcall
mov
in
dec
mov
mov
jge
xchg
data16
sub
pop
and
aam
sbb
xchg
xor
sbb
loopne
loopne
or
aam
cli
cs
mov
mov
rorl
xchg
sahf
shrb
js
js
icebp
lahf
xchg
mov
xor
and
jb
aaa
pop
arpl
test
adc
call
inc
push
popa
mov
and
sub
sbb
mov
in
imul
mov
and
adc
inc
xchg
push
out
and
dec
mov
mov
dec
add
mov
pop
fstl
xor
xor
add
jp
jge
or
dec
add
xor
cmp
aas
mov
outsb
xchg
jg
add
aam
fsubr
push
jb
dec
mov
cmp
rorl
pushl
dec
jne
dec
xchg
rcl
je
outsl
in
add
and
pop
or
ja
dec
dec
jl
adc
add
jl
jno
rdpmc
mov
pop
pop
push
xchg
jl
adc
arpl
cli
cld
mov
adc
cli
push
loope
jmp
or
aaa
andb
sbb
xchg
std
or
inc
jo
push
push
out
push
mov
xchg
jb
mov
add
mov
jle
inc
or
and
sahf
and
pop
stos
jecxz
test
mov
lret
xor
xor
dec
jne
lods
imul
xor
lea
mov
push
inc
mov
sbb
mov
dec
mov
insl
popa
push
push
add
push
pop
cwtl
dec
jnp
lock
push
outsb
add
cmpsl
dec
aam
pop
stos
lret
xchg
mov
push
fdivs
js
aas
dec
adc
in
cmp
cmp
aaa
mov
xchg
mov
cld
push
rolb
mov
push
in
dec
lahf
mov
push
xor
xlat
adc
inc
iret
push
adc
add
sti
xchg
aam
frstor
flds
and
or
test
data16
repz
mov
xor
mov
lock
out
sbb
subb
mov
ret
dec
or
or
pop
pop
mov
mov
cmp
xor
push
stc
push
and
les
addr16
cmc
mov
pop
xchg
rorl
movsl
xchg
mov
mov
jmp
and
push
pop
jle
imul
insl
sbb
enter
mov
sub
xchg
jg
int3
stos
scas
mov
lods
ret
pushf
or
mov
es
push
iret
sub
push
fwait
and
mov
and
mov
mov
leave
sub
nop
sub
stos
xor
cmp
into
fdiv
vpshab
test
fwait
sub
in
sti
into
jmp
sub
mov
inc
std
mov
or
ficomps
sub
shll
jp
mov
pop
inc
cmp
cmp
mov
test
push
add
jge
push
push
mov
repz
fbstp
sbb
int3
push
cmp
sbbl
fcompl
push
daa
int
testb
xchg
fmul
iret
in
adc
dec
outsb
fdivrl
mov
lahf
and
fcmovne
inc
sub
adcb
iret
sti
lock
shlb
lret
sti
enter
shll
push
inc
mov
pop
loop
cmpsl
les
int
jae
sbb
mov
mov
mov
mov
sbb
pop
leave
fwait
xchg
push
xor
rol
and
mov
popa
nop
mov
and
ffreep
lret
push
fbstp
sahf
leave
and
push
cmp
sbb
mov
xlat
push
loope
inc
out
jmp
sbb
les
xchg
fldt
call
jge
fsubl
push
scas
mov
dec
jecxz
push
jg
xor
and
lds
or
push
stos
outsb
and
sbb
add
or
jmp
xchg
cwtl
in
shrl
cmp
test
arpl
lcall
addr16
mov
js
sub
aaa
xor
jne
cs
sbb
daa
jae
add
add
mov
mov
loopne
leave
push
push
add
inc
rorl
sbb
push
adc
xchg
jg
add
icebp
dec
pop
ss
leave
popa
arpl
jno
push
loop
dec
insb
js
in
sar
lahf
addr16
dec
test
push
hlt
int
push
ficompl
add
mov
ds
outsb
cmp
icebp
ss
adc
repz
xor
sub
sub
stc
push
add
cmp
sub
fcompl
test
lock
jl
xchg
sbb
bound
mov
and
xor
add
adc
dec
adc
mov
pop
xchg
sub
xor
add
xchg
pop
cmp
stc
xchg
cmp
aas
imull
or
and
or
dec
setae
cmpsb
push
in
lods
xchg
stos
cmp
lods
mov
in
cmpsl
shrl
cld
push
cli
mov
pop
nop
xchg
xor
cmp
and
mov
into
xchg
pop
mov
xor
sti
rclb
jnp
test
orl
ss
jne
cmp
jo
sub
xchg
push
in
jmp
les
inc
jl
nop
repnz
addr16
cmp
inc
xor
push
mov
push
aaa
xchg
pop
iret
inc
and
shrb
nop
lods
dec
leave
add
je
push
scas
adc
inc
dec
pop
scas
pushf
cmp
rclb
pop
aas
sub
mov
mov
sahf
add
setb
or
sub
icebp
jecxz
sbb
pop
xor
in
mov
int
dec
xor
mov
insl
jg
xchg
loop
pop
sbb
dec
out
xor
aas
scas
inc
or
mov
xor
mov
and
fs
mov
mov
inc
rorb
dec
xchg
dec
pop
xor
in
sbb
adc
inc
mov
pop
lods
xchg
rep
inc
mov
mov
mov
fisttpl
pop
iret
aaa
jp
xchg
shll
sti
xor
icebp
mov
pop
inc
inc
pop
inc
mov
lods
xor
add
cli
mov
push
aaa
mov
imul
sub
lcall
jae
inc
cmp
pop
mov
sub
jne
cmp
push
pop
int3
dec
and
inc
mov
movsl
lahf
xchg
pcmpeqb
enter
ret
and
add
xchg
stc
sbbb
in
mov
push
les
pop
jns
mov
sbb
cli
xchg
dec
xchg
xchg
int3
das
jg
push
mov
test
notl
xchg
push
je
enter
sub
icebp
cwtl
inc
loopne
mov
cmpsb
or
push
cmp
sbb
xchg
cmp
pop
imul
cmp
sbb
mov
icebp
and
dec
data16
push
add
mov
sub
loop
adcl
jp
mov
lret
lcall
ret
mov
xor
or
iret
xchg
push
add
ret
jmp
mov
xchg
rolb
xchg
shl
lahf
mov
jge
mov
inc
pop
jne
inc
ret
inc
leave
divl
rclb
inc
cmpsb
adc
xor
imul
jecxz
popf
push
jp
pop
jno
mov
test
clc
cmp
push
push
or
cmpsb
aam
inc
xchg
sahf
xchg
or
scas
and
push
sub
cli
fs
inc
in
inc
xor
jle
cli
inc
daa
test
outsl
fadd
stc
jo
je
sbb
sub
sub
and
movsb
push
or
mov
dec
xchg
and
push
mov
aad
ficomps
pop
and
cmp
scas
shlb
call
push
lahf
pop
push
xor
int
and
sbb
in
xor
fcmovnb
cmp
adc
popf
mov
sbb
adc
imul
adcb
test
iret
adc
jmp
pop
jge
or
fwait
bound
inc
xor
ljmp
fists
pop
ljmp
mov
cltd
adc
push
push
mov
jecxz
mov
mov
mov
sbb
adc
popf
xchg
push
daa
sbb
rolb
push
pop
cmp
dec
pop
shrd
mov
imul
dec
dec
xor
aad
mov
rolb
mov
flds
testb
xchg
subb
lahf
dec
or
dec
sbb
cmp
lahf
xor
mov
push
pop
sub
test
sub
hlt
arpl
cmp
jae
aam
cmp
push
fcomps
lea
outsl
adc
pop
push
popf
sub
or
fistpll
xor
mov
dec
test
mov
xchg
pop
ja
dec
push
push
cmp
inc
lock
mov
sbb
jg
pop
push
mov
push
and
sti
push
xor
imul
popf
jo
scas
dec
ret
sub
cmp
xor
mov
jns
pop
andb
jle
cmp
adc
jns
aad
loope
pop
addr16
xchg
dec
and
dec
cmp
xchg
shrb
daa
xchg
dec
sbbl
cmp
mov
add
stos
jmp
bound
enter
mov
insb
jle
push
lds
xor
sbb
add
sbb
mov
add
test
cmpsl
mov
push
sarl
aad
in
sub
das
xchg
call
clc
xor
cmpb
cld
in
shll
add
leave
fdiv
pop
je
xor
cs
fbstp
shll
push
cltd
notl
jp
xchg
add
gs
out
aam
sub
mov
cmp
mov
dec
aaa
roll
push
in
mov
mov
xchg
pop
outsb
testl
xlat
push
dec
adc
insb
cli
popf
push
xlat
pop
leave
sub
or
jo
insl
fs
inc
mov
outsb
call
mov
les
lret
movsl
adc
cmp
cmpsb
lret
gs
add
mov
fisubrl
xor
pop
mov
fildl
adc
dec
rcll
lret
ljmp
lds
fnsetpm(287
mov
cmp
lcall
std
add
cmc
dec
push
add
les
lret
xor
push
test
cmpl
jne
jae
pop
dec
xchg
lods
jnp
ds
sbb
sahf
mov
pop
aam
insb
xor
dec
stc
fisttpl
fstl
cmpl
jne
repnz
sub
outsl
push
ljmp
pop
push
fcmovne
pop
lods
outsb
lea
push
and
jle
jnp
lods
jmp
sti
pop
xchg
insl
sbb
subb
inc
loopne
in
inc
jae
test
adc
outsl
adc
shrl
into
fcoml
out
loop
and
fs
push
dec
pop
in
test
jno
fxch
mov
and
es
adc
sbb
fisubrs
movsl
ret
std
lods
adc
movsl
rcl
mov
inc
sbb
push
add
push
in
stc
or
repz
dec
test
cmp
lahf
inc
daa
add
int
icebp
or
push
hlt
fnstsw
subl
outsl
and
pop
dec
sbb
cmc
ret
adc
mov
int
lods
cmp
dec
movsb
mov
sbb
add
aaa
mov
jbe
lods
cwtl
mov
pop
and
push
or
cmc
sub
in
testb
inc
fimull
shll
pushf
add
pop
dec
loope
movsl
dec
jmp
xchg
and
cmp
rcrb
lahf
outsl
cmp
jnp
cmp
cltd
xchg
lods
inc
es
lock
test
pop
mov
pusha
fisttps
in
jno
repnz
int3
fisttps
mov
jns
stos
inc
xchg
jecxz
pusha
jno
cmp
xor
jae
adcl
mov
jbe
addr16
ret
aaa
pop
loopne
sbb
lods
lds
mov
inc
or
scas
lods
jp
mov
imul
daa
dec
stos
pop
xlat
int3
mov
sbb
sub
outsb
stc
dec
sahf
sti
int
loop
mov
call
dec
pop
outsl
ja
loopne
das
pop
sub
and
pop
pop
jbe
in
shlb
dec
cmc
xchg
and
fcoms
add
lahf
enter
adc
scas
call
mov
and
add
sti
insl
jmp
push
lahf
jbe
jge
jge
xchg
jge
sub
adc
xchg
stos
lods
push
scas
push
xchg
lods
push
into
adc
imul
iret
mov
pop
stos
jns
stos
testl
inc
hlt
mov
cmp
jb
mov
insb
pusha
popf
jno
ret
aaa
fisubs
cmp
outsb
mov
dec
fcomps
sub
scas
ss
sahf
or
mov
pop
loope
mov
jbe
mov
adc
inc
mov
nop
sbb
cli
repz
incl
dec
push
sahf
ja
sub
jae
xor
mov
loopne
sbb
mov
mov
sbb
jmp
xor
into
sbb
mov
std
add
or
addr16
imul
xor
int3
jmp
cltd
mov
mov
les
cltd
inc
mov
dec
loopne
mov
idivl
xor
jmp
push
cmp
add
xchg
andps
mov
sti
mov
xor
in
pop
mov
je
mov
test
shll
inc
rorl
rcll
mov
lahf
pop
lret
imul
ljmp
arpl
in
and
shl
mov
idivl
scas
pop
inc
je
cld
sub
fsubrs
xchg
in
repz
or
push
arpl
push
gs
mov
loopne
in
out
insb
test
sub
mov
pop
mov
mov
cli
adc
test
adc
rcrl
cmpsl
into
mov
xchg
leave
imul
pop
mov
pop
push
cwtl
mov
jno
ja
jge
bound
sub
popf
jp
fdivrl
mov
addr16
test
daa
jg
mov
insb
fadd
ja
push
scas
pop
push
and
mov
jne
or
cli
test
popf
adc
mov
cmp
dec
shlb
movsb
insl
mov
dec
push
stos
sub
aas
arpl
cli
xlat
jns
cmp
iret
iret
addr16
xor
push
loopne
dec
xor
xchg
pop
pushf
dec
scas
adc
inc
mov
test
std
jle
lret
push
or
push
bound
bound
lea
or
xchg
or
inc
daa
cmpl
xchg
mov
ljmp
mov
shrl
cmp
mov
pop
sbb
imul
jge
inc
sbb
inc
mov
jp
andb
inc
std
into
lret
mov
jecxz
jne
in
repnz
xchg
je
lods
lcall
xor
lcall
cmpl
cmp
insl
ds
pusha
setl
xlat
cmp
stc
popf
inc
dec
xchg
and
lahf
out
and
movl
js
pusha
mov
jle
cmpsl
xor
in
mov
inc
lahf
sbb
leave
bound
pop
add
in
pop
pop
jnp
imul
insb
ret
sub
push
fcoms
inc
mov
push
cltd
dec
sbb
pop
loopne
mov
movsl
mov
and
xorl
xchg
add
cmp
and
pop
xor
and
enter
lods
test
push
addb
test
mov
arpl
imul
stc
shll
pusha
dec
mov
xor
push
scas
mov
lds
inc
pop
mov
repz
jmp
lret
and
mov
adc
add
subb
fucomp
sub
jno
arpl
outsl
jp
outsl
adc
and
imul
mov
cmpsb
pop
jge
dec
xchg
in
push
or
xlat
test
outsl
scas
xchg
mov
lea
mov
loopne
lods
cs
xor
pop
inc
mov
in
insb
adc
stc
cmp
rep
inc
insl
repz
push
out
add
test
add
iret
repnz
ss
rcrb
or
dec
bound
push
or
test
mov
cs
scas
xchg
idivb
sub
lcall
mov
test
xlat
loope
out
or
inc
pop
fsts
hlt
iret
stos
add
sub
repnz
inc
pop
dec
lret
mov
mov
in
arpl
or
adc
lret
in
shrl
xor
iret
mov
ss
lds
xchg
jge
inc
fs
jmp
inc
jb
mov
gs
stc
push
sarb
inc
adc
inc
mov
idivl
and
out
stos
cmpsb
aad
mov
jae
cltd
jmp
cmc
mov
mov
daa
push
scas
cmc
jl
sarl
mov
dec
sbb
cmpb
push
jp
fistpll
cmpsb
jns
out
stos
repnz
imul
adc
jns
add
cmp
xor
sbbl
inc
push
mov
or
scas
cmp
jecxz
mov
fstp
fs
sub
fsts
clc
mov
popf
adc
or
sub
sti
sahf
lock
fisubrl
pop
add
jb
pop
iret
jmp
cld
gs
sbb
pusha
jecxz
mov
stos
fsubrs
js
loopne
scas
or
int3
push
xlat
int3
pop
xchg
jnp
lock
js
xor
mov
pop
dec
imul
or
mov
outsb
out
outsl
adc
imul
cwtl
jno
push
dec
leave
int
xor
or
mov
add
out
push
mov
pop
sub
dec
addr16
ljmp
lret
xchg
xor
mov
inc
xor
jno
adcb
dec
bound
lods
sub
cltd
jg
stos
js
sbb
out
repnz
test
pop
outsl
cmpsl
ja
fs
xchg
mov
in
and
scas
and
mov
aas
call
mov
xor
insl
int3
cmp
cli
cld
dec
ficomps
adcb
inc
rcll
cmp
inc
out
fsubl
xor
repnz
test
sub
dec
enter
int
pop
sti
and
inc
lcall
stc
fnstenv
lds
xor
lahf
xchg
inc
pop
jb
hlt
fwait
cld
cmpsb
push
int
call
mov
sub
nop
inc
aad
in
shll
in
mov
test
add
push
repz
mov
mov
mov
lea
in
cmpsl
xorl
test
jnp
push
adc
lret
push
sbb
push
in
sbb
shufps
mov
das
fsubrl
out
sub
sahf
adc
lock
test
aam
xor
insb
adc
adc
test
push
fistpll
lock
mov
hlt
mov
mov
inc
int3
xorb
imul
insb
mov
ret
lret
mov
push
aam
adc
aam
cld
int3
mov
cmp
add
dec
es
scas
jae
mov
lods
or
adc
push
loopne
xchg
push
outsb
fisubrl
jl
sarl
pop
dec
sub
subl
inc
mov
xchg
push
mov
pop
push
jecxz
loopne
mov
sub
mov
or
repnz
popf
dec
pusha
test
fistps
sub
mov
mov
mov
inc
lret
inc
stc
sar
xchg
cmc
ja
cwtl
xchg
inc
je
js
dec
aam
pushl
test
mov
sbb
xlat
repz
push
mov
or
out
cmp
pop
pushl
xchg
push
jle
xor
movsb
sub
and
xchg
jge
cli
pop
mov
sub
cmp
je
les
dec
lods
adc
push
pop
inc
dec
push
adc
sar
es
cmc
or
push
inc
xchg
sub
inc
push
mov
sbb
enter
fcmovnb
xor
push
sbbl
sbb
sbb
jb
jl
pusha
jae
mov
sbb
iret
add
stos
pop
push
daa
cmpsb
sub
rorb
sbb
scas
scas
sub
jmp
stos
push
cmp
out
sbb
sbb
xchg
mov
mov
js
xchg
mov
into
cs
test
mov
xor
movsl
mov
jo
mov
sbb
mov
loope
jmp
mov
cmp
jne
and
outsl
xor
push
dec
xlat
adc
sarb
bound
push
or
addb
rcrb
dec
xlat
mov
adc
push
add
sub
mov
dec
cmp
ljmp
mov
pop
in
pop
imul
shrb
cli
in
repz
roll
xchg
mov
iret
loopne
lea
pushf
ljmp
das
fsubs
call
xchg
xor
jbe
or
fists
scas
pusha
shrb
aad
xchg
jle
sahf
lret
hlt
lds
mov
mov
pop
dec
adc
cmp
xchg
pop
cmp
shr
cmpsb
daa
loopne
lcall
mov
sbb
outsl
sti
mov
dec
xchg
or
xchg
adcl
mov
jmp
sub
mov
and
repnz
push
mov
stos
or
out
pop
dec
mov
jb
outsl
mov
out
sbb
ljmp
add
push
push
mov
imul
ret
jo
push
mov
dec
cmp
and
adc
xchg
xor
push
cmp
in
out
vmwrite
stos
sub
test
lcall
fsubl
dec
js
movsl
lods
cmp
popa
jecxz
dec
xchg
int3
or
cli
and
mov
js
ljmp
ret
push
inc
xchg
dec
fs
pop
inc
xchg
inc
mov
mov
adc
stos
mov
repz
rcrl
es
sbb
jb
sbb
xor
jmp
into
add
outsb
dec
push
mov
arpl
nop
pop
mov
push
xchg
dec
push
sbb
stos
imul
mov
cwtl
outsb
js
lods
pop
dec
fst
data16
fcoml
jne
and
dec
and
popa
jmp
daa
loopne
subb
outsb
cmp
fbld
leave
aam
push
pop
cmp
adc
sbb
xchg
cmp
je
popa
mov
ljmp
cmpsb
sarb
cwtl
xor
push
xchg
or
scas
push
jmp
push
rcrl
cmp
adc
stos
jbe
xor
xor
jg
imul
mov
je
sub
sti
out
cld
dec
xorl
cmc
popa
xchg
adc
add
jbe
inc
jg
xchg
scas
je
aam
jl
lds
stos
fwait
cmp
js
xchg
xor
sahf
mov
xor
push
mov
movsl
cmp
ret
fistps
repnz
data16
in
adc
push
out
xchg
stos
std
fdivr
xchg
iret
ret
mov
or
lods
inc
xlat
sbbb
pop
mov
xchg
mov
sti
jecxz
cwtl
data16
cmp
or
jo
cmp
sbb
pop
or
xlat
sbb
js
mov
jge
sbb
mov
call
iret
int3
mov
cs
shll
int3
xchg
mulb
jle
jge
pop
and
cmp
xorl
mov
push
in
sbb
mov
scas
pop
popf
xchg
cmpsb
fdivl
inc
data16
xor
jmp
sbb
pop
ret
lcallw
pushf
loop
dec
inc
dec
fisttpll
outsl
sub
cmc
lods
sbb
cli
push
and
mov
fmull
pop
ljmp
dec
mov
aaa
fstl
rol
clc
and
fcoml
add
mov
mov
pushf
mov
pop
nop
das
addr16
negb
les
pop
inc
dec
mov
and
je
popa
add
cwtl
pop
cltd
insb
fnsetpm(287
mov
out
cld
xchg
ds
or
mov
dec
push
and
sbb
lock
stos
cmc
dec
push
dec
pop
xor
inc
or
add
fs
sbb
cwtl
loopne
add
xchg
dec
mov
repz
jle
lea
int
scas
lcall
das
jns
or
jb
add
push
shlb
xor
xchg
test
roll
sub
ja,pt
xor
xchg
jmp
xorl
jnp
jae
cmp
sahf
pop
das
int3
dec
xchg
scas
mov
or
xchg
mov
es
jp
enter
and
lret
ret
adc
and
cmp
fst
test
xchg
sahf
mov
dec
cli
aas
ljmp
mov
sbb
jg
movsb
shr
xor
rclb
push
iret
jno
into
icebp
inc
sbb
cs
stc
jge
sbb
adc
pop
cmpsl
mov
push
cs
mov
jb
lods
dec
and
dec
aaa
rclb
cli
cmc
test
gs
fwait
add
inc
pcmpeqd
xlat
imul
push
mov
insb
fisubs
cltd
lcall
pusha
scas
xor
js
mov
out
mov
test
mov
jno
in
push
cs
insb
push
jge
je
or
fs
stos
cwtl
adc
jmp
addr16
enter
aam
mov
inc
push
pop
xchg
mov
mov
jl
jl
xchg
in
fidivs
mov
inc
bound
mov
and
mov
roll
fsubp
dec
lds
aam
loope
fcomps
divb
cli
int
jno
or
adcl
lea
mov
jle
and
add
and
jg
es
and
mov
add
sub
out
repnz
inc
stos
iret
dec
push
imul
fadds
arpl
pop
movsl
fisubrl
inc
sub
aas
adc
test
xlat
imul
or
rol
add
inc
inc
add
fsubrl
dec
sbb
aad
int3
mov
xor
fcmovne
pop
addb
aas
adc
adc
inc
xorb
andl
mov
add
xor
movsb
aaa
adc
aas
adc
jg
insb
pop
stos
dec
flds
movsl
lahf
xor
popa
cld
orb
insb
add
xlat
jg
inc
in
rol
stos
mov
aam
rcl
cmp
push
push
jl
addr16
cmp
ljmp
sbb
xchg
jbe
jle
not
mov
pop
insl
push
popf
xor
ja
add
jns
xchg
js
cmp
aaa
adc
mov
mov
xchg
mov
sbbl
dec
xchg
fwait
sub
xor
pusha
push
rcl
sbb
xchg
cmp
inc
adc
enter
call
or
inc
sub
pop
stos
call
jns
iret
jbe
in
fidivrl
push
add
out
xor
jns
mov
add
fwait
out
repnz
shlb
loop
mov
sub
xlat
sbb
mov
ja
dec
outsl
dec
xchg
push
loope
into
cmc
mov
hlt
int3
jae
and
in
sbb
adc
mov
sbb
dec
fistpl
push
xor
popa
sti
gs
pop
inc
mov
add
je
mov
rcrl
rcrl
adc
xor
pop
call
test
pop
cmp
xchg
insl
cli
fsubl
mov
push
jbe
pop
cmp
aas
push
or
push
xor
cmp
shlb
inc
jge
xchg
mov
imul
and
mov
jp
lcall
out
mov
popa
xchg
nop
fwait
xchg
lods
jbe
mov
lahf
add
cmpsl
jo
xor
cmpb
std
xor
ss
dec
cmpsl
sub
pop
in
mov
adc
inc
inc
mov
add
rclb
adc
inc
stos
popa
add
mov
iret
imul
out
mov
sbb
push
clc
cmp
in
das
jle
push
or
jg
jge
fisttpl
ds
jge
pop
addl
jg
repnz
std
int3
ds
jae
pop
jno
mov
adc
lods
addr16
pushf
fsubs
cld
repz
sub
jns
jge
and
push
add
xor
fistps
inc
jb
into
mov
sbb
rolb
xchg
enter
mov
decb
sub
add
lods
push
jecxz
mov
mov
imul
mov
test
enter
test
imulb
movsb
icebp
cmpsl
stos
in
push
adc
xchg
dec
cld
or
cmp
mov
mov
sub
out
fidivs
xor
sbb
inc
push
gs
call
lea
xor
mov
popa
add
xchg
xchg
dec
xchg
out
jmp
jecxz
add
mov
into
in
fstps
das
push
push
jo
cmp
push
aaa
lock
adc
lret
sub
xchg
xchg
iret
mov
lods
pop
lret
xchg
dec
sub
nop
dec
cmp
lret
mov
xchg
jmp
ss
insb
and
mov
outsl
lea
sbbl
pop
out
jae
popf
mov
in
insl
mov
rcrl
lea
daa
std
pop
cltd
jmp
rcl
sbbb
or
push
pop
popf
sub
loopne
push
fists
sarb
push
mov
inc
or
jnp
dec
out
dec
pop
js
in
sbb
loop
cmp
mov
popf
xor
scas
out
stc
inc
adc
lcall
mov
into
mov
pop
shl
loope
lret
lret
mov
icebp
jge
and
adc
sbb
mov
sahf
push
ret
push
adc
and
insl
sbb
mov
popf
mov
dec
pop
pop
mov
jge
out
mov
dec
movsl
outsl
and
jle
cs
mov
and
loopne
add
dec
sbb
sbb
sub
gs
add
or
push
lods
loope
jmp
ja
jnp
ret
pushl
or
jge
sub
ljmp
jl
inc
fldl
shlb
bound
mov
mov
shrb
cmp
inc
xlat
cmc
adcb
jg
flds
dec
mov
loope
or
loope
lret
sub
and
push
loopne
inc
stos
cmp
push
mov
xchg
mov
jp
mov
fwait
mov
imul
sub
faddp
adc
jb
leave
jbe
cmp
test
cmpsl
stos
fs
jns
jbe
stos
mov
dec
jbe
jb
ds
das
iret
dec
cmpb
scas
or
inc
adc
or
mov
jg
insl
sbbl
je
xchg
mov
mov
mov
shll
xor
add
mov
or
leave
lcall
fidivrs
addb
mov
cs
enter
xchg
mov
icebp
cmp
push
fsubl
push
adc
sbb
loopne
aam
mov
jns
add
mov
jae
hlt
in
sub
xor
hlt
jl
cmpsb
and
in
mov
call
std
leave
shl
mov
mov
in
sbb
jne
sbb
push
xchg
ficoml
sub
cltd
xchg
loopne
jae
xchg
mov
xchg
leave
loope
xor
fidivl
mov
mov
cltd
fisubs
aad
sbb
dec
mov
or
call
xchg
mov
dec
inc
aam
inc
dec
outsb
jecxz
arpl
sub
sbb
adc
adc
jp
fidivl
inc
hlt
ds
repnz
aaa
mov
aam
xor
add
mov
popf
ljmp
mov
into
push
inc
popf
lahf
xchg
ret
mov
sbb
mov
or
fldt
cmp
push
dec
je
mov
mov
lret
cmc
xlat
fs
adc
mov
mov
movsl
jle
push
cmp
je
xchg
shr
push
xor
bound
mov
ficompl
pop
inc
idivb
mov
dec
adc
inc
mov
sub
xchg
mov
repnz
movsb
xchg
sarb
fisubl
outsl
xchg
xchg
pop
repz
mov
cwtl
loop
int3
cmp
sbb
add
pop
lds
mov
aam
int
repz
jg
mov
aas
out
xchg
xchg
mov
lds
push
push
or
mov
cmp
addr16
add
sbb
xchg
jp
rcll
nop
outsl
dec
xchg
adc
mulb
into
mov
sub
rcrl
mov
mov
sub
add
stos
jbe
jg,pn
xor
fdivrl
inc
xchg
cld
mov
lds
pop
dec
pop
push
lds
push
mov
daa
sub
push
and
cmpsl
pop
push
int
add
add
or
jns
and
dec
rolb
jg
push
sbb
insb
negb
mov
movsb
fimull
xchg
push
shl
cwtl
sbb
mov
mov
mov
add
test
sbb
pop
mov
pop
daa
cmp
push
lods
std
enter
jo
sub
data16
cmp
jo
push
xor
xchg
or
js
cmp
or
mov
js
and
cmpl
test
sub
aas
mov
shrl
iret
aad
dec
dec
les
lock
insb
pop
call
mov
inc
xchg
cltd
mov
lahf
jno
mov
pop
outsb
or
jge
inc
lea
aam
lods
pop
push
sub
pop
lahf
add
pop
out
ja
sbb
addb
jg
clc
cmp
cmpsl
jecxz
inc
pop
mov
jle
pop
sub
lcall
pop
mov
pop
jne
or
xchg
jmp
push
xchg
mov
or
lret
sub
and
and
icebp
xchg
xor
pushl
stc
adc
mov
xlat
pop
ljmp
out
out
data16
dec
cmpsb
adc
xchg
mov
adc
ja
imul
pop
push
or
cmp
test
mov
mov
xlat
mov
cmp
dec
xchg
sbb
sbbb
inc
int3
xchg
xchg
test
push
add
int3
outsl
pop
jae
adc
or
or
inc
xor
aam
std
arpl
push
mov
mov
fcomps
test
ljmp
lods
xorl
sub
pop
std
cli
icebp
nop
add
cltd
sub
les
jne
outsl
nop
hlt
and
sub
mov
ja
pop
test
sbb
gs
xor
enter
adc
repnz
jp
adc
mov
push
dec
es
pop
jecxz
pop
inc
xor
jno
cmp
repz
in
push
push
insb
cmp
pop
insb
sbb
nop
out
mov
mov
pusha
sbb
aas
ret
dec
lahf
sti
add
das
inc
test
sub
arpl
iret
fcmovnu
iret
roll
fstpl
mov
ljmp
imul
dec
ret
divl
mov
mov
xchg
or
sar
icebp
hlt
cmp
push
loopne
xor
data16
rcrb
jo
mov
pop
mov
and
xchg
clc
add
imul
nop
inc
leave
push
sahf
xchg
lods
mov
or
lods
ds
add
sti
in
jne
inc
dec
add
popf
sbb
ss
xchg
outsb
ret
push
rorl
cmpl
insb
test
mov
push
and
imul
xchg
push
ljmp
lods
lods
inc
mov
push
aam
sub
or
add
push
cmpsb
mov
test
js
sub
sub
mov
cmp
jae
mov
adc
inc
dec
lds
or
mov
lods
cmp
xchg
out
add
or
xor
and
into
insl
and
ret
and
hlt
fcmovu
ja
test
or
mov
stc
mov
stos
aas
mov
add
pop
xor
mov
jmp
js
mov
pop
push
xor
cmpsb
shrl
sarb
mov
stos
mov
mov
in
xchg
sbb
cmp
aam
dec
mov
adc
push
sub
or
or
dec
ja
adc
out
mov
fistps
shlb
mov
es
test
xchg
dec
cmc
inc
dec
sbb
mov
mov
push
dec
movsb
xor
adc
push
jmp
std
push
jge
nop
pop
add
pop
xor
mov
ret
arpl
jge
lret
fs
dec
push
cmp
sub
pop
and
cwtl
sbb
cmp
pop
dec
cmpsb
jnp
cld
jb
sti
push
test
pop
push
sub
add
xor
data16
leave
leave
or
jbe
imul
rclb
sub
dec
lret
loop
enter
or
pusha
stos
fcoms
out
sub
addr16
adc
inc
fmull
pop
orl
out
jnp
adc
sahf
sbb
shlb
out
lahf
in
mov
mov
jecxz
jmp
push
in
xchg
pop
push
inc
push
incb
add
cli
int3
or
adc
sub
imul
addb
adc
fadds
cltd
mov
stc
inc
sbb
push
les
push
ss
sahf
lcall
dec
clc
lods
dec
sbb
leave
add
adc
mov
mov
repz
sub
mov
in
pop
cmp
mov
mov
pusha
push
or
les
xchg
mov
sahf
pop
mov
cmp
xchg
test
push
adc
lret
mov
sub
inc
cmpsb
loopne
push
push
subb
aas
loopne
inc
adc
aad
nop
mov
cmpsl
mov
lea
or
and
sub
pushf
sbb
xor
add
mov
pop
stc
or
sbb
rolb
es
sbb
movsb
sbb
push
gs
cmp
gs
pop
divl
cmpsl
jg
mov
in
inc
and
or
mov
push
mov
mov
stos
imul
fisubrs
test
outsb
dec
fsts
fwait
lock
sbb
push
fldenv
mov
or
out
xor
stos
xor
in
clc
test
push
xor
loop
mov
mov
fisttpl
cmp
fstpl
cmpsb
xor
jno
fcoms
andl
or
pop
fstpl
pop
jg
push
ja
mov
sub
mov
pop
pop
cmp
push
repnz
mov
out
shlb
or
or
pop
lahf
mov
std
xor
cmp
test
sbb
ret
loop
xlat
push
pop
mov
sti
xchg
add
icebp
or
adc
mov
adc
loope
movsl
or
cli
pop
sbb
mov
mov
add
ljmp
push
outsl
sti
nop
cltd
fbstp
ret
fs
add
lea
jmp
jle
outsl
icebp
xor
xor
push
fsubrl
pop
mov
dec
ss
jmp
pop
adc
push
insb
mov
fcomi
xlat
in
push
bound
sarb
jl
and
cli
mov
icebp
push
aas
lcall
xchg
xchg
stos
fcoml
mov
test
sub
mov
cmp
addb
dec
add
push
std
sbb
add
cltd
out
cwtl
and
ret
and
add
inc
pop
imul
xchg
ret
je
inc
cli
sbb
loope
jb
fldl
xchg
fisttpl
xor
jb
xor
pusha
popf
das
push
mov
inc
fsubrl
adc
neg
or
mov
lock
imul
fs
xor
jne
adc
xchg
lea
pop
gs
outsb
mov
test
add
jge
lods
sbb
push
or
out
jae
mov
xor
pusha
or
or
in
xor
push
dec
dec
fwait
push
sub
in
mov
fimull
inc
cmp
or
pop
testb
int
outsl
inc
add
and
xchg
mov
sbb
pop
cmpsb
andb
ss
sub
pop
sbb
pop
out
mov
cmc
pop
mov
leave
stos
jmp
addb
fld
mov
flds
shl
sti
out
sub
mov
pop
nop
pop
cmpsb
jne
and
sub
lock
or
je
push
gs
pop
call
cwtl
outsb
mov
add
stc
dec
pop
rcrl
add
pop
aad
cmp
dec
ds
cmp
mov
rcll
inc
stos
repnz
cmp
int3
dec
stos
ret
mov
test
jbe
stc
cmpsb
mov
dec
lods
inc
mov
js
shlb
jle
inc
mov
ljmp
pop
xchg
gs
push
lds
or
jle
sub
push
mov
jle
stos
jle
aaa
rcll
dec
mov
loopne
xor
and
and
int3
jecxz
inc
and
rcll
mov
call
xchg
push
pop
inc
dec
cmpsb
leave
les
jo
mov
xchg
sub
loop
pushf
mov
call
fdivl
or
xor
mov
or
rcrb
xchg
lea
int3
sbb
fs
outsb
repz
jge
or
jae
xchg
lret
movsb
pop
pop
out
cltd
mov
mov
jmp
enter
mov
add
mov
nop
xor
jae
mov
jecxz
js
pop
jb
add
inc
outsb
test
movsl
enter
out
test
hlt
jbe
das
je
imul
add
mov
cmpsb
xor
mov
cmpsb
fxch
and
aam
sahf
fs
cmp
cmpsl
push
mov
test
sub
and
jbe
jmp
adc
repnz
gs
les
sub
xor
push
inc
xchg
mov
aam
lret
int
jns
xor
inc
fwait
or
mov
dec
push
fisubrl
les
push
mov
push
and
nop
int
dec
out
jo
push
pop
add
and
call
mov
jno
jo
push
pop
mov
xchg
loop
std
jmp
jb
movsb
sti
dec
sbb
pop
pop
jns
push
movsb
mov
lret
jmp
mov
call
and
testb
shl
inc
mov
or
ret
sub
inc
cmp
decb
push
imulb
or
call
ror
add
out
in
and
xchg
movsl
lret
jl
lock
sub
mov
cmp
cld
jmp
hlt
push
xchg
inc
pop
fistps
dec
or
outsb
adc
cmp
add
cld
dec
orl
mov
pop
in
in
ret
push
mov
adc
aam
mov
sbb
push
cwtl
out
fimuls
jge
fcomi
cmp
loope
jns
mov
aam
pushf
jb
xorl
dec
xor
xorl
out
fwait
insl
push
sbb
pop
loopne
push
sbb
clc
inc
dec
xchg
aaa
out
stos
inc
push
ss
mov
enter
xor
sub
mov
adc
pop
jbe
and
iret
jmp
adc
pop
call
stos
out
rol
enter
jns
mov
push
or
sbb
inc
sarb
mov
fisubrl
xlat
adc
imul
xchg
pop
sbb
sbb
bound
addl
mov
push
dec
dec
stos
add
gs
push
push
lea
pusha
gs
push
sub
inc
inc
mov
sbbb
iret
pop
lcall
dec
idivb
stc
add
cmpsl
mov
mov
hlt
cmc
cltd
in
test
insl
xor
inc
or
repnz
jns
aaa
imul
sbb
incl
jmp
cmc
pop
stos
test
fs
jecxz
jb
dec
sbb
enter
mov
jmp
pop
xchg
cmp
fwait
sub
xlat
rclb
stos
push
mov
pop
stos
and
out
test
mov
push
fsubs
pop
pop
add
nop
rolb
jle
mov
and
sbb
cld
dec
sbb
xchg
shrl
ja
mov
pushf
lock
popa
jmp
lcall
jb
xchg
sub
repz
lds
jmp
in
insb
xor
adc
cmp
fisubrl
mov
fisubrs
or
inc
push
aad
adc
in
inc
es
or
mov
mov
shrl
in
mulb
cmc
jb
out
add
adc
test
add
sbb
push
adc
dec
lods
mov
loope
lahf
adc
pushf
shll
xor
xchg
xchg
lods
add
lea
ds
cli
std
add
mov
xor
push
outsl
push
sar
inc
sti
stc
dec
std
lods
mov
pop
and
in
jne
dec
push
outsb
mov
idivl
data16
push
mov
int3
xchg
call
pop
mov
sbb
mov
sbb
sbb
and
test
lea
imul
cs
jecxz
xchg
jecxz
lds
add
ss
cli
push
lahf
jne
cmpsl
cmp
push
pusha
xchg
push
call
aam
xchg
gs
out
inc
jb
jnp
pop
sbb
mov
sub
add
imul
movsl
cmp
lret
xchg
jl
jno
add
mov
stc
dec
and
dec
cmp
stos
xlat
dec
mov
frstor
sbb
or
adc
mov
xor
or
stos
mov
sbb
test
shlb
add
out
jae
cmp
test
inc
sub
dec
mov
ds
loop
adc
push
popa
out
cmpsb
outsl
pushl
fnstcw
add
push
dec
xchg
shrl
ja
fstl
or
test
pop
fisttpl
adc
sti
cmp
cltd
xor
sbb
fcoml
sbb
bound
hlt
dec
mov
or
jecxz
imul
roll
or
xchg
xchg
jne
aas
jg
cmp
in
insb
aas
fwait
out
dec
mov
outsl
inc
jl
or
ds
push
cmp
mov
and
xchg
movsb
or
orl
pop
dec
cmp
ror
cwtl
push
mov
cltd
call
addr16
fsubrs
stos
cmpsb
and
inc
mov
and
cmp
xor
outsl
cmc
dec
sbbl
jns
mov
mov
inc
outsl
ds
adc
popa
mov
and
lods
cmc
sahf
sti
jne
mov
mov
jge
mov
cmp
inc
insl
or
lret
push
pop
adc
push
insl
cltd
gs
inc
repz
mov
jg
cld
adc
adc
lret
fimull
test
xchg
mov
mov
nop
dec
sti
sub
pushf
fistpl
test
fidivs
imul
lds
jbe
xchg
pop
out
or
jbe
ss
mov
out
sti
xor
out
lcall
xor
andl
cmp
add
repz
out
insl
mov
pop
and
adc
rolb
pop
dec
add
xor
fisubs
btc
fists
push
cltd
mov
lds
or
mov
das
int3
mov
mov
jno
shll
mov
xchg
mov
jo
out
xor
les
mov
add
dec
aam
adc
andl
push
dec
daa
push
fistpl
fs
test
pop
fadd
sbb
lds
adc
push
cli
ret
test
repnz
sub
xor
js
jmp
sub
jno
outsb
rcl
out
push
push
inc
sbb
sub
stc
nop
ret
cmp
andb
mov
push
jnp
fcomps
pop
mov
cltd
inc
push
and
movsb
xchg
lock
jb
lcall
push
jb
sub
je
sub
stos
aam
out
scas
filds
int3
ss
push
outsl
mov
mov
dec
loop
cmc
pop
sti
jg
loope
shr
sbbl
insl
add
push
xor
jo
sti
incl
cmpl
jb
stc
dec
dec
arpl
add
cmpsb
jae
divps
cmp
imul
push
add
movsl
dec
ljmp
mov
pop
flds
push
lcall
pop
in
pusha
outsb
adc
popa
add
jo
sub
pop
mov
dec
jo
jge
mov
fiaddl
into
sbb
inc
clc
out
cmp
jnp
aas
or
sarb
jae
inc
cmp
test
in
push
inc
mov
mov
movb
lds
arpl
mov
popa
adc
adc
pop
sub
sbb
orl
pop
sbb
inc
mov
into
inc
mov
cwtl
adcl
cmpsl
sbb
jl
mov
popa
lods
ror
aaa
insl
lods
cmp
cmp
inc
fwait
pop
es
add
mov
jo
aam
icebp
repz
iret
pop
pop
daa
idivb
mov
imul
and
fwait
lret
decb
add
clc
xchg
aad
add
cld
or
dec
imul
dec
mov
or
jb
arpl
pop
jno
jbe
jmp
movsl
shl
push
jmp
lcall
xchg
scas
dec
pop
or
jle
lcall
int3
fstpl
sahf
pop
mov
pop
shlb
xchg
push
push
fsubl
inc
fmuls
lahf
jb
sahf
loopne
mov
jbe
insb
loop
add
mov
pop
lods
cmp
sbb
addb
ret
pop
out
loop
lea
add
shll
xchg
cmp
dec
dec
repz
push
mov
push
or
inc
lock
jbe
in
outsl
lods
lods
test
xor
ss
xchg
or
js
fwait
cmp
inc
xchg
or
inc
jge
daa
dec
xchg
push
add
outsl
and
ja
cmp
jg
push
and
mov
sub
add
test
xlat
jae
cmp
pusha
jno
lcall
adc
or
in
outsb
ss
fsubrs
sub
test
xchg
sub
xor
sub
lahf
aas
fcomps
cmp
jb
ffreep
clc
or
gs
sahf
dec
cmp
lret
pop
hlt
arpl
into
je
cmp
outsl
rolb
xchg
mov
mov
xchg
gs
mov
psubsb
in
mov
ljmp
enter
and
xchg
add
add
inc
cmp
cltd
pop
ficomps
cmp
lds
fdivrl
push
jae
sbb
fnstcw
or
shlb
div
int3
in
out
and
mov
ss
adc
xchg
xchg
cmp
clc
in
xor
pop
mov
lret
cli
arpl
call
pop
rep
push
mov
xchg
mov
iret
mov
test
repnz
pop
gs
jno
les
fs
call
xor
and
dec
jnp
mov
sbb
and
cmp
mov
addr16
mov
pop
xchg
pop
mov
sub
ret
or
dec
xor
loopne
cmp
mov
sbb
push
inc
cli
pop
add
add
xchg
dec
add
sbb
mov
jns
push
repz
iret
mov
push
insb
push
add
cmp
iret
mov
fbld
aas
jp
ja
out
dec
jns
add
mov
cmc
hlt
push
inc
cmc
xchg
push
stc
add
ret
repz
mov
negb
mov
cli
cmpsb
rolb
arpl
inc
jl
sub
out
into
adc
push
sbb
jl
lret
dec
pop
shlb
fwait
mov
in
pop
jp
mov
das
jno
int3
inc
push
mov
pop
jne
cli
dec
cltd
pop
std
mov
add
mov
jbe
movsl
fs
inc
ret
jae
sub
call
lret
addl
decl
loopne
mov
sbb
sti
js
xchg
xor
pusha
jne
daa
mov
xchg
jl
push
xchg
cmp
out
ds
inc
test
in
enter
pop
jl
in
out
ljmp
fiaddl
lods
jg
mov
sub
or
loop
int
pop
push
fbstp
rcrb
cmp
sub
fdivs
dec
out
dec
scas
popf
dec
and
mov
mov
push
into
jg
dec
sub
ljmp
fmul
add
or
add
xchg
and
sub
mov
cmp
jle
movsb
push
mov
push
cmp
push
adc
into
in
mov
xor
les
arpl
mov
cs
and
repz
sub
fsubl
aas
jecxz
scas
fildll
jmp
push
mov
movsl
std
shl
sbb
push
stos
pop
aad
or
into
xor
loop
fwait
mov
js
and
mov
cmpsl
test
flds
sub
adc
jns
jecxz
stos
mov
mov
insl
insb
push
push
shrl
scas
pop
jbe
xor
mov
mov
pop
sub
xchg
popf
jle
xor
orl
xchg
cltd
dec
cld
imul
std
xchg
pop
cmc
and
addl
sbb
push
push
add
add
ja
pop
xor
sbb
push
cld
mov
pop
jecxz
inc
movsl
jmp
mov
scas
insb
xchg
push
test
sahf
gs
or
call
jbe
mov
mov
push
aas
dec
xchg
mov
lods
pop
mov
mov
fwait
es
js
nop
xlat
lcall
or
sbb
insl
into
popf
enter
mov
mov
sbb
sbb
mov
aad
repz
gs
mov
push
sbb
lds
pop
add
outsb
cmpsl
pop
mov
std
dec
sub
and
test
adc
push
aad
int
xchg
jge
mov
cli
test
xor
fs
jle
andl
pop
inc
loope
mov
icebp
aaa
and
or
pop
or
stc
and
repnz
push
dec
in
mov
popf
jbe
das
lea
push
mov
jns,pn
cmp
mov
pop
jne
mov
mov
jg
mov
lcall
jl
or
mov
imul
mov
sub
xor
stc
testl
lock
movsl
pop
outsb
pop
xor
cmp
hlt
xor
out
pop
imul
sbb
pop
idiv
sub
sti
push
aas
mov
out
insb
mov
push
mov
lods
fdivrs
xor
xor
mov
imulb
mov
mov
jecxz
stc
jge
push
and
push
add
int3
sbb
pop
test
jae
adc
jo
mov
mov
jp
sbb
mov
jno
iret
mov
sbb
add
adc
out
add
enter
sub
lret
inc
mov
into
push
sub
lret
mov
mov
movsb
sbb
int
and
scas
sub
sub
push
dec
sub
sbbl
pop
cmp
movsb
aaa
xchg
or
pop
push
push
mov
push
jbe
jnp
cmp
les
or
mov
jns
shrl
xlat
xlat
insl
xorl
inc
test
and
shl
mov
lds
sub
push
push
mov
sub
jmp
add
pushf
sbb
ja
loope
pusha
sub
dec
out
pop
clc
es
mov
add
mov
shr
xchg
int3
cmpsl
rcrl
scas
aas
loopne
loope
fnsave
or
pop
dec
scas
mov
in
fidivrl
scas
sub
and
fiaddl
xchg
mov
sub
aam
pushf
inc
fisttps
push
mov
xor
ljmp
outsl
adc
dec
dec
cmpsb
pop
fs
and
pop
loopne
je
jae
adc
pop
jbe
test
or
sub
inc
ds
testb
das
mov
mov
sub
sub
pop
pusha
push
adc
mov
cwtl
mov
movsb
mov
fcoms
fildl
mov
out
push
out
ljmp
mov
dec
push
add
pushf
loopne
mov
dec
out
cltd
mov
lret
pop
scas
xchg
sub
orl
repz
lods
cmpl
mov
pusha
inc
xchg
stos
xor
and
sbb
add
cmp
sub
lret
pop
divb
out
add
in
xor
fcomps
push
cwtl
or
or
inc
jg
jg
xor
imul
add
cld
xchg
lahf
mov
lds
pop
lea
test
mov
mov
add
add
test
pop
mov
roll
inc
lds
mulb
and
cs
int
addr16
rcll
xlat
enter
sub
andl
call
sbb
shl
in
out
loop
xchg
mov
sbb
aad
and
sub
popf
loope
mov
mov
mov
mov
loope
mov
sbb
mov
and
lds
cltd
ds
sbb
push
add
sub
jle
xchg
outsb
faddl
cmc
mov
cmp
pop
int
adc
mov
cmp
push
subb
test
shl
mov
popa
pusha
rorb
imul
push
jbe
jae
lcall
pop
insl
and
pop
or
or
jbe
loope
fimuls
stos
shl
clc
pop
jp
filds
lea
je
scas
cld
mov
les
mov
movsb
cmp
push
xor
loop
jg
andb
idivl
xchg
pop
mov
sti
mov
mov
xchg
add
adc
push
dec
add
inc
or
mov
shll
xor
sbb
cld
lods
repz
dec
addr16
sbb
loope
jecxz
pushf
jb
adc
add
lds
aas
in
jg
lds
ss
mov
aaa
xor
and
in
xchg
adc
xor
mov
xchg
and
jge
out
mov
test
cmp
out
lahf
sub
push
cs
cwtl
adc
push
cmc
mov
out
fisttpl
inc
xchg
cld
push
xlat
inc
arpl
into
out
jno
int
inc
cmp
movsl
das
dec
dec
mov
mov
dec
das
push
call
push
push
adc
or
cmp
fdivl
hlt
pop
jge
test
jbe
mov
fiadds
mov
inc
stos
in
gs
jl
mov
cli
push
jbe
cs
cli
lret
or
push
stos
cmp
mov
mov
in
push
std
pop
mov
mov
inc
ret
ds
jge
cli
mov
push
out
cld
pushf
pop
push
jns
adc
inc
cli
fcmovu
or
push
sub
sbb
adc
iret
lods
jb
adc
int
push
ja
pusha
repnz
mov
cmpsl
add
fmull
add
or
jns
icebp
lret
sub
out
insl
cld
and
push
mov
mov
jae
sbb
fisubrl
dec
adc
loope
popf
mov
pop
paddd
or
shrl
or
xchg
stos
test
inc
mov
aad
xchg
cmp
sub
mov
imulb
push
mov
fabs
xor
jmp
or
inc
cld
data16
mov
adc
push
fcoml
jnp
dec
mov
xor
mov
or
xchg
and
movsl
mov
int3
loopne
or
sbb
shr
into
push
sbb
jo
sti
cmp
loope
call
int3
adc
ror
ljmp
and
xchg
xchg
jge
rcrl
mov
and
ret
in
sahf
inc
add
push
push
cld
xor
sarl
xor
lock
lea
leave
push
dec
je
sbb
fnstsw
bound
fadd
repnz
or
add
jb,pt
shlb
loopne
popf
pop
push
lahf
pop
xor
push
lds
sbbb
jne
and
push
xchg
inc
cmpsl
pop
sti
mov
xlat
jnp
cmc
jg
mov
mov
jmp
lret
mov
push
rolb
sahf
dec
fildl
add
jl
cmc
rolb
sbb
xchg
cmp
cmp
lret
lahf
pushf
sbb
jno
cwtl
mov
pushf
ljmp
das
adc
adc
roll
xchg
mov
xchg
dec
dec
inc
xor
pop
movsl
lcall
ret
sahf
testb
popa
shll
out
jne
cmp
dec
pop
in
cli
sub
mov
enter
lahf
and
cld
lret
push
es
mov
xchg
xchg
jmp
fwait
and
mov
outsb
test
pusha
xor
push
add
push
fisttps
mov
lret
and
or
mov
adc
ret
das
push
and
pop
sub
iret
jmp
xchg
lods
inc
outsl
jo
adc
fcomps
bound
sub
iret
jl
xor
fwait
and
std
and
lds
cmp
sahf
int3
mov
movsl
loop
sbb
mov
dec
cmp
jle
js
out
into
fisttpl
cmpb
sarl
inc
in
in
adc
sahf
icebp
cwtl
and
dec
mov
dec
mov
in
roll
cli
scas
mov
pop
mov
fnstsw
xchg
mov
push
sar
inc
or
lss
push
popa
xor
int
ret
in
stc
hlt
xor
push
jno
into
pop
pushf
cmc
int3
jne
pop
push
aaa
cwtl
mov
call
pop
sahf
cmp
fisubrl
fwait
mov
push
fadds
addr16
and
insl
inc
les
adc
hlt
mov
sub
mov
imull
filds
cmp
cs
jo
mov
ja
add
push
mov
or
pop
mov
icebp
mov
or
and
jecxz
cmp
addb
dec
pop
cmp
xor
popa
pop
addb
xchg
ret
shrb
or
mov
push
sub
mov
or
fisubrs
xchg
jp
inc
adc
xchg
mov
or
sbb
dec
mov
dec
or
jge
adc
movsl
enter
lods
dec
add
shlb
sub
dec
push
mov
pop
inc
shlb
les
xor
mov
mov
out
xor
sub
pushf
xchg
lcall
icebp
pop
test
xchg
push
sub
mov
add
int3
xchg
jle
push
push
mov
ljmp
sahf
xchg
jge
pushf
mov
pop
test
or
adc
adc
cmp
adc
pop
sub
mov
xchg
fcomi
cli
ss
int3
sbb
popf
pop
icebp
sahf
xor
add
roll
cmpsl
adc
inc
mov
jns
ljmp
push
mov
xor
insl
ret
and
and
push
sub
mov
xor
mov
push
imul
icebp
aam
stos
and
stc
test
rorl
fnstenv
push
adc
dec
inc
dec
xor
adc
outsl
cmp
pusha
cmovle
cld
fistl
mov
push
lcall
outsb
add
push
mov
mov
ret
push
jne
imul
into
orb
cmp
add
mov
and
jbe
nop
sahf
pop
insb
fsubrp
arpl
jmp
fdivrs
stos
jo
fcompl
add
out
xchg
inc
loopne
imul
iret
movsl
pop
push
lds
cmp
divb
mov
in
pushf
fwait
cmp
loop
scas
push
pop
cmpsl
scas
dec
popf
push
mov
mov
xchg
enter
push
imul
cld
andl
dec
xor
ja
sub
pop
inc
ss
fs
and
loope
mov
loop
adc
sbb
pushf
in
sbbl
pushf
pop
clc
xchg
repz
dec
fdivl
add
push
orb
mov
mov
pop
or
xor
push
mov
repz
fsubs
mov
pusha
jno
outsl
mov
lock
jo
subb
dec
jbe
repnz
fmul
repz
repnz
jmp
xchg
add
and
mov
push
and
push
jmp
xor
lods
les
and
es
dec
out
ds
dec
sub
mov
mov
cmp
cmp
test
and
push
fsubrs
shrb
mov
movsb
out
insl
outsb
mov
and
jp
mov
rcr
data16
test
jmp
inc
loop
mov
pop
sbb
cmpsl
imul
fcoms
adc
aaa
mov
mov
rcrl
jp
xchg
in
lods
push
mov
inc
into
in
mov
xchg
iret
mov
adc
and
mov
pushf
adc
or
cmc
sub
ds
dec
fidivrl
mov
jle,pt
popa
iret
into
outsl
cmp
js
loope
mov
jmp
test
mov
or
aad
pop
jnp
bound
inc
adc
xchg
ret
movsb
imul
in
push
js
pop
sbb
push
mov
and
imul
mov
out
in
das
sti
cli
fs
xchg
xchg
mov
mov
loope
push
xor
sbb
mov
imul
lods
loopne
pop
push
jo
sbbl
push
pop
dec
xchg
cld
out
jl
data16
jmp
jmp
push
jo
xchg
jg
enter
adc
adc
notl
jo
loop
popf
jnp
inc
cmp
mov
rorb
mov
call
push
in
jle
scas
test
sbbb
sub
les
mov
cmpl
cmp
sbb
idivb
xor
push
ja
mov
outsb
inc
divl
dec
imul
loope
mov
adc
pop
and
mov
pop
jb
cltd
jge
fbstp
sbb
loope
cmp
and
data16
addb
rcrb
lcall
lcall
mov
repnz
jecxz
xorb
inc
jb
mov
xor
add
lcall
insl
cmp
aad
sti
xchg
call
push
and
jecxz
rolb
xor
push
dec
sub
sbb
xlat
test
mov
sahf
push
or
loop
sbb
cltd
mov
pop
fdivl
stos
imul
mov
fisubl
mov
outsb
add
jg
into
insb
push
int
aas
mov
mov
jg
stos
inc
fiaddl
faddp
mulb
out
mov
andb
int3
iret
roll
cli
test
jle
sub
adc
int
push
loop
lods
call
or
and
cld
and
jecxz
mov
dec
adc
std
stos
sub
jnp
inc
push
mov
jns
jg
icebp
loop
add
loop
jbe
insl
lret
or
jno
mov
xchg
push
bound
clc
and
mov
add
in
mov
mov
xor
out
push
nop
xor
sub
add
out
xor
ljmp
dec
rorb
popa
ror
xchg
notl
inc
call
mov
clc
inc
fists
stos
cmp
fildll
xchg
jge
hlt
cs
repnz
addr16
dec
dec
clc
jp
sub
mov
loope
cmp
sub
add
fbld
aad
mov
sbb
push
add
scas
das
dec
and
xor
and
fs
out
inc
mov
lods
push
inc
test
imul
cltd
add
loopne
movsl
or
jne
inc
popfw
adc
mov
fnstcw
pop
mov
rorb
mov
push
inc
mov
popf
mov
pop
xchg
mov
push
sub
into
cmp
pop
pop
and
js
mov
jmp
shrl
jns
pop
test
lods
cmp
insl
jecxz
movsb
in
jb
push
xor
dec
inc
push
cmpsb
or
xchg
aam
mov
push
in
xlat
in
push
and
sar
mov
lea
adc
jle
out
jmp
jbe
pop
jl
mov
rclb
test
xchg
insb
lret
test
add
cmp
mov
mov
xchg
inc
mov
cmp
or
es
cwtl
xchg
lea
or
jo
mov
xchg
lcall
mov
clc
scas
xchg
inc
aaa
lahf
cmp
fmul
imul
cld
jo
xchg
cmp
ss
ss
xchg
xor
lcall
xchg
or
lret
xor
lea
inc
jbe
stos
lahf
cli
jmp
cmp
aad
pop
pop
fwait
push
and
push
dec
into
mov
mov
negl
push
shlb
jne
pop
or
cltd
push
jge
push
je
testb
cmp
and
cmp
inc
push
jae
lods
xor
sub
dec
lcall
fidivs
iret
add
mov
shlb
jno
imul
sbb
sub
out
mov
mov
mov
je
rcrb
fstpt
fistl
jmp
add
pop
enter
inc
hlt
mov
outsb
testb
xchg
jne
sahf
jo
negl
pop
push
gs
jo
pop
cmp
xor
mov
cmp
adc
outsl
lret
push
lock
imul
sbb
inc
enter
sets
push
fidivl
and
jmp
add
add
jmp
fidivs
inc
les
loope
dec
add
mov
shrb
mov
fildl
leave
data16
int
mov
inc
inc
add
movsb
xchg
data16
add
sub
iret
lret
fdiv
in
add
sub
pop
jge
popa
lock
mov
dec
push
jns
and
fsubrl
cmp
int3
mov
pop
iret
subl
je
aam
or
bound
pop
cs
xchg
jmp
jp
icebp
mov
mov
loopne
and
inc
lods
cmp
inc
jbe
popf
testb
add
inc
fnstcw
aas
or
outsl
out
aam
and
push
inc
pop
loop
xchg
or
iret
addr16
or
mov
pop
cmp
mov
out
jl
mov
pop
fsubs
aas
addl
pop
pop
je
adc
out
jnp
add
outsb
inc
pop
mov
cwtl
push
jno
lcall
js
cmpsb
mov
das
dec
dec
aas
or
cli
sub
test
into
rcl
dec
mov
int3
scas
stc
adc
jl
mov
push
push
cmp
xor
inc
mov
xchg
sbb
call
js
cmc
test
mov
and
outsl
fscale
adc
dec
and
stc
leave
repnz
push
js
mov
fwait
repnz
enter
inc
jg
jmp
es
stos
xchg
pop
mov
aaa
inc
cltd
pushf
cwtl
jg
mov
sar
mov
cmpsb
pusha
and
pop
mov
test
mov
fsts
loope
pop
fucomp
dec
mov
xlat
stos
or
and
icebp
rcr
daa
or
adc
mov
jbe
cmpsl
dec
sbb
push
imul
leave
adc
popw
jge
push
jnp
jae
lcall
stc
xor
sarb
adc
gs
xor
jb
push
lcall
fisttps
mov
cs
sub
pop
sub
sbb
in
out
jp
icebp
push
loop
jle
das
mov
subl
hlt
popf
or
add
mov
clc
adc
aaa
or
test
in
movsb
mov
movsb
mov
std
jmp
mov
and
jne
push
add
pop
int
stos
cmp
negb
mov
jecxz
es
lret
mov
jne
adc
mov
mov
fcmovnb
push
xor
psubq
cmp
mov
fucom
ficomps
inc
sbbb
jl
inc
test
mov
and
movsl
out
xchg
xor
fsubs
jmp
inc
lds
add
mov
insb
push
jnp
pop
pop
inc
test
dec
mov
sbb
pop
sbb
into
adc
push
dec
mov
mov
push
adc
std
or
loope
jnp
shlb
movups
roll
icebp
sbb
iret
daa
notb
pop
sbb
dec
lret
repz
test
or
ficompl
cltd
je
ds
xchg
sub
bound
fwait
ret
int3
sbb
add
pop
mov
ja
inc
and
lods
pop
pusha
jnp
mov
xchg
outsb
fcoml
std
lret
negl
inc
call
lahf
jle
xchg
adc
and
cmpsb
es
in
push
int
mov
mov
sahf
divl
xor
mov
push
mov
stos
loopne
fs
daa
inc
xchg
mov
push
mov
push
xor
test
sbb
pop
dec
xor
shr
cwtl
cmc
fisttpll
mov
dec
cmpsb
stos
out
mov
push
movsb
mov
cmc
sub
std
xor
icebp
insl
push
gs
shr
jge
jp
aaa
mov
or
xor
popf
shlb
sti
sub
test
jl
xchg
mov
dec
push
shlb
push
cmp
imul
test
or
jle
mov
mov
int3
sti
xchg
xor
neg
out
jecxz
xchg
cwtl
dec
push
mov
adc
and
dec
mulb
aad
aaa
divb
insl
xor
pop
adc
cmp
mov
fwait
mov
jo
inc
dec
adc
int3
mov
and
loop
sub
jb
mov
js
mov
aam
loop
in
mov
addb
leave
ds
dec
pop
push
xchg
cmp
pop
popa
xor
mov
out
adc
mov
stos
cmp
adc
rcll
pushf
call
xor
sbb
xlat
cmp
adc
fimuls
cmp
xchg
pop
or
adc
hlt
popf
mov
adc
addr16
lcall
push
cwtl
adc
ret
stc
push
mov
push
jno
add
imul
pop
pop
push
outsl
or
and
mov
add
mov
ret
imul
aad
xor
xor
subb
out
mov
mov
xor
dec
popf
xor
sbb
int
es
mov
fwait
xchg
imul
xor
add
pushl
movsb
lea
sbb
pop
pop
lea
push
loope
pop
mov
inc
cltd
data16
fcomps
fidivl
imul
mov
test
aaa
push
pop
inc
cmp
sbb
data16
push
pop
cmpsl
lahf
cmpsb
je
xor
inc
lahf
sarb
aas
push
dec
testl
scas
nop
les
and
shl
sub
xor
iret
fwait
pop
xor
insb
out
add
jns
push
jbe
cmc
push
mov
test
inc
cmp
lods
addb
stos
cli
add
in
sti
pop
jno
mov
sbb
jo
jo
jae
out
push
mov
jno
and
mov
xlat
ja
sbb
jb
rcll
lods
stc
cld
mov
sbb
in
push
lods
popf
adc
aaa
mov
loope
push
fwait
cmpsl
jnp
fimuls
lods
mov
fwait
or
aam
or
mov
pushf
ret
push
cmp
shlb
add
mov
push
notb
int
lock
popf
std
fidivs
push
fs
js
lret
xor
mov
xchg
call
rorl
adc
jmp
or
test
inc
loope
jns
pop
pusha
push
jecxz
cwtl
mov
sarb
inc
icebp
sub
sbb
jne
xor
ret
push
mov
adc
aas
sbb
jg
fwait
mov
mov
out
sete
and
and
xchg
pop
sbbb
and
or
mov
xchg
cmc
mov
daa
mov
shlb
sarl
and
test
cmp
outsb
enter
xlat
mov
push
dec
sub
or
mov
mov
pop
dec
fxch
mov
cmpsb
jbe
xchg
fisttpl
enter
cmp
adc
repz
pop
sub
sahf
xorl
inc
jno
insb
shlb
xor
dec
or
cltd
jg
cmp
repz
stos
mov
mov
dec
js
fmull
xchg
mov
xor
mov
cmp
ret
xor
sbbb
push
jns
aad
sbb
js
loopne
jl
cwtl
nop
in
fldcw
outsl
orl
es
push
repnz
nop
scas
insb
insb
mov
mov
enter
fnsave
loopne
outsb
xchg
xchg
pop
push
js
sub
into
or
lock
daa
or
pop
sbb
mov
or
int3
dec
xchg
arpl
xchg
pop
mov
jp
sbb
sahf
mov
addr16
sub
fiaddl
lret
addr16
jge
jae
push
and
push
pop
out
je
cmp
adc
push
adc
loop
add
movsb
mov
daa
popf
ficomps
enter
and
jnp
test
dec
sub
mov
rcl
cwtl
dec
push
sub
pop
popa
mov
sbb
fstl
outsl
and
pop
jl
inc
or
mov
sub
js
sub
xchg
mov
mov
xor
lods
mov
cmp
lods
popf
ret
dec
push
test
sbb
mov
daa
jnp
add
bound
dec
popa
xor
mov
sub
pop
popa
jg
jecxz
jecxz
test
cmpsl
dec
xchg
imul
stc
mov
fwait
fs
lock
inc
mov
mov
push
and
lea
fildl
adc
popa
mov
pop
sub
pop
cld
dec
mov
xchg
add
lcall
jo
xchg
insb
sub
sub
std
sbbb
sysret
nop
adc
xchg
jo
call
or
cmpl
je
jle
ljmp
mov
mov
mov
mov
add
mov
xor
aam
inc
jo
dec
repnz
dec
mov
hlt
adc
or
dec
mov
xlat
or
mov
dec
pop
icebp
pop
aaa
sub
cmpl
mov
pop
fcmovb
xchg
or
dec
in
fistpl
out
cmp
sub
cltd
add
hlt
scas
or
xor
inc
push
or
arpl
shlb
pop
pop
xchg
add
pop
insb
bound
pop
fimuls
inc
popf
daa
jae
pop
dec
pop
das
inc
xchg
adc
push
inc
in
out
mov
inc
pop
cmp
ljmp
and
xchg
ret
out
fmull
test
add
test
mov
leave
jle
shlb
icebp
jmp
xchg
ds
ret
xchg
addr16
icebp
mov
lock
and
stos
xchg
sub
dec
xchg
mov
ret
mov
pop
dec
flds
sti
and
push
ja
or
comiss
dec
clc
sbb
shlb
jb
xlat
pop
sub
jg
or
mov
test
lods
adc
inc
jg
mov
stos
into
lahf
and
push
clc
std
xchg
addr16
xchg
lcall
inc
faddp
cwtl
test
loope,pt
inc
ljmp
push
stc
sub
xchg
xchg
mov
fwait
repz
sub
andl
cmp
icebp
jo
mov
icebp
mov
lea
lods
pushf
dec
popf
ret
push
hlt
insl
mov
pop
cli
imul
jnp
mov
lods
cmp
imul
mov
bound
fsts
mov
gs
daa
icebp
and
fstl
sub
xor
inc
jecxz
mov
push
daa
mov
and
push
out
data16
or
lret
and
mov
js
xchg
push
dec
arpl
push
pop
or
loopne
test
test
jp
stos
inc
aas
andl
movsl
jbe
push
mov
jne
pop
in
hlt
pop
int3
enter
insb
js
mov
xchg
movlps
in
and
or
jns
and
inc
and
aam
ror
pop
mov
or
or
testb
clc
cmp
leave
and
insb
push
push
and
add
sub
int3
xor
cmp
mov
add
loope
or
call
sub
push
dec
in
jne
stos
pushw
bound
bound
mov
xor
shrb
rcrl
aam
mov
mov
not
inc
imul
cmc
push
push
push
stos
pop
xchg
add
pop
bnd
stos
ljmp
out
push
mov
push
lods
mov
xchg
inc
mov
ja
adc
fidivs
xchg
dec
mov
push
inc
mov
jb
cmpsb
scas
xchg
in
mov
and
jae
jmp
sbb
ret
out
inc
add
inc
inc
pop
faddl
clc
js
jbe
cmp
out
pop
lock
std
out
mov
ret
jg
adc
and
and
pop
cmp
ja
les
cmpsb
cmp
sbb
js
jp
mov
pop
mov
or
rcll
fdiv
mov
hlt
push
les
ret
in
in
mov
arpl
mov
lods
jmp
dec
xor
add
push
stos
dec
daa
enter
jmp
adc
mov
fwait
mov
jle
push
cmp
add
jbe
xor
dec
sti
call
scas
hlt
mov
inc
jge
cmp
pop
imul
and
clc
rorb
rcl
dec
push
push
add
cmp
and
pop
cld
pop
xchg
dec
lcall
inc
lods
mov
repnz
jmp
or
pop
aaa
xchg
fildll
or
pop
hlt
std
lds
in
jne
push
and
push
mov
push
test
push
inc
and
mov
dec
arpl
jl
or
das
pop
imul
push
xchg
push
push
mov
lret
pop
nop
inc
lds
mov
xchg
sbb
push
jecxz
mov
push
lock
imul
push
daa
fwait
shlb
outsb
mov
push
sti
sbb
stos
sbb
mov
adc
iret
stos
xchg
mov
outsb
cwtl
jns
mov
scas
aaa
jp
out
mov
jb
outsb
js
sbb
cmp
dec
xchg
cmp
stos
xor
jmp
or
pop
aas
push
cmp
imul
daa
pusha
outsl
call
xchg
stos
into
cmp
dec
jl
add
sbb
in
sbb
or
lods
rclb
push
rcr
js
push
cli
dec
jle
dec
inc
lea
inc
or
cld
iret
lds
outsb
test
stc
and
cs
and
sub
mov
xor
test
test
pop
cwtl
and
jo
cli
cmp
hlt
out
xacquire
out
jnp
cmp
ficoml
cmp
negl
mov
pop
enter
fsts
ja
into
in
pop
cmp
mov
adc
imul
fisttps
xor
outsb
lea
xchg
sbb
pop
push
mov
mov
lahf
push
mov
xchg
cli
mov
push
dec
xchg
int
cmpsl
ja
fiadds
pop
arpl
or
xor
adc
test
test
sub
sbb
mov
xor
lock
xor
dec
outsb
push
lea
mov
add
jp
xchg
shr
jle
sbb
jp
lret
lret
jecxz
clc
and
bound
out
pop
inc
ss
pop
ja
je
mov
sub
mov
adc
subb
in
push
sbb
gs
mov
cmpsb
xchg
xorb
inc
daa
in
add
sbb
mov
mov
dec
or
addb
xor
mov
cmp
or
ljmp
dec
clc
fcomps
gs
mov
aad
jb
jno
cmp
xchg
add
jle
pop
xchg
fidivs
xor
inc
clc
pop
xlat
mov
mov
bnd
mov
js
or
cmc
lcall
jo
cmp
mov
adc
pop
mov
in
or
xchg
xor
aas
gs
lods
in
cwtl
inc
clc
mov
rclb
cmpsl
and
lret
and
pop
cs
inc
jo
mov
arpl
fcmovnb
sbb
dec
push
jle
pop
fldcw
fs
clc
mov
pushf
mov
cmpsb
sahf
cmp
xchg
out
int
mov
cmp
fwait
jne
jle
push
or
mov
sub
insl
push
and
lods
dec
daa
lcall
addb
mov
mov
faddl
and
jecxz
dec
cmp
in
popa
sub
aaa
icebp
test
xlat
mov
idiv
xor
in
pop
jg
ss
fs
or
sti
push
pop
or
pop
cli
jo
sbb
pop
cmp
mov
inc
push
push
push
pop
push
movsb
jbe
lea
add
or
mov
push
xchg
fldenv
scas
sub
aaa
add
cwtl
dec
and
sub
jl
inc
xchg
mov
lods
hlt
mov
push
jns
addr16
test
push
pop
psubsb
cmpsb
push
mov
xor
jp
std
jb
leave
or
cmc
sbb
lcall
stos
adc
push
enter
sub
bnd
mov
pusha
xchg
std
stc
cmp
pop
mov
adc
icebp
xchg
mov
aaa
xchg
outsl
rcll
outsb
aaa
shrb
lods
dec
add
popa
or
mov
adc
pop
out
xchg
pop
stos
pop
and
or
push
in
sub
push
adc
ljmp
mov
pop
iret
xchg
dec
cmp
push
push
cmpsb
add
mov
rolb
xchg
mov
cmp
fs
inc
movsl
cli
test
inc
cmc
shl
out
in
lret
sub
mov
and
mov
add
sahf
pop
jae
xchg
cmp
clc
imul
push
mov
pop
fists
loop
dec
or
aad
dec
xchg
adc
xchg
sub
mov
cmpsb
xchg
mov
ret
jns
xor
int3
pop
in
orb
fistpll
aad
mov
std
mov
adc
movl
ret
pop
cmp
inc
testl
daa
dec
cmp
repnz
jle
popf
shrd
xor
jp
pop
push
jbe
jmp
lock
dec
add
and
les
and
outsb
fildl
lret
cmp
insl
int3
loop
push
popa
fcoml
add
lcall
lock
sub
inc
lcall
inc
icebp
fdivs
les
outsl
fbld
push
es
sub
lods
loopne
dec
pop
cmp
mov
and
fwait
jo
ljmp
push
inc
movsl
or
inc
or
sbb
iret
jno
push
add
negb
loope
lret
jl
sbbb
test
inc
fimuls
sub
jecxz
lods
out
dec
adc
mov
inc
js
cs
and
fs
sar
jmp
rolb
addl
in
inc
aaa
pop
mov
pusha
sarl
out
fisttps
cmp
sbb
sbb
rsqrtps
out
mov
lea
dec
ja
js
dec
xchg
pop
bound
cmc
jae
sub
je
inc
jmp
jnp
push
mov
dec
fidivrs
mov
add
jp
gs
cmpsb
int
lret
add
out
stc
movsb
in
dec
rorl
lock
scas
or
shll
rcrl
mov
xchg
outsb
ror
fwait
add
jge
outsl
xor
das
cli
cmp
fbld
shrb
cmp
sbb
jno
stos
xchg
ret
pop
in
je
pusha
lret
loop
push
js
mov
clc
pop
mov
push
cmp
pop
xchg
mov
inc
cmpsb
leave
popf
dec
push
aam
mov
in
stos
inc
imulb
cwtl
fldt
or
out
loopne
adcl
jae
xchg
inc
xor
aas
stc
ret
dec
pushf
jle
jnp
scas
mov
cli
xchg
pop
xchg
mov
cmp
ret
mov
ret
es
arpl
fwait
mov
cmp
sysenter
sbbl
or
testb
outsl
lods
inc
sbb
and
es
dec
rcl
loope
insl
out
or
fwait
mov
fmull
xchg
sub
pushf
cltd
and
andl
dec
adc
js
shll
test
sbb
nop
fucom
add
cmp
push
cmp
push
or
sub
loop
and
shrl
jge
jb
mov
sub
das
hlt
sub
imul
jnp
fadds
pop
repnz
fbstp
es
fs
inc
dec
jmp
dec
dec
and
ret
cwtl
add
insb
loopne
mov
cld
or
pop
or
xor
fsts
mov
test
shrl
fbstp
add
and
pop
js
jbe
mov
xor
movsl
inc
xchg
adc
push
setb
dec
fisubrl
ret
vphaddwq
imul
dec
xchg
imul
add
ds
mov
incb
int
vshufps
fnsave
rorl
call
outsb
or
cmp
or
mov
sti
dec
pop
ret
jp
out
jl
inc
les
cmp
lcall
int3
cmp
setb
addr16
lret
das
mov
es
inc
mov
movsb
daa
xor
add
outsl
inc
js
push
stos
inc
mov
mov
rclb
push
mov
xor
lods
pop
jb
xchg
cmp
je
mov
sub
xchg
lret
add
mov
out
cmp
mov
mov
clc
int
push
jge
fcmove
movsb
jne
add
fistl
sahf
or
add
and
lahf
jns
call
stc
rcr
mov
lods
push
push
cmp
mov
je
mov
les
pop
enter
jg
movsl
and
aad
lods
aas
adc
cwtl
lret
dec
loopne
test
enter
test
into
mov
ror
sbb
push
lret
aaa
push
in
fmuls
xor
push
clc
lret
sbb
sti
je
icebp
sbb
mov
mov
cwtl
cmp
mov
int3
mov
jle
mov
shr
sub
mov
js
inc
lret
dec
and
push
loop
cli
push
and
scas
fwait
pop
pop
mov
mov
jae
stc
insb
xor
xorb
inc
das
cmp
dec
stos
mov
add
cltd
sub
jne,pt
mov
push
mov
sub
pop
xchg
dec
outsl
adc
adc
adc
xchg
ud2
mov
xchg
stos
add
stc
addr16
cld
lret
bnd
stos
sub
adc
lea
adc
into
sbb
inc
dec
sbb
test
cmc
ds
stos
sub
test
inc
jle
shl
or
cltd
rcrl
jns
out
mov
mov
enter
scas
sub
xchg
add
negl
inc
xchg
adc
and
outsb
and
xchg
roll
sub
inc
mov
mov
or
inc
lods
and
aad
repnz
imul
sub
aas
mov
jmp
sbb
mov
pushl
out
xor
insb
xor
shl
loop
xchg
mov
pop
sub
andps
xor
cmp
inc
js
pop
or
xor
or
or
pop
addr16
push
cs
mov
pusha
fidivl
aas
xor
orb
mov
test
mov
xchg
cmpsl
sbb
test
push
inc
sbb
shlb
dec
sub
adcl
xchg
push
pop
mov
and
xchg
bswap
dec
ja
cmp
sub
hlt
sub
inc
mov
int
loope
in
into
sbb
movsb
into
mov
scas
sbb
push
inc
dec
inc
js
dec
inc
andl
jo
xlat
js
mov
jmp
clc
nop
and
in
or
mov
loopne
xor
or
xchg
mov
jno
fdivs
in
inc
mov
aad
in
shlb
loope
es
mov
fsts
pop
vpsrlw
and
pop
xchg
xchg
icebp
or
or
insl
xlat
and
js
ds
ds
addb
lea
adc
roll
addr16
test
data16
repz
popa
ljmp
in
xchg
into
shlb
adc
dec
jne
cmp
cmpb
jno
add
jge
xchg
into
incl
push
push
outsb
pop
cmp
daa
or
xlat
mov
bound
adc
scas
iret
adc
dec
sub
mov
loop
jbe
pop
mov
std
sub
cmp
dec
jmp
cmp
and
ffree
fisubs
and
fwait
sbb
in
sahf
cmc
lahf
mov
and
adc
jno
push
lret
push
jne
adc
inc
xchg
loope
test
imul
aas
fwait
add
sub
int
outsb
push
dec
adc
cmp
fists
pop
and
popf
inc
jmp
adcl
cmp
xchg
imulb
daa
lret
and
mov
adc
sti
dec
push
xchg
les
cwtl
inc
mov
cmp
or
xchg
mov
sbb
stc
or
sarl
sub
push
daa
xchg
mov
test
mov
cli
push
sub
cmp
push
dec
add
nop
in
insb
scas
movsb
jne
in
push
jg
addr16
cmp
dec
scas
or
jge
clc
jmp
cmpb
sub
js
cmp
mov
scas
lds
xor
loop
pusha
or
and
xchg
xor
hlt
fildl
outsb
xchg
mov
xor
das
pop
dec
outsb
push
mov
jns
xchg
mov
cltd
fldt
push
push
shrb
popf
xor
or
pop
mov
addb
sbb
xor
mov
sub
jmp
stos
xchg
movsl
aaa
in
mov
sbb
adc
push
aam
clc
xlat
sti
mov
leave
xchg
pop
mov
push
mov
inc
lods
mov
leave
adc
mov
jp
scas
adc
mov
xorb
xor
ret
ds
ja
addb
in
and
clc
adc
add
xor
fucomip
sbb
out
ja
dec
push
xor
cmp
inc
imul
imul
fisubl
fsubrl
xorb
frstor
fstps
sbb
fs
sbb
aad
sbb
sbb
sbb
popf
jge
mov
sbb
xchg
rcll
cmpsb
ja
dec
dec
in
and
stos
mov
sahf
arpl
jnp
xor
and
sbb
xchg
andb
es
mov
dec
pusha
out
adc
sbb
movsl
popf
pushf
scas
insl
scas
fmull
shlb
arpl
or
adc
shlb
push
out
jp
push
cltd
jmp
mov
push
mov
rcrb
fucomi
mov
xor
add
in
add
and
cmp
divb
inc
mov
pop
out
mov
mov
sahf
adc
lods
fwait
or
mov
push
lods
iret
and
mov
cli
cwtl
mov
pop
scas
pop
push
loopne
jno
sbb
aas
mov
fsubs
ja
push
test
sub
popl
addr16
pop
stc
and
jp
adc
add
jne
test
sbb
lea
dec
and
xchg
test
ret
sub
xor
inc
int3
test
shll
push
lock
shrb
mov
xor
lods
clc
lds
sbb
mov
mov
sahf
inc
inc
xor
pusha
mov
xlat
pop
or
jg
sbb
lret
push
mov
not
xchg
aaa
adc
inc
sbb
sub
fsubl
mov
mov
lock
adc
cmpsb
fsts
inc
shll
vpackssdw
sub
out
dec
xlat
cmp
idivl
cs
popf
out
mov
mov
xchg
iret
outsb
push
mov
mov
jno
ljmp
das
dec
movsl
push
lret
cmp
and
xchg
cmpsb
adc
jg
mov
pop
lret
sbb
ljmp
sahf
jns
inc
cmp
jp
jg
mov
push
or
repz
sub
outsl
ret
sub
loop
rol
jge
mov
out
pop
sarl
mov
call
sub
jo
aas
jnp
call
push
scas
rcl
int
hlt
fwait
adc
cmp
je
mov
in
adc
je
jle
jle
aaa
mov
jp
jb
jmp
cmp
stc
adc
cs
sbb
and
aaa
addb
xor
cmp
dec
hlt
or
sahf
jmp
rorb
ds
and
mov
dec
nop
jo
pop
ret
imul
dec
xchg
push
scas
test
cmp
xor
aad
out
lea
xchg
jle
sub
mov
adc
jns
insl
stos
jno
mov
pop
mov
mov
xchg
outsb
into
push
inc
mov
outsb
jecxz
mov
stos
lahf
data16
ss
cmp
mov
fcom
std
pop
xchg
push
inc
lcall
stos
pop
fistpl
insl
clc
mov
xor
shll
lods
test
movsb
enter
addr16
in
fs
les
jae
xor
jae
and
scas
lret
push
adc
xor
xchg
pop
cmp
inc
imul
test
pop
cmp
adc
push
cli
jns
leave
addl
aaa
push
popa
kmovb
push
shll
test
sub
adc
es
imul
push
ret
loop
or
push
xchg
push
xlat
lods
shlb
es
test
xor
lahf
pushf
mov
pop
in
mov
fwait
js
cmp
stos
adc
cld
int3
faddl
and
adc
inc
push
sub
imul
in
push
sahf
sti
out
sbbl
mov
fimuls
rorl
cmpsl
push
in
das
aaa
ds
outsl
iret
mov
pop
jge
sub
sbb
jle
cmc
xchg
xchg
sbb
les
aas
stos
add
scas
push
inc
dec
js
xor
xlat
dec
aaa
mov
push
mov
rcll
loopne
cwtl
inc
sub
push
scas
in
cmp
push
testb
pop
push
adc
sub
xor
rcr
push
rorb
xchg
pop
icebp
add
pop
ja
mov
ja
add
xlat
loope
out
lret
sbb
push
cld
rorb
mov
jge
ret
or
aas
iret
cmp
shll
sbb
jnp
insb
scas
mov
sbb
mov
data16
dec
mov
inc
push
pop
addr16
je
and
sbb
in
cwtl
shrl
cli
pop
fistpl
jmp
push
sbb
inc
cmp
scas
in
ret
clc
or
es
push
mov
add
inc
dec
xlat
lock
aam
cmpsl
jmp
scas
push
pop
pop
mov
mov
lods
sbb
mov
mov
repnz
fadds
montmul
cmpsb
cli
inc
ljmp
bound
mov
insl
into
pop
sbbb
repnz
mov
pop
jae
mov
adc
sbb
sub
xchg
cmp
sbb
imul
adcb
lret
lcall
fstpl
insl
add
mov
inc
lahf
hlt
pop
cmp
jno
stc
push
repnz
shr
inc
std
push
imulb
les
xor
and
aad
ret
cmp
test
ffreep
ret
and
aam
popa
mov
cmpsl
bound
mov
jnp
cs
mov
mov
hlt
sbb
out
dec
jmp
lods
lret
mov
fdivrl
inc
cmc
lret
cld
aam
scas
test
pop
xchg
imul
repz
pop
jl
loopne
pop
cmpsl
or
sti
ret
imul
outsl
jge
xchg
fs
push
xor
or
loope
lods
call
cmpsb
jns
push
add
pop
in
mov
ljmp
push
jecxz
push
loop
das
xchg
movsb
mov
cmpsb
repnz
pop
add
sti
jo
jmp
push
movl
arpl
or
lock
fisttps
pushf
idiv
sbb
jo
adc
xor
inc
movsl
cli
mov
and
sub
push
incb
decl
in
jecxz
xlat
repnz
mov
mov
xor
test
cmpsb
xorl
or
add
mov
jae
int3
pop
xor
vmovss
mov
inc
jmp
cvttps2pi
inc
into
subb
shll
imul
mov
mov
cmpsl
cli
mov
pop
test
push
in
cmp
test
arpl
repz
aad
sub
div
adc
jbe
jg
jmp
test
imul
push
dec
movsl
xchg
or
movsb
sbb
lods
rcl
mov
sbb
pushf
lcall
xchg
xchg
nop
ja
pop
call
imul
push
push
outsb
dec
adc
int
push
and
xchg
stc
xor
subl
xchg
loopne
lret
or
mov
enter
jmp
adcl
xchg
push
fcmovu
push
stc
mov
enter
mov
sub
adc
mov
out
inc
leave
mov
ret
in
sbb
test
mov
adc
outsb
lret
in
xchg
xor
sbb
xorl
pop
jp
xlat
push
fiadds
fs
test
imul
test
jmp
xchg
mov
div
in
insl
mov
jnp
ret
dec
insb
pop
adc
mov
fisttpll
xchg
gs
pop
aam
mov
cmp
push
xor
sbb
sbb
cmp
jl
pop
cltd
les
out
mov
dec
dec
xor
sub
mov
xchg
add
inc
shlb
jo
out
sbb
pop
xlat
inc
outsb
dec
out
xchg
mov
jo
aam
and
inc
scas
out
inc
pop
ljmp
sbb
or
sub
aad
jmp
shl
out
inc
push
adc
push
mov
pop
jne
mov
adc
mov
or
jmp
xor
hlt
pop
push
lods
movsb
or
adc
xchg
cmpsb
mov
sub
lock
gs
es
mov
and
dec
pop
cmp
xchg
pop
jecxz
jbe
xor
ss
xchg
icebp
sar
xorl
pop
sbb
fs
imul
sbb
clc
sub
enter
mov
push
addl
sub
sbb
out
mov
rorl
fsubr
add
xchg
add
js
xchg
aam
xor
mov
call
and
mov
cmc
cmp
std
dec
push
std
mov
sub
dec
mov
sbb
add
pop
movsb
inc
mov
dec
fbld
lret
lahf
pop
cmpsl
aas
adc
jge
sbb
mov
pop
ficoml
sub
inc
std
cmp
push
sub
xchg
in
iret
scas
out
pop
mov
mov
pop
imul
rcr
je
add
jnp
mov
push
cmp
aaa
push
movsb
sbb
push
sub
fsubl
mov
sub
dec
mov
jmp
mov
cmp
ds
inc
pop
jl
movsb
sub
fwait
shlb
popa
xor
jmp
xor
fdivrl
fs
inc
xor
push
cmc
push
push
mov
cli
pop
sub
xchg
inc
je
cmp
loopne
sti
call
loopne
pop
and
sbb
jno
pop
incl
leave
dec
mov
xlat
cmp
lahf
pop
movsb
es
jecxz
mov
mov
pop
xchg
lret
cltd
aaa
icebp
push
xchg
jle
push
hlt
dec
sbb
mov
mov
rorb
in
inc
cmp
lods
pushf
jmp
test
aas
add
inc
imul
clc
xor
cltd
cmp
stc
cmc
fistpl
daa
adc
or
or
ret
jp
shlb
fadd
cltd
sbb
dec
sub
inc
inc
fiadds
and
and
nop
testb
sarl
push
addr16
inc
popf
inc
addr16
sbb
js
je
and
dec
rolb
dec
push
movsb
jmp
or
cld
push
divl
cs
dec
mov
fists
push
sbb
push
xchg
xor
das
adc
push
mov
or
push
scas
inc
add
outsl
lods
cmp
aas
mov
lcall
and
enter
loop
mov
cmp
test
loope
lret
rcrl
dec
fstpl
shr
mov
push
mov
xchg
popf
lea
mov
xchg
loope
sub
les
mov
js
pusha
add
notb
fmull
stc
outsl
xchg
mov
inc
out
inc
aad
or
xchg
mov
add
dec
out
test
bnd
popl
les
push
das
lahf
xor
lahf
dec
adc
pop
das
sub
int
rorl
xchg
cmp
push
pop
mov
jne
dec
mov
mov
in
nop
movsb
jb
jge
imul
into
aaa
push
js
in
jno
jnp
adc
sub
in
pushl
pop
mov
shrl
cmp
cmp
cmp
lds
mov
push
insl
sub
jo
jbe
inc
faddl
std
xor
stos
lods
jg
imul
fs
imul
sub
sub
sbb
mov
and
inc
imul
stos
jecxz
mov
push
mov
fdivrp
pop
or
inc
mov
add
sub
repz
jg
mov
in
mov
arpl
pop
mov
pushf
out
into
sub
mov
cmovg
add
test
orl
or
sbb
push
daa
xor
cmp
and
ror
and
mov
push
dec
jns
sar
jno
pop
ret
dec
sets
cmpb
jmp
pop
mov
aam
add
push
dec
push
sbb
xchg
push
es
loope
fdivrs
add
stos
mov
rcr
pop
outsb
sub
dec
loop
shr
in
fmull
pusha
dec
dec
mov
xchg
xor
or
xchg
adc
and
push
dec
sahf
repnz
fsubs
divb
xchg
cs
cmpsl
sub
push
xchg
pusha
aam
shll
inc
inc
push
loope
sti
mov
xlat
sub
ljmp
push
fidivl
jg
adc
mov
mov
or
mov
lret
add
pop
fcmovnb
lcall
add
int3
xchg
ret
mov
in
mov
insb
aas
mov
mov
lods
jge
mov
enter
mov
and
out
mov
jns
or
jl
and
pop
cmp
adcl
outsb
mov
or
inc
insl
in
inc
outsb
dec
popf
adc
les
xchg
lret
sub
lret
sub
xchg
lock
dec
mov
arpl
nop
insb
fadds
mov
clc
je
jp
sbb
pop
xchg
notl
dec
push
xorl
subl
sahf
aad
cld
jl
jne
jns
mov
xor
xlat
xchg
jno
ljmp
pop
insb
cwtl
jae
fidivrl
mov
fcoml
lahf
fbstp
cmp
jnp
leave
lcall
mov
ja
stc
bound
mov
mov
scas
mov
jnp
lret
sub
cmp
lods
jp
sub
es
lret
or
xchg
gs
inc
scas
nop
and
loope
bound
in
das
out
dec
das
dec
popa
push
arpl
sbb
push
jle
dec
adc
lahf
jecxz
mov
mov
mov
cld
jmp
or
sub
popf
es
pop
rcrl
stc
cmpsl
mov
pop
popa
mov
shlb
add
cwtl
mov
roll
jo
data16
sti
xchg
pop
sub
adc
imul
jne
push
insb
inc
aad
cmp
gs
xchg
or
sbb
xchg
pusha
loope
and
xor
js
rcrl
in
or
pcmpeqb
xor
cmp
into
dec
add
or
dec
daa
sbb
fucomp
jl
lods
jns
mov
mov
pop
add
in
mov
and
out
divl
dec
dec
cmp
outsl
fsubr
mov
or
and
xchg
hlt
lret
and
ficompl
inc
stos
push
pop
fstps
or
dec
add
sbb
std
adc
mov
push
mov
in
pop
hlt
call
ja
xchg
pop
cs
test
dec
lea
fs
xchg
and
leave
mov
fisubs
cmp
mov
insl
les
dec
test
or
mov
or
in
scas
stos
ja
mov
fsubs
dec
mov
push
cltd
jmp
lahf
gs
push
imul
fucomp
cltd
lock
imul
pop
aas
xor
mov
and
adc
jno
orb
dec
push
dec
push
jb
cmp
push
cs
ljmp
cmp
test
adc
sub
lret
or
fdiv
jns
fs
pusha
xchg
loopne
daa
jne
scas
xor
jmp
mov
and
scas
insb
aam
pop
push
fsts
and
xor
movsb
jmp
pop
adc
dec
ficoml
popf
inc
push
les
test
xor
jmp
bound
pusha
dec
xor
xor
adc
mov
or
dec
fsubrl
sbb
jno
push
jle
cmp
in
lret
cwtl
sbb
jecxz
ret
sub
add
jb
mov
testb
xlat
std
addr16
mov
sbb
cmp
sbb
mov
rorb
adc
push
sub
orb
imul
sbb
jg
shr
adc
add
cmp
rcll
cld
lea
pop
sub
xchg
dec
shll
xchg
sahf
stos
js
jno
les
arpl
popf
lret
enter
lret
cli
cwtl
mov
cs
out
pop
out
xor
mov
das
out
push
push
ljmp
hlt
imul
add
std
ret
stc
jb
cmp
and
incl
adc
push
outsb
and
test
into
fsubs
fcoml
ljmp
rcl
mov
dec
pop
push
sub
and
enter
loopne
fsubl
cltd
or
xchg
inc
push
mov
ljmp
mov
mov
imul
arpl
testl
test
ljmp
jno
iret
in
jle
arpl
into
lret
cli
es
push
loope
add
fwait
pop
adc
fs
js
repnz
jnp
or
sbb
sbb
insb
xor
lcall
loop
popf
jb
fsts
adc
mov
and
pushf
mov
inc
pop
mov
jg
and
xor
pop
jmp
mov
scas
popf
mov
jmp
xor
jg
test
aam
adc
imul
inc
lods
pop
xchg
cld
int3
add
push
push
pop
pop
add
or
mov
addr16
aas
xor
xor
mov
jp
or
push
push
outsl
mov
adc
cltd
jmp
sub
push
bound
roll
movsb
icebp
pop
sbb
imul
mov
and
dec
sbb
cmovge
js
mov
loopne
imul
sahf
stos
sbb
hlt
not
loop
dec
arpl
js
push
stos
and
fisubrs
in
in
out
push
adc
dec
push
pop
xor
fidivrl
sti
push
cli
push
inc
adc
leave
cmpsl
jecxz
mov
jns
scas
or
jmp
loop
mov
neg
in
mov
pop
popf
fistpl
adc
pop
test
mov
xchg
faddl
leave
push
ss
popf
push
xorb
xor
xor
adc
sub
ret
hlt
jp
or
imul
and
sbb
les
lcall
idivb
rolb
dec
xor
cmp
sbb
cmp
mov
inc
aam
pop
mov
cmpsb
push
shlb
mov
adc
inc
and
xchg
mov
lret
xchg
in
movb
lcall
cmp
enter
xor
into
push
mov
lret
outsb
enter
rorb
or
pop
aaa
or
rcll
xor
add
cli
sbb
repz
into
push
outsl
pop
mov
mov
mov
lahf
divb
in
cmp
pop
sahf
sti
decb
ret
mov
mov
ss
dec
xchg
sbb
pop
ljmp
mov
stc
mov
mov
dec
or
ds
es
call
aaa
cli
push
add
and
loopne
es
movl
xchg
stos
push
jb
adc
incb
fs
jno
js
and
mov
mov
dec
js
movl
enter
dec
outsl
jae
les
fisubs
xor
cmp
lods
xchg
mov
icebp
es
addr16
lret
js
cs
insb
popf
mov
out
out
mov
cwtl
daa
popf
cmc
or
out
push
subb
push
cs
lea
int
mov
fwait
jo
adc
das
xor
and
jb
push
or
pushl
push
push
adc
pop
or
add
dec
jl
xor
xchg
push
push
mov
push
jae
out
add
addb
repnz
in
loop
mov
sbb
into
push
cli
xor
outsb
xor
mov
dec
xchg
mov
lret
inc
cmp
adc
and
jge
xor
imul
dec
add
push
xor
mov
jns
xchg
inc
push
jg
jl
and
adc
fnstsw
fsubrp
stos
aas
out
lods
lods
arpl
pop
sbb
jb
pop
inc
and
jae
jne
fcoml
mov
lods
mov
mov
jle
stos
adc
int
xchg
mov
lock
arpl
pop
dec
xchg
mov
test
aad
xchg
scas
inc
in
add
sahf
repnz
lahf
ret
pop
scas
xor
and
mov
ss
cmp
shlb
mov
lret
cmp
sub
and
xor
fwait
and
mov
xchg
mov
jae
mov
cmp
stos
ffreep
outsb
pop
fs
rorl
cs
push
jbe
dec
adcb
bound
adc
xor
inc
push
vorpd
rcrb
push
ds
jle
adc
ss
movsl
ljmp
ret
pop
sbb
negl
sbb
stos
fwait
stos
pusha
mov
cmc
pop
in
outsl
fcompl
mov
cld
fistpl
enter
mov
push
dec
xor
int3
cmpsb
push
sub
and
xchg
mov
push
pop
std
xchg
push
dec
cmpl
xor
sbb
test
pop
xorl
pcmpeqw
xorb
dec
jmp
and
sbb
jmp
jno
xchg
sbb
js
adc
sub
gs
jno
outsl
cmovg
xchg
insb
jge
call
mov
push
mov
and
popf
mov
xchg
movsb
jle
test
and
add
incl
sbb
xor
add
cmp
fs
pop
jmp
pop
xor
addr16
jmp
pushf
cwtl
xor
test
int
push
or
jp
push
insb
sub
push
sti
sarl
mov
add
sbb
sub
sub
add
mov
cltd
ret
ret
fwait
jmp
fstpt
ljmp
xchg
imul
gs
sbb
jo
jmp
sub
xchg
jns
push
pop
je
int3
pop
jno
ja
dec
outsb
std
add
ds
in
test
bound
movsl
cmp
inc
or
mov
xchg
in
insb
cmp
fld
mov
push
sub
dec
xchg
mov
enter
imul
mov
or
ficompl
mov
stos
xor
in
push
fstl
pop
call
jbe
fwait
xorl
mov
jmp
movsl
in
mov
jecxz
sti
ror
push
push
data16
sbb
xchg
fiaddl
loop
pop
dec
jp
push
or
adc
loop
pop
add
movsb
shrl
mov
inc
fisttpl
fidivrs
push
clc
mov
pop
push
fxch
lock
aas
dec
out
ret
les
fwait
rcrb
outsl
inc
sub
lods
xor
mov
fadd
in
jno
mov
xor
jecxz
bt
popa
imulb
sbb
or
ja
lret
js
pop
rcpps
sbb
mov
cltd
imul
aad
mov
sbb
outsl
sahf
popa
mov
sbb
xchg
push
mov
out
pop
mov
iret
xor
cmp
push
xor
mov
call
push
xor
into
and
cmp
clc
pop
inc
daa
dec
adc
movb
jmp
sbb
mov
out
xor
orl
inc
je
xchg
fbstp
and
leave
ja
xchg
cmp
aam
pushf
addr16
clc
clc
xchg
icebp
fwait
xchg
rcr
stos
sbb
jns
xor
das
test
fnstenv
mov
xchg
leave
xchg
inc
test
cmovge
mov
push
int
loop
dec
lcall
push
and
jns
cmpb
in
adc
hlt
movsb
movsl
inc
adc
lret
jmp
js
gs
or
xor
dec
pop
cmp
mov
insb
push
es
in
push
cld
clc
pop
es
pop
xchg
push
mov
lcall
insl
jbe
call
push
push
sbb
jae
jns
xor
inc
cmp
cmp
xlat
or
xchg
and
fwait
icebp
cli
xchg
inc
shrl
cwtl
mov
push
or
cmpsl
mov
test
clc
rcrb
push
stos
and
jns
mov
sahf
cmpsb
outsl
sub
popf
loopne
in
or
add
in
xchg
push
call
xlat
xchg
push
ss
cmpsb
dec
pop
xchg
cmp
xor
sarl
dec
sbb
outsl
push
lods
inc
lcall
cmpsl
pop
das
jmp
and
sub
add
xchg
dec
mov
iret
lock
sub
movsb
mov
dec
incb
jbe
mov
in
out
loop
mov
fisubl
and
add
mov
ret
es
punpckhdq
addr16
outsl
out
xchg
subl
mov
or
stos
ljmp
bound
sbb
mov
leave
movb
xchg
mov
mov
repnz
push
mov
aaa
out
pop
pop
push
int
jb
fiadds
and
mov
xor
push
je
cmp
lock
cmp
add
loope
sbb
lret
xor
test
mov
std
and
sub
je
subl
ljmp
in
xchg
pop
shll
cltd
fstpl
cli
ds
xchg
test
dec
xchg
repnz
aam
mov
mov
adc
inc
sahf
fisubl
xchg
pop
and
mov
test
test
jge
add
xchg
xchg
sub
sarl
hlt
inc
inc
call
in
push
xlat
xor
xchg
dec
inc
cmc
pop
scas
out
insb
js
std
mov
pop
pop
mov
push
mov
push
pop
mov
mov
aad
call
adc
pushf
jp
xchg
out
sbb
icebp
es
jecxz
mov
test
xlat
sub
orb
jns
mov
addl
add
daa
stos
push
and
mov
out
aaa
lret
fldenv
inc
inc
shlb
or
rclb
add
inc
mov
xor
jns
push
test
aad
sbb
loope
rcrl
mov
pop
dec
adc
fdiv
mov
loope
push
jnp
jge
inc
data16
sub
popa
mov
pop
fs
gs
lds
fistpll
adc
pop
xchg
fcompl
rolb
shll
dec
scas
pop
outsl
add
add
fmul
in
or
add
aad
push
dec
nop
push
xchg
adc
repz
hlt
neg
inc
iret
lcall
cwtl
mov
in
out
out
iret
sarl
mov
and
inc
or
fstp
jmp
pop
pop
lcall
inc
dec
or
clc
pop
jno
aaa
aas
hlt
out
shlb
out
iret
dec
jle
or
loope
and
adc
test
mov
cwtl
mov
inc
xchg
stos
jle
mov
jae
mov
jno
add
cltd
ret
je
jecxz
pusha
in
mov
gs
ja
shrl
push
xor
pusha
or
xlat
mov
mov
mov
addl
lahf
add
fcmovnb
call
lcall
fs
inc
aaa
adc
mov
insb
mov
jo
push
xchg
pushf
dec
inc
pop
leave
inc
andl
push
sbb
repz
cld
xchg
js
mov
ret
cmp
or
jo
xchg
in
pop
sbb
jmp
fdivp
and
and
jmp
das
push
push
add
int
shll
jbe
and
in
inc
adc
je
and
xchg
jbe
inc
push
mov
mov
dec
push
packssdw
mov
scas
fsts
fidivs
dec
int
xchg
fisttpll
ret
popa
mov
push
decl
nop
inc
sahf
and
dec
int3
addl
add
insb
test
mov
mov
orb
mov
cs
jns
cmp
mov
stc
aas
pop
lcall
inc
cmp
call
ds
jbe
jns
add
pop
sbb
pop
xchg
xor
data16
enter
xchg
mov
pop
jb
mov
mov
das
inc
xor
ds
push
fwait
inc
jns
add
ds
out
jo
pop
push
popf
cmpsl
xchg
test
mov
out
cwtl
sub
stos
cmp
mov
imul
lea
mov
pop
test
pop
ds
out
push
inc
das
cmp
sub
shll
push
mov
xor
inc
push
xchg
adc
inc
push
neg
adc
in
decb
jl
mov
dec
jae
cmpsl
rorl
inc
inc
adc
mov
dec
sub
jnp
in
pop
cmp
dec
pop
fnstenv
leave
cltd
sbb
mov
mov
lret
out
and
out
cmp
inc
bound
lods
cmovo
andb
adc
roll
cmp
mov
stc
mov
inc
loop
pop
sti
icebp
ror
je
or
jp
pop
mov
add
jecxz
stc
sti
ja
hlt
es
ret
or
pop
bnd
xchg
lcall
dec
out
add
dec
inc
xor
daa
icebp
mov
push
jl
fimuls
jno
aad
push
popf
bound
aam
stos
and
sub
fisubrs
push
add
dec
mov
loopne
das
rolb
push
xor
pop
mov
mov
fnstenv
je
out
sub
adc
xor
add
dec
sarl
and
push
ds
mov
xchg
or
and
shll
testb
imulb
inc
inc
fcoml
inc
not
bound
xor
divb
pusha
out
pop
adc
cmp
and
mov
test
push
daa
int3
scas
inc
and
pop
addr16
and
nop
loop
aaa
int3
push
sub
in
mov
aas
imulb
pop
pop
and
loopne
fs
xlat
sub
in
mov
cltd
cmp
test
xlat
or
adc
aas
jbe
fisttpl
int3
fisttpll
push
xchg
loope
pop
arpl
or
outsb
mov
in
add
addl
jl
adc
enter
inc
adc
jecxz
and
sub
cmp
sbb
sbbb
xor
jmp
repnz
jo
adc
neg
cltd
xchg
xchg
sbb
lds
psubb
or
loope
aaa
pop
int
lods
inc
aam
fstps
cmpsl
add
fwait
push
loop
or
lods
hlt
icebp
fwait
test
mov
popf
dec
sub
cs
cmp
add
sti
jo
pop
sub
inc
bound
jae
jae
push
in
repz
aam
xchg
xor
xchg
test
mov
arpl
pop
inc
les
sbb
subb
adc
fidivs
mov
mov
cmc
push
rcll
pop
ret
pop
movsl
xor
jnp
repz
out
imul
push
aaa
or
cs
inc
mov
loop
ret
mov
ljmp
mov
sti
loopne
ss
nop
ljmp
clc
cmpsb
mov
sbb
jno
daa
inc
and
popa
push
les
or
cld
push
je
push
scas
pop
pop
popa
cltd
mov
add
scas
pusha
stos
ja
pop
fsubrs
mov
lahf
stos
out
mov
rcll
frstor
cmpsb
test
fistpll
cmp
mov
fidivl
aaa
push
mull
push
cli
push
jae
xchg
rcrl
dec
cs
fcmovbe
in
mov
cmp
bnd
bnd
add
sub
xchg
jp
xchg
sarb
lahf
jnp
and
push
sbb
aad
scas
add
mov
insb
sbb
sbb
ret
gs
add
shrb
out
pop
sub
sub
jp
cltd
hlt
sub
icebp
pop
dec
jnp
jg
mov
fcmovbe
iret
imul
or
jns
pop
div
and
mov
mov
arpl
or
or
xchg
clc
popf
xchg
mov
xchg
loope
mov
cmp
popf
popa
mov
add
xchg
xor
lods
jmp
or
into
sbb
xor
aas
clc
and
inc
push
mov
js
xor
sbb
pop
inc
inc
out
push
fs
pop
mov
jnp
popf
dec
ret
lea
inc
clc
mov
xchg
and
fiadds
inc
push
pushl
push
loope
push
sbb
cltd
xchg
sahf
mov
rcrl
outsl
push
int
mov
mov
sub
adc
push
cld
in
insl
sub
dec
leave
arpl
lret
notb
cli
jecxz
mov
icebp
sub
into
cltd
xchg
push
push
xor
inc
loope
dec
inc
inc
sbb
inc
add
lea
mov
and
ret
cmc
repnz
fimull
xlat
mov
loop
push
jno
outsl
xor
sub
adc
fildl
iret
outsb
push
jl
or
fcmovbe
sub
aaa
jle
test
fnstcw
dec
jmp
jge
test
mov
cltd
push
lock
stos
jl
shrl
cmp
adc
sahf
addr16
arpl
mov
test
into
out
add
jnp
adc
push
add
scas
xchg
loop
adc
int
imul
fisubs
mov
jo
hlt
mov
xchg
and
xchg
push
and
xor
inc
mov
sub
in
mov
dec
push
dec
int
push
inc
jbe
push
jecxz
imul
movsb
xchg
hlt
adcb
pop
enter
les
jns
fstp
insb
inc
repz
in
adc
fisttpl
mov
out
lock
cmp
gs
jns
jbe
and
aad
ficomps
stos
lret
aam
pop
dec
mov
mov
gs
je
ret
scas
pop
xchg
popf
ret
dec
je
fwait
mov
pushf
push
clc
mov
jnp
dec
pop
test
adc
cmpsb
add
adcl
jne
xchg
out
leave
movsl
les
adc
gs
out
adc
mov
xor
int
sub
cmpsb
sub
inc
scas
push
push
mov
imul
shl
sub
mov
xor
mov
imul
mov
sub
mov
push
popf
je
cmpsb
push
cwtl
jp
js
lea
pop
scas
inc
ret
stos
jb
inc
sub
stos
jb
lds
mov
push
sbb
sbb
ret
push
push
into
sbb
xchg
out
and
adc
push
and
inc
cmpsb
gs
push
fwait
sub
orb
movsl
fidivrl
mov
aaa
add
fldenv
adc
dec
fs
inc
push
jbe
arpl
cmp
test
pusha
repz
push
and
lock
jne
add
inc
push
dec
bnd
sub
lea
jge
add
shlb
mov
pop
scas
jp
loopne
and
jecxz
xchg
shr
pusha
shrl
pop
ret
jbe
inc
adc
push
fidivl
cmpsb
or
stos
cld
bound
mov
sbb
out
cmp
idivb
fldenv
cmp
fwait
dec
cmpsb
mov
adc
jae
cli
std
lea
push
and
push
clc
ud0
cwtl
or
inc
jl
push
pop
push
lahf
out
add
ss
roll
lea
jae
rcrl
sbb
stc
mov
cmpsl
cmp
bound
cmp
cli
add
ja
sbb
movsb
add
mov
in
jns
dec
cmp
cmc
ret
addr16
stos
add
mov
int3
inc
sbb
decb
add
jg
xchg
fcompl
jae
sbb
fdivs
push
push
xchg
mov
test
dec
imul
out
lods
dec
pop
dec
sub
and
iret
push
pop
jecxz
cmp
or
andb
fcmovne
and
inc
and
lcall
dec
push
cmpsb
cmc
lea
inc
mov
adc
jle
ljmp
mov
add
dec
lret
test
push
lret
les
sbb
andl
mov
loopne
sbb
xor
leave
popf
mov
xor
fs
ret
lea
cmp
enter
std
xchg
or
add
fnsave
insl
xchg
rcll
pop
inc
pop
pop
or
stos
mov
push
pop
call
cli
outsb
add
adc
push
lcall
ljmp
jg
mov
sub
lods
aam
lods
push
nop
leave
aam
pop
ret
cltd
fldl
adc
push
inc
cmc
outsb
fldl
rorb
in
mov
mov
xchg
addr16
mov
imull
push
xchg
flds
stos
jle
fimuls
xor
addr16
add
rcl
lea
shll
dec
aad
or
adc
dec
iret
test
jp
jae
lcall
mov
and
cltd
or
mov
call
push
mov
or
loop
pop
add
ds
xchg
xchg
jne
call
hlt
pop
test
enter
jne
sbb
int
hlt
pop
mov
insb
xchg
mov
mov
inc
sahf
ds
mov
push
xchg
dec
mov
xchg
fwait
mov
push
xchg
insb
shrl
mov
xchg
lock
aam
addr16
mov
rclb
pop
push
inc
adc
xor
xor
jge
adc
out
cmp
mov
mov
and
lods
bound
pop
jg
loop
in
jge
fwait
clc
and
lods
jle
add
adcl
pushf
pop
icebp
mov
push
mov
stc
popf
scas
mov
push
cs
inc
scas
repnz
ljmp
push
or
mov
sbb
sbb
pop
iret
rorl
call
cmp
mov
loopne
fistpl
sub
xchg
adc
mov
jnp
inc
sub
sub
mov
test
out
xchg
add
push
jge
lret
or
test
sbb
cmp
xchg
and
test
dec
mov
roll
adc
outsl
repnz
cltd
lahf
xchg
dec
cmc
pushf
sbb
mov
xor
xor
lods
int
inc
sbb
inc
mov
and
push
scas
add
cmp
pop
int3
mov
inc
mov
js
mov
test
dec
ficomps
pop
mov
fildl
clc
pop
jns
arpl
xchg
lahf
je
shll
cmp
inc
in
cmpsb
ljmp
inc
push
cltd
mov
mov
in
pop
add
loope
fwait
sbb
or
push
xor
cltd
jecxz
cmpsb
sub
rclb
push
jb
or
pop
inc
daa
shll
pusha
rcrb
fmul
push
stos
idivl
stos
pop
adc
hlt
mov
pop
in
stos
jl
div
xor
xor
dec
loopne
dec
addr16
mov
mov
jecxz
or
mov
or
mov
fidivrl
rcl
cmp
stos
shr
in
hlt
divb
mov
adc
pop
jecxz
mov
jne
aad
popa
fwait
jle
popa
jae
mov
sbb
imul
hlt
mov
push
call
and
pop
xchg
mov
popf
inc
mov
insl
mov
sbb
or
add
fdivs
pop
add
push
fisubrs
xchg
outsl
mov
movsb
movsb
xor
mov
or
jle
mov
into
adc
popf
adcb
jo
jno
ljmp
les
jns
mov
jp
out
fldenv
fsts
stos
adc
inc
mov
popa
inc
adc
or
cld
push
jecxz
push
call
lods
and
push
and
rorl
insl
inc
and
mov
add
adc
int
mov
les
psubq
sub
mov
xor
sub
loop
jmp
sti
mov
leave
scas
imul
shrb
fiadds
mov
jno
mov
ret
or
adc
in
int3
cmp
ja
push
pop
outsb
jle
in
push
sub
sub
xchg
les
cli
dec
pop
push
dec
cmpsb
in
cmpsb
fldcw
xor
inc
push
fsub
gs
inc
sahf
hlt
xabort
pushl
jmp
stc
or
nop
sbb
inc
or
adc
jle
mov
hlt
or
sub
cmp
jae
mov
in
push
adc
es
ljmp
adc
pop
sub
stos
pusha
and
mov
ret
lds
dec
rcrb
out
ss
inc
jb
divb
add
stc
add
sub
inc
cli
push
int3
pusha
xchg
mov
mov
and
js
sub
or
or
jo
or
pushf
push
mov
or
xchg
push
sbb
insl
cmp
rcrb
and
sbb
and
lahf
movsl
incb
dec
in
addr16
adc
inc
or
or
aam
adc
dec
lret
or
fisttpll
pushf
loope
mov
jg
mov
sbb
insb
and
pusha
lret
data16
push
pusha
fimull
cmp
inc
dec
jl
mov
push
push
rolb
jo
xor
test
mov
cmp
sub
mov
shll
cwtl
adc
ja
nop
cld
mov
out
in
or
cmp
mov
imul
popf
sub
sbb
cmp
mov
jp
subb
fistps
mov
movb
out
inc
xchg
inc
in
imul
mov
addr16
in
cltd
in
fwait
and
mov
and
add
lea
lods
or
sar
or
rcrl
mov
sbb
pop
cmp
inc
loop
push
ja
in
call
stc
fs
push
jno
std
pusha
dec
movb
and
frstor
push
shrb
fildl
call
push
aam
lcall
gs
jno
scas
jo
lods
mov
cltd
aad
jg
and
sahf
inc
mov
es
scas
mov
sub
call
add
rcrb
insl
rcrl
repz
cli
adc
cs
sbb
push
pop
stos
push
xchg
or
sub
ja
fadd
inc
and
jns
scas
cli
mov
jnp
arpl
sub
test
and
or
push
loopne
arpl
dec
mov
es
xchg
test
popa
iret
dec
mov
call
xchg
or
icebp
scas
cmc
hlt
mov
sti
push
ljmp
push
jae
jge
push
sbb
mov
inc
and
popf
add
jns
xchg
fldenv
mov
hlt
adc
mov
or
cmp
test
cwtl
jmp
pop
cmc
sarb
jmp
imul
ljmp
cmpsb
fisttpl
mov
outsl
and
out
in
movhps
aaa
in
jo
ret
pusha
jb
and
fimull
mov
inc
sbb
hlt
xchg
jno
popf
xlat
lret
out
lret
out
test
adc
push
mov
sbb
icebp
lret
pop
fadds
ja
ljmp
les
mov
adc
mov
add
repnz
je
inc
jp
mov
mov
sub
sbb
stos
leave
outsb
int3
inc
insb
ret
sar
dec
mov
sub
daa
xchg
hlt
and
roll
inc
pop
dec
flds
ja
jmp
pop
je
mov
jmp
dec
cmpsl
mov
jmp
hlt
fprem
subl
sbb
pop
nop
pop
xchg
aad
cmc
ffreep
ds
adc
push
push
pop
cwtl
cwtl
sub
addl
mov
lret
sbbb
out
rorl
stos
test
push
fscale
std
scas
jnp
and
jge
stos
mov
and
movb
imul
fsubl
test
push
fwait
and
cli
movsb
andl
stos
sbb
js
ja
pop
fnstenv
repnz
push
push
inc
xor
dec
and
push
mov
jle
pop
shll
test
sub
movsb
cmp
iret
or
adc
adc
cmp
push
call
mov
je
mov
mov
pop
movsb
sahf
je
mov
enter
out
and
leave
sub
pop
jae
das
sbbl
orb
mov
mov
dec
sub
ret
dec
bound
out
jne
mov
sbb
rclb
in
aaa
inc
jecxz
pop
xchg
cltd
push
and
and
jg
clc
stos
and
mov
test
xchg
cs
push
nop
add
push
repz
cs
pop
push
out
inc
sbb
jne
and
and
xchg
popf
xor
inc
or
outsb
pop
inc
das
lcall
jp
adc
pop
jge
daa
fdivs
fnstsw
and
inc
adc
scas
pop
sbb
cmp
rep
add
iret
and
in
dec
inc
test
mov
cmpsl
in
and
fldt
and
cmp
dec
mov
mov
fistpl
icebp
add
rcl
fldl
sbb
dec
loope
adc
adc
pop
mov
loopne
or
nop
sub
or
xchg
scas
nop
imulb
dec
dec
pop
add
jmp
mov
cs
fstpt
pop
push
movsl
int
sbb
int
cmp
into
inc
jb
scas
lods
ficompl
dec
lcall
jmp
outsb
and
cmp
inc
dec
xor
mov
inc
test
and
xor
shlw
movsl
arpl
add
cmp
lock
pop
shrl
cmc
xchg
jae
add
push
repz
cli
mov
xor
xchg
ficoms
in
add
pusha
cmp
xor
les
imul
hlt
inc
xor
jo
cmc
sti
das
imul
push
scas
out
and
lods
lds
mov
xor
pop
jp
jmp
sub
xor
mov
and
or
outsl
push
lcall
addr16
inc
popa
push
pop
scas
pop
cmpsb
inc
xchg
scas
inc
aaa
loop
fs
inc
outsl
cwtl
rcll
adcb
push
repz
aaa
inc
pusha
aaa
xchg
jmp
hlt
push
xchg
daa
mov
sbbb
jge
lods
jecxz
cli
out
mov
or
push
jl
pop
lods
sbb
mov
xorb
xor
mov
sub
popf
pop
sub
jo
adc
jae
pop
jns
into
mov
inc
mov
or
add
pop
pop
clc
mov
cwtl
lock
mov
xchg
pusha
and
lods
adc
inc
sbb
sti
cld
mov
inc
xchg
lods
sub
testb
push
mov
gs
outsb
xchg
mov
sbb
push
cmc
das
stos
repz
repnz
push
and
push
sbb
int
and
xchg
jmp
das
pop
pushf
push
cmpsl
sahf
mov
lahf
push
adc
jecxz
mov
xchg
pop
lds
in
cmc
orb
xchg
or
jg
outsb
loop
mov
push
jnp
lock
xchg
push
js
inc
inc
jl
mov
insl
mov
cmp
loop
and
sti
mov
idiv
mov
add
jns
fldenv
icebp
adcl
aaa
rolb
cmp
iret
xchg
sub
sub
and
sbb
fisubrl
inc
add
data16
leave
jl
dec
in
push
jne
arpl
clc
stos
ret
iret
fmuls
or
imul
ljmp
cwtl
cmpsl
jno
in
sub
lods
lret
test
arpl
rcrb
mov
mov
dec
testb
sahf
imul
sti
xor
xchg
push
mov
loopne
dec
pop
jmp
jmp
jno
fmuls
xchg
jg
xor
add
and
mov
inc
mov
push
popa
dec
sub
jnp
jge
call
sbb
ljmp
cmp
out
lock
cltd
loopne
imul
adc
xchg
shrl
dec
cli
adc
pop
adc
xchg
cmp
dec
sbb
in
clc
jo
xchg
mov
xchg
arpl
inc
int
cwtl
outsl
lock
mov
cli
push
mov
mov
lahf
push
lcall
outsl
push
cld
inc
mov
rclb
clc
incl
dec
inc
test
fstl
mov
mov
xchg
pop
push
cmp
aam
pop
mov
jo
jmp
sub
loopne
or
xor
out
pop
push
xchg
aam
xchg
jo
mov
es
loopne
sub
sub
push
mov
or
rclb
jne
dec
aam
cmp
pop
sub
cld
test
popa
test
icebp
push
xchg
aas
mov
push
xor
call
into
shr
loop
sub
push
loop
icebp
inc
pop
out
out
mov
push
mov
sub
pop
repz
outsb
mov
inc
inc
jnp
mov
outsl
mov
or
add
bound
stos
lret
inc
sbb
mov
bound
dec
fldenv
sub
pop
add
dec
ss
daa
push
jecxz
out
outsb
push
int3
mov
imul
fsts
xchg
mov
cli
jmp
adc
lods
test
testb
iret
pop
xchg
ffreep
je
into
fdivrs
movsl
jmp
mov
cmp
mov
lock
cmp
sbb
and
pushf
out
repz
sbb
jno
inc
cmp
lods
xor
shlb
es
int
sbb
cmpb
cmp
and
and
pop
mov
ja
mov
rcrb
bsr
xor
pushf
stc
adc
shrb
loope
arpl
inc
xlat
inc
or
mov
inc
adc
mov
push
sub
lock
pop
push
sbb
mov
mov
es
lcall
ret
popf
adc
or
xlat
lret
cmp
xchg
ss
inc
es
push
xchg
andl
pop
mov
fincstp
rcll
and
mov
jmp
push
inc
jecxz
jb
sub
loope
in
jns
xor
pop
sbb
lcall
and
adc
incl
fwait
jbe
add
nop
addb
ljmp
test
pop
clc
cmc
adc
or
sub
loopne
jno
shlb
movsl
sub
cmp
push
dec
xor
call
sahf
xchg
push
sbb
push
sbb
xchg
adc
int
aam
fldcw
dec
cmpsl
dec
sahf
sub
jp
fildl
shr
adc
pop
mov
pop
es
popa
sbb
aaa
pop
sub
int3
xchg
scas
pop
into
adc
push
mov
mov
pop
js
fisttps
daa
xor
scas
arpl
hlt
ja
lret
roll
mov
shll
mov
mov
pop
cmp
enter
iret
mov
fldt
mov
lock
xchg
dec
out
mov
mov
into
jne
dec
fstl
or
lret
lahf
push
mull
lods
fs
adc
imul
sub
jb
adc
add
test
sbb
into
nop
push
dec
stos
push
jle
fwait
xchg
filds
mov
jb
sahf
mov
sub
dec
repz
pop
pop
push
pusha
xor
xor
out
dec
and
and
pop
cmp
lret
dec
cmp
not
xor
or
ja
cmp
ret
fildll
xor
mov
mov
jmp
dec
dec
inc
add
xchg
popa
movaps
leave
pop
push
mov
sub
and
mov
push
and
int
mov
sbb
pop
xor
in
mov
or
add
or
rorb
mov
adc
cmpb
ds
ret
inc
sub
sub
int
rcr
xchg
inc
jb
lret
pop
repz
push
and
ss
ret
push
sti
push
and
inc
push
adc
jno
inc
mov
in
std
imul
stc
in
xor
sbb
mov
loope
inc
sub
xchg
sbb
push
cmp
shlb
shlb
scas
lods
mov
enter
xchg
lcall
lea
call
or
mov
stos
xchg
les
push
leave
cmp
adc
jb
and
ficoml
loop
xor
jbe
js
scas
adc
mov
iret
sbb
aad
push
ljmp
outsb
std
scas
add
stos
dec
out
decl
xchg
mov
push
dec
stc
cmp
push
fisubs
mov
jo
lret
cmpsb
incb
mov
push
sbb
cmp
xor
mov
xchg
rcrl
sbb
test
add
jns
iret
xor
adc
adc
insl
cs
dec
xor
sbb
scas
fbstp
in
xor
jle
data16
lock
inc
testl
jnp
jg
mov
cmp
lea
xor
sbb
sbb
shrb
mov
int3
push
ljmp
add
sbb
sub
jns
xor
dec
test
sbb
lods
push
aam
sub
sbb
jns
rcrb
out
adc
sub
xchg
ds
lret
jo
jb
and
cmp
pop
jbe
sbb
jne
hlt
repz
lods
mov
and
mov
cli
cmpsl
cmp
aaa
out
xor
ret
mov
das
sbbb
sbb
shrb
test
pop
inc
js
push
mov
rcll
pop
ja
mov
or
in
stc
out
sbb
into
mov
cmp
xchg
ja
or
sub
movsb
mov
add
cmpsb
js
bound
scas
lret
addb
enter
mov
push
cmpsb
rcrl
pop
push
pop
out
or
setl
scas
add
jae
pop
mov
pop
or
pop
lds
dec
or
cmpsl
shrl
mov
sarl
or
and
ljmp
shlb
xchg
xor
jbe
shlb
aaa
jne
jl
jno
add
push
sbb
fistpll
pop
aad
js
out
out
xchg
xlat
jns
lods
jecxz
sti
aad
and
xchg
arpl
in
push
jno
adc
dec
mov
lret
lods
daa
adc
jae
mov
jl
xchg
movsl
lea
adc
out
addr16
pop
push
mov
dec
rorb
orl
cmp
lcall
mov
jb
sbb
scas
pop
in
jns
cmp
push
mov
jp
ds
jbe
jo
push
inc
xchg
and
orl
outsl
or
stos
lcall
scas
maxps
dec
push
jecxz
popa
xchg
or
imul
sti
adc
mov
fsubl
enter
pop
ss
inc
cwtl
pusha
out
cmp
cmp
fcomps
dec
aas
jg
jae
inc
pop
daa
adc
les
rol
cs
mov
sbb
filds
scas
nop
push
inc
mov
xchg
pop
inc
cmpl
cmp
cmpsl
adc
adc
xchg
pop
mov
pusha
div
mov
repnz
ljmp
dec
aaa
daa
push
lahf
mov
sub
push
test
icebp
aaa
icebp
push
fs
mov
push
or
mov
sub
pop
cmp
mov
lahf
push
inc
aas
rclb
jns
push
jmp
fwait
lcall
inc
nop
mov
enter
jl
out
icebp
aaa
fsubs
into
std
cmpsl
ss
sbb
push
addr16
xchg
mov
cmp
sahf
xor
add
jp
mov
pop
arpl
arpl
xchg
cmp
pop
js
out
adc
sarl
sub
mov
pop
ljmp
sub
faddp
jmp
jle
decb
jg
sbb
mov
pop
push
ret
enter
test
popa
mov
loopne
in
cwtl
mov
add
sbb
xlat
push
xchg
mov
inc
adc
xor
movl
cmpsl
fwait
test
xor
inc
into
dec
mov
mov
cmpsl
adc
inc
insl
std
imul
mov
data16
icebp
adc
sbbb
pop
dec
ss
in
insb
popf
ret
cltd
xor
mov
mov
int3
and
rcrb
mov
mov
lea
and
push
adc
test
mov
and
inc
cmpsb
rorb
mov
shrb
aas
arpl
int
jecxz
sub
mov
inc
sar
scas
dec
scas
add
addps
mov
lock
sahf
nop
sbb
imul
pop
bound
jg,pt
enter
test
mov
and
lahf
sti
imul
push
xchg
pusha
inc
iret
clc
dec
cmpsl
int3
sub
sbb
ret
dec
fcmovbe
bound
lods
out
xor
pushf
pushf
cmp
mov
aaa
mov
push
insb
out
lcall
jno
push
pushf
push
adc
sti
loope
inc
cwtl
leave
sbb
stc
sti
in
icebp
inc
cmpb
push
xchg
mov
popf
pop
mov
dec
mov
adc
lds
cmc
out
xchg
fs
das
into
enter
pop
popa
and
ror
lcall
stos
xchg
inc
mov
push
popl
mov
scas
nop
mov
lods
inc
mov
and
mov
push
mov
dec
out
push
pop
mov
gs
and
incb
lcall
test
cli
shlb
hlt
lods
pop
in
xchg
pop
incl
push
adc
sub
inc
and
jle
xchg
int3
mov
insb
outsb
cmp
shl
pop
dec
mov
cld
clc
in
lea
mov
scas
sub
xchg
adc
sti
outsl
int
mov
cmp
cwtl
push
jno
loope
repnz
aas
xor
sbb
push
inc
xchg
shrb
fwait
pop
jnp
sbb
adc
xor
js
lret
pop
lret
xor
sahf
jb
out
adc
out
xlat
xor
in
pop
cmp
lret
mov
xor
sub
ja
dec
insl
fnstsw
rol
or
stc
or
sbb
push
in
inc
test
jmp
ss
popa
das
dec
ss
mov
cltd
insb
xchg
or
les
lret
dec
aas
mov
test
mov
push
inc
push
cmp
cmc
xlat
out
or
dec
mov
fmuls
jns
push
vorpd
in
mov
dec
movsb
fcoml
sbb
xchg
fsubp
or
sbb
repz
push
cmp
pop
stos
xor
test
add
lods
cmp
lret
in
cs
incl
adc
es
pop
cli
insl
mov
ja
xchg
outsb
hlt
xchg
aad
push
movlps
jmp
adc
dec
rep
imul
testb
ja
lret
mov
adc
jl
test
fucomip
clc
inc
mov
jne
sti
out
or
fdivrs
push
cld
test
jno
mov
cmpsb
push
sbb
cmc
js
xchg
fs
mov
sbb
les
and
push
push
shrl
and
or
mov
scas
adc
ja
clc
mov
pop
iret
push
and
mov
aad
lods
xchg
jae
inc
and
out
jbe
mov
pop
leave
dec
mov
cmp
inc
xor
push
je
mov
adc
or
stc
clc
mov
insl
inc
sahf
fs
jns
jecxz
push
leave
lret
sbb
or
imul
in
in
shufps
or
push
stc
or
icebp
jo
xchg
popf
scas
fisttps
ljmp
mov
ret
adc
std
inc
add
sbb
int3
addr16
daa
sub
testb
dec
outsl
push
mov
pop
data16
inc
and
leave
and
loopne
xchg
lods
xor
enter
dec
jp
scas
cmc
aad
lock
inc
jne
hlt
xor
xchg
push
out
mov
pop
push
bound
mov
inc
lea
sbb
xor
fwait
mov
adc
push
stc
enter
daa
cs
xchg
jns
mov
hlt
dec
mov
in
ss
mov
mov
in
sbb
cmp
adc
scas
popl
sub
sub
int3
popa
dec
ret
adc
mov
mov
movsl
das
nop
scas
mov
inc
adcb
push
inc
fstpl
jb
clc
jecxz
andb
insl
dec
add
dec
jne
sbb
xchg
fwait
in
loop
add
lea
mov
jnp
dec
xchg
cli
fxch
dec
lret
xchg
adc
lds
pushf
xchg
fwait
lcall
mov
jnp
aam
out
dec
lcall
mov
jo
js
inc
xchg
push
xchg
add
pop
mov
test
sub
xchg
jbe
int
inc
scas
mov
pop
add
add
adc
or
cli
out
push
cmp
mov
sbb
or
dec
aaa
mov
es
mov
dec
sbb
rcrl
dec
xor
call
int
push
loopne
mull
mov
data16
or
xor
cwtl
int3
test
shlb
pop
lock
adc
out
xchg
imul
rclb
inc
cld
je
fbld
jl
xlat
int
imul
popf
push
stos
jo
and
or
outsl
cmp
push
data16
inc
ds
sti
sub
in
dec
sti
inc
insl
ret
repnz
sub
into
push
dec
and
ds
sahf
xchg
xor
push
ja
push
add
ja
dec
mov
mov
dec
add
clc
sbb
cmp
stos
mov
ror
pop
push
push
fisubs
movsl
jb
adc
pop
outsb
pop
adc
pop
and
lahf
lret
dec
inc
or
cs
mov
cli
dec
outsl
sbb
stc
xor
jae
push
pop
andb
pop
or
sbb
jmp
aas
jmp
mov
ljmp
xchg
jno
mov
xchg
insl
les
jg
jecxz
pop
adc
add
pop
aad
mov
leave
jmp
call
das
test
xchg
sbb
cltd
mov
dec
mov
nop
xor
sti
jne
mov
dec
outsl
adc
iret
push
pop
push
lods
or
fs
xchg
or
sti
out
mov
sbb
sbb
xchg
sub
stc
mov
or
aas
dec
sub
mov
jnp
or
dec
loope
xchg
lds
cmc
push
lds
mov
jo
sub
xor
sbb
pop
jp
add
scas
jle
lods
aad
add
repz
test
mov
pushf
outsb
adc
and
pop
nop
pop
inc
je
clc
iret
dec
je
mov
leave
dec
or
into
mov
inc
mov
inc
rol
les
dec
mov
fdivrs
fnstenv
sbb
jmp
add
aas
dec
inc
repnz
lods
aam
sub
mov
in
adc
push
or
jo
cmp
ret
in
aas
scas
imul
lahf
jmp
inc
stos
arpl
inc
lret
add
dec
cmp
sub
shrl
and
icebp
loopne
je
mov
xchg
jmp
inc
lods
pop
adc
sub
add
xor
dec
addr16
int3
ss
lret
insb
lods
roll
insb
fistps
xor
nop/reserved
push
cmpsb
sarl
sahf
and
addb
popf
add
js
sbb
mov
add
int
repnz
int
cmpsb
loop
pop
out
mov
jle
ficoms
mov
pop
cmp
cmp
push
aas
gs
mov
dec
ret
pop
lahf
jp
incl
lock
fdivrl
push
insl
jp
push
clc
imul
mov
push
loope
mov
mov
mov
cltd
outsb
or
loop
popf
and
loopne
or
fcomps
mov
or
cwtl
mov
arpl
or
jmp
push
or
lcall
insl
shl
xchg
adc
mov
mov
pop
pop
cmp
inc
push
adc
cwtl
mov
data16
test
xchg
and
insb
cmp
in
sbb
jb
mov
dec
aam
cmp
mov
in
jecxz
push
fcmovnbe
mov
mov
sti
pop
imul
mov
or
cmp
aad
shll
xor
xchg
xchg
xchg
mov
xor
ja
mov
das
hlt
sbb
mov
and
xor
xchg
stos
jae
push
into
lret
mov
and
cmc
xorl
add
sti
cld
xchg
mov
test
int
adc
mov
pop
lea
pop
xor
bound
fs
test
test
sub
mov
push
in
fstl
mov
xor
mov
mov
int
pushf
mov
loope
scas
in
xchg
jb
js
adc
or
sbb
cltd
mov
imul
ss
jo
jle
sti
xchg
ljmp
sbb
enter
inc
stos
adc
sub
push
inc
icebp
nop
test
js
test
jge
in
jnp
push
fistl
xchg
fdivrl
cmp
or
pop
ret
and
gs
sub
pop
pop
sub
push
inc
out
inc
hlt
push
cmpsb
arpl
inc
repz
lock
lds
add
xor
fs
lea
leave
movsb
or
sti
push
xchg
sbb
packssdw
cwtl
cwtl
pop
mov
jle
sub
jmp
popa
gs
push
push
pop
or
pop
mov
mov
insl
insl
out
xchg
out
dec
leave
cmp
stc
fsubl
jbe
sbb
dec
jns
cmpsb
hlt
mov
lret
aaa
cltd
and
shrb
in
data16
imul
rorb
xor
mov
stos
mov
jle
adc
jg
addr16
cmp
or
push
xor
sub
sahf
dec
dec
pop
out
or
mov
adc
ja
testb
add
xchg
jge
mov
pop
lods
aad
xor
call
mov
int
jp
adc
int3
sahf
sbb
pop
mov
adc
xchg
lock
adc
fcoms
popf
in
mov
cmp
loop
add
test
stc
sbb
mov
sarb
mov
clc
adc
cltd
inc
fimuls
cmc
adc
push
shll
cmpb
sub
ret
or
add
or
add
out
sbb
and
xor
jbe
mov
xor
sti
addr16
jp
xor
xorl
mov
adc
data16
mov
shrb
cmp
or
stos
cs
movb
xchg
call
rorl
fldt
or
or
dec
add
aas
cmp
add
fs
inc
hlt
into
sub
adc
xlat
inc
jo
mov
call
cs
imul
pushf
pushf
cmp
mov
pushf
int
inc
xor
scas
mov
mov
das
sub
cmp
jne
repz
mov
lods
bound
and
push
test
shrb
sub
pop
pusha
fwait
or
test
std
pusha
ret
jl
cs
xchg
or
ret
clc
jmp
xchg
xor
fs
sbb
xor
cli
mov
jge
fistpll
pop
and
mov
scas
jg
les
ret
mov
loop
xchg
xchg
fisubs
fstl
adc
cmp
xor
mov
xor
jmp
fstps
sub
inc
add
add
mov
lds
andb
pop
sbb
lret
stos
sti
adc
imul
rol
push
mov
push
fstpt
and
jl
sahf
add
mov
mov
std
jmp
mov
sahf
push
jecxz
loopne
mov
call
inc
sbb
stos
bound
fcmovne
aaa
movsb
sbb
ds
adc
xchg
add
push
icebp
out
jp
and
adc
repnz
popf
inc
fwait
dec
shrl
jg
ret
push
ljmp
mov
imul
or
lret
fsub
adcb
insb
test
pop
sahf
std
xchg
xchg
xor
jle
scas
mov
dec
adc
mov
or
scas
mov
bound
sub
cmp
ja
pushf
pop
and
test
int3
inc
ss
jmp
stos
jb
xor
out
outsb
mov
cmp
cli
mov
loopne
lahf
lea
movl
mov
jg
test
into
jge
cmp
test
cs
test
outsb
push
add
into
lcall
lahf
mov
ss
test
inc
mov
or
jmp
push
xchg
stc
pop
mov
setne
add
sub
dec
xchg
data16
pop
push
push
cmpl
int3
stos
das
fstl
add
xor
push
inc
push
mov
arpl
jno
popa
aaa
lret
mov
adc
cmp
dec
mov
test
dec
incb
inc
xchg
enter
fs
push
in
inc
xchg
aas
jp
push
xor
iret
addb
pop
shr
int
subl
sbb
stc
mov
rcrb
cld
shl
pop
dec
mov
mov
test
hlt
shll
arpl
adc
and
je
aam
orb
and
inc
aad
fldt
mov
push
sarl
mov
out
and
movsb
das
mov
je
xor
cld
pop
stos
call
inc
sbb
xchg
fbld
test
inc
jo
jmp
out
jecxz
push
sub
jmp
mov
xor
leave
mov
mov
pop
out
inc
add
call
out
sub
mov
jecxz
call
popa
stos
push
divl
fidivrs
inc
inc
movsb
push
clc
scas
test
aas
add
pop
imulb
in
xchg
lock
sbb
inc
sbb
push
sub
clc
out
lock
clc
xchg
cmp
xchg
xchg
pop
or
loop
pop
push
jge
les
push
dec
or
inc
dec
daa
outsb
aam
lcall
subb
mov
mov
scas
std
jns
out
mulb
xchg
push
data16
lods
jo
lock
sbb
les
fnstenv
shlb
cwtl
lcall
scas
in
lds
cs
bound
cmpsl
call
xlat
bnd
xor
popa
test
or
jle
testb
mov
in
mov
adc
inc
imul
xchg
hlt
mov
shll
jno
lea
pop
mov
jp
jmp
inc
int3
cmp
sub
shl
or
cmp
and
inc
mov
add
sub
push
push
xchg
daa
leave
fmul
mov
xchg
fs
cmc
dec
outsl
popa
xor
dec
loop
out
cmp
mov
inc
mov
loopne
xor
add
cs
jo
push
sub
hlt
xor
stos
xchg
cli
inc
test
popa
sub
push
and
pop
sub
sub
dec
jns
xchg
cwtl
movsl
mov
cmp
fdivrl
aad
push
rorb
xchg
testl
xor
test
mov
stc
mov
icebp
ret
pop
js
sbb
ja
cmpsb
mov
push
pop
xor
push
or
mov
mov
mov
inc
pusha
jg
fs
test
mov
cs
push
lret
mov
and
ljmp
sbb
mov
rclb
cmp
inc
out
jmp
popf
ret
test
mov
push
lcall
repnz
jmp
scas
adc
scas
jns
adc
push
shrb
mov
in
ss
mov
movb
xchg
test
leave
inc
dec
aam
insl
sbb
sahf
mov
test
in
inc
adc
stos
fisttpl
sbb
je
jns
and
mov
push
arpl
shlb
dec
shlb
fldt
xchg
lret
and
pop
xor
cmp
lret
fistl
sbb
push
push
repnz
fwait
pop
push
insb
inc
mov
mov
pop
dec
inc
lea
movsl
xor
bound
mov
arpl
mov
adc
lea
rcll
divb
fstl
mov
push
mov
sub
push
add
and
fadds
push
jg
arpl
int3
push
push
and
test
scas
sub
mov
mov
and
push
push
icebp
ja
ja
sub
cmp
push
xor
repz
and
mov
ss
xor
dec
bound
loope
add
pop
or
jo
and
inc
std
add
sub
inc
xchg
lds
jmp
insb
loop
movsb
repz
dec
cmp
xor
jne
jle
sub
popa
leave
outsb
jne
dec
fcoms
rorl
inc
pop
mov
icebp
jecxz
xchg
or
cwtl
adc
fistps
push
mov
cwtl
call
ss
push
jne
mov
bound
iret
imul
inc
lcall
filds
in
and
or
fdivs
test
or
cmp
movsb
imul
and
push
cmp
pop
bound
jg
dec
inc
mov
movsl
mov
outsl
sub
scas
call
lock
std
pop
or
icebp
out
adc
sahf
mov
dec
mov
rcll
mov
pusha
fwait
loope
fimull
icebp
aaa
sbb
imul
negb
push
cwtl
ss
push
adc
imul
pusha
dec
adc
rcrb
push
data16
push
push
mov
mov
das
scas
ret
es
test
xchg
adc
xchg
je
xor
push
and
push
imul
jno
or
lret
cmp
out
add
mov
ret
ljmp
and
xor
mov
mov
inc
pusha
rcrb
cmpsb
push
test
push
mov
insl
xchg
hlt
xor
push
xor
pop
imul
or
in
jmp
jb
wrmsr
rcrl
lods
popf
lods
xchg
or
fidivrl
adc
int
push
xchg
mov
lcall
stc
icebp
lret
ja
imul
jne
mov
jle
jmp
add
or
lods
ds
nop
push
mov
scas
bound
insl
add
push
movb
and
add
sbb
mov
push
adc
mov
addl
and
adc
std
sbb
add
cmpsb
les
and
mov
xchg
inc
enter
dec
insb
cmp
mov
cmpsb
mov
aaa
pop
in
shrl
in
push
shll
test
std
int3
pop
arpl
lahf
mov
adc
mov
stos
push
cmpsb
sub
aam
ret
les
loopne
mov
mov
push
lock
xchg
leave
mov
cmc
xchg
push
rorb
cwtl
ljmp
sbb
sahf
mov
lods
or
fdiv
push
ss
bound
cmp
into
adcb
lcall
jle
clc
pop
sub
inc
mov
daa
shll
dec
imul
xchg
cs
xchg
push
and
lea
add
xor
shll
les
sarb
mov
in
mov
es
push
popf
adc
in
pushf
leave
sbb
loope
or
pop
repnz
xchg
mov
cld
inc
cmp
testb
fwait
je
pop
repz
mov
stos
dec
fistps
xchg
das
into
add
xchg
jo
add
mov
add
fdivs
mov
movsb
pop
test
mov
sbb
lret
les
sub
push
sub
dec
mov
std
in
bound
xchg
mov
and
mov
cmpsl
mov
cli
sub
scas
es
jns
mov
repz
popf
inc
mov
enter
cmp
add
mov
inc
rolb
mov
adc
inc
cltd
pushf
repz
and
and
loopne
loope
mov
mov
adc
hlt
ret
fldenv
mov
dec
mov
or
pop
loope
call
pinsrw
lods
inc
xchg
pop
push
ret
sub
mov
clc
loop
lret
cld
inc
sarl
std
xchg
mov
sbb
jmp
sbb
int
fcoml
shll
out
cmpsb
loope
sbb
fistpl
test
and
sub
int3
xor
int3
or
mov
repnz
fiaddl
inc
cmp
mov
pop
or
sub
into
mov
nop
scas
scas
xor
mov
mov
sbb
mov
sbb
icebp
jne
bound
lret
arpl
in
les
repz
addr16
mov
sbb
loopne
enter
adc
xor
add
push
movsb
mov
add
pop
lcall
stc
loop
mov
mull
nop
call
repnz
jbe
fnstsw
pop
jmpw
jle
sahf
and
ljmp
dec
fmul
lock
push
scas
nop
ret
sub
ficoml
mov
sub
push
dec
push
cmp
iret
fwait
mov
lds
and
jbe
pushf
jg
gs
mov
xchg
inc
jo
xchg
out
inc
push
movsb
mov
mov
xchg
mov
hlt
sub
outsb
lods
jnp
aas
out
inc
call
pop
jno
sub
xchg
rcrb
ljmp
mov
in
sub
ds
xchg
xorl
push
call
aam
jmp
or
daa
jb
mov
jge
push
popf
jmp
and
push
mov
sub
hlt
ljmp
adc
out
jmp
add
inc
cmc
arpl
test
lea
mov
popa
jmp
orl
ficompl
lods
sub
dec
xchg
leave
xor
pop
mov
push
mov
sarb
jae
xchg
or
xor
xchg
data16
imul
cmc
cmp
mov
push
cmp
ret
imul
push
out
adc
and
jne
repnz
notb
fcoms
std
ds
mov
cmpsl
imul
jo
movd
dec
mov
fstl
movsb
push
push
cmc
aas
test
push
in
inc
fistl
fsubs
and
dec
mov
lds
mov
inc
push
test
inc
pop
in
cmpsl
ds
cli
and
mov
std
into
test
mov
jecxz
jp
xchg
repz
int3
imul
and
mov
in
cltd
sub
dec
dec
xchg
nop
fs
push
xchg
push
stos
fistpl
outsl
dec
jbe
in
hlt
xchg
xchg
enter
negl
in
cmc
out
dec
xor
mov
icebp
dec
cmp
dec
cld
rclb
clc
iret
mov
mov
out
inc
bound
lcall
mov
test
inc
fistpl
dec
xchg
add
cmp
xchg
mov
push
dec
dec
call
cwtl
adcb
mov
ret
mov
aas
mov
into
hlt
pop
pop
leave
xor
xchg
mov
dec
add
cmp
ss
ss
dec
mov
pop
xchg
jbe
xchg
adc
roll
dec
out
test
not
cmp
inc
cmp
je
lds
scas
dec
mov
cmpsb
jge
rorl
dec
sbb
insb
loop
adc
add
ljmp
andb
ljmp
mov
inc
jo
add
adc
push
mov
scas
stos
or
mov
shlb
cld
lret
aas
xchg
insl
sti
and
sub
jae
mull
stos
fdivs
add
ficomps
mov
add
insl
or
cld
pop
add
ds
xchg
pusha
dec
stc
cmp
mov
xchg
lret
cmc
pushf
repz
cli
cltd
and
jl
cmp
test
call
shll
ds
idivb
cmp
cmp
jmp
xor
and
test
out
or
push
sbb
dec
inc
push
arpl
xchg
adc
out
xor
nop
daa
nop
jb
cmpsw
filds
sbb
in
cli
sbb
mov
orb
shlb
dec
test
test
sti
sub
shlb
movsb
or
push
lret
testb
dec
or
in
stc
sub
jo
int3
aaa
cwtl
sbb
pop
cli
mov
lea
adc
loop
inc
sbb
jmp
and
lea
cltd
mov
jae
repz
jp
push
mov
mov
cmp
js
dec
cmpsb
add
les
mov
cwtl
pop
loop
push
cld
xor
jecxz
xchg
xrelease
sub
cli
and
xor
xchg
sbb
shrl
stos
jge
pop
adc
aad
adc
fdivr
jl
jne
mov
mov
xchg
mov
out
stos
sub
pop
pop
xor
das
xor
dec
mov
push
out
data16
pop
popf
popa
ss
or
es
xor
dec
push
bound
int
dec
loop,pn
movb
sbbb
xor
scas
or
sahf
int
cmp
sbb
mov
pop
lret
sub
ja
mov
push
sub
loope
xchg
or
or
daa
dec
cwtl
add
sarb
lock
shll
test
inc
in
ja
jbe
stos
adcl
add
rolb
push
test
jns
pop
je
ror
pushf
or
mov
out
push
xor
sti
pop
loop
dec
push
mov
mov
xor
mov
aas
add
pusha
iret
pusha
sub
imul
ljmp
gs
mov
imul
inc
mov
outsl
leave
push
jns
adc
jl
mov
inc
dec
scas
out
test
fsubr
jle
add
cs
aaa
mov
push
sub
jno
sbb
cmp
and
in
dec
into
popa
push
mov
rorb
and
xor
out
jl
mov
jnp
sbb
scas
pop
fistpll
lock
sbb
inc
pop
sbb
adc
lock
cld
mov
mov
xchg
pop
xor
xchg
das
lds
mov
pop
mov
hlt
mov
push
iret
sti
dec
gs
ljmp
insb
inc
cmpsb
adc
sub
lods
in
ljmp
xor
cmp
popf
in
add
arpl
mov
push
xchg
and
mov
add
pop
push
push
mov
dec
aad
call
jecxz
ror
sub
cmp
rol
mov
mov
jbe
push
popa
cld
ds
inc
and
mov
add
movsl
outsb
pop
or
pop
std
orl
repnz
pop
addr16
or
js
ds
insl
rolb
aaa
icebp
cld
movsb
icebp
insl
mov
fs
test
pop
push
or
fwait
je
or
and
rorl
jbe
jmp
inc
es
pushf
pop
cmp
stos
iret
sbb
jg
and
add
sbb
daa
push
fcmove
pusha
leave
cmp
in
je
cmp
cli
std
sbb
sub
js
scas
xor
shr
dec
inc
in
fcmove
sub
out
sbb
or
xor
data16
movsb
aaa
xorb
fiadds
outsb
pop
lods
xor
iret
pop
mov
push
xchg
out
cmp
popa
aaa
add
mov
sub
cltd
rorb
movsl
jno
inc
mov
mov
cltd
into
movsb
dec
daa
xchg
idivb
movsl
pop
aas
ret
addps
sub
nop
xchg
clc
jbe
in
pop
icebp
nop
imul
aam
shlb
jcxz
sub
sbb
sbbl
jle
pusha
cmpsb
mov
jg
dec
sub
les
jecxz
popa
imul
pop
jne
aas
ret
popf
xchg
push
xchg
out
push
and
mov
leave
flds
mov
mov
mov
decb
xor
aam
pop
stc
in
dec
and
insb
fimuls
popa
pushl
cwtl
xor
inc
imul
ret
aas
sbb
jmp
xchg
mov
mull
jne
pushl
lods
push
lcall
lcall
scas
iret
shrl
pop
loop
xchg
test
and
js
mov
pop
sub
sahf
xchg
fwait
cmp
mov
xor
sahf
icebp
fidivl
mov
pop
fcmovb
repz
jmp
fldl
inc
pop
stc
xchg
jne
insl
pop
ds
add
sbb
xor
popa
jle
ret
sub
mov
pop
cmp
xor
out
dec
fdivs
and
fists
lahf
rcll
aam
dec
cmp
cmp
push
mov
mov
xor
jnp
xor
pop
sbb
add
aaa
sub
and
inc
mov
sbb
iret
or
ffree
ljmp
jae
lock
sbb
xchg
nop
add
adc
pushf
arpl
jbe
dec
aas
sbb
pop
enter
add
pop
dec
shll
hlt
pushf
mov
fists
out
xchg
push
les
mov
scas
repnz
mov
push
push
mov
or
dec
out
push
out
mov
mov
scas
imul
cmp
fnop
sub
adc
mov
jb
inc
mov
mov
push
lds
inc
jmp
sbb
stos
sarl
fdivrl
dec
repz
xchg
and
loopne
xor
jo
xor
aad
movsl
pop
or
lea
hlt
pop
sbb
fdivrs
negb
push
sub
insl
add
ret
mov
pop
dec
leave
xchg
int3
mov
cmp
insb
repz
test
add
fsubs
add
mov
cmp
sti
stos
bound
push
clc
xchg
xor
push
andl
push
rolb
jmp
insb
mov
imul
push
insb
je
imul
dec
xchg
dec
std
setne
lret
sbb
out
sbb
ret
je
aad
adcb
gs
adc
mov
in
dec
push
add
add
loope
mov
out
jno
sbb
sub
pop
aam
sub
ud0
cwtl
roll
in
sub
xchg
mov
lods
das
mov
mov
or
mov
inc
out
pop
inc
add
test
ret
add
pop
out
insb
pop
sbb
dec
push
adc
sub
cli
arpl
xorb
add
outsl
es
iret
fidivrl
loop
aad
cltd
mov
add
mov
lcall
ret
inc
and
insl
pop
push
push
iret
xchg
jg
in
bound
stc
xor
movsl
inc
xor
aad
xor
shrl
ljmp
pop
mov
daa
vmwrite
mov
and
mov
xor
lcall
cmpsb
inc
or
fistpl
pop
fbld
sub
cmp
arpl
mul
aam
std
adc
xchg
xor
rorl
pop
decb
iret
sbb
adc
pop
xlat
in
test
insb
lods
xlat
xor
outsb
shrl
ja
loop
push
xchg
loopne
lods
rol
cld
lret
add
jo
dec
pop
push
fndisi(8087
push
loop
aad
mov
pop
xor
lea
push
or
inc
mov
mov
xchg
mov
lods
xor
subb
or
insl
aam
adc
sub
mov
das
cmp
test
hlt
mov
test
ja
sbb
push
rcll
popf
mov
clc
decl
pusha
std
mov
jns
jecxz
add
aad
rcrb
inc
jecxz
adc
loop
pop
insl
xor
fiaddl
test
fcmovne
ss
nop
lea
lds
test
jno
aaa
lret
int
lds
movsl
js
into
lcall
push
mov
add
mull
dec
into
ljmp
mov
pop
push
push
mov
mov
inc
fwait
add
jne
rcr
dec
daa
test
je
ja
fwait
cmp
leave
test
mov
dec
mov
jl
jbe
je
add
add
xor
cmpsb
fldenv
dec
inc
jmp
les
inc
xchg
repnz
cwtl
insl
cmp
dec
sbb
data16
pop
cmp
inc
js
cwtl
lea
test
lcall
das
das
inc
outsl
push
mov
dec
in
dec
mov
cmpsb
mov
daa
sbb
jecxz
sbb
and
push
loope
loop
push
ss
jo
push
call
dec
movsl
pop
add
mov
mov
sbb
lea
xchg
cmp
adc
push
repz
mov
push
mov
rcll
jne
int3
xlat
push
mov
inc
sub
or
and
push
mov
dec
adc
out
jne
cld
and
xchg
aam
xor
dec
xlat
mov
or
stc
xchg
cmp
inc
mov
adc
mov
outsb
fdiv
adc
adc
cmc
shll
shrb
lods
cmp
je
jb
inc
cs
andb
sub
outsb
lret
fistpll
dec
jle
inc
mov
xor
jl
jecxz
scas
mov
xor
cmp
test
dec
xchg
ss
sbb
addr16
dec
out
shll
sarl
mov
or
cli
fldl
or
dec
stc
sub
sbb
shl
dec
jecxz
clc
mov
ret
inc
cmc
test
cmp
xor
sbb
mov
bnd
push
push
ja
fucomip
icebp
js
stos
divb
ljmp
add
xor
and
mov
je
aad
sub
sub
cmp
clc
test
iret
mov
cmp
loopne
sahf
adc
xor
fbld
xchg
mov
vpshufhw
stc
jne
xchg
cs
sti
addr16
and
and
xor
mov
cmpsl
and
xor
or
xchg
push
add
mov
loop
xlat
mov
rcll
and
loopne
push
fwait
pop
cmovo
sar
imul
sbb
add
data16
mov
into
xlat
rcll
xor
in
mov
xor
out
sahf
dec
mov
mov
xor
and
loop
xchg
rolb
cmp
fs
jg
pop
jge
mov
sbb
repnz
aas
pop
pop
roll
push
ror
jmp
lret
or
push
xor
mov
movb
sbb
test
lds
fcomps
divl
jns
cmp
fdivrp
pop
push
ljmp
jno
add
xchg
cmpsb
mov
imul
test
cmp
inc
stc
mov
lahf
mov
es
test
add
in
adc
pop
dec
insl
jp
or
jecxz
mov
adcb
cmp
mov
cmc
xchg
dec
les
mov
mov
icebp
out
flds
loopne
or
or
cmp
push
lret
mov
ret
clc
outsb
in
xchg
xchg
mov
or
enter
xchg
or
cmp
xor
mov
mov
out
inc
cmp
pop
push
bnd
cltd
lock
or
lahf
into
loop
mov
out
gs
dec
sub
and
lea
cmpsb
xlat
pusha
dec
loopne
fisubs
dec
adc
addr16
jmp
sub
xor
xor
ljmp
jge
cld
and
mov
adc
enter
xchg
aaa
inc
xchg
sbb
aaa
loope
cli
stc
aam
add
or
xchg
and
dec
fistl
push
daa
add
aad
jecxz
pop
in
xchg
lds
shrl
mov
flds
ja
or
dec
push
push
outsb
lods
incl
and
jo
mov
lahf
jns
ljmp
xchg
cwtl
pop
subl
data16
call
mov
pushf
mov
rclb
jmp
gs
push
lock
addb
or
jne
jae
dec
lock
push
bound
jle
mov
mov
sub
and
data16
dec
mov
dec
pop
ljmp
subb
xor
cmp
scas
jb
sub
fimull
and
lret
jnp
lds
int
dec
mov
lret
sub
inc
sub
cmp
sbbb
mov
sbb
sahf
or
push
out
testb
and
out
lds
test
jo
cmpb
flds
dec
dec
es
mov
jp
imul
inc
xor
and
out
xlat
scas
in
sbb
add
push
dec
cmpsl
mov
daa
xor
sbb
mov
jg
aas
cmp
and
mov
mov
mov
xchg
pusha
mov
imul
xchg
push
jns
cld
stos
jno
adcb
adc
sbb
mov
pop
imul
pop
ja
and
addr16
or
and
js
xor
dec
lock
xchg
xlat
add
or
jns
mov
pop
mov
xor
lods
jne
inc
ret
push
lret
int3
fsubr
jbe
jno
add
cmp
pop
cmp
jns
loop
mov
push
fisttpl
aas
jmp
sbb
int3
and
dec
stos
adc
pop
jmp
cli
inc
cmpsb
mov
adc
ret
mov
fdivrs
xorl
daa
scas
sbb
xor
stos
inc
cmpsl
add
jb
adc
push
lret
test
fstpl
xchg
cmc
dec
inc
push
mov
cmp
adc
cmpsb
fisttps
jno
cmc
xchg
jne
and
pop
mov
mov
push
bound
cmp
lods
pop
xchg
aaa
and
stos
xchg
fimuls
arpl
lret
lret
addr16
mov
pop
mov
inc
mov
jb
pop
dec
mov
daa
push
jmp
jo
jo,pn
mov
adc
jae
les
ss
lds
in
gs
mov
jg
xchg
loop
push
inc
jnp
aaa
outsb
std
rolb
fstps
cwtl
mov
sysret
jg
add
mov
pop
sub
mov
in
ret
aam
sbb
jp
mov
add
jl
sub
arpl
mov
jbe
out
bound
fwait
out
lret
shr
dec
int3
popf
loopne
js
mov
or
pushf
xor
mov
mov
fimull
cmp
stos
mov
adc
mov
into
adcl
test
add
movsb
insl
sbb
arpl
test
fisttpll
or
int3
sub
jp
out
into
jb
mov
mov
pop
insl
mov
sub
pop
rolb
adc
or
pop
or
outsb
dec
pop
mov
test
jmp
orl
push
pusha
push
pop
test
jns
aaa
inc
push
pop
push
sub
pand
es
hlt
pop
and
int3
mov
or
sub
jns
cmpsl
cmp
inc
outsl
jl
add
stos
ljmp
pop
ja
sbb
ret
jne
je
lahf
ret
lock
nop
and
inc
insl
dec
mov
std
cmp
add
dec
hlt
sbb
mov
xor
je
lahf
dec
imul
xchg
push
and
je
fcmove
cmpsl
pusha
hlt
lds
dec
mov
test
insb
xchg
adcb
xchg
andl
xchg
cld
push
cmpsb
popf
stc
lods
daa
mov
and
fs
or
sbb
daa
sub
pop
dec
adc
adc
sub
and
adc
andl
sti
scas
popw
and
movsl
jno
gs
sahf
xor
or
roll
scas
leave
call
jb
leave
or
andl
insl
fwait
cmp
and
out
cli
into
pop
icebp
jae
add
or
mov
xlat
fisubrl
sub
inc
inc
xchg
push
mov
out
int
jbe
cmc
jae
push
in
sub
test
pusha
sbb
mov
repz
mov
ljmp
push
sub
les
pushf
ja
dec
cld
sub
in
sbbb
sub
int3
les
ret
rclb
shl
nop
sti
aad
scas
dec
jns
xorl
lret
push
aam
frstor
xchg
ficompl
jno
adc
mov
dec
scas
lcall
pop
ret
xor
adc
push
imul
pushf
inc
ftst
mov
xchg
aad
pop
add
push
push
cmp
shll
add
xor
adc
mov
cmpsb
add
sti
adc
cmc
jg
rclb
imull
adc
lret
mov
jmp
int3
xchg
int
inc
push
out
jge
cmp
jmp
lock
test
test
mov
or
jle
adc
lret
in
inc
xchg
push
dec
xchg
ret
cmp
add
insl
push
or
sbb
rol
fisttpll
dec
hlt
mov
pusha
or
sbb
rcll
jnp
cmp
movsb
mov
int
mov
push
in
out
and
pop
adc
ljmp
mov
call
jo
dec
sub
cmc
mov
adc
in
jg
inc
les
out
int3
or
and
es
lret
add
mov
sub
mov
mov
cmp
jg
fdivr
jns
or
gs
out
iret
jnp
inc
out
mov
inc
lcall
add
dec
xchg
shrl
push
cmc
or
sti
fxch
out
or
rorb
push
sbb
enter
fcompl
sub
xor
jmp
mov
les
cltd
push
shlb
add
mov
lds
loop
mov
ljmp
mov
jae
dec
loop
push
insl
mov
cwtl
sub
mov
adc
sbb
stos
adc
jnp
in
mov
lahf
jge
xlat
mov
into
jae
in
xor
lahf
push
sbb
outsb
pop
mov
outsl
mov
rcrl
mov
inc
mov
or
cwtl
fs
rol
inc
inc
pop
movsl
outsb
subb
cs
dec
add
jle
cmpsl
adc
pushf
push
push
mov
xchg
cmpsl
mov
xchg
cs
mov
into
clc
sbb
xchg
jmp
mov
or
pop
popa
dec
enter
cmc
fs
cmpsb
xchg
jg
test
hlt
push
jno
test
out
cmp
jnp
lret
fcomi
ja
sbb
push
es
jg
xchg
ret
or
aas
and
sub
mov
repnz
push
xchg
and
and
repz
mov
cltd
scas
stos
cmp
in
or
call
addr16
jo
jmp
in
or
mov
mull
push
mov
dec
xor
mov
add
dec
ret
mov
out
lahf
and
mov
jle
pop
jp
jb
cmp
push
mov
rorl
push
pop
loop
lahf
stc
jbe
das
jg
pop
ss
ljmp
push
mov
inc
dec
sbb
add
out
aad
add
jae
cmc
pop
mov
cs
inc
push
loope
adc
sbb
mov
xchg
sbb
stos
lret
push
fwait
and
mov
xorl
jno
cmp
push
jl
add
jo
xchg
sbb
insl
gs
adc
je
xchg
or
test
mov
pop
or
filds
sub
dec
or
mov
cmp
lea
adc
addr16
outsb
test
nop
lock
or
or
xchg
rcll
jl
int3
push
mov
or
cmpl
lahf
fsubrs
je
dec
sub
push
push
cmpsb
jmp
sub
cltd
clc
sub
or
aad
icebp
outsb
or
leave
mov
cmp
in
mov
loope
push
test
mov
pop
xchg
adc
jns
sti
loope
lods
cmp
jae
jg
mov
inc
xor
scas
jns
push
jle
sbb
jae
lods
xlat
mov
cwtl
fs
dec
lds
movsl
jl
sbb
sti
rol
lret
or
ret
rcl
fimuls
stos
mov
xor
out
data16
xchg
pop
das
sub
mov
xlat
jecxz
and
mov
xchg
mov
cmp
movsl
in
xor
pop
loop
sbb
or
nop
pop
or
xchg
jg
inc
adc
push
lret
pop
mov
dec
lea
adc
icebp
lock
int
mov
xchg
xorl
test
push
mov
adc
popf
push
es
rol
push
das
out
mov
pop
ret
fwait
popa
jge
mov
je
aam
aad
daa
mov
add
std
dec
or
mov
mov
push
fiadds
xchg
insb
aam
sbb
add
out
mov
sbb
sbb
jmp
out
xchg
xor
insb
andb
push
cs
mov
shll
adc
stc
cmc
bnd
aad
movsl
fsubrs
aas
aad
popw
mov
out
adc
inc
pop
push
lods
adc
daa
pop
lods
dec
xchg
into
sub
sub
stc
int3
pop
lea
lds
loope
clc
mov
add
mov
js
rcr
push
cmp
clc
popa
sub
subb
and
ljmp
shll
adc
rcll
out
sub
mov
stos
fs
mov
pushf
sub
mov
lods
adc
das
movsb
mov
mov
xchg
push
inc
jno
mov
inc
test
push
gs
lret
or
dec
inc
sti
and
sbb
popa
ljmp
pop
pushf
add
sub
imul
dec
sbb
pushf
lcall
mov
lods
add
mov
je
adc
sub
push
popf
xor
fyl2xp1
inc
inc
scas
inc
je
clc
adc
dec
fadds
in
xchg
leave
fs
cmpsl
cmp
jp
jbe
inc
cld
or
std
jecxz
mov
stc
daa
ret
jae
insb
subl
lock
ja
mov
lahf
pop
mov
imul
fmul
and
cwtl
aad
je
and
fsubrl
push
xor
fisttpll
xor
inc
into
dec
adc
pop
mov
je
call
mov
adc
fildll
push
pop
lret
sti
jle
mov
cs
jg
decl
loop
aad
jo
sbb
inc
lret
mov
js
pop
dec
xchg
cwtl
mov
sub
sbb
sbb
mov
dec
mov
stos
test
xor
out
ljmp
add
hlt
jp
negl
callw
jle
lret
jmp
adc
call
pop
lds
in
sbb
insl
out
lcall
aas
test
sahf
add
sub
and
mov
imul
and
mov
mov
pop
sbb
das
sbb
jae
cmpsl
lods
arpl
enter
push
mov
orl
movsl
es
sbb
mov
lcall
dec
test
sub
xor
lret
fadds
subb
adc
jo
inc
bound
outsb
sub
xchg
in
movlps
in
xor
xchg
gs
push
jae
fiaddl
mov
dec
dec
iret
mov
int
lods
lods
xchg
aas
sbb
loop
hlt
sbb
push
cltd
sbb
lret
or
dec
cmp
sub
pop
xchg
sbb
ds
or
adc
mov
push
xchg
cld
sub
cld
push
xchg
hlt
je
cli
out
loopne
mov
fildll
dec
adc
mov
in
push
hlt
popf
sbb
push
add
adc
jmp
lahf
dec
dec
sub
dec
push
mov
inc
add
stos
es
test
jg
cmp
push
jns
out
cmp
jbe
xchg
sahf
inc
popf
cmc
dec
idivb
aas
pop
std
gs
cli
push
pop
inc
and
xchg
fwait
xor
lret
mov
ret
or
jge
aad
dec
dec
sarb
cmp
fwait
and
xchg
not
push
fistl
ds
jle
xchg
cmpl
mov
inc
insb
push
data16
xor
std
scas
xchg
push
or
pop
mov
in
mov
loop
push
mov
jb
or
dec
mov
jbe
in
mov
mov
mov
stos
inc
hlt
popa
pop
fnstsw
push
out
imul
jno
dec
mov
adc
mov
mov
mov
cmpsl
add
js
aad
es
in
frstor
pop
outsb
inc
cmp
pop
inc
fcmovnu
enter
jb
xchg
push
loopne
adcb
dec
mov
test
rorl
aad
popa
pop
adc
fcom
sbb
jae
imul
leave
stc
aad
mov
jp
ret
jo
outsb
stos
mov
sarb
jb
and
jne
mov
cwtl
jp
push
pusha
sub
xor
fldz
cs
insb
jne
leave
out
add
inc
test
sub
mov
jno
cmp
jo
push
fildl
pop
push
add
adc
scas
mov
push
cli
into
jnp
fst
pushl
sbb
ret
adc
mov
or
cmc
dec
in
sbbb
pop
adc
repz
lahf
add
mov
stc
dec
cltd
jb
movsb
xchg
outsb
rcl
xor
sarb
aas
test
repz
loop
xchg
sub
stos
push
and
mov
jge
jno
mov
jl
pop
push
sbb
jo
movsl
add
sbb
jmp
jns
inc
sbb
mov
je
movsl
leave
out
cmp
mov
cmp
adc
push
jns
and
cmc
cmp
addr16
pushf
into
push
pushf
mulb
fsubs
or
fdivs
cs
xor
mov
dec
pop
das
shrb
xor
fsubs
pop
sub
xchg
pop
icebp
xchg
xor
pop
adc
dec
adc
mov
push
movsl
cmp
push
cmp
popa
out
insb
xor
mov
jg
lods
enter
aad
pop
int
cmp
cs
mov
jo
lcall
adc
rorl
loope
cld
inc
mov
push
aas
inc
aas
call
les
mov
ds
cli
icebp
adc
lret
vunpckhps
cmpsl
popf
repz
int3
imul
mov
jmp
xor
add
mov
in
add
aam
mov
adc
mov
sbb
mov
dec
xchg
mov
mov
data16
pop
mov
popa
mov
lds
cmp
fdivr
fdivl
clc
movsl
stc
and
repz
daa
mov
out
pop
fbstp
ds
cltd
jo
fs
arpl
inc
cmpsb
out
cmpsl
aaa
adcb
and
lret
out
cmp
test
jnp
jecxz
sbb
xchg
bound
xchg
mov
push
in
inc
add
shr
xchg
push
mov
mov
dec
icebp
ds
adc
xchg
jmp
icebp
scas
jl
stc
sub
pop
inc
incl
sbb
inc
outsb
adc
jl
dec
mov
inc
inc
jne
and
xlat
and
stc
mov
movsb
insl
lock
fnsave
mull
push
mov
lahf
jo
aam
push
sarb
and
xlat
dec
xor
inc
sbb
pop
cld
jnp
fstps
ss
mov
jno
sbbb
pusha
scas
pop
xlat
mov
pop
out
dec
pop
cltd
pop
enter
jg
ret
cmc
or
jb
rcrb
push
mov
jbe
sarb
pop
in
jl
lcall
leave
leave
mov
sti
repz
ret
pop
call
js
sbb
movsb
jae
jge
sbb
ds
inc
jle
fs
mov
cmpsb
scas
int
adc
adc
cmp
xchg
fdivs
in
jg
call
das
or
jmp
out
fistpll
lods
xchg
out
mull
test
push
jbe
mov
jp
push
in
sub
outsl
jo
test
xchg
or
je
xor
arpl
cmp
pop
dec
aam
mov
test
xchg
fldt
sahf
aad
and
push
mov
test
sahf
lahf
mov
outsl
sub
cmp
mov
xchg
mov
in
xchg
add
imul
push
cltd
stc
sub
es
lods
shlb
rcll
test
out
or
adc
adc
and
add
test
dec
cmp
mov
xor
lods
mov
xor
in
lea
cmp
test
mov
pusha
mov
hlt
jg
test
inc
loopne
jne
in
push
jns
adc
pop
sbb
out
pop
xor
into
scas
in
dec
out
js
jnp
pop
leave
inc
subps
stos
ret
fs
mov
sbb
stos
scas
lods
mov
aad
enter
into
ret
xor
lock
xchg
jmp
sbb
int3
lea
push
mov
das
pop
xchg
outsb
lods
jecxz
lret
dec
push
popa
adc
ret
stos
das
ret
xchg
sub
and
push
inc
push
repnz
jo
push
loopne
and
and
xor
and
adc
int3
mov
int
add
xchg
xchg
addr16
pop
out
push
xor
mov
pop
push
or
mov
sbb
leave
or
out
pop
ljmp
sub
or
loope
ja
mov
mov
inc
xchg
push
sub
mov
push
scas
mov
add
aas
xchg
and
xor
and
stos
mov
outsl
xchg
mov
daa
dec
push
cmc
xchg
call
cmp
call
imul
pop
dec
xchg
repnz
mov
adc
xchg
adc
xor
repnz
lock
mov
pop
imul
jge
lds
inc
out
xchg
outsl
int3
es
lods
daa
sbb
xchg
mov
faddl
mov
pop
outsb
into
and
lds
pop
lods
jns
jl
pop
and
lcall
test
cmp
xchg
push
lret
repz
sub
mov
imulb
pop
mov
fs
mov
push
sub
and
inc
push
add
jecxz
jg
push
pop
cmp
call
push
xor
in
sbb
test
ret
xchg
or
xchg
sub
push
cmp
int
mov
mov
add
lret
and
addl
cmp
test
ja
outsb
ret
pushf
idivb
xor
repnz
dec
push
xchg
inc
lock
jmp
inc
jp
ja
test
cmpl
dec
rol
cmp
jae
xlat
inc
inc
std
xor
cmp
fwait
push
cmp
std
test
push
js
sub
in
sbb
adc
bound
movsb
icebp
ja
ja
popa
fs
test
xor
or
mov
mulb
sub
mov
sub
fdivl
std
fiaddl
pop
push
xor
mov
xor
cmp
rol
ret
and
mov
mov
adc
or
mov
movsb
jae
fs
aas
or
push
xorb
lahf
jnp
lret
mov
dec
mov
xlat
pop
sahf
out
inc
sbb
jne
rorl
in
cmp
cmp
lods
cwtl
sub
test
push
push
pop
movsb
repnz
xchg
xchg
movsl
inc
or
xchg
push
outsb
dec
inc
push
aam
mov
xchg
mov
jbe
mov
das
push
test
movsb
loope
push
or
dec
and
fcom
jmp
scas
outsl
lods
xor
push
addb
or
and
jnp
cmc
in
lcall
dec
pop
pop
add
test
jo
dec
test
sub
mov
adcb
rolb
es
inc
mov
sar
sub
jns
call
push
adc
sbb
and
ljmp
push
lods
adc
sub
sahf
cmp
clc
and
xchg
popa
ljmp
ret
mov
pop
mov
cmpsb
xchg
les
dec
popf
psubsb
push
adc
aas
xor
in
iret
jae
ja
loop
mov
pushl
push
pop
add
pop
xor
push
popf
or
cmpsl
popf
aad
fsubs
dec
rcl
push
popa
aad
icebp
cli
mov
mov
fdivr
fcompl
lods
fs
into
leave
cmc
jmp
shrb
lock
das
jb
bound
jo
movsl
inc
jo
mov
and
push
xchg
out
clc
divb
mov
push
dec
rorb
add
rcr
cli
pop
xorl
mov
jb
into
or
stc
daa
jno
mov
mov
in
fcomps
inc
insb
push
inc
ja
cwtl
dec
iret
fmul
shl
add
mov
mov
repz
adcb
dec
push
adc
or
add
push
mov
mov
mov
inc
and
das
ret
add
in
call
mov
lea
adc
add
rcrb
and
gs
aam
test
jg
loope
es
out
sub
hlt
xor
cmpsl
pop
xor
jmp
add
jp
popf
mov
pusha
or
test
mov
shll
cwtl
add
push
movsl
fs
aas
jne
inc
cs
clc
pop
sub
jbe
jl
xor
cltd
or
or
mov
mov
loope
lea
cmp
add
arpl
jmp
mov
xchg
fcoms
push
pop
je
push
mov
je
dec
in
repz
or
cmp
addb
out
mul
inc
out
stos
jge
cmc
push
pop
mov
inc
in
daa
xlat
lea
cs
xchg
repnz
shl
nop
xor
loope
cmp
xchg
fisubrs
pop
stos
cmp
push
xor
jae
dec
mov
scas
mov
popa
xchg
dec
cs
sub
inc
call
sbb
jmp
fwait
out
dec
xlat
scas
pop
sub
lcall
aas
out
loopne
or
frstor
mov
jmp
fsts
xchg
sub
pslld
mov
mov
pusha
bnd
popa
movsl
mov
sti
and
xchg
lock
mov
fidivrl
lea
mov
or
and
mov
pop
cltd
push
js
rcll
add
sub
lcall
add
aaa
push
jnp
imul
jmp
scas
sub
pop
sub
inc
fstl
test
js
sub
jmp
repnz
dec
pop
mov
sbb
xchg
fidivs
xor
cmpsl
push
sub
jnp
push
adc
push
cmp
insb
inc
cltd
js
test
inc
mov
roll
jno
jge
test
or
ss
lret
sbb
inc
mov
or
loope
and
aaa
push
sub
ss
mov
pop
add
push
aam
imul
aas
loop
mov
mov
and
adc
int3
sub
nop
in
pop
bound
aam
inc
bound
test
adc
push
lea
outsl
flds
jmp
sub
mov
cmc
mov
cmp
test
fdivl
mov
mov
loop
mov
test
add
gs
sbb
jno
in
push
sub
ja
inc
jns
pop
cmp
xchg
test
loopne
fmull
add
mov
ss
int
divb
fsub
jl
stos
xchg
mov
add
clc
les
pop
pop
sahf
mov
rorb
xor
mov
xchg
insl
pushf
push
sahf
loop
pop
jge
int
inc
sbb
pop
int3
icebp
outsb
les
jl
xchg
and
or
pushl
pop
or
cmp
stos
mov
push
lret
cmp
fwait
mov
addl
mov
mov
dec
xchg
jle
mov
int
movsb
mov
iret
repnz
popf
idivl
mov
mov
lea
inc
dec
push
int3
aad
adc
enter
or
adc
fs
std
in
loope
mov
fstpt
add
sbb
xchg
mov
cmpsl
cli
xchg
jne
add
dec
xchg
sahf
inc
lea
in
cmp
cld
mov
mov
sbb
mov
fistl
jge
in
dec
inc
popf
mov
and
pop
lods
hlt
sub
jle
dec
xorl
add
lret
test
or
test
sub
rclb
iret
xchg
inc
pop
jl
iret
filds
xor
hlt
ds
imul
imul
push
push
and
xchg
jmp
inc
pusha
inc
jl
test
jbe
stc
cs
push
loopne
xor
call
data16
jg
fisubs
add
mov
loop
mov
push
shr
xchg
inc
xchg
xchg
pop
push
insb
cmp
jmp
lods
sbb
sub
dec
xchg
sbb
mov
inc
fmuls
rorb
xorb
sub
aaa
mov
jge
loope
aad
loop
int3
jecxz
jl
fst
stos
lcall
repnz
stos
dec
fucomp
push
in
mov
jmp
mov
lods
sbb
popa
dec
mov
cltd
daa
les
sub
int3
andb
fisubrl
sbb
mov
inc
fmul
hlt
gs
push
aam
test
xchg
xchg
jmp
and
iret
inc
bound
xchg
test
fcoms
inc
enter
jns
negl
testl
mov
mov
mov
inc
mov
and
hlt
loop
xchg
push
fs
fnstsw
in
or
addr16
xor
shl
ret
or
dec
stos
scas
push
xlat
cmp
fs
out
pusha
into
outsb
call
xchg
inc
rorl
jns
pop
popa
jno
arpl
les
jbe
mov
repz
dec
xor
mov
pop
pushf
push
sarb
pushf
mov
add
xor
cmp
pop
push
dec
or
out
pop
adc
dec
shrb
or
aam
xchg
imul
inc
mov
inc
stos
out
mov
pushl
roll
pop
jmp
lcall
inc
sbb
push
sti
repz
movsb
mov
sub
cwtl
mov
ret
enter
sub
cmp
je
outsl
mov
out
movsb
dec
xchg
cltd
mov
cmp
sbb
push
add
push
sbb
inc
dec
decb
push
jb
or
mov
lret
add
mov
mov
add
pop
ret
out
scas
jp
or
push
out
scas
and
mov
dec
mov
jno
fsubrl
or
mov
jae
mov
int
jbe
out
dec
sahf
jecxz
or
outsb
cmpsl
jp
enter
shr
xor
push
js
pop
sbb
jo
pop
sbb
aaa
roll
jo
negb
in
pop
repz
fdivr
loop
xor
bound
ja
sbb
cmc
fwait
aas
mov
fwait
sbb
cmc
in
jno
hlt
sahf
sbb
push
adc
push
out
pusha
mov
std
mov
sbb
enter
jne
xchg
sbb
in
rcrb
pop
shl
adc
jb
mov
out
out
pop
jo
pcmpeqd
or
movsb
fwait
insl
loopne
sbb
es
add
push
pop
insb
push
jnp
cpuid
xchg
int
icebp
mov
jbe
push
rclb
cmpsl
fcoml
xor
out
jnp
dec
fnstcw
jne
sbb
je
push
xchg
sbb
stos
fnsave
cmp
in
loope
cmp
cwtl
push
fldcw
lock
mov
and
dec
ret
push
jbe
add
test
inc
add
ret
sub
inc
iret
jo
push
sbb
out
test
lods
adc
sar
outsb
or
mov
sbb
xlat
shll
mov
std
fstl
xchg
outsl
jne
mov
xor
dec
pop
or
or
xor
lock
fldcw
scas
mov
shl
xchg
mov
aas
sbb
push
ss
imul
pop
sub
add
mul
dec
fadds
repnz
les
out
mov
mov
lock
adc
dec
and
or
out
push
dec
and
xor
mov
fldln2
jno
adc
push
movsl
xor
fidivs
sub
jno
hlt
adc
out
movsl
push
push
mov
and
push
pusha
cmpsb
les
sti
movsl
fwait
dec
lcall
sub
data16
cmp
cmc
jg
insb
arpl
aaa
inc
fwait
mov
and
divb
cmp
mov
loop
arpl
mov
mov
sbb
outsb
mov
shll
inc
ljmp
and
jg
test
mov
movsl
arpl
nop
dec
jns
push
dec
ja
mov
cmp
jae
ja
dec
je
pop
and
hlt
data16
repnz
in
push
pop
aad
hlt
pop
mov
mov
xor
fisttpl
rclb
inc
imul
sbb
add
and
xchg
jmp
push
mov
aaa
mov
aas
jno
cli
pop
popf
enter
pop
cmpsl
xlat
sub
or
int3
inc
test
or
negl
pop
in
or
loop
hlt
and
rcrl
outsl
fstps
aad
mov
add
test
and
cmp
and
push
mov
insb
loope
shrb
add
push
int3
bound
lret
inc
jb
or
adcl
pop
jae
test
pop
cld
ljmp
dec
stos
mov
cmp
stos
xchg
cwtl
rcrl
std
gs
mov
sbb
in
mov
xchg
sahf
xor
test
jle
out
mov
jmp
das
sub
mov
dec
jmp
fidivs
clc
in
and
stos
dec
jb
fdivrl
xlat
xchg
popa
lea
sub
popf
mov
mov
jle
push
sahf
data16
add
or
mov
sbb
fists
push
mov
test
and
lods
inc
xor
sbb
push
add
sbb
out
add
mov
adc
repnz
shl
icebp
int
fadds
inc
cmp
int3
cmpsb
fdivrl
int
add
imul
mov
mov
imul
and
ss
je
adc
adc
cmc
inc
sbb
nop
insb
xorb
or
xchg
shlb
dec
dec
jl
or
fs
cli
xor
and
adc
loopne
in
pushl
mov
adc
dec
ja
mov
test
test
mov
sub
lea
mov
cmp
outsb
jg
fmuls
jmp
sarl
mov
push
mov
push
and
scas
lret
dec
inc
cmp
mov
ss
rcl
stc
xor
fdivl
stos
pop
xor
sub
icebp
js
je
dec
popa
out
add
mov
daa
mov
push
sub
mov
add
adc
test
scas
fsubp
sub
out
or
adc
xchg
jb
dec
cmp
push
enter
roll
mov
push
cs
sbb
or
cmp
push
pop
mov
lea
je
xchg
xchg
fisttpl
std
mov
ffree
inc
pop
test
orl
out
lea
pop
mov
lahf
std
cltd
xor
inc
rcrl
ret
fmuls
in
fiaddl
in
jb
incl
or
les
mov
pop
mov
mov
jg
nop
cld
mov
xor
jne
jle
cmp
adcb
jmp
faddp
lcall
sub
dec
jl
pop
sub
mov
movsb
mov
jno
add
push
jns
int3
jno
jl
adc
jo
xchg
sbb
rolb
movb
cli
rolb
add
les
out
imul
jns
mov
jne
or
sbb
and
push
cmp
rorl
mov
dec
fsts
adc
mov
xchg
test
movsb
fisttpl
js
xchg
rorb
popa
add
xchg
mov
and
mov
push
fucomp
fldl
xchg
sub
loop
push
sub
jne
dec
add
cmp
ss
sbb
xor
push
inc
xor
xchg
rclb
push
movsl
cmpsb
push
std
xchg
subl
mov
push
lock
lret
hlt
sti
and
xchg
xor
jmp
adc
cld
in
cmp
and
stos
sub
dec
mov
cmp
rclb
mov
adcl
repz
arpl
inc
jb
popa
enter
ljmp
adc
inc
add
in
push
pop
iret
xlat
push
movsl
les
push
mov
adc
cmp
or
dec
push
pushf
fsubs
or
xchg
mov
outsl
rcll
add
xor
popf
popf
sarb
pushf
push
call
push
mov
mov
mov
in
mov
mov
std
xor
xchg
rcrb
mov
mov
out
shr
mov
cmpsb
add
mov
lock
mov
fwait
inc
sub
pop
das
add
cld
repnz
cmc
lret
inc
leave
sub
in
dec
enter
lods
mov
clc
es
hlt
jnp
cmp
xor
rolb
inc
adc
lret
gs
xlat
xchg
mov
in
sub
and
xor
mov
rcll
push
fcmovbe
mov
rcr
mov
pop
insb
iret
xorl
int3
notb
push
fmuls
lds
mull
push
cmpl
pushf
adc
or
xchg
rclb
and
out
testb
mov
jns
cltd
loopne
mov
cmp
or
mov
cmpl
fistl
jnp
lret
int
sub
cmp
mov
or
mov
roll
popa
jl
mull
lahf
push
mov
cmp
mov
pop
lock
test
ja
add
dec
int
xchg
add
imul
inc
inc
imul
lret
std
fwait
mov
outsb
pushf
jecxz
les
outsb
in
iret
das
les
movsl
pop
adc
lahf
aad
or
notl
xor
inc
cmpb
sbb
arpl
sub
lcall
and
dec
push
sbb
aas
jne
iret
loope
lcall
push
push
xchg
add
sbb
sahf
imul
jecxz
loopne
test
jg
fiaddl
xor
and
pop
mov
ret
call
push
pop
outsl
call
stos
jb
pop
outsb
fbld
out
lcall
mov
out
adc
jne
inc
mov
shll
movsl
fsubrl
cmc
adc
jo
in
in
or
in
insb
xchg
jbe
mov
repnz
xor
jg
loopew
xor
pop
adc
popf
pop
iret
or
and
add
or
push
in
jae
push
rclb
mov
insl
fisubrs
test
lods
inc
ja
pop
insb
cmpsb
cmc
and
sub
xor
pop
jp
sahf
jbe
push
add
sbb
fildll
ret
cmp
adc
xchg
out
or
and
lds
jo
jae
pusha
outsl
xor
mov
inc
pop
lcall
push
fs
add
bound
and
and
adc
push
mov
push
les
jae
and
loope
inc
mov
lock
lods
inc
pushf
mov
or
cmpsb
fists
repnz
cli
clc
icebp
pusha
mov
iret
cs
rcrl
test
or
xor
mov
ret
sub
popf
sbb
lods
and
lahf
sbb
movsl
push
mov
push
xor
add
add
mov
adc
out
inc
or
xor
gs
lock
push
xchg
lods
pushf
and
adc
lea
fildll
xchg
mov
outsb
jg
pmullw
mov
leave
fnstcw
jae
sub
repnz
fsubrl
jne
out
mov
pop
cs
jns
sti
add
xor
insb
xchg
into
ret
inc
out
cs
ss
arpl
add
aas
dec
jbe
xchg
pop
adc
xor
imul
adc
sahf
cs
and
jp
leave
int3
imul
in
aas
rclb
jb
in
sahf
rcrl
xor
cmpsb
hlt
and
cmp
into
mov
pop
jp
or
dec
dec
sub
mov
inc
inc
lods
cmp
pusha
ljmp
fidivl
xchg
xchg
scas
or
shlb
fnstsw
push
or
xchg
lods
test
test
xorb
dec
popf
pop
jmp
pop
mov
mov
adcb
xor
scas
push
adc
repz
pop
push
out
pop
xchg
inc
xchg
xchg
pop
inc
adc
xor
pop
mov
mov
mov
lret
dec
dec
mov
cmc
jg
js
test
iret
leave
in
inc
adc
cmp
mov
dec
cmpsb
and
push
pop
rcl
movsb
test
scas
inc
or
jnp
xchg
hlt
xor
mov
cmp
xor
mov
mov
sbb
stos
out
les
add
xor
jae
imul
push
in
mov
js
mov
lret
and
call
call
jle
jle
and
shll
pop
inc
or
mov
xor
push
frstor
adc
jnp
add
mov
bound
pop
cwtl
arpl
or
jecxz
test
cmp
in
fcomp
rcrb
sub
fs
aas
xchg
cli
jnp
lods
insb
ror
fs
mov
xor
cmp
xchg
arpl
mov
test
add
fwait
or
stc
xor
addr16
pop
pop
jmp
xor
pop
fdivrs
xchg
and
out
and
insl
fs
and
bound
mov
pop
sbb
xor
or
push
jns
leave
nop
inc
mov
cmp
popa
sbb
inc
mov
fistpl
sbb
dec
movsl
jnp
decl
sarb
ret
popa
sub
mov
adc
dec
jge
dec
std
add
inc
or
pop
testb
sub
fwait
mov
ret
out
or
mov
push
mov
and
scas
jp
iret
lods
and
fnstcw
fadd
jg
jae
and
outsb
pop
daa
sbb
mov
orb
inc
cmp
xor
dec
ret
adc
push
push
iret
repz
shll
push
rol
leave
push
out
jecxz
fidivrs
xor
pop
add
dec
ficompl
xor
dec
jge
mov
xchg
cs
popa
push
fsubl
pop
fldl
add
mov
add
or
mov
xor
movsl
or
cmc
shl
imul
inc
les
dec
push
xchg
mov
push
ret
fwait
test
dec
xor
jae
int
mov
and
lret
pushf
lcall
inc
into
addr16
mov
dec
les
push
mov
jl
loope
add
mov
sti
sbb
iret
sub
adc
pop
arpl
test
psrlw
push
push
rcll
lea
inc
lret
outsl
xor
sbb
xchg
pop
hlt
xlat
leave
loop
add
cmp
and
adc
shlb
and
sub
push
enter
jno
into
pop
jnp
dec
addr16
rorb
icebp
ljmp
fistpll
sbb
sbb
add
jl
push
sbb
call
jmp
mov
loope
jbe
jecxz
jge
rorb
arpl
sbb
rorb
out
fs
adc
leave
jns
rclb
jo,pn
adc
mov
int
xchg
mov
dec
mov
jo
mov
add
fcmovu
or
and
jae
dec
inc
lcall
cmp
mov
mov
xchg
push
in
xchg
mov
and
inc
mov
jle
movsl
push
pop
fdiv
pusha
ret
adc
xchg
mov
hlt
das
xor
icebp
in
mov
rcrl
sahf
xchg
cwtl
or
mov
fisttpll
in
loop
adc
or
es
xchg
dec
sub
call
dec
push
fdivrs
dec
stos
or
in
cli
mov
imul
ljmp
jle
lea
adc
dec
push
insl
adcb
xor
mov
cld
cmp
mov
jbe
pushf
addr16
das
xchg
pop
jns
sar
insl
mov
sbb
cmpsb
shrb
lret
xchg
fucomip
shr
sbb
jno
addr16
mov
cmp
or
mov
bound
es
aam
imull
cmpsb
imul
pop
sbb
jle
data16
add
mov
and
sbb
mov
jns
lods
add
mov
dec
mov
sub
stos
mov
push
pop
mov
jge
mov
adc
mov
pop
aad
or
testb
cmp
push
dec
scas
push
cmpsb
cli
xor
stos
or
ficoml
into
out
pusha
cmpsb
pop
dec
dec
mov
xchg
negl
and
ret
mov
sbb
hlt
inc
mov
lret
sbb
or
xor
or
push
adc
imul
adc
mov
xchg
mull
aam
outsl
pop
insl
daa
test
jecxz
xchg
imulb
sbb
stos
xor
sbb
xlat
dec
and
sahf
loope
inc
pop
mov
sar
push
and
ds
into
pop
int3
aam
orb
gs
dec
dec
je
inc
jno
rcr
xor
test
add
pop
out
imul
inc
inc
ljmp
outsb
mov
loope
lcall
mov
mov
or
jo
push
test
lods
int3
xchg
jne
iret
mov
push
mov
or
jne
jle
scas
mov
cmpb
or
out
imull
scas
lcall
stos
jne
pop
xor
cmp
mov
out
ficompl
cmpsl
sbb
loopne
dec
fistps
cmp
dec
xlat
scas
in
xor
stos
dec
mov
dec
mov
mov
jb
outsb
stos
ljmp
bound
add
test
stos
scas
icebp
cmpsb
in
pop
push
or
jo
jb
or
hlt
push
orb
jo
mov
jg
lods
mov
pop
daa
jb
pop
pop
popa
cmp
ret
xor
mov
ret
xor
fmull
push
push
enter
xchg
xor
mov
jmp
mov
fmul
pop
sbb
xchg
mov
mov
cltd
adc
lahf
add
das
jp
sub
sbb
popf
add
mov
outsb
mov
sbb
dec
pop
xchg
fisubrs
fnstsw
insl
ret
pop
jecxz
fisttpll
movsb
ljmp
rorb
mov
xchg
add
aaa
cmpsl
addr16
insb
push
lock
jmp
pop
add
push
adc
cmp
test
dec
xor
xchg
xor
dec
xorl
icebp
movsb
cli
xor
out
xor
shrl
outsb
ss
mov
imul
addr16
popa
xchg
cmp
dec
addr16
pushf
or
xor
xchg
insl
les
lea
pop
nop
sahf
ljmp
xor
clc
lods
popf
add
add
pop
and
test
dec
insl
and
push
adc
push
xor
scas
jp
inc
pop
dec
mov
jecxz,pt
or
mov
outsb
cld
jnp
shll
shll
and
shrl
je
imul
add
xchg
mov
adc
in
out
fstpt
mov
push
push
mov
jo
gs
sub
pop
out
cs
jb
cmpsb
incl
pushf
xchg
mov
mov
into
cmpl
cmp
decl
rcl
rcr
mov
mov
adc
jmp
das
adc
loope
adc
les
and
dec
orl
adc
add
push
stos
jne
stc
push
mov
jecxz
mov
in
dec
or
aad
or
adc
out
push
add
and
xlat
mov
xchg
call
inc
pop
test
xor
adc
fmuls
pop
mov
inc
lcall
fstpt
stos
roll
popf
in
dec
jp
mov
mov
popa
cli
scas
ja
sub
xchg
popl
pop
js
jge
push
lahf
xchg
cmpsl
imul
rcll
jge
js
scas
dec
push
mov
rolb
sub
dec
fs
lahf
mov
ja
mov
insb
push
sub
xchg
popa
test
movsl
sbbl
sbb
rcrl
and
scas
xchg
mov
test
inc
and
xchg
imul
mov
add
cmpsl
cmp
jp
cmp
lods
loop
mov
or
rorb
addr16
sbb
and
adc
scas
xor
xchg
lods
fucompp
cmp
adc
xchg
subl
push
xorb
inc
ror
pop
test
pop
inc
dec
shrb
ficoms
mov
add
fwait
xchg
xor
adc
mov
ljmp
pop
test
outsb
mov
xchg
push
adc
jo
mov
pop
add
jns
cld
sbb
dec
aas
hlt
mov
xor
and
inc
test
fsub
out
mov
loope
imul
test
je
cs
mov
out
mov
lods
xor
xchg
xor
push
jl
xlat
jmp
mov
sbb
or
inc
mov
mov
xchg
addb
dec
pop
xor
mov
jp
dec
mov
fs
dec
pop
in
fimull
jp
sub
sbb
add
scas
add
pop
pop
movsl
xlat
dec
sti
addr16
push
lods
ss
js
stc
negl
std
jnp
insb
jae
lahf
lds
dec
inc
cld
add
add
pop
lahf
add
jmp
and
out
and
add
sbbb
test
mov
leave
jg
dec
sub
add
xor
lods
testb
scas
aaa
xor
cmp
mov
mov
xchg
cmp
scas
adc
push
jns
dec
gs
loope
adc
fsubl
pop
out
push
push
movlps
dec
lock
ljmp
cs
jns
repz
sub
mov
adc
or
and
jmp
lods
loop
int3
iret
or
cs
or
xchg
scas
fnstsw
cwtl
jne
or
rcrb
pushf
xchg
dec
outsb
sub
add
das
hlt
or
xchg
adc
mov
sbb
mov
xor
xchg
push
rcr
or
insb
cmp
xor
xlat
xor
imul
dec
dec
pop
xchg
bound
aaa
jge
push
dec
xchg
aaa
xchg
adc
adc
jb
xlat
cwtl
push
pop
xchg
cld
dec
out
pop
ret
and
fnsave
xchg
and
sbb
scas
push
out
lds
adc
cmpsl
adc
mov
ljmp
xchg
cmp
shl
mov
sbbb
fcoml
dec
gs
jo
sahf
xor
js
in
jle
daa
mov
xor
sub
mov
dec
push
jns
pop
push
fnstcw
cmpsb
mov
jg
cmpsl
jge
push
adc
or
movsb
sbb
cmpsl
sub
arpl
mov
dec
mov
lods
popf
sbb
or
lret
les
cmpsl
pop
and
jge
or
xor
stos
cwtl
imul
and
lea
popf
in
das
inc
xor
mov
jp
jmp
mov
cmp
mov
jmp
add
out
les
jmp
pop
or
sbb
dec
shld
sbb
pop
into
ret
xchg
pop
cmp
xchg
add
lea
popa
cld
push
scas
std
add
inc
rorb
adc
fcoml
repnz
rcl
mov
ficoml
fisubl
and
adc
push
sar
push
add
push
test
pushf
or
jle
mov
inc
xor
mov
pop
push
lock
aad
lret
stos
and
icebp
cli
hlt
xor
and
sub
xor
dec
push
mov
xor
mov
loope
push
xor
aad
sub
rorb
or
pop
or
xchg
mov
cmp
dec
les
pusha
in
loop
je
hlt
test
ret
cmp
repz
cltd
fwait
mov
dec
xchg
ja
cmc
iret
mov
aas
jl
mov
push
ds
mov
adc
stos
popw
mov
push
xchg
jge
leave
mov
notl
test
imul
aad
aas
enter
xor
mov
jnp
sbb
push
dec
pusha
roll
push
rol
int3
xchg
jecxz
cld
mov
aas
ja
mov
jns
dec
xchg
les
mov
lods
add
ret
inc
scas
stos
shlb
jle
jecxz
into
iret
inc
pop
inc
dec
gs
icebp
adc
or
out
push
push
pop
cmc
and
inc
add
ss
int
loop
scas
mov
push
cmp
mov
adc
jo
sbb
test
aas
pushf
filds
es
ret
dec
adc
sbb
push
call
or
pushf
js
div
ret
sbb
nop
shll
push
or
add
lea
test
andl
adc
push
mov
aas
outsl
xchg
fisubs
pop
jbe
add
mov
pop
jne
out
xchg
rolb
dec
jnp
jnp
jmp
jno
std
enter
repnz
push
pop
push
adc
and
dec
push
inc
push
mov
mov
lret
or
imul
lcall
sub
ss
movsl
xorb
clc
pop
fcoml
mov
push
adc
mov
adcl
loop
xchg
cmp
imul
push
cmp
shll
sub
jbe
push
inc
repnz
lcall
inc
fwait
adc
dec
lret
inc
lock
inc
shll
inc
sub
jg
cmpsb
xchg
jp
sti
les
cmp
mov
leave
stc
pop
and
jbe
jne
mov
popf
cmp
inc
int
mov
cli
mov
shrl
sbb
cs
test
or
popl
je
sbb
sbb
fcmove
shll
sub
ret
cmpsl
lret
push
lahf
pop
repnz
std
arpl
mov
xor
rcrl
mov
or
cmp
xor
jbe
fisubrs
mov
xchg
mov
add
and
fstl
outsl
push
popf
dec
xor
inc
pushf
dec
inc
xchg
xchg
mov
adc
shll
fndisi(8087
xor
rcrb
xchg
inc
jp
pushf
cli
push
pusha
sar
and
cwtl
inc
xchg
push
cmp
pop
dec
stos
imul
dec
inc
test
in
iret
jl
mov
sub
adc
cltd
insb
and
push
adc
push
or
mov
sbb
clc
jle
test
hlt
shlb
lcall
fidivrl
lret
dec
push
jge
and
cld
lds
xor
lret
loope
or
mov
popa
inc
iret
and
push
dec
adc
gs
dec
push
fisubrl
add
jle
js
imul
sahf
dec
rcrb
fdivs
cltd
clc
imulb
inc
nopl
add
pop
cmp
jae
loop
mov
pushf
push
andb
mov
sub
or
call
mov
xor
es
mov
aad
adc
in
push
gs
loop
outsb
inc
fdivrl
or
or
pop
cmp
lahf
aad
inc
add
or
in
loop
testl
lret
stc
push
jbe
dec
out
add
cmp
nop
data16
dec
dec
mov
flds
push
push
jb
sbb
das
sub
fnstsw
xorl
inc
xor
ljmp
push
mov
pop
xchg
push
lock
dec
mov
fnstsw
xor
repnz
in
push
bound
adc
xlat
lahf
adc
dec
pop
inc
loopne
jmp
bound
lret
sub
jge
mov
ja
sbb
or
mov
arpl
cmpsl
test
xor
or
popa
xor
es
push
cmp
scas
lahf
ficoml
leave
pop
or
scas
stos
out
rcl
adc
push
or
jle
and
sbb
mov
xor
out
imulb
lods
imul
or
aas
lret
dec
jae
cmp
in
movsb
adc
cmp
adc
xor
or
inc
and
loopne
pop
orl
test
mov
movsb
std
shll
cmp
jne
fs
xchg
jnp
cmc
lcall
dec
dec
mov
jg
mov
cmpsl
aaa
pop
in
pop
jo
loop
aam
lahf
push
sarl
jg
mov
and
jae
mov
inc
adc
aas
pop
dec
dec
mov
int3
add
shlb
pusha
scas
mov
mov
jo
push
mov
dec
rorb
cs
pop
and
inc
inc
inc
leave
rorl
push
mov
mov
icebp
test
insl
loopne
out
pop
mov
pushf
pop
lock
mov
add
xchg
rol
add
clc
add
hlt
inc
jecxz
cmp
cli
ficompl
pop
das
pop
gs
pop
lods
movsl
aaa
shrb
bound
inc
or
ret
sub
aas
aam
adc
cwtl
mov
cmp
push
mov
xchg
pusha
aas
pop
mov
lock
mov
jne
and
mov
lret
hlt
pop
or
lret
sub
xchg
add
dec
aam
test
xchg
dec
gs
sub
js
out
insb
pusha
xor
jle
stc
jnp
movsb
push
cltd
push
push
jp
jne
testl
sbb
test
xchg
push
add
xadd
xchg
jb
jae,pt
or
sub
movsb
sub
xlat
mov
ret
fimull
adc
xchg
test
out
push
lea
scas
sbb
int3
sbb
mov
xchg
cmpsb
fcmovb
stc
sub
test
xor
xchg
daa
ljmp
dec
pop
mov
cmp
fsubp
scas
sar
ja
pop
jne
popf
ja
mov
push
mov
out
loopne
mov
mov
dec
or
sub
dec
in
add
cwtl
dec
std
pushf
lods
sub
insb
sub
xchg
enter
pushf
imul
mov
stc
fildl
fsubp
scas
in
ret
sarb
pop
gs
iret
xor
pop
sbb
sub
dec
jl
sub
cmp
xor
jecxz
out
xor
movsb
sub
fs
and
jp
jecxz
cmp
lret
sbb
push
adc
or
mov
mov
adc
mov
and
jle
jmp
sub
cld
push
sub
jae
fadd
mov
out
pop
dec
es
inc
arpl
shll
loop
outsl
js
inc
jg
fdivr
fisubrs
and
xchg
pop
shlb
test
push
pop
pop
mov
call
inc
ret
fstp
incb
loopne
pop
and
aaa
jbe
lretw
inc
jne
ficoms
lea
movsb
push
nop
inc
fincstp
mov
push
xchg
out
icebp
cmp
stos
outsl
push
push
imul
lods
push
pop
repz
insb
sahf
in
sbb
push
jne
sub
fnsave
in
jmp
or
xchg
popa
aad
popf
dec
inc
ss
loope
mov
xor
data16
in
adc
sub
cwtl
loope
and
sahf
fwait
enter
xchg
mov
mov
inc
mov
adc
mov
out
xchg
lret
mov
jp
inc
rcpps
cmp
scas
dec
js
shlb
jns
pop
outsb
inc
incl
pop
dec
add
repz
das
sub
cmpsl
add
xchg
sub
push
jbe
jmp
in
adc
mov
xor
arpl
ficoms
adc
inc
fs
clc
and
shll
scas
xchg
adc
or
dec
inc
push
dec
jecxz
mov
int
pushf
sbb
adc
or
mov
pop
jnp
movsb
pop
sbb
sub
pop
push
test
lcall
jecxz
xor
loope
or
mov
scas
mov
lock
out
bound
xchg
cmc
test
push
stos
jo
mov
dec
lgs
dec
mov
outsl
push
add
inc
jmp
ds
ss
sub
test
add
push
fildl
xlat
jbe
test
jnp
nop
fdivrl
fstpt
jmp
stos
mov
test
lock
push
das
stos
outsb
insb
mov
sub
dec
call
mov
int3
out
mov
lds
jg
pop
or
pop
jne
xchg
rcl
xchg
sbb
cli
xchg
dec
xor
push
imul
adc
bound
cwtl
jne
mov
inc
cmp
ftst
mov
inc
xlat
pop
inc
in
dec
es
xor
popl
mov
ja
push
xchg
sbb
adc
lcall
lcall
lret
or
add
aas
sub
push
fadds
cltd
mov
cmpsl
fucomp
aas
and
aam
inc
outsl
sbb
cmc
sti
or
insl
sub
and
xchg
cmp
jns
popa
xor
daa
sub
sbb
lds
push
mov
xlat
popf
lds
and
push
push
insb
fbstp
jb
lahf
xor
lahf
movl
inc
pop
test
test
decb
stos
mull
cltd
mov
sub
ja
lahf
push
xor
movsb
imul
push
popa
shlb
inc
aad
mov
jl
inc
cmpl
push
sti
iret
push
int3
test
push
push
and
test
push
mov
ffreep
es
shl
pop
mov
insb
icebp
test
inc
add
push
stc
or
loop
aam
adc
movsl
mov
test
mov
push
ljmp
mov
decl
movsb
dec
add
addr16
sarb
fwait
sahf
addr16
lret
pop
jae
mov
sarb
orb
dec
push
push
test
lcall
pop
ret
testb
iret
imul
ds
clc
loop
cmp
inc
push
add
ret
add
mov
lcall
or
mov
aaa
or
mov
js
addl
iret
cmp
push
in
gs
fstpt
cmp
xchg
adc
inc
mov
scas
out
or
sub
and
outsl
sbb
aaa
fiadds
popf
push
xchg
into
dec
and
push
pop
test
add
into
sbb
pop
lret
out
cmp
clc
loope
mov
xor
mov
or
cmp
sti
enter
inc
push
test
stos
jmp
mov
cs
push
add
mov
add
sub
jle
mov
icebp
fwait
dec
fsubr
pop
in
or
shr
push
out
lret
add
mov
mov
mov
adc
subl
sub
mov
add
pop
mov
out
aam
push
mov
rorl
out
hlt
call
pop
lcall
jge
or
inc
dec
push
or
in
std
xchg
xor
lds
cltd
pop
push
dec
outsb
es
test
loop
xchg
dec
aaa
pop
pop
mov
sar
mov
xchg
sub
test
jbe
inc
dec
repnz
loope
xchg
xor
into
sbb
and
imul
cmpb
pushf
mov
mov
adc
fbstp
les
or
call
ds
inc
in
mov
and
sbb
orl
out
scas
cmpsb
sub
xlat
jmp
push
rorb
je
iret
popa
jmp
outsl
adc
dec
sbb
mov
and
mov
xlat
pop
mov
cwtl
outsl
sbb
sbb
sbb
int
mov
cld
push
arpl
jecxz
mov
pusha
dec
fnstcw
imul
push
shl
shl
arpl
adc
inc
sub
scas
lock
cmpsl
in
loopne
add
fs
add
movsb
stos
push
loope
flds
inc
outsl
cld
sub
add
mov
pop
dec
xor
mov
inc
cld
xchg
mulb
pusha
out
cmpsb
shll
call
dec
add
sbb
sub
adc
xlat
and
mov
sub
mov
push
push
pop
lcall
rolb
lret
fcmovnb
je
sub
jo
pusha
xchg
pop
xchg
mov
adc
loope
inc
popf
icebp
out
das
xchg
in
fscale
das
dec
mov
and
inc
out
sub
mov
mov
sahf
movsb
dec
les
lea
or
dec
and
insb
add
cmp
scas
andl
dec
shrb
jno
push
jae
push
stc
mov
pop
rorl
mov
push
pop
add
mov
fcomps
xor
ret
push
jnp
push
cltd
ljmp
fs
mov
add
add
popa
jae
in
leavew
add
mov
add
mov
int3
repnz
jge
scas
sub
cli
mov
les
jnp
sbb
andb
jne
stos
inc
aad
loopne
outsb
shll
sub
or
das
xchg
cld
mov
jg
mov
fsubr
rorl
fcoms
push
aad
or
push
fisubrs
bnd
or
aam
ss
ljmp
and
sub
je
push
leave
mov
sahf
jns
das
pusha
lahf
fs
push
lods
insl
orl
sbb
lcall
xchg
sub
xchg
iret
and
cmpsb
and
push
gs
inc
dec
lods
push
add
inc
xor
jnp
mov
cmc
addr16
cli
icebp
pop
mov
movsl
aas
cmc
mov
stos
repz
aad
loopne
sbb
lret
in
jb
cmp
test
pusha
mov
out
fcmovu
push
hlt
or
scas
rcr
cmpb
lods
stos
and
stos
inc
xor
push
dec
inc
sub
jnp
push
daa
lcall
bound
and
xchg
fs
inc
js
sub
mov
mov
xchg
pop
hlt
dec
enter
scas
std
cltd
call
subl
ret
xor
sarb
mov
xor
jge
pop
fs
jae
loopne
out
mov
loop
mov
mov
push
jno
mov
xchg
adc
add
in
out
or
test
push
mov
mov
mov
mov
mov
cs
jnp
jo
cli
rclb
and
jp
cmpl
or
lock
popf
xchg
mov
aaa
jmp
mov
lret
fbstp
cs
gs
popf
xor
cld
cmp
jb
sbb
dec
mov
ss
xchg
mov
mov
movsl
xlat
scas
sti
push
mov
add
cmp
cmp
in
xchg
punpckhdq
pop
daa
icebp
sbb
sub
xchg
sbb
mov
mov
pop
sbb
dec
xchg
enter
aaa
cli
call
cmp
xor
out
mov
pop
inc
mov
or
or
mov
inc
int
imul
mov
cmp
xlat
xchg
adc
jns
enter
add
popa
cmp
cs
out
jmp
mov
xor
data16
sub
rclb
lock
sub
jecxz
shrb
xchg
jmp
cli
mov
sub
inc
push
pop
lret
outsb
test
jbe
mov
mov
pop
outsl
fidivrl
fistl
inc
cmp
lahf
stc
test
outsl
insl
inc
js
mov
lea
cmp
push
fldenv
or
imul
lds
imul
push
nop
aas
js
mov
outsl
ret
push
cmp
add
mov
xchg
out
jle
and
mov
cmp
cltd
push
sbb
adc
lods
jne
into
sarl
fs
outsl
imul
jge
out
xor
shr
ret
inc
and
and
pop
scas
or
stos
sbb
mov
mov
xlat
push
icebp
cmp
adc
cld
push
xor
jmp
scas
inc
adc
mov
push
or
sub
inc
call
xchg
fstl
or
jnp
test
mov
icebp
out
mov
cmp
xor
fbld
das
xchg
sbb
lret
shl
or
push
icebp
jmp
scas
inc
push
ret
xchg
out
pop
adc
jp
xor
add
push
sbbl
mov
mov
ljmp
dec
fwait
aam
mov
or
rcl
pop
lea
bound
mov
mov
dec
pop
cltd
mov
mov
or
int
dec
pushf
into
push
in
ljmp
lcall
mov
stos
sbb
push
lahf
jecxz
nop
sahf
push
cmp
in
cmp
lods
in
fs
inc
lahf
out
xchg
dec
outsb
mov
mov
or
mov
into
std
jb
test
sbb
daa
stos
add
pop
out
mov
xchg
xor
idivl
scas
pusha
hlt
mov
icebp
cmc
repnz
sbb
xor
fadds
pop
out
test
mov
lret
sbb
adc
dec
mov
cmp
and
cltd
call
pop
xlat
fwait
les
test
adc
adc
jmp
push
mov
fidivs
fsubrs
aaa
pop
mov
icebp
in
pop
inc
adc
mov
xchg
enter
mov
mov
jge
jge
ret
cmpsb
fidivs
iret
inc
aad
leave
or
loopne
and
lds
inc
inc
push
mov
inc
pop
aad
inc
or
ss
js
cmp
xchg
pop
fwait
xor
scas
mov
mov
cmp
xchg
jg
inc
add
push
jnp
gs
inc
add
test
and
sbb
or
pop
push
inc
sbb
movsb
out
sahf
or
sub
call
jnp
xlat
push
xlat
aas
lret
mov
fimull
jo
sbb
call
iret
cmpb
mov
pushl
mov
mov
dec
arpl
mov
xor
addr16
jno
sbb
sub
jp
insl
jecxz
dec
pop
mov
test
out
dec
pop
cmp
fcoms
jb
cmp
loop
cmp
or
dec
push
pushl
nopl
ss
out
fcmovbe
xor
sub
cmp
ss
and
mov
inc
scas
jnp
push
add
cmp
inc
push
sub
jge
mov
dec
jb
add
and
push
fldcw
jg
jae
cmc
movlps
sub
push
push
hlt
inc
pop
loop
xchg
ds
push
jecxz
add
and
mov
sbb
xchg
and
or
add
mov
pop
or
lods
mov
mov
mov
push
pop
aas
insb
cmpsl
push
iret
sbb
sub
jl
pop
cmp
lods
push
roll
aam
in
push
inc
repnz
cmp
xchg
repz
aas
ficoml
and
popa
adc
adc
inc
jnp
xor
pop
fadd
iret
sub
jbe
cmpsl
ljmp
in
push
xchg
es
mov
stc
cmp
pop
pushf
jne
les
imul
fwait
add
pop
cmp
and
inc
sbb
lcall
stos
cmp
movsb
mov
cmp
outsb
pusha
ret
pop
shr
or
divl
pop
int
rcrb
shlb
repz
das
out
adc
and
fs
mov
cmc
adc
mov
call
pop
adc
test
xlat
enter
pop
shr
ret
das
js
jb
and
jno
fdivrl
fidivl
lret
lahf
cmp
mov
add
out
dec
cwtl
adc
pushf
pop
dec
test
sti
arpl
sti
sbb
xor
roll
ret
mov
xor
or
mov
pop
insl
out
test
lds
jae
xor
mov
aad
sbb
push
push
xchg
mov
icebp
push
adc
add
add
aad
in
sbb
bound
fiaddl
lret
pop
hlt
push
ret
iret
es
pop
sbb
mov
mov
jnp
sub
ror
addr16
xchg
lea
adc
xchg
call
hlt
xchg
xchg
std
cmp
test
push
ljmp
cmp
mov
mov
cmc
lcall
fisttpl
jmp
gs
lods
ror
dec
push
inc
cld
xchg
or
cmp
test
fmul
jns
stc
nop
pushf
add
xor
xchg
or
and
jge
inc
sahf
xchg
push
xchg
movsl
dec
addr16
aam
push
fsubrs
pop
loopne
into
out
dec
imul
adc
and
xchg
sub
mov
pop
je
rol
and
or
outsb
nop
arpl
cmpsb
mov
xchg
inc
pusha
imul
lods
shll
ljmp
fcomi
hlt
add
cld
lods
push
cmp
sub
push
jb
or
xchg
insl
repz
insb
push
dec
sbb
or
iret
in
fists
mov
fwait
cs
add
pop
outsb
mov
sbb
clc
gs
sbb
rep
imul
xor
and
inc
mov
jo
movsb
mov
dec
fcmovb
cmpsl
xchg
xchg
mov
jns
popa
jl
enter
mov
mov
xchg
push
cld
data16
inc
addl
les
lcall
add
stos
mov
sub
sub
xchg
fistps
jge
imul
xor
loope
dec
xchg
pusha
inc
lea
cmc
or
int3
pushf
test
inc
fs
fcoml
cmp
int3
mov
inc
insl
popf
lock
jae
int3
daa
mov
jge
cmc
mov
xor
rolb
push
popf
or
aam
insl
imul
out
fistps
jno
enter
das
push
adc
fcom
and
std
pop
xchg
jbe
sub
or
inc
inc
inc
xchg
mov
jbe
imul
jb
lds
or
cmp
xchg
or
mov
sti
nop
jmp
xor
in
mov
stc
je
cmp
add
fdivrs
jle
and
push
lahf
sub
push
jb
gs
cli
hlt
lock
std
push
xor
popf
add
les
lahf
js
test
and
mov
inc
mov
fwait
xor
divb
iret
test
mov
stc
repnz
sub
jle
into
jns
imul
and
hlt
ret
ljmp
pop
out
mov
fwait
or
push
mov
sar
in
dec
mov
aas
jg
xchg
fnstsw
sbb
sbb
xchg
mov
push
sbb
addb
jb
cmp
dec
lea
or
fldt
cs
pop
pop
stc
das
adc
cwtl
jb
cmp
inc
setp
cmp
mov
jecxz
pop
out
and
lahf
cwtl
pop
pop
popf
jno
aas
sbb
clc
pop
jb
jecxz
cmp
fmull
mov
ret
lods
bound
push
pop
adc
hlt
negb
fidivrs
cmp
mov
add
daa
mov
ja
dec
jo
out
testb
hlt
jnp
movsl
out
pop
out
cmpl
dec
xchg
and
out
push
sub
clc
test
dec
rcr
jp
scas
push
mov
sub
fisubl
mov
jno
adc
mov
in
jne
rcrl
out
cmc
dec
sbbl
in
mov
dec
push
cltd
out
jg
push
inc
sahf
pusha
or
loope
cmp
sbb
xchg
loop
stos
in
adc
lock
sbb
sahf
lahf
jns
jge
adc
xor
mov
sbb
pop
dec
pop
lcall
outsb
jb
pop
out
jae
sub
outsw
loopne
lods
in
xchg
push
or
xchg
mov
inc
shl
incl
mov
push
js
int3
add
stc
or
xlat
lahf
arpl
push
xor
and
push
ljmp
cmpsl
cld
fmul
in
sbb
orl
in
out
leave
in
mov
pmullw
pop
aas
test
or
mov
mov
cmp
pop
and
aas
rorl
leave
test
pop
inc
jge
mov
jno
sahf
mov
nop
dec
mov
sub
mov
sahf
xor
stos
fcomip
adc
scas
sbb
insb
push
push
sub
mov
xchg
sbb
mov
pusha
inc
sbbl
pop
inc
aaa
out
jne
sbb
mov
shlb
sub
xchg
insl
jge
sub
sub
aas
cmp
fidivrl
or
pop
test
rcrl
push
sub
sbb
xchg
cmpb
xchg
xor
divb
xor
add
fstpl
pop
xchg
ss
or
jno
or
cmpsl
pop
daa
sarl
repnz
cli
push
xchg
dec
subb
mov
cmpsl
fisttpll
stc
xor
int3
xchg
es
jecxz
imul
cmp
mov
test
add
mov
pop
pop
sti
mov
xor
fidivrl
adc
in
enter
xchg
mov
jle
pop
rol
and
add
std
pxor
cltd
loopne
xor
cmpsb
inc
jmp
fistl
pop
aas
mov
out
push
mov
adc
test
sbb
fnstsw
cltd
in
xlat
adc
aam
sarb
mov
push
bound
ret
push
out
test
xor
int3
imul
addr16
jns
mov
js
outsb
xor
ret
pop
push
sbb
mov
sbb
pop
les
xor
test
rclb
nop
cvtps2pd
adc
xchg
sub
outsl
pop
adc
xchg
jno
ror
negb
ret
shrb
js
js
call
add
cltd
test
jmp
push
fmull
push
cmp
xchg
dec
in
std
iret
dec
and
jg
mov
dec
adc
mov
test
mov
inc
inc
push
and
ficompl
pop
loop
xor
jmp
scas
adc
or
lods
fstpl
mov
sub
sub
push
sub
test
rcl
out
adc
xlat
push
movsl
pop
inc
pop
pop
popf
sub
pop
inc
push
inc
jne
aam
xchg
sbb
mov
cmp
bound
stos
pop
dec
test
jmp
int
inc
and
arpl
ss
fnstsw
cmp
xchg
and
les
cmp
push
ret
insb
out
jmp
cmp
popf
shlb
or
ljmp
inc
js
mov
push
dec
pop
jae
and
inc
arpl
fsubs
dec
jmp
mov
mov
pop
dec
out
mov
mov
nop
shrl
lods
and
movsl
xchg
icebp
sbb
push
jmp
mov
mov
mov
cmp
inc
jmp
imul
jns
inc
pop
sbb
jg
flds
cmpsb
xlat
cmpsl
hlt
cwtl
xor
mov
sbb
xor
cmp
cmp
lea
cli
std
rorl
sbb
jb
mov
popa
jmp
lds
pusha
inc
cmp
cmp
roll
inc
popa
rol
nopl
push
lods
addr16
jo
jae
add
or
mov
scas
sub
pop
scas
cli
loopne
mov
push
jmp
scas
sub
add
mov
pop
out
add
add
inc
ja
notl
aas
repz
inc
push
sbb
push
xchg
xchg
jb
inc
das
std
lahf
hlt
je
adc
add
adc
or
push
dec
push
lahf
inc
push
arpl
cmp
push
test
das
push
or
call
add
and
push
arpl
cltd
sub
sub
inc
inc
in
xor
cmp
pop
and
xlat
jp
inc
idivb
movl
pop
jge
xor
cld
movb
jae
xor
in
adc
push
or
add
cmc
sti
test
lret
inc
mov
nopl
jns
in
movsb
fcompl
lret
stc
mov
jne
sbb
mov
movsl
sbb
enter
inc
jnp
dec
ja
movsb
inc
cmc
sarb
test
dec
mov
mov
int
xchg
inc
xchg
cli
lea
test
jp
lcall
js
jb
testl
aam
outsl
pop
push
inc
jbe
scas
or
movsl
daa
loope
test
std
inc
dec
pop
roll
push
xchg
es
add
push
cmpsl
pop
dec
mov
or
mov
mov
leave
or
fucomi
adcl
ret
mov
jno
stos
pop
sti
mov
orb
jns
cmp
cs
inc
js
inc
outsl
gs
dec
rcll
lahf
pusha
insl
enter
aas
push
mov
in
push
inc
punpcklbw
les
popf
hlt
out
cmp
adc
mov
jae
lahf
mov
add
add
push
mov
lods
pop
das
stc
incl
ss
fs
inc
in
das
push
std
jo
hlt
inc
adc
stc
in
or
mov
sahf
pop
cmp
fcomp
lock
inc
test
adc
or
adc
dec
insl
repnz
shll
fcoms
sar
add
in
push
icebp
cmpsb
int3
out
push
enter
cmp
jns
stos
or
iret
xchg
and
cld
jns
push
dec
sti
frstor
stc
icebp
jl
inc
adc
mov
add
jae
add
inc
andl
repz
out
les
sub
jg
out
add
aad
sti
out
out
sbb
xchg
inc
scas
lret
add
or
add
or
fsubrl
rol
fbstp
mov
and
or
xchg
lret
mov
cmpsb
mov
das
xchg
xor
sbb
pop
out
inc
xchg
insl
mov
lds
mov
mov
outsb
push
nop
jle
dec
and
jg
or
dec
mov
fimuls
pushf
loope
sbb
adc
sub
pusha
sub
cmp
dec
in
push
stos
imul
fidivrs
sub
xor
or
inc
shrl
jb
lret
or
scas
sbb
mov
std
in
push
cmp
cmpsl
adc
jge
repz
data16
pop
outsb
mov
popa
jecxz
lret
mov
test
adc
xor
ret
jl
orb
adc
out
fmul
lock
mov
and
cmpsb
fistps
rcll
cli
in
adc
arpl
pop
dec
push
sub
add
push
rorl
int
sbb
movsl
out
sub
popa
dec
add
stos
or
sub
jge
sbbl
push
jb
xor
jbe
xchg
xor
pusha
jge
cmp
fwait
mov
pop
scas
dec
ficompl
clc
aas
sti
lods
popf
fists
jno
test
bnd
cs
es
lods
or
repnz
adc
mov
cmpsl
inc
add
je
adc
test
adc
sbbl
lds
sub
mov
xchg
jns
fiadds
sbb
and
pop
int3
enter
cmp
inc
push
gs
int3
testb
adc
sbb
icebp
xor
xchg
cmp
sub
mov
pusha
mov
jnp
and
pop
and
movsl
mov
cwtl
or
imul
or
lods
clc
push
loopne
lock
adc
into
outsl
cmp
aas
sbb
jne
push
loop
stc
or
leave
int
mov
outsl
cs
je
mov
cmp
gs
outsl
popf
jmp
in
xor
adc
scas
and
iret
mov
adcb
mov
pop
inc
js
dec
jge
shrb
inc
sub
sbb
test
insl
adc
mov
jb
add
fcompl
mov
xor
mov
xchg
xchg
mov
into
jb
xchg
push
enter
sbb
sbb
jnp
jne
cmp
push
mov
ffreep
cmpb
stc
and
cmp
aas
jp
jbe
fsub
xchg
ljmp
fwait
lret
aad
push
aad
test
sti
imul
push
adc
jnp
or
xchg
push
push
cmpsl
sarb
frstor
outsb
dec
dec
xor
sub
lods
or
mov
movl
pop
jg
sbb
add
out
fcompl
cmp
inc
and
test
cmc
mov
loop
push
or
in
imul
mov
sbb
cmc
aad
xor
enter
xor
test
int3
aaa
xor
inc
sti
fdivs
xchg
push
js
mov
std
sub
mov
fmull
xor
fsubr
jp
or
mov
sub
outsb
call
je
push
cmp
movsl
xor
loope
sbb
sbb
mov
mov
push
icebp
pusha
xor
std
or
lret
sub
lods
decb
int3
fsubrs
dec
dec
dec
fiadds
sbbl
sti
repnz
jp
mov
mov
loopne
push
xchg
cmpsb
sahf
mov
out
xor
es
leave
in
mov
xchg
mov
add
mov
cld
mov
jp
pop
jmp
pop
aam
imul
xchg
or
mov
inc
mov
mov
jge
lods
push
jg
in
lock
fs
inc
pop
scas
fs
dec
or
mov
test
mov
ret
testb
fstl
les
xchg
fndisi(8087
imul
lret
out
bound
aad
shrb
pop
fbstp
es
mov
bound
xor
xorb
xlat
mov
xchg
dec
and
jae
fcmovnu
mov
shlb
les
mov
xor
cltd
stos
iret
push
mov
test
mov
mov
xor
or
rcrl
cld
test
dec
addr16
imul
pop
jp,pn
jae
xchg
aad
cmp
imul
stos
out
push
and
jne
jle
xlat
orl
cli
int3
or
lods
mov
addb
mov
xchg
mov
add
push
push
pop
jb
shrl
xlat
xchg
pop
xchg
jmp
add
pop
jle
inc
xchg
mov
pop
mov
imul
dec
dec
pop
lahf
jl
xchg
add
shrb
in
lahf
popf
inc
js
mov
int
lahf
jb
mov
lret
push
dec
jb
adcb
aad
xchg
mov
cwtl
adc
and
jbe
push
mov
repnz
mov
inc
lock
je
clc
loopne
aad
inc
add
aas
sbbb
lahf
xor
xor
jp
xor
dec
ss
test
push
test
scas
add
push
ds
jmp
add
mov
lods
loop
mov
jmp
frstor
and
gs
cs
and
into
sbb
testb
cltd
scas
aaa
push
fcmove
push
in
cli
insl
bound
and
and
pop
int3
fistpll
mov
pusha
sbb
xchg
gs
lds
pusha
cmp
fidivl
push
add
dec
pop
stos
mov
shll
js
cmp
sub
mov
stos
mov
int3
mov
add
faddp
in
fcmovne
xchg
dec
and
icebp
adc
and
int3
mov
aaa
clc
daa
clc
rcll
and
mov
jl
scas
ljmp
mov
mov
jb
fs
or
ret
jae
jo
mov
popf
les
scas
hlt
lods
movsl
mov
mov
mov
adcb
pop
mov
aad
fdivl
dec
mov
gs
addr16
push
mov
inc
dec
inc
pop
std
dec
lahf
mov
xlat
fiadds
stos
cwtl
test
movsb
cmp
int
mov
ret
std
mov
sub
divps
mov
scas
fistps
ss
sub
adc
lods
pop
addr16
pop
jle
lea
push
dec
cld
in
xchg
jne
mov
ss
or
sub
pop
or
loopne
adc
dec
loopne
xchg
loop
rorb
nop
adc
sub
imul
and
repnz
mov
pop
sub
les
jmp
test
xor
mov
lods
imul
push
sbb
xchg
movsb
inc
mov
sahf
mov
clc
in
push
sti
push
or
enter
jl
add
sub
mov
mov
insb
inc
mov
mov
or
or
cmp
mov
int3
inc
inc
push
call
pop
gs
mov
repnz
xor
and
divl
sub
mov
out
cmp
pop
dec
push
pop
cwtl
inc
in
cwtl
add
out
jl
fldenv
out
lods
rorl
mov
jp
aas
sbb
roll
daa
int
or
mov
pop
pushf
arpl
pop
outsl
mov
ret
int
jecxz
stos
lret
test
jne
lahf
icebp
and
lea
xchg
lret
cmpsb
mov
call
jae
fidivrs
mov
rorb
mov
jge
cmpsb
mov
mov
push
push
pop
push
xor
movsb
pop
push
sbb
xchg
out
mov
cmp
adc
dec
iret
ds
pushf
xchg
popa
pop
cmovno
mull
out
sub
cmc
or
push
cs
sub
pushf
cmpsb
fdivl
imul
dec
mov
imul
aad
inc
mov
mov
movsb
cmpsb
pusha
and
jle
fnsave
fldt
adc
mov
inc
std
ss
std
call
sti
insb
data16
mov
rcrl
nop
inc
test
shrl
pop
je
leave
cmpsl
add
mov
sbb
dec
jl
test
orb
pushf
and
xchg
adc
loopne
add
xor
or
dec
push
push
fldt
sti
lock
or
clc
cmpsl
xchg
sub
in
mov
xchg
xchg
fildll
shlb
dec
jae
pusha
inc
in
jg
pop
adc
and
xor
and
mov
jb
cmpsb
stc
sbb
icebp
push
sbb
xlat
int
push
lahf
jg
ja
xchg
jae
jne
movsl
or
push
mov
xchg
hlt
dec
mov
sti
mov
pop
push
sbb
insb
jno
pop
xchg
test
mov
lods
jae
xor
lock
addb
inc
jno
push
mov
addr16
mov
in
add
push
les
insb
xchg
mov
stos
imul
cld
lods
dec
lea
push
lods
mov
sbb
aas
mov
sub
push
adc
sahf
mov
clc
mov
mov
pop
sub
iret
sub
mov
lcall
call
aam
rcll
push
roll
push
out
adc
movsl
flds
or
test
push
xchg
repnz
jle
mov
or
stos
jge
subl
push
mov
cmpsl
xor
es
and
xchg
fildl
pusha
dec
hlt
out
test
lods
aad
outsb
mov
popa
mov
jecxz
std
jg
lcall
hlt
xor
jo
mov
cmpsl
add
iret
dec
jp
sbb
addl
enter
pop
or
aad
push
add
ljmp
cmpsl
xor
pop
filds
push
pop
jne
out
and
pop
lea
sub
sub
cmp
push
in
pop
mov
sti
lcall
pushf
jb
pop
and
call
repnz
pop
outsb
pusha
orb
dec
xchg
cmp
dec
push
pushf
inc
outsb
insl
cmp
pop
call
mov
dec
mov
and
pop
leave
scas
mov
mov
inc
push
pop
sbb
sahf
not
cmp
jp
cmp
pusha
out
cltd
adc
or
je
and
and
pop
out
mov
fidivl
into
mov
shr
xchg
aam
jmp
iret
out
pop
sbb
adc
jb
cmp
push
xor
les
sub
mov
lea
mov
outsb
jl
cmp
pop
mov
mov
ljmp
and
add
in
pop
cmp
mov
movsb
xor
sarb
push
fwait
cmp
dec
test
sbb
cmp
add
shrl
cmp
sub
loop
push
xor
gs
push
rcrl
cmp
inc
stos
or
test
cmpsb
push
mov
or
ss
mov
fsubr
mov
mov
daa
xchg
jbe
subb
pop
mov
sahf
or
cwtl
xor
mov
mov
push
mov
sbb
push
out
mov
das
jg
imul
fwait
outsl
add
insl
nop
mulb
inc
int3
lahf
gs
movsb
or
popa
cmpl
loop
pop
or
jg
mov
pop
btc
push
or
add
mov
pop
mov
xchg
fcmovnb
cmp
test
mov
aad
aad
repz
jne
mov
clc
pop
push
repnz
test
jne
and
and
mov
jle
push
gs
mov
lea
push
push
mov
fdivr
cmpsb
mov
or
dec
ret
cmp
add
xor
mov
jp
std
pop
insl
scas
jmp
and
add
in
rcr
cld
mov
xor
into
mov
cmpsb
dec
inc
adc
paddw
movb
mov
push
pop
add
stos
cmp
or
lods
hlt
fstpl
out
push
xchg
cmp
sbb
jp
dec
scas
push
push
and
adc
adc
lods
sub
and
and
les
int
cmc
les
add
add
aaa
sbb
add
push
adc
sbb
lahf
jmp
sete
notl
mov
shll
fs
insl
aad
lahf
js
scas
ljmp
or
or
popf
sbb
in
scas
mov
popl
sbb
into
mov
sbb
lcall
mov
fidivl
out
sbb
push
rcrb
add
xor
scas
addr16
nop
cwtl
sbb
mov
xor
inc
pop
mov
xchg
adc
add
ds
adc
imul
cmp
jbe
aaa
cmpsl
jb
jns
jl
jo
and
out
mov
mov
jb
int
dec
loopne
cli
or
jne
or
mov
cmp
inc
pop
mov
push
jl
mov
xor
or
dec
push
stos
stos
insb
mov
loopne
jb
xchg
hlt
add
adc
sbb
xchg
loope
lret
push
sti
lahf
loopew
dec
in
repz
cmp
jns
push
pop
adc
jns
insl
push
xor
call
cld
fisubrs
and
aas
adc
inc
icebp
daa
ljmp
and
push
xchg
pop
sub
pop
rolb
out
aad
inc
sub
adc
add
pop
pop
test
or
push
outsb
mov
pop
jno
push
adc
mov
jmp
insl
ljmp
mov
jle
sahf
rclb
push
mov
xlat
xchg
fmul
sub
imul
xchg
fisttpll
jg
ss
adc
addr16
jg
pop
xchg
push
sub
lock
mov
adcb
ja
ror
outsl
xor
jmp
jl
pop
in
pop
pop
mov
fnstsw
bound
mov
sti
sbb
test
icebp
leave
movsb
sbb
cmp
pop
and
push
fsubl
fbld
mov
cmc
adc
adc
mov
fsubl
cmp
mov
xor
dec
leave
and
out
cmp
je
jb
xor
jo
xor
loope
mov
dec
shrl
adc
es
push
push
outsl
mov
repnz
jno
fwait
pop
sbb
dec
dec
gs
mov
mov
jns
and
imul
sbb
lods
jle
jmp
mov
aaa
pop
sub
outsl
push
out
test
inc
xorb
insb
sub
fcmovnb
mov
push
arpl
push
loop
pop
mov
lods
lock
pop
mov
inc
clc
ljmp
sbb
jns
out
adc
out
dec
inc
fwait
into
mov
lcall
rolb
mov
push
sbbl
mov
out
or
mov
addr16
and
out
pusha
out
xor
and
mov
xchg
je
sti
je
push
dec
cmpsl
mov
movsl
jo
mov
or
jge
mov
mov
sbb
mov
lahf
dec
subl
mov
or
push
jmp
sub
jo
or
shrl
jg
pop
inc
ss
scas
mull
dec
popa
xor
sti
pop
rcll
mov
mov
fsts
addb
in
movsl
lock
aaa
mov
sbb
jo
and
lea
arpl
xchg
mov
sbb
cld
push
xchg
jno
sbb
add
je
sub
xchg
arpl
inc
push
and
push
mov
xlat
and
repz
add
neg
push
cltd
xchg
pop
aam
daa
sbb
mov
lahf
jmp
mov
inc
adc
mov
iret
mov
inc
lock
xchg
out
push
xchg
pop
pop
adc
cmp
lret
mov
fdivrl
jno
cmp
jo
mov
mov
xor
cli
outsb
push
pop
xchg
out
lahf
pop
in
mov
jp
add
xchg
mov
js
sub
popa
xlat
jmp
in
mov
lret
push
pop
pop
and
add
mov
or
push
dec
pop
xchg
and
iret
aad
mov
lock
imul
mov
mov
mov
pushf
xchg
dec
xorl
testl
cmc
adc
mov
dec
sbb
cltd
mov
dec
jo
push
pop
out
push
push
cmpsb
es
mov
aam
cmc
dec
jmp
sbb
mov
push
mov
inc
mov
std
push
shr
xchg
xor
dec
cltd
fdivrs
xor
push
jp
mov
xor
inc
into
sarl
push
and
ds
icebp
sub
adc
push
lods
inc
cmp
out
shll
iret
dec
mov
jmp
std
jne
inc
daa
lcall
cmp
dec
adc
or
into
pop
sbb
scas
mov
sub
xor
cmp
imul
and
hlt
pop
mov
sub
or
mov
cmp
add
mov
mov
xor
or
lret
push
push
int
sbb
push
ljmp
insl
sub
loopne
sbb
stos
push
dec
clc
push
pop
jg
cmpsb
pop
inc
movsb
scas
mov
imul
pop
ds
out
mov
fs
sub
sub
sbb
mov
adc
into
xor
bnd
popf
xor
adc
scas
xchg
lea
mov
dec
pop
in
push
loopne
add
mov
mov
xchg
xor
mov
bound
mov
inc
in
adc
adc
loope
push
lds
mov
push
scas
mov
out
stos
sub
aam
jl
jo
mov
repnz
cmc
sbb
xor
adc
mov
pop
fidivl
cmc
sub
movb
jle
mov
and
and
or
lcall
fxch
mov
cmp
popf
iret
and
jmp
ja
cmpsl
xor
jge
clc
ja
fimull
or
shlb
std
sub
jb
lock
xchg
or
pop
lock
add
bnd
sub
sbb
test
scas
out
cld
fisttpll
repz
repnz
fistpl
dec
cmc
in
pusha
sbb
mov
dec
sti
mov
and
jl
sbb
push
movsb
shrl
shrl
ret
orl
xchg
test
inc
ja
sbbl
adcl
addr16
pop
xchg
cmpsb
dec
push
sarb
cmpsl
sbb
loopne
mov
mov
pop
dec
dec
sbbl
mov
sbb
les
lcall
sbb
int
imul
clc
into
xchg
mov
sbb
sti
xor
inc
fld
rcl
push
pusha
inc
mov
add
sub
rcl
arpl
xlat
add
stc
into
or
outsb
mov
repnz
mov
or
xchg
sbb
xor
cmp
or
scas
push
xchg
adc
cs
imul
mov
inc
testb
lods
aaa
jp
add
cld
das
mov
xchg
pop
and
or
xor
cmp
inc
xchg
pushf
in
fucom
push
adc
or
jl
int
sbb
je
sbb
or
sub
fst
in
xchg
lcall
xor
sub
mov
outsl
les
outsl
notb
jno
in
clc
add
dec
aaa
cmpsb
mov
fistps
push
gs
nop
out
pop
lret
pop
out
jns
int
scas
fs
mov
lcall
int3
enter
insb
test
adc
loop
lea
stc
jle
ss
insb
dec
mov
mov
cmp
jp
xchg
xor
add
iret
jae
mov
mov
push
notb
sarl
jbe
push
sbb
enter
popf
jns
adc
sbb
ret
jmp
mov
ds
dec
nop
fcmove
pop
fisubl
lahf
xor
ret
jle
jl
movsl
xor
out
mov
jno
push
and
cmp
inc
mov
push
ja
or
or
insl
inc
fwait
stc
scas
std
inc
pop
shrl
or
adc
sub
xor
cld
int3
cmp
mov
and
pusha
lods
arpl
push
daa
mov
pop
add
mov
mov
mov
es
lret
xchg
add
or
mov
scas
pop
aaa
fcoml
add
pop
pop
or
cmpsl
mov
mull
or
scas
push
xor
mov
lahf
fcompl
sarb
ret
push
jne
sbb
rcrl
xchg
addr16
and
and
pop
push
flds
xor
daa
cs
adc
std
out
cs
ret
mov
insb
cltd
cmp
cmpsb
adc
cmpsb
cli
adc
mov
jp
popf
sbb
or
bnd
push
push
das
cld
xlat
add
pop
shrl
test
inc
mov
push
gs
das
sbb
adc
sub
lret
push
pop
test
or
dec
ror
push
push
pop
ljmp
and
scas
xor
sub
xor
adc
pop
push
jge
or
movsb
push
and
and
je
pop
scas
bound
inc
ljmp
icebp
adc
loopne
jae
adc
mov
and
shrl
outsb
imul
aam
movb
aam
xlat
aas
aas
cmpsl
inc
jbe
insb
add
jne
addr16
je
ljmp
aaa
pop
cmp
sbb
mov
mov
inc
imul
enter
pop
test
pusha
cwtl
mov
cmp
sbb
jmp
cmp
add
loopne
mov
jnp
adc
mov
pop
xchg
mov
scas
cmpsl
push
lea
push
push
outsb
cmp
movsl
dec
fwait
add
nop
clc
popf
fcmovnbe
and
push
cmp
jle
inc
pop
and
int3
mov
aaa
adc
push
cwtl
sub
bound
cmp
mov
andl
in
push
insb
sbb
test
cmpsl
mov
cmc
xchg
push
sti
frstor
mov
mov
fldl
clc
dec
push
cld
jno
imul
pop
subl
sub
adcl
sbb
and
test
cmp
leave
rcrl
loope
shld
sti
mov
inc
jne
jno
sar
cwtl
aad
pop
or
negl
cmpl
push
out
mov
mov
adc
sti
mov
notl
and
pushf
xor
pusha
cmp
inc
iret
pop
pop
or
outsb
mov
and
gs
mov
mov
shrb
divl
nop
xchg
cwtl
jle
dec
jecxz
mov
in
jmp
stc
pop
ror
cmc
mov
test
ss
pop
jg
mov
cli
sbb
rcrb
cmp
xor
xchg
in
loopne
das
out
test
out
arpl
xchg
fnstcw
mov
inc
sti
in
jo
out
dec
sub
mov
jmp
ja
xchg
and
pop
sbb
cmpsl
fistpl
xor
cld
into
call
mov
leave
popa
das
push
jb
xchg
movsl
rorb
ret
xchg
fmull
std
mov
pop
mov
movsl
jle
lds
add
cmc
inc
fwait
sub
rol
mov
pop
popf
lds
jne
lcall
jno
and
jg
mov
gs
mov
xchg
or
orb
ja
xchg
dec
ret
xor
sbb
in
or
mov
push
xchg
pop
dec
daa
xchg
pusha
push
jmp
sahf
mov
mov
fldln2
popa
imul
ss
sti
sub
das
inc
pop
test
and
enter
shlb
xor
dec
jno
push
test
or
xchg
mov
incl
sub
add
hlt
ss
arpl
imul
or
cwtl
dec
pop
outsb
lods
adc
jae
leave
pop
ds
cwtl
mov
aam
sbb
jae
pop
push
es
std
mov
ror
adc
mov
adc
icebp
xor
insl
hlt
xchg
xchg
jecxz
inc
push
inc
pop
jno
jge
stc
dec
xchg
xchg
push
or
mov
enter
jnp
pop
push
inc
add
dec
inc
push
cmp
or
mov
in
js
shrb
inc
imul
cs
stos
mov
push
movsl
je
sub
out
fildl
pop
mov
mov
inc
insb
push
rolb
pop
and
ja
fidivrs
divl
repnz
cli
test
xchg
shl
dec
cli
or
popf
xchg
and
push
cmp
shll
sub
daa
inc
push
iret
sub
iret
test
pop
sbb
sub
rcr
xor
mov
iret
ljmp
rcr
cmp
mov
je
dec
loop
jle
mov
insl
das
add
jae
clc
insl
or
ds
add
or
or
xorb
aas
xchg
push
pop
mov
rol
pop
pop
lds
scas
sub
push
and
mov
sahf
cmp
pop
icebp
aad
lret
jne
push
mov
fs
mov
jbe
and
jmp
popa
jae
ret
push
data16
adc
mov
pop
pop
push
outsb
cmc
decl
repz
fmuls
mov
aad
push
fisubs
push
lret
mov
faddl
sbb
lcall
bndldx
pop
jl
add
ss
das
cwtl
cmc
mov
dec
mov
pop
outsb
xchg
insb
cltd
test
cli
cli
sbb
scas
and
sub
ja
sahf
inc
loope
out
std
xchg
arpl
lcall
ror
bound
int3
call
bswap
arpl
mov
inc
loope
push
je
int
pop
leave
or
mov
xchg
cs
jno
and
xor
aas
sbb
jmp
out
or
push
bound
int
jo
mov
sub
jl
dec
adc
jg
pop
pop
testl
jg
jo
add
dec
pop
repnz
repz
fbld
jnp
push
mov
test
dec
test
in
out
xor
inc
mov
imulb
unpckhps
fistpll
add
mov
jne
add
pop
mov
mov
add
jecxz
and
xor
jno
jge
add
fisubl
and
xchg
ja
cmp
add
imul
xchg
mov
sub
xchg
mov
ds
std
push
nop
ss
sbb
pop
jle
mov
je
lea
popa
xchg
out
and
ret
cmp
mov
and
daa
xchg
xchg
aas
in
dec
clc
mov
daa
das
xchg
add
pop
mov
push
sub
jecxz
stos
xchg
cwtl
mov
xchg
mov
xor
test
jmp
jp
pushf
pop
jmp
mov
mul
xchg
loope
scas
jecxz
xor
mov
push
fwait
push
mov
or
enter
mov
push
stc
mov
dec
jl
cmc
pop
mov
es
test
xor
out
push
fnstcw
orl
ret
and
mov
or
test
push
hlt
cmp
das
adc
inc
sbb
pop
nop
fwait
cli
cld
outsb
cmpsl
in
and
fcomp
pop
push
dec
addr16
sub
aad
les
xchg
push
lret
shrl
std
adc
negb
loope
iret
sahf
lcall
inc
in
mov
icebp
out
xchg
cmc
stos
out
stos
dec
mov
adc
sbb
dec
imul
popa
cmp
imul
mov
add
add
pushf
out
mov
jmp
aaa
enter
push
jmp
xchg
sahf
imul
repz
repz
std
es
push
popf
sbb
jno
mov
mull
incl
inc
dec
cmpsl
and
roll
pop
data16
outsb
rorl
jns
dec
in
xor
push
aam
into
push
bswap
sbb
inc
mov
inc
iret
add
dec
push
lea
faddl
pop
test
dec
push
push
test
insl
cld
lds
stos
mov
out
rorl
and
jo
orb
sub
pop
mov
movsl
stos
sbb
jnp
xchg
movsb
and
jge
add
pop
mov
sbb
push
hlt
mov
fstp
or
adc
das
cmpsb
enter
add
mov
add
jmp
ficomps
addr16
add
mov
mov
sbb
mov
ja
insl
sbb
pop
add
cwtl
jne
lods
enter
inc
xchg
xor
lahf
icebp
mov
into
in
jae
movsb
add
stc
and
jg
pop
insb
jl
mov
mov
xchg
loop
cltd
mov
bound
and
pop
mov
mov
sahf
mov
popf
iret
push
push
inc
inc
dec
xchg
fdivrl
sarl
hlt
xchg
inc
mov
sbb
mov
ret
cld
aam
lahf
adc
out
test
daa
ret
add
lods
mov
lret
rorb
stos
push
stos
clc
gs
sbbb
sbb
push
adc
rcrl
andb
dec
leave
cmp
cmp
adc
mov
orb
fldcw
dec
jno
xchg
leave
notl
and
adc
push
or
mov
rcrb
xchg
sahf
dec
std
sarl
and
ret
leave
in
loop
xchg
or
cld
jbe
mov
push
add
ss
pop
in
inc
sbbb
xchg
stc
xchg
cmpsl
mov
mov
adc
xor
jge
fucomp
push
push
jle
fwait
ret
inc
lds
xchg
adc
pop
jo
into
jno
inc
pop
shll
jp
pop
jne
add
mov
cmp
dec
cmp
aaa
repnz
xchg
mov
jg
and
sub
and
je
mov
adc
insl
inc
mov
jle
jmp
or
mov
pop
leave
in
fiaddl
jle
sub
in
ret
lods
outsl
mov
jge
rcl
addr16
addr16
jno
cmp
cmpb
push
dec
or
and
into
bound
jmp
insb
adc
add
jb
dec
and
xchg
cmp
dec
mov
push
and
pop
or
stos
das
push
jge
lcall
mov
lret
scas
rcrb
loope
add
test
popf
sti
sub
pop
sub
push
ss
sbb
dec
test
mov
jne
pop
inc
mov
inc
out
insl
cmp
outsl
cmp
cltd
xor
popf
rolb
cltd
iret
pop
movsb
jge
ficoml
ja
xchg
mov
ds
jnp
sub
jg
in
jbe
sub
push
dec
add
aad
pop
push
pop
sub
xchg
iret
or
adc
in
and
fst
pop
ret
adc
es
inc
fisubrs
inc
jnp
or
jecxz
pop
xor
mov
push
enter
vcvtpd2dqx
pushf
or
nop
mov
mov
push
cmp
aas
je
cmpsl
sbb
adc
mov
sub
sub
ret
mov
cli
rcrl
pop
in
and
sahf
std
gs
andb
cltd
iret
repz
loop
push
mov
lock
pop
xor
mov
imul
dec
into
ret
inc
in
xchg
push
aam
and
daa
inc
dec
adc
aas
adc
xchg
je
sub
inc
pushf
fs
cld
and
fisubl
out
lods
test
test
sub
sbb
daa
ret
push
cmc
imull
ja
into
sbb
mov
stos
in
dec
mov
xchg
push
add
dec
mov
movl
sarl
dec
ficompl
mov
mov
sti
cmp
jg
fsts
insb
mov
xchg
sub
shlb
sahf
add
fldenv
es
mov
inc
mov
icebp
dec
cmp
lods
cmp
cwtl
mov
popf
scas
nop
push
add
movaps
in
out
add
loope
xchg
xchg
push
mov
push
imul
sahf
repz
in
daa
addr16
insb
add
inc
cmp
mov
push
mov
push
sub
cmp
mov
cwtl
sar
sbbl
es
out
dec
xor
xchg
ret
sub
push
mov
in
push
xlat
ljmp
test
adc
push
xchg
inc
fs
mov
mov
dec
inc
movsl
adc
jo
push
in
stos
outsb
mov
mov
and
stos
jl
add
std
mov
dec
orb
push
lret
fisttps
scas
add
mov
in
xchg
mov
inc
push
ficomps
cltd
test
cmp
sub
leave
inc
pop
sarl
cltd
mov
lea
inc
jmp
js
dec
pop
daa
lret
cmpsb
test
adc
loope
jmp
pop
push
xor
pop
sub
fneni(8087
mov
sahf
xor
adc
mov
cli
fcompl
inc
add
nop
push
xlat
in
out
incl
sti
push
mov
bound
clc
mov
jae
inc
cmp
push
and
mov
cmp
notl
fldenv
sub
out
test
in
cld
addr16
test
add
mov
lock
lcall
scas
cli
dec
lds
jo
test
bound
insb
fs
adc
push
inc
in
lret
mov
imul
clc
jo
jns
adc
jecxz
pop
hlt
inc
xchg
mov
sub
scas
repnz
fdivrs
xchg
out
lret
xchg
stos
mov
sub
jae
adc
decb
jle
mov
ja
inc
out
adc
mov
hlt
adc
movsl
xor
jmp
cmpsl
pop
outsl
push
push
jmp
test
dec
adc
outsb
add
in
loope
aam
xchg
or
data16
rcr
and
in
into
cmp
outsl
sub
in
div
testl
push
popa
pop
add
lods
push
mov
cmp
imul
loop
out
push
dec
lods
mov
cmp
mov
icebp
add
push
mov
pop
sahf
push
pop
inc
inc
or
inc
push
sbb
popf
dec
fimuls
mov
fcoml
and
push
ds
pop
jg
xrelease
insl
push
pop
xor
add
pop
in
mov
xor
jo
and
mov
lods
aaa
pop
into
add
jecxz
pushf
mov
jmp
sub
aam
shrb
dec
or
sbb
or
dec
push
out
cltd
dec
outsb
cmp
divl
add
insb
ljmp
movsl
aad
arpl
lock
lcall
mov
jecxz
imul
lret
test
rorl
test
jo
inc
sbb
cpuid
repnz
jp
mov
push
sbb
mov
sub
jp
adc
sbb
add
mov
outsb
add
leave
jb
mov
pop
bnd
cmpsb
dec
leave
pop
pop
pop
stos
xor
xchg
loop
mov
xor
xchg
and
and
repnz
mov
rorb
mov
sbb
jl
clc
icebp
mov
dec
lea
xchg
and
jp
mov
sub
jns
xchg
pop
pop
mov
int
pop
pop
mov
fisubs
cltd
dec
out
add
xor
push
icebp
mov
movsb
ljmp
loopne
daa
add
push
ret
cwtl
push
xchg
pop
sbb
cwtl
push
aas
xlat
mov
cmp
mov
fdivs
xor
push
xor
mov
inc
xor
rorl
push
jmp
xchg
nop
cltd
xor
insb
xor
jne
push
mov
pop
mov
mov
cltd
pusha
js
imul
pop
mull
pushf
adc
lahf
adc
add
add
mov
out
roll
push
jo
pop
mov
pop
std
call
cmp
mov
test
mov
sbb
pop
adc
fadds
adc
mov
rcrb
xchg
mov
movsb
mov
mov
inc
in
arpl
sub
insb
loopne
xchg
pop
mov
adc
sub
call
popa
insb
ror
fwait
int3
test
cs
pop
adc
jb
ret
mov
loope
mov
dec
xchg
cmp
add
mov
fstps
hlt
cs
icebp
push
push
pop
mov
sub
aad
and
lock
or
pop
ret
add
filds
xlat
push
int
loop
lods
add
sarb
in
enter
mov
cmc
enter
test
inc
mov
add
movsb
jle
adc
add
jg
dec
mov
mov
lcall
add
lcall
push
pop
xchg
xchg
leave
pop
xchg
pop
jg
notb
push
sub
mov
sub
add
std
push
ja
fsubl
dec
int3
aam
in
dec
and
mov
inc
sbb
mov
lods
sbb
xchg
dec
in
out
lret
dec
cmpsb
jne
jns
jns
xchg
imul
adc
repz
lahf
stos
nop
xor
cmp
repnz
shl
fmul
sub
push
hlt
jg
aad
pop
mov
mov
jmp
mov
cmc
sbb
or
sub
push
addr16
lea
out
adc
push
mov
ss
aam
out
jl
sbb
xchg
movsl
inc
xchg
subb
sub
pop
mov
xor
dec
lods
dec
ret
aaa
dec
sbb
inc
imulb
test
mov
xor
mov
xchg
sub
pop
loopne
call
stos
pop
sub
xor
sub
push
pop
adc
jecxz
fsubrp
xor
orl
pop
or
dec
sbb
push
int
lahf
push
mov
lret
cmp
pop
stos
inc
pushf
mov
shlb
and
addr16
rolb
pop
jp
mul
cmc
test
mov
sbb
hlt
aad
ss
mov
push
sub
xchg
xor
push
imul
dec
pop
test
clc
cmpsb
out
lcall
insb
mov
popa
xchg
cmp
or
pop
stos
adc
pop
daa
mov
in
cltd
or
test
arpl
mov
pop
dec
aam
daa
fstpt
sub
js
mov
lret
syscall
nop
popw
addb
mov
pop
mov
mov
mov
idivl
aam
add
fcomps
ret
aas
fwait
arpl
push
mov
jae
fidivl
mov
ljmp
add
push
adc
in
jge
loop
sti
add
sbb
mov
sub
adc
lods
icebp
fcomps
xor
jno
aad
cmp
xor
and
aaa
test
mov
pop
cmp
xchg
scas
mov
ret
popf
mov
jae
push
push
jmp
imulb
cmpsl
dec
push
fsubrs
ss
adc
cmp
jge
jmp
fs
sub
mov
fimuls
mov
sbb
or
into
mov
push
imul
cmpsw
xchg
xchg
dec
jae
popa
mov
cmovl
push
mov
push
dec
stc
push
and
insl
mov
xchg
fwait
xor
cmp
ja
dec
nop
aam
pop
test
lret
inc
or
aad
lret
adc
inc
decb
aaa
in
mov
hlt
arpl
pop
sub
das
inc
pop
lock
push
test
mov
cltd
pop
lahf
mov
mov
test
popf
scas
lock
aam
notl
pop
push
adc
mov
sbb
repnz
cmpsb
es
dec
pop
xchg
adc
mov
lea
jmp
cld
and
movsl
sub
pop
add
or
jnp
sub
pause
je
fdivp
ror
inc
sub
div
fdivr
movsb
jb
in
lods
push
mov
lcall
dec
inc
xchg
out
popfw
mov
mov
shlb
sbb
lods
or
mov
xchg
idivb
push
stc
fdiv
lock
aad
hlt
rol
clc
cli
push
ja
rcrl
cmp
push
pop
imul
outsl
hlt
push
out
inc
fsubrl
dec
mov
xchg
lahf
lret
or
lock
mov
das
gs
jno
dec
sub
es
insl
pop
add
xorl
enter
out
movsb
xor
jnp
dec
cmp
cli
xor
bound
cmp
subl
bound
shrl
jae
fs
clc
fsubl
xchg
cld
jl
pop
loope
stc
stos
pop
cmp
pop
icebp
ljmp
xchg
inc
mov
imul
iret
dec
adc
mov
cmp
nop
cmp
jp
sarl
enter
test
inc
dec
push
cmc
es
or
sub
dec
pop
push
cmp
sub
add
aaa
cli
cmp
sub
fldenv
sbb
test
xor
inc
mov
push
lock
cmp
push
mov
add
shr
and
or
outsl
ja
mov
xchg
mov
xor
lret
outsb
or
std
jno
imul
dec
call
mov
int3
cmp
movsl
dec
jnp
aaa
in
test
fpatan
jmp
cmc
lods
js
mov
mov
dec
or
fs
sub
and
es
push
test
shll
pavgb
std
push
stos
dec
call
imul
jo
imul
and
push
dec
sub
or
push
sub
icebp
fldt
stos
adc
inc
repz
mov
lret
je
cmp
pop
outsb
lea
scas
or
jecxz
inc
out
cmpsl
imul
insb
push
dec
lret
lods
adc
dec
sbb
inc
mov
sbb
loopne
std
ss
fisubrl
je
xchg
out
jmp
sbb
movsb
fwait
xchg
and
sbb
xchg
clc
adc
push
add
loope
aas
dec
js
aad
fwait
mov
dec
std
add
bound
cmp
jo
pop
mov
movsb
dec
mov
hlt
std
mov
cs
movsb
pop
out
mov
je
mov
add
add
inc
lcall
xchg
mov
imul
and
xchg
dec
inc
xorb
cmp
sub
sub
jno
out
daa
data16
or
and
aam
and
pop
push
sbb
xchg
sbb
xlat
pop
ss
mov
adc
out
das
call
aad
in
mov
mov
jbe
cmpsb
mov
and
adc
cmovno
pop
add
adc
adcl
adc
jb
xor
sub
add
inc
repz
xchg
mov
int
cli
aad
scas
xchg
hlt
jnp
adc
pusha
dec
sti
popa
cmp
sub
xor
dec
sub
cmp
xchg
fwait
pop
mov
jne
xlat
iret
addr16
push
jp
sbb
ja
add
pop
push
sbb
or
outsb
dec
pop
lahf
lret
addr16
stos
imul
paddsw
jecxz
pop
xor
aam
or
xchg
dec
sub
in
jle
int
mov
adc
add
pushf
xchg
push
jmp
and
daa
cli
xchg
clc
push
dec
movl
fisubrs
icebp
in
bound
mov
dec
push
stos
add
xor
fwait
mov
ret
sbb
int
xor
cmpsl
ret
test
dec
and
add
in
test
fucomi
pop
sahf
mov
sbb
je
xchg
dec
jecxz
rcrl
jb
jl
inc
sbb
fwait
insb
xchg
arpl
add
jbe
mov
ja
lock
adc
sub
gs
outsl
dec
loopne
mov
dec
jecxz
dec
mov
add
cmpsb
je
add
add
lcall
fmuls
adc
pop
stos
fs
ljmp
addl
or
push
push
loopne
push
push
dec
mov
dec
sti
cmp
inc
into
adc
rolb
mov
mov
int3
aas
movsb
test
mov
shlb
xor
test
sub
push
and
out
fistpl
fst
xor
mov
pop
scas
mov
push
jnp
daa
ret
cmp
push
sbb
dec
aam
out
mov
inc
icebp
mov
lcall
dec
and
in
xchg
icebp
xor
pusha
or
push
subl
mov
jp
adc
loopne
add
pop
sbb
pop
outsl
add
push
loopne
push
dec
or
repnz
dec
into
addb
jecxz
jo
jns
push
aad
xlat
ljmp
in
mov
lret
push
or
mov
stc
ret
repnz
imul
rcll
loop
ljmp
jecxz
inc
or
or
out
rcrb
test
adc
dec
mov
addl
sub
sub
enter
inc
jne
push
mov
stos
dec
jno
aam
or
mov
das
or
imulb
imul
mov
xor
dec
sub
movsb
xchg
pop
movsl
sub
dec
jmp
adc
inc
and
cmp
cli
popa
mov
push
mov
cmp
sub
xchg
mov
pop
mov
mov
ret
shlb
into
mov
outsl
pop
push
add
jmp
fwait
jno
push
pop
scas
jge
test
call
sub
das
mov
es
pop
stos
std
dec
mov
cmpsl
dec
add
nop
jp
mov
sub
ss
xor
sbb
inc
and
dec
pop
fisubrl
dec
mov
in
int
leave
addr16
or
lret
adc
inc
cwtl
dec
xchg
cmc
enter
rcr
mov
lods
push
mov
pop
lds
nop
lods
jmp
sub
sarb
fs
fadd
sbbl
lret
scas
xor
add
or
out
mov
inc
iret
sub
fnstsw
ljmp
orb
jne
jb
fcoml
mov
jmp
xor
inc
xchg
sub
pop
in
mov
in
push
out
jb
jbe
pop
in
stos
aam
rcr
push
adcl
sti
notb
add
inc
ret
in
xlat
loope
mov
lds
mov
mov
push
dec
lock
and
es
mov
js
scas
in
ljmp
out
cmp
dec
jne
cmpsb
pop
repz
or
mov
aaa
mov
iret
and
mov
adc
inc
dec
jge
push
gs
xchg
inc
jnp
mov
les
ficompl
popa
add
clc
aaa
mov
into
and
xchg
or
sahf
sahf
lock
mov
roll
scas
dec
fwait
arpl
mov
push
icebp
and
jbe
std
data16
adcl
shr
shlb
addl
add
scas
mov
jne
dec
fstp
inc
mov
xlat
dec
ljmp
jmp
out
cmp
bnd
stos
add
mov
xor
cmp
sub
fisubl
sub
xchg
dec
lahf
push
bnd
repz
mov
addl
mov
data16
test
cmp
cmp
mov
adc
orl
or
in
xchg
sarb
daa
cmp
add
sub
jmp
popf
hlt
movsb
cmp
xchg
inc
cmp
adc
xchg
adc
and
or
jle
jl
or
sahf
xor
inc
test
lods
xor
jbe
ficompl
js
orb
sub
dec
out
fwait
ds
fnsave
je
das
shl
ja
pushf
add
pop
pop
xchg
js
les
lcall
push
into
sbb
jle
in
mov
imul
daa
push
adcb
das
jnp
xor
imul
sbb
dec
call
mov
loopne
and
pop
mov
fs
inc
and
cmp
xor
ret
shrb
push
out
dec
cmp
imul
jp
push
mov
or
arpl
mov
sahf
and
add
sbb
movsl
xchg
pop
aaa
jp
mov
sbb
out
sub
test
es
mov
gs
stos
mov
dec
push
lret
pop
xchg
and
xchg
jg
shrb
out
test
mov
push
cld
or
cmpsl
pushf
jne
pusha
sbb
push
and
push
insb
addr16
pushf
add
add
and
cmp
jecxz
movsb
movsl
inc
add
fs
aam
jb
push
ss
and
fisttpll
sahf
jo
xor
xchg
dec
ljmp
popa
jg
push
adcl
fcoms
cmp
sub
inc
cs
enter
mov
inc
ret
leave
dec
mov
arpl
imul
dec
lea
ret
mov
stos
daa
arpl
sti
adc
jl
movsb
std
push
das
xchg
inc
sub
jge
ljmp
xchg
pop
pop
mov
xchg
test
test
push
dec
xor
in
mov
mov
mov
mov
js
loope
shlb
popa
inc
leave
jno
or
xchg
xchg
repnz
sbb
push
js
fdivrl
and
imul
cli
inc
out
test
pop
cmp
leave
or
mov
adc
lret
subb
scas
lahf
push
loop
mov
jbe
cmp
adc
test
mov
popa
lcall
jne
imul
and
mov
in
out
mov
pcmpgtd
ret
mov
sbb
jle
sbb
push
inc
negb
aam
je
inc
das
ss
xchg
rcll
fwait
repnz
lret
and
add
and
pop
scas
inc
push
jecxz
sub
out
mov
adc
and
or
cmp
loop
outsl
ja
sarl
adc
pop
outsb
test
xchg
out
icebp
lcall
mov
pop
inc
xlat
ds
inc
jle
lods
sbb
rclb
ret
imul
dec
push
jecxz
pusha
inc
mov
aad
movsl
mov
testl
nop
out
sbb
and
shlb
pop
jbe
xor
push
inc
dec
jbe
cmp
aam
mov
mov
mov
adc
mov
adc
popf
cmpsl
sbbb
mov
jno
mulb
cld
repnz
ljmp
mov
or
repz
mov
dec
cltd
xor
add
jbe
lea
ficompl
outsl
test
mov
jo
mov
scas
stos
fsubs
imul
sbb
lods
dec
subb
ja
je
call
sahf
jl
enter
jnp
sub
xlat
xor
popf
lods
ljmp
push
in
inc
xor
inc
dec
push
push
repz
mov
inc
push
inc
cmp
in
add
test
cmc
xchg
jmp
mov
cwtl
inc
xor
sahf
inc
stos
adc
ja
adc
cmc
or
jmp
out
sbb
icebp
and
jg
loope
pop
mov
jl
dec
loope
mov
inc
mov
cmc
roll
dec
popf
mov
mov
xchg
xchg
subb
loope
dec
fcomps
pop
pop
dec
aaa
ss
pusha
dec
add
xchg
push
std
pop
mov
int3
in
sub
mov
sahf
cmc
push
or
pop
repz
pop
loopne
out
adc
jmp
lcall
in
fdivr
and
add
data16
adc
push
enter
imul
jl
push
cmp
inc
aad
push
xor
push
insb
mov
xchg
xchg
iret
pop
sbb
dec
inc
pop
push
leave
and
test
decl
ffree
inc
mov
push
clc
dec
and
pop
aam
loope
ret
sbb
cmp
fsubl
cmp
pop
pop
push
je
sub
daa
arpl
sbb
xchg
add
cmpsl
jecxz
or
fsts
push
into
push
mov
xchg
mov
add
into
fsubl
lock
out
test
div
jnp
mov
cmp
sbb
jo
push
sbb
lds
xchg
mov
stc
push
jne
cs
bndldx
xchg
loope
cltd
cmp
ret
mov
popa
rclb
xor
sbb
ds
lret
push
sbb
adc
xor
into
cli
pop
pop
sahf
jg
stc
dec
daa
push
sbbb
mov
fdiv
mov
pop
jne
pop
filds
adc
lods
push
shl
mov
jp
mov
sub
das
test
jg
lret
xor
loopne
jb
ficomps
je
inc
sbb
bound
jo
dec
std
cmpsb
xchg
mov
out
xor
fdivrs
xchg
dec
repnz
mov
and
scas
fnstsw
bound
jnp
mov
out
repnz
xor
xchg
ret
dec
clc
xor
dec
mov
jle
jns
add
cmpsb
pop
jnp
mov
les
jmp
mov
or
mul
int
xor
push
xor
and
mov
ljmp
sti
scas
jmp
lahf
es
std
xchg
sub
out
fcomi
pop
ret
jae
and
cmpsl
sub
xor
out
inc
sbbb
addl
pop
ret
or
pop
mov
mov
mov
shlb
in
jmp
aam
lea
sbb
cwtl
and
push
lock
cld
add
or
cmove
out
inc
fisttpll
lods
dec
push
jno
ret
xlat
add
sti
lods
mov
inc
js
pop
out
or
bound
xor
lcall
jmp
sbb
add
dec
fs
mov
mov
mov
jmp
jp
pop
adc
xlat
or
dec
divb
xor
or
mov
pop
mov
pop
mov
test
xchg
xchg
mov
push
lret
in
mov
loopne
aam
push
adcl
mov
mov
mov
mov
insl
lahf
jl
sahf
movsb
mov
adc
jo
cli
pop
xchg
cmp
pop
adc
enter
fistl
push
mov
jbe
loop
mov
xchg
xchg
shlb
sub
clc
or
adc
mov
ds
sbb
lcall
mov
fstl
out
mov
push
pop
clc
pop
ds
call
stc
aad
loop
jb
and
pusha
and
xor
jg
out
sbb
mov
pop
mov
mov
and
scas
xor
jl
xor
sbb
push
pop
sub
jbe
nop
sarl
fisttpll
sbb
rclb
sub
xchg
pop
ljmp
jge
in
stc
push
hlt
fldt
pushf
fucomip
mov
mov
js
cmc
inc
lret
pop
lahf
lea
out
ljmp
cmp
popf
dec
jb
jmp
add
or
cmp
lret
mov
aam
dec
push
pop
insb
mov
bound
imul
fs
xchg
mov
aas
xchg
roll
loop
fsubl
inc
jno
jg
or
das
lea
in
push
or
pop
data16
jp
push
sub
push
out
pusha
xor
hlt
pusha
dec
and
sub
pop
out
bound
scas
in
repz
stc
or
mov
sub
push
out
aas
xor
push
push
scas
pop
mov
lret
jo
mov
arpl
pop
aad
cmp
pop
stos
stc
add
and
mov
inc
mov
stos
mov
pop
and
ljmp
test
into
jno
dec
loopne
dec
or
fldcw
fcmovne
dec
enter
je
sbbb
mov
add
and
mov
jnp
rclb
mov
or
cs
push
push
pop
fwait
daa
pusha
incl
pop
pushf
xchg
pusha
movsl
sbb
lea
xchg
push
call
aaa
int3
lret
in
adc
lcall
dec
mov
daa
int3
adc
jp
pop
aam
dec
push
mov
sbb
lahf
imul
jae
movsb
adc
mov
pop
stos
fcomp
movsb
lods
loope
xor
pop
lret
inc
xor
std
sub
out
jmp
mov
pop
sbbb
pop
cmp
mov
xchg
dec
adc
fbstp
adc
push
sti
stos
cwtl
loop
dec
add
ficoms
jge
mov
mov
outsl
jp
repz
daa
mov
xchg
sub
pusha
stc
xlat
add
sub
jecxz
cmp
call
ror
pop
pop
jp
and
enter
and
leave
in
in
mov
inc
mov
pop
ret
lods
out
sbb
ret
pop
mov
aam
pop
sarb
push
dec
repnz
xchg
fdivrl
addl
jle
loop
ds
mov
and
mov
cltd
sub
xchg
mov
fcmovnbe
inc
cmpl
lods
cmp
or
insl
sub
cmc
mov
dec
data16
cmp
inc
add
xchg
in
dec
push
lock
into
inc
cmpsb
std
and
jns
ljmp
je
pushf
xor
pop
pop
mov
fidivs
in
fsts
lret
sahf
cmpsb
movsb
mov
or
loopne
in
fadds
and
pushf
jmp
js
jmp
les
cmp
scas
inc
adc
sub
in
adc
jno
movsl
inc
test
mov
addb
int3
mov
iret
dec
add
inc
mov
or
jne
repz
lea
sub
les
cmp
orb
dec
jmp
divb
mov
cmp
cmp
out
ds
fistps
cmp
mov
out
fnstenv
add
or
out
jmp
xchg
inc
jmp
addr16
mov
enter
js
sub
sbb
loopne
and
push
inc
icebp
repz
out
sbb
push
icebp
or
les
cld
inc
shll
ret
xor
or
aam
xor
adc
adc
test
or
xchg
fcomi
cwtl
mov
lcall
sbb
shrl
dec
stos
lods
push
mov
leave
xchg
rorb
sarl
push
rcrl
jb
icebp
flds
inc
mov
mov
mov
adc
push
xor
pop
imul
es
pop
jae
stos
jg
roll
imul
std
fsub
mov
jge
jle
enter
or
adc
out
test
and
loope
test
adc
pushf
leave
lods
lret
leave
cltd
mov
pop
push
push
test
aam
pop
mov
inc
xchg
mov
test
repz
int
sahf
das
jo
ja
scas
cli
mov
in
xchg
fs
cmp
enter
loop
mov
aas
bound
mov
mov
mov
das
xchg
sub
jns
pop
sbb
fcmovne
aad
pop
xor
addl
pop
jbe
enter
xchg
xor
and
icebp
out
aam
movsb
jle
jnp
fstpl
adc
ja
inc
pop
lods
mov
add
rcr
inc
jb
jle
ffreep
push
inc
cmpsb
mov
push
inc
stc
mov
fnstcw
or
mov
out
lret
dec
mov
movsb
sti
test
cmp
ss
movsl
mov
sub
shrl
sub
cmp
jl
lahf
shll
psrld
dec
add
dec
lret
cmpsl
adc
push
jecxz
xor
sbb
or
add
stos
roll
rorl
dec
stc
std
daa
dec
jno
cmp
mov
jle
test
cmc
mov
shrl
lahf
shrl
sub
mov
mov
jo
repz
scas
cli
je
in
push
sub
into
mov
push
lds
out
sahf
and
mov
sbb
test
pop
das
cli
jne
push
das
dec
pop
or
push
mov
add
mov
addr16
cmp
das
jg
xorb
ja
roll
xor
aaa
hlt
inc
int
out
rcll
xchg
flds
xor
in
cmp
repnz
movq
push
lods
pop
and
jle
add
enter
movsl
movsl
mov
dec
aaa
push
dec
push
aam
fsubrs
das
xchg
sbb
fcmovnb
data16
xchg
inc
fsubrl
jo
cld
or
sub
add
dec
adcl
and
xchg
ja
data16
daa
xor
cmp
sbb
mov
push
bound
dec
push
or
ss
xchg
hlt
test
cmp
inc
imul
rep
aam
inc
cmp
nop
xchg
mov
sub
pop
pop
es
cmp
cwtl
out
pop
mov
xorl
add
rcrl
xchg
out
sbb
xchg
and
cli
pop
movsl
dec
add
add
add
mov
test
xchg
adc
std
dec
imul
push
lds
dec
inc
jecxz
sbb
iret
inc
mov
sbb
jmp
cmpl
sarl
sahf
cmp
push
inc
in
pop
fdivr
mov
subb
or
bt
dec
and
pop
add
jae
mov
push
fimull
ret
jmp
enter
stos
les
idivb
into
repz
rorb
add
dec
ret
dec
stc
push
jle
fs
and
je
scas
insb
pop
out
int3
cmpb
mov
xor
xor
stos
cld
mov
stos
aas
daa
pop
rcll
inc
cmpsl
dec
pop
push
movsl
orl
sbb
mov
stos
add
and
adc
shr
stos
jne
enter
scas
xor
mov
xor
cld
icebp
add
call
lret
mov
addr16
jg
ffree
idivb
ret
xor
mov
push
ss
addb
scas
add
push
fsts
xchg
push
push
shlb
in
fildl
mov
stos
jne
inc
sub
adc
bound
ss
cwtl
pop
pop
or
lahf
rorl
sti
cmp
lea
mov
sar
cld
sbb
daa
imul
pop
loop
add
jae
xchg
mov
fstps
jb
sbb
mov
xlat
adc
stos
push
mov
xchg
add
incb
das
jmp
dec
jae
insl
jno
outsl
jp
pop
ret
or
stos
ja
repnz
mov
adc
ljmp
push
sbbl
stc
or
cs
xchg
bound
jg
adc
in
nop
jg
incl
mov
test
dec
cmp
xchg
mov
mov
dec
icebp
mov
leave
lock
mov
int3
mov
dec
and
mov
xlat
dec
xor
mov
push
nop
lds
filds
push
cld
adc
cld
xchg
pop
jnp
mov
cmp
mov
sbb
cmpsl
inc
inc
in
push
add
fsubrl
loope
enter
mov
scas
out
xchg
and
fidivrs
lret
xchg
movsl
and
jae
fcoml
add
dec
xchg
roll
pop
mov
and
arpl
repnz
repnz
jmp
scas
jmp
push
xor
jae
mov
popf
je
push
inc
adc
add
arpl
nop
cmp
lahf
inc
pop
or
fdivl
pop
xlat
lods
add
in
push
bound
add
loope
inc
mov
push
inc
cli
cmpsl
xchg
sbb
cmc
push
adc
mov
test
add
xchg
mov
cmp
outsb
mov
lret
imul
sbb
mov
mov
xchg
mov
sbb
pop
int
pusha
sbb
adc
xor
or
xchg
and
xor
dec
cmc
data16
out
push
cs
adc
pop
mov
jae
and
clc
push
insl
lcall
pop
push
jo
mov
andb
les
push
pushf
add
and
mov
dec
out
in
sub
lds
sarl
out
std
inc
mov
ja
xchg
pusha
mov
mov
sahf
mov
scas
mov
es
pop
add
bound
inc
idivb
ds
xchg
jnp
lds
or
fldl
scas
inc
jno
xlat
dec
add
test
dec
cmp
xor
xor
mov
sub
daa
aas
cwtl
sbb
lock
sub
xor
imul
mov
loop
cmpsb
jp
inc
movl
lods
in
jae
sub
sub
add
pop
stc
mov
clc
inc
or
adc
sbb
int3
mov
lret
test
rorb
sbb
mov
xchg
out
call
mov
sub
sarb
stc
and
jp
pusha
adc
popf
lds
push
jne
and
aam
fists
rorl
sub
sub
sar
test
dec
lahf
cmp
xor
outsb
pop
dec
push
fistpl
lods
mov
cmc
mov
jecxz
add
int
mov
xchg
pop
adc
in
pop
push
inc
mov
jo
jl
add
mov
inc
push
pop
xchg
dec
xchg
int
in
sti
xchg
sahf
shlb
jg
test
and
js
jno
dec
dec
jae
pop
jbe
pushf
or
sub
ja
sarb
mov
lods
aad
mov
inc
iret
test
in
push
pop
jecxz
frstor
inc
or
js
xor
ret
and
adc
test
aaa
jne
xchg
mov
push
xlat
adc
mov
xorb
sbb
out
push
and
pop
sbbl
jbe
popa
loop
pop
incb
test
push
pop
ret
xchg
pop
adc
jbe
sarb
mov
sub
ss
dec
clc
mov
pop
add
jno
test
mov
jae
sbb
jmp
sti
xor
sub
and
pusha
in
jg
fisttpll
lock
push
pusha
jnp
dec
int3
inc
ljmp
mov
pusha
mov
mov
cmp
cwtl
cmp
xchg
call
adc
daa
jge
je
cmp
js
cld
sbb
dec
pop
and
mov
sub
and
mov
sbb
lock
jns
dec
cli
sbb
icebp
lahf
movsl
mov
jle
jmp
mov
mov
lods
inc
mov
lods
jo
mov
push
and
xor
repnz
in
cwtl
hlt
callw
add
mov
inc
jns
push
and
xchg
push
jle
pop
inc
mov
call
dec
cmp
lret
sahf
scas
mov
dec
fisttpll
mov
int3
pop
or
ds
and
cli
xor
imul
and
iret
insb
fwait
sahf
sbb
mov
pop
int
lea
jbe
xor
test
mov
push
dec
adc
shll
div
out
divb
xor
lea
adc
mov
fsubs
mov
inc
into
dec
xchg
cmpsl
scas
dec
inc
jbe
sub
in
inc
cs
scas
push
shl
into
stos
adc
in
inc
jno
push
inc
mov
es
ds
dec
jns
add
insl
imul
push
xchg
rcr
ljmp
mov
mov
sbb
dec
cld
push
stos
repz
inc
inc
jae
aam
cmp
pop
ficompl
sbb
imul
lods
mov
lods
sub
out
insb
xchg
test
adc
and
pop
mov
aas
sbb
in
cmp
push
int3
dec
in
fsubl
les
push
sbbb
ffree
mov
lahf
sub
stos
add
fsts
int
cmp
mov
addr16
int
mov
jle
ss
jbe
dec
imul
xchg
cmpsb
rcrl
les
inc
push
testl
addr16
insl
and
dec
and
xchg
xorl
pop
add
int
add
daa
divb
and
push
hlt
lods
shll
fnsave
mov
mov
xchg
cmc
out
push
and
adc
fimull
mov
and
lahf
andb
pop
cmp
lahf
mov
hlt
xor
push
clc
subl
cld
pop
fistps
scas
ss
pop
out
push
scas
pop
daa
ret
pop
call
pushf
data16
push
cwtl
popf
pusha
out
mov
pop
push
xchg
in
mov
loop
cltd
das
jne
mov
fwait
mov
pop
gs
mov
iret
and
xchg
outsl
xor
arpl
jp
out
and
aas
pop
add
cmp
adcb
loopne
sub
test
fwait
xor
cmpsl
cmpsb
cmc
mov
inc
hlt
mov
pop
sub
jecxz
mov
xor
fcoms
mov
mov
out
inc
xorb
adc
cmpsl
das
in
addl
dec
cld
push
xor
jns
mov
paddusw
lods
inc
dec
fisttpl
add
insb
enter
push
adc
push
enter
mov
sbb
rorl
loope
clc
cmc
shrb
data16
jno
xchg
jmp
lcall
ret
jne
insl
in
es
das
cmp
jmp
les
aaa
mul
insb
sbb
xlat
arpl
lea
sbb
comiss
ret
imul
rcll
cmp
out
pusha
fs
push
push
movsl
adc
mov
xor
xor
mov
cmpl
dec
sbb
stc
inc
sbb
test
jne
or
js
daa
lods
adc
sbb
fsubl
lock
pop
out
adc
pop
xchg
inc
sbb
lods
cli
xchg
mov
popf
dec
ret
mov
sub
lods
add
mov
dec
or
outsb
jne
xor
add
cmpsl
mov
scas
shl
or
pop
fldenv
lahf
cli
push
adcb
mov
dec
aam
cli
jnp
pop
test
mov
lods
cwtl
movd
mov
add
mov
push
fwait
push
xor
cmp
scas
mov
shrd
rcrl
in
push
mov
xlat
outsl
fwait
sub
mov
ds
ljmp
mov
loop
lock
roll
pop
add
inc
jae
inc
arpl
cmp
lods
int
out
call
js
movsl
das
push
push
or
fcmovne
pop
mov
lods
lea
mov
rclb
and
ss
pop
js
sbb
sbb
out
cs
ret
daa
xchg
and
add
ret
mov
out
xor
jne
dec
pop
pmulhw
jnp
mov
int3
nop
aad
xor
xor
mov
in
jp
push
mov
inc
jge
insl
es
loop
data16
in
adc
xchg
shlb
and
mov
dec
dec
testb
movsl
movsb
stos
fcompl
fs
mov
test
cmpsb
xchg
hlt
popa
dec
sub
or
aad
inc
sub
mov
dec
daa
sahf
mov
pop
lcall
sbb
in
xchg
std
mov
fscale
fs
mov
outsb
xchg
shl
mov
scas
popf
negb
pushf
aas
std
sub
xchg
cld
or
rdtsc
and
rclb
jo
jae
stos
imul
sbb
push
jo
in
test
xor
mov
mov
xchg
fdiv
cmc
cs
les
push
je
movsl
loopne
jbe
fistl
imul
pop
jbe
sbb
lcall
mov
imul
inc
test
aaa
xor
mov
subb
sub
jo
xor
inc
and
ret
xlat
add
je
adcl
adc
out
enter
daa
lds
andb
pop
sti
add
in
hlt
aam
dec
xchg
imul
dec
mov
or
cmp
shlb
sarl
hlt
ror
push
xor
std
xor
ljmp
inc
mov
sahf
int3
stos
rolb
adc
sbb
mov
mov
jg
add
xor
mov
sub
outsl
leave
push
xchg
arpl
repz
mov
nop
adc
jb
inc
out
stos
xchg
inc
push
je
mov
out
bound
mov
pop
dec
es
std
data16
aas
out
ret
cmp
mov
xchg
xlat
out
scas
scas
cmp
lea
or
xchg
dec
lods
inc
mov
inc
jne
and
mov
lods
ss
out
lret
push
xchg
fcoml
shll
jb
push
repnz
scas
subb
les
testb
movsl
pop
test
inc
or
out
add
mov
mov
mov
jecxz
push
call
ja
pop
dec
inc
in
leavew
add
sub
dec
pushl
xor
mov
sbb
loope
jne
pop
jmp
cmc
dec
subl
adcl
adc
das
enter
js
jmp
mov
scas
and
test
jl
pop
fldl
ret
or
jp
into
clc
jne
addb
pusha
out
mov
bswap
dec
pop
jge
out
push
shl
sbb
pop
pop
js
sbb
jnp
rcrl
sbbl
mov
mov
mov
mov
repnz
cld
mov
outsl
xor
hlt
cmpsb
jmp
les
push
xchg
mov
sti
shlb
mov
cmp
xor
test
add
push
ror
lret
mov
pusha
mov
xchg
pop
test
fwait
add
mov
cmc
cli
mov
outsl
lcall
pop
push
std
ja
mov
mov
sbb
inc
adc
mov
sub
js
fbstp
adc
nop
jge
outsb
mov
repnz
cld
inc
addb
jg
sbb
aaa
dec
outsb
mov
cli
faddp
test
ficoms
shll
mov
shll
jle
shl
mov
adc
je
push
in
sub
rolb
in
xchg
sub
xor
mov
aad
sarl
mov
mov
loopne
add
fildl
sub
sahf
push
lea
or
push
push
cmp
xchg
cmpsb
or
decb
dec
lahf
xchg
das
or
addb
xchg
dec
pop
mov
into
dec
add
add
dec
ss
cmpsl
out
pusha
cmp
push
mov
nop
sbb
xor
lahf
xor
shr
in
xor
cwtl
sar
push
jecxz
lcall
test
add
out
in
pop
out
outsl
and
sub
cli
cwtl
scas
inc
shll
loop
dec
in
loop
pop
adc
roll
loope
arpl
cwtl
in
loope
rcrb
mov
push
lcall
dec
icebp
add
sbbb
add
add
lret
icebp
dec
and
rcrl
add
js
in
scas
mov
sbb
pop
insl
dec
imul
and
daa
orb
lock
decl
sub
push
movsb
mov
dec
ljmp
pusha
or
jb
jp
lds
dec
jp
jno
and
in
push
inc
add
lcall
mov
stos
add
mov
cltd
mov
lret
lea
je
sub
inc
and
xchg
sbb
mov
mov
push
adc
lret
jo
cmpsb
adc
ret
sbb
jno
push
enter
jne
mov
push
pop
xchg
mov
pop
sahf
rol
lret
pop
shlb
shl
sti
xchg
add
jl
xor
fwait
int3
scas
mov
mov
jle
xchg
fcmovne
cmpsb
sbb
inc
shr
shr
xor
sbbl
and
add
cmpsb
mov
jno
fiadds
repz
cmp
dec
and
sbb
jmp
fidivs
xchg
xchg
negl
sbb
lds
fidivrl
pusha
sub
xchg
repnz
aaa
mov
movsb
jns
and
mov
add
scas
iret
adc
jno
fidivs
dec
and
adcl
jle
div
lods
arpl
dec
or
ret
popf
push
stos
jnp
int3
mov
jg
add
mov
mov
xchg
inc
xchg
pop
daa
ljmp
dec
pop
cmpb
je
in
loope
mov
xchg
jmp
jmp
test
pop
or
loop
mov
shll
lret
inc
loopne
outsl
in
sub
xor
mov
addr16
add
in
test
test
test
shll
mov
ja
shrb
lods
rolb
dec
clc
adc
xchg
data16
sbb
lock
sbb
sbb
xor
lret
jle
mov
xchg
leave
sub
fcompl
mov
mov
ljmp
scas
add
rolb
insl
inc
pop
cmc
std
mov
aaa
nop
fcoml
imul
aam
bound
addb
pop
mov
push
jecxz
mov
jno
xor
or
enter
jns
loop
pop
dec
push
insl
push
xor
jb
jle
or
ret
fimuls
inc
insb
fdiv
int
or
sahf
xchg
inc
and
mov
mov
adc
mov
fnstenv
and
jb
jp
add
sbb
repz
fidivrl
stos
dec
addr16
cmpb
fwait
lds
mov
xchg
xchg
jo
lret
int
mov
das
add
repz
iret
subl
sbb
sub
popf
xor
push
xor
cmp
pop
int
rcrl
adc
xor
dec
adc
insl
in
adc
lock
sub
call
outsb
lds
push
stos
subl
in
enter
int3
add
xor
les
sbb
xchg
mov
pop
dec
mov
lret
xchg
sti
imul
push
cld
pushf
xchg
xchg
movsl
rcl
push
mov
adc
js
add
loopne
jecxz
fs
int3
adc
scas
movsl
push
ret
xchg
ljmp
ret
int
xchg
rcrl
mov
cmp
jl
out
loope
pop
inc
cmpsl
xchg
fisttps
xchg
mov
aaa
int3
lea
mov
lahf
adcb
xchg
sub
xchg
cmpb
cli
mov
lods
inc
jo
mov
jbe
sub
or
clc
sbbb
imul
inc
jg
sbb
mov
adcb
daa
nop
insl
inc
adc
bnd
xchg
orl
jge
mov
cltd
dec
enter
les
mov
test
pop
fistl
mov
cmpsl
mov
cmpsl
jnp
inc
inc
call
adc
imul
mov
push
sar
xor
lock
xchg
xor
jecxz
push
ret
add
jecxz
repnz
dec
pop
enter
enter
lock
or
adc
fwait
dec
xchg
mov
dec
aad
test
out
scas
leave
dec
xor
cli
addr16
xor
inc
scas
xlat
aam
add
ss
in
lock
jno
pop
inc
fidivrs
std
fldcw
test
pop
lret
add
mov
and
ficoml
lret
xchg
arpl
call
and
jb
std
or
mov
xor
in
xchg
jbe
and
jecxz
push
in
fwait
dec
mov
in
mov
or
pop
shlb
psubsb
or
push
mov
adc
inc
sbb
adc
dec
mov
pop
ret
lock
insl
sbb
xchg
bound
insl
xor
stos
pop
inc
cmp
push
xchg
nop
add
push
mov
iret
fidivl
cmp
add
testl
push
in
repnz
push
rol
jnp
jne
loope
nop
mov
scas
in
mov
shlb
imul
lret
std
xchg
sub
xor
jle
mov
lds
jae
inc
in
pop
test
in
popf
fmuls
out
dec
sbb
xchg
add
incb
loopne
in
scas
cmpsb
dec
cmpsl
leave
pop
pushf
mov
xor
ss
and
push
mov
bt
jns
lcall
pop
sar
cwtl
xchg
jmp
add
and
mov
sbb
cmp
inc
inc
mov
test
addr16
ja
repz
pusha
mov
mov
cld
imul
sar
xor
pop
jmp
jnp
shll
jecxz
mov
sbb
pop
xorl
mov
cs
dec
sti
dec
jp
repz
loop
out
push
int3
cmp
xchg
pusha
icebp
push
sub
add
pop
pop
mov
test
inc
pop
lods
repnz
dec
pop
dec
cmpsl
jb
rorw
mov
fisttpl
mov
sbb
and
mov
lret
and
mov
enter
cmp
dec
cmp
clc
test
sysret
je
mov
int
jge
pusha
pop
test
pop
sbb
xor
jmp
adc
mov
push
mov
jae
mov
jl
cmp
ror
mov
mov
add
add
mov
in
pop
loope
in
push
loope
aad
xlat
test
xchg
ljmp
jl
mov
ljmp
fistps
push
mov
sbb
popa
mov
sbb
cmp
aad
jne
or
inc
shll
jl
int3
cltd
jecxz
mov
push
shlb
or
pop
cmpsb
mov
push
imul
ds
push
repz
xchg
dec
mov
lods
jae
shlb
into
cltd
jge
pop
inc
push
xor
and
imul
aas
mov
faddl
sub
sbbb
mov
adc
pop
sbb
sti
aad
mov
mov
adc
fisubrl
aas
sbb
mov
and
inc
jae
cmp
sub
and
push
mov
mov
mov
hlt
cmpsl
mov
push
sahf
sub
rclb
outsl
pop
jno
hlt
lret
jmp
call
sbb
sub
fucomp
pop
repz
xor
addr16
ret
cmpsl
bound
lea
cli
adc
int3
es
inc
sbb
lret
cmp
pop
fldcw
mov
outsb
jge
out
sbb
ficompl
outsl
sub
fimuls
pusha
mov
lods
es
jnp
xchg
fs
stc
test
xchg
jnp
cmpsb
orb
push
push
cmc
mov
ds
adc
arpl
adc
call
mov
adc
sub
cmp
popf
mov
mov
inc
out
or
leave
cmp
lea
imul
dec
gs
cld
das
jns
mov
mov
push
mov
inc
fucomp
ss
hlt
lock
outsl
add
mov
sbb
insl
dec
adc
or
mov
sbb
xchg
push
js
pop
bound
fsubp
jo
xor
dec
in
inc
ja
std
pop
inc
lret
mov
pop
scas
pop
jae
pop
xchg
sbb
cmpsl
out
mov
stos
std
adc
out
stos
scas
aaa
in
pop
cmp
sub
fdivp
lods
pop
out
mov
dec
scas
aam
dec
scas
mov
iret
imul
dec
and
xchg
stos
ficoms
cmp
jno
jmp
cli
std
test
mov
dec
mov
inc
push
sbb
pop
leave
and
mov
cmp
cltd
xchg
jae
pushf
mov
scas
jb
daa
mov
xchg
xchg
jbe
ror
adc
inc
fs
add
ljmp
push
out
in
push
push
add
fdivrs
xchg
mov
popa
loop
xchg
sub
sbb
lock
pop
jecxz
inc
lret
outsb
xchg
inc
add
loope
dec
adcb
mov
in
imul
adc
add
or
mov
je
int
pop
inc
decl
rcrl
push
sbb
cmp
mov
lods
add
push
lds
xchg
jae
push
inc
lods
jle
bound
push
into
jmp
cmp
dec
xchg
negb
scas
push
lds
lods
push
les
xchg
cmc
fmull
sub
adc
lock
push
mov
int
adcb
add
dec
fwait
test
mov
mov
enter
fstpt
mov
fxch
icebp
add
mov
xor
xchg
int
mov
sbb
push
pop
mov
outsb
test
inc
cmc
clc
int
cmpsb
int3
lock
into
xchg
and
aam
in
add
add
add
mov
mov
imul
ljmp
xchg
into
push
or
inc
and
imul
cmp
xchg
sub
daa
mov
xchg
mov
and
mov
jb
add
mov
in
xchg
mov
test
inc
int
push
fldenv
pop
adc
pop
jl
pop
sti
pop
jl
fldl
es
int3
insb
out
dec
mov
call
adc
cmp
gs
push
rcrl
sbb
andl
push
lcall
sar
push
aad
negb
sub
cmp
xor
mov
rcl
mov
fs
adc
xor
jo
cli
dec
or
mov
inc
cmp
push
pop
cmp
sbb
mov
cmp
or
ljmp
ds
sub
cmp
or
sub
icebp
in
dec
xchg
or
push
sbb
ljmp
jp
and
dec
jmp
cmp
add
add
scas
lods
mov
mov
xor
sub
pop
xchg
xlat
fwait
sbb
jge
mov
dec
xchg
out
push
or
in
jnp
loop
loopne
inc
popf
roll
and
add
jp
inc
and
jns
fidivrl
shrb
int
mov
pop
add
jecxz
mov
sbb
repz
xchg
fisubl
ret
mov
enter
rcl
add
and
pop
and
bound
sbb
or
sub
dec
fsts
inc
xchg
iret
out
and
mov
cmc
inc
pop
adc
stos
mov
add
push
out
adc
in
jg
ds
je
inc
icebp
mov
test
push
sub
lahf
test
mov
lret
ret
sarb
cwtl
fdivrl
adc
cmp
fwait
sbb
cmp
inc
dec
push
adc
mov
clc
stc
icebp
and
pop
pop
sub
xor
sub
pop
imul
mov
aaa
cmpsl
cmpsb
int
popl
pop
sub
sbb
stos
lcall
in
mov
mov
ficompl
shrb
sub
cmp
lds
dec
or
in
sub
or
jecxz
movsb
pop
mov
sbb
mov
loopne
daa
jno
jne
fdivrs
pop
dec
sbb
xchg
xchg
inc
pop
imul
test
fmul
sbb
iret
sbb
fst
lds
mov
pop
dec
mov
outsl
cmp
out
fbstp
jb
add
xor
stos
mov
les
mov
xchg
loop,pt
push
pop
testb
push
out
scas
out
mov
pop
pop
insb
sub
adc
pop
scas
js
xchg
sub
cld
pop
mov
lock
dec
ret
fisubl
enter
mov
cmp
cmc
xchg
inc
mov
cmp
std
jle
fldcw
rcll
add
pop
neg
add
xchg
mov
outsw
inc
cld
call
fwait
pop
mov
hlt
adc
push
sub
out
in
jno
popa
mov
mov
adcb
out
addl
mov
pop
pop
lock
dec
test
cmp
jp
dec
lahf
aas
cmp
mov
aas
es
sahf
mov
push
and
add
jle
mov
nop
repnz
fcomps
int3
test
add
into
push
pop
movsl
cmp
mov
enter
outsl
rclb
sti
xor
pop
popf
mov
sbb
xor
cld
mov
push
andl
test
xchg
add
ror
test
mov
shll
int
inc
nop
cmp
or
int3
ficompl
incl
hlt
or
rolb
insb
inc
lock
sbb
movsb
stos
mov
pushl
pop
aam
add
icebp
sbb
std
cmp
leave
fisttpl
lcall
mov
or
adc
pop
jecxz
lret
inc
outsl
ret
shrb
mov
xchg
dec
subl
or
dec
ret
jae
mov
push
add
cltd
movsl
adc
sti
dec
sbb
mov
push
out
xchg
sbb
popf
mov
adc
xor
sahf
fidivl
std
sbbb
xor
jl
cmp
pop
fdivs
adc
sbb
loopne
in
nop
inc
int3
movsb
ret
sbb
inc
lcall
mov
pusha
add
xor
add
cmp
outsb
xchg
int
ffreep
aad
je
cld
sbb
and
out
inc
and
add
imul
lods
fs
xor
test
jp
sub
push
mov
ja
in
outsl
bound
xor
std
jno
pop
les
or
mov
xchg
enter
pop
scas
inc
mov
jnp
mov
mov
xor
xor
ret
ret
add
sbb
icebp
movl
push
cmpsl
pop
adc
and
or
mov
pushf
out
sub
rorb
xor
fbstp
mov
das
repnz
scas
adc
jp
or
test
js
pop
mov
hlt
popf
add
adc
in
in
cmpsl
xor
test
test
mov
mov
dec
call
or
pop
and
mov
mov
rclb
jmp
xor
outsb
in
scas
in
mov
xor
adc
sbb
jmp
dec
pop
lahf
inc
addr16
outsb
cmp
popa
dec
and
mov
inc
movsl
mov
mov
push
push
fwait
mov
je
les
or
pop
inc
add
data16
cmc
fwait
in
inc
hlt
outsb
push
scas
dec
or
sarl
push
add
or
lret
dec
push
or
adc
dec
test
push
mov
and
mov
push
call
jo
popa
int3
push
jae
hlt
mov
and
sbb
repnz
cmc
lods
lods
popf
xor
in
push
lahf
repz
xchg
or
enter
or
loope
push
fs
jle
sbb
movsl
sbb
ret
imul
xor
sub
notl
or
mov
mov
xlat
loop
push
imul
push
mov
jne
cwtl
jmp
sbbb
push
inc
arpl
pop
push
jecxz
push
pusha
mov
cmp
and
mov
xor
xlat
repnz
fwait
cmpsl
pop
cmp
call
pextrw
inc
stos
mov
jmp
add
or
push
outsb
scas
pop
mov
sub
xlat
dec
sbb
ret
push
pop
jo
pop
fcompl
dec
scas
pop
test
and
fsubrs
jae
sub
mov
mov
js
sub
adc
outsl
rorl
test
xchg
adc
fistl
insl
mov
gs
mov
les
mov
bound
aas
jg
push
hlt
dec
shlb
out
xchg
lea
sti
xor
pop
pop
or
xchg
adc
mov
mov
sbb
xchg
pop
jo
xor
ljmp
add
mov
push
jge
insl
call
iret
mov
popf
outsb
xchg
mov
das
pop
out
test
imul
pop
repz
insb
sub
pop
push
add
inc
push
mov
rcr
jae
or
roll
fsubp
jno
les
loopne
xchg
fbstp
add
inc
xlat
push
pop
ljmp
out
inc
sub
mov
ret
test
mov
lds
testl
push
xchg
add
loope
in
and
fs
inc
jb
cmp
popf
nop
mov
add
pop
pop
mov
popa
lret
adcb
sub
jecxz
pop
sub
push
enter
imul
int3
pop
dec
pxor
popa
mov
lahf
shlb
add
lahf
and
ljmp
in
cmp
out
inc
jecxz,pn
fs
sub
enter
xchg
xchg
fiadds
push
xor
jae
fdivrl
or
ds
in
push
mov
push
pop
daa
test
cmp
fmul
rep
jb
in
jne
pop
pop
push
sar
pop
ret
mov
add
cmp
lds
and
sub
aaa
sub
icebp
lds
mov
sti
in
filds
int3
fwait
inc
push
test
sbbb
mov
xchg
dec
push
and
enter
push
pop
mov
xor
xlat
or
lea
stos
push
repnz
lahf
xchg
sbb
aaa
pop
inc
ja
pop
inc
jne
leave
and
add
jb
jno
aad
sbb
mov
aas
jo
jbe
leave
in
hlt
std
lds
fidivs
inc
sbb
pop
xchg
mov
cld
in
mov
fdivl
int
adc
jmp
nop
in
mov
or
mov
mov
and
add
xor
out
nop
adc
sbb
movsb
dec
adc
sub
mov
mov
jp
mov
pop
adc
loope
xor
adc
push
mov
scas
cmpb
loope
adcl
xchg
pop
pop
mov
dec
scas
cli
add
cmp
jae
loopne
in
aas
stc
ds
orb
test
lods
mov
pop
pop
adc
ljmp
mov
dec
mov
pop
adc
ss
call
dec
cmc
fsubrl
pop
imul
sbb
aaa
sub
push
push
pop
int
jge
pop
ret
mov
adc
int3
xchg
sbb
xchg
stos
push
sub
or
mov
and
sub
inc
aam
or
inc
jl
sub
cli
or
in
mov
lods
mov
ret
push
clc
ljmp
mov
repnz
push
push
pop
adc
pop
adc
push
pop
cltd
fisttpll
adc
notl
int
xor
and
mov
xor
pop
xor
faddp
mov
iret
aas
call
in
dec
test
mov
jl
or
adc
popf
int
arpl
xorb
shrl
inc
sbb
push
aaa
in
push
lods
pop
inc
mov
jmp
icebp
in
cmp
insl
fisttps
negb
jl
dec
lock
xchg
lcall
nop
adc
mov
dec
out
pop
fcomi
jns
mov
jecxz
sbb
cli
jbe
ds
es
fstl
pop
or
repz
mov
jl
cmp
cltd
js
adc
and
lods
sbb
shrl
aam
cs
pop
testl
mov
jl
lock
dec
sbb
data16
push
xor
mov
push
in
add
ficoml
xchg
imul
shll
out
push
jbe
lods
aam
cmp
out
repz
fcoml
mov
shrb
sub
push
cwtl
stos
inc
inc
dec
adc
mov
enter
rcrl
nop
repz
inc
jb
push
ljmp
stc
dec
push
inc
adc
push
call
jae
adc
xor
out
cmp
addb
xor
xchg
int
ja
int3
sub
mov
mov
loope
mov
shl
cmp
subb
xchg
add
aam
outsb
shrb
dec
jb
loope
inc
and
push
cmp
in
add
mov
dec
sbb
lret
jns
lds
or
pop
arpl
loope
flds
push
dec
leave
lcall
daa
sub
push
push
pop
lahf
cld
sahf
push
movsb
fsts
pusha
xor
movsl
adc
aas
andl
fsts
pop
fcoml
inc
adc
push
stos
push
inc
push
int3
hlt
add
popf
sub
cmc
mov
jno
mov
xor
bound
dec
sub
dec
fldenv
repnz
rol
je
or
pop
dec
outsl
xor
xor
sub
cld
push
out
xchg
ja
imul
jmp
outsb
dec
fnstsw
sbb
jns
inc
scas
faddl
fwait
jno
fldcw
dec
mov
in
jg
shrl
or
mov
aaa
call
imul
pop
push
loop
lret
repz
icebp
lock
inc
aad
insl
cmp
cmpl
movsl
adcl
insl
gs
addr16
insl
lds
leave
lock
xchg
idivb
cmpsl
aam
test
sbb
mov
pushf
push
addr16
loope
loop
loop
push
loop
push
lahf
pop
in
inc
rcrb
call
ss
shl
mov
test
and
and
pusha
js
lret
adc
jecxz
sahf
filds
in
dec
ljmp
mov
fnstenv
imul
or
cmpsb
dec
sub
jecxz
fistps
mov
lods
adc
pop
dec
cs
movsb
or
ficoml
push
icebp
or
xor
fadd
mov
mov
std
aas
addr16
xchg
adcb
jp
push
push
test
shlb
cmp
push
jno
pop
push
add
push
or
out
gs
ret
cmp
mov
jg
enter
pop
xchg
push
arpl
xor
dec
movsb
out
into
dec
pop
xchg
mov
jbe
imul
xchg
cltd
sub
pop
and
addr16
sahf
cs
mov
movsl
inc
dec
fs
mov
sub
cltd
push
addr16
add
ds
lods
imulb
rorb
sub
cmp
insb
loope
and
bound
imul
add
mov
arpl
jg
aas
jecxz
jno
pop
push
xor
nop
pop
mov
addr16
mov
rorl
jge
sahf
jge
stc
mov
shll
arpl
or
lret
mov
test
imul
cld
mov
sbb
movsb
ss
lcall
shll
int3
in
movsl
fwait
add
pop
aas
xor
in
mov
std
out
mov
adc
les
push
mov
ret
jns
sbb
jo
mov
or
aad
pop
out
adc
out
repz
xchg
mov
fisubrl
movntq
out
insb
xchg
push
pop
inc
mov
ja
xchg
ficoml
dec
jbe
mov
fmull
sysexit
jl
jl
add
cltd
push
popa
add
mov
iret
clc
fists
idivb
mov
sbb
bound
insb
inc
outsb
push
test
out
cwtl
mov
aas
push
addr16
adc
xchg
jmp
push
and
push
call
cmpl
xchg
inc
push
pop
cmpb
xchg
repnz
mov
xchg
test
dec
rcrl
mov
loope
cmp
sub
pop
cli
pop
inc
out
add
mov
push
mov
sub
cmp
aaa
test
sbb
ds
lds
test
lds
jnp
jp
cmp
icebp
mov
xor
add
push
pop
adc
popa
mov
ds
insl
fistpll
push
fld
shrb
push
adc
xchg
push
testl
cmp
roll
push
jne
mov
xchg
xchg
aas
pop
shrl
daa
cs
out
pushf
mov
iret
push
dec
jb
out
cmp
jbe
shlb
lock
jmp
js
lea
mov
xchg
into
insb
lret
dec
mov
icebp
dec
xor
mov
jo
push
push
iret
jmp
inc
int3
push
xor
xchg
and
addl
enter
fwait
and
jne
mov
push
fwait
mov
aaa
int3
mov
adc
loopne
and
adc
popa
popf
dec
sbb
hlt
daa
outsb
mov
lods
jae
sub
ss
aaa
movsl
popl
xchg
stc
popa
out
push
in
pop
ret
xchg
or
leave
xor
lret
mov
push
scas
scas
pop
js
sbb
mov
pop
stc
mov
test
push
orb
xlat
mov
mov
inc
sub
loop
nop
test
cmp
aaa
sub
stos
leave
xor
fwait
test
enter
data16
cmc
pause
adc
or
pop
es
jnp
insl
loop
xchg
jo
mov
jp
pop
pushf
int3
into
mov
jg
add
and
fucomp
scas
fidivs
arpl
loop
and
add
sarb
adc
inc
pop
push
mov
adc
orb
mov
mov
or
mov
jbe
sbb
shrb
jae
jmp
sbb
pop
xlat
xchg
push
jp
mov
or
or
push
sahf
jg
fcomi
mov
mov
outsl
in
movsb
test
in
clc
push
push
pop
and
pop
cmp
pop
add
loop
mov
inc
push
pop
or
pop
sbb
mov
repz
mov
scas
movsl
rcrl
es
xchg
cmp
incl
or
ret
out
dec
mov
sti
mov
dec
or
dec
adc
pop
mov
fldcw
push
dec
xchg
sbb
mov
sbb
out
and
leave
loope
inc
mov
insl
scas
js
lock
fsubs
fisttpll
fwait
out
js
outsb
dec
jge
mov
push
sbb
dec
jg
enter
test
mov
and
stc
fmull
movsl
cmpb
dec
jge
fnop
cld
addr16
adc
in
jecxz
push
xchg
fwait
sar
sub
xchg
inc
jg
push
je
xor
push
jbe
mov
jg
xor
push
fsubl
scas
data16
mov
sbb
and
adc
inc
and
jmp
clc
into
stos
arpl
rorb
and
adcb
insb
mov
lea
jle
addr16
mov
and
inc
nop
mov
jg
test
aam
push
pop
loope
jo
push
imul
iret
ficoms
lcall
xor
sahf
repz
scas
imul
dec
mov
shll
outsb
push
inc
mov
jne
clc
aad
mov
pop
lea
fisubs
xchg
iret
inc
jne
and
imul
scas
aaa
shr
mov
sbb
inc
ss
outsl
cmc
jno
pop
iret
pop
add
outsb
cmpsb
ss
dec
xlat
jo
in
push
sbb
mov
push
xor
add
jae
cmp
xor
and
lahf
pop
pop
lods
iret
loope
fidivs
xchg
aaa
ficompl
fisttps
test
mov
push
xchg
aaa
inc
mov
bound
mov
add
sti
xchg
cmp
popa
xor
push
push
add
daa
mov
cmc
cli
cld
inc
jbe
push
xacquire
mov
orb
pop
sub
jae
jnp
add
popl
scas
adc
loopne
ja
mov
rcrb
sbb
inc
jb
addr16
jp
cmp
pop
sub
cmp
aas
inc
jl
add
or
xchg
dec
iret
xor
jns
push
cmp
leave
jo
loop
add
faddl
aam
sbbb
adc
jo
dec
aam
inc
sti
call
daa
out
xor
ja
pop
fdivl
jp
scas
es
jae
sar
jnp
orl
mov
push
test
or
adc
push
jne
iret
loope
clc
push
ss
shlb
mov
lods
sub
es
out
test
sbb
rcr
lds
ss
add
inc
sbb
mov
pop
mov
mov
jmpw
ss
ret
addb
cmp
jp
push
add
insb
sbb
repnz
outsl
xor
ja
lods
insl
popf
nop
jb
out
lahf
pop
xlat
lock
sub
in
lret
or
mov
cld
cmp
dec
outsl
dec
ja
and
pushf
mov
and
or
aaa
cmc
mov
or
mov
ret
inc
cmp
or
pop
xchg
jecxz
out
into
fnstenv
int3
repz
cmp
test
dec
push
mov
jl
ljmp
jbe
mov
ret
psubsb
cld
in
xor
mov
mov
shlb
sub
adc
xlat
out
push
rcr
cs
lret
movsl
mov
cwtl
add
outsl
jmp
insb
lahf
fcoms
fisubrl
mov
adc
ljmp
xchg
es
mov
dec
stos
or
sub
adcb
or
insb
add
cmp
jmp
mov
inc
inc
and
inc
inc
push
mov
inc
iret
inc
addr16
inc
leave
adc
cld
gs
inc
xchg
int
enter
ret
or
std
mov
cmpsb
outsb
sub
faddl
stc
iret
add
mov
sar
mov
xchg
mov
test
lds
inc
test
ss
xchg
xor
inc
scas
repz
xchg
fmull
imul
aaa
mov
mov
inc
inc
mov
xchg
adc
test
clc
jg
mov
in
jnp
or
shrb
pop
fistl
imul
aad
nop
clc
idivl
roll
mov
mov
js
add
js
sti
add
xchg
ret
cmp
loop
sub
pop
sarb
cmp
sbb
into
jns
iret
jg
dec
xor
out
mov
push
repnz
inc
mov
icebp
sbb
pop
pushf
stos
sbbl
mov
jg
xor
call
fidivrl
lds
hlt
adc
inc
jle
les
mov
cmpsl
sub
dec
addr16
lods
sub
mov
mov
jbe
pop
xchg
fwait
cmpsb
cmc
mov
pop
sub
mov
mov
pushf
aad
mov
sub
sbb
jnp
imul
adc
or
jno
or
pop
lock
data16
dec
in
rorl
mov
jmp
pop
and
cmp
mov
ja
mov
pop
or
shlb
std
cmpsb
cmp
jb
dec
push
shlb
ds
cmp
and
inc
das
sti
dec
cmpsl
out
popf
xchg
sahf
dec
jns
dec
jb
cmova
test
fcmovu
or
xchg
pop
call
mov
lds
sbb
adc
push
add
mov
mov
dec
mov
pusha
arpl
sbb
sbb
ret
pop
negl
jns
xlat
xchg
dec
mov
sahf
movsl
das
mov
lock
out
sbb
pop
js
jo,pt
add
jle
mov
or
or
das
ljmp
cmp
and
push
add
mov
pop
pop
xchg
xchg
dec
gs
ss
xchg
add
lds
cltd
jbe
jne
sbb
dec
and
mov
movsl
dec
arpl
push
and
addr16
pop
js
pusha
loop
cmp
icebp
mov
cld
pop
add
or
mov
xchg
rolb
fiadds
mov
leave
xor
xchg
gs
mov
pop
imul
push
xchg
dec
jmp
inc
sbb
cmp
mov
out
addb
inc
xchg
clc
inc
test
jb
frstor
dec
jl
dec
add
cmpsl
repnz
in
cld
mov
je
es
sbb
shr
and
mov
and
sarb
gs
rolb
push
cld
fs
pop
mov
test
mov
and
mov
fwait
adc
cmp
mov
sub
ds
jp
movsb
sbb
subps
lds
ljmp
fdivrp
lods
arpl
inc
push
pusha
pop
repz
push
pop
ljmp
push
popa
jecxz
nop
ret
push
cltd
arpl
fwait
lea
icebp
jbe
inc
ja
jg
push
fidivrs
or
inc
adc
mov
test
lods
outsb
dec
loopne
xchg
jno
mov
inc
mov
stc
inc
jbe
sbb
cmc
or
mov
mov
arpl
inc
pusha
inc
lahf
fmuls
add
in
loopne
test
add
pushf
sbb
ljmp
mov
fdivrl
lods
sub
ds
cmc
xor
or
int3
mov
cmp
insb
mov
pop
test
mov
adc
fdiv
scas
sbb
loope
adcl
out
jnp
dec
fcmovnu
cwtl
push
cmp
jnp
pop
mov
imul
mov
out
inc
and
pop
stos
pusha
or
lods
icebp
ljmp
fs
push
fcmovnu
in
rcll
cmp
jp
stos
imul
loope
xchg
adc
fwait
ret
fcompp
aam
movsl
adcb
xchg
shll
jno
into
jbe
mov
dec
cwtl
cmp
sub
enter
std
ljmp
jne
iret
mov
in
daa
ljmp
pop
ret
push
lahf
rorb
push
lea
js
jg
sbbl
inc
jle
mov
das
mov
call
pop
movsl
pop
cmpsl
sahf
pushl
push
mov
sbb
push
orl
xchg
test
mov
mov
jo
sub
dec
int
js
adc
inc
stos
jno
clc
inc
mov
cmp
xorl
adc
test
fbld
in
leave
pop
clc
xchg
push
sbb
into
or
fildl
loopne
es
test
xchg
push
lret
pop
jmp
push
cli
loop
xorb
jge
iret
or
xlat
ficomps
orb
int
jmp
xchg
inc
add
mov
pop
ss
inc
shl
xchg
ficoml
cli
popf
cmp
adc
jnp
or
loop
lret
dec
inc
in
jns
mov
jne
mov
lcall
dec
lahf
and
addb
xchg
mov
das
mov
mov
add
xchg
add
loop
and
das
mov
mov
rcrl
outsb
sub
out
out
int
xor
loopne
jmp
andb
out
xchg
pushf
mov
cmp
data16
dec
lahf
mov
pop
outsl
das
inc
adc
lock
inc
lret
cmp
sub
sbb
das
pop
test
sub
or
aaa
push
jb
sbb
fdivrl
pop
sbb
inc
pop
jecxz
jle
xchg
bnd
leave
mov
ret
fs
int3
sub
jbe
xchg
jmp
jb
cli
inc
mov
mov
lret
adc
mov
cwtl
pushl
jne
call
pop
jmp
push
pop
push
js
stc
movsl
adc
rcr
xchg
pop
out
lahf
mov
jecxz
jne
mov
jle
fldenv
hlt
sub
cld
aaa
xchg
jb
outsl
sub
clc
popf
jb
lcall
sahf
inc
mov
fistpll
cmpsl
pop
ja
push
pop
lods
mov
mov
in
inc
push
inc
inc
cli
push
mov
test
jb
jae
test
push
lods
je
cmp
and
mov
out
loopne
out
push
negl
fcomip
shll
adc
popf
push
dec
lock
in
jp
xchg
stos
pop
lret
jnp
out
mov
pop
pushf
or
inc
push
jl
nop
cwtl
test
jo
clc
cli
sbb
into
fs
iret
aas
xchg
push
push
cs
pushf
push
cmp
les
fbstp
inc
mov
fisttps
pop
cmpsl
iret
out
sbb
cmpb
ficoml
out
ss
cli
sbb
or
add
shrl
fcomi
rorl
sarl
jge
pop
add
cltd
js
mov
mov
sbb
test
mov
lods
inc
loop
lea
rcrb
std
xchg
sbb
movsb
sbb
push
cmp
insb
dec
and
adc
add
cmp
inc
cltd
fimull
into
mov
jb
dec
leave
mov
mov
out
cmpl
subb
mov
xor
dec
pop
sbb
cs
loopne
or
divb
mov
fdivl
idivl
cli
pop
filds
addr16
fnstenv
imul
cmpsl
push
cli
jo
pop
movsl
insb
jns
mov
push
call
call
cmp
fwait
mov
mov
dec
xor
dec
xor
lods
and
les
arpl
mov
shlb
test
mov
fldcw
into
xchg
sti
std
in
mov
arpl
imul
data16
in
in
outsl
or
leave
aas
addr16
xor
push
popf
and
loope
repnz
fcmovnb
scas
js
aas
mov
push
inc
ljmp
lret
xchg
push
push
sub
mov
xchg
xor
pop
dec
repnz
push
aaa
mov
test
js
pushf
xor
jmp
inc
cmp
fidivl
inc
outsl
xchg
es
sbb
jl
and
dec
lock
or
adc
fiadds
mov
js
cmp
push
pop
aad
es
inc
in
mov
sub
mov
mov
jns
mov
and
push
mov
xor
add
dec
insb
stos
or
loope
shl
stos
and
inc
sub
scas
xchg
ljmp
push
cmc
popf
ret
mov
mov
in
pop
inc
mov
lods
imul
shl
es
push
lret
dec
cmp
mov
xor
lock
and
sbb
scas
andb
in
or
cs
call
mov
push
jp
insl
xor
or
pop
cmp
pop
xchg
mov
jb
sbb
outsb
pop
cltd
adc
popf
insl
xchg
jecxz
and
mov
mov
daa
push
push
jp
add
mov
mov
xor
push
dec
pop
mov
int3
rcl
inc
mov
jb
sbb
bound
sub
dec
imul
or
imul
push
movsl
in
sbb
fisubrs
inc
fistl
and
incl
cli
mov
aad
aaa
mov
inc
sbb
jns
xorb
addr16
adc
or
inc
push
data16
sbb
cmp
lods
jnp
loope
jb
cmpsb
pushf
fistpll
sbb
movsl
in
jle
shlb
and
popa
js
int3
push
cld
repz
and
sub
pop
add
shlb
leave
arpl
movsl
push
in
imul
jnp
add
mov
or
xchg
pop
mov
shlb
gs
subb
repz
repz
xchg
adc
inc
add
jmp
pop
mov
cli
mov
data16
rcll
data16
fdivrl
mov
cmp
and
imul
mov
cli
adc
sti
pop
out
and
inc
loopne
cld
sub
movsl
jle
add
dec
cmp
inc
es
dec
push
mov
inc
pusha
ret
push
xchg
mov
xlat
mov
shrl
pop
out
sbb
hlt
cmp
dec
mov
je
pop
arpl
mov
lock
stos
mov
xchg
xchg
test
int
sti
icebp
das
jecxz
adc
fs
xchg
nop
dec
fs
aam
sahf
das
lret
xor
test
sbb
xor
ljmp
cmp
add
addr16
pop
jnp
lret
mov
mov
pop
xchg
pusha
sbb
dec
sbb
jns
in
inc
fnstenv
lds
adc
xor
lret
aaa
daa
cld
or
xor
push
cmp
pop
daa
add
xchg
fs
inc
xchg
xor
adc
inc
xlat
out
mov
mov
cmp
in
andb
cmovge
lods
adc
addr16
bswap
popf
mov
dec
stos
gs
cld
xor
jno
xor
rolb
inc
or
cltd
mov
xchg
xchg
adc
stos
xchg
mov
mov
and
inc
cmp
lods
roll
xlat
insl
cmpb
mov
cmp
xchg
lods
scas
adc
jecxz
dec
test
xor
push
jge
movsb
xchg
call
add
stos
notb
add
int3
lock
subb
sbb
cmp
pusha
adc
pop
out
outsb
sahf
mov
lods
jnp
daa
ljmp
icebp
jecxz
cwtl
jg
mov
jns
std
and
inc
sti
push
ret
in
loope
lods
andl
sbb
in
adc
ljmp
and
inc
jg
xlat
fdivs
and
scas
inc
pop
push
mov
cmp
mov
loope
push
ja
jns
cmp
jbe
cmp
pop
out
jne
inc
cmp
das
inc
add
cmpsl
and
mov
and
int3
stos
sbb
sti
adc
and
test
daa
gs
mov
cmp
popl
mov
push
movsb
push
pop
mov
outsb
mov
fdivrs
addr16
sub
dec
add
inc
sub
push
inc
add
sbb
js
push
or
xor
jle
mov
shl
mov
xchg
insl
cmc
test
aad
sbb
js
andb
sbb
outsl
push
rcll
pop
jmp
sub
mov
fidivrs
mov
cli
outsb
xchg
jno
dec
int
ss
push
daa
xchg
outsl
rcr
inc
in
out
jl
imul
add
cwtl
inc
addb
shld
mov
lock
ret
add
or
mov
clc
or
mov
test
add
out
and
and
loope
sbb
dec
pushf
xor
mov
jbe
jle
jecxz
sti
xchg
lods
imul
ja
gs
mov
push
xor
cmpsl
lock
jno
inc
cltd
sahf
jnp
cmp
sub
mov
inc
jns
push
add
mov
push
sarl
in
pop
in
sub
cmp
add
xchg
imul
cli
sti
mov
xor
pop
lock
xchg
insl
and
outsl
dec
cmpsl
lea
test
cmpsl
test
shl
in
dec
xchg
add
fs
scas
inc
sub
imul
jmp
inc
ss
loope
push
mov
rolb
xor
lods
or
pushf
inc
fucomi
cmp
push
lret
call
cmpsb
in
push
or
stos
fistpll
mov
orl
sub
ljmp
loopne
inc
adc
repnz
lahf
mov
lahf
roll
cwtl
insl
stc
cmp
gs
xchg
pusha
adc
pop
std
in
push
hlt
or
cwtl
add
or
mov
nop
adc
shld
push
sub
arpl
inc
pop
sbb
or
push
arpl
and
std
cmp
addb
rcrl
mov
dec
xchg
jle
scas
in
push
inc
push
and
mul
add
cmp
call
pushw
fistps
repnz
cmp
ret
mov
sti
mov
pop
dec
es
fcompl
test
dec
inc
inc
mov
mov
jns
mov
jae
adc
repnz
js
sbb
adc
sti
sub
fildll
mov
push
add
int
push
movsl
scas
in
ret
jne
mov
or
pushf
pusha
mov
cld
inc
or
repnz
sbb
jbe
shlb
in
cwtl
pop
lret
sbb
xor
add
jns
pop
push
dec
sbb
rcrb
adc
dec
test
fimull
xor
cmc
sahf
mov
fnsave
in
sub
xor
sub
cwtl
mov
mov
and
sbb
inc
jmp
fsubs
jmp
ljmp
inc
jmp
xor
add
push
inc
jmp
or
xor
inc
test
mov
push
es
xchg
jne
xor
push
adc
nop
dec
xchg
adc
adc
cmp
bound
hlt
ret
imul
aaa
or
sub
leave
jg
adc
mov
xor
scas
mul
inc
lods
mov
cmp
clc
add
fistpl
jge
mov
dec
loope
ret
jb
idivl
cltd
in
lods
xchg
sbbb
in
pop
xchg
add
jbe
or
xlat
call
ja
jo
in
jb
dec
push
sbb
mov
pop
push
jp
sub
add
cli
xor
movsl
and
inc
addr16
sub
movsb
and
clc
in
in
mov
pop
add
dec
shl
out
fucomip
cmp
fcomp
mov
inc
out
jge
addr16
std
push
test
push
andb
imul
xchg
pop
or
icebp
icebp
sub
and
decb
adc
inc
adc
test
push
mov
mov
mov
dec
andl
roll
jge
mov
lods
ret
jl
imul
les
sbb
lock
mov
orl
mov
pop
loope
sahf
inc
iret
push
and
sub
out
adc
mov
daa
adc
pop
mov
mov
pop
cmp
inc
mov
add
outsl
aad
inc
cmp
lds
dec
call
andl
pop
es
jno
test
push
jl
push
xor
mov
add
iret
xchg
stos
fidivrl
div
and
mov
loopne
sub
xchg
xchg
pop
repz
pushf
lahf
add
popf
ja
cmp
xchg
sbb
xor
call
hlt
xchg
cmp
in
or
push
in
fldenv
jne
ret
loopne
clc
loope
lods
testl
add
lcall
cmp
or
dec
xchg
cmc
in
push
mov
pop
scas
in
jae
pop
enter
scas
mov
das
insb
sahf
sbb
dec
mov
mov
cwtl
fwait
xchg
and
mov
sub
adc
imull
sub
push
daa
mov
and
clc
scas
pusha
jp
cmc
sbb
dec
repnz
pop
pushf
and
inc
inc
sub
in
lret
or
or
and
pop
jb
cli
and
mov
pop
sahf
sbb
call
repnz
sub
std
sbb
cmpsl
fiadds
lret
icebp
out
rcrl
cmp
je
dec
into
xchg
mov
sbb
ja
sbb
outsb
fdivs
cld
in
data16
mov
ja
cli
mov
movsl
mov
and
and
sub
mov
nop
inc
sub
lret
mov
aad
adc
ds
loopne
in
jge
scas
ds
and
adc
push
es
in
out
sbb
insb
es
mov
test
shlb
imul
mov
ficoms
jne
iret
sub
or
and
pop
imul
insb
or
loope
pusha
je
cli
pop
lret
sbb
lea
sbb
cld
dec
add
sbb
in
push
repnz
cmpsl
jno
xchg
jmp
pop
lahf
std
mov
pop
lahf
mov
aas
xchg
push
out
jecxz
fisubrl
lret
je
fisttpl
cli
sbb
mov
movsb
push
rorb
addb
inc
notb
pop
aaa
sub
negb
mov
addr16
sub
mov
shlb
jg
jae
xor
xor
iret
pop
aaa
out
mov
xor
xchg
mov
iret
movsl
shll
pop
hlt
test
pop
lods
mov
das
frstor
call
inc
inc
pop
ds
inc
cmp
std
jb
and
outsl
or
push
add
pop
xchg
scas
cmp
and
push
mov
push
data16
ficompl
dec
imul
add
je
mov
jle
sbb
mov
mov
jmp
adc
sub
adc
push
arpl
cli
out
ror
push
xchg
out
cmp
and
push
mov
movsb
scas
repz
cs
pop
jns
xor
push
xchg
xor
push
pop
cmp
loopne
or
mov
shrb
addr16
lcall
jge
xchg
inc
xchg
sbb
sub
incl
pop
mov
aad
addr16
inc
jecxz
inc
rol
pop
add
out
addl
sbb
push
adc
iret
cmpsl
aad
imul
jg
lahf
xor
jecxz
mov
enter
ja
jmp
int3
ds
insb
push
sbb
out
shlb
fwait
xor
fsubrs
test
adc
xor
jle
jae
ljmp
push
neg
popf
cmp
adcl
dec
inc
mov
xchg
add
movsl
lahf
nop
sub
inc
gs
popa
mov
pop
test
xchg
in
lahf
pusha
fadds
inc
xor
push
aam
or
fistpll
adc
adc
test
push
push
insb
jo
adc
adc
sub
dec
shr
adc
roll
xchg
pop
lds
cmovnp
push
sub
iret
push
pushf
dec
loope
jnp
lods
sub
dec
inc
adc
push
lds
insl
in
sbb
lcall
loop
les
into
sbb
jl
mov
pop
mov
xchg
bound
mov
jge
clc
cli
pop
adc
repz
pusha
xor
test
scas
or
jno
mov
dec
pop
or
mov
jmp
loopne
cld
ret
dec
outsl
enter
outsl
das
leave
jns
dec
adc
push
ret
mov
jnp
hlt
push
mov
dec
cmovp
sbb
xchg
mov
xchg
dec
test
mul
in
aad
and
lods
push
lret
add
jl
int3
jle
mov
aad
and
daa
xchg
xor
in
push
mov
lock
ror
cli
out
pop
inc
gs
lret
loop
or
cmp
rorl
dec
or
lret
mov
into
mov
push
mov
push
das
xlat
repnz
mov
jle
xor
mov
fldt
fdivr
cmpsl
mov
adc
aad
sbb
insl
xchg
sti
pusha
or
outsb
dec
idivl
insl
ja
lea
ja
lods
fsub
rorl
lock
ja
cmp
out
int
xor
sbb
pop
inc
fnstsw
add
mov
fs
adc
sub
jge
pop
gs
jl
push
aad
leave
jecxz
arpl
hlt
shl
or
inc
pop
stos
mov
iret
sbb
ret
fwait
and
xchg
jle
jg
test
dec
sarb
aaa
pop
push
pop
and
sbb
outsl
imul
cwtl
dec
adcb
pop
jb
dec
add
xor
and
pusha
xor
sub
inc
out
aas
sbbl
inc
test
xor
sub
sbb
xchg
out
mov
xchg
adc
cwtl
mov
cmpsb
and
repz
or
fisttpll
rcl
jnp
add
loop
pushf
bound
mov
roll
push
jo
xchg
mov
xchg
jo
test
ret
add
jbe
jnp
js
test
jns
insb
push
xor
add
cli
mov
lds
mov
mov
dec
jle
out
out
out
push
in
mov
shrb
push
mov
sbb
movsb
fs
dec
or
jge
mov
xchg
setl
pusha
sbb
nop
jno
mov
cmp
sub
jne
lods
mov
mov
invd
xchg
mov
mov
sub
aaa
call
inc
xchg
enter
out
jo
icebp
jns
add
or
or
sub
add
jl
sub
push
sbb
fbld
dec
lret
dec
xchg
xor
shrb
push
mov
cld
xor
insl
sub
and
mov
mov
jmp
jp
pop
imul
repz
cmpsb
pop
jo
fwait
mov
and
pop
xchg
nop
jne
inc
sbb
or
lret
xchg
jge
xor
jns
lret
imul
call
arpl
aas
or
xchg
pop
sbb
mov
pop
sar
sub
xor
or
inc
in
mov
dec
leave
push
sbb
mov
leave
stos
inc
daa
aam
or
shll
or
xor
xor
inc
loopne
into
ja
dec
or
xor
and
sahf
adc
sbbl
lods
mov
push
icebp
dec
movsb
pop
dec
test
or
and
push
inc
inc
jge
pop
inc
mov
fimull
cld
inc
xor
mov
jo
inc
scas
adc
andb
rolb
aaa
bound
movsl
nop
and
data16
lcall
inc
inc
outsb
jb
sub
test
rcll
loope
pop
fsubrs
into
jno
lea
into
push
mov
xor
shlb
mov
xor
inc
mov
lcall
test
nop
leave
hlt
sub
mov
pop
xor
fcmovnu
pop
mov
add
popl
inc
clc
mov
hlt
sti
outsl
dec
mov
or
inc
arpl
push
popa
call
xchg
jae
lcall
push
in
hlt
fstps
mov
lret
loope
xor
jne
mov
sbb
outsb
in
sub
xchg
jmp
popa
fs
icebp
dec
xchg
ret
mov
cmp
cmc
xor
cmp
xor
sar
push
sbb
fcomps
das
push
negb
sti
sub
test
jb
test
and
js
xchg
fsubl
into
mov
mov
jmp
sbb
mov
adc
pushf
pop
sub
xor
lret
jae
imul
or
xchg
iret
in
cmp
adc
cmpb
popf
jo
add
sbb
or
test
jl
jmp
sub
jmp
lods
and
adc
inc
sub
inc
xchg
adc
out
and
or
jmp
dec
mov
outsl
xchg
mov
cmp
iret
lret
dec
dec
sbb
aas
ja
add
lret
cmpsb
sbb
pop
rcrb
mov
jnp
divl
sbb
imul
sbb
push
adc
cmp
test
pushf
clc
ds
xchg
add
push
mov
sub
sub
int3
sbb
mov
dec
nop
or
call
adc
jns
aaa
push
sbb
imul
sbb
out
loope
ds
insl
mov
mov
test
push
xchg
shr
movsb
nop
and
xlat
and
aas
int
inc
insb
xchg
sarb
adc
sahf
cmp
inc
aad
xor
xchg
push
inc
xor
dec
sbb
int
push
mov
inc
mov
repnz
jl
out
lea
dec
pop
lret
dec
rcrb
clc
cmp
nop
sbb
sub
out
lret
imul
mov
sub
mov
test
inc
outsl
pop
nop
sub
cmp
das
cmp
xor
dec
hlt
shlb
push
xchg
cld
movsl
stos
and
bnd
jo
jle
dec
lret
fcmovbe
mov
call
push
std
xor
sub
jp
jmp
fidivrl
or
shrl
sbb
jle
pop
push
bound
push
mov
int
inc
dec
mov
sub
sbb
dec
ja
push
inc
out
sub
push
pop
cwtl
fnstsw
add
fs
mov
es
es
mov
push
mov
jae
xor
flds
or
lods
jbe
movsb
scas
push
rcrl
cltd
aaa
cmp
scas
push
mov
outsl
inc
and
je
out
ret
pop
dec
mov
pop
xor
stc
sub
cli
pop
inc
test
mov
pop
cmp
stos
dec
add
test
stos
adcl
fdivrp
sahf
pop
popa
pop
jns
mov
out
test
ftst
xlat
aas
ret
ds
dec
sbb
add
mov
nop
jge
sbb
pop
sbb
dec
scas
jp
ja
sbb
push
mov
xchg
push
in
push
push
and
push
lea
mov
sub
stc
push
pop
mov
hlt
mul
jge,pn
testl
jg
push
inc
push
aaa
aaa
xor
inc
adc
mov
in
mov
into
sub
adc
pop
loop
in
vmread
jbe
or
lea
out
xchg
jmp
enter
js
adcl
pop
fiaddl
push
push
mov
enter
clc
int
enter
imul
loope
test
test
leave
pop
push
jns
bound
aas
jne
xor
loopne
invd
fisubrs
sub
int3
movsb
iret
add
jne
and
mov
int3
jecxz
dec
imul
pop
xor
cmp
fst
mov
inc
dec
test
mov
add
aas
cmc
fistpll
sar
jp
data16
stos
inc
mov
arpl
mov
imul
or
fwait
push
push
inc
fidivrl
mov
iret
lahf
fisubrl
and
lcall
ret
adc
cmp
popa
fists
xchg
mov
push
inc
jg
sub
shlb
lret
jnp
ja
aam
fiadds
xchg
dec
repz
cs
fistpl
fbstp
cmp
enter
pop
hlt
cmp
fwait
mov
jns
dec
add
clc
out
mov
in
js
loope
mov
inc
sbb
sbb
and
push
xchg
fistpl
cmp
or
mov
push
adc
or
lock
mov
out
jns
imul
addr16
sbb
pop
push
out
orb
xor
lds
loop
pop
sahf
jge
dec
movaps
test
divb
repnz
sti
test
push
xlat
in
xchg
adc
imul
lods
call
mov
rorl
dec
mov
shrl
scas
cmp
mov
pop
mov
add
push
into
aaa
mov
xchg
ficoms
sbb
mov
scas
sbb
lret
stc
cmp
jp
outsl
bound
test
push
jge
nop
and
mov
inc
cmp
push
dec
out
jbe
mov
sub
mov
push
les
and
dec
or
aas
push
mov
add
sub
pop
js
or
stos
loopne
inc
sub
xchg
xor
dec
or
inc
cmp
or
jbe
sbb
fldcw
sti
sti
mov
mov
jp
cmpsb
popf
stc
sbb
dec
add
subl
push
in
loopne
stos
pop
jns
and
cmc
mov
es
mov
daa
call
add
pop
xor
jl
dec
push
sbb
ficoml
push
bound
add
mov
aad
lret
or
fs
js
pop
fstpt
adc
and
std
xor
sbb
push
inc
outsb
shlb
pop
jb
or
cmp
icebp
enter
nop
arpl
loope
insl
dec
icebp
xchg
xor
push
xor
stc
inc
or
out
and
out
mov
scas
enter
ja
add
imul
fs
cmp
jne
sub
cmpl
pusha
xor
mov
mov
shrb
in
dec
dec
pop
push
stos
jnp
lea
sarl
in
movsb
push
dec
insl
fadds
mov
sbb
mov
and
mov
mov
ret
rol
dec
xchg
fs
xlat
push
cmp
call
sub
inc
negl
pop
mov
or
xchg
lods
xchg
lea
inc
das
jns
movsb
sbb
dec
adc
cmp
es
sti
or
ljmp
enter
repnz
push
rclb
daa
push
mov
addb
stos
mov
jge
pop
cmp
rcl
mov
loop
sub
hlt
mov
dec
ret
das
sti
and
cmp
addl
idivl
cwtl
push
jecxz
cmp
popf
jmp
mov
outsl
lcall
mov
mov
or
fnsave
das
adc
xchg
lock
push
repnz
test
clc
cmp
data16
mov
cmc
addl
insl
dec
lea
loopne
jmp
adc
negl
inc
out
mov
add
fists
mov
push
push
idiv
aaa
sbb
insb
push
push
lahf
and
mov
adc
mov
push
mov
fcompl
filds
fbstp
dec
adc
mov
mov
ret
andl
xchg
mov
iret
bound
lea
test
add
lock
add
jno
mov
sbb
xchg
sub
gs
test
loopne
daa
mov
jge
sbb
sub
mov
data16
imul
popl
pop
fimull
adc
mov
adc
lock
rorl
inc
hlt
xlat
sahf
arpl
sub
mov
sbbb
jecxz
and
jecxz
ss
inc
inc
xchg
push
mov
adc
test
mov
test
fstps
es
scas
fs
cmp
push
jmp
sti
in
in
neg
les
arpl
testb
cltd
or
dec
out
mov
pushf
test
inc
repnz
test
cmp
enter
mov
hlt
push
dec
jge
jne
mov
arpl
imul
nop
push
mov
jns
sbb
imul
pop
mov
imul
mov
lret
fs
repnz
rorl
and
imul
push
iret
mov
mov
nop
imul
out
adc
aaa
mov
pushf
pop
out
mov
inc
jno
in
push
out
in
movl
mov
imul
jecxz
add
jl
repnz
pop
dec
mov
nop
mov
mov
cmp
cli
pop
fnstcw
rorb
js
ja
out
jp
lea
push
xchg
stc
jge
and
sarb
xorb
cmp
cmc
sbb
or
pop
jno
outsl
sub
dec
pop
jne
sub
cmp
repnz
sub
and
test
push
les
icebp
pop
pusha
inc
ljmp
andl
mov
into
lea
mov
dec
add
sbbb
mov
ljmp
scas
shrl
jg
mov
nop
mov
mov
xchg
mov
cmp
sub
fldl
loope
lret
cmpsl
dec
arpl
out
lods
out
test
xchg
das
outsl
or
jmp
clc
lock
shl
jnp
test
lret
push
pop
pop
dec
repnz
lcall
out
call
cld
cli
sub
stos
insl
sbb
jne
fcoml
mov
loop
ret
stc
adc
insl
repz
movsb
add
xor
dec
mov
jmp
pop
dec
sbb
fwait
sub
mov
outsl
mov
inc
sbb
jl
ud2
push
mov
adc
and
mov
ja
mov
bnd
mov
add
sub
xchg
pop
push
mov
mov
cmpsb
and
push
mov
cwtl
cli
loop
outsb
xchg
inc
dec
addr16
push
jmp
push
sbb
push
push
jmp
orl
add
sti
lahf
pop
cli
mov
pushf
test
je
lahf
or
add
jmp
cld
jmp
mov
sub
iret
mov
inc
ret
inc
xor
cmp
in
xchg
push
frstor
sarb
inc
sbb
popf
fmul
test
rorl
enter
mov
sbb
aas
les
cmp
in
lock
leave
insb
fs
hlt
mov
lret
adc
adc
imul
and
lea
data16
jne
popf
imul
push
push
vmovntps
inc
fdivl
push
in
sbb
mov
adc
sub
mov
push
int
fdivl
shl
lea
jo
aam
adc
dec
inc
bound
call
mov
rcrl
add
push
cmp
inc
pmaxsw
test
lret
mov
and
mov
lock
xor
and
pop
xorb
or
push
loop
mov
ret
mov
pusha
mov
cmc
iret
loop
sbb
ds
inc
pop
jg
dec
xor
or
mov
pop
push
jecxz
and
mov
or
leave
lods
mov
movswl
call
test
test
cmp
push
jnp
fnsave
jmp
xchg
std
mov
jbe
rcl
fchs
inc
jnp
stc
fyl2x
cmp
cmp
sub
push
jno
lret
or
ss
mov
jecxz
into
jbe
push
mov
lods
sarl
stos
add
inc
inc
pop
inc
shll
fbstp
mov
fsubrl
mov
ja
dec
fmull
js
mov
mull
xchg
test
inc
pop
hlt
cld
je
ds
mov
mov
mov
pop
add
sub
and
ss
and
and
inc
push
sub
and
popa
call
lock
and
mov
xchg
data16
adc
test
push
cmp
ret
stc
pop
aam
add
sub
or
adc
mov
mov
shlb
cld
mov
clc
push
movsl
cmp
push
fnstcw
fisubs
cmp
bnd
shlb
mov
mov
out
cld
out
shll
in
sbb
cmp
jge
mov
out
xchg
adcb
lcall
xchg
cli
aaa
dec
xor
lock
xchg
mov
adc
dec
mov
cli
inc
lahf
rorb
push
stos
mov
lock
popa
pop
push
jl
or
ss
movsl
xor
xor
inc
popa
gs
adc
jp
inc
xor
popf
sbb
enter
in
fdivs
add
lahf
or
movsl
mov
mov
stc
daa
push
xchg
adc
loopne
scas
lahf
dec
push
test
enter
out
mov
out
enter
xor
add
mov
fsts
leave
es
sbb
jb
das
ds
sbb
add
jne
loope
and
outsl
adc
mov
mov
and
dec
xor
add
pop
ss
notb
lea
sbb
aad
lods
lods
sti
jno
xor
jecxz
jl
jns
mov
cmp
nop
pop
lods
dec
std
fwait
dec
ja
pop
fs
les
dec
cmp
fadds
imul
imul
push
mov
push
mov
jle
sahf
inc
xchg
sbb
jo
cs
fildll
cs
mov
popf
push
ret
in
imul
push
xchg
aaa
mov
mov
inc
loop
and
imul
adc
push
fistpll
fadd
sub
in
xchg
lock
push
xchg
mov
push
lods
mov
loopne
js
call
in
push
push
pop
xor
dec
fbld
mov
jl
repnz
xchg
das
popf
sbb
add
mov
dec
mov
xchg
sbbl
loope
pop
cmp
xchg
aam
sub
or
sbb
mov
jge
pushf
mov
xchg
push
jbe
jbe
imul
mov
mov
mov
insl
js
add
lock
imul
inc
fcomps
jg
adc
and
xchg
mov
out
mov
inc
jp
jo
or
fildll
xchg
and
pmuludq
inc
push
mov
das
fidivrs
xor
adc
fmuls
and
inc
jle
mul
xor
mov
push
icebp
test
enter
inc
pop
add
sbb
movsl
icebp
and
out
jmp
dec
or
mov
pusha
addb
adc
jnp
pop
lds
xchg
mov
and
jns
clc
jnp
or
fimull
fdivrl
or
adcb
in
push
cmp
and
imul
je
cmp
in
sub
fadds
push
xchg
out
dec
xchg
lock
dec
bound
inc
jg
pop
or
add
pop
fst
xchg
fistpl
inc
mov
loopne
cmc
mov
xchg
jo
imul
xor
cmpsl
mov
outsb
pop
fisttps
je
push
notl
out
or
jno
hlt
sbb
cmpsb
stc
or
sbb
insb
lea
sbb
ja
popf
outsl
fldcw
das
dec
mov
lock
leave
jno
xchg
pop
test
and
repnz
sbb
shl
jns
adc
sahf
add
call
imulb
pop
mov
xchg
xor
sub
xor
fcompl
scas
pushf
xor
scas
push
xchg
cwtl
push
sahf
jmp
sub
das
cmp
test
pop
push
and
inc
fsubrs
decb
dec
data16
ja
jg
je
sub
sbb
adcl
pusha
mov
push
je
movsb
pop
or
ficomps
adcb
add
xchg
xchg
cmp
sarb
daa
push
sub
imul
cmp
loop
or
jns
or
in
cmc
fidivs
sahf
push
xchg
inc
jo
test
out
sarb
xchg
pop
rcl
fsubl
adc
pop
pop
jae
xchg
enter
inc
dec
lret
pop
mov
mov
adc
loop
xor
pop
fmuls
jp
mov
leave
loopne
mov
mov
out
cmp
mov
lock
pop
test
std
aam
imul
xor
and
inc
mov
mov
addr16
outsb
dec
xchg
dec
les
movsb
inc
gs
xchg
insl
ljmp
sub
mov
sbb
pop
pop
adc
push
xchg
lret
enter
push
push
std
push
mov
and
arpl
aas
jg
lret
push
mov
mov
mov
xor
cmc
data16
test
sahf
xchg
pop
push
loope
sbb
das
xchg
pop
cmp
icebp
gs
inc
sub
out
adc
sub
adc
mov
mov
cltd
jns
andb
sbb
push
mov
pushf
dec
xchg
mov
jns
sbb
in
fldcw
mov
mov
clc
lcall
pop
adcb
jns
js
cmpsb
adc
inc
inc
jmp
fisttpl
ror
or
inc
in
sub
sbb
std
push
fsubs
push
scas
xchg
lods
insl
jp
outsb
insb
mov
repz
movsb
push
mov
popf
mov
adc
jne
push
mov
xchg
lock
outsb
fs
repz
xor
aam
sti
pop
faddl
lds
inc
and
xchg
push
inc
cmp
mov
jns
scas
clc
ficompl
outsb
xchg
lds
xchg
sub
cmpsb
xorl
sub
mov
xchg
out
scas
hlt
inc
cli
lcall
mov
pop
add
pop
push
enter
mov
sub
push
dec
ror
mov
clc
sub
lahf
lods
sahf
and
mov
pop
sbb
push
jmp
pop
push
add
jge
daa
sub
jo
cmp
inc
cmp
pop
insl
repnz
mov
fcomi
shlb
ss
add
xor
push
mov
sbb
sbb
lock
and
pop
adc
xlat
mov
mov
jo
jle
into
xlat
pusha
sub
pop
xchg
ss
or
cmp
arpl
xor
ds
jnp
pop
sbb
lret
shr
nop
or
in
ds
sub
int
fnsave
inc
sub
test
mov
push
xchg
xor
inc
xchg
push
mov
jno
inc
test
xor
aaa
scas
dec
dec
sub
and
push
imul
mov
pop
insb
inc
divb
cmc
and
dec
inc
lock
dec
mov
lods
pop
inc
out
xor
mov
cmp
in
int3
mov
cld
pop
and
jl
mov
xchg
rorb
leave
jae
mov
inc
aam
loope
dec
insb
xchg
orl
pop
add
fwait
or
cmp
test
lods
inc
cmp
xchg
icebp
push
sbb
adc
inc
std
test
pop
movsl
dec
rcrb
js
mov
testl
xchg
jl
inc
fadds
mov
mull
cmc
clc
jnp
mov
arpl
sbb
sbb
push
xor
jne
lahf
fucomp
mov
ret
mov
sub
pusha
insb
xor
fdivrl
mov
sub
ss
jno
out
add
xor
pop
jnp
pop
aaa
enter
mov
adc
in
shrl
sub
pop
into
lds
das
nop
and
ffreep
scas
cmpsb
mov
mov
popa
das
cmp
mov
pushf
cltd
mov
cld
jbe
loope
xchg
jp
xor
arpl
cmp
dec
jge
fistpll
std
pop
pop
addr16
in
xchg
sub
leave
testl
cli
out
xor
mov
sub
inc
ja
mov
pop
mov
insb
ret
mov
clc
clc
outsb
mov
cmpsl
rcll
cmp
mov
mov
sahf
lahf
pop
ret
mov
cmp
sbb
fsubr
fsubs
in
sub
stos
dec
push
test
jecxz
lods
jno
jae
in
rcll
jnp
inc
mov
pushf
cmp
or
or
shrl
popa
gs
mov
loop
rcrb
sbb
sarb
adc
aaa
sub
in
dec
push
int3
scas
aad
rcrb
pop
lock
jge
sbb
inc
push
in
adc
push
adc
jmp
adc
aad
mov
add
cmp
or
mov
adc
mov
and
es
in
jl
adc
and
inc
and
cli
and
andb
pop
js
leave
bound
popf
shlb
imul
stc
div
push
pop
adc
fwait
jle
adc
push
mov
fbld
fwait
int
loope
scas
add
aad
pop
icebp
int3
cmpl
mov
dec
aam
adc
loopne
ljmp
imul
sarl
adc
aad
adc
dec
scas
push
popf
pop
pop
cmp
jno
cltd
fildl
xor
add
data16
dec
xor
rcr
xchg
lcall
push
mov
push
icebp
jl
xor
jo
mov
lods
xlat
ljmp
push
mov
jno
aad
repnz
mov
lock
cmp
push
push
loopne
jl
inc
cmpsl
rcrl
lcall
cmp
push
cmp
sub
sti
mov
imul
dec
dec
push
lds
sbb
cli
imul
test
hlt
sbb
fstps
sub
gs
push
imul
lods
mov
pop
mov
ret
sbbb
lret
subb
mov
xchg
push
mov
iret
ret
pop
outsl
mov
sbb
mov
in
das
mov
inc
or
std
ret
nop
pop
adc
mov
push
push
lea
popa
adcb
and
call
pop
stos
push
mov
fsts
clc
mov
test
mov
lds
faddl
xor
jle
test
arpl
dec
pushf
mov
sub
loopne
sti
lret
movl
popa
out
pop
mov
xchg
adc
dec
and
mov
mov
mov
add
pushf
mov
inc
pop
dec
mov
out
iret
pop
add
xchg
repz
add
mov
lds
mov
aam
pop
jb
add
idivb
not
ljmp
pop
cmp
add
mov
or
mov
pop
add
jp
or
adc
xchg
jle
stos
int3
dec
lods
lds
jo
inc
add
adc
push
imul
mov
cmp
pop
xchg
lds
outsl
int
fimuls
addb
or
adc
xor
out
sub
call
push
cli
mov
adc
mov
dec
push
dec
lahf
add
movl
arpl
xor
add
and
in
sub
cmp
xbegin
push
push
sbb
fisttpl
dec
rcl
cwtl
out
stos
int
sub
xchg
lock
mov
aas
sti
les
ljmp
in
stc
ror
jae
sub
movsb
xchg
fwait
xrelease
mull
adc
xchg
push
cmp
cmpb
fidivs
xchg
cmpw
fistps
or
xchg
sbb
lahf
push
fidivrs
push
jae
lahf
cmp
adc
mov
clc
cmpl
imul
cmp
mov
cmp
cmc
cmc
clc
mov
add
inc
or
sbb
sbb
or
bound
flds
and
negb
xor
test
jns
loopne
mov
cmpsl
lret
stc
movsb
test
sbb
shrl
xchg
cmp
jns
xlat
cltd
test
or
movsl
jb
in
mov
add
mov
jno
outsl
out
fildl
mov
lret
ss
xchg
std
xchg
sbb
inc
ljmp
into
lds
testb
leave
imul
cltd
jge
jbe
xbegin
or
jmp
jg
lods
daa
jno
mov
out
mov
mov
lahf
ss
scas
fs
push
xchg
add
jns
mov
adc
test
cli
xor
add
out
push
repz
ss
mov
leave
xor
adc
popl
jno
les
int3
push
sbb
lods
and
xchg
pop
cmp
inc
inc
dec
leave
sub
mov
hlt
outsl
ss
mov
pop
fidivl
lea
xchg
aaa
and
fldl
icebp
ret
sahf
les
dec
cwtl
mov
lds
shlb
xor
mov
cmpsb
dec
pushf
push
jl
jb
int
and
xor
jno
pop
cwtl
mov
gs
cli
xchg
cmp
adc
pop
ljmpw
jmp
cwtl
xor
call
adc
insb
pop
cmp
or
test
mov
shr
add
mov
fcoml
fildl
pop
mov
mov
cmp
js
mov
movsl
enter
aas
jns
out
inc
fstpt
mov
or
lret
adc
dec
adc
test
mov
shll
in
jne
hlt
int3
and
sub
icebp
inc
outsb
xor
sbb
gs
cmp
popaw
cli
ret
fwait
je
ss
popf
popf
and
inc
mov
jns
mov
inc
mov
sbb
sub
xlat
jge
cmp
dec
insl
pushf
lds
pop
cs
mov
add
or
sahf
sub
js
push
test
dec
clc
mov
les
pop
js
test
sub
lcall
cmpsb
cltd
andb
sbb
cmpsb
push
or
out
mov
and
fdivs
pushf
push
add
mov
jnp
sub
sub
int
sbb
and
lahf
int3
xchg
dec
sub
int3
mov
call
xlat
xchg
dec
pop
adc
stos
inc
loope
dec
sbb
mov
or
in
ds
push
xchg
shll
lea
pop
imul
jnp
lds
cld
xlat
pop
xlat
adc
int3
xchg
enter
lds
ret
rclb
push
hlt
mov
xor
fldcw
in
shlb
push
in
cwtl
lret
loop
popa
das
adc
and
ja
mov
repnz
int3
adc
std
xchg
mov
dec
clc
les
icebp
xor
dec
cmc
jmp
jo
movl
lds
dec
dec
xor
dec
shr
mov
aas
cltd
js
stos
divb
sub
pop
fmull
aam
xchg
fcom
fidivl
cwtl
flds
jmp
push
aad
mov
sbb
sbb
cmp
jo
sub
xor
js
sarb
pop
jne
pushf
pop
push
cs
push
call
add
push
jns
adc
mov
jg
add
jno
mov
pop
lahf
cmp
jge
mov
push
xlat
push
insl
lea
sbb
adc
sub
insb
repz
call
mov
and
add
dec
push
mov
sub
fmull
mov
xchg
loopne
pop
jne
repz
or
aas
call
lret
lds
das
add
xchg
icebp
scas
mov
pop
and
inc
and
into
rclb
or
and
push
jg
cltd
stc
sub
pop
out
subl
bound
pop
push
xchg
fwait
jmp
es
sub
jne
daa
roll
bnd
jg
push
outsl
gs
jb
xchg
mov
mov
andl
shll
xor
jnp
sub
mov
mov
movsb
loop
or
ret
fidivs
dec
std
bound
aas
gs
inc
in
test
pop
ss
fidivs
out
ja
sbb
mov
mov
mov
push
or
stos
jno
stos
mov
mov
xor
sahf
nop
sbb
xchg
add
inc
imul
test
cmpsb
lods
gs
xor
xor
insl
shll
dec
sub
mov
std
mov
std
mov
mov
push
sub
push
test
icebp
and
mov
scas
gs
arpl
decb
test
lods
mov
cmp
cmp
ret
mov
jmp
push
sbb
cmp
out
out
sub
lret
dec
scas
pop
pop
loope
dec
lahf
cmp
push
mov
scas
cmp
mov
dec
sub
cmpsl
repz
in
or
nop
xor
fistpll
mov
icebp
pop
int3
lcall
pushf
clc
add
xchg
xor
jbe
fst
lcall
sub
sbb
int
insb
adc
inc
lcall
hlt
sub
testb
adc
sbb
add
ds
mov
xchg
das
jp
mov
sbb
out
cmp
lret
out
pop
cwtl
rcr
clc
xor
nop
int3
adc
scas
sbb
mov
cmp
movsb
push
cmp
in
cmp
data16
jle
lds
mov
sti
sub
sub
jo
icebp
int
push
notl
jne
je
fimull
xor
add
cmp
movsb
addr16
jnp
push
add
sub
out
pusha
bnd
int3
mov
andb
sub
scas
jmp
daa
dec
pop
js
jnp
into
bound
or
aam
jo
test
and
pop
adc
mov
jo
pop
pop
and
cmp
xchg
into
out
cmp
cmc
push
push
pop
adc
xor
mov
lea
arpl
jge
sti
repnz
ficompl
sbb
je
cmp
fldl
lock
sar
test
mov
shl
xor
lea
jl
popa
xchg
out
or
sbb
and
jg
out
daa
cmp
aad
push
gs
ret
jb
nop
icebp
int3
das
imul
rcrl
sub
ret
in
cwtl
inc
mov
mov
jbe
imul
out
cmpl
inc
lds
add
mov
daa
sub
fstl
inc
call
xor
and
leave
enter
dec
out
icebp
popa
ficoms
sbb
jbe
xor
jae
dec
bound
or
jl
je
fnsave
lock
loopne
jecxz
push
lock
repz
mov
pop
jp
adc
xchg
push
jecxz
mov
rclb
add
orl
inc
sbb
push
add
or
xor
mov
cmp
xor
cmp
pop
nop
stos
dec
adc
adcl
fcomip
aad
stos
mov
outsl
sbb
or
push
inc
xchg
mov
test
outsb
in
icebp
xchg
push
sti
icebp
es
mov
jb
fldenv
and
lcall
push
fadds
adc
push
inc
cmpsl
repz
xchg
out
aam
pop
mov
jmp
cli
mov
lods
imul
or
decl
push
cwtl
add
out
pop
aas
add
stc
negl
dec
pop
jo
out
jbe
jmp
repnz
fcoms
mov
jmp
sub
repz
pushf
push
mov
call
lods
mov
inc
mov
push
dec
mov
int
jmp
add
jl
xor
das
adc
jge
pop
xor
inc
jecxz
xor
sub
ljmp
push
repz
mov
jmp
aaa
popf
jg
sbb
add
inc
xchg
xor
jg
push
and
add
jle
inc
loopne
mov
xor
rolb
push
sub
dec
cmp
femms
lcall
and
or
ret
ss
out
fcmovnbe
outsb
xchg
fcomi
fistpl
aas
popf
ficoms
dec
mov
mov
sbb
inc
loope
pusha
push
ss
xchg
add
push
mov
ret
fnstsw
mov
xor
jecxz
push
ja
jo
enter
enter
out
sbb
sub
rcrb
sbb
dec
mov
and
inc
or
or
insb
or
push
pop
daa
jne
mov
mov
repz
sbb
jle
mov
push
std
adc
and
push
and
sub
push
icebp
pop
lds
push
js
adc
fnsave
out
fwait
xchg
inc
daa
lds
dec
and
mov
rolb
push
xor
mov
shlb
lcall
test
pextrw
insb
cmove
pop
inc
clc
xchg
pop
rcll
std
cmp
cmpsb
jae
mov
jns
cmp
push
jmp
cmp
xor
or
mov
mov
mov
pop
fst
mov
inc
pop
mov
in
pusha
pop
shlb
push
inc
imul
jo
je
adc
dec
adc
add
add
or
xor
sbb
sahf
xor
cmp
dec
adc
xlat
mov
adc
lock
mov
push
xor
sub
les
lret
dec
imul
es
es
leave
int3
scas
jbe
sahf
fdivs
cmp
in
jmp
cmpsl
fldenv
jbe
or
lret
or
xlat
jge
into
das
xorb
add
inc
call
mov
loop
push
pop
ret
sub
mov
aas
or
jnp
out
decl
imul
or
pop
les
push
sbb
lret
sub
mov
mov
xor
out
flds
lods
mov
push
mov
hlt
aad
or
sub
cmc
push
fsubrs
int3
push
mov
mov
jg
adc
mov
xchg
xchg
and
mov
jmp
push
mov
ljmp
mov
push
pop
lock
out
ljmp
jb
pop
and
aam
mov
or
aaa
loopne
je
lds
rolb
cmp
mov
and
push
shlb
push
lret
xor
sub
sbb
dec
pusha
call
popf
jb
xor
movsb
xor
push
fiadds
push
std
iret
out
lret
cli
xlat
adc
test
addr16
clc
xchg
mov
neg
insl
push
fs
fbstp
pop
ret
fsqrt
lcall
out
push
adc
test
pushf
aad
jp
and
nop
mov
loopne
sbb
xchg
aas
addr16
out
out
int
fcomi
lds
xor
mov
fstpl
pop
pop
gs
mov
inc
add
inc
mov
test
int3
inc
add
push
cmpsb
and
in
repz
ljmp
adcb
fsubl
scas
sbb
mov
cltd
popa
push
lock
adc
faddl
fidivrs
push
mov
and
insb
pop
addr16
jae
mov
xchg
xchg
movsl
nop
mov
imul
arpl
in
jb
aad
mov
pminsw
mov
or
sub
out
push
shrl
stos
push
jmp
test
push
dec
out
std
push
ss
in
xchg
dec
and
repz
dec
lret
testb
outsl
push
or
cmp
or
in
pop
adc
mov
loop
jge
push
jne
pop
in
jge
adcb
insl
and
movsl
mov
push
sub
movsl
jmp
leave
sub
mov
rcll
mov
ficompl
mov
sub
adc
pop
inc
mov
mov
loope
insb
or
imul
or
mov
rclb
inc
fsubr
loope
jo
xor
pop
loop
shlb
mov
sub
xorl
xchg
add
aaa
outsb
sbb
fdivl
xchg
lea
ds
mov
pop
loope
nop
rolb
jne
cli
imul
sbb
xor
xchg
repnz
xor
test
fisubrl
xchg
cmpsb
rclb
adc
ds
fimull
out
xchg
or
je
push
fwait
mov
jg
inc
pusha
loope
orb
in
popa
mov
repz
dec
out
mov
sub
insl
lods
push
daa
clc
jle
mov
pushf
pop
jne
outsl
inc
add
push
aas
shrb
out
lahf
mov
cs
xchg
xchg
add
cld
lret
popf
pop
cmpsl
cmp
into
push
movsl
aam
repnz
out
jl
subb
mov
jbe
inc
mov
scas
jno
ja
fsubl
mov
mov
push
mov
cli
test
dec
jmp
ja
sbb
ret
inc
xor
adc
lret
int
ljmp
ss
fcomps
shrl
adc
push
and
lods
stc
nop
cmp
and
shr
ret
mov
sbb
orb
cmp
add
addr16
adc
push
push
leave
pop
std
nop
and
cld
ljmp
test
cmp
les
test
aas
push
sub
inc
cmp
xchg
lret
bound
jo
pushf
xchg
mull
sub
arpl
xor
inc
push
mov
dec
js
push
fucomp
lods
addr16
or
outsl
in
addr16
or
pusha
sarb
add
jg
std
lds
sub
cmp
xchg
inc
dec
leave
xor
stos
lods
mov
inc
pop
insb
idivl
inc
stc
icebp
push
sub
movsl
sahf
inc
xchg
repz
add
dec
enter
and
outsb
and
pop
cli
inc
scas
jecxz
mov
lods
cld
out
das
push
orl
jae
cs
lds
pop
js
imul
cld
fcmove
cli
mov
popa
cltd
mov
mov
and
imul
jns
fcoms
jp
movsb
xchg
xor
enter
dec
cmpsl
xchg
xlat
or
adc
push
cmp
and
in
sbb
cmp
aaa
mov
push
or
add
dec
inc
mov
cmp
aam
mov
inc
mov
mov
mov
js
je
enter
ja
pop
pop
outsl
push
jbe
or
fsubl
and
mov
out
mov
mov
xor
xor
repz
iret
in
pop
pop
xchg
mov
lret
imul
sub
cli
sbb
aaa
jmp
jae
and
repnz
mov
sbb
cmc
hlt
notl
subb
cmp
cmc
mov
iret
jl
inc
clc
lret
xorl
jno
jno
xchg
cmp
xchg
inc
ja
pushf
xor
mov
add
pushf
lock
lods
fstpl
repz
inc
add
jbe
mov
je
jg
movsl
xchg
jmp
icebp
cs
xor
add
shll
jg
punpcklwd
push
cmp
push
adc
imul
push
rsqrtps
jns
ret
stos
xchg
sbb
xchg
sbb
mov
sbb
jb
in
mov
jb
push
add
rcrl
pop
loope
les
push
push
inc
inc
adc
adc
mov
lods
sub
les
in
cltd
mov
sub
loopne
dec
loop
mov
loope
fnstsw
mov
repnz
dec
mov
movsb
ds
xor
cmp
addr16
sbb
out
orb
ret
add
mov
call
cwtl
inc
hlt
jo
push
and
mov
jg
mov
cmpsl
fisttpll
shrl
jge
lret
lods
xchg
push
adcl
repnz
jge
xchg
or
sarl
mov
dec
and
mov
cmc
insl
push
pusha
sub
dec
dec
dec
ss
push
sub
push
shrb
popa
std
push
push
sbb
mov
mov
addl
cmp
scas
inc
sbb
cltd
es
sub
pop
stos
js
fimull
loopne
or
mov
push
repnz
xchg
and
inc
stc
aam
push
adc
and
das
lods
lret
lods
sub
test
in
mov
push
sub
mov
push
xchg
enter
faddl
adc
cmp
pusha
std
rolb
cmp
aas
dec
fisubrs
fisttpll
inc
gs
shl
add
das
inc
fists
sub
fbld
cmp
dec
pop
pusha
in
cmp
sub
or
invd
in
push
nop
insl
int
sbb
lcall
pop
leave
lods
cli
pop
rol
xlat
aad
mov
or
arpl
mov
or
sbb
push
lds
or
xchg
adc
popf
insl
or
imul
cmp
pop
adc
jmp
fsubrl
dec
and
mov
jb
jo
jne
or
das
mov
nop
xor
sahf
sub
push
dec
ds
cmp
les
dec
sbb
fstpt
mov
clc
mov
mov
and
mov
push
push
aaa
subl
leave
inc
adc
in
je
jo
mov
adc
or
jbe
sti
nop
or
jmp
fmul
je
sub
mov
inc
idivb
imul
outsw
push
dec
scas
cmpsb
and
cmp
adc
shlb
xor
pandn
fwait
inc
mov
addr16
jmp
fucomp
cmp
pusha
aad
loop
mov
sbb
test
sti
jae
pushl
inc
iret
leave
jo
mov
stos
mov
ret
loope
mov
pusha
xchg
jne
jne
scas
push
mov
std
addr16
dec
jns
dec
fwait
stc
ret
in
lods
std
popf
int3
ret
mov
sbb
add
push
inc
decl
jo
cs
or
add
bound
pop
fwait
cmp
out
dec
inc
sbb
xchg
test
inc
lea
insl
repz
or
push
dec
push
sbb
shrb
push
int3
push
fincstp
clc
mov
mov
mov
aam
jne
outsb
mov
cmpsl
pop
jno
mov
lret
jb
mov
xchg
loopne
push
hlt
pop
jno
mov
imul
loope
sbb
pop
cmpsb
cmpsb
loope
inc
mov
repz
jae
push
mov
stc
dec
js
mov
or
push
mov
lea
adc
mov
pop
xchg
daa
jns
adc
push
test
dec
fstpl
sbb
lods
mov
pusha
xor
outsl
lcall
imul
enter
jae
pop
aam
xor
outsb
lcall
es
repz
adc
jno
jle
lahf
xor
cmp
stc
mov
push
mull
jae
adc
add
push
pop
roll
add
jg
insl
push
testb
push
into
adc
mov
nop
inc
pusha
sub
xor
cmp
rclb
inc
dec
push
jb
jmp
adc
cltd
sub
add
ljmp
inc
out
pop
out
xlat
shrl
or
fisttpl
cmp
mov
idivl
adcb
push
push
mov
mov
dec
loope
mov
dec
mov
and
fisttps
add
cmp
cmp
gs
popf
fucom
out
fisubl
dec
out
insb
sbb
rcrb
or
jge
xor
dec
mov
add
fsts
mov
lock
sbb
sbb
mov
mov
xchg
ljmp
add
rorb
mov
in
push
pop
xorl
scas
out
push
mov
sbb
test
in
cmp
inc
jbe
mov
sub
cmpsl
cli
add
out
imul
inc
flds
dec
sahf
push
aad
xchg
and
cmc
xchg
xchg
sbb
cmp
shlb
and
cmp
add
or
adcb
loopne
pop
push
pop
sbb
gs
mov
jmp
jbe
icebp
dec
or
xor
pop
je
pop
xchg
push
dec
push
sar
adc
inc
pop
insb
negl
hlt
pop
cltd
int3
adc
movsl
xchg
div
sub
sbb
js
jb
shrb
push
push
rcll
mov
fadd
stos
je
rcrl
les
mov
pusha
loope
outsl
clc
or
mov
loopne
in
ds
ret
lds
add
punpckldq
mov
ja
lret
sbbb
xor
push
push
sub
imul
mov
inc
sti
jecxz
and
gs
mov
cli
pop
xchg
lcall
mov
jns
lock
mov
cwtl
aad
das
or
repz
hlt
inc
data16
inc
pop
mov
inc
jg
ret
cmc
lcall
clc
pop
mov
lahf
mov
pop
push
add
aad
jge
dec
lahf
push
cmp
xchg
jo
fs
lret
shlb
mov
sti
push
je
adc
movsl
mov
sub
out
inc
je
nop
pop
mov
mov
mov
in
adc
jmp
out
mov
jnp
testb
mov
test
ja
pop
testl
mov
lret
mov
add
mov
shrl
fidivs
sub
les
je
lock
test
pop
jge
subb
ret
xor
xchg
rorb
add
or
add
inc
loope
jae
cmp
or
sub
push
fs
fimull
gs
or
adc
sub
dec
mov
sub
jl
jp
push
jg
xlat
pusha
sub
fxam
xchg
aaa
cmpsl
ret
daa
enter
xlat
jmp
xor
cmp
mov
sub
push
push
push
gs
mov
mov
adc
fists
shr
adc
sub
jmp
shl
or
filds
or
enter
shrl
pop
into
insb
cmp
test
jl
mov
lret
movsl
mov
scas
lcall
aaa
test
xor
loop
xor
pushw
lods
repz
mov
data16
test
sub
and
mov
inc
xor
add
in
sti
imul
mov
test
gs
jnp
arpl
sbb
or
fsubr
and
push
adc
sbb
add
mov
sbb
mov
lea
out
andb
mov
jb
mov
adc
je
and
sbb
xchg
sub
es
test
sub
adc
out
inc
inc
dec
jge
add
test
or
mov
jns
popf
imul
int
xchg
fnstsw
fcomip
adc
push
mov
stc
mov
xchg
aad
adc
xchg
cltd
nop
cmp
mov
loopne
mov
push
jp
push
repnz
dec
out
or
or
in
repz
inc
inc
std
dec
fadds
lods
jb
stos
movsl
and
repnz
pusha
cwtl
je
sahf
jo
loopne
test
in
leave
xchg
push
dec
call
out
xchg
stos
mov
out
dec
cli
xchg
imul
mov
sbb
sbb
push
fwait
mov
lods
mov
imul
ljmp
inc
jecxz
stc
lds
popa
ljmp
add
dec
jae
inc
adc
dec
sahf
sbb
ret
xchg
lcall
or
sub
mov
xchg
popf
lret
pop
leave
pop
negl
add
hlt
ror
dec
lret
leave
inc
hlt
lea
push
mov
sbb
and
movsb
xor
stos
push
and
andb
pop
jmp
xor
sti
or
dec
inc
xchg
xchg
mov
pusha
mov
pop
sbbl
mov
xchg
mov
int3
scas
pop
mov
or
mov
icebp
inc
hlt
fwait
cmp
nop
mov
cmpsb
sbb
mov
mov
flds
lds
shlb
or
cmc
xchg
iret
test
imul
loopne
out
push
dec
inc
lock
scas
hlt
pop
hlt
adc
jmp
lods
sbb
cmpsl
jno
repz
hlt
jp
inc
cwtl
popa
out
jbe
cmp
loop
add
movsb
call
inc
or
pop
inc
xchg
mov
loopne
inc
bound
mov
stos
divl
subl
popa
flds
fsubrl
xchg
mov
popf
push
mov
dec
mov
faddl
call
mov
enter
mov
int3
cli
jmp
lea
sbb
inc
in
movsb
jle
mov
adc
test
sti
jp
fiaddl
pop
dec
adc
adc
and
xor
add
lret
in
jp
mov
sbb
test
xchg
popf
mov
push
lods
jmp
inc
lret
aas
ds
sbb
mov
je
inc
mul
mov
ds
imul
inc
mov
out
sbb
insl
jns
push
jp
sahf
mov
movsb
out
jp
std
movsb
xor
mov
xchg
mov
xchg
jae
loopne
mov
jbe
divl
fidivrl
sbb
in
mov
sti
in
adc
pushf
jl
rcr
fcom
cwtl
add
clc
aas
bnd
xorb
mov
and
dec
push
test
xchg
push
push
dec
sub
push
sub
shr
cwtl
add
mov
and
into
cmp
xor
addr16
inc
ret
mov
sbb
lock
xor
aam
shlb
fcoml
or
les
mov
mov
mov
inc
in
cmp
mov
xchg
ss
mov
jp
xchg
add
std
cmp
xor
decb
jne
jo
outsb
scas
pop
xchg
fldt
fnstsw
int3
mov
mov
xchg
into
std
mov
sub
and
scas
and
pusha
cmp
inc
das
pop
fmul
push
inc
cmc
ret
xchg
sti
xor
mov
mov
xor
add
mov
imul
dec
mov
xor
aad
sbb
mov
xor
mov
or
sub
fdivrs
pop
jbe
test
sub
lret
loope
xchg
add
cmp
adc
sbb
std
inc
loope
hlt
mov
jo
in
adc
hlt
inc
stos
mov
xchg
out
mov
xlat
jmp
inc
pop
lea
lcall
enter
mov
aas
test
cmp
popa
pop
addb
sbb
imul
clc
mov
pop
adc
fldcw
dec
xchg
push
mov
sub
lret
add
cli
pusha
out
stos
jle
pop
fidivrs
ret
ja
xor
sub
iret
fisttpll
stc
sbb
mov
sub
popf
scas
adc
or
sbb
imul
dec
imul
adc
addb
out
adc
add
cmp
loopne
adc
push
fcomps
hlt
adc
pop
fcmovnu
mov
sub
test
sub
sbb
aaa
mov
je
inc
fsub
jp
addb
xor
inc
in
js
xor
pop
jo
xchg
mov
ret
movsl
mov
rcrb
xchg
push
sbb
fisubl
and
push
fmuls
sbb
je
pop
jg
sbb
sarl
idivl
lods
mov
je
push
out
mov
lea
xchg
fisubrl
push
mov
test
clc
adc
stos
xchg
imul
jmp
enter
lret
repnz
push
dec
sub
and
mov
mov
pop
sub
xchg
cmp
pop
cmpsl
in
aaa
sti
cmpsb
jp
xchg
arpl
cmc
aaa
pop
pop
cwtl
or
add
mov
xchg
adc
sbb
loope
mov
pushf
jmp
jecxz
test
out
fwait
mov
cmp
and
or
jp
loop
clc
cltd
push
in
leave
imul
mov
std
test
aaa
push
mov
stos
add
in
or
push
xchg
daa
imull
out
push
xor
lret
leave
mov
lea
popa
jg
add
fbld
insl
shrl
mov
jb
adc
mov
push
std
or
mov
xchg
jp
sbb
std
stos
daa
xor
mov
pushf
jg
adc
hlt
jge
daa
aaa
jecxz
jl
popf
test
jle
pop
sub
push
gs
rcll
adc
out
shll
xor
adc
popa
mov
negl
insb
inc
mov
or
loope
cld
push
add
les
pop
imul
test
aam
add
testl
inc
jp
push
aas
jmp
pop
pop
out
insb
push
cmp
push
sub
fidivrs
jg
push
push
das
imul
shl
push
js
cld
pushf
pop
mov
pop
jb
lea
mov
pop
xchg
sbb
mov
xor
mov
sub
mov
orb
or
call
cli
mov
inc
outsl
movsl
and
mov
inc
mull
or
and
int
cmp
adc
lods
push
leave
or
and
into
rcrb
cld
xchg
popa
mov
nop
cmp
dec
mov
mov
sbb
mov
push
jmp
fs
leave
lret
jns
int3
jno
pop
jb
jbe
inc
es
sbb
push
or
stc
cmp
ljmp
repz
add
in
dec
sbb
xchg
aas
xchg
adc
sbb
pushf
in
cs
mov
mov
cmp
inc
xor
out
ret
mov
inc
add
mov
nop
in
test
cmpb
add
pop
scas
bound
mov
lods
or
xchg
sbb
or
push
repz
jle
sarl
leave
int
int3
bound
loope
cli
jb
lock
mov
fimuls
daa
xor
sbb
mov
dec
xchg
scas
push
adc
or
adc
aam
subb
popa
call
int3
lds
pop
adc
mov
adc
imul
push
xchg
enter
mov
xor
test
xor
hlt
jp
ljmp
push
push
aam
lds
mov
fdivr
outsl
dec
add
repnz
sub
shll
inc
jae
ret
test
xchg
jecxz
cmp
inc
jmp
in
mov
in
adc
push
inc
fcmovb
mov
cmpsb
xor
icebp
test
push
inc
popa
dec
clc
mov
mov
les
sub
loop
add
xchg
bound
or
fs
mov
das
sub
imul
pop
xchg
fsubr
sbbl
mov
ljmp
fsubs
jb
jno
mov
jae
es
inc
aaa
add
dec
nop
lahf
int
add
push
mov
mov
cmp
mov
or
mov
sub
push
adc
lahf
xor
xchg
sbb
cwtl
fnsave
lret
push
push
cltd
test
add
mov
movsb
icebp
jg
in
ror
test
imul
mov
in
test
jmp
jns
sahf
rcrb
add
push
sti
mov
xchg
xorb
dec
add
rclb
cli
xor
push
push
loope
sub
xchg
push
jmp
or
je
movsb
addr16
rorl
outsl
lods
push
mov
push
lock
inc
inc
or
cwtl
mov
mov
sarl
pop
cld
xor
in
lcall
mov
testl
fsubs
shrb
fs
add
stos
or
jmp
jg
cli
fidivs
lods
aam
rcll
xor
push
out
repnz
mov
sti
js
fiaddl
dec
nop
push
sbb
in
outsl
rolb
mov
fcomip
xchg
repz
out
jg
adc
adc
mov
pminub
into
mov
dec
mov
insl
jns
leave
ja
aas
or
je
sbb
xchg
fstpt
xchg
pop
aad
sbb
gs
mov
inc
xchg
insb
push
mov
bound
fst
or
fists
pop
jp
xchg
mov
ret
sbb
mov
call
pop
testl
inc
mov
adc
mov
fmuls
out
push
in
add
mov
adc
lods
sub
out
int
aaa
pop
je
fnstsw
cmpsb
push
rolb
subl
or
int3
pop
pop
popa
es
mov
push
pushf
in
ss
xchg
xchg
or
ds
aaa
addr16
and
mov
shrl
inc
int
cli
addl
mov
add
pushfw
lods
out
test
push
outsl
cmp
int3
add
adc
imul
cmp
push
adc
test
addl
mov
popf
sahf
xor
or
test
add
inc
inc
fldz
dec
pop
dec
je
repnz
daa
cmp
pop
into
scas
stc
mov
stos
sbb
repz
into
or
jle
nop
scas
push
je
ret
lcall
cmc
addr16
jb
pop
mov
xor
push
jnp
and
push
mov
adc
cmc
xchg
xor
mov
cmpsb
push
xchg
repnz
push
orb
sbb
sbb
xor
xchg
mov
clc
cld
add
in
fs
sbb
mov
push
pop
and
ds
leave
or
jecxz
stc
fnstcw
adc
hlt
add
add
fldenv
inc
xchg
mov
adc
cwtl
or
or
enter
xor
leave
test
in
xchg
into
shlb
jle
dec
mov
lods
cmp
cld
loopne
loope
push
and
arpl
aaa
lods
arpl
mov
enter
paddsw
xor
push
insb
mov
mov
stc
xchg
ret
cmp
aam
xchg
push
stos
pop
xor
xchg
push
repz
sub
mov
push
mov
cmp
sbb
cmpl
jnp
or
and
repnz
jnp
repnz
int3
mov
inc
inc
shrl
adcl
in
iret
lock
pop
dec
les
jg
outsb
sbb
or
pusha
in
xor
dec
sbb
sub
dec
adc
out
and
push
or
cmpsb
jb
movsl
cmc
cltd
nop
lea
les
insb
call
cmpsl
jg
aas
sub
cli
jo
test
lcall
aam
cmp
loopne
inc
mov
sahf
insl
int
inc
cmpsb
cmp
imulb
mov
push
js
cmp
dec
add
loop
jge
mov
xchg
add
js
dec
in
imul
and
lea
data16
mov
xlat
fnclex
stos
mov
inc
ds
pop
xchg
dec
sbb
int
imul
xchg
xchg
ja
scas
mov
mov
or
cmp
test
sbb
out
dec
pop
xor
repnz
jmpw
movsb
inc
fldcw
aam
or
add
mov
aam
imul
jb
mov
and
stos
rolb
xchg
adc
mov
sub
sbb
iret
sarb
aam
enter
test
dec
ljmp
xchg
ja
ret
push
mov
es
in
cli
mov
push
mov
push
xchg
push
lret
cmp
mov
leave
pop
cmpsl
pop
adc
sbb
movsl
cmp
jbe
push
popf
into
sub
xchg
loopne
bnd
mov
sbb
pop
jae
loopne
push
xlat
xlat
xor
and
call
pushf
leave
sbb
jg
ret
sub
xor
inc
rol
pop
ror
jge
inc
popa
stc
push
imul
insl
sbb
adc
fsts
sbbl
outsl
jge
mov
cmp
rclb
lea
movaps
xchg
cmp
pop
push
or
adc
jbe
push
jl
dec
pop
test
pop
jnp
shll
arpl
movsl
xorl
in
aam
pushl
aaa
sbb
pop
popa
call
outsl
hlt
jmp
or
push
adc
jno,pn
clc
enter
lret
add
mov
pop
lds
shl
xor
dec
pushf
push
inc
push
pop
xor
xor
aaa
or
sub
mov
pop
ss
cmc
fsts
adc
insb
aas
rorl
daa
mov
addr16
xchg
idivl
xchg
pop
pop
mov
test
mov
int3
ljmp
push
lods
adc
lcall
push
or
test
push
cmp
sti
test
js
bound
arpl
pop
pop
icebp
adc
idivb
cmp
sub
push
cmp
cmp
and
cli
jb
test
icebp
dec
push
cmp
mov
pop
test
lods
mov
adc
hlt
cmp
ds
sbb
inc
adc
into
sbb
fs
scas
mov
mov
jb
das
mov
xor
xchg
test
js
arpl
repz
cmpsb
sbbb
add
popf
and
xchg
es
scas
popf
out
lahf
push
addl
or
gs
xor
out
mov
sbb
xchg
adc
push
sbb
lock
scas
scas
les
xchg
lahf
mul
cmc
mov
sbb
push
cmc
xchg
fisubs
lock
int3
nop
xor
pop
clc
loopne
in
xor
mov
enter
cmpsl
sbb
pop
and
inc
pop
bound
adcl
into
mov
mov
mov
pop
mov
sub
or
sub
movsl
adc
cmp
sbb
ret
inc
adc
fadds
mov
insb
xor
shl
sar
xchg
fbld
jno
add
adc
loopne
lods
inc
cld
stos
and
push
repz
lods
inc
xor
cwtl
mov
ss
nop
mov
jg
mov
jl
rol
push
sbb
adc
sbb
sbbb
fildl
les
cwtl
adc
arpl
gs
mov
push
add
lret
adc
ljmp
inc
test
jge
jbe
jae
push
pop
loope
les
cmpb
nop
push
jno
jns
icebp
popa
inc
mov
les
mov
xchg
cmp
jle
adc
add
push
adc
movsl
xor
push
add
jno
js
sbb
jae
push
in
pop
std
mov
and
cld
mov
fmuls
test
xorb
adc
jnp
in
std
add
inc
xlat
xchg
out
pusha
sub
pop
or
pop
js
jnp
loope
cld
pop
ds
stc
mov
sub
lds
sbb
push
or
jbe
scas
ficomps
mov
mov
xor
xor
mov
jle
es
jl
xchg
inc
sbb
shlb
in
in
fsubp
jge,pn
adc
sub
addr16
cli
xor
xor
loope
loopne
inc
lahf
jae
movsb
bound
shrb
xchg
inc
stc
xor
test
mov
stos
cs
cs
popf
jo
mov
or
js
lret
ja
in
ret
mov
add
outsb
pop
fimull
sti
ret
fimull
cli
xchg
adc
test
xchg
adc
xchg
pushf
hlt
mov
out
lea
push
jae
es
push
outsb
xchg
ret
in
dec
push
adc
fcoms
push
mov
mov
sti
ret
cmpsl
icebp
pop
or
rol
push
and
adc
rcrb
adcb
push
and
jmp
add
fs
js
inc
xor
adc
add
cmp
insb
mov
test
mov
inc
pop
es
cmpsl
test
sarb
dec
insl
sub
pop
sbb
cmp
cmp
pop
push
and
sti
sub
gs
xlat
inc
insb
je
jo
test
lock
test
cltd
sbb
mov
xchg
fisubl
push
movsb
inc
xchg
adc
dec
xor
push
mov
or
out
push
inc
inc
or
movsb
sub
mov
cli
fs
jb
sbb
xor
lods
hlt
mov
test
bound
enter
and
stc
es
test
xchg
pop
mov
adc
cltd
lret
aaa
lret
push
and
aad
imul
mov
pop
fsubr
repz
xor
adc
jg
mov
repnz
out
inc
jbe,pn
bound
int3
dec
or
sbb
cs
pop
adc
sub
inc
aam
mov
adc
rcrb
stc
cmp
sbb
mov
out
cmc
lcall
gs
sub
mov
xchg
inc
loop
adc
loop
push
add
in
je
lods
in
xor
mov
mov
decl
je
mov
mov
add
scas
loope
ficoms
fmuls
loopne
mov
pop
xchg
push
inc
mov
pop
sbb
sub
bound
js
mov
sub
mov
clc
sub
shll
sarb
fmull
inc
jg
xchg
sub
popa
cmp
fsubrs
je
cmp
mov
dec
xchg
test
pop
pop
rorb
pop
pop
push
mov
lods
xchg
es
jmp
or
aam
add
out
push
arpl
add
push
cmp
xchg
roll
mov
test
stc
xchg
mov
call
inc
xor
add
sub
add
xor
lods
xor
aaa
jnp
cmc
push
or
xor
in
and
inc
push
pop
repz
adc
data16
lret
test
mov
jbe
mov
lods
jbe
jmp
stos
cmpsb
add
pop
cmpsb
push
jne
mov
pop
test
mov
daa
shl
pushw
je
inc
push
mov
aad
adc
jb
hlt
repz
ljmp
pop
mov
rclb
sti
cld
cmp
lret
inc
xchg
cmp
out
insl
imul
or
xor
imul
idiv
cmp
and
add
add
aam
cmp
inc
out
aaa
jp
mov
ret
test
test
adc
es
sbb
pop
push
sahf
sbb
movsl
pop
sub
cs
mov
adc
sarl
push
push
popa
fistpll
and
add
add
and
sbb
shl
lock
cmc
hlt
add
push
call
sub
mov
pop
das
or
sbb
and
pop
mov
imul
lea
cmp
int3
fadds
jmp
xchg
push
xor
sbb
outsb
mov
dec
sbb
les
es
movsl
sbb
inc
faddl
in
cmp
jnp
clc
add
mov
lcall
fucomi
push
sbb
xchg
in
inc
xor
or
xchg
cmp
jae
and
mov
cmp
fldlg2
cltd
shrb
jb
jge
cltd
test
pop
sti
push
sti
bnd
dec
pop
xor
aaa
sub
das
insl
adc
cmp
xor
or
insb
adc
or
loop
jecxz
popa
stc
push
or
jmp
or
popf
adc
das
adc
aad
rorb
cltd
jbe
dec
scas
mov
shrl
imull
lcall
fwait
jge
push
pop
cmp
add
jle
test
jbe
and
push
xor
push
shl
add
and
into
aaa
jmp
push
jp
movsl
inc
fcom
xor
movsl
imul
jae
out
xchg
push
inc
sahf
fcmovnu
cmp
mov
dec
pop
lock
xchg
movq
add
out
xchg
daa
enter
nop
sbb
adc
jmp
push
dec
adc
in
clc
inc
mov
and
or
insl
xchg
stos
adc
mov
mov
add
cmpb
iret
dec
jecxz
or
insl
mov
scas
mov
test
mov
es
addr16
dec
rorl
ss
push
mov
mov
xchg
into
jge
movsb
or
xchg
ds
sti
inc
dec
dec
xor
mov
jge
mov
mov
mov
jge
lods
loopne
mov
add
dec
ret
jns
xor
xor
popa
inc
jmp
xchg
jge
mov
mov
clc
add
mov
jl
pop
inc
push
xor
popl
dec
inc
outsl
daa
cmpsl
xlat
inc
mov
scas
mov
mov
mov
inc
jns
ret
ljmp
sub
mov
cmp
xor
inc
shll
mov
add
cwtl
data16
push
in
cmpsl
loope
adc
mov
sbb
adcb
cli
sub
xchg
push
mov
sbb
ljmp
xor
aas
push
xchg
mov
dec
mov
addl
mov
loope
xchg
xlat
mov
subl
inc
pushf
xchg
pop
pop
subl
and
mov
or
cmpsb
xchg
jecxz
test
scas
lds
pop
dec
ljmp
jge
sbb
cmpsl
adc
sub
lcall
jl
cmpsl
in
sub
xorb
mov
cwtl
mov
xchg
enter
inc
mov
jb
ret
mov
xor
fists
ja
cltd
xchg
arpl
cmp
pushf
dec
cmp
jmp
adc
fisubl
lret
or
dec
or
loopne
or
imul
adc
mov
inc
aam
sbb
lods
nop
mov
or
push
sub
jns
jnp
aam
adc
insl
sbb
mov
movsl
aas
fldenv
inc
add
ret
sub
xor
in
dec
mov
imull
hlt
xor
or
lods
gs
dec
jo
pop
ret
int
roll
mov
cmp
cmp
jb
inc
xor
pop
and
lods
xchg
xchg
sarl
ret
sti
inc
xchg
into
xor
outsl
cmp
pop
lods
dec
mov
out
in
imul
pop
inc
mov
loop
aaa
push
sub
sub
sub
sub
mov
out
fwait
subl
daa
nop
mov
je
movsl
ret
mov
in
in
mov
pop
imul
xor
ss
repz
xchg
loop
fstl
or
enter
mov
outsb
or
aam
pusha
shl
mov
sub
inc
sbb
sbb
push
jb
or
mov
and
xchg
sub
movsl
fistps
dec
fwait
jbe
add
cmp
or
movsl
cwtl
fs
pop
add
inc
fs
outsb
pop
add
sbb
sub
aaa
ror
mov
push
push
xchg
test
lahf
js
out
push
push
mov
xor
scas
dec
pop
pop
mov
out
push
sbb
cli
mov
dec
pop
cmp
and
cmpsb
adc
and
mov
mov
cli
fwait
adc
or
insl
jle
shr
inc
jb
and
fwait
pop
inc
aaa
orb
mulb
sbb
xchg
test
mov
add
or
shll
popa
mov
test
in
scas
or
cmp
or
cmp
aas
mov
or
ret
adc
push
mov
ss
int
cwtl
enter
jae
adc
loope
test
mov
test
mov
ss
pop
and
iret
stos
inc
icebp
adc
imul
ja
mov
jl
sbb
setl
xchg
out
aad
jg
and
icebp
and
testb
xchg
addl
loopne
outsl
out
mov
filds
push
sti
lahf
daa
jl
mov
pop
mov
push
mov
add
dec
pop
and
pop
mov
or
push
addr16
jnp
push
rorb
jne
lret
push
aad
addb
sub
int
push
adc
push
orl
jge
lea
int
and
stos
pop
mov
adc
mov
stos
shrb
push
orl
dec
or
out
arpl
testb
pop
gs
push
shll
fildl
stos
cmp
push
xchg
and
jo
mov
mov
loop
sahf
jnp
hlt
mov
std
pop
mov
test
repnz
mov
and
cmpb
or
dec
mov
out
jns
jle
movsb
push
lods
mov
jnp
into
or
into
jb
pop
lahf
test
lret
add
xor
loop
xlat
mov
jno
sbb
mov
xchg
outsb
inc
outsb
cwtl
sarl
sub
inc
lea
addr16
pusha
rcl
test
out
push
cmpsb
dec
mov
sbb
and
movsb
push
pop
cmpb
cltd
push
mull
add
scas
push
ret
clc
repnz
mov
lahf
mov
iret
sub
fadd
loopne
addr16
stos
pop
arpl
mov
mov
push
pop
mov
inc
insb
inc
pop
aaa
imulb
mov
mov
das
sti
enter
mov
sbb
pushf
repnz
pop
sub
inc
cmc
mov
or
xchg
jo
mov
xchg
popf
mov
call
mov
mov
out
fists
fisttpl
jae
subb
add
aam
gs
enter
cmp
mov
dec
jmp
loope
std
xor
and
xchg
xor
or
sar
sbb
jge
loop
cli
jg
lret
lea
bound
sbb
mov
mov
popf
loope
jb
jno
lods
ja
cmp
pop
insb
data16
shl
pop
mov
push
cmpsb
hlt
popa
lahf
xchg
dec
mov
lret
scas
daa
jnp
pop
push
push
inc
lods
inc
je
push
sub
imul
ss
fidivl
sbb
mov
aas
and
push
xchg
mov
ja
nop
aaa
and
lds
and
jecxz
mov
add
adc
fsubrs
test
or
leave
adc
mov
aas
push
jo
mov
mov
stos
cmp
ret
jne
xchg
lds
jle,pn
adc
push
es
ret
pop
clc
loop
sbb
mov
add
cli
pop
and
pop
add
sub
mov
sahf
rcll
mov
mov
sub
pop
jl
mov
push
cltd
mov
xor
popf
and
sub
dec
inc
or
sub
mov
dec
test
sub
les
push
pop
int3
jbe
sbb
mov
mov
repnz
xchg
jge
sbb
int3
test
push
cmp
movl
and
cmpsb
inc
mov
mov
xchg
cli
push
or
add
sub
pop
sbb
fdivrs
inc
mov
stc
xchg
cmp
add
cmp
push
fwait
in
mov
scas
pop
or
loope
iret
outsb
xchg
xchg
fmul
xor
enter
cmp
and
mov
data16
clc
dec
jnp
mov
imul
out
mov
imul
or
in
pop
enter
popa
movsl
mov
rcrl
mov
lret
mov
lods
lock
arpl
push
fiaddl
dec
mov
jge
sbb
cwtl
push
hlt
xor
inc
cmpsb
fildl
pushf
loopne
mov
imul
sahf
xor
and
xor
das
xchg
mov
idivl
sahf
cmp
sarl
out
mov
ret
movsb
leave
sahf
fscale
femms
mov
sub
fsubrl
mov
inc
call
test
inc
push
fwait
inc
vpcmpgtd
xchg
fbstp
icebp
mov
data16
out
mov
rolb
or
cmp
mov
pop
ljmp
out
adc
pop
sub
loop
or
cmp
sarb
mov
xor
inc
mov
xor
jecxz
push
loopne
adc
scas
pop
xchg
stc
ja
and
dec
mov
lds
int3
push
test
sub
pusha
cld
mov
rorb
sbb
outsl
xor
out
sbb
adc
loope
lret
push
and
in
lock
xlat
xor
ja
jmp
push
dec
pop
ja
pop
add
out
pushf
rolb
imul
aad
cmp
hlt
repz
fcompl
mov
add
stos
sbb
lods
mov
mov
aas
test
sarb
lret
scas
push
stc
and
push
je
adc
and
jns
rcrl
aas
add
mov
push
add
xor
int3
mov
gs
ljmp
mov
dec
stos
hlt
mov
sub
in
test
mov
and
ficompl
test
push
push
test
sub
rclb
std
mov
push
test
rorb
jmp
in
sarl
lock
fisubl
push
lods
cmpsl
mov
pop
mov
loope
xchg
add
ljmp
lock
hlt
cmp
lahf
xchg
push
call
mov
adc
adc
bsr
fstpl
sub
cld
sbbl
mov
rorw
push
insl
scas
inc
dec
rcr
dec
fiadds
adc
stos
and
pandn
shrb
out
ficoms
cmp
popf
addr16
jp
std
xchg
sub
fadds
xchg
ficomps
and
aam
imulb
das
push
inc
xchg
inc
pusha
mov
gs
pop
es
xchg
and
int
push
and
mov
insb
test
rolb
adc
adc
fwait
test
dec
sub
sub
jmp
das
aad
test
dec
loopne
and
jns
jmp
mov
and
mov
xchg
cmp
imul
enter
inc
push
inc
scas
addb
jbe
push
mov
dec
test
imul
pusha
mov
imul
outsl
std
pop
xor
call
insl
fs
shlb
lock
xor
push
scas
sub
movb
mov
fsubs
push
jge
pusha
sbb
aas
aam
sub
xchg
addr16
fs
subb
adc
pop
mov
or
fists
inc
mov
out
xor
push
inc
pop
out
roll
clc
cmp
insb
xor
out
aaa
jae
pop
adc
les
les
notl
sarl
outsb
sbb
xlat
pop
imul
xor
aas
inc
sbb
sub
dec
mov
dec
pushf
mov
scas
rcr
jmp
and
cli
ffree
push
xchg
push
fcomp
clc
push
jp
sbb
jbe
sbb
js
lock
add
into
or
in
pop
xor
filds
mov
add
aad
jmp
bound
push
push
test
mov
sbb
shrl
aas
aad
add
jae
insl
sub
icebp
out
movb
mov
sbb
sbb
sub
jg
inc
test
cvtdq2ps
inc
ss
iret
aaa
movsb
jno
repnz
fidivrl
mov
xchg
imul
psadbw
add
lret
outsb
add
fiaddl
addl
inc
jo
dec
aad
data16
outsb
sub
loop
mov
sbb
sub
add
or
xlat
leave
cmp
xor
adc
std
add
cld
lea
rolb
sub
push
aas
sub
xor
adc
fidivrs
dec
xchg
outsl
mov
push
xchg
push
icebp
xchg
inc
jmp
mov
and
sahf
sbb
cmpsl
mov
outsb
inc
sub
stos
out
jg
jo
jmp
inc
jns
not
add
int
jp
mov
jle
loopne
push
adcb
frndint
fwait
or
xor
pop
push
dec
sbb
aas
pop
cmp
jb
jne
aas
jb
xchg
js
cmp
add
jmp
sub
jno
adc
xor
xchg
adc
ds
dec
mov
xchg
pop
xchg
fnstcw
dec
xchg
mov
iret
sbb
mov
jne
aas
dec
cld
fxch
adc
xor
sti
ja
lret
and
dec
cmp
adc
sbb
or
xchg
sub
shlb
lea
jmp
rorl
jb
ja
test
jle
push
popf
lahf
push
cld
jle
loope
arpl
outsb
mov
fistl
jmp
addr16
je
das
in
xchg
lret
testb
push
fisubs
mov
pusha
cld
add
xchg
dec
cmp
subb
bnd
mov
aaa
repnz
xchg
sub
jbe
test
fcoml
mov
sahf
pop
fldl
jb
stc
mov
fbstp
lcall
dec
fcomps
test
mov
loop
adc
dec
sbb
cltd
mov
lods
testb
mov
fnsave
pop
clc
jae
lock
gs
add
lds
int3
xchg
int
inc
pop
mov
out
pop
in
push
movsb
jp
into
idiv
lcall
shrl
sti
negl
or
xchg
rcll
dec
xchg
mov
lcall
mov
in
add
ljmp
pop
jo
test
out
test
sub
stos
into
xchg
inc
push
inc
push
adc
sbb
lods
or
lock
push
mov
outsb
out
adc
sub
lcall
ljmp
xor
adc
sub
imul
mov
xchg
gs
mul
sti
cwtl
enter
cwtl
mov
mov
mov
adc
mov
xchg
ficomps
cwtl
ds
inc
dec
add
push
pop
dec
enter
dec
pop
jl
push
mov
pop
add
push
repnz
imul
pop
mov
jo
inc
test
mov
adc
inc
xor
ret
adc
dec
jle
jno
jecxz
dec
cltd
sub
popf
xchg
imul
sbb
cld
dec
data16
mov
push
repnz
movsb
mov
inc
rorl
lret
gs
cmpsl
repz
je
adc
movsb
lods
lods
sbb
cltd
cwtl
lods
loop
movsl
aam
aad
jg
fucomip
mov
adc
pop
sbb
sbb
in
sub
dec
sub
mov
ljmp
scas
fistps
inc
mov
xor
push
mov
push
test
fidivrs
cmp
neg
mov
adc
sbb
stc
mov
xor
out
fidivs
jl
sbb
es
sti
cmp
xchg
arpl
xorb
cmp
add
lds
js
sbbl
pop
jl
pop
pop
sbb
ss
pop
aaa
push
mov
and
and
pop
repnz
sbb
sub
sbb
std
loop
cmp
out
cmp
dec
cmp
into
mov
xchg
mov
test
sub
pushf
sbb
loope
jnp
push
cmp
in
int3
lret
lock
in
add
pop
aad
inc
ljmp
je
push
pushf
icebp
sbb
xchg
rcl
cmp
je
xchg
out
push
or
es
stc
push
lcall
mov
into
mov
imul
inc
pushf
mov
sbb
ja
mov
std
sbb
sub
dec
fmull
clc
sti
mov
ja
movsl
push
xchg
xchg
cmc
xchg
gs
mov
cmp
imull
movsl
xor
xchg
movb
addr16
out
pop
fs
das
pop
xchg
and
mov
jg
sahf
mov
jbe
sbb
mov
ja
sub
outsb
lods
nop
imul
xor
jo
jne,pn
adc
movsb
push
xchg
dec
pop
xor
es
add
loopne
out
mov
inc
pop
gs
ret
and
mov
es
or
fistl
popf
sbb
sub
jmp
call
pop
fnclex
ror
in
outsl
inc
pop
call
dec
sub
loop
inc
in
stc
pop
andb
out
clc
mov
dec
aad
fstl
mov
pop
add
lock
xor
orb
xchg
negb
push
bound
insl
sbb
mov
imul
push
xor
sbb
mov
fs
cmp
adc
scas
into
cmp
pop
sti
or
orb
shr
add
addb
mov
cli
enter
cmp
or
gs
test
fmull
dec
fcomip
or
jae
fcmove
inc
sub
push
sub
popf
sbb
push
daa
test
test
cmp
jbe
nop
test
push
in
lcall
rcrb
dec
js
adc
scas
xchg
mov
mov
sbb
clc
cs
enter
in
cld
jbe
in
mov
push
and
pmaxub
sub
push
xor
adc
cmp
jbe
xchg
sub
xorl
in
and
xchg
or
pop
imul
pop
scas
inc
fisubrl
or
or
out
icebp
jbe
packsswb
loope
cltd
lret
xor
jge
lock
es
popf
mov
adc
inc
push
cmc
add
cwtl
pusha
mov
test
lds
adc
mov
jnp
ret
xor
bound
or
cwtl
adc
aad
scas
pop
xchg
adc
sbb
divb
lods
and
mov
leave
push
xchg
lret
pop
sbb
or
js
data16
push
push
and
sbb
in
mov
jmp
insl
sbb
inc
aaa
dec
add
jg
dec
addr16
jae
or
addr16
int
cmpsb
repnz
sbb
mov
aam
push
xchg
stos
out
adc
into
mov
jg
xor
pop
popf
cwtl
arpl
lods
aad
push
sbb
andl
sarl
pop
mov
iret
sbb
aaa
push
mov
gs
aas
mov
xchg
test
orb
xor
mov
hlt
fistpl
add
push
sti
imul
pop
ljmp
inc
dec
sub
or
repz
fidivl
mov
pop
loope
adc
mov
cs
pop
push
sub
adc
ljmp
mov
dec
iret
testb
orb
xchg
jnp
loopne
sbb
js
add
rcrb
add
and
jbe
outsl
jmp
adc
adc
jecxz
add
xchg
inc
dec
sub
dec
xor
or
cmp
mov
sub
inc
repnz
mov
into
jbe
cmp
ret
jmp
fdivp
popf
loop
mov
call
imul
fsubr
add
push
push
outsb
jae
cmp
xor
xor
js
adc
mov
sub
cmpsl
add
popf
sub
repnz
shl
push
jmp
cltd
imul
jecxz
and
push
xchg
scas
xor
dec
nop
pop
sar
pop
inc
xchg
lds
pop
adc
incl
pop
push
add
stc
push
push
shlb
aam
xor
jmp
pop
jbe
fcomp
lahf
push
aas
dec
sahf
ja
mov
ret
sbb
aam
xchg
mov
mov
push
ja
insb
gs
push
test
and
add
add
out
mov
aaa
dec
hlt
add
jo
aam
push
xor
dec
push
pop
lahf
cmpsb
movsb
jnp
xchg
lods
push
fnstenv
lock
push
adc
sbb
and
push
cmp
ja
sub
cmp
and
out
mov
inc
in
push
mov
lahf
pop
and
sbb
lds
mov
inc
or
inc
movsl
add
mov
sub
mov
push
jecxz
xor
imul
imul
mov
inc
aam
lret
pop
mov
adc
push
mov
add
cmp
aam
mov
in
push
mov
rcrl
addr16
jl
xchg
mov
sbb
sbbl
or
cwtl
jl
sahf
out
ret
mov
or
enter
cld
mov
in
push
xchg
or
shll
stos
mov
in
mov
dec
popf
pop
in
ja
adc
std
xor
in
jl
aas
mov
lcall
xchg
mulb
xchg
sub
mov
sbb
lds
push
mulb
dec
loop
mov
inc
xchg
out
xlat
push
in
hlt
xchg
dec
decb
push
imul
data16
movsb
cmp
mov
mov
mov
rcr
outsl
shl
sbb
ret
jbe
sahf
hlt
push
xor
test
shl
xor
out
imul
push
cmpsb
shrb
in
mov
pop
mov
aaa
cmp
outsb
mov
rolb
xor
jmp
les
inc
aad
ds
loope
dec
mov
or
jmp
cs
hlt
call
xchg
add
mov
jmp
testb
stos
aam
jmp
and
push
mov
xchg
inc
xlat
scas
dec
test
ss
orl
mov
push
cmpsb
call
shr
cmpsl
fdivrs
ror
arpl
cmp
sbb
aas
dec
sub
addr16
data16
inc
fcoml
mov
loopne
mov
cmpsb
push
jo
cmc
jae
cld
mov
jo
cwtl
cmp
lods
jle
in
loope
loop
jne
bound
das
loop
dec
fwait
lds
arpl
xchg
adc
mov
out
pushf
and
dec
aad
dec
mov
push
fidivrl
dec
loopne
xchg
and
fstpl
ja
lahf
pop
xchg
lock
sub
test
loope
rolb
fwait
mov
fisubs
pop
out
sbb
gs
dec
lahf
add
clc
ja
in
pop
sub
outsl
clc
lcall
dec
xchg
stos
loope
fistl
enter
push
push
roll
pop
sbb
lock
cmp
enter
ja
mov
adc
mov
stos
or
insl
ret
je
cmpsl
in
daa
pop
mov
rcl
push
mov
dec
addr16
jmp
mov
shlb
shrb
jp
mov
xor
imul
sahf
jnp
pop
mov
cmp
add
mov
add
jg
shlb
pop
mov
lcall
aam
daa
xor
cli
aam
jle
lahf
cmp
stos
adc
xchg
mov
es
int3
inc
into
fs
fwait
es
inc
js
dec
add
int3
cmc
sbb
out
je
push
sub
les
mov
or
mov
movsl
data16
into
es
adc
imul
cmpsb
loope
adc
add
addr16
push
les
and
xor
or
aas
lcall
pop
aam
inc
push
mov
xchg
pop
fstl
loopne
mov
xchg
hlt
test
sbbl
cmpsl
jbe
push
movsl
mov
stos
sbb
inc
and
push
test
test
clc
and
dec
add
pop
adc
sahf
sti
cwtl
addr16
repz
add
outsb
sub
pop
int
cli
or
mov
divb
scas
addr16
xchg
gs
mov
aam
mov
add
jnp
fdivrl
mov
fsincos
xor
loopne
cs
xchg
dec
aam
add
cmp
dec
inc
and
in
incb
repz
movsl
mov
push
sbb
lahf
xchg
clc
stos
ja
arpl
xchg
mov
aaa
xor
mov
mov
lock
mov
movsb
jp
pop
lods
push
xchg
jb
mov
ret
cmp
sbb
jge
pop
xor
and
xor
test
push
adc
iret
push
fs
pop
inc
lret
inc
cld
rcrb
xor
imul
dec
insl
and
out
repnz
sub
mov
push
mov
or
lods
and
in
inc
pusha
pop
dec
call
nop
inc
xchg
push
roll
push
idiv
iret
cmpb
cmp
mov
jmp
lret
pushf
add
sub
das
xor
outsl
sub
dec
paddsb
mov
data16
mov
adc
add
push
jae,pn
insl
mov
cmp
test
jp
loope
dec
jbe
pushl
dec
fcmovne
sahf
shlb
push
in
shlb
inc
push
out
les
cwtl
inc
aas
leave
cltd
jmp
and
ljmp
add
les
loopne
mov
cmp
into
cmp
sbb
jns
arpl
lret
and
movsl
or
adc
cs
arpl
add
lods
add
pushf
daa
adc
sbb
xor
outsl
sub
test
out
rorl
cmp
jmp
pop
fwait
add
and
stc
popf
ret
ret
add
es
adc
xchg
cli
int
sub
inc
xchg
jmp
ret
sbb
xor
dec
pop
sbb
add
das
cmp
dec
shlb
jecxz
cwtl
mov
mov
in
gs
lds
pop
cmp
adc
add
push
cmc
pop
add
jo
cmp
jnp
cmpsb
repnz
xchg
cmpsb
ja
or
lea
or
mov
sub
addr16
add
loop
xchg
int
push
arpl
es
inc
mov
pop
je
in
fwait
imul
inc
dec
jb
cli
pushf
cmc
mov
int3
inc
mov
cs
sahf
in
mov
push
nop
sahf
jo
jecxz
xchg
mov
xchg
stc
add
adc
arpl
jp
lret
iret
sub
movsb
pop
daa
pop
rcrb
int
das
ret
jno
stos
jo
xchg
fldenv
sti
mov
std
jb
add
fcoms
and
sbb
inc
repz
and
jge
in
or
imul
lret
call
adc
sub
mov
lea
adc
addr16
dec
ds
subb
jbe
ror
movsb
jmp
fs
mov
stc
mov
repnz
mov
add
add
cmp
insl
test
sub
mov
push
push
push
arpl
cmp
and
js
call
add
shlb
pushf
xor
jo
lret
loope
adc
or
jb
js
je
push
lea
sbb
adc
fidivl
insb
adc
dec
mov
mov
adc
out
bound
ret
jmp
subb
fs
dec
push
mov
dec
inc
jmp
sub
mov
or
jne
fidivrl
int3
jb
jbe
ss
push
stos
orb
pop
xor
dec
sub
fcompl
loop
fistps
rorb
adc
in
cmp
jg
orb
cmpsb
enter
mov
jecxz
adc
hlt
lahf
inc
xchg
push
movsl
mov
icebp
adc
add
xchg
jle
mov
out
int3
push
adc
dec
xchg
sub
adcb
daa
cli
add
out
adc
adc
push
negb
pushf
icebp
in
stos
xchg
push
or
ret
ljmp
mov
push
cmp
dec
push
mov
sub
mov
clc
add
lock
leave
pop
shl
dec
inc
dec
cli
addr16
in
jo
cwtl
cmp
jbe
cli
xlat
jnp
mov
dec
lahf
aas
sahf
sbb
xlat
fbld
mov
ss
inc
ds
and
les
inc
add
pop
dec
pop
cli
jbe
and
or
inc
or
jnp
cmpsb
pop
pusha
hlt
fidivs
stc
popf
cwtl
adc
daa
pop
lods
jno
lea
jle
xchg
dec
inc
dec
jns
les
repnz
or
sarb
popf
or
adc
inc
in
pop
cmpsb
xor
and
inc
sub
fsubrl
out
lahf
stos
imul
jmp
pusha
dec
cmc
xor
popf
sbb
sub
test
xor
and
imul
dec
xor
add
pop
sub
mov
cmpsb
clc
xchg
scas
lods
notl
outsl
mov
dec
es
cmpsb
lret
mov
or
dec
or
jne
arpl
lcall
push
sub
leave
xchg
cmp
jne
mov
mov
shl
js
aam
inc
int3
pop
int
fstps
mov
jno
jle
sbb
jbe
cltd
jb
scas
scas
mov
icebp
js
mov
test
sbb
push
adc
mov
imul
and
or
shrl
jns,pt
sbb
sbb
out
mov
ficoml
lods
or
fwait
inc
clc
mov
scas
jl
jecxz
repz
rcr
sbb
push
lds
mov
pop
pop
push
cmp
lock
cltd
xchg
xchg
xchg
fwait
cld
cmp
out
cmp
xor
add
shl
rcr
int
leave
orb
scas
xor
mov
icebp
imul
in
mov
incb
cld
push
sti
jg
bound
pop
add
fsubrl
mov
outsl
imul
sub
mov
jb
or
sub
sub
movsl
pop
cmp
test
lahf
xor
testb
int3
and
jae
pop
mov
mov
inc
and
rorl
clc
sbb
rolb
dec
sarb
xchg
push
mov
arpl
daa
sbb
pop
fmulp
pop
test
shll
cltd
shlb
imul
sbb
push
mov
xchg
inc
add
cmc
jae
fdivs
xchg
dec
jp
add
cwtl
push
adc
mov
cmp
movsb
push
loop
pop
or
lds
adc
pop
dec
decb
and
enter
test
add
out
shll
aad
aas
sbb
and
outsl
mov
aam
push
mov
pop
dec
xor
movsl
dec
push
jae
imul
xchg
fisubs
lahf
sub
out
and
roll
mov
repnz
lea
push
adc
mov
cmp
data16
inc
xchg
mov
test
push
test
repz
lret
sti
jnp
cmp
hlt
cmp
lods
sbb
and
stc
ss
jns
jbe
pusha
std
dec
mov
sub
push
pop
cpuid
add
cmp
adc
xor
in
inc
lret
mov
mov
xchg
jne
push
shll
subl
and
pusha
ret
int
push
and
lahf
and
add
and
insb
pop
xchg
bound
cld
jge
les
inc
aas
lock
imul
add
in
stos
dec
jo
test
ds
cvtps2pd
movsb
outsb
push
push
jge
cs
inc
add
mov
movl
jo
sub
fiaddl
inc
and
mov
out
sbb
mov
stos
scas
daa
shrb
mov
and
and
jno
push
shl
dec
sbb
stos
pop
push
add
insl
mov
jmp
fisubs
dec
int
xor
xchg
mov
in
cmpsb
and
imul
and
inc
pop
loop
bound
xchg
fs
push
lret
cmpsl
lret
lahf
jns
add
sub
sete
rolb
scas
inc
push
loop
fstl
sub
or
je
adc
push
xor
or
xchg
lods
or
xor
lock
movsb
in
push
sbb
jno
ret
lcall
outsb
scas
pop
femms
out
inc
lahf
and
and
pop
xor
mov
arpl
cmp
mov
cltd
push
cmp
xchg
popl
xor
mov
idivl
lahf
addb
mov
and
mov
adc
cld
fwait
push
mov
ucomiss
repnz
jmp
pop
aad
pushf
mov
adc
push
sub
fcoms
bound
in
xor
sub
in
mov
pushf
dec
dec
mov
test
xchg
mov
xchg
cmp
sbb
ficompl
or
std
lods
movsb
dec
movsl
je
push
jg
dec
movsl
xchg
repz
test
mov
cli
mov
jmp
je
cs
mov
call
fimuls
cmp
incb
in
and
sti
in
mov
lret
and
ds
loope
push
lret
mov
call
addl
bound
cld
mov
sti
mov
pop
push
sbb
stos
fs
push
or
sbb
mov
xor
push
xchg
mov
stos
adc
mov
idivl
sub
or
jnp
call
in
int
mov
cmpsb
jp
pusha
mov
test
int
mov
arpl
pop
or
push
sub
fcoms
jb
pop
add
adc
sub
out
inc
lahf
push
sahf
sbb
and
ja
mov
mov
fistpl
sub
adcl
add
ret
outsl
sub
mov
mov
pop
adc
lods
pop
adc
or
ss
fildll
negl
xlat
out
mov
mov
test
fnstsw
idivb
dec
mov
sbb
push
cwtl
sti
and
push
inc
cmpb
insb
push
jo
ror
fs
out
adc
mov
ret
icebp
mov
dec
jl
or
push
je
rorl
or
push
movb
add
dec
cmp
xlat
mov
lret
jp
mov
sar
mov
and
out
cmc
add
repz
inc
negl
inc
push
lahf
xchg
cmp
popf
pop
and
or
jae
repz
sbb
pop
aam
pop
mov
jecxz
outsl
pop
and
ret
out
or
fsubrs
rolb
stc
test
in
iret
lds
icebp
lds
std
jb
dec
push
cmp
xchg
inc
int
mov
sub
push
ret
clc
out
cmp
sub
out
inc
inc
cld
pop
dec
dec
fld1
mov
bound
push
push
dec
scas
add
arpl
mov
movsl
inc
dec
push
mov
or
data16
dec
iret
mov
mov
cmp
fwait
loop
fstl
test
cltd
clc
dec
inc
add
jne
dec
cli
push
lcall
jo
call
mov
popa
inc
mov
in
mov
push
shlb
ss
add
push
pop
or
sbb
adc
loope
xchg
xchg
jnp
xor
mov
test
pop
fdivs
dec
push
mov
pop
mov
andb
jecxz
mov
cmp
inc
ja
data16
stos
xor
jb
outsl
loop
push
lea
subl
xor
lods
inc
mov
test
add
shl
sub
mov
mov
fcoms
repnz
loope
and
aad
in
cmp
repnz
das
push
movsl
xchg
xchg
xor
mov
inc
in
stos
jne
and
inc
mov
or
call
popf
stos
inc
iret
adc
push
in
push
sbb
xor
out
cld
pop
lock
xchg
pop
push
pop
insb
or
jo
bound
push
mov
lods
orl
sbb
mov
sbb
sbb
fidivrl
mov
addr16
inc
jb
lea
stc
adc
stos
subb
adc
mov
scas
or
lcall
dec
jecxz
sbb
adc
out
push
push
jne
cmp
lock
insl
dec
rorb
dec
sbb
mov
adc
push
mov
inc
jl
push
mov
xor
and
ret
xlat
xchg
jne
pop
add
push
push
aaa
xor
add
add
aas
dec
lahf
les
or
mov
cmpsb
sbb
xchg
into
xchg
or
push
dec
mulb
mov
hlt
scas
add
mov
jmp
lahf
test
in
into
add
imul
repz
push
cli
inc
mov
lret
and
in
adc
jbe
fisubl
jg
push
ret
xchg
dec
jae
cmp
dec
in
popa
or
cmp
fdivrs
jp
js
pop
mov
mov
mov
dec
aad
and
in
cmp
and
shlb
rcrb
pop
sub
sub
sub
fldenv
pop
adc
or
sahf
mov
in
push
in
or
adc
shrl
mov
mov
adc
mov
enter
add
sbb
ljmp
stos
clc
dec
dec
push
cmpsb
rcl
outsb
js
arpl
sbb
lret
pop
jecxz
push
leave
adc
jp
aaa
adc
sbb
push
jbe
xchg
out
or
push
mov
jno
das
faddl
push
lods
dec
lahf
inc
arpl
mov
mov
sbb
mov
cmp
lods
mov
push
in
pop
mov
lret
enter
movsl
jns
fstpl
mov
adc
mov
dec
jmp
mov
cmp
sbb
pop
adc
mov
jg
inc
and
jmp
xchg
inc
pop
pusha
in
cmpsl
xchg
aad
pop
dec
xchg
pop
xchg
bound
sbb
mov
xor
sub
fdivr
fldl
cmp
std
aaa
or
and
outsb
jno
or
bound
pop
and
mov
add
xor
xchg
in
sbb
cmp
in
shrl
or
mov
xchg
aam
out
pop
add
push
aaa
mov
xor
test
pop
test
jecxz
jae
movsb
pop
mov
aaa
fbld
inc
mov
dec
sub
xor
int
test
mov
fiadds
cmc
inc
add
cmp
or
dec
inc
push
movsb
out
jae
mov
sbb
loope
xor
pop
pop
mov
and
imul
jl
push
test
inc
pcmpgtw
in
add
push
outsl
int3
das
xor
test
xor
fstps
mov
call
fnstsw
gs
into
mov
fstpl
mov
pop
ja
dec
stos
mov
pusha
mov
in
dec
hlt
clc
bound
adc
xchg
mov
test
or
pop
in
mov
scas
shrl
cmp
cwtl
test
sbb
mov
jno
xchg
sub
pusha
xrelease
int
mov
jmp
mov
push
mov
bound
and
xchg
mov
ud1
leave
sbb
xchg
mul
imul
sbb
push
mov
shll
shl
pop
inc
xchg
jbe
outsb
cmp
mov
in
enter
loop
ret
xchg
notl
cli
adc
stos
mov
and
pop
mov
aad
or
fcoms
mov
sti
pop
cmpsb
push
in
push
shr
jne
pop
cmp
aaa
and
test
lock
fmull
test
scas
lods
pusha
in
decb
mov
loope
push
xchg
test
dec
call
mov
add
jne
pusha
inc
push
or
push
popa
mov
orl
sti
insb
jb
es
dec
and
nop
xor
inc
aad
repnz
jecxz
lret
mov
lock
mov
xchg
out
lea
cwtl
andl
cmp
lahf
xchg
jp
loop
adc
out
cli
xchg
mov
push
lret
arpl
std
pop
jno
mov
inc
insb
push
add
popa
adcl
jle
or
fistps
das
cli
mov
imul
inc
cmp
je
inc
or
add
clc
xchg
mul
outsl
test
jne
push
js
dec
xlat
dec
mov
movsb
dec
in
pushf
adc
xor
mov
iret
adc
cli
out
pop
fs
inc
inc
inc
aad
out
adc
push
sahf
les
jle
cmp
pop
into
push
pop
mov
jbe
adc
dec
in
cmp
and
popa
out
shrb
mov
shlb
out
jb
rorl
mov
xchg
add
fwait
mov
xor
push
mov
ds
fbld
mov
jne
cmp
xchg
divl
fistps
daa
in
ss
lods
push
and
sbb
clc
adc
dec
arpl
les
adc
lods
jnp
jg
daa
pop
sbb
scas
jns
ret
fwait
sub
inc
mov
inc
push
cmpsb
sti
cs
rorb
adc
addb
ljmp
popf
out
test
mov
arpl
lods
mov
push
pop
das
jecxz
xor
xor
imull
dec
data16
fsts
es
pushf
jg
fistpl
repnz
sbb
xor
mov
in
inc
mov
stos
mov
iret
adc
jnp
xor
jmp
mov
xchg
or
in
stos
popf
out
adc
xor
mov
repnz
dec
sarb
add
jle
lret
inc
mov
pop
xor
addb
popa
fcoms
ss
jp
shrl
push
cli
out
mov
mov
in
mov
dec
sarb
jnp
cmc
xor
add
mov
inc
xchg
adc
insb
stos
pop
adc
bnd
sarl
fcmovne
neg
lock
aam
daa
fildl
aam
popf
and
das
or
mov
call
sbb
mov
xchg
scas
fsubrl
dec
sbb
fcmovb
out
leave
ret
mov
movsl
jg
pop
mov
cmpb
xchg
or
outsb
mov
dec
ret
mov
js
roll
dec
push
xchg
mov
outsl
sti
test
sub
std
cwtl
je
std
mov
jg
pop
sub
ficomps
jns
les
inc
mov
arpl
xor
sub
xlat
dec
push
popa
pop
sbb
mov
jge
lcall
jl
loopne
jns
jle
repnz
out
mov
loopne
xor
movsl
into
inc
out
add
sub
fidivrs
aam
hlt
mov
ja
mov
or
ja
xchg
ret
in
xchg
stos
jnp
and
cli
stos
xor
int
outsl
jne
push
dec
addr16
mov
and
and
xchg
dec
loopne
aaa
xacquire
aam
push
pop
or
sub
pop
fdivr
adc
fsubl
stos
sub
adc
lock
inc
push
cli
xor
sbb
cmc
fisttpl
dec
call
push
popa
xchg
aam
xchg
cmc
sti
xchg
mov
sub
ret
cltd
daa
subb
sti
arpl
cs
mov
iret
jge
pop
jmp
sti
decl
xor
pop
repz
or
sti
mov
in
dec
loop
sarb
jb
cmpsb
sahf
loop
inc
ret
jl
jecxz
stos
cli
jo
repz
shlb
sub
js
push
push
icebp
outsl
mov
mov
fs
dec
popl
xor
pop
ja
dec
es
xchg
adc
enter
loopne
pop
stc
int3
push
hlt
xor
inc
fidivrl
or
aad
lahf
or
inc
int
lods
xor
idivb
imul
mov
orb
int3
add
mov
jb
test
pushf
xor
repz
or
xchg
mov
insl
or
imul
daa
lock
mov
add
or
and
pop
pop
outsb
daa
imul
pop
in
outsl
mov
cwtl
add
dec
gs
cmpsl
push
faddl
or
iret
pop
pushf
xchg
push
movsb
xor
repz
xor
out
andb
push
int
loopew
cmovg
mov
mov
sub
test
int
int
ror
daa
add
mov
bound
sub
subl
push
imulb
pop
nop
or
cld
fstpt
sti
out
out
mov
in
testl
dec
mov
scas
push
mov
rcll
xchg
mov
arpl
add
sbb
sbb
test
subb
sbbl
jno
cli
cwtl
in
sub
mov
xlat
or
ret
push
jge
stc
mov
shl
adc
adc
es
fadds
negb
stos
xor
sbb
sbb
cmp
ret
iret
cli
gs
mov
push
rcll
sbb
add
or
or
fadds
adc
mov
das
les
xor
stc
popa
dec
fcoml
das
sbb
out
jne
mov
fcompl
adc
scas
inc
in
adc
mov
pushf
xor
mov
sub
push
out
fdivs
sbb
xlat
das
out
add
pop
js
push
outsl
sbb
push
clc
call
cmp
loopne
push
or
repz
xor
loopne
push
scas
inc
cmp
cmpsl
adc
jmp
sbb
nop
add
xor
fildl
jle
cmpsl
icebp
in
inc
mov
jg
lret
sbb
push
jb
jb
push
sbb
cmp
and
dec
test
xor
out
sahf
aas
imul
es
or
xor
jno,pn
subl
lods
ja
jmp
mov
ret
dec
cwtl
push
cmp
xor
dec
xchg
mov
fsubrl
adc
rolb
add
insl
out
lods
inc
mov
cmp
aad
pop
sub
test
xor
xlat
enter
punpckhwd
sub
dec
cs
pop
mov
ja
rcrb
out
or
dec
jo
les
sbb
shrb
sahf
xchg
das
sub
inc
add
sub
push
mov
daa
lret
and
dec
xchg
mov
aam
stos
mov
icebp
filds
add
sbb
aas
mov
nop
jg
inc
fs
xchg
pusha
int3
dec
cld
jns
xor
mov
cmp
cmp
in
shl
bound
cmp
pop
add
push
mov
mov
xor
lahf
leave
mov
es
mov
xchg
and
sub
mov
fs
ss
andb
cmp
mov
lds
push
mov
movsb
pop
fstpl
mov
cmp
cwtl
push
sub
cmp
xchg
pushf
and
inc
xor
add
out
xor
cmp
xor
test
insl
movsl
por
push
inc
xor
lods
idiv
jo
scas
push
ret
xchg
sbb
mov
sub
xchg
push
pop
cmp
shlb
xor
push
and
adc
mov
fdiv
mov
in
cmp
rcrl
mov
icebp
lds
pop
lods
out
jl
push
ret
inc
xor
mov
insb
push
lret
data16
in
popa
mov
shll
mov
aam
aaa
mov
int
addr16
fdivl
aam
jne
mov
mov
aam
push
mov
cli
mov
cmp
xchg
push
dec
cwtl
mov
inc
imulb
ret
push
nop
fidivl
clc
pop
adc
mov
insl
cmp
and
loop
dec
insl
lds
fistpl
inc
cli
cmpl
fstl
repnz
rcrb
into
pop
pop
mov
outsl
sub
aaa
sub
aam
mov
pop
nop
add
or
fcoms
es
xchg
sbb
sahf
test
inc
dec
mov
mov
xchg
pop
cwtl
cmpsl
push
xchg
pop
add
sbb
sahf
cmp
repnz
sbb
inc
arpl
test
sarl
fistps
sbb
scas
pop
xchg
int3
push
loope
aam
or
mov
push
cmp
movsb
mov
adc
into
ret
int3
add
fistl
aam
adc
lret
dec
xor
mov
stos
push
das
push
adc
lea
daa
jns
xor
rorl
ficoml
lods
add
and
es
add
pop
jg
mov
data16
pop
into
sub
ds
lods
inc
push
xchg
jae
in
je
pop
inc
cmp
mov
mov
fsubs
xlat
xchg
imul
jae
cmp
mov
scas
lahf
inc
mov
xchg
out
jl
repz
push
imul
scas
and
mov
sub
xor
aaa
and
jno
cmp
mov
sbb
xchg
test
jo
aaa
ja
lea
dec
sub
pop
jmp
dec
pop
rorb
adc
jae
cmpsb
mov
and
stos
pop
add
sub
xchg
dec
mov
out
pop
sub
sub
add
mov
xor
xchg
sbb
test
jno
lods
lods
cmp
hlt
adc
jmp
sub
mov
mov
dec
pop
adc
add
add
mov
mov
mov
popa
scas
cmp
icebp
sub
pop
sbb
in
ds
rcll
fmull
bound
mov
and
cltd
aad
scas
fstl
xorb
fisubs
push
ret
lea
clc
out
ret
out
addb
shrb
cmp
stc
xor
addr16
jns
add
inc
mov
cmpsb
xchg
inc
cmp
das
push
cmp
shlb
pop
add
jg
jns
mov
sbb
lcall
imul
mov
out
jno
xchg
add
ds
call
pop
mov
fadd
loopne
push
divb
inc
movsb
push
xchg
mov
push
les
lods
jae
in
popa
jns
popf
pop
scas
xchg
xchg
mov
outsl
imul
add
push
jb
push
mov
addl
lret
cwtl
sub
pop
mov
xor
insl
pop
or
in
add
subl
sbb
adc
imul
ffree
jne
test
aas
xchg
arpl
sbb
sbb
lcall
mov
adc
jnp
cs
or
hlt
cltd
fwait
or
jl
pop
mov
xor
lods
xor
or
add
mov
fcoml
dec
mov
push
ljmp
cmp
insb
cmp
inc
xchg
add
lahf
inc
add
lds
cmc
pusha
pop
jne
push
nop
or
sub
xchg
inc
or
dec
lret
dec
xor
fwait
mov
es
dec
das
push
dec
lock
xchg
xor
or
aad
xor
push
add
jb
sub
dec
add
dec
and
push
or
add
xchg
imul
call
movsb
lock
cwtl
icebp
cmp
push
andb
and
mov
icebp
xorb
or
out
stos
xchg
lret
add
aam
push
stos
xor
dec
ljmp
scas
push
inc
mov
icebp
inc
cli
adc
pop
and
lods
xor
add
mov
fistl
xlat
fimuls
mov
adcb
aas
int3
jp
adc
gs
adc
pop
mov
out
call
test
sub
movsb
adc
popa
mov
cmp
dec
test
enter
cmp
xlat
inc
leave
push
push
test
sbb
adc
xchg
sub
cmp
movsl
mov
pusha
fsubrl
fcomip
sub
jecxz
fs
fwait
xor
cli
xchg
inc
dec
xchg
fwait
jge
mov
push
or
div
pop
pusha
sub
or
jb
lds
adc
cmc
loop
stc
jno
cmpsb
jbe
jno
test
jmp
popa
jo
ds
or
shlb
jo
movsl
movsl
out
lock
push
in
xchg
adc
enter
ret
push
cmp
push
mov
xchg
sub
push
mov
sarb
mov
stc
shll
mov
xor
arpl
sti
xchg
shl
sbb
sti
jno
mov
cmp
xchg
xor
sub
xor
mov
pop
icebp
jl
js
xlat
scas
out
xor
sbb
dec
cld
loope
jmp
inc
xchg
mov
or
push
out
add
rolb
cld
rolb
dec
loope
jp
shrb
or
andb
mov
fnsave
or
sbb
pop
sbb
call
dec
std
pop
or
es
sub
es
sub
inc
pop
dec
jg
repz
cmc
cwtl
mov
pop
adc
cmp
add
or
mov
lcall
or
mov
lret
popa
jle
scas
aaa
cmpb
in
dec
dec
inc
mov
insl
cmp
stc
cwtl
pop
add
aad
add
jle
jmp
pop
pop
dec
arpl
int3
pop
pop
xchg
mov
setl
mov
aaa
lahf
clc
cmc
std
pop
xchg
or
inc
stos
mov
es
ss
jge
psrad
lods
sbb
or
mov
lds
data16
sub
xchg
and
adc
fnsave
mov
fucom
xchg
pop
xlat
push
jge
mov
stc
js
adc
insb
adc
mov
lods
data16
cltd
jns
das
add
rcr
pop
push
add
mov
insl
pop
loopne
push
pop
sbb
nop
popf
ret
int3
jbe
sub
inc
imul
out
rolb
jns
in
aam
aad
stc
ja
mov
mov
in
pusha
loope
xchg
adc
fimuls
aad
movsb
dec
mov
pop
mov
mov
dec
push
test
mov
xor
push
je
aam
xchg
ja
aam
cwtl
xor
jecxz
xor
xchg
insb
stos
lods
push
in
test
repz
cmp
in
push
or
jns
stc
lcall
mov
int
mov
sub
lock
jg
adc
enter
repnz
rcr
je
pop
addr16
sti
add
cmp
mov
sti
xchg
mov
orl
pop
xchg
insl
or
mov
dec
xor
gs
pushf
sbb
or
jns
pandn
jecxz
out
fsubrs
aam
test
out
cmpsl
fucomip
jae
xchg
ljmp
jl
stos
push
repz
fsubrs
lcall
inc
sub
das
push
clc
pusha
jb
das
ljmp
in
sub
or
fidivs
and
aaa
and
or
lods
and
and
sarl
jbe
test
mov
jb
dec
inc
and
adc
mov
sbb
cltd
out
dec
cmp
orl
push
dec
sub
and
das
and
push
mov
cmpsl
jecxz
adc
sti
sbbl
sbb
outsl
das
test
inc
lret
jecxz
push
xlat
imul
mov
add
jle
int
mov
repz
adc
pop
loop
js
pushf
cmp
cli
es
out
cmp
test
lret
xchg
xchg
addr16
inc
sahf
mov
lock
xor
test
pushf
xor
jle
repz
push
sbb
dec
jb
jae
mov
out
ds
cltd
jmp
jecxz
mov
dec
pushf
add
pop
sbb
push
xor
or
test
jge
not
or
push
icebp
imul
push
arpl
add
cmp
mov
test
cmp
lcall
ficoml
jo
negb
js
pop
fcoms
push
mov
inc
jle
mov
jle
mov
ja
cld
and
sub
pop
popa
ss
lods
adcl
idivl
fucomi
popa
enter
das
jl
jge
dec
pop
outsb
stc
jecxz
pusha
fsts
push
sub
popa
adc
mov
jnp
adc
lods
mov
rcll
dec
mov
out
cmp
icebp
out
in
cmp
rorl
mov
mov
add
mov
addl
mov
jns
adc
adc
sbb
dec
mov
jns
test
jle
outsl
mov
gs
add
js
sub
xor
loop
jg
jmp
out
xchg
cld
jbe
jge
fldl
push
lcall
lahf
xchg
mov
jo
mov
scas
lock
shl
ret
push
pop
sub
sbb
mov
push
rcrb
mov
iret
notb
push
add
dec
adc
test
fidivl
sbb
pusha
mov
pop
mov
insl
add
popa
ds
rcll
xchg
sbb
in
xorl
sub
sub
add
mov
insl
es
scas
push
mov
add
repz
int3
sbb
jmp
into
int
push
sub
es
mov
inc
enter
mov
enter
push
push
cmc
loop
lods
flds
mov
xor
push
and
js
dec
test
sub
lea
dec
lods
sub
int3
mov
jae
adc
aam
and
and
fs
setle
cmp
mov
inc
insl
decl
out
aaa
pop
mov
test
pop
int
ret
mov
fdivrs
mov
bound
inc
fisttpll
rolb
rorl
pop
xchg
dec
orb
gs
sbb
dec
movsb
push
fcomps
xlat
mov
pop
invd
push
xchg
adc
addr16
cld
xor
cmp
or
fiadds
scas
jp
outsb
push
out
inc
mov
sub
fcomip
xlat
pop
mul
push
sub
push
in
fldl2e
mov
fnstcw
outsl
jo
xchg
mov
mov
dec
cmp
xchg
pushf
je
sarb
sub
js
jns
lock
pop
ret
sbb
cmovno
xor
shrl
popf
popa
inc
push
push
inc
fsubrl
adc
xchg
aas
shlb
ss
push
imul
xchg
sahf
insl
test
cs
sbb
mov
cmc
dec
call
sti
push
mov
cmp
cmpsb
xor
test
push
jbe
popa
scas
orl
mov
ret
test
xchg
sbb
mov
fdivrp
aam
mov
dec
mov
aad
jp
stc
loopne
mov
loop
test
pop
jg
outsl
popf
mov
dec
jmp
cmp
pop
mov
xor
jne
test
push
sbb
iret
lcall
sub
inc
sbb
mov
loop
xchg
inc
and
sub
lahf
test
stc
adc
shll
stos
mov
cmp
bound
out
add
leave
sbb
dec
cld
jge
mov
lock
popf
jne
popa
aad
cmp
out
cmp
ret
sub
jle
jg
add
pop
add
jns
out
mov
out
push
inc
mov
cmpsl
sarb
jnp
sbb
jb
repnz
mov
cwtl
push
clc
dec
adc
lahf
or
sub
aam
jle
push
iret
xchg
dec
lods
or
andl
cmp
out
icebp
movsb
add
sbb
inc
mov
cltd
xor
inc
gs
and
pushf
lods
and
cmovp
call
xor
jno
mov
xlat
int
jp
cmp
in
add
or
dec
mov
popw
mov
jne
pop
sti
cmpsl
lahf
cltd
stos
xchg
add
push
mov
imul
notb
icebp
xchg
sbb
dec
adc
sti
add
sbb
cmp
lahf
push
or
mov
xchg
pop
lret
push
add
adc
outsl
or
sbbl
nop
lahf
scas
mov
push
dec
jno
aam
mov
std
push
inc
jg
push
inc
mov
dec
sbb
sarl
filds
aas
inc
pop
cld
or
enter
add
dec
sbbb
mov
adcb
test
xor
adc
insb
call
xchg
stos
pop
lds
inc
push
fcmovbe
and
cmp
xchg
push
popf
and
popa
pop
frstor
sarb
mov
movsb
sub
xor
out
test
roll
pop
sbb
std
or
ljmp
add
js
leave
stc
mov
adc
fwait
call
call
xor
mov
jnp
xchg
dec
inc
mov
inc
outsb
nop
add
mov
addl
cmp
or
in
fst
xchg
or
mov
shlb
adc
outsb
adc
inc
sbb
lds
pop
dec
and
sahf
faddl
cmp
repz
pop
popf
repnz
cs
jnp
ds
outsl
xor
in
cmpsb
jb
int3
dec
out
out
xchg
push
xorb
mov
push
and
lods
adc
movsl
jge
mov
mov
clc
mov
int
dec
loop
out
pusha
stos
sbb
mov
mov
pop
dec
push
mov
sti
testl
sbb
xchg
pop
cmpsl
int3
xchg
ret
movl
cmpsb
fnstsw
xchg
xor
pop
jp
mov
or
into
insb
xchg
xchg
mov
jns
or
adc
xorb
or
xor
scas
jge
pop
jp
popf
rcrb
gs
jl
out
mov
adc
arpl
push
cs
inc
lds
lret
shrb
data16
mov
and
sahf
dec
aas
aam
test
insb
testb
inc
pop
aam
ret
nop
dec
push
mov
lods
sbb
je
adc
pop
lret
xchg
push
sbb
out
sbb
in
mov
dec
test
xor
shlb
cld
repz
imul
sbb
stos
push
in
pushf
xchg
pop
lcall
inc
pandn
push
push
mov
add
xor
das
push
mov
mov
mov
mov
out
jp
mov
cmpsl
dec
mov
and
push
pop
lret
mov
xchg
in
sub
in
mov
sbb
iret
jnp
jle
mov
icebp
out
pop
mov
faddp
push
adc
addr16
fisubrl
mov
mov
lretw
ret
and
lods
mov
xchg
sub
xor
ss
mov
jns
xorb
in
pop
add
scas
jbe
shlb
shrl
lea
xchg
or
imull
sbb
jb
mov
inc
mov
movsb
outsb
fcoml
test
xchg
inc
aad
mov
mov
mov
sbb
add
pop
jns
ret
notl
imul
cmp
jle
movsl
jns
imul
mov
pop
divl
xchg
or
xchg
dec
xlat
popa
xor
push
fstpl
cld
cli
hlt
jmp
add
mov
mov
xor
nop
fldt
inc
scas
add
pop
sbb
daa
mov
fldenv
int
xchg
andb
mov
in
jae
mov
iret
int3
and
mov
xchg
lcall
mov
popl
jbe
ret
adc
and
test
sbb
insb
push
xor
cs
mov
stos
push
fstpl
fdiv
js
rcll
cwtl
jne
aas
rclb
mov
les
repnz
push
aaa
lods
mov
xchg
add
sbb
rolb
pop
shll
or
add
ret
in
lods
mov
fstps
adc
rcll
xchg
lock
mov
arpl
cld
cmp
mov
and
lret
stos
lock
popa
inc
sbb
adc
shr
adc
xor
fistps
sub
es
sbb
add
push
sub
push
mov
jecxz
and
outsl
or
fsubrs
xor
jmp
and
pop
push
ljmp
stc
mov
fldcw
add
ret
in
lods
sbb
mov
in
adc
jo
mov
call
or
loope
and
adc
sub
aaa
xchg
movsl
jno
xchg
dec
insb
sbb
jns
push
das
lock
cmp
icebp
mov
mov
xor
int
jne
mov
sbb
mov
int
or
lret
test
inc
adc
imul
push
sub
sbb
mov
push
xchg
adc
in
adc
cmp
lahf
push
fistpl
sub
int
out
out
xor
adc
sti
push
and
dec
orb
xchg
rcl
lea
cmp
imul
fs
adcb
leave
loope
mov
sbb
pusha
bound
fildl
or
out
push
shll
scas
lahf
call
xchg
sub
sub
lret
xor
movsb
into
cmc
andb
data16
push
xchg
js
sub
mov
cmp
sub
es
add
push
fwait
iret
enter
rol
jo
aad
add
out
mov
sbb
inc
or
add
xor
xor
call
cmp
pop
fmuls
cld
lods
cmp
lea
and
xchg
notl
or
pop
pop
jo
cmp
sub
rorl
out
cmp
add
dec
je
outsl
mov
or
outsb
imul
ljmp
sub
stos
jbe
addb
into
mov
ss
xchg
xchg
adc
adc
cmpb
icebp
fwait
jnp
imul
ja
mov
xor
idivb
pop
xchg
ss
shl
cld
xchg
pop
in
mov
mov
jp
das
push
pop
sbb
mov
jnp
aad
out
lods
div
ja
push
adc
pusha
fsubs
sbb
fisubrs
push
jle
call
push
jmp
jp
movsl
cmc
cmp
stos
in
fld
cmp
cli
fs
sub
mov
push
sbb
lcall
jp
and
bnd
xor
mov
cmp
repz
faddl
xor
mov
xor
arpl
push
mov
push
lods
mov
pop
pop
xchg
add
icebp
out
test
mov
test
gs
mov
icebp
sbb
pop
shlb
adc
xchg
pop
push
shlb
jbe
inc
dec
out
sub
mulb
rcrb
xchg
add
sbb
sub
iret
mov
inc
pop
mov
mov
or
cmp
xchg
jg
xor
and
xor
xchg
mov
sub
xor
pusha
jno
bound
mov
addr16
mov
aad
jno
sub
stos
sbb
jg
fstp
stos
sbbl
mov
arpl
bound
mov
out
push
push
cmp
in
loope
sbb
stos
jno
pop
jl
ret
insb
insl
fidivs
jne
sub
aas
jl
sbb
or
loopne
jo
dec
ja
add
xchg
sub
sbb
rolb
pop
js
jmp
mov
push
push
ljmp
add
inc
push
pop
fiaddl
push
out
pop
arpl
jnp
add
xor
sbb
mov
jns
or
dec
pop
or
pop
ficomps
lock
loop
out
aas
cld
jne
repnz
fiadds
or
jae
inc
movl
pop
test
fwait
mov
fcompl
leave
popl
ds
inc
mov
pop
sbb
or
in
or
outsl
mov
cmp
pusha
dec
clc
lret
xor
arpl
pop
inc
pushf
push
shll
test
adc
repnz
mov
sub
adc
and
cltd
mov
daa
xor
test
pop
jne
sbb
xor
lret
jnp
test
xor
cmp
add
sbb
add
jo
cld
jns
lret
mov
add
lock
in
mov
jae
pushf
into
sbb
clc
adc
ds
ret
frstor
push
push
and
data16
push
test
aaa
ret
ss
mov
pop
gs
mov
or
sub
test
jbe
push
mov
or
jbe
sub
mov
dec
lret
iret
inc
in
dec
mov
pushf
pop
nop
xchg
cld
dec
jb
sub
mov
cld
mov
jbe
mov
dec
mov
xchg
lds
rcr
aam
mov
loope
in
pushf
lret
push
cwtl
in
gs
ss
mov
sbbl
call
mov
inc
adc
aad
out
cmp
pop
or
scas
xchg
mov
cli
test
fisttpll
inc
out
into
daa
or
xor
or
add
jae
mov
in
inc
sti
mov
push
push
outsb
lds
jae
mov
out
test
lock
pop
lret
test
ret
mov
and
mov
cmpsl
dec
scas
insl
lds
add
xchg
and
mov
pop
or
mov
sub
mov
sub
inc
mov
jo
pop
ret
xor
mov
out
outsb
out
mov
inc
or
mov
lret
mov
jo
and
gs
lret
out
pop
push
cmp
into
mov
pushf
lret
cmp
pusha
push
imul
push
in
mov
test
adc
aas
mov
mov
rolb
sbb
push
jecxz
fldt
jge
icebp
cmp
mov
pop
call
xor
lods
ret
std
enter
pop
aas
pop
push
sub
mov
jmp
inc
testl
lret
inc
jp
adc
jle
push
ja
enter
inc
sahf
adcl
xchg
or
jp
mov
adc
push
bound
dec
fnsave
inc
cmpsl
shl
dec
hlt
fidivs
int
es
shlb
fnsetpm(287
and
daa
aas
out
jge
es
fwait
and
pop
mov
mov
adcb
push
inc
jp
repnz
mov
fiadds
repnz
insb
cltd
push
adc
ficoml
in
inc
loop
xchg
rol
shr
pop
stos
cmc
pop
in
test
cld
and
lds
mov
outsl
inc
jns
sbb
xchg
data16
movsb
cld
xchg
daa
jae
jns
push
ret
inc
mov
mov
dec
aam
fstpt
and
mov
pusha
xchg
mov
icebp
stos
test
dec
xchg
ds
lods
sub
xchg
lret
xor
pop
je
fcoml
jecxz
inc
leave
push
mov
mov
outsl
sti
push
jb
aas
add
sbb
ljmp
push
test
iret
call
push
mull
add
push
or
fnstcw
adc
adc
xchg
shrb
pusha
and
pop
int
in
sbb
int
icebp
add
mov
inc
pop
arpl
insb
dec
inc
push
pushf
sub
mov
test
je
rclb
and
or
pop
add
sub
mov
cli
pusha
dec
mov
pop
jecxz
movsb
ljmp
jnp
or
pushf
sarl
lock
int
lock
adc
mov
xchg
dec
mov
popf
dec
sub
fbstp
leave
cmp
cmp
add
pushf
mov
sbb
stos
fstpl
leave
insb
inc
mov
inc
inc
adc
sbb
shll
jg
stos
xor
jns
inc
aad
push
imul
movsl
inc
push
push
fistl
mov
test
insl
outsb
xchg
pop
data16
sub
stos
xchg
rcll
jmp
ret
test
push
pop
add
das
dec
outsl
fdiv
and
jne
sti
xchg
cld
mov
sub
xor
mov
pop
mov
stos
mov
sbb
inc
nop
mov
mov
and
lods
scas
xor
cmp
hlt
push
cmpsb
pop
pop
clc
test
lock
jo
in
xchg
loope
cs
iret
sub
ljmp
stc
bound
pop
bound
jle
fiadds
outsl
pop
jnp
outsl
fcoms
bsf
clc
fwait
iret
adc
push
test
lret
sbb
sub
cmpsl
jo
mov
xor
or
jp
insb
mov
incb
lods
jmp
jb
add
dec
andl
mov
int
xchg
xchg
imulb
clc
xor
test
cltd
lret
cwtl
adc
mov
or
fs
ret
imul
pop
scas
aaa
mov
push
or
inc
stos
and
adcb
ss
lahf
mov
je
test
mov
mov
nop
mov
fdiv
loopne
in
dec
ss
je
icebp
xor
adc
adc
test
and
dec
pop
fsubl
lock
loope,pn
fld
mov
jle
mov
pusha
mov
push
push
adc
mov
sti
sub
shll
mov
xlat
movsb
sub
in
or
insb
cli
loopne
and
repz
mov
andb
and
mov
mov
fcom
mov
pop
or
aaa
sarl
and
sbb
jmp
jge
orb
add
jne
mov
test
mov
adc
repz
mov
and
test
js
mov
ret
scas
cld
or
sbb
lods
ret
cmp
jecxz
cmp
ds
jp
fs
jp
stc
std
out
mov
and
inc
pop
mov
mov
lret
mov
cmp
das
rcll
pop
gs
addr16
xor
jge
pop
clc
gs
and
push
and
adc
ret
aam
fisttpll
cld
sahf
enter
cmp
stos
decb
fisttpl
out
enter
aaa
mov
inc
loop
shr
bnd
mov
mov
cmp
fists
push
es
mov
repz
xchg
dec
shl
insl
mov
sti
imul
dec
adc
pop
add
jge
or
outsl
stos
imul
out
aam
lods
xor
pop
test
push
sbb
xor
in
ret
divl
jb
jb
mov
dec
inc
sahf
push
sub
inc
mov
mov
inc
push
or
pop
fisttps
outsl
xchg
dec
push
nop
mov
lea
out
sbb
sub
push
jl
push
lods
xor
int3
scas
adc
iret
jp
push
or
cmp
inc
xor
mov
nop
shll
stos
lds
sbb
jnp
pop
mov
xor
icebp
mov
jo
xor
add
out
mov
add
jecxz
test
jmp
push
lea
mov
xor
lock
push
mov
mov
aad
sbb
mov
dec
pop
xor
enter
jnp
iret
rcrb
push
jecxz
mov
idivl
popf
pushl
icebp
jb
sbb
stc
jno
adc
dec
sbb
jb
and
leave
in
mov
inc
mov
and
mov
shll
test
pop
pop
je
mov
add
and
add
sub
sbb
test
dec
test
pop
ss
dec
fiaddl
mov
sahf
adcl
rcl
push
mov
out
aaa
mov
stos
ljmp
ret
pop
pop
fldenv
jg
sub
push
jae
sti
inc
icebp
or
ror
sbb
and
and
push
test
xchg
sahf
jns
sbb
repnz
and
ljmp
fistpll
add
dec
jnp
inc
add
jnp
and
test
xor
into
xor
push
xor
pop
leave
pop
sbb
cmp
daa
sbb
idivl
pop
stos
push
sbb
mov
fwait
cmp
pop
push
andnps
add
push
aad
push
xlat
pop
popf
adc
mov
xorb
outsb
movsl
push
lret
mov
ja
imul
or
daa
fistl
mov
sub
xchg
imul
push
sub
in
jnp
call
xor
stc
shll
out
jecxz
es
aaa
cmc
lret
adc
repnz
pop
push
adc
sarb
cmc
xchg
add
and
push
shll
paddusb
mov
jle
cmpsl
pop
xchg
mov
xor
aam
xchg
data16
inc
cmpsl
jbe
test
das
pop
in
roll
xchg
sub
ficoms
imul
lcall
insl
mov
aas
jle
push
lods
lret
enter
cld
stc
fbstp
jle
les
fmuls
push
pop
jb
lods
cmpsb
adc
sub
xor
mov
idiv
mov
rcl
xor
mov
in
das
or
mov
out
sbb
popa
sub
xor
add
test
shlb
sub
pop
mov
daa
xchg
push
push
jbe
stos
dec
lock
lea
addr16
sbb
mov
aad
and
in
xchg
mov
gs
push
dec
aas
out
mov
popf
or
sbb
jb
dec
push
ja
push
dec
ret
mov
pop
push
inc
adc
jno
cmpsl
enter
aad
dec
je
xchg
jne
xchg
sub
inc
cmc
cwtl
xor
xchg
xchg
scas
xchg
push
and
sbbl
pop
mov
movsl
sub
test
mov
dec
addr16
hlt
push
outsl
cwtl
iret
dec
lea
pop
test
in
xchg
imul
jae
sbb
sub
mov
loope
rorb
pop
subb
ret
push
addl
jae
push
sub
sbb
movsl
es
fsubs
cmpsb
sub
test
mov
jecxz
je
clc
lret
and
add
and
jnp
dec
inc
fldt
mull
decl
icebp
inc
and
push
dec
or
jmp
shll
sbb
push
arpl
sub
out
loop
add
mov
movsl
js
jns
mov
pop
lea
sub
add
shrb
push
je
xchg
or
gs
lcall
popf
inc
xor
shll
mov
mov
test
mov
jmp
mov
xchg
imull
sbb
icebp
sub
add
mov
mov
daa
xchg
ret
cmp
xor
ret
push
test
scas
std
sbb
fidivrl
test
adc
or
pop
inc
sub
mov
sub
jno
hlt
dec
push
repz
sti
sub
mov
jecxz
jge
call
inc
xchg
jmp
rorl
cltd
fisubs
jecxz
push
nop
int
nop
leave
and
lret
aas
sbb
call
les
shlb
inc
adc
sub
bound
in
nop
add
out
testb
scas
iret
lods
fisttpll
and
jle
ss
inc
repz
push
sbb
or
cld
arpl
adc
push
push
sbb
adc
outsl
and
int
gs
test
xor
aas
dec
rorl
sbb
xchg
push
rorb
fdivrs
cmp
push
outsl
adc
xor
ds
std
jl
fidivrl
shrl
movsb
clc
dec
inc
arpl
pop
fdivrs
adc
pop
push
imul
xchg
cmpsl
loopne
jb
daa
les
jnp
pop
fcomip
fs
int3
leave
mov
call
push
adcl
adc
int
arpl
int3
mov
shr
xchg
push
insl
imul
sub
in
mov
or
jl
add
and
adc
sub
lods
jns
mov
pop
es
cli
xchg
fmul
push
xlat
jp
aas
pavgw
or
pop
fcmovu
rep
inc
jns
mov
mov
jmp
dec
test
jo
mov
inc
cmpsl
gs
ficoms
cmp
mov
aas
movsl
add
fs
pushf
dec
adc
jae
and
scas
mov
cmpsb
cltd
pop
push
nop
xchg
cmp
pop
pop
and
mov
fucom
pop
stc
sub
jecxz
mov
imul
nop
sbbl
and
stc
shlb
imul
jecxz
in
sub
insb
pop
xlat
jo
into
mov
and
and
ss
mov
mov
xchg
scas
mov
add
xor
es
and
fsubrl
cli
rcl
or
adcb
or
cmc
jge
cmp
loopne
jne
mov
mov
loop
leave
jb
xchg
xchg
outsl
loopne
add
inc
cli
lahf
dec
add
dec
mov
repnz
or
jp
lahf
or
push
imul
imulb
movzwl
lock
ficoml
outsl
shl
fildll
aas
call
mov
xor
and
jae
pusha
loope
int3
jecxz
pop
jge
cmp
gs
int
loope
std
xor
xchg
xchg
cwtl
clc
inc
xor
xor
mov
ret
sbb
pop
lock
test
dec
test
push
xorb
mov
lock
rorl
or
mov
hlt
fcoms
jae
add
cltd
clc
mov
mov
mov
xor
in
push
es
movsl
mov
push
jge
lds
movsl
mull
lods
mov
cmp
cmp
push
jecxz
bound
mov
jns
bound
adc
gs
inc
pop
adc
out
jbe
jbe
mov
xchg
stc
aam
aas
pop
aaa
push
cmpl
jno
lock
cs
dec
sub
xchg
rcrb
and
in
and
mov
fmuls
arpl
xchg
out
je
loopne
mov
cltd
test
mov
dec
faddl
stos
pop
leave
fldl
popa
and
insl
jp
inc
neg
dec
inc
out
inc
sbb
clc
loopne
popf
pop
xchg
jmp
inc
jno
icebp
js
addr16
outsl
mov
mov
insl
daa
data16
addr16
rcrb
lock
push
jle
dec
jae
inc
enter
shll
mov
xor
jecxz
or
pop
cmc
and
in
push
push
or
mov
mov
bound
call
fistl
dec
aad
repz
dec
test
ljmp
sub
pop
stos
adc
mov
out
aad
out
int3
mov
mov
adc
ja
mov
add
xchg
divb
add
jbe
cmc
insl
movsb
mov
jb
pop
mov
mov
js
adc
push
mov
or
pop
mov
inc
mov
shlb
xor
add
adc
jmp
fstps
int
cli
jg
addr16
inc
mov
xchg
neg
sbb
or
pop
xchg
decb
ret
popf
into
fcompl
pop
jnp
push
mov
loopne
imulb
lcall
inc
jmp
and
out
outsl
movb
add
mov
sub
leave
mov
leave
mov
push
fcos
pop
js
cmpsb
push
ret
push
cwtl
rclb
lods
in
and
lds
aam
pushf
mov
xchg
cmc
xchg
fsubrl
lods
cltd
outsl
mov
cmc
cmp
cli
push
cmp
addb
rcrb
and
push
sbb
jnp
outsb
daa
xchg
jle
pop
aaa
cld
mov
push
test
dec
aas
gs
inc
pop
cmpsl
jle
jge
jbe
mov
mov
ret
lea
dec
fisubl
into
xchg
dec
nop
test
movsl
ret
es
stc
push
in
hlt
inc
jmp
stos
fcmovb
dec
jl
add
mov
add
jns
int3
rcrl
push
mov
pop
xchg
cld
scas
and
shl
inc
jno
mov
stc
xchg
sub
dec
lahf
mov
push
or
enter
div
xchg
mov
add
jp
mov
bound
ja
xchg
add
gs
or
pop
cmc
jmp
cmpsl
jns
sub
dec
and
shlb
clc
fsubrl
xchg
cs
les
or
hlt
cs
mov
insl
push
xor
lret
test
lcall
aam
xchg
mov
push
mov
out
mov
nop
mov
sti
cmp
sbb
jb
mov
mov
fwait
mov
xchg
mov
shlb
lret
sbb
mov
inc
pop
sar
add
jnp
cltd
fiaddl
repz
xchg
inc
aaa
jmp
push
or
add
dec
adc
push
xchg
adc
xchg
pop
orb
xor
inc
hlt
jge
inc
rorl
mov
gs
xor
popf
sbb
push
lret
push
lret
pop
sbb
sbb
mov
aam
ror
xchg
js
jecxz
mov
addr16
mull
pop
xchg
mov
cltd
mov
xchg
outsb
stos
adc
mov
fnstcw
xchg
inc
push
or
leave
in
jmp
sbb
push
sub
cld
cmp
mov
imul
jge
xchg
mov
sbb
xchg
lods
leave
rcrb
pop
and
or
xor
jae
loopne
pop
out
ljmp
adc
outsl
cltd
cmpsl
push
dec
or
pushf
adc
mov
push
xchg
lret
push
or
mov
jns
dec
mov
push
mov
pop
push
push
ja
dec
addl
push
iret
ret
lods
lds
or
add
mov
je
inc
or
pop
push
or
js,pt
sbb
ret
les
jmp
pop
fisttps
in
pop
jb
nop
cmp
daa
pop
xchg
pop
iret
mov
cmp
pop
add
xchg
jns
int3
loope
mov
jnp
sarb
push
add
mov
loope
int
pmaxub
hlt
xor
xchg
je
sub
stc
jno
loope
mov
xor
das
nop
add
out
mov
movsl
test
jb
es
xlat
in
or
inc
xor
sub
jle
or
cwtl
aam
aad
dec
ret
addr16
jecxz
jns
addb
cmp
aam
int
nop
jns
roll
ret
cmp
lock
jb
add
jle
loope
arpl
popa
mov
or
aas
out
cli
sbb
test
push
jp
sub
lock
and
dec
jmp
xchg
outsb
push
and
inc
pop
pop
mov
sahf
sub
mov
lock
mov
inc
xor
out
xchg
cmp
pop
mov
adc
jg
xor
mov
movsb
xor
rorb
mov
test
fs
cmpsl
or
shlb
lahf
cmp
jmp
lock
stos
das
ret
mov
dec
dec
xchg
fisubrl
pop
sub
outsl
movsb
xor
fstpt
adc
xlat
push
pop
aam
jp
jnp
mov
inc
push
mov
stos
popf
sbb
das
cltd
push
jle
inc
shlb
or
outsb
loop
mov
popa
or
mov
mov
jae
push
mov
cwtl
lret
add
mov
ror
dec
mov
movsl
add
or
add
lds
sub
fstpl
mulb
cmpsl
lret
cmp
mov
inc
cli
xor
out
addb
enter
fdiv
ret
xchg
jbe
xchg
jo
pop
scas
jl
push
leave
clc
loopne
xorb
inc
sub
lea
sub
sahf
jl
rol
mov
sbb
imul
push
jmp
lcall
push
es
popf
imul
ljmp
out
movsl
or
lret
stos
pop
lds
sub
xor
scas
cli
outsb
lea
mov
push
and
ret
lock
nop
fistl
rol
push
mov
add
addb
shld
and
sbb
loopne
popf
push
pop
xchg
add
int3
mov
mov
fwait
cmp
gs
inc
loope
call
mov
dec
pusha
imul
inc
pop
loope
mov
sbb
pop
fwait
inc
and
jp
test
loopne
ret
sub
add
pop
fs
rcl
cmpsl
das
mov
pop
cmp
mov
add
sub
leave
bound
popf
xchg
jae
pushf
sbb
xchg
xchg
bound
mov
add
inc
lods
shlb
mov
into
xchg
mov
mov
ror
xor
mov
leave
iret
bnd
and
add
dec
mov
cmp
cmp
daa
popa
std
rclb
es
xchg
loopne
cwtl
jne
out
bound
add
push
outsb
mov
div
jp
and
jp
mov
rclb
push
xchg
int3
dec
repnz
cltd
outsb
lea
jbe
push
dec
sbb
cwtl
sbb
ret
pop
aaa
ret
ja
out
jle
pop
dec
aas
add
test
shrb
popf
sbb
int3
mov
jo
xor
xor
dec
movsl
testb
pop
icebp
jns
lret
fnstcw
dec
jle
mov
or
xchg
or
inc
int
out
les
sbb
xchg
stos
stos
subl
or
cmpb
push
jns
mov
jmp
pusha
xchg
push
xchg
jmp
js
subl
or
xor
jmp
testl
fs
xor
inc
adc
xchg
mov
pop
xor
or
jb
sbb
fsubrs
stc
daa
in
and
loope
cmpb
fnsave
subl
dec
pop
mov
dec
in
add
imul
fsubs
stos
cmpsl
ljmp
push
psubw
inc
inc
nop
call
sub
mov
mov
outsl
push
lea
data16
testb
icebp
inc
arpl
scas
aam
pop
mov
mov
inc
xor
cmp
mov
add
in
mov
xchg
pop
mov
pop
scas
xchg
push
mov
xchg
pushf
push
insb
adc
int3
pop
cmpb
faddl
test
and
pop
adc
push
sbb
das
mov
jns
adc
pop
mov
iret
sub
or
and
repnz
out
push
jbe
test
test
xchg
hlt
adc
inc
inc
inc
pop
jp
fdivrl
cld
dec
or
icebp
or
mov
push
roll
and
or
fcmovu
inc
je
stc
add
mov
jp
mov
clc
add
les
popa
addr16
or
cmp
mov
cmp
mov
xchg
dec
aam
mov
mov
push
cli
scas
mov
daa
lds
dec
jno
and
and
dec
pop
dec
add
stos
ret
and
outsb
inc
cs
fbstp
shrl
int
gs
cmpsl
pop
xor
lret
sub
pop
loope
or
jae
dec
add
jbe
cwtl
pop
psubb
sbb
ss
push
cmpsb
sub
test
loop
jg
arpl
sub
repnz
enter
mov
or
mov
or
push
imul
jbe
mov
ja
lods
lods
add
mov
std
push
inc
xorl
ds
jno
mov
imul
push
adc
dec
cli
cmp
sbb
mov
mov
push
jle
mov
fidivl
mov
fidivrs
shl
arpl
shlb
pop
jbe
out
lock
jmp
addb
add
mov
shll
push
add
pop
out
sarb
nop
std
mov
test
dec
sti
insb
adc
mov
pop
fstps
cmp
ds
fisubl
lret
ljmp
mov
cmp
insl
ret
mov
mov
inc
jae
mov
out
jmp
lcall
leave
cli
cmp
mov
test
bnd
faddp
add
push
jmp
pusha
mov
mov
popf
xor
sti
lods
in
or
adc
cmp
mov
sbb
imul
mov
icebp
ljmp
cmp
out
movl
cmp
mov
adc
or
mov
push
dec
test
jecxz
dec
pop
pop
shl
mov
int3
cld
sub
leave
xchg
mov
lret
inc
imul
imul
sub
fdivs
outsl
xor
or
stos
xchg
sbb
xchg
mov
movlps
push
outsb
or
mov
das
cmp
in
dec
dec
xlat
into
push
jecxz
idiv
sbb
rclb
jbe
clc
jmp
xor
mov
jns
sbb
clc
jo
xor
push
mov
push
shll
out
dec
out
adc
addr16
mov
fistl
mov
ss
in
pop
mov
enter
iret
mov
mov
fucomi
in
jp
adc
xor
iret
xchg
jp
ss
cmc
jnp
out
jbe
sub
push
es
add
data16
mov
dec
lds
test
testl
roll
popf
xor
xchg
cmovnp
xor
jb
inc
scas
fildll
loope
add
xor
les
int
jae
shrl
sahf
fwait
dec
sahf
call
mov
shrb
pop
pop
test
in
jno
xor
add
sar
add
ss
mov
nop
jmp
cld
mov
jmp
sti
cmpsb
movsl
cmpsl
cmp
or
jbe
out
sbb
int
push
jo
jae
mov
cmp
movsl
int3
mov
jmp
ror
ss
mov
rcrb
mov
and
cli
inc
sub
rcll
cs
dec
dec
outsl
aad
out
xorb
mov
mov
add
or
xor
ret
lock
js
jg
xchg
mov
outsb
cmp
push
push
dec
int3
daa
idivb
outsb
push
add
mov
mov
lea
add
or
jns
loopne
jne
ljmp
movsl
add
mov
push
sbb
lods
sub
pop
dec
aaa
push
jle
push
sbb
repnz
ss
pop
test
fdivl
inc
ret
arpl
jge
fwait
mov
add
ja
fnstcw
add
dec
mov
mov
jne
scas
dec
imul
in
sub
and
xchg
mov
push
mov
add
push
mov
leave
push
xchg
jg
add
popa
repnz
push
movsl
inc
ss
mov
xor
clc
imul
and
in
insb
mov
data16
inc
push
xchg
imulb
in
faddl
orb
xchg
dec
jmp
and
mov
mov
movsb
je
xchg
dec
je
mov
lcall
inc
ljmp
fs
cmp
in
scas
xor
pop
sub
jnp
xor
repnz
xchg
push
shr
sbb
jl
test
inc
out
pop
lods
dec
dec
pop
lret
jecxz
xor
cmp
push
aas
ret
sub
inc
adc
xchg
insb
sbb
or
push
aam
cmp
hlt
jg
imul
xor
leave
das
pop
dec
out
adc
add
std
test
out
sub
dec
sub
aas
lahf
stc
cmp
xor
inc
fdivr
lret
ljmp
push
mov
add
cmc
movsb
push
aam
adc
add
movsl
inc
mov
loopne
dec
lahf
call
out
add
pop
inc
push
xor
test
inc
jns
or
jb
adc
in
jns
and
mov
add
lcall
xchg
sub
push
dec
xchg
cmc
out
jnp
mov
push
fwait
xor
aam
pushf
int3
mov
scas
push
pop
pop
jp
ljmp
arpl
cmpsb
push
hlt
enter
scas
dec
mov
int3
inc
mov
data16
cmp
sahf
aas
or
paddsw
mov
rolb
fidivrs
pop
jle
mov
addps
fcmovnbe
xor
inc
mov
js
jno
pop
push
test
push
loope
or
dec
clc
push
cmp
mov
dec
mov
push
lret
icebp
xchg
mov
test
xor
mov
and
fxch
jnp
mov
fmul
in
in
cli
loope
mov
sub
mov
cld
lahf
arpl
push
into
jecxz
push
aas
subl
movsb
mov
popf
pop
icebp
je
inc
ret
xor
mov
or
ret
add
sti
ret
shrl
pop
movsl
stos
pop
pop
nop
insl
pusha
cmp
xchg
cmc
and
mov
add
mov
pop
fistpl
push
push
adc
mov
roll
push
jno
dec
or
pop
les
iretw
xchg
gs
loopne
pop
stos
outsl
jo
sbb
repnz
mov
sub
cli
out
xor
int
xor
clc
push
dec
scas
mov
xchg
xorl
or
pushf
call
mov
and
rol
jnp
sub
iret
mov
push
jo
or
icebp
mov
jmp
in
jmp
pushw
loope
lods
ljmp
jg
dec
popf
pop
xchg
lret
xchg
mov
dec
cmc
dec
jne
cmp
pop
mov
adc
cmp
out
lock
or
mov
in
sbb
cmp
ljmp
dec
adc
test
fdivrp
and
ret
cmpsb
stos
lods
mov
imul
rclb
inc
xchg
push
std
lret
iret
adc
call
push
jb
fwait
mov
cli
mov
imul
test
insb
mov
leave
add
rorl
pushf
mov
es
fdiv
lods
and
push
xchg
jbe
push
ja
cmp
cmp
sar
dec
sbbb
es
push
sub
shlb
inc
rcr
mov
push
adc
sbb
gs
xchg
or
loope
pop
in
js
cmp
push
in
inc
daa
dec
jne
jmp
adc
push
and
stos
or
gs
mov
and
orb
enter
mov
jns
in
lret
push
andb
sbb
popa
push
mov
sbbl
mov
mov
dec
pop
push
icebp
ljmp
or
sahf
mov
push
and
fcomp
or
in
push
or
cmp
xchg
cltd
adc
jge
pop
idivl
imul
lods
fwait
inc
cmp
sub
mov
xchg
push
sbb
sub
clc
je
ljmp
jno
push
jl
sbb
and
cmpsb
sbb
mov
xchg
mov
lods
or
leave
in
adc
cmp
add
shrb
sti
imul
and
push
std
inc
in
and
push
inc
xor
push
aad
push
insb
mov
push
outsl
mov
jb
lcall
ja
repz
loope
je
add
outsb
or
pop
and
mov
arpl
ds
pop
popa
dec
inc
add
lret
inc
inc
mov
adc
dec
popf
mov
xlat
int3
je
cli
push
or
popf
mov
movsb
insl
nop
int3
xor
jb
mov
js
test
or
push
out
notb
jge
adc
aaa
fildll
mov
lds
lods
push
mov
pop
popa
ret
or
mov
mov
bnd
dec
movsl
push
dec
adc
mov
pop
xchg
sub
in
push
insb
faddl
mov
sub
add
imul
mov
mov
imul
rcr
enter
cs
outsb
popf
inc
outsl
out
dec
ficomps
leave
dec
sti
pop
cld
leave
fcoml
jp
les
loope
in
ficomps
jg
xchg
sub
inc
pop
cmpsb
rol
pop
mov
add
xchg
loop
mov
sbb
inc
loop
sahf
push
add
inc
adc
or
pop
je
test
aaa
inc
cmpsl
sbb
sbb
mov
jnp
mov
insl
push
shrb
xchg
cmpb
fisubl
dec
outsl
shlb
repz
int
mov
inc
xor
push
and
loopne
sub
jmp
jle
pushl
pop
mov
fmuls
iret
cwtl
ret
mov
out
je
jo
dec
fcoml
sbb
or
ret
inc
mov
push
enter
dec
test
data16
popa
repz
dec
lahf
pop
mov
add
sbbl
jbe
imul
scas
incb
mov
sbb
jg
clc
scas
jne
imul
inc
mov
mov
out
xor
mov
orl
rorb
movsb
sub
mov
jno
add
push
arpl
aaa
lret
mov
push
and
data16
es
dec
fisubrl
out
mov
outsb
jp
lods
in
gs
scas
adc
adc
mov
dec
sub
dec
inc
mov
add
sbb
fiadds
in
adc
inc
mov
iret
dec
mov
out
adc
and
les
mov
cltd
pusha
cld
fimuls
dec
stos
test
aad
nop
lods
orl
cwtl
sbb
jg
jle
fmul
out
leave
out
push
jg
xchg
imul
push
aaa
dec
or
leave
sbb
and
fxrstor
push
cmp
fisttps
mov
cmp
mov
add
mov
je
loope
push
out
flds
jne
bound
movsl
arpl
iret
fcomi
mov
lcall
outsb
mov
jno
sub
lret
iret
loope
cltd
xor
mov
shl
fbld
scas
out
bound
inc
mov
shl
jp
inc
dec
inc
scas
negb
and
mov
imul
shll
jo
dec
das
xchg
xchg
push
xchg
jnp
es
in
mov
cmp
mov
out
enter
sbb
lock
incb
rcll
mov
sub
movsb
jl
mov
inc
imul
sbbl
and
cmp
cltd
inc
push
lahf
sub
inc
outsl
call
sahf
add
lea
nop
dec
and
adc
add
pop
sub
arpl
inc
cmp
into
mov
jl
lods
mov
mov
sub
or
push
mov
jns
adc
and
orb
inc
call
ss
dec
jl,pt
loope
lret
movsl
sub
push
outsb
or
push
in
outsl
add
movsl
sub
and
sbb
inc
cmp
pop
hlt
lods
clc
jno
cmc
imul
and
push
push
fsubl
add
cmpsl
fnstcw
cmpsl
cs
ficoml
sub
mov
sub
sub
int
clc
sub
pop
dec
aas
mov
mov
xor
loop
cmp
scas
xchg
xor
push
imul
jnp
dec
cltd
std
mov
push
ficoml
jl
jnp
gs
jg
pop
das
std
mov
in
ss
lods
dec
jns
ficomps
adc
cld
pushl
daa
mov
sahf
sub
outsb
mov
mov
sti
jmp
pop
pop
roll
add
repz
inc
add
pop
in
mov
inc
enter
xchg
roll
cmp
and
mov
cmp
lods
movsl
add
xchg
or
hlt
mov
mov
pop
notb
shlb
insl
and
jns
pop
clc
in
jl
popf
add
out
aam
mov
rorl
pop
popa
mov
jge
inc
pop
xor
dec
cmp
insl
dec
daa
mov
jg
xchg
aam
sub
or
cmp
cmp
and
into
sub
pusha
adc
mov
xor
dec
imul
sbb
mov
push
push
out
pop
cmpsl
mov
fisubrs
ja
and
or
imul
adc
cmp
lock
lock
leave
mov
push
pop
push
lods
divl
cs
fwait
mov
push
sbb
iret
xlat
fidivrl
aad
mov
xchg
popa
dec
jecxz
sbb
mov
aas
movb
ret
out
loop
jg
jmp
call
movsl
and
outsb
lods
nop
mov
cltd
sbb
pop
jo
or
fstl
gs
icebp
xor
mov
ja
add
sub
cmc
pop
data16
mov
sbb
fidivrl
mov
mov
mov
xor
dec
repnz
xor
movsl
loop
mov
stos
lods
lods
fstpl
add
enter
or
je
lods
mov
add
add
adc
sbb
sub
push
sbb
stos
in
jl
cwtl
mov
stc
cmp
shlb
xchg
scas
jbe
inc
inc
sub
or
imul
mov
cmp
xchg
mov
inc
adc
push
leave
cli
push
outsl
lret
jecxz
lock
dec
cld
stos
cmp
insb
outsb
xchg
jge
add
mov
push
jmp
dec
xchg
lods
scas
mov
cmp
mov
adc
pop
push
xchg
mov
test
sub
add
inc
data16
and
das
jno
push
std
rolb
fcoms
and
ljmp
fistpl
or
mov
push
mov
xchg
and
arpl
testb
xlat
jae
adc
in
js
call
lods
jno
or
sbb
es
jne
js
inc
push
shll
mov
imul
adc
dec
outsb
call
adc
inc
jae
je
pop
dec
mov
and
pop
jecxz
push
jnp
mov
cmpsb
sub
push
imul
sub
mov
xor
into
test
dec
xchg
data16
mov
fimull
cli
jae
xchg
es
scas
mov
aas
mov
inc
es
div
and
xor
fsubrs
xor
cli
jmp
bound
or
stos
hlt
iret
popf
in
in
pop
add
jle
sub
pop
mov
mov
sbb
mov
lea
mov
dec
inc
xchg
mov
shrb
cmpsb
aas
xchg
cmpl
rcrl
mov
and
dec
in
or
ror
mov
pop
fists
in
fisttpl
push
xlat
push
stos
push
or
or
push
add
push
mov
cmp
lcall
lods
sub
mov
bnd
imul
js
jl
add
rcrb
cli
mov
subb
or
and
scas
loop
add
add
add
add
xchg
push
cmp
shll
les
pop
frstor
push
in
dec
cmp
xchg
inc
mov
scas
dec
sti
lcall
adc
outsl
imul
insb
test
pop
cmp
fcmovu
fs
out
lahf
jl
xor
popa
outsb
in
jecxz
mov
or
outsl
daa
repnz
stc
icebp
aad
mov
bound
test
daa
inc
in
cmp
js
jl
push
fdivrs
inc
mov
repz
dec
adc
xchg
inc
sbb
xchg
pop
sub
pop
cmp
cli
stos
shlb
mov
xorb
and
inc
clc
out
pop
mov
mov
sbb
aaa
and
pop
mov
and
add
inc
repz
lea
cmp
mov
push
lret
xchg
scas
push
sub
push
in
lea
sub
cmc
lret
outsb
cmp
add
add
lock
inc
sbb
jmp
les
xlat
push
pop
adc
in
mov
add
inc
xchg
std
xor
sub
add
mov
outsl
clc
mov
or
inc
sub
add
or
sbb
shll
inc
push
xor
lahf
sbbb
xchg
shll
iret
adc
add
sbb
and
inc
lds
clc
fwait
stos
or
dec
sbb
xor
xlat
insl
xor
les
jl
and
mov
divl
pop
rorl
les
jecxz
cmc
loope
sub
jne
sbb
push
pop
jb
je
cmp
fistps
or
lods
sbb
inc
lahf
mov
pop
arpl
xchg
mov
ja
pop
cmc
xor
add
mov
fisttpll
add
pusha
fimuls
jp
pop
data16
jg
mov
sub
push
leave
int3
daa
mov
dec
dec
xchg
jnp
add
xor
fcom
mov
loope
xor
addr16
lcall
mov
jge
lock
mov
imul
push
lods
dec
mov
cmp
mov
pop
popf
imul
ljmp
mov
xor
mov
lock
xchg
jl
dec
out
mov
mov
ret
lret
pop
xchg
shrb
rcl
push
sarl
enter
dec
loope
pop
adcb
pop
sub
mov
leave
jp
pushl
xchg
add
movsl
sar
lar
xchg
adc
inc
fdivp
scas
ja
inc
xor
arpl
lcall
scas
mov
adc
add
xchg
and
call
adc
xor
inc
iret
adc
fwait
push
faddp
dec
fstl
mov
subb
mov
mov
aas
sub
push
pop
bound
jb
xlat
scas
xchg
bound
jmp
xchg
mov
into
data16
or
sti
shll
subl
in
clc
repnz
pop
inc
fildll
lea
aam
sub
jmp
movsb
push
mov
ljmp
insl
push
sub
stos
pushf
out
scas
jecxz
lock
jmp
xchg
push
inc
add
mov
jl
mov
jae
ljmp
xchg
cmp
adc
mov
sahf
mov
sbb
insb
test
dec
sub
test
inc
xor
loop
sub
loop
mov
add
mov
xchg
sti
add
sbb
mov
loope
jge
jmp
nop
xchg
jb
mov
add
and
mov
mov
iret
sbb
data16
pop
xchg
ja
lods
cmp
shlb
imul
mov
mov
sbb
call
pop
lret
jb
cltd
outsb
adc
lds
mov
pop
add
jecxz
mov
pushl
add
scas
popf
pop
dec
repz
mov
cmpsb
or
pop
ljmp
lahf
jbe
xchg
xchg
push
push
aaa
add
into
jge
inc
out
orb
jl
push
dec
adc
inc
pop
rorb
inc
outsb
inc
mov
cli
inc
insb
lods
rol
inc
push
adc
cmp
stos
test
add
pop
and
push
jmp
pop
addr16
sub
pusha
imul
xchg
lods
mov
jns
jl
jge
adc
cld
xorl
fmuls
jnp
mov
jb
lods
xchg
mov
cmp
mov
aad
out
pop
inc
call
sbb
add
scas
cltd
cld
pop
mov
mov
popf
cli
leave
nop
stc
xchg
ja
add
into
mov
mov
mov
pop
sub
mov
mov
repz
scas
push
push
lcall
mov
lods
jo
mov
nop
xchg
mov
mov
fadds
push
call
les
push
aam
lcall
in
in
sub
xchg
stos
cmp
inc
je
ss
aad
outsb
leave
ljmp
pop
iret
out
sub
shll
cwtl
push
pusha
xor
mov
arpl
mov
ja
xor
inc
mov
sti
lcall
pop
jnp
and
mov
mov
out
frstor
aas
loope
dec
mov
mov
jno
int
std
ret
and
test
aam
pop
add
add
fldenv
push
arpl
mov
sahf
fistpll
jmp
rep
pop
add
cli
or
add
add
xchg
out
dec
data16
int
or
loop
outsb
pop
xchg
or
rcrl
adc
jl
insb
fidivrs
xchg
lds
mov
aad
ljmp
out
and
idivl
aaa
xchg
sub
push
pusha
loop
jl
gs
les
mov
push
nop
pop
testb
ds
add
pop
pop
enter
xchg
and
mov
dec
out
cmp
stos
cwtl
inc
mov
and
rorl
ljmp
int3
in
sub
xchg
test
in
test
out
test
mov
into
dec
popf
jae
mov
sub
sbb
fwait
jo
cmp
ss
incl
sbb
jl
pushf
pusha
fsubp
or
or
test
push
out
les
pop
popf
ss
dec
adc
call
dec
dec
mov
push
aad
mov
cltd
add
xchg
cmp
popa
loopne
loop
cmp
mov
sub
clc
mov
outsb
mov
ficompl
into
jae
test
sbb
add
mov
stos
jb
xchg
mov
iret
das
xchg
xchg
jo
jae
adc
in
mov
jb
pop
repnz
and
icebp
ret
les
icebp
inc
sbb
jle
jl
imul
push
sbbl
pop
inc
inc
ror
int3
add
cmp
jmp
inc
stos
pusha
std
mov
xchg
in
adc
addr16
je
jo
adc
xchg
mov
mov
add
sbb
sbbl
fwait
sbb
xchg
adc
lock
mov
fs
hlt
cs
out
testl
push
pop
or
cltd
pop
ss
out
lcall
mov
call
jl
shll
in
lods
repz
add
add
pop
in
xlat
mov
xchg
xchg
nop
and
daa
dec
cli
push
lds
dec
shl
mov
out
ret
or
push
cmpsb
loopne
out
jbe
add
lcall
pop
sub
jl
fmull
jg
sub
icebp
stc
sub
not
roll
adc
in
inc
aaa
pop
aaa
cltd
lock
mov
sbb
outsl
cmpb
push
pop
xor
and
push
xchg
out
or
cmc
pop
jbe
jb
loop
clc
mov
pusha
test
imul
cmp
aad
imul
adc
cmc
mov
sbb
adc
pushf
outsb
xor
add
cmpsl
push
jne
nop
aaa
int3
stos
fisttpll
jbe
dec
xor
push
lcall
inc
ss
and
ret
aas
push
mov
daa
fdivrl
ret
jae
test
mov
call
mov
mov
mov
push
cmp
scas
fisubrl
stos
mov
test
inc
sub
call
stos
ss
iret
inc
je
or
pushf
in
or
inc
stos
mov
fistpll
xchg
adc
sbb
pushf
cs
jbe
sub
jle
mov
or
jl
jg
pop
mov
movsb
and
pop
cltd
or
or
cli
cmp
mov
aas
cs
ja
cwtl
xor
lcall
sbb
jp
ds
ja
xchg
clc
cmp
mov
mov
loop
pop
popf
stos
push
mov
mov
shlb
pop
pop
jg
jns
sub
addr16
mov
ficomps
loopne
out
xor
pop
dec
jo
jp
loop
roll
xor
xor
imull
fisubrl
inc
sbb
ja
xchg
xchg
add
daa
outsl
sbb
lcall
xor
inc
adc
adc
jo
pop
and
inc
fcompl
inc
mov
jae
lods
ja
loopne
xor
jae
xor
cmp
fiaddl
fdivs
mov
adc
pop
xor
inc
sub
jne
sub
push
cmp
sbb
push
add
ljmp
addb
jns
sbb
sub
mov
dec
pop
pushf
lods
lret
dec
jmp
add
and
mov
xor
mov
in
jns
inc
mov
mov
insl
lahf
das
adc
adcb
jge
lret
lret
jnp
cmc
mov
jl
scas
rol
mov
fildll
cmpsl
sbb
xor
sbb
and
jge
das
and
or
in
mov
test
cmp
jmp
rcll
and
imul
fbstp
jnp
shrl
inc
lea
or
push
dec
fldenv
pop
popa
aam
or
inc
fimuls
addr16
cmp
sub
mov
xchg
insb
out
adc
es
jmp
ret
xor
lock
pop
outsb
xchg
cmp
pop
cmp
mov
sub
jno
addl
add
jg
pop
repnz
cmp
out
cli
and
pop
xchg
out
jns
loop
jp
xchg
xchg
push
int3
mov
xor
js
mov
xchg
mov
cmpsl
out
cmpsb
addr16
mov
adc
sub
or
scas
mov
mov
fiaddl
es
fisubl
gs
push
cwtl
xlat
push
dec
pop
rolb
sarb
xchg
test
add
xchg
add
movsb
jle
movsb
or
sbb
adc
and
in
cmp
ret
movsb
rcr
lret
dec
push
in
push
cmp
mov
xor
jnp
mov
rolb
rcrl
leave
inc
dec
repnz
lcall
push
xor
jg
xor
pop
cmpsl
mov
and
adc
fs
pop
sub
test
test
test
cli
pop
ret
aam
cmp
xchg
jns
xor
loope
cmp
clc
pop
fwait
dec
daa
mov
hlt
cmpsb
mov
movsl
sub
or
loope
shrl
pop
movsb
cwtl
lret
dec
insl
es
popf
xor
mov
repnz
mov
flds
sbb
mov
cwtl
cmp
iret
xchg
lea
jae
and
sbb
push
jp
pop
lds
inc
shlb
mov
ja
stc
xchg
outsl
or
iret
jp
shr
insl
ja
addr16
fisubs
sub
ja
cmp
inc
shl
mov
rclb
loopne
push
sub
fisubrl
pop
test
add
in
and
jge
loope
das
pop
jecxz
jb
and
xchg
push
sti
rolb
mov
pusha
push
add
add
jbe
jg
push
sti
cwtl
dec
test
dec
gs
cli
sub
ljmp
sbb
push
daa
fcmovnb
lcall
mov
fmuls
rorb
cmpb
mov
rcr
mov
jbe
xchg
push
jo
push
dec
in
xchg
popf
incl
test
inc
inc
mov
sub
push
xchg
popa
xchg
adc
dec
mov
mov
out
or
cmp
add
inc
dec
shll
dec
cwtl
mov
inc
int
in
dec
nop
xchg
mov
xchg
sbb
jae
xorb
push
dec
les
ret
insb
and
mov
or
dec
xor
jae
jecxz
mov
out
jbe
outsb
push
add
cmp
xchg
cmp
daa
pop
sbb
inc
insl
inc
jg
mov
mov
jne
iret
pop
jne
int
test
and
sbb
dec
gs
or
pusha
inc
xor
aas
stc
jmp
clc
rcr
cli
xchg
push
or
add
out
push
test
mov
subb
and
pop
inc
xor
cmp
or
adc
xchg
xchg
fsubrl
mov
adc
imul
xor
mov
enter
pop
mov
les
fs
jmp
or
in
aam
or
add
xchg
cmp
push
orb
mov
mov
mov
lret
loope
sub
daa
pop
and
adcl
xor
fcmove
mov
jge
ficomps
xchg
add
stos
mov
or
dec
cmp
insl
mov
xlat
mov
mov
std
xchg
addr16
push
pop
lea
mov
idivb
xor
test
aaa
cmp
push
sbb
movsl
ret
imul
sahf
cld
in
jns
gs
js
xor
adc
add
mov
mov
inc
daa
lds
mov
and
pushf
jle
pop
nop
and
or
lods
mov
jmp
lahf
arpl
outsl
adc
lcall
and
pop
add
cmp
int3
xchg
mov
xor
xor
push
dec
gs
push
adcl
jge
aad
movsl
mov
jg
cmp
scas
add
push
sub
ss
adc
jo
or
cs
insb
shlb
pop
incl
or
mov
xorb
push
cli
push
pop
and
inc
leave
ja
xor
pop
or
lods
subb
adc
push
and
cmpsl
dec
and
outsl
icebp
cli
add
cli
stc
inc
inc
sub
fisubl
lret
add
jmp
or
mov
pusha
mov
and
mov
mov
push
sbb
xor
xchg
loope
call
pop
insl
mov
pop
cld
inc
push
mov
ret
in
insl
pop
pop
sub
sbb
popa
std
push
aad
pushf
rcrb
and
inc
xor
loope
xor
xchg
cmp
enter
jne
loop
idivb
xor
xlat
push
lcall
xlat
push
cmp
fimull
movsl
mov
fisubrs
aaa
xor
mov
adc
sub
mov
repz
gs
test
cltd
fwait
push
in
imul
jp
andb
jnp
cld
xor
ja
cmp
pop
pop
sub
push
adc
pop
dec
jle
fwait
stos
clc
mov
jmp
and
cmpsb
ret
mov
cmp
jnp
xchg
ljmp
pop
ret
movsl
je
cld
cmpsl
out
adc
or
jmp
dec
cmpsb
cmp
int
ss
stos
xor
stc
fadds
pop
mov
add
mov
add
in
mov
xchg
loop
lea
das
outsb
xor
jns
or
movsl
or
add
stc
xchg
mov
mov
cmp
and
out
adc
xchg
pop
mov
mov
add
mov
shl
mov
adc
es
iret
lret
lea
mov
ss
loopne
clc
mov
or
push
mov
mov
enter
test
and
pop
pop
mov
subl
xchg
pushl
aas
pop
xchg
and
aaa
push
shl
lods
push
sub
cli
in
int
mov
and
outsl
int
and
xor
and
enter
testl
dec
aas
fs
outsb
and
mov
pop
popl
hlt
add
in
loop
lret
subb
cmpb
push
jne
sti
shl
add
repnz
das
xor
fwait
sub
jl
xchg
cmc
cmpsb
scas
pop
insb
adc
xlat
sub
int
pushf
jbe
imul
ret
dec
adc
sub
mov
bnd
rcrl
sbb
in
xchg
or
aam
ret
sbb
sub
and
int
cmc
negl
push
call
jmp
mov
and
xor
dec
push
adc
faddl
mov
movsb
outsb
mov
mov
pop
mov
or
mov
in
mov
push
mov
fdivl
cmp
arpl
xor
int3
bound
or
bound
inc
aam
adc
mov
jecxz
add
inc
mov
dec
lcall
add
mov
jne
or
add
xor
cmp
jo
or
shrl
and
and
mov
mov
ficoml
adc
sahf
xchg
xor
cmc
sbb
cld
mov
lods
mov
cmp
sbb
jmp
or
push
int3
push
xor
cmp
jnp
xchg
mov
popa
mov
cs
lret
xlat
pop
out
dec
cltd
and
xchg
fidivs
xchg
loopne
fistpl
hlt
pop
fisubl
sbb
or
jno
pushaw
or
dec
hlt
xchg
jge
pop
popa
push
scas
roll
das
xor
ljmp
cmp
and
test
in
fstl
sub
jmp
iret
xor
add
ja
mov
pop
sbb
pop
mov
aad
sbb
pop
shl
jno
mov
sbb
adc
arpl
lcall
pop
outsl
addb
cmp
pop
lock
rcrl
arpl
sub
xor
inc
and
mov
es
fdivs
lret
jb
mov
push
sbb
cmp
sti
iret
adc
mov
leave
std
iret
es
nop
mov
fmulp
add
in
mov
pop
out
jo
inc
ss
lcall
js
push
out
cmp
call
outsl
ja
fisttpl
pop
dec
sbb
mov
popf
pop
test
test
test
ret
xchg
mov
or
xor
xor
jp
aaa
out
jo
push
sub
pop
lahf
push
test
aam
sbb
push
shll
push
int
mov
and
into
fwait
mov
divb
lods
xor
mov
mov
imul
pop
repz
mov
jmp
mov
lret
fistps
sahf
push
mov
in
adc
sar
rcl
nop
mov
rorl
aam
test
out
out
inc
jae
adcl
bound
sub
and
jg
and
test
std
mov
dec
nop
stos
mov
imul
decl
out
shl
sarb
rcll
movsb
scas
push
mov
aaa
add
jmp
aad
push
add
inc
fstps
nop
mov
test
push
loope
lea
push
stc
orl
ficomps
out
icebp
push
sti
lret
xor
fwait
push
push
cmc
cli
lahf
jmp
cmp
xor
or
and
pop
arpl
mov
or
xor
sub
xor
pop
adc
cmp
int3
adc
sub
push
jno
cmp
pop
cmc
cs
jo
mov
out
repz
shll
mov
std
sahf
nop
hlt
adc
pop
les
int3
cmpsb
outsb
fsubs
inc
push
sarb
mov
mov
data16
and
incl
mov
jl
idivb
and
and
and
movsb
inc
testl
in
fdecstp
test
in
fisttpl
fisttpll
es
dec
push
jbe
hlt
xor
orl
cmp
xchg
or
lahf
aad
mov
jnp
movsb
test
mov
dec
ss
dec
fsubrl
push
clc
adcb
xlat
inc
mov
fimull
imul
add
jmp
adc
out
std
jle
lahf
jecxz
movsl
hlt
xor
dec
sbb
or
push
test
cmpb
out
in
out
jo
pop
mov
sbb
mov
jbe
jecxz
enter
and
sbb
mov
lret
fbld
adc
adc
cmp
andl
and
mov
inc
out
sbb
push
xorl
xor
movsb
pop
push
pop
xchg
iret
loopne
fdivrp
dec
testb
jae
adc
repnz
push
xlat
stos
or
jo
xchg
popa
out
pop
lret
out
cmp
icebp
decl
lcall
jnp
lds
data16
arpl
out
pop
mov
or
xchg
dec
sbb
lret
jns
mov
sarb
jns
cmp
xchg
sbb
pushf
arpl
test
pop
sub
mov
test
cmp
add
push
pushf
dec
stos
mov
push
pcmpeqd
inc
or
loopne
mov
sbb
mov
cmpl
pop
mov
sub
es
mov
ss
popa
and
sub
fs
lret
fidivl
jo
mov
push
mov
fwait
xchg
ficomps
dec
fstpl
xchg
aam
cmp
adc
ljmp
out
fcoms
fcoms
iret
xlat
mov
push
imul
and
std
cs
sbb
cmpsb
ds
outsl
addr16
les
stos
add
xchg
out
into
in
loope
or
add
jno
jle
dec
jbe
into
subb
repz
mov
lds
sahf
jne
ret
nop
dec
inc
cmp
push
mov
insb
cli
xchg
scas
pop
jle
push
mov
mov
insl
cmpl
es
push
fsubl
jg
cwtl
lea
loop
pop
testl
mov
and
inc
pop
xchg
dec
push
les
cmpsl
ret
aad
movsl
and
mov
mov
sbb
jmp
loopne
cltd
sbb
pop
cmpsl
idivb
pusha
jl
shrb
xor
insb
mov
sub
in
mov
inc
xchg
ficompl
jb
mov
xchg
jmp
inc
scas
dec
test
hlt
out
hlt
jnp
mov
ja
push
mov
xor
cld
lods
movb
stc
shll
out
inc
mov
ja
pop
mov
xor
add
sbb
cmpb
and
ljmp
add
mov
cmp
add
xchg
or
outsl
add
sbb
add
ret
xor
push
out
adc
sbb
sub
inc
ror
jbe
pop
in
or
vpsubsw
sub
cmpsb
leave
mov
loopne
test
mov
movsl
enter
push
outsl
add
loopne
ret
inc
ljmp
inc
lods
xor
dec
das
pop
push
mov
and
jp
jp
mov
jae
adc
cs
lret
aad
hlt
scas
mov
sti
sub
mov
rcll
dec
push
rcrb
popl
outsl
xchg
cmp
mov
mov
xorl
add
jbe
dec
scas
lret
es
fiaddl
push
push
pop
or
aaa
xor
adc
in
lock
ficompl
fdivl
ljmp
push
pop
sub
jae
fistl
adc
fsubrl
enter
sbb
cmp
bnd
push
ja
and
mov
stos
or
loope
in
out
insb
subl
stc
in
decb
jge
bound
push
cmc
mov
mov
psllq
mov
mov
clc
or
xchg
xchg
jo
int3
jp
xchg
push
xor
out
addr16
xchg
mov
jo
mov
shlb
inc
pop
or
cmc
dec
push
sub
fidivl
pop
sub
xor
sub
dec
ds
cltd
pop
lock
and
cmpb
sub
jl
mov
int
xor
xchg
test
xchg
test
mov
fistps
lcall
jno
insl
jae
popa
mov
push
push
lea
daa
jecxz
mov
push
cmp
bound
lds
fidivl
sub
dec
sub
adc
nop
loop
xchg
outsb
rep
clc
or
cmpsb
sub
mov
push
aaa
xor
inc
pop
test
nop
mov
fucomi
adc
sub
jnp
xchg
cmp
dec
pop
in
push
pop
stc
pop
xor
xchg
repnz
sub
xchg
inc
pop
push
lods
stc
sub
or
or
mov
lds
or
test
mov
sahf
mov
push
adc
add
incb
push
notb
loopne
icebp
xchg
out
in
bound
cmp
popf
mov
mov
and
fnstcw
pushf
fst
mov
loope
pop
dec
mov
enter
mov
fcmovu
jne
sbb
xchg
fiadds
mov
scas
fists
adc
add
xchg
dec
dec
out
pop
je
mov
scas
stos
aad
bound
push
xorb
lock
sub
iret
push
mov
lods
out
notb
into
cmp
out
add
jmp
xchg
aaa
cmp
sub
stos
mov
ja
jle
cmp
sbb
fs
sub
iret
or
pop
rcrl
dec
fucomip
cmp
xchg
icebp
dec
cmp
test
nop
mov
scas
mov
add
mov
xchg
mov
cmp
in
jae
and
push
cmp
imul
push
pop
sbb
xor
xor
outsl
out
sbb
mov
stc
dec
xor
sti
pop
pop
jb
mov
mov
xchg
sub
xchg
fisttpl
cmp
fsubrs
dec
jmp
inc
test
sti
jns
das
loop
sarl
inc
pmovmskb
lret
int
sub
lcall
sbb
in
in
aas
xor
test
inc
fwait
ss
je
popa
andl
xor
push
pop
push
je
jmp
cmc
cld
fwait
xor
aam
push
mov
icebp
sub
movsb
fsubrs
or
jmp
mov
out
mov
add
dec
add
add
jbe
pop
mov
cltd
jbe
pop
subl
jb
xchg
nop
mov
add
jp
lds
pop
test
gs
and
test
and
lret
dec
add
in
repnz
popf
in
cmpsl
mov
les
jp,pn
dec
ss
in
psrlw
rorl
push
push
cmp
jns
jg
test
mov
fisubrs
cld
mov
jecxz
test
and
sarl
cmc
sbb
aas
jge
pushf
mov
rcrl
push
pop
jns
adc
in
add
or
push
shlb
shlb
rorl
test
jbe
das
js
mov
stos
iret
sbb
out
dec
pop
fisubrl
xor
pop
xor
lods
dec
sub
mov
pop
push
mov
aam
ljmp
mov
dec
or
inc
jmp
imul
lods
xlat
sub
add
pop
gs
mov
paddb
mov
or
pop
jp
mov
clc
xor
pusha
dec
push
xchg
pop
out
stos
stos
xor
repnz
pop
fld
mov
add
mov
inc
xchg
mov
in
inc
addr16
inc
rcll
sub
icebp
xchg
cwtl
insb
nop
sarw
scas
and
xor
mov
ss
push
lods
push
les
push
fsubrl
loopne
lcall
add
push
iret
mov
outsb
mov
jge
inc
outsl
sbb
mov
insl
sub
popa
imul
loop
push
pop
test
in
fisubrl
push
fucom
xor
sbb
dec
pop
push
or
jle
lcall
enter
sub
push
xor
rcll
jae
mov
rolb
mov
clc
jbe
push
ja
cmp
jmp
jo
scas
dec
imull
xor
sbbl
xchg
and
ret
call
push
and
stos
sub
sub
add
mov
mov
sub
xchg
rcr
pop
push
jbe
adc
loopne
sbb
push
add
pop
fldcw
out
mov
decb
jp
xchg
add
call
pop
mov
inc
jne
dec
cmp
mov
mov
xchg
movsl
in
iret
ret
sbb
insl
xlat
xchg
out
ret
shll
ss
cs
sysenter
lret
sti
loop
xor
lods
cli
lret
popa
mov
nop
pop
adc
jmp
icebp
test
inc
iret
or
inc
pushf
mov
pop
in
popa
pop
add
xor
aad
sbb
js
pop
outsl
enter
pushf
js
sahf
mov
sbb
push
int
inc
iret
push
aam
push
aad
stos
jecxz
xor
sbb
jg
stos
or
inc
loope
xor
scas
or
cmpb
shlb
and
pop
iret
sub
lods
push
push
sahf
sub
mov
test
pop
or
les
cmp
aaa
call
mov
mov
jg
pop
sti
jno
clc
and
ljmp
add
je
mov
xor
in
out
xor
lea
pop
cli
gs
test
test
fnstcw
ljmp
mov
push
dec
push
mov
xchg
ds
int3
cmp
push
lcall
mov
cmp
scas
out
push
mov
push
xchg
addl
adc
loopne
pop
insb
jne
movsl
xor
rcr
pushf
rol
cltd
popf
insb
lret
lods
push
fnstsw
mov
dec
lahf
jle
cmp
stos
test
rol
dec
fwait
mov
add
cli
cmp
lea
aam
mov
sbb
shlb
mov
repnz
shrb
cmpsb
sub
nop
jne
out
and
fisubs
out
adc
jo
pushf
push
mov
out
inc
pop
jb
or
out
jl
mov
xchg
adc
or
push
movsl
popa
shlb
lds
xchg
jb
pop
sbb
jmp
jmp
sbb
push
xchg
mov
insl
mov
or
mov
mov
xchg
cmp
dec
aam
sub
or
cmc
dec
pop
push
ljmp
aad
mov
fisubs
inc
rorl
mov
lret
inc
push
jns
pop
testb
sbb
pop
int
dec
or
cs
cmpl
mov
and
decl
shl
add
xchg
and
pop
int3
sbb
loopne
popa
fmull
mov
sarb
stos
aam
xlat
pop
pop
dec
push
ja
out
repnz
mov
imul
adc
seto
inc
into
or
or
pusha
pop
xchg
and
mov
mov
inc
insb
cld
pop
fwait
mov
insl
dec
pop
mov
pop
mov
cltd
pop
repnz
iret
jae
lds
sub
dec
jae
ja
mov
mov
cmp
pop
mov
mov
sbbb
hlt
add
xchg
imul
jg
rcl
or
inc
cwtl
movsl
mov
jecxz
fistps
add
lea
adc
xchg
jl
sub
xchg
out
es
andl
roll
or
add
imul
add
mov
popa
movl
or
cltd
mov
xchg
std
mov
hlt
adc
stc
add
sub
clc
sbb
sti
outsl
add
lcall
jecxz
pop
sti
js
idivl
stc
mov
jb
in
add
popa
pop
pop
out
outsb
xchg
icebp
outsb
shrb
mov
mov
push
sub
and
stos
nop
fdiv
popa
test
into
jns
cmp
mov
scas
bnd
xor
pop
hlt
je
or
imul
mov
pop
push
push
inc
outsb
jnp
adc
jbe
or
loope
add
mov
mov
dec
iret
enter
adc
decb
adc
adc
and
scas
mov
dec
loop
pop
inc
bound
xor
mov
xor
ror
test
stc
jne
pop
out
or
mov
fistl
fwait
add
adc
roll
shl
imul
cmpsl
and
rcrl
sahf
fwait
insl
dec
mov
into
xlat
ja
sahf
popa
mov
es
dec
in
scas
mov
or
mov
lods
pop
cld
cld
scas
adc
sahf
or
pop
mov
inc
cmpsl
leave
mov
pop
jp
out
jne
sub
in
xlat
insl
mov
insl
insb
sub
pop
icebp
jne
dec
pop
and
call
cmp
std
leave
push
sbb
mov
aas
jecxz
sbb
push
xchg
push
sbb
imul
jmp
or
repz
and
push
mov
dec
sbb
adc
mov
inc
stos
sub
jbe
dec
int
cmp
loop
jae
ja
inc
scas
push
sbb
ja
lods
seta
or
mul
push
pop
mov
movsb
cmp
pop
fcompl
repz
jmp
xor
fxtract
and
inc
repz
scas
in
popf
movsl
xor
add
sbb
jae
outsb
lcall
daa
outsb
sbb
jmp
mov
cmpsl
sub
jo
inc
rcll
add
xchg
adc
push
in
xor
dec
js
outsl
xor
or
add
ret
cmp
mov
stos
mov
shlb
pusha
leave
lcall
and
jl
pusha
and
inc
loopne
and
jge
sahf
push
mov
mov
roll
mov
mov
ljmp
xchg
jo
pop
or
pusha
dec
xchg
gs
dec
sub
xchg
stos
pop
into
xchg
and
loope
cli
mov
ds
jge
cmc
pop
sub
pop
pop
mov
das
rcrl
pop
shlb
scas
ja
test
xchg
mov
aam
xor
push
lret
stos
pop
mov
cld
lea
xchg
scas
xor
sarb
add
in
jbe
xchg
cmp
dec
in
outsb
test
lock
adc
xchg
in
imul
inc
ss
addr16
cwtl
sarb
push
insl
hlt
push
cmc
cmp
xor
fdivrl
and
pushf
fcmove
dec
call
adc
xor
lcall
stos
inc
add
xlat
and
mov
xor
lret
movsb
push
pusha
repnz
mov
cmp
mov
out
jmp
popf
daa
les
jp
cmpsl
pop
dec
sub
and
pop
test
mov
sbbb
pushf
sbb
sti
jge
pop
cmp
filds
cli
mov
adc
movsb
inc
or
jnp
xchg
pushf
mov
or
or
lods
popa
out
mov
es
fs
xor
cli
mov
mov
hlt
add
cwtl
push
push
rcrb
mov
scas
dec
lret
xchg
mov
das
movsl
inc
loop
adc
je
xchg
das
mov
mov
push
fisttpll
leave
mov
dec
push
aad
dec
mov
int3
cmpsb
jne
jmp
inc
cmp
xchg
mov
push
dec
rorb
or
stc
sbb
push
jge
dec
cmp
xor
ja
movsb
xlat
push
outsb
bound
jne
ret
fwait
idivl
mov
xor
lret
xor
shrl
out
lods
sub
pop
aam
cmpl
mov
adc
push
push
sti
aad
mov
pop
dec
sub
clc
inc
out
cli
mov
and
aaa
ss
sub
ljmp
jle
pop
pop
push
xchg
cli
lods
push
mov
popf
sbb
sub
inc
jp
add
and
xor
loop
out
icebp
dec
jge
xor
add
sbb
outsl
bnd
shll
inc
addr16
sbb
frstor
jmp
shl
push
mov
and
xchg
shlb
add
mov
int3
inc
pop
pop
pop
add
pop
push
pop
fs
ret
cld
sub
and
dec
gs
inc
aaa
mov
and
jb
fiadds
xchg
cwtl
lahf
inc
shlb
ljmp
jne
lret
hlt
inc
sbb
fs
shll
push
leave
into
pushf
popf
jle
or
mov
mov
movb
lahf
arpl
repz
cmp
sub
outsb
push
xchg
call
mov
adc
jmp
in
xor
mov
call
mov
push
movl
and
sub
xorb
pop
test
rorb
mov
sti
ret
inc
jmp
adc
fsubrp
or
mov
insl
repnz
push
push
daa
ds
rcll
and
and
cmc
dec
mov
ja
xor
rclb
fidivrs
movsl
sub
mov
sarl
jmp
scas
test
mov
loop
mov
outsl
mov
cmc
push
or
mov
xchg
add
out
out
cmp
dec
mov
loopne
cmp
repnz
call
or
test
push
cmp
in
mov
lock
lods
mov
aad
pop
add
mov
push
mov
add
iret
aam
in
sbb
pop
lock
dec
cmp
ss
adc
jns
dec
or
adc
imul
mov
and
xchg
mov
inc
in
in
cmp
push
scas
xchg
push
leave
dec
dec
xchg
mov
imul
ds
int
adc
cltd
add
mov
mov
cli
and
js
mov
cs
shrb
iret
xchg
jne
sub
mov
push
mov
int3
mov
xchg
sub
loope
fsubrs
or
sbb
sub
dec
iret
inc
popf
mov
nop
daa
mov
stos
jge
jg
aam
sbb
rcl
daa
std
cmpsl
push
xor
fidivl
movl
sbb
std
into
in
mov
and
and
or
cmp
arpl
mov
and
adc
inc
loope
ficoms
inc
adc
ret
popf
push
hlt
cmp
rol
aas
cmp
mov
pusha
ret
imulb
push
xchg
and
or
mov
aam
add
add
imul
push
mov
pop
mov
mov
cltd
jecxz
scas
and
adc
popa
adc
adc
cs
ror
in
ss
cmpsl
lret
pop
fwait
pop
ja
dec
inc
cmp
xchg
fists
sbb
fstp
pusha
into
sbb
loop
xor
pop
or
push
xor
movsl
sbb
test
jno
in
sbb
aaa
and
sub
gs
sbb
push
add
push
out
push
push
and
adc
das
push
dec
popa
int3
loopne
ja
out
xchg
mov
jge
xchg
or
dec
jo
add
rcll
adc
out
sahf
int
jo
fsubs
pop
cmp
jo
nop
dec
jl
push
push
or
inc
das
inc
lods
xchg
icebp
push
test
mov
cmc
leave
fs
daa
lock
fsubrl
xchg
inc
mov
xchg
int3
adc
dec
gs
arpl
xor
sti
sub
dec
sbb
hlt
in
and
xchg
out
and
out
pop
sahf
outsb
cmpsl
push
sbb
fmull
push
inc
mov
das
mov
sbb
scas
scas
sbb
test
xor
cmp
mov
and
push
jle
arpl
xor
inc
sbb
lahf
scas
stos
mov
adcb
inc
push
dec
or
hlt
cld
or
jge
mov
cld
or
sarl
adc
mov
adc
push
and
shl
loope
pusha
dec
scas
dec
fnstenv
dec
push
in
or
add
out
lcall
jg
mov
test
pop
xor
pop
ljmp
push
add
push
push
sbb
fwait
or
sbb
sti
sbb
jmp
push
sub
cmp
adc
mov
dec
shll
fstpt
lods
call
rcrb
cltd
cmp
sub
mov
add
cmp
mov
lret
in
mul
push
leave
outsb
ja
jns
push
cltd
popf
cmp
shrl
popf
incl
adc
arpl
mov
lods
mov
jae
mov
je
sarl
mov
vphsubdq
pop
lds
or
mov
inc
adc
inc
pusha
je
test
call
pop
test
stos
shrl
shrl
mov
or
sub
pop
jns
lea
cwtl
aad
or
les
pop
loopne
pusha
mov
or
sub
push
jb
pop
cmp
shrl
jne
call
xchg
sub
hlt
loop
dec
bound
out
jno
std
addl
aaa
rorb
push
into
sub
pop
lea
or
xchg
mov
push
mov
rolb
test
cwtl
sub
int3
fdivrs
popa
xchg
jb
iret
in
in
rcrl
adc
cmp
mov
xor
in
add
pop
scas
cld
inc
and
lea
adc
ljmp
cmp
sbb
xchg
jmp
xor
jo
pop
adc
cld
popf
arpl
dec
jecxz
movsl
and
pop
jg
out
lea
mov
imull
dec
inc
cmp
lods
iret
cmpsb
push
or
int3
push
inc
inc
les
cmpsl
and
lods
add
and
sahf
or
aam
inc
cli
iret
adc
add
sbb
mov
xor
fsubs
test
inc
jge
enter
xchg
cmp
xchg
jmp
das
cmp
ds
ja
add
cwtl
sub
das
xchg
or
inc
cmp
add
gs
adc
jno
ljmp
cmp
inc
in
mov
jb
push
jne
jb
aam
fnstenv
mov
aam
xchg
xchg
xor
pop
mov
and
cld
xor
jae
gs
mov
jnp
xor
lret
mov
ljmp
mov
out
dec
sub
mov
aas
xorb
mov
xchg
into
ret
jae
addr16
push
and
aas
and
mov
in
insb
aad
mov
push
cwtl
pushf
lahf
or
cmp
test
cmp
jnp
xor
in
popa
movsl
xchg
xchg
rcll
shr
decl
add
fdivr
adc
outsb
add
fwait
mov
sti
jnp
inc
push
or
sub
nop
loop
inc
sub
cmp
repz
cmp
loope
and
jecxz
dec
fcmovu
push
pop
jmp
pop
adc
fldl
lds
jp
push
fidivl
mov
add
mov
aas
xchg
pop
pop
call
cmp
fs
insl
pusha
addr16
pop
js
les
pop
sbb
mov
fmuls
lret
aam
xchg
into
pop
xchg
and
push
xor
aam
scas
pushf
push
fstps
sbbb
bound
insl
dec
leave
test
loopne
arpl
or
shll
mov
sbb
imul
call
aad
in
dec
mov
stos
insb
lock
cmpsl
rcr
decb
fwait
sbb
push
sar
scas
out
lds
push
pop
addr16
aad
jae
mov
popa
pop
rorb
popa
mov
sbb
outsb
xchg
bound
sbb
loop
out
mov
mov
pushf
sub
mov
xchg
dec
adc
movsb
mov
mov
mov
fs
sbb
bound
mov
cmpsb
aaa
inc
inc
add
jl
sbbl
ja
dec
cltd
scas
push
cmpsb
mov
adc
pop
fists
pushw
in
lods
imul
push
xor
add
dec
arpl
les
push
inc
into
jbe
xchg
mov
fidivl
loopne
scas
xor
out
mov
pushf
push
add
aaa
int
cmpb
cmp
xor
xor
lret
push
xor
repnz
mov
pop
inc
xlat
xor
aam
loop
out
mov
add
mov
mov
jecxz
dec
imul
in
repnz
mov
adc
jle
xor
cli
mov
or
out
insl
mov
in
mov
incb
pop
adc
jne
imul
pop
jmp
dec
push
insl
out
xchg
jns
or
sbb
aaa
jae
jg
add
shll
inc
mov
pop
popf
mov
arpl
cmc
filds
pop
adc
adc
lea
jmp
pop
cmpsl
pop
jmp
add
mov
sti
faddp
xchg
mov
fisubrs
push
xor
test
andb
xor
rolb
cmp
sub
int3
pop
addl
mov
mov
dec
mov
std
idiv
mov
pop
jbe
repz
jmp
sahf
je
lock
dec
sub
xor
jmp
aas
insl
or
xor
enter
int
test
mov
mov
into
push
loope
test
and
push
ficoms
shlb
mov
ret
and
lods
xorl
stos
fsts
outsl
aas
popa
sarb
jnp
xorl
outsl
arpl
divb
out
and
mov
jnp
xor
dec
pop
mov
test
sub
pop
mov
incl
mov
sub
xor
fidivrl
push
and
inc
xchg
jle
shr
cmp
stos
enter
push
mov
mov
rcr
lea
test
fisubrs
dec
fcoml
jno
mov
icebp
mov
jle
sub
cmp
mov
adc
bnd
popf
lcall
dec
sub
sub
pop
push
mov
jmp
gs
xchg
in
dec
es
cltd
jns
cwtl
sti
inc
loope
dec
jns
xor
aad
pop
test
push
pusha
xorb
xchg
xchg
in
fcmovbe
scas
pop
cmp
or
lret
test
dec
jge
or
gs
je
out
insl
add
or
cmp
out
rcrl
out
aam
sub
lods
lods
icebp
mov
xchg
in
mov
jl
psubw
mul
cmp
int3
cmpsl
daa
jmp
lcall
imul
mov
add
test
jecxz
scas
ficomps
out
or
sub
push
pop
lock
in
fwait
rcrl
aaa
mov
fbld
cmp
imul
mov
sahf
jnp
mov
mov
lock
test
divb
and
jo
imul
dec
pop
lret
mov
xlat
add
lods
int
stc
enter
ss
pushf
test
mov
sub
inc
cld
xchg
pop
clc
and
push
je
int3
push
test
clc
fistps
xchg
fs
les
or
mov
notl
add
cwtl
xor
repnz
push
xor
aad
xor
dec
fidivrl
push
add
sub
mov
fwait
ret
iret
orb
dec
fiaddl
repz
daa
fs
and
lods
push
and
iret
es
sbbb
fwait
sub
int
in
scas
sub
cld
mov
and
out
push
jns
push
jns
xchg
stos
dec
test
test
jle
inc
sti
push
fsubp
jo
ret
jmp
dec
pusha
xor
sub
push
jno
in
loope
pusha
add
xchg
adc
or
enter
mov
mov
shrb
adc
dec
cmpsl
aas
fdivl
and
adc
sbb
les
imul
int
das
flds
fbld
xchg
stos
fnstcw
std
dec
lods
pop
jns
push
scas
rorl
int3
xor
jge
dec
stc
data16
push
dec
call
add
push
pop
xor
mov
push
pop
mov
push
xchg
xchg
std
sahf
mov
jmp
sbb
pop
adc
pop
pop
and
insb
out
lahf
popf
and
mov
movsb
mov
cmpsb
in
jl
lock
lret
push
jmp
jl
pusha
pop
les
movsl
add
xor
out
mov
popa
push
shlb
dec
or
pop
mov
xor
push
movsb
iret
test
pop
sub
push
addr16
xchg
add
mov
mov
mov
push
bound
mov
cmp
sub
or
lahf
stos
data16
flds
imul
mov
xchg
push
aad
xchg
xor
nop
cmp
popa
mov
jb
aam
cmp
dec
mov
repz
sub
cmp
out
adc
std
ret
adc
sbb
or
mov
arpl
call
inc
fstps
pop
addl
push
out
push
iret
push
jecxz
adc
push
das
mov
add
mov
dec
jg
hlt
roll
mov
mov
push
out
mov
enter
mov
leave
mov
js
or
std
mov
lods
movsb
xchg
jmp
inc
mov
sub
xchg
xor
push
lahf
xchg
xchg
test
mov
into
jae
fcoms
and
mov
pusha
add
movsl
pop
repz
imulb
leave
pop
adc
inc
add
sbb
imul
mov
jle
loopne
repz
add
dec
cld
or
push
test
in
jns
mov
cwtl
push
mov
stos
adc
bound
mull
add
jns
loopne
mov
sbb
xchg
jbe
icebp
push
mull
fdivrl
cmp
jmp
mov
dec
mov
mov
or
cmc
popf
cwtl
lret
cmp
cltd
mov
xchg
int
inc
inc
add
fnsave
scas
mov
xchg
xor
dec
jbe,pn
lret
js
fwait
mov
lret
insb
pop
mov
faddl
pop
mov
imul
mov
stos
mov
lods
test
cmc
lods
push
aad
int
in
lds
sbb
loope
sub
fwait
cmp
jmp
cmp
in
mov
incb
mov
aam
push
mov
cmpsl
in
pop
mov
dec
mov
jmp
dec
movsl
in
into
lock
jl
icebp
popa
or
mov
mov
mov
dec
mov
insl
outsb
cmp
dec
adcb
pop
mov
bswap
stc
fdivs
xchg
adcl
iret
shrb
pop
push
ret
jb
bound
lret
insl
test
test
mov
std
imul
push
fsub
xor
rclb
jo
cmp
fwait
std
movsb
pop
out
mov
and
xchg
sub
mov
loopne
lds
or
push
ret
lcall
add
mov
incl
cmpsl
pop
push
cltd
sahf
sub
xchg
cltd
cmp
pop
test
xchg
adcb
pop
mov
testl
decb
jae
pushf
pop
pop
jne
push
push
test
les
sti
jecxz
jne
push
sti
ret
xchg
fs
in
sbb
xchg
iret
xchg
in
mov
jbe,pt
add
inc
push
movsb
adc
cwtl
xlat
loope
pushf
add
dec
outsb
pop
popa
xor
mov
pop
movsb
add
cmc
daa
ss
inc
cmp
jnp
fidivrl
pop
inc
mov
int
shll
sbb
push
addr16
daa
pop
movsl
jbe
repnz
xor
shl
jmp
sub
ret
icebp
fdivrl
push
push
pusha
push
in
adc
popa
in
lret
andb
sub
xor
leave
fcomps
rcl
add
push
jne
inc
jno
mov
inc
sbb
mov
je
mov
ljmp
xchg
dec
pop
mov
jle
lods
push
pusha
int3
pusha
push
sub
cmp
loopne
lahf
gs
jle
ja
mov
mov
in
mov
xchg
mov
popa
push
add
inc
inc
add
jo
hlt
add
movsl
dec
cmp
pushf
ja
jecxz
push
mov
jbe
sbb
dec
cmp
pop
mov
mov
mov
xchg
adc
popf
jns
mov
mov
dec
cmp
mov
data16
dec
shl
mov
xchg
and
cs
clc
lret
lahf
dec
xchg
fstpt
fwait
shll
add
push
popa
cltd
rcl
push
sarl
dec
xchg
mov
scas
insl
adc
les
mov
push
inc
pop
mov
push
loopne
ljmp
mov
inc
or
sbb
jge
fsubrs
xchg
aam
js
lea
jbe
fsubl
or
xchg
sub
sub
jo
cmp
sbb
or
insb
sub
pop
pop
lcall
ljmp
mov
pop
jb
jb
jo
loope
shll
xchg
ljmp
rorl
lea
pop
xor
add
mov
movsb
mov
das
repnz
lahf
mov
dec
out
push
outsl
jecxz
pop
test
xchg
stos
or
lock
push
or
push
rcpps
pop
insl
pop
in
add
jns
negl
sub
mov
out
xor
sbb
aad
mov
jle
mov
cmp
imul
mov
jnp
and
out
imul
mov
push
aad
jae
imul
popa
dec
lret
jp
pop
pop
pop
push
movsb
pop
inc
jmp
or
stos
out
pop
jae
xchg
mov
ds
xor
mov
addb
dec
sbb
and
inc
cli
daa
mov
stos
ss
xlat
aad
mov
ret
xchg
inc
push
sub
jl
inc
add
dec
loope
sbb
icebp
cmp
call
and
xor
dec
add
push
sbb
push
stos
mov
imul
add
and
push
jno
jbe
lret
jmp
call
idiv
mov
mov
xchg
jl
aad
xor
mov
scas
pop
pop
sarl
pusha
push
imull
push
adc
and
sub
das
ss
push
and
inc
mov
inc
jge
xchg
iret
ss
mov
cmp
adc
mov
sub
xor
inc
pop
cmpsl
ffreep
dec
push
cwtl
std
ficompl
or
shll
mov
cmp
rolb
dec
xor
lea
cmp
xchg
pop
sub
repz
pop
xchg
les
add
rcrl
jge
dec
insl
icebp
lret
es
js
jo
cmp
ror
scas
sbb
jnp
pop
mov
xchg
sbb
ljmp
add
xchg
cs
jle
scas
push
aad
sbb
in
sbb
dec
add
sarl
mov
jmp
rcrb
mov
adc
pop
out
push
out
mov
dec
jmp
test
sbb
cmp
cmc
pop
jp,pt
addb
test
pop
cmp
inc
mov
add
add
outsl
inc
xor
push
lds
mov
test
dec
int3
test
sub
lods
in
loop
sub
add
lea
in
pop
sub
mov
sar
ljmp
mov
dec
add
dec
dec
sub
sub
xchg
sbb
mov
int
pop
shll
shll
shlb
addr16
or
in
xchg
xchg
jbe
mov
push
gs
xor
mov
cmpsl
cli
loope
int
xchg
adc
je
mov
aas
jo
test
lods
jns
mov
xchg
sub
shl
xchg
jl
scas
vpmacssdqh
loopne
jns
call
in
adc
fsubrl
jo
inc
or
mov
call
aad
fimuls
sarl
jcxz
push
inc
xchg
insb
inc
stc
popa
and
or
xor
enter
pop
xor
xchg
mov
lea
shlb
cld
mov
inc
and
in
and
dec
jle
jns
pop
hlt
xchg
out
imul
cld
ds
fsubs
jae
test
xchg
fstpl
dec
xchg
imul
dec
imul
or
sub
cltd
add
and
rcl
iret
repnz
mov
cld
pushf
sub
daa
cli
mov
inc
int3
cmp
pop
mov
xor
jl
pop
mov
movhps
movsb
vmwrite
icebp
adc
mov
pop
and
rclb
sub
add
es
sbbb
inc
push
rcr
jne
mov
imul
enter
mov
add
iret
jge
repz
dec
push
cmc
call
cmp
adc
or
je
and
lods
push
inc
sub
mov
add
push
or
test
outsl
fcoml
sbbl
int
sbb
out
mov
xchg
sbb
shl
mov
arpl
cmp
pop
insb
lock
call
mov
lret
rolb
fcmovnu
pop
test
int
insb
sub
test
mov
sarl
pop
clc
xchg
and
lods
insb
in
aad
lock
or
imul
fnstsw
in
mov
add
xchg
shrl
stc
aam
fsts
adc
rcl
or
lret
je
mov
xchg
and
loope
lock
ret
xor
mov
add
cmp
cmp
ljmp
std
out
into
ret
jo
shrl
sbb
and
xchg
loopne
mov
daa
addr16
orb
ret
fimuls
fwait
and
out
sbb
popf
aam
push
push
lock
xchg
sub
push
mov
mov
fmull
repz
inc
insl
sbb
xchg
push
xchg
sub
and
shlb
or
mov
or
lds
pusha
ds
xor
out
pushf
pop
push
fnstsw
jnp
sub
dec
sbb
mov
sbb
inc
daa
loopne,pt
pop
sbb
fs
dec
arpl
nop
cmc
cmp
aad
leave
stos
dec
shrl
daa
push
cmp
xor
inc
mov
mov
mov
xchg
push
xchg
push
ror
aas
inc
in
daa
push
pop
inc
xor
lahf
dec
inc
xor
cmp
mov
dec
adc
stc
mov
setne
bound
popa
shrl
int3
sbb
in
mov
push
sbb
testb
dec
out
js
xchg
adc
popa
cmp
lea
pop
add
mov
and
scas
pusha
cmp
jl
inc
arpl
rolb
pop
dec
daa
jl
or
fisttpll
repz
inc
in
call
mov
gs
sbb
xchg
in
dec
sub
jne
lods
jno
fistl
mov
or
xchg
and
daa
enter
fcomp
sub
push
mov
inc
dec
mov
fcomip
mov
xor
mov
inc
aaa
mov
pop
fstpt
pop
stc
mov
out
jae
jb
insb
rclb
jl
inc
add
movsl
inc
mov
outsb
mov
adc
mov
mov
lret
xor
ja
xchg
iret
cmp
je
adc
or
adc
icebp
push
in
pop
mov
add
ret
dec
push
or
dec
mov
inc
cmpsb
repnz
push
xor
lret
cwtl
mov
pushf
sbb
or
insl
mov
jns
in
lret
mov
adc
loop
fidivl
dec
lcall
lret
mov
dec
cwtl
js
add
sbb
mov
push
sbb
pushf
push
sub
inc
and
jae
fldcw
mov
inc
add
out
cs
insb
ljmp
jmp
mov
insb
push
outsl
hlt
insb
xchg
and
ja
mov
xchg
fildl
jg
add
sbb
lea
and
fisttpll
jp
outsb
or
data16
pop
scas
mov
sub
pushf
push
sbb
enter
or
sub
sbb
mov
sahf
leave
adc
outsl
enter
test
cmp
jp
sub
or
cwtl
sbb
out
or
ljmp
lds
dec
add
add
cmp
xchg
in
pop
outsl
aas
mov
sbb
fdivrp
gs
sub
mov
in
cmp
inc
mov
outsb
ja
mov
fdivl
cwtl
xor
push
or
lods
add
push
xor
scas
std
add
dec
sbb
jl
enter
jnp
mov
xor
cs
pusha
les
pop
adc
or
lcall
cli
fidivrl
enter
cmp
jg
movsl
andl
out
repnz
add
ljmp
lods
ret
mov
mov
lahf
imul
test
jge
nop
and
mov
in
pop
jb
test
ret
inc
xor
fs
pop
mov
jp
push
in
out
cmc
and
push
inc
push
stos
pop
fcoms
daa
and
das
xor
cmp
fiadds
inc
or
stos
insl
dec
sub
cmp
sbbb
push
dec
loopne
ror
jno
les
lret
push
stos
orb
nop
jmp
mov
sbb
dec
push
bound
jmp
int3
jne
js
sub
xchg
lret
jbe
nop
mov
push
mov
mov
test
push
rcrl
ret
sbb
popf
movq
insl
jl
sti
loop
ss
inc
aaa
mov
jmp
fisttps
mov
loope
add
lock
int
xchg
mov
popf
dec
pop
xor
mov
sbb
jae
jp
sbb
sbbl
sub
je
xchg
jb
lds
xor
into
outsl
rclb
pop
test
mov
inc
xor
pusha
add
enter
sub
fadd
xchg
aaa
adc
lret
sbb
punpckhwd
pop
adc
stos
shrb
lea
mov
nop
jbe
test
int3
lock
push
fstpl
insl
sahf
enter
ss
mov
jmp
ljmp
leave
fsub
cmp
pop
push
clc
inc
idiv
outsl
les
outsl
xor
push
stc
push
xchg
lcall
cmp
scas
mov
cmp
inc
in
jo
sbb
xchg
into
and
imul
xlat
adc
lret
cmp
mul
adc
cmp
mov
xchg
pop
push
outsl
mov
ret
dec
ret
ja
jb
add
push
and
fdivrs
inc
lcall
popa
lods
mov
insb
mov
pop
shlb
cmp
adc
mov
sahf
ss
xstore-rng
cmpsl
fdivr
aad
out
sub
je
in
inc
lret
xor
add
mov
xchg
adc
leave
mov
and
dec
push
sbb
rcll
inc
pusha
dec
lahf
repz
mov
and
adcb
pop
out
into
jne
repnz
push
xor
push
pop
std
jnp
push
in
xlat
jecxz
out
and
pop
mov
fimull
movsl
mov
inc
add
pushl
xchg
jmp
xor
sub
xor
in
mov
xchg
xor
loop
movsb
addr16
data16
add
out
xchg
aas
jmp
popa
mov
dec
pop
test
mov
clc
cmc
sub
insb
xchg
mov
pop
fcmove
xchg
mov
cmp
push
imull
mov
jnp
xchg
xor
sbb
ja
mov
xchg
fldl
or
sti
in
or
pusha
pushf
jmp
das
fs
inc
fimuls
xchg
sbb
push
sbb
mov
sbb
andps
lret
je
sub
sbb
enter
test
test
je
loope
pop
sbb
in
inc
lcall
stos
mov
push
cmc
jle
cmp
cmc
cmp
pushf
rcrb
shr
push
insl
xor
imul
pop
leave
aam
loope
inc
and
test
arpl
pop
scas
into
push
dec
inc
lock
outsl
sub
insl
and
pushf
or
gs
xchg
xor
xchg
dec
sbb
sub
nop
lock
fsubrp
test
xor
inc
fsubrl
das
inc
pop
arpl
movsb
adc
aad
loope
push
lds
pop
push
and
pop
cmp
int
cmp
les
jecxz
xor
test
xlat
or
dec
iret
fcoml
pop
outsb
ficoms
mov
hlt
test
mov
shrb
outsb
insb
inc
movsl
xor
sbb
add
pop
cli
sbb
outsl
mov
movsb
jbe
mov
dec
pop
dec
cmp
stos
sbb
movsl
pop
mov
xchg
lahf
test
test
and
mov
imul
ljmp
sub
adc
imul
jb
lcall
sub
mov
or
jns
popa
mov
aam
jecxz
sbb
lods
iret
and
sbb
hlt
cmp
pop
adc
andb
mov
jle
rorl
sti
ljmp
cmc
int3
sub
add
push
enter
or
arpl
push
dec
scas
pop
inc
jle
mov
mov
xlat
cmp
push
lock
scas
add
testl
sti
nop
shll
arpl
fadd
mov
sarl
dec
mov
addb
lret
rol
scas
shll
mov
xor
jp
and
or
add
xor
subl
xchg
hlt
int3
mov
nop
or
jp
xchg
shrd
pop
dec
popf
daa
mov
imul
pushf
xchg
int
jge
mov
cmp
mov
into
cltd
mov
rcr
xor
in
mov
add
cmp
or
loop
arpl
in
mov
inc
sub
mov
adc
ficoms
pusha
jle
push
jp
pop
pop
xor
sbb
pushaw
inc
xchg
pop
xor
jno
xchg
int
lahf
nop
pop
ret
adc
addr16
cmp
pop
add
insl
and
pop
stos
sub
xchg
sti
mov
cmp
lds
pop
mov
sbb
dec
jo
or
jg
jnp
push
cmp
movsl
and
add
les
and
or
int3
flds
outsl
scas
inc
inc
cltd
icebp
shrl
jle
mov
fstpt
mov
push
xor
mov
push
cli
inc
or
mov
inc
pop
adc
mov
out
push
sahf
adc
js
jmp
les
pushf
scas
or
mov
iret
enter
add
mov
pop
scas
aaa
in
lods
outsl
and
xor
mov
sbb
cmp
lcall
inc
lcall
mov
aam
jg
add
fldl
xor
mov
push
cmpsb
shlb
ds
jle
sub
in
movsl
pop
xchg
repnz
stc
mov
or
xlat
lea
lds
adc
dec
and
aaa
mov
rcrl
movsl
mull
xchg
frstor
push
xchg
inc
sub
sbb
in
dec
mov
sti
pop
xlat
sbb
mov
pop
fistpl
xor
out
mov
es
mov
bound
mov
xor
movsb
sub
test
push
pop
jmp
aaa
adc
xor
popf
xchg
mov
dec
sti
push
push
loopne
and
movsb
mov
dec
outsb
add
scas
into
dec
in
lret
push
add
mov
ret
leave
jmp
inc
and
rcrb
mov
rolb
test
fs
push
or
dec
inc
pop
insl
pop
adc
mov
mov
inc
out
pop
and
add
sbb
fldl
repnz
sub
aad
adc
cmp
ja
push
hlt
rorl
add
lds
xchg
in
aas
pop
jmp
mov
bound
jge
sbb
je
push
inc
lcall
loop
pushl
aad
test
cmp
inc
mov
in
mov
mov
and
es
inc
mov
or
dec
push
int3
into
fildl
pop
pop
lea
test
adc
movsb
cmc
outsl
mov
mov
pop
cmp
xlat
fwait
xchg
pop
mov
outsb
call
imul
stc
adc
inc
xor
pop
jb
push
xor
inc
inc
and
mov
adc
jno
addr16
push
ljmp
js
cltd
adc
mov
hlt
xor
xchg
in
out
addb
xchg
xchg
or
mov
shll
sub
out
shll
adc
dec
push
adc
sub
and
sub
dec
xchg
mov
mov
cwtl
fisubrs
aam
mov
mov
push
lcall
nop
xlat
int
in
repz
test
and
add
mov
testl
add
out
push
repz
arpl
fcomps
loopne
and
jl
es
adc
adc
push
inc
xor
jmp
lods
mov
popa
mov
or
outsb
clc
cmpsb
cltd
lret
push
sub
subl
jns
dec
jno
jp
lods
adc
ja
or
dec
mov
add
insb
test
push
in
sub
xor
xchg
test
pop
scas
lock
imul
push
sbb
sbb
lea
and
rorl
jp
out
adc
inc
add
push
push
subb
pop
jno
in
push
inc
jns
mov
clc
out
repnz
out
jae
hlt
mov
push
lock
or
jns
mov
mov
pop
mov
fisubrl
or
jae
pop
xor
pusha
cli
loope
mov
out
into
jb
inc
bnd
xchg
sbb
cmp
in
cld
pop
mov
pop
jg
loop
sbb
cmp
pusha
push
adcb
add
rcr
inc
sbb
inc
mov
fwait
sub
push
stc
and
mov
push
lea
push
in
movb
cmc
sub
insl
mov
jb
inc
inc
cmp
and
mov
lret
sbbb
pop
push
mov
xchg
bound
sarl
add
ljmp
incl
fs
rorb
scas
mov
mov
cwtl
xchg
cmp
jmp
xor
jb
sbb
clc
andb
dec
pop
movsb
cwtl
outsl
sbb
aam
aam
adcl
decb
loope
cmc
les
ljmp
pop
je
or
insl
into
xor
into
and
push
sub
gs
inc
dec
or
ss
pop
aad
dec
push
clc
mov
xor
lret
lcall
push
sti
mov
sub
subl
aas
fldl
cmp
mov
fisubrl
jg
in
jbe
inc
jns
pop
pop
iret
gs
addr16
sti
dec
push
mov
sub
arpl
add
and
xchg
stos
insl
ja
rclb
inc
decb
cmc
bnd
in
in
jg
jl
fs
mov
popf
add
lahf
dec
mov
popa
movsb
call
sbb
sbb
xlat
icebp
and
pop
add
gs
sbb
scas
mov
mov
and
xchg
popa
cmc
push
hlt
cmp
sub
cld
jge
aas
xor
scas
pop
cltd
add
mov
lcall
mov
jns
movsb
fs
push
inc
je
mov
lret
aaa
jge
pop
lods
test
xchg
iret
add
sbb
push
sub
mov
addl
repnz
xchg
daa
dec
push
mov
xor
rcll
mov
xchg
mov
jb
jmp
rorb
jb
das
pop
stos
and
nop
cmp
orl
insb
push
call
or
testb
fwait
sarb
dec
test
jg
pushf
xchg
ds
testl
and
stos
sbb
pop
cmpsb
pop
cmp
mov
jmp
push
stc
ss
outsl
jl
or
xchg
xchg
jno
push
rol
xchg
adc
mov
mov
mov
or
movsl
jbe
repnz
jmp
enter
clc
push
inc
xor
jo
hlt
cmc
popf
adc
xchg
mov
push
enter
lahf
pop
inc
jne
mov
xchg
jg
enter
lock
inc
mov
dec
mov
push
cmc
fsincos
cmp
fnstenv
push
xor
fldpi
and
decb
mov
mov
mov
lock
push
jmp
xchg
arpl
inc
mov
pop
leave
mov
cmc
lahf
inc
fidivrs
hlt
inc
ljmp
ljmp
mov
fadd
or
pop
frstor
into
pop
sbb
cmc
sub
fsub
sbb
mov
gs
sub
sub
sbb
iret
daa
add
mov
mov
sbbb
fwait
lea
push
fldenv
xlat
mov
jae
xorl
stos
decb
test
push
push
faddl
and
xchg
or
mov
mov
loope
aad
jge
push
push
push
cli
dec
dec
ja
setg
orl
xor
out
pop
leave
jo
imul
clc
dec
jnp
call
inc
jg
popa
add
arpl
mov
mov
jge
jnp
jno
mov
fwait
mov
dec
out
pop
shl
sub
and
rolb
mov
mov
inc
fwait
sub
xor
out
nop
jns
loope
je
jno
loope
outsb
repz
add
inc
lahf
mov
lds
dec
out
in
sbb
xorb
std
insl
mov
and
sbb
out
int
jno
mov
jne
repnz
les
or
nop
cli
call
push
mov
dec
ja
bndstx
movb
and
and
and
adc
aad
mov
xor
pushf
xor
cmp
fwait
inc
sub
add
xchg
push
sbb
mov
jle
push
sub
lea
dec
xor
sub
jae
aas
and
lea
mov
pop
jmp
mul
in
xchg
cmp
lock
lcall
pop
push
push
mov
fnstsw
test
loopne
lahf
mov
imul
not
inc
inc
add
in
mov
dec
out
cvtps2pd
shlb
jne
push
jne
fiaddl
dec
mov
xor
or
test
dec
fdivrs
imul
xor
push
sub
jo
push
scas
in
push
lret
mov
pusha
mov
and
daa
popf
jge
push
scas
mov
push
adcb
movsl
dec
xchg
int
dec
aad
xlat
mov
das
pop
pop
inc
aad
xchg
mov
cmp
inc
scas
enter
push
and
outsb
lods
cmpsl
mov
repz
adc
sub
into
mov
xor
iret
fcoml
sti
adc
dec
test
ja
std
dec
jecxz
and
xor
dec
mov
lret
xor
and
sbb
test
int
movsb
jl
fs
adcb
jmp
mov
mov
rorl
pop
sub
adc
fnsave
mov
jle
pop
xlat
ss
mov
mov
rcr
pop
cmp
cmpsl
mov
cmp
mov
cmp
cld
cmp
bsr
dec
add
mov
rorl
mov
xor
loope
mov
lcall
mov
pusha
bt
aad
cltd
cmp
mov
test
xor
xchg
or
mov
cmc
push
cwtl
sub
data16
ja
test
addr16
fildll
icebp
mov
imul
std
pushf
xchg
cmpsb
popa
sbb
pushf
mov
mov
test
mov
shll
adc
mov
mov
popa
jnp
shrb
inc
pop
lods
jp
insl
pop
shl
je
lock
mov
jl
addr16
negb
cmc
jle
push
nop
nop
movsl
and
cs
sbb
sbb
jl
pushf
and
or
leave
outsb
test
dec
aam
jne
mov
add
shrl
cltd
lods
int
push
pop
mov
sub
popa
les
push
ret
jl
mov
push
lret
pop
pop
jecxz
out
faddp
sub
mov
jbe
sbb
ds
out
pop
cmp
fmuls
fwait
mov
push
imul
xchg
push
sbb
sub
adc
pop
xbegin
stos
cmp
inc
inc
mov
xor
xor
mov
mov
cmp
in
icebp
push
addr16
jle
inc
mov
icebp
cmp
mov
arpl
push
inc
cmp
dec
cmp
jno
and
aaa
adc
rdtsc
das
jo
or
dec
aam
mov
daa
scas
repnz
dec
aam
inc
mov
loope
pop
inc
roll
push
xor
mov
sbb
lcall
repnz
and
sub
and
mov
cwtl
sti
add
sub
jo
mov
fsubl
stos
cwtl
icebp
mov
xchg
popa
pop
xlat
decl
sahf
adc
cs
insb
call
inc
fs
adc
add
inc
mov
dec
sbb
cmpsb
jae
jne
sahf
jbe
push
int3
mov
dec
sbb
mov
test
push
rclb
mov
sahf
sbb
cwtl
sub
cmpl
pop
outsb
dec
and
movsb
push
mov
lea
psrlq
push
loope
sti
inc
aas
mov
aam
jg
stos
push
test
add
mov
ljmp
lock
pop
scas
push
aas
add
lret
in
aad
leave
mov
pushf
ja
addr16
push
ljmp
out
push
leave
shrl
or
lahf
ljmp
ljmp
fstpl
adc
aam
jecxz
lock
cmp
test
sbb
adc
les
addr16
cli
mov
loope
xlat
jg
push
nop
push
mov
int3
cmp
xor
orb
lcall
stos
adc
subl
movsl
jge
int
xchg
lcall
add
pop
repz
in
push
movsb
loop
xchg
jg
jmp
jl
jle
hlt
or
scas
test
das
pop
movsl
sub
ret
mov
stc
inc
or
ljmp
sbb
cltd
dec
aad
cld
xchg
and
mov
data16
js
enter
mov
arpl
or
dec
rorl
mov
push
push
inc
movsl
ds
sub
ss
xchg
jb
dec
or
xchg
push
hlt
inc
fcompl
and
xchg
fisttpl
push
push
hlt
scas
ljmp
ss
nop
in
paddd
mov
and
ret
jmp
shll
bound
psubusb
pushf
and
and
lcall
negb
fisubs
sub
mov
add
jp
xlat
repz
jmp
ficompl
data16
ret
push
sbbb
adc
sbb
mov
fistpll
mov
es
ss
xor
daa
mov
and
inc
mov
jmp
or
sbb
stc
sti
push
out
sbb
ja
scas
in
mov
notl
into
int3
out
cmp
outsl
jbe
outsb
jle
call
not
hlt
xor
mov
addl
ret
rcr
sbb
shl
aam
sbb
test
inc
mov
sub
pop
add
pop
mov
das
pop
adc
loopne
sahf
lret
push
pop
addl
stos
movl
fwait
scas
test
mov
mov
and
iret
subb
sub
je
das
mov
into
cmpsl
int3
fisubrs
xchg
push
and
sahf
lods
xchg
jl
sbb
jb
and
fstpt
adc
xor
popf
or
sbbb
bound
xor
mov
cwtl
out
cmp
xor
cmp
or
cli
push
cmp
sub
add
rorb
sar
rcrb
xchg
lahf
pop
lcall
add
mov
in
adc
leave
stos
sbb
xor
stc
cmp
mov
gs
mov
test
lock
mov
lock
add
repz
mov
int
mov
sub
fidivs
mov
jb
cltd
mov
lahf
pop
enter
jae
ficompl
sub
lret
and
out
arpl
xchg
dec
push
push
leave
cmp
xchg
clc
orb
inc
into
sub
popf
test
je
or
push
pop
mov
std
xchg
sbb
mov
xchg
cli
and
das
and
out
push
fiadds
shl
pop
xor
xor
cmp
lret
pushf
outsl
jnp
stos
repnz
or
out
xchg
icebp
jp
xor
imul
into
fwait
cmovbe
aas
pop
scas
adc
or
sub
fdivrs
or
dec
rcrb
sub
test
insb
ss
and
movsl
arpl
ljmp
mov
mov
test
stos
dec
jb
and
js
mov
mov
push
dec
ljmp
mov
mov
out
mov
and
je
or
mov
orb
out
dec
sbb
cmp
hlt
fmul
mov
dec
in
bnd
in
jbe
lods
inc
ret
inc
pop
sarl
pop
dec
movsl
out
ret
scas
ss
mov
sbb
mov
xor
cltd
shl
xlat
loop
rcr
and
dec
fdivrl
stc
push
add
leave
adc
pop
xor
jbe
call
cmpsb
loopne
pop
mov
lea
push
hlt
pop
lock
mov
jnp
add
sub
addb
arpl
iret
inc
mul
mov
jo
data16
jecxz
ss
movl
sahf
sub
pusha
addl
pusha
xchg
adc
rorl
jmp
mov
xchg
shrl
xchg
xchg
add
xchg
mov
push
aas
add
xchg
sub
cld
sub
ss
in
pop
mov
ret
js
fcoms
ffree
sahf
mov
pop
xorb
mov
adc
into
sbb
fcomip
addl
fsubl
movsl
popa
sub
inc
enter
leave
in
or
mov
sbb
pop
or
dec
ss
test
lods
loopne
sub
push
sbb
and
mov
add
cs
dec
mov
scas
pop
and
jbe
jmp
incl
xchg
dec
into
xchg
insb
push
sbb
fptan
jl
outsb
jb
cli
out
cmp
jl
jns
push
or
pop
popf
mov
sub
pop
adc
inc
imul
jnp
cld
jle
call
stos
lods
lods
shll
mov
out
popa
add
lret
and
mov
lcall
imul
leave
inc
adc
loopne
ss
add
lods
mov
mov
jnp
push
stos
call
imul
and
in
add
add
pop
mov
out
mov
js
jle
push
les
pop
xchg
ljmp
mov
call
pop
int3
mov
movsl
dec
jl
and
mov
outsl
shlb
lcall
cs
ret
sahf
adc
es
mov
xor
adc
jg
xchg
sub
imul
and
ja
scas
sar
gs
jle
pop
or
mov
xchg
mov
aaa
fisubrs
jle
in
mov
push
fmuls
imul
out
push
stos
xchg
iret
xlat
out
jmp
jle
mov
sub
and
xchg
xchg
cmp
pop
dec
xlat
nop
ror
mov
or
push
dec
dec
iret
decl
sub
and
loopne
inc
push
scas
xor
xchg
pop
lods
cltd
rcl
inc
pop
cld
cmp
pop
lods
jo
or
pop
int3
push
mov
mov
sub
push
cltd
inc
xchg
js
xor
mov
pop
bound
or
rep
repz
xlat
mov
jecxz
test
pmullw
dec
lock
fnstsw
aas
pushf
ss
enter
push
and
cld
mov
sti
jecxz
xchg
pop
pop
out
inc
daa
ret
jp
outsb
stc
push
inc
dec
in
adc
jbe
ds
inc
cs
xchg
cmp
mov
pop
fisttpl
jae
add
out
or
mov
xchg
and
daa
ret
test
shll
inc
mov
mov
jb
fimull
sbb
mov
les
aad
inc
out
adc
push
loopne
or
mov
in
xor
clc
adc
sbb
jns
mov
fldl
cmpsb
outsl
out
out
out
inc
xor
fistl
push
test
mov
fcoml
cwtl
inc
bound
mov
cmpsb
inc
jle
std
gs
stc
test
cwtl
mov
fwait
out
mov
mov
int
jb
mov
popa
insb
sbb
push
cmc
sbb
mov
ret
arpl
mov
lea
cmp
lret
mov
jns
push
stos
mov
cmpsb
mov
repnz
jg
sbb
cmp
movsb
test
push
cs
cmpsl
sub
add
lods
jmp
mov
pop
mov
call
xlat
fisubrl
loopne
mov
fs
xchg
lret
js
jae
sbb
jecxz
mov
testb
ret
mov
into
pop
in
push
int
sub
lock
or
iret
inc
dec
cmpsl
push
xchg
lcall
sbb
leave
test
mov
stc
pop
in
adc
std
inc
es
leave
mov
insl
rolb
cmp
mov
xor
jbe
xchg
push
mov
fstpl
mov
pop
and
cmpsl
movsb
aaa
js
sbb
cltd
and
xor
mov
sarl
outsb
gs
jnp
imul
mov
inc
rcll
ja
cwtl
cmp
test
jb
add
scas
adc
add
adc
int3
pop
fdiv
fmuls
in
or
mov
push
arpl
xor
das
in
mov
cli
jge
inc
ret
ficomps
fldl
sub
test
lods
cmpsb
add
repz
inc
mov
xor
xchg
push
jge
pop
sti
stc
imul
in
mov
jo
dec
repnz
nop
loop
jb
cltd
icebp
enter
loop
sbb
cwtl
add
imul
push
cmpsb
loopne
xchg
adc
loopne
sbb
nop
sbb
mov
dec
mov
adc
mov
mov
and
pop
lds
inc
iret
cmpsb
and
out
js
test
mov
sbb
idivb
lahf
aam
mov
rorb
mov
pop
rorb
jns
pop
clc
stc
mov
pop
and
jne
jno
or
lret
movsl
xchg
sti
or
shlb
sub
jl
jp
xchg
adc
negb
sub
std
mov
mov
lcall
jbe
xchg
ss
je
push
xchg
pop
and
or
sbb
js
jecxz
xchg
pop
inc
jg
daa
hlt
loop
sub
push
sub
data16
cmp
ljmp
jno
push
fwait
bound
mov
jle
add
xor
sub
xlat
mov
jmp
xchg
xchg
mov
sbb
aas
test
xor
fdiv
imul
movl
insl
sbb
stos
mov
pop
pop
cmp
inc
jb
xchg
stos
inc
iret
xor
ret
inc
lahf
lret
sbb
data16
insb
mov
in
stc
or
xchg
sbb
in
add
ljmp
xor
cltd
mov
loopne
test
lret
inc
mov
enter
stos
inc
notl
sbbb
pusha
dec
xchg
mov
and
icebp
orb
cmp
ror
or
push
rcll
push
mov
sbb
push
pushf
cmovs
mov
sub
nop
push
rorb
adc
jl
lods
aas
les
cmp
jo
adc
test
in
inc
cmp
sbb
jnp
xor
or
aam
push
sbb
jbe
fstpt
cld
hlt
jo
jbe
xor
jecxz
subb
insl
mov
fcmovnbe
rolb
mov
mov
enter
and
xor
in
mov
movsb
js
mov
lock
mov
inc
test
sahf
shll
or
rorb
mov
lods
or
dec
mov
lea
into
sub
mov
inc
andl
sbb
push
or
test
fdivrs
outsb
push
loopne
dec
iret
adc
fidivl
rcrl
push
xchg
fstpt
push
in
sti
pusha
mov
or
mov
mov
xchg
inc
mov
or
push
xor
add
push
loop
push
or
mov
jae
adc
xchg
pop
pop
mov
fld
lods
iret
mov
push
and
xchg
subb
push
pusha
and
cmp
mov
or
ljmp
ret
mov
push
in
loopne
pop
and
shlb
mov
sub
leave
cmp
das
sbb
and
push
fnsave
mov
rol
jbe
sbb
cmp
and
rcrl
or
jg
pop
out
xor
ret
loope
ss
ss
adc
fcomp
insb
add
enter
mov
sbb
adc
test
out
pop
cld
cld
jae
pop
inc
scas
call
repnz
mov
negl
jnp
pop
loope
cmc
sahf
and
sbb
jmp
sub
popa
xchg
inc
subl
cld
dec
xchg
lahf
scas
mov
gs
and
mov
pop
add
pop
mov
movsb
in
outsl
jb
shrb
xor
jp,pt
icebp
push
fists
nop
fwait
ja
out
mov
mov
cmc
pop
and
in
addr16
cmp
pushf
stc
mov
repnz
inc
loope
jo
jns
outsl
mov
jns
out
or
adc
xchg
fildll
in
loope
packuswb
in
popf
cld
pop
add
or
jo
lds
xchg
int3
jo
and
jns
inc
test
outsl
add
negl
imull
xor
jno
or
lret
jle
fcompl
sbb
shll
aad
jno
loopne
push
xchg
out
jno
push
fildl
or
inc
sbb
mov
mov
mov
shll
fidivl
fbstp
push
bound
gs
aas
scas
pop
pop
addr16
sbb
xchg
das
mov
cwtl
ret
xor
enter
pop
adc
cli
jno
mov
and
mov
fsubp
inc
cmp
mov
inc
mov
mov
lods
sahf
pop
in
push
inc
lods
enter
int3
push
pop
shll
cwtl
or
stos
cli
or
cld
ffree
mov
pop
cmp
ja
fisubs
xchg
push
cs
loop
sahf
jmp
xor
xor
enter
aam
icebp
jne
cwtl
test
cmp
add
mov
push
ror
es
test
cmp
imul
xorb
pop
shlb
adc
shlb
cmp
aam
sbbl
sti
scas
sbb
fcomp
xor
adc
add
cmpsb
or
or
xchg
xor
test
inc
roll
cmp
clc
xchg
add
scas
mov
inc
out
fdiv
ror
popf
and
iret
pop
xchg
leave
gs
clc
outsl
mov
cld
repz
sbb
es
push
ret
xchg
mov
xchg
sti
dec
cs
jno
flds
es
test
cltd
pusha
cltd
in
mov
fidivs
dec
cmpsl
hlt
cmp
hlt
jge
std
pop
cli
nop
and
push
or
xor
xchg
or
xchg
xchg
in
gs
and
sub
cli
add
adc
pop
adc
mov
mov
fmuls
sub
sub
jbe
dec
leave
insl
aaa
int3
cmpsl
loopne
daa
xor
push
sub
mov
push
push
pop
mov
outsb
mov
repnz
push
push
cmp
mov
xchg
into
flds
insb
push
sub
bsr
jae
out
push
add
mov
addr16
leave
inc
mov
shrb
push
mov
call
fmuls
mov
mov
push
push
dec
inc
and
or
gs
push
daa
adc
into
inc
push
pop
fmull
loop
xlat
mov
add
add
push
jge
mov
cmp
dec
mov
cs
inc
jo
dec
mov
mov
mov
les
xchg
lcall
push
inc
xchg
push
int
xor
pop
sbb
cmp
mov
push
add
mov
or
mov
jmp
sub
shl
pop
int3
mov
sahf
imul
js
shrl
sbb
loope
and
fdivrs
mov
out
jbe
xlat
pop
add
mov
dec
lods
jecxz
pushf
rorb
out
mov
insb
mov
in
pop
int
dec
push
inc
es
push
js
push
scas
cmp
pushf
mov
cmp
out
mov
inc
sbb
shl
ljmp
mov
outsb
lret
sub
lret
cli
test
inc
repnz
repz
loope
int
jmp
call
xchg
aas
lret
and
shll
enter
ja
jbe
push
push
rol
cmp
ds
lahf
pop
cmpsl
mov
repnz
int3
loope
cmp
js
leave
add
inc
into
out
test
cmp
sbb
xchg
push
cmp
mov
add
dec
jge
xchg
sbb
xlat
mov
sahf
add
fmuls
inc
xchg
addb
insb
cmp
sub
ja
adcl
aad
or
add
stos
imul
push
adc
xor
outsl
push
pusha
add
sahf
pusha
sbb
test
dec
mov
fmuls
xor
mov
loopne
inc
iret
scas
sub
jbe
sub
movsb
scas
popa
dec
jl
mov
rorb
out
outsl
cmp
mov
xor
mov
jne
aaa
fstps
jb
js
jb
in
push
mov
cltd
bnd
in
mov
mov
addb
xlat
jb
xchg
or
in
pop
push
sbb
test
mov
xchg
add
cmpsl
test
push
dec
push
rol
inc
ret
xor
or
data16
bound
and
push
pop
les
call
mov
icebp
popa
xchg
cmp
iret
test
ret
and
inc
stos
push
jge
jecxz
mov
mov
mov
js
imul
ss
xchg
push
and
push
mov
pop
inc
xchg
jo
data16
aaa
inc
mov
or
adc
gs
fsubrs
pop
shrb
lret
adc
movsl
add
mov
push
shrb
into
in
push
mov
push
in
sbb
and
dec
cmp
pop
add
push
mov
mov
jg
iret
fwait
cmpsb
xchg
jge
sarb
inc
add
loope
cmpb
icebp
jb
adc
pop
mov
cmp
push
cmp
pop
sub
cmp
dec
sub
xor
push
sbb
adc
mov
cs
lds
or
mov
test
imul
sub
sbb
sub
int
mov
aam
addb
mov
xor
ret
and
in
sub
repz
inc
pop
lods
push
stos
xchg
xor
jbe
add
xchg
test
arpl
mov
imul
adc
stc
jne
hlt
inc
movb
insb
out
and
in
xchg
addr16
lods
aad
add
std
outsl
jg
adcl
ficompl
int
sti
les
xchg
aad
fsts
shlb
jne
or
es
test
sbb
jg
js
scas
in
or
repnz
lea
jnp
pop
xchg
push
sub
insb
cmp
xchg
ja
test
sbb
fisttpl
leave
es
pop
add
pop
inc
clc
adc
xor
dec
sbb
iret
xor
adcb
mov
jbe
inc
mov
push
push
pusha
adc
adc
js
cmp
mov
les
les
pushf
orb
jno
rorl
pop
outsb
fisttps
sub
jae
sbb
hlt
cs
cmpsb
push
test
lock
or
fldenv
add
jl
adc
sbb
xor
adc
stc
rcll
pop
imul
hlt
pop
pop
pop
adc
xchg
jb
aam
sbb
ja
outsb
aam
fiadds
pop
xchg
in
movsl
add
pop
xor
sarb
sahf
or
fnstcw
sub
leave
dec
sub
movsl
add
push
xor
xchg
push
mov
mov
dec
mov
lods
jge
pushf
and
ficompl
and
ficompl
fdivrs
js
sbb
cmpsl
outsb
cmp
and
jae
sbb
sbb
push
fisubs
dec
push
das
mov
mov
xchg
push
jb
jnp
cmp
stc
fwait
xchg
fldenv
lret
sbb
adc
sub
sti
popf
jle
mov
jl
inc
insb
pop
imul
jne
inc
jmp
mov
scas
in
sub
fdivr
repnz
sbb
or
adc
inc
push
xchg
push
push
mov
mov
nop
adcb
jp
sub
movsl
jg
jge
push
mov
push
jp
pop
or
pop
pop
mov
jno
cmpsl
push
test
shlb
dec
test
cmpsb
lret
int3
ret
xor
out
lds
ret
mov
add
pop
cltd
iret
andb
test
or
cwtl
sbb
mov
pop
or
les
pop
sbbb
lock
loop
in
mov
mov
loop
sub
pop
arpl
push
lods
out
jge
mov
mov
or
xchg
imul
mov
xchg
mov
cli
ss
je
mov
push
mov
cltd
dec
fdivl
int
jg
sti
jnp
add
inc
xchg
sbb
push
jl
out
xchg
leave
aaa
sti
dec
cwtl
sbb
enter
bound
pop
jl
adc
in
add
cmp
and
fsts
out
mov
clc
data16
jl
fnstenv
adc
pop
mov
push
in
xor
int3
xor
cmp
xchg
mov
xchg
mov
pop
push
dec
imul
mov
push
sbb
inc
xor
and
add
pushl
adc
xchg
cs
jg
cmp
and
push
lret
cmp
adc
or
mov
mulb
ljmp
xchg
test
clc
adc
sub
xlat
cltd
inc
cmc
scas
gs
out
jecxz
sbb
inc
xor
call
pop
dec
jae
jo
ret
hlt
mov
xlat
mov
jmp
fadd
pusha
mov
adc
cmpsl
adc
xor
fisttpl
fidivs
xchg
aad
mov
jae
add
call
cmpsl
clc
push
sbb
aam
repz
xchg
cmp
data16
xchg
cmp
adc
mov
negl
pop
cltd
ja
jmp
aam
int
cltd
fstpl
pop
daa
xlat
pop
hlt
sbb
xchg
jae
sub
dec
in
jmp
push
lcall
sbb
xor
inc
cld
xchg
insl
int3
lds
icebp
outsb
push
lods
daa
xchg
add
test
scas
xchg
sahf
dec
call
xor
and
popa
decl
xchg
fdivrp
inc
popa
cs
pop
insl
leave
ljmp
out
add
inc
imul
scas
adc
enter
jl
imul
and
jno
cmp
xor
sbb
cmpsl
scas
int
mov
ja
xor
lds
repnz
push
and
movsl
loopne
scas
pop
lret
adc
mov
std
jmp
ret
pop
imulb
in
push
out
inc
and
pop
cltd
decl
xchg
adc
lahf
jnp
cmp
jo,pn
lods
dec
out
or
xchg
push
lea
push
push
cmc
mov
iret
and
std
outsw
call
mov
cmp
push
push
mulb
sub
shlb
int3
pop
aad
push
mov
sub
inc
sub
lret
addr16
jl
loopne
mov
adc
std
es
scas
push
daa
cmp
hlt
js
sbbl
xchg
mov
dec
pushf
ret
jae
jnp
mov
push
cld
js
push
push
movb
scas
adc
dec
cmp
lods
or
outsl
sbb
out
mov
fxch
sub
add
xchg
mov
movsl
int
and
andl
loop
bound
lret
aad
xlat
scas
jno
adc
call
dec
mov
aam
call
inc
inc
dec
outsl
add
push
sub
outsb
push
mov
lods
sub
aas
lods
das
fsub
cmp
mov
imul
xor
popf
sbb
add
lods
inc
jg
push
std
dec
push
mov
out
push
sarb
and
xchg
movsb
in
popa
sbb
sub
add
dec
cmpsl
roll
push
divb
dec
xchg
mov
repz
arpl
mov
mov
lea
into
sbb
loope
std
mov
adc
mov
stc
in
pop
inc
inc
sbb
xchg
loope
inc
dec
mov
sysret
sub
mov
push
shl
ja
out
idivb
add
mov
mov
inc
push
int3
shll
mov
ds
xchg
sbb
xor
daa
pop
mov
movsb
and
push
movsl
in
adc
int3
lcall
sub
into
fwait
jge
or
sti
aas
orb
dec
sbb
in
mov
and
shrl
jg
insl
sub
fst
or
int
rolb
xchg
cmpsb
cli
sbb
sub
cmpsl
xchg
mov
cmp
push
adc
outsl
sbb
push
fistl
ret
mov
cmp
repz
aam
in
and
sbb
popa
push
mov
je
add
pop
mov
xchg
cmpsl
insb
pop
and
push
xor
and
dec
pushf
imul
leave
xchg
ljmp
out
imul
sahf
xchg
neg
jge
cld
dec
cmp
jae
hlt
sbb
push
sbbl
sub
aaa
mov
push
sbb
cmc
adc
ret
cltd
and
aaa
xchg
in
dec
loopne
or
mul
daa
xor
cmp
dec
call
adc
or
and
or
inc
jecxz
xor
out
mov
outsb
imul
dec
push
popf
cmp
xchg
push
into
xor
fwait
mov
rolb
pop
xchg
pop
xor
dec
sub
and
and
out
cwtl
mov
out
repz
movb
push
jb
push
adc
pusha
mov
add
mov
dec
mov
dec
push
popa
leave
pop
aaa
mov
gs
lock
cmp
lcall
js
xor
cltd
inc
ficompl
mov
or
dec
xchg
adc
push
jo
push
pop
subl
dec
fucom
jecxz
cmp
test
xchg
loope
pop
jg
push
inc
sub
jbe
clc
or
mov
mov
or
mov
inc
pushf
mov
int
loop
iret
addl
gs
mov
lods
std
syscall
popf
and
pop
push
jmp
jecxz
pop
aas
or
sahf
ja
shrb
test
inc
jnp
push
and
sbb
mov
cmp
insb
adc
cli
insl
in
push
xor
sub
aam
fs
lcall
cmp
push
cmc
out
hlt
push
lds
and
shl
mov
int3
iret
fwait
pop
mov
jge
hlt
cmpsb
lret
mov
jge
repnz
xchg
pop
pusha
rorb
dec
xor
mov
and
imull
andl
push
sbb
sub
jmp
or
mov
repz
sbb
and
iret
sbb
out
in
rcrl
sahf
sub
shlb
lea
push
inc
or
inc
add
push
test
xchg
mov
push
xchg
iret
fidivrs
rorb
loop
dec
fstp
dec
testb
ljmp
ja
dec
test
jecxz
push
mov
dec
cmp
or
pop
push
xor
xchg
loop
dec
imul
adc
mov
test
xchg
pushf
pop
push
push
xchg
leave
pop
pop
push
sub
push
enter
fwait
xor
add
pushf
ss
cld
adc
cltd
movsb
push
mov
cmp
movsl
mov
push
lea
clc
adc
testl
fs
out
andl
mov
cld
xor
movsb
and
jnp
xor
sbb
mov
je
xchg
jne
adc
cltd
in
and
negb
enter
icebp
das
dec
mov
inc
inc
mov
test
add
orl
sub
dec
jno
sbb
push
push
dec
inc
sarb
sbb
mov
das
jne
push
test
in
imul
sbbb
or
xor
aad
push
scas
lret
mov
ja
cmp
mov
scas
mov
jecxz
jne
cmp
xchg
push
xchg
cltd
fidivs
jb
mov
lock
and
insb
fiadds
subb
sbb
dec
pusha
in
fs
mov
aaa
dec
fists
jl
xor
test
push
xor
pop
mov
mov
lahf
push
lods
lcall
sub
and
push
xchg
sub
testb
cmp
iret
xchg
loop
adc
ljmp
scas
mov
xlat
pushaw
sbb
loop
pop
das
sbb
xor
pop
add
shrb
cmp
dec
sbb
xchg
in
mov
mov
mov
popf
mov
cmp
sub
mov
test
insl
adc
jl
pop
mov
jmp
mov
popa
sbb
add
aas
or
test
mov
sub
pop
jbe
rolb
adc
cmp
int3
mov
add
aaa
cmp
pop
lock
adc
add
test
leave
push
sub
stos
jp
mov
add
lods
add
arpl
sub
pushf
stos
fisubl
ljmp
pop
std
repnz
loope
jmp
sbb
jno
fst
or
lret
ljmp
imul
adc
mov
dec
xor
bound
sbb
out
mov
loopne
ffreep
sub
sti
clc
movsb
dec
jg
test
filds
les
adc
mov
push
in
pop
int3
mov
mov
dec
lods
lods
sarl
sub
sub
inc
cmpsl
jb
xor
addr16
xchg
xor
dec
inc
in
cltd
movsl
aas
xchg
sbbl
ja
test
sub
mov
int
dec
movsl
sbb
pop
jbe
hlt
arpl
mov
repnz
sbb
enter
add
pop
dec
movsb
jb
sahf
inc
push
insl
mov
sbb
or
inc
pop
movsl
mov
or
mov
stc
rcrb
addl
and
add
pop
js
sub
mov
pop
add
cmp
pop
push
cmp
or
ljmp
test
iret
sbb
sahf
cs
cmp
insl
aaa
add
pop
in
std
mov
mov
out
outsb
clc
and
mov
aam
insb
dec
mov
repnz
in
aad
pushf
mov
sbb
and
push
mov
test
inc
jnp
mov
xor
in
push
flds
add
and
fsubrl
lds
lock
and
pop
repnz
push
cs
out
cmp
popa
lcall
sbb
cmp
mov
lock
aam
cmp
push
mov
mov
dec
pop
xchg
mov
stos
scas
sbb
scas
push
mul
pop
push
mov
lock
push
pop
sbb
cmp
mov
push
mov
mov
arpl
jecxz
mov
jnp
mov
scas
xchg
or
rorl
fldcw
pop
jns
add
in
out
scas
jnp
leave
xlat
cmpsb
mov
lea
mov
xor
stc
loopne
mov
push
dec
daa
cmp
push
jge
inc
jnp
mul
lret
mov
mov
mov
aas
add
add
or
sbb
pop
dec
popa
jbe
mov
movsb
add
inc
add
out
ds
adc
test
cmp
add
inc
mov
dec
dec
inc
jl
dec
cmp
xor
sbb
lcall
sbb
and
xchg
test
movsl
xor
andl
adc
xor
mov
sub
jne
and
stos
imul
sub
mov
add
stos
in
lds
inc
pusha
call
imul
pop
imulb
pop
fildl
sbbb
push
daa
andl
jmp
and
mov
xor
mov
scas
xlat
add
ljmp
adc
mov
pop
stc
mov
xchg
xor
loopne
or
rcrl
arpl
hlt
sbb
adc
and
mov
ja
ljmp
pop
in
jp
push
imul
or
mov
iret
call
lea
repnz
jae
inc
jle
pop
faddl
sar
jns
stos
pop
sbb
push
dec
xlat
jbe
xor
cmpsb
out
enter
mov
outsb
cld
hlt
jp
sti
out
sbb
lods
pop
mov
pop
pop
pop
sbb
xor
and
xchg
sub
or
pop
xchg
loopne
lods
orps
lret
sub
pop
js
pop
movsl
jmp
adc
inc
or
lea
sub
jo
adc
mov
test
mov
sbbl
cmpsb
mov
adc
or
adc
xchg
cmp
popa
pop
pop
es
jne
stc
push
mov
mov
inc
shll
add
or
push
imul
movsb
sbb
dec
push
ss
mov
jl
lahf
lcall
jle
adc
xchg
imul
adc
pop
push
mov
mov
xlat
sub
and
rorb
mov
mov
inc
sub
and
addr16
aad
test
fnstenv
out
mov
adc
popf
icebp
jmp
lods
das
in
or
jp
pop
mov
sub
js
dec
cs
dec
ja
test
icebp
lock
dec
adc
sti
mov
cmp
movsb
inc
xor
sbb
cmovne
aam
jle
mov
and
fiadds
add
stos
jae
lret
pop
cs
pop
insl
shld
mov
push
and
pop
dec
xor
xchg
mov
leave
addb
insb
or
test
adc
aas
jb
sub
ret
lea
cmc
mov
xor
adc
mov
push
xchg
xchg
pusha
xchg
sbb
lock
xchg
inc
into
int
es
mov
fists
adc
jno
fiaddl
sub
lea
or
inc
jae
in
and
out
jne
mov
mov
jno
adc
xor
cvtps2pi
lret
mov
pushl
outsl
cmp
push
test
xchg
addl
adc
dec
inc
push
fistps
mov
xchg
inc
add
pop
xchg
xchg
mov
cli
ss
ret
shll
xor
cmp
pop
pop
ja
ss
insl
ja
and
push
imul
imul
dec
cmpsb
cli
stos
repz
xor
mov
int3
leave
add
mov
mov
cmp
ret
mov
push
jae
mov
fstpl
cmpsb
cmpsl
pop
sahf
mulb
imul
mov
int
mov
nop
iret
sti
adc
dec
xor
ljmp
sub
mov
push
mov
dec
jmp
adc
mov
loop
sti
add
test
dec
out
fwait
xor
lods
sub
jl
rorb
pop
lods
popf
out
inc
daa
mov
andb
sti
mov
repnz
pusha
cmc
js
mov
push
movsl
rorb
inc
pop
int3
xchg
sti
mov
pop
je
es
ja
push
mov
aad
adc
hlt
mov
lods
mov
adc
mov
sbb
jmp
sub
in
mov
push
clc
sub
and
or
leave
pop
pop
xor
xchg
outsl
cmpsl
sub
lret
insl
and
fisttpll
pop
and
das
es
and
divl
pop
sub
aam
cmp
push
add
loopne
jmp
adc
shrb
test
popa
mov
pop
leave
aaa
xchg
sbb
sub
inc
je
lock
mov
lods
fdivrl
sti
add
call
arpl
pop
cmp
pop
jo
mov
movb
mov
push
or
push
mov
pop
je
in
lods
cmpsl
clc
lret
mov
inc
cmp
shr
addr16
pop
flds
sbb
xchg
adc
stos
loopne
mov
and
and
sbb
pushf
addr16
add
out
aad
mov
lods
fisubl
movsb
scas
lcall
mov
out
sbb
add
pushf
fimuls
adc
loope
pop
cli
pop
js,pt
mov
sbb
mov
ret
lea
mov
pop
inc
jl
inc
lcall
mov
mov
mov
test
and
jbe
cmp
std
insb
nop
iret
mov
inc
xor
clc
jno
pop
xor
fmuls
sbb
cmp
xchg
xor
or
jns
mov
cltd
xchg
hlt
inc
xchg
call
ret
mov
sub
xchg
mov
mov
xchg
mov
lock
cltd
cli
push
push
jge
dec
xchg
lods
nop
les
fdivl
cmp
std
xchg
adcb
movsl
mov
out
mov
and
decb
sub
aas
jmp
cwtl
orb
cmovb
movsb
test
jp
imul
aas
add
and
push
scas
aad
push
mov
xchg
sub
mov
gs
scas
inc
pop
xchg
arpl
cmp
fucom
out
dec
and
xchg
rol
mov
add
imul
or
mov
call
xchg
repnz
js
or
mov
mov
sub
sub
mov
aam
js
mov
cltd
lret
and
psubsw
mov
lret
fisubrs
mov
pop
inc
imul
push
mov
xchg
dec
or
xorb
push
cmp
flds
scas
ret
and
and
jnp
das
insl
mov
sti
jge
mov
push
mov
xor
ror
mov
in
leave
jle
in
push
cmp
shr
and
movsb
lahf
jl
loop
dec
test
or
push
testl
sti
dec
add
jp
xchg
icebp
cli
mov
mov
shlb
dec
jb
subb
js
inc
push
and
enter
inc
sub
and
ret
movsb
pop
mov
mov
xchg
push
ss
orb
cmp
fcompl
imul
mov
popa
mov
test
orb
mov
sbb
int3
outsl
mov
xchg
and
cmp
xchg
adc
xor
fildl
int
js
and
cs
jge
xor
cmp
fdivrl
push
xchg
pop
shlb
icebp
pop
pop
adc
sub
je
aam
lret
jl
sti
jb
loopne
test
xor
fistps
or
pop
je
cmpsb
out
mov
cmpsl
pop
xor
lret
test
cmp
mov
sub
pop
adcl
pop
imull
add
lcall
cmp
fisubrl
sub
jne
fnstcw
sarb
sub
dec
mov
jno
jno
pop
xor
imul
pop
ret
xor
xor
jne
daa
fmuls
fs
mov
jnp
sub
sbb
adc
push
jbe
pusha
mov
adc
lret
rcrl
es
lea
and
fwait
mov
pusha
pop
das
sti
aas
aaa
dec
aas
mov
lods
mov
jle
xchg
sub
dec
outsb
mov
sub
pop
cmc
std
movups
cmc
aas
lods
pop
inc
cmp
push
add
xchg
lock
in
or
shr
pop
cli
sbb
std
sbb
xchg
xor
lods
xchg
mov
pop
sbb
and
push
imul
call
out
iret
dec
std
lds
mov
enter
mov
jmp
xor
leave
mov
outsl
mov
sahf
fs
cmp
mov
lods
pop
fdivrs
mov
xchg
cltd
fsubrs
jnp
add
out
insl
xor
imul
mov
push
push
cmp
dec
xor
adc
iret
dec
xor
xorl
dec
fwait
pop
jp
add
jmp
dec
sub
dec
daa
lret
add
sbb
xchg
inc
adc
shlb
mov
fildl
and
aad
push
and
dec
mov
mov
insb
push
sbb
xchg
push
add
cmp
or
cmp
fstpl
mov
adc
das
scas
xchg
cmp
les
mov
or
pusha
divb
rclb
aad
pop
testb
mov
inc
int3
ja
out
pop
das
fcmove
bound
loope
fcmovbe
mov
nop
lea
mov
roll
dec
imul
fwait
outsb
pop
decb
jns
test
inc
out
push
mov
push
adc
and
movsl
push
std
jnp
and
dec
and
mov
ja
rcrl
loop
repnz
push
cs
rorb
push
push
in
pop
testb
cld
jne
push
mov
mov
and
add
sub
int3
mov
xchg
xor
mov
push
fisttps
test
mov
and
or
push
lea
das
enter
shll
inc
mov
outsb
mov
pop
psllq
aad
and
jns
ret
insb
cmpsl
xor
ja
mov
mov
add
jmp
pop
pop
sti
cld
jbe
and
test
jge
adc
insl
jb
add
add
sub
imul
pop
mov
cltd
cmp
mov
mov
aam
sbb
push
cmp
mov
lret
loop
add
int3
and
scas
adc
or
mov
push
pop
gs
lods
mov
dec
fidivl
sub
lret
test
divl
add
cwtl
push
xchg
jns
ljmp
setnp
lods
or
fimuls
addb
xlat
lods
jb
inc
lock
push
mov
int
movb
in
pop
je
int3
sub
mov
and
out
inc
jno
gs
ds
ljmp
xchg
enter
push
cmpsl
sub
push
or
sbb
not
sbb
lcall
cmpsl
mov
call
pop
add
ljmp
ficompl
jmp
imul
pop
push
mov
mov
ret
add
popa
mov
pusha
scas
add
xor
je
inc
sub
fstpl
adc
lret
sti
jecxz
cmp
pop
ja
jb
je
mov
pop
repz
sub
pushf
fstl
pop
rcll
adc
stos
idiv
cmp
xchg
pop
aaa
mov
out
cmp
cmp
das
out
loope
pushl
sahf
xchg
inc
iret
push
cmp
lods
rcrl
sub
sub
mov
hlt
fldl
outsl
or
shr
xchg
lods
jnp
xchg
aas
inc
cmp
mov
and
loope
and
orb
cs
add
xlat
mov
mov
sahf
jecxz
cs
lea
iret
ficompl
js
js
adc
gs
clc
ljmp
xor
cmp
ret
xor
inc
testl
cmp
in
xor
mov
orb
sub
iret
xor
fwait
pop
je
mov
jmp
pusha
add
xchg
cmc
pop
sahf
ljmp
adc
mov
aad
gs
stos
xchg
pop
cld
inc
call
clc
mov
adc
lea
jg
pop
das
lret
xchg
stc
xor
test
xor
aad
dec
mov
outsl
sbb
xor
pushfw
ret
mov
mov
pop
jae
mov
rol
movsb
mov
hlt
mov
nop
mov
pop
ja
popa
lahf
push
pop
pushf
cmpsl
push
lret
mov
sbb
xchg
out
faddp
jp
lahf
xchg
jo
lea
sub
add
lock
mov
aas
push
pusha
cmovno
aaa
pop
loopne
scas
ret
xor
dec
pop
std
mov
call
nop
mov
pop
iret
push
pushf
xlat
push
fbld
roll
xor
sbb
jp
inc
sbb
mov
orl
jl
lods
clc
dec
std
mov
pop
movsl
insl
roll
mov
fcmove
lcall
cwtl
pop
aaa
mov
sbb
ds
mov
leave
sbb
jae
mov
orb
pop
lea
dec
fisttpll
clc
xchg
mov
pop
insb
cmp
dec
dec
jae
or
movsl
xchg
ret
mov
xlat
jp
mov
sbb
adc
rorb
jb
ficoml
inc
ss
sbb
inc
jle
nop
data16
fdivs
lret
jmp
add
cltd
ja
in
and
or
imul
sbb
mov
pop
lods
sub
arpl
shrb
sbb
cld
mov
xor
mov
loop
jae
shl
jge
jle
jbe
adc
gs
int
popa
cmpsb
mov
mov
aad
or
ror
imull
adc
cltd
dec
jb
jl
xchg
or
fucomip
xchg
gs
iret
test
fs
xchg
fwait
sbb
or
sti
movsl
dec
icebp
pop
pop
dec
inc
dec
add
fisttps
test
pop
jecxz
rolb
inc
cltd
lock
ds
inc
cmp
sub
inc
movswl
adc
or
lret
inc
pop
push
les
lock
leave
xor
sahf
lret
mov
lret
test
lahf
sbb
sbb
cmp
mov
jg
add
mov
jno
pusha
cmp
xchg
sub
pop
aam
fs
sbb
int
pop
sbb
cwtl
lea
and
addr16
mov
dec
jle
shl
repz
sbb
or
ret
inc
lret
iret
int3
sbb
cmp
lods
addr16
data16
enter
arpl
js
dec
pop
movsl
sbb
xchg
cmc
mov
xchg
xchg
sub
push
scas
inc
sub
xchg
and
js
sbb
xchg
pop
icebp
pop
mov
ret
inc
dec
fcmovu
jne
inc
dec
adc
fistpl
call
pushf
and
rolb
movsl
xchg
leave
movsb
out
fs
mov
test
and
cmc
mov
cld
fs
xchg
xchg
cs
adc
scas
call
out
daa
inc
sbb
and
push
pop
xlat
xor
dec
in
xchg
das
and
test
into
push
icebp
cld
push
xor
aad
movsl
call
push
push
idivl
ret
pop
insb
lds
leave
add
inc
out
dec
stos
loopne
mov
aas
pusha
sbb
pop
mov
and
data16
cmp
sahf
pop
ja
ja
dec
cli
push
scas
nop
fucomi
pop
mov
nop
mov
sub
testb
orb
jb
dec
xchg
out
aaa
movsb
aaa
inc
inc
test
adc
inc
push
push
lods
mov
add
or
loope
test
mov
sub
stos
pop
fisttpl
sub
jae
xchg
and
inc
arpl
pop
cli
pop
out
out
imul
sahf
sahf
bound
in
aam
cwtl
push
dec
daa
dec
dec
lods
jmp
sahf
popf
adc
leave
ljmp
and
outsb
mov
mov
es
divb
loope
std
repnz
jg
and
dec
jno
shlb
mov
lea
mov
dec
inc
fisttpll
lret
inc
dec
in
icebp
cmp
dec
in
ss
je
mov
pusha
out
push
sahf
popa
or
notl
popa
pop
mov
maxps
or
push
loopne
pop
adc
xchg
fldenv
js
sbb
ja
pop
inc
cmp
nop
add
ljmp
mov
ss
jno
outsl
and
mov
xor
cmp
sbbb
enter
sti
aaa
iret
pushf
cmpb
outsl
jbe
xchg
sub
nop
mov
mov
insl
pop
shrl
mov
sub
fnstcw
imul
sub
mov
pop
int
cmp
mov
hlt
mov
add
mov
mov
push
pushf
xchg
test
fwait
subb
push
loop
jno
pop
dec
jle
push
lret
jl
icebp
sbb
xchg
dec
adc
daa
pop
std
arpl
arpl
jno
das
fcom
cltd
sbb
lret
dec
xor
movsb
xchg
pop
inc
cwtl
jnp
shrb
push
inc
cmp
pop
fistpll
cltd
faddl
out
mov
inc
cs
pop
cld
fs
ror
or
jo
sbb
and
xlat
repz
sbb
in
cltd
xor
cmp
test
int
dec
mov
addr16
fnstcw
dec
testb
mov
sbb
insb
and
xorb
shll
mov
out
scas
fprem
and
push
sub
xchg
test
mov
hlt
je
sub
ljmp
xchg
lahf
cmp
sahf
sbb
adc
push
iret
inc
fwait
sbb
push
sbb
mov
jmp
fisttpl
mov
loopne
mov
pusha
das
rclb
cli
mov
cli
mov
and
testl
and
inc
or
ss
jo
fnstsw
fwait
or
jecxz
fnstenv
dec
out
mov
flds
icebp
pop
outsb
loope
cmp
jmp
sub
stos
cmpsb
loop
or
xchg
in
cmp
iret
push
pop
jns
pusha
in
sbb
push
and
or
shrl
push
ljmp
lahf
call
mov
ret
fisubl
lahf
and
iret
mov
cmp
adc
mov
jo
cmp
sbb
fiadds
sbb
inc
sti
out
fisttpl
inc
jb
or
popf
ja
xchg
jns
sahf
sbb
dec
mov
mov
call
into
add
add
push
inc
jnp
mov
pop
jle
mov
mov
enter
dec
jb
add
incl
fiaddl
into
push
push
int
fxch
xor
nop
lock
jmp
hlt
lret
cmp
mov
pop
xchg
in
jmp
pop
mov
fmulp
jmp
push
sub
sbb
js
rolb
rorb
iret
jmp
fst
fadd
sbb
iret
mov
cmp
ficoml
in
loopne
out
xor
lods
or
lret
pop
push
dec
pop
mov
adcl
in
fstps
or
pusha
rol
pop
orb
mov
nop
mov
sbb
test
cs
push
lods
scas
mov
mov
xor
je
cmp
ljmp
sbb
js
inc
mov
aad
cmp
icebp
mov
xor
rorb
rcll
stos
ljmp
ds
jno
aam
push
push
sahf
sbb
mov
xchg
stos
xchg
mov
ret
imul
sbb
imul
hlt
mov
cmp
out
jb
call
mov
adc
enter
aam
pop
push
nop
mov
push
and
sti
pop
inc
movsl
mov
insl
into
jae
or
cmc
pusha
jnp
xor
or
adc
lock
xor
xor
scas
mov
scas
cs
inc
fwait
popf
mov
push
arpl
jno
out
repnz
mov
stc
inc
or
xor
movsl
adc
push
dec
and
orl
xor
iret
ja
pop
repz
ljmp
fdivs
jle
sbb
cs
adc
dec
orb
pusha
cs
scas
cmp
cmp
dec
test
test
enter
pop
xor
imul
les
fcmovnu
aad
sbb
orb
mov
int
setp
pop
jle
inc
sahf
aam
int
movsb
xor
imul
aas
dec
stc
andl
push
or
outsb
out
daa
xor
shlb
sarb
cmp
inc
adc
loopne
pop
out
sbb
adcl
sub
mov
jp
mov
shrl
test
inc
mov
test
or
fsubrp
ret
les
pop
mov
dec
mov
jecxz
xchg
rol
ror
pop
fdivl
jno
ds
and
sub
les
cltd
mov
jp
js
sbb
into
xor
gs
loopne
test
adc
xor
in
xchg
shlb
adc
push
push
mov
test
xchg
and
loopne
clc
gs
sbb
mov
mov
fsubrl
shl
mov
loopne
test
je
dec
call
leave
loope
jne
xor
mov
xor
mov
inc
sub
push
popa
cmp
push
mov
cmp
test
jecxz
add
lods
cmp
inc
dec
mov
movsl
std
test
gs
cmpsb
jp
loopne
sbb
cmp
mov
and
inc
inc
xorl
fisttpl
pop
cwtl
in
mov
sbb
cmpsb
ljmp
lcall
pop
lahf
adc
divb
or
push
cltd
fcomps
nop
or
jg
stc
mov
push
jo
and
lret
or
push
push
rorb
lods
loope
sbbl
stos
adc
inc
mov
and
test
loop
or
adc
ud0
call
mov
cwtl
xor
or
ja
in
push
push
or
test
out
insb
xor
lods
es
dec
xchg
repnz
add
push
cmpsl
pop
push
sub
push
mov
das
sub
sbb
cmp
movsl
push
and
subb
mov
out
test
push
repz
push
cmpsb
in
data16
arpl
mov
lods
xchg
mov
pop
xor
mov
push
fs
xchg
lcall
in
fpatan
scas
cmp
inc
fstps
loopne
and
in
icebp
insl
int3
jg
mov
adc
arpl
sbb
and
mov
push
mov
mov
xchg
cwtl
out
xchg
bswap
insb
sti
aaa
das
fidivl
xchg
push
push
inc
mov
push
test
sahf
mov
insl
or
lea
cmpsb
mov
mov
leave
jmp
andl
jp
sub
in
fld
int3
movsl
gs
std
ret
or
push
add
push
or
push
out
inc
das
pop
push
mov
aas
add
mov
add
push
push
xor
fneni(8087
popf
lds
push
mov
enter
aaa
mov
inc
and
xchg
aaa
int
or
mov
jecxz
push
inc
fsubrl
inc
jl
jle
cmp
xor
cmp
cmp
push
mov
xchg
ljmp
xchg
jg
xchg
push
jb
pop
cmp
mov
adc
insl
sahf
mov
push
out
jne
popa
pushf
xor
push
cltd
pushf
cmp
out
or
pop
jae
fdivrs
push
ljmp
aas
leave
imul
xor
popa
xor
mov
lods
cmp
rolb
or
aaa
cmpsl
xor
xor
or
mov
sub
xor
bound
cwtl
negl
inc
xor
and
sub
lods
lahf
jl
test
pop
fucomip
aas
sbb
jno
cmp
lcall
push
xchg
add
int3
cmc
bound
pop
out
out
inc
mov
imul
add
imul
inc
sub
jbe
inc
inc
cltd
sbb
out
arpl
jno
ss
mov
nop
push
push
mov
fwait
cmp
sbb
or
sub
loop
pop
inc
fsubr
pop
mov
iret
bound
ret
lock
sti
std
dec
jmp
cli
pop
ret
scas
and
sbb
ss
xorl
cmp
fst
sbb
fmull
movsl
fstl
pop
mov
std
xor
mov
push
xchg
fwait
cmc
add
imul
sub
push
mov
repz
cmp
mov
push
stos
jmp
mov
dec
mov
out
dec
inc
jae
mov
ss
adc
xchg
jecxz
rcrl
fdivs
inc
std
mov
dec
aaa
arpl
pop
sub
subb
mov
inc
fiaddl
pop
cmpsb
sub
mov
xor
jns
and
mov
popf
movsl
dec
cwtl
fdivp
popa
hlt
dec
aaa
push
or
sub
inc
les
mov
add
inc
push
dec
rolb
test
adc
jmp
mov
xor
sbb
mov
push
inc
inc
flds
inc
rcrl
and
imul
aaa
iret
int
and
jmp
lcall
pop
mov
mov
hlt
dec
xlat
jbe
inc
loope
out
dec
jle
and
rolb
pop
sbb
mov
jge
dec
rcl
pop
sub
std
test
xchg
mov
aam
mov
mov
xlat
dec
cmpsb
loop
in
cmpsb
dec
int
mov
int
loopne
lods
cmpsl
xor
out
sub
xchg
ljmp
mov
sti
xor
xchg
sahf
test
push
inc
mov
add
shlb
mov
jb
js
add
scas
hlt
inc
aaa
test
xor
rcr
out
daa
xchg
or
aaa
fwait
ret
data16
aas
mov
xor
ret
sti
jl
jg
call
pop
fsubs
mov
jo
mov
bound
add
mov
cmp
je
clc
aad
or
cmp
mov
pop
loope
push
pop
lods
shl
cmp
insl
lcall
out
ljmp
gs
or
clc
adc
shrl
outsb
cmpsl
and
and
ret
or
jl
popa
fst
js
cmp
divb
xor
jg
dec
xor
mov
icebp
punpckldq
shrb
cs
loope
fnstenv
or
addr16
std
test
insb
js
xor
dec
rorb
xor
mov
addl
into
scas
into
pop
int
and
arpl
add
sbb
mov
add
fs
xor
movl
push
xor
inc
pushf
pusha
aas
fcoml
and
lcall
pop
mov
notl
sbb
mov
movsb
movsl
cld
stos
daa
lods
adc
cs
hlt
out
xor
dec
push
mov
dec
pop
jnp
mov
sub
mov
jo
cmpsb
or
pop
jmp
out
mov
sbb
fsubl
std
scas
lcall
aam
insb
divb
xchg
jo
into
pop
incb
add
sub
inc
push
adc
sbb
test
les
icebp
cmpsl
xor
fwait
shlb
mov
in
inc
arpl
xchg
sti
xor
or
jg
das
sbb
and
aas
int3
and
lods
movsb
mov
and
pop
in
inc
mov
inc
sub
mov
sbb
sar
or
cmpsl
testb
stos
push
jbe
jbe
jge
sbb
aad
xchg
pop
xor
inc
sub
cwtl
jnp
ret
mov
roll
mov
in
sbb
fadd
call
pop
mov
mov
cmpl
mov
or
jns
mov
sub
outsb
dec
loopne
out
xchg
push
xor
jnp
or
fstl
jge
xchg
lds
sbb
ss
add
addr16
push
cmc
mov
jg
jbe
push
mov
iret
insb
add
sbb
in
pop
jge
clc
popa
aaa
push
push
fwait
out
mov
test
loope
out
fdivr
out
xchg
jge
fstpt
andl
mov
adc
push
and
test
cmpps
dec
movsb
jnp
pop
incb
add
push
adcl
icebp
lahf
pushf
lds
test
jmp
mov
xchg
mov
rcrl
iret
imul
cmp
pop
add
sbb
or
sahf
lods
mov
nop
shll
and
scas
push
xor
test
dec
negl
cmp
pop
xchg
inc
add
lods
pop
scas
fwait
mov
sub
cmc
nop
jl
mov
xchg
test
fs
xor
imul
arpl
je
jp
outsb
xchg
cmp
pop
pop
aas
out
cs
out
xlat
mov
inc
aad
xor
out
mov
punpckhdq
pop
mov
mov
lret
sbb
cmp
jp
sahf
xchg
mov
mov
mov
pusha
sarb
movsb
clc
rcll
aad
ja
or
or
mov
sbb
sbb
xchg
ja
adc
xor
pop
or
push
dec
ret
dec
mov
mov
sbb
dec
mov
mov
shrl
call
mov
push
orl
movsbl
fnsave
in
shr
xchg
pop
imul
adc
cmp
push
fnstcw
std
cmp
cli
out
ret
mov
dec
xchg
and
xchg
pop
mov
xchg
insb
ja
shl
jg
add
shll
sbb
pop
sub
cmp
pop
mov
enter
cmp
ror
je
aas
dec
mov
xor
jmp
cs
movsb
jae
push
push
push
sbbb
push
rclb
add
popl
mov
shlb
out
adc
dec
xchg
ret
sub
out
cltd
inc
mov
inc
jg
xchg
mov
dec
mov
pop
push
cmp
sahf
pop
clc
pop
iret
jle
inc
xor
mov
lods
out
pop
add
imul
into
arpl
and
fsubrs
loop
mov
int
gs
es
sbb
sbb
jnp
imul
push
dec
mov
push
cs
sahf
sub
mov
lods
mov
clc
push
mov
dec
aas
pop
cmc
dec
into
push
call
mov
lret
sub
in
ljmp
out
into
add
mov
out
xor
stos
sub
js
shlb
repz
add
lea
es
xor
rol
push
inc
stc
fisubs
jge
xor
jle
mov
pusha
jne
nop
frstor
push
and
mov
xor
fcoml
subl
out
pop
or
repz
mov
push
subb
decb
or
cmp
xchg
test
rorb
dec
lahf
adc
ror
jne
push
gs
inc
cmp
pop
ds
les
push
repz
jnp
lods
xchg
ficoml
push
aam
es
sub
sbbb
and
imull
mov
xchg
cld
add
jp
jmp
pop
clc
push
jns
iret
das
pop
lret
pop
mov
lret
cmp
lods
cli
andl
dec
pushf
mov
adc
in
repz
jl
jp
in
push
add
push
imul
test
leave
es
adc
add
mov
push
pop
xlat
dec
in
jns,pn
ss
mov
mov
and
popa
sub
jg
dec
mov
dec
and
ret
pop
or
mov
test
jmp
pop
inc
lret
xlat
cwtl
mov
sub
fildl
imul
add
movhps
jo
mov
rorl
pop
mov
cmp
pop
dec
cmpsb
fisttps
sub
pop
cs
or
outsl
sub
pushf
mov
test
adc
adc
xor
cmpsl
add
or
repnz
mov
dec
add
stc
mov
xchg
int3
adc
adc
in
and
fldcw
adc
int3
xchg
xor
lret
rol
or
sub
dec
cmp
out
sbb
pushf
cli
test
mov
adc
push
and
stc
pop
loop
inc
sbb
jb
int
lock
test
stc
inc
mov
fisubrl
add
push
mov
lahf
or
pushf
mov
cmp
out
jp
inc
xor
test
jp
xchg
loop
pop
addr16
adc
xchg
dec
mov
mov
jle
xor
and
lcall
pusha
sahf
repnz
xchg
adc
ljmp
cs
lret
fs
mov
fistpll
movsb
imul
lret
aad
push
faddp
test
xchg
mov
int3
into
inc
mov
sbb
xchg
add
popa
push
mov
mov
inc
in
xor
push
sarb
mov
push
fsubl
clc
mov
aam
push
jbe
jmp
push
and
shrb
add
rorl
sahf
daa
std
inc
mov
test
cltd
stos
cld
or
je
jle
mov
xchg
xor
addr16
mov
lods
dec
or
out
pushf
out
hlt
mov
loopne
push
mov
mull
cltd
jns
mov
adc
scas
cmp
xor
push
mov
iret
loop
sahf
push
cmc
lcall
cmpsl
dec
je
out
dec
out
add
ljmp
or
sbb
lret
push
mov
cmp
sbb
mov
jp
xor
lods
adc
outsl
int3
sub
pop
xor
lcall
and
int
loopne
xor
enter
and
lahf
adc
idivb
mov
lret
jl
push
xchg
in
pop
insb
insl
out
jns
inc
call
cmc
push
cmp
data16
push
mov
pop
cli
into
out
das
int
cmpsb
cmpsl
push
or
stos
adc
adc
dec
int
xchg
mov
lods
xchg
daa
js
nop
out
in
xor
shlb
mov
push
ret
dec
mov
inc
pop
adc
xlat
xor
movsl
mov
lds
mov
cmp
and
mov
pusha
rorl
popa
xor
data16
sbb
xorb
jecxz
out
dec
fdiv
out
ror
mov
mov
mov
lret
push
mov
dec
fnstenv
and
jne
sbbb
popf
int3
mov
xor
cld
jae
lods
sub
clc
aam
inc
enter
push
mov
movsl
or
aam
xor
jle
call
in
imul
adc
scas
jo
dec
sub
movsl
movsb
push
xchg
pop
jb
adc
cmpsl
aas
xor
ja
aas
add
test
outsb
cli
pushw
loopne
xor
dec
push
add
mov
lret
jo
or
call
jge
push
push
ljmp
pop
loope
xchg
pop
xchg
lret
mov
mov
add
in
iret
xchg
je
cli
rcl
leave
push
movsl
dec
pop
dec
mov
testb
outsb
push
scas
cmp
addr16
mov
inc
dec
jbe
jmp
lcall
pop
or
lret
mov
xchg
int
cmpsl
jmp
pop
iret
fiaddl
mov
xchg
mov
mov
mov
xor
cmp
gs
and
in
mov
sbb
and
testl
sbb
sub
data16
push
pop
mov
sbb
out
loope
jmp
daa
orl
into
pop
std
mov
jle
idiv
std
lods
dec
icebp
es
add
xchg
cmp
adc
push
mov
adc
jbe
jp
mov
sarb
push
and
test
insl
cmp
or
mul
aam
adc
rcrb
cld
cmpsb
iret
fidivrs
lods
sbb
push
lret
xor
mov
push
mov
fucomip
inc
pop
fwait
dec
and
ret
daa
mov
addb
mov
mov
stos
loop
pushl
jmp
dec
repz
es
lods
insb
loope
out
push
add
push
push
add
dec
dec
pop
lods
pop
jno
lahf
andb
xchg
ljmp
movq
inc
out
repz
or
push
jp
push
xchg
jae
fwait
je
push
and
inc
insl
push
sub
jmp
mov
or
lret
bound
jmp
outsb
repz
andl
popa
lea
inc
jnp
jp
or
cmp
scas
popa
sbb
dec
pop
xchg
in
inc
xchg
push
xchg
or
sbb
push
inc
jmp
mov
mov
mov
pop
push
sub
les
add
popa
fildl
les
out
mov
xor
sub
lcall
aaa
aas
into
or
stos
pop
in
xchg
xlat
mov
mov
test
iretw
lock
nop
mov
dec
xchg
fbstp
jns
mov
je
test
mov
mov
lods
movsb
and
pop
xor
pop
inc
mov
shll
rcl
cmc
leave
cmp
repz
jae
inc
mov
sub
in
nop
js
stc
ss
mov
jmp
add
and
mov
dec
aas
jb
adc
sub
popf
jno
in
cmpsb
iret
pop
orl
mov
adc
pop
adc
sarb
jmp
and
roll
mov
orb
test
inc
push
test
stos
push
dec
scas
mov
lods
inc
out
cmp
shrb
pop
pop
fnstenv
xor
push
adc
xchg
popf
fistps
loope
xchg
aas
add
pop
mov
jmp
in
out
mov
dec
xor
add
movb
lock
pop
mov
lock
lods
and
cmp
flds
sahf
loopne
rcl
mov
test
out
xlat
inc
or
cmpsb
std
in
xchg
fs
in
dec
fabs
lods
inc
pusha
addr16
ja
xorl
cs
es
out
xchg
mov
sub
and
test
fisubl
sub
mov
xchg
add
scas
pop
mov
jp
shrl
leave
and
pop
push
pop
cmp
jno
test
jo
cmp
outsb
lret
or
ss
lret
xor
notl
out
mov
and
int
test
mov
pop
sbb
daa
scas
pop
mov
and
movsb
stc
fsubr
clc
dec
outsb
push
xor
xor
push
push
mov
rcll
nop
dec
jne
ret
sub
std
scas
mov
xchg
aaa
out
js
loopne
loop
mov
lods
push
popa
push
or
shlb
jbe
push
aas
cmp
dec
movsb
inc
ljmp
adc
cmp
mov
cmpsl
data16
mov
shlb
addr16
mov
shl
in
mov
add
mov
add
jbe
xchg
cli
ljmp
dec
ss
lret
cmc
div
add
mov
push
mov
lds
dec
lods
cmc
movsb
sub
enter
sbb
cmp
insl
dec
pop
pop
gs
xor
pop
jp
lea
mov
sub
mov
push
imul
filds
mov
add
mov
stos
ds
jmp
lods
outsb
xchg
repz
mov
mov
rcll
adc
cmp
xchg
push
idivl
pop
pop
jl
sub
xor
lods
lret
xchg
sub
dec
clc
addr16
add
cmp
daa
filds
push
call
jle
dec
mov
jge
out
add
jnp
lock
push
sub
pop
adc
or
decl
test
xchg
xchg
cmp
out
mov
adc
orb
jle
mov
mov
orb
jecxz
leave
dec
mov
inc
adc
out
push
cmp
pop
xor
cltd
jle
sbb
insl
xor
fldcw
insl
sbb
test
and
std
repz
mov
test
mov
or
arpl
xchg
jge
mov
xchg
mov
scas
and
mov
in
js
ret
jmp
scas
loope
mov
or
adc
lock
fcomi
cmp
push
sbb
je
mov
cmp
loopne
sub
sti
mov
add
es
enter
xchg
push
stc
movsb
insb
add
jae
cld
lds
jns
enter
inc
pop
fs
dec
les
add
push
jns
gs
add
add
add
mov
pop
cmpl
js
inc
push
push
cmp
inc
and
sbb
out
movsb
push
enter
mov
xchg
ja
sub
jnp
pop
lret
pop
xor
cmp
out
mov
xchg
mov
lods
add
inc
addb
leave
aad
ret
xchg
cmpsb
xchg
loope
mov
rcll
dec
repz
pop
sub
cmpsl
dec
lods
mov
inc
xor
rcl
sub
mov
cmp
jnp
or
jo
arpl
cld
sbb
cwtl
jnp
jb
mov
add
sti
daa
popa
jb
pop
jns
xlat
pop
out
pop
sbb
dec
lods
adc
pusha
mov
cmp
inc
and
cmpsb
iret
cmp
test
push
inc
sbbb
pop
bound
outsb
sub
cmpsl
cmp
mov
sti
push
cmpsl
fstl
jns
dec
imul
loopne
mov
or
fidivrs
pop
jo
mov
ret
push
lea
test
insb
inc
lahf
xlat
jge
cli
mov
loop
call
js
lea
outsl
adc
jno
inc
or
cmpsl
cmp
pop
fisubl
mov
test
addr16
cmp
neg
clc
pop
outsb
pop
xchg
or
push
int3
cmpsl
push
add
pop
push
add
insl
mov
mov
jnp
es
outsb
lret
xchg
fistps
inc
jmp
popa
aad
ret
inc
jle
int
xor
push
cltd
pop
jb
cmp
dec
sahf
cmpsb
scas
adc
pushfw
and
psubb
push
or
sub
add
inc
ret
pushf
sti
and
out
sbb
adc
negl
lds
in
and
loope
ss
fwait
xchg
scas
stc
lret
rcrl
jecxz
pop
popa
mov
mov
ret
push
inc
mov
aas
lds
clc
push
lahf
imul
int3
push
push
test
jb
cmp
gs
scas
stos
dec
ficoms
xchg
gs
gs
inc
xchg
arpl
add
into
aaa
movsl
test
outsb
imul
faddl
mov
sub
mov
cmp
jecxz
add
mov
lcall
mov
push
inc
enter
out
lcall
pop
lds
repnz
scas
icebp
add
dec
js
adc
lods
cs
movsl
push
add
mov
pop
jg
sbb
push
push
arpl
xchg
stc
or
out
in
sub
push
repnz
jl
jno
inc
add
push
arpl
adc
xchg
xor
outsl
fnstenv
idiv
sahf
sub
icebp
daa
das
daa
ficoms
movsb
lea
mov
xchg
mov
in
imul
pop
fldt
sbb
pusha
adc
mov
loopne
xchg
adc
sbb
test
stos
mov
pop
mov
xchg
adc
push
repz
or
in
mov
lret
jp
sbb
loopne
inc
cmp
mov
sbb
aas
pop
cmp
fisubrl
out
push
test
cs
xor
je
enter
arpl
fimuls
cli
inc
mov
dec
insb
adc
ljmp
insb
dec
xor
lahf
jmp
pushf
cmc
clc
mov
fwait
cmp
fld
xlat
push
and
mov
pushf
add
pop
mov
mov
mov
lahf
lcall
repnz
xchg
fs
stos
mov
scas
and
stos
out
stc
sub
scas
out
hlt
mov
inc
mov
mov
and
inc
and
mov
adc
jb,pn
testl
pop
xor
es
push
xor
aad
scas
jae
sbb
adc
xchg
neg
dec
add
lods
movsl
subl
fnstcw
mov
aaa
mov
add
in
pop
cmp
sahf
in
cmp
repz
and
enter
repz
test
cmpsb
mov
sub
mov
sub
xchg
dec
dec
pop
xor
rorb
xchg
dec
das
mov
outsb
xchg
mov
jmp
fldl
lods
imul
les
pop
pop
cwtl
jg,pt
das
xor
push
mov
xchg
lods
jo
loop
fstpl
call
ljmp
mov
dec
mov
pop
repz
scas
xchg
sbb
and
jge
xchg
or
daa
fwait
pop
adc
inc
sahf
push
pop
mov
jns
rcr
ret
jmp
lret
mov
push
nop
aad
cmp
in
dec
nop
ss
pop
outsb
neg
rolb
lods
loop
es
xchg
insl
inc
adc
jle
pop
outsl
or
jg
jge
sbb
xchg
xchg
lret
xor
stc
imul
cmpsb
rorb
mov
and
or
mov
dec
sbb
mov
sub
sarl
les
jno
mov
mov
pop
sub
adc
push
pop
lcall
vsubss
and
jae
pop
pop
lret
sbb
aad
jl
push
mov
insl
jae
sbb
cmp
js
ja
dec
sub
xchg
jecxz
xor
nop
mov
dec
and
mov
mov
xchg
cltd
cmp
jl
push
inc
push
xor
sub
stc
popa
jbe
add
sahf
xchg
jp
js
xchg
lret
add
pmaxsw
push
inc
xor
mov
jno
test
jl
cwtl
xor
push
fs
push
sbb
jo
jge
or
jae
test
in
sbb
dec
jecxz
call
mov
lcall
test
into
rcl
cwtl
movsl
std
in
xor
pop
mov
and
inc
pusha
movsb
pop
sub
ror
xchg
mov
insl
iret
add
testb
jnp
iret
mov
dec
add
push
xchg
pop
cmc
mov
dec
mov
lds
sub
sbb
sub
lea
movsl
push
jmp
or
sub
xlat
popf
in
cmp
adc
pop
loopne
inc
pop
iret
jg
mov
add
inc
dec
inc
add
pop
mov
sbb
xchg
insb
cmc
incl
das
xor
push
jmp
mov
xor
lcall
lret
and
cmp
jp
xlat
loope
lock
mov
mov
hlt
sub
push
xorl
ds
push
dec
adc
pop
adc
popa
aam
pop
scas
or
sbb
xor
xchg
inc
sbb
loop
insl
lock
mov
and
inc
jge
loopne
xor
inc
out
testb
adc
dec
sbb
popf
xchg
jo
mov
addr16
dec
cmp
inc
jb
dec
andb
addr16
add
das
shrl
data16
sub
xchg
pop
ror
jmp
jl
jmp
xlat
sbb
cmp
adc
sahf
jb
pop
push
xchg
shr
jnp
add
pusha
fsubrp
sbb
fsubl
mov
xor
xor
jo
stos
xbegin
sub
cli
mov
mov
fildll
mov
call
xchg
mov
xchg
lahf
mov
xor
out
inc
mov
movsl
incl
testb
aad
aad
pop
push
sbb
ret
sub
inc
int
mov
into
outsl
adc
aam
jbe
ret
notb
pop
cmp
cmp
add
mov
loop
sub
push
dec
and
sbb
fistpll
loop
fmuls
cmc
mov
xchg
mov
and
pop
sbb
cmc
shll
adc
jge
orb
pop
inc
fnstsw
mov
test
push
test
or
ja
xor
shlb
dec
jae
xchg
je
int3
inc
and
lret
mov
clc
sbb
aas
cmpsb
insb
push
xchg
mov
dec
sub
add
testb
cmp
jnp
mov
pop
xchg
or
and
ljmp
cltd
les
mov
inc
aam
dec
insl
fisubl
sub
mov
ret
sub
stos
mov
jb
ds
jmp
loop
xchg
jmp
pop
stos
mov
sub
je
jne
rcrb
nop
cmp
js
in
push
jle
mov
scas
xor
sbb
out
aaa
push
test
mov
add
dec
ret
in
push
ret
jp
movsb
mov
test
jb
arpl
dec
sarl
jecxz
pop
loopne
ret
jbe
adc
popa
lahf
insl
in
outsl
adc
movsl
inc
movsb
movsb
push
je
mov
jae
push
in
adc
push
adc
adc
sbb
mov
sub
or
push
insb
add
decl
jl
mov
push
jne
les
pop
imul
filds
push
xlat
or
fwait
jno
lahf
sbb
test
les
xor
ret
jne
push
cmp
add
inc
aas
push
and
xchg
add
outsl
scas
dec
sub
lock
mov
test
mov
inc
and
and
mov
scas
jge
lods
add
addr16
mov
aas
into
icebp
iret
idiv
xchg
sarl
scas
xchg
mov
out
push
mov
fmulp
loope
loope
lcall
popf
xor
ret
mov
cmpb
in
xchg
sti
ret
jmp
cmp
loop
mov
int3
rclb
sbb
mov
lock
push
cs
clc
inc
mov
repz
mov
mov
cmp
mov
mov
aas
ljmp
xor
cmp
incl
movsb
loop
xchg
pop
add
sub
jae
les
xchg
dec
in
fisubrs
iret
xchg
jno
pop
cmp
shl
xor
and
fstpt
imul
aad
fistl
adc
inc
pop
inc
imul
pushf
mov
ret
jecxz
cmp
test
mov
dec
int3
or
dec
xor
jno
add
add
pop
popf
xorl
and
rcrl
adc
jbe
stc
xor
push
push
lahf
and
push
and
xor
pop
insb
jbe
mov
aas
dec
pop
outsb
sbb
outsb
and
adc
xor
pusha
push
mov
xor
xor
fcoml
lret
pop
sub
push
mov
mov
sub
cmp
jnp
decl
jns
add
and
lret
cmp
cmp
add
mov
add
rorl
ror
jns
or
adc
push
je
mov
iret
lahf
dec
sbb
or
nop
mov
sti
scas
dec
lock
stos
add
push
jb
icebp
xchg
adc
add
lods
xor
pop
dec
and
inc
mov
stc
rep
cwtl
mov
xchg
or
push
cwtl
mov
cmp
push
mov
add
mov
cmp
jnp
sub
push
movzwl
inc
data16
push
test
movsb
lahf
lahf
lds
xchg
jp
mov
pop
pop
lods
shl
cmc
addl
or
dec
mov
xchg
repnz
mov
add
gs
jg
scas
lret
enter
adc
pop
push
sbb
mov
std
jb
fwait
adc
add
mov
or
push
ja
adc
mov
inc
dec
std
jmp
push
adc
mov
ss
jecxz
sbb
test
jno
sub
push
push
jnp
xchg
cwtl
pop
aad
mov
jg
insb
dec
jns
jbe
in
sub
cmp
rcrl
adc
out
insl
pop
test
xorb
out
sbb
daa
adc
cmp
fsubs
dec
testl
inc
outsb
adc
jns
pop
xchg
std
mov
in
nop
mov
mov
stos
xchg
shlb
cmp
loopne
lods
sahf
popf
mov
mov
sub
call
loop
mov
dec
sub
xlat
pop
xchg
mov
test
in
arpl
adc
test
mov
mov
iret
test
mov
orl
sbb
repz
pop
or
imul
out
mov
lret
push
jne
dec
int
jno
and
aad
scas
ror
fucomi
repz
jg
sbb
jl
adc
sahf
pushf
fs
jg
cltd
pop
mov
fdivl
add
and
add
nop
out
movsl
jle
hlt
push
fstps
adc
jl
mov
dec
and
in
inc
mov
nop
sub
xchg
push
pop
gs
adc
pop
repnz
test
lock
dec
adc
sub
xchg
sub
int
jg
jg
cmp
out
mov
inc
dec
daa
mov
scas
cltd
mov
push
xlat
mov
and
inc
movb
stc
mov
jb
cmc
push
mov
std
es
ss
pop
xchg
and
dec
pop
lock
pop
jp
mov
incl
pop
xor
jmp
and
sbb
outsw
push
fisubs
out
adc
or
mov
mov
mov
mov
mov
daa
int
push
hlt
loope
adc
pop
mov
push
xor
mov
icebp
cld
test
test
jo
ljmp
pop
add
mov
push
xchg
out
repz
push
push
pop
jg
pop
mov
mov
mov
xchg
and
das
adc
mov
imul
adc
dec
mov
or
xor
or
sub
leave
push
lret
xor
ret
fwait
sub
or
in
les
push
cmc
enter
mov
mov
cltd
mov
repnz
stos
sub
adc
or
sub
mov
pop
pop
push
adc
insb
fsubrl
push
jp
mov
clc
into
mov
sub
mov
mov
adc
sbb
or
movsb
dec
and
inc
mov
cwtl
sar
sbb
aas
pop
outsb
pop
outsl
jns
cmp
aad
scas
xor
fdivrl
out
cli
xor
adc
testb
negl
mul
push
ret
les
xchg
mov
aad
mov
xchg
out
jo
test
dec
push
outsb
pop
adc
push
std
cmp
jge
jae
xchg
push
mov
and
adc
sbb
pop
cmp
mov
pop
jl
gs
popa
loopne
test
push
sti
adc
imull
push
mov
or
in
scas
inc
arpl
pop
test
test
sbb
lret
push
mov
and
xor
sar
fwait
stc
adc
pop
movsl
jmp
in
jo
bound
in
sbb
mov
fldl
cmp
jmp
movups
test
mov
lods
add
dec
add
push
mov
stos
cmp
rolb
push
cmp
icebp
icebp
scas
mov
pcmpgtw
clc
js
and
add
and
movsb
arpl
movsb
popf
in
inc
pushf
pusha
mov
in
add
and
stos
sahf
add
dec
or
testb
adc
mov
xor
add
and
cmp
and
hlt
xchg
or
cld
fdivrs
add
mov
or
pop
mov
arpl
xchg
pop
out
or
stos
cld
jg
xchg
aam
pusha
inc
nop
xchg
out
xchg
mov
lock
rcll
mov
mov
push
ljmp
mov
ja
xor
fdiv
xchg
es
or
dec
push
push
pop
push
pop
adc
gs
out
sub
stos
fs
push
fnsave
mul
aad
and
cmp
jns
sub
add
mov
rclb
sub
mov
je
pop
mov
scas
xchg
sub
xchg
in
orl
xchg
cmpb
rcrl
or
inc
clc
in
mov
sub
sbb
mov
dec
insl
jnp
fistpl
adc
enter
shrl
jbe
xchg
jl
sub
inc
push
fwait
scas
push
cs
cmp
mov
or
sahf
adcb
cwtl
clc
push
filds
mov
mov
xlat
dec
fstps
cmp
std
or
fiadds
loope
insl
movsb
push
or
xor
andb
mov
lods
movsb
addr16
lock
nop
ds
mov
and
fstps
mov
xchg
enter
sub
lcall
xor
movsl
sub
fsubs
aas
enter
sub
or
sbb
jecxz
jecxz
inc
sub
movd
pop
or
in
push
or
divl
dec
data16
pop
movl
or
fistps
pop
mov
mov
push
mov
insl
lock
imul
sti
sbbb
out
mov
mov
rcrb
mov
xchg
enter
clc
lcall
ss
jmp
xor
es
into
mov
stc
aas
test
jge
insb
jmp
jp
call
icebp
fisubrl
mov
push
jne
loope
clc
in
push
scas
rcl
stc
je
repz
mov
pusha
dec
fldl
pusha
xchg
lret
push
rcl
popf
sbb
bound
cmp
push
mov
das
push
pop
push
cmp
jo
mov
or
dec
pop
sub
pop
shll
gs
sbb
lea
dec
mov
jnp
hlt
lods
fbstp
xor
in
stos
popf
loope
mov
sub
mov
aaa
subb
dec
push
sub
jbe
loop
cli
fdivrp
mov
incl
test
push
adc
mov
stos
ret
fcompl
mov
sti
pop
dec
out
xor
aaa
notl
maxps
and
addr16
push
stos
inc
into
and
pop
xlat
pop
jle
xor
jmp
jae
dec
mov
sbb
addb
xor
sbb
pop
mov
negl
xor
loope
hlt
xchg
add
sbb
dec
push
decl
sbb
icebp
arpl
pop
mov
sahf
ja
into
lret
xor
mov
repz
aam
iret
push
mov
mov
xchg
push
jp
icebp
jg
rcrb
insl
xor
pop
mov
push
stos
in
adc
out
addl
les
mov
test
push
jmp
mov
lea
adc
jbe
roll
lret
lcall
ja
fidivs
jbe
nop
or
cltd
data16
push
ret
cltd
in
rorb
mov
lret
lcall
or
rcrb
test
std
jmp
mov
add
lods
cmp
add
xchg
bound
imul
leave
sarl
push
inc
daa
sub
add
fdivs
in
sub
jne
fldl2e
push
lcall
ficoms
xchg
jb
mov
mov
cld
andl
mov
adc
cld
inc
int3
mov
jle
test
dec
jo
mov
outsl
outsb
out
hlt
xchg
xor
inc
leave
pushf
ss
or
mov
mov
cwtl
xor
jle
daa
push
stc
pop
popf
in
das
mov
sahf
mov
mov
fstps
jl
bound
mov
outsl
pop
dec
rol
and
shlb
mov
rcrl
adc
or
cli
dec
sbb
and
sarb
cmp
cli
xor
push
inc
sbb
leave
leave
add
ja
pop
jl
push
cmp
lods
cs
xlat
mov
idiv
ret
scas
cmp
sub
jle
and
shr
dec
inc
rclb
out
sbb
pop
popf
notl
test
cmp
aaa
cmp
adc
es
cmpsb
rcl
mov
fwait
subl
sahf
fdivrl
pop
adc
mov
jb
out
out
jne
or
in
push
pop
lret
mov
sarb
fstpt
push
dec
data16
loopne
in
sub
out
movsl
sbb
xchg
pop
adc
jo
lret
jno
sbb
cmp
ljmp
aaa
and
test
jle
jle
push
lods
lods
sub
lcall
jg
clc
push
lods
mov
jl
xor
das
lret
repz
rcr
sbb
scas
cld
sbb
mov
pushf
subb
shrb
push
ficoml
arpl
divb
pop
mov
mov
mov
rcll
xchg
adc
mov
les
mov
das
pop
mov
inc
inc
mov
pop
pop
adc
cmc
rorb
and
pop
pop
repz
fcoms
cmc
std
arpl
or
mov
ret
and
push
mov
cli
xchg
cmp
test
idivb
or
dec
lahf
mov
outsl
pop
ja
loope
jl
test
shll
cmp
xor
popf
jbe
add
adc
in
mov
clc
pushf
leave
cmp
jb
mov
jl
cmp
popf
aam
std
leave
pop
out
cwtl
daa
inc
ljmp
inc
call
xchg
pop
lret
push
fdivs
pop
pop
pop
sub
push
adc
jg
outsb
ljmp
ss
dec
icebp
pop
jp
movsl
jle
sbbl
mov
push
std
in
jnp
cmp
jp
and
test
nop
mov
mov
out
movsl
cltd
cmp
mov
sbb
dec
inc
cmpsb
popa
and
push
repnz
test
pop
add
or
mov
push
cli
cmpsl
fnstcw
test
ucomiss
sbb
dec
fdivs
push
push
adc
in
out
cmpsb
leave
movsb
sbb
cmp
adc
fidivrl
in
imul
call
jne
pusha
inc
xchg
sub
stos
iret
xor
mov
jp
push
xlat
mov
push
mov
xchg
jo
movsl
mov
scas
add
xchg
shr
inc
cwtl
lods
fcoms
add
inc
in
daa
mov
jle
out
mov
dec
inc
js
mull
mov
outsl
rclb
jno
mov
cmpsb
mov
and
mov
je
xor
icebp
mov
adc
loopne
jmp
or
adc
das
or
mov
aad
arpl
in
dec
jae
xor
mov
mov
cltd
dec
shlb
shrb
insl
pusha
sarl
xor
sbb
insl
popa
icebp
sbb
dec
int3
mov
push
ljmp
mov
movsl
bound
lea
popa
iret
insl
push
pop
jns
add
mov
pop
lods
cs
daa
jg
enter
pop
dec
xchg
cmp
outsl
lods
lods
addl
bound
sub
mov
lcall
into
dec
pop
cmp
jne
rcrb
daa
fs
scas
in
imul
cmp
dec
jae
sbb
dec
add
aad
bound
in
clc
pusha
mov
scas
in
jmp
sub
push
je
loope
into
or
or
lods
jo
into
lret
ficompl
pop
imul
insb
loop
add
mov
dec
aas
in
popa
mov
bswap
jnp
add
inc
ret
push
negb
push
mov
mov
mov
out
pop
sub
out
shlb
enter
jle
movsl
mov
call
add
mov
aaa
test
enter
idivb
in
fistpl
imulb
fisubrl
push
xchg
xorb
out
pop
adc
insl
gs
xchg
mov
push
sbb
lea
inc
mov
enter
cld
dec
dec
scas
xor
sbb
sub
mov
ljmp
sbbb
push
add
std
mov
mov
pop
add
push
adc
lock
leave
imul
test
lock
lret
mov
cwtl
pop
and
push
repz
and
jle
imulb
jno
jecxz
dec
addr16
push
push
or
push
adc
popf
or
clc
popl
into
push
mov
push
orb
or
cld
out
xchg
es
bound
shl
xchg
pop
lret
pushf
rorb
scas
xchg
xchg
and
fmull
bound
push
sub
xchg
jno
stos
outsl
add
mov
fs
loopne
in
sahf
enter
in
push
test
mov
ja
xchg
outsb
mov
sbb
fistpl
jne
pop
mov
ret
sbb
push
xchg
addr16
rcll
cld
rep
jo
fucomip
hlt
pop
xchg
jecxz
ljmp
push
push
lret
movsl
or
and
xchg
rcrl
or
fwait
stos
xor
lock
or
push
xchg
cs
sub
clc
fistl
nop
aaa
aaa
jl
pop
jecxz
adc
std
xchg
mov
sbb
bnd
xchg
or
fidivl
mov
pop
repnz
cs
cmp
dec
mov
mov
adc
ss
imul
lret
xor
xchg
cmp
jp
adc
xor
add
cwtl
jo
cli
and
test
dec
and
or
cmc
or
or
xchg
push
repnz
jp
jge
fistps
adc
sbb
test
xorl
std
xchg
mov
mulb
cmpsl
adc
in
lret
insl
pop
insb
cmp
inc
jns
or
testl
stc
loop
jns
xor
mov
or
pop
xor
ret
aad
xor
mov
or
popf
pop
in
pop
test
jg
leave
jno
push
add
or
mov
dec
cmp
jp
rcll
jo
xor
sbb
xchg
jl
adc
mov
orl
mov
in
lods
out
repnz
imul
pushf
xor
scas
push
inc
or
rolb
rcrb
addr16
jno
stos
push
outsb
cmp
jae
lret
in
xchg
cli
in
jbe
push
cmp
jae
cmpsl
in
imul
mov
inc
pop
aam
fcoml
mov
pop
test
or
std
cltd
test
or
insl
sbb
stos
clc
xchg
mov
add
pop
jl
fwait
call
cmc
or
cwtl
fwait
and
push
das
decb
in
popf
aaa
push
mov
push
pusha
xchg
addr16
gs
aam
dec
add
xorb
mov
inc
in
test
dec
ss
insl
dec
mov
sbb
cmp
test
aas
sbb
cmpsb
push
jp
cmp
dec
shlb
inc
xor
pop
addb
add
fistl
stos
and
repz
sub
inc
sub
clc
ret
adc
addl
mov
inc
lcall
mov
jecxz
push
cmp
mov
or
lret
inc
sub
inc
in
cmp
shll
insl
loopne
test
or
out
or
cmp
push
xchg
cmpsb
dec
je
incl
mov
test
pop
inc
mov
std
pop
xchg
or
insl
andb
cli
add
pop
pusha
fs
mov
or
mov
ret
dec
int3
cmp
addr16
dec
sub
cmp
mov
jbe
or
and
shrb
adc
cmp
mov
xlat
xlat
inc
xor
fsubl
inc
test
xor
ljmp
mov
pusha
push
push
mov
sub
jmp
adc
xlat
xchg
into
sub
pop
xor
pusha
xor
mov
xchg
pop
xlat
pop
inc
in
test
test
adc
inc
outsl
mov
mov
mov
mov
jmp
insb
and
ss
xchg
cmpl
pop
pop
inc
cmpsl
xchg
loop
dec
dec
jl
sub
xchg
jge
mov
cmpsl
call
incl
dec
insl
loope
xchg
daa
and
inc
mov
mov
aas
and
loop
cmp
gs
and
ret
push
insl
fisttpll
cmc
test
je
int
mov
xchg
adc
cmp
jl
xor
test
sub
xor
pop
ds
push
sbb
mov
inc
mov
dec
ret
sar
dec
cltd
or
movsl
mov
fs
mov
pop
int
cmpb
dec
ss
pop
mov
xlat
inc
sub
rcr
ja
fnsave
mov
in
in
sbb
xor
pop
pushf
js
flds
bound
adc
leave
std
sub
test
idivl
cmp
xchg
mov
jo
mov
jne
dec
ret
das
mov
repz
mov
adc
or
fbstp
jmp
inc
inc
sbb
add
xor
mov
mov
insb
push
rorl
repnz
sub
mov
cmp
or
push
push
lock
dec
xlat
es
cmp
lods
lea
pushf
push
out
adc
stos
or
sahf
mov
mov
cld
lods
push
adc
fmuls
and
mov
test
mov
cmp
sub
sbb
mov
push
and
xchg
popf
fstpt
cmp
or
add
push
mov
push
sbb
or
pushf
in
aaa
xchg
stc
push
mov
sarl
jbe
fwait
cmp
or
mov
inc
stos
xor
shl
pop
xor
inc
cld
inc
punpcklwd
mov
dec
xchg
iret
and
mov
repz
ljmp
jg
sbb
push
mov
sub
cmp
sbb
bound
and
ss
jb
shrl
pop
fmull
or
hlt
pop
xor
push
mov
fsts
sub
inc
mov
sub
jg
sub
sbb
repz
sub
stos
sub
rcll
cli
ficomps
mov
inc
sbb
jno
frstor
ret
daa
lret
sbb
jge
sub
push
jl
popa
xlat
mov
fs
ljmp
push
jecxz
mull
xor
orl
sti
mov
mov
and
and
cmpsl
lcall
scas
repnz
fiaddl
xor
pop
cld
sbb
or
mov
out
mov
nop
ror
scas
xor
sbb
push
lds
call
jno
aas
aam
cmpsl
jne
lods
push
push
outsb
fnstcw
out
jl
lods
xor
aam
roll
fistps
movsl
fsubrl
cmp
lret
push
inc
xchg
xor
mov
xchg
mov
push
pop
jge
xchg
in
imul
xchg
cmp
rorb
aam
push
sti
and
inc
xchg
sbb
sub
fcoms
add
pop
dec
add
and
pop
test
xlat
and
pop
adc
and
out
notb
or
les
insl
les
repz
mov
xchg
inc
iret
and
pop
mov
mov
inc
dec
loop
lahf
cs
sbb
add
mov
jnp
push
nop
sbb
outsb
lock
pop
and
push
iret
mov
and
jne
int3
push
sbb
push
lret
cltd
or
mov
fldl
mov
mov
fiaddl
mov
sbb
jl
popf
insb
movsb
loop
stos
jbe
xor
push
pusha
orb
adc
inc
and
sbb
rcrb
mov
fwait
adc
mov
out
aas
push
les
es
or
pop
add
jnp
loop
and
add
cmp
repz
push
out
pushf
cmc
mov
das
and
push
test
sbb
inc
int3
movsl
and
jl
dec
xchg
inc
adc
addl
hlt
jg
sbb
mov
cld
cmp
add
mov
cwtl
les
or
ja
sbb
xor
sub
dec
mov
xchg
dec
cmp
insl
imul
mov
sbb
push
jno
inc
inc
in
popa
sbb
js
pop
or
sti
adc
into
mov
sahf
cs
push
lock
add
push
lcall
imulb
popf
sub
jno
lret
mov
mov
lock
xchg
push
xor
sbb
jne
pop
test
cmc
loop
imul
adc
cmovl
xchg
xchg
pop
stc
nop
inc
mov
imul
cmp
andb
mov
jmp
jge
enter
lahf
aas
sarl
mov
fisubl
and
aam
cmc
inc
fisubrs
and
add
lret
jle
fwait
sub
scas
jp
pop
mov
aad
icebp
mov
jns
cmp
pusha
adc
out
sahf
faddl
ja
and
or
xorl
iret
inc
push
in
xor
mov
xchg
mov
inc
fcoms
in
fadds
push
mov
aas
idivl
cli
xchg
sti
mov
cmp
imull
lret
sbb
push
jb
in
insl
xchg
pop
and
rcrb
out
cmpsb
clc
int
and
adc
je
insl
int3
xchg
lea
pop
nop
sbb
pop
mov
jbe
insl
lods
sub
xchg
rcrb
aam
cmp
ret
iret
sbb
ret
and
adc
rorb
pop
mov
cmp
pop
ficompl
push
mov
stos
pop
pop
mov
jg
mov
jb
inc
scas
mov
stc
inc
xor
int
outsb
pop
movsb
xor
push
mov
sbb
cltd
mov
out
clc
outsl
and
jbe
jbe
fs
fsubl
push
mov
out
sub
daa
jne
or
inc
mov
rep
clc
jae
mov
cmp
int3
fcomps
sub
loop
cwtl
cmp
les
xchg
call
fwait
nop
mov
cmp
fnstsw
test
movsl
roll
ja
and
std
pop
loope
lds
mov
cmp
inc
iret
es
enter
pop
test
fsubs
test
or
cli
arpl
inc
pop
xor
cmp
scas
mov
stos
dec
fisubrs
add
je
pop
cs
add
cmpsb
aas
clc
insb
xchg
mov
movsl
sbb
jnp
mov
insb
sarb
movsb
xor
insb
pop
cmp
sti
sbb
ss
mov
das
daa
adc
and
adc
inc
fst
std
xor
or
mov
rolb
loop
or
xorl
daa
cwtl
insl
mov
dec
mov
add
stc
out
sbb
leave
dec
jge
negb
notb
inc
aas
fisubl
lahf
std
inc
mov
stos
sbb
and
mov
xchg
ds
and
or
cmpsl
mov
jo
or
add
dec
jp
fsubrl
cmpsb
mov
xchg
sbbb
in
jo
cmovae
imul
sti
jle
jp
dec
push
inc
push
mov
or
or
popa
mov
adc
lea
fsubl
ljmp
xchg
fcomi
insl
rclb
push
add
imul
jecxz
or
dec
inc
outsb
mov
stos
cmpsl
mov
xchg
xchg
in
clc
cmp
dec
jecxz
mov
movsl
dec
mov
pop
xchg
fstpl
out
lock
cmp
pop
inc
pop
nop
les
mov
push
sub
xor
mov
inc
popf
scas
cmpsl
incb
and
ficoml
cltd
shrb
pop
mov
in
lcall
in
aas
xchg
dec
movsl
fs
imull
jp
push
mov
inc
push
sub
add
and
mov
and
adcl
xor
pop
push
shrb
and
out
inc
mov
daa
jns
mov
cmpsl
or
cmp
sbbb
push
mov
pop
das
gs
xchg
add
jmp
lret
push
movsb
push
enter
sti
push
leave
dec
ficoms
cmp
sti
xchg
push
push
mov
lods
sbb
sbb
adc
adc
dec
nop
jl
ds
inc
js
push
push
cmc
cs
xorb
pop
jne
dec
mov
mov
jg
xchg
stc
ljmp
rorl
repnz
seta
into
adc
das
sbb
xchg
jb
loopne
push
add
mov
lds
lcall
stos
icebp
push
lret
ds
xlat
ret
sub
lcall
mov
dec
mov
sbb
lret
test
mov
inc
sti
add
mov
cmp
xor
sbb
and
pop
jmp
shrl
or
fcompp
mov
inc
push
inc
inc
shrb
push
sbb
and
and
jle
lcall
ljmp
imul
mov
push
pushf
jge
inc
push
pop
inc
icebp
loop
mov
push
mov
push
and
fbstp
adc
andl
xchg
dec
sti
out
push
sti
mov
jb
jecxz
in
dec
cwtl
mov
adc
inc
sahf
inc
inc
xchg
scas
imul
add
push
out
and
xlat
lods
iret
sbb
out
dec
or
ret
aad
add
push
xchg
cmc
sub
add
and
inc
pop
mov
sarb
mov
or
dec
pop
int3
inc
in
stc
incl
sbbb
jns
test
movsl
shlb
sti
and
push
loope
fidivrs
stc
sub
lret
sbb
pushf
add
jg
add
xchg
inc
sub
inc
mov
inc
int3
loop
inc
dec
pop
ljmp
sub
stc
icebp
out
ja
inc
mov
sub
mov
movl
clc
cs
out
sti
dec
sub
sub
jb
push
adc
sbb
push
in
shlb
sub
mov
jb
daa
sbbl
inc
cld
sahf
setp
je
jbe
hlt
mov
push
stos
cmp
test
jns
sub
daa
or
int
lods
mov
or
and
jo
jns
fldt
mov
push
arpl
addr16
lds
pop
xor
shll
jge
xor
adc
lea
push
subl
inc
xchg
cs
jno
jl
insb
sub
inc
add
pop
icebp
clc
cmp
jns
ret
pop
push
cmpsl
addr16
cmpsl
push
or
push
sti
in
in
add
js
out
ja
xlat
cmp
lods
in
adc
out
or
int
clc
insl
cld
mov
cmp
repz
addr16
mov
nop
pop
sub
pop
test
dec
sbb
mov
sbb
pop
int
punpckhwd
outsl
add
cmp
or
push
jl
push
mov
sub
xchg
jne
dec
sub
jnp
je
mov
leave
jae
sub
sbb
xchg
and
loope
adc
inc
xchg
sub
nop
testb
add
stc
push
mov
xchg
inc
and
in
mov
inc
sbb
arpl
sahf
mov
adcl
adc
scas
mov
cmpsb
pop
xchg
add
jl
cli
dec
and
mov
hlt
outsb
std
push
pop
add
lods
inc
mov
fimuls
outsl
mov
cmpsl
mov
jl
sub
dec
mov
dec
out
dec
inc
scas
rcrl
mov
ljmp
dec
jp
es
imul
mov
or
mov
add
push
movsl
xor
jl
loop
xchg
add
stc
lret
lcall
test
xor
xchg
arpl
push
xchg
jle
mov
arpl
add
dec
daa
outsl
mov
lock
xor
les
push
dec
hlt
je
loop
push
je
aaa
not
lods
adc
cmpsb
inc
push
icebp
rorl
add
push
jnp
out
jge
cmp
add
xor
mov
inc
inc
ficomps
cmc
jecxz
in
cmc
mov
mov
pop
xchg
pop
mov
insl
add
sub
cmp
inc
dec
stc
fisubrl
ret
out
pushf
pop
test
mov
lock
pushf
clc
xchg
outsl
mov
pop
iret
cltd
clc
ljmp
cltd
or
xor
ret
ret
adcb
push
arpl
outsl
mov
ss
cmpps
xlat
push
je
test
add
idiv
shl
mov
xchg
cmp
fdivs
and
adc
add
aas
stc
sub
sbbb
mov
inc
sbb
scas
es
inc
push
cs
pop
and
push
aad
or
ljmp
sub
dec
repnz
mov
sbb
inc
sub
adc
xor
add
lods
jae
aam
mov
inc
jmp
arpl
out
push
lahf
adc
leave
mov
imul
sbb
pop
xchg
jge
lret
push
inc
jl
scas
inc
or
jne
push
xchg
in
push
pop
mov
dec
lods
cmc
push
sbb
pop
mov
sbb
movsl
fdiv
stos
jp
add
test
inc
std
xor
lret
jae
inc
sahf
mov
mov
inc
push
daa
and
sbb
mov
sub
mov
das
sbb
shrl
clc
dec
js
xor
cwtl
mov
fs
pop
testl
aaa
into
jle
divb
mov
dec
lock
sar
cltd
push
scas
push
cmpb
decb
cs
jae
aaa
jno
jae
add
in
xor
nop
jae
xchg
movsl
lds
mov
lock
ja
adc
add
cld
xchg
push
inc
rcl
aad
dec
mov
punpcklbw
or
pop
and
cmp
cmp
test
data16
lea
xchg
push
adc
xor
sub
push
jne
mov
sub
mov
dec
mov
shlb
ljmp
lods
sbb
mov
or
add
mov
mov
sti
das
loope
push
dec
into
mov
inc
shll
popf
fnsave
and
aam
popf
xlat
aad
out
data16
dec
pop
sarb
dec
dec
xor
daa
aaa
addr16
fincstp
or
lret
push
add
pop
sbb
test
xor
aam
push
inc
pop
push
sbb
lahf
lss
mov
notb
dec
mov
cmp
loopne
or
mov
movsb
jp
or
mov
les
sub
testb
out
lahf
mov
outsl
add
pop
xchg
lea
push
clc
push
push
xlat
mov
cmp
cmp
dec
push
loopne
adc
filds
sub
mov
ja
mov
mov
pop
ret
fs
nop
jge
ret
jo
lds
dec
add
sti
xchg
inc
pop
mov
lds
inc
cs
jb
lahf
pop
imul
lret
adc
jp
mov
hlt
xor
addr16
push
push
ljmp
in
stc
pop
inc
fmulp
pop
mov
push
inc
je
push
jg
mov
lret
push
dec
push
push
and
adc
out
and
mov
or
int
cmp
mov
out
pop
and
jge
scas
mov
xor
cmp
in
sub
add
lods
push
or
inc
jb
fnstenv
ja
arpl
and
fsubrs
lret
xor
std
xor
push
std
xchg
adc
xor
mov
fs
mov
hlt
sbb
add
or
pop
mov
test
jecxz
sbb
out
leave
mov
cmpsl
mov
scas
int
lret
mov
xor
push
jge
mov
cs
adc
call
jne
repz
mov
mov
sub
scas
dec
test
movsl
inc
push
push
sbb
jmp
dec
rclb
inc
movsl
adc
outsl
cli
xchg
pop
cld
rorb
xor
pop
adc
sbb
push
lahf
and
arpl
mov
ljmp
cmp
mov
or
cld
jo
xchg
arpl
fmull
ret
daa
mov
push
mov
sub
inc
in
xchg
xor
sbb
ficoml
lret
xchg
adc
lcall
out
xor
nop/reserved
into
cmp
repnz
hlt
or
fidivl
lock
dec
mov
dec
cmp
sub
dec
mov
lret
xchg
add
sub
pusha
mov
mov
xchg
and
ret
test
add
cmp
jnp
insb
and
pop
rolb
jbe
fcoml
repnz
imul
cmp
mov
push
repz
pop
add
pop
sbb
neg
jge
jmp
push
cmc
icebp
movsl
sub
call
lcall
sbb
inc
orl
mov
cmp
jae
cmpb
loope
cmp
lahf
pop
dec
int
push
pop
loope
and
push
dec
xor
lods
loope
adc
notb
mov
test
fwait
jle
xor
sbb
fmull
stos
ljmp
adc
shrl
imul
lcall
fidivl
and
dec
int
mov
push
out
mov
mov
les
and
and
orb
icebp
and
inc
outsl
xchg
gs
adc
bound
icebp
xor
lret
repz
stos
mov
push
adc
clc
stos
lcall
lret
loop
negl
cmpsl
push
inc
push
cltd
cmp
inc
mov
stos
inc
and
cmc
push
ret
jae
xorb
mov
mov
pusha
pop
xchg
mov
out
roll
call
jp
mov
imul
adc
mov
sbb
mov
or
sti
in
fisttpl
orl
sub
ja
loope
rol
cmp
mov
inc
leave
pushf
scas
dec
pop
add
fnstsw
aam
shl
jno
inc
icebp
test
lds
repnz
int
push
mov
dec
inc
pop
mov
fbld
or
mov
xchg
sbb
mov
into
cmp
sbb
in
and
je
sub
in
mov
sub
subb
repz
mov
dec
or
iret
imul
sbb
adc
dec
mov
jae
inc
jmp
daa
xchg
scas
sar
and
xchg
aad
adc
mov
bnd
sub
data16
dec
ficomps
clc
add
insl
jno
adc
xchg
and
cld
mov
les
pop
ljmp
mov
cmp
push
push
cmc
mov
adc
and
jecxz
pop
pop
aam
lods
lock
icebp
cmpsb
in
in
sti
adcl
inc
dec
add
inc
cmpsb
incb
fstps
sub
dec
cmp
or
sbb
dec
xor
dec
gs
js
in
das
setne
icebp
and
and
push
lcall
fisttpll
xchg
aad
mov
lcall
enter
fistps
fadds
inc
cld
jp
ja
pop
aaa
rep
cmp
inc
rorb
dec
pop
xchg
test
xchg
push
inc
adc
jg
in
lods
lods
xchg
enter
mov
out
pop
ret
in
cmpsl
pop
shlb
fdivl
iret
not
cs
ds
and
leave
mov
pop
cmp
push
mov
mov
and
in
mov
jmp
dec
movsb
push
mov
movsl
xor
jb
ficompl
pop
sbb
adc
nop
jns
outsl
xor
mov
shrb
jmp
inc
cmove
outsb
push
movsb
lock
fs
scas
inc
fiaddl
fimull
hlt
lds
mov
xchg
xchg
xor
fwait
sub
jne
xchg
popa
ljmp
cmpsl
xchg
jecxz
aas
scas
out
and
lret
or
mov
lods
mov
sbb
pushl
ljmp
add
aas
xchg
mov
hlt
xchg
mov
mov
movsb
mov
in
fsubl
pop
mov
dec
xor
bound
fisttpll
cltd
test
mov
out
push
sbb
push
mov
mov
mov
mov
xchg
lods
repz
pop
inc
adc
mov
cmp
jo
or
cwtl
in
insl
int
pop
ror
loop
xor
xor
pushfw
jle
fldcw
jecxz
push
js
mov
nop
sub
cmc
insl
inc
push
lahf
fcmovnb
call
jecxz
xchg
xchg
sub
in
pop
xchg
popa
pop
inc
cltd
add
adc
cmp
jnp
dec
pop
hlt
cmp
fstpt
add
adc
or
movsb
out
ret
mov
xor
mov
mov
dec
ret
or
mov
push
inc
out
jae
and
ds
cmpsb
std
imul
lret
aaa
push
add
out
push
fcoml
loopne
xchg
dec
scas
mov
sbb
or
rol
mov
fldt
xchg
mov
dec
xchg
mov
mov
mov
and
mov
lcall
sbb
jo
jp
das
fnstenv
dec
addr16
leave
jno
and
and
sub
hlt
test
xchg
mov
xor
insl
mov
pop
xchg
xor
clc
adc
or
and
dec
testl
nop
pushf
pop
fimuls
aas
in
inc
lods
sahf
leave
in
mov
lcall
add
cli
js
pop
cli
jb
or
popa
pop
pushf
cmc
jmp
xchg
mov
inc
clc
addr16
mov
and
aas
mov
hlt
stos
mov
into
mov
es
fistps
pushf
and
or
std
xchg
cwtl
int
scas
pusha
ss
jg
lock
arpl
das
pop
mov
call
scas
shr
ret
lods
pop
stc
sbb
imul
cmpsl
ret
leave
xor
pop
xor
jge
js
jb
cmp
dec
faddl
imul
adc
push
xlat
and
adc
and
jo
add
fiaddl
xor
add
cmpsb
fwait
loope
out
xchg
jp
add
mov
rcrl
imull
mov
iret
movsl
gs
xchg
sahf
xor
pop
xor
mov
das
cmpl
xor
mov
out
ljmp
imul
mov
pop
inc
or
scas
lock
cmp
cli
and
leave
pop
pop
lods
add
imul
jo
jb
ja
sub
jge
mov
xchg
cmpsb
cli
out
mov
cmp
sub
in
and
loop
adc
movsl
inc
pop
mov
jne
in
adc
cld
cmc
or
iret
insb
dec
sub
mov
scas
mov
push
inc
out
mov
add
je
dec
stos
inc
jmp
sub
xchg
int
fdivl
lods
xor
cwtl
and
or
jg
push
pop
and
sbb
xchg
enter
push
push
loop
jne
mov
ror
rclb
mov
cld
lods
stos
or
data16
stos
sbb
aaa
mov
cwtl
cld
aas
or
insl
jp
nop
pop
mov
or
clc
mov
xchg
fisttpl
or
out
push
sub
adcb
fldt
push
add
pushf
xchg
sahf
lock
dec
stos
cltd
xchg
mov
mov
imul
inc
loope
push
mul
mov
cmpsl
pop
adc
and
xchg
popa
andb
subl
in
loopne
jp
push
add
ja
sub
dec
stos
ret
insb
sti
sti
loope
cmp
arpl
frstor
mov
cmp
arpl
mov
scas
inc
out
test
jb
jge
jp
idiv
sbb
call
outsb
mov
dec
push
int3
push
cmpsl
in
add
loopne
loope
mov
adc
adc
repz
nop
or
pop
cwtl
xchg
push
mov
out
scas
pop
cmc
lret
test
out
jne
ljmp
mov
jo
jae
xor
lock
add
jne
and
mov
jns
jle
pop
fistpll
or
mov
call
vmovss
ss
push
fwait
xchg
out
int
xchg
xchg
jo
test
outsl
call
lea
adc
add
jl
dec
loope
push
xor
and
ja
xor
mov
mov
push
push
or
sub
mov
test
jb
sub
mov
pushf
movsb
call
pusha
or
jge
push
xor
mov
fisttps
addr16
and
scas
cmp
or
scas
jno
xchg
loopne
rorl
sahf
rol
loop
nop
push
in
xchg
scas
pop
das
repz
lods
sbb
das
add
outsb
push
dec
jne
pop
xchg
pop
dec
xchg
outsl
jne
push
mov
bound
push
ljmp
cmpsl
dec
hlt
xchg
inc
lahf
jne
repnz
mov
pushf
jmp
jae
pop
sbb
test
mov
xchg
mov
loope
pop
addr16
mov
sbb
push
sub
and
les
cmp
jbe
popa
sub
sarb
sbb
in
enter
das
test
iret
push
push
je
jecxz
insl
or
xchg
and
jne
stos
add
lret
sub
fistl
ret
cld
jbe
insb
lahf
lahf
xchg
repz
jmp
adc
sbb
xor
xchg
jle
and
aad
sub
jno
xor
aas
lret
jo
popf
cmpsl
fidivl
xchg
adcb
cmp
push
pop
lahf
xchg
mul
inc
fbstp
or
hlt
dec
test
xor
or
jmp
push
xrelease
xor
shr
jecxz
rcll
aam
shll
fidivs
outsl
push
pop
mov
aaa
sbb
clc
push
out
and
jbe
andb
pop
mov
lret
add
stc
adcl
roll
int
pop
dec
lods
pop
cmp
aam
test
sarl
push
in
cmp
add
inc
cmp
scas
mov
lea
sti
xor
cmc
lret
movsl
mov
fdiv
mov
test
jmp
jp,pt
inc
push
mov
cs
addr16
mov
jmp
add
mov
jge
inc
mov
jmp
loopne
sub
stos
mov
mov
add
or
or
loope
insb
add
movsb
xchg
lcall
add
mov
mov
scas
mov
insb
inc
jp
and
mov
jmp
cmp
pop
aaa
or
shrb
lret
clc
mov
mov
add
pushaw
aad
sbb
and
pop
pop
push
popf
mov
jmp
xor
jnp
mov
inc
loop
stos
bound
push
and
loop
out
inc
jns
push
arpl
ljmp
sti
repz
cmp
fldcw
pop
lahf
fmuls
stos
roll
std
movsl
aad
cmc
daa
aad
and
mov
test
dec
scas
mov
rcrl
push
mov
loopne
dec
fwait
push
push
pop
pop
xchg
mov
std
lret
out
and
xchg
std
mov
xlat
cmpsb
push
mov
scas
mov
movsl
push
jl
mov
dec
ljmp
lea
sbb
ficoms
fisubrs
sub
cmp
jg
jb
out
jbe
sub
push
fistps
mov
jg
pop
lods
fsubl
js
adc
data16
xlat
jb
jle
xor
lcall
push
shrb
adc
mov
mov
push
sub
sbb
insb
jo
and
mov
xlat
ret
insl
jno
lods
divl
dec
adc
jno
jo,pn
pop
fdivrl
dec
adc
cmp
adc
jp
pop
add
xor
jl
lock
outsb
sub
jb
xchg
test
addr16
pop
and
xlat
dec
cmp
call
popf
jle
movsb
lret
push
fiadds
popa
pop
cs
aaa
add
shlb
pop
push
fs
mov
icebp
jnp
jo
push
sbb
inc
and
cmp
mov
lea
rcll
test
roll
sbb
fimull
lods
js
push
popa
adc
inc
push
movsl
jg
jle
and
lea
xlat
in
pop
incl
arpl
mov
xchg
popa
das
xchg
in
xchg
xchg
adc
pop
aaa
gs
xchg
dec
push
push
sub
mov
jne
les
mov
sub
test
xor
fwait
push
stos
inc
or
insb
in
jae
std
loop
xchg
cmp
jl
adc
pop
daa
dec
sub
sub
mov
scas
out
in
sub
cmp
push
sbb
nop
shl
ss
pop
enter
dec
arpl
mov
stc
inc
test
adc
dec
xor
add
gs
adc
dec
test
dec
pop
and
stos
shll
das
xor
lods
lods
call
in
scas
xchg
jg
fstpl
movsl
js
xor
fisubrs
xor
sti
cmc
mov
je
int
pushf
pusha
cs
lahf
xchg
inc
cmc
mov
test
inc
pop
sti
sbb
push
sub
ja
les
bound
ret
push
fisubrl
cltd
xor
xchg
sub
sti
cltd
pushf
das
js
adc
dec
std
mov
ja
pop
ja
mov
sarl
jb
ret
je
sbb
in
stos
or
or
incl
cmp
cmp
je
out
sti
lea
sbb
sahf
mov
insl
rcrl
leave
idivl
mov
mov
daa
ret
mov
pop
pop
add
fdivrs
mov
loope
xlat
add
popa
in
dec
mov
fs
mov
mov
out
out
cld
cwtl
push
adc
in
das
jp
dec
test
gs
orb
dec
xchg
dec
or
outsl
enter
pop
cmp
cmp
jl
and
out
push
lret
inc
in
mov
les
jo
in
mov
popl
pop
test
sbb
cmpsl
icebp
lea
aas
and
adc
jns
fimuls
aas
jbe
adc
outsl
push
aaa
in
add
movsb
nop
pop
push
xor
cmp
bound
jne
jp
out
lds
cmp
or
xor
icebp
fdivrl
inc
incb
pshufw
pop
call
lods
pop
pop
sub
in
es
mov
add
jecxz
scas
out
or
inc
xorl
inc
or
stc
into
xor
xchg
push
call
jmp
dec
push
loop
pusha
scas
jo
cmpsb
mov
and
jge
cltd
movsl
ljmp
pop
sar
sti
inc
lahf
mov
mov
jl
sti
clc
imul
and
add
cli
sbb
add
jns
dec
lret
loop
fsub
dec
pop
sahf
lret
out
fcmovnu
sub
ss
sbb
into
add
js
sub
mov
mov
aas
lds
mov
mov
pop
int
lods
cmp
dec
std
imul
out
stos
lock
push
xor
cmp
pop
ja
loope
lahf
mov
or
cld
aam
neg
gs
xchg
and
pop
inc
aam
inc
fwait
jle
ja
cmovno
jnp
adc
dec
test
stc
movsb
fcoms
add
dec
sub
push
loop
sub
sub
inc
das
dec
xchg
daa
sbb
jo
loopne
sub
movsb
inc
push
jae
outsl
lret
cmp
mov
clc
pop
aaa
inc
dec
cwtl
and
outsb
push
insl
sub
das
loop
sbb
mov
inc
jne,pn
add
mov
je
rcrb
int3
cli
nop
repz
adc
ljmp
scas
clc
sbb
xchg
lods
stc
dec
lret
dec
pop
or
add
in
iret
pop
mov
clc
popl
je
or
test
xchg
cmp
invd
jge
sub
xchg
gs
lods
lods
imul
jecxz
call
loopne
cmp
xor
mov
mov
std
mov
int
das
and
jb
inc
or
into
or
bound
mov
and
adc
out
fwait
cmp
add
mov
scas
imull
ficomps
add
xchg
pop
pusha
xchg
fstps
mov
sbb
nop
inc
sub
pusha
sub
mov
mov
and
pop
add
fstpl
mov
sbb
stos
mov
popf
pop
or
rorb
ret
lret
lock
dec
popf
frstor
cmp
ja
loopne
outsb
push
dec
or
xchg
cmpsb
jnp
sbb
pop
mov
orb
and
test
mov
jg
mov
lods
fnstenv
outsb
out
pop
lods
pop
pop
inc
cwtl
adc
ficompl
or
xchg
mov
push
mov
fwait
nop
cli
iret
and
cmp
jle
mov
pop
jns
cltd
in
mov
roll
in
and
addr16
mov
pop
push
dec
lahf
aaa
inc
repz
mov
jne
mov
scas
scas
adc
adc
lods
jns
mov
loope
adc
aaa
in
jg
lds
cltd
pop
ljmp
mov
jb
xchg
mov
nop
or
push
test
xor
push
pop
lds
lea
das
pop
xor
xchg
cmpsl
rcr
sbb
or
jae
ror
pop
mov
orb
repz
or
ja
mov
mov
pop
jge
or
jnp
test
fbstp
in
into
mov
stos
lock
xchg
and
jecxz
jnp
inc
pop
adc
outsb
insl
push
mov
fisubs
arpl
das
cmp
xor
jle
into
in
pop
mov
cmp
enter
or
push
cmpsb
pop
clc
cmpsl
xchg
pop
push
jmp
push
das
add
cmc
imul
out
dec
insl
insb
mov
data16
enter
sub
fdivr
sbb
clc
pop
cmpsb
imul
andl
cmp
jecxz
das
mov
out
add
mov
stos
repz
lock
enter
je
in
pop
jmp
inc
push
fimull
mov
inc
jnp
ds
jmp
cs
adc
pop
push
jmp
mov
mov
inc
lret
add
and
insl
mov
and
add
decb
or
adc
lods
sub
fstl
js
js
cld
jno
inc
push
test
pusha
bound
shll
jnp
mov
push
mov
leave
pop
mov
icebp
cltd
ds
xor
or
add
mov
jmp
orl
push
fiaddl
xchg
leave
test
push
and
xchg
fnstsw
add
notb
xor
dec
mov
cmc
jns
sahf
xor
cmpsl
jg
std
adc
sti
jmp
pop
cli
mov
aaa
mov
push
shld
and
jmp
mov
rclb
fnstcw
in
add
psrld
sti
das
push
sub
xor
cmp
in
fistl
sub
push
and
mov
repnz
xor
jp
inc
xor
inc
mov
xchg
pop
mov
mov
add
clc
test
mov
daa
add
mov
sub
mov
ja
bound
rclb
addr16
xchg
and
sub
sub
push
and
mov
pusha
aaa
jno
addr16
xor
mov
fsts
pushf
jecxz
or
aad
bound
or
mov
lock
cmp
jae
fadds
cmp
fsubs
pop
popa
push
cli
xor
subl
pop
cmp
xor
push
add
mov
inc
inc
and
mov
xchg
sahf
ficompl
lahf
idivl
pop
add
movsb
mov
testb
seto
add
stos
cltd
xor
jb
pop
or
and
dec
fmull
jns
loopne
cld
adc
daa
lea
lods
fmull
dec
ficoml
rolb
push
push
sub
mov
dec
mov
ja
test
adc
jmp
dec
push
fildl
lods
mov
lods
scas
inc
fcmovb
inc
add
cli
stos
bound
ss
adc
test
xchg
out
daa
mov
lcall
mov
push
pop
test
cmp
mov
lahf
lods
cmpl
sbbl
push
lds
push
sbb
or
insl
movsl
imul
scas
sarb
add
mov
bnd
lret
push
inc
xor
jmp
in
push
or
sub
mov
add
stc
shll
or
push
dec
dec
test
outsb
inc
mov
push
icebp
fstpl
ret
clc
xchg
sub
and
jo
dec
push
jae
or
xchg
jb
aaa
jge
es
lret
jl
xor
pop
pop
lret
mov
rorb
in
ror
cmp
inc
pop
xlat
repnz
repnz
popa
mov
hlt
in
mov
hlt
flds
fwait
sub
mov
sahf
adc
pop
push
xor
adc
cli
roll
adc
jmp
jne
ds
jns
fwait
add
add
lret
xlat
andb
push
and
nop
rolb
mov
adc
ljmp
arpl
test
xchg
inc
and
inc
insb
mov
adc
idivl
mov
or
arpl
jmp
mov
bound
fdivr
stos
pop
gs
push
je
and
mov
fidivrl
out
push
pop
and
or
mov
inc
mov
stos
ret
dec
dec
push
inc
add
je
push
addr16
mov
dec
push
push
jno
bound
popf
or
dec
jne
in
mov
std
lret
sub
mov
jbe
cli
jnp
and
aad
jge
imul
in
outsl
sub
or
adc
jne
and
jb
or
fldt
and
jp
sub
xchg
insb
or
dec
or
mov
push
js
fwait
sahf
lods
das
fcomip
cmp
data16
test
nop
xor
leave
fisubs
add
mov
sub
jl
scas
lods
pop
dec
dec
inc
xor
or
cmpb
fwait
jno
in
jp
push
fcom
mov
dec
mov
cmpl
sub
shrl
mov
ja
jnp
xchg
repnz
fwait
divl
add
gs
repnz
push
xchg
jmp
dec
roll
dec
in
jo
xlat
mov
jl
jo
jb
xor
cwtl
xchg
dec
add
out
sub
rcrb
mov
pushf
cli
out
fiadds
jne
inc
lock
cmc
leave
mov
arpl
cmp
push
mov
loopne
jge
jnp
movsl
andb
je
orb
mov
mov
adc
hlt
aas
test
pop
cmpsb
sbbb
sbb
or
sbb
mov
push
xlat
lret
adc
mov
out
pop
mov
xor
push
add
push
mov
inc
cli
cs
pop
cmp
inc
add
mov
xchg
lret
xor
sub
cmp
cmp
xchg
push
call
dec
sub
push
iret
fwait
ror
mov
daa
jge
dec
cmpsl
js
add
mov
sbb
aaa
push
out
jecxz
lret
lahf
sbbb
test
aad
mov
insl
stc
ljmp
mov
xor
xchg
lcall
arpl
xchg
ja
pusha
gs
push
shld
into
push
sub
lock
insb
in
andb
clc
and
ror
out
jo
pop
xor
pop
cmp
inc
cmp
jns
daa
mov
or
cmp
cmc
je
mov
xorb
dec
xchg
sbb
insl
out
pop
mov
movsb
xchg
pcmpgtd
mov
dec
or
shll
insb
imul
lods
test
je
frstor
fldcw
outsb
and
mov
fisubrs
mov
ret
mov
sti
mov
mov
add
cmp
out
adc
mov
adc
in
cld
ror
cmp
mov
sbb
or
bound
inc
jnp
bound
das
movsb
cmp
notb
repnz
push
or
cmc
mov
jle
dec
loope
ret
enter
cwtl
fs
into
xchg
xchg
mov
xchg
sti
pop
leave
out
dec
dec
fbld
sub
mov
sub
mov
and
xchg
scas
push
cli
sbb
out
out
outsb
stc
mov
sbb
shlb
out
inc
jg
adc
out
lea
dec
lret
ret
cmp
cmp
jmp
xor
sarb
scas
add
xor
push
cmpsb
add
sti
xor
test
in
and
adc
leave
mov
test
and
loopne
push
cmpsl
test
push
jecxz
mov
nop
push
loop
in
adc
test
in
call
xor
add
idivl
les
test
mov
repnz
push
lret
or
jno
mov
es
test
shll
aas
add
test
xor
mov
push
or
mov
std
sub
xchg
xchg
pop
inc
mov
sbb
sub
pop
adc
dec
inc
popa
fnstenv
leave
xchg
mov
pop
pop
mov
andb
pop
ret
aad
test
xchg
push
aam
dec
int3
jmp
daa
popf
xchg
xor
cmpsl
mov
push
pop
jl
hlt
push
div
int
outsl
scas
push
cmpsb
ja
mov
adc
imul
cmp
pop
mov
ds
push
jecxz
pop
imulb
daa
movsl
and
push
test
pop
adc
popa
cmc
mov
loop
pop
add
jecxz
pop
dec
sbb
or
or
hlt
mov
int3
daa
xor
cs
test
xchg
lock
popf
lods
or
shrl
das
and
add
mov
inc
ss
aas
cld
xlat
icebp
filds
lods
mov
xor
pop
fwait
mov
sbb
push
jmp
fdivrp
bound
in
push
mov
stos
xchg
cmp
leave
in
cmpsb
fdivrp
mov
xor
mov
jle
std
mov
stos
mov
and
mov
enter
clc
ja
ja
or
cmp
aas
or
cmp
or
mov
xor
inc
push
cmp
pop
jae
push
arpl
cmc
xor
mov
cmp
nop
hlt
inc
mov
stos
xor
nop
aas
in
xchg
push
pop
dec
sub
mov
jb
enter
mov
dec
roll
push
add
imul
imul
call
divl
lcall
cld
lcall
cltd
jb
mov
mov
cld
jl
mov
push
inc
or
ljmp
xchg
in
or
push
pop
xchg
insl
int
movsb
testb
outsl
testb
popa
std
loope
jbe
outsb
push
mov
mov
dec
mov
sbb
andb
xchg
mov
out
jmp
jo
xchg
out
mov
aaa
and
enter
push
push
or
dec
push
sbb
and
popf
lcall
jge
aas
ret
or
xchg
lods
push
pop
stc
xchg
mov
sbb
mov
xorl
jne
push
sub
adc
in
pop
mov
adc
jmp
das
ljmp
repz
int3
aad
bound
cmp
fs
std
adc
dec
scas
arpl
inc
xor
arpl
out
xchg
scas
sbb
push
sbb
mov
xor
arpl
enter
mov
or
aaa
or
mov
je
lahf
jnp
xchg
sahf
lahf
sbb
add
xchg
ds
ret
mov
sub
sub
test
int
sarb
stos
sub
push
les
push
add
shlb
inc
xchg
iret
and
mov
stos
shrb
lcall
lret
push
pop
push
pop
cltd
shrl
imul
push
add
sahf
xchg
mov
rorb
mov
lods
inc
xor
jle
mov
nop
bound
in
dec
rcll
lahf
shll
cmp
lret
int
inc
idivb
xchg
mov
or
mov
and
mov
mov
roll
out
cld
push
inc
cmp
cmp
int
and
fldln2
cmp
std
add
iret
lahf
or
lahf
pop
shlb
outsb
loope
lods
pop
push
sub
lcall
pop
sub
std
add
ret
sbb
lahf
sub
sub
lods
ljmp
jb
aas
bound
loope
dec
sub
inc
arpl
jle
pop
push
call
dec
sub
inc
pop
lods
cmpsb
pop
xor
jle
xor
push
insl
imul
lea
stc
xchg
sahf
insl
push
push
ror
pop
xor
or
cmp
int
loope
xchg
stos
dec
cs
rorl
cmp
repz
test
lret
inc
xor
inc
scas
in
aas
pop
add
shlb
cmp
fcoml
jl
mov
lcall
adc
xchg
or
push
insb
mov
sub
imul
add
punpckhwd
push
mov
or
mov
dec
imul
push
pop
push
mov
icebp
stos
inc
sbb
mov
jmp
mov
pop
fimull
xchg
enter
insb
pop
cld
jmp
jb
mov
mov
test
insb
mov
sti
aas
movsb
shlb
idiv
pop
mov
inc
movsb
xor
outsb
adc
push
mov
add
inc
dec
mov
cli
pushl
or
push
test
adc
push
or
insl
dec
sub
shlb
add
adc
xchg
enter
xchg
mov
sbb
cs
stos
lcall
push
xchg
mov
xchg
add
xchg
dec
sbb
stos
je
mov
add
lret
mov
fstpt
jmp
cmp
jge
mov
jo
xlat
pop
je
pop
repz
mov
and
push
push
jo
add
push
out
cmp
sahf
rcr
dec
pop
ds
pusha
xchg
aam
mov
call
sbb
in
clc
xor
divl
adc
hlt
xchg
jbe
push
cmpl
push
in
push
inc
lret
stos
in
xor
xor
inc
mov
lcall
cld
jg
lea
sbb
or
jns
lea
pop
mov
sahf
and
xor
orl
cmp
pushf
cmp
adc
out
lret
cmp
into
and
sub
loope
aaa
fiadds
jno
mov
sbb
cmp
fstl
xor
int3
push
ja
stc
popa
add
test
fisubl
push
cwtl
add
adc
mov
movsb
rclb
inc
clc
cmp
scas
or
dec
dec
jae
aad
aas
fsubrl
cltd
sbb
dec
mov
adc
je
jp
xchg
push
sti
lret
pop
mov
xor
loopne
and
fistl
mov
xor
dec
sub
fucom
icebp
push
xor
inc
pushf
inc
inc
push
push
shlb
pop
add
stos
imul
test
xor
cmpsb
pop
inc
test
lret
pop
loope
mov
sub
jmp
lcall
mov
jg
jnp
xchg
fidivs
mov
mov
test
fisubrl
mull
clc
lea
push
pop
mov
stos
cmpl
add
xchg
jae
test
iret
xchg
xchg
jl
mov
in
leave
pushf
incb
cli
test
push
push
jo
fldln2
and
hlt
and
insb
cmp
pushf
push
sbb
push
add
clc
jle
in
pushf
daa
enter
pop
dec
call
mov
dec
dec
sub
or
subb
jmp
mov
jno
inc
jbe
push
xchg
enter
push
pop
xchg
cmp
mov
or
xor
jge
int3
adc
js
nop
movsb
and
pushf
xchg
mov
lahf
pop
adc
lahf
push
pop
jne
lock
scas
jmp
aas
dec
jecxz
dec
jle
mov
cwtl
and
mov
shll
into
inc
add
cmp
out
and
push
xor
xchg
inc
outsb
sahf
mov
xor
mov
fimull
push
sub
sti
or
and
imul
pop
in
sub
roll
mov
into
xchg
dec
sub
lods
cltd
cltd
popf
push
insb
sbb
arpl
in
inc
popa
dec
jb
mov
dec
dec
and
sbb
fisubs
adc
loopne
in
cmc
hlt
pop
insb
cmp
push
dec
adc
scas
adc
push
int3
jle
lret
mov
dec
sahf
out
fisubrs
ljmp
movsl
cld
and
fiaddl
xchg
rorb
int3
cmp
inc
dec
aam
dec
adc
cmp
xor
mov
dec
inc
mov
cltd
mov
mov
rorb
bound
repz
push
negb
or
mov
xchg
add
pop
mov
aam
adc
gs
cmp
rep
mov
idivb
sbb
add
lahf
mov
in
xor
adc
call
fidivrl
sbb
mov
icebp
xchg
lret
inc
inc
mov
into
sub
aad
leave
mov
adc
cmpsl
xor
cwtl
add
mov
test
out
inc
push
mov
add
das
push
xor
rcrl
jge
ret
nop
scas
sub
addl
cltd
loope
test
inc
gs
dec
int3
test
dec
mov
imul
out
int3
mov
xchg
xchg
xor
loop
call
mov
cmp
sti
pop
in
fs
into
jo
cmp
fists
sbb
pop
xchg
mov
out
jns
mov
lea
sbb
out
push
or
or
xchg
mov
mov
sub
mov
daa
xchg
sar
lock
sbb
ljmp
and
fiaddl
inc
inc
dec
mov
mov
fiadds
mov
push
fcmovnb
xchg
sti
xor
ret
xor
cmp
lea
lock
dec
insb
cmpb
aaa
loopne
dec
adc
dec
insb
jecxz
imul
jae
sarl
jmp
sub
and
push
mov
cld
push
fwait
xchg
popa
mov
xchg
call
inc
sub
pusha
mov
jne
jae
inc
cmp
in
pop
clc
lods
clc
adc
mov
adcl
sub
cltd
shll
mov
push
add
and
push
and
lods
sub
mov
sub
aad
fistl
cmp
add
jno
inc
aad
dec
icebp
fldcw
cmpsl
jl
pop
push
dec
mov
js
testb
mov
data16
push
mov
lea
jnp
or
in
and
jno
mov
jno
sahf
or
rcll
sbb
insl
dec
in
clc
pop
jmp
or
push
xor
sarl
orl
xchg
cli
inc
jae
or
clc
mov
dec
or
mov
inc
mov
adc
je
ret
cmp
jg
mov
inc
pop
cld
in
xor
jno
loopne
jns
mov
daa
push
cmpsb
push
inc
bswap
les
aad
mov
mov
loop
negl
in
mov
xchg
dec
jbe
in
sbb
int
icebp
stos
in
call
loope
push
inc
lock
sub
cld
shll
cli
std
or
je
loope
shll
xor
in
xchg
adc
or
cmpsb
repz
and
aad
mov
and
inc
jnp
cltd
xchg
int
in
add
dec
rol
xchg
lock
pushf
jns
insb
fimuls
mov
sbb
jmp
test
out
mov
mov
cmp
jbe
out
leave
sub
mov
insb
popf
int3
inc
jg
and
fxch
push
cmovb
mov
fnstcw
data16
pop
pop
cld
pop
dec
push
aas
cmp
pop
js
cld
mov
repz
outsb
or
cmp
in
mov
out
fisubrl
int
mov
ret
repz
stos
fidivs
lods
mov
or
sarl
mov
dec
das
jl
enter
mov
mov
inc
sbb
addr16
stc
mov
pushw
inc
nop
lret
xchg
mov
popa
loopne
xchg
repnz
adc
jp
push
popw
pop
cmc
cmp
hlt
push
aaa
xchg
leave
push
in
or
cmpsl
push
arpl
dec
lods
fs
add
repnz
push
mov
imul
scas
outsb
xchg
pop
cs
mov
push
lcall
mov
out
insl
mov
mov
fidivrs
cli
jae
adc
xchg
sbb
and
sub
and
int
dec
push
mov
mov
sub
xor
sbb
xorb
js
mov
loop
add
cmp
shrl
jp
lret
cmp
enter
adc
jmp
adc
icebp
sbb
inc
aas
sbb
mov
cltd
xor
mov
jp
decl
pop
xchg
push
xchg
stos
pop
and
sarl
es
sahf
sahf
dec
rorl
xchg
je
jae
fcomip
jnp
jae
mov
loop
xchg
pop
jo
insb
jmp
mov
xorb
loopne
sub
and
mov
sbb
cs
push
fidivs
std
and
test
xor
adc
and
fwait
adc
add
cmpsb
arpl
and
fsubl
pop
fwait
imul
sbb
add
xorb
es
cwtl
cltd
mov
loop
xlat
shrl
aas
push
mov
fsubs
mov
daa
popf
nop
int
loop
mov
lock
in
leave
push
in
out
nop
inc
push
ja
repz
mov
adcl
dec
sbbl
pop
jb
dec
jle
stos
dec
pop
movsb
jmp
xor
inc
stc
dec
and
scas
pushf
add
xchg
sbb
lret
xor
push
lahf
insb
je
xlat
mov
aad
sub
sub
adc
pop
nop
lcall
xor
out
je
cmp
push
push
outsb
loop
rcrl
in
pop
movsb
adc
mov
pop
add
dec
mov
test
mov
dec
insb
mov
mov
gs
lock
sbb
out
mov
pop
mov
mov
cmc
loopne
ss
cmp
inc
jbe
fdivrl
or
xlat
cwtl
push
mov
inc
movsl
xchg
pop
xchg
jo
aam
xchg
in
jmp
push
int3
mov
add
mov
or
and
lods
pop
cli
jno
mov
ds
mov
mov
rcrb
mov
sahf
je
mov
cltd
das
test
add
or
sbbl
fbld
mov
jo
cmpsb
pushf
gs
xchg
ljmp
call
mov
fucomp
xlat
jae
test
ss
mov
fs
arpl
add
das
adc
mov
ret
mov
repz
stos
mov
and
test
adc
cmpb
arpl
push
mov
sub
inc
rcll
mov
push
and
outsl
movl
inc
adc
dec
inc
fisubs
clc
push
or
xchg
dec
xchg
jg
jb
sub
mov
adc
out
xchg
jl
jp
and
popa
ret
jecxz
and
xorb
jbe
call
adc
movsl
dec
shlb
popf
xor
movsl
fs
stos
imul
ss
mov
sub
xor
xchg
lock
lcall
call
sub
sahf
inc
and
inc
lcall
xchg
cmp
sub
imul
push
stc
xor
mov
lods
insb
pop
mov
lahf
int
test
rorl
cmp
push
jbe
mov
mov
xchg
and
dec
mov
mov
add
sub
fmul
mov
loop
mov
out
scas
iret
push
pop
push
mov
inc
fisubrl
xchg
rclb
rclb
inc
movsl
fistpll
dec
fidivl
fistpl
or
fistpl
jb
iret
mov
sbb
mov
sti
mov
mov
mov
sub
aas
into
cmp
mov
sub
loope
mov
add
imul
jge
mov
dec
sbb
pop
push
sbbb
add
inc
and
xor
inc
mov
cs
jbe
in
lcall
dec
or
and
int3
in
leave
flds
push
cld
push
fcoms
cmp
xlat
dec
outsb
jp
mov
xchg
outsl
shll
and
dec
shr
sbb
inc
jno
lock
rep
jnp,pt
sub
nop
mov
mov
mov
pop
sub
sbb
sbb
dec
roll
xchg
mov
sbb
gs
or
incl
push
out
and
cli
add
push
mov
push
andl
mov
pop
ret
adc
mov
mov
enter
divl
push
jp
mov
movsb
cs
mov
dec
push
mov
repnz
sub
pop
inc
adc
mov
scas
cmp
dec
xchg
and
lea
in
das
add
jge
jg
in
cmpl
outsb
sbb
cmp
pop
call
repnz
push
adc
js
fdivl
push
pop
xchg
push
push
or
int3
ljmp
rcl
dec
push
mov
and
fstpt
sbb
testl
jno
mov
cmpsl
sbb
mov
imul
push
or
and
ror
loopne
xor
mov
ficompl
cld
or
test
add
sbb
pop
out
dec
pop
sub
jg
sbb
dec
jl
sub
iret
ret
jg
mov
jle
cmp
xor
cmpl
push
jns
jp
xchg
xorl
loopne
sbb
adcb
inc
mov
das
xchg
push
outsl
cld
pop
dec
shll
push
mov
adc
insb
push
stos
cmp
lds
movsb
cmp
test
or
and
mov
mov
xchg
dec
push
pop
test
push
sti
and
stos
or
inc
mov
inc
popf
ljmp
sub
mov
scas
cmp
dec
and
cld
mov
xor
insl
int3
loop
cs
test
lret
jmp
in
jle
fidivl
ljmp
inc
inc
test
sub
jno
insb
cmp
sarl
mov
push
stos
pop
lea
or
sbb
mov
sar
sahf
mov
jbe
mov
or
mov
cmc
mov
sbb
inc
mov
dec
aaa
jo
jmp
cmpsl
in
mov
xchg
adc
add
nop
push
fcoml
inc
test
xchg
jne
into
aas
adc
filds
sarl
lret
or
push
lds
jl
pop
mov
sub
into
test
dec
mov
xor
inc
in
negl
adc
jns
mov
mov
ret
and
jo
xlat
test
xor
insb
cmpsb
test
aad
lcall
adc
iret
stos
leave
sahf
inc
mov
cmpsl
adc
pop
push
lret
inc
xor
jl
or
inc
pop
je
or
mov
dec
sub
hlt
push
test
iret
mov
dec
into
sub
inc
mov
aaa
jnp
mov
nop
xor
jb
mov
lods
pop
pop
rcrb
outsb
out
cmp
mov
idivl
roll
rorb
ljmp
sbb
pop
sub
fwait
dec
cltd
adc
outsb
lods
and
ljmp
sbb
ljmp
mov
sti
jne
inc
jge
int
and
xchg
fmulp
pop
xor
xor
jnp
loop
pusha
outsb
lea
stos
jae
xchg
sti
sub
ret
mov
add
mov
mov
push
cmp
or
mov
insb
inc
xchg
and
dec
int3
fidivrs
scas
cmp
cmp
adc
pop
adc
jo
pop
mov
or
aam
mov
imul
cltd
jnp,pt
cmc
adc
push
mov
pop
xor
mov
outsb
cmpsl
mov
mov
xor
adc
inc
mov
enter
lods
add
dec
movsl
mov
mov
test
fmul
cmp
jmp
sbb
add
sbb
inc
mov
cmp
test
dec
inc
in
mov
pop
lock
adc
stos
movsl
pusha
roll
pop
vmovlpd
cmp
xor
inc
push
inc
mov
ret
cld
ljmp
sub
and
hlt
mov
mov
icebp
mov
into
mov
sbb
xchg
pop
int3
or
mov
dec
jge
aam
bound
fstps
dec
adc
or
pop
and
loop
call
xchg
dec
and
inc
dec
imul
shl
pop
mov
push
scas
es
test
push
aam
mov
imul
scas
mov
mov
fidivrl
xchg
adc
inc
push
push
mov
ficomps
mov
in
dec
cwtl
push
fsubl
pop
dec
xor
lock
xchg
cmp
cs
fadds
mov
stos
pop
cwtl
or
bound
rcr
sbb
test
push
cmp
push
mov
scas
xor
push
ljmp
and
or
in
sahf
lods
sub
fdivl
in
mov
mov
popaw
pop
push
cmp
adc
rorb
int
push
cmp
leave
hlt
jg
xor
jl
data16
adc
sbb
jae
mov
and
inc
ficoms
mov
or
inc
adc
mov
out
and
les
or
lea
rolb
aas
mov
adc
adc
push
es
jae
adc
negl
aad
inc
in
sub
jge
or
and
rcrl
loop
push
cmpl
imul
sub
xor
shl
and
mov
bound
es
adc
xorb
cmc
cmpsb
add
fcomps
or
fdivrp
sbb
sub
or
and
ljmp
out
cwtl
or
jl
push
jne
es
xchg
inc
ds
fstp
xchg
dec
sub
sub
xchg
mov
mull
scas
inc
bound
xor
xchg
xor
popa
mov
inc
fldt
mov
dec
mov
xor
xor
scas
inc
or
and
push
push
push
insl
push
adc
dec
sbb
inc
and
dec
jmp
or
sub
les
inc
bound
cmpl
pop
sbb
arpl
movzbl
loopne
lods
xor
jge
or
int
cmpl
jae
int
out
ss
inc
flds
ja
leave
mov
icebp
dec
xor
xchg
mov
fsubs
push
push
outsb
clc
jmp
push
mov
arpl
push
call
clc
jno
xchg
jecxz
loopne
cmc
popf
es
and
out
pop
aas
jg
pop
sbb
add
imul
add
xchg
iret
pop
dec
int
jg
sub
roll
lds
xchg
cmc
xlat
pop
int3
or
cmp
insb
lock
mov
rcrb
adc
cmpsl
out
and
cmpsl
ret
push
mov
inc
jnp
push
sub
adc
xchg
sarb
loope
and
js
jae
and
dec
mov
iret
adc
mov
add
fsubrp
jge
shlb
loope
inc
subb
std
cld
add
jns
outsb
xor
std
iret
outsb
adc
orb
pop
add
cmp
out
clc
pop
add
out
jbe
push
out
mov
loope
test
add
fucomi
cmp
das
jle
scas
push
subl
js
inc
popa
or
test
pop
out
and
in
pop
cmp
stos
cmpsl
pushf
lcall
and
jp
xor
pop
inc
sub
sbb
and
jbe
fst
cmpsb
test
loope
lock
push
inc
jmp
scas
fcmovu
fiaddl
push
ja
xchg
mov
test
push
and
hlt
imul
sub
mov
daa
sbb
shll
iret
xor
jmp
out
xchg
repz
pop
sub
fisttpl
sar
cmovno
lret
mov
mov
dec
jne
jae
sarl
and
test
sarl
fdivp
dec
add
adc
cld
inc
shl
bound
push
adc
or
mov
testl
mov
xchg
push
add
dec
cli
les
mov
xchg
mov
sub
jl
int3
ljmp
dec
aad
push
adc
sbb
or
lds
jmp
in
insl
stos
mov
cld
push
imul
inc
mov
xchg
pop
jp
jmp
sub
into
lahf
sub
mov
jbe
push
aas
push
xor
push
lock
test
mov
mov
in
in
and
stc
lret
add
push
arpl
pop
push
int
in
and
add
popa
not
mov
add
and
sub
shll
mov
xor
mov
cltd
subl
movsl
adcl
xchg
hlt
fdivp
push
mov
sub
inc
dec
pop
mov
inc
insl
sbb
mov
dec
aaa
incb
out
mov
cmp
adc
sub
clc
jle
lahf
and
je
call
jnp
and
into
adc
mov
jmp
xor
xor
ret
stc
imul
mov
out
sub
sub
scas
data16
js
sti
fsts
xchg
add
dec
mov
dec
jns
stos
aas
addr16
aam
push
mov
mov
fs
les
mov
repnz
stc
xchg
inc
add
addr16
or
inc
mov
and
cwtl
idivb
mov
popf
mov
ljmp
sar
sub
and
add
jne
out
leave
je
insb
xchg
imul
xchg
lods
enter
mov
mov
rcrl
pop
mov
lret
dec
xor
popa
or
jno
xchg
mov
adc
scas
aaa
push
or
cmp
mov
ss
test
cmpsb
rclb
stos
jl
push
cmp
jb
and
push
pop
int3
xlat
xchg
int
addl
pop
and
pop
lahf
mov
pop
lret
out
xor
cwtl
xor
enter
inc
push
ret
hlt
das
aaa
aaa
iret
punpckhdq
lcall
nop
out
cmp
out
and
fdivrl
pop
filds
cmp
out
push
cld
fdivrs
dec
and
sbb
xor
add
sub
sub
fildll
jl
xchg
add
ja
pop
lods
inc
mov
lret
sub
xchg
sub
das
and
push
and
inc
fdiv
cmp
push
pop
imul
dec
je
mov
push
cwtl
popf
cmp
in
sahf
mov
test
je
add
scas
xlat
ret
pop
pop
adc
xchg
or
ss
les
mov
ficompl
adc
enter
pushf
pop
add
mov
xchg
andb
xchg
cld
outsb
outsb
or
xchg
jns
fimuls
in
stos
lret
push
fcoml
mov
cmp
pop
add
stos
push
outsl
or
xor
icebp
out
mov
mov
mov
adc
lahf
and
xchg
daa
xchg
mov
ds
call
mov
push
incb
dec
or
mov
pop
popa
sbb
xor
add
addr16
push
xor
loop
out
sbb
mov
mov
cmpsl
je
insb
outsl
test
jecxz
dec
inc
cmc
mov
cmp
scas
aad
cmpsl
fstpt
cltd
pop
int3
xlat
bnd
data16
xchg
pusha
imul
or
mov
mov
mov
aas
sub
mov
out
xor
scas
sbb
add
das
test
xchg
jmp
xchg
add
pop
lea
fs
and
xchg
ret
dec
pop
lock
adc
xchg
es
shrb
mov
jecxz
icebp
jo
inc
fstpt
and
xor
into
jg
mov
jns
call
push
pusha
jo
xchg
ret
daa
xchg
aaa
cli
cmp
andl
movsl
or
sbb
ljmp
dec
psllw
lds
mov
mov
out
push
popa
jle
or
add
leave
int
xchg
dec
jmp
mov
mov
addr16
xor
lds
divl
adc
cmp
pusha
push
pop
inc
cmc
jmp
xchg
sbb
andb
shrl
mov
test
mov
inc
mov
pusha
cmpsl
pusha
push
imul
out
shr
push
sbb
cwtl
mov
or
pop
stc
sub
push
add
bound
ljmp
mov
push
lcall
ret
sbb
jbe
cmp
inc
push
add
loope
into
cmpsb
sub
ret
mov
fstpt
sbb
rorb
sub
xchg
pop
lret
fmul
dec
cwtl
cmp
pop
add
or
xor
push
addb
xor
mov
cmpsb
jecxz
adc
dec
add
sbb
pushf
jne
xor
cmp
mov
ret
sti
jne
insb
pop
jno
push
jnp
adc
add
mov
sbb
jmp
pop
mov
dec
in
es
pop
dec
mov
xchg
insb
xchg
and
inc
jno
push
das
pop
sbb
cltd
cmpsb
cmp
inc
andl
in
dec
hlt
jno
pop
imul
and
mov
aad
data16
movsl
jp
push
pop
push
insl
cmp
and
stc
jmp
into
frstpm(287
test
stos
dec
sbb
pop
in
cmp
lcall
xor
nop
add
jp
imul
mov
add
lods
sub
or
jnp
lds
push
or
inc
sbb
rorl
cmp
int3
jo
lret
ljmp
fnstcw
negl
sahf
cmp
add
fists
cmp
inc
leave
pop
sbb
jge
jle
add
mov
sub
testl
sarb
aam
in
jmp
cmp
pop
jno
mov
icebp
cmp
rcrb
cmpsb
addb
mov
int
aad
jns
jnp
sahf
fsubp
or
jo
cld
aaa
jle
dec
ss
outsb
push
mov
lahf
jo
lods
xor
jge
mov
jnp
mov
rcrl
push
lock
pop
fisubrs
push
mov
add
cmpsb
add
add
mov
push
fimull
dec
cmp
je
push
push
cmp
push
push
fwait
inc
jle
fisttps
insl
cmpb
fdiv
xchg
test
imul
and
and
jmp
popf
sub
fdivr
adc
data16
cmp
mov
sub
dec
fs
or
shrl
push
xchg
cmp
ret
outsb
fldenv
or
inc
mov
push
iret
daa
sbb
in
xor
adc
sub
pop
nop
lds
sbb
mov
nop
scas
mov
cld
adc
add
push
aam
adc
jg
push
mov
push
sbb
lods
gs
push
test
pop
sbb
mov
sub
xor
mov
and
sub
jns
sbbb
xor
lret
int
lahf
dec
jl
or
pop
loope
jno
test
pop
aad
cwtl
popa
daa
mov
adc
pop
mov
jmp
mov
cmp
mov
sbb
fwait
nop
movsl
xor
add
cmp
mov
cs
fistps
add
shl
incb
pop
movsb
pop
add
notb
jmp
jge
aas
fcoms
mov
cmc
mov
clc
lret
jl
xchg
mov
jp,pn
ljmp
ds
mov
ret
push
or
fists
rol
int
xor
mov
sahf
xchg
mov
es
adc
push
mov
pop
insb
int
aad
movsl
out
repnz
pop
aam
mov
mov
push
pop
xchg
pop
lret
aad
cmc
sub
and
and
scas
or
lds
xor
xor
xchg
pop
cmp
cltd
xor
jbe
xchg
xor
dec
fwait
inc
shlb
mull
addr16
stc
fisttpll
pop
jo
dec
xor
insl
pop
jle
sbb
cltd
fs
pushf
movsb
mov
pop
ss
scas
in
pop
mov
stos
stos
subb
inc
inc
jecxz
stc
inc
fdivl
mov
rcrl
imul
roll
adc
or
or
mov
adc
xchg
aad
orb
inc
adc
inc
add
movsb
dec
mov
sarl
sahf
pop
cmpsl
inc
cmp
xchg
in
inc
mov
adc
in
cmpsb
filds
xchg
aam
mov
enter
and
cmpsb
sbb
xchg
ljmp
jle
jmp
add
int3
hlt
and
movsb
das
enter
bound
push
repnz
loopne
add
and
pop
pop
mov
cmc
mov
gs
sub
cwtl
imul
fwait
jbe
xchg
pmaxsw
jno
jge
iret
mov
gs
sahf
pop
mov
mov
aam
sub
pushf
das
or
data16
jle
mov
cli
test
in
int
add
jne
cmpsl
xchg
or
dec
xor
xchg
dec
or
enter
add
mov
push
sbb
sbb
jge
inc
cmp
cmpsl
fbld
mov
pop
sub
xchg
inc
cmp
mov
es
les
mov
push
mov
hlt
cld
dec
push
iret
inc
add
stc
dec
and
jge
repnz
test
popa
push
popf
mov
mov
inc
push
add
repnz
bound
mov
inc
inc
loope
loope
xlat
jbe
mov
bound
fstpl
stc
rclb
test
or
pop
jmp
or
aaa
mov
fstl
adc
xchg
ljmp
lcall
into
sub
pop
popa
addl
sbb
xlat
mov
xor
jnp
inc
inc
jne
loope
jp
pusha
mov
xor
mov
dec
out
add
shl
xchg
mov
rcrl
push
sahf
popa
outsb
out
or
cmp
or
jmp
inc
push
adc
ds
fsub
and
xchg
pop
mov
inc
int3
popa
mov
inc
push
inc
dec
cmpsb
loop
test
rcrl
push
pop
mov
stos
cmp
sbb
rcl
sbb
jg
out
cmp
shll
or
sbb
xor
xchg
repz
pop
mov
daa
pop
pusha
jno
add
loopne
adc
jbe
sbb
pop
xchg
scas
fs
and
outsb
add
pop
push
or
popf
or
insl
mov
adc
fnstsw
xor
in
push
inc
arpl
cmp
adc
nop
mov
mov
loopne
adc
adc
add
repz
push
std
addl
inc
out
dec
fiaddl
jne
jge
lcall
je
mov
rolb
test
loope
ss
mov
sbb
xchg
jle
sbb
clc
test
int
sbb
cld
pop
fldl2t
dec
js
divl
dec
xor
add
push
fnstcw
or
inc
pop
aad
sub
push
xchg
mov
dec
outsb
sub
in
stos
mov
mov
xor
mov
lock
test
push
popa
jae,pn
in
push
and
mov
mov
sbb
lods
sbb
or
inc
ficoml
mov
das
xchg
or
out
jnp
jmp
and
cli
jae
mov
cmpsb
inc
xor
ret
push
inc
fwait
pushf
iret
rcl
test
push
cli
add
test
or
in
xchg
add
mov
mov
test
push
jbe
add
lods
jp
and
sbb
neg
add
or
repnz
mov
mull
mov
stos
mov
enter
orl
les
adc
hlt
loop
bound
dec
daa
pop
test
add
jbe
jb
jle
jmp
mov
daa
mov
jbe
jnp
ffreep
imul
jb
cmc
or
jbe
lods
cmp
jle
dec
mov
aas
in
lods
mov
js
ljmp
sarl
dec
xchg
vpavgb
cli
cmpsb
ret
dec
or
pop
cltd
jle
jle
and
push
adcb
in
pop
mov
fs
pop
adc
mov
push
in
or
mov
pop
jecxz
cmp
jae
and
jbe
clc
push
inc
xchg
adc
mov
imul
push
push
push
jmp
ja
xchg
jge
mov
cltd
pushl
test
pushf
in
lds
adc
inc
insl
clc
inc
mov
push
sub
inc
pop
sti
push
inc
sahf
cmp
xchg
repz
cmp
icebp
dec
cmp
div
and
out
sbb
cmp
xchg
pop
roll
sub
add
cmp
pusha
push
and
cld
jg
push
les
addr16
pop
pusha
pop
inc
mov
jecxz
imul
xchg
lods
roll
mov
imul
stc
push
lods
xchg
jle
jle
data16
xchg
and
push
sbb
mov
jnp
sbb
rcrl
in
push
mov
popf
fidivrs
xchg
test
nop
cmpsl
fstl
mov
push
dec
sub
mov
imul
pop
dec
mov
mov
pop
cli
ss
stos
mov
mov
push
xchg
pop
test
mov
xchg
or
xchg
mov
insl
cmpsb
xor
hlt
int
adc
sub
or
push
shl
cld
fmul
repnz
out
cld
stc
mov
mov
push
jns
lret
in
fdivrs
mov
int
cmpsl
xchg
push
lret
mov
jnp
and
loope
and
mov
jl
shll
mov
iret
enter
jmp
push
pop
dec
xchg
jg
mov
add
das
xchg
or
cmp
pop
enter
cmp
mov
xchg
or
outsb
push
mov
mov
lcall
or
test
arpl
ret
stos
mov
mov
xchg
test
daa
cmp
mov
push
adcl
mov
outsb
arpl
inc
dec
pop
repz
daa
jae
sbb
out
dec
adc
stc
add
fwait
pop
push
sub
xor
xchg
lock
sbb
test
jne
sub
xchg
sbbb
pop
dec
imulb
xor
aam
out
pop
add
pop
or
jns
adc
nop
iret
dec
lret
pop
pop
lahf
xor
jae
fcompl
xor
std
lret
pop
inc
arpl
add
adc
inc
loope
out
in
xor
xchg
or
jae
imul
add
sarb
or
inc
push
xor
and
dec
adc
push
mov
insl
scas
sbb
subb
inc
mov
sub
stos
adc
xor
cmp
xchg
sub
dec
xchg
mov
cwtl
int3
pop
ss
inc
pop
ficompl
sti
and
mov
loopne
inc
mov
pop
mov
mov
add
add
xchg
sub
insl
in
inc
adc
lea
push
addr16
and
push
lcall
sti
mov
or
mov
ret
and
adc
inc
sti
ret
ss
jecxz
fadds
push
sub
orl
jl
mov
mov
clc
sub
adc
pushl
daa
mov
fildl
aas
adc
adc
dec
inc
lods
lods
pop
adc
js
and
sub
cmc
dec
stos
ret
or
push
lcall
jno
and
cmpsb
out
pop
xchg
cmc
cmp
addb
ficoms
clc
dec
mov
out
out
push
sbb
aad
dec
cmp
pop
test
lret
mov
inc
jae
aam
fldl
inc
fidivl
cmpsl
aad
orl
add
movsl
inc
test
mov
jne
mov
push
pop
jae
xor
jle
js
pop
inc
pushf
dec
pop
xor
xchg
imul
lret
pop
aam
mov
in
and
mov
adc
mov
jp
mov
xchg
or
sti
xor
lock
lret
jno
xchg
fcoms
xor
xchg
lock
loop
mov
iret
mov
imul
outsl
sub
mov
jne
std
mov
test
mov
xchg
inc
popf
sbb
pop
or
add
push
hlt
in
pusha
jnp
xor
push
sti
data16
fs
or
inc
cmp
lcall
add
test
sub
hlt
dec
sbbb
cmp
aaa
jnp
fninit
scas
lods
decl
cltd
mov
inc
sarb
sbb
test
adc
inc
into
daa
aaa
xor
pop
fimull
lcall
hlt
fbstp
out
arpl
js
imul
xchg
push
mov
frstor
xor
jo
scas
fimuls
dec
ret
or
incb
and
push
stos
push
pop
out
iret
push
dec
xor
scas
jp
outsl
mov
inc
mov
jbe
sub
inc
loopne
repz
das
test
out
fistpl
fbstp
hlt
add
js
or
int
in
sbb
sbb
shlb
ljmp
mov
fsub
rcll
in
movb
xchg
and
aas
cmpsl
jae
in
mov
jo
push
sar
jnp
int3
mov
loopne
in
or
add
es
adc
lods
inc
outsb
xchg
outsl
push
or
shl
jne
or
jge
cmpsb
xchg
mov
sbb
divl
pop
pop
into
pop
pop
cmp
push
insb
mov
cmp
pop
jnp
call
cltd
sbb
stc
dec
dec
mov
cmp
sbb
xor
dec
ja
dec
mov
fcmovnbe
cmp
sub
mov
das
cltd
sub
lock
mov
aam
out
in
inc
subb
xlat
jle
orb
test
xor
xchg
je
cmp
shlb
adc
sbb
push
ret
into
inc
repnz
dec
sub
push
cmpsb
movsl
push
dec
repz
movsb
fisttps
cltd
fs
cli
mov
and
pop
pop
outsb
imul
jo
pop
loope
jb
test
incl
and
and
fiaddl
xchg
sub
jg
jle
into
dec
scas
xor
leave
daa
sti
rorw
sbb
jecxz
adcb
aad
dec
pop
into
js
nop
push
testb
or
fwait
jno
cli
jae,pn
and
addr16
xchg
jb
push
sub
xchg
sub
ljmp
pop
add
rcl
sub
pop
or
push
pop
scas
or
mov
arpl
pusha
cmpsl
dec
pop
push
jg
scas
xchg
add
popa
mov
push
divb
cmp
mov
cmp
rcrb
or
das
test
pop
std
iret
pusha
in
lea
stc
mov
std
push
jmp
mov
adc
or
je
enter
adcb
outsb
pop
xchg
sbb
cmpsl
pusha
std
stc
jg
mov
arpl
xchg
daa
adc
or
vpunpckhqdq
and
dec
insb
out
mov
in
unpcklps
pushf
fsubs
push
add
jl
sub
sbb
sbb
subb
shlb
jl,pn
mov
out
shrl
or
sbb
stos
sbb
cmp
imul
mov
mov
mov
jmp
add
xor
cmp
test
and
pop
xchg
aam
pop
es
push
jnp
mov
xchg
push
lcall
into
xchg
jmp
out
test
add
loop
inc
pop
mov
mov
les
cld
popf
xor
pop
sbb
ret
jae
and
jae
lret
into
and
push
mov
xor
sti
idivb
cli
jecxz
adc
cmp
mov
insl
xor
sub
push
sub
adcb
aas
and
dec
insl
cwtl
pushl
inc
es
repnz
push
aad
jo
pop
xor
sbb
push
xor
aad
adc
sub
and
cmc
cmpsb
sbb
cmpsb
les
cld
cmp
mov
or
or
mov
inc
jns
shrb
add
notb
shll
cmpb
fstps
dec
jne
decb
sbb
or
repz
jb
jnp
and
xchg
insb
fbld
mov
xor
imul
cmp
cmp
push
insb
add
arpl
aas
in
dec
push
sub
add
mov
jmp
in
and
insl
and
cmc
jns
out
stos
mov
clc
mov
dec
cmpsb
jo
pop
fsubrs
adc
mov
cmp
add
xchg
arpl
pop
call
cwtl
ljmp
fistpl
push
push
rorb
or
mov
sbb
out
pop
and
in
pop
mov
rorl
decl
jne
jae
add
or
sarl
xchg
pop
mov
lods
test
dec
push
popf
js
xchg
sbbb
pop
fsubr
in
push
jp
pop
ja
popf
xor
icebp
push
mov
rorb
adc
jns
aas
mov
pop
stos
sbb
in
aad
push
ja
das
ret
lcall
cs
pop
sbb
ljmp
or
pop
add
add
push
jbe
push
aam
stc
out
adc
mov
cmpb
sti
adc
repnz
into
add
lcall
test
popa
clc
push
cs
jmp
ret
sub
scas
or
add
movsl
lds
jecxz
lods
xorl
sub
in
sub
out
jg
lds
nop
stc
lret
ret
sub
lods
mov
mov
iret
xor
mov
in
mov
mov
jne
adc
sub
shl
sti
adc
es
arpl
sbb
dec
clc
mov
dec
mov
mov
jp
fcomps
dec
add
dec
shll
insl
dec
ljmp
xchg
xchg
xlat
inc
dec
mov
jo
lret
sbb
bnd
cltd
pop
into
mov
jae
in
xor
xchg
mov
mov
loopne
mov
shrb
popf
inc
or
sub
mov
push
leave
nop
loop
or
test
icebp
ficoms
add
stos
out
xchg
lock
push
pusha
xor
ret
jmp
pop
cmp
lret
mov
aam
cmp
lods
imul
pop
movsb
push
bound
or
mov
and
std
cmp
push
mov
movsb
sbb
push
jecxz
fcmovnu
out
loope
xchg
fmulp
subl
negl
pop
push
int
test
dec
sar
aad
out
jo
aad
add
rcr
fildll
jae
mov
outsb
push
nop
push
adc
ds
pop
popa
pusha
add
insl
or
out
dec
jmp
adc
push
clc
pop
inc
xchg
jb
fcoms
sbbb
out
jecxz
mov
adc
mov
movsb
bound
subb
push
xor
repz
mov
add
imul
jno
jnp
loopne
xor
sbb
add
outsl
cld
jae
push
cltd
pop
movsl
mov
leave
or
dec
lret
mul
int
ret
les
add
hlt
mov
add
js
sub
shrl
enter
popa
into
out
jnp
sub
jno
dec
jp
xor
push
subb
mov
lock
xor
cltd
mov
push
mov
shlb
loop
int3
cmc
inc
jae
in
xchg
dec
sbb
add
stos
and
and
add
mov
xchg
add
cmp
mov
or
aaa
pop
jns
mov
dec
seto
into
pop
lock
pusha
les
cli
or
int3
mov
in
lods
lds
xchg
xchg
sahf
push
pop
cli
sub
cmp
and
sbb
mov
lret
jp
mov
mov
push
fistps
mov
dec
xchg
pop
xchg
je
push
int
pop
mov
mov
sbb
pop
scas
ret
addb
sbb
scas
inc
cmp
mov
ss
mov
or
fisttps
add
and
flds
xchg
aas
imul
jae
movsb
andb
inc
idivl
cmp
subl
and
cmp
dec
mov
mov
inc
dec
jnp
xor
sbb
cmpsl
cmp
imul
jo
push
mov
mov
jbe
jae
int
arpl
lea
aad
dec
enter
cmp
adc
sub
das
sti
das
mov
jb
sbb
dec
sahf
scas
dec
cld
mov
out
xchg
sbb
sarl
or
into
into
ret
inc
pop
push
mov
jne
xor
sbb
mov
mov
aam
push
jle
inc
test
jbe
add
frstor
pop
pop
dec
enter
jg
adc
jecxz
jecxz
pop
les
je
adc
outsb
add
gs
xor
xchg
stc
add
bound
or
lods
loope
mov
pusha
push
mov
cli
cwtl
outsb
das
xor
fbstp
daa
clc
jmp
and
xor
pop
std
rcrb
sbb
adc
mov
mov
add
dec
outsl
adc
lds
arpl
jne
mov
xchg
iret
loopne
xchg
fs
pop
cs
insl
int
xor
movsb
outsl
cli
neg
add
adcl
repnz
sub
pop
add
outsl
jmp
sbb
in
jnp
insl
or
mov
mov
and
inc
mov
fdivrl
jecxz
dec
inc
pop
xchg
fwait
and
mov
xlat
inc
scas
push
or
pop
fidivrl
jbe
mov
scas
lock
fcmovne
shll
repnz
lahf
xchg
call
mov
mov
inc
test
fldt
jl
mov
mov
xchg
mov
ss
inc
sbb
mov
sarl
aad
fldl
testb
pop
jg
xor
pop
leavew
scas
cmc
cld
inc
and
push
dec
xchg
fiadds
xor
jb
push
dec
or
mov
pop
cld
or
stos
cli
jge
icebp
add
lret
sub
fdivrl
push
jne
into
out
loop
lea
mov
dec
popa
pop
cmpb
inc
cwtl
add
dec
addr16
inc
xor
mov
sbb
sahf
sub
out
jae
rorb
xchg
into
icebp
cmp
stos
sahf
mov
jne
push
in
fmuls
add
arpl
pop
sub
cmp
xor
dec
or
test
loopne
test
jg
push
sub
mov
rcrl
adc
cmp
cmp
scas
cmp
push
cs
push
pop
mov
mov
jge
lahf
rcr
decb
push
or
inc
or
jmp
out
loopne
mov
and
cltd
and
gs
sbb
pop
fucom
and
or
stos
std
mov
mov
cmp
fwait
mov
addl
pop
and
aas
jne
lods
dec
or
pop
xchg
movsl
inc
xchg
push
mov
xor
dec
mov
test
mov
popa
adc
fdivrs
mov
and
inc
sub
sti
and
mov
pop
mov
lahf
mov
js
sub
pop
jo
cli
leave
jp
lcall
xor
pop
xchg
and
inc
testl
outsb
in
mulb
lods
enter
mov
mov
pop
outsl
cmp
or
cld
fisubrl
mov
sub
orl
fs
cltd
pop
mulb
jbe
push
jp
pop
sub
sbb
out
dec
xchg
xor
inc
ds
jb
sbb
xchg
rorb
jnp
jg
test
sub
in
mov
xchg
loope
arpl
insl
adc
inc
ret
out
pop
aam
out
insb
sub
push
je
xor
loopne
push
xchg
mov
sub
dec
jbe
inc
lahf
or
and
push
cmp
add
sbb
pop
mov
stc
cli
dec
and
xchg
inc
jecxz
push
sub
cld
les
mov
xchg
ret
mov
add
sahf
jae
jle
sub
add
shlb
negb
jecxz
xchg
pop
push
jo
loopne
fcmovnbe
adcl
add
leave
pushl
xchg
inc
jns
jb
lods
bound
cmp
and
shrl
xchg
and
ljmp
pop
sub
mov
fs
jl
sbb
push
dec
add
and
inc
loopne
int3
xor
dec
pop
mov
dec
cmpsb
je
fsubrl
push
stc
lock
sbb
ret
std
dec
cwtl
out
and
popf
loopne
cmp
hlt
cli
push
xlat
imul
jno
adc
jns
mov
fnstsw
mov
pop
js
ss
lahf
sbb
mov
mov
or
pop
inc
and
sahf
jp
std
outsb
push
ja
mov
mov
mov
popa
addr16
inc
ficoml
push
jg
add
or
in
dec
arpl
imul
ja
scas
movsl
aaa
push
jnp
test
ret
xchg
into
mov
mov
imul
jnp
push
insl
in
push
fbstp
lods
adc
cli
aam
lcall
scas
aam
ja
pop
jb
add
into
dec
sbb
test
push
shll
out
loopne
sub
push
outsl
shll
ffreep
pop
out
jb
imul
xchg
loope
loope
jge
inc
mov
or
mov
addl
insb
popf
inc
adc
or
cltd
dec
xchg
xchg
mov
add
dec
in
cs
add
or
push
test
sbbl
sub
iret
push
push
fucom
sbb
adc
jno
das
div
clc
add
std
and
jo
test
pop
sub
pop
lock
dec
sub
jno
dec
pop
mov
push
movsl
fnstenv
push
pushf
ret
enter
js
stos
aam
jo
push
into
add
je
roll
aam
and
mov
es
add
mov
add
les
ret
ja
aam
fs
jecxz
xor
sarb
ljmp
test
je
or
and
xor
xlat
rclb
shll
shlb
and
sub
movsb
sbb
int
enter
xchg
inc
dec
aaa
imull
mov
pop
and
cmp
cs
test
jae
test
ss
jl
sub
fistl
adc
int3
mov
cltd
shrl
adc
add
mov
stos
xchg
mov
cmp
insl
push
in
pop
cmpsl
test
pop
dec
cltd
int
insl
jmp
push
jmp
dec
insl
mov
fwait
mov
jge
and
push
push
popf
dec
xlat
jo
es
or
ljmp
popa
push
xor
mov
cli
cwtl
xchg
jo
mov
push
in
orl
dec
lcall
notl
loope
mov
cmpb
jge
movsl
push
cmpsb
dec
push
shrb
push
loop
rolb
mov
mov
cltd
pusha
push
add
cmp
jns
inc
leave
loopne
inc
inc
testl
cmp
lods
pop
xor
stos
je
jne
arpl
into
int3
test
sub
scas
rcr
cmc
inc
lods
popa
cmp
mov
xor
ljmp
mov
sbb
sarb
pop
xor
jo
out
jb
jns
leave
sahf
inc
lods
fcomps
test
add
addl
loop
ret
jp
mov
and
hlt
mov
call
cmp
int
cmc
sbb
jno
add
jbe
add
out
sarb
rcrb
xor
xchg
clc
inc
jbe
pushf
sti
inc
mov
jle
aas
fidivl
frstor
sub
pushf
pop
sub
in
add
pop
adc
adc
popf
mov
inc
xchg
mov
fwait
movsl
mov
xor
xchg
inc
and
sub
fidivs
inc
xor
push
fwait
lcall
test
mov
pusha
movb
inc
push
xchg
fucomp
stc
adc
ja
jb
stos
xchg
lret
xchg
repz
mov
xchg
movsl
jo
dec
adc
ds
roll
inc
xchg
repz
push
and
xor
pop
xchg
out
call
lahf
jno
and
inc
jnp
push
adc
and
dec
sub
and
outsb
or
sbb
outsl
jnp
mov
aad
xchg
cltd
in
jae
cmpsl
xorl
or
mov
adc
clc
std
or
cmpsl
fcmovne
out
xchg
js
test
popa
test
sub
cmpsb
std
dec
xchg
sub
lcall
push
xchg
cli
adc
add
pop
test
lods
sbb
xchg
and
data16
mov
and
mov
or
add
jb
sti
push
push
lock
sbb
inc
xchg
fwait
adc
iret
xor
cwtl
fidivs
dec
bound
fmuls
shrl
push
push
mov
mov
decb
inc
daa
in
xchg
adc
in
inc
dec
sahf
popa
shll
sub
mov
xchg
sub
and
inc
cmc
or
sbb
shrb
cmp
mov
sahf
ret
push
loopne
push
popf
sub
inc
loop
or
mov
xor
mov
xor
mov
xchg
imul
inc
push
mov
je
popa
inc
xchg
fsubl
inc
test
adc
inc
xor
cld
mov
mov
lds
sub
inc
jl
and
loope
and
cmp
push
sar
mov
int
fisttpl
mov
xchg
outsl
sub
sti
sbb
cmp
or
mov
aad
push
ret
cli
sbb
push
pop
sbb
addr16
pop
mov
mov
sbb
xchg
gs
sti
and
or
push
lds
mov
in
add
inc
in
pop
xor
in
std
push
in
pushf
addr16
dec
les
stc
das
jle
test
aaa
jmpw
add
movsb
cmp
and
jnp
sbb
scas
lock
rolb
cmp
add
cmp
xchg
mov
repz
push
inc
xorb
out
cs
lahf
xchg
add
bound
cmpsl
in
in
cli
test
les
mov
inc
or
cmp
add
data16
out
mov
je
movsl
pop
repnz
lret
addr16
sti
outsb
jbe
cmp
inc
jno
jnp
shll
push
lock
ret
dec
mov
jmp
jecxz
cmpsl
cmc
mov
fistps
arpl
add
sahf
cld
js
imul
jp
xor
xor
dec
sbb
lea
sti
and
cmpsl
xchg
cmpsb
enter
push
repz
cmc
sti
sub
mov
push
lds
ficoml
movsl
pop
cmc
jle
push
mov
ds
inc
jg
loopne
lcall
lds
les
in
push
mov
repnz
or
xchg
inc
sub
imul
sbb
and
adc
inc
cmp
lret
or
fisubl
push
jns
jnp
cmpb
test
mov
sub
loopne
xchg
mov
into
push
mov
daa
sbb
lods
sub
mov
movsb
xchg
sub
imul
jge
cmc
mov
mov
repnz
sbb
lcall
push
adc
adc
popa
fistpl
pushf
mov
int3
sbb
pop
jp
mov
push
es
mov
fnstcw
or
jle
scas
add
xor
out
push
cmp
int
add
mov
jbe
scas
scas
lods
cmc
sbb
sti
imul
aaa
or
fcmove
int3
mov
sbb
xlat
mov
js
push
cmp
sub
jae
xchg
out
mov
neg
cmp
test
dec
cmpsl
adc
std
ficomps
mov
js
sarb
mov
mov
add
mov
and
pusha
call
pop
pop
add
xchg
pop
imul
mov
cmp
inc
add
insb
or
stos
mov
or
jmp
jo
inc
inc
sub
lret
jbe
lods
inc
sti
xchg
scas
jge
pop
out
push
aas
and
push
mov
mov
mov
mov
in
jmp
jne
mov
cmpsl
movsl
call
mov
mov
push
mov
add
push
xchg
pop
dec
pop
pop
dec
aaa
mov
lods
jmp
icebp
jp
sbb
js
insb
aad
mov
xchg
stc
pop
aaa
gs
sti
int3
test
inc
mov
nop
rorl
push
sub
xchg
push
jne
decb
push
daa
ja
add
test
add
lock
push
add
mov
insb
push
mov
push
cmp
call
jns
adc
jmp
mov
mov
jp
and
xchg
cmpsl
mov
push
add
xchg
lret
or
push
mov
dec
adc
push
icebp
mov
insb
pop
jecxz
adc
aam
sub
dec
iret
adc
sbb
sti
add
sub
mov
insb
and
xchg
xchg
push
cmpb
leave
out
push
adc
mov
jmp
sub
push
inc
inc
pop
sahf
popa
in
cmp
out
jg
lds
mov
dec
add
cmpsl
mov
stos
mov
xor
dec
pop
push
xorb
xor
dec
xlat
jg
insb
xchg
loop
xchg
push
negb
fwait
push
mov
out
ljmp
lret
ret
out
xorl
pushf
cmp
mov
sbb
stos
in
out
cmc
imul
flds
jecxz
pop
je
mov
in
mov
sub
jle
mov
push
ljmp
fnstenv
and
mov
mov
inc
sub
push
lods
pop
aad
and
in
or
arpl
movsb
gs
fists
cmp
in
cmc
rorb
sub
test
out
shl
cmpsl
cmpsl
inc
pop
jo
clc
or
xor
loopne
arpl
das
mov
mov
xor
push
mov
fadd
add
cmpsl
lret
xchg
leave
and
test
add
pop
leave
dec
push
movsl
xchg
andl
addr16
out
adc
mov
xchg
pushf
mov
push
and
sub
dec
insl
clc
pop
jnp
test
scas
jle
xchg
dec
cmp
pop
mov
sub
mov
adc
scas
and
loopne
mov
jns
lret
mov
pop
pop
in
fistps
jne
je
xor
addr16
jo
or
and
sarl
xchg
sti
mov
int
mov
cmp
scas
mov
push
and
scas
movl
mov
jg
into
dec
cmp
mov
push
dec
push
xchg
sbb
jbe
adcb
lret
je
jb
movlhps
pop
mov
icebp
lds
fs
cmpsb
sub
xchg
xchg
xchg
clc
pop
and
or
cwtl
add
fidivs
mov
xchg
inc
sub
rorb
mov
and
lret
cmc
je
pop
dec
sahf
dec
cli
cmp
call
nop
or
mov
sbb
push
xor
pushf
cs
dec
das
int
jne
mov
dec
mov
or
jg
and
faddp
push
pop
jae
xchg
enter
je
lds
mov
lds
imul
pop
js
daa
sub
jae
aaa
jae
mov
leave
push
test
jo
mov
xor
inc
push
test
out
cmp
inc
mov
lods
dec
repnz
sbb
hlt
or
dec
adcl
shl
iret
push
cmp
test
mov
cmpsb
jmp
push
ret
fstl
movsl
out
adc
mov
and
push
arpl
in
jp
loope
test
adc
andb
aam
data16
cmp
imul
adc
sub
or
mov
pop
pusha
in
icebp
push
lods
inc
xchg
decb
in
aad
jo
cmc
dec
xlat
into
cmp
dec
ja
fiaddl
js
outsb
push
mov
jo
es
pop
pusha
xor
mov
cmp
add
sti
or
in
push
icebp
frstor
and
cmp
dec
call
add
daa
mov
mov
ret
es
loopne
pop
out
push
adc
icebp
pop
sbb
pop
dec
xlat
xchg
sarb
imul
insl
sub
add
scas
cli
aas
or
fisubrs
sub
sub
jb
sub
pop
or
in
sub
and
and
mov
push
daa
or
fnstenv
mov
fldenv
or
movsl
or
scas
inc
shr
cmc
sahf
lds
mov
push
out
aas
mov
movsl
and
pushf
testb
lea
leave
pop
dec
sbb
fists
inc
call
imul
push
pop
jmp
adc
gs
scas
mov
mov
add
into
in
insb
or
lret
mov
sub
jne
js
gs
cwtl
stos
shlb
jae
lock
sub
imul
push
lock
les
sbb
scas
insb
subl
cwtl
cmp
fwait
enter
push
xor
les
pop
data16
push
xor
push
subb
test
inc
data16
je
outsb
jnp
in
adc
bound
inc
stos
insb
in
int
shrb
mov
je
enter
xor
push
ja
inc
lds
in
mov
rolb
cmp
adc
mov
aad
mov
add
add
sahf
rclb
lds
sub
jno
clc
push
mov
xor
or
cwtl
or
mov
sbb
shr
dec
push
fisttpl
ds
or
sbb
mov
arpl
dec
lcall
js
mov
xor
lret
das
lock
sarb
shll
ss
mov
repz
rcrl
into
cmp
xchg
cmpsb
popa
movsl
xor
ljmp
test
popa
mov
adc
bound
out
push
jno
sbb
fwait
scas
push
lds
push
mull
jp
lds
insl
mov
xor
dec
add
push
jb
sbb
cld
subl
jb
add
mov
mov
inc
daa
adc
jbe
orl
loop
lahf
pop
ss
test
leave
cmp
dec
jmp
xor
inc
and
jge
daa
adc
mov
push
push
sub
pop
mov
adc
push
addr16
mov
insb
xchg
outsl
movb
pop
clc
push
in
and
sbb
mov
mov
out
cmpsb
ret
cltd
inc
cmpsl
scas
push
mov
loope
repz
mov
jae
js
gs
icebp
dec
ret
in
dec
decb
leave
lea
call
xchg
dec
test
mov
jb
pushf
push
outsl
insb
mov
mov
or
cmp
cwtl
in
in
inc
and
inc
dec
testb
cmp
pop
paddb
push
data16
movups
push
insl
mov
test
inc
ja
pop
test
adc
mov
addr16
sahf
mov
cmc
inc
xchg
pop
xchg
mov
loopne
dec
ficoml
push
add
pop
lcall
fsubs
cltd
jp
pop
push
test
cwtl
sti
add
inc
mov
push
mov
mov
dec
adc
dec
fcmovbe
cmp
pop
mov
in
xchg
jecxz
and
jne
and
scas
mov
or
push
ret
dec
push
dec
outsb
sbb
fisubs
and
jb
dec
mov
pop
mov
mov
in
in
cmp
mov
xchg
rclb
jno
jge
fisubl
jae
mov
sarl
add
add
sub
sbb
lods
stos
sbb
in
xor
shr
lods
inc
sbb
or
int3
cmp
sbb
inc
shrb
mov
push
arpl
and
lods
jae
iret
test
or
or
outsl
xchg
int3
repz
mov
pop
stc
mov
es
mov
lds
filds
mov
mov
icebp
ret
inc
jno
pop
push
sub
fimull
sub
outsl
outsb
out
cmp
ds
arpl
outsb
jne
shl
sti
or
or
adc
ja
xchg
inc
cmp
or
lds
and
int3
cmp
mov
jmp
sahf
lock
xorl
inc
push
dec
je
insb
dec
nop
iret
or
mov
xor
arpl
cmp
mov
cmpsl
nop
push
inc
dec
or
cmpsl
adc
imulb
mov
pop
sarl
xor
lahf
subl
clc
mov
js
les
test
shl
out
popa
in
jbe
mov
test
xchg
cld
ret
mov
xchg
mov
adc
pop
adc
jp
in
cwtl
sbb
addl
mov
lret
ja
loop
mov
insb
adc
jne
je
aaa
mov
or
xor
cmp
iret
mov
mov
cmp
jb
pop
mov
and
xor
fsubrl
fldt
mov
aas
push
mov
adc
jo
lcall
dec
or
fincstp
mov
insb
sub
sub
inc
xlat
addr16
dec
mov
xor
jg
xor
xchg
mov
dec
in
jg
sbb
adc
fwait
stos
mov
cmp
mov
inc
in
imul
inc
or
xchg
adc
rolb
into
jp
cmp
and
fbstp
push
xchg
mov
popf
addb
mov
push
cltd
test
jbe
mov
orb
sbb
xor
fists
es
ljmp
enter
mov
mov
arpl
xchg
and
pop
mov
fistpll
mov
inc
push
mov
enter
jge
pop
fimuls
sub
mov
leave
lcall
push
stos
fildl
scas
test
add
push
and
loop
orb
leave
xchg
stc
sbb
lcall
mov
sub
popl
adc
ja
outsl
xchg
xchg
rol
cmp
rcrl
xor
cld
push
loopne
mov
pop
out
rorb
or
mov
mulb
imul
push
nopl
mov
std
pop
mov
pop
sub
jle
dec
pop
inc
mov
xor
sbb
sub
pushf
xchg
shl
sub
push
or
pop
pop
addr16
std
ret
out
hlt
scas
push
cmp
leave
push
in
into
dec
call
sub
mov
push
aaa
aad
roll
push
jge
insl
addl
pop
sarl
add
pop
aam
cmpsb
ficomps
icebp
out
cmp
js
aam
inc
adc
inc
and
aad
dec
arpl
push
jmp
lods
add
cltd
cmpsb
mov
nop
fdivr
test
inc
add
inc
fidivrs
cmp
arpl
pusha
es
fcomip
inc
pop
icebp
loop
push
test
out
mov
or
mov
movsb
mov
dec
cli
ret
add
testl
cmpb
add
into
and
stc
stc
fwait
xor
jae
xchg
jg
xor
not
mov
and
dec
shlb
pop
loope
sub
scas
jo
pop
loope
int
lahf
pop
movsb
inc
cs
scas
icebp
mov
pop
xlat
cmp
dec
jno
pop
test
lds
cmpb
fcoms
jmp
imul
add
pop
les
js
xor
jg
mov
dec
sub
imul
stos
inc
call
in
xorb
insb
insl
add
insl
cltd
imul
fwait
pop
jecxz
sub
adc
popf
enter
fidivrl
cld
xchg
lret
adc
loop
cs
dec
dec
sbb
lock
rep
fisubrs
add
bound
or
mov
out
push
pop
and
sub
out
ljmp
and
ja
xchg
lcall
push
cmp
ret
inc
xchg
ss
loop
cmc
and
cmp
mov
xor
rol
loope
stos
unpckhps
pop
and
stos
jge
test
pop
inc
jno
and
or
jmp
iret
push
sahf
and
dec
xchg
arpl
aad
and
xchg
aaa
or
sbb
leave
shll
jg
ror
mov
je
mov
mov
fs
cmp
rcrl
dec
jnp
pusha
imul
xor
xor
adc
outsb
jle
sarb
pop
jp
ret
hlt
adc
mov
divb
loopne
push
or
mov
je
jecxz
es
mov
nop
arpl
cmpsl
sbb
pushf
or
clc
push
lret
mov
dec
test
inc
outsl
cmpsl
or
mov
jg
push
in
cmp
adc
add
pop
cwtl
jnp
repnz
xchg
shl
sbbl
jo
mov
hlt
aam
lds
repnz
inc
mov
imul
xchg
scas
jae
lahf
push
iret
add
dec
ret
xor
sub
xlat
into
pop
push
sub
push
sub
outsb
jno
sub
fucom
test
cltd
lea
push
out
sbb
repz
in
mov
movsb
movsb
loopne
push
mov
add
mov
sub
sbb
int
loop
xchg
fildl
xor
sbb
xor
test
cmc
fidivs
sbb
mov
add
call
cmp
adc
sub
sub
mov
sbb
cli
out
sub
pop
jmp
ljmp
xchg
imul
outsl
mov
fisttpl
push
xor
loopne
xor
mov
insb
enter
in
xor
aad
notb
rcll
test
int
cmp
cmpsb
test
mov
cwtl
or
lock
out
push
mov
push
loopne
xchg
and
rcl
sahf
sub
and
dec
stos
add
call
jg
dec
sbb
jg
adc
cmp
ss
push
add
into
cmp
rcrl
adc
jg
in
dec
into
aad
sti
sub
jae
lea
nop
mov
jbe
jbe
pop
mov
fstps
pop
mov
inc
mull
jbe
mov
mov
pushf
insl
xor
pop
xchg
inc
sbb
lock
xlat
int
inc
adc
pushf
jle
add
mov
loop
adc
neg
push
out
and
int
inc
cmc
mov
jnp
hlt
idivb
pushf
loope
dec
fisubs
xlat
in
or
in
fildl
es
sbb
mov
push
adc
and
xchg
shr
fs
test
ja
scas
jbe
pop
xchg
xchg
and
sub
imul
enter
cmpsb
lahf
push
fcoml
arpl
xchg
out
push
out
add
mov
mov
adc
ret
dec
inc
cmp
mov
jo
mov
dec
push
sbb
jbe
xchg
fidivs
leave
sbb
pusha
push
xchg
mov
sub
in
outsb
test
mov
mov
mov
cltd
pop
inc
pop
xchg
insb
test
adc
iret
sar
lcall
cmp
lret
sbb
xchg
sahf
mov
mov
dec
and
outsl
push
or
stc
jp
jns
mov
sub
xor
aas
pop
xor
or
in
and
xor
and
loopne
mov
mov
pushf
test
ja
xchg
and
and
notw
pop
ljmp
and
dec
xor
pop
or
roll
mov
and
ljmp
or
les
mov
xor
mov
out
xchg
lea
mov
aas
andb
cltd
xchg
pop
lret
xchg
arpl
test
mov
add
xchg
mov
inc
pop
xor
sbb
movsl
xor
push
in
fwait
cmc
adc
xor
lds
out
fwait
orl
sub
sbb
jns
jg
pushf
xchg
xor
sahf
xchg
push
push
rcl
out
or
mov
popa
inc
les
fs
xchg
shl
inc
jle
addb
sub
sbb
ret
clc
sbb
mov
jle
adc
xchg
xchg
pop
sbb
cmp
cwtl
xchg
pop
push
xor
rcrb
and
jo
mov
xor
out
mov
bound
test
int
fcomps
loop,pn
pop
or
fs
xchg
loopne
mov
test
dec
jne
paddusb
jne
sub
jno
repnz
xchg
iret
in
lahf
xchg
popa
mov
adc
or
pusha
lret
cmp
add
punpckhbw
or
mov
inc
shll
jge
lret
sbb
je
sbb
or
push
jae
fmull
lds
fcmovu
out
aam
sub
pop
cltd
cmp
add
fsubs
or
shlb
in
add
cli
sahf
les
test
xchg
dec
mov
in
sbb
pop
jmp
mov
les
jecxz
inc
push
scas
push
push
cs
dec
xlat
push
inc
adc
lret
push
dec
mov
negl
jl
xchg
nop
shr
mov
ret
mov
adc
test
outsb
in
and
adc
imul
cld
pop
rorl
mov
cld
inc
ljmp
inc
cld
aas
xlat
pop
push
movsb
inc
inc
loope
jmp
outsb
enter
sub
xlat
xchg
mov
imul
adc
std
repz
xchg
add
adc
jmp
lea
outsl
mov
out
arpl
push
test
cwtl
pop
xor
jns
inc
popf
sbb
mov
test
mov
lret
or
cmp
dec
mov
adc
mov
xadd
cmp
ljmp
call
sahf
fsubrl
nop
mov
pop
hlt
lahf
cmpsb
lds
ljmp
and
jge
repz
lcall
lds
out
leave
and
xchg
lcall
mov
out
loop
add
popa
mov
mov
xor
movl
pusha
ss
data16
dec
lods
std
pusha
dec
jno
call
iret
push
scas
dec
jo
jecxz
ljmp
push
jp
cmpsb
test
ss
pop
push
add
into
pop
in
inc
jnp
dec
les
xchg
mov
out
sbb
sbb
inc
sti
xor
int
mov
sahf
cltd
dec
and
add
stos
popa
adc
xchg
fptan
shr
repz
mov
push
cmpl
pushf
add
ljmp
xchg
sub
mov
mov
sahf
jge
mov
pop
sti
mov
adc
add
adc
int
lea
push
movsl
addr16
shrl
ret
sbb
into
mov
jb
pop
or
mull
jle
inc
in
sti
adc
and
mov
in
dec
movsb
add
cmpsl
mov
mov
out
push
or
xchg
mov
xchg
mov
outsb
push
rclb
jle
or
stc
dec
ja
shrl
jmp
ljmp
ljmp
pop
pusha
add
cli
adc
push
cmpl
pop
jnp
mov
inc
sbb
pop
mov
sbb
movsb
and
in
mov
xchg
mov
test
mov
and
xor
add
jo
or
mov
or
mov
sub
lcall
mov
inc
in
imul
dec
ret
sbb
sub
out
mov
mov
clc
jl
push
stos
loop
clc
sub
or
cltd
mov
fdiv
fwait
mov
ds
rorl
pop
xchg
push
ds
fistpl
or
push
xchg
outsb
mov
jae,pt
stos
fildll
mov
aaa
dec
push
pop
jecxz
in
imul
pushf
insl
xchg
sbb
sti
inc
fsubl
and
push
adc
dec
dec
and
out
fistl
inc
out
jl
imul
inc
jnp
or
mov
sti
outsl
xchg
jl
pop
imul
in
push
repz
fistpl
jl
ja
mov
idiv
gs
popf
inc
fmuls
cwtl
popa
hlt
out
bound
mov
pop
jns
sub
arpl
adc
sub
pushf
push
pop
inc
scas
xchg
xor
leave
jg
sbbl
dec
xchg
cld
pop
out
fiaddl
int3
or
decl
mov
jnp
add
fwait
loope
xor
pop
mov
mov
push
std
daa
xor
push
or
daa
pop
pop
jbe
and
xor
cmp
sahf
sub
fsubs
iret
outsb
jle
xlat
loop
movsl
movsl
insb
out
mov
bound
sbb
mov
test
adc
adc
jge
adc
test
sbb
movsb
xlat
sub
mov
mov
push
xor
fsubrl
sarl
xor
and
je
inc
or
or
sbb
fsubs
repz
sub
ljmp
inc
fstps
xor
xchg
fistl
movsl
xchg
add
or
pop
fcoml
movsb
imul
test
cmpb
fs
cmp
mov
shll
roll
rcll
fcmovbe
dec
stc
out
adc
push
dec
sti
mov
push
sbb
dec
fs
ss
cmp
repnz
fchs
sub
nop
les
data16
push
sub
inc
push
push
es
fwait
dec
push
push
ret
int
dec
cmp
or
sbb
dec
cmp
pop
pop
pop
arpl
sub
lea
pop
sub
mov
xchg
lods
mov
or
mov
fwait
sub
in
sub
addr16
lret
sbb
aas
cld
repz
shr
sub
push
sahf
pop
or
jae
fs
mov
int
aas
cmp
out
mov
mov
push
mov
lds
stos
mov
fsts
movsl
in
int3
pushf
jbe
cmpsl
mov
mov
inc
out
jbe
cmpsb
sbb
insb
push
pop
in
es
jge
cmp
lods
pop
sub
out
hlt
sub
pop
adc
dec
mov
testl
out
and
shll
sbb
test
push
or
fldl
sbb
xchg
fs
jnp
test
loope
stos
nop
test
dec
jl
test
sbb
aas
pushf
pop
out
stc
imul
cmp
aam
rol
cmp
cmp
cmp
jae
cmc
insb
rcll
std
xchg
xchg
in
xor
cmc
aad
sarl
adc
rolb
sbb
push
xlat
and
push
sbb
mov
push
jle
mov
jb
cmp
aam
arpl
pop
sub
mov
inc
repnz
add
push
popa
mov
or
xchg
or
jno
mov
add
mov
pop
rcll
adc
cmp
add
fnstsw
fstl
mov
or
lret
scas
xchg
out
pushf
inc
pavgw
rcl
leave
in
mov
pushf
pop
cmpsb
mov
int3
call
xchg
dec
or
add
lock
fsubl
or
cmp
or
pop
mov
push
xor
lahf
mov
pop
lret
sbb
sub
add
nop
jge
loope
repnz
dec
pop
push
sub
loope
pop
push
pusha
push
sub
sub
jne
divb
add
divl
push
inc
pop
push
rcrl
dec
sub
in
pop
xchg
inc
jae
sub
mov
xor
xchg
fbstp
adc
dec
imul
out
sub
add
lret
scas
xchg
push
mov
dec
jno
and
add
sahf
out
sti
pushf
cmp
ret
push
lret
je
add
jno
push
jecxz
dec
xchg
add
ds
int
push
or
lds
fidivrl
dec
adc
dec
jae
inc
stc
and
mov
mov
pop
out
mov
fistps
mov
jae
lock
adc
ljmp
ds
cmp
xchg
and
mov
cli
mov
int
repnz
adc
dec
inc
adc
inc
es
scas
dec
dec
inc
mov
fldt
mov
pushf
data16
mov
dec
stos
lods
pusha
sub
aaa
mov
cmpsl
fwait
stc
jl
pop
push
into
xlat
stos
leave
push
stos
test
or
cmp
scas
scas
jo
inc
adc
mov
xor
inc
aam
add
or
ret
insb
pushf
rclb
daa
aaa
mov
inc
xor
jb
mov
adc
sti
mov
fisttpl
lea
fbstp
xchg
jl
jne
in
mov
pusha
ds
les
sub
dec
inc
add
lahf
icebp
adc
hlt
test
inc
inc
mov
push
add
cli
mov
aad
in
adc
pop
jg
scas
cmp
add
insb
xor
add
xor
insl
adc
push
cmovge
and
inc
ljmp
mov
sbbl
sbb
lahf
mov
pop
inc
testl
dec
ljmp
xchg
push
jecxz
pop
dec
add
mov
jmp
jp
xchg
add
aad
fnstcw
aaa
pop
xor
jl
lods
add
fdivs
mov
mov
data16
stc
leave
push
fimuls
sub
fucomi
and
mov
testb
add
loopne
repz
fstpl
jmp
mov
cmp
cld
jnp
pop
dec
in
insb
hlt
xor
xchg
jle
cmpsl
test
sarl
dec
lahf
inc
test
jno
and
bound
xchg
enter
pop
xchg
jo
mov
mov
push
push
lcall
test
sbb
movsb
shll
inc
sub
lds
jne
out
and
mov
dec
insl
pop
rclb
jnp
fwait
cmpb
out
hlt
pushf
in
xchg
repnz
add
sub
sbb
jmp
mov
mov
adc
daa
mov
jns
shrl
imul
sbbl
cmc
jecxz
push
aas
sbb
sub
inc
fnsave
dec
dec
or
popa
fistps
push
jbe
mov
jns
fisttpl
sub
jp
and
shlb
and
outsl
sbb
mov
sub
aas
mov
loopne
call
je
mov
push
notb
pusha
jnp
push
enter
jno
addr16
jne
add
mov
lcall
mov
jg
subl
ljmp
mov
pop
popa
inc
cli
mov
in
inc
push
gs
jmp
push
jl
lock
or
cltd
mov
inc
mov
adcl
cmp
and
movsb
dec
popf
pushf
lret
fimuls
xchg
xchg
sbb
shrl
sbb
shl
test
xchg
js
xor
push
pop
or
movb
push
dec
cmp
call
clc
mov
out
pop
mov
es
fdivr
bound
mov
pop
dec
mov
loop
es
sbb
dec
test
push
testl
lods
mov
and
adc
add
jmp
adc
pop
loope
shlb
enter
or
adc
cmpsl
iret
cmp
mov
sbb
mov
maskmovq
idivl
insl
cmp
add
and
adc
mov
inc
mov
sarl
setle
out
imul
jl
jmp
bound
and
pop
push
mov
jle
lret
or
and
out
outsl
adc
sbb
std
adc
sbb
add
ja
loop
enter
ja
adc
fdivrs
jnp
rorl
enter
adc
sub
sbb
jmp
outsl
dec
leave
dec
popl
inc
jns
or
insl
in
lret
add
cmp
insb
std
shlb
add
push
into
sub
or
loop
nop
or
popf
push
test
addl
scas
push
mov
add
data16
les
xor
das
push
kmovb
loope
jnp
xchg
mulb
cmp
loopne
jge
rorb
jl
das
aas
sub
push
lret
imul
icebp
sub
sbb
test
cmpsb
lods
ja
inc
mov
push
cmp
cli
cmp
mov
xchg
mov
andb
test
push
xchg
sahf
xchg
inc
cltd
fwait
adc
or
mov
dec
cmp
gs
call
fwait
dec
jmp
add
mov
or
pop
lret
mov
xor
leave
xlat
adc
dec
xchg
mov
movsb
call
mov
inc
push
inc
inc
addr16
stos
icebp
cmp
adc
pop
inc
cmc
aas
and
xor
cmpsb
gs
and
dec
mov
ror
jns
dec
ret
pop
add
xor
xchg
push
and
adc
adcb
mov
icebp
mov
pop
xor
ss
xor
adc
cmpsl
mov
adc
stc
dec
dec
push
mov
aaa
mov
mov
stc
ljmp
jbe
sbb
lret
adc
push
ja
lods
sbb
dec
pop
iret
andps
mov
dec
mov
adc
xchg
fwait
jmp
push
incb
mov
cmp
jae
test
xor
sti
ds
sbb
mov
lretw
mov
xchg
ret
out
xor
xorl
ja
mov
lods
int3
ds
and
push
dec
cld
pop
in
push
iret
fnstsw
icebp
ss
xchg
ds
pusha
cmp
daa
in
loope
push
decb
dec
inc
or
out
mov
clc
inc
pusha
mov
outsl
cmpsl
add
ss
xchg
cltd
mov
jmp
mov
cmp
lock
loop
jmp
test
imul
out
and
pushf
mov
mov
dec
add
out
jmp
mov
jl
aas
or
outsl
shll
cli
inc
and
adc
push
loope
xchg
incb
cs
movsl
cmp
fildll
dec
sbbl
test
shl
mov
jmp
jl
jnp
adc
shrl
inc
negl
fsubrl
lods
push
jnp
nop
into
adc
inc
mov
scas
imul
dec
inc
inc
aaa
inc
mov
pop
xor
imul
divb
dec
mov
or
push
mov
pop
adc
inc
add
xor
jno
and
sub
mov
mov
lds
mov
pop
out
insb
mov
inc
pop
adc
cmp
push
pop
movsl
adc
loopne
repnz
pop
lock
subl
push
push
sub
js
mov
and
adc
sbb
insl
repz
js
sbb
out
cwtl
js
mov
in
subb
mov
cld
mov
add
into
jae
add
das
cmc
and
int3
repz
cltd
in
mov
xchg
fwait
cmc
pop
sbb
sbb
jg
lcall
cmp
mov
int3
sarl
dec
ret
in
sub
cmp
out
mov
mull
xorl
lret
cwtl
dec
cli
mov
enter
add
loop
mov
mov
repz
lret
int3
adcl
inc
cmp
rcrb
cmp
and
sub
sbb
or
mov
push
or
out
leave
hlt
scas
jge
ja
mov
add
xchg
push
adc
addr16
lret
subb
stos
fdivrs
cmp
cld
sbb
mov
mov
decl
mov
and
mov
je
dec
jbe
cmpl
mov
ss
stc
popa
daa
jno
loop
ljmp
sub
push
lods
add
sub
inc
push
add
fimuls
push
mov
movsb
push
icebp
mov
scas
add
or
gs
out
add
cmpsl
lods
es
cmp
adc
mov
inc
sti
int3
pop
and
fstp
dec
inc
push
add
dec
leave
cltd
sub
test
jecxz
sub
xor
and
lock
mov
dec
mov
popa
mov
imul
lods
scas
cmp
sbb
bound
mov
rolb
bound
push
fstl
leave
mov
mov
loop
xchg
push
dec
xchg
xchg
cmc
dec
mov
sbb
repnz
lret
adc
neg
or
xchg
icebp
dec
dec
pop
xchg
cmp
adc
sbb
flds
pop
mov
push
adc
insl
fisubs
jp
cwtl
mov
adcl
adc
mov
sbb
jle
das
pop
mov
mov
mov
push
sub
out
mov
loopne
jle
rclb
xchg
mov
pop
and
int3
mov
out
scas
xor
mov
push
jno
mov
mov
stos
in
cld
inc
filds
sarb
std
sar
inc
stos
sbb
and
pop
push
jb
sbb
lea
sbb
cmp
lds
add
shr
movsb
jbe
mov
mov
mov
stos
mov
repnz
or
sub
ja
js
adc
outsb
ljmp
fildll
cmc
sbb
push
hlt
out
mov
outsb
pop
aad
sti
mov
xchg
sbbb
dec
jne
stos
dec
push
jge
cmp
faddl
pop
push
dec
jg
stos
sbbb
mov
cld
mov
gs
push
adc
aad
and
fdivrs
cmp
add
outsb
cs
inc
es
lret
out
pushl
call
xor
and
mov
lret
gs
popf
scas
lock
sub
inc
call
sbb
mov
push
mov
stos
inc
mov
es
loopne
cmp
imul
mov
fisubrs
push
jmp
and
or
cmp
add
sub
aaa
cmpsb
lea
inc
sub
ja
lcall
ss
and
sbb
movb
adc
adc
push
pop
mov
cld
mov
loop
push
lcall
es
xchg
out
rclb
or
mov
mov
ljmp
mov
jnp
decb
jle
clc
test
test
add
stos
loope
or
insb
or
leave
incl
cmp
jno
stc
adc
es
lea
cmp
test
int
pop
sbb
ret
mov
mov
out
iret
outsb
aad
pop
xchg
push
in
loopne
outsl
adc
push
in
stc
inc
xchg
jne
jmp
repnz
jne
or
jl
out
mov
sbb
fdivr
mov
mov
movsb
insl
ja
cmp
jle
mov
mov
adc
in
jg
jno
enter
xor
insl
stc
cmp
es
fcmovbe
cmp
xor
mov
icebp
jbe
rorb
stc
inc
xchg
cltd
jle
cmp
sub
loop
ret
jp
test
xchg
lret
and
xchg
daa
clc
add
cmp
xchg
dec
jo
fcomps
cmp
popf
jg
mov
outsl
jmp
cmp
xchg
cmpsb
iret
outsb
push
js
jne
addr16
int
addr16
das
rcll
enter
cmp
add
scas
jns
push
pop
mov
popa
sbb
dec
fdivrs
and
add
loope
ret
cmp
xchg
mov
cs
or
lcall
xchg
dec
fdiv
out
mov
call
mov
test
mov
popf
ficompl
cltd
es
fnsave
and
add
xchg
mov
jge
aas
mov
mov
sub
lods
dec
sub
lds
and
push
mov
pushf
push
adc
sub
pop
jae
pop
das
outsb
repz
bt
xchg
fldenv
xor
outsb
adc
push
jo
test
xchg
stos
mov
lock
loope
stc
repz
out
aaa
outsb
scas
jns
inc
popf
xchg
adc
mov
ds
jnp
and
jae
add
mov
out
imul
popa
dec
cmp
lock
icebp
sub
mov
es
push
xchg
imul
imul
inc
xor
mov
adc
cs
loop
call
jg
push
jp
add
loope
int3
mov
add
and
mov
and
and
insb
pushf
andl
pop
test
dec
mov
jecxz
jnp
ds
mov
push
jmp
out
cmp
lock
mov
into
push
sub
mov
jno
dec
negl
lahf
lods
or
test
es
sbb
ljmp
mov
loop
sub
out
xchg
ljmp
or
add
aad
xlat
and
push
mov
ffree
add
fnstsw
fisttps
icebp
mov
xor
jns
add
fwait
idivb
pop
int
adc
mov
lods
test
cld
sub
jp
inc
cld
aam
fadds
mov
sahf
outsl
insl
inc
and
loopne
stos
push
orw
lahf
out
in
aam
rol
xchg
es
inc
or
sarb
cld
mov
es
jne
pop
mov
push
mov
pop
pop
or
outsl
popl
jp
and
inc
mov
popf
and
sbb
and
xchg
fistpll
mov
jbe
das
nop
mov
push
push
iret
inc
xchg
xor
cld
cmp
jmp
in
outsl
xor
popf
fcompl
push
int3
cwtl
call
fldt
gs
jne
dec
lcall
sarl
in
repz
lret
mov
hlt
adc
push
mov
ret
cmp
lods
add
jmp
je
popa
cmp
movsb
jmp
or
test
push
scas
les
ljmp
xchg
inc
add
outsl
jg
hlt
push
sbb
fwait
push
sbbl
in
sbb
pop
in
fmul
rorb
xchg
pusha
adc
push
mov
jle
psadbw
sub
lret
sub
and
lds
mov
fistl
stos
cmp
mov
xchg
movsl
jle
lret
sub
ljmp
jb
mul
lcall
mov
scas
sbb
xchg
xorb
sti
mov
jo
jmp
sti
inc
and
insb
cmp
insb
ret
je
jp
fisttps
dec
movsb
pop
mov
stos
inc
fdivr
cmp
sbb
add
outsb
xchg
loopne
adc
in
and
filds
mov
or
test
xor
inc
negl
mov
inc
mov
pop
push
xor
and
int3
imul
in
or
aam
pop
rol
pop
or
xchg
push
js
jmp
int3
push
push
cltd
jbe
fcomp
and
mov
mov
mov
inc
in
outsl
out
add
pop
dec
sub
cmpsl
nop
jle
xor
mov
sub
mov
filds
cltd
push
mov
adc
lods
les
fcomps
mov
leave
rclb
test
fsubrs
mov
and
jecxz
inc
mov
in
jmp
xlat
lock
mov
lock
fnstsw
mov
adcl
push
jne
xchg
lods
outsl
lea
jecxz
pop
inc
sbb
push
push
adc
pop
psubsw
lahf
xor
imul
xor
or
and
lcall
push
leave
pop
out
jne
cmp
popf
leave
insl
incl
test
or
mov
push
sub
outsb
cwtl
mov
adc
mov
outsl
cmp
push
sbb
mov
enter
test
loopne
subl
add
and
mov
stc
idivl
push
pop
push
jb
jge
data16
pop
pop
inc
pop
xchg
fsubs
imul
cli
xchg
mov
fcomps
mov
nop
in
dec
out
sub
stc
repnz
hlt
jae
scas
push
jb
fwait
inc
pop
pusha
stc
ret
mov
ficompl
adc
out
je,pt
add
lods
mov
lret
xchg
cltd
push
xchg
dec
pop
aam
fadd
test
push
in
jmp
fstpl
pushf
or
scas
adc
popf
lock
stos
repnz
outsl
dec
ss
xlat
and
loop
movsb
shrb
fdivrl
movsb
shll
xchg
and
imul
pop
push
xchg
lret
pop
jecxz
sub
outsl
jbe
scas
sti
sbb
jbe
sub
ss
les
hlt
mov
loope
scas
fmuls
mov
iret
lock
repnz
sub
xchg
inc
fisubs
jae
xchg
dec
add
in
int
je
mov
xchg
sbb
test
adc
mov
fisttpll
mov
leave
adc
out
xchg
jae
mov
imul
int
mov
cmp
gs
push
out
cmp
aas
arpl
pusha
fisttpll
andl
gs
mov
mov
ljmp
cmpsb
or
add
mov
jge
das
mov
pushf
ljmp
cmp
ljmp
lods
mov
in
sub
sbb
popf
cwtl
dec
mov
add
cmp
cmpsl
lods
add
sbb
xchg
mov
test
cwtl
mov
cld
cbtw
flds
sbb
enter
pop
imul
fsts
mov
nop
clc
popa
pop
cmp
mov
push
lock
xchg
push
add
cmpsl
insl
lcall
push
movq
adc
fwait
cmc
fcmovne
ret
repnz
mov
dec
into
int3
lahf
leave
in
aaa
cmpsb
xchg
out
xlat
test
and
aad
imul
shll
or
inc
xchg
adc
aam
cwtl
jmp
cmpsl
ss
jae
ja
filds
popf
gs
sub
pushf
cmpsl
cmpl
icebp
add
cmp
inc
dec
out
jle
jecxz
and
icebp
sarl
test
jne
mul
sub
mov
dec
rcr
jge
dec
xchg
cld
xor
daa
or
and
out
adc
test
sbb
call
pushf
fimuls
cmp
imul
xchg
hlt
fnstcw
cmp
mov
cmp
jno
mov
out
ss
das
test
stos
or
mov
scas
mov
push
outsl
lret
push
sbb
inc
dec
movsb
inc
ret
inc
aas
decl
roll
push
add
aad
rol
xchg
add
dec
push
adc
or
cmp
or
mov
xorl
lock
arpl
out
xor
in
jns
sahf
pop
xchg
dec
clc
stc
arpl
or
push
outsl
push
sub
pusha
xchg
xor
negb
shlb
outsl
adc
xor
mov
insl
fld
outsb
mov
inc
fadds
jae
test
hlt
mov
out
test
sbb
ret
and
cmpsb
fsub
out
mov
mov
fwait
stos
out
ja
cli
mov
xor
clc
push
mov
outsb
sub
or
cs
jmp
pop
faddl
mov
outsl
and
jae
int
and
sub
mov
push
xchg
inc
shrb
cmp
into
mov
and
inc
pushf
mov
adc
pop
scas
xchg
jp
xchg
stos
dec
es
dec
aas
ss
adc
dec
jl
mov
outsb
outsb
xchg
and
pop
mov
inc
mov
xchg
inc
movsb
sbb
negl
je
pusha
sub
scas
fldt
mov
imul
or
mov
cmp
cwtl
jg
test
movsl
popf
jmp
idivl
ds
ja
scas
add
jle
push
mov
cmp
nop
push
lods
addb
sahf
mov
aaa
add
jnp
lock
add
mov
sarb
inc
mov
sti
scas
jb
inc
sub
xchg
mov
leave
outsb
xchg
clc
pop
lahf
popa
push
pop
dec
dec
and
out
mov
insb
push
cwtl
xchg
pop
daa
jae
lock
std
xchg
daa
fimuls
push
out
mov
call
popf
rorb
sbb
adc
cmp
inc
and
popf
or
clc
rorb
xchg
and
outsb
ljmp
repz
lock
cmp
aam
xchg
xchg
cltd
ja
push
popf
data16
pushf
xchg
sahf
mov
jge
enter
mov
imul
pop
mov
add
xor
mov
pop
adc
xor
mov
popf
or
mov
push
add
pop
push
cmpl
sbb
xor
arpl
bound
sub
adc
jbe
xchg
xchg
stos
cmp
xchg
data16
xor
fsubs
or
add
cmp
ds
sub
cmp
fwait
xchg
mov
int
pushf
popa
sbbl
mov
mov
loop
imul
and
hlt
jmp
dec
mov
xor
test
out
mov
and
mov
js
dec
lcall
add
int3
xchg
and
mov
rcrb
flds
push
mov
test
mov
arpl
subb
cmp
adc
loope
jo
movsb
int
rcrl
inc
inc
or
call
stos
bound
das
imul
add
std
push
cmp
sti
cmp
dec
and
in
lock
push
movsb
or
lahf
testb
out
jae
pop
mov
cmpsb
mov
es
pop
in
add
pop
je
mov
pop
push
pop
sbb
dec
sbb
mov
jmp
pop
cmp
push
jl
sub
out
cmp
fwait
mov
out
inc
sub
cmpl
cmp
scas
fdivl
iret
dec
mov
sbb
mov
push
sub
dec
adc
sbb
and
xor
xchg
mov
jno
mov
ss
adcb
sbb
adc
notb
imul
xchg
fcoms
addl
daa
push
add
test
xchg
jl
loop
shll
in
int3
xor
jns
mov
into
or
push
outsl
push
outsb
aam
pop
jge
insl
loop
mov
hlt
rclb
sbb
ss
addr16
iret
outsb
fdivr
jg
stos
imul
xor
icebp
std
xchg
jge
lods
sti
movsb
into
xor
or
scas
das
fdivl
ss
loop
out
in
add
push
aad
movsl
mov
xchg
cmp
ljmp
mov
xchg
fldt
pusha
xlat
cmp
xor
sbb
xchg
cmc
mov
sbb
sbb
lods
xchg
loopne
scas
cltd
pop
repnz
arpl
jbe
stos
nop
mov
lds
je
push
fcoms
mov
push
jg
mov
push
and
inc
out
push
lret
pop
cmc
cmp
fdivs
xchg
jo
test
out
and
sub
enter
pusha
mov
inc
and
ljmp
jae
js
popf
popa
pusha
ljmp
loope
setne
lret
rcr
push
rcrb
and
stos
xor
sahf
cs
xor
mov
xchg
push
sbb
loope
xchg
mov
hlt
lret
sub
xchg
pop
sub
push
ds
je
and
pop
or
bound
dec
push
dec
mov
loopne
xor
ficoml
mov
and
xchg
lds
gs
pushf
pop
dec
fidivrl
fistpl
dec
cmpsb
fimull
sub
fnstenv
filds
push
adcl
jmp
cmp
and
loop
dec
mov
repnz
adc
repnz
aam
test
ficompl
pop
mov
out
popa
push
loopne
lock
sub
xchg
call
jmp
test
jae
xchg
sbb
or
faddl
and
pop
mov
mov
lret
pusha
xchg
ljmp
cwtl
cmp
addr16
shll
test
cli
fnstsw
xchg
inc
lcall
cmpsb
enter
inc
dec
mov
inc
add
out
call
mov
mov
sub
mov
cld
fisttpll
insl
inc
movsl
sbb
xor
leave
inc
fsts
dec
scas
movb
pop
loop
mov
int
stos
sub
in
sub
mov
sti
fwait
and
icebp
dec
cltd
sub
cmp
decl
mov
xchg
pop
jg
int3
and
jns
icebp
sbb
push
aaa
inc
loopne
inc
mov
dec
mov
push
xchg
ljmp
add
outsl
xchg
add
pusha
jl
bound
shll
jo
in
repnz
or
in
sbb
xchg
mov
cmc
add
mov
dec
sbb
add
pop
sbb
jne
cld
jg
stos
movntq
push
or
xor
hlt
out
pop
sbb
sbb
int
test
xchg
in
pop
add
out
insl
dec
mov
cmp
push
xchg
repnz
sbb
mov
int3
jmp
fnstsw
mov
mov
lret
imul
out
lret
or
setl
jne
repnz
sbb
or
out
and
jns
cmp
mov
and
jno
xchg
jge
sub
and
sbb
sbb
outsb
imul
imul
jbe
inc
lods
push
in
test
push
mov
xchg
add
cmpsl
movsl
ffree
mov
aam
add
fsqrt
popf
jge
bound
jecxz
lock
push
sbb
rol
dec
mov
inc
test
add
imul
inc
je
out
add
call
mov
jo
cwtl
pop
fwait
jb
cmp
movsl
sbb
ljmp
mov
or
stc
and
dec
aas
cmp
jmp
xchg
jne
outsb
ja
sbb
jae
sbb
inc
mov
dec
xchg
icebp
xchg
pop
testl
mov
orl
inc
orl
hlt
testb
bsf
or
adc
sar
xchg
stos
aaa
sub
cmc
les
xchg
xchg
lret
push
in
in
js,pn
in
ljmp
inc
gs
popf
mov
add
mov
es
in
rol
push
mov
dec
ret
jge
pop
inc
in
push
pop
movsb
repz
repz
pushf
sub
mov
jle
fbstp
mov
gs
nop
cmp
add
jle
js
mov
repz
cmc
popa
mov
stos
loope
js
stos
sub
jns
into
push
xchg
movsl
adc
jo
scas
fildl
pushf
icebp
push
fiaddl
mov
in
and
pop
inc
inc
out
or
jmp
and
xchg
lods
xor
add
cmpsl
sub
or
mov
enter
and
cwtl
xor
scas
dec
andb
cmp
xchg
mov
jecxz
les
icebp
or
pop
test
mov
add
movb
fwait
mov
cmc
cmpl
and
adc
mov
dec
dec
mov
jecxz
clc
mov
mov
mov
push
stc
incb
cld
jmp
xchg
lahf
jo
rol
and
shrl
xor
js
cmp
mov
mov
or
and
test
call
cmp
adc
fldcw
repnz
fcomip
stos
xchg
and
imul
dec
rclb
fucomp
movsl
hlt
sbbl
add
fwait
cmp
add
ret
push
fcmove
cld
jo
iret
lea
cmpsl
popf
sbb
cld
adc
or
inc
adc
fadd
or
das
dec
sti
adc
fwait
mov
jae
push
dec
adc
ret
cmpsl
jg
popf
insb
dec
test
jbe
test
push
push
scas
mov
enter
inc
das
es
sbbb
leave
or
icebp
in
jae
repz
mov
pushf
ffree
movsb
jae
iret
repz
aad
in
and
jns
mov
jae
add
out
or
stos
and
xchg
gs
out
in
push
pop
and
and
and
lret
push
mulb
fs
sub
xchg
adc
decl
and
add
jne
jbe
mov
lret
dec
mov
les
mov
rcr
loop
jbe
cmpsb
bound
int
or
push
pop
rcll
or
cmp
adc
int
pop
outsb
insb
into
jecxz
cmp
pop
pushf
add
repz
fwait
sub
rol
imul
mov
loope
sub
movsb
icebp
loope
pop
cmp
mov
xchg
inc
adc
mov
imul
out
sub
rcll
xchg
jbe
cmp
fldenv
mov
dec
insl
jno
rclb
cmpsb
clc
and
pop
jp
push
and
std
loopne
cmp
cmp
flds
sub
cli
jg
mov
shl
daa
jb
sub
push
or
mov
imul
pop
jmp
mov
ja
fadds
seto
sub
jne
lea
loopne
xchg
and
jno
fprem1
inc
cltd
cs
or
sahf
xor
into
imul
inc
loope
and
mov
push
and
and
xchg
test
jne
xchg
push
cmp
scas
mov
xchg
jb
dec
xor
inc
lea
in
add
enter
int3
pop
into
enter
jecxz
into
test
jnp
cmpsb
por
pop
push
dec
movsb
pop
loop
sub
cmp
test
xchg
jecxz
cmp
aas
mov
adc
iret
sub
std
leave
push
loope
shlb
popf
adc
out
sahf
int
adc
jmp
loopne
and
mov
inc
imul
fdivrl
call
popf
in
pop
pop
pop
loop
cmp
inc
cmp
mov
sbb
ja
jecxz
mov
cmc
push
sub
out
movhps
leave
dec
and
movsl
sbb
and
pop
add
jb
fs
add
or
push
mov
subl
xor
lock
push
shlb
inc
out
push
dec
sub
and
xchg
nop
push
enter
inc
test
imul
push
cmp
xchg
test
inc
push
dec
xchg
inc
push
movsb
xchg
and
or
lock
jo
sub
ss
push
dec
icebp
sub
pop
xlat
hlt
into
cmc
repz
xchg
scas
cmp
shlb
inc
xor
pop
inc
sub
sar
scas
push
push
lock
inc
in
sbbb
test
push
out
pop
jb
scas
pusha
dec
daa
lret
idivl
ja
cli
es
daa
inc
jmp
adc
out
add
cmp
pop
add
mov
pop
xor
mov
push
fsubl
pop
imul
cmp
test
add
fdivl
mov
cmp
xchg
repnz
sahf
insb
aam
mov
rorl
jle
adc
inc
sub
jl
mov
imul
in
leave
aas
and
imul
cltd
pop
ss
push
cmp
imul
add
inc
pop
out
mov
sbb
pop
imul
inc
insb
inc
sub
push
shrb
jne
fsts
sahf
jle
adc
sbb
ror
or
enter
test
imul
test
pop
push
mov
add
out
push
stos
test
testb
push
mov
call
sti
insl
mov
jge
aaa
arpl
imul
lcall
cmp
fsubrs
ficoms
mov
fisubs
xor
or
pop
out
adcl
hlt
sub
gs
dec
fs
out
adc
mov
adc
push
inc
popa
fidivrl
push
mov
add
sbb
sub
cmp
out
inc
in
cwtl
pop
jb
xchg
mov
cmp
xor
add
aam
scas
aad
jle
jge
pusha
inc
int3
iret
add
sub
cmc
adc
shll
cmp
nop
xchg
out
pop
xchg
cmp
add
out
sbb
xor
int3
push
inc
xor
or
int
cs
jg
ljmp
orb
sub
pop
mov
add
into
popa
hlt
in
fldt
out
fdivs
addr16
dec
es
adc
push
sbb
push
cwtl
sub
js
orl
fnstsw
out
mov
gs
mov
lcall
pop
push
cld
popf
jbe
pushf
enter
sbb
icebp
aam
jae
je
xchg
jp
xchg
mov
inc
sbb
stos
je
jl
or
xor
sub
mov
je
add
pusha
pop
inc
in
lret
jecxz
jnp
xchg
push
ss
cwtl
inc
mov
push
out
or
out
jne
jne
sbb
add
daa
aas
out
mov
icebp
xchg
jo
inc
jmp
icebp
mov
pop
mov
jne
sub
popf
stos
add
push
aad
scas
insl
and
add
push
jns
stos
ss
pop
popa
std
ret
jp
or
scas
push
xchg
sub
jo
mov
pop
test
sub
jb
popa
outsb
xchg
leave
mov
sub
jge
sbb
aad
insb
mov
cmpsl
sbb
inc
and
movsb
popf
cmc
inc
das
mov
in
outsl
xor
test
inc
push
jns
cmp
fsincos
ljmp
mov
push
ficoml
iret
inc
xchg
aad
popa
fidivrs
mov
adc
mov
cmp
repnz
ret
stos
adc
add
rclb
mov
mov
adc
sub
enter
pop
push
jle
insb
and
xchg
jge
test
cs
xchg
sub
xchg
pop
pop
or
mov
fs
repz
jno
out
jns
pop
leave
mov
pop
jne
jbe
dec
xor
rcrl
fdivrs
imul
arpl
shlb
in
loopne
adc
push
notl
lea
std
lcall
mov
lods
add
add
stc
fidivl
cmp
imul
popa
loopne
dec
mov
sbb
and
stos
fstps
and
dec
and
xchg
jne
fistps
enter
iret
test
rclb
xchg
jl
and
push
scas
clc
or
cmpsl
mov
mov
inc
call
pushf
cltd
cmp
cmpsl
jp
ret
loope
std
mov
incb
xchg
iret
mov
mov
shll
sub
lods
addr16
sbb
les
cmp
int3
push
xor
or
shll
jecxz
arpl
or
pushf
dec
mov
imul
xchg
xchg
mov
xor
pop
in
cmp
std
xchg
fcmovnb
fs
flds
lahf
fimuls
sbb
jo
jnp
adc
loop
test
sti
xchg
push
push
faddp
mov
push
mov
stc
arpl
mov
mov
push
sbb
movsb
lret
lods
js
adc
fisttpll
sbbl
mov
dec
jge
mov
mov
pop
roll
sub
into
pop
xor
lret
or
pop
cmp
cmp
add
cli
insl
pop
in
mov
adc
inc
jo
xor
adc
inc
mov
in
inc
shlb
mov
cmpsb
xor
pop
mov
mov
icebp
jne
das
and
inc
mov
sahf
pusha
cmpsb
loopne
jp
jp
imul
add
push
add
jl
sbb
push
push
std
adcb
inc
clc
lret
test
andb
pop
add
test
push
scas
dec
cmp
orl
mov
mov
ret
mov
inc
test
mov
ret
adc
subb
sbb
fcoml
and
sub
pushf
or
pusha
jmp
mov
mov
push
push
enter
cmp
jmp
jae
push
push
sahf
mov
adc
mov
xor
mov
push
imul
imul
pop
leave
xlat
push
sub
adc
es
cmp
inc
sbb
icebp
adc
xchg
add
cmp
cmp
sbb
xlat
push
mov
mov
imul
add
sub
es
jl
or
lock
or
aaa
outsl
and
sbb
mov
pxor
push
rcl
sbb
in
test
leave
lcall
in
fsubs
mov
pop
mul
sahf
incl
cmpsb
push
ja
mov
mov
subl
mov
movsl
js
mov
xchg
cmc
aaa
sub
jge
and
cmp
lcall
mov
xor
mov
mov
fildl
pop
outsb
les
sbb
adc
xor
xchg
out
cmc
lcall
arpl
je
ja
mov
adc
dec
out
xchg
mov
out
xor
adc
imul
jl
data16
imul
test
pop
xor
mov
pop
or
jo
aam
int3
adc
lods
or
xchg
push
mov
pusha
addl
mov
test
sub
or
inc
aaa
flds
in
aad
mov
stos
mov
mov
cltd
ljmp
add
add
pop
adc
xor
dec
mov
xor
jle
pusha
jae
or
mov
frstor
arpl
pop
or
cmpsb
stc
int
ret
mov
arpl
jb
cli
sbb
xor
pop
cwtl
jo
cmp
cltd
push
add
sti
inc
js
call
insl
popa
jmp
sbb
push
adc
push
iret
pop
testb
fdivrl
aaa
sbb
jnp
das
jae
pop
ljmp
pop
sbb
aas
out
sub
imul
sbb
xchg
mov
mov
cmp
inc
mov
aaa
outsb
mov
dec
mov
test
xor
or
enter
sbb
dec
icebp
xchg
pop
mov
inc
add
mov
aad
pop
add
lods
hlt
dec
lods
push
jb
add
cmpsl
push
mov
lods
jg
adc
fdivrl
out
loopne
repz
fnsave
aaa
lcall
jg
pop
lods
adc
pushf
les
data16
rep
nop
mov
xor
xchg
xchg
or
sbb
bound
push
aas
subl
cmp
fldt
dec
ljmp
out
out
repnz
fldenv
fs
xchg
ja
cmp
mov
aad
sub
shrl
aaa
loopne
je
jns
ja
mov
jg
insb
cltd
mov
mov
icebp
es
sbb
sbb
loop
cmp
or
pop
in
fstpt
filds
mov
mov
aad
sub
pop
sbb
mov
enter
cmpsb
out
jb
and
push
sub
pop
daa
sub
bound
loopne
inc
sub
inc
or
sbb
jp
test
clc
push
sbb
inc
lcall
out
inc
setge
xchg
sub
lret
mov
xchg
ret
mov
jl
stc
sub
or
jbe
push
das
push
jg
xor
push
cmp
sub
dec
add
pushf
lock
xchg
and
mov
pop
lea
adc
arpl
stc
lea
pop
add
inc
test
and
mov
xor
cli
cs
scas
outsb
cmp
inc
push
lss
sub
mov
call
jp
loope
or
mov
pop
sub
stos
out
ja
jb
js
mov
pop
and
sbb
and
jns
test
inc
dec
repz
xor
jb
cld
dec
rclb
mov
pop
dec
pop
dec
es
mov
xchg
sub
sub
rcl
stc
rorl
ret
pop
int3
lret
xor
js
movsb
sub
xor
mov
mov
repnz
outsb
cmp
lock
cs
loopne
mov
cmp
cmp
int
inc
ljmp
xchg
stos
cmp
inc
addb
loopne
lods
ret
mov
jp
ret
jmpw
loope
mov
jle
or
xchg
ja
adc
jle
shll
rcr
and
mov
inc
sbb
loop
mov
aas
ljmp
mov
sub
test
lea
or
scas
int
inc
cmp
je
inc
fldenv
push
ljmp
xor
adc
push
ret
in
xchg
shl
push
imul
inc
xchg
inc
xor
sbb
ljmp
mov
cmpsb
mov
sbb
iret
xlat
stc
pop
mov
test
das
sub
addb
mov
rcll
sbb
cmp
test
push
dec
xor
test
js
or
fs
mov
and
jmp
divl
call
popa
sub
scas
fisubrl
arpl
pop
cmp
xorb
test
add
test
jle
js
mov
sarl
pusha
mov
ret
popf
popa
ja
dec
in
je
out
push
or
jg
ss
movsb
adc
stc
mov
mov
push
ja
arpl
cwtl
popa
or
adc
mov
out
xor
adc
sbb
sbb
lds
loopne
cmp
xor
lret
xor
jne
repnz
xchg
inc
jle
test
leave
xchg
and
lahf
pop
and
ret
dec
xchg
cld
dec
push
or
dec
std
outsl
sub
mov
ljmp
imul
push
mov
and
xor
add
outsb
ror
arpl
cltd
inc
adc
outsb
push
adc
adc
mov
push
sbb
rcl
xchg
sbb
jne
pop
loopne
mov
lahf
idivb
cmp
xorl
mov
mov
mov
lock
cmpb
cmp
mov
dec
jmp
mov
inc
out
outsl
dec
out
test
jl
mov
mov
ffree
pop
inc
mov
or
in
jbe
lcall
es
lahf
stos
or
insl
dec
rolb
sbb
scas
push
movsl
sub
lods
aas
dec
rcrl
scas
and
int3
pusha
pop
insl
xchg
adc
ret
mov
divl
int3
mov
sub
cmp
inc
mov
jbe
movsl
xchg
dec
adc
subb
leave
xchg
lret
push
mov
pop
add
xchg
iret
jl
jno
dec
pop
dec
ljmp
inc
adc
xchg
mov
mov
fildll
popf
jl
mov
sub
and
lods
adc
push
or
sbb
imul
mov
scas
imul
cmp
xchg
dec
jnp
xor
mov
fs
pop
jae
out
icebp
insl
add
add
movsb
mov
int
dec
jecxz
fs
insb
sbb
mov
pop
hlt
stos
adcb
lret
aas
enter
cltd
aaa
mov
outsl
stc
sbb
enter
into
jge
cmp
fcompl
mov
enter
jge
or
sahf
push
xchg
pop
xor
mov
xchg
pop
loop
gs
divb
or
push
inc
adc
test
cld
imul
jne
jecxz
mov
ret
or
jb
cmpb
cmpsb
push
je
jo
shll
cmp
mov
pop
outsb
in
jg
sub
mov
pop
pop
aam
fdivl
data16
jb
and
mov
imul
cltd
cmpsl
lret
sub
push
xchg
ds
mov
dec
ficomps
js
dec
adc
add
sbb
dec
data16
scas
test
mov
les
mov
mov
mov
and
mov
push
jg
sub
jl
insl
jns
mov
mov
out
mov
in
sub
iret
dec
mov
lret
in
mov
arpl
push
xchg
pop
fimull
mov
fnstcw
mov
jecxz
shlb
add
rorl
ljmp
mov
ss
mov
cmp
mov
mov
ret
sub
push
jp
sbbb
bound
xchg
sarl
push
sarb
sbb
sub
adc
pop
les
pushl
push
push
sub
lret
sbb
jnp
out
jp
pop
sub
or
outsb
and
add
mov
repz
lcall
daa
dec
aad
sbb
and
add
sbb
sbb
mov
adc
cmpsl
mov
or
jnp
call
xor
mov
enter
xchg
mov
push
add
push
inc
roll
mov
clc
mov
sub
bound
ret
adc
inc
outsl
lds
inc
xchg
xorb
dec
out
sbb
loopne
sub
adc
adc
std
scas
insb
push
rcrl
mov
push
push
pop
add
jae
add
jl
xor
xchg
arpl
pusha
insl
inc
push
arpl
dec
and
decl
xor
jp
insl
jmp
out
xchg
xor
xchg
adc
test
loope
insl
mov
dec
movsb
negl
popa
clc
mulb
push
ret
sbb
aam
pop
jge
adc
dec
movsl
ret
adc
jnp
test
je
aaa
iret
ss
sahf
ss
sub
addr16
or
icebp
add
xchg
sub
push
testl
cmp
mov
rolb
shl
popf
out
lock
into
mov
lods
fldl
scas
dec
adc
xlat
dec
or
mov
sbb
xor
dec
xor
nop
sbb
loopne
pop
fndisi(8087
jge
iret
mov
mov
xorb
dec
pop
popf
bound
jp
fnsave
jne
push
addr16
sbb
adc
test
mov
push
xchg
gs
in
popa
jno
adc
imul
dec
pop
and
lds
jne
push
icebp
in
clc
push
inc
inc
and
jecxz
movb
out
shll
mov
sbb
xchg
lcall
movsb
out
xor
bound
sub
cmc
das
cmpsl
leave
mov
add
lock
rcrl
movsl
fs
popf
rcr
sbb
or
data16
aad
xchg
mov
push
jno
sbb
bound
xlat
pop
jno
loop
mov
xlat
sarl
sbbb
lret
hlt
push
push
pusha
xor
push
bound
rolb
xchg
or
rcrb
cld
rcrb
shlb
sbb
mov
add
lock
push
push
mov
and
pop
popf
mov
call
pop
sbb
jp
lcall
cmp
add
cmc
mov
pop
inc
cld
cmp
outsl
sub
sub
insl
pop
xor
jb
xor
ret
add
repnz
push
adc
ljmp
test
pop
ja
js
jge
repnz
add
pop
jb,pt
leave
mov
stos
icebp
idivl
push
sti
jb
pop
lods
cmp
rcr
fsts
pop
ror
push
mov
shl
hlt
sti
or
add
jns
mov
test
fstl
mov
jnp
mov
pushf
xchg
lret
out
mov
out
jmp
push
cmp
fld
mov
movsl
dec
cwtl
cmpsl
lcall
xchg
loope
add
jmp
mov
pop
push
rcl
xchg
ret
and
insb
movsl
add
dec
cwtl
mov
divl
fs
sub
rcr
mov
and
stos
test
push
int
lahf
dec
xor
js
cmp
xchg
stos
lahf
jecxz
push
int
cli
je
aaa
mov
sub
loop
dec
add
repnz
push
cmpsb
daa
insb
mov
jmp
push
mov
movsb
dec
sbb
xchg
adc
mov
arpl
jae
jecxz
cmc
cmp
pop
cmp
divl
imul
jne
pop
fisubrl
sub
inc
cld
jl
jno
pushf
loope
mov
mov
or
lods
pop
popf
xchg
fidivrl
sub
mov
rorl
mov
dec
adc
xor
es
cmp
das
xchg
push
mov
lret
daa
bound
sub
imul
andb
and
mov
lock
imul
jne
adc
mov
shll
mov
jns
pop
xchg
jl
inc
mov
in
ss
and
sbb
les
bound
test
out
push
mov
xor
pop
sbb
jo
mov
insb
xorb
cmp
sub
int3
sbb
jae
xor
inc
fildl
sbb
mov
js
ja
xor
std
jmp
mov
ss
scas
lahf
popa
mov
je
adc
xchg
rcrl
lods
fstps
popa
dec
es
inc
inc
sub
xor
xchg
call
mov
ljmp
sti
mov
test
movsb
jl
cmp
push
cmp
mov
stos
in
stc
inc
je
push
pop
add
cltd
fwait
ss
mov
test
mov
xchg
xor
dec
jmp
clc
mov
xchg
mov
stos
rcll
mov
or
adc
mov
and
pop
aam
ret
test
pop
dec
arpl
fisubrl
enter
enter
dec
cmp
push
int
scas
cmc
and
sbb
popl
popa
daa
push
jp
push
add
jo
pop
mov
pcmpeqb
mov
repnz
push
xchg
leave
add
adc
cmp
push
cltd
movsb
push
std
ret
insb
sub
sub
lret
xchg
push
imul
push
out
xor
ret
xor
ljmp
in
cmpb
inc
push
mov
push
xchg
icebp
mov
shrb
inc
popa
inc
or
movsb
push
xor
inc
push
sub
pop
pop
in
sahf
mov
sbb
ss
orl
pop
xchg
loope
add
mov
dec
popa
push
fwait
mov
fstpl
mov
mov
test
mov
enter
fs
sbb
loopne
insb
adc
add
cmpsb
cmpsl
sahf
rolb
outsl
jmp
test
mov
fmul
jnp
jmp
or
scas
and
cld
xchg
mov
ljmp
test
add
dec
push
and
movsb
pop
sbb
fildl
aas
jecxz
data16
das
jno
mov
enter
fnsave
pop
lret
andb
int
or
in
dec
out
je
push
pop
mov
cmp
je
adc
jecxz
pop
add
and
mov
or
sbb
mov
fcomip
xchg
adc
xchg
push
lods
jno
xor
scas
and
push
xchg
cmp
subl
in
pop
fs
scas
or
loop
sub
fdiv
lods
add
popa
sbb
and
into
pop
insl
inc
sti
mov
xchg
sbbb
test
sub
bound
insl
push
clc
mov
movsb
cld
dec
mov
das
and
ret
rol
lea
mov
dec
es
fwait
jmp
lahf
dec
in
jge
jge
pop
movsb
mov
sbb
fimull
xlat
sub
mov
cmp
push
std
cmp
sbb
mov
arpl
push
push
aad
push
scas
sub
rcl
loop
jns
inc
loop
lods
lea
aaa
pop
inc
orl
or
jmp
pop
rolb
sti
sbb
call
cmp
pop
cmpsb
cwtl
fcomps
add
pop
imul
jne
cmpsb
sub
jo
insb
pop
sbb
xchg
sbb
xlat
adc
cltd
and
or
out
and
adc
aaa
insb
lods
jmp
hlt
sub
pop
and
xchg
mov
hlt
enter
sahf
mov
div
xor
inc
idivl
push
mov
inc
in
mov
fsubs
out
pusha
lret
fidivrl
fwait
mov
pop
cs
cmp
or
les
or
inc
daa
mov
enter
xchg
fcoml
fcomi
out
pop
enter
mov
xchg
cld
and
lea
ficompl
xor
ja
jecxz
mov
cmpsl
clc
dec
cmp
sahf
icebp
mov
xor
dec
mov
scas
aam
arpl
mov
xor
lret
pop
rclb
xchg
cmpsb
mov
inc
fldenv
xchg
lods
lds
or
sbb
shrl
xlat
jno
cwtl
sub
add
hlt
sub
and
icebp
pop
pop
cwtl
testl
test
gs
pop
sbb
pop
fs
xor
in
cmp
add
andl
xlat
mov
outsl
in
sub
lods
mov
inc
ds
incl
int
notl
adc
sub
mov
inc
jg
jns
mov
adc
loope
jo
cmp
cli
stos
das
fcmovnbe
and
fistpll
xor
adc
xchg
lods
jne
fldt
lds
or
or
dec
sub
fwait
sub
pop
addb
test
loop
and
lret
mov
add
jmp
jmp
call
movsl
lea
inc
or
cmp
into
psadbw
push
es
xor
test
xchg
adc
mov
jno
sbb
pop
xchg
movsb
aad
inc
or
sub
push
push
jge
mov
pop
out
adc
pop
jb
push
inc
shll
mov
push
fs
xchg
cmp
adc
outsb
sub
push
dec
loopne
out
sbb
stos
pcmpeqb
xchg
push
jns
in
imul
adc
rcrl
jmp
je
xchg
push
out
sbbl
mov
inc
mov
and
push
into
pop
inc
popa
imul
lea
sbb
aas
sub
jno
mov
arpl
jns
mov
push
mov
insb
mov
jo
in
cmp
sahf
lret
jmp
call
aas
test
mov
xchg
push
pop
adc
jmp
dec
loopne
int
test
cmp
xchg
int
int3
les
sbbl
aam
sub
mov
test
fisubrs
lds
sub
stos
xchg
jl
and
shrb
adc
lret
test
pop
in
mov
or
sub
call
in
fcomps
push
xor
fcompl
mov
adc
aad
cmp
ret
dec
test
cmp
clc
mov
lret
jns
enter
mov
test
add
inc
sub
fsubl
adc
inc
adc
test
xchg
fucompp
iret
lds
movsl
test
rolb
ds
xor
ss
cmpsb
xchg
dec
dec
dec
dec
sbb
sarl
das
pop
jne
mov
ret
sub
in
inc
popa
icebp
mov
mov
adc
mov
cmp
jp
push
in
loope
xchg
pop
and
sbb
shll
dec
push
sbb
inc
inc
xlat
push
mov
pop
adc
subb
pop
or
cmp
int3
orb
mov
ficompl
or
adcl
cltd
ret
cmp
pop
cld
shlb
js
xchg
inc
subl
push
mov
lret
leave
jp
iret
adc
lock
sbb
sub
pop
add
idivb
jne
in
decb
push
push
jns
icebp
aaa
mov
dec
jmp
fnstcw
out
xchg
hlt
xchg
in
add
cltd
aad
jne
add
mov
out
fs
leave
sub
mov
mov
sbb
sti
dec
loope
mov
dec
or
mov
mov
cmp
xchg
mov
popl
iret
repnz
int3
int
push
cmc
sbb
adc
cmp
inc
ds
or
push
lods
fdiv
aas
sub
and
xchg
inc
cmpsl
sbb
push
cli
pop
loope
mov
push
repz
jmp
adc
outsb
data16
xlat
out
aad
push
jle
sub
mov
and
fucomip
pop
icebp
add
sbb
adc
cmpsb
dec
mov
fstps
popf
lods
lods
mov
iret
call
dec
mov
in
hlt
jb
mov
cmp
dec
js
sbb
mov
or
mov
mov
pop
cmp
xchg
shrb
push
rcrl
mov
fbld
in
or
subl
stos
and
sbb
push
popf
sbb
jae
pop
mov
xor
sahf
ret
in
dec
add
cs
push
ja
adc
repz
das
lret
adc
push
test
xor
jl
imul
add
test
push
cld
aaa
and
dec
test
aam
aaa
pop
sbb
xorb
xchg
mov
addr16
cwtl
add
mov
movsb
jne
jbe
call
push
jbe
stos
cli
pusha
and
inc
test
imul
lds
push
jbe
fldt
mov
jmp
pusha
in
testl
sub
sbb
jnp
xchg
cs
cld
xchg
fld1
xor
jp
adc
bound
in
cmp
daa
filds
jg
add
dec
jae
dec
stc
movsl
inc
stos
scas
ja
dec
dec
lcall
cmp
xchg
popf
sub
add
cmp
scas
stos
cmp
insb
push
sarb
dec
mov
hlt
xchg
hlt
out
cmp
mov
mov
jbe
or
xor
test
cmp
and
cmpsl
cmp
and
mov
jnp
jle
or
cwtl
mov
movsb
fnstcw
mov
ficompl
dec
mov
xor
or
add
or
std
push
sbb
pop
pushf
fcomps
into
jae
push
mov
xchg
inc
int3
pop
or
negb
aam
shlb
jp
fs
lds
jge
mov
arpl
lret
push
mov
jno
xchg
jns
xchg
xchg
pop
cld
push
popa
and
fsubl
pop
mov
jb
sub
push
in
into
adc
xor
lods
lea
mov
jnp
in
pop
jp
xchg
sbbb
test
fwait
mov
xchg
cwtl
push
inc
inc
or
into
pop
iret
scas
inc
jg
inc
mov
push
sub
nop
or
push
cmp
insl
popf
cld
cmp
jae
mov
jne
xchg
cld
cltd
es
aam
push
pop
cmpsb
les
add
adc
rolb
xchg
or
pop
cmp
cwtl
sbb
ret
xchg
jge
adc
daa
or
cltd
je
adc
ret
mov
inc
loopne
mov
sub
fs
cmpsl
shlb
stos
mov
mulb
mov
add
aaa
sub
inc
cld
sub
dec
pop
xchg
mov
arpl
xor
mov
pushf
cmp
add
icebp
inc
movsl
sub
incl
xlat
pop
mov
xor
repnz
shll
lods
popf
mov
xchg
movsl
or
mov
test
test
dec
pop
test
add
or
mov
inc
xchg
addr16
xchg
mov
push
pop
mov
jo
add
lcall
xor
pop
xor
out
divl
jbe
por
data16
stos
lock
inc
out
dec
adc
jnp
mov
test
ret
jae
and
add
push
subb
or
ds
cmp
pushf
mov
or
ret
loope
mov
mov
lahf
cmpb
sti
mov
jns
mov
inc
in
sbb
sbbl
fcomi
lahf
mov
mov
push
fists
int3
inc
xor
fsubl
sahf
xchg
popl
sub
sbb
movsb
ljmp
jno
js
sbb
xor
test
stos
mov
mov
pop
or
adc
sub
out
jg
dec
imulb
xchg
shll
fnstsw
or
add
inc
ja
mov
or
pop
push
cmp
inc
hlt
mov
into
and
pop
inc
inc
mov
in
or
add
sbb
pop
pop
cwtl
iret
nop
dec
mov
add
cmp
mov
add
jne
out
add
adc
ret
jno
or
repz
dec
sub
out
jmp
mov
call
jno
jge
adc
insl
mov
addr16
mov
xchg
es
in
add
outsl
nop
sbb
fsubs
push
xchg
bound
movsb
rclb
sbb
push
cwtl
and
test
icebp
fbld
in
sbb
in
push
stos
test
pushf
inc
adc
mov
mov
sbb
push
cmpsb
int3
push
xchg
or
cmpsl
sbb
add
sahf
stc
or
stc
leave
push
cmp
je
sbb
imul
mov
call
mov
push
adc
inc
mov
adc
xchg
icebp
xchg
mov
jmp
push
loopne
imulb
in
mov
into
pop
iret
add
jb
divl
lods
divl
and
jge
aaa
ss
dec
xchg
add
xchg
adc
fcomi
rorl
aad
into
pop
dec
fmull
or
daa
hlt
fwait
cmp
xchg
cs
mov
shrl
rorl
lea
repnz
xchg
jnp
mov
in
leave
sub
mov
lcall
sub
mov
in
jge
rcrl
sub
mov
shl
adc
dec
sub
push
imul
jns
sbb
cld
dec
jg
inc
or
aad
movsb
aad
lahf
cmp
decb
jp
pop
or
mov
aas
pop
push
es
push
push
cld
mov
sbb
out
xchg
cs
hlt
pop
mov
inc
mov
jns
mov
inc
daa
jmp
outsl
ljmp
ret
rorb
rcrl
enter
aaa
sub
jmp
inc
andl
iret
lods
jne
in
mov
arpl
dec
mov
test
dec
mov
xlat
or
out
mov
mov
loope
pop
jp
les
adc
pop
sub
addr16
popf
and
repz
outsl
repnz
pop
aad
push
lahf
xor
xorb
shlb
into
xor
adc
xchg
jge
jns
sbb
icebp
lret
imull
or
push
add
push
das
pop
mov
xchg
out
jns
or
lods
jg
inc
outsb
loop
and
sub
sahf
dec
clc
out
xchg
pop
mov
or
jp
les
sbb
cmp
and
ror
xor
int3
cld
jno
sub
add
and
adc
fcmovnbe
mov
add
add
push
or
cmp
lock
in
ja
repnz
and
jo
ljmp
and
div
xorl
cmpsb
sti
sub
mov
cld
outsb
loope
cpuid
es
push
cmpb
ret
out
mov
dec
and
mov
addr16
adc
fimull
push
call
mov
cld
pop
dec
out
dec
shll
mov
fwait
adc
cltd
dec
movsl
mulb
xor
lock
sub
and
jge
inc
out
sub
into
and
sti
cmpsb
push
pushf
sub
xchg
dec
std
in
imul
mov
mov
push
out
push
or
or
sbb
jno
insb
jae
in
movsl
movsl
or
aad
mov
dec
jbe
cli
mov
je
sbb
adc
loope
push
imull
rorb
mov
adc
leave
push
sbb
sbb
cmpsl
sub
add
cld
push
sub
and
jbe
in
stos
sar
jo
dec
movsl
pop
pop
rcrl
jge
add
emms
shll
aas
push
xchg
dec
les
sub
jge
xchg
xchg
pop
ja
data16
int
inc
mov
cmp
jle
push
jbe
in
shll
pop
lcall
cli
notl
daa
inc
pop
mov
xchg
lods
and
xchg
add
loop
test
outsb
ret
loop
jmp
xor
add
aaa
jnp
or
cs
out
loop
stc
sbb
cmp
out
call
stos
xlat
add
push
mov
xor
out
inc
outsb
sbb
mov
lock
inc
std
pop
ret
or
lret
repnz
popf
lds
je
lret
xchg
mov
cmpsb
or
inc
pop
das
insl
xor
adc
gs
dec
outsl
push
pusha
mov
or
les
jae
fdivrp
aam
mov
mov
daa
pushf
cmp
mov
pop
addr16
xchg
mov
into
fldl
pop
sbb
mov
cli
sub
xchg
sahf
and
jns
fstpt
clc
dec
call
pandn
bnd
jmp
add
aas
inc
loopne
jge
and
call
scas
subb
mov
xchg
mov
sbb
out
mov
ret
pop
pop
scas
bound
add
mov
xchg
fdivrl
adc
xor
fsubrl
cmp
inc
xchg
stos
clc
mov
xchg
stc
pop
add
push
pushf
jno
shll
mov
shrl
outsl
repz
push
sub
mov
rdpmc
cmp
jns
or
ljmp
jnp
sub
aaa
insl
cmp
cmpsl
pushf
inc
jecxz
sbb
xchg
mov
or
add
sbb
and
xor
sub
adc
pop
and
sbb
mov
pop
mov
stos
ret
scas
mov
loope
cmp
data16
mov
adc
sbb
and
hlt
sarl
cmp
mov
lahf
jno
out
adc
cltd
sub
lret
stos
lcall
mov
in
out
jo
inc
add
sbb
pop
hlt
or
xor
js
lcall
mov
xorl
inc
jb
xor
nop
inc
popf
cld
pop
ss
aas
subb
xor
lcall
mov
movsb
lds
in
bound
adc
cwtl
rcrb
stc
adc
pop
repz
outsl
insb
push
jmp
fbstp
insb
cmc
out
add
aas
popa
insl
cli
sbbb
sbbl
push
daa
mov
cmp
mov
lea
mov
pop
stos
popa
sub
adc
pop
pushf
lret
lret
out
stos
jae
cmp
mov
sbb
mov
inc
jp
jmp
lcall
ret
divb
sahf
mov
jno
sub
in
pop
jbe
sub
push
xor
fists
aas
xchg
mov
flds
xchg
push
scas
adc
lret
adc
pop
pop
gs
push
mov
les
jg
sub
mov
repnz
inc
adc
or
inc
lods
mov
enter
enter
pop
subb
sbb
dec
sub
mov
or
icebp
gs
adc
in
mov
push
js
add
and
test
clc
xor
scas
adc
clc
adc
aaa
jae
sbb
imul
and
add
movsl
and
add
inc
xlat
icebp
mov
loop
cwtl
movsl
out
sub
and
and
mov
add
es
xor
mov
add
in
pop
add
push
cmp
mov
int
scas
xchg
sbb
adc
mov
sub
shrb
jo
lods
mov
leave
cs
push
mov
jp
mov
pop
les
aam
push
sub
cmpsb
mov
mov
push
or
in
push
pop
hlt
cli
in
sub
push
lahf
xchg
mov
lds
dec
xchg
and
jmp
pop
cmp
push
ss
aaa
cmp
arpl
shrl
pop
jnp
jle
jmp
clc
xchg
mov
mov
fwait
mov
or
sub
repnz
push
lock
fsubrp
inc
mov
xchg
shll
adc
add
mov
jle
xorl
ds
xor
shrl
cli
xchg
dec
pusha
xchg
mov
jl
cmpsl
mov
fimull
or
test
mov
outsb
je
jg
ret
jl
into
ficompl
je
pop
add
inc
unpcklps
inc
xchg
in
xor
andl
push
sbb
das
enter
iret
enter
out
ret
scas
ljmp
ljmp
sub
cmc
push
aas
lret
adc
dec
jge,pt
push
lcall
popa
inc
push
addr16
adc
stc
mov
aad
fwait
aad
out
sub
aaa
mov
xchg
xchg
inc
loopne
call
jnp
push
je
retw
pop
add
stos
sahf
lahf
mov
aaa
and
je
mov
clc
stc
scas
scas
rorl
in
aas
push
sbb
mov
cmp
inc
xor
lods
mov
mov
fidivs
cmpsl
cli
jo
fs
cmp
sbb
lods
dec
pop
jb
subl
lret
xor
jo
or
lea
push
jbe
pop
lock
fmuls
xchg
mov
lret
faddl
sub
mov
test
fldenv
adc
rcrb
jnp
cli
test
mov
out
cmp
out
imul
stos
push
inc
ljmp
mov
dec
or
push
mov
cwtl
pop
sahf
add
jp
adc
fdiv
scas
inc
push
xchg
mov
in
cmp
push
es
pop
lds
addr16
push
test
jl
xor
sub
mov
in
int3
adc
out
test
add
xchg
adcb
push
pop
test
pop
and
lods
lret
xchg
lods
repz
aaa
xchg
rclb
loop
inc
ror
push
rcll
mov
inc
xchg
out
and
pop
xchg
pushf
jg
clc
enter
stos
pop
xchg
push
sub
add
cmc
push
mov
repnz
lock
xchg
leave
in
dec
xchg
ljmp
xchg
add
mov
xchg
xor
add
stos
xchg
fisttps
inc
aam
mov
data16
in
inc
jnp
pusha
cmp
adc
aad
inc
cmp
cmpsl
push
loop
aam
out
sub
adc
test
ljmp
les
push
gs
sarb
mov
xchg
inc
mov
psllw
addr16
mov
or
mov
xchg
in
data16
mov
mov
and
imul
sti
mov
sub
je
movsl
insb
js
pop
scas
imul
xchg
pop
or
jecxz
sub
xchg
jp
pop
ljmp
xchg
jle
test
daa
loop
mov
mov
push
pop
jl
shll
mov
lods
mov
std
pop
xorb
aas
clc
les
jne
divl
pop
lcall
dec
lods
push
je
push
jmp
outsl
ljmp
push
add
pop
cltd
icebp
stc
enter
shll
cld
sbb
sbb
mov
out
adc
stos
cld
lret
inc
mov
add
mov
push
hlt
push
mov
and
addr16
fsts
sbb
lds
popl
loope
sbb
pop
xchg
jb
xor
in
dec
scas
pop
imul
mov
cmp
or
mov
ljmp
mov
mov
dec
gs
aas
sbb
mov
dec
sub
sahf
pop
fs
mov
movsb
adc
in
dec
lods
test
cli
iret
mov
pushf
lea
in
pop
leave
and
cmp
xor
jl
xchg
xchg
lret
xchg
arpl
pop
inc
mov
add
mov
or
std
pop
jle
xor
lea
inc
daa
popw
cmp
ss
sbb
out
jp
adc
push
out
cmp
test
outsl
dec
fisubrs
outsl
sub
mov
sub
cmpsl
shlb
pop
push
inc
adc
mov
ret
ljmp
push
out
data16
data16
es
fdivl
gs
dec
pop
into
cmpsl
xchg
inc
xchg
nop
fwait
stc
pop
add
push
xor
adc
lcall
sbb
pop
addr16
cwtl
pop
cmpsb
cmp
cs
mov
mov
sbb
les
sbb
mov
repz
lcall
jp
insb
dec
push
dec
jns
xorb
insl
movb
adcb
adc
loop
push
inc
sbb
sbb
add
push
push
je
test
dec
xchg
pop
jecxz
ljmp
call
and
arpl
call
cltd
mov
filds
lds
dec
sahf
sbb
out
call
push
mov
scas
in
push
lret
push
ss
rcr
test
xchg
or
sub
mov
jmp
nop
in
shlb
pusha
pop
adc
add
ret
lahf
mov
test
mov
or
stc
dec
icebp
popf
push
scas
mov
and
out
xor
xchg
sarb
dec
jbe
sti
mov
out
repnz
lcall
nop
push
fcoml
in
push
cmp
jg
xchg
xchg
push
dec
in
adc
sbb
add
scas
lahf
cmp
insb
xor
xor
aad
sbb
fidivl
stc
outsl
cli
jne
fstl
movsb
ret
outsl
aam
loopne
sbb
dec
cmpsl
dec
int3
std
jno
stos
fsts
jbe
mov
mov
sbb
out
jl
mov
jg
pop
adc
js
stc
mov
sti
sbb
and
cld
sbb
insb
test
mov
xor
and
mov
mov
mov
cli
dec
stos
call
jae
jge
jmp
imul
push
pop
or
cmp
inc
subb
xchg
lea
repnz
sub
stos
clc
sahf
dec
ret
add
sbb
cli
lods
dec
jle
push
mov
insb
loope
mov
jbe
fdivrl
fldt
lret
adc
gs
or
mov
sbbl
inc
cmpsl
dec
das
imul
test
inc
rorl
cmp
jp
outsl
test
cli
test
imul
xor
xchg
xchg
test
pop
push
lods
iret
outsl
xchg
cltd
xchg
adc
inc
jnp
or
and
adc
dec
cld
mov
pop
cs
into
pop
push
in
leave
pushf
push
dec
inc
loop
dec
xor
push
stos
cmp
jno
into
pop
mov
outsb
sarb
nop
sbbl
inc
stc
inc
fdivr
neg
jae
jge
adc
imul
adc
xchg
sbb
add
lret
mov
mov
popa
dec
leave
jg
out
leave
or
inc
sbb
sbbb
mov
push
and
jne
xchg
out
pop
mov
and
imul
lea
push
iret
sbb
pop
add
mov
cmp
call
in
mov
pop
addr16
imul
pop
cmpsb
test
data16
int
rcrl
and
sbb
jo
into
sbb
ds
sub
ds
pop
pop
sahf
aas
mov
dec
imul
andl
mov
inc
ljmp
jl
sbb
popa
int
add
push
cltd
push
push
sbb
ret
mov
imul
out
out
mov
mov
idivl
ja
lcall
stos
stos
cld
adc
xor
xchg
and
and
push
or
or
mov
cmc
push
pusha
sbb
xchg
adc
sub
mov
jns
adc
add
jne
lods
and
test
push
dec
fnstcw
mov
mov
push
jecxz
dec
mov
int
lods
xlat
insl
shlb
dec
rcrl
in
xchg
or
repz
xor
cli
xchg
nop
cmpsb
loopne
in
or
call
lahf
jb
lds
ljmp
imul
arpl
call
daa
or
insl
filds
dec
and
push
cli
out
mov
xchg
push
xorl
sub
mov
and
mov
mov
and
test
repz
js
aad
fistps
xor
pop
cmpsb
inc
nop
int
adc
mov
dec
call
dec
xchg
push
and
in
mov
pop
std
fadd
jg
sbb
insl
xor
pop
test
mov
push
mov
mov
imul
in
scas
cmp
scas
cwtl
dec
and
xor
jg
jne
hlt
mov
cmp
xor
inc
cli
ljmp
ja
stc
shlb
repnz
lods
prefetch
in
sahf
pop
xor
and
lcall
sbb
jb
mov
clc
jmp
stos
inc
sub
jl
mov
nop
add
stos
mov
xor
lods
mov
add
sub
push
int
lret
fs
lahf
mov
ficompl
or
faddl
xchg
int3
adcb
add
scas
add
int3
scas
clc
xor
xor
test
mov
mov
fadd
lods
out
loop
sbb
xchg
jmp
cmpsl
mov
sbb
mov
out
aad
in
jo
stos
std
movsl
ljmp
das
xor
subl
mov
in
jg
mov
sbb
cmpsl
pop
inc
push
xchg
or
pop
mov
cmp
clc
lret
aam
sbb
shlb
pop
xor
not
xor
and
dec
inc
mov
xchg
mov
dec
stc
daa
push
jae
xor
mov
push
leave
mov
cmp
js
popf
mov
inc
lods
mov
leave
jbe
in
xchg
es
in
ror
icebp
fs
sub
jnp
pop
cmp
mov
outsl
jb
dec
mov
dec
stos
pop
test
not
cmp
push
shl
std
sbb
inc
popa
adc
lret
aas
mov
cld
cmp
inc
adc
mov
jl
push
das
sub
push
or
pop
loop
out
in
stc
test
xor
js
cmpsl
in
nop
sub
cmpsb
fdivrl
sarl
lea
jb
sbbl
dec
mov
xchg
outsl
lea
movsb
sti
xorl
je
cmp
loop
gs
xchg
jl
imul
lock
mov
pop
and
inc
dec
loop
and
lcall
and
jg
ja
fstpl
ljmp
or
xor
movsb
pop
fdivrs
push
mov
or
mov
or
insb
pop
push
ret
into
aas
aas
imul
pop
mov
das
icebp
rcrb
lret
sub
or
mov
loopne
lock
out
arpl
adc
pop
push
mov
in
pop
in
cmp
out
icebp
and
scas
dec
and
and
ret
dec
int
hlt
cmp
pop
dec
mov
push
push
cmp
inc
out
push
lret
xchg
jo
hlt
pusha
inc
pop
xchg
jo
out
add
jae
jae
test
addb
xor
bound
inc
lods
lahf
dec
mov
lods
pop
pop
jae
or
in
and
fldl
ljmp
shrb
sbb
sub
jnp
int
sub
push
cmp
add
sti
sub
movsl
movsl
scas
jge
ret
xor
js
adc
mov
icebp
lods
jne
jg
adc
mov
mov
mov
arpl
adc
insl
es
loop
adc
dec
add
std
jb
shl
mov
pop
imul
repnz
jns
sbb
mov
or
sub
mov
inc
xchg
xchg
adc
push
aaa
add
dec
out
sbb
dec
push
loope
pushf
xor
pop
mov
aaa
jge
add
test
cmp
imul
subl
mov
repz
xor
std
or
rcrl
jno
xchg
loop
add
xchg
rorl
or
mov
adc
in
addr16
call
push
xlat
loop
stc
jo
test
jecxz
addl
insl
in
xlat
aam
repnz
int3
cmc
jne
sbb
cmc
cmp
sbb
movsb
dec
rorl
mov
pop
cmp
pop
push
out
pop
push
xorb
and
and
xchg
push
outsl
int
test
insb
dec
mov
dec
and
cmp
aad
sbb
shrb
cs
ja
dec
jne
pop
aaa
xor
adc
and
xor
fcoml
enter
popa
aaa
sti
out
jno
mov
sbb
mov
sbb
gs
jmp
stos
pop
inc
aad
sbb
mulb
xorb
cltd
aam
sti
loopne
xchg
cs
jns
adc
cli
push
mov
jle
mulps
dec
inc
dec
bound
sub
stc
mov
insl
cmp
leave
pop
in
xor
add
sub
mov
cmc
popa
cmp
loop
cmp
mov
mov
xor
mov
loopne
xchg
pop
pop
or
rcrb
add
lret
mov
cwtl
je
or
pop
jo
dec
int
sahf
and
rclb
lret
jne
lds
jb
pop
jo
inc
loop
ficoms
jle
scas
or
loopne
clc
sub
cmp
mov
dec
jmp
push
sub
push
daa
mov
jg
je
bound
xchg
xor
ljmp
imul
mov
or
sub
dec
xchg
cmp
jb
ss
sub
ja
inc
inc
pusha
jbe
add
and
xor
or
xchg
mov
or
sub
xor
out
lret
jg
jnp
jle
movsb
cs
es
sub
out
cwtl
push
call
out
or
xor
pop
xor
dec
pop
shrb
lcall
roll
fnstenv
pop
pop
pop
or
mov
add
scas
inc
mov
lds
sub
test
test
daa
sub
dec
pop
lret
cmp
mov
dec
inc
int3
repnz
pop
test
pop
out
pop
sbb
test
or
aad
jno
rcrl
ss
xlat
sub
and
or
sbb
andb
in
mov
dec
sub
xchg
insb
imul
fidivrs
dec
mov
int
or
and
add
xor
push
inc
push
cld
daa
adc
es
cmp
inc
aas
pop
sub
push
fiaddl
gs
xor
fisubrl
jmp
jp
mov
lea
cmc
lods
push
xchg
aam
fimull
aas
push
xchg
jge
sub
pop
adc
fiadds
lret
shlb
shll
js
and
dec
sbb
mov
push
ror
fwait
jmp
cmp
push
cmp
mov
in
ljmp
push
les
sub
nop
xchg
sbb
pushf
jge
sbb
rorb
out
stc
out
icebp
xchg
repz
xchg
cld
xor
call
shl
sbb
mov
and
rorl
push
mov
cwtl
mov
push
enter
fisubrs
xor
xchg
loopne
sub
fwait
push
data16
sub
sbb
mov
in
inc
inc
push
int
add
sub
mov
dec
xorb
push
fbld
cld
pop
jb
jmp
mul
loopne
jb
shr
jecxz
pop
inc
mov
pop
sahf
mov
pop
mov
aam
cmpsl
out
sub
push
mov
mov
fld1
insl
push
ds
adc
dec
addb
mov
sbb
decb
das
mov
movsl
mov
jl
jle
jl
scas
pop
cs
imul
sbb
aaa
imul
aam
arpl
adc
ja
xor
and
sahf
popa
mov
and
clc
push
andb
xor
adc
fnstsw
dec
fldl
movsl
push
pop
int3
arpl
scas
mov
push
fnstcw
testl
push
in
int3
jae
rcrb
and
sbb
rorb
int
ds
pusha
popf
xor
cmp
out
mov
pop
in
xor
hlt
xor
pop
dec
int
jbe
xchg
fisubrl
shrl
or
insl
inc
mov
mov
gs
in
inc
lahf
aas
jecxz
fidivl
fstpl
iret
jns
stc
mov
cmp
jle
ss
jns
aad
rolb
frstor
shll
add
gs
pop
lea
mov
mov
int
rorl
nop
sub
pop
pushf
xor
mov
or
fs
lds
or
mov
icebp
pop
jl
dec
or
pop
xor
mov
sbb
call
mov
cmp
popf
shlb
mov
lods
lock
push
in
add
or
or
mov
or
push
rclb
sub
pop
pop
push
mov
push
enter
loopne
add
mov
mov
shll
dec
ret
add
pop
sbb
aaa
push
inc
cli
push
xchg
cmp
stos
sub
or
cltd
inc
jp
jmp
sti
mov
aad
push
or
push
rcl
or
mov
mov
xchg
sbb
mov
std
shufps
or
pop
aaa
adc
mov
les
gs
pop
insl
and
cmp
movsl
mov
xchg
jae
push
xor
sarl
insb
fstpt
les
sub
rcl
jns
aad
sbb
lret
and
gs
jp
add
cmpsb
out
cmp
lret
or
cmp
sbb
movsb
jg
into
push
roll
mov
jo
adc
scas
xor
clc
lea
nop
mov
scas
mov
xchg
xchg
lcall
xchg
dec
scas
or
cmp
les
stos
mov
testb
loopne
sti
mov
or
outsl
in
ret
push
dec
test
xchg
add
jb
stos
iret
push
adc
mov
mov
and
pop
insb
loope
lea
scas
and
cmp
jecxz
out
fldt
std
sub
jae
iret
popl
mull
xchg
add
cwtl
aaa
mov
or
and
sbb
cs
fbstp
and
sub
cmp
xchg
mull
gs
pop
call
xchg
sbb
pop
jae
in
in
stc
adc
mov
mov
das
sub
dec
icebp
push
inc
lahf
das
lods
cwtl
pop
pop
movsl
cmc
sbb
inc
sbb
xchg
jmp
push
ljmp
insl
stc
pop
mov
shl
sbbb
pushf
xchg
pop
xor
push
out
cmp
inc
push
imul
sbb
addr16
sbb
cmp
imul
scas
sub
mov
jle
xor
data16
push
xor
mov
xlat
mov
jnp
dec
xchg
xchg
jns
pop
loop
push
add
or
jnp
mov
fwait
shl
js
mov
repnz
cmpsl
popa
shrb
sbb
fadds
rcrl
ret
repz
out
fnstenv
xchg
jae
out
lea
mov
mov
xlat
pop
push
inc
sbbl
imul
in
dec
adc
int3
push
cld
je
jecxz
pop
cmp
add
dec
adc
fs
stos
add
jecxz
stos
aad
mov
pop
mov
clc
fdivl
lahf
push
add
negb
cmc
imul
mov
push
aas
cmp
push
cmp
test
mov
loop
sbb
orb
out
dec
mov
pop
jo
mov
or
shll
aas
jo
outsb
xchg
pop
mov
sbb
addr16
in
mov
push
xor
dec
call
subl
je
outsb
xchg
sahf
ror
push
rolb
jge
in
push
xlat
aam
sub
in
inc
popf
cmp
repnz
cwtl
add
test
or
sub
mov
xchg
cwtl
push
je
push
mov
loope
jbe
fs
div
arpl
jo
inc
mov
mov
insb
sarb
push
sub
jecxz
xchg
xor
push
mov
pusha
add
xor
add
js
sub
and
cmp
xor
out
mov
mov
adc
mov
inc
jbe
popa
adc
mov
xor
pop
jnp
sti
repz
or
xchg
xlat
mov
lds
sahf
pusha
je
dec
clc
xchg
xlat
xlat
sub
dec
sub
into
cld
cwtl
mov
test
pop
rcrb
test
add
clc
mov
inc
and
lods
pop
sbb
sbb
lea
sbb
frstor
movsl
add
jno
pop
aad
sahf
mov
aad
inc
rcll
call
fistps
jbe
pop
and
js
xchg
lds
mov
inc
movsb
and
inc
clc
popf
mov
push
out
movsl
fnsave
sub
or
push
cmp
dec
test
outsl
jp
gs
mov
imul
cwtl
jb
aad
push
adc
out
dec
pop
faddl
arpl
dec
adc
lods
fwait
add
push
sbb
rcl
call
icebp
adc
push
addr16
std
mov
jns
mov
adc
or
cltd
movsb
mov
stc
pop
push
sub
loop
ja
inc
stc
mov
int3
xorb
pop
mov
gs
xchg
fs
gs
ljmp
mov
jge
les
jo
subl
xor
xchg
push
dec
in
jb
ret
cmp
out
inc
std
stos
icebp
scas
mov
shl
or
mov
ja
adc
insl
fwait
push
pop
push
dec
mov
or
adc
push
adc
xor
xor
sbb
in
stos
sbb
push
dec
arpl
or
cmpsl
pop
mov
lret
bnd
push
push
nop
data16
add
in
lods
mov
xor
lret
lret
icebp
in
dec
int
ror
fnstsw
jmp
ja
dec
cmp
mov
xchg
mov
dec
mov
cmpsb
pop
and
lcall
or
xchg
insb
push
pop
cmp
jae
daa
inc
into
push
push
add
in
add
das
cmpsl
mov
mov
add
mov
mov
addb
sub
ficomps
push
push
stos
cmp
clc
mov
mov
inc
or
sti
xor
or
dec
dec
lds
and
ja
lcall
je
fnsave
jnp
jg
xor
mov
int
pop
call
shrb
shl
lret
addr16
jge
mov
sbb
jne
fisubl
pop
movsl
push
inc
fcmovne
mov
iret
fists
sbb
es
and
aad
jmp
jae
xor
es
adc
xchg
andnps
or
neg
lea
aas
mov
rclb
dec
sbb
mov
iret
inc
sbb
iret
cmp
cmpsl
jb
ds
out
stc
or
lods
insb
shll
in
pop
push
lahf
push
in
jecxz
mov
cmpsl
inc
sub
fiadds
and
mov
pusha
jb
pop
lea
ret
push
clc
xchg
dec
mov
xchg
adc
filds
jb
cld
mov
mov
and
frstor
jb
jo
mov
bound
subb
addr16
popf
pusha
repnz
push
loopne
cs
jmp
cmp
pop
ror
pop
dec
sbb
push
andl
mov
dec
mov
and
mov
push
insl
jne
cmp
or
popf
adc
negl
mov
je
pop
mov
or
fidivrl
inc
and
mov
popa
scas
inc
std
mov
adc
call
and
cmp
test
push
inc
bound
mov
sub
pushf
int
out
push
ss
aaa
pop
or
or
mov
fdivrl
lcall
lock
js
and
adc
push
lcall
xlat
jecxz
pop
mov
jg
imul
inc
mov
jbe
inc
rcr
pop
cmp
pop
sub
sub
cs
in
int3
jbe
adc
arpl
outsb
inc
mov
test
into
pop
xchg
iret
outsb
push
add
hlt
scas
jne
xor
mov
xchg
adc
test
test
insb
scas
and
jl
cli
mov
stos
jmp
push
push
mov
les
test
pop
mov
dec
mov
xlat
pop
mul
jecxz
jge
jecxz
test
int3
sbb
insl
mov
das
ret
outsb
cmp
sbb
add
int
adc
push
mov
fstps
rcll
add
pop
cmp
mov
mov
leave
int
mov
outsb
cwtl
xchg
jae
jl
dec
adc
cmp
imul
pop
or
sub
addr16
fistpll
and
inc
fnsave
leave
sbb
es
push
scas
adc
mov
dec
fisubs
cmp
pop
orl
ds
dec
aam
sub
adc
jb
nop
jge
fsubr
filds
int3
mov
lods
dec
frstor
mov
jbe
xor
std
leave
mov
add
mov
pop
jmp
lods
pop
xchg
shlb
scas
lahf
sub
iret
packsswb
incl
mov
mov
cmp
cmp
xchg
mov
xor
and
inc
push
fsts
mov
movhlps
jge
push
incb
dec
divl
push
mov
arpl
or
std
xchg
insb
js
clc
fisttps
mov
pop
loop
sar
mov
icebp
cmp
inc
xchg
imul
loopne
xor
sti
loopne
inc
das
mov
jecxz
mov
sti
movsb
test
out
jbe
cs
lds
push
push
lods
or
int3
scas
mov
mov
iret
pop
inc
movsb
push
sub
xor
rorl
adc
sub
mov
add
pop
int3
mov
dec
aaa
mov
and
scas
cmp
inc
test
je
mov
and
adc
xchg
test
les
iret
shll
pop
or
xchg
in
hlt
imull
add
popa
sbb
in
pushf
je
jne
imul
jp
sub
push
sub
lods
adc
movsb
in
push
pop
cmpsl
ret
sti
push
mov
push
rcll
ja
arpl
ss
adc
jae
clc
ljmp
inc
je
push
jle
ss
ret
gs
in
push
std
cmp
shll
loopne
pop
into
subl
jle
push
dec
sub
or
mov
add
lahf
clc
xchg
fs
xor
std
jo
stc
sarl
out
cmpsl
outsb
push
cmp
or
xorl
out
xchg
sti
inc
lret
jge
inc
lret
cmp
icebp
aam
add
sbbl
cld
mov
popf
in
lods
xor
xor
rclb
xor
shrb
jo
xchg
test
test
mov
rcrl
sub
cmp
lods
jle
daa
sub
pop
mov
inc
stc
imul
jle
add
sbb
ret
fdivp
iret
or
loopne
dec
leave
mov
push
adc
andb
adc
push
mov
es
loopne
adc
mov
xor
int3
roll
pop
fninit
push
int3
je
adc
mov
xorb
push
mov
mov
btr
lret
out
lea
sbb
lret
or
mov
cli
or
das
dec
aaa
stc
in
into
sbb
mov
loop
or
add
mov
jle
add
adc
addr16
mov
mov
xor
xor
sbb
pop
sub
sbbb
fmuls
aas
dec
xchg
cltd
push
mov
mov
out
sub
imul
out
or
lahf
jecxz
pusha
orl
xchg
fs
pop
xor
sbb
mov
int3
jae
jns
test
test
inc
lcall
clc
roll
pop
ret
imul
addr16
roll
fs
frstor
cltd
add
sahf
fwait
aaa
cwtl
outsb
sbb
push
mov
out
cltd
add
cmp
scas
sbb
xor
xor
sub
outsl
fwait
dec
std
fldl
int3
cmp
lret
mov
jp
jbe
lret
stc
mov
cmp
dec
lea
jmp
xchg
out
sbb
iret
lds
dec
popa
push
and
or
jmp
adc
das
adcb
xchg
aaa
or
inc
loop
cli
xchg
fdivrs
lods
out
mov
lock
rorb
inc
xchg
or
mov
inc
sbb
jne
and
inc
or
popa
jae
repz
mov
filds
jae
call
out
push
adc
or
pusha
jecxz
dec
mov
lret
in
iret
fwait
push
scas
xor
movsb
inc
jno
icebp
pop
cmp
fstl
aam
std
pop
std
fisttpl
lret
xchg
ror
jbe
into
scas
sub
orb
sbb
cmpb
and
push
je
pop
lea
xor
sbb
inc
ljmp
xchg
add
adcb
and
xchg
rol
or
sbb
divps
mov
cmpsl
mov
pusha
xchg
lea
jno
mov
icebp
ja
aad
cmp
and
cli
add
add
jmp
mov
dec
rolb
mov
fcoms
popa
insb
dec
in
add
popf
popf
scas
mov
repnz
pop
or
out
push
mov
xor
test
push
sub
lods
insl
mov
jle
movsb
mov
jbe
cmp
or
sub
xor
lds
push
popf
adc
in
bound
jg
mov
or
arpl
loop
ret
and
idivb
adc
push
divl
inc
mov
pusha
pop
ljmp
push
sbb
xchg
push
mov
lock
inc
jnp
test
addb
or
mov
negb
adc
pop
scas
jnp
inc
rcr
pop
and
push
pop
stc
push
aas
sub
mov
out
ja
add
arpl
loop
inc
ret
scas
out
mov
or
jbe
add
xchg
scas
pop
xor
sbb
dec
aaa
mul
imul
repnz
sbbb
xchg
js
xchg
inc
jae
mov
test
dec
fimull
xchg
dec
mov
cmpsb
dec
xchg
cltd
xor
ret
dec
in
lds
repnz
mov
inc
ljmp
mov
daa
pop
orl
jmp
xchg
andl
into
xchg
pop
xchg
xchg
rclb
inc
cvtdq2ps
test
sbb
and
inc
push
aaa
js
pushf
sub
and
nop
out
pop
or
push
push
push
imul
sub
inc
dec
or
dec
push
dec
pop
xchg
xor
iret
lret
into
in
out
loopne
addr16
loop
mov
ror
mulb
dec
mov
mov
negb
adc
inc
mov
loope
inc
das
sub
inc
adc
push
cmc
sub
mov
lock
sub
dec
mov
mov
pop
jp
mov
jb
cmp
mov
or
outsl
and
add
sbb
cs
lcall
add
fcompl
pushf
jg
pop
data16
mov
addb
arpl
inc
pop
insl
push
call
pop
dec
inc
pop
jp
xor
and
push
notl
add
sub
jl
cli
stos
pop
xlat
dec
sahf
cltd
mov
andb
int
ret
rolb
xchg
es
out
mov
and
subb
or
or
icebp
js
das
testl
fstpt
cli
jne
jle
cmp
cmc
sub
mov
jo
push
pop
cmc
mov
pop
lahf
pushl
mov
cltd
stc
fbld
adc
cwtl
adc
es
mov
and
xchg
sub
xor
fisttps
enter
hlt
jns
push
imull
pusha
rclb
sarb
pop
dec
add
sub
inc
scas
dec
das
subl
xchg
cmp
xor
sub
dec
xlat
mov
subl
adc
lods
mul
pop
dec
xlat
pop
mov
icebp
in
cmpsb
xchg
xchg
repnz
pushf
jg,pn
pop
sub
movsl
add
xchg
aaa
cli
loope
test
push
and
incl
pop
add
cmp
sub
sub
xlat
xchg
out
push
mov
pop
lods
js
add
or
out
out
xor
notl
mov
mov
mov
leave
test
push
jo
insb
test
mov
notl
cmc
ret
jbe
pop
mov
mov
sti
test
xor
fs
out
jae
clc
aas
dec
push
sub
mov
pop
mov
xlat
lret
movsb
test
mov
sti
jno
push
shll
bts
push
or
jbe
xor
xchg
xchg
jecxz
mov
dec
mov
inc
push
aas
and
out
xor
sbbb
in
addw
cwtl
pop
rcll
mov
jmp
push
sbb
jge
mov
out
notl
add
inc
lods
or
sbb
push
push
shll
mov
push
int
orl
jp
test
adc
pusha
xlat
and
rcll
scas
fisubs
adc
dec
fldt
push
sti
icebp
call
imul
out
lret
dec
xor
xor
sbb
lcall
call
js,pn
xor
lds
push
into
sub
pop
sahf
cmp
xchg
or
cmp
clc
call
cmpl
xchg
pop
stos
mov
sar
cli
sbb
xchg
mov
xor
jae
pop
imulb
divb
pop
and
repz
out
xchg
ret
mov
push
cmpsl
ja
mov
cld
int
mov
sbb
jl
loop
jns
loopne
scas
mov
std
sub
adc
nop
loope
rcl
imul
arpl
inc
mov
jg
imul
rolb
cwtl
sub
pop
les
in
dec
sbb
sub
fcmovnbe
xlat
bound
jge
xchg
jnp
stos
cld
xlat
stc
movsl
xchg
loop
xchg
pop
add
arpl
sarb
addr16
pop
ljmp
andb
pusha
cmp
jecxz
push
mov
out
push
pop
sahf
pop
dec
inc
cmp
dec
test
jne
add
fwait
scas
xor
mov
or
xchg
sahf
jae
rcll
js
pop
sub
sub
icebp
mov
gs
push
loope
shlb
mov
aad
and
lock
fcomps
and
mov
das
adc
stc
jne
cli
add
sar
aas
mov
dec
fiaddl
cmpsb
jg
jmp
mov
hlt
xor
inc
push
jmp
loopne
clc
iret
inc
xchg
add
scas
mov
add
stc
sahf
mov
add
scas
setae
stos
das
and
inc
clc
ret
fidivrs
inc
jl
lea
fs
out
in
lahf
or
and
jno
sti
mov
imul
shll
fstpl
cmp
cltd
xchg
sahf
imul
jle
pushf
in
jb
aad
aad
push
fsubp
push
xchg
orl
mov
mov
and
lods
enter
fucomp
out
outsl
xchg
stc
xchg
test
in
jo
rorl
jo
imul
fbld
lahf
mov
es
add
jo
dec
xor
ret
nop
sbb
cs
adcb
ds
xor
mov
repz
push
lahf
lods
xor
cli
jb
in
xor
data16
cmp
and
clc
or
cs
inc
mov
add
pop
pop
jbe
int3
dec
sahf
sub
fsubs
xchg
rol
mov
stos
negl
adc
les
addr16
int3
mov
popf
sub
dec
pop
dec
fmuls
es
std
leave
pop
push
pop
and
rcrl
jae
mov
shll
cs
pop
jnp
fs
daa
data16
decl
test
mov
js
cltd
xchg
sbb
xor
into
push
push
lret
enter
fcomip
mov
out
pop
es
xor
lods
mov
xchg
sahf
jbe
push
sbbb
lahf
jne
test
jg
xor
mov
sub
inc
sarb
ljmp
fwait
ljmp
add
adc
mov
mov
sub
incl
shr
jbe
dec
in
fcom
sub
leave
outsb
mov
imul
mov
jb
push
cmp
aas
add
out
cmp
stos
clc
out
in
adc
scas
mov
js
pop
push
adc
mov
mov
insl
adc
pop
lods
je
shl
push
inc
and
jg
inc
shrl
jae
es
xor
adc
loope
xor
imul
rcl
rcrl
cmp
add
sbb
sahf
fcmove
cli
mov
cmp
xchg
sti
std
fcmovb
add
add
scas
and
nop
push
cli
jmp
into
cmpsb
mov
daa
leave
mov
pop
inc
mov
stos
lock
test
leave
imul
jno
mov
pop
jno
nop
das
arpl
mov
leave
pop
outsl
int
clc
inc
sbbl
addb
push
mov
push
xchg
arpl
xchg
mov
mov
adc
jp
push
incb
mov
test
adc
lock
or
out
sub
jb
out
fwait
out
ffree
fld
test
aaa
inc
jmp
pop
lcall
subl
cmp
add
cmp
loopne
out
jae
add
jb
sub
inc
addr16
js
inc
cmp
add
pop
sahf
push
aad
pop
pop
jl
cld
mov
dec
pop
andl
insb
cwtl
xor
rcr
or
movsb
roll
push
fists
sbb
addl
push
stc
test
pop
ret
cmp
mov
xchg
sbb
dec
enter
jae
inc
scas
insb
cltd
mov
neg
cli
sbb
jae
call
adc
or
or
xor
int
or
das
pop
xor
jnp
mov
lahf
fcoms
add
jle
fcmovbe
add
xchg
aad
dec
in
lods
fst
cld
aad
mov
add
test
mov
xchg
sbb
lret
add
fldl
imul
data16
jg
les
fwait
popf
test
push
roll
mov
mov
movsb
pop
stos
inc
into
out
inc
ret
jns
push
sbb
xor
ret
cmp
adc
or
mov
sbb
pop
sbb
es
cmc
aaa
rcrl
mov
sub
insl
sahf
sub
mov
mov
inc
test
mov
mov
push
dec
push
jle
inc
into
mov
adc
test
and
decl
pop
leave
shll
das
loopne
push
out
add
xor
daa
insl
dec
les
inc
mov
cmc
test
cmp
mov
sahf
rclb
dec
popf
sub
push
xor
ljmp
sub
inc
ljmp
jmp
xor
fcmovnu
jns
xor
popf
and
imul
data16
xlat
jb
nop
pop
hlt
mov
xor
add
lods
xor
cs
fmul
xor
dec
cwtl
add
dec
insl
mov
mov
clc
sub
inc
jp
push
fwait
mov
dec
pop
mov
mov
xchg
sahf
popa
dec
or
adc
ret
daa
pop
cld
xor
mov
shrl
add
cmp
cmp
inc
pop
mov
pop
pop
repnz
sbb
les
jg
xor
push
sbb
loop
popa
das
rcll
adc
mov
shlb
daa
and
addr16
test
and
sbb
int
es
mov
jo
fiadds
sbb
aad
push
ret
enter
jecxz
js
imul
adc
push
int3
dec
cs
jbe
and
mov
in
add
mov
into
int
lret
lcall
in
adc
les
inc
adcb
cmp
cs
mov
ss
add
cs
loopne
cmpsb
mov
mov
test
jle
pop
mov
mov
fcmovbe
imul
js
test
ljmp
mov
lahf
pop
push
rclb
stc
dec
mov
or
rolb
jb
lret
jge
sti
call
mov
dec
fldenv
loope
dec
sbb
stos
adcb
call
pusha
dec
jecxz
fcomps
mov
xor
div
dec
test
es
adc
movsl
into
or
mov
outsb
lock
into
in
jecxz
stc
cmp
das
jnp
or
pop
jl
mov
stos
cltd
mov
dec
jl
jmp
shrb
and
pop
sarb
mov
fstpl
push
adc
xchg
jno
xorb
pop
mov
lea
or
and
and
js
out
shlb
jbe
xchg
cmc
or
loopne
mov
sbb
jno
mov
xchg
mov
pop
ja
cwtl
mov
lods
testb
ja
jle
pop
das
sub
inc
jge
mov
jne
pop
ret
jge
jmp
je
mov
pop
or
iret
xchg
xor
test
in
lock
mov
mov
fisubrl
cmc
outsl
xorb
loope
aam
mov
pop
leave
loopne
test
bound
cld
nop
pop
push
mov
or
dec
insl
add
xchg
mov
cmp
jle
les
pop
xor
xchg
lahf
xor
movsl
sbb
cmpsb
jns
mov
arpl
jno
cwtl
cmp
dec
repnz
mov
addl
adc
cltd
pop
out
inc
orl
inc
dec
popa
cmp
adc
idiv
lret
xor
sub
addl
pop
gs
addr16
adc
xor
cwtl
int
inc
pop
mov
mov
pop
push
mov
hlt
pushf
je
js
mov
pop
jnp
cmp
cmp
dec
sbb
mov
mov
decb
inc
jno
jl
cmpsb
int3
add
rcrb
int
sub
push
push
jge
into
cld
xchg
xchg
je
test
sub
jle
jmp
jno
test
iret
daa
pop
or
std
dec
pushf
add
cmp
and
out
in
aam
mull
std
cli
dec
sub
subb
enter
call
and
ficomps
dec
and
les
adc
and
cld
incl
daa
pop
sub
lahf
js
roll
xor
out
mov
out
loope
adc
sbb
ror
movsl
sbb
jmp
out
push
daa
sub
lock
test
push
jmp
lods
inc
xor
push
shlb
into
jl
popf
addr16
jge
dec
and
sbb
mov
xchg
and
mov
pushf
outsl
ja,pt
push
mov
adc
mov
adc
xchg
xor
into
push
push
jp
pop
xchg
push
jno
and
sbb
sbb
dec
xor
test
popa
icebp
jb
add
ficomps
pop
lods
mov
xchg
xchg
inc
aam
dec
adc
pop
xor
subb
cmp
outsl
fisttpll
into
ret
popa
xchg
push
add
mov
jo
sub
negl
sbb
xor
add
and
push
imul
or
leave
aas
xor
int
loopne
adc
add
xor
out
xchg
push
sbb
xlat
push
aam
repz
or
mov
or
movsb
sbb
mov
repnz
mov
add
xor
jb
scas
nop
fwait
lcall
inc
dec
cmp
idivb
icebp
je
sti
aad
or
outsb
jns
mov
jno
jne
xchg
bound
je
imul
aas
cmp
mov
sub
pushf
cli
mov
fnsave
mov
sahf
dec
sbb
add
fnstsw
inc
iret
scas
ljmp
sub
sub
mov
je
sub
mov
ja
sbb
xor
push
mov
leave
jmp
std
aad
fdivrs
outsb
push
sahf
pop
jecxz
jae
loopne
lcall
xchg
mov
cmp
int
rolb
xchg
lahf
jl
or
push
gs
push
pop
cmp
xor
xor
mov
adc
mov
bound
aam
mov
pop
cli
jle
roll
inc
jecxz
fldenv
add
divb
mov
mov
add
mov
negb
xchg
and
clc
pop
sub
and
rcll
jnp
sbb
loop
adc
scas
sub
iret
int
lods
adc
scas
xor
lea
jo
sbb
lods
mov
out
sarb
add
or
ja
cmpb
mov
ret
pop
pusha
mov
aaa
inc
jge
cmp
adc
test
js
inc
ljmp
cld
mov
gs
addb
es
bound
arpl
xchg
jnp
popf
loope
repnz
fldenv
jno
fidivl
rorb
jl
pop
mov
pop
out
jge
in
jg
rclb
pop
sti
aas
cld
cmc
inc
ret
ret
stos
cli
pop
lret
mov
xchg
rcll
imul
ret
fs
jno
ja
out
and
inc
bnd
shl
test
cmpsl
int3
insl
clc
out
mov
sbb
xchg
lods
sti
mov
or
jae
aaa
pop
jo
cmp
cld
mov
in
push
adc
adc
mov
pop
sub
or
jmp
jne
popa
pushf
sub
inc
cmp
imul
cs
dec
pusha
mov
push
pushf
or
pushw
pop
jge
dec
sub
xorl
push
insb
and
mov
mov
or
add
push
mov
inc
gs
jle
push
int
dec
pop
mov
pop
lods
xchg
xchg
int3
mov
nop
jecxz
sahf
mov
xor
movsl
fsts
jecxz
xchg
and
or
mov
jns
pop
bound
aad
inc
aad
dec
xor
jp
fcmovb
in
xor
pop
scas
ror
test
mov
mov
enter
mov
sti
add
inc
pushf
mov
std
xchg
fwait
sbb
mov
xchg
popa
imul
fnstenv
pusha
mov
or
sub
jl
cmpsb
lock
cmc
and
in
mov
out
sub
sbb
stos
mov
cmp
xor
std
in
pop
daa
mov
add
or
inc
lds
scas
aam
and
sbb
movsl
mov
out
mov
inc
pop
shll
inc
test
dec
fstl
or
xorb
icebp
xchg
mov
mov
xor
sbb
sti
dec
xchg
xchg
inc
ljmp
es
hlt
roll
sbb
or
fs
movsb
pushf
repnz
movsb
push
test
pushl
sbb
and
sbb
repnz
xchg
and
fs
inc
xlat
inc
lret
clc
cmpsl
jmp
xchg
ret
fwait
push
add
pop
ds
lods
enter
pusha
push
in
shll
and
add
push
inc
hlt
pop
fistps
inc
iret
popa
mov
imul
mov
mov
bsf
mov
xor
popf
jnp
jb
xchg
popf
and
mov
add
in
cs
mov
or
mov
sbb
fstpt
jns
jmp
rcll
les
jne
xor
pop
rcl
sub
shll
inc
mov
xor
push
fidivrl
negl
out
sahf
imul
and
fisttpl
fwait
mov
push
sbb
pop
icebp
cwtl
xor
push
or
jl
enter
sub
xor
test
add
mov
adc
push
in
lcall
popl
movsl
xor
mov
jmp
pop
aaa
filds
push
or
xor
fnstcw
hlt
leave
xor
push
xor
rol
xchg
fldt
out
test
dec
xor
or
lcall
and
sub
xor
or
imul
lds
nop
push
cli
xor
xchg
jmp
stos
dec
sbb
sbb
test
sbb
sahf
inc
cli
push
mov
mov
ljmp
adc
lret
pop
adc
cmpsl
fisubrl
pushf
mov
imul
xchg
mov
adc
fistpl
sub
push
lahf
mov
aad
pop
dec
push
pop
jmp
dec
mov
mov
scas
pop
push
push
xor
mov
jo
or
push
xor
wrmsr
sub
push
xor
dec
mulb
scas
pop
ret
push
jge
sbb
jg
mov
repz
xor
xchg
inc
sub
mov
fisubl
push
shl
mov
scas
add
lock
xor
jmp
pushf
es
cs
xchg
and
fcomi
out
lahf
addr16
popa
ret
shlb
fnstcw
rolb
cmp
cmc
jp
arpl
imulb
nop
js
rclb
add
push
mov
enter
leave
cmp
movsl
adc
inc
mov
or
adc
xlat
rcrb
insb
xlat
movsl
sarb
mov
pop
ja
orb
stos
adc
stos
js
jge
sub
xchg
sbb
ret
inc
mov
dec
inc
stos
add
ja
jmp
push
js
rorl
test
sahf
mov
clts
das
out
and
jo
adc
cli
dec
js
push
add
jl
fimuls
sub
mov
mov
cmp
rcll
mov
in
add
clc
push
xchg
negb
inc
lods
jge
loop
shl
pop
mov
mov
add
pop
stos
ftst
adc
mov
dec
lods
out
add
je
jnp
or
pusha
mov
dec
cmp
dec
pop
imul
or
sub
mov
xor
xor
inc
ds
cmp
fdivrl
inc
sbb
mov
movsb
cmp
dec
push
mov
sbb
out
es
ret
cs
dec
pusha
call
sub
xchg
xchg
xor
jno
in
push
pop
fwait
dec
inc
xchg
mov
cld
addr16
mov
lods
outsl
jno
dec
jge
mov
inc
or
and
sub
jp
lret
imul
in
jmp
cmpl
lods
fimull
pusha
sbbb
xchg
adc
xchg
aam
mov
sub
inc
add
and
sbb
sahf
or
add
test
mov
xor
cmp
clc
push
mov
and
xor
jle
loop
mov
in
mov
lcall
cmp
pop
or
shr
sbb
mov
and
gs
dec
inc
push
mov
sbb
or
dec
xor
sub
cs
push
lods
gs
les
mov
add
cmpl
popa
popa
adc
push
inc
cmp
ud1
fwait
ds
mov
push
jb
and
fdivrl
jg
int3
out
hlt
jno
xor
subb
cld
mov
and
dec
mov
outsb
sbb
int3
dec
scas
mov
mov
das
nop
int
sbb
push
and
sub
xor
stc
xor
push
mov
int
shl
sbb
sub
jns
repnz
cmp
mov
dec
add
shl
sahf
arpl
inc
sub
mov
sahf
sbb
mov
mov
lahf
jge
xor
nop
imul
popa
incb
pusha
arpl
cmpsl
test
movsl
jns
dec
and
rolb
roll
xor
iret
shl
lcall
popf
or
adc
jge
or
fisttpl
stos
shll
xchg
mov
sub
insb
push
sbb
addr16
mov
out
test
fdivs
pop
jne
dec
and
out
fwait
mov
inc
inc
mov
pop
sti
mov
add
shll
dec
push
push
mov
fistpl
je
shl
nop
push
mov
sub
cwtl
sub
inc
stos
sub
fisubs
ss
stos
pinsrw
fcmovbe
ret
out
mov
xchg
adc
aaa
adc
or
ds
mov
rolb
xchg
pop
dec
dec
leave
jge
pop
push
sbb
jmp
shrb
lcall
mov
pop
fisubs
sub
in
adc
jo
dec
push
add
mov
push
add
stos
and
loope
fcomps
cmc
jne
cmp
mov
sub
into
or
jmp
cwtl
int
cmpsl
fisttpll
int
xchg
es
jecxz
inc
add
outsb
repz
dec
iret
mov
or
iret
mov
dec
mov
icebp
cmp
rolb
loop
loop
rolb
mov
notb
jmp
push
xor
and
pop
and
stos
add
fwait
push
inc
cmp
adc
sti
clc
in
cs
cmpsb
pop
or
push
pop
cltd
fwait
xor
or
fwait
jb
mov
push
out
ja
bndldx
imul
adcb
mov
add
mov
inc
xchg
inc
inc
or
icebp
adc
or
test
dec
dec
scas
dec
inc
xor
cmp
and
xchg
test
dec
jmp
shll
aad
xor
popf
clc
pop
inc
xor
push
jbe
andb
dec
xchg
adc
inc
shlb
inc
sahf
stc
mov
push
jb
cld
sarb
pushf
mov
icebp
test
dec
add
js
shl
inc
ret
jae
push
fnstcw
push
cmp
xlat
adc
dec
xor
mov
outsb
jg
mov
sub
push
sbb
fs
push
jbe
cmp
gs
in
dec
jb
push
or
imul
aad
mov
addr16
loopne
jecxz
mov
in
or
or
inc
xlat
dec
dec
xor
pop
adc
adc
mov
xor
jl
sarb
or
lahf
outsb
pop
ja
pop
mov
xor
fs
xor
or
inc
inc
or
js
mov
daa
pushf
test
call
sbb
shl
jl
and
cmp
pusha
dec
jbe
add
mov
mov
fsts
enter
push
in
xchg
mov
push
push
clc
push
clc
mov
aad
sub
push
pop
call
repz
or
rorl
lcall
in
mov
cmp
pushf
fldl
jns
xor
dec
jmp
pop
push
je
jg
mov
test
repnz
dec
lret
lods
out
iret
mov
cmp
sub
cmpsb
enter
adc
push
lods
add
jo
test
insl
jl
push
xorb
out
data16
scas
sbb
xchg
cmc
pop
sahf
adc
into
ljmp
test
movsl
mov
cmpsl
jbe
pop
push
cltd
jns
cli
lret
mov
int
xor
xor
jb
test
inc
fisubrs
jne
push
cs
jnp
mov
adc
cmp
pop
arpl
shl
push
adc
pushf
cmp
daa
movsl
push
push
pop
inc
lret
adc
je
lahf
dec
jle
jae
and
cmp
aas
sbb
daa
mov
jbe
cs
jno
sub
jp
hlt
adc
add
cmpsl
js
pop
inc
sbb
jae
ret
flds
pop
popa
mov
sbb
or
adc
sbbb
pushf
adc
loopne
mov
fldcw
pushf
scas
adc
lods
or
sub
lds
mov
and
sbb
xor
pop
ljmp
xchg
lods
push
dec
es
mov
cmp
add
mov
sti
movsb
int3
xor
insb
lods
sahf
jns
mov
movsl
scas
insb
cmp
test
dec
push
push
rclb
das
jne
cmpsb
orb
hlt
ret
mov
dec
repz
mov
xor
je
dec
scas
cmpsb
adc
fs
stos
aad
mov
in
enter
aad
dec
insl
shlb
insb
xchg
inc
dec
pop
xlat
fs
cmpsl
mov
into
sahf
mov
or
mov
lret
test
jns
cmpsl
stos
jb
fildl
xchg
mov
insb
into
movsb
sbb
cmp
mov
test
cmp
in
add
xchg
pop
xchg
iret
push
pop
xchg
out
sti
in
cli
xor
out
xchg
add
sbb
cld
stos
push
stos
sbb
ret
inc
and
push
fs
cmpxchg
daa
sub
sub
int
jle
cmp
jno
stos
xchg
sbb
das
sbb
pop
sti
dec
movsb
enter
mov
and
cmpsb
or
jb
xor
xor
test
out
jo
daa
gs
xor
ror
adc
dec
testb
in
mov
mov
xchg
rcrb
pop
push
dec
xchg
lds
add
das
shrl
mov
mov
test
jle
jle
daa
testb
dec
and
lods
adc
cmpsl
jmp
and
inc
mov
setl
xor
fildll
pop
push
adcb
imul
insl
dec
out
jne
lahf
insb
in
push
xor
or
imul
and
push
dec
sub
jp
adc
inc
in
lahf
stc
pop
jae
outsb
popf
bound
pushf
push
cmp
pop
jno
scas
mov
pushf
sahf
repnz
adcl
ret
mov
sbb
out
data16
mov
cmp
call
mov
or
push
fcompl
sub
sub
or
ja
out
push
sub
pop
fwait
jnp
pop
orl
pop
ss
addr16
dec
sub
lret
daa
mov
mov
mov
hlt
stos
mov
hlt
adc
icebp
lcall
push
and
mov
sti
sub
sub
mov
or
mov
mov
or
movntq
out
mov
fdivrl
cmp
ljmp
pop
dec
hlt
lea
pop
sub
xor
and
or
repnz
sub
mov
push
jb
or
stos
cld
adc
js
fstps
push
push
into
mov
pushf
inc
movsl
xchg
jle
imulb
sub
fidivrl
out
data16
decl
mov
ss
adc
mov
js
cmp
jmp
and
mov
daa
cmpsb
loopne
xchg
popf
adc
sbb
das
xchg
mov
cmc
sbb
sub
inc
jne
loop
ljmp
inc
sbb
cmp
arpl
or
fildll
leave
jbe
pop
test
std
cmpl
adc
ljmp
add
mov
adc
cmp
popf
aam
lods
imul
insb
ss
mov
xor
sub
es
aam
lods
andl
pop
inc
pop
sub
lcall
outsl
lock
mov
ret
pop
fs
ljmp
popf
js
insb
lods
rep
jb
stos
mov
mov
loop
push
or
dec
cmc
adc
ret
aaa
mov
mov
sarl
pop
sahf
lods
sbb
leave
mov
mov
xchg
fs
or
xor
xchg
dec
jno
push
scas
loopne
pop
dec
stos
shlb
push
scas
nop
adc
dec
in
jns
adc
in
test
pop
cmp
lcall
dec
in
xor
xchg
mov
adc
inc
aas
in
out
mov
popw
mov
mov
xor
loopne
and
adc
mov
stos
jb
insl
popf
xchg
cltd
mov
dec
jge
ret
jns
or
es
dec
sbb
lock
gs
mov
jns
aad
loope
movsb
addr16
jo
push
push
push
rorl
fldt
cmp
xchg
push
rol
xchg
dec
out
pusha
or
test
rclb
add
xchg
mov
aam
movsb
test
inc
pop
jns
xlat
inc
jb
mov
xchg
loope
imul
lea
into
cli
pop
dec
push
ljmp
sub
push
or
mov
out
or
jg
add
inc
in
mov
mov
inc
mov
and
inc
loop
inc
negl
addr16
cmpsb
fildll
les
fs
in
inc
out
nop
es
movsb
fsubp
adc
mov
dec
fsub
jge
stos
inc
and
or
mov
notb
dec
lock
xor
mov
cmp
lea
mov
dec
mov
js
sbb
inc
mov
jl
bound
or
jecxz
lds
pop
mov
sbb
roll
bound
out
rorl
imul
addr16
imul
jg
mov
sbb
addr16
jb
ret
in
mov
leave
insl
jle
inc
notl
dec
js
mov
pop
pop
xchg
ja
mov
shrl
add
adc
daa
xor
lahf
cmp
pop
inc
mov
mov
imul
dec
dec
test
push
out
in
pushf
adc
xchg
sub
dec
je
jne
cltd
mov
sub
scas
jne
pop
jg
dec
test
or
cli
mov
lret
or
imul
js
pushf
sub
cmp
xacquire
xlat
xor
mov
lret
adc
hlt
mov
sub
cmp
cmova
clc
adc
cmpb
mov
cmp
dec
fisubrs
push
pusha
push
dec
xor
dec
jnp
xchg
mov
psubq
rclb
fwait
mov
lds
sub
leave
hlt
sub
cli
adc
push
daa
jle
dec
push
icebp
rorl
push
sub
enter
or
add
push
in
fwait
ljmp
pop
out
test
stos
int3
or
out
cmp
shlb
push
pop
dec
mov
add
cs
mov
jmp
mov
sbb
popf
add
popf
cmp
mov
or
add
lret
movsb
out
inc
jmp
int3
loope
lods
pop
fstp
or
jno
dec
mov
mov
jae
push
movsl
jecxz,pn
inc
inc
and
daa
xor
pop
mov
or
add
mov
mov
repz
sti
shll
ljmp
sbb
inc
movsb
outsb
xor
jecxz
add
or
ds
xchg
xor
out
in
push
popf
add
add
sub
xlat
sti
ja
mov
cs
scas
xor
mov
inc
sub
mov
xchg
add
cmpsb
cltd
and
and
lret
mov
nop
mov
aam
insb
lods
repz
or
push
aas
dec
and
leave
or
push
in
mov
push
mov
dec
cltd
xchg
sub
lods
test
js
adc
mov
pop
adc
pop
add
lods
mov
fwait
mov
jge
stos
jecxz
cmp
mov
mov
imul
shlb
adc
cmp
adc
pop
cmc
mov
sub
cmp
sub
fwait
jl
test
inc
test
mov
inc
nop
mov
pop
int3
dec
dec
pop
arpl
rcrl
xchg
lea
insb
outsb
xorl
and
lret
and
in
cltd
fnstcw
jle
mov
pop
gs
in
outsl
fistl
sbb
jae
stos
xchg
mov
xor
lods
insb
cltd
xor
in
xor
insl
xor
jecxz
out
sbb
sbb
outsl
mov
bound
push
test
mov
sbb
test
arpl
ficompl
idivb
divb
pop
insb
cld
dec
cmc
inc
dec
pop
inc
pusha
pushf
mov
notl
mov
inc
cmp
dec
les
push
adcl
or
repnz
add
push
adc
fwait
push
loope
pop
enter
jo
jno
push
shr
daa
dec
mov
push
fistps
or
cmp
or
fs
lods
mov
inc
push
xlat
mov
xor
push
popa
sbb
jno
and
jo
orb
push
ljmp
rcrb
mov
les
dec
aas
movsl
popa
fldl
xchg
arpl
cmp
xchg
sti
stos
mov
cmc
add
jge
lods
ja
imull
cmc
das
addl
loop
lret
inc
mov
sahf
lds
mov
inc
clc
loope
jle
insb
xor
xor
sbb
dec
pop
inc
lahf
and
out
fistl
out
jns
adc
pop
aad
arpl
and
xchg
jg
idivb
push
in
mov
pop
dec
cmp
arpl
scas
es
adc
jge
jb
imul
test
mov
mov
pop
mov
out
insl
mov
sahf
pop
call
mov
mov
shll
lcall
xchg
add
movsl
aam
in
cmp
add
push
push
mov
addr16
xchg
ds
sbb
inc
add
scas
cwtl
call
cwtl
cmp
popf
jae
les
xor
movl
mov
cmp
pop
insb
in
jnp
inc
push
es
lods
sub
sub
push
jle
dec
repnz
movsb
jo
pop
fmuls
xchg
xor
mov
adc
jecxz
or
inc
insb
loop
jns
mov
sahf
notb
dec
and
fadd
push
imul
std
movsb
xor
fmulp
scas
sarb
aaa
mov
cmp
insb
js
leave
repnz
jne
rorl
flds
and
fs
les
cmpb
dec
cmpsb
rcll
pop
inc
jecxz
ljmp
pcmpgtw
outsb
add
push
test
data16
inc
mov
cmc
sub
pop
mov
or
lahf
mov
stos
aas
lds
inc
es
lahf
dec
hlt
ds
sbb
pop
aas
loope
push
mov
mov
test
sbb
adc
pusha
int3
lret
imulb
in
xchg
mov
pusha
test
outsl
jnp
js
leave
mul
xor
dec
stos
nop
loop
test
mov
lea
call
push
out
cmp
jle
mov
pop
scas
lea
push
or
lcall
gs
sti
xchg
test
sbb
out
cmp
xor
pop
ss
enter
bndldx
cwtl
lahf
dec
xor
pusha
fnstenv
or
mov
jp
mov
mov
push
cmp
daa
jge
fisubrl
sahf
mov
test
addr16
sub
stc
movb
mov
sub
mov
popa
inc
pop
sbbb
aas
fmul
je
pop
stos
fiaddl
pop
or
cmp
enter
rol
xchg
mov
insb
cld
clc
sbb
push
call
lahf
jne
movsl
adc
jns
inc
cmp
ret
pop
out
fidivrs
mov
sahf
outsb
xlat
xchg
xor
dec
dec
enter
add
cltd
sub
repnz
jecxz
dec
scas
imul
ret
dec
mov
faddl
data16
movsb
jb
fnsave
xor
cmp
inc
mov
inc
mov
jecxz
jge
stos
xchg
adc
cmpsl
into
sub
fsubrl
ljmp
test
sub
loop
dec
ja
lock
jae
movq
and
je
inc
mov
dec
mov
jge
lret
sub
lret
rorl
xor
xchg
inc
shll
insl
pop
arpl
mov
push
sar
xor
js
adc
fs
es
lret
aad
mov
mov
mov
mov
adc
sbb
jnp
out
lods
in
pop
mov
xor
jle
jne
icebp
repz
xchg
mov
mov
ja
sarl
lahf
mov
push
leave
mov
cmp
mov
pushf
cltd
and
cs
lahf
xchg
adc
pop
test
adc
cmc
lods
jne
outsl
int3
fldl
jle
cmpsb
in
icebp
les
paddsw
push
mov
jecxz
mulb
rcrb
adcb
cmpsb
rorl
push
xor
out
outsb
fxch
mov
jp
xchg
fs
xorb
sbb
pop
pop
cmp
xor
push
mov
ret
xchg
data16
lods
dec
fdivl
das
sbb
sahf
ret
je
bound
scas
mov
cli
andb
stos
icebp
loope
popa
fists
and
add
pushf
repnz
jle
lret
pusha
xor
push
adc
aam
in
lods
jmp
sub
ret
add
pop
fcomps
stc
jmp
ret
cmc
sbb
or
dec
ljmp
out
sahf
fs
stc
mov
mov
aad
pop
mov
mov
mov
and
or
mov
or
jns
cmc
out
hlt
call
insb
mov
sbb
xchg
inc
fdivrl
sti
stos
jmp
mov
int
pop
pop
fbld
icebp
lea
inc
pop
push
in
outsb
pop
xorl
push
aam
arpl
icebp
leave
sub
push
movsb
das
jecxz
dec
out
ds
test
push
mov
fmul
insb
and
jnp
ficoms
addl
mov
mov
loope
fidivrl
xor
jb
popa
data16
sub
mov
xchg
sbb
repnz
sub
test
xchg
cltd
inc
mov
and
cmp
test
int3
repz
and
xchg
push
stos
jae
mov
mov
sub
nop
xor
in
push
cwtl
mov
out
les
jl
popa
xor
out
sub
lret
mov
leave
jo
dec
mov
sub
pop
mov
out
ja
rorl
mov
cwtl
data16
pushf
rcll
cs
and
pusha
xchg
cmpl
ret
xchg
mov
jg
ja
jecxz
sbb
xchg
push
push
and
cmp
mov
jno
push
popl
dec
aam
lods
dec
icebp
out
push
adc
xor
mov
lods
sub
repz
lret
in
mov
push
push
fstpl
mov
xchg
dec
adc
xor
jno
inc
mov
dec
popf
lahf
les
std
sub
mov
lods
cmc
jne
xchg
add
out
mov
cmp
xor
inc
xchg
test
mov
fcom
jg
mov
je
adc
cmp
inc
iret
pop
insl
jge
sub
jbe
pop
into
loop
sti
arpl
jnp
popa
addb
pop
lcall
dec
pusha
ror
int
jecxz
outsb
roll
jb
mov
mov
pop
inc
dec
je
cmp
push
gs
jns
add
ljmp
xor
jg
outsl
jbe
or
adc
cld
push
aas
sahf
mov
add
addl
pop
into
adcl
push
mov
repz
mov
jne
arpl
mov
and
xor
push
stos
data16
mov
outsb
xor
rclb
loopne
or
sbb
std
sub
adc
out
mov
or
cmp
test
icebp
inc
push
mov
jo
jae
aaa
pop
dec
pop
aam
repnz
jae
js
and
outsb
mov
movsb
xchg
and
test
jno
jl
sub
std
in
test
mov
imul
call
inc
mov
dec
push
xorb
insl
xor
addr16
lock
mov
jb
inc
xchg
popa
mov
jo
sub
push
test
popa
mov
xchg
add
and
repnz
pop
ja
push
pop
test
mov
cmc
dec
lea
dec
stc
mov
and
cmp
xchg
in
int3
test
out
xor
push
test
xchg
pop
adc
ss
cwtl
xchg
shll
pop
adcb
mov
stc
pop
fisubl
dec
pushf
dec
lret
add
inc
rcrb
cmpsl
push
inc
or
out
mov
xor
addr16
stc
mov
jge
js
add
loope
mov
in
cmp
loop
fiaddl
popf
sti
mov
les
inc
dec
inc
rol
lcall
idivb
ficoms
push
into
out
dec
adc
fwait
xchg
bound
push
or
xchg
mov
mov
sub
push
in
stos
pop
inc
lea
and
in
call
sti
aad
push
repz
mov
jnp
in
inc
or
cmp
mov
in
cld
sbb
cmp
stc
sub
cmpsl
dec
add
addr16
mov
in
cmpsb
xor
pop
in
sarl
shlb
push
cmpsb
lds
sub
sbb
out
jne
mov
icebp
mov
pop
inc
stc
inc
pop
aam
sbb
jmp
jb
xlat
jge
pop
test
jae
pusha
pop
jl
ds
adc
push
xchg
adc
ficoml
bound
push
pop
cmpl
cmp
jb
dec
xchg
jle
pop
test
loopne
adcb
es
add
push
inc
push
push
loop
sbb
call
inc
cld
fs
dec
inc
jg
sub
or
insb
sub
mov
je
push
cli
pushf
jl
sub
outsb
insb
call
imul
clc
xor
xchg
pop
cmp
loope
adc
jnp
loope
cltd
inc
aaa
mov
pushf
pop
out
idivb
lret
mov
xchg
jns
mov
gs
sub
fisubs
int3
dec
out
sbb
dec
pop
nop
ficoml
cwtl
das
imul
or
cld
sub
pop
je
in
mov
xchg
clc
lods
xor
inc
fmul
leave
cmp
fisttps
sub
shrl
imul
stos
popa
dec
jno
insb
in
out
fstpt
push
and
aam
decl
and
hlt
pop
adcl
or
cmp
hlt
pop
pop
jns
ja
pushf
sbb
test
inc
movsl
cmovs
xchg
imul
mov
adc
insl
jns
mov
push
clc
mov
test
das
in
adc
inc
push
push
dec
pop
popf
jl
imul
lods
repnz
jl
pop
aaa
push
adc
cmp
xchg
cmp
fildll
aad
mov
int
push
lret
setl
gs
sbb
nop
add
jp
mov
lods
jb
adc
lcall
lret
sbb
dec
into
lahf
sbb
mov
push
mov
sub
xchg
sub
lret
mov
add
shlb
xchg
imul
fs
adc
jmp
in
loop
test
rcrb
cmp
nop
xchg
les
aas
iret
lret
and
test
sub
mov
incb
repnz
xchg
repz
xrelease
pop
ja
inc
mov
xor
mov
xchg
shr
mov
into
inc
fdivs
xor
repnz
in
pop
ret
mov
sbb
cmp
cltd
cmpb
pop
roll
xor
out
rclb
fimull
mov
and
jo
call
lods
dec
outsb
inc
into
add
and
mov
scas
dec
mov
mov
xor
inc
icebp
adc
frstor
out
out
popa
sti
push
or
jne
je
mov
cmp
and
into
rorl
xchg
mov
xchg
pop
add
cmp
sbb
icebp
les
push
clc
iret
je
dec
das
add
xor
mov
popa
out
mov
or
cmpsl
inc
mov
mov
stc
jecxz
arpl
ja
mov
stos
dec
ja
fmull
push
lock
popf
daa
lret
inc
cld
movsl
sbb
sbb
mov
xchg
pop
jg
or
xchg
mov
ss
int
sbbb
das
dec
xchg
loop
dec
frstor
mov
mov
fwait
and
adc
js
in
push
xchg
add
sub
roll
js
imul
lret
scas
sub
lds
mov
mov
sub
push
push
repnz
mov
cli
cmpsl
fndisi(8087
add
sub
test
sbb
outsb
mov
jnp
mov
sarl
call
fimull
loop
or
mov
clc
clc
push
test
dec
adc
shlb
jle
pushf
and
ds
jp
icebp
hlt
int3
test
into
lret
sub
mov
push
cmp
call
mov
decl
negl
sbb
stos
dec
pusha
ret
adc
pushf
xor
push
fs
shl
mov
cmpsb
lock
sbb
outsb
dec
loop
popf
jl
imul
popa
aaa
jmp
insb
inc
fstpl
scas
nop
xor
lds
aaa
dec
loopne
and
fnstcw
xor
sbb
xor
in
dec
jbe
das
fsub
mov
dec
shlb
out
pushf
sub
push
pusha
xchg
push
pop
xor
pop
clc
cmpsl
adc
xor
add
stc
jecxz
es
mov
dec
nop
insl
aad
push
cld
pop
pop
and
jge
pop
add
cmc
add
xchg
ja
adc
mov
cmp
xchg
ret
jmp
cmp
decb
mov
movsl
repz
iret
pop
mov
sarb
inc
loop
fisubl
pusha
dec
in
jnp
stos
arpl
andb
pusha
adc
aad
pop
insl
dec
scas
in
mov
or
and
repz
xchg
aad
add
xor
sti
mov
aam
mov
inc
stc
push
pop
fsubrl
addr16
daa
cmp
out
push
pop
push
jg
mov
cmpsl
clc
ficomps
ficoml
add
cmp
inc
cltd
xchg
fisubs
imul
pop
add
mov
ret
pop
lahf
mov
xchg
insb
mov
cmpl
jae
or
xor
mov
and
xchg
fwait
adc
std
fnsave
js
data16
in
jae
xchg
mov
xor
dec
std
pushf
mov
cwtl
add
leave
sub
jmp
rolb
sub
mov
insb
loop
enter
cmpb
adc
dec
add
or
in
cmpsl
sti
jb
sub
jno
mov
xor
gs
xchg
out
push
push
pushl
sub
jmp
lret
flds
cmpsl
pop
mov
jmp
pop
sbb
addr16
in
movsl
in
jl
xor
inc
hlt
daa
cld
sub
gs
mov
shrb
leave
cltd
jl
xchg
loope
cmpsb
xchg
lea
test
lea
les
in
sbb
adc
cltd
ja
mov
cmp
int3
je
ja
inc
mov
or
outsb
das
int3
xchg
iret
jp
push
mov
not
arpl
pusha
jb
mov
in
fmulp
mov
gs
push
lret
or
jb
fwait
xchg
jge
mov
and
mov
dec
imul
dec
in
adc
lock
push
push
mov
adc
cmp
ror
jmp
cld
fsts
sbb
jo
fwait
cltd
bound
mov
shll
sti
mov
in
inc
adc
sbb
inc
push
shlb
nopl
pop
mov
in
sbb
or
insb
cmpsb
bound
jo
mov
repnz
jmp
test
aaa
lods
rorb
push
mov
push
and
repnz
xchg
sbb
xor
std
fstl
inc
mov
sub
sub
and
push
cmp
add
stos
lret
gs
jecxz
es
dec
dec
mov
jge
into
rolb
lods
add
mov
jne
jae
ljmp
push
inc
mov
cmp
in
adc
add
mov
cmp
lahf
cmp
pop
sbb
push
mov
mov
pop
inc
out
in
imul
sbbl
nop
xchg
repz
push
ds
into
xor
push
and
jg
shll
sbb
dec
or
mov
mov
dec
enter
push
adc
sub
mov
or
test
and
orb
clc
in
scas
lds
push
test
mov
and
sarb
and
in
mov
push
or
pop
sub
pop
stos
inc
sbb
dec
push
sub
jecxz
ljmp
inc
push
mov
popf
movsl
outsb
movsb
clc
and
ds
negl
adc
ret
loop
pop
mov
ss
xor
add
sbb
scas
dec
cltd
sbb
xchg
sbb
xor
mov
lret
jbe
mov
movsb
test
lods
xchg
xchg
ds
or
inc
jne
sub
sub
std
pop
pop
enter
les
ds
cmp
mov
ret
jb
cld
nop
jb
gs
or
stos
outsb
xlat
sbbb
mov
test
mov
jno
pop
xor
fs
divb
mov
mov
aaa
jmp
mov
push
pusha
mov
shr
aad
outsl
enter
mov
in
or
dec
daa
mov
dec
and
mov
jg
cli
pop
lods
iret
addr16
shrl
pop
loop
fidivl
popf
into
lods
xor
add
dec
dec
mov
mov
inc
std
and
cwtl
cmpsl
aam
in
push
push
es
sarl
das
gs
xor
mov
enter
mov
xlat
fwait
stos
add
out
shll
dec
lret
jne
jmp
lea
or
push
and
arpl
xchg
ret
ss
jl
mov
mov
out
dec
js
pop
addb
push
sub
xchg
or
lock
sbb
and
or
push
icebp
mov
movsb
xchg
push
sub
lea
cmpl
addr16
mov
arpl
push
loopne
adc
pop
into
cmp
je
mov
push
bound
xchg
cmp
scas
xor
call
mov
stos
mul
fucom
aam
popf
lea
insl
mov
rolb
push
inc
sub
fcomps
out
mov
mov
mov
or
inc
mov
jo
pop
rcll
jne
lods
xchg
pop
data16
leave
stos
icebp
dec
sbb
sbb
add
and
mov
xchg
mov
or
inc
mov
jnp
cwtl
adc
and
xchg
mov
mov
mov
pusha
clc
cmp
or
pop
dec
sbb
adc
adc
sbb
or
or
fscale
mov
xchg
adc
addl
jbe
dec
and
out
pop
sbb
cmp
sbb
pop
jbe
or
jg
xchg
pop
or
lock
pop
pop
imul
mov
pop
aad
ret
cli
and
lret
mov
iret
ljmp
push
or
or
cmp
mov
jle
cwtl
pop
scas
adc
icebp
dec
movb
js
in
call
rcrl
sub
jmp
inc
loop
pusha
int
pusha
sub
clc
inc
fucom
mov
jecxz
sub
das
pop
out
mov
fldl
lahf
out
loope
xlat
xchg
add
mov
sbb
pusha
std
mov
jle
push
mov
add
cs
lods
xchg
push
jge
xlat
test
adc
inc
pop
shrl
or
dec
aaa
lds
pushf
loop
leave
fisttpl
mov
add
imul
adc
mov
daa
mov
mov
dec
xchg
sbb
pop
stos
in
cli
movsl
pop
not
pop
jb
popf
insl
loop
test
push
sbb
lahf
push
cld
cmp
sub
faddl
ret
jp
fisttpl
dec
div
sbb
jb
sbb
adc
and
adc
xchg
leave
data16
testl
pop
in
stc
mov
add
loop
rcrb
rorb
sbb
bound
jo
mov
hlt
jo
daa
pop
xchg
and
out
hlt
fistpll
add
mov
ja
cmp
and
dec
or
aas
pop
sub
out
xor
mov
inc
insl
into
and
xchg
dec
inc
inc
and
xor
and
sub
mov
xchg
movsl
popa
cmp
xor
loope
hlt
pop
lock
xchg
jge
movsb
sahf
or
lods
jge
mov
dec
rcl
call
fistl
loop
pop
cmp
lds
out
insb
push
stos
mov
int
mov
push
adc
les
aas
and
andb
arpl
push
dec
clc
cmp
test
mov
dec
cwtl
sti
add
mov
je
mov
xor
xor
mov
les
cmp
cs
popa
imul
into
pop
outsl
pusha
inc
les
test
fimuls
lds
push
mov
pop
jae
vunpckhps
cmpsl
idivb
sti
mov
ja
sbb
ljmp
lea
in
mov
out
enter
mov
jge
jg
test
sarl
cld
jo
adcl
lock
mov
loop
mov
sti
sbb
in
add
roll
data16
fildll
cs
mov
leave
das
loop
pop
data16
hlt
ret
lods
sbb
pop
int
shl
dec
or
jecxz
pop
add
pop
lret
stc
mov
test
mov
cmp
and
aaa
xchg
fists
push
stc
outsl
inc
mov
pop
insl
inc
push
mov
adc
aaa
repz
mov
out
imul
mov
js
loopne
cmpsl
push
loop
cmpsb
mov
mov
loope
ficoms
shlb
push
sub
rcl
popf
lea
es
pop
fdivrl
rcll
sarl
pop
data16
fs
idiv
mov
lods
jle
jo
mov
bound
fdivr
adc
jg
pop
enter
fwait
movsl
arpl
cmp
xchg
insb
pop
or
push
mov
rorw
jne
es
les
mov
pop
sub
jns
rclb
sub
xor
push
add
call
test
jmp
mov
xor
outsb
dec
dec
pop
dec
add
cmovb
push
clc
and
cmpb
pop
sub
dec
inc
add
test
mov
icebp
cmpsb
mov
pop
fiadds
mov
cld
sbb
sbb
fidivrl
mov
aaa
mov
xchg
jns
xchg
mov
call
mov
mov
scas
test
insb
daa
jno
pop
cs
push
push
pop
pop
inc
mov
xchg
inc
xor
xor
les
out
push
stc
add
sahf
out
out
mov
sub
push
jp
insl
jle
cs
xchg
mov
fwait
adc
repz
ret
inc
in
mov
inc
jle
aad
mov
out
call
pop
imul
inc
lods
add
test
jle
pop
dec
add
lcall
out
jp
ss
pop
out
mov
cmp
repz
adc
nop
insl
mov
stc
cmp
cwtl
repz
sbb
dec
pop
mov
mov
stos
int
lods
and
rdtsc
jo
imul
ret
cmp
mov
arpl
call
mov
cwtl
aas
std
dec
aad
div
idivl
ss
dec
mov
xor
cmc
mov
jge
fimuls
or
add
repz
jns
cmpsb
mull
data16
dec
xchg
fcmovnu
push
and
adc
sub
xor
std
xchg
sub
xchg
push
sarb
cmc
mov
mov
mov
push
xlat
and
dec
xlat
inc
in
in
aas
pop
gs
test
call
push
sbb
paddb
ret
movsl
xchg
ja
jb
das
jae
xchg
push
or
mov
sub
mov
pop
jnp
mov
aam
cmp
cmp
and
movsb
push
and
adc
jecxz,pn
or
lret
out
rclb
sbb
xlat
xchg
flds
jp
ds
adc
mov
clc
add
repz
mov
pop
push
cs
mov
jle
dec
rcll
or
mov
lds
mov
sbb
jns
addb
adc
jno
fs
bound
aam
and
cmc
jo
xchg
xor
sbb
roll
movsb
daa
add
push
cs
cmp
xor
and
inc
js
aaa
pop
mov
pop
mov
cmpsl
arpl
lcall
stos
das
sub
fsub
mov
imul
jne
jb
add
xor
rorl
adc
mov
dec
dec
or
es
pop
stos
mov
jne
adc
icebp
mov
cmpsb
jp
add
push
cli
pop
scas
xchg
mov
loopne
pop
or
scas
scas
pop
or
jns
pop
or
and
lock
shrb
mov
xchg
cmp
cmpsl
test
ds
lcall
stos
movsb
push
and
push
and
xchg
jp
frstor
imull
in
and
cld
call
mov
movsb
ds
scas
mov
loopne
sub
out
insb
loope
xchg
inc
dec
loop
fwait
shrb
push
popa
xor
xchg
lods
or
dec
jecxz
cli
sti
or
fbstp
add
lret
mov
test
movsl
aaa
xor
decb
fiadds
fwait
xchg
xor
pop
mov
ja
add
pusha
sub
adcb
cltd
jl
push
add
call
xchg
out
loope
leave
out
mov
fsubrl
pop
pop
adc
pop
stos
lcall
sbb
aam
jnp
inc
xchg
ret
lods
js
push
jp
ret
mov
pop
jae
jbe
rclb
cmp
and
adc
popa
push
jge
lret
out
sbb
mov
aad
loopne
jmp
jno
fscale
sub
sbb
pop
dec
and
fs
push
adc
and
cli
inc
sahf
or
mov
ja
sbb
push
fs
dec
inc
fimull
scas
std
scas
sub
loopne
les
fisubl
loope
enter
imulb
cmp
test
inc
jle
mov
sarl
push
insb
shr
sbb
daa
punpckhwd
enter
cmp
pop
inc
divb
jle
jae,pn
in
inc
lret
sub
into
xor
mov
dec
icebp
pusha
mov
inc
mov
mov
mov
loop
pushf
adc
mov
andl
add
jnp
push
cs
mov
insb
xchg
mov
adc
jg
shr
jno
sar
testl
push
sbb
dec
notb
ljmp
jo
inc
add
cli
das
addr16
add
mov
pusha
sub
in
cmp
daa
fwait
adc
bound
sub
push
std
out
inc
pop
call
sbb
sbb
jmp
lret
jbe
pop
call
insl
inc
int
loope
daa
lcall
inc
stc
jp
xlat
movsb
pop
imul
push
dec
jmp
shlb
lcall
inc
movsb
inc
fs
jmp
sbb
xchg
movsl
xgetbv
mov
cmp
add
into
sbb
xchg
add
bound
mov
mov
stc
add
pusha
loopne
cmc
fsubrl
movsl
out
aad
jnp
fwait
or
sbb
and
pop
adc
aas
pop
outsl
jnp
in
fcoml
jns
xchg
out
jecxz
into
imul
sub
jecxz
push
sub
dec
stc
arpl
out
mov
out
jle
data16
add
out
dec
into
cs
xor
dec
or
cmp
jb
test
aas
call
xchg
not
sarl
xchg
mov
jo,pt
mov
push
aaa
push
leave
dec
xchg
xor
pushf
aam
call
mov
js
call
mov
addb
or
popf
es
jl
movsl
test
push
lods
lods
jg
mov
jp
xchg
psubq
inc
rcrl
inc
xchg
popl
xchg
sub
jmp
or
lret
jae
sarb
inc
push
xor
in
pop
xchg
jb
lods
mov
sbb
xchg
mov
pushf
stos
inc
mov
in
andl
or
mov
lahf
and
or
or
int3
popf
jecxz
xchg
and
out
rcr
gs
pusha
jo
mov
andl
mov
stos
lods
or
mov
mov
sahf
push
dec
pop
jle
fcmovb
adc
lcall
jmp
push
icebp
sbb
inc
ja
rorl
arpl
xor
outsb
xor
pop
inc
fisttpll
xchg
jo
adc
pop
int3
xor
popf
mov
ds
xchg
add
dec
add
std
pop
pop
faddl
into
arpl
xchg
xchg
loopne
adc
fcoml
sub
fstpt
mov
repnz
sbb
xchg
xor
sub
add
mov
jmp
pusha
push
imul
mov
pushf
cld
pop
cmp
push
sub
repnz
xchg
dec
fs
cli
cmp
rolb
mov
jl
pusha
mov
aaa
loope
mov
xchg
lcall
inc
and
inc
fdivrs
pop
cli
jge
fcmovu
adc
xchg
inc
add
loop
cmc
dec
popl
cmp
mov
push
fisubrl
loopne
lcall
xor
rorl
stc
jle
jmp
leave
fwait
lock
pop
ret
jae
and
or
mov
xor
insb
push
fadds
in
repz
inc
and
lea
scas
or
mov
mov
cwtl
rclb
add
and
inc
dec
xor
movswl
dec
dec
rolb
out
imull
push
inc
lret
inc
jbe
mov
dec
call
or
jne
jnp
jnp
mov
sbb
jnp
add
sub
or
sar
mov
movsb
mov
out
xchg
movsb
mov
cmp
imul
lods
push
loope
cmpsl
jle
lret
sti
lods
xchg
mov
add
out
lret
hlt
add
push
mov
call
lods
push
data16
jmp
paddsb
add
test
movsb
loope
sbb
add
faddp
jge
push
and
fidivs
data16
lret
dec
pop
cmp
jl
xchg
stos
lods
xchg
inc
rcll
in
sbb
leave
jns
push
xlat
jmp
cmp
stos
dec
pushl
test
sbbb
jo
sub
repnz
sti
shrb
push
sbb
ret
cmp
jae
and
mov
outsl
push
push
xor
add
mov
or
sbb
lods
xchg
xor
mov
jmp
xchg
test
sbb
decl
jne
xlat
dec
idivb
mov
lret
push
mov
mov
es
push
xor
adc
aas
pop
mov
mov
or
mov
mov
aad
xor
enter
pop
aam
mov
mov
sub
out
cmp
push
add
adc
test
xlat
loop
lahf
add
inc
xchg
pushf
jl
sahf
pop
mov
fistl
fbld
insl
sub
sbb
jne
incb
ret
movsb
rcll
inc
add
xor
test
dec
out
dec
cmp
pop
lods
cltd
in
inc
push
lahf
pop
cs
push
push
sub
xlat
in
or
lock
xor
sbb
pusha
mov
movsb
testb
cmp
sbbl
lea
ds
pop
and
sub
adc
jb
call
sahf
mov
mov
and
jecxz
in
push
jns
insb
gs
jmp
push
rolb
pop
dec
dec
insl
mov
mov
add
fwait
mov
daa
jle
lock
mov
xchg
mov
loop
scas
adc
ficomps
jae
and
repnz
clc
xor
test
pop
pop
sbb
je
out
and
xchg
daa
shl
jbe
push
scas
xlat
sub
inc
lds
and
scas
push
movsb
mov
dec
cmp
and
ret
ret
dec
daa
das
jno
add
cmpsl
test
gs
movsb
mov
mov
xor
sahf
gs
cmp
xchg
or
lret
iret
sub
sbb
or
xor
push
data16
inc
aam
dec
pushl
frstor
mov
jmp
mov
jmp
pop
adc
scas
pop
inc
push
faddl
stos
in
sbb
callw
add
pmulhw
roll
mov
jb
divb
dec
sbb
inc
ret
mov
out
pop
nop
mov
push
cltd
aaa
negl
enter
dec
ficomps
sahf
dec
sahf
lds
and
xchg
sbb
mov
or
lret
test
cmp
add
adc
pop
mov
shlb
aad
lods
leave
movsl
inc
or
push
repz
stos
pop
shll
lea
cmp
int3
jb,pt
mov
test
pop
dec
inc
sbb
xchg
outsb
subl
pop
aaa
sbb
test
jne
orb
adc
mov
or
xchg
in
cmpsb
shll
out
inc
outsb
insb
or
dec
sub
into
mov
ljmp
adc
in
aam
aas
push
lds
mov
pop
xchg
scas
adc
push
pop
and
iret
fs
es
pop
cli
fcomp
fists
lods
and
mov
call
push
pusha
adc
cmovnp
ds
hlt
pop
mov
xchg
neg
stos
pop
xchg
flds
loop
enter
mov
cmp
add
add
pushf
nop
push
jg
out
jno
mov
mov
and
cmp
mov
pop
mul
dec
or
bound
inc
in
add
lods
nop
dec
push
cmpsl
jmp
in
sub
scas
and
add
repnz
aaa
stos
mov
filds
pushf
or
and
dec
call
or
mov
xchg
dec
sbb
mov
mov
lret
and
insl
jno
fs
in
data16
or
sar
sub
sub
incl
test
popa
mov
pop
sub
je
xor
xorl
xchg
add
mov
sub
scas
inc
add
cltd
clc
jecxz
fsts
ficompl
aad
call
sub
rorl
push
les
out
lcall
int3
sbb
push
mov
sahf
out
cltd
mov
aam
xor
add
into
dec
stos
pop
movb
test
cld
add
push
leave
xor
add
orl
jns
cmp
pop
rcr
into
sbb
inc
addr16
arpl
outsb
seta
shll
or
repnz
inc
push
mov
lret
inc
and
test
push
pop
mulb
call
mov
adc
shlb
popa
mov
leave
or
pushf
aaa
mov
and
pop
dec
and
or
or
inc
out
inc
daa
les
je
mov
push
out
add
and
mov
push
ret
pop
add
cmpsb
add
adc
mov
mov
sbb
sarb
enter
add
jg
in
add
pop
adc
push
into
xchg
jae
mov
enter
cmp
int3
inc
pop
fistpl
in
dec
adc
mov
lret
rcr
pop
sub
jmp
sbb
clc
and
inc
add
xor
push
lret
addl
xchg
xchg
shl
jo
cs
xor
mov
movsl
xchg
shrb
inc
jbe
lods
push
cld
push
push
loop
pusha
mov
cmp
cmp
pop
and
leave
enter
ret
daa
mov
call
cmp
lock
in
inc
loopne
xchg
shr
inc
repnz
sub
sti
pop
into
push
add
std
pop
lea
stc
push
and
sbb
sti
sub
movsl
xlat
xchg
bound
cmp
mov
push
or
add
test
jp
xor
mov
dec
lods
inc
faddl
pusha
outsl
and
mov
mov
mov
xchg
fwait
movsb
loope
lret
lock
xor
ja
into
push
jge
adc
fbld
bound
in
mov
cmp
inc
mov
icebp
jae
mov
and
aaa
ja
gs
ja
leave
pop
iret
das
pop
cmp
andl
pop
jnp
fisttps
pop
xor
jbe
aad
ret
in
iret
nop
or
cmpsl
jle
repz
std
and
dec
adc
push
xor
cwtl
mov
das
mov
mov
imul
dec
and
jle
xor
les
mov
cmp
adc
lea
push
cmp
cmc
and
adc
rcrb
mov
test
xor
stos
push
std
mov
clc
fwait
lds
pusha
mov
mov
mov
fisubs
ja
sub
leave
xorb
lods
jl
daa
inc
in
mov
add
cmp
aad
in
jns
pop
mov
mov
ds
out
hlt
gs
out
sarl
leave
movsl
jmp
inc
fstl
cli
pop
jne
ljmp
icebp
sti
mov
mov
jge
mov
insb
mov
push
push
jmp
push
lahf
mov
add
push
loopne
fisubs
sbb
call
loop
or
push
repnz
push
test
dec
add
cmc
cmc
in
push
enter
inc
mov
cld
ljmp
push
enter
das
aaa
cmpsl
cmp
sub
inc
int3
fs
jg
inc
es
inc
mov
shlb
cmc
cltd
outsl
icebp
or
js
mov
stc
inc
test
and
pop
xchg
push
sub
jmp
sub
pop
jmp
adcb
jmp
xchg
fbld
dec
sub
adc
es
lret
xchg
scas
xor
xchg
jae
mulb
mov
ss
sarb
inc
mov
xchg
push
add
es
icebp
pop
cli
aam
outsw
xor
inc
sbb
mov
lods
sub
adc
mov
aam
add
mov
mov
insb
inc
dec
lds
mov
int3
das
leave
push
lods
inc
mov
xchg
pusha
stc
ret
pushf
ret
dec
data16
add
pop
jne
push
jp
xor
test
iret
mov
shlb
adc
mulb
push
fidivl
loop
xchg
test
shll
mov
mov
fisttpll
mov
push
xor
test
aam
cmp
sub
in
ret
pop
fstpl
lahf
dec
rclb
sbb
aad
adcb
shlb
test
pop
out
push
lea
add
mov
mov
loope
lret
and
stc
adc
movsb
sbbl
fadd
xchg
cmp
add
ss
push
in
mov
mov
xor
insl
fcoms
cs
sub
pop
pop
insl
cmp
add
jp
sbb
dec
fwait
nop
sub
sbb
jle
push
iret
or
dec
cmp
add
adc
xchg
rcrb
imul
inc
out
ljmp
jae
or
pop
mov
mov
sub
mov
add
inc
mov
push
push
mov
lahf
fwait
xchg
lahf
xor
sbb
or
shll
and
je
rcll
push
scas
je
bound
sub
stos
adc
cmpsl
fsubs
mov
test
ret
rcrb
aad
sbb
cmp
pop
leave
cmp
repnz
icebp
sub
jg
pushf
sub
es
daa
mov
mov
ror
and
inc
insb
and
aam
cs
mov
sub
jne
cmpsl
pop
jnp
mov
dec
pop
inc
stos
mov
dec
cmp
jnp
xchg
jp,pt
push
sarb
dec
das
andps
repz
cmpsb
ficompl
mov
dec
pop
xchg
aad
xchg
popf
mov
pop
xchg
ret
gs
sub
jno
nop
xor
push
in
jg
or
mov
call
add
xchg
outsl
les
sub
mov
jne
daa
fs
jae
testb
mov
cwtl
dec
ret
imull
stc
push
popf
add
enter
push
cwtl
repnz
sub
adc
aad
sbb
ds
or
push
out
or
insl
cld
les
add
xor
mov
shl
mov
add
mov
cs
insl
xchg
jge
inc
andl
mov
add
cmc
xchg
xor
xchg
lcall
pop
mov
in
dec
pop
scas
orb
lcall
fnclex
imul
gs
and
aad
test
add
dec
filds
pop
lcall
and
stos
mov
cmpsl
insl
or
data16
int
aas
outsb
movsl
and
push
loope
push
jne
mov
mov
decl
aaa
ds
cwtl
inc
and
jne
dec
xchg
hlt
and
jecxz
jne
es
inc
cmp
and
add
jle
mov
daa
lcall
imul
iret
push
bound
adc
inc
mov
mov
mov
jle
cmc
sub
mov
mov
rcrb
mov
jl
mov
xchg
dec
and
inc
push
out
repnz
cld
lret
or
idiv
mov
movsb
mov
js
ljmp
idiv
fbld
xlat
test
or
int
cmpsb
into
adc
mov
mov
jmp
hlt
dec
jno
sub
sbb
jecxz
mov
ja
pop
mov
je
pop
sar
popa
sub
out
cmpsl
mov
jge
mov
ds
push
rcrl
push
dec
sbb
ss
push
fdivrp
sarb
sarb
or
enter
xchg
xor
test
cmp
lea
jg
cmp
push
int
scas
or
outsb
mov
and
mov
jae
icebp
mov
dec
outsl
lcall
into
and
mulb
aas
mov
dec
out
stc
jecxz
xor
add
sub
nop
aad
jl
aad
adc
xchg
out
xor
cmp
jl
icebp
adc
imul
mov
enter
xchg
aas
imul
pop
inc
or
cli
ret
lods
cmp
sub
mov
fldl
shr
xor
sub
jmp
fldl
and
jg
sahf
out
mov
dec
xchg
imul
testb
in
cmpsl
sti
add
mov
cmpsl
ljmp
idivb
arpl
test
xor
xor
orb
sbb
sbb
mov
pop
cltd
push
inc
add
insl
xlat
mov
cmpsl
push
xchg
cmpsb
jmp
mov
notb
ds
fmuls
pop
jne
mov
jmp
mov
cmp
mov
cmpsl
out
div
inc
or
jbe
or
call
out
frstor
push
bound
mov
in
lods
push
add
nop
mov
sub
es
ficoms
loopne
and
sub
cmp
xchg
mov
cmp
inc
push
mov
cli
iret
imul
jb
ret
or
xchg
or
and
add
jmp
or
inc
sbb
insb
push
lret
push
or
scas
cmpsl
enter
push
fistps
test
jmp
cmp
cmp
jne
stos
nop
scas
js
xchg
rcrb
das
arpl
adc
jle
add
cld
stos
mov
mov
inc
pop
cmp
sbb
pop
push
mov
call
or
shlb
mov
and
cmp
adc
out
cmp
dec
or
push
xor
pop
ja
movsb
inc
stc
jb
or
jbe
negl
dec
out
push
jnp
jl
cltd
push
dec
mov
fisubs
sahf
mov
xorb
jg
fildl
loopne
sarl
and
dec
cmp
sbb
add
popf
xchg
mov
mov
jb
dec
mov
dec
icebp
sub
xor
pop
out
cmp
dec
push
sahf
push
fnstcw
or
sbb
mov
sarl
mov
incb
ja
push
stos
mov
mov
rolb
popf
push
outsb
jbe
xlat
mov
adc
mov
outsb
cmpsl
sti
jne
out
xor
std
scas
jp
mov
and
loopne
pop
xchg
cmpsl
jns
rcrl
inc
jge
loopne
or
in
call
and
lds
inc
mov
scas
xchg
mov
je
dec
fdivp
pop
loop
gs
mov
jp
adc
jmp
ficompl
in
shrl
mov
in
xchg
in
repnz
adc
add
out
in
mov
hlt
enter
cltd
dec
xchg
test
xchg
sub
and
ds
ret
fs
std
clc
add
dec
stc
lret
cld
leave
push
sbb
adc
outsl
xchg
dec
into
xor
and
xchg
jae
and
xchg
cmpsb
ss
sub
lock
clc
shll
sub
jbe
gs
lret
cmp
sbb
fcoms
xor
dec
loop
xchg
adc
xchg
imul
fstp
mov
aam
lods
mov
adc
jbe
mov
inc
jge
sbb
fidivrs
push
gs
jns
push
jae
pop
push
jo
and
mov
imul
push
lock
mov
sbbl
push
lahf
adc
inc
inc
sbb
cmp
fwait
addr16
mov
rclb
ss
out
pushf
cmp
dec
cli
add
inc
bound
call
loopne
xchg
pop
xchg
leave
jl
cmpsl
loope
or
dec
jne
loop
test
cmp
add
nop
or
cwtl
test
pop
fistpll
dec
fsubrs
mov
faddp
aam
pop
mov
mov
and
xor
xor
pop
inc
out
cwtl
stc
ffree
lock
fbld
mov
repz
js
xchg
jo
out
mov
aam
cli
out
pop
popf
imul
xchg
ljmp
sub
push
cmp
je
negl
sbb
lock
inc
ja
inc
aam
or
mov
test
div
xchg
mov
testl
and
movsb
jb
add
jecxz
jmp
mov
rorb
outsb
inc
mov
inc
cmp
or
into
jbe
and
rolb
mov
stc
lods
test
mov
mov
iret
and
xchg
jo
xchg
imul
aas
mov
pop
xor
jno
lret
cmc
mov
mov
fisubs
icebp
aaa
imul
mov
popl
cmpl
fstps
popf
jno
pop
adc
mov
add
sbb
out
bound
lea
enter
fnstcw
loopne
push
les
push
addr16
dec
ljmp
lahf
lock
fld
std
and
mov
mov
push
push
mov
adc
in
test
push
aas
cmpb
jp
mov
or
dec
idivb
lods
pop
stos
pop
lret
jae
std
test
and
imul
ror
mov
or
xor
jl
in
nop
xadd
jg
test
sbb
xorb
test
popf
loopne
fcoml
stos
pop
jp
xchg
pusha
mov
fdivrp
sbb
ljmp
push
test
leave
cmp
cmovge
js
inc
and
icebp
test
sub
jl
lret
sar
mov
pop
pop
out
inc
scas
int
push
dec
iret
mov
sub
test
jo
pop
jae
imul
push
or
dec
xchg
scas
xchg
or
adc
pop
iret
jge
cmp
loopne
push
adc
cmp
push
inc
mov
sbb
inc
pop
xor
mov
dec
in
icebp
out
inc
ljmp
jb
inc
sbb
mov
pop
stos
icebp
push
pop
scas
add
xchg
popa
out
add
lock
mov
hlt
or
xchg
leave
add
imul
test
push
pop
pop
fwait
iret
xchg
lds
xchg
movsl
jp
int3
insl
out
popa
pop
or
sahf
nop
lds
jge
dec
push
xchg
adc
add
cmp
fs
add
shll
sbb
in
lds
and
add
mov
icebp
inc
xchg
les
pop
push
aas
fists
loope
les
mov
xchg
dec
stc
add
jns
mov
jne
xorl
in
and
cmp
pop
mov
push
insb
dec
imul
pop
cwtl
push
push
push
pop
push
mov
sti
cmp
test
lods
addr16
stc
les
call
adc
lret
add
loop
sbb
data16
push
push
out
aam
cmp
sbb
jp
and
xor
fstps
push
lods
jbe
lock
adc
stos
sahf
cmp
hlt
std
sub
es
sahf
mov
or
shll
mov
mov
test
test
xor
es
call
cwtl
cs
rcll
and
sbb
or
xorb
sub
adc
push
setge
iret
jle
test
adc
cwtl
pop
out
clc
and
cmp
xchg
or
inc
sub
jne
inc
popa
pop
repz
arpl
stc
jb
adc
mov
into
adc
aas
cli
in
lcall
aas
add
xor
dec
pop
pop
jne
mov
and
cltd
or
inc
mov
addr16
jnp
daa
je
cmpl
fs
je
sbb
stc
fisttpll
push
negb
xor
jne
dec
cli
jbe
test
dec
inc
shll
mov
pop
xchg
mov
fcomip
xor
xor
cmpl
push
stos
bswap
xor
fs
shll
punpckhdq
sbb
adc
adc
dec
jp
nop
cli
jmp
fidivrl
inc
xor
lcall
lret
aam
lcall
movl
sbb
bound
shrb
mov
sar
outsl
ficomps
mov
mov
mov
xchg
bound
adc
out
mov
cmp
jle
mov
push
mov
aam
test
shl
test
out
sbb
lahf
inc
mov
rcl
ja
cmp
js
cs
icebp
jg
nop
pop
add
jg
push
cld
aam
jg
lret
sub
imul
cmp
lahf
sub
clc
push
adc
in
ss
fwait
jns
fs
out
popf
lcall
mov
mov
clc
loop
shl
std
mov
cmc
or
imul
xchg
cmp
mov
out
add
das
notb
loopne
sahf
clc
push
push
pop
fadd
push
push
movsl
add
pop
addb
or
mov
jae
pusha
adcl
sbb
ss
or
std
aas
les
xor
add
adc
add
scas
mov
mov
movsb
cmp
cltd
push
fs
cmp
sbb
loope
jnp
or
add
mov
loop
dec
mov
loopne
inc
int3
and
or
mov
into
and
icebp
pushf
and
pop
push
jmp
dec
inc
fnstsw
test
arpl
stos
int3
dec
add
outsb
xor
int
mov
mov
hlt
mov
pop
jl
ficoml
lock
push
xchg
je
leave
push
mov
je
lea
dec
xchg
mov
stc
lret
movsl
add
adc
or
cmovnp
mov
pop
push
adc
scas
sbb
fbstp
andb
mov
push
adc
sbb
push
lret
loopne
adc
in
jae
sub
lcall
xchg
sbb
or
mov
sahf
jp
inc
inc
aam
imul
xchg
pop
mov
sub
sub
mov
jb
icebp
mov
xor
movsb
scas
jnp
or
insb
es
inc
inc
or
js
add
add
sahf
rorl
stos
and
xorb
hlt
and
sbb
scas
pop
mov
clc
cmp
data16
sahf
and
cmpsl
cmpsb
iret
xor
xor
iret
mov
repz
push
scas
test
test
shll
fcom
sub
xor
xchg
std
mov
mov
lret
xor
imul
sahf
sub
mov
adc
repz
sbb
les
es
xchg
push
xor
mov
or
xor
jae
push
sub
in
push
addr16
cli
rcr
inc
sbb
or
std
stc
movsl
lret
add
in
out
cltd
sbb
cmpsl
xor
or
push
push
bound
xchg
movsb
cmp
shr
cmpsl
inc
inc
dec
pop
rolb
sbb
aam
pop
xchg
stos
leave
shl
or
pop
adc
int
jno
ljmp
cmc
pop
pop
cmp
push
push
outsl
ljmp
mov
or
iret
les
cmp
int3
bound
arpl
negb
arpl
pop
xorl
or
xlat
lret
mov
xor
push
pop
inc
push
loope
push
popa
adc
outsl
dec
pop
movsb
test
mov
addr16
in
mov
mov
push
out
adc
insl
scas
arpl
jg
popf
dec
cltd
and
xchg
adc
gs
cmp
xor
sub
in
js
adcb
pop
push
adc
imul
mov
imul
sahf
daa
adc
lea
aaa
add
jne
popa
das
jmp
add
aam
and
jmp
lahf
stos
ljmp
insl
scas
and
jle
lds
mov
shll
sahf
add
les
out
push
cmp
imul
xor
mov
mov
rclb
xchg
mov
negl
mov
negb
mov
jg
je
add
dec
in
insl
jmp
or
icebp
add
sub
fldl2e
sahf
aas
pop
pop
cmc
mov
negl
mov
sub
mov
jmp
in
cmp
mov
mov
lock
ds
fcmovnb
add
or
iret
mov
mov
xlat
cltd
lahf
nop
scas
mov
fidivl
pop
in
push
shrb
int
sbb
add
pop
leave
sbb
pop
xchg
push
sahf
cmp
and
stc
popa
out
jo
cmpsb
cmp
mov
idivl
adc
and
xchg
sub
bound
movsb
jbe
and
xor
into
xchg
std
mov
mov
test
in
inc
aaa
cwtl
loopne
sub
into
out
lock
outsb
sub
fstl
jbe
cmp
nop
or
incb
pop
push
cmp
cmpsl
data16
pop
cld
xchg
sbb
lcall
out
ljmp
mov
bound
or
hlt
cmp
pop
and
pushf
dec
fucomi
out
testb
jp
hlt
add
inc
inc
sub
in
mov
mov
les
mov
outsl
stos
mull
popa
test
add
out
sbb
mov
cmp
repnz
sbb
jno
add
fisttpll
jge
push
out
popa
dec
mov
cltd
mov
mov
mov
dec
pop
jo
pop
lods
xor
push
and
cmp
test
mov
nop
out
mov
and
inc
test
fwait
in
and
ret
ret
sbb
dec
loopne
jo
filds
mov
mov
dec
cmp
fnstenv
jbe
in
aaa
pop
pop
das
in
cmp
dec
and
lock
shll
in
or
push
loop
icebp
cli
das
or
cs
cmp
xchg
stos
leave
cmpsb
aaa
push
xchg
sub
js
push
je
xchg
lret
pop
clc
shr
jmp
gs
mov
inc
aas
ret
xchg
outsb
movsb
jae
lcall
pop
sahf
mov
mov
xor
xlat
sbb
scas
adc
outsb
jl
xchg
xchg
dec
pop
lret
ss
jge
andb
cmp
sahf
insb
nop
mov
pop
jno
ret
out
sub
mov
dec
pop
dec
mov
cmp
loop
sub
dec
push
es
data16
fimuls
stc
icebp
cmp
hlt
sbb
sbb
lds
scas
jl
mov
loop
jg
lods
pop
loopne
cmp
out
fisubrs
push
popl
mov
loop
mov
adc
sbb
fbstp
xchg
mov
lcall
pop
out
fwait
add
dec
nop
xor
add
inc
sahf
cs
dec
shll
cmp
mov
mov
adc
repz
mov
stos
and
dec
dec
xchg
or
sub
fmul
lret
xor
jo
pop
jmp
ficompl
push
push
sbb
test
jmp
in
dec
and
pop
out
push
test
adc
sub
mov
out
fcoms
fidivl
cmp
push
or
fadds
or
jo
and
lods
push
sahf
inc
call
mov
in
scas
add
mov
adcb
rorw
int3
jp
repnz
popf
sub
mov
mov
push
mov
lret
push
inc
mov
or
mov
fldcw
jl
adc
adc
aad
rolb
or
jmp
and
sbb
ror
rclb
jno
push
std
push
cmp
flds
mov
cmc
mov
xor
sti
mov
std
inc
cmpsl
cld
push
push
cmp
in
out
ret
fiaddl
mov
lods
push
cld
lods
push
addr16
rcll
cs
negl
sti
push
inc
insb
sub
repnz
in
ss
leave
cli
rorl
mov
jo
mov
repnz
fwait
in
inc
stos
pop
pop
daa
icebp
fs
aad
fmuls
out
rcr
adc
xor
movsb
loopne
aam
fs
xchg
push
dec
lock
aam
dec
xchg
adc
pop
scas
lds
sbb
dec
rclb
es
mov
xchg
les
mov
leave
dec
aas
push
mov
or
insb
lret
inc
cld
cmp
dec
mov
in
sbb
and
push
add
xchg
lock
into
push
cmp
idivb
push
orl
sahf
mov
outsl
fnsave
push
in
xchg
sub
jge
aas
adc
cli
mov
loope
stos
inc
les
xor
lods
jne
fcmovu
push
test
outsb
into
lahf
aad
ret
lahf
mov
test
add
enter
in
push
fucom
dec
lds
popf
mov
push
add
fisubrl
adc
das
jae
lods
xor
into
clts
add
outsl
add
jno
cltd
mov
pop
fs
sbb
pop
mov
mov
es
push
lret
lret
mov
addr16
stc
out
mov
mov
cmp
cli
push
inc
clc
orl
dec
les
jmp
aas
push
test
jge
dec
add
incl
jmp
add
pop
push
hlt
inc
sub
jmp
js
dec
push
sub
addr16
dec
cltd
imul
fnstsw
subl
and
imul
add
sbb
xlat
pop
push
or
and
je
iret
dec
loope
andl
repz
cli
adc
and
inc
mov
inc
dec
nop
mov
icebp
in
jne
fisubs
cmpsb
sbb
mov
push
in
adc
sahf
or
xor
xor
dec
inc
push
sub
out
adc
sti
xchg
or
clc
in
or
and
fstps
aad
push
jge
inc
jl
adc
rcll
jp
insl
jns
bound
and
aad
add
sbb
sbb
sub
ljmp
dec
out
inc
jns
push
xchg
and
xchg
xor
jecxz
xchg
jecxz
sti
jp
pop
ret
sahf
scas
jb
xchg
xor
les
push
cwtl
popa
arpl
mov
sub
ss
in
movsb
scas
cli
in
dec
ljmp
icebp
xchg
or
mov
in
push
dec
dec
or
pop
pop
mov
dec
jo
loop
in
aas
cmp
jb
sub
scas
repnz
xor
mov
jg
cmc
leave
cmp
and
xchg
hlt
pushf
mov
js
aam
loopne
lds
jp
or
push
xor
lcall
ljmp
mulb
mov
mov
or
movsl
xchg
cmpsb
jno
dec
lret
mov
jno
test
push
adc
sbb
jo
pop
in
stc
pop
sub
lock
mov
cmpsb
jo
es
xor
gs
aas
lret
std
jae
adc
xchg
pushf
push
arpl
and
stos
js
ds
jbe
arpl
fldcw
mov
stos
cmp
jp
xorb
fisubl
aas
xlat
les
scas
pop
or
jne
imul
lcall
cltd
sbb
mov
and
push
mov
or
mov
jl
xchg
and
cld
out
std
in
mov
mov
mov
lcall
mov
lcall
mov
lret
adc
ret
xchg
movsb
leave
test
add
sub
es
fidivrl
add
push
mov
xlat
dec
add
xchg
or
sbb
daa
jg
fnstenv
lds
lds
adc
jne
int
push
mov
dec
fidivs
inc
push
imul
addl
push
jp
inc
fxch
test
inc
cmc
fs
add
sub
popa
cwtl
mov
repz
ss
dec
stos
add
inc
xchg
inc
jno
aas
push
xchg
cld
push
es
adc
imul
mov
push
cmp
xor
mov
fistps
sbb
add
cmp
sub
xchg
filds
mov
push
mov
add
arpl
mov
mov
or
add
in
mov
jb
xchg
xchg
mov
repnz
mov
adc
or
adc
cwtl
sub
lds
pop
mov
out
adc
inc
shll
cs
pop
push
stc
inc
xchg
dec
and
fldenv
jnp
outsb
lds
dec
movsl
jmp
mov
cmp
adc
fdivrs
jno
pop
mov
inc
emms
mov
lock
mov
dec
aaa
jecxz
jnp
pop
jle
cmpsl
pop
cli
test
cwtl
mov
repz
xor
mov
pushf
aas
mov
jmp
shr
mov
int3
fisttpl
add
and
inc
cmp
push
call
inc
push
lods
shrb
sahf
out
cltd
inc
dec
sbb
jns
add
stc
lret
js
push
jecxz
and
inc
cwtl
pop
mov
test
movl
sbb
cmp
pop
fsubl
les
das
insl
jbe
aas
mov
lret
in
cs
int3
insb
cmp
ret
dec
push
hlt
ds
jnp
aam
in
ret
dec
adc
or
inc
aad
or
pop
in
xchg
pop
xor
jb
cmpb
add
mov
out
push
dec
adc
aaa
push
ljmp
sahf
into
jns
jge
and
leave
push
sti
ds
push
sbb
add
sub
divb
in
dec
and
inc
insl
and
dec
fnstsw
out
pop
xchg
es
dec
cmpsl
mov
jmp
push
icebp
rcl
add
add
xchg
filds
lea
push
jl
push
cmp
mov
dec
pop
mov
or
imul
cmp
imul
movsl
adc
push
cmp
xchg
mov
push
pushl
in
adc
pop
stos
pop
pop
scas
mov
cld
cmp
loop
pop
push
adc
ror
jnp
dec
jae
pop
loopne
js
pop
dec
add
sbb
add
lock
popl
pusha
xchg
add
inc
pop
cmp
and
push
mov
lock
sbb
scas
int
repnz
lock
push
xchg
mov
lods
inc
ljmp
mov
ja
nop
sti
ffree
push
add
in
jbe
sbb
insb
shrl
and
mov
cmpsb
xchg
mov
icebp
xchg
insl
cmp
adc
mov
int3
icebp
dec
sarb
inc
pop
sti
dec
lcall
mov
hlt
cmpsl
add
xor
xor
sbb
add
incb
addr16
jo
clc
jbe
stos
shl
out
test
or
cmpsb
jne
xor
test
add
mov
cmc
sbb
mov
mov
ret
xor
sti
idiv
in
inc
fistpll
mov
jl
adc
clc
cmpsl
pop
xor
jl
scas
jbe
push
or
mov
nop
inc
mov
mov
in
xlat
cmpsl
push
or
mov
fisttps
mov
xor
pop
cli
leave
pop
jnp
or
push
mov
shrb
inc
popf
dec
or
jno
cmpsl
add
int3
pop
dec
out
inc
mov
sbb
cmp
inc
pop
ds
pop
test
fisubrl
lods
mov
aas
movsl
dec
pushf
test
cmp
pop
mov
loopne
sbb
sbb
std
sbb
data16
fimull
sbb
inc
push
mov
iret
mov
daa
jl
loop
push
pop
std
cmpsl
adc
jg
fisttpl
enter
push
mov
data16
int
repz
aad
js
dec
jne
pop
and
aaa
andb
mov
lods
push
test
sub
test
movsb
pop
inc
xchg
mov
push
aam
dec
xor
subb
sbb
xchg
xor
loope
cs
pop
fistpll
inc
sbb
and
pcmpeqw
lret
mov
neg
xor
sbb
test
mov
hlt
dec
cs
or
jbe
fisubrs
ficoms
xchg
adc
xchg
xchg
xchg
cli
mov
sub
mov
mov
xchg
and
aam
jne
int3
jmp
and
dec
xchg
jnp
cmpsb
stos
outsb
in
in
jmp
insl
into
fs
mov
sbb
popa
sub
test
lods
push
mov
movsb
fldcw
daa
inc
dec
out
add
insb
jmp
dec
out
aam
fisubs
shll
cld
mov
xchg
test
xchg
push
or
push
mov
cmp
adc
and
push
sub
loop
jns
out
xor
je
int
popf
fcmovnu
mov
push
jle
clc
cld
and
jno
les
cmp
rorl
shlb
out
leave
mov
push
push
ljmp
push
mov
jo
pop
test
pop
sbb
fwait
jb
adc
rcrb
scas
push
pop
inc
cs
pop
fldl
mov
and
or
push
mov
roll
pop
in
push
stc
jo
xchg
sbb
sbb
add
lods
pop
mov
adc
inc
out
jb
cwtl
into
aas
mov
jnp
mov
fnsave
imul
fucomp
add
xchg
int
jnp
ret
jmp
adc
std
popf
lea
sub
pop
aas
lock
xchg
mov
cs
lcall
push
or
movsb
push
dec
dec
decb
lods
add
push
stc
int
adc
inc
pmulhw
lahf
stos
sti
jg
xchg
icebp
gs
pushf
push
mov
lcall
aaa
cmp
shrl
stos
cwtl
push
xlat
mov
sbb
arpl
negl
cli
mov
fsub
jmp
cmp
lock
sti
adc
loope
push
movsb
xchg
jbe
cmpsb
js
push
sub
nop
dec
dec
jbe
cmp
push
mov
aam
repnz
sahf
test
and
shrl
js
sbb
fs
dec
xor
iret
cltd
jmp
test
xchg
fimuls
test
mov
les
icebp
es
subl
mov
scas
andl
sbb
adc
cmp
popa
and
aas
popf
clc
rorb
and
movl
jae
pop
cmc
movb
inc
bound
je
adc
xorb
or
mov
cwtl
dec
and
cld
sub
xchg
mov
movsl
pop
sbb
aaa
ja
in
xor
pop
out
lods
mov
pop
out
lds
dec
fstpt
jg
imul
or
stos
shlb
mov
mov
cmp
xchg
xchg
jmp
mov
jne
negl
loope
repnz
pushf
inc
jle
sub
lea
aam
inc
movsl
fiaddl
sub
pop
mov
cmp
xchg
cltd
jns
or
iret
shlb
add
mov
adc
leave
dec
cwtl
xchg
or
dec
je
cmpsb
and
fisubl
sub
mov
jne
lret
xor
ljmp
push
xor
xor
outsb
push
sar
out
adc
ret
xchg
mov
or
test
cmp
pushf
iret
mov
std
add
pop
repz
jge
add
mov
cmc
push
ds
mov
jb
das
stos
push
mov
mov
stos
iret
jbe
xchg
clc
cli
xorb
jno
inc
add
adc
xchg
jmp
lahf
inc
loop
xchg
cmpsb
sub
jge
lods
in
je
cltd
lret
int3
pushf
inc
icebp
add
sub
xor
popf
xor
adc
push
lods
add
jno
jl
mov
imul
sub
adc
jae
push
jl
int
scas
popf
es
jb
icebp
and
mov
leave
ficomps
insl
movsb
fsubr
orb
cmp
lret
out
adc
sbb
jg
push
movsl
movsb
je
cmp
fcmovnb
js
addr16
arpl
shll
andb
xchg
lea
jle
sub
dec
xor
aaa
add
cmp
ja
xor
dec
xchg
mov
push
pusha
andb
adc
incb
add
shrl
add
fnstsw
add
jnp
cld
adc
adc
addr16
fistl
dec
scas
push
jnp
lock
mov
pop
adc
in
je
out
or
lea
lret
popf
lret
lds
jno
fcmovbe
loopne
lahf
outsb
lret
cmp
sub
aam
imul
push
jg
mov
add
adc
mov
adc
mov
arpl
mov
push
jg
sub
sbb
and
loopne
sbb
fistps
jns
push
int3
add
jo
adc
neg
sbb
xchg
shll
lods
ficoms
shrb
xchg
dec
int3
adc
in
mov
push
fsubrl
arpl
shll
mov
notb
popa
and
and
xor
and
jae
aaa
xchg
lret
int3
cmp
sbb
jle
cmc
mov
pop
xchg
push
pop
pop
clc
aaa
jecxz
ret
adc
inc
pop
outsl
fmull
mov
pop
inc
dec
push
push
xchg
lahf
push
mov
mov
js
movsl
test
ss
in
mov
out
or
mov
sbb
testl
outsb
xor
xlat
fs
addl
cmp
pop
and
cmp
arpl
lock
jo
mov
jno
cli
adcb
sbb
inc
add
mov
cmc
std
sub
add
les
and
push
out
jl
rorb
sbb
pushf
pusha
subb
xchg
mov
jecxz
and
xchg
push
lahf
ds
inc
sbb
cltd
and
mov
jmp
cli
or
lahf
add
and
dec
xorl
inc
fisubl
icebp
xor
sbb
sbb
add
inc
adc
jae
sub
add
mov
andl
les
daa
mov
xor
out
test
fisttps
push
fisttpll
popf
rcll
cmp
je
mov
stos
push
add
test
pop
push
dec
int
int3
les
cs
jp
clc
in
rorl
push
or
mov
xor
iret
or
xchg
lea
sbb
add
fstl
in
icebp
push
and
cmp
ret
pop
jecxz
jmp
inc
inc
xchg
out
mov
add
lahf
cmp
push
cmp
jg
les
or
nop
jecxz
xor
repnz
imul
loope
and
ja
adc
xchg
mov
xor
mov
ss
iret
decl
adc
and
mov
mov
pop
dec
dec
adc
js
in
or
into
hlt
cli
test
fwait
enter
or
mov
js
stos
sub
movsb
loop
hlt
cmc
mov
dec
add
mov
xchg
mov
enter
sub
cmpsb
loop
jo
and
cmc
rclb
push
or
imul
test
cmp
rclb
nop
lods
sub
jmp
lret
nop
cmp
mov
dec
xor
sbb
mov
aas
pop
insl
ds
mov
mov
mov
addb
pop
inc
jb
xor
out
sub
out
lods
push
es
or
sub
stos
int3
jo
inc
int
loop
daa
daa
cmpb
ficomps
faddl
inc
aas
inc
andl
mov
adc
sub
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
aam
xor
clc
lcall
ja
addr16
xchg
or
mov
repnz
xlat
std
stos
mov
in
xchg
mov
dec
pop
fwait
adc
xchg
sti
cs
cltd
inc
pop
cmc
insb
lahf
inc
push
pop
in
into
in
jno
pop
push
xor
popa
scas
push
mov
xchg
mov
jecxz
or
mov
in
mov
mov
pop
outsb
int
cmp
repz
and
cmpb
push
ret
jmp
mov
mov
push
pop
sbbb
add
jge
mov
fsub
xor
dec
stos
fisttpl
lds
out
ss
js
mov
jns
add
mov
mov
dec
mov
rclb
imulb
sbb
lea
cmp
in
leave
lods
lea
cmc
mov
into
sub
add
fs
fcoml
inc
mov
stc
sub
cld
movd
jb
add
jecxz
into
jg
mov
jnp
lds
and
or
mov
mov
mov
shll
sbb
push
jnp
mov
into
push
or
xchg
adc
ds
pop
mov
push
pop
mov
xchg
xchg
and
outsb
andl
hlt
dec
jne
fmul
sub
push
sbb
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
andb
sbb
mov
