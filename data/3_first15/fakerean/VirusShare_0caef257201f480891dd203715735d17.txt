push
call
test
jne
call
cmp
jne
xor
inc
ret
xor
ret
push
mov
sub
movl
mov
or
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
xor
push
pop
div
mov
mov
add
mov
mov
add
movzbl
mov
and
movzwl
and
movzbl
sub
mov
add
mov
jmp
mov
shr
mov
mov
mov
mov
add
movzbl
mov
and
movzwl
and
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
leave
ret
push
mov
sub
movl
mov
and
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
push
push
push
mov
push
push
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
andl
andl
andl
push
call
pop
movl
jmp
xor
inc
ret
mov
movl
movl
cmpl
jne
push
call
pushl
pushl
pushl
pushl
call
add
cmp
jne
movl
jmp
mov
or
mov
mov
and
mov
je
mov
mov
jmp
movl
mov
xor
divl
mov
mov
and
mov
mov
mov
push
push
push
call
add
cmp
je
mov
mov
and
mov
mov
mov
jmp
movl
call
xor
jmp
call
push
call
push
push
push
push
call
push
push
call
push
call
mov
mov
pop
pop
pop
pop
leave
ret
int3
int3
int3
xor
lods
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
add
gs
mov
or
xor
shrl
jnp
test
int3
mov
mov
push
jno
cmc
mov
lock
fwait
xor
adc
jns
mov
or
cmp
sub
repz
xor
dec
popa
xchg
test
incl
or
inc
jg
and
mov
clc
lret
jmp
inc
jg
xor
push
lcall
and
andl
xor
jno
add
xchg
inc
xor
dec
push
dec
repz
sahf
ret
xchg
int3
mov
lea
fsubs
and
push
repnz
mov
lds
loopne
pop
xchg
pop
jmp
mov
stos
ss
pop
add
xchg
insb
jb
and
adc
dec
sbb
repnz
jnp
out
jb
popa
sub
mov
jle
outsl
pusha
push
in
xchg
or
mov
shlb
sbb
mov
popa
dec
daa
mov
push
xchg
xor
mov
sbbl
cwtl
sub
cmp
jns
adc
inc
pop
leave
mov
dec
cmp
jb
js
out
repnz
es
fbld
fisubl
adc
flds
sub
test
ret
push
pop
gs
sahf
inc
pusha
stos
cltd
mov
pop
pop
add
fsts
mov
add
push
cltd
add
pop
sub
test
sbb
mov
mov
jbe,pn
inc
mov
mov
test
dec
mov
xor
cld
testb
sbb
std
inc
xchg
pushf
xchg
cmp
aam
fidivrl
lret
add
jg
mov
jno
xor
rcll
sub
es
sarb
push
ret
xor
pop
clc
sub
repz
adc
arpl
xadd
loope
in
loope
loop
xchg
dec
sub
icebp
int
bound
inc
pop
inc
and
in
push
jp
dec
out
add
lods
insb
push
jle
push
pushf
jbe
and
or
imul
and
jle
lret
pusha
adc
push
sub
jl
or
sbb
gs
dec
lods
adc
jg
sarb
sub
cltd
xchg
mov
jmp
xchg
aad
or
adc
in
xchg
jp
nop
push
or
cmp
cmpsb
mov
push
fs
and
push
mov
cltd
das
sub
and
mov
jb
mov
lock
inc
stos
pop
mov
xor
mov
mov
or
jge
xor
add
test
pop
ret
xor
es
xchg
xchg
dec
push
pop
decl
popa
xchg
adcl
addr16
inc
loope
fsubp
arpl
outsl
sub
sti
sarb
stc
in
sbb
or
stos
push
fucom
fisubl
jbe
inc
mov
es
jo
push
pop
orl
jp
jne
repz
pop
pop
add
sbb
lcall
das
fistl
ja
rolb
adc
xchg
add
xlat
push
cmc
aam
and
bound
mov
fwait
jl
xor
mov
push
ret
js
lcall
lcall
pop
pushf
shll
jmp
test
mov
mov
mov
fnstenv
push
cmp
inc
add
ja
xor
aas
arpl
push
cmp
das
cmpsl
call
leave
enter
lcall
push
data16
push
arpl
jp
lcall
repz
cli
les
in
xor
mov
fmull
jb
ja
fmul
lods
push
clc
mov
xor
mov
dec
dec
lret
pop
ja
lods
cmp
pop
cs
sub
movsb
or
sub
push
inc
adc
dec
sbbb
sbb
int
push
dec
je
jnp
sub
add
pop
subb
sbb
test
mov
cmp
mov
push
fnstcw
popa
shlb
call
sub
ljmp
push
gs
xchg
mov
pop
je
xor
push
sbb
loope
test
loopne
jnp
mov
inc
adc
test
mov
clc
cs
add
and
out
ss
fmull
xchg
fisttpl
in
mov
jl
or
mov
aaa
call
ljmp
outsb
icebp
test
add
cmp
pop
pop
jne
js
int
inc
imul
jp
mov
xor
outsb
pop
dec
gs
int3
fcos
push
ret
pop
lods
cli
dec
dec
andl
bound
and
in
addr16
mov
jb
push
sti
cmp
fisttpl
fisubrs
xchg
cmc
mov
xchg
cmp
iret
lds
daa
pop
rorl
cmp
sbb
cmp
mov
xlat
jg
aaa
lods
ds
bnd
fdivrp
sub
gs
mov
cmp
xchg
push
fwait
xchg
jne
push
add
xor
jno
push
push
adc
pop
loope
je
xorl
jb
push
inc
push
push
pushf
fnstenv
leave
xchg
sub
lret
inc
cmp
inc
mov
adc
mov
mov
jg
fcompl
inc
pusha
pusha
inc
int3
les
sub
cmp
cmp
fdivs
testb
insl
rcrl
in
or
and
or
cmc
incb
out
imul
xor
in
outsl
push
push
mov
iret
fisttps
add
imul
sub
xchg
cmc
adc
xchg
nop
out
std
insb
mov
xchg
jle
out
xchg
loopne
adc
lds
jne
nop
pop
mov
in
cmp
pop
pushf
sahf
into
jle
into
dec
add
cmpb
xor
cld
xchg
outsl
ds
fldt
dec
pop
jb
mov
mov
aad
xor
mov
hlt
gs
push
pushf
mov
shll
insl
fiaddl
cmp
call
scas
and
pop
stos
and
cwtl
and
xchg
sbb
mov
inc
mov
and
sub
inc
mov
and
add
data16
addl
lods
fldt
es
sub
xchg
or
push
inc
mov
in
add
push
test
scas
jmp
cltd
cmc
scas
push
outsl
jno
mov
xchg
sbb
cwtl
sub
jmp
insb
lret
stos
lcall
mov
sbb
outsb
int
jo
decl
pop
push
rclb
scas
jp
jbe
into
out
or
push
les
jne
pop
cmpsl
fwait
mov
dec
loope
call
cs
or
rol
std
jmp
inc
mov
outsb
add
fbstp
cmp
xchg
sbb
test
cmp
enter
push
pop
sub
adc
ja
pop
mov
and
orl
push
and
mov
sbb
push
or
and
imul
mov
movsl
test
and
adc
mov
sub
mov
fdivs
dec
dec
xor
add
add
imul
dec
adc
pop
xor
sbb
pop
sbb
jg
cmc
cmpsb
andb
pop
xchg
cli
dec
stos
jbe
incl
lret
inc
add
or
or
loope
pop
outsb
out
movsb
sub
iret
imul
aas
aas
ljmp
mov
add
jb
xorb
iret
cs
in
int3
jl
sbb
imul
clc
xchg
or
jle
push
rep
sbb
test
push
mov
mov
dec
sbb
enter
inc
popl
or
popa
lds
xchg
clc
lock
push
lret
enter
ljmp
jo
lret
in
popf
mov
push
inc
pop
pop
repz
add
adc
test
xchg
pop
lock
sub
and
pop
mov
mov
adc
shll
push
and
sahf
push
xlat
or
arpl
test
rolb
push
sbb
sub
addr16
pop
sahf
lret
hlt
sub
leave
and
gs
fs
jmp
cmp
push
rolb
ljmp
sub
hlt
into
mov
cmp
ds
scas
rcll
es
sbb
rorl
jmp
rolb
lahf
push
dec
rclb
dec
shrb
cmp
scas
sub
xchg
dec
rorl
sbb
lret
adc
or
cmpsl
inc
jmp
inc
stos
mov
push
pop
adc
add
outsb
cwtl
iret
dec
xorb
xchg
dec
inc
xchg
xchg
je
sub
inc
lock
int
out
insl
push
adc
jl
jmp
push
scas
outsb
dec
xchg
dec
jle
xchg
sahf
push
mov
outsb
addr16
xor
jecxz
lahf
cmpb
repnz
arpl
aas
inc
or
lods
push
add
jmp
loop
jo
outsl
xchg
xchg
mov
push
pusha
hlt
imul
sub
sti
or
sub
and
adc
mov
stos
popa
mov
pusha
repnz
xchg
xchg
call
sti
dec
cmp
hlt
idivb
and
arpl
sti
pop
popf
adc
mov
icebp
jbe
shlb
dec
stos
mov
pop
mov
test
in
in
push
xor
dec
adc
rol
mov
push
mov
out
xchg
lret
xor
xchg
fwait
ljmp
leave
or
aas
in
repz
inc
fisubrs
int
inc
gs
adc
pop
mov
test
xor
xchg
popf
cmp
ljmp
and
xor
mov
push
ror
sbb
sbb
sbbb
inc
inc
xchg
loopne
les
lcall
decb
xchg
stos
sbb
rcl
mov
mov
push
mov
arpl
rolb
xor
out
or
lods
jae
movsl
loop
and
es
lds
hlt
dec
iret
daa
jp
add
cmpsb
fldl
mov
jns
out
jp
lods
add
mov
shrb
stos
mov
js
sahf
cs
mov
dec
pop
repz
mov
push
fstp
and
in
mov
jne
jb
sub
mov
mov
jae
stos
icebp
jmp
cmpb
into
cmp
aam
sbb
and
sbb
int
out
insl
test
cltd
movsl
sub
rorl
sbb
fwait
imul
push
clc
js
out
shrb
sahf
mov
sub
add
ret
mov
jge
push
std
inc
pop
popa
inc
int3
add
jb
sub
sub
movsb
je
xchg
lods
insl
cmc
inc
or
movsb
lods
fstl
mov
mov
mov
bound
in
addr16
cmp
mov
pop
lods
dec
int3
inc
addb
ret
or
jo
and
dec
and
insb
fistl
roll
sbb
mov
sahf
divl
pop
sub
pop
inc
outsb
pop
sub
bound
jle
and
jl
pop
rclb
ja
ds
arpl
repz
inc
add
loop
test
fildll
cmp
mov
sbb
hlt
in
add
cmp
pop
repz
xchg
dec
popf
xchg
daa
adc
test
xchg
fs
sbb
loopne
mov
in
out
fwait
cmpsl
scas
aam
jl
jmp
xorb
sub
dec
out
fidivl
pop
insl
notl
rol
data16
movsl
lcall
jg
jge
ja
cmpsb
incl
ret
mov
jp
stc
inc
int
scas
or
or
fdivr
pop
mov
add
lret
push
addb
cmp
ds
push
stos
adc
mov
jne
inc
lea
sahf
adc
add
rorb
xor
jnp
xchg
shll
inc
mov
jmp
repz
testb
fidivrl
adc
leave
jmp
mov
inc
inc
int3
js
pushf
out
push
loop
in
dec
je
bound
dec
push
sbb
rolb
imul
pop
fdivl
into
adc
and
gs
inc
sbb
inc
scas
fcoml
jo
loope
movsb
push
mov
loop
push
insb
bound
lds
sub
pop
sub
jl
sahf
stos
mov
mov
push
loope
sahf
addb
repnz
imul
fnstenv
adc
dec
mov
mov
cltd
pop
out
mov
aaa
hlt
push
inc
adc
ds
mov
inc
cmp
in
mov
mov
out
dec
jb
pop
mov
pop
or
jle
lcall
ja
cmpl
out
cmc
xor
and
jno
daa
inc
mov
popf
add
nop
in
fmuls
into
movsb
push
jbe
pop
mov
rcr
jnp
inc
cmp
aad
dec
ret
sbbb
mov
shrb
fildl
adc
mov
pop
push
or
fdiv
scas
pop
aas
outsl
mov
mov
in
mov
in
cltd
hlt
mov
test
add
sbb
sbb
push
pop
das
pop
cwtl
aam
adc
mov
out
stc
test
add
sbb
dec
out
out
pop
aam
stc
lcall
and
outsl
cmc
jmp
lods
jbe
aas
cmc
mov
cltd
mov
insl
xor
xchg
push
stc
jge
pop
in
pop
mov
cltd
leave
xchg
sbb
mov
xor
lods
enter
data16
push
fs
ficomps
cmc
add
pop
mov
xchg
mov
xor
cmp
mov
mov
out
jl
repz
call
push
popaw
jns
xorb
scas
pop
cmpsl
lock
stc
repz
mov
mov
xlat
mov
out
push
sbb
mov
dec
jl
lret
xchg
jl
cmpsb
cld
jbe
jl
sar
arpl
push
inc
rcl
inc
cmc
mov
push
shlb
push
jl
lock
call
jmp
repnz
jl
scas
sbb
and
add
add
cmpl
pop
mov
add
scas
push
sti
add
dec
std
mov
inc
fnstsw
and
insl
jmp
imul
insb
pop
lods
rcl
fsubrl
inc
fadd
sbb
daa
aaa
xor
cmc
insb
and
xchg
adc
dec
js
movsl
dec
rclb
cmp
ja
lds
add
and
into
cli
loope
out
fucomip
sbb
mull
or
pop
xor
ds
pushf
cld
jmp
sbbb
mov
inc
rol
adc
or
lcall
sbb
hlt
pop
andb
pop
dec
cmp
and
inc
dec
jp
lahf
out
mov
ds
xor
push
pop
mov
add
xchg
fcoml
fldcw
out
subl
push
sub
mov
divb
ret
pop
xor
push
out
dec
andl
out
push
sbb
mov
pop
icebp
dec
in
ret
rcll
push
add
push
outsl
daa
rcll
outsl
cmpsl
pop
push
aad
int3
or
push
mov
lahf
and
xor
xchg
mov
jg
pop
mov
mov
in
mov
dec
jne
hlt
xor
mov
and
pop
scas
mov
in
or
insl
stc
sub
test
xchg
orb
fiaddl
fsubrs
or
ficompl
cmpsl
inc
enter
pusha
sub
mov
cwtl
pusha
pop
sbb
adc
cmc
xchg
popf
or
scas
add
adc
je
sub
in
inc
xchg
imul
adc
mov
xor
mov
imulb
lds
mov
push
fsubp
or
cld
cmp
sbb
or
mov
mov
std
shlb
icebp
push
fldenv
jle
out
int
adc
mov
lret
pushf
xor
dec
jb
jae
shr
mov
dec
addr16
iret
in
daa
sbb
sub
adc
jnp
fsubs
xlat
loopne
add
jmp
dec
xchg
sub
stc
adc
or
scas
xor
hlt
rorl
sbb
jmp
shlb
add
inc
mov
mov
sbb
xchg
jp
jecxz
push
rcll
and
xchg
sub
pop
sub
xchg
movsl
xor
adc
test
aas
hlt
pop
jle
stc
push
out
lods
cli
pop
add
out
push
pop
stos
fisttpll
stc
fmuls
into
pop
lods
pop
or
inc
pushf
cmp
mov
cmc
jge
and
fwait
jns
mov
lea
clc
jle
movsb
or
mov
out
out
jb
pop
add
mov
ljmp
push
loope
xchg
mov
fsubrl
jle
jle
jbe
xor
shll
inc
es
jns
jne
cmp
sahf
adc
inc
enter
dec
mov
xchg
pop
jae
in
std
test
loopne
jns
add
pop
and
pop
out
push
outsb
cmp
push
out
push
int3
repz
push
js
inc
ds
xor
dec
xor
dec
xor
js
pusha
shlb
push
and
icebp
xor
xchg
std
xchg
xchg
xlat
push
or
xchg
sahf
lock
sub
lods
scas
or
dec
mov
jl
lret
mov
cmpsb
sub
mov
push
mov
subb
int
push
insb
cmpsb
sub
rorl
mov
ret
add
out
fisubrs
pop
addr16
and
push
add
subl
jae
popf
out
mov
jo
ja
push
into
bnd
inc
push
shl
dec
insl
pop
pop
ret
scas
mov
fnstenv
dec
fsubp
in
outsb
lret
mov
jmp
xchg
icebp
subl
mov
adc
ficoml
mov
in
icebp
push
push
dec
lods
ret
jp
outsl
daa
sbb
and
jmp
and
out
lcall
pushf
sub
sti
jbe
jl
test
scas
mov
sub
add
sbb
sbb
pop
jl
fwait
pop
jecxz
and
jle
jmp
jl
mov
sbb
push
fmull
push
bound
in
pusha
push
sbb
into
fwait
push
adc
ljmp
cwtl
push
sbb
or
push
and
sub
repnz
ret
and
or
ds
sbb
inc
jle
je
jl
lahf
rcrb
jge
mov
xor
sbbb
movsl
cmp
sub
cwtl
cmpsl
pop
or
inc
fsubr
dec
rcll
lds
pop
scas
mov
mov
xor
ret
scas
cmpsb
cmp
aam
xor
xor
lcall
mov
mov
sbb
rcrl
add
addr16
ja
arpl
ja
outsb
xchg
leave
movsb
stos
iret
fcoml
sub
fsubl
cmpsl
mov
mov
inc
jmp
adc
pop
jl
push
push
cmpsl
jne
push
movsb
add
pop
and
out
xor
arpl
inc
movsb
icebp
hlt
fadds
arpl
rol
lods
scas
xchg
jl
orl
fdivrs
xor
mov
mov
pop
aad
sub
mov
ljmp
dec
aas
mov
sub
jo
cltd
dec
imul
lds
sub
push
mov
fldt
mov
jmp
test
inc
cs
gs
sub
xchg
call
inc
or
test
xchg
push
mov
xchg
jp
xor
shrb
out
xor
dec
dec
aas
dec
push
test
pop
mov
sbb
push
ds
outsl
fnstsw
cwtl
lret
xor
outsl
fldt
daa
bound
ja
mov
subl
push
cmp
xor
arpl
jg
leave
addr16
int3
cmp
pushf
xor
mov
jo
int3
dec
jl
lahf
add
inc
adc
push
push
lods
mov
aam
mov
roll
sub
mov
subb
xchg
xchg
shlb
aaa
pop
ds
sbb
call
push
movsb
scas
lret
jo
in
sbb
or
lea
fiadds
sub
adc
cmp
in
mov
pop
pop
sbb
xchg
mov
xor
and
jno
inc
lods
lret
xchg
cmp
xor
stos
xchg
xchg
mov
mov
sub
add
add
xchg
iret
das
roll
push
jmp
repz
jmp
rclb
push
ret
xchg
mov
aas
adc
xchg
dec
lret
push
pop
push
mov
jbe
lea
mov
leave
mov
pop
rorl
fistpll
stc
scas
adc
mov
rcll
pop
rclb
out
pop
jnp
shrb
pop
jb
subl
daa
or
adc
repnz
fwait
dec
xchg
bound
cmpsl
addr16
pop
xor
xchg
inc
test
popf
fadds
or
movsbl
mov
pop
iret
divl
in
xor
mov
jp
sub
mov
sbb
ficoms
out
test
xchg
iret
lret
sbb
aaa
pop
dec
push
pop
adc
sub
ret
xchg
cltd
test
jmp
scas
adc
cmp
neg
jmp
ss
cmp
push
push
jmp
shll
repz
cmpsl
rcrb
inc
lods
mov
mov
stos
xlat
rorl
stos
out
scas
push
stos
dec
xchg
cli
xchg
out
ret
and
jge
stos
fbld
mov
cmpsl
xor
jl
ljmp
push
roll
sar
or
and
das
inc
sub
call
pop
lock
mov
mov
xlat
mov
fwait
mov
jo
mov
loopne
test
sbb
pusha
mov
test
mov
mov
pop
dec
fsubrl
adcl
int3
cmpsl
mov
testl
popl
lahf
or
mov
sbb
mov
mov
or
xlat
pop
and
sbb
test
pop
aad
ret
mov
test
rclw
loop
mov
dec
jecxz
stos
test
inc
add
cmpsb
jae
roll
ja
pop
pop
shrb
inc
fisttpl
pop
fdivrl
call
std
mov
iret
sbb
std
pop
dec
adc
jbe
sar
adc
mov
sahf
sbb
mov
lods
sub
pusha
cwtl
aad
cmp
pop
fldenv
adcl
push
jmp
ss
sub
scas
iret
push
sbbl
icebp
mov
mov
jmp
inc
repz
out
into
fimull
and
xorb
aam
jl
inc
scas
xchg
rolb
bound
shr
cmp
or
test
mov
cmc
pop
or
pop
test
cmpb
in
es
or
out
icebp
cmp
mov
mov
bound
add
mov
jae
out
sbb
sbb
or
mov
xchg
push
add
repnz
add
repnz
adc
push
into
pop
push
mov
mov
sub
jnp
push
cltd
cmp
add
fstpl
xchg
jo
or
fadds
loope
lods
loop
addr16
inc
push
imul
mov
ds
cmp
aad
call
xchg
popa
in
leave
or
jp
inc
xchg
lock
or
inc
mov
xchg
roll
cmc
pusha
sarb
dec
jne
std
cmp
mov
lods
xchg
ret
sub
arpl
test
mov
or
xor
ficoml
arpl
push
outsb
mov
jp
push
dec
stos
test
jb
aaa
mov
or
mov
ret
dec
pop
bound
pop
lds
and
pop
mov
or
cmpsl
bound
fidivrl
or
lcall
or
lds
push
imul
scas
cmpsl
sti
lret
jo
pop
lods
push
ret
jnp
into
pushf
mov
in
mov
inc
cmp
out
es
dec
scas
cmp
enter
push
mov
int
mov
and
mov
rcll
notw
scas
jle
push
rcll
xchg
jmp
repnz
cwtl
out
xor
sbb
xor
cwtl
adc
cmp
xchg
cmc
lds
add
push
jne
mov
std
outsl
pop
jbe
and
andb
inc
xor
js
ljmp
push
imul
mov
fnstcw
pop
test
lcall
mov
scas
mov
cs
icebp
and
shrb
push
push
pop
or
call
lods
je
test
dec
pop
or
fidivrs
into
es
dec
cld
lds
sar
hlt
inc
test
sub
rcll
mov
test
sbb
sahf
loopne
loope
jp
das
negl
cmp
por
adc
add
outsb
nop
adc
fidivrs
in
or
and
fmul
aaa
outsb
mov
fcompl
push
jmp
imul
out
clc
dec
pop
cmp
out
cmp
cmp
clts
jae
dec
repnz
sahf
or
icebp
sbb
push
mov
xchg
clc
aas
test
and
stos
mov
inc
push
inc
hlt
sbb
push
cmp
xchg
push
mov
adc
mov
dec
je
mov
out
scas
mov
ret
fwait
or
rcrb
das
xchg
mov
nop
cmp
mov
ret
out
mov
or
sub
mov
xchg
dec
push
stos
js
jp
mov
push
jmp
mov
dec
divb
mov
sbb
adc
ror
int
xchg
scas
stos
jecxz
hlt
push
out
pop
pop
imul
jbe
mov
xchg
sbb
jne
mov
outsb
pop
adc
imul
mov
cmpsb
fwait
outsl
outsb
cmc
insb
adcl
frstor
xlat
push
jmp
xor
in
rclb
std
cltd
nop
test
or
inc
adcb
cmp
xchg
es
in
test
mov
pusha
jle
inc
je
push
dec
outsl
cli
ljmp
pop
mov
and
ja
mov
popa
aaa
sub
sub
mov
aas
sahf
clc
in
sub
dec
mov
shlb
inc
div
sbb
push
js
lock
dec
fisubl
enter
std
loopne
jne
in
test
iret
das
pushf
or
xor
pop
into
loop
dec
decl
test
stos
loope
cmpsl
xchg
jmp
mov
int3
dec
ds
pop
out
pop
lcall
mov
push
lods
jno
dec
iret
xchg
dec
mov
ret
jnp
in
mov
adc
test
push
aas
mov
ljmp
sahf
sub
lods
ss
jp
lret
inc
ja
imul
hlt
adc
outsl
dec
ja
movsb
dec
mov
and
pop
insb
mov
add
lea
dec
and
xor
jmp
pop
mov
fcomps
jl
insb
lret
ja
mov
xchg
push
mov
pusha
cmpsb
pop
repnz
cmpsb
les
orl
xlat
in
rolb
jecxz
aam
ficoml
nop
push
dec
mov
imul
arpl
jmp
jge
je
sbb
adc
dec
or
mov
stos
repnz
hlt
leave
stos
jg
or
mov
xchg
or
xchg
mov
int
mov
scas
mov
jno
cmpl
dec
pop
mov
push
sub
outsb
cwtl
mov
pop
fstpt
mov
or
jo
mul
aaa
add
inc
cs
xor
sub
add
aam
cmp
or
pop
or
mov
and
mov
test
push
nop
xchg
popf
inc
gs
cmp
add
inc
or
sbb
loope
mov
ja
pop
mov
xchg
pop
inc
es
push
mov
sbb
jbe
sub
mov
sub
sbb
xchg
mov
sub
sahf
ja,pt
jnp
idivl
shlb
pop
or
cli
imul
xchg
xchg
add
dec
add
pop
cmpsb
data16
push
pop
mov
addr16
jns
and
arpl
push
les
jmp
sbb
push
pop
cli
push
jnp
loop
xor
jnp
iret
in
xchg
stc
mov
pop
or
pop
pop
pop
js
cmp
ret
xor
mov
push
out
cli
dec
pop
inc
cli
adc
or
cld
outsl
xlat
mov
jae
lea
orb
lock
fadds
imul
dec
jl
cmpsl
mov
mov
mulb
xchg
mov
adc
sti
stos
loopne
dec
loope
jecxz
pop
jbe
rclb
je
lock
out
pop
lods
cmp
jl
insl
mov
adc
pop
adc
mov
push
dec
pop
push
inc
push
movsb
pop
xchg
jl
sub
stc
imulb
xchg
pop
add
pop
or
out
jns
dec
push
mov
jnp
gs
inc
testl
ljmp
xchg
shl
scas
cmpsl
add
jge
cltd
lds
in
add
mov
jno
mul
nop
sbb
xor
push
fwait
dec
int3
mov
push
xlat
xlat
sti
call
push
push
ljmp
pop
xchg
jno
call
lods
mov
aas
aam
mov
xchg
push
arpl
test
out
in
addr16
adc
sbb
and
mov
fldl
mov
adc
in
arpl
dec
nop
sub
das
das
mov
adcb
or
adc
sbb
mov
xchg
repnz
addr16
inc
movsb
jb
fidivrl
out
fistpl
dec
xchg
and
pop
aam
jno
lods
inc
push
sar
outsb
test
cltd
push
cmc
sbb
cmp
inc
aas
xlat
adc
sub
push
or
inc
adc
xor
cmp
repnz
or
pop
icebp
fld
jo
jne
test
int3
push
sub
insb
lret
int
sar
pop
sub
inc
icebp
cmp
pop
mov
mov
out
aam
add
sbb
ret
or
mov
shlb
push
inc
and
loope
pusha
stos
or
sbb
outsl
and
xchg
and
jns
mov
jp
push
inc
loope
cmp
stos
mov
inc
sti
or
xor
in
or
push
jbe
orb
clc
divl
mov
mov
xor
jns
jle
fsubrs
shrl
fisubrl
stos
out
push
mov
add
mov
movsl
xor
lods
lcall
mov
add
xor
mov
mov
adc
add
push
jecxz
jl
cmpsl
rclb
or
push
push
inc
mov
shrb
mov
or
mov
mov
xchg
inc
xchg
ret
push
jo
ljmp
test
cmova
dec
sbb
sti
xor
clc
repnz
jge
rol
nop
and
mov
mov
lahf
sub
xchg
dec
sub
pop
mov
insb
cli
xor
xor
sub
loop
mov
pop
inc
cmpsl
jae
movsb
ficoms
je
arpl
int
fdivrl
nop
pop
jle
cli
mov
add
mov
sahf
lea
clc
pop
and
shlb
enter
mov
test
mov
xor
aad
sub
mov
sbb
dec
sbb
add
aam
xor
pop
std
outsl
bound
out
pop
xor
out
fwait
sub
adc
xchg
pop
ja
fsubrs
or
mov
jge
test
movsl
jmp
clc
fwait
mov
shll
in
mov
stc
scas
loope
aas
cmc
pop
pop
dec
repnz
sbb
cli
and
xlat
jle
mov
push
dec
and
fistpll
daa
shll
stos
sub
arpl
loopne
das
jae
sbb
cmpsb
cmp
mov
fs
cmp
cltd
mov
sbb
fwait
or
sub
out
mov
sbb
adcb
mov
addr16
fadds
jne
sarl
cmpsb
movl
lcall
fcmovnu
push
outsb
cmp
and
xchg
fcomip
xchg
adc
add
flds
scas
idivl
popl
push
outsb
lcall
jge
pop
test
mov
in
lods
sub
dec
leave
jg
test
es
popf
arpl
sahf
out
xchg
pop
pop
arpl
sarb
inc
xchg
mov
pop
or
add
movl
inc
sbb
pop
lahf
in
mov
mov
mov
add
mov
jae
repz
std
imul
aam
mov
imul
mov
aaa
mov
andl
movsb
or
adc
dec
ja
adc
rorl
fwait
cli
inc
movsb
xchg
mov
mov
or
mov
add
and
push
and
mov
sbb
pop
fsubs
fmuls
mov
popa
mov
xor
or
dec
or
scas
sarl
mov
jae
add
push
lret
cmp
stos
inc
loope
add
bound
add
cli
dec
push
rolb
xor
jg
sahf
pop
sub
xchg
mov
mov
adc
je
fstpl
mov
lret
and
mov
nop
std
mov
xor
push
push
ja
into
add
mov
sub
lea
repnz
bound
sub
inc
imul
outsb
ja
rcrb
fnstcw
call
test
test
fdivrl
jecxz
rcr
inc
dec
ja
fcompl
xchg
lea
mov
ret
cmp
push
jmp
mov
inc
sbb
push
jmp
mov
pushf
add
mov
outsl
push
or
mov
fcompl
jge
mov
add
pop
jmp
iret
xchg
and
icebp
nop
mov
fidivrl
adc
jno
mov
out
sbb
sub
add
pushf
jns
adc
and
cmovl
xor
in
sbb
rclb
das
pop
and
adc
repnz
sbb
sbb
pop
adc
fdivrs
loope
repnz
jnp
xlat
push
xchg
imul
cmp
outsl
sub
mov
mov
pop
jno
or
jo
jge
cmp
cli
testl
jmp
xor
push
das
jle
fisttpl
sub
jmp
mov
fldl
aam
test
je
fildl
andb
jmp
jno
adc
enter
daa
inc
mov
jmp
out
or
pop
shll
sub
fistpll
cmp
pop
mov
pop
loope
xchg
xchg
or
push
in
movsl
or
dec
cwtl
dec
and
popa
fdivrs
jae
dec
iret
push
jns
push
movsb
ds
ja
popa
faddl
jae
mov
and
rcr
sbb
jae
into
test
lods
repnz
movsb
adc
push
gs
daa
or
lahf
cmp
and
div
add
and
dec
add
fists
mov
inc
and
sub
cmc
mov
test
ret
pop
or
push
xorl
cmpsb
xchg
mov
lret
mov
sar
mov
in
fisubs
add
ffree
jle
fstl
data16
cmp
in
mov
cmp
outsl
pusha
je
mov
sbb
add
aam
lock
fdivrl
xchg
clc
cmp
mov
mov
inc
push
loop
daa
scas
cli
imul
adc
add
jb
or
add
pop
jl
mov
mov
das
add
sub
ljmp
cs
imul
movsl
jl
loope
cmp
lret
inc
push
push
sarb
cmc
mov
mov
addr16
sub
mov
xor
test
shrl
fwait
sub
daa
sbb
or
mov
loopne
cwtl
jecxz
or
and
mov
add
jp
movsl
insl
pop
insl
and
sbb
fs
int3
pop
pop
shl
add
inc
imul
dec
inc
iret
jno
pop
adc
jg
scas
inc
push
pushf
test
sti
xor
aas
dec
jle
sbb
sub
repnz
or
movsb
dec
or
adc
mov
loope
imul
fwait
movsb
je
add
aaa
sub
jno
mov
sbbl
leave
xchg
jnp
add
in
dec
stc
mov
fcmovne
add
jmp
lds
movq
xchg
sub
ret
data16
gs
cmp
pop
push
jmp
ss
xlat
xchg
icebp
cmc
push
cwtl
fidivrs
jae
pop
add
or
jecxz
add
cmp
add
jns
jg
jnp
dec
subb
adc
nop
mov
pop
jns
rclb
mov
adc
pop
fstpl
pop
lds
push
into
pushf
call
popa
cmp
jge
fwait
mov
dec
rorl
or
pop
and
dec
dec
adc
mov
dec
push
mull
mov
rorl
mov
xor
xor
jp
test
je
adc
mov
adc
cwtl
mov
ret
sarb
sub
ds
pop
loop
fiadds
and
lret
mov
mov
mov
nop
lock
out
adc
rcrb
lock
pop
add
sbb
stc
pushf
out
add
push
xor
mov
test
shll
and
or
repnz
jp
add
mov
or
fwait
push
lcall
insb
mov
xchg
movsl
xchg
cmpsb
sbb
scas
mov
cmp
fldenv
pop
or
xchg
movsl
hlt
aad
pushf
aaa
outsb
cmp
loope
or
outsl
test
add
and
xchg
inc
scas
out
adcl
in
add
cmpsl
mov
daa
or
xchg
xchg
mov
das
pop
mov
pushf
sub
push
dec
mov
lods
lock
insb
sbb
sarl
mov
lcall
adc
dec
jg
sub
bound
leave
movsl
test
lods
and
push
or
imul
and
sub
pop
add
rorl
mov
rorb
or
aam
cmpsl
jb
fistpl
mov
mov
cltd
push
cmp
faddl
or
fldenv
or
jne
mov
scas
std
shrb
xor
add
inc
or
in
mov
adc
push
cltd
imulb
adc
ja
int
les
lcall
cld
lea
hlt
shlb
stc
in
andb
out
xchg
lods
push
adc
dec
push
jle
pushf
test
inc
sub
xor
scas
int3
shlb
je
shlb
or
aam
ret
cmp
sub
insb
div
std
mov
inc
add
addr16
mov
pop
repnz
in
imul
cmpsb
mov
leave
mov
fistpll
mov
or
pop
es
cltd
sti
arpl
ret
lahf
cltd
mov
insl
mov
pushf
in
or
mov
xchg
stc
imul
xchg
jne
mov
lock
jge
xorb
pop
cmp
test
int3
or
mov
repz
int
out
inc
jno
xor
insl
cli
cwtl
or
add
in
add
mov
movsb
dec
cmp
jo
mov
inc
jp
mov
subl
sbb
aas
test
inc
xor
lods
ljmp
add
inc
imull
mov
push
dec
pop
nop
dec
push
cld
sti
sbb
push
movsl
sbb
jnp
push
push
cmpsb
or
push
inc
addr16
sub
js
in
in
clc
xchg
int3
push
pusha
pop
adcl
enter
push
adc
and
xchg
idiv
pop
inc
movsb
in
dec
mov
scas
adc
das
mov
std
ljmp
xchg
mov
in
call
and
jbe
fidivrs
ss
sbb
fcmovnu
mov
mov
mov
mov
hlt
cmp
mov
pop
adc
jmp
cmp
pop
dec
sub
sbb
inc
sti
leave
addr16
fbstp
add
daa
mov
ret
jb
sbb
aaa
dec
jecxz,pn
lcall
xor
in
cmovno
and
in
pushf
pop
ds
jle
cli
hlt
dec
fadds
mov
inc
arpl
xor
xor
and
xor
or
fstl
lret
adc
stos
dec
or
mov
test
cmp
or
xchg
mov
xor
pop
push
mov
pushf
stos
mov
xor
dec
shr
jnp
js
aas
bound
lcall
andb
das
or
daa
mov
xchg
int
push
cmp
sbb
lret
int
shrb
mov
int
imul
jmp
sbbl
push
sahf
or
xor
xchg
pusha
lods
push
aaa
inc
imul
call
add
cli
cltd
jmp
jne
mov
dec
imul
iret
fwait
push
pop
pop
and
es
mov
js
mov
outsb
stos
popf
stc
sbb
sbb
xchg
popf
cltd
jne
sti
out
mov
add
sar
mov
insb
mov
movsl
fldenv
cmp
mov
xchg
std
sub
cmp
std
dec
js
pop
jne
jbe
aad
iret
add
fcmovnu
ret
add
jbe
mov
jno
fs
jmp
sub
out
jmp
ds
outsb
cmp
fstps
pushl
jbe
mov
add
lods
xor
idivb
cmp
hlt
outsl
inc
jecxz
out
leave
shlb
mov
outsb
cmp
dec
xor
jge
jmp
jno
xorb
sahf
addb
push
add
mov
js
pop
outsl
cmp
jp
lods
inc
mov
jae
jnp
cmpsl
cli
arpl
les
cmp
repnz
mov
push
sbb
dec
and
cmp
mov
inc
sti
fimull
std
xchg
sbb
pop
pop
pop
test
jp
push
mov
inc
mov
daa
jmp
inc
shl
pusha
mov
sub
jge,pn
pop
xor
cltd
loop
dec
lea
jo
fidivl
mov
xor
mov
leave
ss
jge
jmp
aad
jecxz
and
ret
out
les
cwtl
lret
mov
orb
xor
popa
push
es
pop
loopne
xchg
inc
jge
aad
adc
pop
lret
xor
js
sub
pop
imul
ret
test
repz
lret
mov
pop
jbe
stos
sub
sbb
xor
dec
sub
add
jnp
in
orl
subb
or
xchg
adc
or
popl
mov
dec
divl
xchg
cmpb
in
stc
and
std
imull
sbbl
ja
sbb
fcmove
xchg
adc
movsl
test
mov
and
loop
imulb
xor
dec
mov
xor
mov
outsl
mov
mov
mov
dec
stos
cmp
pop
cwtl
out
push
or
inc
aam
outsb
cmp
mov
mov
cwtl
movsl
out
cmp
cltd
clc
ret
icebp
xlat
out
push
push
jnp
add
pop
repz
in
mov
pushf
imul
xchg
insb
int3
out
sub
xor
in
jl
repnz
mov
mov
or
fmull
add
lret
test
cmpsb
adc
repnz
fildll
cmp
test
pop
shrl
cmp
cmpsl
mov
xchg
mov
mov
rolb
jne
jne
xor
loopne
roll
sbb
outsb
fwait
les
nop
fisubl
or
inc
stos
adc
add
inc
cwtl
movsl
mov
mov
jg
pop
movsl
repz
testl
out
mov
daa
pop
out
pop
dec
xor
cmpb
loopne
in
xor
syscall
icebp
sbb
out
and
fimull
lea
sub
add
xor
mov
sbb
dec
jbe
cmp
push
xchg
inc
aaa
jb
daa
lret
loope
inc
les
mov
repz
push
mulb
call
sbb
nop
aas
iret
cmpsl
mov
pop
cmc
push
outsl
and
mov
leave
movsb
shrl
and
shlb
cmp
icebp
mov
mov
lds
xchg
iret
adcb
jae
inc
push
sahf
ss
jbe
hlt
test
paddd
ss
jbe
xchg
pop
out
mov
mov
push
fildl
sub
fnsave
ret
inc
lock
xor
xor
pop
sbb
inc
xor
mov
jl
dec
mov
das
clc
das
aas
loop
mov
lahf
mov
xchg
jg
push
test
dec
mov
and
insb
iret
dec
lea
push
xchg
clc
jmp
sahf
aam
je
jl
jbe
adc
mov
push
mov
je
insb
outsb
adc
insl
add
push
sbb
add
dec
jnp
cld
jnp
loop
lea
adc
or
or
mov
outsl
mov
pop
imul
adc
mov
inc
dec
shll
mov
cld
jge
push
push
or
lcall
movl
mov
sub
jns
rcrb
adc
hlt
dec
sbb
sub
test
jb
inc
je
pop
adcb
ja
cwtl
mov
xchg
xlat
push
push
sbb
xchg
jne
mov
adc
mov
jle
and
push
or
pop
cmc
sub
add
aas
fstpt
orb
popa
sub
cmp
push
jo
fdivs
rorb
xchg
push
les
stos
xchg
jno
hlt
dec
shl
xchg
dec
inc
andb
stc
insb
adc
xor
shrb
dec
inc
pop
xlat
arpl
arpl
int3
mov
jge
cmpsl
rorl
xlat
add
sub
and
mov
push
cli
mov
dec
inc
paddusb
adc
subb
push
pushf
xchg
sub
call
jb
mov
dec
and
pop
sub
push
loop
push
jb
int3
mov
out
cmp
sbb
fstps
or
push
xor
sbb
lret
fstpt
scas
mov
push
loop
and
mov
lret
xor
push
inc
pop
mov
jmp
gs
adc
cmpsl
call
in
pop
test
fld
lcall
jg
lods
mov
fimuls
mov
cmp
jle
cmp
sub
subl
inc
xor
xor
je
iret
test
inc
mov
xchg
cmp
sub
xor
push
xor
add
shll
rcll
push
dec
data16
orb
adc
test
mov
xchg
push
xor
cmp
int3
sbb
sub
xchg
inc
push
rol
mov
push
movsb
cmpsl
loope
dec
inc
testl
call
xchg
xlat
add
loopne
imulb
xor
mov
xor
cwtl
arpl
inc
pop
mov
fwait
adc
aam
push
popf
popa
dec
jecxz
stos
cmp
and
daa
ret
mov
js
stos
in
sbb
enter
mov
or
mov
adc
mov
clc
rcrl
add
xchg
mov
sahf
ja
push
cmp
negl
clc
enter
dec
xor
lcall
mov
xor
sbb
mov
scas
cs
lock
mov
dec
sbb
jmp
inc
mov
jle
dec
pushf
xor
xchg
out
pop
fisubrl
and
jmp
test
xlat
dec
sti
mov
mov
es
sahf
jmp
hlt
add
mov
insb
pop
popf
adc
cmp
sahf
jb
test
mov
aam
jbe
and
sbbl
cmp
xor
adc
std
inc
or
or
test
test
fbld
lret
sub
jmp
leave
imul
push
test
adc
insb
jle
les
add
and
inc
mov
rorl
in
jle
add
or
daa
mov
lods
mov
pop
sub
fidivrl
xchg
int3
push
add
dec
fcomps
lret
or
cmp
mov
ret
cmp
out
cld
xchg
gs
jne
mov
js
lods
jp
mov
jno
shll
xor
xchg
xor
jle
dec
cld
movsb
add
or
sub
aas
xchg
mov
adc
rcrl
push
jl
jle
sarl
out
repz
pop
neg
push
insb
add
pop
out
lods
repz
stos
in
add
or
mov
mov
xor
sbb
iret
rol
test
pop
push
filds
mov
fsubrs
cmp
mov
das
mov
push
jg
or
pop
enter
test
sbb
and
ret
mov
stos
mov
out
xor
psraw
test
xor
or
pop
andb
test
sub
jno
inc
leave
xor
mov
pop
and
push
gs
addr16
repz
pop
pop
cld
pop
xor
into
inc
adc
in
pop
ret
xchg
aad
mov
and
mov
loope
jmp
dec
cmp
in
xchg
or
xchg
dec
xor
fisttpll
cmc
fdivl
jecxz
insb
cmp
lea
xchg
imul
cmp
test
push
fwait
xor
fmuls
les
mov
test
test
sbbl
inc
aas
ret
fisubl
pop
lods
repnz
xchg
xchg
xor
cmp
push
in
cmpb
es
mov
sbb
std
in
mov
sub
out
test
in
push
lret
aam
mov
adcl
mov
cmp
inc
aaa
gs
jp
ds
rolb
dec
insb
ljmp
sub
inc
dec
popfw
fnstsw
ss
dec
pusha
stc
out
fucompp
push
xorb
jae
test
mov
lret
cmpsb
add
sub
mov
cli
adc
stos
push
dec
insl
data16
dec
sub
stos
adc
mov
lds
add
jp
lds
or
sub
push
ja
push
sub
push
mov
ds
dec
sub
fwait
popa
cli
cmc
xor
fdivp
sbb
clc
jo
int3
cli
dec
pop
xchg
or
xchg
rcll
push
movsl
and
sub
sub
in
shll
js
jnp
movb
lods
sbb
sbb
xor
inc
add
cli
xchg
movsb
xor
push
out
in
aam
test
andl
xchg
inc
lret
ds
pop
ja
setne
leave
jl
arpl
push
and
mov
hlt
cmp
xor
aaa
jnp
mov
stos
daa
jbe
std
roll
imul
ffreep
jno
cmp
lahf
xchg
mov
mov
mov
jl
repz
dec
pop
jmp
cmp
cmp
js
dec
add
mov
shll
outsl
sbb
mov
sub
jp
idivb
inc
push
stc
aas
pop
mov
cli
mov
sbb
movsb
sbb
and
pop
jg
jecxz
jecxz
xor
sbbb
xor
push
mov
xchg
push
cmp
inc
adcl
add
mov
mov
inc
std
inc
fwait
or
push
sbb
xchg
dec
scas
stc
out
sub
inc
inc
mov
cmp
cmp
call
cmp
cli
pop
lea
add
push
fwait
xor
repnz
cmpl
inc
xchg
ret
mov
stos
mov
je
sub
and
mov
xchg
das
cmovno
inc
and
xorb
jb
repz
in
ja
xchg
scas
aad
lds
or
and
loop
movsl
outsl
add
push
mov
data16
pushf
add
popf
inc
ror
pop
push
icebp
push
dec
cmp
mov
cmp
xchg
mov
cltd
xchg
add
pop
pop
mov
jmp
sbb
xchg
mov
xor
jns
rclb
in
mov
push
mov
inc
jl
imul
in
lcall
std
movb
loopne
cmp
dec
jns
jg
sbb
xlat
bound
jb
lock
daa
popf
popa
sub
cmp
fstps
jecxz
jbe
and
cltd
or
icebp
lret
rol
lret
push
js
lret
lea
push
xor
mov
sti
in
xchg
mov
mov
xor
fstpl
push
push
rcll
popf
in
cwtl
mov
subb
in
lcall
mulb
sub
sti
xchg
ret
pushf
xlat
imul
fwait
cmp
out
icebp
push
xor
mov
xor
stos
dec
add
scas
call
mov
in
push
mov
xor
xchg
shlb
push
jge
lahf
in
push
and
test
nop
inc
pusha
into
mov
lahf
ret
cmpsb
fisttpll
iret
or
call
and
imul
repz
cmp
xor
shl
push
sbb
sub
pop
in
dec
xchg
lea
scas
cs
enter
xchg
inc
pusha
fidivs
inc
mov
add
in
ret
xor
test
in
int3
cld
inc
jne
or
jp
mov
jmp
adc
insb
seta
cs
or
mov
push
fdivr
clc
out
pop
mov
lcall
add
out
dec
aad
mov
xor
imul
or
sub
fwait
mov
mov
adc
jp
push
arpl
sub
and
lcall
in
jmp
and
lods
and
push
push
add
out
xchg
mov
idivl
call
jmp
xchg
or
cwtl
fsubr
pop
repz
pop
mov
aad
lcall
jl
insl
sbb
sbb
xor
xchg
add
dec
pop
jo
dec
and
push
pop
in
cmp
ljmp
jno
aad
pop
jp
scas
xchg
imul
dec
shlb
adc
sbb
inc
add
mov
adc
cmp
push
inc
lahf
test
pop
jge
popf
loopne
aam
fstpt
xchg
add
rcrb
ret
cmpsl
sub
dec
jg
dec
jnp
daa
mov
clc
je
adcb
loopne
add
dec
cwtl
jae
add
in
pop
sbb
ror
or
mov
ljmp
shrb
xchg
mov
xlat
lcall
hlt
test
mov
mov
loop
push
outsb
fiaddl
movl
ror
stos
mov
cli
add
cli
push
scas
repz
fucom
movsb
push
pop
cltd
mov
popa
mov
nop
mov
ffree
faddp
and
add
xchg
insl
decl
add
ss
out
fstpl
xlat
push
pop
movsb
je
xchg
notb
sbb
fstl
cmpsl
add
pop
bound
nop
mov
or
dec
idivb
test
xchg
mov
aaa
pop
pusha
cmp
ret
arpl
jg
push
adc
pop
iret
into
cmp
test
add
push
or
jb
lds
loop
cltd
jns
and
arpl
aaa
cmp
sbb
cmpsl
mov
mov
rclb
push
enter
pop
inc
adc
inc
push
jle
pop
mov
dec
mov
sbb
jo
xchg
repnz
lcall
test
adc
adc
fists
shll
xor
mov
pop
popa
pop
push
jle
or
push
jno
hlt
or
add
js
sbb
push
xchg
subl
jge
js
movsl
lods
scas
scas
cmp
xor
cld
jp
xor
push
push
test
add
stos
xchg
fsubrp
std
cld
enter
addr16
add
loope
or
fimuls
jle
rcrl
in
or
inc
mov
xchg
das
rclb
in
add
xchg
sub
pop
insl
popf
movsb
hlt
inc
inc
xor
cs
inc
arpl
pusha
leave
cmp
push
je
mov
adc
jecxz
ret
jl
lods
lds
fdivrl
stc
cmpsl
arpl
adc
out
movsb
int
push
ret
lock
test
push
andl
not
outsb
es
inc
add
gs
rorl
mov
imull
cmc
loop
mov
pop
push
xchg
pop
fiadds
out
hlt
xor
ret
aad
jp
out
sti
fcmovnu
subb
bnd
and
sub
popa
clc
das
fcoml
jb
pop
jp
pusha
pop
xchg
lock
sbb
addr16
jbe
dec
jge
test
out
dec
mov
inc
and
sbb
cld
inc
and
jb
cmp
mov
scas
xor
loopne
stos
pop
or
push
mov
insl
int
test
sahf
test
fidivrl
xor
cmpl
fnsave
incb
decb
mov
test
out
stos
std
jl
ss
fidivl
or
fiadds
test
shl
xchg
xlat
xchg
and
jp
stc
dec
test
cmp
adc
pop
sbb
xor
imul
xor
andb
jg
jne
stos
inc
dec
xor
cmp
data16
mov
dec
mov
lods
push
jge
or
fiaddl
loope
fsubrl
dec
adc
lds
add
mov
fwait
sarb
xor
cltd
xchg
sahf
stos
stos
arpl
rol
sub
in
movsl
adc
push
pop
sbb
loopne
mov
jmp
cmp
fs
adc
pop
xlat
push
push
mov
mov
mov
std
sarb
pop
or
pop
rep
movsb
loopne
jge
mov
pop
ret
pop
pushf
test
out
aad
lret
divl
pop
push
mov
push
lahf
das
leave
in
xlat
cmp
movsb
lret
movsb
out
cmc
sub
sub
lcall
pushf
and
jae
mov
ds
mov
push
adcb
push
dec
fs
pop
xchg
pushf
imul
out
nop
inc
push
push
in
outsl
ret
pop
jbe
test
or
and
enter
enter
loope
test
data16
xchg
lds
aam
inc
sub
push
pop
sahf
clc
shlb
mov
sub
das
xchg
sarl
hlt
mov
sub
cmp
test
pop
or
dec
jb
dec
call
out
sub
add
in
sbb
push
and
mov
fstl
js
je
xchg
pusha
into
cli
jge
out
enter
mov
push
push
adc
popf
cmpsl
negl
cmp
cmc
fisubl
or
xchg
ja
sahf
gs
lock
ljmp
inc
dec
pop
js
les
insl
add
stc
cmp
sub
nop
sub
xor
call
test
out
add
and
in
and
push
inc
push
sub
bound
rol
jno
dec
fcmovnb
mov
and
pop
outsl
ret
movsb
enter
xor
mov
div
or
les
xchg
arpl
lahf
rol
sti
fs
xlat
push
std
xor
and
sar
mov
rcrl
mov
lahf
test
xchg
jmp
iret
add
jecxz
add
icebp
push
push
inc
mov
xor
popf
dec
aad
sti
sbb
sbb
jg
mov
aas
aad
fidivs
repnz
loop
sub
dec
mov
sub
lahf
js
jmp
outsb
repz
int
bound
cmpsl
sahf
mov
xchg
jae
addl
in
cld
pop
dec
cmp
out
out
sub
dec
lock
data16
jns
xor
sub
sbb
pop
cltd
dec
xchg
sbb
adc
stos
mov
xchg
notl
int3
aaa
repz
jle
push
mov
mov
jmp
cmpsl
les
or
int
jb
dec
fsub
in
movsb
scas
mov
loop
sub
cmp
xchg
sti
xorl
push
xlat
shll
lcall
scas
mov
xchg
push
xor
out
push
fucomip
mov
clc
lret
sub
xlat
add
mov
decl
add
and
fdivrl
outsl
mov
sub
inc
xchg
cli
aas
push
adc
and
stos
push
sub
stos
fiaddl
add
shll
sbb
subl
popf
fsubl
enter
iret
adc
js
testb
cmp
mov
adc
mov
add
xor
negb
add
paddusw
data16
repnz
fldenv
xchg
pop
xor
push
mov
fistl
mov
test
xor
scas
push
pop
test
cmp
cmpsb
sub
push
fxch
pop
pop
add
push
push
mov
add
decb
stos
xchg
push
or
call
stos
dec
sti
cmp
mov
push
cs
xor
fcompl
xor
cmp
es
ss
movsb
notb
mov
popa
push
pop
gs
xor
mov
js
orl
sahf
xor
push
int3
adc
mov
mov
jb
add
ficompl
or
jo
xchg
in
xorb
loop
fmuls
shlb
adc
inc
fisttps
xor
out
xchg
xor
shlb
cmp
cmpsl
or
imulb
or
fcomp
loope
pusha
je
ja
les
pop
lcall
inc
ret
lcall
outsb
popf
dec
ss
inc
loopne
cli
pop
bound
pop
test
adc
xchg
inc
push
sbb
aam
outsb
in
insb
ficompl
int
dec
sbb
das
mov
jo
and
fidivrl
test
mov
push
data16
pop
jmp
and
mov
push
andb
dec
dec
sub
mov
shrl
push
out
cli
sub
sbb
sti
sub
bound
cmp
xchg
and
inc
mov
push
lods
mov
mov
sub
jp
mov
fisttpll
stc
fistpl
lret
dec
pop
cmpsl
test
mov
mov
sub
push
sbb
jmp
jae
or
call
movsl
sub
push
imul
cmp
sub
imul
adc
xchg
or
xor
into
jb
cmc
insl
adc
jmp
or
push
scas
in
leave
push
in
pop
loope
dec
and
or
and
sbb
xlat
test
scas
mov
sarl
cmp
out
dec
mov
stos
or
sub
inc
int3
ret
sahf
mov
fsubrs
stc
push
int3
inc
sti
mov
inc
and
cmp
and
add
mov
test
dec
movsl
add
pop
pop
mov
jne
sub
push
cli
adc
sbb
frstor
imul
mov
negb
mov
and
repnz
lea
and
dec
or
jg
nop
dec
in
ss
jno
jmp
scas
iret
es
in
cmc
gs
jno
js
jbe
pusha
mov
jne
xchg
scas
in
inc
and
mov
jecxz
or
pop
push
bound
cmpsl
rcrb
or
or
inc
loop
cmovo
aaa
loopne
pop
lock
mov
pop
inc
adc
pop
inc
loope
sar
mov
mov
es
inc
movsl
dec
jno
fldl
push
adc
push
and
jle
ljmp
lret
scas
mov
out
push
and
jecxz
sar
mov
jo
cltd
lcall
aad
gs
or
push
or
pop
out
pop
xchg
idivl
xchg
and
je
add
aam
push
hlt
ds
pop
fimull
je
or
outsl
clc
xorl
ret
imul
mov
fistpl
popf
xor
jb
lds
or
cld
into
dec
mov
out
movl
mov
dec
mov
adc
test
jns
aam
fstpt
xchg
cld
testl
sbb
out
push
fistpl
mov
sub
sub
push
add
mov
pop
push
add
js
xchg
mov
push
sub
mov
out
or
stos
ret
xor
enter
cld
pop
add
imul
fidivrl
dec
rcl
jns
stos
or
xor
je
sub
in
shlb
jne
xchg
push
mov
xchg
lods
sti
in
insb
pop
add
lret
mov
or
cltd
fildll
inc
mov
inc
cmp
mul
push
sbb
js
jno
lcall
fmuls
ficoms
orl
lock
test
add
subb
insl
not
pop
rorl
adc
and
rcr
xchg
dec
int
mov
or
div
adc
sbb
or
repnz
shll
mov
dec
fdivrs
mov
pop
mov
mov
cmp
xor
nop
mov
pop
push
rcll
loop
inc
ret
mov
aaa
arpl
and
test
idivb
dec
sbb
inc
repnz
add
cmp
xor
mov
inc
icebp
movsl
cmpsl
add
push
push
dec
sti
cmpb
rol
sub
and
dec
fstpt
jmp
negb
cwtl
cmp
fdivrp
jge
cmpsb
mov
jmp
and
dec
lods
pop
jge
stc
pop
stc
xchg
adc
outsb
push
testb
das
mov
aaa
mov
xchg
or
or
cmp
jne
dec
inc
cmp
or
xchg
mov
dec
or
stc
push
sub
fisubrs
popa
dec
leave
mov
cmp
out
mov
aad
cmc
and
pop
dec
pop
xchg
pop
inc
out
lea
in
rolb
jg
jbe
cmp
shlb
frstor
call
je
into
cmc
pop
ss
jbe
dec
roll
in
mov
or
xchg
dec
pop
push
push
sub
or
test
xchg
dec
push
sahf
fdivl
ljmp
mov
ss
fistpll
sbb
cld
fldl
sub
sbbb
repz
push
lock
loope
jo
xchg
sbb
pop
xor
inc
fs
sub
lods
push
or
data16
mov
stos
out
std
jnp
xchg
aas
xchg
mov
cmp
dec
es
xor
push
mov
mov
and
inc
gs
mov
mov
inc
fldenv
sub
fiadds
inc
bound
xchg
outsl
sbb
roll
nop
jle
sbb
ljmp
pcmpeqd
jno
sbb
jl
jnp
orl
fwait
stos
in
es
lock
popf
dec
pop
sbb
or
ljmp
sub
sti
mov
mov
add
ret
sbbl
and
adc
ja
mov
mov
test
or
sub
ret
jno
pop
ss
int3
sbb
fadd
pop
js
rolb
xor
leave
dec
xor
fiaddl
fstpl
mov
adc
loopne
je
mov
sub
cmc
rclb
and
xor
inc
xchg
adc
pop
xor
adc
sub
add
std
cmp
ret
js
pop
adc
rcrl
add
jns
shrb
testb
mov
scas
mov
sahf
cld
in
cs
and
cwtl
js
lods
ljmp
movsb
dec
ss
jg
adc
arpl
push
dec
adc
dec
std
push
and
xor
shrl
stc
cmc
mov
mov
add
push
popf
mov
cmpsb
lahf
icebp
int
test
add
pop
push
faddl
fldenv
ljmp
jp
lcall
and
add
in
in
jmp
mov
loop
fstps
sbb
pop
xor
pop
aam
fwait
pop
arpl
and
adc
test
cltd
cmpl
je
cmpsl
pop
fists
push
lods
lods
daa
pop
or
sarb
repnz
push
xchg
pop
sub
stos
inc
sbb
fbstp
jge
lds
pop
dec
add
push
fimull
or
adc
and
es
adc
and
loope
xor
pop
xchg
testl
lods
enter
add
repnz
xorb
dec
pop
pop
outsl
mov
in
jne
cmc
femms
int3
mov
fistpl
je
mov
push
loopne
jo
push
inc
and
xor
nop
aad
mov
xchg
dec
pop
push
mov
test
mov
xchg
sbb
test
xor
push
popa
push
sub
insl
int
mov
pop
xchg
fwait
addr16
push
test
mov
jnp
test
scas
jnp
pop
jge
adc
clc
test
sub
jle
adc
loop
addb
add
scas
sbb
xor
outsl
jnp
loop
sbb
out
adc
push
push
and
adc
inc
xor
mov
push
adc
xor
mov
cmpsb
cmp
dec
loop
aas
ss
sub
dec
rorl
and
sbb
sub
push
fs
jmp
and
jp
pop
sbb
jno
clc
pop
jne
jo
mov
xchg
fidivrs
mov
les
imul
scas
pop
cmpsl
cmp
cmp
mov
mov
add
iret
mov
jne
test
mov
and
jnp
iret
or
pop
jmp
movsl
add
and
pop
mov
je
jno
out
test
dec
sti
push
or
inc
fimull
aam
aam
sbbl
jl
mov
enter
add
or
dec
shr
mov
mov
or
push
xor
mov
xor
mov
inc
lods
xor
les
inc
cmp
std
mov
xchg
sub
cmp
fdivrl
dec
pop
push
pop
gs
adc
loop
je
inc
lods
pushf
mov
dec
sbb
jle
mov
arpl
adc
mov
test
pop
push
mov
outsb
imul
imull
test
lret
xchg
icebp
xor
inc
sub
hlt
jb
or
push
dec
adc
lahf
pop
jp
pop
fistpll
jp
adc
nop
pop
aaa
mov
add
sub
or
or
bound
mov
xor
inc
xchg
jmp
pop
dec
enter
loope
push
pop
mov
inc
push
sub
xchg
fmuls
and
insl
or
push
js
mov
xor
test
mov
sub
roll
ret
les
mov
cmp
sbb
add
mov
lds
xchg
add
into
cmp
bound
or
or
lods
rclb
test
test
adc
test
xor
pop
add
inc
push
add
dec
mov
xchg
ljmp
inc
mov
mov
test
inc
push
adc
movsb
lods
xchg
lock
dec
movsl
sub
pushl
nop
pop
sahf
mov
mov
pop
xor
ficoms
jge
lret
ja
or
add
xor
movsl
dec
cmp
jle
cmp
mov
daa
cmpsb
cltd
cmp
shrb
xor
xchg
shlb
jae
cmp
xlat
out
mov
test
ds
pop
sbb
xchg
lcall
sahf
fsubr
xchg
push
lahf
call
in
xor
andb
lret
test
pop
lock
icebp
stc
sbb
push
sub
add
push
pop
dec
push
sbb
mov
push
dec
ljmp
sarb
push
push
jne
mov
stos
test
mov
pop
in
rolb
xchg
aad
ficoms
rcr
outsl
mov
push
movsb
jns
fbstp
inc
lods
adc
dec
mov
out
loop
andb
addr16
aaa
inc
push
repz
mov
lret
cmp
bound
push
cmpsl
sbb
lcall
cmp
or
lcall
sbb
adc
jae
cli
lret
arpl
or
mov
enter
daa
dec
add
into
in
or
push
int
in
pop
clc
into
lcall
add
push
hlt
push
xorl
out
outsb
add
decl
movsl
icebp
fdivrs
dec
xchg
fldl
insl
jno
clc
fiadds
mov
ljmp
mov
pushf
std
or
mov
aaa
pop
loopne
adc
mov
repz
mov
pop
push
xchg
test
in
lahf
rorl
leave
movsb
jl
cltd
xor
sub
hlt
push
fs
xchg
push
pop
sub
cmp
xor
xchg
xor
mov
cwtl
push
sub
test
lods
ss
xor
sbbl
and
push
push
imul
pop
push
xor
push
lock
add
jnp
push
mov
mov
lret
inc
mov
in
adc
insb
sbb
stos
jg
ljmp
xor
cmpb
dec
adc
mov
cmpsl
test
imulb
or
sub
xchg
add
cmpsl
testl
js
das
sbb
jecxz
rcll
movntps
orb
mov
mov
add
or
jmp
xor
nop
inc
and
dec
mov
repnz
lcall
lea
xor
stos
pop
jae
sub
pop
sti
call
cmp
rorl
lea
ficomps
fnsave
enter
mov
lods
div
jnp
dec
add
sub
pushf
lret
xchg
mov
leave
cmp
rclb
movsb
hlt
movsb
dec
sub
sahf
scas
and
or
out
in
fstpt
or
shll
pop
test
jbe
lea
sub
or
in
popa
ja
aaa
outsl
fsubl
xchg
fmul
sub
adc
jnp
inc
iret
jle
mov
pop
pushl
and
adcb
cmpsb
cli
mov
movb
movsb
xchg
daa
add
in
adc
cmpsl
push
sbb
adc
add
sub
insl
sbb
inc
mov
test
mov
into
pop
loope
pop
jge
sub
aas
and
push
xchg
jl
imul
cmp
cmpsb
add
and
stc
sbb
je
mov
stos
pop
pop
sarl
scas
inc
mov
push
movsl
xor
xchg
int
dec
icebp
fidivrl
pushf
in
mov
mov
int3
mov
in
xor
arpl
inc
mov
bound
sbb
nop
adc
lock
jge
or
xchg
int3
sti
and
movsb
or
xlat
loopne
stos
and
test
mov
and
cmp
mov
in
and
loop
push
jo
push
aam
cwtl
stc
mov
out
or
pop
int
pop
fsubrs
lods
or
daa
mov
mov
data16
and
sahf
imul
mov
idivl
rolb
nop
rcll
ret
sbb
and
mov
andb
negl
mov
insl
rclb
mov
pop
test
cmp
lods
aaa
in
fnstsw
add
push
xchg
add
fwait
insb
call
push
rcr
push
inc
not
movsl
iret
and
pop
adc
scas
aas
add
xor
int
dec
jg
int3
test
addl
push
and
cmp
inc
fldcw
test
xchg
add
sti
cmp
and
sub
add
fucom
es
arpl
in
int
aam
dec
or
push
ljmp
sbb
mov
hlt
addr16
adc
mov
jle
dec
add
xchg
mov
jp
daa
pop
pop
imul
mov
xor
mov
and
push
cld
jnp
add
xchg
dec
sbb
mov
adc
mov
lret
jno
adc
sti
gs
lds
popa
faddp
or
das
sub
push
test
push
cmp
xor
movsb
scas
xor
jo
and
ds
pop
cmp
pop
insl
jecxz
ret
enter
hlt
dec
fsts
or
das
cli
jno
mov
in
in
and
xchg
or
stos
mulb
lcall
push
arpl
cmp
push
push
add
lods
movsb
fldt
push
mov
mov
aam
mov
addr16
in
aaa
push
push
cltd
aaa
incb
popa
and
dec
ret
lods
nop
pop
outsl
and
and
jmp
cld
int
adc
dec
popf
mov
push
shl
fcmovnu
inc
jg
add
sub
mov
xor
ds
mov
push
repnz
pop
gs
push
jmp
inc
sahf
push
cmc
adc
pushf
mov
call
xor
pop
shrl
mov
pop
or
pop
ret
ljmp
pop
inc
pusha
xlat
add
cmp
inc
dec
mov
push
xchg
repnz
sahf
fists
inc
inc
ljmp
push
fwait
aaa
jae
mov
inc
add
arpl
mov
sbb
aad
mov
mov
out
jns
mov
push
mov
test
cli
aad
or
and
jae
or
enter
jmp
push
add
or
sbbb
add
add
dec
loop
xchg
sub
inc
lret
adc
pop
sbb
int
inc
pusha
ret
jge
cs
scas
out
pop
sbb
fs
pop
cmc
dec
jno
and
jmp
sahf
js
mov
pop
popa
xchg
and
mov
lods
std
ret
iret
popf
movsl
fdivs
pushf
arpl
negl
mov
pop
xor
mov
mov
dec
pushf
pop
idiv
jp
out
movsl
ret
push
adc
mov
push
xor
inc
loop
inc
pop
mov
xor
movsb
push
mov
loopne
mov
add
aas
insl
add
mov
data16
mov
imul
mov
stos
jne
fiadds
cmp
cltd
orl
jns
js
imul
das
mov
das
test
pop
lods
fwait
xchg
sbb
fsts
dec
xor
mov
sub
cld
xchg
cmc
repnz
lods
mov
movsl
lods
loope
mov
rol
jle
repnz
jp
aas
in
arpl
lock
dec
lahf
push
mov
fists
aas
outsl
pushf
adc
cmp
lock
sbb
dec
int3
mov
push
fadds
dec
and
mov
lea
mov
out
movsl
sbb
hlt
call
call
lahf
pushf
xor
daa
adc
sbb
sbbl
xchg
lds
mov
test
pop
sub
inc
mov
mov
push
and
insl
les
or
mov
pop
sbb
daa
push
icebp
out
out
xchg
lea
std
jmp
enter
and
les
sub
lock
in
mov
iret
cmp
pop
mov
mov
push
ds
jb
sub
lds
aad
lea
or
adc
ss
and
adc
or
and
pushf
leave
pop
mov
sbb
insb
xchg
adcb
inc
in
mov
pop
stos
cmp
mov
insb
jae
adc
mov
mov
loope
mov
or
add
pop
and
jle
dec
and
mov
jmp
pop
jg
and
pop
add
or
adc
stos
push
sarl
push
or
fiaddl
inc
sub
jb
adc
repz
fidivrs
cmp
xor
cmpl
shrb
mov
lds
push
aas
gs
in
jmp
daa
push
pop
cmp
hlt
cmp
pushf
lret
sti
mov
mov
mov
sbb
gs
xor
pop
sar
add
push
enter
pop
mov
div
mov
and
pop
dec
inc
aaa
xchg
mov
pushf
xor
mov
aam
xor
or
fcoml
push
adc
mov
mov
jns
xchg
imul
pop
les
jbe
mov
and
push
jne
adc
mov
ret
xchg
imul
aam
xor
inc
mov
gs
repnz
sahf
daa
pusha
pop
cltd
mov
cmp
clc
dec
push
push
movsb
loopne
fistps
jg
sub
jae
sbb
rcrl
not
add
xchg
mov
mov
inc
mov
leave
repz
ljmp
xchg
push
mov
leave
adc
and
xchg
mov
sbb
xor
pop
lods
js
lret
add
insb
cltd
outsb
jmp
sbb
xorb
lcall
mov
inc
dec
add
sbb
sub
xor
inc
stc
loope
lea
pop
cltd
sarb
jl
inc
inc
jg
shrl
out
mov
push
mov
aas
cld
or
ss
fbld
xor
xchg
das
adc
dec
pushf
aam
cmp
roll
rep
lret
or
sub
cmpsb
pop
push
inc
pop
push
push
cmpsb
out
jb
fldenv
or
jmp
in
mov
lret
je
mov
inc
adc
filds
xor
in
je
out
lock
daa
fsubrs
mov
sbb
push
imul
dec
adc
aam
testb
lret
cmp
test
mov
imul
sbb
cmp
jno
enter
jp
jecxz
stc
aad
aam
cmp
jge
inc
pop
shll
ljmp
insl
push
jl
sub
frstor
mov
adc
cmp
inc
lock
mov
jmp
pop
mov
xchg
inc
or
cld
sbb
or
je
push
sbb
and
cmpsb
or
xchg
cli
out
and
insb
das
or
rolb
fisubrl
adc
out
ret
popa
out
mov
sub
ret
push
mov
push
xchg
in
xorb
or
popf
sahf
adc
inc
ja
std
mov
inc
aaa
rolb
rcrb
sarl
jno
jnp
lcall
int
dec
test
aad
pop
push
adc
xchg
push
mov
ret
arpl
inc
jp
sbb
and
scas
call
xor
test
mov
jae
and
and
out
test
lds
push
lcall
push
xchg
sbb
xchg
lods
mov
xchg
push
les
xchg
push
nop
mov
rcl
jbe
pushf
mov
iret
pop
mov
mov
and
pop
cld
push
pop
add
fadd
loop
jmp
loope
lock
or
xor
sbb
fs
xor
inc
or
mov
sub
add
jne
mov
shrb
ljmp
movsl
clc
inc
jmp
cmp
add
mov
mulb
cmp
movsb
jne
ja
and
or
in
and
das
mov
insb
jne
adc
in
fldenv
pop
mov
pop
in
loopne
addb
cmp
cmp
mov
stc
mov
pop
sub
fs
insl
test
and
out
mov
jnp
gs
ret
leave
into
in
ss
or
shl
mov
insb
jb
xchg
jo
mov
cld
jmp
xor
into
or
or
cld
and
loop
popf
fmuls
jae
lds
xor
lock
push
push
leave
out
and
orl
add
repnz
stc
lods
inc
adc
repnz
insl
xchg
dec
xor
mov
add
dec
jge
sbb
lods
mov
mov
fneni(8087
les
out
mov
out
enter
fdivrs
and
or
cmp
mov
xor
adc
or
shr
push
cmc
xlat
rol
fsubl
xchg
cmpsb
and
xchg
xor
or
xchg
mov
push
imul
into
lahf
das
cltd
cmp
adc
cmpsl
add
mov
sahf
dec
dec
cmp
and
mov
in
aad
pop
mov
inc
inc
xchg
inc
into
dec
mov
add
add
cmp
add
rol
inc
dec
jmp
movsb
inc
add
or
jnp
loopne
sub
dec
pop
add
add
dec
es
test
out
popa
scas
scas
xchg
movsl
and
pop
loopne
mov
push
dec
and
repz
jb
divps
mov
or
push
test
icebp
repnz
xchg
add
lds
std
js
jge
gs
inc
jecxz
jns,pn
sbb
clc
sbb
repnz
aas
and
xchg
and
out
xchg
mov
xor
or
lret
and
mov
xchg
inc
xchg
adc
jl
dec
test
jne
sti
jno
mov
jmp
jno
and
mov
sub
ror
daa
xchg
add
addl
inc
imul
out
lahf
adc
test
decb
push
les
loop
inc
sbb
stos
xor
fsubl
rcrl
rclb
mov
mov
pop
rclb
pop
mov
ret
int
in
hlt
pop
jne
xor
std
jmp
cltd
shll
and
mov
mov
or
adc
xchg
cmp
cmp
push
cld
roll
and
lds
jmp
sbb
pushf
add
loop
mov
sahf
arpl
jg
mov
mov
aam
add
jge
out
leave
sbb
or
cmp
in
rcll
stos
in
add
push
subl
sub
cmp
inc
call
push
push
fildl
mov
adc
inc
pop
and
das
call
mov
pop
jecxz
popa
xor
imul
rep
cmpsl
adc
jl
ret
fisttps
enter
push
mov
shlb
mov
cmp
mov
movsl
mov
add
shrb
jnp
in
xor
outsl
inc
sbb
ret
push
gs
outsb
stos
mov
insl
cmpl
shll
into
dec
xor
mov
xor
leave
pusha
test
shrl
into
gs
xchg
xchg
sbb
sub
rorb
jmp
mov
cmp
test
push
jne
mov
xchg
hlt
fsts
push
inc
aad
repnz
fnsave
mov
movsb
mov
int
rol
push
push
daa
fwait
add
ficomps
sbb
and
sbb
sbb
es
sahf
popf
jns
mov
cmp
aam
push
add
xchg
dec
dec
pop
or
fidivrl
fwait
dec
mov
or
lahf
mov
add
inc
cmp
popa
insb
mov
in
or
mul
push
mov
loopne
out
jg
int
pop
jmp
pop
mov
mov
cli
in
mov
jle
xchg
pop
jae
inc
adc
lock
jp
xor
and
std
mov
and
push
adc
gs
adc
movsb
test
mov
push
roll
lds
xchg
pop
push
cmpsb
cmp
mov
dec
dec
sbb
add
fmull
aaa
pop
jle
add
cld
fwait
push
notl
icebp
out
adc
xchg
dec
inc
mov
add
jecxz
fisttps
push
jno
arpl
cmp
xor
xchg
mov
inc
pop
push
mov
inc
pop
xchg
call
popf
aas
add
mov
pusha
adcb
xor
xchg
and
aam
fs
mov
fcomps
int3
std
and
sbb
pop
fsubs
sbb
sbb
inc
adc
shrl
sbb
in
bound
btr
dec
cmp
cmp
imul
cmpsl
add
ret
ja
fimuls
ljmp
mov
lods
pushf
dec
jp
into
add
enter
in
insl
add
ss
test
lcall
push
divl
nop
pop
cs
mov
call
xchg
jg
outsb
push
inc
jl
cmpl
iret
sub
cltd
pushl
cmpsb
enter
fnstenv
or
andl
insl
daa
pop
jbe
sub
stos
cld
sahf
or
dec
imul
push
dec
int
cmp
and
fidivl
pop
inc
lods
xchg
sub
pop
or
call
notb
adc
in
mov
popf
out
pop
les
cmp
popf
test
frstor
pop
pop
push
jnp
ss
lock
jae
pop
dec
in
inc
je
jb
fcom
mov
push
cmp
jle
imul
and
fs
loope
in
jl
add
ficoml
out
mov
lods
das
int3
subl
push
inc
pop
add
mov
stc
push
pop
in
mov
movsl
lret
es
dec
cmpsb
xchg
cltd
mov
jge
imul
xor
or
and
movsb
add
cmpsb
inc
push
dec
xor
test
dec
cmp
cli
cmc
in
adc
jb
dec
jo
cmp
vminsd
mov
push
mov
loop
stc
ret
xorb
xchg
outsl
out
jge
outsb
loop
lock
inc
pop
imulb
loopne
icebp
and
jae
xchg
stos
ror
jge
pop
or
pop
and
bound
aad
mov
ret
daa
jg
js
adc
clc
inc
in
or
dec
ljmp
in
lods
cld
push
add
call
in
repnz
das
outsb
clc
xor
aas
mov
sahf
mov
nop
and
push
movsl
movsb
shll
pop
dec
push
rorl
inc
nop
sbb
dec
imul
cmp
pushf
andl
lahf
lods
adc
mov
jle
jae
std
adc
dec
into
xchg
lahf
call
fcoms
in
inc
sbb
mov
xor
into
pop
scas
out
jle
or
fcoml
sbb
out
adc
and
insb
inc
jne
ret
sub
sti
push
push
pop
dec
jne
divb
xchg
imul
jge
add
dec
loope
mov
push
push
rcll
add
std
cmp
daa
mov
in
js
xor
fnstsw
and
shrl
es
hlt
or
and
cmp
cmpsb
mov
arpl
pop
and
jnp
dec
test
ret
adc
add
out
mov
xor
jae
dec
punpckhdq
sbb
fcompl
scas
dec
outsb
es
xor
movzwl
or
lret
addr16
cmp
stc
popa
rcll
movsl
xor
mov
mov
mov
mov
jns
add
inc
jae
ret
lds
mov
mov
mov
pop
loope
imull
and
movsl
cltd
loopne
mov
xor
addl
push
stc
es
or
lods
out
add
push
shll
lcall
dec
inc
cld
outsl
in
pop
sbb
arpl
jg
dec
jno
das
add
leave
fsubrl
cwtl
mov
flds
ret
mov
cmc
and
or
dec
jle
rcr
jo
or
xchg
cmp
push
mov
cmp
aaa
into
test
inc
lret
ljmp
jns
sbb
sbb
adc
mov
inc
dec
mov
cmc
je
xor
mov
pushf
imul
jg
aad
push
fcomps
mov
jge
inc
lea
mov
lods
movsb
rclb
mov
out
mov
enter
mov
xchg
imul
xchg
cli
int
cld
pop
xor
xchg
sbb
sub
leave
mov
dec
mov
dec
into
sbb
das
inc
aam
mov
xchg
scas
adc
dec
test
std
mov
insb
sub
aaa
data16
lea
pop
xchg
mov
inc
mov
push
jns
or
ret
dec
adc
ds
push
movsl
xor
aad
xlat
mov
push
xchg
insl
scas
and
adc
mov
mov
sahf
cmp
jmp
mov
cmp
movl
pop
pushf
and
sbb
pop
and
xchg
jle
or
mov
lock
inc
push
loope
in
pop
dec
test
jmp
fadds
jecxz
in
int
xor
stc
xlat
sub
subl
xchg
popf
ds
incb
sub
and
and
jae
movsl
subb
sub
scas
mov
mov
das
pop
add
xchg
jmp
stos
in
sub
add
movsb
arpl
imul
adc
and
xchg
jne
cmp
mov
movsl
jge
or
mov
push
sbb
mov
rorl
das
lcall
sbb
dec
stc
and
mov
icebp
test
jmp
jp
or
shl
inc
int
insb
popa
jmp
mov
xacquire
sub
jecxz
or
mov
sarb
and
xchg
clc
scas
mov
dec
adc
jns
and
sbb
shlb
inc
test
lahf
cmpsb
test
out
xorb
adc
fsubp
inc
dec
out
sub
mov
pushf
inc
lods
stos
xchg
int
iret
xor
adc
inc
cmc
loope
out
add
insb
jecxz
mov
movsb
lods
and
dec
push
pop
mov
fimuls
inc
lock
cwtl
insb
sbb
fstpt
jg
add
sti
add
into
test
stos
inc
add
popa
fwait
out
and
lea
js
or
outsl
pop
mov
adc
int
out
sbb
ret
cmp
jecxz
movsl
mov
or
xchg
psllw
xchg
pusha
addl
ds
pop
pop
xchg
pop
sub
es
push
push
xchg
in
push
xor
dec
dec
xchg
mov
lahf
push
cmp
pop
repz
inc
repnz
push
je
jo
aad
inc
mov
gs
add
lods
pop
dec
addr16
xchg
xchg
in
fadd
outsb
clc
xchg
mov
ss
icebp
jle
out
cmc
adc
lds
leave
and
push
or
and
xor
scas
ret
fistl
loope
cmpsl
insb
aad
cmp
jo
mov
xor
push
inc
push
dec
jnp
adc
bound
mov
sbb
add
mov
nop
mov
mov
adc
sbb
cmpsl
rcr
fwait
dec
dec
inc
fwait
loopne
mov
es
push
xor
jmp
add
in
add
sub
or
dec
cmpsb
aaa
dec
push
push
push
push
dec
aas
add
and
xchg
dec
add
fistpl
mov
xlat
xor
add
mov
mov
xor
fdivrs
test
js
adc
add
cmpsb
cmp
mov
sbb
ficoms
mov
repnz
cmp
dec
ja
push
loopne
pop
cmp
add
push
out
aam
sbb
xor
jns
xor
mov
xor
aad
dec
mov
sub
push
pushf
popf
cld
xor
mov
or
cmp
and
scas
add
dec
pop
rorb
imul
lods
sbb
xor
arpl
aad
loopne
inc
cmp
dec
int
xchg
je
lods
xorl
cmpl
jne
mul
sahf
into
in
lcall
jp
mov
xchg
in
xchg
or
adc
mov
adc
fadds
push
bound
inc
divb
jge
int3
std
push
dec
cmpsl
js
imul
cmp
fsubs
mov
xchg
fwait
out
bound
mov
in
xchg
dec
enter
adc
and
dec
sbb
mov
out
pop
lret
imul
iret
roll
pop
insb
pushf
lea
sbb
push
or
add
and
insb
jo
xchg
push
push
xor
mov
fldcw
insb
sub
pop
in
rorl
rcrl
mov
mov
or
xchg
sub
sarb
fisubrl
inc
sbb
inc
cmp
clc
ret
jno
imul
mov
faddl
clc
test
jmp
hlt
loopne
out
xor
push
or
sbb
aad
xchg
lds
mov
mov
add
inc
xchg
pusha
or
shlb
imul
aad
int
add
dec
push
push
jns
int
daa
insl
sahf
lea
adc
movsb
sub
mov
sub
mov
in
mov
sub
pop
pushf
les
fcomps
inc
call
inc
cmp
and
and
sbb
pop
cltd
sbb
or
lods
inc
jecxz
mov
in
pop
dec
sub
xchg
sbb
jmp
adc
jge
push
mov
fs
push
and
and
repz
mov
cmp
pop
jbe
lock
mov
fidivrs
push
loope
push
inc
outsl
clc
subb
pop
mov
cmp
mov
js
fs
out
sbb
dec
and
jle
hlt
or
jl
sbb
insb
add
inc
cmp
mov
aad
push
pop
std
fs
aad
ret
dec
inc
xor
dec
ja
pushf
mov
lahf
xchg
pop
roll
jnp
xchg
aas
push
cs
jge
push
das
adc
push
or
loop
mov
pusha
fstpt
push
pushf
and
icebp
ret
dec
stos
xchg
inc
sbbb
andb
or
jnp
movsb
dec
xchg
mov
movsl
jae
ja
andb
adc
mov
add
stos
lcall
fwait
or
or
push
cmp
jb
pop
mov
cmc
movsb
loopne
repnz
aad
mov
cli
shr
add
insl
push
loope
xor
inc
and
test
stos
dec
pop
ljmp
add
pop
ljmp
out
sarl
inc
sahf
repz
fnsave
dec
pusha
mov
shlb
test
xchg
popa
mov
push
mov
mov
jns
and
mov
jmp
jbe
sbb
or
cmpsb
cmp
dec
into
pushf
push
mov
daa
pop
xchg
es
js
cmpl
in
aaa
stc
iret
sarb
mov
lods
ljmp
out
or
std
cmp
hlt
dec
flds
pushf
cwtl
ficoms
add
filds
and
cmp
aad
cmp
mov
fcoms
lock
aam
mov
dec
inc
or
popf
sbb
in
pop
inc
xorl
jne
rcrb
scas
xchg
push
mov
ror
leave
movsb
or
pop
int
pushf
fbld
mulb
lcall
add
pop
stc
inc
jl
leave
lds
test
or
loop
lea
lock
mov
pop
inc
add
gs
adc
sbb
jns
jle,pn
cmp
mov
push
pop
mov
xlat
and
or
cli
ja
lcall
xor
xchg
scas
mov
shll
mov
push
test
cmp
xor
sub
es
hlt
cld
xchg
and
cmpb
xor
push
pop
mov
inc
sbb
xor
push
mov
lods
shlb
sub
enter
cltd
push
push
or
mov
dec
sbb
jns
sub
pushf
imul
pushf
lret
mov
pusha
fisubrl
adc
jg
pop
rep
test
test
test
mov
mov
cmp
or
sti
imul
mov
add
pusha
rclb
subl
xor
fxam
data16
mov
mov
dec
xor
xor
inc
scas
test
sub
mov
push
add
gs
scas
xlat
mov
mov
pop
sub
lahf
bound
or
jl
addr16
inc
loop
or
stc
lods
and
mov
adc
xchg
js
push
push
xor
mov
sahf
ret
add
sbb
fwait
lods
lret
roll
push
fdivs
loope
sub
outsb
daa
ret
jge
icebp
fbld
mov
aad
loopne
cmpsl
mov
bound
addr16
push
pop
dec
mov
dec
xor
popf
div
add
push
fidivrl
pop
add
and
insb
stos
sbb
pop
mov
jmp
mov
into
in
pop
or
jl
mov
cltd
add
sub
xchg
adc
das
testb
addr16
aas
push
popf
sub
shrl
cmp
jmp
mov
dec
fiaddl
add
pop
sbb
and
ljmp
rcll
jns
xor
dec
shrb
repnz
int3
sbb
mov
jmp
in
lods
mov
movsl
adc
mov
and
enter
or
push
sub
fmuls
mov
ljmp
lahf
sbb
inc
cld
mov
cmp
out
mov
and
mov
and
out
daa
sti
aaa
sbb
inc
jbe
repz
loope
lds
adc
daa
int3
push
pop
fnstenv
lahf
sbb
bound
repz
mov
ret
adc
inc
rcrl
addr16
sub
cmpsl
and
stos
mov
sub
loop
jnp
ret
subl
push
push
roll
rcll
mov
aas
mov
pop
fcos
aam
loop
pushf
sub
dec
mov
add
jecxz
ficompl
push
lret
mov
ret
fsts
arpl
fstl
iret
sub
inc
fsubrl
dec
pop
enter
pusha
icebp
divb
js,pt
pop
pop
iret
imul
ljmp
lds
add
arpl
loopne
xor
outsb
fsubs
lods
shlb
daa
icebp
out
jne
add
cmp
jne
test
sub
pop
sub
bound
mov
call
fcomps
or
sub
fidivl
jb
add
add
cmp
cltd
push
sub
dec
or
insb
xor
insl
jnp
lock
aam
mov
mov
fadds
inc
negb
mov
shlb
xor
cmp
imul
mov
push
mov
or
pop
and
xchg
dec
push
stos
dec
adc
xor
outsl
das
or
int
sbb
mov
dec
dec
movsb
cmp
pop
push
mov
dec
divb
mov
mov
xchg
mov
xchg
dec
imul
fdiv
dec
dec
insl
push
je
pop
cmp
cs
cmp
or
cli
push
out
in
popa
clc
inc
repnz
inc
leave
cmpsl
test
insb
xchg
push
fcomps
stc
mov
dec
loop
lods
push
fmul
idivb
ljmp
xor
mov
push
movb
add
jmp
push
fcoml
je
push
xchg
pop
jle
mov
es
mov
mov
cmp
jg
out
idivl
mov
dec
out
pop
lahf
hlt
push
iret
rorl
lds
ja
insl
pop
repz
data16
xlat
ljmp
jle
push
xchg
cmp
scas
call
cmp
arpl
cmp
pop
adc
jge
cmp
push
xorb
push
sbb
xchg
nop
adc
imul
mov
in
jns
xchg
xor
jp
repz
ficoml
out
pop
pop
inc
inc
ja
mov
icebp
ret
adc
sti
fcomip
xor
leave
jo
stos
pop
jne
ret
ret
filds
or
loope
pop
popa
fdivrl
out
xchg
cmp
mov
out
sbb
stos
mov
sbb
lds
aas
mov
arpl
and
mov
in
dec
inc
int
mov
mov
shrl
aaa
outsl
jbe
pop
mov
jno
jae
ljmp
pushf
int3
test
xchg
sub
and
int3
pop
and
lods
cmp
imul
pop
imul
xor
inc
into
shll
iret
rolb
xchg
cld
xchg
arpl
ss
dec
in
xor
jb
jge
cmpsb
inc
sub
imull
pop
jle
pushf
xchg
push
out
inc
adc
lods
mov
push
mov
or
ret
outsb
adc
push
add
adc
sbb
mov
push
cmp
mov
mov
and
dec
xchg
mov
ficoml
dec
sarb
xchg
int
int3
sub
arpl
imul
jno
xlat
lahf
sub
es
jecxz
dec
xchg
stos
iret
imul
jmp
sbb
jge
dec
clc
xor
faddl
stos
jecxz
xor
fisubs
nop
jle
stos
inc
loop
add
mov
push
hlt
pushf
das
add
cmp
in
std
jle
and
in
or
xchg
add
insl
jmp
sub
fs
sub
gs
lcall
mov
in
aam
arpl
mov
mov
pop
ss
outsl
mov
iret
invlpga
add
test
mov
ds
subl
inc
jae
add
xor
pop
int
jl
loope
repz
lock
mov
mov
hlt
cwtl
rorb
aad
test
adc
iret
and
mov
cwtl
repz
in
fnstsw
jp
and
mov
aam
pop
and
fwait
adc
jb
in
rol
test
fldcw
jnp
cmc
or
and
mov
xor
jnp
lret
add
cwtl
insb
scas
sub
adc
pop
shll
les
mov
sub
mov
cld
test
jo
mov
es
out
inc
mov
cld
xchg
xchg
and
lcall
push
jecxz
xchg
cltd
push
and
fsubrl
push
scas
aas
xchg
jns
test
cmc
test
xchg
stc
push
data16
xor
mov
rcrl
outsl
push
gs
xor
les
sub
inc
fs
sub
push
lcall
xchg
jl
xchg
push
gs
xchg
scas
mov
cmp
push
ficomps
das
pushf
call
mov
jge
push
in
scas
dec
xchg
lea
aas
xchg
jp
ds
mov
vpsubusb
lods
jle
or
push
jg
popf
cs
mov
xlat
jp
push
mov
fs
pusha
and
sbb
lds
pop
call
mov
and
and
out
call
mov
mov
jle
shr
inc
fxch
adc
pop
push
dec
adc
movsb
cmp
scas
mov
mov
jae
lods
les
add
xlat
in
adcb
add
jb
xchg
add
mov
movb
xor
insl
push
cmpsb
inc
mov
imul
dec
xor
xor
in
andl
push
scas
push
iret
fldt
pop
pop
daa
ud1
add
inc
xchg
cmc
hlt
std
xor
lea
sub
dec
add
push
cmp
or
mov
aaa
xchg
jge
xor
ja
or
daa
or
pop
mov
jne
negb
stos
or
jae
test
and
add
and
inc
jl
jo
and
dec
push
sub
fwait
jnp
jmp
test
int
xor
popl
in
jp
sbb
xchg
popf
movsb
pop
mov
sbb
xor
mov
adc
ret
mov
push
ljmp
mov
add
dec
imul
pop
xchg
test
aad
in
pop
in
add
addb
fpatan
fwait
rcll
dec
push
or
insl
sbb
inc
or
xor
pop
shrd
xchg
in
je
xor
call
flds
loope
mov
mov
jo
stos
sahf
mov
test
fldenv
adc
xor
movl
ss
xchg
and
xchg
and
ret
sahf
adc
cmp
mov
push
aas
add
loopne
inc
dec
mov
pop
sub
inc
daa
popl
subl
sub
clc
pusha
inc
adc
lock
and
leave
divb
sti
stc
or
and
pop
fsubrl
aad
pop
outsb
rorl
divl
shll
sbb
sarl
nop
mov
daa
pop
dec
lea
xchg
int
sarb
testl
dec
push
sbb
push
pop
and
push
pop
dec
mov
adc
std
outsl
adc
popa
lcall
fisttps
mov
test
sub
fsubr
repnz
aam
mov
push
pop
lahf
dec
sti
lods
push
xchg
popa
dec
pop
pop
xor
jecxz
in
jp
daa
jb
pop
mov
test
pop
jge
xor
sbb
into
mov
inc
xor
rcr
inc
mov
ror
scas
xor
inc
xor
push
and
mov
xchg
inc
jnp
inc
jl
daa
or
mov
inc
rcl
mov
adc
jne
jno
sarb
popf
or
fwait
push
mov
pop
mov
cmp
lods
cmp
xor
icebp
lret
dec
pop
and
inc
pop
das
pop
imul
stc
dec
jo
mov
push
xor
imul
inc
std
cmp
cmp
dec
popf
pop
xchg
add
dec
pop
xchg
popa
cmpb
fcomps
scas
es
fs
add
mov
das
ret
mov
lea
loopne
dec
mov
jg
inc
mov
adc
inc
push
mov
imul
cmpsl
cmp
pop
sbbb
inc
in
pop
pop
jo
subl
shrb
xchg
cwtl
gs
xchg
rcr
addr16
rcrl
leave
mov
lahf
ret
ja
mov
repz
popf
adc
scas
nop
push
add
add
cmp
mov
mov
jo
xchg
push
xor
push
outsl
pop
cmc
movsl
ret
mov
cld
and
imul
push
xorb
mov
push
or
aas
mov
mov
pop
jg
adc
pop
xor
and
mov
cmp
sbb
mov
dec
cmp
mov
aam
and
lods
lods
dec
daa
ret
fsub
inc
out
out
in
shr
jle
lahf
sbb
aam
and
cmp
pop
sub
jg
push
mov
insl
xchg
fcomps
cmp
cmpsb
adc
shr
push
sbb
or
dec
jmp
xor
fldl
push
pop
xlat
push
cmpsb
sub
sbb
lock
in
fsubrs
mov
xchg
sbb
shll
insb
jecxz
cmp
call
cmp
inc
mov
and
pusha
push
or
sbb
ret
lods
ss
ja
sub
pusha
sub
scas
sahf
mov
aam
and
add
xor
mov
mov
adc
ja
shlb
and
ljmp
addl
jnp
pushf
adc
or
daa
lret
or
push
rorb
ret
mov
leave
and
stos
loope
sbb
out
mov
mov
mov
mov
inc
push
fwait
mov
pop
sahf
inc
fwait
pop
inc
push
add
jns
and
dec
adc
and
inc
xor
repnz
clc
mov
add
pop
jmp
xor
ja
mov
xor
mov
xchg
mov
push
inc
xor
pop
sbb
pop
mov
cmp
or
jl
inc
mov
repnz
pop
das
push
inc
xor
push
add
xchg
jnp
push
dec
or
mov
and
cmc
cwtl
push
jg
cmpsl
push
add
mov
stc
fstl
sub
sub
sbb
movsl
out
scas
push
push
fcompl
dec
pop
out
jo
pop
das
inc
js
jb
xchg
ret
and
mov
in
jp
dec
pop
iret
and
mov
mov
xor
inc
lods
fs
sbb
jge
insl
stc
xor
dec
inc
shl
add
cmpsb
pop
cmp
mov
adc
popl
je
sub
mov
enter
xchg
dec
pop
mov
aaa
xor
into
jnp
xchg
inc
pushf
sarb
loop
sar
int3
call
add
jae
mov
xor
mov
wrmsr
push
aam
push
das
imul
push
test
mov
sbb
bound
imull
or
cmp
mull
das
push
push
jg
js
sbb
push
pop
push
cmc
outsl
xchg
test
sbb
add
sub
popa
and
mov
sarb
ja
sub
sub
ficoms
int3
dec
xchg
push
aad
jnp
jecxz
xor
cmc
imul
mov
cmpl
xlat
test
loopne
sbb
sub
loopne
lret
clc
cmp
inc
rolb
mov
mov
xor
repz
inc
jo
xor
push
cmp
clc
out
jp
sub
lret
inc
inc
xchg
fistpll
outsl
repz
stos
popa
lds
ja
imulb
fmulp
push
cmc
add
and
int3
jns
icebp
cld
mov
nop
inc
pop
and
jo
mov
fsubr
dec
sbb
aaa
cwtl
dec
cld
lds
out
mov
mov
scas
inc
mov
fcoml
negb
and
int3
mov
nop
pop
push
stc
xlat
call
jecxz
addr16
adcl
and
movq
ja
nop
andl
mov
cli
cmp
inc
ds
push
mov
and
sub
incb
push
xor
adc
push
cs
add
and
rcll
mov
daa
push
lahf
sahf
popf
cmp
or
push
sbb
movsb
fisttpll
repz
inc
and
mov
fs
add
in
dec
pop
mov
int3
dec
fildll
aas
pop
xchg
sbb
jb
jnp
pop
sub
inc
xor
movsl
into
inc
arpl
pop
sbb
add
add
enter
call
or
idiv
daa
or
cmp
jo
insb
jmp
movb
pop
subb
sbb
mov
mov
cld
out
fadds
pop
pop
sti
push
sti
push
inc
pop
int3
aam
scas
pushl
stos
push
pop
out
xchg
mov
push
jbe
inc
inc
lock
out
mov
leave
sbb
jne
jl
dec
sbb
addr16
out
aas
add
xlat
cmc
sbb
cmp
das
pop
scas
imul
mulb
cmpsb
dec
or
jo
inc
xchg
add
inc
fcmovnu
inc
push
data16
mov
push
dec
movsl
out
add
fmuls
cmpb
xor
fcoml
adc
cmc
dec
mov
mov
fcompl
dec
sbb
dec
fldt
cwtl
cwtl
push
shll
imul
jb
fimuls
cs
cmp
and
out
in
sbb
adc
fidivrs
add
xchg
mov
rcr
sbb
jbe
daa
push
mov
dec
sub
out
je
jae
iret
out
js
and
pop
sbb
dec
jle
sbb
idiv
arpl
fwait
not
popa
push
negl
popa
jle
and
loop
inc
pop
fwait
cmpsb
jecxz
movsb
mov
lock
es
fistpll
adc
or
cltd
cld
push
cmp
ret
adc
lcall
test
movsb
push
loope
push
ss
loopne
sahf
pop
mov
xorb
lret
pop
mov
mov
jae
out
test
pop
mul
push
stos
mov
lods
sbb
out
shlb
bound
fidivrs
add
subl
int3
fmull
and
sbb
cmp
pop
jecxz
jae
cli
scas
mov
test
lds
pop
fmull
pop
xchg
in
mov
xor
jno
push
gs
cmp
ret
or
cmpsb
xchg
adc
out
loopne
and
fisubrs
sub
loop
lds
pushf
adc
xor
test
add
xlat
sti
jge
mov
jge
nopl
mov
js
hlt
xchg
aam
repnz
out
or
aaa
adc
sub
cld
movsl
adc
xchg
sar
stos
stc
xchg
lods
dec
sbb
fcoms
cmp
fxch
push
push
daa
dec
test
aaa
and
cld
push
mov
pop
push
test
inc
sarl
push
popa
push
test
shll
jno
stos
scas
rcrl
and
leave
add
das
int3
sub
test
mov
mov
sbb
sbb
hlt
mov
mov
xor
nop
xchg
popa
push
pop
mov
and
inc
inc
push
push
enter
ror
xor
fsubrs
dec
jle
or
dec
lods
fidivl
and
cltd
mov
fdiv
loope
shrb
sarl
test
fildl
inc
push
mov
push
jo
mov
adc
scas
divl
inc
pop
jnp
popf
std
jo
lahf
jno
cmp
and
dec
xchg
xor
xor
dec
xchg
sbb
test
dec
push
pop
jmp
cmp
test
cmc
call
faddp
sub
notb
sbb
lods
in
fidivrs
loop,pt
fstpl
daa
and
cs
mov
sbb
mov
rorl
mov
jae
das
jno
and
out
icebp
push
aaa
pop
inc
mov
scas
in
jmp
xor
cmc
je
mov
add
movsb
cli
push
sbb
push
or
scas
gs
les
xor
cmp
mov
in
jbe
stos
lods
outsb
rcl
iret
mov
cmpsl
mov
aam
call
jbe
fmulp
es
push
lret
push
and
mov
mov
push
and
bound
push
in
jl
sub
popa
test
fstl
adc
lahf
mov
xchg
sub
sbb
xchg
pop
movl
orl
stc
jle
push
mov
or
push
cmp
dec
add
fnstsw
dec
cmpsl
shll
inc
es
je
fucomi
add
xchg
mov
enter
popa
ljmp
and
pop
fs
mov
jbe
pop
not
pop
pop
ja
leave
enter
call
cltd
gs
sbb
pop
shll
rcrl
push
xorl
xor
popf
pop
aaa
push
and
xor
loopne
jl
imul
jo
pop
mov
xchg
cmp
and
lock
xor
aaa
mov
jg
scas
jne
dec
push
mov
stc
pop
insl
in
movl
cltd
xchg
jb
add
ret
adc
pop
mov
jge
xor
xchg
jle
sti
inc
lods
or
fwait
pop
pop
and
mov
outsl
jmp
aaa
loop
repnz
sbb
xchg
mov
sbb
pusha
out
test
mov
xlat
mov
and
inc
lahf
test
jb
movsb
outsb
mov
pop
adc
adc
ret
mov
fxch
imul
add
stos
test
imul
addb
lcall
inc
pop
pop
mov
sbb
in
lret
add
adc
lahf
into
dec
int3
cld
inc
xchg
inc
mov
lcall
or
movb
call
and
js
lcall
stos
movsb
pop
in
ljmp
and
inc
popa
adcb
addb
jae
nop
cmpsb
in
pop
lcall
aas
jmp
mov
fiadds
iret
mulb
shlb
mov
cs
fsubrs
cmp
mov
dec
jp
pushf
shll
cmp
iret
inc
and
jno
leave
testl
and
cmp
xchg
push
mov
hlt
daa
xor
cmp
mov
and
or
mov
xor
pop
push
lahf
sbb
pop
pop
test
add
arpl
out
inc
jno
lret
mov
push
jmp
test
into
push
xchg
sub
jbe
inc
das
shll
pushf
mov
and
mov
fldt
inc
xor
cwtl
sub
jmp
aas
stos
push
outsl
sbb
fidivrl
clc
mov
fimuls
ret
sub
xchg
mov
arpl
add
imul
lock
fdivs
pop
lods
clc
mov
pop
push
sub
iret
int3
movsl
add
std
out
push
inc
sbb
sbb
jae
inc
in
test
js
pusha
sbb
sbb
sbb
xchg
inc
insb
fdivrl
into
adc
std
jle
fisubl
scas
aam
bnd
pop
aaa
pop
cltd
sub
incb
sub
mov
mov
dec
push
out
xchg
add
aas
pop
inc
ljmp
add
repnz
xchg
lea
inc
jbe
cmp
icebp
push
cltd
insb
adc
and
roll
cmp
std
pop
xorl
test
sub
gs
dec
mov
mov
sbb
iretw
addb
mov
cld
subl
mov
pop
mov
xor
inc
push
ljmp
sub
mov
cmpsl
orb
pop
lret
or
mov
inc
push
sahf
pop
fs
repz
movsb
lret
mov
rcl
pop
lods
in
call
xchg
pushw
lahf
imul
icebp
lock
clc
hlt
mov
idivl
jecxz
cmp
and
cwtl
cmp
push
dec
fisubs
xor
aad
cmp
jb
movd
sbb
insb
jnp
lahf
sub
inc
pop
cmp
jae
push
add
mov
mov
push
xchg
hlt
nop
or
sub
adc
dec
sub
out
stc
aas
sub
xor
in
add
out
and
cli
xor
add
sub
shrl
inc
pop
dec
sub
dec
sub
std
and
fimuls
cwtl
and
data16
dec
andl
cwtl
cmp
adc
xor
and
js
getsec
or
cmp
xor
inc
pop
jo
imul
out
movsb
in
stos
push
insb
pop
sahf
das
jae
lods
es
push
fldenv
mov
adc
call
insl
mov
mov
lret
rorb
dec
and
dec
inc
imul
dec
jnp
movsl
push
loope
cs
movsb
jmp
movsl
push
lret
fsubrl
imul
pop
es
xchg
mov
mov
aaa
adc
in
imul
pop
int
add
mov
dec
cli
mov
mov
mov
add
test
cmp
dec
push
std
test
lcall
dec
stos
sbb
mov
inc
mov
test
movsl
andl
pop
cmc
pop
mov
into
fistpl
in
cbtw
fdivp
sbb
pop
pop
xlat
mov
aas
jle
movsb
add
mov
inc
pushf
add
adc
cmp
dec
inc
xlat
pop
push
pushf
mov
cwtl
pop
test
mov
mov
call
es
loop
insl
int
lods
cwtl
inc
pop
shll
pop
dec
lret
cmp
or
dec
sbb
std
popa
mov
mov
and
jle
pop
sub
shrb
loop
jle
inc
scas
sub
addr16
mov
push
rcrl
mov
cs
cld
mov
std
ficoml
or
sahf
cmpsb
cli
fmul
and
xchg
dec
mov
fisubrs
and
mov
enter
addl
sbb
mov
inc
test
pop
mov
and
mov
enter
je
jl
pop
push
cmp
sub
mov
dec
xchg
sub
lds
pop
mov
ret
mov
mov
es
dec
mov
xor
add
ret
pusha
ficoml
fisttpl
aas
test
and
cltd
clc
std
cltd
fnstcw
fidivl
cmpsl
and
jecxz
add
mov
ljmp
xlat
jno
jne
sbb
mulb
sbb
mov
jmp
movl
inc
add
or
iret
inc
mov
cmp
jae
xchg
sub
jp
nop
dec
jl
cmpsb
inc
and
mov
fnsave
movsb
clc
pop
out
cltd
sub
test
ficomps
adc
cmpsb
int
lods
imul
jmp
movhps
rclb
adc
jae
fcmovu
push
hlt
lret
jae
lea
ds
std
mov
out
inc
xor
xchg
test
sbb
pop
leave
decl
xchg
cmc
out
lds
cmp
leave
popa
not
push
dec
xchg
stos
gs
xchg
dec
test
adc
pop
adc
movsb
xchg
adc
push
data16
cwtl
aad
mov
addr16
mov
mov
cwtl
fstl
mov
popa
add
mov
add
sbb
push
pop
bound
bound
jbe
xchg
jge
repnz
insl
mov
movzwl
push
fdivrp
push
push
push
jecxz
adc
mov
movsl
jae
push
imul
xchg
out
stos
jmp
and
faddl
je
addr16
lock
push
mov
inc
mov
push
es
sub
xchg
stos
repz
bsr
cmp
or
mov
add
scas
lea
and
sbb
mov
dec
mov
mov
aad
in
xorb
test
and
cmp
adc
cmp
sarb
xchg
dec
xor
pusha
aaa
or
sbb
nop
pop
fisubl
sbb
icebp
xchg
imul
int3
fistps
xchg
outsl
les
sub
cmp
push
and
sahf
loope
ja
mov
pusha
sbb
sub
lret
insl
adc
test
xor
in
pushf
cmpsb
enter
inc
pop
les
jp
fiadds
lods
jne
or
mov
ljmp
dec
mov
and
sbb
add
gs
xchg
xchg
mov
fldcw
arpl
mov
xchg
aaa
rclb
jbe
jo
bsf
jecxz
scas
mov
cmc
mov
add
xchg
sahf
or
outsl
xchg
nop
movzwl
jnp
leave
daa
jnp
aad
sti
les
addr16
adc
mov
call
repnz
ds
push
or
sbb
imul
push
cmp
mov
bnd
xchg
mov
imulb
sub
adc
mov
xchg
cltd
pop
in
je
cwtl
cmp
add
xchg
xchg
sbb
pop
inc
cmp
jns
add
fndisi(8087
je
and
mov
mov
dec
cmp
push
mov
or
rcr
push
cmp
lahf
and
insb
mov
xor
pop
add
push
aad
cld
adc
xchg
insb
mov
leave
mov
mov
push
add
inc
loopne
in
adc
adc
cmp
mov
lods
movsb
dec
push
cs
addr16
mov
push
loop
ret
stos
inc
idivl
mov
push
fcmovne
ror
lahf
pusha
sub
hlt
aad
fcmovnu
cmp
adc
xchg
mov
dec
mov
out
adc
dec
fdiv
lods
and
push
movsl
sub
or
call
mov
push
lods
aaa
stos
inc
jb
xchg
es
inc
mov
sarl
jg
lock
push
pop
gs
cwtl
int3
or
mov
shlb
dec
xor
adc
push
xlat
cld
and
fs
inc
push
stc
orb
adc
and
stc
xor
jg
stc
mov
cmpsl
movzwl
fchs
push
scas
popf
test
fincstp
or
mov
icebp
sbb
jbe
shr
insl
cmpsl
aam
push
mov
mov
xchg
das
scas
pop
xor
pushf
fwait
mov
out
jg
or
leave
xor
dec
adc
outsl
sbb
icebp
nop
xchg
cltd
leave
es
mov
clc
shll
sub
or
xchg
jnp
pop
sub
and
bound
lret
mov
movsb
cmp
cli
bound
lods
cmp
mov
fidivs
sbb
inc
mov
adc
dec
sub
mov
inc
xor
and
fs
lock
push
mov
lods
lods
add
movsl
or
and
lea
xlat
aas
or
dec
lcall
xorb
inc
pop
mov
outsb
arpl
int
and
mov
lds
xlat
jns
leave
xchg
sub
pop
popa
push
gs
sbb
cs
mov
fmull
sub
shr
cmpsb
pop
push
and
xor
les
arpl
mov
mov
shll
call
add
xchg
imul
sub
pop
xchg
repnz
imul
mov
ja
dec
in
xchg
aas
push
cmp
sbb
clc
inc
nop
test
push
leave
loop
test
mov
decb
shlb
adc
jl
aaa
test
cs
and
lods
xor
test
adc
scas
mov
jo
aas
mov
and
gs
cmp
ljmp
cmp
jns
repz
cltd
lods
test
mov
add
and
test
push
ret
or
call
aam
or
bound
jmp
inc
and
jno
popf
pop
mov
shll
mov
ds
cmp
out
cld
enter
mov
mov
sbb
movsl
jg
in
mov
pop
loope
inc
addr16
mov
xor
cld
lock
xor
jbe
sbb
xor
data16
lds
stos
mov
xchg
inc
or
sbb
mov
fwait
ja
daa
push
pop
test
sub
mov
stc
pusha
stos
scas
jl
jo
sahf
adc
test
movsb
cmp
test
lds
mov
shll
xchg
rolb
sti
mov
inc
enter
jbe
fists
sub
pop
or
add
lock
fwait
pop
push
aas
jae
jo
pop
pop
int
dec
js
in
sti
push
lcall
cltd
add
push
out
mov
aam
lahf
imulb
jnp
push
push
push
adc
pop
and
sbb
inc
or
es
ja
pop
push
repz
loopne
ss
xor
mov
fldenv
loop
insl
cltd
out
and
add
shrl
mov
add
cmp
clc
mov
cli
sub
cld
imul
ret
jge
sub
cs
mov
mov
leave
mov
xlat
xor
push
sbb
jb
popf
jns
cmp
cmpsb
shll
testb
cmpl
stc
outsb
adc
notb
pop
out
sub
cmp
rolb
fisubl
stos
test
bound
adc
push
sub
sbb
inc
leave
sub
push
dec
ss
cmpsb
mov
mov
sub
or
nop
jo
and
dec
mov
mov
test
out
adc
cmovae
shlb
fadds
pop
xor
and
cmp
push
frndint
mov
or
roll
mov
adc
pop
lret
mov
jg
aas
shrl
jmp
push
mov
stc
loopne
dec
push
jge
mov
jecxz
mov
or
in
push
jns
jmp
and
push
sbb
lahf
das
mov
mov
pop
cmc
mov
inc
std
xor
movb
shr
or
pop
mov
cmp
out
popf
mov
rorb
stc
ret
inc
arpl
testl
pop
ja
dec
pop
sbb
pop
das
inc
pop
lea
test
push
push
arpl
aas
je
cld
push
test
adc
adc
sub
or
shlb
loop
mov
pop
push
push
cmpsb
imul
sub
push
fistpll
fdivp
inc
add
dec
cld
pop
sub
pop
outsl
loopne
xor
out
mov
shl
mov
mov
xchg
jo
mov
hlt
mov
into
loop
aad
repz
mov
shrl
mov
push
sbb
mov
out
loopne
ret
adc
xchg
out
mov
les
cmpsb
xchg
cmp
mov
sub
aas
or
pop
scas
sub
adc
inc
cltd
push
in
push
out
jmp
addb
call
jmp
sub
inc
jns
daa
push
adc
in
dec
inc
int3
js
mov
mov
inc
mov
pusha
fstl
fdivs
xchg
jne
lods
fwait
dec
in
int
leave
xor
pop
subl
sub
sub
scas
stos
ret
pop
xor
push
xor
mov
push
lea
and
add
push
push
cmpsl
cwtl
jecxz
lods
jge
or
sub
sub
rcl
lods
mov
mov
cmp
in
pop
xor
mov
xor
adc
push
int
inc
xchg
xchg
icebp
rcrb
ja
jmp
std
xchg
sbb
icebp
xor
inc
xor
imul
sbb
add
rcrb
mov
cmp
sbb
inc
loop
movsl
mov
xchg
sbb
mov
rolb
shrl
flds
sbb
push
mov
cmpl
mov
add
add
dec
movsl
int3
xchg
aad
jg
cmp
repnz
sub
stos
aad
pop
mov
dec
cmp
call
sahf
rclb
addl
lcall
inc
mov
lret
outsl
cltd
lea
xchg
push
or
or
pop
jns
cltd
pusha
mov
and
aaa
hlt
out
mov
leave
leave
cld
push
ja
jnp
xor
repz
dec
and
xlat
push
adc
mov
outsb
jl
inc
std
or
jl
lret
mov
jns
shlb
mov
xor
or
dec
fdivrs
jb
fnstenv
fdiv
push
gs
mov
xor
dec
ret
fisubrs
adc
test
pop
xor
sbb
add
nop
mov
or
ret
dec
jae
push
mov
mov
std
or
sbb
frstor
out
jnp
lret
lret
outsl
imul
sbb
xchg
mov
insb
adc
ljmp
inc
out
jo
mov
loope
xchg
adc
ss
addl
lea
and
ja
scas
pop
pop
movb
gs
jecxz
insl
out
pop
push
mov
cmpsl
add
jle
sbb
lods
mov
mov
sti
addr16
sarb
xchg
mov
or
adc
stos
jb
movb
les
cmc
jp
mov
shrl
imul
cmpsb
push
mov
and
and
push
rol
xchg
out
adc
cwtl
movnti
in
pop
push
and
mov
shll
aaa
mov
out
je
in
mov
popa
popa
lahf
sbb
mov
test
scas
dec
in
and
jns
cmp
jns
in
fdivl
hlt
xchg
rolb
fiadds
mov
mov
outsl
lahf
pop
mov
jle
cmp
mov
push
out
in
out
ror
inc
jge
sbb
adc
push
imul
shl
push
nop
xor
pop
xchg
popfw
jg
sub
in
jne
inc
push
mov
sbb
xchg
je
and
in
cwtl
clc
enter
rolb
and
ret
push
inc
aad
mov
sub
jnp
sbb
cmp
hlt
mov
shl
test
jns
adc
and
add
mov
sbbb
jb
fwait
call
cli
loope
sti
push
cmp
sub
stos
js
push
and
sbb
add
cmp
xor
xlat
inc
test
in
inc
movsb
mov
xchg
lret
int3
icebp
addr16
or
movsb
cmp
mov
stc
pushf
inc
cmpsb
test
cmp
cld
pop
push
mov
lods
int
fnstcw
adc
clc
jno
jmp
mov
pop
cltd
inc
jecxz
adc
and
jnp
pop
cmp
les
divb
xchg
mov
int
pop
jne
sub
cs
pop
mov
xchg
xlat
ja
pop
mov
add
popa
hlt
out
xchg
push
cmpsb
mov
or
aaa
push
and
ds
aas
mov
adc
lods
cmpsl
mov
shlb
lahf
notl
mov
imul
inc
inc
fbld
adc
divb
rclb
in
loop
pop
stc
or
xchg
push
pop
xor
js
data16
addr16
mov
int3
call
leave
subl
arpl
fs
divb
pushf
cwtl
movsl
jge
inc
mov
xchg
popf
lret
cmpl
aad
sub
mov
outsb
loopne
sbb
mov
sbb
insl
xor
repz
hlt
mov
pop
call
mov
ljmp
mov
cmpsb
aas
dec
or
nop
popa
mov
cmpsl
sub
imul
decl
rolb
adc
dec
mov
adc
ret
jb
mov
je
cwtl
lea
ljmp
sarl
xchg
xor
adc
sahf
sub
addr16
inc
sub
pop
faddl
in
jle
push
inc
cmp
xlat
aas
cmpsb
clc
aam
cs
pop
jg
push
add
push
cmpsl
xchg
pop
sub
xchg
bound
enter
jbe
in
cmp
test
movsb
and
mov
and
fidivrl
outsl
clc
ret
in
outsl
js
imul
mov
inc
sub
push
out
stos
repz
jge
add
push
mov
push
or
push
aam
add
inc
xor
sbb
jb
and
jg
push
in
dec
je
insb
fnstcw
stc
mov
mov
lods
sub
or
or
xchg
mov
mov
test
jp
stos
clc
ljmp
std
inc
xchg
ret
mov
push
imul
sub
stos
cltd
addr16
pushf
sbb
mov
mov
popa
push
lret
je
sbb
aaa
inc
push
inc
mov
dec
adc
mov
rcrb
pop
fmull
sbb
lret
leave
pop
pop
xor
lahf
adc
lcall
inc
sbb
adcb
das
pusha
test
push
mov
cmc
cs
adc
imul
dec
insb
or
add
rcl
mov
loop
xor
mov
aad
shlb
adc
inc
xchg
je
mov
ja
in
xor
jb
out
data16
out
adc
shlb
adc
cmc
mov
ljmp
dec
lds
push
add
mov
cmp
cmpsl
test
sub
in
insl
xlat
dec
mov
aam
repz
ret
mov
push
add
and
sahf
sub
jbe
sub
or
dec
jb
test
inc
movsl
push
mov
xor
mov
loope
cwtl
mov
xchg
sub
or
add
arpl
or
das
nop
adc
sahf
or
sub
sbb
pop
nop
rcr
and
icebp
jecxz
pop
jae
repz
lret
ret
daa
cmp
int
add
gs
fwait
jbe
in
pop
in
xchg
cwtl
arpl
rol
roll
loop
fdivrl
fidivrl
cmpl
out
mov
dec
cmp
int
repnz
leave
insb
sti
fwait
and
mov
inc
pop
les
and
inc
mov
or
lock
lods
inc
mov
add
adc
adc
xor
jno
insb
fldl
out
popf
cmp
pop
xchg
inc
mov
add
add
dec
xor
rclb
in
in
lea
fildll
sbb
mov
stc
lds
iret
bound
sarb
dec
fidivrs
add
les
pop
pop
jge
int3
mov
add
mov
xor
adc
mov
mov
frstor
jnp
xchg
sar
xchg
and
xchg
sbb
insb
int
mov
adc
lret
push
sbb
adc
outsl
and
and
popa
or
xchg
sbb
cld
jmp
sub
loope
das
jnp
jnp
cmp
repz
loope
jl
das
push
rorb
popa
push
ret
and
movsb
xchg
pusha
imulb
jge
addl
out
dec
lret
movsl
jb
jnp
fistl
or
xor
orb
jp
cmpsl
sub
dec
ljmp
loope
inc
nop
xor
jae
push
lds
repz
test
pop
movsb
nop
push
sbb
inc
sub
cmp
ds
cmpsb
cmp
mov
jne
push
xlat
xor
imulb
cwtl
pop
fisubrs
cmp
test
jno
loopne
mov
in
insl
jbe
jns
sahf
sub
cld
rorb
adc
and
mov
xlat
sbbb
mov
sub
mov
or
dec
mov
test
ret
sbb
pop
rcl
int3
adc
dec
push
xor
jmp
dec
xorb
adc
push
int3
lcall
add
add
shlb
xchg
hlt
adc
jns
sbb
sahf
jnp
mov
lahf
dec
push
jnp
push
clc
push
mul
push
dec
jge
mov
add
push
inc
push
mov
jb
stos
cmpsl
mov
outsl
adc
aad
lods
adc
nop
in
add
adc
push
in
movsb
pop
dec
ret
fstl
fsubl
in
dec
pop
mov
push
imul
sub
mov
int3
loopne
dec
add
in
add
jb
lahf
adc
mov
sub
jp
testb
mov
jne
roll
pop
test
sub
lret
aad
adc
popf
sub
rcll
pop
sbb
push
fdivrs
ss
mov
xor
icebp
add
out
jns
movsl
sub
ljmp
clc
mov
adc
pusha
sbb
jb
popa
repnz
mov
sub
pop
mov
mov
xchg
push
sbb
or
inc
dec
xchg
out
sub
sbb
or
sub
in
mov
inc
fcoms
popf
jecxz
fstpl
int
jne
inc
lods
mov
add
icebp
jns
sub
jecxz,pt
inc
push
pop
dec
lret
fwait
xor
scas
xor
shlb
pop
addr16
in
aam
inc
or
push
fbstp
in
es
mov
jbe
dec
lds
mov
sbb
fcompl
clc
testl
mov
cmpsb
dec
fildll
add
aas
pop
jno
out
sbb
test
inc
push
adc
push
fnsave
dec
nop
add
jnp
pop
cmc
and
push
aas
dec
mov
test
aas
fcmovbe
dec
ds
add
fucomip
dec
movsl
lea
mov
clc
push
push
push
daa
iret
es
loop
sbb
mov
int
xchg
xor
mov
les
push
sbb
or
out
call
das
push
int3
clc
inc
test
mov
repnz
mov
jl
mov
ret
jae
mov
dec
sti
pushf
aad
inc
push
sbb
mov
lahf
test
mov
mov
mov
xchg
pop
mov
mov
add
inc
jne
sbb
jne
rol
lcall
xchg
movsb
jle
loop
rolb
dec
js
push
dec
les
outsl
cmpsb
xchg
push
xchg
aaa
cwtl
inc
cmp
jnp
mov
ja
rcrl
arpl
addr16
and
add
xchg
imul
ficoms
jno
test
test
testb
sbb
push
add
clc
pop
test
sbb
jl
les
adc
add
test
jmp
mov
lcall
inc
int
jne
movsl
cmp
scas
mov
lahf
pop
jg
inc
xchg
imul
mov
inc
add
cmovl
scas
ret
test
shll
sbbb
xchg
adc
fdivl
xor
je
ss
inc
push
bndldx
orl
xacquire
fstps
frstor
popa
adc
sub
fisttpll
in
lret
dec
stos
movsb
insb
imul
sub
fwait
jae
sti
je
jbe
sbb
jp
adc
or
aad
adc
pop
sbb
test
pushl
cltd
adc
shl
mov
push
sqrtps
cmp
adc
ja
ljmp
push
addr16
pop
xchg
mov
or
rcrl
add
inc
xor
jg
scas
fidivl
decl
shl
lds
rorl
mov
fcoml
pushf
or
fisubrs
dec
adc
mov
imul
jne
mov
push
push
loope
pusha
pop
xor
or
jns
mov
sbb
jle
jno
cmp
stos
mov
sub
sbb
arpl
out
pop
push
pusha
xchg
test
jbe
sub
and
lds
pop
mov
xor
xlat
les
add
xchg
xchg
jnp
lret
mov
loopne
clc
mov
mov
rcr
sub
add
xchg
sti
imul
mov
fmull
bound
lods
jns
rcrl
aam
xor
cmc
int
dec
add
and
or
inc
mov
push
int3
dec
jb
mov
ret
call
loope
xchg
push
andb
or
clc
jecxz
mov
add
cmp
lods
mov
or
aas
test
iret
jnp
jne
loop
inc
and
fsubrp
std
ljmp
adc
or
pop
test
adc
mov
cmp
lcall
pop
sbb
notb
dec
repnz
inc
dec
das
jno
cmpsl
scas
jecxz
mov
push
push
popa
orb
ja
jle
push
rorl
icebp
sub
mov
mov
fdivp
in
fwait
xchg
inc
sub
into
jbe
stc
inc
fadd
xchg
add
les
sahf
push
fwait
cmpsb
pop
pop
inc
xor
mov
mov
add
rclb
dec
mov
push
mov
mov
or
pop
dec
adc
aam
mov
jbe
xchg
mov
inc
push
jg
add
jnp
jae
xchg
jmp
or
stos
addr16
push
scas
fldl
insl
lods
inc
dec
push
dec
mov
cmp
add
andb
je
inc
push
nop
push
cmc
xor
fs
cmp
xchg
jne
jp
push
std
adc
pushf
jo
jo
idivb
dec
push
xchg
push
or
and
inc
fistps
push
inc
push
and
aad
jg
iret
and
outsb
popa
push
adc
pushf
dec
hlt
jno
mov
and
sub
clc
mov
sbbl
push
sub
inc
pop
fdiv
pop
mov
mov
and
pushf
psubw
jne
cmc
pushf
xor
sub
aas
inc
pop
or
xor
shll
stos
hlt
inc
or
addr16
out
lret
int3
mov
cmp
dec
int
dec
cld
xchg
les
mov
lds
loopne
ret
push
pusha
xchg
inc
inc
cmp
mov
add
lret
jge
repz
sbb
rcrl
xchg
dec
rorl
sub
mov
mov
les
push
mov
sbb
mov
inc
jnp
pop
daa
jae
sub
rorl
popa
jo
les
insl
ljmp
dec
mov
clc
jne
pushf
int3
movb
xchg
and
rcl
lret
leave
mov
aad
mov
je
pop
xchg
scas
xor
loope
mov
mov
mov
mov
inc
loop
sub
mov
movsb
xlat
push
cmc
push
sti
mov
pop
cmc
sbb
jnp
or
xor
push
insb
adc
add
dec
mov
xchg
sarb
cmp
mov
fdivl
fcmovbe
clc
pop
jmp
jo
cwtl
dec
cmp
cli
outsl
mov
push
int3
inc
jmp
lods
dec
and
cld
movb
mov
lods
xchg
and
or
loopne
lock
or
sbb
orb
pop
add
inc
popa
fcmovu
jge
test
push
and
xchg
cmovne
imul
jne
data16
hlt
add
jne
dec
pop
jp
loope
fucomp
test
lret
icebp
jg
adcb
in
enter
in
adc
fnstsw
mov
in
rcrl
mov
add
aad
dec
push
in
insb
rcrl
push
loope
jge
sbb
cs
mov
outsb
sbb
dec
and
sub
add
sub
inc
jb
jecxz
insb
sbb
mov
cmc
fistps
inc
sti
aad
jae
jb
int
mov
sub
mov
push
xor
rol
mov
xchg
inc
jae
xor
jge
and
mov
out
jl
out
or
inc
and
xchg
jecxz
push
mov
adcb
xor
es
pop
or
fwait
xor
mov
push
jmp
std
jno
push
dec
push
arpl
push
aas
jno
gs
inc
jle
pop
and
cmp
jl
cli
orl
pop
mov
adc
cwtl
lcall
jb
int
jno
jnp
and
cmp
sbb
in
cmpsb
jbe
fwait
sub
adc
inc
jbe
lahf
sbb
pop
xorl
and
xorb
jg
fisubrs
ret
testl
cmpsl
gs
xchg
add
fcomi
insl
pop
add
push
and
movsb
ss
test
stos
sub
fistps
adc
inc
scas
push
insl
adc
test
shll
stos
mov
mov
loopne
adc
sub
mov
cmp
or
dec
sub
jmp
jne
inc
insb
stc
pop
nop
cmp
out
cli
inc
sub
fstl
shlb
mov
pop
sbb
xchg
fwait
push
add
add
sar
and
or
cmpsl
add
mov
push
sahf
xchg
cmp
and
icebp
or
inc
pop
sbb
ret
inc
xlat
and
adc
fildl
or
cmc
mov
inc
imul
mov
test
daa
inc
pop
push
sahf
scas
jb
cmp
hlt
inc
sub
dec
aam
mov
adc
testl
in
jne
out
jecxz
fnstcw
popl
scas
es
outsb
bound
aas
push
int
out
lret
jbe
shl
scas
cltd
jbe
jle
clc
out
iret
mov
lret
aam
ja
and
xor
add
data16
and
cmpsb
or
push
call
ja
stc
testl
xchg
movsb
stos
jb
les
mov
mov
add
add
test
cmpsl
dec
shll
fs
xchg
sarb
mov
add
or
inc
subb
push
aad
shlb
loop
adc
pop
and
repz
ds
push
std
outsb
outsl
mov
andl
inc
pushf
mov
es
mov
shr
ficompl
mov
adc
mov
push
cli
or
ror
lret
scas
fldl
jne
lds
jne
insb
mov
jp,pn
out
dec
gs
loope
stos
mov
mov
lods
xor
pop
scas
cmc
pop
iret
icebp
hlt
int3
pop
leave
lods
hlt
push
cmp
lret
outsl
mov
loopne
add
adc
dec
xchg
jne
arpl
mov
sbb
lock
dec
jmp
xchg
jl
fdivrs
mov
and
xchg
push
cmp
mov
push
sub
setge
adc
fimuls
clc
or
mov
sarl
dec
and
in
xchg
mov
popf
rcrl
or
xorl
mov
jmp
jb
pop
insl
push
leave
sub
sbb
or
mov
inc
dec
adc
adc
popa
inc
movsb
adc
lret
inc
push
pop
jne
test
lahf
dec
fsubrp
mov
mov
jb
jnp
lds
push
test
pusha
dec
lods
mov
push
xchg
or
test
fldl2e
pushf
jb
fdiv
lahf
cmp
ja
sbb
sub
fisttps
inc
lcall
clc
mov
jno
cmp
pop
mov
and
outsl
aad
jp
lea
mov
call
pusha
cmp
int
ror
mov
pop
lods
in
fidivl
pop
add
ret
out
xchg
rcrl
sub
or
add
fisubs
jmp
mov
push
xor
adc
leave
shll
fs
adc
addr16
pushf
ret
pop
insl
dec
scas
cld
xorl
mov
jg
mov
int3
lret
jg
cmpsb
xorl
popa
sti
aas
nop
imulb
xchg
fimuls
cmc
adc
add
inc
xchg
xor
jl
pop
pushf
xor
sbb
out
or
pop
jne
sub
ljmp
call
out
out
jge
enter
dec
and
sti
std
mov
rorl
xor
mov
fidivs
repz
mov
xchg
out
repnz
hlt
mov
repz
lret
sbb
shl
sub
sbb
jne
imul
push
adc
jge
mov
aam
cmp
lock
dec
gs
movsb
cmpsb
push
xchg
inc
fisttpl
out
and
lds
cmp
mov
and
fdivl
add
or
out
dec
imul
lret
jns
sbb
out
jecxz
aad
dec
mov
clc
cmp
iret
mov
xchg
shll
daa
or
nop
clc
dec
negb
mov
jl
arpl
sub
xchg
dec
lret
or
jge
popf
mov
jmp
es
js
insb
sub
inc
fistpl
pop
stos
sahf
mov
pop
mov
push
sub
repnz
push
add
push
aaa
nop
data16
arpl
jae
loop
in
and
adc
sarb
xchg
push
in
or
mov
xchg
or
push
xor
ficoms
pusha
adc
or
xchg
std
int3
jp
cmp
dec
cmc
bound
negl
clc
pop
testl
xchg
cwtl
jo
lret
fisttpll
push
and
xchg
push
out
aaa
jo
nop
cmp
mov
mov
fsts
rorl
nop
xor
xorl
inc
std
pop
inc
cmpsb
dec
jmp
jp
mov
mov
js
orb
mov
inc
stc
sub
pusha
outsl
dec
push
shrl
dec
jne
rorb
xchg
add
xchg
mov
jecxz
bound
out
xchg
pop
shll
rcll
jnp
jne
ja
xor
iret
ss
jbe
out
inc
cld
mov
cwtl
pop
push
arpl
push
mov
pop
pop
lds
mov
inc
movsl
pop
adc
cltd
pop
push
dec
inc
add
push
frstor
xor
jo
lods
xchg
repnz
subl
mov
push
mov
les
inc
or
repnz
sbb
and
movsl
adc
loopne
loopne
je
mov
inc
dec
jl
xchg
outsl
outsl
clc
sub
mov
adc
mov
push
push
inc
xor
out
pop
xchg
sbb
and
stos
mov
sub
nop
mov
mov
cmp
cwtl
push
mov
lods
mov
xor
movsl
fisubrl
push
pop
mov
or
inc
roll
jns
mov
sub
mov
jmp
inc
shrl
loop
fmul
adc
mov
sbb
flds
pop
aad
jno
mov
cltd
into
push
mov
popf
lds
les
adc
jle
inc
fwait
xor
sbb
inc
mov
cmp
push
fcoms
inc
and
pop
mov
in
push
fcmovne
out
mov
cld
xchg
ds
mov
daa
mov
mov
pop
pop
out
push
dec
adc
xlat
cltd
inc
fcoml
pop
or
push
jp
push
out
cs
inc
out
jnp
into
ljmp
push
popf
xor
mov
cmpb
fdivs
imul
and
xchg
dec
push
loopne
shlb
shl
outsl
adc
mov
into
lods
stos
into
addr16
sbb
mov
sbb
leave
ret
scas
leave
and
test
push
enter
pusha
mov
or
jmp
cmovl
add
mov
push
mov
inc
out
pop
fsubl
add
stc
mov
testb
xor
pop
sbb
and
mov
mov
rolb
inc
mov
or
push
bound
dec
test
in
mov
call
nop
lret
jnp
inc
outsl
xchg
aas
mov
xchg
lahf
insl
add
mov
daa
jb
push
jo
cmpsl
mov
repnz
mov
mov
loopne
cwtl
or
je
mov
js
fisubrs
bound
data16
inc
lock
ljmp
cli
dec
loop
in
push
movsb
inc
stc
jge
ljmp
sbb
cmp
nop
cmp
push
xor
out
adc
push
cmp
or
pop
divl
popa
shrl
mov
mov
stc
push
sub
adc
outsl
sub
mov
and
loop
inc
sbb
push
push
in
sarl
out
xor
lods
cmp
sbb
dec
mov
add
cmp
xor
sbb
icebp
dec
push
xchg
xchg
inc
push
in
int
mov
sub
push
mov
mov
sti
sub
ljmp
pop
jge
adc
mov
call
ss
xchg
pop
mov
jb
cmp
outsl
mov
enter
mov
sub
sub
or
cltd
sbb
aam
frstor
mov
xchg
dec
fwait
inc
sbb
sub
adc
das
icebp
dec
lret
sub
test
xor
mov
pushf
sbb
sbb
pop
clc
cmp
mov
repz
pop
adc
imul
fbld
loope
cli
add
add
leave
jno
mov
push
das
into
and
jecxz
out
sub
jg
push
fmuls
sbb
push
or
ds
jmp
sub
divl
cmp
movsl
dec
fdivrs
push
dec
fistl
fsub
pop
bound
in
orl
sub
leave
xor
add
popf
test
dec
dec
jge
xchg
call
cwtl
cmc
fnclex
loopne
arpl
jmp
xor
stos
fidivl
inc
fs
scas
add
lock
jbe
sbb
mov
push
xchg
stos
mov
and
fldcw
inc
mov
aad
sahf
lods
jge
test
mov
leave
popf
xlat
inc
clc
mov
inc
mov
je
mov
xor
mov
cmpsl
push
push
inc
cmpsb
es
sbb
int3
shll
fistl
xchg
sub
jno
mov
mov
dec
rorl
cmp
xchg
push
pop
popa
rcrl
scas
push
cmovl
lahf
xchg
andl
jbe
jnp
inc
loop
jl
sarl
jl
inc
rolb
push
pop
js
jle
sub
or
mov
in
xor
daa
pop
xchg
push
loop
repnz
cmpsl
push
rcll
les
cmp
mov
cmpsl
popa
xor
daa
push
pop
pop
cltd
fnstcw
je
jg
addr16
movsl
lods
outsl
pushf
inc
push
cld
mov
lea
sub
sub
push
es
jle
cmp
jo
jo
mov
inc
push
sarb
out
sbb
cmpsl
les
add
dec
sub
xchg
mov
aam
call
test
sbb
out
dec
mov
jb
push
icebp
inc
mov
ss
stos
fadds
or
adc
xor
push
jg
mov
xchg
pusha
mov
fsubr
add
xchg
mov
popf
xchg
cld
in
or
jg
and
insl
loopne
imul
js
lea
jl
xor
fwait
jne
or
adc
add
sarl
or
push
cwtl
mov
jb
mov
pop
push
pushf
loopne
push
fsubrl
xchg
pop
movsl
jne
fildl
loop
leave
mov
xor
rorl
ret
jge
pop
cld
jle
adc
push
call
jp
cli
addr16
xor
frstor
cmpsl
test
sub
ljmp
and
add
sbb
repnz
sbb
testl
jl
pop
iret
inc
mov
test
and
and
popa
jo
push
jecxz
push
adc
mov
jo
xchg
dec
std
iret
push
in
leave
sub
jae
inc
fldt
mov
data16
push
pop
in
stos
add
daa
in
mov
xor
rorl
gs
jae
fisubs
dec
mov
orb
mov
out
ljmp
popa
add
xor
mov
jge
pop
out
lods
jmp
sahf
xor
sbb
fidivs
dec
mov
add
mov
cs
xchg
xchg
mov
test
leave
inc
cmp
push
movsl
insb
and
es
jl
cli
pop
mov
cmp
fidivrs
xor
movsl
mov
in
pushf
sbb
pushf
sub
mov
push
cmpsb
sub
sbb
gs
pop
sbb
jo
call
cmp
adc
add
rcll
pop
stos
icebp
sti
inc
jl
bound
xor
sub
movq
adc
add
fdivr
pushf
aas
pop
mov
fmull
jbe
adc
cmp
push
push
enter
xchg
mov
cmp
sub
dec
cmp
sti
dec
test
lcall
cwtl
cmp
push
inc
pop
mov
jae
in
or
lahf
notb
or
cmpsb
cmp
mov
push
mov
sbb
les
out
sahf
ja
rcll
push
out
lret
push
insl
jbe
lock
sub
push
push
addr16
mov
mov
stos
xor
loopne
fnstsw
or
cs
aas
jnp
in
movsl
cld
inc
dec
mov
imul
ja
inc
sbb
jecxz
jo
rol
inc
insl
inc
fsubr
fdivl
pop
cmp
mov
cmp
mov
jmp
jecxz
jbe
daa
cwtl
or
or
mov
or
hlt
add
mov
jl
push
adc
loop
push
and
pusha
push
stos
dec
negb
mov
pop
insl
fiaddl
icebp
mov
in
sub
ljmp
pop
int3
pop
ss
xor
sbb
inc
jp
repz
xor
lock
cli
cld
lret
imul
pop
dec
mov
int3
call
xchg
stos
lahf
mov
xchg
or
testl
cmp
int3
lret
aam
jbe
es
xor
push
dec
in
loopne
fdivrp
xchg
sbb
cltd
lds
push
in
insl
mov
aaa
cmpsl
outsb
jge
mov
jp
mov
adc
pop
imul
test
or
es
push
cmp
inc
pop
fdivr
xchg
mov
or
subl
sbb
fwait
sub
pop
and
add
adc
pop
jae
rcrb
dec
or
lods
shll
adc
lret
test
ss
xor
cmp
sbb
adc
loope
imul
push
sbbl
fwait
lret
insb
pop
rcl
or
stos
icebp
xchg
dec
xor
mov
loopne
subb
cmp
pop
movsb
push
jnp
jae
pusha
jb
mov
cltd
lcall
adc
clc
lret
lret
xorb
mov
xor
add
jo
test
mov
cwtl
mov
test
hlt
jbe
xor
mov
in
ret
add
sarl
sbbb
mov
int3
mov
sbb
jno
leave
cmp
jo
or
mov
push
inc
inc
incb
fstps
push
insl
repnz
sub
jb
inc
shl
pop
mov
mov
inc
xchg
loope
test
xchg
mov
in
and
xchg
jp
push
push
mov
inc
or
xor
xor
xorl
push
and
fisttpl
mov
shr
pop
aad
inc
test
stc
fidivrl
repnz
add
ss
add
dec
imul
enter
jbe
popa
pop
or
inc
pop
ja
mov
xor
inc
jle
aam
jae
shll
dec
mov
loope
xor
movq
ret
lock
mov
dec
fsub
xchg
mov
mov
cmp
in
scas
sbb
popa
inc
mov
iret
push
inc
repnz
ja
mov
mov
pop
add
stos
stos
add
sbbb
pop
sub
or
mov
mov
xchg
lcall
enter
add
xchg
aas
insl
or
and
int
or
jp
xchg
das
add
notl
add
push
xor
je
jmp
push
ficompl
lock
sti
lret
pop
loope
or
aaa
jno
sarl
mov
test
inc
mov
mov
mov
sbb
cmp
lods
hlt
mov
and
mov
adc
and
dec
pop
frstor
pmaxub
out
mov
jne
cmp
sbb
cmpsl
insb
lret
jecxz,pn
lods
jb
jns
jmp
test
lea
in
xor
cmp
cmp
fists
push
cmp
mov
lea
insb
xor
movl
insl
and
mov
mov
cld
push
std
imul
and
ss
ficomps
test
cmp
outsb
mov
rcrl
sbb
addr16
dec
jns
insb
std
in
in
inc
jo
mov
push
mov
out
jne
push
jg
mov
je
xchg
popf
pusha
jecxz
call
adc
sbb
mov
arpl
xor
xor
mov
insb
pop
xor
adc
inc
sub
lcall
xchg
int3
loop
mov
inc
add
xchg
and
xlat
loop
pop
in
cmp
shlb
pop
push
mov
pop
pop
notl
popf
xchg
mov
jae
dec
sbb
cmpsl
or
fistpl
push
add
cmp
sub
mov
ss
js
push
or
mov
repz
mov
int
and
popf
insl
pop
and
js
xchg
ss
lock
std
add
dec
mov
sti
fs
pop
int
cmc
and
jb
sub
notl
scas
out
sub
mov
adc
mov
dec
jmp
sub
jno
push
test
pop
push
pushf
pop
jb
sub
cwtl
xor
ret
jle
shl
aaa
mov
sub
sub
dec
and
popa
xchg
enter
jmp
xor
cmp
push
mov
xlat
pop
or
lahf
into
scas
inc
sbb
divl
dec
aad
jp
popf
xor
mov
aam
jno
in
pop
push
je
mov
sub
and
sarl
repnz
xchg
in
push
cmp
push
ljmp
imul
mov
or
xchg
xchg
xchg
push
fimuls
movsb
ja
dec
icebp
xchg
scas
lods
jecxz
sbb
decl
push
decl
inc
je
pop
jle
imul
dec
inc
push
out
cmp
rcl
loope
mov
std
loope
pop
dec
clc
add
mov
mov
sub
into
shll
sahf
out
std
mov
sub
push
fsub
sbb
iret
cld
lahf
ret
cmp
add
adc
scas
aam
lods
gs
push
cwtl
divl
and
imul
adcb
mov
xchg
fstpl
or
jnp
push
or
jg
push
inc
xor
jp
and
sub
sub
pop
sbb
push
fidivrs
movsb
adc
xor
aam
psrlq
xor
sbb
arpl
lret
sub
cmp
add
dec
xor
pusha
xchg
lock
int
and
loopne
rorb
xchg
cld
jo
mov
cmpsl
js
out
fs
sarl
scas
fadds
pop
mov
shr
sahf
shlb
ljmp
cmp
out
dec
sbb
xchg
cmpsb
cmp
testb
jle
aas
inc
pop
leave
inc
pop
in
roll
movsl
ret
cmp
decb
sub
pusha
mov
sub
mov
cmp
push
dec
cld
lret
add
or
faddl
lock
cmc
mov
outsl
sub
dec
das
clc
cmc
int3
hlt
xchg
aad
adc
add
je
xchg
push
incl
dec
je
cmp
add
lcall
pushf
adc
xchg
inc
mov
xor
pop
mov
push
arpl
jge
stos
repnz
adc
mov
mov
or
ret
mov
jp,pn
jecxz
pop
popa
repz
sbb
shlb
xor
jne
dec
jno
mov
sbb
lock
scas
pop
outsb
xor
xor
out
iret
add
or
mov
mov
movsl
enter
lcallw
pushl
ret
inc
sbb
lods
push
mov
mov
add
mov
jmp
sub
xchg
ds
xlat
test
nop
sub
nop
pop
dec
push
xchg
jp
jg
dec
push
into
lea
xor
in
or
in
mov
add
test
lea
popa
adc
inc
ss
push
pop
add
mov
push
mov
dec
inc
mov
in
movsl
ss
or
push
xor
daa
hlt
jb
pop
push
xor
sbb
sbb
push
xchg
fwait
add
bound
mov
cwtl
mov
into
out
add
push
sbbb
sub
cmpsb
cwtl
or
mov
aam
mov
orl
dec
pop
lret
jbe
rorb
out
fimuls
cs
dec
xor
enter
insl
mov
aam
dec
scas
mov
imul
int3
add
adc
xor
in
repnz
sbb
inc
inc
mov
sub
pop
xchg
xchg
rcrb
out
mov
ret
cmpsb
vhsubpd
sbb
and
mov
dec
cmp
lret
xchg
mov
int3
cltd
iret
xchg
out
xchg
fildl
or
sbb
cmp
sahf
sbbl
push
push
xchg
push
int
lods
mov
inc
adc
push
fidivs
pop
xor
fsts
pop
leave
aam
sbb
and
fimuls
sbb
mov
or
push
sbb
jmp
or
stos
filds
ficompl
rclb
test
inc
icebp
cs
mov
cmpsb
fldcw
jnp
test
inc
popf
imull
imul
inc
das
neg
aam
aam
test
inc
jbe
aam
sbb
push
jp
sbb
mov
iret
into
dec
inc
jg
lahf
ljmp
mov
push
mov
loop
imul
outsl
cmp
mov
dec
dec
cmpsb
scas
push
fistl
and
and
cmpb
dec
fiaddl
stc
leave
in
data16
jns
cmpl
add
or
mov
sbb
repnz
xchg
inc
mov
enter
push
pop
jno
fisubl
fwait
mov
mov
in
mov
jne
pop
pop
lock
xor
fldt
cli
mov
lods
push
dec
cmpsb
clc
xor
mov
std
or
lea
cmp
movsb
je
out
push
in
sbb
xor
sub
jl
lret
js
cmp
roll
rdmsr
outsl
loop
adc
leave
cmp
es
lods
inc
push
jo
lret
jecxz
xchg
xor
pop
mov
xchg
xor
jae
pop
xor
out
adc
sub
mov
or
cmp
or
cmp
je
ficoms
pop
lret
jmp
fcmovu
sbb
sub
divl
out
test
xor
xchg
clc
cltd
xlat
push
mov
insb
push
dec
adc
fsubrl
clc
aas
adc
into
add
pushf
mov
clc
pop
and
xchg
loop
mov
adc
shll
xchg
call
pop
jle
cmp
add
inc
negl
lea
or
jmp
daa
cwtl
xchg
inc
lds
stos
add
mov
push
rcrb
mov
pop
mov
maxps
loopne
outsb
xor
or
mov
or
and
push
ret
inc
fcoml
inc
das
xor
pop
in
ds
lods
adc
test
pop
movsl
cmp
es
pop
xchg
not
loop
das
outsl
stos
stos
lret
inc
andb
imul
jmp
dec
dec
ror
mov
fisubrl
add
jns
xchg
mov
cvtps2pd
push
lret
jne
movsl
into
int3
xchg
jno
gs
jmp
push
aad
movsl
add
insb
in
jnp
aad
or
push
negl
jmp
push
popf
jne
popf
call
jns
pop
out
stos
pop
and
dec
and
cmp
or
adc
mov
xchg
pop
hlt
mov
sub
inc
leave
inc
mov
arpl
outsl
movsb
lcall
or
mov
ret
fwait
xchg
jg
dec
and
movsl
mov
mov
insb
lcall
or
or
sbb
ss
cmp
sbb
xchg
xchg
imul
call
xchg
add
lock
rsm
dec
subb
inc
jge
sahf
xor
dec
xor
test
xlat
xor
push
lret
orb
lret
or
inc
orb
jo
sti
fmuls
dec
mov
imul
inc
xchg
or
movsb
hlt
push
push
mov
xor
sbb
pop
push
cmc
mov
repz
popa
movsl
push
test
sbb
enter
dec
mov
mov
jae
test
jb
lock
pop
push
test
sub
scas
loope
test
out
sahf
sub
pushf
popa
sub
and
cltd
hlt
cmc
nop
arpl
fwait
dec
sahf
mov
pop
pop
in
daa
mov
sub
sbb
or
pusha
jl
dec
mov
es
or
lock
mov
pop
fisttpl
pushf
push
imulb
pusha
jne
and
xchg
jnp
dec
fdivrp
and
xchg
gs
pop
das
jl
scas
addl
inc
sub
dec
sbb
sub
add
je
sbb
sub
cmp
das
aaa
cmpsl
xchg
insl
leave
cmp
pop
add
xor
fadd
loop
pop
pop
or
xor
call
cmpsl
inc
xor
pop
adc
xor
pushf
jne
push
andb
in
sbb
mov
bound
inc
dec
subb
cmpsb
rcr
mov
adc
cmp
cmp
js
pop
push
add
xchg
dec
call
rorb
mov
sbb
in
into
dec
push
cmp
inc
inc
aad
push
lcall
rclb
rcrl
pop
mov
add
fwait
push
dec
cmp
push
lock
aad
mov
rolb
xor
xchg
jmp
sub
sub
call
mov
and
push
sbb
cltd
jns
mov
jo
jb
xor
push
out
shl
int
insb
mov
pop
pop
mov
cmp
cmc
pop
fcmovnu
out
and
rcrl
mov
lock
xchg
push
cmp
cld
mov
das
pop
add
push
xor
out
mov
out
xor
in
cmp
movsl
adc
xchg
imul
mov
fldl
sbb
sub
cmp
jle
lods
icebp
lds
cmp
dec
testb
pop
push
stc
js
pop
pop
mov
js
mov
add
inc
ja
jle
stos
outsb
adc
rol
fistpl
insl
ret
data16
xchg
pushf
sbb
rorb
out
add
dec
jmp
xchg
mov
or
and
or
push
jp
pop
stc
mov
push
iret
or
jl
push
movsb
jno
cmc
mov
sbb
xor
mov
cmp
in
sarb
xor
mov
cmp
aad
bound
subl
pop
test
insb
out
ret
sbb
push
cmp
lret
lret
scas
dec
std
inc
pop
lds
mov
addr16
mov
mov
out
push
xor
imul
mov
movsb
cli
cwtl
inc
stc
sbb
and
ljmp
movsb
xchg
mov
mov
cmp
dec
jp
jo
push
or
out
mov
out
cwtl
pop
aaa
lea
add
fld
pushf
dec
or
mov
add
mov
pop
jns
pop
jecxz
mov
ljmp
cltd
test
cmp
clc
xchg
jae
push
in
sbb
mov
lahf
xchg
mov
scas
jne
scas
cmp
inc
nop
or
dec
jbe
sub
ret
ljmp
and
cli
and
out
push
imul
insl
xor
mov
xor
pop
aas
pusha
iret
adc
divb
idivl
cmc
cmpsl
xchg
mov
lret
ss
lret
imul
mov
add
pop
push
mov
sti
jns
mov
aad
push
mov
and
aam
xchg
xlat
dec
dec
mov
jg
leave
mov
add
out
inc
arpl
mov
out
fwait
lret
inc
fldcw
adc
out
imul
mov
mov
xchg
mov
push
sbb
in
sub
mov
cmpsb
push
add
dec
mov
les
jbe
or
test
sub
out
inc
sbb
pop
ds
inc
cmpsb
ljmp
ror
loop
outsb
pop
mov
jb
cld
fsubr
pop
add
into
inc
mov
and
and
fucom
pop
in
jne
into
and
cmc
or
or
mov
pop
jns
fsubs
movsl
das
iret
dec
lock
nop
outsl
mov
jo
push
repz
pop
in
jnp
std
xchg
cmp
or
mov
mov
or
cwtl
inc
adc
fcompl
pop
repz
mov
test
and
ret
mov
out
call
mov
test
ljmp
sbb
push
stos
pop
add
fisubl
pop
mov
xchg
rorl
dec
jecxz
ss
aam
jl
mov
call
mov
insl
pop
repz
pop
fadds
mov
jb
movsb
dec
es
scas
icebp
push
push
test
loopne
cld
or
outsb
jmp
cld
lds
adc
ljmp
mov
repnz
or
sbb
lcall
mov
mov
or
sbb
mov
setge
popf
xchg
in
xor
jnp
int
outsb
dec
xor
lods
push
cli
add
xor
cmpsl
mov
sti
les
test
inc
js
jl
in
dec
sbb
dec
je
adc
out
call
mov
in
or
mov
shll
xor
in
xor
sub
push
mov
xor
test
add
orb
jbe
sbb
xchg
mulb
shl
sti
cli
jg
int
pop
notb
push
in
mov
cmp
in
mov
xor
lahf
sbb
ljmp
sbb
aad
lock
mov
mov
and
push
or
mov
sbb
mov
jg
std
shlb
mov
mov
jmp
icebp
repz
adc
sub
sbbb
rcr
shl
dec
movsb
loopne
arpl
mov
mov
push
adc
add
push
test
call
addl
xchg
dec
inc
test
adc
add
in
into
mov
inc
xor
inc
repnz
repz
xlat
mov
cwtl
push
ds
inc
stc
int
frstor
sbb
imul
hlt
mov
mov
xchg
insb
sbb
or
xchg
test
xor
scas
cmp
xor
ret
out
insb
cmp
mov
push
add
rcr
fadds
dec
es
inc
jno
jl
sti
pushl
shl
stc
mov
pop
cli
rorl
js
sbb
mov
and
cli
and
xor
imul
ret
add
cs
adc
adc
scas
in
loope
pop
inc
xchg
push
scas
cwtl
cmp
pop
pop
test
mov
push
push
fs
repnz
das
xchg
imul
int3
mov
xchg
adc
fcomps
mov
dec
mov
pop
mov
mul
jo
inc
jae
cmp
leave
cmc
lcall
mov
cmc
push
faddl
adc
insl
jbe
pop
push
ret
push
mov
pop
xchg
iret
push
mov
push
xchg
cld
pop
mov
push
idiv
loopne
mov
shll
sbb
and
shll
dec
dec
sbb
insl
aad
add
scas
ljmp
jle
dec
popf
mov
jno
jb
daa
mov
fsubrp
xor
xor
cld
sub
fbstp
out
insl
jbe
add
fcompl
add
fnstsw
fcmovu
pop
lods
cmpsb
pop
mov
push
add
testb
fiadds
icebp
dec
int
rcr
sbb
test
mov
push
xlat
adc
rcrl
sub
mov
inc
jbe
fdivrl
xchg
jl
rorl
movsb
in
adc
lahf
adc
add
lret
lds
ja
cmp
addl
inc
jg
fldl
test
mov
pop
push
mov
jns
xor
cmpsl
and
cmpsb
pop
in
hlt
pop
pop
cmp
lret
loope
addr16
push
mov
mov
ja
popf
stc
mov
sti
push
add
cli
mov
dec
pop
out
adc
adc
mov
lahf
inc
mov
cli
add
enter
add
xchg
test
repnz
lods
icebp
mov
cltd
push
repnz
inc
jae
and
xor
push
mov
leave
xchg
rorl
mov
cli
das
push
bnd
push
inc
inc
xor
popf
iret
xor
cmc
xor
jle
fcoml
sub
scas
push
insl
mov
xchg
cmpsb
leave
pop
dec
rcr
pusha
and
mov
lods
xchg
cli
lcall
repnz
into
mov
cs
lods
cltd
ds
or
mov
insb
mov
push
popaw
or
into
int3
in
sub
jle
push
in
add
es
lock
std
jg
fbld
push
jne
push
xlat
and
movsl
dec
xchg
lret
test
add
les
mov
mov
fdiv
and
xchg
mov
push
aam
shll
cwtl
jp
cmc
cwtl
mov
call
or
adc
les
mov
imul
mov
jg
pop
jne
adc
addr16
adc
addl
sub
into
jno
fadd
imul
repnz
in
fildl
mov
in
sub
fcmovnbe
iret
out
insl
ss
aaa
addr16
jmp
xor
add
mov
mov
adc
sahf
dec
push
and
incb
sbb
xor
and
or
mov
aas
mov
adc
mov
xor
lret
xchg
jp
dec
stc
jne
mov
hlt
jo
les
das
insl
gs
shrb
cmc
push
mov
out
jle
into
lock
inc
xor
or
pop
aaa
es
pop
mov
ja
mov
cwtl
imul
bound
xor
je
bound
mov
mov
cmpsl
dec
add
push
cli
out
repz
sbb
jecxz
mov
daa
cmp
sbb
iret
stos
mov
push
adc
frstor
lret
xor
movsl
sbb
cs
mov
test
cld
lock
outsl
inc
data16
dec
mov
cmc
mov
dec
dec
push
ret
mov
sbb
cmpsl
mov
cmp
push
scas
loopne
and
out
pop
jl
test
jge
dec
clc
pop
sarb
sarb
insl
inc
jb
daa
sarb
sbb
jmp
flds
jb
xchg
add
jge
std
jbe
inc
ret
mov
inc
jo
cli
xchg
adc
pop
loopne
jns
push
pop
repz
stos
repnz
xchg
leave
add
in
cli
movb
icebp
pop
and
push
jae
in
dec
stos
cld
push
push
or
or
lcall
mov
dec
mov
es
xor
cltd
in
xchg
or
jg
cmpsb
inc
shll
insb
add
mov
mov
insb
stos
lea
jge
pop
xchg
mov
push
cmp
mov
adc
adc
pop
xlat
dec
dec
sbb
js
xchg
sub
sbb
rcl
sub
sub
popa
outsl
stos
stos
sbb
jnp
jo
adc
sbb
cmp
mov
adc
mov
mov
int
in
lds
fcoms
cltd
fcmovbe
mov
lea
push
add
imul
xor
or
lret
ja
addr16
jo
in
cmpb
cltd
mov
es
movsb
inc
pop
sahf
addr16
mov
add
icebp
adc
mov
adc
inc
xlat
sbb
push
push
mov
subl
fistpll
lahf
clc
cltd
push
lcall
sar
movsl
shll
push
push
in
xchg
add
shrl
push
sbb
in
mov
test
repnz
out
lret
test
rcl
fimull
pushf
decl
in
jmp
lret
sub
popa
icebp
push
mov
mov
mov
movntq
call
cvtdq2ps
push
lds
loopne
outsl
sarl
lret
inc
jns
shr
insb
js
rorl
call
xor
imul
jnp
fwait
mov
dec
sub
xchg
jmp
or
rcll
mov
mov
add
das
jo
xor
rol
pop
push
or
cmpsl
inc
push
sub
outsl
cltd
push
test
mov
and
mov
ds
add
aaa
sub
fs
or
cmp
sub
pop
pop
mov
lcall
mov
sbbb
adc
cltd
lea
repz
divl
sbb
scas
into
lret
xchg
xor
lret
or
and
fs
mov
or
adc
in
lds
dec
or
shrl
or
cld
movb
push
inc
dec
pop
push
ljmp
jge
insb
test
mov
add
cmpsb
repz
scas
sub
lahf
mov
loopne
fdivr
xchg
ss
pop
mov
cltd
ds
lods
xor
enter
jecxz
xorl
jne
dec
out
add
dec
sub
pop
insb
or
cmp
mov
sub
mov
push
push
push
test
push
sub
lods
imul
insl
enter
test
and
fadd
cmp
mulb
shrl
push
sbb
mov
int
jnp
adc
sbb
imul
push
dec
mov
outsl
rcrl
stos
cwtl
out
mov
or
popf
inc
mov
pop
cltd
aaa
xchg
mov
test
or
sub
sub
inc
rolb
outsb
scas
mov
jge
jnp
inc
mov
rolb
lods
sub
test
js
push
mulb
insb
cwtl
sub
bound
xor
cmc
fs
lea
imul
std
dec
call
or
push
outsl
push
and
stos
ja
pop
inc
data16
loope
repnz
cli
xorb
pop
aad
jl
lret
or
and
pop
xchg
imul
out
xchg
ds
adc
jae
cmc
inc
jne
inc
add
sbb
clc
adc
inc
xchg
loopne
and
xchg
rclb
push
jns
sub
pop
pushf
lods
sub
lcall
movb
in
mov
imull
loop
pop
pushf
mov
lahf
mov
fcoml
aam
xor
adc
lcall
enter
mov
jae
pop
test
imul
mov
orl
hlt
test
xor
mov
dec
jo
movsl
xchg
jle
lret
push
dec
in
lcall
mov
adc
cmc
outsl
imulb
mov
movsl
mov
sahf
cmp
mov
push
les
mov
and
pop
out
mull
xor
stc
push
cli
pushf
lds
out
mov
jo
inc
test
and
xchg
sub
flds
jecxz
mov
mov
sbb
test
cmc
js
int3
mov
out
push
das
ja
xchg
add
movsb
imul
in
cwtl
push
adc
jns
nop
pushf
push
cmpsl
ja
outsb
adc
sbb
adc
ds
lahf
repz
xor
push
pop
rcl
aas
fsubrl
mov
in
rorl
sti
outsl
push
push
iret
push
in
pop
inc
lret
inc
insb
mov
into
fcoml
lcall
xor
add
rcr
jge
clc
into
push
jae
sarl
out
or
and
orb
ja
sbb
jp
std
mov
clc
pop
dec
cld
fisubrl
bound
cmc
mov
or
add
sbb
shl
les
insl
test
add
lds
push
mov
adc
xor
rcll
aas
sub
or
movsb
cmp
cltd
jns
push
aas
xor
imul
fisubl
lods
popa
cmp
xor
adc
popa
mov
daa
xchg
mov
in
add
ja
outsb
shrb
sahf
popa
arpl
popa
xchg
leave
test
mov
fxch
pop
outsw
inc
testb
xchg
or
lds
test
jns
mov
or
cmp
in
call
inc
adc
jae
mov
popf
inc
cmp
jae
pop
fucom
ss
daa
or
sub
inc
jae
in
loop
pop
testb
and
and
aam
push
push
outsb
pop
cmp
insb
cmp
cmp
repnz
adc
xor
cld
cs
in
rorb
jmp
in
test
popa
dec
and
sbb
xor
test
loope
dec
in
test
xorb
loopne
push
dec
das
stos
xchg
sbb
daa
push
ret
call
mov
pusha
std
mov
push
push
aam
stc
jl
hlt
cmpsb
push
out
jmp
push
sti
dec
sbb
idivl
xorl
push
sub
insl
sub
imul
xor
mov
mov
pop
dec
out
mov
pop
fdivrp
insl
mov
dec
jge
pusha
out
mov
and
movsb
jmp
inc
xor
add
mov
daa
mov
pop
rcrl
rorl
cmpsb
ficoml
sbb
mov
jmp
and
ret
mov
roll
inc
xchg
sbb
idivb
push
stos
jb
push
outsb
stos
cmpl
ljmp
cs
cmpsl
mov
push
out
hlt
mov
xor
mov
push
mov
push
movsl
in
dec
push
enter
data16
adc
subl
mov
jnp,pn
fldl
cmp
pop
push
cmp
mov
or
out
xchg
test
mov
inc
push
pop
mov
xchg
pop
daa
adc
push
loope
dec
jl
loopne
cmp
push
shlb
idivb
mov
and
mov
fdivr
inc
pop
mov
insb
lret
jb
imul
pushf
call
or
stos
iret
int3
add
gs
xchg
in
and
mov
and
jg
push
mov
rcr
insl
das
repz
xor
pop
fs
jp
mov
cs
jnp
mov
cli
in
fistl
inc
rclb
inc
icebp
fidivrs
mov
adc
xor
loopne
cmp
mov
in
xchg
fimull
daa
pop
mov
dec
sub
repz
ret
xchg
add
shlb
or
out
pop
or
sub
mov
mov
xor
test
movsl
xor
sahf
push
mov
push
pop
inc
cmpsb
push
push
xchg
adc
or
fistpl
or
in
jne
and
jle
jge
sti
jne
pusha
pop
out
sbb
adc
es
xchg
mov
cmp
loopne
loope
daa
lahf
cld
je
dec
fs
push
adc
jg
fistpl
sub
fdivs
lods
xchg
jl
jae
pop
lcall
pop
mov
in
xchg
cli
inc
inc
sub
jbe
in
stos
sub
jp
js
inc
hlt
mov
in
lds
in
sub
imul
data16
insl
popa
xchg
pop
int
das
dec
rorb
icebp
outsl
push
xchg
lds
cld
mov
pop
icebp
cwtl
test
das
push
mov
jno
mov
sar
or
push
xchg
sbb
in
mov
mov
inc
dec
and
mov
scas
mov
xorl
dec
rolb
outsl
cmp
inc
shlb
add
mov
lahf
fisubs
and
cmp
xchg
orb
jmp
xor
or
outsb
sbb
mov
add
mov
cmpsb
enter
fimull
sahf
popa
or
and
push
lea
mov
push
cli
jl
fstl
addl
rcrb
push
and
test
in
shl
mov
into
push
mov
sub
and
into
sub
add
fcomp
fisubrs
enter
mov
bnd
sbb
out
insb
mov
xchg
loope
cs
insl
testb
gs
or
in
push
repz
mov
pop
jmp
cltd
fbstp
mov
ret
xchg
sbb
sbb
mov
cltd
leave
or
mov
jp
and
mov
add
mov
xor
sbb
sub
jb
push
mov
pop
add
jge
inc
sub
sbb
jle
jmp
adc
add
inc
lock
js
loopne
sub
gs
fsubs
pop
mov
mov
div
popf
push
and
xchg
hlt
repnz
sub
or
pop
xchg
dec
mov
add
mov
pop
stc
inc
sub
iret
mov
mov
sub
and
in
shlb
dec
and
mov
mov
divl
stos
mov
cmp
cltd
mov
pop
cmp
int3
sbb
mov
jp
jns
xchg
mov
cmpsb
add
es
das
stos
fld
xor
adc
jae
mov
ds
es
pop
movsb
dec
pop
pop
push
daa
fcmove
out
int
push
dec
jnp
pop
inc
add
inc
ret
aad
sbb
outsb
jmp
out
jb
jmp
sbb
icebp
scas
pop
mov
scas
push
xchg
mov
dec
push
sub
fisttpll
xchg
or
ret
loopne
test
xor
mov
sbb
sub
movsb
dec
call
neg
aad
cs
je
mov
clc
cmc
ss
xchg
lods
and
andb
push
popf
inc
xor
ret
xchg
push
or
mov
in
aas
sbb
jp
aam
ja
sub
outsl
sbb
dec
gs
bnd
mov
and
or
clc
adc
cmc
mov
jle
mov
pop
dec
push
repnz
push
enter
sar
out
pushf
loopne
cs
sbb
std
push
scas
scas
ja
repz
fiadds
sbb
cmp
ja
movsl
jge
pop
fstpt
loop
hlt
sbb
shrl
push
out
aas
ds
mov
sub
xlat
movsl
pop
mov
pop
xor
sub
icebp
push
daa
fistps
stos
lahf
add
xor
insl
lcall
sbb
ljmp
mov
xor
js
aad
cmp
int3
fimuls
fidivrs
lcall
in
sub
mov
jno
gs
adc
push
ja
xor
rorb
scas
mov
enter
and
and
jp
lret
or
es
outsb
iret
dec
lds
pusha
call
leave
add
mov
lds
sbb
jnp
xor
and
jg
int
xchg
sub
lods
mov
mov
loop
mov
addr16
push
arpl
shl
inc
xchg
dec
mov
push
test
cmp
jb
mov
mov
mov
push
pop
jnp
aam
jle
in
addr16
fs
icebp
pusha
fidivs
js
pop
and
jmp
mov
add
jnp
adc
fstps
cmp
test
add
sbb
lds
inc
jge
mov
iret
jg
aam
pop
xchg
inc
fnstsw
idiv
mov
push
mov
out
je
jmp
jb
push
mov
xor
ss
fcmovnu
fsubp
mov
xchg
ret
insl
ss
or
dec
adc
jno
push
aam
xchg
xchg
lea
adc
nop
inc
fcmovbe
out
cmc
mov
loopne
sarb
lods
test
dec
push
nopl
daa
mov
add
mov
mov
test
sub
mov
jg
add
sbb
lods
and
add
movsl
cmp
pop
aaa
push
jns
loop
jae
or
mov
cmpsl
sub
pop
or
stos
popa
adc
add
dec
push
and
mov
dec
and
cmp
mov
ja
icebp
mov
stos
ret
out
fsubrp
jge
lea
jl
sub
out
ss
lahf
std
sti
add
lods
test
push
pop
sub
sub
fimuls
scas
pop
mov
lods
jae
fwait
lret
je
cmp
mov
test
insb
out
mov
sbb
or
mov
dec
arpl
cmc
mov
lods
arpl
testl
push
and
shll
sbb
std
gs
ds
push
loopne
xlat
call
std
inc
cmp
xor
into
jno
pop
pop
addr16
push
cmpsb
fcoml
fldenv
adc
fadds
cltd
push
mov
enter
adc
in
xchg
xor
cmpsb
pop
shr
add
cmp
out
dec
subl
push
out
stos
push
fiadds
fwait
stos
test
add
adc
insl
loopne
cmp
out
sub
rolb
xchg
ret
adc
cwtl
sub
leave
jae
inc
dec
xchg
icebp
adcl
rcll
out
popf
cld
add
add
clc
ds
pop
pop
mov
js
mov
xchg
mov
mov
mov
add
movsl
mov
xor
pop
shr
pop
jecxz
aad
in
insl
mov
xchg
data16
imull
inc
inc
je
jge
loop
cwtl
sub
loope
pop
pop
cltd
ds
mov
hlt
fcmovnu
xor
outsl
arpl
jo
xchg
stos
sbb
push
fs
adc
icebp
aam
mov
pop
push
push
ficoml
push
ret
push
sbb
mov
mov
scas
sbb
ds
push
pushf
mov
arpl
or
dec
sub
in
and
das
jg
mov
mov
mov
lods
add
das
or
jmp
sti
mov
inc
arpl
mov
imull
push
fildll
mov
dec
xor
or
sub
filds
push
xchg
xor
fwait
cmpsb
shr
jbe
mov
outsb
ja
sar
and
add
ret
dec
or
mov
loope
mov
js,pn
movsl
ret
fadds
mov
push
fadds
add
daa
movsb
stos
outsl
adc
and
lods
add
adc
push
imul
test
sahf
lcall
cmp
xchg
sub
and
stos
lcall
pop
shrb
push
mov
dec
xor
inc
in
mov
lock
ljmp
out
cmp
and
mov
mov
jbe
mov
sub
movsb
xchg
fldt
pop
lret
mov
loope
jmp
dec
cmp
xchg
and
mov
mov
movsb
aad
mov
pop
les
in
jp
imul
cmpsb
aam
hlt
lods
xor
loop
out
ds
xchg
loope
sahf
pop
push
sub
addb
sahf
ret
inc
ja
xchg
xchg
sbb
dec
pop
cmp
outsb
xor
add
mov
dec
sub
xchg
ljmp
pop
sub
repnz
inc
lahf
mov
int3
mov
jmp
mov
sbb
pop
sub
insb
cmp
pop
outsl
push
add
push
pop
dec
jl
lods
popa
stos
sti
cmpsb
dec
fcmove
mov
sub
jg
pop
mov
repnz
fcoms
test
js
jmp
mov
repnz
and
out
lods
sbbl
stos
insl
je
add
push
mov
pop
push
rorl
cmp
ljmp
cs
xor
adc
pop
dec
mov
xchg
adc
inc
xchg
and
mov
lcall
xor
add
idiv
in
lret
movl
jae
ja
repz
dec
mov
push
cmp
movsl
or
xchg
adcl
test
out
pop
ljmp
jbe
cmp
xchg
mov
sbb
notrack
outsl
cmp
adc
xor
push
shlb
aam
dec
insl
insl
rolb
mov
jnp
fidivs
pop
cmpsb
repnz
mov
xchg
mov
scas
dec
mov
push
out
mov
aas
push
sbb
stos
push
and
rorl
repnz
adc
repz
stos
add
out
sub
cs
xlat
lods
xchg
lods
xchg
mov
inc
mov
xor
sub
dec
lods
ds
xlat
scas
ljmp
mov
scas
mov
stos
out
sub
adc
push
xor
sahf
mov
sub
push
push
push
add
adc
inc
sarb
lods
out
inc
in
or
or
jno
test
sahf
add
fildl
mov
les
mov
rcl
rcl
cmp
add
mov
push
cltd
cmpsb
add
cmp
aam
cli
xchg
js
loop
push
cmpb
jb
loope
sub
daa
icebp
call
pop
pop
ficompl
sbbb
ljmp
mov
imul
icebp
cltd
pop
arpl
subl
bound
clc
adcb
mov
and
push
sarb
mov
xor
hlt
xchg
test
dec
cmp
loop
and
sbb
fsubrl
inc
nop
daa
out
sub
sub
mov
rcr
inc
stos
push
fildll
push
adc
sbb
inc
lret
sti
pxor
std
das
jecxz
fdivrl
ficomps
test
loopne
xchg
adc
out
rclb
pop
sub
adc
xlat
leave
loopne
adc
jp
int3
jae
cmp
push
xchg
mov
mov
popa
call
std
xor
es
divl
gs
mov
mov
shlb
jmp
out
fwait
jns
stos
rcr
divl
int
mov
bnd
movsl
push
jecxz
ljmp
imul
int3
and
fs
sub
xor
aam
cs
stos
mov
push
dec
movsb
cmpsb
bnd
sar
js
ret
jmp
loopne
adc
add
movsb
jae
and
push
xor
adc
sub
outsb
cmp
sub
xchg
sub
shll
xchg
lahf
pop
dec
les
ds
jae
sbb
scas
jecxz
ja
idiv
fbld
lea
add
aad
cwtl
xor
cld
ds
mov
std
jne
call
xchg
dec
jmp
mov
inc
add
dec
jp
loop
cmp
push
mov
push
mov
in
xorl
xor
jp
cmpb
jmp
test
inc
push
sbb
cmpsl
hlt
sub
testb
xchg
jae
into
sub
aad
mov
ret
test
push
sbb
js
push
rol
or
inc
das
inc
pop
sub
mov
fadds
scas
inc
cld
nop
bound
jmp
fisubrs
pop
leave
push
nop
testl
sub
into
cmp
jp
dec
dec
dec
dec
repz
in
aas
fcmovnu
add
mov
lret
cmp
pop
cmpsl
sub
popf
add
mov
mov
jb
cmp
test
ljmp
aad
sahf
xor
mov
cmp
in
or
and
push
clc
fistpll
add
or
push
subb
mov
sarb
loop
sbbl
repnz
and
push
sub
js
enter
rcr
movsl
leave
pop
push
push
roll
imul
sbb
cmc
enter
dec
mov
call
lret
push
add
lahf
fs
jb
int
sbb
mov
or
imul
cwtl
mov
add
sarl
cmpsl
hlt
cwtl
lahf
push
lret
pop
out
jge
dec
pop
lods
mulb
inc
mov
inc
cmp
cmp
sub
in
callw
push
cs
mov
sbb
ljmp
ljmp
jge
adc
ret
jnp
adc
mov
ljmp
add
or
sub
dec
gs
lret
les
dec
xchg
xor
and
movsb
mov
push
mov
jmp
or
imul
pop
dec
into
sbb
lods
pop
dec
in
jae
pop
jge
dec
mov
and
lock
xchg
sarl
pusha
leave
cltd
cmp
sub
aam
inc
adc
cmp
mov
das
leave
cmp
push
jb
adc
outsb
add
mov
dec
shrl
push
cmp
and
fld1
pop
jnp
in
push
mov
mov
mov
loopne
insb
inc
adc
push
test
push
xchg
jp
je
cld
jmp
mov
xor
sub
jns
shll
lock
orl
movsl
jge
mov
mov
leave
aam
and
push
pop
repnz
clc
cmp
lods
mov
das
insb
mov
das
mov
ret
fiadds
stc
in
lahf
fwait
lock
sub
fsubrs
xchg
mov
test
fmul
cli
pop
test
dec
fwait
sub
out
addr16
sbb
xor
lahf
push
mov
and
pushf
aam
mov
rolb
arpl
adc
insl
pop
jns
mov
adc
add
inc
and
js
jo
mov
stos
movsb
push
mov
dec
inc
cli
push
push
xorl
int3
dec
mov
jns
mov
das
stc
lds
xor
push
mov
or
dec
pop
cmp
adc
jae
pop
jle
xor
movsb
movsl
cmc
mov
dec
and
and
rcl
jecxz
adc
je
fnop
adc
xchg
push
in
mov
pop
mov
add
add
adc
jmp
inc
out
dec
icebp
out
adc
or
test
stc
xchg
pop
inc
push
xor
mov
daa
movsl
lret
inc
mov
shl
mov
pop
aam
inc
in
cli
adc
dec
mov
addr16
push
dec
lret
cmp
dec
pop
je,pt
mov
or
push
ds
push
scas
iret
xchg
pop
fisttps
ror
xchg
adc
jmp
pop
das
pop
jl
fs
jno
mov
mov
test
test
push
popa
and
lret
push
cld
loopne
jnp
adc
repz
jle
rcll
dec
dec
out
and
popa
adcb
out
sub
icebp
stos
lock
mov
inc
inc
push
sub
xor
jg
repnz
rcll
mov
test
xor
outsl
pop
sbb
xchg
and
iret
lds
fcmovne
add
imul
adc
cli
or
ljmpw
gs
and
mov
jbe
sbb
jecxz
push
inc
cwtl
and
movsl
fimuls
mov
mov
test
mov
cmc
dec
arpl
push
inc
mov
add
stos
aam
or
pusha
mov
fsubl
jge
xor
adc
arpl
fisubs
sub
pop
movsb
out
mov
aam
aam
stc
clc
and
lret
stos
repz
or
shr
cmp
sbb
xlat
xor
fiadds
fcompl
cmpsb
aad
rcl
jns
dec
ret
jo
dec
push
in
and
mov
in
cs
js
push
int3
jp
sbb
or
xor
les
test
ja
aas
insl
inc
pop
leave
mov
scas
int
adc
dec
out
mov
movsb
mov
cmpsl
cmp
fwait
or
sbb
outsl
push
idivb
ja
hlt
stos
mov
pop
adc
push
dec
dec
cs
test
sbb
mov
and
jmp
cmp
fisttpl
pop
jge
jge
cmpsl
cmp
jle
xchg
outsl
insb
push
jle
jae
jns
mov
popa
cmp
shr
mov
out
lahf
xchg
and
lods
pop
xor
stos
in
push
push
insb
fsubl
repz
pop
mov
sbb
adc
dec
push
inc
daa
pop
stos
adc
add
push
or
adc
inc
dec
push
mov
into
jo
and
xchg
and
out
daa
dec
int3
aam
repz
inc
xor
out
cld
cmovg
mov
cmpsb
mov
push
out
inc
cld
jp
cld
or
cmovp
test
inc
sbb
leave
cltd
inc
or
pop
shrb
jge
or
call
sti
pusha
js
inc
adc
sahf
mov
push
add
notl
mov
ljmp
jg
nop
test
cmp
shlb
mov
sbb
add
cmp
and
fwait
xchg
inc
dec
clc
pop
daa
push
es
ja
jg
cmpsb
add
in
dec
cwtl
das
outsl
jns
xchg
or
jmp
sub
xor
icebp
xor
std
fs
jecxz
push
cmpsb
cmp
mov
mov
hlt
and
out
add
movsb
in
cmpb
repnz
or
mov
in
pop
in
movsb
data16
lea
dec
jo
pop
shl
imul
fwait
adc
test
mov
fcoms
outsl
cmp
loopne
je
adc
inc
or
fsts
js
mov
jnp
aam
jne
insb
xchg
push
lcall
jb
fisttps
enter
sub
mov
add
scas
icebp
jne
dec
xor
push
or
pop
adc
jae
jb
test
insb
pop
jnp
cli
xor
dec
into
jno
mov
mov
add
cmp
adc
ds
pusha
pop
cld
test
popa
add
fsubl
inc
and
pop
imul
cmc
cmp
cs
push
and
add
pop
adc
inc
jbe
inc
sbb
pop
out
fstpt
mov
fildl
pop
jmp
adc
sbb
push
mov
inc
ds
and
cmp
in
push
or
mov
jg
push
sbb
popa
xor
out
xchg
cmp
shrb
popa
daa
ljmp
das
and
sub
int
in
cmp
dec
pop
aas
pop
and
xorb
iret
lds
movsl
nop
mov
rcrb
xchg
xchg
int
lock
std
sub
dec
loope
add
sub
ror
pop
jmp
cmp
or
popa
sub
cld
xor
and
fstpl
stos
out
addr16
mov
xor
lret
icebp
mov
add
cmp
pop
jnp
inc
push
arpl
push
sbbb
leave
es
decl
aad
sub
xor
sub
push
loope
int
jle
and
pop
and
imul
xor
mov
mov
je
lods
sarb
sarb
pop
andl
lahf
cld
add
negb
cmp
pusha
mov
fwait
hlt
adc
pop
xor
or
js
push
lahf
lcall
nop
cmc
nop
lret
jnp
mov
jmp
pushf
mov
sbb
push
data16
jb
gs
repz
pop
add
mov
mov
push
shlb
inc
pop
xor
xor
inc
mov
out
and
jp
pop
inc
jmp
jg
and
sbb
sub
enter
dec
or
les
lcall
xor
cmp
outsb
jg
inc
shlb
mov
add
push
xor
pop
mull
pop
mov
cmp
movsl
je
nop
rclb
lds
data16
pop
sbb
rolb
mov
add
das
and
jl
icebp
cs
add
insl
mov
or
push
and
xor
sub
adc
add
insb
dec
stos
jb
je
push
and
xchg
sbb
orl
pop
or
outsb
xchg
xchg
arpl
mov
leave
loope
cmp
mov
in
repz
mov
mov
adc
lods
shll
push
stos
xor
xchg
cwtl
pop
dec
movsl
out
fbld
jp
lcall
fbld
enter
movsb
push
es
dec
js
out
xor
and
in
sbb
bound
in
xor
push
cmp
shrl
push
ror
nop
in
int
dec
xchg
mov
push
mov
push
dec
lcall
loop
rcl
adc
jnp
stos
nop
add
mov
mov
sub
gs
in
lret
and
sbb
cltd
fwait
dec
mov
inc
outsb
icebp
out
je
popa
cwtl
out
rcrb
clc
lahf
xlat
in
adc
dec
push
and
adc
lcall
and
movsb
push
call
fs
pop
add
imul
and
push
push
inc
notb
rorb
xchg
xor
or
clc
divb
addb
mov
cmp
clc
push
pop
pop
push
pusha
jmp
mov
add
mov
xchg
fwait
push
fnsetpm(287
ficoms
push
push
mov
in
adc
mov
push
cmpsl
cmpsl
adc
js
popf
test
jne
popa
adc
movsl
insl
test
mov
mov
lcall
push
in
gs
int
and
ret
xchg
out
bnd
xor
lahf
in
mov
xchg
jbe
sub
cmc
cmp
push
lret
in
dec
push
addr16
push
adc
adc
jno
aad
fwait
adc
and
shl
cmpsl
in
xlat
push
sbb
dec
stos
fisubl
flds
std
mov
add
jae
in
and
icebp
nop
and
notb
leave
jmp
add
xchg
out
mov
inc
dec
push
mov
sub
je
mov
mov
imulb
jmp
add
or
xchg
dec
sub
out
push
jae
add
pusha
test
xchg
xchg
jle
inc
test
hlt
xchg
aam
adc
xchg
sub
dec
in
and
push
loopne
mov
faddl
xor
inc
sub
pop
stos
sti
mov
jns
pop
test
cmc
scas
imul
adc
and
adc
popf
push
insb
inc
xchg
lret
sub
icebp
cmp
mov
jae
scas
and
push
mov
cli
aas
mov
cmpl
nop
dec
mov
lds
sti
sbb
sub
pop
dec
jmp
call
in
filds
pop
push
cmp
mov
push
test
aaa
rcr
test
and
push
mov
data16
cmp
sbb
aam
lock
jmp
dec
lea
fcomps
mov
mov
popa
ljmp
or
jbe
pop
add
subb
out
push
fidivrl
cmp
sub
add
push
dec
in
in
jl
sub
inc
ss
xchg
int
dec
add
mov
scas
push
jecxz
loopne
push
and
addb
enter
lcall
das
das
xchg
lock
push
inc
xchg
loopne
xchg
push
js
loopne
pop
rdtsc
dec
loopne
in
es
jbe
jp
push
mov
mov
push
loop
mov
sub
jns
loop
xchg
out
inc
in
out
in
dec
dec
inc
cmpsl
cwtl
dec
loop,pn
mov
pop
xor
push
rol
cmp
mov
out
mov
adc
push
out
adc
mov
inc
jno
add
mov
gs
xchg
flds
mov
bound
mov
push
cmc
std
inc
jecxz
ja
in
mov
xor
stc
mov
outsb
inc
fistl
or
aaa
mov
xor
in
sub
jb
shr
add
icebp
inc
cmpsl
or
lds
mov
cmp
ds
ja
fbld
cmp
mov
repnz
sti
repz
sarb
cmp
cmp
add
jl
std
mov
cld
mov
insl
aad
or
aam
shll
pop
add
movsb
cli
adc
sahf
cmp
jl
enter
xor
mov
push
xor
xor
aaa
mov
adc
jmp
cmpl
sub
xchg
sbb
in
xor
in
in
mov
ss
mov
pshufw
sbb
add
adc
lcall
pop
add
and
ljmp
jo
push
outsl
jo
jnp
fldenv
cltd
add
xchg
popa
leave
clc
pop
int
mov
jg
xchg
int3
popf
lret
lds
sub
lret
or
rcll
jnp
sbb
stc
les
pop
sub
add
xchg
sahf
cmpl
lret
mov
call
das
cmp
add
xor
pusha
pop
jb
adc
fcoml
mov
lcall
les
insb
popa
sbb
stc
dec
cwtl
xchg
push
or
push
add
cmpsb
xchg
mov
ud0
cmp
scas
sbb
lods
movsb
sti
ja
mov
jne
out
cmp
pop
mov
loopne
pop
aas
xchg
lret
cmp
pop
sbb
push
mov
mov
decb
sub
test
out
add
shlb
sti
xchg
movsb
cli
ret
dec
fsubrs
mov
and
in
dec
mov
lcall
sub
repz
pop
xchg
xchg
inc
es
dec
add
lcall
dec
call
push
pop
roll
cs
psraw
mov
jl
cmp
dec
lods
inc
or
ret
sbb
rcrl
outsl
mov
hlt
jecxz
cmp
pop
pop
or
pusha
lea
aam
pop
into
cmpb
dec
shll
push
ds
stos
mov
mov
leave
push
adc
out
daa
in
mov
in
jg
adc
rorb
cmp
imulb
mov
add
pop
or
nop
movsl
sub
dec
add
imul
loop
adc
es
mov
mov
shll
fidivs
pop
push
pop
in
push
pop
xchg
lds
pop
fwait
xor
mov
jns
mov
test
outsb
sbb
xchg
ret
outsb
insl
aad
repnz
mov
pop
aam
sbb
push
das
ds
and
cli
outsl
fmull
or
decb
repz
push
add
imull
xchg
mov
sti
cmpl
or
in
sbb
das
inc
and
and
xor
push
sbb
mov
dec
out
sbb
iret
imul
daa
xorl
jbe
add
push
jg
mov
mov
and
xchg
mov
mov
stos
xchg
ja
scas
fidivrl
push
mov
mov
mov
sub
popf
push
sub
or
cltd
adc
xchg
add
test
je
outsb
xchg
rorb
adc
adc
insb
movsb
mov
cld
iret
icebp
mov
cmp
lea
stos
out
cmpsl
sub
mov
lods
or
sbb
jmp
push
mov
adc
jl
scas
cmp
jnp
xchg
dec
jne
xor
cmpsl
stc
or
sbb
adcl
xchg
and
shlb
sub
inc
add
adc
loope
jmp
and
xchg
stos
adc
cmp
dec
aaa
loope
je
mov
inc
jmp
cltd
in
push
and
lds
rclb
push
inc
cmp
adc
add
adc
mov
jnp
sub
icebp
fnstenv
jmp
xor
sub
test
lret
vmovntpd
fistps
cmp
mov
sub
pop
jbe
cld
in
xor
pop
fstpt
cmp
sti
mov
test
adcb
mov
mov
adc
sbb
xchg
mov
or
ret
pop
mov
pushf
cwtl
outsl
jg
leave
sub
lock
fldl
rcrl
pushf
xchg
jle
mov
cld
jmp
adc
inc
mov
loop
ja
fldt
imul
jo
jbe
xchg
arpl
pop
hlt
lods
mov
add
dec
or
dec
cmp
pop
xor
movsb
cmp
xor
pop
out
std
xor
sbb
or
cmpsb
fldt
ss
in
insb
and
dec
jno
push
data16
mov
cli
mov
sbb
stc
mov
sti
int
jo
hlt
push
add
daa
add
xchg
sbbl
pop
fildl
and
loopne
pushf
xchg
pop
int
cmp
xor
movsl
outsl
inc
add
push
loope
aad
mov
jmp
shlb
push
hlt
pop
movsb
js
out
xor
push
fcom
push
mov
in
in
lcall
mov
sub
fildl
push
push
sbb
cmpsl
sbb
cltd
sbb
in
and
arpl
mov
cmc
fsubrs
out
jg
aam
lret
imul
pop
ret
fmull
sbb
test
mov
cmpsl
ja
pop
popf
enter
daa
xor
inc
in
shlb
xchg
insb
cmpl
xchg
lcall
fiaddl
mov
pop
aam
mov
xor
push
xor
dec
push
out
pop
iret
in
mov
jbe
add
push
cltd
xchg
into
pusha
addb
sbb
out
outsb
stc
shrl
int3
dec
out
imul
mov
xor
sbb
test
jmp
inc
cmp
add
insl
stos
inc
sahf
fcmovb
push
sbbl
test
push
sbb
sti
push
jl
pop
loope
data16
or
jns
sbb
nop
outsl
test
mov
jnp
push
inc
xchg
insl
mov
jmp
mov
ret
test
std
pop
jge
addr16
nop
pop
add
hlt
jp
and
mov
jp
lods
xchg
test
fldt
push
mov
xor
ret
push
pop
jae
mov
into
adc
daa
outsb
fisubrl
sub
xchg
fdivrs
shl
xor
mov
in
or
xor
xor
pop
stos
imul
ss
mov
jecxz
lods
fimuls
jne
sub
or
paddsb
mov
xor
adc
imul
mov
rorl
cmp
pushl
iret
mov
jmp
out
lea
xor
mov
sbb
movsl
pop
sub
push
xor
stos
imul
adc
dec
pop
loopne
push
lcall
add
sub
enter
outsl
cld
mov
pop
js
mov
inc
inc
out
xorl
insl
bswap
add
mov
xchg
xor
popf
call
or
nop
jne
push
loop
sarb
xlat
gs
or
and
bswap
mov
inc
and
inc
andb
and
inc
ljmp
mov
jb
inc
or
mov
lahf
dec
scas
jne
pop
jg
sbb
or
neg
aam
test
in
mov
mov
xchg
rorb
aam
ds
imul
adc
pop
push
cld
inc
cltd
pop
mov
sbb
fldcw
or
jns
push
stos
fwait
iret
and
mov
xor
ret
out
shrl
insb
lret
aam
mov
cmp
std
rcr
stos
xchg
dec
stos
mov
stos
push
cmpsl
pushf
push
xchg
xchg
sbbl
jns
push
nop
in
push
insl
cmpsl
int
pop
sarl
push
fisttpl
pop
insb
mov
addl
jns
into
loopne
nop
fwait
shlb
xlat
sbb
out
les
and
data16
push
cvttps2pi
bound
ret
test
pusha
jle
stc
mov
es
xor
mov
lcall
sub
push
mov
fimull
jmp
inc
fidivrs
movsl
push
je
scas
es
add
sbb
daa
xchg
pop
std
cmp
pop
ljmp
bound
jne
out
add
adc
fmull
imul
inc
adc
out
dec
insl
popa
rorb
push
cmp
jecxz
loop
in
leave
xor
std
lds
xor
pop
imull
xor
jb
xchg
and
pop
ss
movsl
mov
pop
and
test
sbb
push
cmp
std
add
sbb
divw
sahf
lret
hlt
lock
dec
adc
rolb
fsubs
hlt
stos
jno
inc
neg
negb
sub
sti
jecxz
jno
imul
push
lret
mov
mov
add
loopne
stc
dec
or
inc
mov
sub
jecxz
int
aam
mov
popa
into
mov
test
add
inc
sub
pop
jnp
dec
sbb
cwtl
sbb
xor
jo
test
inc
or
es
in
fcomps
xor
mov
mov
aad
mov
call
cmpsl
xchg
xor
into
dec
sahf
lods
inc
and
sub
or
add
xor
xchg
push
mov
xchg
rol
shlb
addr16
cwtl
inc
sub
lods
mov
sub
enter
or
scas
dec
outsl
dec
jae
mov
mov
iret
imul
or
adc
iret
outsl
jae
pop
addb
ret
movsb
mov
aas
bswap
sbb
mov
jge
gs
dec
pop
cmc
call
idiv
jbe
dec
cmp
subb
testl
cltd
push
jbe
jb
js
xchg
dec
mov
xor
mov
enter
adc
cmpsb
js
pop
loopne
ret
les
stc
cmp
pusha
inc
sub
shrl
push
sub
ret
mov
sbbb
or
xchg
int3
aas
cmp
inc
outsl
rclb
inc
mov
cmp
in
mov
pop
push
ljmp
repnz
cwtl
lods
mov
fistps
shl
and
fistpll
psadbw
xchg
mov
mov
mov
add
pop
pop
mov
mov
dec
or
pop
mov
cmp
pop
loope
adc
jne
scas
pusha
hlt
imul
mov
dec
ds
inc
jb
notb
std
xor
ror
fisubl
or
sub
and
lret
nop
mov
in
mov
loop
inc
popa
lahf
dec
dec
orb
test
add
push
jo
sti
rclb
dec
jge
dec
cmpsb
push
aas
add
out
gs
cmp
or
jb
sbb
test
add
stc
adc
sbb
clc
lea
jbe
ds
mov
pop
push
shll
js
push
movsl
inc
stc
lea
pcmpeqw
add
mov
std
ret
test
es
sbb
mov
mov
out
sub
jae
jecxz
mov
dec
jbe
test
add
pop
pusha
dec
pop
mov
aad
xor
popf
inc
stc
icebp
sub
sbb
mov
in
dec
int3
repz
inc
inc
fs
push
lods
mov
mov
in
out
nop
cli
push
pop
arpl
testb
add
rorb
add
notb
shll
loop
inc
or
jle
inc
lahf
or
out
int3
fsts
scas
and
adcl
mov
nop
jno
mov
lcall
cmp
adc
scas
push
pop
jo
push
daa
ja
pusha
pop
jbe
call
aas
sbb
lock
notb
leave
fwait
xor
pop
add
push
mov
mov
jmp
cli
ljmp
test
iret
jns
outsl
jb
loop
adc
mov
in
jns
mov
mov
xchg
mov
enter
fdiv
lods
stos
xchg
in
push
mov
add
mov
dec
loopne
pop
pop
shll
jle
in
pop
jl
inc
inc
and
enter
xchg
add
xor
lcall
nop
and
mov
loopne
push
cmp
out
adc
mov
and
jl
jbe
sub
aad
popa
pop
imul
adc
adc
pop
push
jecxz
das
bound
data16
loope
leave
mov
popf
push
push
xchg
xchg
aaa
mov
jo
inc
insl
add
rol
cmp
loope
mov
gs
mov
xor
mov
mov
test
xchg
mov
dec
push
xchg
rorl
addr16
cld
jnp
sub
sub
jge
repz
push
hlt
test
loop
insl
movsb
dec
or
cmp
scas
push
lock
je
dec
sbb
cmp
aas
jecxz
xchg
sbb
dec
cltd
into
adc
outsl
aas
inc
jns
dec
test
stos
cmpsb
aam
aas
mov
lods
mov
adc
push
lret
fstpt
mov
inc
jb
dec
mov
xor
mov
inc
sti
push
cmpsl
out
ljmp
test
lock
data16
or
out
repnz
pop
sub
call
and
adc
jnp
jb
movsl
mov
mov
mov
enter
dec
movsl
lret
xchg
leave
dec
jae
inc
int
fidivrl
push
inc
fisttps
rep
hlt
inc
scas
sysret
adc
sysenter
insl
dec
es
mov
rcrb
mov
xchg
push
jmp
scas
inc
ds
xchg
jle
fcom
cmp
lahf
cld
sbb
push
mull
lds
gs
mov
in
ljmp
mov
mov
int
dec
cmp
jno
pop
push
movsl
jns
and
imul
xchg
int3
sbb
test
mov
pop
pop
push
xor
mov
xchg
dec
stos
fldl
leave
xchg
mov
rolb
mov
or
je
sbb
nop
or
mov
fstl
and
ljmp
ret
call
mov
sbb
or
pop
xchg
push
dec
test
ljmp
lcall
js
out
daa
pop
push
test
cmp
imul
mov
leave
out
mov
cld
jmp
lock
push
dec
js
cmp
mov
dec
or
add
jl
popa
mov
in
mov
sti
sahf
dec
xchg
xchg
mov
push
lods
jns
jmp
das
shrl
jae
push
mov
aad
sub
mov
dec
xchg
jno
sarl
push
adcl
and
push
scas
lock
mov
inc
in
adcl
scas
psubsb
xor
movsl
push
test
jno
fdivr
and
out
adc
repz
nop
in
push
mov
roll
stc
xchg
pop
push
pop
xor
sbb
xlat
mov
aam
aad
xchg
js
cld
xchg
xchg
or
inc
mov
push
das
lcall
iret
cmp
js
loopne
jo
sbb
add
xorl
adc
xor
or
popa
cmc
pop
out
scas
sub
xor
scas
mov
adc
cmp
pop
inc
xchg
ret
aam
cwtl
hlt
repnz
pop
push
call
test
ds
ror
add
je
fbstp
push
shlb
lret
mov
dec
adcb
or
das
shlb
adc
aas
xchg
cmp
icebp
mov
leave
jno
mov
dec
imul
pop
daa
lock
fisubrs
adc
or
push
mov
sti
rcrl
dec
andl
stos
sbb
daa
cmp
inc
dec
mov
rclb
and
jnp
fsubr
shrl
popf
je
jp
fmull
jp
adc
xchg
daa
inc
or
in
test
mov
inc
pop
addl
into
clc
popaw
shlb
int
movsbl
dec
int3
cli
and
inc
scas
std
xor
pop
sbb
mov
mov
sbb
dec
cli
mov
clc
movsb
add
lea
sbb
mov
pop
push
ret
jae
in
in
fstpt
push
je
mov
in
add
jo
fistpl
dec
popf
push
idivl
addr16
or
cmp
popa
mov
sarl
je
adc
pop
and
shrl
adc
inc
cmc
out
mov
sub
stos
das
daa
out
test
cli
fadd
sub
cmp
cs
lret
mov
test
xchg
jecxz
imul
xor
xchg
adc
push
ljmp
ljmp
pop
pop
mov
push
lret
jmp
ljmp
mov
jo
jp
fidivl
out
movsl
sbb
mov
cmp
dec
sahf
insl
adc
test
add
sarb
cs
push
aas
sbb
mov
jnp
lcall
mov
dec
mov
subl
push
fsub
mov
stos
xor
inc
imul
iret
jbe
adc
sub
fiadds
in
dec
test
daa
dec
inc
call
hlt
mov
bound
add
xor
scas
dec
mov
loop
sub
sbb
sarb
mov
sbb
jbe
lds
mov
adc
lret
lea
mov
inc
rcll
xchg
jecxz
lea
jge
push
popf
jge
mov
cltd
sbb
xchg
dec
inc
ret
xor
pushf
sbb
clc
in
sub
sti
jge
mov
or
and
push
shlb
xchg
and
lahf
push
frndint
enter
mov
push
xor
in
inc
pushaw
inc
std
add
insl
ja
xor
daa
mov
inc
or
sub
or
addr16
pushf
repz
dec
cmpsl
push
adc
mov
jmp
andl
sbb
sar
mov
and
mov
sbb
in
in
rorl
ja
mov
jne
aaa
movsb
add
cmp
and
push
pop
push
incl
cmpsb
xchg
jnp
inc
push
lds
ja,pn
cs
cmc
cmp
jnp
and
or
fldcw
mov
mov
pop
cmpsb
or
dec
subl
xchg
lods
lahf
or
add
movsb
xchg
mov
ret
icebp
pop
js
lahf
popf
pop
lods
mov
daa
and
jp
mov
jbe
mov
hlt
sahf
dec
cltd
ret
stos
fldenv
fnstsw
jp
int
in
dec
stc
add
dec
adc
xchg
sbb
and
dec
cs
in
sarl
mov
xchg
movsb
pop
dec
adc
xor
clc
inc
xor
lahf
dec
pusha
mov
jl
test
mov
push
mov
jns
lds
aad
pop
mov
pop
je
cmp
test
cmpsb
neg
mov
ss
std
inc
ljmp
cmp
in
addl
push
dec
add
cmp
call
xchg
xor
sbb
cwtl
aad
pcmpgtb
or
ljmp
add
int
jno
les
lods
shl
lret
out
mov
cmovg
xchg
inc
js
das
insb
icebp
adc
cli
sti
xchg
xor
xchg
adc
fsubs
xchg
test
aas
outsb
push
je
out
push
mov
xchg
movsl
mov
out
out
xchg
sbb
push
push
xchg
xchg
lret
adc
dec
outsb
fbstp
std
and
loope
rclb
dec
inc
ret
mov
dec
loop
sub
cmpb
xchg
xlat
dec
in
and
push
sub
mov
ljmp
inc
sbb
sbb
loope
pop
jge
leave
mov
push
in
outsb
mov
cmp
ret
ret
push
add
loopne
sub
xchg
xadd
cmp
sub
cmp
out
xchg
into
pop
ficompl
test
inc
add
lods
sbb
push
jg
repz
push
push
dec
add
jmp
cmp
stos
or
shrb
idivb
fdivl
xchg
jbe
xchg
je
lds
or
loop
call
xchg
stos
test
outsb
stc
push
mov
push
insl
push
lcall
mov
xor
xchg
inc
and
sbb
push
data16
mov
test
dec
call
adc
cmovne
pop
js
lock
cld
mov
pop
dec
mov
arpl
scas
das
sbb
push
out
lahf
inc
int3
sti
stos
jge
addr16
cmp
int3
xchg
dec
add
aam
lea
out
test
inc
daa
sbb
sti
movsb
das
or
les
outsb
decl
push
sbb
iret
imul
jbe
inc
mov
sbb
out
fildl
inc
mov
orb
mov
mov
pop
aas
adc
pop
scas
dec
adc
paddusb
pop
call
jnp
test
dec
jecxz
mov
jp
rorl
push
fimuls
dec
push
inc
fld
xor
loope
xor
scas
or
sahf
xor
ret
add
mov
out
push
mov
in
xchg
je
push
scas
jns
movsl
xchg
xchg
dec
push
in
addr16
hlt
jecxz
xor
xor
repnz
xor
or
pop
cmp
jnp
cmpsl
sub
lcall
xchg
lret
rclb
mov
and
add
pop
das
lea
mov
adc
test
cmpsb
or
cmp
cld
in
push
sbb
sub
out
rcll
dec
leave
push
jno
lret
insl
cmc
mov
in
pusha
fsubs
ret
je
mov
pop
lods
inc
movsb
xchg
int3
adcb
cmc
sub
mov
mov
xchg
mov
push
shll
xchg
js
cmp
lcall
pop
nop
mov
mov
outsl
sub
mov
inc
and
lcall
mulb
lret
fnstenv
sti
idiv
mov
cmp
mov
fnsave
pushf
ss
lds
mov
adc
jbe
add
push
jne
aam
out
jno
cmpsl
mov
in
pop
test
hlt
pop
hlt
adcl
adc
cmp
inc
rcl
jmp
imul
jns
pop
xlat
loope
inc
xor
enter
push
cmp
and
fstenv
int
xor
push
mov
push
fwait
sub
rcrl
mov
inc
mov
sarb
xchg
mov
sahf
addb
sbb
out
dec
aas
ljmp
cmpsl
jge
push
das
test
pop
popf
adc
shll
mov
and
add
repnz
or
jle
pop
imul
xchg
jp
lret
fstps
cmp
insl
jle
sub
mov
inc
jo
stos
mov
push
push
mov
add
lcall
pop
adc
mov
jne
stc
mov
sub
mov
sbb
push
mov
mov
xchg
and
das
jb
jmp
inc
ds
shl
test
or
jge
adc
out
cmc
mov
dec
push
outsl
jle
add
fisttps
icebp
js
jne
filds
imul
outsl
mov
sbb
and
and
xor
imul
fstpl
das
jae,pt
or
dec
addr16
xlat
cli
stos
int3
push
adc
add
movsl
jg
cltd
mov
cli
mov
in
lods
push
mov
jnp
cmp
stos
sub
scas
popa
inc
inc
or
dec
ret
pop
gs
dec
insb
adc
sub
cmpsl
inc
fidivs
js
sbb
pop
mov
gs
repz
arpl
pop
popa
leave
aam
xchg
xor
or
insb
out
mov
inc
cmp
or
and
jae
ss
out
xor
mov
roll
cmp
rorl
inc
mov
mov
add
hlt
add
xor
ret
aaa
or
sbb
scas
loopne
popa
adc
psadbw
leave
push
xchg
adc
loope
leave
mov
stos
mov
xchg
lods
mov
xlat
xchg
sbb
cmp
rclb
out
shrl
fs
xor
call
arpl
mov
pop
insl
xlat
and
xchg
inc
mov
ja
out
fidivrl
mov
xchg
scas
adc
add
cmp
add
iret
out
jnp
inc
pop
cltd
ds
mov
mov
add
adc
loopne
mov
stos
pop
push
xlat
dec
daa
pop
cmp
data16
imul
je
in
xchg
mov
icebp
insb
dec
fwait
cli
rcll
mov
pop
sub
or
pop
clc
imul
xchg
fwait
mov
mov
int
adc
jno
push
imul
mov
sub
insb
stos
cli
std
sub
cld
add
out
dec
mov
adc
sub
or
stos
mov
idivl
mov
cld
fcmovb
ret
repz
jmp
aam
adc
jbe
mov
pop
imul
add
test
shlb
push
in
mov
inc
psllq
testl
sbb
sahf
add
mov
rclb
popa
stos
mov
cmp
popf
cmp
fsubrp
hlt
mov
test
sbb
jne
jge
sbb
ja
iret
or
inc
sub
push
push
int
xor
fildll
push
and
int3
stc
hlt
insb
fidivrl
push
daa
pop
icebp
push
inc
push
movsb
pop
addl
sub
shll
clc
mov
or
adc
xor
stos
xchg
js
sbb
mov
jg
push
fs
addr16
ds
push
cli
notb
and
mov
xor
leave
pop
fstps
xor
fimull
xchg
iret
mov
movl
and
sar
pop
aam
dec
jo
repz
mov
aam
fisubrl
lcall
pusha
mov
shll
cli
mov
inc
and
cltd
lcall
and
xchg
sub
fstl
aas
inc
add
sbb
in
mov
push
out
lret
iret
sbb
pop
cmp
adc
jnp
stc
ss
fwait
xor
scas
popa
inc
pop
pop
test
mov
xor
inc
into
cmpsl
aam
lea
xor
push
mov
shrl
sub
fwait
mov
rol
jns
pop
mov
cmp
dec
repz
out
push
shr
jns
scas
pop
fiaddl
cld
or
and
jbe
jle
pop
pop
jae
ret
imul
shlb
lcall
mov
mov
sbb
dec
mov
add
ficoml
push
mov
cmp
xor
mov
push
jb
pop
add
sub
gs
pushf
in
add
adc
inc
sahf
cmpsb
xor
cmp
cltd
mov
sub
adc
outsb
int
xchg
cmpsb
pop
fmuls
push
clc
lds
or
dec
mov
adc
cmp
dec
cmp
pop
js
or
push
add
cmp
loop
dec
add
mov
mov
cmpsb
lcall
mov
test
test
cmp
fildll
xchg
pop
addb
shll
xchg
leave
pop
jle
out
mov
adc
add
xchg
mov
ds
imul
and
dec
clc
inc
xchg
jmp
fwait
inc
dec
loopne
mov
push
pop
pushf
imul
dec
test
xor
out
jmp
xchg
je
inc
dec
arpl
out
popf
add
into
jo
out
mov
push
stos
add
mov
sbb
call
sub
negl
orl
xchg
repnz
inc
push
jb
shlb
jmp
xor
push
and
lea
pop
lock
pop
adc
pop
or
out
dec
pop
call
in
aaa
cmc
pop
gs
mov
jp
mov
adc
icebp
imul
push
cs
mov
dec
orb
outsb
pop
jno
in
inc
ds
push
mov
pop
dec
incb
into
jbe
push
dec
out
movsl
ja
mov
je
test
ds
xchg
loopne
xlat
out
add
xor
sub
mov
out
xor
xor
je
dec
cmp
adc
jg
leave
daa
das
inc
sub
jmp
fs
push
pop
call
sub
int
in
imul
repnz
flds
mov
movsl
sub
lods
push
or
mov
mov
add
ljmp
sbb
fwait
fs
lret
in
call
out
mov
xchg
mov
jbe
repnz
ret
rcl
pop
insb
inc
jge
fstpt
popf
push
cli
test
and
pop
push
std
xchg
push
sub
nop
rorl
movsl
call
cmpsb
stos
pop
push
dec
movsb
or
jns
mov
pushf
push
add
push
pusha
pop
sbb
sub
repz
mov
pop
shl
scas
gs
sub
cmp
inc
sahf
xor
mov
jnp
call
sub
rcrb
mov
mov
lods
inc
mov
pop
fisttps
jge
jns
imull
jnp
sub
pop
mov
test
pop
fsubr
in
enter
push
mov
xchg
dec
push
repnz
xor
sbb
popf
inc
or
cmpb
hlt
pop
aaa
icebp
dec
test
or
and
xor
pusha
mov
and
ret
xor
mov
mov
insb
rolb
iret
add
std
sarl
mov
pop
mov
dec
hlt
cltd
xor
xchg
xchg
mov
iret
cli
ja
add
mov
jnp
or
les
sbb
int3
and
pop
mov
mov
loop
dec
mov
stos
inc
and
test
mov
lock
mov
negl
imul
stos
mov
imul
jne
push
lock
lcall
and
mov
jno
push
in
mov
sbb
xor
and
add
mov
aas
lret
push
push
dec
xchg
fstps
push
inc
mov
or
daa
push
ds
pop
lahf
jp
jb
cmc
inc
mov
jge,pn
fs
sbb
in
in
lds
ja
jmp
and
roll
xor
ja
xchg
jno
xchg
lret
pop
sbb
imul
jge
mov
pop
shr
out
xor
xor
into
sbb
in
js
sbb
mov
movb
sbb
data16
ffree
addr16
and
and
insl
xchg
push
mov
push
in
push
dec
popa
jl
sbb
xor
enter
cld
sbb
pop
dec
lock
mov
pusha
movsb
or
ficoms
sbb
mov
fstl
je
sub
add
mov
and
add
addr16
mov
icebp
out
jmp
dec
fsubs
mov
lcall
mov
or
mov
jg
mov
push
add
add
mov
loope
push
fwait
push
add
sub
dec
outsb
jae
xor
pop
mov
inc
inc
data16
add
xchg
and
jae
pop
inc
sub
xor
inc
aam
xor
xchg
cs
inc
mov
adc
sbb
cld
daa
add
jo
or
xchg
lods
aad
shll
cmp
mov
dec
add
out
pop
outsb
js
insl
adc
cmp
loope
lcall
push
jbe
xchg
xchg
cmpsb
cs
stos
mov
push
fwait
insb
xor
add
sbb
rclb
fidivrs
sub
push
loopne
jg
sub
push
and
or
aam
jae
sub
cmp
mov
or
nop
imul
xlat
movsl
mov
dec
lds
cmp
pop
cmp
hlt
iret
dec
pop
aas
jg
inc
je
sub
iret
pop
mov
fstpl
push
and
subb
enter
imul
ljmp
test
xchg
incl
jo
fucom
pop
push
out
jmp
hlt
pop
pop
mov
sahf
jno
adc
negl
cmpsl
setns
push
dec
and
push
push
cmp
cwtl
pop
xchg
dec
xor
lcall
cmp
jg
dec
jl
ret
xchg
data16
cmp
or
or
cmc
lea
mov
cmp
hlt
repz
cmp
fisubl
jo
dec
or
scas
xchg
scas
jp
or
mulb
nop
lret
xchg
inc
mov
adc
jle
push
pop
fldenv
push
cmp
xchg
mov
pop
sub
aaa
fisttpl
adc
into
cld
shrl
insl
subl
fcmovne
pop
fcompl
mov
inc
dec
je
xchg
push
push
inc
ret
sbb
shll
int3
inc
sub
pushf
addr16
jl
dec
add
dec
push
sub
jb
add
fstpt
stc
and
add
xchg
push
jae
add
call
inc
addr16
mov
stos
add
fidivrs
push
push
scas
cltd
addr16
xchg
mov
mov
or
mov
add
sub
fsubrl
mov
add
jbe
push
and
cmpsl
into
sub
and
jne
mov
je
add
and
fcoms
mov
add
iret
loope
jb
sub
clc
cltd
mov
insb
xor
mov
enter
xchg
mov
outsl
xchg
dec
mov
ja
cs
mov
fsubl
sbb
loop
jl
push
add
cltd
add
stos
enter
xchg
ljmp
loop
mov
ficoms
mov
repz
mov
xor
ficoms
ljmp
jmp
or
in
out
pop
lock
sub
lds
ja
icebp
sub
out
fdivs
jecxz
jg
and
sbb
push
push
aam
sbb
mov
jmp
cmp
dec
and
mov
cmp
mov
xor
popa
rcrb
xchg
loop
xor
add
es
pop
mov
fwait
mov
xchg
sti
es
mov
out
or
xchg
mov
and
clc
arpl
cmpl
cmp
push
jbe
mov
jns
adc
dec
popa
mov
daa
call
dec
inc
jl
pop
xlat
cli
mov
sahf
js
loope
pop
and
sahf
xor
mov
pop
fwait
mov
test
lods
inc
push
jecxz
inc
movsb
cs
sarb
pop
cmc
xchg
push
and
inc
push
nop
add
xchg
ja
gs
cmp
sbb
dec
or
inc
sbb
or
mov
lods
jl
pop
inc
jns
imul
mov
sti
test
pop
sub
pop
adc
mov
cmp
pop
jo
mov
cmpl
pop
std
lds
pop
jae
add
jge
add
stc
xor
roll
xlat
pop
mov
mov
popf
sbb
andl
repnz
lahf
fcompl
lret
scas
rcr
shrl
sbb
dec
inc
mov
mov
test
inc
pop
das
cmpb
mov
aaa
pushw
into
mov
mov
adc
or
sbb
addr16
je
fidivrs
jmp
roll
out
add
xchg
jne
mov
dec
jns
arpl
pushf
fildll
popf
ss
insl
out
aas
xlat
push
sub
adcb
or
ror
sbb
movsl
jl
inc
pop
cmpsb
sbb
sbb
dec
sub
in
pop
dec
or
cltd
xor
push
add
icebp
mov
mov
fdivrl
push
sbb
inc
jecxz
insl
add
jle
adc
push
pop
mov
loope
cli
xchg
mov
roll
imul
mov
jne
cmp
mov
repnz
sar
adc
lock
push
sbb
mov
shlb
pop
rcl
sub
inc
cmp
or
pop
xchg
out
mov
add
fcmovu
cld
sbb
lods
mov
xchg
adc
movq
lds
add
push
aas
pop
cltd
mov
inc
cmp
push
loop
int3
sti
push
scas
cmp
mov
aam
jno
sbb
cmc
dec
cmp
fidivl
aad
push
jns
jne
or
in
push
int
dec
inc
sub
sbb
fisubs
and
in
or
cmpsb
scas
xor
or
sbb
xorl
mov
outsl
and
mov
out
xor
push
push
mov
pusha
inc
pop
ja
sub
inc
add
js
in
sbb
pushf
or
fldenv
cs
pop
pusha
xchg
adc
xchg
sub
fwait
cmp
test
lret
cmc
cmp
subb
cli
xor
shr
lahf
sbb
mov
mov
lods
pop
jnp
sar
inc
ret
iret
cmp
xchg
fstpl
repz
pop
jmp
bound
repz
fcoms
mov
mov
push
sbb
data16
loope
cs
cwtl
xchg
pop
orl
xor
fsubl
dec
lock
xchg
inc
test
push
mov
int3
lcall
xor
aam
insb
cmp
rorb
adc
into
pusha
jp
pop
xor
sbb
xchg
lret
lea
lret
and
jle
cmp
sarl
add
scas
cmp
sbb
jo
lock
stc
add
lahf
pop
and
dec
inc
xchg
dec
cmp
out
lods
and
add
arpl
fmuls
mov
cld
sub
push
adc
repz
nop
and
adcb
xor
add
cltd
mov
imul
gs
cmp
add
rcr
mov
rep
scas
addr16
or
push
cmp
jle
adc
sbb
mov
test
pop
push
xchg
sarb
fldt
fcomi
xchg
out
out
js
dec
out
repnz
stos
sbb
mov
incl
xchg
pop
leave
aam
out
insb
ret
jno
add
stos
sub
jl
cli
hlt
shl
aam
sbb
adc
xchg
xchg
inc
inc
lcall
insb
xchg
adc
inc
jl
jge
loope
lahf
pop
xchg
inc
aad
fs
jmp
popa
xchg
test
jae
ja
mov
mov
inc
insl
and
shll
shlb
test
ret
outsl
fildll
push
xchg
pop
cmp
xchg
add
cs
dec
jo
pushf
xchg
cmp
pushaw
mov
out
dec
out
dec
lahf
sbb
rcll
std
sarl
js
insb
cs
adc
lcall
sbb
cli
mov
jg
xchg
insl
cld
fnstsw
mov
fsubs
sbb
xchg
push
mov
iret
add
xchg
lock
xor
sub
add
sub
ret
sbb
xor
push
loope
xor
or
sbb
cmp
loopne
cs
and
mov
pop
adc
lret
dec
inc
and
push
andb
xor
xchg
ds
pop
mov
repnz
in
mov
and
gs
daa
sahf
inc
push
pop
inc
dec
cmp
or
iret
inc
xor
loopne
mov
and
mov
xor
popa
mov
test
ret
lea
pop
add
dec
insb
and
mov
adc
mov
mov
add
insl
jae
xor
fldt
les
jmp
std
insl
out
ret
inc
mov
mov
cwtl
aaa
mov
pop
xchg
cmp
cltd
orb
sbb
ds
bound
xor
and
mov
inc
addl
adc
outsl
mov
or
pop
std
cmpsl
fiaddl
sbb
push
fs
add
pop
mov
mov
jno
push
xchg
rcrb
xchg
xchg
lret
mov
pop
jno
cmp
inc
cltd
push
jmp
pop
cli
jno
sub
and
push
mov
mov
loop
pop
mov
pushf
mov
sbb
or
xor
rorl
pop
loop
clc
inc
jae
insl
xchg
cmp
int3
push
push
psubb
xchg
enter
push
jnp
enter
mov
dec
test
lret
dec
sub
ret
mov
lds
fsts
addr16
sbb
cmp
or
xor
inc
mov
cmp
sub
and
push
sub
cld
dec
div
inc
pop
aas
insb
xlat
insb
or
js
adc
mov
cmc
les
add
xchg
aas
inc
inc
fwait
je
pop
mov
pop
aaa
shl
clc
into
jbe
pop
ss
sahf
addr16
xor
fsts
cli
sarl
fdivl
rclb
test
es
xchg
mov
adc
jg
adc
or
sub
adc
jno
loop
mov
out
fs
inc
lods
pop
cs
push
sub
pop
inc
sub
dec
ss
lods
xchg
push
inc
fs
dec
sub
mov
cmpb
fwait
fwait
xchg
popa
cmp
pop
xlat
popa
push
pop
addr16
push
shr
int3
and
loopne
mov
cmpl
repnz
test
sbb
stc
dec
add
out
in
xor
push
leave
push
lret
cmp
pop
mov
xchg
mov
imul
adcl
dec
jnp
inc
outsl
ret
mov
xor
xor
sahf
xchg
frstor
mov
push
inc
fisubs
andb
pop
cmc
push
xor
lods
pop
sbb
iret
movsl
or
retw
fsubrl
scas
pop
sub
movsl
out
int
jo
mov
mov
mov
cmp
ret
pop
jbe
mov
cmc
push
inc
lcall
sub
ja
xlat
inc
cmpsb
sarb
adc
data16
push
std
fcoms
push
push
push
adc
pushf
mov
das
inc
sbbb
push
in
mov
inc
fdivs
pop
movsb
or
outsb
add
je
sti
mov
push
imul
repz
enter
inc
loope
xor
fwait
addl
cmpsl
sti
aaa
add
popf
ss
xor
push
rcrl
xor
loope
out
mov
xchg
push
imul
lock
or
popa
mov
aad
test
sbb
mov
mov
dec
aad
int
ljmp
cmp
mov
cmp
add
xor
mov
sub
rcl
aam
in
pop
xor
inc
dec
jne
dec
xor
push
dec
orb
or
add
push
jle
sub
lcall
addr16
add
or
nop
adc
cwtl
push
iret
fmull
cmpsl
test
rcl
enter
movsl
pop
into
in
add
pop
rcll
dec
push
mov
aad
dec
lods
les
jns
ret
dec
mov
mov
int3
imul
xor
in
test
xlat
sub
xchg
jnp
negb
sub
cmc
ss
sub
imul
xchg
popf
add
sub
sbb
movsl
shll
ds
dec
mov
xorb
clc
and
adc
mov
mov
daa
lret
pop
nop
repz
addb
ds
jp
iret
and
sbb
sahf
pop
cld
jnp
and
pop
mov
xor
js
scas
push
mov
iret
inc
mov
ss
std
add
addb
cmp
pusha
out
outsb
imul
push
stos
sub
lcall
cmp
sub
scas
pop
jg
mov
ror
int3
sub
and
scas
icebp
ds
mov
jo
das
cmp
mov
cld
xchg
fisttpll
cmpl
inc
adc
push
into
dec
add
leave
es
xor
sub
sub
xchg
xor
push
push
xchg
jne
imul
cmp
adc
decb
sbb
icebp
dec
shll
in
jg
dec
insl
xchg
fsubs
les
in
mov
fs
fnstsw
push
lods
xor
lret
hlt
dec
jmp
pop
mov
xchg
inc
cmpsb
sahf
mov
or
push
and
inc
cltd
movsl
xchg
adc
sbb
out
dec
lods
push
sbb
inc
out
mov
jg
gs
jg
dec
int3
xchg
mov
or
out
xchg
sbb
push
cmpsb
shrl
or
jb
and
push
pop
leave
test
in
cmp
fidivrs
out
mov
lea
mov
mov
adc
inc
xchg
mov
add
test
int3
pop
inc
and
lock
mov
add
js
repz
xor
add
fcmovb
ret
xor
lock
jne
xchg
fdivrl
sbb
daa
out
arpl
mov
in
pop
bound
lcall
pushf
fs
cmpsb
int
add
sbb
subl
pop
mov
xor
aas
test
pop
bound
lds
sbb
mov
jae
jbe
rcrb
push
pop
sbb
cmp
in
jo
int3
stos
jno
into
xchg
cmp
sub
aad
push
test
je
lret
data16
mov
sbb
fs
es
scas
cmp
in
aas
or
jns
jle
adc
xor
mov
xchg
xor
fsubrp
iret
ljmp
jb
test
mov
movsb
add
pusha
pop
pop
or
xchg
scas
adc
sub
loop
mov
sbb
out
push
scas
pop
stc
jbe
inc
sahf
into
fisubs
mov
push
inc
mov
xlat
addr16
lret
or
out
sti
pop
add
push
add
leave
ret
xchg
insb
std
popf
mulb
cmp
stos
fadds
lods
add
sbb
pop
fldenv
stos
out
or
movb
push
dec
mov
xchg
fidivrs
call
popf
ret
xorb
lods
pushf
cmp
and
jl
imul
sub
ret
mov
mov
in
lahf
mov
hlt
pop
mov
shl
divl
dec
inc
push
cld
sub
clc
popf
pushf
xchg
mov
cmp
pop
lcall
aas
xorl
out
xor
mov
mov
adc
loopne
enter
pop
aad
pusha
xor
loope
add
jmp
jno
mov
outsb
mov
scas
sbb
jp
inc
dec
je
push
iret
popa
or
xchg
mov
and
mov
ficompl
mov
mov
sbb
addr16
outsl
jb
test
mov
jl
jge
mov
sbb
push
pop
push
jne
les
adc
adc
sbb
mov
call
xor
push
mov
xchg
cmpb
mov
sahf
enter
les
and
push
lcall
add
mov
mov
push
incb
mov
pop
and
xlat
mov
and
push
roll
cmp
fistpll
and
xchg
inc
sbb
lret
cwtl
aaa
pop
mov
sbb
shll
mov
adc
lods
pop
mov
movsb
in
ficoms
sbb
or
cltd
aas
ret
mov
stc
cmpl
xchg
fs
adc
cmp
insb
int3
add
loope
add
mov
movsl
or
scas
push
sbb
int
imulb
fstpl
cmpsl
jmp
stos
repnz
pop
ret
hlt
push
cmp
pop
cmp
or
pop
fidivl
mov
mov
lret
mov
or
cmpsl
xchg
inc
push
mov
sub
lds
arpl
into
push
pop
cmp
inc
gs
sub
inc
add
jb
movsl
fldl
dec
mov
ror
jno
sub
loop
es
sar
ftst
sbb
loope
popl
inc
and
shlb
loop
daa
test
aaa
dec
push
arpl
xor
cmpsb
int3
rorl
pop
fimull
adc
jb
dec
test
xor
test
mov
lods
push
rorb
ja
xchg
popf
xchg
stos
flds
mov
popf
jae
and
dec
mov
bound
adc
bnd
mov
out
sbb
push
fdivr
jo
mov
rorl
lods
adcl
cmp
and
dec
xor
pop
push
ljmp
push
imul
dec
xadd
fucomip
push
rorb
bnd
mov
stc
dec
inc
aas
gs
in
sub
mov
jb
cmp
dec
xchg
ret
out
aas
iret
in
ja
test
fidivrs
fidivl
jno
fstl
aaa
pop
mov
cmp
xchg
and
popa
pop
idivb
cmp
lret
dec
popf
jmp
neg
xchg
clc
mov
add
inc
xor
lret
stos
icebp
pop
pusha
jg
cwtl
or
and
cmpsl
cli
sub
dec
rclb
js
decl
xchg
fistl
cmpsl
and
inc
bnd
sub
nop
dec
movsl
test
ljmp
inc
adc
push
xchg
xor
and
jno
lcall
addr16
sub
adc
adc
das
out
shll
dec
push
ljmp
loope
mov
daa
ret
adc
push
nop
mov
mov
mov
js
mov
xchg
int3
cs
xchg
cmpsl
nop
in
pop
lret
xor
and
pop
fiaddl
mov
outsb
jge
scas
test
pop
out
push
jne
sub
insb
or
movsl
jg
inc
mov
cs
subl
shrb
sbbb
and
icebp
or
imul
xor
ret
mov
loopne
cld
icebp
cmc
push
ljmp
pop
in
adc
cwtl
test
fndisi(8087
xor
cltd
sub
xor
push
sub
cmp
nop
ss
dec
imulb
push
mov
or
aaa
mov
arpl
rorl
in
ret
add
out
xchg
outsl
fwait
and
aam
push
bound
or
outsb
jmp
or
inc
lods
fcmovnbe
or
cmp
in
push
insb
push
call
notl
xchg
mov
inc
add
push
testl
or
sbbl
mov
jle
fdivrl
pop
int
push
cltd
push
idiv
cld
adc
testl
xor
or
call
inc
or
lock
lea
aas
fcoml
out
repz
mov
add
lea
pop
inc
push
movsl
aad
mov
repz
ss
out
or
or
ljmp
add
jbe
mov
add
xchg
sbb
js
sbb
pop
push
mov
lret
ljmp
add
sahf
bsf
jge
cmp
or
xor
lret
insl
icebp
stos
stos
push
lea
ror
sub
popa
ljmp
dec
inc
push
fwait
xor
adc
shlb
repnz
testl
inc
into
shrl
dec
or
ja
adc
jecxz
push
loopne
repnz
inc
stos
sbb
jno
insb
xchg
lahf
faddl
or
adc
call
adc
lret
les
xor
add
stc
outsb
fildl
push
push
or
rcrb
push
push
sbbl
mov
pop
ficompl
cwtl
daa
mov
fidivrl
fisubrs
lret
push
lock
in
js
adc
outsb
xchg
into
mov
mov
out
insb
push
in
add
sbbb
nop
sarb
icebp
cs
adc
inc
adc
pusha
or
cmpb
jns
lods
cmp
fiaddl
and
test
xchg
jo
call
lret
stc
fisubs
data16
stc
cs
data16
repz
push
sbb
and
pop
fstpt
sbb
ljmp
scas
mov
test
xor
pop
mov
push
mov
and
cmp
shll
xlat
cmp
gs
jns
notb
push
incb
add
loopne
or
pushf
popa
js
out
xlat
dec
dec
xor
into
jecxz
push
pop
insb
in
mov
imul
cmp
sbb
leave
fs
ficomps
mov
popa
pop
in
outsb
cmp
inc
adc
rcr
adc
adc
mov
mov
and
sbb
add
mov
bound
jge
cmp
lret
addb
subl
pop
add
mov
stos
in
adc
jbe
loop
pop
sub
mov
out
arpl
iret
cmovno
push
notb
stos
and
jmp
jg
xchg
jl
out
mov
add
jne
shl
dec
fcomps
ja
cmp
faddl
stos
xor
fistpll
mov
cbtw
or
jae
cli
cmp
iret
cmpl
jge
mov
insl
push
pop
mov
gs
inc
add
test
push
dec
stos
xor
mov
imul
int3
push
nop
mov
int
inc
or
in
insl
mov
fadd
push
sub
sub
ja
adc
mov
outsb
jb
shll
call
nop
cmc
sbb
es
push
aam
xchg
dec
mov
pop
dec
inc
push
xor
push
std
add
mov
dec
pusha
or
cmp
nop
push
dec
sub
dec
nop
push
lods
xchg
or
nop
cltd
add
int
adc
inc
iret
or
ret
jl
jb
rolb
xchg
ds
lahf
das
bound
cmpl
push
push
or
mov
into
adc
arpl
sbb
lock
adc
int3
and
or
xchg
dec
cmpsl
mov
bound
adc
mov
test
gs
orps
shrl
jg
aas
in
scas
inc
or
adc
push
pusha
popf
cmpsb
shrl
jl
stc
sub
mov
testb
push
ficoms
dec
ljmp
xchg
mov
cwtl
lret
inc
fidivl
ds
mov
xor
cmp
ds
stos
iret
dec
cmpsb
lcall
and
push
inc
out
dec
test
shrb
sub
mov
sub
les
jg
inc
les
sub
push
add
mov
push
cmp
sub
cmpsb
xchg
dec
das
das
and
dec
in
mov
mov
clc
cmp
xchg
mov
movsb
xlat
iret
adc
add
mov
dec
aas
mov
mov
test
mov
cmp
mov
mov
fsubrl
ss
arpl
mov
stos
mov
jp
dec
pop
mov
test
jmp
sbb
push
adc
jp
xchg
in
stos
dec
sbb
add
fsubp
outsb
xor
loope
sub
push
cmp
inc
push
ffree
jp
ret
in
cmp
dec
pop
pop
outsl
testb
add
xor
push
mov
mov
cmp
mov
jne
cmp
gs
lds
lcall
paddusb
ss
xchg
test
repnz
cmp
popa
mov
dec
cmc
jl
hlt
or
imul
add
xor
sahf
cwtl
xchg
sub
insb
imul
xchg
push
push
push
mov
pushf
lahf
fisubrs
xchg
adc
mov
fs
mov
mov
mov
push
test
mov
push
add
aam
adc
sti
mov
sub
shlb
push
enter
mov
push
pusha
out
sub
or
mov
and
lds
clc
mov
mov
cwtl
sbb
lods
sbb
cli
sbb
shlb
iret
push
lods
push
xor
repz
mov
lock
mov
in
jl
roll
pop
jp
add
mov
or
dec
jne
leave
jg
adc
popa
jns
xlat
lcall
fisubrl
mov
or
inc
dec
das
push
icebp
adc
adc
lea
adc
test
aaa
push
out
sbb
mov
pop
ss
test
ret
adc
int3
xchg
mov
and
rclb
insl
adc
jno
iret
add
cmp
jge,pn
in
lock
sti
xchg
pushl
enter
fisubl
fadds
movb
fcoms
push
popf
jge
adc
xchg
les
mov
or
in
push
inc
add
std
jnp
or
jae
lahf
mov
sub
test
jae
out
jge
call
dec
dec
ror
cmpsb
dec
pop
ljmp
jae
jne
mov
sbb
xchg
mov
dec
jp
mov
addr16
shll
rcrb
push
or
mov
test
jp
pusha
sbbb
push
xor
test
inc
dec
mov
lcall
loop
scas
rorl
cli
add
pop
mov
xchg
and
push
dec
dec
cmove
roll
xchg
test
xlat
xchg
pop
aas
mov
push
cmpsb
and
cmpsl
insb
stos
sub
jbe
in
jne
adc
test
xchg
idivb
out
jp
jb
mov
or
or
pop
mov
shrb
loop
cwtl
adc
add
fdivrl
icebp
push
cmp
popf
xor
and
jecxz
cmpsb
add
mov
sbb
dec
and
aaa
popa
xchg
lahf
inc
mov
dec
xor
stos
pop
pushf
mov
and
fstpl
sbb
lahf
mov
and
jmp
in
cli
lret
jbe
mov
rcrb
mov
and
lods
pop
jge
or
inc
mov
inc
inc
shr
sub
xchg
sbb
fnsaves
mov
rorl
xchg
mov
adc
dec
sub
pmaxub
mov
mov
mov
outsb
mov
mov
add
jle
sbb
iret
xchg
inc
pop
ja
in
lea
fwait
repnz
pop
and
xchg
mov
fadds
cmp
xor
lds
fcmove
lea
xlat
test
aam
mov
sbb
push
cs
out
rcl
sbb
adc
iret
ret
sub
pop
add
mov
in
push
fldenv
sbb
loop
loope
jo
xor
dec
out
lret
add
xchg
add
jne
loope
xchg
jbe
sti
mov
mov
ja
push
jo
xor
decb
fcomip
testb
mov
add
pop
xchg
sbb
and
or
or
mov
pop
std
xor
pushf
cli
and
out
and
adcl
pop
mov
aas
mov
data16
je
and
cs
ficomps
or
or
loope
fdivs
add
ja
xchg
or
andb
fisttpll
addb
push
test
leave
js
pop
push
dec
and
and
je
xchg
mov
cmc
sub
jbe
pop
ja
xlat
cltd
xlat
sub
ljmp
mov
and
in
jle
mov
mov
inc
fs
cmpsb
loop
out
dec
xchg
sbb
jbe
int3
test
mov
pop
mov
dec
inc
pop
push
fcoml
ss
and
pushf
pushf
lahf
ret
int3
dec
outsb
xor
sub
es
outsb
jmp
sbb
pop
mov
shl
sub
add
xchg
jle
loop
xor
gs
loopne
push
popa
jns
loop
mov
ret
add
call
push
inc
int3
addr16
iret
mov
addr16
mov
pusha
das
dec
loop
xor
mov
inc
sub
adc
addr16
adc
cmpsb
ds
inc
xchg
mov
push
sahf
pop
jle
rclb
cli
jb
and
std
int
push
pop
nop
inc
shrb
adc
jmp
jae
ds
mov
js
arpl
jmp
jb
negl
add
loop
jecxz
imul
sahf
pop
jp
mov
into
sbb
pop
sbb
lods
stc
aas
repnz
cmp
jo
inc
sub
pop
test
mov
add
into
mov
jae
push
iret
int
push
xchg
mov
pop
jne
insb
fisttps
push
mov
pop
cld
push
mov
dec
aam
repz
mov
jle
sbb
dec
sub
hlt
sbb
or
xchg
dec
adc
xchg
sub
fadds
adc
sbb
in
xchg
and
sbb
fadds
js
fld1
inc
iret
push
lock
xor
add
movsb
sbb
shrb
loop
pushf
sub
scas
mov
fstl
shr
sub
push
enter
loop
fs
insb
lret
hlt
sub
sbb
enter
cmpsb
adc
int
pop
jo
int3
lahf
inc
orb
shl
mov
dec
ljmp
insl
mov
pop
cmc
adc
add
jecxz
loopne
std
and
bound
push
inc
xchg
adc
push
cltd
or
mov
es
dec
in
fwait
in
add
sub
sub
jnp
mov
mov
test
orb
jmp
shr
or
adc
aam
cmp
jae
sub
mov
ljmp
sbb
scas
js
jns
je
in
insl
jl
add
negl
jmp
adc
mov
push
ds
jl
push
insb
cmc
lret
out
sub
push
xchg
movsb
mov
outsb
loopne
fstp
fcoms
in
lea
rorb
xor
xor
testl
lcall
inc
and
dec
lods
jg
push
out
jmp
hlt
addl
xor
sub
loope
or
scas
std
and
jns
mov
xchg
sub
aas
pop
notl
mov
dec
test
and
outsb
inc
mov
push
sbb
mov
push
xchg
imul
inc
fs
sbbl
ret
ljmp
sub
dec
mulb
cmp
fldl
ret
fs
push
xchg
push
and
jle,pt
sbb
orl
hlt
mov
cmpsb
pop
jge
push
ss
pushf
negb
ret
jg
push
sbb
inc
rolb
fldl
push
mov
fs
add
and
into
fimull
xchg
int3
imul
pushf
in
out
jge
mov
sbb
dec
mov
cmpsb
dec
cs
or
dec
dec
test
sbb
les
xor
inc
or
orl
jecxz
cs
push
mov
dec
imul
pop
inc
pop
leave
jg
mov
dec
mov
pop
stc
orb
or
aas
dec
and
out
or
sub
add
stc
sti
nop
dec
sbb
mov
pop
ss
adc
in
mov
addr16
shl
jne
and
jg
or
mov
aad
mov
jp
or
pusha
mov
repnz
sbb
mov
xchg
pop
mov
push
jge
pop
sbb
test
popa
pop
lods
inc
mov
jp
lods
mov
jge
sbb
cmp
lret
xchg
in
push
mov
add
dec
popf
ljmp
inc
test
mov
stos
and
xchg
in
lods
mov
psraw
and
dec
mov
mov
movsb
mov
or
in
jae
mov
lret
lods
dec
dec
inc
loop
imul
and
push
sub
pop
jl
push
add
xchg
enter
sahf
push
fcoms
mov
mov
insb
inc
mov
jo
arpl
jecxz
lahf
imul
push
inc
add
push
jl
clc
and
dec
mov
repz
dec
int
sub
sbb
jne
loop
jnp
mov
mov
push
inc
or
push
xchg
fnstcw
lods
mov
pop
stc
pop
sarb
in
or
mov
sbb
lods
push
fcoml
sti
sub
or
cmp
or
cmp
pop
mov
je
mov
xor
push
gs
insl
fadd
jne
push
add
pop
jae
sub
jae
inc
imul
sub
xor
jno
testb
adc
pop
shrl
test
adcl
and
rcrl
lods
sub
out
xchg
push
lcall
loopne
add
cwtl
jae
dec
push
inc
idiv
pop
push
dec
inc
icebp
add
sub
pop
scas
push
jle
mov
xor
mov
lret
add
mov
fcmovu
xchg
lret
je
dec
neg
mov
pushf
fwait
sbb
pop
jp
enter
mov
push
add
das
adc
mov
add
sub
adcb
jp
xor
addb
fnstcw
jno
jle
insl
test
ficoms
mov
and
adc
xchg
mov
xchg
clc
cmp
daa
imul
andl
mov
fsubp
add
icebp
and
pusha
es
shll
out
filds
pop
ret
jg
xchg
imul
cmpl
leave
inc
out
pop
xor
aas
or
mov
mov
ret
jns
jb
push
outsb
add
arpl
add
sti
add
test
cmpb
sub
scas
dec
das
xchg
mov
hlt
ret
mov
jp
or
adc
sahf
mov
adc
mov
jns,pn
dec
movsl
sbb
cmp
nop
rcrb
jnp
inc
adc
push
lods
mov
push
dec
shr
and
xor
pop
insb
lods
cmp
ret
rorb
out
lahf
jl
push
into
adc
int
ss
mov
mov
jb
mov
add
pop
adc
insb
jne
nop
jae
and
cmp
and
inc
mov
dec
xchg
inc
leave
fildl
xor
cmp
jl
mov
adc
xor
inc
push
add
or
mov
ja
test
lds
lret
int
std
dec
aad
repz
sub
es
inc
inc
pusha
add
or
cli
mov
in
stos
dec
cmp
jb
bound
es
mov
cmc
pop
push
cmp
aas
lods
in
pop
pop
pop
dec
ljmp
mov
aas
dec
loope
adc
push
je
ljmp
xchg
mov
sub
enter
ljmp
pop
jno
sub
stos
mov
or
pop
sub
and
stc
mov
mov
aaa
cmp
pushf
sub
mov
xchg
mov
sub
or
xor
or
mov
adc
xor
es
or
rorb
scas
sbb
outsb
clc
sahf
rorl
adc
pop
xchg
aad
inc
sqrtps
lahf
dec
xor
pop
mov
or
imul
test
push
in
hlt
xchg
jns
jae
add
loope
pop
repnz
in
mov
add
shll
add
fistl
rol
cwtl
pop
in
fdivs
add
pop
lea
popa
pop
and
loopne
aad
jo
fadds
mov
mov
mov
rolb
xchg
and
ret
mov
jge
ja
sahf
int3
xor
adc
xchg
mov
das
sbb
das
jns
xchg
sub
sub
decl
sbb
sub
pop
out
fiadds
test
mov
pop
mov
or
xor
jmp
adc
ds
lahf
lret
idivl
fxch
fwait
adc
add
inc
inc
pop
into
gs
pop
inc
out
xchg
push
mov
nop
cld
out
imull
fstpt
and
bnd
rcrl
dec
jg
cmc
pop
addr16
out
jae
mov
imul
xchg
in
push
jecxz
xchg
popa
xchg
loop
pop
sbb
xor
idivl
test
ret
dec
push
into
enterw
out
jb
mov
popf
lcall
test
sti
xchg
mov
mov
jge
mov
push
shlb
mov
jle,pt
es
das
ds
jne
in
pop
mov
sub
mov
xchg
and
imul
xor
add
test
add
int
in
or
lds
cmpsb
adc
mov
lods
xchg
scas
xor
ss
cld
popa
aaa
push
xor
sub
mov
movsb
shrb
fdivl
pop
mov
sbb
addl
jl
mov
in
int
cmp
mov
pop
call
lret
inc
and
mov
arpl
inc
sub
cmpsb
jmp
xchg
mov
cwtl
cmp
jbe
cmp
int3
fists
in
rolb
adc
push
and
out
inc
xchg
push
cmp
pop
xchg
leave
loope
mov
mov
mov
add
ja
loope
mov
cwtl
aad
adc
cs
dec
cmp
cltd
sbb
mov
lods
mov
loope
jno
in
movsl
iret
push
jge
ds
dec
mov
sbb
repz
and
test
clc
mov
loope
and
mov
ror
push
ret
lahf
out
popa
jbe
add
xchg
dec
call
lock
inc
in
es
rcrl
pop
cltd
in
xchg
std
sbb
cwtl
cmp
mov
pop
xchg
cli
cmp
shlb
out
push
cmp
ret
imul
sbb
outsb
notl
sub
stc
jo
dec
pop
aaa
mov
add
int3
sbb
clc
fists
mov
test
xchg
mov
stos
mov
mov
mov
test
js
mov
or
fdivrs
cmp
mov
addr16
sub
jmp
jo
xor
inc
push
inc
sbb
mov
sbb
xor
rclb
dec
cmp
dec
popa
cmpsl
jge,pt
scas
mov
mov
int3
lock
or
add
and
push
repnz
jo
or
push
in
mov
dec
ss
out
push
cli
aaa
push
insw
scas
lea
xor
loop
bound
js
shll
push
adc
arpl
fsubs
sbb
and
cld
cs
push
jp
or
add
inc
aaa
ja
pushf
mov
and
push
sbb
xor
es
fsubs
movsl
add
mov
aad
mov
adc
scas
pop
mov
jle
in
int
lcall
xchg
clc
psadbw
ljmp
cli
adc
mov
fs
and
jns
outsl
inc
imul
cmp
adc
lods
jb
sahf
enter
out
clc
push
cmp
clc
dec
or
mov
mov
mov
pop
pusha
loope
ret
imul
add
cld
mov
ja
ret
cld
push
fisttpl
inc
jns
xor
or
mov
ja
lcall
push
jp
dec
outsb
xor
ja
cmp
push
sub
dec
jno
js
jo
data16
loope
mov
popa
clc
sbb
mov
fcmovnb
lea
pop
incl
mov
scas
cmpsb
out
out
mov
imul
mov
push
out
xlat
daa
xor
push
mov
cmp
push
dec
and
adc
dec
fldenv
mov
and
mov
jmp
ficoml
in
dec
cmc
je
pushf
cli
push
jecxz
xor
mov
outsl
mov
ds
fst
sbb
aaa
and
add
int3
xor
sahf
dec
bound
sub
leave
cld
ret
addl
out
mov
popa
cmp
push
pop
lret
fs
sub
inc
xchg
ds
pop
sbb
jg
addb
clc
mov
ss
insl
in
mov
das
or
leave
and
scas
sbb
jno
lcall
or
ret
dec
mov
incb
out
cmp
scas
ljmp
fdivl
test
push
int
mov
cmp
ljmp
icebp
mov
fsubr
loopne
inc
sub
pop
hlt
ficoml
jmp
daa
sahf
mov
gs
adc
xchg
and
aas
movsb
mov
fs
add
dec
lret
or
stos
push
out
ds
outsb
pushf
xchg
pushf
daa
xchg
icebp
daa
mov
pop
fdivrp
adcb
mov
sti
sbb
sbb
scas
ret
pop
jo
btc
and
pop
movsb
fnstsw
out
fcomps
adc
xor
cmc
or
lea
pop
mov
int3
inc
mov
adc
push
xor
gs
push
jne
int3
pop
stos
test
arpl
je
push
cmp
cli
iret
stos
scas
fwait
icebp
rcrb
js
inc
mov
scas
cwtl
and
testl
jl
das
sbb
mov
lret
push
cs
cwtl
sub
sub
pop
loopne
mov
in
mov
pop
sbb
test
into
dec
into
jp
imul
xor
sub
add
jl
test
lods
sarl
pop
dec
jg
lret
pop
dec
out
inc
in
stc
cmc
jmp
xchg
ficoml
mov
rorb
add
cmp
gs
or
daa
ret
aad
cmp
xchg
jp
jns
jp
aad
mov
add
cltd
sbbb
out
push
xchg
sbb
cli
and
mov
mov
xchg
pop
cwtl
jl
xor
movsb
icebp
incl
cmp
mov
aas
jl
jne
fwait
push
shll
mov
out
sahf
jae
or
mov
outsb
stos
mov
pushf
cwtl
xchg
subl
icebp
popf
mov
and
lds
mov
pop
xor
add
sahf
cmc
inc
addr16
shrb
popf
imul
mov
subb
and
lock
into
pop
lret
nop
iret
jg
aad
dec
sahf
sbb
into
pop
add
ja
dec
fmull
sarb
sbb
nop
daa
mov
rcrb
div
push
negl
add
xchg
lds
add
and
push
vfnmsubss
imul
inc
dec
sub
mov
in
rorb
dec
incl
jnp
jecxz
push
fldt
sbb
mov
jmp
adc
mov
sub
fadds
sub
jp
cmp
dec
orl
add
sbb
jge
aaa
add
push
cmp
adc
clc
int
div
xor
outsl
data16
jg
jbe
pop
andb
and
les
into
push
mov
jo
cwtl
jl
and
cmpsl
mov
inc
into
add
sbb
frstor
popf
stos
divl
sbb
iret
add
in
push
adc
and
mov
mov
icebp
pop
push
icebp
and
xchg
push
jb
and
pusha
or
jle
add
jge
test
mov
clc
and
jb
jle
les
pop
lcall
test
xor
shrb
mov
imull
les
into
push
cwtl
mov
mov
pop
mov
jl
lea
xchg
xlat
mov
mov
jbe
loope
or
ss
mov
mov
sub
hlt
adc
xchg
sbb
sarl
decl
clc
xchg
sbbl
or
mov
daa
add
outsl
and
sbb
movl
cmc
xchg
scas
push
push
les
loopne
and
sub
mov
faddl
jbe
push
clc
repz
aaa
and
xor
sahf
mov
jge
int3
repnz
fldt
jno
repz
mov
out
dec
jmp
ffree
sbbl
lds
jmp
ljmp
push
inc
iret
pop
pop
dec
and
lock
sub
add
cmp
fldt
aad
push
dec
jecxz
int
fs
lock
popa
xchg
mov
push
int
stc
push
pop
jle
incl
repz
cmp
sbb
dec
jmp
xchg
dec
lahf
icebp
adc
test
cmpsb
push
insl
push
sbb
aad
nop
sub
inc
xchg
cmpsl
lahf
je
jbe
jmp
mov
mov
xchg
shrb
out
arpl
stos
jge
cmp
xchg
dec
add
adc
imul
lds
in
repnz
je
repnz
stc
cmp
sbb
pop
adc
sahf
cli
mov
and
out
xor
jne
popf
idivb
scas
es
jecxz
xchg
testb
out
cmpl
xor
lods
cmp
push
popf
mov
int3
mov
lods
pop
cmp
int3
cs
lret
fwait
cs
in
lret
and
inc
push
cmp
in
push
xchg
clc
mul
out
xlat
aas
bound
push
mull
iret
jl
jo
jmp
cwtl
clc
dec
xor
sahf
xor
loope
imul
repnz
dec
mov
push
movsb
xchg
je
cmc
idiv
into
shlb
lret
dec
fidivrl
jp
cltd
sti
loop
mov
xchg
xor
insb
jne
stos
sbb
sub
aas
fs
fidivl
jb
pop
sbb
xchg
mov
cmp
mov
mov
mov
push
movl
cmpl
shrb
cmp
aam
cld
dec
or
clc
movsl
add
test
lcall
add
hlt
pop
mov
repnz
fstpl
mov
dec
mov
xchg
xchg
and
mov
xchg
shll
mov
push
incl
mov
aaa
mov
je
loopne
add
mov
sti
lock
inc
mov
push
inc
jmp
divb
filds
pop
loopne
xchg
cmp
cmp
mov
mov
xor
inc
in
xor
ret
pop
xchg
ss
sub
sub
mov
inc
mov
movsb
in
dec
mov
rorl
push
jne
shrb
dec
jne
sbb
repz
dec
dec
pop
xlat
or
inc
xchg
stos
pop
xchg
fdivs
xorl
js
aad
stos
push
lea
jmp
inc
bound
lret
mov
test
cmc
push
pop
and
ret
ret
mov
mov
pop
stc
mov
jno
mov
sub
sbb
icebp
xor
xor
mov
popf
mov
push
loop
aam
stc
jne
leave
rcr
xchg
add
adc
ficoml
aad
add
push
or
and
loope
jmp
lahf
or
and
out
dec
mov
push
or
inc
inc
push
jg
sbb
inc
lods
jle
daa
adc
ds
repnz
or
and
bnd
xlat
mov
fwait
imul
jo
push
push
outsl
sbb
stc
test
iret
mov
adc
insb
jo
insl
sbb
jmp
rol
mov
loope
mov
mov
cmp
push
in
call
pop
add
and
mov
ret
out
or
das
mov
js
add
mov
ret
mov
in
mov
shl
pusha
xor
stos
dec
aad
push
aas
cmp
std
and
outsl
sbbb
lods
movsb
les
mov
sar
popf
test
rorl
subl
inc
jecxz
mov
lea
mov
fbstp
fisubs
dec
fldenv
into
add
clc
enter
das
inc
inc
and
dec
mov
popf
pop
mulb
int3
adc
cmc
push
or
test
inc
mov
test
outsl
in
dec
scas
mov
add
jecxz
mov
xor
push
out
addr16
push
mov
and
insb
dec
or
jmp
aad
ficomps
test
nop
loope
aad
or
xor
out
mov
popa
xchg
mov
add
pop
fnstenv
jl
fs
add
test
test
scas
loopne,pn
ret
adc
scas
loop
push
pop
jecxz
adc
jno
push
out
int
mov
sub
int
cmp
stos
mov
adc
or
clc
add
test
rcll
add
inc
pop
jns
int
stos
xor
cmp
nop
cld
rorb
aas
cmpl
das
jmp
insb
or
pop
jge
pop
call
dec
xchg
xchg
popf
mov
daa
fs
push
lcall
mov
test
je
sbb
sbb
hlt
fcmovbe
enter
cltd
in
add
mov
sahf
gs
es
pop
add
mov
mov
add
xor
gs
push
adc
lods
xor
and
add
out
add
dec
push
mov
aas
out
cmpsl
mov
pop
fxch
out
dec
aaa
shl
mov
fs
out
cmpsb
lds
and
and
jb
jge
pop
mov
or
cli
push
shlb
pop
icebp
jecxz
inc
add
les
xor
mov
jge
stos
cmp
lea
lods
and
push
fisubrl
mov
pop
inc
std
mov
cwtd
pop
dec
std
and
jno
push
mov
ret
je
jge
mov
dec
out
and
sbbl
and
fiadds
mov
mov
and
insb
repz
pop
xchg
pop
dec
mov
jge
mov
add
add
push
mov
mov
push
arpl
test
cmp
cmpsl
mov
mov
push
mov
pop
aaa
dec
dec
test
pop
push
xchg
inc
adc
daa
cmp
push
sti
sbb
push
dec
add
bound
rorl
icebp
cltd
jno
fs
in
sub
in
xchg
inc
push
adc
jno
jae
and
push
movsb
shr
les
mov
lret
out
adc
iret
imul
pop
xchg
ss
xor
hlt
jle
shrl
insb
sub
adc
outsb
not
cltd
test
aas
jmp
cmc
mov
in
enter
nop
sarl
das
mov
out
fs
cmp
pop
push
pop
movsb
lods
fstl
jg
dec
push
jp
les
scas
outsl
mov
subl
jae
frstor
mov
or
mov
cld
mov
pop
rclb
inc
aaa
je
cmp
push
cmp
popf
fnstsw
insl
and
and
cli
outsl
test
test
xor
in
push
iret
xchg
jle
cmc
xlat
adc
jl
mov
cmp
rcr
int
punpckldq
dec
pop
xchg
mov
mov
cmp
addb
cmp
push
aad
cltd
mov
mov
gs
lret
adc
pushf
out
int3
cmpsl
adc
mov
lds
pop
xor
bound
pop
pop
xchg
inc
and
mov
cmpb
movsl
pop
inc
adc
pop
inc
out
cltd
enter
sub
jae
sub
pop
inc
dec
add
call
or
pusha
popf
jecxz
ret
testl
inc
outsl
ss
cmpsl
mov
cmp
pop
daa
ja
or
adc
xor
mov
jae
pushf
push
sti
jnp
mov
cmp
sub
mov
daa
and
sti
in
inc
dec
add
jns
and
pop
std
xchg
push
adc
xchg
inc
or
add
das
enter
inc
xor
sub
add
insb
hlt
ja
jge
cli
add
leave
xchg
test
mov
xchg
js,pn
xlat
jp
xchg
sub
adc
es
icebp
leave
dec
inc
inc
popf
and
sar
lret
mov
dec
pop
bound
mov
paddusw
mov
push
inc
add
pop
dec
call
jb
stc
out
dec
rcll
das
adc
or
jno
jne
pop
adc
fisttps
jmp
and
cwtl
cmp
mov
jecxz
imul
pop
cli
xor
add
push
lahf
pop
mov
stos
pop
push
and
pop
icebp
rcrb
mov
jp
in
mov
rorb
shl
xlat
or
enter
add
xor
fsubs
std
incb
or
jbe
pop
mov
xor
addr16
in
cmpsl
dec
popa
fadds
mov
loope
scas
inc
cli
mov
bound
cmc
pop
add
add
pop
xor
mov
cmp
adc
ud0
das
push
xchg
add
lds
fdivs
xchg
adc
and
push
jmp
jns
xor
icebp
add
cltd
jmp
sub
out
stos
dec
xchg
adc
int3
inc
xor
dec
sbb
pop
pusha
scas
aas
icebp
dec
mov
mov
lret
and
jbe
push
jg
add
sub
xorps
lret
lahf
sbb
push
sub
int3
ret
inc
add
leave
shl
in
mov
cmp
adc
jae
and
fs
xor
cmp
dec
adc
test
xchg
push
or
lahf
into
cmp
jo
je
shll
fucomip
outsl
outsb
cmp
cs
xor
movsl
mov
jg
out
mov
inc
sub
aaa
mov
sub
jbe
mov
dec
out
jecxz
rcll
cld
mov
adc
jae
pop
ljmp
jl
adc
jo
insl
mov
aad
inc
dec
jp
shl
ret
xlat
xlat
push
testl
es
shrb
insb
cli
pushf
int3
aam
scas
test
ficoml
out
mov
fbld
sbb
dec
rorl
sub
pop
ja
mov
shll
pop
test
mov
loope
out
clc
xchg
sub
mov
test
sti
jp
lods
movsl
add
and
test
fst
cli
psrld
sbb
out
sub
adc
andl
mov
cmc
pushf
cmp
or
test
jmp
mov
or
test
jae
mov
pushf
into
push
daa
fdivrl
sbb
out
lds
std
adc
test
push
xchg
shlb
test
popf
data16
xchg
push
loopne
adc
and
aam
movsl
pop
call
pop
arpl
pop
dec
cltd
push
and
loopne
jl
daa
lahf
into
adc
jo
jno
cmp
lahf
or
sub
mov
inc
loop
outsl
push
inc
push
jmp
push
xchg
jl
addr16
or
loopw
pop
xchg
ja
popa
dec
pop
pusha
xchg
push
repnz
sbb
cmp
ret
mov
dec
loopne
xchg
push
ret
lahf
add
mov
mov
ficompl
cltd
ret
mov
sub
outsb
sbb
arpl
test
xchg
push
adc
daa
jmp
add
inc
or
push
lahf
add
jo
inc
and
rclb
fiadds
inc
inc
and
pusha
mov
or
js
icebp
pop
xchg
and
adc
fisttps
pop
push
movsl
scas
int3
jae
scas
mov
movsl
push
or
mov
push
or
adcl
pop
cmp
test
push
insb
es
jbe
and
dec
add
push
lock
filds
movsb
and
rcl
mov
shlb
pop
xchg
xor
lret
in
cmpsl
ljmp
popa
and
repz
or
sbb
sub
xlat
clc
sbb
das
mov
std
mov
clc
loop
mov
sbb
loop
push
sbb
mov
inc
cmpsb
push
stos
cmp
cmpsl
adc
adc
or
push
mov
sahf
fwait
ret
fs
clc
mov
jns
push
les
or
stc
inc
jb
jbe
movsl
repnz
repnz
pop
cmpsb
sbb
adc
sub
mov
pop
and
push
inc
test
adcb
rclb
push
mov
movsl
fistpl
push
adc
jmp
push
mov
adc
daa
add
xchg
repz
lock
mov
pop
ds
lret
in
test
hlt
xor
mov
mov
icebp
into
xchg
push
cmp
popf
cmc
mov
out
pop
or
dec
adc
pop
lds
popl
test
jle
jl
repnz
and
aam
mov
hlt
xchg
xchg
inc
inc
int3
sbb
out
mov
daa
lea
into
jnp
sbb
lcall
jnp
fcoml
imul
leave
pushf
les
imul
bound
adc
xor
push
pop
xchg
lods
xor
inc
xor
and
jl
push
pushf
pop
and
add
hlt
inc
fdivrl
inc
xor
mov
hlt
mov
in
sbb
rorl
mov
jo
mov
push
xor
fstps
cmc
scas
sub
mov
jecxz
cmpsb
jne
dec
push
and
daa
dec
xor
test
stos
ret
mov
aas
add
adc
mov
ljmp
cltd
jne
inc
sub
cmpsb
out
cmp
adc
mov
add
mov
adc
and
imul
dec
ja
pop
hlt
aaa
hlt
jnp
xor
jb
outsl
push
cmpsb
out
negb
aaa
jp
stos
mov
inc
jecxz
or
inc
adcb
sub
aaa
jne
xchg
mov
fisttpll
xor
xchg
in
dec
inc
les
add
sub
cmp
ja
xchg
inc
xor
loope
and
enter
jmp
lret
pop
mov
dec
lods
adc
pushf
cmc
in
sti
xchg
test
lods
inc
fs
sub
push
lret
pusha
sbb
push
pop
or
sbb
pop
add
lds
subl
lret
test
adc
or
mov
push
lret
mov
dec
jl
and
mov
cltd
inc
jne
sbb
xchg
in
je,pt
push
ret
mov
adc
adc
mov
lahf
jl
gs
daa
pop
cmp
outsb
add
mov
add
inc
out
mov
and
sub
scas
aad
out
jbe
lock
push
loope,pt
fstpt
fbld
lret
inc
cli
js
dec
xchg
je
push
mov
mov
mov
dec
sbb
mov
xchg
adc
or
cli
jg
icebp
sub
call
mov
jbe
adc
pop
xchg
out
jns
push
es
xchg
xchg
sbb
popa
inc
add
in
sti
xchg
mov
xor
mov
and
dec
mov
adc
testb
dec
shll
pop
mov
and
sar
sub
push
ja
test
xor
loop
scas
mov
add
stc
or
jnp
mov
dec
mov
adc
adc
insb
mov
bound
cld
cpuid
pop
xor
mov
xor
xchg
xchg
lcall
sbb
bound
push
xchg
xlat
dec
add
stos
out
loope
sbb
stos
sub
stos
sub
mov
inc
fucom
dec
push
sbb
je
outsb
mov
out
add
xor
outsb
dec
push
daa
sub
out
pop
imul
fldenv
jne
es
hlt
fwait
stos
jge
fwait
adc
notb
outsl
int3
pop
fstps
xchg
adc
cmpsl
sub
cmp
outsl
pop
in
cmp
pop
push
ljmp
out
push
fidivs
roll
lds
adc
hlt
xchg
and
test
add
sbb
push
mov
repnz
scas
hlt
rcll
gs
pmaxub
xchg
sub
out
add
test
sub
popf
pop
mov
dec
cmp
inc
and
mov
or
mov
sbb
loopne
cmpsl
adc
mov
incl
dec
ficoms
scas
addr16
nop
sub
cmp
inc
add
push
rclb
mov
roll
stos
lea
lock
out
cmpl
dec
lret
aas
pop
add
les
xchg
notb
cltd
fwait
pop
mov
push
mov
das
or
mov
imul
outsl
jbe
dec
pop
jecxz
jge
int3
push
xlat
mov
vsubsd
adc
shll
add
iret
out
insl
cmp
lahf
cltd
test
in
and
adc
fnsave
add
cmp
adc
in
adc
movsb
push
shl
cmc
lcall
sbb
or
cltd
fwait
ret
dec
add
mov
sbb
sbb
and
cs
xchg
push
cmp
test
arpl
push
adc
outsb
mov
mov
push
mov
jge
out
hlt
cltd
lea
int
nop
addl
enter
cs
and
and
lahf
cmp
pop
int
and
mov
nop
jbe
fadds
cltd
jecxz
jmp
lahf
shrl
mov
xor
faddp
sahf
aad
daa
in
adc
and
shl
xlat
mov
sub
jnp
daa
sti
cmp
mov
jbe
or
jl
test
xchg
mov
lea
sbb
lea
cmp
push
mov
ljmp
sbb
xlat
or
loopne
or
mov
arpl
ret
loope
lahf
jae
or
pop
and
sbb
pop
inc
movsb
jecxz
xchg
jmp
push
mov
inc
in
lock
mov
sbb
push
sub
rcll
inc
scas
fstpl
in
in
adc
adc
ret
mov
ss
outsb
iret
inc
mov
imul
in
test
and
test
cmc
push
dec
loope
push
out
jmp
dec
cmp
dec
push
dec
add
stos
add
or
pop
in
arpl
ror
fs
and
shlb
sbb
cmpsb
cli
mov
jb
pop
scas
xor
cld
adc
mov
int3
dec
fs
roll
jb
mov
jo
pop
faddl
cmp
xchg
sar
sub
in
sub
xchg
cmp
lcall
sub
push
pop
fsubrs
dec
in
std
ja
jnp
fmuls
scas
adc
push
fildll
lds
pop
push
call
nop
mov
or
stc
cmp
adc
iret
dec
sbb
aaa
imul
cmpb
jo
cli
push
jecxz
sub
pop
sahf
inc
daa
lods
test
inc
mov
out
xor
cmp
and
loop
outsb
lods
hlt
sbb
or
sub
sbb
adc
in
jge
xor
pop
push
jl
ja
ja
or
push
lods
addl
jl
cmp
push
or
pop
fsubl
leave
push
int3
dec
lcall
test
add
jge,pt
ret
lds
mov
ss
jg
inc
test
push
jo,pn
xor
dec
repnz
dec
xchg
jle
sub
sti
lock
bound
loopne
jg
ret
jns
movsl
out
cmc
pop
add
cmc
dec
out
or
add
repz
test
cmpsb
or
jns
testb
pop
pop
std
stos
mov
push
xor
aas
jg
push
lods
inc
push
sub
fcoms
pop
mov
inc
xchg
inc
mov
das
and
and
inc
cmp
adc
xchg
lret
bnd
or
mov
and
repnz
lods
lods
xchg
jle
inc
fldcw
gs
jns
pop
pop
insl
fbstp
movsb
xchg
mov
lret
mov
sub
mov
popf
ja
adc
add
jl
nop
push
repnz
mov
negl
nop
test
les
add
mov
jg
push
arpl
mov
lods
dec
push
mov
in
sahf
popf
jo
fcmovnu
repnz
daa
push
test
int3
pop
xchg
mov
repz
sub
in
cmpsl
cli
je
cld
xchg
pop
sbb
es
addr16
ljmp
xor
mov
inc
and
js
mov
std
in
inc
fsubs
test
sbb
pop
dec
aas
dec
add
dec
decb
sbb
notl
js
xor
mov
lret
xor
add
movsb
lock
dec
in
dec
mov
xor
ret
mov
sub
cmc
mov
and
adc
stos
aad
sub
add
xchg
fcompl
rolb
mov
push
in
mov
fistpl
push
add
aam
test
dec
test
and
lret
xchg
gs
loopne
ficomps
jbe
repz
scas
sbb
lahf
add
mov
iret
decl
jne
mov
cmp
lret
push
add
sub
cmpsl
out
dec
and
repz
xchg
push
jge
pop
negl
or
stos
sbb
jp
stos
mov
mov
mull
mov
outsb
sbb
adc
add
roll
hlt
scas
fstpt
push
sub
pop
jnp
xor
jo
dec
cmp
and
jl
cmc
and
xorl
pop
xorb
push
xchg
inc
jno
pop
pop
filds
aaa
cmp
popa
rol
or
and
and
gs
push
movsl
les
jecxz
mov
jo
mov
xor
orl
insl
push
dec
mov
aam
dec
fprem
test
dec
test
xchg
mov
adc
lea
cltd
adc
test
rcll
mov
imul
cmc
sbbl
data16
pusha
dec
icebp
pop
mov
jmp
cld
popa
mov
pop
or
mov
mov
and
scas
ficoml
mov
add
inc
push
lcall
push
jp
sahf
mov
repz
push
out
ror
mov
jo
dec
jns
mov
or
lea
lock
xor
or
sub
repnz
inc
push
shr
lcall
lods
scas
rclb
jl
leave
push
xchg
negb
cltd
jae
mov
push
repz
push
and
mov
ja
sub
xchg
mov
and
mov
test
jnp
xor
xor
push
shrl
pop
add
movsbl
cmp
cvtps2pd
inc
add
stos
jae
xor
mov
pop
repz
leave
inc
jecxz
xlat
pop
mov
jbe
sub
inc
mov
repz
add
adc
int
outsl
std
xchg
movsl
rol
sub
in
mov
jns
fisubs
xchg
loopne
shl
jae
sbb
mov
xor
out
wbinvd
in
fmuls
stc
adc
stos
sahf
push
test
push
out
fiaddl
loopne
fisttpl
mov
xor
lods
push
hlt
cltd
clc
add
jnp
sarl
stos
mov
and
call
ds
cmp
int
scas
pusha
movsb
mov
mov
cwtl
inc
into
negl
push
xchg
push
add
movsl
jge
into
sbb
sub
sbb
xchg
not
sbb
xchg
push
push
lods
bound
dec
jbe
adc
add
push
pop
daa
js
in
rclb
sti
lcall
sbb
jb
mov
adc
insb
cmpl
add
out
popl
or
int
adc
das
hlt
adc
inc
push
lret
add
mov
gs
subl
sub
xchg
add
bound
leave
dec
js
pop
add
or
and
es
mov
mov
or
test
test
repnz
mov
add
inc
add
jns
int
mov
jle
push
adc
int
test
mov
int
inc
jnp
add
aaa
call
xchg
pop
popf
adc
dec
cld
lea
stos
lret
hlt
adc
insb
pop
cmpsl
sti
bnd
movsl
popa
jne
rorb
inc
or
hlt
or
xchg
sub
js
aas
loop
xor
inc
lret
pushf
insl
add
xchg
mov
out
call
push
jns
fs
and
testb
lret
sbb
or
std
fldz
popa
leave
mov
gs
repnz
sbb
xchg
lahf
cli
cmpsb
cmp
insb
push
xchg
hlt
lret
lea
push
popl
shll
bt
test
arpl
test
add
pusha
jle
xor
fnsave
adc
aas
adc
push
mov
mov
add
xor
mov
mov
add
dec
sbb
sub
sbb
and
cli
loop
sti
repnz
les
loope
jne
inc
xor
lock
js
pusha
cli
inc
mov
lcall
jbe
sub
pop
xor
pop
jbe
pop
mov
nop
shll
sub
push
push
in
pop
inc
sbb
add
inc
testw
adc
hlt
rol
mov
ja
jns
ror
mov
je
mov
shl
and
leave
out
movsb
out
xchg
int3
shrb
imulb
jg
pop
movsl
in
test
push
push
orl
fs
sub
dec
add
sarl
ret
lahf
in
xchg
cmp
pop
fs
and
jb
stos
jecxz
jg
fs
rcrw
push
jns
je
adcl
cs
clc
jg
cmp
jbe
das
pop
addr16
xor
or
sbb
es
push
mov
int
pop
daa
mov
rorl
aaa
mov
hlt
jmp
fcoms
or
movsb
mov
movsb
into
cmp
fstps
mov
es
xchg
std
push
xor
in
xlat
jns
out
popf
sbb
fimuls
jne
jge
push
push
sbb
lock
push
ret
stos
pop
mov
adc
xchg
jo
add
xchg
stos
lock
lock
xchg
or
movsb
test
leave
dec
es
cli
aad
jbe
add
cmp
mov
push
mov
lahf
push
pop
sbb
mov
jns
rol
or
shrl
movsl
repz
push
xorb
mov
adc
rcr
incl
mov
push
push
inc
jmp
jmp
pop
sbb
stos
gs
add
xor
add
adc
divl
mov
sub
mov
inc
mov
mov
pop
mov
je
or
shlb
jp
xlat
pop
dec
sub
jns
imul
push
cmpsl
scas
push
rcrb
push
adc
into
sub
outsl
and
or
es
inc
mov
imul
xchg
shll
andl
insb
or
pushf
call
negl
stos
mov
pop
mov
inc
addr16
fs
xlat
clc
lahf
push
jns
daa
xor
and
sub
mov
or
push
in
std
jnp
mov
sbb
cmp
xor
push
jns
mov
sbb
xor
rcll
xchg
mov
minps
push
mov
leave
movsl
pusha
jno
and
lea
or
mov
dec
mov
and
loope
loopne
cmp
lea
je
cmpsl
pop
adc
add
mov
adc
push
inc
push
mov
inc
xor
pop
dec
inc
jl
pop
sbb
movsb
ret
loope
lds
mov
int3
out
inc
inc
cmpsb
popa
fdivrl
aam
outsb
fidivrs
loope
subl
into
sbb
mov
leave
jb
add
and
pop
sub
push
sti
jmp
inc
mov
add
add
decb
sbb
jnp
xor
xchg
mov
stos
adc
popa
dec
and
roll
cli
add
mov
insl
xchg
je
add
push
pop
add
rclb
leave
scas
test
push
into
int3
popf
aad
cwtl
mov
xor
dec
xlat
fdivp
push
fneni(8087
jecxz
leave
mov
cmp
jo
push
push
adc
pop
add
xchg
mov
sbb
sbb
pop
add
jmp
add
xchg
mov
sbb
adc
fcoml
cmp
aaa
push
pusha
sahf
popa
arpl
push
dec
pop
fcoml
jecxz
pop
push
dec
ss
loope
stc
aad
xchg
mov
pop
add
shll
and
lods
mov
jp
dec
scas
imul
adc
fdivr
popa
push
lods
push
les
lss
xor
cmc
outsb
add
mov
jno
pushf
mov
lcall
scas
add
mov
stc
shlb
cmp
fdivs
cmpsb
pop
stc
jge
and
stc
add
lcall
jno
push
hlt
lcall
inc
repnz
lea
mov
cmc
fsubs
mov
add
pop
loope
cmp
stos
imul
in
pop
int
jae
rorb
leave
xchg
jbe
push
mov
adc
push
dec
xlat
jg
ja
xor
addr16
andb
mov
sbbb
jecxz
hlt
mov
xchg
jmp
aam
add
adc
data16
in
xchg
scas
icebp
mov
andl
mov
push
jae
mov
in
xchg
ja
push
dec
lds
call
imul
fsts
mov
daa
cmp
repz
stc
shrb
adc
insl
dec
sbb
push
pop
lds
mov
xor
lea
lcall
jae
push
sub
push
fwait
mov
or
inc
ljmp
cmp
mov
cmp
nop
rorl
jl
jmp
and
pusha
and
leave
sbb
add
rclb
cmp
call
dec
xchg
sub
test
push
dec
out
jge
je
jge
sti
lahf
mov
bound
lret
int3
outsb
cwtl
inc
insb
sub
ja
and
pop
and
flds
and
pushf
and
dec
or
call
out
inc
js
sbbb
shll
aaa
dec
sbb
testl
xchg
jae
aaa
xchg
add
shr
nop
shlb
fists
lea
mov
pop
test
ret
je
in
xchg
in
shlb
out
fidivs
push
rcl
dec
ret
int
and
sub
push
cmpsb
cmp
cli
sahf
dec
mov
pop
lahf
push
lret
pop
mov
or
clc
cwtl
nop
cli
sbb
pop
pop
dec
inc
movsb
or
out
xchg
fldt
fcompl
or
add
xor
shlb
jb
int3
fisubs
in
aaa
xor
call
aaa
out
mov
mov
stc
jne
cmpsl
dec
std
int3
pop
dec
adc
mov
pop
movsl
xchg
sub
movb
adc
subl
ljmp
cwtl
add
mov
insl
ss
xchg
daa
and
testb
push
push
xor
roll
push
ds
idiv
mov
inc
into
clc
leave
test
lock
push
mov
test
shr
repnz
lock
mov
es
mov
mov
adc
jne
sbb
mov
sub
mov
or
stos
mov
pop
push
iret
mov
and
push
or
shlb
iret
subb
pop
mov
sub
cmc
repnz
cmpsw
out
sbb
sbb
out
loopne
mov
sub
dec
xchg
in
pop
enter
aam
test
test
lds
in
dec
cld
jmp
mov
sarl
imul
cmc
mov
pusha
mov
inc
scas
sti
pop
leave
sub
rolb
pop
mov
cltd
sub
xlat
orb
and
inc
scas
cmp
in
add
push
pop
inc
mov
arpl
mov
ja
mov
lret
xchg
cmp
and
mov
cltd
push
jp
sbb
pop
ret
jle
adc
push
sarl
mov
pop
loopne
jge
adc
dec
jae
fnsave
in
adc
scas
ja
pop
add
shlb
daa
es
jge
cld
sbb
pop
ret
loopne
cmpsb
adc
sti
mov
mov
or
pop
cmp
mov
mov
mov
push
dec
push
pop
test
call
out
mov
mov
ja
stos
pushf
xor
xchg
or
fbld
aas
ficoms
cmp
adc
sub
inc
xchg
pop
pop
bound
and
repz
out
push
pop
push
push
stos
jae
jmp
pop
sbb
inc
adc
cmp
fcom
mov
rcrb
add
lock
add
mov
pusha
loop
js
dec
cmp
sar
jb
clc
fistl
adc
add
ja
and
shlb
fbld
into
andl
inc
aam
mov
mov
inc
jge
and
hlt
mov
and
cs
ret
adc
cmpl
cmc
fisubs
sbb
push
roll
jp
mov
push
mulb
lea
mov
pop
mov
mov
enter
popf
sbb
arpl
mov
bound
jne
iret
inc
mov
call
in
ror
out
insl
dec
data16
add
lods
xchg
sbb
dec
cmp
rcrb
mov
cmpl
xchg
or
xchg
jb
mov
mov
lock
push
push
repz
cmp
adc
movsb
mov
stos
push
repnz
loop
jbe
dec
sub
stos
jmp
mov
xchg
cwtl
xchg
add
imul
inc
aad
ret
mov
xlat
movsl
jp
jbe
sbb
cmc
and
je
sub
push
xchg
fnsave
xchg
adc
adcb
imulb
and
loop
es
leave
mov
xchg
inc
or
lahf
dec
minps
test
push
into
or
dec
push
scas
pop
lea
lret
sbb
xorb
pop
add
cwtl
sbb
pop
dec
jmp
jb
cltd
inc
mov
mov
clc
lock
pop
idivb
push
mov
xor
add
push
lods
in
loopne
dec
cmp
push
into
je
fld
sbb
fists
pop
movsb
call
push
mov
sub
push
adc
pop
xchg
lret
jnp
mulb
scas
sub
jp
icebp
test
repz
jge
xchg
neg
les
movsl
call
and
fwait
das
leave
and
push
adc
pop
jl
xor
arpl
dec
mov
movl
xchg
jns
hlt
cs
jl
aas
fsubrl
push
popf
push
jnp
jnp
movsl
test
push
btl
stos
dec
jle
jmp
icebp
sub
lcall
and
sbb
aam
jmp
and
cmp
cmpsb
out
fildl
aaa
jg
icebp
fwait
xor
mov
int3
xor
enter
in
dec
xor
mov
inc
xlat
in
aad
jl
int3
rorl
mov
jge
les
stc
cltd
sbb
push
mov
scas
int
inc
push
push
add
cmp
loope
add
xchg
sti
or
pusha
push
cmp
cli
mulb
mov
popf
ljmp
ljmp
rcrb
sahf
push
mov
xchg
dec
sbb
jp
insl
sbb
mov
xchg
cli
outsb
lea
je
sbbb
es
insl
push
hlt
sbb
mov
or
sbb
shll
data16
stos
aaa
mov
add
dec
and
sub
mov
mov
repnz
mov
out
push
cmc
inc
arpl
jbe
adc
mov
xchg
rorb
divb
cmp
arpl
lcall
xor
push
enter
jmp
das
nop
stos
xchg
lret
push
in
test
xor
cld
in
mov
cmc
enter
rcrb
adc
push
sbbl
insl
mov
xor
lcall
fsubl
sub
subb
adc
pop
lods
fisubl
daa
inc
jns
fmull
mov
cmpb
sub
aaa
push
dec
and
leave
push
cld
mov
pop
pop
divps
nop
das
push
int
mov
test
pop
mov
cwtl
jo
or
lods
rcrb
lock
divl
jns
fstps
lods
clc
push
inc
pop
mov
shlb
scas
lahf
push
cmp
dec
mov
cmp
sbb
push
imul
cmp
aad
sbb
or
mov
jl
lahf
mov
fdivl
das
mov
ljmp
scas
arpl
push
movsl
fwait
test
out
pusha
mov
insl
push
cmp
idiv
out
cmpb
pop
gs
sbb
push
ret
cmp
outsl
sub
add
or
dec
mov
push
inc
xorl
aaa
add
cmc
sbb
test
mov
scas
dec
sahf
gs
fisubrl
sahf
sub
pop
gs
test
sbb
mov
fistpll
dec
xchg
in
shrb
push
xor
mov
ss
pop
sbb
sahf
add
pop
stos
lods
mov
imul
aaa
pop
xchg
in
push
test
jne
mov
ret
dec
leave
cmpsl
cmp
sub
int
jmp
test
sbb
scas
into
gs
mul
iret
dec
std
jbe
mov
and
notl
sub
movsb
lret
pushf
jne
int
xor
ret
and
lret
jb
outsb
adc
mov
dec
push
sbb
inc
jae
imul
fbld
dec
cmp
adc
push
lcall
fsubp
push
movb
or
insb
or
sarl
mov
nop
inc
arpl
and
rcrb
dec
shlb
mov
popl
outsb
stos
mov
xchg
pop
xor
aaa
or
call
paddb
fcmovnbe
xchg
mov
xchg
dec
adc
and
and
xchg
outsb
cmpsb
lcall
xlat
pop
icebp
adc
xchg
jae
cmp
inc
rcrb
add
data16
cmp
push
adcb
jne
stc
ljmp
bsf
mov
push
pop
in
jge
mov
into
test
mov
test
cmp
xor
mov
out
pop
add
fnstcw
xor
dec
mov
cli
leave
xchg
icebp
add
pop
fdivrl
ljmp
lcall
jmp
and
and
jle
arpl
int3
jl
add
push
fs
mov
andl
icebp
mov
outsb
fstps
mov
inc
cld
jno
mov
mov
push
fcomp
ret
cli
cmp
mov
and
sti
mov
xlat
pop
dec
add
sbb
cmp
div
test
and
and
push
jecxz
in
cwtl
add
inc
jnp
push
xchg
jg
adc
add
cwtl
push
mov
cli
jo
adc
fimuls
mov
push
lea
stos
in
cmp
inc
mov
mov
in
iret
mov
test
xchg
pop
push
mov
xchg
adc
and
sbb
and
js
jne
xchg
notl
jg
pushf
push
in
clc
fnstsw
aas
mov
repz
movsl
popa
add
or
push
cltd
adc
cmp
adc
mov
mov
xchg
imul
leave
bnd
mov
mov
pop
cs
push
fwait
jbe
jne
add
jle
mov
push
fldt
mov
xor
pop
xchg
adc
sub
adc
mov
aas
and
lock
les
and
arpl
loope
inc
push
xchg
pushf
push
outsb
add
addr16
call
adc
cmpsb
ffreep
add
sbb
sbb
out
in
daa
insl
xor
pop
ljmp
or
cmp
jmp
test
int3
sub
iret
insb
fnstsw
shr
dec
jmp
mov
cmp
pop
jp
cmpsb
add
daa
lds
mov
sti
xchg
lret
mov
sub
fs
les
pop
pop
and
gs
mov
push
dec
fnstcw
jae
or
mov
xchg
subl
inc
ja
xrelease
add
mov
and
cltd
jb
push
out
add
les
shr
scas
movsl
inc
dec
fldt
loopne
pop
es
add
xchg
lods
jns
fcmovnu
hlt
cld
lahf
cld
sbb
add
jae
test
scas
out
adc
bound
mov
imul
setae
add
aam
jb
push
cwtl
adc
shl
push
pop
aaa
lods
cmc
push
cltd
or
dec
shl
mov
cmp
and
hlt
pop
sarl
cmp
enter
jmp
pushf
cmpsl
repnz
fs
fisttps
icebp
and
sbb
mov
fdivrs
sub
enter
xchg
data16
aas
ffree
push
leave
pop
mov
int
xchg
cmp
or
gs
xchg
jge
popa
xchg
adc
xchg
idivb
scas
in
mov
jp
test
pusha
adc
mov
sarl
outsb
jnp
sbb
mulb
inc
cs
pop
insl
out
lods
sub
imul
jmp
mov
pusha
cmp
push
jge
pop
shlb
imul
mov
sub
push
mov
andb
mov
mov
icebp
add
jmp
add
loop
cli
mov
stos
rclb
or
aas
sbb
mov
iret
decl
mov
sahf
cwtl
sarb
inc
fiadds
push
imul
mov
mov
stos
dec
imul
stc
jmp
push
mov
add
xor
lcall
fdivrl
movsl
cmp
movsl
push
cmp
das
rorl
adc
sbbl
dec
aas
addb
paddd
enter
cmp
xor
ja
lcall
dec
add
lahf
cmpsl
pop
aad
ret
jo
mov
imul
aam
adc
popl
jnp
test
fidivs
pop
mov
mov
lahf
lock
push
dec
out
arpl
lock
incl
pop
decl
inc
push
in
out
int3
inc
cmp
jns
loop
mov
inc
push
gs
jns
sbb
cmp
mov
stos
addl
imul
loop
dec
sbb
or
sub
pop
pusha
mov
arpl
loope
jle
insl
inc
sub
mov
outsb
leave
jns
push
fnclex
repnz
cmp
inc
arpl
fimull
jb
add
sbb
push
pop
add
imul
cs
push
into
pop
rcrb
push
and
mov
mov
jp
scas
jmp
add
pop
insb
repz
sub
arpl
test
cli
adc
lahf
insb
mov
push
cmpsb
pop
sbb
and
pop
popw
mov
sti
add
jl
leave
jbe
aas
mov
dec
sub
pop
aas
inc
outsl
jae
cmp
aas
loopne
sub
sahf
inc
xchg
ret
inc
push
mov
xor
lock
pop
imul
push
dec
pushf
pop
adc
cmp
mov
or
jno
inc
aaa
loop
mov
jno
pusha
lret
mov
lock
gs
adc
add
xchg
mov
test
push
inc
into
dec
adc
stos
rol
lds
stos
mul
call
dec
and
mov
cltd
mov
movsb
pop
mov
shlb
negb
clc
sub
mov
lds
enter
pop
pop
lahf
pop
sub
mov
mov
and
pop
pminub
xor
push
cmpsb
jbe
in
push
testl
push
cwtl
jle
rcll
push
ret
xor
stos
mov
in
lcall
jbe
xchg
xor
mov
pop
cltd
inc
mov
aam
popa
push
fsubs
dec
daa
cmc
and
cmpsb
sub
xchg
jns
inc
mov
and
insb
jg
fimuls
lret
sub
cmpsl
sub
sbb
mov
xor
int3
das
pavgw
scas
mov
test
cli
mov
cmp
jae
out
pop
cs
fs
add
jg
pavgb
aam
fsub
sub
dec
outsb
jbe
xlat
and
jne
sub
adc
mov
lock
scas
add
adc
lods
popa
and
fistpl
push
mov
xchg
lea
mov
push
pop
cmp
fists
idiv
enter
adc
mov
cmp
push
add
mov
jnp
addl
nop
mov
sbb
pop
jg
dec
negb
dec
pop
es
mov
adc
std
sbb
mov
movsl
lret
bound
push
out
add
pop
pop
aam
or
sub
cmc
jo
sub
pusha
fstpt
push
mov
fwait
mov
adc
outsb
pop
or
inc
xor
ja
jne
fisubrs
out
bound
imul
lock
pop
shll
xchg
mov
std
mov
xor
out
push
mov
rolb
arpl
idiv
lock
mov
pop
rolb
and
and
add
fld
in
lahf
inc
fimull
jge
mov
mov
xor
push
ret
sub
insl
out
jno
outsb
sahf
loope
sub
lcall
in
jle
shl
and
imul
dec
es
out
addl
pop
mov
xor
dec
push
in
mov
out
pop
xor
or
mov
xlat
ljmp
xchg
dec
enter
orb
movsb
sti
lahf
mov
jbe
or
test
cmc
xchg
rolb
xor
cwtl
scas
add
sub
hlt
jnp
xchg
pop
adc
repz
das
xchg
repnz
dec
jo
inc
imul
sbb
ret
sbb
adc
adc
gs
jle
lahf
add
xorl
jmp
xchg
jl
int
xchg
sub
cwtl
scas
adc
adc
jo
pop
jo
test
lcall
push
lea
cld
in
jp
fdivs
clc
sbb
test
mov
lcall
sub
jl
repz
xlat
fwait
mov
in
sbb
pop
ss
mov
add
cltd
int3
jne
mov
xor
popf
jbe,pt
push
lcall
xor
push
adc
xor
lods
and
sahf
push
sub
cmp
enter
push
pop
adc
cmp
sbb
sub
loop
stc
inc
repz
pushf
fisubrl
mov
ret
xor
cmp
jns
dec
push
in
dec
data16
xor
inc
fidivl
push
jecxz
scas
push
sub
lods
jae
xor
jl
nop
js
cs
add
xchg
test
stos
leave
arpl
adc
cmp
insl
and
addr16
fidivrl
sub
cld
add
or
cmp
mov
aad
in
add
xor
push
inc
mov
push
test
leave
inc
decb
sti
in
fucompp
test
sub
mov
nop
scas
jb
idivl
pop
fimuls
aas
sbb
movhlps
std
add
pop
xchg
aas
test
pushf
andl
loope
sbb
jl
rcl
pop
mov
sbb
xor
sbb
repnz
pop
xor
dec
pop
movsb
push
adc
add
mov
xor
sbb
xchg
inc
ljmp
or
sbb
test
mov
pop
enter
add
and
cmp
sub
inc
aaa
xchg
sub
dec
call
bound
xor
sbb
xor
adc
lods
mov
cmp
mov
add
addb
jge
sub
mov
add
mov
ljmp
int3
add
add
jmp
popl
push
cmp
lret
fisubrs
jp
cmpsl
dec
cli
or
out
ret
out
lret
js
rcll
dec
aad
jo
rcrl
fcmovnbe
cmp
imul
shl
mov
int3
les
outsb
sbb
pop
push
adc
mov
or
add
mov
mov
push
and
cmp
enter
test
popf
mov
xorl
iret
pop
lds
enter
lea
pop
add
xchg
sub
mov
jecxz
inc
push
jno
pop
and
mov
ja
push
bnd
punpcklwd
stos
push
roll
dec
ja
cmp
mov
aam
sub
in
in
jge
mov
sbb
pop
pop
add
mov
xchg
inc
dec
fiaddl
movsl
fnstsw
inc
in
jp
mov
or
add
ljmp
cwtl
add
sbb
ljmp
and
mov
insb
insb
mov
scas
test
mov
lods
nop
mov
js
or
mov
push
xor
jno
xor
inc
push
mov
xchg
std
pop
mov
sbb
aad
and
add
or
aaa
inc
add
pop
cs
fwait
test
sbb
cmp
ret
mov
sub
mov
in
hlt
mov
xlat
add
jecxz
jmp
int3
into
hlt
cmpl
imul
jns
xlat
rcrb
es
cmp
inc
jnp
and
mov
decl
adc
jmp
icebp
repnz
mov
call
cwtl
out
imul
clc
roll
imul
or
jns
jmp
or
pop
cmp
push
addw
inc
fbstp
mov
cmpsb
outsb
mov
mov
push
add
lds
push
in
mov
lea
nop
les
or
test
loopne
sub
in
add
scas
jmp
shll
mov
jo
sbb
push
and
xchg
mov
mov
mov
mov
xor
pop
inc
imul
hlt
or
ds
fwait
std
xor
mov
clc
push
fsubr
mov
into
mov
scas
or
fwait
movsb
ds
mov
dec
into
cmp
ljmp
divb
mov
pusha
aas
cmp
inc
push
pop
dec
int
adc
popf
shr
div
pop
sarb
aas
out
popa
mov
adc
cmp
cmp
hlt
or
mov
faddl
jecxz
pop
mov
aaa
in
cmpsl
mov
mov
push
add
sbb
pop
insl
in
loop
mov
or
mov
stc
mov
cli
cmc
in
jnp
in
mov
or
mov
pop
adc
ljmp
adc
movb
ds
fbstp
inc
dec
loop
addr16
sahf
dec
rclb
cmp
adc
pop
jg
mov
jle
out
pusha
lret
daa
xchg
pop
xlat
lods
mov
add
mov
mov
int
xlat
sbb
mov
in
push
rep
aad
mov
out
sub
lds
mull
sbb
in
fsts
call
pop
mov
das
pop
ror
push
mov
mov
aam
cmc
popa
mov
or
mov
popf
jo
repnz
sbb
loope
addb
xchg
pop
xchg
xchg
leave
add
call
mov
or
jbe
stos
loop
out
iret
int3
adc
sub
add
mov
dec
lcall
jp
call
push
rol
sbb
jecxz
fucomp
xchg
pop
call
shl
ss
in
xchg
or
aam
scas
scas
inc
jno
adc
jne
adc
lods
std
in
xchg
fistpl
dec
aaa
mov
cmp
sub
sub
dec
xor
jo
aaa
push
add
aam
clc
dec
enter
dec
sbb
shrb
stc
or
jo
pusha
xor
int
mov
cmp
insl
cltd
cmp
mov
mov
cmpsl
in
cwtl
dec
lret
mov
int3
dec
xor
idivb
fadd
sbb
sar
ss
pop
pop
repz
mov
mov
jecxz
ss
pop
jb
shl
push
push
and
in
pop
mov
fs
lcall
mov
out
jl
loopne
push
mov
mov
sti
cmpsl
adc
ret
es
mov
inc
or
ja
out
inc
stos
sub
aad
xchg
adc
pop
or
xchg
test
cmp
push
or
mov
cmp
xchg
je
imul
sub
xchg
cwtl
mov
ss
xor
pop
jb
jecxz
sub
popa
cmp
xor
std
fcmovnu
xor
je
mov
in
es
sub
es
scas
and
or
or
add
jmp
in
inc
pop
or
scas
push
inc
imul
lods
xchg
rorl
insb
xchg
jmp
xor
or
mov
jl
mov
xor
movsl
and
xchg
adc
out
nop
jns
rolb
test
inc
cmpl
xor
rclb
orb
notl
sbb
dec
mov
pop
ror
mov
dec
sub
push
shll
pushf
or
xor
xchg
push
jo
popa
aad
lret
popa
add
aad
mov
jl
push
cmp
je
cld
sub
add
push
sarl
pusha
in
adc
mov
dec
push
jo
dec
mov
gs
adcl
lahf
mov
fiaddl
daa
xor
je
pop
push
lahf
xor
rdpmc
movsb
sbb
popa
gs
push
dec
and
iret
cmp
mov
cmp
in
dec
xor
ret
or
jecxz
pop
mov
sar
popa
lahf
andl
leave
xor
xor
sahf
aam
cmp
add
jmp
cli
dec
mov
imul
dec
jge
xor
iret
inc
xor
arpl
xchg
nop
outsb
add
cmpsb
or
fdivl
sub
cwtl
in
imul
lea
fsubl
rcrb
mov
push
lods
push
lods
cmp
lods
sbb
inc
cmc
ret
rcll
jnp
or
mov
sub
loop
mov
adc
outsl
out
or
sbb
nop
in
outsb
repz
xor
dec
pop
push
mov
test
pop
pop
push
bound
mov
and
dec
jno
jae
aad
push
cmpsl
bswap
cltd
sbb
jb
loopne
mov
mov
mov
push
movb
out
mov
xor
iret
cmp
stos
and
xor
and
dec
rcl
mov
xor
adc
cmp
bound
xor
ret
mov
mov
and
sub
dec
ret
xchg
fs
pop
push
shl
in
xor
ret
les
sub
dec
imul
xchg
mov
sahf
xchg
into
sbb
push
arpl
xchg
out
test
inc
sbb
xlat
or
add
shrl
pop
repz
mov
xor
push
sub
xor
inc
pop
pop
test
adc
je
in
int3
push
jl
xchg
mov
xchg
push
stos
test
add
rorb
add
insb
js
lods
mov
inc
xor
fwait
stos
fdivs
jb
dec
lock
test
push
and
dec
mov
cltd
sub
pop
orb
and
dec
dec
adc
sahf
cmp
cmpsl
inc
fildl
adc
xchg
fwait
lods
or
jb
push
emms
mov
dec
lcall
lret
adc
out
sub
loop
sbb
sbb
cmpsl
and
lret
arpl
insb
jmp
int3
ficompl
dec
test
jne
es
jns
daa
int3
mov
jnp
push
xchg
mov
inc
stos
push
stos
in
xchg
fisttpl
lea
pop
jg
jmp
inc
aam
adc
xchg
add
or
mov
movsb
stos
loope
jo
mov
mov
pushf
and
sbb
jmp
jns
rclb
inc
ret
iret
pop
fstl
adc
in
inc
mov
jmp
mov
mov
fists
jae
mov
mov
mov
cmp
outsb
pop
leave
pop
adc
mov
std
icebp
sti
cmpsl
xchg
pop
pop
or
inc
jae
pop
aas
jle
push
and
outsb
pop
loop
les
bound
out
shrl
aaa
incb
mov
leave
fmul
push
fcmovbe
clc
mov
push
sub
mov
cmp
das
push
enter
mov
lock
sub
xchg
std
jb
out
cmp
in
xchg
in
outsl
ja
xlat
cmp
jl
inc
pop
je
push
inc
or
rorb
test
jb
loop
add
xlat
xchg
icebp
cwtl
fcoml
ja
adc
pop
push
add
out
lods
mov
lcall
or
lea
in
fidivrl
incb
mov
pop
aaa
sub
jecxz
jl
out
in
adc
fstpl
jge
outsl
popf
enter
mov
push
dec
pop
ficoms
nop
out
sbbl
test
inc
das
arpl
push
mov
ds
aaa
xchg
movsl
xchg
outsl
popa
pop
aam
icebp
es
inc
out
or
nop
push
out
mov
jg
movsb
dec
lcall
mov
jle
dec
fldenv
fnstenv
negb
inc
les
inc
fs
and
loop
fists
mov
jg
cmp
ljmp
mov
dec
scas
mov
cmp
jecxz
clc
jae
in
xchg
test
jge
push
test
push
cli
das
dec
sbb
jmp
test
or
rclb
adc
push
cltd
add
mov
mov
or
and
pusha
int
and
lcall
lds
sahf
call
fcmovnu
mov
adcb
clc
sub
xor
popf
push
js
and
lock
lock
dec
enter
cmp
out
scas
data16
shll
fmull
or
in
sub
adc
sbbb
xorl
test
arpl
push
or
pop
fnclex
xchg
jno
push
mov
insb
mov
insl
je
jecxz
adc
push
ret
sub
adc
fs
idiv
stos
cmp
pop
or
pop
fs
jbe
or
stos
lock
xchg
mov
roll
cmp
xor
cld
out
pop
iret
and
mov
or
adcl
repz
adc
out
sbb
je
fwait
mov
in
pop
das
in
mov
jae
mov
sbb
push
mov
cmc
lods
fisubs
lea
divl
push
add
dec
call
pop
test
addr16
outsb
pop
out
movsl
mov
xor
pop
push
or
dec
es
or
push
adc
mov
dec
pop
fbstp
rorl
xchg
je
fwait
bnd
jmp
ret
or
les
repnz
js
push
ficoml
mov
pop
mov
or
xchg
push
nop
jp
xor
add
bound
aam
jae
jmp
loope
mov
dec
iret
pusha
adc
xor
cmp
inc
mov
adc
shrb
ja
fs
in
rcrb
mov
push
inc
mov
dec
mov
scas
daa
xorl
cli
aam
xor
shrb
inc
mov
dec
push
xor
xor
xchg
or
jecxz
dec
push
imul
xchg
int3
sub
jns
imul
xchg
fisubl
dec
or
movb
cmp
int
mov
daa
mov
push
shll
sub
loopne
repz
jne
jbe
sub
sbb
jae
mov
add
dec
sbb
adc
xor
adc
icebp
test
pusha
sbb
dec
cmp
fnstsw
pop
dec
lcall
push
mov
and
fmulp
pop
loop
aam
jae
hlt
shl
pop
push
xchg
insb
nop
dec
sbb
movl
cmp
inc
xchg
jbe
insb
loope
cmc
in
mov
mov
xor
insb
loopne
rol
pop
add
aaa
lods
or
mov
fsubrs
sub
or
jmp
mov
or
jmp
enter
pop
add
popa
xchg
movsl
dec
dec
bnd
popa
daa
mov
int
loopne
pop
dec
ret
or
and
sub
mov
ljmp
loopne
xlat
and
xor
add
lock
in
dec
sub
xchg
mov
cs
mov
iret
mov
sti
stos
mov
xlat
mov
in
call
add
addr16
outsl
push
xchg
std
out
movsl
cmp
sbb
pusha
in
cmp
mov
add
xchg
push
and
bound
lea
loop
sub
jo
imul
and
add
pcmpeqb
lods
xchg
mov
jl
stos
push
inc
in
nop
aam
pushf
cmp
and
mov
adc
jns
sub
or
dec
jecxz
fwait
or
pop
fbstp
pop
movsb
enter
pop
and
cmp
cmp
jp
addl
push
test
addb
mov
jg
loope
pop
sub
mov
test
inc
pop
scas
mov
das
int
test
mov
imul
cmp
movsl
push
je
nop
aaa
mov
xchg
sub
shrb
push
push
xchg
adc
js
xor
add
cmpsb
add
push
inc
pop
xlat
xlat
stos
xor
scas
cmc
push
leave
in
test
mov
sahf
mov
mov
test
or
insl
add
adc
incb
mov
pop
aas
pop
xchg
push
sbb
popf
adc
in
xlat
sub
hlt
fcomp
fsts
mov
xchg
lret
adcl
push
inc
lret
in
lea
or
cltd
call
fimuls
mov
xlat
fisubrs
pop
cmpsl
and
adc
adc
add
or
ret
pusha
mov
mov
push
cmp
out
out
xchg
idivl
dec
add
mov
pop
aad
push
mov
stos
insl
iret
add
mov
mov
aad
mov
or
xchg
hlt
push
stos
addl
cmp
jmp
pop
fwait
insb
ljmp
imul
sub
dec
aam
add
cmp
xor
aam
stos
call
mov
sti
jmp
jmp
sbbl
xor
shr
out
xorb
ret
xchg
insl
cmp
push
xchg
add
pop
mov
mov
cmpl
in
sub
fildl
mov
xchg
aad
orb
mov
dec
mov
into
cmp
pop
and
cs
or
cwtl
cwtl
push
ror
movsb
xchg
sarb
cmpsb
jle
mov
popa
cmp
aam
sbb
ds
shlb
xor
iret
int3
add
add
sub
shr
icebp
sub
popa
shll
and
sbb
or
stos
aam
js
push
shll
ds
fsts
jmp
popf
daa
or
mov
mov
loope
scas
sub
rorl
jle
es
into
fs
aas
getsec
mov
jp
mov
mov
mov
enter
insb
add
sahf
and
push
dec
push
pop
outsb
daa
decb
or
cmpsb
push
pop
andl
ret
test
das
rcrl
lahf
rorl
in
xchg
outsl
cmp
push
aas
pop
push
inc
xchg
ss
cmp
or
cmpsb
flds
sub
test
sub
sbb
sub
shl
adc
mov
cmpsb
and
pop
push
push
sti
pop
or
jo
adc
mov
sub
scas
ja
push
and
adc
push
lret
sbb
pop
push
jg
es
mov
mov
movsl
testl
imul
mov
hlt
sahf
xchg
dec
out
jge
inc
inc
rcl
push
lahf
sub
stc
xor
mov
xchg
xlat
cmc
cmp
jg
fs
leave
fnclex
sahf
or
leave
xchg
jge
mov
lods
loopne
iret
stos
push
clc
popa
clc
jle
jg
pop
cwtl
inc
inc
mov
inc
jmp
xchg
jmp
into
xchg
adc
cmp
xor
push
ja
inc
mov
lds
not
adc
sti
mov
jns
push
lods
sti
iret
fs
jecxz
cli
sub
rorl
adc
xor
mov
inc
les
ds
lcall
jp
jp
xorl
jp
pop
cmp
jno
cwtl
popa
loop
add
aam
test
hlt
dec
xchg
push
rcr
pop
cmp
cmc
lea
cs
push
mov
mov
add
cmp
mov
cmp
xor
sbb
cmpsb
pushf
into
xchg
leave
out
ret
or
mov
pop
sbb
test
ja
mov
xor
jbe
jns
movsb
dec
shll
lcall
pop
adc
fmuls
lods
cmpsb
cltd
pushw
out
test
mov
fstl
xchg
shl
sbb
jbe
or
and
fldt
and
adc
or
mov
cmp
shrb
test
jl
pop
push
hlt
push
xor
int
sub
jb
push
sarl
movsb
rclb
xor
fcomps
lds
cli
sub
dec
and
cmpsl
out
add
adc
sub
jo
ror
loop
inc
sub
or
and
cmp
adc
sbb
dec
inc
pop
cli
inc
into
jbe
movl
pusha
inc
xor
xor
push
jb
repnz
push
push
sub
inc
daa
jmp
test
loop
jns
scas
fisttpll
mov
cmpsb
fisubs
or
insb
insb
jae
push
xor
cld
xchg
sub
ljmp
sbb
pop
jno
xor
jnp
lods
mov
js
push
or
popf
adc
jge
outsb
pop
aam
leave
lea
es
fwait
movsb
or
xlat
lods
hlt
pmaxsw
mov
bound
dec
shlb
mov
sbbb
call
mov
in
sbb
call
xchg
sbb
jbe
iret
icebp
jo
mov
jo
ret
test
psubd
pop
cmp
out
lret
fcompl
es
cmp
push
xchg
lock
rcrb
les
mov
sub
fbld
mov
imul
sub
fwait
sbb
cld
mov
push
in
js
out
dec
push
in
stos
das
push
ror
mov
mov
lock
jo
fdivp
jmp
push
inc
add
push
or
jle
add
lock
inc
mov
icebp
jno
adc
insb
pop
lret
cmpsb
push
fistpll
shrb
jp
into
les
inc
mov
div
mov
mov
fwait
sahf
inc
mov
or
mov
ret
add
lods
int
jo
sub
sub
test
divl
fstpl
popf
cmp
sub
add
adcl
sub
popf
das
mov
xchg
mov
icebp
aam
pop
ljmp
cmp
dec
ljmp
push
fidivs
mov
adc
adc
bound
xchg
lock
mov
aaa
test
push
dec
jne
mov
or
ljmp
jno
lods
push
in
and
ret
xor
dec
ja
ret
mov
rol
add
cmp
ds
or
aaa
lds
fsubs
push
loop
adc
add
push
fidivrl
and
push
fstp
cmp
loopne
outsl
sub
ss
call
leave
jne
sbb
icebp
das
pop
push
and
out
and
mov
das
or
ret
mov
sarl
jp
pushf
mov
mov
outsl
inc
mov
push
pushl
lret
jge
xor
sub
dec
cmp
inc
sbb
data16
pop
fcoml
mov
xchg
mov
jp
xchg
cmp
insl
loopne
push
gs
dec
pop
sbb
sar
jno
int
test
xor
jb
xchg
dec
add
cmpsb
je
pop
pop
loope
cmp
xchg
ss
lahf
mov
int3
push
cmp
mov
sbb
add
sub
out
ss
push
jmp
pusha
gs
sbb
jo
ret
inc
inc
pusha
aad
sbb
jbe
loope
jge
add
ret
or
clc
mov
mov
in
mov
lods
test
pop
mov
js
aam
and
pop
outsb
mov
and
inc
repnz
sbb
or
in
pop
sub
sub
xchg
sbb
aad
inc
pop
movsl
cmp
shll
nop
jne
bound
orb
faddl
pusha
mov
pop
xor
bound
sar
test
sub
div
fs
inc
aam
mov
mov
dec
cmc
mov
hlt
cmp
out
in
cs
add
jp
es
lock
enter
pop
jae
pop
ds
xor
add
inc
enter
sub
sbbl
imul
jne
push
jg
ret
fnsave
es
roll
push
xchg
lods
sbb
stos
or
jnp
mov
int3
xchg
lret
js
jp
fistpl
mov
dec
gs
xor
add
mov
mov
test
push
shr
mov
mov
aas
xchg
int
stos
and
aas
add
leave
cmp
enter
lret
popf
js
inc
xchg
movsl
ret
cs
sarl
cltd
mov
sarl
xor
scas
mov
fwait
pusha
subl
movsl
dec
inc
inc
mov
jb
lahf
mull
and
adc
cmp
xchg
and
push
adc
pop
push
xlat
sub
pop
lods
in
sbb
xchg
nop
mov
inc
jl
dec
mov
outsb
inc
mov
inc
fwait
andb
in
aaa
hlt
sbb
dec
xchg
repnz
fldl
ds
jbe
imul
inc
and
mov
out
imul
inc
cwtl
sub
lods
xchg
loopne
testl
jns
mov
mov
notb
repnz
mov
pushl
int3
cmp
rclb
fwait
hlt
rcl
push
ret
ret
scas
inc
push
pushf
pop
xchg
cmp
lock
out
insl
push
vandpd
imul
or
scas
adc
fildll
sub
add
mov
scas
jne
push
gs
xlat
or
dec
frstor
das
leave
test
mov
fildll
int3
xchg
in
xchg
mov
add
cmpsl
fcmovne
add
mov
pop
pop
stc
fucomp
mov
in
mov
rorb
push
pop
data16
popf
aam
xchg
sbbl
test
xorb
jnp
lods
mov
pop
cld
cmp
jae
iret
inc
loope
dec
rclb
ja
popa
adc
pop
lret
or
popf
cmp
push
push
jecxz
pop
pop
jbe
push
stos
rorb
mov
pop
inc
and
jnp
popf
mov
cwtl
cmp
ret
pusha
xchg
hlt
mov
add
xorb
and
sbb
pop
adc
xchg
mov
jns
pusha
outsl
and
cltd
call
pop
out
cld
and
cmp
sahf
push
call
imul
ds
movb
add
or
mov
mov
sbb
fs
and
out
addr16
mov
dec
jb
roll
xor
adc
xor
adc
insb
ret
xchg
jo
or
test
inc
test
add
xchg
mov
mov
push
jne
subl
or
xor
push
ds
insl
shlb
ss
popf
dec
add
dec
jne
hlt
adc
jg
adc
fsubr
add
sbb
sub
jmp
out
je
cmp
adc
ret
xor
dec
or
mov
cmp
xor
bound
fmuls
data16
mov
adc
sub
clc
jg
cmc
stos
cmp
shr
add
and
sub
mov
mov
dec
orb
xchg
xor
insb
lods
cs
inc
iret
pop
inc
gs
dec
xchg
cmp
cmp
or
cltd
push
ud0
mov
sbb
divb
adc
push
aam
imul
xor
sbb
in
mov
shlb
mov
out
inc
pop
sti
push
adc
mov
popl
repnz
adcl
andb
cmp
iret
xor
je
cmc
add
movsb
jne
mov
pop
clc
out
add
repnz
push
push
pop
pop
lods
cmp
inc
xor
lods
adcl
test
out
xor
in
push
cmp
mov
call
in
fldenv
movsl
xor
pop
jl
dec
incl
scas
test
xor
in
adc
sub
xchg
mov
and
xchg
sub
mov
leave
mov
into
les
leave
in
or
notb
lods
in
mov
ss
imul
out
nop
test
dec
fists
sub
test
fcmovbe
cmp
subb
mov
fildll
inc
cmp
push
jnp
pop
push
scas
mov
mov
adc
push
inc
je
sbb
pop
dec
dec
fildll
rol
dec
or
mov
jecxz,pn
xchg
sbb
cmpsb
test
rclb
cmp
cmpsb
out
push
sbbl
or
addb
adcl
in
xchg
out
inc
jne
leave
cmp
mov
ds
xor
jbe
imul
push
push
mov
adc
jnp
cmp
jp
test
and
nop
dec
cmp
ret
sub
pop
jo
mov
xchg
jno
in
sub
addb
and
in
fcmove
clc
outsl
loop
xlat
inc
jg
and
call
std
stc
lcall
ret
adc
cltd
test
dec
jg
mov
jnp
add
lret
out
ret
fstpt
sub
in
test
and
pop
notb
dec
call
cmp
clc
je
xchg
push
jle
testl
xchg
mov
movb
pop
adc
mov
inc
cmp
add
sbb
rorl
inc
sbb
jge
lahf
daa
test
push
test
outsl
pop
jne
dec
mov
mov
add
jns
dec
jnp
jo
push
sbb
stos
inc
aad
or
js
cmpsb
add
ja
and
mov
lahf
adc
imul
call
and
ret
dec
or
push
pop
roll
lds
sbb
xor
fdivl
jge
jl
add
cmpxchg
lea
sub
lret
les
popa
cld
mov
adcl
mov
out
lahf
and
mov
push
or
repz
sbb
cli
std
cwtl
cmp
jmp
add
add
push
sbb
sti
out
sub
jecxz
aam
pop
and
insb
xor
ljmp
add
mov
hlt
push
pop
mov
fmuls
bnd
pop
sbb
sub
lods
and
cmp
sbb
xchg
rcrl
gs
ret
aas
insl
cli
hlt
and
xor
out
xor
jg
inc
cmp
in
adc
dec
leave
mov
mov
add
aas
stos
push
jle
das
xchg
push
pop
int3
mov
xchg
insb
sbb
in
jns
mov
mov
into
or
fwait
jmp
pop
out
jns
cmp
sbb
push
xor
in
mov
daa
jp
pop
sub
xchg
mov
push
jbe
jae
mov
push
pop
aad
mov
add
mov
sub
out
mov
sub
filds
pop
xlat
outsl
jne
out
and
dec
scas
out
dec
cmp
jae
mov
das
add
arpl
jle
cli
push
pusha
fldl
ret
cmpsb
aad
mov
addr16
daa
ds
xor
neg
xor
fdivs
or
push
lret
fidivs
in
mov
inc
push
ss
ljmp
testb
jge
xchg
pop
sbbb
adc
shrl
xor
rsqrtps
fadds
movsb
pop
dec
cmpsl
inc
scas
iret
push
out
push
test
test
cmp
lret
mov
scas
push
cmp
pop
xchg
orl
or
push
push
jne
jae
popa
mov
nop
push
mov
repnz
cmc
in
jb
push
jg
cmp
dec
pop
pop
incb
and
and
cmp
cmp
and
push
mov
mov
mov
cmp
adc
jl
push
add
je
mov
icebp
adc
lods
inc
cmc
push
scas
pop
add
lods
adc
jecxz
in
outsl
lahf
and
mov
xor
les
push
mov
add
js
cmp
push
ret
je
pop
aas
test
loope
cmp
sti
jbe
pop
pop
loop
out
mov
lret
lea
jnp
jne
sub
or
add
cmc
add
cmp
stc
rolb
je
jae
inc
fisubl
js
lret
rorl
fistpll
mov
push
inc
sbb
mov
inc
or
add
dec
cmc
std
inc
loopne
sbb
push
or
cwtl
mov
int
sub
sbb
pop
mov
test
mov
or
insl
lret
push
movsb
js
rorb
insb
js
mov
pop
jmp
xchg
rcr
dec
lahf
sub
lds
stc
sarl
push
icebp
push
shrb
rcr
sbb
je
lock
mov
ficomps
adc
dec
cmpsl
jb
pop
loope
jmp
daa
out
pop
rcrb
outsb
outsb
loope
arpl
int
add
mov
push
jae
aaa
push
jmp
test
mov
cmp
lods
xchg
test
inc
les
ljmp
push
mov
loop
in
sbb
sbb
adc
cmp
imulb
pop
lret
outsb
mov
pop
add
clc
int
iret
nop
pop
ss
adc
jl
dec
sbb
push
mov
testl
mov
gs
leave
xchg
adc
dec
fldt
int3
popf
xor
cmp
inc
xchg
or
push
outsb
js
adc
inc
push
fldt
lods
sbb
sbb
xchg
fwait
and
sbb
lods
mov
xchg
xor
outsl
mull
in
xor
cmpsb
mov
jge
stc
xor
cmpb
jnp
mov
fidivrs
lcall
push
push
mov
push
adc
dec
sub
push
dec
inc
jns
jbe
xor
xor
jl
mov
dec
fucomip
adc
and
mov
cmp
inc
shl
xchg
loope
mov
ss
mov
cmpsb
sbb
data16
sar
push
dec
outsb
xchg
mov
fs
mov
aam
dec
std
fstpl
push
xchg
rcrl
test
nop
mov
pop
mov
adc
mov
add
jle
and
cmc
in
scas
pop
idivb
adc
int3
add
hlt
gs
jl
xchg
leave
jle
jge
adc
push
push
not
inc
push
loope
jae
jmp
outsl
xchg
add
mov
das
mov
xor
dec
ret
or
sbb
inc
lea
jmp
movsb
movsb
sti
xchg
mov
imul
hlt
xor
std
dec
push
mov
add
ljmp
rcl
int
in
js,pn
lds
es
test
in
aad
jmp
cmc
loop
add
ja
and
fwait
mov
mov
fwait
sbb
out
xchg
add
cmp
cwtl
mov
cmp
push
lds
mov
ljmp
pop
jge
stos
xor
inc
insb
push
xor
add
cmp
ss
pusha
cmp
movl
mov
mov
dec
jae
rcrb
adc
dec
inc
xor
in
or
repnz
scas
arpl
jnp
loopne
enter
dec
xchg
xorl
repz
dec
std
repz
aad
cmpsb
jge
pop
sub
js
ds
mov
push
sub
dec
xchg
lds
adc
negl
decb
add
in
dec
rolb
jns
mov
pop
fidivrl
movsb
aaa
arpl
xchg
imul
adc
mov
dec
icebp
std
lret
mov
in
inc
popf
xchg
push
sub
fs
dec
push
jmp
ljmp
loop
outsl
scas
lods
adc
fsubrs
cmp
fstps
add
sbb
push
jnp
xlat
fs
xchg
sub
push
movb
out
mov
imul
or
cmpsl
inc
aad
aas
mov
sub
int3
fs
push
add
push
jle
xor
ffree
add
xchg
in
sahf
jge
aam
xchg
andb
pop
rorb
push
jmp
movsl
ljmp
cmp
jg
xchg
mov
mov
pop
leave
or
mov
shlb
lret
sti
scas
mov
inc
push
dec
lcall
xchg
xchg
insb
clc
mov
adc
and
in
test
lea
scas
aaa
and
lret
push
pop
hlt
jg
inc
loop
push
adcl
lcall
dec
cli
inc
push
sub
popf
xor
mov
test
inc
dec
lret
jmp
int3
jns
shll
pop
clc
mov
mov
sahf
clc
and
cmp
mov
xchg
xchg
int
adc
enter
fwait
imul
inc
adc
loop
hlt
and
mov
push
dec
cmp
cli
fldcw
xchg
ja
xor
or
in
movsb
sub
push
inc
adc
fdivs
mov
shrl
mov
lea
pop
jl
mull
dec
add
ret
leave
daa
dec
and
sub
aas
das
push
pop
lahf
dec
dec
test
ja
dec
jns
pusha
sbb
xor
adc
stos
mov
or
add
push
mov
dec
jb
aad
mov
fiadds
dec
mov
or
icebp
sbb
mov
cmp
fcomip
stos
mov
push
push
test
xchg
mov
and
enter
jo
dec
je
xor
in
push
inc
ja
xchg
arpl
xor
fnop
inc
addr16
in
sbb
sub
jae
std
popf
repz
jne
and
cmp
loopne
or
cmpsb
mov
das
cmp
mov
aam
adc
imul
fs
cltd
in
ret
mov
clc
or
insl
push
nop
imul
aad
pop
or
and
cmp
int
pop
hlt
nop
mov
sbb
pushf
inc
cmpsl
js
lret
aad
mov
inc
ret
fs
inc
aas
xchg
imull
imul
out
leave
push
fsts
adc
jno
jns
cmp
push
in
aas
lret
mov
or
sub
mov
adcb
pop
lcall
inc
jno
enter
or
mov
xchg
and
jge
inc
aad
mov
out
arpl
xchg
push
or
loop
cmp
iret
mov
xor
lods
xor
jecxz
add
jae
jo
std
push
sub
adc
in
ds
test
fcoml
jge
xchg
mov
fisttps
js
jnp,pn
cld
daa
cmc
lods
sub
pop
push
jnp,pt
or
adc
mov
data16
jns
jle
and
je
or
sub
add
rcrl
addr16
jge
fcoms
cmpl
cmp
daa
jns
xchg
sti
xor
in
xchg
dec
and
mov
mov
inc
mov
pop
test
sub
bound
pop
les
lds
cmpsb
and
setne
jp
test
movsl
fs
mov
xchg
outsl
inc
je
xchg
and
inc
fimull
cld
ljmp
out
sub
pop
ljmp
testb
dec
pop
push
cltd
push
dec
or
lcall
subb
in
mov
pop
jns
xor
outsl
xchg
sahf
add
fdivrl
popf
addr16
jp
push
jo
lcall
stc
sub
cmp
or
ficoml
inc
stos
jae
or
mov
ja
jg
call
dec
push
push
sub
out
sbb
mov
repnz
xchg
xchg
lock
dec
jbe
negb
xor
stos
pop
inc
orb
fisubrl
xchg
mov
jno
push
mov
push
mov
sti
clc
dec
outsl
or
jno
inc
dec
in
sahf
ss
mov
jnp
fwait
fwait
test
jle
jne
shll
mov
xchg
sahf
aam
arpl
int3
lret
fsubs
popa
popf
lret
inc
ficoms
clc
cwtl
cmpsl
fcompl
push
inc
dec
hlt
inc
jg
xchg
movsb
sub
mov
sbb
in
and
jo
pop
mov
sbb
mov
daa
shl
sbb
push
lret
jge
out
mov
mov
cs
pop
fucomp
mov
sbb
divb
cwtl
lods
mov
orb
in
mov
mov
lds
test
int
cmp
inc
or
aam
mov
mov
jbe
addr16
mov
fidivs
adc
cwtl
shll
addb
mov
add
stc
push
popa
nop
xchg
inc
stos
jbe
in
into
and
aam
test
punpckhwd
push
jp
das
leave
scas
jno
add
xchg
icebp
jg
dec
ror
push
sbb
pushf
lret
jne
xor
jbe
lahf
fs
dec
mov
jp
mov
cs
cwtl
fxch
fildl
adc
scas
std
iret
mov
addr16
xchg
or
jge
js
pop
jmp
dec
out
sbb
adcl
in
rolb
ljmp
adc
rorl
fwait
push
pop
je
outsb
incl
add
std
dec
cltd
addr16
pop
insb
cmp
bound
and
out
and
lock
xor
lods
pop
inc
daa
adc
or
cmp
sub
out
fwait
xchg
jmp
pop
lods
push
add
orl
or
pop
imul
test
pop
out
pop
adc
pop
out
loope
data16
les
inc
fst
and
mov
sbb
in
push
xchg
mov
xchg
in
shlb
or
xchg
inc
out
imul
cwtl
lea
mov
cli
xchg
je
icebp
mov
add
sbb
pop
pop
sahf
std
shlb
sbb
movaps
nop
adc
dec
hlt
pop
mov
icebp
xor
add
fists
hlt
inc
dec
dec
fsubs
adc
xor
pop
cmp
dec
add
movsb
or
fistl
dec
push
sub
lcall
sub
les
and
in
add
cmp
mov
repz
in
shl
jle
adc
leave
std
cmp
xchg
test
leave
jp
adc
in
sbb
sbb
cmpsl
mov
test
ja
roll
lods
popf
jo
stos
fidivrs
subl
loop
xchg
adc
mov
xchg
jl
push
xor
pushf
adc
stos
push
jg
mov
lods
fs
test
jmp
dec
out
andb
jno
inc
dec
cli
cmpsb
push
jb
test
mov
mov
xchg
adcl
and
sub
xchg
sub
and
jecxz
jge
cltd
mov
aad
mov
jg
cmp
pop
mov
cli
cmp
not
xor
icebp
push
add
push
jno
int
dec
push
or
in
dec
lock
pop
lock
jg
loop
stos
mov
in
pop
int3
je
jnp
cmp
jmp
loope
add
pusha
adc
pop
arpl
cmp
ss
out
mov
movsl
dec
ret
in
icebp
xchg
mov
mov
test
xor
sub
or
mov
mov
mov
push
mov
dec
lret
int
int
dec
cmp
mov
mov
cmp
sbb
ret
test
push
fimull
cmp
fdivp
add
jbe
out
int3
lea
add
mov
pop
pop
mov
das
xor
fidivrl
mov
lret
ljmp
aam
je
pop
outsl
cwtl
push
push
or
push
in
mov
mov
imul
mov
and
cmp
jle
mov
sub
out
ret
pop
cmp
push
popa
inc
sub
je
fs
cmp
out
insb
dec
sub
adc
xchg
xor
inc
mov
ljmp
mov
lods
sub
xchg
notl
cmp
xor
push
gs
rolb
cmp
sub
push
xlat
in
mov
jle
dec
xchg
cld
in
orl
push
scas
add
pop
cs
xlat
mov
adc
inc
pop
ret
jb
mov
sarb
adc
nop
adc
adc
mov
sub
out
sbb
sub
in
cmp
jl
sbb
push
sti
addr16
shrl
pop
rclb
dec
in
pop
test
aaa
lcall
orl
repz
push
fisttps
scas
repz
jp
push
fsubrl
scas
adc
ds
clc
push
xchg
ds
data16
cmpsb
pushf
rcrl
dec
loope
imull
inc
sub
dec
cli
mov
fstps
or
add
and
imul
fcoms
cmp
stc
js
jb
sub
sbb
enter
call
mov
inc
xor
push
js
and
cs
cwtl
cs
pop
repz
xor
pop
test
push
lods
add
jo
xor
jnp
fs
shlb
dec
inc
arpl
aad
push
mov
fwait
pop
xchg
lds
stc
into
jo
or
and
jae
cld
or
lret
lods
push
inc
inc
fisttpl
fcoms
add
stos
lcall
pop
and
dec
pop
scas
pop
mov
js
and
enter
ret
jecxz
dec
xorl
and
outsb
mov
jp
jae
inc
dec
aaa
negb
shl
into
cld
push
insb
fwait
add
pop
aad
shll
jp
outsb
jecxz
mov
lock
cmp
mov
bound
push
cwtl
cmp
push
or
mov
fbstp
outsl
mov
inc
daa
movsl
shlb
fwait
jmp
pop
add
mov
jbe
jmp
jle
in
fdivrs
pushf
sbb
mov
inc
xchg
leave
sbb
das
add
mov
add
sbb
inc
add
xor
cmp
add
xchg
sub
sbb
sahf
les
and
lret
scas
adc
pop
outsb
nop
es
fdiv
push
movb
loope
push
xchg
xor
stc
ret
push
xor
pop
in
cmp
shl
pushw
test
xor
je
std
xchg
xorl
testb
into
sbb
std
shrb
dec
mov
push
std
xor
popf
cmc
mov
mov
sub
ret
xchg
das
aas
pop
shrl
lds
cli
adc
nop
mov
push
leave
sbb
jne
nop
sbb
fisttpl
fmuls
and
push
fisubs
mov
dec
add
jno
mov
lock
mov
in
adc
inc
mov
sbb
sub
gs
dec
testl
das
fldenv
loope
and
and
and
mov
jb
testb
mov
repnz
into
rcrb
adcl
in
shl
jo
jb
dec
sbb
test
mov
and
jns
pop
xchg
fimuls
out
les
and
or
sbb
and
sub
push
dec
hlt
pushf
adc
jo
mov
cmp
mov
dec
mov
push
cmp
fstpl
mov
ficomps
into
push
dec
out
in
or
xor
out
mov
sbb
add
push
pop
clc
test
imul
jnp
pop
jmp
pop
jge
mov
adc
mov
sarb
insl
cmp
push
fnstenv
adc
iret
int
xchg
jns
inc
adcl
sbb
sub
mov
call
mov
gs
arpl
xchg
pop
je
movsb
sbb
bound
sub
movsb
div
es
fsubrl
sub
cmpsl
inc
adc
sbb
and
data16
sub
pop
mov
ss
pop
outsl
mov
sub
pusha
dec
fwait
lods
sub
int
cli
aaa
in
lods
jbe
mov
cmp
aaa
add
mov
bound
inc
pop
clc
xchg
cltd
jno
xor
mov
inc
add
leave
out
pop
mov
imul
jae
ror
leave
in
adc
cmpb
jge
inc
fdivrl
or
push
lret
lds
add
test
fidivs
dec
dec
cmpl
mov
mov
adc
mov
xchg
cmpsb
imul
fstpl
aas
cltd
lock
adc
inc
das
adc
and
nop
adc
pop
lea
pop
mov
popa
jb
outsl
inc
or
daa
dec
adc
sub
mov
lds
ret
xchg
xchg
imul
mov
jmp
push
rcrl
loop
sbb
popf
inc
cli
inc
cli
and
cs
fxtract
iret
cmp
je
adc
jne
inc
and
les
orl
rcl
xor
outsl
or
xor
insb
pop
int
pop
sub
arpl
inc
push
jnp
lock
mov
sub
cld
push
add
popa
push
cmp
inc
pop
ror
popa
push
sbb
scas
dec
lods
add
arpl
imul
cltd
pop
fwait
pop
sub
es
sub
movzwl
xlat
jno
sbb
orb
sub
mov
repnz
mov
inc
scas
xchg
sbb
push
add
inc
add
cmpsl
cmp
gs
mov
dec
cmc
push
mov
and
sbb
inc
pop
decb
and
pusha
scas
out
test
cs
int3
fcomi
lods
jle
imull
xchg
test
push
int
mov
dec
xchg
mov
jbe
in
or
inc
scas
out
mov
lret
lret
sbb
mov
enter
xchg
pop
add
fld
cmp
daa
ret
mov
nop
jl
movsl
imul
or
pop
cmc
pop
jb
push
jo
out
rolb
jp
xor
mov
xor
mov
sbb
lea
lods
outsb
icebp
test
mov
out
adcl
pop
pop
aad
xchg
mov
bswap
push
xor
gs
stc
rorl
xchg
inc
aam
in
pop
push
dec
sbb
sub
sub
mov
push
pop
in
rclb
sti
sbb
enter
or
add
addb
lds
jle
dec
adc
lods
add
pop
push
int
loopne
scas
dec
pop
repnz
stc
mov
jns
xor
in
mov
sub
and
xlat
test
push
push
mov
in
mov
add
mov
testb
mov
mov
xchg
std
and
jo
inc
inc
clc
lahf
sub
out
rcrb
loopne
mov
adcb
not
int3
inc
jmp
jl
jbe
sub
test
add
xor
xor
shrb
loopne
jo
or
xlat
pop
xchg
ds
push
movsl
jp
add
adc
mov
sbbl
adc
dec
pop
sub
or
push
ss
pop
into
int3
xchg
xor
iret
hlt
mov
or
mov
jle
fwait
mov
das
mov
out
dec
dec
cmp
test
mov
fisubs
mov
pop
pop
shr
inc
xchg
mov
mov
push
xor
xchg
pop
lods
leave
push
in
inc
test
add
sbb
mov
push
xchg
bound
fmull
insl
clc
push
fdivs
pop
xor
aad
inc
add
lea
adc
sub
adc
sub
outsb
addr16
mov
mov
push
pop
push
js
orl
mov
iret
cmp
outsb
iret
aas
cmpsl
aas
jl
mov
insb
ss
jnp
mov
or
in
pop
rcrw
or
mul
popf
jo
cmp
movsl
pop
addl
push
cmc
mov
int3
jg
icebp
dec
cmpsl
sub
inc
sbb
insb
jae
pop
mov
xchg
out
cmpsl
lcallw
ss
mov
stos
and
sti
testl
in
add
faddl
mov
or
outsb
inc
xor
rorl
mov
nop
cwtl
xchg
fs
push
mov
sti
xor
inc
jb
jle
dec
fmull
jo
pop
fbstp
push
cs
adc
sahf
out
lds
or
cmpsl
add
xchg
icebp
mov
repz
aaa
sbb
cmpsb
adc
clc
sub
push
push
fnstenv
jl
pop
and
aas
xchg
mov
loop
sbb
mov
in
mov
xchg
or
dec
pop
mov
pop
stos
cmp
mov
loop
or
mov
or
mov
stc
shlb
mov
adc
incb
mov
sbb
add
cmpsl
mov
push
dec
pop
pop
sub
add
ret
or
and
pop
mov
mov
enter
jne
cmp
xlat
cmpsl
bound
sub
pop
stos
mov
add
cwtl
jp
cltd
pop
outsb
fldt
push
fadd
stos
dec
hlt
lret
sub
outsb
dec
aaa
outsl
daa
lcall
jmp
gs
mov
arpl
and
in
andl
outsl
sub
pop
sti
xchg
ljmp
loopne
and
jae
sbb
in
mov
or
lock
mov
int3
cltd
jnp
pusha
or
inc
notb
jecxz
xor
pop
mov
dec
inc
add
gs
popf
cli
cmpb
sub
and
aad
mov
xlat
inc
js
sbb
add
repz
imul
sahf
stos
jns
in
imul
data16
hlt
dec
stos
loope
idiv
or
push
jle
iret
iret
inc
cmp
xor
add
jmp
in
stos
jb
cmpb
and
sti
inc
jns
cli
mov
sti
pop
and
cmpsl
pop
cli
fcoms
sbb
cmpsl
and
pop
jmp
mov
push
mov
adcl
fisttpll
lods
fnstenv
sbb
mov
mov
scas
enter
push
pop
dec
xchg
push
nop
test
and
out
mov
mov
adc
repnz
jae
and
scas
aas
dec
jae
in
punpcklwd
movsl
out
pop
push
fstpl
aad
movsl
cmpsb
dec
hlt
cmp
outsl
sub
lds
test
icebp
jle
icebp
or
in
aam
or
mov
push
mov
incb
rorl
je
pop
inc
inc
mov
push
or
test
jno
push
repz
fsubrl
pop
jb
enter
das
pop
mov
test
stc
scas
in
daa
movsb
jp
sub
sar
imul
std
sub
xchg
out
sub
mov
pop
js
mov
lods
pop
dec
icebp
lret
adc
mov
dec
jb
ret
loop
mov
cmp
jl
push
loop
das
das
sub
cmp
push
in
jg
sbb
dec
push
jge
out
xchg
mov
pop
mov
dec
pop
in
leave
fcomi
push
xor
cmp
fdivrl
ret
add
dec
dec
mov
mov
add
imul
mov
sahf
inc
out
mov
test
lods
xor
jbe
scas
cmpsb
push
loop
sbb
out
sbb
je
lcall
popa
push
mov
push
xor
sub
sahf
out
insb
test
xor
aam
pushf
lods
repnz
lret
sbb
xor
leave
dec
fcmovnbe
xor
cmpsl
addr16
test
or
push
jg
outsl
and
cmc
ficoml
mov
repz
jo
inc
mov
leave
pop
stos
push
cltd
add
mov
push
int
add
cli
add
sbb
jo
aaa
test
pop
push
jnp
imul
fcoms
outsl
mov
mov
cmp
pop
fs
push
push
dec
inc
fmuls
ds
loop
out
es
push
sbb
sarb
hlt
ret
add
pop
push
bound
andl
loope
cmpsb
bound
mov
popa
jp
aad
jg
push
and
scas
pop
in
imul
push
add
sbb
jmp
scas
mov
sahf
mov
jle
je
dec
or
push
bound
mov
pop
sub
mov
adc
and
mov
push
aaa
aas
adc
xchg
mov
sub
arpl
pop
pop
sub
sub
call
cmpsl
test
mov
add
cmpsb
and
iret
in
mov
jmp
pop
cmp
mov
mov
pop
cmpsb
xor
ds
sbb
aam
jge
lds
movb
dec
adc
call
shll
sbb
jbe
mov
lods
or
add
lar
pop
inc
cwtl
mov
mov
mov
je
aas
mov
mov
testl
test
popf
fdivs
data16
xor
nop
int3
inc
xor
jnp
vdivss
imul
xchg
ss
sbb
xor
mov
filds
sub
adc
xor
jge
mov
or
call
into
sub
out
pop
push
pushf
xchg
mov
sbb
xchg
dec
mov
pop
adc
fwait
jle
imulb
int
push
shl
mov
leave
lods
imul
cmpsl
push
pop
sarl
in
inc
or
repnz
pop
sub
fcoms
arpl
push
add
daa
fildl
lods
adc
popa
inc
gs
dec
lcall
adc
daa
mov
sub
inc
ret
jne
inc
rcr
sbb
fbld
add
ret
clc
fwait
adc
mov
ja
or
jb
scas
sbb
pop
cmp
sub
adc
ucomiss
pop
aam
ljmp
fwait
add
sub
incb
outsb
cmp
out
aad
or
gs
add
jg
mov
cmp
adc
in
frstor
ja
xor
outsb
mov
add
cmc
jne
int3
sbb
mov
int
mov
push
push
dec
adc
in
je
cmp
int3
fldt
pop
ds
dec
shll
and
ss
outsb
cmp
je
into
cmp
mov
inc
sbb
ret
sub
pusha
mov
inc
pop
in
sbb
xchg
fisubrs
sahf
push
sub
dec
or
loope
pop
fnstenv
and
ret
ja
cltd
cmp
and
fsubr
mov
popf
sbb
xchg
pop
rcl
out
movsl
cmc
flds
and
inc
je
std
mov
push
or
ret
xlat
std
mov
inc
dec
fldcw
xor
mov
stos
xor
mov
icebp
outsb
push
pusha
loopne
sbb
jle
stc
imul
lock
cmp
and
aas
xor
push
push
in
sbb
call
test
daa
jl
bound
mov
xor
mov
push
push
out
imul
lahf
adc
stc
fisubl
mov
bound
loop
and
mov
push
fbld
push
fbld
mov
adc
aas
xor
mov
dec
aaa
fwait
and
xchg
xlat
add
jecxz
negb
adcl
sahf
lahf
push
xchg
or
mov
mov
xor
mov
insb
mov
int3
or
and
jge
push
in
xchg
xor
add
adc
dec
enterw
gs
adc
inc
dec
cs
add
mov
popf
xor
jp
aas
repz
fsub
jle
inc
out
xchg
pushf
xor
shrl
stc
shr
sbb
dec
insl
ljmp
or
jp
pop
push
adc
shlb
sub
nop
fcmovb
mov
scas
gs
movsb
scas
shlb
push
nopl
rclb
mov
push
call
arpl
xor
xchg
addb
loop
loope
sbb
popf
jno
shrl
mov
inc
aas
pop
call
lcall
lahf
jp
popa
and
ret
or
and
jne
cmp
jo
int3
mov
es
add
fs
js
xchg
cmp
xor
mov
xchg
push
mov
pop
dec
iret
lcall
and
popf
leave
cld
lret
dec
dec
in
cmp
mov
hlt
lock
and
mov
cli
fistpll
sub
xchg
movsl
lret
pop
mov
pop
sub
pop
stos
xor
out
xlat
int
testl
sub
xchg
xor
scas
pop
es
mov
leave
stc
cli
xchg
xor
jge
div
gs
scas
push
push
and
xchg
fadds
add
push
fucomi
dec
jno,pn
pop
outsl
inc
lods
in
cltd
jecxz
lahf
or
fwait
mov
jbe
pushf
jns
xchg
sbb
cmpsl
rcrl
mov
mov
push
mov
je
mov
in
cmp
imul
push
jp
femms
mov
mov
inc
stos
pop
jno
les
cmp
or
sub
and
shrl
lret
fstl
int3
pushf
sub
or
loopne
lods
aam
or
jge
addr16
fists
mov
mov
mov
or
shll
xchg
lcall
or
xchg
sbb
xchg
cli
jbe
ret
lret
outsb
xchg
aam
xchg
adc
cmp
push
push
in
cli
push
nop
xor
jbe
mov
notb
inc
mov
push
roll
or
les
out
in
cld
dec
sub
add
mov
mov
xchg
push
add
dec
inc
jnp
jecxz
mov
cmc
cmpsl
adc
add
jecxz
mov
jge
jp
aas
push
add
div
xor
adc
jp
xlat
mov
fmul
pop
bound
and
lock
movsb
sub
aad
push
mov
movsb
jmp
push
into
test
and
insl
or
xchg
inc
push
ds
push
jecxz
test
adc
stos
adc
sbb
adc
fs
cmp
xor
inc
xchg
pop
insb
inc
mov
inc
mov
ret
ficoml
or
push
enter
add
push
cmpsb
fmul
ds
out
add
lret
mov
mov
cmp
lcall
lea
xlat
sbb
mov
add
jne
ret
jb
lea
and
xchg
adc
in
sbb
jg
fsubs
mov
repnz
or
dec
push
es
lret
int3
sbb
mov
inc
or
jnp
cmp
cmp
and
xchg
push
faddl
xorb
pushf
add
jne
lods
aas
cmp
mov
bound
pop
pop
mov
ja
pusha
add
inc
cmp
jae
in
sub
outsb
jo
mov
lahf
xchg
enter
outsl
mov
ret
mov
add
pop
stos
inc
andb
dec
and
jl
pop
mov
fsubrl
fbstp
or
ds
data16
adc
jo
mov
cmpsb
and
not
test
icebp
es
inc
jno
cmp
pusha
in
fistpl
jno
push
pop
xchg
mov
out
xchg
pop
outsb
outsb
imul
mov
xchg
adc
jnp
push
sub
and
cwtl
dec
jmp
mov
adc
cmpsl
or
dec
inc
pop
mov
lods
call
sub
hlt
dec
jbe
in
inc
mov
je
jmp
pop
push
inc
jno
add
fwait
movl
pop
push
lret
fs
adc
adc
add
cltd
pop
mov
xchg
roll
fcmovbe
or
decl
cld
int
jmp
mov
cmc
cvtdq2ps
jg
sahf
lods
jb
pop
lret
ds
int3
xchg
lcall
movsl
mov
ret
cmc
jnp
inc
fcmovnu
jmp
xchg
push
inc
cmp
xchg
test
pop
mov
xchg
ljmp
lock
das
push
mov
mov
insb
xorl
fs
aaa
sub
fsts
aad
movsl
or
rolb
jg
sub
inc
sbb
xchg
out
dec
aaa
adc
les
mov
push
addr16
mov
js
push
leave
mov
fnstcw
jne
insb
mov
dec
mov
imul
movsl
xchg
ror
inc
mov
dec
mov
mov
jg
ret
movsb
push
lahf
adc
cmp
ljmp
pop
cmp
mov
cmp
into
imull
cli
mov
mov
jbe
mov
js
mov
cmp
mov
adc
fadds
xor
inc
or
and
mov
jp
out
pop
mov
mov
imul
in
and
sbb
mov
cmp
sbb
adc
adc
ss
or
outsl
iret
leave
rorl
jmp
pop
jle
sbbl
sub
jnp
leave
sbb
fwait
and
pop
jg
dec
sub
imul
xorl
lock
mov
xor
out
or
jl
test
imul
lds
sub
pop
xchg
inc
test
inc
popa
cmp
or
jmp
pop
stos
lret
scas
xor
lods
test
jge
mov
push
bound
inc
fdivrs
and
pop
inc
dec
xchg
push
sub
mov
dec
jnp
xchg
dec
mov
test
xchg
pop
pop
nop
dec
fnstenv
daa
mov
add
sar
mov
jno
imulb
call
ret
or
aas
loope
push
cmpb
movsl
fmuls
imul
add
aam
mov
mulps
xchg
shr
loopne
fadd
insb
mov
arpl
jnp
add
out
es
mov
outsl
inc
xor
out
inc
and
push
stos
fs
test
out
inc
add
je,pt
int3
clc
loope
popf
or
lret
mov
inc
movsb
mov
xor
mov
dec
rclb
pop
push
clc
andl
inc
retw
push
xchg
xor
dec
repz
sbb
aam
inc
sub
pop
add
cs
pop
adc
mov
jmp
flds
sub
mov
adc
gs
add
lds
cwtl
cmpsb
xor
cmpsb
stc
call
stos
ja
js
orl
loop
add
repnz
cmp
insb
rcrb
mov
pusha
inc
xchg
adc
imul
add
clc
cld
stos
pop
jns
in
sbb
pusha
pop
push
mov
ja
sbb
or
les
clc
in
adcb
jo
lods
int3
dec
mov
adc
loop
cltd
mov
jmp
dec
rol
sub
cmpsl
in
push
fdecstp
and
fstpl
inc
cltd
or
sbb
stos
cmp
popa
xchg
js
inc
ret
adc
outsl
stos
in
jl
push
xor
lock
or
xchg
xchg
sub
adc
cmpsl
mov
pop
sbb
push
mov
fildll
sbb
mov
ja
mov
mov
and
js
xchg
and
incl
or
inc
leave
jle
mov
sbbl
sub
mov
xchg
or
cli
mov
lods
pop
jns
call
aam
cmc
popf
dec
mov
dec
xor
mov
das
pushf
test
loopne
es
jecxz
mov
test
pushf
sahf
cmp
mov
rorb
mov
jae
mov
cmp
pop
pop
int
dec
repnz
pmaxub
add
cmpb
mov
add
stc
fcoms
sub
nop
ret
jmp
lods
icebp
xor
pusha
bound
mov
scas
ret
mov
ret
scas
inc
aam
insl
in
or
or
xchg
or
push
xor
sub
outsb
push
xor
scas
js
lock
add
inc
dec
jne
mov
icebp
xchg
inc
outsl
icebp
fcmovnbe
sbb
mov
icebp
xor
hlt
gs
movsb
fistps
sarl
aam
xor
or
fistpl
xor
dec
mov
hlt
or
cld
sub
mov
jno
gs
jmp
xchg
inc
mov
loope
gs
and
bnd
dec
xbegin
fld
je
ret
xor
jg
mov
or
jg
add
sub
leave
sub
flds
mov
bound
cmp
jae
imul
shl
les
mov
pop
mov
add
xchg
jae
mov
inc
aaa
push
imul
addr16
jecxz
repnz
xchg
fildll
ds
sub
jnp
int
rcr
sahf
mov
out
out
jae
inc
mov
pushf
adc
sub
inc
notb
xchg
scas
aaa
pop
mov
push
enter
cmp
pop
sbb
jg
in
or
mov
add
mov
pop
mov
xchg
das
pop
les
xchg
fnstenv
cli
icebp
mov
sbb
es
mov
mov
nop
xchg
mov
xchg
xchg
pop
decl
cltd
xlat
test
xchg
or
dec
mov
inc
nop
and
lret
lret
inc
aas
mov
mov
mov
pop
movsb
aaa
iret
nop
push
in
rcrb
inc
dec
and
shll
mov
xor
xchg
sti
clc
jp
or
jl
xor
push
in
cmc
xor
and
dec
xor
aaa
inc
adcb
mov
xchg
jno
jecxz
aad
loopne
adc
cmp
xor
jne
add
sbb
insl
xor
cmp
pop
dec
arpl
jg
push
subl
pop
into
pop
mov
movsb
data16
aaa
mov
push
xchg
mov
sub
inc
lret
fidivrl
mov
fldt
stc
xchg
daa
xor
ret
inc
pop
xchg
daa
pusha
mov
cmpsb
call
cmp
clc
mov
and
imul
test
cmpb
inc
mov
pushf
aad
movsl
mov
jbe
fisubrs
mov
mov
and
cli
arpl
sbb
mov
lret
test
lea
hlt
xor
mov
fs
fmuls
shlb
outsl
sbb
cmp
mov
jns
pop
test
jp
outsb
fs
bound
std
push
insb
mov
arpl
mov
mov
or
cmp
sbb
jmp
scas
notb
inc
test
cmc
add
mov
adc
xor
fisubrl
call
ret
sub
push
ljmp
pop
data16
mov
cmp
xchg
push
rcr
js
cld
adc
roll
sahf
je
mov
roll
xor
movb
outsl
daa
es
xor
data16
cmpsb
dec
mov
dec
or
add
aad
test
out
push
sub
cmp
and
out
cmp
fidivrs
mov
repnz
stos
add
imul
repnz
data16
inc
loopne
mov
and
dec
mov
mov
push
inc
push
pop
ja
ret
cmpsb
adc
add
cmpb
or
imul
mov
cmc
inc
jns
out
mov
icebp
testb
push
dec
mov
rol
jmp
test
jp
sub
cmp
and
push
inc
xor
mov
movsl
cwtl
loop
ja
and
mov
jl
jmp
nop
mov
fnstcw
fstpt
and
ljmp
andl
fsts
inc
in
jo
fsubrl
das
in
mov
mov
ljmp
inc
loop
fnsave
add
cs
fistpll
lcall
dec
movsl
lea
mov
cmpsl
sbb
or
mov
ds
lods
mov
call
dec
cmp
sbb
fs
nop
insl
fwait
in
push
loopne
sub
mov
dec
lea
scas
pusha
test
js
clc
icebp
fstl
mov
ds
mov
adc
in
push
iret
popf
testl
mov
ficomps
in
cmp
cmp
push
cmp
xchg
sahf
lret
jo
push
repnz
mov
mov
in
jp
fwait
popa
movsb
movsl
xor
in
lret
loope
inc
pop
mov
outsb
outsb
jmp
mov
or
xchg
mov
stos
mov
pop
enter
jbe
loopne
jo
mov
repnz
int3
nop
xchg
jnp
or
lods
in
push
ja
sbb
mov
decb
fmull
and
sub
fwait
sbb
mov
push
sbb
jg
lret
pop
rcl
dec
lock
sarl
dec
popa
loope
push
mov
xchg
imul
mov
sbb
add
jae
in
mov
test
sub
test
add
data16
imul
aas
inc
xchg
mov
adc
les
jl
mov
out
cwtl
stos
std
xchg
subl
add
dec
pop
jmp
outsb
xor
pop
dec
sbb
fcomps
notl
mov
insb
cmp
leave
out
adc
nop
daa
add
mov
cltd
push
and
lahf
dec
pop
inc
jbe
cmp
loopne
inc
cs
sbb
xchg
iret
testb
sbb
mov
cmp
and
push
cmc
push
pop
dec
mov
cmp
and
nop
dec
pop
cld
lods
sub
addb
push
push
les
or
or
inc
jb
sbb
add
push
ljmp
je
xor
inc
inc
push
jne
fs
icebp
movsb
in
or
movsb
frstor
rcrb
cmp
adc
aas
cmp
jmp
hlt
imul
movb
adc
mov
push
test
mov
bound
test
and
scas
das
out
scas
adc
cmp
outsl
push
push
fptan
addr16
aam
mov
or
cmp
jo
je
sbb
adc
mov
adc
dec
mov
xchg
and
fcomps
fsts
or
lret
orl
bound
cmp
out
and
push
out
add
in
mulb
fidivrl
orl
insl
xor
mov
dec
mull
adc
iret
mov
xor
and
in
cli
mov
sub
lret
sub
outsl
add
dec
ja
xor
popf
pusha
sub
sbb
fwait
jecxz
pushf
repnz
cwtl
xchg
pop
pop
jl
add
dec
lea
insb
in
pop
jo
fstp
add
cli
pop
cmp
insl
cld
adc
insl
push
or
add
sbbl
push
fistl
rcrb
cmpsb
cli
and
push
aam
mov
push
pop
aaa
pop
jge
adc
testl
mov
orl
insb
cmpl
mov
add
sbb
mov
sub
adc
insl
adc
xchg
mov
mov
scas
fsubs
out
scas
inc
dec
ret
stos
or
hlt
push
jns
mov
outsl
xchg
jns
pop
sbb
mov
sub
sub
inc
cld
ss
jp
arpl
pop
cmp
cmp
adc
div
andl
cmpsl
dec
cmp
test
dec
nop
insb
jns
les
mov
lcall
xor
repz
rcrb
scas
jo,pn
jnp
call
jg
mov
jmp
pushw
inc
or
xchg
add
push
stc
arpl
loopne
jp
push
xlat
inc
movsl
jbe
loope
and
adc
xlat
or
mov
aad
int
push
add
in
add
insb
loop
sub
jge
out
rolb
aas
xchg
jb
sti
xor
test
push
jp
cmpl
sub
xchg
lret
push
out
add
stos
adc
pop
push
pop
stc
cmp
je
xor
cltd
pushf
xchg
or
fisttps
shl
adc
sahf
dec
out
iret
or
mov
rol
push
jmp
push
mov
ja
add
sbb
scas
add
dec
aad
daa
or
loopne
adc
or
xchg
push
add
pop
pop
std
insl
sub
out
add
je
xor
movsb
and
or
mov
cltd
movsb
mov
decl
adc
pop
sub
lock
sub
push
aas
xchg
push
notl
xchg
or
sbb
xchg
inc
push
pop
in
pop
stos
movsb
push
sti
pop
mov
stos
sbb
lret
inc
mov
xor
xchg
lcall
mov
pop
xor
aas
pop
dec
repz
jb
cmp
popf
mov
dec
rcr
pop
popl
outsb
bnd
out
je
xchg
and
out
aam
out
sahf
jg
popa
or
jp
rcrb
push
cmp
nop
mov
jno
inc
jle
xlat
in
xlat
jbe
lret
das
or
xchg
mov
jae
add
out
dec
jle
test
mov
in
imul
dec
aam
test
mov
xor
into
pop
xchg
popf
lds
in
movsl
pop
mov
jge
push
jnp
jae
insb
lret
mov
fisubrs
arpl
pop
inc
stos
lods
ja
pop
jbe
arpl
fldcw
mov
xor
adc
ret
jno
pop
jnp
fdivl
sarl
out
stos
push
push
mov
pushf
loopne
jp
mov
xor
xchg
ljmp
xor
movsl
ret
pop
cmp
clc
ds
popf
mov
push
jo
rcll
pop
fildll
popa
pop
mov
xchg
jl
and
adc
mov
mov
arpl
jl
shll
aad
lds
jno
andb
decl
push
or
pop
pop
jp
jecxz
push
push
cmp
rorb
jg
push
out
imul
popl
and
push
sub
jp
sub
cmp
out
mov
mov
cmp
nop
rorb
clc
pop
push
mov
adc
aam
push
ficomps
jcxz
stc
mov
orl
inc
in
imul
ficoml
jl
test
js
sbb
pop
and
adcl
fs
jo
je
inc
xor
pop
adc
inc
inc
out
jns
jns
bswap
sbbl
jecxz
add
call
adcl
sbb
xorb
push
sub
mov
push
cs
cmp
lock
adcb
push
leave
mov
pop
or
les
pop
xor
movsl
xchg
nop
xchg
jl
outsl
cmp
mov
imulb
testb
mov
cs
mov
mov
sbb
jecxz
push
insb
mov
adc
cs
add
jae
cmp
jae
mov
mov
leave
dec
cmp
inc
mov
pusha
mov
push
mov
sbb
inc
pop
jnp
sbb
js
test
pop
add
jo
or
incl
imul
fiaddl
es
adc
mov
jmp
pop
mov
test
popa
add
mov
outsb
or
ds
and
test
xchg
fimull
int
subl
int3
mov
ret
scas
fisttpl
pop
out
jge
rcrl
dec
inc
add
pop
subl
lock
cld
pop
scas
nop
vcomisd
aam
movsb
syscall
into
xchg
lret
negl
fs
loope
mov
sub
ss
lahf
pop
push
inc
or
xor
shl
inc
push
mov
mov
or
insb
sub
pop
pop
lahf
mov
dec
mov
sbb
adc
pushf
outsb
fs
add
orl
xchg
cld
pop
jns
sbb
jnp
faddl
in
movsl
pop
dec
pop
push
in
rcl
mov
mov
sub
inc
int3
loop
sahf
fsin
jb
xchg
pop
mov
add
dec
inc
popf
push
insb
push
push
xchg
pop
jmp
jb
scas
outsl
insl
adc
loop
call
push
out
push
dec
jecxz
scas
rorl
dec
mov
aam
arpl
mov
imul
rorl
inc
cmp
pop
jp
push
mov
cmp
xchg
daa
stos
mov
scas
mov
lock
pop
xor
rcrb
daa
jg
sub
jge
jl
out
sbb
pop
sub
ret
fstl
xchg
pusha
fs
gs
insl
sub
je
sub
lcall
stos
data16
add
sbb
inc
leave
lcall
mov
lods
stos
andb
push
insl
mov
and
xor
and
xor
pop
jg
mov
incl
fwait
ss
in
std
or
adc
mov
mov
mov
and
jecxz
aad
sbb
int
iret
inc
pushf
mov
mov
push
movsb
dec
jb
mov
cld
pop
jbe
clc
sub
pop
adc
mov
cmp
inc
push
rolb
inc
loop
test
dec
ss
lret
mov
mov
mov
shrl
push
mov
mov
or
cmpsl
popf
dec
xchg
cmpsl
add
shll
xorl
in
jns
fcmove
sub
mov
dec
mov
sahf
mov
jmp
out
enter
fisttps
inc
or
pop
sahf
pushf
insb
icebp
mov
in
cmp
addr16
cmpsb
addr16
nop
cli
data16
leave
adc
mov
negl
lahf
filds
cmp
cmp
fstpt
inc
pop
or
pop
ret
jno
pop
incb
pushf
push
xor
pop
add
mov
inc
add
mov
push
fiaddl
jne
leave
aad
add
xor
and
mov
stc
push
pop
xchg
sbb
add
push
push
push
es
adc
shl
mov
leave
lods
out
orl
sbb
loopne
dec
mov
aaa
mov
outsl
cs
xor
pop
mov
js
daa
clc
dec
outsb
or
xlat
lahf
imul
std
mov
mov
add
cmp
add
imul
sbb
loope
push
aad
mov
adc
sbb
sub
adc
scas
mov
jmp
cmpsb
push
sub
lea
scas
loop
push
mov
lahf
pop
mov
mov
notb
sub
jnp
inc
sbb
sub
or
push
das
scas
loope
adc
xor
xchg
cli
xor
cld
popf
adc
adc
popf
mov
jae
or
std
or
add
insl
pop
outsb
jne
sti
enter
popa
in
adc
add
jl
xchg
fadds
or
mov
and
mov
and
push
movsb
mov
test
icebp
aas
cmp
subb
pop
push
sbb
adc
jp
lret
mov
outsl
mov
icebp
lret
and
ja
leave
ljmp
lahf
xor
mov
fadds
les
pop
lret
inc
sub
aam
cmc
and
das
lock
jmp
repz
sbbl
mov
or
push
cmp
xchg
bound
adc
mov
aam
mov
mov
jmp
jmp
rolb
in
insb
hlt
jmp
mov
mov
cmp
xchg
hlt
outsb
jae
sahf
sub
rcrb
idivl
shlb
arpl
jge
hlt
xchg
rorb
stos
inc
int
xor
mov
push
sti
add
cmc
imul
in
and
pop
rcll
jle
ds
inc
cltd
inc
int3
testl
and
dec
lods
stos
out
scas
push
lret
shrl
or
cli
pop
push
insl
rcl
subl
movsl
repnz
cli
imul
mov
pop
or
rolb
cs
add
shll
push
push
xor
jnp
pushf
adc
mov
jnp
lock
dec
sbb
and
mov
cmp
jg
or
jns
mov
inc
adc
xor
inc
ja
outsl
std
call
leave
rclb
stos
call
imull
scas
sbb
add
cmp
into
sbb
pusha
cmp
and
dec
jb
mov
in
jns
sbb
scas
inc
imul
xor
xchg
jne
adc
stos
cltd
push
out
push
loopne
dec
out
in
xchg
ljmp
ret
push
jecxz
lahf
pop
jo
fistpll
sbb
mov
pop
arpl
imul
xor
shlb
jbe
adc
ror
enter
in
mov
scas
or
or
jnp
dec
xchg
xchg
in
test
scas
ljmp
adc
mov
adc
cs
jmp
cli
mulb
adcb
movsb
mov
sub
int3
cmp
std
dec
sbb
jp
imul
sti
inc
lds
sbb
fbstp
or
rclb
je
ja
dec
push
insl
stos
sbb
mov
lret
leave
arpl
add
mov
or
xor
hlt
lds
or
arpl
js
fnstenv
xor
lods
mov
les
cltd
inc
nop
add
sbb
sbb
sub
mov
jns
daa
cld
cmpb
leave
fwait
xchg
jg
insb
or
jmp
es
decb
jp
xor
jb
cwtl
push
lcall
int3
test
xor
jb
dec
stos
shll
out
xor
mov
rolb
ljmp
repnz
fisubrs
popa
push
add
mov
lret
xchg
mov
sbb
push
jno
idivb
arpl
inc
into
cmp
and
stos
sti
push
shlb
and
cmp
and
in
pop
pop
mov
sbb
xchg
dec
loopne
sub
or
pop
sbb
inc
popf
jmp
push
inc
jno
into
jb
andb
mov
adc
call
jp
add
pop
mov
xchg
mov
xor
or
pop
bswap
addr16
mov
xchg
cmp
imul
ror
sub
cmp
testb
out
mov
jnp
mov
and
xlat
adc
scas
test
hlt
in
sbb
dec
or
js
push
outsl
cmp
dec
jae
ss
pop
sbb
mov
sub
mov
fdiv
pop
push
mov
inc
outsb
inc
add
scas
loope
dec
lcall
mov
mov
push
pop
imul
clc
orb
ljmp
and
adc
pop
les
incl
jnp
push
dec
insb
xchg
xchg
mov
or
pop
outsl
xor
repz
lcall
gs
xchg
sub
mov
mov
pop
lock
xlat
lahf
push
inc
mov
jbe
shll
imulb
and
icebp
in
push
int
repz
stc
dec
mov
push
cmp
pop
std
test
mov
dec
pushf
ror
xor
cmpsb
mov
mov
pop
imul
inc
orb
cmpsl
rolb
jns
push
ret
add
pop
xor
inc
cmp
es
insb
or
hlt
inc
push
dec
mov
mov
sti
test
cmp
cmp
aam
xchg
pop
ja
or
mov
sti
xchg
pop
or
jmp
aas
cmp
mov
leave
cmpsb
jg
popf
ret
dec
push
jecxz
lds
add
mov
fwait
push
cwtl
cmp
add
in
jb
mov
lods
movsl
leave
pop
xor
rcrb
xor
cltd
or
sbb
enter
scas
dec
int
stos
out
pop
sti
sbb
sub
adc
xchg
out
scas
push
xlat
test
push
xchg
in
and
mov
dec
stc
test
adc
sbb
lods
mov
int
jg
and
into
out
sub
add
push
jle
adc
add
sub
std
pop
into
neg
sbb
or
mov
lds
out
clc
lods
les
scas
adc
and
popf
jg
es
sbb
cltd
and
imul
std
jb
lcall
add
lock
xor
rol
je
dec
jecxz
bound
rcrl
or
dec
mov
pop
std
cmp
lock
pop
or
fidivrs
pusha
sar
push
daa
push
andl
fists
punpckhbw
popa
xorb
or
add
lret
xchg
adc
lock
dec
jecxz
pop
popa
je
dec
mov
inc
fnstenv
dec
inc
xor
mov
inc
jg
cmp
sbb
pop
xor
push
xchg
ss
int3
sarl
xchg
or
je
faddl
mov
jp
add
cmp
aad
inc
dec
cmp
test
inc
add
dec
push
loopne
inc
cwtl
push
test
inc
mov
adc
mov
pop
negb
inc
shrl
stos
das
or
xchg
popa
test
repz
xchg
or
js
mov
fwait
lods
push
and
jbe
inc
push
xorb
sbb
in
jp
shrl
push
xlat
adc
pop
jnp
je
int3
xor
insl
je
sbb
xchg
cli
roll
xchg
popa
inc
in
hlt
cs
mov
sbb
int3
xchg
int
cwtl
dec
xchg
sarb
ror
pop
ss
cmpsb
mov
lock
dec
ljmp
or
icebp
imulb
scas
or
add
mov
and
pop
sarb
push
js
scas
fndisi(8087
aaa
fucomp
mov
fdivrl
dec
pop
dec
xor
hlt
adc
pop
jns
stc
mov
lret
loope
cltd
std
cmc
ret
out
les
dec
jbe
push
je
sahf
xchg
enter
mov
cmp
clc
fistpll
jl
cmpsb
pop
lock
sahf
mov
cmp
loopne
scas
gs
aad
jne
add
xor
fwait
shlb
stos
cmpsl
xchg
repnz
repnz
rcrb
jcxz
cmp
dec
int3
sbb
enter
popf
ja
mov
popf
mov
js
xchg
ljmp
aam
and
cmp
inc
xchg
xchg
imul
cmp
int
dec
mov
push
imul
sar
cmp
inc
aaa
scas
imul
js
sub
sbb
mov
mov
mov
repz
loopne
mov
lods
cmp
div
negl
add
sub
xchg
jmp
shr
lahf
inc
xchg
sbb
movsl
inc
xor
mov
push
lret
mov
sbb
push
xchg
dec
test
push
xchg
sub
mov
icebp
insb
cmp
jmp
jo
data16
push
insb
or
mov
cmc
mov
adc
lods
cli
jle
adc
cltd
jle
adc
sub
jnp
add
or
adc
mov
data16
js
aam
lods
xchg
adc
pusha
test
lret
cs
rcrl
stos
xchg
fnsave
sahf
jo
lods
adc
inc
cmc
mov
xchg
leave
push
cld
inc
adc
inc
xchg
loop
sub
popf
into
push
or
out
xorl
push
mov
je
jg
mov
ljmp
mov
mov
lahf
sub
or
lcall
or
iret
dec
adc
pop
dec
push
js
jae
cmp
or
mov
push
sbb
jnp
mov
mov
pop
adc
jp
push
in
sub
popf
paddusw
data16
adc
inc
and
jmp
xchg
dec
enter
xchg
cs
movsl
imul
mov
xchg
pop
jecxz
add
out
or
sti
inc
sbb
jb
pop
xchg
fdivl
cmc
add
xor
adc
ret
cmp
sbb
mov
pop
cmc
jmp
mov
xor
data16
pusha
lahf
mov
jae
and
push
rcrl
pusha
mov
mov
inc
xchg
test
xchg
icebp
lds
js
setge
mov
fwait
sub
subl
std
mov
push
cmp
into
mov
pop
inc
int
inc
add
inc
mov
mov
je
jge
cmpsl
mov
mov
stos
xchg
inc
in
pop
ficoml
mov
lret
jl
enter
andb
mov
add
pop
xchg
test
fbld
mov
stos
daa
hlt
cltd
or
adc
mov
mov
js
loope
out
inc
pop
push
popf
or
movsl
sbb
sub
cwtl
stc
lods
pusha
cmp
out
pop
cmpsb
lahf
sarl
sbb
mov
in
dec
lock
push
cmpsl
cmp
outsl
arpl
adc
adc
ret
sbb
outsb
jo
cwtl
js
push
faddl
cmpsl
in
loop
jbe
mov
jl
xchg
push
ret
test
cmp
push
dec
lock
addl
add
sti
iret
jp
or
rcrb
dec
mov
adc
dec
icebp
out
dec
cs
lods
dec
lods
sbb
jb
cld
mov
inc
nop
loop
ds
xchg
and
popf
lahf
clflush
jns
jae
mov
or
xor
cmp
inc
mov
push
nop
dec
xchg
or
addr16
movsl
sub
hlt
push
xor
sbb
mov
mov
addr16
inc
mov
cwtl
mov
add
test
dec
xchg
iret
push
sbb
mov
cltd
mov
xor
mov
roll
clc
std
lods
cmp
jge
nop
mov
fs
in
js
scas
dec
stos
aas
movsl
jnp
das
mov
stos
out
ret
dec
jmp
orl
testl
xorl
xor
cmp
lock
cs
hlt
jns
mov
push
pop
sbb
arpl
adc
stc
cwtl
adc
imul
loop
push
test
add
mov
xor
iret
cmpl
std
iret
push
xor
jle
sbb
outsl
cli
enter
add
lret
dec
cmp
push
cmpsb
repz
jle
jb
add
adcl
push
addr16
mov
inc
or
cltd
sbb
xchg
rcr
andb
shrl
xor
fwait
dec
hlt
mov
in
xchg
sbb
pop
xorl
jno
rcll
out
sub
fdivs
jmp
loopne
popl
cmp
fisttps
jne
xchg
jge
loope
and
dec
andb
sahf
mov
sarb
stos
lods
into
dec
mov
ret
lods
push
pop
loop
insl
cwtl
jle
xchg
adc
popa
call
cmpsb
test
arpl
in
test
dec
inc
fwait
mov
movsl
aam
mov
adc
sub
xor
lods
and
test
pop
push
mov
arpl
test
inc
jne
mov
shll
inc
mov
scas
pop
pop
mov
jecxz
xor
mov
dec
enter
inc
and
push
enter
aaa
inc
xor
cmp
push
imul
mov
cmp
cmp
fdivrp
push
cmpsb
dec
mov
sarb
cmpsl
mov
fisubs
inc
fmuls
icebp
call
stos
mov
add
jl
pusha
mov
mov
sbb
loopne
push
in
dec
imul
or
mov
xchg
add
call
add
xor
fnstcw
pop
test
and
dec
fimull
inc
repnz
stc
mov
fstps
in
push
testl
or
loopne
imul
xor
sbb
dec
pop
ss
shll
popl
arpl
jmp
pusha
rolb
out
sbb
sub
cli
jg
mov
mov
lahf
ret
sub
fbld
and
jmp
pop
cmp
sar
sahf
out
in
xchg
cmp
in
xchg
sbb
pushw
pushf
iret
dec
jne
or
pop
in
mov
mov
sbbl
sub
sar
ficompl
in
test
mov
inc
xor
inc
cmp
repz
nop
or
fisubrs
popa
jge
dec
add
add
push
or
sti
mov
sub
xchg
jbe
sti
cmpsb
ret
or
sar
adc
call
js
adc
dec
mov
mov
fadd
mov
sarl
mul
xor
test
ficompl
xorl
cmp
jp
aad
sub
lahf
pop
mov
sub
pop
call
pushf
cmp
and
adc
jno
fidivl
movsl
xor
das
dec
pusha
inc
cmp
push
xor
bswap
testl
out
pop
xor
mov
cmc
jmp
test
lds
xchg
xchg
aas
ss
mov
xchg
mov
jb
rclb
dec
sbb
adc
sahf
jne
push
add
xchg
inc
push
pop
adc
xchg
popa
inc
int3
mov
sbb
cld
inc
cmp
jl
addr16
adc
outsl
and
fbld
jge
je
add
fnstsw
fcomip
and
lret
inc
and
cli
push
cld
leave
xlat
loope
or
lret
pop
mov
dec
jbe
mov
xor
pop
call
aas
cmp
push
inc
popf
mov
add
xchg
or
cwtl
push
pop
push
call
adc
scas
mov
jl
pop
add
ret
jmp
jge
sub
fnsave
cmc
adc
dec
push
movsb
ret
rol
xchg
lret
pop
mov
dec
daa
adc
ss
daa
adc
adc
fdivrl
jbe
ds
inc
push
pop
mov
inc
shlb
and
pop
mov
pop
cmp
pop
es
push
cmp
pushf
repnz
lret
sub
enter
cltd
and
mov
mov
fnstcw
js
inc
insl
push
cld
mov
ds
bnd
inc
bound
lcall
xor
ss
clc
xchg
pop
mov
mov
xor
or
adc
ret
div
dec
leave
sahf
ss
outsb
mov
loope
sub
cmpsb
pop
jbe
clc
loope
pop
push
sti
and
cmp
popf
adc
insb
or
cmp
sub
cli
mov
add
shll
orl
xor
cltd
jo
cmpsl
pop
push
push
jo
mov
sbb
sbb
jl
sbb
lods
pop
aaa
out
add
ljmp
ror
dec
pusha
daa
jmp
arpl
movsl
ss
in
add
jl
xor
mov
add
dec
adc
insl
imul
jmp
xor
mov
pop
jecxz
mov
mov
sbb
js
pop
mov
lods
ljmp
rcrl
cmp
sbb
sub
div
cmp
ljmp
scas
jg
mov
sbb
mov
js
dec
xor
sbb
add
imul
js
shrl
jmp
outsb
and
xchg
jne
push
scas
xchg
cmpsl
sub
cmp
int3
cmp
cld
aam
dec
ljmp
dec
and
inc
and
or
push
iret
mov
push
aam
loop
lret
dec
mov
or
dec
pop
mov
call
dec
ljmp
out
lret
cmpsl
mov
xor
fnstsw
mov
imul
rcll
in
dec
pusha
add
sbb
or
push
std
xchg
data16
lock
add
outsb
mov
gs
adc
lods
outsl
pop
scas
fmull
in
insl
mull
sub
imul
adc
xor
xlat
out
or
jno
pop
and
insl
or
cwtl
jle
loope
insl
mov
adc
icebp
in
push
mov
orb
push
add
mov
inc
mov
out
nop
lcall
loope
mov
and
jmp
pop
pop
scas
ss
lret
pop
or
and
push
pop
push
dec
pop
adc
add
popf
cmp
in
test
mov
lret
jmp
in
adc
lret
ds
repz
stc
jp
or
pop
iret
hlt
lods
mov
pop
inc
enter
dec
sbb
enter
pushf
call
dec
xor
sub
ffree
adc
xor
lret
lea
dec
cmpsl
outsb
jl
push
jbe
mov
sub
dec
mov
mov
and
fs
fdivl
js
add
xchg
lods
sarb
cmpsb
movsb
loopne
andl
pop
ror
adc
pop
inc
inc
orb
push
pop
rcrb
ret
lret
sbb
loope
jne
aam
and
pushf
add
jno
add
mov
je
icebp
jge
es
cmp
andb
lret
jle
push
and
push
fists
inc
sbbb
jbe
xchg
sbb
ret
cwtl
jle
shlb
jae
mov
cmp
incl
lds
inc
jne
mov
es
fisubl
mov
out
mov
dec
jge
mov
and
or
popf
mov
icebp
arpl
insl
inc
jle
cmp
shll
lea
decl
aas
inc
xchg
add
enter
mov
scas
aaa
lea
and
orb
adc
rcrl
lcall
cwtl
xlat
add
pop
popf
out
xchg
sbbb
popf
into
pop
jg
jb
int3
cld
rorl
aam
cmp
inc
repz
jno
cmc
adc
xlat
or
mov
subl
push
pop
sarl
jle
adc
cmpsb
dec
xchg
icebp
pop
sarb
jg
in
arpl
movsl
jmp
psllw
jne
push
or
pop
aad
xor
jg
mov
xor
sub
or
add
mov
or
rcrl
insl
add
jl
xchg
or
and
pop
xchg
or
adc
push
dec
pop
rol
mov
in
adc
cmc
and
inc
push
mov
mov
lahf
sahf
adc
jnp
ret
sub
dec
and
nop
add
mov
lods
insb
insb
jl
fbstp
int3
cld
fxch
stos
mov
sub
inc
mov
xchg
cmp
pop
aas
cmp
push
push
jae
sub
clc
adc
mov
fnstsw
jnp
filds
sti
sti
addl
fcomi
mov
lcall
add
sub
leave
aam
mov
enter
repnz
xor
dec
dec
xchg
pop
jge
push
xlat
clc
dec
cmc
inc
loopne,pt
mov
dec
mov
mov
mov
sti
das
xchg
add
popf
daa
mov
cmp
jne
add
js
jno
repnz
add
sbb
push
or
mov
mov
movsl
into
ja
pop
mov
lahf
jnp
mov
add
arpl
jne
inc
add
or
push
inc
lret
sub
dec
cmpsb
ret
xchg
adc
insb
shrb
add
cmpsb
or
data16
cs
out
cltd
mov
xchg
xchg
aam
je
pop
jno
andb
sub
sbb
cmpsb
and
xor
xlat
mov
lock
mov
adc
adc
orb
int
pop
push
daa
dec
push
iret
into
lcall
imul
add
mov
mov
pop
or
dec
or
mov
mov
mov
cmp
test
push
lds
out
test
jle
push
movsb
loopne
outsl
cmp
and
pop
mov
stos
xchg
cmp
aad
mov
pop
and
mov
and
in
xchg
jp
das
mov
pop
enter
icebp
inc
xchg
loopne
dec
xchg
pop
ja
adc
push
icebp
mov
mov
inc
test
mov
jg
test
add
push
rcrb
sub
jo
js
adc
adcb
sti
push
add
loope
push
mov
aaa
ret
cli
popf
xor
sub
pop
sub
dec
pop
and
pop
xchg
dec
or
mov
mov
pop
les
lock
xlat
mov
jo
stos
xchg
xchg
pop
fwait
imul
jo
and
jnp
jb
mov
mov
xor
xchg
pop
dec
ret
mov
push
popf
xchg
jnp
jo
aam
xchg
mov
cmp
addr16
cld
dec
repz
out
dec
es
cwtl
cmpsl
inc
pop
lahf
sti
or
push
shll
test
xor
xchg
addl
ljmp
out
pop
cmp
dec
xchg
lahf
notb
sbb
repz
imul
dec
inc
jno
stos
stos
loop
lds
mov
pop
cmp
ret
sar
adc
mov
cmpsb
subb
in
fisubrs
push
fisubl
les
xchg
mov
icebp
pop
cmpb
negb
jb
xchg
dec
pop
das
dec
cmpsl
shrl
jo
scas
add
int3
add
enter
xchg
rolb
push
push
and
push
mov
outsl
je
or
pop
add
cltd
fadds
xchg
add
add
int
aad
mov
mov
xchg
enter
inc
push
push
inc
inc
iret
aad
cld
insl
paddd
push
aad
fimuls
mov
mov
push
enter
cmp
lds
push
sbb
sti
mov
aad
dec
out
push
dec
or
mov
add
push
shl
pop
cs
sbb
mul
cmpl
inc
inc
inc
stos
push
cmpsb
inc
rcrb
xorb
xor
cs
jg
lock
push
jmp
js
xchg
test
or
cmp
mov
sbb
sub
sub
test
and
orb
dec
mov
outsl
xor
inc
in
push
lock
and
dec
adc
sub
dec
aam
inc
loope
pop
cwtl
cmp
sbb
nop
out
push
pop
mov
out
sub
pushf
push
imull
fs
ror
adc
pop
lret
xlat
stc
sub
or
sub
xchg
xchg
insl
adc
cli
gs
sbb
mov
lock
andb
fwait
jl
rcll
fdivrs
out
inc
adc
rcll
stos
add
jge
add
sub
xchg
mov
mov
add
pop
ret
jns
pusha
es
jle
add
sahf
mov
push
in
cmp
push
fsubl
mov
loopne
je
out
pop
mov
push
xchg
cli
xchg
mov
pop
icebp
mov
mov
inc
add
dec
pop
mov
les
clc
mov
jns
jmp
mov
outsl
ficomps
cmpl
outsb
in
aad
push
pop
cmp
pop
stos
xor
xlat
movsl
mov
cmpsb
aas
out
cmp
xchg
movsb
and
mov
fiaddl
sbb
jno
inc
int
imul
lahf
pop
push
push
in
xorb
mov
push
leave
dec
fdivr
aaa
in
ja
sub
pop
mov
xor
ret
push
cmpl
outsb
in
sbb
iret
mov
xchg
adc
out
out
adc
loope
jp
inc
jns
cmc
xor
add
jecxz
jl
pop
adc
mov
fwait
pop
add
xor
and
push
adc
outsb
into
mov
mov
imul
into
dec
shrl
lods
mov
lret
cmp
lock
enter
lret
xor
stc
jae
imul
ror
xchg
movsl
lcall
lods
and
stos
rol
loop
shlb
dec
xchg
call
mov
mov
lret
jle
outsl
and
mov
sbbl
orl
mov
sub
jl
pop
push
pop
pusha
and
daa
mov
sbb
insb
int3
cmpsb
int3
cmp
imul
dec
cmc
or
js
in
pop
pop
mov
ja
aaa
sub
push
repnz
adc
inc
and
sbb
stos
mov
jae
push
fcoml
sbb
pusha
xchg
xor
push
sbb
neg
hlt
add
or
sub
and
and
xchg
sbb
sbb
adc
mov
call
pusha
inc
pop
mov
fs
loope
arpl
sbb
cmp
mov
lret
andps
rcll
ret
inc
inc
dec
adc
pusha
dec
sti
cltd
fld
dec
int
xor
mov
dec
aam
addr16
roll
jle
sbb
add
cmp
or
adc
movsb
mov
xor
xchg
mov
mov
js
lret
loop
ja
dec
scas
stos
xor
aam
repz
mov
test
add
cmp
add
stos
jp
and
mov
pushf
cmpsl
cmp
lret
sub
fidivl
incb
add
stos
dec
xchg
jb
sub
dec
mov
int3
lods
lret
mov
sub
cmp
loopne
dec
push
iret
mov
mov
add
lahf
cmpsl
mov
xchg
push
pop
js
enter
shll
dec
dec
cmp
jnp
in
pushf
dec
cmp
sub
pop
fdiv
jg
popa
pop
ss
and
jmp
lods
and
push
pushf
test
mov
scas
popf
mov
mov
cmp
mov
outsl
xchg
jnp
cmpsb
xor
sub
push
mov
and
fiaddl
cmp
push
cmpsb
push
negb
stos
inc
shrl
xchg
test
mov
stos
cmpsb
or
lods
test
mov
sub
push
inc
lret
in
subb
cmp
in
fiadds
shll
pop
les
out
push
testb
and
fsubp
ljmp
cmp
les
fsts
xchg
inc
sti
int3
xacquire
and
push
cmp
or
push
mov
mov
push
mov
ret
push
or
es
sub
pop
movsl
sub
cli
jecxz
pusha
jg
xchg
negl
sub
mov
mov
or
rolb
repz
hlt
add
popf
stos
inc
bound
daa
xor
repz
cs
pop
push
sub
rorl
loope
es
xor
lcall
sar
xchg
and
jmp
push
pop
inc
loope
lret
and
xchg
mov
outsl
jb
jecxz
and
fildl
xchg
xor
loope
or
icebp
pop
sbb
jne
add
out
lea
mov
lods
mov
das
cmp
insb
and
mov
sbb
das
mov
mov
hlt
or
cmp
inc
mov
pushf
or
sti
iret
lret
xchg
mov
adcb
nop
es
or
insl
scas
and
orl
add
and
imul
fwait
push
fnstenv
stos
cmpb
adc
inc
in
inc
sahf
loope
jle
int
shll
int3
sub
data16
movb
dec
jnp
jbe
mov
aad
mov
pop
push
add
mov
iret
jb
push
lret
scas
dec
fcomip
sahf
stos
add
icebp
outsl
xchg
mov
in
test
jmp
sahf
or
ljmp
mov
sbb
fdivp
inc
mov
cltd
out
in
push
shll
adc
fimuls
addr16
dec
fscale
mov
jo
dec
or
mov
mov
xchg
loop
mov
jb
ja
lcall
idiv
sahf
call
pop
popa
call
xchg
popa
xor
mov
sbb
addr16
pop
out
pop
andb
aaa
mov
xchg
add
outsb
lock
das
cwtl
push
inc
mov
adc
pop
pop
movsb
adc
ficomps
dec
push
das
lahf
cld
into
push
cmp
mov
sub
cmp
and
pop
movl
xchg
ret
out
ss
loope
shll
dec
pop
stos
push
xchg
out
sbb
negl
mov
jg
outsb
xor
mov
sbb
add
mov
dec
scas
xchg
out
jae
push
dec
int
stc
sar
dec
jbe
jp
loope
ds
insl
shlb
or
adc
cmp
jnp
fnstsw
cwtl
xor
mov
loop
jg
mov
rorl
leave
loopne
fcmovne
mov
mov
fs
pop
pusha
dec
outsl
adc
dec
out
xchg
add
ret
xchg
jge
sub
push
movsb
popa
iret
ss
fldt
popaw
xchg
cmp
scas
cltd
push
test
jns
lock
sarb
jmp
rcrl
popa
jbe
cs
add
pop
out
sub
lock
mov
jo
push
cmp
sbb
mov
fwait
aas
mov
bound
cld
push
int
sbb
std
mov
aad
jmp
push
fmuls
cli
fiadds
sub
into
pusha
lret
test
out
test
jp
bound
pop
rolb
sarl
std
and
in
sbb
out
in
test
mov
or
mov
mov
pusha
les
sub
cmc
fidivrl
daa
aas
sub
adc
popl
xorl
xchg
xor
xorb
arpl
aaa
sub
into
jle
fs
and
mov
xchg
movsl
dec
xchg
shll
mov
add
insb
testb
mov
cltd
or
orb
mov
insl
pop
xchg
pop
dec
es
cltd
andl
inc
dec
aad
adc
rorb
push
jne
daa
xor
mov
fs
ss
andl
jge
outsl
sub
jb
sub
add
lahf
mov
mov
inc
outsb
xor
xor
sti
sbb
repz
pop
inc
or
pop
test
mov
je
jnp
pop
mov
dec
xchg
xor
mov
aam
int3
cmp
movb
adcb
inc
rcrb
add
jb
cmp
scas
stc
call
aam
sub
dec
mov
notl
mov
mov
push
push
lret
out
fistpll
mov
sub
idivb
scas
fdivrs
loopne
dec
ds
stc
gs
cld
lea
jbe
lods
dec
fcomps
fs
sbb
jl
xchg
jmp
insb
mov
je
js
or
stc
mov
out
dec
out
shl
out
fadds
cltd
lods
ja
add
pop
pop
imul
inc
and
out
pop
xchg
scas
xchg
mov
mov
adc
xor
cmp
inc
mov
ret
push
ret
add
dec
stos
sub
xor
ja
mov
and
jne
hlt
divb
rorb
sti
jae
push
jmp
in
sbb
xor
xchg
mov
dec
cld
out
add
mov
or
imul
inc
fmulp
sbb
hlt
insb
mov
das
xchg
cmpb
jne
sub
cli
mov
add
xor
mov
loope
mov
xchg
data16
push
dec
mov
ret
shrl
push
inc
ds
popf
jno
xchg
mov
mov
lock
dec
in
cmpsb
or
in
inc
fisubrs
xor
and
adc
inc
xchg
adc
popa
mov
sbb
aam
mov
stos
inc
leave
in
mov
mov
xchg
inc
loope
pop
jns
push
clc
push
mov
ret
stos
mov
movsb
mov
mov
mov
ds
push
jg
and
pop
pop
fdiv
mov
mov
lods
enter
sub
loopne
mov
add
out
add
nop
cmpsl
mov
xchg
mov
hlt
gs
sbb
fsubrs
mov
mov
push
jecxz
and
sub
and
pop
mov
js
push
movsb
or
or
cmp
adc
mov
jge
pop
adc
cmp
mov
stc
in
sub
push
sbb
pusha
call
mov
jne
xchg
ret
push
jle
mov
push
popf
xchg
popa
lods
and
fisttpl
sahf
jecxz
fs
inc
pop
inc
or
jg
pop
fdivl
mov
xchg
sub
add
stc
jno
mov
jmp
into
add
clc
mov
pushf
fisubrl
shlb
mov
inc
dec
push
into
ljmp
push
mov
mov
and
push
push
mov
or
fcompl
inc
fwait
imul
lds
push
xchg
rorl
sub
xchg
pusha
jle
sbb
in
es
pop
aas
int
mov
js
pop
dec
inc
mov
fadd
sub
daa
push
repz
pop
dec
pop
dec
push
imul
cli
cltd
vmread
inc
and
cwtl
xchg
cmpsl
ficoms
outsb
lcall
pop
push
popf
inc
mov
add
inc
adc
xchg
sbb
sbb
fs
mov
subl
nop
ret
inc
enter
rcl
stos
or
lea
call
and
jne
lcall
lods
jo
jge
jno
adcl
xchg
test
imul
les
dec
mov
mov
add
adc
sub
mov
cli
in
leave
and
xchg
stos
mov
lret
push
movsb
iret
flds
out
mov
or
test
jp
int
or
imul
sub
dec
outsb
xor
mov
jge
aam
mov
mov
xor
in
fsubl
dec
ja
inc
push
arpl
dec
push
pop
xor
addr16
push
adc
divb
sahf
loope
lret
add
popf
shrl
and
add
adc
lods
adc
iret
mov
ljmp
push
addb
push
add
xchg
mov
cmp
fsubr
inc
test
cltd
into
in
inc
mov
outsb
aam
inc
loop
lods
xor
lea
pop
test
add
fisubrs
in
pop
mov
loop
xchg
push
jo
cmp
aad
clc
pop
inc
out
push
movsb
sub
fcmovne
rol
adc
or
add
xor
ret
dec
xchg
push
xchg
out
jmp
loopne
lods
sarl
aam
dec
mov
or
pop
lock
daa
out
add
dec
jns,pn
adcb
inc
dec
cwtl
sbb
aad
xchg
cli
jo
xor
push
jmp
lods
js
bound
imul
mov
aad
inc
mov
shll
cmp
sbb
ret
xlat
lahf
mov
daa
dec
jge
mov
je
das
bound
faddl
inc
mov
lock
fisubl
push
jge
hlt
ja
cmp
shrb
icebp
mov
jl
jl
daa
pcmpeqd
sti
xor
push
scas
xor
out
leave
icebp
jbe
fs
inc
lods
addr16
cmp
add
repz
xchg
ror
scas
dec
in
loope
inc
mov
push
cmp
and
add
sbb
shl
loope
aam
inc
xchg
cmp
cmp
test
lret
xchg
mov
pop
mov
fists
adc
scas
stc
and
and
leave
push
js
jmp
add
mov
mov
int3
loop
in
fimuls
push
cmp
mov
xor
ret
push
imul
pop
push
je
pop
shrl
ret
lock
test
xor
cmp
scas
mov
mov
ja
mov
movsb
pop
ret
cmc
ret
in
mov
mov
cmp
cld
test
cwtl
xor
orl
loope
xchg
push
cld
divl
test
imull
inc
jbe
call
ds
mov
and
dec
fnstsw
movl
loopne
pushf
inc
jge
jns
sub
sub
popa
mov
mov
xor
xchg
cmpsl
setno
pusha
adc
fldl
aas
in
push
shl
xor
das
test
cmp
loope
inc
cmp
fldcw
andb
jno
loop
shr
push
add
xor
imul
fsubrs
cmpsl
movsb
data16
dec
arpl
add
cli
mov
fdivl
xchg
mov
insl
add
sub
xor
out
cmp
and
fmulp
jae
dec
or
xor
push
or
inc
repz
xor
cli
mov
in
push
fnstenv
cli
jge
adc
push
xor
xor
ss
test
mov
lea
lea
daa
lods
mov
and
mov
push
jecxz
adc
xor
sbb
push
mov
sub
addr16
imul
xor
icebp
test
divb
test
inc
rcr
mov
scas
mov
mov
xchg
shlb
cmp
pop
loopne
movsb
mov
push
push
inc
cli
pop
and
adc
in
cmp
repnz
sbb
movsl
mov
fdivs
mov
test
add
jmp
sub
enter
adc
inc
inc
hlt
mov
sbb
fnsave
mov
jl
imul
filds
arpl
mov
outsb
add
mov
cltd
push
cmpsb
cmc
cld
mov
fmulp
cmp
xor
aam
push
xchg
lods
cmc
movsl
xchg
loopne
xor
adc
jp
or
mov
imul
mov
movsb
sub
mov
testb
pop
mov
cmp
pop
cmp
jle
aad
aad
dec
add
roll
popa
cwtl
and
jecxz
cwtl
and
xchg
push
mov
dec
ds
dec
jg
lods
popf
lea
dec
cmp
xor
pop
mov
xchg
push
roll
das
sub
xor
xchg
out
jb
call
adc
fwait
arpl
and
outsb
inc
push
js
mov
repnz
data16
test
fdivrl
and
jae
sub
lea
jl
dec
std
enter
xchg
adc
push
repnz
aam
ds
mov
test
sub
hlt
in
dec
push
mov
cltd
js
scas
xlat
int
lds
addr16
jns
adc
testl
mov
pop
das
das
pop
out
mov
movl
mov
andl
mov
mov
cli
ss
ljmp
sub
push
ret
push
mov
mov
cs
adc
jbe
in
mov
jb
rorb
push
lock
fidivrl
cwtl
repnz
xchg
mov
sub
jl
out
cmp
loope
mov
lss
push
sbb
cmp
cmpb
xor
jp
mov
in
sub
jmp
dec
cmovo
data16
leave
xchg
jne
into
lret
imul
jmp
fildll
loope
sub
out
jp
jmp
jno
sub
sbbl
push
pop
xor
push
stos
inc
loop
cmp
into
popf
imul
inc
add
sahf
loop
pop
pop
rcll
xor
jne
push
add
mov
mov
sahf
out
pop
loopne
les
call
movsl
mov
fstpl
dec
outsl
nop
and
es
imul
push
or
out
sub
push
inc
icebp
nopl
pop
sbb
pop
sub
cmpsl
inc
mov
inc
aaa
hlt
out
sahf
leave
adc
add
mov
sub
dec
popa
dec
addr16
int3
addb
jae
dec
mov
mov
push
mov
imul
and
xchg
adc
js
dec
add
cmp
jg
or
jbe
in
pop
iret
or
sub
ret
mov
ret
ljmp
insb
push
mov
add
sbb
das
or
mov
jle
xor
scas
rcll
adc
and
push
mov
adc
pop
jmp
lret
fcomps
lds
fcompl
sbb
add
adc
or
dec
jecxz
push
pop
inc
or
dec
ljmp
xchg
loop
push
jmp
nop
fdivrl
pop
popa
repnz
jo
rorl
out
cs
lods
mov
sti
xor
adc
adc
icebp
nop
inc
lock
pop
movsl
jnp
test
inc
fmull
clc
jne
cld
rcll
movsb
and
popf
popf
cmp
inc
fwait
inc
or
psrlq
push
jbe
xchg
dec
ret
xchg
je
lar
mov
xor
sbb
gs
jo
jns
adc
lcall
sahf
mov
lret
das
mov
push
inc
mov
xor
fcoml
dec
js
mov
daa
in
movsl
sbb
xor
lea
push
xchg
jg
inc
out
adc
ja
and
in
mov
loope
and
push
xchg
pop
xor
push
pop
repz
enter
rcr
mov
cs
or
adc
icebp
daa
scas
pop
or
inc
mov
xchg
jb
or
or
movsl
pop
lret
adc
adc
std
jo
loop
repz
sbb
or
xchg
test
mov
inc
sbb
enter
test
cmp
mov
insl
ficomps
pmulhw
pop
adc
aas
cwtl
int3
jnp
shll
sub
leave
sub
xchg
into
test
and
gs
jp
scas
mov
loop
sub
aad
or
cmp
inc
pusha
mov
js
or
sbb
rcll
lods
lods
cmp
push
jno
insl
dec
sub
lods
dec
repnz
test
jmp
xlat
mov
pop
or
dec
jae
outsl
mov
adc
sbb
pop
inc
aad
add
sbb
jl
dec
scas
pop
sahf
lods
and
xor
dec
cld
sbb
les
pushf
jge
shlb
insb
stc
xor
leave
inc
fwait
int
cmp
cmc
repnz
std
mov
int3
lods
ret
inc
pusha
cmp
push
or
adc
sbb
sbb
fidivl
clc
mov
xor
call
mov
jns
adc
adc
int3
out
cmp
test
xor
or
popa
sbb
stc
push
fildl
outsb
out
lret
out
fwait
cmpb
ja
and
sahf
jno
xchg
xor
pusha
out
dec
enter
xor
add
xchg
inc
loope
cmp
aas
push
in
popf
scas
jns
and
push
mov
mov
sbb
push
pushf
lods
adc
mov
out
mov
repz
push
add
sub
mov
gs
sbb
in
sbb
inc
push
xchg
lea
out
mov
xor
insb
ja
push
pop
subl
cmp
js
iret
pop
imul
push
jmp
pop
mov
enter
lahf
fcompl
sti
cwtl
stc
mov
push
adc
pop
lock
negl
pop
cmp
jnp
xchg
fiaddl
bound
or
pushf
movsb
cmp
out
cmpsb
stc
ja
mov
test
sbb
fs
sub
xchg
loop
push
sahf
in
fidivs
mov
cld
daa
pop
dec
cmc
add
scas
dec
aas
cmpsl
jmp
sbb
int
xor
xor
or
cld
pusha
or
mov
mov
test
sbb
pop
jne
sub
minps
push
mov
jmp
ja
or
outsb
push
xchg
jmp
push
and
dec
test
fucomi
sbb
lock
jno
arpl
cli
or
gs
repnz
iret
mov
push
cld
lret
out
push
xchg
push
xchg
mov
or
inc
ja
jo
cmp
hlt
je
adc
cmp
cmc
cmp
xor
or
and
leave
lds
jbe
pmulhw
jl
push
ss
jle
pop
pop
in
adcb
jecxz
movsb
xchg
dec
jo
lods
pop
adc
and
ds
add
inc
mov
pop
pop
mov
nop
loop
icebp
add
pop
xchg
stc
pop
fistps
iret
add
xlat
clc
out
mov
nop
dec
push
jmp
ljmp
mov
or
mov
in
or
inc
mov
jge
xor
push
push
mov
sub
pop
xchg
xor
add
jl
jmp
mov
cld
nop
mov
adc
xor
jle
xor
nop
xchg
xor
xchg
dec
push
xchg
pusha
out
ljmp
ret
pop
outsb
push
mov
out
jl
loopne
pop
lret
jne
xchg
cmc
inc
out
inc
outsb
movsl
loop
cmp
mov
dec
cli
pop
insl
cli
fwait
test
cltd
mov
sbb
xchg
and
in
push
add
data16
sbb
xor
es
sbb
fisubs
shr
mov
dec
jle
in
js
inc
fwait
mov
cwtl
cmc
jb
dec
dec
rsm
test
push
cmp
jb
stos
pop
adc
pop
outsl
mov
lods
hlt
add
imul
lea
fldenv
fadds
pop
out
fsubrl
sbb
mov
jns
pop
jl
or
xor
imul
cmp
dec
lock
cmc
popw
dec
inc
outsl
outsb
ret
stos
mov
icebp
and
jbe
outsb
mov
cld
jns
pop
bound
pusha
cs
mov
add
fdivr
pop
mov
lahf
jg
jmp
xchg
arpl
pop
xchg
cltd
lock
inc
jmp
into
lods
dec
stos
ds
and
sub
loop
jb
mov
sub
xchg
jge
aad
insl
xlat
pop
push
and
pop
jmp
jb
mov
out
leave
arpl
pop
rcr
mov
add
popf
loope
in
les
adc
je
movsl
push
mov
addr16
mov
inc
insb
push
movsl
adc
mov
push
int3
push
mov
inc
xor
and
ret
std
jp
ficoml
mov
push
or
mov
dec
add
pop
dec
stc
cld
jns
jle
cltd
arpl
sbb
ror
pop
arpl
mov
test
loopne
mov
jle
sbb
pop
or
sbb
nop
sbb
popf
out
mov
call
and
ja
jecxz
mov
shr
ljmp
test
cmp
pop
mov
ret
shlb
jl
loopne
popf
xchg
add
jne
int
pusha
inc
xchg
std
inc
or
out
inc
xorb
xor
iret
je
push
and
repz
push
mov
and
mov
mov
xor
mov
adc
dec
mov
cmp
add
dec
int
hlt
or
into
cmp
sti
inc
lea
inc
sub
insl
inc
adc
outsb
add
leave
push
jb
sahf
push
repz
data16
aaa
das
loopne
inc
int
cmp
cmp
js
xor
mov
add
sti
outsl
es
sub
jle
cmpsl
rcr
bound
lods
rcr
add
loop
jg
in
loope
sti
shl
xor
es
push
nop
and
or
fmuls
and
sub
frstor
adc
divb
inc
jnp
and
lcall
aad
nop
das
mov
fsts
jecxz
fldl
dec
inc
aad
jle
repz
clc
mov
jmp
fdivrl
popf
push
stos
ja
out
ljmp
addl
scas
sub
pop
push
loopne
fcomip
xchg
lret
adc
push
mov
xchg
cmp
adc
and
test
icebp
bound
faddl
aaa
jp
mov
fmull
push
popf
mov
sub
xorl
test
pop
jl
and
mov
pop
cmp
sahf
popa
pop
nop
frstor
push
jmp
jnp
and
sub
icebp
cmp
int3
and
aas
fldl
arpl
xchg
in
push
mov
lea
jb
mov
mov
frstor
out
push
inc
mov
xchg
dec
mov
out
dec
jo
and
dec
sub
insb
ljmp
jle
pop
dec
mov
jne
fs
and
add
sub
je
adc
fsubr
or
lds
aas
xchg
pop
mov
hlt
pop
mov
jle
js
aam
data16
pop
outsb
subl
add
inc
adc
add
pop
inc
pop
pusha
dec
test
decb
ret
push
cli
pop
repz
outsb
fwait
add
leave
test
test
leave
rcr
stc
mov
inc
mov
scas
fiaddl
add
insb
push
jne
les
push
in
inc
outsb
cmp
in
mov
dec
sbb
lea
dec
rcrl
adc
imul
or
sbb
pop
xor
js
fists
cmp
cmp
sbb
mov
inc
dec
arpl
sbb
sbb
jg
int
ficoml
icebp
mov
xor
in
add
lods
dec
pushl
add
test
jmp
mov
xchg
add
ds
leave
in
mov
add
repnz
inc
adc
xchg
sbbb
jmp
movsb
adc
cmc
mov
or
push
mov
mov
out
addb
mov
mov
dec
jge
out
int
push
jne
jmp
mov
jne
xlat
jmp
shll
push
lock
gs
outsb
outsl
pop
jle
xchg
shll
lock
push
mov
or
xor
cltd
cmp
jb
aaa
add
fsubl
mov
jmp
or
adc
aad
lea
adc
cmp
mov
pop
push
xchg
pop
cwtl
pop
adc
filds
jno
daa
lcall
and
adc
dec
or
xchg
pop
pop
imulb
xor
or
imul
imulb
pushf
out
out
mov
or
lret
sbb
test
in
inc
inc
push
inc
jb
addb
mov
fwait
mov
xchg
add
outsl
cmp
out
pop
cmpsl
push
test
and
fists
lock
push
or
cmp
pusha
das
inc
mov
idiv
gs
fstl
arpl
lods
fwait
xchg
notl
das
mov
xchg
xchg
loop
notb
xchg
jnp
imul
cmp
mov
test
jno
rorb
and
popf
das
adcb
ds
ret
pop
sbb
arpl
fcmovbe
ljmp
popf
imul
and
inc
inc
je
inc
mov
pop
mov
into
or
lock
inc
rclb
pop
shl
jns
dec
pop
inc
sub
pop
dec
ret
fsubl
mov
or
adc
mov
int3
jae
ss
aas
add
jge
pop
dec
pusha
inc
add
loop
loope
lds
aad
inc
push
adc
fs
dec
ficoml
lea
cmpsl
and
movsb
push
iret
outsl
cmpsb
stos
call
out
mov
xchg
cmp
cmp
addl
testl
adc
xchg
xchg
insl
xor
stos
je
leave
data16
imul
jnp
fcoms
cmp
push
stos
pop
xlat
or
xor
jne
popa
stos
sti
pushf
xor
inc
test
movsb
sub
jns
xchg
es
insl
mov
jge
stos
inc
call
loop
lods
cltd
push
lcall
mov
jne
xor
jns
mov
xchg
rcrb
movb
xchg
cmpsb
insb
inc
jnp
add
inc
mov
or
xchg
xor
or
jg
inc
adc
and
cmp
mov
dec
xchg
pushf
cmp
and
jae
test
cli
add
pop
xor
sbb
mov
cld
inc
clc
into
and
loope
fs
jns
divl
sbb
push
or
ja
mov
test
xor
inc
push
xorl
imul
cltd
fldenv
das
mov
pushf
add
movsb
sbb
mov
ret
in
or
loop
cmc
and
out
mov
pop
std
xchg
repz
scas
jns
andl
dec
adc
ja
inc
sbb
adc
sbb
xchg
lret
xchg
add
xchg
jle
fdivs
popa
push
push
mov
add
rcrl
test
loope
push
lods
test
ds
cmp
inc
cltd
cmc
ljmp
mov
ret
jb
xor
lret
fs
xchg
push
les
scas
xor
ljmp
iret
and
mov
test
div
pop
pushf
enter
pop
fsubl
sbb
iret
lret
pop
or
push
mov
push
scas
add
fcompl
mov
xor
jg
fyl2x
gs
dec
dec
lret
rcl
and
mov
lret
or
mov
jo
aas
pop
push
mov
fcomp
and
xor
divb
mov
xchg
testb
or
mov
cmp
aad
mov
rolb
sub
das
ds
push
fdivr
sbb
push
push
and
jo
repz
push
jge
aad
fldz
push
mov
sub
jle
xchg
jp
fdivr
inc
lds
fs
popf
ljmp
jg
test
xchg
roll
mov
and
f2xm1
mov
addr16
adc
jp
push
cmp
mov
mov
xor
add
fwait
test
stc
mov
mov
out
cmpsl
nop
push
je
pushf
mov
fs
push
pop
pop
and
cmp
xchg
pop
dec
or
test
fildll
stc
jmp
dec
insl
into
lock
or
and
movsb
jle
mov
popf
lret
sbb
cmp
add
fldpi
mov
ja
mov
andb
xchg
insl
ljmp
subb
in
push
push
mov
jae
push
add
adc
or
testl
das
mov
push
insl
xchg
pop
and
call
lea
mov
cltd
jg
outsl
push
pushf
cld
mov
cmp
mov
scas
shll
mov
jecxz
push
pop
dec
in
popa
add
inc
jmp
inc
inc
les
rorb
and
mov
xchg
inc
in
pop
pop
loope
addr16
xchg
mov
jp
aad
mov
shlb
xchg
mov
popf
or
adc
fstpt
pop
fneni(8087
add
cwtl
ljmp
loop
cld
mov
pop
push
pop
xlat
je
pop
push
xacquire
aad
jmp
jle
call
scas
push
dec
push
mov
in
shlb
mov
sbb
or
xor
mov
ret
lahf
es
cwtl
popa
sbb
test
outsb
or
call
inc
sbb
fcom
pushf
xchg
push
in
mov
arpl
dec
cmpsl
mov
or
mov
lcall
dec
iret
mov
lods
mov
outsb
popa
sub
rcr
mov
or
dec
divl
push
lcall
sbb
inc
mov
xor
fisubrl
sub
lret
sti
xchg
push
jle
lcall
add
cmp
xchg
ret
sub
cmp
xlat
mov
sub
xor
or
fsubrl
pop
jo
lock
lods
jmp
dec
sti
jb
es
xchg
in
pusha
fidivrl
hlt
fadds
sbb
xor
mov
add
sbb
mov
cmc
testl
js
push
pop
mov
mov
sbb
xor
sbb
xchg
xchg
push
push
pop
gs
inc
loope
push
ror
mov
xlat
enter
add
in
mov
std
lds
jle
out
mov
insb
add
mov
sub
push
push
cli
push
mov
sahf
movsl
jle
push
je
ja
gs
inc
call
push
fs
stos
xor
jns
pop
stc
loop
out
adc
adc
jne
cmpsb
stc
test
xchg
insb
insb
dec
pop
inc
insb
sbb
cmp
add
iret
clc
cs
fisttpll
stc
xchg
and
js
scas
add
mov
jo
in
pop
hlt
and
repnz
and
dec
pushf
fistpl
arpl
imul
insb
xchg
and
and
divb
add
mov
jae
ds
insl
lods
lods
jns
lret
adc
mov
push
jle
lock
adc
les
sbb
cmpsl
pusha
pop
out
sbb
or
push
fcmovnbe
mov
and
mov
adc
test
shr
xorb
xlat
popf
rcrb
int
pop
imul
cmpsl
cli
push
outsb
sbb
pusha
test
fmuls
pop
cmpsb
fldenv
xor
mov
fldenv
dec
imul
push
dec
sub
push
ljmp
inc
cmp
pop
inc
into
mov
sbb
int
jb
cmp
icebp
cmpsb
das
loope
sbb
shlb
dec
adc
test
jle
cmp
sub
mov
jb
fadds
xchg
push
in
sahf
lock
xchg
jmp
inc
addr16
lds
add
push
repz
shrl
push
cmp
out
jae
stos
imul
arpl
fsubrl
xrelease
std
mov
sahf
lahf
jge
pusha
sbb
je,pt
aas
push
fists
sbb
mov
loope
sbb
inc
sbb
ret
aad
xchg
arpl
cmp
fistpl
je
push
inc
pop
test
shll
push
aam
sti
addr16
sub
ja
jp
pop
loope
das
or
repnz
mov
enter
ret
sbb
clts
insl
jl
shll
pushf
aad
pop
or
lea
rclb
mov
sub
add
cwtl
outsb
mov
pushf
popf
pop
mov
xchg
arpl
loope
js
dec
icebp
loope
lcall
push
aam
xchg
lret
cmpsb
addl
leave
xor
in
sbb
jg
xchg
fs
and
mov
cmp
jb
xor
xchg
mov
dec
mov
shrb
fadd
andb
xor
cmc
mov
and
pushf
out
ret
inc
xor
xchg
jp
push
xor
ja
mov
sti
jb
pop
fnstenv
lahf
add
imul
inc
or
dec
inc
aad
pop
in
jns
scas
adc
fsubl
call
dec
push
cs
test
shrb
jg
sbb
cmc
inc
xchg
icebp
imul
pop
into
jb
cmp
iret
adc
mov
jmp
outsl
sbb
nop
mov
xor
jp
mov
test
jmp
neg
icebp
jns
test
frstor
xchg
xor
xlat
dec
xchg
adc
adc
xchg
mov
push
out
jbe
mov
test
cli
stc
icebp
dec
cmp
ljmp
fisubl
js
lret
xlat
fwait
lods
cmp
sbb
xlat
call
push
add
sub
scas
adc
xor
and
out
pop
xchg
jno
cli
or
scas
lahf
out
es
test
xchg
jnp
je
or
popa
in
mov
sbb
incl
cmpl
push
lds
sbb
in
ret
or
or
fnstsw
scas
cmp
mov
jg
xchg
pop
cltd
pop
xlat
add
mov
adc
jno
popa
jns
movsb
jbe
fistps
cmp
jb
inc
mov
data16
add
add
push
xchg
popa
in
cwtl
icebp
add
mov
xor
orb
popa
inc
xchg
nop
movsb
cmp
jne
leave
out
cmc
sbb
jle
sbb
add
test
push
cvtdq2ps
aam
fistpl
pushf
roll
clc
push
mov
es
fsts
jg
fsub
dec
testb
push
inc
mov
fstps
pop
pushl
mov
sub
mov
jbe
and
std
sub
scas
xorb
popa
sub
fcoml
insb
scas
insl
inc
jns
jno
idiv
orb
mov
cmpsb
dec
enter
mov
cmp
test
jns
rcll
pushw
test
cmp
mov
pop
adc
mov
sti
fucomip
push
ja
inc
sbb
mov
push
adc
or
mov
mov
arpl
out
pop
jo
lods
les
mov
mov
and
sbb
push
add
les
pop
inc
cs
rorb
add
sbb
shll
shlb
shr
jnp
out
push
das
mov
imul
mov
ss
sti
mov
and
pushl
mov
jp
cmpsl
in
bound
out
push
adc
das
fnstenv
jno
orb
adc
bound
lret
sub
add
xor
test
xor
xor
inc
jbe
or
push
ds
pushf
pop
imul
popf
frstor
xchg
in
test
mov
pop
jge
jno
iret
dec
jle
dec
xchg
xor
icebp
push
hlt
iret
jb
sub
lds
iret
mov
dec
mulb
and
test
cmc
test
cwtl
cltd
xchg
or
mov
mov
sbb
push
dec
rorb
push
popf
iret
nop
movsl
push
rolb
or
repz
cmpsl
loopne
jmp
xor
fucom
push
cwtl
sbb
cmc
cmpsl
mov
lcall
dec
mov
cmp
subl
xor
push
xor
add
fwait
lret
lret
cmc
mov
out
sub
and
neg
rolb
cltd
adc
mov
mov
pop
js
aam
xchg
aam
rorb
mov
fsubrl
jne
mov
cmp
pop
jle
leave
pop
dec
rcll
jno
repnz
mov
stos
cmp
mov
xchg
jmp
jbe
cld
xor
pop
mov
sbb
sbb
popa
leave
aam
rcrb
dec
movsb
out
push
mov
sub
push
push
into
lret
fcos
in
sbb
adc
jno
sbb
and
data16
xchg
add
call
movsl
sbb
adc
lcall
addr16
mov
lods
cltd
adc
adcl
jno
popf
pushf
in
cld
jle
add
imul
test
repnz
sub
adc
lret
aam
and
jns
inc
mov
stos
subb
dec
cld
cmp
stos
pushf
cmpsw
idivb
mov
fwait
add
icebp
mov
lock
lret
pushf
mov
cmp
lock
jno
jno
add
imul
xlat
in
jl,pn
cmp
gs
mov
dec
out
and
int
sub
jp
pop
sahf
cmp
or
mov
fdivr
and
inc
sti
pop
aas
mov
in
out
mov
cmp
mov
testl
sbb
mov
outsl
mov
sub
repz
cmpsb
cwtl
adc
shl
jg
repz
and
adc
xchg
pop
fwait
mov
iret
inc
and
jae
lret
adc
out
gs
les
mov
jmp
pop
adc
fisubl
std
insb
negb
mov
test
add
dec
jmp
dec
push
push
adc
jecxz
push
fs
pushf
fstpl
or
lds
inc
add
dec
cmp
lret
nop
cwtl
adc
daa
bound
in
mov
js
fidivl
sbb
test
fcmovnb
out
jge
out
pop
push
sarb
loope
push
movsb
test
mov
js
icebp
mov
xor
jb
stos
inc
xor
jo
push
pop
or
push
fmuls
lret
mov
mov
subl
pop
jb
mov
das
jb
cmp
jg
insb
or
hlt
addr16
in
adc
add
jecxz
push
xor
in
leavew
in
insl
fdivs
adc
shll
inc
cmp
test
add
xchg
pop
fdivr
cwtl
test
aas
mov
inc
shl
sub
jp
inc
or
push
scas
lret
stc
ljmp
push
push
or
ret
lahf
mov
pop
sbbl
scas
test
or
sbb
fs
repnz
and
or
cmp
int
repnz
dec
pop
in
rorl
in
push
cmp
cmpsl
jle
mov
pusha
jp
movl
add
lea
push
sbb
push
out
inc
inc
push
cmp
xchg
mov
aas
stos
jns
and
repz
test
mov
add
mov
mov
call
test
mov
inc
lods
iret
or
inc
movsl
sub
mov
mov
idivl
cmc
jo
outsl
lret
cmp
push
and
ljmp
jp
sbb
bound
dec
outsb
xchg
cmp
mov
push
sub
push
incl
mov
arpl
adc
and
jno
mov
sub
ficoms
sub
mov
sbb
jp
insb
jmp
xchg
mov
cmp
sub
subb
rcl
jno
dec
mov
loope
push
je
addr16
testl
lods
outsl
hlt
xchg
lahf
out
cmpl
push
mov
inc
jmp
sub
out
xchg
cmp
rep
data16
test
idivl
mov
incl
test
sub
cmp
lods
mov
mov
xlat
mov
push
dec
icebp
scas
and
ficomps
das
xchg
jge
pop
nop
jge
aaa
sbb
mov
add
insb
dec
scas
pop
ss
cltd
adc
insb
aad
cli
fisubrs
call
xchg
jb
xor
lock
add
xor
mov
pop
rol
jb
fcompl
xchg
repnz
push
pop
shr
xor
mov
popf
clc
sub
xchg
lods
xchg
sub
nop
loopne
hlt
xlat
and
pop
pop
movsb
cs
fwait
mov
jmp
insb
push
jl
add
jbe
lea
lock
xor
and
incl
ret
push
out
sar
mulb
out
mov
adc
mov
js
cmpsl
dec
outsl
jb
adc
push
jbe
sub
add
add
jb
mov
mov
inc
stos
inc
out
into
out
dec
push
inc
int3
stos
aas
shrl
mov
adc
cmp
in
jmp
and
xchg
fwait
push
jp
cli
out
push
arpl
aam
mov
jnp
into
cmpsl
fldcw
mov
lock
cs
pop
ret
sbb
pop
negl
sub
mov
adc
scas
dec
fistpll
xchg
call
mov
adc
adc
mov
lods
xchg
inc
inc
punpcklwd
mov
addr16
inc
arpl
aam
aam
arpl
ss
ja
popa
cli
jbe
push
mov
cld
mov
repnz
lods
mov
dec
pop
stc
pop
shlb
xchg
outsb
jbe
ss
out
movsl
push
add
imul
push
xchg
push
pusha
inc
mov
shll
sar
pushl
mov
mov
popf
imul
punpckhbw
js
lret
and
hlt
push
jo
cmpsl
cmp
fdivl
rcll
jecxz
data16
loope
je
ja
das
clc
mov
orb
loop
daa
sahf
in
fldt
jge
call
shll
inc
insl
out
cmc
je
fcompl
mov
xorb
cli
leave
push
fldt
sub
pop
and
or
mov
jnp
lods
fcomip
sbb
pushf
lock
dec
xchg
jne
sub
dec
pop
sbb
add
pop
movsb
mov
pop
jge
xor
popa
xor
pop
mov
mov
push
mov
add
popa
cmp
dec
in
or
in
dec
dec
inc
mov
ret
push
shlb
pop
out
lods
test
cmpsb
push
inc
aam
fdivl
mov
movsb
lahf
test
inc
daa
shll
or
xor
jp
loopne
push
rcr
test
or
xor
cmp
out
xchg
out
repz
jo
popf
ljmp
aad
adc
xchg
out
jb
pop
add
mov
mov
out
out
mov
out
add
pushf
ss
jge
ficomps
mov
imul
inc
xor
push
dec
xchg
mov
in
nop
push
pop
scas
xchg
mov
push
sarb
pop
int3
hlt
mov
test
mov
adc
cmpsb
pop
push
xchg
or
push
sub
aaa
xor
popa
lcall
pop
or
imul
addr16
mov
mov
push
pop
gs
in
xchg
aas
pop
lcall
call
sub
inc
fcompl
jg
cli
adc
adc
pop
xchg
push
cmc
xchg
jp
cmp
mov
xlat
out
clc
les
jl
outsb
pop
sbb
xchg
and
notb
mov
ja
rep
jo
add
movd
or
lock
jmp
rcrb
inc
leave
or
xor
int3
out
lahf
pop
fsubp
dec
lods
repnz
cli
lods
adc
sbb
add
push
push
inc
clc
xchg
ljmp
insl
mov
fcomps
lods
xchg
cmp
push
mov
mov
inc
aam
mov
cli
push
sub
dec
cmp
inc
pop
sub
mov
cmp
sbb
or
mov
outsl
inc
movsl
inc
and
fmull
mov
clc
and
mov
out
and
pop
mov
in
icebp
scas
jo
aaa
lret
xor
add
insl
xchg
bound
mov
call
pop
in
lock
ret
xchg
xor
int3
cmp
movsb
fidivl
fnsave
fildll
pushf
je
rcrb
jo
sti
pushf
xchg
lods
repnz
xchg
fcompl
aaa
fisubrs
pop
adc
sti
jmp
mov
mov
lds
movsl
mov
shll
test
adc
ds
popl
push
xor
xor
sub
add
jmp
sub
sarl
cs
sbb
add
int
bnd
icebp
xchg
and
jl
push
rclb
stos
mov
ret
in
xchg
dec
loop
adc
addr16
cmc
xchg
sarb
lret
jmp
inc
xchg
sbb
sbb
and
lea
cmpsl
pop
pop
mov
xchg
mov
pop
mov
nop
push
ja
mov
cmp
ret
ss
cmp
orl
adc
das
in
ret
rcll
outsl
mov
push
pusha
lcall
add
pop
lods
sub
and
js
push
iret
push
mov
cmp
or
fs
hlt
mov
pop
pop
cmp
jnp
movsb
inc
out
adc
idivb
out
insb
or
inc
mov
add
ja,pn
xor
add
enter
pop
lret
xchg
in
jno
das
jb
and
xor
fadds
orl
cwtl
jge
cmp
stos
pop
pushf
nop
testl
lods
hlt
cli
sahf
lds
das
fdivl
jns
ss
xchg
ja
movsl
sub
jle
mov
cmc
sub
scas
out
or
pop
cld
lods
mov
out
pop
test
psrad
and
dec
loope
add
mov
and
xchg
arpl
mov
enter
mov
in
push
xor
rcll
roll
je
and
es
xchg
cmpsl
xor
scas
jno
fisttps
push
add
mov
out
and
pop
test
or
adc
fwait
xor
or
adc
inc
mov
arpl
mov
imul
aad
out
rcrl
jp
cmpsl
mov
bound
xchg
pop
fnstsw
fstps
inc
pop
mov
sub
or
xchg
and
jnp
testl
xor
pop
dec
dec
jge
dec
inc
or
scas
ss
aaa
js
ja
call
pushf
and
repz
stc
roll
sbb
int
imul
and
fstps
cmp
jns
push
icebp
sbb
push
das
popf
imul
roll
sbb
mov
ljmp
jae
pop
add
sbb
xchg
and
push
popa
xchg
inc
and
sbb
cld
sub
ds
pusha
mulb
jne
gs
arpl
push
les
jmp
lock
sar
jle
lds
push
aad
mov
push
sbbl
mov
lcall
sbbl
mov
shrb
dec
pop
fs
nop
stc
pop
stos
aaa
sti
imul
xor
shll
leave
popa
add
mov
cmp
jbe
and
in
aad
call
sbb
arpl
jno
movb
aas
cmp
jp
xchg
loop
pop
ljmp
into
and
sti
stos
cmp
and
sbb
dec
fisubrs
je
add
insl
inc
movsb
mov
jbe
call
mov
adc
call
ds
push
nop
pop
lcall
adcb
daa
jle
inc
mov
roll
mov
sub
push
shr
adc
cmpsb
mov
ljmp
or
inc
pushf
fsub
das
pop
cmpl
je
test
sbb
mov
dec
jmp
fdivp
push
popf
daa
or
xchg
fistps
or
das
push
test
pushl
cld
xchg
xchg
dec
addr16
or
xor
mov
xchg
push
sbb
xor
cmc
loopne
cmpsb
mov
scas
mov
lods
jmp
lock
adc
mov
cli
cld
scas
int
jne
test
enter
and
mov
mov
shll
mov
push
push
insb
cmp
mov
sub
push
and
cmpsb
clc
andl
mov
add
in
cmpsl
pop
mov
mov
nop
repz
movsl
xchg
movsb
leave
enter
js
or
or
mov
aad
add
xor
inc
xlat
sub
or
adc
adc
mov
push
mov
imul
test
xor
mov
int3
stc
dec
aaa
test
lcall
cmpsb
pop
shrw
mov
push
ljmp
jp
push
cmpsb
jecxz
int
pop
cmp
jno
add
jle
sub
fadds
sbb
xchg
in
out
mov
cwtl
and
jl
xchg
cmpsl
out
xchg
nop
lret
or
or
addr16
add
and
dec
cmp
fs
scas
rcrl
lret
je
mov
mov
push
mov
inc
mov
outsb
mov
mov
push
ret
mov
xorl
popf
push
stos
aaa
imul
mov
test
daa
add
mov
ret
xor
fsincos
loop
cmc
scas
data16
in
gs
sub
mov
mov
or
xor
ret
into
xchg
mov
mov
push
dec
stc
gs
adc
xchg
clc
cmp
pop
cmpsl
fsts
jns
add
idiv
mov
sti
test
sbb
sbb
aam
sub
dec
lods
movb
sahf
adc
sub
jo
repnz
pop
push
or
lods
int
jno
add
jg
stos
xor
xchg
mov
jge
test
gs
out
cmp
and
mov
and
jb
test
push
inc
in
adc
cmp
and
or
jno
inc
shr
lahf
sub
in
stos
addr16
cmp
lods
dec
lods
ret
aaa
js
dec
outsl
lods
push
leave
push
fldcw
xchg
push
insl
xor
inc
fidivrs
insb
outsb
jge
fstpt
leave
cmpb
xchg
push
pop
cmp
and
jno
jg
clc
lcall
adc
adc
cmpl
in
cmp
or
je
nop
sahf
mov
out
cltd
dec
sub
adc
sbb
fisttps
xchg
in
pop
push
stos
jp
cmp
jge
mov
dec
mov
lods
les
lcall
push
fildll
sbb
insb
test
add
xchg
sti
lret
loopne
icebp
mov
cmc
arpl
push
cmpsb
loopne
and
iret
inc
int3
ds
sub
add
movsl
pop
add
lods
loope
cld
fidivl
ljmp
inc
pushl
mov
pop
test
out
hlt
std
lret
mov
loopne
push
setge
add
lret
nop
and
arpl
aam
sarl
test
and
push
or
gs
lret
and
cmpsb
ret
into
sub
dec
lock
cs
xchg
insb
pop
mov
inc
dec
subl
cs
pop
xor
popf
popf
clc
sbb
cmp
dec
repz
mov
and
loop
or
fdivrs
jno
fs
sbb
in
int3
fldl2t
lea
sbb
push
push
outsl
mov
cmc
addr16
inc
push
outsl
jns
stos
rcll
inc
cld
sti
xor
or
es
dec
jb
ja
push
jns
sbb
adcb
adc
bound
idivl
imul
adc
or
dec
or
sbb
xor
jb
into
jo
jmp
push
fcomps
and
inc
outsb
inc
dec
imul
push
sahf
sahf
adcl
jb
and
pusha
stos
ficoms
and
mov
inc
pop
clc
jmp
cltd
lods
dec
jns
push
mov
cmp
pop
pushf
lea
xor
cmpsl
push
xlat
outsl
sbb
scas
dec
jp,pt
leave
iret
push
aad
or
lds
popa
and
dec
cmp
dec
test
add
cmc
jb
xchg
or
mov
cmp
fdivs
lret
dec
icebp
sub
mov
dec
daa
stos
arpl
movsb
and
jmp
jno
xlat
mov
and
mov
lods
xor
stc
cmp
mov
movsb
int3
adc
in
outsb
mov
dec
pop
leave
std
mov
cmp
mov
rclb
aad
int
dec
xor
pushf
or
mov
jb
pop
jnp
daa
xor
add
mov
stos
push
push
pop
mov
sbbl
lods
xchg
fnstenv
loop
sarb
sub
cmp
sub
sbb
jmp
pop
sub
test
adc
cli
sti
adc
aam
xchg
xorb
and
divb
sub
mov
cwtl
mov
cld
pop
stc
pop
shll
mov
call
dec
adc
call
lcall
mov
xor
mov
pop
adcl
push
add
sub
stc
rorb
xor
and
adc
fistps
pop
add
fisttps
movsl
xor
stos
lahf
mov
lock
or
leave
loope
xor
outsl
pop
mov
call
insl
adc
and
adc
sbbb
mov
data16
mov
cmp
out
push
fnsave
test
mov
xchg
pop
pop
xchg
aaa
add
and
inc
fs
dec
std
dec
in
pop
jnp
lods
xchg
add
in
jo
jecxz
push
and
sub
and
cmp
mov
popa
or
cmpl
mov
sbb
xchg
dec
mov
sbb
sub
and
add
sbb
int
insl
jge
adc
fildl
iret
dec
idivl
adc
andl
mov
scas
js
aas
pop
sub
push
std
xchg
clc
mov
mov
aaa
out
call
add
mov
mov
filds
xchg
int3
out
ja
cltd
xchg
or
mov
scas
fs
rolb
test
int3
xchg
inc
xchg
jg
shll
ret
jle
mov
daa
push
movsb
ret
cmp
fnstenv
dec
cmp
bound
push
cli
dec
leave
push
loop
xchg
or
jb
iret
ljmp
jl
rol
mov
xchg
jl
sbb
test
cmpb
popf
sub
out
outsl
cvttps2pi
les
mov
rorl
sbb
fld
outsb
pop
fistpll
mov
push
stos
repz
aam
pushf
test
mov
hlt
or
and
sub
jge
mov
addb
ficompl
fisubs
movsb
inc
and
pop
cs
ljmp
daa
push
pop
push
or
lret
xchg
adc
in
int3
rolb
popl
test
les
out
mov
int3
mov
push
loop
insb
add
ret
xor
sbb
leave
roll
lods
call
push
xchg
add
xchg
or
xchg
or
push
push
inc
push
mov
call
cli
ret
dec
add
cmpsl
sbb
lret
movsb
sub
loope
xor
lods
jg
add
mov
ss
inc
stc
stc
or
push
cmp
lock
or
mov
dec
sbb
xchg
xchg
lret
add
neg
ljmp
mov
mov
fucom
psrld
inc
or
inc
repnz
lahf
aaa
out
test
mov
mov
mov
xchg
and
dec
aaa
push
inc
jle
sbb
xchg
mov
ja
push
movsb
pop
mov
nop
call
push
aaa
frstor
aad
enter
enter
jo
cmpb
ja
pusha
inc
fcmovnu
xchg
out
mull
push
push
ds
pop
push
lds
pop
push
or
imul
icebp
in
std
jnp
mov
out
insl
mov
scas
imul
xor
push
movsb
insb
loopne
mov
out
adc
mov
mov
push
add
subb
pop
mov
mov
mov
adc
inc
lods
mov
jge
pop
movsl
sub
fldt
stos
stc
xor
fildl
push
das
fcom
outsb
nop
leave
and
push
add
mov
mov
mov
push
jle
sub
fiadds
xor
xchg
cmp
mov
xchg
inc
scas
adcl
inc
jle
push
in
xlat
cs
sub
mov
adc
push
andb
jmp
inc
sti
cmp
adc
xchg
cs
push
cmp
and
adc
lods
std
sbb
mov
mov
jge
iret
cmp
mov
and
jp
sahf
mov
xor
dec
cmc
cmp
imul
mov
mov
sti
out
sbb
and
repnz
push
jl
lahf
shr
sbb
add
dec
das
push
xchg
popa
xchg
cwtl
push
mov
ficompl
aaa
pop
xchg
mov
xchg
aas
into
mov
mov
js
or
mov
inc
jecxz
pop
cld
or
sbb
icebp
js
out
dec
in
push
lods
fstpt
jle
mov
loope
hlt
inc
in
mov
or
out
scas
cli
pop
add
cwtl
adc
ljmp
xadd
mov
fimuls
nop
int3
mov
jle
jecxz
mov
xchg
int
xchg
cld
mov
fsts
out
mov
ljmp
gs
popf
insb
out
xchg
pop
pop
sbb
mov
jge
nop
ds
sub
and
mov
xchg
fs
clc
push
jmp
out
test
dec
pushf
cmpsl
sti
cmp
fnsave
movsb
shll
add
out
fisubl
loop
nop
inc
pinsrw
cmpsl
lds
pop
out
sbb
pop
dec
int3
les
fcmovnb
movsb
add
mov
cwtl
into
sbb
push
andl
clc
push
add
rorb
mov
sbb
cmp
xor
dec
or
add
xchg
cwtl
hlt
adc
cmp
das
inc
sbb
inc
pop
and
ja
mov
cmp
pop
gs
push
xchg
jne
pop
fwait
cs
push
ja
mov
pusha
test
ret
lods
cs
je
sbb
mulb
adc
shrl
and
int3
lods
lods
es
insl
stos
rcrb
mov
divl
movsb
xchg
or
xchg
add
fs
add
insl
xor
xor
insb
sub
test
mov
js
inc
icebp
addb
dec
dec
sbb
mov
lods
ds
outsb
xor
inc
mov
sub
mov
adc
cltd
fildl
jge
inc
mov
or
shrb
sbb
iret
xchg
mov
loope,pt
inc
jae
and
mov
pop
xor
jo
or
inc
add
pop
fidivrs
shll
xlat
or
lods
cld
mov
ljmp
lods
notb
jae
pop
hlt
and
scas
push
sbb
rclb
insb
pop
or
push
test
test
gs
pusha
or
xor
push
nop
dec
jg
ficoml
cmpsb
hlt
xchg
and
fdivrs
test
mov
inc
imul
loopne
movsl
sub
rcrb
xchg
je
nop
mov
shrb
add
aaa
inc
fisttps
or
bound
mov
adcl
je
in
aas
jl
lret
jno
repz
jno
adc
adc
xchg
mov
ds
inc
jo
bound
iret
or
mov
adc
int3
jnp
das
jl
pop
add
pop
aaa
push
push
dec
push
push
icebp
test
lret
xchg
xor
lods
ret
pop
cwtl
sbb
mov
sub
xchg
jne
inc
call
mov
push
fidivrl
adc
outsl
out
daa
cmp
xchg
pop
adc
sbb
ja
and
jg
or
xchg
mov
es
mov
addr16
cltd
arpl
lea
out
lods
jae
insl
xlat
sub
add
cmp
pop
pop
stc
or
aaa
addl
push
pop
jb
pop
xor
addb
dec
sar
push
std
mov
or
pop
pop
cmp
mov
cld
arpl
add
sbb
stc
dec
xchg
negl
adcb
shll
in
mov
xchg
push
or
inc
dec
and
loop
dec
xchg
xor
pop
xchg
jmp
cmp
and
out
pop
fisttpll
dec
pop
insb
imul
jge
daa
repz
movsb
cmp
shrl
xchg
jge
pop
pop
pop
and
adc
push
aas
push
jmp
mov
lahf
ret
add
das
xchg
or
int3
dec
lcall
mov
in
push
and
cmpsl
adc
sahf
or
data16
lahf
adc
jmp
dec
jmp
sbb
inc
jg
and
cmp
or
mov
pop
arpl
insb
fwait
pop
enter
mov
jle
inc
addr16
leave
fcomps
xchg
inc
enter
mov
push
mov
sar
shlb
push
fdivrl
aaa
sbb
cld
xor
push
bound
cmp
mov
xchg
cmpsl
add
pop
rcrl
push
mov
xchg
mov
and
inc
jo
dec
or
mov
fcmovbe
jmp
jmp
xor
sbb
out
icebp
push
jo
mov
int3
clc
aam
divps
xchg
sub
fisubrl
xchg
push
or
cmp
repz
js
sahf
pop
out
push
push
sti
ja
cs
adc
push
sub
into
xchg
pop
pop
dec
shll
or
adc
or
mov
mov
fldcw
or
jne
push
jae
fs
stos
mov
xor
mov
mov
bound
and
out
mov
sub
xor
sub
out
push
sbb
das
cmp
mov
arpl
sbb
enter
sbb
lret
mov
dec
movsb
inc
cmp
xor
pop
xchg
int
in
negl
xor
pop
jg
inc
dec
inc
mov
and
lahf
inc
dec
sub
mov
pop
test
in
imul
fsts
cmc
cmp
mov
xchg
shrb
lret
jnp
loopne
push
in
push
icebp
dec
mov
test
dec
xchg
addl
sti
adc
outsb
pop
sbb
push
add
fdivrs
inc
mov
in
mov
jmp
xor
cwtl
cmc
jp
xor
xchg
xchg
mov
add
gs
cmp
in
dec
sarl
mov
xor
jecxz
inc
aam
dec
jne
cmp
or
movd
lcall
xor
add
mov
sbb
xchg
shrb
out
lods
adc
adc
fs
push
orb
pop
push
cltd
jb
neg
xor
mov
pop
dec
jo
cmpsb
sahf
inc
push
das
or
dec
inc
adc
jg
jns
add
movsl
or
imul
mov
jb
out
cli
std
stos
enter
shl
add
repz
lret
add
add
mov
jne
scas
mov
fs
mov
add
adc
jae
lds
push
add
jno
and
pop
adc
fs
rcrb
je
add
iret
push
outsb
leave
in
std
xlat
adc
ljmp
push
lods
clc
addb
cmp
or
in
sahf
cmp
mov
fistps
lcall
fwait
ja
repnz
or
pxor
fldcw
aad
pop
cli
aam
scas
adc
loop
lea
push
inc
in
add
dec
movsb
jle
xchg
in
push
iret
jl
mov
aaa
cmp
clc
inc
cmpsl
mov
xchg
testl
mov
loop,pt
rolb
cli
jl
adc
inc
cwtl
mov
gs
aad
jns
sub
inc
or
mov
idiv
dec
mov
jl
loopne
mov
push
cmp
divl
jnp
xorl
xor
pop
cmc
adc
and
sbb
pop
add
hlt
sbb
xchg
call
sbb
inc
cmp
cld
aad
or
popf
lds
test
into
push
mov
popa
ljmp
in
ds
jecxz
push
fdivrl
or
dec
pushf
mov
ss
adc
testl
or
pop
cli
xor
lea
jne
scas
mov
popf
data16
data16
xchg
ljmp
ljmp
xchg
mov
rsm
inc
rorb
push
je
gs
mov
insl
out
sbb
js
shlb
callw
jmp
jo
jb
arpl
test
pop
into
sbb
cltd
imul
cmpsb
or
mov
in
xchg
ret
in
shr
push
mov
out
cmp
or
fidivrl
shlb
insb
adcb
loop
push
adc
cmp
in
inc
out
lcall
out
jbe
shll
test
mov
out
out
mov
es
movsl
insb
ffreep
xchg
or
jb
or
sbb
sarb
mov
push
outsb
pop
hlt
inc
faddl
ror
mov
lods
jmp
sarb
sahf
cmp
push
xor
dec
sub
sub
pop
jle
int
jae
and
dec
in
call
inc
divb
push
aam
and
push
add
call
jmp
mov
out
inc
inc
xor
aaa
gs
cmp
out
mov
frstor
and
test
xor
xorb
sub
rorb
xchg
cs
icebp
out
repz
not
jo
inc
fstl
sbb
dec
dec
inc
jnp
enter
or
or
rol
mov
fcoml
pop
xor
cltd
pop
sub
fsubs
cmp
xor
or
int3
inc
rcr
test
in
pop
nop
cmc
mov
leave
lcall
sub
mov
add
sbb
stc
shl
test
push
sahf
mov
jp
dec
rorb
ja
push
fldt
fistpll
xchg
pop
xchg
mov
test
sbb
outsb
adc
std
push
jecxz
fwait
imul
mov
sar
pop
movsl
push
scas
fsubs
lret
pop
rcl
movsl
mov
or
fdivl
stos
shr
cmpsb
xor
dec
outsb
sbb
or
lods
fstpt
and
cmp
xor
add
pushf
ds
faddl
xor
xor
cld
jp
ficomps
xchg
ja
es
clc
addr16
lods
ror
test
aad
sbb
ds
cmp
sbb
xchg
mov
dec
or
xor
or
and
lahf
scas
adc
or
stc
ds
loop
xchg
inc
mov
cmc
pusha
dec
dec
xchg
jb
imul
jne
mov
aaa
dec
add
pop
icebp
daa
sahf
fbstp
or
ss
fistl
inc
mov
xchg
repnz
inc
ret
dec
xchg
adc
or
fwait
push
and
incl
mov
and
mov
xchg
in
mov
ja
sub
mov
xchg
jp
mov
dec
sti
xchg
mov
cmp
sub
jl
outsb
js
jl
inc
lret
cmp
xor
inc
add
mov
xchg
aam
push
repnz
fsqrt
repnz
mov
and
jecxz
cmp
cmc
and
pushf
insl
xchg
jle
shrb
in
jno
add
outsb
sahf
mov
jecxz
adc
xchg
pop
mov
pop
lret
lods
fs
jno
jo
lcall
cmp
lret
movb
in
jae
xchg
into
push
xchg
pop
or
cmc
jno
lds
sbb
and
mov
out
push
mov
jmp
sahf
xor
or
hlt
je
out
mov
out
jbe
sbb
rolb
inc
out
mov
fmuls
rcrl
je
popa
mov
mov
push
mov
stos
jne
jle
mov
mov
sbb
dec
daa
in
lea
dec
xchg
mov
int3
mov
sbb
mov
mov
out
pop
mov
ja
in
test
in
int3
aam
add
xchg
fsubl
sti
and
loope
pop
fldenv
add
inc
fimuls
mov
mov
lahf
xchg
repz
fs
sub
fnstsw
pop
mov
rolb
push
mov
andl
sub
and
int3
stos
inc
inc
mov
jecxz
xchg
adc
mov
and
mov
dec
cli
fcomps
lea
add
stos
pop
incb
dec
fsubs
dec
add
pop
sub
jns
lea
sbb
add
mov
rcrl
inc
lret
sti
sbb
int
or
aaa
xchg
popa
xor
pop
add
sub
push
in
xchg
push
dec
roll
jmp
push
inc
lock
dec
add
fldenv
ds
push
jae
in
adc
inc
shrb
or
je
movsb
xchg
jnp
call
jecxz
and
mov
xchg
cli
xchg
mov
dec
mov
pop
fiadds
jl
inc
mov
jl
xor
aas
mov
fsubrl
push
mov
xchg
jg
aaa
mov
jp
les
leave
ret
das
std
pop
jb
ror
push
ret
clc
dec
xchg
aam
cld
sbb
push
movsl
out
test
push
jns
inc
push
and
sti
lds
push
adc
lret
mov
pop
xor
cmpsb
stos
enter
xor
notl
pop
mov
seta
repnz
cmpsl
cli
mov
addl
cmp
dec
leave
fisttpl
aaa
xchg
nop
inc
jl
inc
adc
pushf
and
aas
inc
cmp
xor
into
or
inc
sbb
imul
ret
mov
sub
popa
sub
std
or
add
xor
mov
add
call
or
fistpl
repnz
ja
lahf
xchg
adc
xchg
cmp
jns
fisttpll
add
dec
mov
or
mov
mov
and
pop
mov
sub
add
in
mov
fmull
aas
sbb
jnp
push
scas
mov
sbb
mov
popa
insl
mov
scas
inc
rol
call
jmp
arpl
imul
out
jg
xor
cmp
addr16
dec
rclb
inc
ja
pop
testl
lret
pop
int3
test
push
mov
jae
jl
mov
cli
rcrl
add
jecxz
fs
inc
cs
push
sub
in
fnstenv
ds
mov
inc
out
push
dec
mov
or
mov
test
xlat
movsl
and
outsl
xchg
cld
push
fsubr
inc
pop
cmp
inc
arpl
and
fdivl
jo
mov
mov
cmp
xchg
cwtl
pushf
jecxz
xor
xchg
or
jae
leave
sbb
dec
dec
pushf
jle
mov
and
ja
addr16
shlb
rcrl
pop
xchg
push
insb
xlat
std
bound
adc
pop
xchg
dec
out
cmp
movsb
mov
dec
icebp
inc
aas
mov
dec
cli
addb
xchg
aad
dec
ljmp
cwtl
arpl
push
cmp
adc
dec
xor
or
xchg
sti
insl
pop
push
jno
fcomi
adc
mov
sub
scas
arpl
mov
jns
aas
icebp
mov
scas
or
bnd
or
push
sub
xchg
push
cmp
cwtl
negl
or
shll
movsb
push
add
xchg
scas
dec
inc
lods
lods
in
xor
jbe
mov
mov
mov
add
stos
mul
iret
cltd
cs
stos
adc
movsl
lods
fldcw
mov
cmp
lahf
ret
cltd
imul
dec
test
lock
out
pop
in
es
aas
push
jmp
xchg
lock
ljmp
inc
inc
mov
call
adc
and
add
pusha
mov
xchg
xchg
cmpl
or
iret
in
mov
mov
icebp
and
lods
ds
xchg
ds
mov
arpl
mov
stc
mov
repnz
mov
mov
sbb
fldlg2
sbb
inc
test
data16
pop
adc
jo
adc
cmp
push
dec
imul
add
das
mov
lea
pop
into
call
stc
lret
jae
stos
std
dec
lahf
mov
pusha
push
inc
rclb
stos
jbe
add
push
sti
add
xchg
jae
data16
dec
xchg
mov
pop
and
inc
jb
xorl
add
jns
mov
xchg
cmp
add
out
mov
adc
frstor
data16
loop
inc
push
stos
fisubl
popa
test
xor
lret
jmp
adc
roll
xchg
pop
cmp
stc
inc
imul
fdivs
cmp
dec
push
insl
pop
cld
mov
mov
pop
fs
rorb
mov
push
fnstcw
clc
sti
fucomip
daa
pusha
test
fs
js
xchg
push
test
sbb
rorb
mov
dec
jecxz
shl
in
movsl
pop
dec
in
push
push
nop
test
and
jg
lahf
rol
scas
mov
push
out
lahf
gs
mov
test
mov
xchg
sbb
xchg
fbld
push
dec
mov
fcoml
stos
sub
mov
xor
xchg
pop
pop
repz
test
outsl
cwtl
inc
in
fdivrs
sahf
sub
or
fidivrs
je
imul
and
fcompl
scas
lret
pop
sahf
pop
adc
stos
pop
cmp
inc
xor
push
int
push
cmp
ss
pop
stc
dec
pusha
lret
das
jno
repnz
into
jbe
fimull
push
cmpsl
push
aas
lret
sub
jo
inc
pop
add
cmc
test
pop
xchg
xchg
stos
out
notl
clc
push
jmp
ja
fildll
icebp
xchg
stc
mov
add
repnz
push
lods
sbb
lds
in
inc
in
int
jge
mov
hlt
inc
push
pop
scas
xchg
stc
sbb
ja
lock
lret
data16
dec
mov
jl
mov
jae
test
or
inc
cmpsb
ljmp
out
mov
xlat
push
iret
xchg
push
adc
or
jl
fldcw
in
adc
stos
cwtl
or
add
mov
lahf
orb
lcall
fs
lret
insb
push
or
mov
aas
stos
icebp
jo
movsl
sbb
cmp
mov
fcomi
sbb
imul
adc
testb
xor
roll
pop
mov
mov
push
xchg
fsubl
decl
mov
cmpsl
jne
inc
in
sbb
inc
mov
xor
je
call
clc
pop
mov
push
sbb
inc
in
jg
pop
lea
ss
cmp
js,pt
add
xorl
jo
pop
stos
sti
adc
adc
pop
arpl
fs
add
and
add
sahf
pop
out
push
jp
movsb
xor
iret
and
rclb
xor
add
int3
push
adc
xchg
pop
sbb
mov
lret
ror
std
stos
xor
je
xor
addl
int3
or
lds
jo
lea
fistpll
ljmp
movsl
xchg
sub
mov
cltd
out
push
aaa
insl
outsb
mov
jb
fidivrl
cltd
xlat
popf
les
xor
daa
lock
fstpt
lods
sub
sub
xabort
push
out
ja
push
leave
es
inc
xor
je
mov
and
insb
dec
into
mov
mov
mov
cmp
icebp
clc
ja
test
dec
fwait
add
inc
nop
in
mov
sbb
lret
shlb
pop
mov
fistpl
ljmp
dec
lahf
pop
stos
test
xchg
lret
push
ja
hlt
push
inc
pop
mov
arpl
xchg
add
cmp
adc
aas
out
push
jp
lock
push
test
sbb
xchg
div
push
jo
out
ss
icebp
cmp
adc
repz
xchg
push
xchg
cmp
jb
outsl
bound
adc
mov
cltd
adc
cs
xchg
ficompl
repnz
loope
cmp
sbb
mov
ret
mov
add
push
and
lea
push
sub
cmp
fnstenv
lods
aam
fsubp
sub
pop
fsubl
xchg
in
outsb
fisttps
sbb
cmp
dec
hlt
add
dec
out
and
dec
xchg
sub
dec
dec
test
adc
fdivl
and
addb
push
push
mov
add
dec
push
add
aad
pop
pop
fmuls
ret
dec
push
ja
adc
sbb
sub
mov
movsl
push
mov
popa
xor
faddp
adc
jo
and
pop
dec
mov
fistpll
hlt
clc
in
cltd
inc
loop
xchg
push
mov
mov
and
lret
lock
popf
imul
mov
xor
cmc
mov
fcomps
cld
lahf
xchg
mov
iret
sbb
sbb
inc
pop
daa
mov
pushf
scas
adc
into
xor
or
test
push
jl
xor
js
inc
mov
add
mov
adcb
and
cmp
pop
mov
inc
pop
xlat
adc
push
aaa
mov
jmp
sbb
pusha
pop
dec
mov
imul
add
adc
repnz
jns
mov
loope
ljmp
data16
cmp
fwait
cmpsl
negb
and
gs
cmc
inc
or
loope
in
enter
push
sarl
daa
scas
in
ljmp
xchg
mov
jbe
and
or
aad
stc
out
pop
jnp
mul
push
fmuls
mov
adc
in
cmc
shll
bnd
aam
lcall
pop
pop
es
inc
xor
jle
jne
pop
mov
push
sarb
lock
imul
lds
xor
js
pop
int
fsubrl
mov
hlt
cld
pop
jp
data16
inc
sub
xchg
gs
jp
cltd
push
mov
jp
aaa
adc
inc
jge
nop
fs
dec
sbbl
mov
sbbl
and
ret
rcl
scas
adcl
popf
cmp
xor
leave
mov
pop
push
pop
lcall
or
cmpsb
inc
jge
cli
xor
test
push
lret
xor
push
cmpsb
cwtl
pop
fs
cmc
nop
mov
out
cmpsl
aam
je
adc
mov
das
mov
or
inc
imul
mov
pushf
mov
repnz
int3
push
mov
inc
add
cmp
mov
add
dec
test
pop
cmp
add
adc
adc
scas
daa
dec
xor
pop
popa
jge
mov
push
mov
stc
addr16
ja
pop
psrld
scas
fisttps
lods
dec
add
jge
das
outsb
sub
int3
fbld
push
and
xor
nop
mov
sub
pop
mov
push
popf
dec
bound
repz
pop
sub
pop
push
int3
fnstcw
cmovg
mov
not
mov
push
sahf
xor
loop
enter
ss
cmpsb
sbb
hlt
cmpl
sbb
insb
add
xor
jle
fisubrl
test
mov
adc
pushf
push
add
sarl
fs
push
sbb
dec
ja
inc
in
enter
cmp
adc
jns
pop
adc
cwtl
mov
or
push
sbb
jns
add
and
popa
arpl
xchg
or
imul
gs
sbb
das
sub
sar
in
mov
repnz
xchg
scas
leave
pushf
lret
rcll
add
inc
mov
sbb
or
imul
push
ds
call
or
shr
mov
cld
mov
dec
push
pop
adc
pop
mov
fstps
js
xchg
mov
or
push
nop
mov
test
fldt
mov
les
fildl
ja
cs
add
cmpsb
cmp
ss
mov
pop
add
in
mov
add
sub
int
mov
dec
xchg
jg
jb
xchg
fcompl
mov
ret
fdivr
xor
out
es
pusha
pop
cmp
sti
dec
pop
jge
imulb
xlat
xor
clc
aad
or
sub
shll
pop
inc
xchg
cmc
movsl
xchg
xchg
push
pushf
mov
sahf
sbb
sti
sub
xor
adc
sbb
push
mov
popa
push
movsl
fdivr
xchg
cmp
sbb
fadd
and
or
sbb
fisubs
data16
push
mov
sbb
les
sti
jp
scas
or
fstpl
xor
xor
jae
push
jae
inc
shll
icebp
cld
mov
pop
cwtl
popa
ror
xor
jo
les
loopne
dec
adc
popa
popa
xchg
add
mov
mov
subb
das
imul
or
jo
xchg
test
xchg
cmp
test
adc
scas
jge
inc
xor
out
jmp
aad
lsl
cld
mov
scas
fisttpll
fadd
mov
or
aad
add
push
jmp
mov
adc
xor
jmp
jecxz
mov
test
mov
mov
rcr
or
mov
out
inc
xchg
pop
sahf
inc
lds
call
jmp
rcrb
shrb
sti
ja
mov
cld
int3
jbe
xchg
cmpsl
pop
mov
dec
mov
push
mov
mov
add
cwtl
scas
pop
push
cmpsb
pop
test
loop
fisttpll
lret
into
scas
push
adc
cltd
push
test
insl
dec
bswap
fisubrs
jl
stos
pop
or
es
mov
aaa
in
fstp
aaa
aad
inc
mov
cltd
push
pop
or
cltd
adc
cmc
testl
and
sbb
pop
test
sbb
mov
enter
imull
xchg
and
lock
mov
ss
fistpll
push
cmpsl
add
sbb
adc
mov
ss
jno
cmp
jmp
inc
jle
iret
test
and
adc
shlb
mov
js
jno
cmp
sub
or
testb
stos
xchg
ljmp
addl
add
hlt
scas
mov
movsl
mov
cld
ja
insb
arpl
mov
sbb
push
outsb
in
mov
ret
in
mov
ror
sbb
mov
scas
int3
adc
jne
add
imul
into
bound
clc
out
aam
nop
sub
push
daa
stos
cltd
fnstcw
cmpsl
cmpl
mov
jns
xorl
mov
out
xchg
push
addr16
mov
cwtl
jp
cmp
cmpsl
xor
sbb
cltd
into
scas
lods
test
add
xor
fwait
shlb
pop
stos
fcmovbe
out
push
rorb
lods
inc
aam
mulb
enter
pushl
mov
or
push
daa
jg
nop
xchg
sbb
mov
mov
mov
in
xchg
jns
es
push
jne
jnp
or
pop
jmp
call
or
fs
das
jns
cwtl
xchg
push
loop
out
or
aam
jecxz
loop
mov
fildl
fisubs
mov
test
mov
das
sti
xchg
lahf
lods
dec
scas
sub
test
fsts
dec
lcall
sbb
sbb
adc
lret
jne
xchg
xor
clc
pusha
sbb
insl
or
cmpsb
inc
loope
jbe
notb
sub
xchg
shl
sbb
mov
adc
xor
push
loopne
and
roll
cmp
sub
mov
ja
test
hlt
inc
out
pop
xlat
shl
inc
stos
daa
inc
adc
jb
ljmp
mov
in
pop
aad
stos
pop
out
fstl
mov
outsb
mov
sbb
mov
loop
xchg
repz
adc
jae
into
repz
xor
bound
subb
loopne
shrb
iret
jnp
cltd
mov
fistps
inc
in
aas
or
xor
mov
add
lods
push
popf
lea
negl
jg
or
into
push
sbb
or
sahf
stos
lock
lock
add
sahf
push
pop
inc
arpl
inc
subl
xor
insb
push
lcall
sbb
cmp
lahf
in
adcl
push
jg
mov
fimull
stc
adc
ret
jge
in
push
popf
jmp
push
insl
dec
sti
and
pop
xchg
and
adc
lock
push
pop
sbb
or
xchg
aad
outsl
cmp
outsb
or
aad
push
xchg
scas
outsl
vpunpckhdq
nop
ret
into
insl
pushf
mov
ss
stos
arpl
push
push
addr16
scas
xchg
sahf
lock
inc
mov
inc
mov
icebp
int3
mov
stos
inc
popf
dec
cmpsb
dec
add
test
inc
repz
outsb
lock
sub
and
pop
leave
test
mov
pusha
stc
in
dec
flds
sub
pop
push
pop
cltd
cli
or
out
mov
cwtl
out
push
es
add
hlt
clc
xlat
mov
xor
aam
xchg
add
jge
push
jo
add
or
dec
push
or
jle
xorl
xchg
out
adc
dec
into
addb
mov
ret
mov
push
andl
push
cmc
jl
mov
mov
sbb
fsubrs
arpl
xchg
mov
orl
cmpsl
stc
dec
jb
inc
and
or
and
cmp
jg
mov
cmpsb
cmpsb
sub
jmp
mov
lret
js
cmpsb
adc
xor
pusha
pushf
add
dec
lods
mov
lret
sbb
test
add
xor
xor
in
and
pop
popa
in
in
cmovno
jl
sub
clc
stos
or
push
cmpsb
and
mov
mov
push
and
lea
push
aad
push
lods
add
mov
mov
mov
into
adc
and
sti
push
dec
jns
sub
test
sarb
js
xor
sbb
shlb
mov
rcr
jae
lcall
faddp
xor
fsubl
ret
inc
cwtl
push
mov
mov
xor
into
pop
sub
test
iret
xor
ljmp
fwait
or
jecxz
sbb
call
cmp
in
push
jno
std
mov
std
pop
idivb
cmc
std
pop
mov
mov
cmp
push
mov
aaa
pop
jns
mov
push
push
cltd
and
xchg
and
scas
out
scas
stc
or
xchg
repnz
and
sahf
test
mov
aad
xor
inc
mov
mov
dec
jp
out
in
rcll
call
cmc
aaa
cmpb
das
into
dec
sub
pop
cli
ret
pop
xor
cmp
cld
and
push
aaa
into
and
xlat
std
dec
dec
mov
repnz
mov
and
out
mov
mov
enter
push
test
sarl
mov
xor
mov
out
add
xor
jae
sbb
push
cmp
jg
fimuls
mov
jl
into
out
pop
shll
movsb
push
push
sbb
aam
jge
sub
fnstsw
adc
add
mov
shrb
xchg
dec
jge
out
and
cwtl
sbb
mov
adc
les
jl
mov
je
loopne
iret
ds
sub
cmp
xchg
lcall
jle
push
and
cwtl
sub
ss
mov
cltd
xchg
or
adc
jmp
das
or
iret
stc
insl
fidivrl
in
and
and
inc
js
movsb
aam
pushf
xor
lea
cmp
orl
lods
aam
imul
cmp
test
xchg
adc
add
mov
cmp
sbb
mov
pop
int3
sbb
push
jae
loope
and
popa
test
push
or
mov
push
sub
jb
dec
sbb
adc
cmp
mov
lods
sub
repz
adc
or
data16
ret
push
sub
cmp
lods
jae
icebp
in
mov
cmpb
jge
ds
xchg
mov
inc
cld
lcall
or
push
lret
stc
fsubl
cmc
inc
pop
pop
mov
gs
scas
inc
mov
mov
mov
mov
xor
push
inc
test
mov
lahf
mov
mov
pop
test
dec
dec
roll
add
mov
inc
push
jnp
out
in
dec
mov
adc
inc
bound
jae
jno
lea
subb
cmp
mov
inc
sub
or
inc
leave
loopne
cmpsl
ja
rcll
popa
inc
sahf
jb
push
stc
cmp
or
cmp
mov
push
sti
fsts
jne
push
sbb
sbb
scas
scas
out
mov
test
push
mov
or
jp
out
cmc
adc
loopne
push
sbb
push
xchg
aam
mov
js
mov
adc
and
sbb
push
lahf
cld
jno
dec
mov
out
out
mov
jp
out
jo
jecxz
or
mov
sub
cwtl
shll
xorb
jmp
stos
dec
lret
scas
je
lods
pop
mov
mov
dec
xchg
xchg
mov
imul
std
movsl
cmp
and
mov
ljmp
out
lods
sbb
xor
fsub
xorb
jg
jno
adc
lock
cmpsl
popa
push
dec
xlat
fstpl
mulb
mov
sti
sub
mov
or
cmp
in
cmpsb
test
ret
pop
notl
xor
ljmp
rol
loopne,pt
fsubs
iret
sbb
into
jo
daa
sbb
fisttps
cmp
jp
cmp
divb
hlt
jnp
sbb
sahf
sarl
call
cmp
ljmp
inc
jo
roll
mull
inc
hlt
dec
add
sbb
dec
aad
and
stos
cmp
addb
pop
mov
iret
daa
lahf
cmp
pop
cmp
push
test
jl
testl
repnz
and
lret
cmp
pop
movb
push
icebp
pop
mov
inc
cmp
mov
notl
xchg
mov
icebp
xorb
std
cmp
push
aad
cwtl
jl
aad
int
push
fisttps
lahf
repz
sub
xchg
sbb
pop
insb
in
out
pop
movsl
mov
mov
push
leave
push
pusha
setns
lahf
mov
adc
ret
lret
lds
int
test
test
xchg
adc
adc
add
scas
add
pop
mov
stos
inc
cmc
push
testb
and
xchg
loope
jnp
or
testl
mov
inc
jmp
pop
inc
jge
sti
sbb
imul
loop
jb
jecxz
in
ss
adc
push
mov
mov
xor
rcl
sbb
lahf
out
jecxz
xlat
or
cmp
loope
into
in
je
ret
mov
aaa
and
test
push
sub
xor
push
push
cmp
jp
add
imulb
ffreep
mov
mov
adc
xchg
pop
shll
and
jo
aam
repz
call
push
rcl
in
pop
iret
daa
lret
xchg
out
aas
mov
adc
pop
icebp
adc
shlb
and
pop
push
xchg
sub
add
cltd
jae
mov
jb
leave
fwait
dec
adc
mov
xor
rol
cli
roll
scas
int
mov
push
enter
test
pop
cmp
push
mov
enter
out
adc
lock
add
mov
push
xchg
clc
int
mov
xor
inc
xor
js
mov
cmp
call
adcb
ret
mov
loop
mov
adc
mov
jge,pn
mul
and
jo
push
lret
das
add
leave
mov
es
lock
adc
mov
xchg
movsb
into
insl
mov
pop
sub
imul
cs
loop
mov
jmp
fs
mov
mov
iret
js
test
scas
mov
xchg
lock
mov
sub
cmp
push
fidivrs
sub
pop
dec
imul
mov
cmovge
loope
pop
ss
clc
imul
add
arpl
fsubp
shl
out
rcrb
sub
test
push
iret
jp
gs
jmp
xchg
sub
sbb
dec
pop
popa
mov
sbb
pop
xor
inc
and
mov
and
sub
add
out
add
mov
movsb
out
xor
push
cmp
pop
pop
arpl
xchg
add
mov
mov
sbb
in
and
mov
popa
mov
adc
insl
or
dec
mov
in
fidivl
arpl
and
fimull
dec
enter
call
xor
sbb
xchg
xor
call
mov
dec
rolb
in
sub
xchg
pop
idivb
mov
loope
lea
lahf
and
ret
and
and
pop
cs
aad
jge
inc
cmp
push
out
in
cmp
lahf
push
push
pop
xchg
mov
jecxz
out
xchg
outsl
and
scas
lea
pop
out
rol
sub
sbb
outsb
mov
pop
lds
xor
fidivrl
mov
aam
inc
add
mov
push
push
loope
jnp
cmp
lcall
test
or
and
push
mov
ret
ja
jno
xchg
pop
push
xchg
orb
es
mov
push
rclb
mov
addr16
add
dec
mov
out
hlt
add
mov
mov
dec
pop
aad
jge
stc
push
hlt
lods
insl
xlat
test
inc
pop
mov
xchg
imul
jne
sub
adc
mov
lods
and
orl
imul
jp
lahf
fucomi
in
or
add
pop
sub
stc
stc
xor
in
gs
or
nop
mov
pop
xor
and
mov
aad
push
jecxz
mov
push
jp
jg
sub
xchg
sbb
fsubs
lods
xchg
dec
mov
sub
sti
adc
stos
cmp
pop
or
dec
fwait
pop
push
repz
test
jbe
inc
adc
sub
push
jp
push
pushf
in
stc
cmp
mov
dec
cmp
pop
inc
mov
rcll
lret
addr16
test
sarl
mull
out
into
das
loop
insb
stc
je
push
xor
int
dec
test
movsb
cmp
ds
xchg
jp
rcl
lea
or
jp
jmp
pop
dec
push
xlat
out
imull
mov
push
fsts
pusha
mov
push
test
in
cli
inc
inc
pop
jmp
adc
aas
leave
jle
sbbl
lods
jb
arpl
data16
scas
jb
dec
and
in
fs
xor
stc
push
mov
or
out
fildl
cmp
lahf
mov
call
incb
addr16
bound
outsl
cmc
jl
divl
sbb
out
rep
das
mov
ret
xchg
jb
outsl
adc
xchg
in
jae
frndint
dec
push
cmp
pop
add
xchg
mov
ss
in
jg
int
xor
ljmp
stc
xchg
cs
in
pop
xor
je
pop
iret
scas
inc
lcall
sbb
fwait
sti
jg
scas
add
sti
jmp
mov
sub
push
clc
pusha
adc
mov
push
mov
sbbl
bound
adc
add
sub
push
jnp
cmc
pop
loopne
pop
mov
xor
ljmp
cli
cli
mov
jae
out
mov
mov
call
pusha
xchg
pop
addb
fiadds
xchg
xchg
xor
icebp
push
pusha
jle
pop
mov
inc
push
stos
into
pop
or
inc
scas
jl
xor
sub
cli
roll
fmull
push
mov
fsub
sub
lds
push
ss
xchg
xchg
subl
mov
cmc
sub
xchg
push
cli
dec
hlt
xchg
or
adc
jl
outsb
and
push
fidivrl
push
dec
fsub
mov
cmp
lods
int3
sub
nop
xchg
in
mov
jae
cmpsb
mov
cmp
mov
in
push
hlt
mov
sbb
subl
dec
adc
mov
aad
inc
imul
sbb
adc
lea
js
ss
push
fstps
xchg
imul
jno
imul
pop
xor
fwait
sub
cmp
lret
jmp
and
data16
cs
xchg
xlat
iret
and
or
mov
dec
cmp
xor
out
outsl
stc
in
sbb
lods
test
and
lret
fsubl
shr
xchg
das
nop
pop
pop
cmpsl
in
or
xchg
outsb
jbe
jns
cmpb
stos
inc
jmp
and
sub
xchg
cmpsl
inc
movsb
loope
xor
mov
lret
fistpll
movsb
or
inc
jae
mov
mov
leave
ret
cmp
cmc
xchg
shr
in
fistps
mov
push
shrl
mov
xchg
xor
dec
test
jge
fildl
inc
or
sbb
and
sbb
je
test
jns
jae
adcb
scas
fadds
ljmp
pop
dec
stos
mov
daa
lcall
inc
arpl
sbb
leave
jmp
cwtl
inc
add
jno
push
add
inc
cwtl
pop
pop
xor
xor
ss
in
stos
bound
and
xchg
fisttpl
outsl
mov
in
icebp
rcrl
dec
iret
jecxz
sub
push
mov
sbb
in
or
arpl
insb
lsl
in
lea
imul
mov
hlt
jns
sti
or
iret
xchg
or
pop
sbb
adcb
mov
ss
xor
test
cmp
add
sbb
outsb
es
test
mov
or
ja
ret
inc
push
push
mov
lods
dec
lret
add
xor
cmc
xor
ja
pop
lret
push
cmp
es
lea
lods
jb
fidivrs
jmp
shr
jmp
dec
mov
jno
cld
mov
insl
imul
mov
pop
into
dec
jle
pop
or
jp
sbb
imul
enterw
add
sar
or
mov
jge
inc
add
dec
jo
bound
movsb
push
pop
push
movsb
loop
pop
mov
lret
daa
in
mov
imul
aad
dec
xchg
adc
jg
and
fwait
pop
call
test
mov
mov
and
mov
sub
cmp
daa
lret
jle
in
js
push
aaa
pusha
and
cltd
pop
xor
push
adcl
sub
inc
scas
or
jb
arpl
jne
test
jno
xor
int3
sbb
sbb
or
cld
mov
lods
push
in
jo
incl
ds
cld
push
stos
jo
stc
mov
repnz
out
and
mov
add
mov
inc
sbb
jb
push
sub
stos
cld
mov
ja
xor
jecxz
lcallw
lret
icebp
pusha
dec
inc
mov
call
pop
insb
mov
mov
fimull
sub
add
xlat
mov
pop
int3
sub
push
lds
jl
imul
mov
push
mov
cmp
inc
arpl
loopne
push
inc
bswap
insb
jmp
jbe
mov
sub
sub
xorl
jnp
int
loopne
je
test
std
xchg
js
notb
dec
sbb
out
jecxz
mov
pop
das
je
xor
fdivs
pushf
and
pop
or
xor
push
hlt
jle
xchg
out
jo
imul
pop
out
fnstsw
inc
cld
fdivrp
mov
rcrl
pop
loop
cmpsb
fsubrl
lcall
xchg
rclb
je
xchg
mov
inc
shrb
test
xor
xorl
or
or
out
bound
pop
jns
push
js
fs
in
dec
test
xchg
mov
dec
mov
std
xchg
call
sub
mov
jg
add
mov
pop
xlat
jne
addl
xchg
testl
out
lods
fisubs
movsb
std
aas
push
dec
sbb
adc
pushf
add
imul
les
adc
mov
and
ret
mov
or
jns
or
repz
pop
pop
jnp
push
adc
mov
and
mov
std
arpl
xor
sbb
test
loopne
add
pushf
push
cld
inc
dec
popf
pop
shlb
jb
xchg
iret
je
pushf
jns
dec
pushf
int
mov
adc
xchg
sbb
xlat
scas
sahf
dec
scas
xchg
adc
cmp
sub
mov
sub
sbb
lret
dec
inc
xor
mov
popf
xor
mov
lret
mov
pop
rol
sarb
mov
sbb
push
push
out
xor
lds
movsb
add
fucomp
pop
xchg
xor
movsl
arpl
iret
incb
das
fldt
dec
adc
xchg
inc
mov
lea
jo
mov
dec
sub
clc
gs
test
mov
push
jbe
imul
fs
cmpsb
jb
insl
and
sbb
xchg
jl
xchg
mov
inc
ss
or
es
clc
xchg
addr16
jne
push
and
bound
cwtl
rcrb
ds
cs
cmp
test
popf
cmp
inc
mov
leave
push
sub
or
pop
pop
pop
push
test
fdivrs
add
fmuls
mov
mov
xchg
inc
out
insb
add
arpl
jmp
mov
scas
mov
adc
and
lret
movsl
sub
js
fiaddl
stos
lret
jns
lret
sbb
jmp
xor
or
xor
dec
icebp
push
jge
lods
sbb
jp
movsl
push
les
inc
mov
out
jns
jb
push
xchg
sbb
jo
popa
scas
mov
cmp
aaa
mov
hlt
lahf
sbb
dec
lcall
ret
ja
outsl
popa
adc
ficomps
lods
in
in
sub
icebp
movsl
fisttpll
lods
xchg
lods
insb
adc
jp
sbb
cmp
jno
cs
and
jbe
xchg
pop
fndisi(8087
mov
in
arpl
xchg
pop
out
fs
sub
mov
pop
cmpsl
cmc
aad
xchg
mov
pop
jge
mov
sub
mov
in
sahf
mov
or
call
xchg
dec
xchg
test
jns
lods
nop
xor
add
negl
xor
cmp
mov
je
les
imul
cltd
adc
mov
pop
mov
inc
mov
jno
outsl
sub
out
mov
cmc
test
cmp
repnz
es
jle
mov
pop
jge
ror
dec
mov
mov
subb
xchg
xchg
xor
test
out
sub
dec
cmp
das
stc
xchg
push
test
ljmp
test
cli
lea
push
xchg
les
lcall
xlat
add
mov
arpl
call
xchg
ds
add
imull
movsb
dec
sbbl
popa
and
add
cmpsb
xchg
in
mov
add
lret
roll
or
xchg
sbb
pop
fists
mov
in
out
jne
xor
sahf
frstor
out
dec
cmpb
pop
and
out
shll
jo
lcall
or
xor
pusha
in
mov
lods
push
jo
xchg
jp
push
xchg
les
test
dec
xor
xchg
rcll
jns
fs
gs
pop
sti
sbb
hlt
and
idivb
push
dec
shlb
cmp
dec
adc
xchg
dec
movsb
xor
push
fsubr
xchg
fisubs
ss
mov
mov
fs
push
call
clc
outsb
fcmovnu
daa
jge
out
inc
dec
test
jp
jnp
push
iret
ljmp
push
sahf
loopne
std
cmp
lahf
lret
js
lock
cmp
push
cli
loopne
sub
ss
pop
js
aaa
stos
repz
pop
cmp
push
bound
test
lret
sbb
aam
xchg
jge
lds
add
enter
ror
push
shrl
xchg
mov
out
add
or
lcall
sahf
ja
xor
push
out
and
movl
stc
jns
sbb
loopne
testl
out
notl
lods
mov
mov
ret
dec
inc
push
inc
std
js
pop
cld
mov
mov
das
inc
test
cmp
and
mov
popl
add
fnstsw
int3
nop
in
sbb
imul
fmul
test
cmpsb
mov
cmovb
cmpsb
loope
dec
pop
pop
cmpsl
jecxz
jnp
cmp
mov
xchg
or
loope
cmp
dec
mov
cmc
fwait
test
xchg
movsl
pop
sbb
dec
dec
cmp
cmp
mov
pop
mov
into
or
xorl
push
cmpsb
cmpl
ret
xlat
frstor
adc
mov
pop
pop
mov
inc
or
xor
mov
sbb
inc
movl
push
sub
jmp
push
das
or
call
push
mov
or
push
fwait
es
ss
or
orb
or
roll
push
pop
jmp
fs
inc
add
frstor
das
fiadds
pop
add
scas
jnp
hlt
adc
dec
das
and
hlt
pop
cmp
out
lmsw
inc
pop
push
cld
xchg
and
addr16
mov
xchg
mov
inc
and
cli
inc
lret
jae
imul
in
scas
push
ret
nop
in
sti
xor
and
lcall
inc
cwtl
fisubs
sbb
cltd
lahf
aas
push
vmovq
cmp
mov
inc
test
dec
movsl
add
adc
lret
fwait
es
push
aas
repz
push
sub
stc
sbb
push
les
rol
fistpl
sti
cmp
mov
je
sbbl
lcall
cmpsl
lret
push
ret
cld
jb
sbb
daa
pop
in
mov
or
sbb
add
xchg
arpl
fisttpl
repnz
push
pop
out
scas
outsb
std
aas
xor
mov
xchg
mov
xor
scas
inc
lea
test
mov
jmp
dec
enter
in
xor
adc
iret
mov
dec
in
cmovle
gs
stos
lahf
scas
lock
fstl
adc
mov
xchg
insl
mov
mov
imul
pop
test
lock
xchg
xor
call
xor
adc
or
push
jmp
mov
dec
or
out
movsl
jp
popa
add
add
mov
pop
sbb
es
std
mov
inc
insl
xor
add
jno
fnsave
in
lret
sub
jb
pop
cmp
sub
clc
imul
xlat
inc
mov
iret
in
inc
sti
lods
cmp
sub
fwait
je
out
sub
in
loopne
inc
fs
and
mov
pop
inc
stos
or
and
xor
jnp
lods
push
xchg
jbe
pop
dec
adc
add
into
sbb
cmp
mov
sbb
cmp
sub
bound
movsb
xor
add
shl
insl
test
pop
jns
call
push
lods
divb
pop
push
xchg
mov
and
mov
sbb
push
dec
fstpl
adc
inc
cli
insb
test
sub
sbb
js
iret
je
repnz
xchg
fs
mov
sub
mov
mov
adc
mov
outsb
jbe
movl
xchg
inc
sbb
cltd
cmp
movsb
decb
cmpsl
hlt
leave
add
mov
jno
jbe
cmp
jb
gs
enter
ja
imul
mov
jne
push
dec
adc
sarl
push
fstp
xor
bound
and
jae
jg
mov
jmp
xor
pop
push
outsb
push
callw
movsl
add
and
mov
add
push
test
sbb
rol
push
in
lods
cmc
push
aas
jl
in
mov
ret
pop
mov
scas
insb
mov
or
daa
sbb
push
or
int3
mov
add
cmpsl
jo
ljmp
pusha
push
sub
add
loope
adc
leave
sbb
mov
fcompl
lods
xchg
shrb
lahf
inc
or
mov
xchg
lcall
arpl
test
push
test
les
jno
pop
pop
jge
popf
in
out
daa
pop
je
lret
lock
imul
pop
lds
xlat
jbe
mov
stos
into
jne
out
out
and
jle
add
fdivr
mov
lcall
and
fsts
jmp
aaa
in
and
lret
fiadds
push
pop
mov
xor
jmp
ja
adc
lods
outsl
jb
or
addr16
jmp
out
sub
cmp
pop
sti
popf
adc
repz
int3
lds
cwtl
dec
or
addr16
out
jne
lods
push
push
inc
rorl
into
gs
ja
push
jge
sub
mov
jae
sar
negb
mov
push
movsl
aas
or
aas
sarb
stos
mov
shlb
jle
aaa
andb
lret
pop
pop
aam
pop
lds
xchg
je
aaa
out
add
dec
cmp
xor
jl
or
xchg
fmulp
dec
call
mov
xchg
and
mov
insl
mov
xor
stos
xchg
fidivs
cmp
jno
pop
adc
jl
add
mov
pop
in
fldl
or
mov
or
ds
sti
popa
xor
mov
mov
cmp
sub
out
shrl
jb
xor
adc
lcall
lret
cmp
adcb
mov
pushf
test
jnp
jo
cmpsb
lahf
into
xor
scas
and
and
lret
mov
out
inc
pop
pop
call
jb
incb
or
jnp
daa
fcomps
rcrl
aad
mov
scas
inc
imul
xor
sbb
cld
fdivr
sbb
movsb
sub
cmc
jmp
aam
or
testb
xor
lock
pop
jle
ret
clc
inc
rcrb
fistpll
adc
popf
roll
push
lret
sbb
cltd
and
stos
cmc
out
and
mov
xchg
bound
shr
shll
lods
aas
jge
ljmp
push
xchg
and
dec
xor
std
out
mov
in
jo
push
dec
sub
shll
shld
bound
stos
mov
xor
mov
or
cmc
into
lahf
sahf
aaa
push
push
push
popa
or
add
dec
les
mov
fs
int
imul
dec
jge
pop
sbb
in
jb
addl
add
xchg
sahf
push
cltd
mov
fs
xchg
xchg
pop
pop
push
test
or
mov
pop
jg
and
mov
test
imul
dec
outsl
jmp
xor
or
mov
add
cmpsb
mov
stos
jecxz
add
inc
push
fucomp
sub
loope
cmpb
call
push
sub
nop
in
jo
outsb
xor
cmpsl
xor
ja
jle
or
lods
xor
mov
dec
nop
jns
mov
sbb
mov
sti
sbb
outsb
enter
or
inc
sbb
adc
mov
xchg
je
push
cmp
xchg
mov
add
stc
jne
pop
sub
loop
and
cmp
inc
scas
sub
xchg
stc
jnp
int
in
and
ret
shll
ret
ret
sbb
ds
pop
insl
cld
shll
add
inc
pop
push
xor
fucom
test
movsb
mov
dec
shr
ret
lods
test
xchg
inc
xor
lods
orb
sbb
push
xchg
pushf
adc
test
lret
rsqrtps
mov
cmp
iret
add
cmp
xor
or
int3
and
cli
loope
pop
dec
fildl
pushf
push
loopne
test
sub
sti
jns
out
add
fistl
jge
daa
push
fsubrs
push
jns
mov
test
shl
lods
jp
jo
sahf
lahf
add
lcall
imul
and
add
test
loopne
inc
and
inc
out
in
jg
pop
clc
int3
inc
xor
mov
pop
mov
dec
std
add
and
mov
popa
popl
and
jp
or
test
js
push
shl
mov
repnz
out
and
ljmp
cmpl
cli
fwait
xchg
stc
sar
test
icebp
push
pop
sbb
test
je
or
mov
fdivrl
xor
and
stos
push
sbb
xlat
pusha
inc
push
and
daa
add
sbb
es
push
aas
push
je
add
divb
pop
xchg
sbb
push
pop
out
mov
xor
sub
nop
pop
arpl
ds
int3
xchg
add
xchg
push
imul
lea
adc
std
loop
or
lahf
clc
test
scas
xor
rorl
jnp
andl
int
incl
scas
push
test
je
mov
push
pop
dec
sub
jmp
jnp
xchg
int
xor
fidivrs
mov
xor
inc
pop
pop
fistpll
add
inc
adc
or
arpl
adc
mov
fidivrl
testl
mov
push
pop
loope
repz
aad
inc
scas
push
adc
sbb
cmp
dec
daa
and
pcmpgtw
arpl
mov
or
cs
std
sbb
xchg
jmp
xchg
jg
sub
push
cmpsl
push
adc
xor
add
inc
mov
sbb
loopne
inc
jg
xchg
mov
cwtl
xor
pop
lret
test
sub
shl
ret
mov
scas
into
cmp
jecxz
test
imul
repz
cmpsl
adc
sbb
sub
sbb
fildll
lock
aad
add
aad
or
scas
push
mov
mov
cmp
cmp
mov
rcrl
lods
dec
std
aam
outsb
shr
sbb
jle
push
outsb
test
test
fiaddl
lock
sbb
in
rol
enter
mov
inc
and
in
push
mov
push
in
scas
pop
or
cmp
scas
jl
cs
popf
jbe
jno
pop
dec
cmc
sub
adc
pop
mov
cmpsl
xchg
pop
mov
cmp
cmp
iret
xchg
pop
dec
lods
jmp
mov
leave
mov
mov
daa
sbb
int
in
jmp
xor
or
dec
lret
aad
popa
scas
pushf
aad
sbb
pop
aam
shlb
call
add
or
mov
daa
imul
adc
in
jnp
outsl
stos
inc
pop
xlat
cltd
jo
jle
das
pop
fldl
mov
push
loopne
out
jo
outsl
aad
mov
movsb
out
push
shrl
daa
out
mov
inc
sub
test
jmp
or
mov
popa
add
or
xlat
push
mov
cltd
jmp
daa
pop
push
cmp
add
or
pop
jbe
aam
pop
xor
cmpsb
dec
add
adc
sarb
jns
xor
pop
data16
xchg
ljmp
push
mov
stc
js
and
adc
sub
les
xor
gs
shrl
pop
data16
push
jo
loop
into
sub
sub
push
fdivrs
fs
push
mov
xor
test
test
test
push
rclb
enter
add
out
test
gs
cmp
jb
push
insb
inc
mov
push
repnz
dec
loopne
cli
int3
rolb
int3
pop
xchg
push
stc
jl,pn
mov
pop
iret
push
and
cmp
sbb
aaa
int3
mov
sbb
push
lgs
cltd
pushl
sar
ret
mov
mov
jns
sbb
xchg
jae
rolb
inc
push
cli
rcll
and
jle
dec
scas
mov
sbb
fs
insb
das
imul
jp
fnstsw
mov
mov
testb
dec
fldl
insb
repz
ret
daa
aad
sub
rcrl
jno
scas
jnp
mov
inc
jmp
and
add
nop
add
fistps
jp
jge
push
sub
mov
inc
mov
dec
out
sbb
cmp
push
addl
popf
shrb
mov
out
popf
aad
mov
jl
lcall
push
xor
push
cmp
mov
ret
push
inc
push
pop
fbstp
xor
fstl
and
mov
pop
cmpsl
fnsave
push
lret
stc
fwait
xchg
orl
dec
mov
add
daa
add
push
mov
cltd
inc
mov
test
fldenv
decl
pop
pop
add
ror
sbb
xchg
stc
add
or
sub
and
sub
jo
addr16
xchg
mov
mov
cmp
push
dec
cs
je
sub
iret
test
jns
adc
xchg
xchg
mov
jmp
or
in
insb
adc
jne
dec
jbe
arpl
inc
xchg
dec
fcmovnbe
addl
adc
in
dec
pop
int3
push
sbb
adc
mov
push
mov
rcl
jp
cmpsl
push
aam
insb
sbb
outsl
adc
test
in
lea
push
jecxz
cltd
dec
jl
adc
jge
cmpsb
dec
xor
scas
pop
dec
shrl
jne
jne
in
mov
ja
push
push
mov
addr16
std
mov
movsl
or
cmc
popf
jmp
mov
add
lock
pop
jae
scas
add
arpl
outsb
imul
inc
push
sbb
addr16
pop
add
mov
mov
je
lret
adc
jne
adc
shl
lretw
movsl
clc
pop
jae
push
push
iret
jbe,pt
arpl
mov
dec
xchg
movsb
testb
arpl
daa
iret
push
lock
imul
fbstp
out
dec
aam
lret
call
push
ss
sti
jge
jle
repnz
mov
jg
bound
fsubp
lods
xor
inc
loopne
push
loope
int3
pushf
mov
inc
jbe
clc
test
mov
shll
add
test
les
or
xlat
adc
jns
inc
popl
inc
push
add
pop
push
loop
inc
inc
aam
je
xchg
inc
call
out
fnsave
mov
add
pusha
jb
hlt
jb
inc
pop
icebp
test
cmpsl
adcl
outsb
jg
cmpsb
pop
stc
clc
fistpll
daa
test
jnp
sarb
popf
xchg
scas
xlat
int
pusha
js
pop
call
and
imul
mov
xor
dec
test
and
aaa
ljmp
daa
outsb
sub
sti
fcmove
xchg
stos
jge
mov
jne
inc
popa
into
mov
mov
popa
es
loopne
push
scas
add
xor
mov
jecxz
mov
loop
ret
inc
call
push
jnp
sbb
cmp
xchg
xchg
jp
sbb
adc
js
mov
sbbl
xor
pop
movsl
stc
mov
mov
test
pop
bound
push
jne
test
loop
adc
pusha
enter
pop
negb
cmp
dec
mov
or
fidivl
or
loop
adc
jge
movsb
ja
aas
xor
cmp
pop
xlat
jbe
filds
and
lret
pop
imul
cld
and
push
sar
inc
xchg
nop
stc
mov
sbb
pop
mov
dec
mov
in
scas
jg
adc
or
jmp
jle
scas
xchg
aas
mov
nop
xchg
fcompl
jg
popa
pusha
inc
add
adc
in
cmc
push
adcb
cmp
cmp
loope
pop
mov
xorb
sti
mov
outsl
pop
dec
mov
push
add
aas
push
cmp
and
out
pop
dec
jl
gs
pop
cmc
and
sbb
test
test
sbb
push
rol
sub
cmp
iret
rorb
fisubrl
xchg
ljmp
lcall
daa
push
aaa
stos
sahf
sub
mov
int3
cltd
int
cmp
sub
push
das
cmpsl
add
adc
mov
add
shll
out
mov
dec
aas
xor
cmp
fxtract
nop
mov
out
sub
pop
fldpi
out
mov
mov
decb
icebp
mov
pusha
xchg
jg
mov
pop
bound
mov
cmp
inc
cmp
cmp
mov
lret
jp
cmp
out
or
sub
in
out
mov
stos
fnsave
cmp
rcll
dec
cltd
push
repz
pop
sub
je
push
pop
xlat
lods
dec
stos
mov
jns
addl
pop
test
cmp
movsb
insb
in
xchg
ss
mov
jnp
adc
cld
dec
fcomip
xchg
sub
mov
add
in
pusha
mov
sbb
in
aaa
mov
leave
pop
add
xchg
in
decl
adc
cltd
mulb
aam
pop
dec
test
and
mov
cmpsl
shrb
cmp
imul
inc
bound
cmp
mov
xor
pop
icebp
shrb
shll
add
fdivrl
jg
sbb
bnd
jle
inc
or
aaa
adc
insb
hlt
push
cmp
ljmp
cmpsl
mov
cltd
nop
inc
mov
out
push
push
dec
iret
scas
mov
mov
jb
sahf
mov
pop
pop
inc
int3
inc
xchg
rcrl
push
mov
push
xchg
xchg
outsb
negb
pop
mov
std
mov
sbb
mov
dec
mov
enter
mov
sub
fdivs
mov
mov
xchg
cltd
sub
lea
and
mov
mov
sub
lds
mov
dec
jns,pn
xor
sub
jne
cwtl
xchg
xchg
lahf
push
out
mov
add
sbb
idivl
xchg
add
dec
mov
lea
mov
inc
out
cmp
fadds
jmp
xor
mov
subl
inc
jp
mov
push
or
mov
xchg
mov
fisttpl
inc
test
xor
and
cmp
pop
push
add
xchg
ficoml
push
mov
sahf
addl
aaa
xchg
adc
mov
jp
dec
mov
sub
mov
dec
int
mov
pop
fisubrs
leave
call
cwtl
sub
icebp
jge
xchg
mov
add
insl
neg
lods
pop
adc
pushf
fidivrs
in
hlt
dec
and
mov
push
xchg
jge
cmp
rorb
jl
pop
sbb
fisttpl
jbe
cmp
mov
dec
outsb
adc
in
xchg
adc
pinsrw
das
sbb
into
add
ss
inc
shll
insb
out
push
leave
push
cmc
out
xchg
mov
push
sbb
jge
shr
adc
and
fldenv
fbld
addb
add
mov
lds
push
cmc
push
fcmovu
push
pop
shrb
lds
adc
or
cwtl
fistl
ficompl
push
jnp
aam
js
aad
xor
pop
cmp
xchg
sbb
adc
and
mov
nop
aad
ljmp
push
xor
leave
and
lret
stos
push
dec
cltd
jge
and
nop
cmc
ret
repnz
ficompl
test
call
or
out
das
dec
sub
arpl
out
push
vpmullw
sub
xor
cmpsb
adc
outsl
pop
stos
dec
ds
outsb
sahf
mov
out
lods
xchg
pop
lods
xchg
push
xor
pop
popa
and
ret
xchg
fildl
test
addr16
idivb
push
jle
mov
xor
xor
testl
sbb
push
es
cmpsl
lds
push
xor
dec
dec
lock
adc
mov
mov
adc
cmc
aam
or
push
and
lret
mov
lret
or
dec
xchg
add
sbb
jecxz
inc
jl
outsl
and
pop
inc
je
mov
mov
mov
into
mov
mov
popa
ja
fstl
pop
push
cltd
or
mov
jge
inc
rcr
loop
out
dec
dec
into
push
dec
inc
mov
adc
dec
jae
in
daa
call
aas
loopne
cmp
cltd
repnz
aad
adc
bound
ds
mov
negl
hlt
add
jne
push
mov
xchg
sbb
testb
fwait
lods
test
mov
mov
ss
jb
sbb
out
ja
mov
ds
aas
fdivs
pop
or
pop
mov
lahf
xchg
ja
inc
push
inc
and
add
jno
bound
cmp
cwtl
inc
push
mov
xchg
outsb
mov
test
cmp
sbb
rolb
hlt
and
nop
add
or
testl
xchg
pop
pop
aad
jge
popa
test
cld
cltd
mov
daa
xchg
or
sarl
outsb
imul
jge
sbb
psubq
dec
repnz
mov
stc
es
xor
shll
mov
adc
idivl
mov
add
or
mov
test
jle
jmp
cmp
sbb
sbb
daa
mov
mov
shll
xor
inc
mov
mov
out
pop
jns
cli
jb
xor
cmp
aaa
andl
sub
jo
in
xchg
push
sbb
bound
xchg
bound
sbb
mov
data16
and
cmp
cli
mov
xor
in
mov
int
rorl
mov
es
or
imul
pop
cmp
push
arpl
into
sti
test
mov
cs
jge
inc
lods
jecxz
adc
mov
insl
add
jae
aas
adc
outsb
mov
test
mov
fs
loope
imulb
mov
rcrl
inc
jge
sbb
ss
pop
jns
and
push
sbb
add
jle
imul
es
sub
out
sbb
rcrl
movsl
cltd
push
mov
sub
and
dec
cmpsb
lahf
cltd
add
xchg
loopne
out
inc
fcmovnbe
or
mov
mov
cmp
push
or
pop
loop
js
mov
cmp
imul
scas
lea
jnp
jge
ljmp
fwait
pop
call
testl
mov
call
mov
xchg
xor
xchg
xor
dec
clc
in
jbe
xchg
call
mov
xchg
mov
pusha
cmpsb
lds
lret
xor
inc
andl
out
jae
push
rcrb
stos
and
cmp
icebp
in
pop
add
and
inc
add
jle
mov
fisttpl
push
xchg
mov
mov
enter
out
pusha
or
ja
lds
iret
sub
in
push
or
or
cmp
mov
mov
int3
sahf
xchg
cmpsb
inc
ljmp
mov
out
outsb
aam
sub
aad
inc
movsl
dec
sbb
mov
int3
or
jae
fsubr
sub
pusha
push
pop
arpl
jns
fabs
jl
mov
imul
icebp
insb
sub
push
lods
outsb
and
fdivrp
mov
movsb
ja
gs
xchg
aad
nop
and
sbb
sbbl
filds
or
call
pop
adc
dec
idivb
push
subb
cld
in
mov
das
aaa
in
add
mov
outsl
jb
fadds
and
mov
adc
popa
cli
ficomps
lods
dec
sbb
fcomip
push
nop
stos
dec
addr16
hlt
push
cmp
push
in
repnz
pop
cmpsl
rclb
out
jne
add
jmp
pop
insl
jle
sbb
and
inc
xchg
and
mov
xchg
ficoml
fucom
sbb
jae
pop
mov
xor
cmp
js
sub
stos
jns
std
aaa
jb
pusha
dec
xchg
fwait
ror
pop
push
cltd
mov
adc
fs
adc
enter
push
or
xchg
xchg
sarl
into
lret
in
in
orl
in
push
inc
pop
ret
aam
jg
push
sbb
scas
add
push
pop
gs
mov
cli
lahf
and
sub
inc
mov
xorb
jae
mov
mov
xor
lret
or
sbb
cmp
mov
jno
lahf
mov
scas
out
xchg
bound
or
pusha
jp
jmp
cltd
and
xchg
test
or
dec
iret
xor
dec
sbb
adc
push
fwait
sbb
xor
and
or
out
cs
enter
sbb
pop
lret
push
xor
out
xchg
ficoms
xor
out
aam
push
insl
sbb
into
js
loope
leave
and
ja
mov
mov
negb
call
or
and
sub
icebp
enter
dec
leave
inc
dec
add
xchg
gs
cmp
push
iret
lcall
test
dec
xlat
leave
adc
jne
push
xchg
sbb
popf
xchg
add
sbb
imul
mov
adc
aad
pop
add
gs
lock
mov
mov
jle
add
rolb
adc
loop
in
adc
test
shlb
add
adc
mov
movsl
push
imul
mov
fsubrl
insb
mov
add
outsl
test
jbe
repnz
jg
xchg
lret
js
shlb
outsb
cmc
add
pop
mov
add
cs
adc
sub
test
mov
xchg
inc
pushf
dec
xchg
aad
ljmp
add
dec
push
scas
fucom
je
adc
call
mov
sub
adc
inc
add
js
test
mov
stos
sub
movsb
and
das
sbb
std
je
lea
fld
inc
in
add
cmpsb
imul
cmc
cmp
pop
pop
stc
sub
sub
stc
out
mov
xlat
imul
mov
pop
sub
fistps
jge
xchg
sti
in
in
inc
stos
and
push
shl
fwait
mov
addr16
pop
fwait
jo
and
jb
push
sahf
fcmovu
jl
push
and
add
cmp
mov
push
imul
or
arpl
aas
rorb
cmp
and
inc
sbb
scas
pop
ss
bound
sar
dec
test
ret
dec
fiadds
mov
push
adc
cli
mov
movsl
sub
xchg
lea
repnz
pop
pop
divb
xor
dec
push
add
pop
adcb
fldenv
ret
popa
xor
lock
add
inc
or
loopne
pop
imul
testb
add
mov
sbb
and
and
push
jmp
xchg
jmp
sub
mov
xchg
mov
in
popl
inc
xor
mov
inc
out
nop
cwtl
pushl
jmp
lret
xor
cmc
test
dec
negb
pusha
xchg
outsb
mov
sbb
push
mov
aam
or
push
xor
mov
popf
rcrb
dec
cmpsl
or
loope
pop
sbb
jb
mov
mov
sbb
stc
ret
stos
and
mov
or
pop
cmp
pop
jns
dec
outsl
dec
jnp
clc
xor
lea
add
outsb
test
aad
xor
popf
add
inc
sbb
jb
out
imul
mov
lcall
rclb
xor
test
lods
pop
jo
dec
movsb
cmp
addr16
or
inc
nop
scas
push
es
jmp
push
add
jae
sbb
dec
mov
dec
xlat
sub
pop
fwait
xchg
repnz
add
mov
mov
mov
push
nop
dec
in
pop
fxch
add
stos
ds
mov
add
imul
mov
fadd
cmp
out
sbbb
sbb
dec
xchg
test
mov
or
add
call
out
lret
jne
dec
fdivrl
cmp
xor
push
gs
sbbb
repnz
ljmp
movsl
jbe
rcll
out
test
mov
inc
cmpsl
cmpsb
and
jge
sbbb
mov
xchg
inc
and
movsb
repnz
push
mov
sti
fisttps
outsl
pop
xchg
jae
mov
push
aad
popf
push
outsl
std
jno
repz
loop
rolb
ret
xchg
mov
cmp
and
std
fwait
mov
pop
std
and
or
or
pop
mov
insl
jg
add
fnstcw
in
icebp
out
jmp
hlt
mov
xchg
or
jge
cmp
jnp
clc
or
mov
loope
add
popl
jbe
push
stc
cmp
call
clc
cmpsb
test
or
insb
xchg
std
jo
dec
sti
mov
jl
inc
mov
cli
xor
int
insl
mov
ds
cmp
scas
icebp
loope
dec
xor
pop
aad
out
push
add
das
les
sbb
loop
gs
mov
ja
adc
out
sbb
lea
sbb
sar
rclb
repz
pushl
jg
sub
cmp
sub
clc
mov
std
jl
xchg
mov
mov
lds
ret
xchg
sub
ds
xor
out
xchg
cwtl
sahf
sub
add
das
and
in
popf
xchg
cmpsb
scas
cs
int3
push
xor
dec
arpl
cs
mov
adc
mov
pop
xchg
aad
test
aad
pop
mov
jno
cmp
push
icebp
add
in
rcrl
xor
cmpl
in
dec
push
pusha
scas
dec
clc
push
mov
das
adc
insl
xor
dec
dec
push
mov
jae
adc
sub
adc
leave
push
jae
rol
add
sub
add
inc
xchg
xchg
dec
jge
pop
push
mov
adc
and
dec
cmp
mov
insl
adc
mov
lret
add
push
inc
xlat
cmp
test
mov
inc
test
push
mov
sbb
add
push
jmp
add
push
out
or
adc
fisttpll
outsb
cwtl
jle
jge
mov
sti
imul
adc
mov
mov
dec
adc
enter
rorb
test
leave
sub
cmp
jg
icebp
ficomps
into
pop
dec
inc
movsl
xchg
data16
ljmp
pop
lahf
mov
jge
mov
mov
mov
mov
inc
ljmp
mov
loopne
pop
loopne
lret
cmp
push
hlt
lcall
test
and
sub
push
sarb
mov
pop
std
decl
xor
cmpsl
aam
adc
cwtl
in
mov
imul
iret
in
clc
jg
mov
mov
sbb
add
adc
sar
cmpsl
pop
pop
bound
dec
adc
cmp
mov
and
cmp
pop
mov
dec
or
rcl
mov
mov
mov
push
pop
inc
jp
shll
or
push
iret
mov
sub
mov
orl
sbb
lcall
repnz
push
mov
cmpsb
lahf
push
xor
push
movsl
cmp
cmpsl
loopne
in
std
pop
enter
and
jo
add
lea
xchg
ja
dec
pop
js
jecxz
in
test
in
mov
pop
addr16
lahf
or
rol
sarl
xchg
cmp
xor
pop
sbb
or
pop
xchg
sub
xchg
jo
xchg
sbb
fisubrs
shrl
sahf
xchg
cld
scas
adc
in
or
ljmp
cld
in
push
dec
out
or
lahf
mov
pusha
scas
es
test
xchg
pop
or
cmp
push
push
int
hlt
ds
sahf
arpl
push
lea
cwtl
cs
inc
dec
xor
into
jo
and
xchg
call
loope
adc
add
in
add
ja
ljmp
push
mov
mov
push
push
cld
movsl
mov
mov
in
sbb
sbb
and
and
fisttpl
jno
dec
in
mov
xchg
jmp
inc
mov
jnp
mov
cmp
mov
adc
inc
mov
pop
faddl
orb
jns
dec
ret
imul
xchg
add
jne
aas
fstpt
sub
mov
jle
mov
fists
mov
jnp
es
movsb
pop
xor
mov
das
sbb
dec
fistpll
mov
jbe
in
push
mov
jo
and
xor
push
stc
add
shl
pop
lcall
lcall
xor
in
jae
mov
or
add
jmp
mov
into
inc
mov
je
aas
popa
jo
loopne
inc
hlt
and
xchg
clc
adc
inc
jecxz
shll
ja
sbb
push
imul
fimuls
test
cmpsb
cmp
cmpsl
xchg
push
mov
imul
in
jae
xchg
pop
enter
sbb
les
das
sub
cmpsl
sub
retw
vpmaxsw
pop
sti
sahf
lret
mov
out
rcrb
cs
mov
clc
push
dec
sbb
xor
std
cmp
arpl
xor
inc
test
cmc
push
push
xchg
xchg
imul
mov
clc
lea
xor
out
shll
cmpsl
fsubl
outsb
lock
sbb
shll
outsb
mov
icebp
inc
rcrl
xchg
sbb
mov
movsb
adc
loopne
mov
gs
mov
gs
sti
jns
sub
dec
jecxz
sbb
es
pop
lods
adcl
repz
insl
sub
aaa
insb
outsb
sub
or
push
jae
ljmp
lods
iret
push
sbb
fists
leave
add
faddl
dec
adc
xor
xor
repz
shrl
rclb
xchg
xorl
xchg
push
leave
jle
mov
ret
and
xchg
loope
mov
inc
js
inc
ds
xor
out
lret
add
and
fwait
jnp
sub
mov
xchg
adc
jne
or
mov
cltd
adc
fstpt
jbe
fs
mov
int3
jge
sbb
push
sbb
insb
in
addr16
dec
inc
mov
sub
aam
adc
test
sub
lods
lret
fstpl
push
jl
mov
push
push
sahf
loope
rcrl
ss
pop
mov
push
cmp
das
cmpsl
stc
jno
sub
and
aas
mov
dec
and
lea
pop
fsubl
push
add
adc
xor
sbb
xlat
mov
cmp
jae
inc
repnz
out
cmpsb
inc
mov
inc
sbb
jb
xchg
or
mov
insl
aaa
mov
ror
call
xchg
fucomp
xor
sub
inc
fistps
mov
pop
dec
popf
adc
in
or
stc
pop
sbb
andl
mov
in
int3
mov
test
insb
xor
addr16
repnz
in
add
inc
inc
pop
adc
xchg
das
mov
jmp
test
shll
inc
add
mov
and
mul
xor
cmp
xchg
cs
mov
xchg
dec
jmp
dec
adcl
or
mov
push
jae
add
repnz
addps
or
imul
push
xchg
fisubrl
movsb
push
and
inc
adc
out
addr16
in
pop
or
dec
xchg
jo
rep
sbb
or
test
loopne
xorl
xchg
test
cmp
xchg
ficompl
push
mov
repnz
inc
rcr
enter
je
ljmp
mov
cmp
xlat
and
adc
lock
sbb
jae
xchg
test
push
adc
push
lret
pop
mov
lret
jge
cmp
fstp
je
push
shll
fsubrp
mov
xor
mov
test
stos
push
push
and
fnsave
movsb
pop
imul
nop
adc
pop
mov
scas
jns
test
test
popf
pop
out
movsl
sbb
sbb
aas
inc
jne
loop
sbb
adc
jmp
outsl
lcall
mov
stos
or
cmp
adc
sbb
inc
jge
mov
dec
rorl
sbb
test
aaa
dec
imul
push
cmpsb
stc
cltd
adc
xor
sahf
xchg
xor
loop
or
add
ret
xchg
jge
pop
ds
jg
cmp
cmpsl
cmp
ljmp
mov
push
rcrb
enter
mov
xor
cmp
notl
lods
cmp
aad
mov
lret
mov
fbstp
jbe
pop
aam
das
dec
cmp
push
pop
lods
or
sub
cmp
sub
cs
pusha
add
push
xchg
decb
fdivl
push
aam
hlt
mov
je
xlat
pop
roll
nop
fstp
std
jge
ficoms
into
fsubrl
cmpsb
ljmp
in
xlat
sbb
mov
cmc
aaa
inc
out
sbb
and
mov
int
imul
sahf
popa
lods
outsb
mov
stos
inc
clc
xor
mov
daa
ds
aam
sahf
sbb
dec
inc
xchg
fisttpll
fstpl
mov
in
or
xor
jp
ret
lahf
out
add
dec
ret
cmp
jge
jb
adc
int3
lret
xchg
add
cmp
leave
data16
push
mov
leave
sbb
arpl
pop
mov
adc
xlat
adc
ret
ds
mov
pop
jl
inc
push
adc
push
scas
cmp
dec
add
data16
and
lahf
sub
ss
mov
jl
les
sahf
sbbl
loope
mov
adc
aad
adc
sbb
mov
dec
mov
add
movsl
pushf
mulb
pop
push
dec
lcall
daa
sbb
rorl
pop
ss
mov
add
dec
add
cmp
mov
adcb
out
frstor
not
in
je
ret
lret
ficompl
xor
sbb
inc
jle
fldenv
sub
xchg
mov
inc
inc
inc
sub
and
xchg
adc
aas
arpl
fwait
lods
push
or
or
int
loopne
inc
imul
lock
cmc
rorl
loopne
xchg
std
mov
movsb
mov
push
pop
cmp
pop
cmp
push
ljmp
jmp
stos
mov
int
aas
test
xor
cs
xor
nopl
cld
divl
jo
mov
jecxz
adc
or
aas
cltd
rcr
add
sbb
fstl
jge
mov
push
and
inc
and
mov
lret
test
cwtl
test
outsl
add
lock
and
out
cltd
adc
or
jge
in
ja
mov
shll
jae
mov
sub
jge
mov
test
sarl
pusha
mov
fsubr
out
jmp
sbb
sarb
das
inc
cld
loop
xchg
jle
in
lret
and
push
sub
mov
and
push
lock
add
jl
int
insb
psubq
repz
inc
adcb
notl
jo
inc
imul
clc
sbb
jne
mov
mov
mov
mov
aas
aas
dec
push
mov
mov
lret
rcll
mov
mov
aad
mov
pop
arpl
pop
stos
dec
mov
jno
and
test
xchg
mov
jb
ret
push
inc
or
pop
sbb
xchg
jge
xchg
popf
cmc
test
adc
int3
loop
popf
jae
pop
jecxz
fstl
push
jmp
mov
mov
mov
add
xchg
mulb
push
mov
int
sbb
test
das
pop
into
push
push
fcom
outsb
inc
loope
aam
cmpb
adc
movsb
lods
jecxz
push
bound
ret
sub
xchg
aad
or
mov
ljmp
jle
into
jmp
xor
loopne
fistpl
aam
ss
das
or
mov
mov
cmp
fiaddl
xchg
xor
and
repz
add
pop
inc
jae
int3
add
popf
sub
and
mov
sbb
xchg
and
xorb
les
loope
scas
adc
test
mov
push
push
mov
xchg
loopne
das
sahf
or
sbb
scas
mov
mov
js
cli
jne
out
sub
lock
test
popa
mov
or
insb
fldt
push
sbb
mov
and
loope
push
xchg
bound
dec
mov
ds
rorb
or
cmp
shlb
and
mov
push
pop
shrb
repnz
add
fmulp
testl
mov
mov
jno
push
out
ret
pop
push
cmpsl
sbb
in
or
dec
push
fcmovnbe
jge
lret
ljmp
or
shll
call
cmp
dec
das
daa
dec
push
push
lcall
pop
add
xchg
pop
clc
nop
cmp
addr16
pusha
movsb
pop
imul
bsr
shll
jne
movsl
mov
iret
mov
push
mov
fcmovnb
mov
es
adc
inc
enter
aas
xchg
sub
lds
jp
js
flds
push
fstps
pop
test
out
flds
lods
bound
sub
add
mov
xchg
push
jne
out
jp
iret
stc
push
mov
js
les
add
or
sub
fstpl
mov
hlt
cs
shlb
imul
fisubrl
frstor
cli
or
add
jae
jle
inc
sbb
or
mov
add
dec
call
and
std
fcmovne
out
jbe
push
rol
inc
rcrb
push
push
mov
dec
mov
sbb
andb
inc
sub
test
inc
mov
test
lock
lret
pop
loop
xchg
adc
xor
add
mov
testl
data16
enter
out
aad
dec
iret
out
icebp
adc
cmp
andl
lret
cltd
fildl
xor
dec
jmp
or
sahf
int3
movsb
or
cmp
dec
mov
jle
and
mov
loop
or
punpcklbw
int3
mov
add
mov
les
or
sub
pop
fdivs
jb
sysenter
incl
mov
adc
jae
sub
loope
mov
mov
adc
pop
mov
or
xor
xchg
loope
sbbb
sbb
cld
add
in
mov
xchg
adc
xor
push
testb
jge
hlt
pusha
lret
jg
cmpsl
pop
push
mov
sub
aas
dec
lock
and
lahf
std
les
scas
ljmp
xchg
lea
cmc
adcb
mov
pop
cmp
pop
sub
cmc
in
adc
xor
test
inc
ds
cs
dec
or
loop
push
sbb
mov
dec
xor
xchg
jmp
pop
cmpsl
movsb
push
mov
inc
pop
in
lcall
js
leave
loope
imul
lcall
insl
mov
adc
pop
pop
pop
add
flds
cltd
or
mov
insl
push
sbb
push
inc
jle
pusha
ljmp
xchg
push
mov
sub
pop
fdivr
mov
sbb
fldenv
test
jmp
lods
cmc
in
sub
push
sbb
xchg
mov
mov
sbb
rclb
lock
ss
lret
push
ror
lods
inc
pop
ja
js
aaa
shlb
iret
outsl
pop
push
lods
call
xor
sahf
cmpsl
jno
add
aam
out
adc
sbb
sti
incl
mov
shrb
inc
sti
lcall
push
imul
lahf
dec
test
es
ja
jle
pop
mov
movsl
pusha
cmc
fildll
jmp
pop
aas
invd
sub
and
sub
jle
shrl
in
and
cmpsl
leave
push
xor
dec
jmp
pop
dec
or
cmpxchg
fs
or
rsqrtps
fwait
pushf
inc
out
loope
fistpl
lret
add
idivb
clc
enter
dec
imul
mov
rol
dec
jg
and
roll
inc
pushf
popa
lahf
xor
test
mov
outsl
sub
xor
lret
loope
push
stos
cmp
ljmp
pop
jbe
cmp
mov
push
jb
in
jmp
xchg
inc
cmpsb
inc
addr16
mov
lds
adc
sub
in
xor
mov
popf
and
sub
fcomps
dec
xchg
inc
out
push
je
push
xor
mov
outsl
fldcw
test
pop
je
push
cmp
xchg
cltd
cmc
lcall
fs
aaa
xchg
mov
es
shrl
sbb
outsb
dec
push
xchg
mov
arpl
pop
sub
call
sbb
mov
push
and
ljmp
subl
aad
adc
mov
sbbb
scas
push
or
mov
cwtl
icebp
mov
xlat
fnstcw
decl
scas
ret
inc
insb
dec
inc
mov
inc
outsb
rcrl
xchg
mov
lret
pop
xchg
test
mov
jnp
pusha
jbe
les
loopne
adc
push
das
sbb
mov
jecxz
pop
inc
imul
sbb
imul
sub
dec
push
pop
insb
push
mov
sbb
jb
and
mov
push
insl
and
mov
lcall
or
jle
xor
add
ret
pusha
xchg
cltd
loopne
in
sbb
fcompl
or
dec
lret
add
je
test
test
xchg
mov
sbb
jne
jbe
xlat
and
pop
mov
pop
push
jae
test
test
xor
dec
ret
dec
and
mov
mov
mov
int3
stos
shr
aad
cmp
mov
push
ss
mov
xchg
pop
and
or
cmp
inc
in
in
cmp
xor
mov
lahf
outsl
aas
stc
cmpsb
xchg
inc
and
aaa
mov
xlat
ret
hlt
sbb
sub
pop
mov
or
xorb
jnp
imul
in
xchg
dec
cmp
pop
xor
and
shlb
add
mov
sub
inc
fs
cmc
mov
push
out
les
adc
dec
add
jmp
push
fcmovbe
mov
mov
or
scas
sti
loopne
jb
cs
mov
cmc
nop
scas
inc
pop
xor
inc
cli
jo
dec
mov
repz
jge
lret
flds
insb
pop
inc
outsb
clc
pusha
jle
and
sbb
or
jecxz
jecxz
pop
ret
enter
adc
mov
xchg
outsl
mov
cld
icebp
xchg
push
pop
push
imul
jbe
fcomi
and
adc
stos
in
movsb
lcall
lock
call
fildll
adc
pop
imul
movl
and
jns
pop
mov
jl
cmp
mov
test
inc
stc
dec
xchg
dec
xchg
jg
jecxz
adc
insb
push
ja
jno
shrl
mov
xchg
test
xor
imul
cmp
dec
mov
bound
ret
clc
movsb
cli
jbe
lods
shll
insl
mov
out
xor
sbb
cltd
insl
and
fisubs
jno
fsubrl
xchg
and
cli
mov
test
fwait
or
sub
test
popa
imul
out
push
sub
add
out
jge
jle
push
push
call
icebp
jmp
and
xchg
das
and
rcl
inc
je
cmc
out
dec
ror
stos
push
inc
xorl
xor
movsb
pushl
outsl
stos
leave
inc
add
ret
repz
jne
daa
aad
mov
and
pop
push
cmp
ds
ds
out
push
push
mov
imul
inc
xor
loope
ret
out
cltd
cmp
cmp
mov
loop
gs
jmp
sbb
cld
push
int
fcmovbe
mov
sbb
es
jo
xchg
rclb
test
gs
mov
jl
mov
cmc
jno
jnp
adc
jnp
or
pavgw
out
inc
cmp
pop
cli
lret
repnz
sbb
lds
jae
sub
test
lds
pop
cmp
dec
add
fisubl
push
scas
imul
push
jns
inc
lahf
gs
adc
sbb
and
stc
and
roll
inc
dec
orl
aaa
fdivrs
push
ffreep
rorb
xorl
inc
fisttpl
xor
and
lcall
add
sbb
mov
in
andl
jne
incb
jo
daa
jae
fwait
cmovp
sub
inc
jo
add
sbb
bound
loope
push
push
mov
sarb
cmp
or
stos
pushf
mov
aad
xor
arpl
xchg
adc
pop
mov
and
out
jae
flds
shl
testb
pop
dec
adc
out
mov
dec
stos
mov
or
push
lcall
and
push
mov
mov
xor
mov
jmp
cmpsb
jne
stc
xchg
sar
xor
enter
jle
cmpsl
dec
jnp
sarl
leave
cmp
bound
jecxz
xchg
mov
iret
mov
xlat
sub
push
cli
int
adc
mov
int3
sub
xchg
jl
mov
aad
dec
mov
fsubr
movsl
inc
jbe
cmp
stc
insb
imul
ret
xor
popa
push
dec
repnz
pop
jle
mov
ds
outsb
int3
movsb
sbb
dec
dec
push
or
push
pusha
jb
inc
cld
adc
ficoms
dec
test
repz
push
pop
push
inc
imul
push
push
ja
std
scas
jecxz
jns
into
mov
jp
fdivs
jp
rcrb
loop
push
imul
mov
std
mov
sbb
lds
jecxz
add
iret
cld
dec
dec
and
test
inc
loope
int3
loope
call
add
out
push
popf
int3
xchg
cli
pushf
and
imul
popf
in
pop
mov
sub
adc
enter
and
movsl
mov
mov
mov
cmp
jnp
aas
sbb
dec
lcall
rcrl
fnstcw
mov
sub
inc
cli
add
push
xchg
bound
vcvtsi2sdl
pop
add
ja
push
xchg
sti
stos
adc
nop
xchg
pushf
jge
sbb
das
pop
xchg
movsb
mov
adc
dec
dec
movsl
mov
popl
leave
imul
negl
lods
daa
lcall
aaa
shlb
ret
lods
add
inc
xchg
gs
pop
into
inc
jne
addr16
jl
sub
xor
loopne
add
or
outsb
jno
aaa
fs
mov
stos
fisubrl
cmp
jae
lahf
loope
inc
ret
sub
mov
jle
mov
test
out
insl
daa
jecxz
scas
fld
cwtl
pop
and
jb
ja
jmp
cmp
pop
sbb
popa
jl
pusha
cli
movsl
jbe
scas
push
pop
mov
jbe
or
repz
xchg
sub
cmp
roll
xlat
cltd
mov
add
dec
pop
add
addr16
adc
in
stc
jle
negl
inc
addr16
or
dec
inc
es
add
push
in
push
jmp
jnp
stos
out
loopne
dec
ltr
mov
mov
inc
pop
lds
add
mov
jl,pt
xchg
cmpsl
inc
into
dec
aaa
xor
pushf
call
cltd
mov
movsl
outsb
sbb
xchg
shl
mov
rcrl
shlb
sbb
mov
lret
je
push
fidivs
scas
xchg
add
movswl
inc
int
and
adc
dec
add
cs
loope
iret
cmp
dec
loope
ss
mov
xor
pop
in
sbb
lret
fstps
adc
sahf
mov
out
dec
rcrb
cmc
call
iret
inc
dec
dec
inc
push
popa
pop
in
mov
bound
mov
lahf
mov
data16
sub
mov
out
xchg
jmp
rclb
iret
aaa
cmp
mov
rclb
sbb
cli
movsb
arpl
jns
stos
in
jno
jns
adc
iret
pop
in
jecxz
xor
shll
push
jp
inc
inc
aaa
add
lahf
in
pushf
sbb
push
mov
xchg
mov
pop
stc
mov
xchg
add
fxch
mov
inc
clc
xchg
lret
imul
ds
rcl
test
or
add
test
push
sbb
jbe
jne
fs
data16
cwtl
std
aad
push
or
mov
mov
push
lret
mov
in
push
mov
sbbl
out
pop
sub
lret
xchg
xchg
xor
outsb
scas
flds
ret
jl
loope
lock
mov
in
rcrl
andl
lds
or
xchg
lds
dec
push
fcompl
pop
fcmovu
mov
jmp
dec
and
push
mov
jmp
mov
cli
add
xor
adc
pop
hlt
jg
xor
adc
mov
mov
mov
mov
pop
and
xor
pushf
or
inc
or
mov
inc
cmp
xor
jbe
fistps
movsl
hlt
pushf
cld
fldl
mov
lods
sub
outsl
mov
scas
inc
pop
push
leave
xchg
jp
jecxz
scas
jg
pop
js
scas
add
jae
pushf
dec
cld
stos
push
and
enter
cmpb
dec
mov
push
dec
ds
jne
inc
xlat
pop
add
aam
movsb
icebp
push
loopne
push
add
orl
fistl
fdivrs
nop
jecxz
sub
mov
adc
lock
loop
mov
ljmp
or
call
or
xchg
sbb
aas
scas
adc
inc
ss
aas
loopw
orl
sbb
jbe
insl
push
jbe
pusha
push
sub
push
mov
mov
dec
sub
ljmp
jecxz
push
hlt
aam
and
std
mov
and
xchg
enter
xor
movhps
mov
lret
xor
scas
fildl
adc
cld
xchg
jmp
cmpl
loopne
cwtl
jns
xor
or
fs
test
mov
sub
insl
mov
cli
imul
arpl
insb
sahf
xchg
pop
push
jl
cs
or
mov
ja
scas
xchg
pusha
dec
ret
mull
movsb
or
sbb
xchg
xchg
cmp
loop
sbb
fiadds
imul
cmpsl
imul
loopne
outsl
dec
sbb
sub
xchg
loope
out
sub
nop
fsubrs
js
push
jno
pop
movsl
stc
rcrl
adc
ret
loope
popf
ret
ss
lahf
pusha
push
sub
cmp
lahf
jmp
push
repz
lahf
or
arpl
lret
lahf
out
pop
into
and
mov
clc
popa
cli
popa
in
pop
dec
jno
bound
clc
sbb
pop
loope
mov
xchg
lods
cwtl
fs
sub
loopne
test
les
lods
repz
push
cmpsb
lea
repnz
dec
inc
and
and
pop
dec
push
mov
fbstp
ret
pop
sti
das
divl
rol
xor
and
inc
lods
cli
addr16
jnp
les
arpl
cmp
push
sarb
lods
push
inc
scas
enter
adc
stos
sbb
inc
adcb
aad
mov
in
stos
fucomi
add
movsb
jbe
movsl
cmp
adc
leave
imul
mov
add
inc
test
mov
mov
or
repnz
xchg
mov
iret
or
cmp
outsb
rclb
lahf
ljmp
loopne
mov
mov
jp
in
fdivrs
arpl
aaa
xor
hlt
adc
test
leave
insb
mov
mov
sti
bound
insl
in
cmp
sti
mov
mov
xlat
cltd
xchg
dec
push
xor
ja
xchg
stos
or
push
or
mov
sti
int3
call
jo
xor
repz
sub
jp
mov
inc
dec
mov
leave
inc
pop
pop
loopne
pop
adc
ficompl
cmpsb
inc
and
ljmp
and
sbb
mov
outsb
push
orl
cwtl
aam
cmpsl
dec
mov
fisubrs
pop
lahf
imul
inc
push
mov
sbb
cli
jl
xchg
into
das
mov
scas
cwtl
mov
push
xlat
pop
popf
xor
push
inc
int
int
ret
shrl
xchg
pop
xor
or
jno
int3
and
pop
mov
js
dec
lcall
movsl
imul
loop
adc
dec
cmp
movsb
dec
mov
mov
push
add
int
jno
push
sbb
into
data16
outsl
xchg
call
lods
xchg
add
rol
cld
sbb
pop
sar
das
or
add
sub
jmp
pop
fidivrs
push
stos
jae
pusha
cmp
cmpsl
pop
sub
jae
sub
and
cld
mov
push
mov
int3
popa
ljmp
mov
arpl
cmp
add
fisubrl
pop
add
add
adc
hlt
fcmovne
sahf
sarl
and
dec
pop
xchg
loop
rorl
sahf
xor
data16
add
fiaddl
lret
lcall
push
pushf
aad
xor
repz
shl
cmpsb
or
fwait
cmp
mov
or
aas
sub
lahf
push
or
inc
adc
es
xchg
cmp
add
fwait
insb
sti
cld
xor
jg
xchg
xchg
insl
push
or
cmp
cmp
xor
xor
mov
mov
mov
inc
and
lahf
test
mov
mov
ss
lods
test
faddl
mov
sbb
fs
and
sub
or
xchg
mov
xchg
enter
outsl
loop
push
sub
outsb
push
enter
arpl
arpl
mov
fcomps
sbb
push
movsb
pop
pop
insb
xlat
sub
aaa
inc
fucom
fidivs
add
mov
and
das
add
pop
loop
filds
sbb
dec
sub
das
or
movsb
xchg
sarb
das
xchg
movsb
sbb
or
adc
leave
in
cmp
jno
or
dec
inc
sahf
cmc
or
in
stc
cmpl
inc
mov
push
rclb
roll
call
adc
add
inc
adc
movsl
mov
cld
sub
or
lods
cmp
ror
jecxz
popa
cmp
xchg
out
out
inc
mov
mov
movsb
mov
pop
adc
lds
loopne
xchg
loopne
xlat
xchg
pushf
fsubrs
bound
outsl
mov
mov
pop
pop
aaa
hlt
fimull
push
or
add
mov
inc
insb
rorb
stos
xchg
pop
mov
out
fdivrs
mull
jno
xchg
fdivl
cld
add
lods
push
jle
es
movsb
enter
and
jne
rcrb
gs
add
incb
ljmp
cwtl
push
pop
push
xchg
sub
mov
stc
imul
mov
xchg
xor
fbstp
daa
mov
scas
sbb
in
push
mov
mov
pop
in
rcrl
sbb
out
std
sbb
icebp
lds
push
adc
mov
aad
push
or
or
jbe
dec
cmp
fdivrs
shl
and
push
dec
cmpsb
scas
int3
cmp
and
push
push
ds
inc
xchg
push
push
fwait
lcall
adc
pop
lock
ja
xchg
mulb
fidivl
cmp
inc
cmp
fsubr
in
dec
add
out
lock
out
or
pop
fstpt
ret
pop
push
push
out
mov
sbb
clc
cmp
leave
adc
mov
pop
push
scas
insb
mov
mov
data16
mov
imul
incb
push
test
pop
xchg
fisttpll
xchg
mov
scas
gs
mov
mov
iret
push
or
xchg
mov
inc
dec
jl
dec
pusha
push
movsbl
and
hlt
pop
enter
sbb
fs
push
stos
pushf
push
pop
mov
repz
test
popa
dec
aaa
roll
sbbb
jle
loope
mov
lret
rcll
cmp
add
sbb
rolb
cmp
sub
icebp
jb
inc
pusha
repnz
addr16
mov
adc
fsubr
pop
add
cmpsl
dec
not
sub
jbe
mov
adcl
lret
push
rcr
das
ret
and
aaa
clc
xchg
lret
ja
or
cmp
movsl
mov
xchg
inc
push
aam
lds
fsubrs
mov
cmp
ljmp
inc
clc
bound
outsb
push
jbe
aaa
mov
jmp
sub
mov
lcall
arpl
push
pushf
mov
fwait
lahf
and
mov
push
pop
std
push
push
cli
pop
fwait
ret
jnp
sub
inc
hlt
lahf
mov
lods
sub
fwait
mov
xchg
add
sub
test
iret
int3
aam
loop
adc
jne
mov
aas
shrb
std
push
add
adc
outsw
dec
xchg
adc
add
pop
mov
call
jl
jae
sbb
test
or
xchg
mov
xchg
sbb
test
add
cwtl
pop
dec
out
fcoml
cmp
xorl
in
pop
add
repnz
dec
jg
fiaddl
fnstenv
cwtl
mov
int
callw
or
mov
xchg
xchg
lea
xor
jo
lods
xor
cmp
sar
repnz
xchg
bound
cltd
xchg
mov
mov
addr16
push
movsb
lock
cmp
mov
pop
dec
in
in
push
push
fsqrt
daa
jge
in
cmc
lods
pop
or
inc
mov
js,pt
and
mov
test
mov
andb
cmp
fs
sub
jbe
jns
pop
push
aam
push
dec
pop
inc
mov
cmc
cld
add
mov
add
pop
pop
add
popa
and
add
mov
pop
clc
inc
fistpl
test
sbb
popa
loopne
sub
mov
inc
cld
into
ret
adc
daa
pop
movsb
je
arpl
mov
hlt
adc
jg
pop
in
add
jo
int3
faddl
popa
in
jecxz
cmp
fsubrl
inc
mov
jbe
insl
sub
push
stos
jno
fsubl
inc
mov
push
enter
or
dec
mov
xor
jl
adc
inc
je
mov
sub
mov
lret
xor
adc
cmpl
inc
dec
aam
jge
shlb
dec
clc
test
cli
adc
sbb
fldt
sub
scas
xchg
jmp
enter
mov
mov
xor
xchg
inc
inc
mov
and
mov
adc
std
movsb
imul
push
repz
dec
loop,pt
or
cmp
xchg
bound
lods
lcall
jmp
jle
aam
sub
test
movb
jg
movsl
jns
cs
aam
mov
inc
scas
lret
or
push
enter
inc
out
jmp
push
int
bound
mov
push
cmpsb
lret
mov
add
mov
inc
cmp
sub
sub
stos
pop
cmp
inc
shlb
cmc
repz
sub
xor
push
sbb
xor
mov
out
imul
roll
into
xchg
xor
inc
inc
pop
sub
jecxz
jb
add
dec
aas
out
pusha
aas
xchg
xor
movsb
push
sbb
fldt
out
stc
movsl
dec
jns
sbbl
fisubrl
scas
mov
jo
or
mov
cmp
add
mov
inc
ja
popa
mov
lea
inc
cmp
sbb
mov
imul
push
sbb
sarb
js
addl
pop
xchg
mov
xchg
push
pop
push
jae
outsb
ret
arpl
push
mov
clc
inc
jne
fstl
dec
imull
iret
jno
mov
xor
xorl
lea
bound
fs
shlb
stos
mov
mov
sub
or
cmpb
fldt
pusha
outsb
imul
xchg
adc
inc
pop
int3
sub
lcall
mov
sub
clc
aas
mov
pop
ljmp
mov
adc
mov
inc
push
jbe
addr16
and
mov
lret
xchg
insb
inc
in
sub
dec
mov
repnz
mov
incb
mov
push
lds
mov
pusha
sbb
push
add
cld
aaa
mov
orl
pop
popa
sub
test
mov
loope
lea
sub
sti
mov
sbb
ljmp
dec
lock
cmp
mov
adcb
adc
dec
aas
pop
dec
inc
push
lds
xor
mov
jae
mov
imul
ja
mov
out
pop
mov
mov
dec
popa
int3
in
xor
addr16
outsb
inc
mov
scas
xor
loopne
pusha
js
mulb
aas
push
or
decb
mov
inc
jl
mov
movsb
ds
in
adc
mov
decb
testb
sbb
shlb
lods
dec
push
repz
in
mov
stos
push
das
cmpsl
test
test
xor
cmp
pop
or
pushf
push
cs
divl
pop
mov
mov
ret
sahf
cmpsb
scas
mov
inc
adc
shl
cld
fwait
test
mov
pop
loopne
or
or
jbe
cmp
lret
inc
ret
loope
push
clc
push
test
ret
gs
scas
sub
nop
rolb
dec
mov
dec
fs
rclb
gs
push
pop
into
dec
push
fldl
adc
mov
adc
ret
adc
stos
and
loop
arpl
jge
xorl
jnp
add
inc
mov
and
outsl
in
lock
outsb
sbb
nop
sbbb
sahf
jmp
mov
mov
jae
jecxz
dec
push
inc
movsb
cmpsb
insb
fstpl
add
test
or
fldenv
dec
cmp
add
and
adc
scas
lret
fwait
iret
mov
pop
mov
test
aaa
cmpb
ret
loopne
xor
test
and
popf
adc
add
mov
sub
aaa
jecxz
cmp
sub
in
xchg
lock
ds
add
loop
push
sbb
es
insl
aaa
push
push
mov
mov
cltd
test
sbb
xchg
pop
insb
sbb
loopne
sub
fs
xchg
repz
and
scas
rolb
vdivpd
movsb
or
jne
stos
sbbl
pusha
xchg
xchg
std
cmpsl
adc
jnp
iret
repz
cmp
ficoml
jns
popa
enter
fstl
mov
cmp
bnd
mov
call
xlat
stos
mov
jne
push
stos
mov
sbb
and
sar
call
cmp
sbb
out
int3
shr
cmp
or
fdivrs
sub
push
or
add
sub
adc
cs
in
js
mov
lahf
iret
imul
aam
and
scas
call
push
in
iret
mov
mov
ret
jg
orl
and
adc
push
das
sbb
pushf
shlb
ss
inc
push
inc
mov
inc
and
pop
lock
jne
and
add
stos
push
fs
ja
mov
adc
mov
sbb
adc
shll
xchg
jl
inc
fisttpl
jle
lahf
inc
cmp
shlb
or
xor
in
fwait
sbb
pop
and
pop
loope
jp
mov
push
mov
or
and
cmp
outsb
dec
dec
xlat
scas
scas
jle
sahf
jb
aas
adc
cli
lahf
jp
pusha
popf
rorl
stc
mov
mov
dec
popf
or
mov
lock
jno
mov
push
in
cmp
push
add
lret
push
cmp
fs
jbe
rorl
sbb
mov
lcall
cmpsl
sbb
jbe
push
xchg
mov
push
jge
daa
push
inc
roll
std
dec
in
lds
cmp
rorb
in
stc
movsb
mov
push
push
and
popf
cmpb
xchg
lea
repnz
adc
clc
jne
dec
lcall
lds
jno
rolb
movsb
fisubrs
movsb
jg
frstor
mov
sub
and
ljmp
lea
jnp
test
rdpmc
popf
ret
sbb
lret
outsb
mov
test
pop
push
outsl
pop
iret
fiaddl
and
pushf
sahf
mov
es
or
push
adc
bound
cmpsb
popa
stos
or
push
incl
mov
xchg
jmp
jne
icebp
gs
mov
cli
ss
xchg
inc
push
push
aam
rcll
loopne
jp
stc
adc
mov
mov
lcall
dec
cli
xchg
cltd
dec
xchg
adc
fisubrs
pusha
cltd
sbb
cmpb
imul
mov
loop
daa
out
fldcw
mov
cmp
push
idivl
imulb
ss
aaa
jp
add
push
pop
mov
arpl
jns
cmp
shll
fwait
add
repz
push
xorl
push
mov
jnp
sbbl
leave
or
adc
loopne
xchg
and
mov
mov
ret
or
jo
int
cmpsb
dec
mov
clc
mov
push
xchg
xchg
scas
or
enter
mov
jae
jl
clc
dec
loopne
mov
add
test
je
sbb
push
loopne
icebp
popa
mov
imul
xor
add
and
es
cmp
jle
loope
sub
into
test
movsb
xchg
pop
xchg
ds
imul
out
movsb
jmp
mov
sbb
negl
int
into
pop
fsubs
punpcklbw
dec
repnz
pusha
mov
ret
inc
push
cmp
sahf
jb
dec
dec
pop
xor
adc
mov
or
ljmp
in
sbb
pop
fldl
inc
add
insl
lock
mov
and
sub
add
cmp
adc
pop
mov
and
xor
lods
fbld
mov
int
adc
sti
xchg
or
cmp
xchg
mov
sub
ja
lret
cmc
xchg
xchg
fidivrs
sbbb
sbb
mov
lret
int
and
into
iret
jnp
dec
mov
call
and
fwait
sbb
push
inc
iret
mov
popa
xchg
sub
inc
mulb
lock
adc
sahf
dec
subb
jmp
stos
fwait
xor
xchg
pop
dec
cmp
test
mov
and
and
dec
fs
xor
adc
mov
mov
cmp
and
add
mov
fs
inc
mov
adc
cltd
or
ret
lock
dec
jne
xchg
hlt
sbb
test
scas
sbb
pop
or
jp
outsb
dec
cld
pop
add
lret
das
xchg
inc
les
outsl
jl
inc
lret
test
test
mov
jg
jae
rolb
push
dec
push
xchg
sub
mov
fs
imul
xchg
pop
movsl
adc
arpl
dec
inc
mov
lds
xor
jp
or
ss
leave
insl
push
fst
je
std
jecxz
in
cmp
mov
cwtl
aad
lret
xor
and
push
xchg
int
mov
push
jb
decb
xchg
xlat
jns
cmp
outsb
pop
adc
jae
add
push
mov
ret
test
push
ret
lret
inc
mov
scas
scas
add
xor
in
insl
loop
mov
pop
hlt
push
call
scas
and
xchg
imul
fs
dec
add
push
aam
pop
movsl
pop
xchg
and
push
inc
cmp
data16
insb
dec
cs
lds
add
cmc
std
jo
fiadds
sub
cs
je
icebp
out
jg
and
xchg
pusha
scas
rcll
fidivrl
cmpsl
adc
cmp
arpl
out
pusha
dec
jae
jp
and
ffreep
hlt
pushf
push
je
shll
outsl
push
outsb
fadds
roll
or
pop
sub
adc
mov
or
mov
cmp
mov
sbb
and
xor
ljmp
mov
mov
pop
cmp
popf
dec
mov
push
test
mov
lods
and
mov
fisubs
jne
loop
or
repz
cltd
cmp
mov
inc
inc
mov
cmc
out
cwtl
adc
inc
insb
jae
in
adc
ljmp
xchg
out
adc
and
push
lods
push
sarl
xor
lds
loope
mov
sub
fcomps
loop
adc
int3
in
pushf
out
std
movsl
daa
sti
aad
xor
push
test
out
inc
xchg
clc
addl
lds
stos
cmp
push
shrb
mov
dec
pushw
cli
imul
mov
fisttpl
adc
mov
push
cld
roll
mov
fmull
in
test
push
stos
or
inc
enter
jne
xchg
stos
adc
pop
aaa
in
or
inc
sbb
fildl
fdiv
inc
jmp
and
jbe
dec
mov
and
inc
cltd
stos
mov
mov
mov
jmp
push
lret
andl
sbb
addb
inc
out
arpl
fidivs
idiv
in
cmpsb
push
pop
sysenter
hlt
repz
int
xor
pop
test
cli
out
inc
out
mov
mov
and
inc
jmp
clc
in
ja
call
pop
pop
mov
insl
imul
cmp
cmp
xchg
imul
xchg
cltd
mov
add
mov
mov
mov
jns
jae
test
pop
push
push
xchg
dec
xchg
ja
inc
sarb
stc
dec
mov
and
subl
adc
stc
sbb
mov
cmp
or
jmp
inc
cmpsl
test
xchg
mov
or
cwtl
push
enter
enter
and
dec
cmp
in
loope
push
int
into
pusha
dec
cmp
cmp
aaa
pop
rorl
ud2
rcrb
xchg
daa
add
mov
jo
sub
lods
pop
and
je
mov
ss
mov
xor
mov
inc
das
ss
cmp
sbbl
pop
in
push
mov
inc
faddl
clc
je
mov
dec
jno
ljmp
lea
add
jmp
xor
mov
mov
leave
mov
dec
inc
jg
or
mov
mov
adc
sbb
sbb
adc
adc
shrl
or
lea
sti
fbld
mov
clc
mov
lods
mov
mov
rorl
xor
adc
insb
nop
pop
pop
cmpsl
jns
cld
inc
stc
mov
cmpl
dec
leave
daa
fiaddl
nop
call
cmpsl
xor
push
enter
push
mov
out
dec
pop
test
adc
pushf
unpckhps
push
dec
jp
jmp
adc
outsl
or
test
jp
xor
push
jb
ret
lcall
inc
jo
pop
es
adc
stos
shl
cmp
dec
push
push
stos
add
mov
test
outsl
push
sarb
insl
stc
sti
dec
into
pushf
jecxz
test
or
sti
mov
mov
xor
pop
jmp
mov
pop
and
or
xchg
adc
rcrb
jmp
imul
arpl
mov
repz
test
popa
jl
mov
popa
addr16
hlt
push
cld
push
inc
xor
loopne
mov
adc
mov
cmp
aas
push
rcrl
sbb
jnp
or
cmp
pop
dec
out
cmp
mov
mov
insb
mov
cmp
test
sbb
lds
inc
mov
add
imul
cltd
xor
adc
jle
mov
js
movsb
xchg
cmc
jp
adc
iret
sbbl
fnstenv
clc
movsl
and
or
repnz
cmp
lock
in
in
js
mov
mov
push
ja
cmpsb
in
fstpl
cmovo
testl
popa
mov
adc
mov
sbb
icebp
shr
xor
jb
pop
lahf
pop
jle
rcrb
xor
push
push
adc
mov
sub
int
cwtl
sub
inc
adc
sbb
daa
ds
mov
cmpsl
lfs
sbb
fwait
bnd
jns
insb
shll
adcb
scas
arpl
jns
cmpsb
sbb
je
rol
cmp
data16
cmpsb
pop
dec
leave
pop
cmpsl
inc
jnp
add
cmp
outsb
mov
into
push
inc
aam
mov
or
ds
and
out
jb
pushf
decb
inc
call
pop
popf
test
shlb
lds
in
shrl
insb
dec
sahf
sbb
push
push
mul
pop
xor
mov
stos
inc
push
adc
push
das
mov
loope
insb
js
in
insl
sbb
cmpsb
in
enter
mov
cli
outsb
test
bnd
cs
pop
mov
sbb
cmp
mov
dec
cmp
and
outsl
lret
add
repz
lret
fcmovnbe
dec
or
cmp
jae
sub
xor
repnz
sbb
jecxz
push
sub
test
shrb
push
in
pop
jb
push
cwtl
adc
or
imul
xor
mov
cmp
and
bound
push
jmp
push
dec
in
pushl
arpl
mov
repnz
mov
add
mov
test
push
push
mov
shll
inc
cs
lds
ds
dec
cmp
out
les
inc
cmpsl
xchg
stos
jae
inc
or
inc
xor
mov
add
sub
jp
sub
mov
arpl
mov
iret
dec
inc
popa
inc
stc
test
mov
and
and
fcmovne
pushf
insl
push
minps
gs
arpl
std
lea
ss
mov
mov
mov
add
addr16
inc
cwtl
fsubrs
mov
lret
mov
mov
seta
dec
subb
jns
int3
add
je
shlb
sahf
add
pop
mov
sbb
inc
inc
or
push
bound
and
movsb
movsb
ljmp
xor
add
mov
xchg
es
in
lret
test
pushf
jl
mov
cs
lea
addb
pop
mov
jno
jb
mov
pushf
ljmp
push
jge
sub
push
outsb
cli
pop
pop
or
les
repnz
insb
imul
cmpsb
mov
cltd
xchg
pop
ret
push
push
sahf
cmp
xchg
mov
aas
mov
mov
ljmp
fisttpll
call
stos
movsb
and
outsl
sub
adc
mov
add
cmp
out
shll
dec
pop
in
push
push
shll
mov
iret
dec
fsubs
in
jbe
cld
dec
addr16
or
jp
xor
adc
xchg
sbb
inc
mov
jbe
clc
pop
shll
icebp
adc
pop
or
jne
jbe
cmpsb
add
inc
pop
push
pop
mov
xchg
call
in
cli
jmp
call
dec
out
dec
add
xchg
ja
out
test
and
xlat
push
shrb
pushl
out
xor
rolb
in
jb
push
sub
push
iret
push
rorb
pop
sbb
push
mov
mov
out
inc
xchg
movsl
xchg
jle
sbb
jmp
stos
mov
fnstenv
pop
loopne
in
adc
out
cmpsb
cmpl
jmp
pop
and
mul
mov
les
stc
add
test
and
shrb
xor
inc
mov
mov
mov
mov
xor
mov
push
push
lds
and
shll
adc
imul
push
out
ds
in
xor
mov
sub
and
xor
or
dec
lods
lock
aam
stc
shll
repnz
mov
jo
dec
mov
adc
jg
pop
movsl
jno
ss
es
int
xchg
sahf
mov
sbb
movb
xlat
pop
and
ret
testb
loope
shll
mov
arpl
adc
test
std
dec
js
pop
insb
les
loope
mov
mov
ss
jp
xchg
sub
lods
jmp
nop
inc
sub
fsubp
push
inc
push
lds
lcall
ja
jne
or
push
mov
cli
mov
mov
inc
jl
push
cltd
enter
movsl
push
inc
es
jae,pt
xchg
int3
and
or
mov
mov
mov
mov
lock
scas
sub
out
cmp
nop
xor
loopne
icebp
lret
nop
jae
stos
cmp
insl
lods
mov
fisubl
mov
xchg
mov
pop
push
fcoms
lret
test
sub
je
or
mov
pop
xchg
add
push
adc
and
lds
push
pusha
lret
push
mov
xlat
xchg
xor
push
sbb
sbb
dec
fiaddl
popa
or
loopne
cmp
xor
push
mov
or
std
push
sbb
incl
sub
xchg
xor
xor
das
fwait
or
aaa
jge
mov
xchg
push
xor
es
xor
add
incb
sahf
push
inc
add
xchg
mov
mov
mov
and
pop
jmp
fldl
inc
flds
jle
fisubs
mov
bound
nop
add
mov
pop
cmpsl
out
loop
mov
mov
pop
pop
out
jno
adc
ss
lock
or
call
pandn
sbb
and
pop
or
fcmovbe
xor
icebp
dec
sarl
std
dec
pop
dec
pushf
xor
es
fildll
inc
cmp
fcompl
xor
mov
push
aad
out
mov
jmp
sub
into
shll
xchg
pop
out
inc
xor
or
jnp
xor
loope
scas
gs
and
jmp
add
movsl
rcll
jb
inc
cld
icebp
add
out
lea
aaa
sarb
and
adc
jge
ljmp
sub
fbstp
int
ret
rolb
xchg
pop
negb
cli
mov
jnp
pusha
loope
and
xchg
out
cmc
mull
lds
xor
bound
dec
adc
push
xchg
add
lea
dec
inc
pop
mov
ss
insb
movsl
xor
popa
xlat
fsubs
and
mov
sub
fisttps
or
cs
lcall
cwtl
mov
mov
mov
push
cwtl
test
adc
roll
mov
js
nop
push
sub
cmp
pop
loope
sbb
test
pop
pop
cli
pop
mov
pop
push
add
imul
jne
push
gs
push
fmull
repz
push
push
subb
adc
push
cli
aas
and
icebp
rcrl
mov
sahf
fstpt
fdivr
lea
mov
adc
daa
inc
mov
daa
dec
out
mov
cmp
je
scas
into
fidivrl
xchg
sbb
mov
lahf
dec
push
outsb
sarl
lret
pop
fdivrl
inc
jecxz
xchg
dec
jnp
inc
mov
aas
xor
cld
imul
push
push
jns
jb
ret
imul
sbb
dec
sbbb
shrb
mov
sbb
les
sub
sbb
shr
dec
mov
dec
inc
out
lods
sar
mov
mov
mov
dec
fiadds
xor
lret
cltd
add
add
ret
fidivrl
inc
xchg
int3
fbstp
stos
mov
mov
push
or
adcl
push
loopne
aaa
cli
jle
sub
lds
add
add
mov
xchg
repnz
jle
out
cltd
fs
sub
mov
mov
fstps
jne
arpl
mov
push
es
and
lock
int
fdivl
inc
fidivs
int3
mov
dec
xchg
jg
jg
and
cmpsb
aad
inc
ljmp
add
push
mov
fimull
jp
mov
push
dec
out
adc
jb
mov
testb
jp
nop
xlat
dec
jl
mov
xor
inc
out
fs
aas
inc
movsb
mov
addl
aas
in
shlb
mov
sub
ds
pop
cmp
mov
mov
rcr
inc
mov
int3
xchg
rol
push
and
in
js
ds
test
mov
and
imul
adc
stos
cmp
outsb
jge
popa
test
daa
xchg
jae
shrl
aaa
out
punpcklbw
push
mov
loop
les
imulb
jge
sub
or
inc
jne
xchg
jg
das
fisubrs
inc
lods
into
mov
es
or
push
or
fsubrs
shrb
adcl
cmpsl
sub
mov
inc
fisubs
jg
xorl
js
fldt
sub
mov
inc
stos
add
xchg
xorl
and
ret
adc
jge
lock
and
test
dec
or
cltd
inc
clc
cmpsb
sub
and
pushf
sub
mov
and
icebp
mov
test
shl
sub
cmp
cmc
jne
insl
fsub
push
jo
jns
scas
xchg
sti
push
sbb
xlat
jecxz,pn
in
xor
push
lea
jbe
pop
xchg
dec
nop
test
leave
sarl
jae
and
adc
ficomps
test
push
fnstsw
mov
push
jno
pusha
js
xchg
pushf
sub
mov
lods
mov
add
cmpsl
mov
mull
adc
mov
push
vminss
cmp
pop
jle
cli
mov
mov
xor
jle
xchg
cs
xchg
test
sub
dec
ljmpw
jg
clc
in
or
jne
mov
push
and
push
mov
insb
insl
lds
aad
loope
imul
xchg
adc
rcrb
sahf
jecxz
cmp
ret
nop
arpl
in
push
push
push
into
std
clc
test
inc
or
and
shlb
pop
in
iretw
pop
stos
mov
int
dec
lds
xchg
add
mov
sub
les
inc
mov
out
inc
push
jl
mov
xchg
test
lea
sbb
lret
enter
jmp
mov
mov
push
inc
sbb
shl
cwtl
cmp
dec
mov
rcrl
xchg
das
push
xchg
sbb
shl
test
jne
xchg
sbb
call
mov
inc
ret
mov
push
dec
sub
and
pushw
mov
cmpsl
jmp
xchg
xor
and
in
repz
repz
mov
aam
jp
dec
push
add
fidivrl
xlat
jne
fs
call
lds
or
xchg
pop
mov
outsb
test
pusha
pop
mov
loopne
out
mov
adc
push
das
cmc
mov
nopl
sbb
and
imul
pop
rolb
addr16
cltd
sarb
fwait
jmp
jmp
mov
push
imull
outsl
outsl
fisubl
fmul
or
or
fildll
imul
stc
xchg
mov
xor
dec
push
lock
mov
mov
jnp
jmp
or
hlt
outsl
mov
pop
jns
aaa
mov
fidivrs
insl
sbb
cmp
dec
shrl
push
jno
das
mov
mov
shlb
lcall
cmp
dec
ja
mov
test
push
test
pop
push
dec
stos
inc
out
push
sbb
arpl
xor
mov
adc
inc
hlt
sub
or
clc
lea
xor
dec
add
mov
in
adc
add
pop
xor
imul
xorb
mov
add
jae
xchg
scas
stos
jb
xchg
jno
js
mulb
inc
loop
div
pop
ljmp
mov
inc
pushf
repnz
mov
stc
inc
xchg
into
adc
sbb
xor
xchg
sbb
xchg
js
cltd
xor
sub
aad
rorb
aas
subb
je
mov
mov
ret
test
rolb
fs
add
cld
mov
fistpll
jp
xchg
sahf
test
and
rcll
and
and
mov
roll
mov
sbb
test
cmc
inc
nop
lods
shr
dec
jno
bound
fs
movsb
das
and
outsb
insl
mov
push
pusha
inc
push
xor
sbb
pop
dec
pop
pop
ljmp
xorl
movsl
xchg
loop
das
loope
cmp
lea
fdivrs
adc
call
mov
mov
mov
jns
negl
dec
idivb
nop
mov
jp
and
cmpsb
add
out
fstpt
fstl
shrl
mov
and
in
shll
mov
aas
mov
fsubl
test
jl
mov
out
pusha
sahf
loop
popf
movsb
adc
inc
mov
enter
lods
push
pop
dec
or
mov
push
jns,pt
in
imul
ja
sub
gs
pusha
jb
jnp
popa
jne
inc
add
daa
xchg
rcrb
nop
pop
and
sub
fnstenv
push
lahf
sbb
es
fdivp
add
hlt
dec
fistpll
cltd
xchg
pop
push
out
push
insl
add
add
pop
inc
push
or
pop
jmp
js
pop
mov
dec
xchg
daa
dec
cmp
dec
mulb
cltd
popa
mov
jge
push
xchg
imul
lea
scas
mov
sbb
testb
push
or
adc
fwait
int3
or
ret
push
or
movsl
and
test
pop
inc
add
in
lcall
out
pusha
xor
push
loopne
arpl
add
push
sti
lcall
pop
scas
mov
mov
adc
cmpsb
sub
in
mov
pop
push
push
sub
cltd
cmp
add
pop
mull
div
and
xor
mov
inc
mov
aaa
inc
rcrl
add
jnp
cmp
sbb
push
mov
rcr
leave
lcall
or
mov
outsb
loopne
push
add
mov
jge
xor
test
rclb
inc
mov
insb
mov
mov
ja
or
lret
scas
sbb
mov
jns
stos
jg
mov
rorb
ljmp
jbe
sti
xor
mov
mov
xchg
push
fadds
int3
pop
cmp
dec
call
jp
scas
adc
mov
mov
push
cmc
add
xor
mov
jge
int3
imul
data16
sub
icebp
pop
cmp
push
call
iret
cmpb
xchg
or
cmpsb
out
pop
mov
fimull
cli
insl
or
pop
push
xchg
sub
pop
jo
nop
adc
in
inc
out
int
dec
ret
jae
jne
std
sub
mov
push
push
mov
movsl
pusha
jae
dec
mov
adc
pop
sahf
sub
or
xor
fs
inc
push
push
decb
dec
lret
in
addr16
sti
mov
sub
mov
sub
jne
test
call
jbe
adc
xchg
cmp
sub
mov
aas
aad
push
inc
push
inc
mov
cmpsb
cmp
cmp
mov
ret
or
cmp
mov
lret
dec
adc
pop
scas
xchg
into
lds
frstor
sub
daa
mov
iret
mov
ja
loopne
mov
testb
xchg
ficoms
incl
push
in
and
mov
push
add
add
push
pop
mov
jo
mov
arpl
sahf
inc
addb
loop
mov
xchg
stc
pop
pop
mov
xchg
lock
gs
scas
mov
stc
ret
inc
rol
xchg
faddl
test
outsl
mov
lret
sub
sbb
mov
dec
jge
adc
sahf
enter
xchg
test
sbb
sar
jmp
adc
cs
rolb
sbb
cmp
pop
and
or
cmpsb
dec
imul
adc
jns
lahf
xchg
push
push
jg
int
inc
roll
mov
cltd
aas
icebp
sbb
gs
ja
jbe
jae
inc
rorl
bound
std
outsb
gs
mov
dec
push
ret
addr16
jge
dec
adc
pusha
lods
push
rol
jp
popa
and
movsb
rorb
insl
je
push
sti
mov
mov
adc
mov
pop
inc
jmp
int3
cli
pop
jg
mov
pop
outsl
ret
xchg
popa
and
mov
pop
stos
lahf
pop
xchg
adc
sub
mov
adc
push
adc
mov
sub
jp
fcmovbe
inc
pop
shll
jno
mov
xchg
or
mov
mov
jns
cli
pusha
inc
push
mov
push
inc
das
cmp
cmp
in
jecxz
lods
adc
sbb
or
cmpsl
lret
inc
cmp
add
lock
pop
sub
cwtl
shl
pop
pop
xor
and
and
aas
inc
mov
dec
leave
leave
add
or
imul
or
xor
jbe
out
fcompl
gs
sbb
fcmovnb
mov
repz
or
andl
test
aaa
mov
hlt
int3
sbb
adc
outsb
popf
fwait
repz
test
mov
decb
popfw
sbb
pop
mov
xor
lods
mov
xor
mov
ror
push
mov
mov
fidivrs
push
fwait
xor
mov
fsts
or
lret
inc
lea
inc
adcl
inc
push
call
and
cmc
dec
loopne
popf
rcrl
push
adc
pop
lret
cmpsl
mov
adc
jns
daa
into
sbb
cmpsl
fsubs
into
decb
push
icebp
mov
and
pop
movsb
sub
imul
lea
inc
sub
mov
mov
ror
jb
or
loope
mov
dec
push
decb
dec
mov
add
cltd
lods
aas
xchg
sti
xor
in
sbb
iret
ljmp
ja
xorl
pusha
lcall
inc
mov
pop
xor
out
mov
fiaddl
inc
shll
loope
inc
imul
push
stos
xchg
dec
xchg
jne
lret
mov
fldl
jmp
scas
sbb
insl
xor
imul
sarb
in
and
push
das
popf
lea
popa
stos
adc
xlat
out
xchg
pop
sbb
cmp
inc
dec
daa
cmp
pop
mov
inc
enter
dec
dec
inc
xchg
in
bnd
icebp
sub
sub
pusha
jo
adc
lret
add
jle
loop
xchg
lahf
ss
xchg
lods
inc
gs
aas
icebp
cwtl
imul
inc
push
sub
cs
sub
cmp
xchg
nop
les
jmp
adc
shll
lock
ljmp
lahf
mov
jmp
push
in
inc
stc
mov
js
or
call
sub
sarb
lods
in
add
dec
imul
daa
xchg
sub
insl
mov
jnp
test
xor
add
aas
rcll
mul
fstpt
clc
dec
dec
pop
sti
ret
fsubrp
push
int3
insl
sub
test
inc
out
and
xchg
push
push
add
in
sub
xchg
dec
jle
jo
xor
test
int3
test
clc
dec
out
pop
test
mov
xchg
sub
lret
jg
mov
adc
mov
cltd
pushf
stos
int
or
imul
xchg
cli
outsb
mov
imul
test
push
or
loope
orb
lret
out
repz
test
and
test
jae
movsb
cltd
jecxz
mov
mov
dec
fsubrl
mov
int3
sbb
fcomps
xor
insl
test
jecxz
xchg
adc
pop
mov
sahf
jbe
jmp
push
outsb
xlat
out
push
std
mov
cli
jmp
cli
out
sarl
mov
fmull
testl
lahf
add
ret
repz
xchg
jg
pop
mov
stos
stc
cmpsb
sub
inc
movsl
stc
mov
mov
sahf
mov
es
nop
icebp
push
out
or
fstpt
mov
and
cmp
es
xor
sub
and
inc
xchg
movsb
or
sbb
cwtl
jo
adc
in
imul
test
sub
sub
fidivrs
cmp
mov
jle
loop
mov
into
loopne
insl
cli
jl
push
jp
repnz
adc
add
inc
popf
gs
popf
push
jle
movnti
pushf
and
xor
lock
gs
ljmp
clc
scas
mov
cmpsb
insl
sub
inc
push
inc
mov
cmp
ss
and
dec
xchg
test
pop
xchg
outsb
out
push
shrb
pop
mov
mov
stc
pop
push
pop
lods
or
incl
or
ret
xchg
push
cmpsb
sub
pop
stos
sbb
or
popf
outsl
jmp
stc
repz
das
or
movsl
les
xor
out
pop
andb
fmull
mov
mov
pusha
xlat
orb
clc
jb
idivl
insb
add
mov
gs
inc
sub
je
jge
mov
stos
faddl
clc
sub
mov
pop
cmp
mov
xor
das
scas
fstl
clc
fs
or
mov
add
pop
jne
or
popl
shl
dec
mov
jne
cmp
jmp
aad
rcl
ficoml
mov
icebp
sbb
popf
test
outsb
fistpll
dec
inc
lret
cmpsl
push
push
mov
pop
cwtl
pop
or
mov
xchg
add
mov
das
test
cli
jg
xor
fcompl
lods
pop
aam
daa
mov
xor
mov
loopne
add
mov
cmp
lods
and
pusha
jg
stc
sub
pop
xchg
inc
cmpsl
clc
aad
test
mov
mov
pop
fisubrs
jo
ret
dec
repnz
lcall
sbb
push
dec
jle
jecxz
rorl
push
jl
divl
sub
pop
dec
xor
adc
add
dec
shl
orb
jp
daa
jo
ljmp
pop
call
pusha
outsl
mov
test
stos
mov
enter
pop
push
mov
sub
or
pop
movsb
addr16
in
loope
jno
xlat
mov
rcr
jo
daa
and
pop
dec
xor
cld
imul
adcb
rolb
sub
push
addb
inc
aas
fildll
and
test
in
lcall
adc
mov
sub
inc
xor
dec
cmpsb
lret
or
insl
cld
sub
insl
xor
mov
test
ja
repnz
or
jne
notb
jmp
mov
test
lahf
pusha
add
aad
sub
int
in
jmp
jg
sub
stc
loope
int3
rorl
jno
mov
xchg
leave
cmp
out
pop
loope
dec
scas
cld
mov
pop
repnz
aad
test
adc
dec
fwait
daa
mov
push
sti
sbb
in
movsl
pusha
paddd
sti
sub
mov
push
inc
leave
call
jae
stos
jle
inc
scas
outsl
in
lds
ja
movsl
daa
push
mov
jecxz
mov
pop
cmp
addl
or
cmp
jno
inc
fisttps
pop
mov
cmpsl
mov
lret
sub
rcrl
and
dec
fdivr
pop
dec
push
push
dec
movsb
mov
xor
mov
and
sbb
pop
std
xor
sub
sbb
push
test
imul
xchg
ss
mov
sub
push
cmp
pop
adc
ficoms
adc
pop
adc
sub
shr
add
jge
imul
pusha
cwtl
ljmp
mov
mov
and
fidivs
test
add
gs
xchg
xchg
sbb
jnp
sub
hlt
shrl
in
es
pop
mov
or
mov
mov
jle
les
push
add
in
outsl
xchg
inc
lods
push
mov
xchg
push
cmp
sbb
ja
mov
pop
xor
in
xchg
in
insl
psubusb
mov
int
pop
in
fcmove
scas
add
mov
insl
call
jle
scas
inc
mov
pop
xorl
out
cld
mov
jge
mov
ret
mov
jb
jmp
push
sbb
jmp
jle
cmp
lahf
test
xor
lahf
cltd
push
mov
xor
jmp
mov
fnstsw
or
divb
mov
pop
cwtl
lret
sub
dec
mov
testl
adc
mov
add
push
push
int3
arpl
aas
loope
mov
ja
pop
cmc
jge
pop
int
lea
addr16
push
mov
hlt
aad
sbb
popf
stc
lret
mov
xorb
add
sub
mulb
mov
call
inc
jae
loope
iret
fldcw
fs
mov
outsb
mov
sub
cltd
je
pop
jne
popf
push
lret
inc
std
adc
andb
or
jno
arpl
pusha
mov
cwtl
mov
in
hlt
adc
pop
mov
stc
stos
dec
mov
jl
jno
nop
add
test
lahf
daa
push
call
aam
cmp
sbb
inc
aam
inc
pop
cli
hlt
ja
pop
mov
loop
shlb
pop
push
mov
xlat
pop
push
jl
out
sbb
or
push
orb
inc
pop
xchg
lcall
fdivrs
add
dec
ja
popf
in
pushf
stc
adc
into
dec
push
mov
sbb
pop
dec
ror
lods
in
and
jmp
fmull
out
mov
sub
shll
jp
in
sarb
leave
cmp
jo
jne
sub
lret
xor
mov
jge
insb
out
loop
clc
mov
repnz
stos
lds
sub
nop
add
lods
enter
cs
inc
or
stc
iret
arpl
inc
mov
add
or
inc
pop
jecxz
mov
fstp
add
arpl
jbe
mov
sti
pop
mov
cmp
jmp
xor
adc
mov
sbbl
xchg
fs
aad
lret
push
add
and
fwait
mov
nop
pop
mov
icebp
cmpsl
out
jns
fmull
pop
int3
push
je
inc
jb
inc
mov
mov
mov
mov
dec
in
xchg
negl
lcall
int
cld
cwtl
aaa
repz
or
jge
fildll
out
sbb
aam
lret
enter
mov
cmp
loop
pop
xchg
mov
add
fs
add
ss
mov
lret
stos
pusha
jp
adc
push
xchg
in
aaa
imul
cld
out
pop
mov
mov
mov
imul
mov
and
inc
and
mov
adc
xchg
mov
add
cmpsb
jge
call
leave
push
jo
and
mov
jb
cmp
push
mov
push
mov
cmp
cmp
js
dec
cmpsb
or
pop
pop
sub
outsl
test
and
iret
outsl
or
mov
sahf
pop
push
xor
test
jno
adc
pop
dec
test
sbb
nop
jp
push
push
and
mov
sub
outsb
xor
ljmp
sbb
add
fistpll
out
jp,pn
inc
and
mov
pop
in
mov
mov
addr16
mov
mov
fldt
int
mov
orb
movsl
inc
inc
push
fidivrs
in
rcrb
adc
in
dec
ficompl
hlt
mov
scas
aas
xchg
xchg
cmp
jmp
ljmp
mov
push
mov
fistps
ficoml
outsb
mov
mov
xor
lods
mov
fsub
lret
popl
in
sub
aam
ret
and
scas
mov
cs
rolb
jo
in
cmp
inc
mov
pushf
jl
jle
push
shll
push
xchg
adcb
cmp
sub
inc
sbb
les
fldl
arpl
movhlps
mov
adc
lods
and
xor
ds
pop
mov
sbb
jns
pop
push
jg
fidivrl
or
mov
pop
repz
cmp
sbb
mov
cs
rcll
mov
icebp
lea
add
outsb
lods
xchg
inc
sbb
mov
outsb
cs
pop
in
cmp
push
xor
jecxz
int
sub
ret
inc
dec
dec
lea
pop
movsb
je
call
outsb
or
mov
xchg
xor
push
sbb
imul
adc
add
orl
mov
sub
fadd
enter
sbb
cs
cltd
add
push
into
lods
int
or
call
arpl
inc
inc
jb
xchg
test
pop
lret
cld
data16
mov
inc
adcl
stos
cmp
sub
gs
insb
pop
aad
sbb
add
out
add
mov
ficomps
dec
xor
lahf
mov
stc
add
jg
fimuls
fldenv
les
jl
insl
je
insl
push
lret
lods
xor
adc
pop
push
inc
pop
clc
dec
cs
dec
cmp
int3
xor
cmpsb
sub
inc
insl
xor
insl
lods
aas
scas
pusha
bound
mov
in
xchg
leave
movsb
das
hlt
insb
loop
cmpsl
div
out
xchg
js
mov
out
insl
nop
add
mov
jge
adc
add
popf
push
or
adc
je
popa
sbb
or
mov
test
lret
pop
push
fisttpl
out
frstor
xchg
loopne
in
or
push
fs
popa
add
jmp
adc
add
insb
mov
cli
mov
test
cmp
cld
stc
or
and
sub
mov
lock
adc
xor
lds
orb
mov
cs
mov
push
jmp
maxps
stos
xor
mov
pop
add
adc
lods
mov
cmp
lret
pop
push
into
cld
jge
in
mov
pop
jp
mov
sub
sbb
add
mov
and
jbe
and
data16
jmp
inc
nop
je
push
in
adc
or
jb
cld
ljmp
pop
dec
cs
adc
or
dec
or
adc
sbb
jle
popf
inc
push
int3
addr16
jb
lcall
loope
inc
sub
pop
sub
sub
jae
bound
jns
icebp
jbe
ss
fimull
xor
and
xor
adc
mov
jbe
test
loopne
xchg
inc
sbb
push
data16
nop
in
dec
call
push
cmp
iret
repz
lods
pop
idivb
hlt
clc
pop
jo
test
les
lds
mov
sub
and
jae
cmc
mov
paddw
or
mov
fwait
jl
sub
sahf
mov
lret
inc
jno
xchg
cltd
push
lea
ret
sahf
or
jmp
adc
mov
push
xchg
push
push
or
cmp
int3
rorb
int3
in
push
pop
bound
mov
loopne
fists
xchg
enter
cmp
insb
fwait
jo
mov
and
mov
or
pop
lret
cld
sahf
push
mov
popf
das
dec
subl
jne
sub
pushf
push
incb
dec
or
jno
mov
xchg
xor
dec
cld
jnp
inc
pop
cltd
or
mov
pushf
call
xchg
out
out
mov
and
lds
or
adc
inc
xchg
test
lret
dec
sbb
jnp
xor
mov
movsb
push
dec
lahf
insb
jle
nop
repnz
xchg
add
std
jbe
xor
jo
cli
jnp
insb
push
dec
imul
mov
lret
lahf
inc
xchg
test
or
pop
push
cltd
jae
pop
rclb
add
jecxz
cltd
adc
addr16
mov
push
xchg
mov
sbb
mov
dec
mov
jae
stc
dec
lea
les
aaa
into
lods
mov
loopne
mov
or
adc
movsb
in
fisubrs
clc
pop
cmp
bnd
jb
mov
cmp
adc
cmp
push
adc
jo
mov
test
dec
scas
ret
lods
push
stos
lock
xor
pop
insl
fldt
cmp
push
mov
add
jp
sub
fcmovu
test
popf
stos
cmc
push
pop
xchg
lahf
add
mov
stos
and
xor
loopne
scas
mov
push
xor
adc
sbb
lods
shlb
sti
mov
mov
ss
jmp
call
cmp
incl
lods
sub
aam
nop
sbb
pop
jo
mov
loop
data16
orl
shll
mov
adc
cmp
gs
nop
push
xchg
movsl
xor
dec
or
mov
jg
in
adc
adc
pushf
stos
nop
lahf
cmpsb
leave
sti
push
pop
jno
enter
call
aas
fwait
lcall
pusha
scas
js
jne
jnp
and
or
adc
xchg
das
fcomps
sbb
mov
sub
push
mov
movsb
push
cs
mov
dec
jae
sbb
or
mov
mov
aaa
add
mov
and
and
cmpsl
xor
jmp
xchg
cwtl
in
lahf
mov
in
jle
insb
out
mov
imul
jae
and
adc
scas
mov
dec
jecxz
and
cmp
jmp
jnp
sub
pusha
nop
sub
fs
cmp
adcl
sub
mov
je
pop
jmp
or
fwait
push
inc
cmp
int
sarb
mov
lcall
xor
cltd
pushf
dec
xlat
subb
loopne
push
imul
loop
scas
fisttpl
loopne
movsl
and
imul
xchg
fldenv
mov
add
add
dec
lahf
cmp
ja,pn
cmp
fcmovbe
cmp
pop
or
hlt
lods
inc
outsl
dec
popf
das
sub
inc
push
shrb
and
ljmp
cmp
mov
adc
das
pop
loope
fstpt
test
dec
inc
mov
mov
ret
mov
sbb
and
jp
inc
fwait
mov
stc
fwait
mov
pop
repz
adc
lret
pop
dec
nop
ja
mov
lock
cmp
dec
cwtl
sti
test
push
add
mov
sbb
enter
sbb
pop
lods
cmp
into
mov
gs
faddl
clc
fcoml
pop
mov
imul
inc
xorl
cwtl
xchg
cmpb
loop
mov
div
movsl
xor
or
adc
testl
out
sarb
add
dec
mov
dec
add
leave
setge
push
leave
dec
mov
test
cmp
stos
out
pusha
cmp
mov
mov
xchg
mov
pop
inc
imul
sub
and
in
cmp
imul
mov
std
decl
sti
mov
mov
outsb
aaa
ds
mov
inc
ja
sbb
adc
js
pop
mov
call
in
cmp
fcmovu
cmpl
add
scas
inc
shlb
xor
fisttpl
sbb
mov
enter
rcr
cmp
push
loope
ja
or
in
push
aam
popf
jo
movsb
adc
ja
inc
inc
pop
clc
or
and
or
add
popa
jp
int3
adcb
pop
dec
in
sbb
jle
shrb
push
into
fsubp
out
cmpsb
test
inc
insb
adc
loope
push
popf
mov
aas
loop
or
rcrb
out
and
jecxz
cmp
enter
jnp
inc
push
cmpsb
decb
pop
repz
and
in
int
js
sbb
into
loope
std
andb
pop
inc
bound
movsl
push
jo
test
data16
cli
mov
push
aam
push
js
stc
push
cli
cli
loop
daa
mov
movsl
fidivrl
iret
addl
lds
repz
std
jg
ss
jle
push
pop
adc
clc
cmpsl
decb
sub
adc
pop
test
pop
inc
sbb
mov
aad
pop
mov
fcoms
adc
iret
mov
adc
clc
and
sbb
sbb
testl
arpl
popa
das
js
xchg
out
ds
pop
jmp
jb
xchg
in
adc
ljmp
jnp
push
sti
xchg
mov
mov
insb
cmp
in
dec
xor
mov
mov
mov
jg
repnz
lods
jmp
mov
clc
daa
popf
and
out
popa
leave
out
sbbl
out
and
pushf
mov
add
aaa
je
test
in
repz
int3
sbb
pop
mov
cltd
lcall
imul
clc
test
sbb
mov
js
cmpsb
into
arpl
arpl
loop
movsl
ss
repz
out
insl
cmpb
dec
fidivrs
jge
jo
push
lock
add
jp
daa
mov
mulb
inc
das
inc
mov
adc
jno
add
cli
xchg
lock
mov
add
call
callw
jae
push
jg
adc
sub
push
dec
pop
mov
out
jbe
add
xchg
jg
arpl
in
sbb
cltd
mov
or
fisubl
inc
mov
cmp
dec
dec
add
and
ljmp
scas
jnp
inc
mov
ja
stos
pop
xchg
dec
lods
scas
scas
mov
cmpsl
in
enter
pop
in
in
lret
in
ja
pop
sbb
addr16
add
add
push
arpl
mov
dec
adc
mov
mov
aad
add
into
faddl
sbb
sbb
inc
js
cmp
movsb
mov
dec
out
dec
mov
fnstenv
xchg
aaa
and
add
imul
fstl
lea
ds
push
mov
mov
xchg
cmpsl
imul
imul
outsl
or
and
push
mov
test
in
int3
dec
and
shlb
int3
sahf
sub
xchg
dec
cmpsb
ret
sahf
xchg
ljmp
cmpsl
bound
pop
imul
inc
adc
push
std
jae
adc
sbb
push
jb
pop
xchg
cmp
popf
enter
mov
sub
xchg
or
adc
mov
add
cmp
in
pop
inc
inc
sahf
or
sbb
inc
dec
pop
push
jns
imul
inc
cmp
mov
pop
cli
lea
clc
and
insb
fs
jae
jno
pop
xchg
loope
mov
stos
je
xchg
fistps
dec
xchg
fisttpll
dec
pop
loop
xor
popf
mov
into
push
into
js
jnp
adc
ja
stos
xor
pop
mov
pop
in
aam
add
test
cwtl
notb
cmp
mov
sub
push
loope
rcrb
daa
popa
jle
lods
jnp
loopne
ret
leave
lods
jge
iret
push
ret
shlb
les
push
fnstenv
popa
xor
mov
adc
fstps
lret
ljmp
mov
jne
fwait
inc
dec
aaa
mov
fcompl
fcmove
sub
lcall
inc
stos
jb
push
mov
and
xor
cmc
iret
aaa
mov
in
push
hlt
jb
sbb
jmp
add
adc
sahf
jnp
dec
repz
push
sbb
or
or
dec
negb
mov
lds
ret
repnz
fidivrl
test
mov
fsub
sbb
adc
mov
into
adc
xchg
pop
shrb
sbb
cwtl
xchg
xchg
sub
loope
mov
test
add
sub
cltd
stos
mov
mov
adc
fisubs
ret
into
mov
pcmpgtw
cmp
insl
mov
lock
xchg
cmc
loope
cmp
je
cmp
cli
dec
sub
fdivrl
clc
cmp
lret
sbb
or
fcomps
inc
jmp
xchg
cmp
sbb
clc
out
pushf
and
cmp
popf
pusha
out
scas
and
aam
ret
pop
cmpsl
bnd
add
jns
jb
mov
push
dec
dec
dec
inc
fdiv
mov
shrb
lods
inc
repnz
pop
out
or
cltd
xchg
pusha
sbb
push
jmp
cmc
js
cld
out
clc
rorl
rolb
mov
dec
xor
cltd
cmp
push
xchg
incb
sbb
jg
test
jo
out
and
push
pop
hlt
lret
mov
push
sbb
dec
aaa
or
lcall
xchg
mov
bound
xchg
cmc
or
adc
jno
out
loope
push
imulb
inc
jg
mov
fs
call
sahf
mov
dec
jnp
shr
aaa
mov
jmp
out
mov
adc
bound
arpl
test
stos
xor
xor
xchg
fwait
jle
aas
mov
in
xlat
push
dec
push
mov
push
jne
lret
xor
or
mov
pusha
xor
stos
cmp
int3
jmp
fiaddl
push
mov
sti
icebp
fdivl
loope
mov
adc
out
jl
test
sahf
adc
jecxz
sub
or
jge
bound
ds
fldenv
cmp
cmp
xchg
inc
mov
jno
hlt
insl
int
xchg
xchg
ljmp
cmp
jmp
push
add
and
sti
in
ds
push
add
add
aaa
inc
mov
sub
cs
pop
out
out
sub
repz
repz
add
int
and
stos
je
repnz
rorl
ljmp
inc
adc
mov
insl
push
aad
ret
jecxz
daa
mov
and
cmpsb
sub
gs
mov
xor
leave
popa
loop
lahf
mov
pop
xor
lods
jmp
and
push
test
outsb
pop
xor
int
push
mov
jle
add
pop
test
and
aaa
sub
repz
fisttps
jns
or
push
or
jmp
mov
enter
lea
sub
cmp
pop
mov
movsb
pop
andl
fstl
add
adc
jmp
ficoms
mov
sbb
xchg
push
stos
add
push
or
xor
push
adc
push
jg
test
jne
imul
push
dec
fistpll
dec
cli
shlb
lock
sub
sarl
shl
outsb
jmp
xor
add
push
pop
or
cmp
aas
ret
cwtl
out
jb
inc
data16
jb
clc
xchg
add
ds
lret
mov
cmp
cltd
or
stos
inc
daa
test
aaa
nop
in
cmpsb
iret
cmp
sbb
sbb
pusha
outsl
and
or
mov
sub
xchg
in
hlt
cltd
mov
popa
stos
cli
or
inc
enter
sub
pop
out
jbe
fists
insl
cmc
adc
jmp
pop
xchg
mov
fcmovbe
stos
imull
aas
xlat
sub
arpl
push
sub
fdivl
mov
push
and
jge
std
inc
fwait
mov
es
mov
cld
cmp
cmpl
push
ror
aad
cmp
scas
jle
shll
cmp
cmp
jo
dec
xlat
adc
das
cmpsl
shr
jae
xor
push
sbb
xchg
dec
out
enter
ret
mov
icebp
dec
dec
fnsave
aas
dec
and
stc
in
lds
add
jb
mov
or
mov
sub
lea
shlb
push
push
cmp
and
sbb
adc
jae
dec
fmull
jg
xor
aaa
push
and
je
popa
scas
ja
adc
fstpt
sub
adc
popf
divb
out
sub
inc
mov
push
pop
sbb
int3
aam
and
push
arpl
jbe
sub
fldl2t
mov
sub
pop
lds
mov
aaa
cwtl
scas
push
lock
pop
fimuls
pushf
imul
loopne
sahf
jl
call
adc
es
and
outsb
xlat
pop
sbb
out
add
sbb
imul
rolb
mov
push
sub
sbb
cltd
daa
addb
repnz
cmc
mov
mov
xor
lods
push
sub
pop
cmp
xchg
movsl
xchg
jb
jge
mov
mov
aam
enter
jmp
pop
add
call
lret
and
xchg
jmp
in
push
lcall
jecxz
lock
jmp
mov
sub
or
mov
sti
mov
icebp
scas
sti
repz
cmc
pop
push
cmp
cmc
mov
popf
sbb
or
adc
mov
ja
adc
sub
aad
lret
hlt
push
aas
insb
sti
jae
roll
pop
xchg
push
cli
sbb
push
insl
push
inc
std
sbb
push
jg
push
dec
pop
mov
addr16
mov
imul
das
mov
leave
sbb
sub
mov
push
mov
fldenv
and
cltd
xchg
xor
outsl
cltd
fucom
mov
leave
inc
xor
push
in
xchg
shl
shrl
pushf
rcrb
in
nop
test
cwtl
xor
sbb
test
nop
sub
push
sbb
fidivs
jmp
sahf
loope
in
popf
div
and
jae,pn
popa
roll
pushf
push
inc
shlb
dec
jbe
hlt
repz
rolb
mov
ficoms
enter
add
mov
mov
fcomps
push
adc
dec
xor
push
ja
jns
outsb
enter
lret
fwait
mov
lret
jmp
dec
sarb
scas
or
sub
cmpb
negb
mov
xchg
jl
sub
sub
ja
mov
fld
mov
lods
sbb
insl
push
lds
cmp
lods
mov
xchg
pop
jne
loop
xchg
loop
sarl
jnp
mov
lcall
mov
jle
jne
xchg
mov
adcb
ss
cmp
outsb
scas
mov
fs
roll
xor
xchg
jno
fcoml
xchg
in
xchg
out
sbb
call
stc
divl
mov
add
arpl
pusha
or
xchg
popa
mov
mov
shufps
pop
sub
mov
xor
xchg
or
movsl
push
int3
xchg
cmp
popa
lahf
pop
dec
add
push
mov
xor
jns
cmp
dec
xchg
insb
mov
and
mov
inc
sbb
lcall
mov
repz
addr16
sbb
aad
inc
ljmp
add
in
push
orb
stc
dec
orb
movsl
pushf
add
std
shlb
adc
cmpsb
imul
test
mov
clc
icebp
or
cmpsl
shrl
add
stos
mov
xor
sub
scas
sub
sarl
ss
xor
mov
frstor
add
jae
mov
jmp
orb
mov
jmp
int
or
adc
adc
push
cmp
adc
and
fs
cmpsl
into
sbb
stos
push
add
sbb
cmp
mov
out
push
lds
and
and
inc
adc
cmpsl
arpl
xor
pop
out
clc
roll
insb
les
lcall
call
fimuls
cltd
lcall
jp
cmp
or
push
push
inc
call
adc
sub
jnp
lock
sub
orb
and
insb
jb
nop
cmpsb
test
inc
mov
pop
outsb
stos
stos
cmp
mov
xor
pop
aaa
mov
inc
int3
xlat
aas
in
dec
idiv
add
push
cwtl
xorl
in
push
mov
ret
push
jb
inc
in
fsub
mov
addb
incb
jae
push
imulb
xchg
mov
jb
jge
and
mov
hlt
xchg
dec
xor
cmp
stc
or
jle
cmpsl
lods
pop
mov
pushf
orb
mov
xor
vfmadd132ss
mov
mull
nop
mov
lea
pop
sbb
repnz
xor
mov
xlat
lret
xor
ja
xchg
dec
inc
cs
adc
mov
adc
adc
mov
repnz
mov
aad
repnz
adc
in
push
mov
out
daa
mov
enter
mov
mov
js
mov
xchg
adcl
jl
and
cmp
mull
movsl
sarb
into
mov
in
movsl
sbb
addl
mov
mov
add
push
adc
pop
add
sahf
into
xchg
or
push
cmp
stos
loopne
xchg
dec
pop
add
xchg
fldcw
jle
in
sub
pop
dec
add
pop
sbb
jg
mov
mov
jmp
hlt
jg
clc
cmp
adc
pop
ret
adc
mov
and
and
data16
arpl
ret
aaa
mov
mov
mov
add
loope
xchg
push
push
adc
adc
xor
xchg
data16
jmp
ret
fcoml
iret
test
add
jo
cmp
bnd
push
mov
jns
mov
enter
and
and
mov
sti
mov
sahf
enter
popa
jle
imul
dec
or
call
mov
sub
jns
nop
cmpsb
push
or
adc
add
faddl
xor
mov
scas
popf
jae
mov
call
dec
xchg
push
sbb
lds
pop
push
mov
cmp
mov
xchg
mov
mov
xchg
in
inc
ret
xor
xor
mov
mov
cmp
repz
in
movsb
dec
xchg
push
cmp
inc
ss
fcompl
and
cmpsb
leave
js
add
xor
out
xchg
icebp
mov
ss
xchg
cmpsb
in
sub
inc
adc
push
subb
sub
sub
push
mov
sub
sahf
fmull
je
jb
sbb
jo
xchg
dec
dec
imul
loopne,pt
xchg
pop
or
mov
pop
jecxz
mov
mov
cmp
cli
aaa
and
inc
imul
dec
add
sub
sub
les
xchg
hlt
jmp
sub
xchg
sbb
push
cmc
adc
popa
pop
jg
jecxz
xchg
cmpb
popa
popa
mov
inc
fwait
xor
cmp
int3
adc
stc
mov
stc
arpl
out
fldt
mov
add
inc
inc
lock
jbe
decb
jg
cmpsl
jmp
movsl
addr16
sbbb
mov
jns
mov
push
rcrl
fldcw
pop
sbb
daa
out
pop
sub
std
pop
adc
cltd
sbb
adc
mov
sub
insb
jecxz
inc
lcall
movsl
mov
ficomps
push
xor
sub
lret
or
and
lret
inc
cmp
lds
aad
iret
pop
xor
inc
fisttpll
loop
push
sbb
xchg
or
pop
ja
int3
xchg
mov
mov
or
mov
xor
jmp
pop
xchg
sub
push
sbb
insl
xchg
fmull
adc
lock
push
sbb
lea
jne
xchg
mov
mov
pushf
cmp
push
fsubp
cmp
mov
outsl
inc
fadd
cmp
mov
scas
dec
es
add
in
inc
push
rcl
xor
stc
pop
inc
dec
cs
sub
xorl
dec
pop
aad
ljmp
cmp
mov
in
or
fdivs
outsb
mov
push
andb
mov
imul
or
xchg
xlat
outsb
sahf
daa
mov
push
in
jno
jle
sbb
inc
iret
popa
mov
aad
pop
scas
stc
fistpll
outsb
outsl
mov
pop
dec
jno
xchg
movq
pop
scas
sub
and
fstps
mov
dec
jns
mov
sti
in
insb
lods
or
mov
fidivrl
outsl
call
mov
fwait
mov
jp
pushf
jns
cli
pop
xchg
sbb
sub
dec
sbb
pop
dec
jecxz
js
movsl
add
pop
add
and
in
pop
or
xlat
push
repnz
call
ret
mov
ret
inc
aaa
pop
pop
jne
sub
jl
loopne
xor
jb
sti
stos
jl
faddl
sbb
dec
xor
aam
in
sub
jns
or
inc
icebp
dec
push
sbb
mov
push
lock
mov
into
jmp
ret
movsb
int
fs
shrl
jge
ret
inc
fdivrs
fisubrs
lcall
xchg
xchg
jp
and
push
and
ja
cwtl
test
jmp
mov
push
cmp
pop
test
fisubrs
mov
lods
cwtl
leave
loop
or
bound
test
xor
jb
jb
mov
enter
cmp
dec
sub
xchg
in
rorl
adc
pop
cmpsl
stos
mov
xchg
xchg
lahf
xchg
popf
fmulp
and
cmc
push
mov
adc
fldenv
mov
lods
ds
mov
out
popa
clc
mov
std
loopne
cltd
hlt
movsb
cltd
fwait
call
jnp
dec
xor
pop
adc
inc
sub
xchg
test
cld
lahf
adc
sub
enter
fs
pop
add
lock
sbb
or
lock
dec
cmp
addr16
ror
add
das
add
add
pusha
mov
cld
sbb
mov
lock
inc
jae
add
mov
xchg
cmc
enter
mov
mov
popf
add
mov
mov
popa
aad
dec
xchg
sbb
xchg
ret
xor
cmp
jecxz
rcll
cmpsb
lret
jle
mov
adc
xor
dec
jbe
nop
dec
lds
gs
jmp
sub
mov
and
lret
xlat
mov
push
ss
dec
push
xlat
lock
add
jns
aad
mov
pop
std
xor
xchg
push
flds
jb
arpl
mov
inc
fcmovu
mov
pop
sub
orb
xor
cmp
data16
or
leave
cmp
les
loope
inc
inc
inc
pop
push
insl
testl
jbe
inc
ret
enter
mov
aad
dec
enter
out
sbb
iret
sub
push
mov
jns
dec
ds
adc
pop
pusha
loope
adc
in
cmp
lods
clc
and
jnp
ficoml
imul
aad
sahf
std
fnstsw
add
dec
pop
ljmp
aas
push
jg
xor
in
ja
jae
add
jbe
jl
push
pushf
fucomi
out
add
add
inc
or
frstor
ret
jne,pt
sub
xor
in
test
mov
cmp
in
pop
xchg
movsb
inc
imul
dec
mov
sahf
adcl
or
call
roll
pop
push
in
mov
push
aas
repnz
fmuls
aad
or
scas
fs
rclb
pushf
sti
lcall
push
or
sub
jb
pusha
ss
aam
outsl
sarb
xor
sbb
dec
insl
in
and
enter
cmpsb
add
push
and
mov
cmp
jl
ss
mov
fsubl
dec
mov
lds
fldt
jecxz
decl
cltd
je
outsb
mov
icebp
inc
or
push
and
rcll
xchg
out
cmp
out
mov
cmpl
ret
jp
sbb
scas
cmc
push
test
mov
lret
inc
jb
ds
jo
and
xchg
out
jne
xchg
aad
sub
lcall
add
pop
stc
or
test
jns
cmpsl
mov
js
push
or
popa
jle,pt
daa
or
mov
and
ss
cmp
out
and
mov
jbe
pop
popf
dec
fimull
fs
icebp
xchg
inc
enter
in
negl
je
push
mov
sbb
pop
xor
push
gs
mov
lea
sbb
orl
lahf
leave
or
out
jge
and
pop
stos
loope
dec
push
out
push
xlat
lods
mov
leave
mov
je
jbe
in
inc
sahf
mov
orb
sbb
push
shl
outsl
sbb
pop
mov
cmp
lahf
sbb
lods
cld
aaa
xchg
mov
pop
or
cmp
inc
xchg
pop
adc
sub
dec
shrb
mov
sub
iret
loopne
fadds
test
repnz
xor
xchg
inc
shl
in
repz
or
outsb
sub
lods
pusha
dec
mov
lahf
fistps
sbb
push
test
imul
data16
xchg
sbb
sub
insl
or
into
rcll
sbb
add
lret
adc
mov
pop
xchg
jmp
mov
jo
mov
and
or
js
shrb
out
out
pop
cld
dec
inc
pop
inc
pushf
cmp
mov
lods
mov
aaa
cmp
adc
pop
bound
jae
sub
adc
jle
jae
aam
sub
scas
pop
and
inc
mov
sub
push
adcl
insb
sbbb
arpl
mov
xor
push
push
dec
enter
mov
xlat
xchg
push
ret
aas
data16
and
inc
outsb
daa
mov
xor
test
loopne
pop
shrb
int
repnz
loope
jae
push
arpl
in
mov
enter
sbb
push
mov
cltd
testl
sbb
lds
enter
lret
lcall
inc
les
or
add
mov
ja
dec
jp
push
sbb
repz
jmp
or
sub
cmc
jae
adcl
inc
pop
lods
mov
cmp
jg
fnstenv
and
lahf
sbb
leave
cwtl
mov
subb
fisttpl
jge
mov
fcomip
iret
lret
test
push
icebp
insb
mov
lods
pop
ds
or
mov
test
mov
cmp
ficoml
xrelease
lods
pop
push
jbe
fcompl
mov
les
sub
pop
and
cmpsb
fisubrs
dec
add
xchg
pop
mov
mov
cmp
jbe
mov
add
and
inc
pop
rcll
and
dec
mov
lods
enter
xchg
loopne
rcl
pushl
adc
sub
or
mov
add
insl
inc
xchg
jae
js
ror
sub
repz
mov
jge
mov
enter
shlb
iret
sub
cmp
outsb
daa
jge
out
fstpt
fs
cmpsb
fstpl
sti
aam
imul
sbb
and
or
and
dec
or
or
mov
or
sahf
out
jmp
fimuls
jnp
or
cmp
in
add
sub
add
add
nop
mov
repz
or
push
aam
xor
pop
add
lret
dec
das
pop
jge
movsb
jge
xor
dec
gs
int3
lret
icebp
or
mov
addl
sbb
imul
adc
in
sbb
xchg
scas
mov
mov
mov
pop
ret
shlb
xchg
imull
loope
cs
jecxz
insl
ds
mov
add
push
xor
push
push
mov
cmc
adc
inc
insb
imul
cmpsl
xchg
clc
test
shrl
lods
sbb
repnz
out
rcr
out
mov
pop
or
test
mov
cld
lret
cmp
add
dec
xchg
pusha
stc
mov
push
negl
daa
hlt
in
mov
int
and
or
cmpsl
and
and
inc
dec
movsb
out
add
mov
lahf
inc
loope
lock
roll
rolb
cmp
fwait
dec
shll
jne
add
adc
xchg
push
add
or
mov
ret
ret
xchg
pushf
movsb
jge
and
test
mov
cmpsl
sub
cltd
sbb
push
aas
movsl
fnstsw
fadds
pop
insb
repnz
sahf
xchg
cs
hlt
dec
ljmp
cwtl
cli
data16
jg
push
push
out
stos
jno
ljmp
repnz
mov
leave
cmpxchg
lahf
inc
mov
outsl
xor
setnp
bound
int
cltd
xchg
outsb
hlt
fldt
mov
imul
nop
cmp
inc
sub
cmc
jge
mov
sahf
sbb
pop
mov
out
add
stc
repz
jb
es
and
cmp
cli
pusha
pop
fnstenv
dec
sub
mov
mov
imul
xchg
sub
mov
insb
inc
inc
popf
xchg
pop
jbe
jbe
sbb
push
out
inc
lds
xchg
push
insb
sarb
scas
sub
or
pusha
push
push
push
mov
adc
in
shrl
inc
test
cld
add
subl
movsb
outsb
cmpsl
decb
add
scas
pop
nop
xchg
out
jle
or
adc
pop
jecxz
bound
ss
movsl
stos
jo
cmpsb
push
mov
mov
and
cmp
mov
loopne
sub
arpl
jl
daa
or
mov
mov
dec
pop
cmp
fnstcw
add
popa
mov
xor
cmc
repnz
mov
cmpsl
adc
xor
in
jbe
pop
mov
hlt
xchg
ret
and
mov
jg
mov
loope
xchg
or
fnstsw
shll
xchg
mov
test
jne
ljmp
sbb
lock
dec
pop
mov
test
adc
sbb
adc
cwtl
imul
and
push
ret
out
lret
adcl
pop
scas
aas
adc
ss
or
cltd
es
and
aas
mov
cmp
dec
add
xor
pop
inc
cmp
dec
jecxz
in
mov
outsb
movsb
jno
push
adc
inc
ljmp
xorb
ljmp
mov
lahf
aad
scas
inc
dec
xor
mov
xchg
rorl
adc
in
push
pop
xlat
jl
and
xlat
mov
cmp
inc
ljmp
in
pop
sbbb
mov
cmp
daa
out
push
dec
aad
push
stos
incb
out
mov
addr16
shll
out
xor
jbe
push
dec
add
out
cmp
lods
out
lret
mov
imul
fnstsw
inc
daa
ljmp
cmpsl
or
loopne
stos
in
xor
dec
in
fwait
lods
daa
push
out
pop
xor
lods
and
push
push
fstl
jbe
out
cld
xor
lock
jbe
add
call
dec
or
inc
sbb
push
ret
jmp
incb
lahf
and
jne
in
cmp
fldcw
fadds
mov
sbb
in
leave
adc
fidivs
sub
push
rcl
bound
and
sbb
push
lahf
repnz
cmp
fsub
iret
jecxz
jp
adc
addr16
pop
adc
fstl
aas
movsl
das
ficompl
pop
inc
xor
iret
inc
cmpsb
repz
aas
rcll
and
xor
ret
inc
jae
push
lods
mov
mov
dec
pusha
ljmp
ror
popf
sbb
ss
hlt
outsl
repz
push
pop
fdiv
cmc
inc
ljmp
loope
inc
inc
or
lret
jae
lahf
inc
add
cld
xchg
add
ja
mov
aad
jae
and
adc
nop
mov
cmp
xor
jg
xorl
jle
push
scas
mov
aad
sbb
mov
add
faddl
xchg
xor
mov
adc
add
repnz
sbb
pop
xchg
cmp
sub
addr16
lods
mov
xchg
loopne
sub
mov
adc
pop
pop
xchg
test
add
movsl
xor
add
lods
and
cmp
jne
test
inc
sbb
add
xlat
sub
mov
xorb
mov
sub
pop
into
cltd
pop
lcall
pusha
xor
fistps
mov
pop
add
inc
push
mov
xchg
aaa
fwait
dec
imul
fstpt
cmp
cmp
xor
xor
xlat
xchg
adc
inc
dec
and
scas
sub
xchg
sub
xchg
notb
mov
pushf
cmp
imul
add
insb
adc
push
jecxz
push
push
jmp
or
fistpll
arpl
xor
scas
mov
jbe
adc
cmpsl
adc
jne
push
xor
fsts
rcll
je
mov
jns
mov
jl
xchg
sub
imul
push
into
mov
mov
dec
mov
mov
out
ret
mov
or
or
or
sub
adc
stos
out
lods
mov
scas
rorb
das
jmp
arpl
jge
sbb
imul
into
int3
adc
sar
popf
inc
mov
clc
xor
inc
subl
pop
push
lods
popa
or
imull
dec
mov
cltd
out
std
cmp
je
or
popf
sub
cmpl
jge
mov
adcb
je
stc
repz
subl
popa
mov
es
out
adc
jns
scas
stos
sbb
inc
and
cmp
pop
mov
leave
iret
sbb
stc
enter
push
push
shrl
aam
pushf
dec
mov
jge
push
xchg
or
mov
lret
movsl
mov
xor
imull
mov
xchg
pop
int3
ds
call
cli
addb
push
mov
push
and
mov
cmp
add
adc
cmp
xchg
int
hlt
and
ret
mov
dec
mov
sbb
aad
jae
loope
dec
data16
jb
out
push
aaa
push
mov
fs
pop
ss
imul
orl
addr16
aaa
push
inc
ret
dec
ja
jno
mov
xor
push
icebp
add
inc
lea
test
cwtl
mov
test
aaa
push
aad
pop
jle
inc
std
pop
cltd
fs
cmp
push
daa
adc
jmp
xchg
pop
mov
jno
scas
paddq
int3
pop
pop
push
and
rcr
cld
rcrl
movsl
out
stc
xchg
jg
fnsave
and
mov
fcompl
jne
push
inc
fadd
ret
xchg
shll
fcmovnbe
cs
xorl
das
sahf
sub
jg
mov
repz
int3
push
push
pop
push
inc
xchg
xor
pop
cmp
cmpsb
xchg
movsb
pop
sbb
xchg
sahf
ja
push
push
mov
inc
aas
cvtps2pd
inc
je
ret
addb
sbb
addr16
cmc
ja
sbb
or
fsubrs
rol
add
sub
pushf
ljmp
xchg
dec
xor
xchg
and
stos
or
jl
movsb
je
xor
and
fwait
pop
xor
mov
test
pop
decb
repz
adc
push
fdivl
das
fisubrl
and
dec
push
mov
sti
fcoml
add
xor
push
sub
cmp
rcrl
in
xor
push
scas
pop
test
add
pop
sub
mov
lret
add
dec
dec
pop
and
adc
iret
sub
xchg
jb
cmpsb
repz
aam
loop
add
imul
insl
push
jp
test
pop
test
mov
dec
mov
push
pusha
stos
jecxz
packuswb
push
pop
js
stos
jne
andl
pop
push
fisubs
sub
lret
dec
test
imul
mov
xchg
jmp
cwtl
dec
jg
mov
or
addr16
repz
dec
push
and
jl
nop
dec
stc
shll
divl
cmp
push
popa
nop
ffreep
bound
jae
sub
push
sbb
push
js
dec
cli
xchg
or
fmulp
imul
int
xchg
add
stc
inc
testl
xchg
pop
add
lods
jl
in
cmp
lods
sti
pop
in
mov
xchg
cmc
pop
ljmp
lret
fsubs
jb
fnstenv
cmp
in
daa
movsb
mov
pusha
inc
iret
dec
or
lods
inc
std
mov
in
out
test
dec
mov
lret
inc
pushf
pop
push
jecxz
repnz
in
xchg
and
nop
jb
or
jbe
cwtl
ret
mov
outsb
sahf
imul
cmpsl
in
jne
and
repnz
pusha
into
rol
mov
jne
mov
shl
jl
cmp
add
mov
push
loope
repnz
sbb
sub
orl
js
xchg
pop
jle
inc
jecxz
cmp
mov
mov
in
sbb
inc
xor
xchg
inc
and
and
pop
jle
xchg
mov
ss
and
dec
cmp
jno
je
aad
sub
jg
sbb
loope
push
push
sbbb
testl
lret
add
pop
daa
jne
aad
jbe
push
lret
mov
lods
add
push
addr16
sahf
cltd
adc
je
cli
shrb
out
add
dec
pop
mov
std
cmp
rcll
mov
cmc
inc
aaa
add
enter
pushf
mov
std
scas
setno
and
clc
std
push
dec
mov
mov
add
cmp
out
dec
int
add
cwtl
int
sub
push
sub
jb
mov
lahf
fwait
adc
sub
and
sub
mov
outsl
faddl
cmp
and
cmp
add
inc
mov
cmc
inc
jbe
fsubp
jge
pop
sti
mov
inc
push
pop
cmp
shr
cmc
outsb
test
mov
jns
ds
xchg
mov
xchg
xor
out
sbb
arpl
cs
push
mov
repnz
pop
or
or
cld
mov
cli
jo
push
xchg
out
jl
filds
pop
dec
pushf
imul
lcall
push
xchg
fistl
icebp
out
jl
or
push
daa
fbstp
or
in
inc
sub
shll
adc
repnz
imul
or
pop
dec
shll
out
pop
aam
mov
jno
sti
mov
in
pop
jns
add
inc
mov
stos
aas
dec
or
inc
pushf
in
pop
js
sub
jmp
xchg
jg
push
popa
fbstp
inc
pop
call
or
je
int3
hlt
outsb
pop
lods
test
icebp
jno
mov
add
add
pop
push
div
or
jns
dec
mov
sbb
bnd
aad
adc
lcall
clc
xchg
movsl
pop
sbb
shl
cmp
fisttpll
lock
je
sub
je
iret
dec
sub
mov
sub
lea
xor
push
lret
jmp
fs
jle
push
pop
les
popf
jbe
lahf
lret
fldl
mov
mov
jp
push
xcrypt-ctr
cmpsl
pop
test
testl
dec
lods
inc
mov
wrmsr
arpl
add
push
xor
xchg
ljmp
movsb
jg
fsubp
mov
add
aaa
cmpsl
mov
mov
mov
int3
add
add
xor
dec
clc
rorl
je
jp
ret
jne
add
inc
in
xchg
xor
mov
outsb
fbld
lods
mov
cmp
or
outsl
mov
adc
sbb
ret
jp
adc
inc
ret
or
pusha
or
pop
cmpsb
mov
cmpsl
icebp
push
ret
dec
inc
ss
mov
in
fnstenv
lret
xor
inc
xor
push
jp
cli
rcrb
pop
imul
jge
aaa
jns
sbb
in
mov
push
xor
inc
xor
pop
adcl
mov
xor
push
push
aam
add
sbb
shll
pushf
mov
mov
movsl
mov
dec
aad
cmp
add
pop
pop
dec
adc
mov
xchg
popf
jle
cmp
add
add
pop
sbb
or
ja
and
out
pop
jp
jecxz
out
add
mov
xor
or
lods
lahf
pop
mov
rcr
popa
pop
repnz
push
test
icebp
adc
popf
cld
ja
imul
jmp
lea
inc
jg
and
dec
or
mov
ret
popf
andl
dec
popa
scas
dec
adc
and
mov
mov
outsb
mov
test
jmp
push
fcoms
cmc
dec
xor
push
js
sub
std
out
inc
mov
imul
jnp
rorl
mov
scas
and
cmp
and
sub
icebp
mov
in
gs
cmp
sbb
push
inc
sub
aaa
push
call
fwait
push
pop
xchg
mov
add
add
lods
les
out
ss
push
std
mov
mov
popf
call
push
fidivl
pop
icebp
cld
add
imul
jecxz
cwtl
inc
mov
pop
aas
mov
cmp
pop
lods
out
adc
or
lods
fs
push
rclb
jge
jg
inc
fnstsw
cmp
pop
jg
jmp
repz
push
mov
pop
adc
ja
push
arpl
cs
add
es
in
pop
aaa
aad
ret
std
outsb
pop
add
insb
sub
add
cmpl
lods
lds
rclb
and
fdivrl
push
mov
out
insl
add
idivb
and
into
bound
push
add
mov
pop
shll
stos
and
arpl
adcb
test
fnstenv
lret
sub
shl
pop
icebp
mov
xor
push
aas
jne
aas
jbe
mov
xor
sub
dec
push
pop
fmul
push
cmp
xor
nop
inc
pop
sbb
add
incl
mov
bound
mov
pusha
popa
cmp
decb
rorb
fdivl
xchg
bound
xchg
dec
cli
mov
add
mov
push
sarb
les
mov
lahf
and
sub
push
orl
sbb
mov
or
jmp
int
adc
nop
jne
popf
out
loopne
inc
xchg
xor
fcomps
cmp
daa
lcall
jmp
or
jmp
mov
movsl
insb
push
mov
lcall
out
outsb
dec
push
sahf
sbb
xchg
cmpsb
loope
cli
imul
sbb
leave
jge
xchg
movsl
jnp
mov
jmp
xchg
inc
lret
push
adc
jne
call
cmp
jne
shlb
loope
stos
xor
or
sti
pushf
pop
jmp
cmp
or
jo
push
xor
pop
xchg
mov
adc
in
push
and
faddl
popa
mov
push
in
sbb
jb
mov
mov
rcrl
cmpsl
in
jmp
cmp
push
cmp
out
inc
push
sahf
xchg
jmp
es
in
arpl
lret
rcrl
stos
sbb
xchg
lods
xor
sbb
mov
int
pop
cmp
bound
pop
out
cmpsl
pop
add
ret
xchg
leave
lods
inc
inc
xchg
repnz
jns
sub
je
pop
jo
sub
sbb
lea
out
adc
enter
jmp
push
sbb
inc
jae
cmp
sbb
mov
add
rcrb
inc
sub
imull
cmc
addr16
movsl
mov
fidivl
or
adc
mov
add
out
mov
rol
int3
mov
daa
sub
adc
insb
bound
lcall
jb
sbbb
scas
xchg
frstpm(287
adcb
out
sbb
mov
pop
push
test
sub
repz
add
sahf
mov
int3
sub
fistps
adc
aam
and
sar
aad
add
aas
sbb
inc
aas
pop
jl
dec
or
movsb
je
stos
mov
rorl
jg
cmp
cmp
dec
jmp
jmp
in
push
arpl
jae
pause
call
rorb
push
pop
adc
lahf
sbb
sub
out
and
or
shlb
inc
cmc
int3
or
test
mov
enter
outsb
pop
orb
sub
lds
aam
clc
and
stc
test
jle
or
sar
fs
push
mov
in
or
sub
shrl
loope
mov
ds
inc
arpl
jl
out
mov
dec
ljmp
cmpsl
cld
hlt
fstpt
dec
fs
mov
imul
lahf
mov
adc
inc
xchg
jne
cwtl
add
sbb
xchg
sub
mov
push
int3
mov
std
mov
mov
or
cmp
fs
loopne
and
pop
jnp
mov
repz
dec
fs
inc
jmp
pushf
insl
in
sbb
jle
sbb
add
cli
fwait
push
aas
push
pop
xlat
or
clc
in
pop
enter
jmp
lret
and
or
xchg
mov
jle
jle
jp
pop
sbb
mov
pop
loopew
mov
pop
mov
repz
add
rol
clc
cmp
sbb
cltd
rol
sub
xor
inc
pop
sub
and
pop
or
jl
test
mov
cld
push
popl
inc
mov
add
or
push
push
ljmp
xlat
aam
jmp
repnz
imul
sub
mov
decb
negb
cwtl
jle
das
stos
subl
xor
sti
xchg
jmp
xor
lahf
xor
jmp
mov
xchg
mov
sarl
inc
test
sbb
int
xlat
pusha
hlt
sti
mov
movsl
mov
dec
xor
arpl
mov
fwait
test
adc
mov
xchg
into
ljmp
lods
add
aam
pop
cmp
mov
dec
addr16
mov
mov
adc
jb
popf
jne
ret
push
pushf
mov
mov
aam
push
insb
clc
rcrl
xor
or
into
push
push
lcall
movsl
push
push
das
or
icebp
mov
jae
cmp
insl
rorl
out
xor
xchg
sti
sarl
out
pop
int
clc
repnz
mov
adc
sub
es
mov
aam
int
sbb
pop
dec
jne
sbb
mov
xor
lret
fs
adc
cmp
dec
mov
paddsb
jae
and
cld
shlb
fwait
xchg
mov
imul
fnsave
and
dec
add
add
dec
push
cmc
mov
jb
xor
xchg
lea
popa
mov
xchg
sbb
aam
sti
cli
mov
nop
jmp
rclb
pop
fdivl
add
xchg
insl
or
shrl
xchg
jle
std
in
mov
and
popf
fidivrs
mov
lret
scas
adc
sar
jl
pop
dec
xor
flds
outsl
test
mov
jae
xchg
cmpl
jbe
push
or
push
cmpsl
clc
dec
or
repnz
ds
stos
pop
scas
cmp
pop
sub
shll
in
mov
jp
ficompl
fs
mov
jns
ficoms
rcll
int
xchg
push
sbb
clc
out
ficoms
gs
push
stc
push
in
cld
fldl
rclb
add
nop
xor
xor
dec
and
aam
les
lcall
mov
dec
cmp
jnp
pop
pop
cmp
cli
push
pop
adc
pop
adc
or
pop
cli
rorl
aas
loope
icebp
cmp
popf
adc
push
inc
or
into
loopne
jl
sbb
xor
insl
sub
or
fisttpl
in
fisubl
cmpsb
aad
fimuls
mov
push
lods
push
lds
in
mov
cmc
loop
xchg
je
fstps
in
mov
xchg
push
jmp
stos
and
dec
mov
mov
pop
dec
pop
push
xor
xchg
mov
xor
sub
bound
paddusw
and
fdivrp
inc
cmc
bound
jne
sub
push
xor
arpl
leave
adc
jne
cmp
push
jne
cltd
adc
stc
cli
les
sar
loop
cwtl
dec
lret
lahf
mov
leave
mov
mov
xchg
icebp
fimuls
mov
fucomp
and
sbb
and
push
sbb
mov
sbb
jbe
psubsw
sbb
dec
fmull
stc
jg
xchg
test
xchg
lock
mov
adcb
pop
or
dec
sarb
mov
aaa
inc
fwait
shll
shll
pop
sub
jge
adc
xchg
jecxz
push
pusha
mov
test
pop
mov
xchg
or
call
pop
cmp
cli
and
cmp
push
mov
sub
jo
dec
fisttpl
or
sbb
fadds
mov
dec
js
loope
dec
and
push
aad
push
sbb
mov
push
rcrl
imul
lds
fmul
xor
popf
inc
push
add
aam
nop
sbb
cli
or
les
scas
decl
idiv
jbe
ljmp
filds
fmuls
into
test
leave
sbb
push
xchg
mov
pop
sbbl
hlt
or
lock
mov
das
mov
lods
fptan
lahf
addr16
out
sub
mov
jb
pop
mov
sub
icebp
aam
mov
xchg
mov
pop
pushf
sub
mov
dec
loop
xor
testl
shrl
xchg
fcmovne
mov
inc
jmp
add
ror
push
mov
push
scas
push
dec
jmp
jmp
pop
dec
andb
icebp
clc
mov
aam
xchg
and
out
pop
fdecstp
fidivs
std
jge
push
xchg
xchg
cmpsb
mov
movsl
test
adc
push
scas
ja
out
rclb
add
xor
movsb
adcb
mov
inc
pop
rorb
xchg
stos
int3
sbb
push
mov
das
movsl
push
mov
cmp
scas
xor
cmp
fists
shl
jnp
pop
popa
xor
frstors
add
jl
cltd
or
jle
scas
lods
or
ret
out
fimuls
rorb
ja
inc
or
jp
xlat
stos
enter
out
xor
inc
aam
test
pushf
addr16
testb
adc
and
fisubs
sub
xchg
mov
mov
loop
outsb
movsbl
into
inc
or
cwtl
inc
lds
shl
pop
sbb
jnp
mov
ds
popf
mov
loope
jp
mov
push
mov
cmpb
jl
clc
ss
xchg
sbb
ljmp
rorl
jmp
jge
adc
dec
pop
sbb
sbb
add
mov
aam
push
push
out
xchg
add
cld
pop
jl
cltd
in
test
jp
cmc
fmull
pop
push
mov
mov
jmp
adc
pop
adc
xlat
imull
xchg
mov
into
mov
arpl
xor
jo
jne
mov
mov
dec
jns
dec
out
mov
aad
sarb
mov
and
popf
dec
je
jb
or
daa
pop
imul
jo
bound
mov
cmp
outsb
adc
push
fwait
adc
mov
fbstp
mov
pop
in
jns
ss
mov
pop
ret
scas
pop
xor
rcl
or
jbe
xchg
mov
mov
scas
lret
xor
insb
imul
sbb
ljmp
xlat
fcoml
leave
lods
fsubrs
in
out
inc
dec
push
andl
fwait
inc
in
dec
push
dec
sahf
lret
loope
daa
cmpb
aaa
lret
mov
fs
addr16
jbe
lock
dec
cmp
out
add
and
mov
iret
lds
lds
fsubs
fadds
in
mov
lcall
push
adc
mov
loopne
push
call
in
jnp
push
jns
stos
stos
sbb
mov
inc
fistl
push
popf
adc
jge
inc
mov
mov
dec
adc
push
js
xor
or
aam
loop
dec
test
mov
icebp
mov
cmp
out
sub
cwtl
lock
add
cltd
add
sbb
bound
shr
adc
cmp
mov
sbb
or
psraw
insb
xor
push
and
pop
rolb
loop
add
push
jmp
pusha
cwtl
arpl
or
ljmp
mov
inc
jmp
adc
adc
sbbb
mov
mov
xchg
mov
jmp
and
xor
ja
jg
jp
xchg
iret
aad
ss
fstps
mov
aad
inc
in
jne
fbstp
pop
daa
lcall
aas
mov
push
push
jns
das
nop
pop
sbb
aad
test
pop
aas
or
or
jl
xchg
mov
fsubrp
pop
into
add
fcomps
dec
pop
mov
int
and
enter
sub
xor
daa
test
xor
fs
cmc
push
sub
cmp
jmp
jle
mov
addb
push
shll
mov
pop
cltd
idiv
jnp
jnp
mov
cmp
shll
sub
je
add
les
int3
or
push
fidivrl
fcoms
rcl
inc
cmp
lods
push
mov
test
dec
pop
stos
sbbb
insl
push
adc
je
inc
dec
orl
fcompl
rclb
shll
mov
enter
inc
test
hlt
inc
jle
loope
movsl
mov
stos
mov
mov
cli
icebp
dec
inc
into
pop
aad
mov
add
fidivrs
mov
sbb
xchg
lods
jb
fists
add
sub
dec
adc
xor
sub
stos
lret
xor
and
lret
daa
test
daa
bnd
out
mov
stc
shrl
lcall
aam
mov
or
ljmp
sbb
xor
sub
fcmovnb
pop
add
jecxz
cmp
data16
mov
push
cmp
in
cmp
mov
and
ret
lods
pop
adc
inc
rcl
mov
daa
das
ljmp
xor
cmp
out
es
or
pop
cmp
aad
sbb
neg
sar
int
movsb
inc
dec
or
inc
dec
rorb
cmpsb
imul
les
and
adc
xor
in
cmp
stos
fidivl
in
mov
adc
jns
call
data16
scas
sbb
outsb
lret
cmp
inc
adc
or
lcall
fsubs
and
stos
xor
or
sbb
out
fwait
push
xchg
imul
fstpl
movsb
cmp
sbb
pop
movsl
mov
mov
js
add
aas
xor
sbbl
cmpsl
dec
mov
jb
cmp
out
mov
loopne
rolb
lcall
push
cmpsb
sub
out
adc
mov
in
addr16
sbb
popf
or
mov
dec
repz
cltd
mov
xor
pushf
mov
insl
push
inc
icebp
sbb
mov
das
popa
sbb
xchg
xor
xor
mov
orb
scas
jp
dec
pop
fs
lock
in
add
cmpl
dec
lock
shll
inc
clc
jo
rolb
cli
in
mov
mov
pop
mov
and
cmp
out
lock
inc
lahf
cld
mov
cmpsl
xchg
xchg
orl
imul
pushf
dec
int
int3
fs
test
sub
fcompl
mov
cmp
insl
sub
icebp
fildll
jns
and
mov
sub
test
pop
test
call
and
out
push
or
popf
lds
imul
or
ror
sar
inc
idiv
push
loope
push
jne
push
fistl
mov
mov
ja
call
in
mov
fucom
insb
addr16
lahf
lds
sbb
dec
test
jl
push
pop
imul
call
jge
data16
or
dec
rcrl
cltd
push
outsb
mov
adc
xor
push
out
xchg
inc
sbbl
add
rorl
test
sub
push
test
fs
lea
jb
lods
fcoms
into
xchg
ljmp
out
fs
cmc
ds
in
dec
fcmovnbe
and
cwtl
inc
or
push
jo
imul
loopne
cli
adc
lret
mov
jecxz
jne
das
sti
je
outsb
cmp
cltd
dec
pop
jge
imul
add
or
ja
xchg
lds
jae
jns
mov
test
insb
sub
cmpsl
push
xchg
cmp
mov
mov
jge
leave
mov
ret
ds
push
ret
out
xor
jnp
das
lock
jg
pop
or
pop
inc
pop
lods
cld
sti
jl
sub
movsl
fstl
shlb
lock
add
xor
push
and
cltd
fwait
or
in
iret
cli
loop
sahf
mov
pcmpgtw
fdivr
fisttpll
sbb
mov
mov
and
imul
out
or
lock
inc
out
stos
call
js
add
jb
cmp
sbbb
adc
in
je
mov
in
cmp
rcll
scas
xchg
fcom
pop
jne
mov
adc
aas
gs
push
or
cwtl
aas
xchg
fwait
ss
nop
ja
push
cmpsb
pop
insl
mov
gs
cmp
or
addl
cmp
xor
adc
pop
xor
xchg
sbbl
das
mov
and
sti
push
repnz
xchg
xor
pop
loope
addr16
mov
mov
out
outsb
data16
popa
test
pop
out
dec
dec
pop
nop
jne
rorb
push
pop
mov
mov
or
test
xchg
jmp
pop
add
icebp
push
or
add
xchg
movsb
lods
push
add
xor
lahf
fxch
stos
dec
jb
push
call
insl
inc
push
mov
and
mov
in
fnsave
stos
rclb
dec
jns
push
mov
and
push
lods
fwait
repnz
dec
push
in
jl
add
mov
gs
xor
je
sbb
lret
repz
aas
mov
push
pop
dec
pop
adc
fnsave
jp
movl
fst
sub
xor
or
mov
nop
dec
dec
fiaddl
cmpsb
sub
sub
mov
mov
iret
sbb
and
jne
and
in
push
ss
mov
xchg
loop
outsl
stos
es
mov
mov
leave
jle
stc
xchg
out
sbb
loop
add
push
sti
xor
inc
cli
cmp
mov
jp
pop
push
jb
mov
dec
adc
mov
scas
iret
cld
insb
es
mov
sub
mov
repnz
pop
pop
push
ficompl
fnclex
ret
xor
ljmp
sbb
push
nop
call
dec
lods
je
push
fimull
enter
xchg
push
ljmp
negl
cmp
mov
xor
fs
fnstcw
lods
fsubl
push
data16
mov
sbb
jge
ret
xchg
hlt
cmp
jecxz
mov
mov
clc
push
lock
or
int
sub
inc
xchg
stos
xor
and
push
je
in
push
mov
cmp
and
mov
xchg
sbb
cld
adc
add
ffree
cli
cmpsb
out
add
inc
daa
jmp
arpl
rcll
mov
imul
push
sbb
xor
ja
gs
div
insl
lahf
mov
les
mov
add
add
repz
hlt
sbb
jg
lods
sahf
jo
inc
in
cmp
mov
mov
mov
pop
jo
lock
lret
sbb
es
jno
xchg
jg
shll
test
loop
xchg
add
lret
push
mov
pusha
hlt
aas
cmp
lds
jl
stc
push
adc
sbb
int
xchg
sbb
std
sub
dec
sub
sbb
jo
jge
pop
lea
xchg
xchg
xchg
imul
mov
shll
mov
and
mov
sbb
xchg
jae
lods
push
add
dec
nop
cmpsl
mov
ljmp
aad
jl
mov
test
dec
mov
and
mov
fwait
mov
pop
shlb
push
jp
ja
add
add
adc
pop
popf
stos
lea
test
filds
cmp
mov
xchg
xchg
test
pop
repnz
scas
into
jge
push
bound
lcall
aad
and
dec
insl
cmp
jbe
adcl
xor
jo
sbb
jmp
xchg
xchg
loopne
lods
insb
xor
addr16
popf
push
pop
int
std
or
or
jns
mov
jg
jnp
icebp
push
cwtl
sarb
ja
or
xor
push
sbb
repnz
pushf
add
dec
out
inc
push
mov
in
jmp
int3
add
jno
in
cli
jb
ds
jmp
xlat
call
stc
fsubl
decl
mov
sub
call
mov
orl
push
test
fs
es
fistps
pusha
sbb
dec
ss
pop
cmp
fdiv
int
inc
xchg
cmpsb
fldcw
sbb
dec
inc
sub
dec
push
inc
dec
sbb
pop
or
inc
pop
jnp
push
mov
mov
hlt
mov
sbb
pushf
push
sbb
into
pushf
subl
aas
lret
bound
inc
cmp
inc
stc
nop
and
in
repnz
rorb
push
leave
ss
mov
add
push
mov
xor
loope
push
ljmp
cld
fbld
imul
add
movaps
mov
push
arpl
mov
or
jmp
movsb
fldt
sub
mov
mov
movsb
adc
jg
mov
inc
es
and
rorb
jmp
sub
jmp
into
dec
push
out
icebp
pop
pop
pop
hlt
mov
xchg
fstpl
push
addb
popa
jle
movsb
stos
fisubs
out
aas
mov
ret
fisubrl
loopne
mov
xor
xchg
push
mov
cmp
and
cmc
call
and
push
and
adc
sbb
sub
or
ret
fwait
mov
pop
adcl
mov
stc
cmp
push
mov
push
in
jecxz
mov
xorl
jnp
int
pop
adc
add
clc
nop
dec
adc
ret
ss
sahf
push
shlb
cmp
in
fimull
mov
mov
dec
xor
sti
jb
pop
pop
fs
push
or
push
xor
fists
fsubr
mov
xchg
add
jbe
pop
jl
jae
jmp
cmpsb
cmp
sub
or
xchg
pop
je
or
or
lea
ds
bound
push
sbb
xor
movsb
or
jecxz
test
aaa
imul
movb
imulb
and
fwait
popa
mov
mov
dec
dec
xchg
push
add
xchg
mov
pop
push
scas
inc
cmp
fbld
in
push
push
sti
hlt
rcrb
mov
push
mov
sti
add
test
lret
std
outsb
paddw
aam
lea
call
es
iret
cltd
lret
fidivrl
adc
cmpsl
sub
sbb
insb
and
cmp
cmp
xor
lea
or
dec
jnp
addr16
dec
push
inc
dec
sbb
movsl
int
fstp
or
movsl
in
adc
repz
push
pop
rolb
mov
clc
xchg
push
jle
cli
lea
cmp
jae
cmp
mov
cwtl
dec
sahf
mov
and
in
xchg
mov
lods
sub
or
jbe
cmp
imul
popf
xor
shl
imul
adc
pusha
ficompl
xor
fcomps
sar
lret
mov
dec
xchg
cmp
in
push
jno
sub
cltd
mov
cmpsl
inc
add
les
and
push
adc
sub
ret
adc
jo
xchg
mov
ljmp
mov
fwait
int3
daa
mov
jmp
push
inc
dec
push
pop
mov
dec
push
jnp
loope
loop
ljmp
cmp
testb
sbb
and
addl
loope
push
xor
lock
mov
js
xlat
mov
add
sub
mov
lods
mov
mov
pop
add
mov
ds
cmp
ret
inc
dec
cld
idiv
mov
sti
outsl
jle
jae
hlt
mov
mov
pushf
cld
mov
pop
pop
jmp
rcrb
rcl
xchg
sbb
push
iret
jge
gs
int3
insl
test
sti
mov
xchg
mov
fcmovne
leave
pop
push
fisttps
push
leave
dec
popf
insl
addb
mov
xor
repz
mov
sub
mov
push
lods
fistpl
cwtl
icebp
imul
mov
gs
dec
jmp
lret
or
sub
sub
jns
push
xor
fldl
push
pop
loope
addl
enter
lods
ja
test
fwait
mov
loope
xor
pushl
outsb
fisttpll
loope
in
dec
lods
fdivrp
lea
jb
bound
popa
shrl
das
lods
jae
jns
test
mov
std
sbb
sub
mov
push
scas
cmpsb
jl
cmp
xor
add
pop
int3
shll
ret
inc
sbb
out
dec
fs
jne
cmpsl
lcall
subb
daa
xor
cwtl
or
inc
mov
push
lret
and
sub
mov
push
cmpb
fwait
icebp
sbb
je
jmp
movsb
iret
adc
cli
mov
mov
in
jbe
repnz
or
push
push
outsl
or
lret
add
push
sbb
enter
add
scas
pop
pop
pushf
sub
jge
push
push
in
pop
scas
push
adc
pop
jnp
push
out
shl
mov
push
addr16
popa
xchg
mov
sub
shll
pop
lcall
xlat
outsl
rclb
les
mov
adc
test
out
shlb
pop
add
inc
sbb
jmp
dec
cwtl
mov
fucomip
xlat
fucomi
nop
enter
dec
sti
sti
dec
and
mov
push
cmp
push
dec
fisttpll
cmpsl
dec
add
sbb
xor
inc
hlt
cmp
mull
movsl
jg
inc
data16
sbb
cmpsb
in
sbb
push
mov
and
lcall
jmp
pop
sub
mov
add
scas
scas
and
sub
push
rcrl
xchg
lock
iret
adc
shrb
xchg
dec
push
insl
or
sub
lock
incl
pop
push
jb
or
mov
mov
adc
adc
push
and
pop
lds
inc
push
push
std
push
mov
and
cmove
lcall
nopl
or
cli
int
jnp
dec
jns
scas
popw
test
out
mov
add
mov
mov
add
lea
or
mov
shrl
fcoml
pop
sbb
inc
imul
mov
ja
aad
rolb
fwait
andl
xor
and
mov
sub
adc
adc
insl
andb
fisubrs
add
sub
cmpsl
mov
aad
movsl
int3
fsubrs
mov
cmp
add
stos
xor
mov
sub
inc
mov
ficompl
fistpll
mov
pop
enter
jg
pop
sbb
out
push
adc
inc
mov
jg
cmp
int
ja
pushf
sbb
enter
rorb
add
fdivrl
sbb
and
push
fistpll
int3
xchg
pop
les
add
mov
idivb
jg
fwait
lcall
mov
and
xchg
addr16
mov
cs
and
jle
loopne
scas
cmpsl
popa
pop
adcb
pop
mov
add
iret
mov
jge
js
xchg
mov
mov
inc
sub
mov
fs
ljmp
mov
fs
mov
mov
jle
out
inc
fdivs
cmp
mov
imul
add
int3
sbb
mov
mov
sahf
ret
cmp
stos
push
pop
aad
orl
mov
ret
in
or
pop
shlb
mov
jg
push
xchg
jmp
jns
ficoms
xorl
mov
insl
movsb
xchg
scas
pop
xchg
inc
lock
int
pop
sbb
sbb
push
push
xor
xchg
sub
loope
push
ljmp
stos
push
inc
enter
mov
sti
pop
in
lcall
mul
int
xor
adc
inc
jge
aas
mov
pop
stc
adc
ret
repz
ds
inc
and
xor
loop
dec
mov
imul
repnz
repz
gs
fmulp
fadd
mov
fsts
in
stc
orb
ja
ret
mov
jae
lcall
adc
jecxz
push
lds
adc
cmpsb
or
mov
jmp
mov
mov
sbb
out
dec
idivb
test
cmc
retw
out
bswap
rorb
jb
jns
xorl
and
pop
aaa
scas
lock
jbe
sbb
mov
mov
xor
pop
jns
push
test
adc
push
shl
mov
pop
or
dec
push
leave
xchg
stc
xor
lock
sub
pushf
dec
cmp
in
scas
imul
mov
test
loope
and
pop
dec
stos
jb
push
iret
or
in
std
popf
xor
nop
and
mov
jne
jl
aam
cltd
pop
pop
sub
mov
sahf
or
in
hlt
and
xchg
inc
sti
lahf
sub
repz
xor
adc
subb
push
pop
call
js
cwtl
mov
in
cmc
lds
pop
pop
in
inc
dec
lret
jp
mov
cmpl
jmp
test
in
movsb
and
insb
iret
stc
decl
pop
stc
cmp
mov
cmp
rorl
shrb
lods
xor
add
sbb
popf
xor
cld
pop
xchg
daa
fldt
mov
adc
daa
pop
mov
out
test
jb
lds
dec
daa
call
mulb
gs
sti
sub
sahf
push
cmpsl
xlat
loope
jp
or
ja
mov
aad
ret
xor
cmpsl
clc
enter
sub
mov
leave
or
cli
push
inc
and
xchg
adc
pop
jno
cltd
dec
and
hlt
sub
nop
mov
push
and
ljmp
dec
fimuls
mov
movsl
test
pop
fwait
push
fstpt
and
notb
fmuls
add
jno
sahf
fcoml
and
or
arpl
xchg
shrb
test
add
and
mov
mov
and
add
cmp
inc
add
insl
jecxz
fs
sub
push
mov
addr16
xor
sub
push
adc
inc
arpl
fsts
cld
call
lock
sub
jp
stc
mov
loop
push
cwtl
outsl
jae
pop
mov
clc
testb
scas
sub
in
pop
cmpsl
int3
push
imul
lcall
and
test
fmulp
adcb
insl
xor
shlb
les
sub
push
ss
and
ret
adc
sbb
and
adc
stos
ds
xchg
repz
mov
sbb
enter
push
loop
movsb
insb
les
cmpsl
fcmovne
cmpsb
repnz
xchg
push
mov
scas
inc
inc
movl
sub
mov
imull
sub
das
fst
orl
fiadds
xchg
jo
adc
xchg
sub
test
mov
cmp
leave
paddb
testb
icebp
lods
iret
jne
pop
pop
pusha
sarl
pop
mov
negb
mov
or
jb
push
imul
fsubrl
fwait
in
and
and
dec
ds
arpl
cmp
sub
bnd
dec
mov
or
xchg
cmp
mov
adc
test
mov
xchg
popf
pusha
pusha
rolb
push
mov
add
sbb
dec
mov
lea
xor
cmp
xchg
push
cmp
enter
pop
bound
jmp
xorl
test
fiaddl
pop
mov
cmp
xchg
jg
mov
jae
xchg
xchg
lcall
lea
and
or
mov
into
pop
sbb
repnz
lods
pop
movb
jmp
sub
outsb
cli
int
adc
xchg
stc
mov
jecxz
cmp
sub
je
pop
cmp
icebp
gs
fnstcw
push
cmp
inc
adc
sub
fdivs
and
icebp
mov
lahf
push
int3
test
cmpl
insb
pop
push
std
adc
lods
inc
cld
pop
inc
fadds
push
dec
fisubrl
mov
cmp
cli
push
jne
fimull
mov
enter
xchg
jne
push
in
dec
pop
mov
xchg
push
dec
nop
xor
jl
sub
sbb
and
push
mov
mov
xchg
pop
xor
or
cltd
sbb
pop
test
push
inc
cmpsl
shr
ficomps
mov
imul
adc
popl
lahf
popf
dec
or
out
mov
ds
aam
and
push
pushf
fisttpll
subps
xchg
mov
fimuls
sbb
jno
call
filds
testb
and
cmp
pop
nop
je
mov
sbb
fildll
jne
mov
cmpsb
clc
shlb
imul
inc
dec
or
sti
sbb
sub
xor
adc
test
dec
repz
stos
add
jmp
scas
xor
sub
xchg
out
addr16
mov
inc
pop
adc
lcall
cmp
out
sti
repz
fldt
loop
mov
inc
jge
mov
cld
insb
xchg
cmc
jne
shlb
sub
inc
cmp
mov
sbb
jg
jbe
add
push
ljmp
in
pop
mov
sub
outsb
rclb
cvtps2pi
lea
fdivrs
or
insl
fldenv
int
xchg
mov
pop
orl
push
xchg
or
adc
sub
hlt
lahf
jge
outsl
or
dec
jg
adc
and
popa
jle
out
dec
jmp
mov
sub
shr
fxch
sarb
repnz
loope
jle
movsl
js
cmp
push
es
xchg
orb
add
jae
les
sahf
add
or
mov
clc
xchg
cmp
fsub
cmp
stos
aas
sub
mov
pop
push
mov
push
loope
ja
dec
sbb
pushf
outsb
xor
push
je
stmxcsr
xor
and
cmpsb
aad
fucomp
xor
sbb
fnsave
xchg
cs
aaa
jb
test
jbe
das
and
cltd
and
dec
cmp
cli
arpl
shrb
and
or
and
hlt
jo
lds
insb
imul
dec
add
ds
mov
in
mov
fbstp
mov
stos
dec
cmc
lods
stos
pop
pop
cld
adc
mov
jmp
fistl
scas
pop
xchg
sub
xor
jle
pop
xor
orb
xchg
or
push
dec
mov
sbb
sub
fadd
sbb
cld
pop
jp
mov
pop
adc
sub
pop
or
pusha
sub
iret
stc
mov
lods
fimull
inc
adc
jnp
mov
loope
lods
mov
popf
dec
jmp
dec
sahf
jno
aas
dec
push
mov
or
push
daa
push
ds
cmpl
add
inc
arpl
mov
or
xchg
mov
ljmp
dec
mov
lods
add
ret
hlt
fcos
in
xor
std
movsb
inc
cmp
add
bound
mov
mov
loop
decb
pop
fsts
push
fsubrl
xchg
aad
movsb
sti
lds
xchg
les
or
pop
mov
pushf
pop
stos
shrl
push
mov
pop
sbb
repnz
sti
test
fildl
repz
rorl
in
cmc
ja
and
je
mov
xchg
mov
mov
cwtl
cmpsb
jmp
xchg
xor
pop
stc
scas
xchg
or
in
vmaxss
mov
mov
mov
mov
ret
imul
loopne
add
ljmp
scas
push
xchg
enter
push
xchg
les
popf
or
xor
pop
push
rcll
xor
or
popa
mov
pop
fidivl
sti
xor
jae
lret
loopne
out
aam
imul
pop
cltd
push
adc
jbe
mov
mov
sub
xchg
shlb
cmpsl
jbe
ret
iret
mov
jecxz
pop
dec
test
add
cmc
stc
add
daa
lock
mov
jp
inc
mov
jb
jp
xor
sub
gs
scas
ljmp
jae
cld
in
jmp
jne
adc
imul
daa
cmp
pop
pop
jnp
test
clc
pop
push
addr16
mov
in
into
xchg
stc
outsl
inc
cmp
ljmp
and
jp
stos
push
or
aaa
ja
add
xchg
xchg
fidivrl
mov
mov
or
int3
mov
xchg
addr16
pop
ret
cli
push
orl
pop
decb
repz
pop
or
push
push
scas
xchg
pop
and
mov
dec
int
enter
mov
rcll
cmp
ja
insl
imulb
push
stos
jne
pop
jecxz
nop
pop
inc
dec
jp
test
push
test
ja
imul
inc
mov
loope
das
shrl
lret
adc
cwtl
mov
cmp
and
popf
add
out
leave
dec
ficompl
lods
negb
fnsave
fdivl
pop
lret
fisttpl
ret
mov
outsl
fsubs
xchg
insb
cltd
xchg
mov
je
pop
xchg
aad
push
add
and
xor
xchg
inc
test
inc
daa
jl
pop
fistpl
push
jne
out
add
jmp
xchg
adc
add
cmp
fs
sbb
jne
xor
and
push
in
push
pop
mov
add
push
cld
jnp
aad
psubw
insb
dec
push
push
jmp
sub
inc
lds
xchg
inc
outsl
rcl
iret
add
pop
push
mov
pop
adc
movsl
loop
cmp
or
inc
aaa
adc
mov
xchg
mov
xchg
mov
pop
mov
xchg
call
sbb
mov
andl
iret
adc
dec
lods
int3
lret
pop
xor
aad
mov
popl
fcoml
fiadds
test
pop
or
jne
out
icebp
push
int3
inc
push
and
call
adc
aas
out
aaa
jae
sub
mov
test
dec
jae
lods
dec
sbb
inc
stc
testb
repnz
stc
mov
dec
or
pop
inc
shll
cld
adc
and
pop
mov
xchg
loope
xor
xchg
cmc
test
cli
shl
mov
or
lret
inc
ja
pop
mov
rol
scas
xor
jns
icebp
cmp
add
jns
fmul
xchg
inc
jecxz
out
sub
fdivl
addr16
shl
std
mov
inc
cmp
js
push
jb
push
inc
add
inc
fidivs
xor
mov
inc
xor
fwait
dec
mulb
lods
sarb
pop
cmp
xchg
in
cli
popl
inc
mov
shl
stos
fyl2x
xchg
xchg
jne
loopne
pop
test
inc
pusha
es
leave
inc
rorl
cmp
pop
cmp
es
add
loope
shll
cmc
arpl
add
daa
cmp
lods
cmp
cmpb
ja
ret
xor
mov
jnp
cmp
or
test
pop
cld
call
sbb
ds
sbb
lods
addb
lds
dec
js
fimull
inc
lret
adc
adc
repnz
jae
or
mov
xchg
or
sarl
and
sub
push
fiaddl
adc
xchg
cli
jns
outsb
ficoms
and
test
push
icebp
xchg
jne
es
sbb
adc
mov
xor
jecxz
and
jns
bound
jmp
pushf
ret
push
aam
jmp
mov
bound
inc
icebp
insl
pop
xor
mov
pop
ljmp
push
xchg
testb
in
in
push
sti
divl
and
les
sbb
xchg
cmp
jbe
movsb
push
mov
mov
shlb
add
xchg
out
dec
imul
push
xor
jnp
xchg
roll
push
dec
shlb
subl
inc
lret
pop
xor
or
ret
popf
ds
push
int3
cmp
popf
ficomps
or
xchg
shlb
ret
jae
and
jne
push
out
xchg
push
mov
dec
xchg
jno
jmp
loop
stos
daa
sub
jmp
dec
mov
cwtl
fstpl
push
jge
adc
sbbl
pop
stc
sub
mov
push
sarb
mov
or
cmpsb
daa
shll
scas
pop
flds
add
push
add
sbb
mov
fdiv
adc
in
scas
jae
mov
sub
mov
add
xchg
mov
jle
xchg
in
xchg
sbb
inc
rorb
xchg
dec
iret
adcb
mov
pusha
jno
mov
dec
jp
xorb
gs
push
stos
xchg
dec
pop
aam
cmp
jge
mov
sub
enter
imul
dec
jae
cmp
testb
inc
mov
movsb
cmpsl
es
cmp
sti
stc
jbe
ds
out
add
dec
fistpll
test
mov
mov
fisubrs
mov
inc
sub
rolb
sub
adc
or
mov
mov
rcrl
fs
lret
lret
repnz
sub
call
pop
mov
dec
ljmp
aaa
add
sub
ja
xor
je
je
sbb
lock
push
test
push
loop
dec
adc
cmp
aaa
cli
dec
xor
push
add
daa
sbb
lods
pop
lds
lret
test
mov
pushf
add
mov
mov
adc
repz
sub
dec
mov
cmp
addr16
and
pushl
leave
fisttpll
shrl
push
out
sub
jo
ret
dec
fisubl
cmp
idivb
test
jb
lods
pop
pop
xchg
adc
inc
fwait
xor
das
add
jg
jmp
pop
shl
push
imul
cmp
movsb
jl
das
addb
loope
punpcklbw
mov
mov
out
fnsave
cwtl
jb
outsb
fs
addl
push
xor
pop
addr16
es
add
sbb
xchg
mov
and
rorb
mov
stos
jp
jno
jb
sbb
xor
sbb
hlt
jo
mov
push
or
aaa
cmp
outsb
js
cmp
add
std
pop
sbbl
sub
arpl
inc
xchg
xchg
jno
xor
hlt
mov
push
pop
gs
pop
mov
in
shrl
jbe
cld
sbb
movsb
movsl
ljmp
popa
jmp
sub
cmpsl
movsl
repnz
je
popa
xor
ljmp
lock
lret
incl
add
mov
push
cmp
std
push
repz
out
dec
push
lock
jge
out
inc
popf
and
sbb
xchg
cmp
imul
andl
inc
sub
ds
xor
cmpsb
pop
dec
mov
sbb
jecxz
cld
add
jno
dec
out
out
pop
sub
test
xor
mov
xor
pop
sub
dec
clc
fs
push
iret
test
xorl
stos
stos
jnp
insl
inc
js
dec
adcl
std
faddl
mov
cmpb
adcl
and
dec
cmp
add
jge
or
ja
les
lret
add
fs
bound
aaa
dec
sbb
jle
mov
cmpl
in
mov
add
mov
add
sub
pop
std
and
inc
or
ret
mov
jg
aam
push
stos
and
sub
pop
push
lahf
or
cmpsl
xlat
cmc
jmp
jge
add
fistpll
mov
xor
popf
int3
cld
push
mov
nop
xor
not
in
mov
inc
mov
mov
movb
push
adc
sets
xchg
xor
outsl
jl
add
mov
sbb
cmpl
adc
and
push
pop
pop
xchg
pusha
mov
out
stos
xchg
xchg
and
fiadds
repz
es
push
cld
push
nop
jns
cwtl
sub
dec
mov
enter
aad
bound
lea
mov
push
xor
xchg
push
adc
dec
jnp
fs
dec
in
jb
jmp
ja
fsubrs
mov
sub
nop
mov
add
das
xchg
and
or
xchg
ds
sbb
xor
cmp
sahf
mov
sbb
mov
mov
in
negl
xlat
sbb
idiv
push
xor
inc
ret
divl
nop
pop
inc
xchg
or
mov
clc
inc
mov
jmp
int3
pop
push
gs
mov
loope
sub
adc
adc
push
lcall
popf
mov
stos
test
fnstcw
mov
add
sarb
cmc
stc
push
push
bnd
popa
rsm
movsl
fisttps
pop
lea
mov
pop
testb
mov
dec
mov
es
cwtl
inc
mov
imul
ja
int3
mov
sub
stos
and
pop
repnz
lods
roll
ds
test
enter
mov
lea
outsb
pop
lea
and
xor
loope
lods
pop
cmp
mov
imul
daa
test
mov
mov
jae
shll
pop
adc
andl
pop
pop
xchg
dec
aad
jb
dec
pop
and
push
jl
test
call
xchg
cmp
cmp
mov
sub
test
mov
or
movsb
push
jo
jnp
sub
loopne
push
xor
jp
rorl
and
das
sbb
in
movsl
ss
in
jne
out
pop
cld
or
test
cs
pop
into
test
xchg
mov
or
mov
in
add
sbb
insb
mov
add
js
test
mov
imul
xchg
sbb
pop
cmp
into
mov
adc
fildll
aam
iret
jl
cmp
sbb
imul
das
cmp
push
or
ja
outsl
lret
fidivs
loope
sbb
and
test
or
mov
xchg
insl
out
scas
jns
jecxz
sbb
pushf
xchg
filds
leave
cmp
std
mov
push
push
push
jae
mov
call
stos
cmpsb
cmp
negb
jno
add
cmp
je
call
test
cmp
xchg
sar
shrl
inc
int
repnz
xorl
jp
je
stc
push
pop
xchg
mov
adc
mov
mov
jl
xor
inc
imul
lods
aas
sti
stc
loope
out
orb
dec
sbb
pop
xchg
mov
add
sbb
jg
xor
xor
js
pop
xor
dec
popf
dec
xchg
nop
sbb
inc
sub
sbb
int
inc
jl
inc
and
aam
in
lods
insl
jmp
sub
fsubrs
pushl
cmp
pushf
mov
sbb
pop
xor
mov
jne
add
jo
sbb
mov
rclb
insb
jle
dec
aaa
jae
es
movsb
cmp
push
sub
and
jnp
pushf
sbb
push
xor
sub
lcall
and
shrl
icebp
sti
inc
mov
cmp
insl
into
xchg
mov
loopne
stos
jp
push
xchg
repz
mov
mov
xchg
inc
lds
lods
filds
mov
push
mov
jge
aas
xor
adc
mov
adc
jg
arpl
nop
addr16
out
pop
inc
fwait
mov
lcall
jg
inc
mov
inc
cli
inc
sbb
adc
mov
pusha
pushf
add
and
icebp
adc
xor
and
push
mov
xor
dec
popa
aas
fmuls
sbb
jecxz
push
sti
mov
xchg
mov
out
lea
daa
stos
nop
in
insl
xor
nop
int3
inc
dec
fsubrl
add
jbe
push
jbe
or
aad
lock
addr16
mov
enter
xlat
push
push
addr16
inc
jle
mov
push
fcmovnbe
mov
jp
popf
outsb
add
out
ffree
push
jno
mov
xchg
je
pop
or
sbb
dec
dec
fsubrs
jmp
loopne
pop
mov
jl
xchg
shl
jle
adc
arpl
das
lods
lods
movsb
adc
push
int
sbb
inc
pop
out
sar
int3
mov
mov
xchg
xor
inc
ret
pop
fs
mov
push
inc
dec
mov
push
fnstsw
mov
subl
mov
jne
or
mov
add
mov
in
popa
aam
fcomip
fcmovnbe
sbb
cwtl
adcl
ljmp
jge
in
pop
push
and
or
xchg
jp
cmp
xor
es
in
or
aaa
out
cmc
adc
cmp
sarl
jb
bound
add
add
inc
je
aad
push
pop
push
repz
loope
cmpsb
and
xor
dec
arpl
or
sti
ljmp
pop
adc
movsl
mov
xorl
aaa
pushf
dec
mov
fimull
jmp
mov
mov
sub
stc
pop
push
mov
cs
and
lods
int3
lea
cmpsb
xchg
stos
test
cmp
xchg
inc
xor
mov
shlb
mov
sub
pop
sub
ljmp
and
dec
stos
stc
loope
sub
cmp
xchg
jne
gs
and
adc
pop
test
or
pop
sti
mov
jmp
stos
or
fmull
popf
mov
dec
cwtl
push
and
mov
xchg
add
out
fmuls
daa
sbb
ret
decb
addr16
cltd
js
in
stc
out
leave
addr16
dec
bound
lods
rclb
pop
pop
mov
pop
xchg
std
xchg
fsubrl
push
adc
lods
loop
mov
fmulp
lock
mov
out
aad
clc
mov
sbb
cmp
mov
dec
mov
rcrl
sbb
ljmp
andl
sub
out
or
inc
in
and
xor
sub
jns
mov
inc
and
insb
rcll
roll
in
out
and
push
cmc
push
loop
mov
popf
mov
fldcw
mov
xchg
ljmp
dec
pop
mov
cld
lret
or
mov
sbb
inc
pop
shll
jecxz
xor
fimuls
mov
mov
cltd
push
or
mov
mov
or
imul
xchg
mov
xlat
jo
xor
push
lods
mov
call
cld
and
stc
fstps
xchg
int3
and
mov
jb
cmpsb
jmp
xor
push
pusha
inc
fcomp
inc
and
jae
jae
xor
addr16
sti
das
std
pop
lcall
dec
iret
mov
xor
xor
fildl
pusha
sbb
dec
push
xlat
fmuls
push
and
sti
dec
imul
jns
push
add
lahf
mov
push
push
int
fistpl
jae
es
orb
xor
fwait
jp
mov
xchg
fstpl
mov
repnz
insb
push
fcom
data16
pop
daa
addl
mov
maskmovq
negl
sbb
addr16
mov
inc
xchg
addr16
in
test
dec
and
hlt
stos
cld
sbbl
test
imul
adc
mov
sub
fnstcw
mov
push
scas
lods
xchg
ja
pop
xlat
mov
js
xor
inc
mov
pop
fxch
sub
cmp
scas
and
scas
jae
mov
jb
imul
mov
mov
mov
add
mov
std
andl
add
lret
xchg
cmc
aam
insb
jmp
mov
mov
test
out
sahf
cmp
jle
xor
mov
mov
call
lds
stos
sub
jo
push
push
stos
sub
divb
jne
adc
fucomip
dec
mov
mov
daa
sahf
or
xchg
out
iret
es
fbstp
inc
dec
add
stc
mov
insb
ret
adc
add
out
push
inc
loopne
cli
or
fcmovu
dec
sarl
sub
nop
mov
dec
adc
jae
fsubl
xor
arpl
mov
cmp
mov
push
fucom
cwtl
mov
insl
mov
mov
cs
loope
mov
sbb
sub
push
cmp
jmp
jg
mov
aad
adc
cmpsb
outsl
mov
sub
shlb
addps
daa
mov
lret
shlb
sub
test
test
in
insl
cmp
mov
sbb
addr16
xchg
gs
push
sbb
and
mov
loop
inc
cmpsb
enter
pushw
scas
jg
adc
adc
xchg
insl
stos
cmp
pop
pop
sahf
xor
bound
jnp
jmp
fisttpll
inc
jmp
stc
and
dec
mov
jne
or
cmp
and
add
lahf
in
int
adc
sbb
push
ffree
test
jl
cli
popf
jbe
mov
loopne
xlat
ja
xor
insb
add
mov
lds
ja
push
repnz
repz
jle
mov
xchg
cli
push
mov
push
filds
mov
gs
mov
jnp
xor
and
xchg
adc
jecxz
sub
repz
pop
scas
ret
icebp
es
sbb
xchg
out
adc
and
push
and
jecxz
mov
shlb
cwtl
jg
xor
paddw
popa
test
cwtl
adc
pop
leave
push
xor
mov
push
mov
dec
out
cmp
push
push
cmp
dec
lods
mov
cmp
sub
es
jmp
fsubs
lea
aaa
adc
lcall
sti
adc
pop
adc
sub
pop
xchg
out
cld
sub
int3
jmp
sbb
mov
in
mov
cmp
cltd
cmc
test
push
sarb
jns
pop
test
in
push
adc
outsb
or
insb
pop
cmp
add
les
mov
cmp
stc
adc
mov
imul
dec
leave
cwtl
mov
xor
cmp
push
cli
lea
xor
mov
lahf
out
fmulp
and
sub
mov
or
cmp
in
aaa
loopne
in
rol
xlat
out
loope
pop
mov
sahf
lock
mov
in
ss
cmp
jno
cmp
push
inc
sub
clc
arpl
push
xchg
repnz
testb
pop
ret
xchg
push
push
sbb
mov
xchg
arpl
sub
lds
jne
xlat
sbb
push
mov
jno
pop
scas
sbb
xor
ficoms
and
adc
stc
popa
jmp
outsb
inc
dec
repnz
cmp
lret
push
das
dec
dec
xchg
inc
notl
enter
int3
xchg
add
mov
in
mov
sub
mov
imul
jae
nop
icebp
lret
mov
in
daa
jle
fadds
movsl
cmp
or
hlt
testl
dec
movsb
jecxz
and
sub
iret
push
orl
aad
jnp
xor
pop
add
shlw
mov
cmpsb
dec
cmpsb
mov
lret
mov
adc
aam
mov
gs
mov
les
inc
lret
mov
sub
mov
adc
jb
xchg
push
test
xor
cld
push
jl
mov
ljmp
arpl
mov
ds
test
and
imul
cs
mov
ds
fucom
jmp
sub
lea
ljmp
xchg
pop
sbb
stc
xlat
pop
adc
push
cmc
hlt
test
mov
ret
popa
lds
xchg
mov
or
ja
js
jns
std
cltd
inc
mov
xor
repnz
xor
fcom
push
shlb
shll
cli
aam
ss
out
into
sbb
cmpsb
dec
cmpsb
lahf
xchg
inc
test
lcall
jb
hlt
pop
cmpsl
shll
push
in
lods
cltd
ja
repz
or
inc
es
pop
adc
sbb
outsl
sbb
xor
xchg
out
xor
cmp
mov
mov
push
jnp
and
pop
adc
ret
inc
xchg
pop
and
stos
imulb
jl
jo
xchg
push
pop
mov
adc
aad
out
les
out
out
adc
push
hlt
xor
xor
adc
int
aam
jecxz
repnz
jno
outsb
xor
cmp
sub
cmp
lods
xlat
mov
dec
out
shll
mov
and
sarl
popf
cmp
pop
std
aad
push
cmp
imul
push
and
cmp
bound
sub
test
jle
mov
push
dec
es
das
mov
notb
push
imul
cltd
sub
jno
punpckhwd
out
add
loope
push
push
xor
sub
popf
jmp
sub
pop
dec
pop
xor
rclb
out
dec
push
jp
sub
pop
daa
frstor
sub
jp
fldt
or
push
js
shrl
cs
cmp
jge
or
or
dec
xchg
std
push
push
push
and
scas
cmp
jmp
imul
es
add
std
in
rcl
fnstcw
icebp
ret
scas
xchg
bound
cmpsb
and
scas
fistps
ret
ja
imul
imul
repz
dec
shll
xchg
loop
mov
cli
pop
insl
rcrb
mov
mov
aaa
cmpsl
adc
mov
negb
lds
dec
inc
lds
push
mov
rcr
clc
jge
loopne
push
jne
sahf
and
int3
cld
test
out
pushf
pop
xlat
out
addb
jge
pushf
xchg
xor
addr16
sahf
jb
lret
das
push
mov
nop
adc
pop
inc
mov
ret
sbb
mov
mov
push
pop
sbb
pop
std
addr16
xchg
loop
test
in
in
stos
fldt
rorb
sti
popa
popa
xchg
loopne
aam
out
mov
cmp
push
scas
mov
and
pop
jl
repnz
add
adc
cmpsb
imul
cli
mov
outsb
dec
stos
jmp
imul
mov
jp
lock
mov
jp
xor
push
cld
inc
int3
std
jecxz
mov
lods
mov
fcoml
pop
adc
cmp
mov
xor
xor
icebp
int
pop
jno
jo
jle
sarl
add
inc
out
xchg
in
jl
sbb
cmc
je
sub
xchg
movsl
mov
cmp
flds
adc
out
loope
out
cmp
adc
adc
hlt
jne
cmp
out
leave
mov
xor
jp
ds
xchg
mov
add
inc
lret
aas
push
sarb
fwait
and
fsubs
mov
sbb
push
in
outsl
xchg
cmpsb
arpl
addb
add
cmpsl
movsb
popa
scas
cli
and
mov
mov
dec
push
sub
clc
outsb
adc
sbb
rcrl
xor
aaa
lret
cmp
jno
fsubrl
or
fs
aaa
inc
pop
pop
leave
cmp
imul
xor
add
iret
out
xor
xchg
xlat
jae
xor
push
add
out
xor
leave
push
shl
xor
hlt
or
add
orl
mov
xlat
loopne
or
pop
dec
adc
ja
mov
lret
add
les
fs
xchg
jnp
sub
clc
mov
sub
cmp
data16
jmp
mov
cltd
dec
mov
mov
cmp
sbb
add
mov
mov
cmc
cli
sti
jl
xchg
jae
inc
jmp
js
test
sub
push
vmwrite
and
lods
xor
int3
mov
jmp
movsb
ds
or
sbb
dec
int3
sahf
mov
sub
int3
jb
cmp
push
cmpsl
mov
popa
pop
imul
add
stc
cmpsb
jo
leave
mov
jge
in
fxch
mov
cld
dec
jge
or
push
mov
test
rorl
lds
push
enter
sub
mov
psllq
pop
push
pusha
popf
rorb
out
jmp
arpl
push
cmp
outsl
subb
and
adc
iret
xor
mov
ds
add
and
dec
xchg
rol
test
dec
jae
fdiv
or
xor
movsl
test
mov
mov
sbb
fdiv
test
gs
jmp
fdivr
cmp
out
xor
sub
gs
addl
adc
adc
clc
jg
in
std
inc
fimuls
or
jno
add
adc
scas
stc
jg
fisubs
mov
mov
mov
cltd
lds
stos
add
and
mov
fcomi
movsb
inc
aas
sub
sbb
xor
sbb
dec
dec
rolb
mov
or
jg
and
mov
cwtl
ja
fistpll
xor
lcall
orl
mov
cmp
jae
iret
out
adcb
insl
repnz
or
ds
mov
lods
mov
push
aam
xchg
and
mov
call
repnz
mov
pushf
orb
cmpsl
insb
in
adc
std
dec
xor
mov
in
push
sbb
cmpsl
xchg
push
xchg
and
sbb
push
jmp
daa
push
lods
in
add
xchg
fadds
dec
fnsave
fmul
inc
and
push
cmp
jmp
add
mov
add
fxrstor
add
int3
cmp
inc
sti
mov
push
cli
shlb
xchg
xchg
xchg
out
lock
mov
xchg
mov
in
dec
xor
leave
out
outsl
xchg
pop
adc
add
sub
jmp
jmp
cmp
adc
xchg
aad
push
dec
mov
mov
or
das
sbb
jmp
movsl
nop
daa
in
es
scas
rcr
xchg
enter
pop
add
push
lahf
cmpb
cwtl
cmp
ficoml
jmp
fs
call
xor
nop
xchg
xor
inc
xchg
sub
test
mov
repnz
jo
gs
dec
into
sub
fcomps
xchg
mov
push
aad
test
test
xchg
js
jmp
dec
dec
sahf
xor
add
in
inc
and
scas
subb
add
pusha
pop
sbb
fcmovnbe
cmpb
std
sbb
add
jne
fidivs
xor
mov
lahf
iret
jns
loope
inc
mov
jns
into
sub
adc
fadds
lods
ret
push
nop
call
sbb
and
dec
adc
fisubrl
call
ret
xlat
mov
pushf
and
in
and
in
mov
gs
out
mov
mov
inc
sub
pop
fsub
mov
mov
cmp
stc
mov
pusha
lahf
fisubs
fcomp
push
push
xchg
mov
mov
outsb
add
cld
mov
movsb
mov
xor
or
jge
push
lock
jb
daa
mov
cwtl
divb
cmp
xor
jl
je
btc
jno
daa
pop
and
stos
jle
xchg
dec
fistl
mov
popf
bnd
int
xlat
lock
sbb
pop
inc
sahf
icebp
jno
mov
fwait
scas
add
pop
jns
sahf
lods
push
xchg
sbb
imul
push
xchg
push
dec
push
fsub
into
xchg
outsl
shlb
xchg
sti
aaa
fistps
sarl
xorb
jo
stos
jmp
int
dec
imul
fistps
mov
hlt
in
cld
pop
jge
test
pushf
jmp
inc
fldl
xchg
inc
add
mov
mov
inc
mov
sbb
aam
sub
lret
test
cld
lret
jg
jecxz
jnp
mov
add
enter
pop
ret
mov
add
inc
lcall
scas
insb
mov
sub
mov
push
adc
cwtl
and
hlt
cmp
add
movd
mov
fs
add
jg
aaa
cli
enter
inc
clc
lods
fwait
loop
nop
xor
std
sti
shll
jne
loope
jl
rolb
cmp
jno
mov
in
jmp
and
inc
icebp
add
jbe
shr
jmp
js
and
jbe
int3
add
jns
pop
out
mov
adc
inc
mov
push
int3
clc
pop
fnstsw
testl
jmp
addr16
dec
pushl
cltd
loope
push
lret
cs
jns
sbb
inc
push
fmul
rcrl
icebp
shl
jns
pop
cwtl
mov
add
cltd
push
dec
xchg
mov
sub
push
jle
mov
mov
jmp
mov
insl
pop
xchg
in
cmpsl
or
aad
jnp
xchg
ss
fimuls
cmc
ljmp
mov
inc
and
jno
mov
lret
sbb
arpl
add
cs
mov
lcall
mov
rorb
xchg
int
and
add
push
cs
sbb
ss
jb
dec
nop
adc
sahf
mov
push
repz
mov
xorb
or
push
dec
xor
sub
addr16
rcll
rclb
sti
cld
insb
xchg
movsb
pop
push
ja
pop
push
pop
dec
test
repz
bnd
pusha
sar
sbb
jne
sub
or
inc
mov
iret
std
add
push
push
cmp
cld
adc
cwtl
fsubrl
inc
push
lcall
cmpsl
sbbb
mov
xor
xor
mov
inc
and
sbb
inc
insl
jns,pn
jg
xchg
xchg
fucomi
or
lods
jg
fistl
mov
push
jne
shr
xchg
pop
addb
pop
mov
push
das
call
fdivrp
jle
lods
sub
in
test
ficoml
icebp
imul
cld
or
in
xor
mov
icebp
adc
clc
sbb
das
sbb
iret
jmp
sti
and
xor
mov
js
test
mov
pop
aam
dec
inc
sahf
cmp
mov
movsb
in
imul
adc
imul
push
push
sbb
inc
pop
xchg
outsl
sub
add
push
cmp
push
sbb
cwtl
pop
mov
les
lahf
xchg
aam
and
loop
lret
or
in
xchg
cmpsb
sbb
and
repz
pop
adc
lods
out
cmp
xchg
pop
push
push
mov
adc
jno
mov
movsl
mov
jg
add
push
adc
push
cmp
outsb
andb
mov
loopne
jo
dec
mov
jo
aad
movsb
jno
push
dec
xor
in
mov
nopl
xchg
enter
mov
add
sbb
xor
sahf
sbb
call
in
mov
into
or
insl
dec
out
mov
xor
andb
pop
roll
scas
pop
sub
movsb
or
mov
repnz
dec
inc
push
dec
aam
outsl
jg
push
je
aam
jae
sbb
add
pop
jmp
add
add
movsb
xlat
sub
pop
out
dec
hlt
mov
xor
lret
or
and
es
jl
sarl
mov
fstpt
push
insb
mov
aas
bound
inc
dec
inc
dec
and
scas
outsl
push
pop
sub
mov
mov
xchg
lret
imul
xchg
pop
sbb
fs
lock
aad
mov
lock
sub
cmpsl
sub
pop
sbb
leave
push
jno
or
add
dec
cs
push
aaa
sbb
insb
orb
rcrl
pop
mov
les
or
mov
outsb
leave
int3
add
mov
cmp
jbe
sbb
insl
mov
xor
lahf
insl
mov
xchg
sub
pop
iret
imul
add
inc
out
jp
test
add
hlt
jns
aam
mov
add
xchg
sub
sbb
xor
fistpl
sbb
jp
dec
cld
xchg
fistl
in
mov
in
imul
das
dec
inc
adc
add
mov
stos
out
ret
xchg
int3
add
or
mov
fcomps
rclb
push
ljmp
mov
loope
cltd
int3
xor
sub
adc
cmp
lcall
push
loop
repnz
and
pop
push
inc
test
mov
repnz
comiss
cmp
xchg
pop
push
pop
jp
icebp
fidivrs
xchg
imul
loopne
insl
out
or
or
sbbb
xor
push
xchg
imul
iret
xor
add
dec
hlt
sub
je
push
shlb
sahf
jae
ss
addr16
loope
loope
jo
dec
rorl
inc
inc
je
xor
mov
je
roll
pop
add
dec
jno
in
gs
sub
xlat
adc
xchg
dec
mov
push
aas
sbb
cmp
lret
jle
in
dec
cld
outsl
ljmp
cmp
mov
cld
aaa
xchg
in
shld
jmp
insb
mov
aam
lcall
and
push
push
xchg
mov
out
imul
stc
mov
cmp
clc
xor
xchg
lcall
dec
fmuls
mov
add
dec
inc
stc
lret
or
cmp
dec
push
decl
pop
int3
dec
loope
and
fcompl
lods
or
jp
sub
movsl
mov
pop
negl
arpl
jle
xor
in
out
pop
jns
pop
jmp
or
cmp
xlat
sbb
pop
test
mov
xor
shlb
popa
cmpsb
fwait
aam
sbb
mov
xchg
fistl
arpl
gs
orb
jbe
ret
fdivl
jns
lods
and
pop
sub
cwtl
inc
fimull
ds
pop
fisttpl
sbb
fistpll
add
jne
pop
mov
sub
sbb
hlt
shlb
rorb
test
mov
jge
or
pop
push
push
jo
jecxz
andl
clc
into
or
sub
adc
test
jge
test
dec
and
pop
adc
sahf
mov
xor
jg
and
outsl
das
pop
add
jae
mov
insb
repz
cmp
cmp
mov
push
xchg
push
inc
add
jnp
inc
sbb
pusha
repz
jb
mulb
sbb
dec
in
push
lea
shll
jl
push
add
jmp
loop
test
inc
pop
xchg
loopne
cmp
or
jecxz
cld
out
or
and
push
das
push
jns
lret
push
leave
loop
jbe
das
dec
and
or
pop
and
cmp
xor
inc
testb
inc
shrl
ja
mov
mov
and
push
cwtl
xchg
xor
mov
and
mov
mov
cmp
sahf
aam
xchg
add
mov
pop
movl
push
mov
das
aaa
sub
jns
mov
and
mov
hlt
xlat
or
imul
xchg
lret
fistl
add
pop
mov
push
nop
mov
nop
inc
arpl
fildl
cmpsb
dec
bound
stc
push
leave
aam
push
jae
adc
cs
inc
cmp
push
loop
popa
lock
mov
sub
mov
enter
or
arpl
test
int
and
nop
test
or
mov
bnd
inc
dec
rep
into
ja
ss
scas
or
repz
push
ds
lahf
or
jbe
cmp
rorb
insb
out
leave
xlat
inc
stos
mov
jo
cmp
roll
loopne
push
cwtl
orb
jg
dec
pop
fwait
push
mov
xor
or
xchg
add
out
clc
dec
aad
add
jl
mov
imul
pop
jl
fs
or
cltd
mov
mov
and
ds
jb
mov
lea
pop
pop
outsb
mov
fldcw
sti
push
scas
jp
add
jno
test
les
push
fbstp
xor
and
aas
rcr
imul
pusha
test
jle
negl
clc
cwtl
mov
sbb
sbb
add
ret
fidivs
cmp
push
pop
repnz
jne
mov
lahf
pop
orb
aaa
cld
lock
inc
dec
rcll
jmp
jnp
stos
and
adcl
xchg
xor
cmpsl
shlb
div
hlt
cs
scas
imul
sub
lods
sti
xor
push
jp
stc
fisubrs
fsubrl
xor
jmp
xchg
ja
mov
jo
xchg
fmuls
or
adc
lds
push
rorl
leave
cli
cmp
xchg
mov
sbb
add
push
add
shll
loop
and
mov
cmp
and
negl
repz
jmp
setl
sbb
pusha
shr
ja
push
push
sti
int
sarl
int3
addr16
push
mov
xchg
jmp
addb
ss
pop
mov
add
mov
mov
ljmp
fistl
mov
pop
or
outsb
and
shll
test
outsb
dec
cs
popf
jbe
dec
pop
or
roll
push
nop
dec
add
je
mov
xor
orb
ret
inc
push
mov
sbb
fcmovnbe
sbb
dec
jbe
sbb
pop
aam
xchg
das
sbb
or
dec
pop
add
movsb
lea
ret
enter
sbbl
pop
jmp
icebp
cmp
jmp
cmp
lcall
subl
cltd
xor
arpl
daa
andb
cwtl
add
sbb
cmp
dec
adc
mov
xor
pop
and
mov
jg
out
or
sbb
jl
test
mov
pop
mov
mov
mov
mov
ret
push
js
inc
mov
xchg
testb
movsb
push
sbb
jecxz
sbb
insl
setg
sub
push
add
cli
mov
pop
jae
jo
cmp
sbb
std
push
xchg
test
movsb
fwait
pop
js
ljmp
sub
mov
jbe
repz
roll
les
xchg
hlt
push
clc
push
test
mov
repz
adc
iret
insl
sub
adc
xor
ret
cmp
cld
adc
sub
sbb
loop,pt
test
dec
pop
cltd
mov
dec
sub
pop
loope
pushf
lods
cmp
out
hlt
movsl
mov
jae
pushf
push
test
mov
insb
test
mov
stc
add
mov
cmp
mov
adc
hlt
jg
mov
movsl
lcall
divb
das
push
mov
mov
popa
loopne
add
pop
lcall
adc
xchg
divb
xchg
rol
xor
lods
or
cmpsb
mov
fisttps
stos
mov
or
les
loop
jp
mov
cltd
scas
rcrb
mov
in
pop
inc
scas
jle
test
inc
sbbb
outsb
mov
arpl
dec
out
lcall
sub
sbbb
sbb
dec
xchg
popf
xchg
mov
out
mov
jo
mov
xchg
lods
addr16
sbb
shlb
sub
adc
inc
and
jp
mov
popf
mov
lcall
cwtl
outsb
xor
stos
xor
sub
mov
sti
mov
or
fwait
daa
in
mov
mov
adc
repnz
fnstcw
sbb
pop
dec
ja
es
xchg
gs
jge
test
cmpsb
cs
pop
das
inc
mov
sbb
mov
mov
mov
iret
xchg
aas
mov
imul
test
outsl
fcoml
cmc
inc
sbb
adc
push
aam
lock
cli
in
jae
js
imul
jb
jno
push
addb
sub
and
cli
sbbl
jo
les
ret
push
cmpsb
jne
mov
jo
cmp
sbb
xchg
pushf
clc
rcrl
aas
pop
xchg
aam
add
clc
xchg
and
dec
xlat
adc
das
jmp
mov
les
aas
inc
lret
jae
lret
rcrb
nop
pop
sti
push
fcomps
in
shlb
sub
xor
inc
xchg
sbb
inc
xor
mov
jb
jb
pop
inc
fcoml
add
dec
rol
das
xor
jmp
rcrl
sbb
fimull
es
sahf
ja
into
xchg
mov
std
push
pusha
dec
inc
pop
inc
das
add
fsts
scas
inc
iret
fmuls
jecxz
lods
mov
mov
push
andb
orl
rorb
jg
mov
mov
loop
fsts
pushf
cmp
popf
outsb
popf
jo
add
inc
sarl
and
push
jg
fsubrl
mov
adc
dec
push
pop
mov
sarl
ds
jl
and
xlat
jecxz
push
ret
clc
call
jecxz
cmpsl
dec
cmp
popfw
adc
rcrb
ds
in
xor
int3
jmp
sub
push
xchg
cmpsl
cwtl
enter
add
test
push
fwait
shrb
sbb
jl
add
scas
sar
out
lret
push
in
in
lahf
and
repnz
inc
mov
mov
adc
hlt
out
aaa
push
test
xchg
push
aad
or
pusha
idivb
and
fdivrl
or
jns
data16
push
adc
mov
test
jmp
jae
mov
push
lds
pushf
dec
sub
xchg
ds
arpl
jns
pop
and
ljmp
fnstsw
lods
fs
cmpsb
aas
std
stos
in
popf
sub
ret
js
add
mov
ljmp
push
aam
incl
sbb
mov
xchg
xor
and
rolb
das
jmp
imul
cmp
jl
push
inc
cltd
pusha
sub
xchg
add
sti
mov
sub
jb
out
imul
test
jmp
add
repnz
movb
mov
mov
adc
in
ss
jno
inc
subb
push
lds
aas
das
shll
inc
sub
hlt
dec
fdivs
mov
loopne
test
adc
nop
jb
push
sbb
jle
cmp
incl
jnp
mov
loope
and
mov
adc
mov
xor
in
fucomi
sbb
cwtl
fcompl
jp
cltd
dec
jnp
or
hlt
stos
repz
std
lods
xor
adc
insl
or
dec
je
js
insl
clc
mov
mov
fcmove
jl
or
fdivrl
pop
scas
fnstsw
enter
nop
imul
int
in
aad
push
negl
add
aam
and
sub
lret
xchg
jge
and
inc
popa
or
sub
mov
mov
test
movsb
es
xor
dec
jno
and
push
cmc
and
fcoml
cmc
out
ljmp
or
pop
pusha
mov
pushf
lcall
and
jae
mov
mov
out
inc
popf
cmpw
popa
or
std
push
aaa
lds
lahf
addr16
mov
pop
or
dec
adc
jmp
mov
mov
pop
call
push
xor
cmp
or
xchg
xlat
test
movsb
add
xchg
in
std
mov
jmp
addr16
mov
jge
xchg
repz
out
fwait
cltd
or
test
jmp
pop
dec
arpl
push
in
adc
jo
in
repnz
mov
mov
dec
fsubr
xor
cs
push
and
inc
iret
out
lahf
pop
in
add
popa
sarb
test
cmp
stos
ret
pop
sub
bound
mov
push
mov
shlb
bound
sbb
ljmp
lcallw
mov
outsl
mov
jae
inc
add
cmpsb
and
fcomps
iret
dec
mov
and
dec
cmc
cmp
cli
adc
subl
lcall
cli
aad
cmp
dec
into
cmp
add
jno
mov
ret
mov
popf
ss
testb
pop
xchg
orl
enter
shl
out
dec
rcrb
pusha
movq
pop
lret
mov
push
je
mov
or
xlat
outsb
pop
add
ret
mov
adc
aam
push
mov
rclb
pop
dec
cmpsb
mov
dec
dec
stos
pop
in
cmp
lods
add
add
mov
cltd
xor
push
in
std
lds
jl
jno
scas
or
icebp
sbb
stos
xor
je
pop
loopne
pop
or
rorb
inc
or
sbbb
jl
mov
mov
lds
mov
mov
movsb
cmp
stos
out
out
dec
inc
icebp
jb
mov
clc
sub
or
int3
dec
pop
mov
mov
adc
out
xchg
push
arpl
out
stc
fimull
and
mov
mov
cltd
push
jmp
xchg
sahf
cmp
inc
ds
inc
mov
fidivl
sbb
rcrb
xchg
or
sub
mov
scas
mov
dec
dec
mov
dec
jae
divb
pop
es
call
dec
jmp
jge
mov
push
xor
push
add
test
add
cmp
pop
inc
push
jl
in
inc
aas
sub
and
push
flds
push
lods
dec
call
mov
pushf
fcmovnu
xlat
ss
loope
int3
clc
ret
mov
sti
ss
notb
lcall
inc
sbb
push
fldcw
mov
add
xor
xchg
cmp
xor
sub
orb
stc
mov
sub
sub
jne
std
pop
push
and
cmpsl
hlt
xchg
testb
btr
stos
out
jbe
lret
push
pop
ss
sub
repz
jmp
in
mov
lret
sbb
std
stos
add
dec
mov
mov
aaa
stos
fwait
push
dec
test
adc
jae
mov
and
ret
imul
mov
push
mov
stos
or
xor
mov
sbb
xor
cmp
xchg
out
add
push
sbb
inc
out
daa
fwait
or
add
dec
aaa
mov
push
or
pop
cmpsb
sub
mov
lods
sahf
loope
xor
outsb
out
sbb
stos
cwtl
test
mov
lcall
cmp
or
stos
xchg
sub
xor
ficoms
sbb
outsb
or
hlt
mov
push
inc
orl
jo
xchg
sarl
in
sbb
jp
add
pop
stos
push
lock
fstps
push
sub
insl
pop
dec
or
int
fistl
jge
lahf
dec
push
adc
outsl
daa
enter
in
test
ljmp
ja
push
jne
dec
or
jg
out
loopne
fcoms
push
add
jae
push
mov
jb
rol
jl
add
xchg
xchg
xor
push
repnz
sahf
adcb
sub
xor
scas
int
into
pop
fwait
inc
mov
push
push
pushl
cmp
inc
add
data16
xor
mov
in
push
shrb
cmp
pushl
hlt
into
aas
jne
jne
sbb
inc
pop
in
arpl
pop
rcrl
pop
pop
pop
daa
and
xor
push
jbe
fadds
mov
loop
pop
cmp
inc
insb
jl
push
mov
popa
mov
enter
xchg
add
fiaddl
das
and
push
adc
ret
xor
mov
xor
sti
adc
jo
xor
lret
js
push
lds
and
stc
cwtl
cmp
or
or
mov
int
cltd
lods
adc
int3
lahf
adc
movsl
imul
xor
jmp
add
inc
jnp
mov
hlt
xchg
fisttpl
push
sbb
inc
or
pushf
sub
jnp
ss
jecxz
jns
or
fidivs
inc
gs
insb
loop
xorb
loop
push
mov
sti
pop
das
adc
jnp
jae
sbb
or
and
add
in
pop
cmp
lds
lods
cmpsl
push
and
call
ja
ret
cmp
mov
pusha
dec
data16
dec
add
aam
push
nop
jl
test
sahf
jns
cwtl
cmc
mov
or
pop
and
or
inc
pop
xchg
and
push
cs
jne
add
mov
push
xchg
fdivrl
loope
lret
adc
shlb
adc
lock
push
mov
push
or
je
sub
popf
sti
adc
pusha
adc
jmp
sbb
fcomi
push
jns
into
mov
repnz
sub
inc
adc
jp
aaa
xchg
testb
lcall
movsl
xchg
jo
mov
test
mov
rorb
cmp
stos
or
inc
aam
das
jl
push
jns
adc
sbb
ret
lods
test
xchg
pop
bnd
bound
aaa
adc
lea
mov
adcb
rcrl
mov
mov
inc
jbe
in
push
fstps
subl
mov
push
sub
mov
and
scas
int3
addr16
repnz
or
inc
sub
aam
js
fsqrt
cli
or
imul
shrl
pop
rcrb
mov
mov
mov
in
adc
jge
or
sub
or
and
pop
mov
xchg
xchg
ret
jbe
adc
xlat
jp
js
and
adc
jne
sahf
ss
dec
push
add
jp
insb
and
enter
mov
cmpb
mov
jle
mov
ss
jp
xor
cmpsl
dec
imul
adc
xor
inc
cmp
push
adc
fbstp
sbb
lds
sarb
aaa
adc
jl
lods
arpl
outsl
mov
jae
lea
scas
jbe
xchg
ret
pop
pop
mov
imul
lds
sahf
ficoms
fwait
shll
out
in
pop
add
sbb
test
std
push
inc
jno
js
inc
lcall
pusha
cmp
pop
mov
lret
jl
setl
inc
mov
loopne
mov
cmpb
stos
or
xchg
call
fcmovnu
test
dec
mov
push
adc
or
push
xor
xchg
in
push
movsl
sbb
shll
adc
in
push
jp
fs
fdiv
xchg
daa
mov
add
fcomip
in
pop
cwtl
andb
cmp
adc
mov
inc
sti
inc
mov
xchg
and
out
rolb
sub
jle
cli
cmp
loope
xchg
aaa
add
push
shrl
sahf
sar
jle
push
inc
lret
sbb
pusha
fmul
jge
mov
stos
xchg
jp
or
movsb
pop
pop
fmuls
mov
cmpsb
fcmovbe
mov
push
pop
mov
cmpsl
ficoml
stc
cmp
jl
or
flds
in
sbbl
mov
and
sub
mov
jge
mov
xchg
xchg
imul
push
cmpsb
imul
adc
fimull
fidivl
add
popa
outsb
fimuls
xchg
std
pop
lahf
xchg
cli
mov
jecxz
imul
inc
scas
out
push
sub
push
mov
aas
add
push
adc
mov
repnz
xchg
out
push
scas
aam
andl
or
and
jns
add
gs
fisubrs
xor
xchg
mov
ret
popf
popa
out
jbe
sub
or
shrl
fadds
mov
outsl
adc
popf
add
mov
test
mov
adc
inc
xor
out
testl
sahf
jbe
sub
loope
xor
inc
cmp
addr16
inc
cmp
sti
fs
lods
cmpsl
sub
sub
movl
sbb
and
or
xor
mov
daa
jo
dec
jo
sub
push
inc
and
hlt
or
les
mov
or
xchg
push
adc
inc
push
idiv
aam
xchg
mov
mov
lods
shll
cmp
imull
nop
cli
scas
in
decb
fisttpll
ficomps
mov
out
gs
or
lock
cmp
cmp
adc
aas
inc
lock
cmp
imul
xor
mov
mov
ret
dec
push
fs
xchg
xor
adc
push
mov
push
aaa
cmp
xor
xchg
mov
test
in
les
mov
mov
lods
jne,pt
in
dec
fistl
xor
std
test
xchg
pushl
sub
fistps
mov
sbb
stos
stos
add
mov
adc
add
mov
pop
or
stos
sbb
cmp
sbb
and
sub
test
fisttps
push
jge
daa
xor
jns
xchg
mov
mov
add
mov
push
mov
imul
lret
jns
roll
rolb
add
and
jno
icebp
lock
mov
xchg
mov
test
nop
fcmovne
enter
pop
repz
insl
jno
xchg
cmp
mov
lret
sub
cltd
xchg
out
cmp
sub
xor
mov
pop
inc
cld
mov
mov
adc
dec
add
fbstp
jg
xlat
rcl
mov
in
xchg
xchg
stos
shrb
pop
test
dec
ja
mov
mov
dec
xor
push
ljmp
je
push
and
stos
pop
mov
cmp
inc
repz
or
ret
dec
fistl
add
adc
lds
xor
pop
stc
mov
push
pushf
and
push
pop
push
scas
shl
cmpsl
sbb
pop
cs
push
test
repnz
pop
xchg
mov
lds
mov
xor
or
out
cs
adc
pop
pop
pop
lea
popf
push
aam
inc
sub
adc
notl
cmp
mov
mov
jae
in
test
or
int
add
outsb
pop
pop
add
pop
ja
mov
ret
stos
lret
sbb
movsl
push
stos
inc
xorb
pop
daa
push
sbb
inc
fidivl
and
inc
aaa
and
mov
out
push
scas
mov
fscale
xor
mov
mov
mov
lret
dec
adc
dec
call
jo
mov
mov
jmp
pushl
gs
xchg
ficoms
adc
mov
repz
jns
hlt
mov
lahf
mov
icebp
nop
cli
insl
push
bound
in
pushf
sub
dec
stos
xchg
mov
shrb
mov
inc
mov
je
dec
or
mov
push
xchg
push
fnstenv
fwait
scas
jle
adc
dec
jnp
mov
call
out
push
or
xchg
push
or
sub
xchg
sbb
adc
cmp
jnp
mov
push
dec
pop
push
cwtl
mov
loope
mov
jmp
xor
add
mov
mov
xor
cmpsb
mov
sub
fistps
iret
adc
adc
aaa
push
cwtl
add
enter
push
cmpsb
and
cmp
jae
and
stos
shll
movlps
std
repnz
xor
imul
jo
ret
cmpsb
jae
push
iret
fisttps
push
cld
scas
mov
xor
nop
test
cmpsl
add
sbb
aad
out
sub
imul
movsb
sti
or
in
dec
imul
decb
ss
insl
pushf
test
jg
fidivl
xor
shll
jmp
neg
stc
jecxz
nop
lock
mov
xor
push
ja
dec
and
sub
ror
lcall
mov
in
in
jne
enter
mov
mov
fxsave
jmp
mov
pop
adc
cli
fisubl
data16
cltd
pushf
push
mov
sahf
mov
mov
xchg
ret
das
js
imul
inc
jle
mov
repnz
mov
addr16
aad
jg
cs
xor
test
mov
jno
shll
add
inc
mov
push
aaa
or
inc
outsl
shll
push
jl
pop
or
add
mov
adc
aam
fmulp
addr16
fdivl
pop
mov
mov
cmp
adc
cmpsl
adc
xlat
jo
lret
lds
xchg
add
sbb
mov
pop
std
ljmp
es
jmp
dec
inc
fdivs
mov
cmc
inc
pop
jbe
xchg
push
push
repz
mov
push
adc
push
xor
ficoml
sub
push
mov
xor
mov
push
jno
jo
lods
bound
and
loope
fcmovnbe
sub
scas
fsubs
sbb
fucomp
outsl
xchg
loop
add
jmp
cmpsl
popf
and
mov
push
sti
dec
in
arpl
pop
adc
ds
inc
push
js
inc
add
ds
adc
test
push
inc
xchg
aam
scas
add
fstpt
dec
inc
sub
mov
bound
in
or
xchg
pop
mov
mov
nop
mov
and
sbb
nop
hlt
ja
fcomp
dec
pop
daa
xchg
es
leave
push
movsb
je
sbb
jmp
inc
push
mov
mov
in
enter
popa
call
sarb
aad
mov
loope
adc
xchg
jae
lea
and
leave
test
test
pop
jns
cmpsb
push
lret
cmp
pop
xchg
pop
add
pop
ljmp
dec
shl
out
jb
cmpsl
out
or
rorb
jno
adc
xor
mov
fs
and
sub
jle
ret
outsl
hlt
repnz
xor
movsb
dec
aad
ret
sub
adc
mov
xchg
mov
pop
pop
pop
and
cmp
pop
ja
push
std
lahf
xor
xorl
les
shrl
mov
inc
je
into
sarl
cmp
es
sub
mov
cld
outsb
mov
pop
dec
cmpsl
jle
aad
arpl
push
fxch
ss
inc
dec
sub
ror
pusha
push
in
into
adcb
fldt
aaa
negl
loopne
push
bound
push
cmp
xor
das
add
cmp
jg
int3
std
mov
pop
testb
and
lret
loopne
pcmpgtb
push
pop
vpand
std
xchg
jnp
jns
mov
dec
push
subl
cmpsb
mov
ret
stc
jne
push
push
loope
addr16
in
ja
in
lahf
imul
pop
out
cmpb
mov
ret
sub
add
sub
icebp
mov
mov
mov
jo,pt
leave
or
adc
mov
int3
xchg
sbb
fadds
negl
std
sub
mov
aad
cmp
xor
sbb
adc
hlt
adc
sbb
lea
ss
and
pop
add
outsl
xor
cmc
lcall
inc
or
inc
pop
dec
pop
inc
shlb
xlat
mov
cmp
fisttpl
ret
push
jo
stc
inc
push
and
ret
push
lcall
mov
movsb
dec
leave
in
adc
jb
sbb
mov
add
jle
test
test
jno
rorb
or
push
and
xor
andb
or
aas
in
ror
and
sub
add
pusha
scas
icebp
cli
push
push
out
sub
xlat
add
push
add
mov
jne
jne
and
jmp
cmc
clc
xchg
push
add
das
cltd
or
inc
cmc
cmp
xor
mov
adc
add
das
es
xor
movsl
add
xorb
repnz
aaa
repz
inc
pop
push
mov
xchg
cltd
es
cmp
sub
dec
pop
mov
movsl
mov
or
mov
mov
mov
scas
pop
imul
iret
jge
dec
jns
jo
adc
mov
cmp
inc
pop
rdmsr
testb
sub
pop
mov
outsl
jg
push
les
pusha
lret
cmpb
aam
add
add
pop
xor
daa
mov
movsb
loope
dec
mov
cmc
adc
ds
loopne
pop
hlt
xchg
inc
inc
outsl
pop
clc
jno
dec
lahf
mov
sahf
jbe
or
cld
mov
jl
xchg
idivl
or
in
sbb
push
cmp
test
stos
cmp
rcll
lcall
mov
jg
clc
push
pop
fidivrl
incl
and
mov
test
fldl
pop
imul
ret
insl
mov
push
gs
mov
call
or
xor
test
mov
faddl
pop
sub
imul
leave
fcoml
je
ja
push
mov
cltd
rorl
sbb
push
push
je
cltd
and
cmpb
lret
addb
xchg
push
jp
lret
mov
callw
aaa
in
das
ret
je
stos
out
push
dec
shlb
lds
dec
jmp
addr16
rcrb
dec
ret
aas
pop
imul
sub
mov
pop
add
lret
push
push
mov
pop
jmp
movsl
xor
sbb
mov
adc
ja
jmp
adc
cltd
loop
inc
add
and
ljmp
fimuls
hlt
popf
out
fstl
aad
mov
mov
xchg
inc
fs
jns
stc
pop
dec
xchg
loope
fdivrs
jbe,pn
out
adc
pusha
sub
lock
lret
adc
mov
cmp
scas
jle
xchg
fbstp
shll
add
cmp
jle
push
clc
mov
cmp
jecxz
mov
dec
and
aas
jne
fidivs
arpl
fldcw
adc
cli
pusha
shll
mov
dec
push
sub
pop
sbb
push
shrl
pop
jnp
popa
xlat
fsubrs
jmp
fwait
push
imul
push
mov
jbe
mov
sahf
mov
and
daa
jle
pop
fnsave
mov
mov
jno
fisubl
repnz
mov
pop
scas
bound
pop
int
xorb
mov
add
push
mov
ja
push
icebp
mov
jno
dec
xlat
dec
dec
or
int
add
jle
sahf
lret
or
push
fistpl
jae
testb
aaa
cmpsb
inc
out
cs
in
arpl
lcall
lea
dec
movsb
les
sub
jmp
scas
inc
dec
sub
cmp
jmp
in
jae
fsts
daa
cli
int
inc
loope
pop
cmp
add
xchg
outsb
arpl
cmp
fcmovnb
dec
loope
stc
ljmp
sub
lds
sub
sarl
arpl
ljmp
xor
in
add
mov
cmp
push
xor
cmp
lock
fs
jg
jl
leave
daa
movsb
jg
shrl
imul
cmpsl
mulb
xor
mov
insl
fnsave
shlb
xchg
outsb
push
test
dec
mov
add
std
shlb
sbb
mov
loop
cmpsb
dec
jne,pt
dec
dec
cs
inc
int3
idiv
mov
cs
sbb
pop
add
clc
ss
jp
ljmp
push
stc
mov
lods
mov
or
inc
push
sbb
cmp
sub
mov
add
mov
cli
jle
push
dec
jne
dec
add
adcb
fwait
inc
cmp
test
fcompl
jb
and
add
sbbb
in
xlat
fldcw
xchg
pusha
pop
push
sbb
jno
mov
push
ds
in
inc
shrb
sarb
jae
fcoms
out
in
cmp
icebp
sub
fcomip
mov
dec
push
pop
outsl
dec
xor
cmp
xchg
lret
adc
ret
push
mov
cwtl
fwait
pop
and
pop
jnp
in
cs
xchg
int3
jg
popa
mov
xor
push
bound
ds
shlb
cmc
insl
push
dec
jmp
cli
xchg
xchg
out
xchg
fisttps
push
lea
push
and
pop
cmpsb
pop
push
pop
sbb
cmp
mov
dec
enter
sahf
daa
add
pop
cmp
mov
test
push
mov
mov
ds
jb
call
subl
pop
sbb
out
fwait
mov
fs
sub
jns
js
mov
sub
popa
divl
pop
cmp
mov
mov
roll
ss
add
pushf
sbbb
mov
jmp
cs
adcb
fstps
inc
jmp
outsb
inc
stos
sbb
cmp
xor
lea
jne
rcll
into
test
xchg
clc
lcall
or
ljmp
inc
cmpsl
into
inc
pop
pop
mov
lret
aad
inc
sub
pop
es
mov
mov
adc
push
pop
aam
adc
daa
daa
in
sbb
cmp
xchg
inc
mov
sbb
test
mov
inc
orl
add
xor
arpl
sbb
xchg
cmp
ljmp
lods
aaa
lret
push
inc
push
lea
roll
scas
fdivs
mov
test
or
xor
push
into
mov
test
pop
and
cmp
inc
mov
mov
and
mov
dec
mov
movsl
testl
hlt
jae
sub
std
cmp
insl
mov
lret
cltd
jmp
push
nop
dec
stos
sub
push
mov
cmp
adc
inc
test
bound
sbb
pop
pop
ds
rolb
jns
scas
cmpsb
xchg
dec
clc
cli
push
std
popa
and
stos
into
mov
shl
xchg
xchg
fidivl
arpl
add
cli
push
rolb
adc
mov
dec
xchg
cltd
cs
out
adc
mov
push
xorl
sbb
out
lods
mov
push
stos
mov
gs
loop
hlt
aad
movsl
jne
ja
adc
pop
inc
inc
or
pop
into
cwtl
push
lahf
push
bound
jge
ljmp
ljmp
and
or
lahf
push
mov
add
in
mov
mov
aad
cmp
and
lret
aad
shll
mov
adc
add
dec
sbb
movsb
mov
xchg
pop
scas
mov
pop
loope
ffreep
inc
adc
test
es
or
pop
add
loop
xchg
loopne
mov
out
cmp
pop
sub
or
test
mov
call
daa
mov
daa
mov
nop
pop
iret
jle
mov
dec
cmp
jl
test
iret
std
xchg
int
shl
mov
xor
push
sti
stc
pop
cmp
add
mov
imul
mov
xlat
jae
scas
mov
lret
xor
call
data16
lret
jecxz
sti
gs
js
cmpsb
push
xchg
push
sub
ficoms
push
cld
xchg
dec
insb
cmpb
dec
adc
push
mov
pop
fcom
xchg
mov
fisubrs
and
or
jo
and
js
inc
pop
inc
pop
aaa
inc
pop
shlb
xor
sub
dec
mov
push
scas
into
add
xor
or
fisttpll
jae
mov
lret
add
dec
jae
orl
mov
das
pop
jne
fwait
lea
jecxz
mov
and
nop
mov
and
pop
les
dec
rol
pushf
mov
stos
fsubrl
sahf
sub
ret
fsubs
imul
out
gs
outsl
or
sahf
xchg
sub
dec
or
sub
ret
xchg
push
lahf
jb
fs
jae
cld
loopne
adc
or
sub
rcr
movsl
or
mov
idivb
enter
or
fisttpll
mov
jne
sbb
or
popf
push
mov
pop
pop
sbb
sub
mov
add
subb
cmp
hlt
pop
dec
outsl
add
repnz
lea
mov
ds
outsl
enter
push
xor
xchg
shlb
or
cld
or
xchg
mov
movsb
bound
adc
aam
repnz
xchg
cmc
xchg
clc
imul
mov
mov
inc
in
xor
adc
cmpsw
mov
cmp
stc
fistl
aas
sbb
jns
cmp
inc
rcll
push
fldcw
adc
sub
jno
lret
xor
adc
lock
inc
sub
cmpsl
mov
xor
loop
xor
xor
xor
jmp
sub
sbb
jle
rcrb
negb
subb
and
jne
push
mov
fxch
push
mov
and
cmp
mov
pop
mov
je
sbb
add
xor
pop
and
mov
pop
mov
cli
inc
mov
dec
jb
or
insb
out
out
out
aaa
jno
test
dec
adc
int
loope
aam
andl
stos
ret
je
out
mov
in
xor
inc
and
lcall
in
adc
adc
or
xchg
mov
lcall
loope
test
mov
mov
mov
fmull
pop
test
mov
mov
aam
cld
shl
pop
pop
bound
shl
ret
adcl
fiadds
fcomi
dec
mov
and
cmp
fsubrl
mov
mov
repnz
out
shr
sbb
xchg
jge
push
mov
push
repz
add
ret
ret
lds
mov
xchg
mov
lods
push
inc
inc
xor
jb
xchg
lods
fcmovnb
sub
jp
xor
fwait
leave
lea
inc
cld
sbbl
pop
xlat
gs
or
sbb
aaa
out
loope
stos
movb
sbb
rcr
dec
insb
mov
fistps
mov
sbb
fdivrl
push
lods
repz
or
fs
jp
cmp
mov
sahf
js
or
xchg
incl
das
in
mov
mov
adc
cmp
sti
pop
xchg
sti
jnp
lahf
mov
cld
pop
ret
xchg
pop
mov
pushf
mov
jg
rol
sub
sub
sbb
and
stc
jl
jecxz
imul
mov
clc
ret
jb
push
movsl
xorb
xchg
mov
loope
xchg
iret
inc
fidivs
adc
cmc
pop
mov
adc
orl
dec
pop
dec
add
push
movsb
inc
xorb
jecxz
pop
wrmsr
jecxz
test
add
cltd
xor
cli
das
xor
lea
xchg
dec
adc
iret
cltd
jge
daa
loopne
lea
ret
fldl
adc
icebp
inc
int
inc
mov
mov
aas
mov
cmp
ja
pop
mov
mov
shrb
jbe
add
mov
in
xor
cmp
sbb
mov
pop
in
outsb
sub
dec
call
jbe
mov
test
sti
daa
andb
popa
outsl
pop
sub
das
dec
scas
add
sbb
push
mov
jge
cmp
dec
ss
push
cmp
xor
in
fnsave
jl
shll
jnp
pop
fadds
mov
aam
sbb
sbb
sarb
xchg
push
or
xchg
out
ljmp
clc
mov
push
add
dec
jo
lahf
lahf
sub
and
xchg
aad
inc
push
mov
clc
ds
cli
inc
fidivl
dec
add
sbb
sub
mov
xorl
xchg
in
jae
bnd
adc
sub
cmp
pop
arpl
cmpsb
clc
mov
mov
dec
cmp
xchg
mov
cmp
push
popf
scas
adc
and
je
iret
lea
xor
adc
lods
jg
push
cmpsb
fcomps
push
jg
shld
fxch
xchg
filds
stos
jbe
in
int3
xor
std
sub
fisubs
std
sub
shll
and
dec
lea
or
int3
mov
dec
clc
repnz
add
sub
fbstp
jp
inc
sahf
fs
int3
cmp
and
push
pusha
and
cs
push
sub
or
mov
adc
sub
in
in
fwait
cli
fisttpll
xor
mov
dec
scas
sub
inc
fsubrl
aas
add
xchg
out
xor
stos
jl
mov
fdivrl
into
in
cs
cmovl
xorb
fs
ja
lcall
outsl
add
mov
dec
dec
in
cld
and
test
iret
shlb
int
pop
ds
ret
hlt
call
inc
les
xchg
stc
jl
mov
imul
sub
fsts
icebp
cmp
inc
xchg
dec
sbb
push
test
jne
xchg
outsb
cmp
into
cmp
add
or
shlb
push
mov
mov
std
cmp
fimuls
pop
test
mov
pusha
fisttps
ja
mov
shlb
scas
pop
ljmp
outsb
pushf
in
cmp
arpl
cmp
sub
push
mov
cmpsl
xor
dec
mov
bound
xor
sub
inc
outsb
fsubrl
cld
sbb
inc
repnz
data16
push
fdivrs
cmp
iret
add
lcall
or
adc
adc
pop
lcall
push
sbb
inc
jne
es
pusha
sub
adc
mov
seto
hlt
and
jle
shrb
mov
cmp
or
loope
scas
loope
or
jbe
mov
xchg
fnstenv
pop
mov
inc
lock
cli
lret
jno
fisttps
jb
arpl
mov
movsb
ljmp
sarl
int
loope
insl
movlps
repnz
dec
lds
push
nop
lret
call
mov
vsqrtss
xor
fisubl
sahf
int
pop
mov
movsl
pop
push
fcoml
out
pushf
sub
into
sub
dec
movsl
push
in
daa
and
rcll
and
cmp
mov
pop
cmpsb
mov
loope
or
scas
negb
daa
aas
out
mov
aaa
lret
pop
adc
xlat
and
jl
ljmp
sti
into
hlt
sub
or
fcmovu
imul
mov
jl
clc
aaa
sti
sbb
xchg
inc
es
mov
aam
call
icebp
adcl
out
mov
std
mov
pusha
push
or
outsl
or
ss
cmp
mov
cli
mov
bnd
inc
pushf
and
push
imul
inc
popa
ja
mov
cmp
loope
sbb
scas
pop
sti
lods
sub
lahf
or
pop
fs
sub
xchg
push
dec
adc
xor
pop
and
dec
lds
hlt
cli
inc
xchg
pop
test
xchg
mov
fnstcw
xchg
fbstp
repnz
adc
lock
and
movsb
fsubr
push
adc
add
cs
pop
cmp
inc
addl
sbb
aaa
cwtl
daa
xchg
dec
stos
mov
cmpsb
addb
jle
fadd
cld
adc
push
add
test
ss
inc
lcall
das
mov
mov
in
mov
add
sbb
sub
adc
stc
push
dec
sbbl
in
in
sbb
xor
pop
add
ja
sarl
mov
in
pop
push
div
ficompl
std
sbb
mov
pusha
es
lcall
sub
fcompl
add
repz
sbb
jno
aas
sbb
push
sub
outsl
mov
and
mov
xor
mov
out
xor
xchg
pop
inc
in
pop
ret
inc
and
cld
and
cli
xchg
sbb
rcr
enter
jns
cwtl
push
outsl
in
addl
test
jo
mov
lret
mov
sbb
std
lret
and
mov
mov
lahf
loopne
pop
or
pop
push
insb
mov
push
and
mov
ss
dec
popa
cwtl
repz
into
xchg
sbb
fnstcw
lahf
xchg
pop
and
jle
inc
sbb
rcrl
xor
cmc
scas
mov
orb
pop
jne
shlb
sbb
pop
xchg
push
cmp
sub
pop
cmp
or
adc
push
shll
out
arpl
inc
popf
sbb
movsb
js
mov
sbb
mov
sbb
mov
or
xchg
push
test
and
out
and
test
xor
aas
adc
into
aam
hlt
push
mov
cmpsb
leave
add
leave
or
out
movsl
mov
adc
cld
ds
cmpsl
cli
dec
xor
sbb
xor
flds
movswl
jno
pushl
sub
sti
frndint
add
es
cld
insl
mov
ds
or
cltd
push
sbb
xchg
xchg
or
popf
lock
clc
jle
test
fists
xchg
sahf
fiadds
xor
jne
jne
in
dec
iret
cmp
dec
cmpsb
jns
fucom
in
sbb
mov
fs
push
andl
cmc
sbb
jno
dec
jp
push
jno
bound
scas
inc
fsubrl
mov
repnz
dec
popa
push
pop
push
jge
lcall
pop
push
enter
xchg
xor
adc
movswl
adc
cmc
mov
inc
mov
or
or
cmpsl
sub
in
mov
xor
jle
lret
je
pop
out
sbb
div
dec
negl
ljmp
daa
inc
addb
mov
jle
popf
sub
or
fldenv
jle
or
add
or
sub
mov
das
inc
jge
aad
cmp
out
adc
cli
xchg
sub
mov
push
sub
mov
into
jl
daa
lret
dec
test
imul
je
stos
xlat
sub
dec
fadds
cmpsl
add
stos
fistpl
in
xor
not
fisubl
jle
mov
test
pushf
adc
pop
or
push
dec
sub
inc
aaa
dec
punpckhbw
in
and
sbb
inc
bound
das
std
outsb
cld
push
jnp
cmpsl
jbe
shll
or
repnz
negb
cld
loop
xchg
pop
add
adc
pop
cmp
jbe
push
and
aad
in
add
lret
cmp
aad
ss
mov
cmp
rcrl
sbb
loope
sub
adc
into
negl
dec
sbb
sbb
sar
dec
fistl
dec
and
and
insl
sub
stc
inc
mov
fcos
aas
xchg
out
sbb
lods
push
xchg
ljmp
clc
push
jne
adc
inc
push
cs
adc
xchg
xchg
leave
shl
sti
sub
aaa
insb
xchg
nop
inc
cmp
shll
lock
adc
arpl
popf
jmp
repz
aam
xor
xor
add
popa
adc
in
lcall
hlt
lcall
fistps
out
inc
loope
ljmp
sbb
std
mov
add
dec
cwtl
test
lea
or
inc
jo
jl
insb
je
or
sbb
imul
sub
push
mov
jp
aam
adc
pop
out
push
add
enter
pushf
jmp
bound
pop
movaps
pop
gs
inc
or
mov
insb
mov
mov
jne
mov
test
push
jb
ficompl
adc
lret
ljmp
movsb
xlat
cmc
cmpsb
imul
push
and
dec
int3
cs
cltd
cmp
mov
movsl
xchg
pop
int3
pop
dec
jb
fimull
hlt
call
std
cwtl
mov
cmp
sbbb
loopne
sbb
dec
rcl
adc
adc
rep
jae
pop
fwait
and
mov
clc
inc
push
fildl
cltd
sbb
cmp
dec
push
icebp
and
jg
cwtl
adc
int3
push
in
idivl
repz
adc
outsl
jge
xchg
cltd
mov
pop
dec
loop
sti
push
leave
scas
inc
sub
sub
negl
dec
les
sub
push
lcall
sub
sub
outsb
add
lods
stos
in
test
push
mov
mov
ret
jnp
loope
or
lret
cli
inc
in
lcall
mov
pop
fadds
xor
ss
stos
inc
adc
fisubs
dec
adc
in
adc
or
xchg
sar
cmpl
push
dec
or
or
adc
test
xor
sahf
hlt
and
repz
repnz
add
push
push
and
cmc
mov
jl
jnp
insl
lods
push
test
jmp
shrb
inc
insb
mov
sub
mov
mov
rcl
imul
push
xor
xchg
push
out
sub
cmp
pop
stc
test
pop
xchg
fldenv
mov
mov
or
push
orb
mov
negb
cmp
imul
hlt
mov
wbinvd
fdivrl
popa
outsb
cmp
pusha
pushf
xlat
inc
jle
insl
nop
aad
jp
or
gs
or
mov
jae
sub
frstor
lahf
sbb
aaa
jecxz
imul
imul
nopl
inc
insb
loopne
sbb
outsl
imul
push
lods
dec
stc
push
pop
out
or
and
and
mov
adc
dec
adc
into
xchg
ljmp
jg
sbb
lods
and
dec
cli
or
cmp
mov
nop
push
in
cmpsl
and
cmp
lds
add
test
sbb
lds
mov
sub
loope
push
jmp
fidivrs
leave
push
cwtl
mov
and
mov
push
sti
sbb
push
movl
xchg
cmc
stos
cmp
popf
inc
imul
cmp
mov
jmp
sub
jmp
in
xchg
retw
addr16
and
cld
cmp
mov
mov
test
fs
leave
sbb
movsl
outsb
loope
mov
stc
jae
repnz
adc
pop
xchg
mov
mov
lock
inc
enter
sbb
push
mov
xchg
inc
push
inc
sub
subb
and
movsl
lods
add
mov
lret
or
add
push
mov
repz
divb
inc
int3
push
ret
inc
outsl
dec
pop
enter
dec
call
fiadds
pop
pop
imul
cmp
mov
mov
mov
into
subb
inc
adc
mov
mov
sub
push
mov
popf
mov
in
push
in
cmp
pusha
test
push
cli
fisttpl
and
rclb
sub
mov
sub
push
nop
mov
insl
test
dec
test
cmp
js
std
dec
pop
mov
pop
pop
mov
mov
in
cmp
push
or
rcr
fs
pop
xchg
pusha
add
nop
inc
stc
adc
mov
adc
cmp
loop
adc
xchg
xor
scas
mov
pop
add
sub
dec
pop
fwait
mov
jge
inc
pop
dec
sub
fs
jmp
sub
iret
cmpsl
aad
xor
sbb
push
enter
fdivl
iret
imul
mov
adc
dec
pop
out
cmp
and
aam
push
scas
repz
insl
pop
movsl
jo
and
mov
inc
xchg
xor
jle
iret
pushl
xor
fcompl
push
sub
mov
push
fidivrl
fwait
leave
ds
jno
sahf
jg
or
and
and
ficoms
xor
divl
xor
lods
inc
xchg
lret
or
movsl
jno
mov
xor
jmp
mov
xchg
dec
ljmp
jle
and
xor
enter
sahf
js
pop
push
sub
lea
jg
insb
or
adc
push
mov
sbb
pop
or
dec
dec
into
jnp
xchg
adc
and
cli
xor
xchg
mov
in
incl
jecxz
ja
add
jge
sahf
clc
pop
out
jl
in
loope
data16
add
ds
jne
stos
adc
xchg
pop
sub
aam
imul
in
dec
mov
hlt
in
mov
adc
cmp
cltd
in
out
test
mov
push
push
and
lods
inc
cmp
xchg
dec
sti
cmp
add
mov
push
cmpsl
icebp
sub
lret
test
ror
out
adc
mov
imul
fisttpl
cmp
push
cmp
adc
mov
aaa
mov
ret
dec
enter
or
jo
in
add
gs
std
sahf
jl
cmp
pop
mov
pop
sbb
mov
je
in
dec
loope
push
hlt
xchg
je
test
sbb
jne
add
ljmp
cmp
pop
jge
pop
test
out
jle
mov
and
and
mov
jne
iret
sub
mov
js
mov
test
clc
jg
push
mov
jnp
notb
clc
lret
stos
test
pop
lret
xchg
mov
xchg
mov
in
dec
mov
mov
cmp
or
mov
inc
push
adc
xor
mov
or
lcall
pop
jmp
mov
mov
xchg
dec
fisubl
inc
call
push
mov
mov
sbb
or
paddusb
mov
fcmovb
cmp
push
icebp
cmp
sub
mov
daa
ret
xchg
pushf
scas
cmp
call
ficomps
xor
scas
cmp
jp
aas
lcall
lds
pop
inc
into
cli
leave
ja
push
inc
push
mov
mov
or
sub
int
sub
das
dec
xor
sbb
test
ljmp
jle
iret
adc
cmp
hlt
ljmp
or
and
enter
sahf
adc
adc
inc
xchg
outsl
stos
rep
xorl
pop
std
fwait
adc
gs
cmp
and
sahf
shrb
mov
adc
cld
test
mov
inc
imul
das
adc
scas
cli
ret
orl
pop
data16
sahf
fadds
or
add
inc
xchg
iret
stos
jp
std
or
popf
outsl
jle
sbb
int
cmp
mov
jl
jne
es
push
pusha
mov
in
or
adc
loop
lods
mov
test
jnp
adc
or
mov
fstps
cmpsl
into
mov
jbe
out
mov
leave
mov
xor
mov
cmp
popa
or
dec
sub
sbb
push
inc
dec
push
test
stos
nop
xchg
nop
cmp
addr16
inc
adc
mov
popf
sbb
loopne
cmc
in
or
daa
and
jle
mov
out
jb
xchg
mov
scas
rorl
test
test
jecxz
fs
xchg
jle
lahf
repz
movsb
je
popa
ss
icebp
jno
loopne
outsl
jo
jae
push
cmpsl
push
xchg
jge
and
jnp
and
cmp
mov
jl
adc
push
out
pop
xchg
add
inc
push
fcmovnb
cmpsl
mov
cmp
pop
mov
adc
daa
mov
jnp
test
aaa
loopne
pop
aad
xor
inc
pop
addr16
mov
push
pop
outsb
jmp
mov
js
mov
mov
stos
in
imul
sti
xor
aaa
jecxz
pop
je
push
cltd
test
movl
dec
int3
cmp
adc
sbb
aas
push
inc
inc
mov
cld
std
mov
add
and
mov
or
adc
sub
ljmp
mov
adc
test
jo
jo
outsl
pop
cmp
iret
mov
outsb
xorl
insl
xchg
popf
mov
cltd
or
or
dec
xlat
inc
adc
mov
fwait
mov
daa
enter
ret
enter
xchg
add
dec
cmp
insl
xchg
mov
insl
jle
subb
andl
jecxz
xor
pushf
sti
cs
rdpmc
add
cld
inc
leave
lds
pop
mov
pushf
shlb
into
outsl
xchg
mov
jns
push
sar
mov
shr
mov
movsb
xor
and
mov
aaa
ss
xor
lea
and
cmp
inc
lods
adc
pop
pop
push
xchg
rcr
aam
xchg
inc
cmp
and
and
push
int
lret
sbb
dec
sbb
lret
pushl
insl
xchg
sbb
add
push
loopne
stos
jmp
mov
scas
or
adc
cmp
lret
push
mov
in
and
stos
mov
push
and
pusha
cli
mov
dec
jl
xlat
xchg
xor
and
mov
mov
adc
jl
ja
cmp
lods
rorb
and
push
adc
push
movl
push
pop
push
adc
icebp
dec
jbe
lock
pop
jo
push
bndstx
insb
mov
lods
jge
ljmp
xchg
insl
xchg
scas
aaa
icebp
sbb
adc
insl
faddl
stos
es
fmuls
mov
pop
push
pop
int3
pop
inc
push
call
xor
or
inc
outsb
test
add
insb
out
push
leave
mov
mov
lock
ss
arpl
push
push
push
notb
xor
sbb
mov
movsb
xchg
stos
fisttpll
cwtl
sub
aas
inc
push
push
pop
inc
scas
stos
mov
and
roll
test
mov
mov
inc
cmp
nop/reserved
xchg
fisttpll
int
pop
cmp
lods
adc
pop
xor
push
sahf
dec
lods
adc
sti
movsb
lods
push
jecxz
mov
andb
jmp
xor
leave
ret
mov
sbb
cld
mov
lods
lahf
cmp
scas
rcll
aad
push
sbb
jnp
fcmovbe
sub
cmpsb
lret
xor
stos
cmpxchg
popf
popa
cmpsb
dec
in
xor
pop
push
cmp
inc
inc
dec
pop
shl
fwait
xor
data16
dec
in
add
aam
push
inc
push
inc
mov
inc
push
mov
lret
cmc
ret
or
dec
iret
js
xor
std
mov
cwtl
inc
cmp
out
jmp
jmp
xchg
jne
jns
and
xchg
cld
iret
idiv
jecxz
mov
popa
pop
and
cmp
push
insl
sub
fildl
adc
cmc
pop
sbb
cmp
adcb
cmp
and
jmp
fidivs
jae
and
stc
stc
pop
loopne
ds
mov
cmp
mov
repz
dec
mov
inc
cltd
pop
mov
push
inc
adcb
mov
cwtl
inc
repz
dec
xor
jle
lods
inc
test
sub
cltd
jae
cltd
inc
dec
fisttpl
sbb
sbb
ret
add
loope
mulb
loope
fdivrs
xor
aaa
icebp
jo
jns
jne
call
and
adc
cwtl
jp
in
ret
rcrl
xor
cmpl
lods
dec
pop
data16
mov
daa
or
mov
jl
push
jp
push
pop
jno
mov
push
cld
mov
ds
adc
lods
inc
and
lods
mov
out
adc
iret
mov
imul
test
xor
sti
mov
add
xor
aam
popf
push
cmp
jmp
xchg
ljmp
in
and
sbb
sub
daa
into
jg
fildll
dec
push
clc
arpl
ja
inc
sbb
movsl
mov
jmp
shl
aam
leave
dec
jge
ja
cmp
icebp
or
setno
lods
jecxz
scas
mov
popf
and
pop
push
test
test
mov
or
xor
xchg
and
ja
shrb
mov
xor
sbb
mov
cmp
cltd
jns
pop
rorl
push
mov
jmp
push
popf
fcomip
fnclex
cmp
fptan
xor
jg
repnz
je
dec
cld
pop
mov
aad
ja
push
jecxz
ficoml
pop
xchg
sbb
and
add
cmpsl
inc
push
out
cmp
xchg
sbb
mov
pop
mov
loop
and
mov
aam
jl
mov
push
adc
cmp
xchg
dec
dec
sub
xor
ret
test
sbb
div
adc
dec
shrb
fistps
and
xor
pop
pop
push
cld
imul
cmp
arpl
fidivl
cmp
adc
lods
xor
in
std
jp
mov
add
mov
inc
out
scas
mov
cmp
jnp
add
pushf
aaa
int
push
bound
lahf
out
leave
sbb
fistl
cmc
and
icebp
mov
shrl
mov
jp
daa
aad
mov
int
inc
mov
rcrl
sub
cmp
sub
xchg
pop
xchg
xchg
jae
aam
ljmp
cmp
mov
sbb
sti
sbb
sub
mov
stos
add
sahf
int3
adc
and
mov
loop
outsl
sbb
and
sarl
pop
jle
xlat
enter
out
into
sub
jmp
cmp
mov
idivb
lahf
addr16
imul
cmp
inc
daa
mov
jmp
pushw
mov
popl
sbb
xchg
jbe
popa
test
mov
dec
sub
sbb
repz
test
imul
mov
mov
xchg
test
pop
mov
sub
negb
sbb
add
cmp
pop
pop
cmpsb
std
fsubp
std
leave
xchg
mov
sti
orl
ss
add
lret
xchg
ret
loop
pop
push
xchg
stc
adc
push
fwait
sarl
push
adc
icebp
jmp
xchg
push
shll
outsl
mov
shl
dec
adc
push
sbb
xchg
jmp
xchg
in
lock
test
rcrb
push
ss
push
enter
jge
aas
xorb
push
push
stc
or
movsb
outsl
adc
mov
pusha
dec
jmp
inc
adcl
push
lahf
lods
outsb
fidivrs
ja
inc
add
mov
and
and
push
cmovae
daa
inc
inc
sub
enter
push
cmp
push
cld
and
pusha
jecxz
cs
push
imul
xchg
cs
and
mov
in
loop
test
or
mov
cmc
sub
mov
je
ret
das
pop
push
adcb
shlb
jae
clc
jge
sarb
sub
je
and
mov
mov
gs
imul
sbb
mov
mulb
and
xor
xor
lock
mov
rcrb
jae
sahf
xlat
adcb
dec
daa
xor
xchg
das
pop
pop
push
dec
les
xor
cmp
inc
dec
and
mov
loope
mov
push
ret
sub
out
fsubl
fnstenv
and
sub
adc
sbb
mov
adc
mov
cmp
filds
mov
push
out
jg
in
add
int3
jle
cmp
dec
arpl
mov
xchg
enter
fidivl
daa
sbb
xor
mov
sub
sub
sbb
or
call
jp
jnp
mov
outsl
sahf
sbb
lock
dec
push
dec
mov
lahf
xchg
fsubs
fsubs
aas
or
add
lods
lahf
adcb
arpl
adc
lret
fistl
adc
mov
add
lcall
or
jecxz
xchg
cs
jnp
pop
popa
rcl
insl
fstpt
and
fcmovnbe
jmp
jne
jp
jae
clc
jnp
out
pop
addr16
mov
ret
adc
fwait
rorb
out
imul
stos
mov
or
rolb
out
clc
xchg
outsl
popa
xchg
xor
mov
mov
jle
push
out
pop
mov
lea
mov
sub
addr16
dec
enter
mov
out
rcrb
adc
sbb
jp
inc
cltd
stos
cltd
add
ret
jae
es
xor
mov
lods
pop
sbb
daa
sbb
add
les
jmp
mov
shrb
or
dec
or
loope
add
test
jl
mov
inc
popf
adc
lds
push
aam
je
mov
addr16
clc
mov
lcall
adc
loop
je
lods
cwtl
cmpsl
adc
in
xorb
jl
imul
pushf
xchg
imul
dec
stc
leave
cmpsl
in
cs
ja
cltd
push
ljmp
popf
addl
pusha
ds
sarb
mov
push
pop
test
arpl
dec
out
rorl
vmovlhps
cmpsl
mov
sbb
clc
imul
xor
out
and
add
or
shlb
mov
pop
jge
push
in
loopne
bound
mov
xorl
adc
in
or
adc
add
ja
cltd
lret
xchg
testl
shlb
mov
xchg
inc
mov
iret
sub
int3
and
ficompl
push
sysexit
xor
cmp
lods
out
ljmp
dec
dec
jp
and
aas
pop
orb
push
mov
shrb
rolb
fldenv
enter
or
fcompl
jb
cmpsb
cs
push
pop
mov
xchg
sarl
sbb
pop
lret
int
fldcw
or
dec
add
cltd
adc
dec
ret
int3
mov
sbb
cli
test
jne
and
les
cmc
push
sub
lock
lcall
push
in
enter
mov
push
push
loopne
mov
mov
cmp
in
cmp
std
test
mov
test
lods
sti
sbb
fidivrl
or
adc
insb
fsubrl
test
xchg
push
xor
push
xlat
inc
mov
jno
lods
shlb
mov
sub
ja
inc
nop
out
call
pop
xorl
cmc
mov
xorb
lods
sbb
xchg
iret
jno
movsl
xchg
pop
pop
add
pop
sbb
popa
sahf
or
es
outsl
ljmp
jne
mov
pop
aas
or
push
enter
mov
mov
jge
add
jno
insb
sub
inc
push
int3
hlt
sti
adcb
sahf
mov
shll
aam
decb
inc
mov
dec
fwait
or
fisttpl
or
mov
fstpt
mov
inc
in
bndstx
push
sub
loopne
push
jecxz
repnz
jns
imul
mov
pop
push
sub
mov
movsb
inc
test
xchg
xor
hlt
push
mov
sub
test
xchg
std
sub
cmp
arpl
out
data16
or
lods
dec
sbb
push
arpl
inc
fisubrl
outsl
imul
or
int
xchg
insb
xor
push
cmpb
mov
imul
mov
lahf
push
inc
adc
shlb
out
jp
mov
nop
add
cmp
cmp
sbb
cmpsl
pop
lahf
sub
mov
inc
jmp
and
imul
lret
or
dec
lods
enter
cmp
sar
aam
inc
add
out
mov
push
sub
push
les
jecxz
mov
xor
cmc
loope
fs
xchg
cwtl
or
adc
xchg
addr16
jp
sbb
or
rcl
push
clc
adc
pop
out
xchg
cltd
cwtl
iret
sbb
jno
repz
fmuls
rorb
mov
loopne
pusha
popa
jl
out
inc
lret
icebp
les
cmpsb
arpl
enter
push
lock
xor
ficompl
aas
inc
bound
sti
add
jmp
mov
pop
nop
jecxz
inc
sahf
lret
jo
jne
stos
icebp
test
sbb
mov
in
gs
pop
inc
fimull
add
sub
push
xor
mov
add
test
dec
and
call
lock
adc
mov
les
pusha
fnstenv
sub
mov
fwait
mov
ds
and
cltd
lahf
test
sarb
sar
pushf
scas
jae
fadds
sbb
in
jno
xchg
cmp
arpl
and
pop
lahf
add
out
inc
lcall
addl
xchg
fstl
enter
mov
adc
dec
pop
mov
jl
int
cwtl
shrb
push
push
pushf
outsl
or
fistl
mov
arpl
data16
mov
jmp
sbbb
shlb
or
xchg
and
aaa
xor
jge
leave
rcl
inc
int
pop
repnz
dec
sub
pop
out
and
cmp
or
outsl
inc
mov
les
mov
dec
inc
mov
xchg
mov
cwtl
fdivr
pop
xor
ds
aas
sbb
das
inc
dec
sarb
push
add
dec
cmp
fdiv
leave
test
shlb
mov
mov
pop
data16
add
lods
xor
cli
lret
mov
dec
test
sahf
jp
xchg
mov
inc
jo
dec
shlb
es
fstpt
adc
and
sti
or
test
dec
cmp
inc
inc
movsb
pop
test
sahf
enter
mov
or
and
out
out
push
int
mov
jle
jmp
xchg
lcall
xchg
mov
dec
bound
testb
dec
stos
into
xlat
xor
mov
adc
ds
lcall
popf
hlt
shl
mov
std
loopne
adc
push
js
push
push
xor
jmp
es
lahf
scas
les
arpl
iret
sbb
push
pop
mov
pusha
dec
xor
nop
pusha
ret
int3
jne
mov
xor
or
test
xchg
pop
leave
outsb
inc
mov
loope
and
add
lcall
adc
mov
out
xchg
rolb
push
cs
imul
jno
sbb
ljmp
je
inc
ja
mov
gs
or
and
pop
adc
xchg
fyl2x
jge
cmpsb
push
lods
nop
adc
sti
imul
popf
push
pop
in
adc
test
dec
fisubl
popa
dec
inc
push
sbb
push
les
add
lods
andl
repz
pop
jo
push
xchg
cmp
dec
xchg
movsb
mov
pushf
ror
push
mov
aam
push
xor
orl
jmp
pop
adc
xor
pop
xchg
daa
mov
mov
fdivs
jg
fcmovnbe
pop
fst
xor
les
je
xor
in
or
in
push
fbstp
insb
popa
adc
shrl
dec
dec
fwait
adc
xchg
xchg
mov
cld
xchg
js
sub
aas
outsb
sub
sub
jmp
mov
aad
js
and
leave
mov
shlb
sbb
mov
aas
lcall
int3
ficomps
sbb
mov
adc
fs
sbb
and
sti
inc
xlat
out
clc
es
jmp
out
or
push
data16
push
adc
mov
sbb
pop
sub
mov
insl
inc
lahf
pusha
sbb
pop
pop
sbb
insl
es
inc
adc
pop
mov
cmp
sahf
pop
leave
mov
daa
stos
ret
orl
lods
pop
movsb
inc
test
les
pop
insl
mov
ds
xchg
jle
loop
or
jp
jb
fwait
hlt
dec
movsl
bound
rorl
adc
outsb
xchg
mov
in
dec
shrb
xor
add
or
sub
and
hlt
enter
dec
outsl
arpl
ljmp
mov
test
cmp
dec
mov
and
mov
mov
and
push
and
pop
mov
stos
cmp
pop
lcall
dec
out
inc
pop
dec
shll
data16
movl
sbb
movsb
gs
or
shrl
pop
leave
lret
push
mov
mov
fistpll
push
and
and
mov
and
cmp
lea
scas
mov
dec
mov
mov
movups
sbb
imul
dec
jo,pt
mov
mov
and
out
testb
mov
lods
mov
sbb
push
imul
cmp
shll
std
xlat
cld
out
add
jnp
out
push
ret
sub
es
pop
jmp
sahf
into
lret
cwtl
push
stos
mov
cmp
push
ret
and
aam
sti
stos
mov
dec
popl
pop
pop
push
cwtl
cmpsb
fisubrl
jbe
add
je
ja
out
cwtl
xchg
test
push
add
popf
pop
cld
mov
ja
std
movb
rcrl
inc
decl
mov
xor
movsl
and
les
push
rol
repnz
push
xor
mov
outsl
fisubrs
test
adc
push
imull
das
inc
jb
push
repz
cmc
addl
rcrl
pop
sub
cmpsb
jge
cli
dec
rcl
mov
jno
jne
fimuls
mov
xchg
int3
xor
js,pn
lahf
mov
cld
sub
jb
push
inc
mov
cld
xchg
test
fmuls
into
ret
cld
lds
push
movsl
mov
inc
pop
lret
add
dec
jg
es
add
dec
hlt
add
inc
ror
push
pushf
and
insb
add
popf
es
xchg
mov
mov
push
mov
in
hlt
addr16
add
loope
dec
xchg
rol
nop
sub
jg
movsb
rclb
sub
data16
addr16
pusha
or
xchg
int3
jns
add
pop
sbb
movsb
aam
sbb
fs
xlat
cmpsl
fwait
sub
outsl
push
jmp
xor
push
dec
mov
push
xor
clc
push
addl
scas
icebp
xchg
xchg
push
out
xchg
lods
cltd
test
lret
mov
xchg
xchg
mull
cltd
pop
adc
data16
scas
gs
inc
xchg
hlt
jo
stos
mov
test
adc
aam
addr16
jp
in
outsb
mov
push
mov
outsb
shlb
push
ret
jg
mov
aam
andb
push
inc
and
add
xor
push
mov
imul
jle
jl
jl
mov
aam
push
pop
xchg
test
push
lret
lret
sarb
inc
je
xlat
js
lahf
cmp
inc
mov
mov
mov
xchg
mov
xchg
push
mov
or
sub
xlat
sahf
push
jne
add
popf
sbb
movsb
mov
movsl
push
sbb
int
dec
fdivs
cmpsl
adc
daa
lods
inc
js
pop
iret
xchg
xchg
or
loope
scas
fs
xchg
mov
inc
xchg
out
scas
mov
fldpi
fidivrl
dec
fldl
aas
daa
sub
lods
popa
mov
lock
dec
add
stos
and
fdiv
subl
scas
mov
gs
sub
sub
fimull
in
jg
fsubrp
loopne
push
and
sbb
adc
daa
jbe
movsl
dec
or
test
out
pop
popa
lea
cmp
aad
jecxz
sub
mov
fsubp
mov
std
pop
dec
sub
and
fs
xor
pusha
and
xchg
leave
stos
in
mov
dec
cmp
add
inc
cmp
dec
insb
int3
dec
lods
push
ficoms
jge
repz
mov
jae
mov
mov
arpl
inc
cs
xchg
ficompl
ret
outsl
rcrl
xor
inc
sti
mov
sub
in
hlt
sub
shrb
iret
inc
subb
into
lea
xor
std
es
fidivs
sbb
mov
mov
jge
cmpsl
jbe
add
dec
repz
mov
insl
es
adc
ret
into
xor
lret
or
mov
cltd
int
xor
shll
insl
sbb
add
nop
add
inc
add
jp
xchg
dec
outsb
andb
iret
cmp
or
arpl
or
dec
sub
pop
mov
shl
pusha
and
in
dec
adc
lea
xchg
or
aam
jae
lock
adc
ss
mov
ljmp
pop
cmovne
popa
sahf
jnp
push
mov
ret
negb
inc
hlt
out
std
out
xor
push
mov
adc
pop
mov
cmpsb
fs
repz
inc
outsb
jbe
scas
aas
xor
test
shll
add
pop
inc
mov
pop
daa
xchg
add
rcrb
into
fbld
test
sbb
jbe
sub
and
sbb
adc
dec
jge
push
jl
push
xor
mov
jbe
push
jae
loopne
push
jmp
jp
outsb
imul
in
bound
scas
cmp
and
fstp
stos
stos
cmpsl
dec
or
jbe
mov
inc
cltd
add
sbb
fdivl
mov
ja
mov
sub
fsubrl
push
mov
dec
sbb
push
xchg
sub
in
or
inc
mov
cmpsb
bound
insb
shl
pop
dec
mov
ds
insb
xchg
inc
rcll
mov
into
adc
sub
and
dec
pop
js
or
setp
xor
xorps
and
cwtl
icebp
scas
pusha
out
cmp
enter
add
jle
cmp
mov
add
outsb
mov
dec
pop
jno
add
dec
in
aad
shll
adc
call
and
out
das
sahf
sbb
dec
mov
add
pop
xchg
aam
inc
add
xchg
mov
lds
mov
inc
push
push
pusha
cmpsl
push
jbe
and
push
push
in
xchg
sub
movl
stos
dec
cmp
sbb
fs
mov
lahf
sbb
test
mov
scas
stos
lods
sbb
cmp
in
popf
loop
mov
inc
leave
ja
xorl
out
scas
out
in
jae
arpl
pushf
inc
and
and
call
mov
xchg
jecxz
push
int3
mov
dec
add
out
in
and
mov
pop
mov
pop
bound
imul
adc
arpl
insl
insl
dec
fsub
rdmsr
mov
and
imul
test
inc
lods
push
or
orl
xor
cmpsl
push
sbb
fcoms
ds
fcompl
pushf
hlt
ficoml
stos
sub
ljmp
adc
cmp
add
pop
jns
mov
push
or
filds
xchg
sbb
inc
sub
lods
pushf
out
ret
inc
mov
xchg
jns
cmp
or
scas
xchg
inc
lds
frstor
pop
insb
mov
cli
push
sub
xor
pushf
int3
stos
mov
mov
cmp
or
jno
rcll
outsl
stos
rcr
and
lcall
dec
mov
sbbb
adc
sub
mov
clc
pop
adc
inc
add
bound
mov
fstpt
push
ss
es
repz
iret
loop
cmpsb
das
push
jmp
dec
pop
adc
mov
repz
js
in
out
js
adc
xlat
xor
aad
mov
sbb
cli
jg
int3
mov
sbb
xlat
xchg
je
rcr
xorb
fists
mov
rcrl
je
or
mov
not
cli
jae
leave
jle
jb
pop
push
inc
push
jp
int
lret
xor
xchg
mov
mulb
repz
or
ss
ds
pop
test
jno
leave
test
inc
imul
fwait
bnd
movsl
jp
inc
and
or
lret
pushf
xor
xchg
jg
pop
jg
aam
jge
xchg
push
into
enter
inc
cmp
mov
pop
test
testl
push
fbld
jl
sbb
leave
jg
mov
mov
sub
pop
insb
or
inc
ret
pop
fwait
dec
cmpsb
sbb
nop
sbb
pusha
mov
xor
shlb
xchg
cltd
fnsave
ss
pop
xorb
stc
xchg
jbe
mov
repnz
imul
aas
mov
dec
add
jg
inc
xchg
lods
ret
shr
imul
lds
es
aad
or
addr16
mov
lcall
lahf
in
pusha
push
les
push
mov
jl
sbb
divb
dec
fiaddl
add
and
stos
ds
sar
mov
add
jnp
pop
xor
or
cmpsb
in
loope
push
jmp
adc
andl
add
dec
jns
in
movsb
faddl
insl
jns
mov
jg
mov
and
out
adc
sub
push
jne
lcall
mov
std
xchg
test
fisubl
int3
pop
mov
push
mov
popa
inc
mov
jo
cmp
or
in
jbe
push
mov
cli
scas
mov
mov
in
mov
pop
jp
adc
aas
jge
pop
push
pop
cmp
sbbl
aam
pop
pop
jb
push
jne
leave
fwait
aam
mov
mov
sbb
popf
push
loopne
leave
or
adc
mov
jge
mov
mov
ror
sbb
aas
mov
cmpsb
cmpsl
lods
mov
and
jae
rol
push
mov
shll
push
leave
xchg
pop
dec
add
gs
scas
ja
mov
mov
push
shll
push
or
sarb
imul
dec
fmul
cmpsl
push
push
ret
add
pop
fcompl
adcl
movsb
in
lahf
inc
out
cli
sub
lahf
dec
popa
jnp
sbb
or
inc
cmc
movsl
mov
adc
push
sti
sbb
ficoms
aaa
test
sub
popa
mov
data16
cmp
xchg
mov
xchg
fstl
xlat
mov
hlt
fdivl
movsl
xchg
mov
hlt
inc
dec
lahf
pop
cmp
xor
add
mul
sub
mov
fwait
jp
int
cmpl
std
insb
jge
xchg
cmc
cmp
test
or
and
aam
xchg
mov
clc
jae
jb
test
movsl
jmp
clc
rcr
int
out
andb
scas
aaa
fldl
add
push
loope
popa
lds
stos
addr16
inc
nop
mull
add
cmp
jmp
mov
mov
mull
jle
test
dec
fiaddl
ds
les
mov
incb
mov
sub
sub
inc
push
movsl
popf
push
stc
pop
shrl
pop
sarb
push
pushf
out
pand
and
aaa
jp
add
jno
jnp
out
jo
pop
sub
adc
mov
aaa
fwait
cmpl
jecxz
mov
movsb
insl
xchg
dec
add
dec
jmp
fcomip
xchg
lret
dec
jns
adc
sti
cmp
ljmp
jb
pushf
push
repnz
shll
gs
push
lahf
stos
cmp
mov
shlb
lcall
std
cmp
iret
push
cs
inc
cmp
cld
lret
cwtl
push
pop
fwait
push
dec
pop
ljmp
jo
add
iret
and
xor
ss
popf
jb
in
mov
inc
lret
dec
test
hlt
mov
loop
sbb
xor
mov
sub
js
add
cmc
push
iret
cmp
mov
and
xlat
or
sahf
add
les
nop
or
loop
in
stos
and
fs
mov
adc
loope
dec
dec
ret
pop
mov
mov
sub
das
arpl
pop
pop
push
mov
cmc
mov
lods
mov
pop
testl
pop
cmpsl
ret
add
sbbb
int
jg
xor
xchg
xchg
fcmovb
enter
fs
rep
pop
mov
mov
jp
cmp
or
mov
sbbl
jo
cmp
stos
leave
mov
xor
or
pushf
std
into
mov
mov
into
mov
iret
aad
mov
jecxz
push
dec
sbb
inc
sahf
leave
pop
lds
jge
xbegin
pushf
shlb
fsub
jp
lcall
cmpl
sbb
cmpsl
fucomp
mov
gs
xor
insb
or
divb
je
in
mov
xor
mov
ficoms
push
jmp
push
dec
add
mov
iret
sub
mov
fidivrl
and
mov
mov
pop
cmp
pop
das
adc
lock
rclb
pop
adc
dec
out
es
outsl
inc
iret
dec
sbb
sarl
cmpsl
aaa
inc
inc
xor
scas
xor
cmpsb
popf
push
mov
mov
sahf
iret
xchg
jl
popa
inc
and
jl
ret
xchg
jmp
dec
jnp
mov
dec
cmp
mov
inc
cmpsl
adc
dec
jge
popa
mov
adc
mov
jnp
dec
pop
hlt
adc
jp
addb
aaa
sub
ljmp
mov
lret
xchg
xchg
sub
adc
test
mov
add
or
stc
sub
xchg
movsl
xchg
lods
mov
mov
ljmp
mov
cli
sbb
in
lcall
jle
call
pop
pop
xchg
addr16
inc
xchg
or
fidivl
jge
fdivrs
popf
repnz
pop
inc
xlat
fld
jecxz
jecxz
push
jb
pop
movsl
cmp
test
push
xchg
int3
xor
dec
adc
adc
adc
dec
repnz
int
jge
dec
cmp
mov
into
xor
inc
lods
push
out
jnp
cwtl
hlt
aaa
push
and
stc
pop
cmp
insl
and
push
or
jbe
fyl2xp1
sbbl
push
popf
xchg
jl
aas
push
bound
mov
mov
js
nop
mov
fisttpl
gs
add
jnp
int
cmpsb
mov
pop
jo
pop
sbb
ss
pop
xor
xor
repz
mov
mov
pusha
dec
and
in
mov
testl
pop
scas
orl
popa
adcb
mov
cmpsb
fbld
xchg
movsb
into
push
bound
lds
inc
cltd
dec
lcall
inc
nop
inc
lods
push
adc
lock
aam
sub
mulb
dec
jbe
testb
add
pop
pop
add
shll
add
sub
sarb
or
xchg
pop
aaa
push
jb
ds
mov
jbe
cmpsl
mov
pop
or
xchg
mov
shld
pop
jge
add
jmp
and
mov
mov
lret
pusha
ret
mov
pop
roll
sub
fstpl
loopew
in
ret
scas
mov
add
dec
out
das
cmp
dec
xchg
test
inc
mov
dec
pop
aad
loopne
xchg
fwait
add
sbb
cltd
stc
ljmp
sbb
imul
inc
movsb
inc
or
cs
ss
dec
mov
jmp
movsb
or
lock
push
xchg
aad
idivb
xorl
sub
push
dec
mov
jbe
cmp
fildl
mov
adc
dec
test
jb,pt
adc
aam
add
lret
push
call
pop
jno
imul
daa
jae
mov
xchg
pop
imul
mov
rolb
mov
add
out
sti
mov
mov
push
cmp
cmp
xchg
leave
mov
mov
ljmp
decl
cmp
test
lods
push
jl
out
in
jl
inc
jecxz
out
or
mov
pop
mov
jmp
cwtl
int3
add
insl
mov
adc
add
mov
cld
jmp
int
jns
aaa
dec
mov
lret
push
add
mov
mov
add
push
mov
adc
mov
or
cltd
mov
xchg
nop
testl
dec
data16
pusha
loope
repnz
adc
sti
std
mov
sbb
cltd
push
int
pusha
dec
inc
movsl
xlat
adc
fists
stc
push
xor
xor
stos
ret
lods
xchg
jecxz
mov
mov
dec
ja
cli
mov
pop
cltd
sub
add
xor
lahf
or
call
push
sub
fidivrl
scas
daa
ret
insb
push
flds
push
mov
cmp
pop
scas
gs
loopne
push
push
jb
out
cmpb
pop
mov
cltd
jecxz
rcrl
cmpsb
push
add
out
or
xor
fidivrs
cmp
scas
jae
mov
imul
and
add
les
aas
es
cld
mov
xor
push
push
push
mov
es
xor
inc
mov
jnp
xchg
pushl
lahf
inc
cmp
popa
outsb
inc
mov
mov
pusha
orl
rclb
iret
mov
add
pusha
popa
mov
inc
mov
movsl
mov
mov
leave
inc
push
sbb
mov
shrl
int
dec
jno
add
dec
push
adc
stos
aas
das
cmp
in
and
in
dec
fs
sbb
mov
ret
adc
mov
sbb
push
clc
mov
hlt
push
in
fmul
fsub
imul
inc
sahf
push
loope
lds
jl
xor
fs
jae
imull
push
dec
jno
add
jbe
mov
out
andb
add
popf
testb
xor
addl
jne
ret
negl
mov
add
cmp
push
pop
jae
sbb
ja
jno
incl
pop
hlt
cmp
shl
or
jmp
cmp
das
outsb
cmp
or
lcall
sbb
xchg
imul
pop
sub
popl
adc
lahf
pop
dec
push
jbe
pop
xor
push
jne
push
mov
cmp
out
in
popf
in
pop
gs
xor
cmp
push
mov
shlb
rol
loopne
cmp
sub
cwtl
ret
jg
push
insl
xor
jb
adc
xor
push
js
fwait
popf
imul
and
lahf
mov
lahf
cs
scas
jle
aas
sti
cwtl
fxch
sub
add
call
idivl
sub
icebp
inc
dec
xchg
lods
pop
shlb
cld
aas
inc
popa
dec
insb
in
andl
fmull
jo
ret
lret
cld
lds
or
in
push
pop
mov
lahf
imul
sbb
es
out
push
dec
lods
mov
jmp
addr16
or
ss
jge
aam
sbb
cwtl
xor
cs
fidivs
push
stos
push
xchg
cmp
mov
xchg
fists
push
or
and
xchg
jl
ret
adc
and
scas
cmp
mov
stc
sub
faddl
cmp
push
insl
insb
out
add
add
pusha
mov
or
outsl
repnz
mov
push
xchg
add
xchg
and
cmpsb
jl
mov
xor
inc
fistl
push
cs
cld
inc
scas
fistpll
adc
test
pop
ss
pop
adc
je
notl
fidivs
or
xchg
inc
test
in
or
sbb
pop
jge
inc
adc
xchg
das
inc
jl
dec
arpl
cld
mov
cmp
dec
out
lret
sub
add
dec
dec
sbb
int
nop
je
int
and
lods
cmp
sbb
ss
movsl
mov
gs
inc
hlt
xor
mov
in
or
orl
pop
mov
push
into
or
fnstsw
movsb
cmp
cld
push
sub
pop
jb
outsb
shll
sub
cmp
orb
sbb
or
and
and
lock
push
test
sti
push
push
pushf
dec
adc
mov
iret
sbb
mov
add
push
rolb
cwtl
stos
in
pusha
cmp
jg
fxch
jne
sub
add
lods
rcrb
stos
mov
inc
fwait
xchg
ja
scas
test
std
std
inc
mov
shrb
dec
push
mov
stc
pop
hlt
dec
test
cld
sub
pop
sahf
adc
sub
sub
jp
add
cmp
push
pop
ror
adc
pop
int
push
popa
aas
fwait
jne
rcll
sub
leave
and
and
dec
cmp
jns
xabort
daa
ljmp
mov
into
add
sarb
pop
enter
scas
and
cltd
arpl
cmc
dec
sub
std
adc
mov
mov
adc
jb
dec
sub
adc
jo
xorb
and
mov
sbb
add
in
aaa
cmc
gs
imul
sub
pop
mov
cli
push
insb
xchg
jo
mov
imull
adc
add
ljmp
xchg
mov
xchg
mov
rcrl
movsb
insl
call
les
cli
cmp
aad
jge
adc
push
lret
ret
into
sub
imul
mov
mov
movsl
sbb
jmp
mov
jo
rcrl
rcrl
sub
mov
adc
cld
push
adc
mov
incl
push
mov
aad
icebp
cmp
pxor
in
jge
js
push
and
add
add
pop
dec
or
cmp
mov
sysret
dec
dec
aam
addr16
bound
add
loop
or
out
jns
hlt
push
lret
mov
arpl
sbb
js
pusha
sbb
cmp
sub
shlb
inc
out
loop
mov
in
jns
xlat
insl
je
fcompl
mov
hlt
lcall
sti
xor
movsl
or
dec
lcall
pop
lods
jne
jo
mov
xchg
inc
mov
xchg
adc
jbe
mov
jge
fmuls
add
nop
mov
repz
cmp
mov
push
ret
pop
adc
dec
jmp
and
inc
ds
push
les
jmp
arpl
xor
rep
iret
insb
pop
je
sub
insl
out
idivl
subps
push
pop
in
scas
movsb
adc
mov
jle
not
jl
repz
das
dec
fimuls
mov
pushf
stc
sbb
std
rclb
jmp
xor
or
mov
in
sub
push
iret
mov
out
in
fucomp
mov
cli
std
iret
call
push
adc
mov
or
and
popa
push
mov
enter
jns
or
mov
fdivrl
mov
mov
faddl
std
mov
or
cmpsl
cmp
and
or
mov
cmpsb
ror
mov
xchg
shl
test
jmp
cltd
mov
inc
mov
mov
mov
and
mov
inc
jne
lds
cmc
dec
ret
bound
lock
xchg
mov
push
pop
ds
and
inc
push
mov
call
xor
or
fnsave
fdivl
insb
lods
sub
mov
jne
jg
or
sbb
inc
mov
dec
inc
mov
test
loop
push
stos
mov
or
pop
xor
pop
aaa
decl
iret
fldl2e
xchg
mov
adc
xchg
daa
inc
jne
adc
mov
cmp
jmp
into
aam
int3
sub
cld
xlat
into
or
outsl
shr
push
ljmp
cld
mov
test
pop
rcll
cmp
and
jge
pop
popf
ja
jo
push
das
int3
and
pop
sbb
and
ljmp
inc
jmp
xor
cmp
movsb
mov
dec
aaa
dec
sbb
mov
fcomps
out
or
push
jecxz
sub
pop
adc
or
ljmp
push
imul
push
jo
aad
push
or
jl
mov
dec
or
roll
sti
cmp
out
xchg
mov
pop
ds
jae
dec
push
jmp
sub
mov
cmpl
dec
loopne
in
repnz
or
adc
mov
pop
popf
sbb
stc
add
dec
sub
lds
call
inc
xor
shlb
outsb
sub
sub
push
adc
jns,pn
cld
adc
icebp
adc
push
fwait
pop
sub
and
xor
mov
arpl
sbb
adc
fiadds
pop
shlb
daa
cltd
aas
rcl
or
jb
adc
mov
insb
fbstp
jo
sbb
mov
cltd
mov
xor
jle
mov
xchg
fs
stc
in
in
xorb
adc
xchg
jbe
adcl
add
cwtl
stos
cmc
dec
std
jae
jns
sahf
iret
mov
jo
sbb
sahf
push
dec
mov
cmp
mov
and
sub
inc
imul
test
dec
stos
andb
icebp
insl
xor
cwtl
push
pushf
call
sub
inc
data16
in
in
mov
sti
outsb
outsb
pop
call
dec
ljmp
gs
dec
into
mov
lret
xor
sahf
bound
push
sbb
sub
xchg
inc
add
xchg
leave
je
cltd
mov
out
mov
dec
aam
test
imul
or
mov
pop
pop
push
fsubr
xchg
mov
aad
shlb
loop
xchg
out
sbb
dec
mov
out
mov
cmpsb
or
ds
jo
add
xor
lods
dec
aam
and
xchg
mov
add
loop
subl
clc
push
call
mov
dec
movsb
test
xor
or
ficoms
in
cmpsl
xchg
leave
pop
mov
pop
xor
or
pusha
imul
cmp
sub
xchg
push
dec
and
pop
jae
sar
cwtl
ret
scas
hlt
cmpsb
jnp
loope
inc
call
addr16
adc
xchg
mov
popf
fisttpll
aaa
sbb
dec
das
shll
popa
adc
test
cwtl
xorl
and
negb
mov
jae
fdivs
dec
js
xor
xor
sbb
xchg
mov
icebp
add
aad
jne
pop
mov
push
popa
push
int3
mov
fstl
test
cmp
and
add
and
pop
lods
ret
add
jge
push
into
pop
in
ss
xchg
out
xor
xchg
out
xchg
outsb
scas
add
push
inc
add
add
and
lret
push
sti
jnp
stc
inc
xor
int3
es
xor
in
bnd
in
addr16
ret
call
lret
or
fadds
mov
sbb
idivb
push
lahf
fisttps
cmp
dec
add
dec
inc
lock
scas
push
loopne
sti
mov
daa
lods
lds
push
mov
inc
fidivl
add
mov
jns
sbb
into
jg
nop
fildl
pusha
and
push
sbb
pop
leave
jae
notl
ja
xor
stos
mov
shll
dec
add
push
sbb
or
jb
cmc
imul
out
sahf
nop
lods
sbb
es
dec
fisubrs
lea
push
test
and
ret
push
or
adc
lods
adc
jmp
sarl
jns
cmp
into
incb
ja
test
orb
push
xor
dec
lea
push
cmp
mov
inc
cmp
cs
or
repz
jb
test
int
and
add
popf
push
repnz
mov
and
push
pop
mov
inc
jmp
addr16
or
cmp
sbb
rol
pop
mov
add
lcall
sub
xchg
cmc
mov
or
mov
pop
lcall
popa
enter
mov
push
pop
dec
and
pop
daa
cmovbe
lret
mov
adc
ret
or
nop
fldl
mov
hlt
and
or
iret
push
mov
dec
lock
push
dec
pop
mov
adc
cs
mov
gs
push
push
push
icebp
fnstcw
popf
xchg
fildll
lods
pop
mov
jbe
xor
inc
call
jl
mov
and
cmp
xor
gs
pop
inc
les
jae
dec
jbe
movsb
pop
imul
aaa
and
sarb
and
std
pop
mulb
sub
lret
and
pop
mov
add
sub
arpl
ljmp
and
xorl
loopne
mov
fbstp
push
lods
and
mov
insl
push
cmp
sbb
and
mov
popf
pop
fnstcw
sbb
jg
jg
lods
icebp
adc
nop
jae
pop
ds
jge
cmpsl
enter
jnp
and
aaa
xchg
fisttpl
stc
mov
gs
out
pushf
imul
pop
push
les
sbb
cmpsb
pop
push
xchg
aam
inc
mov
sub
push
adc
lret
jnp
lock
out
inc
lret
fadd
jno
mov
xlat
sbb
out
pop
adc
sub
gs
insl
sbb
jge
dec
cli
inc
sbb
add
lret
inc
cmp
stos
pusha
fdivrl
ljmp
into
in
arpl
ja
sbb
and
in
fsubr
dec
adc
adc
adc
add
jns
add
mov
pop
call
pop
inc
cld
sbb
add
aas
aas
lahf
js
pusha
in
mov
or
shr
adc
and
rclb
popf
pop
add
jne
fcoms
lds
insl
dec
cmp
jmp
ljmp
insb
lock
nop
cwtl
add
enter
push
pop
fisttpll
pop
lret
cmp
pop
addl
pop
sbb
mov
push
xchg
lea
mov
mov
dec
mov
fnstsw
add
lret
int3
push
push
stc
roll
enter
xchg
movsb
iret
mov
mov
xchg
and
inc
nop
mov
loop
mov
hlt
mov
rcrl
jmp
out
push
call
fisubrl
int
push
mov
adc
inc
sbb
sbb
adc
pop
aad
mov
sahf
push
or
scas
mov
pop
mov
mov
xchg
cltd
jecxz
push
mov
pop
sarb
vmovups
je
hlt
jp
fs
mov
aas
inc
lods
and
mull
lock
aaa
add
or
and
aas
ret
add
xor
addl
dec
movl
sbb
cmp
mov
call
out
clc
xor
mov
mov
roll
dec
enter
sub
sbb
leave
xor
js
and
mov
test
mov
scas
in
jg
shlb
mov
add
inc
cmpsl
mov
inc
int3
into
ja
ds
sub
mov
or
xor
sbb
xor
inc
cltd
negb
push
cmp
test
jo
pushf
clc
sahf
aaa
dec
mov
and
fs
dec
stc
movsl
push
clc
and
inc
pcmpgtw
rcll
dec
les
pop
mov
xor
shll
fisubrs
fistps
stos
dec
dec
nop
idivl
mov
bound
adc
add
movsl
sub
test
xor
push
xchg
adc
mov
push
adc
cs
pop
fcmovnu
push
and
add
fucomip
fiadds
mov
pop
jmp
or
xchg
sub
loope
dec
nop
js
xorl
lods
cmp
xchg
xor
push
mov
jecxz
push
gs
mov
push
mov
mov
call
adc
or
pop
mov
out
mov
adc
and
in
nop
inc
wrmsr
inc
out
and
adc
iret
iret
fs
insb
in
mov
jl
ss
loope
div
insl
xor
loopne
clc
ja
or
adc
cld
xor
inc
rcll
jnp
dec
xchg
std
mov
xor
sbb
dec
cwtl
ljmp
icebp
shll
pop
push
lods
ja
pop
pusha
pop
mov
lods
scas
xor
dec
jg
mov
cld
jno
popa
jb
mov
fwait
ja
ja
xchg
pcmpeqw
daa
xor
xchg
shrb
push
roll
rcr
push
push
lods
dec
ret
lea
or
daa
cltd
fistpl
scas
lret
mov
addr16
mov
add
pop
sbb
loop
dec
sub
push
xlat
fldl
jae
add
add
and
jg
lods
sbb
jne
and
xor
cmp
movsb
cmp
cmpsb
es
out
or
cwtl
nop
xlat
mov
rorl
out
lds
int
aaa
cmpl
scas
dec
push
inc
test
xchg
mov
mov
xor
fdivrl
mov
inc
inc
notl
push
fisttps
cmp
sub
cld
push
pop
cwtl
inc
add
pop
xor
movsb
push
inc
ffreep
mov
ror
hlt
bsf
xor
icebp
pop
push
xchg
daa
inc
mov
pop
push
sbb
inc
inc
mov
dec
dec
jno
scas
or
jbe
dec
or
scas
xchg
sbb
cwtl
pushf
xchg
xchg
xchg
aad
dec
dec
jecxz
fsubl
icebp
jmp
pop
jb
push
mov
call
push
test
aas
dec
imul
outsb
sub
cs
jmp
daa
xchg
and
lea
add
inc
pop
mov
dec
ds
jb
jnp
loope
popf
jae
fnstsw
movsl
push
movsl
push
stos
mov
imul
scas
adc
call
aad
jb
sub
adc
aam
addr16
gs
push
out
outsl
sbb
les
push
out
out
xchg
jne
arpl
cmpsb
mov
cmpsb
push
fsubs
or
shl
enter
mov
dec
push
adc
mov
inc
and
push
lods
or
pop
jne
int
xchg
add
sti
in
sbb
add
insl
dec
gs
jmp
ja
cmp
cmp
movb
sub
mov
mov
iret
xchg
dec
cmp
out
xor
dec
xchg
icebp
jmp
xchg
push
pop
and
sub
scas
enter
les
cmp
cmp
lret
mov
cli
xchg
add
int3
add
pop
test
fcmovnbe
and
loope
sbb
rcr
aam
or
out
sub
mov
mov
stc
dec
sub
xor
mov
sbb
shl
dec
je
fstps
jge
and
cs
adc
jg
addl
jno
dec
mov
test
rclb
push
bound
cmp
in
pusha
jle
cmp
inc
or
repz
pop
pop
jl
dec
inc
mov
cltd
xchg
sub
lock
decb
jo
hlt
inc
and
xor
cmp
inc
dec
inc
add
mov
call
popl
pop
mov
jp
loopne
adc
int3
lcall
push
lods
mov
push
add
or
jno
aas
test
push
vcvttps2dq
movb
push
or
int3
jns
sub
lods
rcll
cmp
in
add
push
imul
aam
sbb
shlb
cli
xor
or
push
iret
lret
mov
ds
jae
push
popa
es
mov
and
jb
cld
in
flds
mov
sub
mov
mov
aas
scas
sub
lret
stos
inc
and
popf
gs
les
daa
or
jne
es
adc
adc
roll
jg
lock
sbb
or
nop
add
xchg
mov
xor
xor
rcll
add
shlb
dec
mov
add
dec
ja
loopne
xlat
push
add
xor
sub
adc
pop
es
jo
dec
xor
sbb
sahf
push
lods
loopne
pop
push
push
xchg
dec
sub
sbb
stos
push
movsb
test
xor
cmc
mov
xchg
icebp
or
bound
pop
xor
cmp
inc
lds
std
adc
pop
push
lea
insb
mov
repz
push
out
sahf
pop
lcall
push
sbb
stos
push
and
icebp
flds
sti
add
shlb
fisubrl
adc
out
data16
adc
scas
lret
adc
repz
or
test
inc
cmp
inc
repz
add
pop
ret
aaa
shlb
ret
pop
icebp
out
out
and
add
push
test
arpl
mov
sbb
in
out
outsl
jmp
push
repnz
lods
mov
in
sahf
outsl
pop
inc
push
pop
int3
outsl
pop
add
lods
iret
and
dec
das
loopne
xchg
leave
into
add
outsb
jns
pop
or
neg
mov
inc
xor
xchg
sbb
sub
mov
jae
rep
cmp
or
pop
popf
idivl
aam
into
pop
std
arpl
out
stc
into
dec
pop
mov
push
jo
movntq
out
jge
imul
push
loope
dec
jo
xchg
jno
js
dec
aas
pop
insl
hlt
loope
add
xchg
adcl
inc
sub
aad
lods
fistpll
repz
insb
xchg
adc
sahf
stc
mov
jg
xor
jbe
iret
scas
paddd
pushf
sbb
inc
push
xchg
dec
repnz
push
push
ret
dec
jb
inc
jb
test
leave
pushf
popa
arpl
shll
arpl
out
ljmp
ja
and
andl
cmpsb
push
aaa
push
jno
jle
sub
lahf
push
imul
jle
ljmp
enter
mov
or
in
adcb
dec
mov
add
out
imul
pop
insl
inc
cmovb
pop
dec
add
sbbl
test
pushf
xchg
mul
mov
sub
ss
adcl
bound
loope
jne
aaa
sub
pop
stos
mov
iret
cmp
popa
push
call
inc
mov
repnz
scas
repz
sub
or
xor
jns
mov
lret
adc
ja
add
jecxz
imul
clc
pop
cwtl
push
notb
mov
lret
inc
stos
pop
inc
shr
pop
fs
sub
inc
dec
adcl
lret
fildl
scas
cmpsl
jbe
sti
sub
push
mov
mov
xorl
push
and
fisttpll
and
outsb
sub
mov
loopne
stos
iret
lahf
test
add
movaps
cmc
push
xchg
pop
sub
decl
add
mov
pop
cwtl
cli
and
push
and
pop
mov
orb
sub
data16
pop
jne
scas
mov
adc
loopne
repz
jb
ret
popf
add
xchg
aam
popf
adc
push
loope
pop
shlb
cmp
dec
jnp
xchg
inc
lods
xor
adc
or
jne
mov
mov
xchg
inc
adc
cmp
clc
dec
clc
sub
and
cmp
pusha
mov
jno
out
adc
push
jg
jp
mov
add
push
push
movsl
inc
dec
lahf
or
out
mov
out
sahf
repz
sbb
lds
cwtl
leave
xor
cmp
cmp
sub
xchg
cmp
imul
les
call
loopnew
xchg
mov
shl
popa
neg
mov
cli
rcrl
mov
inc
test
scas
leave
sbb
jnp
test
out
out
pusha
adc
adc
in
cmpsb
dec
cmp
ret
pusha
sbb
adc
fwait
xchg
mov
lea
pop
and
push
add
pop
jmp
jae
jne
inc
in
lret
jp
xlat
test
adc
data16
xor
jb
data16
enter
fistps
add
jno
jnp
jno
xorb
dec
movsl
pop
xchg
sarl
in
leave
cmp
cmpsb
fildll
adc
iret
std
add
hlt
cmp
jle
out
jne
or
pop
mov
jne
inc
push
xor
hlt
fcompl
mov
testl
mov
aam
sbb
add
lods
sub
rol
pop
icebp
inc
hlt
pushf
lock
fcoms
fcmovnu
push
sbb
pop
cld
inc
pop
fcomps
sbb
sub
sbb
push
mov
jg
adc
movsb
adc
sub
push
mov
into
mov
gs
int3
push
push
rolb
outsl
or
cltd
push
rclb
stc
and
xchg
jg
sub
orb
addl
ljmp
sub
fisttpl
sarl
mov
and
and
pop
mov
jle
das
les
je
fwait
gs
daa
mov
daa
idiv
push
lcall
ret
xchg
and
cld
fisubrl
adc
add
lahf
mov
cmp
mov
jecxz
fcmove
fisubrs
ret
jg
lret
mov
insb
es
ljmp
stos
dec
and
repnz
test
jns
test
mov
outsl
and
loopne
loop
repz
xor
pop
mov
sub
jb
jp
test
cmp
lock
repnz
cmpsl
jo
repz
and
outsb
or
aad
daa
push
push
fucomi
popa
pusha
push
add
ds
mov
fs
push
mov
cwtl
xchg
inc
mov
icebp
or
mov
gs
or
leave
aaa
sub
jmp
insb
pop
pop
fsts
repz
out
xorl
imul
push
popf
je
jbe
mov
jmp
fnstenv
out
stc
scas
add
and
xchg
sti
or
nop
pop
loope
mov
sub
sti
fadds
mov
jns
pusha
lcall
dec
lahf
adc
dec
pop
roll
jp
inc
out
ss
xchg
scas
jae
xlat
xchg
cmp
pop
adc
jl
arpl
popa
and
and
je
dec
insb
ret
stc
cwtl
test
dec
fistps
negl
push
sbb
aam
shr
and
imul
mov
add
not
fisttpll
lock
adc
mov
or
and
ret
mov
aaa
lods
scas
xor
mov
jecxz
rcrl
ljmp
shll
rclb
fsts
xchg
cld
dec
sbb
iret
adc
jno
push
int
mov
mov
ss
cmc
and
outsl
inc
adc
pushf
jmp
adc
data16
shr
data16
jecxz
sbb
xor
inc
cmp
push
dec
push
mov
pop
leave
push
sub
orl
ss
hlt
insl
adc
push
cmpsb
pop
mov
and
adcb
push
pop
pop
adc
and
sti
lret
xchg
add
aad
mov
pop
lods
cmpsb
cmp
mov
xchg
pop
lods
rcrl
dec
movsl
mov
ret
es
into
sub
cltd
insl
pusha
bound
test
nop
add
xchg
cmpsb
sbb
jp
mov
cmc
aam
mov
inc
inc
aam
pop
cltd
add
pop
js
aaa
enter
mov
pop
mov
push
mov
mov
adc
sbb
mov
xchg
jg
testb
cmpsl
mov
dec
and
xchg
loope
cmp
fimuls
mov
rorb
sarb
les
insl
out
lret
inc
int3
movsb
stc
and
mov
inc
aas
inc
outsb
idivb
xor
pop
loopne
or
xchg
incb
mov
dec
insb
scas
jnp
jmp
inc
mov
mov
push
cmp
xchg
fsubs
outsl
jge
add
dec
push
lret
movsl
outsl
jae
inc
dec
lret
inc
aam
sub
xor
les
add
imul
dec
adc
and
xchg
pop
adc
jnp
push
add
pop
sub
xchg
cld
jbe
enter
int3
xchg
in
bound
aaa
xlat
sub
aam
mov
add
cs
mov
scas
out
and
inc
xchg
sbb
roll
leave
mulb
shr
xchg
je
inc
add
jcxz
cwtl
push
scas
xchg
fs
loop
iret
pop
mov
fwait
xchg
dec
fimull
mov
sbb
movsl
xor
and
insb
mov
and
lock
loop
test
mov
inc
sbb
dec
push
jmp
wbinvd
mov
inc
push
sti
call
xor
ljmp
pop
push
lret
xor
jmp
dec
push
adc
mov
outsb
in
add
movsl
mov
jmp
pop
outsl
rcr
jp
test
int3
popa
sbb
or
cmpl
xlat
or
and
loope
pop
mov
or
js
xchg
jnp
imul
push
sbb
icebp
sbb
push
adc
push
mov
outsl
out
mov
xchg
add
and
jno
mulb
dec
repz
sub
hlt
xchg
mov
cmp
mov
out
movb
mov
mov
filds
lds
sbb
xor
sub
icebp
jnp
cmp
les
jmp
sub
lcall
lods
jmp
jno
inc
sub
jl
sbb
dec
pop
enter
ret
gs
lds
add
ss
into
hlt
sbb
xlat
lods
or
adc
jmp
loopne
lea
sbb
test
pop
scas
movsb
ret
jl
es
adc
std
repz
rcrl
push
test
mulb
jno
pusha
sub
lods
mov
mov
stos
lea
sub
or
jle
jp
sbb
adc
push
js
divb
insb
jbe
push
mov
adcl
dec
jmp
int3
or
aad
add
aas
pusha
and
add
fdivp
dec
aas
mov
pop
lret
fwait
pop
dec
std
dec
fmuls
dec
xchg
sbb
pop
leave
bound
movsb
aas
aam
lret
mov
mov
stos
and
loopne
xchg
xchg
or
sti
int3
mov
adc
pushf
movb
repnz
xchg
pop
jge
dec
dec
cmpsb
xor
fs
lds
cli
loopne
es
into
mov
inc
call
adc
dec
add
les
adc
cld
push
out
cmpl
dec
popa
les
enter
xlat
popa
jno
fcmovnu
addr16
xchg
mov
jle
dec
or
fisubrs
ljmp
push
inc
push
mov
mov
adc
lcall
ss
xor
ret
scas
enter
ret
movsb
jae
addl
call
popf
ds
pop
mov
mov
sub
ja
push
jo
pop
sbb
mov
xchg
xor
cmp
mov
lahf
imul
fisubrs
test
adcb
or
xor
inc
jmp
pop
roll
repz
pop
repnz
roll
fldt
cmp
into
xchg
add
mov
and
movsb
daa
push
shl
das
jp
lcall
add
xor
and
stos
dec
cmpsb
sbb
jg
and
and
mov
dec
add
cmp
das
adc
sti
test
add
and
pop
das
loope
inc
dec
push
add
push
lret
jbe
xchg
mov
add
cmp
enter
notl
adc
loop
stos
cmpsl
adc
lock
imul
mov
leave
int3
or
and
das
stos
fsubrp
or
lock
xchg
jnp
clc
xchg
loope,pt
jbe
or
mov
add
mov
das
mov
jg
xor
adc
repnz
pop
aam
pusha
sbb
sub
adc
adc
loop
or
aas
pushf
adc
insb
add
divl
stos
je
movb
in
or
jecxz
xchg
adc
xor
dec
popa
xchg
or
mov
push
outsb
or
jl
adc
insl
data16
inc
lcall
mov
push
out
repnz
xor
test
out
aam
mov
testl
mov
imul
rclb
push
repnz
lds
xchg
jg
mov
xor
dec
cmp
dec
imul
lahf
lods
icebp
mov
jp
inc
mov
fxch
and
cmpsl
jno
sarb
and
test
in
int
cmp
fyl2x
out
inc
xor
cmp
cmp
xchg
jmp
inc
mov
inc
pop
cmp
mov
jecxz
in
std
push
mov
shrb
or
pop
lods
mov
cwtl
cmpsb
imul
mov
mov
dec
cs
xchg
scas
xchg
rcr
adc
mov
sbb
popa
push
inc
insl
call
cmp
pop
outsl
in
or
or
loop
add
dec
push
int
inc
jo
and
sbb
repnz
push
faddl
js
pushf
jnp
testl
xchg
mov
cmpsl
fs
mov
mov
mov
cmp
call
in
insb
jmp
xchg
cld
xor
mov
xchg
sub
sub
pop
pop
ret
aas
aam
jno
inc
shl
mov
or
xchg
movsb
enter
mov
mov
aas
in
gs
jge
or
push
sub
or
jbe
icebp
gs
xchg
mov
in
test
xchg
loope
movsl
in
into
sbb
mov
stos
out
and
push
push
ja
cwtl
sti
arpl
nop
adc
inc
push
lea
jno
push
cmp
mov
iret
jl
xchg
pop
call
mov
nop
sub
stos
xchg
sub
sti
js
mov
add
dec
push
push
test
in
les
inc
mov
pop
and
cmp
jne
cmp
in
in
in
xchg
or
imulb
push
dec
leave
push
fs
or
aas
jg
adc
sti
xlat
jno
cmp
mov
jge
xchg
xchg
lds
fildll
loop
loopne
add
or
mov
add
lods
sbb
sar
mov
test
cmp
sub
mov
stos
push
lret
cmp
or
or
jg
test
add
shrl
xlat
fnstenv
test
into
add
adc
popf
pop
les
ljmp
jo
test
lods
xchg
rorl
jmp
dec
or
push
xchg
cmp
or
js
stos
xor
test
sub
lods
and
dec
jo
or
xor
pop
mov
lret
pop
test
jae
and
movsb
sbb
es
notb
or
and
jmp
inc
lock
jmp
int3
cmpsl
shll
in
enter
xlat
add
out
xchg
pusha
pop
mov
or
clc
cs
popf
sub
inc
loop
not
mov
or
jp
in
insl
les
arpl
pop
push
jge
adc
sbb
lret
loopne
mov
inc
xlat
cmp
and
jmp
sbb
mov
push
call
xchg
test
xchg
rclb
int3
fcoml
fiadds
out
incb
mov
mov
out
push
xchg
add
jmp
loopne
cmp
shrb
lcall
ljmp
xchg
mov
and
push
adc
fs
sar
stc
jbe
mov
daa
add
ror
or
repz
es
xchg
sbb
cmp
push
mov
lods
add
out
adc
xor
jmp
or
mov
popa
xor
mov
xor
std
and
lock
sbb
cld
or
fidivs
lock
xor
push
addr16
lret
inc
xor
xor
adc
pop
loope
rcr
push
dec
jl
jmp
or
cmpsb
sbb
inc
rol
out
pop
push
adc
sub
fcomp
jae
sub
cld
push
loopnew
int
fisubrs
in
adc
push
call
inc
jno
pop
push
xor
dec
lea
stc
sub
push
daa
cld
cmp
stos
add
pop
fwait
jg
or
adcb
mov
pusha
cltd
ds
inc
imul
jecxz
mov
shll
pop
push
pop
mov
xor
adc
and
push
adc
jecxz
mov
inc
outsb
mov
fsubs
loop
iret
sbb
test
pop
sub
arpl
fcomi
jge
add
xchg
adc
in
xchg
orl
call
adc
push
mov
das
or
jo
orl
das
or
and
iret
sub
out
jb
and
daa
movsb
mov
mov
inc
out
lods
sub
adc
aaa
hlt
jnp
mov
aad
cltd
ret
and
cltd
rcrl
mov
pop
push
adc
lods
add
jmp
mov
in
pop
ja
pop
pop
dec
pop
fs
mov
fdivp
add
cmp
ret
dec
jle
sbb
stc
and
std
cltd
dec
gs
push
or
push
push
sub
imul
and
xlat
inc
lock
aas
stos
in
add
push
stc
cmp
adc
mov
fisubl
out
pop
adc
sbb
sbb
cli
dec
xchg
mov
inc
pop
imul
mov
or
in
pop
inc
bnd
movsl
push
jmp
cmpsb
mov
fstpl
add
pop
add
imul
leavew
rcll
in
mov
pusha
mov
xchg
cmp
hlt
dec
gs
mov
lret
sbb
bound
mov
cmp
sbb
pop
sub
scas
lret
clc
sub
cwtl
mov
ret
fwait
mov
sarb
std
testl
pushf
es
cmp
cmp
jecxz
and
or
mov
mov
leave
les
negb
icebp
jo
das
or
xchg
sub
xor
fidivs
or
pop
cli
fwait
shll
mov
enter
fs
and
fsts
add
jbe
mov
arpl
cli
mov
xchg
sbb
hlt
mov
adc
mov
jae
inc
mov
xor
in
and
repnz
and
jle
or
xor
pop
add
add
jo
insl
mov
xlat
xchg
and
sub
push
add
push
push
test
gs
mov
dec
enter
jmp
xor
mov
sbb
sbb
push
icebp
shl
add
or
dec
aaa
out
cmc
lret
icebp
lock
cmpsl
cs
mov
jge
pushf
fisubl
xchg
clc
ss
dec
and
daa
jns
push
xchg
nop
dec
loop
pop
sbb
adc
dec
cltd
mov
sbb
xchg
pop
insl
arpl
xor
les
stos
mov
cs
or
push
sub
push
cs
scas
lock
cmp
jbe
push
outsl
xchg
xor
inc
int3
test
test
cmp
insl
sub
repnz
addl
pop
js
mov
dec
xchg
fs
jbe
cmp
mov
ret
aad
aaa
cmp
sbb
cmp
sub
add
loopne
test
data16
lods
push
mov
inc
push
cmp
xchg
mov
mov
add
xchg
gs
aam
mov
pop
pop
jge
sahf
mov
dec
ret
mov
movsb
daa
sahf
push
inc
adc
daa
fimuls
cmp
in
pop
icebp
xlat
aas
cwtl
inc
lret
stc
cmpsl
ds
add
jle
or
cmc
xor
out
mov
sbb
adc
mov
cld
and
test
pop
inc
scas
push
or
pusha
ds
push
stos
jo
mov
or
int
mov
jne
sub
pop
jnp
xchg
xor
mov
lods
xor
mov
fstpt
mov
in
or
push
pop
jl
dec
outsb
and
in
inc
jecxz
ret
xor
repnz
inc
cmp
xchg
pushf
pop
call
pusha
lods
dec
jg
ss
sbb
insb
sahf
scas
cmpsl
and
dec
fdivrp
jle
loope
dec
stos
inc
adc
ljmp
leave
add
ret
xchg
xchg
popa
loopne
mov
inc
mov
notl
pop
push
mov
popa
jo
popa
or
aam
mov
xchg
fnstsw
xchg
cmpsl
adc
ja
jno
mov
mov
outsl
scas
sarl
int
mov
cmp
xor
adc
dec
jno
rolb
dec
fidivrs
fwait
inc
nop
xor
mov
cmp
rcrl
ret
mov
xchg
mov
int3
rcrl
mov
jmp
xchg
imul
jecxz
sbb
mov
outsl
shlb
aas
inc
cmp
jae
cltd
xor
inc
push
or
repz
movsl
mov
int3
test
movsb
jl
sbb
leave
dec
and
xchg
dec
sbb
inc
mov
jle
cmpsl
xor
mov
add
imul
jo
mov
jmp
lret
icebp
insb
adc
mov
dec
add
int
jbe
sbb
pusha
mov
mov
sub
loope
outsb
jmp
jle
sbb
xor
in
lea
fwait
call
mov
xor
and
pushf
rorb
daa
filds
inc
lret
lahf
sbb
fldt
xlat
neg
fldt
pop
pop
lods
xchg
mov
test
adc
iret
fnstsw
rcrl
or
xchg
dec
lret
xchg
mov
cmpsb
push
fstpl
insb
fsubl
out
cmpsb
push
inc
cwtl
les
test
mov
lcall
xchg
test
bound
pushf
data16
stos
add
mov
fisttps
and
xchg
sbb
inc
push
jae
daa
cmp
arpl
xor
and
inc
out
pop
imul
jg
sbb
or
insl
inc
daa
out
jge
xchg
shrb
and
insb
fldenv
jb
mov
adc
fdiv
sti
xor
lret
nop
cmp
add
out
xchg
mov
in
jb
fsts
mov
movsl
fstl
cmp
push
repz
adc
and
pop
lock
test
ficoml
adc
mov
fcom
push
push
mov
sub
adc
xchg
popa
mov
lock
push
outsl
mov
mov
mov
jne
dec
dec
out
aad
mov
cld
popf
and
push
dec
mov
insb
push
sbb
gs
pop
in
add
mov
pop
mov
push
jge
and
lcall
and
mov
xchg
cwtl
mov
out
arpl
mov
mov
or
jae
mov
loop
adc
inc
adc
addr16
sub
jno
xchg
dec
fnstenv
xor
mov
mov
fiaddl
sbbl
dec
arpl
mov
push
mov
mov
add
imul
cmpsb
cmp
mov
push
pop
and
pop
mov
mov
test
cmp
mov
cmp
or
mov
and
ror
mov
iret
fs
inc
repnz
scas
mov
lods
aam
mov
cmc
mov
ja
adc
cwtl
lret
lods
adc
dec
loopne
sub
cmp
pop
leave
call
das
mov
lock
jb
popa
adc
xchg
pusha
adc
inc
cwtl
out
cmp
fcmovb
mov
scas
or
shll
dec
jo
je
in
jne
cmp
sti
je
sbb
cwtl
sti
pushf
jne
int
dec
std
xchg
add
add
adc
xor
fdivp
fistps
xchg
movsb
cmp
or
cmpsl
loope
jns
mov
and
fcoms
adc
dec
aaa
push
adc
cltd
push
mov
fidivl
jl
ret
fdivr
xor
or
sbb
call
adc
mov
cld
adc
push
and
adc
jae
ja
xor
lds
sbb
fbld
scas
jle
push
push
pop
ficompl
insb
jg
imul
es
in
push
movsl
fwait
test
mov
mov
jl
test
pop
pop
lcall
ret
add
lods
lods
dec
xor
mov
in
adc
add
xor
pop
inc
push
popa
mov
cmp
repz
add
dec
or
fwait
jg
xor
xchg
in
sub
aad
adc
sub
movb
mov
test
jecxz
mov
lea
or
cmp
cwtl
aad
int3
and
pop
out
dec
ja
lods
jge
push
sub
or
sub
shlb
addr16
push
mov
pop
orb
inc
lods
dec
pop
inc
pop
in
repz
or
iret
aaa
and
push
dec
jbe
cmp
das
jl
movl
push
push
loope
roll
mov
clc
xchg
test
mov
jmp
and
lds
mov
pop
mov
andl
ret
xor
xchg
inc
or
fsubrl
mov
jns
sub
es
lahf
data16
dec
les
sub
repz
fxch
pop
in
outsb
inc
mov
fdivrl
sub
andl
lret
fmuls
jae
jae
stc
shrl
xchg
daa
mov
fldt
shlb
stc
in
mov
int3
or
jecxz
xchg
push
or
jge
xlat
dec
ret
adc
fcoml
mov
inc
adc
cmp
add
mov
mov
push
into
sub
into
sbb
out
mov
shlb
or
jne
rcll
adc
ret
xchg
jmp
jle
mov
les
or
adc
push
pop
jmp
jl
xchg
fistpll
fidivrl
sbb
insb
sub
imul
mov
inc
imul
lahf
fwait
xchg
addr16
rcrb
test
mov
jo
xlat
fs
and
xchg
mov
xchg
sbb
xchg
push
fdivs
xor
dec
ds
jae
adc
ds
add
mov
mov
movsb
std
in
jo
adc
mov
repz
push
jle
bound
mov
fbld
inc
pusha
ret
push
fsqrt
sbb
icebp
xor
mov
cmp
stos
fs
ljmp
dec
icebp
out
outsb
data16
sti
mov
mov
addr16
xchg
imulb
pop
push
jno
jbe
pop
inc
dec
ret
cld
or
and
and
lret
in
hlt
sub
jae
lds
add
sbb
ljmp
es
popa
xchg
stc
out
int
ss
xchg
insl
sub
xchg
cmc
jmp
dec
in
inc
pop
pop
mov
js
pop
ja
mov
xor
mov
outsb
mov
inc
movsl
repz
out
sub
push
adc
pop
and
es
dec
movsb
inc
testb
push
sbb
add
or
adc
das
push
fldl
mov
shl
jns
dec
or
inc
xchg
mov
icebp
fs
bound
rclb
pop
mov
xor
test
push
mov
pop
or
cli
adc
lea
pop
pop
jo
iret
cli
jecxz
lock
push
lcall
setne
pusha
add
jo
roll
loop
frstor
jo
clc
aad
sub
push
push
mov
inc
dec
and
xor
clc
add
fisubrs
jo
jae
out
std
sbb
inc
jmp
mov
xchg
push
stos
dec
cmc
push
add
or
scas
test
mov
jl
xlat
stos
je
cmp
xlat
paddd
sbb
lods
xchg
cs
jmp
xchg
lock
push
out
aaa
inc
mov
dec
add
sbb
mov
sarl
pop
xchg
pusha
mov
mov
sub
and
push
aam
mov
or
and
dec
dec
cmpsb
inc
in
push
filds
stc
xlat
mov
lret
mov
rclb
cmp
pusha
js
mov
test
adcl
mov
arpl
cmp
inc
mov
adc
mov
test
lods
test
and
imul
jle
adc
adc
jne
stc
sbb
inc
pop
inc
mov
xchg
fistps
ljmp
jl
in
mov
outsb
xchg
sbb
xor
cmp
add
xor
lods
mov
sahf
popa
ljmp
fcom
aam
aas
mov
jecxz
leave
mov
adc
fcmovnu
in
popf
mov
push
xchg
inc
jg
pop
and
and
movsl
jne
xchg
cwtl
int3
cmp
into
loopne
cmpsl
mov
testb
push
sahf
pop
pop
sbb
add
inc
fadds
sbb
icebp
sbb
add
rorb
mov
sub
pop
mov
pop
aaa
sarb
shrb
adc
std
push
mov
mov
sahf
popf
jmp
sbb
or
mov
std
das
mov
jnp
cld
arpl
adc
fstpl
jge
aaa
flds
arpl
push
movsb
cmpsb
push
pushl
inc
mov
sbb
in
mov
add
scas
mov
bnd
fidivs
pop
out
pop
test
mov
cmc
shlb
and
fs
push
sub
push
push
pop
inc
cltd
pop
mov
sub
push
and
rol
cmp
pop
or
idivb
xchg
rcrb
fdivr
arpl
push
mov
push
lcall
ljmp
mov
imul
mov
dec
jl
aad
leave
or
and
loope
out
xchg
imull
fisubrs
jne
dec
inc
outsb
xchg
cmc
push
hlt
xchg
mov
addr16
mov
je
fiadds
jne
popf
lcall
lds
ljmp
xor
pop
outsb
out
aad
ja
sub
inc
xor
cs
repz
in
push
xor
cmp
sub
or
mov
mov
xchg
mov
shrl
adc
stos
sub
je
jp
xor
sub
sahf
jmp
jno
jns
push
out
cmp
icebp
cmp
xchg
mov
xchg
fs
pop
sarl
dec
lea
popf
and
es
mov
cli
int
into
pop
and
inc
sub
imul
ret
add
je
sub
sbb
test
imul
repz
mov
rol
dec
mov
gs
jecxz
add
incb
shll
adc
loope
data16
cld
mov
pop
repz
xchg
aad
daa
xlat
lret
in
or
ret
cmpsb
lock
xchg
les
fiadds
mov
adc
test
lods
cmpsl
adc
jne
cli
cmp
daa
mov
dec
push
dec
mov
orl
sahf
test
jo
fiaddl
call
mov
jmp
fldl
fcompl
nopl
jnp
les
push
or
xor
adc
push
ja
xlat
aam
jns
sbb
jbe
aam
loope
jne
adc
stos
sub
mov
jns
push
mov
imul
fisttpll
ss
inc
into
sub
inc
add
cltd
icebp
popa
cltd
mul
mov
mov
add
arpl
aas
imul
jno
cmp
sub
sub
loope
pop
sbb
xor
sbb
popf
mov
mov
lock
dec
sbb
adc
rorb
outsb
push
and
add
mov
inc
sub
pop
and
jno
scas
pop
pop
mov
fs
cs
dec
lret
int
add
lds
dec
dec
inc
dec
testb
pop
xchg
cmp
add
push
les
mov
aaa
ss
dec
lods
xchg
jbe
cld
outsb
jbe
dec
push
cmpsl
adc
fadds
xchg
xchg
inc
je
push
dec
stc
ds
call
rorl
pop
out
add
jl
rcr
scas
or
outsb
push
stc
in
add
rorb
xor
xor
stos
dec
sub
cmp
inc
inc
nop
inc
shlb
add
pop
push
fistpl
int3
lahf
pop
jbe
dec
push
les
gs
fdivrs
fsubrp
push
shl
frstor
mov
pop
mov
imul
in
cmpsb
add
cltd
jp
out
bound
popa
test
dec
cmpb
outsb
movsl
mov
movsl
aam
out
ljmp
in
fsubs
jo
imul
mov
movsl
outsl
daa
push
insl
xchg
xchg
push
popf
andb
and
fcomps
roll
not
fs
cld
rclb
sbb
fists
sbb
jbe
xor
jmp
mov
std
ret
test
std
or
mov
add
out
push
mov
fldcw
push
in
jmp
jmp
sub
inc
pop
enter
jle
xchg
inc
sbb
fldl
shl
mov
sti
sbb
sub
cmp
lods
add
inc
jg
pusha
cltd
fs
mov
ljmp
lock
mov
es
or
aad
sbb
dec
adc
cwtl
out
cmc
push
out
adc
sub
mov
stos
mov
test
sub
xchg
sbb
dec
cmpsl
test
nop
dec
mov
push
push
adc
js
shlb
negl
lcall
add
jge
jbe
test
inc
mov
inc
adc
jno
fimull
sub
test
sub
inc
adc
int3
push
aam
sub
push
mov
xor
ret
and
mov
push
push
je
add
out
or
dec
sub
sahf
adc
sarb
pop
cmc
mov
nop
inc
enter
xchg
xor
pushf
dec
mov
in
dec
loope
repnz
shll
enter
xchg
notb
imul
xor
inc
cli
mov
ror
adc
dec
fbstp
push
mov
mov
and
cmp
xlat
mov
push
push
jp
sub
sbb
push
and
pop
or
mov
mov
aad
fisubrl
hlt
sbb
movsb
test
mov
push
sbb
dec
and
addr16
jae
dec
scas
pop
aad
cwtl
xlat
in
mov
mov
push
dec
fisubrs
in
aaa
je
push
clts
mov
loope
repnz
dec
jbe
popa
adc
xchg
cmp
sahf
jecxz
hlt
fdiv
and
fsubr
push
das
fsubrl
into
imul
xchg
daa
inc
sbb
sarb
test
ret
test
jne
inc
push
pop
adc
pop
orl
add
imul
xchg
lahf
jmp
cmpsl
mulb
dec
add
pop
push
dec
dec
pushf
jo
pop
es
popf
cmpsb
call
call
or
loopne
add
ss
pushf
nop
adc
lret
dec
icebp
fsubrs
mov
andb
lret
mov
cmpsb
jmp
cmp
xor
ja
mov
test
jne
outsl
rcll
movsl
pop
rcll
in
ret
add
fcompl
imul
jnp
jl
push
inc
mov
sub
dec
pop
fstpt
aad
inc
mov
sub
mov
aam
fstpl
aam
ljmp
cmp
inc
imul
lret
push
lcall
scas
ret
ret
mov
mov
sti
shll
shrb
les
add
inc
fistps
pop
ds
clc
sbb
cmp
jb
daa
dec
test
xor
pop
cmp
inc
pop
pusha
fnstsw
pop
lock
lods
inc
aad
sbb
or
lock
out
or
add
xchg
mov
addb
cmp
and
dec
mov
pop
inc
arpl
sti
push
or
movsb
inc
aaa
push
pusha
jecxz
notl
jno
push
bswap
leave
and
push
xor
cmc
cli
loop
int
push
icebp
sbb
cmp
or
scas
out
subl
dec
test
repz
int
mov
andb
mov
jmp
mov
cmpsb
jle
cmove
or
subl
sub
xor
repz
and
sub
and
decb
lahf
and
sub
leave
pop
nop
mov
or
xchg
mov
mov
les
sbb
push
into
xchg
ja
lods
aaa
inc
jns
imul
cld
xor
int3
xor
dec
and
push
mov
sub
or
ret
rolb
jmp
xchg
cli
jno
jnp
sbb
pusha
cmpsb
pusha
pop
mov
lret
std
mov
push
pop
sbb
dec
daa
mov
test
cld
xor
daa
xorb
in
dec
in
add
dec
xchg
dec
cmpsl
sub
insb
scas
outsb
xchg
sub
aaa
cmp
push
push
pop
xchg
push
fxtract
xor
cmp
int
jg
imul
jo
mov
and
dec
sbb
dec
arpl
jbe
es
sti
into
mov
and
cltd
subl
sbb
adc
jns
inc
sub
mov
push
cmp
test
cmp
imul
into
fstps
add
shll
int
dec
cmp
bound
jns
test
push
xor
jg
insl
das
add
xchg
mov
jg
sti
sbb
or
adc
clc
aam
daa
inc
js
in
sbbb
imul
or
aas
jb
fdivr
and
mov
pop
lret
lcall
pop
inc
cld
sub
xor
jo
xchg
scas
add
test
in
insl
xchg
or
jp
or
in
nop
jae
dec
mov
adc
xchg
push
pop
stc
and
ds
inc
call
addb
rorb
jl
ss
imul
std
insl
jmp
mov
into
mov
inc
out
out
push
out
fnsave
sarb
dec
lret
cwtl
and
pop
je
sub
out
push
std
dec
xorb
pop
das
adc
fnsave
or
arpl
add
out
sub
adc
incb
imul
cmp
out
dec
or
js
and
cwtl
imul
add
xchg
test
call
dec
push
nop
lods
jb
inc
dec
pushw
mov
sub
push
fmull
rorb
divb
jne
xor
add
add
fwait
push
test
ja
push
ss
mov
daa
dec
ret
mov
jns
call
imul
jbe
pop
cwtl
push
fsubrs
fnstsw
cmc
int3
xchg
sub
shlb
daa
xchg
cmpsl
sub
and
lahf
aad
adc
or
jle
adcl
lret
lock
dec
dec
jmp
jbe
sub
mov
ljmp
ret
aas
mov
jbe
add
xchg
fbld
mov
aas
xlat
mov
mov
lcall
enter
adc
cmp
add
or
fldt
rcll
cmpl
frstor
cmp
jge
xor
fmul
pop
pop
dec
pop
dec
icebp
es
fcoml
in
inc
stos
stc
arpl
pop
cmc
pand
sub
scas
mov
loopne
xchg
push
enter
jo
loope
mov
mov
out
arpl
clc
pxor
fwait
mov
and
pop
ret
push
xchg
je
jg
push
or
pop
sub
lret
leave
js
in
xor
pop
repz
inc
xchg
adc
rcll
ret
xchg
in
pop
mov
iret
fdivrp
add
imul
sub
cmp
and
pop
cmp
popl
adc
sub
sbb
jl
sbb
fwait
mov
cmpsb
in
and
inc
push
xchg
cmp
pop
xchg
or
fidivl
lock
mov
adc
icebp
pop
aaa
dec
adc
xor
fs
or
cmp
adc
mov
pushf
ret
pop
or
push
jl
pop
lods
outsl
hlt
cli
xchg
fnstcw
mov
int
push
jns
nop
insl
ss
xchg
pushf
pop
sub
idiv
loop
imul
hlt
orb
cmpsb
cmpsl
mov
mov
call
outsb
inc
mov
sbb
mov
mov
jge
pop
stos
insb
xor
or
mov
mov
int3
out
sbb
xchg
js
imul
or
sbb
clc
inc
inc
sub
sbb
pop
mov
and
fdivp
push
addb
dec
mov
mov
pop
insl
push
inc
cld
movsb
orb
inc
mov
into
xchg
inc
inc
call
jle
push
stos
push
jb
fs
sub
mov
cmp
push
xchg
fcoml
cmc
int
mov
loop
jb
rcl
gs
stc
sbb
adcl
cwtl
repnz
adc
lahf
inc
xor
xchg
jo
mov
lock
lods
pop
cmp
lea
inc
sub
push
clc
movsl
faddl
test
mov
fwait
mov
push
movsb
mov
sbb
mov
ja
or
jle
dec
jg
pop
jbe
xor
dec
das
and
fadds
mov
sbb
sub
mov
lret
and
sbb
cmp
cmpsl
inc
jmp
std
cmp
cmc
jmp
rorb
sub
in
hlt
sub
cmp
fld
divl
add
push
add
pop
hlt
lea
add
mov
push
cmpsl
xchg
or
pop
shll
fwait
int
xchg
or
cmpsl
mov
cmovbe
push
sbb
sub
sub
sbb
add
fneni(8087
clc
add
pop
scas
adc
mov
sub
and
add
jmp
mov
jl
sub
ror
sbb
bound
js
fwait
daa
push
mov
aam
jae
cmp
or
mov
xchg
notb
ja
jbe
fisubl
aam
xchg
xor
cltd
adc
andl
push
call
mov
mov
dec
loopne
inc
stos
or
jecxz
xchg
pop
jle
outsb
mov
unpckhps
andb
sub
jmp
mov
pushf
dec
das
xchg
mov
int3
cld
fidivrl
fidivs
fildll
cmpsl
popa
lea
stos
out
pop
and
sti
in
and
std
roll
xchg
sub
in
and
jno
jno
repnz
subb
mov
orb
dec
sub
or
pushaw
inc
lods
mov
fiadds
dec
sbb
std
pop
pop
insb
lods
push
inc
xor
cltd
cwtl
bound
fldl
pop
mov
enter
xor
pop
pop
or
mov
mov
daa
out
fidivl
sarb
push
cmpsb
dec
gs
fiadds
jbe
les
inc
xchg
xor
xor
insb
mov
cs
push
and
cmc
push
loopne
divl
rep
mov
sbb
xcrypt-ofb
cmpsl
outsl
jecxz
or
sub
lds
imul
mov
mov
and
mov
inc
cmp
ljmp
lds
jmp
mov
iret
jl
out
mov
fisubs
cld
loopne
xor
mov
jg
call
test
ss
adc
test
call
xchg
jae
inc
stos
jg
jp
xchg
pop
mov
mov
and
dec
dec
cmp
insl
pop
xchg
hlt
mov
mov
xchg
sti
add
arpl
sbb
lcall
jmp
pop
bound
fistpll
stos
gs
push
xchg
dec
jge
and
or
xchg
fmull
inc
pop
adc
sbb
sbb
stc
pop
mov
xchg
fwait
inc
bnd
mov
and
cmp
jne
cwtl
push
cwtl
ja
xlat
xor
sub
insb
mov
xor
sbb
sbb
mul
clc
mov
pop
arpl
test
or
and
pop
dec
pop
xor
shrl
scas
iret
xor
push
xchg
sub
sbb
out
cmp
add
push
push
lahf
and
xlat
fbstp
in
out
jmp
std
pop
pop
push
cld
ltr
jecxz
cli
push
fadds
sbb
mov
pusha
or
cmpsb
sti
jl
lods
cmp
pop
lock
js
inc
mov
jle
sbb
pop
fisttpl
cmp
call
cmpsb
loop
inc
scas
aas
xor
xor
dec
jl
data16
push
push
ds
mov
fnstcw
out
rol
clc
bound
pusha
cmp
lret
das
fsubrl
repz
lock
lods
dec
push
lods
jae
sbb
imul
stc
into
sub
sahf
fisttpl
push
adc
lea
xor
hlt
popa
sbb
add
cmp
repz
insb
lea
jge
sbb
jo
arpl
rclb
int
ret
jle
into
push
inc
inc
lahf
inc
pop
es
iret
orl
cmp
clc
push
xchg
cmp
mov
and
dec
xchg
push
add
mov
mov
addb
inc
popa
xchg
dec
push
and
sbb
cmp
int
and
cmp
stc
dec
sbb
leave
push
mov
dec
adc
scas
xchg
aad
dec
jmp
scas
decl
cmp
sbb
inc
addr16
jge
es
inc
cli
mov
mov
mov
jne
js
lret
and
inc
aam
lcall
roll
dec
call
sub
daa
pop
add
ret
or
jno
cmp
jmp
test
xor
cmp
cmpsl
sbb
xor
out
cltd
adc
popa
push
test
pop
test
sarb
mov
roll
scas
neg
lds
jno
mov
scas
fsts
push
dec
movsb
in
scas
in
lret
inc
repz
loop
pop
dec
fsub
test
jl
xchg
andb
cmpsb
int3
pop
mov
add
daa
dec
dec
mov
out
les
fsubrl
sbb
arpl
adc
jae
xchg
popf
inc
or
mulb
pushf
aas
dec
lock
mov
or
call
loopne
jmp
lahf
xchg
insb
fnstcw
lods
pushf
mov
je
jne
or
push
dec
sti
push
cmp
lret
sbb
insb
xchg
stc
outsb
dec
xor
mov
pop
cld
fisubrs
mov
and
mov
xchg
lds
push
sub
xor
and
leave
cli
sbb
sub
cmp
mov
outsb
and
gs
dec
insl
cmp
sbb
jl
fidivrl
lods
xor
mov
jl
std
ret
add
push
negb
sbb
inc
cmp
pop
jle
andb
in
ret
dec
fisttps
and
hlt
push
jo
mov
mov
cmp
je
push
mov
jns
test
or
xchg
imul
inc
fsincos
pop
xlat
inc
sub
in
push
mov
mov
push
mov
sub
shr
lcall
xchg
push
in
movsl
cmpsb
out
jmp
dec
cmpsb
and
push
in
jl
scas
data16
or
sub
inc
cmp
addr16
repnz
cmp
mov
movsb
and
leave
inc
dec
sbb
inc
ds
das
lahf
jns
mov
js
adc
pop
jae
adc
pushf
pop
fstpl
fnstcw
call
sbb
inc
clc
adc
xlat
mov
aad
mov
mov
cmp
push
inc
xlat
scas
ljmp
sub
dec
int
movsb
mov
sbb
adc
lods
ss
out
ja
cmp
mov
test
lret
daa
outsl
mov
repz
adc
pushf
sub
daa
call
cli
pop
cmpsl
jns
enter
inc
lcall
cmp
add
jecxz
or
fmuls
lock
int
in
adc
mov
aas
sub
mov
aaa
negl
push
mov
frstpm(287
pop
sbb
popa
mov
in
int3
loop
mov
or
leave
nop
inc
adc
cltd
and
mov
adc
and
cmpsb
jl
scas
push
push
jb
call
shl
add
or
mov
inc
mov
dec
sbbb
sub
cmp
cld
jge
or
push
rol
dec
in
icebp
dec
imul
fsubs
adc
incl
sub
mov
mov
scas
xchg
mov
and
cwtl
scas
aas
out
int
ljmp
loope
push
iret
xor
aaa
inc
dec
outsl
xlat
push
mov
add
aam
sbb
xchg
pop
sub
push
sar
sub
jbe
cmpsl
xlat
fists
jne
and
or
ret
pop
fdivl
imul
call
stos
jle
cmp
pop
adc
or
push
jle
add
jg
jne
jo
dec
cmc
mov
jg
and
mov
cld
jae
ficoml
mov
push
inc
pop
xchg
xor
dec
fnstcw
add
setg
rcrb
push
stos
ljmp
xchg
add
nop
add
dec
stos
roll
test
cmc
nop
and
adc
mov
push
iret
dec
fadds
outsb
mov
mov
mov
int3
cltd
rcrl
mov
ret
cmp
cld
mov
mov
adc
xor
lods
lcall
pop
xchg
cltd
mov
clc
aad
js
add
cmpsb
inc
mov
add
dec
or
addl
fs
push
push
sub
and
ret
mov
pushf
daa
mov
push
fildll
popf
js
mov
cmpsl
scas
test
sbb
sbb
fidivs
jl
xor
and
dec
js
les
mov
jbe
pop
test
xor
inc
addr16
xchg
lea
ja
enter
jo
inc
adc
inc
mov
xor
and
ds
cli
lds
test
sub
or
les
push
jmp
dec
cmp
clc
xchg
xor
mov
cmc
push
push
test
sub
movsl
cmpsb
adc
test
cmpsl
into
dec
mov
mov
jg
adc
lods
scas
data16
fwait
ds
push
mov
add
lahf
push
fs
xchg
insb
adc
stos
mov
adc
pusha
pop
data16
shlb
popf
ljmp
sbb
jmp
aad
fidivs
adc
dec
jle,pt
pop
dec
mull
int3
fs
adc
stc
mov
imul
mov
je
mov
mov
stos
push
adc
pusha
cmp
mov
jle
jecxz
xchg
mov
mov
push
loope
cmp
xchg
pop
int
xorb
xorb
push
push
inc
fadds
push
xor
dec
int3
inc
cmpb
movsl
subb
push
out
ds
fwait
mov
pop
or
call
or
in
inc
loopw
jle
rcrl
sbb
sub
or
and
in
dec
out
ret
aaa
dec
mov
dec
mov
jo
fcompl
call
loopne
orl
sbb
int
cli
mov
pop
negl
popf
xchg
out
pushf
add
into
scas
cmp
mov
sub
fwait
mov
fsubl
or
mov
jne
icebp
lea
enter
pop
addr16
xchg
or
and
mov
mov
mov
hlt
ja
out
sbb
lds
repz
xor
jnp
cld
adc
cli
out
dec
imull
sub
mov
cmp
mov
iret
pop
lods
cmp
gs
pushf
fs
mov
rcrl
dec
into
pushf
jmp
push
cmp
movsb
test
sub
mov
mov
fdiv
mov
rolb
aas
mov
out
das
subl
fidivrl
push
pop
roll
pop
push
push
mov
pusha
sbb
jb
jae
sub
xor
xchg
sti
mov
pop
popa
jg
jae
mov
xor
jecxz
leave
sbb
repz
jb
jecxz
jg
shl
ljmp
enter
cld
out
xor
cmp
cmc
adc
mov
and
inc
subl
lea
or
js
pop
sbb
mov
sub
jecxz
cmc
pop
loope
pop
push
roll
shll
mov
push
inc
into
lods
out
ds
aas
pop
pop
xor
data16
xorl
push
sbb
incl
mov
jo
mov
fwait
jns
mov
jnp
js
mov
enter
insb
lcall
push
test
mov
pop
xchg
xchg
sub
call
mov
push
inc
sti
ljmp
fsub
in
and
cmp
push
aaa
sub
test
scas
pop
inc
cmpsb
cmp
nop
mov
and
mov
gs
xchg
imul
inc
jge
incb
mov
dec
int3
les
add
sbb
push
pop
mov
pop
rorl
jae
ljmp
sub
jmp
push
aam
xor
cmpb
divb
aaa
and
push
lock
mov
in
dec
in
and
mov
jnp
sub
aas
sbb
mulb
stos
lret
jle
sbbb
xchg
adc
xor
sub
scas
xchg
sub
pop
and
out
movsl
pop
xor
movsb
push
out
pop
stc
roll
push
mov
cmp
enter
push
mov
add
sbb
sbb
adc
add
jno
add
ret
sub
mov
das
mov
xor
repz
inc
cmp
cmc
pop
and
iret
cmp
mov
iret
pop
mov
in
ljmp
arpl
push
xchg
or
fiadds
mov
push
stc
mov
test
push
rorb
aas
fwait
es
sbb
or
int3
adc
sbb
hlt
add
sti
mov
mov
rcr
fs
inc
gs
fs
pop
in
mov
test
insb
inc
push
jmp
leave
push
test
lcall
dec
lock
cs
inc
pop
insb
pop
je
or
sub
mov
int3
or
push
dec
add
push
or
int3
mov
ret
ds
mov
sbb
popa
pop
mov
mov
enter
shrl
mov
ror
adc
cmc
sbb
mov
loopne
mov
cmp
pop
les
cmp
mov
movsb
pop
push
inc
mov
es
pop
cmpsl
cmp
mov
out
dec
pop
fiaddl
push
lret
push
fsubrl
and
inc
bound
sbb
aam
jnp
sbb
push
fdiv
jo
jecxz
fldenv
lret
xchg
loope
ss
and
das
int3
pop
xchg
mov
mov
pop
add
sbb
inc
rol
in
pusha
shll
lods
and
xchg
add
mov
outsl
je
and
or
or
sarb
xchg
arpl
or
lds
pop
popa
sbb
and
and
cmc
push
mov
inc
jl
int
dec
imul
subb
divl
xchg
jp
jge
mov
sbb
fwait
cmp
mov
sbb
sbb
jp
add
jae
lock
mov
mov
sbb
loope
xchg
mov
imul
mov
inc
or
out
push
or
dec
xchg
mov
adc
jb
fldenv
push
cmp
sbb
sub
sub
cli
inc
xchg
cmp
aam
lds
test
test
xor
inc
xor
pop
out
scas
mov
jbe,pn
aad
push
out
cmp
fcompl
xchg
loop
dec
mov
and
js
xchg
jle
inc
mov
out
subl
xor
xlat
jno
sbb
or
jno
repz
mov
mov
les
pop
int
push
das
dec
scas
mov
cmp
jle
adc
mov
and
jecxz
pushf
mov
sbb
inc
scas
cmp
test
xor
mov
sub
mov
popa
aas
stc
adc
cld
inc
inc
inc
icebp
repz
out
push
push
stos
fcmovb
push
xchg
sub
push
mov
pop
xorl
mov
je
outsl
repz
lods
pop
pop
or
cmp
mov
xor
popf
shll
arpl
jg
pop
sub
cmp
sbb
int3
lods
addb
test
or
lock
stos
lods
lret
cmc
imul
adc
mov
xchg
mov
rclb
jle
out
sbb
inc
mov
pop
xchg
shll
mov
jo
jnp
or
clc
sub
or
dec
in
pop
xlat
sbb
jge
and
or
push
jns
cmpsb
mov
and
lahf
inc
cmpsb
cmp
pop
push
mov
cltd
xchg
mov
sbb
and
jp
lret
mov
pusha
call
mov
sub
je
imul
icebp
adc
lock
pop
ja
loope
xchg
fbstp
fldenv
adc
lea
clc
and
popf
cmp
lret
inc
cwtl
movsb
or
push
or
les
xchg
mov
lret
scas
test
cmc
ret
or
loop
mov
test
adcl
popl
cmp
hlt
mov
fisubrs
jmp
xchg
xor
jp
cld
fimull
stos
pop
clc
out
js
jecxz
mov
push
shl
ja
mov
popf
rcrl
ss
sbb
mov
pop
insb
push
push
js
xor
stc
pop
mov
jl
pop
jl
sub
mov
pusha
cs
and
xor
mov
popf
lods
jmp
into
or
and
pop
sti
jae
cmp
pop
out
lahf
repz
mov
adc
sub
xor
fcoms
andb
xchg
ficoml
rcll
mov
inc
mov
clc
lahf
lods
pop
pop
jg
xor
jle
cli
mov
cmp
or
lods
out
ljmp
punpckhbw
sub
scas
pop
xor
xchg
aas
sub
enter
pop
pop
adc
inc
sub
add
xchg
stc
popf
adc
pop
lods
jns
adc
lea
add
push
xchg
sbb
cmp
dec
inc
dec
lret
mov
int
pop
pop
cltd
pop
and
push
jg
push
lcall
mov
xor
xor
cli
sbb
pushl
pop
dec
add
ss
cmp
fsub
flds
movsl
or
gs
scas
fs
fistpll
push
stos
jmp
in
xchg
xchg
test
sbb
loopne
loop
sbb
sub
ror
scas
xchg
dec
or
leave
inc
popa
cltd
sbb
and
mov
loopne
gs
cmpsl
jo
sub
push
and
lods
lods
imul
mov
mov
mov
adc
mov
xor
ret
test
popf
adcb
jl
rolb
jl
push
cmp
outsl
imul
mov
cmp
adc
cmpl
out
lock
fidivrs
iret
stos
pop
cltd
sbb
mov
fidivs
addb
cmp
sub
sbb
addr16
add
mov
xor
cmpsl
cmpsl
xchg
cltd
inc
and
xchg
inc
movmskps
ret
adc
sub
cmp
push
pop
cmpsb
mov
inc
mov
cmp
sti
leave
xchg
enter
rolb
shll
pop
popf
aaa
out
adc
mov
mov
cmp
sub
std
shrb
mov
pushf
mov
adc
sbb
mov
lds
and
pop
ja
pop
xchg
mov
clc
lock
cs
adc
fnstsw
outsl
or
pop
and
mov
pop
add
mov
xor
xor
dec
in
fwait
add
daa
pop
cwtl
xor
cs
hlt
cmp
test
insl
pop
mov
movl
ds
js
sub
leave
or
sar
fwait
cmp
jmp
out
xchg
xor
cmc
push
and
sub
ffreep
pop
ds
test
cwtl
out
sbb
sbbb
scas
inc
mov
xchg
adc
sar
inc
sbb
add
aas
adc
xor
insl
fcomp
nop
mov
mov
xor
xchg
mov
nop
mov
mov
je
scas
xor
in
fwait
insb
cmp
sbb
dec
add
mov
or
aas
inc
insb
cmc
cmpsl
cwtl
stos
sub
fadd
sub
and
sub
or
in
out
sub
rorl
mov
dec
adc
push
aad
mov
push
adc
inc
mov
push
or
sbb
in
jp
aam
or
push
int3
jbe
dec
add
pop
stos
arpl
pop
in
mov
mov
or
xchg
dec
test
jge
movsb
adc
repnz
test
cltd
mov
push
adc
lods
hlt
mov
inc
dec
jo
xchg
out
imul
cmp
mov
mov
inc
push
cmp
lcall
shrl
xor
mov
arpl
ds
mov
hlt
cmp
int3
stc
add
sbb
cmc
push
cmc
pop
arpl
cmc
push
in
lret
inc
xlat
ss
xchg
sbb
ret
mov
sarb
add
adc
pop
push
push
inc
xchg
std
insl
lock
enter
jle
inc
sbb
add
add
loope
inc
xor
jnp
in
sbbl
sub
popa
sahf
pop
or
and
mov
orl
arpl
pop
int
add
cmpsb
mov
loope
pop
xchg
cmp
in
in
or
mov
cmp
dec
mov
fwait
cmpsl
dec
out
sub
jg
adc
aam
fimull
dec
mov
pop
repnz
mov
mov
xchg
enter
js
mov
mov
movsl
dec
mov
das
push
fwait
ljmp
xchg
std
xchg
aas
test
or
pop
sbb
aaa
mov
pop
fistps
gs
popf
icebp
cmpsb
sub
jmp
mov
or
jl
iret
sbb
std
add
mov
xchg
push
repz
sub
or
movsl
int3
add
push
add
adc
cmp
pushf
insb
fdivs
sub
and
mov
xchg
push
push
and
stos
dec
ds
adc
lahf
notl
call
dec
inc
loop
mov
jge
adc
mov
xor
aaa
lahf
jns
mov
pushf
sbb
cwtl
pop
ret
adc
stos
sbb
bound
sti
stc
cmpl
pusha
inc
rorb
arpl
jp
in
aam
xor
and
imul
mov
lock
or
xor
sbb
imul
adc
orl
cmc
mov
pop
inc
pop
pop
inc
addr16
pop
xchg
fiaddl
inc
test
lods
mov
repnz
sahf
lea
xor
pusha
pop
pop
mov
push
imul
or
and
mov
in
mov
sahf
xchg
in
call
or
xchg
das
cltd
or
call
mov
add
std
ja
das
outsl
xor
add
fdivrs
jo
add
nop
lods
sbb
mov
xor
psubusb
ret
call
in
pop
push
es
push
pop
and
add
dec
adc
ret
mov
mov
and
mov
notl
mov
add
clc
push
push
lahf
in
int
rclb
sbb
xlat
jae
mov
add
mov
and
pop
cmpsb
pop
push
inc
out
and
outsl
outsl
int3
shl
cmpsb
mov
pop
add
mov
inc
mov
pop
out
mov
push
sbb
cld
aas
xor
jl
popf
jne
repz
aas
cs
or
xchg
pop
sbb
and
es
cmpl
rcrl
fs
mov
outsb
popa
nop
lock
fists
sbb
xor
xorb
cmpsl
les
and
push
xorb
pop
mov
push
lret
mov
push
xchg
push
push
lahf
imul
ret
shll
or
icebp
repz
sub
daa
pop
xchg
lock
sbb
inc
cmp
jno
adc
fisubl
ljmp
mov
push
int3
dec
jg
mov
mov
push
test
add
aad
cld
lds
cmc
sub
hlt
jecxz
cmp
sbb
test
mov
rclb
cmc
cld
pop
cmpsl
cmpsb
rorb
pushl
cld
and
mov
xor
cmp
notl
mov
push
push
adc
mov
cmpsb
mov
int3
lcall
push
je
enter
xchg
es
adc
mov
pop
and
lcall
xchg
jno
push
ror
cmpsb
insl
and
cmp
iret
lods
inc
and
add
rclb
pop
sahf
out
out
loopne
and
jns,pn
lcall
or
cmp
and
mov
ljmp
pop
push
pushf
inc
mov
jae
arpl
pop
sbb
cmp
xor
mov
push
lods
rcr
add
sbb
mov
push
dec
std
out
xchg
ret
adc
jmp
sub
jb
lea
mov
add
lret
jp
adc
sahf
ja
fidivrs
shl
cmp
popf
std
or
inc
cmc
fmuls
mov
repnz
pop
jp
lock
popa
push
xor
ds
cmpl
xor
lret
sbbb
pop
jge
outsb
adc
jp
dec
or
lods
cmpsl
es
dec
jmp
fmuls
mov
xchg
pop
xor
loopne
cmp
mov
sub
mov
shr
inc
add
sbb
daa
lss
data16
add
cs
insb
xchg
inc
fnsave
roll
mov
push
pusha
or
xor
mov
stos
adc
and
inc
loope
loope
subb
push
jg
imull
mov
mov
sub
jmp
scas
add
stc
mov
fcompl
jns
mov
push
push
es
loopne
push
das
inc
lahf
hlt
cwtl
xchg
ret
add
pusha
add
arpl
mov
mov
adc
and
sahf
xchg
out
add
pop
or
dec
sub
and
rorb
push
mov
mov
stc
mov
adc
in
mov
xchg
jp
or
jp
in
ret
jne
jne
pop
inc
or
jb
jo
and
mov
jp
pushf
dec
out
pop
push
push
bound
xchg
ret
mov
sti
dec
clc
fimuls
jle
int3
mov
push
pushf
ret
dec
cmp
push
stos
cmp
loop
jb
test
xorl
mov
je
nop
mov
call
ja
or
lcall
fcoms
aas
in
addr16
les
ret
cmpsl
sbb
mov
inc
dec
inc
jge
adc
dec
orl
rolb
and
in
inc
xchg
subl
xor
xor
mov
and
and
mov
aad
add
or
push
psubsb
ss
sbb
adc
lods
in
add
mov
xor
sbb
xchg
or
gs
and
lret
mov
jecxz
mov
cltd
xchg
lret
test
imul
jnp
mov
lods
fldcw
addr16
xor
sbb
jge
mov
outsb
test
aam
ret
leave
push
rorl
int
xchg
scas
loopne
mov
repz
ds
jmp
xchg
pop
mov
cmpsb
lahf
call
aas
xchg
xchg
inc
mov
js
mov
inc
sub
out
cmpb
push
fwait
xlat
adc
inc
xchg
xor
imul
lret
xor
inc
push
test
call
dec
jae
test
mov
sub
shrl
push
cmp
and
movsl
or
sbb
int
insl
loope
pop
aas
push
mov
dec
lods
or
mov
sbb
mov
ret
pop
in
mov
cmp
or
btc
push
add
in
notb
imul
adc
xchg
fwait
ret
in
stos
dec
jbe
mov
inc
lret
inc
sarl
vcmpnlt_uqss
pop
mov
adc
dec
filds
ds
into
jge
hlt
cmp
mov
mov
xor
mov
or
adc
std
fwait
ret
test
cmp
cmp
push
lods
mov
pushf
pop
sbb
sub
lods
mov
aaa
nop
xlat
sbb
dec
lret
jl
clc
push
fisubl
ljmp
mov
jmp
into
and
add
shlb
lock
mov
mov
adcl
jecxz
or
adc
lock
pop
movl
push
and
adc
push
sbb
int
mov
pushf
fldcw
and
lcall
pop
xor
sahf
mov
test
repz
xor
jne
shlb
scas
add
mov
push
scas
mov
or
adc
test
aaa
xorb
mov
cmp
andl
lcall
idivl
outsb
and
test
jae
mov
sub
sbb
lods
scas
adc
cmc
lcall
shrb
lods
lods
inc
gs
push
inc
adc
imul
shl
lahf
hlt
push
cmpsl
sbb
sub
cwtl
xchg
mov
and
popf
ja
fdiv
mov
cmpsb
adc
jns
stos
mov
cld
dec
idiv
out
jmp
cld
jae
ljmp
test
inc
dec
fdivrs
lea
jle
dec
das
cmp
int3
push
cli
xchg
aaa
xchg
int
push
mov
cli
into
jle
mov
xor
pop
jb
adc
jnp
int3
cld
xchg
lret
inc
mov
mov
mov
popa
imul
jle
int
inc
mov
fadds
popa
sub
dec
xchg
mov
mov
cli
sbb
cli
ds
adc
or
pushf
mov
dec
jge
inc
xorb
lcall
push
dec
inc
scas
pop
mov
cmp
sarl
pop
movsl
popa
sbb
lods
arpl
or
sbb
mov
mull
sahf
mov
dec
xorl
mov
mov
aad
or
ret
ret
dec
sbb
mov
add
mov
ljmp
loope
inc
jmp
test
in
xor
add
into
adc
push
pop
lds
test
inc
mov
mov
or
jo
cmp
add
int3
add
jmp
insb
add
sbb
mov
aaa
arpl
or
and
ljmp
jg
ret
loopne
mov
lods
adc
mov
call
mov
jbe
repnz
or
mov
jnp
xor
or
mov
dec
test
adc
cmpsb
pushf
push
insb
cmpsb
mov
lcall
mov
push
movsb
xchg
mov
mov
sysenter
or
mov
xor
adc
clc
movsl
lods
xor
add
js
xor
mov
rorb
mov
stc
cmp
pop
mov
aad
dec
mov
in
gs
lock
mov
dec
aaa
dec
lea
loope
cmp
sbb
addr16
dec
leave
xor
mul
push
add
icebp
test
mov
push
adc
movsb
mov
mov
dec
movb
cltd
push
lods
or
push
pop
cltd
les
repnz
dec
sub
cld
mov
mov
xchg
inc
mov
inc
fiaddl
subb
jecxz
outsl
lea
mov
scas
mov
stos
dec
pop
pop
adc
js
addl
fs
sub
cmp
loopne
add
enter
push
xchg
das
sub
movsl
dec
adc
add
das
add
incl
fmul
cmp
or
mov
push
xchg
push
fstpt
cmpsl
pop
cmp
jg
mov
cmp
jle
sub
inc
scas
adc
scas
dec
push
shrl
incb
int
int
jae
xlat
pop
pop
jnp
mov
loopne
fdivrl
inc
movsl
ret
icebp
repnz
mov
push
sub
mov
cmp
cmp
mov
mov
pop
pop
ffreep
mov
outsb
movsb
das
fs
mov
fisubl
roll
push
mov
int
test
sbb
xor
in
dec
mov
out
sbb
and
and
lret
jecxz
out
ljmp
sbb
xor
lcall
mov
adc
add
dec
xor
push
les
lds
in
mov
sbb
into
lahf
outsl
cwtl
jae
iret
int
aaa
push
push
sub
in
cmpsb
pop
inc
xchg
mov
cltd
push
enter
ficoml
icebp
cltd
lret
or
shrl
mov
xchg
nop
jbe
aaa
lock
fldl
add
and
xchg
out
sub
movsb
xchg
push
in
insl
out
mov
pushf
mov
fs
loop
lcall
scas
pop
jno
adc
mov
dec
adc
add
dec
pop
jbe
dec
jge
dec
movsb
mov
xor
cmp
jecxz
push
inc
push
js
push
clc
xchg
inc
loopne
imul
dec
cmp
in
shll
shrb
jb
cltd
mov
andl
in
shll
scas
xor
sbb
dec
push
xchg
dec
ljmp
pop
fsubrs
sub
stos
lods
sub
stos
add
mov
jle
ja
ljmp
or
mov
lock
leave
cmpsl
adc
dec
insb
jp
jns
popf
fsubl
packssdw
int3
adc
jecxz
jl
cmp
lods
jne
pop
or
mov
subb
jg
push
out
push
mov
cmp
jbe
daa
and
push
shlb
cmp
pushf
add
mov
push
mov
push
ja
insb
or
pop
shrb
and
fdivrl
in
cwtl
and
lret
sub
inc
cmp
dec
call
lret
ja
pop
ret
addps
arpl
arpl
push
pop
pusha
xor
mov
mov
pop
xor
clc
out
cld
cmp
rcr
mov
cmp
ret
cmpsb
xchg
rcrl
or
xchg
mov
adc
lods
mov
lret
daa
push
mov
lods
jp
es
xchg
adc
jg
insb
cwtl
sub
dec
mov
popa
mov
cmp
push
or
repz
jbe
push
mov
inc
stc
shr
push
mov
inc
push
dec
cli
sbb
in
sbb
or
scas
repnz
jmp
ljmp
xor
mov
lcall
fs
jle
mov
jecxz
in
scas
cli
out
movsb
xor
or
es
dec
ret
sub
mov
jg
js
adc
add
dec
imul
loope
sub
or
mov
dec
mov
es
inc
frstor
js
mov
push
repz
add
dec
jno
jg
push
es
sbb
out
into
aas
imul
xor
xchg
xchg
dec
cli
into
sbb
add
xchg
outsb
addr16
xlat
or
lret
push
lods
pop
fidivrl
shlb
insl
stos
pop
cmp
or
jmp
popa
inc
push
xchg
movsb
pop
movsl
sub
jbe
fdivs
pop
add
stos
aad
cmp
xlat
cmpsb
dec
push
sbb
sbb
bound
rclb
data16
jg
aas
in
cmpsl
mov
fwait
mov
or
fcomp
pop
pop
or
les
adcl
jmp
xor
stos
push
nop
movsb
into
sub
in
fsubrs
xchg
sbb
in
int
dec
inc
pop
adc
inc
jle
and
jp
fstl
in
xchg
es
insb
bound
add
adc
cmp
adc
xchg
in
stos
or
repnz
xor
pop
xchg
or
in
jbe
xor
stos
int3
repnz
push
or
cmpsl
pop
in
push
cmp
and
test
loope
dec
cmp
dec
or
in
xchg
leave
push
ret
int3
orl
stos
mov
pop
es
imul
ret
movsl
mov
add
imul
lret
mov
out
in
stos
dec
add
iret
fildll
mov
in
addr16
out
fmull
gs
pop
xor
loop
xchg
shlb
dec
cwtl
lret
out
fstl
lds
xchg
mov
sbb
divl
lods
je
pushaw
sbb
mov
cmpsb
ret
mov
mov
mov
insb
push
je
ss
jno
shll
or
sbb
subb
loope
or
mov
fs
fs
add
clc
pop
push
sub
rcrl
das
mov
nop
jno
rolb
sbb
add
sub
jle
shl
mov
jne
and
and
test
andl
into
femms
fwait
out
xor
xchg
jg
add
filds
pop
test
into
int
int3
and
push
mov
and
js
jecxz
aad
fadds
nop
cmc
fs
fisubrs
ret
mov
test
fimuls
pop
jno
imul
mov
aad
sahf
daa
mov
xorl
adc
into
jae
scas
jp
cmc
outsl
sarb
mov
std
push
and
pop
xor
jb
inc
es
mov
mov
jp
ret
dec
push
in
test
add
lods
cli
test
mov
mov
xor
sub
lcall
push
jbe
pop
add
mov
sbb
push
mov
rolb
andb
inc
push
popf
pop
push
mov
dec
jo
movsb
rclb
mov
push
fbld
addr16
pop
testl
mov
scas
mov
jg
mov
sti
sbb
fwait
cwtl
jp
stc
daa
or
cltd
mov
addr16
lea
sub
dec
fisubl
test
lock
cmp
adc
stc
not
pop
bound
stos
xchg
rcl
lods
data16
lods
jne
sbb
cmpsb
fnstenv
mov
and
pop
in
jl
mov
adc
cli
ljmp
adc
fs
push
popf
sbb
pop
sbb
xchg
mov
fst
adc
adc
jl
xor
fsubr
mov
cmc
lods
jo
jp
shl
mov
mov
rolb
xchg
xchg
ror
pop
jb
hlt
pop
mov
push
inc
push
movsb
aas
push
cmp
mov
out
mull
mov
shl
pop
xchg
flds
out
outsb
push
stc
xor
lods
push
or
jecxz
test
rol
mov
pop
mov
push
std
inc
enter
dec
sbb
xorl
orl
ja
cmp
sub
js
jmp
push
addr16
dec
lock
popa
adcl
insl
inc
mov
mov
lret
sbb
push
jecxz,pn
xor
adc
xchg
xor
clc
movsl
mov
in
adc
in
push
jmp
jg
loopne
ret
mov
imul
lds
sbb
aas
out
adc
popa
ds
jnp
into
xchg
or
jo
decl
imul
addr16
xor
mov
mov
aad
stos
inc
and
dec
outsl
xchg
xor
push
mov
xchg
mov
push
mov
xchg
hlt
dec
pop
inc
in
xchg
popa
adc
and
mov
adc
popa
or
inc
and
mov
popl
mov
aam
jne
adc
scas
jnp
pushl
sbb
cs
loop
cmp
mov
xor
stos
ficoms
pop
in
xchg
in
mov
mov
pop
stc
jecxz
ficompl
insl
imul
int
fcoml
or
mov
mov
test
jmp
push
arpl
adc
xor
subl
lret
aaa
xchg
std
mov
mov
dec
xor
jne
shrl
clc
dec
add
mov
orb
das
xor
pushf
repz
jmp
test
stos
mov
push
mov
lea
or
inc
xchg
push
jmp
lret
cmp
cs
std
push
fists
negw
scas
inc
addr16
scas
inc
iret
enter
or
out
and
or
and
add
sbb
pop
fnstenv
add
shll
lahf
addl
cvttps2pi
mov
jo
dec
popa
cltd
cwtl
mov
dec
adc
dec
push
pop
mov
test
and
xor
inc
outsl
das
cmc
ljmp
ficoml
into
mov
inc
aam
rcll
movsb
fdivr
adc
movsb
mov
cmp
push
xchg
push
push
inc
sahf
fwait
jmp
mov
add
dec
mov
mov
sub
cmpsl
lods
jne
jno
push
jae
mov
dec
pop
stc
loopne
xchg
dec
lahf
sbb
call
push
das
cli
push
mov
cmp
cmpsl
sub
jp
mov
xor
inc
outsl
shr
mov
xchg
rcrb
xor
jle
xor
push
clc
andb
sub
shrb
js
repz
js
repz
andl
nop
imulb
sarb
push
sub
mov
and
ret
cmpsb
dec
inc
popa
roll
dec
cld
stos
push
mull
stc
sahf
adc
sub
addl
cmp
loopne
fcompl
ja
adc
dec
insb
outsb
lods
int
xchg
pushf
sub
adc
and
cltd
add
fidivl
jnp
shr
imul
jmp
push
jo
cmp
cli
mov
pusha
jp
stos
add
cmc
popa
mov
je
sub
pop
pop
repnz
and
out
inc
sbb
lds
push
loop
leave
fldenv
jne
int
pop
data16
and
aad
jbe
pop
lods
fstp
hlt
dec
sbbb
popa
adc
inc
xor
mov
cmp
cmp
push
mov
outsb
push
cmp
jge
iret
or
in
outsb
push
shl
sbb
inc
loopne
mov
xchg
mov
jno
fisttps
test
aam
push
cmc
mov
inc
sbb
ss
dec
div
les
pop
lret
xchg
push
mov
ret
nop
xor
andl
cld
stos
adc
jle
mov
jecxz
fistps
sti
test
adc
sbb
lods
push
push
clc
test
jb
daa
loope
fsubrl
and
mov
stc
dec
inc
adc
jbe
inc
or
push
sub
sub
push
aaa
loop
xchg
cs
cmp
jmp
dec
lea
pop
and
popa
pop
in
loopne
lret
es
insl
push
rcrl
mov
sub
push
add
out
enter
bound
gs
sbb
in
xchg
pop
icebp
add
or
adc
mov
sbb
in
push
test
mov
daa
pop
xor
adc
aam
cmp
lret
daa
and
pop
mov
xchg
cwtl
sbb
imul
mov
push
jnp
inc
retw
dec
inc
std
jns
testl
popa
lea
sarb
ds
jmp
mov
dec
in
pop
ja
xchg
push
adc
push
sbb
repz
in
outsb
dec
les
push
test
sbb
jl
inc
or
popf
push
repnz
dec
mov
rcrb
pop
or
push
dec
jo
shlb
push
es
lock
add
dec
dec
xchg
add
imul
cmp
mov
mov
cltd
lret
jmp
pop
in
jno
js
push
js
mov
cld
cmc
addl
loop
jl
cli
adc
enter
je
into
or
inc
dec
das
aam
xchg
xor
fildl
pop
dec
leave
icebp
out
push
shrl
jnp
cmp
arpl
add
push
cmpsl
and
push
repnz
sub
or
movl
imul
popf
push
mov
shlb
test
jmp
test
fdivrs
unpcklps
push
arpl
out
dec
jo
xchg
test
pop
scas
in
cmp
out
popf
in
jo
cli
jb
inc
cmp
sub
add
incb
test
js
push
inc
cltd
sub
cli
push
pop
push
dec
jnp
in
xchg
dec
jl
mov
decl
sbb
ss
or
push
pop
xor
xchg
mov
mov
lret
mov
outsl
testb
pop
nop
sbb
or
adc
mov
add
lea
aas
mov
xchg
lds
sub
jl
sub
stos
mov
lods
pop
jmp
push
pop
add
cmp
not
icebp
lcall
sbb
clc
pop
adc
data16
add
cmp
push
ss
mov
je
inc
mov
fchs
cmp
xchg
or
dec
and
mov
cmc
ret
adcl
addr16
stos
mov
aas
fnstsw
push
mov
in
and
inc
pop
xor
out
loopne
push
test
sahf
and
fsubrl
jecxz
movsl
jb
sub
jno
insb
sarl
add
push
mov
sarl
fwait
cmp
outsb
popf
lret
mov
add
push
dec
inc
pushf
iret
xchg
dec
xlat
popf
lret
lret
rcrb
inc
lock
xor
mov
xor
dec
pop
sbb
mov
negb
inc
and
out
test
sbb
out
inc
xor
out
shrb
jge
addb
out
mov
cwtl
pop
mov
jae
push
add
push
sub
loop
jmp
pop
test
pop
sbb
and
nop
out
jnp
mov
pusha
mov
jge
jne
adc
jl
ss
in
fstpt
cmc
call
push
andl
sbb
jnp
and
sub
pop
bound
inc
push
cmp
sub
xchg
popf
repz
push
popf
pushf
push
popf
icebp
xor
and
inc
loop
loopne
sbb
fnstsw
adc
or
inc
mov
sbb
cmp
mov
pushf
add
sbb
fsubrs
aaa
push
nop
je
mov
or
dec
xchg
xchg
xor
push
popa
dec
and
ljmp
ficompl
adc
cli
jae
fildll
das
pop
out
shlb
or
lock
leave
jns
mov
mov
adc
rorl
repz
aas
arpl
pop
sub
inc
pop
mov
jbe
push
imul
adc
ja
inc
and
jg
and
orb
mov
sub
fwait
dec
pop
pushf
fcompl
ja
jae
adc
btr
inc
imul
inc
xor
lods
jno
in
push
xchg
fstpl
xchg
mov
jmp
ret
test
xor
popa
mov
sub
nop
shlb
sub
dec
mov
adc
pusha
mov
pop
cmp
xchg
gs
inc
fs
sarb
cltd
int
sbb
popf
inc
cs
aam
loopne
stos
add
hlt
shll
sbb
je
xchg
push
ljmp
lret
inc
sub
sbb
lcall
sti
fmuls
pop
jbe
dec
aam
cltd
ret
scas
xchg
stos
add
cmp
jmp
in
fldt
loopne
pusha
mov
sub
inc
mov
mov
sub
xchg
push
inc
dec
ret
nop
insl
sti
mov
jno
cmp
push
in
and
push
pop
add
fisubl
loope
iret
jbe
add
sti
mov
lock
ret
mov
xchg
roll
cmp
sbb
mov
mov
aad
sahf
rcrb
loopne
out
mov
push
dec
scas
adcb
sub
mov
xor
dec
dec
cmp
rcl
popf
cmpsb
imul
dec
ret
sbbl
mov
pop
inc
imulb
cmp
in
jbe
push
mov
sbb
mov
push
stos
inc
movsl
adc
dec
out
mov
jo
xlat
faddp
sub
scas
inc
jne
fcompl
out
mov
test
leave
call
xchg
pusha
rclb
mov
sub
fsubs
in
nop
lds
dec
shl
inc
loop
fucomp
mov
call
lds
cmpsb
sub
in
lcall
push
jmp
sub
xchg
cmpb
pop
jo
or
mov
push
adc
cs
lahf
cs
add
mov
in
lret
pop
mov
out
fnsave
add
jae
and
dec
sub
pop
cmp
scas
adc
cmp
mov
sub
pop
popa
pop
das
lock
sub
aad
push
dec
stos
add
andl
sbb
js
test
sbb
outsb
insl
cld
cmp
xchg
and
leave
fimuls
stc
bswap
sbb
adc
scas
push
mov
jmp
add
push
js
fisubl
repz
pusha
inc
lret
ljmp
pop
add
and
adc
and
clc
mov
subb
js
dec
mov
stos
in
xchg
sbb
aaa
pop
lock
subb
jle
ja
mov
aas
imul
insb
ja
xchg
out
or
push
leave
mov
jg
adc
cld
xor
rolb
pop
cmpsb
and
aad
jp
mov
lret
jmp
ret
into
test
cmp
rcl
add
fucomip
xor
cmc
mov
adc
imul
mov
jmp
inc
mov
and
sahf
mov
shr
sbb
divl
bound
pmullw
enter
leave
fimull
pop
std
pop
idivb
movsl
paddsb
popa
add
hlt
cmp
add
push
hlt
lods
inc
and
xor
mov
push
mov
test
xchg
add
dec
pushf
jl
xor
cmc
mov
loop
xchg
xchg
push
dec
lahf
stos
push
int
push
mov
sub
call
lods
shlb
push
sbb
subl
test
jg
insl
divb
xor
mov
sbb
stos
cmp
into
sub
testb
filds
dec
cmp
push
jno
js
leave
sub
jp
add
jmp
in
sti
sbb
mov
add
into
lods
repz
inc
mov
test
std
mov
xor
lcall
and
roll
out
in
or
popf
mov
fiaddl
lcall
add
mov
loop
cmp
sbb
cltd
mov
scas
popf
jne
mov
dec
movsl
pop
mov
mov
jne
mov
cmp
test
xchg
jecxz
xchg
pop
repnz
insb
jnp
aas
jnp
sub
neg
add
icebp
les
mov
push
cmp
inc
mov
push
jl
out
pop
adc
jmp
dec
or
fsubl
push
arpl
std
cmpsb
sub
insb
cltd
xchg
and
lock
add
mov
pop
sbb
push
or
sub
add
mov
xor
push
xor
popf
lds
and
mov
pop
decl
adc
jno
outsl
outsl
push
out
cmp
or
or
movsb
std
outsb
mov
cwtl
scas
push
dec
repnz
andl
loop
in
jno
and
mov
lret
bsr
call
or
pop
mov
fwait
mov
jg
dec
lret
nop
fs
xchg
lret
dec
push
dec
lea
push
int
std
dec
inc
mov
inc
std
ret
xchg
mov
cmp
je
int3
in
cmp
jno
bound
cld
xor
mov
sub
shrl
adc
test
fs
sub
pop
jecxz
or
pushl
mov
mov
jbe
xorb
adc
jno
xorl
js
pop
movsb
clc
rolb
push
lods
in
cmp
pop
mov
fidivrl
sub
xchg
mov
lods
sarl
sub
xchg
push
pop
add
mov
imul
ja
mov
inc
jl
push
jecxz
push
sub
shlb
cmp
sbb
fsub
adc
push
out
jno
stc
or
lret
sub
mov
dec
sahf
je
inc
in
cwtl
lahf
aam
scas
jmp
insb
mov
xchg
orl
sub
incb
cli
test
in
push
cmc
lock
loopne
or
stos
sarl
mov
and
jbe
cmp
push
mov
jge
outsl
or
sti
mov
iret
push
add
and
cmp
aas
loope
jge
sbb
pop
dec
xchg
lods
es
push
pop
inc
inc
ljmp
adc
mov
inc
lods
repnz
xchg
or
sub
fiadds
adc
xor
pop
sub
jo
lret
xor
out
loop
xorb
cs
mov
loopne
data16
add
sbb
arpl
mov
lds
jae
js
or
add
push
add
mov
cmc
and
inc
lods
rcr
jnp
jmp
cmp
mov
mov
sbb
jb
xchg
cmp
ljmp
fmull
adc
xor
ror
in
inc
cmp
sarl
mov
fdiv
iret
xor
pusha
cmp
inc
jnp
inc
dec
outsl
push
and
mov
rcrl
iret
gs
mov
pop
test
in
add
fsubr
xor
add
gs
fmull
xor
insb
cmpsl
sub
movsb
sbb
das
mov
inc
mov
call
repz
insl
movsb
stos
dec
in
inc
ds
aas
gs
add
mov
fldl2t
shll
mov
pop
xchg
cmp
add
ret
fcmove
cld
xor
sarb
aam
mov
push
lea
xor
lea
pusha
pop
inc
fwait
xor
ror
dec
xchg
iret
mov
mov
pop
test
mov
inc
sti
test
mov
loop
leave
mov
push
out
jl
xchg
dec
iret
or
jmp
add
inc
push
add
aas
ds
mov
cwtl
fldl
and
das
xor
jg
pusha
jg
pushl
sbb
lahf
jae
ja
inc
sbb
pop
xor
mov
push
icebp
lds
and
mov
arpl
cs
dec
sbb
outsl
imul
or
xchg
adc
mov
notl
test
stos
testl
leave
rcrl
xor
mov
xor
aas
mov
lods
xor
jecxz
jp
mov
aam
fsubrs
gs
jns
push
mov
inc
and
jo
addb
scas
pop
pop
lahf
add
pop
sub
cmpsl
jbe
mov
xorl
in
jne
call
pop
pop
cmp
pop
and
lds
dec
div
aad
lods
mov
xchg
cli
in
leave
xor
sbb
pop
lock
lcall
lret
jo
lods
add
outsb
cld
fdivrs
lea
pop
pop
mov
movsb
adc
xor
ret
push
lods
jmp
movsl
aad
add
fsubrs
hlt
cmp
testb
adc
iret
divl
shll
push
adc
pusha
add
rclb
leave
pop
into
sub
inc
xor
mov
ss
jne
push
fcmovnbe
jnp
push
adc
xchg
xchg
fcoml
popf
fwait
movsb
sub
dec
shll
inc
out
out
jno
leave
roll
mov
inc
leave
test
in
inc
pop
sub
dec
pop
mov
in
mov
or
in
mov
fwait
jnp
or
sarb
add
shl
and
shrb
ss
pop
in
lahf
in
pop
fcoms
aas
and
clc
sbb
add
lcall
xorl
mov
sahf
push
adc
leave
inc
pop
mov
movsl
andb
lret
fwait
repnz
in
pusha
pusha
xchg
popa
pop
aad
iret
sbb
fcoml
sub
cmpsb
in
add
lods
cmc
int
clc
cmp
sbb
fiaddl
lods
in
arpl
lods
scas
sub
and
mov
cli
inc
aad
js
adc
sbb
nop
movsb
xor
out
adc
test
sub
lea
mov
in
adc
inc
push
dec
test
xchg
or
xchg
repz
add
xor
mov
bound
ffree
jg
mov
bound
dec
mov
xorb
leave
arpl
xchg
int
sbb
test
pop
and
loop
aaa
pusha
loope
xchg
imul
xchg
pusha
sub
das
in
mov
add
mov
mov
pop
mov
in
mov
mov
aam
mov
pop
push
inc
dec
jge
pop
mov
repz
aad
jecxz
cmpsb
repz
and
sub
push
subl
out
pop
dec
aad
insb
lods
add
jp
mov
mov
out
sarl
es
ja
lods
xchg
mov
movsl
xor
lods
add
or
lcall
cmp
in
pop
adc
popf
push
and
adc
push
maskmovq
testl
lea
fwait
jbe
xlat
loopne
push
sbb
jb
xlat
cs
pop
scas
add
imul
aam
and
inc
ljmp
add
push
adc
jle
and
inc
std
xchg
mov
jecxz
mov
cltd
ret
into
pop
xchg
inc
mov
dec
scas
loopne
lret
push
adc
xor
loop
inc
in
es
adc
dec
sbb
mov
cmp
jnp
cmp
pop
fs
imul
mov
dec
push
mov
jmp
xchg
cmp
shll
dec
aad
scas
xor
aas
jmp
fwait
aas
js
popf
mov
push
scas
fwait
aaa
pusha
outsb
mov
lds
sub
jb
hlt
jbe
adc
cltd
adc
in
dec
js
cmp
into
adc
xchg
data16
loope
xchg
or
js
or
cmp
out
xlat
pop
movsb
jle
cmp
lahf
push
mov
insb
nop
cmpsl
imul
jl
fadds
mov
popf
mov
lea
mov
stos
or
outsb
xchg
mov
lods
jecxz
lods
jne
xchg
cwtl
popa
mov
mov
add
mov
cmp
sbb
nop
notb
push
jbe
xchg
cmc
xor
add
nop
sbb
inc
jbe
xchg
sub
je
push
dec
add
bound
popa
and
sub
gs
cmp
dec
or
pop
sbb
ljmp
out
sub
dec
movsl
insb
popf
pop
mov
sub
lret
hlt
and
mov
pop
decb
cs
pop
jne
jl
shl
and
je
push
mov
adc
into
dec
lds
sti
cmp
pushf
push
popf
xchg
enter
aad
aam
jge
lods
jle
enter
and
fistl
adc
push
fcompl
lahf
cmp
xchg
inc
mov
xor
and
pop
clc
pop
or
rorb
sub
pop
test
int
inc
push
fisubrl
pop
push
dec
cld
cmc
mov
mov
inc
in
lea
pop
sbb
nop
loop
or
or
rcrl
arpl
ret
lock
test
test
jo
adc
xchg
pop
add
std
and
inc
xchg
pop
mov
inc
and
sahf
aad
popa
and
jno
out
xor
addr16
inc
xchg
enter
xchg
mull
adc
outsl
pop
cmp
aaa
mov
xor
arpl
mov
or
or
pop
xor
mov
stos
pop
add
pop
std
sbb
sbb
lods
mov
imul
push
cmpsb
nop
jb
aas
sbb
and
popa
add
fs
lods
out
lcall
hlt
repz
add
flds
jge
sub
out
pop
dec
fmuls
aam
jo
mov
js
addb
sub
scas
stos
add
cs
ret
insl
leave
test
xchg
test
pop
lock
mov
imul
fistpl
fnstsw
cmp
inc
cmc
nop
fildll
pop
and
inc
dec
lods
jae
mov
inc
mov
pop
repnz
outsb
push
lea
cmp
lcall
mov
sub
pop
fdivrs
pop
scas
xor
cmpsl
pop
lock
daa
add
shll
clc
mov
xchg
in
shrb
outsl
cmp
cwtl
cmp
iret
out
loope
loopne
test
cmp
or
pop
cs
cmp
mov
jo
jecxz
fdivrs
or
mov
lods
les
push
insl
sub
sub
lcall
int3
xor
or
xlat
mov
add
xor
loop
mov
out
int
pop
mov
add
roll
cmp
pop
sbb
pop
pop
dec
test
mov
cwtl
stos
pop
enter
shrl
pusha
xor
push
sub
loopne
out
aaa
stc
mov
ds
mov
add
ljmp
sub
ja
insl
sbb
sbb
add
cmovb
shlb
sbb
sbb
cmp
lret
cmp
outsb
pop
cmp
and
push
sbb
mov
lods
cld
imul
adc
sbb
jge
mov
das
push
pushf
jmp
int3
into
std
fmul
jae
iret
dec
push
xchg
and
jge
mov
in
mov
iret
jg
dec
push
jge
ja
xchg
pop
jg
push
fldln2
cmp
scas
jb
sti
jno
mov
fadds
push
dec
sbb
push
sub
adc
push
sti
fs
int3
jp
lea
add
jmp
movsl
mov
pop
stc
pushl
jl
enter
jmp
dec
xchg
or
mov
sub
lret
rorl
lret
dec
or
mov
pop
xchg
xchg
dec
mov
pop
popf
mov
xor
inc
xchg
dec
and
pop
sbb
bound
orl
cld
add
cmp
sub
dec
in
push
pusha
cmpsb
stc
bound
imul
mov
std
ret
or
jp
pop
sbb
jg
adc
mov
stos
shr
lds
ficoms
incb
mov
je
fs
pop
adc
fbstp
push
je
js
pop
fisubrs
push
mov
sub
loopne
in
clc
icebp
pop
pusha
jno
xor
jl
jle
iret
sbb
mov
sub
bound
sar
add
mov
icebp
cli
dec
std
iret
xor
mov
vaddps
mov
push
sti
push
pop
lret
sti
int
imul
and
pop
in
inc
sar
iret
xchg
dec
in
xchg
loopne
aaa
scas
xor
inc
outsl
mov
and
das
sub
sbb
sub
jne
fwait
sbb
std
xchg
fildl
mov
mov
pop
mov
pop
loope
ret
xchg
sbb
test
sub
dec
xor
daa
pop
sbb
sub
mov
xlat
ficomps
imul
ret
add
hlt
insb
ss
jb
ss
lret
adc
dec
xor
push
inc
cli
push
scas
pop
or
push
mov
mov
cld
sahf
jmp
jg
or
int3
mov
ret
xor
mov
jl
stos
pusha
loopne
cmp
daa
outsl
inc
inc
jno
insl
jb
imul
std
stos
mov
push
stos
jmp
dec
in
xchg
inc
sub
es
sbb
jae
cmp
mov
dec
ds
push
aaa
sub
mov
dec
gs
fildl
call
shrb
call
faddl
jno
cltd
dec
jmp
inc
pop
mov
in
enter
cmp
test
xchg
mov
sub
cmp
clc
jle
sahf
test
cmp
or
ja
ljmp
adc
push
pop
outsl
xorb
cmc
scas
cli
pop
mov
add
and
sbb
sub
dec
or
mov
ret
xchg
fidivrl
dec
cmp
das
xor
xchg
rol
and
aaa
mulb
mov
nop
sub
ret
pop
xlat
mul
sbb
sub
in
or
or
add
addb
cmpsb
push
add
mulps
lods
out
xchg
cld
dec
cmp
mov
ja
xor
nop
sarl
stc
push
nop
mov
loop
xchg
leave
push
sbb
xchg
in
or
test
cmp
push
sub
div
int3
icebp
scas
sub
out
mov
leave
rcrl
mov
xchg
cmp
sub
movsb
es
xchg
xor
call
in
mov
cwtl
fs
sbb
ror
cmp
int
mov
stc
cmp
dec
popf
test
cmp
or
nop
jp
cs
test
mov
fstpt
sub
and
jno
stos
sbb
and
mov
and
fiaddl
adc
mov
cmp
xor
xor
xor
lcall
or
inc
lods
fcoml
push
xchg
lret
mov
push
pop
cld
pushf
xorb
jae
daa
fisubrs
jns
jae
dec
mov
or
jge
lods
outsl
sub
add
je
jle
dec
sub
cmc
stos
into
mov
add
push
mov
mov
inc
push
mov
int3
mov
es
ljmp
lcall
xchg
mov
adc
xchg
arpl
cmpsb
aam
mov
xchg
lea
scas
sbb
mov
cmp
int3
fnstenv
popa
cmc
push
adc
mov
xchg
daa
fldpi
mov
lods
aas
push
adc
outsb
sub
sti
and
dec
je
cmc
cmpb
addl
test
pop
clc
xchg
adc
push
jecxz
sbb
pop
and
mov
fbstp
add
dec
xor
ljmp
mov
clc
pop
sar
cmp
pop
push
sbb
lcall
xchg
and
mov
push
imul
mov
cld
arpl
inc
and
cli
sbb
xchg
push
adc
sar
rolb
push
sub
jg
inc
cmp
ja
mov
push
enter
aaa
nop
inc
lods
div
xchg
fcoms
sub
push
push
cmpsb
jo
mov
fstpt
jle
mov
and
xor
xadd
sbb
clc
jg
xor
pop
add
jns
pop
sbb
nop
dec
sub
outsl
push
inc
cld
lds
xor
dec
ljmp
cwtl
sbb
shll
mov
mov
es
addb
or
bound
inc
add
sbb
cwtl
xor
mov
stos
stc
pop
sbb
loopne
add
xchg
andl
dec
js
xchg
lahf
or
dec
iret
frstor
push
fcoml
push
xlat
arpl
add
fiadds
int3
ds
ljmp
scas
sub
into
rcl
mov
add
insl
inc
or
out
sub
in
stc
jns
sub
sub
xchg
mov
or
push
ret
je
sarb
addb
mov
mov
xchg
mov
inc
inc
adc
enter
fstp
or
scas
out
lcall
decl
inc
xchg
inc
fwait
call
out
movsb
cmp
lods
dec
lcall
mov
int3
leave
gs
insb
adc
and
ja
nop
hlt
sub
rol
lcall
out
push
and
imul
shl
cmp
add
pop
inc
mov
jecxz
cli
jg
shrb
insl
sbb
and
xor
mov
subl
cmp
lods
mov
mov
decl
pop
test
hlt
les
aas
xor
pusha
sbb
fcoml
inc
call
sbb
pusha
lea
push
les
jb
mov
mov
int3
push
cmc
sbb
rorb
das
int3
push
shrl
out
gs
arpl
mov
fisttpl
icebp
push
addr16
scas
cmp
mov
cmp
js
imul
or
add
imul
push
cmpsl
xchg
outsb
sub
es
mov
jg
push
mov
das
mov
mov
mov
inc
sub
dec
outsb
or
lods
xor
dec
fcoml
pop
popa
inc
xor
mov
sbb
dec
sub
je
xchg
fwait
xchg
int
jg
sbb
test
cmp
outsl
cmp
imul
adc
loopne
int3
xchg
push
pop
jg
cwtl
adc
adc
adc
pop
mov
pushf
imul
outsl
add
ja
mov
call
mov
sbb
xchg
push
inc
pop
mov
push
inc
out
sbb
mov
cltd
pop
sub
mov
cltd
les
mov
adc
dec
sahf
cli
fucomp
inc
cmp
lods
dec
mov
xchg
into
out
nop
out
adc
movsb
lret
mov
sub
test
mov
jns
sub
cmp
inc
and
sub
jecxz
mov
hlt
dec
push
testl
inc
mov
sbb
push
dec
add
popf
and
jmp
mov
out
and
cld
cwtl
pop
mov
push
stc
jne
or
adc
das
dec
xchg
jp
cli
push
call
add
adc
into
xor
push
mov
sarl
pop
addr16
adc
jmp
lcall
mov
cmp
jl,pn
addr16
test
lock
or
adc
in
or
cmp
add
or
sbb
dec
push
xor
inc
xchg
jge
xlat
sbb
mov
sub
orb
dec
mov
mov
mov
out
pop
es
jb
or
mov
sarb
jbe
push
sub
mov
sbb
or
mov
imull
push
std
dec
pop
sbb
lahf
pop
cmp
jae,pn
mov
les
addl
mov
test
and
pop
pop
mov
pusha
xchg
xchg
ljmp
into
pop
out
sub
sub
mov
out
mov
movsl
les
cmpsb
push
pop
or
cmpsl
outsl
jnp
and
data16
add
lcall
push
inc
xchg
sti
out
cwtl
mov
nop
add
repnz
movsb
test
fucomip
jmp
roll
add
sub
lcall
arpl
scas
cltd
inc
jno
cmp
pop
sbb
bound
push
call
mov
jno
add
lcall
pusha
xor
mov
arpl
setae
enter
aaa
dec
jl
daa
aam
xor
out
fldl
fsub
neg
push
lahf
mov
adc
mov
shrl
ja
xor
shll
adc
push
fwait
arpl
add
insb
ficoml
inc
dec
cmp
cmc
inc
test
inc
jnp
test
cmc
push
inc
dec
mov
sarb
fisttps
in
outsl
ds
enter
mov
lea
push
mov
jg
int
cmp
sahf
dec
push
sahf
pushf
cmc
decl
loop
mov
mov
pop
mov
fwait
outsb
int
and
scas
addb
in
push
repz
cwtl
push
mov
into
jmp
cltd
jno
mov
sub
stos
shrl
xchg
ret
mov
ret
shrl
mov
push
sbb
pop
push
je
pusha
xchg
add
bswap
xchg
pop
mov
mov
add
test
divl
and
sti
mov
loopne
push
cmc
and
pushfw
and
pop
push
xchg
mov
insb
and
add
fnstsw
ret
and
movsb
loop
jns
dec
mov
jmp
mov
imul
jmp
jmp
and
cmp
pop
in
dec
and
bswap
and
lcall
aas
mov
push
mov
jecxz
push
iret
push
nop
fimuls
jne
dec
cmp
je
lods
ret
add
dec
pop
mov
dec
stos
out
push
rol
in
sti
push
dec
dec
sbb
ficompl
pop
push
roll
dec
lret
aaa
movsb
mov
mov
mov
les
xor
jne
mov
int3
decl
daa
js
scas
in
aad
call
repz
pop
xor
out
int
push
mov
sbb
xlat
jle
pop
scas
adc
mov
popa
lock
xor
ja
cmp
push
sub
mov
loope
clc
mov
mov
aad
sbbb
inc
mov
out
jbe
mull
xor
stc
mov
adc
adc
jmp
add
xchg
sbb
popa
push
cs
and
data16
pop
nop
mov
mov
aas
sti
sbb
fldcw
mov
bnd
mov
jae
adcl
imul
cld
xchg
je
es
fwait
jge
adc
lret
cmp
pop
dec
out
add
icebp
xchg
das
xor
pop
mov
or
cmp
ds
enter
mov
mov
xchg
adc
xchg
jmp
stc
jo
aas
rcr
mov
xor
cmc
fdivs
lahf
cmp
aas
pop
cli
lret
das
push
xchg
shll
lret
out
push
or
andb
pop
pop
outsl
sbb
ss
cmc
mov
jecxz
aas
xchg
mov
cltd
loope
push
sub
lret
xor
and
mov
test
testl
aam
push
shrl
dec
push
xchg
ljmp
fisttpl
pop
push
repnz
add
outsl
fwait
mov
lahf
dec
aam
adc
xlat
ror
aas
test
or
jns
xor
jle
cld
sbb
pop
or
or
inc
and
sbb
push
out
imul
sub
les
fsubl
cmpsb
outsl
sbb
ficoms
cmpsb
xor
lock
pop
mov
sbb
dec
in
cs
add
mov
lret
test
xor
pop
loop
jmp
mov
sahf
enter
inc
in
add
movsb
cmpb
mov
les
inc
add
aad
jo
sbb
dec
aad
popa
and
jbe
je
sarb
popa
fisttpll
pop
imul
or
sbb
aas
or
roll
mov
ja
js
adc
dec
gs
push
mov
xchg
inc
cmp
jmp
loope
sbb
arpl
lock
xchg
xchg
inc
icebp
inc
push
dec
ret
mov
scas
in
fwait
sbb
aas
mov
movsl
adc
adc
imul
lds
jmp
bound
or
aad
inc
jnp
sbb
std
and
insl
xchg
sbb
repz
mov
jge
jg
jmp
sbb
sbb
insl
mov
insl
test
roll
aad
xor
add
xchg
mov
int
or
xor
pusha
mov
mov
inc
aam
xor
aas
sub
sub
lcall
sub
call
mov
das
or
push
mov
lock
adc
insb
lret
mov
mov
jnp
rorb
and
adc
ds
pop
flds
and
in
and
push
xor
in
sbb
xchg
mov
cmpsb
adc
inc
xlat
repnz
sti
aad
sbb
pop
push
in
mov
mov
sub
test
adc
cmpsb
addr16
cmp
xor
dec
mov
insl
xchg
dec
pop
lods
stos
and
mov
leave
not
jb
push
jb
or
lahf
ror
sbb
imul
bound
mov
insl
aas
jg
or
das
aam
pushf
loopne
fistpl
lds
push
xlat
xor
call
dec
mov
mov
xchg
je
roll
ds
jns
test
out
jge
stos
std
xorl
cmpsb
fisubrl
sahf
mov
mov
push
out
out
hlt
popf
push
push
loope
mov
repnz
int
pop
out
cs
xchg
sbb
addr16
imul
cltd
fidivrl
lret
test
mov
mov
push
mov
push
push
xchg
inc
pusha
jg
add
sbb
sbb
dec
jns
lahf
sub
fbstp
std
mov
fs
pop
sbb
and
jbe
xchg
or
or
loopne
out
dec
aas
xchg
inc
push
dec
out
repnz
insb
dec
adc
mov
lock
mov
aad
out
mov
jo
inc
mov
lods
inc
pop
jl
sbb
jnp
int3
add
or
test
in
push
mov
push
push
lods
dec
jg
cmc
cmp
xchg
mov
dec
mov
sub
imul
aam
stos
mov
push
and
in
scas
mov
mov
mov
push
inc
popa
jae
mov
in
adc
int3
loope
nop
pop
ss
push
mov
mov
xor
mov
mov
mov
pushf
insb
stos
dec
mov
inc
test
add
call
mov
push
shll
pop
jo
dec
dec
test
scas
divb
inc
gs
lret
cmp
sbb
or
sbb
into
sub
mov
mov
xchg
mov
lcall
addb
ds
xor
enter
push
aad
das
and
inc
rcll
xor
inc
push
dec
mov
fdivs
add
add
pop
xchg
jecxz
push
xor
inc
adc
scas
mov
push
ds
sub
mov
mov
inc
adc
mov
cmpsl
fsubrl
cmp
or
fadds
jge
ds
mov
add
pop
or
inc
mov
jg
gs
ja
es
outsl
jo
push
lds
clc
cmc
sbb
sub
mov
xor
fimull
xchg
xchg
iret
add
int
test
push
and
dec
clc
adc
into
inc
add
mov
insl
jne
lods
pop
in
ror
xor
sub
ret
sti
dec
push
dec
push
xor
les
mull
mull
cwtl
rcrl
movb
add
jecxz
or
or
xchg
add
push
pop
dec
std
push
ss
test
xor
fnsave
adc
sub
and
jb
iret
stc
xlat
rolb
dec
sbb
add
inc
cmp
ret
inc
inc
ja
je
cmpl
ds
mov
mov
out
es
test
cmp
lret
lods
lret
out
cmpsl
xchg
push
es
sub
test
ficoms
mov
aas
jp
aam
cwtl
inc
mov
sbb
sbb
aas
repz
mov
and
and
leave
or
orb
push
push
jmp
push
stos
dec
xchg
mov
xchg
test
arpl
mov
jmp
xor
jns
mov
push
rcrb
inc
into
call
notb
lock
repnz
mov
into
cmp
pop
mov
loope
adcb
inc
mov
fidivs
sbb
lods
lcall
ja
inc
aas
sbb
push
icebp
inc
hlt
mov
test
or
insl
movsl
fcomps
jecxz
aaa
pop
jnp
or
lret
or
push
int3
sub
ret
jge
jne
sub
cmp
ret
icebp
data16
and
stc
lcall
mov
lret
push
cs
in
aam
pop
pop
xchg
mov
rorb
mulb
in
xor
mull
loope,pn
pop
test
loop
mov
dec
clc
push
sbb
stos
scas
into
sub
shrl
inc
pop
pop
call
jp
pop
mov
push
inc
mov
punpckhdq
mov
int3
das
xchg
arpl
aad
addb
negb
xchg
leave
arpl
inc
pop
lret
rcll
std
je
cltd
xchg
daa
mov
fs
jnp
cmp
inc
adc
addr16
inc
pop
stos
mov
je
cmp
mov
sbb
js
cmp
mov
es
pop
scas
imul
testb
or
push
push
and
push
mov
out
dec
addr16
lret
add
add
out
repz
fidivl
dec
ss
add
pop
lock
in
and
or
sti
popf
shlb
sbb
les
lahf
sub
inc
sarb
jl
shll
sub
jbe
sub
sub
cmc
adc
rclb
mov
cmp
sub
jbe
pop
or
inc
add
cmpsl
or
dec
mov
or
mov
xor
fmul
pop
dec
xchg
mov
dec
lods
xchg
imul
mov
gs
mov
dec
xchg
incb
test
sub
sbb
fldenv
hlt
jo
iret
je
repnz
mov
xchg
jnp
push
out
xchg
call
or
jnp
repnz
jmp
or
mov
xchg
arpl
pop
adc
hlt
pop
in
stc
inc
or
stos
add
rcll
cmpsl
cltd
out
fwait
into
dec
push
call
lret
nop
pop
pop
pop
mov
add
xorl
dec
mov
sbb
mov
ljmp
mov
xor
ret
adc
pop
adc
jp
xor
pusha
loop
push
repnz
pop
push
add
and
xchg
shlb
or
scas
or
inc
ja
sub
mov
hlt
mov
push
xor
inc
test
loopne
scas
push
push
lcall
mov
lcall
xor
js
daa
xchg
mov
inc
clc
xor
cmp
and
aaa
pusha
add
fsubrs
out
addr16
lds
mov
movb
je
decl
push
add
push
out
mov
dec
inc
movsl
dec
and
cmpsl
dec
jg
mov
push
stos
adc
sub
jne
jmp
jmp
pop
sub
push
sbb
cmp
xor
or
xor
popf
fsubs
sub
iret
test
push
fidivrs
jns
out
mov
sbb
inc
pop
sbb
mov
ficoml
cmpsl
into
pop
mov
inc
ja
lods
cmp
pop
add
rcrl
sarl
in
movsb
fbstp
pop
add
cmpsl
daa
jns
and
pop
push
xchg
scas
int
nop
adc
cmpsb
xchg
shrb
test
lahf
sbb
test
or
fwait
push
or
imul
dec
push
add
movsl
mov
mov
aas
pushf
pop
es
jle
lea
in
xchg
imul
xor
mov
xchg
jnp
out
inc
mov
call
inc
out
inc
add
bound
dec
xchg
lahf
ret
stos
inc
cmpsb
jns
cmpsb
add
daa
xor
lcall
jnp
jmp
inc
xor
out
arpl
fs
xor
in
xor
cmpsl
push
pop
push
xchg
out
aam
mov
push
pusha
pop
push
or
sub
dec
sbb
ljmp
mov
push
mov
mov
push
mov
jmp
jl
out
and
mov
into
imul
rcll
pop
pop
push
jmp
aam
cmp
mov
in
pop
iret
movsl
pop
enter
out
push
outsl
rcll
push
push
jb
xor
popf
ret
xor
out
sahf
rcrl
scas
ffree
in
mov
mov
lret
int3
pop
pop
testl
mov
or
pop
xor
pop
cwtl
sub
imul
arpl
testl
xchg
fwait
cmp
das
xchg
jecxz
ja
pop
and
movsl
pop
fldenv
lahf
mov
mov
data16
xchg
cltd
jl
ud1
cmp
stos
sbb
mov
mov
mov
mov
fiaddl
mov
or
cwtl
xor
out
push
dec
testl
sbbb
gs
inc
aam
sub
jne
inc
int
call
loopne
push
lock
sub
rol
mov
mov
or
add
dec
aaa
mov
test
dec
imul
cmpsl
ljmp
inc
das
hlt
loopne
mov
mov
jbe
jb
nop
jns
pop
idivb
mov
xorl
nop
adc
test
fistpl
int
pop
mov
add
push
into
mov
scas
mov
dec
mov
pop
pop
adc
mov
push
pop
popf
insb
cmp
pop
and
outsl
pop
dec
add
push
jns
sbb
adc
fwait
xchg
mov
es
sub
push
mov
inc
cmp
and
in
data16
xor
sub
lretw
mov
jno
mov
pop
les
roll
sub
movsl
xchg
leave
jb
inc
mov
mov
dec
test
push
aaa
add
sbb
in
add
out
dec
mov
loopne
xchg
mov
repnz
or
ljmp
gs
inc
push
cmpb
loop
push
lock
cli
mov
les
xchg
das
jmp
xchg
sub
rcrb
push
cmpsb
fsub
sbb
mov
jnp
aaa
mov
inc
inc
mov
out
bound
repnz
xchg
adc
sarl
fidivrs
and
cmc
adcb
push
cltd
add
push
mov
add
aaa
push
daa
cld
xchg
mov
or
fmulp
cli
clc
sbb
loop
xchg
push
cmpsb
cmpsb
cmp
daa
das
test
sbb
pusha
xchg
jae
mov
bound
lret
mov
mov
aaa
sti
cmp
filds
test
shlb
push
mov
push
push
js
mov
add
je
les
in
mov
xor
leave
hlt
js
loopne
ficoml
dec
jle
loop
das
and
push
ljmp
sahf
jb
mov
or
fwait
pop
pop
subl
enter
test
cmp
clc
xlat
adc
rorl
sub
jp
push
mov
inc
cmp
insb
testl
jo
mov
sbb
je
in
adc
mov
dec
mov
cmp
ja
stc
mov
sbb
sbb
mov
movsl
cmp
jae
push
xor
and
mov
out
enter
mov
jns
jne
push
push
lods
inc
fidivl
add
insb
leave
gs
cmp
testl
dec
lock
push
mov
js
scas
jb
jb
nop
pushf
loopne
mov
je
push
ret
ret
and
ret
pop
cmpsb
lcall
enter
mov
pop
ds
gs
jle
sbb
in
sub
push
mov
inc
adcl
iret
outsl
xor
arpl
sub
sahf
pop
mov
and
jecxz
ret
sbb
pop
adc
mov
dec
cmc
gs
sub
mov
xor
or
imul
in
pop
sahf
rclb
rol
adc
jmp
adcb
scas
mov
out
fsubs
out
out
mov
out
incb
mov
addl
les
clc
dec
pop
ss
inc
shrb
stc
mov
xchg
and
lods
dec
ljmp
hlt
aas
ss
cwtl
xor
cli
push
xchg
or
cmpsl
adc
add
jp
cmpsb
sub
sbb
add
adc
loope
pusha
xchg
mov
clc
sti
dec
clc
push
int
jo
aas
std
add
ret
mov
dec
cmp
data16
inc
mov
and
out
fcoms
rcl
jae
xchg
rcll
in
adc
mov
pop
stc
loopne
jnp
mov
pop
sahf
dec
xor
jae
in
outsl
mov
mov
mov
cmp
cmp
sbb
leave
sbb
push
push
jp
arpl
ficomps
repnz
fnstsw
xor
aas
or
sub
addb
sahf
ret
bound
cltd
clc
lret
ret
test
jle
xchg
lahf
outsb
cltd
adc
insb
cmc
or
mov
mov
add
mov
lahf
dec
mov
cmc
mov
push
cmpsb
push
movsl
inc
adc
test
mov
mov
jmp
pop
push
stos
fimull
out
push
test
inc
xor
les
orb
imul
out
xlat
add
mov
jns
ds
int
adcb
push
lahf
xchg
pop
int
and
repz
pop
loopne
mov
or
pop
jns
sbb
xchg
loop
xor
es
sub
scas
and
hlt
fadds
repz
fnstenv
fwait
lea
fsubr
popf
mov
lock
push
mov
jle
mov
lcall
ss
xchg
add
mov
sub
mov
test
push
jmp
mov
daa
xchg
xorb
jno
arpl
cli
test
mov
inc
loope
push
jae
pop
test
or
fdivr
aas
cmpsl
add
sarl
sti
add
dec
scas
push
jno
movsb
clc
and
or
aas
jbe
pop
cmp
int3
daa
push
inc
cs
pop
push
mov
stc
outsl
mov
lea
sub
xchg
icebp
dec
cmp
xchg
ljmp
push
stos
scas
movsb
lret
pop
imul
jmp
mov
push
push
push
push
cmp
mov
pop
cli
adc
out
in
pop
cmp
inc
sahf
ljmp
enter
push
mov
cmpsb
or
mov
push
adc
push
bound
jnp
loopne
test
mov
rorb
lret
and
pcmpgtw
adc
fcmovu
cmpsb
cmpsb
repnz
lods
icebp
adc
dec
leave
pop
inc
or
scas
or
sbb
mov
repnz
push
mull
arpl
daa
test
mov
out
mov
pop
dec
pop
sub
mov
aaa
mov
sub
inc
xorl
cmp
add
arpl
scas
inc
xchg
dec
test
repz
inc
mov
lock
xor
mov
repnz
cmp
cltd
stos
mov
lods
xor
in
push
inc
push
cmp
movsb
ljmp
add
insl
sub
or
cltd
leave
sub
and
les
in
aad
or
xchg
popa
shl
xchg
inc
xlat
aas
sbb
imul
jge
stos
mov
mov
shl
xlat
push
in
sub
das
gs
loop
je
add
jp
es
in
jnp
mov
mov
jmp
fistl
mov
mov
push
jmp
adc
test
add
fstps
mov
xlat
fucomp
cmpsb
cmp
cltd
pop
enter
scas
lret
adc
mov
mov
cmp
fistpl
cltd
popf
mov
xorl
fsubs
adc
or
imul
mov
adc
imul
dec
ljmp
rcr
lret
loop
xor
xor
int3
push
leave
mov
sti
mov
fs
ret
dec
push
sub
or
ss
lds
sbb
jmp
aad
jge
test
fdiv
and
int3
dec
push
cwtl
aam
daa
cmp
fwait
inc
shll
sub
mov
jb
fildll
test
pop
add
and
ja
or
fisubl
aam
lods
mov
fs
fucomp
lods
lea
xchg
xorl
push
jae
dec
adc
lods
push
aas
or
jbe
shll
roll
mov
es
push
out
jae
cmp
cli
test
push
mov
push
jne
cltd
xchg
push
popf
call
mov
mov
dec
inc
aas
fs
mov
push
xchg
inc
push
mov
push
jae
jb
mov
pusha
shrl
push
les
lret
rorl
loope
inc
rcrl
mov
cmpsl
xchg
dec
mov
popa
ljmp
outsb
cmp
mov
push
mov
add
pop
sbb
push
cmc
mov
jge
jg
cmp
sub
mov
int
xchg
hlt
lcall
cmp
push
jo
repz
mov
leave
pop
int
mov
repnz
mov
stos
rcrb
es
pop
and
inc
inc
sub
inc
and
cmova
testb
jecxz
stos
negb
cs
push
xor
push
adc
pushf
cwtl
jl
lahf
xchg
std
jp
jae
xor
adc
add
mov
cltd
mov
enter
imul
imul
inc
adc
and
ja
mulb
subb
mov
rclb
dec
insb
mov
jl
shll
fs
xor
xor
lds
ss
push
filds
pop
mov
dec
push
add
scas
cmp
push
insb
outsl
or
clc
jle
rep
inc
sub
loope
xorl
push
dec
jne
scas
inc
jmp
int3
push
adc
xor
outsl
push
pop
sub
pop
stos
std
pop
cmp
jmp
loopne
jbe
test
or
out
cmp
jmp
mov
mov
and
add
sbb
push
sbb
xchg
loope
pop
iret
stos
jle
lods
cli
inc
lds
lods
mov
fnstsw
push
stos
push
and
out
out
hlt
gs
xor
stos
push
outsb
mov
bnd
je
es
jae
sarl
mov
bound
push
test
dec
in
mov
sub
pop
test
jbe
aaa
mov
pop
and
mov
xchg
lds
or
pop
outsb
pop
pop
xchg
ja
gs
in
ja
cmp
mov
xchg
pop
push
sti
es
out
cmp
cltd
mov
or
nop
jecxz
or
mov
cwtl
test
sbb
inc
lcall
sub
loope
xchg
mov
aam
push
mov
push
xchg
fdivrs
cmovns
orl
pop
push
clc
fwait
push
das
je
outsb
cltd
nop
dec
sub
or
dec
data16
inc
mov
cmc
cmp
xor
sbb
and
or
test
and
into
leave
nop
leave
lea
test
aam
movsb
shl
dec
add
pop
mov
hlt
mov
mov
xchg
fwait
sahf
not
add
aaa
xor
push
in
clc
jnp
outsb
hlt
scas
pop
pop
arpl
orb
mov
pusha
add
hlt
out
adc
insl
mov
push
and
pop
jg
repnz
shlb
mov
mov
inc
mov
in
cli
ficoms
add
mov
cmp
call
pop
mov
mov
push
xor
sbb
jnp
xchg
lods
cmp
jne
adc
xchg
sbb
outsb
test
sbb
out
add
cmpsb
lcall
rolb
push
jecxz
loop
sbb
enter
insl
js
dec
out
test
cld
cmp
mov
sbb
mov
mov
mov
cmpsb
sbb
bnd
push
xchg
cmc
insl
and
popf
stos
shlb
inc
test
and
mov
push
cltd
dec
xchg
fs
jo
cmpsb
inc
dec
das
pop
test
popf
xor
jo
sbb
mov
mov
and
xor
pusha
xor
notl
lock
push
enter
fiaddl
jl
loope
lret
fisubrl
cli
data16
add
adc
and
push
pushf
or
mov
xchg
fdivr
mov
mov
add
test
mov
jge
add
cmp
xchg
repz
out
xchg
or
enter
jae
pop
mulb
push
sar
xchg
mov
push
inc
jecxz
jle
pop
cmp
mov
mov
scas
out
clc
clc
inc
pop
imul
xchg
shlb
fadds
sbb
bound
sub
xlat
imul
inc
movsl
enter
pop
xchg
inc
pusha
pop
js
xor
mov
xlat
jmp
mov
loopne
mov
xchg
push
xor
leave
repnz
cmp
sbb
lods
sub
ss
andl
leave
sbb
sub
arpl
adc
insb
or
out
xor
loopne
inc
sbb
dec
insl
fimuls
cmp
jne
fwait
leave
in
test
bound
addr16
or
mov
and
idiv
cwtl
rcr
xlat
sbb
das
push
jae
or
lock
push
fisubs
add
mov
mov
scas
dec
mov
in
gs
lds
jo
shrb
or
rol
pusha
test
pop
dec
and
push
fimuls
icebp
add
lock
or
out
push
mov
test
adc
jb
pop
movsl
call
pushf
inc
jno
mov
lods
mov
fucomp
mov
outsb
pop
dec
mov
mov
push
cmp
dec
lcall
in
push
mov
adc
jl
ficompl
jge
inc
inc
ss
mov
aaa
and
push
xchg
rolb
outsl
sarl
faddp
sahf
add
xor
cltd
lods
mov
rolb
mov
loope
jge
xchg
daa
jbe
and
rorl
mov
stos
adc
sub
push
popf
and
push
sbb
mov
xor
shr
sbb
popf
lahf
pushf
mov
add
pop
imul
daa
mov
dec
push
mov
mov
push
lcall
addr16
lea
shrb
push
mov
mov
mov
rorl
push
jne
in
sbb
arpl
movsb
push
cmp
int3
js
aad
stos
andl
xchg
add
arpl
cmp
mov
out
out
sub
push
xacquire
insl
mov
int3
sbb
mov
dec
sbbl
imul
jge
je
mov
adc
mov
test
jle
xor
mov
mov
pop
les
dec
cld
aas
lret
xorl
mov
and
mov
adc
xchg
and
fmuls
bound
movb
jp
rclb
pusha
fisttps
sub
hlt
loope
shll
adc
push
ss
lods
jge
rcr
mov
lock
and
pop
call
adc
xchg
lock
adc
popf
je
and
push
and
push
xchg
and
xor
mov
mov
push
sti
test
dec
lods
push
jns
sbb
data16
mov
addr16
push
sub
push
dec
shll
jns
pushf
push
test
adc
jg
mov
in
fsub
jb
and
mov
mov
inc
insb
sbb
inc
push
insb
adc
add
jle
inc
xor
insb
stc
scas
sarb
push
mov
dec
xchg
fwait
xor
fldenv
cwtl
ss
arpl
add
fidivl
into
inc
fcomps
sbbl
fdivr
lret
sbb
push
shl
mov
scas
sub
and
addr16
lods
mov
divb
leave
sbb
sti
call
nop
outsl
inc
fisttpll
call
jmp
xchg
lret
dec
scas
ds
mov
and
mov
jae
cltd
cmc
add
loopne
js
enter
fs
add
mov
lds
xchg
lret
movnti
dec
dec
aas
or
fs
scas
xor
mov
das
add
mov
pop
pop
cmp
mov
mov
insb
out
push
hlt
std
jno
xlat
mov
push
mov
mov
jmp
fildll
and
lds
jb
aaa
xor
mov
int
mov
add
addr16
fwait
cmp
aad
movl
popa
cmp
mov
jle
mov
out
xor
lret
out
popa
adc
sbb
fstl
addr16
sbb
loope
je
push
pusha
adc
cmp
call
pop
stos
or
dec
pop
xchg
mov
or
pushf
push
jno
pop
inc
ja
push
divl
loopne
fisttpl
les
fnsave
fmull
mov
pop
movsl
out
mov
mov
mov
clc
cmp
call
mov
mov
imul
in
pop
xor
inc
xchg
xchg
jno
clc
add
call
mov
cli
add
push
jl
push
xor
push
cmpl
mov
inc
add
inc
mov
scas
push
mov
dec
cmp
test
fisubs
xlat
jno
enter
nop
pop
cmpsl
sub
nop
jbe
dec
pushf
jecxz
loope
nop
lock
repnz
pop
ret
and
lea
enter
fst
xchg
and
lds
imul
lods
xorl
sub
and
aad
mov
lds
outsl
mov
aas
jp
mov
mov
xor
cmp
cwtl
shl
jg
les
in
inc
push
push
push
push
add
adc
inc
sbb
add
leave
stos
adc
dec
pusha
sbb
call
lret
jns
xor
add
sbb
cmc
xchg
inc
sar
iret
shll
cmp
xor
push
mov
loopw
aam
dec
add
inc
pop
adc
hlt
inc
add
cmp
xchg
fsubrl
loopne
arpl
out
jmp
sub
lret
imul
loopne
xchg
notb
ret
loope
xor
fdivs
cltd
call
js
lods
jg
loopne
dec
xor
mov
imul
push
pusha
fwait
xor
cmc
jg
dec
jbe
repz
pop
jl
sbb
sbb
xor
cmp
inc
jecxz
sbbb
xchg
in
mov
ret
mov
addl
insl
lahf
and
out
out
dec
cmp
aas
push
lock
testb
jo
lds
mov
xorl
adc
sbb
add
pop
lret
loop
repnz
dec
and
and
cmp
cmp
ja
xchg
orb
loope
jecxz
mov
and
push
decl
sub
jns
xor
out
je
adcl
xchg
fstpt
sbb
add
mov
dec
add
pop
ret
lret
pop
cld
dec
xchg
roll
dec
mov
mov
mov
xchg
gs
test
sub
hlt
add
cmp
jns
sub
imul
inc
lret
dec
aam
lret
test
push
hlt
mov
rclb
ja
or
mov
test
push
fimull
or
ret
cmp
mov
add
rcrl
jo
cmp
in
cwtl
lret
pop
sub
mov
lock
fdivrl
arpl
pop
sub
sbb
into
lahf
mov
add
cld
iret
mov
push
mov
loope
leave
or
push
cmp
adc
fwait
mov
push
stos
andl
es
cmp
adc
mov
test
pop
add
inc
and
fnsave
mov
popf
sbb
sub
mov
js
rolb
das
fisubrs
push
lds
ret
into
sub
jge
mov
mov
lds
mov
jmp
jbe
popf
sub
jbe
push
aas
dec
inc
jp
dec
loopne
lock
fdivs
imulb
push
cld
mov
inc
test
jbe
insl
xchg
xchg
int3
shlb
cmpsb
stc
push
gs
pop
pop
sti
mov
jns
mov
mov
mov
and
int3
sbb
sub
cli
imul
test
sbb
in
lret
pop
xchg
mov
or
mov
dec
xlat
mov
mov
xorb
sbb
push
jmp
fimuls
xchg
sahf
bound
mov
nop
xchg
or
mov
pop
xchg
jae
xchg
jae
ljmp
test
insb
mulb
and
pop
cmc
push
cmp
les
or
pop
nop
out
loopne
mov
push
xchg
push
mov
inc
scas
cld
jo
dec
out
sub
and
sub
ljmp
add
jae
lock
pop
outsb
pop
in
inc
mov
xchg
cli
into
and
pop
mov
scas
dec
mov
or
dec
mov
jns
mov
add
shrb
aad
mov
or
ret
cmpsl
dec
js
out
outsb
rol
nop
cmp
inc
mov
inc
dec
fwait
jb
aas
sbb
aas
ja
xor
and
sub
repz
ljmp
roll
cltd
daa
lahf
inc
jl
leave
xchg
cmp
push
and
fbstp
dec
cmpsb
cmpsl
fldenv
xorb
xor
dec
out
repnz
test
pop
lahf
dec
cmp
adc
movsb
jbe
adc
dec
add
jne
sbb
sbb
jge
aam
dec
outsl
repnz
or
orb
loope
inc
xchg
add
pop
fldenv
cmp
jle
or
mov
rol
addr16
sbb
movsl
filds
cld
cmp
lock
xor
xor
and
fidivs
cmc
imul
lret
add
pop
arpl
xchg
cli
lds
dec
pop
mov
cmp
dec
lcall
pop
mov
mov
sarb
and
sti
mov
jns
movq
popf
dec
loopne
sbb
xchg
xchg
data16
xchg
mov
in
and
adc
ljmp
xor
inc
outsb
mov
add
fnsave
fwait
fs
adc
pushf
adc
add
add
mov
push
lea
jns
fwait
icebp
cmp
outsl
sbb
jl
fcomps
aas
lahf
nop
mov
int
loopne
stos
ret
mov
sub
sahf
jg
in
fidivs
fisubrl
out
pusha
adc
clc
jmp
lods
sub
loope
lahf
roll
mov
and
xlat
jno
loop
lds
neg
adc
orb
mov
pushf
pop
inc
int3
inc
push
xchg
push
das
fimuls
pop
xchg
and
or
mov
dec
xlat
into
in
insb
sbb
daa
idiv
mov
mov
insl
dec
enter
sub
in
popa
sbb
push
lods
loope
inc
or
icebp
push
cli
sbb
test
inc
inc
aaa
movsl
mov
lods
sbb
pop
mov
outsl
test
out
jp
inc
fdivp
sbb
aas
incb
test
lcall
jp
lahf
add
std
pop
xchg
test
aaa
out
adc
sarl
jbe
pop
aas
cld
rorl
daa
movsb
xlat
push
pop
into
cld
test
out
mov
jne
es
mov
dec
inc
jb
pop
call
iret
stos
cmpsb
mov
in
mov
mov
loope
sbb
mov
ss
cli
test
or
sbbb
jmp
push
out
mov
loope
sti
aaa
int
sbb
fidivrl
pusha
pop
cmp
mov
mov
mov
jns
outsl
push
add
xchg
shrb
add
pusha
out
adc
push
mov
jbe
push
ret
adc
cmp
rol
and
push
pop
xchg
push
ss
pushf
stos
out
int
out
mov
loopne
mov
add
imul
mov
and
add
fs
fbld
es
xor
ljmp
mov
mov
popf
cwtl
add
lock
int3
js
adc
add
data16
or
add
xchg
adc
and
push
mov
sub
rcrl
or
lret
adc
in
out
push
pusha
addb
jl
mov
cmp
lcall
xchg
stos
rcr
inc
cmc
lock
dec
mov
sbb
shll
sbb
fildl
aas
jbe
jg
imull
ret
adc
insl
in
les
cld
jne
sub
push
rorb
inc
pop
stos
lret
sbb
aaa
aad
gs
inc
rol
sbb
jno
jle
rcrl
ss
into
push
lods
xor
xor
xchg
call
add
lods
in
jns
outsb
mov
adc
push
mov
pop
gs
or
imul
scas
mov
and
cmp
popa
mov
or
inc
lods
fsubl
xorl
xchg
push
jge
inc
fdivr
insl
xchg
xor
xor
scas
sub
sub
shll
shl
loope
sbb
cli
xchg
pop
mov
stc
das
test
std
jmp
les
fisubs
cmp
popa
mov
ljmp
mov
jmp
inc
dec
cwtl
ret
cltd
sti
cmp
sub
xchg
sarb
gs
fnsave
or
xor
xor
mov
ret
mov
xchg
or
cmp
fs
fdivrs
mov
lea
mov
test
outsl
or
push
push
repnz
jnp
or
cmp
in
xor
mov
ror
pop
cmp
push
rorb
xchg
dec
addr16
dec
push
mov
cld
bound
push
imul
fstpt
scas
mov
fistps
js
mov
inc
dec
test
ljmp
bound
repnz
sbb
ljmp
mov
gs
and
es
ja
insb
jmp
fists
scas
sbb
dec
cmp
dec
cmp
movups
and
mov
adc
daa
andb
or
cld
sbb
mov
ss
in
lret
xchg
out
pusha
in
cmp
or
cmp
xchg
add
out
inc
jno
cld
in
jns
cmp
push
outsl
scas
or
mov
inc
dec
aam
add
fxch
mov
cwtl
test
adc
or
cltd
pop
dec
repnz
jns
push
ss
pop
jno
mov
out
sub
dec
add
data16
scas
nop
lods
pop
and
mov
loope
sahf
aas
jl,pn
pop
fwait
mov
data16
lods
pop
jg
out
mov
sysenter
cld
inc
gs
into
mov
bound
fldt
popa
mull
mov
stos
add
ljmp
cmc
xor
cmp
and
mov
out
daa
mov
pop
jle
popf
mov
sahf
out
sub
xor
sti
jle
mov
inc
bound
mov
cmpsb
inc
jl
cmp
xor
stos
leave
movsl
cmp
dec
loopne
xor
mov
add
jne
push
ljmp
jmp
push
rclb
push
and
fsubs
sbb
adc
xlat
in
xchg
out
lods
call
add
dec
push
rorl
pop
test
popa
bound
sub
jmp
je
mov
out
or
or
dec
cwtl
cltd
xor
ret
xor
push
in
push
test
jbe
hlt
lcall
jnp
das
and
aaa
inc
pop
mov
cmpsb
sbb
mov
fstpt
ljmp
repnz
repnz
shll
repnz
push
out
andl
loopne
leave
push
sbb
hlt
add
addr16
gs
push
je
jmp
in
stos
mov
lahf
cwtl
scas
push
notl
jno
xor
lock
mov
jp
lock
js
stos
cli
mov
incb
pop
icebp
sub
dec
je
rolb
jecxz
das
dec
pop
mov
push
push
iret
inc
xchg
or
jns
adc
shll
lods
iret
mov
push
and
or
jmp
je
sbb
or
sahf
pop
lret
jo
push
cmp
insl
repnz
adc
aaa
clc
sbb
xor
cmpsb
scas
sub
ret
pop
out
cltd
call
or
dec
das
pop
test
fistl
sub
jge
shlb
sbb
pop
pop
data16
sbb
add
cmc
sahf
or
scas
lods
xchg
cmp
xchg
lahf
enter
sbb
pop
sub
iret
xchg
or
das
adc
adc
cs
mov
mov
mov
jle
pop
push
and
imul
out
mov
push
fisubs
insb
aam
jl
xchg
popf
aaa
hlt
jns
xchg
dec
dec
in
jns
dec
and
mov
jl
jmp
mov
xchg
mov
mov
repz
les
popf
xor
mov
mov
xorl
dec
cs
adc
cmp
mov
nop
jmp
push
xchg
xchg
jecxz
sub
std
mov
xchg
push
cs
imul
mov
mov
sub
xchg
adc
jns
outsl
xchg
push
add
push
scas
test
inc
rcll
inc
sbb
pop
push
mov
sub
xchg
push
divb
outsb
xor
insb
mov
inc
bound
cs
xor
loop
mov
lods
push
sbb
mov
call
xchg
xor
jbe
adc
or
or
int
inc
dec
and
fisubs
dec
dec
push
adc
pop
scas
nop
aad
outsl
mov
movsl
xchg
xor
or
test
xchg
adc
sub
popf
adc
add
mov
mov
in
outsl
aad
in
cmp
fcoms
out
aas
and
pushf
xor
push
fs
in
clc
ja
inc
jp
addr16
xchg
ss
or
cli
testl
sahf
dec
push
push
sbb
push
aam
or
add
cmp
mov
or
push
push
lahf
mov
cmp
rorb
push
cmp
adc
dec
es
outsb
add
lcall
popf
imul
test
notb
imul
push
pop
add
pop
sahf
mov
dec
pop
in
lret
xchg
out
jmp
addl
mov
mov
sbb
rcll
push
int
jnp
and
iret
inc
and
jnp
shlb
jle
add
sbb
xor
dec
mov
aaa
push
ffree
leave
mov
test
jb
test
cli
push
std
sub
pop
addr16
dec
sbb
pushl
lea
cmp
stc
jo
push
or
mov
mov
lcall
add
sbb
dec
sbb
clc
fwait
or
push
inc
pop
cmpsl
xor
sub
or
gs
mov
or
xchg
push
jae
pop
lods
shrl
and
fs
mov
imul
jae
add
dec
mov
cltd
jge
sahf
test
movsl
jbe
rorb
xor
arpl
jne
inc
sbb
ljmp
xor
cld
mov
movsl
jl
shl
mov
inc
dec
das
aaa
into
enter
dec
out
lds
in
jns
das
cwtl
jmp
stos
cltd
push
push
inc
inc
sub
jmp
cmc
push
inc
in
popa
sti
inc
lods
or
leave
mov
pop
ss
pop
int3
movsb
adc
mov
mov
sub
add
out
leave
adc
sbb
jo
add
xor
mov
sub
rcrl
pop
ljmp
and
outsl
pop
xor
insl
bts
xor
cmc
and
sbb
cmp
addr16
xor
jbe
lret
addr16
dec
int3
cwtl
inc
aas
pop
lods
pop
mov
and
or
push
lret
mov
cmc
adc
es
je
add
lds
stos
lods
cs
daa
imul
mov
lods
into
sti
shrb
sub
and
js
cmp
repz
sbb
fcoml
test
inc
mov
loope
xchg
mov
mov
jmp
lods
sub
out
addl
pusha
leave
gs
lret
in
subb
mov
xchg
clc
gs
pop
mov
mov
leave
xor
jnp
dec
jo
insl
mov
lahf
icebp
repz
and
fdecstp
push
xchg
push
ja
test
in
xor
lock
xchg
dec
popa
dec
adc
cmp
negb
or
cmp
cmp
test
and
shlb
bound
or
cltd
int
mov
sub
repnz
inc
divl
inc
les
inc
scas
cs
les
gs
addr16
mov
or
adcb
adc
imull
jae
cltd
and
add
dec
or
dec
xchg
pop
addl
sub
les
dec
adc
xchg
es
mov
sbbl
decl
sbb
nop
ud0
movsb
test
clc
mov
sbb
xchg
push
movsb
call
icebp
add
lret
jb
add
ljmp
cs
fdecstp
insb
mov
into
sub
enter
ja
ja
test
negb
mov
push
fsubs
xorb
jae
jmp
cld
clc
xor
insb
mov
cmc
test
pop
sti
daa
dec
lock
loope
enter
pushf
sub
movsb
in
fcoml
ret
xlat
clc
mov
out
jnp
inc
ljmp
jecxz
xor
cs
icebp
ja
pop
mov
stos
popf
mov
lods
xor
sub
insl
mov
lret
jmp
push
pop
dec
sti
adc
rol
mov
fistpll
sar
add
xchg
mov
mov
dec
mov
dec
jmp
cmp
mov
mov
fistl
add
repnz
movsb
in
mov
ja,pn
ficompl
shll
rol
sbb
cmp
pusha
jno
sbb
pop
inc
into
stc
fwait
call
add
jg
xlat
xchg
mov
das
inc
mov
enter
jns
push
cmpl
das
clc
js
lds
sub
std
cmp
mov
xchg
addl
sbb
mov
sbb
adc
xchg
adc
pop
ljmp
test
or
adc
pop
jp
jo
out
addb
arpl
imul
xor
add
jl
or
push
mov
cmp
mov
inc
movsb
xor
outsb
adc
pop
cmpsb
fildl
pop
cmpb
test
jl
and
jp
xlat
inc
addr16
jo
adc
mov
leave
test
inc
cmp
fs
test
xlat
jo
scas
add
inc
cmp
loope
pusha
rclb
inc
jle
pop
inc
mov
adc
sub
aad
bound
fdivr
dec
push
mov
xor
pop
rorb
sbb
mov
mov
jmp
test
or
ret
cmpsl
std
jns
shl
fistps
int
dec
inc
js
jl
inc
mov
or
nop
daa
mov
lahf
insl
nop
add
xor
or
push
xchg
inc
out
mov
fsubrs
cmp
xor
dec
insb
das
mov
lods
lret
mov
inc
push
out
aaa
testb
push
mov
mov
ficompl
dec
fucomip
sub
addl
inc
cmp
mul
pop
and
cmp
push
addb
mov
adc
dec
xor
pop
sub
xor
je
mov
and
jmp
clc
and
fst
out
iret
ret
inc
mov
call
outsb
mov
in
xor
xchg
pop
sbb
xchg
mov
and
or
loopne
mov
les
jb
ret
jbe
clc
call
mov
jle
and
sub
adc
lea
rclb
lods
out
sub
movsl
jmp
iret
loope
pop
js
push
cld
mov
lret
mov
pop
xchg
sub
sbb
xchg
mov
dec
xlat
xor
not
inc
cmp
es
test
lahf
pushf
gs
fsubrs
push
sbb
inc
insl
inc
sbb
inc
jle
ret
mov
cli
pop
mov
inc
sub
pop
and
dec
cltd
push
xchg
inc
pushf
cmp
sub
inc
int3
mov
mov
mov
dec
xor
ljmp
sub
sti
ja
fs
test
jno
out
je
lret
cmp
cwtl
cmp
ljmp
fwait
sbb
es
outsb
jns
into
lahf
outsb
pop
int3
outsl
rclb
add
push
push
mov
mov
fistps
jmp
jp
mov
mov
inc
and
js
lret
pop
loop
ljmp
out
daa
sbb
sbb
jae
es
sbb
insl
repnz
out
jp
xor
je
int
test
dec
jg
into
add
jo
mov
sbb
add
ja
mov
inc
push
adc
imul
addb
dec
ja
jmp
enterw
inc
sbbl
outsb
jp
stos
xor
sbb
xor
icebp
sbb
pop
sub
xchg
cmp
data16
fwait
xor
adc
mov
xchg
inc
xor
js
js
jbe
ljmp
inc
subb
cmp
add
inc
frstor
dec
fsubrs
dec
mov
aad
mov
jle
jp
mov
stos
in
dec
jl
pop
jo
add
fcmovnu
movsl
xchg
arpl
xor
jp
repnz
xchg
rorb
sarl
lods
test
push
out
data16
dec
icebp
inc
or
cmp
jns
xor
pop
cmp
pop
mov
inc
stos
into
inc
pop
fdivrs
shl
xchg
adc
je
mov
mov
icebp
xchg
mov
mov
std
icebp
fs
sbb
repnz
outsl
into
add
loop
lods
mov
sub
scas
and
mov
outsb
cmpsb
mov
repnz
xor
lcall
sub
jns
int
cmp
in
mov
ja
jmp
rcrb
fdivp
xchg
add
repnz
imul
sub
mov
stos
sbb
mov
jne
lret
rcrl
dec
test
cmpl
out
push
sub
test
pushf
sub
pop
mov
inc
shrb
jb
test
dec
lcall
sbb
mov
repz
loop
shl
push
shl
outsb
xchg
popf
shrl
cs
ss
cli
mov
aas
insl
push
fisubrs
cmp
addr16
add
dec
movsl
sbb
cmpsb
lods
popa
icebp
cmp
andb
fwait
mov
int3
rorb
jb
pop
lret
cwtl
pop
mov
lcall
sub
lcall
test
stc
popa
push
inc
sbb
sub
ja
movsb
jbe
imul
test
inc
cmp
push
jo
inc
dec
mov
test
push
mov
ret
pop
pop
test
sti
xchg
insl
or
imul
in
jge
add
or
mov
push
aas
push
and
or
and
jb
lret
or
dec
sbb
lahf
outsl
jecxz
out
outsb
leave
push
jmp
je
lea
popf
xor
sub
lock
lods
push
ffree
mov
xor
neg
insl
out
sarl
outsl
xchg
out
push
fists
or
adc
nop
mov
fs
mov
sub
mov
scas
lcall
and
test
in
fmull
and
xchg
add
cmpsb
or
stos
mov
leave
cmpsl
and
mov
ja
call
pop
nop
pop
sbb
pop
sub
dec
jne
and
pop
pop
fcompl
pop
and
dec
imul
sub
andl
mov
scas
or
and
aaa
shlb
mov
adc
iret
ret
mov
push
shrl
adc
pushf
lods
aad
and
inc
push
andl
movsl
mov
popf
xchg
stos
inc
mov
sub
push
out
sub
lock
in
in
jp
mov
sbb
je
lahf
rol
das
inc
mov
fcmove
push
rcrb
xchg
adc
loopne
pusha
dec
inc
dec
cmp
ret
in
gs
and
cmp
stos
and
jge
xor
inc
sub
scas
rcll
mov
and
xor
insb
icebp
mov
in
cwtl
mov
repnz
jno
sub
push
sbb
mov
sbb
mov
xchg
in
cmc
add
test
cmp
sbb
cmpsl
inc
stos
ljmp
xchg
daa
sbb
scas
pop
sub
inc
ret
cwtl
aad
cmpb
jns
cmp
fnstcw
sbb
outsl
adc
mov
fldl
stc
outsb
lcall
xlat
sbb
adc
pushf
fidivrs
cmovl
lcall
mov
imul
cwtl
pop
dec
cmp
lea
out
fxch
mov
fs
push
je
add
cmp
ret
outsl
scas
dec
jge
lahf
ret
dec
into
lods
mov
std
jae
inc
imul
dec
add
mov
leave
xlat
push
loopne
movsl
or
mull
leave
fs
jmp
es
in
pusha
add
pop
mov
pop
jmp
ljmp
in
push
xchg
mov
jb
mov
fs
je,pn
lea
icebp
mov
movsl
sbb
data16
test
sbb
sbb
push
ret
cli
popa
test
sub
push
aam
scas
scas
lds
pop
xorb
fsubl
mov
mov
int
push
scas
loopne
or
mov
call
out
cmp
xchg
arpl
cs
adc
sub
cmpsl
jmp
sbb
sarb
stos
dec
jo
push
inc
or
push
ret
dec
test
in
loop
pop
xor
jo
and
pop
jbe
push
xor
push
les
jge
pop
inc
imul
xchg
ss
cld
sub
mov
mov
inc
sti
rclb
add
fimuls
aam
mov
pop
jb
mov
xchg
stc
dec
mov
mov
popf
jl
mov
pop
cbtw
out
jns
sbb
fisttps
fiaddl
mov
xchg
xorl
lret
mov
inc
fimull
popf
pop
lcall
cmpsb
adc
dec
push
imul
in
push
cmove
cmp
or
xor
push
aaa
sub
push
andb
dec
xorb
rcr
pop
dec
dec
sub
lahf
in
ja
aaa
in
jne
jp
rclb
imul
mov
jo
cltd
add
dec
aad
lahf
inc
sbb
lods
scas
imul
adc
adcb
fcoms
pop
not
sti
sahf
mov
jb
sbb
add
mov
ficoml
or
xchg
in
and
fdivrl
pusha
flds
inc
js
in
mov
jne
loopne
adcb
cmpsb
mov
js
mov
pop
mov
cmpb
cmc
sub
jnp
pushf
aas
fwait
loope
daa
out
sub
das
mov
ljmp
incb
scas
inc
mov
and
jbe
testl
pop
sub
inc
test
repz
ja
mov
insl
and
jno
popa
dec
and
cli
dec
push
xchg
movsb
mov
xchg
push
daa
adc
jnp
push
jae
jecxz
pop
mov
fsubrl
dec
pop
repnz
popa
or
pop
jo
mov
lret
fisubrs
mov
xor
fldcw
xor
jns
cmp
pop
cmp
movsb
outsl
inc
xor
mov
mov
shlb
inc
push
push
pop
test
mov
dec
add
xchg
insb
jle
sub
jns
stos
movsl
push
aas
dec
lret
in
xchg
pop
and
cltd
sarl
jne
mov
cmp
mov
popa
aas
cmpsl
dec
dec
xlat
and
frstor
ja
scas
aam
test
fwait
jne
wrmsr
out
outsb
into
jmp
pop
mov
sbb
aas
sbb
sub
call
pop
mov
push
xchg
mov
xchg
clc
jge
ja
jp
xchg
add
mov
data16
mov
int
out
fdivl
add
jo
scas
inc
sbb
xor
or
aas
jmp
lds
mov
cmp
adc
jl
cmpsb
cltd
push
mov
aas
test
mov
sub
fsts
cmpsl
and
mov
or
cld
cmp
lods
push
lahf
push
mov
push
mov
add
or
inc
push
iret
clc
mov
ds
jecxz
les
std
pop
scas
rcrb
xor
cltd
iret
mov
fcmovbe
sahf
fistps
and
repnz
mov
nop
mov
leave
popa
or
sarl
sbb
popf
push
mov
imul
xor
xchg
cmp
cld
xchg
jge
nop
pop
popl
cmp
push
roll
inc
add
and
add
rorb
mov
jns
negb
pop
std
inc
rcll
imul
sbb
lcall
scas
pop
xchg
nop
fdivr
inc
ret
xor
xor
push
clc
jb
cli
addr16
inc
gs
ja
ficompl
xor
xchg
aaa
mov
aas
movsl
or
movsl
div
in
xor
inc
fadds
adc
sub
fdivrl
ljmp
stc
aaa
add
xorl
push
sarb
push
ljmp
daa
bound
lock
sub
jmp
push
loope
std
and
xchg
and
test
mov
sbb
pop
xor
sbbb
dec
loopne
pop
push
or
ret
sbb
cltd
mov
lret
movsl
mov
cmp
fmull
scas
add
pop
fbld
lcall
inc
mov
loopne
cmpsl
push
push
fnstenv
pop
mov
dec
xlat
mov
cld
test
outsb
je
sub
or
std
ja
adc
inc
or
int
cmp
jmp
movsb
repnz
jl
stos
pushf
in
cmp
push
sub
mov
sbb
cmp
and
cmp
or
rdpmc
push
loopne
cs
popf
mov
lods
mov
jne
repnz
out
adc
gs
outsb
loope
mov
sarl
pusha
cmp
out
test
pop
fs
xchg
sarl
sbb
mov
scas
lea
dec
mov
test
jecxz
out
fiaddl
sbb
mov
sar
cmp
and
bound
mov
ss
imul
aaa
mov
in
sub
daa
aad
add
out
mov
sbb
jns
test
mov
jp
stos
and
mov
and
fimuls
in
test
mov
jp
stos
add
push
dec
cwtl
mov
sbb
mov
mov
cmpsl
sbb
popf
xor
pop
jo
xorb
in
into
movsb
lret
je
mov
inc
shrl
cmp
mov
cmp
and
mov
bound
pushf
dec
fxam
mov
push
sahf
cmc
mov
and
sub
ror
icebp
and
mov
and
jp
push
lods
jp
push
icebp
jb
pop
jp
mov
repz
les
xor
sbb
pop
outsb
xchg
cltd
push
jge
sahf
pop
dec
and
rorb
rclb
xchg
sbb
int
jnp
push
pop
and
clc
mov
inc
inc
xchg
inc
xor
sbb
out
enter
dec
mov
jp
mov
les
add
out
mov
mov
jno
mov
add
pop
mov
sbb
xor
lret
mov
inc
into
inc
cld
dec
sub
cmpsl
daa
inc
push
jb
inc
movsb
stc
mov
add
push
repz
mov
sbb
fimuls
cmp
iret
xchg
sub
cmp
fsubrs
xor
mov
jp
adc
sbb
aaa
pusha
mov
enter
out
jl
jns
je
outsb
add
gs
jnp
xchg
fsubs
icebp
pop
test
adc
push
mov
or
cmpsb
dec
sub
test
jno
jb
addr16
cltd
nop
insl
inc
out
lret
push
scas
push
inc
shrl
ds
xlat
xor
push
jnp
and
test
lock
adc
cmp
pop
testb
push
mov
arpl
cld
jecxz
sbb
sbb
jo
adc
std
sub
ret
mov
mov
loop
ljmp
iret
xor
mov
daa
jns
lret
sbb
pop
mov
ja
cmpsb
mov
in
ljmp
imul
repnz
adc
add
xor
and
lahf
jno
outsb
or
dec
push
push
mov
hlt
popf
mov
push
pop
es
push
push
iret
jb
fiaddl
nop
cmpsb
repz
fsubs
sar
in
fdiv
pop
js
aam
hlt
sub
adc
frstor
fisttpll
mov
xchg
add
mov
dec
sahf
mov
mov
ficomps
je
mov
pop
sub
mov
push
or
inc
jb
or
dec
icebp
insl
xor
pushf
dec
push
jg
icebp
cltd
incl
call
cmp
pushf
in
cmp
dec
cmp
pop
mov
xchg
ret
pushf
mov
es
je
mov
lds
pop
ror
pop
clc
fcoml
mov
push
mov
pop
push
scas
stos
jne
loope
mov
mov
mov
jmp
loope
addr16
push
mov
fst
and
push
sbb
in
pop
mov
std
into
push
lea
ljmp
xlat
lock
push
pop
repz
push
xchg
test
mov
xchg
xchg
sbb
fistpll
insl
bound
shlb
and
inc
and
mov
sbb
dec
jle
shl
movl
xor
cmp
mov
out
xor
push
call
mov
daa
pop
je
sub
and
aam
pushf
outsb
rorb
ds
mov
push
jb
outsb
fistl
cwtl
dec
push
loop
xor
shlb
sbb
fiadds
pop
or
movl
sbb
mov
or
push
lahf
addr16
inc
shl
insb
sub
mov
sbb
lods
or
jl
add
outsb
pop
jne
cmp
int3
movsb
cmc
xchg
mov
cmp
adc
push
jl
cmp
xchg
cmc
cmp
jmp
and
outsl
add
mov
ja
testl
or
pop
not
scas
mov
loopne
fistps
mov
jne
add
or
inc
aas
js
pop
outsb
aam
test
imul
sub
cmpsl
sbb
fs
or
add
out
mov
mov
cld
insb
aas
cwtl
lret
ror
mov
lock
jne
ss
mov
out
pop
adc
fdivrl
loopne
loope
repz
lods
insb
aad
sub
ffree
push
adc
mov
dec
mov
rcl
xor
inc
pop
sbb
rorb
mov
dec
int
xor
inc
out
loopne
arpl
dec
pop
clc
gs
test
xor
fcoml
add
popf
xchg
or
and
sbb
cmp
dec
addr16
mov
jne
or
and
mov
xchg
xor
adc
lahf
mov
jo
cmc
dec
adc
subl
adc
jle
cmp
test
jo
dec
dec
testl
mov
aam
mov
pop
xor
sbb
mov
sbb
jne
and
jb
xchg
rorb
ret
inc
sub
je
add
push
dec
sub
and
bound
pop
inc
mov
inc
jmp
shr
fildll
popa
sbb
and
sbb
lcall
mov
mov
repz
enter
cmp
rclb
and
push
fwait
jo
push
cltd
jns
cmp
arpl
ret
fsubl
fldcw
push
outsl
or
and
dec
scas
sbb
add
jno
mov
pushf
ud2
push
outsb
xchg
pop
sbb
jne
cmp
clc
int3
fists
dec
shll
inc
cmpsb
adc
dec
call
dec
mov
hlt
mov
xchg
push
jmp
push
push
ret
nop
adc
push
and
mov
ja
mov
mov
int3
popf
sub
jb
das
insb
rolb
test
js
shrl
cmpl
test
pusha
sbb
push
fimuls
push
lods
std
push
cs
mov
cmp
mov
enter
mov
cmpsb
dec
and
fidivrs
into
or
in
push
aas
orl
xlat
push
mov
and
shl
mov
add
sub
or
test
test
out
inc
cmc
sub
jecxz
enter
dec
add
ret
in
push
int3
je
loopne
cmp
rolb
scas
pop
add
mov
pusha
mov
sub
test
jl
clc
arpl
or
inc
mov
addr16
cmc
in
sub
mov
mov
jnp
add
fdivrs
dec
iret
mov
jmp
dec
shlb
cli
int
pop
lret
inc
adc
push
inc
out
mov
adc
jge
adcl
packssdw
pop
sub
push
mov
stc
dec
and
jae
xlat
ss
mov
cwtl
sub
cmp
dec
jbe
loope
cmc
dec
xchg
jne
push
cmp
add
ja
jg
adc
lock
adc
xlat
cwtl
int
lods
fdivl
sbb
out
ret
loopne
test
and
and
repnz
mov
inc
outsl
sub
bound
nop
jl
jnp
inc
aam
fs
push
pop
jle
jp
ret
push
jno
popf
and
mov
adc
mov
xor
cmp
gs
jo
ret
dec
or
call
sub
push
cmp
jmp
pop
cmp
or
jb
sbbl
dec
aaa
or
fdivl
inc
cli
dec
push
mov
loop
std
xchg
or
shll
cs
mov
jmp
es
movzbl
insl
adc
pusha
pop
xchg
jle
jno
jnp
xor
pop
push
out
push
adc
inc
out
push
pop
ja
mov
cmp
mov
je
enter
frstors
jmp
rcll
cmpsl
in
pop
mov
int
sarl
fwait
push
fs
mov
cmp
jmp
imul
xchg
xor
jbe
and
add
fdivl
cmp
inc
xor
cli
push
jo
leave
jg
inc
sbb
mov
andl
pop
adc
fsubrs
xchg
lret
pop
lods
popf
sbb
in
jp
out
jle
loop
out
pushf
repz
nop
fdivr
jg
outsl
xor
mov
or
jp
xchg
jb
addr16
add
sbb
jge
sub
dec
push
cld
mov
inc
mov
fldt
cmp
add
inc
repz
rclb
fildll
rcrl
ficompl
push
xchg
xchg
lret
rsqrtps
and
xchg
inc
aas
push
xor
in
daa
insl
xor
repnz
jecxz
stos
arpl
in
inc
xor
movsl
sub
loopne
jp
repnz
mov
ffreep
dec
shl
call
cmp
cmp
leave
pop
mov
dec
addr16
mov
in
adc
mov
cmp
sub
daa
add
jge
mov
mov
rorb
call
mov
shlb
sbb
mov
lcall
inc
data16
repz
sbb
aas
xchg
cwtl
adc
aaa
sahf
dec
fcomps
sbb
inc
lret
outsb
jnp
add
insb
mov
push
int3
outsl
fnstcw
mov
fcoml
js
lds
cli
ss
push
jmp
movsb
fwait
mov
in
loope
je
pop
mov
in
xor
mov
pushf
push
es
mov
xchg
cltd
mov
lret
ret
mov
stos
lock
mov
clc
test
push
popf
addr16
out
aad
xchg
pop
jp
pushf
sub
pop
and
lret
inc
add
pop
cs
jne
cmpl
clc
adc
add
aaa
inc
fstl
cwtl
mov
sub
ja
out
pop
repz
loope
sti
inc
cmp
jmp
pop
sbb
xor
inc
mov
je
lock
fisttpl
icebp
or
sbb
shl
or
jo
dec
iret
mov
push
inc
mov
daa
push
or
popf
mov
mov
pop
leave
adc
hlt
aad
cmp
fisubrl
mov
or
mov
adc
lods
mov
sub
sbb
sbbb
js
pushf
stc
pop
jae
icebp
jb
sbb
add
sti
les
test
dec
sbb
sahf
mov
insl
xchg
insb
push
add
mov
adc
test
daa
fmull
pop
dec
insl
cltd
jbe
test
pop
or
outsl
aas
fwait
iret
loop
cmp
push
xor
dec
lret
es
aaa
in
lret
xchg
call
in
push
sarl
jmp
add
pop
imul
enter
pop
push
pop
nop
sbb
scas
imul
xor
mov
inc
punpckhdq
jnp
or
repz
xchg
in
mov
dec
flds
in
cli
jp
jbe
inc
xor
in
jo
push
fcompl
imul
stos
mov
movb
jo
lods
jae
and
call
sub
xchg
aad
and
adc
and
mov
cmp
call
inc
sub
in
cmpsb
sub
jns
leave
js
push
jae
aam
mov
pop
ja
xor
test
pusha
mov
jbe
or
movsl
stc
js
add
in
sub
dec
dec
jecxz
cmpsb
clc
push
push
adc
stos
jnp
vpcmpeqd
rcrb
jmp
or
mov
cld
push
je
push
xchg
xor
jp
sbb
jg
jle
cli
cmc
loopne
and
jg
scas
jg
arpl
daa
es
cltd
fcoms
inc
jns
or
dec
add
sub
in
jmp
sbbb
jmp
xor
in
outsl
or
xchg
and
out
dec
adc
fwait
sarb
mov
dec
fists
fidivl
cs
xchg
out
pop
jg
xchg
xchg
dec
push
xor
popf
subl
xor
out
push
push
mov
xor
test
dec
hlt
frstor
shll
in
addb
dec
cmpsb
ret
mov
hlt
pusha
jo
movsl
mov
int
mov
out
je
jmp
ret
inc
pop
pop
mov
stos
jae
divb
pop
dec
sbb
dec
rcl
mov
pop
xchg
loopne
jle
in
enter
jp
ds
push
mov
mov
daa
mov
xor
fwait
out
xor
dec
mov
inc
add
push
sti
lods
sbb
push
int3
push
sarb
ds
add
and
dec
test
test
in
into
dec
cmpsl
js
decl
faddl
movsl
dec
and
pop
adc
jmp
jp,pn
in
add
jne
mov
cmp
clc
jns
fwait
std
mov
adc
stos
repnz
lcall
push
cmpsl
outsb
push
cmp
clc
movl
lea
pop
jo
punpckldq
sbbb
jae
mov
push
orb
clc
sbb
add
sbb
insl
or
inc
scas
sub
jg
jmp
pop
pop
test
in
mov
xchg
notb
mov
pushf
mov
xchg
seto
fcoml
push
out
insl
push
xor
xchg
sub
mov
push
lret
hlt
xorl
imul
mov
insb
adc
jnp
ljmp
cmc
pop
iret
mov
or
fstp
imul
cmp
inc
call
loop
insb
aas
and
clc
movsl
into
dec
fisubs
xor
or
std
and
jnp
jmp
or
cmp
push
inc
lock
sbb
dec
sbb
daa
sarb
dec
movsb
mov
jmp
lock
push
punpckhwd
in
out
into
js
fs
ja
sbb
adc
mov
lods
mov
inc
sub
subl
icebp
xchg
mov
pop
add
outsl
fdivrs
jb
int
jnp
xor
int
adc
aam
into
push
bound
jge
mov
js
push
les
cmp
mov
imul
pushl
cmp
jno
mov
cmpsb
inc
ja
mov
js
xor
fadds
out
mov
add
cwtl
xchg
mov
cmp
jg
mov
rcrb
mov
sahf
cltd
out
cmp
inc
sbb
icebp
pusha
test
cmp
jb
es
mov
loopne
fs
cmp
mov
xchg
mov
mov
pop
xor
sahf
cmp
fisttps
push
cli
mov
ljmp
dec
xchg
mov
nop
cmp
test
jle
cmp
xor
addr16
ret
jl
push
daa
arpl
hlt
data16
dec
adc
testb
pop
or
sub
negb
dec
sbb
mov
dec
xor
popa
imul
mov
dec
and
cmp
scas
call
les
mov
push
fdivrl
nop
inc
mov
adcl
mov
and
mov
in
jnp
out
call
repnz
rcrb
push
add
scas
push
xchg
out
jge
pop
mov
push
mov
dec
pop
or
loope
push
cmp
mov
outsl
inc
je
push
fs
es
shl
insb
or
pop
das
jo
add
dec
aaa
mov
rcrl
les
js
pop
jbe
out
les
out
adc
mov
mov
jecxz
sub
loop
in
mov
sub
fcompl
iret
mov
sub
push
pusha
xchg
iret
mov
loop
sbb
popf
out
push
jl
jle
jp
push
pop
sub
sar
sbb
arpl
rclb
imul
sub
push
inc
adc
scas
ret
add
dec
lret
sarl
cmp
cmpsb
add
lock
inc
lea
or
mov
jp
cltd
push
jnp
jns
fiaddl
testl
mov
movsl
fstpt
iret
jb
popa
fisubrl
mov
inc
lods
scas
push
les
mov
cmpb
cli
or
test
sub
and
mov
outsb
cmp
lret
adc
sbb
std
js
into
inc
mov
pop
adc
cmp
sbb
xlat
inc
into
fisubs
adc
pop
lcall
dec
icebp
iret
jle
in
dec
dec
shl
insl
std
loop
sahf
adc
int3
ret
xchg
push
fs
int
data16
and
dec
aas
mov
icebp
add
je
mov
jne
mov
and
pop
or
fiaddl
sbb
add
popa
jg
stos
andb
xchg
cmp
aaa
insb
cmp
add
dec
ret
movb
push
sbb
gs
xchg
mov
jbe
and
and
or
dec
xor
add
xor
xlat
shrl
scas
ret
jb
push
lods
push
jno
pop
xor
shlb
pop
popf
cltd
push
call
mov
cmp
out
jmp
mov
adc
sarb
and
cld
loop
in
shlb
js
push
jl
push
das
push
loop
cltd
pushf
rorl
in
pop
dec
movsl
dec
adc
clc
lods
and
dec
dec
mov
lret
mov
mov
mov
sub
add
jnp
fnop
pop
and
test
push
repnz
movl
nop
mov
xchg
leave
paddsb
scas
pop
push
inc
mov
scas
mov
jno
mov
mov
mov
jl
jmp
jb
inc
je
daa
pop
pusha
jle
inc
dec
data16
pop
add
imul
lds
loopne
lret
or
bnd
xor
outsb
inc
xor
cwtl
mov
in
mov
enter
insl
mov
or
cmp
out
mov
and
xchg
push
idivl
adcb
popf
cmc
mov
test
lcall
xchg
sti
pop
jp
xlat
mov
enter
dec
mov
test
in
movsb
inc
cmc
pop
cld
or
out
xchg
sbb
xor
test
dec
cmp
rorl
rol
inc
ss
scas
pop
in
mov
leave
xchg
aas
lahf
das
sub
mov
rclb
mov
popa
movl
fstpl
fisubrs
inc
aaa
xchg
sbb
xchg
fcmovb
out
in
dec
nop
mov
xchg
leave
fists
sub
dec
xlat
nop
mov
inc
inc
aad
sbb
cltd
xor
add
add
ja
ss
push
iret
movl
das
fistpl
pop
push
shrl
shlb
shrl
call
ja
scas
xchg
sub
xorb
jb
insb
fstps
mov
popa
sbb
mov
icebp
ret
push
movsb
cmp
and
add
out
and
mov
cmp
cs
ljmp
ss
and
roll
clc
dec
sbb
xor
scas
hlt
ja
adc
mov
bound
nop
imul
loop
inc
roll
test
fcompl
lahf
in
fprem
and
sub
mov
jge
xor
and
aas
mov
jecxz
pushf
sub
push
mov
ret
push
cmp
push
add
ret
clc
aaa
lock
call
jle
pop
lods
inc
xor
jbe
jb
pop
int3
cmc
fdiv
mov
call
into
mov
xor
jmp
jae
dec
stc
test
xor
sub
mov
mov
mov
ss
shlb
movsl
mov
adc
dec
fldt
stos
sub
jmp
jp
notb
loopne
jbe
and
sbb
icebp
icebp
jmp
push
incb
lods
in
pop
inc
pop
jae
ret
jmp
mov
dec
xchg
pop
fiaddl
lret
inc
sub
or
add
outsb
inc
shr
xor
pop
mov
mov
pop
or
xchg
sarl
push
je
mov
add
mov
jb
out
xchg
in
enter
pusha
jae
push
loopne
iret
jle
sub
sub
pusha
mov
scas
mov
mov
dec
jmp
inc
adc
mov
test
or
pop
fs
xor
mov
mov
mov
addr16
daa
push
aaa
inc
es
pop
cs
xor
cld
mov
pop
incl
ja
sbb
xchg
je
ret
inc
fcompl
outsl
fucomi
mov
inc
movsb
jae
cs
dec
out
cwtl
jmp
or
sbbb
xchg
das
inc
jg
inc
jp
faddl
scas
push
mov
jb
sbb
loope
sahf
inc
fldl
shr
add
insb
out
fcmovnb
jbe
iret
fsubs
loope
pop
push
pushf
sub
es
adc
loope
cli
rorl
inc
loope
push
push
cwtl
fs
xor
fsubr
sub
daa
rorb
aad
and
and
fwait
push
push
sub
or
fsubrl
pop
jecxz
lds
sub
ljmp
cmp
loop
inc
inc
fisubrs
pop
mov
test
xor
mulb
push
push
sbb
push
lahf
and
jns
or
fdivp
mov
mov
fdivrl
push
insb
mov
lds
push
add
push
scas
lea
xor
int
lds
cmpsl
add
add
fstpl
xchg
sbb
shrl
mov
mov
inc
sarl
pop
inc
pop
or
cmpsl
int
or
pop
add
jge
mov
mov
or
lret
lret
add
sub
mov
fistps
push
popa
aam
jne
and
lcall
test
ret
repz
rol
dec
in
push
lret
stc
adc
aam
cld
push
sbb
add
andl
lret
icebp
mov
test
cmp
xor
pop
mov
call
or
xor
cmp
jo
xchg
insl
jb
jns
sbb
jbe
out
iret
jo
add
mov
jb
cmpsb
imul
cmp
shlb
and
sbb
jmp
mov
push
mov
cltd
add
ret
sbb
mov
sbb
es
xor
js
enter
fsubrs
mov
jmp
add
jno
mov
out
or
ljmp
jno
jp
adc
push
mov
inc
sub
xchg
inc
pop
dec
pop
sub
iret
int
mov
and
mov
mov
push
out
fistl
or
jmp
pop
and
ret
dec
jb
cli
or
xor
xchg
arpl
loopne
ret
in
jnp
in
adc
xchg
mov
xor
das
adc
sbb
or
js
stc
push
les
ljmp
call
inc
movsb
cld
push
add
or
dec
orl
cli
push
jecxz
cmpsb
sbb
pop
add
data16
and
sbb
sbbb
or
inc
std
out
jmp
sbb
fsts
xchg
aad
insl
ljmp
fcomi
mov
jmp
stc
flds
push
cwtl
cs
and
mov
sbb
leave
loop
or
popf
mov
push
notb
mov
or
ds
xchg
sub
insl
lods
hlt
xchg
sub
ret
mov
jne
insb
sub
test
stos
push
ja
sbb
jnp
or
data16
aas
jl
mov
loop
and
inc
xchg
xor
stos
stos
xor
and
imul
hlt
mov
into
xchg
aam
sub
aam
daa
mov
dec
and
mov
loop
pop
loope
dec
imul
cli
push
pop
pop
popf
push
and
mov
add
cmp
cld
aas
testl
mul
inc
add
jl
or
daa
pop
ret
mov
inc
cmp
ds
mov
adc
les
jns
out
fs
ror
gs
mov
push
call
add
rclb
lcall
popf
fdivrl
outsl
ret
xlat
cld
sbb
inc
xchg
stos
cli
in
hlt
lds
mov
repz
jl
sub
fmuls
xlat
push
mov
gs
xchg
add
xor
cmc
pop
ljmp
pusha
imul
xchg
mov
and
adc
or
sbb
loopne
xchg
test
or
mov
ret
cmp
or
adcl
push
pop
add
push
ret
in
sbb
stc
mov
leave
dec
ja
cmc
pop
xchg
sub
decb
dec
rorb
pop
xchg
mov
add
inc
inc
mov
or
addb
cmp
inc
or
les
clc
or
inc
fistpll
push
les
in
sbb
jne
mov
jle
add
add
or
adc
mov
xor
jmp
roll
push
rcrb
js
iret
outsl
xor
pusha
jnp
jle
repnz
stos
pop
dec
mov
add
xchg
push
lcall
loop
or
sar
xor
daa
cmpb
icebp
cmp
pusha
or
xor
push
cmpsl
and
adc
mov
rclb
xchg
sub
insl
repnz
mov
sub
xchg
fdivrs
das
divl
push
fisttpll
push
inc
fisttpll
push
call
sti
sub
fistps
mov
xchg
inc
add
and
je
xor
insb
imul
stos
and
inc
lahf
fidivl
incb
and
inc
pop
scas
int3
add
lret
jle
or
aas
sub
push
outsb
jns
lahf
bound
call
inc
pop
jbe
xchg
jbe
xchg
or
lock
jmp
or
out
imul
pop
fidivrs
adc
pop
sub
and
xchg
clc
dec
mov
dec
aas
jg
mov
add
mov
push
testb
mov
lret
lock
ret
idiv
or
sbbb
pop
js
mov
adc
lea
cltd
xchg
ss
sbb
outsl
inc
ja
add
sbbb
jbe
sub
hlt
lcall
xor
leave
jno
sub
aad
pop
adc
push
and
push
lret
insl
stc
loop
jmp
sarb
std
test
mov
loop
outsb
das
mov
ret
jae
fs
daa
pop
mov
mov
push
sub
shll
into
fisttpl
lods
xlat
and
push
in
leave
insl
movsl
add
call
out
adc
sbb
out
xor
jg
sub
movsb
adc
inc
fldl
mov
repz
gs
inc
push
mov
lcall
ficompl
inc
add
fsubrs
xchg
sub
mov
popa
out
ja
lahf
jo
rorl
in
add
lret
mov
dec
imul
mov
dec
outsb
adc
test
dec
pop
dec
outsl
jae
adc
stos
je
lahf
pop
dec
fscale
in
pop
dec
pop
addr16
pop
in
shl
stos
xchg
jg
jno
mov
out
pop
inc
lods
sbb
inc
sahf
or
dec
lock
bound
cltd
cmp
insb
loop
add
mov
into
and
jnp
enter
ds
js
or
stc
stos
add
les
lods
xchg
push
test
adc
and
push
roll
aas
or
pop
dec
pushf
push
es
decl
ss
pushf
cs
mov
icebp
cmp
pop
aas
xor
push
push
sub
leave
xorl
js
jns
lret
cmpl
loop
js
sti
or
pusha
insb
arpl
imul
movb
repnz
adc
fs
stos
sarb
shlb
mov
adc
or
gs
sub
inc
ret
rcl
add
stos
ja
in
jo
aaa
fistps
test
enter
movsb
scas
jb
adc
dec
xchg
push
xor
dec
inc
rorb
sbb
ret
jmp
adc
mov
and
cmp
pop
add
inc
test
daa
jecxz
push
mov
add
push
lods
gs
clc
jg
or
xor
loopne
jne
cmpsl
adc
mov
and
mov
xlat
lock
jbe
push
push
outsb
scas
rcrl
push
shl
adcl
mov
bound
or
cltd
cld
dec
push
pop
mov
sub
roll
ror
mov
mov
fstps
fnstenv
std
lods
pop
out
fstps
popf
cmp
jbe
dec
or
int3
in
test
jle
subl
pop
scas
inc
icebp
mov
mov
xchg
xorb
xor
xchg
adcb
lahf
loope
xchg
lahf
push
add
cwtl
push
filds
pushf
jno
sbb
push
fadds
and
add
roll
insb
cmc
jp
xchg
xorb
repz
mov
sub
jg
pop
cmp
sub
mov
lods
ficoms
arpl
shl
jae
daa
push
roll
cld
movsb
in
shr
clc
dec
sbb
xor
in
xor
dec
out
add
push
std
xlat
aaa
xchg
les
xor
mov
adc
loopne
push
ret
stc
mov
in
aaa
pop
movsb
std
or
push
cmpb
jge
xlat
out
or
imul
loope
inc
ja
jg
int3
push
pop
adc
or
lock
je
jbe
or
and
mov
cltd
movsb
cmp
out
fwait
insb
cmpsl
scas
xor
mov
into
fwait
int
push
pop
in
mov
xor
and
xor
pusha
pusha
push
or
andl
jg
cld
or
cltd
movsl
cltd
in
pop
mov
loopne
push
pop
hlt
popf
out
dec
add
cmc
push
pop
rol
sub
lahf
mov
add
push
push
push
mov
cld
xor
out
cmp
and
mov
gs
jae
jbe
rclb
or
and
test
xchg
sti
ljmp
mov
or
xchg
mov
cmp
xlat
dec
cli
push
xchg
dec
aam
lds
popf
pop
lahf
mov
and
inc
ror
fisttps
inc
inc
fldcw
jns
pop
out
add
dec
call
mov
add
mov
sbb
push
mov
test
sahf
add
and
frstor
clc
fcoml
or
sbb
mov
cs
repz
cmp
stc
push
mov
xchg
dec
fcomip
jge
and
mov
es
fs
push
outsl
sbb
outsb
pop
adc
loop
add
push
or
gs
scas
inc
pushf
rorl
cmc
insb
xor
leave
push
xchg
sbbl
add
jae
and
les
push
sub
subb
fstpt
adc
fcmovnb
sbb
fcmovnbe
out
inc
in
int
adc
jl
mov
mov
or
stos
repz
fnstenv
cmp
push
and
int
sbb
fwait
push
jp
sub
mov
sbb
loopne
bound
or
cmpsb
jl
lods
cmpsl
loop
ret
stc
ret
hlt
push
outsl
xor
adc
stos
xor
inc
or
pop
sbb
shlb
scas
cmc
mov
dec
leave
and
aam
pop
xor
bound
or
xor
sub
ds
sti
cwtl
loopne
or
xchg
adc
pop
inc
maskmovq
pusha
mov
test
sbb
xchg
cmc
test
or
cmc
sbb
xchg
mov
or
push
dec
mov
pop
jnp
shr
sbb
push
ja
scas
jb
inc
add
cmpsb
into
loop
add
imulb
xchg
enter
scas
icebp
stos
dec
cmp
jnp
pop
fcmovnu
jle
adc
call
lret
xor
outsb
inc
xchg
dec
call
repnz
je
or
iret
mov
jbe
leave
addr16
cmc
or
ret
dec
inc
mov
xchg
mov
repz
lods
arpl
testb
ss
push
clc
andb
divl
xchg
push
pushf
inc
scas
shll
sub
or
adc
jge
jbe
jno
hlt
sbb
inc
and
and
sbb
repnz
scas
jne
fstpt
and
jecxz
pop
imull
dec
mov
xchg
inc
aaa
add
push
ljmp
in
inc
xchg
lret
roll
cmp
mov
cs
cli
icebp
ret
xlat
jbe
loopne
and
mov
jno
shll
incl
xchg
pop
add
xchg
xorl
push
outsl
mov
adc
cmp
push
push
xchg
xchg
push
mov
mulb
scas
std
cmpb
jno
sbb
mov
mov
xchg
push
fbld
jecxz
in
add
or
push
jmp
dec
or
jl
xchg
cmp
dec
inc
fucom
scas
push
enter
push
jg
daa
add
lcall
adc
add
loope
test
ja
xchg
stos
dec
test
xchg
sub
xchg
into
cld
hlt
mov
repz
dec
jl
pop
adc
xchg
sub
xchg
rcrb
xchg
push
mov
pop
and
test
cmp
sarl
stos
fildll
cmp
test
call
jge
insl
mov
or
or
repnz
dec
cmp
sbb
or
adc
outsl
dec
call
shll
incl
sub
dec
mov
lds
pop
adc
les
sub
fwait
and
data16
add
dec
imul
mov
dec
xchg
cli
cmpsl
and
mov
pop
xor
mov
xchg
pop
xchg
cs
pop
out
dec
and
xchg
push
pop
lds
mov
stos
std
sub
xchg
and
jne
fldcw
mov
add
int3
xor
mov
arpl
aaa
xlat
xor
mov
mov
cmpb
mov
lods
in
cli
test
hlt
stos
push
mov
sbb
rcll
adc
cli
xchg
hlt
int
push
cmp
inc
hlt
bound
repz
stc
aam
stc
popl
ficoml
das
movsl
test
nop
pop
pop
jbe
jecxz
sub
lock
jle
out
mov
inc
adc
fs
xbegin
xchg
rcr
movsl
jg
mov
lods
ror
mov
les
push
adc
orb
jb
lock
sub
mov
adc
pushf
cmpsb
das
popf
cli
mov
js
xchg
insb
fildll
sub
fstpt
push
gs
mov
aam
adc
dec
add
push
pop
insl
repz
insl
cvtps2pd
sbb
in
outsb
loopne
jg
out
lcall
adc
lds
stos
clc
aad
sarl
loope
cmpsl
sahf
enter
mov
ret
jns
sbb
xchg
psrld
jge
lahf
jge
daa
jae
bound
enter
inc
fs
mov
push
mov
mov
sbb
call
cmpb
jb
movsb
loop
push
and
mov
out
notl
out
jg
xchg
mov
push
sbb
pop
add
jmp
movsl
jle
mov
mov
enter
in
rcrb
add
enter
inc
nop
cmp
inc
mov
into
inc
cwtl
in
and
jmp
xchg
jo
ljmp
lret
xlat
fstl
fstpt
push
push
pop
das
aam
adc
pop
pop
repnz
push
scas
in
je
enter
lods
mov
lahf
gs
inc
adc
js
imul
dec
and
adc
push
and
cwtl
shlb
mov
sub
sbb
stos
nop
sub
cmpsl
fmuls
xor
fimull
orl
mov
std
mov
mov
icebp
fdivrl
clc
adc
sub
push
push
mov
arpl
loopne
aas
dec
add
cmc
adc
push
test
fwait
mov
add
jns
daa
leave
mov
fprem1
pushf
push
popa
dec
pop
test
xor
andb
outsb
mov
push
push
or
daa
cmp
jmp
aaa
push
sub
scas
cld
insl
jnp
es
test
pop
cmp
call
lods
andb
push
out
xchg
xchg
cmp
rclb
cmc
push
stos
jae
lmsw
into
jnp
mov
or
testl
cmp
sub
out
fnstsw
jp
cmc
jne
jmp
ds
adc
sbb
fistl
pusha
out
sar
sub
push
xor
andps
jecxz
mov
lock
add
dec
lock
aaa
in
leave
enter
sub
jmp
insb
test
push
lret
test
fistpl
out
leave
sub
adc
pop
pop
push
aaa
scas
pop
push
pop
pop
daa
loope
adc
stc
stos
mov
mov
jae
pop
cmp
pop
adc
loopne
mov
or
flds
ss
hlt
out
int3
faddl
aaa
sti
jmp
inc
sahf
xor
pop
dec
test
loope
fldt
jne
xor
inc
pop
and
clc
or
push
fcoms
mov
scas
movsb
repz
jbe
cmp
mov
and
pop
and
jecxz
fdivl
xchg
ficompl
and
cli
lds
ss
out
data16
js
ja
shl
and
mov
pop
pusha
adc
sbb
adcl
xor
sbb
aad
mov
pop
and
stos
scas
arpl
sbb
or
icebp
or
dec
sti
jbe
aas
pop
inc
jp
cmp
mov
mov
adc
add
mov
pushf
std
jp
lds
outsl
andl
dec
enter
js
inc
sub
mov
ljmp
icebp
add
mov
loop
lds
lret
shlb
nop
cld
mov
scas
aad
cmp
mov
inc
stc
adc
pop
sbb
in
mov
xlat
inc
xor
mov
adc
dec
ljmp
push
inc
outsl
push
mov
pop
das
sahf
stos
scas
xor
fadds
mov
mov
jno
mov
mov
leave
leave
push
xchg
fbld
adc
lret
xorb
xlat
and
jecxz
mov
push
add
ret
scas
xor
cmpsl
ret
sub
push
movsl
and
icebp
adc
in
leave
mov
mov
outsb
cwtl
aaa
stos
inc
xorb
cmpsb
push
outsb
jnp
lock
dec
jmp
loop
sbb
in
fwait
mov
xchg
push
push
xchg
int
inc
dec
mov
pop
iret
sysret
and
or
sub
jne
ss
in
stos
shl
outsb
addr16
mov
fnsave
dec
sub
in
fsubrl
arpl
jne
sbb
cmp
aaa
mov
out
and
dec
ret
cmp
dec
jle
add
jle
mov
enter
mov
les
orb
std
gs
outsb
dec
mov
or
pushf
pop
add
mov
xor
stos
xchg
mov
in
jae
lret
jmp
add
and
stos
and
repz
das
cmp
pushf
or
ss
in
pop
pop
xchg
outsb
xor
xchg
mov
sti
gs
push
decl
cld
ficomps
sbb
inc
cmp
pushf
mov
push
add
loop
jmp
outsb
out
stos
fldl
insl
movsl
mov
pop
xchg
dec
scas
in
jnp
sbbb
inc
push
test
outsb
iret
cld
inc
jbe
andl
adcb
fldcw
push
lds
mov
jnp
stos
out
fsubr
xor
mov
icebp
iret
mov
icebp
cltd
adc
rorl
mov
xlat
xor
rorl
pop
mov
xlat
add
pop
inc
xor
push
cmp
fs
ds
xor
push
bound
clc
leave
fprem1
or
iret
jecxz
jbe
lock
pop
mov
dec
add
jmp
movsl
nop
pop
punpcklwd
add
test
cmp
fstps
rcrb
mov
lods
stos
dec
adc
cli
in
dec
dec
enter
out
xchg
and
je
sbb
adc
push
cltd
jge
pop
andb
mov
or
data16
scas
stos
inc
adc
and
mov
out
iret
adc
and
addr16
loopne
pop
bound
jne
and
cmp
rolb
dec
xor
push
scas
or
mov
adc
add
mov
push
xchg
mov
add
ss
pop
pop
lods
and
arpl
repz
mov
jnp
stos
or
push
push
scas
ja
out
es
and
ds
cmp
pop
push
sahf
popa
mov
cwtl
call
xor
mov
mov
sub
xor
add
stos
push
lret
mov
pop
push
pop
cs
pop
jae
outsb
popf
pop
jbe
pop
bnd
add
jecxz
mov
mov
inc
rclb
xchg
cs
push
aad
arpl
shll
outsl
shrl
leave
sti
leave
sbb
add
fwait
ljmp
xchg
out
cltd
dec
pop
sbb
jl
ss
fdivrl
inc
or
aas
inc
mov
cltd
int
jg
cmc
pop
inc
stos
bound
xor
out
cmp
cli
jge
cmp
in
ds
mov
push
mov
ret
add
dec
sbbl
cmp
enter
mov
xor
stc
mov
xchg
sarb
fimull
jecxz
and
mov
xchg
push
subl
xchg
sti
sbb
xor
aad
fistl
out
pop
movsl
mov
inc
icebp
repz
pop
push
push
movsb
shlb
or
cmp
out
fucomp
gs
ljmp
xchg
shrb
mov
push
inc
aas
adc
movsb
mov
cmp
jb
inc
push
and
xchg
push
sbb
or
ljmp
outsl
js
das
arpl
in
or
mov
inc
xchg
mov
pop
into
frstor
adcb
inc
sti
push
pushf
arpl
icebp
mov
sarb
outsl
xor
fs
or
push
or
add
rcrb
test
shrl
addr16
jmp
adc
or
mov
push
out
sbb
fsts
loop
pushf
mov
out
add
cmp
pop
dec
std
mov
and
cmp
xor
add
jl
sub
movsb
dec
lahf
rcrb
mov
jle
push
inc
ljmp
xchg
int
xlat
jo
mov
mov
add
movsb
stos
push
loop
xchg
sub
and
rolb
and
mov
cmpsb
mov
mov
adc
test
call
and
push
pop
adc
test
shl
push
sbb
jb
xchg
pop
test
xchg
out
xchg
je
pop
xchg
pop
imul
pop
leave
outsl
push
mov
sarb
aad
pop
and
xorb
sub
movlhps
pop
xor
dec
dec
js
in
mov
mov
push
xor
sbbb
sub
shll
ss
add
ljmp
dec
jecxz
dec
ret
pop
xchg
je
mov
frstor
add
in
shll
mov
lds
cmp
mov
rorl
or
cmpsb
mov
cld
and
outsl
bound
cld
gs
add
std
lods
pop
adc
fstpl
jb
out
lods
mov
aam
stc
push
xchg
bound
inc
loopne
or
dec
fisubs
mov
scas
inc
pop
in
mov
lcall
mov
pop
fnstenv
cmpl
test
pop
les
add
out
adc
call
sub
sbb
cld
jge
rcl
test
and
pop
cmp
mov
rol
sub
rcrb
clc
jp
sub
cmp
bound
xlat
sbb
inc
and
mov
aaa
sarl
push
jl
sub
cmp
push
cmp
adc
push
xchg
mov
insl
shrl
push
mov
loop
fstps
cmp
push
and
dec
cs
subl
mov
test
push
add
sub
mov
jo
adc
sub
mov
cmp
sub
adc
iret
subl
cmp
les
sbb
pop
xchg
jb
aas
ret
cli
pop
rclb
mov
push
fcmovu
dec
xchg
aas
xor
jbe
sub
xor
and
jecxz
into
in
sar
pop
cmp
addr16
loop
mov
clc
mov
and
pop
and
sbb
dec
data16
sub
sbb
sti
jp
daa
gs
mov
sub
jb
cltd
outsb
dec
orb
xchg
scas
mov
push
popf
push
roll
imul
mov
stos
mov
sbb
fidivrl
xchg
pusha
aad
pushf
jne
imul
mov
hlt
iret
test
jmp
mov
leave
xchg
popf
or
test
xchg
sub
inc
popf
daa
inc
jp
ljmp
sbb
dec
push
pop
inc
int3
fdivp
fwait
inc
add
cmp
dec
jae
subb
cmp
and
fistpll
or
push
bnd
pop
cmc
dec
xchg
add
inc
fdiv
sub
repz
mov
and
pop
xor
sarl
mov
lds
ss
dec
inc
wrmsr
sbb
imull
mov
shlb
jo
gs
xor
dec
or
mov
mov
lods
addr16
pushf
mov
and
aad
dec
mov
and
pop
mov
cmp
stos
jno
inc
in
mov
insl
or
xor
xor
sahf
out
dec
idivl
push
fldt
mov
icebp
fwait
jl
mov
jmp
jb
insl
lcall
xor
push
lea
xlat
sbb
sbb
loope
dec
xchg
in
sub
test
insl
popa
xchg
and
fnstenv
out
test
dec
je
iret
addr16
mov
lahf
into
loopne
jp
jle
leave
cmp
jecxz
push
mov
pop
call
sbb
cmp
jg
adc
das
lret
sub
cmp
pop
in
scas
arpl
pop
pop
ss
cmc
stc
push
mov
xchg
jo
jmp
cwtl
mov
and
dec
cld
shll
jns
clc
dec
daa
ljmp
mov
xor
push
cltd
out
jmp
mov
ret
inc
pop
xor
stc
mov
xchg
add
popa
mov
into
cs
push
xchg
fsubs
mov
fnstsw
inc
push
mov
lcall
aam
pop
outsl
push
das
hlt
cmc
pusha
loope
aas
mov
in
xchg
mov
stos
jp
subl
mov
in
bound
dec
or
adc
xchg
ret
sbb
dec
rcr
xor
xor
pop
ds
jge
aaa
iret
sti
sti
push
imul
cmc
stos
fsubrp
adc
shl
cmpsb
out
int3
lcall
fxch
or
cmc
jge
add
xor
adc
sbb
scas
inc
test
xor
mov
in
xor
mov
mov
cmp
dec
sti
sub
xor
xor
lds
loop
mov
cmp
and
pop
mov
gs
ljmp
inc
dec
stos
pusha
imul
jae
cmp
fcoml
repz
loop
or
adc
or
jmp
out
iret
cld
dec
xlat
mov
xlat
mov
icebp
xor
pop
bound
gs
stos
test
mov
or
dec
dec
lcall
adc
mov
les
sub
add
or
aam
dec
subb
mov
jne
jl,pn
mov
shrl
loop
inc
icebp
hlt
push
leave
aaa
mov
xor
loope
out
mov
fcomip
sub
hlt
dec
inc
sbb
sbb
and
outsb
cmpb
notl
lahf
mov
jge
popa
pop
hlt
or
pop
movsl
inc
adc
inc
push
je
fdivl
xchg
mov
push
push
test
push
mov
adc
pop
sub
mov
arpl
daa
andl
inc
shrl
movsl
mov
cld
cltd
in
idiv
add
fstpt
std
mov
mov
fmull
pop
fcomps
inc
out
inc
mov
pop
xchg
add
shrl
in
lcall
xchg
daa
add
inc
mov
mov
stc
rol
bsf
pop
mov
mov
xor
xchg
pop
sbb
add
xor
hlt
pop
mov
repz
rcll
xorb
out
add
in
fldt
add
std
xor
jbe
jle
daa
cs
or
out
movb
subb
cmpsl
pop
push
aas
add
dec
xchg
pop
rolb
aas
mov
jg
out
pop
xchg
cmp
xchg
mov
jb
pop
fmull
sub
hlt
adc
add
add
mov
add
mov
pop
push
push
push
movsl
add
js
cmc
xor
and
add
fsubrl
inc
aam
insb
std
pop
sbb
aaa
jmp
mov
jo
jno
mov
lods
in
xchg
mov
and
fcmovb
lahf
pop
shlb
xchg
repz
out
push
fildl
aaa
imul
inc
dec
fisttpl
push
sbb
push
mov
arpl
scas
or
test
fcmovb
ret
jnp
jb
in
inc
xchg
sbb
and
out
jge
out
dec
out
loop
pop
mov
add
unpcklps
fmuls
pop
int3
icebp
clc
enter
sub
or
and
cmp
int3
movsb
enter
pop
add
testl
xlat
jecxz
inc
mov
data16
mov
adc
out
and
movsl
jae
jg
jmp
cmpsl
ja
leave
add
mov
leave
push
outsl
ret
xchg
ss
mov
mov
jecxz
sarb
aaa
xchg
stc
sbb
adc
lea
call
loopne
mov
mov
xor
call
fdivrs
adcl
es
and
xor
adc
je
negb
add
mov
mov
pop
shr
inc
ret
lods
jp
sbb
aaa
dec
and
test
ds
outsb
or
inc
mov
sarl
inc
pop
xchg
insb
bound
sbb
inc
addr16
sub
adc
push
xchg
rorb
jnp
jg
xchg
sahf
mov
cmp
dec
popf
cmp
stos
leave
outsb
pop
test
and
jge
testb
sbb
jno
mov
loope
xor
out
sub
xchg
movsb
aad
div
sbbl
cwtl
lcall
mov
inc
ds
je
cmp
cmpl
es
scas
stc
pop
xchg
movsl
call
xchg
add
gs
xchg
sub
pop
adc
xor
inc
push
imul
test
jns
push
adc
xor
lods
arpl
fisubrs
fcomps
stos
jmp
lds
xchg
repnz
jbe
or
out
add
pop
pushf
mov
daa
fildll
push
test
cmp
ja
aas
xor
add
sub
ljmp
je
pop
adc
stos
ret
inc
in
pusha
cli
mov
outsl
sbb
divb
mov
xchg
jp
push
sub
fsubr
jmp
fimuls
cli
mov
les
adc
ss
orl
and
jne
jno
xor
cltd
push
dec
jno
sub
jg
into
sbb
mov
shll
pushf
fwait
popf
inc
aad
jbe
fidivs
sahf
cmp
fwait
shlb
movsl
clc
add
xor
and
daa
orl
daa
xchg
in
into
sub
lods
fsubrs
dec
sbb
insb
xchg
sti
daa
mov
out
xchg
or
push
in
or
pop
mov
push
sub
in
dec
dec
sbb
mov
xlat
call
daa
ret
inc
pusha
inc
aad
dec
xchg
pop
mov
add
outsl
into
inc
insw
es
call
jecxz
mov
jo
shlb
add
cld
or
mov
incb
mov
xchg
stos
popa
xchg
xor
xchg
test
jmp
cmp
jno
mov
ljmp
jmp
sbb
and
push
js
frstor
enter
outsb
and
xchg
jmp
mov
or
je
inc
mov
jnp
jne
pop
cld
xchg
xchg
xor
loop
dec
xchg
rorb
mov
xor
aas
mov
cli
xchg
lret
and
popf
xor
push
je
pop
adc
push
dec
jnp
outsl
xchg
inc
adc
pop
arpl
loop
add
mov
clc
test
jno
and
les
fisttpl
movsb
pop
popa
daa
pusha
mov
mov
cmp
fidivl
pop
jo
or
aam
push
cld
ss
jbe
and
scas
jge
mov
inc
xchg
aas
ret
inc
adc
jbe
pop
into
push
mov
arpl
repz
sub
aam
scas
or
test
ja
push
in
mov
cli
xor
pop
push
xor
mov
dec
std
arpl
jne
nop
mov
fs
mov
dec
inc
sbb
lret
or
mov
mov
cmpsb
mov
cs
clc
and
mov
cmp
dec
mov
jb
and
mov
sbb
cs
add
xchg
inc
pop
scas
jnp
jle
cmp
mov
push
mull
inc
mov
rclb
pop
sub
in
cmp
in
mov
hlt
jecxz
xor
push
pop
jns
push
inc
mov
movntps
inc
xchg
xchg
and
ljmp
dec
add
xchg
mov
adc
cmp
movsl
test
ret
jp
ljmp
adc
jae
sub
jg
scas
pop
xor
insb
ds
cltd
mov
sbb
pop
cmc
add
xlat
sub
and
pop
stc
sbb
aam
js
add
leave
lret
add
sub
add
push
jle
daa
test
arpl
sbb
and
or
rcrl
sbb
lods
adc
mov
xchg
shrb
scas
dec
mov
or
dec
mov
cmp
fs
sub
pop
fidivrl
and
mov
inc
fdivl
in
mov
les
xchg
mov
lret
sbb
jnp
cmp
divps
call
repz
push
jg
loopne
movsb
dec
mov
jmp
xor
ds
aaa
and
pop
cltd
or
push
repnz
lods
and
shlb
adc
mov
es
pushf
dec
xor
repnz
faddl
into
and
xchg
dec
aad
inc
sub
xor
lcall
std
into
xor
cltd
loop
xchg
in
add
std
into
and
or
sub
fnstcw
xor
lcall
out
data16
leave
mov
mov
cltd
pop
rorl
fmull
lock
out
mov
leave
sub
popf
dec
dec
popa
rcrb
push
pop
xor
mov
adc
in
mov
loopne
mov
jbe
ss
decb
pop
jg
test
loop
push
jle
xor
ja
and
gs
mov
lods
xchg
push
xorb
jne
dec
push
sbb
shl
movsl
or
cwtl
mov
jl
push
pop
mov
push
aam
mov
jp
adc
adc
xlat
xor
jmp
mov
xchg
cmp
jnp
call
adc
add
pop
fwait
mov
hlt
inc
mov
out
nop
push
shl
aad
cmp
mov
fldcw
out
stos
sbb
data16
adc
inc
jle
and
stos
fiadds
mov
add
sub
roll
dec
xor
aam
lret
inc
push
dec
mov
pop
data16
imul
clc
mov
push
aaa
outsb
rcrb
cmc
or
shl
inc
pop
cmp
jecxz
push
add
mov
scas
popf
cwtl
daa
out
dec
iret
aaa
sub
dec
dec
insb
lahf
or
mov
bound
scas
popf
dec
xlat
mov
in
loope
int3
xchg
repz
ljmp
jne
lret
loop
sbb
into
aas
pop
cmp
mov
das
daa
push
sti
gs
pop
mov
add
mov
push
xchg
push
sbb
sar
jmp
cmp
xor
mov
cmpsb
jnp
push
push
adc
jbe
pop
mov
inc
jl
repz
add
mov
add
scas
mov
push
ljmp
sbb
js
repnz
and
adc
pop
orb
je
mov
pop
lret
add
and
dec
loop
sub
gs
clc
dec
mov
fdivrl
push
pop
and
outsl
xlat
push
pop
push
pop
mov
sub
ficoms
aaa
es
pop
jge
subl
repnz
aaa
aam
addb
repz
add
inc
cmpsl
lret
push
push
sub
inc
rol
add
push
into
insl
jle
and
inc
mov
fiaddl
mov
imul
movsl
mov
lock
out
imul
pop
lods
sbb
sbbb
xchg
out
or
hlt
in
jno
setno
in
lret
fdivrl
push
repz
or
fdivr
lret
leave
sub
push
cmp
xchg
and
dec
cmp
cwtl
push
mov
push
inc
popf
imul
add
sbbl
ja
mov
push
mov
xchg
lds
xor
or
jmp
mov
sub
aas
lock
mov
inc
ljmp
pop
popf
pop
pushf
in
iret
incl
test
cltd
pop
sub
cmp
jae
xchg
sbb
sub
jmp
push
fldcw
mov
and
mov
leave
aam
loopne
sbb
push
xchg
clc
or
push
push
push
sub
mov
arpl
sti
push
aam
jns
add
dec
xchg
sbbb
pop
mov
push
dec
add
inc
jl
xor
insb
xlat
and
out
lock
cld
pusha
inc
jno
test
pop
dec
adc
push
or
sub
mov
sub
stc
mov
shrb
ret
mov
pop
lahf
int3
xor
test
adc
out
sub
leave
xchg
mov
mov
fcompl
cmp
mov
pop
or
or
cs
in
cmp
mov
mov
stc
mov
jl
cmp
in
sbb
jae
xor
call
mov
int
mov
add
subl
outsl
stc
xchg
push
inc
shlb
jge
mov
cmp
and
out
sbb
jne
xor
loop
cltd
fstl
movsb
jl
pop
xor
sbb
push
rcr
jl,pt
pop
jno
stos
fisubrl
or
arpl
cli
jmp
cmp
cmp
fisttpll
push
dec
cmp
pop
mov
push
dec
lds
std
xor
xorb
dec
aad
sbb
cmp
jns
push
xchg
mov
xlat
jns
mov
xchg
and
pop
fidivrl
jecxz
cmp
xor
xchg
push
adc
fimuls
inc
int3
inc
cmp
add
ljmp
inc
bound
jecxz
cmp
out
stc
adc
cmpsl
repnz
cmpsb
cmpsl
in
jg
or
pop
popf
xor
test
pusha
add
mov
adc
dec
gs
sahf
xor
mov
cmp
lcall
push
std
xchg
aam
xchg
pop
mov
add
xchg
cwtl
loope
jnp
movq
imul
and
mov
dec
mov
jmp
xchg
pop
xchg
pushf
idivb
bound
test
adc
xchg
inc
lods
inc
and
mul
decl
mulb
popf
clc
mov
xor
xor
mov
mov
xor
jl
add
push
insb
lahf
mov
in
pop
cld
in
ss
push
aaa
xor
mov
insl
lock
sahf
andl
aad
and
mov
cmp
sahf
and
lds
lcall
es
ret
fs
loope
sub
mov
int3
sub
in
out
jno
sbb
sub
dec
sti
adc
mov
cwtl
lret
or
add
xchg
shl
dec
jmp
xchg
fsubs
scas
iret
fdivrl
and
sbb
pusha
add
clc
mulb
mov
mov
or
outsb
or
add
inc
dec
hlt
int3
mov
mov
arpl
dec
rclb
loope
pop
adc
nop
jge
addr16
xchg
inc
loop
lods
push
push
mov
sbb
int
sbb
out
imul
jl
int
add
js
lods
in
jge
pushl
ret
fs
sub
sub
jp
out
imul
cs
jo
nop
rolb
icebp
pop
jnp
sbb
loopne
push
inc
xchg
xchg
js
stos
xchg
push
mov
mov
lret
mov
test
and
dec
cmpsl
jo
test
xchg
frstor
cmpl
mov
xlat
rorb
pop
icebp
in
cmpsl
rcll
mov
in
lds
mov
mov
shl
xchg
fimuls
pop
and
lret
ljmp
repz
xchg
inc
clc
add
inc
pop
sbb
or
xchg
fsubs
xchg
arpl
call
or
out
aam
out
insl
daa
mov
add
jb
stos
cmpsb
fsubrp
es
pop
cmpsl
pop
jns
aas
hlt
in
lcall
aam
aas
xorb
or
adc
rorl
shl
jmp
ds
in
dec
push
add
inc
pop
rolb
add
mov
xchg
inc
fistpll
shrb
loopne
es
nop
pop
loope
sub
xor
mov
or
or
sub
pop
push
add
pop
mov
xchg
and
add
out
adc
gs
loop
lret
jo
mov
ret
sti
cmp
cmp
cmp
pop
cmp
mov
imul
cltd
mov
cli
int
mov
lahf
mov
and
ret
add
mov
int3
ja
add
arpl
ds
push
pop
jnp
sub
mov
xchg
sbb
mov
stos
push
cs
shrb
clc
faddl
jl
popf
test
inc
xor
int3
mov
int3
addr16
imul
arpl
hlt
jl
and
xchg
push
scas
inc
pop
test
sbbb
cmpsl
cli
mov
inc
addr16
cmp
dec
inc
or
testl
pop
mov
fst
ss
inc
jp
inc
mov
xchg
cmp
sbb
pop
jae
dec
lcall
dec
push
jns
xlat
sarl
pop
outsb
xchg
in
in
imul
pop
jae
lsl
and
mov
imul
lret
mov
push
mov
iret
repz
cmp
nop
add
js
dec
pop
add
stos
imul
mov
xor
fdivl
add
add
xor
divl
push
sti
je
int3
ja
das
cltd
call
mov
mov
pop
push
push
xchg
mov
inc
adc
orl
in
adc
outsb
stc
pop
jge
lods
sub
inc
inc
sbb
lock
movsl
lea
je
in
ja
lock
inc
adc
inc
in
xor
jo
inc
and
test
cltd
mov
push
das
inc
cs
push
add
dec
leave
leave
xchg
loope
xor
repz
lea
mov
pop
mov
aad
or
mov
jge
mov
mov
test
mov
mov
xchg
cmpsb
lock
out
pop
outsl
repnz
sbb
aad
and
pop
or
cmpb
mov
xor
mov
and
outsl
mov
pop
cwtl
cmp
push
iret
xchg
push
adc
mov
in
xor
and
push
and
add
pop
dec
sbb
ret
repz
jmp
adc
push
mov
int
or
dec
adc
dec
sbb
fnstcw
arpl
xorb
add
sbb
pop
ud0
roll
mov
cmp
xchg
roll
pop
pushf
cwtl
add
xchg
or
and
cli
sbb
pop
test
cmp
jl
iret
pop
xchg
ja
mov
rolb
push
fs
adc
cld
mov
mov
dec
push
or
lock
mov
push
pop
pop
outsb
xor
in
xchg
fnstcw
test
fs
ffreep
push
add
push
push
push
mov
mov
rorb
repz
inc
add
lds
repz
fisubs
rcr
gs
or
jne
inc
or
arpl
cmc
xor
inc
push
or
pop
repz
jnp
jmp
ficoml
repnz
jecxz
aam
mov
push
inc
and
enter
mov
mov
hlt
fdivs
imul
aam
mov
jge
jge
jae
cmp
pop
nop
lods
mov
inc
mov
insb
xchg
mov
adc
sub
es
lret
jmp
rolb
out
inc
jo
rorb
jno
addl
pop
sub
jns
or
sub
add
sub
push
xor
sbb
mov
jle
add
aaa
addr16
sarl
xchg
sub
mov
lahf
les
out
int3
aam
jecxz
push
scas
push
mov
data16
mov
xchg
iret
xchg
cmpsb
loope
mov
xor
flds
repz
mov
xchg
cmpsb
frstor
popf
or
aam
loop
idiv
push
call
sub
cmp
loop
push
push
cs
cmp
lcall
adc
jae
adc
and
push
jecxz
inc
lods
jns
mov
rol
push
lock
sub
add
sbbb
or
adc
mov
arpl
clc
and
xor
inc
xchg
loop
dec
jmp
sbbl
test
xchg
and
mov
icebp
push
inc
xor
bound
jne
xchg
mov
out
les
add
aaa
sub
mov
bound
loope
and
dec
call
add
lods
divl
dec
out
mov
xor
cwtl
push
lahf
bound
out
push
cs
jle
ret
sti
push
fistl
jmp
and
shll
lds
xchg
xchg
mov
add
jp
pop
mov
or
inc
les
aam
mov
jle
mov
imul
mov
jno
repnz
adc
outsl
lcall
xchg
and
cmpsl
xor
xor
ljmp
inc
loopne
jns
jo
imul
cli
cmp
paddw
dec
mov
adc
inc
jne
mov
lret
jns
sub
mov
mov
push
pop
sub
push
dec
lock
mov
push
sub
jbe
test
stc
daa
xor
add
icebp
js
imul
inc
push
inc
cmc
adc
lret
ficompl
ljmp
push
mov
sbb
addr16
pop
jmp
stos
mov
xchg
rorb
mov
out
mov
jne
out
sub
mov
imul
std
repz
xor
xchg
das
xchg
xor
mov
rcrb
popa
mov
cmp
jp
mov
mov
cmc
push
inc
ret
sbb
mov
pop
push
rorl
popf
xchg
int3
or
in
inc
in
mov
mov
mov
mov
leave
fildl
cmp
movl
shlb
pop
xlat
cltd
push
jo
out
add
dec
ret
imul
lahf
xchg
or
scas
das
pop
jne
pop
pop
push
and
and
jp
arpl
jge
lock
testb
int3
xor
push
sbb
inc
stc
ds
pusha
cmpsb
nop
push
xor
sbb
adc
adc
rdtsc
sbbl
dec
mov
mov
adc
shrl
lds
cmp
stos
fnstsw
add
int3
stos
pop
popf
int
in
dec
fcompl
dec
dec
xchg
psubq
add
das
or
rolb
fsubrs
xor
notl
outsl
sub
lahf
mov
fcomps
jnp
mov
or
mov
or
mov
cmc
aas
ja
pop
adc
mov
pusha
dec
adc
int3
dec
enter
inc
push
cmp
adc
push
mov
jno
pop
std
movsb
hlt
mov
stc
push
dec
clc
cltd
or
push
fdivr
xchg
and
jnp
jecxz
pushf
mov
and
jo
mov
test
dec
in
jnp
push
loopne
dec
push
mov
xor
sub
cmp
cmc
sub
sbb
repnz
or
adc
daa
xlat
cmp
adc
pop
adc
xor
jmp
ret
mov
mov
pop
xor
imul
add
and
fstpt
sub
fmuls
imulb
and
pop
rol
mov
movsl
negl
xchg
mov
push
jmp
les
and
fsubl
add
aaa
arpl
jne
mulb
mov
fld
aam
sahf
mov
push
lcall
stc
lret
push
adc
clc
inc
and
mov
fstl
mov
mov
imul
and
std
loop
fsubrs
test
shll
std
mov
dec
lock
lods
outsb
mov
in
clc
in
xchg
fcoms
movsb
add
sbb
push
sbb
cmp
jg
jne
dec
aad
out
add
ret
xlat
mov
pop
inc
loope
insb
pop
mov
or
pop
adc
clc
inc
cli
out
adc
movsl
lea
inc
inc
out
stos
cmp
cmpsb
sti
fidivl
mov
mov
popa
adc
shlb
add
mov
lods
pop
data16
pop
mov
inc
fstl
adc
xchg
pop
out
insl
mov
gs
sbb
scas
out
dec
lea
xor
mov
test
jg
sbb
cmc
mov
sub
lds
ret
jmp
outsb
xchg
flds
add
imul
xchg
lret
lea
clc
ljmp
aam
scas
movsl
aad
mov
xor
inc
xchg
pop
cld
inc
inc
dec
sub
jge
aad
scas
sub
adc
mov
out
sti
lret
adcb
and
xchg
orl
xchg
hlt
jl
adc
subb
sbb
in
cmp
aad
sbb
pushf
push
in
mov
cmp
fdivrl
xchg
std
out
mov
sub
fisubrl
add
jae
mov
imul
xchg
inc
pop
push
sahf
adc
mov
mov
or
xor
jno
rorb
sub
outsl
mov
and
lods
jbe
add
or
sub
bound
or
and
sbbb
and
imul
in
mov
sbb
scas
xchg
mov
sahf
test
jns
dec
xor
jns
xlat
or
icebp
mov
jp
pop
adc
pop
jecxz
xor
adc
lock
or
stc
dec
mov
dec
adc
and
imul
lds
xchg
pop
mov
addr16
inc
rorl
xlat
adc
add
fwait
shlb
cmc
out
lret
int3
lret
xchg
dec
inc
jle
js
push
loopne
repnz
sbb
pop
or
mov
pop
iret
dec
ret
cmc
sbb
mov
lea
call
or
mov
mov
adcb
xchg
or
jo
loop
fldenv
in
repnz
ljmp
or
js
ljmp
mov
xchg
test
int3
lock
insl
fldl
and
push
loop
xchg
imul
mov
xchg
popa
pop
repz
ret
add
loope
push
lods
clc
sti
jnp
xor
xchg
fisubs
mov
fldl
xchg
jg
jno
sub
mov
pop
test
int3
nop
mov
jne
scas
outsb
mov
mov
test
mov
xchg
xor
push
in
aas
ja
or
add
pop
fwait
mov
fldenv
xor
jg
push
mov
pop
pop
aam
lcall
sahf
or
or
adc
adc
xchg
add
push
xlat
mov
push
mov
loopne,pt
fdivrs
popf
mov
jg
and
mov
cmpsb
mov
push
scas
jns
orw
dec
sbb
out
mov
mov
sbb
fiadds
js
das
lret
shl
pop
inc
inc
iret
sub
jne
push
sub
mov
add
cltd
sub
dec
addr16
std
dec
pop
pop
dec
out
and
test
add
testb
test
es
push
testl
arpl
xchg
js
mov
pusha
push
stos
mov
bound
cli
pushf
mov
les
sarl
repz
cli
push
mov
mov
xchg
inc
cmp
dec
ljmp
cmc
add
aaa
int3
push
xor
add
sub
mov
inc
pop
cmp
pushf
push
mov
imul
sub
fsub
jnp
sahf
int
push
or
xchg
stos
lret
outsb
xchg
push
xchg
cmp
push
push
or
sub
pushl
aaa
arpl
cwtl
pushf
adc
xor
ja
add
call
movsl
or
push
cmp
data16
sti
mov
inc
bound
inc
ret
pushf
pop
push
push
cltd
push
fcomps
movsb
fs
lcall
lea
add
ja
pop
mov
cmp
sub
andl
add
xchg
dec
jnp
inc
adc
mov
sbb
jmp
test
iret
jp
xor
loopne
mov
adc
push
out
adcl
rcrl
adc
push
and
xor
adc
call
fcoml
dec
add
arpl
mov
cs
push
jns
inc
call
lea
out
lods
sub
js
imull
push
xlat
pop
adc
in
jge
jbe
xchg
jno
cmpsb
inc
std
mov
xor
xchg
fwait
pop
sbb
mov
add
aaa
mov
aaa
add
ror
pusha
mov
xchg
mov
out
fs
ds
mov
pop
test
ficomps
push
add
pop
sub
jmp
adcb
mov
lea
or
dec
shlb
dec
xor
push
out
popf
sub
sahf
repz
ja
jmp
jnp
jecxz
dec
lock
mov
push
push
xlat
sub
mov
pop
mov
cmp
push
pop
ss
mov
mov
mov
adc
orl
std
int
fisubl
mov
dec
cmpsb
or
test
jbe
shll
and
mov
cwtl
popa
mov
sub
loop,pn
clc
xchg
dec
ja
dec
sub
je
or
mov
fadds
sar
loopne
lock
cltd
lock
loope
cmc
cltd
sub
push
dec
add
pushl
into
jb
and
push
dec
adc
js
dec
or
hlt
xchg
push
aad
xchg
jmp
notb
lret
aas
mov
fidivrs
sub
in
std
mov
aaa
mov
fadds
mov
and
mov
pop
ficomps
aad
into
xchg
dec
fdivrs
loop
dec
jb
pop
iret
sbb
xchg
dec
or
sti
pop
mov
mov
xchg
dec
jge
mov
fnsave
cmp
aas
dec
fdivrs
push
or
adc
inc
jle
push
test
push
xor
xchg
rcll
or
outsb
mov
xor
add
add
idiv
fldl2e
loope
mov
ja
sub
add
mov
or
cli
adc
testl
inc
insl
pop
push
enter
mov
adc
in
xchg
mov
mov
jne
js
dec
push
maxps
jg
push
or
rcl
mov
and
adc
sbb
sub
pop
leave
and
jno
ret
or
movsl
push
arpl
mov
adcb
gs
es
adc
or
push
fwait
das
mov
stos
jo
adc
imul
js
inc
sbb
push
repz
add
and
mov
push
fcoml
sub
in
jle
lods
pop
fsubs
dec
push
test
cli
pop
push
adc
xorl
bound
sbb
addr16
cmpsl
jnp
aam
insl
test
mov
and
rclb
out
mov
push
add
icebp
ret
int
clc
inc
cmpsl
lret
stos
mov
add
jmp
sbb
shll
xchg
and
mov
fildll
sub
test
sahf
jp
xor
leave
dec
call
dec
cli
jmp
push
fsub
push
in
xor
negl
ljmp
cld
cmpsb
and
inc
fwait
jns
dec
push
cwtl
movsl
sbb
mov
lods
in
push
pop
pop
and
pop
xor
pop
sub
test
aam
je
lods
sub
inc
jae
cmc
pop
scas
pushf
mov
loope
mov
lahf
mov
and
xor
sbb
lds
adc
xchg
outsb
fs
je
decb
sahf
xchg
push
push
mov
lods
sbb
shll
sti
imul
dec
inc
lahf
mov
jb
inc
fldt
popa
xor
dec
outsb
addb
les
add
pop
stos
sbb
cmp
adc
mov
sbb
push
lret
shlb
pop
push
sarb
cld
repz
mov
popa
adc
jecxz
xor
pop
js
cmpsl
test
jnp
outsl
in
arpl
xor
inc
cld
scas
xchg
hlt
add
mov
lcall
addr16
xchg
les
call
xchg
cmp
lret
test
jle
xchg
push
pushf
mov
setge
sub
mov
or
adc
push
mov
and
clc
int
leave
lret
push
lcall
push
pop
dec
imul
cmp
iret
inc
add
cmp
popf
add
add
mov
or
insl
aam
dec
test
out
push
and
add
test
inc
cld
dec
test
into
bound
popl
mov
into
adc
mov
pop
push
lret
jl
repnz
push
cmpsb
fdivr
mov
inc
ljmp
dec
outsl
ffree
je
cli
js
xor
das
fmuls
jo
loop
roll
or
add
adc
les
pop
or
es
test
mov
mov
hlt
jecxz
fsubl
pop
dec
dec
clc
pop
cmp
icebp
pop
pusha
dec
add
sub
xor
pop
pop
loopne
lret
xor
add
pusha
push
std
jle
sub
and
test
imul
pop
mov
ds
adcb
aam
mov
mul
leave
mov
dec
test
in
dec
adc
jp
push
xchg
ret
push
push
jp
mov
out
std
mov
jno
cmp
cmp
rolb
xchg
mov
cld
stos
orb
cwtl
sub
cmp
loope
iret
push
sbb
pop
int3
xlat
jg
push
jg
mov
pop
mov
add
divb
xor
int
dec
stos
or
out
xchg
das
jo
cmp
mov
fcomip
sub
ret
jo
into
pop
outsb
dec
mov
jmp
out
mov
cmp
dec
movsl
mov
popa
rcll
mov
icebp
cmc
jno
cmpb
adc
dec
test
aad
mov
mov
mov
lcall
mov
push
mov
add
jo
into
fisubl
pop
lret
push
jge
xchg
sub
mov
loopne
cwtl
rcrb
insb
lret
mov
mov
lock
push
data16
cmp
cmp
cmp
lret
ds
test
sub
jg
imul
push
ds
rcl
adc
ds
jnp
ret
mov
or
adc
mov
inc
inc
btc
inc
fists
sbb
pop
xchg
stc
inc
mov
jnp
xor
loop
mov
fst
in
das
in
jb
fstps
fwait
rorb
fists
mov
ja
jp
add
mov
test
jp
stos
push
add
sub
inc
outsl
dec
mov
mov
test
std
dec
inc
rclb
pop
popa
xor
jns
xchg
int3
int3
out
mov
and
mov
aaa
cmp
pop
insb
ds
push
mov
rcr
push
rcr
inc
jbe
xor
fdiv
repz
dec
ds
inc
mov
rcl
push
or
push
add
mov
imul
xchg
push
cs
pop
test
sub
movsl
je
pop
and
out
daa
push
pop
daa
movsb
mov
lahf
xor
rclb
aaa
cmpsl
aaa
jno
lahf
scas
sbb
inc
push
je
int
xchg
push
cmp
push
sbb
mov
mov
and
push
rorb
mov
add
add
pextrw
push
jae
jmp
enter
or
sahf
add
dec
sub
jecxz
imul
daa
iret
sub
hlt
or
dec
mov
push
lock
lock
dec
pusha
test
mov
aas
stc
lds
iret
add
aam
push
loope
pusha
and
cmp
pop
and
pusha
jmp
daa
push
pop
mov
dec
jecxz
jl
xor
pushf
fsubl
fstps
or
cld
out
jle
sbb
cld
lret
adc
push
mov
outsl
fld
cmpsl
mov
lahf
dec
dec
test
and
cmp
es
push
sub
lds
flds
test
je
mov
fidivrs
test
jecxz
push
insb
add
loope
or
into
fadds
mov
repz
hlt
and
hlt
push
lods
xchg
aas
cmp
pop
movsl
stc
xor
mov
scas
or
loopne
pop
out
adc
or
aad
pop
and
pushf
inc
mov
xor
jg
aam
cmp
xor
jno
cld
mov
mov
adc
xchg
ficoml
inc
lahf
inc
xchg
mov
mov
pop
out
sub
adc
sub
test
adc
data16
adc
pop
out
rcpps
gs
jmp
jg
lods
pop
sbb
sti
jle
in
stos
pop
outsl
shrb
inc
and
js
jns
sahf
addb
je
aaa
aas
add
or
ljmp
fildl
out
cmp
sbb
mov
xchg
adc
jno
jnp
mov
stos
repnz
mov
loopne
test
sub
lret
arpl
mov
ljmp
push
movsl
movsb
or
adc
push
push
int
sub
in
adc
jo
add
out
insb
js
rcrl
lds
push
shll
adc
ja
dec
xchg
mov
jecxz
pop
decb
outsb
repz
mov
adc
fcmove
aaa
pop
ficoml
adc
ja
sahf
scas
es
addr16
nop
xor
push
or
mov
push
sbb
mov
fs
fcomps
pop
mov
fnsave
rclb
mov
stc
inc
mov
enter
mov
mov
mov
out
push
jae
xorl
mov
cmc
sarb
pop
sarb
pop
fidivrl
dec
orb
jmp
in
cmp
test
pop
or
add
push
cli
int
hlt
popa
adc
add
cmp
mov
xor
push
in
and
and
nop
xchg
ds
and
pop
mov
cmc
lahf
insl
popa
sbb
loopne
xchg
outsb
loope
cld
stos
test
loopne
and
mov
outsl
int3
pop
sub
cmp
xor
fnstenv
lods
out
add
xchg
and
push
xchg
out
add
cmp
cmp
cmp
daa
pop
xlat
inc
lret
pop
dec
aas
mov
xchg
mov
lahf
mov
lret
out
test
or
push
dec
sub
mov
dec
dec
pop
fwait
jo
adc
and
pop
pop
inc
das
imul
rclb
addr16
cld
fcomps
leave
icebp
cltd
add
loope
aas
mov
xor
inc
xlat
sbb
and
jne
or
fwait
mov
les
push
mov
fildl
pop
jmp
add
mov
cmc
jns
mov
or
pop
sbb
scas
popa
stc
and
fstpt
push
push
scas
push
push
cli
sub
mov
dec
mov
je
outsb
in
imul
cmpsl
stc
call
cmpsl
dec
imul
scas
mov
lahf
push
pusha
add
popf
mov
push
sahf
daa
rcll
les
test
aad
loop
ja
out
mov
in
and
and
shll
aaa
insl
cmp
and
xchg
bound
insb
pop
test
sub
and
cmc
sbb
xchg
mov
jno
sub
stc
pop
push
push
xchg
sub
push
sbb
shll
movsb
mov
sbb
out
push
js
inc
insb
dec
es
mov
dec
lods
outsb
imul
popf
incl
push
retw
cmp
repz
fs
test
mov
pop
pop
cli
rcrl
or
and
pop
lcall
loop
enter
sti
leave
fstpt
ss
cltd
and
pop
enter
loopne
dec
lods
imul
dec
test
mov
fnstcw
fldenv
mov
push
adcl
fdivr
push
and
jmp
or
mov
cmp
rolb
add
xchg
stos
mov
out
pop
pop
cli
pusha
test
rcr
push
imul
mov
xlat
lock
fmull
sub
jmp
jmp
fidivrs
jae
jmp
call
shll
push
push
mov
mov
ret
mov
loop
pop
sub
lcall
imul
clc
insb
pushf
cwtl
aaa
mov
xchg
cs
mov
pop
xlat
jle
mov
lock
push
lock
cmp
sbb
mov
ljmp
cmp
stc
push
in
rorl
mov
popf
ja
movl
ret
jge
test
xchg
sbb
mov
adc
add
cs
xchg
sahf
cmpsb
aam
dec
dec
adc
and
mov
pop
push
jno
lret
adc
pop
jno
arpl
leave
mov
pushf
bound
popf
sbb
test
out
pop
push
sbb
stc
add
sbb
scas
xchg
pop
ds
dec
popl
rcrl
inc
je
outsb
into
xchg
insl
cwtl
cwtl
test
movsl
je
pop
lret
movsl
scas
push
fstps
mov
ja
aaa
lods
lock
pop
iret
leave
jb
jl
fisubl
dec
mov
push
stc
bound
leave
sub
test
cwtl
sub
push
insb
lds
mov
lea
mov
ret
mov
and
add
cs
xchg
inc
jl
out
jle
movsb
or
jmp
and
inc
int3
mov
fidivrl
or
pop
push
pop
gs
cmc
push
push
push
repz
in
sbbl
adc
cmp
enter
push
inc
test
xor
dec
sbb
add
adc
sub
icebp
inc
mov
lods
jle
in
and
pop
pop
xchg
fs
push
fmuls
ror
sar
imul
jp
cmp
pop
sbb
gs
rolb
adc
add
inc
ds
fs
sbbl
leave
fsubrs
jp
sbbl
daa
or
adcl
pop
dec
js
xor
adc
data16
loopne
sahf
iret
test
mov
or
out
ljmp
jnp
arpl
cmp
out
test
movsb
js
int3
cmc
mov
fucom
lcall
aaa
scas
jne
out
call
mov
movsl
inc
and
int
and
add
das
adc
icebp
xchg
mov
jbe
imul
or
mov
push
jo
jmp
fadd
das
cld
cmpsb
push
sbb
xchg
xchg
cwtl
stos
push
mov
xchg
and
rclb
pop
and
or
pop
repnz
sub
fdivl
ja
xor
lea
mov
lock
add
test
cltd
adc
or
adc
jmp
or
xor
add
js
loope
mov
sar
lods
xchg
in
fcmovnu
dec
xor
loopne
dec
jns
inc
cmpsl
pop
add
and
push
cltd
push
roll
stos
inc
fcoml
jne
aad
adc
pushf
adc
cmp
push
lret
mov
sbb
imul
std
adc
stos
mov
popf
cwtl
and
bnd
in
mov
mov
int3
daa
add
xor
jg
or
mov
add
clc
sbb
sub
loop
push
pop
jae
add
sub
in
pop
ret
insb
mov
push
lret
mov
pop
push
pushf
and
mov
test
cmc
xorl
pop
add
ss
ret
or
ljmp
jae
fabs
add
std
incb
insl
jno
aad
loopne
xchg
lcall
stc
xchg
xchg
adc
mov
ret
jmp
push
das
aam
push
std
hlt
sahf
js
jecxz
inc
out
clc
lcall
push
arpl
call
cld
fs
xlat
lret
push
sub
or
pop
fwait
std
xor
sub
dec
repz
mov
fsubrp
addr16
cmp
inc
ret
ret
mov
shl
or
mov
cmp
pop
scas
mov
mov
and
pop
xor
and
outsb
add
cmp
dec
add
mov
mov
fnstcw
lods
sahf
loope
adc
je
nop
movb
shrb
or
in
insw
cmp
jmp
das
sub
into
enter
hlt
fisttps
dec
mov
dec
shlb
pop
test
and
femms
lods
shlb
adc
jb
leave
sub
dec
mov
xchg
mov
lods
out
pop
cmc
adc
outsl
dec
xchg
and
mov
call
scas
inc
xor
sbb
add
push
clc
ret
repz
nop
cmp
scas
js
addb
xor
or
and
je
sbb
add
adc
lcall
or
xlat
or
das
jp
dec
or
jo
sub
push
dec
jo
shr
or
dec
fldl
hlt
xchg
jns
mov
imul
xor
popa
enter
sub
adc
jno
negl
or
stc
ljmp
fcoms
jb
outsl
test
dec
pop
sbb
fwait
jmp
pusha
mov
inc
mov
mov
adc
sub
scas
jmp
mov
das
push
int3
xchg
xor
lcall
aas
js
mov
cmc
adc
pushf
nop
dec
cmpsl
fisubs
add
and
addl
push
mov
cmp
pop
adc
sbb
mov
imul
mov
xchg
jp
bound
xchg
pop
loope
lea
outsl
mov
xlat
inc
xor
out
shl
fnstsw
insl
ja
aas
cmp
mov
and
call
xlat
or
aad
fstps
into
cmp
addr16
lret
sub
jne
scas
add
scas
cmpsb
mov
inc
subb
jb
push
pop
xchg
in
xor
jp
pop
call
fisubs
das
lods
out
xchg
xchg
mov
aam
aas
repnz
mov
adc
xchg
std
xchg
mov
fcoms
push
out
xchg
cmc
lahf
jns
xchg
adc
push
in
in
mov
mov
or
mov
push
fwait
jg
loopne
ljmp
cmp
inc
fbstp
fs
mov
inc
push
xchg
out
leave
icebp
or
mov
pop
xor
popf
ret
pop
mov
push
push
out
push
dec
inc
inc
subb
loop
add
sbb
mov
lock
enter
daa
mov
imul
insb
dec
loopne
data16
mov
lods
and
push
popf
outsb
aam
or
les
sahf
jae
jge
mov
stos
dec
pusha
push
jge
lret
push
xlat
push
and
xor
mov
movsb
inc
xchg
mov
push
or
push
out
fucomp
xor
das
movsb
pop
mov
arpl
andb
rcr
jg
lret
aad
adc
sbb
outsl
std
pop
cmpsl
add
cmpsl
pop
mov
call
dec
sarl
sti
push
sub
lret
pop
bound
push
lahf
jecxz
pushf
and
out
sub
inc
xchg
aad
mov
pushf
out
push
xor
push
call
and
xor
fs
and
arpl
int3
or
lea
mov
loop
fidivs
jmp
cli
push
in
iret
out
jp
or
and
dec
xor
push
pop
xor
aam
lea
mov
mov
jle
cmp
push
sub
cmp
jno
cmpsb
fsubrs
pop
lret
jno
imul
nop
add
sub
jmp
in
imul
outsl
jo
mov
das
repnz
fucomi
addr16
xlat
aaa
inc
mov
ficompl
stos
pushf
mov
fdivs
push
in
inc
adc
clc
push
adc
shll
outsb
xor
fistpll
andb
jl
inc
jne
cmp
scas
push
push
mov
xchg
xchg
das
mov
add
loope
xchg
leave
jb
js
dec
mov
roll
add
or
jecxz
xchg
pop
pushf
rcl
hlt
sti
imul
mov
xchg
inc
jno
sub
inc
lret
decl
or
jne
repz
push
sbb
es
adc
pop
mov
gs
into
add
ret
in
sub
ja
inc
jg
and
sti
shl
lret
adc
ret
insb
sahf
jp
mov
mov
rolb
aam
mov
das
jbe
data16
sti
jmp
pop
int3
mov
lods
bndstx
dec
cwtl
aaa
std
in
cmpsl
sbb
data16
sbbl
daa
test
lahf
movsl
bound
jno
sarb
ret
cld
packuswb
sbb
or
and
add
dec
lret
mov
ret
adc
movsb
adc
test
mov
int
enter
jecxz
cld
cmp
adc
jecxz
mov
loope
adc
mov
aaa
jb
pop
adc
cmp
xchg
mov
add
pop
sub
sbb
push
fldl
iret
or
mov
out
dec
xchg
bnd
dec
or
insl
stos
faddp
ja
scas
jmp
js
xchg
insl
mov
js
mov
lods
dec
and
out
mov
hlt
test
ljmp
push
adc
sub
pop
out
push
aaa
inc
sarl
and
shlb
sti
mov
mov
popl
dec
xchg
outsb
xchg
insl
adc
stos
shrl
and
cmpsl
xor
inc
out
hlt
pusha
das
inc
aam
sbbl
jmp
pop
fdiv
sbb
call
add
sbb
add
into
inc
cmp
mov
dec
loopne
pusha
int
aaa
pushf
and
dec
adc
outsb
adc
cmp
xor
push
shll
dec
jl
pop
mov
dec
mov
es
in
pop
loopne
mov
mov
jl
pop
adc
sbb
push
pop
fidivrl
out
push
push
xchg
mov
xchg
out
pusha
xlat
das
sbb
loopne
adc
sub
mov
ret
push
hlt
or
add
sarl
push
lock
imul
cvtps2pd
out
jns
fidivrs
inc
sahf
sub
add
lret
add
sub
sub
lahf
sub
cmp
add
mov
ds
inc
inc
ret
jnp
sub
shrl
jge
insb
mov
rolb
inc
mov
addr16
jne
sub
fwait
or
inc
add
ret
sub
scas
fsubl
in
pop
mov
movsl
je
leave
lea
push
push
es
pusha
push
lcall
aaa
push
add
orl
pop
dec
cmp
ret
lods
or
jns
addr16
jmp
or
mov
outsb
addb
sarl
cmp
int3
sbb
js
ljmp
mov
mov
cmp
daa
adc
or
adc
repz
ss
or
lods
jle
leave
pop
pop
nop
push
call
subl
push
cmpb
jmp
into
bound
dec
fstl
cmp
or
int
add
cmp
inc
lds
or
dec
adc
aas
xor
out
xchg
sbb
mov
fsubrs
decl
rolb
xchg
add
ret
repz
dec
pop
and
pop
pop
int
sbb
xor
xor
ret
add
and
imul
dec
adc
xor
mov
xchg
cs
nop
int3
sbb
xchg
pop
outsl
jae
imul
scas
xor
inc
pmuludq
xchg
jecxz
cmp
loope
xchg
inc
stc
cmpsb
jae
cmp
fld
cmp
arpl
std
sarl
push
dec
int3
ret
aas
jmp
xchg
mov
inc
out
sub
push
sbb
sbb
jnp
mov
leave
or
mov
into
sbb
sub
sub
out
jge
int3
cmp
jle
mov
hlt
push
adc
add
mov
dec
jl
pushf
or
sub
inc
call
lock
popf
lret
les
mov
xor
prefetcht1
jbe
jl
shlb
mov
je
pop
clc
xchg
loop
pop
pop
sbbl
adc
aam
jne
clc
mov
cmp
xchg
or
sub
pop
stc
lods
sbb
enter
ds
add
cs
dec
cmpl
sbb
dec
fwait
push
mov
cld
mov
inc
jl
pop
imul
mov
adc
in
mov
xchg
sub
test
sub
aas
mov
jnp
test
out
jmp
pop
test
cltd
cs
inc
inc
iret
imul
pop
das
lcall
and
addr16
loope
jb
mov
std
cmp
mov
test
mov
movsb
jmp
fldenv
inc
push
sbb
cmp
sarb
rcrl
out
and
ret
sub
sbb
jb
fimuls
xchg
mov
add
adcl
out
sbb
mov
insb
sbb
mov
cmpl
dec
sarl
add
outsl
mov
leave
inc
test
imul
xlat
lahf
sub
mov
xor
insl
movl
adc
mov
jp
cwtl
mov
enter
mov
js
sub
xor
sbb
cli
loop
or
loope
sbb
cmp
xchg
push
leave
cmp
es
mov
std
dec
pop
xor
imul
mov
jnp
pop
push
xchg
mov
adc
jae
daa
cmc
and
pushf
fld
sbb
dec
sub
push
mov
nop
dec
mov
push
mov
jcxz
xor
push
push
pop
out
mov
adc
ret
pop
jmp
stc
or
fs
or
pop
insl
xor
int3
addr16
mov
push
icebp
out
mov
cltd
out
inc
and
cmpsl
sbb
daa
orb
jmp
decb
jecxz
xor
push
mov
int
out
or
mov
out
loopne
push
popa
mov
test
mov
mov
or
sti
cmp
adc
popf
inc
push
xchg
sbb
mov
xchg
sub
iret
or
cmpsb
cmp
add
jbe
rolb
sbb
jmp
mov
mov
xchg
push
in
inc
xor
shlb
sbb
leave
push
movsb
sbb
push
loop
scas
push
out
or
daa
ret
imul
mov
loopne
leave
clc
lcall
into
push
inc
adc
xor
int
sbb
mov
imul
mov
sbb
mov
addr16
fists
cmp
shlb
divb
lea
cld
mov
jecxz
mov
push
add
jp
insb
icebp
jb
cs
sub
jge
cs
dec
mov
roll
jl
lods
divl
int3
shlb
lret
sub
in
outsb
mov
nop
push
push
test
in
loop
sbb
mov
mov
fsubs
lret
pop
int3
scas
and
xchg
addb
or
xchg
lcall
scas
int
lea
ds
stos
mov
fstpl
or
xor
ljmp
jmp
pop
ss
dec
push
xchg
popf
shlb
bound
lea
outsl
sub
or
test
cltd
dec
jl
jg
push
movsl
imul
lret
xor
add
pusha
fs
fsubl
jno
fsubrl
out
pop
jp
mov
outsl
es
jbe
or
jecxz
and
loop
adc
jne
push
mov
mov
mov
cmpsb
fndisi(8087
add
je
pushf
stos
lret
mov
mov
outsb
arpl
mull
xor
push
add
push
std
xchg
test
in
dec
inc
sbb
sub
aam
mov
adc
push
mov
cwtl
pushl
in
push
or
shl
or
mov
lcall
push
aad
imul
push
ljmp
rolb
mov
cmp
push
cmp
sub
ja
fwait
jle
cmp
push
adc
inc
mov
fnsave
lods
pusha
inc
jg
fmull
push
lds
mov
xor
popa
jb
aam
fisttpl
xchg
test
movsl
add
adc
aas
in
fisubrs
pusha
aam
andb
mov
and
and
xor
loopne
cmp
mov
cmp
xor
xor
outsb
cmp
mov
sub
movsb
mov
pop
push
lret
sbb
jno
aaa
add
call
leave
inc
in
scas
movsb
and
push
add
popa
push
ljmp
mov
jecxz
xchg
inc
fwait
icebp
mov
mov
shl
fidivrl
bound
in
mov
adcb
hlt
scas
mov
test
movsl
cmpsb
mov
out
adc
mov
faddl
mov
lahf
shll
push
adc
push
jns,pt
and
add
loope
repnz
es
add
push
js
rcr
pop
sbb
sbb
cltd
push
pop
lock
fists
movsl
sub
sub
push
icebp
mov
sbb
and
push
hlt
fsubl
cmp
insl
mov
adc
pop
inc
lret
lock
inc
outsb
jno
push
mov
pop
aaa
jno
adcb
cmp
aam
popa
fbstp
repnz
inc
popf
imul
push
push
sbb
in
out
mov
cmp
jbe
lock
std
movsl
jno
in
loopne
mov
cmpsb
icebp
add
cld
mul
cmp
shrb
push
xor
xor
dec
insb
movsl
sbb
testl
ss
mov
lods
lcall
cmp
pop
mov
out
das
loopne
jnp
xor
push
sar
scas
adc
fadds
or
add
scas
aaa
mov
mov
sub
popa
sub
fstpt
mov
lock
aad
into
mov
mov
or
mov
inc
dec
into
push
ljmp
in
les
sbb
pop
sub
jp
js
sub
push
popl
out
sbb
mov
inc
xchg
jge
xor
gs
pop
jl
and
push
mov
cmpsl
adc
aas
loop
pop
roll
lret
sbb
outsl
sub
pusha
sbb
mov
pop
pop
xchg
cmp
pushf
cwtl
out
jnp
add
popl
fnstcw
js
ror
loope
outsb
movsl
or
popa
insb
mov
test
push
cmpsb
insl
or
sbb
pop
mov
scas
addr16
gs
notl
clc
cmp
lock
or
jbe
das
fimull
cmpsb
or
cmc
aas
jns
pop
iret
pop
jecxz
push
hlt
pop
or
inc
adcl
les
xchg
xor
cmpsb
add
faddl
shrl
dec
fimuls
inc
push
and
out
cmp
push
dec
mov
mov
lock
push
cld
cwtl
xor
mov
jnp
fsubr
jo
andl
push
lret
cltd
into
in
and
and
ljmp
adc
sub
test
cwtl
cmc
mov
movsb
lcall
icebp
mov
sbb
ret
adc
or
add
enter
or
cmp
aad
out
sarl
and
filds
dec
lret
nop
repz
fs
stos
rcl
loopne
fs
sahf
push
sbb
lock
mov
push
scas
shll
out
jns
fidivl
xor
aaa
test
inc
jl
push
xchg
xor
jmp
out
mov
sbb
aas
cld
xchg
shrb
mov
inc
stos
xor
sbb
inc
pop
inc
shl
cld
push
push
mov
ret
lret
pop
lret
inc
mov
leave
jno
movsl
jno
jle
sbb
pop
mov
filds
xchg
push
add
clc
pop
in
push
add
sahf
pushaw
cmp
pop
mov
pop
pop
mov
cmc
lds
sti
dec
leave
aas
add
or
or
cld
ja
aas
repz
xlat
add
mov
adc
aas
ret
mov
add
cwtl
sub
ret
outsl
adc
xor
movsl
dec
cmpsl
mov
mov
mov
out
inc
jbe
in
test
push
sub
mov
insl
out
clc
mov
and
xchg
sbb
lret
inc
cmp
dec
mov
xor
movsl
jecxz
pop
andl
inc
pusha
mov
out
loop
cmp
sbb
push
stos
mov
js
adc
sub
sub
ret
push
test
fadds
add
xchg
and
pop
push
inc
rorl
sub
dec
sti
sbb
test
pop
dec
repnz
ret
call
or
mov
cmp
popa
cmc
jmp
jp
lahf
mov
push
jo
add
mov
mov
test
pop
cli
test
mov
mov
jl
ljmp
ja
and
nop
cli
lcall
cmp
sub
xchg
fiadds
pop
test
cs
fcoms
lret
mov
leave
fsubrs
jg
test
sub
sub
or
push
push
ret
jne
and
stos
test
out
sub
sub
sbbb
xchg
or
cmp
rol
or
xor
sbb
insl
repnz
jno
xlat
pop
mov
sub
js
lahf
xchg
dec
inc
test
mov
addr16
cli
call
inc
pop
mov
adc
insb
lret
inc
mov
or
sub
mov
sbb
std
xor
mov
mov
shlb
dec
add
cli
aas
xchg
in
lea
adc
sub
stos
lods
pop
and
in
jp
call
xchg
aad
aas
push
lods
mov
sbb
inc
sub
sub
mov
insb
inc
in
ret
jg
xchg
mov
mov
jle
adc
lock
push
mov
cwtl
mov
movsb
fs
xor
mov
jecxz
ljmp
xchg
inc
mov
dec
shll
ret
cmp
jb
popa
jno
cmc
ljmp
pop
insl
inc
sbbl
adc
push
scas
push
sbb
sbb
sub
test
and
imull
pop
mov
pop
hlt
xchg
add
sbb
inc
jns
hlt
mov
xchg
and
sbb
mov
outsb
addr16
ret
jmp
cmp
movsb
loopne
sbb
testl
push
mov
mov
inc
xchg
cmp
andb
je
cmp
je
popf
cltd
lahf
and
cmpsb
dec
push
sbb
mov
add
inc
xchg
push
mov
outsl
int3
fs
pop
in
stos
fnsave
loopne
pop
in
and
cmp
cmp
and
btr
test
sarb
push
cmpsl
insl
and
movsb
mov
imul
stos
fwait
lret
push
rclb
xorps
cmc
mov
jg
pop
mov
push
addr16
mov
mov
inc
and
popa
push
add
lret
and
lahf
adc
jmp
jl
mov
aas
jns
xor
jnp
jo
mov
xchg
adc
dec
jo
jge
sub
scas
imul
fidivs
adc
scas
xor
sub
xor
push
pop
aam
fcmovnb
sub
outsb
std
cld
outsl
jg
out
add
in
ljmp
pop
ficomps
xchg
xor
lcall
pop
popf
lods
jle
sbb
fs
and
or
and
out
inc
jg
jns
dec
and
insl
sub
loop
jno
ss
insl
push
cmp
xchg
arpl
shr
pop
std
xor
push
and
outsl
imul
cltd
fcoml
sbb
fisttps
cmp
jge
rcrb
dec
mov
out
popf
mov
add
call
jecxz
insl
push
scas
adc
pop
pushw
mov
imul
push
lods
xchg
inc
ja
add
mov
rorb
mul
aas
jno
scas
dec
mov
xlat
popa
push
int
cwtl
in
xchg
aad
loopne
das
or
stos
repz
cli
add
pushf
mov
push
sub
dec
pop
mov
mov
scas
decl
nop
add
icebp
and
push
cld
add
push
mov
or
xchg
xor
rolb
arpl
jge
jg
clc
add
sub
bound
iret
jmp
fistps
lahf
inc
decl
cmpsl
mov
stc
add
and
mov
scas
stos
adc
sti
push
sbb
cmp
mov
sub
fwait
sbb
jo
pop
push
xchg
push
or
aas
inc
pop
cli
sti
xchg
ficoms
ds
insb
lcall
pop
pop
dec
sub
fs
dec
add
test
sub
xchg
into
xor
mov
adc
xchg
inc
cltd
mov
js
xchg
into
xchg
pop
cli
sahf
add
dec
adc
sahf
daa
sbb
sbb
cmpl
jne
adc
into
addl
shlb
stos
fiadds
xor
imul
sub
dec
mov
hlt
cwtl
dec
mov
cmp
cmp
jle
andl
mov
rcr
sahf
cmp
sbb
daa
arpl
imul
nop
xor
cmpsl
pop
xchg
xor
cmp
rclb
dec
jno
dec
cmp
pop
cmc
out
shll
cmp
mov
jns
dec
iret
mov
inc
jle
mov
scas
xor
repnz
mov
jns
out
mov
pop
jge
popf
jnp
mov
mov
xor
scas
mov
mov
loopne
nop
int3
rcrl
lret
in
mov
add
add
push
push
xor
movsb
jp
loope
pop
mov
push
pop
cmc
loopne
incl
and
lahf
testb
dec
shrb
jnp
movsb
push
mov
jne
ss
mov
arpl
sar
and
push
es
jle
xor
push
hlt
mov
aam
push
pop
in
loop
enter
sbb
push
iret
xchg
lret
or
outsl
in
aaa
daa
push
stos
cmp
in
jmp
mov
mov
xor
shl
testl
or
lods
pmulhuw
xor
rclb
int3
popf
xor
mov
cli
cmpsb
adc
das
and
rolb
sub
push
sbb
push
xor
mov
dec
je
xchg
aas
jbe
movsb
test
xchg
jp
les
or
pop
mov
sub
push
adc
and
dec
push
ret
jl
es
inc
jae
xor
cld
xchg
cmpb
test
test
cli
arpl
mov
xor
push
loopne
push
mov
repnz
rclb
imul
sub
adc
pushl
jo
adc
lret
int
add
in
pushf
or
cmpsb
xchg
inc
fistpl
pop
test
mov
xor
or
lock
push
call
sbb
outsb
in
mov
lahf
sub
jecxz
pop
jb
fistpll
push
and
pop
dec
mov
mov
jno
jl
clc
push
sbb
lods
mov
shrb
adc
push
movsl
jmp
push
stc
add
int3
inc
mov
movsl
ja
mov
cmp
inc
pop
xor
es
cmp
aas
mov
add
sbb
shrb
jecxz
and
rolb
mov
dec
incb
icebp
mov
mov
xchg
xchg
xor
mov
sbb
pop
mov
pop
lods
sbb
jne
mov
cmpsl
cs
mov
sarl
outsb
push
mov
mov
aad
aaa
push
insb
ds
aaa
push
mov
insl
jecxz
mov
sub
prefetch
sub
sub
loop
mov
sub
jb
or
jno
and
pushf
scas
rcr
pop
mov
notb
push
or
test
xchg
stos
std
shll
add
dec
pop
and
cmc
mov
mov
aas
xchg
in
incb
xchg
pop
int
repnz
lods
ljmp
fyl2x
add
mov
int3
repnz
sahf
in
addb
mov
jmp
jns
pop
and
and
iret
jno
scas
mov
push
and
jae
add
out
aas
pusha
push
push
fsubrl
fwait
and
mov
sti
scas
clc
add
mov
sub
xchg
mov
das
shrb
movsb
sbb
dec
pop
aad
lret
clc
dec
mov
lock
mov
movsb
mov
loopne
xchg
fbstp
mov
mov
push
lret
dec
fidivrl
arpl
cmp
mov
jo
mov
cmpsb
inc
aad
push
dec
dec
inc
je
aam
in
mov
mov
gs
repz
enter
fwait
inc
sbb
mov
jns
subb
xlat
cmp
cli
jge,pn
jb
mov
mov
in
test
aad
out
and
and
adcb
jne
xchg
bound
or
fdivrs
adc
aad
es
mov
lods
and
in
cmp
roll
sub
or
aad
sub
and
add
pop
mov
push
mov
je
lret
clc
xchg
dec
lods
push
inc
xor
aam
out
outsb
bound
popf
or
rcll
outsb
jbe
in
push
int
cmpsb
mov
push
out
pop
jmp
std
aaa
sub
insl
adc
in
and
jecxz
jb
adc
ret
andb
xor
mov
jmp
pushf
mov
cld
mov
mov
lahf
ss
jecxz
lcall
or
stc
push
push
inc
sub
test
ljmp
adc
jae
sbb
jg
sub
lcall
decl
mov
cwtl
push
adc
arpl
sbb
adc
mov
lock
adc
mov
sub
lock
hlt
icebp
dec
aam
inc
cmp
and
adc
and
push
adc
je
out
jbe
imul
push
inc
mov
inc
pop
scas
mov
pop
loope
fisubrs
pop
jp
insb
cld
cmp
aam
data16
xchg
jbe
add
imul
or
xchg
dec
or
inc
jmp
pushf
popa
arpl
stos
sarb
fwait
cmp
lods
xchg
push
popf
or
sbb
xor
scas
mov
pop
push
mov
add
mov
inc
jl
and
push
inc
ja
and
scas
sbb
les
mov
stos
call
aas
and
movsl
outsl
cmp
sbb
lahf
pop
xchg
inc
sub
mov
imul
mov
push
jnp
add
sub
push
jl
inc
ficomps
cmp
inc
push
mov
jne
adc
push
mov
add
inc
xor
in
sub
xlat
mov
dec
sbb
jb
jmp
out
cld
push
iret
popa
dec
aad
aaa
push
call
xchg
sbb
stos
or
jge
test
jge
outsl
mov
cmp
mov
xor
or
roll
js
push
lock
out
xor
lock
sbb
inc
into
loop
mov
mov
cltd
in
mov
push
sub
sub
xchg
aas
test
outsl
iret
fildl
push
adcb
and
out
int
and
imul
pusha
or
jmp
js
lcall
sub
mov
push
mov
mov
adc
aad
imul
lock
pop
mov
mov
in
das
shlb
pop
mov
lock
sub
adc
pop
cld
iret
cwtl
shll
push
pusha
ja
jns
cwtl
mov
jmp
cmpsb
lret
push
sub
bnd
or
fwait
movsl
fld
add
ret
mov
inc
adc
mov
test
jne
pop
add
xchg
pop
imul
addl
pushf
jp
push
adc
rol
mov
nop
aam
cmpsb
lds
xchg
jno
enter
in
mov
popf
rorl
mov
sahf
xchg
mov
inc
mov
inc
rorb
pop
test
sub
sti
push
insb
imul
push
dec
push
ss
fidivrs
iret
xor
test
insl
xor
xor
sbb
loopne
fldt
shr
inc
mov
lcall
sub
inc
fistpll
add
ret
insl
xchg
mov
xchg
inc
testb
les
lds
adc
mov
rorb
inc
sub
mov
inc
loopne
mov
and
movsb
push
clc
lret
mov
mov
cmp
movsl
add
mov
inc
dec
in
int3
mov
gs
dec
inc
and
xor
dec
icebp
lea
cmp
in
jne
ret
ss
and
jp
shlb
pop
mov
loope
mov
repnz
sbb
mov
test
push
sub
fs
push
and
in
mov
ja
insl
mov
aam
imul
mov
dec
outsb
push
jne
insb
ds
cli
fstpl
inc
mov
and
jno
push
inc
inc
sbb
mov
sbb
lret
ret
push
out
or
imul
jns
imul
xchg
repz
xchg
push
js
add
jo
mov
mov
or
push
mov
adc
rcr
mov
rcrb
sbb
std
xchg
pop
sahf
xor
es
js
clc
int3
cmp
test
pop
out
sub
test
and
fiaddl
cmp
pop
pop
jge
adc
mov
jae
adc
adc
outsl
mov
pop
aad
not
push
jnp
aas
arpl
and
xor
enter
popa
aas
add
sub
pop
adc
xor
cmc
fwait
mov
add
pop
scas
xlat
mov
inc
mov
and
pop
mov
negb
lds
jbe
aad
mov
test
gs
stos
mov
mov
and
jge
fcom
jecxz
int
aaa
out
ss
dec
adc
jbe
jecxz
shlb
mulb
or
xor
cli
dec
repnz
mov
mov
imul
inc
stos
sub
sbbl
int
test
jle
in
call
icebp
fdivrp
add
mov
jbe
outsl
pop
frstor
xchg
shrb
mov
les
xor
and
xor
outsb
pop
ljmp
fnstenv
mov
enter
mov
push
cmpl
or
cld
cmp
dec
sub
or
cmp
mov
jno
out
mov
push
cmp
jl
mov
pop
loop
push
dec
or
cmp
xchg
lea
mov
sahf
jae
jbe
leave
sti
dec
cwtl
neg
repz
vpavgw
mov
sbb
lock
push
addl
xchg
mov
cmpl
jecxz
pop
dec
inc
dec
loop
dec
ret
test
test
mov
mov
out
sbb
jnp
sahf
aaa
sbb
jle
jl
cltd
setle
ret
or
ss
lcall
mov
push
push
loop
sbb
out
sub
insl
iret
test
sub
fstl
nop
xor
shll
insb
out
push
add
sbb
ljmp
or
pop
push
xor
lahf
sbb
pop
cmp
mov
mov
push
push
out
mov
aas
pop
inc
cmp
imul
dec
cmpb
add
mov
add
jle
dec
outsb
aaa
add
dec
inc
inc
sbb
rcrb
sbb
mov
fnstsw
into
adc
cs
adc
add
daa
dec
loopne
pop
jne
jne
inc
lret
int3
cmp
inc
lock
stos
shrb
in
cmp
push
test
jne
ds
xchg
outsl
addr16
stos
jg
and
add
sub
out
cmp
cli
fldl
sub
cmp
cmp
shrb
cmp
shll
sub
inc
or
or
sar
mov
mov
rcrl
mov
or
pop
mov
std
and
leave
fcmovnbe
xlat
add
lret
mov
iret
in
cld
scas
add
pop
sar
xor
sbb
insb
or
insl
pop
push
dec
xor
std
call
hlt
cmp
scas
and
xor
enter
mov
call
xor
sahf
pop
and
and
into
push
fsubs
xchg
mov
out
lods
dec
jp
imul
pop
dec
jecxz
jmp
clc
test
pop
cmp
sbb
dec
sbb
dec
jmp
fdivrl
or
jbe
sbbb
cmp
adc
int3
mov
scas
mov
or
fcoml
pusha
mov
pushf
jge
or
insb
push
push
stc
outsl
cmpsb
enter
fildll
jg
pop
fstpl
cmp
mov
push
stos
jo
sbb
into
or
dec
pop
xchg
mov
js
jge
jno
rcr
jg
in
dec
ror
loope
inc
xchg
pop
addr16
xlat
mov
jns
or
cmc
in
pop
jmp
mov
dec
cwtl
add
sbb
lods
jb
jbe
fwait
ss
pop
mov
push
or
std
inc
mov
adc
in
jp
out
aam
rclb
xchg
loope
enter
mov
ret
xor
xor
push
int3
arpl
lock
stc
sti
xchg
push
and
fstpl
in
fcmovnu
sti
jo
inc
mov
shrb
inc
mov
fs
scas
push
aaa
and
add
sbb
loope
add
and
cmp
icebp
jno
push
push
or
rcrl
iret
fsubrs
push
jb
out
iret
add
stos
xchg
scas
push
xchg
and
jp
fisttpl
dec
jge
mov
fimuls
adcb
test
cwtl
testb
ds
dec
dec
hlt
pushf
lahf
sarb
push
and
out
pusha
xchg
jmp
outsb
fwait
mov
test
loopne
repz
pop
or
das
add
std
sbb
dec
mov
test
hlt
sbb
mov
js
mov
cmp
cltd
test
cmp
cmpb
xchg
inc
jo
cwtl
xchg
imul
dec
jo
inc
push
fisttpll
movb
and
jno
mov
pop
test
icebp
mov
dec
outsb
shlb
and
sbb
mov
mov
ret
push
sbb
adc
xor
js
shlb
mov
aam
jge
arpl
int
ret
mov
stc
xchg
add
test
and
ret
xor
leave
shlb
sbb
and
je
cltd
jmp
dec
aas
mov
movsb
mov
xchg
std
leave
add
xor
ja
xchg
icebp
sbb
add
into
popa
aad
outsl
cmc
cmp
adc
std
ret
stc
xor
int
ficoml
inc
subb
js
dec
test
cwtl
sub
add
popl
cmpb
xchg
xchg
add
fdivs
pop
incb
sub
dec
icebp
xor
fmuls
pop
dec
dec
int3
inc
out
inc
std
xchg
cs
movsb
sarl
shll
shll
or
cmpsl
lret
sub
sub
iret
shl
ja
into
adc
int
in
lret
and
and
add
shll
mov
sar
push
movsb
fdivp
jno
das
rorb
mov
sbb
push
arpl
mov
aad
and
mov
or
push
inc
out
sub
shrb
jecxz
call
ret
push
mov
jb
stos
rcl
xor
lret
pusha
xchg
add
addr16
and
cmp
pop
in
enter
pop
cmp
pop
jae
pop
dec
mov
test
or
xchg
mov
push
ljmp
popf
mov
jne
repnz
dec
out
jmp
nop
xchg
inc
int3
sarb
test
cli
sbb
jo
vmovapd
inc
xchg
scas
jmp
pop
arpl
mov
xor
and
xchg
push
stos
add
sbb
leave
mov
cmpsb
sti
xchg
adc
into
mov
das
aas
jg
inc
sbb
rolb
imul
mov
orb
add
stos
out
aam
lret
pop
ret
shlb
sbb
nop
push
mov
add
jnp
pop
push
jmp
inc
inc
jne
sub
pop
aas
xchg
mov
bound
push
fbstp
into
xlat
adc
mov
arpl
lret
and
inc
or
cmp
adc
mov
in
out
dec
mov
insl
rorl
or
xor
rcrl
mov
adc
dec
jae
jmp
and
sarl
mov
cld
ret
add
movsl
enter
sbb
cmc
cwtl
movsl
fstps
jp
add
outsl
js
gs
sbb
jo
pop
sub
jbe
repz
iret
xchg
lock
xchg
fwait
push
add
cs
cmp
sbb
dec
daa
or
sub
cmp
jnp
movsl
subb
imul
jno
jp
dec
fisttps
push
xchg
stos
arpl
in
out
aam
mov
push
push
gs
mov
loopne
mov
pop
bound
pop
push
mov
ficoms
jo
push
sbb
iret
mov
push
and
and
mov
sbb
add
gs
cmp
stc
jnp
add
ljmp
stos
adc
sub
mov
jg
cmpsl
test
or
jmp
or
dec
adc
lods
subb
imul
bound
idivl
adc
dec
scas
daa
sbb
imul
mov
jnp
cmp
int3
and
lret
jnp
fdivs
sub
push
sub
jo
gs
xor
xchg
jp
aas
mov
sbb
pop
mov
push
cltd
mov
mov
pop
xchg
in
sbb
ljmp
push
std
cmc
sbb
inc
adc
push
lock
aaa
cmp
cli
add
add
fdivrl
push
add
sbb
dec
cmp
mov
xor
mov
push
or
lret
nop
mov
popa
xor
sbb
imul
pop
xor
adc
mov
mov
out
aad
jmp
mov
lods
jmp
cmp
and
adc
orl
sub
mov
outsl
sbb
jae
fildll
or
pop
sub
aad
inc
ret
push
outsb
push
shl
test
fsubrl
cld
push
fbld
dec
cmpsb
cwtl
ret
scas
sbb
mov
or
ja
mov
jecxz
imul
aam
aad
xorl
js
scas
jnp
dec
fldl
ljmp
pop
mov
cmp
or
jns
bound
mov
test
arpl
xchg
mov
xor
dec
es
add
lock
test
shll
stos
push
push
push
cli
mov
sahf
std
xor
sub
cs
xchg
and
inc
movsb
aaa
cmp
push
jae
mulb
pop
add
sahf
ss
rcrl
lret
jae
inc
xor
imul
rcrb
in
cmp
ret
cmp
loope
jne
and
inc
jno
mov
push
movsl
xchg
inc
lcall
cld
lcall
popf
xchg
scas
pop
repz
idiv
sbb
push
adc
stc
adc
std
xchg
fwait
cmp
dec
dec
mov
mov
xor
xchg
mov
xchg
xlat
dec
cmp
in
cmp
sbb
sbb
sub
insl
push
scas
jae
mov
aas
mov
fwait
push
icebp
dec
push
mov
sub
ss
movsb
mov
test
fimull
test
adc
mov
mov
stos
mov
inc
call
int
mov
adc
jo
sar
scas
fsubr
adc
xchg
push
push
enter
xor
fwait
mov
inc
push
int
pop
adc
jge
xchg
aam
lcall
or
lods
and
sub
out
int3
fmuls
mov
in
add
out
rclb
jb
fistps
pop
sbb
adc
fdivrp
imul
stos
icebp
inc
fwait
xor
mov
mov
loope
stos
mov
das
pop
mov
or
jnp
inc
data16
out
ds
dec
xor
push
or
mov
jecxz
sub
cmc
inc
in
cmp
in
adc
std
inc
and
ss
inc
pop
rcll
test
jne
fsts
push
test
add
and
dec
jno
punpckhwd
loope
in
cmp
inc
dec
roll
std
xor
jp
push
sub
xchg
mov
mov
or
in
push
pop
mov
in
push
pop
mov
lret
xchg
jne
push
mov
lods
divl
lods
jo
nop
jae
out
inc
sub
mov
jb
ds
stc
xor
push
fcompl
dec
aaa
pop
in
or
pop
cmc
icebp
push
int3
mov
nop
sahf
sub
sbb
out
inc
add
pop
popf
in
and
xchg
mov
icebp
mov
mov
xchg
out
decb
not
jmp
xor
pushf
cmp
push
mov
or
inc
jmp
psubq
loop
les
mov
rcr
and
clc
fsts
mov
pop
cmp
cmp
test
aam
pop
sub
test
push
movsb
loope
scas
xor
mov
mov
je
loop
cwtl
jb
xchg
pop
jno
pusha
iret
shl
adc
adc
jo
bound
mov
fmull
mov
and
xor
shll
notb
lds
xchg
push
int
inc
aad
and
outsb
nop
add
pop
adc
mov
pop
scas
fldenv
jnp
push
ret
cmove
lret
jl
jecxz
sub
enter
and
divb
mulb
pop
adc
fcompl
inc
jae
fmull
mov
dec
jno
cmp
fnstenv
repz
pop
in
cmp
aad
push
jb
popa
inc
repz
mov
jg
stos
xor
pop
mov
lock
jns
and
and
jmp
aam
sahf
stos
aas
test
das
jae
out
lret
loope
dec
shlb
addb
pop
mov
adc
mov
and
ja
bound
dec
ja
lock
pop
cltd
mov
push
add
mov
xchg
idivb
jl
and
repnz
push
jns
pop
pushf
mov
test
push
jge
mov
je
jbe
lods
jne
bound
mov
test
add
push
jns
jmp
fwait
push
nop
or
xor
les
hlt
and
int3
imul
cli
movsl
popf
jae
xor
jo
js
inc
dec
mov
enter
dec
and
aad
mov
sub
rcll
sub
lret
jae
jo
pop
or
sbb
or
aas
pop
sub
stos
and
mov
mov
lahf
jne
ficoml
inc
xor
out
call
jne
add
xchg
push
out
xchg
jmp
jnp
add
push
mov
adc
jae
push
popa
xchg
out
lea
push
aad
into
aam
jne
hlt
adc
pop
sub
mov
or
shll
mov
pop
dec
push
push
xor
movsl
arpl
cmp
mov
hlt
mov
or
inc
pop
sti
shrl
cmp
fs
bound
push
add
movsl
call
pop
inc
clc
sbb
cmp
rolb
mov
cmp
and
test
push
xlat
dec
mov
test
cmp
je
xchg
xlat
je
jle
xchg
pop
xor
pop
mov
lret
idivb
dec
xchg
shl
mov
std
cmc
or
mov
cmp
mov
daa
clc
push
jmp
rep
pop
imul
push
jp
idivb
loopne
and
loopne
ret
add
fcomp
wbinvd
add
inc
cli
dec
jle
sub
sti
orl
not
inc
in
inc
loop
jle
or
fsubp
adc
inc
stos
repz
std
cmp
and
shrl
xchg
pop
pop
inc
mov
je
lods
pop
cmp
or
or
andl
pop
pop
das
mov
cmp
xchg
inc
lcall
fwait
aam
test
scas
mov
or
cs
fsubl
mov
mov
mov
ret
in
push
call
insl
cld
xor
xchg
cmp
or
fcoms
cmp
add
mov
daa
test
in
or
sahf
loope
push
dec
cwtl
add
mov
push
out
lds
testl
xchg
je
pushf
cmc
pop
xchg
jg
cli
add
cmpxchg
adc
fbld
cmpsl
outsb
lahf
cmpl
dec
ret
add
add
jno
rolb
adc
xchg
lods
loop
ljmp
add
lods
mov
mov
cmpsb
xor
ret
pop
sti
inc
les
sub
xor
xchg
push
les
ret
push
jae
jmp
xchg
out
lret
aas
pop
add
mov
adc
mov
push
test
xchg
scas
push
daa
std
into
sub
ljmp
dec
leave
pop
cmp
and
mov
xchg
sub
jbe
sbb
mov
loope
cmc
lods
mov
mov
jecxz
out
add
rorl
jb
dec
cmc
cmp
push
in
subl
add
lret
test
xchg
pop
push
mov
movsb
pop
retw
jo
cmp
inc
bound
jg
scas
dec
fstpt
aad
imul
push
jns
loope
push
adc
xchg
int
imul
pop
push
and
cmp
mov
inc
out
lods
or
mov
popa
cmp
icebp
mov
sbb
push
cwtl
xor
mov
mov
and
jne
xchg
ret
movl
sbb
popa
pusha
int3
imul
cltd
loopne
mov
pusha
pop
test
push
inc
jg
mov
in
fcompl
cmp
or
rcr
add
add
int
lods
out
ror
cli
dec
and
inc
cmpsb
stc
inc
sbb
mov
out
leave
mov
jle
xchg
rol
mov
lods
mov
int3
movsl
sbb
add
out
adc
test
ja
push
out
cmp
add
xchg
add
aam
mov
push
add
jmp
popf
ret
pop
shrl
inc
imul
ret
pop
mov
lcall
push
imul
xor
jnp
pop
jmp
adc
adc
mov
push
dec
stc
loope
lcall
bound
adc
mov
test
add
mov
out
add
lcall
jge
dec
jg
int
push
add
and
sti
mov
mov
jne
fldt
sbb
dec
sub
pop
push
mov
or
int3
jl
fistpll
dec
cld
sbb
mov
jb
xor
mov
xchg
loop
outsl
pop
jecxz
inc
push
xchg
mov
push
xor
lahf
lods
fs
mov
xchg
in
adc
dec
inc
xchg
test
cltd
movsl
mov
adc
fsubrs
addr16
and
or
xchg
jnp
aaa
movsb
cwtl
adc
js
mov
sub
add
mov
dec
push
nop
or
imulb
xlat
pop
shrb
pop
fdivl
sbb
pop
xchg
push
scas
push
in
dec
sbb
lods
pop
push
pop
fwait
pushf
sbb
mov
jecxz
dec
ja
mov
xor
mov
jb
test
mov
sti
xchg
mov
mov
arpl
xchg
add
push
test
das
pop
jecxz
inc
lahf
stos
sbb
hlt
and
sub
outsl
sbb
mov
jb
ficomps
push
push
hlt
push
or
fildll
mov
sub
stc
mov
xor
dec
xor
sub
jbe
jno
sub
pop
outsl
rorl
out
outsl
popf
lcall
xor
push
pop
xor
dec
lea
pop
fcmovb
push
jge
in
sub
sbb
dec
or
add
movsb
pop
mov
shl
test
mov
fstps
mov
push
lods
je
or
xchg
add
decb
int3
cs
addb
jecxz
in
sbb
jl
mov
inc
rcr
cmp
or
and
sub
cmp
xchg
nop
and
ret
cmp
mov
out
push
mov
inc
pop
fwait
xchg
sub
inc
add
xor
pop
push
xchg
fcomps
aas
dec
out
sbb
cmp
les
cld
leave
insl
or
and
jo
pop
test
inc
mov
sbb
push
xchg
clc
stos
push
jb
arpl
mov
cmpsb
mov
and
inc
sub
scas
xlat
das
out
mov
inc
iret
jl
fsubs
and
inc
mov
cmp
mov
sub
xchg
insb
enter
mov
dec
or
or
cmpsl
or
pop
jp
xor
adc
imul
rclb
push
cmpl
rcrl
and
mov
je
push
aad
lret
jecxz
inc
dec
inc
mov
pushf
jp
adc
jne
xchg
inc
and
mov
sarb
dec
mov
lods
outsl
jp
mov
jp
sbb
mov
and
test
movsl
int3
mov
mov
adc
pop
mov
testb
in
jge
push
movsb
jnp
leave
cmp
adc
push
out
ja
mov
jns
xchg
stc
mov
xor
shrb
mov
mov
add
insb
lock
xor
cmpsb
int3
fwait
pop
jnp
push
sub
fsubrl
test
dec
mov
into
sub
add
out
jnp
or
cli
add
mov
test
cmpsl
cwtl
ficomps
lahf
xor
ljmp
out
sub
fdivp
insb
xor
sbb
dec
testl
jecxz
cmp
jge
jno
add
lea
je
add
xor
shll
adc
movsl
daa
faddp
frstor
es
push
movsb
add
mov
xchg
loope
lcall
xchg
lahf
sub
xchg
stos
push
push
out
ss
mov
jne
and
or
cmp
stos
dec
fldt
push
in
adc
icebp
lcall
push
out
ja
daa
mov
int
mov
shr
sbb
leave
mov
push
int
or
cmp
sub
and
test
pop
imul
xchg
inc
in
testl
shlb
dec
inc
movsl
into
imul
lods
mov
frstor
stos
cmp
clc
or
mov
lea
enter
jecxz
xor
andb
bound
aam
mov
mov
sub
dec
sub
mov
add
jnp
mov
push
inc
inc
push
hlt
cmp
and
cltd
and
outsl
sub
outsl
cmp
sub
add
xchg
imul
test
iret
xchg
mov
jo
push
dec
ficoml
sbb
cmp
cmpsl
fwait
fwait
lds
add
sbb
lcall
push
test
dec
lods
test
xlat
data16
cmp
sub
adc
out
jbe
scas
xor
mov
jmp
fbstp
test
pop
and
adc
mov
cli
mov
dec
ret
in
jns
ds
xor
add
and
fxch
ljmp
adc
mov
lods
push
and
add
mov
xorl
jnp
cmp
flds
pop
cmp
xchg
jmp
pop
rcrb
xor
or
stos
mov
sbbl
mov
and
add
add
pop
lea
sub
cmp
pop
in
int
lret
lret
cmp
mov
jle
pop
and
into
mov
cmp
cwtl
adc
je
mov
inc
iret
cld
jle
or
or
cltd
cld
cmp
dec
movsl
shrb
and
dec
adc
loop
cmpsl
fs
lods
mov
stos
popa
roll
add
cli
lods
jge
leave
sbb
mov
ret
mov
ds
lret
stc
xor
inc
push
popa
loope
jnp
cmpsl
xchg
jno
movsl
push
inc
adc
or
mov
jle
outsb
clc
xchg
cld
arpl
mov
sub
mov
jge
fdivrs
xor
xor
popa
jns
cmp
dec
aam
jae
jl
push
out
aam
push
push
push
xorb
gs
mov
xor
lret
loope
out
int3
push
aad
mov
das
mov
popf
scas
dec
adc
jg
cmc
bnd
inc
sarl
fnstsw
mov
push
push
mov
mov
add
insl
sbb
sbb
or
int
and
push
shl
push
outsb
jns
cld
cmc
xchg
mov
mov
imul
mov
or
add
jbe
push
js
mov
ljmp
xor
mov
imul
int3
pop
cwtl
call
cmp
and
pop
dec
loope
pop
xchg
inc
gs
in
lds
clc
adc
add
stos
repz
mov
das
add
insl
mov
insb
es
lret
movsb
adc
popl
dec
mov
fsubl
dec
in
movsl
push
push
or
daa
mov
shll
adc
push
das
cmp
cmp
and
sub
pop
and
sub
rcrb
sub
xor
mov
jno
mov
arpl
pop
xchg
sbb
jns
jne
cmpsl
or
cmp
mov
pusha
aas
cmc
out
pop
add
mov
push
aam
xchg
cmp
ret
fs
subb
jl
inc
mov
cld
adc
dec
js
adc
test
lret
push
call
jmp
lock
mov
adc
mov
fidivl
test
sti
push
stos
scas
jbe
movsl
xchg
outsl
lods
sahf
inc
mov
movsl
mov
loope
mov
jge
dec
push
cmp
inc
ret
xor
pop
push
adc
adc
mov
das
out
adc
mov
inc
and
cmp
xchg
pop
scas
pusha
jb
ret
cmp
jne
lods
mov
mov
lods
sbb
dec
sti
je
xchg
rcll
pop
arpl
inc
mov
mov
ja
hlt
push
push
mov
in
cld
sbb
push
xchg
je
mov
add
mov
jle
dec
ljmp
ds
inc
sub
ja
push
stos
pop
hlt
mov
scas
lea
pop
jg
outsl
add
jo
adcl
dec
ja
mov
movsb
rcl
into
ja
andb
push
push
add
sti
fs
aad
adc
adc
lea
pop
jae
jg
ret
enter
outsb
enter
addr16
xchg
sbb
adc
or
je
jl
jle
ret
in
pop
or
adc
and
cmp
jnp
pushf
mov
bound
xchg
or
lahf
push
jge
clc
push
jg
cltd
ljmp
sbb
out
xchg
aas
fldenv
dec
std
call
roll
popf
scas
push
aam
es
and
and
adc
shlb
inc
fildll
fcmovbe
or
mov
cmpsl
cmp
jp
xor
test
out
xchg
push
les
insb
sbb
cmpb
movsl
sbb
aad
adc
mov
lods
call
insb
dec
mov
sbbb
je
xchg
lock
enter
cmp
sahf
mov
hlt
out
dec
adc
mov
adc
in
imul
jno
sub
mov
mov
jmp
notb
inc
xor
add
and
repnz
mov
dec
filds
xchg
cli
jo
jmp
mov
xchg
js
jo
jecxz
fxch
fiadds
cmp
mov
push
mov
jge
lret
stos
enter
std
pop
and
xchg
insl
cld
std
cmp
xlat
or
shrb
lahf
testl
in
jp
out
sbb
loop
lcall
xchg
dec
std
lds
cld
rclb
mov
pop
rolb
mov
adc
data16
rorb
mov
or
rcr
les
push
test
jg,pn
repnz
sub
fdivs
in
inc
dec
or
or
push
imul
adc
js
arpl
cld
cmc
loop
push
sbbb
push
xchg
out
mov
ja
mov
rorl
inc
daa
fmull
lahf
lds
jp
adc
cmp
xor
jge
ss
imul
scas
xor
clc
in
shlb
xchg
in
loopne
ljmp
dec
pop
push
cmpsl
inc
mov
setp
and
int
imul
enter
addr16
pushf
mov
loop
movsl
test
mov
in
cwtl
mov
pop
pop
lea
adc
push
push
bound
andb
popf
or
pop
ret
xor
add
lahf
xor
pop
push
mov
inc
fistps
lods
test
shlb
jmp
mov
push
lcall
or
mov
pop
pop
lea
gs
inc
sbb
aam
je
lcall
push
in
dec
std
cmp
lahf
jge
adc
mov
mov
jge
sarl
add
cmc
popf
mov
jne
cmp
pop
xchg
jmp
cmp
mov
jnp
lret
cmp
xchg
cld
pop
jg
adc
inc
inc
mov
adc
or
pop
icebp
mov
lahf
sbb
in
adcl
arpl
or
enter
stos
adc
dec
test
xchg
ds
cmp
out
fimuls
cs
pop
stos
in
mov
fwait
sub
test
repz
pop
ret
out
pop
xor
inc
scas
adc
lods
test
mov
in
inc
xchg
or
arpl
fwait
mov
push
daa
pushf
test
dec
insb
or
lods
jmp
cmpsb
sub
inc
notl
ret
cmp
mov
inc
xchg
cmp
int
cmp
push
daa
fldl
and
lcall
cmp
bound
jge
es
leave
mov
sarb
xor
bound
mov
mov
cld
nop
adc
dec
mov
pushf
inc
dec
adc
fwait
xor
sbb
fcom
addr16
or
xor
or
mov
sub
mov
adc
jecxz
aaa
out
call
xor
cli
cmpsb
xor
mov
mov
paddusb
sbb
jl
sbb
vaddpd
scas
xchg
xor
pop
loope
xor
mov
push
pop
xchg
scas
das
dec
adc
sbb
enter
jecxz
mov
push
or
sbb
fisttpl
pop
sbbb
adc
pushf
mov
add
jns
mov
ficomps
mov
push
adc
je
push
adc
movsb
cltd
mov
pushf
ja
push
out
in
dec
cmpsl
sub
mull
jo
push
ja
iret
mov
mov
dec
invd
or
xchg
jl
lcall
jnp
inc
pop
insb
dec
mov
xchg
cmpl
bound
out
enter
mov
cmp
lret
iret
in
out
lea
iret
out
mov
mov
mov
xor
cwtl
fisubs
cmpsb
lds
mov
pop
mov
mov
mov
sub
scas
rolb
movsb
mov
aas
mov
cmp
sbb
lock
ret
call
jge
in
push
mov
out
pop
xchg
adc
imul
push
and
inc
xor
packsswb
xor
cmp
aam
mov
cmpsl
dec
idivl
add
mov
pinsrw
outsl
ret
xor
add
sarb
jmp
xor
sbb
pusha
mov
push
push
aam
push
or
test
out
int
add
and
dec
xchg
pop
mov
aad
fsts
sub
xchg
adc
in
jl
xorb
movsl
inc
push
mov
push
ret
mov
lret
sbb
stos
sbb
xor
cmp
xchg
fldl
jl
out
sarl
mov
incl
jbe
mov
inc
push
adc
and
push
inc
shlb
jl
xor
movsl
bound
xchg
jle
xchg
aaa
sub
jp
gs
xlat
add
and
sub
inc
out
xchg
testl
das
stos
add
pusha
popf
mov
pop
pusha
int
std
ja
sub
and
xor
jns
push
fdivrl
sahf
pop
xchg
adc
pop
inc
add
fprem
sahf
addr16
sbbb
cmc
enter
hlt
cli
jns
push
xor
nop
call
cli
popf
test
jae
icebp
jne
xchg
adcb
lea
les
adcl
fnstenv
add
adcl
jmp
push
bound
cmp
push
scas
pop
lcall
je
inc
xchg
mov
dec
cmc
sar
jns
mov
push
sub
fdivrl
out
bound
xchg
sbb
fwait
mov
and
jge
faddl
out
xor
imul
mov
cmp
mov
pop
pop
outsb
mov
cmp
ss
ficompl
mov
sub
mov
and
lret
aad
xor
dec
dec
lods
loopne
mov
into
jbe
jnp
ficoms
or
jl
sub
loope
insl
xchg
xor
lahf
mov
mov
scas
push
stos
outsl
call
shr
dec
jb
lahf
push
dec
mov
sbbl
jmp
push
add
xorl
pop
cmp
fs
cmpsl
loope
insb
js
push
inc
pop
repz
adc
or
imul
fs
jnp
call
add
sti
push
or
xchg
add
or
pop
pop
pop
cmp
mov
mov
cmpsb
pop
fisttpll
push
test
loopne
push
fmul
inc
sbb
arpl
rcll
in
xor
mov
insb
jbe
cli
js
push
scas
loop
xchg
pop
push
xor
popa
adc
mov
pop
add
movsl
out
dec
and
cli
xchg
fs
jns
mov
add
sbb
pop
ds
push
xchg
pop
enter
mov
ss
test
jno
enter
xor
insb
movsb
adc
cmc
dec
dec
dec
xor
dec
data16
scas
in
pop
mov
xor
mov
pop
cmp
loop
inc
or
sub
cld
and
test
xor
sub
sub
sub
mov
push
icebp
push
jbe
jo
data16
inc
int3
lahf
mov
mov
popf
imul
sub
stc
incb
rcll
sbb
mov
stos
pop
cs
aas
arpl
push
pusha
loop
or
sub
es
dec
fidivl
fldcw
push
fwait
xchg
in
dec
adc
mov
dec
jne
fbstp
cmc
sbb
xchg
mov
xchg
mov
lret
and
mov
mov
ror
sub
into
test
add
lcall
xchg
call
add
inc
ja
gs
iret
push
incl
fistpll
or
mov
pop
in
or
mov
leave
cmpsl
push
pop
in
lods
rolb
stos
xor
xlat
inc
pop
xchg
sub
loop
cmp
outsl
or
cld
imul
clc
dec
in
mov
mov
stos
aad
mov
aas
sub
push
mov
inc
test
dec
lret
imul
lret
push
repz
pop
mov
pushf
inc
cmp
sub
popa
sub
cs
out
push
push
sahf
jecxz
mov
stc
mov
jmp
imul
out
jbe
stos
adc
movsl
xor
iret
into
add
test
adc
cmp
xor
cmp
and
ja
xchg
lods
adc
dec
mov
aad
and
call
and
popa
adc
add
sahf
dec
mov
xchg
fwait
ret
or
sarb
mov
mov
ret
icebp
sub
add
lds
and
stos
inc
in
sti
in
jo
adc
push
pop
lcall
iret
jbe
aaa
outsb
cmp
push
cmp
fisubl
ficompl
xor
adc
adc
or
pop
xor
pop
push
and
pop
dec
jmp
rcrb
in
jnp
out
and
jbe
cmp
sbb
mov
aas
inc
sti
fldt
ds
cmp
addl
pop
out
mov
or
cltd
push
shll
inc
leave
call
jp
mov
jl
mov
aas
loop
lods
sahf
push
mov
jmp
pop
sbb
xchg
clc
and
dec
dec
insl
and
mov
adc
xchg
out
and
jbe
bswap
pop
mov
xchg
dec
xor
scas
or
push
and
inc
je
loope
cmpsb
dec
pop
mov
push
pop
fimull
xor
jb
fcoms
fcompl
pop
mov
sbb
lods
add
pop
mov
in
into
or
fistpl
adc
jecxz
dec
or
mov
add
js
loope
fldcw
loopne
lcall
pop
iret
mov
mov
add
add
aam
aas
hlt
pop
dec
mov
inc
int
dec
xchg
fwait
mov
into
in
pop
adc
data16
icebp
sub
mov
xor
pop
out
scas
dec
xor
adc
das
and
jo
inc
and
pop
sub
xlat
cmp
or
push
push
mov
mov
int3
dec
xor
pop
dec
push
ja
cmpsl
mov
shll
push
mov
into
mov
add
imul
adc
jp
pop
xor
jnp
jmp
add
push
std
int
or
jmp
xor
dec
or
cmp
pusha
bound
stos
adcb
inc
push
stos
xlat
rcl
and
cmpsb
es
mov
and
decb
stos
cmp
lds
and
sbb
add
lea
sbb
outsb
mov
insl
add
scas
scas
pop
mov
inc
stos
mov
aam
fs
or
adc
repz
mov
xor
inc
sub
cmc
xchg
inc
sbb
mov
gs
scas
fcomp
sbb
jnp
subb
jnp
mov
shrl
mov
test
loope
les
sarb
ds
pop
jecxz
mov
ret
and
shlb
lahf
pop
mov
popa
inc
mov
inc
movsb
adc
or
clc
fisubrl
lea
and
movsl
pusha
call
fisttpl
jmp
xlat
jl
fsubs
shll
sub
mov
push
out
push
mov
mov
push
and
lret
jne
and
push
and
mov
xchg
jae
lods
std
pusha
pop
ds
shl
sub
cmp
cs
das
imul
outsb
mov
mov
arpl
mov
pusha
sub
movsl
call
cmpsl
and
leave
dec
les
xchg
int3
jae
arpl
imul
inc
imul
mov
inc
data16
push
out
movsb
sbb
xchg
dec
and
jb
ret
pusha
xor
out
movsl
pop
pop
cltd
das
adc
popa
cs
cmp
adc
test
out
and
iret
and
movl
cmpsb
mov
add
cmpb
mov
inc
cld
in
sbb
sub
clc
push
adc
lds
mov
aaa
pop
pop
push
imul
fwait
cmp
sbb
inc
and
sbbl
repz
mov
fisubrs
inc
inc
sub
or
xchg
das
mov
mov
mov
xchg
mov
sbb
getsec
mov
aaa
pop
lods
jecxz
pop
mov
xchg
sbb
rcrb
sub
cmp
pop
mov
sbb
cmpsb
adc
mov
movsl
pusha
es
test
push
pop
test
pop
cmpsl
stos
loop
scas
mov
test
xchg
mov
mov
inc
sub
pusha
clc
xor
incl
out
inc
sahf
cmp
aaa
lea
je
cmpb
mov
mov
jecxz
mov
cli
pop
lcall
cmc
lea
fwait
jl,pt
adc
popf
sbb
loop
xchg
or
fidivl
hlt
mov
decb
jle
cmp
inc
mov
insl
pop
int3
adc
mov
imul
push
out
cld
rclb
pop
mov
jae
lcall
movsb
pop
mov
iret
sbb
aad
loopne
sub
cmp
mov
lahf
sub
cmp
in
lea
jl
lretw
fnsave
pop
sub
lods
enter
pop
mov
jl
loopne
push
jg
push
pop
add
in
lock
push
inc
orb
jne
xchg
dec
mov
inc
ret
and
movsl
leave
in
pop
push
xor
ficoms
or
push
xor
push
outsb
in
xchg
das
xchg
lahf
inc
loop
test
flds
xor
arpl
std
mov
cmp
xchg
in
roll
sarb
lcall
push
xchg
cmpsl
jae
mov
mov
pop
mov
subb
mov
test
in
push
push
push
cwtl
outsb
stc
or
mov
mov
mov
imul
cs
cmp
lahf
add
inc
jnp
into
push
inc
ret
hlt
xchg
iret
insb
scas
jns
xchg
mov
out
mov
sub
leave
mov
lods
mov
loop
iret
popf
test
mov
pop
aam
dec
scas
je
std
stos
popf
addr16
lcall
pop
test
and
orb
lret
mov
aam
decl
repnz
or
jmp
mov
sub
outsl
xchg
repz
fmul
dec
sub
loopne
les
aam
decl
scas
out
ds
xchg
imull
in
test
dec
mov
jo
shr
push
nop
push
lret
mov
adc
nopl
and
mov
daa
sub
cwtl
jbe
mov
leave
std
cli
mov
lahf
jmp
cmp
gs
cld
loop
push
adc
idivl
add
or
in
cmc
inc
pop
jmp
adc
andb
adc
and
push
ja
adc
push
or
mov
pop
mov
rol
or
outsb
int
sbb
out
dec
inc
shrb
xor
and
insl
scas
pop
mov
dec
je
dec
std
cmc
cmpsl
lds
jne
pop
sbb
js
jns
popa
sub
inc
lods
sub
imul
xor
mov
add
and
repz
cli
cltd
sbb
pop
mov
jecxz
jl
sub
in
sbb
movsl
aam
lock
mov
and
cmc
cmc
and
insl
xor
jnp
xchg
sub
lcall
popf
sbb
icebp
popf
andb
cmp
pop
mov
jle
aas
pop
xchg
clc
sbb
int
and
sbb
xchg
jp
shrb
repnz
or
push
pop
aas
fnstcw
lret
jge
imul
push
mov
mov
addl
fsubrl
xor
mov
add
cmp
xchg
test
aad
mov
daa
pop
add
xor
invd
sbb
adc
scas
out
rcll
push
sub
cmp
inc
mov
fadds
inc
lret
or
sub
jle
sarb
xchg
lret
lret
mov
ds
and
adc
xchg
jbe
imul
cmpsl
jg
es
sahf
mov
pushf
mov
push
das
cld
xorb
in
sbb
test
stos
loop
icebp
vcvttsd2si
loope
push
sub
push
push
cmpsl
movsl
push
std
cmc
shrb
inc
add
cmp
cwtl
push
xchg
icebp
xor
loope
lret
cmp
out
or
test
clc
pop
out
mov
aaa
out
das
dec
rcrl
mov
or
test
mov
fdiv
fadds
mov
ja
mov
xor
std
outsb
mov
push
sbb
cmpsb
lret
shll
lods
fwait
int3
dec
ljmp
and
imul
xor
ds
dec
stc
pop
and
add
sti
incb
inc
dec
and
push
ljmp
sub
arpl
cli
or
into
jmp
aas
sti
jp
xchg
jno
ret
out
add
fsubr
add
cmpsb
shl
imul
adc
lock
stos
imul
jo
je
push
push
xchg
lods
cmp
icebp
dec
test
inc
popf
fcompl
aam
add
lcall
pop
mov
adc
push
stos
mov
js
mov
les
add
and
ret
rcrl
mov
repnz
add
lea
cmpsl
cli
jp
bound
sub
pop
popf
add
in
jp
or
or
xor
gs
in
shll
int3
adc
and
push
iret
aad
xor
cmp
call
or
aad
xor
dec
int
xchg
addr16
pop
aad
jbe
cmp
mov
push
es
sbb
imulb
stc
psrld
pop
repnz
call
push
lods
mov
inc
test
mov
frstor
add
sub
pop
into
mov
mov
into
mov
flds
pop
ss
ljmp
nop
aad
push
testb
adc
clc
hlt
je
je
dec
stos
enter
ret
inc
ljmp
adc
jb
xchg
sahf
cs
and
iret
adc
std
ror
adcl
xchg
pop
add
in
cmp
cmp
mov
mov
jecxz
cld
cmp
ss
pop
mov
mov
inc
pop
out
mov
data16
sbb
push
leave
mov
enterw
sub
testl
pop
ror
inc
mov
sbb
ljmp
nop
jnp
js
jae
and
icebp
addr16
mov
rolb
mov
jmp
pop
ficoms
mov
push
pop
jecxz
push
scas
dec
fstpl
fstl
cltd
jns
js
or
or
addr16
out
inc
gs
dec
jecxz
cmc
xor
and
xor
gs
or
stc
jecxz
adc
cli
aam
lret
push
lcall
or
jns
sbb
cltd
mov
jp
pop
xorb
lock
dec
imull
clc
shlb
push
mov
xchg
mov
imul
dec
fcmovb
jne
dec
and
into
sbb
xchg
in
cwtl
loopne
rclb
pop
add
dec
cs
sub
out
sub
gs
testb
add
jbe
mov
push
adc
cmc
test
lret
mov
lret
jp
leave
cltd
out
out
fcmovnb
test
mov
dec
test
inc
mov
imul
push
loope
stos
sbb
mov
jbe
inc
or
test
pop
es
adc
jge
sbb
xor
sahf
xchg
mov
loopne
sub
sbb
ss
pop
ja
mov
pop
test
adc
in
bound
or
sti
fiaddl
xchg
cmp
or
leave
jmp
sub
fadds
xchg
jmp
aad
jb
pop
out
inc
dec
cltd
add
shr
test
push
pop
test
push
lret
arpl
loop
test
ss
rcll
in
mov
ja
das
xchg
xchg
and
xchg
sub
pop
daa
mov
jne
inc
xor
inc
hlt
stc
dec
xchg
mov
cmc
pop
data16
xor
dec
pop
rcl
lcall
sub
add
inc
mov
xor
loop
push
lcall
add
lea
jl
scas
jno
inc
enter
int3
sbb
roll
and
fisubrl
xor
adc
enter
sub
nop
pop
sub
hlt
cmp
or
pop
movsl
fimull
cwtl
add
adc
xor
jge
daa
xor
jp
cmovg
xchg
inc
or
mov
mov
aad
pop
add
xchg
mov
sub
in
jge
cltd
leave
cwtl
fdivrs
adc
lock
cli
and
jb
js
xchg
xor
push
nop
mov
out
inc
lock
mov
repnz
pop
ds
xchg
testb
inc
mov
hlt
insb
popf
push
clc
dec
rcll
add
orb
or
andb
sub
int
and
or
cmpsl
lret
sbb
xchg
push
sub
js
jbe
jp,pn
sub
push
shll
sub
imul
sbb
paddusb
aaa
mull
sub
sbb
push
sahf
movsb
test
mov
movsb
movsb
loopne
inc
les
lret
pop
xlat
sub
mov
rolb
ret
xlat
add
inc
imul
nop
decb
mov
loop
inc
icebp
je
out
sub
std
jge
dec
cld
jmp
lahf
pop
int3
mov
shlb
pop
aam
dec
hlt
cltd
xchg
fwait
imul
add
xor
das
fisttps
or
loope
clc
mov
leave
adcb
push
push
in
mov
testb
jmp
xor
mov
gs
sbb
sti
cmpsl
aam
cltd
stos
mov
lret
cmp
jle
subb
jmp
mov
inc
movsl
adc
pop
sub
je
adc
pop
andb
sub
iret
mov
js
mov
repnz
int
sbb
xchg
aad
xchg
out
repz
xor
mov
xchg
fwait
push
push
dec
mov
add
popa
push
dec
lahf
xor
fmull
sub
push
pop
jle
xchg
shll
ficompl
push
xchg
frstor
outsl
dec
in
int3
hlt
jno
sbb
mov
insb
cmp
jbe
lret
cs
ret
pushf
sbb
lods
xchg
iret
popf
and
test
repnz
sbb
les
or
lods
push
push
mov
adc
jbe
in
sahf
mov
dec
mov
sbb
lret
int
in
adc
jb
fcomps
add
sub
or
imul
adc
sbb
loope
data16
sti
mov
and
and
lret
js
lcall
int
xor
cmp
cld
repnz
xor
xchg
fistpll
pop
push
fdivrs
rorl
test
sbb
fldl
scas
imul
mov
aam
mov
add
movsb
sbb
dec
cmc
or
rolb
scas
sarl
fdivrl
sbb
mov
in
cltd
mov
in
push
scas
or
out
in
inc
imul
push
cltd
dec
pop
sbb
lret
push
adc
push
or
pop
xchg
test
into
sahf
aam
inc
mov
mov
push
mov
pop
rcrb
adc
pop
sub
mull
jne
pop
ds
call
cmp
push
bts
push
xor
scas
out
mov
add
stos
push
adc
and
push
pop
pcmpeqb
test
add
push
jge
jno
mov
cmpsl
mov
mov
jns
lock
sbb
cmp
add
shlb
dec
or
xor
pop
or
inc
mov
ret
sahf
out
sbb
inc
mov
mov
pop
cmp
stc
mov
push
shlb
xchg
adc
test
and
xchg
or
adc
std
mov
xchg
inc
and
inc
xor
jns
jbe
mov
in
add
sbb
jno
enter
add
jle
mov
enter
add
loop
adc
xor
inc
int3
out
and
mov
adc
add
cmp
int3
stos
push
jne
xlat
mov
pop
fistps
dec
sub
add
xor
mov
lea
lods
bound
mov
int3
mov
mov
lods
and
ss
les
dec
jmp
push
push
imul
addl
fisubrl
enter
lret
in
je
notl
rcll
adc
ja
pop
mov
xchg
dec
ja
add
fisubrs
int
fsubs
in
int
rcr
lods
lret
subl
sub
int3
ret
repnz
nop
movsl
inc
xor
int
sub
push
mov
les
pop
frstor
fmulp
enter
push
cli
xor
or
test
and
addb
push
mov
int3
mov
and
push
shll
inc
divl
and
or
data16
sub
scas
cs
adc
test
lock
sbb
mov
pop
sahf
sbb
xor
xchg
cs
repz
mov
add
out
loop
mov
cltd
out
jno
call
je
and
stos
cmp
adc
mov
jl
adc
and
adc
adc
xor
test
lock
pushl
inc
inc
add
out
mov
dec
popf
pop
and
add
mov
add
in
stos
push
sub
mov
insb
fidivs
mov
mov
and
pushf
xchg
push
andb
popl
movsw
mov
loope
push
sbb
and
popa
and
out
lahf
pop
cmp
ljmp
xchg
hlt
add
sbb
mov
push
je
sbb
sbb
bound
inc
mov
dec
popa
sti
push
fs
ret
cmp
inc
fdivs
push
retw
arpl
das
adc
xor
cmpb
call
and
lcall
push
pop
push
ficoml
mov
push
enter
sub
cmp
cmp
jle
add
push
test
dec
testb
aam
mov
jl
adc
loope
xchg
inc
test
mov
idivl
mov
cld
ss
sbb
add
cvtpi2ps
dec
das
xchg
lods
jae
mov
lods
mov
sbb
inc
and
clc
jns
std
mov
mov
add
aad
inc
xchg
aad
pop
leave
pop
push
orl
xchg
sahf
xor
mov
sub
xchg
or
cmp
loop
gs
pop
mov
dec
scas
xchg
add
daa
sub
test
and
lahf
cld
pop
insl
cs
inc
jge
pop
jno
mov
movsl
fnstsw
movl
mov
mov
jnp
shr
push
lret
sub
push
adc
or
add
jne
and
mov
mov
pop
sarb
mov
or
cmp
nop
xchg
rcrb
xchg
push
sub
cmp
cmp
fnstcw
outsb
adc
xchg
mov
mov
and
cmpsb
inc
std
imul
pusha
out
xor
pop
pop
leave
dec
icebp
movsb
mov
loopne
mov
xor
xchg
subb
or
in
pop
fldt
pushl
push
pop
adc
test
xchg
adc
mov
pop
dec
aad
std
cli
lret
insl
jg
or
add
adc
xor
mov
les
lret
mov
test
rcll
or
aad
imul
les
dec
xor
popf
lret
cwtl
sbb
int
imull
pop
outsl
insb
jae
and
repnz
mov
xchg
pop
inc
inc
pushf
mov
scas
xor
cmp
ss
daa
notb
xchg
shlb
mov
mov
sub
add
addr16
sbb
aas
das
js
xchg
pop
mov
out
dec
push
aam
dec
and
arpl
sarb
xor
stos
pop
out
push
lods
sbbb
aas
cmc
xor
mov
dec
hlt
outsl
inc
aaa
stos
lret
icebp
call
xor
mov
int
lock
ret
push
nop
lods
lret
cld
ljmp
xchg
std
imul
xchg
arpl
jle
jmp
into
sahf
andb
addr16
imul
lcall
cmpsb
nop
adc
stos
hlt
ret
sub
shl
jp
mull
fstpt
into
hlt
lcall
push
ljmp
jae
jg
outsl
in
and
addl
test
pop
mov
push
mov
pop
int
mov
not
out
ret
mov
scas
sahf
imul
ror
dec
sbb
push
mov
into
mov
dec
adc
add
daa
push
hlt
dec
mov
sub
jmp
movsl
fs
mov
sbb
lahf
mov
adc
mov
cmp
data16
int
aaa
push
hlt
es
inc
xor
gs
mov
lea
fdivs
jo
outsb
push
mov
or
mov
rol
jne
mov
mov
or
inc
inc
push
insb
pop
add
test
test
out
inc
test
fiaddl
rorl
es
mov
pop
jge
dec
fbstp
jmp
into
movsb
push
mov
call
push
mov
jecxz
mov
jo
mov
and
and
movsl
das
adc
rcrb
mov
imul
mov
call
shlb
mov
pop
pop
cmp
mov
ds
adc
out
shrb
adc
mov
rclb
push
sbb
adc
mov
inc
out
aam
out
mov
imul
repz
xchg
or
imul
loope
adc
push
cmp
sub
arpl
push
mov
sbb
in
ja
sub
loopne
mov
divl
pushf
push
fwait
stc
pop
mov
inc
sub
push
push
imul
in
cmp
xor
cmp
pop
push
test
call
xchg
nop
mov
sbb
and
add
insb
pop
dec
dec
pusha
lds
fidivrs
movsb
jno
inc
push
lods
movsl
inc
cmp
lretw
bound
push
mov
pop
xlat
inc
mov
popf
or
cmpsb
sub
out
add
daa
jne
adc
clc
jb
cmc
xor
imul
xchg
add
repz
jo
fsubl
cld
dec
dec
subl
inc
cmp
lods
rorb
add
mov
mov
jecxz
or
jo
and
dec
jo
add
mov
and
jmp
out
fsubrl
lcall
or
shrb
das
and
pop
jb
sbb
clc
mov
sbb
iret
sbb
xlat
loopne
lret
and
repz
and
loope
add
jg
lahf
jnp
xorl
pop
aad
mov
sbb
cmpsb
xchg
test
dec
loop
icebp
popf
ret
pop
pop
stos
stos
inc
enter
bnd
mov
lods
jno
stos
test
pop
in
into
xchg
pop
and
flds
pop
cmc
fnstenv
cli
push
xor
dec
mov
imul
or
divb
pop
lret
test
lret
fildll
dec
xchg
jle
arpl
inc
mov
js
inc
je
rorb
cmp
xor
add
jge
lret
inc
scas
dec
clc
popf
movsb
int3
or
or
cmpsl
pop
sbb
dec
mov
nop
and
or
xchg
sub
mov
push
test
or
and
adc
mov
cmp
scas
push
mov
cwtl
leave
leave
pop
dec
aaa
and
je
js
mov
pop
pop
out
pushl
mov
cmp
dec
das
test
jge
add
cli
xchg
mov
pop
push
jecxz
test
nop
adc
push
icebp
es
add
lods
mov
push
dec
addl
push
rolb
xchg
aad
je
movsl
es
cwtl
sub
xor
xchg
add
sahf
call
nop
push
sbb
movsl
xor
mov
push
lahf
jmp
xchg
sbb
bndldx
loope
aas
push
in
aas
pop
adc
mov
int
orl
call
cmpsl
push
stc
add
mov
mov
addr16
in
or
cmp
push
and
adc
pop
lret
icebp
sbb
jge
mov
xor
sub
leave
hlt
fwait
push
aad
mov
xlat
popa
cmp
sbb
pop
jbe
xchg
into
aas
jbe
jae
mov
rcrb
xchg
mov
xchg
mov
add
loop
sub
inc
hlt
popl
push
jb
jl
out
mov
cmp
dec
jg
mov
test
lret
inc
inc
push
and
push
daa
adc
mov
cmpsw
lahf
js
pop
cli
push
cmpsl
mov
or
push
inc
sahf
jmp
jb
mov
and
add
fucom
ror
or
lcall
sub
mov
push
jns
adc
ss
ds
movl
cmpsl
bound
test
popa
and
test
out
mov
sahf
movsb
and
cmc
sbb
pop
cltd
stos
int
or
cli
stos
dec
les
pop
xchg
sbb
dec
adc
ret
cmp
or
mov
mov
shlb
and
cmp
mov
es
aas
push
push
jb
lahf
inc
xchg
inc
test
dec
fstp
push
shl
cli
ljmp
dec
sub
push
jge
add
or
jnp
out
int3
and
lds
or
add
and
adc
arpl
and
adc
je
lods
xor
sbb
jne
dec
mov
inc
xchg
rcrb
rcll
pop
stos
test
lds
push
xor
xor
mov
xor
scas
leave
leave
pop
sar
out
sub
dec
fildll
jg
outsb
add
stos
sahf
inc
into
lret
mov
fbstp
push
in
shrb
jb
xchg
pmaxsw
push
and
icebp
scas
jmp
cwtl
push
es
fs
or
divb
loop
pop
mov
jns
lret
sbb
mov
stc
lock
rcrl
loopne
call
adc
loop
neg
and
fisubrs
jno
pushf
xchg
popa
mov
es
call
sbb
lcall
pop
and
or
or
fdivl
sbb
cmp
jbe
and
mov
and
pusha
sub
mov
into
xchg
pop
sub
or
sti
or
pop
loopne
mov
shr
xor
stc
or
fcompl
cmc
mov
ss
mov
ret
dec
lods
cmpsb
inc
xchg
xor
push
adc
jge
not
mov
cli
cmp
test
push
inc
push
xor
pop
test
jo
sbb
bnd
and
jmp
mov
repnz
sbb
repz
xstore-rng
cmpsl
xchg
popf
jle
sbb
mov
inc
lcall
push
lea
lret
cmp
decb
lgs
lods
inc
mov
adc
je
sbb
loopne
cs
in
aaa
mov
mov
xchg
inc
inc
jle
or
addr16
lods
xchg
lock
popa
adc
jl
stc
fs
ss
or
shll
clc
or
jae
adc
xor
and
push
add
je
scas
test
jmp
mov
arpl
lcall
or
fisubl
cmp
sub
push
xchg
lds
inc
mov
je
dec
hlt
xlat
mov
movsl
push
sub
cmp
sub
adc
jae
out
inc
mov
pop
inc
test
mov
xchg
xchg
in
pop
xchg
dec
or
or
mov
xorb
scas
out
lret
or
inc
pop
dec
and
xchg
shr
jmp
sarl
add
and
xchg
adc
fidivs
repz
sahf
gs
mov
fmuls
mov
and
jg
or
mov
add
push
rclb
cmp
lahf
xchg
inc
mov
fbstp
lods
icebp
inc
icebp
lret
cmp
pop
cli
ljmp
jmp
sbb
test
pop
jne
fisubrs
pusha
bound
jecxz
lret
rorb
jbe
push
pop
jg
lds
sub
mov
outsb
cmp
lret
fisttpll
test
and
out
push
pop
scas
sub
pop
sbb
jmp
fstpt
xor
nop
inc
jecxz
cmp
sbb
aaa
stc
cwtl
adc
jle
jnp
out
xlat
or
pop
popa
call
mov
mov
mov
inc
dec
insb
mov
jae
das
xchg
fistpll
popf
mov
fimull
dec
adc
bound
popa
or
or
shlb
push
nop
rolb
lret
adc
xchg
and
clc
inc
pop
dec
dec
push
xor
nop
cmc
pop
std
pop
scas
pop
cmp
xor
in
int
dec
jle
mov
pop
js
test
sti
mov
dec
loope
cmp
adc
push
in
sbb
push
das
mov
rcl
icebp
jl
in
stos
mov
sub
push
gs
xchg
cs
xorl
and
lea
xchg
push
inc
mov
lret
mov
xor
or
lds
and
lods
xor
leave
orl
addr16
dec
movb
inc
mov
stos
and
clc
xchg
leave
push
cld
js
int3
in
mov
dec
in
int
out
fneni(8087
je
into
inc
mov
or
insl
sub
outsl
jecxz
int3
mov
jno
cmpb
jmp
pop
inc
iret
loop
test
push
std
mov
fcomp
pop
push
mov
and
and
push
mull
ja
sbb
add
movsb
rcll
inc
icebp
cmp
push
enter
popa
inc
jmp
cmp
mov
sub
inc
iret
xor
std
shrl
push
cmp
add
loope
xor
mov
leave
aas
inc
imul
push
shrl
xor
or
out
mov
pusha
mov
imul
lods
add
ja
xlat
inc
loope
push
pop
or
stc
xchg
xor
xchg
mov
jne
pop
test
mov
pop
sub
das
in
in
xchg
mov
lods
test
repz
loop
xchg
cmp
mov
fiaddl
ja
in
push
cli
adcl
push
lds
mov
xchg
fs
fsubs
call
aad
pop
ss
cmpl
test
sub
icebp
loopne
and
aad
fidivl
mov
dec
into
pop
cmp
jnp
aad
jno
adc
mov
or
pop
or
inc
fs
ret
nop
mov
or
xchg
lea
mov
adc
mov
inc
lds
cmp
cmp
repnz
sahf
enter
scas
imul
lds
mov
in
out
stc
mov
xchg
push
mov
xchg
test
lea
dec
xlat
add
fldt
incb
jl
outsl
sub
test
stc
data16
cmpl
add
add
sbb
dec
lret
enter
in
andb
ficoms
cmpsb
in
adc
loope
pop
cmp
in
pop
stos
in
adc
inc
adc
cmpsb
adc
mov
push
clc
dec
insl
or
ret
jnp
call
push
push
imul
dec
cltd
shlb
data16
mov
jmp
mov
dec
insl
repnz
inc
inc
sbb
mov
jo
sub
data16
cltd
inc
dec
or
repz
lcall
fwait
sbb
cmp
jp
lret
xor
dec
test
or
jecxz
bound
and
negl
popa
lahf
mov
das
xor
imul
pop
jge
out
xchg
fwait
cmpsb
in
inc
cmp
jne
out
data16
mov
add
mov
mov
jl
or
not
push
pop
add
xor
mov
rcrb
cmp
lods
jg
inc
in
imul
sti
js
or
sub
mov
jb
loopne
mov
gs
enter
shll
orb
rcrb
dec
lock
and
and
std
test
hlt
adc
mov
fidivrl
cs
adc
mov
inc
sbb
cli
jp
inc
clc
scas
inc
sbb
jge
adc
pop
push
test
pop
mov
xlat
dec
add
rcll
or
sbb
add
fnsave
or
push
int3
fidivrl
xlat
popa
insl
cli
mov
in
jo
mov
dec
sbb
or
cmpsl
pop
ljmp
mov
add
repnz
pop
sub
or
cli
mov
push
xchg
nop
ljmp
outsb
add
add
inc
notb
mov
sub
adc
fdivrl
cmpsb
adc
aam
push
cmpsb
cmp
adc
imul
xor
test
cmc
out
inc
out
arpl
dec
xor
inc
mov
loop
or
adc
mov
fs
inc
incl
lds
push
jns
adc
stos
mov
lods
stos
inc
jecxz
xchg
pop
rorb
ret
and
outsl
xchg
cmp
je
xchg
arpl
ja
fnstcw
add
movsb
and
push
in
out
xchg
push
pop
cmp
and
xor
bound
push
push
adcb
sbb
mov
inc
daa
test
fisubs
in
negl
fidivrl
mov
jno
jnp
mov
lods
and
sub
jno
movsb
add
and
xchg
dec
scas
loopne
push
mov
test
dec
test
icebp
xchg
in
in
icebp
xchg
fcom
xchg
mov
fsubp
or
pop
xor
lds
jle
sbb
fnstenv
pusha
imul
cli
lret
push
cmp
fs
out
pop
mov
inc
shl
cmp
jle
cmp
jbe
push
jle
sahf
push
cmp
cmp
xor
pop
jge
mov
or
adc
jge
cld
pop
mov
out
and
fisubl
mov
cltd
testb
adc
mov
jle
int3
or
or
xchg
push
inc
ss
imul
jae
push
rcrl
fs
out
iret
dec
and
pop
mov
xor
mov
mov
push
sbb
clc
mov
in
mov
jo
mov
lock
mov
idivb
push
aas
cmpsl
mov
jge
je
or
and
into
jecxz
pusha
dec
pop
adc
es
pop
dec
add
xorl
lcall
lret
add
jg
incl
imul
inc
out
ss
sbb
mov
out
xor
cltd
rorb
add
add
out
push
inc
jne
xchg
pop
dec
lret
push
inc
mov
push
mov
sub
sbb
clc
cs
jle
popf
push
jg
aam
pop
pop
popf
loope
shrb
sbb
adc
push
pop
xchg
sbb
jo
sub
cmc
movsl
nop
and
rcll
add
or
movsl
dec
sbb
jge
push
mov
repz
xor
mov
les
sti
addr16
xor
xor
fs
jae
cmc
mov
shll
insl
stos
inc
inc
subb
fildl
or
pop
imul
loop
push
clc
adc
test
sti
sub
add
fs
outsb
add
aam
mov
push
pop
push
jne
popa
call
inc
hlt
jo
lods
addr16
mov
arpl
cmpsb
loop
and
fiadds
jge
divb
test
out
or
inc
push
mov
push
stc
cmpsl
push
mov
ljmp
aad
inc
in
cmp
push
sbb
mov
and
repnz
sbbb
filds
cmovl
xchg
xlat
lahf
and
mov
lahf
mov
push
mov
add
pop
xchg
shlb
mov
mov
push
arpl
and
fs
call
addl
lods
pop
fisubrl
pop
cwtl
rcr
stos
jle
dec
mov
sahf
push
les
lret
cmpsl
sahf
je
test
ret
aam
sub
subb
jmp
fidivs
mov
out
pop
xor
sub
scas
in
jne
test
orl
icebp
or
mov
inc
sarl
into
fidivrs
ret
cmpsb
xor
and
iret
pop
int3
xor
cmc
test
nop
rcrb
jo
pop
in
mov
adc
sub
pop
jns
push
mov
pop
xlat
or
xchg
jmp
int
enter
and
and
inc
or
std
push
lock
dec
inc
or
shll
cmp
repz
mov
sti
pop
adc
leave
cmp
test
imul
movb
icebp
or
mov
loope
fistl
leave
aas
gs
pop
cmp
outsb
dec
js
adc
adcb
jbe
pop
rcr
sbb
inc
int3
add
pop
cmp
cmp
js
push
jb
rolb
shl
andb
int3
gs
test
sub
inc
popa
stc
mov
sub
cli
jo
jp
ss
sahf
pop
aad
inc
xor
and
int3
mov
xor
add
and
sbb
add
mov
push
loop
inc
inc
ror
sti
aad
push
lea
mov
jo
adc
push
push
shll
jne
xchg
push
or
ss
pop
imul
pusha
mov
in
mov
mov
and
mov
sbb
aam
and
sub
insl
stc
push
iret
lock
and
int3
movsl
dec
pop
ret
adc
movl
rclb
inc
out
mov
decb
std
sbb
mov
ja
xchg
push
fs
sub
jae
pop
push
xor
out
jns
stc
cld
outsl
xor
in
cltd
push
je
int
inc
adc
lods
pop
shrl
mov
divb
aam
push
fildl
jl
testb
cmp
dec
or
sahf
in
mov
pushl
scas
cmp
fmuls
jne
inc
mov
loop
icebp
mov
sbb
jp
jb
or
clc
subb
cmp
cmpb
leave
out
inc
test
je
ret
xchg
mov
dec
into
cmc
mov
iret
imull
ret
icebp
add
cmpsl
das
outsl
mov
lret
outsl
push
cmp
pop
in
shll
ja
cli
stos
mov
mov
xor
aad
clc
test
movsb
xchg
add
loop
and
leave
jno
mov
mov
ret
in
dec
sbb
data16
xor
mov
out
shrb
cmp
ja
lret
test
inc
test
ret
mov
inc
inc
rcrb
adc
and
jg
and
hlt
loope
inc
ret
xchg
hlt
sbb
outsb
je
xorb
add
adc
dec
inc
or
xor
or
inc
test
lock
je
push
mov
adc
or
xor
cmp
push
jmp
fmul
cmp
jmp
cmpsl
pusha
jnp
outsl
ds
push
jo
cld
loope
lods
xchg
scas
mov
sbb
lods
and
jne
fcoms
mov
jnp
aad
sbb
subb
add
test
fbstp
mov
shlb
lea
out
and
sub
mov
aaa
clc
push
fwait
push
sbb
inc
sub
insb
xchg
mov
pop
repz
pop
lret
icebp
test
xchg
pop
ret
std
mov
in
xchg
cwtl
xor
clc
or
push
xlat
ret
xchg
xor
ljmp
gs
ljmp
xor
cmp
stc
inc
stos
jl
sahf
mov
std
jecxz
test
int3
leave
arpl
daa
lock
hlt
jno
jne
jo
cmp
test
push
sbb
fcmovnb
and
dec
dec
jno
mov
or
insl
test
cmc
fistl
inc
jmp
cmp
inc
or
add
fnstenv
jnp
and
jecxz
and
or
cmp
or
rcrl
sbb
jb
int
les
jg
mov
icebp
cmp
mov
dec
jb
mov
ljmp
out
cmpsb
lret
in
mov
cmp
ffree
add
sbb
clc
cmpsl
push
jg
faddl
xor
mov
cmc
adc
lahf
bound
xchg
lea
xor
int
es
add
mov
add
xor
stos
aad
test
in
xor
insl
filds
in
and
add
dec
pusha
or
int3
jns
fisubs
sub
fstps
leave
cmp
cld
es
xchg
les
loop
cs
bound
leave
dec
pop
arpl
xor
cwtl
in
mov
add
orb
sub
cmpb
jecxz
neg
dec
add
pushl
pushf
sub
cmp
call
outsb
jae
push
mov
rcl
jecxz
out
mov
out
xor
icebp
dec
sarb
addb
and
fnsave
imul
pop
in
test
ds
jmp
and
mov
or
daa
les
push
ret
popa
sub
js
mov
iret
fstpt
cmp
rcrb
sar
cmp
or
scas
jne,pt
jae
cmp
imul
cmp
dec
sbb
xchg
repz
mov
shlb
sti
arpl
lods
push
fst
pop
pusha
and
mov
aaa
add
in
lds
popf
push
adc
xchg
xchg
popf
loope
and
mov
dec
in
push
sti
mov
aam
repz
clc
jmp
leave
fdivrl
add
inc
or
in
nop
sbb
in
es
popf
add
arpl
dec
jb
inc
push
aad
push
pop
add
imul
xchg
and
mov
cwtl
pop
fimull
push
and
jns
mov
jnp
std
mov
push
orl
sbb
mov
fbstp
pop
stc
dec
inc
mov
push
jg
test
fldcw
je
cmp
jo
cli
hlt
div
test
pop
sahf
xchg
sub
push
mov
mov
std
repnz
jbe
insl
les
inc
call
iret
ret
dec
cs
and
xor
sub
test
sbb
clc
xchg
jns
mov
pop
inc
cmc
cmp
mov
xchg
sub
call
shll
loopne
pop
jb
test
mov
xor
mov
lods
ja
les
or
push
lods
in
iret
inc
push
inc
movsl
jg
rclb
and
or
xor
sbbl
xor
cmp
jp
js
ljmp
lahf
ror
jnp
push
test
sub
mov
adcl
push
je
and
mov
inc
mov
je
xchg
mov
pop
or
test
arpl
pop
add
cltd
add
xor
cmp
push
cmp
aam
ret
shll
inc
repz
push
dec
dec
add
jnp
and
adc
cmp
sub
imul
inc
cwtl
mov
pop
add
mov
sahf
mov
cmc
rorl
jns
loope
push
sahf
mov
mov
in
std
mov
or
movsl
dec
hlt
mov
pop
inc
lahf
into
jbe
lods
push
mov
rcll
cmp
sub
fstpl
cmp
cmp
xor
into
jns
insb
mov
scas
cmp
sub
ljmp
mov
into
add
test
pop
scas
popf
or
sub
sbb
subb
mov
jge
lods
dec
mov
iret
jecxz
mov
mov
shlb
fcmove
loop
add
int3
sub
decb
jno
jmp
xor
sub
inc
pop
and
out
jbe
cmp
push
add
sub
mov
shrb
sub
or
xchg
outsl
add
inc
std
test
out
adc
addr16
push
loop
cs
mov
sbb
rcr
or
mov
stos
inc
test
mov
lea
jge
nop
mov
fsub
gs
cld
mov
push
mov
jae
add
or
out
pop
cmp
clc
sbb
push
nop
xor
inc
lds
xor
inc
xchg
push
stc
ljmp
xchg
xor
imul
addr16
mov
popf
cmpsl
aam
sbb
mov
push
adc
dec
mov
sahf
jmp
lds
jp
adc
nop
cld
into
lock
scas
dec
fnstsw
mov
pusha
xchg
ror
lock
je
in
push
mov
iret
ret
sub
call
hlt
pop
ja
xchg
jecxz
cmc
jae
mov
out
popf
insb
cmc
fimuls
pop
sbb
push
mov
stc
std
out
mov
xor
icebp
add
mov
xchg
sub
lahf
dec
es
cwtl
jnp
in
push
cmpl
pop
push
xchg
pop
punpckhdq
adc
inc
xchg
jecxz
cs
fisttpll
lahf
mov
sbbl
xchg
sub
das
mov
aam
mov
fisubl
dec
jb,pt
lods
cmpsl
call
xchg
xor
jge
imull
mov
lcall
inc
sarl
cs
pushl
cmovp
fcmovb
rcrb
loopne
add
dec
sbb
ret
fbstp
xor
je
jne
push
notb
test
jb
lret
jo
int3
cmpsl
adc
pushf
enter
divl
pop
add
repz
inc
in
jmp
dec
sbb
lahf
sbbb
ret
incl
lahf
movsb
and
push
inc
iret
ja
sbb
aad
and
pop
int3
pop
repnz
xchg
aam
sbb
fimuls
xchg
and
pop
push
dec
shll
cs
xchg
in
pop
in
fdivl
rorl
pusha
xchg
fbld
dec
and
sti
mov
sbbb
shlb
dec
sub
mov
adc
into
shrb
out
adc
insl
incl
icebp
lahf
push
push
movsl
rcll
sahf
sahf
jae
push
push
add
xorb
imul
movsb
neg
pop
inc
inc
je
movsl
add
cmc
sbb
lock
iret
pusha
insb
mov
adc
pushf
test
xor
into
shlb
popf
push
outsl
mov
pop
out
lea
adc
jg
mov
xor
mov
lcall
mov
mov
int
cmp
arpl
stos
out
adc
dec
pushf
in
sub
int3
inc
jmp
scas
sbb
in
mov
xchg
fbstp
cmpsl
ret
sahf
enter
sbb
push
jbe
in
jg
enter
and
fimuls
out
imul
lods
movsb
out
adc
in
in
loopne
sub
test
mov
flds
adc
or
and
sbb
pop
cmp
sarb
subl
pop
mov
pusha
sbb
mov
pop
pusha
mov
mov
inc
jecxz
xchg
jo
inc
push
cwtl
pop
in
mov
test
daa
lock
popf
sti
scas
out
daa
or
pop
or
push
int
movsb
push
cld
push
imul
pop
pop
xor
fadds
ljmp
jmp
mov
push
loopne
adc
js
sub
inc
mov
out
xchg
stos
cld
inc
out
and
adc
test
mov
nop
dec
call
and
notb
rolb
icebp
cmpb
shlb
or
jo
jno
lds
jge
push
mov
cmpsl
popa
or
std
fld
xchg
dec
js
mov
js
push
shrb
shrl
movsb
and
ret
lods
cwtl
gs
sub
dec
jge
adc
cli
sbb
stos
push
push
cld
das
mov
outsb
insl
xor
adc
cmp
fisubrs
add
cwtl
inc
btc
shrl
pop
flds
rcl
into
xchg
aas
mov
sub
inc
pop
push
xchg
dec
mov
and
adcl
rcll
fistpl
clc
movsb
dec
mov
sbb
shl
pop
add
out
int3
fs
or
arpl
movsb
cmpsb
pop
stc
nop
sub
or
mov
xchg
repz
xchg
mov
cmp
mov
jns
sahf
push
add
sub
jle
nop
adc
sbb
out
shrb
mov
inc
decb
and
xchg
dec
adc
jns
jmp
add
aas
adcb
mov
xchg
cmp
inc
imul
push
insl
fbld
icebp
or
mov
lahf
lds
inc
stc
ss
pop
mov
shrl
nop
xor
ja
lcall
fdiv
js
xlat
enter
adc
mov
pop
insl
sbb
leave
sbb
xor
shrl
push
push
or
lret
push
cmp
sub
lods
int3
cmp
jne
cmp
idivl
pop
addr16
add
add
imul
and
jmp
xchg
pushf
xor
dec
sbb
cmpsb
mov
lea
aaa
xchg
push
test
mov
pop
cwtl
add
ds
in
std
mov
push
lds
push
imul
mov
mov
jl
push
push
lea
mov
pop
add
add
cmp
adc
mov
leave
pop
pushf
jp
rorl
sbb
mov
lahf
mov
sti
adc
je
dec
mov
cmc
inc
pop
push
call
cs
inc
repz
push
jl
scas
loop
outsb
and
loope
ss
mov
shll
fsubs
lret
call
imul
dec
lahf
das
mov
xor
shlb
loopne
mov
mov
pop
inc
imul
js
fdivrl
adc
push
pop
outsb
jle
adc
push
lods
add
into
sahf
xchg
mov
lock
loop
fldt
ret
loope
jne
cmp
in
sbb
and
es
jb
jp
leave
test
push
inc
rclb
ja
cs
hlt
mov
or
pop
in
insl
fwait
in
or
sbb
xchg
sbb
lods
lcall
and
add
add
cmp
test
aad
out
test
aaa
insb
inc
les
dec
test
sub
lock
and
mov
imul
xchg
add
cmpsl
push
or
cmp
jp
pop
in
test
sub
sbb
bound
add
inc
test
xor
cli
mov
mov
fidivl
mov
insb
lcall
xchg
dec
dec
or
stc
mov
lret
pop
xchg
ja
sarl
mov
jge
pop
popf
inc
loope
fnstenv
xchg
inc
dec
lret
ret
add
pop
and
push
shl
popf
or
mov
cwtl
lret
inc
arpl
mov
xchg
lcall
fmulp
push
lret
js
mov
xor
sbb
jnp
add
ret
in
ja
addl
popa
sbb
lcall
and
mov
push
jg
mov
add
test
aam
or
mov
popa
push
push
loope
into
mov
xchg
movsb
fidivrs
xchg
std
pop
and
call
sub
test
push
outsb
je
add
lret
stc
das
test
lods
xchg
fidivrl
insl
cmp
test
hlt
dec
rolb
leave
imul
mov
jecxz
inc
mov
lcall
sub
pop
dec
sahf
jmp
cs
shl
sub
insb
lea
adc
mov
pop
sub
cmp
sbb
xor
lods
xlat
nop
test
push
test
aaa
lcall
xchg
lods
push
xlat
push
push
ret
cmpsl
pop
sub
xchg
and
sub
in
hlt
jae
ret
jno
adc
pop
cld
mov
fwait
rcrb
mov
lahf
xchg
movsl
adc
data16
aaa
nop
adc
stos
mov
sbb
jecxz
shll
fucomp
mov
mull
pop
shrb
lock
cmp
cmp
sub
loope
cli
nop
inc
dec
outsl
fstpl
xchg
and
dec
mov
xor
xchg
push
and
or
je
xchg
mov
sbb
outsl
sbb
aaa
push
sub
lods
mov
mov
lret
jge
push
xor
scas
repz
xchg
int3
fsub
pop
cmp
or
sahf
std
mov
jp
es
mov
in
pop
sbb
mov
imul
sbb
ja
out
in
popa
mov
sbb
or
insl
icebp
xorl
pop
pop
popa
or
les
mov
outsb
aaa
dec
in
pop
mov
fwait
mov
cmp
imul
test
sti
add
popa
repnz
stos
mov
add
mov
stc
cmc
std
sub
push
push
jp
movsb
loop
cmp
loop
out
loope
mov
dec
xchg
stos
pushf
mov
imul
mov
hlt
dec
pop
mov
or
dec
sub
aaa
ret
cmp
xor
dec
xlat
stos
insb
and
cmc
frstor
and
pop
lock
insl
adc
js
push
sarb
test
cmp
loope
lcall
ja
pop
cltd
mov
sub
jno
push
mov
jp
out
jnp
adc
cmpsl
cmpsl
and
push
sub
ljmp
ficomps
arpl
cmp
inc
pop
aam
lds
cld
add
call
adc
and
lods
imul
gs
enter
cli
and
sub
push
push
int3
push
mov
clc
adc
xchg
or
pop
into
je
or
sbb
add
testl
out
dec
push
je
cmp
inc
lcall
das
jae
mov
out
nop
sbb
xor
movsb
sub
sahf
out
push
and
popa
iret
inc
iret
and
add
in
popf
jp
inc
inc
jne
lods
add
add
sbb
mov
lret
lahf
mov
out
add
pop
mov
out
jle
jae
xor
mov
xor
nop
je
lods
insb
sub
mov
cmp
sbb
xchg
hlt
mov
lods
pop
cmp
and
dec
jl
pop
loopne
out
lret
jle
out
pop
jg
pop
fstps
ds
or
push
jle
push
ja
lock
sub
test
ja
fwait
and
fldenv
jbe
int3
repnz
mov
test
lret
and
mov
test
mov
fildll
jge
xchg
ljmp
dec
push
cli
daa
fdivrl
pop
push
nop
gs
dec
inc
sbb
dec
add
lods
pop
aas
les
lds
xchg
popa
in
mov
testl
push
mov
lret
out
in
jge
mov
push
pop
lds
inc
mov
mov
ret
sbb
lods
sbb
mov
neg
push
repnz
testl
pop
adc
test
and
add
mov
add
mov
sahf
cmp
xor
inc
adc
xor
rclb
daa
cmp
sub
es
sub
push
out
enter
mov
mov
test
and
cld
in
out
lds
fdivl
cvtpi2ps
std
hlt
fs
pop
pop
cmp
lcall
add
aad
sbb
sub
sbb
cmp
stc
cmpsb
push
dec
in
insb
sub
sahf
fstps
xchg
fwait
lcall
push
fdivrl
jp
jns
add
dec
insl
scas
cmp
das
sub
sub
repnz
push
and
xlat
popf
lods
aad
xchg
add
mov
lock
in
mov
mov
insl
fbld
adc
mov
test
sub
ja
sub
inc
or
lds
popa
repnz
push
dec
mov
push
jb
inc
mov
out
inc
std
sarb
pop
jbe
mov
push
add
in
addps
lcall
cmpsl
mov
cld
sbb
frstor
mov
roll
xchg
jg
mov
sti
adc
ds
sbbb
loope
sbb
int3
sahf
xchg
jbe
pop
mov
adcb
pusha
xor
and
sub
inc
xor
sbb
dec
insb
xchg
xor
inc
adc
sub
stos
cwtl
cmp
inc
jl
jge
dec
fnstcw
push
data16
xchg
mov
push
cli
bound
in
jg
movsl
mov
pop
rolb
mov
aam
in
lods
out
aam
dec
push
adc
pusha
scas
dec
popa
mov
push
adc
cmp
dec
adcb
fdivs
mov
and
jae
andl
ficoms
ja
js
mov
pushw
maskmovq
idivl
cld
xor
xchg
es
data16
dec
xchg
xor
xor
and
inc
lods
or
sahf
fnstcw
insl
divl
push
leave
out
lods
jne
mov
mov
pusha
bound
or
rcr
inc
cld
imul
pop
subb
xlat
inc
xchg
cltd
sbb
dec
lahf
jp
in
inc
mov
and
enter
inc
push
mov
jb
and
push
cmpsl
imul
aam
jbe
cmp
adc
stos
and
jae
in
lret
lret
mov
ljmp
mov
push
and
in
arpl
movsl
rcll
cmp
sbb
into
xchg
imul
dec
mov
dec
adc
mov
fcom
push
rcrb
outsl
sbb
fnstcw
call
clc
insl
movl
sub
insb
in
mov
sbb
inc
xlat
cmp
pop
and
inc
pop
ja
iret
cmpsl
sbb
out
sbb
sti
lret
add
and
xor
inc
fdivs
je
push
ror
insl
lret
adc
jl
ja
sbb
add
and
mov
mov
dec
cmp
fadds
xor
frstor
insl
inc
mov
lcall
xor
mov
pop
out
test
lret
adc
xchg
sti
dec
mov
push
xor
sbb
xchg
adc
les
xor
test
test
adc
je
adc
xchg
and
pop
mov
or
jp
js
add
cmp
xor
or
pop
rcll
jne
nop
in
push
xchg
mov
jne
mov
dec
sbb
xchg
jae
add
pop
push
pop
ret
filds
cmpsb
shrl
leave
mov
popf
mov
pop
push
jo
mov
mov
jne
add
jns
cli
jo
mov
movsl
xor
ss
push
cmp
pop
jp
out
adc
shr
cwtl
roll
push
insb
dec
fldl
addr16
xchg
pop
cld
shll
enter
cmc
std
test
add
push
mov
or
jmp
sub
pop
loop
aaa
or
xor
out
add
lcall
dec
sub
pop
inc
in
inc
adc
inc
clc
scas
xchg
and
std
jb
add
pop
inc
popf
pop
sbb
jge
jae
cwtl
dec
cmpsl
cli
fistpll
and
mov
test
jl
mov
mov
nop
push
fisubs
movsb
push
push
out
imul
scas
movsl
sbb
jg
fs
pop
xchg
mov
dec
dec
clc
mov
cmp
add
scas
sub
sti
add
inc
jecxz
outsb
inc
and
jno
ucomiss
cmp
xor
xchg
add
cmp
ret
mov
add
push
push
aam
pushl
data16
jl
push
enter
pop
sti
jle
mov
popf
jmp
dec
mov
inc
xchg
mov
and
out
sarb
adc
call
and
add
inc
dec
out
add
adc
sub
cld
pop
sbb
rolb
pop
push
or
inc
leave
clc
cmp
mov
adc
js
aaa
xchg
mov
ficompl
push
loop
mov
jno
cmp
jo
pushf
add
sub
or
jb
cmp
xchg
sub
mov
mov
inc
fwait
scas
bound
ja
sbb
daa
cmp
outsb
mov
cmpsl
adc
xor
lods
and
icebp
mov
insb
sbb
mov
leave
inc
insl
xor
pop
cmp
addb
mov
enter
xlat
push
dec
stos
xchg
or
out
mov
xchg
sub
pop
lcall
and
dec
mov
lret
sti
nop
std
mov
sbbb
or
lret
rorl
sbb
dec
dec
push
ds
adc
cs
add
sub
ret
iret
add
push
and
mov
test
loopne
data16
push
pop
inc
pop
pop
hlt
ds
in
xchg
dec
push
dec
loope
adc
loopne
mov
out
mov
mov
inc
push
leave
mov
sub
test
cmpsb
and
cmp
jle
pop
jp
loop
pop
inc
dec
js
jg
in
mov
pop
lea
mull
movsb
xchg
stc
add
repnz
mov
out
xor
call
fistl
lcall
iret
loope
or
xchg
lahf
and
in
cmpsl
rorb
orl
push
jnp
inc
movsb
pop
mov
add
stc
and
push
mov
cmc
xor
aas
mov
and
push
mov
fisttpll
fcomp
xchg
scas
pop
popf
adc
adc
and
mov
sub
cmp
inc
xor
daa
repz
outsb
push
inc
xor
das
aaa
jb
xchg
lods
mov
movsl
lods
or
inc
dec
sbb
lahf
dec
mov
or
mov
in
xchg
sbb
pop
fwait
scas
pusha
adc
inc
xor
imul
lahf
inc
push
mov
push
in
jns
jl
mov
inc
xor
xor
mov
stos
jbe
dec
sbb
test
jno
mov
cmc
enter
jmp
xor
mov
fisttpll
loop
xor
stc
cmc
inc
mov
lret
xor
push
cmpsl
fmull
mov
bound
std
enter
aaa
arpl
cltd
mov
cwtl
ficoml
mov
dec
push
cmp
or
push
out
sub
scas
push
int3
cmp
xor
sbb
mov
ja
mov
lea
dec
pop
les
mov
iret
push
dec
pop
jns
fstpl
stc
xor
adc
lds
xor
push
bound
movsl
dec
ficompl
dec
or
cwtl
xor
jmp
xor
mov
xchg
jae
mov
aas
or
mov
xchg
rcll
movsb
aad
sahf
push
pop
test
and
push
adc
mov
pop
cmpsl
xchg
cmp
mov
fwait
ret
flds
outsl
iret
lock
jno
outsl
xor
cmp
test
fnstcw
inc
sub
xchg
ljmp
mov
rcrb
mov
sbb
sub
stc
pop
xor
aam
fiaddl
cli
cwtl
test
les
cmp
lret
inc
sub
movsl
into
push
and
orb
cli
mov
xor
add
pushf
outsl
pop
or
mov
jle
mov
pop
adc
nop
jo
outsb
lahf
rolb
popa
jmp
iret
pop
imul
jbe
cmp
cmp
stos
rcr
hlt
outsb
icebp
pop
sub
cs
cmp
popa
fsubrl
dec
jnp
test
fs
fwait
jne
addps
mov
in
shlb
dec
mov
inc
push
dec
notb
movsl
sbb
sub
icebp
mov
aaa
jge
in
dec
cltd
or
in
bnd
adc
mov
push
andnps
mov
dec
xor
in
lods
pop
and
mov
or
and
mov
nop
pop
stos
loopne
adc
scas
shll
leave
or
add
pop
mov
mov
adc
out
push
push
lret
jl
sbb
jp
mov
jbe
xchg
in
push
push
sub
dec
aaa
inc
sub
aaa
mov
mov
into
test
xchg
mov
aad
hlt
jg
pop
loopne
out
xlat
sahf
scas
mov
inc
dec
cltd
sti
xor
les
cli
pop
push
xchg
xor
movl
aas
in
enter
mov
les
ret
adc
loope
adc
loopne
ss
cwtl
lock
ljmp
inc
mov
xchg
xchg
pop
mov
adc
test
adc
xchg
cld
lock
adc
xchg
mov
adc
ds
mov
pop
mov
jns
adc
fildll
jo
gs
adc
push
jns
pop
sbb
jns
jp
push
mov
fmull
cmp
mov
sub
push
or
push
xchg
adc
xor
icebp
pop
pop
jo
jb
add
ljmp
and
lods
inc
mov
xor
jno
repz
fisttps
push
pusha
push
xor
leave
lea
and
inc
jno
push
out
mov
les
into
mov
les
addr16
outsb
cmp
add
mov
push
mov
or
xchg
mov
sub
mov
pop
sbb
jle
push
icebp
sbb
dec
roll
daa
jbe
fldl
lahf
mov
jecxz
xchg
adcl
cmp
shlb
cmp
xor
pop
cmc
adc
imul
mov
ss
pop
sub
cmp
in
cmp
cli
xchg
or
pushf
sbb
daa
movsb
scas
sbb
sbb
fst
ja
out
mov
cmp
addl
pop
or
jl
add
xchg
jb
inc
jns
adc
std
ja
rorb
jmp
jb
rcrl
enter
out
lcall
pop
sarb
aas
hlt
pop
fadd
fs
pop
arpl
pop
cmp
fdivrp
mov
repz
scas
sub
mov
mov
les
sub
loop
xor
mov
stos
sub
test
xchg
scas
jecxz
and
dec
ljmp
insl
jle
fildl
idivb
dec
les
stos
mov
repnz
mov
lock
std
mov
lods
popf
fcmove
pop
push
fsubs
mov
jne
adc
mov
dec
push
into
cmp
mov
leave
dec
movsb
push
test
icebp
xor
sti
mov
addb
sbb
sbb
pop
push
mov
jmp
inc
lahf
scas
jmp
stos
aas
test
xor
pop
out
out
fsubs
getsec
inc
mov
scas
repnz
aas
jne
pushf
xchg
mov
call
or
push
add
jbe
pop
fmul
shlb
pop
hlt
lds
cmp
fsubs
out
adc
adc
mov
movsb
xchg
loop
mov
repnz
push
xor
dec
je
std
add
cmp
ret
push
jb
movsl
bound
loope
scas
dec
add
sub
and
and
xor
jb
popf
stc
adc
repnz
xor
aad
jb
enter
sbb
cmp
xchg
in
pop
pop
movsl
popa
sub
jg
dec
pop
inc
sbb
push
xchg
mov
cmp
mov
adc
add
fstpt
jecxz
mov
frstor
add
xchg
mov
mov
aad
sub
imul
cmp
push
adc
sbb
cltd
cmpl
cmp
movsl
daa
test
je
std
cmp
xchg
or
adc
add
cmp
ret
sub
subl
add
cmp
push
or
xor
mov
mov
lods
and
lret
in
sub
sub
mov
mov
jbe
sub
or
mov
clc
addl
cli
cmp
dec
cli
popf
insb
jmp
push
push
xor
push
push
push
push
cld
push
enter
stos
ret
les
fsubl
or
push
popf
cmp
push
mov
ljmp
test
ds
rdtsc
inc
pushl
mov
aam
addr16
mov
pusha
jmp
rcrb
and
mov
dec
dec
sbb
lea
out
es
pop
jns
mov
outsl
mov
mov
xchg
ffreep
push
in
daa
rclb
das
inc
pop
inc
mov
mov
dec
data16
popa
mov
loope
pop
inc
cltd
push
outsl
fstpt
and
mov
hlt
ja
fcomp
sub
inc
adc
xor
sbb
and
pop
fcom
imul
mov
fs
xchg
lods
scas
mov
mov
pop
cmp
and
sub
mov
fldln2
mov
pushl
adc
inc
xor
clc
lock
inc
xchg
push
sub
int3
push
dec
mov
dec
test
stc
pop
xchg
incl
daa
adc
xchg
testl
push
mov
add
inc
and
xchg
or
push
push
mov
mov
pop
inc
loop
shll
lea
fs
ljmp
outsl
insl
add
loope
out
inc
mov
arpl
mov
mov
and
jns
lcall
rcrl
fadd
int
fwait
int3
and
add
jnp
rcrb
je
sub
jl
cwtl
add
sub
ret
movsl
inc
imul
sub
add
mov
mov
xchg
scas
mov
int
negl
xorw
idivl
dec
popf
mov
xlat
mov
cli
xchg
test
mov
sbb
repz
mov
cmc
cmc
insl
and
rcrl
enter
inc
inc
pusha
mov
pop
scas
mov
shrl
in
jl
clc
repz
or
and
loop
or
mov
mov
jge
mov
int
mov
xchg
push
jecxz
push
add
nop
shrl
and
iret
clc
sub
xchg
xor
fcoms
test
cmpsb
sbb
sub
jmp
mov
jbe
add
xor
jmp
fld
jmp
icebp
ljmp
daa
loopne
fs
and
scas
imul
xchg
dec
ret
insl
mov
lret
jle
test
dec
pop
in
push
idivl
adc
jnp
jp
dec
push
adc
mov
ljmp
rolb
mov
or
adc
orl
xchg
and
jnp
sbb
cwtl
sub
leave
repnz
mov
mov
filds
mov
xchg
test
jno
mov
test
lock
adc
sbb
jg
outsb
sbb
out
ret
arpl
lock
sub
jp
jge
lock
lods
add
sbbb
sub
ljmp
add
or
mov
vpcomw
sbb
gs
dec
xor
xchg
fldt
sub
mov
adc
sahf
nop
das
sbb
mov
icebp
inc
mov
call
add
stc
xor
sbbl
cmp
iret
fistps
sbb
rcrl
fisttpll
lret
sbb
movl
in
mov
mov
sarb
mov
leave
jmp
sub
lds
mov
jle
push
jg
cmp
pop
adc
filds
xor
int
enter
cmp
jo
mov
outsl
hlt
or
jae
add
ljmp
cltd
fisttpll
out
mov
mov
dec
pop
movsb
sub
xor
push
mov
lds
sti
mov
test
movsb
lret
hlt
xchg
addb
imul
loope
and
dec
cs
aaa
les
push
mov
repz
mov
lcall
ds
pop
add
mov
add
sbb
fdivr
and
pop
adc
enter
add
jl
movsl
adc
cmp
mov
mov
add
daa
jo
icebp
nop
call
popf
xor
add
add
rolb
mov
cmp
or
mov
sbb
lock
mov
cwtl
inc
sarb
cwtl
mov
ja
push
and
ss
inc
ljmp
lret
cmp
mov
inc
and
insb
in
mov
scas
fistpll
push
loopne
loopne
and
or
stos
iret
jnp
in
dec
xchg
das
stc
int3
loope
xchg
cmp
xchg
lret
subl
dec
out
or
out
mov
out
pushf
dec
iret
insl
dec
fidivs
cli
sub
or
cmp
fmull
mov
or
inc
lods
rcrl
cmc
test
lcallw
cmp
or
int3
pusha
sahf
jbe
push
xor
xor
lret
call
dec
out
inc
fldcw
pop
lret
aaa
mov
movsl
mov
sbb
ret
xchg
adc
mov
pop
fsts
cmp
jp
pop
push
adc
adc
adc
jnp
cmp
cs
pop
push
mov
loop
outsb
xchg
call
nop
outsb
cmp
fldenv
adc
imull
fwait
nop
daa
into
lret
and
jo
aaa
mov
dec
pop
jnp
push
jae
mov
xchg
cmp
imul
and
stc
test
mov
pop
push
leave
sbb
xrelease
pusha
sti
xor
inc
pop
xchg
push
jo
jns
cmc
fsubl
scas
insb
add
fimull
xchg
mov
inc
or
imul
mov
mov
push
sti
add
fisubrl
mov
push
dec
cs
adc
hlt
pushl
push
xchg
shll
and
push
aam
lcall
mov
dec
jns
mov
xor
jmp
mov
mov
daa
dec
jnp
aad
jge
lret
fsincos
int
push
cmp
cld
mov
in
js
push
in
dec
lods
mov
lcall
lret
adc
lahf
shll
and
cli
out
xchg
icebp
sbb
stc
jno
pop
jb
mov
mov
xchg
insl
dec
mov
popa
pop
jne
loop
xlat
shl
pusha
jmp
or
sahf
sbb
cmp
fcom
inc
rol
jo
lods
pop
push
inc
fldcw
mov
mov
push
fsubrp
inc
iret
inc
sub
xchg
jnp
jae
in
sbb
mov
shl
pop
add
push
push
roll
cmpsb
sub
mov
test
mov
ja
push
xor
mov
xor
push
scas
test
repnz
fisubrs
adc
or
mov
arpl
sbb
and
sub
add
sbb
aaa
in
adc
and
sbb
xchg
in
in
pusha
pushl
in
es
pop
jne
or
cmp
fmuls
data16
pop
add
fwait
sbb
add
push
adc
stos
in
pop
mov
insb
cvtps2pi
sahf
lcall
inc
divl
sar
test
jae
xor
cmp
shrl
adc
aaa
popf
pop
out
dec
movsl
imul
sbb
jecxz
mov
in
pop
movsb
mov
movsl
or
mov
mov
cs
push
daa
icebp
testl
aad
mov
test
mov
in
sub
jae
cmp
out
mov
jo
fmuls
mov
arpl
test
xchg
push
cmp
mov
xchg
adc
daa
xlat
jle
add
movl
jmp
mov
mov
xor
hlt
iret
shll
outsb
icebp
das
jle
jo
outsl
dec
outsl
fisubl
and
ret
push
filds
sub
jne
test
dec
pop
popf
scas
cmpsb
frstor
mov
dec
in
sub
test
aam
add
out
stos
mov
jbe
rcrb
push
cmpsb
cmpsl
mov
roll
stc
in
sahf
adc
je
inc
sti
ljmp
xchg
and
lcall
movb
inc
mov
aaa
sti
cmp
adc
mov
std
push
aad
test
xchg
lret
adc
or
rclb
jp
xor
lods
aad
mov
adc
out
lods
dec
pop
and
pop
cmp
scas
adc
jb
scas
dec
arpl
sti
adc
lods
popa
xchg
lods
mov
cmp
mov
aam
or
out
addb
lods
scas
out
push
in
dec
pop
xchg
pusha
aaa
or
dec
sbb
add
add
fistpll
ror
mov
xchg
push
adc
and
imul
adc
dec
adc
adc
push
je
adc
or
xchg
sbb
call
inc
add
inc
jo
aam
mov
es
imul
push
das
xchg
aaa
cmp
cmp
xor
push
push
lods
inc
les
cld
add
out
scas
arpl
hlt
sub
call
jno
xchg
mov
out
into
dec
imul
fsts
stos
or
jg
push
or
adc
xchg
aaa
lret
jbe
fidivrs
hlt
lret
xchg
and
lret
in
gs
mov
xchg
out
je
or
in
loop
movsb
out
pop
adc
mov
out
sahf
push
ljmp
fs
scas
push
xchg
in
decb
fmul
and
aam
insb
xor
out
cmpsl
and
push
xor
decb
bound
jb
push
inc
outsl
xor
adc
cmp
outsb
bound
popa
push
ret
jmp
and
je
mov
das
xchg
sbb
mov
sub
addl
xchg
jne
xor
ret
cmp
cli
mov
and
test
jo
in
cmp
stc
jge
pop
mov
in
lods
negl
cmp
shll
ljmp
or
jnp
ja
xor
add
add
mov
mulss
jb
ja
or
push
dec
shrb
lret
cmp
add
adc
xchg
xchg
pop
pop
in
mov
imul
mov
push
aaa
gs
imul
fdivl
and
jne
int3
mov
sbb
jae
jmp
insb
scas
mov
ret
jb
pusha
sbb
inc
pop
sti
mov
fcomip
es
cltd
and
dec
cmpl
out
mov
imul
call
daa
pop
not
je
mov
lods
xor
jmp
push
or
out
in
jae
in
es
lods
jmp
je
or
pushf
cli
inc
cmpsb
mov
jb
sub
cmpsl
fisubl
lcall
and
negb
jmp
cli
inc
xchg
movb
pop
in
arpl
aad
movsl
push
popa
jmp
or
jo
inc
xor
leave
scas
jmp
cmp
mov
and
out
in
xchg
popa
and
jns
push
inc
mov
jae
roll
xor
gs
aam
je
popf
fdivrs
sub
or
daa
outsl
lock
mov
sub
sahf
dec
mov
push
jg
adc
pusha
mov
mov
push
lock
test
mov
jmp
cli
in
cmpsl
in
mov
lds
sbb
nop
cmp
ret
mov
je
enter
mov
fwait
mov
jne
adc
mov
aas
mov
aam
mov
out
leave
dec
mov
rol
lock
jmp
loopne
sbb
lcall
mov
lahf
jle
cmp
push
in
out
ljmp
xchg
insb
mov
ror
ja
dec
dec
add
dec
loop
push
adc
xchg
fstpt
sbb
imul
dec
adc
xchg
mov
js
lea
jl
cltd
scas
push
int
lods
inc
inc
mov
mov
push
jge
insb
lock
scas
xchg
jg
shlb
in
xchg
cmp
inc
mov
jno
inc
jecxz
and
jg
mov
pop
mov
in
mov
das
mov
and
shll
in
in
fcmovnbe
add
test
mov
adc
or
in
cmpsl
out
xchg
jmp
inc
rcrl
fnstsw
jmp
bts
rol
jnp
fnstsw
sbbb
in
cmpsb
ljmp
or
add
roll
in
sub
mov
std
inc
mov
out
mov
sbb
sbb
push
gs
push
and
mov
loope
cmc
iret
adc
faddl
into
into
repz
mov
dec
es
pop
ljmp
aas
pop
lock
outsb
arpl
pop
push
pop
pop
cmp
in
sti
xor
jo
scas
nop
xchg
add
push
and
jge
cmpsb
adc
and
outsb
iret
jl
mov
pop
pop
or
cvtps2pd
sub
xchg
fnsave
bound
pop
xchg
or
sbb
pusha
dec
sbb
mov
cli
ficomps
cmp
mov
cmp
jo
sahf
xchg
lret
inc
xchg
cmp
js
adc
movsl
or
sub
aam
jl
movsl
adcb
mov
mov
arpl
cltd
push
mov
jno
xchg
sub
lods
fstps
jb
jmp
in
scas
cmp
ds
ljmp
push
jge
pop
cld
and
loop
xchg
sub
pop
mov
cltd
stos
dec
push
dec
push
xor
inc
test
sbb
imul
daa
mov
xchg
fistpl
in
pop
add
xor
push
adc
fdivs
out
in
or
xor
loop
dec
test
xchg
adc
lock
inc
movsl
xchg
stos
out
sub
gs
ror
xlat
rcl
inc
mov
inc
jmp
in
ja
inc
stos
or
popf
push
sbb
out
adc
addb
clc
sub
jmp
xor
and
fnstenv
cmp
push
push
sti
lret
lret
sbb
and
aam
and
and
mov
dec
jne
shlb
test
cmpl
movsl
mov
dec
push
xchg
and
out
cs
adc
sbb
sbb
bound
jmp
and
and
imul
repnz
or
jo
xor
mov
pop
cmp
ret
or
inc
mov
leave
into
loope
pop
inc
adc
push
add
push
jae
xchg
cwtl
sbb
xor
ja
add
in
in
lcall
mov
cltd
or
cmpsb
imul
adc
jae
aad
xor
cmp
mov
dec
adc
inc
mov
mov
sbb
aas
push
fs
cmpsb
lock
mov
sahf
pop
lret
mov
cmc
mov
dec
je
daa
and
jbe
add
push
cmp
hlt
cwtl
or
stos
divl
cs
mov
add
popf
fwait
lds
in
data16
sbb
cli
ret
imul
hlt
lock
or
rep
xor
inc
inc
test
dec
cmp
push
imul
push
mov
pop
mov
ret
sbb
rcll
mov
xchg
jbe
pop
push
inc
call
les
fimull
loope
out
call
sbbl
xor
mov
adc
in
dec
das
popa
cmp
arpl
insb
cmpsl
test
cs
inc
mov
or
arpl
in
jmp
adc
inc
jmp
push
or
addl
icebp
xor
adc
push
test
push
rclb
cmp
daa
push
dec
testb
fiadds
jno
aas
movsl
sbb
nop
fildl
push
push
push
mov
clc
subb
sub
xor
xor
mov
add
mov
in
out
pop
cmp
jo
enterw
ficoml
push
clc
fldt
cmp
cmp
cmpsl
les
xchg
sub
push
lret
call
jae
dec
cmpsl
push
lea
inc
mov
inc
dec
lock
xchg
mov
js
jp
jg
imul
dec
xor
cmpb
enter
adc
jecxz
fs
inc
cwtl
and
outsb
lods
int
add
pop
xor
fsubl
std
sbb
and
or
dec
pusha
jl
lahf
dec
mov
aam
mov
mov
jge
mov
loop
pop
or
inc
sbb
dec
in
aas
loope
insl
shrb
negl
fisttps
repz
les
into
cmp
rorb
das
les
addr16
data16
js
xor
subb
andl
jns
cmp
dec
shll
pop
insl
or
movsb
push
dec
shll
data16
lret
ficomps
cmp
shr
sbb
sub
mov
jmp
lret
repnz
insl
dec
fsubs
sbb
loopne
fwait
cmc
inc
stos
in
cmp
lea
cld
push
dec
or
cmc
ja
je
push
lods
jne
pop
loop
gs
push
pop
pop
pop
dec
fsts
lcall
lock
cltd
push
insb
or
ret
outsl
sbb
adc
fsts
or
add
in
mov
gs
jo
sbb
in
xor
movsb
test
sub
aad
xor
inc
fstl
lret
add
out
cmp
scas
xchg
jl
xchg
xchg
lods
stc
imul
sub
es
push
sub
outsb
es
dec
lds
mov
cli
mov
lods
jg
xchg
sub
scas
ljmp
cli
xchg
cld
dec
xor
bound
ljmp
add
aaa
or
in
stos
fs
jbe
into
fbld
push
push
imul
jbe
cmp
inc
sub
jb
mov
mov
shrl
fsubs
xchg
sti
push
xchg
std
int
jae
cmp
push
jne
jo,pt
push
or
add
mov
lcall
xor
in
out
mov
add
inc
iret
pop
movsl
nop
mov
sbb
lods
mov
lea
pusha
ret
and
loopne
stos
lods
mov
arpl
ljmp
xchg
rcl
xchg
add
inc
cmp
add
cs
inc
cltd
dec
out
and
push
push
repnz
cmp
daa
dec
js
das
pop
inc
insl
sub
movsl
xchg
shll
push
mov
jge
sub
inc
lods
lds
je
xchg
and
das
push
sbb
aas
mov
mov
xor
or
ljmp
sbb
xchg
test
push
imulb
outsl
and
loope
out
ds
lcall
bnd
imul
mov
mov
rcrl
mov
inc
xchg
insl
sbb
jnp
hlt
xchg
jmp
cltd
js
pop
cmpsl
push
out
es
sti
int3
mov
pop
push
lock
ret
sbbb
mov
inc
call
rorl
testl
ds
aad
addr16
aad
stos
inc
push
inc
mov
inc
jecxz
leave
and
shl
in
rclb
inc
lret
test
push
cmpsb
adc
inc
fdivrs
nop
out
mov
sti
ds
fsubr
jmp
push
jl
sahf
js
int3
sbb
sub
or
sbb
or
es
pop
mov
add
fildl
iret
cltd
cmp
add
sbb
jl
cmpsb
int
xchg
sbb
notl
fstl
mov
push
xor
dec
mov
frstor
push
test
lcall
mov
ret
xchg
push
repnz
mov
ficoml
xor
push
cmpsb
loop
jno
mov
dec
ret
mov
inc
sub
mov
lods
or
int3
and
cmp
fcmovb
adc
lahf
pcmpgtb
lcall
jmp
cmp
lea
mov
faddl
push
add
xor
jecxz
rcrl
fcompl
loope
jp
lcall
mov
daa
dec
push
stos
enter
add
push
xor
cltd
fstps
mov
stos
add
scas
lea
lcall
stc
movb
jle
inc
mov
mov
orps
test
int3
mov
and
and
xchg
pop
mov
and
mov
pop
inc
les
xor
xchg
adcb
pop
cmp
daa
fbstp
jnp
xor
xchg
inc
xor
cmpsb
dec
cmp
shrb
dec
jle
insb
jp
testb
imul
push
jo
cmpsl
jmp
shl
icebp
sahf
pop
inc
and
aas
mov
pushf
loop
bound
inc
jp
pop
jle
mov
bound
jo
sbbl
movsb
add
lods
cmc
incb
and
mov
adc
pop
and
dec
mov
pop
jbe
xchg
push
push
insb
mov
mov
mov
sub
adc
cmpxchg8b
int
inc
cwtl
xchg
jmp
imul
add
dec
addl
jp
pop
jge
out
lds
stc
rcll
stos
lea
jno
mov
xor
mov
rolb
mov
rclb
sar
inc
jno
mov
shl
inc
aad
int
dec
sub
sbb
arpl
mov
fbstp
sbb
popa
add
ret
or
loopne
bound
jne
bound
inc
mov
cs
lea
push
shll
into
add
cltd
mov
inc
or
push
test
push
jg
stos
mov
outsl
jne
push
adc
cwtl
or
jne
lcall
cmp
aas
mov
add
push
ljmp
push
xchg
icebp
stc
jmp
sub
xchg
push
mov
out
filds
add
cmp
aaa
pusha
mov
adc
push
xchg
mov
leave
push
xor
ja
push
pusha
pop
leave
cmpsb
sub
mov
pop
ja
out
cltd
pusha
add
dec
mov
push
jbe
je
dec
scas
adc
lds
and
scas
xor
mov
hlt
outsb
sub
jnp
jl
add
inc
jg
ljmp
in
xor
negl
push
jecxz
or
mov
es
jg
int3
xchg
xlat
lea
xlat
xor
rorl
cmp
pop
pop
gs
insl
jbe
xor
jns
pop
addr16
adc
push
jge
fs
or
aas
fiaddl
mov
outsb
pop
fdivr
jecxz
pop
or
jg
add
xlat
mov
mov
movsl
fwait
pop
das
btcl
jbe
repz
les
inc
pop
movsl
imul
leave
imul
push
push
orb
loop
add
xchg
push
cli
inc
test
push
push
cmp
cmovns
fcom
ljmp
shl
movsl
mov
mov
hlt
ss
push
lock
mov
in
or
sub
adc
loop
jne
mov
push
jb
mov
sub
or
adc
add
fistps
pop
test
ds
lods
and
mov
push
dec
xor
mov
dec
imul
rcrl
lock
sbb
sbb
jno
iret
pshufw
mov
xor
repz
dec
pop
jb
mov
adc
add
mov
jecxz
lret
imul
xchg
cld
inc
pop
inc
push
fld
fdivs
icebp
cli
sbb
mull
cmpsb
dec
aad
insb
dec
dec
adc
iret
lret
nop
jmp
imul
cmp
sub
push
add
or
xchg
insl
adc
les
addr16
repz
neg
dec
out
inc
mov
fildl
xchg
mov
in
push
daa
int
dec
insb
sahf
pop
popa
movsb
jo
decb
std
fisubl
sbb
testl
mov
inc
cmp
inc
push
mov
ffreep
jnp
push
sbb
mov
mulb
jno
mov
jo
push
loope
test
pop
enter
dec
jge,pt
mov
movsb
jmp
sbb
call
ret
ljmp
divb
fs
mov
sub
sbb
jnp
cmpsl
inc
adc
gs
out
filds
ret
pop
adc
xchg
push
inc
adc
lea
test
jl
inc
pop
add
sub
hlt
jne
jb
mov
adcb
add
adc
imul
jae
ljmp
pushf
mov
jns
jnp
fists
in
or
std
leave
in
fs
xchg
fnstcw
ds
mov
idiv
sahf
lock
jnp
sub
aas
or
cs
mov
cmp
or
in
or
in
mov
inc
sbb
pop
xchg
ret
push
xchg
jmp
idiv
mov
mov
fsubl
jp
dec
adc
mov
sub
in
push
dec
sub
into
push
push
pop
sar
dec
mov
subl
cmp
xchg
cmpsl
stos
in
call
bound
insb
push
lods
dec
mov
xor
sub
insl
xchg
mov
lea
cmp
lods
inc
pop
scas
dec
test
mov
scas
mov
inc
push
pushf
xlat
lea
mov
mov
pop
push
and
stos
jecxz
pop
xor
into
jbe
pop
push
dec
xor
dec
ret
mov
leave
ss
pop
test
sub
int
cli
sbb
sbb
test
leave
inc
xabort
jge
cmp
and
xchg
mov
loopne
xchg
ljmp
mov
insb
stos
jne
addl
sbb
or
mov
gs
add
clc
mov
or
mov
jne
jge
mov
lahf
push
and
mov
addr16
mov
hlt
icebp
fst
cs
clc
imul
cli
into
jae
fiaddl
lods
jae
sbb
fistps
pop
into
adcb
push
or
or
pop
push
mov
xor
add
cld
xchg
sub
pop
pop
cmp
xor
push
ljmp
mov
adc
jb
cli
fsts
or
les
fwait
scas
bound
push
dec
int3
add
jo
dec
lds
cltd
subb
cltd
push
dec
daa
dec
imul
mov
movsl
dec
lcall
xchg
movsl
sbb
ret
jle
adc
cmp
mov
push
out
pop
push
cmp
mov
xchg
mov
lods
and
testl
lds
cmp
mov
fdivl
inc
push
add
xlat
mov
cmp
mov
lea
gs
push
adc
inc
mov
fisttps
and
clc
daa
jge
mov
mov
cmpsb
sbb
adc
cmc
xchg
leave
add
sub
pop
jl
ds
xchg
dec
adc
sbb
je
mov
fcmovnbe
mov
out
xchg
and
and
gs
or
jp
dec
mov
cmp
push
or
int
call
mov
xchg
inc
mov
repz
mov
loopne
push
cmp
add
sbb
and
xchg
mov
popa
cmp
add
xchg
dec
ljmp
cs
mov
push
cmp
inc
out
pop
adc
lea
and
cli
cli
popf
xor
mov
jb
scas
xchg
push
out
in
adc
jo
test
inc
fwait
mov
leave
dec
pop
inc
icebp
push
dec
fistl
xor
adc
xchg
jle
mov
lods
loopne
sbb
push
jp
pop
in
mov
push
je
push
push
fcomi
xchg
push
mov
xchg
int
inc
repz
pushl
iret
mov
push
stos
xchg
call
in
push
imul
out
mov
sbb
ret
fcoms
out
test
test
jmp
fmulp
push
mov
xchg
dec
jg
mov
mov
andl
mov
inc
add
neg
lret
cmpsl
adc
jno
or
es
sub
cmova
fwait
push
jne
int3
sub
cwtl
in
push
pop
lods
xor
fwait
stos
fnstenv
fs
push
repnz
mov
xor
mov
cmp
and
inc
mov
mov
xchg
push
add
fbld
popf
lds
dec
pop
cmp
add
jle
inc
cmp
pop
xchg
or
cmp
imul
fiaddl
adc
sahf
jg
jo
sahf
sahf
sbb
loope
or
loopne
sub
push
rcll
std
shrd
scas
idivl
mov
mov
push
inc
orl
pop
pop
push
mov
das
mov
and
xor
mov
dec
shrl
loope
fildl
into
out
orb
push
push
xchg
push
adc
pusha
push
out
sub
stc
lds
lods
outsl
cmp
lods
xor
mov
add
repz
repz
or
ds
add
and
aad
xor
orb
push
push
fsubs
je
std
inc
inc
adcl
ljmp
add
outsb
enter
aad
mov
lahf
movsb
mov
nop
les
sub
test
enter
xchg
push
push
lods
xchg
cmp
gs
outsl
add
jle
ja
aas
or
dec
stos
xlat
xlat
xor
mov
or
pop
mov
vmulpd
mov
push
insl
rorl
inc
xorl
in
arpl
or
aam
sarl
or
movsb
scas
popf
out
dec
push
pop
xchg
adc
push
xor
call
xchg
lods
insb
inc
sbb
leave
mov
mov
cmp
xchg
mov
jnp
aad
xor
add
dec
cmpsb
push
xchg
test
mov
orb
fwait
mov
sahf
pop
cmpsb
inc
test
cmp
mov
jp
lahf
movsl
xchg
in
xor
cli
dec
subb
mov
add
add
sub
rolb
and
inc
inc
sbb
inc
nop
mov
sbb
dec
out
ljmp
imul
and
jecxz
lea
int3
ret
loopne
loope
and
outsb
inc
jmp
jbe
pushf
jmp
stos
add
out
dec
les
shll
adc
outsl
leave
dec
popa
scas
in
inc
stos
dec
or
xor
xchg
xor
imul
cmp
mov
fildll
fstpl
adc
bnd
ret
or
lcall
mov
hlt
cli
das
aad
fistl
sarl
mov
test
imul
std
divps
pop
int3
test
std
daa
cmp
add
sahf
jp
sbb
sub
outsl
lcall
jmp
rcr
popa
mov
rcrl
inc
subl
int3
leave
inc
pop
xor
dec
orb
push
or
or
sub
adc
mov
lods
push
pop
adc
jl
adc
and
push
push
enter
mov
or
mov
ret
mov
incl
xor
xchg
dec
lods
jno
in
sbb
jo
aam
out
int3
dec
aas
call
popa
xlat
mov
pop
xchg
mov
mov
iret
mov
jg
leave
jns
repz
scas
mov
fisubrl
jbe
sub
sbb
mov
ficomps
add
and
mov
sub
mov
repz
imul
sub
and
or
cmp
neg
cmpsb
incl
fisubl
jmp
leave
inc
fmuls
mov
mov
mov
nop
sbb
lock
fnstenv
fsubs
rolb
imul
ret
mov
inc
call
arpl
dec
in
xchg
and
notb
pop
jno
pop
test
xor
rep
shll
into
cltd
adc
mov
inc
test
or
cmp
popf
rcrl
ja
inc
insb
push
mov
mov
hlt
lds
test
push
mov
xor
out
shll
gs
jmp
push
push
dec
ffree
xchg
ret
xor
jecxz
aas
or
add
popf
out
incb
je
jnp
gs
inc
dec
jo
ljmp
std
loopne
leave
movsb
and
push
xchg
fsts
push
push
lret
jns
cmp
mov
inc
pop
pop
mov
jmp
aas
fildll
jbe
in
fisubl
pop
mov
sbb
and
mov
rol
mov
fwait
ja
push
xor
in
jmp
xchg
out
cmc
mov
mov
sub
int3
cmp
mov
les
push
mov
mov
cmp
lcall
aam
in
rcrl
repz
hlt
mov
adc
loope
add
sub
mov
push
imul
inc
inc
enter
and
lds
out
sub
mov
add
pop
scas
and
int3
daa
dec
pop
push
adc
or
fstl
aas
push
dec
and
aaa
xchg
cld
enter
outsl
cltd
push
imul
popa
cld
cmpsl
cmp
les
push
lcall
mov
sti
xchg
fsubl
inc
pop
cmp
mov
cmc
pop
push
add
popf
decl
aad
movb
stos
cmp
sarl
in
int3
in
push
pop
mov
jno
cmp
mov
mov
jmp
xor
jae
pop
addr16
sub
outsb
in
sbbl
lds
fmul
jl
popf
loop
lcall
mov
inc
cmpsl
jle
sbb
adc
pop
mov
shlb
xor
jle
nop
stos
sbb
test
stos
xchg
stos
sbb
xor
ss
push
mov
cmp
shlb
xchg
ret
ret
lock
push
dec
and
and
cltd
add
das
outsl
dec
scas
lods
hlt
cmp
std
jne
inc
outsb
cld
adcl
pusha
inc
push
sbb
jns
cmp
cmp
sbbl
mov
popa
out
rolb
out
mov
leave
clc
mov
xor
in
test
sub
sbb
mov
xorb
in
je
jg
dec
mov
cmp
arpl
ss
mov
stos
xchg
loop
lea
jbe
cmp
xchg
push
nop
sbb
movsb
adc
lcall
xor
or
push
loop
sub
sub
fstps
mov
pop
pop
inc
xor
roll
sbb
loop
adc
or
cli
jo
xchg
xchg
mov
and
rcll
out
dec
pop
out
jl
js
jno
xlat
shrl
mov
lcall
imul
xlat
pushf
data16
add
cmp
xor
test
xchg
in
cmp
cmp
mov
push
adc
push
xchg
sub
pop
nop
mov
adc
mov
adc
arpl
sbb
mov
out
xchg
mov
xor
imul
cmpb
mov
test
jns
cltd
sub
xor
fcoml
lea
leave
adc
shll
into
repz
movsb
leave
addb
xchg
add
insb
mov
push
dec
add
out
divl
jnp
test
outsl
inc
inc
and
imul
mov
pop
xor
cmp
mov
lock
sub
xor
cmp
sbb
push
mov
pop
push
aad
test
jnp
ffree
mov
stos
dec
pop
push
in
mov
pop
popa
cmc
gs
mov
cmpsb
mov
pop
test
stos
bound
test
loopne
jmp
xor
adc
mov
inc
leave
sub
adc
mov
call
mov
pop
lds
outsb
dec
pop
adc
test
xlat
pop
aaa
outsb
xor
inc
sub
xchg
xor
aad
xchg
inc
dec
inc
int3
aam
mov
mov
inc
test
imul
push
lea
fmuls
jecxz
ljmp
inc
dec
push
jne
inc
xor
sbb
sti
cmp
or
imul
lret
aad
xchg
sbb
ja
and
push
inc
inc
lcall
lds
xor
clc
repz
int
movsl
dec
and
lds
push
cs
movsl
adc
shll
push
dec
mov
int3
fsubrs
scas
cmp
aad
pop
mov
movsl
in
lret
lods
push
lock
push
fidivrs
in
inc
sar
cmc
pop
mov
popa
rcll
jecxz
or
dec
jg
adc
popa
pop
out
sarl
xor
gs
fcomps
add
xchg
add
pop
and
or
adc
xor
jp
cmc
cwtl
in
bound
xchg
outsb
mov
and
xor
gs
iret
cwtl
call
nop
clc
adcb
mov
push
jno
push
pop
popf
test
cmp
dec
pop
ret
test
adc
cmp
lret
dec
out
jge
add
mov
je
push
loop
pop
add
push
int
adc
push
push
outsl
insl
jmp
jle
aad
mov
cwtl
mov
mov
test
jbe
dec
lods
xor
xchg
cmp
insb
sub
xor
jl
mov
ljmp
jae
loopne
insb
push
push
push
movsb
add
push
add
push
mov
jnp
divl
and
mov
jmp
fwait
sub
insb
pusha
dec
clc
mov
inc
popa
into
popa
fwait
insl
jle
push
in
lret
cmp
cmp
into
hlt
movsl
cmp
mov
pop
iret
cmc
push
repz
cmc
jnp
jmp
imulb
xchg
cmp
mov
cmp
cmp
mov
xor
cmp
pop
dec
and
imul
dec
pushf
add
adc
inc
lahf
insb
jo
pop
mov
add
outsl
in
dec
lret
dec
lret
les
xchg
mov
fstpt
sahf
adc
jo
pop
mov
dec
test
ret
push
test
icebp
mov
inc
jmp
cmc
movsl
repz
xchg
inc
gs
add
ja
fwait
mov
test
out
inc
pop
push
cmp
jnp
pop
mov
aad
pop
int3
cmp
aas
sub
rclb
cmp
loope
xor
sub
pop
ficompl
aaa
lods
loop
js
hlt
xchg
add
into
sbb
sub
cmp
sub
xchg
cmp
fsubr
enter
aam
popf
pop
and
ljmp
inc
pusha
ljmp
sbb
mov
cmp
dec
mov
filds
mov
and
fistps
xchg
push
fcomps
bound
xor
adc
dec
dec
lret
push
add
test
jnp
mov
jl
pop
pop
aad
or
daa
pushl
dec
cltd
xchg
daa
das
movsl
mov
movsl
daa
add
xchg
inc
push
enter
cmp
cwtl
or
and
fildl
loop
stos
lret
xchg
shll
mov
sub
push
xor
into
xchg
outsl
mov
or
inc
mov
cmp
popa
jb
jae
and
int
jno
gs
icebp
nop
in
or
mov
jne
sti
fistps
mov
sbb
scas
xor
jge
push
pop
bound
dec
jl
rorl
out
lock
fs
pop
loopne
fs
aaa
adc
gs
cmp
sbb
pop
mov
loopne
rep
cmp
mov
pop
xchg
jbe
in
push
mov
mov
mov
icebp
mov
daa
in
jno
adc
jecxz
nop
dec
mov
xchg
test
cld
pusha
int3
and
push
insl
mov
push
cmp
test
xor
cmp
jp
fisttpl
pop
mov
xchg
fsubrl
xchg
or
cs
jb
inc
jae
hlt
loop
andl
push
inc
cmc
pop
add
or
mov
out
push
mov
mov
and
sbb
push
pop
xchg
xlat
out
sahf
notl
aaa
push
aaa
out
mov
mov
in
pop
xor
jecxz
pop
jbe
xor
adc
jbe
lods
jmp
push
or
push
leave
pop
xor
ret
jge
fdivrl
aas
dec
stos
pop
xor
mov
idivl
flds
jne
push
jnp
cli
or
push
mov
loopne
adc
xor
mov
cs
cwtl
adc
cmp
pop
ja
in
jne
enter
scas
push
rolb
inc
xor
iret
jge
stos
and
or
mov
push
pop
incb
sub
xchg
mov
rcr
test
les
shlb
int
cmpb
mov
mov
int3
push
and
add
push
xchg
fnsave
sbb
imul
add
gs
or
and
shll
in
push
adc
pop
sbb
sub
cmpsb
repnz
outsb
sub
push
add
ljmp
cmpb
insb
push
jmp
scas
sbb
mov
test
push
or
inc
mov
imul
insb
ret
ror
or
lahf
mov
popf
sbb
clc
mov
jne
jne
inc
lahf
ret
sti
add
sarb
sar
in
stc
push
orl
add
jp
fadd
and
inc
call
jne
cmc
pop
pop
dec
popa
cmp
mov
adc
mov
pcmpeqw
jmp
je
rorw
pop
or
jnp
je
int
sbb
mov
pop
hlt
roll
pop
or
loopne
insl
or
inc
add
cli
mov
rorb
jbe
jo
sbb
adc
sbb
leave
je
mov
in
int
out
cmpsl
cld
sub
shll
jnp
adc
or
test
lds
fcmove
movsl
cmpsl
in
xor
adc
cli
arpl
push
fistpl
out
cmp
jae
xchg
js
mov
ss
fstpt
sbb
inc
inc
loopne
adc
test
mov
mov
adc
push
push
insb
pop
cld
dec
shl
shl
fsubl
push
jo
jge
jo
sub
je
and
rorl
icebp
cmp
hlt
pop
sbb
and
shrl
push
inc
icebp
pop
cmpsb
adc
or
mov
lods
jne
jl
dec
negl
dec
imul
xchg
jle
inc
mov
pop
push
imul
fistpl
and
fsubl
inc
add
loop
add
cmpsb
lods
add
sub
out
pushf
push
and
into
xorl
fstps
hlt
pop
cmp
sti
mov
bound
mov
stos
ja
mov
rol
and
add
xchg
dec
out
es
repz
leave
pop
xor
add
cmp
rolb
loop
adc
xchg
push
movsb
or
xchg
push
jbe
lcall
sbb
add
jge
cmp
dec
jmp
mov
loopne
enter
es
fbstp
adc
cltd
bound
push
push
push
pop
loope
sarl
mov
sti
jb
inc
mov
mov
or
jg
sub
mov
xor
bound
cmp
in
stos
movb
push
movsl
in
dec
push
and
push
inc
dec
xchg
sbb
leave
inc
adc
sub
cmp
mov
mov
aam
xor
das
fs
addl
cmc
in
sbb
je
ljmp
ljmp
dec
arpl
test
notb
mov
cli
lods
xchg
xchg
fidivrl
pusha
mov
repnz
push
mov
lods
push
hlt
xchg
jo
dec
imul
inc
lahf
inc
mov
cld
jp
xchg
imul
frstor
push
ret
adc
push
insl
aam
fists
dec
iret
xorb
mov
or
push
pop
repz
xchg
movsl
stos
sub
add
dec
mov
push
lods
and
popf
cmp
in
sbb
loopne
push
push
fcmovb
adc
rcrl
sub
dec
pushaw
pushf
test
jno
dec
add
dec
inc
aaa
sbb
lock
bound
ss
mov
out
mov
int3
xchg
mov
orl
stc
push
lods
loope
pop
hlt
mov
push
dec
mov
fistpl
jno
sbbl
push
mov
lds
pop
xlat
jno
out
pop
xor
mov
inc
or
inc
or
pop
insl
cmp
adc
addl
insl
or
xor
adcb
out
add
mov
mov
das
sub
leave
repnz
ja
ffreep
xor
decb
jecxz
mov
cmovno
shl
dec
mov
ja
push
and
jmp
mov
shr
rorb
jb
bound
clc
js
sub
cmpsl
outsb
shll
call
sub
pop
push
add
enter
inc
xchg
pop
xor
call
pushf
je
xchg
loopne
push
fisubs
mov
sbb
hlt
dec
jmp
adc
test
pop
js
add
shl
jl
cmp
shll
imul
mov
cltd
sub
sti
mov
aas
shrl
inc
and
in
push
sub
push
adc
das
sub
out
sub
ljmp
sbb
cmc
es
scas
push
mov
dec
inc
sbb
mov
scas
or
lahf
movzbl
xor
imul
aad
lods
out
dec
or
sub
out
jbe
adc
xchg
jae
in
je
push
ret
or
inc
lret
pop
cmp
mov
inc
ror
into
inc
jp
fisubrl
dec
pop
mov
imul
dec
decb
mov
dec
outsb
cld
dec
pop
jbe
icebp
imul
adc
lret
lret
out
jle
fwait
sub
call
jae
xchg
mov
sub
push
sbb
das
and
pop
imul
jmp
jo
mov
dec
outsb
in
lea
add
cmpsl
out
sahf
daa
inc
mov
cmp
cmp
mov
or
and
rcr
cmp
add
mov
push
jp
adc
push
fisubrs
arpl
imul
cmpl
push
je
and
ljmp
stc
lahf
lea
in
jo
jns
mov
mov
dec
cmpsb
fsubp
orl
adc
inc
sti
lock
jmp
adc
and
faddl
dec
rcrb
fdivrl
jo
mov
or
xor
xor
cs
rcrl
mov
mov
out
imul
add
pop
mov
lock
iret
fistl
ljmp
or
jg
addb
jp
cmp
mov
mov
mov
movsb
lret
movsb
sub
xchg
cltd
packuswb
xlat
repz
xor
push
jl
or
sbb
lcall
pop
sub
add
jae
jb
sbb
dec
or
xlat
add
aad
std
fbld
nop
mov
add
and
push
or
negb
xor
xor
cld
fwait
jo
mov
or
jmp
or
push
jmp
sar
scas
fs
dec
gs
sub
or
push
ficoml
jbe
aad
jbe
imul
push
enter
imul
aaa
cmp
repnz
decb
ds
insb
cmp
jp
icebp
xlat
xchg
mov
popa
xor
fnsetpm(287
mov
rorb
sbb
jne
out
sti
call
scas
and
adc
jmp
push
mov
xor
ja
jl
push
sbb
stc
sub
out
ljmp
leave
mov
push
loope
fcoml
enter
jl
loop
ljmp
mov
or
arpl
andb
pop
xor
insb
cmp
xor
loop
scas
fldl
rorb
pop
cli
xchg
mov
cmc
idivb
push
int
in
push
fbstp
pusha
and
loop
mov
add
inc
sub
dec
fadd
stos
cld
arpl
daa
mov
mov
jge
mov
jl
mov
cmpb
negl
inc
cwtl
jecxz
or
fstpl
lret
pop
mov
xor
sub
jnp
cs
mov
or
mov
fsubs
or
out
xor
dec
adc
lcall
cmpsb
movsb
mov
popl
sbb
push
or
push
pop
movb
or
scas
lcall
icebp
push
fldt
xchg
int
mov
daa
enter
xor
mov
data16
pop
add
inc
pop
aas
dec
out
sub
push
xchg
adc
lods
outsl
icebp
fsubrl
or
shll
out
loope
mov
out
repz
cmp
sbb
aas
mov
pop
cli
ret
out
inc
mov
std
push
jge
aaa
sbb
push
lret
mov
ret
fisubl
nop
out
inc
pusha
addr16
mov
ljmp
movl
ljmp
mov
in
movsb
push
jo
push
mov
pop
sub
insl
outsl
sbb
mov
cmpsb
sbb
outsl
xor
gs
xorl
sub
cmp
in
xor
sbb
cli
jmp
pop
dec
jo
xor
movsb
jle
std
pusha
mov
sbb
jle
jge
std
cld
mov
es
cmp
xor
add
arpl
xchg
add
loop
es
sub
fisubrs
scas
js
cmp
shlb
loope
sub
mov
push
or
pop
add
fidivrs
mov
push
and
into
jmp
rcrb
jns
xchg
push
or
push
loope
ret
jnp
movsl
xchg
mov
cmc
mov
jle
inc
std
pop
cltd
out
sub
mov
fmuls
addb
std
jns
push
je
sbb
mov
mov
push
mov
jb
in
ror
lds
adc
sahf
sub
fdiv
adcb
xchg
fwait
push
xchg
aam
jno
shlb
mov
stos
add
and
out
push
andl
xor
scas
or
adc
lcall
out
dec
fisubrl
add
jl
adc
mov
orl
push
fadd
sbb
add
adc
ds
inc
repz
add
fisubs
cmpsb
enter
push
mov
out
iret
xchg
fucomi
das
pop
out
notb
dec
lods
dec
xchg
inc
popf
mov
in
shlb
stos
pop
mov
in
les
add
xor
push
lods
loope
dec
inc
cwtl
leave
jp
dec
sub
std
mov
and
sarb
xor
in
pop
ss
imul
mov
mov
test
jo
push
shll
and
cmp
repnz
popa
mov
hlt
arpl
mov
fsubl
pop
ds
dec
xchg
mov
xchg
aad
mov
inc
or
xchg
dec
mov
in
scas
mov
sub
xchg
inc
push
fwait
mov
push
mov
jge
or
push
sub
in
pop
pop
popf
mov
icebp
pop
mov
xchg
mov
cmp
adc
jnp
cmp
mov
push
insb
fcomps
insl
cli
lock
pop
rolb
cmpsb
cmp
stc
sub
sbb
imul
test
jno,pn
movsl
lods
mov
add
mov
add
and
sar
xchg
dec
pop
cmc
mov
in
sbbb
mov
or
pop
negl
pavgb
add
push
xchg
inc
shll
xchg
mov
cs
jb
shlb
fs
scas
push
sub
jbe
in
cmpsl
fimull
pop
adcl
enter
daa
data16
mov
jo
mov
add
subl
lods
es
fiadds
ss
add
movsb
fisubs
fchs
fsts
jecxz
sub
dec
shrl
rcll
movsl
mov
test
sar
out
mov
ror
aaa
mov
loopne
dec
inc
cmc
lahf
inc
jmp
fisubrl
ret
xor
rolb
movsl
push
xchg
ja
bound
push
inc
jl
pop
in
mov
mov
pop
fsqrt
fwait
inc
inc
and
scas
aam
cmc
adc
pop
push
jg
add
call
push
popf
adc
cmp
in
adc
mov
xchg
aam
inc
dec
adc
sbb
and
push
xlat
stc
lret
iret
adc
or
jns
flds
jno
lds
cs
aas
cmp
lock
in
push
pop
imul
sub
sarb
or
sub
mov
mov
call
ss
jbe
jae
imul
ss
scas
xchg
jo
test
popf
pop
imulb
andb
fisubrl
push
int
mov
aas
sbb
mov
ror
ja
inc
add
sub
sbb
push
aam
aam
lea
lahf
sub
jne
in
inc
xor
jge
adc
and
adc
aam
test
pop
pushf
cmp
jle
cmp
insb
mov
jmp
cmp
stos
sbb
and
push
adc
mov
test
clc
test
pop
test
add
xor
push
dec
mov
inc
jp
int
jbe
les
push
mov
lret
loope,pn
push
jg
pop
mov
fwait
xor
mov
mov
mov
hlt
cmp
aaa
shrb
fcoml
or
cmp
cmc
pop
addr16
scas
xor
mov
ret
dec
fcompl
xchg
loope
dec
pop
aas
mov
std
outsb
pop
lods
pop
and
pop
sub
outsl
mov
iret
arpl
aaa
xchg
clc
test
adc
clc
dec
scas
aad
mov
loope
in
jbe
loope
or
dec
hlt
dec
mov
mov
mov
loop
xchg
lahf
cli
jae
cltd
insb
cmovg
xchg
stos
xor
nop
mov
mov
idivb
cmp
xchg
jns
xor
aam
cs
fists
inc
pop
jns
push
or
jae
enter
pop
into
movsb
pop
push
add
sub
std
xchg
adc
rcll
incl
adc
xlat
outsl
push
inc
mov
sbb
xor
and
outsl
inc
inc
fwait
cmp
dec
mov
xchg
jns
imul
adcl
dec
jp
enter
cld
enter
insb
dec
dec
out
sbb
push
jmp
sar
sbb
xchg
call
cmp
xor
inc
add
or
xor
sub
cli
pop
adc
cmp
cmp
cmp
add
adcb
xor
sbb
push
aam
jg
cltd
out
lahf
jecxz
sbb
sbb
scas
shll
call
mov
imul
or
adc
jo
punpcklbw
jl
cmp
outsb
adc
fistps
xor
cld
nop
int3
ljmp
dec
cmp
repz
das
jg
adc
xchg
mov
stc
stos
outsb
pushf
dec
loop
pusha
pop
push
mov
or
mov
push
aad
pop
sahf
mov
ss
out
lea
vmovddup
push
xor
push
mov
add
adc
dec
dec
xchg
fnstenv
mov
add
sti
repnz
cmpsb
cmp
movsl
or
mov
mov
adc
dec
sbb
loop
sub
and
lods
pushf
fcompl
xchg
dec
pop
ja
test
and
cmp
insb
ljmp
mull
js
mov
fbstp
push
rcr
pushf
stc
cmp
cmc
shll
outsl
rcll
dec
es
jp
jns
xor
adc
and
sbb
sub
movsb
enter
enter
mov
push
xchg
aas
cmp
in
lods
fwait
pop
jo
cmp
jns
push
jns
push
xchg
sub
jnp
pop
pop
movsl
pop
daa
scas
push
xor
pop
mov
mov
sub
ljmp
or
mov
fwait
jmp
pop
dec
test
pop
or
loope
jg
cmpl
icebp
mov
mov
fwait
jne
and
jecxz
ja
sti
std
inc
sub
push
ret
jle
lcall
sub
cltd
lcall
push
or
mov
lea
sarl
cmp
in
push
out
or
ret
mov
fstl
fdivrl
pop
addr16
ss
adc
and
adc
mov
and
inc
push
jg
add
fdivl
sub
jmp
jno
dec
stos
mov
inc
adc
pusha
cwtl
les
es
xchg
je
rorb
inc
int3
pop
icebp
dec
in
int
shlb
ds
pop
jo
or
ficomps
iret
push
xchg
rorb
cmp
inc
or
flds
cmpsb
inc
adc
in
inc
push
stos
xor
jne
cltd
dec
filds
ljmp
pop
in
ja
sub
jb
lcall
push
sar
sbbl
dec
iret
push
mov
test
daa
fldt
and
pop
repz
gs
or
adc
mov
imul
andl
arpl
pop
in
fisttpl
imul
loope
jle
xchg
push
xor
adc
shlb
lds
loopne
push
cmpsl
js
push
pop
sti
dec
adc
int
xor
mov
push
or
je
sub
add
and
aad
jo
dec
enter
xchg
aas
or
dec
decb
mov
cmc
ss
loope
rcl
dec
dec
rclb
loop
mov
inc
sub
and
jge
mov
test
stc
test
jno
jns
leave
and
pop
test
mov
mov
out
mov
rorb
mov
lret
jecxz
xor
xchg
sti
xchg
mov
repnz
mov
push
lcall
add
movsb
xor
repnz
pop
sahf
repz
cmp
les
add
push
pop
add
rcr
sbb
pop
jmp
insb
sti
cwtl
int3
mov
inc
leave
icebp
sbb
jbe
xchg
push
fsubrs
hlt
push
aaa
pop
jg
sbb
cmc
rclb
or
fisubs
mov
mov
adc
dec
xchg
mov
and
dec
add
push
jne
push
lcall
push
roll
push
xchg
outsl
lret
stc
adc
sub
mov
fsubr
sub
and
adc
in
or
push
sbb
mov
mov
add
xor
adc
lret
xchg
sahf
jmp
jmp
xchg
mov
cmp
lahf
xor
sub
sub
jbe
xchg
or
cmp
adcl
imull
sbb
xchg
mov
dec
in
subl
xor
lahf
cmp
loop
xchg
mov
leave
insb
mov
xchg
sub
mov
mov
pop
xchg
push
out
push
and
mov
aam
test
pop
int3
stos
xchg
rorl
or
sbb
jecxz
sub
xchg
imul
data16
sub
mov
in
fdivrl
pop
sbbb
fstl
sbb
les
rclb
inc
jb
pop
jne
imul
jecxz
rcll
cld
jnp
mov
movsb
xchg
xor
sub
stos
mov
inc
lea
cmp
push
xor
fidivl
sub
ljmp
inc
jle
out
repnz
dec
adc
adc
es
jns
jae
insl
xchg
dec
into
or
addb
aas
ret
ss
cld
mov
push
sub
rcrl
push
xlat
xlat
stos
or
xchg
mov
mov
mov
stos
cs
mov
mov
leave
cmp
out
and
or
lcall
dec
mov
dec
dec
call
mov
xlat
jp
in
inc
mov
push
mov
mov
xchg
icebp
insl
xchg
and
sbb
mov
into
leave
dec
fiadds
push
and
jecxz
sub
dec
push
in
jmp
adc
mov
sbb
iret
push
and
les
push
ss
jne
adc
xchg
and
into
in
add
icebp
pop
cmpsl
lahf
pop
fbstp
add
add
xor
js
inc
mov
mov
jecxz
adc
mov
movsb
mov
pop
lret
jle
pop
movsl
mov
les
ss
sbb
shlb
daa
repnz
mov
dec
ret
push
mov
and
js
adc
cmp
rorb
adc
lret
into
xor
inc
adc
mov
imul
lcall
mov
cltd
inc
aas
mov
jecxz
pushf
js
push
shrb
dec
fs
rcpps
sbb
adc
cli
dec
xor
pop
jle
jmp
aas
aam
fwait
ljmp
add
cli
addr16
xchg
push
mov
or
ret
enter
aas
or
mov
mov
enter
mov
pushf
dec
clc
push
repz
push
cmp
popa
lock
push
call
jae
xchg
cmpsb
sub
dec
pop
pop
out
or
and
dec
jl
sub
cmc
lret
xor
aam
xor
inc
aam
push
jle
popa
add
pop
repnz
fstpl
push
int3
scas
test
lods
hlt
pop
adc
subl
pop
and
subl
jno
sub
add
fs
mov
popf
cmovnp
mov
jecxz
movsl
jle
mov
lret
std
out
les
xchg
cld
xor
mov
aad
ljmp
cwtl
pop
cltd
and
push
xchg
nop
adc
add
idivb
mov
pop
cmp
pop
push
gs
std
or
jl
mov
imul
adc
adc
stc
mov
addr16
das
push
inc
popf
call
or
cmp
cmp
or
in
push
xor
cmpsl
aaa
sbb
or
inc
jmp
mov
or
cmp
mov
dec
aad
mov
jmp
push
sarl
mov
or
sbb
push
dec
out
mov
sti
jge
rcll
push
mov
cmc
hlt
test
mov
dec
mov
mov
in
inc
outsl
lcall
mov
testb
sbb
orb
lret
fadd
aam
in
test
dec
out
pop
mov
mov
xorl
and
xor
inc
inc
jb
ljmp
das
loopne
inc
and
adc
jmp
int3
loope
not
xor
insb
stos
mov
pusha
aad
sub
inc
mov
rolb
mov
pushf
push
add
pop
cmp
setne
sub
enter
jo
push
aaa
mov
mov
jecxz
mov
jnp
pushf
sub
add
pop
iret
xor
mov
mov
inc
mov
pop
cmp
popa
dec
addl
dec
add
pop
jnp
clc
or
push
iret
pop
cmp
in
xor
std
out
dec
mov
into
xor
loope
test
push
xchg
inc
jge
mov
add
ljmp
leave
cmp
loop
push
mov
into
dec
cs
cltd
push
pop
test
pop
xchg
push
rolb
xchg
dec
leave
jp
inc
cmpsl
into
imul
add
xor
fdivs
xchg
push
xchg
mov
bound
push
sbb
inc
dec
pop
inc
outsl
int
xor
fimuls
pop
xchg
aad
mov
imul
movsl
mov
xchg
push
jecxz
ss
subb
add
scas
or
lea
pop
xlat
fwait
test
mov
js
jmp
jle
cld
push
arpl
into
fsubr
in
inc
cmp
in
add
aaa
push
shl
call
mov
ss
je
push
orl
push
popf
jns
lods
stc
sbbb
jo
sub
sahf
dec
loop
sub
jp
adc
sub
xor
out
push
cmp
mov
jo
mov
or
lcall
pop
fsubs
and
popl
les
insl
outsb
loop
les
in
pop
pusha
ss
fstpl
fistl
sub
adc
dec
pop
cmp
repz
mov
jb
jb
adc
inc
jne
into
ret
push
cmpl
add
js
lods
jmp
ret
cmp
push
xor
jg
sub
lret
out
xchg
pop
xchg
cmp
pop
sbb
xchg
and
push
pop
mov
test
out
shll
rorb
outsb
xor
cli
sti
out
or
repnz
or
lea
imul
mov
mov
js
adc
jge
and
pop
popa
inc
stos
cmp
shlb
cmp
mov
sbb
cmp
dec
lods
fnstenv
adc
jecxz
xor
mov
xor
mov
and
dec
push
popf
sub
aas
inc
cwtl
sub
adc
jnp
movsl
getsec
into
jge
sbb
les
adc
enter
xchg
xchg
jno
jnp
sub
loop
inc
outsb
nop
jne
pop
lods
cmp
lods
adcl
inc
sbb
sub
pop
fisttps
repnz
out
push
dec
das
pop
mov
pop
icebp
dec
add
test
sahf
push
cmp
lods
mov
jo
negl
data16
leave
adc
inc
loop
lret
dec
xchg
rorb
stos
shlb
mov
es
lea
sub
das
std
or
xor
std
cwtl
sbb
cs
das
inc
mov
sub
int3
cld
xor
test
xchg
pop
mov
scas
jne
out
addr16
mov
jle
fildl
pop
xchg
mov
xor
data16
and
in
sbb
daa
mov
sahf
jbe
pushf
dec
das
or
fimull
add
add
xchg
mov
xchg
cs
outsb
xlat
pop
dec
out
sbb
jb
and
pop
adc
pop
add
imul
ss
adc
sbb
mov
sub
movsb
bnd
outsl
mov
add
cmp
cmc
or
jmp
leave
mov
sbb
xlat
cs
mov
adc
ja
stos
daa
in
hlt
das
cmpsl
xchg
adc
movsb
mov
mov
fldl
andb
pop
repnz
push
and
pop
mov
mov
scas
pop
mov
sbb
add
fsts
sub
mov
stos
adc
sahf
dec
pop
push
call
lcall
jmp
inc
fldt
xchg
sbb
loopne
push
rcrl
add
pop
aad
adc
xor
lcall
shrl
vcvttss2si
ret
cld
and
xchg
and
ds
loopne
pop
xchg
add
and
mov
leave
jp
jecxz
std
cmp
pop
adc
fbld
add
pop
in
add
sbb
rcrb
rol
pop
jb
lahf
xor
push
pop
and
ret
mov
loop
sbb
roll
pushf
cmpsb
pusha
or
and
fimuls
push
and
inc
sub
stc
js
jno
add
stos
dec
pusha
fdivl
push
sbb
pop
pop
cwtl
pop
add
jnp
dec
sbb
roll
push
and
mov
xchg
add
xchg
cmp
mov
jmp
xor
test
and
mov
dec
in
loope
xchg
sub
dec
xchg
pop
jl
sub
inc
fstpt
and
icebp
push
ret
lcall
shll
and
pop
xchg
addr16
jmp
jo
sub
daa
std
cmp
sub
lcall
cmp
xchg
gs
int
fldpi
movsl
push
imul
dec
js
int3
cmp
mov
data16
pushf
cmp
inc
lods
daa
adc
in
mov
ret
dec
addr16
jge
mov
mov
push
mov
pop
mov
out
xor
inc
mov
fstpt
shll
sub
nop
push
fwait
repnz
out
adc
add
mov
cltd
adc
and
insb
xchg
inc
push
pop
aam
cmp
fstl
into
mov
lock
mov
and
inc
push
mov
mov
sbb
loope
adc
sub
ja
test
aad
sub
sbb
out
vmovhps
jmp
pop
mov
jno
jp
push
lahf
xchg
ja
push
dec
nop
jl
je
xor
mov
mov
enter
lret
data16
jg
or
mov
ret
or
add
jg
or
dec
xchg
int3
mov
data16
mov
ljmp
or
xchg
mov
add
mov
xchg
sub
pop
jg
xchg
sbb
fidivl
push
dec
out
in
in
subl
sbb
add
or
outsl
xor
mov
fisttps
xor
or
fs
adc
mov
pop
mov
dec
inc
fcmovnu
and
mov
and
xchg
cmp
and
lret
adc
popf
test
mov
shrl
subb
pop
pop
lods
mov
out
mov
lret
leave
add
inc
int
and
cmp
jae
pop
sbb
cmp
int3
xchg
inc
jp
cltd
neg
das
clc
in
xor
mov
push
repz
inc
lds
add
push
repnz
repz
xor
rcrb
call
iret
inc
dec
push
ret
dec
lods
jnp
push
cld
xchg
xadd
int3
in
jp
sub
inc
xor
int3
push
fs
sbb
add
mov
das
test
push
stos
ss
xor
rcll
pop
cli
cli
das
jg
mov
sbb
and
mov
mov
and
repz
aas
pop
jns
jmp
or
shl
add
sti
jge
loopne
add
mov
mov
mov
jne
pop
out
lcall
clc
add
cltd
fs
out
in
push
les
nop
push
push
or
cmp
xor
imul
mov
mov
cmpsl
mov
dec
or
mov
out
mov
push
sub
test
imul
nop
jge
mov
testl
in
repz
hlt
in
sub
inc
ds
call
lock
add
enter
lret
sahf
ret
push
or
enterw
icebp
and
jl
push
xchg
insb
jnp
pop
adc
push
movsb
xchg
adc
jmp
repnz
sbb
gs
adc
sbb
sub
add
sbb
repz
shl
int3
lods
arpl
add
mov
inc
mov
mov
lret
jl
or
push
rclb
jp
adc
jne
aad
pop
mov
aad
stos
mov
xchg
cmp
je
cmpsl
pop
or
nop
or
adc
or
push
sarl
repz
arpl
push
cmp
movsb
hlt
notb
xchg
xchg
cmp
dec
adc
iret
sub
imul
gs
pop
popa
lock
pushf
xchg
pop
std
inc
cwtl
cmpl
ljmp
insb
sub
mov
mov
popa
inc
mov
lds
in
jne
aam
in
rorl
popf
fimull
sbb
movsl
loope
adc
js
xchg
lock
dec
inc
fistl
fnstenv
sbb
popf
ja
mov
sbb
out
and
mov
jg
xor
cmp
mov
loope
cmp
jae
inc
movsb
scas
insl
fwait
or
jno
sub
jg
lock
clc
shlb
cmp
push
aam
out
fidivrl
jge
xchg
out
sbb
pop
pop
xor
addr16
inc
mov
stos
adc
scas
ja
xor
nop
push
loope
pop
xchg
adc
sub
xor
mov
adc
stc
dec
js
mov
daa
cmpsl
cmp
cmp
icebp
das
cmp
aam
cld
test
out
pop
cld
mov
dec
sub
xor
xchg
sub
cmpsl
inc
jb
or
pop
inc
imul
push
add
add
xor
daa
ds
mov
daa
jno
je
or
sarb
jo
cmpsl
lret
shlb
pop
in
inc
mov
xchg
popa
adc
xor
movsl
pusha
aad
fistpl
frstor
rcll
mov
gs
add
sub
jmp
mov
cli
or
fildll
or
jecxz
xor
lcall
and
data16
decl
fdivrl
cwtl
bsf
mov
outsb
pushf
cmp
sub
sub
lcall
sub
lret
aas
jns
or
dec
jbe
lahf
pop
mov
fsubrl
adc
xlat
lretw
xor
adc
adc
fstps
pop
inc
or
sbb
xchg
push
or
push
shl
out
test
xchg
cmp
push
sbb
sbb
ficomps
mov
mov
sarl
push
cmp
cmpsb
ja
sbb
bnd
mov
sbb
mov
add
pop
imul
int
outsl
es
inc
data16
bound
and
inc
and
out
addr16
push
es
sete
fiadds
and
je
mov
inc
imul
sbb
roll
push
cmp
jmp
ror
or
sbb
mov
sahf
push
inc
mov
lds
lret
test
dec
arpl
cmc
add
outsb
push
flds
roll
fwait
cmp
or
imul
mov
mov
xchg
out
divl
fstps
xor
adc
jle
jbe
xchg
in
fwait
sub
cmpsl
inc
mov
push
jmp
iret
push
into
pop
repnz
test
mov
and
pop
fnstenv
arpl
mov
add
lods
lods
setbe
sbb
sub
rcrb
xchg
je
in
jae
rcl
and
sub
jp
leave
insb
aas
cmc
add
ss
add
arpl
jge
jne
dec
push
in
adc
xchg
inc
or
sahf
insl
push
add
bound
fmuls
ja
cmp
and
mov
dec
lea
movsl
sub
ss
pop
test
cli
popa
enter
dec
lds
fstpl
pushw
push
and
and
test
leave
push
jae
and
outsl
push
inc
sub
pop
outsl
scas
cmp
pop
out
sbb
cmp
push
dec
sub
xor
shlb
mov
dec
mov
mov
jno
int
and
add
or
xor
or
jbe
xor
arpl
mov
enter
in
ret
rcrl
xor
ret
inc
aaa
stc
pop
sbb
sub
cmp
dec
cs
pop
jae
inc
xor
shll
sub
mov
xchg
inc
lcall
jecxz
sbb
inc
loop
or
cli
add
pushf
js
pop
sarl
hlt
push
mov
pop
inc
jmp
jno
inc
adc
mov
adc
sti
sub
dec
rcr
mov
dec
sub
cld
pusha
mov
cmpsl
lcall
dec
cmp
int
xchg
and
rcrl
pusha
push
lret
js
lock
loop
sub
stc
clc
lds
adc
jmp
sbb
jmp
sbb
xchg
sbb
fxch
cwtl
insl
stos
insb
mov
hlt
sub
lds
out
jge
dec
fidivrl
dec
mov
inc
test
mov
sub
push
sub
xlat
leave
mov
fnstenv
es
std
mov
pusha
push
xor
jmp
call
pop
orl
arpl
nop
xchg
jmp
call
jb
mov
push
faddp
pop
push
stos
push
inc
mov
cmp
add
mov
ret
or
loopne
cs
ljmp
aad
adc
mov
inc
cmp
ja
sarl
jne
fsts
lcall
lcall
xchg
jl
orb
mov
mov
pop
dec
sub
dec
popa
sub
sarb
jl
dec
xchg
push
mov
xor
mov
leave
pop
into
pop
mov
adc
or
loopne
cmp
adc
mov
cltd
inc
loop
fucomi
ret
adc
fs
cwtl
push
fdivrs
or
mov
sbb
push
das
mov
cwtl
xchg
cwtl
js
xchg
cmp
xor
fcoms
shlb
xchg
stos
lods
and
xor
dec
xchg
mov
loopne
sarb
jo
aad
stc
insb
in
sti
push
mov
and
out
sub
out
outsb
ret
std
fidivs
fisttpll
ffree
js
jg
mov
enter
scas
and
out
xchg
lahf
fildll
dec
xor
jle
xchg
loope
sbb
mov
add
inc
jae
sarl
mov
pop
and
mov
xchg
xor
mov
movsl
adc
xlat
dec
outsl
in
out
aam
lods
arpl
jmp
jmp
mov
push
and
inc
nop
and
test
add
out
cmp
imul
out
jle
imul
and
in
popf
adc
fildl
pop
lret
jb
mov
aas
fdivr
or
daa
lock
inc
cmc
xchg
ret
popf
test
out
nop
jns
aad
movsl
mov
push
and
push
mov
and
xlat
mov
mov
insb
and
inc
and
sub
aaa
sbbl
mov
mov
push
sub
mov
lock
push
push
addr16
out
push
out
inc
stc
xchg
lods
lret
clc
or
frstor
bound
or
je
clc
pop
mov
pop
xor
mov
mov
leave
adc
or
test
aam
mov
lret
and
cmp
and
faddl
cmp
popf
test
gs
pop
subb
lea
dec
ds
out
ffreep
mov
leave
push
js
xlat
dec
mov
leave
mov
pop
sbb
push
xchg
test
jb
inc
nop
xchg
lods
in
adc
aas
addr16
pop
sbb
in
sub
leave
call
inc
jmp
stos
scas
lea
int
aam
mov
je
mov
mov
cwtl
push
setno
insl
outsl
lcall
jmp
es
and
aad
xchg
mov
ljmp
cli
mov
fldt
mov
or
fiaddl
gs
mov
add
fcmovnu
sbb
cwtl
or
mov
cmp
sub
mov
mov
xor
adc
fwait
gs
dec
cmp
movsl
cmp
add
sarb
call
dec
push
sub
add
jbe
sub
mov
pop
and
popa
sbb
mov
push
push
xor
dec
xchg
push
xlat
fwait
jbe
pushf
sbb
cs
ss
sbb
cs
and
shll
jo
jl
dec
jp
mov
adc
add
out
ss
out
inc
in
sbb
jo
int3
mov
je
xor
repnz
mov
push
and
aad
xchg
les
jo
push
sbb
sbb
popf
popa
fsts
or
pop
sbb
icebp
jge
and
mov
out
add
aad
test
adc
bts
addr16
and
inc
inc
iret
loop
fistps
test
sbb
sbb
aad
xchg
sub
orb
adcb
sbb
jo
test
aad
xchg
jnp
jne
out
aam
or
fcomip
in
jg
or
lods
ret
or
cld
fxam
cltd
faddl
je
pop
fcomps
loope
xchg
test
movsl
push
inc
jb
dec
leave
dec
dec
fisubrl
jle
es
mov
roll
cmpsb
inc
jp
cwtl
in
mov
insl
xchg
cmp
push
fs
mov
jl
fsubrl
mov
cmp
bound
sbb
int
outsl
int
fsts
test
das
je
das
inc
dec
imul
xor
test
rcr
pop
mov
cmp
insb
ss
das
dec
xorl
icebp
mov
jno
mov
jne
pop
fwait
adc
xor
repnz
pushf
xchg
push
les
xlat
mov
mov
lods
movsb
imul
mov
call
inc
mov
clc
aad
and
jl
or
fldcw
mov
inc
push
shll
stc
test
lods
lds
inc
xchg
les
out
xchg
mov
adc
lods
popa
sbb
sbb
loope
pop
ss
jge
icebp
xchg
lods
add
stc
scas
mov
jl
fidivrs
daa
adc
je
add
sahf
mov
mov
incb
out
pop
sarb
test
aad
cmpsl
sub
mov
push
mov
pop
loope,pt
sbb
push
push
jo
push
idivb
leave
inc
imul
sti
aaa
add
loope
sub
pop
imul
pop
push
loope
lock
fwait
xchg
pushl
test
inc
pop
sub
push
xor
repnz
xchg
sub
outsl
ss
test
jns
in
fcomps
sbb
loopne
jo
mov
push
cmp
cmpsb
pop
or
lret
inc
push
ret
xchg
mov
pusha
pop
xchg
mov
add
inc
jecxz
push
or
out
test
in
aas
mov
aad
cmp
lcall
int
insl
pop
inc
push
out
sahf
or
pop
mov
insl
pop
setg
ret
imul
cmp
loope
aas
clc
and
or
pop
popf
pusha
dec
sub
mov
cmpsb
call
popa
loop
push
test
bound
ja
in
xchg
aad
and
add
lret
mov
loop
aad
or
jp
das
and
pushf
adc
pop
ds
inc
pusha
lahf
aaa
jg
xchg
pop
fimull
packuswb
sbb
pop
aam
push
stos
nop
jl
cs
pop
sbb
ret
sub
inc
xchg
cmpsl
add
out
add
pop
cmp
pop
lcall
ja
loope
mov
mov
scas
test
cltd
jbe
cmp
inc
out
scas
push
adc
in
mov
ja
adc
cmp
cld
sti
lock
push
fmull
arpl
rol
jl
adc
jp
cmp
into
xorb
push
scas
pusha
mov
xchg
ljmp
push
mov
mov
imul
and
jecxz
insb
es
add
inc
push
mov
jo
mov
adc
call
cltd
jbe
movsb
dec
mov
pop
movss
fpatan
dec
mov
and
ret
cltd
in
test
icebp
or
pop
push
mov
stc
leave
aaa
mov
pushf
sbb
lds
stos
xor
sub
mov
popa
xor
push
mov
jo
rcll
xlat
add
lds
xor
pop
cmp
push
out
sbb
fstl
push
in
outsl
dec
mov
lods
push
sbb
sbb
popa
lock
jo
inc
mov
xor
and
jae
xor
lods
rcll
inc
sahf
xchg
push
pop
add
adc
lea
adc
mov
add
out
imul
mov
scas
cmp
sub
pop
gs
rorl
mov
pop
sbb
enter
data16
rol
jno
pop
sub
daa
loopne
das
sub
mov
leave
and
add
cmp
add
int3
test
mov
adc
mov
inc
inc
pop
mov
ljmp
sbb
cltd
dec
in
sub
sub
mov
int3
cmp
call
cmp
andb
pop
pushf
loop
jp
mov
lds
lahf
and
jno
aas
out
xor
gs
mov
stos
cmp
out
movsl
mov
push
lods
leave
mov
xchg
push
mov
push
cmpsl
fcmovnbe
out
in
lea
decl
inc
lahf
push
mov
inc
movsb
adc
cld
mov
xchg
push
jmp
inc
out
push
int
xlat
add
cwtl
out
mov
xchg
divb
mov
jne
sbb
sti
add
xor
push
jle
xchg
scas
pop
clc
mov
pop
mov
and
in
sbb
cli
push
inc
int3
lcall
dec
jnp
icebp
bound
mov
sub
add
pop
lea
cltd
mov
mov
cmp
jae
dec
movsl
loope
jge
aad
dec
cmpsb
mull
mov
dec
fisubl
jecxz
or
mov
fldt
mov
aam
cmp
mov
fcomps
sub
pop
outsb
pop
sub
and
testl
add
fsubrl
mov
cmp
or
or
popf
bound
enter
adcb
loop
adc
mov
mov
jbe
fistps
outsl
jne
fistpl
mov
in
jnp
inc
adc
hlt
adc
mov
jno
and
and
test
mov
mov
shrl
xorb
jg
mov
ljmp
repnz
pop
das
int
sti
divl
pop
pop
dec
push
shl
or
xchg
sbb
jp
mov
add
sub
neg
push
ss
in
lret
iret
xchg
dec
or
loope
mov
repz
loope
jg
mov
sti
rolb
in
iret
ret
aas
jo
inc
jnp
test
insb
nop
push
or
pop
jl
sub
fs
sarl
ret
or
jl
mov
test
mov
xchg
jnp
mov
adc
les
pop
loope
scas
pop
or
adc
cwtl
or
sti
fcomp
xorl
lret
xlat
mov
sbb
xor
addr16
vpmovq2m
daa
call
movsl
push
adc
adc
push
hlt
and
jmp
aaa
fwait
or
and
fcmovnb
push
xor
pop
pop
jo
mov
daa
orb
std
pop
stc
add
dec
add
out
sub
imul
pop
inc
enter
arpl
je
adcl
xchg
dec
cltd
dec
xchg
incl
fucomp
sbb
jb
jae
sbb
push
or
mov
add
cmc
stos
sub
inc
push
mov
jno
jg,pt
aam
lcall
adc
int
jmp
aad
pop
test
sbb
aas
push
jnp
inc
in
mov
sub
sbb
cmp
repz
dec
push
cmp
ss
xlat
pop
jo
sbb
in
mov
or
movsb
dec
jecxz
in
popf
int
subl
xor
leave
pop
int
or
les
sub
sbb
sbb
xchg
mov
xor
add
mov
add
and
cmp
pop
jecxz
pop
addl
mov
ret
movsb
mov
ja
fninit
inc
sti
hlt
sarb
mov
sarb
jge
mov
sub
adc
repnz
mov
xor
pop
adc
adc
pop
enter
sub
and
out
adc
mov
push
ret
mov
scas
cwtl
sbb
loop
and
lret
rolb
xchg
sub
mov
hlt
stos
repnz
cmpsb
sbb
pusha
mov
aas
je
loope
mov
adcl
adc
fcomps
stos
jo
fwait
daa
jb
push
enter
mov
dec
mov
adc
xchg
mov
test
ret
data16
das
xor
fwait
imul
fs
add
fsts
sti
fstps
mov
lahf
cmp
mov
test
sub
cli
loop
xor
js
mov
adc
sub
push
cmp
fnsave
ljmp
jbe
out
mov
xor
adc
inc
push
in
aaa
cmp
cmp
cmp
bound
pop
sahf
loope
xor
int
outsl
in
and
js
adc
loopne
hlt
xor
imul
sbb
aaa
aaa
inc
int
ja
sbb
data16
or
inc
daa
out
adc
lret
or
push
dec
iret
adc
xor
cmp
and
pusha
dec
xor
pop
mov
les
dec
out
leave
int
push
arpl
push
inc
or
data16
mov
add
jnp
dec
dec
hlt
push
push
mov
popf
rolb
mov
icebp
pusha
add
fwait
nop
adc
mov
sbb
stc
pop
push
inc
dec
sbb
aaa
sarb
jae
cmc
or
movsb
add
xchg
inc
dec
mov
lods
sub
sbbl
inc
fsubrl
ficoms
cld
int3
lret
mov
xchg
ret
jecxz
in
sub
in
icebp
xchg
jl
jge
in
daa
fcmove
std
xor
pop
mov
ja
mov
fucomp
mov
mov
dec
mov
push
xlat
mov
xor
inc
pop
mov
jmp
push
jge
out
dec
int
lret
pusha
xchg
xchg
xor
jle
or
incl
int3
pushf
xchg
jb
addb
and
aas
pusha
inc
bound
push
or
or
fnstenv
jl
jl
jmp
mov
jge
mov
jno
adc
inc
rorb
mov
ljmp
iret
inc
ds
pop
test
lahf
push
jmp
xor
mov
and
sbb
xchg
pop
aas
stc
jo
out
xchg
or
cltd
movsb
or
mov
push
and
insl
loopne
mov
sbb
aam
jnp
aad
movsb
jnp
lea
mov
push
xor
ficoms
out
lcall
repnz
push
in
iret
orb
push
imul
inc
xor
jmp
mov
imul
ret
dec
inc
cmovb
jecxz
stos
lret
xor
lods
fnstenv
movsl
leave
and
lods
pop
jecxz
stos
div
jb
inc
les
jle
cli
jnp
xchg
es
and
movsl
lcall
lret
cmp
hlt
pop
dec
add
pop
jle
jmp
int
sbb
outsb
adc
cli
rclw
push
in
xchg
dec
and
inc
movsl
rcrl
cmp
cmp
movsb
xchg
mov
pop
repz
imul
out
mov
sbb
into
into
pop
out
adc
loopne
mov
mov
jg
and
lea
fimuls
pop
xchg
xchg
jae
and
and
pusha
in
inc
js
jne
or
mov
ds
mull
jne
rol
adc
mov
jg
adc
sbb
fbld
and
scas
push
mov
aam
lods
in
xor
les
pop
xchg
enter
jnp
int3
xchg
cwtl
aam
loopne
jne
inc
inc
out
and
cwtl
or
mov
xchg
sub
xlat
xchg
push
aaa
sbb
and
and
clc
mov
scas
xor
test
cmpsl
fwait
cltd
sbb
pusha
bound
xchg
push
dec
dec
xchg
mov
scas
popf
and
sub
inc
aad
rorl
pop
cli
mov
in
pop
xor
repz
bound
adc
xor
ficompl
mov
stos
lods
out
in
adc
inc
jb
mov
push
ret
fmuls
add
pop
adc
inc
pop
and
sub
cmc
into
hlt
nop
push
cli
mov
pop
fdivr
add
rorl
aad
push
pop
lods
loopne
std
mov
and
negl
cmp
jae
rep
jle
or
arpl
mov
add
test
in
leave
xor
sub
pop
shl
xor
pop
int3
int
pop
stos
movsl
mov
icebp
xor
test
leave
andl
mov
jno
pop
lods
in
push
stos
sbb
mov
add
push
sarb
rclb
pushf
sub
push
scas
xchg
xor
lret
fistpl
dec
clc
fs
loope
in
or
xchg
iret
adc
loop
push
mov
shll
cmp
mov
cs
sti
fdivrs
mov
push
pusha
push
xor
fistpll
ja
pushf
push
insl
pop
pusha
adc
mov
in
sbb
jno
mov
leave
push
mov
call
out
test
adc
mov
add
pushl
dec
repz
je
xlat
loopne
test
addb
loope
outsl
jmp
je
daa
mov
bound
jo
mov
cmp
push
imul
mov
test
mov
es
je
out
mov
icebp
enter
int
mov
outsl
jno
mov
addb
jne
push
add
ret
cwtl
cmp
xchg
mov
fisubs
dec
rorb
cmpsb
jbe
mov
add
xchg
and
iret
cmp
loop
lret
push
fldenv
imul
bswap
pop
divb
ss
sbb
das
out
cmpb
je
dec
mov
pushf
in
paddq
imul
pop
rcll
movsb
xor
cmpsl
scas
popa
mov
cmp
dec
in
and
dec
nop
or
or
fwait
xchg
push
scas
push
mov
xchg
push
add
imul
cwtl
xor
pop
mov
imul
pop
out
push
mov
lret
inc
bound
push
push
sub
scas
pop
repnz
mov
adc
ja
aaa
imul
nop
pop
jmp
or
xchg
mov
ret
dec
push
lret
inc
out
sbb
inc
stc
sub
lock
cld
aam
gs
mov
testl
js
fbld
test
fmuls
xchg
pop
jl
xor
frstor
test
pusha
add
int
mull
sbb
fdivl
insb
gs
and
dec
add
mov
cmp
fildll
jbe
sbb
jecxz
or
pop
out
jno
out
xchg
mov
lock
int3
pushf
mov
movsl
dec
ja
lret
xor
or
push
dec
mov
pop
popa
out
jp
push
lock
mov
jo
mov
sbb
xchg
or
mov
mov
clc
aam
mov
add
add
std
shl
popa
cli
lods
lods
sub
lods
cltd
out
scas
mov
or
lods
mov
or
cmpsl
enter
jecxz
pop
xchg
sbb
xlat
daa
or
dec
cltd
aam
cmp
xchg
fstps
fisttpll
push
ss
rclb
jle
leave
push
cmc
jo
jmp
ja
mov
xor
push
icebp
pushf
lea
shlb
mov
sbb
adc
test
sar
cld
insb
fidivrs
aas
andl
add
aas
repz
lahf
cld
inc
mov
shlb
imul
jnp
mov
or
das
sub
filds
in
and
lret
loop
dec
clc
or
pushf
pop
int3
and
addr16
cmp
lret
lods
xchg
fidivrs
rcll
gs
push
out
ret
push
jne
flds
repz
adcl
repz
sbb
xchg
hlt
pop
lahf
repz
and
jbe
mov
mov
cmp
insb
pop
adc
les
ljmp
leave
outsb
ljmp
adc
mov
dec
mov
in
outsl
nop
ret
push
dec
das
mov
mov
in
insl
sbb
mov
push
cmc
jnp
test
add
cmc
xchg
add
jo
jns
add
stos
inc
push
insb
push
mov
xor
xor
mov
enter
jg
and
std
popf
mov
ds
push
dec
mov
mov
lods
or
scas
fs
xchg
sub
fdivr
stos
das
dec
cmpsb
xchg
cwtl
out
into
in
mov
faddp
outsb
movsb
stos
je
adc
jbe
jecxz
cwtl
xchg
add
aam
mov
inc
pop
push
pop
cmpl
inc
add
fdivrl
in
cmc
outsb
cmp
mov
cwtl
push
mov
push
jb
enter
in
fs
jae
daa
cmp
inc
dec
cmp
pop
push
sub
int3
jl
into
ja
pop
mov
push
xchg
adc
xor
add
push
pusha
cli
or
aaa
in
ss
adc
push
in
pushf
fmull
test
add
in
xor
add
cmpsb
dec
fcompl
mov
cmp
mov
pusha
cmp
or
outsl
in
aaa
mov
repnz
dec
imulb
cmp
loopne
into
adc
test
add
sub
faddl
outsl
xor
dec
inc
adcw
mov
mov
popa
lret
es
dec
sbb
testb
daa
popf
mov
push
sub
out
mov
mov
inc
jnp
jo
arpl
inc
jns
scas
mov
popa
jne
scas
xlat
jae
nop
mov
push
pop
jge
push
push
outsl
stc
xchg
pop
scas
fsts
push
daa
sbb
mov
cmpsl
orl
push
insl
xor
xor
hlt
push
sahf
dec
out
xchg
ret
in
sahf
int
fbstp
sub
cs
jbe
xchg
and
stos
mov
sub
fnstenv
ja
jne
dec
push
popa
ljmp
es
mov
fdivl
in
les
jg
lahf
and
jle
in
cmpb
loope
aas
push
icebp
jae
cmp
stos
enter
mov
rcll
cmpsl
mov
push
testl
jb
dec
dec
xor
es
movsb
jno
cmp
xor
imul
mov
ljmp
sub
ds
ja
mov
addr16
aaa
rcrb
stos
shl
adc
aad
mov
jb
jge
and
cltd
nop
xor
jecxz
out
lret
adc
mov
push
lret
push
mov
ret
and
xor
int
outsb
shl
cltd
xorb
bound
jne
xchg
mov
jle
cltd
enter
dec
scas
pop
xchg
aaa
aas
dec
dec
into
test
mov
jo
pop
jne
dec
dec
sbb
fdivs
add
mov
xor
stos
add
lahf
shlb
cmpsl
add
sti
lea
popf
cwtl
xlat
insb
push
int
jne
xlat
pushf
in
test
cmp
adc
push
shrb
mov
stos
sbb
insl
mov
pop
push
mov
mov
add
sbb
sub
mov
inc
repnz
in
xchg
es
cmp
loope
cmc
shrb
or
jmp
fbstp
lahf
insl
sahf
cmpsb
ljmp
testb
movsb
std
in
iret
std
test
mov
jo
inc
pop
cwtl
sahf
add
aaa
pop
xchg
loope
cmc
fsubrl
adcl
cli
jb
pop
cmpl
mov
dec
int
jne
sbb
imul
fistps
xchg
add
into
adc
adc
cmp
jl
sahf
jge
fiaddl
mov
lret
movsl
sbb
jg
add
xor
push
repnz
cmp
rolb
mov
sbb
jle
ret
xchg
cmp
dec
mov
fs
adc
add
cli
jnp
xchg
xchg
clc
test
cli
gs
or
mov
daa
shr
cltd
scas
jbe
stos
call
inc
ret
mov
adc
stc
adc
jecxz
mov
aam
outsb
jae
adc
outsb
popf
aad
cmp
repnz
mov
cli
dec
rcr
sbb
sub
imul
enter
testl
in
or
mov
xchg
imul
psubsb
movsl
shrb
pop
mov
out
imul
test
cmp
call
sbb
add
inc
movsl
arpl
sbb
adcb
in
cmp
addr16
shlb
js
mov
sub
sub
hlt
lahf
inc
pop
aam
gs
or
sub
imul
movsb
jno
inc
cmp
fwait
scas
pushf
mov
cli
cmp
lods
pop
ja
mov
jle
mov
aaa
cmpsl
in
jmp
aam
xchg
imul
xor
cmp
int
fsubl
lds
insl
mov
xchg
loop
adc
mov
ljmp
setae
xor
sbb
int
or
push
dec
sbb
repnz
sbb
js
mov
pop
jl
inc
aaa
mov
fs
repnz
adc
jo
roll
cmpsl
sub
int3
cmc
xlat
jecxz
stos
cmp
cmp
add
jnp
ja
xor
and
aaa
adc
out
dec
sub
cmp
and
mov
sbb
sub
cmp
sbb
xor
and
lea
mov
sbb
sub
dec
ds
lcall
push
cs
fisubrl
mov
aas
cwtl
mov
je
xchg
test
mov
test
mov
adcl
rclb
add
popa
xlat
fs
mov
imul
jmp
push
jle
xchg
mov
stos
lret
aad
jne
in
ficomps
pop
leave
jnp
mov
movsb
xor
icebp
pop
gs
and
fdivp
ret
js
adc
fs
sahf
and
out
add
sub
adc
jmp
cmpsb
or
dec
dec
sti
cltd
inc
enter
insb
and
loope
test
int3
test
imul
ljmp
fidivl
jns
lahf
or
shrb
xor
out
in
dec
mov
and
test
add
jne
and
add
loop
adc
add
pop
xor
lret
mov
mov
shrb
pop
cli
mov
out
xchg
idivb
mov
jl
add
and
sub
mov
cmp
mov
mov
repz
mov
inc
pushf
ret
xlat
mov
adc
jo
lods
pop
fcmovu
mov
movsb
mov
imull
outsl
jo
jmp
jb
or
hlt
mov
icebp
cli
push
mov
xchg
mov
getsec
push
sahf
aad
lahf
mov
jb
adc
sub
aad
arpl
repz
in
fbld
jo
mov
fwait
je
outsb
pop
or
mov
in
mov
repnz
xor
mov
mov
mov
mov
outsl
out
cwtl
pushf
pop
mov
ljmp
lock
add
mov
shll
imul
xchg
pop
mov
mov
and
and
xchg
pop
test
les
pop
ja
lahf
dec
pop
jecxz
das
subb
sarb
fcompl
in
inc
in
xchg
push
stos
dec
pusha
insb
cltd
push
mov
sub
out
ljmp
pusha
or
jbe
inc
or
inc
xchg
in
test
push
or
out
xor
in
inc
jp
je
call
push
mov
inc
mov
jne
fisttps
xlat
pop
pop
dec
sbb
es
mov
in
lock
leave
es
xor
adc
cmp
gs
jg
cmp
test
mov
jnp
push
jbe
ss
insl
dec
jne
cld
imul
mov
addr16
adc
cmpsb
shlb
mov
xor
mov
sarl
mov
sbbb
pop
popf
pusha
dec
or
mov
movsb
lcall
xchg
push
and
lods
pop
ds
das
jg
xchg
jge
push
sbb
popl
mov
loope
lret
inc
add
insb
dec
xchg
jb
jg
sbb
ret
hlt
jp
jge
pop
fwait
movsl
push
push
pop
out
pop
xchg
in
fucomip
int3
out
idivb
adc
enter
xor
cmpsb
sub
sbb
sub
push
insl
fbstp
jle
mov
int3
push
inc
filds
jnp
jmp
xlat
addr16
pop
cmp
in
lods
nop
jmp
jb
mov
dec
xor
repz
dec
mov
or
pop
mov
or
push
mov
int
push
test
ret
cmc
or
ret
jge
pop
mov
dec
push
imul
stos
popa
mov
inc
adc
and
call
push
dec
pop
mov
repnz
cmp
add
adc
jno
sti
lods
sub
bound
mov
repnz
mov
rol
add
ss
outsb
jbe
xor
sbb
xchg
mov
insb
rcl
repnz
xchg
pop
or
into
divps
imul
add
xchg
jle
aaa
sahf
rcr
mov
sbb
dec
cli
jbe
stos
fwait
dec
jnp
stos
sti
iret
lahf
dec
lret
pop
insb
jl
xlat
mov
out
or
adc
xchg
out
mov
sahf
test
push
jmp
andb
jmp
mov
and
pop
xchg
scas
pop
inc
adc
or
rcrb
stos
mov
mov
out
leave
or
and
insb
insl
mov
popw
mov
stos
jecxz
sbb
test
and
cmpsl
pop
or
das
pop
in
outsb
push
mov
and
mov
add
mov
cmp
lcall
movsb
adc
call
fidivl
pop
imul
loope
fwait
cmpsl
mov
das
jmp
stos
nop
or
stos
dec
lods
into
popf
mov
stc
clc
popf
imul
aaa
aaa
std
jns
in
mov
xchg
xchg
and
fcoms
mov
pop
xor
and
out
shll
cmp
std
lcall
adc
fistps
sub
push
sti
and
adc
fwait
add
pop
push
xorl
int3
in
loop
jne
xchg
popa
pushf
aam
jno
ja
mov
popl
adc
push
push
add
dec
stos
mov
cld
pop
push
js
mov
dec
popf
sub
setb
je
xchg
jmp
iret
cmp
in
push
xor
inc
loopne
aad
xchg
adc
das
fxch
or
int
filds
push
rol
mov
or
icebp
aad
pop
push
sbb
mov
iret
push
pop
sub
inc
shll
jae
add
mov
xor
iret
enter
movsb
mov
pop
mov
imul
mov
dec
mov
sbb
push
aas
sub
in
mov
sbb
and
push
fisttpl
aam
icebp
push
lahf
int
aaa
shlb
iret
jg
inc
popa
jp
in
lret
mov
cmpsb
lods
test
xchg
sub
inc
std
jp
inc
sbb
inc
cmp
adc
xchg
inc
mov
leave
push
lds
inc
in
mov
mov
stos
mov
repz
jns
in
js
push
add
cmp
pop
cli
mov
lret
mov
mov
psraw
push
mov
dec
in
mov
and
pop
fsubrs
scas
and
push
cmp
cmp
dec
and
jmp
in
inc
aad
pop
outsl
repz
cli
inc
push
cltd
shll
movsb
les
mov
cmp
mov
loope
xchg
mov
cmp
sarb
jmp
inc
jmp
lcall
add
cmp
outsl
push
cmp
mulb
js
lea
rorb
dec
sub
mov
xlat
push
ljmp
sub
cmp
add
push
orb
inc
adc
mov
sub
mov
pop
nop
push
les
ljmp
xchg
hlt
push
xchg
loopne
xchg
mov
incl
xor
popf
movsl
sbb
iret
movsb
ss
movsb
fs
and
jno
pop
cmpsl
pop
movsl
push
and
lock
out
ljmp
jne
mov
and
mov
aam
fisttpl
pop
test
in
add
lods
in
pop
lcall
xchg
outsb
sbb
and
mov
les
outsl
xor
xor
xchg
inc
jl
lcall
movsl
in
xchg
out
insl
mov
inc
xchg
imul
mov
aam
mov
push
enter
push
push
test
call
int3
lea
popf
jnp
xlat
je
push
rcrb
add
adc
loope
nop
scas
mov
lea
pop
inc
dec
stc
sarl
jnp
add
leave
jb
sub
shr
mov
fsubrs
xor
pop
mov
push
cmp
popa
insb
push
enter
dec
pop
idivl
xchg
dec
ljmp
mov
mov
inc
sub
mov
shlb
mov
sbb
mov
xor
pop
pop
jnp
test
icebp
xchg
xchg
mov
lret
test
rcr
or
pusha
imul
stos
pop
dec
adc
int3
mov
call
inc
add
mov
xchg
pop
and
jno
cwtl
adc
repnz
pusha
cwtl
and
mov
fs
inc
out
scas
mov
inc
int3
cld
xor
test
out
fstl
pop
add
and
pushf
mov
or
pop
xor
dec
cmp
add
jl
fdivrs
mov
xor
inc
icebp
or
xorl
and
iret
sub
mov
push
adc
jl
fs
repz
cmp
ret
cltd
ja
test
shrb
cmpb
xchg
fidivl
daa
in
pop
fldcw
adc
dec
jg
inc
mov
dec
mov
cmp
cmp
data16
jp
sub
inc
push
in
stos
sbb
xor
or
mov
add
popf
leave
pop
bound
icebp
sbb
cmp
in
add
add
jae
imul
xchg
jl
inc
add
pusha
cld
jo
iret
mov
xchg
mov
enter
mov
cpuid
fbstp
in
lretw
xchg
push
xchg
xchg
xor
lret
xchg
ja
imul
popf
lods
xchg
pop
mov
push
or
mov
pop
sarl
dec
loope
add
xchg
pushf
shrl
sbb
inc
cwtl
jmp
fidivrs
lcall
lock
test
pop
rcll
pop
idivl
jle
gs
adc
mull
stos
dec
jne
jl
push
mov
sbb
and
mov
jnp
pop
mov
sub
out
jle
inc
sbb
add
in
imul
fwait
dec
and
inc
nop
push
iret
sub
in
shll
dec
fsubr
lcall
pop
fwait
sub
mov
test
ss
sub
lods
cmpsl
nop
outsl
popa
or
push
mov
mov
push
mov
jae
out
mov
loopne
fsts
and
and
mov
jl
das
mov
and
pop
insl
int
jae,pn
imul
iret
shrb
jo
int
test
sub
lret
lahf
add
inc
xchg
outsb
adc
or
jne
popa
dec
and
inc
shlb
pushf
push
fs
pop
xor
mov
sbb
cmpsb
xchg
test
sub
and
test
pop
aam
imul
push
lahf
push
imul
jge
cmp
adc
mov
mov
or
clc
es
insl
adc
iret
and
enter
dec
insl
outsl
or
pop
sarb
sbb
repnz
jno
inc
cli
inc
sub
pop
push
arpl
lds
stos
mov
lock
and
sbb
je
pop
stc
fmuls
aad
xor
add
jle
dec
mov
in
adc
daa
mov
fbld
ficoms
jle
cmp
and
shrl
jp
push
lea
dec
and
enter
out
out
loop
mov
sbb
mov
in
clc
movsl
fs
pop
rcrl
adc
ror
icebp
addr16
jb
xor
push
push
jmp
inc
sti
mov
fs
mov
jg,pt
les
inc
mov
dec
sub
xor
shlb
pop
cs
aam
jbe
cmp
or
stos
push
jle
pop
test
xchg
mov
xlat
lock
or
std
pop
lods
add
shll
jno
jbe
pusha
xor
pop
dec
lret
loop
or
lea
add
mov
ss
xchg
cmpl
scas
in
popf
enter
push
in
xchg
sbb
divl
xchg
lds
sub
mov
add
mov
xor
out
or
xchg
cmp
std
inc
lcall
cmp
xor
sbb
out
mov
fidivl
fmull
icebp
es
dec
int3
aas
nopl
addr16
pop
out
and
adc
pop
rcll
rol
int3
lods
icebp
fucomp
push
sub
out
call
sbb
jns
cmp
inc
jmp
push
into
add
cmc
xor
pop
imul
sub
xor
fs
mov
dec
mov
repnz
mov
aas
sub
clc
cmp
sub
adc
popa
mov
imul
movsl
jp
cmp
adc
rcrl
push
inc
scas
dec
cmc
pop
sbb
insl
add
les
outsl
ja
xor
xchg
add
jp
pop
leave
bound
pop
popf
and
pop
pop
jne
push
ret
popa
or
jb
scas
lock
jno
xchg
mov
xor
lds
pop
inc
mov
xchg
rorl
or
ja
ss
jb
inc
and
and
inc
outsb
sbb
sub
hlt
cwtl
mov
xchg
repz
int3
mulb
lods
mov
mov
ret
sbb
outsb
je
jbe
in
inc
cmpsl
cmp
and
imul
pop
test
add
mov
loop
bound
ret
inc
push
push
inc
fisubl
dec
inc
incl
outsl
and
scas
xchg
cmpsb
enter
push
test
jno
xchg
ret
sub
bound
cmp
cwtl
lea
stos
add
pop
mov
push
ficompl
lds
cwtl
out
and
mov
mov
scas
fs
out
xor
jmp
movsl
popf
or
jae
push
xchg
test
dec
cmp
sub
xor
das
jbe
cmp
or
add
dec
imul
ds
int3
xchg
dec
insb
sbb
int
xchg
out
pusha
rcr
fwait
xchg
adc
mov
dec
lret
js
jne
adc
ds
scas
scas
jns
aam
testb
scas
jne
aad
or
seta
sub
div
xchg
pop
and
mov
ret
lahf
sbb
xchg
xor
push
sub
sbb
push
int3
inc
add
pop
adc
loope
add
mov
jmp
jbe
imul
pop
outsl
xchg
fadd
cmp
xor
aas
xor
push
lret
pop
inc
or
fs
pop
jno
add
dec
xchg
ret
lds
ds
enter
mov
and
add
lods
pop
ja
pusha
inc
adc
mov
push
jl
and
sahf
inc
aas
lret
mov
adc
in
jno
cmpsb
movsb
je
jp
lds
sbbl
cs
mov
push
test
dec
xor
sub
in
mov
in
inc
pop
mov
loope
push
filds
out
outsb
incl
dec
add
mov
jl
sub
pop
sbb
push
cli
ja
ficompl
jmp
and
push
sbb
sbb
jne
fsts
add
xor
xor
dec
xchg
pop
and
notl
xchg
aad
pop
pop
xchg
lock
add
push
xchg
hlt
or
ret
mov
xor
inc
inc
xchg
or
test
dec
fisubl
sbb
sub
lahf
or
les
pop
mov
pop
shrl
ds
mov
test
mov
sbb
cmp
mov
xor
mov
ljmp
cs
into
pop
out
xor
add
addb
and
adc
lret
inc
cs
jns
mov
loop
mov
popf
int3
outsb
xor
dec
cld
les
rorb
push
mov
mov
or
repz
mov
fidivrs
xor
fiaddl
mov
add
loop
leave
xor
jno
adc
mov
sbb
xor
pop
mov
inc
push
lock
xorb
adc
xor
pop
xchg
mov
adc
jo
pop
and
xchg
test
mov
ljmp
adc
sub
out
sbb
cmpsb
leave
cld
dec
sub
push
and
xor
push
aam
sbb
sub
jp
movsl
push
test
push
and
mov
sbb
cmp
cwtl
add
mov
rolb
or
into
test
in
ja
sahf
loope
add
or
push
dec
out
add
or
in
sbb
xchg
and
push
mov
jbe
repnz
mov
data16
or
add
or
aas
jge
pop
inc
dec
fwait
mov
lret
cmc
cmp
inc
adc
xchg
jmp
sub
push
lock
mov
sub
dec
imul
dec
cld
fcom
ret
adc
push
xchg
inc
outsl
rcl
sub
sub
xchg
leave
cmpsl
xlat
cmpsl
jns
dec
std
in
js
into
lret
sub
lcall
and
loope
cli
pop
jns
test
dec
ret
inc
imul
push
hlt
data16
mov
out
imul
push
mov
push
pushf
clc
push
iretw
scas
ficoms
ljmp
xor
push
sbb
jmp
sbb
sarb
and
cvtdq2ps
mov
das
dec
jecxz
mov
add
dec
insb
sti
cs
out
rcrb
lret
push
mov
shlb
jbe
cmp
mov
cli
repnz
push
outsb
out
ret
xor
push
push
mov
dec
adc
or
push
cltd
adc
dec
add
cmp
fstpl
push
push
pop
cld
movsl
mov
dec
or
stos
shrl
push
hlt
pusha
movsb
leave
outsb
mov
shll
in
test
sbb
sbb
in
pushf
aas
ret
repnz
clc
loope
shlb
mov
adc
stos
int
dec
movsb
pop
mov
cmp
lahf
insl
and
add
add
pop
iret
fcoms
xor
lock
push
inc
push
repz
hlt
leave
xchg
int3
mov
dec
mov
mov
sti
aas
cmpxchg
movsl
mov
add
xchg
enter
hlt
lret
and
lds
out
mov
outsb
les
push
mov
add
movsl
xor
push
inc
and
jl
outsb
mov
cmp
lea
pop
inc
stos
pop
jo
add
out
xchg
out
pop
mov
pop
test
mov
inc
inc
arpl
pusha
cmpb
push
rolb
sbb
inc
and
test
scas
in
icebp
push
dec
xor
out
idiv
sub
loop
xchg
popa
add
repnz
adc
jne
sub
out
pop
adc
ror
out
pop
jae
insb
jne
jmp
loop
or
sbb
xor
lcall
xchg
pop
mov
sbb
lcall
pop
push
idivb
std
adc
ja
fxch
rolb
sub
mov
outsb
lahf
call
pop
jl,pn
adc
orb
adc
mov
addb
enter
das
out
xchg
loope
ljmp
shrl
movsl
lahf
jae
popf
inc
out
pusha
jmp
test
mov
jns
incb
add
ficomps
cmp
or
pop
leave
and
divb
jns
lret
fisubrs
test
arpl
lods
pop
xchg
fnstsw
and
lahf
adc
in
xchg
adc
push
out
rcl
mov
jbe
sbb
andb
movsl
push
adc
inc
cmp
clc
adc
cmp
pop
dec
and
aaa
nop
fdivrs
and
mov
loopne
in
sbb
gs
jne
rcr
pop
cmp
loopne
lock
and
mov
dec
jne
and
fldt
les
push
pusha
sbb
stos
icebp
leave
aas
inc
adc
inc
js
call
mov
dec
ret
add
jg
push
outsb
push
push
fisubl
dec
loope
dec
test
add
mov
and
cmp
in
sti
shrl
insb
xchg
dec
dec
jno
pop
out
push
cmp
dec
sub
call
fwait
lods
and
fldcw
cmpb
xrelease
mov
cmp
sbb
mov
filds
xor
pusha
pusha
scas
mov
gs
lods
cwtl
cmp
pop
ss
lret
jge
insb
rcll
add
jle
jp
jb
and
pop
cmp
push
mov
add
push
xor
stc
cmp
xor
mov
fistps
std
lods
pop
fs
sbb
imul
pushf
stos
aad
loope
out
xor
out
jne
mov
cwtl
xlat
dec
cmpb
inc
fdiv
xchg
jno
adc
xlat
cmp
cltd
cmp
push
rcl
ficoml
and
jb
and
adc
pop
xlat
fisttpl
movsl
rol
arpl
jns
sub
jb
inc
fld
cmp
pop
push
dec
hlt
ljmp
std
mov
or
mov
out
xchg
push
shlb
mov
pushl
jns
cmc
inc
inc
loope
pop
ljmp
inc
xchg
hlt
push
lods
dec
sbb
and
cmp
jne
sub
enter
daa
dec
imul
ret
repz
lret
daa
lret
popf
pop
aaa
cmp
sbb
daa
out
pop
or
and
add
xchg
or
mov
jg
dec
or
cmpsl
ret
jo
mov
daa
dec
hlt
in
imul
stos
xlat
mov
insb
xchg
rcrl
add
movsl
inc
adc
jo
rcr
jmp
outsl
mov
ds
cmpsb
pusha
dec
mov
mov
scas
sbb
cmp
dec
shrl
mov
int3
adc
dec
or
pop
inc
adc
dec
jae
je
sub
mov
cmp
lret
adc
test
or
daa
ret
mov
pop
add
jns
sub
loope
cmp
pop
xor
into
adc
push
jae
pusha
and
jmp
push
jb
daa
dec
sahf
add
add
or
test
cmp
fs
clc
jg
in
mov
cltd
jg
sbb
test
pop
push
cmpsb
or
mov
js
in
mov
mov
jb
inc
pop
pop
pop
or
dec
out
sub
or
add
ljmp
inc
xor
adc
into
xor
clc
cmp
jno
dec
or
xchg
and
rolb
enter
shll
jnp
lock
xor
mov
xchg
lret
add
stc
cwtl
cmp
jl
outsl
and
mov
enter
pop
jo
es
push
or
fmull
repnz
rol
push
out
sbb
sbb
addb
cmp
sub
mov
call
mov
out
sbb
xchg
jb
jae
stos
mov
shll
jle
lods
pop
xchg
inc
in
mov
inc
fwait
decb
adc
dec
mov
sbb
sub
pop
mov
push
and
xchg
push
mov
pusha
add
and
add
rcrl
enter
cwtl
bound
mov
xor
mov
xorb
cmp
mov
dec
mov
dec
lea
inc
test
push
push
loopne
jnp
jo
sbb
pop
push
mov
mov
call
and
mov
std
jne
dec
aam
pop
and
sub
jo
inc
push
cltd
lahf
pusha
imul
movsl
sarb
pop
or
test
lahf
mov
push
loopne
sub
aam
dec
movsb
test
mov
jae
pop
and
or
arpl
shll
lea
jge
pop
insb
das
add
xchg
loopne
dec
lcall
push
enter
sar
jns
fistps
push
pop
dec
js
rcrb
mov
fidivrs
pop
push
in
mov
out
scas
mov
push
dec
pop
sub
in
filds
xchg
pop
js
or
call
mov
sti
jle,pt
dec
ret
jl
scas
cmp
es
push
mov
jecxz
repnz
nop
jmp
mov
stos
cld
mov
fldt
imul
sbb
iret
sbb
test
mov
sbb
ss
stos
cwtl
shrl
xchg
mov
xor
fcompl
movsb
and
hlt
jae
mov
xor
outsb
xchg
sub
jle
andl
xchg
mov
shlb
push
movsb
fldz
mov
add
rorl
es
mov
arpl
jmp
imul
repz
ja
add
sti
aaa
push
sarb
push
jno
hlt
mov
int3
mov
jl
push
movsb
add
mov
add
iret
movsb
cmp
es
pop
enter
imul
and
xor
xchg
sub
js
or
xchg
out
test
cmp
adc
sbb
adc
inc
int
inc
cmc
movsl
dec
into
cmp
adc
imul
fwait
int
mov
icebp
xchg
daa
pop
stos
dec
xor
inc
pusha
add
push
cmp
test
jecxz
out
icebp
scas
mov
test
add
ja
idivl
inc
in
jg
hlt
pop
inc
or
jge
dec
addr16
sub
mov
cmp
scas
testb
mov
mov
fwait
loop
sbb
inc
or
cli
push
insl
mov
jmp
dec
clc
push
into
icebp
test
sarb
hlt
mov
dec
enter
push
cld
sub
jno
cmp
jo
mov
bnd
xlat
jg
xor
shll
jne
jecxz
cmpsb
xor
xor
mov
mov
das
mov
jmp
fsts
fwait
inc
and
call
xchg
xchg
jne
stc
ror
enter
or
mov
popf
fcoml
mov
loopne
mov
mov
and
std
cmp
dec
cmpsb
aas
pop
repz
inc
hlt
push
adc
and
hlt
scas
push
pop
adc
or
pop
repz
xor
push
mov
add
fwait
or
fcomps
xor
daa
mov
cmpsb
mov
fwait
in
imul
cmp
xor
cmpsl
add
jns
ret
sbb
subb
pusha
hlt
jbe
cmp
dec
cmp
movsl
and
rcrl
xor
xor
add
jecxz
and
data16
push
mov
stos
pop
imul
dec
adc
das
imul
nop
push
insl
sti
mov
push
mov
loop
jbe
loopne
repz
das
lahf
call
sbb
mov
cwtl
std
mov
scas
sbb
andl
xor
inc
les
jbe
rclb
jmp
cwtl
sbb
xorb
jg
rcll
aad
add
xchg
xchg
pop
or
sbb
loopne
ljmp
inc
pushf
fs
jle
pushf
jne
fsubs
mov
jnp
test
mov
ss
jg
mov
lret
sbb
xchg
fucomip
rolb
fcomps
cmp
fsts
sbb
fcom
lret
int
push
pop
dec
dec
pop
sub
and
js
add
pop
fisttps
inc
mov
and
mov
inc
add
adc
or
push
mov
or
mov
sub
sub
sub
int
mov
bound
sbb
xor
xchg
cld
inc
xor
or
jmp
cmc
inc
out
jno
in
ret
xchg
add
int
int3
clc
daa
mov
inc
mov
jmp
cmc
stc
jb
jp
mov
aam
push
test
nop
xor
hlt
ja
mov
incl
xchg
cltd
sub
je
es
in
into
jle
scas
jge
pop
mov
jbe
pop
pop
out
pop
mov
in
repnz
aad
push
inc
arpl
lock
sbb
dec
sarb
pop
cmpl
sti
mov
sbb
inc
jae
jb
mov
inc
cmpsl
sahf
mov
or
pop
add
test
mov
pop
es
jecxz
cltd
out
inc
xor
xor
push
jno
out
daa
inc
test
jp
jl
addr16
movsb
fimull
lods
std
jbe
cmp
jb
jmp
push
outsb
aad
sbb
sub
sub
or
mov
popa
adc
rcl
sbb
out
adc
jge
js
sub
ss
mov
pop
stos
pop
in
or
aaa
jle
fs
pushf
mov
std
scas
hlt
mov
jg
mov
js
ficoml
psrld
add
arpl
mov
jl
push
rclb
std
mov
add
xchg
orb
sbb
and
xchg
test
mov
es
repz
adc
cmp
sbb
icebp
std
xchg
jmp
outsb
xor
cmp
jns
push
sub
mov
cmpsb
dec
pop
lcall
mov
mov
push
out
inc
rorl
push
repnz
mov
push
sbb
xor
jnp
fwait
sub
js
pop
xlat
inc
mov
outsb
aaa
movsl
inc
xor
pop
scas
ja
subl
jbe
pop
and
mov
mov
add
lcall
pop
inc
scas
fcomip
cs
movsb
xchg
shlb
dec
fadds
inc
pop
and
xor
dec
call
pop
mov
movsb
sbb
outsb
xchg
jecxz
push
mov
mov
ret
mov
sub
js
aad
add
in
add
cmp
push
push
add
adc
scas
push
mov
mov
lods
leave
add
loope
sub
mov
testl
push
xchg
pop
ds
mov
lcall
or
cli
fs
sub
pop
test
mov
jbe
xlat
mov
or
ljmp
shrl
sbb
cmpsl
lcall
in
mov
dec
mov
dec
sarl
arpl
js
xor
mov
push
xchg
cli
shrb
xchg
or
sbb
push
pop
fdivrl
fxch
test
leave
je
lret
push
jb
mov
mov
aam
sysexit
not
xor
enter
add
mov
xchg
xor
sbb
xchg
pop
jg
sti
xchg
pop
fstpt
inc
inc
jg
lods
call
ds
cli
push
js
fisubl
jbe
xor
insb
lods
popf
cmp
aam
push
adc
cmp
xor
dec
cmp
iret
add
shll
add
aad
adc
and
or
xchg
repz
iret
orl
jecxz
ss
mov
sub
lret
js
shll
arpl
sbb
xchg
add
icebp
adcl
popf
add
popa
mov
aas
dec
daa
in
scas
in
mov
imul
sub
sub
ret
sub
or
xchg
sub
std
pop
test
lcall
adc
pushl
lock
dec
pop
rcll
mov
ds
xchg
dec
cmpsb
out
outsl
loopne
xchg
ret
clc
mov
fs
jecxz
aaa
jl
sub
out
shrb
aad
mov
jne
push
sbb
out
dec
push
nop
push
gs
jle
push
fcoms
adc
nop
mov
push
cmp
mov
sub
sahf
xchg
cmp
loopne
je
sbb
inc
ret
or
scas
js
xor
and
cmc
ss
and
inc
pop
fidivl
in
rcrl
adc
test
fildl
dec
jle
mov
mov
pop
mov
lahf
inc
xor
in
xorl
fists
bound
xchg
cmp
fcmovu
data16
and
and
addr16
adc
mov
xchg
int3
ret
loope
stos
popf
add
mov
cmp
jne
jl
nop
aam
xchg
loope
clc
sbb
xchg
lods
or
cli
inc
pop
push
cmp
orl
push
bound
movsl
rorb
mov
cmp
jne
loope
dec
jl
ja
fucomp
popa
pop
stos
xchg
repz
lods
in
ja
cmp
imul
pop
jl
jp
jle
inc
inc
cmc
testl
xor
out
sbb
push
ucomiss
nop
or
loop
out
jg
push
sbb
add
add
int3
mov
push
xchg
flds
fisubrl
mov
jns,pn
jge
aas
push
or
mov
jg
pop
sarl
inc
out
mov
gs
sbb
pop
inc
sub
fcompl
dec
fistl
bound
jns
sbb
lret
imul
lret
out
add
and
xor
dec
mov
jns,pn
mov
test
mov
int3
or
imul
orl
int3
mov
repz
rcr
adc
cmp
movsb
push
loope
pushl
xor
or
scas
pop
sub
xor
jae
mulb
push
push
popl
mov
inc
lcall
inc
push
in
iret
pusha
cmpsl
dec
or
or
and
push
pop
aam
dec
pop
loope
jno
sub
push
mov
stos
into
mov
add
iret
sbb
jns
cmpsb
jecxz
jnp
mov
xlat
sbb
in
stos
xchg
fldcw
xchg
dec
cmp
push
inc
fst
icebp
sbb
sub
jl
fisubl
out
ljmp
push
test
pop
and
test
subl
xchg
shrl
or
sbbb
out
mov
inc
and
pop
jl
stc
inc
add
inc
in
rcl
jo
fs
mov
push
scas
push
mov
cmc
int
dec
faddl
subl
ja
push
jle
xchg
add
movsb
pop
mov
pop
add
pop
sbb
jle
sub
jmp
movsb
mov
xor
mov
dec
add
push
cli
mov
rorl
jle
aam
add
mov
cmpsb
mov
lds
call
bound
dec
sub
mov
adc
daa
mov
dec
lods
out
hlt
mov
sbb
stc
test
iret
lds
inc
sti
and
pop
loope
pushf
xchg
fidivl
mov
adc
cmove
add
shl
out
aas
test
pop
cs
std
sbb
inc
cwtl
sbb
leave
in
scas
fwait
test
push
sbb
inc
shrl
xor
push
and
sbb
lret
mov
and
sub
dec
lock
sub
pushl
loopne
mov
dec
pushf
mov
iret
in
and
cwtl
mov
outsl
jbe
cmp
xchg
inc
fs
inc
mov
push
add
push
jge
jb
adc
sbb
dec
leave
subl
mov
sub
mov
or
adc
stos
jne
popa
and
sub
mov
mov
std
jno
jno
push
push
push
inc
imull
push
push
out
sub
push
mov
ljmp
fdivs
inc
insb
leave
or
repz
mov
mov
xchg
idivb
ficompl
mov
or
mov
lock
mov
stc
les
xor
xchg
sub
ret
mov
cmpsb
jo
add
mov
mov
or
das
frstor
sub
fdivs
sbb
mov
push
or
das
repnz
sub
shlb
rcrb
fadd
jge
loop
add
mov
out
xchg
aas
jp
lret
mov
mov
add
xchg
mov
cmp
jg
lds
pusha
push
mov
mulb
mov
cmpb
xchg
ret
fldenv
movsl
mov
ja
jbe
jge
je
push
cmp
aas
mov
sbbl
inc
mov
imul
fiaddl
xchg
jle
lea
push
pop
mov
or
js
xor
xor
push
mov
push
imul
sub
ret
shll
sub
mov
rcrb
mov
inc
sbb
push
pop
or
cli
pop
push
loope
fnstenv
pop
rcrl
mov
test
and
test
push
sub
bound
es
addr16
add
ret
jp
sbb
push
testl
in
js
rclb
icebp
lahf
dec
test
out
sbb
cmpsb
mov
push
xor
adc
or
mov
lret
int3
and
mov
fwait
bound
dec
jb
xabort
sbb
sbb
addr16
adc
mov
mov
xor
and
pop
push
dec
dec
ss
hlt
xchg
pusha
mov
cmovge
add
arpl
xchg
or
jbe
sahf
mov
daa
dec
test
jge
out
jmp
lock
loopne
popf
or
pop
imul
xchg
out
sub
popl
jnp
ss
pop
adc
test
lds
xorb
jmp
or
mov
sub
neg
mov
fdivr
sbb
pop
pusha
imul
sahf
mov
setns
inc
je
pushf
insl
fmull
push
jns
js
push
cwtl
das
lock
or
xor
insl
das
add
adc
stc
inc
les
pop
sbb
hlt
adc
pop
adc
int3
fstp
or
cli
mov
inc
test
lret
and
pop
ret
jne
ret
loopne
xor
jne
ljmp
mov
xor
mov
mov
push
sub
ret
les
pop
mov
mov
sbb
mov
mov
add
dec
jge
scas
outsb
dec
pop
or
adc
aad
mov
loop
adc
mov
cmp
push
ds
jle
xor
mov
test
fnstsw
xchg
stos
in
shlb
lcall
mov
pop
inc
fmulp
adc
jnp
std
mov
jecxz
gs
inc
test
push
ja
loope
adc
and
lods
gs
jnp
roll
push
cld
xchg
ss
add
les
pop
and
dec
sub
fs
aad
fsubr
sti
and
xor
lahf
pusha
mov
dec
add
add
fiaddl
jne
outsb
enter
xlat
sub
xor
push
sti
clc
idivb
xchg
into
jecxz
xor
imul
add
in
cli
and
ds
clc
nop
push
mov
add
rolb
in
fs
xor
movaps
cmpl
pop
add
dec
mov
aam
sub
aam
repz
test
mov
nop
jbe
aaa
loopne
jecxz
mov
mov
lret
sub
mov
push
dec
cld
cmpsb
in
cmp
gs
outsl
shlb
loope
and
push
jo
push
mov
adc
popa
cmpl
cs
js
and
add
pop
aad
outsl
or
push
stc
add
icebp
fstpt
std
sbb
jo
sbb
sub
mov
or
outsl
add
dec
test
outsl
lods
jg
vcvtpd2dqy
dec
push
or
rcll
or
mov
clc
fists
dec
sub
lock
inc
jle
adc
mov
jne
xchg
movl
pop
or
loope
inc
xchg
pushf
das
popa
pop
sbb
mov
in
in
jp
popa
pushf
loop
add
mov
cmc
and
lret
aaa
mov
cmp
push
xor
push
sahf
repz
mov
sbb
sub
ljmp
cmpl
cmpsb
pop
fadds
mov
and
push
push
decb
sub
pop
xor
scas
inc
iret
rcrl
mov
xchg
insl
add
cmp
popa
and
cs
ficoms
pushf
sbb
gs
adc
std
shll
pop
lret
mov
es
mov
enter
loopne
mov
loopne
es
int3
xor
dec
fdivrs
out
insb
in
lea
out
subb
or
test
outsl
pushf
xchg
push
leave
daa
jbe
dec
loopne
jp
mov
ffreep
mov
into
stc
push
xlat
mov
outsb
lock
ret
sbb
jae
clc
mov
inc
pop
stc
sub
dec
jecxz
shll
gs
mov
mov
lret
dec
pop
lds
call
mov
and
sti
or
xor
cmp
or
mov
cmpsb
xor
xlat
lods
fsubrs
mulb
adc
cmp
push
jns
pop
xchg
inc
sets
cwtl
mov
ds
jecxz
out
movsb
push
into
cmpsb
sub
loope
push
xchg
mov
sarl
cmp
jb
push
out
fists
loope
adc
mov
shlb
push
push
jle
xchg
xchg
sub
test
aad
and
or
mov
add
jno
push
movsb
mov
pop
arpl
add
arpl
cmp
push
mov
popf
outsl
add
adc
lods
popf
icebp
or
push
cmp
insl
cmpsb
faddl
sbb
std
lods
out
inc
vmread
clc
jne
mov
push
pop
and
jmp
mov
push
sub
es
leave
test
test
xchg
pushf
cs
movsl
adc
adc
add
pop
fucom
shrl
add
pop
dec
xchg
movsb
push
lcall
mov
test
mov
mov
push
ret
fdivl
paddq
sbb
ret
in
add
jnp
mov
jbe
and
ficompl
inc
fprem
add
out
and
lahf
dec
dec
iret
jnp
sbb
sub
punpcklbw
in
lahf
movsb
pop
negl
push
cmp
inc
xchg
add
mov
cmp
cwtl
call
sub
jmp
call
aam
inc
repnz
imul
pop
repnz
mov
andl
add
xchg
inc
loopne
mov
mov
mov
add
xor
and
or
or
mov
mov
pop
mov
add
add
clc
mov
jg
mov
push
into
mov
xchg
andl
cmpsb
or
mov
adc
mov
mov
pushf
out
xchg
cmpb
cmp
inc
movsl
push
push
scas
sti
and
test
rorb
mov
addr16
mov
pop
repz
mov
stos
sub
aaa
xchg
ret
lret
xchg
or
scas
cmpsb
es
mov
mov
inc
cmp
popa
in
fcomp
mov
aam
rorl
clc
push
xor
or
popf
adc
fisubrs
jo
dec
insl
in
idivl
aad
pop
adc
jge
add
ss
jle
in
lods
and
xor
mov
aas
mov
insb
jmp
mov
xorb
sub
xor
pop
add
les
cmp
inc
iret
sbb
and
sub
push
dec
outsb
jne
mov
int3
sbb
lods
mov
push
stc
rorb
and
and
mov
jl
xchg
lret
and
adc
mov
pop
dec
sub
xchg
jmp
hlt
add
sbb
es
sub
jb
adc
mov
or
imul
sti
xorl
pop
jl
jns
mov
imull
aaa
mov
or
jns
movsl
xchg
dec
shl
inc
inc
daa
jno
xchg
insl
xlat
pop
jmp
inc
shll
sarl
scas
dec
mov
cmp
add
ljmp
and
cmp
iret
ljmp
in
jno
jl
dec
sub
std
inc
lds
sbb
movsl
jge
jo
mov
push
scas
and
repz
int3
add
xchg
fsubrl
inc
add
mov
dec
mov
pop
call
stc
cs
ljmp
dec
mov
into
mov
jo
xor
and
dec
jge
shl
xchg
dec
sbb
xor
dec
aas
dec
inc
adc
pop
lahf
cmp
ret
sahf
or
pop
repz
and
cmp
orl
sbb
and
and
daa
dec
push
jnp
mov
add
inc
mov
gs
jle
and
lcall
cmp
sbb
aam
push
fs
js
inc
rolb
lods
mov
xor
fwait
cmc
fwait
outsl
ret
dec
out
ds
push
mov
mov
cmp
faddl
mov
add
shl
pop
add
push
xchg
out
ret
out
dec
or
scas
addr16
out
xchg
je
insl
xor
andb
pop
xor
pop
cmp
lods
sub
mov
test
cvtps2pd
hlt
repnz
fadds
lret
loopne
iret
mov
int
add
test
push
pop
and
mov
xchg
adc
addr16
mov
mov
mov
push
jge
pop
sub
fisttps
jns
dec
cmc
push
cmp
jmp
jmp
push
lds
dec
xor
mov
xchg
popa
sarb
push
daa
lock
mov
lods
enter
pop
cmpsb
lock
sti
mov
xchg
andl
jno
test
jmp
cld
xor
inc
popf
insb
ds
fldenv
ja
lcall
popl
inc
subl
leave
push
pop
jp
mov
sbb
jno
pop
xchg
sti
outsb
sub
ds
or
aam
dec
int
sbb
ret
daa
movsl
mov
pop
cmp
loop
addr16
mov
or
ret
mov
ss
out
xchg
dec
stos
ja
out
sub
xor
in
sub
mov
arpl
pop
jo
mov
add
lods
mov
je
adc
orl
inc
dec
rolb
mov
pop
ret
pop
or
sti
int3
enter
mov
jnp
cwtl
out
call
mov
sub
push
push
scas
lock
push
dec
jg
sti
adc
test
imul
adc
movsl
das
sbb
repnz
jae
ljmp
scas
cmpsl
cs
inc
aam
inc
cmp
lods
test
sub
xor
shll
add
cmp
mov
dec
test
shr
xor
jns
lcall
nop
jmp
pop
pop
enter
mov
inc
repnz
iret
xlat
std
sbb
imul
aam
dec
imul
xchg
adc
mov
addr16
pop
fisttpll
sbb
pusha
add
xchg
or
xor
js
cmpsl
mov
mov
or
pop
sbb
mov
lock
cmp
pop
das
dec
test
lcall
data16
sub
mov
ja
jae
pop
clc
mov
add
jg
cmp
movsb
inc
sbb
lock
pusha
sbb
dec
add
loopne
fildl
pop
lahf
xchg
pop
imul
fnstsw
clc
mov
sarl
inc
lcall
fstl
xchg
js
icebp
call
xor
adc
push
sub
fstl
mov
test
inc
add
notrack
push
leave
and
jbe
pop
enter
aas
pusha
mov
dec
popa
ds
jb
sub
cld
mov
xchg
xchg
xchg
in
pop
arpl
or
and
jle
gs
out
dec
cmp
jp
cmp
and
std
in
sarl
jmp
mov
fcmovu
jge
jge
jle
sub
lret
out
push
sarl
addr16
ret
cmp
mov
jns
sahf
jb
sti
xlat
ja
fiadds
lods
pop
pushfw
mov
mov
lcall
add
dec
fwait
je
cmp
fidivrl
outsl
xchg
cmp
jge
pop
pop
cli
outsb
inc
int3
xchg
pop
movsl
mov
pop
inc
into
adc
mov
aad
addl
or
clc
mov
jle
ljmp
out
sbb
rcl
outsl
jnp
js
push
inc
push
xlat
movsb
test
push
roll
push
int
iret
sbb
inc
push
xchg
lret
scas
es
push
leave
jb
lea
pop
test
shll
pop
imul
cmp
pop
pop
push
call
es
cwtl
mov
mov
mov
add
sbb
std
pop
ja
sar
fwait
adc
rcr
xchg
push
push
das
dec
push
pop
in
push
dec
sbb
addr16
adc
insl
cs
mov
jbe
inc
add
leave
sbb
or
popf
pop
cmp
lods
xor
js
xor
into
mov
and
rol
push
mov
ret
sbb
js
fcomps
shl
dec
mov
or
push
pop
xor
adc
jb
push
hlt
bnd
pop
xlat
sub
and
adc
xchg
scas
fdivs
shlb
arpl
cld
in
add
jp
add
jp
dec
es
sbb
lret
mov
js
adc
insb
ret
outsb
cltd
pop
lea
jmp
gs
sub
rep
push
lds
and
pop
xchg
inc
fbstp
mov
in
sbbl
ja
aas
mov
add
cmp
ret
jbe
mov
xor
and
sub
leave
iret
fcoml
mov
xlat
into
stc
sub
push
jae
push
insb
xchg
not
or
sahf
neg
popa
xlat
xor
cmp
adcl
push
dec
and
push
aad
dec
mov
js
lds
adc
fstpl
push
out
ret
or
out
fstl
xlat
es
mov
insl
pop
out
cmp
clc
out
in
pop
adc
vmread
mov
pop
sbb
ror
mov
jo
jne
subl
cmp
dec
js
jp
jmp
shrb
arpl
mov
filds
int
and
movsl
mov
stc
jle
ret
testb
movsl
adc
xchg
jp
test
in
out
decl
dec
cltd
cli
cs
mov
test
xchg
rcll
add
cli
xlat
inc
lret
pop
sarl
fstpt
inc
stos
fwait
sahf
mov
jae
mov
cld
inc
mov
cmc
push
or
mov
pushf
push
insl
ret
mov
or
movl
das
lret
call
lret
lret
sahf
aam
adc
hlt
call
xlat
pop
mov
dec
rcrl
push
jne
test
dec
in
sahf
add
data16
outsl
inc
es
mov
jb
inc
sub
lds
mov
dec
ret
push
pop
jbe
fcompl
inc
pop
pop
addb
lds
test
push
outsb
mov
imul
xor
pop
adcl
aam
scas
adc
leave
xchg
nop
out
jecxz
mov
lret
dec
cwtl
pusha
jmp
bound
in
ja
arpl
xor
mov
mov
xor
ret
push
jmp
rorb
and
insb
jns
nop
aad
lods
popa
lods
mov
mov
and
or
push
sub
repz
es
loope
cmpsb
push
or
sub
dec
imul
imul
das
out
jb
sub
imul
sbb
mov
not
test
sti
into
inc
add
pop
cld
lea
mov
or
pushf
cmp
fs
mov
pop
jno
stc
dec
or
push
out
test
mov
lds
cli
inc
xor
pop
add
sub
aas
pop
ja
push
add
cmp
cmp
addr16
ljmp
test
test
cwtl
or
gs
sarl
push
out
shlb
jmp
into
mov
jg
stos
pop
xlat
jg
out
aaa
test
mov
fdiv
inc
cmp
sub
leave
lods
jmp
push
mov
dec
mov
inc
jp
xchg
push
aaa
fdivs
ds
int
add
cmp
mov
pop
cmpsb
add
jg
cmc
xchg
mov
shrl
jns
inc
fdivrs
lods
insl
jp
js
jmp
xor
lods
and
lds
lahf
jns
outsl
enter
call
lret
fsubl
cmp
mov
fs
jbe
mov
icebp
stc
mov
mov
push
aas
xor
pop
div
frstor
push
inc
pop
sub
movsl
addb
cmp
add
and
fiadds
scas
mov
sub
sbb
or
into
mov
jnp
jmp
push
xlat
sbb
fstps
hlt
in
mov
mov
inc
xchg
cmpsl
fisubs
popl
into
es
push
mov
std
sbb
xchg
push
dec
lods
inc
call
push
icebp
and
cmp
jno
and
adc
dec
xlat
shlb
lock
and
lret
sti
xchg
mov
adc
adc
mov
push
mov
cld
xor
jns
test
and
lcall
dec
enter
fbstp
out
jge
mov
ss
mov
adcb
mov
mov
fwait
sub
or
in
jmp
push
xchg
xchg
xchg
cld
add
orl
lahf
or
xor
adc
lahf
ja
ret
cmp
dec
jl
lods
mov
adc
sarl
imul
jbe
jnp
mov
outsb
mov
test
call
rclb
jmp
jle
sahf
xor
mov
mov
lods
arpl
lahf
je
cmpsl
hlt
pop
push
aam
mov
mov
loop
mov
push
cmp
mov
les
dec
sub
imul
enter
push
add
data16
enter
cltd
fs
sbb
inc
xchg
sub
mov
dec
dec
data16
inc
push
enter
sub
jge
xlat
push
and
ja
sbb
dec
push
int
cmp
push
inc
jmp
xlat
cmp
push
int
pop
sbb
pop
sbb
dec
pop
enter
add
das
js
dec
inc
imul
cmpsb
xlat
icebp
sub
jg
aad
ljmp
inc
cmp
and
hlt
mov
mov
lcall
int3
leave
icebp
in
insb
cltd
arpl
xchg
sub
jnp
jno
fists
push
hlt
xchg
mov
pop
fsub
stos
fwait
xor
adc
jne
rol
xchg
loop
pop
pop
test
std
jmp
push
lahf
ja
or
add
mov
mov
outsb
cwtl
cli
adc
sbb
jmp
pop
lods
in
cli
mov
jle
loope
pop
nop
mov
out
or
push
iret
push
lds
test
mov
lock
pop
pop
pop
shrl
clc
ds
push
lcall
int3
int3
iret
stos
cli
or
addr16
ja
mov
cmp
stos
loope
mov
cmc
or
rorb
push
mov
adc
push
pop
jae
sti
test
push
rorb
cmpsl
iret
test
inc
jns
dec
mov
inc
pop
es
jnp
mov
push
das
jb
aad
add
sbb
mov
int3
cli
outsl
dec
pop
pop
dec
in
mov
rolb
bound
mov
nop
cmp
jle
sub
add
jmp
subb
xor
ss
testl
pop
mov
ljmp
aad
mov
push
into
inc
push
lods
repnz
leave
out
mov
divl
smsw
inc
mov
add
rcrb
test
push
sbb
jp
cmpl
inc
ret
pop
ljmpw
ljmp
lahf
push
push
fadd
xchg
mov
repz
test
push
les
push
movups
pop
sbb
orb
inc
test
test
out
or
pop
movsb
mov
aam
dec
test
lods
imul
mov
xchg
xchg
mov
and
cmp
jae
dec
add
mov
or
or
pop
cld
fsubrs
cwtl
popf
shl
ja
stos
push
ret
loope
mov
cmp
cpuid
pop
cmp
xchg
xlat
cmpsb
loop
nop
jecxz
inc
adc
mov
mov
faddl
and
dec
or
in
ret
les
push
push
addr16
daa
or
dec
add
pop
test
and
pop
mov
lods
push
and
xchg
xor
test
out
xchg
outsl
push
loop
out
ret
movsl
and
scas
mov
or
lret
sub
add
out
and
jb
mov
sub
ja
xchg
in
sub
dec
repz
sbb
fidivs
popa
cmp
dec
push
pop
xlat
add
pop
mov
enter
dec
out
cmc
jae
popa
xor
and
ret
xor
and
dec
lret
pusha
jno
mov
mov
neg
rolb
lea
ficomps
mov
mov
loop
push
div
in
ret
jle
xor
xchg
cmp
sub
mov
jg
cs
xchg
mov
mov
fs
fdivrl
adc
aam
adc
fadds
and
subb
in
sub
and
ret
lods
sub
sahf
inc
in
sbb
outsb
push
push
push
hlt
jnp
xchg
mov
ja
or
movsb
std
inc
shl
adc
arpl
sbb
jo
test
mov
dec
jns
mul
pushf
add
fs
es
std
dec
dec
loop
outsb
inc
bndldx
and
or
addr16
pop
movsb
cmp
das
and
test
lcall
ss
hlt
out
mov
jg
into
xchg
mov
mov
rcrb
ror
outsb
pop
fidivrl
or
test
push
push
stc
jp
cmp
sbb
cld
dec
aaa
mov
sub
dec
scas
add
xchg
pop
mov
cmp
cmc
andl
test
rcrl
push
rorb
xchg
xchg
sbb
lods
movzbl
mov
jle
jne
inc
push
cmp
xchg
cli
insl
dec
sti
in
rcrl
lret
and
idivb
pop
loopne
sbb
cmpsb
daa
pushf
jne
nop
push
cmp
stos
dec
or
jecxz
fcmovbe
repnz
or
outsl
fadds
mov
in
cmp
sub
addr16
push
stos
cmp
lods
sarb
push
sti
adc
xor
push
popa
jge
les
imul
lahf
or
dec
int
jb
jp,pn
and
bnd
sbb
outsb
pop
insl
xor
ret
decl
sub
mov
mov
ds
mov
mov
inc
push
mov
out
lds
xor
mov
sahf
xchg
xchg
or
mov
repnz
nop
mov
in
in
pop
arpl
xchg
jne
out
mov
rclb
add
pop
add
xor
das
mov
sub
or
xor
mov
xor
repz
and
xor
daa
aad
cmpsl
lds
and
jg
and
les
xchg
bound
inc
call
mov
cltd
or
cmpsb
inc
cmp
jg
cmp
nop
shll
and
pop
pop
inc
cmpsb
roll
iret
mov
in
cmp
push
sbb
dec
sbb
int3
xor
and
xor
cmpsb
add
jge
xor
jp
repz
mov
or
das
adc
and
shlb
xchg
pop
cmp
mov
adc
and
aaa
adc
iret
push
sub
in
out
jb
jns
arpl
adc
adc
or
xor
ret
mov
push
sbb
mov
or
and
xchg
sbb
sub
data16
sbb
insb
or
fsubrs
jmp
mov
jmp
jne
stc
js
mov
test
and
inc
fcmovnb
pop
and
and
xor
push
call
pop
clc
filds
loopne
xor
adc
mov
and
fistpll
int
into
xor
loope
ret
lea
repz
pop
cmp
push
push
mov
pop
or
leave
or
pop
pop
movsl
pop
or
fidivrs
addl
scas
fsubrl
popf
xor
loope
jge
ds
mov
rolb
xor
pusha
mov
push
pop
push
lcall
or
cmp
sub
fisttps
dec
movsb
push
pop
fwait
sub
stos
inc
inc
mov
sub
jg
mov
orb
inc
stc
or
jl
sub
shl
mov
or
mov
cmp
add
xchg
inc
lods
aas
in
xor
jmp
push
sub
pop
and
ja
adc
sub
xor
scas
mov
mov
daa
out
adc
jno
sub
lods
push
pop
add
inc
xchg
imul
movsl
mov
xor
cmp
cmc
xchg
cmp
fcoms
cli
push
pop
sti
mov
lret
sbbl
shrb
out
cmp
sbb
push
mov
push
lds
sub
aam
mov
inc
out
lret
mov
and
pop
std
pop
lahf
xor
push
and
insb
mov
leave
push
push
dec
adc
jmp
and
sbb
fiadds
fbstp
stos
mov
jmp
add
pop
lods
and
mov
inc
inc
gs
sbb
lret
out
sti
ja
sbb
jl
pop
add
pop
int
add
push
and
cmp
jmp
stc
imul
jg
daa
mov
add
shrb
cmp
jno
addr16
inc
outsb
pop
movsl
cli
pushf
cmp
in
pop
mov
push
xlat
cmpsl
ret
cmc
outsl
cmp
lcall
fs
push
mov
push
es
mov
nop
ljmp
fcomip
repnz
into
xor
mov
cmpsb
out
jg
jecxz
lods
inc
inc
add
das
lahf
inc
adc
jmp
ret
lcall
ljmp
xor
xchg
fbld
movsb
daa
insb
jmp
out
roll
clc
imul
out
stos
mov
jg
in
mov
mov
int
pop
test
push
mov
push
pusha
jge
dec
sahf
pop
cs
inc
insl
sbb
mov
push
ret
jle
icebp
cmp
xor
orl
push
jecxz
mov
and
test
enter
enter
push
xchg
mov
in
arpl
outsl
ret
in
push
jne
movsl
mov
mov
ss
mov
sub
push
addr16
add
negb
mov
and
cmp
movsl
jne
out
adcl
outsl
push
jo
mov
push
loopne
dec
les
xlat
inc
sbb
or
or
jecxz
fisubrs
out
mov
cmpl
in
pop
mov
call
movsb
mov
mov
push
les
cli
insb
push
sbb
stc
dec
push
fs
scas
xor
mov
cltd
jle
pop
inc
mov
inc
jmp
pop
stc
daa
sbb
vldmxcsr
icebp
out
cmc
rcrl
mov
mov
mov
mov
adc
sub
sbb
iret
nop
data16
loopne
jl
adc
loope
loop
cs
pop
pushf
arpl
pop
mov
push
mov
jo
not
shl
or
mov
loope
sub
xor
out
scas
mov
scas
push
mov
int
or
inc
xchg
sub
sub
jmp
hlt
xor
xchg
movsl
outsl
or
fucomp
ds
imul
arpl
inc
and
adcl
jecxz
xchg
inc
add
clc
pop
dec
aad
mov
das
pusha
adc
adc
cmp
ret
movsl
pusha
pop
jb
leave
add
out
cmpsl
add
inc
xor
add
es
insl
mov
lret
mov
or
dec
mov
adc
adc
test
sets
xchg
ret
pop
add
pop
jnp
sub
mov
aas
subl
and
dec
cld
push
fisttpll
sub
mov
scas
pop
bound
push
fnsave
push
lods
lret
sbb
sub
popf
and
mov
call
xchg
push
std
dec
mov
mov
repz
lds
ret
sbb
call
fwait
idiv
pop
shlb
dec
mov
pushw
mov
adc
lahf
mov
dec
mov
bound
ss
enter
xchg
gs
or
int3
imul
dec
cld
sub
int
dec
ret
leave
loope
mov
mov
clc
lock
inc
jne
js
lea
in
xchg
lahf
inc
and
lds
popf
xor
lea
push
mov
arpl
nop
pop
cwtl
cmp
ljmp
mov
jns
dec
sarb
mov
mov
lods
or
xchg
mov
inc
mov
inc
out
nop
sbb
jge
and
pop
dec
std
push
mov
ljmp
js
sbb
xchg
add
loope
or
adc
in
data16
pop
sub
pop
cmc
int
psubsb
daa
fisubs
icebp
lret
jle
cmpsl
xchg
dec
adc
outsb
sbb
out
rolb
pop
lcall
push
fisttps
scas
fidivrs
ret
in
jns
mov
divb
mov
jbe
loope
movsb
rclb
xor
lock
inc
push
mov
in
test
pop
roll
sbb
cmp
test
repz
sub
adc
pop
dec
push
shll
out
cmpsl
call
cwtl
push
pop
int
int3
xor
js
stos
inc
dec
sub
ds
sbb
xchg
movsl
fcoml
aaa
push
jge
pop
test
inc
popf
mov
mov
ds
jg
arpl
push
pop
add
cld
fisttps
pop
xchg
xchg
xchg
push
das
gs
divb
xchg
into
push
das
add
add
xor
shrl
jle
int3
jp
xlat
inc
test
xlat
andb
pop
test
lahf
cwtl
lret
aaa
xor
xor
call
pushf
sahf
mov
sbb
and
stos
jno
sbb
imul
fnstcw
pop
cmp
xor
call
push
dec
fistl
stos
mov
adcl
scas
push
loopne
mov
mov
les
stc
fnstenv
cmp
loope
jmp
jns
cmp
dec
rcrb
jae
sub
in
insl
jne
pop
and
mov
rcll
popa
test
hlt
sbb
or
int3
mov
in
cwtl
loope
out
push
push
fucomp
adc
pop
popa
lret
pushf
ds
inc
dec
orb
roll
shlb
pop
pop
loope
je
xor
mov
je
mov
sub
pusha
lret
jne
mov
or
xchg
imul
mull
dec
test
push
or
push
add
cmp
add
sbb
inc
mov
dec
add
jno
outsb
aas
jno
stc
aas
imulb
xor
sub
xor
pop
loope
repnz
lods
in
pop
dec
dec
in
jp
xchg
push
xchg
dec
clc
jmp
fildl
jo
pop
mov
sbb
lods
sub
jl
cmp
lock
pop
inc
fstpt
rolb
sbb
xchg
mov
jg
and
mov
in
jmp
int3
jb
jne
mov
and
out
repnz
dec
sti
into
jle
jno
jecxz
sub
pop
scas
add
imul
jb
out
dec
sbb
jnp
cmp
jnp
loop
or
ja
sbb
sub
pop
das
jp
jmp
jo
cmp
inc
iret
mov
cmpsl
loopne
pop
mov
mov
push
sub
inc
add
push
mov
fiaddl
loope
punpcklwd
push
and
ret
xlat
in
nop
inc
and
jle
pusha
pop
adc
test
cmp
jns
lods
sahf
nop
ja
out
icebp
jae
jbe
sahf
push
jbe
xchg
lahf
jbe
lahf
jno
sar
xor
jmp
sarl
jge
out
sub
mov
fwait
push
into
subl
out
cmpsl
cmpsb
xor
jo
xchg
fsub
mov
fmul
pop
push
or
mov
mov
push
xchg
pop
push
mov
test
xchg
fnstenv
cmp
xchg
xor
ds
and
ljmp
push
xchg
lcall
cmpsl
jp
mov
mov
mov
dec
clc
inc
adc
pusha
or
icebp
push
out
xor
push
pop
jp
pushf
jmp
es
sub
lret
jne
cltd
pop
xchg
push
lock
mov
sti
fs
je
adc
mov
or
fs
add
xchg
arpl
mov
subb
inc
lock
pop
push
out
mov
lds
iret
and
jne
or
adc
leave
dec
fimuls
jp
or
addr16
loope
cmp
or
push
jle
push
imul
jg
xchg
fistl
ret
sbb
add
testl
xchg
out
push
stos
in
and
iret
mov
push
int3
xor
test
mov
aam
mov
roll
and
pop
pop
and
cmc
dec
daa
gs
repz
cmpsl
add
inc
imul
cmp
data16
mov
xchg
mov
pushf
hlt
and
int
jnp
mov
mov
out
and
fcomi
fwait
push
subl
pop
cmp
sub
pusha
dec
push
and
in
dec
xor
xchg
loope,pt
sub
pop
loope
aaa
inc
out
mov
in
jnp
xor
lods
sbb
mov
sti
movsl
orb
jp
in
mov
out
lahf
or
adc
adc
repz
jne
adc
mov
orl
and
sbb
arpl
mov
enter
sahf
in
cmp
push
xor
stc
subl
or
lds
leave
popa
mov
sub
inc
dec
dec
daa
xor
lods
mov
hlt
xlat
fdivrl
scas
pop
sbb
and
out
je
xlat
ljmp
mov
dec
fdivrs
sbb
or
insb
mov
iret
insl
and
ljmp
repz
jg
stc
sbb
gs
mov
stos
adc
mov
adc
push
cmp
sbb
lret
fcompl
mov
cmp
movsl
lcall
or
cwtl
or
call
xor
psubsb
shll
sub
mov
movsl
lcall
test
push
sbb
imul
lret
and
aaa
loope
pop
dec
inc
and
notb
mov
and
mov
jne
in
mov
mov
and
push
shr
adc
cmp
push
jns
pop
imul
mov
sbb
and
inc
jo
rclb
or
push
inc
fmulp
cld
mull
movsb
sub
fistps
lcall
daa
mov
out
cmp
adc
push
shrb
jae
mulb
lret
inc
mov
add
test
das
roll
movsl
loopne
sbb
ja
data16
pop
xor
js
sub
adc
or
xchg
mov
out
into
sub
adc
js
mov
xor
xchg
add
jno
repz
hlt
outsl
push
sbb
mov
ljmp
sub
ret
shll
iret
loop
fbld
cmp
mov
xchg
pop
loopne
std
fcmovnb
or
test
repz
jae
mov
mov
lahf
push
ja
subb
xchg
test
add
or
lret
int
cmp
sbb
shlb
popf
test
pop
les
pop
call
dec
test
and
xchg
cli
jecxz
mov
pop
mov
mov
push
in
js
jne
cmp
mov
push
mov
inc
push
insl
mov
xor
xor
inc
jo
cmpsl
loop
add
add
addr16
loop
lock
jg
cmp
pcmpgtd
enter
scas
aaa
loope
imul
outsl
repnz
jns
push
adc
sti
xor
add
daa
adc
outsb
rclb
or
nop
stos
pop
popa
ss
fiaddl
jne
les
ret
mov
repnz
cmpsb
call
cmpl
or
pop
inc
mov
xor
push
mov
mov
or
push
in
aas
icebp
mov
jg
sbb
cmc
ret
push
jp
pop
mov
mov
push
je
std
scas
punpcklwd
push
pop
push
pop
xor
xor
push
sub
cmp
ret
pop
inc
sbb
cmpsb
or
and
sub
mov
popa
cwtl
andl
cmp
xchg
jbe
daa
cltd
out
test
fstl
out
in
sbb
sub
or
aas
repnz
lock
mov
fisubrl
push
jl
dec
movsl
ja
dec
popa
mov
into
push
or
mov
mov
fwait
jge
pop
scas
mov
push
mov
pusha
xor
push
fnstcw
pop
xor
loope
out
pop
pop
inc
comiss
lahf
dec
sbb
xchg
in
dec
ret
mov
jae
enter
rol
xchg
clc
sub
xchg
sub
iret
cmp
xchg
add
inc
push
dec
sbb
xchg
xchg
ljmp
add
jmp
sub
ss
dec
fs
mov
xchg
xchg
inc
inc
jl
sub
fdivl
mov
sti
xor
sahf
jno
jb
pop
inc
sub
js
movsb
out
sbb
jge
sub
test
lret
mov
mov
mov
dec
repnz
shrl
jno
sub
out
clc
or
mov
movsl
jge
mov
cmp
xor
mov
cwtl
xlat
call
pop
push
outsl
ret
sub
movsl
push
pusha
jle
addr16
rcrb
jp
pop
xchg
roll
xor
mov
push
shll
lret
in
dec
push
pop
cmpsl
ret
ljmp
lret
sub
ret
lea
clc
mov
aas
pop
sbb
negl
inc
stos
xor
out
fisttpl
mov
pop
ret
cmc
mov
push
dec
push
push
insl
lods
outsl
pop
dec
mov
or
xor
mov
mov
jb
call
jnp
test
jp
fmul
mov
push
add
into
add
add
stc
call
call
stc
mov
je
mov
sbb
pop
in
mov
mov
call
pop
inc
xor
add
fcoms
pshufw
sbb
mov
sbb
aaa
cli
repz
adc
sbb
dec
xor
hlt
adc
sbb
pop
mov
push
sub
rcll
pop
sbb
jbe
outsb
test
shll
adc
outsl
filds
popf
adc
pusha
sub
repnz
push
push
roll
fnsave
cmp
dec
xchg
scas
sti
enter
xchg
adc
loop
mov
add
or
mov
and
jbe
inc
repnz
ror
ret
popa
rorl
jp
sbb
stc
fimull
fisttpl
enter
lret
mov
xor
mov
pushf
or
fadd
pop
fsubrl
pop
cmp
into
or
mov
sub
movsb
xchg
xchg
pop
test
mov
sahf
pop
add
push
xor
gs
stos
icebp
add
int
mov
xchg
sub
roll
bound
inc
movsl
jmp
cmp
pop
fidivl
sub
in
cmp
jecxz
aam
int
push
mov
lea
jl
sbbb
sbb
daa
dec
fucomi
pop
outsb
and
dec
adcl
mov
push
push
pop
xchg
popa
test
or
and
and
test
push
mov
sbb
ss
jecxz
xlat
hlt
cmp
pop
imul
pop
lcall
cld
push
cmc
fs
or
enter
inc
mov
jmp
imul
jae
adc
icebp
sbb
cmp
cwtl
or
lods
outsb
inc
fs
pop
mov
adc
push
inc
xchg
jae
lods
or
cmp
rclb
mov
xchg
ret
xor
mov
fists
mov
mov
pop
jge
std
int
jmp
test
push
xchg
push
lret
aaa
lods
cmp
lock
jle
jno
rclb
inc
adc
mov
enter
sahf
sahf
in
stc
lret
add
adc
gs
das
mov
or
push
sbb
aas
mov
sub
fs
int
push
in
inc
sbb
jle
out
mov
add
es
xor
fs
push
jns
in
cmp
test
nop
xchg
test
int
and
in
mov
inc
push
xor
jl
arpl
imul
gs
out
addr16
push
aaa
or
pop
xor
in
push
inc
push
sti
push
std
or
mov
or
in
push
stos
mov
lods
jnp
lret
enter
pop
adc
lcall
mov
insb
and
in
jl
div
pop
test
adc
out
inc
xchg
jmp
ret
rorl
stc
orl
dec
dec
insl
and
xor
dec
fistpl
cmp
rclb
mov
and
inc
adc
sub
sub
mov
lcall
sti
mov
sub
sub
lods
mov
loop
hlt
cmpsb
pop
loop
cmpsb
dec
or
push
and
mov
mov
mov
test
cwtl
add
daa
pop
je
mov
cmc
test
or
add
clc
lods
sub
push
popf
xor
push
test
movsb
mov
movb
enter
pushf
push
and
or
repnz
jp
jmp
sbb
jb
xchg
mov
pop
push
pushf
dec
mov
daa
les
or
sbb
pusha
in
sub
add
dec
mov
lods
mov
ficoms
inc
into
mov
mov
pop
ljmp
cmpb
inc
dec
cli
lds
sti
loopne,pt
xchg
icebp
sbb
or
pop
mov
rolb
mov
inc
inc
xchg
flds
mov
sti
fists
xchg
dec
imul
and
cmp
addb
xor
rorb
add
fsub
cltd
mov
loop
sti
jg
mov
sub
jmp
or
jle
outsl
rclb
ret
rcrl
div
ret
sbb
sbb
push
and
js
lock
fwait
pop
dec
and
lock
arpl
sbb
divl
jecxz
jbe
xchg
sti
push
sbb
dec
test
icebp
and
into
lahf
stc
and
adc
push
lds
cli
mov
jo
icebp
xchg
inc
loop
daa
pop
jmp
push
and
lods
mov
lret
or
add
dec
pop
push
sarb
and
test
in
clc
push
sbb
pop
adc
sbb
outsb
push
lock
out
fbld
mov
push
fisubs
dec
cmp
rcrl
fs
cmp
push
mov
push
cwtl
je
fldcw
in
and
adc
bound
inc
mov
and
mov
inc
push
push
mov
das
add
mov
sub
jmp
aaa
xor
lea
inc
xchg
jne
mov
arpl
adc
popf
inc
mov
inc
mov
in
mov
sahf
sti
jmp
jle
insb
lahf
adc
outsb
push
rolb
mov
insb
mov
mov
rclb
outsb
in
dec
cmpsl
adcl
sbb
test
jle
xor
rcrl
dec
mov
lods
push
pop
sbb
mov
inc
aad
push
and
sub
test
xchg
mov
or
ljmp
dec
out
or
xchg
or
les
push
xor
lds
push
out
fidivrs
pop
xchg
pushf
inc
out
jne
movsb
mov
push
mov
sub
and
ret
movsl
in
loop
jl
or
jno
insb
pop
cmc
and
xchg
add
and
lods
adc
js
fs
add
je
push
sub
gs
ds
mov
out
loopne
and
or
mov
jl
push
mov
jno
or
cmp
and
hlt
rorb
test
imul
adc
and
adc
xor
jnp
movb
orb
out
push
dec
scas
hlt
xchg
icebp
arpl
cltd
int
dec
in
mov
mov
push
imul
sbb
enter
sarl
push
jmp
and
xchg
les
aam
sbb
push
inc
add
inc
daa
in
mov
mov
cmpb
out
stos
push
out
ret
xor
je
fstl
leave
aas
xchg
sbb
or
sbb
jecxz
xor
andl
inc
and
add
xchg
loop
jnp
mov
stos
clc
lcall
dec
popf
xor
loope
fisubl
adc
test
das
into
sbb
jge
fcoml
adcb
sbb
and
inc
aas
xchg
pop
repnz
xchg
add
adc
or
inc
out
pop
jo
inc
mov
fstpl
cmp
jns
mov
xchg
in
xchg
inc
outsb
out
outsb
js
scas
int3
loopne
lret
insl
fstl
fldt
sub
out
cmp
xchg
lret
subb
loope
pop
inc
pop
in
dec
push
in
inc
int3
out
jo
jo
push
adc
ja
pop
aam
sub
mov
xchg
mov
or
xchg
mov
or
adc
stos
and
popa
cmp
xchg
int
gs
test
sub
xchg
mov
in
adc
xor
xchg
push
add
popf
int
std
cmpsb
shrb
daa
imul
add
sbb
xchg
push
sbb
dec
xor
push
pop
into
push
jnp
lret
xchg
stos
inc
cmp
mov
adc
loop
pusha
rclb
dec
shrl
push
dec
pop
sbb
mov
jne
cmc
pop
inc
popa
orb
inc
mov
mov
ss
sahf
add
inc
stc
subb
in
lea
test
hlt
or
push
lcall
pop
mov
jmp
jmp
sub
cmpsb
jecxz
push
insb
jns
pop
dec
ss
cwtl
mov
sti
in
leave
push
mov
sbb
and
cwtl
lcall
loopne
icebp
scas
jl
mov
cs
dec
jbe
mov
dec
push
adc
xchg
mov
adc
les
stc
int
mov
movsb
lcall
dec
add
fistpl
inc
cmpsl
ds
add
dec
and
jl
lock
fistpll
sbb
lock
push
cmp
arpl
jne
mov
jae
jnp
pop
push
arpl
cmp
jnp
cwtl
rolb
sub
in
mov
jge
int3
xor
test
xchg
sbb
cmp
jle
cmpsb
iret
dec
das
pushw
xchg
out
lret
data16
pop
pop
jb
jg
xchg
lock
sbb
xor
scas
cmp
ja
mov
in
and
sbb
mov
clc
push
xlat
stos
dec
test
in
outsb
andl
add
ret
popf
icebp
lds
mov
adc
mov
aad
jb
mov
mov
pushf
mov
neg
inc
icebp
leave
and
pop
add
movsb
hlt
adc
jmp
add
dec
sub
out
rol
aaa
pusha
xchg
jb
iret
sbb
cmp
lods
xchg
sub
sub
lret
bound
push
adc
shlb
adc
inc
jnp
je
jle
daa
lods
xchg
xchg
sbbl
and
dec
adc
out
inc
mov
add
je
faddl
and
out
test
dec
arpl
mov
dec
mov
dec
sbb
sub
std
and
pop
pop
arpl
cwtl
adc
mov
jbe
sbb
sbb
mov
xor
jbe
dec
dec
call
xchg
cmpb
movsb
xlat
arpl
lahf
cmpsl
mov
pop
pushf
cltd
add
test
ljmp
mov
pusha
mov
shrb
mov
mov
adc
repz
repz
testl
ljmp
out
hlt
and
lds
xor
sbb
fcmovu
mov
cmp
or
push
pop
aam
aas
pop
out
jo
shlb
cmc
shl
mov
repnz
pop
jae
fwait
pop
cmp
addl
mov
out
xchg
stos
mov
lcall
daa
jbe
add
aas
mov
fsubs
lahf
mov
xchg
imul
pop
sbb
shlb
add
mov
andl
mov
and
mov
xchg
popf
mov
inc
pop
sub
mov
xor
mov
std
pop
cmc
jnp
mov
cmpsb
mov
cltd
mov
fadds
lds
jbe
test
or
push
fnstenv
lock
sbb
mov
in
movsl
pop
clc
mov
xchg
sarb
mov
and
outsb
fbld
push
cmpsl
in
fstpt
adc
mov
mov
outsb
aad
add
int3
pop
mov
jmp
jbe
xor
shr
clc
lcall
fdecstp
jecxz
mov
lds
sbb
sub
jl
and
ret
and
jmp
sti
movsl
fbstp
mov
sub
xor
sbb
or
sub
inc
sub
mov
shlb
xchg
insl
cltd
outsl
adc
jns
notl
inc
xchg
pop
sbb
add
cmpl
test
xor
and
mov
push
rcll
push
leave
inc
xor
jo
jo
outsb
outsb
fdivrl
jae
int
les
mov
sub
int
inc
test
adc
lds
lret
mov
push
rol
jno
ficoms
add
dec
pop
xchg
dec
xor
std
into
xor
in
push
out
bound
in
cmc
cmp
adc
pop
ret
aas
cs
mov
mov
pop
jb
rcrb
mov
add
out
mov
or
hlt
mov
addr16
adc
xchg
xchg
popf
sub
int3
xchg
or
fwait
xchg
or
repz
lret
inc
sahf
test
inc
pushf
pop
mov
sbb
aaa
and
xchg
push
push
pop
ret
inc
test
adc
outsb
xor
je
xchg
push
xchg
mov
sbb
xchg
test
sbb
incl
cs
dec
jbe
gs
sub
lret
inc
iret
dec
popf
mov
pop
pushf
adc
xor
push
push
movsl
adc
rcrb
adc
adc
out
or
nop
cli
jg
scas
jp
xchg
std
imul
mov
sbb
pop
pop
adc
xchg
call
fildl
cmpsb
loope
push
nop
fsubr
pop
add
clc
mov
nop
fistpll
daa
faddl
fimuls
xor
pop
mov
jae
push
mov
inc
out
int
ret
lea
nop
popf
xchg
sbb
inc
sbb
pop
and
push
cltd
jno
mov
inc
lock
cmpsb
daa
stos
pushl
mov
and
aaa
mov
pop
jp
and
fwait
add
sub
add
add
mov
inc
jae
add
lds
flds
in
fnstsw
in
xchg
scas
add
dec
pop
hlt
xchg
loopne
sbb
push
ret
adc
xorl
mov
jb
mov
jle
fdivs
pop
das
pop
jbe
push
pushf
fs
cs
dec
push
pop
popa
push
out
xor
jne
test
out
lea
cmp
pop
in
jb
stc
mov
cmp
mov
and
pop
lods
fbld
dec
pop
push
push
fadds
push
ret
shll
dec
addr16
or
cwtl
ljmp
lret
jb
xchg
ds
dec
jne
mov
clc
xor
fistps
out
cmpsl
negb
or
into
pop
push
inc
xchg
cmp
add
outsl
or
pop
dec
jl
push
xchg
add
pushl
shll
loop
mov
std
push
jg
andl
outsl
jae
orb
test
scas
ret
cmp
cmpb
testb
ret
xor
sti
mov
popa
sbb
mov
and
es
mov
cmp
lcall
push
add
jno
orb
jmp
inc
pop
inc
lahf
nop
jmp
test
shlb
cmp
or
jmp
fists
mov
lock
cmp
mov
andl
adc
mov
stos
popf
xor
gs
lods
loop
dec
and
and
fwait
movsl
mov
pushf
int
addb
mov
orl
pop
and
sub
push
std
adc
sbb
mov
jo
fiadds
insl
xchg
in
xor
std
stc
cs
inc
out
subl
push
dec
dec
sub
push
loop
aas
add
cmpsb
fwait
push
jbe
sbb
jp
mov
js
cli
lds
pushl
in
xor
adc
iret
ljmp
insl
inc
dec
repz
jmp
and
cmp
cmpl
xor
imul
jg
lds
or
jg
movl
mov
pop
scas
sub
jno
jb
mov
insl
cli
xchg
jp
ffreep
test
add
push
scas
inc
dec
out
mov
mov
cmp
subb
adc
mov
and
sbb
clc
lea
iret
sbb
mov
test
xchg
aaa
mov
jb
sub
push
pushf
inc
and
xor
add
lock
add
addr16
movsl
and
int3
cmpsl
dec
sub
in
sub
xor
mov
in
es
shrb
xlat
test
adc
jmp
sqrtps
stos
lret
lcall
mov
popa
xchg
push
and
mov
loopne
or
and
fwait
cmp
sahf
sub
test
mov
jnp
push
push
mov
imul
xchg
dec
or
divb
cmp
aam
dec
push
mov
sti
xchg
push
outsb
mov
push
pop
daa
mov
jae
jmp
fstpl
inc
mov
aas
push
adc
fs
cli
jns
add
dec
fistpll
pop
mov
sbb
loopne
xor
push
sub
cmp
push
pushf
mov
inc
std
insl
imul
iret
cmp
push
and
sti
in
call
push
cmp
movsl
nop
adc
or
fisttpll
pop
mov
dec
nop
ss
test
or
clc
fistps
xlat
mov
enter
mov
fwait
mov
mov
jle
ss
mov
daa
leave
nop
filds
int3
mov
sarl
xchg
ficoms
cmpsl
push
jp
mov
adc
out
sbb
xor
push
push
sub
xor
xchg
sub
lret
mov
popa
xor
subb
mov
sub
scas
into
xchg
imul
sub
in
sahf
pop
popf
imul
add
paddw
aas
aas
shll
xlat
mov
mov
mov
lods
inc
ss
daa
pop
sbb
lahf
das
sahf
sbb
js
mov
xor
pusha
hlt
ja
pop
aaa
dec
out
mov
mov
lahf
pusha
lods
cmpsl
rcl
mov
ds
cld
xor
in
out
pop
pop
xchg
rcrl
xchg
xorl
mov
movsb
sub
fdivrl
loop
mov
out
pop
mov
out
jp
test
in
xor
jb
inc
mov
je
je
add
mov
xchg
add
mov
mov
push
arpl
adc
push
outsb
or
add
rep
test
xchg
ret
roll
insb
out
push
aam
jl
jge
mov
pop
shrb
adc
xor
jns
pop
pop
fsubr
xor
andb
jb
push
xor
pop
mov
cwtl
lret
ret
lods
or
iret
xchg
stos
aad
sbb
and
fstl
lock
sbb
or
enter
shll
jg
pop
mov
sub
cmpsl
pusha
les
iret
pop
mov
movsl
jle
pop
pop
fcoml
cmp
jle
jecxz
pop
enter
jb
jo
imull
jecxz
mov
jmp
aam
sbb
arpl
stc
pop
lcall
fld
and
enter
jl
sahf
xchg
push
adc
jae
popa
fwait
jl
jo
movsl
fidivl
adc
push
inc
repnz
mov
pusha
sub
jmp
add
iret
sub
mov
sbb
jp
ja
or
nop
int
mov
lcall
lahf
jno
dec
out
xchg
stos
sbb
jp
scas
xchg
shl
in
cltd
mov
mov
ret
push
mov
push
jp
inc
call
mov
inc
dec
adc
stos
sbb
mov
imul
test
outsb
push
add
sbb
xor
cmp
mov
sbb
fwait
or
push
bound
pop
insb
push
dec
mov
insb
pop
mov
xchg
lahf
xor
imul
mov
xchg
scas
outsl
jle,pn
xchg
js
pop
push
fsub
mov
xchg
mov
lods
test
jae
xor
fisttps
pop
lret
cltd
push
test
frstor
test
jne
adc
push
pushf
std
jnp
cmpsl
add
mov
jo
dec
andb
stos
ja
jmp
dec
ds
jecxz
cmpsb
cmp
mov
out
iret
mov
in
xor
je
sub
fldcw
icebp
mov
and
adcl
jecxz
fs
shr
and
mov
inc
mov
xor
xchg
xor
push
in
xlat
out
push
pop
or
mov
and
dec
jbe
decl
sbb
add
sbb
sub
xchg
sar
add
or
push
sub
inc
ljmp
jns
lahf
pop
lds
fwait
adc
int
jmp
and
out
flds
daa
jge
push
cwtl
and
and
dec
jnp
pop
ljmp
insb
mov
int3
aam
dec
imul
lret
js
mov
and
sbb
inc
jecxz
pop
lahf
sub
mov
mov
ja
add
xor
mov
and
test
adc
cmp
or
aam
loope
sbb
movsb
sub
out
shll
push
mov
test
cmp
mov
jmp
xchg
sbb
loop
push
pop
into
xor
sbb
cwtl
xor
sbb
imul
ret
iret
retw
out
daa
jle
mov
pop
test
shl
js
cmp
add
pop
mov
dec
repnz
xor
loop
movsb
dec
and
push
jecxz
dec
cld
movsl
roll
fsubrs
stc
xor
sbb
xchg
inc
jmp
push
out
or
add
add
in
xor
ror
dec
fcompl
rolb
inc
mov
jmp
outsb
adcl
icebp
sbb
sub
mov
or
scas
dec
rcll
cltd
sbb
lahf
mov
jp
scas
out
xor
nop
push
lahf
mov
or
inc
mov
orb
test
or
sbb
push
aas
arpl
mov
jp
into
and
xor
mov
aam
jp
jo
mov
inc
cmp
adc
fbstp
cmp
hlt
dec
cmpsb
xchg
ret
out
xor
sub
mov
mov
ror
rcr
jno
push
dec
inc
idivb
enter
xor
imul
sub
jl
outsb
push
imul
loope
jmp
xor
imul
mov
xchg
dec
test
cmp
imul
es
push
and
mov
sub
fnstsw
sbbb
lea
mov
and
imul
push
push
xor
jmp
lret
mov
adc
cmp
in
popa
cmc
outsl
push
jb
test
test
imul
icebp
insl
pop
mov
jns
adc
call
mov
add
cmp
jmp
push
call
xchg
lock
push
xchg
sub
mov
fadds
sahf
fistpll
pop
orb
add
das
fstl
sub
jns
aam
sub
stc
mov
or
out
mov
or
int3
and
add
loop
mov
push
scas
fwait
push
pop
cmpsl
mov
daa
jnp
or
inc
pop
jne
mov
mov
xchg
push
aas
pop
ret
stos
incl
lods
mov
mov
test
ret
sub
jne
inc
adc
adc
decb
add
test
sbb
inc
or
int
add
mov
and
jmp
addr16
add
bound
out
and
dec
cmp
xchg
inc
out
cmp
sbb
mov
add
cmpsl
mov
mov
imul
mov
cmp
ljmp
and
pop
cmp
sub
add
sbb
int
sbb
mov
jno
divl
inc
jbe
sbbb
insl
sarl
fisttps
mov
dec
mov
cmp
cltd
or
popa
sub
mov
jg
sti
jnp
sub
psubw
shll
sbb
sti
out
mov
xchg
mov
sub
sub
addr16
mov
notl
mov
pop
add
jl
aaa
xchg
cwtl
xor
jmp
ljmp
stc
cld
data16
xor
test
xchg
into
cmp
inc
cmp
pop
inc
jp
add
je
aaa
cmp
cmpsb
aam
rcll
ljmp
xlat
dec
cli
jo
js
sub
insb
push
jnp
mov
test
mov
sti
ret
ljmp
std
shll
xchg
data16
push
inc
test
insl
test
mov
cmp
push
dec
nop
out
adc
pop
pop
sub
adc
fiaddl
dec
js
push
cs
dec
inc
fsubp
es
and
inc
mov
sbb
push
pop
push
pop
add
push
nop
lretw
ss
jns
test
push
mov
ret
push
cs
pusha
jmp
faddp
xchg
or
mov
mov
mov
mov
cs
or
jmp
lret
xchg
push
or
pop
xor
inc
aad
out
mov
push
push
mov
pop
cs
into
dec
lds
adc
pop
inc
push
notl
int3
rcr
aad
ficompl
add
push
test
and
jne
mov
mov
icebp
push
lret
mov
or
pop
cmpsl
cmp
xor
xchg
dec
out
out
mov
lret
jnp
into
mov
pop
sarb
aam
dec
xlat
aad
pop
lods
add
dec
add
shll
mov
jmp
jbe
cmp
sbb
out
das
data16
int
cmp
das
scas
add
add
add
or
rcl
shrl
insb
adc
in
sbb
cltd
lret
dec
or
xor
fsubl
imul
push
rclb
cmp
pop
mov
mov
sub
adc
out
cmp
cmp
shll
or
mov
roll
shrd
mul
arpl
incl
inc
jo
cltd
xchg
push
fistpl
adc
sub
aam
or
mov
popa
daa
cmp
mov
in
stos
dec
mov
in
pop
aam
shlb
inc
or
sar
mov
dec
mov
and
out
xor
sub
xor
test
data16
pusha
or
adc
pop
mov
dec
pop
cltd
cmp
ljmp
mov
insb
push
outsl
fwait
movb
imul
sbb
cs
fidivl
int
stos
rorl
lea
lret
mov
dec
push
mov
lret
sbb
mov
mov
push
adc
outsl
rorl
pop
dec
call
lods
adc
in
jp
icebp
and
leave
push
js
adc
rorl
adc
pop
enter
jne
dec
sbb
jge
imul
inc
stc
xchg
adc
repnz
cwtl
xchg
jbe
cmovns
sub
js
push
mov
dec
cwtl
adc
push
xchg
clc
xlat
icebp
pop
rcrb
rclb
mov
fdivr
sti
mov
jmp
icebp
sbb
pop
daa
and
je
hlt
push
inc
ljmp
mov
daa
out
movsl
cmpsb
push
sub
into
shr
fwait
bound
icebp
mov
test
movsl
pusha
cmpsb
jge
hlt
and
jbe
mov
js
pop
movb
xchg
loopne
push
pop
xchg
dec
filds
dec
cltd
mov
scas
lret
inc
ficomps
in
pusha
mov
xlat
and
sbb
adc
cltd
pop
pop
xchg
lcall
dec
test
das
inc
addr16
mov
fs
xor
cmp
arpl
push
std
inc
roll
lods
xor
lret
pop
sbbl
adc
mov
fidivl
insl
out
mov
push
or
nop
stos
mov
psrlq
in
push
add
cmpsl
push
dec
stos
sbb
add
int3
addr16
or
jnp
push
xor
xlat
ss
xchg
loope
sti
outsl
jg
call
adc
jbe
mov
pop
gs
ljmp
jo
test
aaa
jp
imull
jecxz
aas
mov
lock
inc
jbe
popf
mov
clc
jbe
mov
jns
mov
mov
xchg
jne
test
xchg
push
pusha
pop
in
pop
popf
scas
or
cli
or
scas
roll
jb
xchg
icebp
fistpl
cmpsb
out
pop
ss
fwait
mov
fdivr
ret
int3
data16
es
push
clc
xchg
cmp
cmp
imul
fs
mov
jle
sub
ficompl
mov
hlt
in
mov
push
and
cs
scas
scas
call
and
fnstenv
lock
test
jns
fs
fs
int
fbstp
ret
enter
in
adc
and
unpcklps
retw
int3
insl
addr16
int3
or
push
cmp
mov
add
rcrl
jne
pop
fistpl
mov
andl
iret
mov
cwtl
addl
jo
pusha
ljmp
or
inc
sbb
and
push
lret
out
lea
insl
sbbb
lret
sti
and
divl
subb
mov
jb
sarb
test
cli
ds
jne
jmp
pushl
mov
adc
xchg
aad
hlt
adc
push
pop
mov
mov
mov
cmpsb
jmp
les
iret
aad
adc
sub
sub
int3
lds
inc
rorl
mov
mov
ror
andb
inc
and
out
or
mov
lods
jg
clc
test
and
mov
test
adc
ficoms
jl
ss
sbb
lahf
mov
jns
mov
jns
jle
xchg
xchg
dec
gs
in
adc
push
pop
mov
andl
add
inc
aaa
xchg
sub
xchg
mov
clc
xlat
adc
add
lock
dec
out
cmpsb
sbb
add
into
xchg
jbe
add
popf
mov
sbb
adc
jnp
mov
test
fcoms
push
pop
cmpl
shrl
inc
xchg
repnz
testl
loope
push
cmc
repz
dec
cmp
or
aad
push
lds
cmovl
in
mov
cmp
int3
mov
mov
aaa
ss
loopne
jmp
mov
sbb
adc
shl
sub
adc
insb
sbb
pop
mov
imulb
adc
test
fsubl
xor
mov
push
stc
sub
rorb
sbb
lret
dec
jecxz
sbbb
pop
std
mov
or
shrl
iret
jmp
insl
daa
ss
call
lock
iret
pop
pop
push
ret
popa
xchg
sbb
lock
pop
sub
sahf
roll
xchg
xor
jg
js
jmp
out
xchg
and
dec
add
fmuls
inc
mov
sub
cld
xor
imul
movsl
test
jl
les
pop
adcb
xor
pop
jb
mov
sub
jo
mov
rep
mov
dec
inc
sti
repz
xlat
icebp
stos
std
leave
fnstsw
mov
mov
inc
loope
clc
cltd
mov
shrb
inc
or
jmp
mov
repnz
cmp
sti
out
fadds
loop
jno
pop
lret
out
mov
push
mov
std
inc
test
data16
cltd
ret
jns
lcall
and
sbb
stos
insb
jle
add
mov
loopne
call
inc
jle
movsb
inc
cmp
mov
push
sbb
push
and
inc
pop
push
push
jb
sbb
arpl
aad
std
xor
push
enter
sbb
adc
std
pushf
jecxz
cmp
lods
ljmp
pop
ja
sbb
std
loope
ja
out
decl
fwait
add
push
sub
insl
pop
adc
add
mov
leave
aad
gs
test
inc
xor
mov
cmp
movaps
addr16
jns
jle
lea
xor
xchg
jg
jae
je
add
sub
lret
xchg
subl
xchg
insl
mov
mov
mov
adc
cs
fcoms
cmp
fs
insb
dec
inc
push
sbb
mov
jmp
dec
lods
repnz
sbb
into
adc
in
lcall
cmp
mov
sbb
push
cmp
sbb
mov
hlt
inc
adcl
lods
and
mov
mov
or
and
into
push
je
test
mov
sub
xchg
aam
sbb
dec
push
jmp
sbb
mov
scas
pop
lods
sbb
out
cmp
sbb
jo
movsb
enterw
pop
clc
jecxz
adc
push
notl
pop
xchg
mov
jns
sub
fcmovne
fisubs
adc
std
dec
adc
inc
fnstenv
es
jecxz
push
xchg
add
and
aas
cld
push
fdivs
inc
out
sahf
fs
mov
dec
pop
shlb
mov
in
inc
ficompl
cmp
popa
lcall
aaa
imul
lret
push
xor
pop
cmp
ds
es
xchg
mov
cmp
mov
mov
push
jnp
fs
xchg
aaa
inc
in
mov
add
pop
insb
dec
into
push
out
push
jmp
test
jmp
or
mov
sbb
bound
iret
test
sbb
addl
inc
addr16
add
ret
sbb
inc
lods
pusha
lds
out
mov
stc
mov
pusha
add
pop
sub
jge
push
in
scas
inc
movsl
aas
inc
push
addr16
mov
jle
subl
je
adc
and
fwait
dec
sub
xchg
dec
or
mov
mov
xchg
xorb
mov
jno
pop
addr16
leave
xchg
stos
scas
test
decb
jl
mov
ss
fnstcw
sbb
or
bound
inc
popa
and
xor
lods
lea
mov
mov
pop
sub
sbb
add
fbld
adc
push
in
cmp
insl
or
popa
pop
aaa
xchg
sub
pop
shll
imul
pusha
jg
pop
jle
or
pop
or
cmp
test
pop
and
jmp
ret
jg
push
dec
add
bound
jb
adc
mov
cmp
cli
icebp
fsubs
shl
fstl
pop
ret
scas
mov
mov
stc
sti
dec
or
mov
mov
push
inc
inc
mov
adc
in
add
add
pusha
push
push
icebp
lds
out
push
xchg
cmp
in
mov
xchg
fnsave
in
int3
movsl
fiaddl
ljmp
icebp
push
fsubr
enter
pop
into
pop
fsubs
sbb
dec
in
dec
xchg
loopne
push
leave
arpl
xor
leave
mov
jle
mov
inc
xlat
inc
nop
pop
fdivl
cmp
cvttps2pi
mov
decb
scas
adc
mov
cmpsl
mov
int3
dec
cmp
orl
push
imul
mov
cmp
pop
cmp
or
mov
daa
mov
mov
je
push
xchg
mov
into
stc
xchg
or
int3
pop
rolb
inc
movsb
lret
aaa
lret
scas
jp
dec
pop
mov
gs
addl
sub
inc
test
cmp
pusha
lea
in
push
mov
lret
cltd
cmpsl
or
sarb
inc
xchg
pop
sub
idivb
add
mov
jbe
xorb
and
int
fisttps
xchg
mov
and
stos
and
lret
scas
call
dec
fdivrs
inc
scas
rcrl
xor
fwait
sub
movsl
xchg
idivl
test
xchg
pop
jl
loope
rcrl
cwtl
hlt
dec
xchg
jle
push
test
push
hlt
sti
adc
add
ja
stc
hlt
xchg
xlat
inc
insl
mov
pop
nop
xchg
add
xor
xchg
pop
mov
mov
adc
loope
push
out
push
jge
xor
int3
mov
in
cmc
add
fcomps
jbe
xor
popa
mov
jmp
in
cmc
insl
mov
xchg
cmp
push
nop
test
and
inc
fdivrp
mov
je
insl
dec
outsb
scas
add
fs
mov
sub
jg
dec
popf
xchg
mov
push
jp
sub
jnp
xor
mov
out
je
div
xchg
je
ljmp
ja
mov
sahf
inc
inc
cmp
mov
jno
negl
and
fistpl
enter
xchg
mov
lods
ret
mov
pusha
movsb
mov
cmp
mov
div
cmp
dec
push
push
mov
daa
adc
cmp
cmp
daa
incl
fdivrl
in
dec
push
fadd
ret
lods
push
or
cmp
mov
imul
pop
jbe
mov
dec
test
xchg
jo
dec
jge
sbb
dec
std
movsl
pop
les
jge
in
das
mov
out
inc
pop
inc
jns
data16
hlt
mov
inc
rorb
clc
inc
outsb
test
movsl
dec
repz
sbb
cmc
stos
addr16
adc
mov
stc
push
decl
xchg
stc
scas
xchg
ja
sbb
jge
push
pop
and
aaa
mov
mov
cmp
aam
or
xor
aaa
in
mov
movsb
jno
mov
clc
mov
adc
mov
shl
lcall
dec
cmp
pusha
es
sahf
add
mov
pop
lcall
mov
sub
andps
sbb
or
lods
lea
mov
std
or
cmp
fwait
mov
xchg
out
jnp
leave
mov
mov
nop
cld
mov
mov
ss
push
bound
and
cs
lret
fistps
nop
jecxz
hlt
out
adcb
jge
xchg
out
mov
hlt
xchg
imul
mov
cmp
mov
out
or
movsl
std
cmp
and
pop
loop
stos
mov
sbb
push
pop
fldenv
push
lods
and
mov
insb
pop
or
repz
add
std
imul
mov
inc
push
mov
and
sbb
pop
mov
arpl
pop
push
cs
fldt
mov
enter
push
add
xchg
inc
rcr
xor
inc
push
sub
push
xchg
jne
xchg
pop
push
and
lahf
xchg
in
ss
sub
push
mov
xor
inc
dec
sbb
mov
push
and
pop
pusha
repnz
sub
nop
fisttpll
xchg
ds
pop
jecxz
sub
inc
je
movsl
sub
in
sbb
jecxz
inc
cmp
in
clc
stc
out
mov
or
push
insl
imul
sub
push
addr16
mov
icebp
cld
push
adc
jmp
mov
rol
ficompl
sub
stc
add
or
mov
add
addr16
adc
xchg
mov
dec
pop
incl
out
cwtl
dec
xchg
jb
dec
inc
lcall
push
lcall
cltd
xlat
cmp
repnz
push
movsl
imul
dec
mov
mov
test
repnz
cmp
inc
js
mov
outsb
andl
cld
xorl
sarl
insl
imul
in
sbb
std
rcrb
mov
cmp
jp
pusha
xchg
imul
out
leave
aas
inc
and
push
insb
cmpsl
jle
int
xorl
pushw
stos
not
or
je
adc
inc
jmp
fdivrl
or
xchg
negl
adc
adc
pop
mov
push
inc
mov
or
scas
pusha
jbe
ljmp
mov
inc
jp
insl
cwtl
movsb
fwait
bound
push
xor
mov
loope
hlt
and
mov
pusha
xlat
stos
insb
clc
js
push
sub
mov
hlt
stc
ret
dec
mov
cmp
sbb
dec
clc
jl
enter
bound
sbb
sahf
scas
jge
scas
ja
bound
xor
lods
lock
or
inc
daa
fildll
hlt
imul
insb
pop
popa
xchg
repnz
ljmp
jne
inc
or
jmp
push
push
or
lahf
scas
ffreep
iret
sbb
and
pop
loope
mov
ja
inc
clc
movsb
movsl
fnstcw
sbb
adc
arpl
dec
adc
fldcw
cli
fimull
cmp
incl
mov
sub
daa
push
movsb
cmp
out
inc
and
repnz
adc
push
loopne
pop
pop
cmp
shrl
jge
mov
inc
sub
or
push
inc
mov
dec
and
dec
add
cmp
stos
add
aas
cmp
fsub
add
test
sub
dec
jb
dec
sahf
xchg
jmp
scas
cmp
jnp
lods
insl
aaa
out
dec
mov
push
sbbl
jl
loopne
outsl
sahf
iret
pop
xchg
rolb
jne
sub
xchg
mov
inc
cmp
cmpsb
mov
mov
push
sarl
in
lret
bound
nop
mov
xchg
push
xchg
push
lods
xor
mov
and
and
jns
lret
jb
push
dec
rcll
cli
lret
xchg
mov
test
mov
xchg
jns
in
std
inc
into
or
fistpll
fs
cmp
xchg
adc
stos
sub
push
push
imul
inc
sahf
das
paddusb
outsb
mov
scas
xchg
aaa
xchg
psubsw
xchg
shll
pop
sub
mov
mov
add
jmp
fdivl
test
mov
sbb
inc
cmc
popf
add
mov
fsubr
inc
xchg
aam
fwait
cwtl
mov
cltd
cltd
jbe
jb
into
sbb
mov
push
outsb
cltd
cmc
push
add
dec
mov
jle
xchg
ret
cmp
jl
in
daa
bnd
in
sub
jl
insb
inc
cmpsl
jle
xchg
pushf
call
mov
add
in
cvtps2pi
dec
cmpsl
ret
in
in
in
and
std
adc
dec
mov
mov
dec
imul
jp
bound
pop
mov
ret
cwtl
dec
push
test
loope
push
rclb
xchg
mov
mov
push
hlt
lods
aam
fs
or
leave
xchg
push
push
cmp
in
int
out
movsl
scas
dec
and
jmp
or
mov
push
xor
arpl
dec
push
push
insl
and
add
lcall
jmp
into
jb
or
or
out
arpl
es
cmpsl
push
dec
mov
dec
push
mov
fcomip
movsl
movsb
out
aad
push
icebp
scas
bound
fwait
lods
dec
jns
add
mov
dec
daa
adc
xchg
fnstcw
inc
cmp
jle
comiss
xor
in
or
xchg
sub
or
xchg
dec
ss
jno
mov
ret
ss
or
pop
addl
mov
or
inc
shr
insl
add
xor
je
mov
and
xchg
cmpb
cmpsb
imul
cld
enter
std
enter
xlat
cltd
jecxz
jle
sub
cmp
xlat
int3
lods
xchg
pop
xchg
push
add
pop
std
push
jp
test
pop
jp
push
fmulp
xor
push
addr16
cltd
clc
jge
xlat
pop
jae
lahf
jg
int3
inc
sbb
xor
repz
outsl
xchg
mov
out
cwtl
add
pushf
jnp
mov
push
mull
loope
push
jl
cmpsl
xlat
push
test
cmp
adc
sub
mov
lcall
add
inc
sbb
adc
fidivl
add
aam
aas
call
adc
mov
popf
mov
xchg
mov
imulb
repz
sbb
rcrl
cwtl
or
dec
in
loope
in
xorb
ss
mov
fcmovnbe
cmpsl
xor
shl
lods
rol
or
lods
mov
test
lds
xchg
mov
cs
jle
push
call
cwtl
sti
mov
mov
mov
jne
pop
insl
fs
push
jbe
dec
sub
push
push
sarl
add
or
push
out
jecxz
jns
mov
mov
mov
nop
push
pushf
push
cmp
add
arpl
xchg
adc
or
xchg
dec
stc
or
push
and
push
sbb
call
mov
test
cli
mov
xchg
pop
lods
stos
lds
sgdtl
pop
mov
ret
and
inc
fdivrs
and
mulb
imul
cltd
das
jmp
mov
shr
mov
int3
add
mov
inc
mov
push
cmp
add
notb
jns
out
or
int
cltd
mov
add
lea
hlt
cmp
dec
shll
inc
hlt
and
add
pop
aad
repnz
adc
mov
mov
cmp
xchg
inc
dec
inc
or
sub
mov
iret
loopne
and
mov
sbb
dec
push
enter
mov
and
jg
mov
sub
push
push
addr16
cmp
push
mov
adc
cld
dec
enter
repz
mov
sbb
lret
lahf
dec
aas
mov
arpl
pop
mov
pushf
test
aam
cwtl
ja
out
pop
or
dec
movl
sbb
sbb
jb
mov
mov
push
dec
jg
push
iret
test
pop
fists
leave
mov
es
fnstenv
cs
fstps
popf
inc
jp
sub
mov
mov
sub
mov
cwtl
fstpl
ret
rorl
cmp
xlat
cli
outsl
inc
xor
test
ds
sti
mov
inc
jge
arpl
mov
cld
out
imul
mov
jecxz
mov
xchg
lods
loop
mov
add
out
and
cmpl
les
stc
mov
and
icebp
cs
aaa
and
jmp
ja
and
loopne
push
rcll
mov
push
test
xchg
inc
pop
mov
sub
gs
sbb
add
xlat
mov
mov
pop
xor
push
sub
sbb
jnp
fsubl
pop
rclb
cmp
sbb
mov
or
lock
push
jb
push
adc
dec
pushf
data16
outsb
aam
ret
sub
push
mov
cltd
lods
mov
pop
lods
enter
adc
xor
jge
jmp
ret
or
repz
loope
pop
in
jle
sahf
insb
pusha
enter
mov
jns
popf
or
add
mov
mov
and
fbld
fs
insl
out
out
imul
jmp
ja
icebp
add
pop
insb
es
or
aad
mov
ror
test
sbb
jp
dec
mov
ja
jmp
ljmp
lahf
scas
je
cmpsb
cltd
pop
adc
push
jecxz
stos
xchg
mov
jnp
fisttpll
xchg
xchg
loopne
mov
insl
out
iret
test
imul
adc
shrb
inc
fildll
imul
movsl
addl
sub
ss
push
lods
jmp
adc
icebp
add
mov
test
dec
adc
inc
test
sahf
mov
sbb
test
stc
xchg
mov
dec
addr16
aas
stos
add
cltd
push
jp
sub
nop
jno
movsb
in
jge
or
adc
orb
jmp
or
movsl
mov
out
adc
and
lahf
inc
inc
inc
push
xchg
cmp
les
inc
inc
pop
adc
lcall
fiaddl
or
jnp
fwait
jle
mov
mov
mulb
dec
leave
cmpsl
cmpsb
iret
js
push
adc
push
sub
sub
sbb
inc
mov
jg
test
cmp
push
xchg
test
mov
xor
add
cld
jp
ss
or
outsl
pusha
addr16
push
xchg
add
ss
lahf
mov
out
and
adc
pop
mov
aad
idivl
sar
jno
push
cmp
rcl
adc
dec
push
in
in
and
jae
mov
sbb
sbb
mov
movsl
dec
pop
xchg
sbb
xor
lar
nop
jge
adc
push
sub
test
xor
mov
aad
mov
sub
aas
xor
sahf
insl
out
outsl
sti
cmc
imul
jo
popa
leave
shlb
pop
mov
flds
lds
mov
mov
and
mov
mov
push
cli
sbb
ds
inc
jp
lds
ret
popl
ret
int3
push
fmull
cld
push
xor
scas
and
dec
out
bound
lcall
in
popf
push
fsts
mov
push
mov
sbb
sbb
dec
inc
mov
mov
push
popf
in
cmc
inc
cmp
mov
bound
xchg
xor
push
imul
or
loopne
jae
daa
das
push
rcr
outsl
jecxz
push
je
insl
mov
cwtl
mov
inc
fscale
jl
stc
jmp
pop
add
sbb
inc
in
lret
mov
jg
lahf
jbe
jae
mov
aam
test
xor
xchg
jecxz
in
cmp
movsb
pusha
loop
sbb
cwtl
imul
mov
xor
cmp
ret
insb
rcrb
into
pop
push
and
rcr
mov
rcl
mov
xlat
icebp
mov
lcall
jo
dec
add
push
jns
sbb
arpl
mov
iret
and
dec
lods
das
cwtl
sahf
push
pushf
push
jbe
push
hlt
xor
xor
cld
repz
cmp
cmp
shll
aad
xor
jo
out
sbb
mov
jns
sub
in
iret
pusha
inc
leave
pop
pop
mov
push
mov
addr16
inc
mov
or
rcrl
or
orb
cmp
xchg
or
das
mov
xchg
outsl
test
outsl
daa
insl
out
push
or
jno
and
add
and
lahf
xchg
mov
mov
ret
fcmove
pop
add
lret
mov
add
mov
jmp
and
xchg
mov
rcll
sbb
enter
dec
insb
mov
jne
xor
pop
jno
cs
enter
xchg
xchg
push
loop
jl
outsl
pop
fistps
pop
mov
mov
pusha
ljmp
mov
mov
jl
mov
push
not
adc
pop
inc
ret
pop
outsl
jbe
movsb
mov
shl
pop
iret
repnz
fistpll
pop
mov
pop
sbb
enter
outsb
sbb
or
scas
mov
dec
repz
add
scas
addr16
jno
xor
lret
xchg
jno
dec
cli
out
xchg
mov
xlat
cmpsb
xchg
mov
pop
mov
dec
mov
ret
cmp
sbb
addr16
cmpsl
addr16
jno
jg,pt
mov
insl
mov
movsb
xor
push
inc
fnstcw
push
or
cli
lock
add
gs
dec
cwtl
inc
xchg
xchg
jecxz
pop
inc
cmp
scas
pmaxsw
aad
dec
movsb
imul
mov
add
das
sahf
dec
dec
jae
mov
test
in
loopne
sarl
and
in
in
data16
and
jmp
decb
cmc
mov
pop
or
and
bound
ja
xchg
dec
lods
mov
pop
sbb
jl
stos
push
pop
cmpsl
decl
add
jmp
into
repz
adc
sbb
dec
xchg
ja
cmp
dec
cmp
cld
rclb
add
imul
or
and
xor
xor
inc
mov
stc
test
inc
cld
inc
mov
shrb
jo
out
jne
das
pop
add
mov
pop
andl
ret
stos
test
xlat
sub
leave
or
pop
jg
ljmp
testb
or
mov
je
js
inc
dec
adc
fistl
dec
in
xchg
cs
sub
adc
push
jmp
cld
xchg
arpl
dec
enter
daa
jno
dec
mov
lea
sarl
sbb
dec
sbb
shlb
in
andl
call
mov
cmpsl
rcr
fs
xor
sbb
or
xor
mov
dec
and
out
push
pop
push
fdivrl
clc
jg
lret
mov
sbb
insb
dec
mov
js
test
stos
arpl
cli
mov
mov
xlat
push
outsl
add
adc
scas
cwtl
scas
add
push
mov
push
mov
mov
loop
cmpsl
adc
xchg
cmp
mov
es
aaa
sub
out
mov
inc
sahf
or
int
mov
ds
jne
movsb
movsl
subb
dec
mov
dec
sub
cli
adc
icebp
adc
adc
adc
sahf
add
sbbb
sub
shlb
adc
aaa
inc
daa
jbe
mov
stos
mov
out
mov
pop
mov
in
in
lea
cld
js
and
ljmp
outsb
add
clc
outsl
movsl
mov
pop
pop
jecxz
notl
or
adc
idivl
testl
adc
push
inc
pusha
sbb
jb
xchg
cmp
lahf
pop
cmpb
rcr
pop
andl
bound
aam
mov
gs
pushf
pop
and
scas
dec
test
sbb
ret
jno
pop
pop
repz
pusha
cld
cmpsb
mov
mov
xor
pop
mov
sub
inc
lcall
imul
cwtl
and
and
push
jae
jecxz
dec
push
cmpsl
adc
xchg
cli
out
or
mov
mov
adc
inc
pop
sub
mov
dec
xchg
pop
lret
in
cld
jbe
sub
mov
jns
insb
push
shrl
bound
xchg
lcall
ljmp
mov
hlt
mov
aam
and
test
fsubrs
or
loope
pop
fnstsw
dec
push
loopne
mov
out
and
aaa
shll
add
ja
pop
adc
cwtl
daa
gs
add
mov
push
out
rcl
cmp
pop
xchg
mov
repnz
arpl
jle
fadd
lret
fistl
in
xchg
and
sti
lcall
pop
fcompl
repz
test
leave
clc
push
sub
and
jo
stos
xor
pop
xchg
mov
cltd
and
mov
push
ja
pusha
mov
cmp
add
adc
popf
enter
insb
dec
xor
fwait
add
lods
mov
lahf
pmuludq
stos
pop
and
into
and
pop
ljmp
repnz
xchg
cs
pusha
inc
mov
sub
call
arpl
mov
jno
lock
xchg
xchg
icebp
in
dec
adc
mov
imul
ret
sub
xor
fnstsw
xchg
xchg
add
or
dec
or
gs
jmp
inc
rol
xorb
mov
add
mov
roll
mov
sbb
sahf
mov
inc
testl
decb
clc
dec
push
mov
fdivr
test
cs
fcomps
pop
mov
mov
cmpsb
je
fwait
jecxz
fldcw
push
push
scas
mov
push
test
scas
lods
test
inc
lret
mov
mov
and
movb
imul
jp
adc
xor
xchg
push
push
aam
movl
lcall
inc
cmp
mov
ffree
les
mov
or
jae
sub
loopne
sbb
xchg
mov
cmpsb
mov
and
sti
jmp
es
xor
pop
sub
inc
cmpsl
cli
inc
in
pusha
push
out
js
test
imul
mov
jmp
aad
insl
push
adc
gs
adc
mov
dec
cmp
inc
xlat
cs
jo
xor
cmc
sub
lea
call
push
mov
icebp
dec
nop
or
mov
insb
pushf
in
ljmp
ret
inc
xor
mov
jne
dec
pavgb
push
repz
pop
es
mov
icebp
mov
ja
push
add
cmp
cmpsl
loop
aad
fwait
lea
fisttpll
int3
mulb
insb
rol
and
sub
inc
pop
loopne
and
cmc
ror
in
adc
enter
repz
jge
inc
sbb
rolb
mov
push
into
in
shll
xchg
pop
inc
popa
addr16
mov
pop
adc
fs
outsl
cwtl
dec
inc
outsb
ret
imul
cmp
sub
lea
xchg
bound
and
xor
data16
ljmp
rcr
cmp
je
push
xchg
int
sti
inc
and
repz
jnp
repz
inc
std
enter
out
xchg
insb
repnz
sub
lret
jne
xchg
lret
adc
adc
cmp
xchg
movsl
dec
cmpsb
loop
dec
push
inc
mov
dec
and
inc
adc
or
outsb
adc
cli
ret
call
in
test
push
aas
iret
sub
or
fcomps
sub
ficoml
mov
ss
or
mov
rcr
es
and
mov
aas
insl
and
mov
testb
fisubrl
fcomps
cli
mov
cmp
lds
shlb
clc
stos
mov
push
les
sbb
jge
push
out
mov
pop
jle
mov
pop
dec
adc
sbb
in
sbb
pop
pop
mov
and
das
cmp
les
mov
imul
jle
aas
and
fiaddl
and
sti
dec
daa
jne
add
dec
gs
push
lret
pop
inc
cmpsl
add
mov
fbld
stc
jb
popf
mov
add
pop
mov
fisttpl
das
push
insb
fwait
loop
faddl
adc
inc
outsl
inc
test
mov
pop
sbb
and
addl
push
pushf
xchg
xchg
or
mov
stos
push
inc
jmp
mov
es
and
pop
xor
sahf
jp
rcrb
inc
or
xchg
lods
lret
mov
scas
xor
xchg
test
testl
sub
out
mov
lea
lds
push
rcr
pop
and
push
dec
in
mov
test
test
loopne
aaa
push
daa
insb
pop
sahf
or
mov
outsl
cmpsb
mov
sbb
aam
loope
outsl
xor
call
ss
das
mov
jecxz
xor
ds
popf
sub
ljmp
imul
enter
cmpl
xor
adc
les
mov
adc
sbb
lcall
fdiv
fwait
xchg
jo
jl
xor
fdivrp
xor
cwtl
add
xchg
nop
mov
push
filds
jae
xorb
insl
fmulp
out
mov
push
sbbb
inc
insb
mov
aas
je
add
sahf
popa
in
lcall
mov
xor
lea
and
popa
shll
mov
in
ficompl
xchg
dec
mov
jb
add
sar
mov
cmpsl
xchg
mov
lcall
add
fdivrs
inc
adc
jg
outsl
and
xor
xchg
cli
int
int
mov
jne
mov
adcb
pop
jns,pn
and
outsl
pop
or
cli
inc
fbstp
ljmp
imul
dec
pushf
cmpsl
jns
cmpsl
xchg
sar
mov
inc
scas
mov
xchg
xchg
mov
push
mov
pop
adc
loopne
in
and
mov
jmp
sub
pusha
adc
sub
or
mov
mov
sti
adc
xchg
xchg
adc
pop
jle
cmpsb
mov
popf
push
sub
and
test
les
fstpl
or
std
fcompl
mov
inc
and
sbb
inc
lods
dec
int3
mov
push
jo
inc
cmp
jmp
inc
pop
std
mov
and
cmp
push
test
mov
pop
jl
outsb
xchg
xorb
mov
movsb
lcall
and
scas
and
fsubp
mov
mov
repnz
cmp
xchg
mov
subb
testb
movl
sbb
mov
into
cmp
sti
sbb
adcl
fwait
push
sbb
loope
cltd
add
into
fwait
popa
lock
imul
mov
movsb
adc
aam
cmp
aam
push
or
cltd
imul
int
imul
aaa
mov
rcrl
in
mov
and
leave
fnstenv
sub
jns
das
lock
dec
mov
out
test
andb
dec
insb
lds
fwait
das
jnp
sbb
xor
cltd
jmp
mov
jns
cmp
or
xor
scas
push
ljmp
fwait
xor
add
insl
pop
std
sbb
pop
clc
pop
movlhps
addr16
fsts
xchg
loop
pop
cmp
outsb
lahf
das
cltd
std
jecxz
addb
jnp
jg,pt
outsb
iret
mov
lods
and
cmp
bswap
or
std
dec
stos
xchg
in
je
mov
arpl
jne
push
mov
mov
int3
push
es
mov
mov
ret
or
insl
scas
nop
and
jae
leave
in
mov
sbb
mov
dec
adc
out
insl
xor
xor
jg
je
std
or
scas
sbb
push
in
imul
lahf
sub
cmp
lahf
into
clc
inc
enter
insb
out
lret
cltd
mov
pop
das
ret
scas
pop
int
clc
sbb
mov
jge
xchg
mov
inc
mov
int3
lds
dec
int
shrb
jg
sarl
fstps
inc
test
roll
les
int
jbe
shl
pop
aas
stos
inc
or
lcall
add
mov
sarl
sbb
jmp
ficompl
adc
into
xor
xchg
sbb
xor
sbb
test
out
cmp
or
sbb
aaa
xchg
int
adc
push
mov
fdivs
rorl
lods
into
jge
mov
les
nop
push
mov
adcl
sub
jl
mov
sub
insl
movsl
or
cmp
xor
add
xchg
push
call
nop
jl
sub
push
pop
add
jae
push
xchg
fwait
dec
cltd
mov
sub
cltd
fisubl
mov
xchg
repz
adc
test
mov
cmpsl
push
arpl
pop
es
ss
mov
pop
xchg
cmc
pop
pushf
outsb
jnp
lea
nop
icebp
outsl
jecxz
ljmp
mov
or
loope
sti
push
sbb
jb
xchg
and
xor
cmp
push
dec
jmp
push
adc
cmp
rcrb
stos
sbb
rcll
lods
loopne
jmp
rcr
pusha
jmp
popa
aam
pop
jle
lahf
sub
fwait
jae
icebp
or
sub
xor
fmull
add
sahf
jae
lret
jmp
mov
daa
and
push
notb
ljmp
fmul
dec
scas
stc
cmpb
or
ja
pop
mov
inc
mov
sub
add
test
loope
sti
add
inc
jle
fs
adc
ret
fstpl
lea
or
fldt
xchg
movsl
pop
shlb
testb
addl
push
xlat
dec
sbb
cmc
xchg
fwait
push
rcll
pop
mov
inc
out
pusha
push
xchg
mov
js
sti
sahf
mov
fcmovbe
sbb
lret
jb
sub
out
add
testl
les
add
mov
lret
mov
stos
mov
and
mov
mov
enter
mov
push
cld
int
jg
aas
ret
cld
xor
aas
mov
test
sub
mov
arpl
lea
imul
ss
cltd
xlat
loop
xor
add
pop
jl
and
sub
sub
in
scas
ss
nop
pop
xchg
mov
inc
mov
lret
jne,pn
mov
andb
mov
lods
adc
sbb
cmp
xchg
mov
cmp
lods
cmp
push
push
out
inc
lret
sbb
rolb
sub
popa
test
sbb
mov
dec
sub
sub
add
stos
jns
xchg
fdivl
xchg
lods
sti
scas
imul
pop
in
inc
int
orl
xchg
inc
in
xlat
mov
add
imul
pusha
xsha1
cmpsb
or
out
std
sub
cmp
mov
jb
sbb
scas
gs
cmp
rorl
or
xor
sbb
data16
jbe
ds
nop
mov
stc
daa
push
jbe
lret
xchg
inc
jl
mov
xor
in
jl
add
jns
jecxz
sub
je
jg
inc
dec
bound
cli
stc
lods
lods
jmp
jno
out
mov
sub
test
sysenter
inc
mov
jp
sub
adc
in
inc
dec
jo
adc
out
cltd
jecxz
addr16
or
inc
adc
jno
repnz
sti
mov
ja
pushf
faddp
mov
push
dec
cmp
push
fldt
and
jecxz
inc
fcoms
std
push
pop
cmpl
or
push
xchg
movl
loop
jnp
inc
orb
inc
fsubrs
out
cmpl
inc
add
pop
jne
dec
cmpsb
loope
lret
push
cs
jae
imull
push
ds
lds
pop
mov
test
sarb
pop
jno
pushf
sbb
adc
add
in
push
sbb
fnstenv
roll
je
jmp
sbb
orl
fstps
mov
push
jg
mov
xor
jbe
pushf
jno
test
insl
sbbb
in
fcoml
mov
rcl
aaa
cmp
data16
rcrb
mov
data16
les
mov
or
loopne
xchg
call
aad
mov
stos
mov
aad
jl
sub
aas
stos
lcall
daa
push
rol
jg
jns
push
push
out
mov
inc
inc
inc
mov
mov
sbb
push
mov
and
jg
sbb
add
in
push
xchg
and
icebp
xchg
test
mov
sbb
pop
jns
test
data16
add
shl
mov
gs
pop
dec
inc
pop
data16
arpl
xchg
repnz
in
rcrl
cmp
sub
pop
jnp
mov
jns
pop
in
mov
test
add
dec
es
out
jle
dec
inc
dec
ret
lea
push
push
rcl
xor
push
sarl
roll
adc
xor
or
add
pop
adc
icebp
and
lods
sbb
jmp
xor
inc
jp
dec
push
cmp
shll
adc
mov
bound
sbb
movsl
addr16
rcr
dec
lods
test
arpl
pop
rcll
loop
xor
xor
or
insb
outsl
or
jno
insb
push
xor
int3
ja
push
inc
iret
pop
imul
or
jp,pn
mov
fld
lea
inc
cmp
lock
pushf
sub
jae
aad
mov
lret
inc
ja
clc
mov
xchg
out
mov
push
shlb
push
xor
xorb
mov
cli
inc
aaa
scas
dec
adc
subl
roll
cltd
add
xchg
je
mov
test
scas
jecxz
fisubrs
into
testl
shll
out
mov
push
fcompl
lock
xchg
nop
jg
incl
lods
test
cld
or
aam
and
push
fldl
fwait
fs
scas
inc
mov
pmulhw
cmp
sub
xchg
shlb
xchg
mov
loopne
in
inc
les
insb
js
lock
cmpsb
dec
adcl
pop
adc
push
jge
fs
lock
xchg
push
sbb
test
mov
dec
scas
xor
bound
cmp
std
outsl
stc
xchg
mov
inc
mov
mov
cld
mov
sbb
xchg
nop
pop
hlt
dec
clc
pop
xchg
das
and
fs
push
xchg
or
xchg
repz
outsl
pop
mov
shr
fmull
mov
in
pop
jne
out
sub
pop
dec
mov
add
scas
sbb
sbb
arpl
push
xchg
inc
inc
bound
mov
push
cli
mov
hlt
sbb
int3
dec
aaa
shll
iret
dec
pop
enter
push
cwtl
inc
jp
aam
mov
fistpl
cmp
inc
mov
imul
ljmp
aas
ss
movnti
jae
test
sbb
mov
add
imul
les
rcll
ret
adc
cmpsb
repnz
push
pop
imul
inc
or
sbb
mov
xlat
inc
adc
inc
dec
outsb
in
fbstp
jo
dec
push
dec
push
lds
lret
lcall
call
add
xor
ret
jl
sub
mov
int3
data16
fmull
nop
mov
call
sarb
push
mov
mov
dec
sbb
inc
shl
pop
add
arpl
or
adc
outsl
lds
push
or
xor
pop
outsl
fsubrl
sub
lock
push
out
mov
push
gs
push
pop
sbb
and
leave
xchg
xlat
adc
inc
xchg
scas
out
test
cmc
jae
cmpsl
mov
out
xchg
push
mov
or
sbb
mov
mov
shlb
push
jge
and
out
mov
lock
popf
lods
xchg
xchg
cli
jbe
addb
ret
mov
popa
xchg
jl
pushf
out
cli
cmp
ljmp
mov
pop
xchg
dec
cmp
dec
cs
inc
jmp
into
dec
adc
mov
mov
mov
sub
push
in
sbb
fisubrl
mov
xor
je
gs
push
mov
add
sub
ss
sbb
sub
inc
icebp
sub
icebp
fldl
push
cs
lcall
sbb
dec
shlb
add
out
sub
fcmovbe
in
fimull
xchg
insl
inc
adc
enter
out
iret
mov
test
imul
int3
pop
lret
mov
rorb
sub
idiv
in
pop
outsb
test
test
leave
ret
mov
stc
stos
scas
and
add
dec
add
scas
pop
ret
sbb
call
ror
scas
xor
xor
stos
jo
lock
shl
fcomps
fistps
fldl
arpl
dec
jecxz
mov
pop
dec
jno
sbb
call
add
ret
pop
cmp
inc
xchg
sbb
sbb
cmp
popa
ror
pop
or
inc
fwait
cmp
xor
push
push
sbb
fldt
cmpsb
nop
mov
or
addl
iret
xor
cmp
movsl
push
lret
gs
sahf
xchg
inc
xor
in
ljmp
sbb
mov
mov
rolb
icebp
sbb
stos
sub
pop
icebp
popa
clc
jle
adc
imul
sbb
repnz
cmp
inc
sbbl
adc
test
fnsave
jp
jmp
mov
movsb
mov
test
nop
inc
arpl
out
movsb
fsubs
and
scas
xchg
sbb
pop
add
inc
mov
or
fisubrs
pop
jmp
jmp
int
inc
add
daa
mov
test
xor
inc
push
cmpxchg
les
enter
leave
push
fistl
ret
imul
mov
lds
adc
dec
daa
xchg
pop
pop
rcrl
xchg
mov
mov
pop
xor
xor
cmpsb
cmp
fbld
lods
sbb
aaa
outsb
jmp
push
push
sbb
inc
sbb
mov
cmp
loope
fcoml
sub
xor
mov
pushf
inc
mov
lods
sbb
mov
cmp
daa
push
mov
aaa
xchg
jnp
fiaddl
jo
xor
daa
sub
and
lds
daa
xor
dec
push
mov
jp
lods
sbb
test
movsb
sbb
ret
jo
jae
pop
cltd
sub
sar
popa
imul
ja
pop
data16
test
int
jge
test
in
test
movsb
orl
inc
mov
addr16
add
adc
cmc
mov
lea
shrl
ja
imul
test
aas
daa
call
xor
pop
test
pop
jns
pop
sbb
dec
sub
cs
insl
je
adcl
cmp
or
push
fs
addl
mov
call
gs
jg
enter
mov
xchg
out
add
inc
clc
add
mov
adc
test
emms
cld
loop
pop
test
pop
mov
jp
or
ljmp
aam
add
test
xchg
pop
insl
pop
call
call
and
in
mov
test
std
pop
xchg
dec
lock
ja
lcall
insb
rolb
das
lds
jno
aam
cld
and
or
cld
lods
mov
and
jnp
mov
dec
mov
mov
inc
rorb
popa
out
and
lret
cmp
sub
or
or
repz
jno
aam
ds
sti
mov
pop
rcrl
add
pushf
jmp
daa
xchg
xchg
sub
ss
cli
add
sahf
outsb
mov
adc
or
mov
jecxz
pop
mov
jg
shlb
xor
out
inc
cmpsl
or
les
jae
cmpsl
cmp
jno
cmp
ss
cmp
pop
das
inc
add
lret
in
cmc
jnp
lock
mov
je
jg
dec
jo
and
mov
mov
sub
fdivrl
dec
loopne
cwtl
daa
into
dec
cmp
inc
idivb
call
lock
pop
jo
cld
adc
jo
inc
mov
adc
mov
movsb
aad
mov
push
cmp
test
jae
aad
test
and
sarb
sbb
inc
pushf
jo
sbb
jno
mov
mov
or
ljmp
loop
mov
mov
ds
pop
stc
stc
jge
add
ds
out
or
mov
mov
push
out
mov
lcall
fwait
adc
test
rcr
inc
dec
xchg
sbb
test
into
add
cmp
push
jle
mov
push
dec
sbb
xor
sub
ror
lret
stos
inc
dec
sbb
flds
dec
jl
cmp
cld
push
xchg
inc
notl
in
lods
inc
push
and
rcll
jbe
or
jae
rcll
scas
xchg
jae
ret
in
sbb
test
movb
dec
in
jecxz
fists
ljmp
ds
add
lret
mov
stc
pop
addl
ret
fnstenv
fidivrs
cmpl
out
dec
inc
jl
add
std
sarb
insl
arpl
xor
or
jmp
lock
das
sti
fidivl
sub
ljmp
add
or
mov
mov
sbb
sbb
inc
cltd
push
aad
push
jno
push
lods
call
push
insl
hlt
outsb
push
xor
pop
inc
push
mov
sub
add
out
stc
pop
push
push
jp
cwtl
fwait
dec
or
clc
scas
aam
in
sti
inc
mov
push
add
enter
repnz
out
dec
mov
push
ret
pushf
fwait
ja
aad
lret
xchg
shlb
rolb
jge
xchg
imul
sub
in
add
test
adc
xchg
push
mov
xor
movb
cld
cmpsl
fbld
pop
pop
inc
ss
jmp
jp
push
mov
inc
jl
mov
cli
and
jae
icebp
or
push
ljmp
mov
xchg
mov
insb
mov
pusha
int
insl
xor
dec
mov
sbb
push
icebp
mov
or
lahf
xchg
xchg
mov
sahf
xchg
and
lahf
sahf
cmpsl
xor
lods
mov
and
loopne
lret
cmp
push
push
jg
jle
inc
or
mov
push
jns
dec
ds
push
inc
insb
cmpsb
mov
or
pop
mov
sub
mov
or
add
cmpsl
lods
dec
push
or
and
adc
pop
pop
push
mov
mov
push
mov
mov
dec
lock
clc
cmp
cs
rcrb
or
out
movsl
push
or
mov
push
mov
cli
cmp
fwait
sahf
pushf
pop
push
mov
jo
jecxz
push
add
mov
bound
xchg
xadd
jge
cwtl
scas
jg
jl
pop
push
in
call
pop
in
dec
add
sub
and
repz
mov
jne
xchg
and
dec
and
fnstenv
xchg
push
jns
mov
bound
out
repnz
fwait
sub
inc
jns
test
pop
mov
incb
adc
leave
int3
fcmove
inc
push
dec
mov
cmp
xchg
add
sbb
jno
sti
sarb
sti
popa
inc
sub
push
mov
jmp
push
xchg
jno
int
push
cli
sar
icebp
mov
loop
jnp
push
mov
das
adc
into
push
mov
lret
lods
cwtl
enter
jecxz
mov
loopne
aad
adc
cmp
xchg
les
lods
xchg
xchg
dec
pop
push
push
mov
fldt
adc
sbb
imul
scas
jecxz
pushf
xorl
xchg
addr16
loope
aaa
and
push
lcall
loope
aas
xor
adc
push
ret
in
scas
mov
push
cmp
incb
ds
mov
sbb
xor
and
ljmp
aaa
pushf
push
or
ss
dec
fsubs
adc
xor
sbb
cli
aas
jb
fs
cmp
in
push
sysenter
cmp
cli
ds
fwait
cmova
sbb
mov
sub
fisubl
add
adc
push
clc
xorl
mov
int
push
outsl
cmpsb
fcoms
pop
push
jno
out
xor
or
repnz
hlt
imul
pushf
pop
movsl
pop
scas
sub
push
jg
dec
pop
mov
mov
push
in
push
loope
je
ljmp
adc
xchg
out
add
inc
pop
imull
arpl
or
cmpsb
lret
and
xchg
and
adcl
sub
pusha
rclb
mov
jl
in
call
inc
sbb
mov
lods
cmp
sbb
js
adc
into
sbb
flds
out
add
mov
ljmp
into
adc
ds
fmul
call
cltd
out
mov
cmp
and
add
cs
mov
adc
les
lret
cmp
int
inc
fildl
jns
stos
jne
dec
push
mov
popf
xchg
adc
ret
adc
daa
cmp
clc
insb
push
jno
cs
outsl
pop
es
jmp
mov
push
mov
shll
cmc
repnz
outsl
lahf
mov
inc
sbb
jb
divl
rcll
pushf
pop
mov
xchg
add
lret
bound
cmp
sub
adc
pop
leave
lods
pop
jae
stos
int
jne
add
lcall
add
xchg
scas
push
in
inc
add
dec
jno
int3
xchg
sbb
out
out
mov
push
lea
fimull
cmp
test
xchg
push
addb
mov
mov
xor
test
mov
or
cmpsb
notl
roll
shl
lea
push
or
and
fwait
push
mov
test
fs
sub
sbb
lret
mov
push
sub
inc
and
in
aas
push
sub
in
mov
jle
fidivs
testl
mov
jns
addr16
adc
cmc
shl
lods
xor
xchg
fucomip
sub
mov
sbbb
fucomip
ds
fld
jmp
or
and
inc
icebp
pop
enter
ss
mov
ja
mov
mov
or
dec
popa
aad
jno
stos
pop
loopne
shrl
cmp
loope
jbe
repz
and
inc
sub
fstpl
mov
mov
mov
inc
xor
ret
lcall
loopne
push
xor
out
mov
xchg
or
and
nop
mov
jnp
fidivs
pop
call
into
pop
cli
or
fcmovnbe
adc
out
dec
mov
or
fistl
popa
mov
adcl
movsb
out
dec
dec
out
xor
sbb
incb
add
data16
enter
insb
pop
out
sbbl
add
sub
or
mov
push
pop
add
enter
xor
int3
mov
mov
popa
aam
pop
sub
dec
add
mov
out
int
negl
in
movsb
dec
jne
and
inc
xchg
xor
enter
lods
shl
xor
mov
in
insb
sub
xchg
stos
stc
pop
add
lds
mov
mov
test
jbe
inc
jp
es
daa
fistl
aas
rorb
push
sar
shll
out
pop
data16
mov
inc
pop
movsl
ret
ljmp
into
out
mov
adc
jmp
adc
cld
icebp
push
mov
movsl
fdivrl
lret
imul
maxps
inc
mov
mov
sub
mov
mov
jmp
pop
and
cld
inc
aas
repnz
faddp
xchg
stc
fs
les
jnp
fldl
aaa
lahf
cwtl
mov
movsl
dec
lock
fwait
push
xchg
add
rcll
or
xchg
addb
in
jecxz
xchg
aas
int3
sti
sarl
jnp
je
out
fcmovbe
negb
add
pop
sub
bound
bound
mov
shl
insb
shll
rcrb
push
or
out
popa
repnz
test
mov
nop
push
nop
cmpsl
imul
daa
adc
cmp
pushf
out
ret
mov
popf
rorb
aam
push
xlat
add
aas
outsb
mov
push
adc
inc
jnp
push
cld
jg
mov
sahf
and
sysret
jg
sti
adc
fucomi
xchg
jl
xor
pop
ss
and
add
and
jno
leave
scas
sti
mov
adc
push
andb
cmp
add
jb
push
or
adc
jnp
push
jnp
push
cmpb
cmp
leave
imul
inc
mov
aad
sub
les
data16
mov
cld
sbb
push
cld
mov
push
mul
xor
add
popa
xor
pop
pop
lods
dec
push
sbb
das
sbb
add
stc
insb
xchg
push
test
xchg
stos
loop
es
inc
adcl
rcrb
push
divb
ret
in
adc
or
or
push
adc
imul
push
jp
aam
xor
mov
xor
je
leave
loope
mov
shr
mov
push
in
push
or
cmp
sbb
inc
push
push
or
hlt
inc
push
cwtl
addr16
dec
sbb
fstp
xor
imul
xlat
jmp
fisttps
mov
movsl
ret
pushf
in
repz
adc
inc
arpl
cmc
cltd
lcall
pop
xchg
xchg
jae
xchg
or
xchg
pop
mov
inc
sub
pop
iret
insl
idiv
jl
cmpb
fimuls
stos
add
jp
sbb
fs
mov
dec
xor
adc
xchg
sbb
inc
sarb
pusha
adc
push
push
and
xchg
cmp
cmpsb
decl
pop
outsl
jecxz
int
fcmovu
mov
xchg
inc
sbb
mov
sub
pop
mov
sub
or
adc
xor
outsb
sbbl
out
mov
sbb
xlat
mov
lea
jecxz
jl
aad
and
or
mov
dec
adc
mov
rorl
mov
sbb
ret
movsl
mov
out
push
dec
mov
mov
loope
das
lods
xchg
inc
das
aas
jmp
push
popa
out
jns
mov
mov
jne
sbb
std
test
add
je
andb
jne
jle
add
clc
or
repz
mov
and
icebp
mov
outsb
inc
push
cmp
sarb
aaa
mov
aas
inc
iret
push
inc
sub
inc
mov
dec
fs
cmpsl
sbb
jl
in
and
arpl
jbe
cmp
sbbl
xchg
ss
fistps
insb
jg
jb
mov
adc
pop
dec
sub
fcmovnu
mov
test
jmp
jp
in
pop
outsb
jae
push
js
or
jo
push
leave
lods
dec
cmp
or
pop
mov
cmp
pop
add
pop
sub
les
ret
jb
xor
add
or
stos
adc
je
andb
or
fdivl
in
xor
mov
in
dec
xorl
add
mov
mov
sbb
xor
dec
loop
hlt
jg
dec
add
scas
lea
lahf
dec
pop
jns
out
dec
jae
sbb
cli
adc
repz
lods
fwait
inc
mov
xchg
cli
xchg
pop
lods
scas
das
cs
outsl
sbb
jb
sub
stos
jle
insb
fs
in
push
in
ja
push
leave
nop
shlb
jle
dec
icebp
push
in
mov
jecxz
push
xor
lret
imul
inc
insb
in
mov
push
push
pop
stc
ja
dec
xor
fstps
std
mov
jle
decb
mov
or
xchg
sbb
sti
neg
push
jae
lahf
inc
adc
cld
shrb
adc
adc
fincstp
scas
xor
dec
outsb
jae
imul
xchg
mov
inc
mov
adcl
divb
mov
ret
mov
sub
test
fwait
repz
adc
inc
push
in
imulb
or
js
add
mov
mov
push
ficoms
pop
cmp
jle
shll
add
daa
mov
sub
rcrl
jno
shll
cmp
mov
incb
shlb
xor
sub
stos
lds
jno
xor
push
dec
fs
out
sub
stc
cltd
lret
adc
mov
out
scas
xchg
cwtl
daa
test
outsb
xchg
and
pusha
imul
daa
and
push
mov
inc
or
dec
iret
cmpsl
or
sbb
mov
sarb
lret
add
lods
int3
addr16
andl
sbb
inc
sbb
push
push
iret
rcr
push
ficoms
movsl
movsb
adc
pop
add
fbstp
imul
and
fists
adc
hlt
mov
adc
pextrw
mov
or
xor
sarb
loope
pop
or
xchg
inc
rcrb
lea
adc
jnp
lea
arpl
fnstsw
cmp
js
or
dec
jle
sbb
push
test
insb
and
dec
jns
fnstsw
jmp
decl
and
lds
dec
mov
push
into
mov
sbb
jne
aam
sbb
sub
daa
cmpb
iret
into
sbb
mov
aas
ljmp
ljmp
gs
imul
lods
mov
add
stos
sub
mov
pop
stc
into
in
orb
dec
and
cmp
lret
jbe
mov
fnstcw
xchg
js
mov
push
stc
in
mov
cmp
ss
and
iret
lods
dec
xchg
jbe
inc
inc
inc
iret
movsb
outsb
fistl
sub
repnz
shll
mov
jne
pop
inc
insl
lock
daa
xor
fwait
jno
in
sbb
inc
in
pushf
mov
in
mov
popf
sbb
es
push
mov
sbbl
neg
loope
shrl
mov
test
add
dec
push
cmp
dec
jb
cmpsb
es
psubusb
mov
in
push
nop
adc
orl
daa
mov
mov
and
push
lret
ficoml
ret
xor
filds
pop
and
jl
out
adc
addb
gs
sub
xor
data16
mov
repnz
xor
mov
repz
xchg
lock
mov
mov
call
mov
in
jnp
jmp
mov
std
xor
push
insl
pop
adc
aad
cmpsl
add
insl
in
mov
push
repnz
xchg
orb
mov
cmc
and
in
push
cs
cmp
out
push
outsl
cltd
adc
mov
xchg
divb
sbb
lock
bound
std
nop
or
fst
and
sbb
sbb
call
fsubrs
lcall
cmp
fdiv
pop
ljmp
leave
jne
pop
imul
inc
dec
mov
sub
loopne
sbb
dec
jle
mov
push
fistpll
pop
cmp
pop
push
shrl
xchg
cmc
repz
jae
mov
xlat
xor
enter
mov
in
lods
in
inc
lds
xlat
punpcklbw
push
xchg
and
dec
inc
mov
inc
jae
jnp
sbb
jae
in
mov
mov
xchg
lcall
sub
adc
pop
in
pop
jbe
mov
cli
das
jmp
popf
push
lods
push
sub
mov
sub
jnp
aas
push
test
sti
fcmovb
or
pop
inc
hlt
mov
inc
imul
pop
fwait
js
loop
sub
ret
pop
sub
sbb
aas
int3
test
test
mov
xor
lcall
lds
xchg
pop
int3
dec
cmp
push
xor
cmpl
test
imul
xchg
test
ja
hlt
jl
mov
cmp
mov
jnp
or
das
outsl
dec
call
popa
lahf
mov
cs
lahf
jnp
mov
pop
inc
scas
dec
mov
jae
and
add
xor
mov
in
scas
addr16
jmp
je
sub
test
out
pop
icebp
stc
jo
push
adc
fistl
data16
outsb
loope
fs
pop
inc
int3
xor
xchg
rolb
rorl
add
cs
int3
inc
int
fwait
mov
push
sbb
sub
push
or
call
fwait
sbb
dec
cmpsb
fistl
cmp
ljmp
xor
out
int
mov
cmp
test
nop
jne
into
mov
jle
xchg
sbb
cmp
stos
pop
mov
test
inc
or
cld
aad
jl
arpl
xor
sahf
inc
rorl
loope
pop
sbb
popa
je
push
ret
xchg
addr16
xchg
pop
cmp
jmp
or
jo
lock
in
xchg
shll
fidivs
in
outsb
leave
push
jno
or
jae
in
push
sbb
sbb
pop
popf
inc
mov
test
push
lret
dec
cmp
or
sub
cmp
ja
xchg
add
repz
pop
add
jp
mov
out
mov
jbe
shlb
sub
stos
ss
pop
xorl
and
or
aam
fcompl
xor
or
dec
lock
ret
push
lret
aaa
adc
lcall
mov
dec
ret
add
xorb
push
xor
fcompl
mov
push
mov
add
jl
pop
imul
data16
cld
adc
pop
jl
xlat
out
mov
jae
dec
test
jbe
lods
add
add
or
cmp
adc
sub
dec
add
sub
aas
das
pop
or
or
adc
sbb
popa
into
stos
outsw
fcom
call
sub
jno
fdivrl
scas
or
dec
std
sub
sub
in
add
pop
xchg
call
out
fdivrs
push
and
jnp
jne
xchg
fidivrl
test
shl
js
mull
pushf
js
test
and
test
leave
nop
imul
inc
xchg
jne
repnz
hlt
jl
data16
hlt
into
sbb
aad
lea
ds
xlat
lret
lret
mov
nop
adc
fnsave
sub
sbb
nop
lcall
pop
and
sub
mov
in
lcall
sbb
pop
dec
mov
jno
mov
aam
adc
mov
into
jecxz
iret
mov
stos
mov
jae
mov
enter
mov
outsl
cmp
call
test
rcll
dec
imul
mov
cwtl
jo
dec
insb
out
dec
pop
xor
fidivl
cld
add
inc
push
mov
or
lahf
sbb
xor
mov
leave
cld
pop
inc
push
mov
and
sbb
sub
inc
jmp
mov
cmpsl
lret
ja
in
fbstp
js
sti
mov
xor
fwait
ds
adc
xlat
imul
adc
inc
xchg
adc
shrb
xor
mov
outsl
aas
mov
xlat
addb
jne
push
pop
mov
xor
add
insb
test
sbb
pop
sbb
jge
cs
fisubl
or
imul
enter
pop
movsl
jmp
je
and
pop
pusha
mov
sti
popa
loopne
adc
xchg
xchg
lret
shl
pop
lcall
dec
push
push
cmc
inc
mov
movsl
es
int3
sbb
jg
sub
fsub
and
jae
das
inc
mov
repz
dec
adc
xchg
inc
dec
gs
push
int3
inc
mov
cmpb
pop
pop
loop
push
xor
push
fiadds
out
jo
xor
outsl
adc
std
cmp
mov
sub
cmpsb
and
pop
out
xor
hlt
or
out
inc
in
enter
dec
push
pop
jns
pop
push
outsb
mov
mull
adc
iret
adc
mov
cmp
mov
pop
and
icebp
jae
int
shl
test
and
xor
lcall
scas
dec
cli
fists
je
dec
mov
ds
dec
into
jb
mov
sub
inc
rcl
and
int
in
push
mov
cmp
call
nop
dec
pop
lahf
mov
xor
loope
xor
jge
aam
out
xchg
lock
mov
sti
jge
ror
push
fcmove
mov
out
movsl
push
xchg
push
lock
adc
je
or
push
in
xor
ret
xor
xchg
cmp
dec
push
not
ficoms
daa
scas
movsl
imulb
sar
xchg
in
fcompl
cs
ficoml
adc
sbb
sti
jne
aaa
imul
push
inc
jno
in
ds
pop
xchg
lods
cld
add
clc
pop
dec
and
icebp
stc
call
sbb
dec
dec
mov
aam
in
pop
fiadds
adc
movsb
jno
sbb
sbb
jg
andl
mov
sbb
pop
int3
cmc
in
pop
mov
dec
inc
xchg
fucomp
dec
sar
pop
iret
movsb
aad
mov
aaa
imul
sbb
xchg
fisubrs
hlt
arpl
and
sbb
scas
into
loopne
add
into
add
in
xor
xchg
js
push
in
and
rcrb
mov
xor
in
mul
call
push
push
add
add
test
je
mov
subb
or
test
sahf
jmp
outsl
mov
aas
pushf
xchg
push
fsubs
or
test
push
pop
arpl
in
lret
xor
lods
ljmp
adc
into
mov
shlb
cmp
stos
ljmp
add
and
inc
add
inc
shrb
ret
add
sbb
push
pusha
pop
and
inc
cmp
dec
divl
insw
fnstcw
pop
in
lds
fildl
popf
clc
lods
lods
std
xor
pop
gs
aaa
negb
lcall
int
or
scas
test
sbb
xor
xor
cli
push
test
in
push
jle
stos
insb
or
jae
add
xor
mov
push
js
shll
adc
pop
adcb
sbb
test
pushf
pop
sarb
xlat
add
push
pop
jge
dec
push
repz
arpl
push
sti
xchg
inc
dec
mov
cmp
divl
gs
scas
lcall
add
push
sub
mov
add
push
cmp
mov
inc
xor
ja
jns
push
mov
add
repz
or
nop
inc
push
push
pushf
in
cmpl
hlt
push
and
cmc
addl
pop
not
xchg
aad
mov
jae
test
pop
jnp
or
dec
cmpl
or
pop
inc
cmp
aas
mov
mov
mov
push
and
jbe
pusha
xor
imul
mov
adc
push
insb
or
js
dec
shlb
mov
push
mov
pop
and
xor
rcl
cmp
fs
and
aad
push
orl
shrb
jle
mov
aas
mov
xlat
adc
xchg
hlt
dec
jbe
xchg
inc
iret
sub
mov
imul
fdivrs
and
sarb
jl
iret
imul
pop
xlat
aam
xchg
inc
inc
test
xor
jb
nop
or
cmp
sbb
psraw
insl
int3
or
jg
add
xlat
mov
repnz
xchg
xchg
je
pop
leave
ljmp
pusha
outsl
inc
dec
int3
cwtl
and
jmp
imul
jo
mov
aas
push
adc
pushf
aam
xchg
icebp
mov
enter
xchg
in
in
mov
and
stos
xor
jl
scas
add
jnp
dec
pushf
fdivl
or
and
xor
fcoms
mov
mov
fldt
pop
mov
sarb
push
int
in
push
test
sub
cli
test
ja
cmp
cmp
mov
inc
nop
nop
mov
iret
test
jmp
movsb
push
add
ds
repz
push
out
ret
mov
lret
stos
dec
inc
mov
stos
mov
push
adc
lahf
mov
mov
fdivrs
mov
pop
es
pop
jo
scas
inc
arpl
int
cmp
jns
and
mov
insb
or
in
sbb
fnstenv
add
inc
popa
jae
pop
dec
xchg
adc
push
sub
jne
cld
out
xor
jl
rcr
adc
lods
iret
decl
or
fistpll
mov
inc
adc
lock
out
xchg
pop
pop
jbe
loope
loope
repnz
in
mov
clc
xor
nop
adc
xchg
fbld
mov
lods
loopne
mov
scas
or
sbb
sti
out
outsl
xor
leavew
sub
es
in
mov
jo
mov
out
dec
insb
sub
dec
dec
cmp
mov
adc
js
lret
fisubs
pop
shlb
cwtl
dec
and
cmp
bound
xor
cmpsb
mov
inc
pop
stc
xor
test
push
out
les
jg
cltd
xor
mov
addr16
jb
and
pusha
push
movsb
cmp
cmpsb
jo
aas
stos
push
mov
pop
ja
dec
mov
daa
leave
adc
xchg
pop
ss
xchg
push
mov
jmp
cmp
movsb
jp
jmp
cmp
shlb
jb
jmp
repz
cltd
lock
push
scas
pushf
pushf
jae
dec
lret
pop
int
dec
mov
or
lcall
jg
xlat
xchg
inc
inc
sub
adc
lret
xchg
test
pop
xchg
imul
imulb
add
leave
aam
pop
mov
in
xchg
cmpsb
jg
insl
in
mov
dec
popa
mov
inc
jno
int
ret
inc
call
outsl
es
fwait
dec
push
inc
fldcw
int
pop
int
sub
ja
adc
popa
loope
lds
xor
add
adc
test
das
ss
lcall
add
mov
pop
int
push
fmuls
ss
fwait
ljmp
add
and
add
mov
mov
jecxz
mov
fcoml
fimull
pushf
xor
mov
ret
sbb
popa
popa
push
rorl
fs
or
sub
and
mov
loopne
or
test
insb
mov
xchg
test
adc
lods
popf
adc
jg
dec
mov
or
lds
jge
arpl
fwait
repnz
pop
sbb
cmpsl
sub
sbbl
int3
and
fsubrs
outsl
arpl
mov
mov
addb
fbstp
dec
fs
cmp
pop
xchg
xchg
mov
lods
fidivrl
inc
pop
je
scas
sub
cltd
bound
jb
fcompl
pusha
stos
push
push
outsl
or
sbb
call
xor
cmp
jecxz
xchg
cs
gs
inc
in
orb
add
push
hlt
sahf
or
sti
fwait
test
fimuls
lods
cld
mov
aas
sub
jbe
lea
orl
cwtl
sbb
dec
xchg
leave
lret
or
push
iret
inc
push
mov
mov
jp
cmp
aam
cltd
lods
scas
or
cld
xchg
add
jae
icebp
jl
lock
push
push
and
cmp
movsb
dec
imul
dec
mov
mov
mov
cmp
xlat
adc
fisubrs
cmp
aas
or
add
notl
sbb
sub
xor
pop
mov
xchg
fldcw
push
loopne
sbb
sbb
dec
mov
lock
fwait
pop
mov
xchg
cwtl
jb
fisubs
jae
popf
cmp
je
pop
push
insb
outsl
lret
popa
xchg
insb
xor
pop
stos
and
cmpsb
mov
inc
lcall
test
jnp
pop
inc
inc
out
repnz
sbb
loopne
xor
mov
mov
mov
push
xchg
mov
jns
dec
or
and
jne
pop
jp
and
int3
jo
mov
add
mov
nop
jbe
das
out
xor
sbb
mov
fs
rorl
into
and
pop
fnstcw
mov
std
mov
in
sbb
movups
arpl
int
adc
mov
and
aad
xchg
movsb
subb
dec
in
lock
jne
inc
scas
sbb
scas
xchg
xlat
ret
jmp
mov
scas
insl
popf
push
call
and
lret
fiaddl
inc
or
or
mov
cld
out
pop
xchg
pop
xor
pop
and
jg
cmpsl
in
or
mov
xchg
ficoml
loop
and
in
std
out
ret
roll
mov
into
pop
imul
sbb
or
mov
xor
ret
arpl
outsb
cmp
xlat
fcomp
push
sub
inc
sub
or
and
xchg
jae
cmc
shll
add
mov
aam
push
int
pushf
scas
insb
pop
cmp
xchg
jge
or
std
aas
dec
out
lea
mov
psubsb
xchg
inc
ss
adcb
pop
pop
fwait
inc
test
inc
sar
inc
add
aaa
es
push
adc
outsl
jle
cmp
jp
fidivrl
imul
stos
pushl
test
enter
cs
lods
add
dec
stc
out
outsl
test
lahf
push
arpl
stos
mov
fdiv
loope
dec
inc
mov
out
aad
add
push
inc
xor
mov
pop
stc
cs
clc
fiaddl
mov
jmp
mov
cmpsb
dec
sarb
mov
pop
jns
arpl
xor
cmp
rdtsc
repz
mov
adc
ss
pop
popf
jg
psllq
scas
int
add
aam
sub
clc
rcrl
xor
mov
push
jmp
cmpb
or
dec
inc
call
mov
into
cld
scas
pop
adcb
mov
cld
pop
add
ja
and
jnp
adc
push
stc
inc
sbb
pop
mov
ljmp
sbb
pop
inc
mov
leave
push
sbb
test
cli
dec
jno
inc
sbb
sbb
adcb
push
jg
cmpsl
out
fs
outsl
mov
inc
dec
mov
mov
xchg
sub
negb
ret
clc
xchg
mov
inc
fwait
jl
adc
xlat
xchg
sti
cmp
pop
aaa
in
es
icebp
and
insb
ret
insb
jl
cpuid
mov
outsb
stc
inc
jecxz
push
mov
das
popa
test
lret
adc
fsubrs
lcall
mov
jle
lret
iret
and
sbb
dec
pop
cmp
int3
imul
xor
ss
gs
int
sti
adc
das
sbb
jmp
mov
cs
adc
sub
xchg
mov
xchg
pushf
dec
push
gs
lock
call
sbb
cld
inc
insb
push
push
jmp
inc
jecxz
cwtl
cmpsb
mov
adc
inc
push
inc
add
dec
push
xchg
in
pop
or
call
out
mov
in
das
mov
cmp
lds
jl
sbb
rolb
cmp
fpatan
mov
inc
sbb
stos
cwtl
jmp
cmc
mov
aam
roll
sahf
scas
lods
mov
call
fistpl
mov
mov
xor
cs
add
inc
adc
popf
hlt
adc
or
adc
jg
or
fs
mov
xchg
or
inc
lahf
inc
push
outsb
sti
mov
ds
test
lea
pop
outsl
movsb
or
ss
pushf
flds
xchg
cmc
cwtl
loope
add
cmp
adc
mov
cmp
call
inc
mov
adc
int
clc
enter
dec
jns
mov
cmc
sbb
and
mov
sahf
repnz
stos
repz
in
sub
sub
popf
je
xchg
aas
push
or
out
stos
push
push
xchg
xor
push
push
iret
in
lfs
push
rcll
iret
sub
out
imull
jne
aad
rolb
daa
fdivs
mov
inc
add
loope
inc
push
xchg
leave
push
lock
sub
hlt
bound
sahf
std
mov
rcr
lea
ljmp
sbb
and
jbe
ja
roll
mov
bound
dec
inc
mov
add
out
les
mov
sbb
outsl
sub
or
in
xchg
push
lock
iret
scas
dec
mov
les
stos
pop
mov
insb
jmp
lahf
lcall
fdivrl
pop
ret
pop
mov
jb
jge
push
dec
adc
aad
out
pop
jp
sub
int3
cmp
jnp
xorl
cmpl
shl
cmp
sar
push
xchg
nop
push
sub
fmul
xchg
jno
iret
repz
lds
pop
add
adcb
pushf
outsb
mov
clc
cli
sub
loop
or
fwait
addr16
mov
add
add
cmp
mov
or
out
jg
jnp
adc
cmp
icebp
jae
fs
jecxz
pop
jbe
adc
jl
scas
pop
push
add
nop
adc
inc
scas
pop
sahf
dec
fildll
pop
sti
addr16
testl
hlt
and
lods
cmp
and
sbb
add
repz
cmp
mov
push
xor
mov
ljmp
outsb
pop
jb
jmp
int3
push
sbbb
dec
fwait
js
mov
jg
andl
sub
jecxz
cltd
jae
mov
int
fiaddl
push
push
push
and
sub
fstl
out
cmp
mov
jmp
or
add
leave
out
sbb
mov
xchg
aad
sub
adc
lahf
xchg
mov
scas
out
xchg
mov
out
jnp
inc
cmp
leave
shlb
mul
mov
loope
vpmulhw
pop
xchg
jnp
inc
push
movsb
mov
cmp
dec
out
or
fcmovu
add
leave
push
ret
enter
movsb
les
fs
dec
lret
nop
loopne
repnz
int3
dec
cmc
test
imul
add
xor
xchg
rorl
sbb
jns
mov
mov
ret
imul
pop
je
dec
mov
dec
sub
ret
xor
test
cltd
and
hlt
mov
add
push
xchg
cmp
enter
adc
decl
xor
fidivl
scas
mov
popa
mov
dec
or
xchg
negl
ret
jne
addb
cmpb
or
fistpll
adc
ret
mov
lcall
pop
cli
jo
nop
sahf
adc
pusha
inc
mov
mov
pop
sub
lods
push
xor
lods
shll
jno
jne
push
jecxz
xchg
incl
pop
add
add
jg
or
rcrl
mov
jno
pop
outsb
mov
js
mov
cmp
cmp
or
insl
adc
jecxz
sub
push
outsl
int
adc
js
adc
and
fdivp
sub
mov
mov
or
adc
cmp
leave
cmp
into
adc
sbb
pop
sub
push
or
inc
xchg
jmp
mov
adc
retw
filds
mov
sub
pushf
mov
dec
fst
inc
and
out
inc
int
sub
icebp
mov
aas
xchg
mov
shrl
mov
sub
out
dec
aam
gs
addr16
push
jge
xchg
add
dec
subl
mov
inc
lcall
sbb
ljmp
add
add
ja
cld
inc
emms
inc
inc
rcr
pop
in
pop
out
ret
popa
cmp
jp
jmp
subl
iret
cmc
lret
popa
inc
and
mov
out
push
inc
push
mov
pop
pop
sti
push
cli
push
sti
mov
jp
jae
xchg
imul
std
dec
pop
or
jge
lods
leave
hlt
sub
add
loope
loop
popf
shlb
sbb
dec
insb
sub
rorl
movl
cmc
ja
sbb
adc
rep
and
or
add
jmp
pop
push
stos
add
stos
inc
fistpl
jae
and
arpl
adc
cmp
pushf
aas
xor
sbb
push
mov
adc
aas
movl
sbb
or
add
js
xor
push
add
addl
movsb
shll
sub
mov
xor
mov
jae
imul
mov
rcll
mov
push
dec
cmp
cltd
cmp
push
dec
or
inc
jo
xlat
jne
mov
sub
subb
fstpl
int3
jl
popf
scas
mov
and
fnstenv
mov
imul
int3
out
fdivrl
lods
out
mov
mov
outsl
test
push
imul
pop
sbb
xor
data16
inc
push
jns
bound
jno
or
or
out
sub
push
js
stos
shrb
jle
inc
jb
or
insl
add
inc
std
xor
add
lods
push
ret
out
int
xchg
push
dec
lret
cs
jg
aaa
mov
aas
adc
fsubs
jl
push
test
fdivp
ret
mov
xlat
add
test
push
iret
adc
push
stos
add
xor
mov
lods
notl
or
and
repnz
dec
lea
pop
loop
lcall
aas
mov
jno
inc
sub
aad
add
gs
outsb
pop
xchg
xchg
and
dec
bound
pop
repnz
and
pop
add
or
cld
cld
outsl
ret
add
mov
push
or
push
mov
adc
inc
ljmp
xor
jno
out
fisubs
sbb
cs
adc
push
lret
dec
pop
cmp
adc
out
movsb
xchg
popf
mov
dec
pop
add
lcall
jne
mov
mov
jnp
push
or
lds
leave
outsl
push
push
repz
push
outsl
ds
sbbb
popa
icebp
outsb
sbbb
mov
mov
push
iret
pop
jne
insl
inc
hlt
xchg
rolb
dec
cli
fdivr
mov
incb
xchg
das
add
cmpsb
jmp
mov
xlat
fidivs
das
jno
adc
inc
inc
xchg
movsl
loop
dec
in
sub
adcl
rclb
inc
in
jle
out
mov
popf
jns
jge
pop
pop
ljmp
mov
or
out
push
ja
xor
xchg
adc
fidivrs
fsubl
xorl
and
jne
cmp
ljmp
pop
inc
stc
mov
dec
pop
xchg
fisubs
add
fnstcw
sub
out
inc
fcmovb
fs
out
cmp
dec
xor
xchg
pop
lret
out
int
jo
and
scas
cmpsl
cmp
cwtl
lods
cwtl
jp
jge
mov
and
mov
subl
xchg
aam
or
clc
pop
aas
push
pop
and
xchg
sahf
jmp
push
mov
sbb
and
out
xchg
int
call
aam
xchg
repz
inc
in
mov
push
dec
mov
movsl
add
aad
jge
imul
loope
push
stc
jecxz
add
push
pop
sub
cmpsb
xor
mov
jecxz
pop
iret
dec
andb
jg
out
jmp
sti
or
in
js
jne
ljmp
enter
lock
movsl
mov
mov
push
cmp
imul
mov
stc
icebp
ljmp
push
or
aas
xchg
pop
cmp
adc
xlat
fisttpll
mov
adc
test
sbb
lahf
repz
push
in
pop
push
push
aas
xor
jecxz
xorl
cltd
dec
jae
mov
mov
sub
dec
jo
rcrb
and
or
adc
out
push
xchg
mov
mov
ret
dec
add
dec
ss
fbld
xchg
shll
aad
dec
inc
mov
adc
mov
mov
and
cltd
lcall
xor
je
or
inc
shlb
cld
xor
cmp
mov
lahf
adc
mov
fs
loop
fbld
add
xchg
jp
pop
gs
mov
mov
ret
nop
lret
or
repnz
and
lods
xchg
push
jne
fisubrs
nop
pusha
mov
jae
mov
xchg
loop
push
roll
or
insb
dec
sub
rclb
je
mov
push
cmpsb
cmp
iret
dec
dec
mov
cmp
and
push
cmpsb
hlt
xor
pop
jp
jp
jmp
out
pop
inc
jbe
test
xchg
iret
insb
ret
push
lret
sarb
adcl
push
push
xor
pop
mov
mov
jbe
cmp
je
movsb
pminsw
push
lea
cmpsb
and
jno
in
enter
cwtl
inc
sbb
mov
loope
fimull
mov
test
loope
jecxz
stc
jb
fs
cmp
das
idivb
xchg
gs
mov
les
add
imul
mov
xchg
ret
mov
gs
mov
cmpsb
fadds
pop
sbb
sbb
fnstcw
add
andb
mov
repz
or
addr16
bound
add
rcrl
test
cmp
hlt
pushf
lds
loopne
and
jns
push
or
jg
mov
lret
sub
outsl
jno
jns
sub
jmp
mov
pop
add
test
adc
xor
lahf
mov
mov
xchg
shrb
lret
fcmovnb
sub
out
sub
push
xor
dec
mov
inc
and
arpl
jne
lret
mov
cmp
and
mov
les
maskmovq
testl
xor
ja
cli
sbb
fs
int
callw
cwtl
jno
or
lret
mov
lret
lret
mov
push
mov
imul
andl
adcb
stos
mov
dec
adcl
sub
test
push
and
jae
stos
jns
and
in
ljmp
cwtl
sbb
ss
fdivl
outsb
push
into
adc
add
in
inc
fwait
enter
aas
movl
dec
mov
clc
jo
sub
movsb
xlat
fs
divb
jno
test
sti
sbb
xchg
sbb
cltd
inc
notb
sub
sub
jnp
stc
test
fbstp
jo
fistpll
or
sub
sbb
push
jl
xlat
pop
sbb
jns
adc
fcmovbe
adc
mov
jbe
dec
scas
dec
dec
mov
cli
sahf
jae
fildl
add
movsl
aas
int
rolb
jnp
or
rcr
xchg
inc
jb
stc
dec
or
or
imul
mov
insl
shlb
jge
fnstenv
ret
sbb
pop
adc
lods
xchg
xchg
pop
pop
and
rcll
pop
cli
out
ret
inc
popa
or
mov
push
decb
pop
mov
cmpsl
hlt
sbb
mov
cli
inc
ret
cmpsb
sub
ret
push
add
inc
push
mov
and
js
xchg
push
cs
push
jbe
mov
push
out
imul
movsb
out
xchg
roll
jno
popa
sub
xchg
inc
mov
pushf
pop
push
pop
adcb
push
out
add
and
sbb
movsl
lods
iret
pop
sub
xchg
sbbb
aas
jnp
inc
push
sbb
jl
adc
xor
jp
add
hlt
and
mov
adc
cmp
jno
lret
jle
xchg
jo
movsb
and
sub
icebp
icebp
repz
dec
pop
push
push
cli
shrb
push
dec
repz
scas
int3
inc
out
rcrb
xchg
icebp
lahf
lea
aaa
inc
mov
cmpsb
stc
xlat
pop
cmp
and
imul
xchg
and
mov
and
lret
repz
fwait
sahf
imul
add
add
filds
pop
leave
cmp
jo
or
mov
and
inc
daa
out
in
test
mov
add
cmp
sbb
pusha
push
lret
push
test
daa
and
or
and
adc
pop
outsb
sbb
push
loop
mov
loope
pop
cs
test
add
jo
lock
dec
in
cld
pop
jl
rcr
push
in
outsl
iret
mov
mov
pop
dec
ljmp
aas
jg
cmp
clc
movsb
les
addr16
jns
dec
and
dec
fs
out
xchg
js
jo
push
jp
and
mov
inc
bound
jno
cmpxchg
cs
push
dec
orl
rorb
fistl
jae
pop
fchs
dec
rorb
fidivl
inc
hlt
hlt
pop
adc
mov
call
fistpl
add
sub
aam
sub
xchg
lods
imul
mov
and
out
aas
lea
insb
int3
inc
mov
arpl
jno
scas
lods
and
popf
fisttpll
movsl
aad
dec
jge
xor
call
mov
mov
inc
adc
loope
pop
push
mov
cmc
xchg
lret
add
inc
outsb
or
pop
push
fisubrl
fwait
sbb
mov
sti
pop
nop
cmp
push
loope
in
loopne
fwait
outsb
mov
loop
popf
mov
je
xor
fcomip
jmp
adc
ljmp
jns
adc
test
jg
shrb
push
xchg
ljmp
adc
ret
call
pop
aas
mov
dec
lcall
loop
test
push
xor
mov
cmp
mov
adc
cmp
loope
xchg
mov
add
ss
cmp
outsl
out
loop
and
mov
lret
les
jno
add
lahf
dec
pop
stos
shlb
lods
xorl
xor
add
and
push
dec
inc
ja
in
cltd
aaa
mov
cmc
pop
cmp
adc
imul
cld
xor
jecxz
mov
repnz
xor
enter
test
orl
sub
movl
dec
cmpsb
dec
add
cmp
dec
loopne
pop
or
sbbl
and
std
rorb
sahf
mov
sbb
and
loope
mov
rcrl
adc
je
call
or
xchg
xlat
inc
icebp
jmp
and
repnz
mov
sbb
hlt
icebp
shll
cmp
mov
cwtl
fists
pop
fstpl
movsb
iret
pusha
sarb
js
jns
fwait
xchg
jae
lea
mov
test
ficomps
aam
cld
and
mov
pop
idivb
jns
mov
loope
add
xor
dec
pop
xchg
mov
sbb
addb
sbbb
movsb
pop
dec
fsts
sti
xor
aad
and
inc
dec
insl
mov
inc
rolb
mov
mov
iret
imul
lods
mov
mov
mov
imul
sub
inc
mov
mov
xor
xchg
xchg
insb
flds
je
pushf
sub
aam
mov
inc
ret
mov
add
xlat
aaa
mov
ss
pusha
outsl
outsl
mov
enter
jnp
sbb
test
outsb
add
pop
xchg
dec
daa
fadd
or
cwtl
lods
add
lret
imul
pop
in
inc
lcall
xor
rorl
iret
lcall
loope
mov
imul
jns
mov
jnp
mov
add
or
dec
mov
movsb
mov
pop
addr16
out
and
int3
lahf
adc
mov
xor
lret
shll
add
icebp
sub
fldenv
pop
add
pushf
arpl
jne
in
xor
xchg
das
divb
imul
insl
int3
mov
call
cmp
sahf
xor
cmp
imul
cmc
fmull
push
movsl
jb
loope
xchg
int3
cs
lods
and
inc
dec
xchg
shll
mov
insl
repnz
lods
sbbl
or
jnp
mov
xchg
jns
dec
sub
and
imul
lcall
popa
jp
repz
outsb
aas
lea
enter
xorl
dec
cli
pushf
add
push
or
push
ss
cmp
test
lcall
out
jns
stos
jl
push
adc
lret
and
xor
and
loope
aam
cli
insb
dec
mov
lahf
jle
js
xchg
aaa
stos
popf
add
daa
pop
popf
idivb
xor
or
shll
xchg
idivb
stos
imul
xor
pop
lods
loop
pop
movsb
das
and
and
rorl
xchg
sub
inc
mov
ror
mov
mov
mov
sub
ljmp
fcoml
sub
adc
sbb
mov
or
jmp
loopne
sbb
ja
sub
ret
sub
bnd
test
cmp
scas
mov
lods
popf
lret
jecxz
loop
out
sub
xor
pushf
roll
inc
ror
mov
mov
xchg
push
ljmp
dec
cld
inc
fildl
int
adc
add
sub
fadd
jecxz
imul
push
aam
mov
cmp
gs
xor
cmp
xor
inc
and
cmp
dec
jecxz
mov
xchg
cmp
mov
xor
cmp
inc
jmp
and
xor
mov
push
pop
fcoml
icebp
push
xchg
xor
shr
inc
mov
jge
mov
cwtl
popf
in
push
pop
jb
ljmp
xchg
test
adc
pop
pop
mov
inc
sbb
scas
dec
jl
cmp
add
push
cmpsl
or
pop
xchg
imul
aaa
xchg
or
push
sahf
js
and
pop
inc
mov
stos
fld
cmp
dec
lret
scas
inc
push
pop
mov
or
cmpsb
push
dec
enter
cwtl
adc
or
aad
adc
out
iret
sbb
or
notl
out
dec
pop
or
mov
or
ljmp
inc
mov
and
stos
outsb
add
shrl
jg
sbb
mov
lret
loop
popf
cld
inc
enter
jp
cmp
push
movb
jae
xorb
lods
lret
mov
pop
xor
xchg
aad
push
daa
pop
movsl
pop
ret
jnp
mov
mov
xchg
call
shll
jbe
inc
lret
mov
std
cmpsb
dec
sub
mov
clc
lods
call
and
pop
cmp
shrb
hlt
or
lret
jns
aam
stos
mov
test
and
icebp
inc
mov
pop
mov
xor
or
pop
pop
sbb
repnz
jmp
ror
iret
ret
jne
outsb
mov
imul
inc
or
sbb
inc
out
dec
es
inc
imul
adc
sub
mov
int3
stc
ret
push
clc
rorb
out
push
sbb
sahf
pop
inc
out
or
inc
psubsw
sbb
inc
sbb
test
sbb
cmp
lods
adc
mov
inc
mov
sub
mov
insb
cwtl
stos
fstpl
mov
mov
repz
add
cwtl
jns
dec
data16
pop
fbstp
ja
adc
in
rcr
gs
lods
inc
test
push
nop
adc
adc
cmp
clc
push
inc
inc
aaa
push
sub
mov
cmpsl
jo
mov
sbb
inc
or
shlb
aad
test
fistl
daa
adc
out
js
outsl
sbb
fs
lea
ret
xchg
es
mov
int3
imul
fisttpl
aam
lock
test
jb
aaa
cli
push
add
call
pop
std
pop
decb
mull
jns
into
fisubs
movsl
pop
ss
sbb
mov
shr
call
or
and
dec
lcall
jno
es
lcall
or
push
cmp
fstp
lret
hlt
mov
out
daa
stos
inc
iret
in
mov
xchg
cwtl
cmp
ret
xor
dec
ja
dec
dec
sahf
pop
imul
fsubs
lds
push
mov
and
fwait
loopne
iret
cld
mov
pop
mov
xor
adc
and
loope
sub
mov
or
jbe
mov
mov
mov
dec
addr16
cmc
xor
in
adc
inc
stc
pop
add
mov
shrb
push
jo
je
or
inc
cmpb
mov
loopne
mov
jecxz
sbb
adc
xor
out
jae
sub
cli
jg
pop
dec
popf
lea
xchg
pop
scas
icebp
cmpsl
jne
or
cmp
pop
out
pop
clc
insb
fbld
int3
ss
cmpsb
pop
lods
repnz
or
dec
test
sub
inc
sarl
mov
lret
and
pop
cmp
loop
inc
sub
mov
jmp
or
inc
in
jecxz
sbb
sbb
nop
repnz
push
xchg
sbb
cmpsl
and
mov
sbb
js
adcb
test
adc
dec
daa
fildl
pop
in
movsb
or
jo
lahf
pop
mov
mov
je
mov
xorl
or
adc
mov
mov
mov
or
jle
popf
inc
push
test
xchg
pop
hlt
jmp
xchg
xor
sbb
stos
xor
and
fnstcw
mov
sub
inc
sub
mov
cmp
je
and
clc
pushf
push
jo
je
in
mov
or
idiv
into
test
test
out
pop
inc
add
xlat
xor
es
mov
mov
std
sub
movsl
adc
cmc
jp
fwait
jg
jmp
and
clc
jecxz
bound
lea
dec
cmc
jbe
cmp
mov
inc
out
cmc
mov
add
sbb
push
cmp
jo
xlat
mov
mov
ret
das
test
mov
sbb
repz
outsl
xor
mov
jp
sub
in
addl
lcall
xchg
push
cmp
push
jecxz
leave
dec
sti
negl
int3
in
inc
sub
jle
std
push
push
sub
push
inc
pop
cmpsl
sbb
push
lods
test
enter
and
and
dec
and
movsb
mov
jae
pop
jno
xor
cwtl
sbb
aaa
stos
imul
scas
js
int
mov
dec
ss
ret
jbe
outsb
pusha
xchg
sbb
or
test
loope
xchg
and
in
fs
ret
pop
ds
xor
cmp
movsb
mov
inc
pop
cmpb
cmpsb
repnz
test
or
cwtl
lods
mov
andl
dec
sub
popf
jp
lds
mov
pop
repnz
test
loop
stos
inc
cmp
stos
jge
adc
lret
push
jl
pop
mov
push
add
push
addb
dec
jecxz
insl
gs
mov
push
cmp
jl
dec
in
sar
fwait
add
mov
mov
pushf
push
cmp
mov
push
in
jnp
push
mov
mov
xchg
mov
push
cmp
lret
dec
dec
cld
ret
add
or
sbb
divl
in
xor
xor
and
xor
mov
ja
adc
mov
mov
orl
jmp
outsl
adc
jns
sbb
jle
lcall
out
mov
push
adc
inc
out
fadds
gs
mov
cmp
cli
push
dec
xor
mov
inc
mov
dec
je
hlt
and
outsl
dec
xchg
ja
cwtl
lret
jnp
xchg
rcr
shll
mov
mov
popf
push
mov
lock
gs
arpl
jp
sub
std
add
das
insl
test
jno
cmpsb
jl
imull
push
mov
mov
mov
add
pop
cmp
push
sub
pop
sub
loope
cmp
xchg
cld
push
out
mov
loope
xchg
mov
pop
cmp
inc
bound
sahf
mov
out
mov
pop
in
jmp
inc
or
xor
cltd
mov
filds
mov
mov
mov
lock
fnstenv
loop
nop
fmulp
daa
xchg
cmpsl
nop
xlat
mov
out
iret
cmpsl
leave
mov
test
and
shlb
ret
sub
pop
dec
pop
dec
in
sahf
fcomi
loope
push
sbb
mov
and
and
jp
sbb
push
dec
mov
mov
pop
sbb
mov
pop
inc
jge
inc
sbb
mov
sub
push
push
xchg
es
pop
push
push
jmp
mov
popa
dec
loope
inc
pop
out
adc
dec
call
popf
jno
lcall
inc
mul
jle
scas
aad
in
adc
subb
mov
sub
cmp
mov
das
loope
push
or
bound
inc
inc
cmpsl
xchg
mov
dec
cli
and
add
in
xchg
dec
fistpll
aas
inc
ret
aas
fsubs
ret
or
sbb
inc
adc
adc
imul
lea
imul
jns
outsl
push
rolb
ljmp
jecxz
adc
test
shll
or
mov
mov
inc
hlt
and
cmp
lods
mov
mulb
imul
int
xchg
loop
jl
and
mov
aad
mov
push
jo
or
cs
xor
and
push
std
insl
fisubs
adc
fs
or
hlt
cmp
xchg
sbb
jmp
lea
fstpl
xor
sbb
rolb
popa
mov
sbb
repz
or
fnstsw
lret
mov
mov
sbb
frstor
jns
jnp
dec
sbb
lahf
sub
push
xchg
or
out
testw
lahf
and
aam
inc
mov
jbe
es
dec
xor
mov
addb
std
mov
loope
ljmp
scas
push
jp
fcoml
outsb
mov
outsb
pop
dec
stos
add
pop
lods
fisttps
cmc
pushf
pop
lock
cmc
sbb
fldl
pop
icebp
cmpsb
xor
xor
nop
sbb
clc
mov
cmp
enter
xchg
push
int3
pop
mov
mov
or
cmc
test
mov
dec
inc
aad
mov
outsb
in
lea
movsl
mov
xor
mov
pushf
jne
repz
sbb
inc
loopne
ja
or
and
mov
in
dec
cwtl
mov
dec
out
ret
imul
mov
stos
push
jne
add
mov
fcomps
out
xchg
cmpsb
insl
jne
cmp
sub
xchg
or
or
in
pop
aam
pop
fsubrs
stc
xchg
movsl
hlt
lcall
data16
divb
gs
or
xchg
cld
or
jae
ret
and
add
ds
lods
jl
sub
shll
jnp
sti
push
aam
test
jnp
mov
xor
test
push
fiaddl
inc
mov
fidivrs
cs
ror
in
xor
ret
in
insl
out
xor
inc
out
movsl
inc
pop
xchg
pop
lods
add
mov
fcmovne
mov
inc
xchg
in
fldt
daa
fistps
enter
out
mov
sahf
lcall
pop
or
sub
and
ljmp
pusha
or
pusha
out
lret
sbb
mov
into
sbb
outsl
rol
cmpsl
scas
test
inc
xchg
jl
jp
xchg
out
push
mov
push
inc
bound
jmp
pop
mov
aad
jmp
jl
push
jp
jecxz
iret
aaa
push
jge
sub
or
add
dec
cld
push
xor
dec
adc
add
push
xor
dec
mov
lahf
mov
xor
mov
outsb
orb
adc
jb
inc
fstpt
test
jmp
mov
cmc
imul
lods
addb
test
ja
mov
in
out
leave
ret
mov
pop
int
add
push
xor
stos
repz
shll
or
jmp
fistpl
cld
push
lcall
push
out
push
mov
jb
xchg
movb
push
pop
hlt
in
push
lret
ds
cwtl
xchg
mov
lock
xchg
cmp
inc
popf
mov
xor
mov
es
loop
push
inc
in
andl
mov
add
jbe
fmull
es
or
icebp
dec
mov
leave
xchg
mov
sbb
lea
add
int3
jl
sbb
sub
pop
inc
mov
add
push
cli
imulb
cmp
pop
jp
gs
mov
dec
add
jb
push
fldl
xchg
lret
sbb
je
inc
mov
popa
pop
ds
in
jae
sub
lcall
outsb
xchg
leave
xor
cmc
testb
imul
push
addl
out
nop
pushf
rcll
nop
dec
psubusw
mov
cmp
mov
loope
int
iret
lea
xor
test
cmpb
int
sbb
or
cld
sub
into
loope
adc
dec
mov
cmp
mov
mov
std
or
sub
or
rcrb
jno
popf
xchg
outsb
adc
in
pushf
mov
fldt
loop
or
mov
arpl
subb
cmp
jecxz
int3
push
push
ljmp
mov
push
push
jb
mov
cs
outsl
add
mov
cmpsl
outsb
pushf
add
mov
les
cmp
je
jge
jecxz
dec
andl
arpl
insb
mov
and
aad
pop
mov
push
pushf
lret
cmp
mov
sub
push
push
cmp
jle
mov
insl
cmp
popa
sub
jae
mov
fbld
xchg
push
jg
xchg
and
add
add
adc
fpatan
jbe
out
subb
push
mov
lret
mov
cli
into
dec
nop
mov
or
shlb
cltd
jns
into
shll
sbb
inc
loopne
xchg
sbb
lea
stc
xchg
pop
stos
call
hlt
faddl
xlat
sub
hlt
fcomps
cmc
gs
sbb
cmp
jno
adc
aam
sub
push
cmpsb
outsl
test
inc
pop
add
add
jl
cli
mov
repz
jbe
xchg
rolb
lods
dec
jo
xor
rol
sbb
or
sub
cmp
dec
adc
push
xor
xor
xchg
sub
test
dec
xor
mov
cmp
bnd
loop
int
aad
mov
xchg
scas
test
mov
and
dec
mov
xchg
std
fsubrl
je
test
enter
mov
or
push
cmpsb
movsl
push
enter
ss
add
mov
jecxz
dec
pop
cmp
mov
in
dec
mov
jno
push
jl
and
scas
int3
outsl
push
pop
movsl
cmc
xlat
inc
dec
or
pop
jl
sahf
sbb
fcompl
push
and
jp
out
adc
mov
daa
add
inc
cmp
loope
fsubrs
movsb
outsl
xor
dec
in
jnp
fs
sbb
mov
mov
stos
mov
fwait
adcb
dec
inc
inc
pusha
popf
push
shr
loopne
ret
outsb
and
das
xchg
xor
adc
mov
xchg
mov
sarl
ja
mov
fmuls
je
dec
psubusw
movl
cmpsb
mov
fimull
mov
pop
cmp
fs
xchg
mov
cmc
les
and
mov
cwtl
in
or
add
popf
dec
push
out
inc
sub
jb
push
sti
fdiv
adc
jo
inc
cmp
test
out
pop
xchg
ljmp
call
arpl
pop
orb
movsb
jns
xchg
or
cmp
loop
cmpl
and
inc
jae
adcb
sub
mov
js
or
pushf
popa
bts
inc
sub
hlt
sbb
xchg
mov
mov
loop
and
xchg
je
flds
add
jae
sarl
ret
mov
xchg
into
pop
scas
shl
xchg
std
inc
jmp
xor
mov
mov
shll
jno
push
xor
and
xchg
movsl
clc
adc
es
clc
push
cld
push
add
subl
punpckhwd
add
add
cmpb
lahf
repnz
pop
jl
lds
push
call
adc
xchg
aaa
repnz
xchg
xor
aas
scas
lcall
pop
mov
pop
xor
push
insl
adc
fnstenv
cmp
mov
mov
mov
xor
mov
adcb
ljmp
mov
sbb
div
fstpt
pop
and
nop
cld
pop
dec
xor
jae
push
mov
test
mov
add
inc
xor
push
mov
clc
push
outsb
test
clc
dec
inc
adc
cltd
shrb
sub
jno
mov
and
addr16
mov
pusha
aam
xchg
mov
xchg
xorb
add
aas
out
mov
stos
pushf
cmpsb
pop
mov
xchg
sbb
sbb
fcomps
jo
leave
cmc
inc
rcll
push
scas
loopne
adc
adc
xor
test
sub
fiadds
pop
mov
ret
jne
leave
cmp
fistpll
lods
cltd
hlt
or
add
imul
and
imul
in
mov
jmp
or
outsl
xchg
cmp
insl
imul
or
outsl
mov
adcb
pop
lods
mov
ds
aam
jg
cmp
sbb
sub
push
das
jne
mov
popa
enter
xchg
fiaddl
cmp
scas
push
sbb
adc
adc
nop
test
idivl
jno
push
jmp
cmp
xor
pop
push
cwtl
ljmp
cmp
inc
mov
lea
imul
cmpsb
repz
loopne
xchg
mov
and
test
or
push
subb
popa
insb
and
repnz
in
or
sbb
out
and
outsb
mov
dec
mov
cmp
sbb
je
loop
push
icebp
mov
dec
mov
pop
fs
stos
jge
test
mov
mov
scas
add
daa
xchg
sbb
cmp
and
fnsave
inc
shlb
xchg
rcrl
ja
xor
mov
xchg
mov
iret
sti
push
jbe
insb
or
inc
mov
sub
aad
xor
mov
lret
testl
or
subl
or
sub
enter
dec
xchg
rorl
pop
insb
cltd
jo
dec
jmp
xchg
jbe
push
rorb
or
das
push
sar
cwtl
jno
add
push
sub
ljmp
jbe
xor
or
and
ja
mov
pop
and
or
clc
lret
inc
adc
daa
push
xor
imul
insb
add
rclb
jne
push
or
mov
sub
adc
mov
sub
cmpsb
inc
fnstenv
jp
popa
dec
and
pop
insl
mov
sub
cmp
inc
leave
ds
ror
lret
pop
stc
and
jl
pusha
adc
popf
mov
ljmp
pop
fnstenv
pop
sti
xor
mov
and
out
rorb
xor
jp
in
add
sub
sub
sbb
jae
out
in
add
push
clc
add
test
fs
stos
cmpsb
adc
fsts
sub
out
cmpb
mov
fs
repnz
adc
lock
dec
pop
shr
aad
les
pushl
pop
cs
add
into
inc
sti
push
gs
push
pop
and
inc
mov
pop
push
mov
cmp
lods
aas
dec
out
int3
mov
pop
sbb
sub
popa
fildl
sub
aaa
aad
js
insb
sahf
cmc
stos
mov
push
movsl
popf
push
mov
arpl
les
adc
pop
mov
xchg
inc
fsub
lea
lahf
js
add
xchg
out
data16
inc
and
mov
dec
mov
ficoml
and
mov
leave
idiv
push
pop
arpl
int
pop
ds
inc
mov
inc
js
add
or
fists
push
mov
add
mov
lea
mov
rorb
mov
ja
loopne
lahf
adc
stos
xlat
ja
lods
ret
dec
cmpsb
ficompl
roll
lds
lahf
pop
cmp
or
cmpb
insl
loopne
cmp
int3
hlt
cmpsl
inc
push
mov
imul
jl
push
js
cltd
xchg
loopne
iret
push
or
mov
sub
or
pop
ret
lret
cld
lock
test
mov
mov
and
psrlw
mov
aas
mov
outsl
nop
mov
ljmp
adc
inc
dec
jb
cmp
pop
mov
cli
dec
es
adc
jae
mov
ret
inc
ret
inc
inc
adc
mov
adc
aad
test
add
and
pop
and
xlat
aam
sbb
sub
test
shlb
add
test
xchg
les
popa
pop
movsl
jne
call
push
jmp
mov
cmpsb
shr
leave
enter
fs
ficoml
mov
ja
add
movsl
lods
inc
add
mov
mov
fwait
jne
lods
sub
push
mov
push
push
adc
mov
sahf
test
rcll
maxps
and
cwtl
jae
faddl
push
or
stos
adc
shll
in
gs
mov
push
xchg
inc
lods
push
or
mov
ljmp
lret
sbbl
mov
repz
in
mov
push
enter
jle
xor
call
jo
mov
jecxz
xchg
lcall
repz
cmp
mov
cmp
push
outsb
inc
push
xchg
mov
sbb
xchg
es
sti
dec
jmp
inc
add
jmp
or
insb
cmp
or
dec
push
mov
movb
xchg
aaa
xchg
lock
dec
cmp
mov
inc
push
scas
jb
fstpl
in
ja
xorb
enter
pop
sti
loopne
lret
out
mov
mov
xor
jle
lods
lds
stc
inc
fs
add
push
cmc
sub
call
or
push
clc
mov
fcomps
fisubrl
push
adc
and
pop
subb
mov
xchg
ret
daa
push
loopne
jbe
pop
test
inc
and
xlat
add
mov
scas
loop
loope
fbstp
xor
or
push
cmp
les
lods
je
std
sbb
add
mov
or
cld
cltd
cwtl
mov
add
cmp
inc
inc
enter
pop
xor
movsl
dec
or
inc
inc
dec
sub
stos
out
cmp
not
fmulp
rorl
push
sub
pop
push
nop
push
pop
mov
lock
mov
push
xor
mov
or
jne
sahf
sbb
repz
ror
and
arpl
jns
les
adcl
push
scas
xor
adc
fs
insl
and
xchg
das
xor
cmp
xchg
aad
rcll
ficoms
mov
clc
xor
test
movl
jl
sti
mov
sub
jns
out
cmc
xchg
inc
sti
push
shlb
xor
aas
lretw
rclb
xchg
xchg
rclb
bound
stos
jmp
imul
orb
adc
adc
jnp
sub
add
decl
jnp
push
push
mov
xor
and
mov
aam
ret
push
jo
gs
mov
mov
xor
xlat
out
stc
fidivrl
xlat
inc
les
ret
cmpsl
inc
popa
insb
aaa
jae
loop
jno
stos
or
cmp
test
push
cltd
iret
jno
xor
aam
sahf
adc
divl
mov
mov
repz
mov
dec
pop
lret
inc
mov
jnp
and
xchg
xchg
dec
fisubs
fsubrl
sub
adc
int
out
sbb
sti
pop
mov
jmp
lods
and
jg
xchg
cmp
stos
jne
mov
xchg
jl
popl
shrb
inc
inc
fdecstp
int
fsubrs
mov
pusha
sbb
stos
ss
lods
ja
test
imul
push
inc
push
pop
loopne
inc
mov
cmp
dec
pop
adc
pop
push
das
mov
into
mov
test
cld
mov
imull
jl
cmpsb
or
sbb
mov
daa
push
add
repnz
lcall
jnp
push
fcomps
popa
xorl
mov
xchg
push
or
mov
cmpsb
fstpt
sub
inc
aas
out
subl
ret
mov
rcrl
das
or
xor
sbbl
mov
jmp
cmp
cmpsl
dec
sub
xchg
decb
or
or
or
pop
mov
dec
dec
jg
int3
orb
pop
cwtl
xor
sbb
lea
insl
add
aam
inc
lret
lahf
adc
xchg
arpl
shlb
lcall
sbb
add
cmc
in
rolb
fdivrp
dec
or
mov
push
mov
ljmp
xchg
push
mov
push
xchg
mov
pop
or
jle
into
push
inc
sbb
les
mov
test
call
insb
fisubrl
pop
jns
jns
fwait
out
inc
push
lahf
pop
jne
outsl
jbe
xchg
jne
jecxz
mov
cwtl
and
lcall
cmp
sbb
jae
jp
push
dec
ss
iret
les
sub
mov
rcrb
sbb
rclb
adc
cmp
sahf
push
mov
or
fcoms
sahf
ficomps
push
into
or
cmp
push
dec
pop
sub
lret
test
xchg
cmp
adc
jmp
lea
sub
sbb
add
std
cmc
aaa
mov
imul
je
xlat
push
pop
movsb
jne
insb
rolb
fcompl
jne
pop
pusha
sub
sti
sti
dec
insl
xchg
jl
mov
sbb
mov
andb
mov
sbb
xor
jecxz
mov
test
mov
jl
jl
add
xor
aad
xor
push
lcall
dec
jmp
in
mov
pop
std
f2xm1
mov
shl
lds
imul
out
fisttpll
mov
push
pushf
push
jge
div
dec
int
mov
fwait
mov
icebp
aad
cwtl
lret
mov
add
sbb
dec
dec
decb
cld
loopne
test
push
cli
xor
xor
test
ljmp
cmp
dec
mov
pop
xor
dec
adc
and
inc
shrl
pop
jl
sub
push
mov
mov
dec
add
sub
imul
push
shrb
mov
sbb
inc
stos
or
sti
aaa
jno
les
sbb
loope
out
jmp
or
cmp
ss
mov
mov
add
mov
aam
add
add
stc
icebp
icebp
shufps
cmpsb
jno
pop
jbe
jmp
jne
pop
mov
dec
cmpsb
dec
fstp
inc
push
outsb
loopne
bnd
inc
jne
imul
inc
dec
inc
aas
enter
mov
pop
or
lds
jl
and
lcall
pop
lds
scas
mov
jne
stos
and
xor
ficoml
mov
dec
and
xchg
in
fsubrl
push
aas
imul
ja
sub
lds
mov
jl
sbb
mov
mov
popf
and
cmp
cmc
ret
lret
cmpsl
sub
add
fwait
xchg
jg
xchg
stos
jne
ljmp
testl
les
ret
int3
mov
icebp
push
cmc
jne
or
mov
lods
push
jb
jmp
out
inc
sarb
repz
je
arpl
cmp
sahf
jb
pushl
dec
fildll
sbbb
dec
test
fnsave
hlt
and
rcr
xor
lret
or
stc
pushf
stc
in
jae
jle
loope
lds
mov
cmc
fbld
inc
rcr
stc
inc
pop
mov
data16
lods
fdivs
xor
outsb
jns
add
mov
push
inc
sti
lcall
mov
pop
or
popa
outsb
mov
mov
leave
cmp
fadds
test
pop
inc
lods
add
vhaddps
mov
bound
cs
test
je
stc
ja
jo
sbb
mov
xlat
push
daa
aaa
and
lahf
loopne
movsb
xor
lds
lea
push
xor
sub
mov
jnp
aad
fwait
jbe
icebp
inc
sti
sub
test
jb
lahf
cmpsb
movl
fiadds
data16
loopne
jo
jmp
cmp
xchg
adc
mov
shlb
arpl
aaa
adc
ret
or
push
adc
mov
fldl
pushw
jge
mov
lret
pop
in
or
std
enter
sub
mov
jnp
fnstenv
int3
sarl
in
push
test
xchg
iret
pop
push
sub
loop
pop
mov
mov
xchg
push
xor
sbb
mov
lahf
push
cmc
and
aas
leave
mov
enter
lret
mov
pop
leave
inc
sbbb
mov
sarb
jae
out
adc
movsb
aas
out
aas
in
dec
out
sahf
sbb
jnp
and
push
sbbb
cmp
adc
xor
nop
add
daa
sub
fsubs
mov
jge,pn
imull
std
dec
cli
jae
dec
mov
lds
sbb
cmp
lds
rcr
test
xchg
pop
dec
popa
loop
insl
jbe
clc
pusha
cs
jae
popf
iret
lods
enter
cmp
jns
dec
sub
ss
mov
fs
je
xchg
sub
inc
fisttpl
loope
scas
repz
xlat
fldl
popa
aad
movsl
or
fmul
rclb
cmpsl
femms
pusha
mov
popf
cs
pop
jecxz
sbb
insb
test
inc
rcrl
rolb
dec
push
mov
aad
in
lahf
mov
cmp
ret
in
push
push
int
sahf
xchg
inc
orl
adc
push
add
negl
jle
jbe
push
adc
xor
adc
adc
out
dec
jns
lods
push
gs
nop
xlat
lods
adc
testl
adc
daa
fldl
mov
push
sar
out
inc
sahf
fdivr
icebp
pop
inc
sbb
mov
jns
xor
outsl
mov
jb
mov
push
xlat
push
push
iret
fs
daa
in
mov
dec
mov
fadds
xor
pop
aaa
cwtl
pop
inc
cmp
loopne
xchg
cmpsb
gs
loope
adc
pop
mov
das
inc
jnp
lcall
jno
imul
mov
and
hlt
ret
mov
adc
cmpsl
cmpsb
sahf
cltd
lret
loop
iret
dec
push
xlat
inc
dec
pop
lret
add
test
test
sub
mov
fldz
fldl
mov
lahf
fs
or
lea
loopne
fiadds
inc
mov
subl
xlat
mov
fiaddl
jnp
jno
xor
insl
xchg
and
imulb
rclb
cwtl
iret
sub
mov
xor
shl
cld
out
pminub
cmpsb
aas
xchg
xchg
shl
shll
das
or
nop
ds
dec
pop
lahf
mov
cmp
aas
rol
and
iret
test
cmpsl
dec
pop
xor
test
mov
stos
mov
hlt
sub
ja
gs
mov
inc
mov
gs
inc
std
loop
test
incb
nop
push
scas
xchg
enter
pop
fcompl
orl
mov
mov
pusha
jle
ror
dec
xchg
in
xchg
add
in
jae
or
or
cmp
jae
aam
repnz
push
push
icebp
pop
mov
pop
sahf
imul
ja
fldcw
inc
repz
ljmp
push
push
ja
mov
mov
xchg
xchg
jnp
data16
movaps
movsl
stos
dec
lret
out
sahf
pop
test
pushl
mov
aad
out
adc
out
push
push
cmp
add
sub
cmpb
push
and
por
test
out
jnp
sbb
jl
pop
in
jnp
and
nop
add
sarl
jae
stos
push
sti
lds
enter
add
movsb
and
or
jne
test
xor
sub
lcall
in
stos
testl
sbbb
pop
xchg
pop
sbb
js
adc
in
pusha
xor
jbe
xchg
pop
sub
out
sahf
std
and
scas
xlat
sbb
fs
cmp
add
lret
in
mov
lret
movsb
inc
popf
inc
mov
or
mov
into
jle
cmpsb
cld
nop
push
xor
mov
cltd
repnz
jb
mov
aas
lea
xchg
push
les
xchg
push
xorl
fidivl
inc
dec
and
mov
frstor
and
ja
cmc
mov
ficoms
movsl
xchg
lds
into
push
and
addl
xlat
and
push
pop
dec
cld
loopne
jae
enter
jno
cltd
fs
data16
mov
or
mov
pop
mov
xor
pop
cmp
xor
push
xchg
xchg
xchg
dec
test
dec
mov
iret
loope
ret
add
mov
xchg
mov
jmp
cmpsb
push
inc
outsb
out
in
out
lds
inc
stos
fs
and
repz
nop
in
ss
jnp
popf
mov
mov
cmp
push
push
xchg
pop
or
add
int3
stos
xor
sbb
xor
cld
add
jb
cld
outsb
ret
xlat
scas
movsb
in
enter
int
pop
sbb
inc
mov
sub
xor
xchg
mov
hlt
arpl
xchg
jae
add
push
cmpsb
filds
repz
inc
pop
xor
xchg
cmc
xor
mov
out
lea
lods
sbb
stos
iret
pusha
sbb
iret
ja
insl
mov
mov
lcall
out
stos
adc
mov
xchg
mov
push
cli
in
or
jne
push
ds
les
push
scas
mov
insb
inc
adc
sub
jl
mov
dec
sbb
pop
stos
pop
adc
mov
mov
mov
inc
xchg
out
cwtl
pop
std
pop
push
or
imul
repnz
sub
movsb
add
push
js
mov
aas
dec
jg
jl
jp
xchg
mov
push
xor
movsb
jno
sbb
movsb
test
fdivrl
and
dec
or
ror
mov
jmp
nop
mul
adc
xchg
or
mov
fs
and
into
pop
sub
out
fistpl
out
mov
push
js
ljmp
cmp
popf
adc
mov
cwtl
mov
cmc
mov
in
mov
mov
test
pusha
int3
fdivs
cmp
pop
xlat
add
cmc
pop
xor
lcall
inc
fdivrs
xchg
pop
and
sti
mov
sti
jae
arpl
popf
mov
mov
mov
stos
or
sub
inc
and
enter
cli
dec
push
cmp
popf
fistpl
jg
in
sahf
jne
sbb
dec
ds
adc
dec
jns
stos
ss
sarl
and
lcall
adc
or
out
bound
sbb
xchg
mov
ljmp
cmp
insb
push
dec
mov
mov
pop
fisubrl
push
mov
xor
mov
mov
xor
loopne
mov
test
orl
push
lret
enter
add
sbbb
movsb
push
btr
shll
icebp
xchg
or
mov
inc
sahf
inc
jbe
ret
jl
push
cli
ret
mov
insb
lock
xlat
adc
xchg
rcll
inc
mov
ret
inc
gs
rcl
xor
out
xchg
xchg
add
xlat
stc
nop
push
fnsave
pop
jbe
rcll
cmp
sahf
test
jne
iret
pusha
cmp
xlat
arpl
mov
cmp
push
add
clc
in
mov
cmpsl
add
lret
int
outsl
add
cltd
cmpsl
jae
jp
jo
lea
loopne
imul
iret
loope
pop
xchg
mov
insl
in
mov
and
xlat
aaa
push
lea
dec
inc
push
test
sub
cmp
aad
dec
xor
push
in
fsts
jno
mov
cmp
test
mov
add
jg
or
sbb
pushf
inc
rcrl
xor
inc
add
les
and
das
cld
insb
mov
xchg
test
into
test
cmpsb
fcmovne
cmp
jae
sub
sbb
ljmp
inc
inc
and
xchg
insb
fdecstp
loope
loop
adc
push
js
or
je
scas
push
push
mov
lock
pushl
fdivl
out
nop
call
cmpsb
scas
add
mov
xchg
iret
mov
jno
xchg
jecxz
test
clc
mov
jmp
jle
iret
mov
pop
xor
mov
mov
mov
fdivrs
sub
icebp
mov
mov
mov
cmc
sbb
and
add
inc
push
sbb
int
mov
shll
scas
push
add
jne
cltd
xchg
enter
pop
inc
pop
mov
push
xor
mov
add
in
sti
pop
popa
subb
lahf
fisubs
push
cmp
js
cmp
pushf
sbb
in
xor
mov
rclb
push
fisubrs
or
xor
test
jb
out
push
stc
mov
or
out
outsb
push
insb
test
inc
hlt
mov
push
loope
je
outsl
pop
lods
jbe
movsl
xor
outsl
adc
push
pop
dec
pop
test
push
lds
push
mov
jmp
nop
sbb
out
test
rorb
adc
pop
fs
sbb
cltd
out
push
sub
movsl
and
pop
mov
sti
out
mov
jl
sbb
xchg
mov
adc
mov
mov
mov
aad
add
xor
pminub
loop
cmp
in
mov
repnz
jmp
mov
and
xor
out
xor
cli
call
stc
icebp
xchg
jp
int
cwtl
sbb
andb
lods
sbb
pop
in
ret
stos
inc
stc
fsubp
add
jle
fildl
add
in
movsl
into
jb
mov
mov
dec
jl
sub
iret
adc
hlt
cwtl
out
test
or
cwtl
nop
cmc
cmp
add
sbb
mov
popl
xchg
gs
sbb
ljmp
sub
xchg
mov
ljmp
pop
out
nop
pop
mov
lcall
mov
adc
push
pop
sub
push
fildl
clc
or
adc
lret
adc
lods
pop
adc
fdivrs
sbb
pusha
pop
and
sbb
lods
sarb
lock
xor
mov
jmp
pusha
pop
xor
inc
ret
sub
sti
outsb
cmp
lret
in
dec
cwtl
pinsrw
lret
pop
movsl
inc
mov
hlt
aas
hlt
movsb
andb
cltd
push
ljmp
xor
cmp
adc
and
cmp
or
imul
mov
das
add
mov
cli
aaa
add
xchg
insb
aad
adc
mov
inc
push
je
lds
inc
test
sub
call
rcr
lods
cmp
mov
inc
rolb
mov
jg
mov
inc
jne
call
jmp
ja
jl
out
out
inc
enter
xor
lock
enter
cmp
cltd
mov
xor
push
test
mov
mov
pop
cmp
fmulp
mov
repnz
idiv
leave
loop
sub
xor
pop
int3
sbbb
movsl
mov
jbe
lahf
in
sahf
mov
mov
fisubs
inc
fwait
out
movsb
inc
jb
pusha
sub
sub
aas
negb
push
jmp
mov
pop
push
fwait
repnz
shrl
jae
push
ljmp
or
inc
or
xorb
shlb
mov
pushf
add
movsl
out
sbb
inc
rclb
xor
jb
jns,pt
loope
mov
jl
inc
inc
or
dec
loopne
mov
push
adc
idivb
sub
add
xchg
jne
sbb
jne
and
mov
push
xor
ds
fdivrl
push
xchg
in
jp,pn
mov
movsb
xchg
xchg
push
pop
popf
cmp
ljmp
sti
outsb
imul
jnp
insb
inc
push
push
or
scas
in
or
xchg
or
test
mov
mov
sbb
sbb
mov
mov
pop
mov
jb
adc
mov
int
adcb
ret
orb
or
push
mov
insb
xchg
mov
daa
js
popa
and
cmpb
push
jp
cmpsb
xchg
mov
pop
mov
outsb
in
lds
int
insb
pop
mov
sahf
pop
pop
mov
pop
inc
iret
or
mov
popf
out
add
lock
in
or
sti
push
insb
loope
in
mov
adc
stos
xchg
push
pop
mov
mov
push
add
jp
jp
stos
jmp
add
mov
out
mov
dec
xor
pop
push
fwait
repnz
or
mov
pusha
cmpsl
stos
notb
xor
loope
or
stc
push
rcll
mov
add
sub
jge
cmp
cmp
pop
dec
add
jno
xor
lret
test
lahf
mov
add
inc
inc
mov
fisttpl
int3
outsl
rcrl
mov
cmp
loope
fucom
sbb
rol
jo
popf
jbe
lahf
ret
sarl
sub
and
xchg
jp
in
mov
out
fnstcw
push
inc
leave
jg
in
sbb
cs
mov
imul
push
jle
fnstsw
cmpsb
fimuls
stc
popa
sub
dec
jmp
popf
inc
push
adc
mov
push
mov
mul
dec
dec
mov
push
sub
pop
pop
add
ret
in
fs
cmp
ucomiss
int
iret
js
and
aaa
daa
andl
jbe
pop
dec
cmp
lods
pop
xor
in
mov
psrlw
fidivrs
mov
aaa
lcall
push
mov
cli
push
repnz
inc
cmp
mov
int3
sbb
push
repnz
daa
and
ja
daa
clc
js
outsl
data16
in
shrl
cmp
mov
pop
xor
js
iret
mov
cmp
inc
scas
xchg
pop
mov
aaa
pushl
int
adc
inc
sub
fwait
scas
stc
std
xor
ds
lcall
push
inc
stos
dec
in
mov
dec
xor
push
jno
insl
xchg
push
test
cmp
or
and
jbe
pop
stos
arpl
fnstcw
add
fcmovb
loopne
test
or
add
adc
push
into
call
push
in
dec
xchg
cmp
sbb
insl
cmp
inc
fnclex
push
lcall
fwait
mov
push
arpl
insl
stos
orb
loopnew
out
xor
mov
jns
cld
mov
pop
mull
inc
inc
pop
ret
inc
sbb
rcll
int3
add
add
xchg
dec
lea
addb
push
pop
push
ficompl
sbb
pusha
iret
add
inc
cmp
shr
jns
mov
dec
cmpl
add
addl
mov
or
fcoml
mov
cs
fsubrl
push
pop
jns
sbb
mov
and
shll
sbbb
aam
dec
std
pop
xchg
loopne
mov
fs
imulb
fisubrl
dec
inc
aas
inc
dec
lcall
pop
fnstcw
loopne
and
addb
int3
xorl
xorb
enter
in
sbb
inc
subb
test
cmp
xchg
mov
push
push
out
and
mov
xor
aad
insl
cmp
mov
mov
cmp
fcoml
popf
or
movsb
and
jecxz
gs
push
adc
dec
mov
jl
pop
popf
push
add
insb
movsl
sub
nop
cli
dec
nop
lods
ds
pusha
or
mov
jo
enter
data16
lret
aad
and
add
loopne
sahf
es
popa
sub
and
push
pop
mov
out
lea
jnp
aad
xchg
inc
test
inc
ja
and
cmp
clc
pop
stos
neg
into
sub
cmp
pop
pop
loop
jo
xchg
pop
inc
loopne
movsb
jne
sub
out
and
cmp
push
and
mov
rclb
hlt
cmp
mov
aam
add
fstps
in
mov
mov
test
jp
inc
xchg
inc
jae
repnz
lock
cmpsb
sti
gs
ret
aad
adc
sub
movsl
cmp
or
xor
dec
test
push
lcall
jns,pn
outsb
aas
faddp
sar
sub
xor
or
lods
cmp
popa
push
mov
test
cmp
mov
stos
jg
jl
rol
sub
xor
aas
inc
mov
lods
cwtl
shrl
fucomp
add
mov
cmp
inc
insl
iret
add
sbb
mov
jnp
mov
aaa
das
sbb
test
xor
mov
push
cmp
ficoml
loope
addr16
aaa
dec
xchg
adc
out
movsb
lods
clc
push
rcr
loopne
hlt
cltd
inc
jle
in
xor
inc
cmp
fld
ret
sub
add
or
or
jne
addr16
dec
mov
pushf
mov
push
mov
and
push
push
and
push
jmp
sbb
sub
pop
fistl
les
mov
or
xor
add
rolb
xor
mov
sbb
jle
jmp
cmpsl
cmp
cltd
jmp
mov
adc
arpl
pop
fwait
jns
lea
jne
mov
imul
loopne
pop
test
andl
sbb
insb
sub
pop
iret
jmp
dec
sbb
or
jae
imul
add
test
test
aaa
sbb
adc
iret
xor
push
add
lods
mov
out
icebp
mov
push
imul
and
push
dec
outsb
push
jb
movsl
in
popa
mov
sahf
shlb
rcrl
aad
push
add
sbb
mov
mov
jae
fs
movsl
xchg
xchg
sti
mov
lcall
rorb
lock
aaa
clc
mov
or
adc
cmp
xchg
mov
fsubs
mov
test
jmp
repz
cltd
push
sub
in
arpl
push
ret
xor
sbb
push
mov
cli
call
ljmp
add
cmp
mov
cmp
testb
shll
fisubl
sahf
pop
fcoms
jmp
adcb
call
imul
stc
add
outsb
pop
call
xor
test
fcompl
scas
add
push
jl
jno
fisttpl
je
and
jmp
sbb
dec
out
sbbb
add
mov
xor
xchg
in
clc
js,pt
aam
rcr
lcall
roll
jg
movsb
add
rcl
push
rcrl
inc
mov
ds
xor
pop
ret
sahf
test
lcall
mov
scas
popw
mov
insl
arpl
xchg
fdivl
lods
cmp
mov
add
mov
adc
js
inc
inc
dec
ror
repz
fsubr
imul
cmp
rorb
push
das
lods
js
das
inc
inc
lds
sbb
inc
add
xchg
mov
xor
cmp
and
fsubp
icebp
test
js
fs
iret
sbb
stos
in
lods
fsincos
iret
fwait
jnp
inc
pushf
and
mov
add
test
or
and
sbb
daa
inc
sub
test
jae
jecxz
outsb
xor
inc
mov
inc
in
push
insl
loopne
jge
push
in
mov
int
out
test
std
jbe
fsts
jecxz
and
in
xlat
imul
or
xor
push
lods
pop
ror
xor
cmp
xor
mov
cmpsl
fcompl
push
sub
inc
and
push
jno
int3
fs
les
and
jns
cld
add
nop
subl
mov
pop
add
sub
lret
jae
das
ds
inc
mov
jge
int3
stos
gs
ljmp
push
sbb
enter
sub
repz
mov
and
mov
pop
pop
pop
dec
fs
dec
pop
hlt
sbb
adc
dec
push
pop
out
jg
pop
repz
cwtl
sub
or
sbb
inc
or
std
lea
jecxz
xchg
shrl
enter
int
push
mov
cmp
add
push
push
add
xlat
scas
movsl
jecxz
push
sub
mov
mov
icebp
ss
pop
xchg
adc
xchg
ljmp
out
out
mov
mov
push
sub
fcomip
lock
jno
adc
or
cmp
cltd
test
inc
in
mov
mov
mov
pop
dec
mov
jno
cmp
hlt
pushl
popa
mov
shr
das
push
and
repnz
jecxz
fyl2xp1
pop
sbb
ficoms
cmp
pop
loopne
jge
dec
aad
scas
sub
cs
pop
fists
sub
mov
xchg
push
push
add
sub
mov
int
cld
mov
iret
int
outsl
mov
sbb
push
xchg
adc
cmp
mov
stos
repz
sbb
es
arpl
jae
hlt
dec
repz
mov
sub
mov
inc
scas
mov
cmp
lss
jbe
xabort
lahf
or
mov
jno
cmp
cld
insb
fsubp
push
stc
dec
fists
dec
ljmp
pop
repz
push
xchg
pop
leave
popf
inc
sbb
xor
mov
dec
loope
cmc
sti
mov
mov
adc
shlb
and
and
iret
cmc
and
push
mov
mov
icebp
adc
sub
sub
je
dec
aas
subl
mov
nop
fstl
push
mov
sub
mov
push
pop
cmpsl
fsubrl
inc
sbb
idivb
mov
adc
test
mov
stos
hlt
pushf
ds
icebp
adc
xchg
mov
and
or
dec
mov
xchg
and
pop
sar
or
leave
test
test
imul
dec
fnsave
out
jl
xor
ret
cmp
loop
call
fcoms
js
dec
xchg
cli
mov
lods
mov
stos
pop
sub
test
into
jo
dec
inc
adc
lds
lahf
mov
stc
fldl
popa
sbb
mov
xchg
pushf
add
lds
inc
cmc
sub
subb
jne
outsb
call
pop
push
leave
add
mov
sbb
mov
into
cwtl
and
jg
aad
inc
jbe
push
inc
xchg
push
jmp
into
mov
out
adc
dec
movsb
cmp
xchg
mov
pop
in
jno
sbb
mov
add
lcall
mov
call
shrl
popa
sar
and
mov
and
cmpb
gs
stc
push
stc
aam
inc
lahf
in
das
pushl
mov
cmp
es
into
insl
in
dec
push
insl
cltd
add
sub
loope
adc
fwait
mov
stos
movsl
pop
pop
mov
int
lods
popa
je
inc
mov
loopne
fs
cmp
push
adc
icebp
popf
loop
dec
imul
lea
mov
sbb
inc
pop
mov
jle
out
je
xor
imul
jg
enter
in
adc
mov
pushf
xor
cmpsl
xor
shrl
or
mov
ljmp
push
dec
add
enter
lret
add
cmp
push
into
sbb
add
mov
pusha
dec
into
push
shll
xor
push
lods
fists
pushf
jp
xchg
inc
lcall
popf
inc
xor
data16
fst
jb
push
orb
pop
pop
or
lcall
push
xor
test
mov
jnp
cmpsb
jle
clc
adc
and
mov
push
dec
ds
out
mov
mov
lock
push
xchg
jno
xchg
roll
mov
adc
call
lret
imul
add
add
outsb
jl
iret
data16
shlb
mov
add
adc
gs
jp
cmp
insb
rorb
inc
pop
pop
mov
jl
push
dec
sbb
add
jne
sti
in
shrl
mov
xor
rol
sbb
mov
mov
jno
mov
mov
mov
loop
pop
dec
pusha
xchg
jb
out
iret
jecxz
mov
fwait
mov
inc
outsl
cmpl
and
cmp
lock
jno
fsubp
fimull
xchg
jl
jecxz
or
jae
std
data16
adc
inc
sahf
mov
mov
xchg
xchg
int3
into
lods
sbb
shrb
mov
mov
daa
push
cltd
std
in
cmpb
in
rcrb
mov
incb
push
pop
test
mov
adc
inc
cltd
pop
cmpsl
imul
xchg
aaa
inc
out
push
call
test
xchg
inc
icebp
xor
aam
sub
getsec
addb
cli
cld
bound
andl
cmp
pop
lahf
sub
pop
mov
cs
test
and
sbb
xor
ss
pop
jb
jb
ss
mov
in
push
cmp
dec
mov
inc
xor
in
outsb
jp
mov
mov
mov
inc
fwait
and
jmp
adc
sbb
adc
push
ret
push
jo
and
ss
sub
mov
and
xor
cmp
xor
fs
lea
loop
rcll
add
mov
jle
scas
shll
mov
xlat
jb
and
xor
dec
lods
inc
into
les
es
std
loop
xor
sbb
adc
xchg
adc
xor
arpl
inc
outsl
push
adc
jno
aam
cwtl
xor
jno
mov
sub
sbb
daa
pop
adc
ljmp
movsb
notb
and
rolb
inc
mov
rcrl
add
iret
imul
push
test
popa
xor
sub
test
add
pop
insb
jo
sbb
imul
inc
xchg
push
sub
push
cmpsl
xor
push
sbb
lret
outsl
xchg
cmp
xor
add
mov
mov
cwtl
pop
popa
loope
mov
lds
stc
fisubrl
xchg
sub
in
inc
movsb
and
xchg
repnz
sbb
aad
push
xchg
jmp
sbb
xchg
mov
cltd
mov
xor
out
xchg
fistpll
sbbl
cmpsb
or
lahf
push
sbb
rcll
xor
movsb
popf
aaa
inc
lock
lods
push
push
add
inc
sbb
lods
mov
push
push
mov
out
cmpsb
pop
jnp
movl
mov
sub
into
out
insb
leave
rcl
jae
cmc
sbb
int3
repz
sub
push
popf
negl
pop
fcoms
push
xorb
push
mov
imul
adc
pop
cltd
adc
aad
xchg
xlat
adc
sub
out
mov
inc
scas
dec
dec
es
inc
jge
pop
popa
add
shll
push
enter
mov
cli
cmp
sub
nop
scas
cmpl
push
out
je
sbb
aas
mov
aad
daa
xchg
mov
mov
xchg
mov
push
imul
decl
cmp
or
jno
test
mov
jmp
inc
dec
data16
push
or
mov
mov
addb
popf
cwtl
outsb
lock
cwtl
es
and
jg
adc
xor
shr
jecxz
mov
out
mov
xchg
dec
and
mov
repz
outsl
mov
sub
rcrb
sbb
fiaddl
je
inc
icebp
mov
icebp
ret
in
inc
xchg
out
cld
sbb
and
subb
xor
mov
dec
rclb
push
push
cli
imull
inc
push
stc
add
shll
pop
sbb
or
inc
out
loope
cltd
add
dec
xchg
xor
xchg
push
cmp
iret
insb
mov
and
mov
mov
pop
adc
pop
or
jge
dec
cmc
lock
sub
call
gs
push
mov
rol
ret
lea
jl
push
jno
cmp
imull
popf
push
push
lds
fstps
les
and
add
imul
and
sbb
ret
iret
sub
movsb
std
js
pop
test
test
imul
jge
mov
clc
hlt
mov
cmp
int3
pop
mov
imul
sub
add
jmp
out
lret
sti
inc
mov
sbb
adc
test
inc
ja
sub
fistpl
outsb
addb
jbe
push
inc
mov
xlat
lahf
and
out
mov
cmpsb
fldcw
push
mov
jno,pt
push
inc
add
outsl
movsl
aaa
jno
push
loop
enter
add
icebp
lcall
out
les
cmp
xchg
into
xor
insl
nop
fidivs
movsl
adc
stc
pop
pop
cmp
cmp
xorb
popf
int3
push
jbe
enter
call
aad
pop
sbb
and
pusha
sub
cmp
jnp
cmp
dec
movsl
mov
mov
insb
icebp
hlt
push
cmp
roll
sbbb
sub
add
ret
sub
mov
sub
xchg
sub
xchg
arpl
add
mov
lea
les
popa
sahf
cs
xchg
add
fwait
cs
push
xchg
jbe
and
adcb
je
cld
jg
decb
enter
fwait
icebp
xlat
out
rcll
ss
push
mov
pop
adc
cld
sub
jb
aam
mov
std
jle
or
fadd
enter
cmp
imul
mov
sbb
mov
nop
sub
into
inc
pop
and
ret
cmpsl
aas
jnp
jle
stos
lahf
inc
fisttps
jmp
push
jg
add
bts
cld
subb
xor
and
sbb
lret
subl
mov
xor
and
dec
int3
rcrb
out
pop
xlat
repz
mov
sahf
mov
lock
and
sbb
cli
imul
add
pop
jns
imul
and
pop
push
lock
test
int3
rolb
jge
cmpsl
in
push
pop
sbb
pop
pop
fisubrl
mov
dec
aaa
cmpb
test
in
pop
and
out
cmpsb
shr
movb
lea
cmp
xchg
cmp
xor
lahf
fs
push
iret
and
jmp
xchg
and
shrd
sti
mov
mov
test
insb
call
lcall
int3
sub
mov
rcrb
mov
mov
outsl
add
movsb
cwtl
add
add
andb
dec
cmp
hlt
out
cmp
cltd
mov
mov
cmp
xchg
mov
cmpsl
xchg
sub
push
rorb
sbb
ret
sbb
and
in
hlt
in
les
shlb
leave
ljmp
mov
leave
mov
pop
push
push
push
mov
fldt
cmp
cmp
mov
aaa
mov
arpl
stos
daa
jle
lds
adc
lods
scas
fisttpl
mov
sbb
aaa
pop
inc
mov
repnz
lret
fcmovnu
fldl
jnp
push
lds
cmp
mov
pusha
lcall
push
jno
scas
lea
negl
addr16
xor
add
push
and
pop
shll
push
sbb
xor
inc
outsb
clc
push
pmaxub
inc
cmpsb
out
cmpsb
xchg
add
jg
pop
dec
push
mov
out
out
adc
push
mov
lods
xchg
and
out
cwtl
sti
notb
rorl
test
popf
inc
cmp
sub
mov
ja
cmp
mul
cmp
push
out
or
fldcw
sub
pop
mov
pop
and
mov
inc
nop
sahf
or
mov
mov
ljmp
push
add
mov
cmp
push
push
pop
std
loope
stos
cmp
lods
sti
mov
mov
mov
aaa
pop
mov
jb
push
sub
xchg
std
test
cmpsl
inc
sub
lahf
es
xchg
scas
popa
out
sarb
mov
fxch
push
arpl
das
fiaddl
push
jb
add
cmp
stos
mov
xor
pusha
lods
loopne
test
jmp
mov
adc
or
call
lock
pushf
stos
ss
cmc
rolb
aad
push
xchg
lea
jmp
insl
loope
sarb
ds
add
pop
mov
pop
cmp
sbb
movsl
jae
nop
cmpsl
push
adc
loopne
xchg
and
or
lret
sbb
out
mov
fidivs
mov
sub
inc
ret
pop
cmp
pushf
adc
push
sbb
dec
add
jmp
sti
and
cmp
out
pop
pop
mov
xchg
sbb
lahf
imul
mov
sbb
lret
add
jo
lds
mov
push
int3
xor
or
pop
inc
cwtl
jle
cmc
mov
jle
lods
lcall
pop
mov
and
data16
test
stc
testl
pushf
fistpll
cmp
add
adc
lods
jbe
das
testb
inc
sub
mov
cmp
inc
and
xchg
sahf
cli
adcb
fistpl
dec
xor
roll
in
movsl
push
test
int3
jbe
call
aam
cwtl
lods
insl
mov
fisubs
xchg
or
adc
sahf
jno
dec
subl
andl
shl
mov
push
push
lea
pop
or
mov
test
cmp
pusha
pop
or
test
ds
xchg
xchg
pop
xorl
mov
sbb
out
test
jg
push
loopne
and
xchg
in
popf
movsb
out
add
leave
jno
and
add
sbb
int
push
xchg
push
pop
in
pop
sub
dec
shlb
inc
rolb
mov
cli
stc
addr16
and
sub
cmp
test
in
push
xor
fldenv
dec
mov
lock
inc
imul
and
cld
adc
shrb
push
cwtl
in
dec
outsb
popa
adc
jno
insb
loope
fldt
idivl
and
adc
ja
lret
js
leave
xor
insl
fldt
push
mov
call
popf
sub
loope
fisttpll
sbbl
and
mov
pop
or
lock
add
icebp
jg
mov
es
lock
sub
or
rolb
call
mov
mov
push
lods
xchg
loop
sarb
cmpsl
divb
and
pop
sbb
adc
arpl
jns
movsl
mov
incb
xchg
mov
pop
cmpl
and
xor
sarb
test
mov
out
pop
inc
inc
out
fisubl
pop
dec
mov
push
lcall
data16
adc
nop
pop
and
jae
or
xchg
push
push
dec
subl
fsubrl
xchg
inc
pop
mov
sub
pop
cmp
pop
jne
pop
cltd
push
pop
scas
mov
fnstcw
dec
mov
add
call
fwait
cmc
mov
sti
xchg
cwtl
sub
dec
addl
sahf
mov
jne
adc
mov
test
push
cmp
cmc
jecxz
out
fadds
out
cwtl
stos
mov
ret
sbb
xchg
les
pop
xor
mov
pop
in
rorl
pushf
mov
jp
xor
aam
cmpl
jmp
movzbl
clc
jl
xchg
dec
in
pop
or
or
scas
lahf
mov
jg
dec
pop
movsl
mov
jp
pop
daa
js
xor
mov
mov
xchg
pushl
clc
and
outsl
xchg
add
adc
adc
in
jnp
and
loopne
bound
cmpsl
ret
fdivl
das
sub
and
rol
aas
les
fsubp
and
mov
mov
push
insb
xor
int3
mov
adcl
xchg
scas
std
cmc
or
mov
sub
sahf
cmp
mov
scas
int3
inc
xchg
stos
push
fcmove
or
xchg
dec
sub
ja
test
ds
lods
add
xchg
stos
mov
mov
adcl
adc
lcall
lahf
adc
mov
and
jnp
push
lds
mov
mov
xor
mov
cmpsb
pushf
dec
mov
popf
adcb
imul
ljmp
cld
stos
mov
scas
dec
jmp
arpl
bnd
out
adc
movsb
mov
mov
es
xor
repz
jae
pop
jb
mov
push
iret
jnp
or
imul
inc
mov
dec
push
and
jo
mov
or
cmp
inc
nop
push
addb
sbbl
cmp
mov
arpl
mov
jge
ljmp
sbb
or
movsl
stos
das
notb
das
jbe
adc
jl
dec
lcall
adc
xchg
or
push
insl
jmp
lods
sbb
add
inc
mov
cmp
js
jno
or
or
popf
fwait
loop
sbb
xchg
and
mov
xor
out
jge
lret
jecxz
in
inc
sub
test
mov
push
es
shll
xchg
push
dec
nop
jnp
lcall
jb
xor
jno
cmp
pop
in
rclb
mov
add
enter
mov
sub
push
daa
add
or
fwait
pop
lds
shlb
mov
pop
ja
sub
lahf
lods
adc
and
aaa
mov
loopne
repnz
pusha
add
nop
popa
mov
mov
sub
push
mov
jno
out
movsb
add
sub
ja
popf
push
adc
jne
dec
aas
lea
dec
push
sub
adc
shl
fmuls
into
pop
pop
shrl
out
enter
xchg
scas
pmaddwd
push
mull
fimull
sbb
mov
stos
das
sahf
xor
stos
es
sbb
insb
pop
leave
sbb
and
xchg
aad
xor
cld
xchg
loope
mov
mov
aam
dec
add
ret
dec
sub
mov
push
mov
test
loop
aam
sub
cmp
and
dec
mov
or
sbb
adc
std
insb
pop
push
add
sub
ret
jns
jbe
incl
dec
adc
mov
or
or
dec
mov
imul
loopne
adc
test
pop
jb
cmp
xor
cwtl
cmp
add
test
sub
sbb
arpl
jecxz
std
pop
inc
aad
dec
adc
fwait
pop
xchg
push
lock
fsub
dec
mov
pusha
fiaddl
cltd
jecxz
je
mov
push
xchg
push
pop
mov
cld
xor
and
call
jo
jecxz
out
xor
cmp
int3
out
xor
rorb
xchg
addb
icebp
push
xlat
je
cmp
lret
iret
in
inc
or
lea
dec
push
push
hlt
lahf
dec
repnz
fsubrp
mov
imul
mov
xor
mov
fdivl
dec
insb
jb
sar
cmp
jp
xchg
inc
add
and
push
and
add
in
out
xchg
int
scas
inc
aaa
mov
mov
int3
and
dec
push
xchg
dec
mov
sar
xor
add
into
lds
ds
mov
add
loopne
imulb
in
mov
cmp
icebp
inc
fcom
xchg
sahf
icebp
jl
sarb
push
mov
mov
xchg
adc
mov
lret
and
pop
fcompl
shll
cmpsl
repz
add
in
addl
xor
outsl
mov
push
fsts
inc
sbb
mov
mov
fwait
xchg
xlat
fcomps
sbbl
movsb
push
jle
add
pop
addr16
ljmp
lea
jmp
mov
sar
test
test
fidivrs
add
mov
pop
mov
push
cmp
adc
pop
inc
insl
and
mov
push
leave
xchg
mov
xorl
scas
mov
pusha
lahf
ds
sub
mov
sbb
jno
fldl
xor
or
xor
and
hlt
cwtl
inc
mov
xchg
out
sbb
adc
lods
js
xchg
push
and
add
push
stc
stos
mov
mov
add
push
mov
mov
xor
or
das
cmc
and
lods
repnz
push
fildll
lret
xchg
push
dec
lods
lahf
dec
lods
jno
mov
sbb
testb
sub
push
push
xchg
lods
push
dec
cmp
insl
cli
push
mov
int3
in
cmp
in
cmpl
rorl
out
ja
addr16
lahf
data16
pusha
jbe
inc
xor
les
mov
das
cmc
sbb
cmp
pmaxub
dec
stos
lcall
outsb
mov
mov
or
xchg
cmp
in
xor
cld
mov
lcall
cmp
fbstp
stos
das
pusha
pushf
dec
clc
cli
sti
adc
arpl
aam
inc
cmpsb
cmp
test
dec
lods
shlb
dec
push
insb
sti
sub
aam
and
mov
push
xor
jne
cmp
add
insl
mov
mov
mov
and
fstpl
cs
fidivs
insb
mov
sahf
call
push
adc
or
fnstsw
push
xor
cltd
adc
cli
cld
pusha
shl
mov
push
aaa
cmp
divl
pushf
sbb
inc
pop
xor
data16
adc
outsl
push
and
sarb
leave
shll
js
ret
ret
imul
rolw
mov
aad
fcmovnbe
hlt
imull
and
sbb
icebp
test
and
mov
int3
jle
cmp
jno
sub
cmp
jae
ljmp
xor
push
imul
push
xchg
sbb
add
div
fidivl
clc
rorb
stos
or
cmp
mov
dec
push
inc
fs
outsb
mov
cli
sub
fnstenv
mov
rcr
inc
lea
aad
adc
jo
jge
xchg
repz
mov
inc
sbb
mov
mov
int
or
cltd
fisttpll
aad
jo
and
daa
mov
mov
xor
push
push
testl
sub
xchg
lcall
sbb
adcb
and
sub
rep
popf
dec
mov
arpl
add
sbb
std
fmull
push
fimuls
loop
imul
lahf
inc
sbb
xchg
jg
sbb
jb
dec
dec
push
pop
lcall
pop
int
add
stos
call
lcall
xor
cs
addr16
ja
int
mov
rcrb
fidivrs
xor
scas
adc
or
aad
jbe
add
mov
mov
push
fistpll
outsl
gs
popl
or
sbb
adc
scas
out
cwtl
sbb
jno
cmp
cs
mov
mov
push
xchg
std
std
rcrb
iret
jnp
pop
inc
push
dec
inc
push
mov
xchg
push
add
and
lods
aaa
movsb
pushf
aaa
ret
stos
mov
push
push
movsl
daa
mov
insl
xchg
ja
loope
imul
jae
dec
mov
sti
sbb
mov
dec
or
test
pop
orb
sti
push
hlt
pop
inc
dec
jnp
loop
in
loopne
xchg
adc
pop
jle
and
movsb
xor
add
adc
fsts
push
mov
es
push
sub
lods
xchg
pop
dec
or
in
and
adc
mov
shlb
jp
mov
mov
mov
sbb
in
mov
add
je
fistpll
lahf
std
in
lods
into
nop
or
divl
lods
addr16
and
mov
pop
test
jo
jl
mov
push
xchg
mov
lret
jl,pn
mov
cli
and
cmpsb
std
aaa
fwait
lock
pop
cwtl
mov
inc
out
jg
icebp
or
cld
aam
mov
sub
xchg
xor
pushf
scas
mov
mov
jecxz
xor
xchg
cli
or
aas
das
pop
inc
mov
rorb
stos
and
inc
sub
call
mov
adc
push
into
je,pn
xor
test
push
lds
inc
xlat
cmp
mov
or
outsl
aam
ljmp
daa
loop
scas
fwait
data16
pop
cmp
jbe
cli
and
jns
inc
cmp
adc
lret
nop
cmpsb
mov
inc
into
and
ds
das
sbb
int3
and
inc
cmp
jns
add
adc
mov
stc
pop
call
xor
sub
push
push
repnz
and
mov
rorb
fcoms
adc
jg
aaa
incb
dec
mov
mov
xchg
cmp
lock
insb
dec
xchg
inc
sbb
inc
or
push
and
js
in
lret
popf
mov
cmp
xor
pop
icebp
leave
pop
fwait
xchg
insl
ret
cmp
cmp
jb
sub
pop
jns
sub
in
mov
jmp
ss
test
outsl
push
jg
mov
les
adc
test
adc
cmp
inc
mov
mov
and
or
and
or
xor
add
es
fistl
cmp
push
ja
movl
jge
push
fidivrl
and
cmpsl
mov
test
push
mov
sbb
push
inc
xchg
mov
mov
dec
test
sti
xor
push
xchg
inc
popf
and
data16
scas
xchg
adc
stos
out
popf
dec
sub
hlt
pop
test
jge
add
and
cltd
dec
aaa
jg
mov
xor
shlb
cmpsl
xchg
ret
leave
lock
pushaw
jae
lret
daa
stc
and
leave
sub
divb
lret
jo
shl
mov
sub
arpl
mov
insl
fnsaves
fimuls
aam
out
cwtl
leave
pop
mov
xchg
fmull
jmp
dec
xchg
adc
js
xchg
outsb
call
inc
sarb
je
sbb
pop
push
stos
dec
js
jg
cwtl
int3
out
cld
fmuls
push
jg
jae
adc
inc
jae
add
fwait
jg
call
imul
fadds
stc
ljmp
loop
or
scas
inc
loop
xchg
sbb
sub
sarl
fbstp
sub
sbb
lds
add
lock
jg
jmp
hlt
mov
pop
movsl
cmp
data16
outsb
xchg
ds
jnp
pop
je
xor
cli
fldl
push
sbb
push
rcrb
pop
cmp
stos
xor
sarb
jmp
cs
mov
sbb
repnz
mov
leave
fsubrl
fs
mov
pop
sarl
fcoms
push
adc
int3
in
aad
push
cwtl
mov
fwait
inc
sbb
sub
out
loope
out
mov
adc
stos
sbb
cltd
dec
sub
push
dec
mov
or
pop
stos
pop
xor
int
inc
push
scas
dec
adc
lock
inc
sub
push
dec
addr16
cmpsl
push
inc
sbb
push
out
jb
fmull
adc
or
nop
cmc
iret
dec
xchg
scas
jmp
jle
sub
adc
jp
push
adc
insb
punpckldq
lahf
or
push
aaa
shll
dec
pop
iret
out
flds
pop
sbb
addr16
les
mov
iret
xor
stc
jge
sbb
sbb
in
into
in
jno
gs
xor
andl
aaa
fdivrl
jbe,pt
shrb
adc
loop
sbb
mov
lds
mov
movsb
aad
aaa
jmp
stos
movsl
mov
jb
loopne
lods
cmp
inc
leave
mov
xchg
mov
neg
es
sub
arpl
or
mov
rclb
lcall
in
js
dec
mov
jnp
out
or
push
pop
shll
add
pop
add
and
sbb
adc
stos
popa
imul
lods
ljmp
int
in
mov
pusha
shlb
add
lcall
mov
adc
inc
cmpsb
xlat
insb
jae
mov
mov
lret
adc
test
cli
jo
icebp
mov
or
aad
jb
push
leave
out
push
sbbl
or
aam
xchg
jl
jb
or
xor
sbbl
jns
push
cmpsl
pop
lods
loopne
or
jns
add
test
lcall
xchg
call
add
ljmp
ss
imul
aam
sbb
and
divl
cmpsl
nop
push
cltd
loop
movsl
lret
lea
ds
aas
sub
cmpsb
int3
jge
scas
mov
jne
jmp
ljmp
stos
or
xchg
add
stc
leave
or
jecxz
ja
nop
aas
jmp
cltd
je
mov
fdivrl
lcall
mov
loop
inc
jle
and
push
pop
sub
nop
pop
imul
push
cmp
fucomp
push
dec
push
bound
xor
cmc
into
sbb
jbe
jae
jp
inc
jle
sahf
and
rorl
loope
jl
negb
xor
ljmp
scas
add
nop
mov
divl
add
adc
inc
daa
addr16
pushf
lds
mov
fsubs
mov
gs
or
pop
push
inc
jb
data16
xchg
mul
stos
daa
cmp
cmp
jnp
cwtl
inc
gs
out
add
idivl
and
pop
ret
incb
arpl
mov
arpl
xchg
mov
int3
pop
jp
cwtl
add
fdivl
or
xchg
cmp
sub
pop
pop
push
add
ficomps
stos
jbe
js
dec
mov
mov
shll
aas
and
push
lods
std
inc
movsl
test
jne
xchg
rorb
into
bound
push
cli
push
inc
pop
sti
xchg
sbb
mov
cmp
aas
sub
adcb
push
imul
ljmp
cli
jo
scas
lret
out
punpckldq
or
bnd
push
and
xchg
mov
cmp
adc
ret
mov
rorb
jp
pop
add
bound
fs
push
xchg
jle
cmpl
sarl
push
mov
and
cs
xchg
mov
lea
and
pusha
imul
push
xor
repnz
jae
mov
enter
rcr
testl
movsl
mov
in
mov
xchg
sub
outsl
pop
push
iret
andl
outsb
xchg
jb
pop
cmp
or
sarb
test
pop
pop
push
aas
adc
add
mov
dec
test
leave
push
fnstenv
dec
push
dec
or
test
mov
add
movsl
inc
dec
jle
cwtl
push
mov
ret
mov
cmp
cli
lock
les
scas
sub
sar
push
mov
scas
inc
out
dec
stc
or
sub
jg
inc
loope
xchg
and
loop
sub
adc
cmp
sahf
shl
push
xchg
in
jb
and
addr16
cmpsl
pop
dec
mov
test
cs
or
rorb
out
sub
xchg
or
xchg
jg
cmpsb
aas
sub
rcll
jl
push
xchg
repnz
xchg
xlat
call
mov
jbe
push
adc
push
pop
inc
and
mov
add
or
nop
in
stos
inc
or
dec
jle
das
mov
fmuls
fimull
fs
stc
rolb
push
push
lret
jg
ds
es
cmovle
repnz
jb
or
sbb
push
lods
push
enter
or
xor
or
fisttpl
jns
cmpsb
jae
ljmp
mov
ss
fsts
sahf
sarl
fistpll
pushf
adc
sbb
je
mov
cmp
xchg
jb
mov
imul
mov
mov
out
add
js
imul
test
push
ja
clc
loop
dec
cmpb
orb
sbb
sbbb
sbb
xor
loope
mov
cld
fistpll
frstor
ljmp
push
jns
xchg
bswap
loopne
inc
dec
add
rolb
scas
inc
sarb
jmp
iret
rol
mov
rolb
xor
repnz
fiadds
xchg
aam
sbbb
insb
jge
fiaddl
in
dec
faddp
je
mov
in
jnp
dec
lods
xor
imul
inc
sbb
add
leave
sarb
adc
mov
fldl
jp
inc
fmull
stc
cmp
aaa
and
sub
mov
lahf
ja
pop
out
mov
jae
push
out
mov
call
stos
sbb
aaa
dec
cmp
mov
cmp
pushf
mov
inc
mov
cwtl
cmpsl
shlb
jne
mov
notb
mov
sub
sarb
mov
inc
in
lock
lahf
fsubrs
adc
xchg
mov
adc
mov
in
inc
jo
adc
xor
test
push
fnstenv
mov
inc
or
dec
imul
sbb
aaa
rep
int3
mov
or
lock
rcl
hlt
scas
xor
test
imull
inc
mov
iret
fdivp
or
aam
mov
and
mov
dec
cli
mov
mov
cmp
xor
cmp
inc
sbb
push
sbb
push
push
xor
cmp
sub
mov
adc
pop
sub
or
arpl
sbb
icebp
movsl
adc
fs
lret
sbb
in
cmp
es
dec
daa
movsl
popa
cmp
pop
push
repnz
imul
lods
pop
xor
idivb
aad
push
mov
into
pushf
les
push
and
jp
fs
sbb
sbb
mov
mov
mov
cmp
xor
popf
rep
xor
xor
dec
or
shll
ss
in
xor
mov
mov
ficompl
ljmp
jnp
mov
daa
adc
sahf
cltd
and
sahf
mov
iret
xchg
test
push
lahf
lea
sbb
push
insb
pop
stos
push
gs
mov
je
lods
test
mov
lock
mull
fldcw
dec
out
movsl
ds
mov
testb
dec
push
stc
int3
and
jge
cmp
pushf
mov
inc
out
das
mov
fidivrs
jb
push
pop
or
pop
lock
cmp
cmp
test
cli
xor
aad
sahf
call
xchg
je
jb
xor
mov
gs
jg
leave
mov
push
lods
mov
pop
mov
scas
stos
aam
outsb
inc
in
pop
fwait
into
insl
mov
aad
ss
rclb
sbb
lods
ljmp
test
push
insl
out
lods
daa
cmp
jns
std
xchg
and
mov
cltd
lock
fcmovu
rorb
dec
ss
jle
mov
jne
lret
aad
lods
inc
dec
jns
mov
xchg
adc
pushf
aaa
sub
cmp
push
ds
out
loop
mov
lock
pop
enter
cld
jmp
ljmp
mov
insb
dec
cld
aad
sti
sub
fstpt
dec
repnz
and
xor
das
mov
mov
inc
and
sbb
lcall
lods
push
push
movsb
sub
nop
xor
push
inc
sbb
ds
int3
cmpsb
test
xchg
cli
pop
jno
xlat
test
ret
aad
std
jae
push
push
cmpsb
aam
loope
inc
jle
mov
fcompl
push
xchg
xchg
pcmpeqd
push
paddw
movsl
jmp
shll
pop
aas
ljmp
lods
and
xor
out
movsb
int3
and
add
jnp
data16
fldcw
push
stos
or
lods
sbb
ret
inc
mov
notb
dec
sbb
cli
hlt
pop
jnp
je
cmpsb
push
inc
push
pop
jb
jge
data16
pop
lcall
or
ja
loop
add
inc
pop
cwtl
add
lea
insl
cltd
cmp
cs
lret
jp
mov
mov
addr16
dec
xor
sub
aad
lret
dec
sub
rorl
sar
add
bound
mov
fwait
add
in
lock
aas
xchg
add
sbb
cvtdq2ps
movsl
xchg
shlb
push
or
addr16
push
jb
pop
pop
sub
js
je
mov
out
shll
mov
fwait
xorl
fidivrs
xor
mov
adc
jl
pop
dec
scas
xor
clc
xor
push
add
pop
loopne
adc
fldl
in
add
and
mov
cmp
push
loope
mov
rcrl
mov
lcall
sub
mov
rcrl
xor
outsb
jae
add
cltd
ljmp
int
rdtsc
dec
sbb
and
loopne
hlt
in
les
inc
xchg
push
pop
lcall
repz
imul
mov
pop
pop
sbb
cs
les
add
insb
xor
arpl
jnp
ljmp
adc
aas
in
sbb
sbb
lret
std
aaa
inc
lahf
xor
fcmovb
sub
shrl
jne
cmp
call
sti
pop
jmp
lods
and
sbb
mov
mov
adc
es
lods
outsl
sarl
cmpsb
sub
fwait
movsl
pop
ds
add
lret
or
lahf
scas
stos
mov
pop
mov
adc
cmp
xchg
adc
xor
push
test
jmp
in
jo
mov
ds
inc
lods
ret
xchg
lcall
scas
adc
xchg
or
mov
pop
das
sbb
push
mov
call
rcl
subl
ja
push
cli
jp
cmc
imul
in
inc
lods
scas
jl
mov
adc
push
lods
mov
lods
xchg
cmp
leave
cs
out
push
roll
pop
push
dec
int
fstpl
and
xchg
in
pop
test
out
fcmovnb
fwait
outsb
sarl
sbb
lcall
outsl
cmpsb
inc
sub
lock
shl
addr16
insb
decl
mov
cmpsb
lds
fildl
adc
jno
std
lods
outsb
sub
xchg
popf
sbb
or
and
scas
pushl
dec
dec
lds
pop
jo
push
push
adc
ret
inc
push
mov
adc
bound
pop
xor
xchg
xor
in
inc
mov
mov
pushf
out
cltd
imul
aaa
out
jp
ja
stos
dec
cmp
add
aam
fistpl
push
mov
pop
insb
pusha
mov
test
adc
fnstenv
cltd
mov
xchg
mov
test
sub
cmpsb
add
jge
sbb
adc
mov
dec
lock
cmp
xor
stc
dec
shrb
repz
lock
test
mov
imul
xchg
lock
mov
pop
test
mov
sub
dec
das
xchg
mov
out
ds
push
les
mov
lock
enter
mov
stc
pop
inc
orl
mov
aam
repnz
stc
pop
jo
add
adc
rcl
or
jae
in
in
xchg
dec
mov
and
jmp
push
jnp
pop
shll
fidivrl
mov
loope
xlat
mov
fnstcw
cs
cmc
sub
movsb
imul
jecxz
sbb
mov
repnz
sub
sub
sub
jbe
xchg
or
and
addb
inc
cmpsl
cmp
lock
scas
jno
mov
sti
jnp
jp
gs
push
xchg
or
mov
xchg
push
addr16
fmull
test
xor
mov
xor
add
ret
cmovp
and
insl
add
dec
xchg
lahf
xchg
mov
iret
sub
hlt
aad
jl
pop
ja
mov
sti
or
cvtdq2ps
add
cmp
sub
sub
movsl
inc
cli
js
and
dec
pop
jb
xchg
nop
cmp
cmp
pop
and
add
add
mov
add
add
add
inc
inc
add
addl
add
dec
add
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
lock
test
ds
inc
sub
sti
loope
lcall
movl
push
int
das
jp
add
sub
lea
jo
lcall
imul
sbb
cmpsb
mov
cmp
push
mov
adc
push
push
xchg
rclb
mov
repnz
lfs
push
dec
cmc
or
out
push
pop
arpl
cmp
inc
xor
pop
push
and
jno
test
mov
insb
pop
scas
fildll
lret
mov
xchg
clc
sbb
pushf
xor
xor
cmp
cmp
test
lcall
andl
sbbb
xor
imul
test
insb
lcall
mov
fnstenv
xor
test
jl
jg
or
out
mov
mov
roll
xlat
mov
cmc
or
outsb
repnz
out
shrl
push
fwait
sub
adc
in
xor
inc
dec
pop
ds
in
fbld
stc
cmp
cmp
xchg
outsl
sbbl
jmp
ss
lock
dec
or
pop
xchg
xchg
rol
fwait
adc
mov
shl
xchg
rcl
movsl
aaa
lcall
loopne
mov
dec
or
outsl
jecxz
outsb
or
push
sbb
jle
in
cmp
jp
xchg
dec
adc
pusha
test
in
push
sbb
outsl
xchg
shrl
cmp
xchg
cmpsl
jmp
mov
xlat
xchg
clc
xchg
ret
imul
je
jns
jmp
inc
adc
cmpsb
aam
clc
cltd
inc
lods
push
cs
fucomip
mov
rolb
push
ret
insb
adc
scas
nop
test
loop
out
and
mov
cmp
adcb
sarb
sub
cmp
jecxz
jecxz
daa
dec
lods
cmp
inc
and
jp
xor
es
push
pop
mov
xchg
out
mov
add
xchg
clc
xchg
shll
sub
mov
sub
sti
or
push
data16
adcl
movsb
out
xchg
xor
mov
repnz
xchg
test
pop
pop
jecxz
fistpll
leave
sub
fstl
mull
pushf
sbbb
mov
adc
mov
into
adcl
jp
push
mov
jp
mov
movl
repz
sbb
orb
ds
out
xor
cmp
test
or
mov
roll
repz
push
sub
push
dec
icebp
mov
pop
addl
in
outsb
or
sub
xchg
mov
fadd
xchg
data16
int
and
ds
add
in
dec
data16
sub
push
xchg
clc
sbb
mov
lods
setge
cmpsl
push
mov
add
out
sbb
xchg
dec
dec
jns
shlb
fnstenv
jnp
movzwl
sbb
cmpsb
fcomps
out
and
test
mov
cmc
sti
xchg
into
mov
and
xchg
jl
movsl
rol
imull
push
jp
inc
icebp
loopne
sar
cs
pop
fwait
cld
dec
jl
inc
test
mov
or
push
xor
ret
aas
mov
xor
imul
mov
mov
in
mov
push
mov
ss
imul
ret
sbb
movsl
mov
sti
nop
outsb
pop
rolb
inc
mov
loopne
cmp
and
xor
mov
scas
push
dec
imull
dec
loopne
cmpsb
adc
xchg
insl
adc
clc
scas
mov
int
xor
stos
dec
sub
mov
adc
out
rclb
sbb
inc
mov
in
dec
mov
popf
movsl
pop
cmpsl
aam
and
stos
dec
xchg
repnz
inc
in
cmp
sbb
out
jmp
push
xchg
jle
and
dec
xor
inc
in
decb
jo
mov
adc
inc
jg
rcrb
sbb
fdivr
cmp
inc
stos
mov
fcmovnbe
pop
adc
fcomps
adc
jmp
insb
clc
inc
fnstcw
rorb
adc
add
dec
pusha
push
movsb
pusha
mov
cltd
cltd
fwait
jmp
repz
cwtl
and
mov
sbb
sbb
push
leave
xchg
lret
and
popa
xor
enter
add
pop
xchg
cmp
xchg
push
sbb
and
rorl
ret
and
xor
inc
hlt
sub
out
andb
lock
ret
in
adc
data16
sbb
pop
add
mov
and
lret
sub
test
jbe
sbb
aad
std
repz
lock
push
jnp
inc
icebp
add
into
in
aaa
mov
sbb
inc
gs
mov
pop
mov
hlt
xor
xchg
iret
icebp
cmp
ljmp
sti
lahf
pop
jo
clc
sbb
push
mov
mov
mov
cmc
jecxz
stos
fisttps
jecxz
sbb
loopne
dec
loopne
push
mov
mov
mov
or
jns
or
xchg
mov
fcoml
mov
xor
sub
push
je
add
sbb
push
jge
xchg
fnstsw
sbb
pop
mov
mov
test
repz
mov
out
fwait
xor
xchg
lret
roll
dec
out
cmp
and
push
or
mov
cltd
dec
pop
pop
dec
sub
inc
fstpt
mov
sahf
xor
fcmovu
and
mov
jmp
shrb
fucomip
decl
mov
cmpsb
adc
mov
pop
mov
or
int3
stos
push
repnz
dec
cmp
mov
arpl
mov
inc
jns
add
sti
xor
cmp
mov
loopne
adc
out
xchg
cmp
push
sbb
sbb
loope
cmp
xor
imul
fcmovnu
dec
aam
pushf
sub
rcl
sbbl
xchg
in
movsb
arpl
xchg
clc
ds
jb
add
sub
mov
add
imull
loopne
test
hlt
aam
movsl
int
cs
cmpl
int3
fistpl
out
dec
adc
out
sbb
adc
sub
leave
lock
mov
and
out
and
pop
sbb
or
das
repnz
enterw
adc
jns
mov
mov
push
lea
and
cmp
mov
cmp
stos
push
pop
sbb
sub
roll
inc
xchg
stc
mov
mov
testl
or
insl
add
jge
rcrb
inc
mov
scas
pop
stc
dec
mov
pop
xchg
push
push
or
xlat
push
cmp
sub
cmp
and
or
push
jl
cmp
test
pop
outsl
andl
push
ret
mov
pop
cmpsl
addl
xchg
out
dec
or
adc
and
xor
dec
js
cmc
sbb
jl
xchg
aas
cmpsl
inc
mov
inc
psrlw
loopne
pushf
stos
cmc
dec
aam
lock
fidivrs
pop
mov
test
cmp
dec
lahf
jecxz
xor
dec
rol
dec
cmp
clc
ret
xchg
iret
data16
stc
nop
sahf
push
popa
insb
inc
in
fisttpll
xor
ret
das
push
insl
sbb
mov
cmpsl
add
xchg
out
bound
or
sbb
into
sub
fistps
scas
dec
in
mov
cld
aaa
jnp
pop
cmp
cmp
add
jne
and
sti
push
sbb
mov
testb
arpl
and
dec
jl
stos
insb
sbb
mov
cltd
orl
ss
xor
sarl
cmp
push
rorb
mul
inc
pushf
xor
mov
pop
divb
xchg
pop
ret
insb
lcall
fsub
add
sti
iret
push
sar
push
out
sbb
jmp
std
cwtl
xchg
cmp
clc
sbb
ljmp
rcrl
cmc
stos
xchg
jecxz
iret
aam
mov
jp
sbb
push
cmp
mov
adc
cwtl
and
push
scas
push
pop
daa
push
push
cld
popf
jg
aaa
movsl
mov
mov
jbe
rclb
cltd
pop
dec
aad
mov
jns
mov
int
xorb
sub
mov
and
jne
out
add
cmpsl
adc
dec
stos
dec
cmp
cmp
int
sar
lods
out
aam
int3
and
aam
das
inc
cltd
mov
add
dec
leave
jb
dec
jl
dec
cmp
aam
mov
js
dec
popa
jecxz
clc
adc
ss
inc
notl
gs
fwait
loop
inc
inc
fbstp
decl
cld
mov
daa
inc
sub
xor
fwait
das
loope
sbb
push
clc
sbb
in
cmpsl
mov
and
dec
dec
sbb
cmp
ret
aad
pop
jo
cltd
sub
dec
or
dec
adc
mov
xchg
mov
push
je
in
or
fistpl
and
stos
cs
mov
xchg
test
mov
in
loopne
and
dec
in
cltd
imul
inc
dec
es
inc
sub
outsb
lds
lock
xchg
sbb
cmp
cld
orl
es
mov
push
out
push
push
jecxz
dec
pusha
mov
das
add
movsl
mov
test
std
mov
inc
pop
dec
jl
adc
and
aam
inc
adc
sbb
xchg
cmp
daa
mov
xor
out
enter
pop
insb
adc
icebp
out
sbb
jecxz
sbb
stos
lea
cmc
xor
pop
out
adc
jbe
pop
jecxz
sbb
rol
clc
sbb
push
subb
stc
cmp
imul
loope
jp
mov
test
in
push
dec
or
mov
shrl
cltd
and
jecxz
pusha
sbb
outsb
loopne
data16
orl
loope
pushf
cmp
push
ds
sarl
test
loop
jo
stos
lcall
fcoml
push
cs
add
cmp
mov
add
mov
movsl
stc
mov
xchg
mov
imul
adc
out
cmp
lods
mov
inc
test
mov
jl
mov
fidivs
adc
in
pop
repz
daa
pop
mov
or
add
add
dec
data16
es
fldenv
mov
or
mov
pop
jo
sbbw
leave
cmp
stos
hlt
mov
mov
cmp
pop
sahf
fstpl
cmpb
xchg
clc
sbb
xchg
dec
cmpsb
repz
jmp
lret
and
out
cmp
in
xchg
fwait
xorl
mov
push
xor
in
or
cmpsl
xchg
mov
insb
lcall
pop
fiaddl
xchg
xchg
test
int
clc
xor
lahf
orb
ret
xor
mov
and
mov
add
xor
in
aaa
sub
les
dec
jl
ret
sub
push
inc
rcll
push
testl
xchg
jbe
test
mov
dec
jl
ret
insl
xchg
pop
pop
jecxz
sbb
xor
pop
mov
in
jae
ds
or
cmpsl
xor
or
int3
mov
dec
rcl
xlat
jne
daa
jl
push
iret
into
iret
xor
rol
xor
pop
stos
insb
out
das
xor
sbbb
sti
repz
je
faddp
fcmove
xchg
xchg
sbb
pop
rclw
lods
mov
fimull
loop
xor
and
xchg
and
shl
aas
aad
aas
leave
jne
in
leave
pushf
jno
fdivs
push
in
cmpsl
sbbl
roll
adc
repz
movsb
imul
cmp
adc
inc
dec
ja
nop
pop
mov
mov
add
js
dec
out
ljmp
push
mov
and
ljmp
std
data16
cmp
jb
and
add
les
inc
push
lret
mov
inc
out
lock
repz
cmp
dec
mov
and
add
out
addr16
mov
xlat
scas
cmp
mov
push
jno
outsl
pop
pop
cltd
je
add
into
pop
push
and
xchg
push
and
ss
clc
enter
xchg
jo
fistps
scas
xchg
stc
fcoml
loope
loop
mov
xor
mov
cmc
stos
mov
ret
and
mov
mov
adc
aad
push
lcall
popa
mov
int
xor
fwait
xchg
adc
jno
add
add
pop
pushf
add
sbb
mov
icebp
popf
mov
leave
push
in
xor
daa
and
mov
enter
xchg
mov
les
outsl
xacquire
outsb
stos
dec
jp
inc
sti
xor
test
or
out
add
in
movd
in
cmp
outsl
call
mov
popfw
lret
add
loope
mov
aam
repz
int
cmp
jne
pop
add
push
jo
sahf
outsl
push
xchg
das
sbb
icebp
cmp
mov
insl
ret
mov
pop
mov
pop
lods
cmpsb
lods
sub
pop
mov
push
push
push
addb
std
pop
or
push
pop
mov
xor
mov
testl
add
or
lret
mov
fcomp
mov
xchg
je
outsb
pop
add
jmp
xchg
daa
mov
add
xchg
test
xor
mulb
mov
stos
jp
ret
jnp
pusha
add
daa
imul
loope
pop
mov
cmpsb
inc
xor
add
jns
gs
pop
xchg
xchg
adc
mov
sub
or
cmp
push
nop
dec
add
pop
and
xchg
adcl
fistpl
inc
add
mov
out
xchg
xor
inc
loope
mov
dec
sub
or
cmpsl
popf
push
add
or
xchg
aad
cld
mov
hlt
aaa
and
roll
mov
dec
xchg
fwait
pop
ljmp
cli
mov
jg
jae
sbb
add
push
out
cmpb
orb
jno
cli
movl
xchg
rolb
aam
sub
dec
adc
cld
divb
push
outsb
pop
inc
ss
fs
mov
repz
mov
sub
sbb
movsl
dec
lcall
cmp
movsb
xchg
xor
lret
mov
fcmovnb
jo
mov
sub
sub
push
decl
mov
xchg
sti
adc
jnp
imul
or
out
fsts
cmp
mov
fistpl
leave
daa
sub
or
negb
lcall
dec
add
ljmp
inc
test
push
mov
xchg
movb
dec
hlt
push
mov
mov
lods
jmp
xchg
xor
xchg
sub
xor
dec
pop
das
and
into
or
cli
mov
inc
repnz
adc
cmp
pop
sub
push
aas
pop
or
dec
aam
shll
mov
sbb
jns
mov
test
jb
push
shrb
out
shr
lret
fisttpll
add
mov
sti
iret
xor
sti
das
out
or
inc
leave
inc
mov
push
cmpsl
pop
hlt
test
and
leave
fdiv
mov
xor
js
add
mov
mov
lods
mov
movsl
int3
aas
aaa
adcl
xchg
cmp
hlt
or
pop
lods
jne
pop
sbb
lahf
std
sub
push
sub
lcall
push
sbb
bound
lea
fcmovu
sbb
icebp
in
ret
loopne
divl
mov
stos
pop
add
xor
or
xchg
cmp
push
jne
js
movsb
lds
jle
xor
mov
ljmp
mov
bound
or
sbb
mov
iret
xchg
bound
sub
sti
jge
test
jl
adc
andb
xchg
hlt
jno
fs
cmp
das
shrb
sbb
inc
test
mov
mov
xorb
arpl
xor
xor
lret
fs
mov
sub
sbb
enter
xchg
jo
mov
insl
sahf
pop
aas
xchg
ds
sti
imul
shrb
cld
add
testl
and
push
mov
aad
sbb
nop
push
cld
sbb
cld
sbb
std
add
fsts
sub
ljmp
xchg
dec
clc
aas
mov
adc
in
xlat
hlt
cli
fstp
loop
fistpll
shlb
roll
sbb
outsl
cmp
jno
push
ljmp
push
int
shlb
push
sub
movsl
dec
dec
popa
sbb
mov
mov
cwtl
sub
bound
push
sub
popf
mov
or
lret
rcrl
in
in
repnz
bound
loopne
das
lods
push
pop
sbb
push
adc
mov
or
mov
out
aam
mov
adc
mov
mov
push
mul
test
shrl
adc
nop
or
fstps
sbb
pop
je
test
outsb
in
fcmove
outsl
adc
ss
loope
dec
lods
jl
xchg
dec
push
jae
pop
mov
mov
test
jp,pt
jge
xchg
mov
cltd
sub
xor
fwait
js
add
adc
pop
or
jp
mov
sub
mov
rolb
fistpl
test
mov
out
dec
mov
sbb
int
and
jne
jle
cs
aas
pop
into
xchg
aaa
add
sbb
dec
mov
popa
movsb
xorl
mov
dec
lock
mov
pop
mov
jno
push
mov
in
fcmovne
cmpsl
jae
arpl
repnz
sbb
add
dec
xchg
xchg
sbb
xor
and
shlb
jae
xor
adc
fcmovnbe
nop
push
xchg
xchg
and
cld
std
jmp
push
push
fmul
lret
push
dec
add
popf
stos
stos
loopne
mov
mov
or
in
mov
inc
mov
les
in
inc
mov
pop
lods
popf
divl
sub
jp
bnd
movsl
mov
ret
aam
loope
xchg
mov
pop
xchg
push
jae
fsubrl
fwait
and
inc
jmp
out
jp
aad
jle
cmp
and
scas
in
sbb
lret
fisttpl
mov
fwait
mov
in
ret
xlat
outsb
outsb
mov
insl
inc
inc
push
int3
mov
loop
pop
outsl
push
push
push
in
dec
push
repz
pop
mov
les
outsl
aaa
aaa
pop
popf
pushf
cltd
xchg
xchg
add
mov
sarl
repz
cli
push
movsb
cmpsl
cmc
xchg
mov
mov
cmp
push
movsb
outsb
mov
add
pop
adc
lcall
cltd
or
cmp
inc
ja
push
daa
xchg
adc
xchg
xchg
lea
xadd
mov
xlat
jge
mov
jne
cltd
pusha
push
enter
mov
sub
jge
notl
sub
ss
sbb
pop
into
or
in
adc
mov
cmc
adc
sbb
mov
mov
lods
xor
fsubr
movsl
idivl
ljmp
lea
fnstenv
fnstenv
mov
mov
test
push
cmpsb
mov
xchg
push
mov
test
dec
cld
fadds
es
sarb
xor
sahf
ret
push
cli
jmp
xchg
mov
daa
pop
movsb
mov
fisttps
loopne
std
jmp
inc
jmp
lret
mov
xchg
push
inc
out
pushf
inc
out
push
addr16
jns
pop
lahf
loop
xor
sub
or
outsl
pop
mov
mov
mov
mov
mov
or
mov
shl
xor
std
jl
sub
out
enter
pop
jl
daa
xor
and
out
ds
cmp
add
push
enter
xor
mov
mov
xchg
test
cs
cmp
inc
xchg
jns
mov
sub
or
cmpsb
lret
adcl
jae
push
in
fcoms
or
push
add
mov
in
sub
push
ds
hlt
push
les
cmp
dec
xchg
call
cltd
xor
das
push
cmpsl
mov
mov
push
mov
mov
jnp
xchg
fstp
fisubrl
out
out
sub
lods
mov
xchg
ljmp
js
push
push
adc
roll
jmp
cmpsl
sahf
hlt
iret
andl
push
ret
add
insb
stos
adc
sub
xchg
add
push
int
sti
cmp
mov
jl
jae
fildl
mov
test
push
roll
lods
repz
push
andl
fcomi
popa
sub
cld
pop
fdivs
cmp
js
movsl
movb
fdivrl
js
dec
repz
xlat
mov
loopne
loop
int
pop
jb
mov
cld
fstpt
lock
cmp
xchg
loope
pop
mov
pop
clc
xor
sbb
jae
xchg
mov
add
pop
or
test
and
dec
xorb
fmull
xor
mov
rclb
fisttpll
test
insl
jecxz
testl
cmp
je
sbb
mov
sahf
pop
jbe
mov
or
lret
enter
sbb
mov
mov
cmpsl
cmc
push
push
and
jbe
adc
dec
pop
inc
xchg
push
cmpsl
xor
shrl
std
out
ret
daa
test
pop
pop
and
sub
cmc
popa
pop
cli
lea
decl
rcrl
cmp
dec
aaa
jae
inc
add
roll
call
pushf
mov
jbe
sub
xorl
lds
add
aaa
cld
cmp
test
xchg
stos
ss
xchg
aaa
enter
push
cmp
aaa
xchg
icebp
roll
or
cmc
fidivl
adc
loop
inc
aaa
xchg
or
test
stos
in
aam
sbb
adc
sti
dec
clc
into
hlt
nop
out
mov
lock
mov
jp
push
movsl
scas
mov
ljmp
inc
xlat
mov
inc
mov
jns
sbb
mov
or
outsl
sub
mov
pop
pop
lea
stos
loope
shll
fdivs
or
pop
test
or
xor
add
cmpsb
in
fiaddl
mov
loopne
dec
mov
fdivl
sbb
sub
jnp
or
pop
daa
ljmp
loop
push
push
inc
xchg
movsb
push
xchg
pminub
jmp
fwait
push
mov
pop
sub
mov
mov
jno
decl
inc
mov
ret
sbb
adc
inc
data16
and
pop
andl
sub
mov
jmp
adcl
aas
ret
js
scas
dec
add
inc
lahf
xor
imul
jno
sbb
gs
mov
jle
frstor
jle
pop
subb
lea
pop
push
xor
in
cmpsb
push
lods
out
imulb
sub
push
leave
jle
mov
push
cmpsl
mov
sub
jne
ja
scas
dec
ja
mov
or
inc
cs
daa
scas
test
inc
lea
xor
test
loop
movsb
sub
pop
rolb
jmp
add
dec
jns
and
push
aas
and
lahf
cmp
add
push
int3
jp
out
xor
fdiv
js
and
out
jmp
mov
mov
repnz
lods
cmp
stc
rorb
push
push
divl
fmuls
scas
addr16
sti
dec
xchg
lahf
cmp
pop
imul
test
inc
out
pop
or
rclb
jge
sti
scas
in
mov
cld
and
jns
lret
ja
pushl
arpl
mov
sarb
and
jmp
cmp
bound
js
stc
pop
jle
test
addb
mov
and
out
shlb
cmpl
pop
bound
and
xor
cwtl
jae
xchg
adc
inc
jge
outsb
cmp
mov
pop
out
sub
repnz
add
and
xchg
je
imul
clc
push
add
dec
leave
movsb
mov
aaa
inc
xchg
scas
fistpl
pop
roll
cmpsb
mov
jmp
dec
mov
push
push
push
pop
sbb
jge
loopne
xlat
mov
xor
shll
xor
fs
imul
sarl
or
ss
stos
dec
pop
int3
xchg
aaa
lret
jbe
sbb
mov
lcall
mov
dec
mov
popf
lahf
aas
and
and
sbb
sbb
jmp
aas
aam
cmp
pop
imul
cld
ret
jns
or
aas
js
adc
stc
sbb
xchg
fnstsw
jo
dec
inc
dec
dec
sub
clc
mov
xor
push
lahf
xor
das
imul
scas
loopne
call
or
xlat
jb
jle
or
loop
jecxz
jp
les
test
in
mov
add
xchg
jne
xchg
inc
jnp
rcl
test
clc
add
fdivl
and
insb
fistps
sbb
adc
loopne
mov
push
dec
gs
pushf
fnstsw
inc
sahf
test
in
jo
cmp
mov
pop
mov
rclb
in
jnp
loop
sbb
dec
lods
out
or
add
in
cmp
jae
sub
pop
push
fstps
cltd
jo
ja,pn
test
and
fninit
jo
out
lock
in
shrb
xchg
pop
pop
sub
push
imul
adc
fwait
sub
out
jmp
aad
xchg
pop
mov
mov
js
imul
lods
loop
lods
mov
sub
lret
aad
outsb
add
sbb
jle
nop
cmc
dec
jbe
push
sti
add
aas
pop
int
mov
jne
fsubrl
dec
xor
icebp
mov
mov
mov
stos
pop
mov
or
xlat
ret
xor
sti
jp
test
pop
xlat
adc
mov
mov
testl
xchg
jo
stos
mov
mov
dec
xchg
jae
lods
clc
shll
lds
xor
test
into
pop
mov
or
xor
push
dec
mov
jge
lret
arpl
dec
test
mov
xor
push
inc
pusha
inc
inc
push
pop
jecxz
imul
ret
aad
jmp
sbbl
scas
mov
push
outsl
xchg
aad
lods
clc
mov
sub
ret
pop
sub
cltd
inc
jo
or
outsl
testb
adc
cmp
in
sub
cmp
xor
fs
xchg
jne
imul
push
jg
scas
jno
sti
cli
test
inc
adc
mov
cmpsl
sbb
or
popa
jno
mov
insl
pop
imul
inc
cltd
jne
mul
xor
adc
jnp
data16
aaa
imul
in
xor
mov
addl
sub
xor
adcl
lret
mov
jge
xchg
fwait
jp
int3
cmp
sbb
pop
xchg
xor
repz
dec
out
int
jo
test
das
lods
or
add
sbb
sbb
cld
mov
in
les
pop
in
dec
mov
xor
or
out
andl
loope
aas
cmp
jle
int
pop
push
sbb
rorb
cwtl
aas
mov
int
lods
xchg
dec
sarb
add
mov
cmp
ss
mov
ds
and
movsb
jmp
sub
js
cmp
lea
xor
or
xor
cmp
pop
jp
mov
test
cmc
push
push
sub
jno
jo
add
mov
sti
and
loope
sbb
dec
int
sti
jo
push
or
mov
in
movsl
lea
lahf
lret
mov
cld
rcll
fwait
in
pushf
pusha
push
xchg
mov
out
rcr
xchg
xor
push
cwtl
add
pop
mov
xor
push
xchg
insl
outsb
repz
mov
test
rcrl
fdivl
out
cmp
or
mov
roll
scas
shlb
pusha
mov
jbe
fwait
mov
rorl
les
pop
fdivr
scas
or
inc
push
mov
mov
dec
sbb
inc
cmp
sub
popa
call
loop
aaa
popa
lea
adc
iret
outsb
mov
aad
mov
cmp
das
jg
sub
dec
mov
mov
sub
inc
stos
and
lds
std
stos
pop
jp
mov
pop
cmp
add
in
pop
jl
push
jge
add
jnp
les
dec
fs
leave
scas
mov
jle
dec
xlat
sti
push
push
add
ret
jmp
inc
arpl
imul
xchg
pop
sti
add
dec
dec
fldl
shlb
push
inc
fisttpl
pmulhuw
mov
orb
insl
push
int
jnp
rorl
jle
mov
xor
push
leave
mov
jge
and
cwtl
fcomip
outsb
or
add
xor
push
enter
arpl
sbb
cld
adcb
cltd
in
xor
sub
or
inc
ljmp
add
jge
scas
or
sub
repz
lods
pop
nop
js
jb
gs
xlat
in
ss
repz
das
in
pop
xlat
test
addr16
adc
pop
test
jns
lahf
loope
jbe
adc
push
xor
pushf
sarl
popa
in
xchg
jg
add
or
iret
scas
pop
ror
popa
sub
into
rcll
xchg
cmp
lods
imul
jno
xor
jl
adc
lea
mov
fstpl
insl
add
pop
rcr
repz
aas
mov
push
out
inc
mov
adc
imul
xor
cmpb
jmp
pop
dec
push
add
dec
push
loopne
or
es
js
mov
jo
aad
xor
dec
jle
mov
popa
fnstsw
je
insb
and
icebp
xor
outsl
add
jmp
mov
jp
fidivl
testb
movsb
scas
fadd
xor
mov
mov
das
sub
stos
notl
pop
enter
or
stos
leave
aam
cltd
pusha
insl
lahf
adc
mov
pop
lcall
sbb
cmp
add
mov
lods
lret
negl
adc
subb
jb
dec
inc
clc
push
int3
loope
cmp
push
out
arpl
ss
ficomps
mov
in
dec
popf
sar
inc
and
mov
xchg
arpl
push
adc
repnz
jmp
imull
pop
push
lock
fdivp
addb
stos
imul
sub
repz
sbb
and
fsubrs
pop
push
imul
push
into
jo
xchg
fistps
inc
jbe
pop
aam
ret
in
sbb
adc
dec
imul
inc
js
test
jge
mov
and
int3
sub
mov
lahf
test
das
xchg
lcall
mov
sub
in
outsl
movsb
lods
std
cmpsl
cli
in
sub
push
add
stos
movsl
ds
or
or
mov
enter
and
pusha
inc
sti
es
ljmp
lret
inc
or
sbb
pushl
into
dec
push
add
pop
roll
mov
jns
sub
cmp
add
mov
pop
dec
sub
mov
hlt
xchg
nop
sbb
push
shll
mov
and
in
les
lret
das
das
pop
lock
dec
cli
pop
jbe
scas
repnz
mov
sar
xlat
aam
sub
cltd
hlt
inc
xor
aam
test
in
inc
in
sbb
les
daa
add
push
xorl
je
inc
daa
mulb
fmull
xchg
sahf
push
cwtl
hlt
or
jb
mov
into
aas
mov
call
insb
xor
shlb
xchg
jo
js
andl
push
lahf
pop
mov
test
xor
xchg
pop
inc
and
in
push
ret
mov
aas
into
pop
ror
and
jp
mov
shrl
daa
cs
ds
cmp
gs
addb
enter
icebp
js
fistpl
in
push
push
mov
shlb
stos
dec
cs
xor
test
push
adc
or
and
cmp
cld
mov
sub
popa
js
push
adc
lahf
imull
lock
ds
fs
jbe
nop
fcmovbe
xchg
xlat
dec
inc
xchg
cmp
pusha
stos
int
push
movl
enter
push
mov
mov
into
fistpll
lea
dec
mov
iret
movl
push
xchg
stc
fisttps
testl
scas
rcll
imul
jae
lret
in
arpl
adc
xchg
mov
push
mov
dec
mov
out
jne
daa
xchg
inc
or
push
out
inc
repnz
enter
gs
xor
sbb
inc
jecxz
or
subl
inc
out
jmp
mov
or
es
loope
mov
add
in
pop
mov
ret
or
pop
ss
mov
xchg
push
data16
mov
inc
pop
aas
into
negl
jle
cld
cmpsl
stos
cs
add
cltd
ljmp
cwtl
test
daa
ss
int3
dec
fsubrs
in
scas
mov
xchg
lock
shl
test
dec
xor
push
in
movsb
push
in
std
fsubrs
aas
mov
mov
jmp
and
inc
inc
cli
push
sub
and
call
aas
pop
pop
push
or
inc
adc
sbb
imul
jmp
dec
adc
sarl
xchg
jge
out
jo
movsb
mov
addr16
adc
mov
aam
fwait
rclb
lea
in
or
lcall
add
in
es
ljmp
pop
cli
arpl
aam
mov
xchg
outsl
fcoml
mov
in
or
pop
cwtl
xchg
repnz
testb
fnstenv
dec
cwtl
jae
stos
inc
out
cmp
dec
jle
shl
aas
mov
jmp
mov
cmpsl
and
xlat
sbbb
in
sub
das
popa
gs
mov
in
cli
add
test
popf
lcall
jne
mov
xchg
add
pop
cli
sahf
in
mov
test
fsubrp
pusha
or
cmpb
test
test
xor
adc
gs
xchg
pmaxub
push
or
sub
icebp
mov
or
cmp
movsl
outsl
imul
jl
mov
es
pop
adc
ret
hlt
cmpsl
mov
jbe
out
imul
inc
fcomip
addr16
cmpsl
aad
jg
cmp
add
cld
movsl
lcall
mov
xchg
int
mov
cmp
sahf
dec
lock
mov
enter
jns
or
data16
enter
mov
dec
pop
mov
les
imul
popa
cmc
fidivrs
out
sub
bound
fists
cltd
add
xchg
jns
cmp
cmpsl
or
mov
pop
xchg
jns
daa
inc
push
jmp
sbb
lret
cmpsl
xlat
and
mov
out
int
out
insb
cltd
push
repz
xchg
push
icebp
mov
lea
je
sahf
cmp
jmp
stos
dec
cmc
inc
sub
shr
pop
jp
xchg
sbb
test
push
out
sub
adc
cs
fistpl
mov
divb
int3
pushf
jmp
aaa
mov
mov
cmpsb
mov
add
xchg
sub
das
movsb
push
mov
pop
jne
cmp
mov
adc
rcrb
jmp
loopne
add
mov
cmc
fdivrs
cld
inc
into
jp
add
test
dec
daa
xchg
stos
popa
and
mov
addr16
insl
out
mov
pop
in
push
fsubs
movl
mov
sbb
mov
cwtl
repz
xor
xchg
jo
out
cltd
fisttpll
aad
or
pop
push
mov
push
fmull
mov
inc
cmp
pop
cmp
cmpsl
sbb
push
dec
add
pop
ljmp
lret
insl
aad
gs
mov
daa
sub
rcrb
or
add
dec
enter
shrb
xor
mov
or
cmpl
loop
lods
pop
xchg
gs
or
mov
bound
inc
lods
out
adc
add
inc
and
mov
pop
jle
or
divl
xchg
pop
mov
outsl
inc
jo
xchg
ret
sbb
rolw
mov
popa
outsl
dec
xchg
pop
mov
out
or
dec
push
stos
mov
in
mov
imul
lret
pop
cmpl
movsl
push
mov
cmp
push
stc
pop
adc
xor
leave
sbb
push
and
mov
pop
push
push
lods
popa
mov
mov
xchg
mov
fldt
fbstp
push
sub
lea
movb
rcrb
or
push
into
dec
xor
push
test
das
mov
push
cltd
fcmovnu
imul
push
cld
sbbl
mov
mov
lea
sbbb
jle
mov
loopne
fsubp
mov
scas
or
pop
popf
push
popf
dec
jmp
sbb
outsb
mov
pop
and
sahf
push
outsl
jecxz
xor
dec
imul
push
cli
pop
fisttps
adc
xorps
adc
xchg
xor
mov
movsl
adc
cmpb
loopne
sub
pop
fbld
add
les
repnz
jg
int3
lea
adc
adc
and
or
xlat
hlt
adc
roll
xchg
sbb
pop
loop
jl
ret
inc
pop
in
xorb
xor
lahf
in
xchg
mov
jb
jb
sbb
or
and
lods
ret
mov
xor
stos
and
sbb
mov
mov
in
std
push
call
ficomps
mov
lea
xchg
inc
aam
nop
into
stos
mov
fldcw
sbb
or
ds
js
insb
enter
adc
push
int
sbb
imul
mov
imul
push
push
add
popa
shl
push
push
push
push
les
in
push
into
jge
movsb
mov
data16
addl
bound
movb
rorl
cltd
or
inc
xchg
jae
fisubrs
out
outsb
sub
imul
out
in
mov
das
mov
dec
loopne
pop
repnz
clc
out
subl
sbb
rcll
adcl
mov
cmp
xor
jo
xor
fs
sbb
or
dec
les
test
js
cs
mov
push
nop
push
outsl
test
cmp
sub
or
stos
mov
add
pop
fscale
push
pop
dec
jle
xchg
xor
add
push
daa
cmp
int3
push
pop
inc
xchg
adc
or
push
jae
lds
fldcw
nop
das
aas
pop
jecxz
out
sbb
pop
cmc
rolb
fs
insb
cmp
pop
sub
out
push
sub
ja
call
cmc
pushf
pop
xchg
xchg
or
lret
mov
jno
mov
sub
sbb
mov
bound
mov
mov
inc
je
pop
lcall
ret
mov
bound
inc
mov
or
popa
fdivrs
sub
lea
ss
mov
imul
push
and
je
and
dec
mov
enter
jbe
aas
pop
mov
loopne
stc
add
outsl
je
dec
xor
push
loope
sbb
push
les
aad
out
mov
fdivrl
push
dec
imul
faddl
lahf
xchg
xlat
jg
jmp
sub
dec
inc
or
out
subl
in
dec
inc
hlt
sub
mov
xor
repnz
mov
xchg
pop
and
cmp
cmpsl
add
std
dec
push
jns
out
in
pop
xchg
xchg
mov
insl
sbb
out
jbe
or
sbb
mov
iret
and
mov
push
bound
lcall
lds
daa
cmpsb
adc
cltd
in
je
cmp
add
stc
mov
sub
adc
add
in
pop
fwait
aad
or
push
or
xor
mov
inc
cmp
mov
popa
cmpsb
rcrl
cmpsb
imul
aas
mov
xchg
cs
push
jle
adc
cmp
xchg
xor
mov
nop
mov
push
jnp
mov
shr
jp
mov
fsubrl
pop
cmp
jae
lods
std
mov
inc
push
aas
addr16
pop
sbb
adc
sti
or
xchg
sbb
adcb
rep
adc
popa
leave
ja
pop
orl
fcomps
int
add
mov
or
add
and
cmpsl
jl
fcmovnbe
imul
mov
into
dec
cwtl
adc
scas
xor
daa
out
cmp
mov
pop
mov
or
push
or
inc
mov
lahf
nop
mov
cwtl
mov
pop
pop
pop
ret
clc
testl
test
dec
add
adc
cmc
push
sti
mov
pop
xchg
pop
sbb
loope
mov
push
arpl
xchg
mov
rolb
pusha
push
int
test
and
pop
mov
jmp
rorl
adc
into
mov
push
mov
push
or
lods
les
lret
and
mov
push
mov
push
and
cli
mov
jle
ret
mov
insl
sbb
push
push
push
scas
and
rorb
insb
inc
addr16
lods
das
xor
mov
pop
je
mov
data16
lock
test
add
xor
inc
jp
out
push
cmpsb
add
hlt
cld
mov
sub
movsl
in
mov
out
and
jnp
mov
sarb
push
cmc
cmp
push
mov
jmp
aam
mov
pusha
mov
int
mov
sub
sub
jecxz
addr16
nop
push
iret
push
movsl
mov
inc
sbb
testb
outsl
xchg
or
mov
rcrl
jns
push
mov
sub
cld
or
and
ficoml
mov
enter
out
mov
lock
jl
leave
ret
xor
dec
adc
ret
shrl
mov
add
movsb
lcall
inc
sahf
rcl
mov
jecxz
mov
jle
fdivl
shl
imul
cmpsb
mov
icebp
jae
and
test
fidivl
lea
pop
adc
and
lds
add
cmc
filds
lcall
sub
hlt
push
aas
bound
or
in
cwtl
mov
mov
cs
enter
inc
leave
adc
lods
movb
mov
mov
mov
loope
les
cmp
int3
push
sti
mov
adc
pop
push
mov
push
lret
sbb
inc
jl
imul
inc
adc
jae
pop
sarb
repz
test
cmpb
sahf
out
sbb
mov
lahf
into
das
jle
cs
adc
xor
cli
cmp
push
es
sub
jnp
movsb
push
mov
push
xchg
sub
sbb
push
xchg
and
xchg
and
rdmsr
lods
out
adcl
lret
jg
stos
xor
mov
inc
je
pmaxsw
std
fs
inc
andb
stc
adc
repnz
test
out
imul
in
mov
in
loope
sbb
inc
mov
mov
or
mov
out
int3
cmp
cmp
dec
popa
lea
ss
pop
push
enter
loop
mov
jle
push
or
subl
inc
les
int
add
test
cli
xchg
sub
mov
mov
repz
mov
inc
jl
or
daa
cmp
mov
pop
lret
sub
mul
std
stc
ficomps
ljmp
inc
pop
ret
repnz
xchg
adc
inc
jg
cld
adc
adc
xor
lahf
push
dec
mov
scas
ja
mov
xor
imul
jb
jecxz
mov
xchg
and
fwait
push
fdivr
cmp
fst
pop
xlat
xchg
shll
sbb
sbb
add
stos
pop
mov
jecxz
mov
mov
and
mov
ret
inc
dec
pop
mov
xchg
xor
outsl
sub
jl
incb
aaa
fwait
in
xchg
mov
ss
dec
outsl
pusha
mov
into
bound
jbe
sub
jbe
pop
clc
dec
push
jp
negb
push
test
dec
add
sbb
data16
jp
add
divl
cmp
enter
add
lock
repz
mov
pop
pop
xchg
rclb
fisubrl
adc
mov
cmc
xchg
jae
mov
repz
mov
sub
enter
roll
jbe
shrb
fucomp
xchg
add
mov
sbb
mov
dec
in
xor
mov
cld
xor
sbb
push
add
rcr
fdivs
or
xor
stc
idivl
jg
sbb
sbb
addr16
jns
sub
adc
mov
cmp
rcll
push
mov
cmp
jmp
fsubl
fwait
lret
in
stos
mov
rcll
ljmp
std
pop
ja
inc
fcomps
add
repnz
xchg
inc
lea
sbb
orb
mov
aad
lea
sbb
cmc
das
fcomip
xchg
pop
test
mov
push
ljmp
push
cs
and
ja
or
push
xchg
aam
push
jl
repnz
mov
cmp
lret
and
mov
inc
jae
jl
mov
mov
repnz
cmpsl
dec
cld
out
nop
mov
stc
adc
pop
lahf
fbstp
gs
push
lret
cmpsb
mov
or
sbb
add
and
sub
add
shlb
int
jg
push
jl
add
dec
cs
jge
add
sbb
nop
gs
std
inc
out
out
adc
xor
sbb
mov
inc
shl
std
ljmp
push
inc
arpl
add
andb
insl
cmc
sarl
cmc
jl
loope
pop
xchg
les
popf
inc
mov
dec
rolb
loope
sub
add
xchg
sbbb
loope
sbb
push
aas
notl
out
fbld
aas
sub
push
imul
das
xchg
and
nop
xchg
or
push
pop
xor
lock
lods
mov
popa
mov
or
adcb
loope
add
cmp
cld
and
fisttpl
sub
cltd
xor
sahf
mov
rorb
jecxz
push
push
ds
fnstenv
mov
jge
das
sbb
in
outsb
lahf
fnsave
adc
cmp
push
sub
push
jmp
or
mov
mov
scas
ret
lcall
xor
push
insb
sar
rcrl
testl
shr
push
xor
sbb
mov
shll
fsubrl
bnd
push
sti
cli
insl
mov
jns
aas
das
lods
fisttpll
imul
popa
add
jg
push
jle
jl
fcomps
xrelease
hlt
hlt
retw
pop
push
js
insl
pop
inc
add
push
and
push
inc
mov
and
mov
add
xor
bound
sahf
test
scas
pop
ja
stc
aas
ljmp
test
iret
push
fadds
and
fs
movsl
and
cmpl
addl
fisubs
jnp
pop
adc
movsb
pop
sbb
push
imulb
xor
lea
sbb
test
loopne
int
pusha
scas
cmp
dec
loope,pt
mov
sub
in
jnp
das
push
mov
sub
pop
movsl
xchg
xchg
int3
clc
call
and
mov
stc
pop
bound
ds
mov
leave
pop
xor
test
or
and
pop
push
iret
sub
jge
negl
push
xchg
sbb
stos
pop
jp
iret
pop
jecxz
push
inc
jo
les
mov
sub
adc
mov
xchg
jle
jb
rol
imul
aad
shll
fcoms
push
in
sarb
lret
xchg
push
xor
scas
aaa
cmpsb
fs
adc
xor
loope
push
dec
push
cmp
sub
insl
fcomps
or
or
dec
xor
mov
push
ja
add
mov
mov
arpl
fldl
cmp
inc
imul
stos
imul
je
fdivrp
xlat
add
scas
in
imul
mov
fwait
mov
or
lea
mov
ss
je
fidivrs
mov
xchg
int
push
and
ljmp
lea
cmpsl
push
sbb
lret
in
xor
or
xchg
cmp
cmp
pop
jns
inc
mov
cmpsb
adc
stos
dec
xchg
cmpsl
fidivs
in
xchg
ret
in
inc
jg
hlt
jb
ret
rolb
cli
xchg
lahf
enter
repnz
pop
shrb
cmp
ljmp
sbb
jbe
dec
ja
add
loop
dec
insb
adc
push
dec
pusha
sbb
inc
ljmp
sub
push
mov
sbb
adc
mov
jge
sbb
inc
sahf
rorb
jb
pop
push
pop
jl
sti
add
in
mov
test
out
mov
pop
lret
dec
xor
imul
repz
sub
addr16
jge
sub
sbb
fadd
inc
push
sbb
mov
das
mov
xchg
jmp
adc
cmp
jge
mov
mov
daa
decb
jno
inc
sbb
and
sub
adc
fsubrs
sub
jns
jecxz
push
cld
sub
dec
lods
lret
jmp
fcom
leave
mov
mov
mov
movsl
js
les
jmp
xlat
push
push
push
mov
fs
sbb
popw
cltd
arpl
cld
cmpsl
mov
add
add
sub
lock
inc
xor
adc
xchg
pop
pop
gs
roll
pusha
mov
pop
cmp
fwait
mov
or
mov
push
ret
ja
icebp
adc
mulb
pop
pop
aas
push
push
jecxz
filds
xchg
aas
mov
in
push
pop
addr16
repnz
aam
mov
cmpsl
pop
dec
pop
cld
or
jge
leave
push
fsubp
loope
jecxz
pop
shlb
or
push
push
pop
jp
xchg
jae
inc
sbb
jno
and
out
loope
rcrl
lods
mov
push
imulb
jmp
cmp
icebp
mov
or
loope
frstor
cmp
add
xchg
mov
lea
or
les
fistps
and
sbb
push
xchg
push
scas
and
dec
and
xchg
mov
std
jle
icebp
mov
ss
mov
mov
mov
dec
cmp
add
stc
pop
add
dec
sbb
or
push
shll
test
outsb
or
popf
cmp
mov
sbb
mov
and
cli
pandn
jl
out
and
fwait
jae
insb
sysenter
sahf
repz
insl
push
shl
or
in
mov
sbb
jge
add
daa
pslld
bound
lods
push
dec
mov
test
sub
jae
enter
mov
out
scas
into
repnz
out
push
out
jle
cmpb
lret
lock
xor
xlat
inc
adc
xchg
data16
inc
int
push
orb
push
adc
jo
imul
push
inc
adc
repz
shll
xor
add
and
dec
shr
sbbb
aam
dec
jmp
and
jnp
shrl
jecxz
int
add
cmpsl
xlat
std
stos
imul
and
adc
pop
lods
sbb
cmp
jns
insb
cmp
scas
xchg
xchg
sub
dec
out
pop
jle
xlat
xlat
sar
xor
mov
add
mov
jmp
orl
jp
add
enter
fsubrl
adc
mov
xchg
clc
addr16
fcmove
jmp
push
rolb
jle
ret
inc
cmc
cmp
jb
loope
shrl
test
sbb
mov
outsl
mov
mov
je
mov
hlt
mov
push
or
ja
outsb
sbb
and
pushf
ret
mov
and
pop
insl
mov
lahf
jbe
mov
fs
xchg
fisubl
bound
cli
aaa
or
into
push
nop
es
int3
pop
pop
xor
mov
jne
mov
test
test
and
daa
xchg
inc
cmpsl
outsl
inc
roll
mov
pop
dec
daa
xor
jecxz
mov
mov
adc
insb
das
rolb
mov
dec
push
addl
movsb
mov
xor
cmpsl
sub
and
add
push
test
fisubs
ljmp
das
popl
psubsb
jle
iret
fsubs
je
test
or
fcompl
sti
dec
enter
gs
lods
imul
jp
jo
rorl
mov
cmc
outsl
bound
jo
je
mov
shlb
mov
pop
leave
add
xchg
lret
pop
mov
popa
lea
and
imul
sbb
aam
lds
aam
sub
dec
bound
stos
popf
xor
inc
push
outsl
out
jg
popf
push
push
scas
insb
xor
push
cs
mov
clc
lea
adc
aam
xor
ret
mov
push
add
push
cmp
mov
aaa
adc
mov
xchg
sub
inc
or
and
jge
cmpsb
sbb
sub
ja
sti
mov
aas
jle
arpl
cli
push
push
in
pop
push
jnp
fs
xchg
iret
outsl
enter
dec
adc
or
mov
add
mov
stc
enter
sub
popf
pop
cmp
cli
int
pop
sub
mov
adc
fildl
or
xchg
test
cltd
pop
and
test
and
xchg
sbb
jp
mov
and
fdivl
or
adc
pslld
fwait
ljmp
jo
fwait
push
or
bound
jp
add
mov
adc
repz
mov
dec
sbb
out
mov
push
sub
or
push
lret
push
lods
mov
jge
fcoms
cwtl
lock
xor
push
icebp
xorl
popfw
or
mov
mov
xor
push
or
imul
and
andl
push
dec
outsb
push
push
lret
mov
pop
jg
mov
pop
pop
mov
xlat
loopne
in
pop
xchg
dec
addr16
xor
jmp
cmp
subb
out
jp
jp
cmc
push
push
push
in
lret
inc
xchg
mov
mov
mov
jno
and
xchg
in
cmp
xor
xor
cmpsl
mov
pop
adc
rcl
or
into
shlb
test
xchg
push
addb
jmp
push
sbb
clc
inc
lea
sbb
push
aam
stc
xchg
fldl
outsb
and
mov
push
ds
xor
push
xchg
mov
aam
out
pop
jge
and
ds
sbb
or
arpl
inc
pop
insl
aad
sub
outsb
shll
cmp
shll
push
jns
fwait
pusha
mov
loop
aam
pop
outsb
insl
stos
in
mov
push
mov
mov
outsl
enter
aam
dec
mov
xchg
out
mov
add
or
test
mov
adc
lods
imul
cmp
shrl
pop
fiadds
add
repnz
cmp
xor
mov
mov
mov
inc
out
push
and
cld
scas
cmc
mov
shll
xchg
and
bound
sub
loop
xchg
mov
sbb
and
arpl
jnp
add
or
out
out
movsb
inc
sahf
outsl
dec
jno
mov
mov
cli
fdivrs
sbb
sub
jne
das
cwtl
or
or
xchg
ljmp
mov
xor
cmp
jns
out
mov
add
pop
fcoml
outsl
xchg
adc
sub
cmpsb
cmp
xchg
addr16
mov
adc
xchg
ja
jns
ret
xchg
jne
push
fcoms
push
adc
movsl
imul
and
jmp
js
cli
xor
jmp
cmpsb
sub
fucompp
xor
ja
rclb
cmp
and
dec
stc
sbb
inc
test
cmp
mov
roll
shrl
mov
sub
fisttpll
and
add
adc
stc
nop
mov
cli
mov
mov
pop
in
push
insl
dec
add
cmp
lret
adc
cld
xor
mov
insb
mov
fmulp
xor
rorb
mov
sub
test
shll
jo
scas
cmp
sbb
xchg
ficomps
inc
inc
dec
fistpl
mov
adc
mov
stc
out
cltd
sub
xchg
ljmp
stos
push
jle
push
shlb
pusha
pusha
loop
inc
push
dec
je
in
xchg
inc
or
push
cmp
fs
push
cwtl
xchg
sbbb
imul
roll
or
push
fadd
cmp
mov
addw
adc
lahf
sub
pop
dec
and
ret
xor
pslld
jo
xchg
getsec
add
rcrl
xor
add
lret
outsb
test
test
aas
aas
xchg
sarb
mov
jmp
mov
test
nop
mov
jne
vmovlps
test
or
outsb
imul
lods
bswap
mov
and
add
lea
test
dec
daa
dec
push
xor
and
ss
stc
add
add
xchg
lds
les
js
js
jle
mov
pop
movsl
std
insb
inc
mov
test
test
push
pop
or
insb
jecxz
fimuls
aas
lahf
mov
dec
mov
lret
mov
mov
pop
xchg
cli
push
pop
rcll
repz
adc
ret
xor
lea
insl
dec
jg
aaa
sbb
mov
push
inc
sub
inc
jl
cmpb
mov
movsl
or
les
mov
jl
gs
imul
mov
mov
mov
in
mov
lret
daa
cld
cmpsl
dec
dec
mov
fs
xchg
dec
insb
ljmp
in
iret
mov
mov
inc
lock
sahf
push
fisttpl
movsl
sbb
push
hlt
lock
xchg
xchg
xchg
or
insl
adc
dec
test
hlt
leave
test
fidivrl
pop
fsubr
movsl
xlat
or
cmp
bound
inc
pop
leave
fisttpl
mov
and
mov
sbb
lods
or
mov
out
test
pop
adcb
in
addl
adc
sub
out
ret
out
jne
fdivl
mulb
stos
lods
lea
push
xlat
add
shrb
mov
xor
inc
lods
mov
rorb
gs
into
xlat
sbb
into
js
cmp
sub
gs
fimull
mov
aaa
scas
and
mov
loope
jo
pop
mov
xchg
cli
sbb
xor
mov
fwait
pop
adc
dec
xor
aas
mov
dec
leave
loope
aaa
jbe
mov
dec
loopne
mov
cmp
cmp
jae
jne
subl
push
dec
jo
cli
pop
nop
xchg
mov
shll
pusha
lahf
sarb
inc
ret
mov
adc
out
and
add
stos
bswap
pop
mov
dec
mov
push
pushf
pushl
push
into
jge
cmp
fiaddl
mov
pop
fwait
rclb
lcall
negb
sahf
clc
iret
push
imulb
mov
out
adc
xchg
loopne
mov
loope
sbb
and
jle
not
sbb
mov
loopne
roll
daa
sarl
adc
dec
xor
andb
popf
lods
es
fidivs
push
fisttpl
sahf
push
into
sbb
test
int3
rcrb
aas
negl
pop
movsb
mov
frstor
sbb
dec
repnz
push
mov
pop
xchg
mov
lods
sbb
lret
xchg
push
imul
nop
jb
adc
xor
sahf
inc
dec
add
int
scas
insb
loope
iret
stc
iret
rcrb
mov
xchg
or
push
lea
sahf
inc
ja
sahf
inc
testl
popa
or
cmc
lcall
push
dec
call
inc
stc
adc
popa
out
setl
cmp
cmp
shll
dec
mov
insl
push
dec
push
inc
in
popa
mov
mov
xlat
add
sub
pop
idiv
pusha
inc
movsl
dec
push
cwtl
loopne
dec
add
repnz
mov
add
mov
cmp
lret
hlt
xchg
or
cmc
aad
cmpsb
stos
mov
insb
cmp
rcll
imul
mov
push
mov
lcall
arpl
add
mov
fisubrs
aad
cmp
rdmsr
jg
outsb
hlt
in
push
inc
sbb
xlat
push
mov
inc
mov
push
mov
fisttps
dec
into
into
sahf
jo
sub
mov
add
mov
pop
adc
lods
mov
pop
push
test
stc
int3
cmp
cmpl
loope
push
xlat
in
lahf
clc
faddl
jno
repnz
mov
cld
loope
mov
jae,pn
mov
daa
stos
dec
sbb
mov
test
cmp
je
sbb
hlt
pusha
ret
pop
aas
dec
jae
xor
repz
xchg
jae
sub
imul
scas
and
js
pop
inc
hlt
mov
mov
add
lods
les
mov
add
js
jl
pop
xor
pop
mov
int3
dec
lcall
leave
mov
cmpsb
xor
aad
cmp
jo
sub
std
dec
sbb
mov
mov
js
outsl
aas
cmpsb
out
insl
pop
mov
jmp
arpl
inc
js
outsl
mov
add
repz
push
mov
xchg
in
xchg
xchg
call
and
insl
setne
mov
test
push
int
iret
cmp
aaa
jbe
mov
jno
adc
cmp
cmpsb
in
ljmp
shr
sub
lds
xor
dec
mov
pushf
xor
pusha
mov
inc
xor
sub
addl
movsb
xchg
dec
pop
xchg
adc
call
aam
insb
or
mov
out
movsl
repz
lods
data16
cmp
jne
outsl
aas
pop
arpl
movsb
xchg
jecxz
mov
mov
rcrl
popa
adc
lock
jg
mov
cmpsb
les
jae
test
in
loop
sub
push
xchg
dec
or
pop
sub
mov
out
and
pop
repz
ja
add
lahf
mov
jne
dec
xchg
jnp
sti
mov
and
sub
mov
adc
aas
push
sti
xor
pop
or
jo
xor
push
or
cmp
jle
dec
xchg
mov
jmp
lret
mov
hlt
scas
push
stos
mov
hlt
or
push
jg
xchg
fwait
inc
push
sub
push
test
pushf
sub
loope
cmc
test
sbb
xchg
push
push
call
aaa
jmp
pusha
cltd
out
or
mov
push
and
movsb
sub
xor
jno
dec
lds
cmc
clc
shll
and
sbb
xchg
push
add
lods
cmpsb
sub
in
daa
pop
outsl
and
imul
leave
std
scas
enter
lea
xchg
psubb
xchg
dec
lahf
or
dec
popa
sub
mov
leave
sub
lret
add
inc
add
fstp
sub
adcb
scas
fimull
cmp
rorb
test
jg
popa
dec
mov
pop
jbe
sti
lods
rclb
bound
xor
add
mov
mov
test
iret
pop
jecxz
out
out
out
imul
out
clc
dec
sub
gs
push
mov
jo
xor
pushl
sbb
insb
std
pusha
psllw
sbb
sbb
lret
pop
loopne
or
fsubs
inc
fnsave
jg
and
jo
das
pop
das
test
lds
dec
sti
mov
sarb
pusha
push
cmp
flds
jecxz
pop
fldt
cltd
fsts
fiadds
adc
xlat
mov
shll
mov
aad
pop
dec
add
test
cmp
shlb
ja
test
iret
jae
add
std
sbb
and
roll
lock
push
or
jecxz
das
sahf
push
enter
das
dec
imul
dec
lret
mov
ljmp
inc
jae
cmp
dec
mov
jg
movsl
adc
xor
sub
sbb
insb
jb
sub
pop
or
inc
add
sbb
lock
or
stc
push
sbb
in
idivl
fadds
inc
lret
jnp
pop
dec
cmp
repz
iret
cmp
lcall
adc
sbb
dec
pop
outsl
push
cs
cmp
jne
sbb
aas
stos
cmp
repnz
cmp
ret
xor
jge
test
mov
push
mov
sbb
in
jb
sub
in
inc
pop
add
mov
sbbl
divl
push
aad
mov
or
xorl
push
testb
xor
test
test
das
outsb
icebp
pop
pop
jb
cmp
xor
push
pop
cltd
jnp
sub
fsubrl
mov
sbb
adc
cmp
or
cmp
inc
fistpll
sti
xor
add
and
clc
adc
inc
adc
sbb
mov
scas
inc
add
jo
sbb
lea
inc
lds
test
lock
or
mov
leave
movsl
fs
loope
or
mov
jecxz
or
cmp
bound
xchg
call
inc
add
sub
or
pop
xchg
push
mov
lea
push
fs
js
jb
les
movsl
imul
or
in
shlb
fst
aad
push
cltd
inc
add
xchg
inc
lret
fisubl
or
and
push
std
push
xor
cmc
pop
jmp
lret
inc
sbb
pop
mov
clc
stos
fcmovu
inc
xchg
mov
add
int3
jno
cmp
mov
mov
pusha
fs
cld
push
lret
or
addr16
je
inc
sub
loope
xor
stos
push
es
es
xor
into
shrb
pop
adc
cmp
repnz
std
jbe
aad
ja
pop
cmc
push
inc
lret
pop
lahf
sub
cmp
mov
mov
fldl
jmp
fbstp
daa
stos
outsl
xchg
adc
lahf
insb
popa
pop
dec
fldt
jge
int
or
mov
cmpsb
cmpsl
stos
pmulhuw
inc
inc
push
mov
loop
addr16
loope
or
mov
stos
push
jle
or
push
cmc
ret
mov
mov
pop
das
mov
out
enter
gs
push
mov
xchg
nop
xor
add
loop
cmp
pop
pusha
negb
inc
sbb
adc
pop
mov
or
clc
lock
xor
ds
push
jge
aas
jecxz
inc
imul
xchg
repz
adc
mov
addl
divl
jp
jg
in
inc
push
aad
test
iret
dec
repz
outsb
push
hlt
cli
shlb
cmp
rcll
insl
sbbl
add
sbb
aaa
sbb
mov
mov
xchg
xor
dec
aas
sub
test
rclb
push
call
dec
inc
jae
pop
std
enter
test
sub
test
jp
std
lahf
cmp
jp
mov
repz
lods
popa
jl
pop
mov
mov
cmp
add
inc
aam
leave
fisttpl
xchg
adc
test
inc
out
add
jne
dec
into
and
mov
push
jo
adc
jg
jne
roll
sti
adc
sbb
cmpsl
data16
call
out
sarb
loop
xorl
or
jno
pop
sub
mov
inc
js
fnsave
jg
js
sbb
pushf
ja
mov
jnp
or
push
mov
rolb
xor
es
pushf
je
dec
test
cmp
cmp
mov
rcr
leave
pusha
fadds
rclb
pop
jge
add
inc
pop
stos
adc
push
and
add
sub
addl
loopne
cmp
adc
fmul
les
add
aas
stos
scas
rol
clc
test
insl
aam
in
adc
test
inc
mov
dec
push
mov
aas
pop
push
lret
mov
int3
mov
rcrb
cmp
mov
jmp
pop
xchg
ss
cmc
mov
gs
push
sub
lcall
pushfw
sarb
mov
and
repz
test
inc
pushf
xchg
mov
das
inc
xor
mov
xor
sti
push
pop
pop
jnp
popa
mov
scas
dec
jge
mov
cmp
outsb
hlt
insb
jge
jle
insl
cld
xor
xor
push
jne
aas
xchg
fildll
mov
add
inc
xchg
mov
mov
outsl
push
xlat
jo
mov
xchg
inc
xchg
loopne
movsb
je
mov
push
cmp
mov
cmp
cs
inc
out
popf
or
push
inc
push
enter
fnsave
add
lahf
push
cmpsb
loope
fldenv
je
bound
and
inc
testl
ret
sub
scas
scas
mov
xlat
mov
inc
sbb
daa
movsw
loop
jbe
scas
fildl
aad
or
sbb
call
sbbb
rol
sarb
push
dec
int3
testl
pop
in
iret
jge
pop
add
aaa
adc
insl
popf
lret
cmp
mov
cwtl
push
xchg
mov
dec
jl
icebp
mov
jae
into
cmpb
add
ja
add
sub
clc
in
out
adc
mov
add
xchg
xor
out
and
punpckhbw
test
cmpsl
mov
rorl
int3
into
inc
fsubr
loope
ret
movsb
add
repnz
jno
cld
and
shrb
jo
pop
mov
jnp
push
lods
xchg
popf
lret
les
xor
add
and
test
cmp
xor
jno
imul
jge
sbb
sbb
scas
cmpb
adcl
aad
nop
jl
testb
add
inc
cmp
mov
shrl
lret
mov
popa
sti
dec
mov
pop
and
out
rdmsr
mov
mov
aas
je
push
out
xor
xchg
push
xor
popf
fstl
adc
les
es
or
xchg
jecxz
lds
add
pop
cmp
xchg
pop
pop
sbb
jbe
push
sbb
mul
les
and
les
enter
mov
std
test
outsb
jp
iret
int
sbb
sbb
or
mov
mov
ljmp
dec
lea
fmull
imul
push
int
lret
shll
es
inc
dec
inc
jecxz
mov
out
lcall
sbb
xor
std
mov
int3
add
fs
mov
xlat
test
xor
scas
dec
fwait
out
push
icebp
xor
jno
sub
shll
or
mov
fbld
lcall
cmp
sbb
mov
lsl
inc
cmpsb
clc
mov
dec
jb
mov
and
lahf
outsb
pop
xchg
mov
mov
or
jno
sbb
jl
rcrl
mov
sub
mov
pop
sub
loope
push
mov
mov
cld
jae
adc
dec
push
aas
fsubrl
js
mov
sarl
xchg
les
and
das
stc
or
aas
pop
add
enter
mov
jb
sub
cmp
aam
pop
mov
push
mov
lret
inc
lods
xchg
fwait
or
and
pop
sub
nop
mov
sbb
pop
inc
add
out
push
add
and
imul
les
mov
mov
mov
mov
out
xor
js
shrb
adc
fsubs
js
mov
and
jl
rcrb
mov
aas
inc
pop
insb
and
gs
adc
or
lcall
andl
jmp
cmp
pop
cmp
es
mov
pop
ret
insl
fld
mov
sub
and
div
push
shlb
dec
call
lret
pop
cs
mov
mov
sub
xchg
push
sbb
int3
fnstcw
mov
or
out
enter
int3
push
lret
xchg
cmc
cmp
arpl
push
cmp
mov
xlat
mov
gs
add
and
sbb
leave
push
clc
je
pop
fmull
adcl
xchg
lods
push
outsb
mov
inc
pop
pop
inc
xchg
mov
int3
add
loope
cmp
dec
xor
and
aad
dec
inc
lock
mov
lret
movsl
repz
nop
fdivs
ss
jnp
loope
pop
andl
push
scas
addr16
mov
adc
scas
loope
mov
imul
jp
arpl
loope
pop
leave
jne
pusha
mov
add
push
cmp
into
scas
push
prefetcht0
adc
mov
cmp
mov
mov
mov
push
repz
dec
sub
dec
gs
out
enter
lock
cmp
push
or
add
inc
inc
pop
hlt
test
push
inc
xor
sbb
cwtl
outsl
push
adc
adc
outsb
scas
outsb
jno
jnp
push
movsb
mov
mov
push
push
daa
push
push
sbb
ds
popa
and
arpl
das
xchg
pop
in
jnp
xchg
out
mov
ss
sti
jg
repz
and
dec
jae
inc
cld
stos
scas
mov
jae
out
dec
lods
sub
xchg
or
inc
aad
outsl
dec
dec
das
sub
sub
pop
jmp
inc
pop
sbb
das
pop
sbb
insl
mov
insl
jp
mov
pop
sbb
xor
aas
loop
push
lock
sbb
mov
out
mov
push
popf
jne
push
mov
mov
xchg
cmpsl
xchg
pop
dec
sbb
pop
sbb
xor
pop
jg
sub
dec
stos
scas
jae
and
cvtps2pd
arpl
xor
pop
dec
xchg
mov
jmp
imul
gs
sar
lcall
pop
lahf
add
rcr
push
mov
insb
adc
sbb
clc
and
call
std
sbb
jmp
fcompl
in
pop
call
push
ja
iret
xchg
test
add
leave
sbb
inc
jo
mov
es
xchg
push
or
push
cltd
rorl
data16
pusha
inc
leave
insb
and
mov
mov
dec
cmp
aas
or
pop
es
xor
scas
xchg
mov
inc
mov
and
mov
push
and
inc
or
mov
mov
out
iret
das
xor
ret
xor
xchg
shlb
movsb
ret
hlt
cmp
rcll
sarb
sbb
fisubs
loope
fldln2
fadds
mov
mov
lods
pop
mov
mov
fsubrl
sarb
ds
mov
out
sbb
cmp
pusha
mov
mov
xchg
or
pop
clc
lcall
fldt
jp
lds
lret
fdivr
mov
jne
push
js
ds
inc
jb
faddl
repz
jl
inc
lea
lods
loope
loopew
fistpl
mov
ljmp
add
jg
shll
pushf
add
in
dec
jns
push
mov
or
or
xchg
dec
jp
cmp
push
xchg
push
in
push
aad
cli
lcall
sub
les
sub
mov
jge
sbb
sahf
xchg
jno
cmpsb
push
rcr
jl
pop
stos
pop
mov
adc
outsl
fcomps
popf
fs
pop
aam
int
sbb
sub
adc
sub
add
jmp
in
or
inc
lods
and
or
mov
xchg
int
dec
xor
ja
adc
sbb
loopne
adc
scas
int
xchg
pop
mov
push
stos
aad
jecxz,pt
in
mov
mov
stos
cmpsl
decl
adc
dec
iret
mov
sub
dec
cmp
scas
or
cmp
negl
ljmp
cmc
test
les
or
jno
or
out
dec
cmc
fnstcw
shlb
pop
jno
add
lods
sub
shll
fcomps
ljmp
fstl
pop
sti
inc
or
repz
mov
int
xor
jo
dec
dec
popf
dec
mov
lcall
push
mov
pop
jmp
xor
sarb
rclb
out
sbb
dec
lea
mov
nop
add
jle
imul
ret
aam
bound
adc
inc
push
gs
add
xor
or
das
aaa
add
and
and
xorb
or
add
mov
aam
testl
pop
lods
loop
lret
jl
lods
adc
sbb
mov
dec
rolb
cmp
ds
lock
pusha
bound
push
shll
scas
sbb
mov
fnstenv
cmp
test
das
nop
push
int3
jle
lods
mov
adcl
inc
jmp
loopne
fsts
sbb
lret
lret
in
call
jno
nop
push
mov
fcmovnbe
test
push
std
aad
out
jl
inc
fidivl
add
cmp
dec
bound
scas
lock
fiaddl
test
push
into
pop
xchg
sub
mov
scas
inc
fsubs
xchg
mov
mov
or
jl
popa
into
mov
jmp
repz
outsb
das
js
add
pusha
mov
jp
and
call
into
xor
data16
lret
mov
mov
lods
xlat
sar
popa
jge
push
outsb
out
mov
out
testb
mov
inc
pop
mov
push
inc
movsb
icebp
stos
js
inc
xchg
popl
imul
lret
out
pop
add
dec
test
iret
mov
pop
sbb
inc
cli
jnp
cltd
sbb
int3
pusha
push
imul
mov
mov
pushf
jecxz
sub
in
mov
sbbb
or
xchg
cmp
inc
out
rcrl
cmp
push
sub
sbb
mov
ficompl
out
lods
mov
out
mov
jnp
lods
jmp
inc
pop
ret
inc
pop
jne
lods
je
imul
movsb
adcb
shrb
out
out
push
insl
xlat
fmulp
repnz
jb
cld
into
div
push
test
adc
dec
aad
ffree
sahf
dec
pop
mov
ds
mov
aad
lods
or
dec
int
xchg
dec
add
sub
adc
fisubrs
dec
xchg
cmp
jns
loope
jo
gs
je
push
aaa
xor
divl
mov
mov
lds
fcompl
sub
test
xchg
and
outsb
sub
lea
add
push
test
imul
or
push
lret
add
xchg
dec
mov
andl
xchg
mov
js
sbb
xorb
addl
lcall
mov
in
cmp
mov
enter
es
push
or
arpl
inc
mov
mov
xchg
push
dec
jge
shrb
add
iret
repz
push
cmpsl
lahf
imul
add
lock
out
mov
xor
hlt
aas
inc
xchg
dec
and
insl
inc
sbb
fsubl
mov
lcall
pop
jle
sysret
rcrb
jno
dec
dec
pop
or
or
out
mov
or
dec
out
aad
xor
push
movsl
les
mov
push
dec
pop
test
xchg
and
push
pop
in
pop
add
lods
stos
add
xor
dec
xchg
fistpl
rorb
pop
movsb
add
push
pop
xchg
dec
mov
cmp
ljmp
imul
sbb
push
test
inc
xlat
fbld
inc
lret
outsb
inc
dec
jecxz
cmpsb
pop
or
dec
inc
shll
adc
jb
dec
outsb
cmp
lret
sbb
pusha
push
cmp
stos
fdivs
adc
add
or
and
outsb
add
cmp
lea
sbbb
nop
add
mov
scas
stos
loopne
sub
mov
jmp
loope
sbb
and
xchg
pop
lahf
sbb
mov
push
and
jmp
aaa
lds
jmp
dec
sahf
fldenv
xchg
stc
push
imul
pop
adc
push
and
nop
cmp
fidivl
mov
cmc
imul
and
inc
push
repnz
das
add
sub
cmp
and
fs
dec
dec
dec
mov
clc
mov
add
lcall
cwtl
mov
push
ror
push
les
loopne
push
stc
add
mov
rclb
rol
cmc
inc
rcrl
mov
and
jp
dec
sub
repnz
pop
fidivrs
push
repnz
sub
movsl
ljmp
out
dec
or
push
movhlps
out
push
add
mov
pop
cmp
jne
xor
int
xchg
jge
scas
mov
sub
aaa
add
lods
jecxz
lcall
mov
xor
add
not
or
mul
cltd
cmp
add
jle
sub
fstpt
mov
sub
cmpsl
sarb
icebp
aas
movsb
jb
into
mov
mov
pushf
popa
push
pop
pop
pop
adc
mov
ljmp
mov
repz
jns
int3
jb,pn
dec
mov
lea
jae
or
scas
jo
pop
insl
cmp
cltd
jp
push
xchg
nop
aas
inc
cmpsb
mov
sub
ret
fs
inc
or
xor
cmp
or
ret
jecxz
push
push
out
cli
pop
sahf
push
aaa
xor
popw
lock
mov
jno
add
lods
rcll
addr16
test
cmpsb
sarl
sahf
mov
stc
insl
xchg
arpl
sub
filds
mov
jbe
xchg
stos
fldt
outsb
jmp
sub
jbe
inc
jb
mov
inc
aad
pusha
lods
sahf
or
pop
int
fists
jae
add
push
xchg
sub
inc
mov
loop
cmpsb
stc
xchg
scas
fdivrl
push
scas
fstps
gs
jmp
add
gs
in
sub
movsb
sub
lret
js
cmp
negl
or
lret
mov
popa
mov
xor
sub
cmp
ds
ret
mov
mov
mov
dec
cmp
jmp
mov
add
cmpb
mov
arpl
les
fidivrl
sbb
jg
mov
mov
mov
xor
pop
sbb
int
xor
or
das
sub
stos
push
cltd
xchg
cmp
pop
jecxz
cmp
cmc
jl
loopne
jp
fwait
cmp
nop
sarb
cmpsb
and
aam
mov
jge
push
push
inc
jl
pop
mov
sub
pushf
pop
std
data16
aad
imul
dec
lds
and
imul
pop
stc
mov
jp
sub
dec
repnz
push
gs
idiv
fucomi
loope
pop
cmp
lcall
ljmp
repz
or
ret
add
xchg
int
xor
jbe
push
mov
loop
lret
rolb
pusha
sub
xchg
cmc
aas
pop
dec
addb
sbb
adc
xchg
xor
leave
movsl
sti
stc
or
iret
iret
dec
shll
push
cmp
sbb
push
popa
and
mov
mov
add
xchg
lods
push
ljmp
pop
mov
jnp
jecxz
push
xchg
and
lods
sti
jno
les
sbb
mov
inc
movsb
sbb
dec
pop
sub
popf
jmp
add
jnp
leave
fstps
sbb
ret
push
outsl
or
jge
inc
scas
sbb
ret
mov
dec
cld
mov
mov
mov
mull
loop
fnstenv
js
sub
adc
or
mov
arpl
inc
cmp
pop
xor
cmp
insl
push
jo
mov
jg
sahf
and
mov
jge
pop
fldlg2
pop
dec
pop
xor
adc
pop
lods
shll
cli
outsb
or
imul
test
cmp
mov
mov
pop
pop
push
fcoms
insw
sbb
mov
jnp
je
faddp
sub
or
push
sbb
and
adc
mov
xchg
lods
jno
out
mov
in
mov
loop
lea
movb
faddl
shrb
add
scas
mov
cs
into
fucomip
aam
or
insl
into
pop
sahf
in
and
lock
mov
adc
pop
jl
cmp
jns
jno
mov
filds
loop
daa
popa
rol
sbb
lret
shll
cmp
sbb
lea
xor
inc
push
popa
leave
in
jle
mov
lea
mov
pusha
and
or
iret
jno
mov
popf
repnz
mov
subl
mov
jbe
orl
movl
adc
add
addb
jl
dec
sbb
insb
roll
lret
xchg
lea
cwtl
mov
mov
inc
lcall
loope
nop
arpl
jecxz
loop
enter
sub
ret
mov
rcrb
dec
insb
loopne
loop
push
push
jnp
mov
ds
cmp
loope
aaa
scas
lock
cmpb
in
jae
push
jle
addr16
test
pop
mov
fistpl
and
mov
sahf
xor
mov
pop
jmp
pop
jg
mov
fdivl
movsl
adc
xchg
xchg
or
mov
sbb
cltd
outsl
sub
adc
cmp
xchg
lock
filds
rorb
loopne
cmp
std
mov
or
dec
test
add
and
call
pop
cli
or
pop
stos
out
pop
outsl
in
dec
in
pop
popf
fnstsw
push
mov
pop
ret
dec
mov
pusha
mov
cs
push
jge
in
mov
xor
psrlq
leave
cltd
fdivrl
xchg
add
or
adc
cltd
aaa
fwait
adc
pop
sub
xor
push
push
fisubrl
add
push
dec
or
dec
dec
xchg
stos
pop
mov
mov
xchg
mov
or
sbb
fs
dec
xlat
dec
and
ret
jb
jo
je
sarl
mov
fwait
lea
aad
ljmp
lcall
lret
mov
xor
cmpsl
adc
push
jno
mov
jecxz
cltd
sarl
pushf
je
jae
ror
xchg
mov
dec
data16
xchg
cs
add
stos
cmp
insb
dec
push
or
push
lret
lret
jbe
sbb
jnp
xchg
xchg
stos
sti
call
cmp
sbb
lret
movsb
loopne
adc
std
cmpsb
mov
sub
xchg
cltd
mov
int
fwait
xor
aad
jmp
fsubp
ud1
pop
and
cmp
or
lcall
mov
sbb
mov
and
ja
dec
mov
push
lahf
mov
xchg
clc
pop
imul
pop
add
dec
ss
js
shl
lds
mov
dec
and
pop
xor
mov
mov
or
xchg
out
in
in
cmp
loopne
insb
mov
jns
dec
lret
adc
push
dec
mov
push
sbb
and
or
movsl
out
xchg
les
jmp
cmpsl
dec
adc
mov
loope
adc
stos
sub
mov
ljmp
cmp
push
leave
adc
es
dec
lret
movsl
and
add
cmc
add
cmp
sub
cmp
pop
gs
xor
xlat
cmpsl
mov
xlat
jns
cmp
fidivrl
jl
dec
cmp
in
imul
cltd
jae
je
arpl
mov
repz
icebp
sub
pop
pop
sbb
ljmp
addr16
sahf
div
add
fcomps
cmpsl
repnz
or
pushf
test
xor
fwait
jno
loope
pop
inc
loop
mov
bound
in
ljmp
hlt
stc
aas
pop
pop
test
popf
xor
jb
pop
dec
sahf
jmp
in
test
mov
cmp
pop
inc
jo
fidivl
cs
in
add
dec
dec
adc
scas
dec
add
mov
lds
fisttps
int3
rol
jns
lahf
dec
adc
push
mov
sub
imul
adc
sti
sub
and
aaa
cmp
cmp
outsl
push
push
fcmovbe
xor
rcrl
scas
adc
push
xchg
out
in
adc
adc
dec
add
pop
adcl
xchg
dec
pop
adc
bound
stos
int
je
fs
xchg
mov
daa
xor
jp
mov
movsl
lret
pop
ja
mov
mov
fs
pop
mov
iret
pop
adc
sbb
and
inc
iret
lods
mov
or
aam
xchg
mov
or
addr16
test
daa
aam
mov
mov
cmp
xchg
pop
loop
sbb
mov
mov
sbbb
push
dec
push
testb
push
test
mov
mov
add
jns
sub
xor
and
gs
outsb
xor
imul
mov
pushf
sub
out
popa
dec
mov
xor
sbb
fidivl
xchg
adc
mov
xor
inc
clc
hlt
mov
mov
sub
jnp
nop
jmp
mov
mov
ljmp
mov
in
scas
push
inc
mov
push
pop
inc
mov
push
lds
push
arpl
xor
pop
push
pusha
sbb
jmp
subl
inc
mov
mov
aas
test
cld
popf
out
imul
cmp
adc
data16
adc
jne
std
inc
test
sarl
push
rcr
add
push
pusha
add
dec
xlat
sub
adc
ds
mov
daa
cmp
cmpsb
lea
mov
rol
push
in
adc
push
sbb
les
inc
xchg
mov
cmp
test
ss
cmp
pusha
hlt
fs
pop
xchg
clc
xchg
pop
cli
cld
cmpsl
ror
adc
add
mov
mov
pushf
sub
nop
push
clc
mov
pop
insb
subl
jp
popa
xchg
jl
mov
lods
xchg
cmc
mov
lock
push
push
mov
icebp
hlt
fldenv
inc
dec
out
cwtl
inc
sub
int3
arpl
scas
mov
cmp
sub
and
mov
movsl
mov
scas
push
mov
inc
push
outsl
mov
jnp
das
jno
pop
outsl
cs
hlt
jg
out
popa
jmp
and
sbb
cmp
xlat
jp
push
sbb
inc
inc
mov
shll
mov
lret
pop
lods
ja
lods
jp
jle
subb
jns
pop
pop
add
jle
fdiv
sub
mov
xchg
adc
aaa
xchg
adc
int
mov
push
stos
das
fistl
mov
imul
loopnew
xchg
jl
add
or
les
popa
and
jo
add
or
and
push
aas
ret
jo
pop
xchg
test
aaa
je
adc
xor
or
pop
inc
mov
xlat
movsb
and
imul
cmp
xor
mov
push
mov
ret
push
push
sub
jp
mov
add
test
nop
iret
rorl
aad
push
pop
repnz
lds
insl
adc
cmpb
sbb
and
adc
lock
stos
lds
mov
iret
push
push
jb
mov
dec
addr16
shlb
out
jecxz
out
push
andl
test
sub
lea
outsb
xlat
push
enter
adc
mov
imul
sub
pop
and
cmc
dec
jo
add
pop
sub
cld
mov
lea
insb
cmpsl
rclb
and
fstpl
testl
in
hlt
inc
rol
ret
lock
cmc
cld
ss
scas
sub
loop
pop
lret
icebp
loop
inc
stos
jmp
cwtl
xor
xor
clc
les
xchg
movsb
insl
xor
ficoms
inc
aas
test
dec
jge
pushf
xlat
adc
pop
sbb
loop
or
mov
mov
insb
or
cwtl
cmp
xor
sti
mov
jne
mov
pop
add
pop
jl
fcomi
int
nop
xor
dec
in
mov
bound
xchg
push
fsubs
add
mov
xchg
lahf
iret
lods
mov
mov
inc
jle
rorb
outsl
xchg
pop
stos
movsl
stos
out
push
dec
add
scas
outsl
fcmove
scas
enter
mov
inc
xorb
sarl
jmp
xchg
mov
arpl
int
in
and
lds
dec
push
push
loop
movsl
xor
sub
add
dec
inc
flds
jbe
push
or
sbbb
sbb
mov
add
movsb
mov
repz
fmuls
xor
pop
pop
sbb
movsb
js
bound
scas
jne
jo
adc
in
mov
js
mov
cmp
in
cmpsl
test
jb
add
les
jl
outsb
mov
fsubl
mov
sub
lcall
push
jp
rclb
jge
lret
sti
testb
cli
enter
sbb
adc
clc
mov
inc
aaa
sahf
stos
popa
xor
addr16
xchg
cmp
push
jg
fimull
js
cmc
xor
outsl
movsl
mov
out
mov
sub
inc
mov
fnstcw
jecxz
std
popf
mov
jp
sbb
sub
adc
sti
stc
addb
cwtl
pop
lcall
repz
push
mov
aam
xchg
data16
andb
mov
mov
mov
or
loopne
aas
inc
enter
mov
sbbl
cmp
jno
push
call
mov
popa
cmc
popf
stc
test
imul
adc
add
scas
lock
xchg
mov
fstpt
fs
push
inc
js
dec
lock
pop
bnd
sbb
and
mov
pusha
mov
dec
stc
mov
jae
sbb
aaa
mov
push
repnz
cmp
loopne
jmp
push
aad
aas
xchg
add
adc
xorb
je
repnz
mov
mov
fcompl
cmp
arpl
push
jp
shl
push
andb
ja
dec
in
rcr
inc
popa
mov
in
xchg
fisubrs
leave
sbb
imul
aam
js
mov
mov
or
addr16
fisttps
push
fs
iret
mov
in
cmc
or
aaa
xor
xchg
or
aad
jl
dec
insl
cld
lcall
sub
mov
mov
mov
xchg
std
addr16
xor
mov
and
int3
imull
sbb
mov
xchg
out
repnz
add
ds
pop
jb
test
push
outsl
xchg
leave
push
sbb
jae
pop
mov
adc
and
sbb
je
je
pop
xor
cmp
and
mov
dec
mov
fnstcw
xor
dec
xlat
mov
jae
mov
adc
xchg
fs
mov
ror
mov
jl
call
repnz
data16
mov
cmpb
jbe
mov
fisubrs
in
stc
dec
adc
sub
cmp
fwait
inc
lahf
xchg
loop
inc
das
push
cmp
pop
xchg
cltd
pop
xchg
add
scas
mov
cmpsl
xchg
dec
out
mov
popa
sbb
mov
push
fimuls
mov
test
add
push
push
and
push
xor
dec
int
mov
jnp
mov
pusha
ds
jecxz
sub
mov
add
mov
add
dec
incb
scas
pop
adc
fwait
push
or
arpl
in
imul
rorb
cmp
cmp
inc
add
jae
fldenv
das
jo
adc
in
sbb
sete
icebp
mov
in
jmp
pop
mov
adc
or
xchg
push
popf
and
pop
test
xchg
push
lahf
loopne
and
movsl
pop
and
cmpsl
sbb
or
xor
pop
or
lcall
stos
mov
push
rcrb
enter
mov
cmpsl
test
test
or
xor
lahf
ret
hlt
mov
and
sbb
xor
ds
mov
mov
ret
data16
dec
mov
or
jno
cmc
popa
iret
icebp
outsl
xor
inc
mov
cmpsb
xor
sub
push
jb
xor
pop
sub
xor
in
cmp
outsb
pop
ja
push
sbb
or
stos
cmpsb
dec
pushl
fstpt
sub
fisttpll
test
mov
clc
out
lahf
mov
jo
fdivl
jp
adc
cli
add
adc
add
add
dec
xor
lcall
jl
mov
xchg
push
mov
push
ja
cwtl
fbld
popa
xchg
or
fldcw
psubd
iret
scas
mov
cwtl
mov
lods
cli
arpl
pop
jb,pt
jl
xor
jns
cmp
mov
pop
test
sub
add
fnsave
xor
imul
and
mov
lock
jne
mov
push
out
ds
or
inc
jl
dec
ret
mov
addl
xorl
adc
out
sbb
inc
xor
dec
arpl
inc
jno
push
loope
insl
mov
pushf
fcmovnbe
pop
inc
inc
pushf
dec
lock
enter
push
push
pop
lea
movsb
push
dec
or
int
ss
scas
xor
jecxz
or
sub
xchg
incl
ror
sahf
mov
sub
ds
cmp
mov
and
mov
add
adc
andl
out
mov
movsl
xchg
xor
jecxz
test
hlt
dec
cmpb
addr16
jns
mov
mov
fidivrs
xchg
lods
mov
lret
lcall
data16
xor
pop
mov
lock
js
xchg
or
jno
cmp
xor
xor
xchg
jnp
lret
pop
repz
mov
inc
cmp
pop
xor
xor
sarl
cwtl
adc
add
cmp
mov
dec
add
movsb
jp
xchg
scas
or
push
push
mov
cltd
mov
movsb
add
test
mov
mov
xlat
dec
in
cltd
cmp
inc
adc
aad
in
inc
sbb
in
or
jle
jle
mov
aad
pop
or
mov
add
orl
pop
or
mov
lods
pusha
jg
dec
add
inc
je
jnp
inc
xor
test
lods
xor
pop
cltd
jl
sub
subb
lods
es
sbb
addr16
out
jne
rclb
addr16
ficoml
push
adc
dec
pop
sbb
cmpb
shll
cmp
inc
rorb
fiadds
sarb
mov
pushf
adc
mov
xchg
fldt
mov
in
push
insl
sub
push
movsl
insl
popf
aas
fwait
xchg
inc
mov
fiaddl
mov
in
xor
xchg
ret
mov
div
inc
push
mov
inc
jb
or
pop
mov
cli
aam
sub
jns
mov
js
cld
xchg
cmp
nop
testb
jmp
xchg
icebp
arpl
pop
ret
inc
mov
insl
cmp
aaa
aas
push
data16
cwtl
dec
jge
inc
and
adc
mov
gs
cmp
push
jmp
insl
movsl
orb
fs
xor
inc
sub
aaa
inc
test
fisubs
cli
jbe
imul
sub
xchg
cwtl
sahf
stos
sbb
mov
test
bound
and
mov
mov
pop
cmc
and
xchg
jnp
and
mov
out
mov
dec
lret
cmp
mov
fucomip
push
movsl
andb
notl
or
pop
cmc
mov
movsl
and
xbegin
add
push
dec
mov
push
jbe
bound
incb
sub
xor
clc
jmp
ror
ret
addr16
sahf
stos
add
mov
or
sbb
ds
jg
in
lcall
push
frstor
inc
xchg
cli
mov
lods
push
cli
push
jmp
jl
sub
add
pop
or
xchg
cmp
mov
push
sbb
fucomip
lret
mov
gs
cmp
xor
dec
enter
inc
mov
ljmp
pop
iret
into
or
call
fnstenv
cmp
jge
movb
lock
int3
inc
push
xor
fmuls
mov
push
sbb
or
sbb
fists
mov
rcr
je
das
mov
aaa
adc
popf
xchg
in
jns
test
dec
inc
je
out
fstl
out
test
insb
js
add
pop
sub
out
dec
mov
pop
mov
and
add
ret
gs
mov
add
int3
push
pop
fcom
xchg
mov
or
push
pop
add
xchg
pop
fstl
mov
cmpsl
incb
jg
sub
mov
enter
outsb
movsb
sbb
decl
movsl
pushf
push
inc
pop
jnp
fcoms
cmpsl
call
sti
addr16
cs
rorl
xor
xchg
mov
in
cs
das
test
punpckhbw
adc
out
mov
jmp
into
push
push
inc
daa
dec
lds
mull
insl
pop
out
sbbl
mov
add
xor
push
cmp
test
or
fsubl
mov
pop
ja
adc
pop
ljmp
imul
pusha
inc
iret
xchg
mov
cmp
dec
insl
bound
pop
push
mov
in
addb
dec
hlt
js
js
aas
gs
jecxz
addl
dec
addr16
inc
int
fcmovb
sub
aas
xchg
movsb
outsb
sahf
mov
repz
aas
and
pop
into
mov
in
xor
mov
and
lods
ss
repz
cmp
aam
jae
or
repz
sarl
add
call
cltd
push
xor
pshufw
scas
sbbl
push
and
mov
pusha
xlat
sub
fwait
js
mov
idivl
test
push
aas
adc
div
push
inc
and
cmp
sub
cmp
jg
push
push
ljmp
int3
loop
dec
xchg
movswl
aad
pop
stc
xchg
rolb
call
adc
or
pop
and
out
add
xlat
data16
out
adc
outsb
stc
fs
sti
jg
fldl
icebp
dec
dec
pop
vmread
repz
pop
cmp
test
lds
test
jae
pushf
xchg
addr16
cmp
fistpll
inc
in
pushf
movsl
push
enter
lock
or
xor
jmp
enter
mov
lahf
pop
sbb
push
sub
adc
pop
jne
in
pop
int
fsubrp
pushf
sub
inc
aam
pop
xchg
adc
xor
jbe
mov
jl
lea
inc
cmp
je
outsb
xchg
dec
pop
mov
xchg
push
adc
adc
mov
sub
mov
add
lods
xor
xor
mov
hlt
loopne
cmp
push
mov
sub
sbb
ljmp
sub
rolb
ds
stos
jmp
mov
pushf
fisubrl
or
dec
add
jge
mov
mov
cmc
push
test
adc
cmp
adcb
and
sub
sbb
filds
pop
jne
cmpsb
dec
mov
cli
test
cmc
mov
in
inc
imul
sbb
mov
xchg
xlat
lea
xor
in
jmp
stc
in
jecxz
cmpsb
mov
je
ds
xor
xchg
push
pop
mov
dec
jl
add
pop
pop
pop
sbb
scas
hlt
xchg
push
outsb
push
sbb
xchg
repnz
jecxz
lods
dec
pop
mov
mov
dec
dec
in
cwtl
pop
and
mov
xor
inc
pop
push
testl
cwtl
jp
push
inc
push
out
mov
pop
out
lods
outsl
in
add
add
adc
or
push
xchg
dec
pop
in
xchg
jl
and
mov
xchg
ficoms
out
outsb
xor
in
or
xchg
dec
jge
xor
dec
xchg
pop
aad
mov
jg
stc
mov
pop
mov
outsb
xorl
std
jne
mov
out
cltd
jge
sbb
icebp
mov
sub
faddp
imul
lods
xchg
adc
testl
jp
loope
inc
pop
xchg
aas
hlt
aam
or
rclb
jne
inc
dec
lods
fnsave
adc
adc
inc
sbb
dec
jo
cmp
sti
mov
push
subl
iret
or
add
cmc
mov
pop
xchg
xchg
in
mov
pop
mov
adc
sub
iret
mov
cmp
pop
mov
cld
ljmp
jg
push
push
pushl
idivl
cmp
loopne
lahf
movsb
mov
aaa
enter
pop
outsl
cmp
mov
test
adc
in
flds
shrb
jo
cwtl
xchg
xchg
dec
js
idivb
shlb
movsb
lret
cmc
xchg
bound
jge
jbe
push
add
and
sbb
movsl
icebp
fdivr
jns
cmp
xchg
sbb
mov
xor
popf
add
cmpsb
mov
movl
or
js
faddl
pushf
lds
xchg
add
mov
add
cmp
push
lea
xchg
ja
adc
out
push
roll
lahf
cmpsb
je
sub
test
pop
cmp
rolb
dec
dec
pop
aaa
out
mov
lods
push
push
fldenv
outsl
sti
push
fcomp
sub
jno
shr
ret
dec
ja
icebp
mov
mov
lret
xchg
push
cwtl
add
dec
jno
add
out
ja
adc
or
xor
jnp
pushf
jle
daa
ret
inc
nop
push
divl
pop
mov
push
jle
ss
xchg
or
sbb
stos
and
mov
xchg
ror
daa
and
xchg
repz
fwait
lret
push
pop
cltd
daa
dec
jle
mov
incl
xor
repz
mov
outsb
fmuls
lods
stos
adc
dec
das
jmp
cmpl
into
cmc
cmp
fwait
addb
adc
stc
lods
es
shl
pop
loop
dec
mov
sbbl
sti
add
sbb
cwtl
sbb
aad
mov
and
aam
jl
aas
mov
jb
aam
cmp
rolb
aas
shll
out
loope
bound
fwait
mov
jae
mov
arpl
dec
or
dec
and
icebp
sbbb
hlt
push
aaa
pop
add
mov
and
inc
fstpt
jo
ret
adc
popa
ret
pop
xor
jno
in
xchg
xor
out
xor
inc
gs
in
xchg
aas
loope
addr16
mov
mov
rcll
ds
mov
push
mov
lret
jno
mov
adc
mov
cld
mov
fs
sbb
add
repz
mov
lret
push
gs
push
xlat
or
pop
xor
xchg
aam
sub
orb
or
push
adc
loop
mov
push
jge
test
adc
in
jb
mov
push
and
shll
xchg
imul
pushf
add
cmp
xchg
sbb
cli
push
sti
jb
fidivrl
push
pop
shrb
add
jnp
dec
mov
sbb
shl
inc
xchg
inc
push
jne
lods
and
data16
pop
dec
fldenv
out
fmuls
or
lcall
loope
mov
sbb
in
add
jmp
iret
aas
dec
dec
fwait
sbb
push
out
xor
push
and
ljmp
fstl
push
push
mov
mov
fdivrs
daa
jge
add
cmpl
aas
leave
cmp
popf
dec
pop
mov
movsl
ja
je
or
std
mov
aas
cmp
xor
fs
lods
sbb
ficomps
mov
pop
and
cmp
lea
in
popa
jg
aas
push
arpl
jg
icebp
orl
or
imul
pop
push
pop
xlat
jle
mov
or
inc
jno
cmpsb
das
ret
je
mov
push
lcall
test
add
fildl
mov
lock
popa
addb
outsb
add
dec
pop
cmpsl
push
fs
inc
mov
push
out
dec
sub
jl
xchg
jo
pop
add
sub
aas
sub
sub
or
cmp
mov
add
test
test
fwait
or
add
sbb
sbb
js
fcoms
jnp
cmp
xchg
das
test
into
or
and
xor
lea
mov
out
movsl
dec
jle
pop
push
sub
or
aam
insb
or
insb
xor
aam
rcr
push
sub
mov
or
xorl
dec
hlt
pop
stos
testl
add
pop
or
jmp
push
aas
jecxz
cmp
hlt
push
inc
inc
pop
mov
cmp
pop
and
jmp
xlat
pop
aaa
fildll
mov
fwait
mov
lret
jbe
out
xor
std
adc
out
sbb
push
xchg
ss
push
fdivrs
popf
out
lea
jecxz
pop
or
and
xor
cwtl
push
out
mov
out
jae
testl
add
rcll
por
push
push
bound
mov
sbb
daa
sarl
xor
or
clc
repz
xor
adc
aad
mov
and
pusha
testw
idiv
loopne
pop
mov
hlt
into
dec
ret
shlb
inc
loope
adc
arpl
mov
mov
cmpsb
fwait
scas
sahf
mov
adc
mov
xchg
add
push
nop
clc
mov
aam
sbb
out
inc
sbb
push
mov
js
subb
repnz
mov
mov
push
repnz
cltd
cmc
inc
and
hlt
inc
inc
jo
inc
popl
bound
sub
dec
sbbb
cltd
enter
dec
sbb
shll
mov
push
testl
mov
sbb
mov
jb
rorb
clc
sbb
mov
pop
xchg
mov
xor
outsl
mov
fwait
mov
add
and
mov
dec
leave
add
addl
jae
pop
inc
cli
outsl
push
imul
iret
mov
nop
adc
pop
xchg
add
pop
js
popf
cmp
sub
jmp
pushf
and
in
sbb
aad
fcmovnbe
mov
lock
mov
sbb
into
or
mov
mov
inc
loop
or
push
es
add
cmp
orl
lods
mov
mov
pop
lahf
xchg
nop
xor
sub
popa
subb
cmp
addr16
inc
mov
fadds
icebp
sub
add
pop
adc
jns
into
clc
das
test
test
adc
jmp
adc
mov
mov
or
cltd
mov
out
cmp
outsb
aaa
jl
jne
jns
imul
dec
dec
add
cwtl
inc
jnp
rcrb
les
fdivrp
sahf
pop
out
call
sub
jo
jno
and
and
sub
pop
sub
test
jne
aad
or
and
sub
addb
or
in
push
sub
lds
cmp
jp
sub
or
push
sub
icebp
and
sti
das
imul
jg
mov
xchg
push
bound
mov
xchg
ljmp
stc
push
xchg
cwtl
scas
sahf
lods
xlat
js
mov
les
mov
ja
sbb
loop
sahf
xchg
sub
dec
loopne
mov
dec
arpl
jmp
ret
xchg
test
sub
mov
testb
int3
aaa
and
mov
add
or
xor
addr16
outsl
xchg
es
inc
ret
push
pop
add
testl
dec
sbb
pop
or
pop
adc
or
push
cmp
repz
adc
jg
out
cltd
scas
inc
sbb
je
std
adc
add
mov
in
and
jmp
insl
inc
mov
push
daa
and
xchg
push
lea
mov
aam
pop
mov
jb
jnp
pop
andb
repz
xor
or
dec
push
mov
rcll
addr16
aam
int3
in
jnp
testl
mov
mov
xchg
inc
arpl
mov
lret
addb
movsl
lcall
mov
sub
adc
fbstp
orl
xor
icebp
test
adc
xchg
ljmp
shlb
movsl
les
mov
xchg
filds
cmp
mov
lods
pop
cmpsb
adc
jbe
sub
push
inc
push
or
inc
adcl
cmc
gs
cmp
das
dec
and
cmp
inc
jle
js
movsl
push
push
sub
addr16
mov
sbb
mov
test
inc
jo
inc
cmp
dec
outsb
jns
repnz
scas
mov
iret
stc
mov
icebp
fsub
add
pop
jg
push
outsb
inc
sti
or
outsl
pop
push
mov
outsl
repnz
sbb
pop
mov
dec
mov
mov
mov
xchg
std
arpl
jge
xchg
cs
xor
jmp
xchg
or
adc
fsubs
push
aam
add
pop
cmp
push
sbb
cmp
or
xchg
outsl
rorl
add
outsb
sbb
ret
xchg
push
mov
jl
stc
mov
bnd
and
and
test
rcll
sti
pop
lahf
mov
jmp
fwait
mov
jne
pop
and
ret
push
fs
pop
and
sahf
dec
fwait
or
fwait
sub
sti
insl
loop
mov
aam
xor
mov
mov
out
test
pop
lret
mov
cmpsl
mov
bound
bound
and
and
inc
jp
movsl
fbld
dec
adc
setl
adc
xor
xchg
ret
repz
fidivrl
add
or
lea
xor
shl
daa
cld
gs
dec
push
lret
in
inc
std
xchg
es
lods
insb
jge
push
test
shll
mov
cpuid
fwait
pop
jne
xor
inc
popf
pop
pop
adc
jmpw
mov
into
ss
cwtl
pop
arpl
int
add
push
push
loop
lret
mov
imul
push
mov
loopne
mov
ret
je
mov
push
in
add
inc
pop
adc
push
cld
add
xchg
xor
cwtl
jg
pusha
idivb
pusha
dec
push
lods
test
mov
ljmp
xchg
repnz
ja
aas
into
mov
fildll
xchg
sub
out
xor
das
or
xor
push
mov
testl
lret
mov
pop
jae
cmc
adc
add
mov
repnz
mov
rcr
mov
adc
dec
addl
sbb
mov
adc
dec
mov
mov
and
insb
inc
fistpl
dec
xor
mov
jno
ljmp
dec
out
gs
jg
inc
aas
jae
xchg
fiadds
jne
adc
fldcw
bound
or
mov
dec
sbb
xor
jge
xor
aad
cld
pop
dec
ljmp
dec
add
pop
lcall
in
fs
pop
out
inc
dec
int
jg
add
jbe
test
cmpb
inc
push
push
rcr
mov
nop
or
cmp
sbb
mov
xor
nop
adc
insb
push
je
pop
out
int
fcomps
sub
mov
xchg
mov
add
inc
repnz
pop
sti
and
jmp
adc
mov
int3
stos
xchg
adc
fcomps
pop
fisubrs
xor
inc
and
adc
shl
iret
shrb
cs
popa
and
xchg
fwait
cmp
fwait
cld
push
lret
jns
idivb
enter
out
fwait
or
decl
clc
pushl
adc
sbb
jne
adc
cmpsl
shl
pop
push
push
mov
fadd
in
in
fwait
cmp
xchg
xlat
xor
add
xor
repz
test
les
insb
xchg
dec
je
fcom
lret
pop
push
ret
dec
jbe
pop
mov
jnp
std
test
sbb
lcall
inc
sbb
mov
mov
xchg
fnstenv
inc
pop
mov
cmp
rcrb
dec
sub
adc
ljmp
adc
ret
xchg
std
inc
cwtl
sub
loopne
dec
jo
push
mov
mov
std
add
dec
mulb
daa
and
inc
mov
mov
dec
lds
call
dec
add
sbbl
fwait
in
jmp
sahf
aas
out
enter
cs
cmp
mov
mov
push
out
mov
adc
mov
outsl
mov
mov
test
add
add
sub
pop
stc
adc
cltd
bnd
mov
jne
lret
mov
adc
push
or
xchg
jae
sahf
jbe
mov
mov
ja
mov
push
xor
lcall
mov
cmp
mov
dec
shl
jae
xchg
add
dec
lds
push
leave
adc
lahf
pop
mov
lea
jbe
push
push
mov
fnstcw
std
mov
sahf
lret
jno
and
iret
test
icebp
sub
cmovbe
popw
push
movsb
or
in
sub
sbb
stos
push
push
ss
cmp
dec
mov
dec
in
mov
inc
lahf
xchg
pop
sahf
aas
dec
dec
mov
js
or
sar
push
sbb
fsub
xchg
loopne
int
jmp
xchg
lds
push
imul
cmp
inc
dec
ret
ja
or
push
push
pusha
dec
add
pop
mov
loop
sub
rolb
std
adcb
dec
push
dec
stos
fmuls
sbb
xchg
mov
imul
dec
mov
les
pop
je
xchg
ret
push
or
jl
xchg
mov
lahf
int3
cld
sbb
je
push
enter
es
lret
mov
insl
inc
rcrl
sbb
fldcw
fs
mov
jl
jp
add
ret
pop
shld
leave
cwtl
sub
pop
jae
nop
xor
inc
sub
jge
or
mov
jg
mov
add
add
stc
jp
lcall
mov
fidivrl
add
xchg
scas
test
dec
push
into
pop
out
ja
mov
jb
mov
mov
popf
xor
fadd
fimull
pop
test
out
pop
adc
push
pusha
and
insb
lods
mov
mov
xlat
fxam
mov
cltd
xchg
and
xor
mov
mov
jge
pop
pop
cwtl
ds
pop
mov
sub
in
push
push
sbb
rcll
lret
repz
add
add
inc
mov
sub
mov
mov
dec
mov
inc
cwtl
fbstp
adc
xchg
scas
add
mov
mov
bound
cmp
sbb
sahf
fdivrl
insl
pop
push
test
xchg
mov
jnp
jecxz
addr16
fcompl
dec
and
jecxz
frstor
cmpsl
fcomp
or
adc
jno
inc
push
inc
xor
push
xorb
mov
cli
xchg
fldt
jl
cwtl
xlat
in
mov
bound
sub
mov
add
loope
mov
mov
arpl
mov
in
je
ja
sub
mov
xchg
ss
ss
mov
push
ds
shlb
rcll
mov
cmp
in
adc
clc
rcl
xchg
movsb
push
inc
push
inc
aaa
icebp
fmuls
push
adc
test
in
fs
mov
std
jo
jno
out
cmp
scas
xchg
jno
shr
fisubl
stos
roll
sahf
ljmp
arpl
shlb
out
push
gs
imul
sbb
and
ret
jecxz
mov
out
xchg
addb
and
pop
mov
cmp
sub
pop
pop
cmp
out
data16
out
mov
mov
dec
ficoms
lahf
push
iret
sub
lret
cmp
out
sub
push
call
es
adc
sub
dec
imul
aaa
dec
or
flds
jae
repnz
xchg
inc
cmp
jge
loop
mov
and
jmp
push
jae
imulb
push
and
jbe
cmp
fnsave
das
jb
push
incb
add
lea
clc
cltd
in
jb
pop
ret
aad
es
cmc
jmp
icebp
fisubl
xchg
xor
or
adc
icebp
push
jae
and
adc
jmp
and
sbb
pop
xchg
or
fbstp
outsl
mov
test
ja
add
clc
cs
cli
pop
inc
and
jg
push
leave
ficoms
daa
sbb
scas
cmp
repnz
jecxz
mov
mov
cmp
outsl
mov
cmp
fwait
push
mov
jb
lds
xchg
idivb
aam
mov
shrl
jp
int3
aam
maskmovq
jge
stos
pop
lret
dec
gs
or
cmp
das
sub
aaa
cmpsl
push
add
ds
daa
xchg
enter
lds
fistps
mov
jns
jns
movb
orb
dec
cs
addr16
sbb
mov
sbb
jl
mov
pop
aaa
dec
enter
cltd
pusha
lret
scas
and
mov
mov
pusha
fildll
movsl
xor
xchg
std
push
push
repnz
and
es
xchg
test
sbb
mov
sbb
repz
loope
cltd
loope
or
insb
bound
dec
jno
inc
cld
mov
jmp
loope
fsubrl
std
lds
pop
xor
mov
cli
push
test
loop
jecxz
xor
sti
dec
lret
incb
add
ljmp
and
incl
mov
fcoml
and
mov
loopne
and
pop
jge
pusha
pop
push
sbb
inc
cmp
fiadds
adc
sahf
frstor
insl
ds
xchg
mov
jge
push
add
scas
fsubs
xlat
adc
add
lcall
mov
ljmp
add
das
sbbl
xor
and
push
fcoms
in
mov
arpl
mov
xor
sub
lcall
out
ds
jb
xor
out
out
jno
push
pop
inc
test
push
jae
sbb
xchg
mov
icebp
imul
and
sbb
push
lds
cmpsl
add
cmp
sbb
popf
daa
mov
outsl
jbe
cltd
pushf
jle
jge
sub
les
int3
xchg
cld
dec
popa
and
xchg
add
mov
cmp
inc
bound
scas
inc
jecxz
mov
imul
ficoms
and
pop
jmp
pop
cmp
dec
fwait
lods
inc
jmp
cmp
xchg
jne
mov
cmp
popa
in
cmp
lcall
push
inc
test
jecxz
cltd
scas
cmc
adc
or
pop
push
fld
jo
outsb
jne
lret
or
cmpsl
out
lret
cmpsb
jmp
cmp
mov
xchg
loope
cmc
xor
xchg
mov
sub
test
cld
and
or
sbb
lcall
dec
in
lea
insb
cli
jmp
mov
pop
adc
mov
fwait
and
mov
pop
test
inc
xor
in
out
dec
sub
enter
test
push
push
add
xor
dec
push
addb
imul
in
cmp
mov
lock
dec
push
xchg
fucom
pushf
ficomps
add
icebp
xchg
int
xchg
shlb
pop
or
xor
lods
test
inc
jo
or
ret
add
clc
hlt
jbe
in
mov
and
ds
lods
jns
pusha
rorl
mov
cmpsl
leave
fistpl
mov
sub
pop
add
icebp
mov
mov
and
shll
ljmp
cmpsb
push
push
aad
fisubl
out
mov
mov
into
jle
xchg
mov
sub
mov
push
into
les
add
ret
mov
dec
inc
shrb
test
push
jge
ds
lea
pop
cmp
shlb
inc
sub
dec
sub
loopne
pop
add
mov
and
pop
push
push
dec
movl
lcall
test
cwtl
mov
fldl
cmp
cmp
dec
es
popl
es
xchg
loope
xchg
call
popf
lahf
arpl
leave
mov
push
mov
cmpsb
lods
adc
adc
shlb
cltd
iret
divl
mov
push
test
xor
lods
pop
pop
mov
or
pop
mov
mov
lret
lock
push
fnsave
add
arpl
mov
pop
lock
pop
sub
daa
sub
lcall
push
lds
int
sub
idivl
xchg
inc
mov
arpl
jns
sti
lods
popf
gs
decl
inc
hlt
call
ds
not
mov
aas
dec
lods
mov
out
mov
push
sar
xchg
xchg
cltd
fcmovnb
xorl
cmp
push
cmpsl
lods
sbb
jle
or
lock
inc
into
movsb
push
sbb
test
xor
mov
lret
int3
fildll
ficomps
mov
mov
xor
mov
xchg
mov
jnp
or
inc
ret
gs
cmc
mov
outsl
insl
jmp
aaa
or
cmp
add
sbb
bound
cltd
pop
dec
out
sbb
rcrl
sbb
fisttpll
push
out
jge
aad
sub
test
dec
pusha
repnz
jns
dec
dec
jnp
jmp
cmpb
jge
daa
or
mov
aam
adc
clc
aaa
leave
mov
rol
enter
pop
mov
xor
pop
rcll
and
inc
orl
xchg
or
jmp
pop
sbbl
cmpb
dec
je
rcrl
outsb
add
sub
push
sbb
int
inc
mov
fsubrs
cmpsl
mov
fwait
and
cmp
pop
in
aam
dec
push
dec
stos
jo
push
bound
ljmp
pop
add
fwait
cli
in
fmulp
ljmp
bound
sbb
sbbl
pop
mov
sbb
test
adc
orb
pop
icebp
rcll
loopne
xchg
adc
orl
xor
mov
push
mov
mov
out
push
test
lock
pop
dec
add
cmp
jbe
mov
fwait
insl
test
push
mov
out
mov
jno
mov
sub
inc
aas
xor
xlat
and
rorl
xchg
xor
sbb
or
insb
sub
adc
adc
jne
push
sbb
rorb
es
subl
mov
pop
in
fxch
or
stos
mov
push
fistpll
push
stos
jno
cmp
outsb
mov
ljmp
mov
scas
push
pop
inc
inc
filds
fbld
loop
mov
mov
cli
aas
or
sub
shll
inc
fisubl
out
mov
pop
sub
sti
fucom
jne
int
mov
push
cwtl
pusha
fistpll
push
jne
mov
xor
push
ret
xor
out
jl
push
jbe
sahf
add
loop
cmpsl
adc
pusha
xor
cwtl
jb
sub
xchg
std
sarl
loope
mov
stos
insl
and
mov
bound
jbe
mov
xchg
pop
xchg
push
pop
movsb
push
and
or
adc
cmp
cmp
xor
xchg
pop
jbe
neg
xor
and
cltd
lods
in
call
pop
addr16
repnz
inc
or
bnd
out
add
addr16
xlat
hlt
sbbb
jnp
popa
sbb
mov
cmp
cmp
xchg
rol
sbb
mov
or
xchg
and
or
push
xchg
and
mov
cmp
psubsb
xor
mov
out
mov
pop
nop
mov
mov
mov
jge
in
loope
sub
push
lods
mov
loope
insb
cmc
mov
cs
cmc
bound
std
or
sub
int
sub
jecxz
jbe
insl
push
bound
sub
fildl
and
data16
mov
loop
add
sbb
mov
js
mov
addr16
dec
add
pop
lcall
push
mov
or
adc
aaa
mov
pop
inc
out
pop
xor
inc
push
push
das
repz
mov
call
idiv
rcl
mov
dec
pop
fdivrl
fnstsw
mov
mov
das
mov
lahf
stos
add
sub
cmp
cmpsb
sahf
adc
test
jbe
sbb
fcompl
inc
sbb
lret
cmpsl
fdivrs
rol
mov
insb
mov
rcr
mov
in
or
jne
in
stos
sbb
mov
push
mov
mov
addr16
sahf
inc
pushf
in
pushf
stos
je
sbb
pop
sahf
and
push
mov
pusha
es
ljmp
lahf
repnz
pop
lea
push
mov
repnz
das
outsb
out
mov
or
pop
inc
out
jg
or
das
lcall
je
cld
xorl
aad
pop
or
andb
push
jo
int
inc
pop
into
add
xor
push
test
sbb
xacquire
daa
mov
pop
sbb
arpl
ds
jle
mov
cltd
mov
dec
jb
cld
add
pop
push
push
sbb
mov
outsb
pop
or
sbbl
or
fdivrs
sub
call
popf
lea
mov
out
add
sub
test
call
aad
stos
in
or
call
xchg
arpl
adc
and
jmp
pop
das
lods
mov
out
pop
and
test
mov
sub
pop
ficoms
aad
jp
roll
sbb
arpl
mov
test
jns
sahf
sub
out
cmpsl
jo
outsb
andl
out
loop
and
pop
mov
inc
mov
gs
jns
pop
addr16
pop
mov
inc
stos
dec
loop
and
flds
add
inc
jp
mov
shr
push
sub
in
sbbb
int
pop
in
pusha
mov
push
push
leave
lds
subb
mov
jae
hlt
dec
insl
loope
loopne
dec
insl
scas
sub
call
cmc
push
imull
or
mov
adc
inc
adc
mov
pop
inc
jle
ret
inc
xchg
int3
repz
mov
imul
push
rcr
adc
icebp
cltd
mov
dec
mov
aad
xorb
pop
outsb
jb
dec
mov
out
mov
out
jle
cmpsl
lods
push
pop
inc
jno
movsl
les
sub
aad
lods
lods
dec
int
sbb
clc
push
mov
inc
imull
xor
push
sub
call
call
lea
pop
ljmp
xor
pop
xor
add
and
sahf
cltd
adc
xor
inc
iret
sub
mov
sub
mov
in
inc
fwait
pop
fucom
jo
xor
mov
leave
xor
push
inc
jle
jge
jp
repnz
xor
push
sub
sub
lahf
or
adc
popa
mov
loope
ja
sarl
dec
ss
ss
adc
std
push
arpl
adc
adc
int3
popa
nop
mov
es
xor
fdivl
loopne
out
int3
lahf
push
out
push
push
stos
insb
push
or
jae
mov
or
icebp
sti
jmp
inc
in
sbb
into
movhps
aam
xlat
sub
jbe
lcall
fcmovb
mov
out
xor
pop
mov
or
ret
mov
or
rclb
xchg
sti
mov
inc
imul
and
fdivrl
leave
iret
loop
xchg
cmpsb
mov
dec
ss
fs
repz
mov
fidivrs
leave
cmc
adcb
mov
adc
mov
rorb
pop
mov
repz
adc
pop
push
ds
jmp
sub
xchg
shrb
scas
lods
xchg
rolb
adc
repnz
lahf
jo
lds
dec
sub
stos
int
int3
pop
aas
pop
fcoml
iret
arpl
aas
scas
push
sub
adc
imul
pushf
mov
adc
icebp
mov
jg
mov
dec
stos
mov
sar
dec
cmp
jle
fcmove
jecxz
lods
dec
cmc
sbb
xor
inc
cs
jae
fmul
push
inc
leave
and
jmp
and
loope
sub
loope
out
imul
xor
fsubrl
push
stos
and
lea
sbb
jle
pop
cmp
adc
iret
push
loope
std
add
call
shl
push
fs
and
in
loopne
adc
outsl
ja
mov
xor
pop
xor
push
jo
add
mov
xchg
xor
andl
lods
push
test
popf
ljmp
fs
test
and
stos
xor
sub
push
inc
xchg
fisttps
mov
scas
jns
push
cmp
inc
aas
fbstp
push
cmp
pop
test
jne
nop
xchg
mov
clc
in
add
pop
xchg
ret
inc
adc
adcl
push
sti
das
adc
mov
rclb
push
jae
or
stc
dec
fcompl
mov
push
es
in
mov
and
and
pop
dec
push
jne
fs
lret
cltd
adc
jb
paddq
sbbl
jecxz
shl
jno
aam
dec
es
sub
inc
xchg
inc
dec
adc
mov
inc
mov
cltd
push
jb
cwtl
and
jne
add
jp
mov
inc
imull
xchg
movl
push
sbb
fcoms
mov
mov
aas
aam
mov
push
fcomp
mov
ljmp
lods
fwait
leave
jl
cmpsl
cmp
pop
psubq
adc
das
pop
push
dec
mov
aad
iret
adc
dec
push
in
mov
push
mov
mov
push
in
inc
insb
popa
std
fsubl
int3
out
and
hlt
cmp
test
cmc
jecxz
notl
ja
outsl
out
jl
ss
jnp
ret
jbe
inc
push
and
loopne
les
push
jbe
dec
ja
mov
xlat
xor
scas
loop
inc
in
and
pop
mov
mov
int
fs
pop
or
and
pop
mov
cmp
and
int3
stos
fs
fcoml
outsb
mov
repnz
cmp
ret
or
sbb
sbb
jecxz
jno
jmp
inc
cmc
cltd
clc
out
test
inc
sub
sti
fs
and
xchg
scas
xchg
inc
and
inc
movsb
pop
adc
dec
mov
pushf
gs
dec
jmp
jp
pop
and
mov
int3
mov
mov
repnz
dec
fstpl
xor
pop
push
nop
xchg
mov
mov
cmpsb
push
jg
xor
out
ret
or
fstpl
sbbl
sub
mov
jne
mov
std
mull
push
adc
repz
mov
push
in
subb
stc
orl
xor
das
pushf
add
mov
jb
cmpsl
popf
dec
imul
push
sub
xor
lods
adc
in
push
mov
cmp
dec
mov
sub
inc
jb
xchg
lds
aam
cmp
mov
jmp
jne
and
adc
mov
or
insl
aam
in
aaa
fstps
pusha
cmp
imul
xchg
add
test
jecxz
mov
pop
cmp
pop
adc
leave
lds
xlat
loop
adc
mov
lods
xor
mov
mov
test
fwait
adc
adc
divb
pusha
and
in
aad
stc
popf
pop
cmc
push
les
cmp
les
mov
mov
xchg
lods
pop
cmp
fildl
js
sbb
ss
push
lret
adc
add
add
sub
jne
pop
mov
cmpl
pop
hlt
fnstenv
jnp
pop
arpl
inc
push
repz
jno
pop
xor
js
sub
xchg
in
sbb
sbb
pop
loopne
pop
and
mov
dec
add
sub
scas
cli
xlat
test
mov
mov
js
pop
loope
addl
fs
mov
es
or
in
add
fldcw
or
ss
pusha
nop
jns
mov
mov
pop
aam
insb
push
inc
leave
or
je
mov
mov
test
xchg
mov
repnz
daa
push
movsl
addr16
and
add
cmp
stos
jecxz
pushf
or
ljmp
fwait
cmc
xorl
cmp
dec
push
test
movsl
mov
js
ret
and
divb
xor
addr16
dec
cwtl
or
fwait
ss
cmc
sub
xor
int
cmp
and
xor
adc
pop
or
xchg
mov
xchg
xchg
sub
pop
icebp
cmp
imul
push
lahf
mov
subb
out
pop
cmpsl
jbe
and
adcb
ja
movl
ret
mov
and
inc
data16
es
outsl
fldenv
ret
stos
and
xor
outsl
jb
test
mov
mov
mov
or
cmp
js
push
inc
popa
sbb
and
pop
jecxz
mov
dec
nop
ja
pop
imulb
mov
gs
inc
xchg
aas
mov
mov
inc
aas
nop
jmp
imul
mov
or
shl
sub
ss
aaa
ljmp
mov
jno
jl
jb
sub
pushf
adc
outsb
ret
add
push
clc
mov
mov
xcrypt-ctr
cmpsl
cltd
addb
clc
and
mov
in
mov
mov
jmp
mov
repz
das
sbb
xor
fs
mov
les
lahf
mov
pop
shll
jl
xor
jp
inc
mov
in
rorb
ss
rcrb
aad
or
xor
inc
test
dec
push
cmpl
lea
push
mov
lock
test
pop
or
mov
rorl
leave
mov
xchg
pop
inc
add
cmpsl
out
fcoms
mov
loope
test
mov
sbb
jns
lea
xchg
push
jns
mov
mov
ds
outsb
cwtl
dec
out
ljmp
mov
in
or
daa
mov
and
cmp
mov
dec
leave
enter
bound
arpl
push
cmp
xchg
lods
outsl
add
repz
adc
in
jmp
pop
cmp
pop
repnz
movsl
js
sbb
call
ret
lret
and
sarl
jb
daa
xor
push
xlat
fdivrs
ret
push
mov
pop
push
mov
add
mov
jl
jb
pop
rcrb
mov
cmp
jp
adc
scas
pop
xor
add
xor
aaa
daa
and
adc
adc
jo
push
or
jae
mov
xchg
jne
arpl
js
sub
stos
lret
xchg
xchg
cmpsb
rclb
pop
bound
call
and
and
test
push
jecxz
aas
inc
gs
mov
pop
leave
xchg
subb
sar
je
push
stos
cmpsb
jecxz
jns
cltd
lods
test
inc
fisubl
popa
js
lahf
popf
mov
fwait
repz
icebp
adc
inc
add
mov
jge
sub
jp
jecxz
pushf
mov
pop
dec
add
les
cmpsb
outsb
mov
jl
arpl
adc
test
popa
or
mov
push
into
lods
aam
mov
add
mov
xlat
push
mov
scas
jl
sub
adc
or
mov
leave
or
imul
inc
mov
mov
dec
sub
scas
es
fldl
jle
or
les
ljmp
std
jb
pop
push
mov
jb
repnz
div
ss
loope
cmc
and
jl
or
xor
jge
clc
sub
std
adc
mov
sub
mov
into
addr16
or
mov
js
mov
lds
in
sti
dec
stc
mov
dec
mov
aad
jmp
ret
out
leave
negb
cmc
cmp
dec
push
outsb
cmc
ret
stc
pop
add
sbb
xchg
mov
adc
jae
in
mov
movsb
lret
xchg
outsl
aas
loopne
cmp
repnz
push
add
icebp
sbb
enter
pop
cmpsb
and
inc
push
ret
jno
loop
popa
rcrb
push
cmp
and
sbb
jp
rcrl
iret
mov
dec
push
lods
dec
xchg
jo
int
push
lret
fildll
js
int
shrb
pop
mov
push
js
push
js
cld
lods
xchg
lds
fnstenv
roll
mov
pop
cmp
jno
int3
cwtl
or
jge
add
ds
jb
ficomps
sbb
arpl
push
cmp
push
mov
mov
data16
pop
xchg
pop
cwtl
lods
and
and
aaa
add
jl
xchg
or
insl
imull
out
cmc
sub
adc
jle
clc
sti
pusha
sbb
fistps
lods
imul
icebp
loope
adc
add
pop
push
xchg
in
lods
cmp
rcrb
adc
insl
nop
sahf
mov
loopne
cmp
test
mov
ss
jbe
cmc
mov
inc
mov
pop
rcll
imul
push
dec
add
jmp
mov
mov
jne
sti
xchg
scas
gs
mov
and
sbb
cmp
js
push
jecxz
lods
xor
fisubrl
jnp
shrl
push
push
popf
cs
and
lock
je
loope
push
mov
std
ret
push
mov
daa
cmp
push
out
cmp
aam
iret
add
pop
jl
push
lret
push
push
inc
int3
pop
and
clc
stos
imul
es
clc
push
orl
jmp
or
pop
lods
push
stc
es
and
insl
cltd
cwtl
add
jns
sub
sub
sub
out
lods
movsl
loopne,pt
test
lock
inc
cmpsb
cld
rcr
hlt
and
push
sahf
pop
or
shlb
pop
in
fwait
cmpl
inc
push
mov
mov
inc
inc
jae
jle
cmp
rcrb
mov
leave
jne
push
adc
jle
inc
das
xchg
dec
cmp
or
jnp
sbb
pusha
dec
and
sbb
adc
sbb
scas
nop
cmp
sarb
push
inc
cmpsl
insl
fistl
add
aad
mov
addl
push
add
test
add
push
xchg
clc
imul
inc
lods
xchg
xor
ror
lret
jnp
mov
xchg
cs
bound
mov
loopne
xchg
mov
les
fisttps
mov
xor
dec
imul
rcll
jae
scas
jg
adc
jmp
out
cmc
pop
and
sti
mov
pop
mov
jb
xchg
sarl
fs
inc
dec
ss
ja
pop
in
cmp
scas
jge
in
add
inc
and
jae
popf
xchg
sar
fnsave
dec
jbe
add
xacquire
mov
out
icebp
or
inc
ljmp
mov
sti
sahf
outsl
stc
inc
lret
inc
inc
pop
cmp
xchg
mov
adc
mov
or
icebp
add
xor
mov
movsb
jae
out
fld
movsl
gs
mov
popa
xor
xchg
mov
and
cmp
inc
mov
mov
adc
mov
shr
adc
mulb
push
mov
verr
hlt
dec
sbb
pop
xor
filds
mov
cmc
outsl
pop
ljmp
cs
sub
mov
pop
cmp
add
push
scas
data16
sbb
push
aam
mov
lcall
test
mov
mov
pop
sbb
addb
dec
negb
push
xor
fimuls
sbb
jmp
popl
divl
mov
shlb
pop
mov
in
adc
sub
bound
stos
std
int
mov
repnz
dec
fs
in
mov
push
inc
jns
cmpsl
ret
in
mov
push
pusha
repz
jg
sbb
xchg
je
add
lcall
or
push
inc
inc
mov
mov
mov
ret
mov
lcall
add
movsb
adc
imul
xor
dec
in
pop
out
cmpsb
hlt
test
or
incb
add
jnp
test
outsl
ja
xchg
cli
push
hlt
lods
add
or
push
mov
mov
aas
mov
mov
add
xor
mov
xchg
cmp
sti
adc
mov
dec
test
jl
mov
mov
rclb
arpl
mov
mov
xor
mov
inc
movsl
sub
in
imul
ret
insb
or
rorl
add
sub
pop
adc
popa
in
inc
sbb
mov
add
mov
jae
in
pushw
add
rcrl
rcrb
adc
lret
arpl
int3
dec
or
push
pop
mov
lods
adc
cli
aam
std
sbb
or
into
repz
sub
jbe
jno
les
or
push
xchg
or
lods
pop
add
sbb
mov
jge
jns
fimull
cmpb
xlat
xchg
sub
test
bound
enter
add
icebp
rcrb
daa
or
ds
xchg
pop
dec
cmp
out
bound
lock
or
imul
and
popa
cmp
loopne
pop
arpl
std
xchg
xchg
in
adc
in
mov
or
or
ds
sub
mov
push
push
repz
andb
mov
fmulp
add
call
int
lods
add
sub
add
out
xor
mov
mov
fmuls
dec
mov
shrl
inc
pop
das
faddl
loopne
xchg
jnp
jp
and
push
enter
mov
je
pop
insb
in
adcl
inc
mov
clc
inc
mov
pop
pushf
fidivrs
or
and
cmp
adc
outsl
mov
icebp
jg
lahf
xchg
inc
movsb
and
and
xor
popa
ffreep
add
adc
add
in
dec
orb
inc
add
push
in
sub
mov
and
rolb
mov
xchg
adc
or
cmpsl
cld
ficoml
shlb
bound
add
mov
xchg
and
pop
jecxz
mov
fwait
dec
out
test
and
push
add
xchg
mov
or
adc
les
in
clc
adc
inc
xchg
clc
and
out
roll
nop
lahf
movsl
inc
sahf
mov
sub
pushf
and
inc
adc
sbb
nop
dec
rep
fbld
enter
fcoml
sbb
mov
popa
dec
popa
enter
push
push
pop
inc
inc
or
xor
sub
mov
imul
data16
sbb
loopne
and
push
cmp
sahf
ficoml
mov
mov
mov
stc
lret
pushf
nop
out
sbb
jmp
inc
or
jge
lahf
and
adc
ficompl
loope
movsb
sarb
jae
mov
mov
push
or
and
es
call
dec
pop
aaa
lods
out
into
imul
mov
imul
insb
hlt
pusha
pop
cmp
test
or
aad
sbb
stos
mov
xchg
ret
cmpsl
mov
out
mov
in
mov
and
mov
mov
ja
rolb
repnz
inc
xlat
adc
jnp
testl
sbb
sub
mov
push
jle
mov
adc
push
xchg
cmp
aam
lea
pop
leave
inc
loope
pusha
inc
and
les
movsl
dec
lahf
sbb
or
cld
icebp
cwtl
into
std
cmp
popa
sbb
stos
into
mov
cld
push
out
jne
cmp
rclb
push
jns
pop
bound
fdivrl
sarl
xchg
dec
xor
loopne
jae
xlat
push
mov
jno
insb
jp
repnz
mov
or
mov
push
jecxz
push
fstl
in
pop
sbbb
or
inc
shlb
mov
movsb
rcrb
mov
cld
add
in
shl
cs
adc
cmpsl
aaa
mov
leave
shlb
pop
jg
rcll
jge
test
mov
xor
stos
cli
push
jg
and
test
sbb
das
outsb
ret
popa
or
jle
xchg
iret
pop
adc
and
fldcw
ljmp
loopne
add
sbb
cld
cmpb
fwait
xchg
faddl
jecxz
sub
dec
stos
outsb
xor
or
les
mov
sbb
arpl
je
into
jb
js
pop
pop
add
cwtl
add
or
xchg
test
loope
dec
xor
mov
pop
dec
mov
inc
pop
lea
imul
adc
icebp
stos
outsb
xchg
sbb
jl
mov
mov
inc
or
ret
lods
xor
arpl
xchg
fs
sub
inc
push
pushfw
xchg
pop
xor
or
adc
inc
into
in
push
in
pop
push
xchg
and
scas
outsb
or
popa
popa
inc
and
and
mov
repz
lahf
pop
jg
cwtl
xchg
sahf
nop
pop
in
shl
cmp
rol
icebp
or
add
notl
scas
arpl
mov
xchg
add
xor
dec
dec
movsl
sbb
out
adc
and
js
popa
fwait
push
cmc
inc
rcrl
sbb
ret
out
lods
scas
xchg
repz
jae
mov
les
dec
and
gs
xlat
loope
cs
je
ret
xchg
jle
ja
cwtl
sbb
dec
scas
fnclex
mov
add
cmp
iret
call
pop
dec
mov
roll
mov
nop
and
repz
pop
int3
ret
fst
call
sub
mov
inc
sub
in
aaa
ret
fcmovnb
push
inc
stc
jecxz
or
xor
mov
xchg
jo
push
push
jno
inc
sub
iret
jmp
hlt
cld
cmp
add
jo
scas
lea
mov
push
xchg
pop
iret
into
test
shlb
popa
in
push
mov
push
mov
int3
pop
out
shl
push
adc
sub
cmp
mov
and
dec
dec
cwtl
or
dec
xor
mov
mov
sub
mov
xchg
dec
repnz
lret
mov
pop
setnp
add
dec
scas
cmpsl
pavgb
ljmp
shlb
push
int
xlat
jg,pn
xor
jl
or
pop
leave
xor
push
mov
jne
mov
in
and
mov
movsl
mov
pop
shlb
jecxz
jp
mov
leave
or
lcall
jnp
mov
ret
sahf
xor
xchg
popf
stc
insb
inc
xchg
adc
test
mov
sbb
push
xchg
dec
stc
or
mov
rcrb
in
stc
pushf
and
add
cs
in
idivb
dec
cltd
andb
dec
sbb
imul
nop
cli
in
push
push
test
add
sarl
adc
sub
jo
cmp
ret
or
sub
pop
mov
lea
call
mov
jnp
out
sbb
sbb
xor
fsubl
lods
data16
cmp
fisubrs
xor
aam
cwtl
dec
imull
sbb
lock
stc
rcrl
divb
adc
lret
enter
aad
jns
push
bound
push
outsb
xchg
inc
dec
bnd
inc
shrb
ljmp
pop
push
lods
bound
or
gs
loopne
inc
sub
mov
add
outsb
or
dec
add
movsl
in
inc
xchg
adc
lret
lahf
pop
mov
jge
xchg
mov
outsb
mov
xor
ret
frstor
mov
cmp
outsl
std
rcll
dec
xlat
pop
mov
stos
outsb
adc
dec
push
dec
in
test
lret
fsubrs
xchg
ret
and
aam
repnz
aad
xchg
popl
fwait
inc
rorl
jns
mov
leave
inc
in
pop
mov
xor
cld
push
xor
mov
mov
jmp
sbb
jle
pop
mov
adc
mov
fistpl
or
dec
jg
or
xchg
or
aaa
xor
ret
addb
sahf
cmp
daa
sti
inc
pop
test
mov
push
leave
mov
or
outsl
or
sarl
sbb
mov
orl
cmp
data16
adc
int3
fsts
add
jmp
mov
or
mov
push
mov
inc
sbb
mov
mov
mov
sub
mov
xchg
sarl
ljmp
aam
jp
pushf
dec
jmp
mov
push
movsl
sti
sub
rcrl
roll
sub
or
sub
push
push
adc
xorl
or
jo
add
out
fimull
jnp
clc
add
repnz
imul
dec
jle
mov
dec
incl
mov
push
dec
jne
push
cs
cmpsb
or
inc
mov
icebp
clc
imul
mov
cltd
jge
mov
sbb
divl
bound
fdivs
sbb
mov
inc
insl
bnd
cmp
addr16
repz
jge
mov
int
pop
lahf
sbb
cmp
repnz
mov
es
cwtl
dec
faddl
adc
sub
addr16
cmpsl
flds
sbb
mov
icebp
mov
push
xchg
pushl
adc
int3
movsl
jl
ds
fidivrs
xchg
mov
das
push
add
scas
movsb
movsl
icebp
aad
movsb
lahf
ret
mov
scas
mov
push
movl
sti
pop
sbb
int3
sub
dec
mov
mov
mov
or
push
xor
std
pop
in
jmp
or
bnd
push
rcrb
shll
and
mov
lods
idivb
cmc
lret
cmp
bound
add
pop
jne
xchg
jns
dec
cmp
mov
mov
push
fwait
or
mov
sbb
xor
dec
iret
mov
xlat
cmc
jmp
daa
enter
mov
mov
shlb
sbb
push
in
repnz
jno
add
adc
addb
shll
inc
or
test
mov
mov
movsb
and
loopne
hlt
mov
daa
or
and
outsl
lods
push
int3
repnz
pop
cli
out
push
test
or
lods
loopne
pop
cmp
cmpsl
and
xor
es
push
or
sub
push
mov
sbb
pop
jle
in
test
jbe
cwtl
mov
nop
mov
cmp
sub
xchg
xor
mov
sub
cltd
fistpll
fwait
add
sbb
fcomip
repnz
dec
in
out
dec
jns
sbb
mov
stos
jns
cmp
imul
das
movsb
js
leave
outsl
pop
sbb
out
dec
es
mov
dec
sbb
in
jge
inc
aaa
sti
pop
mov
inc
push
ljmp
dec
and
mov
cltd
repz
dec
or
push
xor
or
or
clc
imulb
dec
or
inc
add
mov
fidivrl
int
jae
ret
js
ja
insb
push
sub
cli
mov
xor
ret
and
test
mov
pop
popa
sbb
add
mull
sahf
sbb
and
fistps
out
mov
sbb
jo
out
insl
dec
mov
fwait
movsl
test
pop
cmp
aaa
mov
dec
cmp
jb
repz
or
rcrl
push
push
push
xchg
pop
xchg
call
fnsave
lock
mov
inc
into
or
sahf
cs
jmp
test
pop
sbb
je
leave
xor
xchg
addb
mov
sub
fnsave
cmp
lock
push
insl
jb
pop
xor
mov
or
movsl
lret
pop
stos
push
push
inc
push
mov
and
push
cwtl
sub
mov
repz
repnz
outsl
sub
pop
jae
push
sahf
xchg
inc
pop
mov
dec
push
sub
jg
fnstsw
xchg
outsb
frstor
aad
push
pop
sub
popf
mov
popf
jno
xor
inc
int
pop
inc
lcall
jmp
xchg
ret
sbb
fwait
cltd
push
xchg
adc
dec
outsl
jne
pop
push
or
pop
addl
inc
xchg
cmp
sbb
repz
add
or
dec
sub
imul
outsb
bound
icebp
cli
and
pop
xor
mov
jl
outsl
dec
out
rcrl
sbb
xchg
lock
lds
jne
je
jbe
insb
shlb
ret
jp
adc
into
ret
rorl
popa
cmp
scas
add
dec
rorl
push
jno
lahf
cmpsb
mov
cld
test
cmc
aaa
xorl
ljmp
lods
add
sbb
pop
prefetch
in
fidivs
ret
movsb
sub
hlt
push
push
jno
pushf
and
ja
fcomps
add
adc
sbb
inc
mov
push
push
and
or
mov
adc
xchg
testb
xchg
fwait
cmp
fnsave
pushf
aaa
dec
and
int3
push
dec
clc
pop
push
hlt
sbb
les
xchg
movsl
cmp
jbe
ftst
andb
and
lret
dec
and
push
add
lret
sbb
or
and
out
add
inc
xor
adc
enter
sar
fs
and
in
jns
jnp
sbb
ret
or
movsl
jbe
cmp
mull
dec
mov
repz
pusha
test
dec
cli
and
and
inc
xor
sub
idivl
and
mov
das
hlt
xchg
mov
in
test
mov
mov
adc
ljmp
cmpsb
test
aam
xor
mov
call
gs
cwtl
call
orl
in
push
clc
xor
pop
jae,pt
scas
mov
and
adc
sbb
pusha
scas
xor
and
in
push
movsl
add
in
out
pushf
mov
cmp
dec
sbb
mov
mov
mov
loope
sbbl
test
push
xor
jns
decl
and
jmp
notb
mov
mov
cmp
and
sub
imul
xor
cli
sbb
xchg
andl
lods
xor
nop
int3
inc
push
stc
fsubl
jae
outsb
sbb
xor
in
mov
movsl
fidivrs
stos
pop
pop
faddp
adc
jae
add
orb
test
mov
xchg
jbe
push
pusha
pop
fbstp
add
iret
push
test
sti
cmp
mov
shl
push
sub
test
test
pop
xor
push
jg
adc
xchg
imul
out
sub
inc
pop
inc
dec
fnsave
xlat
int3
pop
mov
dec
in
cmpsl
into
xchg
icebp
add
xchg
mov
imul
std
mov
hlt
dec
movsb
adc
push
add
mov
add
xor
and
mov
dec
insl
push
sub
and
sbb
int
add
inc
jmp
imul
inc
mov
fcompl
mov
and
adc
xlat
hlt
lret
fsts
lds
push
iret
mov
xor
fisubl
dec
xchg
pop
imul
xchg
mov
aam
add
popf
cmc
mov
cmp
scas
dec
imul
jp
leave
inc
xchg
repz
fldl
lds
pop
lock
repnz
shlb
and
call
ljmp
mov
cmp
fiaddl
sub
pushf
push
addr16
and
in
mov
data16
lcall
sub
mov
imul
xchg
mov
lods
pop
stos
mov
xor
scas
hlt
xchg
ret
pusha
mov
scas
xchg
in
mov
adc
outsl
std
les
sbb
push
ret
mov
adcb
sbb
jbe
adc
lcall
add
fwait
mov
jl
movsb
aas
adc
xor
cli
dec
fstpl
inc
pop
mov
or
addl
pop
or
inc
push
pop
dec
shll
adc
arpl
test
push
inc
sbb
pop
subl
rolb
rcl
idivl
andb
pop
icebp
mov
nop
inc
sbb
imul
inc
cltd
inc
sti
sbb
out
mov
movsl
sbb
lods
ss
fs
bound
scas
mov
jle
jle
xchg
xchg
idivb
and
pop
leave
mov
sub
movsl
lahf
ror
push
and
gs
stc
call
fmull
xchg
mov
xor
add
xchg
xchg
test
sbb
int3
ja
jmp
pop
xchg
in
inc
popf
sbb
gs
pop
into
aas
cmpsb
iret
fstpt
fsub
fsubl
push
xchg
push
sub
stc
xor
mov
fisttpll
dec
and
stos
mov
icebp
arpl
pop
pop
fwait
mov
arpl
repz
cmp
xor
cmpsl
shll
xchg
enter
inc
movsb
push
sub
pop
sbb
outsl
ljmp
psrld
or
inc
pusha
jne
in
xor
stos
xchg
jl
fldcw
add
sbb
stos
cld
sahf
lock
dec
int
fdivrl
enter
rcrb
mov
add
mov
xchg
ret
loopne
das
lcall
popl
fnsave
pop
fdivl
mov
outsl
jmp
pop
pop
mov
dec
sub
push
cmp
xchg
enter
pop
adc
ljmp
add
add
ja
adc
imull
sahf
imul
mov
scas
adc
inc
xor
mov
push
insb
test
inc
jnp
stc
rcr
adc
in
xchg
add
fsubs
xor
pop
xchg
mov
cmpsb
pop
xor
test
in
jl
stos
dec
test
loope
xor
add
xor
leave
stos
aas
outsl
out
mov
aam
xchg
iret
adc
cmpb
and
int
inc
mov
add
lret
aaa
adc
mov
lods
pop
add
pop
nop
and
xchg
dec
repnz
mov
pop
out
dec
xor
add
cmp
sub
dec
cmp
jnp
cltd
or
dec
movsl
int3
inc
fsubrl
mov
cmpsb
sahf
adc
push
andl
iret
pop
xchg
jne
mov
test
fimull
mov
ret
in
into
pop
mov
sahf
jp
add
iret
cmp
sub
fnsave
push
repnz
cmp
pop
data16
jl
pop
or
dec
jmp
cmp
cmp
and
mov
adc
or
inc
jle
cmp
ja
xlat
inc
push
aas
add
gs
xor
mov
push
popf
add
xchg
xchg
sub
and
fmuls
mov
adc
or
add
pop
pop
loop
repnz
jae
sub
repnz
mov
inc
adc
jmp
xchg
lods
inc
and
ret
dec
nop
call
ljmp
lock
mov
insl
sub
mov
jmp
adc
mov
xor
loopne
in
mov
xor
popa
push
jbe
mov
xor
adc
dec
mov
add
shl
les
aam
cmp
stos
sbbl
and
insb
or
subl
imulb
aam
lods
or
xor
out
out
push
loopne
bnd
xchg
dec
inc
in
or
add
mov
push
in
add
adc
cmpsb
inc
mov
mov
in
mov
adc
cs
xchg
lret
and
pop
daa
cmp
inc
ljmp
mov
cs
jnp
jnp
mov
in
inc
je
jns
mov
mov
fldenv
imul
mov
dec
js
mov
iret
and
test
pop
xchg
jo
into
mov
pop
int3
adc
mov
push
xchg
loop
sbb
add
pop
cmp
adc
call
in
arpl
or
rcrl
jmp
gs
pop
push
xchg
std
test
dec
mov
or
push
xchg
mov
enter
aaa
cmp
stos
pop
fldl
mov
mov
xchg
cmc
orl
jg
cmp
mov
cmp
fdivl
scas
xchg
lods
shrl
test
inc
sbb
add
mov
mov
sub
adc
loop
xchg
adc
shl
aad
mov
loop
dec
mov
lahf
mov
jns
mov
loop
jmp
cld
sub
inc
daa
jge
hlt
sbb
and
loopne
rclb
fsubr
ss
fwait
jnp
sub
mov
mov
add
sbb
popf
xor
dec
lods
or
mov
enter
dec
test
push
xchg
arpl
xor
rcll
inc
jg
or
sahf
je
xchg
cld
adc
shlb
in
fsub
push
hlt
xor
dec
ret
sub
mov
push
mov
dec
cwtl
add
push
sbb
shrl
pop
dec
cli
push
fwait
movsl
arpl
les
pop
dec
js
mov
je
andb
icebp
sbb
scas
sbb
out
mov
mov
iret
adc
cmc
xchg
aad
jl
jl
inc
mov
push
or
stc
jns
xchg
enter
sub
jg
mov
cs
sar
cmp
pop
push
addr16
cmp
or
mov
inc
mov
into
or
cmp
sbbl
in
test
div
xchg
into
mov
leave
int
cmp
decl
adc
cmp
mov
mov
pushf
mov
mov
sub
sahf
mov
test
push
add
sbb
sbb
loopne
xor
mul
cmp
insl
dec
dec
out
jg
push
sahf
mov
shld
cmp
pop
jae
loop
movsb
loop
xor
mov
push
decl
arpl
xchg
sub
ret
push
adc
and
and
out
sti
rorl
mov
sub
xchg
dec
aaa
rolb
xchg
mov
sbb
call
push
stos
mov
mov
out
sbb
mov
pop
repz
xchg
bnd
cmpsb
push
popf
aam
imul
cld
stc
mov
mov
je
pop
scas
shlb
movzwl
outsl
inc
xchg
daa
adc
ret
in
out
jle
ds
out
je
imul
inc
aam
cmpsl
js
fwait
popa
imul
push
cli
icebp
push
fsubl
push
and
add
push
xchg
jne
push
js
arpl
sbb
pop
in
iret
cli
pop
imul
xor
fcomi
arpl
cmc
stos
mov
int3
rcr
imul
insl
in
ljmp
jo
roll
and
mov
mov
lds
mov
fcoml
jle
in
xor
xor
jg
push
repz
test
add
fcomp
mov
fcom
pop
gs
sbb
dec
mov
scas
sarb
andb
aam
pop
fisttps
aad
fs
neg
fwait
lods
ja
out
sarl
mov
cld
out
jo
call
jno
mov
xchg
cmpsb
hlt
or
in
std
inc
popf
ljmp
out
int
lret
dec
sahf
gs
dec
jne
testb
hlt
ficompl
mov
cli
sbbl
jno
in
and
loop
ss
jbe
ret
add
mov
mov
cli
and
mov
sub
pop
clc
movsl
nopl
push
mov
mov
test
fsubr
xchg
pushl
mov
mov
cmp
fiaddl
pop
mov
stos
lret
inc
inc
fsubr
inc
orl
and
mov
jecxz
mov
sub
and
out
mov
jae
mov
dec
testb
ficompl
aaa
inc
push
insl
sti
sbb
rol
xchg
popf
push
inc
outsl
rol
sahf
push
test
sub
out
inc
push
dec
jb
sub
cli
cmpsb
mov
sub
sub
adcl
pop
add
in
pop
push
inc
mov
in
fldenv
sbb
out
dec
out
gs
push
imul
ret
sub
in
push
cmp
push
clc
mov
xor
out
mov
in
dec
mov
dec
mov
js
xor
cwtl
mov
loopne
or
or
repz
sbb
and
xchg
fldt
or
bound
xchg
xor
adc
xchg
outsb
sub
scas
adc
push
aad
loope
mov
xchg
lods
cltd
xor
pop
lret
push
jl
sbbl
das
sahf
sub
dec
gs
xchg
test
out
pop
xchg
jp
pop
xchg
push
mov
xor
and
jmp
mov
inc
jno
xchg
inc
pop
mov
and
xchg
cmpsb
cltd
rdtsc
sbb
mov
cs
ja
aam
insb
jae
iret
lds
dec
xchg
cld
fiaddl
jmp
fidivrl
sarb
sub
loop
or
sub
xor
mov
mov
lea
inc
ud1
outsl
add
lods
inc
dec
cmp
pushf
mov
xchg
jl,pn
push
loope
scas
sbb
add
push
sahf
push
push
ljmp
mov
add
sti
jle
int3
cvttps2pi
mov
inc
inc
fwait
mov
xor
cs
in
insb
jle
or
cmpsl
in
int3
aam
xor
js
mov
adc
orl
lock
xacquire
mov
inc
mov
push
jno
int
movsb
je
add
ja
and
shlb
adc
std
pop
push
mov
rol
pop
mov
xchg
add
cmp
sarb
xor
pop
adc
or
mov
xlat
jmp
cld
adc
sbb
clc
dec
inc
daa
xor
mov
rcrl
or
inc
push
mov
sub
and
out
cli
nop
sbb
pushf
imul
jmp
inc
imul
incl
xor
flds
lods
hlt
jecxz
pop
cmp
push
mov
mov
stc
pop
xchg
stos
xor
mov
inc
jns
addb
loopne
or
add
int
shl
inc
movq
mov
sarb
inc
subb
sub
jle
cs
pushf
jae
gs
mov
dec
push
cmp
and
sbb
orb
in
rcll
push
movsl
or
push
xor
fisubrl
pop
cmp
inc
or
sbb
dec
outsb
or
mov
mov
pushf
push
mov
in
js
filds
addr16
sub
push
inc
mov
xchg
insb
xlat
adc
jnp
inc
add
mov
cmp
or
outsb
xor
cmp
jl
movsl
ror
dec
xor
adc
scas
stos
pop
js
sbb
inc
push
and
jecxz
push
mov
mov
cli
lea
aas
add
jmp
out
push
xchg
in
leave
inc
mov
dec
shrb
jae
rcrb
imulb
fcomp
flds
insb
lods
pop
xchg
push
rorb
inc
inc
push
popa
push
push
xlat
jo
and
aam
add
xchg
test
xlat
jne
jb
sar
mov
scas
mov
mov
push
sbb
cmp
xchg
add
std
mov
out
dec
ds
fdivs
fsubrs
jbe
shl
shll
cmp
cld
mov
mov
test
mov
ljmp
out
sbbl
call
popf
xor
jnp
mov
in
lahf
jnp
pop
xchg
fs
rorb
aad
mov
pop
std
fadds
mov
fsubp
mov
nop
fcmovnbe
stc
pop
xor
rclb
sahf
mov
push
cmp
mov
xchg
inc
pop
pop
inc
adc
lret
xlat
push
dec
dec
xchg
lock
dec
mov
icebp
jge
xor
xor
xor
adc
imul
mov
cmp
roll
dec
cwtl
mov
add
imul
mov
jg
mov
pop
out
in
clc
in
clc
in
ja
fistpll
aas
lock
aaa
push
mov
imul
ss
cmp
int
ljmp
mov
and
lock
cs
add
cwtl
lods
pop
pop
aas
icebp
leave
repz
cltd
adc
sbbl
sub
in
into
mov
addb
lret
xor
pop
mov
je
data16
fstpt
stos
bnd
aas
dec
fstps
dec
lcall
cmpl
cmp
and
subb
js
jnp
push
cmp
dec
orl
xchg
mov
sbb
sbb
imul
leave
push
je
inc
daa
or
mov
ret
ss
in
or
mov
out
or
out
in
or
scas
and
push
leave
jg
imul
inc
jne
sbb
inc
rorl
xchg
mov
jae
add
mov
xor
mov
adc
mov
leave
dec
jno
xorl
xchg
ljmp
icebp
aam
enter
push
outsl
std
aam
inc
pop
pushf
sub
fs
xchg
sbb
inc
mov
jne
dec
stc
xor
xchg
ret
int
sbb
cs
popa
add
movsl
adc
stc
push
or
jmp
into
mov
int3
sub
les
rcrb
fadd
mov
jp
adc
push
mov
dec
xor
pop
sbb
out
mov
jecxz
in
out
xchg
xchg
push
pop
push
in
pusha
cwtl
daa
jecxz
dec
mov
pop
imul
loop
ret
gs
js
pop
xor
jge
lahf
mov
pop
mov
insb
mulb
shrl
fcomi
inc
popf
jbe
test
mov
lods
push
cltd
mov
xchg
ja
aas
pop
test
push
in
out
xsave
mov
clc
push
xchg
js
fildll
jecxz
mov
adc
push
push
xor
sub
icebp
outsl
mov
int
or
stos
fstps
rcll
xchg
jo
aad
pop
movsb
pop
dec
cmp
jp
cmpsl
push
pop
data16
mov
test
out
xchg
out
jne
imul
outsb
push
ret
inc
fwait
or
xchg
lods
and
and
xor
jecxz
jns
mov
leave
out
into
mov
mov
loop
ss
fsubr
in
in
adc
mov
call
in
or
pop
mov
lods
hlt
test
sub
inc
insb
sbb
add
and
jno
enter
xchg
and
dec
xchg
sub
inc
sub
imul
sbb
xorb
btc
dec
cmpsl
xchg
mov
ds
and
sbb
cmp
fldenv
repz
mov
flds
fwait
xchg
pop
sub
sti
clc
push
xor
add
mov
js
mov
daa
cmp
aas
mov
mov
xor
frstor
mov
push
or
lret
or
cmpsl
or
stos
aaa
lods
lds
mov
jae
pop
ret
mov
loope
out
cmpsl
mov
leave
test
int
adc
and
mov
out
ds
and
cmp
movsb
loopne
push
sahf
out
cld
mov
mov
aam
mov
push
mov
out
sarl
push
fbstp
xchg
imul
mov
add
shl
cltd
sub
leave
test
xchg
xchg
fisttpl
jo
mov
mov
hlt
std
insb
mov
scas
mov
mov
orb
ret
lods
cli
mov
cli
jae
mov
rorb
lods
sub
ds
inc
push
fisttpll
and
out
push
das
dec
xor
and
in
sub
fcomip
xchg
pop
mov
sub
mov
popl
xchg
out
aad
or
sbb
imul
xchg
stc
into
sbb
mov
outsb
lcall
jge
mov
cmc
add
mov
fmulp
fstl
popw
in
mov
dec
mov
loopne
jecxz
jo
cmp
pop
inc
add
xchg
mov
add
mov
pop
pop
mov
iret
into
pop
pop
cltd
leave
add
in
pop
aas
jae
stos
dec
call
ljmp
sub
scas
mov
push
bndstx
vpmulhuw
or
das
stos
xchg
push
add
mov
and
xchg
inc
xchg
adc
push
or
in
pop
dec
mov
dec
dec
loop
in
pop
ret
lods
jmp
das
and
stos
jae
xor
push
popa
mov
mov
mov
push
xchg
call
mov
in
ljmp
cmp
in
mov
mov
negb
scas
add
test
test
add
dec
xor
fucomip
repz
xchg
std
imul
dec
nop
out
stos
and
mov
cltd
loop
pusha
ds
xor
addr16
xor
sub
fnsave
lret
dec
jae
icebp
lahf
fnstenv
pop
sti
addl
add
cmpsl
pop
data16
pushw
repz
out
mov
shlb
mov
inc
pop
push
ds
push
cs
adc
sbb
cmp
aam
push
and
rorb
mov
add
pop
cwtl
mov
pop
inc
add
push
loopne
repnz
dec
int
insl
mov
in
cmp
hlt
mov
ljmp
dec
inc
push
pop
sti
dec
sbb
out
cmp
int
lds
or
loope
call
dec
jnp
mov
jns
sub
xchg
inc
stos
scas
aam
push
sub
andb
pop
dec
insl
xchg
adc
out
les
data16
mov
cltd
das
loopne
mov
out
dec
sbb
sbb
shl
xchg
shrl
mov
int
je
mov
lea
mov
push
sub
in
fs
mov
leave
mov
pop
lcall
pop
mov
sbb
loope
arpl
in
ret
lret
test
xchg
pop
int
cmp
cmp
jecxz
cltd
sub
xchg
push
jl
stos
loopne
sbb
jle
pop
lds
sbb
push
addr16
addl
jmp
and
pusha
pop
jb
cltd
mov
add
aas
leave
inc
push
mov
iret
ss
push
xor
adc
or
js
jecxz
xor
out
out
lock
sbb
nop
sbb
loopne
sbb
inc
cmp
fnstsw
jb
jne
sahf
sub
or
cld
ja
mov
sarl
fdivl
push
cmp
shlb
shll
aas
add
call
mov
sub
fiadds
fldl
dec
sbb
movsb
aam
inc
idivl
cmpl
jbe
icebp
nop
in
dec
add
in
xor
imul
push
mov
sahf
mov
adc
adc
rcrl
ret
mov
daa
shll
je
shrl
jnp
xor
push
sub
sub
dec
mov
mov
es
sbb
lods
pop
pop
adc
popf
stos
loopne
push
je
or
jno
lret
in
popa
push
push
adc
cmc
mov
scas
ret
lret
aas
pushf
add
out
mov
in
negl
scas
and
mov
pop
in
mov
jp
cmp
repz
out
ret
push
sub
push
add
je
inc
lret
js
sub
ficomps
aas
ret
mov
pop
lods
mov
cmpsb
sub
jno
jecxz
pop
mov
dec
jmp
bound
addr16
push
enter
pop
es
mov
push
xor
dec
mov
shlb
xchg
mov
pop
lea
lret
dec
out
inc
lods
out
cmp
xor
inc
icebp
cld
imul
hlt
sti
adc
adc
and
or
aad
mov
jmp
movsb
es
sub
adc
push
rolb
fsubrs
hlt
jecxz
imul
sub
xchg
adc
ss
mov
and
xor
gs
in
test
pop
lea
mov
dec
cmp
jo
les
mov
addr16
fcoms
mov
sbb
call
dec
loope
inc
aaa
sub
pop
in
lret
mov
dec
mov
and
imul
sbb
mov
mov
stos
loop
adc
iret
test
sbb
push
pop
mov
xchg
rorb
inc
xor
adc
out
out
xor
xor
mov
mov
pop
ljmp
imul
loop
rcll
pop
pop
outsb
sbb
ljmp
in
jne
in
or
and
mov
lcall
repz
repnz
mov
mov
sarb
mov
xor
pop
pop
sti
int
mov
xor
fcompl
pop
push
and
sub
int
mov
jle
enter
and
push
jg
fldl
dec
mov
mov
pop
jb
imull
inc
xlat
out
dec
pop
sbb
xor
fstpt
sti
fdivrs
mov
imul
aam
pop
inc
push
inc
ret
popf
push
sub
sti
std
xchg
pop
movsl
sub
sbb
push
div
dec
incl
cmc
cmp
dec
xchg
jmp
inc
sbb
mov
faddl
adc
jmp
addr16
sbb
data16
adcl
adc
stc
xor
cltd
adc
jnp
gs
and
pop
mov
sbb
or
test
inc
or
lcall
arpl
add
push
test
lret
xlat
mov
xlat
push
cmp
push
mov
movb
cmc
test
cmc
sub
mov
mov
push
push
mov
pop
push
int3
mov
push
scas
es
mov
or
test
mov
cmp
loop
lret
repz
adc
in
mov
jbe
pop
inc
cmc
pop
and
push
xchg
movb
sub
dec
jnp
add
movsb
fidivrs
lcall
and
fnstcw
outsb
mov
or
out
icebp
test
ficompl
ffreep
push
jo
jmp
icebp
les
rclb
push
mov
jne
cmp
inc
xor
dec
cmp
xor
out
sbb
mov
scas
bound
into
fs
add
aam
inc
in
lds
dec
dec
icebp
dec
jl
inc
sbb
call
jg
xor
cmp
ficoml
push
lahf
jbe
lea
fs
aaa
jle
inc
flds
stos
inc
push
mov
inc
imul
sbb
stc
push
pop
out
push
jae
clc
fists
in
mov
jb
insl
cmp
sbb
mov
jp
xor
jns
mov
pushf
sbb
pop
call
sar
ret
gs
fsts
cmp
cmp
nop
xlat
das
and
rdtsc
fcompl
cld
jecxz
mov
fcomi
jbe
jp
in
pushf
mov
pop
test
insb
sub
mov
sub
notl
cmpps
or
adc
add
lfs
push
ljmp
stos
and
push
adc
cmp
push
inc
mov
loop
test
mov
mov
inc
jne
out
repz
xor
insl
ja
int3
mov
cltd
mov
push
sti
xor
mov
jecxz
mov
imul
mov
into
and
dec
push
repnz
push
andb
push
fucomip
sbb
mov
popa
pop
push
xor
mov
lcall
jnp
and
loope
adc
pop
fsubs
push
shrb
add
xchg
sbb
sbb
loop
cmp
jno
stos
movsb
jo
lods
mov
daa
aam
fdivrs
lock
sbb
outsb
push
adc
push
sub
sub
sti
jne
lahf
loop
mov
inc
pop
push
and
test
cmp
inc
lcall
mov
jae
or
and
cmp
add
push
mov
lret
add
jg
jmp
xlat
and
pop
mov
cld
sarb
or
jns
dec
loop
mov
mov
jns
out
fisubs
xchg
inc
imul
mov
test
out
les
clc
rolb
sbb
mov
and
jae
das
call
sbb
or
cltd
add
enter
lock
ljmp
or
testl
mov
sbb
mov
jmp
les
test
addr16
xor
inc
push
fs
jge
cmp
mov
in
movl
inc
repz
lret
adc
and
scas
ss
in
jnp
lds
mov
test
or
lods
es
imul
cmp
push
xor
xchg
imul
sub
call
iret
mov
leave
dec
popf
adc
pusha
fistl
sbb
mov
js
cmp
hlt
sbb
insb
imul
sti
lcall
push
mov
iret
daa
inc
mov
sbb
xor
stc
fcompl
and
pusha
mov
adc
ljmp
mov
sub
xor
and
fisttps
gs
mov
je
pop
sbb
inc
push
sbb
into
mov
cmp
inc
inc
rcll
divb
std
sarb
cmp
push
lret
adc
and
xchg
aam
sub
dec
test
jb
mov
mov
inc
xor
lods
fisttpll
int
into
adc
inc
daa
inc
sub
cwtl
inc
add
xchg
mov
jge
xor
jo
outsl
rol
sub
hlt
stc
sahf
fsubrs
mov
fwait
add
sub
fcmovnbe
fadds
sahf
pop
repnz
aaa
out
push
cmp
sti
sub
aaa
add
dec
dec
and
out
mov
daa
sbb
clc
mov
gs
cld
insb
leave
cmp
xor
iret
and
mov
dec
aaa
fwait
dec
insl
mov
mov
pop
inc
push
mov
push
imul
push
aaa
sti
daa
mov
scas
mov
push
jne
out
xor
push
sahf
mov
push
nop
mov
xor
flds
stos
mov
mov
out
mov
fcmovne
mov
insl
js
push
scas
inc
mov
imul
aad
push
cs
push
stos
outsl
xor
outsb
cmp
push
cld
bound
stc
add
sub
es
sub
shr
pop
ss
and
add
inc
dec
lahf
add
jg
je
mov
aaa
dec
scas
popf
clc
je
outsl
dec
ja
pushf
inc
stc
out
xchg
lds
sub
nop
scas
pop
xchg
loopne
inc
movsb
icebp
xor
cwtl
or
sarl
dec
mov
push
out
mov
mov
lea
and
or
mov
mov
add
xchg
cmp
mov
or
or
and
test
popa
stc
call
jno
fidivl
cmp
xchg
mov
add
data16
or
fmul
push
dec
xchg
sbb
sbb
adc
in
imul
pop
lea
iret
cvtpi2ps
out
idiv
insb
sarb
mov
icebp
rorb
ss
test
pop
dec
xor
cltd
dec
stos
lea
cmp
xor
mov
jmp
out
dec
iret
dec
sub
inc
loop
call
cld
push
pop
nop
scas
cmp
push
push
in
into
mov
xchg
xchg
fcomps
mov
fmull
sbb
adc
cmc
push
shr
loopne
adc
in
mov
mov
adc
lret
add
mov
jl
add
out
and
xchg
mov
xchg
sub
sti
and
cld
outsl
sub
push
sbb
jne
jg
jp
dec
pop
add
and
sbb
mov
mov
add
or
arpl
mov
scas
sti
ss
xchg
clc
shr
clc
mov
je
sbb
cmp
insl
icebp
dec
pop
mov
push
xlat
add
cld
jmp
clc
or
pushf
push
out
pop
addb
mov
hlt
pop
es
scas
add
jae
pop
loopne
push
pop
jmp
jl
inc
xchg
lock
sub
push
cmp
or
int3
dec
jmp
and
push
andb
push
cmpsb
in
mov
out
sti
fisubs
es
pop
sti
jns
inc
or
xchg
jecxz
cmp
add
shlb
sub
xor
cltd
das
lds
and
adc
ret
xor
pop
lret
adc
mov
decl
xchg
push
rcrl
mov
cs
mov
out
mov
out
fsubrl
sbb
addr16
lea
lea
push
aaa
int
sub
dec
inc
sahf
mov
sar
pusha
adc
mov
xor
pop
andl
insl
fwait
shll
movsl
fcmovne
mov
pop
xchg
jmp
lcall
aaa
icebp
push
push
add
jp
lock
outsb
ficoml
mov
adc
fidivs
adc
xor
rcl
ficoms
mov
loop
jno
icebp
xchg
aaa
insb
cld
adc
std
push
hlt
or
inc
sahf
mov
push
and
pop
int
rep
add
sarb
and
push
data16
mov
xchg
inc
mov
xchg
mov
mov
pop
pushf
xor
push
xchg
adc
aad
or
sbb
into
jg
sub
pop
push
inc
mov
mov
jbe
push
jmp
lret
test
sub
insl
aas
daa
icebp
adc
out
in
pop
fucomi
enter
jl
mov
popa
add
loope
stc
xchg
inc
mov
ret
not
dec
jne
shll
aas
xchg
mov
push
sbbb
mov
stc
sub
roll
sbb
push
adc
inc
mov
stos
push
jge
filds
clc
xlat
inc
pop
dec
and
add
mov
cmc
and
fldenv
jle
and
pop
pop
call
or
repz
sbb
adc
sub
in
jl
pop
mov
push
bound
fldcw
mov
mov
sbb
movsb
xchg
mov
jne
loope
mov
add
mov
in
sub
inc
cs
in
rorb
push
xchg
mov
mov
add
into
mov
push
fisttpl
sbb
daa
loopne
das
pushl
into
pop
push
stos
inc
dec
adc
lcall
ficoml
xchg
js
push
fbstp
sub
ljmp
sbb
fldt
jle
outsl
jae
ljmp
fwait
out
or
adc
mov
cmpsb
ds
push
les
scas
jns
aas
int
mov
xor
out
cmp
je
loop
inc
andl
mov
scas
xchg
mov
cmp
adc
lds
adc
mov
gs
mov
adc
add
in
pop
into
in
orb
xchg
fnstcw
jl
lret
xor
insl
xchg
add
pop
in
movsb
push
in
jno
bound
and
jne
mov
orl
and
or
gs
ret
and
dec
out
mov
movsl
icebp
int3
push
sahf
xchg
dec
pop
sbb
cs
loope
mov
je
jecxz
jnp
test
jle
add
insb
sbb
xor
cmp
cmpsb
cli
shr
sub
shlb
je
mov
adc
fnstenv
scas
cmpb
loope
cmp
call
lods
icebp
loop
iret
inc
mov
push
adc
addl
loopne
sbb
iret
pop
adc
xor
shrb
call
cmpsb
in
lea
rcrl
xor
aad
sub
jns
xor
add
sar
fcmove
jecxz
pop
aaa
scas
cmp
push
scas
inc
cmp
in
or
data16
dec
and
pop
mov
paddw
nop
or
js
cmp
cld
jne
pop
fistps
sub
mov
pop
je
popf
jle
inc
dec
repnz
fcoml
call
rcrl
xor
mov
adc
push
push
jg
test
mov
rorb
jp
mov
mov
inc
mov
seta
inc
cli
adc
xchg
gs
fisttpl
xor
add
rcl
sub
xor
xchg
mov
mov
pop
nop
hlt
je
fisttpl
in
jp
nop
mov
sub
icebp
dec
mov
cmpb
or
and
mov
push
insb
leave
pop
add
and
ret
mov
mov
xchg
cs
or
adc
je
jno
xchg
insl
add
pushl
cmp
fiaddl
fcmovb
lods
xchg
push
and
repz
pusha
shl
aas
rorl
jle
lds
leave
mov
mov
sar
divb
push
cmp
test
popf
sahf
call
lods
cld
imull
insb
mov
cld
mov
pusha
xor
sub
or
pop
cmpsb
addb
iret
mov
jo
mov
pushf
ljmp
insb
xchg
sbb
cmp
mov
push
aad
push
mov
push
jns
sub
mov
sti
repnz
loop
movsb
sbb
out
cmc
imul
dec
sub
in
outsl
aaa
pop
repnz
mov
stos
dec
orb
or
test
pop
mov
mov
cmp
negb
and
rclb
outsl
mov
js
ret
and
leave
stc
cwtl
ret
repz
in
mov
sub
mov
pop
push
dec
sub
mov
fidivrl
push
mov
pop
mov
inc
xor
ret
mov
cmp
movsb
scas
dec
hlt
inc
cmpsb
xchg
jg
sbb
stos
imul
shlb
push
mov
and
xchg
lcall
and
cwtl
mov
outsl
inc
mov
aaa
inc
dec
xchg
adc
sahf
jp
cmp
outsb
rcll
insb
pop
xchg
and
divb
mov
pop
jp
sbb
out
rcrb
xchg
mov
and
test
push
cmp
add
sub
push
mov
mov
sbb
jno
inc
sub
les
insl
jo
aam
sahf
adc
jne
das
imul
rcrb
fidivs
inc
popf
ds
bound
cltd
outsl
mov
nop
push
inc
jnp
daa
imul
xchg
sub
int3
and
ljmp
mov
in
aas
mov
push
sbb
into
aaa
sub
fistps
dec
pop
mov
outsb
aaa
push
jle
in
sbb
dec
pop
mov
inc
das
xchg
ret
arpl
cmc
or
pushf
sti
dec
lret
inc
arpl
push
add
loop
loope
cmpb
imul
or
pop
fcoml
dec
or
movl
jg
or
testb
jns
repnz
mov
cmc
and
jne
or
sbb
cwtl
xchg
push
xor
xchg
test
or
les
ret
mov
dec
out
jmp
mov
and
jno
xor
dec
dec
xchg
lock
cmp
jge
lret
out
icebp
dec
mov
out
stos
sahf
xor
scas
push
mov
ror
mov
mov
imul
in
xchg
mov
sub
cmp
mov
outsb
xor
addr16
push
fistpll
cmp
cmp
sbb
das
gs
xchg
outsb
scas
mov
cmc
cli
flds
push
pop
inc
sbb
jb
push
and
gs
pop
shll
dec
mov
mov
scas
cmpsl
orl
test
cltd
repz
ret
push
les
fimull
out
mov
xchg
inc
pusha
adc
dec
movsb
xorl
push
iret
push
call
dec
mov
iret
xor
xor
ret
mov
js
ljmp
test
jmp
pop
mov
pop
daa
xor
rorb
add
fdivl
lret
push
cmp
push
push
in
pop
inc
sbb
fs
fdivr
aaa
rcll
mov
std
sub
dec
jge
mov
rcl
or
dec
iret
push
xor
push
imul
cld
jnp
and
mov
add
ret
inc
xchg
adc
pushf
popa
fsts
add
sub
call
les
into
mov
cmp
cmp
pop
das
int
sub
jle
xor
movsb
stos
lds
in
cmp
pushf
int3
push
sbb
iret
frstor
call
pop
aas
mov
or
dec
in
js
pop
adc
dec
cmpsl
mull
lods
mov
push
or
fnstsw
xor
or
xor
xor
or
sahf
sahf
outsb
roll
sub
sub
jb
pop
dec
pop
jmp
scas
push
xchg
jg
decl
in
int3
mov
or
js
dec
dec
and
add
popa
aas
insb
mov
pop
jbe
orb
lret
lret
cwtl
out
adc
je,pt
add
xchg
inc
add
sbb
jge
jecxz
pushl
sahf
psrlw
inc
mov
orb
xor
minps
lahf
aad
mov
xchg
cmp
scas
jg
pop
dec
and
dec
or
add
and
adcb
daa
cmp
mov
fstps
cmp
push
add
cmpsl
insl
lea
scas
add
mov
dec
push
add
subl
jno
push
cmp
lods
lods
cmpb
movsb
aam
inc
or
jbe
push
lds
std
xlat
xor
add
gs
aad
cmc
in
lret
in
mov
inc
in
push
pop
jp
add
adc
mov
jno
out
and
mov
or
imul
inc
mov
jns
dec
pusha
fisttpll
iret
sti
outsl
sub
test
mov
outsb
add
dec
pop
xor
sbb
pop
popa
popf
cmp
test
loop
cmovns
add
mov
and
stc
pop
in
xchg
js
imul
negl
test
aam
push
bound
pop
pop
nop
cmc
lea
xchg
rcr
jge
ret
les
stc
cmpsl
test
in
jmp
aas
adc
cli
adc
sti
mov
mov
dec
push
int
jno
push
test
shlb
and
sbb
and
jns
sub
and
inc
pop
aam
out
popw
arpl
ret
pop
das
enter
push
mov
dec
addr16
adcl
jg
pop
cmp
notl
scas
mov
aaa
scas
push
mov
orl
pop
push
decb
inc
popf
ss
je
in
inc
push
mov
jo
fidivrs
pop
and
jo
mov
outsb
ret
push
das
pop
sbb
cmp
stc
dec
ret
int
movsl
fmuls
repz
cmp
out
push
je
outsl
mov
movsb
mov
popa
enter
push
jno
inc
push
gs
and
ljmp
mov
mov
aad
movsb
pop
int
or
or
or
repnz
push
or
cmp
mov
jbe
mov
jle
fildll
jb
add
movsl
lahf
push
mov
inc
stc
push
sbb
cli
jne
clc
add
xchg
sub
xchg
inc
jno
cmp
add
push
xchg
mov
mov
imul
imul
mov
shr
ret
cmpsb
pop
aaa
std
pushw
push
mov
pop
inc
clc
push
aas
jbe
xchg
loop
js
fstp
aas
sub
add
xchg
rclb
das
sub
mov
shlb
xlat
gs
into
lcall
push
mov
ficomps
xchg
sbb
dec
lods
popa
add
pushf
mov
push
push
imul
stos
mov
repnz
das
cmp
enter
jl
aaa
cmp
inc
lea
cmpsb
sysret
lcall
add
sub
ret
lea
pop
loop
and
insb
lcall
arpl
in
xchg
lea
addl
fwait
mov
enter
fistps
inc
adc
cli
lds
adc
shlb
inc
inc
fiaddl
jbe
push
aad
sahf
fiadds
xchg
pop
cmp
push
fdivrs
push
pop
adc
jge
ss
sbbl
in
int
dec
in
scas
cmpb
add
mov
sub
push
outsl
fimull
outsl
mov
inc
out
sub
lret
mov
fwait
out
inc
lea
lcall
push
mov
xor
imul
pushf
push
push
gs
fsubl
add
xor
popf
mov
fsubl
inc
dec
ds
push
ja
cmpsl
dec
enter
add
ret
cmc
mov
bound
pusha
in
fs
in
je
push
icebp
fcoms
push
cmp
lahf
leave
fists
in
push
jecxz
and
dec
sub
out
cmpsl
adc
pop
push
pop
stos
repz
sbb
xchg
mov
lret
pop
lods
fsubrs
dec
sti
lds
sbb
sbb
rol
test
cmc
and
fcompl
imul
insl
push
cmpsl
sub
xchg
sub
fwait
adc
cli
push
or
and
push
and
int3
mov
ljmp
iret
sti
bound
nop
scas
scas
incb
cmpsb
pop
mov
lock
or
push
jle
cmp
sub
insb
out
mov
xchg
inc
xor
mov
mov
jns
jle
nop
lods
imul
pop
mov
andb
dec
fcos
cltd
rcrb
xor
dec
sub
cmp
subps
mov
add
fldcw
and
imul
imull
mov
test
bound
stc
sub
cmc
xchg
call
and
inc
imul
dec
mov
or
mov
inc
push
mov
push
bound
fadds
lods
out
faddp
call
jno
aas
cmpb
fwait
popa
scas
sahf
mov
xchg
outsl
out
xchg
mov
cmpsb
fidivs
push
mov
in
ljmp
ficoms
int
psubusb
dec
in
mov
and
rcrb
gs
pop
and
inc
mov
xchg
inc
mov
movsl
mov
mov
mov
and
mov
imul
scas
mov
rcll
and
dec
xchg
xchg
sub
rolb
addb
inc
lods
xor
mov
mov
cld
sbb
int
xor
push
push
cmpsl
inc
addl
and
add
in
push
or
in
dec
pop
dec
fidivrl
push
push
xchg
xchg
jne
ss
jmp
push
xor
and
lcall
cld
sbb
dec
int3
insb
idivb
mov
unpckhps
out
test
inc
leave
mov
ds
mov
scas
popf
mov
xchg
add
pop
dec
rcll
adc
inc
lahf
out
cwtl
je
inc
adcb
fstl
and
iret
sub
lods
outsb
pusha
test
adc
dec
jle
rorb
mov
mov
ret
loopne
lret
adc
pop
pushf
rolb
sub
push
fistpl
or
inc
hlt
mov
sbb
pop
cli
adc
xor
mov
addb
inc
cli
push
xchg
sbb
jno
ret
int
ret
dec
cli
gs
daa
in
decb
inc
in
push
cs
lea
les
dec
xchg
std
andb
insl
test
lahf
pop
insb
sbb
sbb
movsb
shll
test
arpl
dec
fldt
cld
push
mov
fisttpll
mov
les
sbb
jge
sub
fdivrl
dec
lock
pusha
mov
and
fwait
mov
mov
add
push
loope
dec
fmull
repnz
pop
jbe
aas
and
add
push
push
and
and
imulb
sahf
daa
cli
shll
adcb
out
or
clc
fcoml
mov
sub
faddl
mov
sub
into
xchg
ficoms
cmc
xor
mov
xchg
or
pop
scas
add
daa
ja
loope
dec
xchg
sub
movsl
and
jbe
addr16
push
mov
sbb
insl
arpl
sti
inc
fcoml
outsl
xchg
and
or
stos
sbb
shl
adc
fbstp
nop
dec
imul
and
jecxz
out
repz
movsl
pop
ja
es
inc
lods
std
test
sub
ds
in
bound
adc
dec
add
mov
es
outsl
xor
int3
fstpt
icebp
push
and
sub
fisubrs
aad
adc
dec
inc
test
mov
mov
inc
push
dec
lods
shlb
sti
lsl
lcall
pushf
pop
and
mov
mov
outsl
pop
pop
sahf
rcll
adc
sbb
xor
call
or
sbb
jmp
sti
xorl
test
cwtl
mov
aam
pcmpeqw
pop
ret
inc
push
sbb
jns
xchg
stos
clc
sub
inc
pushl
cmp
in
mov
in
int3
idivb
mov
sbb
lret
mov
popf
outsb
xchg
sub
insl
mov
ljmp
sub
add
and
cmp
push
adc
std
dec
aas
pop
addr16
mov
popa
jg
data16
sti
or
scas
inc
das
inc
fcompl
cld
xchg
add
jae
mov
xchg
iret
movsb
pop
xchg
movsl
mov
inc
or
add
lea
jmp
scas
push
in
jnp
jle
int3
dec
sbb
add
sub
jb
leave
je
sti
jne
mov
adc
dec
divl
sti
bnd
popa
test
inc
pop
mov
mov
mov
out
mov
fsub
out
imul
add
fcomps
pop
pop
sub
mov
sbb
adcb
fimull
jo
fldt
out
push
aas
repnz
iret
pushf
enter
cmpsl
xchg
popa
imul
cmc
dec
jp
inc
frstor
test
push
push
cmpps
gs
push
imul
xor
xor
test
stos
outsb
xchg
fildll
jnp
cmp
outsl
clc
jno
stc
xor
jl
cli
or
pop
and
cmp
sub
mov
out
cmp
call
jg
fdivrs
sbbb
sub
pop
daa
inc
lahf
inc
rcrl
mov
lods
gs
jbe
sub
adc
mov
dec
pop
lods
mov
mov
cld
cmc
xor
rcrl
jo
push
adc
mov
idiv
jp
mov
adc
mov
pop
sub
mov
cli
sbb
add
fwait
lods
mov
fists
cmp
fisubrl
lods
sti
or
push
dec
rep
pusha
push
aas
dec
jmp
and
dec
adc
jmp
cmp
mov
stos
adc
rcr
sub
inc
adc
scas
aas
push
add
and
es
hlt
push
mov
js
sub
cmp
mov
movsl
out
sti
inc
jne
out
mov
ret
and
ljmp
or
and
mov
je
roll
xor
add
jo
loope
aas
sti
pop
xor
add
aam
lret
sub
cmc
or
cmpsb
mov
lods
push
fildll
hlt
movsb
addr16
fsubs
push
adc
jne
test
xchg
xchg
xchg
dec
shll
jne
scas
jae
inc
xor
rcr
mov
sbb
cmpsb
push
int
jne
jecxz
das
push
cmpsl
jmp
in
push
push
add
sub
mov
pop
pop
xchg
sbb
int
scas
or
cmp
or
push
jge
adc
dec
fisttpl
lahf
fstps
repnz
cmp
ficomps
insb
rcrb
mov
dec
and
sub
andl
xchg
dec
sarb
scas
sar
adc
xor
outsb
shlb
sbb
xor
cmpsb
add
add
leave
lahf
push
xchg
mov
sub
jno
lods
push
xor
mov
mov
fidivl
int3
xor
dec
jle
push
dec
aas
adc
or
mov
fwait
clc
loopne
push
push
outsl
ds
fistps
xor
pusha
mov
pop
stos
mov
mov
mov
test
roll
xor
repz
enter
scas
cmp
fwait
rcrl
std
nop
movsb
clc
popa
adc
rclb
push
and
sbb
in
ljmp
push
sbb
lret
mov
fisubrs
cmpb
pop
add
inc
mov
rcll
mov
or
push
int
adc
addl
push
dec
nop
test
js
xchg
sub
subb
int3
ljmp
fdivrs
notb
push
pop
std
add
push
daa
in
test
pop
movsb
inc
out
xor
mov
add
add
mov
and
dec
or
xor
subb
dec
xchg
fnsave
dec
mov
pop
adc
cmp
jae
icebp
or
sbb
pop
clc
int
cs
push
xor
pop
and
in
jae
insl
repz
test
movsl
mov
lret
adc
out
and
rolb
push
ret
sub
aam
pop
or
inc
cmc
mov
std
scas
into
dec
clc
lcall
xlat
pop
or
xchg
inc
out
mov
mov
imul
jae
test
mov
movsb
or
sbb
mulb
test
xchg
mov
adcl
idivb
imul
push
nop
cmp
or
out
mov
xor
add
sahf
jo
scas
mov
inc
jb
in
inc
add
jmp
pop
sub
pop
popl
cmp
movsb
sub
leave
mov
mov
mov
roll
sarb
jp
dec
add
inc
adc
lods
inc
sbb
test
sets
mov
das
cmpb
cld
ffreep
stos
ja
mov
bnd
pop
pop
arpl
cmp
sbb
cmp
loopne
les
mov
pushf
test
das
jge
inc
sahf
js
enter
mov
aad
hlt
movsl
and
call
data16
jp
stos
adc
std
jne
push
inc
sbb
and
iret
pop
adc
sub
movsl
pop
shlb
jb
ret
ljmp
leave
adc
dec
pop
test
xchg
shrb
or
cmp
jmp
push
int3
loope
cmp
jmp
sahf
int3
neg
out
mov
outsb
xchg
and
fidivrs
fiadds
scas
imul
cmp
jb
imul
pop
out
loop
sbb
jg
mov
pop
enter
cmp
and
nop
sub
pop
jp
mov
jo
sbb
outsl
stos
mov
test
mov
ss
fimull
push
ret
not
add
decb
daa
call
sub
adc
rcrl
ljmp
mov
dec
cmpsl
mov
out
leave
mov
pop
fdivrl
fwait
cmpsb
les
nop
call
mov
inc
ljmp
mov
cmp
inc
jle
fidivs
mov
mull
mov
cmp
mov
mov
sub
mov
fisubrl
imul
xor
sub
or
popf
sub
push
xchg
xchg
fucom
out
adc
jl
jo
and
test
mov
ja
cmp
cwtl
orb
lahf
mov
js
js
cld
add
cmp
loopne
adc
xor
adc
push
fwait
loop
inc
cs
lcall
and
add
add
push
scas
pop
aad
jl
mov
or
xchg
ljmp
xchg
notl
push
xchg
mov
shll
in
mov
lcall
jp
lret
add
push
push
pop
mov
xchg
fildll
jg
pop
gs
out
add
stc
dec
mov
sbb
daa
clc
gs
frstpm(287
push
bound
das
and
xchg
sbb
mov
out
insb
pop
ficompl
pop
movsb
movsl
test
in
add
push
pop
inc
mov
fadd
inc
fcoml
add
dec
xchg
cld
test
jb
add
jg
mov
pop
pop
shrb
lea
enter
jl
adc
rclb
outsb
push
xchg
cmp
dec
nop
out
jae
sahf
sti
sti
sub
pop
cmc
sub
sbb
loope
test
push
arpl
push
sub
leave
icebp
add
aaa
mov
idivb
sub
cmp
adc
xchg
scas
mov
lock
lcall
mov
mov
jbe
pop
stc
stos
hlt
repnz
cld
lret
sbb
es
bound
mov
jmp
ds
adcb
cmpsb
mov
icebp
aas
je
imul
out
mov
xlat
mov
fsub
lock
rcr
out
and
mov
xchg
out
xchg
lcall
stc
insb
and
jl
enter
cmp
pop
stc
dec
loop
inc
xchg
mov
out
xchg
and
inc
cltd
adc
mov
adc
xorb
lods
pop
dec
sbb
inc
mov
jbe
push
adc
add
dec
scas
fiaddl
inc
jbe
and
sbb
mov
dec
fstpl
ja
jno
xor
fstpt
mov
add
xor
inc
loop
pop
in
push
jg
pop
mov
pop
je
jno
pushf
push
xchg
addr16
iret
imul
xor
pop
outsb
wrmsr
lea
mov
mov
cmp
sub
mov
subl
ljmp
out
sub
fnclex
jecxz,pt
xchg
or
sub
ret
jge
jno
dec
adc
push
xchg
fldl
add
mov
jmp
push
je
mov
gs
insb
aas
movsl
adc
jbe
push
lret
jne
dec
add
out
fstl
sbb
xor
cs
mov
in
stos
gs
pop
fucomi
mov
lahf
xchg
clc
jecxz
pop
jl
mov
pop
fwait
or
imul
movsl
ja
mov
jp
adc
xor
push
mov
inc
test
into
iret
popa
mov
pop
xchg
or
push
fildll
bound
in
xchg
test
test
aam
dec
leave
ds
rcrb
sub
or
sahf
je
dec
xchg
fidivs
outsb
dec
jmp
jp
pop
jne
arpl
push
add
test
shl
lahf
stos
mov
int3
cmp
push
sbb
enter
xor
lods
or
icebp
or
jmp
div
ljmp
pop
pop
outsl
fsubrl
jne
cmc
mov
cmp
test
in
popf
lock
mov
pop
push
pop
lahf
lcall
xchg
inc
dec
mov
roll
jle
xchg
das
shrb
push
xor
loope
xor
push
xor
add
add
pushf
jo
daa
cmp
mov
stos
xor
insl
add
jp
xchg
in
mov
dec
xchg
xor
rcr
or
lock
arpl
arpl
fimull
addr16
shl
out
pop
scas
js
lcall
repnz
test
fisubl
mov
pop
sub
jo
lahf
mov
adc
cmc
xchg
and
cmpsl
inc
sub
jne
dec
mov
push
ljmp
add
imul
iret
arpl
in
js
mull
jb
addl
jne
out
xchg
negl
jg
je
adc
jg
push
lods
mov
loope
rcl
not
jmp
pop
or
cmc
dec
call
outsb
lcall
pop
pop
lea
scas
fdiv
testb
dec
sub
adc
test
fldl
mov
pop
stos
push
inc
mov
rorb
add
sub
sub
outsb
adc
or
dec
mov
clc
ret
iret
test
fldt
pop
daa
fiadds
mov
addl
mov
inc
cmp
or
call
push
sub
sub
inc
sbb
sub
into
jle
mov
mov
dec
mov
jl
scas
sub
ss
imul
jl
data16
xor
adc
cmp
lahf
jle
push
stos
shlb
inc
cmp
sbb
jo
out
ffreep
dec
jg
xchg
in
dec
add
mov
lods
pop
jnp
gs
mov
daa
fwait
dec
mov
mov
mov
dec
adc
lret
rcrl
cmc
mov
sub
into
int3
pop
movsl
ss
sbb
fstpt
mov
add
cmp
xchg
test
push
mov
cmp
stc
push
or
ss
xor
inc
pop
fldt
push
scas
loop
cld
lock
mov
jp
mov
dec
sbb
inc
lahf
fs
inc
sbb
iret
jne
jmp
pop
cmp
cmpl
xor
cli
lret
inc
aas
mov
sbb
iret
push
icebp
fcompl
in
test
mov
in
push
ds
sub
pusha
inc
adc
mov
or
dec
inc
jge
mov
cs
sti
push
lret
mov
or
xchg
mov
dec
jmp
add
mov
clc
outsl
inc
mov
sbb
outsb
sub
test
add
and
lcall
lcall
mov
jo
sbb
lea
js
lcall
mov
adc
mov
jl
and
std
int
mov
lret
pop
lret
adc
jb
cmp
jne
fst
mov
jae
lret
sbb
popa
sub
imul
mov
icebp
test
sbb
stos
lea
lret
ljmp
inc
lods
xor
fldcw
dec
cwtl
dec
and
pop
incb
repnz
cmp
ja
sub
pop
mov
in
insl
imul
cmpsl
ret
inc
push
in
pop
inc
bound
rolb
clc
and
sbb
movsl
test
push
mov
push
loope
mov
in
arpl
inc
push
jnp
jecxz
jecxz
gs
mov
subb
fbstp
adc
gs
xor
adc
and
sbb
adc
test
lret
jle
jmp
cmc
repnz
out
push
subb
jle
lcall
fistpl
add
jle
repz
push
dec
fstl
push
jbe
mov
in
mov
xchg
xchg
fdivrl
push
xchg
or
push
mov
pop
add
or
sub
imul
flds
jns
jbe
dec
and
in
in
stc
fwait
jns
push
mov
push
lea
cmpsb
repnz
js
icebp
je
or
dec
or
mov
test
pop
shlb
sahf
dec
ljmp
mov
out
jmp
inc
cmp
jae
loop
inc
in
cld
test
pop
mov
xchg
adc
mov
rcll
je
adcb
fs
xchg
fwait
into
fcoml
push
aad
mov
jg
inc
pop
cmp
sbb
mov
sti
adc
xor
cmp
fisttpll
add
test
leave
cmc
dec
xchg
inc
sbb
insb
out
rolb
scas
cmpb
ljmp
ret
xor
jno
add
jo,pn
push
sbb
leave
dec
bound
pop
ljmp
inc
stc
lea
pushf
xchg
pop
jle
dec
cwtl
orl
mov
gs
xchg
fldenv
cwtl
mov
loopne
pop
and
cmpsb
or
xchg
lahf
cs
pop
xor
xchg
jle
sbb
outsl
in
jb
xchg
mov
mov
and
lahf
aaa
xchg
fistpll
inc
pop
subb
xlat
pushf
stos
xor
mov
dec
fld
lahf
arpl
lea
and
aaa
pop
inc
pop
pop
xlat
fwait
sub
pop
ds
pop
adc
push
imul
push
push
icebp
sbb
sti
pop
mov
mov
dec
outsb
push
cs
cmc
sub
ja
mov
fidivrl
sub
pop
aam
xorb
inc
sti
repz
lds
rsm
xor
repz
or
clc
mov
ret
jbe
jno
mov
dec
push
jnp
push
std
xor
lcall
sahf
lods
dec
stc
orl
les
mov
int
test
jecxz
dec
jbe
aas
xor
inc
pop
cmpsb
and
and
adc
sahf
jmp
lcall
scas
addl
out
mov
dec
fmuls
out
les
pop
sbb
add
add
les
inc
mov
dec
lods
ljmp
pop
sub
jns
imul
lock
inc
xchg
and
out
pusha
rorl
shrl
fcmove
pop
mov
jp
cmp
mov
adc
jo
inc
mov
loopne
adc
mov
jns
mov
sub
test
je
repz
xchg
jle
insb
in
cmp
inc
imul
sbb
cs
lret
push
add
pop
gs
pop
pop
mov
xchg
shlb
dec
add
and
out
cmp
add
push
popf
fst
inc
loope
bound
popa
push
cld
add
movsb
rcll
pop
bound
fistps
aas
cmp
inc
mov
addr16
inc
pusha
mov
push
pop
mov
les
test
cmp
imul
rorl
sbb
and
lcall
mov
xor
fiadds
lods
pop
movsl
aam
jb
lahf
or
stos
mov
jecxz
push
cmc
dec
push
imul
addr16
sbb
sub
sub
repnz
dec
int
cmp
add
popa
sahf
jle
test
stos
dec
sbb
cmpsb
mov
or
cmp
ja
add
roll
sub
test
xor
hlt
cmp
mov
insb
xchg
mov
lock
aas
out
mov
sub
inc
jp
mov
rclb
sub
jo
divl
dec
push
pop
ss
cs
fidivs
lea
xchg
add
and
cmp
jns
in
les
inc
lea
fimull
push
dec
sub
xchg
mov
inc
lea
mov
orl
sub
ud2
jae
or
into
xchg
sbb
lret
push
daa
mov
adc
adc
add
sub
lods
popa
xor
lret
xor
and
adc
ret
mov
outsl
cmp
xor
int
popa
ss
sti
pop
out
cltd
pop
pop
cmc
pop
repnz
mov
sub
mov
daa
cld
mov
loop
cmp
pop
dec
adc
addr16
cmp
pop
xchg
pop
inc
sbb
dec
popf
test
jno
ljmp
cmp
add
jno
out
push
jbe
lock
sbb
xlat
jb
or
inc
insl
sub
cmp
xchg
push
xor
mov
aas
pop
dec
arpl
dec
inc
sti
cmp
jecxz
aad
fldl
in
ljmp
or
lods
cmp
pop
or
or
ss
mov
xchg
sbb
sub
sub
test
pop
xchg
out
cmpsl
fldl
gs
pop
stos
lods
pop
cmp
prefetch
jbe
jmp
inc
push
xchg
ret
or
neg
adc
cs
arpl
mov
lock
pop
and
sar
inc
sbb
mov
stos
int
arpl
pop
and
mov
add
lock
aam
lods
mov
roll
mov
je
xchg
pop
testb
xlat
pop
or
fs
mov
addl
shl
mov
xor
rcll
mov
subb
fstps
xor
hlt
jno
inc
dec
jns
cmp
sbb
arpl
scas
dec
cmpsl
xchg
mov
push
mov
outsb
sbb
scas
and
jno
stos
stos
movsl
icebp
jae
rcrl
in
jecxz
mov
inc
mov
cld
ds
loopne
pop
jno
insl
mov
push
add
fsubrl
rol
push
add
ss
fstpt
addl
scas
jne
push
addr16
jle
sub
enter
movsb
mov
jg
jecxz
sbb
mov
fsubrl
loope
test
mov
jb
pusha
shlb
push
mov
mov
stos
rorl
mov
and
aaa
aam
clc
gs
jo
cmp
loopne
imul
xor
out
jge
ror
mov
pop
sbb
jns
xor
ljmp
cmp
shll
pop
add
cld
test
fadd
xchg
fstpt
cs
mov
sbb
dec
xchg
lahf
mov
andb
inc
adc
lcall
lds
sarb
sar
pop
inc
sbb
add
push
in
rol
cmp
add
xor
push
push
sub
xchg
aad
add
inc
mov
mov
xchg
enter
gs
add
ja
cmp
xor
arpl
mov
iret
add
pusha
mov
dec
sbb
or
mov
negb
dec
xor
and
adc
pop
clc
adc
lods
imul
jno
cwtl
ss
pop
jp
fs
lea
or
cmp
sub
push
out
gs
sbb
jno
mov
dec
leave
mov
dec
xor
xor
inc
push
inc
mov
out
cmpsl
xchg
adc
cmp
pop
adc
dec
jle
mov
mov
push
loopne
movsb
xchg
aas
dec
inc
imul
pop
pusha
dec
mov
inc
test
nop
jecxz
out
fcom
popf
iret
adc
mov
test
test
mov
bound
lahf
xchg
rcrl
popa
mov
xchg
pop
std
gs
jb
in
adc
adc
mov
xchg
jmp
cwtl
push
push
add
xchg
adc
pop
jmp
inc
cmp
loope
cmp
jo
fisttps
adc
decl
cmp
push
sbb
jno
lods
xchg
adc
mov
cs
add
push
adc
movsb
lret
xchg
xor
mov
pop
call
mov
mov
call
and
test
das
gs
dec
and
mov
xchg
mov
idiv
shlb
push
int
imul
mov
inc
test
addr16
sbb
out
clc
and
sub
cmc
mov
cld
lret
push
sub
addb
enter
inc
xchg
sub
inc
mov
out
dec
js
addr16
adc
sbb
cltd
ds
movsl
xchg
add
clc
mov
add
or
fnsave
hlt
add
popa
sbb
call
mov
add
test
adc
ds
cmpsl
in
pop
jg
loope
shll
xchg
ret
add
mov
adc
lahf
push
out
movsl
sub
push
inc
std
mov
mov
std
add
or
dec
out
call
cmp
scas
outsl
ds
mov
cmpb
fcmovne
sbb
int3
or
mov
ja
jg
dec
push
jnp
dec
insb
pop
lcall
fcmove
rolb
les
lcall
out
jno
jp
pop
lahf
jl
idivl
push
jno
shrb
bound
mov
lret
sbb
mov
pop
xchg
cmpsl
jecxz
mov
or
xorl
push
ss
lea
mov
cmc
out
adc
les
mov
ret
adc
fcmovnb
jnp
push
je
push
stc
dec
jmp
or
mov
sbb
dec
add
ret
or
and
fdivs
mov
imul
add
pusha
xchg
pop
movsb
mov
sub
movsb
hlt
adc
inc
inc
data16
cld
daa
or
jns
call
orb
cmc
es
mov
mov
cmp
fstpt
push
jg,pt
pusha
lea
fcoml
test
push
jmp
mov
mov
das
mov
jp
loop
dec
sbb
loope
aam
ds
mov
dec
out
cmp
mov
mov
or
ret
dec
pop
jp
cmp
or
xchg
out
fdivr
icebp
lock
cltd
xor
push
dec
mov
or
mov
roll
loopne
xor
mov
and
push
jl
or
mov
lock
cmpsb
insl
add
aaa
xor
push
mov
add
and
xor
rorl
cwtl
cmpsl
mov
and
dec
mov
jle
hlt
add
shlb
push
int3
cmp
les
out
xchg
in
loopne
gs
pushf
iret
pop
cmpsb
sarl
cltd
pop
out
fnstenv
outsl
or
movsb
inc
or
scas
mov
fldcw
scas
xchg
test
fadd
inc
pop
aas
sub
inc
mov
cmpsb
mov
dec
imul
adc
rclb
inc
daa
and
push
sbbb
shll
push
mov
out
xor
aas
pop
or
mov
jne
dec
sub
or
out
xor
mov
sbb
push
pushf
sub
pop
dec
xchg
push
fadds
or
and
push
mulb
push
sbb
movsl
test
and
xor
sbb
sub
jno
mov
pop
shll
dec
inc
sbb
or
add
and
or
imul
mov
add
sub
add
repz
fwait
das
call
mov
test
clc
add
out
or
jb
lock
sbbl
inc
or
mov
push
and
jne
test
push
sub
std
test
jne
in
jecxz
push
lahf
xorb
jmp
iret
sbb
mov
add
sub
mov
and
xchg
ljmp
push
std
out
imul
push
iret
rorl
fs
jbe
mov
add
sarb
adcb
lahf
loop,pt
jo
dec
xor
leave
cmpsb
aad
jmp
mov
in
add
arpl
ss
shrl
sub
jb
dec
out
inc
ds
jno
dec
adc
repz
ficomps
adc
or
add
leave
or
jnp
cmp
stos
imul
fstl
mov
scas
lret
clc
push
clc
mov
cmp
dec
push
shl
pop
bound
out
aaa
cltd
lods
jb
or
adc
add
out
cmpsl
xor
mov
mov
pop
lret
imulb
cmp
dec
push
cmpsl
ret
dec
dec
lret
mov
and
pop
or
jb
jl
xchg
xor
icebp
cmc
push
negb
xor
shld
mov
cld
push
mov
hlt
loopne
out
or
mov
xchg
andl
ss
out
test
mov
addr16
imul
jnp
daa
in
push
scas
cmpsb
fsubp
into
cmpsb
js
jae
push
pusha
out
cmp
ficoml
aam
lret
lds
sbb
test
pushw
imul
stos
out
imul
cld
movb
sbb
pop
lahf
test
dec
push
loop
pop
mov
scas
xchg
enter
push
arpl
fcom
mov
jbe
inc
icebp
into
xchg
fcoms
jno
jo
in
fldcw
cmc
dec
out
cmp
into
lods
mov
sti
lret
xlat
lods
and
add
cmpsb
mov
das
ljmp
or
adc
loop
out
iret
roll
pop
icebp
adc
out
mov
movsb
inc
jle
les
pop
ret
cwtl
mov
jnp
and
adc
dec
xor
mov
cmpsb
xchg
ror
sub
pop
daa
push
jo
dec
repz
jnp
pop
test
hlt
dec
outsl
sbb
xor
bound
mov
cld
xor
in
mov
subb
or
jmp
xchg
out
rolb
push
lea
inc
mov
in
mov
shrb
in
add
popl
pop
iret
enter
cmc
push
sub
roll
rcrb
icebp
mov
je
stos
fs
into
inc
jle
ret
daa
push
jnp
cmp
sahf
nop
in
adc
mov
sbb
mov
jl
jnp
jae
push
fistps
mov
jg
std
mov
mov
jo
cmc
jno
mov
cld
imulb
cmp
jae
adc
stos
pop
arpl
sbb
jp
cltd
inc
cwtl
bound
aam
inc
ja
push
stc
pushf
faddl
mov
addr16
lds
dec
stos
push
outsl
in
or
mov
mov
imul
sbb
movsb
repz
stos
mov
cmp
sbb
insb
pop
mov
ds
mov
mov
imul
dec
lcall
inc
sbb
leave
xchg
sbb
mov
rcrl
sub
cwtl
repnz
les
xchg
jecxz
push
out
or
rclb
enter
out
sub
lret
push
jl
insb
clc
adc
push
add
mov
jg
mov
mov
pop
scas
dec
roll
pop
rcl
xchg
lcall
mov
inc
ret
sbb
stos
rcr
push
adc
mov
push
xchg
out
mov
xor
in
das
dec
pusha
sub
jo
test
loopne
sbb
jp
jp
dec
mov
jne
lret
push
pop
sbb
popa
push
mov
hlt
fs
mov
cmpsl
sbb
addr16
cld
adc
pop
push
es
call
mov
addl
jae
inc
notb
test
xor
mov
fstl
xlat
aad
jno
sbb
pop
outsb
xchg
cmp
sahf
daa
push
bound
nop
push
imul
int
call
imul
and
adc
add
inc
iret
push
ret
cmpsb
sub
lret
adc
fsubs
mov
push
ss
adc
jp
add
aam
mov
stos
add
jbe
jo
aas
mov
call
fldenv
push
mov
sbb
inc
sbbb
sub
lods
rcl
out
mov
sub
or
mov
pop
jbe
cmp
lahf
les
repz
or
jl
push
dec
sbb
pop
inc
nop
cmpsb
aaa
push
hlt
cmp
cli
cwtl
jg
lods
movsb
repnz
inc
cmp
mov
aad
inc
insl
pop
fistps
push
incb
orl
dec
stc
mov
pop
es
aad
mov
sbb
and
das
in
push
enter
leave
sahf
or
clc
sbb
and
mov
push
xchg
shlb
in
xchg
insl
aas
mov
roll
jnp
cmp
sub
cmp
xor
cmpsb
les
andb
rorl
subl
pop
or
insb
mov
mov
add
mov
mov
mov
cmp
xlat
les
jecxz
sub
pop
enter
mov
mov
fmull
xchg
in
imul
xorb
outsl
bound
inc
subb
in
or
mov
aaa
cmp
inc
mov
roll
lock
je
fxtract
std
test
cs
pop
sbb
adc
out
popf
imul
in
call
addr16
je
out
icebp
pop
dec
lods
cmpsb
sbb
jnp
loope
xchg
sub
popf
pop
pop
out
fwait
pop
cmp
outsl
leave
and
negl
push
jb
dec
xchg
and
add
push
pop
jg
add
xor
lock
or
push
cli
sbb
mov
test
leave
hlt
popa
mov
xchg
fldenv
cmpl
fwait
adc
push
sti
icebp
movsl
pop
xchg
into
scas
out
andl
popf
push
mov
pop
rorb
lret
cmc
mov
mov
jmp
jp
pop
dec
jge
test
dec
pushf
hlt
mov
lret
cwtl
adc
pop
inc
xchg
dec
xlat
jne
insl
out
xchg
in
mov
shrl
sub
and
daa
pop
pop
jmp
dec
sbb
jb
icebp
mov
lods
or
push
lahf
imul
mov
cli
filds
in
dec
xchg
test
popa
sub
cltd
pusha
lods
stc
dec
cmp
pop
dec
jle
xchg
adc
sub
push
fdivr
jecxz
mov
jle
pop
lods
jle
dec
jmp
les
adc
xchg
dec
fldl
and
inc
xchg
in
inc
insl
decb
in
jnp
int3
ljmp
addr16
loope
push
loop
dec
fisttpl
xor
clc
xchg
addr16
scas
xor
enter
xchg
cmpsl
jp
fidivrs
std
and
std
and
testl
cwtl
lods
jp
lock
xchg
dec
add
test
pop
stc
mov
jo
push
sbb
aam
test
movaps
int3
push
outsl
cld
ja
int3
mov
lock
cmp
flds
xchg
dec
das
into
pop
std
out
mov
adc
and
movsb
mov
out
cmp
ds
push
inc
test
gs
imul
cmp
sahf
cmpsb
jle,pt
sbb
fwait
jne
ljmp
adc
mov
and
mov
movsl
mov
insl
pop
in
inc
add
sahf
cmp
lcall
shll
push
or
mov
mov
hlt
pop
dec
leave
rorl
clc
push
aaa
ret
jecxz
mov
lcall
add
stos
pop
icebp
lahf
enter
sub
mov
scas
lret
mov
fcomps
inc
xchg
add
and
cmp
or
adc
push
imul
scas
pop
lret
jecxz
push
inc
nop
or
repnz
jmp
stos
int
adcb
loopne
fiadds
loopew
mov
adc
hlt
cs
std
jg
fisubs
call
xlat
add
sub
loop
adc
call
dec
rol
mov
jmp
sub
add
jnp
hlt
pop
sbb
xor
pop
mov
into
sub
sub
mov
call
hlt
pop
mov
cmp
pop
aam
adc
sbb
sbb
mov
push
bound
push
push
adc
xchg
add
scas
mov
xor
mov
xchg
xchg
dec
pop
test
xor
cmp
cmp
loopne
out
add
aad
add
fcmovnb
jmp
scas
jmp
pop
fucom
or
into
mov
pop
cmp
mov
jp
insl
push
mov
mov
dec
xor
mov
adc
scas
movb
dec
mov
lea
cld
mov
mov
imul
mov
jo
jo
clc
xor
and
test
pushf
pop
leave
or
lahf
testb
mov
popa
insl
push
std
cs
push
jae
mov
adc
pop
sbb
popl
xor
call
pop
roll
and
arpl
test
iret
mov
mov
jle
mov
inc
int
nop
gs
add
or
or
pop
loopne
xchg
mov
lock
cltd
xlat
flds
sbb
or
dec
sbb
jle
dec
es
or
xchg
and
jae
test
in
pop
sbb
aas
mov
mulb
movsl
mov
and
jecxz
out
cmp
or
jb
cmp
inc
mov
pop
xchg
into
shll
xchg
cmp
xchg
mov
leave
push
in
sbb
mov
mov
iret
adc
or
roll
push
subb
cmpsl
or
push
mov
fstpl
ljmp
dec
je
inc
fmuls
jbe
xchg
imul
or
cwtl
cmc
stc
or
xchg
mov
adc
cld
idivb
je
lret
xchg
and
test
in
jge
push
adc
pushf
repz
lds
in
mov
push
cmp
lcall
cmp
lcall
cmc
cmp
jmp
dec
fisubrl
add
ja
or
les
pop
es
push
sbb
push
xor
or
fs
push
pop
rclb
mov
or
add
xchg
fists
mov
push
push
jbe
mov
push
mov
jl
aam
je
pop
xor
jnp
into
jb
mov
mov
xchg
movsb
or
pop
and
dec
or
pop
or
stos
out
or
mov
xor
movsl
rorl
jbe
push
dec
aam
int
loopne
lods
dec
ljmp
dec
or
or
stc
dec
fld1
es
mov
ljmp
in
push
nop
push
outsb
lea
mov
sub
adc
loop
out
adc
inc
jne
push
cmp
js
adc
xchg
shll
movsl
push
sub
loope
filds
mov
jl
lea
or
dec
and
scas
pop
and
xor
in
mov
xor
xor
sub
sub
xor
lods
or
dec
into
push
cmp
scas
sahf
arpl
sub
jbe
mov
call
sbb
jnp
mov
fisubrs
out
in
and
hlt
loop
adc
cmp
jle
mov
sti
and
or
jg
dec
popa
mov
jbe
sub
xchg
xor
pusha
jne
xchg
aaa
in
out
nop
cs
mov
add
mov
mov
out
or
mov
ret
xchg
jecxz
scas
popa
gs
out
cmc
xor
jmp
push
mov
jg
jge
pusha
mov
sub
cmpsb
mov
cld
lcall
cmp
inc
shll
lods
stc
jno
jae
push
js
das
pop
mov
and
inc
dec
popf
imul
stos
xor
arpl
nop
push
jno
lods
and
fcomps
daa
decb
push
xlat
sub
mov
lods
pop
enter
pop
xchg
stos
lock
xchg
jb
jge
in
cwtl
xor
fnstcw
arpl
cmpsb
push
daa
cmpsb
inc
je
pop
and
fwait
test
nop
ficoml
cmpsb
mov
adc
xchg
cmp
in
mov
icebp
push
push
mov
or
mov
adc
jle
add
ret
in
nop
adc
in
cmp
mov
push
stc
push
mov
das
repnz
add
fiadds
int3
jp
lret
cli
push
subb
cwtl
push
pop
outsb
data16
scas
mov
inc
pop
xchg
or
ljmp
cmp
push
pop
call
stos
fdivrs
mov
mov
sbb
xor
gs
push
mov
dec
stos
mov
add
divl
scas
or
and
fmul
fisttpl
je
mov
arpl
xchg
sbb
and
es
mov
sub
scas
insl
jg
addr16
jp
mov
mov
or
ja
xchg
cmp
pop
dec
xchg
lea
out
imul
add
xchg
test
mov
sti
xor
sbb
in
add
inc
mov
add
mov
mov
loope
add
push
movsb
dec
push
push
pop
aad
mov
movl
in
jnp
pushf
mov
xchg
fstpl
or
int
in
dec
xchg
pop
or
or
adc
scas
xchg
aas
push
push
adc
and
cmp
jmp
mov
aad
adc
iret
in
dec
jb
mov
adc
mov
push
push
sbb
cwtl
mov
sbb
movsl
sti
jmp
mov
xor
mov
cs
and
pushf
mov
pop
ja
mov
sub
bound
fadds
clc
mov
xchg
pop
mov
xchg
sub
bound
jp
popa
sub
jb
loope
inc
stc
mov
insb
in
nop
and
add
jecxz
fwait
jbe
scas
mov
push
cmpsb
sub
xor
pop
inc
mov
int
outsl
mov
add
cli
int
jno
pop
enter
loop
dec
or
xchg
lahf
pop
movsb
int3
mov
cli
pop
imulb
add
cmp
stos
outsb
inc
xchg
insb
inc
lahf
mov
std
push
push
and
dec
in
jb
in
pop
lret
out
mov
mov
push
mov
fisttps
push
push
scas
pop
cmp
in
push
sbb
xchg
shr
sbb
in
leave
aaa
scas
filds
jl
pusha
lret
pop
lret
cwtl
and
fwait
in
xor
mov
addr16
faddp
repz
sahf
and
lret
test
pop
test
pop
pop
nop
xchg
cmp
push
aam
pop
or
in
pop
jb
sbb
jne
out
sub
andl
call
pop
in
in
mov
into
pop
rorb
pop
pop
rcll
inc
dec
pop
jne
mov
in
mov
inc
jmp
out
test
into
mov
fs
stos
and
mov
jl
adc
cs
xor
xchg
repnz
pop
cli
stos
ret
rcll
sub
pop
and
mov
xor
loope
add
inc
pop
pop
nop
popa
dec
xchg
pop
add
imul
pop
xchg
scas
fldl
jle
std
jae
mov
cmp
call
adc
mov
mov
or
mov
mov
js
mov
adc
dec
mov
mov
inc
clc
xchg
push
adc
dec
shl
xchg
lods
mov
push
dec
shrb
cmp
data16
dec
jg
add
xlat
test
scas
mov
repnz
das
mov
bound
add
aaa
or
xor
xor
daa
and
popf
push
add
out
inc
add
test
dec
repz
roll
dec
mov
test
pop
push
ret
sti
add
call
rcrb
movsl
adc
lea
xor
push
jmp
mov
pop
andl
fcmovnb
lods
test
mov
repz
xchg
je
jge
pop
cs
stc
pop
loop
xchg
or
add
push
ljmp
dec
jb
push
pop
xlat
pushf
inc
jne
lock
test
mov
adc
mov
inc
ds
stos
mov
cmpl
push
pop
push
cmp
fsubp
enter
or
sahf
outsl
movsb
inc
pop
cmp
scas
or
mov
pusha
sti
inc
or
movsb
in
jne
cwtl
clc
dec
sub
push
inc
jmp
mov
mov
inc
jle
iret
fiaddl
push
adc
pop
sub
xchg
sbb
or
pop
or
sbb
clc
jbe
cmpsl
mulb
fisubl
out
ljmp
inc
scas
cmpsb
jg
add
shlb
lret
in
scas
inc
mov
pop
aam
addr16
push
add
lcall
or
or
test
or
mov
lcall
jmp
fdiv
aad
aaa
std
xchg
gs
mov
add
lcall
inc
adc
or
jbe
mov
pop
sbb
leave
add
nop
mov
test
and
fcmove
add
ja
mov
pop
fidivrl
and
pop
pop
mov
xor
jno
test
jo
mov
pminsw
popa
ss
lcall
ljmp
sub
lret
push
gs
push
and
popf
sbbl
dec
xorb
jns
sub
and
mov
aad
cmpsl
fnsave
movsb
or
dec
test
jno
jle
cmpsl
xor
out
sub
and
or
lock
into
dec
push
jmp
jnp
mov
out
add
or
mov
mov
inc
add
cmpsl
cld
orb
dec
mov
fldpi
mov
fildll
or
mov
jb
lock
mov
and
xchg
mov
fucomp
jo
lcall
adc
xor
xor
sbb
stos
adc
popa
jp
adc
iret
fsubrs
or
xor
int
mov
mov
loop
pop
xchg
outsl
pop
or
lcall
jl
xor
jmp
fwait
cmp
and
adc
dec
lods
mov
je
imulb
pop
cmpl
push
aad
pushf
push
sahf
xchg
ffree
jbe
jg
mov
jge
cmp
shll
cmpsl
xchg
dec
ds
jl
xor
add
es
jo
sub
leave
jb
andl
inc
xor
cmpl
andb
enter
xchg
jbe
or
fsubrp
pop
xchg
cmpsb
dec
mov
add
and
fwait
push
jmp
xlat
mov
jns
sbbl
and
and
inc
sub
enter
add
sbb
fnsave
and
jnp
cs
sub
dec
xor
mov
fs
aaa
roll
push
sub
repnz
scas
pop
jns
stos
iret
and
jnp
insl
xor
xlat
enter
leave
add
cs
push
jecxz
mov
xchg
and
mov
pusha
xor
add
shlb
stc
es
and
push
out
ljmp
sbb
leave
leave
leave
adc
scas
fabs
out
add
nop
into
xchg
push
ficomps
xlat
pop
lret
mov
out
add
idivb
cmp
mov
sarl
es
call
adc
mov
jle
cld
mov
fprem1
sub
popa
jl
das
pop
or
dec
pop
xor
into
insb
and
or
jne
hlt
ret
out
fmul
out
mov
add
rcl
shr
iret
mov
add
cmp
cmp
adc
mov
pop
sbb
dec
jae
inc
sahf
ret
add
clc
gs
loopne
movq
loop
mov
aas
fidivs
mov
inc
shll
lret
add
out
mov
into
add
adc
and
out
mov
jo
sbb
leave
in
pop
xor
dec
jb
test
sub
sub
fsubl
sbb
in
inc
cltd
xor
sbb
icebp
hlt
cltd
dec
scas
call
push
xchg
or
mov
imul
nop
sti
mov
lods
jl
js
cmc
into
adc
push
jecxz
mov
inc
out
inc
pop
dec
jno
cmpsl
mov
cmp
ret
xchg
fidivrs
imul
in
stos
cmc
lahf
or
jmp
push
xchg
sbb
add
inc
popa
jmp
dec
push
sbb
test
xor
rorb
inc
nop
jle
xor
flds
xor
push
aaa
bound
sub
adc
js
insb
adc
stos
mov
bound
mov
ljmp
xor
xlat
dec
sub
fs
adc
loop
xor
xchg
inc
xor
and
insb
push
fildl
outsl
mov
inc
fisttpll
jge
add
int3
jecxz
pop
test
sbb
bound
sti
xchg
and
loopne
inc
mov
mov
push
gs
pop
mov
or
inc
neg
push
cltd
shl
inc
and
mov
into
sbb
xchg
push
adc
sub
mov
xor
and
mov
cmp
xchg
xchg
mov
xchg
outsl
mov
and
cmp
outsb
xor
enter
inc
add
shll
or
and
mov
jne
jno
adc
sub
mov
cli
cmpsl
repnz
cmpsb
dec
ja
xchg
pop
in
jl
lods
or
jp
inc
repz
push
sti
orw
xor
pushf
lahf
jae
std
xor
mov
ds
pop
cmpsl
rdpmc
icebp
add
jno
or
bound
sub
scas
dec
mov
adc
mov
imul
aas
xchg
mov
push
cld
aam
push
sbbl
push
adc
mov
sbb
xchg
sbb
ret
ret
cmp
jnp
or
jae
xchg
jl
movsb
mov
mov
add
mov
and
lds
xchg
cmp
add
pop
cmpb
jge
cmp
scas
sub
sub
jo
xchg
and
mov
das
int
dec
cmpsb
and
mov
adc
sub
loope
mov
pushf
mov
lods
sbb
mov
mov
hlt
stc
data16
xchg
jp
cmpsb
ret
and
adc
aas
ret
jle
stos
fcoms
mov
and
cmpsl
hlt
mov
lods
jbe
and
std
inc
jge
movsb
mov
stos
sub
cli
cmp
ret
arpl
jmp
cmp
sub
inc
imul
add
jns
push
mov
jge
in
mov
sbb
mov
movups
enter
pop
fldl
pop
cmp
or
shl
mov
mov
cltd
rorb
or
imul
xchg
mov
push
or
xor
jle
mov
fcomi
or
dec
push
push
or
mov
loope
loope
notl
ret
or
lds
push
out
jl
xchg
ret
pusha
push
and
jbe
stos
lods
test
cmpsb
push
out
mov
dec
mov
fmul
lcall
xor
inc
jns
stos
jle
mov
jle
jle
jne
dec
mov
add
mov
xor
xor
inc
push
inc
jle
insl
jmp
stc
xor
ret
push
sub
sbb
andl
xlat
js
xlat
sub
cmp
mov
rclb
ss
pop
cmp
ret
or
pop
push
fdivrl
insl
mov
lods
mov
shll
hlt
jmp
pop
mov
sub
sbb
icebp
push
sub
sbb
cmp
add
jp
or
push
clc
or
push
jae
popa
test
jae
in
add
daa
mov
xlat
jmp
xchg
es
dec
repz
data16
push
mov
stc
adc
jp
les
ret
sahf
xorb
rolb
shll
subb
in
sub
inc
ds
cld
in
jmp
lock
mov
rorb
imul
or
sub
scas
push
loope
sbb
xor
add
out
mov
pop
cli
js
sbb
test
aad
lret
push
push
dec
xchg
lods
xchg
test
push
in
cmp
pop
sub
xchg
or
es
loop
mov
mov
dec
jnp
ficompl
mov
repz
xor
adc
mov
jge
mov
jl
dec
fwait
addr16
jbe
adc
mov
jae
clc
mov
ljmp
loop
xor
mov
cs
jo
mov
jg
mov
adc
pop
or
dec
out
insl
xchg
ror
mov
mov
jnp
push
outsl
outsl
ffree
dec
sub
push
inc
sub
adc
loope
pop
test
dec
idivl
cltd
test
ja
cld
test
push
repnz
inc
out
sub
incb
test
test
into
add
add
fidivl
mov
jg
sub
mov
add
int3
das
je
fistpl
mov
jne
lods
add
rcrl
into
aad
aad
pop
push
out
cwtl
aas
enter
ljmp
and
pushf
je
shll
fadds
int
fistpl
and
int3
fs
jle
addr16
pop
call
insb
mov
scas
scas
sub
cmpsb
mov
das
ds
out
jbe
mov
mov
ret
ret
sub
xor
imul
pushf
dec
cmp
aas
dec
pop
add
push
dec
jo
xor
nop
call
xor
sbb
adc
push
mov
mov
xchg
sbb
cld
inc
add
jge
jl
inc
xchg
or
push
adc
push
pusha
push
mov
xor
push
loop
pop
adc
fistps
dec
push
push
mov
inc
mov
dec
sub
push
test
sbb
out
leave
xor
xchg
jae
idivb
aad
pop
adc
jne
add
mov
stos
out
mov
add
xor
or
mov
sbb
clc
pop
js
push
pop
inc
and
stc
lock
iret
jno
sub
cli
arpl
lcall
int
sahf
mov
fsubrs
mov
jae
xchg
aas
mov
mov
jle
sub
std
sub
add
rcrb
icebp
enter
mov
or
outsb
dec
jbe
pop
lahf
jbe
push
dec
stos
es
imul
iret
movsb
push
xchg
ret
sbb
std
pop
test
fs
jnp
mov
push
sti
mov
das
test
dec
push
push
inc
cmpsb
in
pop
mov
inc
roll
mov
ret
fs
xor
scas
loope
inc
aaa
stos
cld
pop
rolb
adc
mov
addr16
out
dec
inc
imul
cmp
mov
aas
lock
mov
xchg
aad
sub
outsb
mov
mov
mov
mov
negb
jns
add
repnz
lret
push
mov
jmp
push
lret
ss
bound
je
adc
imul
mov
mov
mov
push
in
mov
loop
add
insl
sub
push
jmp
flds
lahf
and
mov
outsl
imul
push
sub
sti
sbb
out
adc
test
and
in
fdivrl
incl
aaa
sbb
push
xor
jge
ret
js
scas
sbb
test
sub
xor
jb
fisttps
jle
idivl
sbb
fwait
loopne
out
jmp
loop
dec
mov
jbe
sub
xor
loop
lods
lahf
jns
pop
xchg
pusha
test
shll
lcall
add
in
push
jbe
orb
or
jle
mov
arpl
sbbl
xchg
push
cld
push
movsl
jecxz
adc
hlt
fstl
mov
sub
jmp
cmp
jle
mov
sub
inc
lods
lret
in
fildll
shl
outsb
shlb
cmp
mov
cwtl
add
xchg
pop
popa
movsl
lds
inc
cli
xchg
mov
adc
dec
popf
je
jbe
aad
mov
jns
insb
pop
sub
mov
stc
nop
in
mov
cmp
mov
push
and
int3
adc
jmp
mov
mov
lret
mov
inc
xor
adc
ljmp
adc
add
stc
sarb
mov
xor
xor
mov
add
jmp
fscale
jb
rcrl
dec
inc
mov
repz
es
adc
dec
div
and
push
dec
js
lods
pop
jno
xchg
lcall
mov
or
sahf
push
and
xor
pop
ljmp
data16
pop
dec
mov
jno
inc
in
icebp
stos
push
xor
iret
mov
mov
xchg
fisttpl
ret
lds
arpl
mov
adc
rcrb
sbb
scas
fldenv
gs
inc
aad
mov
push
call
hlt
shr
ja
leave
pop
ret
stc
or
movsb
imul
pop
cltd
mov
add
mov
mov
jmp
ret
mov
or
ja
xor
or
push
insl
les
aad
mov
repnz
mov
das
daa
jecxz
into
rclb
dec
cs
cmp
lret
push
cs
pop
js
mov
dec
jo
in
mov
lock
inc
or
bound
mov
jmp
test
popa
sti
sub
mov
sbb
cmc
pop
sub
negb
in
mov
leave
rcrl
aam
mov
nop
clc
lret
sub
hlt
bound
dec
adc
dec
in
sti
cmp
jo
push
sbbb
out
mov
insl
mov
jbe
jmp
lret
jne
mov
pop
mov
add
jbe
test
in
sub
dec
enter
lock
rcrb
test
int
imul
cltd
in
insb
cmp
mov
adc
out
mov
xchg
stos
jnp
das
cmpsl
cmp
imull
mov
jl
cmc
ss
fsubl
inc
ret
mov
xchg
or
mov
or
lods
xlat
or
pop
fdivr
ljmp
add
xchg
xor
xchg
cli
loope
enter
push
sbb
test
shlb
dec
aas
sub
sbb
in
mov
sub
push
pop
mov
movq
lock
sahf
xchg
push
adcl
add
inc
stos
push
jb
sub
ljmp
add
lret
adc
push
xor
les
into
and
fwait
repnz
sbb
loopne
mov
scas
and
sub
pop
popf
push
adc
xchg
mov
movsl
mov
adc
stc
stc
xor
std
loopne
mov
mov
jb
mov
sub
test
shl
or
outsl
jle
test
stc
dec
xchg
cs
jecxz
push
movsb
bound
mov
test
scas
push
mov
adc
fidivs
jns
adc
iret
or
dec
js
add
inc
inc
dec
cmp
rcl
mov
push
xor
daa
rep
cmp
pop
daa
cmp
lock
repnz
xor
lods
dec
push
inc
cs
adc
insl
mov
cmc
fisttps
arpl
and
jae
incb
jne
out
cltd
ljmp
movsb
loopne
push
push
mov
and
dec
pop
adc
inc
rclb
push
push
stos
les
test
xor
je
jne
xlat
ret
add
sub
dec
cmp
add
sbb
adc
xchg
popf
lds
imul
jl
fucom
cmp
lahf
cmpsb
cmp
loopne
or
cmc
jg
out
repnz
pop
xchg
inc
xor
cs
lds
repnz
call
mov
gs
mov
mov
rorl
movsl
fists
mov
cs
adc
rcll
pop
ror
repnz
xor
cltd
sbb
ja
orb
stc
test
mov
mov
aaa
push
xor
sbbl
sbb
xor
fdivrs
sbb
xchg
cmpsb
gs
nop
popa
mov
leave
inc
inc
fisttpll
adcb
jp
pushf
fs
jo
mov
lods
inc
pop
or
inc
subl
mov
dec
dec
call
jge,pn
xchg
neg
cmc
xchg
out
push
mov
add
mov
and
jmp
inc
cmp
push
xchg
cwtl
cli
pop
shlb
lahf
jp
rcll
leave
push
in
push
mov
adc
cmp
fadds
inc
cli
push
scas
jo
fisttpl
lock
das
xor
cmp
stos
dec
imul
stos
lock
popa
fbld
test
test
mov
outsb
inc
in
xchg
dec
jns
mov
xor
xor
out
fcmovbe
xor
sub
pop
jno,pt
lea
or
mov
pop
inc
xor
pusha
inc
push
in
cmc
dec
out
faddl
mov
popa
pop
mov
jne
cld
jne
add
cmp
aaa
lcall
loope
retw
xor
imul
stos
mov
sub
faddp
xor
fadd
out
sbb
sub
mov
in
andb
and
movsb
sbb
and
or
cmc
mov
inc
jge
imul
scas
pop
pop
mov
psubusb
je
push
inc
or
mov
or
xor
mov
mov
or
push
inc
mov
cmp
cmp
dec
arpl
cmpsl
les
rolb
lret
push
fnstcw
sbb
sbb
xlat
leave
xchg
cmp
lock
int
lods
lahf
dec
pop
xchg
je
mov
xor
roll
dec
and
negb
xchg
xchg
cmpsb
mov
inc
inc
dec
cwtl
and
out
xchg
pusha
fcmovbe
or
test
call
dec
inc
mov
lock
inc
sub
hlt
mov
inc
xor
push
dec
and
lret
mov
insl
or
sbb
mov
dec
hlt
jne
jl
bswap
movsb
ljmp
mov
and
fisttps
pop
xor
mov
sub
cmp
ss
pop
and
iret
mov
js
ljmp
jl
jmp
pop
mov
sahf
pop
imul
push
out
enter
outsl
jl
std
xor
pop
loope
test
mov
sbb
jnp
cli
aam
call
xchg
shll
xor
cli
cmpsb
in
into
dec
jl
jg
mov
out
orb
xchg
push
aad
sti
out
pushf
mov
loopne
add
mov
aam
or
clc
int
dec
out
xchg
mov
inc
inc
or
fmuls
add
push
mov
mov
clc
loopne
xchg
repz
cmp
mov
lods
inc
mov
xchg
notl
pop
jne
jg
dec
repnz
inc
decb
insb
mov
or
push
adc
push
rcll
pushf
inc
cmp
push
repnz
mov
push
push
lds
adcb
jecxz
add
stos
enter
xor
aam
mov
xor
adc
in
or
xchg
xlat
mov
iret
push
fwait
jecxz
jo
addr16
push
call
xchg
add
int
outsl
jl
sbb
push
pop
and
mov
jno
xchg
icebp
repnz
int3
cmp
mov
add
rolb
mov
pusha
jae
stc
shrl
repnz
add
mov
pop
icebp
cli
xchg
les
push
mov
push
cmp
test
jno
sub
ret
xor
jno
int
test
xchg
cmpsl
sub
cmpsb
push
clc
xorl
sbb
dec
mov
jmp
xchg
shl
mov
dec
imulb
rcll
loope
in
popf
jne
iret
fs
decl
mov
pop
mov
aad
mov
and
mov
lods
sub
sub
mov
mov
mov
cltd
add
ds
pop
xor
dec
outsl
lret
push
mov
addb
popa
js
jno
repnz
sub
gs
ret
push
push
mov
in
cld
mov
in
push
lds
je
fisttps
mov
jecxz
dec
in
in
sbb
mov
ds
adc
cld
je
gs
xor
and
jne
add
scas
xor
push
scas
aas
idivb
sub
aam
xor
inc
sub
xor
adc
mov
insb
dec
dec
adc
adc
fstpl
dec
fcomps
push
jne
sub
data16
add
mov
adc
xchg
icebp
nop
rolb
xorps
jb
cli
sbb
cmpb
pop
fdiv
xor
rorb
repz
jecxz
jge
pop
adc
mov
adc
add
cwtl
shl
nop
sub
ss
jge
pop
xchg
xchg
adc
ja
push
pop
repz
sbb
mov
ds
aam
or
jns
fistps
jbe
insl
lods
rorl
das
add
jp
sbb
cmpsb
repnz
push
sbb
shr
ret
hlt
out
mov
push
adc
aad
into
push
cmpsl
hlt
in
insl
loope
in
and
cmpb
fwait
cltd
mov
rcrb
and
adc
shl
fidivl
filds
sbb
mov
mov
test
push
adc
aam
ljmp
inc
sbb
push
fwait
popf
mov
shrb
cld
jp
clc
sub
jecxz
jmp
cli
add
dec
xchg
xchg
fistl
cltd
rcrl
std
mov
cmc
xor
minps
stos
pop
aas
add
push
mov
adc
aaa
pop
mov
rcll
dec
mov
imul
js
ds
mov
mov
or
xchg
jnp
xor
mov
mov
sbb
ss
repnz
call
cld
icebp
cmp
pop
jmp
enter
sub
repz
and
aam
lcall
lret
repz
pop
out
adc
inc
and
gs
ss
jp
sub
js
sbb
cmc
push
sbb
dec
int
mov
sbb
fwait
mov
bound
lret
mov
pushl
jp
cmpsl
cli
jo
testb
mov
test
pop
shll
roll
cmp
adc
adc
push
jle
cmc
jns
push
dec
leave
out
cli
push
jnp
jnp
sbb
dec
std
es
mov
stc
aam
lret
fstp
xchg
stc
outsl
dec
dec
test
into
or
andb
call
push
sbb
rcrb
loop
roll
jnp
xor
jbe
push
insb
insl
mov
xchg
cmpsl
sub
pop
ss
in
mov
dec
fcmovnb
mov
insb
or
mov
stos
and
adc
mov
xor
dec
mov
push
jp
inc
mov
or
inc
cli
int3
push
arpl
jl
lret
mov
int
xor
fneni(8087
insl
popa
fiadds
xchg
sbb
and
imul
xor
fsubrl
out
dec
in
sarb
data16
ficomps
dec
js
mov
shlb
cs
popf
lahf
cmp
sub
mov
pusha
dec
cmc
iret
ud2
cmp
test
int3
cld
cmp
cmpsl
xorb
dec
jo
cmp
pop
mov
mov
push
push
js
jns
repz
sbb
orb
movsl
xlat
roll
movsb
outsb
or
cmpsb
jbe
mov
sub
sub
shll
mov
xor
cli
dec
push
ja
inc
aas
sub
jb
cmp
xchg
sbb
repz
push
inc
nop
aam
jl
and
mov
test
mov
fldenv
lods
int
stc
cmp
movsl
mov
sahf
sbb
xchg
or
push
add
lcall
cwtl
dec
clc
negl
ljmp
xor
mov
nop
add
rorl
pop
sbb
stos
fistpll
or
lret
xlat
fnsave
das
gs
sbb
cmp
stos
xor
jno
dec
mov
clc
movsb
jno
pop
sub
or
stos
repnz
mov
aam
pop
popa
sub
out
jbe
xchg
jnp
mov
mov
fwait
xlat
shll
and
adc
repnz
mov
and
fiaddl
mov
in
in
imul
add
jb
outsl
loopne
mov
jbe
cmp
push
mov
in
daa
icebp
sbb
xchg
adc
nop
call
mov
sarb
test
outsl
push
test
cs
mov
mov
jo
les
int3
repz
jbe
xor
fidivl
clc
or
mov
cmpsb
pop
pop
jnp
leave
insb
mov
push
jmp
adc
mov
loope
sub
mov
sub
jb
push
divl
pushl
out
adc
rcrb
mov
stc
xor
cld
icebp
fstpl
add
lods
push
mov
repz
push
lret
jg
insl
xchg
cmp
adc
adc
sbb
into
cmp
cmp
jp
fstpl
push
sbb
enter
sub
ret
lret
pop
out
mov
or
sahf
push
aas
push
loopne,pt
pop
lods
mov
or
iret
loopne
jmp
ja
ljmp
addr16
xor
mov
psubusb
addl
aam
adc
lock
ds
mov
sub
int3
sub
adc
adc
jae
lahf
out
into
lret
cmpsl
out
imul
cs
aas
xchg
pusha
ljmp
cs
adc
xor
popf
dec
aad
pop
mov
add
dec
into
sbb
fidivs
mov
movsb
jb
sbb
faddl
dec
stos
ss
pop
push
mov
cmp
mov
lods
xlat
hlt
sub
mov
jg
into
sub
push
xchg
lea
ja
pop
jl
stos
xlat
jle
movsb
fimuls
push
hlt
adc
push
loope
dec
and
dec
aam
jp
jge
jo
push
cwtl
fsubr
sahf
outsl
int3
lret
push
mov
jbe
jae
xchg
lret
sbb
lahf
imulb
push
inc
rolb
fsubl
or
jmp
sub
mov
pop
inc
cmpsl
push
jno
mov
lret
adc
jbe
andb
push
les
fs
cs
jne
mov
pop
and
test
aad
fstpl
push
xchg
fidivl
cmp
icebp
popa
pop
repz
mov
pushf
jnp
inc
ret
mov
arpl
add
repz
push
shrb
inc
inc
xchg
loopne
mov
leave
add
dec
mov
repz
jle
lock
add
leave
lea
lret
aam
addr16
xor
enter
fldcw
lret
jns
icebp
xchg
mov
shrl
fisttpl
jle
adc
xor
sub
push
les
cmpsl
sar
aad
mov
jmp
mov
into
xchg
sub
in
movsl
cmpsl
jbe
cltd
mov
mov
fnsave
fidivrl
xor
bound
mov
ret
leave
sub
or
sti
push
retw
xchg
std
push
popa
stos
imul
sbb
pop
out
pop
roll
and
pop
sbb
sub
bound
cmp
shl
lret
adc
std
cs
mov
push
pop
jecxz
mulb
daa
cmp
jl
push
push
repnz
sbb
fldcw
lcall
jno
push
stos
cmpsl
int
int
mov
xchg
iret
lds
jle
mov
dec
mov
ret
das
je
mov
mov
fdivrl
lds
stc
and
add
dec
les
lods
leave
shr
pop
movsb
push
push
mov
jp
adc
or
fldenv
mov
in
stc
sub
adc
xchg
incl
inc
fsubl
test
xchg
sbb
jbe
test
add
das
and
adc
inc
lods
mov
adc
in
hlt
jnp
sub
ljmp
in
lcall
pop
es
ds
jbe
xchg
pop
jne
add
leave
scas
jns
loopne
pusha
in
repnz
pop
imul
shl
loope
repnz
push
push
movl
aad
jae
jne
mov
hlt
mov
xchg
sbb
cmp
popf
push
cmpsb
mov
xorb
arpl
pop
xchg
pushf
sbb
stos
mov
test
xchg
add
cmp
mov
xorl
pop
outsl
enter
dec
or
scas
push
inc
jmp
or
or
jo
jle
pop
movsl
loope
mov
mov
mov
inc
repz
sub
imul
std
cmpsb
pop
xchg
pop
jl,pn
and
mov
jo
stc
sbb
pop
shrl
out
cltd
mov
add
push
pop
and
xor
fs
out
mov
cs
dec
fdiv
and
sub
sbb
aam
push
mov
push
leave
xchg
lcall
rcr
mov
addr16
pusha
shrl
add
pop
js
mov
ljmp
inc
push
loopne
out
andl
xchg
insl
mov
stc
outsl
or
push
int
ss
push
insb
jae
imul
push
test
testl
lods
test
inc
test
mov
outsb
cmpl
mov
pop
pop
test
dec
mov
sub
pop
xor
mov
rcl
inc
mov
xchg
or
jo
xor
push
ljmp
repnz
mov
ret
cltd
dec
aas
mov
enter
mov
shll
ret
lret
ja
push
jmp
dec
ret
mov
pop
shrb
mov
gs
testl
test
jae
xchg
push
fdivl
pop
loop
ret
cmp
lods
dec
pusha
mov
sbb
ret
push
add
fs
cmp
fsubp
arpl
push
jle
xchg
idiv
adc
jl
mov
mov
push
mov
repz
push
pop
cmp
push
dec
pop
mov
xor
test
dec
inc
cmc
and
mov
mov
mov
cmp
pusha
popa
sbb
subb
iret
jns
cmp
adc
add
mov
inc
fisttpll
pop
adc
imul
xchg
xlat
repz
les
fnsave
into
cmp
inc
dec
jmp
sti
jo
iret
push
or
lret
mov
ret
mov
clc
cmp
dec
arpl
xchg
test
pop
jecxz
test
add
inc
or
arpl
test
fcoms
fistl
adc
jne
mov
sbb
mov
ds
xor
jg
inc
fwait
mov
push
and
rolb
xorl
push
fsubrl
test
lods
push
cwtl
inc
xor
mov
xchg
repz
sahf
or
adc
dec
fidivl
movsl
and
xchg
lock
clc
in
xchg
test
inc
ss
int
mov
int3
dec
into
nop
sahf
adc
loopne
call
pop
or
and
cs
mov
cltd
inc
push
cmpsb
int
mov
int3
xchg
int3
pop
inc
fidivs
jnp
insl
leave
adc
xor
int
xchg
ljmp
gs
jle
xor
fisubl
xor
dec
pop
aad
jl
out
adc
mov
lahf
add
stc
stc
pop
mov
xor
ja
in
inc
jmp
daa
pop
in
loope
sub
dec
xor
dec
pop
adc
repz
enter
das
cmc
inc
ds
jbe
jno
mov
cwtl
dec
cmp
in
aam
push
mov
outsb
add
jae,pn
mov
subb
addl
cmp
int
mov
call
stc
loopne
mov
mov
lock
decl
testl
fstps
loopne
popa
in
push
mov
sarl
pop
push
mov
out
cmp
xchg
mov
sti
outsl
jne
dec
hlt
jae
outsl
dec
push
pop
lcall
add
pop
leave
cmp
add
xor
lea
daa
push
or
adc
push
leave
xor
lods
repz
sub
sbb
cmp
push
nop
ja
sbb
mov
pop
jl
inc
scas
jmp
fwait
adc
or
push
shlb
fcompl
jae
cmpsl
dec
jge
mov
or
test
lahf
orb
push
icebp
outsb
adc
dec
lret
mov
lcall
mov
jge
aad
inc
pop
call
out
in
inc
cmp
cmpsl
jg
ret
cwtl
cmp
mov
inc
pop
lret
adc
mov
divl
mov
imul
test
aaa
jmp
pushf
lock
and
xor
shll
repz
mov
push
sbb
mov
mov
mov
cltd
imul
dec
scas
scas
add
xchg
xor
push
test
nop
in
jmp
jp
addr16
lret
add
pop
dec
inc
ljmp
arpl
inc
xchg
ret
scas
enter
sub
mov
je
stos
jnp
pop
sti
xor
ret
mov
sub
js
jbe
mov
mov
sub
sbb
xchg
cltd
and
push
lock
and
xchg
jnp
in
jmp
push
mov
and
xchg
sti
cmp
or
mov
fdiv
mov
aas
mov
and
sbbb
fidivs
mov
pop
rcrl
lods
xchg
stos
ficompl
jns
ret
jecxz
mov
xor
jnp
test
gs
in
adc
cmp
adc
push
cmp
mov
testb
out
mov
test
sti
roll
or
nop
ret
mov
xor
dec
test
lock
cmpsl
mov
mov
fwait
push
jge
repnz
ss
push
test
enter
fistpl
insl
mov
call
or
dec
fwait
jge
insl
and
or
icebp
xchg
shlb
lods
cmp
push
sarb
mov
mov
arpl
fistl
jns
dec
ret
out
lcall
mov
test
dec
shl
movsb
leave
sbb
clc
insl
outsb
jae
lret
icebp
or
sbb
sahf
lret
dec
push
xchg
int3
jo
push
sbb
push
pop
mov
xor
shrb
cs
mov
jno
mov
rcl
push
inc
and
stos
mov
push
xor
push
ja
fstpt
hlt
mov
mov
push
ret
cld
jbe
sti
movsl
add
das
pop
jge
jb
les
adc
fsubrl
lods
cwtl
or
les
std
xchg
mov
add
sub
and
add
sbb
mov
push
fimuls
test
out
dec
sbbb
push
add
dec
mov
in
or
or
pop
jnp
mov
xor
insl
dec
mov
mov
inc
pop
adc
loop
inc
pushf
fnstsw
sub
std
adc
xchg
pop
mov
push
and
jmp
mov
pop
jge
fwait
mov
arpl
rcr
sub
inc
scas
push
dec
pop
jb
outsl
pop
push
stos
test
cmp
int3
mov
fs
push
cli
sbb
int
or
jl
sti
jmp
sbbb
fdivrl
mov
test
dec
add
jno
push
ds
insl
lods
cmp
mov
out
scas
lcall
lock
jge
xor
adc
aad
adc
pop
mov
pop
add
cmc
inc
jnp
aad
dec
push
mov
cmc
push
call
jno
or
mov
pop
add
shrb
cmp
repnz
and
mov
xor
pop
out
adc
int3
and
pushf
add
inc
pop
jo
push
imul
xchg
xchg
sub
out
dec
lahf
sub
daa
imul
sub
pop
std
es
dec
addb
cmpsb
loopne
sub
mov
jp,pn
mov
dec
xor
in
jp
hlt
push
add
cwtl
roll
mov
imul
add
lods
xor
scas
sti
cmpsl
and
and
pop
ror
les
push
iret
sarl
fsubrp
stc
xchg
insl
adc
xchg
mov
mov
xor
cmp
out
movsl
xor
cltd
hlt
push
packuswb
sub
inc
xor
jp
stos
pop
dec
or
sub
ret
stos
mov
shll
inc
pop
push
les
cmpsb
sub
lret
add
jle
lret
ret
jle
sbb
mov
pop
loopne
cltd
flds
out
inc
mov
sub
xor
and
aam
enter
adc
push
mov
dec
cmp
push
jecxz
xchg
imul
test
jb
rclb
popf
sbb
cmp
ljmp
mov
or
mov
mov
sbb
inc
fwait
shlb
shrd
push
mov
mov
mov
fs
cs
mov
gs
jo
mov
ret
les
push
cmp
push
sti
or
add
movsb
lret
test
add
out
mov
jns
and
fsubr
and
lret
dec
filds
clc
push
mov
aam
add
add
mov
cmp
jge
push
and
mov
push
mov
call
xlat
pop
nop
dec
adc
mov
fld
mov
dec
cwtl
sbb
call
sahf
bound
dec
ret
inc
stos
mov
aad
jnp
xor
and
adc
mov
lea
sub
stos
bound
inc
pop
mov
aad
or
or
mov
loop
mov
in
pop
jmp
lds
enter
fidivs
lcall
repnz
data16
push
jno
popa
ds
out
stc
leave
ja
gs
mov
mov
test
into
pop
jle
jmp
repnz
in
sub
jl
shrl
jne
sub
jg
dec
push
lods
mov
pop
mov
pop
dec
pop
sub
testl
jp
jmp
dec
xlat
mov
pop
sbb
dec
jge
addr16
sbb
unpckhps
movsl
out
pop
pop
xchg
cmp
mov
shlb
int3
jo
cmp
arpl
add
and
adc
test
add
dec
jle
subl
jp
jmp
stos
jno
add
dec
pop
pushf
add
inc
push
fwait
jl
pop
or
pop
shl
data16
xor
test
adc
inc
in
int3
sub
cmp
pop
hlt
imul
jl
sub
pop
add
adc
dec
rcrl
jp
cwtl
mov
pop
int3
out
inc
mov
xchg
sbb
sti
add
xchg
pop
jno
lret
push
popa
adc
xlat
ss
mov
pop
subl
stc
lcall
mov
rcll
repnz
fbld
sbb
lea
pop
out
cmp
dec
mov
add
mov
cltd
push
mov
adc
enter
mov
inc
loop
pop
and
jne
xor
jg
push
mov
push
jle
loop
dec
mov
cmc
add
shlb
mov
insb
fwait
add
out
or
add
xchg
shr
xchg
mov
int3
sbb
jge
out
fisubl
outsl
imul
or
inc
les
testl
dec
mov
repnz
stos
ljmp
and
sbb
shll
fmull
pop
sub
mov
jge
pop
sub
adc
sbb
dec
adc
lock
fnstcw
nop
dec
push
xor
ret
mov
inc
dec
gs
loope
stos
push
add
mov
pop
sub
pop
aad
adc
jns
lea
inc
negb
jbe
jbe
dec
jecxz
mov
into
movsb
cmp
xor
jg
mov
icebp
fadds
rolb
xor
cmpsb
cli
adc
mov
stc
aas
mov
lcall
cmp
mov
mov
iret
rorl
mov
adc
inc
and
pop
stc
pop
insl
mov
popa
sub
pop
testl
push
jl
xor
gs
sub
fwait
je
or
dec
or
stos
insb
ljmp
stc
xchg
sub
andl
int3
mov
cltd
jg
sbb
lds
cli
unpckhps
loop
icebp
iret
das
or
xchg
jle
jmp
call
in
stc
into
cli
dec
mov
test
lret
repnz
xchg
dec
roll
inc
xlat
sti
addb
jmp
jl
mov
int3
lret
mov
jnp
out
mov
xor
or
pop
adc
add
repnz
push
or
cmpsl
cmp
adc
xor
aaa
popf
inc
outsl
push
jo
inc
adc
cli
popa
or
test
mov
sbb
popf
in
pop
sub
sahf
popa
inc
in
enter
or
mov
addr16
lcall
sti
jge
shrl
pop
icebp
mov
dec
insb
sbb
xlat
mov
adc
loopne
mov
ljmp
mov
add
mov
int
out
shl
jo
ret
popa
xor
loop
jnp
push
mov
inc
call
into
inc
xchg
xchg
popa
jbe
scas
adc
arpl
mov
add
out
popf
sub
xchg
inc
sarl
aam
outsb
lods
lock
js
loopne
and
sub
jne
lcall
loop
ror
ss
cmp
int
gs
add
cmc
test
sub
cmpsb
or
push
insl
lcall
incb
insb
mov
addb
test
outsb
mov
jg
lods
fisubrs
or
dec
sbb
mov
fdiv
cld
inc
pusha
nop
clc
dec
adc
fisubs
repnz
adc
les
orl
jno
shl
mov
popa
je
out
aad
sub
jb
cmp
cmp
jle
leave
clc
ss
fwait
cmp
add
adc
insl
lret
dec
or
and
push
sub
and
xchg
mov
push
pop
push
fistpll
jl
inc
fnstsw
push
or
dec
std
xor
xor
ret
mov
test
inc
or
sbb
aaa
xchg
sbb
cmp
lods
and
data16
shlb
stc
and
mov
add
lret
gs
sbb
jge
or
jo
add
lock
frstor
pop
repnz
and
testb
mov
jne
or
inc
cmp
pop
cmp
adc
push
adc
cmp
jl
repnz
pop
sub
mov
mov
and
insb
mov
inc
es
mov
add
rolb
inc
xchg
mov
adc
icebp
or
nop
xchg
je
pop
mov
jne
fdivl
mov
push
ficoml
add
enter
pop
test
ret
imul
mov
movsl
jecxz
jmp
sbb
jo
push
mov
fstl
test
test
rorb
mov
xor
or
aas
fwait
popa
enter
aaa
shlb
shl
push
in
and
int3
fisttpl
add
or
ret
fsubs
inc
fsubrs
scas
add
int
mov
cmp
lcall
inc
arpl
xchg
sub
test
adcb
add
xchg
adc
mov
jle
jae
xchg
sbb
mov
adc
enter
iret
mov
mov
inc
dec
int3
xchg
je
decb
and
or
inc
fadds
insb
test
ret
push
sub
xorb
fcomps
movsb
xlat
clc
ja
sub
sub
mov
jecxz
cmpsl
adc
fisubs
mov
inc
ret
fcmovne
out
lods
ljmp
mov
cli
jl
out
insb
push
out
subb
ficoml
mov
fnstenv
jns
les
test
pop
loope
or
xor
add
sbb
ljmp
outsb
cwtl
insl
mov
xchg
mov
mov
lret
mov
cltd
cmp
cmp
dec
rcl
mov
or
loop
scas
nop
mov
pop
out
out
mov
rcl
push
ds
cs
adc
lock
iret
push
movsb
mov
pop
fadd
pushf
lcall
lock
stos
leave
bswap
sub
in
loope
cmp
adc
std
pushf
push
js
iret
mov
xchg
not
inc
cmp
sub
jnp
sub
fldt
outsl
inc
sub
cmpsl
pop
popa
pop
pushf
jnp
addr16
pusha
cmp
out
loop
sarb
outsb
or
sahf
xchg
add
mov
mov
popw
cmp
mov
idiv
xchg
rorl
aam
stos
pushl
mov
or
faddl
pop
or
jg
lea
loopne,pn
or
push
shll
cmp
mov
orl
lret
pusha
lods
add
mov
pushf
inc
sar
negl
mov
or
lods
in
lods
push
mov
les
cmp
lahf
data16
addl
mov
sub
sbb
and
bound
test
outsl
inc
movsl
les
loop
xchg
mov
shlb
in
mov
lret
jae
adc
in
adc
and
data16
pushf
lahf
pop
testl
cmpsb
lods
out
push
dec
into
adc
out
mov
ljmp
mov
rcr
add
dec
mov
lahf
cmp
adc
adc
mov
mov
popf
fmul
jnp
sahf
cltd
mov
dec
push
ss
and
and
lds
sahf
pop
sbbb
orl
sbb
lock
jnp
leave
loope
loope
rcrl
ja
sbb
outsl
fcompl
pop
cmp
pop
bound
clc
nop
ja
adc
std
push
push
xchg
fs
insb
iret
push
push
insl
push
lcall
xchg
ja
jecxz
scas
mov
inc
lods
mov
adc
mov
jecxz
dec
push
or
mov
push
cmp
sbb
mov
push
sbb
fdivrl
dec
push
ss
daa
or
xchg
push
or
mov
repnz
xor
push
sbb
push
inc
xchg
stos
repnz
movsb
stc
jb
adc
filds
jno
pop
cmp
mov
xchg
sub
pop
popf
ds
lock
dec
adc
inc
xchg
cmc
add
inc
xchg
addr16
push
scas
pushf
xor
pushl
add
mov
adc
xchg
ss
insb
lods
lock
insb
xchg
mov
pop
cmove
hlt
mov
subb
mov
out
dec
insb
and
enter
rorb
movsl
and
lea
add
aaa
into
test
fs
aas
hlt
ffree
and
test
adc
add
popf
sub
pop
aam
rclb
rclb
ljmp
leave
mov
pop
sub
fldcw
fmuls
shlb
fiaddl
mov
xchg
hlt
fdivl
hlt
rcl
nop
xchg
notb
aaa
ljmp
mov
xchg
mov
lret
insb
add
hlt
clc
or
clc
nop
mov
outsb
ret
dec
insl
and
daa
xor
dec
push
adc
ljmp
mov
push
mov
jle
sahf
in
sbb
pop
adc
sti
cmp
shll
test
mov
mov
jp
inc
and
or
flds
inc
sarb
sbb
xchg
mov
dec
xlat
lcall
jle
in
mov
add
sbb
mov
fwait
iret
bound
xchg
loop
jmp
stos
xor
les
test
daa
clc
cli
jo
fidivl
lahf
jae
ja,pt
loop
scas
mov
and
pop
inc
lret
fnstenv
cwtl
xchg
sub
frstor
push
mov
cltd
ret
push
fmulp
jns
inc
push
movsl
dec
or
push
mov
sbb
inc
mov
and
cli
adc
pop
mov
loope
loope
push
jbe
mov
sub
in
sti
jo
int3
or
int
fisubrl
pop
pop
mov
in
sub
outsb
xchg
xor
cmp
pop
mov
loope
jns
jl
scas
pop
lods
movsl
push
inc
jo
scas
jb
int3
sbb
cmp
mov
sbb
sbb
pushf
imul
in
lods
adc
sub
mov
sub
mov
mov
add
popf
mov
and
and
arpl
push
hlt
or
inc
and
pop
push
in
add
inc
lret
inc
aaa
testl
dec
xor
orl
ds
jecxz
mov
pop
movsl
test
imul
scas
push
cmc
add
xor
mov
adcb
outsl
sub
gs
pushf
shlb
push
pop
sbb
adc
mov
jnp
js
clc
flds
aaa
mov
dec
xor
test
ljmp
sub
push
dec
ret
sub
mov
imul
xlat
ljmp
mov
dec
xchg
xor
cld
push
imull
std
loope
pop
testl
sub
lcall
mov
lea
push
dec
mov
mov
test
lds
ss
flds
mov
push
push
ljmp
mov
mov
stos
addr16
and
inc
mov
inc
rorb
push
inc
mov
movsb
pop
sbb
mov
rolb
mov
adc
mov
xor
bound
negl
shlb
sub
dec
addb
xchg
jecxz
sbb
and
sub
stc
imul
inc
movb
shll
insl
fld
mov
push
jmp
pop
jecxz
rcrb
pop
stos
dec
mov
pop
xor
mov
pop
imul
pushw
sbb
cmp
ja
push
mov
loop
lock
and
mov
js
pop
jno
ljmp
xchg
out
int
leave
shrb
jp
inc
adc
push
imul
js
out
mov
dec
popf
jl
mov
iret
mov
mov
aas
mov
cmp
mov
test
fs
das
mov
into
xchg
lock
daa
and
out
adc
subl
pop
push
sub
mov
js
ljmp
add
sbb
lds
pop
dec
adc
add
mov
insl
or
or
sub
cmpsb
jo
ret
out
cltd
cmc
fistpll
cmp
sbb
lods
pop
test
in
lock
adc
cli
xor
ret
add
std
icebp
out
fldcw
xorb
jnp
sub
inc
ljmp
out
lods
test
adc
hlt
push
mov
jo
stos
addr16
pop
lahf
xchg
inc
xchg
inc
or
adc
and
sbb
aam
dec
sti
movsl
push
dec
pop
push
pop
aam
mov
sbb
aaa
fcompl
pop
out
ficomps
test
mov
mov
cld
cs
mov
jg
mov
jno
or
jbe
xchg
cmp
add
incl
cmpsl
sub
dec
mov
xchg
push
fstl
pop
cltd
shrb
pusha
mov
insl
push
pop
sar
xchg
test
lahf
pop
popf
jne
xchg
sbb
push
insb
faddl
or
out
add
jmp
push
pop
faddl
idivb
dec
or
shll
inc
mov
push
pop
xchg
lret
fildl
lret
adc
jmp
mov
rolb
xchg
xor
mov
and
sti
pop
xchg
sub
scas
adc
jle
pop
mov
es
hlt
imul
hlt
add
cld
jnp
mov
and
jnp
mov
pop
loop
push
outsl
pop
xchg
add
cs
insb
sbb
jecxz
push
int
pushf
or
jl
add
add
cmc
stos
mov
lahf
loop
lcall
test
and
xor
inc
movsb
jb
mov
mov
and
mov
outsl
fdivp
jnp
mov
inc
mov
adc
pop
fcomps
sbb
xor
lea
mov
jle
mov
cld
gs
pop
or
sbb
adc
mov
sti
rclb
or
flds
xchg
arpl
mov
push
test
jns
in
movsl
adc
pop
cwtl
cmp
pop
push
cs
jecxz
call
rorl
inc
ljmp
ja
nopl
mov
or
mov
outsl
stos
mov
pop
enter
cmp
lahf
jns,pn
push
inc
inc
pop
xchg
mov
out
das
rcrl
mov
lret
mov
mov
fldt
mov
add
ffreep
aaa
sub
arpl
xchg
dec
xor
roll
xor
cmpsb
xor
mov
push
insl
bound
test
xchg
push
sub
add
test
cld
mov
outsb
xor
xor
jnp
fildll
mov
icebp
ja
in
aam
pop
xchg
push
xlat
loopne
lahf
dec
cltd
out
or
dec
dec
arpl
jmp
dec
add
aam
mov
cltd
xchg
pushf
scas
or
lea
cwtl
mov
push
clc
and
and
pusha
cmpsb
jae
inc
jl
fwait
inc
lcall
lods
bound
xchg
cld
push
xor
pop
fnstcw
jno
jo
insb
mov
loope
cmp
dec
shlb
ss
mov
nop
mov
mov
and
arpl
push
aas
pusha
data16
clc
adc
pop
sbb
pop
cmc
inc
adc
xchg
push
add
add
mov
xchg
mov
fnstcw
insb
stos
xor
mov
popa
or
call
mov
aad
jbe
push
dec
push
rcll
test
sub
lock
dec
dec
icebp
sbb
call
pop
int
popf
sub
enter
cli
pushf
pop
xchg
cmp
cmp
mov
mov
xchg
sbb
push
dec
xchg
clc
mov
dec
ja
pop
add
jmp
mov
enter
fildl
jecxz
pop
dec
pop
movsl
dec
fdivr
pop
push
lcall
sub
movsl
fiadds
xchg
ja
mov
jmp
bound
lods
xor
mov
inc
imul
fildl
cmp
lret
mov
test
imul
mov
xor
mov
pop
pop
mov
pushf
mov
scas
aaa
ljmp
push
sub
xchg
imull
pop
adc
cmp
in
jmp
add
popl
xchg
cmp
sarl
mov
xchg
mov
data16
insb
mov
leave
add
xor
icebp
inc
jl
test
jl
xchg
bound
into
in
add
inc
imul
add
fcmovne
adc
xchg
jp
sbbb
in
pop
mov
bts
sbb
fldl
sbb
cmp
lea
push
inc
cmpsl
dec
dec
xor
push
vmovdqa
dec
xchg
sbb
cld
push
inc
ss
shrb
fadds
mov
add
adc
mov
inc
dec
fneni(8087
dec
mov
fst
test
jle
mov
pop
xor
in
mov
mov
dec
sahf
ret
mov
subl
fiaddl
mov
xor
bound
shlb
arpl
mov
mov
mov
jp
xchg
or
cmp
push
test
sbb
ret
jno
sub
mov
jno
push
mov
cmc
xlat
loope
repz
loope
sub
insl
call
jb
pop
fwait
add
push
gs
ja
hlt
add
movsb
scas
xor
xor
popa
mov
hlt
cmp
xor
in
dec
cmp
pop
or
mov
rorb
inc
in
lock
push
pop
rolb
inc
ljmp
pop
shl
je
add
aad
scas
dec
outsb
out
dec
lret
dec
dec
int
dec
and
mov
fdivrs
xchg
pop
xor
je
add
cli
sub
arpl
imulb
fdivrs
or
mov
pop
sbb
pop
dec
loope
loop
cmpl
xchg
rorb
xchg
sub
aaa
dec
pushf
sbb
testl
xor
lret
push
aaa
dec
pusha
sahf
out
imul
add
pop
dec
test
mov
sti
int3
daa
pop
push
dec
pop
into
mov
sub
mov
mov
imul
sarl
leave
lret
aaa
movsl
add
jns
sub
xor
adc
jecxz
cmp
in
mov
jge
decl
push
mov
jle
push
clc
xchg
add
lock
sub
xorb
adc
xchg
jae
push
add
adc
pop
inc
outsb
sub
push
or
xor
mov
dec
shrl
ja
loop
jg
mov
xor
movsw
insb
loope
inc
pop
and
lcall
mov
cli
xchg
mov
dec
scas
imul
push
dec
arpl
add
sbb
sbb
pop
mov
mov
sub
cli
add
dec
or
push
jae
sbb
lret
ret
xchg
sub
or
mov
xor
or
cmc
cmp
push
fisubrs
cmc
jg
mov
std
pop
jnp
mov
dec
push
out
add
add
cmp
cld
jmp
mov
loop
das
mov
adc
das
insb
mov
add
sub
xor
iret
daa
in
int3
rep
es
cmp
xrelease
mov
xchg
out
sbb
int
jns
inc
add
and
adc
int3
popf
adc
fwait
gs
dec
scas
push
sti
bound
xchg
add
mov
in
inc
sub
in
and
add
movaps
or
pop
push
mov
repnz
push
add
cwtl
push
mov
mov
mov
loopne
fwait
mov
xchg
lret
filds
mov
or
pop
mov
jge
sbb
jbe
sarb
mov
outsl
test
sub
andb
js
jp
lret
push
test
xchg
push
mov
into
not
push
in
jl
xchg
and
gs
mov
inc
ret
jno
mov
pop
insl
mov
inc
repz
inc
add
mov
cmp
imul
add
mov
ljmp
bound
pusha
mov
adc
enter
popf
jbe
pusha
int
rcr
pop
imul
cwtl
stos
xchg
and
push
fsts
jno
test
fstl
cmpsl
mov
lea
add
pop
mov
push
or
cmp
cld
inc
mov
test
cli
dec
addr16
mov
imul
add
dec
cwtl
adc
iret
test
std
jle
and
lret
shr
insl
fcom
fistpll
pop
loop
movsl
sti
inc
mov
test
shlb
mov
cwtl
mov
fs
push
mov
add
sbb
sbb
xor
push
imul
imul
or
push
shlb
xchg
inc
sbbl
fdivl
popa
dec
fdiv
pop
lahf
shlb
hlt
xchg
test
rorb
ficompl
jl
push
pop
popf
adc
mov
xchg
loop
mov
pop
and
rcrb
fdivrs
in
insl
shll
imul
adc
pop
xchg
out
or
mov
mov
mov
mov
or
lret
push
inc
xor
inc
and
jns
roll
ja
jp
stc
movsl
cwtl
repz
dec
test
adcb
add
xor
stos
jae
sarb
aaa
jae
dec
mov
add
push
ja
rol
push
xchg
rol
jg
jge
adc
cltd
add
add
inc
sub
mov
ss
iret
sub
out
jns
dec
mov
fcomi
xchg
add
add
push
ljmp
push
test
out
shl
pushf
mov
jmp
jbe
roll
mov
xchg
mov
pop
inc
daa
pop
bound
jmp
arpl
xlat
dec
sub
stc
stc
jge
sti
out
insb
pop
mov
lret
mov
fsub
sbb
dec
pop
push
ret
ffree
fnsave
test
test
pop
sub
dec
out
xchg
dec
xor
lock
test
mov
mov
int
lret
pop
mov
fwait
test
loopne
jno
icebp
or
into
pop
xchg
xchg
scas
dec
mov
loop
jne
js
adc
mov
ja
testl
sbb
or
cli
fmull
out
lods
push
frndint
mov
les
mov
xchg
cmp
outsl
aad
pop
adc
inc
test
lcall
and
inc
jb
lret
cmpsl
push
lods
xchg
pop
imul
outsl
out
cs
sub
pop
xchg
imul
sub
xor
rcrl
dec
push
fistps
fwait
dec
popf
xchg
in
jnp
aam
xchg
jb
cmp
push
pop
scas
int
push
sti
inc
jl
stos
stos
jl
sbb
pop
dec
leave
xor
mov
mov
dec
outsl
push
mov
jbe
jl
gs
push
jns
push
xchg
xchg
fsubs
int3
push
xchg
nop
insl
insb
jae
mov
ret
mov
nop
jne
pop
aaa
jae
jge
add
xchg
inc
push
fdivrp
jmp
mov
cmp
jecxz
add
fidivrl
imul
sub
imul
inc
lret
xchg
popa
rcrb
scas
test
imul
sub
sub
sub
fmul
mov
xchg
pushf
xchg
inc
rcrl
inc
in
add
pop
and
int
push
adc
xchg
push
sub
mov
cmp
stos
inc
mov
sub
scas
int3
cmpsl
stos
sbb
sbb
adc
inc
aas
or
jb
lods
loopne
sbb
jnp
sub
or
xlat
shrl
push
mov
fcmovnbe
les
sub
push
aam
jae
dec
roll
xor
cmp
pop
pop
stos
xlat
icebp
push
scas
cmp
cltd
jle
into
sbb
ds
and
aad
sti
xchg
imul
adcb
push
pop
inc
popf
mov
scas
lea
push
adc
arpl
sub
sahf
adc
mov
sub
in
push
push
dec
push
outsl
push
sub
mov
sbb
mov
and
and
sbb
in
and
mov
les
jmp
jo
popf
fidivs
dec
add
stos
sub
in
jmp
sub
dec
add
mov
adc
lds
shlb
fstps
jge
aas
mov
jge
ljmp
fidivs
sbb
rcll
aas
mov
insl
add
mov
repnz
cmp
cmp
jecxz
jns
adc
loope
rorl
sub
mov
lahf
in
lret
jno
push
dec
sub
xor
xchg
das
push
sub
sub
lock
push
repz
jg
ss
pop
leave
jmp
loope
cmpsl
jbe
sub
mov
xlat
xchg
inc
mov
fnstenv
pop
pop
push
pusha
jge
loopne
cmp
std
jae
sbb
mov
and
mov
add
sahf
or
jns
pushf
xchg
cmp
icebp
or
out
pop
fidivrl
int
xchg
push
and
insb
aad
into
rcrb
ljmp
push
push
test
rcrb
pop
popf
xor
shl
pop
xchg
test
mov
inc
cmp
shlb
stos
into
cmc
or
pop
jae
pop
ret
incb
loopne
outsl
push
mov
sub
jg
js
in
movsl
dec
xchg
andb
lahf
popa
cmp
loop
sub
jo
cmp
mov
mov
pop
or
pop
fisubrl
or
and
xchg
ret
ret
ret
cltd
cmp
insl
xor
outsl
rcll
iret
xchg
pop
inc
out
and
sbb
mov
mov
add
outsb
rorb
pop
pop
pop
jge
cltd
dec
sub
popf
mov
add
dec
or
inc
roll
mov
test
gs
lcall
add
nop
lods
into
sahf
fstl
movsl
stos
in
daa
or
mov
xchg
inc
testb
xchg
scas
test
xchg
lds
mov
push
dec
inc
imul
in
stos
rorl
aaa
loopne
popa
outsb
inc
in
xor
inc
pop
pop
sbb
adc
mov
jae
insl
sub
or
fcompl
nop
pop
out
adc
icebp
add
sbb
cltd
test
sbb
das
pusha
in
mov
mov
jecxz
out
cltd
stc
sbb
mov
fwait
push
js
lods
scas
movsl
push
loopne
leave
mov
and
fiaddl
push
xchg
jl
imul
xchg
std
pusha
into
jb
adc
pop
jle
movsb
movsb
xchg
jle
gs
out
jne
int
sbb
fimuls
push
push
lcall
xchg
fisubrl
inc
fcmove
dec
mov
mov
test
mov
cmp
xor
fdivrl
fiaddl
xorb
inc
mov
call
push
gs
scas
pop
inc
je
inc
and
or
xor
aam
inc
mov
or
cmp
mov
adc
and
addr16
loop
or
mov
in
je
lods
imul
test
imul
pop
sbb
adc
sbb
mov
xlat
loop
cmc
adcl
loopne
int3
nop
pusha
mov
mov
cmpsl
mov
leave
xor
in
lcall
mov
xchg
jb
sub
cmp
lods
data16
outsl
into
cltd
mov
mov
mov
pop
in
cmpsl
xchg
sub
or
pop
imul
jae
fmull
adc
fnstenv
dec
out
mov
test
mov
ret
mov
bound
push
sub
xchg
subl
scas
pop
push
push
dec
pop
inc
in
cmp
mov
lret
lcall
cltd
add
std
pop
hlt
pop
aaa
imul
adc
dec
fs
es
int
je
popf
mov
ds
push
sbb
mov
jbe
xor
sub
in
and
cwtl
xchg
xor
insb
push
cmp
push
jg
pop
les
lock
cmp
sahf
sbb
shll
adc
test
rorl
jecxz
scas
cmp
std
mov
push
aaa
aam
add
pop
jp
cmp
out
mov
outsl
cwtl
nop
cmp
nop
clc
test
stos
pop
imul
xchg
rclb
mov
cmp
xlat
jns
xchg
push
sbb
mov
gs
test
jp
js
xlat
jl
imul
mov
stos
rcrb
push
nop
sub
jne
lret
push
xchg
ror
xlat
mov
xchg
sarb
lods
inc
popa
mov
test
xlat
cmp
dec
inc
sub
addb
cs
into
and
mov
push
es
cmc
sbb
fcoms
out
test
xchg
xlat
mov
jbe
adcb
insb
sarb
mov
cmp
aaa
mov
push
fistps
push
ja
mov
pop
push
mov
hlt
xchg
or
loope
xchg
cmp
in
leave
int3
push
and
bnd
fadds
test
sbb
xchg
xchg
cli
dec
ficomps
pop
cld
push
cmp
xchg
or
repnz
loop
xchg
mov
outsl
out
xchg
mov
imul
sub
dec
adc
lock
jb
sub
out
std
inc
mov
sti
pop
out
xchg
andl
mov
lcall
adc
xchg
jle
clc
lcall
xchg
in
and
addl
xchg
loop
fcomps
add
lods
cmp
lea
mov
mov
xchg
notb
enter
mov
push
and
cwtl
fs
out
lret
push
loope
mov
out
mov
or
aas
xor
dec
je
push
and
sbb
pop
jg
xor
xchg
mov
push
scas
dec
scas
dec
in
in
push
add
lret
jo
xor
mov
xor
mov
imul
sahf
xchg
into
lcall
or
jbe
inc
xor
fadds
out
push
out
ja
nop
cmp
aam
xchg
mov
pop
dec
push
inc
fadds
jnp
mov
xchg
insb
and
push
cmp
psadbw
inc
jae
sti
sub
lcall
sub
in
xchg
sub
cmpsl
or
mov
ret
sbb
movsl
push
and
out
int3
pop
fcmovnbe
inc
jnp
or
call
pop
mov
mov
dec
push
and
dec
call
add
add
pusha
repz
cli
pop
mov
outsb
bound
mov
mov
inc
js
mov
out
popf
enter
xor
sub
insb
push
fs
mov
insb
shl
es
cmpsl
jns
adcb
clc
mov
push
sahf
xchg
jno
sub
add
sbb
clc
test
add
sbb
xchg
pusha
shlb
cmp
in
in
dec
in
adc
cmpsl
or
add
aas
sub
add
and
adcl
push
or
ljmp
aad
pushf
fstpt
popa
xchg
mov
sbb
cmpsb
sti
fwait
mov
test
xor
pop
stos
outsl
leave
leave
jo
fs
add
std
add
add
pop
or
add
xor
add
and
add
