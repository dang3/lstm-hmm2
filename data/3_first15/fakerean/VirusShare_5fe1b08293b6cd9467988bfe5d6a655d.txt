inc
and
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
shr
and
mov
mov
mov
test
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
mov
xor
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
test
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
test
jne
test
je
mov
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
push
mov
call
cmpl
jne
mov
mov
test
jne
movl
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
mov
xor
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
mov
movl
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
mov
mov
neg
sbb
and
push
push
call
mov
call
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
mov
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
je
mov
xor
test
jne
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
lea
push
push
call
add
test
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
mov
test
je
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
jmp
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
neg
sbb
mov
and
lea
add
push
mov
push
push
push
call
add
test
je
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
jne
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
cmpw
jne
mov
lea
push
push
push
call
add
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
pop
jnp
and
and
fwait
jnp
and
and
nop
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
scas
andb
mov
andb
mov
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
jnp
and
xchg
andl
rolb
and
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
push
test
and
and
mov
test
and
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
xor
test
and
and
pop
test
and
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
inc
and
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
push
push
call
mov
ror
add
movsb
add
add
add
stos
add
shlb
movsl
add
cltd
pop
push
test
into
mov
mov
add
add
add
jbe
add
scas
add
leave
add
movsl
jo
stos
lahf
mov
add
push
mov
add
push
push
push
push
call
ja
mov
add
add
leave
add
popf
faddl
add
clc
pop
add
push
mov
mov
jmp
iret
add
add
add
mov
xchg
leave
xlat
add
mov
add
add
add
out
out
mov
push
push
add
sub
pop
popl
push
push
lea
push
push
push
call
push
sti
mov
add
add
pop
add
js
add
cltd
add
add
pushf
add
out
shll
hlt
pop
add
je
add
pop
mov
push
bound
in
mov
data16
pop
stc
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
call
pop
add
xchg
add
push
gs
les
add
roll
add
add
divl
push
in
add
jae
mov
loopne
mov
loope
add
ja
nop
add
enter
xchg
add
pushf
add
mov
in
fcompl
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
imul
add
jecxz
fucom
push
push
mov
filds
add
out
notb
add
faddp
add
sti
add
add
mov
pop
add
add
add
add
add
add
add
lods
push
jnp
add
mov
sub
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
ja
xchg
lcall
add
jnp
add
leave
add
add
add
push
cwtl
icebp
add
int3
mov
lcall
enter
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
test
add
add
add
in
mov
add
jo
fistps
iret
addb
cmpsl
xchg
test
add
sub
push
lea
push
push
push
push
call
pop
add
fstp
add
test
cmpsb
add
lea
add
add
sub
mov
add
je
bound
add
hlt
mov
add
add
rolb
add
popf
add
repnz
add
int3
fldl
cli
add
lcall
add
add
push
lea
push
call
add
out
int3
cld
rolb
jmp
add
add
add
stc
add
loop
push
add
lds
mov
clc
pop
cmc
add
in
clc
pop
mov
push
push
lea
push
call
cmpsl
pop
pop
add
add
mov
jo
lcall
mov
add
jnp
ficoml
add
les
add
add
pop
sbb
mov
shrb
popf
add
call
in
hlt
lcall
pop
hlt
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
arpl
add
add
mov
jae
add
add
add
stos
loopne
scas
add
add
jnp
leave
loope
add
mov
xchg
jne
push
stos
add
add
fwait
je
in
fcomps
pop
in
add
push
push
lea
push
lea
push
call
add
add
rcrb
lret
sti
mov
out
add
pushf
jmp
add
movl
fadds
into
imul
add
leave
pop
add
out
mov
mov
pop
add
mov
xor
push
push
rol
push
sub
add
sub
add
shr
inc
sub
rol
pop
sub
shr
pop
push
push
push
push
push
lea
push
push
call
add
in
add
rolb
add
add
call
aam
cwtl
jp
enter
lcall
add
add
iret
js
mov
in
in
lcall
jne
push
push
push
lea
push
push
call
add
popf
pop
xchg
push
pop
in
add
mov
mov
je
add
add
jecxz
add
popf
add
add
add
cli
testb
repnz
popf
jmp
add
add
mov
add
testl
add
fisubl
pop
call
push
push
lea
push
push
push
push
push
call
mov
testb
xchg
add
clc
pusha
hlt
pusha
add
push
ret
add
pop
add
scas
in
loopne
mov
add
add
cltd
push
popl
add
in
add
nop
add
in
in
mov
push
push
push
call
add
lret
add
add
add
scas
leave
add
loope
mov
data16
loopne
popf
add
xchg
jle
jns
loope
popa
mov
js
xchg
shlb
add
sub
pop
movl
push
push
lea
push
lea
push
push
push
call
lods
in
add
out
add
add
add
test
mov
add
add
mov
jmp
mov
lcall
inc
call
jne
ret
push
push
call
add
add
add
loope
add
roll
jge
add
add
add
add
add
mov
jnp
add
in
sub
pop
pushl
push
push
push
call
mov
xchg
nop
add
insb
add
add
add
fnstenv
jo
xchg
test
add
movsl
test
rol
pop
add
add
push
gs
cmc
cltd
sahf
add
pushl
call
push
push
push
push
lea
push
push
call
jmp
lods
add
cld
push
test
add
add
add
add
fdivrl
rolb
in
add
add
add
jbe
add
add
xchg
int
add
in
mov
mov
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
repnz
lods
push
sahf
out
add
lods
std
add
popf
shl
xchg
xorb
add
xchg
jne
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
add
pop
mov
test
fiadds
add
lahf
fdivl
imul
test
add
add
enter
add
add
add
out
add
add
add
mov
insb
add
add
jae
add
arpl
add
sub
pop
call
push
push
dec
lea
dec
push
push
pop
add
rol
dec
sub
pop
dec
pop
push
push
push
push
call
out
ja
add
add
mov
cmpsl
add
lcall
icebp
vpaddq
add
mov
add
xlat
jne
scas
xchg
testb
jl
popf
xchg
add
add
add
in
add
call
jl
add
jmp
je
clc
jno
add
cwtl
sbbb
stos
add
lcall
jne
push
push
push
push
push
push
lea
push
lea
push
call
lds
add
in
in
mov
leave
sti
add
imul
jge
add
add
scas
fcmove
add
add
add
xchg
sti
mov
add
lock
rcr
rorl
imul
mov
lcall
push
arpl
add
cs
push
push
push
call
xchg
clc
outsl
add
mov
roll
sbbb
mov
add
out
fsub
imul
mov
in
jb
mov
add
add
push
in
call
push
push
push
rol
inc
push
or
inc
add
shl
shl
shr
ror
sub
add
rol
dec
pop
sub
inc
pop
push
push
lea
push
lea
push
push
call
popa
test
ror
add
add
jns
or
mov
mov
in
xchg
add
out
add
push
add
icebp
arpl
xchg
add
pop
jl
add
lods
add
mov
jns
sub
pop
push
push
push
lea
push
push
push
call
add
scas
xchg
add
pop
js
add
mov
pop
jae
xchg
into
jb
pop
xlat
jl
fcompl
add
add
add
sub
pop
push
call
push
push
push
lea
push
push
push
push
push
lea
push
push
call
imul
jmp
add
sahf
mov
cmc
je
mov
loopne
jl
add
add
pop
mov
pushf
fisubrs
add
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
stos
mov
jl
add
push
mov
jb
iret
insb
jecxz
hlt
ljmp
add
add
add
add
les
mov
jecxz
add
add
cld
in
cltd
xlat
add
xlat
scas
int
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
fldl
roll
mov
movb
xchg
mov
add
mov
mov
add
out
mov
aad
mov
push
add
arpl
add
add
data16
js
add
pusha
add
mov
add
add
add
add
add
add
add
add
movsb
lret
add
lcall
pop
hlt
push
push
push
push
lea
push
call
add
leave
insb
add
add
xchg
sahf
rolb
into
xchg
fmulp
add
jae
jmp
outsl
mov
add
add
push
add
fldl
xchg
push
lret
mov
add
rorb
add
add
add
xchg
test
out
lret
popf
xchg
jnp
in
in
in
lcall
pop
in
push
lea
push
push
push
call
ja
push
add
add
add
add
out
popf
add
add
roll
clc
cmpsl
add
add
mov
js
add
add
fdiv
add
faddl
fs
lret
add
into
aam
loope
jo
test
jb
pop
arpl
out
add
ret
add
add
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
clc
clc
addb
mov
in
cwtl
jbe
push
push
lcall
repnz
xchg
popa
add
pusha
sahf
mov
add
jns
sub
pop
mov
push
push
push
push
call
add
ljmp
add
push
out
add
popa
add
add
faddl
jne
iret
fldt
lods
repnz
scas
pop
lds
sub
pop
xor
push
push
lea
push
push
push
push
lea
push
push
push
call
add
out
add
add
add
jecxz
add
js
cmpsb
push
xchg
les
mov
add
icebp
mov
jle
imul
fcompl
les
add
push
push
push
push
push
call
add
cld
movsb
add
add
movb
mov
pop
mov
add
pop
mov
pop
vmovq
add
add
push
mov
add
icebp
add
push
ja
jbe
in
pop
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
fwait
add
in
mov
xchg
push
jecxz
mov
add
add
add
push
push
xchg
add
push
push
jecxz
mov
add
mov
add
add
ret
add
popf
xchg
pop
add
adcb
add
lcall
push
push
push
push
lea
push
call
pop
ficomps
push
lds
lret
mov
add
add
pop
in
add
lret
jmp
mov
add
test
mov
stos
sbb
in
in
pop
mov
push
push
lea
push
call
add
mov
jns
xchg
rcrl
mov
cwtl
jbe
mov
into
add
push
cmc
add
in
clc
pop
xor
push
push
push
push
push
push
call
pop
jp
xchg
mov
xchg
mov
lods
xchg
ret
je
mov
jbe
cmpsl
add
aad
jecxz
jo
add
add
add
data16
iret
nop
fisubs
pop
push
arpl
add
mov
add
in
add
addr16
ffreep
add
out
movb
pop
sub
pop
add
push
lea
push
push
call
call
iret
lret
mov
add
add
lret
add
loopne
sub
add
jmp
add
popa
mov
add
add
jbe
js
mov
rcl
add
in
hlt
lcall
lock
push
push
push
push
push
push
push
call
je
nop
nop
jno
negl
add
mov
mov
add
ret
add
add
add
lret
add
out
pop
add
mov
add
lahf
mov
add
mov
imul
pop
push
push
call
add
test
into
test
add
xchg
add
stos
test
add
mov
ret
out
push
add
pop
je
mov
add
mov
outsl
popa
loop
in
clc
lcall
dec
add
xor
adc
sbb
and
push
push
push
push
call
add
add
in
add
nop
push
lahf
jns
add
into
sar
fistps
popf
bound
mov
add
imul
add
sub
pop
xor
push
push
push
call
push
add
lock
pop
add
add
add
aad
idivl
fdiv
add
add
add
add
sub
pop
add
push
lea
push
push
call
add
add
add
mov
mov
adc
add
repnz
add
add
add
add
add
add
scas
clc
iret
mov
aam
mov
add
jmp
add
rcrb
add
mov
movsb
add
xchg
fiadds
mov
add
lcall
push
push
lea
push
push
call
pop
add
clc
mov
jmp
add
add
add
add
data16
popf
imul
aam
fwait
pop
rcll
imul
lret
pop
add
fwait
add
cli
addr16
add
stc
addl
or
adc
push
push
push
push
lea
push
push
call
add
mov
add
jp
add
mov
xchg
addr16
add
mov
pop
sarl
pop
fwait
stos
pushf
scas
mov
int
add
add
add
stc
cld
xchg
jne
roll
xchg
ja
sahf
mov
in
loopne
lcall
enter
adc
jg
push
push
push
push
push
push
lea
push
call
rolb
xchg
cwtl
push
add
cltd
mov
add
addl
negl
mov
push
add
mov
mov
loop
sar
je
add
mov
sahf
cmpl
add
mov
add
add
add
fildll
xchg
call
ljmp
sub
pop
pop
rep
push
push
push
lea
push
push
push
call
push
add
scas
add
add
hlt
push
loop
leave
lods
in
add
add
mov
ljmp
ret
clc
vpacksswb
add
lcall
mov
push
push
lea
push
push
push
lea
push
push
lea
push
call
xchg
add
add
add
xlat
add
add
add
outsl
add
lcall
add
int
add
scas
push
insb
add
mov
rolb
fisubl
add
xchg
add
add
mov
ja
add
mov
faddl
mov
xchg
add
arpl
sub
pop
add
push
add
add
pop
add
push
lea
push
push
push
push
push
call
add
lods
pusha
add
add
mov
movsb
add
cli
add
clc
xchg
add
test
add
add
incb
test
xchg
add
pusha
jo
insb
fmulp
lcall
xchg
mov
add
push
test
jo
add
add
sub
pop
add
push
push
call
add
pop
add
test
push
mov
mov
cli
loopne
add
add
add
imul
add
aam
mov
add
add
fists
in
clc
lcall
inc
and
jno
adc
push
push
push
push
push
call
add
mov
add
xchg
add
add
pop
jbe
jle
add
jbe
roll
add
sti
ret
popf
fldcw
xchg
push
cmpsl
add
in
add
add
loop
sti
stos
int
add
je
mov
in
in
lcall
add
push
push
call
stc
mov
andb
cld
jge
add
add
jne
icebp
xchg
add
xchg
add
add
cwtl
ret
xchg
add
arpl
add
mov
insb
add
add
outsl
std
add
lea
flds
out
sub
pop
add
push
xor
dec
pop
mov
xor
push
lea
push
push
call
jp
scas
in
add
mov
mov
cld
fwait
mov
add
jo
scas
xchg
js
push
push
mov
add
test
mov
cmpsl
add
fadds
cltd
filds
roll
cwtl
mov
mov
mov
add
mov
jns
hlt
mov
rcrl
add
fistpll
in
hlt
pop
mov
push
push
lea
push
push
push
push
push
push
call
mov
cli
pushf
xchg
scas
stc
add
jnp
add
mov
popl
mov
sbbl
mov
add
push
pop
sbbl
add
pop
add
add
pop
movsb
scas
in
jge
mov
pop
xor
push
push
lea
push
push
push
push
push
call
add
mov
add
aam
in
add
push
add
cmpsb
scas
cmpl
rcr
add
push
push
leave
ja
sub
pop
add
push
inc
add
dec
pop
add
push
lea
push
lea
push
lea
push
lea
push
call
fstl
lds
movl
lea
mov
data16
pop
pushf
rolb
pop
add
sahf
lret
add
add
call
lea
xchg
add
addl
add
add
add
subl
in
in
lcall
rcll
lret
sub
dec
pop
mov
push
push
ror
lea
not
push
push
pop
add
dec
ror
inc
sub
sub
sub
add
pop
rol
pop
push
dec
shl
ror
add
pop
pushl
call
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
push
fisttps
add
scas
add
add
mov
popa
cmc
add
add
scas
jle
add
jecxz
push
xchg
out
push
add
xchg
add
add
iret
add
movsl
add
jecxz
in
fcompl
add
pop
mov
add
lret
sub
add
dec
sub
sub
add
ror
pop
rol
pop
push
inc
sub
pop
push
push
push
ror
pop
call
push
inc
ror
pop
mov
push
not
add
add
pop
push
push
lea
push
push
push
push
call
add
add
add
xchg
add
movb
test
stos
add
icebp
shll
aad
add
add
in
jno
into
cli
lret
clc
add
add
add
fldl
mov
lods
add
icebp
add
pop
jecxz
fisttpll
add
int3
out
popa
add
mov
add
sub
pop
push
mov
push
add
lea
sub
pop
add
add
push
dec
dec
rol
pop
add
push
sub
not
inc
pop
mov
xor
push
push
push
push
push
lea
push
lea
push
push
push
push
call
enter
faddl
ljmp
ja
insb
add
add
add
aad
add
ficoms
xchg
add
imul
mov
mov
add
jb
add
je
mov
jp
add
imul
add
lcall
jne
push
push
xor
lea
pop
mov
xor
push
push
push
call
jo
into
add
add
push
iret
addr16
out
add
lock
imul
loop
mov
add
jbe
fildl
jb
and
ljmp
sub
pop
add
push
lea
push
push
lea
push
push
call
add
mov
out
jb
std
into
pop
int
add
lock
clc
push
ja
test
push
arpl
lcall
add
add
add
addr16
in
in
lcall
push
push
push
push
call
pop
add
cltd
jno
add
in
add
stos
xchg
add
xchg
fldl
pusha
imul
add
bound
add
fwait
rolb
add
mov
fs
sti
add
mov
add
jae
fisubl
pop
call
add
add
add
mov
add
loopne
jae
pusha
pop
sbbl
dec
and
adc
jge
lea
push
push
lea
push
push
push
push
call
add
add
mov
add
rolb
add
add
add
mov
loop
mov
mov
add
xchg
jae
imul
lret
mov
pop
pusha
mov
jle
outsl
xchg
add
ljmp
mov
lcall
out
sub
pop
rep
push
push
push
push
call
pop
cli
rolb
mov
scas
into
add
jbe
in
add
test
clc
add
hlt
add
rorb
add
pop
stos
test
cwtl
xchg
add
out
add
addl
in
jge
in
lock
lcall
dec
and
xor
adc
push
lea
push
push
lea
push
call
add
andl
add
mov
add
ror
push
addb
add
filds
mov
aam
add
add
testl
negl
push
xchg
mov
addb
mov
sub
pop
xor
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
mov
lods
dec
mov
add
pusha
add
add
aad
add
mov
add
mov
mov
inc
add
lock
test
xchg
arpl
out
add
sub
pop
add
push
pop
or
je
push
add
inc
ror
pop
mov
push
push
push
push
lea
push
push
lea
push
push
call
testl
add
add
fldl
mov
add
mov
add
add
mulb
add
xchg
add
add
add
add
arpl
mov
add
add
ret
imul
int
push
faddl
add
xor
push
push
lea
push
push
push
push
push
lea
push
call
push
jp
mov
fwait
jge
into
add
add
jle
add
lods
add
fs
ret
push
filds
les
lds
add
pop
je
pusha
pop
shrl
flds
mov
sub
pop
add
push
rol
shl
shr
pop
mov
xor
push
add
pop
add
push
rol
add
pop
add
push
push
shl
sub
not
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
push
call
xchg
clc
add
add
repnz
je
add
add
add
mov
movsl
add
div
add
push
push
add
add
add
mov
sub
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
push
call
loope
mov
shll
lret
mov
push
mov
add
add
add
leave
add
jp
add
orb
mov
add
add
test
add
push
mov
loop
add
add
andb
add
jnp
sti
sub
pop
add
push
not
inc
rol
pop
add
push
sub
add
add
rol
pop
pop
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
iret
push
add
mov
mov
pusha
lcall
mov
add
enter
add
add
mov
add
add
stos
add
add
in
add
mov
add
popl
pop
sub
pop
rep
push
push
push
call
outsl
mov
xchg
add
pop
into
push
add
jmp
sti
leave
add
mov
sti
popa
add
int
add
jmp
add
add
hlt
pop
mov
push
push
lea
push
call
mov
pop
add
ljmp
add
add
mov
pushf
pushf
fucomip
scas
add
iret
cltd
test
clc
xchg
fiadds
xchg
lret
lcall
add
add
xchg
add
scas
out
cmpsb
add
mov
add
add
lock
shl
xchg
cltd
in
add
pop
xor
push
push
push
lea
push
push
push
lea
push
call
cld
add
pop
aam
imul
test
out
sti
fstps
imul
mov
sar
push
fiadds
jmp
imul
stos
add
jno
add
add
push
loop
add
add
loop
bound
scas
rolb
add
push
add
add
xorl
pop
add
sub
pop
add
push
push
push
push
push
push
call
push
popa
add
adcb
pop
pop
xorb
repnz
jno
add
lea
add
add
add
sahf
add
add
mov
mov
jns
cmpsb
add
add
add
lahf
cwtl
test
mov
push
jne
sub
pop
or
je
mov
push
lea
push
push
push
lea
push
call
jnp
out
loopne
add
add
int
add
mov
add
add
mov
mov
add
in
popl
mov
idivb
add
xchg
xchg
add
jo
add
add
add
cmpsb
leave
push
push
add
iret
fiadds
add
fnstenv
sar
je
jge
in
in
pop
add
push
push
push
lea
push
push
push
call
cld
mov
imul
add
add
fwait
add
addl
add
out
add
mov
movsl
mov
add
pushf
arpl
add
add
add
fsubr
int
xchg
add
add
add
add
test
fs
sub
pop
add
push
inc
xor
shl
pop
rep
push
shr
pop
pop
push
push
shr
push
or
not
add
dec
inc
add
sub
xor
dec
pop
inc
rol
shl
pop
push
lea
push
push
push
lea
push
lea
push
call
mov
jne
int3
mov
movl
add
imul
stos
add
mov
add
nop
cmpsl
add
lock
mov
add
push
imul
ljmp
lcall
mov
push
shr
sub
ror
xor
pop
mov
push
lea
push
lea
push
push
push
push
push
push
call
in
std
add
cltd
add
bound
add
add
sahf
pop
pop
add
mov
idivb
in
ljmp
add
pushf
jbe
add
add
add
add
pop
add
add
add
aam
add
add
add
lcall
inc
and
jmp
push
add
not
lea
pop
push
push
push
lea
push
push
call
mov
add
icebp
bound
jae
loopne
add
rcr
fiaddl
int
add
xchg
add
add
fwait
sub
pop
mov
push
push
push
push
push
call
add
add
add
shrb
aam
add
push
pop
into
sahf
cld
in
add
cli
aam
lock
fildl
lcall
cld
push
push
lea
push
push
push
push
call
add
add
add
add
cmc
add
push
in
cwtl
pop
cmpsb
mov
add
faddl
mov
add
add
mov
add
push
pop
add
pop
icebp
add
jecxz
popa
in
add
xchg
add
add
pop
mov
add
lcall
push
sub
sub
dec
shl
pop
push
push
inc
pop
push
push
push
call
cli
add
scas
lods
bound
mov
jmp
in
stos
add
ja
fdivr
movsb
add
add
push
mov
fistl
mov
add
add
add
add
fildl
sub
pop
push
push
push
call
pop
pop
pop
jl
ljmp
mov
add
add
popl
div
pushf
add
int
pop
push
add
add
test
hlt
add
add
mov
mov
std
rcl
aad
add
add
pop
mov
test
add
xchg
add
clc
lcall
inc
cld
pop
push
push
call
lcall
add
jle
xchg
add
jp
pop
push
andl
ficompl
add
fucomp
add
cmc
call
add
add
lcall
push
lea
pop
pop
push
push
call
insb
out
nop
mov
imull
add
add
add
add
lds
into
add
add
push
add
push
out
push
leave
add
mov
test
cmpsb
data16
in
clc
lcall
leave
push
sub
sub
inc
pop
ret
push
push
push
lea
push
push
push
push
push
push
call
mov
loope
push
push
lods
ja
outsl
add
push
fbstp
add
int3
icebp
add
add
pushf
add
push
add
add
ror
ljmp
test
sub
pop
push
push
add
pop
mov
push
ror
rol
pop
add
push
push
push
push
push
push
push
push
push
call
ljmp
xchg
arpl
nop
sbb
pop
cwtl
les
add
testl
icebp
mov
add
jae
stc
pop
add
nop
rolb
std
cmpsl
leave
add
add
add
movsb
fwait
les
sub
pop
push
push
push
inc
not
pop
push
movl
push
add
sub
pop
addl
test
je
push
push
push
push
push
push
lea
push
push
push
push
call
loope
add
mov
fwait
add
clc
mov
add
int3
mov
rcr
xlat
add
jge
add
add
subb
mov
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
rorb
mov
jecxz
gs
jae
mov
lock
in
add
jne
push
mov
cli
fiadds
add
int3
mov
ret
in
loopne
lcall
push
pop
pop
push
shr
pop
pop
leave
push
add
xor
ror
add
pop
ret
push
push
rol
not
shr
pop
mov
add
push
lea
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
pusha
lods
gs
aad
add
test
add
testb
mov
movsb
add
add
mov
mov
in
add
lcall
push
lea
push
push
push
lea
push
push
call
xchg
push
imulb
xlat
iret
add
add
add
add
add
stos
add
fisubs
mov
add
mov
add
add
cltd
bound
ljmp
add
jne
add
roll
xchg
add
ljmp
push
push
push
push
push
lea
push
call
xchg
add
push
lret
int3
add
add
mov
add
out
lea
fwait
pop
add
mov
mov
in
in
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
add
pusha
add
into
lock
call
loop
mov
add
push
add
add
add
outsl
test
lahf
add
loopne
add
pop
add
out
mov
ljmp
add
lret
fcompl
fdivr
lcall
inc
cld
add
add
push
inc
pop
addl
push
push
push
lea
push
call
add
add
mov
test
jp
add
sti
je
mov
jle
add
mov
add
add
idivb
test
add
lcall
add
cmp
call
jmp
shr
pop
mov
push
xor
lea
ror
add
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
fsub
je
push
je
xchg
add
add
fimull
mov
jecxz
add
pop
add
jecxz
jp
fiaddl
cmpsl
aad
jecxz
jle
add
movsb
pop
popa
add
xchg
add
addl
outsl
lods
add
out
mov
lret
add
cwtl
sub
pop
push
push
push
call
add
xchg
add
mov
push
fidivrs
cmpsb
add
fmull
add
add
add
movsb
stc
loopne
add
xchg
je
movsl
mov
lret
xchg
call
lcall
add
inc
adc
orl
pushf
push
lea
push
push
push
push
lea
push
call
scas
les
add
cmc
mov
xchg
add
add
mov
enter
js
add
fstpl
add
xchg
insb
clc
call
loopne
shr
rol
rol
pop
cmpl
jne
push
shr
pop
pop
push
shl
pop
pop
push
push
push
push
push
push
call
add
mov
add
add
lret
mov
mov
add
test
mov
popf
out
stos
add
add
movsl
stc
add
push
mov
add
add
out
shrl
mov
add
call
pop
pop
push
push
call
jge
mov
add
add
add
loope
rolb
add
add
bound
add
add
mov
outsl
pop
xchg
cmc
add
pop
out
hlt
jp
fadds
fadds
in
clc
lcall
ret
push
dec
pop
push
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
addl
xchg
push
movsb
popf
add
fldcw
in
jae
hlt
loopne
out
cli
scas
add
lods
add
cld
pop
faddl
iret
add
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
jmp
pop
lods
xchg
add
out
add
add
add
call
into
mov
add
clc
pop
cli
add
lcall
in
fcomps
push
push
push
push
push
push
lea
push
push
push
call
add
push
stos
out
mov
jns
add
test
add
add
add
add
mov
add
fdivr
lcall
push
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
stos
jle
clc
add
add
cld
mov
add
jecxz
int
add
add
aad
jb
add
hlt
enter
add
shlb
loopne
add
push
jno
mov
add
mov
mov
hlt
add
cld
xchg
add
pop
push
push
push
lea
push
push
call
add
mov
add
pop
add
fmull
add
add
pushf
lea
add
flds
mov
std
movl
ret
insb
flds
add
mov
leave
jmp
fwait
pusha
jmp
lock
movl
push
inc
xor
pop
push
push
add
ror
shl
pop
call
push
add
pop
push
call
push
push
push
push
push
push
push
lea
push
call
add
add
add
lea
rcll
xchg
push
jbe
mov
jge
ret
jns
add
add
mov
test
adcb
sti
loope
pop
cwtl
add
cmp
add
movsb
add
add
insl
cld
add
test
call
pushw
push
push
push
push
lea
push
call
push
jns
clc
add
jmp
add
add
call
add
add
addr16
mov
add
jnp
cmpsl
cld
icebp
popf
add
add
movl
add
outsl
add
fwait
add
loope
add
loop
jecxz
add
add
sub
pop
pop
push
sub
not
sub
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
call
call
jp
ret
add
cld
push
notb
add
pop
add
add
leave
add
add
mov
in
add
lea
pop
mov
addb
add
mov
add
aad
xchg
add
add
jge
mov
sar
addl
movb
sub
pop
pop
push
shr
shr
pop
leave
push
dec
pop
ret
push
push
sub
pop
mov
push
shr
dec
ror
pop
add
push
push
lea
push
call
xchg
push
add
add
add
add
jnp
add
ja
add
add
fsubl
out
lock
sti
fdivrs
add
int3
sub
pop
push
push
rol
not
pop
push
push
push
not
ror
pop
mov
push
lea
push
call
mov
notl
test
jns
mov
mov
add
jb
add
sar
add
pop
add
push
pusha
test
jmp
sbb
mov
nop
xchg
sti
mov
cmpsl
add
add
test
jle
add
mov
add
add
add
out
add
lcall
inc
cmp
call
xchg
mov
mov
lcall
and
dec
add
add
jno
lahf
cwtl
fnsave
add
test
add
movsb
mov
aad
clc
add
into
add
movsl
add
add
mov
shrb
enter
add
add
movsb
mov
sub
pop
mov
shr
push
push
push
push
call
jb
mov
xlat
add
stc
add
pop
xchg
jno
data16
testl
add
push
fisttpl
add
mov
flds
cmpsb
pop
rolb
add
mov
add
mov
add
mov
add
gs
mov
add
pop
stos
jb
cld
jnp
in
lock
lcall
inc
or
ror
pop
mov
push
lea
inc
add
add
pop
mov
push
push
push
lea
push
push
call
hlt
data16
add
out
test
mov
jne
add
add
add
ljmp
lods
fstl
add
add
leave
add
jecxz
push
addb
add
arpl
mov
imul
add
jle
mov
in
in
lcall
inc
or
shlb
shl
shr
sub
dec
pop
mov
push
lea
inc
sub
pop
mov
push
lea
push
push
push
call
add
jnp
push
movsb
imul
push
add
xchg
data16
add
add
add
xchg
add
push
scas
add
xchg
fiadds
mov
lds
in
popf
movl
add
xchg
add
movsl
add
lahf
add
popf
cmpsb
je
xchg
add
pusha
push
mov
pusha
mov
mov
movsb
testb
jp
ja
add
in
lock
cmp
jne
cmp
jne
push
add
ror
ror
pop
mov
push
sub
not
rol
pop
movl
jmp
push
push
lea
push
lea
push
push
push
push
call
out
add
pop
add
fstl
mov
rcl
clc
add
out
add
jle
lahf
flds
fiaddl
mov
popf
popf
popf
add
add
add
nop
sub
pop
mov
push
xor
shr
add
pop
mov
push
pop
sub
jne
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
data16
add
mov
lcall
add
push
add
add
add
lock
add
mov
cmc
add
mov
jnp
add
mov
push
addb
xchg
add
pop
sub
pop
mov
push
add
sub
ror
sub
pop
movl
jmp
push
push
push
push
lea
push
lea
push
push
call
add
cmpsl
jae
add
add
mov
jns
push
add
add
pop
lcall
rolb
add
test
out
pop
xchg
add
add
add
add
add
push
jmp
les
lea
jb
add
jno
add
lcall
inc
cld
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
jp
jns
add
outsl
js
push
add
addb
dec
pushf
add
push
mov
jbe
jmp
lcall
call
ja
add
add
jo
out
add
scas
mul
scas
add
push
arpl
add
add
add
scas
add
add
in
fcompl
nop
mov
add
push
push
lea
push
lea
push
push
push
push
call
add
fsts
out
sti
xlat
fs
mov
repnz
add
mov
add
add
add
xchg
add
add
rolb
fdivs
mov
add
add
lret
mov
in
in
cmp
jne
push
shr
pop
mov
movl
push
shl
inc
not
inc
pop
jmp
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
pop
flds
faddl
out
je
add
push
sti
stos
aad
add
stos
std
jle
add
cltd
in
mov
add
cmpsb
test
add
stc
test
jnp
jo
mov
add
test
add
pop
xlat
loopne
mov
in
bound
xchg
icebp
sub
pop
mov
push
dec
pop
cmpw
jne
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
xchg
push
clc
xchg
sahf
addl
mov
js
xchg
lods
int
push
cmpsb
testl
data16
mov
outsl
data16
add
add
add
repnz
pop
xchg
gs
pop
mov
push
shr
pop
movl
jmp
push
dec
shl
shr
pop
pushl
push
sub
add
pop
pop
push
push
call
mov
add
add
test
add
lahf
add
mov
add
push
out
ja
sub
pop
mov
mov
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
xchg
add
add
add
add
rclb
fldcw
imul
test
jns
std
add
lods
add
add
xchg
mov
jmp
jnp
push
clc
out
jnp
test
add
add
lcall
push
or
fs
inc
push
ror
inc
push
push
pop
add
rol
shr
sub
ror
pop
add
sub
shl
pop
push
dec
sub
xor
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
rol
add
push
or
inc
add
shl
ror
sub
sub
add
sub
pop
xor
add
pop
push
add
shl
ror
pop
push
push
add
sub
pop
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
jecxz
call
add
add
mov
mov
add
xchg
insb
scas
mov
enter
mov
clc
leave
add
mov
sti
add
mov
jbe
add
add
jl
add
test
int3
add
pop
loope
sub
pop
cmpl
je
push
push
sub
push
or
not
add
dec
sub
add
sub
xor
shl
sub
dec
pop
dec
inc
add
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
ja
add
jns
add
add
jl
add
cli
popl
in
cmpb
test
add
add
add
push
xchg
pop
add
jl
rol
add
mov
pop
push
push
push
push
push
push
push
call
mov
mov
add
cltd
add
stc
lcall
bound
lret
add
add
jmp
add
add
int
xchg
sarb
add
add
add
add
mov
add
jno
add
add
add
and
cmp
add
int3
je
push
push
rol
sub
add
rol
push
or
inc
add
add
lea
rol
sub
dec
pop
ror
xor
pop
push
push
push
push
push
call
add
add
jmp
add
roll
add
mov
fiadds
popf
movsl
pop
push
add
add
lods
shlb
fsubrl
add
xchg
pop
add
into
add
fildl
movb
flds
std
add
cmpsb
hlt
lret
filds
les
add
cli
add
add
add
cmpsl
sub
pop
push
push
pop
call
push
not
pop
cmpl
je
push
push
not
sub
push
or
inc
add
rol
not
sub
inc
pop
not
pop
push
shr
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
cmpsb
cmpsl
add
add
add
mov
lds
shll
jge
add
jp
xchg
mov
enter
je
lds
jecxz
pushf
int
add
add
in
mov
int3
mov
lahf
bound
loop
test
mov
mov
add
sub
pop
call
push
push
push
push
push
push
push
push
call
xchg
add
push
push
add
fistpl
add
push
incb
movl
or
out
mov
rcll
jne
rolb
stos
add
popa
add
xchg
push
push
add
je
jmp
pop
pop
add
cwtl
ja
data16
je
sahf
mov
cmpsl
sar
add
lcall
cmp
rol
je
push
push
add
push
sub
add
dec
shl
sub
ror
lea
pop
not
pop
push
sub
xor
shl
add
pop
push
push
push
push
lea
push
push
call
pop
add
aam
mov
add
mov
jecxz
out
add
add
mov
aam
push
add
mov
movsl
add
incb
rolb
loop
add
mov
sub
pop
call
push
push
lea
push
push
push
lea
push
call
out
add
pushf
mov
add
nop
mov
jmp
add
cli
fisubl
pop
jmp
mov
add
add
mov
sub
pop
cmpl
je
push
push
lea
lea
inc
push
sub
add
add
not
inc
sub
not
sub
dec
pop
not
pop
push
push
push
call
mov
jno
pop
cmc
mov
mov
cltd
int3
mov
add
add
roll
movl
add
add
sar
add
jmp
ficomps
or
add
add
ja
imul
add
jp
add
add
xchg
int
in
hlt
pop
push
call
push
ror
dec
xor
pop
cmpl
je
push
push
ror
ror
dec
push
xor
add
not
sub
sub
pop
ror
pop
push
push
push
push
push
call
hlt
pushf
add
popa
jbe
mov
add
clc
imul
lds
lds
cltd
imul
mov
data16
add
mov
add
mov
clc
add
add
add
add
push
in
fidivs
in
mov
loop
add
add
pop
jmp
sub
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
shlb
out
add
cli
pushf
add
out
mov
add
mov
add
add
test
add
fwait
add
add
hlt
aam
mov
mov
jns
add
nop
add
loopne
mov
movl
test
jmp
lock
add
pop
call
cmpl
je
push
push
ror
not
xor
push
push
pop
add
inc
shl
sub
sub
add
shr
pop
sub
sub
ror
pop
push
not
pop
push
push
lea
push
push
push
push
push
push
call
stos
mov
pop
test
add
test
in
int3
add
jge
add
lret
add
add
fsubrp
add
add
add
xchg
roll
push
xchg
add
add
loopne
arpl
jns
fldl
movb
shrl
roll
loop
shlb
out
popa
add
out
push
lods
mov
add
cmpsb
push
jns
add
lcall
mov
add
push
push
push
call
add
mov
imul
in
add
push
push
rolb
add
testb
push
add
add
les
addl
lahf
mov
add
lcall
cmp
rol
je
push
push
rol
sub
ror
push
push
pop
add
shl
add
sub
rol
sub
pop
inc
sub
pop
push
push
push
push
call
xchg
add
push
add
mov
fldenv
add
pop
add
cli
je
pop
mov
in
add
mov
xchg
jo
adcl
pop
push
call
push
lea
pop
cmpl
je
push
push
lea
inc
push
or
inc
add
dec
sub
dec
inc
pop
shr
add
pop
push
shl
shl
pop
push
push
ror
pop
call
push
lea
push
push
push
call
mov
ret
fisubrl
add
add
add
imul
add
mov
push
add
rolb
out
add
jmp
add
push
jns
add
add
mov
jae
lahf
mov
add
pop
ret
sub
pop
cmpl
je
push
push
sub
push
sub
add
xor
sub
inc
ror
add
pop
shl
inc
pop
push
shr
inc
add
pop
push
push
rol
lea
xor
sub
pop
call
push
shl
add
pop
cmpl
je
push
push
push
and
add
shl
sub
lea
inc
sub
pop
inc
add
pop
push
not
sub
not
pop
push
push
add
add
not
pop
call
push
push
push
push
lea
push
push
call
testb
pop
lock
popa
aam
add
into
xchg
jp
add
pop
jecxz
add
rolb
add
outsl
add
add
push
add
add
ret
mov
push
mov
add
mov
mov
fadds
popa
lods
add
mov
sahf
sub
pop
cmpl
jne
push
push
call
leave
test
clc
jno
roll
add
push
add
add
in
add
jne
add
shll
add
repnz
mov
fsubl
add
jne
add
aam
add
fildl
lock
incb
add
push
cwtl
mov
add
lcall
inc
adc
dec
push
push
push
lea
push
lea
push
call
mov
add
add
xchg
add
cmpsb
sar
rcrl
lods
mov
mov
add
bound
add
pop
loopne
std
pop
mov
lock
movl
push
push
push
push
push
push
call
aam
subb
movsb
repnz
lods
push
add
add
fildl
mov
add
add
pop
mov
sahf
pusha
lea
movsl
imul
in
call
add
push
sub
dec
rol
not
pop
xor
push
sub
pop
pop
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
faddl
add
add
xlat
add
shlb
mov
push
imul
add
xchg
add
add
int3
lods
add
cwtl
add
add
in
lcall
push
push
push
push
push
push
push
push
push
call
add
fwait
jbe
xchg
mov
scas
mov
fiadds
add
mov
add
jmp
add
incb
add
push
add
cmpsb
add
add
sub
pop
pop
push
lea
push
push
lea
push
push
call
add
mov
add
fcoml
mov
add
push
fstps
push
in
add
lock
add
mov
mov
popa
add
jnp
add
xchg
pop
call
sarb
mov
pushf
addb
xchg
mov
loope
xchg
cltd
cmc
mov
shl
sub
pop
leave
push
push
push
push
push
call
add
cwtl
clc
mov
xlat
lahf
fldt
fcomip
mov
cltd
test
push
add
aad
les
ret
mov
sub
pop
ret
push
push
push
call
jo
mov
pop
xchg
xchg
pushf
mov
out
push
add
cmpsl
test
jnp
xlat
incb
mov
enter
add
add
add
ja
pop
mov
xchg
sub
pop
push
push
pop
mov
push
push
lea
push
call
fwait
add
add
repnz
fldl
je
nop
push
lds
mov
add
test
add
lods
rcrl
jno
mov
imul
add
in
cmpl
jne
push
push
add
shr
ror
add
push
or
not
add
not
sub
pop
ror
pop
push
push
push
call
jge
add
add
sahf
jecxz
je
add
xchg
loopne
fadds
into
add
xchg
pusha
int3
sbbb
in
hlt
lcall
jne
push
push
call
add
push
add
pop
jo
add
mov
add
shrl
stc
test
mov
gs
push
add
fcoml
jle
shlb
add
xchg
add
lods
add
add
add
add
movsb
cwtl
add
add
pop
add
test
in
clc
pop
call
push
lea
push
call
add
mov
add
cmc
add
mov
add
fildl
add
into
add
stos
pusha
push
add
push
add
fcmovu
mov
in
clc
lcall
call
loop
ror
shr
pop
call
push
shr
lea
rol
pop
jmp
cmpl
je
push
push
push
push
call
add
pop
jecxz
mov
add
cmpsb
add
jae
add
shl
pop
xchg
mov
out
jle
pop
add
shlb
add
mov
mov
movsb
stos
add
add
jno
jmp
cmpl
jne
mov
push
push
push
push
call
imul
loopne
popf
xchg
pop
add
push
flds
int
mov
add
out
stos
scas
roll
testb
add
add
add
add
add
leave
faddl
out
add
push
add
jae
xchg
pop
call
push
push
not
add
lea
lea
push
or
inc
add
xor
rol
xor
sub
shl
rol
pop
pop
push
sub
shl
pop
pushl
push
rol
add
pop
call
lea
push
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
jo
push
add
stc
add
add
lea
add
rolb
ret
mov
lods
add
int3
add
movsb
add
mov
add
xchg
jge
test
sarl
mov
cmc
in
fiaddl
add
out
lds
sub
pop
push
push
inc
add
not
pop
push
push
push
add
ror
dec
not
pop
call
push
xor
pop
ret
jmp
push
sub
pop
cmpl
jne
push
push
rol
shr
push
sub
add
sub
sub
shl
not
pop
sub
pop
push
sub
sub
pop
pushl
push
not
pop
call
push
add
sub
add
pop
push
push
inc
sub
lea
pop
call
push
sub
pop
jmp
push
push
push
push
push
push
call
cld
leave
enter
add
in
pop
ja
pusha
cmc
jne
add
ret
add
jnp
jb
mov
add
xchg
faddl
test
jns
fistps
mov
sub
pop
cmpl
jne
push
dec
pop
mov
push
lea
push
push
call
in
clc
add
add
push
add
push
sar
push
mov
jnp
data16
xchg
ja
mov
loopne
mov
cmpsb
jmp
xchg
in
add
add
add
pop
mov
push
push
push
push
push
push
lea
push
call
notl
pop
push
icebp
sahf
loopne
cld
mov
loop
popa
aam
jne
push
lret
lret
add
add
rcl
mov
cmpsb
enter
add
in
fildll
add
movsb
add
jge
scas
rcll
add
add
push
add
add
pop
adc
rorl
outsb
lods
push
inc
push
and
add
xor
inc
sub
rol
sub
sub
add
ror
pop
add
pop
push
add
dec
add
pop
pushl
push
lea
shr
inc
pop
call
push
shr
not
not
pop
call
push
push
xor
shl
dec
xor
push
or
not
add
add
shr
sub
rol
sub
pop
lea
pop
push
not
lea
pop
pushl
call
push
shl
add
lea
pop
call
push
push
shl
sub
push
or
not
add
add
sub
lea
inc
shl
pop
sub
rol
lea
pop
push
push
push
push
push
push
push
push
call
jnp
test
mov
mov
fiaddl
add
sti
add
add
add
add
add
aad
add
add
mul
mov
add
add
add
lds
add
add
sub
pop
pushl
push
push
lea
push
push
lea
push
call
mov
in
add
shl
add
leave
cmpsl
add
insb
add
add
mov
mov
push
add
mov
lcall
mov
add
call
push
push
add
add
not
push
and
add
add
add
shr
sub
sub
pop
add
sub
pop
push
push
push
push
push
push
push
push
push
call
int
add
fxch
add
add
add
testb
mov
filds
outsl
outsl
in
cltd
loope
add
add
add
add
clc
add
sub
pop
pushl
push
dec
pop
call
call
push
push
add
shr
push
sub
add
sub
dec
inc
sub
dec
sub
pop
shr
add
lea
pop
push
inc
sub
inc
pop
pushl
push
sub
lea
xor
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
pop
clc
mov
mov
iret
jecxz
movsb
int
lcall
ljmp
out
add
lods
add
pusha
add
imull
add
add
test
xchg
pop
add
imul
rcrb
lcall
shrb
loope
mov
push
xor
add
add
add
sub
inc
pop
sub
shl
pop
push
sub
pop
pushl
push
ror
sub
rol
pop
call
push
push
push
push
push
push
push
push
lea
push
push
call
je
fldt
xchg
add
mov
add
fs
rolb
add
in
fcomps
shrb
xlat
imul
push
xor
add
add
sub
xor
pop
lea
ror
pop
push
sub
shr
not
dec
pop
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
ja
pop
add
mov
add
stc
mov
push
add
enter
add
add
testb
mov
xchg
add
xchg
add
add
pop
add
push
mov
add
add
insb
out
jl
fiadds
push
add
mov
add
add
leave
call
add
add
pop
call
push
dec
dec
pop
call
push
push
shl
sub
add
push
push
pop
add
add
sub
not
rol
shr
pop
dec
pop
push
push
push
push
push
lea
push
push
call
rolb
mov
mov
add
pop
add
add
shlb
sti
mov
repnz
lret
add
popa
push
insb
fldl2t
add
mov
sub
pop
pushl
call
push
inc
pop
call
push
push
xor
push
sub
add
dec
sub
dec
sub
sub
ror
sub
pop
add
inc
xor
pop
push
add
add
xor
not
pop
pushl
push
ror
pop
call
push
push
push
push
push
push
lea
push
lea
push
push
call
lods
pop
add
add
lahf
imul
add
add
in
shr
add
sar
mov
add
ret
mov
test
add
add
out
mov
icebp
fucomi
add
add
add
fdivr
lcall
shrb
sub
jge
inc
push
sub
add
add
shl
sub
inc
dec
lea
shl
pop
sub
shl
pop
push
push
lea
push
push
lea
push
push
push
push
call
jo
fwait
pop
pop
outsl
add
mov
add
cmpsb
fldl
add
add
jne
add
add
jl
hlt
filds
add
js
fadds
add
jmp
push
flds
repnz
popf
pop
jecxz
add
add
sub
pop
pushl
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
fiadds
mov
imul
roll
add
mov
add
add
add
add
clc
mov
jge
pop
mov
outsl
lret
lahf
push
add
out
add
push
movsl
subl
add
add
repnz
loope
mov
fwait
sub
pop
call
push
add
sub
pop
lea
push
shr
sub
not
pop
push
call
push
push
inc
add
push
xor
add
inc
xor
sub
xor
not
inc
pop
not
not
add
pop
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
jne
mov
mov
fsubs
push
test
loopnew
xchg
add
in
add
push
cltd
mov
jbe
add
add
add
push
test
fidivs
mov
add
add
push
jge
add
push
out
je
add
push
jb
add
add
sub
pop
pushl
push
sub
pop
call
call
push
push
shl
shr
shl
dec
push
or
not
add
ror
sub
sub
not
add
xor
pop
xor
shr
sub
pop
push
push
lea
push
push
push
push
push
call
lods
movsb
scas
aam
add
add
pusha
add
add
add
fwait
add
repnz
add
add
mov
add
add
add
lcall
jne
call
push
pop
call
push
push
push
push
pop
add
add
shl
sub
inc
pop
lea
pop
push
sub
not
pop
pushl
push
ror
sub
shl
pop
call
push
push
push
lea
push
call
stos
add
add
jle
mov
jmp
push
subl
pop
movsl
in
add
in
add
rol
add
lret
add
jae
icebp
add
sahf
lock
mov
iret
add
fcoml
fcmovbe
add
xchg
movsb
sub
pop
call
push
shr
lea
rol
pop
pop
push
sub
pop
dec
jne
jmp
push
push
add
push
xor
add
rol
ror
add
sub
xor
pop
lea
pop
push
push
push
push
push
call
add
cli
xchg
scas
add
test
xlat
sahf
add
scas
in
jae
jle
add
je
rorl
out
imul
fildl
mov
pop
add
pop
jno
add
push
add
add
in
in
pop
pushl
call
push
dec
pop
lea
push
push
sub
shr
pop
push
push
add
lea
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
movsl
mov
mov
sti
xchg
xchg
mov
jns
mov
shll
into
add
jnp
lods
test
loopne
add
pop
add
enter
push
add
shl
xchg
into
lret
mov
xchg
je
stc
mov
mov
jns
enter
cli
add
rclb
lea
pop
in
push
call
outsl
outsl
addb
test
mov
xchg
add
call
fists
add
add
out
add
add
add
add
js
cmpsl
add
in
mov
icebp
add
push
jnp
add
in
ljmp
add
lcall
ret
add
sbb
in
push
sub
push
xor
add
xor
sub
ror
sub
pop
shl
xor
pop
push
push
push
push
push
push
call
scas
loope
mov
scas
ja
add
pop
add
in
hlt
cmpsb
add
add
clc
add
add
jnp
mov
outsw
add
popa
add
add
jge
mov
jns
mov
sub
pop
pushl
push
lea
sub
pop
call
push
lea
push
call
add
add
add
imul
add
xchg
add
add
loop
add
push
jne
fcomps
xchg
mov
add
nop
movl
jecxz
pop
xchg
add
lcall
push
lret
jmp
mov
mov
cli
jmp
cmpsl
fs
jo
add
pop
sub
pop
push
push
push
push
push
lea
push
lea
push
call
jbe
addr16
add
push
ja
addl
mov
movsb
add
mov
out
enter
jl
pop
add
push
add
sub
pop
call
push
pop
mov
push
push
add
shl
push
xor
add
inc
sub
sub
sub
sub
pop
xor
pop
push
lea
push
push
push
call
popa
xchg
fildl
xchg
add
add
js
add
add
mov
add
add
mov
rcl
mov
push
add
leave
add
add
xchg
mov
add
add
mov
roll
add
add
pop
insb
push
enter
push
in
lock
lcall
jne
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jb
test
imul
fcomi
sub
ja
add
add
orb
mov
in
imul
add
test
add
xchg
add
lea
push
lea
push
push
lea
push
push
push
push
call
mov
test
jae
add
jecxz
movsb
jbe
add
mov
ljmp
push
mov
add
je
add
add
add
test
mov
lcall
add
js
test
add
push
push
shr
pop
push
push
push
push
lea
push
push
push
call
add
add
lea
sbbb
gs
pop
add
ljmp
xchg
addl
add
shll
lock
mov
mov
les
add
sti
sub
pop
push
push
push
push
lea
push
push
lea
push
push
call
cwtl
into
scas
add
add
xchg
mov
jno
add
add
fwait
push
jne
add
add
add
add
addb
jl
add
push
add
mov
mov
add
fdivrs
popf
add
add
in
in
call
push
shl
shr
sub
xor
pop
lea
push
push
add
xor
push
or
not
add
dec
ror
ror
sub
sub
ror
pop
dec
pop
push
push
call
movsb
neg
add
iret
jno
jae
into
mov
add
add
add
add
add
stos
je
out
andl
xchg
call
jl
add
lcall
jne
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
ror
rolb
test
mov
int
jnp
add
int3
pop
add
add
lcall
push
push
push
push
call
jns
mov
sbbl
lea
add
add
mov
jmp
mov
out
xchg
in
hlt
add
mov
add
mov
icebp
push
lret
pop
add
lcall
shrb
jmp
push
push
sub
push
and
add
dec
sub
inc
add
add
pop
add
pop
push
add
pop
pushl
call
push
sub
sub
sub
pop
call
mov
push
ror
shr
not
pop
lea
push
push
push
sub
add
dec
sub
not
pop
shl
pop
push
ror
xor
inc
inc
pop
pushl
call
push
push
push
lea
push
push
push
push
push
lea
push
call
jge
je
add
mov
add
pop
lret
cld
pusha
jp
mov
stc
popf
add
lahf
into
add
mov
stos
add
fbld
iret
insb
add
add
jl
jbe
mov
jge
xchg
add
jns
lock
add
add
add
rcrl
add
call
movsb
add
add
out
add
lcall
add
push
push
add
dec
xor
pop
push
push
push
push
lea
push
lea
push
push
push
call
fstps
cmc
push
pop
mov
cltd
add
pusha
lret
addl
pop
filds
lods
push
pop
add
pop
jno
add
aad
add
flds
shlb
mov
add
add
push
cmpsl
imul
sub
pop
pushl
push
push
rol
push
xor
add
xor
shr
shl
sub
shr
pop
add
pop
push
push
call
pushf
std
add
addr16
add
add
add
fwait
out
andb
fimuls
add
add
jl
add
jbe
mov
test
int3
add
add
fwait
add
xchg
add
lcall
push
shl
rol
pop
call
push
push
sub
sub
push
or
not
add
ror
shr
shr
dec
sub
inc
pop
rol
sub
sub
not
pop
push
inc
not
inc
pop
pushl
push
lea
push
push
push
push
push
call
mov
rolb
add
mov
shll
lods
divb
mov
test
jge
push
mov
movsl
pop
shlb
add
add
insb
mov
into
mov
call
add
push
ror
not
add
pop
push
push
not
pop
call
push
push
sub
push
xor
add
inc
rol
rol
lea
sub
add
rol
pop
inc
pop
push
lea
push
push
call
xchg
cld
mov
mov
push
cmc
shrb
add
add
mov
xchg
add
add
in
lahf
add
add
add
add
outsl
add
add
add
push
add
push
add
shr
add
add
sub
pop
pushl
call
push
lea
push
push
push
call
push
jnp
add
add
add
mov
div
push
jmp
jle
add
mov
mov
ja
push
xchg
out
mov
lret
addr16
test
sarb
add
lcall
shr
mov
add
push
push
push
lea
push
push
push
push
push
push
call
add
shlb
test
aam
stos
push
add
jne
add
rcrl
mov
add
hlt
ret
lock
add
in
add
pop
int
jecxz
add
lcall
pushl
mov
push
pop
jmp
push
push
shl
sub
push
sub
add
sub
sub
not
pop
shr
add
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
mov
add
fnstenv
push
add
mov
fs
icebp
add
add
fcomps
jne
call
push
shr
shr
pop
push
call
push
push
not
dec
push
or
inc
add
rol
sub
shl
add
pop
sub
sub
shr
pop
push
sub
shr
xor
dec
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
jl
jmp
test
add
fildl
xchg
add
in
rol
lea
push
idivl
add
data16
add
add
lahf
into
add
fs
shlb
add
fwait
push
in
sub
pop
push
push
push
push
push
push
push
push
push
call
add
iret
lahf
bound
xchg
push
mov
mov
call
mov
xchg
add
add
enter
add
mov
add
imul
movsb
add
xchg
mov
decb
xchg
imul
push
push
push
push
call
scas
push
gs
jnp
arpl
add
mov
cli
mov
fwait
lods
push
outsl
mov
popf
add
add
idivb
pop
xlat
pop
sti
scas
mov
shll
add
xchg
add
mov
cwtl
add
add
loop
add
add
add
add
sti
cltd
sub
pop
leave
add
push
add
pop
pop
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
int3
fists
add
movsl
jp
aam
add
add
lea
mov
sahf
lret
int3
xchg
jno
icebp
jp
add
scas
fisttpll
fildl
cltd
add
pusha
lea
add
add
scas
pop
jns
mov
mov
in
fdivr
lcall
push
lea
push
push
push
call
shrl
add
div
mov
add
jae
add
out
out
mov
add
mov
out
stos
outsl
std
sub
pop
xor
inc
push
sub
pop
ret
push
shl
ror
inc
pop
leave
ret
push
shr
add
ror
pop
push
push
shl
pop
mov
push
shr
ror
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
call
popl
stc
nop
mov
push
mov
cli
loope
jne
add
pusha
testl
jle
insb
add
add
sti
xchg
add
add
jnp
add
push
pop
cmpsb
leave
add
cwtl
int
mov
rcrb
add
lcall
inc
and
push
inc
sub
rol
pop
jmp
push
inc
lea
pop
mov
push
lea
push
push
lea
push
lea
push
call
add
lcall
pop
cmpsb
roll
add
cli
jae
fwait
test
jl
scas
repnz
jbe
push
popa
add
add
add
add
into
add
arpl
jb
popa
add
fiaddl
test
imul
out
add
add
pop
add
xchg
add
loopne
sahf
testl
push
mov
sub
pop
and
xor
push
push
call
jnp
scas
out
add
cld
test
cli
mov
xchg
add
add
pop
xchg
add
jecxz
add
add
push
xchg
addb
jnp
add
gs
push
add
add
xchg
add
insb
in
lcall
mov
add
repnz
repnz
pop
xor
push
push
push
push
push
push
call
loop
cwtl
pop
in
roll
out
add
testl
add
mov
scas
add
add
insb
mov
add
cli
add
mov
lcall
rolb
dec
call
jmp
sub
xor
pop
dec
push
push
push
push
push
call
jnp
xlat
add
add
fistpl
sarb
lret
add
add
add
mov
int
add
mov
popf
into
stc
add
lea
fcomps
pop
jno
add
add
sub
jmp
push
lea
push
push
lea
push
push
push
push
push
call
gs
add
add
jns
add
add
xchg
mov
add
addr16
fnsave
lret
mov
xchg
leave
add
nop
push
sarl
iret
add
ljmp
add
lret
push
add
js
add
out
add
add
add
stc
xlat
sub
pop
sub
push
push
lea
push
call
add
add
mov
clc
fadds
pushf
jle
addl
testl
add
add
jae
repnz
mov
add
int3
add
mov
fistpll
ljmp
add
imul
fucomi
shl
test
add
gs
xchg
out
lods
fisubl
pop
pushl
push
shr
pop
pop
push
push
push
push
push
push
push
call
scas
in
shlb
in
int3
lcall
mov
add
add
rolb
add
subb
scas
jne
imul
add
push
mov
mov
add
add
filds
sub
pop
sub
cmp
jne
push
dec
sub
ror
pop
mov
lea
push
inc
pop
sub
push
not
rol
shl
pop
mov
shr
push
push
push
push
push
push
push
push
push
push
call
xchg
jns
add
xchg
out
icebp
aad
add
xchg
les
jecxz
pop
in
les
popa
cmc
lods
in
jmp
pop
add
add
add
add
add
sti
clc
mov
add
lret
mov
add
jl
leave
int
add
jb
lea
jb
test
test
int
popa
pop
add
xchg
push
in
fdivr
lcall
enter
add
pop
sub
push
sub
add
lea
pop
pushl
push
push
push
push
push
push
call
lds
add
jp
mov
jae
add
jb
not
out
add
xchg
add
fildl
lcall
push
add
add
shl
pop
shr
and
push
add
inc
pop
sub
push
lea
pop
cmp
jne
push
shl
dec
dec
lea
pop
leave
ret
push
lea
pop
push
push
shr
pop
mov
add
push
sub
pop
push
push
push
push
lea
push
push
call
add
roll
std
sarl
add
lret
scas
movsl
add
add
mov
shll
push
ftst
add
xchg
test
add
sub
pop
push
push
push
shl
ror
pop
push
push
push
call
jecxz
xchg
add
jmp
mov
jne
add
pop
mov
jp
sar
jge
scas
add
fsubs
mov
xor
xchg
divl
add
add
push
xchg
add
adcb
mov
add
lret
pop
sub
pop
push
mov
push
shr
pop
lea
sub
push
add
pop
mov
push
add
pop
shr
push
push
push
push
push
push
lea
push
lea
push
call
pusha
mov
fiadds
add
loopne
mov
out
in
add
push
jl
hlt
data16
mov
add
add
f2xm1
notl
testl
popa
frndint
xlat
lahf
add
add
add
mov
test
filds
popa
add
sub
pop
add
push
lea
push
push
push
lea
push
call
stos
mov
jno
cwtl
add
fldl
enter
add
mov
addr16
insb
scas
fs
push
pop
jl
add
add
add
add
push
add
add
mov
add
movsb
jecxz
pop
jmp
lcall
fwait
addb
add
pop
or
mov
push
lea
push
lea
push
lea
push
call
data16
sti
add
mov
icebp
add
add
lea
add
add
add
add
pusha
xchg
add
add
cltd
jbe
lcall
jno
in
lock
lcall
jge
push
push
push
push
push
push
push
lea
push
call
aad
mov
jns
mov
add
add
std
add
icebp
movsb
add
test
add
in
add
add
add
mov
add
pop
lock
add
addb
in
loopne
xor
mov
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
mov
add
mov
mov
int3
pushf
mov
mov
test
jbe
add
repnz
pop
in
aad
stos
add
leave
jle
lcall
push
out
add
mov
int
add
add
mov
popa
je
add
sahf
add
int
add
add
addb
in
mov
add
test
jle
js
sub
pop
and
rol
push
lea
push
push
push
call
add
out
add
add
cmpsl
jne
mov
pushf
bound
pop
out
add
addr16
in
add
test
mov
repnz
add
stos
insb
push
scas
add
add
nop
add
jo
mov
push
loope
fs
xchg
roll
add
lds
push
add
sub
pop
rol
push
add
pop
xor
push
lea
sub
pop
inc
push
shl
add
pop
cmpb
jne
push
add
rol
pop
add
push
push
push
push
push
push
push
call
enter
cld
add
addb
add
add
out
cmpsb
addr16
scas
add
pushf
add
jnp
mov
lock
add
in
in
lcall
inc
or
test
ror
inc
pop
add
push
shr
sub
pop
cmpl
jne
push
push
lea
push
call
addr16
loopne
add
add
push
pop
add
mov
xchg
fiaddl
add
add
out
add
in
fiaddl
push
mov
add
fs
iret
add
mov
lcall
rclb
lea
push
push
push
push
push
push
push
call
jnp
notb
push
test
jecxz
fmulp
imul
push
rorl
mov
movsl
push
fadds
add
sub
pop
pop
push
push
call
je
fs
pop
sarb
add
add
in
fildl
call
fstps
jmp
rcl
add
roll
mov
mov
fwait
add
out
aad
cltd
add
pop
xchg
fildl
in
jmp
add
data16
add
add
clc
shlb
flds
add
in
sub
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
fs
insb
popl
add
jns
jbe
add
add
sti
add
in
jmp
add
xchg
rolb
add
jmp
add
push
mov
scas
xchg
mov
add
add
add
add
call
in
loopne
pop
push
ror
shl
pop
pop
push
rol
inc
pop
pop
push
sub
pop
leave
ret
push
rol
ror
pop
mov
add
push
dec
not
shl
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
add
xchg
mov
add
add
stos
outsl
out
lods
pop
mov
jnp
push
jne
cli
out
popf
into
mov
scas
jmp
add
add
add
jo
pop
add
sub
pop
push
push
shl
pop
testb
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
push
aam
mov
in
movsl
mov
mov
pop
fs
add
add
out
add
xchg
add
mov
leave
jecxz
mov
add
jo
push
add
add
jno
add
add
int3
add
pushf
shlb
int3
add
xchg
roll
lcall
push
push
push
push
push
push
push
push
push
push
call
lret
add
add
icebp
add
jmp
add
add
pop
jp
add
add
add
add
push
mov
add
xchg
add
add
lcall
cmp
call
pusha
adc
mov
mov
jl
or
sub
add
popa
out
mov
mov
shl
add
jb
add
xchg
add
ja
mov
sub
add
add
out
in
in
lcall
push
ror
sub
pop
call
push
push
lea
push
call
int
repnz
add
fildl
mov
add
out
out
add
mov
lds
add
add
add
add
push
add
ret
hlt
pop
mov
mov
out
mov
add
rolb
stos
mov
pop
add
xor
push
dec
inc
add
pop
pop
push
push
call
push
xchg
add
add
add
jne
fs
add
add
jge
mov
out
add
add
add
js
add
cltd
orb
mov
js
fstpl
lret
add
add
call
add
mov
cld
lret
add
subl
shll
add
mov
clc
lcall
push
shr
add
ror
pop
pop
pop
push
push
push
lea
push
lea
push
push
call
pop
cmpsl
xchg
scas
pusha
cmpsl
add
cmc
add
ret
fdivr
add
mov
mov
mov
add
loop
jno
in
call
leave
ret
push
lea
xor
shr
shr
pop
push
push
push
push
lea
push
push
push
call
scas
icebp
testb
add
fwait
add
add
in
movsb
add
jecxz
mov
add
push
add
push
add
out
add
mov
fnsave
add
xchg
in
add
bound
add
int
add
mov
in
mov
lcall
in
push
add
pop
add
push
dec
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
fst
push
rolb
pop
mov
nop
add
xchg
add
add
mov
add
icebp
fldl
xchg
cli
add
add
mov
add
add
add
ljmp
pop
push
push
add
not
pop
push
push
push
push
push
call
add
add
add
add
add
call
aam
push
add
add
call
xorb
in
lock
lcall
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
ja
add
subb
jmp
add
imul
add
push
data16
add
add
mov
jmp
int3
pop
xchg
add
push
leave
add
cmp
push
cmpsb
add
add
out
add
ljmp
add
sub
pop
mov
push
lea
push
push
call
stos
mov
add
add
add
xlat
iret
add
lock
jb
lods
pop
jmp
mov
add
xchg
adcb
mov
add
add
movl
add
add
add
mov
add
jp
mov
fwait
add
push
jnp
loopne
sub
pop
push
push
sub
pop
pop
lea
push
shl
pop
sub
mov
push
lea
pop
shr
push
lea
shr
pop
add
mov
push
push
lea
push
lea
push
call
add
movl
hlt
add
repnz
add
cli
fisubl
imul
add
mov
popf
sub
pop
add
push
inc
pop
pushl
popl
push
lea
push
push
push
lea
push
push
call
add
add
add
out
mov
add
pop
add
add
int3
popf
ror
push
add
in
aam
jb
divl
cwtl
add
jge
add
fnstenv
hlt
out
pop
jo
add
add
testl
add
sub
pop
mov
push
push
push
push
push
call
cli
jl
out
add
bound
out
popf
roll
mov
add
movw
fstps
add
add
cmc
mov
popf
aam
push
add
cmc
pop
mov
mov
imul
test
jl
pushf
fcmovnbe
add
test
add
push
push
call
movsb
lds
jecxz
add
xchg
push
add
push
leave
push
add
mov
mov
ljmp
les
add
add
lods
andl
add
lcall
notb
scas
dec
in
loop
mov
sbb
add
xchg
fs
push
call
popf
imul
iret
cmc
test
icebp
add
mov
add
lods
lret
xlat
add
call
nop
add
add
add
scas
pusha
in
add
cmpsl
cmc
fs
out
mov
mov
add
jmp
in
scas
add
mov
cwtl
sti
push
add
in
in
lea
push
dec
ror
dec
ror
pop
mov
push
sub
dec
pop
add
push
lea
push
push
lea
push
push
call
movsb
test
add
mov
mov
mov
add
mov
mov
leave
add
lahf
xchg
push
test
mov
jne
pusha
mov
in
in
lcall
rclb
lods
and
push
push
push
push
call
add
add
cld
xchg
add
add
add
add
mov
fdivrs
add
cmc
sub
pop
rol
push
lea
push
push
push
push
push
push
push
call
xchg
pop
add
xchg
cli
jecxz
add
pop
xchg
add
mov
add
imul
jno
mov
add
add
ficoml
lcall
push
pop
nop
xor
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
out
add
add
mov
in
mov
jecxz
ror
cmpb
mov
mov
cld
test
pop
add
mov
movsb
mov
add
arpl
stos
or
addl
mov
fisubl
add
fcompl
push
push
push
push
push
push
push
lea
push
push
call
push
add
add
add
pop
xchg
test
add
add
mov
lods
out
pop
add
add
repnz
pop
stc
loopne
add
cwtl
pop
xchg
add
fcompl
inc
push
shr
pop
nop
push
push
push
push
lea
push
push
push
push
call
add
add
cwtl
out
fimuls
add
cli
fisubl
xchg
nop
int3
add
sahf
loop
shl
cld
out
pop
add
mov
ja
add
addl
stos
add
cltd
add
mov
out
lret
fadds
add
xorb
sub
pop
nop
push
add
not
pop
cmpb
jne
push
push
push
push
push
lea
push
push
push
push
call
add
add
outsl
mov
divb
jne
add
fldt
roll
add
jns
lods
add
popf
stos
jl
mov
cmc
xchg
data16
add
inc
pop
ss
nop
push
lea
push
push
push
push
lea
push
push
call
add
mov
fnstcw
add
popl
in
popl
out
add
mov
pop
mov
lods
jp
movsl
cltd
sub
pop
nop
push
lea
push
push
lea
push
call
ret
jle
add
add
fsub
add
add
int3
aad
clc
lcall
add
mov
subb
add
push
add
add
pusha
add
fimuls
add
pop
add
filds
mov
popf
mov
lock
lcall
inc
or
test
lea
push
push
push
lea
push
call
xchg
test
jno
enter
pushf
fs
add
add
push
add
add
add
jb
add
mov
cld
popf
sub
pop
nop
nop
push
not
lea
not
rol
pop
inc
push
push
push
push
push
push
call
jge
mov
fadds
add
cwtl
mov
xchg
test
jae
xchg
call
add
xchg
mov
aam
ljmp
roll
add
add
add
fs
rol
sahf
add
add
add
nop
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
add
add
add
add
jns
jp
sarb
pop
iret
mov
add
add
mov
add
out
ret
add
loopne
lcall
push
push
push
push
call
popa
add
add
fcmove
lret
push
xchg
loopne
add
sti
imul
xchg
pushf
je
js
add
add
add
lcall
jne
jb
xor
push
inc
lea
pop
jmp
push
xor
shr
ror
pop
mov
push
lea
push
push
push
call
jo
testl
xchg
enter
jge
add
test
add
add
fistpl
mov
mov
add
out
xchg
movsl
out
pop
mov
add
xchg
add
mov
out
repnz
fldl
push
add
add
rcll
rcrb
mov
jb
inc
ror
shl
ror
pop
mov
push
lea
inc
sub
xor
pop
add
push
sub
pop
mov
push
shr
pop
xor
xor
push
ror
xor
ror
pop
shl
push
lea
push
push
push
call
add
aam
out
cwtl
xchg
add
mov
add
add
hlt
add
fs
lret
imul
test
into
lds
add
add
jp
test
jnp
jle
jge
scas
test
mov
mov
sub
pop
xor
push
lea
push
call
push
scas
loopne
mov
lret
pop
scas
xchg
aam
roll
ret
out
int3
stos
testb
add
iret
mov
add
in
imul
add
mov
xchg
fisttpl
fcoms
pushf
sar
add
add
movsb
add
loope
push
not
add
pop
xor
shl
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
out
add
popf
add
roll
mov
lea
push
shl
add
push
xchg
in
insb
pop
mov
mov
mov
loopne
aam
hlt
add
mov
in
fdivr
lcall
or
mov
push
push
push
push
push
push
push
lea
push
call
loope
xchg
push
lea
mov
add
in
addr16
add
add
add
xchg
lret
push
test
in
add
leave
pop
mov
int
nop
add
mov
pop
add
mov
rcll
mov
push
lea
add
jb
imul
pop
jae
in
loopne
lcall
inc
hlt
push
lea
push
push
call
jo
out
jecxz
cmpsl
add
loope
test
shr
add
movsl
add
les
push
mov
xchg
add
add
flds
add
cmpsb
mov
fxch
jbe
mov
add
push
xchg
pop
cmpsl
fiaddl
jge
fiadds
push
js
add
mov
stc
mov
mov
add
add
add
in
hlt
pop
pop
push
shl
rol
pop
pop
pop
push
ror
inc
shr
pop
pop
push
lea
pop
leave
push
push
push
push
push
call
add
pop
push
pop
add
add
mov
addb
add
add
loope
in
lret
add
ror
pop
testl
add
lcall
or
push
push
call
add
lea
out
loopne
enter
fisttpll
push
add
add
mov
pop
lret
mov
push
cmc
add
sub
pop
push
push
add
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
jne
pop
jp
cmpsl
add
cld
jb
add
add
add
add
scas
add
add
mov
add
add
sub
pop
push
push
sub
rol
inc
pop
push
push
push
call
add
add
add
add
add
push
xchg
jmp
push
pushf
shrb
add
mov
add
pop
add
rolb
add
andl
cld
jne
add
test
mov
cmpsl
sub
pop
push
push
not
add
dec
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
lret
mov
mov
mov
jp
std
add
add
pop
add
scas
in
rolb
out
add
add
pop
add
sub
pop
mov
push
dec
inc
shl
pop
mov
test
je
push
not
pop
mov
push
push
push
push
push
lea
push
call
jo
cli
mov
lds
add
iret
push
add
xchg
add
add
cltd
mov
leave
add
add
add
mov
rcl
sub
pop
test
je
mov
push
inc
pop
mov
push
lea
push
push
push
call
and
scas
mov
fisubl
jno
pop
imul
add
xchg
lods
mov
add
add
mov
push
loop
and
mov
jne
movl
fwait
std
testl
gs
push
xchg
add
leave
xlat
popf
add
pop
inc
push
add
sub
inc
pop
cmp
je
push
sub
pop
test
je
push
add
lea
pop
mov
push
lea
pop
inc
push
push
lea
push
push
push
push
lea
push
call
leave
insb
add
jl
out
je
add
add
lret
add
mov
fmuls
add
add
add
rorb
test
lea
push
push
push
push
push
lea
push
call
out
popl
pop
jmp
mov
pop
push
add
out
add
int
cltd
stos
mov
add
add
xchg
add
mov
stc
add
add
test
add
leave
add
out
push
add
fisubs
add
insb
jno
add
stos
ja
push
shll
in
test
jne
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
popa
stos
out
push
in
add
cli
push
push
cmc
bound
jle
mov
add
mov
push
mov
add
xchg
lahf
in
add
int
add
stc
jle
add
loope
pop
mov
sub
pop
xor
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
fs
add
in
icebp
mov
add
add
push
loopne
jne
popa
clc
adc
hlt
mov
sub
pop
pop
push
dec
inc
pop
pop
pop
push
not
pop
leave
ret
push
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
jbe
lds
cmpsb
add
cli
add
xchg
mov
shll
add
xlat
add
int3
add
add
rolb
add
lock
jno
in
fcomps
push
inc
push
shr
shl
add
pop
cmp
jne
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
loopne
rcll
pusha
add
lea
push
testl
sahf
cmpsb
add
in
iret
pop
add
add
roll
sbb
add
add
int
add
test
test
cmpsl
stos
add
add
add
add
pop
leave
add
xor
lcall
jle
mov
push
lea
push
call
clc
imul
jmp
insb
je
imul
scas
add
je
add
add
mov
add
xchg
add
push
out
stc
mov
add
add
clc
lcall
in
test
add
push
add
pop
mov
add
push
pop
cmp
jne
mov
push
lea
push
call
jne
add
loopne
add
lock
cld
pop
add
add
out
movsl
in
lods
add
jb
add
add
add
fsubrp
add
add
add
jno
xchg
push
sbbl
je
mov
push
inc
pop
add
push
add
pop
cmp
je
push
push
push
push
push
lea
push
push
call
xchg
add
add
je
add
mov
push
add
cld
add
add
add
add
xchg
gs
jae
add
mov
add
add
lcall
xchg
sti
pushl
rclb
push
push
lea
push
push
call
clc
rolb
jo
addb
mov
icebp
je
cmc
add
addr16
loope
addr16
loop
js
mov
mov
add
addr16
add
add
add
mov
add
add
add
cmpsl
add
add
jl
clc
mov
mov
icebp
add
add
mov
add
xchg
add
add
add
lcall
push
sub
add
pop
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
stos
je
xchg
add
in
add
addb
add
add
jp
js
pop
out
addl
popa
add
lahf
jmp
mov
stc
fidivrl
in
loope
int3
mov
in
add
add
out
lret
add
add
push
bound
sti
iret
call
add
fdivr
lcall
leave
push
not
pop
ret
push
push
push
lea
push
lea
push
lea
push
call
pop
lods
pop
in
popf
lea
aam
outsl
add
add
jge
loop
jb
aam
mov
add
mov
add
addb
mov
lods
add
add
add
call
pop
push
push
push
push
push
push
push
push
push
call
add
add
mov
add
jp
add
in
mov
add
add
loop
stos
test
in
add
add
add
jae
negl
imul
add
lcall
push
push
push
push
lea
push
push
lea
push
call
jl
imul
fimuls
incb
add
add
add
hlt
scas
scas
mov
add
fiadds
add
andb
add
add
jb
push
data16
shlb
pop
add
jns
addr16
out
add
clc
shl
add
stos
push
jle
add
nop
lahf
add
stos
cmc
sub
pop
pop
push
push
lea
push
call
in
add
mov
add
sti
cmpsb
in
add
add
popa
jmp
test
test
out
nop
xchg
js
js
test
in
hlt
lcall
push
shl
rol
pop
leave
push
lea
lea
pop
ret
mov
push
lea
push
call
mov
mov
mov
xchg
scas
add
sahf
and
mov
xchg
mov
add
cmpsl
cmpsl
popa
ret
movsb
loope
add
lods
arpl
cwtl
push
mov
in
clc
pop
pop
pop
push
ror
pop
pop
push
rol
add
add
pop
pop
leave
push
lea
push
push
push
lea
push
push
push
push
push
push
call
in
test
add
xchg
mov
jecxz
stos
add
fdivr
imul
add
testb
data16
repnz
add
add
mov
add
add
add
add
add
add
in
shl
add
mov
pop
add
push
push
push
mov
fcmovu
sub
pop
ret
xor
cmp
mov
cmp
xor
adc
and
adc
add
adc
repnz
xor
adc
jb
adc
mov
add
cmp
dec
lods
jp
fcompl
mov
sub
sub
dec
fucomip
popa
xor
mov
sbbl
fdivs
sbb
in
pusha
icebp
inc
cmp
push
lock
loope
nop
sub
inc
fisubrl
fisttpl
data16
mov
dec
bound
clc
pop
aam
inc
cmp
mov
stos
pop
and
pop
and
into
daa
sti
dec
inc
and
push
scas
cmp
jno
and
ret
xorb
or
arpl
push
nop
inc
loopne
imul
sbb
je
divl
mov
cmp
lds
repz
pushf
in
ljmp
inc
sub
cltd
ds
sarl
xchg
roll
jl
fwait
movsl
cmp
pop
shrl
test
pop
out
inc
mov
arpl
shlb
push
mov
lcall
pop
cmc
and
jl
scas
in
sbb
divl
aaa
mov
mov
out
rorl
ret
jae
mov
call
inc
jae
movsb
pushf
push
add
jno
ret
xchg
dec
int
cmpsb
sbb
sbb
iret
stos
or
sbb
cltd
inc
mov
setle
sub
cwtl
push
ds
and
xor
jmp
repnz
pop
jno
ljmp
jg
scas
cmp
out
mov
dec
add
xchg
dec
es
add
sbb
cmp
mov
push
pop
or
mov
cmpsb
jmp
pop
xchg
jo
inc
fmuls
jo
push
pop
stos
xchg
pusha
push
mov
mov
loop
mov
mov
xchg
xchg
fidivl
sbb
lds
mov
addb
mov
push
adc
mov
mov
sbb
or
mov
hlt
xor
adc
mov
sti
mov
or
pop
pop
nop
out
lea
mov
jg
stos
mov
jle
adc
lods
cltd
push
test
gs
mov
das
outsl
xor
das
aad
les
ds
pop
notl
jg
mov
out
mov
jmp
pushf
cld
lret
fadds
or
out
loop
cmpsl
pop
cli
push
in
aas
xor
pop
or
dec
mov
sti
fists
sti
or
jle
push
push
repnz
cs
cmc
fists
mov
std
mov
pop
sub
lret
sub
stos
push
cltd
rcll
dec
mov
add
add
sub
mov
add
fisttpll
or
lods
daa
call
xchg
arpl
rcl
add
cmp
in
xchg
push
test
jnp
xchg
aam
adc
das
int
or
adc
sub
jbe
sbb
jge
xor
push
push
mov
ss
je
int
cmp
sbb
sub
cs
scas
xchg
jg
dec
scas
mov
ror
mov
rcr
mov
lret
loopne
sub
xchg
mov
mov
repnz
out
sbb
leave
dec
jbe
fwait
stos
cmp
and
in
mov
insl
js
xor
mov
sbb
cmovl
dec
push
mov
lods
fistpll
fwait
jl
rolb
mov
adc
insl
xchg
or
cld
ss
inc
movsb
jecxz
ret
stc
loope,pt
cmpsb
push
fistpll
cli
mov
sahf
dec
lret
adc
out
repz
aam
bound
loopne
sub
es
mov
lgs
imul
adc
xor
dec
mov
andl
or
test
ret
pop
jmp
in
movsl
lret
rcr
sarl
mov
cmp
or
scas
mov
mov
jae
add
sbb
jb
jne
mov
jo
std
icebp
inc
sbb
rclb
aad
sbb
xchg
mov
xchg
addr16
sbb
add
sbb
push
dec
inc
pop
test
data16
cmp
mov
jge
adcl
ds
lea
cmpsb
mov
test
xorl
xchg
loop
push
call
mov
pop
jge
push
jecxz
aad
inc
fmuls
xor
call
jbe
data16
jmp
imul
push
js
js
imul
in
push
pushf
int3
cmc
fimull
addr16
enter
pop
es
and
add
jns
outsl
pop
enter
cmpl
add
data16
or
rolb
cmpsl
adc
cmp
inc
fcmovne
jg
rep
nop
sub
pop
dec
mov
cmpsb
movsl
pop
push
cmp
negb
jmp
dec
pop
gs
stos
or
sahf
shll
pop
push
aaa
call
xchg
inc
insb
fdivr
fwait
sub
aad
sbb
mov
out
jecxz
dec
xor
cwtl
inc
sbb
mov
je
dec
mov
sub
and
andl
mull
xchg
fnstenv
pop
xchg
call
sbb
test
jbe
int
push
arpl
shl
mov
xchg
out
pop
mov
jle
inc
inc
xor
add
push
ret
insb
mov
cmp
push
xlat
cld
mov
and
in
and
add
pop
scas
xchg
pop
jns
sbb
orl
mov
push
and
mov
cs
jp
adc
hlt
mov
dec
or
mov
lcall
pop
in
mov
std
push
idivl
pop
xlat
fs
dec
adc
cmpsw
shrb
cs
lds
mov
bnd
std
leave
jae
leave
std
push
das
xor
lcall
or
inc
push
xchg
mov
mov
notb
stc
sarl
pop
mov
inc
mov
leave
sub
sbb
pop
lcall
xor
fisttpl
mov
sbb
adc
sbb
push
xchg
add
dec
in
out
push
pop
popf
fcom
cmpsl
sbb
xor
sbb
lock
popa
push
cmp
jo
xor
sar
bound
and
dec
mov
jnp
push
jns
pop
stos
jl
cmp
pop
lret
jmp
sub
in
xchg
in
in
sbb
and
jnp
and
xchg
addr16
stos
sub
mov
sbb
fucomi
pop
dec
jb
pusha
aad
add
insl
fidivs
mov
lods
fucomp
mov
sub
mov
sbb
jecxz
push
or
addl
sub
add
bound
arpl
repnz
ds
add
push
push
and
sbb
mov
dec
fdivrp
test
cmp
or
sbb
mov
sub
movhps
out
ret
cwtl
pusha
inc
outsl
in
xor
out
dec
lcall
pop
bound
cltd
xor
pop
mov
aaa
cmp
or
movsl
pop
inc
test
ret
or
repz
sbb
loop
fistpl
dec
iret
out
mov
sbb
dec
xchg
nop
negb
mov
jmp
mov
mov
xor
push
fimuls
iret
insb
idivb
inc
js
in
imul
mov
dec
call
repz
insl
xchg
sub
sbb
jbe
pop
or
pop
repnz
cltd
and
push
xlat
push
nop
xchg
lret
adc
aad
jp
xchg
mov
fsubrl
jg
add
fldcw
std
jp
and
jecxz
xor
cltd
dec
mov
daa
and
es
cmpsl
mov
popf
push
cmp
xchg
xchg
sahf
xlat
inc
aam
mov
data16
std
imul
xor
jecxz
xchg
and
or
sbb
sbb
pop
sub
ljmp
or
push
mov
sbb
movsb
dec
fldt
xor
mov
jge
movsb
fmuls
mov
jno
or
dec
inc
lods
daa
push
or
mov
pushf
or
cmp
mov
xor
roll
pop
mov
scas
push
cmp
pop
bswap
jle
jno
outsl
cmp
mov
mov
mov
inc
call
xchg
ret
cli
je
sahf
lret
in
std
test
daa
push
mov
pop
inc
stc
filds
xchg
xor
fisubs
popa
imull
pop
jb
sub
mov
test
jo
stc
lock
jmp
xchg
or
push
jg
add
sub
ja
rorb
data16
jge
adc
shrb
add
ljmp
ss
sbb
xorl
sub
ljmp
sti
inc
mov
sub
fistl
pop
jo
leave
xchg
xor
dec
or
hlt
cltd
fdivrp
lods
mov
out
popf
push
mov
aas
xchg
lods
adc
mov
outsb
cmp
fdivs
jo
mov
jns
popf
fs
mov
pop
and
test
and
movsb
inc
jl
call
sub
sti
sbb
mov
hlt
xchg
cmp
cmp
add
mov
sbb
insl
fisubl
push
out
cs
jbe
roll
lahf
mov
int3
push
push
hlt
push
push
sbb
add
test
sub
inc
popf
stc
pop
jle
push
cmp
cld
sub
std
lretw
jnp
sahf
loopne
and
sub
sub
mov
lods
rcrl
push
fdivl
xchg
out
push
jecxz
mov
adc
mov
and
inc
out
cmp
sub
out
ja
mov
jae
andb
pop
mov
push
fcmovbe
inc
pop
mov
lret
sbb
or
xchg
std
in
push
pop
or
cltd
mov
mov
js
cmp
repnz
add
jns
mov
sbb
pushf
or
pushf
cmp
push
xor
push
mov
loope
push
stc
data16
pop
or
std
cltd
push
mov
testb
and
inc
lret
mov
or
adc
mov
mov
inc
fsubl
mov
les
sbb
pushf
sbb
es
jne
jo
enter
pop
mov
and
mov
mov
je
sbb
shl
pop
fildll
xchg
ret
jne
sub
xchg
jmp
or
or
fldl
rolb
mov
mov
addr16
mov
jo
popf
loopne
pop
jl
lret
ret
mov
subl
outsl
fwait
lods
push
push
pop
hlt
orb
or
or
mov
mov
and
mov
mov
or
nop
rclb
and
dec
data16
je
sbb
in
sub
in
cmpl
lods
ljmp
xor
stos
repnz
jnp
repz
mov
lret
test
shll
pop
inc
lret
push
ds
lock
int
inc
inc
ss
mov
lds
loop
std
or
sub
lea
pop
and
icebp
jp
into
mov
test
lods
movsb
cmp
nop
mov
dec
inc
cld
sub
xchg
pop
mov
push
cwtl
or
pop
inc
or
imul
cmp
adc
iret
insb
scas
mov
xor
repz
jae
rcl
mov
hlt
repz
nop
test
inc
mov
or
mov
test
aaa
out
lock
mov
add
cmp
push
popa
xchg
shl
leave
jnp
cs
add
mov
jmp
dec
insl
and
jnp
xchg
loopne
out
aas
and
dec
pop
in
lret
mov
pop
xchg
iret
ret
shl
adc
lret
or
lcall
daa
sbb
push
jg
adc
repz
pop
jle
sub
loopne,pn
cmp
movsb
cmp
hlt
push
jae
mov
cltd
pusha
mov
xor
dec
sbb
mov
negl
jg
lock
decl
repz
push
jo
jns
pop
out
out
popf
mov
dec
inc
clc
jmp
cmc
pop
add
pop
gs
xchg
sub
sbb
adc
or
jae
lods
stos
clc
je
fildl
push
or
push
mov
fldt
aad
pop
sbb
ficoms
lcall
pusha
push
sbb
mov
or
xor
pop
sar
xchg
insl
movsl
pop
and
cltd
xor
test
pop
cmc
push
xchg
dec
or
dec
out
cmpsb
push
xchg
or
cltd
std
or
into
call
pushf
xchg
sub
inc
test
jg
pop
mov
xor
cmc
cmp
outsb
fisttps
rcl
popf
jmp
or
shll
rclb
cli
xorl
mov
xchg
call
or
dec
insb
lea
test
sub
inc
cmpsl
ret
js
mov
ja
sbb
cwtl
push
loopne
xorl
loopne
pop
mov
insb
fadd
dec
ljmp
cld
add
stos
fcmove
mov
stos
jmp
sbb
lret
mov
data16
scas
xchg
dec
xchg
mov
mulb
mov
ljmp
xchg
fwait
in
in
aas
mov
imul
aad
call
pushf
mov
push
mov
sti
push
mov
fnstcw
sub
out
sbb
push
test
adc
aam
out
call
xlat
aad
mov
dec
int
bound
mov
cmp
fistpll
orl
jl
jge
mov
out
test
jae
popf
adc
nop
xor
jnp
cwtl
cmovb
mov
inc
ret
into
insl
cmp
fimuls
sbb
inc
xorl
jne
shl
aad
xor
push
mov
and
jne
xor
mov
mov
lret
jg
mov
fbstp
pop
push
adc
add
inc
fs
insl
jne
mov
insl
and
gs
scas
pusha
icebp
int
sub
mov
mov
or
mov
lahf
pushf
fbstp
push
aaa
loop
or
loop
nop
and
in
inc
dec
sub
mov
in
jb
mov
das
loope,pt
jno
das
mov
push
dec
mov
ja
pushf
lods
sti
add
push
rcrb
sbb
sbb
add
lcall
cmc
pop
sti
enter
cmp
adc
test
les
icebp
inc
lcall
xchg
or
rcrb
pop
negb
adc
gs
scas
xchg
enter
movsb
std
inc
adc
pop
mov
cld
lea
cmp
jmp
cmp
mov
jo
aam
push
jge
jno
cmpsb
cwtl
addr16
cmc
push
xor
jns
jle
xor
pop
add
popf
loop
stos
push
ds
subl
lods
cli
wrmsr
stos
mov
iret
pop
ficoml
cmp
mov
dec
push
xchg
mov
dec
insb
and
sbb
mov
lret
push
cmpsl
shll
push
mov
mov
fwait
enter
test
jmp
xchg
rcrl
sub
adc
sbb
in
pop
xchg
sbb
fistpl
inc
clc
jmp
pop
and
jns
dec
dec
pop
scas
sub
jne
ret
lret
mov
out
andl
push
dec
sbb
push
pop
add
or
cmp
sub
test
lock
pop
mov
xor
mov
into
mov
pop
push
popf
ret
jecxz
nop
fldlg2
lods
shlb
scas
sbb
jmp
mov
xchg
push
mov
lret
push
pop
jl
ret
adc
lock
leave
call
imul
test
cli
pop
lret
mov
mov
aaa
dec
dec
lahf
xor
cwtl
mov
jle
es
sbb
lret
xchg
xor
in
adc
es
xor
inc
in
bound
in
icebp
into
mov
jae
mov
lret
sbb
push
imul
inc
pop
pop
and
xchg
adc
mov
popa
xchg
repnz
xor
test
mov
fwait
or
mov
cwtl
xchg
ja
xchg
mov
jle
pusha
bound
cmpsl
loopne
mov
inc
iret
pop
andl
sbb
jmp
je
or
push
jo
aad
lret
push
ds
xchg
jno
pop
fs
push
lret
dec
xchg
add
cmp
inc
repz
add
in
popa
arpl
xor
jmp
enter
mov
aad
les
pop
xchg
pop
xor
push
test
andb
cwtl
cmp
xchg
jne
push
jl
shrl
shll
addr16
jl
jl
ljmp
add
inc
mov
lods
mov
sub
or
add
push
cmp
mov
into
je
mov
fdiv
andb
fadd
stos
test
fwait
icebp
mov
mov
into
jne
dec
sbb
nop
je
push
sub
fimuls
push
cltd
mov
jns
mov
lcall
xor
pop
roll
inc
inc
xor
inc
cmp
mov
cmp
xlat
sub
aas
inc
lea
mov
movsb
xor
cltd
and
push
dec
popa
or
test
fdivl
sub
mov
push
mov
lods
dec
and
fwait
fs
jmp
add
cmpb
mov
pop
xchg
pop
add
js
jecxz
push
lret
jp
add
jl
and
mov
stos
popf
call
ds
dec
test
dec
push
xor
or
aaa
clc
adc
mov
cmp
dec
xchg
arpl
jmp
mov
movsb
dec
cld
mov
jns
imul
dec
and
xor
mov
xor
lock
arpl
dec
ret
cli
mov
movsl
cmp
mov
lods
dec
insl
pop
dec
loop
out
cmpsl
pop
shrl
bound
cli
xchg
sub
insb
js
add
and
sbb
rep
pushf
test
sbb
daa
jp
jo
adc
pop
xor
outsb
pop
jmp
cmp
sub
ret
sub
pop
add
mov
mov
enter
mov
pusha
inc
rcrl
out
push
arpl
cwtl
xchg
jmp
xchg
loop
clc
push
enter
sub
hlt
data16
mov
scas
jge
std
arpl
int3
xor
addl
lock
inc
loope
inc
mov
and
mov
jge
mov
sub
inc
dec
outsb
jns
fsubp
lcall
push
cmpsb
or
es
repnz
jg
mov
sbb
sbb
xchg
imul
jmp
sbb
sub
into
inc
inc
sub
and
mov
std
test
fdivl
lds
xorl
shll
scas
sahf
dec
pop
rcr
jb
mov
adc
shll
js
jbe
or
ljmp
mov
cmp
sbb
movsb
xlat
loope
ret
out
out
dec
mov
out
iret
cwtl
insb
mov
inc
xchg
fmull
fists
mov
cmp
mov
mov
ss
xor
insl
shl
jl
inc
loope
cmp
mov
je
push
mov
push
lret
scas
int3
or
cltd
add
cmp
cmc
fsubs
jno
push
fstpl
add
push
addl
cmpsl
in
and
cwtl
lods
fwait
cmpsb
imul
pop
mov
mov
jns
aad
mov
push
or
lret
mov
in
out
inc
aaa
mov
sbb
jo
aad
aam
dec
xchg
lcall
pop
mov
nop
clc
inc
pop
inc
test
add
jge
push
outsb
loope
aam
push
mov
rorb
mov
leave
and
clc
std
xor
add
xchg
xlat
jge
add
lcall
mov
xorb
mov
jle
mov
push
mov
fstpt
aas
ret
sub
mov
push
jle
jl
je
lock
jnp
in
mov
insb
xor
xor
pop
shrb
in
add
je
inc
movsl
push
test
mov
aas
fwait
in
and
jmp
mov
inc
cmp
leave
push
xchg
pop
scas
imul
repnz
add
ja
pop
xlat
pop
out
gs
push
adc
jp
test
xlat
dec
jae
xchg
dec
or
sub
pop
add
dec
fs
in
jecxz
call
sub
jae
mov
jecxz
push
repnz
xchg
divl
mov
push
out
sarl
icebp
int
inc
fsubr
inc
das
mov
test
gs
xor
adc
mov
add
adc
lock
mov
and
cmc
mov
ja
push
push
ret
ss
pop
cmpsb
adc
add
dec
jle
or
aaa
jecxz
es
fsubr
mov
jge
in
call
adc
sub
sahf
xor
mov
loop
out
inc
xchg
or
jge
inc
adc
lret
and
cltd
add
lahf
pop
jg
dec
movsl
aam
mov
rcl
jbe
iret
fdivrl
js
pop
xchg
cltd
test
jmp
shrl
jge
mov
jns
call
jo
push
ljmp
pop
pop
popf
jbe
scas
and
inc
mov
cld
push
mov
out
adc
dec
sbb
dec
in
aam
das
lods
lea
stc
aam
sub
js
mov
xchg
add
adc
mov
xorb
mov
inc
fiadds
mov
ret
mov
sbb
adc
pop
mov
xor
xchg
xchg
inc
das
scas
fiaddl
fmull
stos
insl
mov
mov
ljmp
jnp
mov
or
push
daa
dec
mull
je
add
ficoml
or
xor
rcrb
dec
mov
add
jmp
jo
mov
sub
adc
mov
les
cmpsl
pop
lock
insb
ss
push
lods
push
ja
inc
cwtl
push
cmp
xchg
outsb
mov
lret
aaa
mov
stos
mov
fs
insl
jle
fs
adc
jmp
imul
push
mov
xor
sub
call
lahf
mov
push
xchg
lret
jp
lock
stc
insb
stc
cmpsl
cmovle
mov
add
sub
jnp
lahf
mov
cmc
bound
and
addr16
pop
aad
sti
iret
mov
leave
leave
or
mov
jecxz
jae
iret
mov
out
add
add
adc
stos
icebp
ljmp
das
mov
mov
lea
stos
fs
lea
icebp
jb
pushf
shrb
popa
in
push
or
xor
sbbl
jnp
leave
push
sbb
mov
jge
mov
push
movb
into
out
mov
sub
outsb
je
ss
int
mov
arpl
int
jns
repnz
stos
inc
decb
ja
dec
je
int
gs
jle
popa
mov
cmp
xchg
mov
push
sub
sbb
lea
xor
or
xchg
xchg
lods
ret
mov
xchg
imul
mov
pop
and
ds
adc
and
in
es
and
mov
jb
imul
popa
xchg
ret
outsl
in
arpl
mov
pushf
aaa
jge
jnp
jns
dec
into
nop
mov
insl
in
sbb
lods
cmp
add
ja
nop
push
fidivl
push
shlb
out
jp
out
xchg
repz
add
add
sbb
sub
jecxz
adc
cmp
dec
mov
cltd
mov
dec
or
jl
cmc
loopne
iret
xchg
lret
push
sub
rol
leave
xchg
sbb
push
dec
cwtl
inc
aam
jmp
xor
pop
sbb
pusha
adc
mov
mov
mov
pop
fldl
mov
sbb
and
pop
fs
mov
mov
sub
sub
subl
inc
adc
lcall
jns
cmp
std
sbb
fpatan
jae
test
ss
or
jne
lret
mov
sbb
add
loopne
cmpsl
das
pop
mov
scas
jge
jecxz
sbb
add
add
pushf
outsl
jbe
insl
lahf
pushf
in
stc
std
adc
jmp
aad
pop
leave
sub
sub
scas
sub
adc
lods
fildll
arpl
mov
pop
jmp
or
divb
sbb
mov
out
and
add
loope
sub
xchg
popf
loope
ret
push
dec
xchg
mov
sub
push
js
fidivrl
js
das
mov
dec
insl
xchg
mov
shll
mov
test
pop
repz
and
jmp
add
cs
inc
idivb
aad
inc
ret
popf
out
lea
mov
es
fadd
and
add
jnp
jo
xchg
mov
clc
rclb
fmull
jle
cmp
mov
pop
pop
lods
sahf
test
adc
inc
mov
idivl
push
sbb
sti
adc
in
lcall
fstps
add
rorb
insb
xchg
mov
sub
fists
hlt
jg
jno
addr16
push
mov
shll
push
in
andb
jae
cmp
scas
sub
adc
out
and
add
mov
mov
stos
lods
cmp
mov
loopne
ds
scas
mov
lcall
add
leave
fsubl
add
push
or
mov
lods
sbb
cs
mov
push
mov
sbb
sub
cltd
lret
inc
xlat
cmp
test
stos
fwait
cmp
sarl
jp
fwait
and
or
mov
shll
es
jmp
push
imul
scas
out
xor
shrl
cmp
cmp
mov
idivb
sbb
add
in
add
inc
xchg
sbb
mov
push
push
and
rorl
jb
sbbb
pop
les
cli
aas
mov
push
cmp
adc
adc
ret
les
xchg
hlt
lods
out
repz
sub
jbe
cmp
sbb
xchg
imul
and
cmc
pop
icebp
pop
data16
push
and
rorb
lret
mov
fs
into
int
in
ds
loope
bound
sti
fs
int3
fidivrl
mov
aaa
insl
into
lcall
xchg
jecxz
and
inc
xor
and
and
cld
adc
rclb
push
and
fisubl
sarl
in
dec
sub
adc
iret
ljmp
mov
mov
std
ss
jl
in
ret
jecxz
add
inc
jle
add
sub
and
mov
outsb
and
test
stc
jp
sub
xchg
aad
insb
stos
and
fisttpll
add
sbb
int
out
int
mov
mov
push
xchg
mov
repnz
mov
cmp
fdivrl
loopne
jge
mov
xorl
lahf
js
out
and
dec
xchg
inc
movsl
jle
ja
lahf
add
dec
fidivrl
ret
cmpl
in
dec
movsb
push
lods
movl
loopne
test
xchg
cmc
filds
enter
aad
dec
mov
pushf
dec
es
or
mov
sbbb
jnp
mov
jl
xor
sbbl
ret
scas
push
push
scas
pop
pusha
sbb
mov
dec
popa
sbb
mov
ja
jg
push
popa
cmpsl
arpl
cmp
mov
adc
and
psubsw
ljmp
push
mov
adc
lock
sub
sub
mov
pop
dec
adc
xchg
lahf
or
pop
jbe
dec
loopne
mov
xchg
add
in
gs
push
sub
fs
sbb
mov
push
xor
fs
test
pop
cmp
push
push
mov
mov
jg
pop
push
and
lcall
sti
test
rol
daa
loop
lret
push
mov
push
fs
push
hlt
loop
push
mov
js
push
mov
fdivrs
in
sub
cmp
pop
or
adc
sbb
aas
sbb
mov
sbb
lods
mov
ja
test
pop
mov
cmpsb
jb
sub
jo
mov
jl
push
loopne
inc
les
xchg
out
fnstsw
in
pop
xchg
pop
movsb
inc
cmc
incb
movsb
pushf
jmp
push
xchg
xchg
push
lods
in
sbb
lret
dec
mov
cli
gs
dec
mov
adc
subl
out
movb
insb
ss
cmp
xor
cmp
xorb
lods
cmp
jle
in
icebp
mov
mov
and
mov
icebp
popf
mov
mov
push
test
clc
es
gs
fiadds
push
add
jo
imul
roll
xor
inc
push
ss
push
jp
push
add
cmp
cmp
decl
out
ja
pop
inc
push
dec
rol
pop
xchg
sti
in
insl
bound
mov
imul
jns
insb
sub
fdiv
pop
dec
dec
sti
leave
cltd
dec
xor
ret
xor
hlt
cltd
sbbb
add
fdivs
pop
mov
push
adc
jns
mov
imul
add
pop
lret
xlat
gs
ds
and
ja
iret
dec
cli
dec
aaa
sub
mov
loope
cltd
leave
addr16
inc
mov
lret
aaa
cmp
add
jle
mov
out
fnstsw
test
shrl
sahf
and
in
and
pushf
push
inc
jns
pop
push
in
and
popf
sbb
mov
pop
fsubrs
test
lea
push
or
sub
pop
mov
aad
dec
stc
call
pushl
loope
cwtl
ljmp
ljmp
shlb
in
fadds
mov
lods
jns
cmp
out
hlt
ror
loopne
mov
out
fldenv
jle
addl
dec
jmp
dec
push
mov
mov
iret
lcall
sub
xor
cmp
popf
in
mov
subb
push
repnz
mov
cli
loop
outsl
movsl
cmp
clc
pop
sbb
pusha
cwtl
mov
adc
adc
test
inc
add
xchg
outsl
push
pop
jns
or
decb
jbe
sbb
ffreep
out
add
jmp
ljmp
leave
jbe
xor
xlat
pop
roll
das
and
shl
in
fs
push
jmp
dec
inc
add
xchg
cwtl
pop
mov
mov
mov
inc
cmp
inc
repnz
insb
push
fcomps
rcrb
mov
daa
cmc
fisttpl
mov
cltd
add
mov
push
inc
xchg
nop
movsl
ret
xorl
es
xchg
sbb
mulb
es
out
gs
lods
mov
out
jno
jae
cmp
xchg
push
pop
in
jns
cmpsl
lock
insb
jg
popa
jg
jb
rorb
insl
pop
sub
popf
lods
movsb
dec
inc
int3
or
fadd
sbb
jecxz
sbb
or
out
ljmp
xchg
cmp
push
fbld
fmul
xorl
ffree
pop
or
sbb
push
push
inc
jae
ja
mov
loope
fcompl
sbb
ret
and
xor
adc
test
sub
sub
aam
sbb
mov
xchg
sub
out
cmpb
pop
mov
xor
lret
inc
mov
ds
push
js
addb
mov
adcl
and
cli
jno
subb
cmp
std
test
pop
sub
js
cmp
jmp
testl
ja
negl
sbbl
bound
push
or
loopne
das
dec
mov
jno
xchg
out
fdivrl
mov
sub
push
fwait
incb
outsl
adc
fstps
mov
mov
xor
sub
inc
mov
and
mov
iret
in
jecxz
pop
cmp
iret
fwait
dec
lret
std
cmpsl
aad
pop
dec
lret
push
ds
pop
pop
dec
or
std
testb
sub
xor
push
add
idiv
sbb
mov
aam
inc
into
es
mov
pop
or
pop
add
cmp
mov
call
lods
js
pop
and
cmp
mov
jl
clc
jae
push
and
dec
in
jo
ljmp
adc
sub
pop
mov
call
push
rorb
lds
dec
cmp
adc
imul
jl
push
daa
or
push
pop
js
or
sub
adc
sbb
lahf
dec
and
mov
cmp
sbbb
dec
mov
pop
inc
mov
test
fadds
mov
dec
cmc
fmull
jmp
fbld
push
sub
add
mov
xchg
enter
and
or
push
pop
stos
cmpl
inc
pop
adcb
or
sub
inc
addr16
fisubs
sbb
arpl
cmpsl
loopne
movsl
and
add
pop
aaa
adc
push
in
xchg
xchg
pop
sahf
mov
sub
std
int3
clc
cmpsl
mov
iret
cld
pop
bound
stos
bound
add
adc
mov
cmp
loopne
lahf
adc
add
int3
jnp
mov
inc
cmp
sub
jns
mov
inc
popa
mov
scas
mov
movsl
imul
lock
sub
push
jle
pop
xchg
or
fwait
dec
sbb
xchg
xchg
xorb
gs
repz
andl
out
iret
xor
jge
adc
cmc
sub
mov
leave
mov
mov
lock
hlt
pop
dec
and
xorb
xor
mov
icebp
adc
popf
mov
in
in
cmp
mov
fcoml
sub
dec
out
xchg
cs
push
loop
add
jnp
inc
lcall
cmp
clc
or
fmull
leave
int
cmp
paddsw
xchg
xchg
loope
cmpsb
pop
sub
adc
insl
hlt
cmpsl
dec
pop
ljmp
addr16
lret
stos
test
xchg
ja
imulb
into
aam
cld
lcall
je
cwtl
rcrl
mov
mov
dec
mov
test
rcl
mov
sbb
test
les
enter
das
push
stos
mov
mov
imul
xor
push
mov
lods
adc
shlb
pop
sbb
or
adc
fistpl
mov
repz
stos
aad
arpl
cmp
stos
xchg
or
sub
sbb
pop
shr
test
ljmp
test
inc
mov
inc
mov
jecxz
popf
push
and
outsb
jns
sub
mov
fsubrl
sub
in
inc
xchg
int
mov
jns
mov
iret
das
cltd
inc
xchg
fcoml
js
cmp
jmp
mov
lahf
and
roll
cmpl
scas
mov
das
xchg
out
cs
aad
jbe
test
sbb
int
push
lds
es
xchg
mov
adc
repz
sub
mov
pop
xor
push
and
popa
aam
cmc
mov
mov
repnz
pop
outsb
push
jae
rcrb
adc
mov
lret
xchg
add
xor
cld
insb
pop
repnz
pusha
fisttps
nop
pusha
pop
fcomi
es
push
gs
add
push
xchg
xor
pop
or
lcall
int
or
xchg
shlb
clc
sti
mov
add
das
cmp
xchg
and
test
sbb
aaa
xchg
push
adc
pop
xchg
dec
rcl
jns
in
dec
fistpl
lods
bound
std
dec
notb
sbb
fmull
sbb
dec
sti
cli
stc
test
inc
sbb
mov
lcall
lods
push
out
push
pop
leave
pop
sbb
shlb
mov
int3
dec
or
fldl
xor
mov
dec
nop
cmc
int
push
mov
jb
ss
jg
hlt
pop
outsl
or
addr16
dec
pop
and
imul
jno
ret
cld
pop
sub
mov
add
dec
cmp
loope
or
outsb
in
jae
or
out
cmp
rcrl
aam
cmpsb
lcall
fwait
sub
mov
popf
or
rorl
outsl
mov
push
mov
in
mov
insb
mov
adc
jmp
out
pop
jne
inc
adcb
cmpsb
cmp
add
push
loopne
scas
in
xchg
mov
cmc
bound
cmc
inc
or
imul
clc
repnz
dec
cmc
je
pop
adc
es
cs
pmulhuw
pop
push
adc
sbb
mov
lock
adc
imul
fnstcw
std
mov
addr16
pop
pop
aaa
jbe
aad
into
xchg
cmpsb
hlt
les
pop
xor
shlb
adc
xor
or
pop
add
adc
add
mov
pop
sti
pop
sub
or
fists
in
adcl
push
adc
mov
sbb
popf
inc
mov
adc
in
push
aas
jb
or
call
or
jb
mov
xchg
scas
jg
jge
mov
ret
sbb
dec
adc
dec
sub
imul
adc
push
movsb
sub
jbe
push
cli
push
jg
test
xchg
xor
fmull
add
pop
cli
adc
pushl
pop
dec
ret
mov
xchg
xor
out
inc
xchg
out
jb
pushf
mov
int3
sbb
push
stos
jae
and
mov
mov
rcrb
loope
mov
mov
sbb
insb
mov
idiv
pusha
in
gs
lret
imul
add
sub
std
insb
mov
loope
aad
inc
pop
nop
je
cmp
testb
add
pop
ljmp
icebp
cmp
mov
lahf
dec
divl
pop
cmp
add
imul
stos
push
rorl
cmp
fstps
test
mov
repz
sbb
cmpsl
sbb
stos
jecxz
xchg
sub
les
cmpsl
pop
fwait
rol
jne
scas
shrb
fnstenv
or
or
scas
pop
mov
lret
int3
shr
mov
mov
adc
adc
nop
sbb
ret
aas
int3
jo
cmp
mov
test
ret
jp
mov
movsl
adc
sub
mov
jb
jle
iret
idivb
inc
mov
jmp
sti
aam
push
pop
xchg
leave
xchg
mov
xor
and
inc
sub
fisubrs
dec
loope
out
mov
xor
dec
push
test
cs
jbe
jg
inc
mov
dec
shll
or
cmpsb
push
call
mov
dec
out
jecxz
push
xorl
stc
pop
mov
jno
jg
add
popa
out
test
mov
fiaddl
negl
xchg
je
mov
lret
sub
adc
cld
nop
hlt
and
cmp
aas
ret
sbb
leave
aaa
mov
jecxz
sbb
pop
and
outsb
mov
xchg
adc
in
mov
jo
dec
adc
subl
sbb
xchg
lret
jae
push
mov
out
xlat
dec
lahf
xor
mov
out
test
testl
test
mov
xchg
jno
inc
stos
cmpsb
out
iret
sbb
out
adc
mov
aad
fs
fistps
mov
inc
scas
cmc
xchg
sub
cli
hlt
nop
jp
sub
cld
nop
sbb
repnz
or
jg
pop
push
repnz
cli
notb
adc
push
inc
mulb
loopne
xor
clc
imul
xlat
jg
push
mov
inc
in
in
stos
or
stc
jg
iret
push
cmp
push
imul
fldt
jb
mov
dec
xchg
js
sub
lret
xor
arpl
cli
sbb
mov
hlt
pop
ja
dec
subl
mov
mov
in
lret
xchg
dec
ficompl
testb
cmc
xchg
daa
ret
pop
lds
test
sub
pop
sbb
std
jno
jge
pusha
push
xor
adcl
mov
mov
sbb
adc
xrelease
scas
push
enter
ss
movsb
push
sahf
or
add
xchg
lahf
fdivr
xor
aas
in
fwait
inc
mov
cmpsb
inc
push
xchg
cmp
cli
andb
push
mov
loop
and
jno
lahf
pushf
outsl
out
adc
cmpsb
mov
and
jb
pop
repz
pop
mov
sbb
mov
lea
or
add
fiadds
cmp
sbb
xor
or
adc
cmc
pushf
mov
add
sti
mov
in
ss
inc
ret
pop
iret
sbb
xor
lret
adcb
add
mov
sbb
fisubs
mov
sbb
inc
push
and
into
inc
std
loope
push
dec
addb
mov
pop
sbb
mov
cld
stc
in
pop
jg
fcomps
movsb
mov
push
cmp
add
fwait
movsb
pop
cmc
sub
jae
stc
cmp
sbb
or
sbb
jmp
imul
lods
ret
in
les
in
xor
in
shrb
xchg
and
sbb
xchg
test
leave
xlat
sub
sbb
xlat
mov
jae
xor
push
fistpl
lea
pop
cmp
aam
pop
ljmp
nop
sbb
inc
dec
fnsave
mov
fwait
outsb
pushf
push
cmpsl
not
xlat
pop
scas
adc
pop
jle
lcall
shll
mov
cmp
int3
mov
les
iret
dec
push
mov
leave
inc
fmull
mov
shr
out
dec
scas
adcl
int3
inc
scas
sahf
jecxz
ljmp
pmulhw
mov
dec
jg,pt
std
xchg
arpl
xor
dec
out
in
sbb
pop
pop
or
inc
fsubp
mov
or
mov
out
mov
push
add
out
dec
das
stos
adc
add
jae
shr
cmpsb
mov
fbld
inc
test
std
es
jns
rclb
and
sbb
leave
inc
xchg
xor
lahf
xor
push
sub
aaa
je
pusha
seta
dec
adc
movsl
stos
cmp
mov
imul
xchg
xor
dec
mov
fwait
dec
std
ljmp
add
jecxz
mov
xchg
cwtl
xor
push
dec
xor
dec
je
mov
lea
fstpl
std
mov
pop
int3
out
mov
cltd
cmp
inc
xor
xchg
fnstenv
lret
or
fildll
popa
push
pop
adc
and
test
mov
mov
adc
in
cmp
push
xchg
in
xor
push
fnsave
pushf
loop
pinsrw
ds
push
push
aaa
sbb
data16
ds
pop
dec
insb
insb
jbe
fnsave
imul
inc
inc
in
cmpsb
aam
xor
scas
mov
cmpl
fimuls
popf
out
cmp
mov
loopne
mov
cli
pcmpeqw
loopne
xchg
repz
add
aas
ds
sti
iret
cmc
in
in
push
leave
shl
stos
inc
jg
in
sbb
loopne
add
insl
cwtl
pushf
repnz
pop
hlt
add
dec
adc
cmpsl
xchg
mov
gs
xlat
popa
ret
gs
push
leave
fistpl
xchg
and
leave
addr16
aas
in
aad
in
xchg
fcoml
in
jb
fs
sub
sbb
push
sub
outsb
push
std
stos
ljmp
pop
sti
adc
sbb
mov
push
push
xchg
pushf
and
mov
roll
adc
pop
mov
xchg
ret
gs
dec
bound
adc
mov
lods
and
pop
push
sub
jecxz
sti
lods
pop
cmp
inc
clc
loop
jne
test
adcl
add
sbb
arpl
popl
sbb
std
shrb
sbb
inc
sbb
in
sub
inc
daa
mov
cmp
sbb
gs
sub
xchg
cltd
adc
cmp
test
leave
push
mov
in
scas
movsb
fstl
mov
mov
fs
out
idivb
xchg
and
popl
daa
jg
push
xor
dec
scas
out
fs
or
lea
andb
inc
or
mov
aam
es
dec
rcrb
gs
jp
jle
dec
xor
lret
lret
jno
sbb
int
xchg
movsl
jnp
popa
pop
fsts
aam
dec
icebp
push
xor
mov
mov
gs
mov
jo
repnz
jne,pt
arpl
cmp
xor
movsl
sti
pusha
movb
xchg
sub
mov
aas
push
outsl
push
sub
loopne
iret
cmc
mov
ret
mov
das
xchg
pop
std
out
pop
dec
adc
mov
adcb
scas
insb
sub
addr16
jmp
or
cld
dec
scas
push
add
push
sbb
lock
in
shll
sbb
leave
int3
jb
shll
arpl
pop
jns
and
testb
or
or
mov
push
dec
out
outsl
in
repz
scas
das
or
jp,pt
fdiv
ds
xlat
push
cmp
cli
pop
mov
cltd
inc
daa
mov
mov
subb
and
jne
aam
daa
mov
lahf
sub
ss
stc
inc
mov
and
movb
adc
mov
mov
out
pushf
adc
sbb
mov
jmp
dec
ss
sub
cli
roll
or
jg
jle
ret
inc
pop
or
lods
sbbb
icebp
sub
insb
movsl
dec
iret
iret
xchg
int
scas
pop
jne
push
shlb
sbb
cmp
imul
ja
loope
push
push
pop
inc
pop
jge
adc
sub
add
pop
dec
xor
cmp
imul
cmp
push
out
mov
jno
outsl
mov
jb
test
pop
sub
cmp
add
cmc
jmp
mov
xchg
inc
jp
cmp
roll
call
add
icebp
cmp
push
jmp
cmp
faddp
mov
hlt
out
test
stos
xchg
push
jmp
mov
inc
add
mov
sub
ja
in
sub
mov
mov
lcall
xchg
outsl
push
loope
sbb
push
xchg
jno
popa
sub
outsb
fcompl
mov
in
xor
aam
arpl
lea
out
xor
add
xchg
jne
movsl
lcall
jnp
sbb
fcoms
jne
jno
cmp
stos
popa
pop
dec
inc
sbb
pop
fidivrs
xchg
mov
neg
sbb
mov
int
adc
lret
pop
or
cmp
add
add
andb
mov
xchg
adcb
xor
cwtl
dec
aaa
out
icebp
dec
adc
sarl
push
dec
mov
sbb
or
xchg
dec
scas
loopne
cmp
push
stc
pusha
sbb
popf
adc
add
push
cmpsw
nop
mov
lahf
out
mov
mov
das
ret
daa
jge
xchg
fs
xchg
xchg
aad
xchg
mov
adc
stos
fstpl
sub
cmp
xlat
clc
jle
int
jge
pop
std
push
push
push
dec
flds
adc
inc
or
mov
orl
xchg
xchg
mov
imul
pop
mov
pushf
popf
or
int
rcrb
add
jp
loope
movsb
test
mov
adc
push
pop
inc
mov
std
arpl
push
nop
test
pushl
ja,pt
xchg
clc
mov
cwtl
aad
add
cmp
addr16
add
push
shlb
mov
dec
and
xchg
scas
jbe
xchg
jne
loopne
sub
sbb
push
inc
rorb
mov
movsb
jb
cmp
xchg
jg
pop
sahf
inc
fwait
push
mov
sbbl
mov
add
lcall
sbb
and
add
popf
adc
loop
or
lds
jmp
sbb
sahf
cs
movsb
cmp
dec
daa
mov
lea
test
iret
push
aas
mov
data16
jmp
and
mov
and
dec
jbe
fisubrl
testl
cmp
std
sub
xor
mov
cmc
repz
lret
cmp
sbb
cld
les
cmpsl
nop
xor
int
adc
xor
fcomps
jb
mov
push
orb
testl
xor
test
adc
cmp
xchg
xor
repz
xor
push
lret
into
je
subl
in
je
cmp
ljmp
or
or
sub
sbbl
sub
int3
in
add
imul
xchg
sub
xchg
xor
stos
jmp
ficomps
stos
jno
inc
popa
push
cwtl
gs
fst
lds
xor
inc
ljmp
js
push
pop
mov
mov
gs
mov
push
nop
es
jo
push
scas
jae
add
out
int3
adc
fcoms
fldcw
mov
push
fiaddl
lods
inc
mov
je
or
pop
popa
xlat
and
sbb
icebp
dec
sub
test
inc
jl
xor
ss
std
lahf
mov
mov
jmp
pop
out
sub
lds
push
mov
mov
mov
or
in
mov
mov
stos
add
sbb
xchg
in
les
ret
inc
cmc
dec
ret
add
mov
fiaddl
stos
test
xor
push
add
jg
push
loop
ret
fbstp
dec
sub
pop
pop
push
out
pop
jno
jl
out
mov
pop
mov
jbe
pop
aam
insb
jae
lret
and
push
out
jno
mov
xor
rcr
imul
jp
xor
adc
mov
mov
into
fcoms
inc
out
lret
sbb
scas
jns
sub
fcoml
subl
mov
mov
and
nop
loope
dec
fistl
cmp
push
insl
xchg
and
lea
or
dec
mov
mov
inc
add
hlt
out
test
push
xor
shrb
addr16
adc
addl
sub
or
push
push
jbe
stos
hlt
loopne
lret
ret
out
insl
cmc
mov
pop
je
mov
inc
push
dec
or
icebp
add
cmp
add
mov
mov
adc
cmp
scas
arpl
mov
ds
pop
mov
jp
insb
or
and
add
add
or
mov
mov
out
dec
out
cmc
gs
iret
xor
mov
push
aam
dec
push
mov
cmc
mov
jl
jb
arpl
sbbb
xor
sbb
inc
aas
and
es
jg
leave
imul
add
mov
icebp
outsb
das
add
cmpsl
nop
and
jge
loop
loope
out
out
add
xchg
pushf
je
push
push
outsb
sub
pop
fmuls
pushf
dec
mov
mov
insb
cmp
add
idivl
std
fs
sub
adc
insl
out
sbb
outsb
cld
aaa
and
inc
divl
xchg
mov
mov
or
test
outsb
rclb
jge
cmpsl
scas
sub
mov
cwtl
lcall
in
std
sbb
inc
scas
cld
jnp
sbb
jl
lret
movsl
xchg
incb
ret
shrl
enter
mov
je
cmp
jbe
push
cmp
jae
ret
sbb
mov
jg
and
insb
adc
incb
or
inc
leave
in
js
ja
inc
fcmovnu
out
pop
std
pusha
xor
test
mov
pop
rcrb
fs
or
jle
gs
outsb
movsl
hlt
fcoml
fidivl
and
shr
adc
test
and
std
aam
into
daa
roll
es
scas
or
cltd
sbb
bound
jae
add
push
int3
lcall
cmp
mov
sub
cltd
add
clc
lods
xor
repz
add
pushf
push
out
jecxz
ds
ud1
cmp
mov
or
push
push
in
jl
cs
sti
add
shrl
outsb
xor
mov
pop
pop
sarl
push
je
xor
rorb
pushf
shll
shl
xor
into
push
xchg
sub
cltd
pop
rcll
lahf
xchg
add
dec
das
xchg
enter
push
dec
dec
mov
add
out
and
mov
loopne
movsl
xchg
imul
shrb
imul
cmp
dec
dec
mov
cltd
sub
mov
add
pop
dec
xchg
sub
dec
mov
mov
mov
cmp
mov
dec
out
dec
and
mov
and
movsl
push
add
orl
add
out
mov
xchg
and
add
dec
dec
les
sub
pop
push
push
mov
pop
push
mov
mov
flds
loope
jecxz
adc
adc
mov
imul
fs
addr16
imul
push
daa
xchg
insl
fs
pop
xchg
adc
addps
ret
mov
call
jbe
adc
popa
popf
jl
and
add
dec
cmp
pusha
push
lcall
inc
andl
sbb
and
pop
loop
sti
or
in
aad
andl
loope
sub
adc
mov
sbb
pop
jno
dec
scas
fdivp
popa
sahf
jg
sub
sahf
push
mov
daa
enter
sub
xor
mov
outsl
nop
pushf
mov
insl
inc
mov
popa
adc
sahf
pop
jb
xor
mov
add
mov
or
stos
mov
cmpsb
ljmp
dec
jno
stos
pushl
pop
pop
mov
aad
popa
jp
in
cmp
jae
ret
or
mov
rcrb
jle
adc
push
loop
leave
push
mov
lcall
outsb
fnstsw
mov
and
int3
inc
mov
push
test
xchg
filds
sub
clc
mov
cwtl
sub
xchg
das
sbb
pop
jl
pop
insb
mov
sar
jmp
mov
jo
mov
outsl
cs
loopne
or
mov
cmpl
fwait
mov
pop
mov
out
ret
inc
push
xor
fnstsw
fwait
push
xor
or
sub
jp
pop
in
dec
xor
mov
lea
adc
or
push
les
add
sbb
or
arpl
gs
in
xchg
mov
mov
ret
clc
push
or
ds
inc
xor
push
jnp
cld
mov
sbb
mov
sbb
mov
or
xor
test
sbb
or
nop
popa
push
inc
jnp
mov
mov
dec
sub
popa
inc
jo
adc
jge
jno
or
loope
adc
mov
mov
push
pop
jmp
repnz
jp
pop
test
shrb
add
hlt
ret
imulb
mov
mov
xchg
in
andb
or
push
test
les
pushf
ret
sbb
repnz
mov
add
xor
lret
ds
inc
insb
arpl
adc
xchg
gs
jmp
es
cltd
test
out
push
xor
push
test
mov
adc
jne
arpl
mov
sbb
xchg
pop
jae
pusha
inc
scas
ret
xor
dec
push
push
aam
negl
and
pop
add
mov
cmc
jns
repz
in
mov
sub
or
push
push
subl
inc
xchg
testl
and
push
xor
dec
rcrl
fisubs
and
movsl
mov
out
mov
jbe
push
adc
inc
and
dec
add
pushf
mov
lods
pop
out
lea
mov
jecxz
sarb
push
iret
ret
call
push
mov
mov
mov
bound
ret
dec
out
inc
fidivrl
in
xor
push
sub
lahf
js
and
jb
jmp
xor
mov
xrelease
das
lock
scas
les
and
sub
pop
ds
inc
inc
aam
push
lret
lcall
mov
dec
add
cmp
inc
and
xchg
jnp
mov
rcrb
scas
stos
xchg
xchg
sub
out
xor
daa
or
lock
fucomp
movsl
hlt
cmpsl
daa
jb
sbb
add
jge
jge
dec
into
sbb
iret
jns
lds
add
mov
out
jle
lahf
test
cli
push
pop
out
imul
pop
mov
cmpsl
pop
icebp
xor
mov
addr16
push
add
pop
mov
fwait
pushf
xor
add
es
adc
xchg
call
jp
mov
xor
mov
and
test
push
jge
mov
adc
sti
fstpl
das
mov
ret
call
lock
lret
push
fcmovb
cmp
sahf
mov
jge
push
into
ss
jno
enter
sbb
pop
mov
scas
mov
push
add
int3
jae
xchg
xchg
or
cli
lea
rcrl
jmp
push
jnp,pt
adc
movsl
flds
mov
inc
push
stc
movsb
jae
lods
sub
mov
adc
lds
es
adc
je
ljmp
cmp
cmpsb
jl
stc
jl
add
pop
movsl
mov
icebp
insl
pushf
add
dec
push
adc
cmpsl
jp
ds
push
inc
lcall
mov
push
mov
aam
in
pop
and
push
iret
mov
lret
testl
test
cwtl
out
jle
xor
scas
jo
xchg
or
cmp
dec
sub
das
andb
adc
aas
add
jge
pop
popa
adc
push
insl
pusha
xchg
leave
sub
pop
je
jmp
ret
push
sub
loop
imul
jae
test
sub
xor
je
or
aam
addl
and
je
test
sub
push
mov
test
shlb
inc
adc
insl
pusha
and
cmpsb
iret
and
pop
cmp
push
cs
andb
dec
mov
mov
insb
out
cmc
xchg
xchg
cld
pop
xchg
lcall
popl
push
add
inc
jge
pushf
fimull
dec
push
xor
lock
pop
aam
lret
cmp
jge
mov
mov
cmpsl
sub
sbb
insb
sub
inc
or
mov
xchg
ljmp
pop
lea
sbb
and
xchg
dec
jns
scas
sub
loope
jmp
and
mov
loope
lret
sti
mov
inc
dec
imul
push
arpl
push
cmpsb
xchg
shl
push
les
jbe
mov
into
into
cli
xor
inc
sti
nop
xchg
jbe
cwtl
rclb
pop
ja
imul
add
aaa
mov
out
rclb
outsb
es
mov
mov
outsb
pop
inc
mov
repz
xor
outsb
cmpsl
adc
inc
or
pop
scas
and
xor
out
lret
xchg
movsb
and
jmp
fcmovne
cmp
pop
fwait
pop
sub
inc
xchg
lret
out
cmp
ret
mov
add
insl
iret
pop
xchg
pop
sti
jae
mov
sbb
xor
jp
adcb
out
out
xchg
jbe
addr16
aam
loopne
lea
adc
mov
push
cmpsb
decl
jecxz
leave
inc
push
shlb
lret
pop
loopne
cmp
adc
jl
cmc
jmp
sbb
ret
jnp
and
sbb
int3
into
push
add
xchg
dec
dec
xchg
jne
or
in
fcoml
push
and
xchg
xlat
lcall
pop
scas
push
xor
mov
shll
sahf
mov
xor
movsl
daa
mov
loope
prefetch
or
mov
mov
pop
jmp
lock
inc
ret
sti
add
mov
repz
mov
lea
pushl
fcmovu
sub
out
movsl
ljmp
mov
cmp
test
or
jg
daa
and
scas
out
cmp
mov
sbb
lcall
push
cmp
push
sbb
or
sarb
lret
pop
and
mov
lods
and
pop
enter
inc
pop
sub
cmc
into
sub
pop
cli
jno
push
imul
xchg
push
and
or
pop
js
cmc
adc
mov
out
hlt
push
jnp
pop
daa
jnp
aam
pop
jne
fwait
sahf
out
cs
cs
jp
mov
in
pop
movsb
cwtl
mov
xchg
pusha
sub
xlat
frstor
inc
dec
sub
jmp
mov
outsl
add
and
cmp
lcall
out
jae
iret
fadd
cmp
mov
dec
adc
and
divl
mov
mov
push
mov
mov
xchg
or
pushf
hlt
outsl
into
jo
out
loop
add
dec
or
sarb
cmc
rcl
repnz
hlt
hlt
fisttps
mov
jno
subb
adc
push
out
sbb
xlat
dec
ret
pop
cmc
jle
cmpsb
sbb
or
adc
hlt
xor
xlat
cmp
jecxz
stos
repz
sbb
das
bound
outsl
imulb
subb
xor
mov
mov
cmc
insl
sub
push
mov
lret
mov
stos
cmp
dec
jae
ljmp
push
sahf
popa
stos
loope
std
cmp
int
repz
rol
int
roll
loop
pusha
shlb
fiaddl
aas
lods
ret
mov
push
icebp
jge
pop
jg
or
loop
outsl
int3
adc
pop
aam
add
lret
push
jnp
and
adc
call
aas
sbb
mov
jp
sahf
mov
dec
jne
jbe
iret
sbb
pusha
adc
lea
xchg
dec
pop
in
push
cwtl
std
js
pop
mov
filds
pop
xchg
shlb
outsb
jge
test
jae
xchg
aas
stc
ja
jg
pop
sub
aad
sbb
cmpsb
icebp
insl
sub
jmp
repnz
push
adc
ror
pushf
test
fcompl
fiaddl
mov
addr16
push
xchg
adc
add
idivb
loopne
test
pop
push
aad
push
cmp
sbb
or
cli
mov
add
vmwrite
cld
xchg
fwait
mov
xchg
call
mov
push
mov
call
xchg
xchg
imul
push
sbb
mov
icebp
sub
cltd
sbbb
daa
inc
jp
jle
cmp
push
repnz
lahf
stc
pushf
push
dec
mov
inc
jecxz
pusha
add
ds
inc
testl
arpl
stos
mov
incb
jo
adc
aad
and
popf
or
push
or
cmc
cmpl
out
sub
sbb
mov
mov
mov
cmpsb
mov
jno
sub
lock
push
fldl2t
outsl
inc
cmp
mov
shlb
nop
stc
jne
dec
mov
and
pop
enter
adc
xchg
outsl
push
cmpsl
scas
inc
xchg
or
mov
aad
cmp
xor
jp
rolb
out
or
xor
jne
sbb
outsl
inc
test
push
jbe
popf
pop
jnp
adc
std
pop
inc
and
adc
aas
push
mov
cmc
xchg
sbbb
lea
cmp
in
xor
or
add
or
adc
jle
jae
popa
clc
repnz
mov
mov
lock
pop
or
sarb
pop
xchg
std
data16
mov
mov
enter
das
inc
xor
fmull
out
js
adc
rorb
out
pop
movsb
out
fwait
popf
sbb
andb
in
jbe
dec
idivb
icebp
pop
adc
clc
mov
out
test
jne
and
adc
push
adc
push
push
clc
and
test
and
lahf
out
xlat
repnz
or
in
lahf
es
pop
mov
jmp
push
dec
jg
out
and
add
movsl
stos
fistl
mov
int
add
cld
pusha
xorb
out
fstpt
push
mov
out
js
sub
lock
adc
out
addr16
sahf
jns
sub
sbb
hlt
mov
and
jmp
or
cmp
add
dec
sub
mov
jnp
pop
lods
sub
pushf
cmp
sbb
test
fwait
and
outsb
dec
std
lock
or
cmpsl
jmp
fs
lock
in
insl
add
jb
jecxz
mov
jnp
mov
pop
iret
ds
fdiv
ja
hlt
inc
pusha
jecxz
outsl
inc
xchg
jmp
imul
je
ror
jmp
push
xor
divb
out
or
mov
cmpsb
adc
fcomps
add
jb
fstpt
daa
or
pop
insb
xchg
inc
repnz
pop
insl
cwtl
shrl
rclb
mov
fidivrs
scas
adc
jmp
adc
xor
loope
pop
pop
sarl
adc
inc
jp
push
push
imul
jbe
in
aam
adcl
insl
aam
pop
adc
stos
lods
stos
push
into
xor
adc
inc
jle
xlat
dec
fisttps
mov
stos
cld
or
dec
lea
cmp
scas
popl
aas
int3
sarl
or
sub
xchg
mov
or
sbb
shll
cwtl
icebp
enter
out
aam
test
add
leave
xchg
dec
mov
sub
xchg
in
and
ds
pop
dec
in
rcll
xchg
scas
jns
dec
cmp
addr16
gs
push
in
data16
sahf
push
sub
mov
pop
and
outsl
arpl
or
std
jbe
or
lahf
mov
into
push
fldt
test
sbb
jl
out
out
xchg
pop
daa
notl
movsb
push
std
adc
enter
pop
mov
lods
aad
jecxz
aad
dec
pusha
jg
jbe
call
imul
xor
mov
insb
sbb
push
out
fcoml
and
aad
xor
xchg
lock
mov
divl
repz
rcrl
pop
jmp
and
test
and
orb
out
rcrl
mov
and
pushf
push
mov
insl
adc
inc
push
mov
mov
lock
aam
mov
lds
fimull
or
xor
mov
add
popa
ret
xor
nop
gs
pop
sbb
lss
aad
mov
jno
and
je
xor
adc
inc
mov
test
push
les
addr16
stos
lcall
insb
bound
fs
lock
mov
ret
out
arpl
inc
inc
dec
or
ret
sub
addb
cmc
pop
das
jnp
mov
and
push
das
mov
gs
sub
push
pop
and
lea
hlt
mov
pusha
xchg
xchg
js
jle
shl
pushf
ficompl
stos
add
add
mov
sbb
sub
pop
adc
stc
or
pop
cmp
mov
incb
mov
xchg
clc
into
xchg
or
mov
adc
pop
sti
inc
jmp
addb
sti
dec
gs
repz
or
adc
adc
aaa
das
lods
fimuls
push
pushl
pop
cmpsl
sbb
outsl
fsubs
add
push
cmp
pop
jle
loope
xlat
dec
mov
cmpsl
mov
popl
aam
ss
js
add
xchg
lcall
xchg
ljmp
mov
out
pop
insl
cwtl
fstps
ja
movsb
sbb
sub
sbbl
mov
push
rcrl
xchg
inc
mov
ja
pop
mov
pop
mov
mov
mov
mov
push
and
mov
sti
mov
sub
push
rcr
sbb
dec
cmpl
mov
vpshufbitqmb
and
testl
push
ljmp
mov
pop
xchg
pop
ret
std
movsl
fmull
xchg
dec
lret
adc
mov
mov
pushf
ds
pop
fs
enter
push
dec
sahf
cmpsl
js
clc
subl
ret
inc
or
xor
mov
movsl
xchg
movsb
cs
imul
add
aas
inc
cmp
mov
rcl
in
in
rcrl
xor
or
mov
popf
mov
mov
repnz
fucom
int3
test
fidivl
cmpsl
scas
mov
jmp
xor
or
xchg
decl
pop
jl
inc
dec
and
ss
gs
xchg
pop
in
jno
push
lock
mov
and
mov
xchg
xchg
out
mov
inc
hlt
inc
jp
out
sub
fwait
push
inc
cmp
je
popa
mov
lock
imul
push
fcmovnu
ret
xchg
and
jbe
pop
pop
mov
mov
sbb
out
and
jl
xchg
sub
or
outsl
mov
cli
addb
adc
mov
sub
push
xor
inc
push
or
std
cmp
mov
lock
leave
test
and
sbb
ja
jmp
jp
mov
and
dec
clc
mov
inc
sbb
aas
or
lcall
sub
xchg
loopne
inc
pop
mov
das
mov
pop
enter
xchg
inc
repnz
xlat
movsl
adc
or
push
mov
add
inc
imul
inc
lods
xor
xchg
call
mov
adcl
pop
cwtl
add
repz
dec
imul
mov
lahf
mov
inc
xor
push
or
and
imul
or
inc
mov
popl
roll
ret
lret
jl
stc
out
ret
inc
scas
aas
cld
xchg
dec
imul
jnp
in
popf
push
call
pushf
popl
sti
pop
jno
dec
sub
arpl
and
subb
xchg
daa
daa
sub
in
sti
push
hlt
test
sub
lcall
aaa
cmpsb
pop
jg
cld
dec
les
add
mov
push
or
in
mov
adcb
dec
repz
push
pop
fldenv
xor
pop
js
adc
daa
int3
mov
add
fistpll
push
ljmp
pop
inc
jb
nop
push
fdivrs
pusha
mov
std
push
test
sbb
jno
aas
psadbw
cli
pop
stos
aaa
or
push
dec
scas
cmpsb
sub
pop
pop
push
icebp
lds
fisttpl
or
inc
cmpl
or
adc
shll
addr16
adc
lods
clc
mov
xor
push
lahf
cli
outsb
sub
int
sbb
jno
lea
pop
dec
negb
adc
mov
fwait
mov
sub
dec
add
and
push
sahf
pusha
insb
ror
pop
and
out
mov
inc
cmp
fnstenv
cmp
mov
mov
mov
and
jne
jno,pt
cmp
mov
mov
xchg
mov
or
fisttpll
jnp
or
jg
sbb
or
push
adc
test
add
mov
mov
les
adc
rcrl
out
or
daa
push
xchg
iret
push
mov
mov
das
pop
mov
pop
loope
fs
jo
je
int3
and
pusha
leave
add
add
dec
mov
je
sub
push
or
clc
sbb
std
pusha
push
sbb
in
jecxz
mov
sbb
lcall
cmpsl
push
fidivrs
adc
xchg
dec
pop
scas
mov
idiv
jecxz
in
in
out
into
adc
negl
mov
xchg
inc
jns
icebp
cmpb
gs
in
lahf
sub
xchg
dec
imul
insl
and
ret
in
sbb
sub
xor
in
and
dec
mov
push
sub
jo
out
and
xor
xorb
rcl
or
cltd
add
xchg
fldcw
mov
mov
jno
scas
paddb
scas
out
mov
xchg
iret
cmp
outsl
fs
jg
into
mov
adc
sti
sub
bound
push
xor
sbb
outsl
dec
dec
addr16
movsl
shrb
mov
pop
or
adc
cmpsl
push
fiadds
sbb
xchg
fimull
adc
daa
sub
jp
stos
pop
sub
cli
mov
popa
add
mov
stos
je
cmp
sbb
push
xchg
filds
xchg
xorb
pop
mov
dec
mov
movl
mov
in
lahf
loop
jle
scas
jp
enter
andl
js
sbb
inc
iret
mov
mov
sub
dec
arpl
mov
mov
scas
stos
dec
mov
fdivp
dec
push
or
add
sbb
and
nop
sub
mov
pop
sub
adc
fistpll
mov
gs
jne
dec
add
sbb
cli
rolb
sub
pop
movsl
es
loopne
mov
fsubs
jae
sbb
arpl
mov
mov
mov
mov
mov
jp
movsb
xor
ud0
mov
movsl
sub
push
fcomps
lds
mov
repz
xchg
pop
mov
sub
ud0
jo
dec
and
rolb
xchg
sarb
data16
jns
leave
xchg
adc
push
cmc
ficoml
mov
popa
xchg
lret
mov
and
in
lock
add
fs
pop
ret
mov
mov
lret
inc
cld
inc
and
test
pushl
popf
pop
lcall
arpl
adc
stos
mov
shll
ret
fs
mov
add
mov
inc
out
inc
or
hlt
pop
ret
mov
cmp
fadd
cmc
aad
fsubrl
sti
sub
and
push
push
push
jno
ret
mov
sub
es
sbb
pusha
xor
xchg
lods
gs
mov
fwait
and
in
testb
inc
movsb
sbb
roll
cmp
imul
loope
insb
adc
gs
andb
sbb
xor
xor
adc
mov
int
outsb
jae
push
or
jmp
cmpb
js
scas
aad
in
pop
and
jg
pop
xchg
mov
pop
mov
insl
jns
out
mov
push
and
lds
js
mov
repnz
cmpsl
ret
mov
data16
dec
jb
scas
mov
fcmovb
inc
sub
ret
cmp
push
jp
add
mov
jo
cmp
inc
sub
pop
rcll
gs
mov
sbb
lds
adc
inc
mov
lea
xchg
scas
push
lods
push
fisubrl
jne
mov
sub
mov
jmp
and
inc
cmpsl
adc
into
iret
cltd
daa
ret
pop
pop
mov
ret
sbb
or
push
clc
call
dec
pushf
cld
push
clc
adc
mov
lahf
cmpb
lret
push
cmpsb
xchg
enter
aam
pop
mov
mov
pop
xor
lcall
jle
xchg
aam
cltd
sub
dec
std
mov
mov
or
lds
jmp
loope
mov
sbb
in
push
lcall
icebp
fisubrs
xchg
not
push
mov
fildl
adc
repnz
mov
mov
push
shl
sub
sbb
adcl
dec
repnz
adc
adc
fdivrs
jns
mov
xor
sbb
push
ficompl
movsb
add
incl
cmp
push
push
testl
lcall
popf
mov
je
mov
inc
mov
dec
mov
out
push
push
dec
jbe
mov
insb
aas
fucomi
or
in
adc
xor
add
roll
jns
das
pop
lea
data16
fucomi
enter
adc
sarl
mov
sub
cltd
movsb
hlt
cmc
add
aam
imul
mov
not
lcall
sub
daa
clc
in
push
dec
call
jne
jae
insb
mov
mov
fmull
and
fmuls
mov
or
pop
lahf
jnp
fsubr
insl
sbbb
add
pop
xchg
sbb
or
imul
mov
mov
test
das
outsb
xor
lret
gs
test
lahf
std
test
mov
sarb
loop
push
pop
decl
movb
mov
leave
fld
push
lcall
xor
sub
mov
jae
mov
pmaxsw
xorb
hlt
dec
and
mov
mov
in
popf
lods
push
push
jae
cmpsl
pop
addr16
mov
or
lods
js
data16
divb
cs
push
mov
pop
lret
or
jg
das
inc
add
dec
xorl
inc
push
pushf
mov
xor
mov
lea
pop
fnstsw
xchg
add
or
js
in
lcall
fimuls
pop
inc
jbe
adc
xor
inc
addb
inc
aam
xor
jne
or
inc
std
and
dec
push
dec
pop
mov
sub
inc
xor
xchg
xchg
and
inc
add
rol
mov
inc
or
xchg
imul
repnz
jae
hlt
xor
inc
adc
sub
clc
iret
sti
std
sahf
cmpsb
xchg
pop
fdivrs
add
in
or
cmp
dec
leave
push
fcoms
dec
mov
pop
fldl
lahf
inc
or
adc
pop
mov
dec
lret
das
sahf
mov
sub
xchg
jne
lcall
mov
and
jecxz
mov
cmp
fcmovne
shrl
out
call
addr16
leave
cmp
jbe
push
sahf
rcll
push
and
fisttpl
push
adc
test
cli
ljmp
jl
jmp
je
dec
test
inc
adc
cld
in
mov
push
cmp
sub
fisttpll
or
shrl
or
mov
dec
and
mov
inc
loop
dec
fucomi
scas
ret
sub
push
in
sti
int3
jp
loop
pop
cmp
or
clc
inc
data16
adc
cmp
jp
inc
cmp
pop
dec
or
vmovapd
in
scas
decb
bnd
pushf
add
addr16
pusha
andl
push
cmpsb
dec
or
dec
dec
xchg
push
pop
cld
jmp
sti
out
xor
lret
call
add
es
add
ret
sbb
pop
mov
inc
jle
mov
mov
in
adc
xor
pop
xor
fnstenv
fwait
lods
cmp
xchg
fisubl
mov
dec
aaa
fldenv
add
into
fmulp
lret
in
enter
push
add
xchg
xor
xchg
mov
or
xor
jns
sub
es
cmp
loopne
or
dec
data16
jnp
movsl
xchg
ljmp
daa
fdivrs
adc
les
sahf
shll
fsub
or
jns
test
and
push
inc
adcl
mov
pop
dec
movl
imul
mov
movsb
imul
and
stos
adc
das
out
inc
scas
fistl
mov
sub
lods
or
es
push
sti
inc
mov
test
insb
jmp
or
hlt
scas
cmp
mov
int3
arpl
rorl
hlt
jno
mov
mov
inc
mov
push
dec
js
mov
ss
inc
cmp
pop
xchg
pop
mov
push
in
xchg
std
in
bound
nop
outsl
rcrl
fldcw
mov
aam
je
lret
ret
xchg
rcrl
inc
test
mov
sbb
fnstcw
push
or
scas
inc
lock
adc
stc
subb
pop
jle
xor
and
fucomi
jp
or
testl
js
fdivl
jno
add
test
cmpsb
lds
into
daa
push
mov
mov
fmul
xchg
inc
sbb
mov
add
pop
push
ja
test
cmpsb
adc
das
push
mov
decl
add
fwait
dec
icebp
hlt
pop
fstps
fsub
fidivrl
adc
pop
test
or
and
mov
inc
outsl
adcl
ds
lods
mov
fcomps
test
mov
cmc
push
rolb
ret
cmpsl
dec
in
sbb
sub
inc
jle
jge
xchg
cmpb
and
ret
or
fmulp
stc
int
ds
and
sub
push
adc
lods
inc
js
mov
push
sub
mov
lods
cmpl
add
daa
ret
mov
adc
and
adc
xchg
cmp
ja
repz
sbb
das
adc
fwait
mov
xchg
mov
xchg
pop
fdivrl
mov
cmp
lahf
in
mov
push
lret
lret
lret
fldcw
shll
mov
in
rcll
pop
lds
cs
popa
imull
jg
jns
aas
and
mov
inc
add
cmpsl
lret
inc
and
dec
daa
cltd
cmpxchg
and
or
jnp
lcall
mov
jg
shrl
aam
repz
arpl
pushf
aas
ror
std
xorb
lcall
fs
add
fistl
inc
aaa
popa
test
lret
cmpsl
add
push
enter
sub
mov
cmp
enter
arpl
fcomi
xorb
mov
xchg
xchg
fldt
cli
jb
ret
loope
lahf
sbb
adc
lret
mov
xchg
fdiv
push
or
cmp
and
xor
push
mov
stos
insb
shlb
outsl
cs
adc
addr16
xchg
and
cmpsb
data16
inc
lret
adc
sbb
inc
jnp
sub
inc
leave
lods
mov
mov
std
cmpsl
mov
mov
or
xor
push
out
and
pusha
ljmp
out
and
mov
pop
mov
sbb
int3
in
je
sub
dec
imul
enter
mov
inc
stos
popa
xor
jbe
aad
roll
cld
fnsave
imul
ret
lods
sub
jle
test
out
sub
enter
xchg
lods
jbe
adc
bnd
cltd
xor
addr16
push
push
shlb
jb
push
or
cmp
cmpsl
cltd
nop
int
lea
lahf
rcl
or
xchg
pop
insl
xchg
mov
fstp
aad
jb
lea
mov
pop
arpl
and
cmpsl
and
jo
lock
outsl
jle
mov
jo
mov
arpl
lret
mov
cmp
out
mov
fwait
adc
dec
adc
mov
aad
jae
sub
lahf
inc
dec
dec
pop
ljmp
adcb
test
test
lret
sti
mov
rcrb
pop
arpl
movsl
cltd
cwtl
jns
xchg
cltd
push
push
icebp
mov
push
or
or
jbe
push
sbb
es
push
dec
or
mov
lock
cmp
jecxz
or
xor
add
inc
cli
cld
arpl
mov
out
adc
hlt
dec
sbb
sub
pop
push
cmc
sti
les
jo
xor
and
insl
inc
push
sbb
out
or
pop
cs
or
jecxz
mov
fs
sub
out
pop
pop
jmp
repnz
ljmp
dec
into
inc
hlt
jle
add
aad
je
mov
xor
xchg
dec
insl
das
jno
cwtl
fwait
push
jo
add
pop
adc
inc
mov
add
jns
cmp
or
or
adc
ret
ja
stos
cmp
inc
xor
pop
lea
test
out
sub
stos
outsl
rcll
sub
jl
mov
mov
xchg
mov
sbb
xchg
mov
cmpsb
cmp
pop
mov
pop
cmp
and
dec
lret
mov
das
xchg
cld
fdivs
push
xorl
stos
sub
clc
xor
rcll
test
cmp
xchg
out
loope
or
repz
push
in
push
cld
sbb
iret
loope
in
inc
mov
sub
aam
and
or
or
hlt
pusha
cmpsb
or
inc
jmp
sub
pop
lret
sti
dec
out
and
ljmp
or
xor
and
cmp
pusha
mov
fwait
addr16
pop
arpl
xorl
ljmp
inc
daa
xor
aad
outsb
clc
mov
cmp
sbb
sub
loop
movsl
enter
out
outsb
xchg
outsb
cmp
adc
adc
adc
inc
dec
push
stos
out
sbb
sbb
fs
sbbb
ret
dec
scas
inc
in
pop
and
insb
fildll
popf
inc
aas
or
xchg
mulb
call
sub
jg
sbb
orl
scas
int3
dec
pop
cmp
xchg
jne
pop
xchg
mov
imul
jne
push
icebp
mov
cmp
lcall
or
sbb
loop
fstps
shll
out
pusha
jne
mov
psubsw
sub
insl
ret
mov
adc
enter
jno
rcrl
pop
fimull
xor
sahf
sub
and
mov
inc
clc
inc
stos
cli
out
adc
or
daa
xchg
scas
and
lock
jns
movsl
popa
jnp
xlat
cmp
cwtl
ljmp
adcl
movsl
mov
aas
dec
mov
jo
inc
int3
jecxz
cmp
lret
push
loope
pop
addr16
push
mov
mov
or
js
push
test
and
shlb
fwait
pop
imul
shl
jo
xlat
push
jo
jge
sbb
adc
sbb
sbb
xor
loop
sbb
rcrl
xor
imul
loope
xchg
xchg
adc
sbb
xlat
iret
fnstsw
icebp
aas
pop
not
gs
add
push
pop
dec
inc
call
dec
push
repz
andl
movsb
xchg
icebp
ds
in
mov
sti
inc
add
outsl
inc
mov
pusha
and
shl
cmp
xchg
push
mov
dec
sarb
arpl
sbb
pop
iret
jmp
cltd
xchg
inc
inc
and
add
push
push
imul
loopne
std
out
std
dec
movb
test
pop
leave
push
dec
std
xchg
and
outsl
add
cli
fcoml
hlt
jns
mov
cli
cmp
lods
pop
ja
movsl
repnz
out
or
fisubs
mov
lret
cltd
jnp
xchg
adc
xchg
in
jne
lret
je
mov
xchg
dec
sub
std
sbb
sub
into
mov
pop
in
fdiv
test
cli
push
push
fwait
sbb
dec
dec
and
std
jg
aad
inc
out
dec
sub
mov
mov
mov
jl
rep
cltd
movsb
lds
inc
or
popa
mov
sahf
push
xor
sti
ret
xchg
js
scas
rorb
push
mov
ljmp
dec
mov
mov
mov
loope
jecxz
andb
fistpll
cli
xor
fidivrl
dec
pusha
or
adc
mov
fisubs
dec
cs
xlat
mov
push
cli
adc
mull
cltd
cli
mov
jle
in
adc
inc
jmp
mov
ret
loopne
push
popa
addl
jbe
mov
repz
gs
in
jge
aaa
shrb
aas
fsubr
test
inc
bswap
cs
repz
inc
in
fsubl
lds
fiadds
xor
daa
in
or
out
mov
outsl
xor
push
aad
adc
in
xor
push
aaa
sbb
xor
xchg
lret
lods
test
pop
test
test
mov
and
fistpll
mov
mov
ljmp
test
addr16
pop
pop
mov
enter
cmp
movsl
push
add
pop
jl
scas
stc
or
push
jns
xchg
fisubrl
adc
cmp
out
dec
cmp
mov
inc
sbb
clc
adc
sbb
mov
rcrl
test
push
in
fs
push
scas
xor
fdivl
mov
jb
and
fldenv
ja
call
sub
lods
xorb
mov
pushf
inc
push
jge
dec
js
imul
lods
es
mov
sbb
dec
in
loopne
pop
mov
icebp
into
pop
xor
xchg
scas
mov
cmp
jb
xor
mov
dec
aaa
mov
jnp
or
push
add
adc
xlat
lea
sub
lret
stos
jmp
and
pop
cmp
fdivs
xor
scas
pop
jae
js
mov
arpl
int3
xchg
jb
mov
push
xchg
negl
data16
dec
ljmp
xchg
inc
rorb
sbb
jge
test
and
fstpt
rcll
pop
mov
push
sti
jbe
scas
jnp
hlt
in
xor
loopne
xlat
jmp
int
testl
jns
xchg
pop
imul
stos
add
sahf
or
pop
cmp
xchg
inc
insb
mov
xor
pusha
jnp
pop
push
pop
lds
cwtl
arpl
pusha
sub
iret
jbe
xchg
leave
or
mov
mov
iret
sti
xlat
sbbb
test
popa
push
clc
repz
movsb
dec
push
cmpsl
fistpll
mov
mov
cmpb
xchg
jg
and
push
or
cltd
cmp
cmp
aam
stos
cmp
hlt
xchg
mov
dec
push
fmuls
sub
adc
cmp
negl
jbe
imul
cmpsl
cmp
sub
cmp
mov
and
sub
cmp
xchg
and
scas
outsb
int3
adc
pop
jne
ds
mov
fbstp
fwait
std
cmp
cwtl
add
imul
lds
xchg
ljmp
pop
mov
pusha
enter
pop
mov
dec
test
adc
mov
mov
xchg
lock
mov
add
test
daa
sbb
push
out
stos
pushf
push
shrb
pop
in
test
into
loope
add
push
out
inc
test
add
rclb
cmp
xor
push
push
test
jecxz
das
cltd
cld
arpl
nop
aas
ja
pop
int3
lret
mov
sbb
xchg
int3
or
popa
daa
repz
xchg
and
cs
pusha
dec
mov
fwait
and
adc
push
into
in
hlt
mov
xchg
arpl
stos
adc
fmul
repz
and
xor
xor
imul
lret
cmp
cmpsb
mov
sbb
xor
jl
cld
out
pop
jg
std
sub
int
mov
mov
fsubr
sub
das
dec
mov
push
or
icebp
jecxz
aas
add
lret
adc
mov
and
dec
enter
aam
imul
out
push
dec
push
inc
mov
pop
and
sub
int3
je
ss
add
ja
jl
xor
mov
jl
adc
lods
ret
repz
or
call
aam
pusha
and
out
cs
mov
sub
into
mov
xor
shll
test
sbb
adc
pop
jo
cwtl
mov
mov
nop
xchg
fnstsw
jno
add
sbb
arpl
lds
mov
dec
cs
fwait
push
pop
cmc
aam
leave
cmpsl
mov
bound
pushl
mov
mov
mov
dec
mov
jecxz
lahf
cwtl
andl
xor
jmp
push
mov
dec
in
in
xlat
xchg
mov
xor
mov
jmp
jne
sub
inc
mov
mov
je
push
adc
or
jl
sub
jle
fstpl
sbb
fs
jle
int
ror
mov
mov
cmp
insb
xorl
outsl
push
dec
xor
add
lds
imulb
popa
pop
sbbl
xchg
mov
enter
add
mov
out
into
sub
adc
push
pop
insl
lea
sbb
fsubp
mov
popa
cmc
sbb
lcall
dec
mov
pop
or
ss
xchg
ja
out
mov
loop
mov
in
xchg
stc
sbb
push
daa
out
inc
push
push
ret
dec
aas
repnz
arpl
addr16
pop
mov
push
arpl
adc
sahf
jbe
ret
mov
mov
jbe
dec
mov
jb
fcompl
dec
add
push
arpl
dec
pop
cmp
in
stos
leave
imul
js
push
mov
pop
mov
cmp
cwtl
inc
jo
imulb
fbld
daa
sbbl
sub
dec
rorl
pop
std
adc
adcb
outsb
mov
mov
or
int
mov
lds
loopne
dec
leave
dec
sbbl
adc
mov
sbb
lods
mov
dec
pop
movsl
or
loop
xlat
mov
clc
push
lret
test
imul
cmp
push
fldl
les
jge
scas
jle
jecxz
mov
mov
lods
dec
inc
iret
xor
dec
shrl
adc
pop
jb
add
jmp
push
sub
sbb
fdivrs
mov
dec
dec
insl
xchg
cmp
cltd
pop
daa
pusha
sbb
xchg
jnp
sbb
int
jp
call
paddsb
mov
add
mov
in
ret
dec
rcl
lods
and
add
mov
pop
loop
jecxz
pop
outsb
idivb
add
stos
and
xor
pushl
sar
je
xchg
cs
std
push
loope
pop
popf
mov
or
inc
jb
call
test
jo
mov
sbb
mov
push
fbstp
sbb
xchg
jmp
adc
pop
push
push
clc
add
mov
loopne
add
and
and
ss
stos
pop
mov
fnstsw
jmp
or
mov
add
out
test
xchg
dec
arpl
imul
jo
mov
insb
mov
fldenv
sub
cs
add
xchg
jns
pushf
int
stc
fwait
cli
ljmp
aad
cmp
jno,pt
cmpsl
aam
pop
mov
popf
fstl
fadds
fstps
ss
or
mov
mov
imul
mov
and
pop
xor
aad
jnp
test
sub
inc
push
lcall
in
out
cmp
xchg
out
push
sub
lds
push
in
push
popa
mov
stos
cmpb
fdivrs
scas
xor
jno
push
test
xor
aaa
roll
adcl
hlt
in
dec
sbb
lock
xlat
repnz
push
insb
add
inc
xchg
inc
sbb
mov
mov
jbe
xor
movb
inc
faddl
cwtl
jb
sub
sarl
sub
dec
xor
xchg
push
adc
cltd
adc
xorl
int
es
dec
sbb
inc
scas
insb
mov
ret
xlat
inc
fsubrl
jae
add
xchg
jle
xchg
clc
hlt
and
adc
ja
add
or
leave
pop
mov
add
jge
mov
dec
adc
pop
popa
and
sbb
scas
mov
and
or
pusha
push
popa
sti
outsb
jnp
jmp
int3
add
pop
mov
loopne
sub
mov
cmp
pop
rolb
pushf
mov
iret
mov
test
rcrl
mov
xchg
mov
push
sbb
and
out
pop
daa
out
mov
test
or
ja
fxch
cmp
mulb
adc
and
cs
das
xor
sub
cmp
xchg
sub
inc
gs
or
adc
fwait
jo
or
cltd
into
mov
fwait
lock
jmp
inc
in
adc
in
or
pushf
xor
mov
push
sub
in
call
inc
inc
ja
mov
add
cmp
pop
aaa
pop
push
call
ret
sub
or
mov
ss
outsl
cltd
push
adc
cmpsb
and
jl
inc
lods
mov
je
dec
jp
add
push
mov
cmp
pop
insl
lds
aad
sub
test
cltd
xchg
lods
add
adcb
or
add
and
pusha
xorl
and
pop
xor
pushf
ror
xchg
inc
pop
lods
fwait
out
in
xlat
jg
clc
sbb
divl
add
divb
jl
pop
stos
daa
das
inc
xlat
fwait
push
fildl
sbb
or
lds
or
test
sub
mov
dec
lcall
dec
jb
bound
pushl
lds
jne
sub
xchg
sub
jg
pop
fcomip
les
cmpsb
lret
push
outsl
pmullw
icebp
sarb
xor
mov
in
rcrl
pop
loopne
mov
incb
adcb
xchg
push
or
jp
popa
pop
mov
pop
lock
xchg
faddl
mov
mov
pop
jp
adc
jmp
push
pop
fisubrs
push
adc
icebp
js
jl
xchg
call
jae
push
xor
lret
jae
mov
out
mov
stos
push
lods
pop
scas
incb
jmp
mov
jl
dec
and
push
movsl
popa
xor
ficomps
mov
gs
imul
mov
add
andb
aaa
push
mov
xchg
xorl
pop
mov
sub
enter
out
ljmp
or
cmpsl
sub
repnz
mov
outsl
inc
scas
test
cmp
sti
jmp
jl
subl
xchg
sub
push
scas
pop
loope
cmovb
popf
mov
jle
jno
fisubrs
adc
pop
pop
push
popa
pushf
sub
sub
nop
popa
push
pop
or
ret
pop
inc
sti
mov
adcb
jnp
cmp
or
test
fs
mov
inc
xchg
adc
lret
call
fmuls
jae
insb
test
push
outsl
addb
cltd
xchg
dec
cmpl
out
mov
leave
lea
outsl
push
and
push
pop
dec
notb
inc
sbb
mov
push
xlat
shlb
out
enter
sti
xchg
ret
mov
xchg
ret
imul
cmp
das
int
lcall
in
ficompl
dec
xchg
sbb
mov
cs
sub
imul
and
shlb
sub
ja
testb
cmp
inc
ret
cmpl
lret
push
jae
rorb
mov
inc
subb
cmp
mov
scas
dec
mov
lcall
xor
dec
xchg
imul
out
push
push
dec
push
or
cmp
pop
pusha
lret
or
cld
sub
pushf
cli
fisttps
inc
ficompl
adc
jns
stc
adc
jl
pop
aam
or
xchg
into
sbb
push
add
sub
add
adc
xchg
add
jbe
push
sub
fisttpl
sbb
mov
int3
inc
jle
mov
pop
adc
push
cltd
in
mov
push
and
push
imul
cmc
dec
cltd
xchg
nop
out
cli
mov
std
fstl
fsubs
inc
je
mov
addr16
pop
bound
push
xchg
cmp
int3
sar
cmp
mov
sbb
gs
scas
pop
imul
jmp
out
adc
popf
lods
ss
xor
pushw
pop
sar
mov
pusha
stos
test
mov
loop
sbb
mov
outsb
clc
xlat
inc
aas
cmpsb
mov
out
cltd
sahf
xor
mov
in
loop
dec
jnp
jo
stc
add
sub
jecxz
inc
mov
sbb
mov
mov
sar
cmp
mov
scas
adc
sbb
sti
les
pop
aad
or
mov
pop
out
daa
imul
or
push
imul
stos
pop
xchg
cmp
insb
dec
pop
lock
sub
incl
cmpsb
aad
dec
je
imul
xchg
ds
add
aaa
pop
and
das
cmp
incl
int
insl
in
mov
push
dec
mov
dec
aas
lahf
js
out
add
hlt
xlat
fsubl
push
mov
jmp
test
es
lret
ljmp
adc
sti
and
or
mov
in
mov
repnz
jnp
jg
call
out
or
out
dec
hlt
lcall
or
or
mov
ss
mov
mov
aaa
xor
in
lahf
or
sbb
fisubrl
movsb
ret
or
add
rclb
sbb
inc
jns
xlat
int3
pop
push
adc
fnstsw
rol
repnz
inc
in
pop
test
pop
cwtl
pop
lahf
push
mov
cmp
cmpsl
dec
push
cwtl
push
mov
mov
xor
xchg
pop
inc
and
lcall
sbb
add
pop
push
mov
popa
adc
add
aad
fcomip
pusha
push
lock
imul
scas
fmul
in
mov
dec
jmp
or
mov
int
mov
lods
jns
cmpsl
aas
outsb
jge
fistpl
leave
mov
pop
push
inc
dec
shlb
inc
fidivrl
sti
dec
dec
repz
dec
mov
imul
movsb
cli
inc
cmp
jl
sub
jo
ret
lcall
or
in
and
lods
sbb
fbstp
ds
je
mov
mov
add
jne
pop
in
mov
dec
mov
call
push
jae
jo
fiaddl
int3
xchg
lock
and
push
fimull
hlt
pop
pop
jbe
in
mov
bound
loop
cmpsb
dec
sahf
loop
out
adc
cmpsb
lds
mov
mov
sbb
xor
jb
inc
push
incl
sti
pop
fnstsw
aam
pushf
cmp
add
test
pop
pop
lods
mov
mull
and
lret
push
mov
fistps
xchg
notb
sbb
decl
jnp
ds
mov
mov
or
lods
mov
sub
mov
call
lret
cmovp
mov
mov
xchg
loopne
xlat
pop
loope
cld
and
xchg
movb
adcl
push
cld
lret
popa
sbb
es
sub
lods
rorb
push
fs
jmp
das
mov
insb
sub
adc
adc
push
dec
stos
cltd
mov
jl,pn
lock
xchg
stos
mov
jmp
mov
das
out
adc
in
mov
ret
into
cmpl
jnp
adc
sbb
adc
int3
cmp
mov
dec
xor
xchg
out
out
fildl
sbb
fistl
scas
xchg
jnp
sti
xchg
pop
cmc
mov
imul
dec
ret
pop
push
je
adc
mov
sub
dec
dec
cmp
push
std
iret
and
jns
ret
test
adc
out
shlb
mov
adc
addr16
xchg
adc
cmp
mov
or
mov
adc
test
cmp
test
xchg
mov
pop
cli
sub
sarl
test
xchg
xlat
decl
mov
dec
mov
ret
inc
cli
jl
sub
push
xor
push
jne
pop
mov
mov
sbb
add
hlt
add
jge
xor
cmpsb
mov
mov
xchg
insb
ja
xchg
das
test
mov
aaa
sar
sbb
rclb
xchg
fdivr
xor
out
mov
xchg
in
jnp
push
push
adc
or
dec
int3
bound
in
mov
push
movsl
mov
jo
xchg
jbe
sbb
jbe
popa
in
nop
xchg
jae
xor
inc
or
ret
and
sbb
mov
xchg
scas
pop
inc
fiadds
sub
cmp
xchg
shl
sbb
loopne
rorb
lret
clc
int
mov
imul
stos
add
cs
push
adc
mov
jmp
clc
sahf
stos
lahf
xor
test
mov
sub
loopne
lcall
jg
pop
rolw
jge
aam
sub
pop
push
fstpt
loop
cmp
add
les
mov
adc
std
neg
enter
xchg
push
and
mov
leave
adc
leave
les
bound
mov
mov
mov
stos
push
push
test
lret
xchg
decb
icebp
les
imul
les
aam
add
imul
dec
push
clc
sub
aaa
ljmp
mov
dec
lock
loopne
mov
push
jno
mov
cmp
sub
mov
jecxz
fsts
xchg
gs
mov
flds
sarl
in
and
lahf
or
or
fwait
dec
mov
jae
jo
subb
cmp
cld
mov
out
xor
arpl
pop
jmp
hlt
mov
sbb
pop
mov
and
bound
xor
push
or
popf
std
pusha
mov
jecxz
push
out
cmpsl
adc
add
pop
cmpsl
mov
mov
add
loopne
add
dec
cmp
rolb
gs
repz
xor
sub
cli
dec
ss
xchg
push
xor
add
out
aad
clc
pop
les
rorl
mov
add
scas
pop
adc
out
lea
push
sbb
sub
push
mov
in
add
jne
pop
xor
cwtl
jmp
adc
pusha
push
dec
out
dec
lods
jecxz
jo
call
push
cs
cmp
xchg
cmp
outsl
in
into
xchg
and
sub
pop
or
fnstsw
subb
jbe
mov
inc
sbb
push
adc
popa
and
xor
mov
pop
lods
jns
and
cmpsb
mov
xchg
and
pop
in
cld
mov
pop
pop
mov
test
sbb
mov
add
aam
sbb
push
inc
jmp
inc
out
bound
cltd
imul
ljmp
fildll
cmp
lods
test
mov
jmp
es
loope
icebp
cli
dec
lret
sbb
mov
jmp
sub
jne
sub
sbb
and
cmpsb
sub
cmpsb
inc
repz
test
jo
lods
pop
pop
cmp
push
or
aas
inc
and
cmp
sbbb
add
std
sub
pushf
lret
push
push
fsub
jo
mov
jmp
cmpsb
xchg
ds
mov
bound
movsb
call
adc
movsl
stos
pop
pop
test
rorb
pop
xlat
outsb
mov
cltd
in
adc
testl
mov
mov
inc
lcall
rorb
addr16
mov
and
test
sti
fadd
ljmp
mov
jmp
inc
mov
sti
push
addb
xlat
out
mov
cmp
add
push
inc
jmp
jne
pop
pusha
cmpsb
sbb
mov
inc
imul
int3
scas
mov
pop
fnop
sbb
aam
pop
ret
xchg
or
mov
push
cld
in
lcall
stos
adc
ja
fdivr
call
sub
std
stos
jecxz
mov
insb
mov
and
enter
xchg
sbb
jge
inc
leave
xor
pop
dec
dec
cmp
sub
xor
imul
xchg
call
pop
cmp
inc
dec
xchg
and
scas
adc
pop
jle
shl
fisttpl
push
xor
or
mov
xor
push
ljmp
sbb
fisttpl
imul
dec
popa
cltd
test
ret
pusha
jne
iret
movsl
xor
mov
out
jno
pop
pop
jae
add
fwait
jmp
dec
jl
xor
inc
arpl
cmp
lret
in
mov
out
ljmp
dec
jno
and
cmp
orl
push
ss
test
mov
nop
pop
mov
inc
mov
cmp
mov
inc
imul
adc
mov
dec
cmp
mov
test
mov
in
imul
xchg
movsb
push
std
cld
icebp
xchg
aam
cli
int
fcmovnbe
adc
add
xchg
inc
inc
mov
add
outsb
aad
push
dec
ja
rep
aam
sub
xlat
mov
fdivr
lret
mov
ret
inc
ja
mov
aam
sbb
adcb
sti
mov
push
aas
js
idivb
inc
rcl
ss
xchg
hlt
dec
inc
push
outsb
cli
cmp
loope
arpl
jb
imul
imul
mov
sahf
jle
jecxz
shlb
fldl
adc
xchg
add
fmull
cmp
fwait
out
xchg
ficoms
test
das
push
and
pop
pop
in
call
dec
xchg
jno
xor
push
popf
fstps
fwait
ljmp
das
jae
inc
popf
adcb
jo
push
mov
jl
pop
jbe
movsl
xchg
fisubrs
out
frstor
gs
sete
mov
ljmp
push
push
dec
inc
test
insl
inc
pop
mov
xlat
sbb
jae
jne
movsb
jno
pop
or
xor
jae
addr16
insl
loope
mov
push
sbb
cmp
xor
out
popa
jmp
je
sub
out
out
lret
jl
inc
add
mov
xor
pop
lahf
or
lods
and
iret
jb
sub
nop
loop
aas
mov
fsubrl
fldenv
stos
pusha
cmp
in
ss
cmp
adc
sub
mov
add
les
movb
dec
xchg
cmp
jb
pop
xlat
push
popf
pop
push
mov
pop
cmp
and
and
cmp
push
and
imul
xor
gs
or
mov
int3
loope
mov
fucomip
shlb
shr
popa
and
adc
mov
jle
jno
sti
xlat
loope
jo
xchg
mov
xchg
xchg
jmp
cmp
jne
cmp
aad
cmp
cmpsl
repz
adc
insl
inc
jl
mov
iret
or
add
push
mov
insb
xor
xchg
je
or
loopne
xchg
hlt
aaa
pop
push
add
aaa
enter
daa
lret
stos
cltd
je
sub
sub
fsubr
shr
cmpl
inc
sahf
popa
sub
es
lahf
orb
cmp
mov
pop
bound
pop
xchg
inc
mov
jecxz
fwait
stos
xchg
imul
dec
mov
push
or
mov
dec
std
pusha
jmp
out
repz
jg
jmp
fildll
lcall
pop
ret
adc
enter
out
adc
dec
add
push
adcl
pop
int
hlt
test
xchg
lds
adc
push
ljmp
xchg
mov
stos
sarb
out
sbbb
andl
cltd
rdmsr
pop
pop
add
mov
sbb
add
ret
jg
loope
adc
and
cmp
xchg
shr
mov
xchg
and
inc
xchg
xor
hlt
xchg
jae
lods
fisubl
out
hlt
cmc
int3
fnsave
out
or
mov
mov
mov
push
jmp
mov
or
mov
ss
pop
push
push
pop
adc
sbb
push
loope
pop
mov
movsl
and
arpl
jns
mov
fwait
pop
enter
fidivs
sbb
and
ficoms
imul
ret
dec
xchg
dec
shufps
dec
mov
test
mov
push
mov
das
and
push
iret
outsb
pop
je
xor
jno
sub
push
xchg
subb
cmp
jecxz
pop
lret
adc
fildll
out
call
mov
aad
inc
mov
ror
sub
or
jnp
xor
lcall
ret
sbb
add
jge
pop
imul
outsl
sbb
cmpsb
cmc
add
mov
mov
fimull
lcall
jecxz
mov
xchg
stos
mov
jae
mov
add
nop
es
mov
add
clc
pushf
xchg
dec
pusha
mov
out
insl
cmc
jb
icebp
sbb
pop
pusha
stos
adc
push
push
inc
dec
das
mov
shll
xchg
sti
xchg
dec
das
fwait
out
mov
push
sub
insb
xchg
sbb
icebp
inc
xor
daa
rcrb
pop
xchg
inc
jp
shll
xchg
addb
hlt
mov
dec
test
aaa
push
xor
clc
xchg
mov
ret
fcmovb
jo
addr16
or
pop
inc
daa
movsb
or
in
mov
insl
push
xchg
fs
es
xor
push
lods
dec
add
pop
rclb
lret
lods
lret
add
vcmpss
mov
ret
loop
rorb
sbb
inc
stc
or
dec
mov
movsl
adc
pop
add
in
sub
sub
xlat
scas
or
dec
sub
icebp
fimuls
jmp
pop
push
mov
pop
movsl
rcrb
pop
cltd
mov
negl
sbb
mov
dec
shl
xorb
rcr
and
push
jp
adc
mov
into
jmp
out
jo
jnp
jge
pop
mov
dec
in
sub
popl
into
repnz
mov
adc
in
add
jns
lret
and
sbb
rcll
cs
call
mov
jb
pop
mov
xor
cld
push
or
mov
mov
jb
nop
inc
pop
sub
popf
push
jg
push
ljmp
out
aad
jge
int
loopne
cld
mov
insl
ret
fisubl
dec
inc
jge
ja
sbb
inc
xchg
xlat
xchg
bound
popfw
sub
mov
clc
popa
sarl
push
cmpsb
xchg
fsub
pop
or
movsl
pop
addl
subb
sahf
scas
test
xorb
sti
sbb
inc
arpl
inc
addr16
jae
cwtl
gs
pop
mov
pop
push
les
jge
fsubrl
cmp
lock
and
fsts
call
test
push
pushf
sub
dec
lret
sub
mov
pop
pop
jae
inc
push
movsl
pusha
or
out
icebp
xchg
push
mov
xor
arpl
sbb
daa
adc
rcrl
fdivl
adc
push
or
loopne
mov
lock
push
adc
inc
outsl
in
aam
pop
pop
shr
arpl
mov
mov
xor
popa
mov
sahf
jbe
out
mov
sar
icebp
or
inc
xchg
push
push
mov
xor
sbb
jmp
in
movsl
hlt
icebp
push
push
into
mov
fwait
mov
out
cmp
aaa
js
inc
adc
lret
pusha
cmp
test
mov
or
fistps
ljmp
fidivrs
mov
mov
dec
popl
movsb
xor
and
inc
mov
icebp
loope
icebp
cmpsl
inc
movsb
or
add
mov
jmp
int
pusha
stos
inc
mov
dec
mov
push
stos
and
mov
jno
in
sahf
push
pop
shl
mov
pop
ficompl
cmp
testb
sub
loope
mov
and
dec
pop
push
testb
pop
ss
dec
ja
int3
loop
leave
inc
jae
cmp
int3
sbb
loope
sbb
fdivl
cwtl
bnd
xor
cltd
jl
fcompl
jmp
adc
lds
jo
mov
lret
jge
leave
dec
jns
into
imul
push
dec
xchg
push
xor
and
xchg
jnp
xor
or
push
or
xchg
daa
push
sbb
and
std
mov
inc
or
movsl
xchg
push
xchg
hlt
xchg
inc
ret
xor
mov
shrb
mov
adc
out
dec
mov
mov
add
sbb
xlat
dec
fsubp
mov
mov
sbb
scas
fcoml
sbb
or
outsb
mov
lret
icebp
adc
push
mov
je
push
aas
fidivs
xor
int3
pop
or
or
cmp
xchg
outsb
cmp
mov
mov
in
mov
out
fisttps
jb
pop
loopne
xchg
sbb
xchg
aad
test
cld
cld
hlt
scas
push
sbb
pop
pushf
push
mov
cmp
aaa
sub
adc
out
mov
push
iret
xor
idivb
push
in
out
sub
insl
adc
xchg
sub
cli
xor
xchg
xor
push
jl
xchg
stos
push
or
xchg
stc
enter
aaa
xchg
leave
rcr
int
mov
pop
outsl
dec
sub
mov
adc
mov
fcomip
out
roll
sbb
ret
ret
pop
aaa
std
adc
jge
and
push
xchg
icebp
pop
pop
insb
or
push
popa
mov
push
cld
jle
shll
insb
dec
imul
or
pop
xor
in
sbb
fmuls
icebp
dec
insl
fsubr
add
in
mov
inc
sub
mov
ss
mov
stc
lock
push
mov
in
cwtl
pop
sbb
jo
push
jb
add
inc
mov
in
in
dec
aam
or
das
xlat
out
lcall
push
dec
cltd
mov
je
es
ljmp
std
cltd
sbb
pop
test
or
xchg
adc
int
xchg
jmp
test
fmull
arpl
jb
dec
fcoml
mov
inc
xor
lods
cmpsb
mov
pop
cmpsl
iret
test
xchg
nop
into
and
dec
mov
jno
sahf
cmp
int3
inc
mov
sub
mov
scas
jae
lock
cmp
insl
inc
ficompl
enter
mov
or
in
jno
test
sub
les
adc
xchg
inc
mov
push
dec
es
in
stos
and
mul
ljmp
mov
add
das
shlb
xor
adc
dec
xchg
xor
fucomip
push
or
scas
mov
adc
out
xchg
ds
and
addr16
jbe
cs
sbb
jmp
push
sbb
shrl
lret
fistpll
cmp
push
mov
sub
pop
es
test
sub
iret
mov
fwait
pop
cmp
jae
push
fwait
stc
orb
imul
inc
test
lahf
pop
shrl
scas
cmp
push
lret
mov
jb
sarl
sbb
xor
insl
out
das
mov
dec
mov
mov
push
sbb
adc
push
arpl
sub
lods
and
fistl
sub
mov
insb
xor
xchg
pop
pop
insb
out
xchg
xchg
sarl
dec
test
fwait
inc
pop
cmp
rcrb
int
or
in
nop
jg
push
jo
shl
popf
push
lds
ret
fdivs
xor
insb
mov
sbb
mov
dec
xchg
in
dec
loope
adc
mov
sub
shlb
cmp
fisubrl
cmpsb
push
aas
cmp
jle
sbb
dec
mov
or
xor
sub
xchg
xor
dec
lcall
daa
sub
ret
call
pop
ret
mov
jo
cs
cli
pop
add
lods
imul
mov
lods
push
sub
xor
in
mov
decl
mov
lahf
sub
mov
movsl
ss
jae
lahf
mov
inc
mov
dec
add
ds
jnp
stos
pop
xchg
mov
mov
cs
cs
xchg
mov
xchg
loope
in
pop
les
scas
push
nop
test
and
dec
or
sub
or
icebp
xchg
test
adc
jbe
popl
icebp
add
faddp
adc
es
push
jb
dec
scas
jo
dec
out
rcrl
cltd
imul
dec
mov
add
xor
sbb
mov
js
fwait
mov
cli
std
data16
sbb
stos
xor
mov
dec
das
sti
push
lahf
jns
jle
push
loopne
sub
mov
inc
adc
ja
fidivrl
mov
sbb
test
push
lock
ret
adc
sbb
cmp
xchg
inc
dec
xor
lret
push
dec
dec
imul
fidivs
add
fdivrs
outsl
lret
xor
or
lods
je
adcl
xchg
xchg
dec
pop
mov
ret
adc
shlb
pop
sbb
test
mov
loop
data16
mov
testb
jl
popf
cwtl
or
mov
mov
mov
sbb
es
cmp
xchg
std
mov
bound
xor
inc
add
cmc
lods
repz
adc
mov
mov
std
fisubl
fstpt
jmp
sbb
push
nop
push
addb
gs
mov
push
test
aam
mov
sarl
and
xchg
mov
jbe
inc
pop
jecxz
jl
ljmp
fwait
in
xchg
mov
inc
pop
hlt
icebp
mov
xor
test
xor
mov
lods
test
in
and
std
mov
cmpl
cmp
push
rolb
push
jge
sbb
shl
out
or
in
jbe
sub
scas
ret
mov
das
fisubrl
cmp
mov
cmp
cmp
ljmp
pop
push
test
mov
mov
loop
push
mov
mov
int
stos
mov
xchg
adcl
and
dec
mov
bound
adc
faddl
jle
ds
lock
sub
in
shrb
ja
xor
push
sub
xchg
outsl
aad
test
xor
aas
dec
sub
lea
jo
cmc
sti
adc
out
xchg
dec
lods
dec
pop
aam
lahf
pop
movsb
jg
or
cmp
lds
loop
pop
je
rcrb
int
mov
scas
aam
stc
inc
shr
mov
imul
mov
jne
pop
dec
das
and
sbb
sahf
into
push
insl
cmpsb
insl
pop
jne
sbb
aad
nop
cmpl
inc
mov
lods
lret
jmp
test
xchg
push
mov
xchg
mov
test
ret
jge
iret
scas
dec
sbb
jbe
rol
push
push
loope
cmpl
add
inc
cmp
outsl
adc
pop
lahf
cli
aas
adc
xchg
cmp
insb
test
mov
cmpsb
jbe
pop
dec
aas
push
push
icebp
inc
inc
sub
push
leave
xlat
jmp
xlat
jl
mov
fbld
push
dec
jg
cli
cs
notb
mov
jo
mov
scas
and
adc
dec
idivb
subl
mov
push
dec
mov
les
in
xor
jns
dec
mov
ret
xor
stc
cmp
sub
bnd
enter
andb
xchg
mov
mov
mov
pushf
inc
out
pop
jecxz
sahf
mov
or
add
xor
out
cmp
test
fstpl
jb
out
std
dec
leave
inc
dec
icebp
jle
rorb
fbld
adc
rolb
jnp,pn
jns
repnz
stos
push
ja
pop
in
mov
scas
pop
mov
aam
xlat
adc
dec
push
notl
push
aas
data16
inc
fistpll
cmp
into
lret
test
cmp
mov
rolb
xor
push
lods
xchg
cmp
or
std
cmp
incb
cmp
cltd
push
xchg
xchg
out
ss
xchg
cmp
sub
fidivs
daa
jb
icebp
out
add
std
data16
stos
mov
out
jno
in
pop
mov
int
orb
jns
or
ja
test
inc
fs
jb
or
fwait
mov
adc
dec
adc
push
popf
dec
jmp
xor
dec
jmp
std
insb
lock
sbbb
adc
mov
lock
notb
int3
jns
mov
push
pushf
xchg
dec
ljmp
mov
xchg
aam
bnd
xchg
test
int3
or
stos
cli
push
and
movsb
sar
inc
fldcw
out
mov
gs
out
into
dec
pop
dec
cld
jb
pop
aaa
xchg
lret
lret
mov
mulb
outsb
cmp
pop
outsb
roll
or
mov
aaa
lods
adc
xchg
fwait
shl
adc
or
xchg
fidivs
inc
pop
xor
dec
daa
or
mov
adc
std
dec
insl
dec
jno
pop
mov
nop
in
and
jle
scas
stos
mov
test
sbb
cmp
pop
xchg
push
inc
mov
fldenv
insl
push
mov
stos
and
cmpl
loop
pop
jmp
lods
sbb
push
in
pop
leave
or
imul
adc
ret
insl
clc
std
or
jg
in
add
adc
and
xchg
scas
adc
int3
rclb
cs
out
mov
add
pop
movsl
add
movsl
jecxz
mov
lret
pop
inc
inc
mov
mov
adc
popa
cmp
sub
sti
cmp
xor
jl
inc
mov
xchg
pop
fisubrl
fdiv
stc
test
sbb
xchg
mov
lret
xchg
int3
loope
rcrl
inc
cmp
fdivrl
inc
cld
sbb
dec
pop
jno
in
test
xchg
xchg
insb
inc
arpl
bnd
add
cmpsb
add
inc
insl
mov
sub
jg
mov
in
aaa
sbbb
sub
add
push
mov
cmp
cs
fstpl
add
and
pop
jmp
std
out
cwtl
aaa
mov
mov
icebp
sbb
cld
test
push
lea
xor
nop
cs
cli
test
nop
jnp
shlb
fsubrp
mov
in
roll
sub
imull
into
lret
std
pop
xchg
fistpll
push
inc
sub
dec
mov
dec
ror
sbb
push
repz
fcomps
push
xchg
sarb
cwtl
adc
pop
sbb
push
lods
xchg
loope
add
jmp
sbb
out
jbe
push
mov
nop
jge
push
mov
add
iret
add
pop
mov
test
xchg
sub
inc
sbbl
andb
cmp
sub
lock
les
cli
xor
push
mov
jo
testl
leave
arpl
cmc
adc
lods
add
icebp
cmpsl
subb
and
xor
popf
mov
add
icebp
ret
imul
cmp
jmp
in
cmc
pop
mov
sub
cld
inc
rcr
adc
lret
fisubs
mov
call
push
cmp
xor
pop
ljmp
std
outsb
shll
pop
push
and
pop
push
addl
movsb
mov
dec
mov
test
sbb
movsl
sbb
fstp
lds
enter
pusha
outsl
test
fcmovnbe
lock
loope
int
cmp
test
cmc
add
stos
lods
jmp
xchg
adc
or
and
mov
jne
frstpm(287
xor
jp
xchg
cld
xlat
mov
mov
test
sbb
out
pop
or
jge
lcall
sub
and
pop
xlat
or
xchg
xchg
je
insl
pop
test
pop
inc
out
pop
jns
xchg
mov
fs
roll
and
jno
scas
jge
test
add
pop
xchg
cmp
test
xor
inc
sbb
icebp
mov
jg
jle
aad
or
mov
mov
loope
call
mov
test
pop
jne
cmp
scas
loopne
and
sub
iret
xchg
and
mov
je
into
lea
clc
mov
dec
push
cmp
mov
pop
insl
clc
aam
jle
mov
arpl
out
dec
std
mov
pop
scas
es
das
sub
inc
jmp
movaps
int
add
lea
xor
shrl
dec
and
stc
stos
test
loop
inc
pop
push
and
pop
rorb
pop
dec
sub
pop
addr16
je
and
dec
ljmp
std
xor
mov
mov
je
js
stos
lret
dec
and
pop
mov
stos
imul
mov
xor
hlt
out
mov
and
add
cmpsb
pop
jg
mov
xchg
pop
cli
fsubrl
cwtl
test
mov
imul
jno
or
mov
repnz
sub
insb
sub
dec
or
mov
add
lods
ss
xchg
add
cmpsb
ret
repz
sarb
push
out
jae
addr16
jge
int3
cmp
pusha
iret
cld
loop
pop
add
pop
adc
ret
push
mov
mov
jno
cltd
dec
sub
pop
jae
iret
push
cltd
adc
mov
add
push
mov
icebp
add
rcr
rcll
mov
ja
pop
jl
mov
sub
adc
sub
jb
mov
scas
es
sub
mov
scas
enter
addb
inc
jl
push
add
popf
mov
in
dec
sbb
sbb
mov
mov
lcall
jmp
stos
je
test
int
pop
loop
pop
push
mov
and
sbb
lods
lods
cld
aad
out
xor
repnz
fmuls
call
mov
xchg
dec
jb
les
repnz
jo
lcall
push
push
push
dec
lock
pop
orl
mov
push
in
das
jg
scas
imul
sub
jne
cmc
push
stos
stos
inc
sbb
in
sbb
orb
pop
repz
adc
xor
fisubrl
xchg
ret
lds
cmpsb
lret
xchg
jb
cmp
scas
pop
sub
nop
adc
imul
mov
dec
push
inc
addr16
mov
mov
sub
sub
mov
inc
inc
jge
and
clc
mov
daa
inc
ja
xor
mov
ljmp
mov
fstl
xlat
mov
push
jg
mov
add
jmp
hlt
fadds
jne
out
inc
xorl
jp
std
leave
jecxz
dec
sub
sahf
loop
mov
divb
jno
data16
rolb
inc
adc
arpl
xor
and
out
aad
or
leave
aas
test
cli
pop
cli
movsl
add
jle
fdivrl
pop
cmp
mov
mov
add
mov
cs
out
sub
lods
icebp
gs
lea
cmp
mulb
stos
inc
and
jmp
gs
lds
push
dec
push
andl
adc
or
mov
aam
dec
fcomps
cmp
mov
dec
fs
movsl
pop
mov
inc
in
pop
outsl
cld
lods
cwtl
out
in
outsl
sti
dec
js
movl
cmp
ja
lahf
push
pop
nop
mov
fmuls
fisubs
icebp
xchg
xchg
and
inc
dec
sub
movsb
mov
push
pop
push
cmp
mov
outsl
cmpsl
mov
inc
cmc
nopl
jl
sbb
sbb
rclb
mov
inc
sbbl
cmpsl
inc
dec
scas
or
stos
sub
int3
rcrl
ret
adc
ljmp
jp
movsl
lods
mov
mov
cmpsl
jno
aam
mov
clc
mov
ror
inc
dec
ficompl
mov
push
loopne
gs
addr16
hlt
mov
test
add
jecxz
sub
add
dec
mov
xchg
out
fs
cltd
fstps
push
inc
sti
adc
lods
fcmovb
dec
rcl
popf
jns
call
js
mov
sar
bound
cmc
dec
inc
out
pop
aad
pop
mov
pop
jnp
push
lcall
into
arpl
jb
adc
ja
push
fildll
mov
or
pop
push
mov
arpl
mov
daa
fwait
call
and
fsubl
leave
xor
jp
repnz
into
dec
loope
dec
xor
push
jg
rcll
bound
mov
fsubs
xchg
lea
gs
push
shl
inc
jae
cmp
pushf
or
sbb
mov
add
sti
icebp
pop
call
int
jmp
jl
inc
push
scas
adc
xor
push
lcall
lret
cmp
sub
iret
cli
adc
mov
ficoms
pop
into
push
pop
icebp
or
jl
push
int
psrad
stc
sbb
out
fcoms
and
and
fmull
jecxz
dec
into
dec
push
xchg
cwtl
xchg
andb
xor
push
fcoms
push
mov
scas
or
mov
addb
add
xchg
push
push
push
jne
mov
int
push
or
test
fsubl
mov
imulb
mov
lahf
sub
call
add
loope
jle
testl
sbb
or
xor
xlat
cmp
pop
popf
aam
cs
jmp
scas
xlat
jo
jle
fwait
add
pop
jl
mov
lea
ss
cltd
sbb
inc
dec
cwtl
mov
sub
dec
cli
jno
sub
dec
jp
pop
cmp
xchg
sub
xor
sub
outsl
xor
sar
out
sbb
jge
fisubs
minps
jp
mov
jl
ror
pop
pushf
cwtl
add
mov
cli
imul
sub
xchg
sub
pop
xor
xchg
or
cmp
xchg
xchg
jnp
push
sub
mov
or
out
leave
outsb
dec
pushf
nop
xchg
pop
sub
mov
fwait
sub
xchg
in
aaa
es
data16
and
push
xor
push
inc
negb
mov
call
add
lods
out
adc
imul
lret
fwait
push
push
mov
cmp
push
movsl
mov
loope
cmp
ret
mov
push
pop
aam
push
xor
sahf
aam
sbb
or
xchg
imul
xor
dec
inc
dec
pop
push
mov
inc
test
inc
mov
dec
pop
mov
mov
and
cmp
xor
and
call
shl
or
mov
jl
adc
nop
mov
add
push
scas
sbb
ss
iret
inc
lret
test
mov
call
sbb
cmpsb
iret
daa
pop
outsb
ss
cmp
cmp
dec
cmpsl
sbb
xchg
mov
pop
ja
mov
in
jo
mov
jo
mov
mov
sub
jl
pop
hlt
and
mov
clc
push
push
push
stos
mov
pop
les
adc
push
ss
repnz
mov
int
divb
daa
lret
negb
js
imul
fstpl
dec
movsb
cmp
test
xor
adc
jp
pusha
lods
cld
mov
inc
sbb
aam
and
add
cmp
mov
rcl
sub
jge
inc
jecxz
adc
cmp
subb
inc
xor
pop
xchg
out
mov
ret
jle
dec
add
and
bound
mov
mov
adc
add
xor
into
inc
loope
cmp
add
push
add
clc
or
push
push
xor
push
jnp
popa
mov
dec
pop
es
jae
inc
dec
mov
inc
mov
icebp
in
push
dec
dec
xor
bound
in
mov
dec
pop
lods
push
adc
pop
js
xor
mov
dec
aam
lock
jle
inc
mov
mov
pop
jnp
mov
movl
inc
int3
mov
test
lock
inc
idivb
adc
adcb
fcmovb
enter
daa
mov
scas
jge
jp
dec
cld
ret
mov
xor
dec
and
idivl
lds
lods
es
fwait
dec
fcmovb
cmc
xchg
rorb
cmp
inc
push
or
mov
pop
lock
mov
sti
adc
jne
or
sub
mov
stc
pop
loopne
gs
imul
adc
push
mov
aam
and
popa
ret
adcb
and
cmpsl
jb
std
ret
scas
outsb
cmp
sbb
and
into
out
xchg
movq
inc
ja
sub
out
push
loop
repnz
dec
nop
lds
xchg
insb
xor
add
dec
test
mov
popa
aas
mov
xchg
stos
push
sbb
stos
lock
xchg
xchg
mov
stc
mov
sarb
add
mov
lock
mov
mov
xchg
std
and
cmp
or
das
and
sbb
stos
call
inc
push
dec
push
dec
rorl
lds
stc
in
mov
or
mov
aam
repnz
adc
mov
mov
bound
hlt
fwait
sbb
pop
mov
mov
sti
add
daa
xchg
ror
add
mov
orl
dec
ja
std
inc
sti
pop
loopne
xor
test
pop
add
aad
pop
xchg
mov
cmpsl
fdivrl
add
and
aas
pop
dec
adcl
lea
push
add
fistpl
hlt
data16
xor
inc
test
inc
and
dec
jnp
je
mov
jb
fistpl
jle
je
add
xchg
cmpsl
inc
ljmp
and
insl
add
and
mov
mov
mov
insb
mov
adc
mov
pop
push
push
dec
test
cmp
lret
orl
push
mov
ret
xchg
cmpl
popa
out
or
or
inc
adc
test
mov
sbb
adc
xchg
adc
rorl
movsb
push
out
push
jbe
fnsave
sub
int
sub
mov
adc
xor
stos
fsts
outsb
jmp
add
call
inc
pop
mov
cmp
push
out
and
jmp
ret
dec
jns
loope
mov
sarb
mov
cmpsl
sbb
mov
dec
enter
test
cmp
or
iret
rcrl
daa
mov
movsl
ja
mov
stos
sbb
sub
jbe
out
xchg
out
cmp
push
clc
cmp
mov
inc
jle
push
mov
pop
mov
dec
dec
jle
xlat
cltd
repz
pop
or
jne
stos
or
pop
mov
inc
inc
movsl
add
lds
inc
int3
int
pop
or
cmp
gs
movsl
loopne
mov
out
jns
sbb
shrb
cmpsb
xchg
mov
xor
cmp
mov
es
rcr
cltd
inc
lahf
cld
cmpsl
cmp
clc
jo
rorb
jno
rorl
jns
lea
dec
pop
add
fsubrl
push
shrl
xorl
lods
mov
push
and
xchg
inc
int
xor
pop
test
xor
mov
xchg
cs
add
fwait
push
aaa
cmp
cmp
or
sbb
ret
mov
roll
in
xchg
lods
xchg
jmp
jae
ljmp
and
hlt
dec
cmp
scas
loopne
call
jle
movsb
sub
sub
fstpl
fisttpl
push
bound
imul
shll
outsb
mov
negb
inc
into
mov
call
cli
sub
es
sar
mov
cmp
sbb
outsl
lea
jle
loop
add
mov
sbb
xlat
sbb
aas
dec
test
add
sub
insl
dec
push
pop
sbb
in
fildl
fstl
pop
shrl
xchg
lahf
jae
mov
cs
pop
jmp
fiaddl
scas
mov
data16
inc
mov
lods
xor
pop
aad
xchg
inc
jmp
add
xlat
xor
clc
inc
jle
rcl
test
pop
dec
cs
or
dec
mov
and
shlb
int
dec
dec
stc
lds
or
fsubrp
nop
xchg
mov
mov
or
add
push
xor
mov
bound
lcall
and
mov
mov
pop
mov
test
and
add
loopne
jg
push
imul
mov
dec
push
xor
rcrl
sbb
fisubrs
mov
sub
dec
lret
pop
cmp
shll
fsubrp
repnz
es
std
add
stc
ss
aaa
imul
ljmp
xchg
or
icebp
adc
push
jo
call
scas
gs
lds
lret
aam
fmuls
test
add
dec
pop
dec
mov
in
sbb
xchg
add
leave
pushf
push
mov
cmpsl
adc
inc
cmp
add
pop
jle
inc
inc
mov
xor
jmp
xchg
loope
mov
push
ror
mov
adc
inc
icebp
addr16
repz
ja
rcr
scas
mov
inc
clc
xchg
jnp
mov
cli
sub
inc
and
mov
push
in
in
repz
pop
movsb
add
dec
test
idivb
mov
pop
mov
mov
scas
xor
cmp
pop
lods
ljmp
ret
scas
sub
cmc
xor
adc
sbb
andl
pushl
jne
sub
jno
test
pop
cmp
adc
int
aam
sub
adcb
pop
loop
lods
sub
mov
icebp
les
pusha
xor
shlb
mov
dec
mov
dec
xor
sbb
mov
xor
loope
inc
jns
push
or
ffreep
out
ret
xor
jno
call
insb
lcall
into
sbb
int3
cmpps
cmp
sub
mov
xchg
popa
push
xchg
push
std
es
jb
daa
jne
sti
inc
xchg
dec
push
nop
add
cmpsl
pop
xor
mov
sti
test
outsb
jl
jp
shll
lock
popa
cmp
push
adc
inc
bound
cwtl
dec
push
out
xchg
pop
and
mov
push
pop
lods
cmp
cmpsl
push
adc
ficoml
in
mov
lds
icebp
in
adcl
sahf
cwtl
mulb
push
test
loopne
loope
dec
rcrb
ficoms
popa
jmp
mov
stos
cli
add
mov
sbb
cmc
inc
push
popf
jne
iret
xor
mov
mov
sub
shll
adc
int3
repnz
adc
test
xor
xlat
push
aas
pop
sbb
gs
dec
jae
xchg
lds
or
adc
push
icebp
insb
mov
jmp
push
pop
cltd
push
cs
mov
mov
outsl
mov
inc
in
mulb
iret
pop
inc
outsl
loope
cvtpi2ps
stos
inc
inc
hlt
mov
cltd
dec
js
les
dec
jne
push
andb
movsl
dec
jnp
shrb
cmp
xor
sub
adc
ja
mov
pop
pop
and
rcl
jle
in
adc
pop
out
push
mov
pusha
push
aas
jle
xchg
lods
dec
dec
ret
xchg
push
sbb
push
insb
int
xor
sub
test
push
clc
cmpsb
jg
stos
cmc
cmp
cmp
push
mov
sub
lock
sub
xchg
pop
stc
ret
das
fstps
push
mov
imul
enter
ret
or
jl
push
js
fadd
sti
shll
in
hlt
cmp
xor
aaa
cmp
pusha
mov
in
inc
sti
es
jns
pop
aad
iret
inc
mov
mov
movhlps
test
xor
mov
lret
loop
leave
rol
test
cmpsl
jbe
push
fsub
fwait
out
lret
sbb
popf
sbbl
shlb
dec
jg
sub
pusha
xchg
and
cmp
in
test
andps
sub
shl
xorb
cli
push
roll
and
in
inc
add
cmpsb
inc
or
mov
sub
movsb
pushl
cmpsb
lds
dec
cmp
rorb
xor
nop
pushf
sub
adc
xchg
mov
mov
pop
std
mov
fstl
lods
cmpsb
dec
xor
call
lods
cwtl
push
clc
sbb
ret
mov
shr
addr16
shl
jmp
adc
cmp
mov
inc
pop
inc
lret
jb
mov
dec
jae
cwtl
in
int3
jle
test
pusha
and
popa
mov
lea
scas
stos
shll
stos
xchg
stos
xchg
insl
ja
push
inc
mov
xchg
cmpsb
add
pop
dec
mull
mov
data16
cmc
shrb
jmp
mov
adc
clc
movsl
add
dec
fstpt
xor
les
call
mov
xlat
fwait
dec
xchg
pop
pop
xlat
xlat
mov
or
inc
sbb
mov
xchg
sbb
add
xor
cld
jnp
push
repz
enter
add
and
test
iret
mov
into
mov
js
in
fisubl
sub
push
xor
adc
pop
mov
nop
sahf
clc
pop
sub
mov
sarb
nop
lcall
sub
and
add
fcomps
xchg
sub
mov
cld
dec
cmpb
mov
xchg
loop
push
mov
gs
mov
frstor
add
aam
fs
dec
out
arpl
lods
adc
mov
hlt
sub
leave
ja
push
mov
and
inc
insb
lcall
int
shrb
and
and
mov
dec
sbb
popf
mov
xchg
pop
outsb
lods
aaa
aas
dec
inc
pop
sbb
push
cmpsl
pop
std
push
inc
and
jns
sbb
iret
in
insl
scas
push
shl
xor
push
pop
dec
je
sbb
jns
arpl
lret
in
rorb
cmp
sbb
xchg
adc
insb
fsub
add
enter
jle
bound
fisttps
xchg
je
sbb
fsub
rdtsc
adc
mov
ja
jl
inc
into
cmp
inc
mov
mov
sub
adc
scas
sbb
les
in
das
inc
pop
push
sahf
push
mov
scas
outsb
inc
in
jl
pop
dec
xchg
repnz
sbb
push
push
outsb
int3
or
int3
movsb
dec
in
fildl
nop
loopne
test
mov
dec
movsl
mov
and
add
test
lods
mov
insl
lods
aaa
and
push
fmulp
mov
cmp
scas
push
lods
test
xor
clc
in
xor
push
ds
push
mov
mov
lds
xor
imul
adc
dec
inc
icebp
cmc
test
mov
fdivrl
and
in
and
ss
negb
bound
xchg
clc
lock
and
mov
mov
push
add
inc
or
aaa
hlt
fcmovnb
mov
push
mov
in
repz
mov
push
dec
into
sahf
mov
or
push
insb
cmp
xchg
jp
test
popf
push
xor
cmp
stos
scas
xor
inc
stc
xchg
dec
mov
or
xor
cmpsb
push
lea
fnstenv
inc
insb
dec
jp
mov
push
push
outsl
gs
sbb
cmpsl
sub
dec
sub
enter
mov
call
pop
mov
xchg
and
je
add
adc
js
iret
lods
jl
stc
mov
andl
mov
add
adc
clc
enter
data16
mov
jl
fistps
xchg
incl
movsb
insl
adc
testb
jecxz
lret
or
mov
push
popa
daa
or
pop
dec
cmpsb
pop
addr16
xchg
inc
flds
pop
out
das
mov
sar
in
xchg
pop
pop
fiadds
loop
sub
bound
xchg
call
loope
jge
ss
pop
pop
aad
xor
mov
imul
ret
mov
jbe
cmpsb
adcb
adc
loop
pop
inc
mov
xchg
sahf
inc
sub
dec
js
leave
pop
mov
xlat
xor
adc
sbb
jno
repz
cmp
in
js
dec
push
adc
mov
sub
jle
mov
faddl
adc
pop
js,pn
rorb
aam
lahf
dec
testb
or
adc
shl
fwait
mov
xchg
sub
test
pfcmpgt
std
enter
mov
enter
out
int3
mov
mov
sub
lds
ss
sub
adc
inc
popf
aad
dec
push
out
in
nop
inc
das
das
int
inc
jo
pop
jmp
lahf
pop
mov
pop
popf
dec
or
test
adc
lea
sub
insb
fidivrs
inc
test
sbb
das
adc
sbb
ret
lods
jb
sub
bound
push
stos
and
cmpsb
xor
inc
pop
cmp
adc
fcoml
imul
stos
inc
adcl
mov
or
add
or
rorl
pop
fstpt
or
xchg
push
jb
push
loope
inc
aas
mov
xor
jge
nop
int3
loope
fwait
icebp
cs
mov
xor
pop
jo
pop
mov
push
cwtl
or
xchg
cmp
adc
cli
and
mov
xchg
xchg
xor
push
push
and
adc
dec
mov
inc
out
iret
test
fldcw
mov
ret
jecxz
test
fists
push
popf
add
daa
out
jmp
nop
fcmovu
xchg
in
stos
leave
out
inc
mov
notb
sub
lret
shr
dec
cli
lret
int
ljmp
gs
and
sbb
or
jl
addb
lahf
mov
sarb
repnz
ljmp
insl
stc
not
mov
adc
xor
sub
and
or
fidivs
insl
gs
mov
lret
lods
push
addr16
mov
je
lret
jo
jne
pop
orb
movsb
lahf
loop
ja
insl
test
call
aas
jmp
mov
sub
pusha
mov
nop
fnsave
push
mov
pusha
push
and
jb
shlb
subb
push
jo
insb
push
push
cmpsb
test
jnp
xchg
bound
aad
mov
lods
and
dec
pusha
sbb
pusha
sbb
ret
lea
and
and
inc
xchg
lcall
and
adc
push
push
mov
insl
xor
jae
xchg
dec
mov
sbb
dec
pop
xor
fwait
jle
movsb
jp
xchg
add
mov
push
fimull
lds
fadd
outsl
sub
jnp
add
addr16
out
xor
lock
hlt
cld
mov
push
cmc
or
rcrl
cmpsl
xchg
dec
fstps
xor
pop
fiaddl
sbb
mov
sub
push
cmp
dec
fcomi
xlat
ds
into
xor
xchg
sub
dec
push
add
sub
jp
mov
iret
pop
pop
fsubl
inc
sbb
xchg
neg
pusha
jne
idivb
mov
imulb
jmp
sbb
int
jge
leave
ret
pop
xor
mov
aas
es
mov
mov
inc
cs
das
mov
decl
add
mov
aaa
popaw
pop
mov
xchg
mov
xchg
jle
rorl
ja
aas
popf
dec
xorps
shll
idiv
push
sti
inc
and
mov
cmp
pop
jae
jg
mov
popf
inc
std
push
lods
fisubs
mov
lahf
repnz
lret
out
rcrl
jnp
adcl
xchg
or
jae
inc
and
repnz
xlat
or
pop
sub
or
in
and
pop
scas
aad
lods
push
adc
inc
jecxz
jnp
or
jo
cmp
daa
stos
test
mov
sub
sti
testb
adc
clc
pop
fidivrs
adc
insl
movsb
xor
jo
push
add
and
jo
jae
mov
in
loope
outsb
or
sbb
sub
call
mov
ja
loopne
adc
jge
das
jl
inc
add
in
int3
push
scas
int3
mov
shrb
lock
push
and
cmp
jnp
mov
cmp
ret
bound
sbb
sbb
in
sti
jmp
pop
mov
das
inc
shll
ss
aas
adc
shll
or
sub
fwait
enter
ds
lret
aaa
fsubrl
addr16
frstor
shrb
sub
rep
inc
jp
cli
mov
pop
test
inc
lahf
sbb
addr16
fcompl
test
mov
clc
pop
jl
aaa
popf
out
sbb
dec
loopne
jno
xchg
outsb
subb
cmp
sbb
mov
pop
ret
imul
call
inc
jecxz
adc
movsl
sub
movsl
push
sub
popf
cmp
insb
loopne
dec
cmp
cmc
leave
test
push
fistpl
mov
test
sub
pop
pop
incb
leave
add
stos
pusha
or
adc
loopne
andb
aad
cmp
sbb
cmp
ret
sub
cmpsb
and
or
repnz
add
mov
xor
push
mov
mov
lea
cmc
pop
jae
and
popa
subb
sub
and
xchg
mov
sbbb
and
mov
lock
lret
jl
cmpsl
aad
data16
lods
inc
mov
imul
lcall
lock
cs
outsb
leave
sub
mov
int3
cmc
xchg
inc
in
or
or
or
push
push
inc
popf
dec
popf
in
inc
add
mov
adc
xchg
in
std
fs
dec
mov
ret
mov
jl
cmp
mov
int3
push
adc
enter
outsb
push
add
outsl
or
cmp
push
int3
inc
cmpsl
neg
mov
clc
fwait
dec
sbb
adc
repnz
sbb
imul
divl
jnp
and
or
dec
test
and
insb
jg
leave
je
lods
mov
pop
test
xor
push
mov
pop
shrl
adc
inc
sbb
mov
test
ss
dec
dec
mov
pop
daa
movsb
add
stos
sub
ret
sahf
outsl
cmc
push
and
xchg
push
out
enter
xor
mov
gs
outsl
push
push
or
push
push
pusha
aam
std
push
dec
mov
in
add
jge
shll
into
add
lahf
lahf
flds
jge
push
push
fadds
shrl
clc
push
clc
xchg
cmc
inc
xlat
sbb
repnz
cli
push
push
movsl
sub
push
push
lret
mov
mov
mov
mov
xor
insl
sbb
mov
mov
adc
cmp
xor
pop
loopne
ret
clc
xchg
jae
data16
sbbl
add
hlt
int3
pop
call
das
sub
cmc
cwtl
push
ja
jp
imull
jp
fsubrs
and
mov
mov
gs
adc
and
and
nop
mov
hlt
icebp
xchg
rcr
fildll
in
ljmp
xor
loopne
subl
jbe
mov
jns
jp
gs
mov
stos
and
inc
xchg
xchg
push
xor
mov
es
aam
out
call
bound
and
int3
leave
lret
xchg
sbb
cmp
push
fnsave
in
imul
dec
test
xlat
mov
loopne
scas
and
popa
les
adc
mov
js
sbb
xchg
fadds
lock
int
iret
sti
jmp
pop
sub
jmp
mov
in
push
enter
mov
popa
repz
inc
xor
shl
aad
or
cmp
in
cld
aas
xor
inc
adc
sub
int3
fbld
or
sbb
pop
aaa
aaa
aaa
pop
adc
fsubrl
adc
call
rolb
adc
xlat
enter
frstor
xchg
je
lock
sbb
fwait
out
push
push
push
or
imul
dec
add
scas
inc
cmp
and
scas
add
pop
pop
cmpsl
pop
lods
mov
jp
pop
popl
fmuls
xchg
cmpsl
sbb
cmpsb
sub
push
lahf
pop
sbb
divl
lsl
jmp
in
or
push
inc
cs
or
out
cmp
mov
js
repz
data16
adc
test
adc
iret
mov
fcmovbe
out
outsb
xchg
popa
adc
jmp
mov
xchg
out
fcoms
in
in
js
ret
jecxz
leave
inc
push
mov
push
adc
loope
mov
mov
popa
into
insl
adc
sub
dec
sbb
insb
adc
cmp
or
hlt
fsts
test
cmp
shl
scas
jmp
cs
lret
inc
movsl
sub
fildl
cli
jp
aad
dec
push
call
add
and
outsl
dec
shrb
pop
adc
push
stos
adc
scas
sar
shufps
cmpsl
aas
rcrl
xlat
jp
stos
xchg
rcll
push
or
dec
xor
je
aas
les
sub
jno
adc
mov
cmpsb
pusha
insl
sti
imul
jmp
adc
xchg
out
and
mov
aas
ret
scas
push
cmp
ljmp
push
fs
ss
xchg
inc
xor
xlat
mov
aad
fyl2x
cmp
adc
fisttpll
push
add
imul
push
add
sbbb
sub
push
dec
push
mov
imul
mov
repnz
dec
sbb
in
adc
adc
iret
mov
xor
test
pop
xor
test
mov
enter
push
and
fwait
jle
or
daa
je
in
ja
jge
mov
in
leave
jmp
dec
clc
adc
test
xlat
lods
jns
mov
push
push
sub
int
sbb
mov
repz
shrb
cmp
lods
jno
pop
out
lods
pop
mov
rolb
pop
xlat
cltd
aam
out
nop
outsb
or
mov
dec
mov
adc
push
stos
push
shlb
inc
js
test
mov
cmp
cmp
imul
xor
testb
and
outsl
mov
mov
nop
into
loopne
mov
gs
cmpsb
stc
js
std
add
orl
popa
and
jg
neg
sbb
imul
xchg
mov
jb
cmpsb
dec
jmp
xor
mov
adc
jne
icebp
inc
in
xchg
push
push
or
xor
inc
xor
cli
jecxz
iret
lret
jl
ljmp
adc
dec
xchg
sub
in
scas
mov
adc
pop
dec
loope
js
aam
mov
imul
inc
lahf
sub
sti
pop
int3
sub
leave
mov
fwait
push
and
mov
cld
sbb
jnp
addr16
dec
lret
jecxz
jb
lds
xor
cmp
daa
or
or
jmp
jo
mov
and
mov
cs
adc
insl
or
sub
das
popa
xor
ss
mov
in
lods
pop
pushf
repz
mov
push
loop
xchg
jg
pushaw
fldt
fists
add
pop
cld
sub
xlat
sti
dec
xchg
rolb
pop
jge
push
and
movsl
cmp
iret
push
xchg
push
mov
lahf
jns
pop
leave
or
je
dec
cmp
cmc
inc
pop
in
fwait
imul
fwait
shrb
lahf
jecxz
test
xor
outsb
dec
mov
ret
decl
iret
sub
pop
ss
sti
clc
xchg
in
pop
fwait
aaa
cwtl
out
jle
gs
push
dec
idivb
fldt
xchg
gs
insb
dec
arpl
push
outsl
sbb
ret
shll
imul
jb
mov
pop
lcall
add
jb
inc
cmp
cmp
loopw
repnz
sti
lcall
sbb
cli
pushf
mov
fsin
aas
or
push
push
mov
divb
inc
lods
or
jne
xchg
out
nop
push
ds
imul
icebp
and
int
xchg
jbe
sub
test
or
and
sub
in
xor
loop
dec
fs
lret
inc
sbb
out
gs
popa
pop
jae
pop
das
enter
mov
jo
mov
push
jle
mov
sbb
into
lret
stos
mov
negl
rclb
cmp
xchg
ja
cmp
mov
lret
mov
lahf
cmc
xor
loope
and
mov
cmp
sti
out
sbb
push
btr
xchg
adc
push
mov
test
sbb
stc
cli
jnp
jle
in
inc
aas
jmp
icebp
sbbb
xchg
xor
inc
mov
push
adc
push
lock
and
leave
dec
jnp
shr
and
xchg
sbb
sbb
mov
int
test
and
repnz
xchg
add
mov
xor
cmp
cmpsb
call
dec
mov
lret
push
jmp
xlat
dec
out
and
pop
push
push
je
mov
or
lock
decl
and
sbb
sub
jno
dec
loopne
popaw
pop
dec
mov
jmp
jmp
jecxz
icebp
imul
cmp
scas
adc
cmp
push
mov
fwait
xlat
jl
aaa
outsb
insb
pop
mov
lcall
push
jbe
jnp
mov
jns
mov
add
sahf
hlt
dec
pushl
dec
nop
mov
mov
pop
or
pop
push
out
xchg
push
aad
cltd
mov
xchg
push
and
jbe
cmp
and
cltd
or
daa
in
sarl
ss
mov
push
lods
jl
xchg
into
orb
fadd
jmp
rcr
insb
stc
push
pop
cmpsl
outsl
adc
mov
pop
jp
dec
or
and
mov
fistl
push
mov
test
add
pop
dec
aad
lret
aad
cli
sub
mov
iret
sbbl
sub
test
decl
cmp
cmp
imul
dec
arpl
push
int3
adc
loope
pop
fwait
lret
jne
add
cmp
mul
push
mov
lods
xchg
and
ljmp
cld
adc
pop
mov
sbbb
addb
mov
out
ja
pushf
add
sub
mov
pop
fwait
ret
inc
rolb
and
leave
test
or
lock
les
fldenv
mov
xor
jecxz
enter
stos
dec
clc
pop
lock
test
adc
and
sbbl
and
mov
xor
dec
push
stos
sbb
xchg
inc
imul
cmpsb
xchg
mov
inc
mov
inc
inc
or
xchg
pushf
pop
loop
adc
ja
test
push
pop
out
cmp
movsl
fs
xchg
inc
subl
inc
dec
adc
xor
add
xchg
into
lret
incl
iret
mov
scas
sbb
inc
mov
imul
sub
icebp
dec
mov
xchg
in
pop
ljmp
daa
pop
dec
mov
push
es
and
xchg
sarb
je
mov
mov
push
sbb
ret
int3
in
mov
xchg
xor
sbb
aam
movsl
leave
sub
call
pop
es
mov
int3
jl
jge
dec
push
dec
adc
mov
aas
jae
xor
rolb
movb
xchg
cmc
xor
cmpsl
aam
sub
inc
push
mov
sub
js
js
es
icebp
outsl
cmc
sub
pop
scas
push
cmc
push
arpl
fisubrs
and
jmp
fcomi
movsl
adc
shrb
repnz
fcoml
sti
inc
cmp
in
lds
fmulp
sbb
sbb
jg
fmull
nop
sbb
xchg
xchg
repz
xchg
mov
fmuls
push
pop
cmp
mov
sbb
mul
sub
push
lcall
xchg
dec
mov
es
mov
mov
decl
cwtl
gs
enter
lret
jnp
mov
js
jp
push
or
cmp
mov
fdiv
dec
aaa
scas
stos
add
movsl
jbe
mov
fcomip
and
out
fcmovnbe
add
ss
outsb
pop
adc
xchg
mov
sbb
cltd
mov
pop
out
xchg
inc
pop
insb
add
mov
mov
aaa
ficompl
inc
inc
dec
sub
cmp
mov
daa
jmp
sub
pop
fsubs
std
out
jle
rorl
xchg
mov
xchg
enter
sti
fcoml
pop
idivb
and
jbe
xor
ds
lcall
inc
inc
adc
pop
daa
outsl
sub
incl
dec
shl
pop
sbb
ds
inc
fiadds
enter
mov
or
xor
sbb
sbb
pop
mov
adc
or
and
sub
ja
test
mov
xchg
aas
cmc
push
inc
into
cwtl
out
dec
cmpsl
nop
je
fidivl
ljmp
aad
inc
nop
sbb
mov
add
jb
cmp
xchg
inc
push
ja
mov
es
mov
iret
hlt
cmp
setns
retw
repz
mov
sbbl
aam
movsl
enter
sahf
push
mov
xor
add
jnp
push
test
rolb
mov
or
xor
das
mov
cwtl
jns
dec
insl
js
or
or
rorb
add
mov
xor
lock
cmp
cmp
addr16
sbb
mov
icebp
aas
out
pushf
inc
fisubrs
cld
lret
scas
push
mov
mov
aam
cmp
stos
ret
movsl
mov
repz
and
sub
icebp
cmpsb
adc
lods
scas
push
xor
add
cld
push
xor
push
nop
dec
cmp
push
adc
stc
and
fstpl
push
jo
push
enter
aam
rolb
push
jo
negb
sahf
xor
fnsave
lea
ficompl
ja
jecxz
mov
lahf
inc
loopne
and
stos
add
mov
hlt
push
loop
adc
push
adcb
sub
jne
or
mov
ds
xchg
into
adc
jp
xor
scas
xchg
mov
push
pop
imul
clc
repnz
ret
mov
xchg
sub
pop
pop
dec
push
testl
adc
scas
jae
rorb
push
decl
sub
sahf
mov
out
dec
sub
inc
jmp
inc
test
movsl
lods
push
xchg
inc
jl
insb
add
add
jge
inc
push
stc
sub
jb
jmp
jecxz
inc
sahf
sub
push
jne
push
leave
leave
xchg
daa
push
adc
mov
and
push
aad
pop
xchg
mov
push
mov
data16
std
pand
inc
subb
cld
leave
scas
cs
lahf
sbb
aaa
mov
imul
jg
mov
fidivrs
fbld
pusha
dec
enter
negl
fdivrl
adc
add
lock
cmp
mov
aam
add
adc
dec
ret
in
inc
mov
xchg
gs
cmp
lret
shrb
cwtl
jbe
dec
xchg
mov
dec
test
mov
push
mov
mov
sarb
inc
bound
mov
lret
cmp
pop
add
lret
fdivrl
and
gs
push
dec
push
aaa
call
ffreep
push
loop
mov
xor
nop
test
leave
sub
jp
ret
mov
stos
rolb
mov
jecxz
push
aaa
mov
or
insl
push
cmp
sbb
jo
xchg
adc
adc
fistps
xchg
lods
push
push
dec
flds
movl
imul
push
shl
fisubrs
hlt
cmc
xor
jno
xchg
xlat
mov
pop
fcompl
pushf
ret
mov
sub
and
xchg
cld
jne
or
es
sbb
repz
inc
and
or
pop
lea
mov
mov
dec
imul
rolb
mov
cmp
push
inc
mov
xchg
ljmp
mov
jg
movsb
add
in
divl
addr16
enter
pop
flds
pop
in
mov
lahf
ljmp
sbb
fcomps
fiadds
pop
cmp
cmp
or
xlat
call
ficompl
outsb
jmp
mov
in
xor
adc
arpl
pop
cmp
add
adc
add
lds
es
xchg
push
inc
pushf
add
out
xchg
cld
jno
int
pusha
xor
inc
aam
test
insb
xor
je
faddl
out
loopne
movsb
and
sbb
outsl
leave
mov
sub
push
dec
mov
push
xchg
jp
mov
sbb
mov
xchg
inc
and
int
dec
mov
sbb
or
daa
jmp
int
add
les
pushf
jmp
mov
cmp
js
jbe
out
lods
popf
mov
subb
inc
rorb
cmp
mov
pop
cmp
mov
lea
jmp
ljmp
call
sub
push
cmc
mov
jmp
inc
jne
gs
fcompl
outsl
push
scas
mov
mov
push
lods
pop
push
jae
aad
cmpsl
popa
xor
mov
scas
add
in
shll
hlt
cs
movsb
out
pop
jno
push
lods
ret
add
cmp
outsb
icebp
jmp
lds
cs
mov
pop
cltd
mov
xchg
push
mov
cltd
jbe
xchg
testl
and
movsl
sar
loop
cmp
mov
jno
cmpsl
clc
xor
mov
pop
dec
mov
es
jmp
pop
ficompl
or
or
dec
dec
lahf
test
std
dec
inc
icebp
xchg
cmp
pop
repnz
lods
sahf
shrb
js
or
outsl
inc
mov
pop
aad
cltd
sbb
mov
xchg
out
leave
or
fmull
addr16
enter
jl
jnp
call
test
aam
mov
popa
les
xchg
movsb
xchg
jl
in
mov
pop
push
stos
dec
sarb
or
sub
repnz
lcall
xor
mov
mov
jmp
sbb
inc
pop
dec
cmpsl
jns
adc
lret
ficoml
mov
bnd
adc
push
rclb
rorl
cmp
xor
int3
ret
andl
jns
loope
dec
xchg
xchg
mov
rclb
sbb
mov
lret
test
test
pop
xchg
xchg
xchg
pop
ja
sbb
enter
movb
push
call
ds
addr16
sbb
mov
and
adc
adc
jp
xchg
int
into
nop
dec
mov
in
pop
popf
out
xchg
loopne
jle
mov
xlat
jmp
mov
adc
push
out
jmp
lea
push
pop
enter
cs
jb
add
stos
xchg
cltd
fwait
and
jmp
mov
xchg
andl
bound
cmp
rcrb
loop
lods
add
dec
xchg
push
js
sbb
rclb
lret
xor
cltd
mov
in
test
mov
mov
loope
mov
fnstenv
dec
push
sbb
dec
adc
push
dec
loop
mov
pop
jle
movsb
mov
xor
xchg
ds
jns
mov
jnp
ja
aaa
push
pop
rorl
rorb
dec
or
jp
lock
rcrl
mov
push
test
xchg
js
mov
std
xchg
out
ljmp
daa
fptan
sbb
inc
push
adc
push
aam
pop
mov
xchg
cmpsl
sbb
jns
add
adc
das
repz
dec
add
pop
adc
stc
leave
sbb
daa
adc
ljmp
cwtl
adc
fdivp
pop
jl
jl
test
out
cmp
xor
dec
ret
add
cmp
jae
inc
jnp,pt
aas
shr
out
push
lock
mov
or
aam
ja
inc
adc
adc
cld
and
cmpsl
sub
fidivs
popf
xor
ret
cmpsl
add
adc
ja
xchg
scas
jno
and
jle
pop
ret
ret
das
and
pushf
jmp
xchg
add
sbb
push
cld
xchg
or
movsl
push
popf
cs
icebp
inc
xchg
jmp
out
not
les
mov
mov
jp
add
cmp
jl
jnp
clc
ljmp
inc
adc
cmpb
xor
fdivrp
loop
lods
mov
test
rcrl
sbb
push
sub
and
xchg
cmp
lods
mov
cmovl
adc
fwait
cld
in
bound
add
xchg
mov
dec
mov
lahf
add
pop
out
out
inc
or
jle
mov
ds
mov
xchg
ret
jp
pop
and
les
dec
fadds
enter
imul
shrb
and
pop
mov
movsb
into
fdiv
push
cwtl
sbb
xor
xchg
sub
lea
lret
dec
mov
cld
cmc
or
fisttpll
and
push
lea
scas
xchg
xchg
mov
js
incl
fsubrp
pop
es
mov
fdivrs
xlat
jae
fistl
cmp
xor
mov
out
int
mov
dec
or
daa
test
loop
push
notb
pusha
cltd
lds
rolb
pop
xchg
sti
bnd
loopne
xchg
sbb
adc
pop
push
ficoml
pop
out
jne,pt
push
leave
in
aaa
xor
mov
fdivl
in
scas
fisttpl
cli
adc
or
mov
cld
movsb
cmc
cwtl
jl
arpl
lret
inc
lock
or
insb
push
stc
fsubp
mov
and
add
and
add
mov
cs
loop
push
dec
xchg
mov
outsl
xchg
ret
mov
cmp
and
cwtl
pop
in
push
cmp
repnz
loope
aas
movntq
subl
mov
fdivl
nop
jge
icebp
movsb
jmp
adc
clc
xor
jle
lea
adc
pop
and
subb
jmp
mov
push
sbb
aas
jne
jb
xor
pop
xor
fiaddl
inc
lcall
push
iret
xchg
jb
push
mov
in
xchg
cmp
xchg
push
xchg
jecxz
xor
and
fiaddl
pop
mov
cmp
jl
ja
push
stc
dec
add
fisttpll
jmp
sbb
jns
and
push
pop
stc
in
jae
out
dec
mov
pop
lret
mov
fcom
mov
hlt
push
ljmp
int3
jecxz
and
call
ds
and
insl
cmpsb
push
and
ljmp
andb
push
dec
lods
rorl
out
mov
or
push
ljmp
ficomps
std
push
out
cltd
xor
jnp
jge
repz
mov
pushf
sub
sbb
popa
sub
in
clc
pop
jge
add
and
hlt
pop
dec
push
mov
sub
addr16
test
popf
andps
popf
cmp
mov
inc
outsb
aas
push
pop
xor
or
adc
xlat
and
sub
pop
inc
xchg
jno
sbb
pop
inc
dec
movsl
rorl
fisttps
imul
mov
paddw
jnp
mov
xchg
adc
inc
iret
movsl
outsl
xor
dec
fs
xchg
pop
call
xlat
pop
adc
dec
xchg
shll
cld
or
mov
push
inc
sbb
sbb
popa
rolb
hlt
insl
cmp
pop
test
pop
daa
sub
cmpsl
push
jecxz
adc
je
mov
mov
add
cs
adc
stos
inc
ss
sbb
in
fdivrs
call
fisubs
inc
fimuls
push
xacquire
popf
xchg
fld
jl
sbb
jle
dec
inc
inc
aad
inc
inc
lods
ljmp
cld
stos
loop
lret
or
adc
xlat
clc
sub
xchg
mov
xorps
data16
fisubrs
xor
dec
sub
shll
pop
jb
popf
cmp
jnp
xchg
mov
pop
cmp
scas
cli
adc
stos
mov
jae
sbb
ficomps
movsl
cmp
jg
aaa
dec
pop
incl
adc
push
pusha
xor
cli
es
es
decl
and
mov
in
outsl
ds
insb
ja
ja
ret
sub
push
jge
and
cld
js
scas
and
mov
jbe
aas
aas
sbb
push
clc
sarl
mov
ja
xchg
jb
call
mov
push
jge
lea
out
js
icebp
ret
sbb
sbbl
add
or
inc
fistpll
cmc
add
xchg
mov
fisttpl
mov
cmp
out
jns
inc
jmp
xor
sub
push
pop
add
adc
mov
les
loopne
add
es
cmp
sub
cmp
fidivrs
mov
dec
xchg
ret
xchg
adc
mov
or
ljmp
sbb
movsb
in
rolb
jg
bound
jns
les
nop
scas
dec
mov
and
add
adc
insl
loope
mov
inc
dec
mov
in
and
mov
aad
push
mull
in
add
in
stc
mov
push
sti
mov
push
pop
cmc
inc
fcom
xchg
mov
add
lahf
xchg
or
xchg
ret
add
jmp
test
test
dec
shr
fucom
jne
aaa
lods
outsl
mov
or
mov
push
aad
outsb
inc
mov
scas
mov
insb
jns
je
mov
fsubl
xor
push
jb
sbb
dec
xchg
adc
dec
in
sub
int3
sub
mov
mov
lahf
into
hlt
push
ficoms
lret
jge
push
xor
shlb
loopne
jge
je
add
and
push
jmp
ret
mov
loop
ja
jmp
aaa
test
fcmovu
out
add
inc
push
push
sarb
lahf
sub
jnp
or
iret
sbb
out
mov
imul
xchg
mov
dec
cmpsl
lock
sti
cmp
inc
in
sub
dec
leave
pop
dec
add
scas
ss
enter
ss
fs
cmp
stc
repnz
mov
adc
iret
cmp
cmpsl
push
loop
xor
xor
xor
sub
nop
mul
cmp
test
ret
lea
jbe
fimuls
leave
popa
jg
sbb
dec
divl
mov
mov
rorl
imul
shlb
movsb
xor
cmp
lret
jl
pop
orb
loop
xorb
xlat
xchg
data16
pop
mov
aaa
out
aad
lock
mov
sbb
and
mov
cmp
ja
arpl
rclb
sub
jo
fdivrl
sub
aam
fcoms
jno
sub
sub
adc
mov
pop
popf
and
mov
push
cvtpi2ps
xor
daa
cmp
enter
mov
test
sbb
add
lret
into
cs
int3
cmp
xor
mov
jg
fxtract
ja
xchg
stc
jbe
sub
mov
adcb
fldenv
repnz
inc
orl
addb
enter
push
sub
and
push
mov
in
mov
and
pop
shlb
mov
xchg
jge
pushf
xor
push
fxch
idivl
mov
adc
mov
dec
pop
pusha
jmp
and
call
hlt
test
sahf
ljmp
test
and
int3
je
bound
adc
pop
xchg
dec
xchg
xchg
arpl
insb
dec
pop
or
pop
push
xchg
xor
sbb
xchg
test
mov
insl
imul
mov
inc
dec
out
xchg
pop
and
or
loopne
pop
mov
ret
aam
xor
lret
in
sbb
ret
add
outsb
in
or
mov
jmp
shll
inc
lahf
mov
mov
and
int3
lods
inc
mul
mov
repz
dec
jno
jne
fnstcw
fstl
sbb
sub
shll
add
push
push
cld
insb
lret
shll
xchg
push
adcb
ret
lods
jne
mov
decb
movsb
stos
scas
ljmp
mov
push
fimuls
test
sub
adc
aam
decl
mov
fildll
fsubs
stos
add
scas
inc
mov
lods
in
cmp
sub
fwait
mov
or
std
adc
ret
rolb
shlb
cltd
dec
jae
sahf
popa
xchg
gs
sbb
stos
insb
lret
xor
mov
aam
jle
or
cmp
jb
xor
sub
dec
and
xchg
cs
inc
mov
shlb
cmp
inc
mov
push
sbb
mov
xor
rcrb
arpl
adc
push
arpl
int
pop
iret
jl
jb
rol
add
dec
jo
sub
mov
mov
jae
inc
in
jp
sub
xchg
or
outsb
jne
dec
jae
test
mov
iret
js
lds
clc
cmpsb
pop
movsb
lock
cmp
dec
sub
movups
fmuls
ret
or
dec
mov
sub
inc
loope
loop
dec
shrl
mov
cmp
dec
xor
add
orl
cmp
mov
or
add
push
lea
les
jecxz
jns
push
dec
mov
mov
push
xchg
stos
das
dec
mov
push
pop
rolb
sbb
inc
xchg
imul
call
in
xchg
divl
inc
adc
adc
jnp
add
mov
stc
mov
fcmove
into
mov
and
rcll
lds
add
loop
push
mov
repz
xor
mov
rolb
mov
les
rcll
xchg
addl
enter
jge
imull
mov
aam
dec
scas
xorps
loop
stc
mov
fidivs
sbb
cwtl
pop
int3
lods
subb
fidivl
in
int3
ds
cltd
xorl
mov
outsl
push
jo
mov
inc
sbb
shrb
mov
sub
push
roll
adc
jbe
mov
pop
pop
stos
adcl
push
rcr
sbb
scas
pop
adc
mov
scas
xor
movsl
xchg
mov
rol
push
xor
or
cmp
icebp
dec
mov
cmpl
inc
int
into
xchg
lea
adcb
or
mov
and
mov
in
and
jl
int
test
pushl
ljmp
popf
adc
push
mov
cmp
repnz
cmp
or
mov
das
dec
push
lahf
and
mov
mov
pop
jle
push
hlt
lods
idiv
aas
arpl
lfs
fistpll
ficompl
push
insl
push
add
adc
out
das
int
fsubrl
sub
push
inc
lods
ja
test
inc
cmp
mov
mov
mov
movsl
or
add
lea
mov
and
mov
cmp
pop
cmc
lds
outsb
or
sub
jb
imul
shr
sub
cmpsb
adc
mov
mov
jo
test
es
sahf
aad
dec
icebp
jns
jl
sub
cmp
push
sub
aaa
push
xor
cmp
std
ljmp
ja
es
pop
push
idivb
ss
jns
pop
push
adc
sbb
shlb
mov
sub
fidivs
subb
repz
cmp
movsl
in
lock
aaa
cmc
cmp
or
js
cli
dec
rcrb
push
loopne
add
lods
adc
and
xchg
mov
call
mov
in
add
imul
es
int3
insl
movsb
or
dec
arpl
and
add
jl
imul
or
adc
and
shll
pop
cmp
stc
pop
jl
mov
decl
cmp
xlat
std
in
sbb
mov
push
cmp
push
push
sti
std
in
loope
mov
and
add
fcompl
aaa
fisubrl
imul
pop
inc
inc
repz
nop
lahf
popa
jp
call
or
sub
jne
inc
mov
mov
insl
jle
call
sbb
cmc
in
and
pop
outsl
xchg
mov
fcoms
adc
add
add
jmp
and
aaa
xchg
int3
ss
nop
and
test
cmp
push
adc
fs
adc
pop
sub
popf
adc
jb
lock
mov
pop
inc
jecxz
leave
out
incb
push
in
mov
pop
cmp
cmp
shlb
lea
mov
or
loope
mov
push
inc
je
outsl
sbb
iret
pop
hlt
adc
sahf
xchg
ja
add
sbb
aas
outsl
dec
in
test
test
sub
push
movsl
mov
jg
pushf
jge
lea
dec
cmpsl
int
xchg
lret
ret
cmpsb
cmpsl
push
jp
scas
fs
xchg
rol
ret
popa
data16
or
mov
lret
and
popa
push
jecxz
cld
movb
dec
mov
cmp
dec
ret
dec
jle
sahf
push
stos
sbb
out
pop
lods
fmuls
xlat
pop
add
and
mov
sub
lea
mov
lret
cs
jbe
pop
call
mov
mov
clc
rorb
xchg
push
into
mov
pop
add
lahf
or
sub
sub
push
add
xchg
push
jp
sbbl
scas
aad
notb
adc
add
adc
and
test
rcll
rclb
enter
jne
cmp
fildll
fucomi
rorl
out
push
pop
mov
and
aam
dec
inc
push
stos
ret
daa
add
push
inc
mov
pop
daa
fimull
mov
into
dec
or
stos
jnp
jmp
mov
mov
fiaddl
xor
mov
mov
pop
orl
mov
shl
adc
sbb
push
sub
cmp
xchg
add
fdivr
xchg
in
loop
xchg
test
cs
xchg
mov
aaa
inc
in
dec
jbe
inc
lea
cmp
xchg
mov
fbstp
jns
lods
lahf
jg
pop
iret
cmpsb
or
push
mov
push
rorb
aaa
imul
push
repnz
jge
xchg
fiaddl
sti
xor
andb
rorb
adc
jecxz,pt
mov
xchg
mov
push
scas
or
lret
xchg
int3
fst
shll
rclb
cmp
xchg
add
pop
jl
add
dec
xor
sub
jo
stos
inc
call
xor
inc
inc
out
arpl
js
sbb
icebp
fnstenv
adc
loop
or
lret
imul
aam
out
movsl
push
xchg
mov
inc
inc
in
push
clc
cmpsb
lahf
in
ja
jno
push
sub
ja
js
sub
pop
jbe
jns
and
mov
inc
std
ss
ljmp
inc
sbb
sub
or
and
jle
les
into
push
mov
enter
add
lret
and
xlat
divb
popf
roll
das
mov
jl
xchg
ja
arpl
pop
mov
imul
mov
pop
and
icebp
xchg
jne
pop
pusha
add
mov
cmp
clc
jmp
jl
aam
dec
ret
jne
push
popa
adc
cmc
es
loopne
mov
aas
cltd
pop
mov
push
xor
sub
ss
sti
andb
test
sbb
insb
add
pop
jmp
lods
push
mov
cli
ja
xchg
mov
sub
adc
ljmp
mov
jl
add
loop
lods
add
or
lock
fistps
jl
lods
pop
xor
and
add
das
push
stos
pop
cmp
sbb
mov
fwait
sbb
sbb
push
sub
jl
mov
xor
divb
fwait
add
mov
mov
or
xor
call
adc
pop
ds
mov
add
cli
mov
pop
arpl
or
repz
loop
ja
fisttpl
push
rcll
mov
push
pop
add
inc
ljmp
xor
lods
jge
push
mov
hlt
inc
hlt
adc
cmp
or
jno
rol
push
and
sbb
xchg
mov
xor
sbb
in
mov
push
fdiv
jb
sahf
jp
dec
dec
adc
cmc
dec
push
inc
mov
jg
in
test
dec
in
outsb
xchg
and
lock
popa
sub
mov
jle
push
xor
pop
icebp
andl
or
iret
and
jmp
ret
add
dec
jge
xchg
sbb
push
sbb
jle
pushf
mov
adc
imul
adc
pop
fistps
ss
jno
jl
fmulp
xchg
rorb
std
and
aaa
out
xchg
fcom
out
add
or
sub
jmp
cwtl
pushw
stos
int
mov
mov
inc
adc
inc
xchg
jl
sub
mov
pop
popf
sub
fs
rolb
sbb
in
cmpsb
inc
sub
jmp
push
inc
pop
into
xor
inc
shrd
adc
add
inc
cmp
jo
test
lcall
push
sbbl
mov
mov
das
and
popf
jg
inc
imul
fsubl
sub
mov
inc
pushf
aam
inc
mov
out
or
jg
and
inc
mov
ret
jnp
pop
xchg
jle
outsb
sub
jmp
inc
xchg
addb
mov
aam
sub
aaa
cmpb
pop
imull
pop
xor
test
mov
int
aad
lahf
add
jmp
xchg
add
or
sub
jno
daa
stc
out
jge
sub
dec
sti
pop
nop
sbb
test
dec
inc
adc
or
scas
mov
jmp
mov
cmpsl
scas
fs
pusha
arpl
xchg
jg
subb
cmp
test
mov
js
push
xor
nop
test
clc
jb
bound
je
pop
das
xor
inc
data16
cwtl
jmp
aas
xor
aam
cltd
out
sbb
xor
out
jb
jl
movsl
jecxz
mov
inc
mov
imulb
popa
add
enter
cmp
mov
or
cmc
insl
mov
int
rorl
or
leave
mov
mov
or
lods
lcall
sbb
aad
inc
mul
sbb
in
inc
orb
pop
and
fdivl
inc
jno
cmpsl
cltd
inc
pushf
ja
mov
mov
mov
inc
jp
cltd
jl
shrw
std
xchg
repnz
mov
mov
fldt
cltd
out
inc
mov
inc
repnz
imul
mov
popf
loop
dec
or
adc
or
mov
pop
xor
inc
xchg
jp
fcoms
mov
adc
sbb
jbe
fsubrl
cmpsb
push
cs
pop
gs
sub
test
push
mov
pushf
inc
push
test
inc
mov
sub
or
data16
out
jne
call
loope
push
ljmp
mov
ljmp
or
pushf
adc
inc
cmp
scas
les
lret
adc
ss
add
rolb
std
loop
mov
push
cltd
mov
or
roll
mov
dec
ljmp
mov
adc
ds
clc
popa
cmp
pop
cmpb
push
pop
cmc
sbb
jecxz
cmp
in
loope
adc
xchg
call
mov
cltd
jecxz
or
or
insb
ja
cld
clc
pop
adc
ss
sub
aaa
lock
out
mov
add
add
adc
and
in
ds
dec
or
mov
scas
mov
sbb
pop
add
fcompl
jbe
or
sub
cmp
pushf
xchg
repz
xlat
jg
and
xor
mov
pop
popa
ret
or
xor
pop
test
mov
leave
lret
mov
jae
or
inc
mov
xor
cltd
sbb
rorb
or
xchg
mov
push
arpl
loope
jbe
lahf
inc
xchg
cwtl
mov
push
inc
mov
jbe
cmp
fidivrl
pop
aaa
mov
lods
sbbb
clc
mov
xor
push
inc
out
xchg
insb
add
and
add
push
loope
sbb
cmp
pop
mov
jmp
jecxz
jne
sbb
xchg
pop
sbb
jnp
or
or
pop
and
mov
movsl
jbe
pushf
stc
mov
jecxz
push
xor
idiv
pop
mov
movsl
out
dec
and
imul
sar
es
xchg
push
mov
aas
pop
dec
dec
add
mov
or
nopl
in
pop
dec
enter
mov
xor
in
les
pop
pop
jecxz
insl
push
xchg
push
sbb
jns
push
pop
xchg
decl
decl
jle
insb
push
mov
jle
mov
fstpl
jo
mov
movsb
or
mov
mov
xchg
cmp
lahf
xchg
or
sub
sub
lret
test
mov
push
mov
imul
jnp
andl
mov
divl
jbe
cmp
imul
jno
mov
icebp
jb
ret
nop
inc
jmp
rcrb
aam
andl
in
insb
ds
les
inc
push
jl
cld
jne
mov
enter
lea
inc
test
adc
fisubs
jle
jp
das
rorb
aaa
nop
lods
mov
hlt
mov
or
and
decb
xor
sub
bound
dec
xchg
test
adc
mov
push
jecxz
and
loop
or
fsubr
lahf
jno
cmc
lods
mov
addb
vdivsd
je
leave
outsb
pop
std
fildll
stc
jle
stos
mov
out
dec
xchg
test
pop
pop
and
decb
cwtl
or
and
push
addr16
dec
jle
in
jnp
adc
outsb
xchg
ss
cwtl
es
jae
mov
push
mov
mov
jmp
imul
loopne
mov
cmp
xchg
rcrl
shlb
lret
fcmovnbe
mov
dec
cmp
mov
sub
aaa
pop
cmp
sub
aaa
jle
and
adc
arpl
and
out
sbb
sbb
xor
push
pushf
and
adc
inc
lock
icebp
gs
or
mov
frstor
dec
push
pushl
push
sar
dec
adc
mov
fsub
jnp
popa
in
lcall
div
sub
mov
cld
cmp
mov
sbb
pop
and
lcall
addl
addr16
ss
mov
jns
int3
dec
and
popa
test
cmpps
sbb
sbb
les
test
ss
mov
push
add
mov
mov
jae
mov
lock
sbb
daa
cmp
repz
sbb
fldt
cmp
lahf
fsubp
or
cmpsl
push
xor
ss
xlat
inc
loopne
mov
test
sahf
jg
inc
dec
out
push
icebp
inc
xor
or
addl
sti
push
in
mov
jns
dec
insb
inc
pop
push
rep
xor
xor
aam
add
stos
sub
or
test
mov
lods
push
mov
mov
addr16
iret
in
les
cmp
pop
mov
xchg
sti
fidivrs
mov
aam
inc
pop
add
inc
pop
jnp
vmwrite
jns
aam
mov
sbb
popf
xchg
adcb
push
fbstp
andb
and
std
arpl
pushf
mov
push
pop
add
xchg
adc
jns
inc
jp
ds
insl
sbb
lock
jl
popf
pop
add
and
jbe
adc
sbb
mov
mov
mov
scas
lods
les
dec
sub
sbb
jmp
pop
dec
mov
adc
pushf
rcrb
inc
ficoms
sbb
lahf
push
jmp
mov
test
jmp
aaa
xchg
int
fnstenv
fisttpll
test
adc
rclb
push
sbb
mov
test
fnstenv
daa
mov
pusha
cmp
je
sti
and
jp
das
sti
mov
mov
out
mov
push
push
aad
and
repz
es
pop
mov
inc
push
and
mov
dec
dec
fucom
cs
lcall
enter
mov
ljmp
mov
sarb
and
dec
mov
push
into
jne
loopne
dec
adc
jbe
sti
push
rcl
mov
daa
xchg
jmp
cs
pop
mov
into
push
ficompl
push
ret
jb
negl
stos
dec
pop
lds
lods
jge
ss
adc
jge
fs
scas
xlat
xchg
xor
dec
cmp
jns
stos
ljmp
jge
add
fnstsw
jmp
fimuls
inc
mov
daa
cmp
clc
hlt
call
sbb
add
xor
push
or
in
ljmp
and
js
jb
mov
lret
and
bound
bswap
pop
mov
add
or
cmpsl
adc
cmp
or
or
and
sub
dec
fsubrl
stos
inc
push
cld
mov
cmp
dec
sub
aas
sbbb
xchg
lds
pusha
adc
add
fildll
je
adc
fs
mov
dec
subl
dec
negb
push
dec
jbe
js
xchg
je
jns
mov
cld
movsb
dec
clc
add
xchg
lcall
into
aaa
lahf
stos
lret
lcall
call
and
lods
pushf
add
out
inc
mov
popa
dec
out
pop
push
mov
out
push
imul
lods
mov
sbb
sbb
aad
mov
fdivs
in
popa
int
arpl
xor
xor
ret
add
mov
mov
inc
mov
loope
icebp
dec
sub
mov
jmp
popa
aad
or
jl
and
fs
push
std
push
lcall
lock
push
mov
push
sar
cs
dec
shll
push
mov
cmp
dec
scas
or
push
loop
adc
cli
inc
aaa
mov
mov
sub
cld
and
ljmp
arpl
or
adc
fldcw
pop
mov
mulb
push
jmp
jbe
push
test
sub
arpl
sbb
push
or
jl
dec
mov
int3
push
hlt
cmc
pop
test
push
adc
inc
mov
daa
cltd
popa
mov
mov
xchg
xchg
adc
mov
sub
sbb
and
mov
bound
out
fs
push
fistl
sbb
mov
icebp
shll
stc
pop
sbb
ja
cmp
lods
repz
enter
xor
hlt
popa
js
shll
fisubrs
lcall
jle
push
mov
les
cmp
sub
push
inc
mov
fiadds
cmpb
sub
addr16
mov
or
pop
sub
negl
xchg
popf
inc
fstpt
adc
mov
sbb
pusha
pop
repnz
jno
xchg
xchg
push
jnp
out
out
pop
and
popf
pushf
dec
push
rolb
sbb
fdiv
outsl
call
pop
add
sub
in
mov
xor
or
addr16
mov
out
loop
xchg
sub
fcomip
xlat
aas
imul
int3
pushf
out
outsl
push
mov
cmp
jne
jge
jl
sub
xchg
outsl
aad
pop
and
push
mov
sub
sti
pop
dec
push
stos
ret
xchg
sub
ror
scas
cld
xchg
fimuls
add
in
sbb
repz
xlat
jno
nop
cmpl
push
mov
xchg
inc
lock
push
cmpsl
loopne
mov
pop
frstor
cmp
jl
push
xor
dec
dec
inc
imul
push
cmp
sub
js
pop
jg
sbb
mov
scas
or
xlat
clc
out
dec
and
les
adc
ret
mov
jg
iret
scas
xchg
jo
test
fiaddl
in
sahf
push
es
ds
repnz
aas
pusha
or
out
loop
lret
mov
js
mov
fidivl
addb
icebp
mov
or
out
es
sbb
or
ds
addr16
pop
pop
shlb
mov
stos
lret
mov
xlat
stc
pop
lock
mov
pusha
xchg
int3
xchg
repz
outsl
xchg
pop
fwait
aas
loop
xchg
cmp
or
adcb
pop
push
add
mov
mov
mov
lods
inc
mov
xor
shll
mov
sar
jae
addb
test
test
imul
jb
xor
xor
jg
jg
mov
adc
mov
pop
adcb
std
outsl
xchg
ret
mov
pop
in
outsb
mov
dec
mov
lret
mov
cwtl
sti
or
xchg
lret
ud1
movsl
and
loop
icebp
xor
push
das
hlt
cmpsb
xor
xchg
test
pop
fstl
in
iret
das
xchg
repz
push
adc
iret
sbb
pushf
cmp
fucomi
ja
pop
int
xchg
or
jmp
pushf
cwtl
inc
xor
mov
movsb
aas
das
dec
outsl
sub
loopne
dec
or
in
jnp
sbb
test
fldl
jge
xlat
or
adc
out
jo
or
dec
repz
ret
cmp
mov
sub
shlb
cmc
pusha
aaa
pop
xor
pushf
test
call
push
add
mov
sub
hlt
ljmp
inc
sbbb
lods
sbbl
gs
and
aad
xor
pop
rcrl
cli
pusha
push
inc
loope
arpl
or
sub
in
push
icebp
mov
xor
dec
jge
test
and
imull
and
out
in
cmpsb
sbb
out
fnsave
loop
sahf
popf
mov
lcall
and
mov
std
mov
jecxz
stc
push
hlt
leave
js
cwtl
dec
mov
fs
sub
dec
fldcw
in
push
lods
push
out
or
push
inc
xlat
and
lcall
cmp
jne
bswap
cwtl
in
repnz
push
and
add
mov
and
mov
cmc
iret
popa
inc
push
es
ret
adc
push
add
jb
dec
push
movsl
call
push
xor
cmp
cmp
and
inc
out
or
int
dec
jle
ficoml
sti
cs
aam
mov
jno
pop
sbb
sbb
or
shlb
push
call
xchg
pop
loope
mov
push
jecxz
stc
and
push
sub
std
fsubl
mov
lods
int
inc
inc
push
jae
mov
outsb
clc
in
dec
mov
faddp
out
fmull
es
dec
or
inc
in
sbb
aaa
pop
push
add
mov
inc
insl
aaa
adc
test
xchg
fisubrs
dec
jbe
push
stos
or
in
pop
xchg
push
jle
cvttps2pi
dec
lret
jbe
ret
and
fcoms
and
test
rcrl
mov
pop
popf
aaa
nop
inc
outsb
mov
leave
xchg
jg
std
out
sbb
cltd
les
aas
addr16
popf
leave
pop
mov
push
xchg
dec
aaa
cmp
les
mov
inc
mov
add
pop
jnp
pushf
adc
mov
adc
inc
ja
negb
test
pop
dec
push
movsl
dec
das
int3
cmp
mov
cmpsl
test
pop
leave
add
and
inc
inc
inc
cmp
filds
cli
mov
notl
js
pop
add
faddl
adc
inc
ds
je
jns
lods
loope
jmp
iret
mov
pop
lock
push
mov
add
shlb
loope
stos
jae
arpl
cmc
inc
mov
and
aad
daa
jnp
cli
in
call
fcompl
lock
pop
aas
mov
adc
hlt
ret
stc
sub
in
fucomp
mov
mov
jmp
xchg
jmp
mov
jp
addr16
jns
add
mov
jl
jp
push
insl
inc
mull
pop
xchg
mov
cmpsb
cmpsb
pop
pop
pop
in
enter
or
xchg
lea
push
popf
ss
ret
popa
sahf
push
push
cmp
dec
aas
sti
sbb
mov
sub
stos
imul
imul
adc
mov
or
add
cwtl
inc
or
cmp
dec
cwtl
jmp
in
sbb
clc
call
jne
or
arpl
jbe
gs
jo
cmp
nop
sahf
in
fsubrl
and
push
daa
add
pop
sub
add
inc
jp
adc
pop
shlb
cs
mov
and
dec
push
ret
and
push
add
push
push
inc
es
leave
into
mov
xor
jns
mov
mov
and
or
xchg
mov
loop
mov
xorl
insb
mov
jl
mov
lds
jb
adc
mov
sbbl
hlt
addl
sbb
and
lods
call
sti
push
in
fisubs
in
iret
inc
inc
pusha
xchg
add
test
mov
push
push
xchg
add
test
std
xor
ret
xchg
adc
inc
cmp
movsl
dec
sbbl
mov
shrl
fiaddl
jo
aaa
movsl
frstor
orps
dec
js
movsb
rclb
xchg
lret
mov
jmp
push
mov
add
mov
icebp
sub
adc
out
mov
sub
add
aaa
jg
mov
add
out
jp
in
mov
sbb
and
imul
cs
in
cmpsl
je
bound
loope
movl
push
jbe
lds
push
fcoms
out
insl
jns
ja
or
stos
cmpsl
ret
test
lcall
inc
mov
lods
pop
mov
cmp
jnp
loop
mov
gs
mov
cld
out
push
stos
xchg
mov
test
lods
push
in
sub
push
pop
mov
rorb
lods
popa
popl
popa
sarl
cld
sub
or
jb
scas
dec
xor
mov
ja
idivb
cltd
movsb
dec
xor
xchg
push
xchg
scas
jle
lock
dec
notl
add
push
call
jg
add
int
gs
cmpsb
cmpsb
and
mov
hlt
cmp
xor
imul
sti
lret
sahf
mov
inc
xchg
bound
movsl
out
pusha
jo
mov
lea
mov
and
pop
int
inc
pop
stos
jl
sub
or
in
push
jno
sub
call
mov
ret
ficoms
mov
and
and
or
imul
mov
xchg
cmp
lea
enter
jno
stc
rorb
insb
mov
repz
daa
aam
jg
xchg
insl
sbb
into
mov
out
dec
and
pop
iret
repnz
inc
push
scas
in
movsb
push
aad
fidivs
les
sbb
mov
jbe
push
mov
sub
mov
and
pop
sbb
iret
lcall
cmpsl
mov
sub
int
test
filds
mov
push
jno
xchg
rcl
lcall
enter
pop
jne
inc
lcall
lahf
movsl
xor
or
adc
popa
fsubr
add
ror
pop
mov
mov
sbb
sbb
imulb
ret
push
mov
push
int
rol
data16
stos
mov
adc
js
jb
push
push
adc
imulb
les
in
dec
sbb
dec
sbb
fistps
and
mov
or
call
xchg
mov
cmp
jl
pushf
call
jmp
lret
add
dec
mov
cmp
repz
bound
dec
jno
jp
xchg
negb
or
call
dec
mov
data16
sbb
push
jmp
xchg
xchg
mov
xchg
das
mov
mov
mov
mov
icebp
mov
stc
insb
push
mov
push
or
scas
dec
clc
cmp
or
movsb
lea
adc
repz
sbb
into
add
cmp
jmp
pop
into
scas
mov
movl
or
pop
xchg
pop
and
and
push
sub
dec
sub
jecxz
dec
je
adc
shll
cmpsl
stos
jne
std
sub
mov
rcrl
ficomps
inc
popa
cltd
cmc
in
or
fildl
daa
fwait
outsl
sub
jae
mov
ljmp
dec
sub
mov
insb
cli
sub
mov
push
sbb
insb
cmpsl
ja
xchg
adc
rcll
cmpsb
inc
mov
mov
imull
xchg
push
imul
out
inc
cmp
add
fimull
outsl
loope
aam
xchg
ret
ds
pop
or
dec
popf
rorl
push
icebp
cmp
rclb
pusha
adcb
imul
nop
repz
and
clc
into
pop
inc
xor
jnp
mov
out
test
dec
popf
add
lods
stos
icebp
sub
push
cmp
xchg
xchg
sbb
outsl
sub
bound
or
push
out
pop
andl
out
in
lret
and
jo
loope
cmp
in
imul
dec
sbb
fldt
adc
js
mov
or
jno
and
or
call
mov
int
push
dec
stc
sub
popa
and
inc
es
stos
cmp
inc
mov
je
xor
push
imul
inc
movsb
sbb
cld
pop
mov
loop
int
hlt
pop
mov
lahf
sahf
das
add
mov
sarl
cld
les
sub
out
lcall
add
sub
jp
mov
pop
leave
push
into
nop
shll
mov
cmp
and
fwait
and
mov
sbb
xchg
testb
inc
sbb
into
shlb
mov
orb
and
lret
mul
mov
fidivl
loope
mov
iret
test
sarl
ret
and
sti
in
pop
push
adc
push
mov
push
jbe
xchg
push
pop
cwtl
insl
xor
je
pop
pop
cs
mov
shlb
mov
jne
arpl
gs
lret
cmpb
pop
les
mov
dec
inc
fnstsw
lock
jp
cwtl
inc
mov
or
out
ds
cli
lods
cld
mov
test
push
and
pop
dec
mov
xor
mov
fs
xor
inc
jo
dec
add
gs
pop
decb
adc
xor
pop
inc
movsb
cmp
ljmp
clc
sbb
pushl
pop
sbb
xchg
ret
sarl
pop
mov
std
dec
jo
aaa
jecxz
jg
bnd
add
jb
faddl
cmp
xchg
dec
mov
xor
xchg
cltd
cmp
inc
cltd
add
insb
or
jecxz
add
call
mov
daa
sbb
xchg
imul
fwait
or
mov
sub
test
dec
in
cli
scas
ret
fcompl
add
xchg
or
sbb
dec
cmp
inc
icebp
inc
out
fldt
push
std
ss
lods
imul
mov
xchg
aad
out
nop
jnp
xor
fwait
mov
out
outsl
out
out
cli
xchg
jmp
lds
xchg
push
push
mov
or
outsb
wrmsr
jo
mov
loope
sub
dec
push
mov
cld
sub
push
push
ret
sbb
sbb
xchg
out
mov
and
sub
fstps
out
lds
cmp
xchg
cmp
dec
imul
cmp
repz
pushf
subl
movl
sbb
add
fdivl
cli
inc
enter
push
push
stos
push
jo
fld
dec
lahf
popf
imul
jbe
pop
jns
inc
push
imul
pusha
xor
pop
repnz
pop
shr
data16
mov
aad
mov
insl
mov
jae
or
dec
mov
fnstsw
fwait
andl
mov
insl
pop
pop
ja
adc
in
inc
dec
loopne
mov
sub
sbb
mov
sbb
jns
or
push
inc
int
out
mov
movsl
inc
pop
scas
mov
xchg
cld
fstps
lret
sub
inc
jg
ss
cmp
inc
lea
push
cmpsl
es
add
out
loop
push
mov
mov
inc
inc
lret
pushf
lds
jecxz
cli
sbb
and
dec
cmp
inc
data16
in
int3
ret
fwait
ss
cmp
mov
insb
mul
repnz
mov
mov
addb
int3
dec
mov
xchg
lret
mov
lea
es
push
mov
jl
jno
test
lds
in
insl
xchg
lret
test
adc
movsb
mov
mov
cs
sub
push
ljmp
mov
das
push
stc
cld
js
sub
ret
repz
lods
jne
js
xlat
jb
sbb
dec
xchg
movsb
jbe
cmp
xorl
in
cmp
shlb
jae
stc
loop
test
xor
sub
movsb
mov
push
push
fs
and
xchg
dec
in
dec
push
dec
lret
fsubrs
push
add
aad
cmp
pop
sub
sbb
pop
xchg
dec
push
add
push
mov
pop
roll
pushf
rclb
adc
push
push
add
add
mov
cmp
jae
pop
adc
pop
cmpsl
int3
jns
bound
cld
aas
ja
shll
lods
insl
sbb
cmpsl
push
or
out
int3
adc
out
popf
popf
pop
ds
jecxz
incl
inc
incb
setg
mov
shlb
sar
pop
inc
cmc
sbb
cld
add
dec
imul
insl
lea
scas
sbb
sbb
cmp
test
jns
inc
cs
sub
cmp
cmp
das
xor
rol
mov
cmp
mov
xchg
or
sub
and
fs
test
das
ljmp
mov
lret
fisubrl
lcall
mov
aam
sarb
xor
cmp
ret
lahf
outsb
and
inc
loope
andl
mov
into
push
test
fisubrs
adc
das
mov
xchg
dec
xchg
xor
repnz
add
push
mov
and
shll
test
mov
pop
mov
es
aas
xor
orb
inc
popf
jbe
pop
in
int3
sbb
fistl
into
mov
hlt
fsubrp
test
addr16
push
xchg
xchg
xchg
push
and
pop
or
inc
or
sbb
xorl
shrb
test
inc
fsubrl
xor
and
hlt
gs
mov
out
call
cmc
dec
mov
jp
xor
roll
dec
mov
out
mov
stos
sbb
es
int3
pop
out
jno
pop
lods
adc
dec
test
or
adc
cld
mov
and
xchg
mov
dec
inc
push
lret
jmp
rcrl
xchg
int
jbe
insl
adc
cmp
pushf
fs
jp
dec
jg
ret
mov
repz
mov
mov
test
iret
ret
repnz
sub
cmp
xor
and
out
into
xor
cs
rolb
in
psrlw
shll
sub
pop
jecxz
dec
fwait
xor
add
xchg
mov
push
jo
das
pop
sbb
adc
xchg
out
in
inc
xor
inc
icebp
pop
leave
dec
adc
or
imull
jle
inc
int3
jno
xchg
mov
dec
mov
les
imul
xor
cmp
leave
adc
push
int3
test
dec
shll
dec
adc
dec
pop
bnd
leave
push
insb
and
jb
pop
jb
push
stos
fstps
and
push
dec
repnz
icebp
jns
aam
fstl
lds
sub
dec
cltd
mov
movsl
iret
mov
mov
xchg
xchg
mov
in
mov
out
mov
lcall
xchg
mov
cli
das
mov
sbb
inc
xchg
pop
inc
insl
imul
ljmp
jbe
adc
jmp
cltd
pop
adc
lret
mov
mov
mov
aaa
ret
iret
mov
mov
lahf
xor
or
fs
daa
xchg
or
push
sub
jl
in
pop
outsb
xchg
in
iret
mov
scas
mov
orl
jmp
dec
or
stos
stc
mov
lret
jns
lret
push
test
imulb
fdivrs
adc
stos
fadds
push
push
pop
arpl
fldl
cmp
subb
or
clc
mov
xchg
outsb
cs
push
xchg
mov
dec
xchg
inc
fldl
dec
and
js
cli
lods
rol
and
pop
and
and
sbb
in
ds
jno
outsb
mov
popf
or
cmp
jo
pop
lods
daa
jnp
ljmp
and
sub
xor
sarl
addr16
mov
ds
test
test
xor
push
pop
cli
fwait
inc
cmpsb
js
fs
test
add
aad
mov
pop
xor
push
andb
scas
outsl
dec
mov
cmpsl
pusha
mov
or
shr
push
sarb
pusha
lock
jle
hlt
cltd
outsl
jno
popa
xor
push
mov
inc
fldcw
cli
pop
pop
push
js
mov
adc
movsl
mov
popa
sub
push
and
jns
sti
outsb
adc
add
jg
lods
subl
push
mov
sti
add
addr16
iret
gs
popa
out
jne
mov
daa
mov
arpl
dec
orl
sbb
pop
aaa
jecxz
stos
in
cli
inc
sbb
aaa
mov
sahf
push
push
sub
inc
fistpl
push
sbb
shl
clc
imul
loope
mov
fisttpl
xchg
push
mov
sti
jmp
pop
pusha
ret
fldcw
cmpsb
xchg
add
arpl
fwait
xorl
mov
jmp
adcl
pop
dec
leave
leave
pop
dec
mov
mov
data16
pushw
mov
push
cs
jae
imul
addr16
or
mov
dec
jnp
int
xor
in
adc
xchg
stos
in
xchg
push
fidivs
out
dec
movsl
sub
sub
inc
xchg
jnp
sbb
push
ud2
sbb
sti
imul
and
cmp
ret
jecxz
popa
jne
xchg
xchg
push
jge
jns
push
stos
inc
xchg
cmpsb
cmp
lahf
push
cmpsb
push
cmp
cmpsl
repnz
cmp
jo
sbb
add
pop
sub
leave
cmpl
mov
popf
insl
sbb
fs
sub
lods
xchg
push
mov
mov
lods
inc
paddd
inc
pop
xchg
cmc
dec
jbe
loope
sub
pushf
ljmp
shrb
lret
xor
inc
mov
dec
jg
push
loopne
cmp
rclb
jo
cwtl
inc
shll
pop
jmp
dec
clc
xchg
adc
sar
mov
scas
shlb
inc
push
insb
xor
jg
icebp
imul
mov
outsl
fistpl
add
add
hlt
int
pop
sub
sub
inc
xor
ljmp
mov
xor
mov
iret
mov
mov
sarb
mov
out
mov
and
mov
cmp
xchg
and
outsl
xchg
cmc
adc
je
sahf
sbb
xor
sub
mov
test
and
in
jb
xor
addr16
mov
cmp
pop
notb
cmpl
add
movsb
cmpsl
xor
or
xor
fs
aam
jnp
adc
and
lret
inc
outsb
lods
push
xor
add
xchg
in
dec
push
ja
test
push
cmpsl
out
loop
and
jecxz
mov
aas
rcrl
or
and
lods
mov
pop
cmc
mov
imul
mov
pop
pop
mov
movaps
in
shrl
mulb
cmpsl
stos
pop
sbb
stc
sbb
hlt
popf
pop
and
and
or
dec
or
ret
adc
inc
xor
imul
ret
jmp
in
jp
and
sbb
cltd
mov
dec
fisubl
adc
aam
in
cltd
mov
adc
pusha
lods
fscale
inc
mov
and
mov
push
or
dec
cwtl
dec
in
jmp
mov
out
pop
clc
in
std
and
mov
mov
xchg
nop
lods
fstpt
cmp
sbb
jp
jno
lahf
jl
nop
mov
sbb
das
xchg
mov
adc
pop
mov
aas
add
mov
pop
push
mov
push
jmp
scas
subb
fisubrs
imul
fidivrl
xor
dec
cld
in
bound
xor
fdivrs
fdiv
or
mov
dec
dec
xor
or
inc
and
push
sub
es
test
inc
mov
lret
je
mov
and
test
insl
or
add
push
mov
cmpl
hlt
xor
sbb
repnz
ss
dec
pop
sub
rcrl
jmp
dec
dec
lds
out
lcall
and
in
or
pop
jle
idivl
dec
fcos
xlat
mov
cmp
cli
xchg
pusha
pop
std
movsl
cwtl
xchg
add
ret
mov
jns
mov
jmp
inc
icebp
adc
fdivrl
xchg
sarl
mov
sub
push
in
aad
lret
cli
mov
int3
or
aad
add
divl
mov
in
xor
mov
or
jnp
jecxz
in
lret
mov
push
mov
xor
sbb
lods
sarl
pop
outsl
bnd
xchg
mov
inc
out
imul
aad
add
movsb
push
mov
jno
adc
ja
xor
aad
aas
aad
popl
arpl
mov
jl
bound
xor
xorl
mov
outsb
mov
dec
jnp
push
xor
loop
mov
sbb
jle
bound
dec
in
dec
mov
dec
sbb
dec
inc
dec
sub
cmp
out
fwait
push
cmpsb
icebp
mov
scas
xchg
insb
sbb
nop
stc
mov
cmp
pop
in
pop
mov
jle
test
mov
mov
ret
mov
mov
sbb
inc
in
push
push
cltd
in
pop
and
push
mov
ljmp
das
mov
jg
fs
sbb
xor
jmp
out
mov
sub
jno
outsl
push
adcb
aaa
fstl
pop
and
or
lret
in
test
inc
add
ljmp
addr16
or
mov
inc
movsb
test
pushf
adc
pop
xchg
xor
mov
ljmp
mov
and
mov
in
test
pop
mov
les
add
sbbb
inc
inc
sub
mov
pop
shrl
xchg
pop
fdivp
arpl
negb
xchg
pop
leave
pop
loope
loopne
fwait
push
lds
aam
lods
xlat
test
iret
leave
mov
push
inc
and
pop
push
xchg
push
ljmp
lcall
in
daa
outsl
mov
cmp
mov
rolb
sbb
add
xlat
cltd
sbb
call
xchg
js
push
je
call
sbb
pusha
divl
sbb
roll
mov
es
fsubs
jg
cmpb
and
mov
dec
loopne
pop
rcr
gs
xchg
into
data16
ja
xor
das
fdiv
andb
adc
push
ja
push
out
mov
lds
jne
and
xchg
insl
cmp
repz
cmc
stos
out
movsb
xor
xchg
xlat
andb
scas
dec
jnp
scas
jb
lahf
roll
scas
inc
sahf
mov
loop
out
mov
dec
add
cmc
adc
outsb
jae
aad
push
mov
or
out
mov
imul
or
sbb
inc
xchg
and
cmp
call
xchg
mov
dec
cli
and
ret
mov
adc
jbe
fisubs
stos
add
nopl
je
mov
pushf
gs
mov
mov
in
xchg
pop
add
and
push
jno
xchg
aaa
sbb
fstpl
sahf
sub
push
sub
xor
mov
push
or
sbb
icebp
test
in
movsl
ds
sbb
out
movsl
lock
xor
enter
scas
push
subl
sbb
sbb
push
jmp
push
adc
cmp
xchg
push
repz
pop
jecxz
inc
inc
int
loopne
sub
in
or
divb
add
mov
sti
movb
dec
push
clc
xchg
inc
xchg
pop
push
and
ljmp
sub
cmp
pop
jnp
sbb
adc
cmp
out
sbb
lea
ds
jae
enter
loop
les
lret
std
jae
shlb
out
pop
push
and
es
adcl
and
jmp
std
scas
notl
pop
push
shrl
mov
daa
pop
fmul
in
imul
mov
cs
jp
sbb
hlt
xchg
jns
adc
out
movsl
sub
jge
xor
or
xor
inc
call
sub
stos
cs
sub
das
insb
adc
mov
mov
arpl
ljmp
or
shrb
repz
das
mov
push
fisubl
xor
in
sbb
and
add
pop
xlat
mov
cmp
jl
rorb
adc
cmp
movsl
cli
pop
lahf
test
jmp
lods
in
jp
icebp
jmp
inc
inc
mov
call
mov
fdivrl
add
dec
mov
aam
jns
lcall
imul
data16
fildl
pusha
and
cmp
hlt
filds
add
sub
icebp
or
mov
fildll
lods
sbb
push
cli
scas
lods
mov
hlt
or
jecxz
adc
cmp
das
iret
imul
stos
inc
ficompl
sub
pusha
xchg
movsb
icebp
js
xor
sbb
push
mov
sub
or
mov
mov
jp
mov
test
jge
loop
lcall
nop
insl
data16
cmp
sbb
push
out
cmp
imul
inc
sahf
mov
rol
ficompl
xlat
int
add
cmpsb
xor
mov
hlt
ljmp
subl
pop
and
aad
bound
sub
testb
lods
pop
js
call
or
and
testb
imul
sbb
cltd
je
mov
dec
lret
mov
cmpl
shlb
ror
cli
push
mov
fsubr
test
mov
inc
ret
lock
decl
repnz
jbe
out
ljmp
xor
push
mov
mov
bound
mov
sarb
ds
mov
adc
xchg
fsubr
sbb
lcall
jmp
insl
sahf
scas
in
jae
adc
call
jge
add
imul
fiadds
fs
fcoml
out
setle
and
lea
out
adc
rol
sub
aam
imul
adc
ljmp
sub
insl
repnz
sub
loope
add
push
push
xlat
xor
mov
sbb
mov
sahf
push
push
icebp
sub
push
insb
in
xlat
insl
fadd
cmp
dec
sti
push
pushf
dec
out
loope
fldcw
push
ss
lods
lret
into
fidivrs
push
lcall
sbb
add
out
sbb
test
add
scas
and
scas
push
cltd
frndint
sbb
push
or
cmp
xchg
mov
jge
add
rcrl
test
imul
out
pop
or
or
cwtl
push
jne
divl
adc
sti
inc
arpl
adcl
inc
mov
xchg
and
lock
arpl
repnz
popf
ja
sbb
loopne
mov
cltd
pop
loopne
or
jp
stos
add
gs
test
pop
or
cmp
mov
imull
adc
out
sub
popf
stc
incl
xor
cld
cmp
xor
shll
arpl
pop
scas
or
sbb
jo
shlb
mov
call
rclb
out
dec
sub
push
outsl
cmp
scas
addr16
mov
adc
jp
adc
fadds
pop
cs
out
rep
sti
dec
add
ds
jl
jmp
addr16
pushf
mov
cmp
lock
sub
popa
cmp
and
fsubp
lods
xor
dec
xor
mov
fwait
std
sub
test
pop
fidivs
mov
imul
pushf
into
addr16
psubusb
sub
adc
sub
cmpsb
and
aad
sbb
mov
mov
adc
pop
pop
mov
ret
mov
je
or
lahf
pop
rol
xchg
push
mov
or
and
sub
lock
ds
iret
add
mov
jg
dec
xchg
and
jb
mov
or
idivl
shrb
dec
dec
fcmovu
scas
call
adc
pop
shrb
jg
jnp
or
lea
mov
inc
call
push
pop
inc
aaa
push
data16
lcall
shrb
or
in
dec
cmp
subb
into
lock
mov
pop
into
sub
mov
lds
loope
push
mov
xchg
push
shl
imul
mov
sahf
stos
loopne
int3
push
xor
fiaddl
test
cld
popf
outsb
out
pop
fwait
insb
xor
imul
outsl
mov
and
and
push
mov
testb
popf
test
jp
aam
cmpl
inc
xchg
nop
into
or
xchg
arpl
into
dec
pop
mov
ljmp
mov
mov
movsb
inc
mov
lods
repz
push
cwtl
int
rcrl
aas
out
add
and
ret
xchg
dec
aad
imul
stc
pop
andb
or
adc
xor
cmpsb
push
push
sub
sub
insl
mov
jp
addb
xor
push
lock
shl
lock
out
sbb
inc
adc
sub
fimuls
jnp
xchg
jns
push
and
int3
aam
mov
insb
movsb
xor
and
dec
jb
xor
sub
sub
sub
insl
xor
add
pop
aad
cmp
sbb
lods
divl
adc
loope
es
ja
jae
shr
shrb
cli
sub
push
insb
call
ja
out
xor
sbbl
imul
jecxz
leave
je
dec
xor
jp
cmp
cmp
xchg
movl
jmp
xor
cld
in
cmp
leave
fmull
in
ja
sub
jle
push
hlt
push
inc
pop
out
in
cmpsb
xchg
fadd
cmc
js
xchg
sbb
and
push
pop
out
jne
push
jns
add
ja
fwait
pop
or
scas
out
mov
lods
int3
inc
xlat
rol
fs
pop
xchg
popl
xlat
pop
sub
repnz
push
adc
push
pop
push
js
mov
mov
xor
push
mov
push
js
pop
femms
stos
jne
dec
dec
imul
sub
pop
add
and
mov
dec
xchg
push
adc
sbb
je
xor
jmp
jl
cmp
in
mov
shr
ficompl
sbb
insb
fdivl
in
xchg
xchg
test
sbb
call
sarb
push
enter
mov
testl
push
lods
sti
addr16
push
int3
mov
inc
xchg
call
or
popf
cmp
mov
rorb
jae
fwait
loop
xor
and
push
pop
inc
cltd
adc
ret
popf
mov
dec
scas
jmp
test
jmp
test
xchg
push
lock
cmp
ror
imul
in
jecxz
jecxz
aad
sub
scas
in
nopl
test
inc
stos
xchg
orb
adc
scas
push
fcoms
and
xchg
insb
push
in
mov
xor
cli
test
push
sbb
push
fisubrl
xchg
push
pop
sahf
mov
clc
orl
mov
or
cmp
inc
lods
mov
bound
pop
aam
mov
mov
adc
fxam
dec
es
outsl
or
pusha
mov
dec
addl
cltd
jae
dec
insl
jg
shrb
pusha
imul
pop
cwtl
pop
inc
ss
outsl
push
fstpt
mov
xchg
mov
sub
fisttps
adc
fisttpl
or
sti
pop
loope
fidivl
mov
cmp
pop
adc
push
push
in
sub
sbb
ds
cmp
jne
stos
pop
add
jge
cwtl
into
fs
mov
dec
or
or
insl
mov
bound
pop
in
push
std
dec
xorb
push
ss
popf
mov
adc
stos
inc
leave
faddl
jo
mov
ret
mov
cmpsb
iret
jecxz
mov
cmp
call
cmp
sbb
int3
add
sbb
ret
cld
daa
scas
and
adc
sub
pushf
push
jl
dec
lea
push
push
je
and
and
mov
or
mov
mov
idivl
stos
repz
and
test
stos
aam
sahf
loopne
cmc
pop
aas
mov
repnz
out
movsl
out
or
ljmp
mov
inc
mov
rcr
xchg
pop
dec
cmpsl
adc
or
out
leave
xor
cld
jmp
add
mov
adc
dec
mov
xchg
dec
call
outsb
aas
cmc
mov
sub
mov
fs
pop
shrb
insb
add
mov
repnz
cmpsl
mov
loopne
js
in
repz
inc
sahf
into
add
imul
push
jno
test
jmp
pusha
push
lods
mov
xchg
es
lret
and
or
add
nop
aas
icebp
gs
adc
cs
or
fstpt
jp
rorl
pop
jge
adc
add
cmpb
icebp
stos
pop
std
mov
int3
divl
adc
in
idiv
addr16
test
outsl
pop
fisttpl
mov
adc
es
xchg
scas
mov
push
xchg
testb
sbb
idivl
push
addr16
movsl
inc
popa
sub
scas
aad
push
mov
xor
into
add
push
mov
jns
xchg
jle
xchg
mov
add
mov
adc
dec
and
fbld
cmp
insb
gs
cmp
inc
jo
iret
add
pop
cmpsl
popa
xchg
xlat
repz
leave
push
xor
pop
out
cmp
adc
and
je
mov
test
cli
lret
jns
mov
push
sbb
add
popfw
nop
hlt
jno
xchg
cltd
cmpsl
ret
cmpsb
dec
pop
imul
clc
shr
rcrl
lea
cmp
push
jne
loopne
pop
lods
mov
add
decl
inc
and
add
shll
mov
ret
in
rorl
pop
sbb
add
mov
es
cs
xor
repz
mov
in
sbbl
lea
fldenv
inc
mov
into
fistpl
insb
repnz
in
pop
sbb
rcr
add
fidivrs
or
cwtl
iret
int3
iret
pusha
mov
cmp
dec
mov
out
or
xchg
cmc
lcall
nop
jle
bnd
sbb
mov
imulb
fcomi
aas
fsubr
xrelease
push
ds
mov
daa
js
adc
pop
imul
mov
inc
cs
pop
in
inc
add
insb
mov
jbe
xchg
lcall
dec
pop
rorl
in
lods
and
lret
pop
add
aaa
mov
or
arpl
jb
adc
pop
inc
and
bound
pop
ljmp
sahf
xchg
enter
test
adc
imul
loop
or
scas
xor
out
jb
aas
ljmp
pop
mov
sbb
and
pushl
outsb
arpl
xchg
fdivrp
js
adc
mov
scas
out
xor
jno
and
pop
inc
mov
sahf
rcr
pop
add
scas
popa
mov
aam
pushf
mov
and
push
and
pop
cltd
add
push
int
mov
xor
lahf
inc
imul
push
scas
mov
and
cmpsl
lret
xor
fnstenv
outsb
jae
fcompl
push
cmp
dec
out
lcall
jl
pop
mov
or
fwait
add
das
jo
lods
push
push
sarb
pop
hlt
out
das
into
inc
xor
imul
loope
pop
les
out
mov
ja
fmull
or
cmp
cmp
or
inc
ret
sbb
dec
xchg
mov
mov
cmc
jmp
jmp
sti
mov
mov
jl
dec
test
pop
ret
in
cmp
push
insb
clc
inc
and
icebp
cmc
outsl
pushf
and
dec
aas
aad
aad
push
adc
into
js
jb
loopne
or
fisttpl
sbb
cmp
jne
insl
dec
fcmovb
pushf
loop
jbe
dec
bound
jno
push
add
and
lock
pushf
sub
sbb
xchg
enter
divb
inc
and
sbb
dec
lahf
movsb
sbb
mov
jbe
mov
inc
outsb
cmpsl
pop
pop
int3
push
inc
rcl
test
incb
mov
jns
pop
dec
adc
gs
arpl
ds
or
stc
dec
int3
jnp
cmp
xor
out
mov
pop
jg
push
mov
setno
push
pop
mov
popa
mov
sti
and
and
rcrl
and
and
jp
jo
pop
lret
loopne
icebp
xchg
and
adcl
sbb
lock
xchg
es
out
lods
xor
push
or
ffreep
cltd
and
test
aas
push
out
pop
stc
sbb
mov
fwait
mov
int
inc
or
nop
ljmp
inc
ss
pop
movsb
mov
sarb
lahf
arpl
js
dec
fisubs
inc
fs
scas
push
push
popf
push
pop
das
das
sbb
shlb
jo
mov
inc
mov
xchg
rcr
sbb
ds
sub
ljmp
xor
out
int3
lods
mov
push
mov
cli
jp
out
lea
aam
lds
arpl
decb
add
les
mov
imul
outsb
mov
data16
adc
dec
mov
stos
mov
pop
bound
std
and
cmp
mov
test
out
icebp
lods
rcl
xchg
sbb
aas
and
jecxz
xor
jg
dec
adc
and
xor
mov
iret
adc
jmp
or
xchg
add
cmpsl
das
xsaveopt
loop
sahf
imul
xchg
fildl
daa
fsubrl
xlat
hlt
add
nop
xor
pop
inc
hlt
push
call
dec
mov
movsl
das
out
int
lds
sbb
mov
xchg
jge
movsb
add
dec
mov
mov
mov
push
into
fwait
vphaddwd
jmp
cmp
popf
imul
xor
aad
xor
cmp
cmp
fldl
repnz
inc
out
xchg
sbb
mov
leave
xchg
bound
cld
fcoms
pop
movups
mov
lret
cmc
call
ss
shlb
mov
dec
adc
jne
jmp
cmc
mov
sub
add
in
dec
add
xor
cmc
and
add
cmp
aas
inc
je
mov
mov
and
pop
repz
push
imul
repz
sub
das
push
je
pop
add
loop
enter
bound
nop
xchg
push
shll
into
xchg
and
gs
push
cmpsl
pop
jge
jle
gs
sub
int3
adcl
sub
pop
mov
sub
jmp
cmp
jo
push
sbb
ret
fnsave
mov
inc
sbb
pop
or
fs
cmp
shlb
add
outsb
adc
mov
inc
or
pop
out
stc
ljmp
sub
jno
xchg
push
or
xlat
add
dec
mov
mov
stos
je
jmp
jl
dec
test
xlat
fnstenv
inc
adc
xchg
cld
cmp
mov
mov
fcomp
or
flds
rcrl
ret
inc
test
repz
aaa
dec
out
xchg
bound
clc
pop
sbb
cmc
mov
jp
in
scas
cmpsb
sbb
mov
test
ret
adc
cmpsl
into
adc
cli
pushf
inc
mov
xchg
stc
pop
jne
jns
das
scas
push
push
in
push
mov
repnz
out
out
stos
pop
fnsave
addr16
gs
inc
jp
xchg
outsl
push
and
out
aas
add
cmp
test
out
pop
stc
mov
pushf
mov
inc
jp
xchg
push
in
mov
inc
ja
fs
cs
jmpw
or
or
pop
lds
inc
insl
xor
inc
int
xchg
and
gs
inc
sbb
je
mov
repz
repz
rolb
sete
mov
mov
fbstp
inc
cwtl
xor
mov
mov
add
jno
pop
xchg
fwait
sbb
push
mov
scas
lahf
stc
dec
addr16
std
inc
inc
push
lret
xor
lahf
xor
fwait
xchg
aas
int3
repz
xchg
iret
lret
sbb
in
fimull
ret
ret
insb
sbb
mov
pop
sbb
sub
cmp
dec
adc
les
xor
test
add
lret
jecxz
mov
cmpsl
gs
cmpsl
icebp
sbb
inc
inc
dec
rorb
mov
mov
sbb
pop
in
mov
push
mov
pop
xor
inc
out
cld
test
xor
and
fnsave
sbb
std
lea
sub
jb
or
jae
bound
stc
mov
xor
fisttps
push
mov
orl
sub
inc
dec
inc
mov
jle
inc
adc
sbb
push
mov
push
ret
fistpll
jne
inc
jp
push
mov
mov
or
in
xchg
push
push
pop
fmuls
adc
sub
lods
adc
ds
jmp
sub
add
mov
pusha
addl
and
into
push
aam
mov
sbb
jle
iret
xlat
out
in
popf
popf
mov
jae
ja
js
sbb
push
inc
rcl
fucomp
and
insb
test
adc
jg
pop
cwtl
idiv
in
movsb
jo
sbb
js
jp
in
loope
dec
mov
push
nop
push
mov
js
xchg
inc
push
xchg
adc
fsubl
cmp
add
repz
jl
scas
sbb
scas
jmp
cmp
pop
mov
pop
jns
movsb
sub
mov
insl
arpl
fcoml
xchg
push
es
imul
lret
es
cmp
aam
mov
and
jl
or
aad
pop
xchg
jb
xchg
aas
xor
sti
mov
sbb
jo
jp
pop
push
mov
daa
stc
test
adc
push
mov
xor
lea
enter
ds
dec
es
cmp
iret
push
xor
cltd
bt
ret
aas
mov
cli
and
mov
xchg
mov
inc
addb
xchg
imul
inc
pop
adc
sbb
sbb
push
pop
mov
loope
jle
pusha
mov
and
mov
fsubrs
sti
rcll
jmp
jbe
std
cli
cltd
ret
mov
sub
mov
push
inc
xor
xor
cld
mov
xor
call
test
sbb
mov
lahf
inc
cwtl
xchg
mov
outsl
incl
dec
fists
loop
insb
mov
pop
mov
push
call
push
xchg
xor
icebp
cmpl
mov
test
dec
inc
cmp
xchg
fdivl
mov
je
cli
jg
adc
hlt
scas
clc
mov
cmp
mov
stos
add
mov
xchg
adc
jns
sarl
insl
mov
cmp
rclb
fisubrs
int3
sub
push
lods
mov
daa
xchg
push
fsubs
jb
incb
jns
mov
dec
sbb
test
jae
push
mov
testl
xchg
mov
xor
pusha
pop
sbb
lahf
xchg
lcall
sub
xchg
lods
mov
cltd
aas
ret
clc
rol
sub
addr16
sub
mov
jle
push
nop
je
daa
cmp
xor
jge
sbb
daa
mov
pop
xchg
xor
bound
cmpsl
jnp
mov
lcall
sbb
mov
push
jns
in
loope
xchg
jo
jmp
xchg
mov
cmc
adcb
je
xchg
rep
std
mov
xor
mov
test
mov
add
bound
aas
xor
cmpsb
mov
fbstp
sub
mov
pop
sbb
aas
out
fidivl
mov
and
mov
gs
sbb
icebp
mov
lods
fldenv
cmp
ficompl
mov
push
mov
jno
repnz
lds
pop
andb
aaa
mov
and
jne
inc
rcrb
cmc
lcall
in
cmpsl
outsl
jge,pn
mov
dec
std
cltd
stc
add
sub
out
inc
xor
mov
icebp
in
dec
stos
pop
jmp
jbe
sub
int
dec
adc
aaa
lods
bound
dec
or
or
shll
cmp
arpl
pop
push
xchg
repnz
icebp
das
lock
push
lahf
test
roll
add
haddps
out
mov
jo
or
lcall
adc
jmp
dec
jo
push
cmp
inc
sub
arpl
arpl
jb
dec
pop
mov
dec
lret
loop
and
rcll
mov
add
fs
pop
fs
cmp
ror
or
push
mov
jns
into
and
or
push
les
movsl
jbe
mov
push
xor
imul
out
jp
xor
mov
stos
sahf
sahf
fisubs
in
cmp
in
mov
out
cmpsb
add
loope
or
and
jl
outsl
jo
ljmp
arpl
outsl
cli
cli
fisubrs
and
cltd
and
pushf
scas
int
mov
ss
gs
push
test
fsubrl
cmpsb
dec
bound
add
das
xor
xor
xchg
movsb
xor
xchg
scas
dec
aam
cmc
jnp
push
jg
ficoms
cli
lods
mov
push
rcrl
das
inc
sahf
shll
mov
arpl
sbb
ljmp
inc
loopne
jae
iret
std
adc
pop
pop
mov
pushf
gs
sub
jmp
push
sbb
push
cmpsb
xchg
sarb
adc
lods
adc
or
jb
loopne
jnp
leave
rorl
outsb
xchg
mov
adc
inc
aam
adc
iret
insb
in
push
ljmp
add
dec
jle
insb
bound
icebp
pop
sub
xchg
out
push
aaa
lods
mov
call
mov
add
into
push
fisubl
jle
aad
ljmp
or
mov
stos
sahf
push
push
fwait
or
fnstenv
clc
movsl
fbstp
enter
cmpsb
out
out
pushf
dec
rcrb
or
sbb
cmp
jmp
stos
xchg
cmovnp
inc
cmpsl
imul
ss
stos
xor
nop
mov
jg
fidivrl
sbb
decb
inc
jecxz
add
dec
inc
js
pusha
fisubrs
jnp
mov
test
push
and
int
mov
adc
xchg
add
imul
jns
jo
shll
cmp
jno
pop
in
enter
jo
push
testl
popa
test
sub
fimull
jo
xor
insl
push
lods
mov
xor
imul
subl
xor
add
mov
mov
scas
jmp
lods
fisubrs
add
rol
es
or
es
xor
mov
sbb
std
sbb
add
pop
stos
adc
cli
cli
push
adc
insl
mov
lcall
rcrb
orb
in
je
jnp
jmp
shlb
sub
dec
aad
add
pushf
aad
bound
test
popa
or
mov
mov
sub
jp
and
js
scas
ja
mov
dec
es
mov
outsb
loop
xor
or
mov
mov
or
pop
mov
fidivs
jae
mov
les
mov
cmc
movsl
pusha
and
or
add
fdivr
mov
mov
adcb
movsb
adc
xchg
push
enter
mov
pop
mov
dec
or
pop
cwtl
test
push
sub
mov
and
inc
fsubrs
aas
add
sub
cmp
jns
pop
or
loop
push
xor
sbb
xchg
adc
jmp
imul
adc
shll
jne
aam
push
les
outsb
movsb
sbb
dec
dec
sbb
xor
sbb
nop
or
out
fwait
into
loop,pn
pop
jge
pop
mov
ds
xchg
int3
inc
inc
aam
stos
out
je
fnstenv
inc
pop
rorl
clc
movsb
jbe
insb
adc
mov
fldt
mov
jno
or
sbb
xor
daa
ret
xchg
sub
stos
jo
out
adc
pop
js
or
es
mov
dec
fstl
mov
pop
mov
sub
add
or
roll
aaa
push
mov
mov
pop
adc
fwait
push
mov
xchg
dec
fcompl
into
pushf
jmp
push
inc
sub
sbb
mov
imul
push
or
dec
pusha
jae
cmc
arpl
push
mov
pop
push
lahf
dec
pop
ja
mov
popf
mov
or
shll
lcall
pop
jmp
ret
adcl
movsl
xor
jl
fidivrs
adc
lea
idivb
sbb
xor
add
imul
mov
cmpsl
and
lahf
lcall
pop
xchg
sub
testl
push
push
dec
stos
insb
mov
sbb
xchg
pop
mov
popa
stc
and
push
mov
push
ret
sahf
xchg
sbb
xor
push
sbb
sbb
xor
clc
adc
mov
or
push
test
jecxz
push
sub
inc
mov
push
mov
and
push
dec
cwtl
lahf
push
jp
push
jle
sbb
dec
xchg
sub
pop
xchg
mov
je
nop
jmp
push
xchg
pop
mov
cmp
add
mov
lret
mov
xor
mov
negb
pop
aas
or
repz
adc
ret
movsl
mov
sahf
or
inc
pop
inc
jecxz
fwait
pop
jns
mov
xchg
lret
arpl
mov
leave
clc
sbb
xchg
xchg
and
mov
jp
mov
cs
repnz
or
and
pop
mov
pop
cmp
pusha
lret
or
shlb
xchg
and
inc
aad
push
cs
push
jb
stc
not
dec
pop
and
mov
ret
jl
adc
xlat
mov
xlat
roll
scas
test
nop
jnp
mov
scas
xor
dec
adc
out
pop
jl
cmpsl
fwait
in
clc
ljmp
xor
cltd
inc
cld
jns
mov
aam
fidivs
test
xchg
in
dec
cmp
mov
cmp
popa
out
sbbb
fidivs
in
push
out
push
jmp
adc
mov
rorb
add
out
sbb
enter
mov
inc
popa
mov
ror
dec
call
lds
mov
mov
mov
sub
sbb
dec
lods
les
lods
pop
inc
pop
mov
out
mov
mov
xor
pop
mov
and
cld
bound
mov
ljmp
sahf
iret
jecxz
call
shl
jmp
gs
mov
dec
inc
lock
nop
dec
inc
push
pop
les
inc
add
out
rcrl
adc
push
repnz
xor
cs
sarl
push
adc
sub
fucomp
sbb
xor
pop
icebp
cmp
xor
mov
test
mov
in
xor
cmpl
xor
pop
xchg
pop
ret
mov
ljmp
cmpsb
xchg
push
jmp
mov
xchg
js
add
je
adcl
sub
xchg
xor
push
sbb
pop
outsb
inc
js
push
adc
cld
mov
mov
xchg
aam
jp
insl
les
and
ljmp
out
jmp
test
in
dec
int
lock
das
jle
fcoml
xor
lret
scas
clc
mov
lock
jnp
dec
xchg
push
jae
and
nop
and
sbb
pop
fdivl
and
ret
cmp
mov
movsl
bound
stc
movsl
mov
and
and
cwtl
and
xor
push
out
test
push
test
bound
arpl
repnz
cmp
dec
leave
push
and
repnz
mov
xor
scas
pop
mov
pop
cltd
pop
cmp
pusha
jno
sub
ss
cs
add
and
lea
lahf
and
ret
push
mov
in
rolb
lock
cli
mov
fwait
mov
mov
mov
repnz
test
xchg
pop
dec
fs
inc
adc
or
xor
mov
lcall
or
push
mov
mov
sahf
test
jo
jnp
cmp
push
out
xchg
add
test
mov
icebp
sbb
sub
xor
insl
mov
adc
ret
in
jp
inc
fwait
decb
push
sbb
mov
inc
pop
aad
sahf
mov
leave
jmp
ljmp
mov
sbb
mov
fucomi
cmc
mov
pop
jmp
add
push
jg
xlat
xor
cmpsb
xchg
roll
imul
sub
jge
nop
mov
aad
inc
stos
push
xor
pop
test
add
jns
xor
mov
xchg
sbb
nop
bound
sar
js
push
cmpsl
and
or
jnp
xlat
aad
rcrl
adc
test
push
mov
xchg
xchg
outsl
cwtl
fcomps
xchg
sub
mov
xor
cld
popa
outsb
jle
repz
popf
mov
aaa
lea
mov
pop
xchg
xchg
jns
push
mov
jae
add
loop
popf
xchg
mov
mov
jnp
fnstcw
out
cmp
frstor
and
sub
out
sub
ljmp
pop
sbb
cwtl
outsb
les
cld
ficoms
es
push
mov
fstps
cmpsb
pop
push
xchg
sub
lods
cmpsl
cli
clc
dec
dec
adc
cli
sbb
fwait
js
inc
adc
lods
sahf
dec
je
push
sbb
push
fstpt
jne
inc
dec
xchg
sbb
inc
xor
pusha
dec
insl
jl
mov
pop
clc
mov
xor
adc
xor
mov
xchg
push
mov
stc
push
idivl
cmp
jmp
xchg
sbb
fstpl
lea
push
ja
sub
mov
test
sub
or
popa
es
adc
nop
lret
mov
dec
shll
notl
xor
xlat
xor
cmp
ss
dec
dec
adc
adc
outsl
sub
mov
stos
js
add
dec
jo
push
cs
sahf
jle
daa
ja
dec
imul
andb
xchg
mov
sub
mov
movsl
mov
orb
aad
or
sub
cld
rcrl
sub
mov
add
dec
mov
xchg
adc
inc
lods
or
repz
jmp
add
int
push
add
fstp
cwtl
ljmp
sub
adc
nop
mulb
sbb
sbb
mov
mov
ja
bound
fiaddl
push
icebp
pop
inc
dec
sbb
dec
inc
lret
and
jge
pop
filds
aad
mov
leave
shll
dec
pop
adc
xchg
adc
sbb
cmp
into
add
mov
int
aas
ja
jmp
xchg
push
lret
jbe
mov
lds
stos
ffreep
xchg
dec
loopne
cltd
stc
xor
dec
test
add
sub
roll
sub
inc
mov
dec
pusha
lds
or
cmp
cmc
in
sbb
inc
out
shlb
inc
jns
sub
leave
fsubrl
cmp
lea
test
dec
lods
mov
sbb
out
jnp
fs
lahf
mov
outsb
daa
repz
mov
cmp
mov
xchg
push
sbb
push
jecxz
push
xor
push
push
lds
inc
cwtl
mov
mov
sbb
test
scas
jl
jb
mov
fcomps
jbe
adc
les
imul
enter
les
cmp
fimull
mov
into
loopne
ljmp
jbe
aaa
dec
inc
imul
pop
outsb
and
int
add
xor
mov
xchg
lods
dec
scas
xorb
mov
out
dec
adc
fwait
stos
cmp
hlt
jae
pop
pop
add
jl
cmpsl
enter
xor
test
rorb
imul
jge
push
lcall
cmpsl
adc
test
mov
sbb
mov
arpl
cltd
add
aas
lock
mov
mov
movsl
stc
dec
mov
cmp
imul
mov
lds
xor
mov
int3
xor
mov
xchg
push
add
xchg
cld
in
adc
test
xchg
mov
push
fcoml
fwait
sti
notb
jecxz
push
faddp
mov
mov
adc
subb
fsts
jge
cmpsb
mov
loopne
dec
popf
stc
ljmp
out
stos
repnz
dec
or
movsl
loope
adc
call
xlat
jo
mov
add
jl
movsb
sbb
gs
pop
mov
rorl
int
lret
mov
or
pop
int3
out
cwtl
cwtl
cmp
test
fs
cwtl
outsl
aaa
addb
ror
inc
mov
add
ljmp
fucomi
cltd
bound
aam
decl
xchg
xchg
xor
popf
pushf
packuswb
xorl
stos
addr16
push
lods
movsb
int
dec
or
or
movsl
mov
pop
mov
mov
test
mov
cmp
fisubrs
fwait
and
push
inc
imul
es
push
push
aas
cmpsl
lds
add
mov
jp
and
dec
sarl
nopl
mov
cmp
xorl
jbe
mov
xchg
xchg
ret
test
mov
jp
cmpsb
stc
add
rclb
push
daa
mov
pop
loope
fucomip
scas
push
jo
dec
lods
pop
jne
jmp
adc
cli
lock
or
ss
es
inc
bound
lods
sbb
bound
sbbl
dec
xchg
add
and
cmp
lret
aad
jno
gs
xor
or
scas
ja
imul
sbb
loopne
dec
and
sbb
cmp
xchg
jne
aad
adc
test
mov
xor
sub
test
mov
lea
addr16
lock
or
xor
addr16
fsubrs
xchg
or
cmp
lods
jo
mov
cmp
ljmp
movsb
ljmp
cli
int3
out
mov
sub
imul
add
mov
test
mov
repz
mov
shrb
sub
lods
cld
stc
xchg
movsl
or
dec
stos
hlt
xchg
sub
cmp
insb
popl
pop
and
in
subb
jo
mov
hlt
rcr
test
push
xchg
mov
lods
pop
rolb
lret
daa
sbbl
sahf
sbb
rcrl
pop
addl
jns
jp
mov
push
pop
xchg
in
jp
push
stos
filds
dec
pop
lret
int3
in
int3
sub
in
cs
movb
outsl
push
jg
mov
xor
mov
shrl
aad
add
inc
cmp
lea
pop
mov
push
icebp
sbb
inc
in
clc
icebp
ja
add
jb
in
leave
jae
aam
adc
jg
mov
sub
adcb
xor
dec
mov
push
movsl
cli
jmp
sub
jmp
and
fnstcw
loopne
xor
shll
fwait
and
mov
or
addr16
aas
fistpll
sti
rorl
sub
cmp
dec
add
mov
dec
test
fnsave
pop
xlat
arpl
xor
int
nop
aam
adc
js,pt
mov
mov
rclb
mov
add
fs
jecxz
mov
xchg
sub
xor
rorl
jnp
pop
pop
cmp
inc
xchg
faddp
pop
ds
imul
dec
cmp
imul
push
and
add
lock
mov
adc
inc
sbb
fimull
loop
sti
mov
sub
cmp
icebp
push
xor
shrl
cmp
inc
push
inc
sbb
mov
mov
mov
lret
or
aam
imulb
jl
push
cmp
xchg
jge
sub
add
iret
sub
int
sub
stc
sub
test
arpl
sbb
cmc
xchg
stc
imul
in
cmp
daa
popa
test
push
hlt
jecxz
add
aam
jns
cwtl
mov
or
dec
dec
jnp
dec
fnstcw
sbb
lret
pop
add
rcr
jns
pushf
in
mov
jbe
mov
sti
pop
dec
nop
jns
fdiv
movsl
cmp
mov
inc
inc
mov
or
adc
leave
cmp
mov
xchg
adc
add
mov
loop
out
movsb
popf
in
jecxz
sbb
adcl
mov
aas
push
push
cmpsl
dec
shlb
insb
add
push
pop
mov
xchg
in
mov
lcall
ret
pop
aaa
mov
test
mov
pushf
in
mov
ds
push
rcrl
in
aas
sbb
lcall
jno
inc
inc
xchg
push
cmpsb
jecxz
push
and
movsl
xchg
enter
ss
mov
xor
mov
xor
jb
test
and
jg
sub
push
loopne
je
mov
int3
sub
fwait
aas
inc
imul
pop
je
adc
call
dec
jno
dec
in
mov
and
idivb
sub
icebp
xor
jle
orl
sarb
xchg
daa
setns
jl
ljmp
jg
outsb
dec
jb
push
insl
sub
mov
push
cmp
sub
leave
add
lea
enter
es
pop
inc
mov
hlt
pop
jae
mov
mov
cltd
das
or
leave
push
sbb
push
test
loop
cmp
leave
mov
loop
sbb
mov
cmp
xchg
dec
sbb
fcomps
insl
rcll
dec
push
xor
add
bswap
ja
js
mov
mov
loopne
addr16
adc
add
sbb
out
jmp
inc
loop
iret
lcall
mov
movsb
cmp
adc
loopne
pop
mov
scas
jae
push
mov
add
popl
add
gs
mov
scas
int3
pop
fimuls
aad
enter
sub
int
aam
cwtl
inc
pop
insl
rcll
inc
jmp
xor
xor
dec
jmp
andl
jle
inc
mov
jecxz
or
xor
mov
xor
jno
dec
mov
data16
push
imul
push
sbb
xchg
sub
mov
mov
test
repz
dec
inc
inc
shl
pop
mov
jbe
dec
push
push
jmp
icebp
ja
bound
iret
mov
sti
xchg
mov
jecxz
pop
pusha
pushf
add
frstor
pop
mov
jnp
dec
ds
push
insl
jecxz
jnp
xor
popf
pop
adc
or
mov
push
and
scas
fcoml
sysenter
ficoms
fimull
ret
das
cmp
in
popf
or
bound
aam
testb
ljmp
bound
outsb
inc
lea
or
adc
dec
pusha
fdivrs
rcll
call
cwtl
aad
dec
inc
out
andl
mov
xchg
in
push
aas
jo
test
or
mov
testl
test
cmp
outsl
jno
xor
shrl
pop
and
sub
call
push
xor
mov
lahf
into
js
rcrb
xor
mov
leave
mov
jecxz
jae
data16
inc
sbb
ret
dec
aad
int3
fmul
sbb
xchg
mov
movl
stos
cld
stos
mov
or
pop
pop
outsb
gs
leave
pop
push
add
jno
cmpb
mov
xor
lock
push
rcrb
dec
stc
xchg
imul
test
mov
fsts
xor
sbb
lds
ljmp
push
adc
leave
in
jecxz
cmp
or
lods
jle
testl
xchg
lock
inc
mov
cmp
scas
imul
cwtl
ja
mov
jb
int
push
dec
jp
or
js
mov
test
mov
in
push
popa
sub
sbb
fists
ljmp
mov
jb
mov
dec
cmp
icebp
lock
push
xchg
add
add
int3
inc
into
inc
cld
cmp
mov
mov
fildll
movsl
mov
adc
test
jl
pop
add
sbb
ret
clc
mov
pop
popf
push
es
repnz
daa
sbb
scas
mov
or
repz
js
test
push
pop
addb
imul
test
mov
xlat
mov
cltd
or
ret
lds
push
cli
daa
loopne
dec
enter
sub
or
fmull
push
sub
rorb
int
dec
sub
test
loope
sbb
push
cs
mov
rcrl
pop
ds
stc
sbb
xchg
jno
aas
jle
in
or
jno
xchg
push
and
inc
repnz
mov
dec
ret
push
xchg
add
leave
aad
add
je
pop
aas
or
xchg
dec
adc
jnp
iret
lcall
iret
jmp
cmp
scas
push
test
iret
pop
dec
jecxz
pop
fs
pushf
or
js
fildll
lret
dec
mov
aaa
out
mov
insb
icebp
test
dec
dec
shlb
pop
mov
xor
test
and
je
pop
in
cwtl
aas
scas
mov
into
mov
sti
mov
and
outsb
pop
mov
andb
xchg
addb
movsb
ficomps
xchg
imul
mov
sbb
out
arpl
push
stos
icebp
mov
adc
dec
sub
mov
popa
dec
enter
push
in
mov
icebp
psubsb
mov
cld
movsl
fidivrl
mov
out
push
aaa
sub
pop
das
jle
xchg
sbb
sub
ljmp
push
mov
push
xchg
jbe
hlt
push
mov
out
mov
lcall
ret
insl
cmp
loopne
jg
adc
jnp
ds
in
xor
je
xchg
sbbl
sub
repnz
dec
shl
inc
ds
mov
push
dec
jae
fnstsw
sbb
xchg
test
sar
pushf
std
out
or
add
mov
icebp
jo
xchg
rclb
test
mov
inc
add
add
cmp
dec
dec
subl
ror
sub
gs
vcvttss2si
bound
sbb
addr16
xchg
pop
cmpsl
and
push
hlt
jb
adcl
fwait
hlt
inc
decb
lret
or
in
sbb
xchg
lret
sbb
push
in
jecxz
cltd
out
aam
pop
icebp
push
sub
cli
in
xchg
std
lods
xchg
add
push
jmp
rorl
stos
adc
jmp
mov
push
repz
mov
mov
out
pop
pushf
sub
adc
xor
push
stc
push
cmp
jle
into
inc
pop
ror
mov
dec
stos
mov
xor
xor
mov
or
xchg
push
aam
lds
push
popa
jecxz
cltd
scas
mov
and
fld
in
xchg
add
xor
loope
repnz
push
lds
sbb
inc
mov
sub
cs
test
sub
stc
out
push
inc
dec
dec
cwtl
push
fisttps
sbb
test
ljmp
dec
mov
cmpsl
das
test
xor
xchg
dec
cmp
xchg
jnp
jmp
leave
pop
ficoms
inc
andl
push
fcoml
add
lea
gs
cmp
mov
push
inc
bound
mov
ficoms
lcall
dec
ljmp
scas
pop
push
push
mov
repz
push
inc
sub
and
or
lret
add
hlt
push
and
add
push
nop
xor
cmp
mov
int
cmp
sbb
stc
push
out
movsb
je
aas
mov
mov
jo
sub
lahf
mov
adc
movsb
cltd
ljmp
push
mov
jg
das
sbb
popf
mov
out
test
sub
fistps
movsb
into
cmp
fistps
and
cmp
jg
cmp
out
scas
mov
outsl
lret
inc
icebp
inc
mov
sbb
les
lret
dec
xor
inc
jge
cltd
jge
sbb
mov
adcl
xchg
aas
jle
or
std
lahf
fdivr
sbb
xor
inc
push
iret
daa
pop
mov
fldenv
rcr
lret
je
pop
cmp
push
subl
pop
jne
fs
out
push
insl
leave
mov
mov
adcb
push
cwtl
add
data16
cltd
jns
addr16
adc
and
xor
mov
adc
mov
sub
into
out
test
gs
je
mov
mov
out
mov
and
adc
mov
pop
sub
sti
fwait
inc
aaa
jp
push
bound
mov
shl
push
sahf
in
jb
jbe
scas
pop
gs
push
out
adc
push
and
xchg
cmp
fidivl
jo
push
int
jp
lods
push
cmp
pop
cli
add
xor
ljmp
aaa
lods
in
mov
mov
lds
ljmp
div
movsb
loop
jns
pop
mov
mov
add
mov
int3
jp
mov
adc
pop
mov
xchg
pop
adc
sub
arpl
jg
mov
xor
mov
adc
int3
or
dec
or
add
jmp
sub
sbb
fimull
dec
rol
repnz
or
jle
push
jb
mov
je
push
das
mov
int
adc
addr16
sahf
out
ljmp
inc
dec
out
push
es
dec
dec
cltd
cmp
jnp
ret
jb
scas
inc
xlat
jnp
push
jo
aas
mov
sub
leave
adc
sti
rcr
mov
movsb
push
call
cwtl
scas
dec
aaa
sbb
sub
aaa
aas
push
fs
cmpsl
and
rolb
inc
push
add
dec
daa
shl
test
inc
loopne
loop
dec
mov
or
popf
out
dec
mov
xchg
xor
add
xchg
inc
sub
cltd
daa
scas
mov
add
fdivrl
dec
jns
mov
loopne
fwait
jb
js
icebp
addr16
xchg
inc
in
icebp
jbe
jmp
lds
imul
mov
pop
jecxz
mov
std
fldt
xchg
cltd
shrw
mov
xchg
jae
add
movsb
push
cs
push
in
sub
fstl
fimuls
sarl
add
jae
add
mov
inc
add
dec
jnp
mov
push
rcr
adcl
cmp
sub
jno
fs
ljmp
es
jno
dec
sub
pop
cmp
cmpsl
push
sbb
andl
lcall
mov
dec
pop
sub
out
aaa
andl
jnp
mov
adc
jl
mov
xlat
jbe
mov
sub
ljmp
imulb
jo
lret
mov
cwtl
sbb
lds
pop
xorb
daa
mov
js
mov
rcll
cmp
xchg
sti
add
push
xor
sbb
lret
enter
loopne
aaa
jg
lds
push
mov
push
xchg
fwait
xor
sti
xchg
icebp
dec
daa
mov
test
fld
shrl
mov
mov
in
pop
je
dec
sub
xor
stos
cmc
imul
rcrl
outsb
rolb
push
and
or
lret
pusha
mov
ljmp
repz
mov
xchg
shr
mov
sbb
xchg
sbb
cmp
cmpsb
mov
js
in
popf
jbe
insb
stc
outsb
fdivrl
jo
adc
push
push
aas
xor
mov
repz
movsl
xchg
daa
dec
mov
mov
adc
nop
daa
imul
pop
inc
cltd
jnp
sub
ljmp
imull
xchg
and
in
add
add
push
inc
cmp
call
les
inc
adc
sti
mov
mov
xchg
dec
push
stos
andb
gs
repz
int3
lock
pop
insl
sub
aam
or
dec
push
cld
mov
inc
add
mov
cmc
enter
add
pusha
push
mulb
xchg
aas
testl
ljmp
mov
mov
pusha
pop
sub
jmp
inc
sahf
mov
mov
ljmp
arpl
loopne
stos
jb
xchg
jmp
lock
iret
aas
xchg
rolb
mov
in
mov
fcmovne
lea
test
jmp
int3
jns
enter
dec
jno
out
mov
xor
cli
xchg
inc
lahf
inc
add
loope
arpl
sub
push
inc
cmpl
pushf
outsb
out
popf
lods
mov
leave
addl
jl
push
cli
call
xchg
stos
jns
or
cmc
pop
test
loopne
rclb
daa
leave
mov
sbb
dec
mov
push
dec
pop
sbb
mov
call
sahf
and
xchg
test
or
loop
cwtl
rolb
test
pop
popl
add
sbb
pop
cld
cs
rcr
pop
dec
or
pop
mov
loopne
ljmp
pop
rcrb
pop
pop
dec
cmpsl
aad
adcb
inc
mov
pop
and
pop
dec
rorb
rcrl
xchg
sub
jo
mov
or
les
or
lds
cvtpi2ps
mov
jmp
stos
xor
insb
clc
dec
mov
cmpsb
push
push
std
pop
jb
mov
cmpsl
insb
sub
int3
popa
sub
xchg
push
xchg
xchg
pop
shrl
jle
sbb
cmp
in
add
loopne
push
jns
ds
mov
sub
dec
xor
lods
cmc
fimull
add
mov
iret
mov
adc
push
sub
sub
ret
lock
adc
nop
rcrb
sbb
jg
sbb
stos
adc
pop
cmpsb
inc
nop
enter
ds
mov
andl
mov
hlt
xlat
stc
inc
aaa
popf
in
fmull
icebp
add
sub
pop
nop
mov
inc
cs
jge
inc
femms
loopne
insl
iret
rcrb
adc
mov
or
push
xorb
mov
mov
in
cmp
dec
push
clc
out
cwtl
in
sarl
xor
xchg
ja
adc
loope
out
mov
pop
data16
shlb
shrl
sub
push
or
mov
iret
pop
xchg
inc
dec
in
or
and
mov
mov
inc
add
xor
sbb
mov
gs
imulb
add
fiaddl
mov
adc
aaa
mov
pop
push
lret
cs
cmp
mov
or
inc
sub
iret
cmp
sub
cwtl
push
and
jp
stos
idivb
mov
mov
xchg
cs
ljmp
pop
insb
popf
and
push
pop
mov
int3
daa
dec
pusha
xor
adc
leave
pop
inc
pop
nop
adc
xchg
sbb
hlt
adc
mov
mov
stos
cli
push
stc
pop
or
sarb
ret
or
jp
sbb
dec
fwait
cwtl
cmp
aad
rcll
lahf
cwtl
pop
daa
lods
and
ror
adc
das
inc
ret
cmp
add
shlb
inc
imulb
mov
fstpl
inc
popa
addr16
outsl
das
out
inc
das
cmp
lahf
mov
rorb
out
iret
and
nop
nop
and
out
les
jl
negb
es
sbb
int
sub
fwait
adc
ror
or
lret
daa
and
dec
dec
aam
cmp
mov
movb
or
lcall
in
sbb
imul
outsb
inc
xchg
insl
add
pop
pop
jle
gs
stos
adc
xor
pusha
loope
outsl
outsb
mov
push
push
out
movl
push
push
add
cmp
mov
sarb
scas
dec
push
ja
sbb
cmp
adc
mov
sub
and
imul
xchg
test
push
fists
and
mov
xchg
mov
or
cmpl
pop
mov
fcoml
mov
fisttps
lret
fs
pop
push
adc
adcb
sbb
ret
mov
mov
mov
subb
or
fidivrl
aad
cmpsb
mov
clc
sub
sbb
xor
out
in
repz
ret
insl
fcoml
and
fs
mov
ret
repz
aad
dec
sti
jno
inc
mov
mov
test
xor
sub
jae
adc
hlt
pop
enter
je
insl
sbbb
stc
sub
lret
xor
out
cwtl
loop
inc
mov
mov
xchg
mov
lods
leave
in
fnsave
test
neg
pop
repnz
mov
stc
ret
jne
data16
aaa
cmp
sub
sbb
out
and
push
scas
inc
mov
adc
add
aas
push
mov
xor
mov
stc
add
das
stos
jle
popa
ja
sub
aam
stos
test
push
in
std
stos
ss
test
scas
xchg
popa
sti
or
les
dec
test
sbb
xchg
in
push
jo
stc
jbe
add
test
bound
sub
cmp
pop
scas
test
popf
mov
cmpsb
mov
adc
insl
add
inc
pop
out
xchg
jno
mov
test
push
out
or
loopne
gs
mov
shll
add
inc
test
mov
mov
cld
cli
jp
fsubrl
or
rolb
add
loopne
mov
inc
das
fbld
add
xor
sbb
in
in
xchg
scas
push
xor
popa
outsl
inc
push
sub
jnp
pop
pop
in
stos
xor
mov
test
cmp
cmpsb
lahf
dec
push
out
mov
sbb
lods
ljmp
sbb
jo
leave
cs
and
dec
mov
in
idivb
bound
and
subl
dec
in
add
dec
cli
or
fwait
scas
cli
jl
push
leave
adc
or
push
imul
ss
mov
ror
push
sub
inc
cli
cmp
es
pop
mov
mov
jb
vpshufhw
and
xor
insb
cmp
popf
xor
xlat
ljmp
enter
sahf
adc
xlat
add
cld
sbb
xor
ljmp
mov
mov
icebp
dec
outsb
push
andl
jmp
aas
mov
inc
popa
add
cmp
jmp
adc
pop
sub
pop
and
test
scas
add
push
stos
add
pop
shll
push
setge
out
mov
sbb
pop
rdtsc
shrl
sub
imulb
lret
mov
lods
fsubrl
push
push
in
call
dec
arpl
stos
leave
mov
ret
inc
pop
andl
gs
xchg
jmp
pushf
xchg
adc
orb
out
das
mov
push
dec
fdivrs
fimull
mov
inc
adc
add
test
adc
int3
out
xchg
xchg
sub
mov
jno
repz
mov
push
push
out
and
dec
out
push
jb
imull
push
jp
push
pop
imul
mov
sub
iret
mov
sub
mov
lcall
sbb
mov
cld
out
pop
cmpsb
sbb
sub
out
adcb
daa
in
das
push
push
data16
hlt
mov
xchg
mov
cmpb
and
pop
pop
push
dec
inc
enter
fidivs
rcll
jne
pop
dec
iret
or
inc
into
ret
aad
xor
mov
shrb
inc
add
add
add
mov
push
icebp
cmp
mov
ljmp
xor
into
loop
repnz
add
cmc
adc
and
or
cmp
sahf
call
lds
lret
push
ret
les
sbb
imul
pop
jmp
mov
out
and
push
inc
test
addr16
xbegin
das
push
sbb
out
ds
in
cld
cmp
mov
and
mov
daa
sbb
rclb
sub
inc
imul
push
movsb
dec
mov
mov
mov
lcall
jmp
sahf
test
push
testb
imul
xor
das
jecxz
dec
xchg
add
or
xchg
add
movsb
cwtl
jne
lea
nop
dec
jge
fs
push
pushf
xchg
pop
sub
js
and
cld
cmp
xlat
sahf
jns
fs
das
sub
push
jo
jbe
ds
aas
test
add
jmp
add
testb
lods
xchg
add
je
fs
and
rcll
xchg
sub
loop
fs
or
nop
sbb
pop
hlt
xor
neg
stos
incl
jno
test
and
dec
add
xlat
roll
enter
mov
xchg
call
dec
lods
jns
lea
repz
mov
mov
push
clc
push
pop
adc
stos
adc
ds
inc
leave
push
in
cmc
loop
pop
mov
sub
fidivs
xchg
movsb
and
pop
insl
jmp
lea
mov
stos
mov
pop
divb
andl
mov
imul
sahf
push
and
orl
je
out
xchg
rolb
mov
pop
jp
roll
cmp
sub
mov
inc
jl
lea
popa
jns
push
inc
hlt
xor
pop
xor
mov
jb
out
lcall
push
je
test
shl
xor
lods
jp
push
das
push
scas
mov
mov
mov
mov
in
cmp
orl
mov
mov
cmpsb
xchg
sahf
dec
std
cmpsb
cli
out
lret
xor
mov
jge
scas
or
outsb
in
lret
int3
jnp
or
mov
mov
repnz
and
xlat
aas
push
xorb
andb
jp
shl
cmp
rcll
dec
ret
xchg
mov
inc
sbb
push
cmp
or
sbb
push
notl
add
mov
sti
shl
into
xor
mov
jb
cmp
js
or
test
or
mov
adc
cmp
push
xchg
xor
inc
sub
movsl
lea
and
divb
setge
cmpsb
gs
jp
add
in
pop
inc
mov
dec
es
nop
je
xchg
xchg
mov
and
mulb
dec
xchg
xor
repnz
jp
pusha
orl
xchg
pop
sub
nop
std
jl
das
faddl
dec
pusha
shll
push
pushf
mov
sub
cmp
push
mov
mov
pop
aad
bound
cmpsb
clc
push
popf
daa
jbe
jae
in
repnz
xchg
in
xchg
fst
es
add
or
mov
aad
push
cmp
cmp
out
shrl
pop
loopne
and
sahf
push
xchg
mov
and
jmp
xchg
and
loopne
dec
sub
mov
nop
mov
call
adc
lods
and
dec
into
inc
out
es
mov
hlt
sbb
das
jg
jge
inc
int
mov
rsm
mov
mov
add
inc
adc
xor
stos
sbb
sahf
xchg
cmc
xor
sbb
mov
inc
mov
dec
mov
fmull
pushf
test
pop
xchg
sbb
mov
clc
pop
testl
xchg
mov
popa
divb
stos
pop
sub
sbb
add
push
outsb
mov
mov
mov
fists
call
ret
push
cwtl
fwait
push
fimuls
xchg
ret
dec
aas
sub
adcb
pop
jecxz
lea
lahf
xchg
xchg
add
fldenv
shrl
bswap
hlt
sbb
xor
dec
mov
faddl
inc
jae
negl
cmp
jnp
mov
loope
jle
cmp
faddl
xchg
pop
cld
add
fiaddl
pop
cmp
lock
sub
fs
nop
mov
into
mov
lea
and
loope
ret
cli
mov
orl
imul
das
inc
cld
mov
test
ds
pop
cmp
sub
push
in
enter
push
mov
push
cld
or
iret
ret
cli
or
lret
cmp
aad
jle
and
xchg
sub
mov
jge
xchg
mov
in
xchg
push
mov
filds
or
sub
mov
xor
sbb
xor
add
push
loopne
dec
lods
fisubrl
rcll
cmp
insl
pop
sbb
xchg
cmpsl
sub
mov
dec
int3
sti
js
push
sahf
mov
or
dec
aas
jp
iret
nop
aad
mov
cltd
sub
ficomps
inc
jae
cmp
inc
and
subl
and
push
mov
inc
inc
dec
mov
xchg
stc
mov
orb
scas
cmp
imul
push
movsb
scas
mov
lds
in
sbb
mov
mov
sbb
test
xor
negl
sbb
ret
add
mov
cld
xor
fdivrs
cltd
rcrl
out
or
shll
enter
insl
mov
cmp
rorl
xchg
test
mov
xchg
insl
xchg
adc
outsl
mov
jo
mov
std
cmpsl
mov
or
nop
lds
aam
fiadds
hlt
fwait
inc
leave
mov
rclb
jae
outsl
adc
push
es
or
or
sbb
sbb
sub
or
sbb
xor
jae
cltd
pop
int3
negl
xlat
inc
stos
fs
push
rcrl
loopne
mov
dec
stos
leave
movzbl
mov
sub
cmp
outsl
loopne
ja
sarl
out
mov
inc
nop
mov
jae
orl
ds
or
jge
ret
in
xchg
rorl
push
cmp
test
dec
pop
push
jmp
sbb
sbb
mov
movsl
add
mov
in
sbb
popf
sub
ret
mov
fwait
out
dec
rcrb
decb
xor
and
insl
popf
sarb
aad
mov
jl
ja
lret
stos
xchg
add
out
xor
aad
cmp
test
enter
inc
push
loope
mov
ret
mov
adc
js
shlb
fstl
xchg
and
test
mov
xor
mov
mov
lds
and
pop
mov
sbb
ret
sub
xlat
xor
add
fucomp
xchg
enter
ds
lret
cmp
inc
xchg
push
notl
xchg
fwait
cmp
movsl
pushf
fucom
cmc
xlat
xchg
push
in
inc
jb
in
rorl
shrl
sbb
mov
push
jle
xchg
mov
scas
sarb
fstpt
mov
or
push
std
xchg
fistps
mov
xor
or
or
mov
sbb
mov
mov
push
imul
dec
js
call
sbb
cmp
mov
xchg
stc
or
inc
mov
inc
bound
lcall
lods
test
lahf
test
cmc
adc
mov
mov
fildl
mov
stos
cmpsw
xor
sub
addr16
das
jno
dec
repz
and
mov
in
push
dec
inc
fistpl
pop
daa
push
les
add
add
jbe
xor
jge
cli
lds
scas
jmp
adc
outsl
xor
pop
sub
mov
das
loopne
pop
dec
inc
outsl
cli
mov
or
push
jp
mov
inc
in
dec
jne
cli
inc
xchg
xchg
lock
lret
out
pop
pusha
inc
jl
cmp
adc
lcall
jge
or
jecxz
shrl
jb
mov
jo
lcall
je
sar
cmp
mov
insb
lock
add
sbb
loop
or
jge
jbe
mov
pop
pop
cmp
rclb
adc
xlat
stos
insl
xlat
or
cmp
pop
mov
sbb
fdivrl
jp
mov
stc
into
fwait
cmc
push
sub
fnsave
dec
lcall
mov
out
xor
inc
les
cmp
push
add
push
mov
mov
or
xor
cmp
incl
mov
sahf
js
inc
test
fs
or
inc
mov
jp
cmc
lods
mov
stc
ret
pop
pop
and
and
daa
gs
sub
push
dec
xor
push
dec
and
or
std
icebp
push
mov
mov
inc
call
sbb
sbb
es
sub
pop
dec
mov
jle
rcrb
jbe
stos
lods
repz
adc
mull
and
xor
cmc
mov
je
test
dec
into
push
adc
arpl
movl
sub
inc
push
das
mov
push
mov
cwtl
pushf
in
rcrb
int
inc
clc
mov
rcr
rcrb
imull
push
jl
sbbb
jge
cli
mov
cli
psubq
dec
mov
or
mov
scas
sbb
loop
pop
test
pop
sbb
dec
xchg
mov
lahf
push
out
dec
xor
xlat
and
sbb
sbb
je
push
mov
cs
stos
imul
outsb
out
test
adc
leave
inc
pushl
xor
pop
sub
jmp
dec
dec
rorl
xor
mov
pop
out
fwait
pushf
imul
popa
stos
iret
add
push
out
pop
adcb
stos
aad
jecxz
jno
mov
lea
mov
adc
out
stos
bound
repz
xchg
sbb
cmp
cli
mov
icebp
iret
or
add
or
outsb
mov
and
push
or
xchg
adcl
lret
xor
sbb
jmp
cmp
add
es
sub
pop
cwtl
push
clc
incl
rcl
repz
cmc
mov
jbe
das
push
data16
ljmp
pop
fwait
adc
pusha
gs
pmulhw
dec
or
je
invd
paddd
xlat
cmp
imulb
mov
mov
add
xchg
pop
inc
jp
pop
adc
paddusw
call
scas
gs
push
pop
sub
stos
and
cmp
sbb
jno
add
in
mov
inc
cmp
pop
lret
loopne
hlt
in
pop
pop
fmull
aaa
in
xchg
mov
iret
add
xchg
fldenv
adc
cmp
adc
push
add
repnz
aam
dec
mov
mov
rclb
outsb
mov
jle
push
add
jne
cmpsb
dec
cwtl
sti
test
into
jecxz
mov
pop
enter
int3
adc
mov
mov
cmp
or
in
push
push
sub
sar
mov
mov
push
sbbl
push
adc
inc
mov
dec
cltd
stos
xor
or
add
mov
xchg
out
pop
in
push
add
push
and
aam
or
mov
jnp
enter
test
icebp
outsb
lods
lret
pop
test
enter
dec
pop
int3
pop
push
mov
xchg
inc
cmp
scas
push
mov
fmulp
ljmp
xchg
pop
mov
xchg
adc
pop
mov
test
and
add
loop
shr
enter
add
fiadds
pop
fs
rclb
mov
insb
fwait
aaa
adc
lock
xor
mov
dec
add
mov
mov
pcmpeqw
ja
mov
pop
xor
xor
adc
or
push
pop
pop
into
sub
pop
xchg
jno
pop
push
xchg
xchg
push
and
cmpsl
gs
insl
mov
mov
dec
int
je
test
jmp
cmp
sub
pop
test
bnd
adcb
gs
pop
stos
pop
mov
add
or
mov
stc
inc
fbld
insl
cmp
mov
popf
sub
fldl
jbe
mov
mov
imulb
lods
int
push
hlt
das
lea
and
and
or
sub
jge
lret
out
inc
arpl
pop
mov
or
mov
dec
out
in
and
cmp
push
dec
flds
iret
stc
sbb
outsl
aad
fnsave
mov
mov
adc
fdivp
lea
dec
sub
inc
loopne
dec
inc
push
in
out
pop
add
xchg
sbb
add
mov
scas
mov
dec
cmp
jo
xchg
mov
or
sbb
and
es
adc
aam
pop
push
adc
xor
imul
sub
jp
cmpsb
xchg
dec
pop
cmpsb
jne
add
addr16
nop
and
cmc
jp
jmp
fisttpl
sub
adc
nop
mov
stos
or
lcall
push
mov
mov
xchg
jp
sbb
addl
sbb
add
xor
inc
fstpl
pand
pop
add
add
pop
and
mov
xchg
je
jo
ljmp
repz
mov
mov
xchg
sub
sahf
fs
fstl
sub
mov
xchg
and
mov
adcl
mov
cmp
lock
mov
push
in
dec
xchg
xor
or
push
fs
clc
fwait
movsb
sbb
pop
out
pushf
inc
lods
push
aas
inc
jo
xorl
jmp
clc
imul
sbb
mov
daa
xchg
xchg
lock
mov
shlb
hlt
test
sbb
daa
lret
loopne
iret
jb
ret
sti
dec
int
mov
add
mov
nop
mov
push
shll
das
jecxz
addr16
sbb
lcall
subb
mov
jle
mov
sbbb
sbb
pop
adc
call
jp
inc
xchg
adc
pop
jnp
add
adc
int
xor
jo
mov
cmp
testb
jb
ss
out
jno
dec
iret
or
cmp
jge
int
into
mov
jg
stc
sub
cltd
and
sub
push
in
pop
addr16
loope
cmpsb
mov
pop
loopne
imul
mov
jmp
cmp
aaa
rorl
paddusb
rol
js
add
push
jae
push
lds
sbb
sar
dec
jbe
xchg
sub
int
add
sub
xchg
fs
ret
lods
xchg
mov
fldcw
loop
ljmp
add
scas
je
mov
ljmp
xchg
mov
dec
data16
lock
mov
and
aaa
repnz
pop
pusha
add
cltd
add
cld
dec
inc
cmp
jg
jo
outsb
nop
in
add
sub
mov
scas
lahf
lea
inc
fstps
icebp
vmwrite
inc
xchg
rcrb
fxam
loope
dec
jl
and
mov
sub
xlat
sbbb
aaa
xor
adc
push
imul
fisubrs
jl
mov
stos
inc
arpl
add
or
push
dec
popw
lahf
popf
enter
aaa
in
aas
nop
mov
scas
mov
repnz
inc
mov
mov
push
fmulp
add
sahf
sbb
dec
pop
pop
add
xor
mov
out
icebp
add
inc
add
test
dec
ret
lcall
outsl
movsb
adc
imul
loop
inc
sbb
push
aam
or
add
push
jle
scas
cmp
adc
pop
data16
mov
popa
pop
mov
xchg
jbe
jge
adc
adc
inc
mov
cmpsl
in
shll
mov
stos
inc
cmpsb
push
leave
jle
cmp
ja
loop
jns
mov
push
lcall
fnstsw
sbb
mov
mov
leave
xor
popf
fdivr
mov
dec
out
and
inc
inc
and
add
mov
mov
lret
mov
xor
shlb
jns
andb
mov
sbb
ja
iret
out
cli
sbb
lahf
add
std
pop
insb
or
lods
stos
pop
sub
mov
sub
cs
cli
inc
aaa
fstpt
add
xchg
pop
mov
xchg
shll
xor
xor
mov
lret
dec
test
js
cmp
xlat
pop
mov
aam
adc
adc
sbb
mov
mov
lods
cwtl
mov
popa
call
adcl
das
mov
mov
add
lods
xchg
jb
jno
pop
xchg
add
push
mov
sub
dec
out
icebp
push
push
and
call
lock
sub
in
les
sbbb
aaa
dec
and
xchg
call
jno
push
ja
mov
jg
jg
ljmp
test
mov
ljmp
out
xchg
outsb
inc
test
push
out
ror
aad
or
je
cmp
out
out
pop
mov
sub
push
ss
adc
mov
nop
pop
out
push
mov
mov
idivb
sahf
mov
sub
cmp
push
jmp
leave
pop
shrb
inc
dec
les
fisttps
in
xchg
push
je
shr
mov
mov
push
in
or
mov
ret
dec
sub
mov
xor
xchg
or
inc
jg
mov
sub
in
jmp
mov
add
shrl
cmc
and
popa
and
cmp
lret
push
fwait
adc
sub
test
pop
mov
lock
arpl
sub
jbe
xlat
dec
mov
pop
mov
xor
mov
in
and
fistpl
pop
pop
jb
sbb
repz
sahf
out
movsb
cs
xchg
lock
imul
xor
loopne
push
sbb
dec
mov
xchg
pop
add
jmp
ja
fwait
sti
movsb
andb
fisttpl
mov
arpl
add
fdivrs
repnz
mov
mov
jle
jne
stc
imulb
xor
scas
je
mov
testb
add
pop
es
fidivs
sub
iret
daa
mov
xchg
popf
arpl
sbb
sbb
push
cltd
fbstp
mov
sub
mov
push
es
push
pop
movsl
cmp
cmpb
sbb
lock
mov
pop
mov
jp
sub
inc
call
fidivrs
jecxz
lds
lahf
pop
shlb
jo
jle
cs
xchg
test
stos
push
mov
mov
push
iret
cwtl
stc
mov
add
jp
iret
or
jne
cmpsb
push
insl
push
xchg
pushf
push
mov
in
dec
mov
xchg
out
pop
adc
mov
jl
insb
out
cpuid
sysret
mov
inc
pop
andl
aam
dec
test
in
jmp
or
jb
cmp
adc
xchg
mov
push
icebp
adc
adc
not
push
loope
mov
push
sahf
andb
mov
lcall
and
repz
sub
in
or
mov
xchg
pop
test
cmp
insb
cs
and
aad
mov
mov
idivb
loopne
js
outsl
rol
int3
cmpsb
incl
popf
adc
pinsrw
shlb
mov
inc
nop
fs
xchg
insb
pop
pop
push
test
fldenv
adc
ret
push
loope
dec
mov
mov
aas
stos
out
insb
jp
loope
xchg
add
mov
cmpsb
inc
pop
cmp
inc
push
pop
add
adc
andb
jae
mov
in
xor
jb
adc
adc
xchg
cmpsl
cs
int3
and
decb
push
cltd
adc
out
bound
push
jo
ret
lret
xchg
mov
mov
or
outsl
dec
jecxz
jmp
push
push
into
adc
out
adc
sti
dec
pop
pop
rcrb
dec
aaa
xchg
inc
inc
mov
mov
mov
lcall
repnz
cld
dec
jns
add
aad
mov
idiv
inc
movsb
mov
in
ljmp
xlat
sti
push
fcmovnb
loop
inc
push
data16
pop
insl
scas
cs
shlb
push
dec
subb
imul
ja
or
push
xor
stos
pop
mov
mov
stos
pop
jl
mov
rorl
aad
add
pop
add
and
add
dec
clts
test
fistl
leave
jae
mov
dec
pop
stos
into
add
out
adc
or
cmp
mov
and
jecxz
lea
imul
imul
and
lahf
data16
stc
pop
cmp
dec
add
push
incb
test
into
rcr
fldl
ds
call
add
lods
push
jnp
popa
ficoml
jge
and
jbe
xchg
mov
shr
insb
sub
mov
jge
loope
popa
ja
imul
pop
es
outsl
pop
jl
push
push
xor
or
enter
clc
dec
iret
mov
mov
mov
outsl
sub
adc
sbb
loope
jle
fs
lods
sbbl
mov
sbb
add
xor
das
fwait
push
sbb
fistpl
mov
rcll
cmp
js
cmp
adc
pop
mov
xchg
icebp
enter
fdivrp
stos
in
jo
mov
mov
adc
inc
mov
mov
into
dec
and
sub
jnp
loopne
sbb
or
data16
out
sbb
or
aad
ds
fwait
mov
sbb
xchg
jmp
repz
call
loope
lcall
hlt
test
imul
jle
and
sahf
fdivrs
inc
cmc
repnz
mov
std
jbe
sbb
roll
push
loop
pop
gs
pop
mov
popa
inc
xchg
pop
dec
movsl
iret
cmpsl
mov
mov
outsb
pop
loop
adc
mov
decb
lock
sahf
jnp
xchg
push
pop
mov
mov
bound
jae
xlat
aam
jge
cmp
add
xchg
cltd
adc
insl
adc
leave
bound
int3
sub
out
sbb
or
andl
pop
cmp
and
jg
mov
push
jecxz
repnz
sub
arpl
mov
js
or
mov
xor
xchg
in
repz
xchg
pushf
mov
push
cli
mov
cli
inc
jno
sbbb
push
jle
ss
test
aad
repnz
jecxz
lret
nop
pop
mov
aas
scas
sbb
fsqrt
ljmp
je
jle
arpl
jecxz
mov
fcom
jae
std
leave
int3
in
mov
scas
or
cmc
or
imul
cmp
into
dec
jge
scas
jne
in
sub
mov
jl
mov
loopne
ljmp
inc
sti
shl
inc
in
aaa
hlt
scas
call
pushf
jno
xlat
lds
xorl
xor
or
adc
out
cmp
jp
mov
sbb
xorl
or
popf
outsl
pop
xor
lret
xchg
mov
shrb
mov
lahf
outsl
shlb
bnd
cltd
lods
jne
into
fwait
dec
push
mov
mov
cmpsb
packsswb
mov
adc
jl
mov
jno
sbb
cli
test
loop
cmpsb
mov
ljmp
dec
inc
bound
mov
pop
pusha
not
xor
push
mov
sbb
mov
aaa
out
gs
cmpsb
mov
in
flds
shl
cltd
clc
inc
lea
xchg
js
xchg
sarl
test
xlat
cmc
les
jl
mov
xor
jbe
flds
mov
insb
ss
arpl
orl
pop
test
add
into
stos
sub
push
mov
dec
adc
dec
xchg
mov
pop
sbb
test
ljmp
enter
xor
les
pop
repz
dec
mov
and
ret
mov
sub
sbb
je
dec
jmp
fdivl
fsts
inc
cmp
sub
fsubs
inc
sub
cli
push
icebp
pop
aas
outsl
sub
nop
and
add
pop
daa
loope
shrl
fidivrs
inc
daa
adc
dec
lods
dec
lcall
rcl
pop
mov
mov
mov
dec
jo
icebp
push
scas
lret
rorl
fwait
push
orb
jl
mov
cld
rdmsr
fildll
pop
push
push
jmp
and
pop
fcoml
xor
or
stos
add
hlt
mov
movsl
xor
testb
sub
imul
roll
mov
test
pop
push
fsubr
arpl
lcall
sbb
cmpsb
les
fdivr
loopne
test
inc
shrl
rorl
or
pop
or
adc
popa
jp
push
leave
cmpsl
adc
negl
or
adc
jbe
daa
lods
je
or
scas
mov
lret
movl
xchg
loope
lods
sbb
insb
ss
jge
outsl
and
popa
add
adc
mov
adc
xchg
jg
pop
mov
xchg
sbb
cmp
data16
xchg
nop
pushf
add
inc
dec
nop
fwait
add
stos
mov
or
iret
jo
mov
pop
and
das
xchg
dec
scas
sub
into
into
inc
push
cmp
xchg
sub
lea
jge
cli
push
jns
push
dec
sub
cli
ret
jbe
cmp
lods
mov
or
fisubs
idiv
aam
jae
jb
push
mov
push
push
sarb
daa
mov
stos
cld
push
fstl
nop
and
popa
dec
jbe
fs
mov
mov
pop
movsb
jge
sbbl
stos
jbe
inc
jge
cmp
hlt
cmp
sti
fwait
or
push
hlt
ficompl
pushf
mov
rol
mov
fsubp
stos
cmp
push
and
ret
lock
pop
test
daa
jp
mov
push
pop
fidivs
mov
push
sub
shlb
fs
pop
repz
insl
sub
loope
mov
pop
xchg
xor
inc
sbb
xchg
jecxz
cmpsl
int
cmp
jge
push
std
pusha
js
imul
cmpsl
inc
arpl
dec
add
mov
cmc
xor
mov
fnstenv
mov
dec
or
fcompp
sub
xor
jnp
aam
dec
mov
inc
ficoml
jg
fs
mov
mov
adc
xor
dec
clc
and
mov
xchg
jle
aas
push
clc
mov
cmc
sub
cmpsb
pop
mov
mov
shrl
pop
test
cmp
jns
pop
imul
scas
mov
data16
es
dec
dec
ss
jns
mov
add
jmp
mov
rorb
nop
cltd
jbe
push
cmpsl
gs
xlat
mov
cwtl
je
push
scas
addr16
push
mov
and
inc
aam
cmpl
mov
clc
jl
jge
adc
cmp
inc
lahf
push
shrl
push
and
lret
jmp
fisubrl
out
les
imul
js
dec
loopne
hlt
pop
je
sbb
imul
sub
jle
out
or
sub
cmp
scas
cmp
dec
jmp
adc
cmp
lods
callw
cld
popf
xor
add
jmp
mov
cwtl
xlat
jns
hlt
andb
dec
test
mov
fnstsw
dec
mov
inc
fcomip
test
push
mov
jl
cmp
bound
ss
enter
push
repnz
div
out
sub
push
subps
sub
ds
jg
arpl
dec
ficoms
cmpsb
sub
jne
xlat
sbb
imul
fstl
sub
sahf
lret
in
and
sbb
lods
fdivrs
xor
repnz
movsb
outsl
mov
jnp
sbb
frstor
pop
adc
xor
add
push
outsb
pop
sub
cmpsb
sahf
imulb
cmp
stos
sub
out
arpl
fstpt
cmp
mov
popa
es
mov
cmpsb
mov
pop
add
xchg
add
pop
es
insb
divl
or
jo
mov
pop
ljmp
xor
iret
stos
xlat
data16
adc
adc
out
je
fwait
mov
dec
mov
inc
fs
mov
cli
pop
hlt
movsb
jmp
add
jo
xchg
dec
xor
push
cmpsl
cwtl
nop
out
hlt
out
lock
xchg
adc
adc
xor
clc
sub
push
mov
adc
adc
cwtl
cmp
insl
push
insb
ljmp
and
and
inc
lcall
stos
repnz
es
lahf
sbb
das
sahf
push
jecxz
jmp
jnp
hlt
sub
loopne
xchg
xor
mov
ljmp
sbb
enter
fsts
cmpsb
sarl
addb
repnz
add
shl
addr16
add
cmc
mov
cmp
adc
shlb
sub
cs
clc
iret
repnz
call
xor
popa
pushf
and
cwtl
mov
sub
mov
or
sub
int
jmp
jb
mov
xor
mov
cmp
inc
ret
push
loopne
out
adcl
jns
mov
call
jbe
dec
xchg
xlat
mov
xorb
jb
inc
je
data16
or
push
cs
in
loope
inc
in
mov
push
shlb
mov
movsb
mov
mov
pop
xchg
arpl
sbb
sub
push
daa
ds
pushf
out
or
sbb
daa
daa
push
in
pushf
cwtl
adc
addr16
leave
push
test
ret
ja
in
addr16
sub
ds
cltd
test
sbb
movsl
lock
dec
fwait
int3
fneni(8087
je
in
mov
cltd
addr16
lds
fistps
aam
lods
mov
movsl
jmp
push
xor
xchg
pop
enter
mov
cmp
sbb
adc
out
or
sub
lds
xchg
daa
fidivrl
inc
ja
leave
cmp
je
jg
ss
or
ss
xchg
mov
jo
sahf
inc
mov
mov
inc
nop
addr16
fisttps
adc
pusha
imul
sub
je,pn
dec
mov
popf
jp
cmp
jne
scas
xchg
notl
insl
cld
pushaw
add
mov
pop
jno
mov
sbb
xor
xchg
xlat
call
stos
inc
add
pop
pop
push
mov
sahf
mov
xor
insl
mov
testb
jae
add
cmc
movl
out
rorl
cmpsl
cmc
insb
test
inc
rorb
nop
pop
and
add
dec
lcall
imul
mov
loop
jg
add
cmp
ss
pop
sbb
sbb
in
lcall
ss
mov
jb
nop
call
mov
sub
repnz
xor
fisubrs
outsb
jmp
adc
shrl
or
into
rcl
loopne
test
jnp
mov
pop
push
out
cmp
fucomi
sbb
mov
pop
cmp
fistps
nop
out
add
shl
sub
jne
int3
sbb
mov
sub
and
std
add
in
dec
inc
or
adc
sub
xchg
subb
mov
dec
and
or
scas
pop
ja
loop
push
nop
lcall
in
out
stos
fisttpl
dec
bound
adc
popa
out
mov
xor
scas
xor
jg
sub
adc
clc
scas
xor
das
gs
cmp
mov
dec
in
ret
adc
aad
movsl
xor
addr16
out
mov
pop
push
cli
in
inc
or
cmpsb
sti
jecxz
and
mov
mov
sbb
sbb
pop
jmp
xor
rcrl
mov
jo
fistpll
push
aad
dec
test
dec
stc
xchg
adc
lcall
mov
mov
jnp
dec
loopne
push
scas
es
cwtl
sub
lret
cld
push
dec
dec
rol
dec
mov
popf
cmp
mov
pushf
sarl
stos
or
mov
cwtl
loop
popa
fsubl
stc
add
mov
xchg
sbb
shrl
mov
aaa
jp
mov
push
jecxz
push
sti
idiv
mov
aas
jmp
jmp
subb
scas
out
inc
roll
push
and
inc
cmp
ret
ficoml
push
mov
sbb
sub
addb
lods
je
rorl
dec
push
or
cs
sbb
adc
pop
inc
xchg
dec
push
call
and
imul
jbe
cmovns
xor
mov
stc
cld
movsl
stc
mov
loope
jnp
int3
inc
sub
adc
std
cmpsl
pop
les
or
or
pop
inc
outsl
inc
lods
jg
cmpl
fcompp
int3
shll
dec
sub
push
mov
or
dec
jb
out
nop
rcll
or
or
divl
call
xchg
jne
fisubl
test
popa
nop
push
add
jp
jbe
push
pop
repz
sub
out
jbe
pop
adc
push
add
out
jle
xor
adc
aam
inc
jge
loopne
add
lsl
aas
das
jecxz
movsl
into
into
sub
jo
fs
cs
cmpsb
add
int
xchg
mov
mov
int
int
add
xor
arpl
mov
movsb
mov
ljmp
mov
rcll
dec
mov
mov
xor
lods
enter
mov
mov
fldenv
es
sahf
test
sbb
xor
mov
popa
mov
sti
add
dec
xlat
sti
in
div
outsb
outsb
aam
inc
mov
in
sbb
hlt
imul
and
out
pusha
or
jg
vsubpd
fs
push
cli
mov
pop
jg
data16
mov
sub
inc
bound
push
xchg
jecxz
inc
sarb
push
aam
mov
lock
pushf
push
iret
ret
stos
lods
sub
jl
or
pop
push
pushf
jg
pop
jb
rol
mov
adc
lea
dec
cmp
icebp
push
mov
movb
shr
pop
dec
leave
inc
icebp
lcall
pusha
xchg
lahf
das
mov
inc
and
mov
push
jo
push
jmp
cwtl
and
mov
mov
jbe
adc
je
cmp
dec
and
popa
dec
mov
or
icebp
cmc
outsl
std
mov
fdivl
adc
mov
pusha
clc
dec
stos
and
bnd
test
jecxz
test
fcoml
or
dec
je
and
mov
pop
pop
adc
shl
push
mov
mov
mov
xchg
sbb
xor
xor
aad
push
cmp
loop
jp
mov
fimull
mov
push
movsl
adc
jmp
pop
cmp
jp
adc
push
or
jge
dec
mov
out
sub
pop
fdivl
inc
inc
fsub
fdivl
sbb
push
inc
mov
shll
jge
ret
scas
adc
mov
or
cltd
xor
sub
dec
gs
sbbl
mov
adc
adc
stos
mov
shll
and
mov
pop
adc
xor
mov
mov
movsl
inc
xchg
mul
cmc
cmpsb
daa
out
neg
xchg
pop
adc
sti
sub
pop
and
outsb
out
push
out
dec
sbb
pop
stos
out
cmp
jnp
push
or
push
insl
mov
ljmp
mov
in
mov
adc
push
adc
dec
and
xchg
dec
arpl
xchg
in
and
int
inc
inc
aas
loop
adc
inc
out
pop
xrstor
das
pop
lret
jno
sub
jno
rorb
cmp
adc
and
jmp
cli
pop
out
icebp
arpl
test
nop
out
jo
roll
add
pop
adcl
or
and
xchg
insb
push
mov
clc
jne
in
or
push
cmp
push
jbe
movsl
fisttpll
aaa
mov
sub
test
enter
xor
adc
lret
jo
cmp
sub
xor
sub
lock
sub
sbb
push
xchg
jg
dec
cltd
stos
arpl
pop
or
and
std
mov
pop
add
mov
stc
pop
add
das
lret
orb
xor
imul
sarl
mov
aas
les
mov
and
movsl
mov
push
pop
int3
xchg
or
push
pslld
inc
fcmovu
mov
add
jmp
jp
adc
mov
adc
out
ds
lds
xchg
push
imul
stos
sub
push
sti
push
jnp
fcoml
shl
cli
testl
ror
sti
inc
call
out
add
push
mov
or
in
pop
loope
cmc
in
ret
popf
mov
mov
xor
push
jl
roll
iret
mov
mov
dec
sub
mov
adc
imul
stos
jmp
call
mov
popf
mov
xchg
push
pushl
hlt
aad
loope
in
jae
test
adc
xor
int3
into
add
insl
push
daa
sar
gs
jns
mov
xchg
fcmovu
jp
icebp
mov
xor
fiaddl
les
jne
in
xor
insb
mov
inc
xor
out
jg
pop
inc
js
les
stos
stc
cmpsb
cmp
fucom
inc
out
mov
daa
clc
popa
rorl
out
mov
sbb
pop
pop
bound
sbb
push
cmpb
mov
adc
sti
xchg
inc
sbb
pop
lock
sti
dec
daa
test
xchg
xlat
pop
movsl
push
imul
outsb
hlt
lods
data16
repz
mov
jecxz
scas
inc
push
les
cli
add
jno
sbb
push
cmc
mov
sbb
add
adc
or
repnz
dec
fldl
add
std
aaa
inc
cmpsl
int3
inc
sbbb
add
enter
fdivl
pusha
mov
iret
push
dec
rcll
xchg
or
dec
enter
lahf
sbbl
jno
push
ficompl
xchg
jge
sbb
clc
les
adc
dec
jo
pushf
mov
push
dec
adc
fnstcw
mov
inc
pop
add
lahf
jo
fcom
stos
and
cmp
ds
es
pop
mov
mov
arpl
xchg
sbb
lahf
pop
ss
and
int
add
popa
push
sbb
adc
xor
enter
out
insl
sarl
shl
push
xor
insb
inc
add
out
sub
shll
push
fsubl
mov
ljmp
dec
popa
or
sub
rcr
lock
mov
cltd
xchg
faddp
mov
mov
enter
into
lret
jge
pop
xor
push
ja
pop
add
pusha
loope
rorb
cli
mov
lods
mov
sub
out
mov
dec
popf
add
pushf
test
lcall
ja
sub
popa
test
lods
lret
iret
cltd
dec
jnp,pn
lock
je
jns
mov
pop
jb
xchg
das
stc
mov
cmpsb
pop
adc
xor
movsb
inc
out
lock
ret
rclb
fsub
jl
fucomip
lds
pop
xor
leave
cmpl
xor
adc
push
fwait
arpl
and
out
dec
pusha
lea
xor
and
arpl
inc
push
insl
stos
cmp
gs
mov
imul
jecxz
ljmp
cmp
xchg
mulb
dec
cmp
outsb
mov
mov
test
pop
xchg
cmp
int3
hlt
mov
lods
and
jecxz
out
test
hlt
fs
adc
orl
loopne
and
cmp
inc
mov
lahf
or
inc
aas
test
movsb
lret
sub
cmp
lret
loope
push
add
cmp
movsl
shr
pop
mov
inc
inc
jl
fwait
gs
sbb
mov
aas
ret
sub
je
push
loope
imul
mov
scas
out
fimuls
push
pop
xchg
xchg
pop
clc
push
xorl
shlb
xchg
inc
stos
mov
and
or
sub
cmp
cmpsb
dec
imul
fdivr
add
xchg
leave
and
xor
sbb
mov
mov
test
mov
js
ja
insl
sti
cld
adc
rolb
out
sub
push
test
test
dec
push
mov
insb
cmp
xchg
icebp
jae
popa
pop
je
xchg
sub
mov
sub
aaa
je
add
push
and
dec
and
lock
sarb
pusha
jp
dec
cmp
or
jae
stc
jns
dec
out
stos
fistpl
add
dec
test
dec
adc
rorl
lret
mov
jb
mov
jbe
pop
shll
xlat
push
jge
add
ret
rdmsr
imul
roll
pop
and
push
out
int3
sbb
or
sbb
jne
dec
sti
stos
xor
add
scas
movsb
mov
sar
mov
test
rclb
enter
pusha
int
das
cmpsl
push
in
shrb
mov
ss
outsb
adc
inc
xchg
cltd
jle
fmull
rclb
sub
test
mov
andl
xchg
dec
addb
hlt
cwtl
jne
mov
add
dec
call
js
test
sbb
in
sub
adc
clc
xor
inc
jle
aas
xchg
testl
mov
xorb
or
jp
aam
pop
push
lock
fcompl
cmp
pushf
int
repz
xchg
aam
sbb
and
push
inc
bound
inc
shrb
cmc
jge
sahf
jne
arpl
sbb
pop
divb
enter
add
mov
pop
lret
popf
insl
add
les
lock
jb
mov
movsb
dec
mov
or
clc
inc
push
mov
stos
inc
cmpl
movsb
mov
rcr
xor
push
cmp
add
in
jge
sbb
push
popf
stos
xchg
fs
cli
xchg
filds
mov
scas
jp
inc
and
mov
ss
addr16
lods
bound
jns
add
inc
push
mov
rolb
stos
inc
add
or
adc
lret
add
or
pop
cmpb
jecxz
push
push
add
and
pushf
mov
fisubrl
jns
adc
in
sti
lea
sti
adc
je
xchg
pop
pop
cmp
outsl
shl
jns
pop
pop
fists
clc
push
jbe
mov
fxtract
lds
pop
add
lea
ret
fstps
dec
xor
mov
mov
scas
push
pop
sub
loopne
fisubs
dec
mov
xchg
cmpl
push
xor
test
nop
inc
mov
mov
xchg
arpl
std
mov
ljmp
adc
and
mov
loopne
push
fcomi
insb
fnstcw
mov
mov
mov
cmp
and
das
and
jp
jo
clc
insl
push
div
cmp
lcall
sti
push
cwtl
mov
push
bound
mov
ss
scas
mov
inc
testb
sbb
cmpsb
dec
daa
and
sbb
xchg
nop
adc
stos
rcrl
ret
out
dec
dec
xchg
es
inc
repz
adc
or
jne
xlat
loope
lcall
jno
mov
push
sbb
ror
cmp
lds
loop
pop
ds
inc
mov
imul
jmp
pop
stos
xor
insb
lret
xor
or
shr
iret
mov
pop
das
jae
sbb
fs
fisttpll
jmp
push
jmp
mov
mov
push
sub
jmp
nop
enter
cld
in
push
adc
xor
jmp
test
sbb
and
cli
stos
aaa
ja
add
mov
cmp
leave
xor
jl
out
push
cmpl
push
in
ljmp
lahf
mov
push
imul
jbe
mov
lods
pop
mov
push
xchg
jecxz
insl
imul
enter
popf
imul
adc
leave
and
bound
sub
inc
push
inc
cmp
popl
lcall
es
mov
adc
outsl
push
out
fwait
adc
stos
pop
cmp
stos
sub
stc
or
xchg
fisubs
cs
neg
xchg
mov
popa
and
ret
or
jg
push
outsb
cmp
pop
aam
fcomp
inc
jns
loop
popw
inc
das
divl
push
stos
inc
xlat
mov
and
push
cmp
dec
stos
cmp
fsubrl
mov
movsl
xor
pop
daa
rolb
jl
adc
sub
loop
jle
addr16
xchg
sub
sbb
dec
add
xchg
xor
je
mov
mov
jb
xor
scas
mov
lods
and
cld
or
lea
adc
mov
mov
cs
lods
les
imul
fdivrl
call
int3
inc
or
xchg
mov
cltd
fisubl
xchg
lock
inc
mov
loopne
mov
push
repz
mov
test
sub
jge
vpsrlw
pop
dec
fistl
daa
cmp
mov
movsb
enter
test
and
pop
mov
ror
mov
daa
stc
or
shl
int
je
cs
mov
pop
jb
sahf
pop
and
repz
pop
ret
aas
jp
sahf
lock
lret
mov
inc
xchg
xchg
test
xorb
sti
rcll
cs
cli
je
aas
nop
outsl
sarb
loopne
fcoms
fdivrp
test
adc
adc
mov
adc
jne
in
js
scas
sbb
imul
jbe
mov
lahf
cld
add
add
fwait
inc
nop
out
aam
jno
fistl
je
jmp
mov
divl
add
dec
mov
push
dec
es
pop
popa
cmp
sub
cs
insb
pop
and
call
iret
inc
push
arpl
cmp
cld
bound
repz
std
int3
mov
daa
repz
fucomip
mov
pop
lahf
jge
aad
out
nop
mov
mov
and
insl
imul
repz
push
jmp
or
or
int
mov
cmp
xor
xchg
test
xor
lods
mov
cltd
fcmovb
sahf
scas
mov
push
pop
sbb
xchg
or
and
sub
cmp
iret
mov
icebp
adc
enter
or
add
pop
std
fstps
dec
pop
fs
push
jno
add
sbb
xchg
out
pop
add
nop
inc
push
aam
popf
mov
jnp
jno
push
xchg
ffree
fldl
xchg
out
into
test
mov
dec
jo
mov
lds
loop
mov
pop
or
in
aas
mov
inc
pop
cmp
dec
mov
pop
mov
xchg
addl
js
sbb
push
mov
add
mov
mov
push
adc
pop
inc
sbbb
fcmovbe
ret
mov
not
jo
shll
mov
decl
xchg
adc
push
stos
ret
xor
mov
mov
inc
push
cld
fstl
xchg
in
hlt
adc
sub
add
stos
and
syscall
cs
push
mov
dec
out
mov
sbb
inc
and
out
jle
lea
in
hlt
dec
aas
jnp
mov
int3
or
add
xchg
dec
hlt
loope
mov
sub
push
aas
dec
or
mov
stc
xchg
jmp
sbb
rclb
mov
dec
clc
jecxz
jae
add
lcall
out
push
add
and
popf
enter
lret
cmp
sub
lods
add
mov
repz
sbb
shl
dec
mov
mov
test
lret
mov
xor
push
ret
in
subb
inc
aam
cmp
bound
sub
push
push
dec
aad
sub
test
insl
cmc
arpl
loop
mov
pop
mov
inc
mov
sbbl
mov
aad
jno
jno
inc
mov
xor
enter
pop
sbb
xchg
test
cld
sti
dec
xor
add
adc
fldcw
in
nop
xchg
jno
cwtl
adc
xchg
pop
bound
cmc
subl
in
xchg
pushl
shlb
pop
inc
jl
pop
jl
ja
dec
mov
ss
mov
push
lcall
add
test
push
xchg
add
dec
ja
test
fsts
mov
das
add
decb
stc
scas
mov
aad
adcl
mov
lods
jb
xchg
lods
sbb
and
cmc
jb
aam
mov
push
fucomip
aas
or
fnstcw
and
in
push
sarb
lret
fldcw
addb
push
mov
xor
dec
bound
ret
push
lods
outsb
pop
push
in
lret
mov
mov
ret
or
shl
pop
mov
fimuls
cmp
cltd
imul
jmp
pushf
jle
xorb
in
popa
lea
pop
mov
push
and
hlt
push
dec
push
cltd
pop
xchg
daa
mov
and
clc
sarb
fwait
cli
inc
push
sbb
xlat
or
push
out
or
aaa
dec
orl
sub
imul
jae
cmp
jg
lret
and
fnsave
lcall
cli
lea
cmp
and
mov
rorl
out
fildl
cli
cmpsl
ficomps
cli
add
loopne
enter
sub
push
into
dec
jbe
mov
aam
cltd
shr
xorl
pop
lcall
xor
addr16
std
fbld
sbb
cmpsl
adc
push
popa
iret
push
pop
sti
fistl
sbb
and
sbb
sbb
mov
or
out
mov
es
cld
das
mov
or
leave
mov
pop
fs
adc
push
xabort
cmpsb
sbb
push
or
jbe
in
add
mov
or
mov
inc
inc
jmp
in
adc
sub
dec
or
imul
fcompl
movsb
or
insl
leave
imul
mov
push
pop
mov
add
lds
jo
lds
dec
xchg
adc
inc
loope
jae
enter
das
add
sbb
pop
movsl
arpl
ljmp
mov
orl
fcompl
addr16
fsubl
scas
inc
pop
jae
out
dec
and
sub
incl
lahf
add
roll
mov
add
ret
ficoms
ficoml
loopne
adc
inc
mov
enter
xchg
cmpsl
jnp
insb
hlt
movsl
bound
add
mov
add
das
aad
into
jp
ds
je
jo
lods
lcall
testb
inc
mov
cmp
xor
mov
cmpsl
pop
mov
sahf
std
mov
test
add
inc
push
xorb
out
lock
mov
shrb
add
nop
inc
in
mov
push
fs
pop
bound
lahf
cmp
inc
push
mov
test
mov
xor
arpl
out
loop
cmp
inc
insl
and
mov
xor
repz
fdivrs
stc
int
mov
mov
mov
xor
clc
cmp
push
rcrb
aam
repz
cltd
aam
jge
aaa
push
mov
push
sbb
and
pop
fdivs
cmp
jb
movsl
jo
push
mov
jnp
mov
je
mov
inc
mov
shll
and
addb
lea
mulb
fnsave
adc
das
sbb
stos
jecxz
mov
push
sub
test
dec
push
inc
pop
inc
add
cli
call
mov
jge
jecxz
fiaddl
das
insl
add
add
mov
pop
push
and
cmpsl
push
call
or
ljmp
frstor
and
fisubrs
xchg
test
lds
ss
jnp
pop
test
adc
shlb
jnp
inc
push
imul
dec
mov
popf
adc
cmp
add
in
mov
ret
cld
or
je
fwait
xor
pop
pop
and
gs
mov
push
out
inc
push
sub
in
jae
sbb
push
jge
xlat
adc
loope
clc
adc
xchg
mov
xlat
and
add
pop
lods
xor
pop
mov
mov
mov
push
dec
lds
ror
jmp
lds
andnps
es
clc
out
or
jecxz
fpatan
mov
stc
mov
lret
lds
dec
sub
jnp
sbb
sub
imul
loopne
add
adc
xchg
mov
sub
inc
mov
jno
fists
ret
icebp
jae
mov
inc
mov
add
gs
fldz
jmp
fwait
push
push
pcmpgtd
jp
decb
cmpsl
insl
xchg
arpl
mov
icebp
lcall
notb
inc
push
fnstenv
shlb
fdiv
in
andl
call
mov
push
jne
dec
xlat
mov
or
lock
das
xor
ror
inc
outsl
fistps
fstpt
xchg
jmp
nop
bound
pop
pushf
js
pop
ljmp
hlt
lahf
mov
daa
pusha
pop
sti
cli
stos
dec
xlat
xor
aaa
xor
mull
and
int3
xchg
cli
jmp
cltd
jecxz
icebp
arpl
data16
cwtl
add
cmpsl
pop
jg
cld
inc
dec
adc
mov
push
out
add
mov
xchg
test
aas
test
and
mov
std
and
fldl
inc
call
push
adc
adc
mov
fwait
sbb
pop
or
ret
cmp
stos
ret
lods
sub
mov
addl
inc
jnp
test
mov
addr16
sarl
pop
sti
in
leave
fdivrl
or
popf
jle
or
add
jecxz
jo,pn
enter
mov
or
ljmp
les
dec
mov
push
lret
mov
popa
mov
push
fiaddl
cltd
inc
jp
or
test
adc
sbb
and
jne
jo
stc
sbb
push
cmc
pop
lds
lds
stos
pop
push
jae
enter
sub
out
or
enter
add
dec
in
sub
aaa
dec
push
sbb
or
pop
in
mov
mov
cmp
jns
call
hlt
pop
add
ljmp
mov
push
sti
xor
shl
mov
mov
lods
push
pop
pop
call
test
imul
mov
sub
pop
jp
sbb
push
jae
push
loopne
push
inc
in
ljmp
pop
lcall
or
mov
or
jle
leave
pop
fistpl
cli
sbb
into
cmp
push
push
outsb
push
in
cli
inc
xchg
mov
or
gs
and
fsubs
ljmp
cmp
popa
and
dec
stos
inc
cmp
bound
xchg
pop
mov
xchg
stc
push
out
sbb
inc
fldt
test
fstps
das
lcall
xchg
fnstenv
pop
andb
repz
cltd
mov
xlat
dec
xchg
mov
add
lahf
out
and
sbb
and
dec
adc
icebp
in
fidivs
dec
test
loop
sub
jmp
and
push
popa
int
test
cmp
jne
je
popa
add
jns
jb
outsb
mov
cltd
ljmp
addl
xor
int
in
add
aad
lahf
fnstcw
leave
sbb
je
pop
inc
sub
mov
jge
lds
fsubrs
popa
adc
cmp
inc
push
cwtl
daa
lods
jno
shll
rorl
xor
cmp
mov
lret
or
call
cmp
orl
andl
pop
clc
std
cli
pop
fsubl
insl
mov
stos
push
lds
dec
cmpsb
imul
xchg
andl
inc
mov
inc
mov
enter
fdivrl
es
dec
repnz
fs
and
dec
adc
pop
imul
in
sbbl
mov
outsl
roll
ja
mov
xchg
in
or
cld
popf
sbb
inc
dec
xchg
jecxz
rol
jle
fwait
mov
dec
dec
sub
js
in
in
mov
add
lods
mov
xchg
mov
mov
pop
cmc
xlat
push
aaa
mov
mov
sti
sbb
push
sbb
mov
loopne
orl
das
inc
add
hlt
lods
lods
jmp
popf
rclb
pop
xchg
test
fstpt
iret
dec
scas
sbb
je
in
cmp
sbb
xchg
mov
sbb
fucom
loop
xchg
es
bound
out
inc
cmp
inc
dec
aaa
cmp
test
push
cmp
movsl
adc
push
pop
sbb
loope
shll
mov
push
dec
add
xlat
out
les
or
xchg
push
dec
jmp
sub
int3
hlt
out
rcrl
mov
ss
rcrl
inc
ja
jb
fsubr
push
xor
jg
ljmp
popl
dec
insb
out
xchg
pop
mov
insb
inc
jge
dec
movhlps
movsb
dec
imul
movsb
jb
xchg
mov
mov
lock
insb
lds
or
cld
mov
sbb
push
sbb
fsts
xor
and
in
xchg
lret
add
lock
out
cmpsl
lcall
pop
subl
fidivl
rcll
loop
lods
frstor
in
mov
leave
xor
into
aam
cmp
lock
jae
xor
jecxz
push
wbinvd
cli
xchg
in
pop
inc
maxps
iret
dec
adcl
jge
mov
jbe
ljmp
or
and
mov
pop
cltd
xchg
iret
lret
outsb
dec
roll
imul
inc
xchg
mov
mov
adc
call
push
mov
rol
out
mov
cld
add
and
adc
inc
sbb
and
mov
mov
xorb
mov
xchg
int
aas
add
jne
movl
cld
or
sub
mov
rclb
push
test
arpl
fldl
loopne
cltd
push
pop
adc
sti
iret
jg
out
lcall
pop
pop
add
adc
pop
pop
xlat
lods
xchg
and
dec
cmpsl
mov
arpl
push
leave
lcall
leave
push
js
xchg
sub
data16
out
mov
mov
sbb
in
fistps
push
mov
jno
fdiv
rcrl
mov
push
xchg
out
dec
push
lret
pop
jge
imul
or
mov
mov
das
es
fmull
jnp
dec
jae
and
imul
mov
or
pop
scas
fiadds
popa
mov
add
negl
xchg
pop
scas
idivl
loop
imul
mov
push
sbb
xor
loop
pop
cmpsb
xor
mov
adc
inc
stos
jo
mov
sub
jbe
cld
and
cmp
lds
cwtl
fistpll
mov
jp
dec
pop
daa
repnz
mov
in
ret
ret
mov
roll
pop
fisubl
icebp
cmpsl
addb
mov
pop
inc
int
jo
mov
push
int3
xchg
xor
je
and
cmp
in
addr16
or
pusha
and
loopne
je
jmp
popf
mov
or
mov
cli
and
cmp
fcoml
loope
mov
test
mov
rolb
dec
lcall
arpl
sti
sub
stos
movsl
test
nop
mov
jne
adcl
ret
mov
arpl
hlt
popa
mul
push
mov
push
lods
ja
lock
add
adc
sub
fs
push
scas
sbb
in
xor
mov
into
xchg
adc
mov
fisubrs
ds
push
push
pop
or
lods
jl
pop
cmove
aaa
xchg
ret
bound
cmpsl
xchg
andl
lahf
and
ss
cmpsl
ret
pop
mov
mov
shll
adc
inc
mov
ss
popa
loopne
clc
mov
push
outsb
je
out
mov
push
push
xchg
cmp
nop
or
mov
enter
mov
in
imul
nop
lret
cmc
jne
push
int
mov
and
data16
lret
mov
aad
arpl
jb
inc
fwait
or
cltd
test
sbb
movsb
jns
test
dec
dec
lret
push
jecxz
xlat
or
sbb
pop
dec
mov
ss
add
mov
ja
popf
mov
cwtl
mov
movsl
lods
mov
jno
mov
movl
add
or
dec
mov
mov
jmp
xchg
push
pop
sbb
add
test
loopne
adc
fdivrs
mov
jmp
popl
aam
xlat
int3
push
and
push
bound
or
cmp
das
sbb
in
push
xor
out
push
clc
gs
or
push
js
lods
jecxz
das
std
int3
divl
sbb
jae
pop
xor
pop
ror
je
cmp
lea
pop
xlat
es
sbb
dec
mov
xlat
addr16
pop
jnp
sbb
cmpsb
mov
dec
fistpl
aam
xor
or
lahf
dec
push
fidivrl
cmova
sbb
xchg
flds
shll
mov
stc
ret
cmp
cltd
popa
cmpsb
loope
rep
fisttpl
pop
adc
ficoml
popf
in
fistl
aaa
add
cld
addb
out
sub
push
bound
inc
xor
in
xchg
lcall
adc
aam
inc
cmpsb
sbb
pushf
js
mov
lret
cmp
dec
je
pop
dec
jb
pushf
out
lcall
inc
int3
add
adc
js
fs
jne
lret
mov
adc
jae
cmpsl
les
ffree
mov
dec
mov
testb
mov
push
push
jle
adc
pop
jae
daa
punpcklwd
and
cmpsl
es
and
cs
es
jle
call
ds
inc
or
addr16
mov
leave
sub
gs
cmc
pushf
test
fmulp
andl
jno
pop
movsb
xor
cmp
test
lcall
xlat
jecxz
mov
and
sub
es
gs
lea
jg
inc
inc
sti
ss
sbb
out
dec
and
mov
mov
das
inc
xchg
xor
mov
dec
movsb
iret
xchg
jl
jb
jb
sbb
pop
in
add
pop
mov
popf
imul
lock
js
inc
dec
and
ss
mov
dec
sarb
jb
ss
andps
test
xchg
test
inc
xchg
cwtl
shlb
sti
mov
inc
xor
jp
or
jbe
xchg
inc
addb
push
decl
sbb
pop
add
inc
dec
mov
out
je
repz
xchg
mov
dec
and
mov
jl
cmpsl
jge
inc
cmp
mov
outsl
or
sub
in
outsb
daa
push
movsl
out
cld
mov
mov
jno
test
pop
lods
jge
or
leave
js
shlb
and
sbb
xor
mov
or
leave
rolb
sub
sub
ret
rep
inc
inc
sub
popa
mov
dec
popf
pop
mov
mov
int
mov
mov
in
pop
out
cwtl
gs
inc
sub
adc
add
mov
dec
lahf
std
mov
gs
nop
loop
mov
and
jge
xchg
sbb
mov
cmpsb
jo
movsl
push
addb
xor
sub
mov
sbb
push
jmp
sub
dec
xchg
andb
sbb
das
pop
cltd
jno
cmp
clc
shll
ror
dec
adc
repz
popa
mov
cmc
jbe
ret
hlt
inc
mov
dec
add
cltd
push
mov
add
andl
repnz
cli
insb
int3
outsb
stos
mov
pop
add
sub
add
inc
push
adc
mov
mov
sbb
xchg
mov
xchg
add
adc
stc
cld
frstor
mov
dec
popf
mov
sbb
or
repnz
aad
sub
xchg
movsb
icebp
jo
inc
out
or
xor
sbbl
add
and
enter
ret
sbb
cld
divl
cmp
ds
inc
loope
or
add
sub
cs
sub
in
fucomi
clc
into
xchg
mov
cmp
cmp
jae
xor
mov
leave
imul
and
adc
pop
out
bound
push
mov
jg
fiaddl
inc
xchg
cmp
lret
aaa
imul
js
cs
in
cmc
in
sub
stos
test
jp
xor
and
dec
and
clc
packuswb
adc
or
out
lret
jp
aaa
sahf
loope
and
lahf
movsb
push
or
icebp
jl
test
pop
cmp
aad
jb
fstpt
xchg
leave
shrl
jns
pop
ret
icebp
movsl
jmp
cmp
cmp
fcompl
inc
sbb
movsb
lcall
out
inc
jle
das
mov
xchg
dec
mov
movsb
xor
cwtl
mov
lods
push
jmp
push
mov
rorb
add
lret
scas
mov
incl
loop
mov
dec
lods
sbb
out
cmp
repnz
fisubs
mov
mov
es
scas
jp
test
or
test
loopne
imul
adc
shrl
adc
inc
in
push
lret
xor
ss
push
jb
jg
lret
push
stos
ljmp
push
xor
and
mov
lods
inc
lods
enter
repnz
pop
or
or
sub
mov
xor
lcall
cwtl
cmpsb
jne
xchg
xorl
inc
out
rcll
and
inc
sbb
sbb
or
push
enter
add
cmpsb
ficompl
xchg
pop
icebp
pop
or
test
xor
xchg
lock
jns
mov
loope
rcr
mov
sti
sub
test
sbbl
in
repnz
stos
and
mov
loope
adc
cltd
xchg
pop
push
push
xchg
mov
add
in
sarl
jmp
das
and
jno
stos
imul
lods
daa
sub
adc
dec
push
mov
cwtl
dec
addr16
push
xorl
cmpsb
clc
clc
out
mov
sbb
cmp
ljmp
push
adc
bnd
jle
mov
enter
pop
js
test
adcl
jnp
mov
cmp
and
xchg
mov
xor
rcr
jns
or
and
mov
jle
dec
pop
sub
les
push
loop
cmp
lret
cmc
xor
lea
inc
xor
push
decb
pop
mov
sti
mov
outsb
pop
movsb
mov
imull
jge
sti
jne
xor
pop
out
sbb
cmc
cmp
das
aaa
sti
movsb
repz
jmp
and
lahf
mov
push
lcall
lret
pushf
scas
out
loop
aad
xor
mov
xor
cs
jne
xor
sub
mov
cltd
clc
xchg
or
mov
cwtl
mov
iret
push
test
sbb
mov
mov
rcrl
jae
in
jnp
push
pushf
call
push
ret
loopne
pop
jge
movsl
in
lcall
int3
out
aad
fadds
testl
enter
out
cs
lret
jnp
xchg
movsl
ret
lahf
mov
clc
int
sbbb
inc
fnstsw
hlt
leave
scas
push
adc
arpl
xor
jmp
movl
out
fistpl
add
repnz
pop
add
mov
mov
fisubrl
cmp
sub
jge
notl
cmp
jo
mov
insl
jae
xlat
dec
mov
xchg
pop
pop
sbb
fsub
mov
paddq
add
lret
imul
mov
jbe
add
mov
mov
imul
cmp
jno
int3
stos
and
push
mov
push
int3
xchg
cmpb
leave
sbb
js
cmpsl
call
movsl
scas
xchg
test
push
test
sbb
mov
cmp
or
stos
adc
push
pushf
stos
xor
mov
les
dec
fdivp
nop
push
pop
adc
pushf
push
add
dec
stc
das
dec
push
pop
ljmp
mov
jb
adc
add
sub
mov
loopne
ja
push
aam
int3
mov
pop
js
mov
mov
cld
scas
nop
shrb
loop
dec
sub
or
hlt
rorb
imul
movb
pusha
pop
mov
pop
sbb
std
test
jmp
mov
aaa
in
out
stc
mov
or
or
push
inc
popf
aad
aam
or
mov
jg
stc
cmp
push
xchg
pop
sbb
adc
pop
jecxz
sub
stos
loopne
pop
cltd
hlt
jae
cmp
sub
sahf
or
pop
pop
sarb
jnp
leave
inc
dec
gs
pop
and
pop
stc
roll
xorb
mov
in
xor
ljmp
inc
xchg
pop
fbld
sbb
int3
dec
hlt
ret
or
stos
mov
icebp
push
pop
lods
les
fcomps
push
loopne
fstpl
mov
jo
daa
dec
insl
movsl
cmp
mov
in
push
sub
pop
push
sub
in
and
jmp
xor
cmovne
or
lds
push
lret
scas
loop
ja
add
sub
cmc
lret
push
shrl
cltd
mov
jmp
insb
pop
in
add
dec
pop
repz
aas
ljmp
mov
clc
sub
in
mov
cmp
enter
sbb
dec
lret
imul
mov
insl
cmp
aam
les
pop
or
popa
pop
scas
cmp
outsl
in
mov
mov
push
popa
add
dec
and
jne
lods
push
cmp
cmp
shll
jns
dec
int3
ja
arpl
iret
cli
pop
push
xor
aad
mov
cmp
shll
stos
jo
ret
popa
adc
pop
test
mov
add
or
jae
pop
shrl
sbb
mov
push
xchg
dec
inc
pop
sub
in
orl
mov
fldcw
lret
xlat
in
negb
gs
fcompl
hlt
mov
aaa
rorl
xchg
inc
sub
mov
std
or
add
iret
rclb
or
or
test
mov
jl
sub
lret
cmc
xchg
lods
and
pop
inc
in
fsts
mov
inc
mov
hlt
jne
sub
jge
sub
dec
and
out
xchg
in
gs
sbb
addr16
cmp
jno
out
out
and
sub
push
xchg
orl
test
int3
loopne
dec
out
enter
insb
dec
scas
push
push
lock
ror
dec
out
inc
leave
fwait
or
out
fwait
scas
mov
pop
jp
js
fildl
sub
add
lret
jge
popf
cmp
mov
dec
or
pop
aad
sbb
cwtl
orl
icebp
sti
cmp
inc
cwtl
inc
mov
mov
clc
imul
sub
pop
mov
lea
sti
jecxz
arpl
dec
stos
sbb
pop
imul
adc
push
sub
mov
mov
jl
aas
jecxz
ss
loop
cmc
neg
rcrl
mov
mov
and
lods
aad
mov
mov
rorb
pusha
jge
add
sub
loop
cmp
mov
movsl
stos
pop
push
mov
loope
sub
icebp
sub
sub
ret
xchg
testb
shll
sbb
mov
shll
loope
push
xor
sub
push
jp
push
adc
loope
les
xlat
scas
shrl
aaa
imul
inc
lods
fwait
jle
cli
push
scas
out
mov
ljmp
mov
aam
xlat
enter
es
cs
nop
mov
sub
push
call
jle
mov
repz
dec
lds
in
frstpm(287
fisubs
iret
pop
add
mov
sub
jbe
stc
push
out
mov
jbe
popf
push
jne
jae
frstor
dec
sbb
ret
and
or
pop
loope
jl
call
and
cli
jle
cli
gs
mov
aas
push
cmp
xor
daa
lock
stc
and
jle
dec
fwait
jae
sbb
data16
mov
mov
movsb
mov
psllq
gs
ror
inc
pop
enter
lea
adc
jl
pop
mov
mov
sbb
sub
pop
push
lahf
jno
pop
in
push
pop
mov
mov
xchg
aad
mov
xchg
adc
lods
push
fpatan
les
inc
and
cmpsl
lret
push
cmp
cmpsl
xor
pushf
ljmp
cmp
js
adc
add
bound
sbb
mov
adc
loope
in
dec
mov
das
mov
popf
xchg
dec
xor
data16
loopne
ljmp
jbe
mov
push
daa
daa
in
dec
aam
mov
push
push
mov
lods
push
pop
jecxz
inc
imul
js
lods
stos
pop
add
shrb
loopne
iret
movsl
cltd
into
lods
iretw
hlt
sbb
mov
inc
jg
fldt
cmpsb
push
adc
push
int
cli
out
cmp
mov
or
xor
add
pop
xchg
sub
pusha
sbbb
cmp
popa
adc
enter
dec
mov
orb
pushl
push
inc
xchg
mov
je
mov
xor
or
mov
pop
xor
insl
rol
mov
inc
push
jl
dec
out
xorl
jmp
sub
mov
stos
lret
ja
aad
out
mov
rorb
data16
or
jns
jg
push
push
bound
mov
cmpsb
lcall
fcompl
fwait
push
movsl
cmpsl
jns
dec
insb
pusha
adc
adc
icebp
hlt
push
push
sarb
mov
mov
scas
loop
dec
es
sahf
mov
sbb
xor
or
arpl
pop
pop
aas
xor
lret
data16
imul
sub
jbe
dec
adc
gs
loop
dec
sub
add
inc
pop
cli
add
sub
cmc
xor
xchg
push
jno
xor
ja
pop
push
sarb
xor
mov
mov
sti
sbb
out
mov
adc
cmp
adc
loopne
stos
clc
icebp
das
and
push
xorl
mov
cmc
fdivrl
cmp
cli
inc
call
sub
in
scas
movsb
mov
mov
xor
ljmp
push
jmp
mov
bound
call
loop
cmp
aas
mov
es
loopne
mov
and
or
sbb
in
fdivp
mov
push
xchg
jecxz
rolb
dec
pop
stos
mov
mov
pop
jecxz
in
movsb
mov
cmp
inc
sub
push
mov
jno
pop
icebp
int3
fcmove
push
pop
jns
testb
push
jg
test
xchg
mov
cltd
mov
mov
cmp
inc
loopne
fs
std
adc
jns
push
js
test
inc
dec
cmp
dec
dec
cmp
ret
rcrl
and
cs
std
ja
divb
push
in
insb
pop
ret
fstpl
les
addr16
jge
arpl
ror
arpl
loope
cmp
ja
jae
lret
adc
sbb
inc
sahf
pop
xor
loopne
sub
xchg
xlat
jle
pop
bsf
fucomi
scas
lods
mov
mov
cs
lods
add
insl
sub
mov
das
dec
dec
xor
leave
inc
mov
pop
adc
lcall
popa
mov
cld
sub
ljmp
mov
dec
xchg
rcrl
pop
xor
mov
inc
jmp
ret
cld
adc
ret
pop
pop
push
cmp
ja
pop
addr16
jp
idiv
push
cmp
jne
and
outsl
fcomps
popa
cmp
xor
or
das
fsub
int
mov
and
jno
jge
in
xor
enter
mov
mov
std
inc
xchg
lods
out
scas
ss
jle
dec
cwtl
stc
or
sahf
out
push
in
out
and
pop
test
aaa
push
and
inc
xchg
add
repz
popf
lods
fwait
jo
cmp
xlat
mov
sub
pop
popf
mov
out
jb
xor
into
daa
dec
mov
sbb
je
divb
jmp
jl
out
mov
frstor
push
push
pop
aas
repz
cmc
test
adc
loopne
jp
sub
js
push
shll
inc
add
jae
fnstcw
fnstcw
cmp
imul
int3
fcoml
add
imul
pop
out
scas
ret
arpl
push
test
sub
scas
mov
or
popa
jl
gs
stc
adc
pop
test
dec
das
jg
jo
aaa
xor
inc
jnp
sbb
xchg
outsl
sub
imul
std
mov
rolb
push
and
test
idivb
fisubl
cmc
mov
xchg
sub
mov
aas
push
stc
roll
sbb
out
add
jecxz
mov
out
push
sti
mov
shrl
mov
cmp
adc
gs
movsb
dec
int3
icebp
cmp
push
sub
pop
mov
aam
mov
mov
push
mov
mov
xor
mov
jl
shll
imull
pop
xchg
jb
idivb
dec
push
jo
lock
mov
push
sbb
sbb
movb
adc
jecxz
je
mov
test
push
hlt
ss
pop
or
pop
jns
mov
sub
pushf
inc
lret
cmp
mov
test
push
pusha
jae
pop
and
lea
xchg
cmp
daa
mov
sbb
push
cmc
xor
jne
flds
xor
dec
add
stos
adc
popf
lcall
adc
loop
mov
movb
outsb
xlat
fs
stc
dec
cmc
lods
dec
scas
inc
cmpsl
sbb
bound
and
xchg
adc
pop
nop
fimuls
mov
into
sbbl
sub
bound
insb
in
sub
or
dec
cmpl
sahf
mov
sub
aam
in
shlb
pushf
add
jnp
outsb
push
or
push
hlt
lods
mov
test
lahf
xor
push
fwait
out
or
add
bnd
in
and
outsl
xlat
jne
cmc
pop
or
pop
sub
dec
xchg
mov
mov
mov
add
dec
cmp
paddb
mov
mov
and
fisubs
xlat
rol
dec
int
jg
out
inc
jns
loopne
push
jp
rcrl
shlb
daa
jnp
add
cmp
je
int3
push
pop
repnz
dec
sbb
jecxz
inc
mov
cli
popf
lcall
xchg
sbbb
and
sub
jecxz
test
adc
inc
or
pop
or
xor
ficomps
sub
in
mov
pop
add
lret
jp
push
ja
stc
sub
cmp
inc
sub
push
mov
pushf
or
and
fsubrs
adc
icebp
add
pop
ja
sbb
add
pop
xor
lds
pop
mov
fildl
mov
adc
or
or
xchg
jae
outsl
push
add
dec
pop
pop
das
mov
mov
lret
lcall
cmp
adc
and
cltd
sub
or
jge
sub
ss
hlt
lahf
cmpsl
cmp
cwtl
jo
mov
stc
pop
arpl
pop
cmp
mov
and
add
mov
cmp
in
pop
inc
pusha
jno
cmp
mov
dec
inc
cwtl
push
cmp
dec
pop
add
dec
jp
bound
push
cltd
shlb
fcomi
push
mov
in
out
testl
adc
mov
push
cli
test
fcom
test
sub
push
lods
mov
push
dec
lret
loope
outsb
das
shrb
pop
mov
movsb
jmp
ret
sbb
out
cs
sub
sahf
pop
xchg
sub
cmc
dec
jne
sbb
jg
adc
add
dec
cmp
sub
mov
and
ss
dec
and
mov
idivb
sbb
loopne
daa
cli
and
and
out
fisubrs
testb
push
xchg
dec
push
in
add
ret
xchg
mov
jno
xor
adc
mov
pop
out
fcoms
fstpt
add
dec
jmp
xor
cwtl
dec
add
es
jg
xchg
in
push
sub
inc
sbb
in
dec
out
clc
rclb
mov
mov
inc
jno
sub
pop
js
gs
shrb
das
int
aad
lcall
sbb
mov
loope
lcall
dec
ljmp
adc
inc
cmpsl
pop
idivb
pushf
insb
xor
rolb
cmp
sub
jbe
jne
loopne
mov
lcall
lods
ret
xchg
push
int3
enter
leave
xchg
dec
cmovo
jl
int3
imul
mov
gs
cld
xchg
pop
xchg
out
mov
mov
mov
mov
stc
and
pop
dec
jle
out
enter
jle,pt
push
mov
push
pop
dec
test
repnz
push
push
mov
orb
xchg
mov
mov
add
or
enter
hlt
pop
jbe
test
loope
rcll
sbb
cmp
mov
push
pop
rcrb
xchg
or
mov
or
add
out
mov
imul
mov
inc
fsub
and
loopne
sub
mov
test
lods
jmp
lret
mov
dec
insl
mov
sub
pusha
fistl
pop
pop
jg
xor
loopne
mov
add
daa
pop
xor
adc
loopne
sbb
inc
aas
in
inc
sahf
pusha
out
sbb
fcmovne
mov
aas
sbb
scas
fcoml
mov
aaa
lods
ss
jl
inc
xchg
dec
push
mov
rcl
lods
sahf
fwait
sbb
mov
mov
loop
xor
fs
mov
loopne
push
mov
test
lock
mov
rcrl
bound
into
sti
jnp
sub
adc
pop
mov
lret
jecxz
mov
jge
outsb
in
push
gs
dec
nop
loopne
rcll
popa
insb
or
cmc
imul
js
pop
xor
pop
push
mov
push
lcall
push
dec
out
mov
add
sub
add
add
popf
xchg
dec
add
out
mov
pop
mov
std
sub
sbb
sub
out
jnp
inc
stc
out
jns
push
pusha
and
jae
add
mov
sbb
pop
jb
xchg
scas
aas
xor
aam
rclb
cs
jmp
out
into
jl
dec
rcl
and
lock
push
aaa
in
hlt
imul
sub
adc
out
pop
cmc
jo
sub
std
scas
test
jle
dec
out
aad
imul
mov
icebp
out
test
push
fnstsw
test
divb
loopne
xchg
sbb
outsl
jmp
mov
dec
or
js
daa
testb
std
xchg
jo
jne
push
in
cmp
or
cmpl
test
icebp
push
adc
addr16
mov
jmp
sti
dec
adc
scas
aaa
cmc
push
lret
push
mov
dec
loopne
add
pop
mov
push
dec
fisubs
fs
ja
xchg
sbb
xlat
repz
pop
mov
pop
mov
push
movsl
inc
and
movaps
xchg
mov
mov
mov
into
adc
dec
hlt
cmpsl
out
mov
pop
jmp
or
imul
orps
mov
sbb
shrl
addr16
jmp
inc
inc
and
ret
sbb
add
std
push
push
jecxz
insb
inc
inc
mov
jnp
and
or
mov
inc
xor
cmp
scas
cmc
fiadds
cltd
aad
inc
push
outsb
pop
adc
dec
xchg
pop
xor
add
cmp
dec
xor
jne
fucomp
jns
or
rolb
add
mov
and
mov
xchg
fcoms
les
adc
pop
pop
ret
push
fbld
or
sub
rol
arpl
pop
cmp
int
and
dec
or
push
cwtl
inc
xor
lods
mov
sub
sub
adc
jnp
push
push
clc
xchg
pop
jne
mov
push
ret
or
mov
cmp
in
dec
outsb
insb
pop
andl
clc
jne
jp
insl
jo
ss
cwtl
mov
test
adc
popa
sub
ror
ror
push
das
mov
and
clc
sbb
dec
jo
or
lcall
dec
divb
xchg
sbb
push
xlat
out
dec
cs
mov
cltd
mov
mov
cmp
lret
sub
mov
sbb
jb
mov
call
dec
scas
in
pop
out
popf
ficoms
sarb
mov
ljmp
mov
dec
cli
lods
dec
adc
add
in
push
leave
push
pop
clc
loopne
cmp
test
mov
pop
inc
jae
shll
shlb
les
adc
out
test
cmpl
lret
gs
pop
in
sbb
cmp
loope
pop
dec
inc
mov
sub
xor
inc
or
mov
mov
adc
mov
hlt
jge
inc
inc
mov
into
das
lret
mov
mov
fstpt
xlat
popa
gs
push
jb
inc
mov
jmp
inc
movsl
push
fcmovnb
jmp
fsts
rolb
jecxz
sub
sub
lods
lahf
xor
dec
ljmp
pop
jnp
jp
movl
lds
mull
jnp
dec
sbb
mov
fnsave
cmp
inc
mov
loop
sbb
popl
jb
arpl
les
pop
add
loop
mov
shl
adcl
mov
xchg
and
dec
or
inc
pop
popa
cmp
dec
mov
mov
orb
loop
inc
mov
jbe
inc
inc
jl
push
imul
in
subb
dec
ret
jmp
aam
jg
mov
stos
push
popa
decb
sub
adc
dec
cmp
fstpl
push
mov
ret
mov
cmpl
push
call
mov
jmp
mov
inc
out
xor
iret
inc
jge
cs
dec
aas
aas
rsqrtps
adc
push
fwait
mov
jg
push
leave
scas
loope
xchg
xchg
and
inc
inc
cwtl
les
popa
lcall
cmpsb
ret
and
inc
repnz
es
xor
xchg
mov
jl
sahf
outsl
psubsb
lods
inc
xlat
jne
cld
outsl
jne
pop
jl
aaa
std
ja
test
xor
jbe
sub
cmc
dec
mov
adc
in
jle
and
nop
push
in
je
push
push
movsl
lock
into
cmp
xor
sahf
cmpsl
xchg
xchg
inc
enter
xchg
lahf
jmp
pusha
mov
xchg
stos
cld
pop
xor
int
mov
cmp
add
outsb
testb
aam
lds
ficoml
fnsetpm(287
int
xchg
inc
je
sub
xlat
ljmp
ljmp
mov
jp
faddp
jg
test
xchg
int
ret
add
pop
ja,pt
mov
xlat
out
lods
or
sbb
or
popa
sub
imul
idivl
xor
and
clc
or
int
hlt
xchg
adc
dec
in
adc
shrb
daa
mov
push
insl
rorb
out
aas
jecxz
mov
cwtl
inc
and
dec
in
mov
popf
lods
fisubrl
sahf
jo
adc
jmp
push
test
lods
mov
scas
inc
sub
mov
or
jbe
bound
insb
gs
sar
mov
xchg
test
cwtl
gs
jmp
fdivr
outsb
pop
fildl
jmp
jbe
cmp
loop,pn
fbstp
arpl
push
push
or
xchg
cli
sub
insl
shll
and
cwtl
cmp
movsl
and
hlt
jge
mov
stc
push
pop
inc
testb
subl
movsl
dec
add
fst
in
push
lea
lods
sbb
cmp
xchg
sub
call
inc
mov
jbe
daa
cmp
fbld
les
inc
lods
dec
xor
cmp
and
in
das
and
sub
push
mov
push
push
mov
push
mov
int
call
or
cltd
xchg
or
or
out
dec
decl
ss
or
iret
push
je
mov
sbb
or
push
movsb
xchg
sub
imul
push
lock
jmp
push
xchg
pop
fisubrl
hlt
les
loope
jo
cld
inc
push
mov
scas
cltd
cwtl
push
stc
imul
pop
mov
out
jg
shl
sbb
sbb
adc
mov
xor
inc
in
ljmp
jnp
subb
enter
outsb
negb
or
push
arpl
adc
insl
loopne
divl
cmc
add
out
fmull
pop
out
in
movsl
fsubr
push
dec
xchg
rorb
stos
xor
lcall
mov
sbb
push
pop
cli
inc
cmp
dec
cld
icebp
adc
xchg
sub
dec
dec
in
ffreep
shll
repnz
sbb
mov
inc
dec
lods
stos
sbb
mov
movsl
stos
dec
aaa
pop
in
shrd
sti
movnti
cmc
outsb
mov
xor
addb
daa
int
jns
stos
xchg
fdivr
jne
loop
fdivr
xor
aas
push
inc
pop
in
push
mov
jg
dec
pop
mov
xchg
out
pop
xorb
xchg
and
ss
mov
loopne
scas
xlat
mov
pop
mov
mov
push
into
xchg
leave
inc
fsubp
jg
loope
push
jne
out
sub
ret
inc
sub
jnp
mov
xchg
shll
je
push
mov
inc
xchg
dec
in
mov
push
loopne
les
or
and
sbb
mov
repz
lahf
movsl
xchg
stos
in
jecxz
push
fcoml
or
imul
xchg
jo
sub
iret
fcomip
aad
xor
mov
and
and
push
or
ja
mulb
jl
cmp
fsub
adc
pop
mov
xchg
cmc
dec
popw
xchg
out
pop
mov
cs
cmp
or
and
cld
jno
test
xchg
and
mov
push
sbb
sub
test
fisubrl
cmp
push
pop
adc
in
aas
adc
jno
ret
rclb
outsb
sub
popf
inc
dec
inc
jecxz
aam
push
int
lahf
mov
add
cmp
pop
ret
repz
pop
insb
lret
outsb
jbe
push
jno
mov
loope
daa
es
inc
adc
lahf
pop
sub
and
xchg
loop
push
and
xchg
fs
mov
sub
imul
loop
pusha
pop
pop
std
bnd
push
sti
or
fmulp
push
ret
push
ficomps
gs
test
setbe
fildll
fldenv
mov
lea
xor
or
mov
mov
xor
and
push
sub
jl
jg
lods
out
imul
out
cli
insl
repz
cmp
jno
or
sbb
push
mov
rorb
mov
inc
int
mov
mov
shrb
js
stos
cmp
xlat
push
xchg
jmp
dec
xor
sbb
sub
in
aaa
mov
mov
das
xorl
test
subl
add
dec
iret
dec
push
lods
insl
or
int
out
test
in
clc
loope
pop
adc
pop
cli
negb
jmp
adc
fs
xchg
shl
add
fwait
or
mov
movsb
sbb
inc
stos
or
aaa
push
jo
ret
and
lahf
push
fdivr
repz
xchg
push
dec
dec
call
cmp
mov
cmp
in
pop
js
outsb
fs
dec
and
and
in
xor
and
push
les
add
jbe
out
sbb
and
push
insl
cmpl
cs
sbb
subw
aam
dec
adc
lcall
add
or
loop
rorb
and
push
push
push
fdivs
jbe
das
dec
mov
push
cmp
inc
dec
push
sbb
gs
cmc
rorb
jl
cltd
lcall
arpl
in
jmp
rcrb
aas
ret
scas
and
imul
mov
insl
xchg
inc
neg
les
and
pop
mov
in
add
inc
adc
mov
es
pop
mov
jnp
and
pop
jo
sarb
clc
idivb
jmp
xor
es
dec
dec
xchg
testb
sti
mov
cltd
shll
add
pop
add
cmc
pop
jo
sub
mov
dec
adc
fsubrs
mov
insb
jle
addl
pop
imul
jb
repz
sti
sub
sub
fdivrl
push
mov
xchg
dec
icebp
sarb
jbe
sbb
bound
stos
ret
imul
mov
push
inc
mov
pop
lahf
pop
dec
test
fs
popf
test
je
lret
ss
cmp
xchg
jle
jno
jmp
es
pop
add
hlt
mov
or
add
pop
pop
add
fwait
outsl
rorb
sub
xor
outsl
jmp
jmp
in
or
out
aam
add
pop
xchg
push
jbe
ljmp
xor
and
inc
and
xchg
sbb
jns
aad
notl
jnp
adc
jp
rol
mov
fldcw
jmp
mov
popf
scas
mov
cmp
adc
xchg
push
inc
outsb
popf
mov
movsb
out
and
cmp
push
cmpsb
rcr
repnz
in
mov
scas
or
ret
mov
sbb
ret
shrb
or
mov
insb
push
push
pop
subb
cli
frstor
xchg
ja
xchg
mov
dec
add
pop
jae
stos
test
or
lret
bound
in
inc
mov
clc
lret
loope
lret
mov
bswap
mov
fistpl
jmp
xor
pop
ja
dec
cltd
pop
push
sbb
mov
pop
push
adc
push
ficompl
test
inc
andl
sbb
inc
push
xchg
sub
test
dec
ror
aas
push
and
inc
into
mov
mov
cmp
sarl
ljmp
sbb
repnz
and
add
test
cmc
pop
fs
enter
sahf
jp
lock
in
data16
push
outsl
addr16
jg
enter
xor
push
pop
jns
dec
test
mov
jo
sub
mov
xchg
mov
or
stc
in
jb
dec
xchg
out
jmp
add
cmp
sbb
sbb
or
in
xor
mov
xchg
jno
jb
sarl
cmpsb
das
fs
sbb
aad
aam
fistpl
repz
test
inc
sti
out
sub
lods
fstpt
bound
les
cwtl
jle
shll
loopne
mov
cmp
test
xchg
xor
test
lds
ficompl
sahf
dec
dec
xchg
in
push
xlat
pop
push
out
lcall
cmp
lret
lock
imull
inc
mov
out
loope
xorl
mov
sub
lods
dec
clc
sub
out
aas
lcall
fwait
test
mov
idivl
xchg
data16
push
popf
bound
loopne
shll
int3
fists
dec
or
jne
lcall
outsl
cltd
and
lds
xchg
sub
in
sbb
into
xlat
jns
add
cltd
push
xor
mov
sbb
out
push
pop
jae
mov
mov
push
mov
pop
adc
lret
jle
sub
fcmovnb
sub
out
mov
push
mov
or
cwtl
rolb
mov
push
sbb
mov
ja
in
push
jp
data16
shl
cwtl
xchg
mov
cmp
cli
cmp
pop
scas
pop
jb
mov
add
jno
out
push
ss
inc
jge
aaa
or
mov
fildll
es
inc
mov
ret
mov
dec
out
rcr
and
pop
adcl
mov
jecxz
ss
ljmp
out
scas
or
cmp
jl
add
movnti
pop
adc
mov
or
dec
fistpl
arpl
scas
inc
fcompl
cwtl
add
pop
insl
cld
mov
adc
push
pop
add
sub
mov
push
push
and
sbb
xchg
aas
jl
fwait
scas
cmp
lret
les
mov
add
cltd
sbb
or
adc
jmp
adc
mov
push
stc
xchg
push
mov
cmpb
nop
inc
rcl
movlps
sbb
and
lods
out
xchg
xchg
and
jns
inc
imul
dec
xchg
ss
jmp
pop
data16
pop
pop
push
hlt
mov
xor
cltd
mov
bound
push
jle
cmp
mulb
push
or
mov
jb
sbb
bound
ljmp
std
in
mov
test
aas
ret
pop
out
aas
int3
in
sub
sub
add
add
arpl
mov
xor
push
xor
lcall
mov
add
push
jmp
enter
aad
xchg
and
bound
lret
cmpsb
xor
dec
and
pop
mov
push
mov
jb
mov
push
add
mov
sub
adc
mov
sbb
enter
pop
cmpsl
lods
stos
dec
cwtl
test
lcall
pop
adc
adcb
adc
in
sub
data16
enter
adcl
jl
adc
or
adc
sbb
mov
add
fldln2
out
fs
hlt
mov
mov
inc
test
dec
xor
or
lds
and
sbb
push
outsl
push
mov
stc
push
xlat
imul
jg
inc
cli
shlb
mov
lahf
xor
mov
mov
shr
cmp
jns
test
sbb
gs
pop
leave
cltd
jnp
push
das
int3
enter
jl
pushl
int3
push
adc
mov
sub
mov
xchg
mov
or
jge
add
fldenv
inc
mov
mov
adc
mov
mov
fmul
fbld
ljmp
out
push
sbbl
add
shrb
mov
filds
int
mov
fcom
loopne
xor
xchg
or
lret
xor
cmp
add
push
ja
adc
jns
mov
loopne
repz
xor
std
mov
cmp
adc
push
ffree
addb
rcl
fs
pop
outsb
or
cmp
stos
aas
jns
sbb
in
mov
sub
mov
cmpsb
jae
and
mov
pop
shlb
and
mov
push
mov
cmp
add
or
fiaddl
insl
mov
clc
sub
push
pop
stos
mov
mov
mov
xor
into
enter
mov
adc
jg
and
aaa
and
testl
push
lds
daa
jne
mov
popa
inc
mov
cmp
pop
mov
test
xchg
mov
data16
cmp
shrb
ret
xchg
shr
es
cmp
xchg
sbb
ds
lret
mov
mov
cmp
test
mov
rorl
or
push
pop
loop
scas
ds
cmp
push
mov
sub
or
in
ljmp
andl
lret
test
mov
xchg
outsl
cmpsl
test
aam
add
jecxz
out
dec
outsb
and
push
sbb
loop
mov
xor
sti
xchg
mov
pushf
adc
das
ds
inc
loope
mov
mov
in
pop
dec
cmp
push
add
aaa
testb
arpl
adc
in
mov
cli
xchg
jp
mov
inc
outsb
out
adc
jno
cmp
dec
pop
rorl
int3
xor
ds
fdivrl
pusha
movsb
nop
xchg
inc
xor
mov
popa
jne
adc
jge
gs
inc
xor
jl
cmp
in
aas
xchg
test
pop
repz
icebp
jmp
loope
dec
mov
cmc
adc
xchg
insl
sti
ret
pusha
scas
shrb
insb
cld
ljmp
mov
xor
inc
rolb
fldpi
jns
clc
scas
cmc
mov
adc
push
adc
jb
leave
pop
in
sub
jnp
popa
mov
pop
mov
loopne
sbb
dec
jb
mov
mov
mov
dec
cmpsb
test
dec
jno
in
iret
push
icebp
xchg
push
out
imulb
ret
adc
or
ret
push
push
ljmp
pop
rolb
xchg
pusha
cmp
push
mov
fstpl
repnz
and
push
hlt
jge
sub
cwtl
mov
add
lcall
sub
jmp
ljmp
cltd
pop
in
mov
sub
push
xchg
pop
adc
out
pop
ljmp
jle
adc
lahf
adc
subl
fwait
out
outsl
and
arpl
push
fwait
arpl
mov
loope
pop
or
repz
dec
data16
pop
mov
iret
lea
scas
adc
push
lds
fistl
sti
aas
push
add
sub
fcos
jmp
cmpsl
call
call
das
add
inc
daa
or
add
pop
mov
push
sbb
cmp
or
push
mov
jp
pushf
scas
pop
jae
adc
mov
adc
shll
xor
sub
cmpsl
ret
repz
in
xchg
movsb
lahf
jl
scas
test
push
xor
fisttpl
or
mov
pop
xchg
imul
dec
gs
repz
push
fsub
cmovnp
lcall
inc
aas
add
popa
push
jo
call
adc
sti
movsl
sbb
xor
and
shr
cmp
and
mov
fdiv
mov
push
sbb
add
push
jmp
pop
outsl
mov
lea
sahf
push
int
mov
push
cmp
lret
mov
jb
jne
outsb
sbb
sahf
aad
push
xchg
sub
lret
out
mov
into
jno
jge
fwait
cmp
mov
ja
sbb
add
stos
stc
int3
mov
out
fsts
dec
dec
mov
sub
lret
cmp
test
and
cmp
lret
mov
inc
or
push
and
hlt
andl
ljmp
and
sub
lea
mov
or
scas
inc
sub
in
adc
adc
icebp
push
sub
add
cltd
negl
sbb
add
and
mull
call
leave
ffree
aas
aaa
rcrl
or
ret
xor
inc
add
insb
xor
or
push
push
mov
sub
fistl
inc
xor
lret
mov
aam
and
lcall
mov
lret
cmpsb
xchg
adc
xchg
xor
mov
or
mov
lods
movb
out
push
mov
push
mov
out
dec
mov
lods
mov
jle
jmp
xor
cmpsl
popf
sub
xlat
popa
incb
cmp
push
jge
insl
pop
add
push
inc
mov
xchg
shrl
vcvtsd2si
sub
divb
jp
fdivs
xor
mov
outsb
loop
out
arpl
notl
sahf
and
adc
das
shll
pop
dec
adc
outsb
mov
lahf
shlb
ret
std
shl
aaa
jns
jmp
je
jle
mov
mov
mov
lret
mov
mov
int
ljmp
or
jo
sarb
push
aas
mov
aas
adc
push
sub
jle
popa
jl
dec
aas
mov
push
mov
adc
xchg
fsubr
push
mull
inc
je
mov
mov
fwait
adcl
insl
loopne
xor
dec
mov
js
pop
cli
mov
mov
stos
lods
les
scas
sbb
stos
je
add
stc
mov
sub
cli
pop
out
sbb
sbb
cs
cmp
mov
mov
aam
inc
xor
and
mov
pop
cmp
es
fwait
iret
into
jmp
or
inc
lret
aad
or
pop
jae
adc
push
pushf
pop
push
movl
mov
test
es
add
xchg
mov
pop
mov
dec
cmp
repz
sti
in
add
mov
andb
pop
rolb
xor
xor
sub
lds
ja
mov
jmp
cmpsl
scas
dec
adc
imul
int
xor
or
pop
repz
inc
push
xor
mov
idivl
and
push
clc
loope
inc
or
test
jns
cmpsb
inc
nop
sbb
add
sbb
xchg
repz
in
inc
cmp
fdivs
push
jp
dec
repnz
pop
js
loope
sbb
adc
int3
mov
aam
fstpt
popf
sahf
cs
push
sbb
and
add
cmp
xchg
lods
aaa
push
dec
aam
sub
scas
pop
dec
jbe
sbb
push
test
nop
jge
scas
pop
cwtl
add
inc
adc
cmc
subb
xchg
sbb
pop
gs
mov
push
cld
inc
dec
jge
scas
xchg
or
ret
inc
je
je
mov
push
jp
add
aad
jecxz
je
jp
xchg
jae
jno
dec
add
adc
xchg
add
pop
sub
cmp
inc
push
dec
mov
push
das
jp
ret
sarb
in
mov
aaa
addb
pop
mov
cmp
ffree
sub
push
xor
or
and
mov
icebp
cmp
bound
or
clc
mov
jmp
add
loopne
pop
in
push
xchg
lret
push
fimuls
pusha
mov
mov
pop
pop
insl
lret
xor
out
in
adc
stos
dec
fwait
fucomi
ret
xchg
mov
and
sahf
adc
jmp
xchg
mov
stc
xchg
cmp
cmp
pushl
fisubrl
pop
out
les
mov
sub
cmp
clc
add
mov
jle,pt
repz
movd
mov
in
inc
cltd
sbb
adcb
dec
imul
js
pop
push
jl
cmp
push
dec
jno
mov
and
xor
out
pop
mov
shl
cmp
daa
push
cld
insl
and
rolb
jge
xchg
xor
push
push
aad
in
xorl
imul
xchg
loopne
xchg
rolb
call
call
xlat
mov
orl
scas
mov
inc
and
popa
mov
xchg
lea
mov
dec
mov
incl
imul
dec
jno
jecxz
dec
les
shlb
jmp
loope
sub
mov
movsb
jne
ss
lret
es
pop
pop
scas
lock
mov
mov
cmp
lods
pop
or
push
push
data16
mov
and
dec
ret
movsb
sub
enter
div
add
fldt
jl
dec
mov
inc
add
jne
xchg
inc
and
aam
lahf
adc
cmp
incl
loop
mov
shll
mov
push
pop
test
xchg
jbe
mov
xlat
frstpm(287
test
insb
push
mov
into
and
jle
pop
nop
xchg
push
cs
aad
mov
mov
out
stc
inc
jo
pop
push
data16
lcall
int3
add
insb
flds
lcall
xor
mov
sub
and
jmp
imul
data16
mov
push
mov
jecxz
sub
sub
and
and
mov
insl
push
inc
movsb
mov
mov
mov
jnp
dec
inc
mov
in
mov
mov
jbe
cmc
data16
mov
mov
sti
pop
movsb
cmp
or
sbb
add
dec
out
cmpsb
inc
add
mov
or
lock
adc
dec
aas
inc
repz
xorb
and
mov
in
js
push
jbe
lret
sti
and
loope
dec
in
cs
pop
add
and
fmuls
cmp
aas
int3
add
and
ret
xchg
lods
pusha
sub
mov
outsl
add
adc
push
cmp
xor
in
jne
flds
sbb
mov
aam
pop
push
dec
hlt
sub
ficomps
fdivrl
push
xchg
stos
xchg
lret
jno
or
fwait
jnp
inc
inc
int
xchg
xorb
push
pop
insl
loop
inc
xor
add
lods
mov
out
enter
ret
imul
push
mov
fstl
pusha
xor
push
dec
push
jno
pusha
loopne
lcall
dec
rorl
imul
push
push
scas
add
or
ret
push
scas
jl
ds
cs
mov
mov
xor
jae
xchg
addr16
jle
cmc
fisttps
es
fdivl
sub
sarb
popf
scas
adc
push
popf
sbb
loop
rorb
andb
aam
inc
cli
in
push
push
movsl
and
loopne
add
or
xchg
insb
call
sbb
stos
inc
xor
jne
ret
into
nop
or
mov
cmp
cmp
in
rcll
je
icebp
mov
mov
das
jno
dec
pushf
xor
mov
inc
jp
cmpsl
mov
lret
fsubp
mov
jb
push
push
ss
hlt
dec
pop
ror
pusha
and
lcall
jbe
sbb
scas
xorb
movsl
pop
sbb
mov
ret
in
aas
jae
outsl
or
push
mov
pop
add
loope
loop
in
mov
sbb
push
shrl
and
into
pop
push
or
sbb
pop
mov
xor
jl
sbb
fwait
dec
movsl
aad
push
and
and
jmp
mov
lahf
clc
dec
lds
xchg
cmpsb
ss
mov
stos
mov
daa
js
addb
js
jb
or
inc
jle
xor
fidivl
xchg
sub
xchg
lock
pop
in
inc
jge
sub
mov
cmpsl
mov
pushf
aaa
cmpsb
pop
push
jb
mov
imul
push
push
pop
adcb
mov
pop
iret
ret
push
push
insl
pop
aad
add
push
mov
jecxz
pop
push
mov
jle
sbb
fwait
and
insb
jl
dec
mov
mov
add
push
stos
add
scas
mov
pop
push
jecxz
mov
or
out
das
mov
pushf
or
cmp
push
mov
cwtl
clc
xor
movl
imul
in
imul
insb
imul
mov
mov
push
inc
cmp
pop
and
les
push
cli
je
loop,pn
mov
fs
xchg
adc
and
jae
aaa
fdivs
ret
repnz
jnp
cwtl
mov
das
outsb
inc
ret
stos
lea
adc
nop
ficoml
add
mov
mov
jl
mov
pop
and
test
test
sbb
mov
mov
pop
dec
inc
loopne
mov
aad
pop
mov
cmpsl
mov
and
pop
aam
insl
test
adcl
jg
pop
rcr
and
sub
pop
test
mov
es
xchg
jae
mov
arpl
push
int3
jge
std
pop
lret
gs
in
xchg
movsl
dec
lret
scas
aam
pop
and
dec
adc
mov
test
inc
or
nop
mov
dec
pop
add
scas
in
popl
sbb
push
scas
fadd
adc
push
xchg
call
push
shlb
repnz
add
or
int
sbb
mov
adcl
aaa
rclb
dec
fwait
xadd
popa
pop
aad
in
xor
jmp
lds
xchg
outsb
and
mov
inc
xchg
pop
push
in
imul
push
imul
fsubs
daa
mov
clc
lea
xor
xor
fwait
in
hlt
outsb
xchg
nop
jo
sub
pop
xor
dec
nop
ret
sub
filds
jns
add
jle
loop
xchg
jecxz
push
mov
inc
xchg
enter
xlat
xchg
dec
push
idiv
inc
lods
or
cmp
mov
jnp
add
xor
inc
xchg
jb,pn
sub
cmp
sbb
jnp
jl
pop
mov
sub
push
jecxz
enter
loopne
sub
add
lret
inc
ss
mov
cltd
mov
jnp
cmp
ret
daa
mov
out
pop
aaa
dec
jno
mov
js
add
adc
push
push
push
mov
push
sbb
std
les
repz
jg
inc
repnz
mov
push
pop
sahf
out
push
mov
xchg
cltd
rorb
fdivrs
add
test
cmp
sbb
mov
cltd
mov
arpl
popf
scas
and
mov
fistpll
adc
sub
pop
test
je
xchg
stos
insb
sub
mov
fiaddl
popf
lds
jmp
enter
js
jl
in
data16
push
or
pop
dec
xchg
push
xchg
cmp
int
shlb
mov
xlat
out
int
aad
or
mov
pop
hlt
adc
test
loope
xchg
mov
daa
jo
xlat
cltd
subb
cmpl
xor
hlt
jo
dec
pop
mov
cld
cmp
cli
add
pop
mov
daa
arpl
rcl
xchg
fwait
jg
dec
inc
iret
je
pop
sti
add
adc
fistl
xchg
inc
lods
scas
add
xor
jecxz
fwait
scas
sub
xchg
sbb
dec
cmp
pop
adc
jns
call
fcoms
sbb
pop
lods
jge
in
pop
xchg
fidivrl
jmp
cmp
pop
mov
push
fcmovnbe
push
mov
dec
and
cmp
mov
inc
clc
roll
sub
loop
mov
sub
dec
movsb
fsubl
mov
pop
inc
jne
mov
mov
andl
clc
dec
xor
lock
pop
pop
adc
nop
shl
ficomps
movsl
and
fisttpll
imul
xorb
xchg
subb
je
inc
rolb
shrb
and
xor
dec
mov
shlb
inc
xor
loop
ret
rolb
sub
iret
test
sbb
call
jo
push
or
xchg
xlat
mov
imul
arpl
cmp
push
mov
sub
ljmp
lret
in
pop
mov
in
lock
xor
jae
add
nop
inc
or
das
or
in
in
in
or
or
and
adc
mov
jo
adc
xlat
mov
cmp
mov
outsb
shrl
mov
iret
and
mov
or
sbb
jecxz
sbb
sbb
inc
pop
out
cmpsb
mov
cltd
bound
fisubl
sub
sub
daa
lods
mov
stos
mov
add
sti
cli
push
push
mov
stos
int
adc
add
dec
das
cli
mov
loop
jge
cmp
xor
mov
mov
sub
cwtl
sbb
mov
in
dec
fs
jb
movb
lret
out
mov
xor
pop
outsb
fincstp
xor
jl
nop
dec
or
fs
xchg
cmp
pop
mov
or
xor
push
push
fs
xor
in
out
inc
in
call
fsubl
fisttpl
mov
inc
in
adc
push
stc
das
dec
push
mov
xchg
push
mov
popf
push
fdivrl
sahf
gs
mov
push
sbb
xorl
lret
fcomps
jmp
loop
add
inc
shlb
xchg
add
jmp
ds
aaa
xchg
ss
aas
insb
idivl
pop
push
push
xchg
rorl
jbe
mov
mov
sbb
push
jecxz
pop
sub
pop
out
push
insb
clc
popf
notb
mov
pop
ds
dec
cwtl
aam
out
rcrl
out
jg
push
pop
xor
idivl
insl
ret
clc
cmpsl
or
mov
sbb
add
jecxz
jecxz
lea
stos
push
popa
loopne
and
jl
int3
xlat
or
movsb
sahf
sub
inc
mov
movsb
fsubrl
mov
cmc
mov
aad
test
cmp
mov
push
adc
jmp
push
add
mov
int
pop
mov
ja
outsb
xchg
aaa
inc
out
mov
sbb
hlt
sub
shl
jge
jle
mov
inc
lahf
outsb
add
aas
and
loop
or
jae
scas
pop
pop
movb
and
ret
cmp
xchg
dec
aaa
inc
out
and
xor
inc
sbb
bound
or
and
xchg
xchg
cmc
push
adc
sbb
push
mov
aad
fmull
mov
stc
outsb
jae
fistpll
insl
leave
fsub
sub
adc
insb
fcomps
xchg
sub
fwait
mov
jbe
outsl
shlb
sub
jge
lds
mov
sbb
pop
adc
mov
mov
loope
fwait
inc
insw
mov
and
call
fsubrl
movsl
mov
mov
jge
xlat
dec
add
enter
stos
push
sub
and
shr
inc
push
mov
scas
mov
in
rcl
xor
addr16
mov
cld
in
fistl
stc
and
dec
stc
aaa
aas
ss
mov
adc
pop
ficoms
subb
fwait
test
mov
lahf
mov
adc
ret
and
in
daa
imull
mov
dec
push
or
push
sbb
push
icebp
push
xchg
daa
push
idivb
cmpsl
adc
into
add
mov
push
or
push
and
and
mov
mov
sub
or
inc
lret
fcmovnb
sbbb
sbb
popa
insb
fdivrp
enter
add
mulb
mov
cli
jne
mov
pop
dec
test
jbe
mov
clc
xor
sbb
adc
mov
add
loop
int3
imul
repnz
repz
jg
aad
cli
and
mov
popa
ljmp
push
stos
xor
scas
cld
fs
sbb
addr16
sub
adc
or
aas
loope
out
movsb
push
mov
mov
gs
sbb
xchg
sbb
ret
imul
out
popa
sub
dec
movsb
mov
call
cmp
outsl
pop
add
push
lret
aad
iret
push
push
cmp
adc
test
mov
xor
push
test
cmp
icebp
xchg
cmp
lahf
dec
stos
xor
aaa
jb
imul
js
pop
mov
sbb
adc
xchg
adc
pop
daa
je
dec
ljmp
outsl
mov
sub
repnz
and
mov
dec
dec
dec
pop
sub
rorb
js
popa
mov
sbb
lret
sbb
pop
js
out
lods
inc
pop
pop
push
cltd
mov
xchg
imulb
repz
orl
hlt
cmc
into
in
sbb
mov
mov
dec
clc
dec
cmp
xchg
stos
inc
xor
mov
xlat
ret
mov
jb
ljmp
ljmp
js
aad
out
and
addr16
lahf
rorl
xchg
mov
inc
testb
lods
scas
xor
int
nop
xchg
sub
mov
jmp
iret
cmp
repz
cli
je
out
mov
adc
pop
and
or
lods
fs
xor
insb
mov
and
push
inc
xor
cmpsb
mov
and
das
or
shr
jbe
rcl
cmp
dec
cmp
add
or
incl
mov
pop
mov
in
lds
jbe
cmp
scas
lret
push
mov
adc
or
xchg
in
mov
push
lock
enter
out
das
in
and
orb
cmp
notb
sub
mov
dec
lock
repz
mov
ljmp
jecxz
ret
lcall
enter
leave
xor
adc
popa
or
aaa
jmp
cli
and
jp
bound
fwait
jb
dec
rep
imul
adc
int3
les
mov
sbb
cmp
xor
pop
sub
push
xchg
outsl
or
aam
sbb
xchg
paddsw
les
sub
loopne
lds
cli
mov
leave
cltd
sub
fimull
outsb
jge
mov
out
pop
loop
call
jge
cmpb
sbb
jno
inc
xchg
push
xlat
adcb
loope
call
xor
dec
lock
cmp
push
sbb
lret
and
mov
mov
js
stos
jo
cmp
out
push
popf
inc
mov
fisubrl
inc
cmc
inc
imul
rorb
negl
pop
in
xchg
push
int
or
arpl
and
adcb
push
cltd
popa
stos
mov
xorl
inc
xor
jns
mov
push
fcompl
jbe
mov
inc
mov
mov
jae
imul
jg
ljmp
sub
xor
xchg
insl
sbb
mov
mov
loope
leave
test
cmp
out
add
out
inc
out
dec
bnd
cli
shrb
xchg
add
bsr
les
jb
inc
sbbl
rorl
mov
test
and
jnp
push
out
sub
mov
xchg
jnp
jbe
xchg
sbb
jge
movsl
inc
adc
adc
jae
popl
lret
lods
jae
mov
bswap
mov
lahf
outsl
push
mov
loop
jle
mov
ds
jecxz
fwait
stos
sub
aas
cmp
and
idivb
dec
cmp
shlb
or
pop
and
repz
mov
jns
cmp
mov
xchg
mov
into
or
nop
stc
jmp
scas
xchg
flds
sbb
arpl
outsl
daa
orb
or
aaa
in
inc
data16
andl
fisubs
stos
das
je
test
ds
dec
adc
cmpsl
fldl
fnstenv
xchg
xor
pushf
cmp
inc
cltd
jg
pop
xchg
ret
sub
pop
ss
add
jge
fwait
dec
lock
scas
mov
sbb
mov
add
lret
fwait
imul
outsb
jl
add
jge
pop
and
adc
or
clc
pushf
push
fisttpl
cltd
sub
mov
sub
loopne
ror
mov
mov
hlt
enter
lods
add
inc
sub
lods
sti
sub
or
cmp
pop
gs
in
out
xlat
stc
in
jp
pop
sahf
stc
movsl
or
fwait
aas
xchg
add
and
outsb
fwait
movsl
loop
jmp
push
mov
loopne
inc
pop
ret
jb
sub
sbb
outsb
xchg
and
push
lret
pushf
mov
in
pop
push
fadd
sbb
xor
xor
mov
fcoms
inc
and
out
or
cli
rcrl
xchg
pop
cmc
sahf
pop
cmpsl
int3
notl
aad
lock
bound
xor
lret
cld
xor
sub
or
push
popf
lar
sub
jne
jle
flds
lods
loopne
add
mov
cmp
icebp
daa
xor
jb
cmp
cmpsl
jp
inc
lods
arpl
dec
mov
into
repnz
mov
shll
or
out
add
pushf
addr16
in
and
sub
and
sbb
cli
inc
jb
gs
rcrb
sbb
int
jg
out
mov
sahf
lea
mov
addb
pushf
cmp
stos
mov
xchg
dec
mov
jnp
jl
inc
das
pop
xchg
or
imul
mov
mov
ljmp
movsb
popa
into
in
pop
in
push
ljmp
cmp
or
cmc
out
jmp
mov
xor
insl
adc
inc
es
xor
fidivs
sbb
cmp
scas
add
or
scas
movl
xor
add
into
lea
jae
cltd
subl
dec
outsl
cmpsl
mov
repnz
push
push
sarl
icebp
imul
mov
stos
ficompl
sbb
xor
or
sarl
xchg
add
stos
popf
divb
xchg
sti
imulb
out
sbb
or
xchg
mov
adc
jne
test
hlt
pop
stc
psrlq
cwtl
mov
das
cmp
push
arpl
orl
pop
mov
out
pop
xor
xorb
aad
or
push
movsb
ljmp
add
sbb
lret
inc
cmpl
dec
jg
leave
dec
es
lods
loop
subl
sbb
jg
push
lret
stos
pop
pushl
add
cmp
mov
jecxz
fldt
ror
push
mov
cmp
test
dec
push
aad
mov
inc
mov
sets
cs
and
insb
jb
jle
cmp
fs
in
inc
push
ret
mov
hlt
cmp
push
xor
or
cmpsl
enter
lahf
cmpsb
fnsave
and
arpl
jp
movsb
dec
push
mov
lods
inc
icebp
arpl
inc
sub
cmp
push
cs
push
stos
test
aas
xchg
sub
gs
cli
sub
and
pop
mov
sub
out
sub
loop
push
dec
lea
cmpsb
jge
add
call
out
dec
cli
add
jg
call
sbb
pop
dec
add
dec
js
push
jg
test
inc
add
lods
jae
bound
adc
xor
jp
push
popa
in
rolb
imul
pushf
divl
add
mov
cltd
pop
xchg
inc
in
loope
scas
pop
int3
xchg
push
mov
push
add
rorb
adc
and
fdivl
out
fdivrl
repz
fsts
je
add
jb
cmp
or
sub
sbb
push
das
shrl
pop
jle
dec
cmp
cld
lock
jg
lods
mov
mov
mov
jmp
bnd
fnstenv
stc
mov
and
test
xchg
dec
cmc
aam
mov
cli
dec
pushf
pop
cmp
mov
pop
jecxz
ja
stos
dec
add
cmpsl
rorb
lret
fstps
push
xor
sbb
xor
jge
jle
into
push
rclb
mov
icebp
push
outsl
inc
pusha
movb
out
stc
mov
xchg
or
mov
mov
cwtl
fwait
jae
xchg
hlt
or
fistl
iret
neg
std
pop
test
inc
out
and
popa
sub
das
je
jmp
cli
outsl
lods
shlb
xchg
ss
jle
mov
add
into
dec
js
mov
jmp
adc
xor
cmp
sbb
push
push
adc
inc
sbb
iret
push
jl
aas
or
jle
test
sbb
sbb
js
or
out
xor
fwait
mov
lcall
lret
cmp
adcl
sbb
mov
sub
test
inc
idivb
push
int
push
xchg
jns
xchg
sbb
mov
inc
sbb
loopne
lock
inc
jb
inc
out
and
mov
popa
mov
imul
cmpsl
mov
xlat
dec
testb
inc
scas
movsb
test
bndldx
xor
push
xlat
xchg
fbstp
int
dec
imull
popf
xor
adc
fnstsw
movsl
or
lock
sahf
ret
and
sub
mov
ret
es
and
xchg
sahf
sub
pop
jg
xchg
push
adc
aam
sti
xchg
cmp
mov
xor
stos
insl
inc
jg
jmp
lret
int3
mov
xchg
mov
pop
xor
shll
pop
and
jmp
loopne
inc
loope
pop
rcrb
sbb
adc
mov
mov
mov
mov
int3
in
lds
dec
adc
adc
sbb
ror
mov
mov
insb
or
shll
repz
rcll
cmc
adc
ljmp
loope
repnz
test
ds
mov
lret
jno
enter
pop
mov
fwait
mov
outsb
movl
fimuls
and
sub
repnz
sub
je
jmp
mov
pop
decl
jae
ret
mov
mov
cmc
pop
or
lea
out
mov
test
cmpsb
mov
fwait
mov
icebp
hlt
popf
and
cli
fstps
and
cwtl
pop
into
jno
lods
lret
mov
repz
in
mov
sub
push
cmp
test
mov
dec
mov
xchg
push
orb
cmp
jmp
orl
repz
enter
sub
mov
mov
mov
add
mov
and
shll
xchg
push
jge
xor
jns
ret
and
cwtl
lret
inc
stos
jbe
iret
idivb
and
lods
jne
xchg
mov
jp
incb
roll
mov
mov
into
or
or
sbb
inc
inc
and
adc
mov
push
and
jne
loop
out
ds
mov
cld
movsb
sbb
mov
out
ror
mov
mov
stos
pop
mov
cli
ds
jmp
leave
aad
out
cmpsb
rol
push
sub
mov
lahf
mov
mov
test
sahf
or
sbb
loope
push
xchg
rorl
in
pop
jmp
inc
sub
lods
les
mov
cld
int
xchg
iret
fwait
insl
cmp
inc
int3
pop
loope
pop
lahf
out
xchg
jp
jo
sbb
mov
addl
push
or
insb
and
repz
pop
mov
les
jo
gs
adc
push
outsb
ds
inc
insb
push
adc
cmpl
adc
dec
mov
add
and
fldl
add
inc
lahf
ljmp
outsb
aas
in
sub
or
sbb
ds
pop
scas
cmc
ficoms
mov
push
push
imul
inc
mov
add
pusha
xor
push
mov
test
mov
popf
lret
adc
mov
and
push
aaa
jle
sub
fwait
hlt
xchg
leave
or
jmp
add
xor
test
in
cmp
adc
outsb
push
testb
fbstp
std
outsl
sbb
notl
mov
pop
sbb
or
xchg
push
shll
cmpsl
cmp
dec
push
jae
jns
sub
fs
in
bts
sbb
mov
cmp
push
sbb
jno
mov
lock
lahf
imul
inc
push
stos
mov
sbb
xor
icebp
bound
lods
icebp
sub
fwait
hlt
outsb
push
lock
stos
mov
mov
fs
cmp
cmp
loopne
mov
lea
sbb
mov
test
stos
adc
dec
mov
mov
call
inc
pop
lret
push
divb
dec
insb
cmpb
jle
icebp
jnp
dec
mov
imul
pusha
xor
or
and
mov
mov
add
cmp
jge
sti
mov
fcmove
mov
mov
inc
push
mov
mov
inc
stos
lcall
fwait
adc
mov
push
xchg
test
pop
sahf
movsb
stos
inc
movsb
loopne
pop
sbbb
dec
xor
fidivl
test
pop
cli
dec
pop
sbb
pop
cmp
fwait
stc
lods
add
repnz
mov
cmp
mov
sbb
popa
sbb
fcoml
inc
xor
cmpl
pop
pop
pop
nop
out
movsl
enter
es
je
frstor
push
das
ficompl
xor
das
cld
bound
sub
rcr
add
jo
adc
mov
inc
or
lret
xchg
sub
outsb
push
mov
sahf
movsl
fistl
pushf
cmc
scas
xchg
test
fsubrs
out
add
jb
adc
inc
push
ds
sbb
jmp
test
movsl
aam
sub
push
xchg
push
jmp
stc
jp
pop
insl
add
test
and
push
sbb
cli
xorb
mov
movsl
pushf
mov
aaa
mov
inc
test
icebp
sbb
push
es
push
call
push
push
add
add
pop
cs
sti
push
mov
inc
sub
dec
and
push
xor
sub
pop
sti
inc
push
imul
inc
dec
cwtl
mov
ret
addr16
mov
push
push
push
popa
bound
cmp
pop
leave
lret
xor
lret
inc
push
pop
cmp
mov
xor
dec
fistpll
cmp
push
sub
push
gs
lds
push
sbb
test
ret
leave
outsl
xchg
mov
jg
pop
int3
lods
add
push
loope
aaa
mov
jne
sti
imul
push
push
cli
pusha
cs
push
pop
loope
dec
sbb
dec
and
lret
outsb
stc
test
lds
push
cmp
sahf
xchg
in
add
fsubr
mov
mov
scas
enter
sub
mov
ja
mov
ret
loope
addr16
mov
jbe
fisubrl
inc
or
jbe
test
test
jg
inc
sub
test
xchg
or
push
cmc
or
jne
add
or
enter
cmpl
push
mov
jnp,pt
mov
inc
jge
or
xchg
js
dec
insb
mov
adc
inc
fs
mov
testb
rcrb
or
or
aad
popf
or
lahf
sub
and
lcall
or
ss
pop
je
inc
cmpsl
aas
or
jp
and
ret
push
inc
cmc
cmp
push
aas
mov
pop
insb
lea
out
inc
sti
shl
icebp
int3
xor
sbb
in
cltd
ret
int
imulb
dec
test
test
lcall
and
cmpsb
in
or
mov
or
roll
pop
loopne
add
pop
inc
or
nop
outsb
and
and
xchg
or
pushf
and
loopne
iret
inc
sub
jnp
inc
fstpt
ja,pt
push
mov
js
ja
test
jle
xlat
mov
xchg
ficompl
add
out
repnz
shl
scas
std
sahf
addr16
xchg
xor
or
inc
mov
push
mov
jmp
pop
leave
adc
cmp
push
mov
icebp
xchg
enter
popf
cmp
adc
in
sbb
jnp
mov
and
into
fmulp
das
les
sbb
mov
pop
cmove
or
bound
add
les
les
xor
psrad
stc
filds
orb
sbb
ret
icebp
int3
xorl
insb
jmp
mov
mov
notb
push
enter
sbb
daa
pop
xchg
mov
pop
sbb
leave
mov
add
or
cmp
pop
sub
mov
movsl
and
les
shl
ret
push
jmp
mov
add
repz
test
out
mov
outsl
mov
imul
jnp
mov
pop
xchg
xchg
sbb
lea
xor
add
and
pop
and
dec
aaa
sti
or
mull
sbb
jge
decb
push
xor
cs
adc
push
mov
adc
inc
test
push
out
push
sub
js
mov
pusha
leave
ja
or
ds
cs
mov
mov
xor
jp
insl
test
mov
jb
popl
sbb
mov
arpl
pop
xor
and
pop
pop
rcll
ja
int3
jno
cld
mov
jmp
out
mov
sbb
inc
or
inc
stos
std
inc
call
jl
inc
pop
pop
dec
push
in
sbb
sub
mov
mov
lods
clc
mov
xchg
inc
pop
push
jns
push
adc
idiv
mov
jo
daa
xchg
push
pop
sahf
sbb
les
adcl
and
ja
sbb
movsl
in
adc
xlat
lret
scas
mov
in
mov
push
cmp
xchg
push
xor
popa
outsb
iret
sahf
movsb
mov
aam
dec
fistps
les
push
xor
repnz
aad
mov
sbb
into
jmp
pop
call
push
sti
pop
mov
nop
mov
mov
adc
push
inc
or
push
push
push
mov
out
mov
adc
add
jae
sub
stc
mov
adcb
in
call
shr
cmp
push
shll
iret
scas
pop
fdivr
stos
fcmovb
daa
add
adcl
out
imul
call
jp
in
ret
jmp
stos
pop
inc
insb
lock
movsl
pop
movsb
push
mov
call
xor
andl
pop
enter
outsb
aam
sbb
inc
inc
jle
mov
xor
out
popa
fs
mov
pop
xchg
je
movsl
outsb
sbb
dec
dec
mov
mov
mov
out
push
lret
repnz
pop
ret
stos
fcoml
xchg
push
xor
mov
roll
hlt
pusha
sbb
scas
sbb
mov
inc
out
test
fucompp
mov
scas
mov
out
outsb
mov
lahf
xchg
or
add
adc
les
test
add
test
loope
cltd
stos
lret
mov
arpl
pop
mov
andl
pop
adc
bound
aad
lods
fstpt
repz
lods
rcl
push
jp
xchg
clc
aam
inc
pop
mov
xchg
or
popa
cltd
sub
sub
xor
into
xchg
xchg
xchg
out
sub
fs
push
jno
xchg
adc
sbb
pop
scas
jg
mov
nop
ror
or
sarb
jmp
add
lahf
subl
pop
daa
cmp
push
pop
push
sub
nop
jbe
cmc
xlat
mov
into
pop
cli
movsb
std
outsb
out
fcomps
rcrl
push
scas
or
icebp
popa
push
mov
sbb
jmp
lcall
es
mov
repnz
sub
out
sub
test
push
mov
in
lret
mov
popf
dec
lret
rcll
out
pop
cmp
imul
fnstsw
xchg
or
add
rcll
push
ds
push
lret
fisttps
pusha
sub
jbe
sbb
movsl
out
pop
jl
pop
insl
mov
dec
loop
jae
pop
xchg
mov
and
sti
lcall
enter
cwtl
sbb
push
push
sub
rol
test
movsb
cmpsb
mov
in
add
push
push
jb
push
push
xchg
loope
lcall
into
inc
popf
test
add
dec
mov
push
popf
inc
sbb
or
jae
mov
cmp
and
nop
fstps
xchg
pop
adc
and
clc
dec
xor
ret
es
loop
rclb
lret
imul
mov
or
mulb
or
gs
push
xchg
jle
int
pop
jp
mov
in
xlat
pop
insb
push
fldenv
hlt
aaa
adc
cwtl
xor
xchg
adc
mov
inc
fiadds
fcmovnu
das
mov
push
xor
pop
idivb
out
add
popf
adc
xchg
push
pop
push
mov
mov
jno
ret
arpl
inc
cld
arpl
call
ja
mov
outsb
ja
fwait
mov
ret
fdivl
jnp
out
nop
loopne
ret
and
pop
xchg
xchg
dec
jg
out
mov
jle
fstl
jb
cld
adc
and
pushf
mov
ja
mov
sbb
enter
ss
push
add
jge
inc
gs
into
lret
and
pop
lcall
mov
jne
cmp
xchg
popa
in
das
cwtl
push
cwtl
aam
pusha
mov
xor
lea
cs
cmc
pop
mov
adc
sbb
roll
add
and
push
xchg
jae
jo
sub
iret
insl
nop
jb
pop
jg
jp
push
out
orl
loop
jge
jns
xor
lock
xor
lcall
lret
sub
sbbb
xor
xor
or
jmp
push
es
mov
ljmp
aaa
pop
xchg
pusha
and
cmp
push
mov
jne
and
aaa
shll
dec
cmp
jno
divl
sbb
int
ficomps
andb
test
mov
add
psrlq
mov
cmp
das
aas
testb
imul
mov
or
nop
notl
jmp
and
cmc
out
gs
ljmp
adc
loop
mov
push
outsb
mov
jne
ljmp
ret
pusha
in
cmp
xor
bound
add
leave
aam
mov
nop
mov
and
clc
jo
das
enter
or
add
sbbl
add
add
loope
mov
pop
jg
enter
jge
shl
jno
sarb
cmp
adc
push
test
ficoms
shll
mov
xor
push
call
fstpt
jns
push
js
fcmovbe
rolb
xchg
dec
in
jnp
leave
mov
vmovntdq
in
divb
and
and
add
jl
or
popa
xor
mov
xchg
sbb
push
pop
and
dec
lods
ja
mov
jbe
xor
ss
js
mull
cmp
cli
sub
or
jge
xchg
repz
adc
xlat
test
add
and
xchg
ret
out
lea
js
mov
aaa
data16
dec
add
dec
lods
dec
popf
mov
fidivrs
inc
push
repnz
loopne
mov
mov
outsb
and
iret
cmpsw
int3
xchg
lods
mov
fisubrl
pop
lods
sub
push
stos
cltd
std
inc
fcom
mov
inc
cmp
nop
jne
outsl
cld
rcl
cs
sbb
call
cmp
jnp
pop
roll
jmp
mov
and
test
test
jno
jae
imul
loopne
lret
xchg
fiadds
cli
sbb
inc
fcmovnb
fcoml
lret
xchg
popf
or
jns
mov
cmp
push
mov
sub
repnz
push
std
adc
mov
jl
cmp
cld
xchg
or
or
mov
lds
xor
jmp
mov
inc
push
inc
push
pusha
repnz
xchg
and
inc
pop
insl
dec
pusha
fstpt
sbb
push
dec
mov
stos
sbb
scas
jg
push
repz
adc
shlb
leave
jb
dec
push
sbb
dec
adc
push
cmp
sarl
push
daa
sbb
sbb
sbb
sub
jecxz
fiadds
cwtl
or
xchg
dec
adc
enter
mov
in
ja
jno
test
add
ds
dec
incb
pop
inc
xor
adc
mov
xor
testl
outsb
arpl
or
ds
mov
ret
jge
push
fisubrl
or
fsubrp
fimuls
pop
insb
push
ret
jge
push
xchg
xorb
nop
and
push
xor
push
sbb
mov
push
xor
push
push
sti
mov
and
mov
ror
subb
sbb
outsl
xchg
mov
mov
das
pop
dec
cld
sub
jns
xorl
sub
arpl
xchg
test
mov
bswap
fildl
scas
subb
xchg
and
arpl
inc
repz
and
sbbb
out
pop
lret
cmp
xor
bound
into
cmp
push
clc
push
mov
lock
inc
adc
scas
or
push
arpl
push
mov
mov
xor
mov
sub
lods
pusha
cmpsb
in
push
imul
inc
nop
pushf
mov
mov
scas
rolb
jb
add
adc
inc
aad
iret
movb
out
cmp
imul
jbe
jl
sbbl
mov
push
roll
xchg
lret
lret
iret
aam
or
adc
and
xlat
pop
sbb
rclb
mov
sub
push
push
shll
in
out
adc
btr
lods
or
gs
mov
dec
leave
popa
test
scas
jmp
mov
inc
dec
lea
mov
add
dec
mov
fprem1
push
inc
out
ss
test
jbe
mov
sbb
push
dec
lret
dec
lods
lcall
pop
mov
xchg
mov
mov
pop
out
cmp
push
rorb
jl
mov
xorb
push
mov
push
int3
and
test
mov
pusha
dec
sub
adc
push
mov
call
jge
popf
push
lea
push
icebp
or
stos
out
adc
dec
xorb
iret
movsl
jecxz
dec
dec
pop
push
insb
mov
repnz
into
inc
sbb
sub
outsb
ret
into
add
jae
popf
push
dec
xor
jle
sbb
in
xor
cs
negb
push
cmpsl
clc
sub
jae
push
aad
inc
jno
dec
sti
lcall
pop
push
fadds
dec
iret
jp
adc
out
in
xchg
sbb
imul
xchg
and
imul
jmp
sbb
jb
push
jne
aas
xchg
sbb
in
cmp
les
mov
xor
mov
shrb
sub
pop
mov
cmpsb
jns
ret
xor
aas
adc
jne
stos
adcl
jb,pn
das
rclb
mov
push
pop
xor
les
xchg
in
mov
ja
adc
dec
sub
ret
mov
stos
int
fistpl
stc
inc
mov
jnp
ds
or
shl
ja
out
in
mov
mov
push
cli
in
cmc
adc
test
mov
scas
add
pop
insb
pop
sbb
stos
sub
add
and
jg
pop
or
rolb
lret
lcall
or
push
jb,pn
xor
inc
sbb
sub
dec
mov
stos
fldl
mov
ret
test
repnz
jge
int3
or
pop
adc
aam
sub
enter
lcall
es
aad
loope
xchg
imul
mov
inc
ds
and
mov
cltd
stos
out
mulb
mov
into
add
jl
pop
mov
push
sub
cltd
push
fdivl
jb
clc
and
mov
je
sub
jmp
fcomps
inc
pop
or
mov
mov
push
sbb
dec
or
or
insl
insb
push
fsubs
mov
loopne
cmp
cmp
nop
or
loop
or
or
xor
or
pop
fisttpl
jp
jg
out
inc
dec
and
adc
and
divb
leave
fimuls
jo
out
jle
push
shll
add
inc
inc
out
aam
cltd
and
or
in
mov
out
aas
cmpsl
inc
sarb
xchg
mov
outsb
or
bound
adc
xchg
sub
out
push
insb
mov
mov
aaa
inc
fistpl
ret
xor
incl
std
loop
sbb
inc
inc
push
add
shrb
aaa
xchg
pop
loop
bound
enter
es
dec
xor
loopne
push
cmp
dec
xor
addb
cmp
arpl
pop
daa
lret
or
sub
sbb
inc
dec
mov
ret
push
stos
pop
inc
pop
imul
aas
sub
jns
sub
jno
or
arpl
xor
cmp
adc
mov
jp
call
sbb
mov
mov
scas
loopne
out
adc
btc
pushf
stc
mov
test
stos
adc
or
lret
jbe
sub
push
adc
mov
ret
fnstenv
xchg
lea
xor
cmp
adc
or
mov
out
and
adc
pop
inc
andb
clc
and
insb
test
rclb
or
sub
out
mov
ret
test
pop
sbb
adc
insl
shll
out
inc
sbb
out
pop
mov
stos
xor
cs
fsubs
loop
loopne
stos
fs
inc
fadds
dec
popf
aam
les
push
aaa
xchg
pop
mov
push
fdivrl
sub
sbb
iret
pop
adc
xor
mov
imull
popa
int3
push
cmp
adc
arpl
test
fwait
adc
nop
sbb
ds
ja
lods
fstl
pop
out
pop
sub
pop
mov
jae
jg
add
mov
mov
mov
and
push
xchg
push
bnd
dec
push
popa
mov
pop
inc
into
pop
xor
scas
subb
les
mov
jecxz
pop
xor
xor
mov
jg
or
fmull
jne
aaa
mov
lods
and
mov
sub
imul
nop
cld
shl
fimuls
mov
ljmp
out
in
add
ret
movl
pop
xchg
dec
test
leave
dec
mul
imul
jmp
sub
iret
fwait
nop
sahf
xor
ljmp
mov
push
fidivl
test
adc
inc
test
sub
aad
movzwl
or
pop
mov
clc
shrl
cmp
fisubs
pop
jge
lds
out
sti
shl
adc
movsb
lret
je
mov
ds
es
xchg
inc
xchg
and
clc
cmpsb
or
mov
xlat
and
jecxz
leave
mov
pop
shrb
daa
ja
mov
clc
js
or
xchg
repz
test
arpl
add
push
es
xchg
xor
insl
pop
jne
movb
stos
lcall
mov
jl
das
mov
pop
dec
mov
stos
mov
mov
xor
xchg
pop
lock
adc
cmp
fbstp
les
packssdw
sub
addl
xchg
or
dec
sub
mov
mov
popa
lock
lret
imul
stc
popa
jb
sbb
mov
js
xlat
call
fildll
lea
mov
out
test
push
ret
xor
fadds
xor
clc
fs
mov
mov
mov
pop
insl
nop
jl
add
mov
and
ljmp
outsl
pop
ret
cmpsb
lock
xchg
addl
mov
test
cltd
sti
push
pop
cltd
in
cmp
imul
push
adc
inc
xchg
xchg
lock
push
push
ljmp
mov
nop
rcll
mov
mov
mov
icebp
js
push
sahf
sbb
mov
inc
into
scas
das
mov
adc
lods
add
call
out
jecxz
mov
frstor
add
jo
aas
in
cmp
insb
cmp
pop
fisttpl
jl
mov
inc
push
lahf
test
mov
movsb
sub
pop
movsb
scas
push
outsl
pop
in
sahf
dec
dec
mov
lods
mov
fistpl
test
sub
xchg
pop
adc
clc
push
sub
out
dec
das
mov
and
adc
xchg
std
imul
or
int
cmp
push
cmc
mov
ret
add
bound
pop
dec
pop
or
int3
outsb
outsl
jl
out
enter
pop
popa
adc
mov
stc
mov
pop
rcrl
mov
lcall
mov
jno
rcrb
sahf
dec
sub
pushf
cmp
pmaxub
jae
pusha
into
or
adcb
pop
dec
popa
dec
sub
adc
inc
insb
pop
sub
gs
lret
sub
add
dec
inc
cwtl
mov
les
mov
or
xlat
jge
filds
test
mov
test
iret
pushw
movsb
outsl
push
xchg
mov
mov
sahf
jb
cmc
imul
push
nop
sub
popa
data16
or
lods
loope
lcall
mov
jns
push
mov
testl
and
aas
pop
cwtl
outsl
xor
adc
mov
ljmp
cmp
jg
sti
inc
mov
or
addr16
jmp
push
insb
testl
push
aas
stc
sub
pop
mov
jle
cs
pop
fidivrl
pop
push
call
add
int
and
je
js
sub
xor
pop
add
lea
push
mov
xor
movsl
mov
test
mov
insl
mov
daa
sub
ud2
adc
add
mov
mov
jge
adc
mov
fsubrs
pop
inc
mov
mov
dec
or
out
adc
ret
inc
in
xor
inc
jl
mov
out
sub
sub
pop
mov
and
xor
mov
jno
adc
movsl
and
mov
xchg
add
inc
aad
inc
dec
mov
xchg
dec
int3
sub
aaa
lret
add
and
xchg
sti
es
xchg
inc
test
xchg
dec
push
clc
inc
aad
pop
notb
test
fdivp
in
lahf
es
sbbl
icebp
push
add
popa
add
add
testb
sub
xchg
cltd
jg
xchg
mov
nop
ficoml
dec
add
clc
stc
fisttpl
ja
das
xchg
ja
jno
sub
das
fs
add
inc
push
in
int
pushf
cmpb
pop
ficoms
mov
cwtl
lret
jge
push
shl
push
inc
sarb
scas
dec
loopne
xor
xchg
std
jne
mov
lods
int
ljmp
and
push
mov
ds
jmp
inc
xchg
in
push
or
iret
mov
adc
cmp
ret
inc
fstps
in
pop
add
test
movsb
push
push
mov
arpl
and
add
mov
mov
out
or
push
mov
aas
int3
mov
push
jnp
adc
adc
and
adc
push
mov
xchg
testb
pop
cli
ret
or
jp
ljmp
mov
stos
fistpl
dec
rorb
xchg
fsubp
mov
movsb
outsl
push
xchg
jecxz
dec
stc
int3
das
or
mov
je
fucomi
mov
mull
push
repnz
inc
xor
rclb
repz
and
arpl
and
dec
mov
imul
call
pop
cld
daa
loop
adc
add
call
adc
pop
lcall
repz
xchg
movsl
rorl
sub
jp
sbb
insl
test
and
cli
add
or
loope
fstpl
call
int
xor
or
mov
fst
pop
and
dec
cmp
ja
or
pusha
js
popa
repz
scas
int
dec
add
mov
jns
call
xchg
mov
in
jns
xchg
mov
adc
push
sbb
pop
fs
das
enter
jp
add
cmpsb
mov
push
inc
imul
rcr
addr16
repz
repnz
push
js
out
mov
xchg
and
pushf
mov
dec
sub
jl
pop
jo
adc
jp
inc
insl
mov
ret
jle
jae
repz
cmp
push
mov
aaa
aad
sti
cwtl
pop
ljmp
nop
jo
pop
aaa
test
pop
or
jl
mov
cmp
dec
mov
fsts
xchg
test
xor
xor
xchg
jl
cmp
push
mov
mov
xchg
mov
mov
sbb
mov
rcrl
sbb
pop
lret
inc
mov
sub
rclb
sub
aaa
cmpsl
inc
test
hlt
xchg
push
popa
inc
or
arpl
lods
jae
leave
jl
add
add
xchg
push
ja
and
inc
out
jne
adcb
xchg
add
lcall
mov
mov
jb
jle
add
or
adc
ret
jne
cmp
mov
stos
aaa
jbe,pt
orb
mov
push
mov
mov
add
or
cmc
adc
out
repz
shl
lret
and
loopne,pt
iret
add
pop
jle
rcll
xchg
xchg
adc
std
or
push
inc
jmp
sbb
and
pop
jle
out
sub
xchg
dec
leave
add
mov
scas
dec
mov
push
jecxz
imul
test
adc
loope
and
iret
orb
fucom
iret
into
fnsave
leave
xor
movsl
es
orb
fiaddl
lahf
and
test
gs
adc
pop
out
mov
push
mov
arpl
mov
jo
jp
jnp
nop
push
lds
lcall
into
sub
call
and
jp
in
fdivrs
lods
inc
pop
dec
xchg
dec
leave
mov
mov
mov
lret
clc
sbb
mov
xchg
lret
mov
cmovne
mov
dec
sub
and
and
mov
cmpsl
cwtl
add
jg
lock
jp
pop
clc
lcall
int
stos
clc
ret
iret
cld
aaa
fwait
adc
les
add
push
fs
mulb
sbb
int3
push
sub
insl
add
scas
iret
inc
cmp
add
pop
mov
je
int3
cmc
lock
fistpl
rorb
in
xchg
jp
sbb
hlt
ja
mov
inc
addr16
pop
sbb
sti
lret
fcomi
out
ret
pop
sub
pop
mov
pop
pop
int3
push
fcmovb
xor
enter
xchg
xorb
cmp
xor
es
into
jge
sub
push
sub
sbb
xchg
add
push
jmp
in
mov
lahf
or
fsts
lret
fisttps
clc
mov
dec
jae
or
push
mov
out
pop
mov
and
inc
orl
cli
je
arpl
in
jmp
leave
in
shrl
mov
js
inc
pop
call
dec
mov
and
or
aad
hlt
mov
mov
es
or
cltd
pop
pop
adc
push
je
pop
mov
lea
jbe
xchg
xchg
push
xor
js
dec
in
bound
push
imul
pop
arpl
adc
ss
push
lea
mov
mov
out
jne
sub
inc
dec
rcll
lods
pop
sbb
aad
or
sbbl
fsubl
sbb
in
inc
daa
mov
cmp
sahf
xor
mov
jge
xchg
subl
in
xor
ret
mov
stos
lahf
shlb
leave
out
das
cs
mov
scas
jg
in
nop
neg
pop
jg
or
aad
dec
sahf
pop
aam
repnz
mov
int
sbb
xor
dec
lods
jl
mov
movd
inc
pusha
mov
inc
sarb
dec
push
inc
xor
lods
xor
mov
pop
prefetchwt1
sti
sub
xor
cwtl
and
sub
sub
jo
cs
mov
adc
nop
adc
cmp
push
aas
aaa
aaa
outsl
gs
scas
pop
adc
fidivrs
jbe
or
and
mov
loope
xor
mov
mov
js
push
adc
pop
sarl
rorb
push
lret
xlat
repz
std
sub
repz
dec
cld
leave
add
mov
hlt
lret
and
arpl
adc
fisubrs
inc
jns
out
stos
insb
push
mov
inc
pop
mov
imul
roll
push
lcall
jne
mov
out
in
shrb
mov
xor
add
rorl
cmp
shlb
repnz
repz
sub
outsl
mov
mov
mov
repz
push
lea
bswap
mov
mov
jb
into
popf
xchg
push
inc
loop
mov
dec
or
mov
call
jp
pushf
and
fxtract
pop
cmpsb
in
or
jne
or
movsl
aam
fldl
mov
mov
out
mov
xor
fistl
ret
cmp
add
push
add
sbb
inc
mov
dec
adc
pop
shll
pop
push
cmpsb
cs
ret
gs
mov
arpl
das
cli
fldl
cmp
lret
xor
int
int
icebp
scas
jmp
pop
jmp
and
jg
xchg
and
sub
dec
sahf
xchg
adc
lock
inc
call
out
ds
testb
out
out
out
ret
xor
jne
mov
insb
xchg
outsb
and
jg
fildl
in
xlat
push
arpl
out
add
dec
mov
pop
in
lds
jg
xchg
and
sub
pop
movsb
jecxz
sub
push
fcmovb
cmp
xchg
xchg
cmovg
pop
push
mov
loopne
out
and
sti
aad
int
and
inc
pop
pop
mov
lea
pop
cmp
loop
int3
xchg
cmp
into
and
stc
adc
sub
cld
xchg
lret
xor
popa
sub
enter
scas
in
inc
jecxz
xchg
lret
outsl
cmpsb
in
inc
rorb
and
jl
sub
push
inc
dec
sub
clc
out
movsb
fs
testb
std
fnstenv
out
enter
nop
test
push
aaa
movl
sub
xor
or
add
orl
mov
shll
add
mov
mov
mov
jp
mov
loopne
nop
and
push
ret
sbb
or
mov
loopne
push
push
fimuls
out
cli
sbb
sbb
and
iret
jo
loope
repnz
adc
arpl
jl
arpl
fstpl
fwait
movsb
mov
je
push
sub
inc
decb
iret
adc
in
pop
bound
mov
sub
cltd
fprem1
sub
mov
xor
xchg
dec
mov
dec
inc
add
or
into
lock
data16
push
jp
loopne
push
repnz
or
ret
dec
pushl
xchg
imul
jecxz
fdiv
mov
pop
jecxz
and
test
shrb
testl
mov
iret
and
enter
ficoms
in
push
dec
mov
sbb
cwtl
gs
inc
inc
xlat
mov
pop
js
pop
vpxor
mov
add
inc
jns
pushf
inc
mov
dec
insl
fsubrl
xchg
adc
jp
popf
aaa
dec
mov
mov
sub
in
inc
clc
push
dec
xchg
jns
mov
pop
lret
rclb
fimull
scas
push
mov
xor
aad
mov
std
xor
cld
stos
stos
loopne
aam
leave
daa
icebp
mov
shrb
cli
sbb
int
test
jecxz
mov
inc
pop
lcall
push
cmp
or
cmp
mov
into
sbb
movsb
dec
push
aam
jp
stos
testb
je
divb
mov
jge
add
out
in
ljmp
and
je
mov
repnz
imul
das
movsl
pushf
stos
addl
cmp
and
and
add
sub
add
push
imul
adc
arpl
lret
jle
ljmp
mov
dec
js
push
insb
mov
shl
icebp
flds
pop
mov
iret
push
mov
call
rcr
xor
loopne
lret
enter
pusha
pusha
jp
jmp
mov
mov
or
cmpsb
lock
lods
adc
ret
sar
hlt
or
lods
dec
stc
inc
and
push
lock
jne
lcall
cmp
sub
and
add
sub
scas
aaa
aas
popf
mov
add
add
push
jbe
lds
sarl
int
aam
or
or
push
mov
jmp
orb
or
jmp
in
cmpsb
pushl
in
outsl
and
or
dec
fldcw
mov
and
jl
sti
jo
sbb
inc
or
jl
arpl
popl
add
push
js
iret
jb
xlat
adc
pop
xchg
jmp
xlat
pop
dec
mov
imul
mov
js
dec
mov
push
and
incl
jne
pop
sub
mov
cmp
add
lahf
pop
mov
inc
lods
sbbb
ss
test
dec
xchg
test
repnz
cli
ds
and
faddl
push
dec
popf
inc
or
scas
dec
jle
adc
mov
pop
dec
or
pusha
popf
push
stos
jge
outsl
mov
shl
add
and
pop
push
rcrb
js
sbb
sub
rep
fwait
inc
inc
lea
push
and
rorl
or
lods
daa
pop
cmp
mov
lret
mov
loop
adc
push
dec
xor
jns
fwait
hlt
and
add
aam
jge
imulb
adc
add
adc
scas
pop
mov
cmp
daa
iret
outsb
test
stos
shll
fidivrs
jae
mov
fidivrs
mov
pushf
out
xor
mov
inc
jae
imul
repz
cmp
in
push
fsubs
cmp
xchg
cmpb
sbb
flds
add
mov
lock
inc
mov
inc
dec
xor
paddw
add
fcomip
push
xchg
mov
and
sbb
xchg
inc
fbld
jp
xchg
or
aas
aaa
push
lds
loope
test
neg
ss
or
fstp
lods
cmc
in
sahf
pop
add
add
and
xor
test
test
inc
lret
shl
or
icebp
push
xor
mov
test
test
cli
mov
lcall
lret
cmp
and
decl
cmpsl
push
popf
xchg
cwtl
inc
cmp
and
dec
out
les
stos
and
idivl
lods
loop
pushf
add
adc
add
or
into
pop
movsb
and
sub
lods
dec
mov
push
xor
rcll
mov
test
jo
repnz
cmc
fwait
and
lock
jae
es
dec
addr16
push
ffreep
sub
inc
es
mov
repnz
jle
cs
xor
jp
and
rol
dec
dec
jb
fs
jnp
mov
lods
adc
cli
push
sub
imul
cld
test
xchg
jp
ss
fiadds
dec
cmc
idivb
mov
sbb
xchg
cli
xor
mov
insb
push
fadd
jbe
int3
xchg
push
push
mov
orl
out
sarb
xorl
xchg
add
mov
adc
jge
aas
nop
sbb
fisttpll
fists
pop
mov
cmpl
shlb
lds
shrb
aas
in
icebp
ds
xchg
jl
cmpw
cld
repnz
inc
movsb
xchg
inc
and
push
out
adc
fisubl
div
mov
adc
push
mov
int
pop
push
aad
popa
clc
pop
hlt
insl
nop
int
out
in
cmp
sub
cs
in
aad
mov
push
bound
xorb
pop
fidivl
pop
mov
stc
xor
mov
push
stc
xor
out
pop
cmp
fisttpl
mov
add
inc
mov
sbb
and
add
insb
daa
fsts
lock
xlat
fstpl
mov
sub
jmp
int3
lds
inc
aam
test
jp
mov
or
mov
xchg
dec
es
cmp
xchg
xchg
adc
subb
inc
jno
jno
rcll
lahf
xor
push
xor
xor
and
cmp
sarb
or
or
inc
sti
adc
adc
sti
jle
test
jle
pop
push
cmp
imul
push
and
imul
std
xor
ds
sbb
orb
mov
rcrl
xchg
xchg
loope
jne
xor
jg
leave
mov
cmp
xchg
inc
arpl
add
jmp
loopne
or
or
nop
push
xchg
mov
clc
mov
adc
mov
idivb
pop
pushf
aad
cmp
in
and
mov
mov
jecxz
stc
pop
jl
adc
cmpsl
fistpll
cli
xchg
ljmp
mov
add
pop
jns
xchg
fsubrs
push
xor
out
inc
in
push
adc
adc
xor
jb
xchg
and
sub
push
mov
push
and
sbbl
add
pop
dec
cmp
mov
push
in
scas
addr16
fistpl
mov
mov
lds
aas
shlb
xchg
adc
and
sub
inc
and
mov
mov
pop
xchg
sub
mov
call
rorl
pop
mov
aaa
push
sub
jo
in
xchg
ds
lret
xchg
add
nop
aad
int
ret
cmp
addr16
fisttpl
fistpl
les
jae
add
call
cmp
into
mov
xlat
ss
cmpsl
ds
jle
lcall
lcall
mov
sbb
loopne
cmp
pop
mov
mov
cld
xor
fidivs
std
jmp
stos
shl
fcmovnbe
out
and
push
mov
outsl
lcall
sub
in
or
movl
clc
lock
mov
arpl
div
int3
outsl
mov
mov
into
pop
int3
out
outsl
test
insb
int3
aam
fwait
sbbl
mov
dec
adc
pop
pushf
mov
addb
dec
sbbl
fs
mov
add
out
fs
push
aas
mov
jmp
out
add
push
add
push
lcall
cmp
xor
lods
xor
sub
mov
or
mov
mov
lahf
icebp
ret
or
mov
xor
inc
jecxz
mov
mov
movsb
loope
mov
or
push
shl
aam
jg
mov
mov
hlt
xchg
in
es
nop
dec
mov
sub
jle
xor
in
je
jle
dec
sbb
aad
jno
and
mov
sub
sti
and
out
lods
clc
xchg
aad
ljmp
arpl
cli
adc
mov
mov
sbb
jnp
insb
mov
nop
cmpb
scas
sbb
or
push
or
movsl
xchg
in
cli
dec
dec
push
mov
sahf
jbe
xor
inc
notl
inc
popf
loop
call
sbb
jp
pop
fucomi
out
movsl
mov
ja
out
lret
les
mov
das
jo
jb
xor
enter
das
and
dec
mov
push
rorl
lcall
ss
xor
add
or
xchg
mov
lcall
negl
ficoms
js
les
mov
cmpsb
lods
xor
fbld
mov
mov
mov
popl
or
lahf
cmpsb
in
inc
mov
ljmp
push
ficompl
icebp
fldenv
push
push
pop
adc
mov
loop
les
fldcw
inc
int3
scas
jbe
daa
scas
pushl
and
fistpll
cmp
nop
dec
dec
mov
dec
xor
and
or
push
call
rcrl
dec
enter
mov
int
decb
push
xchg
sbb
inc
std
loope
inc
jl
sub
rcll
lahf
xchg
mov
sbb
js
shlb
push
clc
stos
inc
jecxz
mov
sub
punpckhwd
sub
sub
lods
xchg
loopne,pn
xor
ret
insl
das
adc
sub
fcomps
ja
addl
and
adc
xchg
sbb
inc
lds
sbb
aaa
mov
lret
shll
jmp
enter
push
cmp
xchg
add
pop
add
and
cmp
jae
lods
sbb
call
or
je
sti
iret
fistl
xchg
mov
cmpsb
jl
imul
out
inc
push
lahf
push
push
xor
fmuls
mov
xor
add
cmp
sbb
cmp
add
je
call
dec
scas
dec
lcall
popf
or
shrl
push
loopne
movsl
pop
mov
repnz
scas
out
pop
xor
sbb
xor
and
mov
out
inc
loopne
mov
cmp
scas
testl
push
pushf
scas
fisubl
movsb
mov
add
sbb
inc
lcall
mov
popf
sbb
int3
adc
sub
es
decl
roll
mov
maxps
push
sub
adcl
ja
shl
xchg
push
push
push
pop
popa
push
mov
outsb
push
pop
test
sti
cmpsl
xchg
or
mov
in
xchg
fnstsw
sahf
ds
mov
push
fistpll
jo
and
inc
mov
mov
mov
mov
xchg
arpl
push
mov
mov
add
add
fimuls
mov
jg
fbld
sbb
fldt
xlat
fcompl
xchg
int
cld
out
ds
mov
daa
xchg
adc
enter
aas
jns
push
and
lcall
mull
dec
lcall
popa
rcl
aam
mov
in
xor
push
test
add
out
cld
or
fistl
aas
ja
mov
xchg
jmp
sbb
imul
sbbb
lds
push
sarb
pop
pop
mov
loope
out
jge
jbe
test
jne
je
in
jns
dec
or
mov
mov
sbb
jg
jle
jg
sets
sub
push
scas
test
arpl
sarb
fisubs
icebp
mov
add
loope
daa
rolb
xchg
mov
dec
mov
insb
fisubrs
add
imul
cmp
iret
insb
jo
aaa
fwait
jae
pusha
rcrl
mov
mov
inc
xor
int
push
mov
lcall
cmpsb
or
scas
adc
mov
roll
dec
or
orb
movsl
out
in
add
jb
imul
outsl
fstps
stos
sbb
push
sti
daa
lock
stos
jns
xchg
push
pop
ret
jmp
sahf
sti
fcompl
xorb
adc
outsb
cmp
sub
or
push
je
pop
pop
xor
fprem
rep
mov
adc
and
or
outsb
cs
xchg
aad
jmp
fistpll
xchg
loop
jmp
push
mov
jle
xchg
add
leave
insl
cmp
mov
in
jb
aas
not
push
hlt
jle
sub
pop
or
xor
dec
fildl
notb
pushf
xchg
xorps
arpl
mov
pop
cmpsl
pop
pop
xchg
into
cmp
mov
dec
xor
pop
lds
xchg
movsl
cmpsl
jbe
ja
xor
imul
leave
lods
clc
xchg
pop
and
cmp
movsb
out
pop
pop
iret
sub
fistpll
pop
dec
je
aam
push
lds
movsb
sbb
mov
test
fwait
mov
jecxz
dec
cmpb
add
lea
aad
insl
out
repnz
cmp
addl
pop
sub
fxch
mov
outsl
popa
sbb
addl
pop
data16
inc
clc
xchg
in
mov
pop
inc
fstl
sbb
les
mov
mov
out
push
inc
sub
lahf
sub
ret
pop
enter
out
nop
shl
stos
jne
cs
sub
mov
cmp
xor
inc
xchg
cmp
jne
xor
pop
adc
or
fs
es
testl
out
xor
pop
jne
sub
sbb
cmp
fisubl
stos
sbb
jmp
std
imul
push
stos
xor
xchg
cli
daa
sbb
adc
aas
inc
and
clc
push
pop
sbb
add
out
xor
stos
scas
mov
into
mov
jns
inc
in
jle
add
mov
rol
fdivrl
jbe
and
fsubs
and
outsb
lods
and
es
cmc
sbb
rcrb
imul
mov
lds
lods
mov
push
xor
inc
mov
dec
xchg
mov
es
int
stc
mov
push
shrl
sbb
jle
push
sub
mov
mov
data16
and
sbb
mov
aaa
stos
jp
ljmp
mov
cmp
xor
dec
dec
mov
mov
mov
jne
xor
pop
xor
cmpsb
shlb
and
jo
pusha
test
mov
rcrl
jp
movlps
out
insb
adc
stos
push
dec
pop
mov
popf
fwait
or
out
iret
fstps
sub
inc
lret
sbb
mov
es
inc
adc
jge
mov
sub
adc
push
clc
xor
cmp
pop
enter
dec
nop
and
jnp
ljmp
pop
mov
inc
repz
xor
cmp
and
push
sbb
mov
sub
cmp
push
aaa
pop
xchg
inc
hlt
adc
and
pop
outsb
shll
add
fwait
push
push
shrb
pop
sbb
fists
popf
in
sahf
andb
int3
int3
add
dec
gs
lcall
movsl
xchg
lcall
mov
add
sbb
mov
insl
inc
imul
sbb
jns
sti
leave
xlat
mov
mov
sti
jne
hlt
pop
mov
mov
call
rcrb
sbb
aas
sbbb
jecxz
jne
mov
out
lret
xadd
int3
mov
push
jl
rorl
stc
pop
xchg
add
mov
xchg
inc
ljmp
sbb
scas
leave
mov
mov
in
fstps
nop
test
movsb
test
sahf
jecxz
js
movsb
data16
rol
jg
mov
jecxz
pop
jge
pop
xchg
andb
arpl
sbb
xchg
es
mov
lds
mov
jbe
mov
call
ljmp
xchg
mov
fdivl
cltd
push
popa
inc
jp
in
rcll
ret
xchg
inc
inc
int
lods
movsb
into
loopne
cmp
imul
dec
jae
mov
or
push
int3
and
cmp
nop
dec
out
push
pop
adc
xor
xor
sub
dec
sub
push
ljmp
hlt
push
mov
or
inc
imul
insl
or
and
clc
push
in
add
pop
jl
movswl
lahf
mov
mov
push
add
sub
and
hlt
out
push
mov
dec
dec
push
mov
mov
aam
sub
lret
fwait
push
lock
mov
orl
mov
or
mov
rclb
dec
push
test
pop
mov
lods
push
in
subl
icebp
repz
loop
popf
data16
mov
hlt
daa
xor
adc
mov
jp
sbbl
cmpsb
jl
std
sarb
repz
rcr
sar
pusha
ss
xor
leave
in
mov
adc
adc
stc
inc
ret
dec
fs
add
or
adc
push
scas
sbb
add
test
bound
inc
pop
mov
lock
out
addl
or
xchg
adc
and
icebp
sti
inc
roll
jnp
adc
leave
push
insl
test
in
inc
fldt
jle
push
mov
push
gs
mov
jmp
stos
mov
fwait
xchg
jmp
push
cmp
inc
aam
mov
add
xchg
sbb
popf
xor
fisubrs
sub
sub
sub
int3
sbb
mov
mov
gs
aas
inc
std
mov
gs
bound
mov
lods
push
imul
jnp
and
rcl
sub
fucomp
add
sahf
adc
movb
sahf
dec
push
jmp
fcoms
cmpsb
mov
imul
test
clc
int3
adc
sti
lret
pop
int
or
sub
fisubrs
mov
adc
jl
mov
nop
adc
jp
inc
sub
mov
cltd
pop
jmp
pop
sbbb
out
insl
notb
stos
fwait
push
out
sbb
dec
lahf
sub
inc
inc
stos
pop
cmp
and
loopne
xchg
inc
sub
in
push
jge
jecxz
aas
ret
push
mov
hlt
adc
xchg
mov
test
daa
loop
push
xchg
out
jnp
ret
mov
adc
imulb
cli
adc
loopne
popf
jne
stos
loopne
imul
xchg
test
mov
cmc
mov
call
xor
or
add
cwtl
cmp
pushf
mov
jno
and
xor
or
aad
scas
push
pushl
xchg
jnp
das
and
mov
xor
jecxz
lret
repz
adc
mov
sub
sbbb
mov
and
test
ljmp
je
test
js
lods
loop
or
enter
jo
sub
and
movsb
sbb
inc
mov
dec
fs
sbb
test
sbb
es
jp
sarl
aaa
shl
dec
stc
sub
jns
icebp
iret
insb
mulb
aaa
shlb
or
adc
and
fdivrs
or
sub
push
sbb
in
sbb
std
sub
inc
cmpsb
jae
inc
lret
xchg
icebp
testb
in
aas
inc
into
aaa
fs
jne
outsb
lahf
ds
scas
es
mov
push
stos
mov
and
test
cwtl
dec
ss
test
sbb
and
jecxz
jl,pn
adc
mov
jle
pop
dec
mov
outsl
dec
in
pop
pop
inc
insl
xchg
push
out
test
lods
shrl
outsb
aad
outsb
aam
loop
int
cwtl
cmc
push
js
fcmovnb
jae
daa
or
add
sti
mov
sahf
push
arpl
enter
cmp
outsb
mov
int
jno
inc
cwtl
sbb
fsubl
ret
sbb
mov
mov
inc
jmp
push
inc
jno
mov
gs
xor
mov
fsubs
cwtl
dec
jle
cltd
pop
and
pop
xchg
sbbl
cmp
mov
test
jge
mov
dec
push
ljmp
popa
xlat
push
pop
inc
mov
pop
aas
test
push
pop
inc
xor
jne
adcb
stos
mov
bound
ret
bswap
or
mov
inc
sub
in
mov
add
test
lds
aaa
leave
jecxz
cmp
mov
xchg
lods
subb
fnstcw
mov
mov
xor
js
mov
mull
rcll
outsl
pop
mov
lret
dec
mov
dec
shr
or
fiaddl
inc
sbb
lea
pushf
push
lcall
xor
movsl
lret
es
lock
inc
ret
sbb
push
sahf
add
mov
xchg
shlb
xor
xor
shrb
adc
fs
cmp
pop
cmpsl
xchg
mov
test
sbb
aam
push
movsb
adc
pushf
jge
andl
jecxz
int3
sti
mov
push
and
cmp
mov
mov
bswap
fisttpl
inc
pop
ljmp
mov
xchg
push
mov
xchg
data16
dec
jmp
leave
enter
ss
scas
push
sbb
push
push
sbb
int
test
addr16
cmp
add
lahf
orl
incb
push
sbb
pop
les
shlb
mov
jl
lds
mov
imul
sbb
adc
rcrb
testl
jg
dec
sub
nop
repz
loopne
add
and
repnz
jge
imul
icebp
jle
push
dec
mov
dec
sbb
sbb
jecxz
pushf
jmp
sub
mull
mov
mov
push
ror
inc
add
out
sarb
pop
les
and
dec
movsb
lock
ret
out
push
add
iret
icebp
stos
test
cmp
popf
gs
pop
lret
fdivr
pop
xchg
pop
mov
cmp
je
ljmp
orl
xchg
sbb
das
out
iret
add
inc
aas
add
sub
out
enter
aad
out
push
and
lock
mov
outsb
repz
leave
mull
faddp
sti
mov
cmp
add
lods
daa
loope
div
xchg
scas
xchg
or
push
loop
es
ficoml
cld
mov
lds
je
adc
addb
inc
std
out
pop
pop
mov
xchg
shll
dec
movsb
outsl
cmpsb
imul
scas
xlat
sub
call
jg
ds
dec
mov
jnp
sahf
mov
adc
push
mov
ljmp
pop
jge
cmpb
fidivrs
push
jo
insb
push
subb
shl
out
inc
call
push
outsb
orl
jg
mov
sub
cmc
mov
adc
je
out
mov
and
adc
push
hlt
movsl
xchg
mov
pop
aam
pop
xchg
fistpll
push
inc
pop
mov
jno
push
pop
leave
lcall
rorl
jo
mov
sbb
pop
gs
int
mov
mov
lods
mov
xchg
lods
lods
mov
dec
xchg
mov
iret
xchg
lods
daa
shrl
jno
cmpsl
xabort
push
xchg
pushf
push
jno
mov
cltd
mov
daa
scas
sbb
cltd
test
out
stos
pop
inc
clc
push
ljmp
sub
iret
push
gs
xchg
add
jno
mov
dec
push
lods
sbb
xchg
and
fwait
rclb
or
das
cwtl
iret
dec
mov
pop
or
push
xchg
outsl
fwait
jecxz
sub
negb
mov
clc
jle
pop
and
lods
jle
pop
mov
xchg
pop
sub
les
inc
stc
sbb
jae
jnp
addl
clc
data16
insb
inc
in
decb
push
and
shl
test
adc
mov
xor
jp
mov
jb
ret
pop
cmp
inc
sahf
inc
jle
test
mov
out
imul
inc
lods
cmp
jl
fldcw
xchg
sub
inc
outsb
xchg
inc
jg
adc
jg
dec
mov
repnz
jecxz
mov
out
call
or
vmulps
insb
mov
in
das
popa
cld
adc
in
mov
mov
jle
test
inc
push
cmp
out
mov
mov
jne
cmpsl
into
adc
push
push
mov
sar
jnp
imul
mov
pushf
lret
push
add
cmp
add
xor
adc
xchg
mov
jae
and
outsb
and
ljmp
in
inc
icebp
jl
loope
inc
mov
hlt
movb
sub
mov
fisttpll
movsl
xor
pop
pop
mov
mov
or
imul
sub
scas
ljmp
orps
in
lods
daa
in
inc
mov
sbb
cmp
enter
sbb
cwtl
imul
int
ret
and
or
jecxz
mov
push
gs
clc
mov
or
mov
inc
cmp
movl
push
daa
and
cmp
jnp
mov
fwait
imul
mov
cmp
or
out
dec
pop
in
test
fistpll
imul
mov
lret
sub
push
idiv
nop
mov
sub
cmpsb
je
rcl
inc
inc
pop
inc
std
cmp
pop
inc
push
xchg
cmp
sti
dec
add
nop
mov
xchg
adc
sti
xor
cmp
sarb
adc
int
popf
add
bound
int3
cmp
mov
stc
sbb
push
and
mov
mov
xchg
repz
or
inc
movsb
aad
movsb
dec
push
mov
pop
testl
mov
ret
mov
neg
cmpb
pop
cmpsb
inc
mov
jecxz
addr16
cmp
test
adc
and
call
inc
mov
dec
das
mov
cmp
xor
loopne
xor
adc
pop
sbbb
push
and
pop
lret
in
push
lods
aam
aas
jno
ret
loop,pt
ja
adc
adc
cmc
popf
jge
ja
repz
xchg
dec
insl
add
add
mov
fdivrs
mov
test
or
sar
jge
aaa
nop
lret
lcall
adc
or
sub
xchg
lock
jge
fisubl
mov
sub
jp
neg
or
loop
mov
dec
push
mov
arpl
icebp
stc
cmpsl
insb
sti
dec
sub
pop
sub
fdivrs
mov
fisubl
cmc
repnz
cwtl
jns
iret
xchg
xor
sub
test
inc
insb
and
and
adc
cwtl
and
and
fsubr
je
rclb
lret
movsl
pusha
imull
fstps
cld
push
push
stos
pop
insb
repz
inc
sbb
sbb
jb
push
xor
lcall
mov
mov
aas
or
es
outsb
dec
push
cmp
loopne
add
pop
push
xor
mov
sbb
adc
add
mov
testb
adc
fiadds
adcl
shll
fsts
dec
xor
scas
lea
pop
push
sub
push
imul
jmp
repz
leave
rorb
cli
mov
or
jne
out
mov
or
add
pop
out
jb
push
insb
in
jo
arpl
jmp
les
push
hlt
jno
cmp
mov
adc
mov
lds
sbb
std
lods
mov
sbb
cmp
mov
sahf
pop
add
mov
and
sti
leave
stc
popf
pop
add
dec
pop
cmpsl
sub
aaa
or
aad
pop
add
lcall
movb
imul
fimuls
cltd
clc
adc
push
adc
andl
lods
cli
inc
sbb
popa
lahf
jae
xor
call
cwtl
rcrb
inc
lret
stos
mov
es
iret
or
insl
int3
pop
xor
setl
jo
mov
dec
lcall
sbb
std
loop
shrl
mov
orl
inc
pop
dec
xchg
insb
pop
cmp
and
pop
cmp
pop
inc
adc
popf
cmc
adc
jmp
jnp,pt
cmp
xchg
das
rcrl
les
inc
daa
ror
test
inc
into
push
xor
or
sbb
inc
cmp
scas
into
inc
mov
mov
std
or
lret
rolb
test
push
pop
cmp
loop
call
dec
leave
push
ret
xchg
push
mov
cmp
popf
stos
sbb
aas
loope
or
mov
pop
or
in
xchg
scas
xor
jge
pop
bnd
aad
mov
adc
popf
mov
mov
xor
xchg
xlat
mov
lret
jae
mov
in
jmpw
xchg
aad
pop
stos
data16
jns
or
lret
sbb
lcall
adc
call
mov
and
mov
jbe
std
jmp
lods
sub
cs
push
cmc
or
insl
dec
dec
mov
mov
push
jle
or
lock
jge
lcall
and
int
lock
ficoms
and
bound
add
cld
dec
into
adc
xchg
clc
daa
and
sarl
sahf
or
loopne
sbb
into
pushf
cmp
cmp
out
imul
sbb
cmpsb
into
imul
mov
movb
test
clc
mov
or
out
call
icebp
adc
mov
xchg
or
pop
cs
mov
outsb
sbb
mov
fwait
into
repnz
imull
stos
adc
jo
int3
xchg
out
movsb
xchg
insb
mov
xor
jno
xchg
xlat
aaa
adc
dec
xor
adc
mov
mov
mov
xlat
xorl
push
jnp
shl
lret
or
daa
inc
mov
ljmp
jle
jp
dec
cmp
lds
arpl
cmp
jmp
xchg
push
xor
fisubs
loope
aad
lock
inc
hlt
xor
push
adc
jnp
lods
xor
fisttps
push
xchg
mov
ljmpw
cs
pop
cmpl
imul
ja
stos
cmpsb
ja
jo
repz
test
xchg
xor
fnstenv
jae
xchg
lods
negl
mov
mov
sbb
lret
loope
cli
sbb
jae
or
jb
sbb
lret
inc
lds
xchg
cld
pop
cmpsl
sub
and
fcomp
push
jp
imul
lret
or
xchg
dec
mov
lds
adc
dec
sbb
loop
sarl
or
fs
pop
xor
call
mov
pop
mov
test
ret
sbb
inc
lret
and
lret
mov
push
mov
jg
call
sbb
adcb
out
mov
sbb
enter
pop
push
pop
push
or
fsubr
test
cwtl
pop
xchg
movsb
add
sarb
inc
lock
arpl
pop
push
test
fbld
mov
insb
sub
sub
mov
call
into
mov
int3
push
fs
pop
inc
sub
rcl
cld
aas
lea
stc
add
or
dec
mov
cmp
inc
cltd
popa
jb
lahf
xchg
push
xor
adc
mov
pushf
xor
ljmp
push
add
xchg
sub
or
push
jb
aaa
cmp
cli
inc
fiaddl
adc
and
xlat
jl
cmp
lret
and
mov
pop
addl
mov
xor
insl
adc
push
icebp
dec
cltd
jecxz
ret
rclb
test
std
test
pop
leave
mov
sub
notl
push
adc
xchg
mov
sbb
dec
imul
push
adc
push
mov
out
mov
stos
pop
xorb
xor
stos
stc
inc
lds
movsl
inc
and
roll
lods
es
fs
jb
sbb
jno
cmp
aam
jnp
jg
fidivrl
push
shl
push
ficompl
sbb
cld
lods
jp
fisttpl
pop
push
cmpsb
es
push
in
jbe
sti
clc
sub
js
adc
std
jb
jmp
xchg
sahf
ljmp
inc
popf
std
sbbb
cld
clc
mov
hlt
mov
lar
dec
imul
ljmp
rclb
adc
pusha
mov
arpl
mov
icebp
loope
sahf
aas
fildll
lret
test
push
pusha
mov
xchg
mov
mov
dec
xorl
daa
cmp
xor
outsl
sbb
int
dec
pop
and
mov
rcrb
mov
loop
insb
lret
scas
push
sbb
xchg
adc
jnp
out
scas
mov
push
push
mov
cmpsb
pop
mov
add
shlb
fcmovb
int
stos
mov
iret
ljmp
clc
loopne
cs
cwtl
sbb
dec
decl
dec
jbe
xchg
or
sub
shll
inc
or
xor
jmp
fwait
jge
out
xor
ljmp
mov
inc
sub
xor
iret
mov
and
sub
xchg
nop
arpl
mov
lods
xor
push
lods
sbb
inc
jp
lcall
sbb
xchg
dec
xchg
cmc
ja
enter
ds
jge
inc
filds
dec
lds
repz
scas
test
movsb
out
fildl
xchg
in
mov
cmp
xchg
sub
push
mov
jno
sbb
mull
mov
dec
cmp
jbe
nop
mov
mov
shlb
xor
xor
inc
fldenv
jb
sub
pop
inc
or
mov
xlat
cmp
out
addr16
mov
fistpll
xchg
test
shll
jp
sbb
fiaddl
or
rorb
lcall
outsl
in
mov
aad
inc
sub
cld
and
sti
lds
xor
pop
subb
mov
arpl
fsubrl
push
es
mov
int
std
xchg
adc
js
jmp
pop
pushf
jl
add
es
sahf
lock
scas
mov
cmp
inc
mov
xor
jno
sub
mov
xchg
ljmp
mov
push
dec
shrl
jo
xor
pop
andb
fs
mov
popf
loopne
addr16
iret
inc
sbb
dec
xchg
add
stos
imul
cmp
sbbl
push
ja
scas
xchg
scas
ja
jbe
xor
mov
psadbw
gs
pop
add
cmpb
out
mov
lea
in
popa
loope
sub
push
jmp
xor
xor
lods
ds
xchg
lods
jmp
mov
enter
sub
int3
inc
data16
shll
adc
mov
into
mov
add
pop
daa
jmp
pop
mov
ret
pop
inc
cmpb
add
test
mov
mov
dec
sub
add
mov
std
je
inc
lods
ss
mov
jae
in
mov
test
push
fwait
shrl
lret
add
out
xchg
jg
scas
icebp
add
es
and
int
and
repnz
jp,pt
sar
fwait
jbe
inc
pushf
inc
rcrl
mov
cmp
push
movb
mov
stc
mov
adcl
imul
pop
pusha
bound
sysexit
fbstp
fcomps
lcall
stos
adc
inc
inc
sti
jmp
jne
in
jne
lods
andl
aam
xor
cmpsb
sub
ja
or
das
push
es
cmp
pop
outsl
adc
std
dec
xchg
pop
add
push
jb
sub
push
in
adc
pop
lds
fisubrl
pop
xchg
movsl
dec
lcall
push
sub
clc
ljmp
subb
mov
rorl
xor
xchg
inc
iret
test
out
sbb
jo
nop
lods
sbb
cmc
cmpsl
mov
jecxz
icebp
sub
jne
aam
lods
push
jbe
mov
aas
mov
xchg
or
cmpb
mov
mov
jno
repnz
xchg
push
sbb
aaa
loop
inc
push
jmp
fistps
pop
dec
or
push
aaa
test
std
xor
adc
daa
mov
in
sbb
popf
je
nop
add
fs
lods
int
hlt
xchg
add
cwtl
adc
push
mov
xor
movsl
popf
and
push
xchg
jo
dec
cmp
mov
orl
shl
ffreep
dec
adc
sbb
data16
push
stos
hlt
js
fimuls
mov
add
cmc
lods
cmp
shll
xchg
pop
cmpsb
inc
cwtl
jno
mov
dec
adcb
pop
pop
mov
xchg
outsl
fsub
adc
sub
xchg
fnstcw
adc
bound
sti
int
sub
jl
rcrb
pop
mov
inc
or
jmp
add
sub
in
cltd
xor
sbb
stos
cwtl
test
mov
clc
scas
fcmovnbe
adc
adc
fsubl
pop
lea
mulb
cwtl
sub
repz
or
add
shl
leave
mov
push
push
mov
sbb
mov
add
xor
mov
cli
mov
xor
ds
and
and
movb
les
daa
jae
pop
or
sbb
jnp
outsb
insb
movb
jge
add
xchg
adc
inc
dec
mov
mov
and
pop
cmc
decb
mov
imul
out
add
jae
cmp
fcoms
cmp
xor
and
push
push
xchg
stos
dec
idivb
outsb
aam
das
int
mov
mov
loopne
jecxz
jge
xor
daa
fisubrs
ret
xchg
or
loopne
jl
xchg
mov
fnstcw
mov
sub
add
mov
jecxz
push
dec
cld
jg
mov
lods
inc
jge
mov
call
outsl
jbe
pushf
mov
or
sti
mov
mov
mov
ret
inc
fnstcw
lods
imul
in
out
test
outsb
testb
pusha
loopne
and
mov
or
enter
sbb
inc
push
mov
jae
mov
out
es
insb
lret
mov
rorl
or
insl
shll
jns
mov
sub
xchg
sub
xor
jnp
test
cli
orb
mov
or
mov
jmp
ja
enter
fxch
shl
cmpsb
out
incl
mov
sub
xchg
mov
xor
loopne
lods
insb
or
inc
ret
pop
testb
sbb
push
test
pop
mov
mov
nop
mov
jl
scas
cmp
jmp
outsl
repz
movsb
adc
sub
loop
inc
sub
jmp
roll
iret
and
call
icebp
js
and
xchg
aaa
aad
outsb
lret
jg
hlt
dec
push
pop
arpl
push
jl
xchg
xchg
and
ljmp
pop
adc
std
mov
push
pushw
or
xchg
test
pop
cmp
cmc
lret
sub
daa
sbb
or
mov
stos
aaa
adc
mov
js
out
or
sbb
and
vsqrtss
add
mov
outsb
shll
leave
and
nop
inc
fisttpll
lret
ds
or
xchg
enter
mov
daa
xchg
sub
nop
stc
dec
push
fsubs
xchg
adc
mov
xchg
ja
xchg
das
arpl
mov
jb
and
xchg
dec
clc
ljmp
push
jg
lret
into
cmpsl
xchg
mov
mov
lahf
cmp
adc
cmpsl
aas
test
sti
cmp
jne
loope
mov
lret
cltd
enter
ljmp
cmp
mov
xchg
imul
or
adc
sbb
fcomi
fs
add
or
sti
push
lea
mov
xor
sbb
adc
or
fiaddl
cmpsl
mov
xor
push
push
movsb
mov
sbb
and
je
popf
add
loop
cmp
loop
les
push
or
push
jnp
and
inc
jge
and
pmullw
or
mov
cli
pushf
cmpsb
xchg
fdivl
sub
rorl
std
or
iret
mov
add
mov
icebp
cmp
xor
xor
mov
xchg
push
xlat
cmp
jp
mov
je
pop
add
or
cmp
adc
and
pushf
push
out
dec
dec
rorl
in
in
adc
in
hlt
mov
sbb
xorb
xor
xchg
and
imul
es
mov
movsl
xchg
mov
ret
jmp
stos
lcall
mov
ss
jg
or
mov
cwtl
rolb
cmp
notb
adcb
ja
outsl
and
fdivrs
scas
add
or
lds
call
pusha
or
jns
lock
movsb
mov
popa
sub
mov
pop
cmp
loopne
shlb
lds
cmp
inc
push
das
pop
pop
mov
mov
push
ret
mov
popa
lods
rclb
gs
roll
push
dec
sub
sub
shr
fiaddl
fldcw
in
add
inc
pop
add
outsb
cld
test
cld
and
nop
bnd
popf
sub
add
sub
and
cmp
dec
daa
gs
lods
xchg
popf
cmpsb
test
fucom
adc
arpl
push
ljmp
lock
repnz
push
jg
push
pusha
fcoms
mov
mov
mov
test
dec
mov
roll
mov
scas
or
mov
mov
fbld
cmc
in
push
mov
mov
icebp
sbbl
mov
leave
ror
sub
jge
dec
push
in
push
xchg
popaw
jae
daa
es
or
push
scas
fcom
rorl
sub
cmp
dec
adc
lcall
mov
out
push
aaa
pop
test
stos
scas
orb
push
int
push
in
outsb
dec
addr16
or
dec
cld
cmc
outsb
inc
mov
andb
cmpsb
in
pop
test
rcrl
cmpsl
jns
xor
jp
daa
je
inc
sub
jmp
mov
movsl
add
cmpsl
pop
adc
icebp
scas
add
sbb
lret
lods
repnz
push
icebp
outsb
or
es
fisubrl
dec
fs
pop
int
xchg
out
inc
sahf
sbb
cmc
jns
jno
nop
push
mov
add
mov
xlat
push
cmpsb
inc
push
jne
std
in
fsts
idivb
clc
push
pop
popa
rcl
rclb
add
jge
or
pop
jg
cmpl
imul
lods
sub
aaa
push
inc
push
popf
add
icebp
or
insl
inc
jbe
jnp
push
imul
push
mov
ret
xchg
mov
jle
repz
enter
mov
popf
mov
mov
in
push
jo
cmp
nop
push
js
adc
jg
cmpsb
xlat
daa
repz
jo
clc
lods
push
mov
arpl
jno
push
pop
ljmp
fcmovne
scas
stos
cld
mov
xchg
push
arpl
loope
jne
push
cmp
push
in
cmp
cs
pop
sub
jge
mov
ds
add
xchg
enter
mov
or
push
popf
loop
or
fsts
mov
movsb
sbb
stos
fcomp
lods
add
pop
dec
mov
sub
push
ret
pop
or
cs
mov
dec
jne
cmpsl
shll
dec
mov
icebp
adcb
jecxz
cmp
jnp
sub
popf
jne
test
clc
add
and
xor
add
sarb
push
pop
stc
push
push
test
mov
jmp
fistl
inc
xlat
sub
outsl
jno
insl
test
sbb
push
push
and
mov
dec
ficomps
push
pop
stos
stos
xchg
or
test
rcr
pop
shll
pop
pop
inc
dec
movsb
sbb
ds
aas
js
hlt
fisttps
pop
in
aad
mov
inc
xchg
jns
popa
fs
inc
add
xchg
pusha
cmpsb
inc
cmp
mov
enter
lods
sbb
cmp
pop
inc
pop
sti
aaa
mov
sub
xchg
jp
mov
or
imul
lcall
or
cmc
rorb
adc
dec
inc
mov
cmpsl
testb
pushf
lret
clc
push
dec
push
add
insb
dec
test
add
push
xorl
xlat
adcl
shlb
outsl
test
adc
ljmp
pop
adc
imul
fstps
mov
pop
fimull
jo
cmp
call
out
outsl
cmp
inc
outsb
fcomps
ss
call
incb
mov
or
mov
scas
inc
push
into
dec
mov
adc
mov
xchg
repnz
mov
pusha
sub
sub
out
push
lock
in
xor
mov
cmp
dec
fdiv
sti
adc
jl
or
movsl
dec
ret
mov
pop
and
push
mov
sbb
and
xor
insl
jg
ret
shlb
js
jg
pushf
push
push
lds
mov
fs
dec
pop
or
adc
mov
adc
push
negb
insb
push
jbe
mov
leave
dec
aad
sbb
mov
test
popf
lret
pushf
outsl
dec
pop
mov
aad
sub
sub
shll
jp
adc
ds
clc
shrb
lret
sub
gs
mov
mov
push
imul
and
xor
fildl
in
je
mov
adc
sbb
jno
sahf
push
xlat
mov
xchg
inc
adc
test
imul
and
xorb
fisttpl
adc
pushf
push
jne
dec
or
and
sub
int
mov
dec
xchg
sub
jle
inc
push
pop
cs
sahf
push
shrb
pop
mov
and
jg
pushf
and
push
shrl
mov
jb
in
pop
sbb
add
jmp
mov
sahf
sti
addb
pusha
andb
sub
imul
jo
iret
xchg
mov
test
mov
mov
imul
sbb
jle
int3
or
fld
sbb
pop
dec
mov
dec
movsl
push
nop
sbb
xchg
repnz
cs
pop
dec
sbb
fimull
sub
adc
fsub
add
gs
push
cli
cmc
addr16
pop
mov
cmp
loopne
leave
loope
sub
out
xlat
sar
popf
adc
push
std
push
jp
xchg
xor
adc
fsts
mov
fldcw
and
das
and
inc
in
cmp
faddp
ror
pop
ljmp
leave
pop
mov
xchg
sub
xor
test
cbtw
jge
jl
repz
add
scas
insb
test
push
out
clc
push
pop
pop
xor
rcrl
aam
pop
sub
pop
lock
mov
out
outsb
jne
int3
jbe
push
shlb
ret
mov
enter
sbb
jbe
repnz
add
xchg
popf
aam
shrl
pop
sub
cmp
or
and
into
int
dec
enter
jbe
pop
out
sub
mov
cmc
je
jmp
fucomi
stos
mov
popf
or
movzbl
test
mov
iret
jbe
mov
addb
inc
jecxz
ret
add
xchg
push
sbb
leave
ja
sbb
sahf
loop
mov
daa
sub
daa
out
stc
adc
sub
mov
mov
push
pushf
ljmp
stos
sub
xchg
mov
decl
cs
loop
addr16
int3
ret
aad
test
lods
push
inc
idivl
fstpl
jecxz
hlt
imul
jne
xchg
stc
push
pop
cwtl
inc
xor
cld
and
outsl
pop
push
pusha
outsl
and
fnsave
mov
jb
popa
fldl
xchg
or
out
into
repnz
push
cmp
ret
test
cmc
or
sbb
sahf
jmp
mov
or
clc
add
hlt
sub
sub
enter
pop
cmpsl
xor
cmc
pop
pop
push
stc
sub
xor
or
mov
int
add
test
pusha
pop
xchg
lods
mov
adc
fwait
scas
jecxz
aad
pushf
xor
outsl
pop
imul
int3
mov
pop
adc
jecxz
mov
or
pop
shll
sbb
adc
jb
out
in
xchg
in
push
push
push
and
insl
push
aam
jecxz
cmp
loopne
and
pop
or
outsb
dec
xchg
stos
mov
gs
jl
add
mov
rorl
mov
rclb
jae
jne
sub
mov
fiaddl
inc
pop
orb
sahf
xor
nopl
aas
je
adcb
sbb
push
nop
pop
push
out
sub
mov
stc
ss
and
popf
dec
adc
jns
jbe
lods
xor
aas
add
fsubs
mov
lea
adc
mov
or
mulb
mov
add
push
adc
sub
mov
push
xlat
or
aad
insb
cmp
push
pop
repz
sub
fisubs
rolb
pop
and
pop
pushf
jnp
sbb
push
loopne
aad
stos
inc
push
xchg
mov
push
repnz
loope
mov
jnp
inc
fcoms
lret
test
call
dec
lds
sti
jecxz
mov
pop
add
add
jle
outsl
int
daa
stc
sbb
jp
pop
subl
or
test
dec
imul
fxch
add
int3
aam
jbe
mov
adc
sbb
nop
js
cltd
bound
vpsrlw
xor
test
push
imul
addr16
push
jle
xchg
stc
roll
jne
pop
cld
das
push
ret
orl
pop
jbe
mov
fdivl
sbb
jg
test
mov
mov
enter
adc
ljmp
out
orl
inc
fs
dec
xor
insb
loope
aam
bound
mov
push
push
dec
in
mov
lcall
mov
mov
mov
mov
pand
hlt
lret
sbb
push
xchg
mov
int3
push
inc
push
es
fiaddl
sub
notl
je,pt
cmpsb
prefetchnta
sbb
insl
movb
adc
mov
mov
test
cld
repz
xchg
daa
jnp
out
adc
adc
cld
stc
cwtl
push
sub
mov
iret
test
fisubrs
mov
aam
adc
mov
push
push
fistpll
mov
mov
popf
orl
stos
gs
pop
xor
add
dec
mov
cmc
xchg
mov
mov
out
mov
mov
xadd
add
add
inc
dec
in
inc
xor
inc
repnz
xchg
xchg
lds
sbb
cmp
push
es
cmc
dec
or
cmp
loopne
mov
pop
adc
cmp
dec
divl
adc
es
adc
mov
sbb
xchg
cli
mov
aam
jg
xchg
mov
test
out
and
mov
adc
cmpb
xor
loopne
jnp
imul
sarb
outsl
cmp
sub
iret
stc
adc
push
les
dec
push
push
testb
jmp
push
mov
inc
test
add
sub
rorl
mov
std
adc
push
adc
out
mov
or
xchg
pop
mov
pop
mov
add
shl
adc
jne
adc
scas
je
inc
xorb
cmpb
fisubs
mov
pop
mov
cmp
rol
mov
cmc
push
outsl
icebp
jl
fdivrp
ret
ret
pushf
inc
dec
dec
pop
fildl
and
pusha
or
js
push
es
xor
cmp
loope
nop
out
sbb
out
mov
into
shrb
out
cmc
xor
and
in
cmp
les
insl
add
mov
imul
rcrl
lret
adc
xchg
aaa
fyl2x
fcomi
lahf
movsb
push
jns
mov
popf
add
fnsetpm(287
dec
or
andl
push
out
repnz
mov
std
push
fstpl
cmp
and
insl
out
rorb
pop
ja
cmp
lds
mov
enter
lods
xchg
imul
jnp
push
pop
imul
sub
out
stc
repnz
repnz
mov
jecxz
mov
stos
aad
mov
mov
pop
sub
mov
cmp
sub
dec
dec
jp
mov
fsubr
hlt
push
insl
in
cmpsb
pop
frstor
lea
mov
or
mov
jmp
mov
pop
mov
pop
aam
les
cmp
int3
movsb
fwait
aaa
xchg
mov
jge
sti
imul
add
lret
fistpl
les
ja
imul
xor
pop
jo
insb
sbb
lock
aam
sbb
pushf
pop
loope
dec
mov
adc
icebp
movsl
mov
jae
rolb
or
sbb
or
add
addr16
pop
inc
mov
mov
ljmp
push
jb
imul
jo
xchg
adc
cmp
push
shrb
pop
fsubrs
adc
pop
nop
mov
xchg
mov
push
add
out
xor
shl
insl
jmp
hlt
mov
and
outsl
adc
xor
test
aas
sbb
shr
ljmp
adc
arpl
add
mov
arpl
fisubl
movsb
pushf
mov
add
mov
push
sub
cmp
sbb
leave
mov
loope
in
ss
cmp
shl
scas
loope
xor
xchg
lock
in
add
sub
cmp
sub
stos
and
cltd
popf
cltd
push
notb
dec
pop
arpl
roll
push
jecxz
dec
sti
mov
ja
push
sub
cs
sbb
rolb
cs
out
ljmp
sbb
testl
outsl
sbb
xchg
pop
insl
fs
out
pop
push
xchg
insb
aaa
xchg
pop
ss
jo
fnsave
insb
mov
inc
mov
push
push
mov
cltd
push
pop
rcrl
mov
shlb
hlt
je
test
dec
or
into
push
mov
and
jge
jecxz
or
pop
pop
test
fs
jle
adc
jnp
clc
test
cmp
push
push
out
mov
in
or
pop
rol
es
inc
or
mov
aas
out
mov
out
cmp
cmp
orb
mov
cmp
mov
push
stos
inc
lcall
sahf
out
mov
test
enter
mov
repz
aas
sub
loope
sub
add
adc
fiadds
push
lock
push
mov
push
cli
std
loopne
cmc
cmpsl
cmp
and
add
je
adc
cli
xchg
loop
fiadds
fildl
xchg
mov
jle
lcall
scas
popf
mov
add
popf
add
int
int
hlt
fisubl
sbb
sbb
fstpl
dec
pusha
stos
lahf
lods
mov
test
int3
lods
popa
push
cli
mov
mov
jmp
xor
cmp
scas
sti
stos
insb
inc
icebp
xchg
clc
inc
pop
sub
cmp
rolb
cmp
inc
or
in
sub
xlat
dec
dec
adc
int3
mov
cmpl
lcall
sbb
and
push
add
imul
stos
adc
shl
xchg
bound
or
cmp
jle
mov
test
adc
aas
push
cmp
adc
repz
xlat
lcall
aad
jbe
adc
into
push
mov
fidivrl
push
rcr
xor
jg
xchg
pop
test
lods
das
or
subb
test
jle
mov
test
mov
xlat
mov
in
sbb
icebp
addb
mov
lds
lret
jmp
adc
push
fstpl
les
add
xchg
subb
ljmp
mov
jmp
daa
stos
fistl
sbb
nop
mov
mov
into
and
addr16
cmp
ljmp
in
xchg
xchg
inc
aaa
or
rcrl
sti
pop
mov
aam
scas
loope
adc
xor
test
xchg
stos
push
sbb
gs
mov
pop
adc
in
std
xchg
popf
icebp
fistps
sarl
insb
dec
push
addl
push
insb
in
into
mov
and
cli
push
imull
out
mov
in
fnstsw
xchg
int
adc
rorb
cmpl
gs
mov
sub
inc
lds
loope
adc
js
cli
rcl
popf
addr16
and
jecxz
mov
mov
mov
pop
push
stos
loop,pt
outsl
ja
call
dec
push
mov
xorl
test
add
jo
repnz
cs
les
cld
pop
les
lods
rorb
mov
orb
pusha
div
nop
jecxz
fdivp
mov
xchg
mov
push
jle
jp
cli
sub
cmpb
jp
cmp
mov
bound
mov
push
out
dec
and
lds
js
inc
jg
jecxz
cmpsb
lea
xor
add
dec
pop
lock
ja
and
aaa
sbb
xor
xchg
loop
adc
pop
int
sbb
jp
out
lahf
in
inc
push
adc
das
add
outsl
in
sub
ret
xor
mov
fdivrl
repnz
in
dec
xchg
push
pusha
inc
ja
outsl
mov
mov
js
pop
mov
sti
movsb
or
mov
loope
lods
aam
cmp
cmp
scas
sahf
inc
fbstp
fdivs
adc
adc
out
mov
aam
int3
adc
mov
stc
out
mov
pop
lret
insb
dec
cmp
dec
xor
lods
bound
stos
add
push
pop
jg
outsb
iret
inc
mov
sub
sbb
out
pop
fiaddl
push
xor
sub
jne
mov
lret
xor
dec
pushf
mov
lds
dec
pop
popf
mov
add
jge
js
stos
repnz
jbe
repnz
mov
sbb
xchg
pop
sti
dec
and
sub
repnz
pop
test
cli
je
inc
fidivrl
lahf
sub
jae
outsb
rorl
rcll
icebp
pop
fsubl
sbb
loop
pop
push
adcl
repnz
cltd
jge
movsl
pop
into
subb
pop
inc
stos
loop
pop
lret
mov
dec
pop
adc
insl
xor
std
pop
mov
mov
xchg
movb
aas
inc
sbb
add
outsl
mov
mov
arpl
in
mov
jp
data16
popa
xor
ret
push
cmp
jae
mov
ret
xor
push
into
adc
ja
inc
and
imul
addr16
fs
in
ret
inc
mov
mov
test
mov
sub
enter
rorb
push
flds
push
jb
int3
cmpsl
lods
xor
in
and
sbb
dec
or
mov
xor
push
inc
or
push
dec
push
push
imul
and
in
mov
mov
int3
jg
aas
xchg
lea
jle
leave
or
sub
dec
outsb
xchg
jb
mov
mov
rcrb
lret
sbb
negw
cmp
lock
xchg
pop
cmpsb
test
insb
daa
rolb
repz
or
sub
daa
shr
inc
and
jne
mov
sbbl
push
jb
mov
ret
inc
pop
push
imull
jo
imul
bound
faddl
push
mov
clc
add
aas
mov
je
fcomp
enter
loopne
repnz
cmc
xchg
push
xor
jle
aam
scas
sub
push
scas
fs
scas
scas
xchg
nop
arpl
enter
arpl
fstl
popa
inc
mov
bnd
leave
jb
lods
add
cli
je
xlat
push
lds
outsl
sub
test
cmp
pop
mov
jecxz
lds
fcoms
aad
jle
out
push
pop
push
cltd
cltd
das
inc
repz
cltd
adcl
fwait
mov
jb
and
mull
popf
stos
mov
jno
sub
pop
inc
mov
mov
daa
rol
pop
ret
inc
in
pop
inc
adc
mov
fistps
orb
sub
subl
and
cmp
xor
push
scas
pop
int3
adc
mov
jecxz
mov
scas
aaa
sbbb
fstps
push
lods
scas
shll
repz
jno
adc
adc
cmpsb
pminsw
aad
aam
dec
sub
ljmp
ds
dec
mov
stos
mov
or
mov
mov
lods
addl
loopne
in
lahf
movsl
aaa
fld
in
lea
xchg
rorb
and
cmp
fnstsw
hlt
je
add
mov
in
in
cmpl
imulb
jmp
adc
cltd
roll
lret
addr16
and
xor
mov
adc
repnz
dec
mov
cmpsb
ss
out
je
loopne
mov
mulb
add
sub
data16
or
jp
sahf
xchg
jno
stc
adc
idivb
mov
dec
cmp
mov
sub
outsb
pop
outsl
xchg
fwait
das
mov
mov
data16
stos
test
and
or
stc
xor
std
stos
xchg
dec
test
fcoms
jle
jbe
scas
rcr
jno
mov
xchg
and
ds
jno
xor
test
pop
or
pop
inc
leave
popa
shlb
sbb
xor
add
add
ds
xchg
mov
mov
and
insb
pop
insb
gs
insb
add
fcmove
mov
repz
in
sub
xchg
popf
xchg
push
jo
mov
pop
lahf
jns
or
adc
push
xchg
rcrl
inc
xor
jp
fcomi
dec
adc
inc
inc
sbb
xor
aam
orl
add
addr16
sub
add
sbb
pop
cli
mov
jns
and
stos
and
sbb
push
shl
test
jae
imul
lods
mov
and
jmp
add
stos
stos
mov
orb
outsl
adc
push
cmp
sbb
mov
cld
adc
dec
pop
sarb
push
adc
push
mov
mov
addr16
push
shl
cs
cmp
shrb
leave
mov
mov
sbb
push
jmp
jl
gs
jle
mov
sti
add
sub
mov
or
ret
jle
or
int
sbb
mov
xchg
sub
ficomps
shlb
loopne
pushf
or
shll
xchg
add
les
sbb
das
test
aam
imul
jp
bound
jae
mov
add
clc
iret
mov
pop
xchg
xor
adcb
lea
aam
fbld
mov
xor
xor
fldl
repz
xchg
ret
pop
std
cmp
jmp
pushaw
dec
mov
xchg
cld
fldenv
int3
and
pop
mov
fsubl
mov
push
bswap
cmp
mov
pop
fnstcw
jg
cltd
lea
push
in
test
inc
xor
sbb
enter
lods
shrb
push
lea
pop
inc
mov
push
movsb
insb
fisubrs
mov
mov
sbb
cli
sub
lock
mov
adc
xchg
mov
call
pop
outsl
xchg
imul
push
mov
jge
push
or
hlt
xor
leave
push
push
fdivs
cmp
imul
adc
ja
mov
out
sti
jmp
cld
dec
mulb
sbb
dec
xor
rclb
cltd
add
dec
stc
add
mov
enter
add
mov
inc
jge
mul
scas
test
add
mov
push
clc
sbb
pop
cmpsb
enter
xchg
fmulp
push
cs
jnp
and
push
xor
lahf
cmp
xchg
inc
js
adc
lods
jmp
push
jb
ljmp
adc
gs
sbb
jo
or
inc
std
mov
cmc
and
call
pop
stos
sbb
in
fstps
sbb
bound
call
mov
inc
add
or
ljmp
or
int
mov
add
lret
stos
mov
push
adc
adc
mov
inc
ds
dec
cmp
and
adc
in
xor
stos
xchg
mov
mov
push
rorl
hlt
aad
inc
fistpll
mov
sub
xor
into
push
es
lods
jb
into
mov
fldl
sbb
je
push
lock
jne
add
fstp
pop
mov
jmp
int3
dec
repnz
sbb
and
jno
pop
add
icebp
and
call
jmp
sbb
adc
xchg
movsl
decb
pop
repnz
xchg
dec
std
ljmp
mov
dec
add
mov
mov
outsl
rcll
mov
xchg
lods
push
arpl
fnstcw
fld
stos
and
sti
sarl
adc
ja
lods
cs
std
xchg
daa
stos
push
pusha
imulb
mov
addr16
adc
fidivl
jns
and
xorb
pop
mov
inc
fadds
aas
sbb
int3
mov
or
pop
loope
stos
insb
sbb
or
jno
mov
add
sbb
je
inc
xchg
stc
cmp
pop
sbb
inc
cmpsb
andl
or
jp
and
sbb
fs
cli
int3
cs
pusha
jbe
rolb
ror
sub
jo
sbbb
add
push
decb
out
movsl
xchg
sub
cmp
in
xchg
lcall
push
sbbl
mov
sbb
sar
jmp
pop
mov
sbb
outsl
xchg
xor
movl
inc
stos
and
jns
data16
les
std
sbb
sahf
sub
cmp
insl
cmp
in
mov
add
sub
sarl
mov
mov
mov
mov
dec
notb
push
stos
movsl
rclb
or
scas
jae
mov
mov
xor
dec
pop
sbbb
jg
cld
sub
test
mov
dec
test
mov
lods
jne
gs
mov
fwait
cmp
in
add
div
iret
lds
in
fcmovu
dec
dec
cmp
lea
mov
loope
xlat
les
or
rorl
xor
sbb
cmp
cmpsb
adc
mulb
addr16
clc
fnsave
adc
pop
cld
and
adc
pop
mov
xchg
and
mov
sub
int3
xchg
push
push
mov
pop
mov
dec
adc
xor
add
int3
shl
movsl
xchg
mov
int3
adc
ljmp
inc
imul
jno
mov
pop
sbbl
xor
push
cwtl
sub
int3
xor
mov
mov
sbb
arpl
inc
hlt
cmp
push
jno
lods
sub
xor
mulb
test
push
cli
in
xchg
mov
outsb
pusha
mov
or
mov
aas
push
adc
ja
xor
outsb
add
mov
adc
sbb
jns
je
adc
mov
into
and
push
cmp
ds
rcrb
adc
cmp
jno
enter
aas
push
mov
add
clc
imul
mov
xchg
jno
js
and
in
jge
and
mov
mov
or
inc
ficomps
ss
stos
jae
pop
xchg
or
iret
cmc
test
mov
pusha
push
in
fcomps
mov
test
enter
push
mov
inc
pop
lcall
xchg
sub
add
ljmp
sbb
icebp
add
fldcw
jge
cmp
ja
aaa
bound
outsb
dec
dec
mov
or
and
insb
pop
mov
shl
ja
or
dec
mov
sbb
nopl
push
scas
push
aaa
push
test
addl
mov
dec
cli
pushf
nop
fdivr
push
cmpsl
mov
jecxz
lahf
std
xchg
sarb
sbb
sbb
fcomip
push
fisttpl
inc
pop
xchg
pop
imulb
je
and
ret
fsubl
mov
push
cltd
or
repnz
std
sbb
xor
jp
mov
lret
pop
out
cs
scas
test
stos
js
cli
xchg
fdivrs
pusha
ret
cmp
sbb
ljmp
pop
not
es
xchg
cmpsl
cmpsb
xchg
andb
fwait
push
jp
add
int
hlt
jbe,pt
sahf
les
xchg
sbb
rcrb
or
inc
inc
je
lods
stc
sbb
push
add
cmpsb
pop
int3
fnsave
mov
andl
push
sub
rcrb
sbb
xchg
roll
adc
in
stc
mov
add
mov
sbb
cmpsl
and
sbb
testb
mov
dec
mov
sbb
shl
push
and
pop
incl
xchg
sbb
clc
dec
aas
mov
ja
mov
movsl
sub
insl
mov
sarb
pop
std
fcmovnu
and
in
cs
adc
and
lea
jae
int
scas
add
fbld
cmpsl
iret
sarl
pop
scas
jmp
int
push
dec
fidivrs
popf
add
and
mov
imulb
lret
outsl
imul
js
dec
push
js
inc
popf
push
lea
and
xor
sub
es
sahf
popf
shr
sbb
sbb
shlb
sbb
mov
sub
jp
jmp
xor
dec
ret
lret
mov
fwait
lcall
pusha
idivl
mov
aaa
data16
xchg
ja
mov
push
out
enter
lret
cmp
rorl
inc
inc
out
shrl
sarl
dec
cmp
or
mov
insl
sbb
mov
push
cmp
mov
imul
adc
sub
mov
dec
pop
push
addr16
mov
xor
inc
cmpsl
jno
fisubs
inc
mov
scas
push
int3
sbb
lea
pusha
or
loope
fiaddl
pop
insb
jle
lret
dec
arpl
or
push
jmp
sbb
inc
movsb
xchg
dec
sbb
fsubr
adc
pushf
je
jns
mov
pop
mov
push
fnstsw
test
lods
repz
xchg
inc
insl
mov
inc
mov
roll
mov
pop
mov
sbb
ds
xchg
push
dec
aaa
xor
stc
mov
in
mov
mov
insl
stos
mov
cmc
or
or
mov
xlat
mov
push
loope
iret
xor
mov
lds
je
push
fidivs
mov
and
xor
loope
fwait
push
imul
andl
adcl
jle,pt
pushf
jns
adc
cmp
int3
scas
mov
aaa
pop
dec
mov
push
dec
mov
outsb
pusha
lods
mov
mov
or
mov
notl
jbe
inc
sub
ja
push
inc
sub
bound
aam
sbb
cwtl
nop
xchg
adcb
fcoml
mov
enter
pop
xor
mov
in
aaa
jp
and
inc
jmp
lods
ror
pop
dec
aas
push
pop
mov
mov
ficoms
push
enter
in
and
ja
stos
mov
fsts
cmp
add
aaa
repnz
es
xor
and
lds
pop
push
mov
pop
cmp
xlat
adc
pop
mov
ret
sub
test
lods
dec
ja
sbb
mov
and
aad
and
sbb
popl
clc
lea
mov
jle,pn
pop
icebp
lods
loopne
fwait
repnz
sti
in
sub
imul
cmpsl
rcrb
call
jecxz
lock
dec
andl
pop
jge
dec
jb
pop
pop
pop
xchg
mov
into
pop
mov
std
out
xchg
adc
add
push
add
mov
push
test
aam
dec
and
sub
addl
test
mul
fucomip
cwtl
or
add
jmp
push
adc
xchg
shr
inc
sbb
popf
inc
ljmp
popf
imul
adc
sbb
push
inc
xchg
dec
push
negl
pusha
inc
lods
sbb
push
lods
popa
pop
js
std
push
inc
les
push
xor
pop
xchg
xchg
xor
dec
cmp
mov
ljmp
sbb
push
repnz
cld
into
orb
popf
loopne,pt
andl
sub
js
push
push
cld
mov
adc
pop
jb
cltd
pop
mov
testl
xor
loop
sti
jns
push
test
sub
dec
das
adc
inc
push
mov
sbb
cmpsl
and
cmp
xchg
lods
int
insl
sti
in
fcomip
xor
mov
add
sti
mov
dec
shrb
adc
cmpsl
sbb
arpl
jo
pop
push
push
jo
push
mov
fldl
jae
push
sahf
sub
push
mov
aad
jl
shlb
adc
push
mov
loop
sbb
rcrl
mov
notl
jnp
jecxz
add
jns,pt
inc
rcll
test
js
jl
add
stos
cmc
xchg
inc
ret
push
xor
inc
lods
aam
mov
adc
popa
mov
mov
pop
jns
push
xor
pcmpgtw
in
sub
sub
popa
movsb
dec
push
std
sarb
jecxz
subb
and
or
push
xchg
outsb
xchg
loope
notl
insl
push
mov
lcall
loope
sbb
fdivr
xchg
fidivrs
jmp
mulb
popa
icebp
lcall
or
lock
fwait
test
jo
push
sub
adcl
or
adc
and
mov
mov
cmpsb
push
or
xchg
test
lds
cmp
fs
jnp
add
js
adc
mov
mov
add
dec
lret
pop
int3
fisubrl
inc
daa
scas
dec
jge
divb
leave
iret
and
sbb
push
xor
into
fsts
xorb
dec
fnstcw
xor
mov
lock
adc
int
xchg
push
loope
aam
notl
in
sub
mov
inc
mov
jnp
dec
mov
push
int
xchg
xchg
outsb
and
xchg
je
cmp
iret
je
and
dec
xchg
xchg
xor
lock
pop
test
pavgb
arpl
addr16
pop
mov
imul
loopne
xchg
add
inc
insb
cmp
sbb
outsl
shrl
jbe
movsb
cld
pop
cmp
mov
inc
lret
mov
negb
jne
mov
adc
popa
mov
xor
jb
arpl
jle
adc
push
popa
mov
pop
sbb
dec
jo
fdivl
and
test
out
enter
add
in
mov
sbb
jae
andl
adc
sbb
mov
dec
icebp
xor
pop
je
jno
das
sbb
mov
or
push
push
inc
inc
fiadds
outsb
icebp
ror
aaa
test
jl
hlt
cld
pop
shll
sahf
das
sbbl
or
lahf
jge
or
dec
sub
xchg
enter
push
shrb
loopne
int3
pop
and
jge
ficomps
js
pop
sub
test
dec
aaa
cmp
push
imul
xor
fiaddl
pop
inc
fisubl
jmp
mov
cmp
sahf
mov
rcr
imul
pop
cli
jns
pop
sbb
sbb
add
imul
mov
iret
jle
mov
mov
xchg
adc
fisubl
je
jnp
nop
xor
push
fdivs
lcall
mov
mov
scas
cmpsb
lods
es
in
and
sub
int
xchg
inc
cmp
inc
repnz
mov
add
stc
xchg
loope
add
cwtl
push
mov
jecxz
in
jnp
mov
mov
mov
jg
inc
scas
and
hlt
or
fdivrs
inc
loope
int
loope
mov
movsl
mov
jnp
xchg
fcoms
arpl
inc
lds
outsl
hlt
add
into
test
sarb
fwait
mov
std
orb
sub
mov
xchg
fs
add
leave
sahf
pop
adc
pop
sub
test
push
adc
out
je
or
mov
sbb
cmp
cmc
repnz
cmp
or
pop
cmovg
xchg
addb
inc
add
stc
or
stos
xchg
mov
mov
rcrb
lcall
mov
arpl
idivl
shrb
jg
data16
sbb
lret
loope
icebp
or
push
push
stc
jp
mov
jmp
fsubl
or
ret
pop
push
fs
dec
jmp
ja
into
or
cmc
jno
sub
dec
dec
imul
mov
pop
int
cs
aad
pop
push
imul
mov
and
aaa
xchg
xchg
jnp
xor
adc
mov
xchg
mov
inc
mov
and
dec
getsec
lods
push
data16
xrstors
sbb
ds
adc
add
xchg
js
bound
sub
iret
xchg
add
ja
lods
bound
jecxz
gs
dec
mov
mov
bound
add
fabs
mov
jle
fwait
daa
popf
stos
xor
sbb
addb
xchg
cmpsb
xlat
test
xchg
loop
inc
add
mov
adcb
push
mov
jmp
rcrb
fldt
test
movsl
and
insb
mov
js
inc
inc
je
sbb
mov
push
push
shl
ljmp
inc
adc
jp
add
scas
or
sub
pushf
aad
das
jno
subl
sbb
les
idivb
ret
cmp
or
mov
adc
and
xchg
stos
mov
mov
mov
mov
mov
mulb
imul
lea
rcrb
mov
arpl
in
jle
jp
mov
arpl
mov
stos
loopne
adc
ficoml
pop
push
testb
enter
jne
lea
mov
jbe
or
add
aad
test
notl
push
mov
addl
vmovq
cmp
in
and
in
cmp
cmp
mov
xchg
lahf
xchg
pop
pushl
pop
push
lahf
jno
cs
into
pop
roll
std
pop
hlt
mov
stos
mov
jb
pop
cmp
inc
fidivrl
xchg
push
loop
enter
lods
lods
or
sbb
and
jo
push
popa
pushf
mov
adc
out
dec
imul
xor
iret
add
clc
add
insl
jl
adc
pop
push
xchg
xchg
push
dec
mov
int3
xor
daa
push
xlat
imul
imulb
jae
cmp
xor
add
push
jae
mov
sarb
push
fistpl
icebp
pop
add
ja
cmp
push
sahf
dec
xchg
and
jmp
pop
sbb
and
js
adc
cmp
shlb
aas
xor
dec
ljmp
cwtl
cmp
pop
pushaw
mov
hlt
enter
mov
inc
cs
rcrb
addr16
cmpsl
out
cli
movsb
xchg
dec
pusha
jb
out
or
stos
mov
addr16
pop
mov
into
push
ljmp
cwtl
dec
jle
bound
ss
dec
test
push
in
or
pushf
mov
push
dec
jb
dec
inc
cwtl
and
fmuls
rcll
mov
jb
rcll
dec
dec
xchg
adc
testb
mov
xorl
ror
or
lock
sub
movsb
push
mov
mov
adc
je
push
fbstp
adc
cmpsb
std
in
pop
sub
or
pop
outsl
mov
inc
addr16
dec
push
ret
pushf
inc
jne
or
pop
push
mov
xchg
ss
idiv
mov
pop
les
lods
cli
test
mov
fwait
mov
mov
jle
jmp
sub
fdivs
adc
insb
cmp
mov
jl
fstpt
das
add
mov
pop
or
xor
mov
jb
sub
cmpb
ja
xor
mov
loopne
mov
cmp
lcall
xor
scas
push
or
stos
cmpsl
aam
insl
stc
mov
jg
mov
movswl
sti
pop
cld
jl
out
dec
mov
jae
lret
and
mov
push
outsb
xchg
adc
fsts
in
shlb
adc
mov
mov
sbb
xor
pop
movsl
mov
fnstenv
and
xor
jg
out
dec
inc
cs
rorb
stc
ljmp
mov
inc
jne
das
mov
inc
pop
sbb
loop
mov
out
movsl
push
mov
xchg
and
sbbb
lods
or
cmp
push
rorl
lds
icebp
cs
and
movsb
pop
into
sub
fwait
pop
or
dec
fstl
or
push
subb
adc
shrb
ret
lock
xor
je
loopne
lret
fdivrs
or
pop
negl
cmp
fisttpl
xchg
pop
xchg
pop
pop
pop
xor
repnz
cmpl
dec
in
hlt
add
jge
cmc
js
add
gs
stc
pop
mov
in
or
sub
add
pop
cmp
jmp
cmp
push
mov
xchg
push
pop
and
and
xchg
push
sar
dec
in
fdivl
sbb
inc
test
imul
sub
sahf
sub
xor
add
push
push
dec
rcl
jle
xor
enter
inc
push
and
lods
xor
test
cmc
imul
push
fcoms
push
cmp
dec
ret
mov
push
push
mov
inc
jg
sbb
adc
test
mov
out
not
stos
mov
gs
mov
fisttps
stos
icebp
xchg
hlt
ficoml
ja
ret
out
sbb
mov
jo
pop
es
or
inc
pop
fildl
jmp
mov
pop
add
pop
mov
add
push
cmp
lcall
rcl
mov
icebp
fsubrs
das
dec
push
ss
lods
jge
add
fidivrs
and
and
stos
mov
sub
adc
out
dec
add
adcb
cmp
dec
adc
cwtl
mov
dec
fiadds
pop
jnp
inc
in
xor
inc
adc
mov
in
repnz
xchg
in
movsb
in
push
dec
mov
lea
mov
xor
sahf
fidivrs
jns
pop
inc
or
enter
icebp
cmc
les
fdivl
mov
mov
sbb
dec
dec
pop
mov
jo
xor
fidivs
loop
jne
or
cli
movsl
xchg
fwait
sbb
mov
insb
adc
fcoml
jmp
orb
adc
inc
sub
mov
jmp
push
inc
or
inc
ds
jl
loopne
sbb
lods
xor
jp
mov
out
push
jno
insb
mov
pop
loopne
jb
sti
push
rcrl
mov
addr16
adc
or
pusha
movsl
nop
dec
adc
hlt
mov
push
bound
sarb
mov
enter
test
mov
fisttpll
or
pop
bound
leave
arpl
sahf
cs
clc
xor
div
repnz
mov
test
cmp
pop
in
cmp
hlt
mov
and
cwtl
adc
or
mov
aaa
xor
in
push
cmpsb
dec
outsl
add
and
out
sbb
out
add
scas
fcoml
dec
sub
push
adc
aaa
jo
imul
add
cmp
adc
or
jle
fs
jno
jl
loop
push
cmp
mov
adc
andb
and
adc
dec
inc
push
push
mov
loop
and
ja
scas
jae
out
mov
or
loopne
mov
fidivrs
sbb
repnz
lock
leave
adc
sahf
lsl
push
sub
or
or
pminub
out
adcb
xorb
sbb
ja
lcall
adcl
dec
fsubp
mov
jge
push
jmp
aas
cmp
pop
popa
fdiv
xchg
jne
pop
scas
ss
jl
popf
daa
mov
arpl
add
sbb
test
cmp
adc
cmp
jae
mov
insb
inc
subb
iret
cltd
imul
jbe
int3
dec
xor
ss
mov
or
imul
shll
sub
ficomps
pushf
aam
int
cmp
push
sub
aad
rolb
jg
int3
arpl
lock
ss
in
sbbb
in
mov
les
loope
sub
loope
nop
int
ret
adcb
xchg
sahf
out
and
add
inc
ja
fnstsw
fiadds
cmp
andl
and
cmpsl
pusha
inc
lcall
test
call
test
repnz
sub
xchg
movsl
inc
aad
and
iret
mov
and
cld
mov
jg
xor
adc
ficompl
popf
ja
int3
inc
add
aam
fidivrl
cli
fbstp
lods
inc
dec
inc
push
inc
jbe
test
cmp
mov
dec
dec
cltd
fwait
test
push
or
cltd
pop
clc
xchg
testl
addr16
ljmp
add
cmp
ljmp
push
sbb
jmp
ret
xchg
xor
jmp
sbb
outsl
xchg
int
test
adcl
pushf
and
xchg
sti
dec
ja
into
or
insl
ror
lret
mov
or
and
movsl
cmp
sahf
cmp
shll
mov
es
and
pop
mov
cmpsb
fiaddl
fptan
and
testl
push
shll
lcall
lods
xchg
in
out
ret
mov
xor
lret
mov
repz
lds
fnsave
lret
mov
push
mov
push
or
in
loop
fimuls
jbe
test
adc
or
push
jmp
orb
jp
insb
xor
mov
or
arpl
lock
hlt
jmp
inc
fistpll
and
and
mov
ret
lret
pop
jno
jmp
lods
outsb
sti
mov
insl
push
pop
inc
add
mov
sbb
ljmp
jge
insb
push
aad
adc
push
ljmp
xchg
jne
rcll
hlt
aam
leave
push
std
popa
lret
dec
idiv
daa
dec
inc
call
movq
mov
in
cltd
mov
and
call
lock
test
div
xchg
out
mov
aaa
fists
jb
push
aam
inc
mov
adc
pop
or
sub
inc
sahf
inc
add
mov
mov
testb
rcll
pop
clc
push
loopne
sub
inc
push
xor
aas
and
mulb
addr16
int
mov
xchg
fdivl
mov
xchg
fwait
or
and
and
pop
popa
jb
pop
push
add
xchg
pop
or
xchg
pop
xchg
imul
les
jbe
push
cmc
adc
pop
pextrw
dec
mov
push
test
sub
dec
imul
mov
xchg
sbb
in
adc
scas
push
xor
andb
inc
push
test
rcr
and
and
xchg
jp
sbb
out
xchg
adc
dec
sub
mov
lahf
pop
mov
rorl
mov
adc
in
leave
stc
pop
mov
xor
in
sbb
jge
sti
dec
arpl
daa
pop
adc
mov
cli
in
inc
xor
iret
xchg
dec
mov
mov
xorb
mov
test
mov
aam
dec
mov
arpl
int3
inc
rcrl
bound
adc
xchg
xlat
lret
adc
aam
add
popa
rcll
sbbl
mov
adc
js
loope
push
das
es
cmp
mov
es
and
fsubrl
fisubs
andb
cmpsl
sub
sub
sbb
pop
icebp
insb
pushf
jb
xor
addb
or
pop
stos
push
xlat
jle
fdivrl
stos
loop
mov
push
jo
ret
add
out
pop
loope
inc
imul
and
addr16
aad
and
outsb
push
sub
sbb
outsb
sub
scas
insb
or
movsb
dec
testb
out
inc
lahf
mov
sbb
mov
push
and
and
xlat
mov
movsl
roll
push
mov
pop
push
dec
xlat
pop
pop
lock
cmp
pop
cmp
push
loope
cld
mov
mov
cmpsb
aad
cli
push
pop
lods
loope
dec
push
lret
add
xor
in
cmp
pop
dec
sub
sbb
jmp
add
add
shl
inc
je
sbb
imull
cmp
ljmp
adc
xor
int
insb
or
into
sbb
or
xor
sahf
clc
inc
push
dec
mov
nop
jnp
adc
cmp
push
xor
repnz
cmpsl
fsubrs
xor
sarb
or
mov
xor
inc
push
notl
mov
popa
xor
rolb
push
jmp
fidivrl
inc
mov
push
mov
les
sub
add
or
mov
rolb
ficompl
ds
cmp
mov
or
cmp
mov
enter
cmp
xchg
sbb
xchg
out
sbb
in
rolb
mov
daa
push
mov
std
pop
mov
in
scas
mov
inc
mov
jmp
insl
fmull
sub
xchg
adc
sub
es
jns
jmp
mov
nop
push
inc
push
pop
pop
bound
ret
and
xchg
pop
add
lahf
push
push
inc
stc
mov
arpl
cmpsl
movsl
adc
sub
push
push
sub
sbb
mov
xchg
or
add
imul
mov
cwtl
cmp
popf
jecxz
pop
popa
xor
in
out
mov
push
imul
iret
cld
sub
jns
xor
xchg
inc
clc
xor
jmp
adc
inc
sbb
cld
xchg
sbb
xchg
jl
or
divl
scas
out
xor
out
rcrl
xchg
cmp
xchg
add
int
subl
xor
jnp
inc
and
dec
xchg
or
dec
mov
aaa
dec
inc
jl
or
out
jnp
jl
shlb
mov
xchg
lret
jp
add
inc
testb
push
ljmp
adc
adc
push
sahf
pop
push
pop
pop
loope
int
or
jbe
in
push
adc
aaa
rcll
cli
xchg
insl
test
sbb
scas
loopew
inc
mov
mov
imul
cld
mov
fcoml
or
mov
mov
push
cmp
adc
ja
mov
repnz
or
cmp
cmp
les
imul
aaa
insl
cmovb
in
mov
addb
out
cltd
lods
mov
sbb
scas
lahf
lret
stc
test
inc
cwtl
int3
xchg
ret
cmpsl
xchg
data16
mov
in
push
mov
sub
enter
push
or
inc
adc
jmp
fldcw
stos
sbb
mov
scas
mov
inc
inc
loope,pt
lods
push
dec
push
cmp
jecxz
icebp
mulb
loopne
push
xchg
jecxz
mov
inc
pop
sbb
sbb
ja
sti
adc
adc
movsb
lock
loop
aaa
cmp
movsl
jl
fdivs
mov
jo
xor
pop
mov
sub
xor
pop
inc
cmp
std
inc
and
fmuls
cmp
and
sahf
and
push
push
or
mov
sahf
add
jns
lahf
xor
nop
imul
aas
adc
in
out
xor
push
mov
test
xchg
cmp
stc
incb
lahf
xor
pushaw
out
xchg
mov
xchg
inc
jae
loope
pushf
dec
cmpsb
sbb
int3
xor
push
add
movsl
dec
scas
adc
lock
push
imul
xchg
mov
mov
mov
adc
adc
rcrl
xchg
loopne
and
add
lahf
pop
mov
push
dec
ljmp
mov
add
inc
inc
push
xor
mov
jle
sub
out
repz
mov
les
sahf
mov
adc
or
jecxz
mov
mov
inc
out
setne
ljmp
xchg
cmp
xchg
inc
push
pop
ljmp
call
outsb
jb
jb
xor
xor
sahf
leave
enter
dec
test
mov
push
adc
cltd
jns
insb
pop
addr16
in
dec
sub
or
inc
dec
js
xchg
iret
aam
dec
adc
movsl
mov
cs
sbb
in
jl
cltd
jge
test
cmpsb
loop
cmpsb
push
clc
xchg
mov
cltd
mov
call
in
stos
mov
arpl
imul
rcrl
js
mov
xchg
stos
fsts
jo
inc
cmpsb
out
and
jnp
mov
push
push
xchg
imul
add
repnz
imul
and
xchg
inc
xchg
fbld
xchg
into
hlt
push
mov
sbb
shrl
xchg
xor
sub
bound
cli
jmp
jg
inc
cltd
notb
loope
xchg
inc
scas
jae
sub
aam
xorl
cmp
sti
sub
jp
mov
int3
stos
pop
jmp
test
xchg
mov
fwait
inc
pcmpgtd
shrl
mov
jo
mov
fdivp
movsl
pop
or
sti
gs
loopne
add
fmuls
inc
cwtl
sbb
into
cmp
jecxz
scas
cmp
xor
bound
xor
jb
xchg
or
lcall
pop
enter
xor
cmp
cld
inc
psrlw
xchg
out
jmp
sub
pop
jmp
call
imul
fs
sti
data16
sti
std
jne
sub
lds
insl
sub
add
inc
movsl
mov
imul
sub
xchg
add
ss
dec
mov
lods
jge
test
sub
cmc
add
push
xchg
or
sub
mov
xor
mov
test
xor
or
xchg
lods
sbb
repz
cltd
bound
data16
subl
std
push
test
xchg
jae
fwait
scas
outsl
mov
push
and
rorb
and
test
lcall
ss
dec
push
inc
sahf
lock
int3
push
or
imul
pop
push
stos
ja
jp
lods
mov
mov
push
test
loop
jmp
push
jle
fbstp
inc
fwait
pop
xchg
adc
inc
popa
xorl
jae
pop
sub
icebp
sbb
sti
ss
pop
fadd
and
xlat
icebp
addr16
out
mov
and
jno
shll
ret
xchg
mov
in
icebp
popa
add
xor
je
or
ffreep
and
lcall
daa
das
addr16
rolb
dec
lret
mov
aam
dec
sbb
pextrw
sub
dec
hlt
je
loop
mov
fwait
xor
movsl
dec
fsubp
pop
mov
dec
mov
and
add
lods
and
jae
and
sub
mov
push
inc
in
inc
ljmp
xchg
inc
mov
or
je
pushl
cmp
xchg
lds
push
xchg
enter
in
xor
lods
cmpsl
loope
fstps
xor
iret
fcoms
cltd
mov
lcall
in
sbb
sbb
sub
and
lcall
inc
ljmp
jae
popf
pop
or
movsl
out
sbbb
xchg
frstor
or
iret
popa
out
lcall
negl
xchg
mov
jo
stos
out
mov
or
fildll
push
or
push
lds
mov
or
inc
push
add
xchg
ljmp
xchg
pop
popf
push
inc
nop
addb
gs
lcall
mov
xor
sahf
xorl
add
dec
sbb
stos
scas
scas
bound
jb
inc
int3
lahf
mov
push
cmovs
mov
repz
scas
xchg
rolb
inc
or
pusha
xchg
int3
xchg
dec
push
fdivr
lret
shr
insl
fsubrl
jle
pop
jno
sub
test
mov
scas
rclb
nop
xor
shll
daa
cmpsl
jp
push
inc
fmull
xor
pop
pop
push
lahf
loop
cmpb
pusha
fmull
or
sub
jno
hlt
dec
adc
aam
push
cs
inc
sub
sub
or
mov
out
mov
shrl
push
addr16
ja
arpl
xor
es
adc
out
aaa
loope
inc
jbe
cmp
push
mov
sti
pop
mov
loop
hlt
dec
ja
scas
das
imul
adc
cltd
mov
das
stc
xchg
fsts
stos
mov
fcomp
xor
arpl
jecxz
notb
sub
xlat
sbb
mov
xchg
inc
mov
fmuls
pusha
pop
pop
inc
test
sub
lods
xchg
xlat
mov
and
enter
movsb
cltd
mov
cltd
push
xchg
push
cmc
mov
fildl
fxch
fmull
imul
out
int3
xor
dec
imul
clc
jb
fisttpll
imul
jg
mov
cmp
mov
popf
cmp
sub
lods
rorl
dec
xchg
pushf
out
xchg
or
std
adc
jge
lock
sahf
mov
ja
or
jns
push
outsl
or
mov
test
lock
jbe
adc
pusha
movsl
outsl
mov
mov
lds
enter
dec
stc
push
xchg
bswap
push
lea
clc
scas
dec
pop
pop
fiaddl
out
mov
or
cmovb
dec
iret
push
stc
sbb
sbb
scas
loope
jmp
dec
mov
leave
imul
outsb
sbb
mov
xor
sahf
gs
stos
mul
pmaddwd
lret
fisubrl
sbb
adc
cmpsb
sbbb
mov
jno
and
sub
in
shrl
cwtl
in
sarb
sahf
xchg
dec
mov
dec
dec
mov
mov
repz
scas
push
repnz
inc
sbb
dec
in
mov
mov
test
push
xchg
dec
movb
mov
cs
mov
cmc
jge
lret
cltd
xchg
in
mov
test
into
fwait
popa
sbb
or
insb
dec
sbb
push
cmp
and
pop
andl
int3
adc
pushf
or
das
xchg
push
ljmp
je
lods
outsb
test
imul
mov
mov
inc
cmp
jmp
scas
aam
pop
sbb
xchg
int3
mov
sub
iret
cs
bound
push
mov
fs
mov
stos
movsl
hlt
adc
jo
jns
dec
imul
mov
js
and
or
lcall
mov
clc
scas
jo
and
pushf
jmp
pop
xchg
mov
sub
daa
imul
mov
or
cmp
dec
mov
lcall
je
cmpsb
ret
inc
pop
push
push
popa
cmp
xchg
loope
mov
jo
xchg
aas
std
ret
aaa
fs
xlat
xor
andb
push
xchg
repz
xor
xchg
inc
push
push
testl
push
xchg
call
xchg
and
cmpsb
inc
or
fisttpll
movsb
push
inc
stos
arpl
inc
ljmp
cmp
shlb
insb
sbb
icebp
pop
pop
lods
rcrb
mov
addr16
lahf
xchg
xchg
test
iret
and
cltd
pushf
mov
inc
clc
cltd
cltd
movsl
push
repnz
dec
adcl
movsl
les
pop
mov
adc
imul
das
xor
mov
data16
ja
ret
add
add
les
and
popf
movsl
cmp
stos
and
or
add
aam
pop
xor
xchg
mov
mov
lret
mov
push
scas
add
jg
lods
sub
test
jmp
pop
bound
push
adc
adc
sub
pop
add
nop
mov
pushf
sub
leave
sub
cmc
pop
pop
rcrb
add
repz
sbb
pop
fisttpll
ss
fcom
mov
lock
hlt
imul
pusha
mov
cmp
mov
shrl
sbb
adc
insl
ljmp
dec
adc
sbb
aaa
inc
repnz
mov
mov
xchg
sbb
clc
cli
jo
mov
clc
add
jo
sbb
sahf
das
push
mov
inc
clc
test
adc
repz
mov
stos
dec
mov
adc
add
in
scas
inc
lret
pop
cltd
mov
jl
mov
in
sbb
sub
cld
fcmovbe
mov
jo
std
mov
shr
jl
inc
and
cmp
and
movsl
dec
fbld
data16
test
push
cmpsb
shl
cmpl
aad
aad
dec
sub
rcrb
cmp
insb
xlat
addr16
je
xor
jnp
jl
dec
sub
notb
adc
mov
cmp
incb
outsl
aam
clc
inc
test
nop
xor
and
out
mov
movsb
fmuls
mov
fs
out
pusha
or
imul
imul
add
lock
xor
repnz
xlat
int3
mov
lods
mov
mov
bound
call
test
out
loop
incb
and
add
cwtl
lret
jae
aam
scas
enter
les
xor
adc
dec
jge
test
out
ds
push
mov
aam
push
cmp
enter
cld
pop
mov
in
jb
sub
pushf
test
dec
sahf
aaa
jbe
pop
les
dec
loope
mov
xchg
dec
mov
push
mov
cwtl
pop
push
pop
sub
mov
sbb
and
lea
jp
addb
std
subb
mov
mov
and
jmp
xchg
call
fists
mov
lods
gs
cmp
popa
jle
out
lret
sub
leave
mov
loop
or
add
addr16
adc
or
pop
and
cs
cmp
hlt
adc
xor
jnp
and
add
insl
ja
push
push
adc
js
in
pushf
push
inc
mov
inc
mov
adc
sub
push
rcl
pop
dec
repz
sub
shll
push
and
lea
push
fsubrl
into
ss
sbb
inc
sbb
sbb
ret
fstps
mov
cmp
lret
pop
hlt
dec
inc
mov
sarl
sub
cltd
aas
add
rcrb
push
sub
int3
add
outsb
or
xor
out
add
out
fadds
jg
outsl
lea
mov
testb
dec
addb
js
loop
mov
lds
sub
out
in
testb
and
sub
adc
mov
sub
push
inc
stos
mov
sti
and
xor
add
dec
pop
cld
and
cli
into
movsl
xchg
xchg
jl
cmpsb
inc
dec
pop
mov
movsb
inc
ds
sbb
jnp
push
mov
push
mov
inc
dec
jne
mov
ja
data16
and
mov
sub
xor
stos
loopne
or
and
cmp
dec
repz
jo
stos
jg
xchg
test
rcll
es
leave
xchg
push
pop
ret
lcall
andb
push
cmp
es
xor
aam
data16
sbb
jecxz
pop
or
int
into
xor
jo
pop
lds
push
stc
xchg
in
cmp
dec
testl
xor
ret
jb
adc
cmpsb
scas
ljmp
fwait
pushf
jb
in
les
lcall
arpl
dec
add
mov
mov
pusha
jo
dec
sbb
lea
jge
lret
int
lret
dec
mov
fmull
mov
mov
inc
mov
daa
lock
xor
rolb
sbb
pop
mov
stc
jb
test
lods
ds
mov
mov
insb
lea
mov
scas
shl
test
cmp
aam
jmp
mov
mov
mov
pop
cmp
out
cmp
sbb
pushf
lcall
das
jns
out
and
call
int3
sbb
in
ss
jne
test
inc
mov
mov
push
adc
mov
or
lcall
cmpsb
mov
cmp
mov
jl
mov
cmp
cltd
fsubs
push
in
pop
mov
xchg
inc
ljmp
fadds
imul
sbb
pop
and
movsl
lahf
mov
dec
mov
sub
stc
mov
aas
jmp
jle
repnz
pop
lock
add
xor
push
neg
xchg
sub
dec
inc
push
in
sarb
inc
arpl
iret
fldt
cmc
orb
push
dec
pop
add
fdivr
lcall
clc
xor
arpl
sahf
push
insb
jb
xchg
jbe
in
pop
pusha
add
sarb
repz
sub
in
orb
loop
xchg
enter
jbe
or
ret
push
mov
movsb
cltd
mov
subb
dec
stos
in
outsl
or
test
ljmp
mov
cs
fidivrs
cmpsb
dec
repz
cld
hlt
movsl
dec
cmp
sbb
out
dec
sbb
push
rcll
test
jmp
lcall
icebp
jl
rorl
lahf
sarl
cmpsb
dec
daa
into
xchg
xchg
pushf
mov
sbb
insb
ja
in
xchg
push
mov
mov
js
xchg
int3
sar
or
mov
fimull
mov
insb
fdivl
jns
sub
inc
adc
and
cmp
sbb
pop
js
jp
scas
fdivl
in
push
mov
push
fwait
sarl
push
jne
fimuls
inc
popf
add
inc
imul
sbb
out
add
mov
jae
push
mov
sti
cmpsl
movsl
cmp
and
fists
lds
fisubrl
push
popa
sbb
xor
gs
xlat
dec
mov
mov
vmwrite
dec
mov
cmp
fmuls
cs
repnz
into
or
xchg
rolb
or
add
cltd
mov
aam
cmp
sub
or
sub
test
aas
lds
fidivs
faddl
loopne
sub
decb
sbb
shlb
cmpsb
in
clc
out
scas
mov
push
sub
sbb
ss
xor
and
push
movsb
popf
pop
inc
lahf
cmp
sbbb
aam
jmp
adc
bound
sbb
leave
sub
test
cmc
rolb
pop
in
test
lods
inc
jecxz
je
mov
jo
mov
cmp
pop
scas
es
mov
repnz
jg
leave
aaa
std
add
into
xchg
pop
adc
sub
clc
mov
or
mov
ds
fidivl
add
xor
mov
out
data16
shl
pop
sub
xor
inc
sub
xchg
ffreep
lret
xor
aaa
jne
movsl
imul
cmp
mov
ljmp
or
lds
sub
mov
fwait
mov
jl
or
inc
add
add
mov
adc
adc
sti
out
scas
shlb
lods
lcall
sub
mov
dec
jbe
shll
sbb
pop
js
push
out
push
js
mov
enter
sub
nop
das
popa
sbb
jmp
adc
or
pop
dec
push
cli
inc
in
leave
mov
sub
xor
sbbb
test
mov
jo
pop
aam
outsl
sub
xchg
pop
pop
xchg
mov
fnsave
pop
imul
mov
rorb
dec
out
xchg
int3
adc
fstps
add
fstpl
lods
push
mov
xlat
negl
pop
cmpsb
repz
leave
pop
jbe
cmp
gs
enter
inc
mov
mov
pop
lahf
loopne
jns
ret
cmp
lret
or
popa
ret
mov
inc
xor
jecxz
in
cmp
loope
repz
nop
je
jno
mov
filds
cwtl
nop
jae
mov
out
push
mov
and
pop
push
faddl
xor
cltd
sarb
mov
rcrb
cld
les
rorb
sub
mov
xor
ljmp
push
lea
dec
push
aad
sbb
ja
shrl
push
out
or
add
inc
add
js
std
fsubs
jns
shlb
iret
xchg
sbb
rol
loope
addr16
jbe
mul
jnp
repz
sub
dec
sbb
pop
mov
in
add
xchg
push
jmp
pop
xor
rcrl
aad
imulb
arpl
mov
mov
sub
imul
mov
jbe
dec
loope
test
insb
ret
testl
faddp
jo
insb
test
mov
pop
repz
xor
push
mov
mov
adc
mov
mov
sub
rcrl
and
add
and
xchg
push
push
ljmp
cmpsb
test
add
or
push
fimuls
imulb
std
in
stos
test
or
and
shlb
cmp
cmpl
jne
xor
mov
mov
cli
stos
fwait
mov
test
mov
out
scas
sbb
js
cmp
pop
sub
pop
mov
in
adc
mov
les
pusha
mov
cmpl
dec
mov
outsb
lret
adc
and
test
stc
ljmp
jb
xchg
repnz
rclb
cmp
nop
jne
mov
cmp
xchg
sbb
fiadds
sbb
pop
push
and
cmp
stos
and
or
aaa
adc
push
test
and
mov
xchg
push
mov
pop
cmp
pusha
pop
aaa
xor
movsl
cmp
and
inc
pushf
jl
fidivrs
sbb
stos
imulb
mov
rcll
xlat
insl
fmull
cmp
mov
adc
mov
or
ds
fisubrl
jno
adc
addr16
nop
mov
push
cs
pop
rclb
icebp
lret
xchg
inc
xor
jae
int
in
fisubs
xchg
dec
aam
pop
je
pop
push
pop
pop
clc
std
mov
mov
popa
pop
pop
das
inc
push
iret
fwait
pop
or
mov
sub
ja
punpckldq
xchg
mov
scas
mov
js
mov
jmp
sub
outsb
ret
sahf
add
xchg
sub
add
stc
xchg
repz
mov
lods
sub
cmp
or
in
mov
int3
xchg
cmp
inc
mov
gs
push
push
or
je
ljmp
add
push
or
pop
aam
xor
call
lcall
mov
scas
scas
movsl
push
fld
mov
adc
jno
enter
nop
ficoms
popf
mov
inc
mov
leave
xchg
dec
sti
cmp
pop
fldl
scas
adc
je
jmp
jno
inc
shl
leave
movsl
stos
sbb
enter
cmpsb
imul
xchg
cld
pop
ljmp
mov
add
mov
jl
stc
or
add
call
or
or
xor
out
leave
xchg
inc
out
mov
jb
mov
sbb
or
cmp
sbb
sahf
mov
xor
cmp
cmp
or
lea
in
xor
das
inc
pop
mov
mov
mov
sar
outsl
dec
in
sub
cmp
shrl
sbb
adc
js
divl
lods
es
jle
or
sub
pop
inc
out
mov
jb
jns
es
inc
add
iretw
in
stos
addr16
jo
mov
sti
ret
cmp
push
loop
test
insl
jecxz
sub
cmp
lds
test
popa
jo
or
sahf
pop
cmp
jl
jns
fs
enter
inc
rclb
add
lret
dec
jb
adc
fcoms
enter
mov
arpl
cs
bound
and
popa
inc
jbe
lods
cmp
enter
pop
mov
xor
lret
enter
adc
cli
mov
pop
dec
ljmp
les
loope
out
rclb
pushl
test
orb
or
les
inc
mov
jae
lret
inc
sti
nop
jle
fmul
or
ret
pop
mov
lret
sub
mov
movsb
int
aam
dec
xchg
insb
lea
test
cmp
jl
pop
mov
repz
mov
cmp
jno
mov
sub
in
fs
jno
pop
lahf
push
push
pop
int3
adc
jecxz
jns
lea
xchg
idiv
roll
daa
pmulhuw
mov
jae
mov
xchg
int
lea
and
xchg
push
test
mov
fisttpl
mov
mov
mov
popa
cmp
jb
nop
int3
test
jg
je
cmp
mov
rolb
mov
lahf
mov
cmp
xlat
in
lods
jbe
stos
out
sbb
jmp
xor
sbb
pop
mull
cmc
push
out
adc
mov
mov
clc
or
sbb
stc
add
mov
add
pop
adc
pusha
sbb
jae
fcoml
shll
jb
xor
pop
gs
imul
lcall
jg
pop
sbb
rol
ljmp
sbb
adc
lea
dec
orb
sub
or
push
popl
test
xor
mov
pop
sub
mov
pushf
xchg
xor
cmpsb
add
jnp
jmp
aaa
add
mov
arpl
xchg
les
cmp
inc
push
xchg
mov
jb
addl
cmp
sti
jmp
insl
fs
cltd
test
cmp
decb
adc
fucom
imul
clc
imul
add
adc
push
pushl
fcomp
adc
rcl
jge
or
xchg
jmp
add
push
faddl
inc
aam
inc
sub
dec
insb
push
test
or
fistpll
pop
mov
mov
sbb
cmp
jo
add
popa
imull
shrb
aam
ficoms
jl
pop
sbb
pop
dec
lods
jmp
daa
jno
sbb
sarb
fdivs
bound
jno
inc
int
xlat
add
stc
cmc
ret
andb
mov
push
lret
mov
fidivrl
das
jge,pt
add
ss
mov
pushf
jne
dec
dec
cmp
or
push
xlat
push
int3
lahf
sbb
out
scas
push
sbb
daa
insb
and
fsts
sbb
xor
dec
stc
fucomip
test
and
ja
out
xor
popl
int3
jecxz
dec
mov
repnz
mov
ret
ja
mov
jb
mov
icebp
push
xchg
xchg
std
jg
mov
mov
leave
jmp
add
test
pop
cmc
popf
enter
pop
movsb
add
out
dec
push
cmpsl
add
mov
sub
cmp
mov
pop
mov
int3
in
mov
inc
movsl
ficoml
jmp
jl
jge
stc
mov
sahf
mov
mov
inc
loop
push
and
in
aaa
popf
mov
movsb
pushf
xor
test
adc
pop
mov
and
out
lods
pop
fwait
dec
pop
pop
pop
mov
in
pop
mov
cld
sub
push
in
xor
xor
pop
push
jge
popa
sub
mov
xchg
push
add
out
ror
mov
pmullw
cmp
cmp
jl
in
dec
and
cmp
fdivs
test
in
pop
ret
scas
rsqrtps
mov
loopne
fld
jg
addb
stos
je
fwait
unpckhps
jo
and
mov
push
mov
in
mov
mov
out
fadds
and
xchg
aad
push
sub
inc
xlat
dec
es
fsubs
mov
xchg
out
loopne
sbb
shlb
sub
and
subl
lret
cld
xorl
pusha
in
jae
cltd
push
mov
xchg
in
iret
dec
lds
mov
inc
jb
lret
cltd
jns
fists
cmp
xor
test
push
int
xchg
aaa
fldln2
cmp
and
frstor
push
inc
lea
sbb
sbb
ret
and
mov
stos
or
arpl
imul
add
imul
movsl
cld
lret
cwtl
and
cmc
pushf
mov
add
sub
mulps
push
mov
inc
pop
pusha
jge
dec
and
and
in
and
leave
mov
pop
dec
in
lock
outsb
xchg
push
gs
cld
repnz
pop
mov
lahf
stos
data16
call
push
xchg
addr16
cmp
int
sub
jnp
xchg
mov
inc
push
mov
ja
xor
sub
fisubl
mov
inc
cmp
mov
mov
sub
dec
jnp
jle
in
mov
sub
repnz
cs
xchg
data16
fcmovne
xchg
xor
and
ljmp
add
mov
ss
or
push
shlb
jno
xlat
push
sub
jnp
mov
fstpt
mov
mov
daa
sahf
adc
inc
icebp
imul
in
neg
addl
push
mov
es
sti
inc
dec
mov
leave
push
outsb
jne
dec
out
xorb
or
lock
inc
test
inc
std
cltd
clc
or
jbe
test
push
and
gs
push
inc
add
jp
gs
out
sti
cltd
push
sub
fs
loope
mov
mov
jle
dec
movsl
rcr
outsl
cmp
or
stos
pop
sub
sti
mov
stc
imul
or
mov
and
or
sarl
sub
adc
and
leave
lods
pop
sahf
add
movsl
dec
xlat
mov
mov
adc
shrb
in
negl
cmp
stos
sbb
fisttpl
mov
scas
stos
test
mov
xor
jecxz
cmp
mov
adc
push
sub
lds
mov
fwait
sub
push
stos
dec
mov
jns
mov
inc
pop
stc
xor
imul
jns
jne
sbb
pop
xchg
es
push
clc
inc
mov
neg
aas
in
push
push
fisttps
dec
xchg
aam
sahf
icebp
inc
fbld
adc
jecxz
mov
pusha
mov
gs
stos
pushf
and
mov
sbb
mov
mov
cmp
mov
xchg
sahf
and
adc
test
and
stos
aam
dec
push
lret
mov
inc
popa
js
xchg
mov
jb
mov
mov
dec
orl
xor
aam
add
les
pop
push
add
sbb
out
rclb
mov
sti
jmp
and
lahf
arpl
xor
cmc
mov
dec
addr16
jnp
and
add
inc
insl
sbb
repnz
pop
push
xor
or
scas
jl
pop
add
mov
daa
lret
cmp
jecxz
fwait
leave
gs
pop
xchg
scas
mov
sbb
mov
out
int
dec
xor
mov
enter
movsb
lods
rcrl
int
dec
or
pop
dec
ja
pop
loope
mov
imul
cltd
dec
cmpb
jbe
add
lret
enter
hlt
outsb
data16
mov
bound
call
mov
inc
and
leave
sbb
lea
repnz
jbe
push
mov
je
mov
cld
mov
pop
adc
and
mov
adc
pop
fs
or
pop
sub
sub
hlt
lods
cltd
adc
sub
idiv
clc
fwait
std
cmp
push
mov
or
icebp
jge
cli
imul
rcr
scas
les
pop
dec
aam
out
shlb
sbb
addr16
or
pop
dec
push
jae
xchg
add
mov
jns
ficoml
lds
popl
dec
out
cmp
push
mov
sahf
and
dec
pop
and
cmpsl
and
cmp
inc
mov
subb
sub
insb
sbb
fsubrl
jnp
mov
sub
add
cmp
dec
add
dec
adc
push
outsl
push
pop
cmpsl
leave
push
inc
cmp
lock
cmc
inc
loopne
aam
lds
mov
sbb
arpl
mov
imul
push
jle
mov
inc
pushf
in
adc
std
sbb
scas
sti
in
mov
dec
cmp
dec
aas
pop
cmp
mov
cli
dec
inc
push
mull
adc
and
adc
in
dec
ret
xchg
imul
bound
repz
dec
inc
xor
mov
scas
sbb
push
pop
testb
sbb
or
lods
cmp
sub
scas
mov
mov
inc
add
adc
bnd
fucomip
ljmp
or
xchg
imul
into
mov
mov
inc
adc
insb
or
in
scas
jbe
jl
jp
rolb
movsb
cltd
mov
fisubrs
popa
fsubp
rcl
xor
les
cltd
dec
or
sbb
nop
push
xor
cmpsb
cwtl
sbb
lock
insb
cmpl
inc
or
dec
sbb
sahf
and
jmp
aad
enter
aas
sub
aas
dec
push
arpl
mov
gs
lahf
addr16
inc
push
and
je
xor
aad
sbbb
out
xchg
push
addr16
fdivrp
mov
and
sub
cmp
dec
jmp
push
insb
adc
ds
xor
btc
stos
jb
cmpsl
ret
stos
jge
repz
mov
shlb
xchg
leave
cmc
out
arpl
mov
inc
xor
jns
pusha
loope
mov
ja
lods
mov
repnz
fdivr
mov
sahf
enter
inc
test
hlt
rcll
xor
inc
stos
lock
in
jb
addl
adc
scas
sbb
or
mov
dec
sub
xor
in
sti
js
movsl
dec
clc
jmp
cmpxchg
mov
out
aam
pop
aam
imull
decb
push
stos
and
test
outsb
mov
mov
scas
mov
fs
in
cwtl
and
iret
cmp
cs
dec
shrl
out
jmp
repnz
lret
mov
sahf
lea
sub
sbb
mov
fisttpl
and
hlt
sbb
stc
lret
sbb
inc
scas
adc
arpl
mov
sbb
lret
jae
in
testl
jge
and
xchg
enter
int
test
mov
es
jmp
mov
inc
cmp
fdivrs
cmp
add
dec
push
sbb
fmull
push
leave
pushf
xchg
push
insl
push
and
mov
js
and
lea
aam
dec
loopne,pt
cmp
mov
xchg
ja
and
lret
sub
xchg
dec
mov
dec
imul
sub
dec
lods
xlat
es
fnstcw
jp
fdivs
sub
test
jecxz
add
mov
ds
js
aas
mov
loope
fnstcw
es
add
int3
enter
add
data16
enter
scas
pop
sarb
je
and
lock
cmp
adc
add
sub
clc
push
add
int
mov
xor
push
cmp
out
clc
dec
sub
adc
stos
lock
outsl
fadds
idivb
aas
cmp
and
dec
fnsave
xchg
aad
push
test
or
ror
repz
in
push
mov
push
and
push
iret
xor
ret
insb
xchg
nop
stos
xchg
jo
fldcw
icebp
testb
jnp
out
mov
inc
test
mov
ja
sub
jl
lahf
push
xor
push
jecxz
mov
leave
xchg
or
mov
lods
mov
fwait
iret
mov
mov
loopne
jmp
lcall
aaa
push
mov
jno
movsl
cwtl
orl
outsb
mov
inc
push
or
and
pop
lret
arpl
xlat
sahf
or
adc
mov
sub
pop
fldcw
and
xchg
jne
jns
jl
xor
jge
mov
icebp
imul
lahf
jl
fcompl
fimull
inc
jno
fstpl
mov
rorl
mov
and
and
scas
and
cld
loop
stos
jg
ret
fidivrl
sbb
sbb
icebp
out
lret
test
lods
bound
and
in
aaa
ret
cmp
xchg
inc
and
fs
cltd
scas
clc
cmp
jp
arpl
xchg
push
das
jecxz
lods
mov
lcall
mov
xchg
sbb
xlat
mov
iret
sub
decl
mov
mov
out
sti
mov
or
inc
ja,pt
mov
loope
inc
xor
jb
lret
sbb
lods
out
cwtl
testb
mov
sbb
out
out
dec
into
in
push
jle
setae
in
imulb
xor
and
mov
xchg
cmp
sbb
jbe
sub
cmp
cmpsb
lds
sbb
sub
popa
lret
dec
dec
addl
sbb
gs
ret
dec
sub
sbb
scas
xor
and
mov
mov
mov
fdivrl
int3
aas
push
loope
adc
push
inc
out
cwtl
dec
lcall
daa
int
adc
pop
je
sub
mov
mov
je
ds
iret
cmp
xor
pop
aaa
push
xor
or
adc
dec
ja
inc
mov
xor
imul
xchg
push
xchg
add
cmpsb
addr16
jmp
push
loope
jle
int
xchg
pop
mov
rorl
xor
movsb
test
shrl
vmovlps
dec
cli
or
mov
fcompl
pushf
xchg
push
mov
mov
icebp
dec
in
sbb
mov
lock
xchg
out
cltd
clc
cltd
xchg
mov
mov
fs
imulb
mov
imul
sbb
jo
dec
jb
sub
pop
testb
pop
pop
dec
ret
cli
mov
push
jecxz
testb
cmpsl
mov
mov
outsl
inc
insb
je
stos
imul
cld
inc
scas
sbb
cmc
rcrb
test
adc
leave
adc
mov
xchg
imul
push
cmp
mov
xor
jne
mov
ljmp
sbb
cmpsl
dec
xchg
hlt
rcrb
jnp
cmpsl
insb
das
adc
mov
ljmp
jb
or
lret
cmpsb
leave
ret
shl
adc
mov
lret
and
loope
cltd
hlt
pushf
cli
movsl
push
scas
add
arpl
sbb
bound
sub
cld
lret
xchg
dec
subb
fcompl
push
jae
sbb
js
inc
dec
out
cwtl
cli
dec
pop
insl
cltd
lret
or
pop
fs
jle
ret
arpl
int
out
add
mov
fsubrs
mov
mov
mov
fcomi
adc
lock
fildll
sti
or
adc
push
pop
icebp
jge
dec
push
mov
into
pop
sub
outsb
sub
outsl
jno
test
xchg
shr
pop
cmp
push
inc
fimull
jg
sub
lds
sub
lahf
cmp
sbb
push
adc
nop
lret
cmp
cmp
jl
xor
sbb
out
adc
inc
ja
xor
sbb
adc
ret
mov
sarb
mov
into
or
cmp
cmp
dec
test
repz
xor
dec
clc
scas
xlat
pop
aas
push
cltd
adc
aaa
jecxz
push
mov
pop
xor
lock
push
cwtl
loop
inc
pop
or
mov
mov
arpl
in
or
add
sub
lock
adc
xchg
mov
adc
mov
pop
add
dec
push
cli
sbb
sysret
mov
jae
adc
pop
push
loopne
int3
scas
mov
mov
inc
jbe
int
imul
sbb
in
fisubrs
xlat
mov
push
jecxz
xor
pushf
addr16
jns
push
adc
push
les
aaa
out
cmp
xchg
pushf
fsubrs
mov
mov
imul
mov
xor
mov
sub
cmpb
jo
sub
or
repz
mov
jg
clc
nop
ljmp
or
pop
jnp
in
mov
popa
add
inc
mov
and
fsubrs
inc
cmp
jmp
push
mov
stos
mov
sahf
xor
sbb
push
cld
xchg
pop
pop
test
or
pop
mov
dec
jg
xorl
stc
stos
sbb
dec
push
pop
mov
mov
fcomip
cltd
cmp
cmp
mov
add
pop
cmp
insb
dec
into
sub
shrl
sbb
pop
jl
andl
and
rcll
lret
jb
arpl
int
pop
pop
cs
or
es
sar
xchg
adc
and
repz
scas
mov
cltd
nop
mov
mov
sbb
iret
and
inc
and
push
mov
or
sub
xor
inc
lods
lods
mov
ret
cmp
sub
jo
pop
jbe
ss
xorb
and
andb
pushf
rclb
shrb
jl
out
lcall
mov
jmp
sbb
aas
aaa
in
in
sbb
sub
hlt
das
push
popf
mov
mov
sti
aad
ljmp
movsl
add
popa
add
adc
gs
subl
icebp
jbe
or
sub
jnp
xlat
jb
movsb
rcll
cltd
push
push
push
inc
jbe
notb
inc
mov
push
lret
sahf
clc
push
jnp
mov
jae
adc
mov
add
sbb
fstl
xor
or
cs
sub
sbb
sahf
sub
ja
mov
sbb
sbb
mov
dec
aad
mov
test
popf
fnsetpm(287
in
int
cmp
ljmp
sbb
or
cmpsb
jmp
mov
dec
mov
mov
cmpl
out
fidivrs
push
mov
mov
mov
mov
int3
and
out
divl
sub
imulb
jae
or
std
sub
lea
pop
adc
pop
rorb
test
stos
wbinvd
push
icebp
ss
or
fcmovu
xor
hlt
sub
xchg
shl
out
or
mov
adc
out
je
insl
xor
testb
dec
je
adc
sbb
jecxz
inc
sbb
or
cmp
nop
out
xor
cs
ja
addr16
fs
test
loop
sbb
repnz
xor
test
bound
adc
push
mov
and
inc
adc
mov
inc
call
pop
pop
sar
scas
add
into
rolb
jecxz
xor
in
divb
ja
in
push
xor
insb
outsb
adc
fildl
xor
das
dec
push
lcallw
mov
jge
mov
push
or
fidivrl
jle
aam
gs
hlt
out
outsl
stos
xlat
adc
xchg
testl
rclb
pushf
mov
sub
jmp
out
lahf
fsubs
cmp
mov
jb
stos
lock
sahf
sub
jne
sti
inc
popa
lret
in
out
xchg
push
imul
fdivrp
test
mov
jbe
jle
jge
jle
fdivs
rcrb
test
push
into
fs
xchg
bound
ficoms
jns
dec
into
cs
mov
xchg
addl
jmp
mov
jnp
pop
jnp
out
xor
add
cli
aam
mov
or
adc
stc
cli
push
in
in
inc
xchg
add
or
add
mov
in
je
mov
push
sarb
inc
cmp
ljmp
or
jns
push
xchg
add
imulb
rorl
or
test
push
or
scas
aam
cwtl
inc
add
in
push
dec
scas
int
jle
xchg
adc
scas
lret
xor
push
or
xor
push
movsb
xor
mov
jmp
ds
in
ficoms
outsl
les
sub
push
aad
test
xchg
inc
and
js
mov
xchg
aaa
xchg
std
jns,pt
fwait
push
dec
xor
mov
and
push
push
pop
clc
nop
in
cmpsl
xchg
inc
rcll
xchg
push
mov
add
pop
cmpsb
xchg
or
cli
jp
fildll
mov
jb
data16
mov
pop
test
arpl
ret
leave
inc
or
dec
mov
inc
fstps
fisttps
loopne
add
mov
test
dec
nop
mov
pop
insb
dec
hlt
outsl
xor
outsl
sbb
test
mov
pop
or
lret
xor
cld
add
add
aam
in
aas
aaa
cmpsl
insl
sbb
fidivs
cmpsl
addr16
loop
mov
adc
cmpsl
sbb
mov
sbb
inc
outsb
jg
mov
sti
add
sbb
jne
cltd
push
push
add
jns
fcoms
pop
pop
in
jl
mov
das
jge
push
xor
mov
ror
test
mov
xlat
bound
fsubp
sub
push
cmp
xchg
mov
movsl
cli
mov
nop
sbb
jge
into
ss
sbb
push
leave
outsl
xchg
movsl
cmp
shl
ja
fdivp
fs
push
push
xlat
push
xlat
mov
xor
movsb
js
popa
je
repz
mov
mov
push
cmpsb
inc
jmp
sub
pop
rorl
data16
push
push
scas
cmp
push
xchg
shrb
mov
dec
push
push
jg
cli
outsb
xorl
xchg
pop
movsl
mov
std
xchg
cmc
mov
push
rcrl
cmpsl
ja
fwait
orl
pop
xchg
cltd
fdivrs
clc
adc
inc
adc
sub
inc
jmp
pop
jb
insl
push
mov
scas
push
cli
xor
orl
jmp
lea
mov
lds
loop
mov
and
daa
inc
xchg
cmp
pusha
jno
scas
mov
pushw
jno
pop
and
orb
add
jl
cwtl
test
xlat
push
iret
stc
xor
sbb
jne
xor
push
push
mov
adc
lods
loope
mov
aaa
dec
stc
clc
adc
incb
pop
and
pusha
mov
adc
cmpsb
add
sti
push
out
add
and
jmp
insl
and
push
mov
daa
and
add
lahf
dec
mov
mov
imul
inc
mov
jb
pusha
xchg
inc
testl
in
push
mov
mov
repz
push
push
add
jne
sti
out
add
mov
lods
push
fistl
fwait
sbb
mov
imul
dec
and
jae
stos
lret
in
jecxz
pop
cmpsl
mov
inc
adc
or
idiv
sbb
ds
test
dec
sbb
or
or
and
add
enter
mov
js
movsl
and
mov
cmp
pop
cmp
dec
test
arpl
jg
sbb
ljmp
dec
sbb
mov
ret
or
xchg
popf
jle
pop
je
sbb
cmp
iret
daa
mov
hlt
incl
addb
repnz
sbb
in
or
push
cli
test
xchg
imul
aas
dec
mov
fidivs
pop
lahf
leave
lret
sarl
add
mov
leave
add
orb
ja
stc
jno
movsbl
fadd
dec
stc
enter
loopne
xor
sbb
sub
shl
rolb
in
inc
out
ret
pop
rcll
lods
push
add
dec
fiaddl
mov
sbb
iret
cmpsb
aad
cltd
dec
cld
ja
addr16
fnstcw
imul
pop
mov
dec
mov
pop
cli
int3
fwait
sbb
push
push
pop
pop
insb
jne
leave
mov
test
lods
add
cmp
into
push
jno
xchg
push
scas
and
repz
dec
or
fnstsw
xchg
xor
xor
insl
add
mov
inc
cli
mov
test
nop
mov
sub
pop
jbe
enter
ljmp
dec
xchg
out
and
aas
mov
out
dec
dec
sub
jl
inc
cmp
fstps
push
cwtl
pop
mov
fimull
push
sbb
xchg
inc
and
push
orl
cmpsb
fistpll
jb
push
ret
push
mov
jae
out
adc
lret
out
outsl
call
sahf
clc
sub
mov
mov
bound
cmp
xor
icebp
fwait
xor
insl
popf
test
add
das
push
add
das
sub
lret
cwtl
mov
xchg
inc
in
test
push
loop
adc
adc
sub
mov
mov
sub
mov
ficoms
sbb
mov
or
push
cmp
addb
add
pop
shll
pop
sbb
repnz
mov
lock
andl
inc
mov
push
mov
sti
lret
inc
mov
push
pop
test
xchg
loopne
push
ret
mov
cwtl
sub
movsb
add
shll
fstpl
jg
push
shll
cmp
or
enter
xchg
insl
cwtl
pop
negb
inc
shrb
cmp
or
scas
jae
dec
sub
aas
mov
ss
inc
int
shrl
adcl
cmc
cmp
pop
mov
les
and
mov
lret
push
stos
jmp
fadd
pop
mov
mov
fwait
mov
loop
add
jge
jns
std
push
andl
jne
adc
jp
pop
mov
jmp
sub
push
inc
int3
cmpsl
sbb
push
pop
and
ja
mov
adc
rolb
test
outsb
mov
push
out
int3
fwait
loope
mov
push
dec
cmc
sub
das
lret
add
ficompl
sbb
dec
push
test
cli
push
inc
lret
incl
push
imul
or
adc
scas
fldl
les
mov
jge
jecxz
push
mov
adc
sub
jns
inc
movsb
xor
adc
jns
movsl
push
adc
int3
lock
stc
and
xchg
mov
xchg
in
cmpsl
sbb
xchg
jmp
dec
jmp
push
mov
or
aaa
aam
aas
pop
xor
rolb
pop
pop
shll
jne
dec
pop
dec
test
pushf
add
cmp
addr16
mov
mov
fimull
push
aaa
cmp
inc
cwtl
cs
cmp
xor
dec
ret
notb
add
stc
mov
inc
aaa
test
or
adc
mov
mov
fsts
xchg
xchg
sub
fcoms
mov
adc
shl
sbb
pop
dec
xchg
sub
cmp
sbb
adc
pop
mov
stos
subb
insl
inc
jp
mov
das
cs
jno
xchg
inc
lea
lret
jg
insb
pop
push
in
dec
fwait
adc
shr
push
les
aaa
add
mov
mov
addr16
clc
sti
out
mov
lahf
lcall
dec
xor
nop
jl
lcall
cmp
push
xor
mov
mov
cmpsb
popf
ret
cs
pop
aaa
sahf
and
out
jle
gs
push
xchg
int3
xchg
insl
push
push
xchg
pop
push
fwait
xor
ror
adc
shll
push
sbb
addr16
sub
int
mov
out
pop
sub
sub
mov
xor
inc
sbb
jmp
add
xchg
mov
mov
mov
dec
enter
inc
and
jo
inc
xlat
test
and
jge
inc
add
in
mov
dec
xor
repz
test
sub
les
repnz
test
xlat
jle
shl
mov
xchg
icebp
mov
and
pusha
pop
lds
jb
scas
outsl
scas
xorb
pop
cs
cmp
cmpl
cs
stos
lods
cmp
mov
popf
dec
hlt
mov
dec
lret
pop
cld
inc
pop
inc
cld
sti
mov
out
jnp
test
push
sbb
cwtl
xchg
iret
cltd
outsl
cli
and
dec
dec
mov
fadd
sub
xchg
dec
xchg
jnp
jns
jle
adc
dec
xor
mov
mov
xor
loopw
pop
push
pop
into
fisttpl
pop
cmpsl
ljmp
mov
lret
mov
vandpd
mov
mov
aas
inc
mov
mov
out
js
jmp
lods
in
push
or
popf
insl
lahf
dec
xchg
mov
and
xor
scas
mov
call
pop
cwtl
adc
cmpsl
nop
mov
jne
inc
loop
and
scas
rclb
subl
int3
div
xchg
clc
xor
cld
or
out
jae
arpl
pop
fs
and
inc
fs
mov
movsl
ds
cmp
adc
push
enter
ficoms
mov
aaa
jl
in
fs
lods
jge
fwait
cmovs
adc
addr16
or
jecxz
cmp
push
fwait
aaa
push
movsl
movsb
int3
push
inc
push
xchg
or
sbb
mov
xor
pusha
pop
and
test
xor
popf
sbb
cmpsl
dec
sub
out
pusha
nop
pop
repz
lods
xchg
xchg
clc
sub
cli
cltd
xor
cli
pop
int3
sahf
lret
bound
sbb
jmp
jle
idivl
jmp
push
outsl
negb
pop
cmc
cltd
test
out
lods
data16
std
movb
dec
inc
out
clc
dec
add
in
lds
cmp
mov
mov
mov
lret
pop
inc
xchg
push
stc
jg
jno
inc
ja
pop
into
xor
outsb
fldl
sbb
sbbl
or
mov
and
xlat
outsl
lcall
xlat
mov
dec
cli
adc
lods
fcoml
insl
xor
cli
jg
ror
repz
add
enter
mov
xor
pushf
push
inc
dec
in
push
xchg
roll
xchg
jecxz
cmc
or
jnp
cmp
adc
scas
jno
clc
popa
or
fldt
into
inc
push
inc
orb
adc
sbb
jmp
hlt
mov
inc
pop
cmp
mov
adc
cwtl
jbe
cltd
loop
rolb
decb
bound
dec
mov
rorl
xchg
je
std
inc
inc
enter
cmpsl
out
mov
cld
and
push
orb
or
jecxz
ret
cmpsl
jg
push
sub
jmp
pop
sbb
push
pop
xor
dec
fwait
push
or
push
subl
cltd
sbb
mov
or
daa
mov
push
fadd
mov
push
dec
sub
add
sbbl
or
div
mov
arpl
and
cmpb
mov
sti
and
cld
es
arpl
rcll
dec
sub
jnp
mov
push
push
push
pop
sti
adc
pop
lock
xchg
pop
jns
jb
sahf
mov
orl
add
sub
insb
ret
jbe
xchg
scas
adc
je
add
pop
inc
pop
sub
std
pop
incb
div
and
repnz
xchg
ljmp
pop
sub
mov
inc
sub
sbb
ss
pop
mov
fs
nop
push
and
inc
sub
dec
negl
leave
dec
cmpsb
pop
sbb
mov
cld
clc
mov
mov
popf
add
or
and
dec
test
or
cmpsl
and
cld
inc
insb
cmp
outsb
je
add
sahf
inc
xorl
cld
bound
loope
and
jmp
mov
ljmp
popa
clc
mov
jnp
in
out
loope
bnd
in
mov
or
stos
frstor
inc
in
out
xchg
jne
pop
stos
sub
mov
inc
enter
inc
dec
adc
out
pop
fldl
out
xchg
push
jmp
test
aad
call
inc
call
popf
mov
fsubs
rorl
pop
add
aam
cltd
test
sbb
lret
cmp
and
sbb
mov
pusha
cmp
sub
sahf
clc
enter
ja
test
gs
lahf
xchg
jge
push
lret
enter
test
cli
frstor
dec
inc
out
add
mov
adc
inc
xchg
int
adc
pop
int
cmpsl
aaa
mov
fs
movsb
pop
pop
push
inc
push
sbb
shlb
jae
and
pop
pop
cld
mov
ds
and
icebp
adc
ljmp
inc
mov
jns
call
inc
stc
dec
out
outsb
push
jns
idivl
dec
mov
push
xor
push
push
dec
sub
or
fsubrl
data16
inc
mov
pop
push
sbb
inc
mov
mov
push
cltd
push
sub
xchg
mov
ds
ja
cmp
loope
push
mov
mov
push
ss
or
inc
sbb
enter
xor
mov
xor
pop
test
xchg
sub
nop
cmc
loope
inc
hlt
cmp
and
mov
outsb
mov
daa
sub
in
lock
adc
sbb
adc
cwtl
out
mul
push
movsl
mov
sub
shrb
shll
adc
mov
lods
jmp
mov
inc
or
stc
and
adc
mov
rcll
lods
ja
clc
scas
std
or
fwait
mov
mov
dec
ret
notb
js
or
pop
pop
mov
xchg
sbb
xchg
sbb
xor
xor
divb
sbbb
mov
repnz
xorl
add
mov
adcl
dec
add
sub
push
stos
xchg
bound
adc
in
stc
cmp
or
sbb
lret
sysenter
add
in
cmp
das
dec
scas
push
repz
stos
sbb
push
dec
leave
dec
xor
ret
aaa
xchg
nop
jo
inc
xchg
test
adc
insl
lret
sub
std
stc
iret
in
outsl
push
sbb
pushf
cwtl
mov
pushf
idiv
js
pop
adc
mov
xor
jle
fld
sbb
lret
pop
pushf
mov
shr
clc
mov
jne
shrl
sub
push
sbb
cld
push
cwtl
xchg
xchg
cmp
inc
andl
scas
sbb
xchg
and
stos
inc
insb
lea
fsub
push
in
jb
mov
adc
cmp
adc
dec
push
mov
dec
aad
and
dec
fdivl
in
pop
push
push
mov
pusha
dec
or
xchg
stos
out
das
arpl
jns
mov
cmp
jp
adc
pop
in
jo
cmp
cs
loopne
cmp
dec
and
or
fsubl
sbb
jecxz
out
cmpsl
test
clc
scas
dec
test
aad
ficomps
dec
or
test
pop
insb
bound
push
mov
xchg
add
xor
test
sbb
test
dec
xor
mov
jmp
fnsave
adc
out
xchg
adc
adc
lds
cli
cwtl
fistpll
out
mov
imul
and
cmp
xor
push
sub
test
mov
jl
cmp
mov
inc
pop
pop
xchg
jno
rcr
pop
lods
es
sub
pop
push
out
in
add
ret
or
mov
cmp
enter
sbb
addb
aas
or
sbb
out
and
push
mov
pop
fisttps
fmull
out
pop
mov
pop
arpl
xchg
jne
cld
addb
sahf
push
sub
lahf
jp
inc
sub
outsb
sbb
xchg
int
push
mov
ffreep
mov
fadd
jmp
movq
and
mov
push
imul
loope
mulb
addr16
cltd
ja
mov
jns
xor
dec
cmp
lock
pusha
xchg
imul
or
xchg
movsb
ja
lock
cmp
iret
jge
inc
and
lcall
inc
sbb
mov
out
sub
and
jmp
jmp
icebp
icebp
inc
aaa
clc
arpl
in
lds
xor
call
dec
mov
and
adc
cmpps
ljmp
sbb
out
and
repnz
inc
pop
into
ljmp
jmp
sarl
xor
fucomi
in
stos
clc
jo
out
jle
inc
cwtl
xchg
cli
adc
int
and
jp
add
mull
and
movsb
out
js
ss
dec
xchg
adc
fwait
xchg
and
mov
cmpsb
sahf
inc
clc
or
mov
inc
push
adc
mov
and
fwait
or
sub
jp
jne
xor
fwait
push
addr16
inc
mov
jno
dec
dec
cmp
int3
mov
cwtl
sub
out
dec
push
repz
aaa
cmp
xor
lods
arpl
or
dec
dec
xor
cmpsl
mov
out
ss
pop
repnz
mov
js
lret
test
repnz
inc
dec
push
js
ficoms
dec
mov
mov
cmpl
fdivl
into
pop
js
lcall
jns
das
xchg
mov
repnz
loop
roll
or
push
ljmp
mov
jne
push
xor
filds
dec
or
pop
mov
test
xor
mov
in
shr
add
lds
in
cmc
push
inc
push
cli
or
cs
push
sub
or
outsl
jmp
mov
inc
cmp
in
cmp
xor
mov
loop
sub
inc
inc
stos
sbb
pop
push
outsb
or
sbb
movsb
mov
loope
or
insl
lea
dec
and
out
jecxz
je
lods
dec
fstpl
out
roll
lock
jle
mov
scas
and
and
or
enter
inc
clc
inc
ja
fnstcw
pop
repnz
mov
in
sbb
xor
pop
popa
mov
mov
scas
xchg
stos
mov
and
cs
pushf
push
fstpl
cmp
scas
push
cmp
adc
pop
mov
cwtl
pushf
jl,pn
mov
jns
ja
xor
push
push
xor
lock
pusha
mov
xchg
shll
sbb
mov
pop
pop
xchg
rorl
insl
inc
mov
and
repz
or
jbe
int3
in
add
pop
pop
or
scas
pop
ja
inc
call
pop
test
stc
ja
es
leave
or
mov
movsl
jns
push
mov
es
out
xchg
jnp
pop
nop
pop
ss
push
and
push
orl
mov
ss
jg
movsb
lea
xchg
inc
push
fisubl
sbb
lods
mov
add
pop
dec
in
movsl
stos
mov
mul
sarl
movsl
les
testb
leave
ret
jnp
or
sbb
push
fiaddl
repz
pusha
and
ret
inc
ss
lock
push
inc
push
push
shr
add
lcall
mov
sub
or
or
lods
insl
rcr
icebp
addr16
lret
sti
cmp
mov
jl
scas
aas
sub
mov
outsl
imul
decl
mov
push
pop
orl
test
dec
pop
cmp
xchg
ja
scas
mov
mov
fs
daa
dec
or
fwait
pop
fwait
jno
and
rorl
cmp
push
pop
lahf
insb
push
lds
aad
push
insb
inc
rclb
les
fsts
movsb
xor
add
ljmp
xchg
xor
mov
stos
and
adc
dec
push
pop
testb
mov
mov
jb
mov
rorl
scas
or
shrb
dec
les
pop
xchg
in
cmp
xlat
je
mov
mov
cld
sbb
xchg
lock
or
jbe
push
jae
or
repnz
or
popf
loop
enter
testb
daa
cmpsb
fisubl
xor
push
xorb
inc
incl
sbb
jecxz
daa
nop
inc
mov
dec
jbe
sbb
dec
dec
out
je
mov
popf
add
adc
iret
mov
lods
jecxz
pusha
fstpl
mov
shlb
inc
dec
pop
add
popf
pusha
out
inc
mov
push
cmpsl
xchg
xor
and
and
or
and
jge
in
js
mov
sbb
add
jno
in
sub
inc
xor
es
fstl
pushf
sbb
jecxz
push
pop
pusha
add
cmc
or
mov
pop
mov
ficompl
shll
mov
pop
loope
icebp
pop
ljmp
addl
and
je
add
fidivrs
imul
out
int
nop
mov
push
int3
jne
jns
mov
test
cwtl
push
xchg
push
dec
iret
mov
pop
xchg
pop
add
dec
mov
int
push
mov
pop
dec
push
sub
mov
push
add
shl
jo
xor
xchg
sub
aad
or
push
mov
jns
fbld
mov
sbb
in
mov
loope
bound
pop
mov
fbld
sbb
test
fisttpl
test
mov
lds
xor
mov
jo
daa
scas
rorb
nop
xchg
test
inc
icebp
mov
js
cmc
inc
pop
lock
pop
je
shll
dec
in
xor
mov
mov
lea
push
aam
fs
mov
fisttpl
adc
cli
cli
mov
cmpsl
add
pop
fisubl
les
sahf
jmp
mov
mov
add
movsl
xor
test
add
imul
or
repnz
cs
into
push
rorb
shl
pop
or
aaa
pop
mov
int
imul
push
mov
aad
inc
and
cmp
fwait
movsb
lahf
jo
sarl
nop
fidivrl
arpl
sub
es
mov
js
test
fmuls
leave
arpl
mov
and
sub
or
cmpl
xor
ljmp
std
insb
fwait
mov
mov
cmp
call
add
jns
cmp
ret
push
xchg
aad
in
cmc
ss
jo
xchg
testl
xchg
mov
add
or
xor
dec
dec
adcl
mov
xchg
aas
popf
int
add
dec
dec
sbb
dec
pushf
fadds
aam
jno
jle
dec
inc
lret
pop
fistl
movsl
insl
push
adcb
aaa
mov
adc
stos
inc
mov
pop
call
xchg
mov
hlt
or
mov
mov
div
inc
cmp
iret
cmpsb
es
sbb
scas
adc
jo
js
neg
roll
cmp
or
shrb
out
fisubl
push
push
enter
inc
jno
push
fistpl
mov
xchg
push
adcl
pop
push
pop
out
das
test
out
outsb
cli
jbe
data16
outsl
dec
xchg
ljmp
push
pop
hlt
mov
mov
adc
insl
mov
or
setnp
out
sbb
fidivl
jbe
sbb
movsl
mov
xlat
adc
inc
cmpsb
out
lahf
hlt
subb
jb
xor
fiaddl
pushf
call
cmpb
lock
andl
and
cmp
shr
pop
addb
and
adc
adc
jno
mov
push
or
in
ret
or
mov
sub
and
pop
adc
xchg
and
cwtl
loopne
movsb
es
mov
movsl
xchg
adc
cmpsl
lods
jl
cmpsb
es
lret
enter
push
ss
mov
mov
clc
rorb
testb
insb
push
negb
jp
in
adc
aam
add
sub
rolb
test
push
mov
inc
inc
test
pop
movsl
pop
arpl
bound
aad
add
xlat
imul
inc
ds
add
lock
dec
inc
jg
filds
mov
sub
movsl
add
lcall
or
mov
jns
lds
inc
fists
push
xchg
mov
cmp
adc
jb
ret
jns
sub
and
cmp
loop
cmp
adc
sbb
cld
pop
xor
rorb
jecxz
cmp
fdivp
pop
or
jle
sbb
icebp
mov
adc
js
push
loop
lds
push
jno
ret
push
repnz
fildl
dec
in
jb
into
mov
or
jno
mov
adc
mov
mov
cmpsb
adc
cmp
inc
push
inc
add
jmp
mov
fsts
add
and
adc
in
push
push
dec
imul
es
lret
jp
adc
add
outsl
mov
loope
pop
js
sbb
push
xor
mov
jae
arpl
xlat
jb
aaa
movsb
and
cli
inc
insb
clc
adc
cmpsl
jo
call
xchg
fidivs
testl
call
cs
and
xchg
bswap
mov
imul
jmp
cmp
mov
jno
dec
out
mov
sub
das
push
xchg
xchg
mov
cs
adc
cmp
mov
and
rcl
out
mov
jg
icebp
mov
aaa
mov
mulb
les
inc
push
ret
test
push
rcrb
xchg
mov
mov
inc
in
jns
sti
bound
out
xor
push
xchg
stos
js
or
stos
mov
aad
push
fcmovne
clc
dec
or
jno
xchg
cmp
cwtl
jnp
mov
call
dec
nop
mov
mov
and
fdecstp
cmp
mov
sub
mov
xor
inc
lret
push
xchg
mov
aad
imulb
xor
pop
ja
in
pop
jb
stc
lods
lds
mov
fcompl
inc
shr
jo
sarl
psraw
jecxz
xchg
mov
jge
xor
mov
mov
dec
inc
movsl
ss
jns
adc
mov
jb
leave
push
mov
out
lds
sbb
mov
loope
pop
stos
andb
mov
add
mov
rol
jns
push
and
mov
jle
jno
orl
or
into
cmp
fimuls
loopne
cmp
jg
push
hlt
clc
pop
add
dec
jmp
xor
push
xchg
imul
push
mov
xchg
outsb
xchg
push
je
out
mov
out
or
loope
push
aam
jae
mov
xor
testl
and
shl
and
inc
pop
aas
cmp
addr16
mov
xor
mov
jecxz
in
mov
add
imul
fidivrl
sti
ret
imul
mov
jns
push
std
add
xchg
mov
or
gs
adc
addl
mov
xor
cmp
push
push
in
cmp
sbb
loope
sbb
mov
stc
pop
or
outsl
add
repnz
add
sbb
call
mov
pop
or
mov
std
enter
testb
fstpl
imul
loopne
add
bound
cmp
jg
mov
sub
cltd
sub
inc
imul
in
adc
xchg
xor
mov
and
xor
xchg
imul
sub
fsubs
mov
or
cltd
and
lahf
pop
aaa
fidivrs
cs
lahf
add
xor
dec
dec
inc
insb
inc
push
je
test
les
mov
enter
mov
test
cmc
sti
sti
adc
or
mov
mov
out
ffree
aam
iret
mov
dec
inc
repnz
xor
pop
inc
mov
fwait
lea
push
rcrl
or
mov
cmp
roll
aaa
mov
or
or
and
mov
es
add
pop
pop
dec
mov
xchg
pushf
cmpsb
fs
dec
hlt
insl
fwait
mov
jo
mov
shr
lds
xchg
push
dec
cmp
daa
scas
mov
mov
neg
push
fucomi
fcoms
or
push
sub
and
mov
xchg
js
sbb
push
dec
cmpsl
jo
aas
lret
cmp
pop
cmp
inc
push
out
inc
xor
mov
dec
mov
clc
sbb
mov
jno
aam
jb
mov
cli
mov
stc
repz
sahf
js
call
xchg
fs
arpl
jnp
into
sti
and
movsl
inc
mov
int
inc
mov
lods
xor
clc
mov
mov
pop
adc
out
mov
out
aaa
adcl
loopne
call
sbb
and
leave
fwait
pop
and
push
cmpsl
bound
or
ret
add
in
cs
adc
fbstp
add
push
fnstsw
inc
push
cmp
pop
enter
out
dec
and
xor
cmp
pop
or
das
jbe
xchg
xor
mov
lods
out
in
repz
cli
mov
loope
stos
or
push
mov
faddl
aad
pop
pop
mov
jp
pop
push
pushf
imul
xchg
leave
adc
test
loop
ljmp
imul
xchg
or
movsl
nop
adc
in
scas
mov
pop
leave
dec
cmp
shl
mov
push
sti
roll
mov
iret
lcall
adc
cltd
js
sahf
pop
jb
ds
and
outsl
mov
daa
pop
call
pop
sub
pop
movsb
daa
scas
sub
inc
adc
xor
jg
mov
popf
pop
lock
dec
inc
cmpsb
cmc
cmp
pop
sub
cltd
ds
sbb
and
pusha
iret
mov
mov
fldt
cmpsb
sub
and
xchg
xor
loope
test
inc
or
adc
fldl
push
xor
imul
test
shll
adc
push
push
jbe
mov
adc
dec
nopl
inc
loop
aas
les
jo
ljmp
icebp
or
aaa
outsb
cmp
pop
mov
xor
test
pop
orb
push
mov
or
xor
dec
xor
fistpll
test
call
inc
jno
adc
clc
push
jae
mov
push
cmp
dec
mov
push
cmp
rolb
xor
mov
jmp
lahf
sahf
adc
pop
jbe
pop
mov
or
scas
stos
or
pop
and
imul
cli
xor
and
inc
movsb
xchg
adc
out
mov
lret
lea
subl
ret
jns
cmp
cs
or
pop
imul
mov
repz
fmuls
loop
in
fldt
loopne
mov
fldenv
add
clc
das
ja
push
jl
mov
cltd
inc
int3
and
sub
pop
cmp
ret
push
push
fs
pmaddwd
xor
idivb
sbb
push
push
xor
outsb
cltd
mov
jb
push
int
or
fcmovne
fisttpl
dec
mov
xchg
es
add
fdivrl
cmp
inc
dec
dec
push
xchg
fstl
popf
jecxz
mov
out
cmc
ja
sub
cmc
call
mov
lcall
push
xchg
aas
pusha
sub
or
mov
int
or
or
addr16
lods
ret
jge
pop
pop
push
sbb
add
loopne
mov
inc
sbb
mov
pop
outsl
test
xchg
push
xchg
loopne
pushf
in
cmp
ret
sbb
jns
out
adc
nop
shr
jbe
jno
mov
pop
int3
aam
fcoml
dec
movsl
inc
loop
cmc
and
pop
rolb
mov
sbb
xchg
insl
ret
pop
hlt
mov
fstpl
es
xchg
and
xchg
dec
mov
in
push
push
push
fdivr
flds
and
inc
clc
xchg
out
arpl
cmp
movsl
out
sub
ror
mov
lahf
shlb
std
mov
mov
jo
dec
out
jge
jg
shlb
sbb
jle
out
icebp
cmp
xchg
dec
push
fdiv
or
in
pop
mov
pop
mov
jge
mov
cld
jecxz
insl
xchg
mov
mov
fwait
cmp
mov
rclb
repz
test
push
jmp
lahf
filds
lods
test
sub
xlat
aad
iret
mov
std
cmc
pusha
sarb
jmp
pop
sbb
rol
xchg
cmpsl
movsl
or
dec
mov
adc
push
cmpb
sub
test
scas
fimull
cli
insl
pop
mov
xchg
add
sbb
adc
jecxz
mov
xor
rclb
mov
jae
test
xchg
mov
leave
dec
jl
mov
pop
mov
mov
shlb
out
sbb
push
mov
mov
pop
inc
pop
fwait
xchg
xor
aam
clc
xchg
xchg
xor
in
daa
push
out
dec
aad
lods
pushf
xchg
ljmp
insb
mov
adc
lahf
xchg
sbb
mov
push
scas
bound
test
add
outsb
fcompl
xchg
pop
xor
jmp
dec
jl
jl
dec
xchg
enter
sbbl
fidivl
int3
imul
add
and
sbb
fs
test
push
jnp
std
mov
add
mov
push
sub
sahf
pop
xchg
stc
cwtl
fucomip
sbb
or
add
ror
mov
and
jl
cmpsl
cli
pop
push
adc
scas
jae
or
jo
outsl
cmp
mov
lahf
pop
adc
mov
pop
push
scas
xchg
in
das
movsb
add
add
jbe
push
movsl
aad
insl
leave
fstl
mov
push
stos
lods
xchg
sub
andb
int
sub
ret
gs
inc
jecxz
into
jb
call
inc
sbb
daa
jecxz
sub
mov
cmp
nop
aas
pop
out
lock
pop
pop
fwait
xchg
je
xchg
addr16
cmpl
xor
add
cmp
das
cmc
sub
xchg
jo
and
pop
imul
shlb
cld
inc
mov
mov
test
mov
call
inc
loopne
repz
adc
aas
movsb
mov
movsb
in
inc
mov
ja
pop
clc
pop
movsl
push
mov
push
or
rclb
push
dec
mov
cmpsl
loope
or
js
xor
cmc
in
mov
jp
xchg
sahf
mov
sub
fiaddl
inc
pop
imul
sub
scas
mov
inc
push
popf
inc
add
push
dec
and
loopne
xor
jns
loope
aad
xor
sub
add
sbb
xor
jge
jb
repz
pushf
js
and
fwait
nop
nop
repz
mov
inc
sub
popa
lock
mov
sub
mov
es
mov
sbb
xchg
mov
mov
mov
cmp
mov
bsr
arpl
js
sub
loop
ljmp
fstl
or
mov
aas
xchg
ret
inc
xchg
sbb
scas
sub
push
outsb
add
fimuls
gs
inc
xchg
in
mov
stos
xchg
mov
push
xor
in
inc
fs
popa
or
js
adc
jg
dec
lods
call
push
stos
pop
inc
jmp
and
idiv
xor
pop
aam
cmp
jbe
shlb
out
dec
cmp
hlt
or
mov
and
mov
enter
or
arpl
mov
cld
or
imull
and
mul
jle
stc
jge
jp
icebp
shrl
push
adc
fwait
jmp
insb
mov
int3
sub
clc
mov
adc
xchg
sbb
cmpsl
lock
rcrl
xchg
gs
inc
movsl
in
rcl
lock
sub
and
ja
loopne
dec
and
or
xchg
data16
push
pop
and
fwait
mov
jb
xchg
mov
jns
js
pop
dec
inc
js
sub
mov
movsb
out
enter
push
add
popf
sbb
ja
movsl
adc
or
or
xchg
jno
pusha
push
push
out
jb
add
les
rcrl
sbb
lcall
push
lret
dec
das
jecxz
pop
xor
lds
dec
sbb
test
push
ret
aam
das
or
subl
mov
mov
dec
jae
iret
pop
add
adc
imul
outsl
adc
fwait
sbb
rcrl
sahf
xchg
shrl
andb
loope
les
adcl
scas
sub
mov
lret
out
imul
mov
stos
add
scas
adcb
lods
adcl
fld1
je
shr
loop
jnp
or
and
xchg
inc
or
xchg
and
bound
dec
xchg
aad
cmc
mov
call
xchg
and
int
jb
jg
daa
or
and
nop
push
sub
add
dec
divb
add
icebp
or
xchg
dec
inc
sub
pop
xor
mov
ret
push
cmpsb
dec
mov
pop
test
push
jp
adc
add
sbb
rorb
mov
shlb
stc
not
mov
push
xor
jecxz
push
mov
mov
cmp
cmp
push
and
jne
xchg
jecxz
call
orl
add
sub
dec
inc
mov
cmpsl
movsl
lods
lret
add
lea
adc
and
repnz
dec
pusha
popf
dec
repz
stos
pusha
xchg
mov
cld
int3
scas
int
sbb
adc
xlat
xor
lret
mov
push
mov
adc
mov
push
in
in
push
cwtl
xor
mov
push
sbb
jp
jb
add
outsl
fistpll
pushf
cmp
jecxz
subb
loop
pushf
xchg
fcompl
inc
dec
add
jno
dec
ss
mov
push
call
xchg
and
fcoml
xor
xor
jne
popa
mov
jl
jo
and
pop
jecxz
or
push
jae
insl
addl
je
sbb
inc
cli
jmp
xchg
outsl
add
jns
adc
lods
stos
jp
inc
ret
mov
in
ret
cmp
data16
out
jnp
and
mov
pop
int3
shrb
nop
adc
xor
fdivr
adc
cmp
das
or
mov
adc
adcl
dec
and
add
jp
adc
add
popf
and
outsl
mov
arpl
mov
mov
push
ret
out
out
scas
adc
lock
cs
enter
shr
cltd
inc
xchg
jg
cmpsl
push
adc
imul
push
xor
push
leave
xor
stos
push
mov
sbb
push
ficoms
imul
cmc
xchg
mov
imul
test
clc
jmp
dec
test
push
fstpt
orb
jmp
xchg
js
cmp
enter
or
inc
shrl
push
adc
imul
aas
aam
jne
jne
push
pop
pop
adc
mov
inc
ret
jmp
xor
mov
sub
sub
lret
rclb
xchg
xorl
movsl
push
push
jo
mov
repnz
loope
inc
rcr
insb
cwtl
mov
jb
push
into
xor
outsl
push
jmp
gs
movsb
cmp
lock
adc
loop
jg
popa
mov
add
xor
imul
mov
add
mov
push
orl
arpl
push
mov
in
inc
sti
stc
sub
cmp
sbb
cs
imul
cmp
push
and
and
into
rcll
xor
mov
out
lcall
pop
orb
add
mov
pop
sahf
test
or
sbb
mov
hlt
dec
data16
cld
mov
jbe
cmp
rol
add
push
in
fs
jne
and
sbb
std
dec
mov
jo
aaa
test
mov
dec
adc
add
sti
jl
nop
inc
cli
scas
xor
fwait
and
popa
pop
pop
mov
jle
mov
ret
ljmp
shlb
ds
into
insb
shl
idivb
jl
pop
outsb
popf
dec
addb
cmp
push
jo
bound
shll
into
sub
sub
cmp
push
test
in
inc
inc
ror
jnp
fldcw
and
das
addr16
pop
cmpsb
lea
xchg
fwait
shlb
pop
test
xchg
call
popl
lret
test
gs
stos
pop
lahf
std
shll
mov
cld
sub
add
fsubs
ds
ja
adc
sub
push
push
push
mov
in
jnp
lds
inc
push
in
mov
test
notl
in
stos
stc
pop
and
pop
pop
dec
ficoml
mov
xor
push
xor
pop
pop
xchg
addr16
inc
mov
dec
adc
mov
ss
int
jae
lock
push
sbb
cmp
add
jne
pusha
and
xor
inc
imulb
mov
or
adc
inc
add
and
adc
cmp
jbe
mov
jle
jmp
sbb
xor
inc
jecxz
je
mov
ja
add
and
ja
xor
loop
fidivrs
adc
sbb
adc
or
mov
and
lock
pop
push
jae
push
sti
notl
stc
daa
ret
or
rorb
jns
xchg
ss
out
gs
push
mov
jmp
test
cltd
lcall
test
dec
lret
push
int3
mov
je
lret
and
jp
in
sbb
inc
dec
dec
inc
testl
mov
adc
push
decl
cmp
sahf
lret
jne
lret
add
popa
test
add
sub
loop
iret
movsb
hlt
xchg
lret
in
loope
lods
jbe
shlb
adc
iret
add
push
pop
adc
dec
lahf
dec
sbb
test
xchg
jle
outsb
pusha
jmp
rcrl
into
outsl
sbb
scas
push
and
lock
lods
nop
xor
sbb
and
js
fs
xchg
dec
dec
pop
stos
mov
out
daa
cltd
mov
in
lods
adc
lods
pop
repnz
pop
cmp
rcll
jp
jb
dec
daa
dec
jmp
sub
fs
and
stos
leave
or
fisubrs
ret
mov
mov
xchg
imul
mul
clc
in
adcl
pop
adc
out
bound
hlt
push
imull
inc
xor
mov
pop
jmp
mov
out
pusha
std
mov
adc
and
ret
xor
sub
dec
mov
rclb
popf
stc
or
jne
cli
ljmp
repnz
out
in
mov
jnp
out
pop
adc
movsl
or
cmp
ljmp
out
ret
jnp
mov
push
ret
and
stos
mov
test
scas
mov
adc
adc
jge
jae
or
mov
test
dec
leave
jnp
fstl
or
jns
pop
fdiv
mov
jp
stos
gs
aam
ljmp
inc
push
cmp
cmp
sahf
sbb
adc
push
xchg
fucomp
cltd
lds
es
lds
adc
out
inc
mov
ret
incb
inc
inc
xorl
add
xchg
mov
pop
mov
jo
xor
or
in
jge
nop
mov
xor
data16
bound
and
js
stos
test
imul
sbb
loopne
loopne
aas
and
test
out
stc
mov
sub
or
bound
lods
xchg
xor
test
cwtl
xor
pop
jge
mov
xor
and
mov
xchg
sub
or
xchg
xor
movsl
cmp
mov
imul
jge
roll
filds
cmpb
loop
lahf
imul
pop
jle
sbb
cmp
in
inc
xchg
mov
or
cmp
arpl
push
das
das
mov
js
dec
inc
adc
nop
adc
cmc
mov
movsl
fcmove
mov
mov
repz
sarl
shl
fdivrs
pusha
mov
sub
flds
fnstcw
lret
jg
gs
mov
mov
test
mov
jnp
add
in
cmp
loop
push
jb
sbb
mov
mov
inc
cmp
dec
inc
lds
shl
and
sub
and
mov
mov
stc
int3
cmp
ret
iret
test
or
imul
pop
mov
in
les
mov
mov
std
and
fsubrs
imul
sub
cwtl
mov
popf
imul
push
roll
insl
insb
in
pop
mov
lock
inc
into
xor
add
jbe
shrl
sbb
inc
jb
data16
jge
pop
icebp
jb
scas
mov
pushf
dec
insb
lods
aas
cmp
push
movsl
aad
into
cmp
xor
mov
pop
dec
push
or
insl
movsb
shl
cli
pop
xchg
pop
arpl
rorb
lds
and
divl
cmp
pushf
cmp
dec
mov
mov
inc
out
cmp
rorb
pop
jecxz
