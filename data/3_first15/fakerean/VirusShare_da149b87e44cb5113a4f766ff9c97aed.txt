sbb
add
mov
loop
mov
out
out
aas
enter
xor
adc
das
loopne
out
ret
sbb
outsl
xor
push
cli
aam
cmp
scas
xorb
shl
jbe
sti
dec
inc
popf
scas
push
xchg
adc
adc
mov
imul
jae
xor
sub
sbb
push
push
dec
jle
sbb
in
data16
dec
in
ljmp
aad
mov
rep
push
mov
out
pop
scas
ds
and
or
das
adc
outsl
push
mov
cmp
fdivrs
jnp
stos
pusha
adc
sbb
aad
pop
aaa
push
xchg
push
rol
inc
mov
xor
xchg
push
movsb
js
imul
mov
push
push
lret
sbb
insb
adcl
cmp
scas
xchg
cmp
push
rcll
jmp
adc
dec
or
call
mov
pop
andb
loopne
mov
cld
mov
push
stc
add
movb
xor
stos
xor
jb
push
lods
push
dec
stc
add
jbe
outsl
mov
repnz
push
or
loopne
std
lock
mul
movsl
mov
stos
imul
dec
xchg
xor
jge
cwtl
dec
cwtl
fadd
pop
pop
cltd
xchg
stos
ret
imul
jns
inc
sub
push
fstl
call
push
or
sbb
out
shll
int3
add
push
iret
insb
fs
icebp
imul
call
sbb
arpl
test
jo
cmc
add
dec
inc
stc
popl
or
mov
mov
cmp
xlat
and
pop
in
sub
jnp
mov
popf
jnp
push
sub
push
inc
fisttps
into
loop
jge
std
cmpb
xchg
loopne
and
pop
insb
sahf
pop
stos
sbb
vcvttss2si
cmp
sub
cli
mov
sbb
pop
sub
iret
sti
mov
iret
xor
out
imul
popf
xor
lahf
cmpsl
cmp
out
xchg
add
packssdw
inc
push
in
xchg
adc
out
mov
push
addr16
pop
aaa
scas
clc
scas
insl
add
data16
cmpsl
xor
dec
adc
mov
inc
inc
mov
js
test
adc
push
pop
dec
test
pop
imul
mov
lret
scas
adc
test
ljmp
in
sbbb
bound
xor
mov
scas
dec
adc
jb
cs
mull
dec
xchg
cs
adc
ret
mov
sub
cs
inc
push
sbb
test
repz
dec
mov
push
sti
xor
flds
inc
scas
lret
leave
test
mov
outsl
mov
add
and
test
jne
test
fimull
daa
mov
fldenv
orl
insb
lahf
gs
pop
fcmovnb
mov
pop
add
outsb
lea
lds
mov
push
or
mov
add
pushf
call
lods
xor
xchg
cmp
enter
scas
pop
dec
cmc
call
inc
fidivrs
mov
clc
pop
sub
sub
dec
aam
das
sarb
or
gs
loop
aas
js
sarl
hlt
cli
add
mov
add
imul
xchg
add
sbb
ds
dec
pop
aad
mov
push
xchg
pop
stc
mov
add
push
xchg
push
cs
pushf
mulps
cli
in
xchg
test
inc
mov
jne
cmp
jge
sbbl
and
test
xchg
xor
sbb
das
ss
roll
pop
push
jnp
push
cmp
push
sub
movsl
xchg
int
fistpll
mov
dec
xor
filds
sbb
and
mov
add
xor
and
push
mov
xor
sbb
xor
inc
mov
outsb
xor
lret
leave
insl
inc
punpckldq
lcall
mov
ds
xor
test
stos
jl
mov
or
pop
call
or
lea
pop
jecxz
rclb
rorb
pop
ss
scas
lds
push
and
fstps
mov
jbe
lret
loope
add
push
repz
mov
loop
mov
push
mov
pushf
rclb
cmp
mov
lcall
sbb
mov
popf
cmp
scas
icebp
outsb
mov
inc
sub
es
sub
sahf
xchg
xchg
xchg
sar
dec
rcrl
mov
jle
mov
lea
inc
pop
xchg
inc
push
test
pop
jae
push
sbb
adc
push
mov
cli
in
cld
neg
ret
fiadds
or
fwait
aam
iret
dec
scas
xor
stc
xchg
cmpsl
mov
cmc
data16
cli
sbb
inc
movsl
adcb
mov
dec
xchg
aam
push
or
and
inc
mov
aaa
mov
cmp
sub
sub
repz
push
and
into
cld
jb
scas
jbe
adc
jmp
or
iret
std
mov
mov
cs
shll
add
xchg
dec
rcrl
daa
in
out
stc
inc
xor
push
sbb
jne
sahf
popf
dec
mov
mov
ret
pop
sub
test
mov
adc
mov
xor
xor
mov
movsl
fs
addb
sbb
adc
push
sbb
stos
pop
mov
dec
xor
addr16
push
jmp
cwtl
js
xor
test
add
lret
mov
jo
scas
pushf
xchg
out
push
push
int
xchg
cld
add
push
push
jp
mov
cwtl
jecxz
in
inc
mov
and
es
mov
ljmp
push
dec
jbe
sub
pop
dec
lock
inc
push
lds
fcompl
add
mov
pop
lea
dec
sbb
push
fcoms
or
outsl
inc
dec
sub
pop
lret
add
xor
lret
clc
ret
fisttps
test
xor
adcb
aad
cmp
stc
lret
sub
stos
jno
rcrb
sarb
cltd
pushw
jo
das
jl
ljmp
sarl
inc
out
adc
inc
sbb
cmp
iret
out
in
fs
xor
adc
fcmovnb
add
sbb
lcall
aaa
sbb
stos
cld
fdivs
out
push
jp
pop
dec
fs
mov
add
push
test
ss
clc
xor
sti
dec
push
lcall
pop
loopne
and
jae
add
ss
sbb
inc
sub
cmp
jo
pop
dec
sarb
andl
pop
push
sbb
int3
stos
popa
lods
inc
jl
cmp
nop
std
fldt
inc
mov
pop
add
aam
sub
out
cmp
mov
imul
stc
add
mov
cmp
cmp
mov
gs
ret
lods
repnz
sarb
pop
fadds
lock
add
cmpsl
negb
push
or
xchg
test
les
pushf
push
add
in
subb
mov
dec
int
bound
es
dec
pushf
cmp
test
lcall
adc
frstor
or
fs
sub
sti
xchg
xchg
sbb
or
mov
push
cwtl
ds
inc
dec
xor
push
lcall
shlb
pop
add
stos
repnz
jnp
mov
loopne
sbb
mov
inc
subb
punpckldq
add
cmp
pop
addr16
lret
xchg
add
xorb
out
sbb
mov
lret
push
add
mov
pop
jp
lret
das
push
adc
stos
ret
cmpsl
jae
mov
push
fs
xor
and
or
jg
xchg
imul
loope
push
lock
and
out
sub
out
pusha
xchg
movsl
adc
jo
sub
out
mov
sti
ret
dec
aad
popa
addr16
xchg
out
int3
enter
push
inc
jmp
enter
test
test
loop
std
lret
jl
jge
push
jo
les
xorl
outsb
dec
icebp
stos
imul
lcall
stos
cli
das
pop
mov
fwait
push
je
lret
adc
xchg
nop
nop
daa
leave
mov
dec
cmpl
sub
fidivrl
ja
imul
dec
dec
cli
inc
or
pop
pop
xchg
mov
or
dec
orb
xchg
cmpsl
mov
or
mov
mov
cmpsb
ds
add
inc
loope
or
adc
mov
js
sbb
mov
test
ljmp
cmp
mov
adc
and
call
xchg
mov
pop
xchg
push
mov
ss
cwtl
pop
inc
push
mov
test
cmp
inc
or
fidivrl
ds
testl
mov
pop
jp
das
mov
xor
ja
mov
and
mov
sbb
add
out
out
inc
testl
jmp
add
mov
pop
xchg
ficoml
sarl
scas
jle
in
mov
push
scas
mov
fstpl
mov
movb
sti
mov
das
xchg
xor
imul
jo
jge
dec
cmpsb
filds
push
test
subb
pop
mov
push
lret
out
aad
mov
mov
nop
push
inc
jno
pop
imul
pushf
ss
ja
or
mov
fs
in
mov
out
fisubl
pop
or
lret
or
stos
out
roll
add
lods
test
jns
sbb
or
out
push
std
pushw
out
leave
cmpsb
pop
lcall
mov
mov
popf
rcrb
push
push
int3
int3
inc
hlt
test
das
and
sbb
fsubr
cmc
cmc
mov
enter
aaa
loop
mov
test
jle
mov
popf
push
and
loopne
dec
movsb
je
cmp
lret
jb
sub
sub
xlat
cmpsb
xchg
xchg
mov
jnp
std
iret
jg
test
outsl
ss
lods
lds
out
sbb
arpl
and
sbb
sbbb
adc
xor
into
push
mov
cwtl
push
lods
mov
imul
push
aam
pop
lret
sbb
cmp
or
in
add
shll
dec
aas
xchg
push
dec
pop
lock
cmp
jb
xor
std
dec
cwtl
mov
inc
lret
cmp
or
mov
mov
inc
fisubrs
notl
icebp
mov
sbb
and
ljmp
popa
push
push
stc
rcll
mov
int3
push
mov
sbbb
movsl
insb
dec
loope
je
add
sub
inc
cmp
jae
jl
sarb
xchg
mov
add
mov
mov
push
outsb
mov
add
aaa
xor
popa
and
jmp
cli
js
lahf
cmc
mov
jecxz
dec
xchg
ss
sbb
inc
sub
and
mov
fisttpl
sbb
daa
fs
adc
arpl
xor
dec
dec
jae
xchg
fst
and
mov
cmp
les
mov
stos
scas
inc
push
test
mov
push
ds
test
jmp
jp
jb
cltd
mov
jge
subb
mov
jo
jecxz
pop
pop
pop
in
pop
ret
mov
fidivl
or
mov
xchg
mov
mov
lcall
mov
std
dec
jns
sbb
das
xorb
push
add
cmp
or
movsb
adc
pop
lret
push
sahf
movsb
and
loop
gs
push
fiadds
pop
xor
xor
insl
orl
jb
jne
mov
jno
mov
movsb
out
inc
mov
sbb
sub
mov
bound
jp
scas
xor
popa
cmp
call
imul
dec
dec
out
xor
rol
cwtl
jmp
dec
xor
sub
sahf
aas
sbb
imul
cmp
jmp
jb
jge
jmp
lahf
pop
ljmp
out
out
out
mov
dec
int
push
lods
mov
jo
js
mov
sbb
loopne
jmp
xor
mov
xor
mov
sub
ja
pusha
inc
popl
sub
mov
jle
mov
ljmp
push
data16
mov
aad
jne
push
adc
lcall
xlat
pop
enter
mov
cmp
popf
mov
loopne
lods
sbb
or
inc
xchg
popf
aam
aaa
daa
out
js
push
or
repz
push
fcomps
clc
fnstcw
loopne
xchg
lods
inc
mov
jo
mov
in
ret
shll
mov
stc
call
pop
outsl
push
aam
das
add
pushf
les
enter
and
and
pop
cs
mov
inc
jecxz
fildll
push
lods
pop
and
je
ret
cmp
pop
mov
and
push
mov
push
hlt
test
mov
dec
jbe
or
out
outsb
enter
push
in
stc
das
in
ds
cli
xor
mov
cmp
xchg
push
sarl
inc
and
push
xchg
fbld
test
subl
xor
and
cld
jne
mov
ja
push
decb
jl
insb
ret
gs
jg
cmp
inc
dec
xchg
push
cli
jmp
fs
decl
jg
call
mov
fdivl
lret
mov
jle
xchg
sarb
cli
mov
mov
jns
jb
dec
sub
inc
std
mov
xor
push
outsb
aam
jb
loop
inc
lods
int3
test
fisubrs
call
cmpsb
jp
std
mov
repz
jo
push
jge
loopne
inc
pusha
mov
and
inc
adc
repnz
das
adc
loop
outsb
out
ds
mov
loop
add
sub
jge
bound
ljmp
aad
add
push
lret
mov
mov
mov
lods
das
out
rorb
cmp
arpl
add
or
repnz
sbbb
loop
iret
out
lods
xor
leave
mov
adc
or
dec
push
mov
bound
cmpsl
mov
aaa
mov
xlat
adc
inc
lret
fisttps
out
in
lods
shlb
push
shrb
scas
test
sbb
sarl
pusha
fstps
adc
push
stos
insl
jp
std
call
sub
mov
shlb
popa
jnp
xchg
sbb
adc
sbb
push
jp
fimuls
fsubr
sbb
xchg
and
sbb
sbb
cmp
pop
push
sbb
dec
lock
cmp
aas
mov
jecxz
repz
jns
sbb
sbb
scas
mov
push
mov
adc
ja
cmp
enter
mov
and
repnz
mov
andb
stos
mov
cmpsl
lea
sbb
lret
loope
jb
and
cmpsb
rcrb
jns
lods
dec
mov
mov
adc
jge
xchg
fucomip
jg
fildll
aas
lods
and
jecxz
addr16
dec
mov
push
in
adc
adc
ret
jae
and
test
sbb
mov
fildll
shlb
int3
aaa
ja
jo
pop
loopne
mov
mov
pop
mov
add
mov
daa
sbb
or
or
inc
or
or
mov
ror
push
ret
pop
inc
inc
insb
inc
std
loopne
hlt
jecxz
sbb
fldt
push
mov
xor
sub
cmp
mov
sahf
push
jae
std
ss
daa
cld
outsb
std
inc
push
xchg
xchg
lret
jmp
pop
dec
repz
ret
loope
test
std
pop
insl
sub
mulb
mov
or
insl
js
inc
push
cmpsl
mov
das
add
inc
std
shlb
add
pop
jbe
jb
and
lret
bound
cmp
or
push
divl
icebp
sub
push
inc
pushf
shl
pop
add
sbbb
or
push
cmp
movsb
imul
dec
mov
stos
sbb
xchg
adc
mov
cmpsl
loop
lret
je
jp
pop
fistpl
enter
out
jb
pop
mov
lcall
sahf
arpl
aaa
mov
imul
dec
in
jl
aaa
add
scas
cld
mov
cmp
imul
push
mov
xorl
mov
xor
mov
xor
push
imul
jbe
fildll
cmc
sub
popl
xchg
sbb
stos
repnz
movsb
sti
add
data16
mov
sub
jmp
push
fcomp
mov
cmp
pop
lock
jge
dec
push
stos
cltd
dec
jbe
out
xchg
movsb
adc
test
jns
inc
aas
addr16
add
push
fwait
pushf
ja
lea
jle
jecxz
mov
lahf
int
jnp
loop
sbb
mov
cmp
sti
cld
xchg
lods
outsl
xchg
mov
out
push
test
jne
adc
adc
mov
scas
stos
cmpsb
sarb
dec
popa
pop
xor
add
push
and
xchg
inc
mov
mov
mov
adc
test
je
in
cmp
imul
inc
and
cmp
lods
jnp
sahf
and
xor
push
scas
aad
mov
inc
xor
stos
push
movsb
std
jmp
pop
test
mov
sub
ss
push
jne
cwtl
idivl
cwtl
popa
mov
call
mov
in
in
mov
cmp
movsl
ret
add
repz
ret
cmc
mov
push
adc
fs
out
adc
pop
or
and
jnp
mov
or
negb
jecxz
dec
das
int3
into
icebp
dec
fcom
mov
mov
pop
sub
jmp
adc
shl
dec
mov
mov
ja
jecxz
fildl
dec
inc
in
inc
shr
cmp
daa
scas
push
mov
cmp
in
in
add
dec
in
mov
inc
jns
ret
aas
push
dec
arpl
xor
cli
push
jno
repnz
mov
inc
pop
mov
test
scas
cwtl
rcrl
in
jmp
js
rcr
cmp
mov
xor
adcl
push
push
movsl
mov
insl
mov
outsb
xor
push
jg
mov
xchg
xlat
jb
shll
rcll
repz
dec
rcl
cld
icebp
outsl
pop
cmp
popf
cmp
inc
dec
jp
xor
mov
mov
test
xchg
mov
test
ret
addr16
xchg
push
pop
fisubrl
add
insl
cmpb
in
jb
pop
loop
mov
fsub
nop
scas
push
repnz
movsb
push
xchg
lods
movsl
data16
bound
adc
and
call
jo
xchg
mov
inc
or
stos
arpl
lds
push
lcall
pop
insb
aad
mov
pushf
fdivr
out
mov
aaa
xor
shrl
add
adc
mov
sub
push
lds
shrb
lret
mov
jne
ret
lods
cmpsb
cmp
stc
xchg
xchg
ret
add
leave
scas
ret
inc
and
rclb
jecxz
mov
mov
mov
sbb
aas
xchg
sub
fs
je
sbb
dec
mov
or
dec
xor
sub
xchg
mov
jle
test
aad
imul
in
lods
or
adc
test
jp
xor
fnstenv
ljmp
cmp
scas
jbe
xchg
pop
sub
cwtl
cmp
push
je
das
test
pop
add
mov
aas
inc
adc
sbb
sahf
pop
push
lea
jg
sub
shll
jne
sub
or
std
imul
sbb
pusha
or
mov
xchg
push
inc
stc
out
outsb
sahf
jb
sbb
ret
pop
xor
add
jp
ja
in
outsl
xor
pushf
mov
mov
mov
xor
cmpsl
ret
dec
mov
sbb
test
cs
stos
fadd
mov
mov
xchg
or
xchg
mov
xlat
mov
insb
push
enter
sub
scas
xchg
addr16
jge
icebp
addr16
lods
lods
lea
push
pop
mov
rcrl
dec
mov
jge
loope
mov
stos
fildl
mulb
pop
aad
repz
leave
in
dec
inc
pop
ret
enter
fdivs
mov
out
outsb
out
loop
cs
icebp
or
leave
cmp
movsb
into
shl
add
mov
cmp
scas
test
les
sbb
ficoms
nop
stc
popf
dec
mov
xchg
clc
pop
pop
fistps
mov
jl
jno
push
pusha
cli
xchg
adc
test
adc
xchg
push
xchg
xchg
roll
repz
shrl
scas
xor
in
jbe
out
sub
mov
popf
insb
dec
xchg
iret
dec
ljmp
push
xlat
mov
add
or
dec
dec
dec
out
in
movsb
daa
xchg
and
xor
inc
xor
das
pop
adc
jg
cmp
xorb
sahf
ss
pop
pop
cmp
xchg
nop
push
rep
fstps
jnp
xor
mov
push
fcoms
fdivp
testb
das
and
fs
jb
lcall
and
loope
xchg
cld
adc
repz
ljmp
movsb
shll
dec
repnz
adc
ja
gs
or
xor
cwtl
in
stos
lock
sbb
cmpsb
inc
nop
or
inc
xchg
xorb
iret
mov
jl
cmpsl
inc
loop
add
and
sbb
push
xchg
pushl
fs
inc
sbb
loop
mov
xorl
mov
jae
jno
pop
cmpb
xorb
xor
inc
jl
and
inc
js
jg
cmp
test
outsl
inc
push
shr
sbb
fs
arpl
sbb
pop
mov
and
cli
jmp
es
inc
mov
push
fucomip
fistpll
iret
enter
mov
stc
inc
ficompl
push
cs
pop
cld
fxch
mov
das
lahf
add
mov
shll
test
or
inc
lea
sbb
in
mov
sbb
nop
push
jae
xor
mov
divl
mov
add
inc
daa
pop
push
mov
popf
cmpsb
pop
or
shlb
adc
and
xchg
idivb
jp
idivb
sarl
fabs
jo
daa
repnz
out
faddp
ret
pop
sbb
test
xchg
dec
sbb
addr16
jge
sbbl
adc
lcall
clc
movsb
fidivl
mov
sarl
jg
xor
push
test
mov
sub
jb
xchg
rcr
stc
idivl
mov
test
lods
mov
xchg
mov
addr16
in
and
insb
test
pop
das
mov
add
sbb
cmpsl
jne
pusha
pop
ret
scas
mov
ds
push
add
push
mov
lds
scas
nop
lock
add
add
inc
sub
mov
sub
pop
inc
repnz
jbe
sbb
adc
movaps
mov
dec
cs
sti
pop
xchg
mov
jg
call
pop
add
xor
stos
xor
jae
xchg
sub
or
xchg
inc
mov
outsb
lcall
cmpl
push
or
insb
jle
std
mov
stos
popf
and
outsl
call
div
sub
cs
fs
cmc
inc
pushf
xchg
mov
mov
mov
pop
mov
jo
cli
movsb
mov
mov
ret
inc
lods
adc
xlat
push
call
mov
movsb
ret
fisttpll
push
lcall
pop
lahf
pop
mov
test
fdivs
jo
push
movsb
xchg
push
int
cmp
mov
gs
cld
cmp
jmp
add
sbb
daa
sbb
pop
mov
loope
jno
push
ret
fldt
pop
pop
inc
ljmp
xor
push
dec
xor
repnz
push
roll
mov
dec
fiadds
arpl
and
mov
push
test
in
inc
pushf
mov
add
cmpsl
into
data16
mov
mov
decl
in
out
lcall
loop
jmp
into
sub
cli
orb
jecxz
sbb
or
or
mov
sub
insl
leave
jbe
and
cmc
adc
or
sbb
dec
insb
lret
cmpl
arpl
cs
insb
pop
outsb
lret
dec
xlat
lods
nop
add
fmuls
cmp
insl
dec
shrl
add
pop
jne
or
mov
xor
add
mov
push
or
nop
adc
aad
stc
insb
dec
xorl
and
lcall
in
mov
sbb
xor
outsl
sub
inc
lret
and
mov
push
and
mov
xchg
sbb
mov
dec
aam
jae
jne
je,pn
or
rol
scas
test
sbb
cmpsl
mov
loopne
push
data16
dec
adc
dec
sub
xchg
mov
pop
lock
stc
scas
add
mov
repnz
aam
pop
insb
sbb
pop
or
xor
cmp
jbe
inc
cmpsb
and
insb
and
orb
gs
jb
into
aad
rcll
add
sbb
and
sti
adc
sbb
cld
fcomip
gs
movsb
loop
js
call
jns
js
pop
adc
or
rclb
fs
pop
jns
int3
inc
pushf
lock
cmp
repnz
jae
sub
xor
stc
in
add
xlat
shl
inc
dec
jb
testb
jb
imul
and
mov
cld
lea
and
aas
sar
mov
mov
xchg
pop
jno
lret
or
xor
lods
or
scas
jecxz
mov
rcrb
push
ds
movsb
push
enter
fcomp
mov
push
xchg
inc
push
push
mov
insl
dec
push
ret
cwtl
iret
xorb
mov
pop
call
push
and
testl
fiadds
ret
jge
cmpsb
pop
ljmp
sahf
gs
outsl
cmp
mov
xchg
out
cmp
dec
adc
in
inc
repz
mov
lcall
enter
cltd
mov
shlb
sahf
int
gs
rcrl
push
sbb
and
mov
outsb
je
add
dec
mov
aaa
and
xlat
aad
push
ss
loopne
test
cwtl
mov
inc
std
xor
sahf
cmp
jae
sub
or
dec
daa
jb
push
and
push
lods
stos
outsb
jge
xor
pop
roll
inc
push
inc
in
shlb
push
adc
push
dec
xchg
fnstsw
mov
jl
pop
outsl
xor
add
popf
xor
aad
cmpsl
mov
xor
mov
shlb
push
testl
jge
pop
sub
dec
scas
mov
pop
mov
repz
test
sahf
or
and
and
into
cmpsl
data16
movsl
lods
cmp
and
adc
pop
in
or
mov
daa
jl
adc
add
mov
aam
andl
sahf
cmp
cmc
jmp
sub
fmuls
dec
into
out
ss
stos
orl
adc
mov
mov
loopne
dec
cmp
jno
cmp
xor
pop
out
aas
fdivrl
xor
fisubrl
in
xchg
dec
adc
dec
inc
jb
pop
xor
and
mov
xchg
enter
push
fadd
push
inc
cmc
packsswb
sub
or
scas
push
mov
insl
gs
das
cli
popf
scas
pop
stc
cmp
mov
mov
or
into
das
stc
lea
enter
xor
jg
pushf
fcoml
std
xchg
mov
in
out
add
movaps
mov
push
scas
pop
push
mov
and
lahf
add
mov
sub
in
test
lock
ja
int
cmp
repnz
mov
dec
arpl
in
scas
add
or
sub
in
push
adcb
aaa
pusha
call
mov
sub
pop
fs
fbstp
pushf
scas
in
inc
stos
aad
mov
sub
fiadds
jecxz
lock
mov
nop
add
jne
sub
pop
sbb
cmpsl
es
call
fstp
add
jle
pop
fstpl
sbb
insb
jne
cltd
sahf
and
sarb
cs
lcall
setae
lahf
js
test
int
mov
fs
into
les
add
fcmovnb
xor
sbb
arpl
dec
xlat
pop
fnsave
outsl
out
jo
and
enter
pop
pop
sub
push
add
outsb
cmp
jmp
jno
clc
enter
jg
rclb
pop
mov
add
roll
in
push
sub
dec
adc
push
inc
pop
mov
testl
add
xlat
lret
dec
mov
movsb
cwtl
repz
xlat
movsl
out
aam
sti
repz
add
and
je
rorl
cld
adc
or
lock
imul
push
jo
sbb
jns
adc
jge
pop
mov
push
mov
imul
and
xor
xor
xchg
test
das
jg
cltd
xor
cmp
insl
mov
push
fsubs
push
cli
sbb
scas
mov
inc
fidivrl
clc
iret
stos
nop
adc
into
arpl
pop
sbb
xchg
out
sbb
push
dec
mov
pushf
mov
adc
xchg
loop
adc
mov
dec
sbb
test
mov
jno
insl
push
sbb
inc
push
int
push
sub
mov
lret
inc
out
mov
push
mull
adc
in
pop
lret
jno
jle
inc
cmp
imul
sub
push
sub
andl
aad
test
add
mov
test
inc
dec
aad
out
fstpl
pop
sbb
lret
sbb
or
push
jecxz
xor
xchg
imul
lds
roll
loop
push
aam
dec
dec
and
push
mov
testb
sbb
pushw
sub
imul
and
fisubs
out
pushl
pop
dec
pushf
pushf
nop
cwtl
lret
enter
mov
fsubr
pop
repnz
fs
xchg
mov
mov
repnz
call
jle
ljmp
out
ljmp
mov
into
mov
jnp
dec
mov
xor
out
in
jne
imul
dec
lods
rclb
dec
mov
add
and
popa
push
ret
hlt
or
dec
scas
hlt
sub
mov
xchg
cmpsb
pusha
adc
add
xchg
or
aaa
fnsave
cmpl
out
add
jno
push
jbe
mov
repnz
aam
push
xchg
jbe
scas
xchg
xor
test
js
imul
inc
sbb
adc
sbb
ss
int3
js
push
xor
pop
mov
cld
mov
mov
pop
popa
push
mov
sbbb
popf
insb
iret
int3
xor
and
test
shll
mov
cmp
es
xor
or
outsb
xchg
mov
inc
fwait
in
adc
movsb
js
jmp
xor
mov
out
xchg
and
jp
mov
ja
call
pushf
mov
cmp
adcl
cli
jle
insw
xchg
aaa
jne
test
sub
mov
lcall
das
out
or
pop
popa
sarl
call
fldlg2
repz
xchg
int
pop
push
mov
push
inc
in
mov
ret
xor
arpl
pop
lret
xor
adc
incb
cmp
into
sahf
pop
clc
jp
in
nop
lds
mov
jnp
loopne
pop
mov
jnp
test
ljmp
outsl
or
sub
stos
mov
cli
mov
inc
dec
jo
andl
rcrl
sbb
dec
cmp
ljmp
mov
imul
push
arpl
mov
js
loope
jb
je
adc
xlat
sub
repz
cmp
outsb
rcll
jns
pop
lcall
xor
ja
xchg
push
sbb
inc
xor
dec
xchg
out
mov
pop
xor
sub
cs
and
je
push
mov
je
mov
loopne
loop
ret
les
std
cmp
sub
mov
sti
arpl
scas
jle
rcll
and
inc
movsb
dec
cmpsb
scas
not
addps
pop
enter
pop
push
push
add
in
rcll
xchg
repnz
pop
or
dec
push
testb
lock
jbe
scas
iret
insb
icebp
mov
mov
push
adc
mov
inc
xchg
mov
imul
leave
dec
test
dec
jmp
repnz
mov
mov
mov
add
int
ljmp
daa
lret
cli
xchg
jl
aam
mov
or
es
inc
add
icebp
rcpps
ja
push
aas
addr16
out
xchg
push
adc
pop
mov
pop
dec
inc
test
loope
mov
dec
pop
arpl
jl
cli
push
cmp
sub
sbb
in
fcmovnu
test
lcall
pop
out
push
int
pop
shll
jp
sbbl
cmp
xor
aaa
and
in
adc
sbb
dec
call
xor
push
fcomps
sbb
and
xor
cmp
int3
imul
inc
xchg
cwtl
mov
scas
inc
dec
orl
push
data16
mov
fimull
out
outsb
enter
cli
push
inc
pop
sub
lock
movsb
movsl
insl
roll
bound
cli
xor
jnp
inc
push
lock
pop
push
pop
hlt
test
jo
test
lret
pushf
xor
sub
xlat
lahf
inc
jmp
stos
sbb
inc
aad
sub
scas
and
jbe
sub
jae
lods
stos
in
js
cmpl
mov
outsl
aaa
and
shrl
repz
inc
stos
cmp
xchg
sub
pop
out
mov
leave
aas
sub
or
mov
notb
hlt
js
or
cmc
dec
sbb
cmp
lods
mov
adc
rorb
and
dec
insl
fisttpl
adc
outsl
xor
insb
std
imul
mov
sub
mov
cli
and
jmp
jno
shlb
stos
jnp
adc
adc
loope
hlt
fcmove
test
shll
jb
sahf
shll
in
sbbb
in
push
adc
in
pop
push
bnd
aaa
xchg
push
nop
bound
and
dec
shl
stos
aam
test
and
mov
push
xchg
inc
ljmp
mov
xchg
bound
mov
outsb
jge
fs
sub
jae
loopne
in
test
out
and
add
push
stc
fidivl
mov
adcl
xchg
cmp
pusha
mov
xor
mov
mov
xor
je
sub
adc
rclb
mov
hlt
or
cmp
into
cmp
aam
cwtl
fmull
sub
jae
sbb
adc
pop
jg
or
xchg
cli
nop
aaa
adc
xor
and
jnp
imul
dec
xchg
lret
sbb
dec
fmull
pop
or
jnp
sti
fldl2e
or
sub
mov
aam
dec
inc
repz
pop
stos
and
xor
out
fadds
std
fsts
lret
dec
dec
or
cmc
mov
fmulp
and
jae
sbb
jl
loope
jbe
andb
jnp
shl
jl
push
jge
pop
or
cmp
and
mov
das
push
pop
jp
mov
repnz
inc
inc
pop
pcmpeqb
lahf
jmp
xor
fdivrs
pop
lds
add
cmpsb
xchg
sti
xchg
push
dec
fidivrl
adc
mov
jg
pusha
add
cmp
notb
mov
mov
pop
push
or
mov
mov
jnp,pt
mov
sub
mov
lods
js
jno
in
negb
mov
or
pop
or
fstpl
iret
ffree
nop
es
in
mov
pop
sti
ljmp
out
xchg
and
push
ret
mov
mov
inc
jge
outsl
sahf
pusha
movsb
mov
enter
adc
add
call
jb
sti
mov
rol
cmp
push
les
pop
inc
jno
cltd
mov
cmp
mov
xchg
xchg
repnz
mov
cltd
and
inc
push
lods
dec
gs
std
in
in
in
popf
imul
cltd
in
push
push
std
leave
mov
pushf
in
jne
adc
cltd
and
mov
daa
pop
pop
adc
ljmp
cmpsb
fidivl
inc
fadd
fdivr
adc
push
jp
sti
inc
and
add
jns
stc
cmpl
sub
xchg
cmc
inc
jne
mov
push
push
inc
add
outsb
sbb
int3
jae
jno
das
push
inc
xchg
cmp
mov
xor
insl
push
fisttpl
fists
mov
std
sbb
mov
fsubrl
shlb
lahf
add
stc
jge
adc
pop
insl
repz
push
pop
push
loopne
lret
stos
out
dec
xchg
movsb
mov
imul
fdivrl
xchg
sahf
imul
pop
mov
jl
je
repnz
popf
lret
inc
sub
out
jmp
fisubl
adc
sub
stos
pop
mov
inc
call
fsubrs
mov
scas
rcll
es
or
imul
jle
stos
bound
pop
pop
dec
ret
mov
add
jns
xor
dec
pop
gs
xor
dec
mov
lcall
mov
fwait
push
adc
js
sub
sub
cmpsb
or
mov
cld
adcb
jg
xchg
addr16
adc
dec
jecxz
out
stc
call
outsb
ljmp
push
and
sub
sahf
mov
lcall
call
fdivrs
sar
repnz
cmp
mov
mov
dec
lods
xchg
mov
int3
jmp
push
push
cltd
movb
cmp
popa
pop
pop
dec
test
stos
pop
pop
jne
ss
push
mov
in
sub
shrl
loope
cmp
cmp
push
push
xor
cmp
add
sub
outsb
xchg
push
stos
decb
fwait
js
xchg
mov
push
push
xchg
test
push
add
scas
pop
std
sbb
xchg
or
imul
mov
or
push
mov
popf
fists
arpl
shl
xchg
jae
sub
or
pop
sbb
inc
sbb
sbb
pushf
adc
push
and
sub
leave
fisubl
aad
lret
or
movb
stos
ja
mov
or
inc
inc
shrb
lds
dec
in
sbb
xchg
je
add
inc
pop
xor
push
add
jg
inc
xor
cmp
push
mov
loop
jbe
xchg
inc
xchg
add
std
int3
iret
fsubrl
stc
mov
int3
pop
in
scas
and
adc
shl
lds
xchg
and
and
mov
jmp
in
xchg
jno
adc
std
scas
iret
dec
inc
lret
pop
jle
dec
popf
xchg
insl
ja
and
into
movsl
push
out
out
jg
add
out
push
push
in
add
push
shll
movsb
loope
or
arpl
lret
fimuls
xchg
int3
enter
cwtl
mov
xor
inc
pusha
jae
xor
test
scas
shlb
mov
or
jo
or
adc
and
mov
lahf
gs
repnz
jmp
movsl
jbe
in
sbb
call
add
ret
lea
mov
xor
mov
adc
lret
sbb
push
test
push
or
sbb
movsb
fwait
jo
xchg
dec
mov
mov
xchg
mov
push
add
cmp
stos
mov
rcrl
lahf
cs
stos
sub
ss
adc
icebp
xlat
bound
add
cmp
orl
jp
fcoms
outsb
push
and
pushf
pusha
adcl
and
in
inc
sbb
addr16
andl
mov
push
pop
ret
adc
mov
push
jmp
jns
push
jb
push
or
lock
and
ret
fst
xchg
cmpsl
mov
fistpll
mov
mov
in
pop
push
js
fs
fwait
shr
add
popf
jno
jae
stos
into
jbe
pushf
lock
movsb
xchg
push
stos
rorl
mov
cmp
out
adc
pop
add
leave
movzbl
or
addl
xchg
stc
pop
add
jg
xchg
or
jae
sub
mov
sbb
rep
dec
and
jmp
adc
mov
inc
loopne
out
sbb
pop
aas
mov
or
lods
out
add
push
inc
movsb
scas
in
ret
sahf
lar
adc
mov
dec
jb
call
xchg
cmp
je
ds
sarb
scas
add
mov
loopne
push
ret
shlb
repz
cmp
dec
push
insb
sub
nop
and
bnd
dec
shrb
adc
subb
jg
or
mov
mov
or
push
data16
cmp
orl
mov
xchg
das
jae
lcall
mov
fmull
push
adc
adc
cmc
bound
fsubp
loope
jns
mov
cmp
or
jns
add
xchg
jle
push
pop
adc
mov
ss
ficomps
cmc
sbb
pushf
xchg
jl
cli
ret
cmp
mov
mov
outsl
mov
mov
es
and
dec
gs
cwtl
rolb
je
mov
inc
pusha
sub
je
ret
jg
cmpl
cmp
imul
mov
sbb
fists
fnstcw
ss
xor
icebp
inc
sarl
xchg
jecxz
inc
in
popa
xchg
mov
rorb
jo
inc
hlt
adc
cltd
cli
push
negl
sbb
mov
rolb
mov
mov
inc
and
aaa
mov
and
mov
aaa
and
cwtl
push
cmp
or
mov
jge
fbld
lahf
xchg
aaa
sbb
mov
sbb
rcrl
xchg
nop
ficoml
jmp
mov
sbb
pop
sahf
push
mov
imul
scas
dec
dec
dec
shll
cmp
and
enter
xchg
and
sbb
in
inc
jmp
ds
xor
push
cmp
fucomp
repnz
dec
and
cmpsb
aam
sahf
cltd
push
ret
sbb
in
cmpsl
pop
lods
cli
add
lea
leave
inc
fs
lahf
mov
xlat
mov
sbb
mov
imul
shll
test
js
movsl
adcb
cmp
cmpsl
push
lea
ds
lahf
xor
adc
data16
aas
jmp
cmpsb
jo
aad
pop
and
xchg
mov
jp
pop
xor
insb
rorl
addb
insb
jns
mov
imul
dec
inc
mov
jbe
sub
rcl
jns
pusha
xor
lock
leave
pop
sbb
daa
stos
push
ljmp
mov
mov
data16
lods
mov
add
xchg
push
lea
push
sbb
adc
inc
lds
cli
shrb
out
inc
scas
ljmp
inc
adc
ret
inc
popa
xlat
pop
push
xchg
xor
out
outsb
lea
scas
mov
add
jo
test
mov
aaa
sub
test
repz
sbb
pop
aam
push
cmpsb
loop
repnz
repnz
int3
ret
xor
sbb
mov
pop
enter
aam
xchg
sub
insb
mov
popa
test
call
mov
in
sub
xor
cmp
pop
mov
inc
jecxz
fisubrs
in
cmpsb
add
outsb
imul
inc
pushf
jb
xchg
movsb
aad
sbb
out
fldenv
cmp
cmp
dec
call
sbb
sbb
inc
sarb
xchg
nop
mov
popa
jae
cmp
mov
cwtl
push
adcb
pop
stos
inc
push
inc
mov
fldl
inc
sub
sbb
ja
shlb
jbe
pop
je
mov
inc
iret
cs
dec
xor
aam
inc
daa
imul
pop
mov
sub
and
add
pop
pop
xchg
int3
test
rol
das
xor
mov
sub
xor
aas
pop
mov
movsl
stos
jecxz
mov
mov
adc
or
scas
add
outsb
popl
imul
pop
add
dec
cmp
cltd
lock
and
ret
enter
stos
xor
lcall
out
or
sbb
jae
addr16
notl
cmpsl
pop
dec
imul
mov
push
rorb
lahf
fidivrl
inc
jecxz
pop
jge
das
enter
mov
xchg
pop
sub
lahf
cmp
icebp
mov
xend
push
push
cmp
pop
rcll
je
lcall
lods
inc
pop
test
idivb
ja
les
mov
dec
out
adc
popf
pop
lds
daa
mov
fstl
add
lea
mov
and
inc
negl
xchg
cmp
jnp
out
xchg
xchg
repnz
inc
data16
call
jg
iret
movsb
dec
std
adc
fucom
and
push
lods
fcoms
out
mov
and
or
xchg
xchg
je
leave
jl
data16
mov
cmp
push
jb
sbb
movsl
pop
in
mov
fsubs
push
call
addr16
and
outsb
sbb
loope
into
out
stos
insb
repz
gs
rcll
rcrl
dec
xorl
adc
inc
pop
xchg
mov
mull
int
int
add
ja
rcl
xchg
repnz
dec
pop
push
mov
inc
xchg
jns
sbb
cmp
or
stc
inc
cmp
sbb
add
popf
or
cli
js
cmpsb
mov
and
imul
xchg
orb
lods
and
dec
push
test
add
jecxz
lea
aaa
sub
mov
xchg
ljmp
testb
adc
adcb
xor
mov
sbb
mov
or
mov
mov
or
xchg
lods
ds
adc
movsl
cmp
sbb
int
sbb
imul
nop
push
mov
shl
cmpsl
adc
lock
out
lds
addl
es
xchg
mov
lods
out
faddl
nop
mov
rcl
pushf
mov
std
sub
sahf
filds
sub
mov
nop
loop
xlat
mov
push
pusha
cvtpi2ps
xlat
mov
pop
pop
sub
sahf
jg
out
mov
xor
clc
fsubrs
jo
cld
xchg
xchg
push
add
xchg
mov
mov
pop
cmp
ja
test
out
mov
dec
int3
lcall
sbb
stos
test
push
sbb
and
sub
add
xchg
mov
ja
test
das
mov
jmp
and
iret
dec
out
mull
mov
mov
mov
sti
push
cmc
bound
jnp
add
in
rorb
test
add
movsb
cltd
lahf
int3
enter
lret
sbb
cmpsl
sub
mov
sbb
jo
in
lods
or
movsb
dec
sbb
repz
imul
mov
arpl
imul
sbb
movsb
fildll
pop
int3
push
inc
push
xlat
negl
mov
cmpsb
and
clc
mov
js
jmp
and
or
ret
dec
loopne
data16
scas
sub
push
mov
xor
rorl
loope
imul
stos
shrl
movsl
jnp
lcall
xor
rcrl
or
xor
mov
call
adc
and
dec
movsb
and
pop
aaa
out
ss
leave
aad
xlat
or
popf
push
mov
dec
ja
in
xor
pushf
and
lds
imul
mov
filds
imul
mov
call
std
xlat
sbb
mov
movsb
mov
lods
jbe
and
push
sti
pop
mov
mov
xchg
test
pop
stos
cmpsl
arpl
and
inc
jb
add
outsb
mov
sahf
xor
cmp
cmpsl
clc
ss
sbb
and
pop
movsb
xor
or
mov
mov
outsb
pop
pop
out
add
roll
or
xor
mov
out
jmp
mov
push
cmp
cmp
mov
adc
aas
rclb
mov
adc
pop
mov
push
fs
adcl
cmp
rcr
jae
ja
pop
shl
and
ret
arpl
or
lahf
dec
xlat
pop
imul
test
repnz
inc
mov
fsubrs
xor
fmull
fimull
loope
fucom
rcpps
mov
imul
dec
fcompl
cmpsl
push
loop
inc
fbld
jp
jge
push
sbb
dec
lods
les
or
push
dec
adc
mov
jns
dec
into
mov
call
popf
fstps
push
das
or
data16
mov
stos
mov
jae
arpl
in
jns
jmp
aad
and
sbb
mov
test
pop
aad
pusha
mov
lcall
ds
xchg
push
push
add
adc
mov
jp
rcll
cs
pop
pushf
icebp
adc
out
pop
cmp
dec
mov
into
pop
and
xlat
mov
enter
test
push
mov
sub
mov
pcmpgtd
xchg
jne
je
je
iret
leave
out
push
cmp
arpl
lcall
mov
fsubrs
mov
inc
cltd
jle
sbb
xor
sub
cmc
js
mov
mov
stc
sti
push
lret
mov
cmp
outsb
fisttpl
mov
scas
imul
testb
ret
std
scas
in
out
mov
adc
mov
pop
add
xor
in
push
lea
pop
add
mov
dec
popa
xor
jg
xchg
pop
sbb
and
test
fnsave
inc
sbb
mov
adc
fsub
fimuls
xchg
adc
mov
imul
pop
sub
pop
dec
xchg
xchg
icebp
in
jns
add
inc
sub
mov
cmp
sub
sub
into
lock
xchg
mov
mov
and
lcall
shll
inc
insl
and
mov
pop
sbb
push
aas
scas
mov
cwtl
or
mov
mov
mov
pop
lock
pop
jnp
cmp
sti
test
inc
mov
xchg
leave
mov
sbb
jae
lock
shrl
xchg
or
adc
push
lock
das
adcb
add
mov
jecxz
pop
mov
icebp
sbb
inc
stos
adc
dec
aad
push
mov
loopne
and
pop
push
jno
cmp
xchg
das
aas
js
std
fs
mov
roll
in
jo,pn
cmp
ljmp
xchg
insl
pop
inc
in
or
push
sub
in
test
ds
jb
fsubrp
nop
sbb
imul
stos
push
repz
mov
pop
xor
pop
add
lahf
mov
mov
push
mov
mov
stc
inc
mov
sub
pop
jmp
ret
clc
mov
ss
sarl
js
xchg
cmp
push
push
inc
call
pop
rcll
push
jmp
sub
and
mov
xchg
gs
inc
js
and
std
cld
pushf
sbb
clc
data16
and
pop
data16
lods
add
lea
je
xchg
pusha
push
xchg
orb
inc
popf
fld
or
bound
fucomip
push
push
loope
mov
jecxz
add
or
mov
out
and
jnp
xchg
loop
outsb
pop
int3
push
lods
xchg
lahf
iret
mov
je
xlat
mov
std
push
xchg
mov
add
or
mov
xchg
sbbb
cmp
inc
dec
add
cmpsb
fcoms
dec
icebp
mov
clc
ljmp
ljmp
imul
ss
push
mov
call
in
repnz
loopne
jbe
push
inc
sbb
jb
sbb
mov
jle
sbb
out
adc
push
subl
ret
ret
xor
pop
jbe
aas
and
pop
cmc
jae
std
mov
pop
xchg
mov
cld
stc
stc
adc
inc
dec
jb
sub
ljmp
dec
sbb
xor
into
popa
fdivp
lret
xor
mov
js
mov
pop
mov
popf
out
popf
sarl
repnz
mov
cmpsl
jl
add
mov
aam
lods
and
test
inc
out
aas
xchg
fstp
orl
outsl
cmp
xor
xor
shrb
scas
sbb
adc
dec
test
xchg
ja
jb
addr16
ss
push
rorl
mov
scas
lods
adc
sub
xchg
enter
mov
pop
cmp
ret
daa
xchg
out
call
adc
lret
jne
cmpsl
inc
scas
pop
test
fwait
sub
dec
mov
stc
inc
cmpsl
adc
daa
push
mov
pop
mov
mov
xchg
cmp
push
incb
lahf
inc
mov
inc
inc
adc
mov
fs
adc
lods
in
dec
xorl
orb
push
fldl
jne
pop
inc
out
or
iret
cmp
call
push
sarl
les
repnz
mov
ret
test
loope
sub
lret
lret
fs
and
pushfw
mov
mov
popf
lea
sub
push
repz
inc
mov
pop
xchg
jae
cmp
ss
sub
add
xchg
imul
pop
roll
movsl
decl
lods
aaa
adc
pop
arpl
pop
sub
xor
imul
icebp
xchg
mov
jne
mov
int3
jge
ffree
lahf
xor
out
loopne
pusha
mov
mov
cmp
adc
test
mov
jl
or
add
sub
popf
jg
mov
test
mov
mov
cmc
sahf
sbb
fcoms
iret
jecxz
je
test
aam
out
test
lcall
mov
cltd
jns
out
insb
lock
xchg
xchg
xchg
sbb
push
sbb
aad
cmp
or
mov
jo
push
jg
jecxz
add
js
inc
or
into
pusha
mov
xchg
in
repnz
outsl
dec
in
in
call
btr
mov
into
test
out
and
imul
push
sbb
aad
cmp
jecxz
xor
sbbb
adc
loop
pop
mov
fcomps
fwait
jge
dec
nop
mov
lds
jge
adc
pop
rcll
js
push
stc
mov
jg
xchg
dec
jg
aam
mov
pop
sbb
xchg
ja
popf
dec
xchg
jb
add
ss
aas
jmp
neg
push
xor
std
push
push
xchg
int3
orl
sbb
lock
rorl
push
shl
jp
bound
pop
add
dec
shlb
pop
dec
lahf
rcll
into
lret
xchg
or
push
mov
loope
sbb
pop
pop
es
arpl
mov
xchg
movsl
movl
dec
mov
xor
mov
dec
push
lds
mov
cmc
loopne
jle
and
jns
arpl
mov
inc
cs
sbb
cmp
out
push
mov
jb
or
and
lea
inc
subb
mov
imul
ja
jnp
sbb
jae
dec
hlt
sub
shr
mov
push
mov
sbb
mov
or
bound
push
iret
mov
xor
in
xor
shlb
mov
stc
aam
lcall
mov
inc
add
adc
add
aas
lret
and
scas
loop
arpl
loop
cli
push
xchg
js
ret
pushf
dec
inc
xchg
ja
lret
inc
subb
dec
pop
data16
cli
cwtl
mov
outsl
dec
test
mov
clc
dec
js
push
xor
pushf
lods
pop
in
lahf
lcall
sub
lahf
js
sub
inc
fdivrl
lock
xor
push
push
push
add
pop
jb
add
lret
lret
xchg
push
sarb
mov
ds
and
rorb
jne
fsub
pop
mov
xchg
ljmp
mov
add
add
cmpsl
cmp
push
mull
jge
adc
pop
addr16
iret
mov
arpl
push
or
aad
sahf
or
pusha
sub
int3
push
dec
sbb
mov
mov
pop
popf
or
aam
sub
cmp
cmc
jle
push
pop
pushf
lcall
adcb
imul
les
fs
jbe
mov
cld
shr
or
xchg
jp
in
add
push
fnstcw
xor
sbb
and
movsl
jb
xchg
push
mov
add
bound
push
loopne
outsb
push
cmp
add
mov
ds
lea
test
add
pop
push
push
jo
int3
and
fcoml
fadd
pop
mov
call
lcall
aam
scas
test
and
outsl
loope
xor
insb
cmp
inc
cmp
movsl
call
iret
into
lods
xchg
or
mov
mov
pop
mov
fincstp
mov
call
inc
sarl
xchg
adcl
jb
lea
sub
sahf
lds
or
movsl
mov
fsts
mov
std
inc
and
pop
pushf
aaa
loopne
mov
jae
ds
jns
mov
or
outsl
int3
scas
ja
adc
ss
pop
arpl
pop
test
xor
lret
xchg
push
dec
rcll
xor
addr16
cmpsb
and
jg
fcoms
mov
add
shll
or
ffree
xor
les
mov
aad
ja
mov
nop
sti
lds
test
stc
repnz
call
je
pop
mov
cmpsb
in
les
and
imul
inc
and
inc
dec
xchg
mov
and
mov
inc
sub
loopne
dec
ja
lods
mov
pop
fs
outsb
xchg
dec
dec
out
call
das
ja
jmp
pushf
aam
pop
jp
roll
inc
mov
cmp
push
lock
adc
dec
fnstsw
fdiv
cmp
inc
dec
outsl
fistpl
rorl
xchg
imul
mov
pop
fimull
test
into
loop
mov
packuswb
mov
xchg
push
jno
jae
xchg
stos
fidivs
mov
cmp
xchg
mov
pop
sub
clc
ret
cmp
aad
pop
and
shlb
jmp
imul
aad
mov
jb
adc
sbb
int3
cmp
pop
mov
in
mov
sub
xor
mov
dec
ljmp
hlt
in
jns
or
push
xor
in
test
jbe
sub
cmpsb
cltd
adc
pop
pop
popa
mov
or
cs
jmp
test
or
push
cld
xchg
rcr
sbb
jg
popa
gs
mov
mul
inc
js
dec
subb
mov
or
push
insl
loope
xchg
jge
jb
outsb
pop
xchg
jbe
mov
lea
in
lahf
sub
andl
popf
cmp
loope
push
mov
mull
rcrb
cmpsl
dec
push
inc
dec
adc
sbb
bnd
jmp
mov
mov
loope
fidivrl
xlat
and
enter
mov
pop
sti
ret
idiv
fmuls
sbb
sti
int3
pcmpgtw
lea
cwtl
sbb
xchg
cmpsb
test
cmpb
pop
flds
sub
fidivs
insb
jl
ljmp
jmp
in
jb
cmp
and
xchg
fisubrl
test
js
xchg
jl
orb
mov
push
sar
and
xchg
xor
je
lret
out
lods
or
cmp
rcr
arpl
mov
or
sub
sarb
mov
mov
addr16
and
daa
js
mov
mov
add
sub
jns
shrl
xchg
push
scas
jnp
inc
jbe
cmpsl
call
imul
dec
xchg
mov
xchg
adc
push
js
pushf
loope
pop
into
push
popf
mov
popa
out
pop
pop
or
frstor
and
aaa
test
pop
mov
push
add
pop
shr
test
in
xor
mov
sbb
nop
lahf
xor
hlt
test
addr16
mov
into
orl
shlb
arpl
repz
and
inc
dec
repz
adc
lds
mov
loopne
push
cmp
jae
in
sbb
xchg
enter
scas
mov
int
cmp
dec
and
add
das
ret
add
in
mov
mov
into
dec
xorl
les
push
adc
inc
sub
lea
js
pop
cli
test
sbb
out
icebp
cmovo
mov
push
adc
cwtl
mov
sbb
daa
dec
mov
cmp
lock
cli
loop
lods
shrd
pop
outsl
or
movsl
outsl
jae
pop
or
fidivrl
sti
pushf
movsl
loopne
cmp
mov
push
jmp
mov
xchg
int3
mov
mov
mov
daa
sub
rcl
lods
jg
jmp
push
sub
add
add
mov
sbb
mov
stos
xchg
inc
push
and
sub
out
mov
hlt
dec
in
mov
push
pop
mov
xor
adc
inc
test
lret
inc
cmp
pop
push
sub
cmp
lock
dec
repnz
ret
push
mov
pop
popa
jl
mov
aad
iret
dec
jo
cwtl
jge
outsb
call
fdivrl
into
fistps
in
bound
and
dec
lds
push
pop
mov
dec
icebp
jg
lret
push
es
out
pop
dec
dec
out
mov
out
movsb
dec
jmp
push
mov
pushf
stc
rcl
mov
int
std
dec
mov
fstpl
cld
sbb
es
mov
or
or
jnp
mov
inc
dec
jg,pt
test
xchg
and
xchg
mov
es
sub
cld
push
in
aad
xchg
inc
stc
popa
mov
push
lods
sub
add
aam
fistl
lock
mov
fdivp
lahf
or
pop
cmpsb
out
sarl
push
les
cmp
xchg
cmp
int
sub
stc
or
pop
subl
outsb
into
pop
adc
push
outsl
jmp
seto
mov
data16
aas
push
hlt
call
ret
adc
cmp
notl
imul
adc
int3
sub
insb
push
xchg
push
mov
and
xchg
rol
add
xchg
inc
jne
cmpsl
push
xchg
cmp
cmp
sbb
es
inc
sbb
sbb
arpl
adc
lcall
sub
cmp
sbb
loope
mov
mov
add
sbb
inc
notb
dec
repnz
test
adc
mov
aas
inc
loope
or
mov
lret
push
in
sbb
push
inc
sbb
ficompl
push
aam
inc
sbb
cmpsb
inc
ljmp
dec
fdiv
xor
mov
cmp
fadds
fbld
and
adc
dec
cli
nop
outsl
xor
aam
jbe
sub
imul
pop
ds
fcomp
push
or
movsl
dec
int
inc
or
jo
mov
aas
cs
aaa
decb
inc
lock
inc
or
xchg
inc
sub
and
jb
iret
jg
rcl
repz
sub
mov
cmc
cmpsl
bound
mov
and
dec
mov
dec
loopne
mov
lcall
lret
adc
and
mov
movsl
sahf
xchg
mov
testl
pop
sbb
icebp
mov
mov
jecxz
push
mov
mov
xchg
push
data16
dec
fmull
and
mov
das
outsb
pushf
lods
mov
cltd
adc
sti
loope
rcl
imul
adc
pop
jp
cltd
mov
mov
mov
out
cmp
push
inc
test
inc
ret
aad
sub
decl
add
fstp
adc
push
or
sbb
and
ret
xor
inc
outsl
loope
sbbl
mov
in
divl
andl
test
adc
add
xor
cwtl
xchg
inc
inc
outsb
push
push
mov
and
dec
mov
out
push
add
das
icebp
inc
cmpsl
arpl
dec
ss
scas
mov
aas
test
in
sbb
aas
test
ret
mov
popa
andb
mov
cltd
push
test
lcall
add
imull
or
cvttps2pi
mov
xor
cltd
test
fadd
mov
les
loopne
adc
iret
cmp
das
out
cmpsb
in
xchg
movsl
inc
push
clc
lods
mov
fidivrl
mov
xchg
mov
pop
xor
mov
jae
xchg
nop
xlat
xor
add
fsubrs
dec
cmpsb
dec
mov
fisttpl
inc
cmc
pop
xchg
mov
push
fsts
arpl
xchg
pop
out
dec
into
jge
pop
mov
test
les
pusha
testl
xchg
add
jmp
pusha
pop
adc
push
mov
cmp
or
push
push
fidivs
cld
ljmp
or
popf
mull
outsb
mov
movsl
pusha
aaa
jns
push
pop
sub
in
cmpsl
ja
sbb
aaa
incl
cmp
mov
lcall
push
arpl
dec
adc
pop
mov
dec
mov
outsl
popa
out
or
imul
fstpl
add
mov
scas
imul
mull
cmp
mov
and
loop
jp
lahf
adc
xchg
fucomip
jp
test
adc
scas
push
cmpsb
or
cmp
dec
fnsave
fnstcw
addr16
hlt
and
dec
jne
aam
sbb
pop
mov
push
and
andb
lcall
in
jae
gs
mov
mov
sbb
in
dec
dec
xor
push
cmp
cld
mov
or
fwait
hlt
lock
dec
scas
fildll
inc
insb
push
xchg
mov
jns
or
add
cmp
icebp
and
dec
sbb
xchg
sub
mov
or
mov
lock
stc
aam
out
insb
pop
je
pop
and
dec
pop
xchg
faddl
adc
jne
test
popf
add
xchg
ss
jne
xor
ljmp
inc
jae
arpl
mov
cmc
adc
cmp
cmc
aad
stos
cmpsb
jne
outsb
mov
stos
lods
xchg
dec
and
and
aad
xor
iret
sbb
jnp
test
mov
mov
xchg
adc
pop
sub
mov
dec
or
int
cltd
pop
rcl
popf
jb
int
cmp
roll
push
sub
dec
jge
emms
sbb
fs
call
mov
pop
outsb
mov
xchg
es
dec
nop
jl
pop
pop
push
sbb
pop
outsb
or
data16
imul
loop
xor
xor
and
or
mov
xor
mov
int3
pop
xor
icebp
jb
mov
scas
nop
bnd
icebp
xor
adc
loope
comiss
aad
ljmp
dec
pushf
orb
mov
mov
scas
or
stos
test
gs
aas
ja
ss
cmp
push
scas
cmc
cmp
cmp
mov
cmc
inc
mov
mov
je
test
mov
pop
fildll
or
dec
inc
mov
mov
push
sbb
fistl
lahf
fcomps
xchg
pop
pop
xchg
xor
mov
or
mov
aad
pop
and
push
cli
push
in
faddp
add
jbe
das
xchg
dec
dec
mov
push
enter
cmpl
inc
add
andl
push
pop
cmc
adc
arpl
pop
aam
push
lret
adc
and
sub
pop
cmp
into
cmpsl
popa
and
ljmp
and
imul
dec
sub
push
ret
in
push
sbb
sub
xchg
das
in
cld
into
mov
and
fistpl
lds
mov
sbbb
xchg
sbb
inc
xor
leave
loopne
nop
loope
imul
es
mov
gs
mov
mov
aaa
fwait
mov
outsl
jne
xchg
movsl
ret
in
das
adc
dec
xchg
mov
push
rclb
push
mov
adc
pop
sti
test
cmp
sti
pop
lret
lcall
xor
and
add
jo
nop
push
cmp
in
xlat
movsl
scas
mov
xchg
aad
or
outsb
jg
insb
cmp
in
mov
sahf
or
and
jno
cmp
inc
mov
bound
jb
inc
inc
push
cld
fmull
xchg
jbe
imul
xchg
pop
cmc
ret
loopne
push
imul
fwait
mov
int3
cs
mov
push
loopne
test
sbb
xor
adc
dec
jmp
jp
js
jmp
outsw
cmp
push
dec
or
mov
adc
aaa
push
daa
jo
adcb
leave
xchg
or
sub
iret
push
pop
lcall
cwtl
jnp
xchg
popf
push
xchg
fsub
mov
leave
inc
add
mov
in
mov
in
pop
jge
push
mov
jno
outsb
ds
fwait
ror
jecxz
jne
sbb
stc
out
cld
cld
pop
push
mov
pop
fstpl
dec
pop
pushf
lret
xlat
arpl
mov
lods
xchg
test
mov
loopne
xchg
loope
imul
fdivs
mov
jo
sbb
movsb
in
lock
hlt
push
popf
sbbl
lret
sbb
dec
fdivl
xor
sbb
ljmp
cmp
repz
or
es
das
xchg
xor
sub
or
test
mov
add
in
mov
out
cltd
lahf
sbb
sub
push
sahf
pop
lods
bound
and
mov
in
stc
add
je
or
mov
cmpsl
cwtl
inc
scas
fs
or
pop
xlat
jae
cld
repz
inc
push
or
lock
cli
pusha
scas
xchg
push
pop
pop
incl
pop
push
inc
decl
loopne
xchg
xchg
movsb
xchg
pop
loopne
pop
insb
ss
bound
mov
ds
or
icebp
sar
inc
push
mov
loop
push
and
add
xchg
ror
mov
and
or
aad
push
mov
adc
lret
stos
fadd
shll
cmpsl
lret
add
mov
jo
fwait
mov
fistpl
xor
push
ja
test
mov
sub
cmc
call
push
xchg
lcall
push
mov
les
or
push
arpl
xchg
push
gs
into
popl
sub
clc
and
pusha
push
lret
pop
stos
sti
fs
cmp
shrl
scas
lods
insl
in
jns
lret
enter
add
bound
jecxz
clc
clc
adc
and
xchg
push
shrb
and
in
adc
mov
xchg
loope
pop
repz
ret
lods
xor
push
stos
mov
mov
cmc
into
sbb
jmp
es
pop
sbb
sbb
jne
mov
mov
xchg
int
xchg
or
cltd
pop
fcmovnb
fwait
jno
cwtl
xchg
mov
xchg
inc
pop
or
int
loop
cmp
out
pop
dec
sub
sbb
mov
repz
dec
push
jbe
movsb
rorl
mov
lret
ljmp
jne
movsl
pop
movsb
loop
bound
sbb
adc
mov
mov
mov
inc
jbe
mov
xor
mov
push
cmp
cmp
test
fbstp
aam
push
rcpps
mov
jp
out
imul
cmp
test
dec
pop
mov
orb
rcll
in
or
test
jl
jae
jo
and
mov
call
out
cmp
cmpsl
push
or
cmc
imul
lahf
repz
fsubrs
mov
rcl
mov
push
insl
push
inc
push
adc
out
dec
outsw
inc
pop
jge
sub
push
leave
into
cmpsl
sub
aad
call
add
es
sbbb
lret
pop
push
push
push
out
ret
popa
adc
inc
call
sub
ss
into
lea
scas
add
decb
cmc
mov
testb
push
or
das
sbb
mov
test
and
cs
ss
les
xor
jo
mov
loopne
movsl
es
jae
adc
popf
leave
addb
sbb
xor
stos
add
push
xor
mov
inc
mov
sarb
xchg
xlat
jge
cmp
scas
cli
push
fwait
xor
movsl
xchg
dec
aas
popf
inc
fcomps
xchg
cmp
xchg
loopne
pop
in
jecxz
repnz
adc
out
mov
iret
mov
addl
or
xor
imul
push
inc
in
out
sub
sbb
mov
xchg
fwait
jo
stos
fidivrs
fs
xor
and
inc
or
pop
or
pop
ds
jmp
push
std
lods
pop
mov
xchg
sbb
imul
add
push
cltd
lret
mov
ficoml
dec
mov
addr16
mov
and
movsb
adc
pop
add
ret
inc
push
dec
adc
xchg
int3
test
repz
pop
imul
stc
xchg
dec
fsts
lea
lcall
leave
es
inc
xchg
and
in
xlat
xchg
lahf
lods
or
loopne
mov
inc
movsl
xchg
mov
add
jno
mov
mov
sbb
xlat
add
fdivl
test
pop
sub
cwtl
sbbl
cmpl
pop
mov
add
jl
pop
sahf
push
icebp
lock
jge
mov
arpl
cwtl
in
mov
pop
bound
push
push
xor
add
sti
pop
imul
test
out
test
add
dec
sub
cmp
loopne
test
ret
and
fwait
pop
push
pop
mov
inc
xchg
pushf
je
shll
pandn
addb
push
mov
adc
cmp
lea
jns
daa
push
xor
cltd
cli
push
lret
stos
cltd
sub
xor
push
dec
xor
ljmp
out
xor
ffreep
outsb
mov
bound
sub
dec
xlat
push
out
addr16
lahf
int
shrl
pop
les
imul
insb
outsb
stos
and
stos
inc
adc
in
mov
enter
out
test
sub
das
shl
cmp
imulb
push
lock
dec
mov
inc
adc
mov
push
fldcw
fwait
cmpsb
mov
loope
dec
fdivr
pushf
add
pop
mov
fwait
cmp
adc
jb
lods
xchg
insb
adc
jge
pop
out
movsb
sbb
dec
push
stos
test
pop
cmp
enter
in
iret
jae
out
sbb
aad
mov
mov
imul
sbb
nop
mov
insl
push
or
jg
sarb
inc
flds
scas
in
add
pushf
std
jp
inc
call
push
lret
mov
push
sahf
add
inc
outsb
mov
hlt
jb
xor
call
dec
push
pop
push
cmpb
cli
push
add
addl
adc
inc
repz
push
cld
cmpb
icebp
jbe
cmp
into
jae
jmp
scas
jns
push
pushf
leave
outsl
mov
push
lock
jle
or
mov
mov
outsb
inc
pushfw
and
mov
outsb
frstor
xchg
lods
fnstsw
mov
loopne
in
jmp
mov
cmp
shll
int
sbb
jge
dec
xor
sbb
xchg
adc
out
cs
lods
or
or
xor
adc
mov
cmc
mov
call
cmp
cmp
cs
or
sahf
lods
addr16
fmuls
in
inc
add
out
xchg
push
std
repz
pop
sub
adcl
pop
test
cmpsl
jmp
mov
mov
lahf
mov
push
in
std
lock
xlat
jb
mov
mov
dec
add
fisubrl
push
out
lods
clc
sub
mov
inc
inc
or
jno
mov
push
incl
mov
clc
ss
shrb
jg
out
mov
mov
fs
mov
insl
xchg
pusha
pop
insl
roll
sahf
xchg
push
dec
in
xchg
pop
cld
push
and
add
mov
outsb
nop
mov
push
xor
inc
mov
ja
xchg
flds
sub
xchg
jp
test
add
cmp
mov
and
into
mov
outsb
sbb
lds
add
mov
xor
jmp
xchg
mov
and
icebp
push
add
pop
int3
ret
pop
scas
mov
jl
dec
inc
mov
hlt
pop
xor
repz
xchg
mov
mov
pop
aas
add
add
xchg
cwtl
sbbb
stos
aaa
jl
sbb
xchg
and
ret
dec
and
add
cmc
outsl
inc
stos
daa
jnp
lock
loop
fnstcw
dec
in
mov
orb
jne
or
jae
pop
pop
and
add
lods
sbb
push
sub
or
pop
mov
test
outsb
jecxz
xor
dec
cmp
daa
mov
xor
in
sub
pop
test
and
mov
js
pushf
adc
add
push
xor
dec
mov
push
aad
insl
jno
jl
mov
pop
or
jecxz
clc
ss
mov
movsl
lock
sbb
xchg
xor
ja
into
push
pop
xor
mov
sub
push
ret
xlat
in
repz
daa
inc
imul
sub
push
mov
cmp
inc
hlt
test
jge
popf
add
lahf
movsl
addr16
cld
or
cli
xor
mov
push
jg
clc
inc
mov
mov
add
imul
shrb
lcall
inc
jmp
getsec
and
xchg
aam
inc
dec
cwtl
and
fwait
lock
andb
mov
mov
out
or
cmp
test
in
push
and
xor
xchg
iret
arpl
dec
orb
fisttps
inc
scas
mov
cmpsb
dec
mov
arpl
push
mov
inc
sbb
dec
subl
fcmovu
mov
jl
mov
or
loope
stc
test
clc
scas
lds
fmuls
iret
jae
test
loope
nop
sarb
jl
dec
bound
pop
sbb
lods
loope
xchg
mov
mov
fstpl
push
jl
es
lret
shl
fsubs
xor
out
mov
jno
cmpsl
xchg
add
jecxz
sbb
arpl
xchg
adc
dec
push
jmp
inc
dec
adc
ss
adc
lahf
lods
lea
jge
adc
dec
fildll
lds
jae
push
pop
fsubrl
inc
push
xlat
push
mov
xchg
mov
fsub
jo
and
inc
sbb
rcr
insl
jo
push
pop
in
das
push
inc
imul
popf
xchg
add
mov
ret
or
es
cmc
mov
cmp
out
test
xor
es
push
jmp
jbe
adc
test
out
push
neg
adc
fisttpll
loope
jnp
dec
inc
leave
cmp
and
lea
xchg
mov
orl
sub
mov
outsb
dec
mov
mov
flds
jbe
sbb
sbb
lret
int3
xchg
cmp
enter
push
mov
mov
mov
lock
mov
mov
sbb
mov
repnz
cmp
xor
gs
out
cltd
leave
gs
jp
sahf
and
sub
xorl
dec
rorl
add
rorb
test
in
jo
lcall
jb
loope
jle
push
or
fisttpll
lcall
xchg
pop
data16
push
jge
das
mov
leave
repnz
mov
jg
fistpll
roll
and
das
jecxz
and
clc
dec
testl
loope
sub
mov
jmp
sub
sbb
or
aam
fmull
inc
cmpsl
xor
xlat
push
xchg
sbb
mov
cmp
movsl
pop
jne
jo
xchg
inc
dec
test
jno
pop
je
dec
dec
in
jp
fwait
jnp
xor
lods
les
mov
adc
cld
insb
xchg
dec
fmuls
adc
xchg
add
jmp
pop
push
sub
in
jecxz
inc
mov
inc
aad
pop
repnz
insb
mov
push
adc
stc
mov
push
add
pop
pushf
mov
pop
fwait
jecxz
das
fs
add
idivb
push
xchg
pop
ficompl
mov
push
gs
cli
scas
mov
movsl
sub
pusha
orb
aaa
pop
inc
mov
cs
jle
stc
pop
leave
fwait
shll
cmp
hlt
lds
xor
xchg
cmc
jle
subl
sarl
xchg
bnd
xlat
fdivrl
out
and
outsb
mov
movsb
jo
roll
pushf
stc
jne
add
fucom
je
inc
dec
push
clc
or
imul
bound
lret
ds
mov
lcall
cmc
add
pop
push
stc
ja
ljmp
les
scas
sti
jno
adc
add
sti
push
cmp
mov
jno
scas
stos
sbb
loop
mov
mov
push
aad
lea
gs
pop
pop
xchg
dec
dec
sub
lock
lcall
test
mov
es
jbe
lret
jl
jne
fstpl
adc
mov
rcrl
xor
jmp
hlt
add
stc
out
out
mov
lods
jae
aam
sbb
cmp
adc
fndisi(8087
xor
add
rol
in
cmp
fadds
lea
cmc
loop
pushf
sbb
fisubl
int3
sbb
shl
std
fnstsw
lds
addb
push
xor
mov
call
imul
lret
mov
int3
add
repnz
jmp
dec
rol
and
rcll
jp
sbb
ja
leave
mov
mov
mov
mov
mov
or
loop
mov
loop
gs
fmuls
push
push
cltd
int
lds
stos
sub
push
lret
cltd
mov
aas
push
adc
and
pop
jecxz
stos
clc
sub
dec
and
xor
push
lods
cmpsl
jne
das
dec
inc
mov
movsb
jecxz
dec
dec
mov
add
fwait
lret
jge
icebp
mov
mov
sbb
fmul
jns
xlat
in
mov
mov
inc
and
sbb
xlat
stc
cld
add
sbb
jns
add
call
inc
pushf
push
testb
jne
sub
jne
sub
fmuls
fcmove
or
xlat
jmp
push
stc
push
push
lea
inc
mov
cmp
push
mov
xor
mov
out
xlat
mov
mov
jns
pop
add
mov
in
pop
pop
dec
jmp
cld
pop
int3
gs
inc
mov
or
ret
pop
jnp
jbe
ret
pop
into
sub
aaa
jg
nop
loop
add
pop
xor
popf
out
jl
or
std
mov
push
cmp
popa
sbbb
sbb
ficompl
outsl
cmp
mov
mov
ja
out
aam
lods
fnstenv
add
call
mov
je
lahf
xor
push
dec
push
dec
leave
cltd
popf
das
push
sbb
jecxz
ret
into
mov
or
jmp
cltd
test
xchg
or
fistps
push
fstl
xchg
ds
scas
rcrl
sub
sub
dec
imul
jle
dec
fsubrl
pop
jmp
mov
adc
cmp
idivb
fwait
xchg
insb
ds
pop
lods
xor
clc
int
lea
cmp
hlt
sub
inc
mov
and
rcr
fistl
fs
in
fildll
or
or
outsb
icebp
outsb
in
out
sub
fwait
adc
popf
sbb
add
in
add
fimuls
jp
inc
xor
adc
jno
mov
ret
pusha
mov
icebp
sub
push
inc
mov
inc
hlt
sub
cld
xchg
jb
xor
or
outsb
mov
mul
sub
fcmovb
and
pop
xchg
std
cmp
sub
std
bound
mov
sbb
pop
inc
push
arpl
inc
or
jmp
adc
stos
dec
pusha
dec
pushf
mov
inc
jb
adcl
dec
xor
or
inc
mov
jle
outsl
mov
jnp
hlt
cmp
mov
pop
es
xor
cmc
adc
push
mov
in
dec
and
pop
es
imul
sbb
stos
sub
rorl
mulb
pop
imul
ret
add
mov
repnz
cmp
or
enter
push
lret
xchg
dec
stos
mov
stc
mov
in
ja
cli
mov
mov
lahf
mov
insl
out
sbb
sbb
sub
out
dec
and
dec
xchg
loope
stc
loope
cmp
bound
xchg
and
sbb
inc
out
jns
mov
icebp
sbb
arpl
push
scas
add
inc
mov
sub
mov
dec
movsb
stc
xor
sub
jns
popf
mov
enter
pop
push
rcl
insl
sub
mov
push
pop
add
mov
lret
adc
lea
inc
out
shlb
enter
sbb
rcll
fsts
xor
mov
dec
add
iret
sub
cmpsl
or
inc
cmc
ja
mov
in
and
sti
imulb
xlat
sahf
or
movsb
push
add
ds
roll
add
cmp
pushf
stos
sub
testb
sub
arpl
jmp
sbb
aad
sub
shlb
add
and
fdivrl
inc
cmp
jbe
ret
fstl
cmc
cmc
stc
xchg
dec
mov
mov
lret
push
pusha
sahf
cli
xchg
adcb
xchg
orl
lds
mull
cmc
icebp
lock
dec
sbb
lret
adc
ficompl
je
lds
or
cmp
movsl
cld
mov
inc
push
push
je
lret
push
xor
je
pop
fldl
cld
mov
mov
fwait
lret
inc
fsubs
add
jb
push
push
pop
jbe
mov
mov
xchg
and
test
lret
cwtl
ds
mov
leave
test
mov
dec
test
xor
not
fwait
clc
pop
pop
mov
je
pop
sbb
movsb
sbb
adc
jmp
out
xor
or
cld
test
mov
xor
cmpsb
arpl
inc
std
xor
add
pop
and
cmp
fildll
or
fisubl
outsl
xor
sub
xchg
xchg
outsl
scas
inc
xor
aam
pop
sbb
popf
loop
sbb
add
adc
sbb
mov
sub
push
loope
std
xchg
imul
loope
xor
jecxz
std
mov
faddp
adc
sub
lcall
out
pop
dec
pop
jnp
out
add
inc
and
mov
hlt
jmp
aas
cmp
add
stc
cs
mov
ss
je
cmpsl
sbb
pusha
inc
addr16
aas
test
xor
and
movsl
jg
in
sarb
cmp
mov
mov
loop
mov
insl
cmp
jb
dec
mov
icebp
cmp
ljmp
stos
fidivs
pop
cwtl
cli
movsl
xor
addr16
mov
adc
cmp
xchg
xchg
jmp
add
push
scas
in
xchg
mov
ret
sti
and
mov
adc
inc
in
sub
sbb
jg
or
mov
in
pop
cli
aam
loopne
pushf
xchg
mov
jl
mov
movsb
out
sbb
sub
cmpsb
popf
mov
popf
mov
pushf
jle
sti
cltd
or
test
and
push
push
pop
fcomip
xchg
adc
je
or
lds
jecxz
aad
sarb
dec
inc
xor
loopne
jg
mov
in
std
pusha
js
fcomps
sbb
jno
aam
ret
xchg
lods
inc
rorl
ret
rcrb
mov
fadd
add
call
repz
loopne
fld
imul
cmp
push
adc
mov
mov
lds
inc
stos
clc
test
sbb
in
sub
loopne
out
and
fld
xor
mov
shrb
lret
push
push
testb
or
scas
xchg
stos
xchg
fcomps
add
push
enter
cmp
and
dec
dec
ja
inc
jecxz
scas
sbb
and
cli
cs
js
lea
jmp
cld
test
insl
je
aad
out
shrb
add
or
push
sbb
ss
in
imul
arpl
pop
sti
add
dec
inc
adc
aam
push
jno
les
outsl
insb
into
mov
je
pushf
jmp
mov
mov
add
push
mov
ja
mov
sahf
push
jmp
ret
push
adc
and
sti
pop
iret
jecxz
je
pop
jnp
cmp
inc
popa
jo
mov
popa
pop
mov
es
push
and
xor
push
fbld
push
mov
pop
gs
lock
int3
stos
test
or
in
in
mov
rcl
or
sub
ja
pop
nop
xor
push
sarb
jno
jno
jnp
aam
fsubr
mov
sub
xchg
jl
ja
jp
cmpsb
lahf
adc
hlt
les
push
jo
add
fcmovbe
dec
push
stc
subb
jg
fisttpl
ret
fistl
add
lock
push
aam
inc
xchg
imul
lock
push
into
vmread
hlt
jo
int3
ja
ret
lahf
mov
loopne
scas
cmp
vcvtsd2si
pop
aad
push
mov
lahf
int3
push
push
xchg
push
shrd
and
jmp
or
adc
jo
dec
jle
dec
test
je
cmpl
pop
addr16
hlt
lds
pop
xchg
sub
out
fidivrs
add
rolb
cmc
sub
adc
cltd
jl
sarl
fcmovbe
addr16
jmp
out
jno
or
sub
inc
out
pop
inc
testb
dec
mov
mov
xor
in
ljmp
rclb
stc
cmp
pop
jbe
xchg
fldl
loopne
push
push
jns
ljmp
mov
movsl
add
jmp
cwtl
orb
pusha
or
adc
bound
xor
ss
sbb
aam
cs
sub
mov
ja
and
pop
jb
ret
dec
hlt
shrb
sarl
lds
lea
sub
in
xchg
imul
repz
xor
add
xor
leave
sub
dec
cmpb
sub
inc
ss
sub
pop
sbb
ljmp
sub
in
adc
inc
in
add
pop
and
xchg
add
mov
sbb
cmpsl
daa
and
inc
dec
std
xor
mov
ja
inc
jo
and
push
push
fisttpl
or
ret
out
fwait
or
mov
aas
fmull
lea
sti
or
in
ss
and
in
sbbl
sub
push
loopne
sbb
std
ds
xor
lcall
lret
iret
cmp
stc
aad
jae
cmp
mov
aas
lret
loope
pop
xchg
xor
fbstp
popf
repz
popa
pop
mov
mov
fxch
xchg
sbb
adc
inc
pop
xchg
pop
or
shrl
mov
jno
daa
jge
std
add
sbb
loop
repnz
test
fstp
and
in
fisubs
push
jbe
ss
xchg
cli
push
jg
bound
out
scas
inc
test
push
pop
jmp
fwait
jne
and
scas
leave
test
fcmovne
mov
je
mov
push
dec
nop
xor
cmp
fimull
std
xchg
and
das
push
jg
inc
ds
xchg
cwtl
in
pop
repz
jmp
cmpsl
jecxz
cli
addr16
sub
stos
push
shl
mov
add
sub
sbb
outsl
xchg
test
inc
loopne
mov
addr16
in
adc
das
pop
psrad
les
pushf
fdiv
lock
cmp
push
adc
push
ficomps
dec
sbb
popl
cmp
xchg
pop
or
jnp
and
xchg
imul
fisttpll
fldz
xchg
fstl
test
xchg
jle
cs
data16
fildl
or
data16
push
cmp
jle
sbbl
ret
aad
repz
add
lock
ja
das
jmp
and
push
lret
fildl
inc
jo
inc
fcomps
call
shlb
mov
cmp
xchg
aam
adc
inc
cmpsb
imul
fiadds
out
out
fiadds
xor
ja
pop
and
ljmp
dec
dec
sub
pop
mov
mov
dec
add
lea
cmp
loope
mov
das
adc
cmp
arpl
lock
insb
inc
dec
test
push
arpl
xchg
xor
shrl
mov
cmp
push
cmp
lods
mov
xorl
pusha
lods
cmpsl
inc
jg
mov
fsubs
push
xchg
out
xor
cmc
inc
push
mov
lds
enter
in
jns
test
nop
adc
adc
or
mov
fwait
ja
std
inc
xchg
das
stos
gs
inc
popf
fs
outsb
dec
adc
or
movl
lods
adc
add
cli
mov
sbb
leave
cmpb
adc
lods
insb
add
cmp
pop
add
filds
dec
sub
jns
jecxz
fnstsw
lods
inc
aam
inc
je
dec
inc
das
jae
rolb
xor
dec
icebp
inc
dec
or
rclb
sub
inc
aad
and
jg
mov
push
sbb
repnz
ja
sub
mov
or
xchg
shlb
enter
sub
jbe
mov
in
and
sbb
xchg
and
mov
adc
test
imul
push
out
dec
int3
sbb
jne
int
mov
mov
xlat
inc
or
push
leave
jae
jo
les
sbb
mov
cld
dec
insl
das
inc
jno
inc
shll
nop
jns
xchg
or
push
test
ficomps
and
mov
gs
mov
pop
fs
call
pop
je
and
mov
mov
sub
inc
lods
xor
lret
add
add
je
or
jge
push
icebp
lods
push
add
movsl
outsl
notl
cld
movsl
and
dec
adc
lods
ret
cli
inc
call
sub
xor
jnp
mov
inc
loop
and
xchg
ds
icebp
int
mov
dec
add
or
mov
xchg
sub
or
insl
cmp
repnz
dec
xchg
cltd
mov
dec
mov
pop
sub
out
in
cmp
popf
shrl
aam
sbb
mov
hlt
test
dec
push
jne
and
xor
xor
xchg
repz
movsl
imul
lahf
mov
adc
adc
adc
inc
sbb
mov
movsb
mov
xchg
push
or
xchg
jb
sub
outsl
aas
push
sub
and
rcrl
push
push
mov
pop
mov
push
sub
xor
dec
popa
insb
popf
jbe
jns
adc
pop
push
add
pop
xor
mov
imul
fsts
pop
mov
xor
out
jb
out
mov
fucompp
repz
push
sti
xchg
xor
imul
dec
inc
mov
cmp
scas
mov
push
stos
jle
pop
and
jo
stos
mov
adc
cs
movsb
nop
es
inc
push
popa
pop
jbe
mov
sbb
mov
loopne
in
push
xor
and
ret
data16
adc
out
mov
popa
sub
pop
iret
and
and
shrl
cmp
clc
and
adc
ret
int
aam
add
sub
mov
inc
jo
sahf
imul
pushf
lods
test
cli
cmp
stos
loop
iret
xlat
scas
scas
dec
daa
cmp
pop
sbb
cmp
jmp
stos
dec
mov
test
lods
dec
stos
and
pop
int
fcomps
arpl
dec
xorb
js
push
popf
add
lea
inc
mov
jnp
fsubl
repnz
and
notl
jbe
pop
rcl
shr
js
fimull
cmpsl
jne
sub
mov
sbb
or
jmp
push
lea
sub
mov
mov
cmpsl
jae
or
jle
mov
in
add
jl
stos
pop
test
mov
test
vmaxss
mov
xor
cs
push
xchg
fistl
add
test
cwtl
clc
jbe
outsl
int3
and
lret
mov
je
lea
cwtl
jle
popf
out
mov
jecxz
xor
pop
daa
and
fwait
into
scas
lods
dec
xor
inc
pop
push
stc
sbb
pop
daa
inc
push
xor
cmp
fdiv
std
subl
dec
lods
hlt
sub
adcb
lcall
scas
les
mov
dec
out
adc
xchg
sbb
sub
loop
in
imul
mov
jnp
mov
fisubrs
iret
in
and
fldcw
push
fsqrt
mov
aam
jo
popf
sbb
xor
cmp
jno
jo
ret
xchg
enter
aad
out
jno
pusha
cmpl
mov
push
sub
test
or
je
jno
lock
mov
dec
mov
sbb
sub
push
out
mov
test
ljmp
mov
and
fidivs
scas
pop
add
ret
pop
sbb
cmp
sbb
and
cwtl
adc
fistpl
fnsave
dec
jle
cltd
pop
fdivrp
js
jle,pt
xlat
mov
push
out
movsl
push
lahf
inc
insb
and
fcmovnbe
jp
xchg
add
jo
pop
inc
aam
dec
movsl
adc
bnd
mov
test
sub
push
out
add
push
jge
fldl
sbb
icebp
adc
push
jo
inc
and
adc
pusha
out
push
lods
aad
mov
or
loope
jp
inc
xchg
sbb
dec
pop
repnz
xchg
xor
mov
mov
pop
addl
lods
aad
xchg
dec
sbbb
push
sbb
push
mov
jl
sub
out
popf
jno
pop
cltd
int
gs
std
cmp
mov
aas
push
push
sbb
lds
nop
sbb
cli
sti
push
xor
loop
mov
popa
shll
lret
lds
fcoml
mov
inc
jg
out
inc
js
shrb
mov
setae
outsl
lcall
adcl
mov
dec
sbb
outsb
adc
insb
aad
mov
xchg
into
mov
orpd
sbb
sbb
aas
test
cmp
daa
inc
and
add
scas
ret
xchg
dec
jg
nop
sub
inc
imul
int3
lret
sahf
lret
stos
adc
insb
addb
adc
cmpsb
bnd
fdiv
or
adc
xor
lds
test
orl
jle
cmp
sub
pop
mov
jnp
inc
cld
jae
add
push
pop
sub
adc
jmp
add
fstpt
cmc
bound
test
sar
push
data16
ja
xchg
movsl
sub
push
xchg
ror
mov
xor
cmp
pop
cwtl
mov
cmp
push
int3
in
mov
stos
out
push
or
sub
sarl
dec
or
adc
aas
mov
cwtl
sub
stos
push
aas
inc
push
dec
push
mov
xchg
shr
cmp
test
xlat
add
lcall
es
sub
add
jne
and
subb
push
mov
std
popa
ds
sub
aad
out
mov
pop
addb
mov
and
lret
out
mov
rorl
mov
in
mov
roll
testb
loop
data16
lods
pop
adc
sbb
mov
mov
sub
iret
xchg
xchg
jns
push
xchg
mov
inc
pop
jp
ss
add
mov
adc
adc
inc
ss
sti
sti
test
loope
or
fstps
movsb
inc
stos
push
std
cmp
ljmp
adc
xor
add
popf
jp
bound
xor
xor
sub
dec
repz
cmp
push
aad
jmp
jo
hlt
push
pop
aaa
cld
pushf
popf
pushf
insb
rcrb
mov
sti
lods
fadds
or
stos
mov
mov
std
pop
leave
or
popa
sbb
mov
scas
jge
push
fimuls
push
sub
mov
lods
scas
adc
mov
mov
mov
lods
sbb
fisubrs
inc
lret
sbb
sbbb
sbb
out
mov
ret
inc
add
xchg
and
fcompl
repz
in
shrl
jne
add
cmp
or
mov
outsb
push
pop
mov
cmc
jp
cmpsb
out
dec
adc
push
pop
mov
pusha
nop
mov
mov
movsb
insl
pop
add
lret
shlb
adc
mov
dec
xchg
ficompl
cmp
inc
adc
adc
add
insl
inc
push
mov
mov
add
imul
cmp
std
push
ret
filds
arpl
rclb
sbb
xchg
cmp
std
mov
xchg
mov
loopne
loop
jnp
inc
add
xor
sub
bnd
mov
xchg
push
bound
cs
outsl
xor
cmp
mov
mov
cwtl
cwtl
daa
cli
dec
rclb
out
inc
xor
mov
sbb
xor
or
jbe
adc
sbb
mov
xor
or
or
imul
push
je
int3
subb
data16
out
shrl
mov
push
adc
inc
in
or
scas
scas
loopne
add
sbb
movsb
in
popf
mov
fmul
cld
push
xor
mov
sub
and
and
inc
add
jb
mov
xor
scas
rcr
aaa
aaa
sbb
mov
jne
adcl
mov
sbb
cli
leave
scas
pop
push
pop
sub
pushf
mov
adcb
das
shlb
pop
cmp
rol
cmpsl
xor
inc
pop
mov
test
mov
lret
add
inc
pusha
jnp
dec
jecxz
addr16
push
cmp
inc
sub
aam
in
pop
cli
dec
mov
mov
into
pop
subb
sub
andl
push
loopne
cmc
mov
std
cmp
mov
imul
loope
insl
int3
stos
jnp
imul
hlt
sarb
pop
movsb
lret
inc
mov
cmp
dec
jecxz
ret
xchg
cmp
incb
pushf
and
fldcw
jne
dec
dec
inc
addl
lods
ret
push
imull
mov
pop
mov
dec
pop
ljmp
cwtl
and
enter
popf
add
out
cmp
out
sub
inc
mov
inc
jb
pop
lds
out
into
movsb
in
xor
pop
cmp
mov
or
fs
negb
sub
xchg
sbb
inc
or
aas
xchg
imul
push
loop
pop
scas
daa
xchg
push
jl
fwait
xor
cld
mov
stc
jnp
mov
js
iret
insb
shrb
xor
fnstsw
cmp
arpl
mov
icebp
mov
jbe
xor
mov
mov
loop
je
xchg
cmp
insl
lock
jg
loop
pop
mov
lds
aad
inc
repnz
mov
pop
adc
dec
test
mov
dec
push
or
lea
lahf
insl
jecxz
out
mov
out
sub
aam
int
imul
cmp
mov
inc
add
jecxz
into
nop
movl
sti
xchg
xor
enter
cmp
in
jmp
iret
imul
ret
push
nop
sub
xchg
pop
fistps
push
lea
xchg
push
es
sti
in
push
jle,pt
mov
in
ret
or
push
faddp
out
pusha
orb
int3
in
pop
push
leave
cmp
xor
pop
repnz
dec
aad
out
dec
or
sti
pop
mov
popa
add
pop
ret
test
inc
xchg
dec
pop
sub
cld
ss
jle
mov
cmpsb
sbb
repnz
pop
jno
rclb
fidivrs
jnp
cmp
mov
insb
fstpl
lret
insb
std
ficomps
push
xchg
cmp
sub
cmp
js
push
out
mov
int
fsubrl
ljmp
outsl
pusha
out
xchg
pop
cli
xor
mov
mov
js
and
std
jbe
sub
jne
xchg
stos
xchg
and
daa
cld
inc
jmp
mov
sub
in
and
xor
outsb
or
push
xorb
mov
or
test
sub
push
xchg
mov
fbstp
cli
das
inc
hlt
dec
fisubs
dec
adc
adc
dec
mov
push
cmp
xchg
mov
mov
cmpl
xchg
inc
or
pop
jnp
mov
jae
popl
ss
jecxz
inc
push
cmpsl
cmp
jg
or
loop
nop
fisttpl
pop
outsl
sub
sbb
cmpsl
cmpsb
add
repz
mov
mov
sub
int3
mov
push
cmp
in
xor
adc
in
call
popa
std
daa
ljmp
sub
les
jo
sbb
repz
ljmp
lcall
movsb
pop
and
test
jo
int
mov
test
sbb
out
scas
outsb
insb
imul
mov
imul
and
xchg
fldcw
lcall
mov
xor
and
sbbl
cmp
out
insb
and
inc
mov
test
dec
js
int3
sahf
dec
rcl
leave
push
mov
jmp
xchg
dec
insl
pop
dec
into
cmpsl
cmp
cltd
xor
adc
add
gs
cltd
cld
push
cmc
roll
adc
mov
mov
lahf
movsb
cld
mov
sbb
mov
xchg
mov
icebp
int3
pop
ret
pop
mov
sti
gs
and
icebp
cmpsl
cmp
dec
jg
sub
mov
mov
adc
jg
gs
add
cltd
fsubl
rolb
cmc
mov
sbb
int
adc
mov
loop
movsb
jl
pop
sub
add
push
adc
bound
sbb
orl
in
pop
daa
pop
jns
loopne
cwtl
mov
add
repnz
or
lret
nop
mov
loop
iret
xchg
and
xor
pop
test
addr16
mov
fbld
bound
jbe
or
inc
inc
pop
pop
push
ret
movsb
or
insb
adc
pop
push
cmc
add
aam
daa
mov
mov
and
add
in
dec
das
fimull
and
xlat
xchg
out
divl
jl
add
loop
in
loopne
scas
dec
aaa
lret
sbb
lahf
cli
insl
xor
js
bound
mov
jo
fidivl
in
dec
stos
push
repnz
pop
dec
cmp
in
pushl
mov
dec
pop
andl
and
mov
pop
xchg
push
movsl
jmp
add
and
mov
into
je
lea
pop
and
xchg
outsb
and
mov
test
xchg
call
out
inc
and
into
fcoms
inc
insl
xchg
jg
xor
push
sub
es
lcall
repnz
leave
add
adc
and
add
sbb
sti
cmpsb
fistps
dec
jbe
jge
inc
cs
or
xor
mov
lret
inc
stos
rorl
mov
mov
pop
mov
sahf
push
outsb
rcll
push
xor
insl
int
mov
pushl
imul
int3
and
and
in
popf
cmp
das
fsubr
mov
mov
js
test
xchg
enter
lret
scas
aaa
outsl
scas
shll
and
stos
stos
mov
dec
test
jbe
sahf
pop
fiadds
adc
push
mov
xlat
in
xchg
cli
outsl
arpl
out
mov
inc
fstpt
std
xor
imul
adc
popa
lock
or
mov
mov
test
mov
xchg
shl
nop
cmp
loopne
rorb
mov
cmp
clc
test
mov
xchg
popf
fwait
push
sbb
jg
out
and
adc
loope
mov
icebp
push
adcb
mov
add
push
cmpsl
mov
test
sub
mov
dec
xor
pop
lods
pop
cmp
or
mov
test
cmpsl
push
pop
xor
or
ror
fildl
add
mov
pop
sub
cmp
jecxz
cmp
stos
cld
sub
fwait
ret
push
jmp
cmc
movsl
data16
xchg
pop
or
jns
xor
push
push
shl
xchg
xor
fiaddl
int3
or
cmp
push
dec
enter
add
dec
hlt
aad
stc
out
lahf
sub
dec
enter
nop
stc
jle
add
jne
fisttpll
pop
sbb
cmp
fsubl
in
adc
dec
fs
and
jecxz
jnp
sub
pop
mov
addl
pop
pop
mov
mov
inc
loopne
imul
push
adc
cli
push
test
sbb
imulb
push
cmpsl
inc
js
lret
lods
xor
movb
arpl
and
pop
jmp
jmp
sahf
clc
lods
imul
sub
nop
nop
scas
pop
sub
dec
jns
pop
out
mov
sar
mov
mov
push
mov
cs
or
aam
rcll
jne
pop
pop
into
fildl
xchg
adc
or
test
int
fidivrl
adc
insb
xchg
adc
sub
xchg
imull
inc
push
sub
xlat
xlat
test
insb
aaa
rcrb
stos
dec
loopne
pop
das
xor
cmp
cmc
sub
xlat
insb
bound
sub
adc
out
or
call
and
cmp
jb
xor
cmp
adc
fwait
insb
dec
test
sti
mov
sbb
sub
ret
and
out
enter
sub
adc
fistpl
mov
aas
cmpsl
leave
dec
xor
fiadds
or
test
daa
inc
sti
into
xor
inc
movsl
fwait
and
lret
push
inc
iret
fidivrl
popf
adc
sti
fs
movsb
cmp
jne
das
jo
clc
scas
inc
sbb
xchg
pop
scas
sahf
dec
aaa
lea
mov
mov
ret
pop
sbb
fstl
push
add
inc
int3
adc
repnz
mov
jmp
cmp
loop
mov
pop
xchg
lock
imul
inc
clc
outsb
push
xor
xlat
inc
out
cmp
cmp
fwait
out
fwait
pop
in
adc
add
inc
in
lret
rcr
test
mov
xor
sub
lock
pop
mov
cs
cmpsb
or
test
adc
pop
xchg
enter
das
mov
xchg
xorl
stc
sub
scas
pop
xorl
mov
mov
sub
push
jbe
inc
test
or
sbb
dec
adc
xchg
lret
lock
mov
sbb
lahf
add
int
ss
mov
xor
adc
inc
inc
jbe
rorb
cmp
clc
push
pushw
xor
jae
mov
dec
neg
addr16
or
test
pop
data16
scas
lahf
push
or
ret
jbe
loop
jae
mov
hlt
mov
test
mov
andl
test
sbb
push
data16
out
mov
cli
sahf
repz
mov
sbb
sub
insb
sahf
icebp
inc
insl
xor
adc
mov
lods
loop
call
push
pop
xlat
or
mov
cli
mov
loop
or
fisttpll
jmp
js
dec
test
mov
sub
arpl
fstps
test
inc
add
sub
aad
outsl
insb
xor
popf
jp
test
cmp
das
add
jle
sub
daa
int
rorl
movsb
sbb
mov
incb
in
push
pop
xor
inc
adc
andb
mov
rolb
inc
xchg
mov
jecxz
pop
sub
stc
mov
mov
clc
test
jmp
ret
fdivl
mov
push
mov
arpl
jl
mov
lds
jle
sbb
std
pop
es
sti
inc
pop
sub
cmp
cli
inc
push
arpl
ret
push
int3
lods
mov
cli
insl
sahf
add
push
lods
sub
mov
imul
aam
movsl
cmpsl
into
jb
sub
fs
in
and
xor
xchg
xchg
dec
inc
xchg
sub
xchg
mov
mov
mov
in
movsl
mov
xchg
popf
pop
lcall
fbld
push
jge
repz
ss
and
xlat
insb
ljmp
cwtl
in
insb
pusha
lods
or
rolb
or
daa
addr16
sub
adc
leave
inc
jae
and
mov
fstl
jns
dec
not
jp
fisubrl
xchg
mov
mov
cmovne
pop
xchg
push
pop
dec
pop
push
dec
add
mov
pop
sarl
xchg
jecxz
xor
jl
sbb
repnz
in
dec
xor
sbb
sbb
push
hlt
push
mov
movsl
ds
lahf
rcll
mov
and
sbb
icebp
clc
inc
push
sarb
out
add
imul
add
lea
jle
rcrl
popa
jo
dec
pusha
pop
int
and
lods
les
pop
or
mov
lcall
mov
sub
xor
xchg
jg
icebp
pop
push
mov
add
mov
adc
sahf
and
xchg
xchg
out
test
fisubrs
and
mov
arpl
orb
sub
mov
fidivrl
cmp
pop
sti
jmp
pop
jg
movsl
and
push
ss
pusha
mov
mov
in
das
imul
ss
xchg
in
jo
mov
adc
mov
mov
subl
lods
inc
lcall
cmp
enter
adc
iret
xchg
push
clc
cwtl
insb
mov
dec
lds
shlb
shrl
out
popa
mov
or
lret
sub
or
xor
dec
out
cli
aam
test
loop
ret
icebp
xchg
aad
jl
or
decl
mov
cmp
test
push
pushf
das
jnp
xchg
or
and
pop
xchg
shrl
les
mov
xchg
sub
and
mov
adc
shrl
fsubs
and
and
rolb
adc
mov
ss
sahf
cmp
jo
ds
cmp
adc
dec
xor
push
imull
imul
and
sbb
and
pop
mov
arpl
xchg
mov
push
mov
or
inc
outsl
addb
jae
mov
lret
mov
and
mov
push
xchg
movsl
movsl
jne
frstor
leave
aad
minps
sti
test
pop
cmp
sub
jo
mov
aas
ja
sahf
and
mov
jle
dec
inc
pop
xor
xchg
out
mov
push
cli
idivl
into
decl
decl
lret
jl
dec
mov
fwait
jbe
outsb
jae
xlat
inc
jo
popa
jb
jae
les
mov
sbb
adc
cltd
sub
imull
xor
and
aaa
pop
fnstsw
mov
out
cltd
cmpsb
and
ljmp
mov
cmp
jnp
loop
je
inc
mov
sbb
lfs
ror
xlat
or
inc
push
mov
insl
push
pop
sbb
dec
pop
inc
sbb
repz
xchg
test
outsb
sub
mov
mov
sbb
mov
fmuls
daa
or
cmp
jb
sbb
add
xchg
and
js
add
xchg
stc
jb
inc
bnd
in
mov
stos
aas
jo
dec
push
xlat
scas
mov
lret
testl
lods
cmp
mov
lcall
out
dec
lea
inc
fildll
out
fiaddl
add
idivb
adc
mov
push
sub
imul
xchg
loope
mov
sub
dec
arpl
mov
popf
nop
lret
xchg
dec
push
push
mov
push
movsl
iret
inc
lahf
lahf
add
jge
or
lods
dec
and
inc
adc
imul
mov
push
adc
rcll
pop
push
fisubrs
outsl
ja
sbb
sbb
mov
jg
testb
adcb
and
nop
incb
pop
cmpsl
test
adc
and
clc
mov
mov
cmpsb
xchg
jne
sbb
mov
ljmp
jno
inc
lahf
mov
xchg
fwait
popf
and
lea
ds
pop
mov
nop
popa
les
lret
adc
inc
stos
xchg
loopne
sub
pop
jae
aad
std
jg
or
inc
push
stos
dec
addr16
mov
inc
push
xchg
adc
int3
mov
or
lods
stos
adc
test
out
daa
inc
loope
sar
lret
out
pop
jle
out
cltd
xor
orb
pop
inc
add
sub
cmp
jns
test
dec
bound
sbb
mov
mov
mov
sar
jmp
mov
mov
xchg
ja
mov
push
ss
jecxz
shl
push
fcmovbe
and
fldt
xchg
clc
in
xor
je
in
xchg
repz
in
sub
sub
dec
in
jne
xchg
xor
mov
mov
mov
fs
mov
rclb
mov
sub
jbe
js
lods
pop
adc
cmc
dec
push
test
mov
hlt
push
nopl
jbe
stos
pop
dec
ljmp
dec
xor
mov
adc
pop
push
out
push
rolb
repz
pop
xchg
out
mul
mov
rep
lea
iret
fcomp
fisubs
nop
mov
cmpsl
fisubl
sahf
dec
and
sti
cmp
and
hlt
aad
enter
mov
dec
je
mov
inc
adc
push
jmp
subps
cmc
mov
sarl
dec
sbb
mov
inc
ror
leave
repz
adc
shlb
xchg
test
jle
xlat
mov
cwtl
cld
daa
push
int
add
xchg
mov
push
dec
inc
fcoml
fisttpl
jg
jge
and
lods
fwait
push
addr16
into
adc
ret
or
cmpb
hlt
adc
cmp
sbb
xchg
out
jmp
inc
dec
mov
jbe
ret
rcrb
ljmp
cmp
test
jb
or
mov
or
lock
movzbl
cmc
mov
cmp
jle
ucomiss
adc
or
or
hlt
cld
add
les
adc
add
push
sbb
stos
pop
sahf
or
and
mov
ja
mov
fwait
xor
mov
xor
rclb
cmpsl
repnz
fwait
xor
loopne
dec
sbb
xchg
push
nop
std
sti
xor
cmpsb
mov
popf
mov
jg
mov
int3
adc
inc
shrb
lock
pop
or
mov
push
mov
push
aad
jl
addl
ret
sbb
popf
push
sti
mov
cld
sub
pop
lret
jle
xchg
movsb
push
sub
mov
cmp
fists
shll
jmp
jle
sbb
xchg
jecxz
repnz
xchg
jle
sub
rorl
mov
push
sub
push
mov
xchg
xchg
test
jge
loope,pt
xchg
sti
xor
mov
mov
mov
mov
out
dec
movsl
push
xor
mov
mov
int3
jmp
rep
xchg
add
sarl
sbb
insb
pusha
dec
lods
dec
outsl
xchg
ss
pop
cli
push
pop
imul
iret
dec
push
incb
leave
xor
test
push
lods
stos
mov
lods
fs
cmp
lahf
or
push
dec
cli
aas
and
mov
jmp
loopne
mov
ror
aad
jp
xlat
xor
sub
jo
mul
xor
add
sbb
mov
dec
pushf
cmpsb
adc
loop
push
mov
bound
out
jecxz
push
push
add
icebp
jno
dec
aam
adc
cld
idiv
inc
js
cld
mov
mov
jo
mov
stc
sbb
arpl
sbb
jbe
pop
lods
adc
int3
mov
cmp
push
push
cwtl
and
fdiv
test
mov
xchg
add
mov
xor
and
out
int
adc
pop
imul
inc
inc
xchg
outsl
push
outsl
lea
xchg
stc
jp
call
jge
fmul
mov
out
faddp
cmpsb
repz
jecxz
cmp
sub
push
rcrl
push
popf
cmpl
cmp
xchg
pop
cmpsl
fcoms
jno
mov
lods
xchg
lea
mov
xchg
pop
adc
test
aam
push
fistpl
iret
jns
push
inc
mov
int
cmp
lea
xor
popf
lret
adcl
xchg
pop
scas
cmp
fmull
imul
ds
in
loopne
test
cmp
lods
outsl
aas
inc
xchg
jae
pop
mov
sbb
dec
aam
into
jp
adc
mov
adc
daa
or
add
lods
or
fwait
lahf
dec
and
push
pusha
and
rcrb
faddp
jle
jb
sbb
test
icebp
xor
mov
psubw
sub
loope
xchg
mov
and
aas
shl
adc
mov
aaa
nop
and
stos
fisubl
loop
xchg
roll
inc
cmp
arpl
mov
lea
call
jmp
in
xchg
les
addb
fwait
mov
addl
sahf
push
pop
sbb
aam
pop
or
jg
and
dec
dec
xchg
inc
notl
pop
es
mov
and
mov
pop
jmp
stos
pop
scas
and
and
incl
gs
adc
and
push
add
push
fcomps
je
aad
mov
lods
mov
add
cmpsl
lds
in
rcr
mov
mov
pop
cmc
cmpsl
call
fneni(8087
adc
jno
in
dec
into
gs
sti
inc
aad
xchg
mov
and
aad
fdivrl
cmp
xchg
push
xchg
loop
divb
mov
cmp
mov
pop
enter
fldl
xchg
add
fs
inc
aam
movsb
pop
lods
mov
adc
fldl2e
movsl
push
xchg
jae
insb
sbb
aam
mov
add
push
push
loop
popf
stos
out
mov
mov
pop
pop
hlt
scas
mov
jns
mov
push
adc
ljmp
cmpsl
lock
iret
sbb
jl
data16
fcomps
sti
jae
aaa
das
xchg
repz
int
sbb
cmp
mov
aad
pop
dec
pop
rclb
flds
push
fcmovne
sarl
and
xor
jbe
push
cmp
sarb
les
imul
jne
mov
pusha
push
clc
cmp
push
mov
loope
xchg
loop
ret
shll
jo
mov
xchg
mov
insl
jg
iret
cmc
push
bound
dec
adcb
lret
addr16
test
jmp
push
sub
data16
iret
add
and
adc
outsl
gs
push
movsl
mov
push
std
and
cltd
inc
push
movlps
mov
pop
push
mov
push
fidivl
lahf
in
pop
push
sub
push
fs
add
movsl
push
iret
mov
iret
stos
or
mov
dec
mulb
mov
mov
mov
movsl
mov
jp
sarl
in
push
mov
mov
cmp
vmovlpd
pushf
sbb
push
das
mov
sub
sarl
lock
mov
rclb
cmp
xchg
outsb
mov
lock
xor
or
mov
lcall
fdivrl
add
sbb
xchg
aam
into
sarb
mov
mov
push
cltd
daa
add
scas
pop
or
inc
sar
push
fiaddl
adc
cmp
mov
insl
sub
xchg
insl
sbb
fnstenv
iret
sti
pop
out
ds
lcall
mov
mov
hlt
cmp
xchg
test
iret
int
sti
lcall
mov
test
inc
mov
jmp
ret
insl
out
mull
pusha
pop
push
sti
inc
xchg
repnz
dec
mov
ja
sti
movsl
mov
fdecstp
dec
inc
cs
or
lock
cs
fstpl
and
sub
push
dec
jecxz
ja
dec
pop
push
cmp
cmp
and
mov
dec
cmc
adc
xor
sbb
cld
in
gs
mov
mov
adc
inc
cmp
inc
lret
push
sub
mov
inc
call
popw
in
xchg
or
out
in
sub
adc
mov
je
arpl
jp
jne
enter
inc
ret
dec
scas
dec
adc
jno
cwtl
adc
std
out
aam
cs
xor
cld
jnp
std
jp
mov
bound
in
dec
hlt
jle
jo
cmp
setae
xor
sti
mov
sbb
adc
sbb
lahf
std
cmp
clc
imul
xchg
and
push
push
lods
sahf
cmp
les
test
pop
cwtl
push
test
popf
push
adc
or
push
xor
mov
xor
push
rclb
cmp
loope
shrl
leave
mov
mov
repz
sbb
lods
cmpsl
adc
mov
lahf
lods
sahf
addr16
sub
sbb
pop
hlt
xor
xor
push
xor
dec
mov
out
int
xchg
jns
adc
add
inc
xchg
ja
pop
repnz
push
sbbb
cltd
mov
notl
rcll
xor
stos
int
push
push
add
scas
xchg
pop
imul
mov
mov
and
mov
pop
lods
xchg
xlat
data16
imul
inc
int3
inc
ficomps
shlb
mov
jno
loop
xchg
xlat
push
push
in
sub
mov
mov
sbb
bound
push
mov
xchg
rcrl
mov
sti
sarb
leave
in
jmp
push
xor
push
or
iret
dec
enter
jp
mov
fwait
inc
sbb
sbb
adc
jle
imul
xchg
push
pop
push
sub
ss
add
sbb
dec
dec
sbb
in
lods
or
outsb
stc
arpl
mov
pop
movsb
mov
repnz
mov
insb
jg
mov
sbb
fcomi
and
sbb
adc
stc
push
xchg
or
pop
xchg
xor
cltd
xchg
test
ret
xchg
ds
pop
bound
cwtl
pop
pop
pop
xchg
inc
push
cmc
int
mov
lea
jno
jbe
scas
xchg
inc
pop
jmp
leave
dec
mov
mov
pop
repnz
lods
inc
js
sbb
inc
filds
jne
jae
fwait
cs
aam
fcmovnb
xchg
xchg
in
mov
fisttpl
cltd
push
jg
subl
pop
jp
cmp
mov
sbb
xor
in
insl
loopne
push
adcl
cmp
pop
jl
sbb
hlt
mov
incb
sub
jecxz
cmpsb
les
push
icebp
test
xor
aas
mov
mov
mov
ret
aam
push
mov
sub
and
mov
test
jns
sbb
sbb
adc
sahf
jp
aam
and
inc
mov
loop
lds
stos
cmp
es
dec
and
dec
lea
mov
cmp
sub
pop
jb
std
inc
pop
push
outsb
aas
sbbb
les
push
sbb
jb
insb
push
dec
xchg
mov
fucomip
jbe
pop
push
mov
fisubrs
cmp
push
std
fsts
push
and
push
pushf
cmp
jo
in
jae
loope
fidivs
stos
loope
je
inc
in
mov
xor
add
jns
mov
lods
shll
jle
pusha
loop
push
cmpsb
xchg
mov
push
test
popf
jecxz
push
repz
out
std
push
rorl
cmpsb
sbb
repz
ret
das
jg
dec
aaa
or
fcom
ret
je
cmp
cmp
in
scas
scas
push
call
jg
mov
xor
add
mov
add
sub
jmp
adc
sub
pop
sarl
sub
sbb
cmp
xor
in
in
cmp
mov
add
mov
lea
xor
cmp
jb
mov
mov
adc
loopne
scas
jo
clc
adc
cmpsb
popa
mov
sub
add
push
lret
or
daa
and
cmp
iret
in
sub
cmp
jmp
dec
inc
call
js
movsb
pop
adc
and
adc
push
add
mov
in
fdiv
lcall
sub
movsb
test
add
repnz
movsl
into
test
mov
adc
xchg
cmpsb
lahf
sub
ret
add
dec
data16
fcoms
insl
into
lock
dec
dec
xchg
pop
xchg
rcrb
cmp
repz
or
adc
xchg
xor
mov
mov
dec
subl
popf
jg
adc
push
repnz
scas
rorl
cmp
dec
jne
mov
shl
xor
mov
mov
dec
dec
sti
imul
xchg
mov
pop
mov
cmp
pop
xchg
sub
pop
mov
adc
insl
dec
inc
rcrb
pop
pop
js
mov
pop
lods
mov
subl
dec
push
inc
insb
jmp
lahf
xor
arpl
lods
retw
add
movsw
and
stos
jl
out
pushl
lret
hlt
lcall
jecxz
aaa
mov
inc
push
pop
gs
pop
push
popa
in
lods
and
mov
cltd
mov
mov
icebp
nop
mov
xor
lret
xchg
test
mov
and
fs
cmp
lds
xor
cld
dec
das
mov
sbb
sarb
and
mov
xchg
xchg
mov
sub
sbb
scas
ds
cmp
push
mov
test
popf
hlt
mov
mov
outsb
sbb
popa
lahf
push
sub
fists
in
es
repz
inc
aaa
add
xchg
jns
into
cmpsb
loop
or
mov
aam
movsl
push
mov
jb
addr16
jb
jne
test
icebp
adc
jb
cmc
cltd
xchg
rcrl
jns
popf
add
out
push
push
push
std
xor
mov
mov
push
pop
in
inc
fsubrs
loopne
sub
inc
scas
std
in
adc
mov
jmp
stos
in
inc
int3
pop
cltd
inc
lock
pop
outsb
or
test
mov
iret
cmp
movsb
lds
daa
call
out
cmpsl
nop
xor
in
aam
sbb
pop
lds
int3
cmp
scas
lea
inc
and
push
cmp
repz
or
scas
fisubrl
je
js
dec
pop
mov
fmuls
in
std
hlt
popa
sub
leave
xchg
xor
add
incl
mov
leave
mov
aaa
or
mov
pop
dec
aad
ds
iret
or
clc
and
push
mov
das
mov
lds
mov
cmc
dec
and
iret
dec
fwait
pop
jo
sbb
push
mov
stos
cmp
mov
jb
push
and
and
mov
mov
jmp
out
mov
mov
sarl
adc
scas
dec
into
fwait
int
fcompl
cwtl
insl
sbb
test
adc
sub
dec
cmpl
cs
in
iret
out
xor
xchg
in
lahf
xchg
inc
call
das
mov
imul
stc
mov
repnz
fdivp
insl
xchg
ja
xchg
fidivrs
ljmp
popf
push
shll
iret
xchg
nop
add
fwait
sub
stos
and
adc
popf
adc
and
mov
out
jnp
push
pop
pop
cmpsb
xchg
xlat
scas
cmpsb
inc
jmp
icebp
xchg
push
pop
xor
arpl
fs
jl
out
inc
fwait
out
shll
and
xchg
lret
pop
mov
imul
iret
adc
into
jmp
mov
lock
sbb
jne
popf
lds
mov
arpl
imul
movsb
mov
mov
dec
jo
add
sbb
xchg
inc
scas
mov
ss
gs
cmpsb
xchg
sbb
mov
add
imul
shll
fimuls
test
pop
and
enter
sub
mov
orl
pop
xchg
mov
push
test
or
or
mov
scas
fwait
imul
jns
popl
imul
out
jo
jno
xchg
lahf
sahf
mov
enter
push
push
xor
popf
mov
dec
outsb
fmuls
decl
jge
and
stc
dec
inc
int3
mov
int
xchg
in
in
push
clc
mov
mov
insb
and
fisubs
xchg
xchg
mov
push
test
mov
in
add
push
adc
scas
xchg
das
mov
xor
lds
sar
xor
sbb
lock
inc
jmp
mov
pop
gs
mull
das
int
or
xchg
daa
jmp
mov
ljmp
addb
or
push
jg
pop
xor
sbb
or
leave
in
jp
imul
mov
cld
int
ret
and
sbb
pop
shr
sub
push
and
jl
mov
imul
xor
ja
push
repnz
in
jne
sub
adc
rorb
imul
xchg
adc
lock
adc
cld
ja
add
lea
sar
mov
sub
or
test
ret
cmp
or
add
push
sahf
push
cltd
cmp
pop
sti
loop
or
fadds
negb
adc
and
xchg
pop
sbb
rcr
mov
pop
lcall
push
lahf
push
or
mov
and
cli
or
in
mov
add
jp,pt
push
outsb
cmp
inc
mov
add
pop
pop
int3
popf
ret
mov
fsubrl
leave
into
mov
pop
bound
cmp
inc
test
fisubrl
sbbb
adc
push
and
fs
xor
sbb
cmp
or
test
mov
cmpsb
jbe
nop
rep
pusha
shl
mov
lea
lret
mov
lret
push
jb
xor
neg
test
pop
xchg
or
mov
push
inc
scas
lods
or
xor
pop
test
xchg
push
adc
inc
xchg
mov
xor
pop
fcmovnu
push
mov
bound
dec
bound
scas
push
mov
sub
mov
insl
cmp
in
pop
cmp
ficoml
push
mov
add
jg
jecxz
mov
pusha
dec
int
push
cwtl
and
and
leave
ljmp
test
cmp
je
dec
hlt
mov
lds
pop
sub
fmuls
jmp
pop
testl
cmp
out
xor
jp
and
mov
sbb
mov
inc
mov
cmpsb
xchg
inc
popa
lods
push
mov
and
push
call
stos
flds
inc
pusha
push
push
jno
idivb
inc
je
lock
movsb
ss
icebp
cltd
adc
push
jmp
jmp
out
xchg
xchg
pop
mov
dec
sbb
dec
pop
lea
and
or
movsl
jae
sbb
pop
inc
sahf
push
je
in
xchg
or
data16
sbb
mov
js
fcompl
orl
and
mov
push
or
cli
sub
mov
cmp
lret
inc
inc
pop
aad
inc
inc
mov
jo
and
int
inc
push
add
add
ljmp
nop
test
mov
aad
adc
jmp
lcall
pop
cmp
sbb
int
fwait
imul
mov
iret
mov
push
fwait
push
cmp
in
fdivrp
addb
shlb
pushf
aam
int3
or
xchg
add
xorb
xchg
popf
aaa
sbb
enter
push
mov
and
mov
jo
jecxz
pop
mov
jl
sub
sahf
cli
aas
and
and
mov
jnp
bound
or
sub
cmp
inc
int3
lret
stos
insb
loope
xlat
mov
or
ss
es
cmpsl
push
test
pop
add
or
sbb
mov
repz
ret
pop
cltd
lock
xchg
scas
popa
jo
xchg
mov
or
mov
aam
pop
test
out
jg
lods
daa
gs
jle
outsb
pushf
ljmp
fcompl
inc
pop
mov
push
aaa
aaa
xor
push
xchg
or
xchg
dec
jo
lea
ds
adc
ja
jae
or
jne
push
jge
jmp
sbb
jae
xor
dec
sub
add
adc
loope
inc
cmp
cmpsb
fsts
mov
stos
xchg
lock
outsb
sarl
jbe,pt
and
jno
pop
arpl
mov
rorl
mov
mov
cwtl
ja
pop
sub
cltd
popf
push
mov
lahf
xor
cmp
push
es
out
bound
jne
sbb
and
cmpsl
arpl
fisubrs
scas
scas
dec
mov
jg
jbe
pop
pop
cs
cmp
add
inc
mov
and
add
test
dec
aam
mov
int
xchg
imul
mov
inc
inc
add
cmc
or
cld
sahf
xchg
leave
arpl
jle
ja
push
cmpsl
inc
fsubl
pusha
xchg
sbb
dec
test
fsubrl
adc
cmp
sub
push
inc
sub
std
sub
das
xor
xorb
adc
pop
mov
pop
xchg
ficoml
cmp
xlat
lods
or
adc
pop
icebp
xchg
xchg
adc
and
fisubl
add
data16
adc
fdivrl
jle
cwtl
add
add
subb
data16
imul
jne
inc
xlat
outsb
jnp
cmp
xchg
adc
sbb
repz
lahf
scas
aad
imul
xchg
movsl
dec
mov
sub
out
inc
cmp
jmp
dec
mov
jmp
push
xor
xor
stc
jae
pop
sub
ljmp
or
adc
push
in
jb
mov
jg
in
or
fmul
cmp
cmc
adc
pusha
out
shr
cmpb
sub
into
pop
aam
out
scas
sbb
out
popa
sbb
fneni(8087
in
lret
imul
lahf
mov
roll
lea
sbb
aas
jns
push
jmp
test
aaa
mov
popf
mov
mov
nop
xchg
inc
adc
xchg
cwtl
es
xchg
orl
mov
notb
mov
js
and
filds
shl
pusha
mov
daa
cmpsl
inc
insl
stos
cs
iret
cld
out
inc
mov
pop
mov
jmp
sbb
repz
inc
sub
daa
data16
sbb
xor
icebp
mov
and
push
inc
shll
repnz
mov
ss
repnz
dec
rorb
push
icebp
pusha
lcall
out
call
dec
sbb
fsubl
imul
jne
int3
daa
mov
inc
lock
mov
push
mov
pop
stc
jmp
xchg
jne
lods
addr16
fs
sbb
xor
out
bound
xor
push
xor
and
inc
cli
cmp
repnz
es
and
mov
mov
stos
and
data16
ret
jbe
add
inc
adc
test
cmpsb
fidivrl
or
dec
dec
push
jbe
push
push
jmp
push
mov
mov
in
repnz
cmp
repnz
add
xchg
sbb
es
out
popf
add
jp
out
jno
mov
divb
mov
test
iret
jmp
push
es
pop
dec
mov
scas
les
loopne
nop
inc
movsl
or
sahf
std
int3
lcall
cmp
into
dec
adc
xor
mov
lret
push
mov
adc
push
and
pop
clc
pop
fdivrs
les
xchg
xchg
js
cwtl
orb
outsl
ja
aaa
dec
sbb
sbb
clc
pusha
or
in
in
dec
mov
push
xchg
je
push
insl
pusha
shr
mov
inc
and
insl
xor
hlt
stos
lds
subb
movsl
mov
fsubrl
dec
stos
or
jp
jnp
inc
rol
pop
stc
fcomi
and
cmp
dec
fiadds
cmp
shrl
xchg
aam
dec
jle
cwtl
jo
xlat
imul
out
and
cmp
cmpsb
cmp
xchg
mov
mov
jo
pushf
pop
int3
mov
sbb
lods
shlb
imul
or
ret
fcmovbe
sbb
pop
dec
out
mov
repz
gs
xor
dec
scas
mov
imul
sbb
xchg
mov
or
shl
lahf
dec
scas
cmp
inc
dec
xor
xchg
mov
and
mov
lcall
adc
and
add
int3
mov
lods
fwait
mov
dec
out
cli
push
mov
shlb
mov
add
xchg
xor
sti
imul
ljmp
sarb
ja
mov
xor
pusha
mov
push
int3
or
arpl
data16
push
shll
xchg
fildl
fwait
movsb
std
outsb
xor
cs
test
hlt
and
jb
sub
clc
gs
sbb
aam
xchg
inc
sbb
mov
push
cmp
das
sub
push
insl
sti
imul
sbb
jmp
inc
inc
lahf
mov
lock
repz
jp
mov
sahf
push
outsb
jg
mov
mov
add
jmp
ss
fmuls
into
int
push
cmp
loope
push
mov
mov
rcll
or
add
fbld
pop
leave
insl
cmp
adc
inc
push
int
mov
push
rcrl
popf
cmp
cltd
roll
mov
push
out
adc
aaa
fmull
dec
xor
mov
push
ret
cmp
and
scas
mov
mov
pop
lahf
fists
inc
adc
mov
test
fisttpll
data16
jmp
mov
dec
or
cmp
xchg
shrb
or
rsm
xchg
or
mov
cmp
mov
sbb
outsl
push
shl
pop
add
sbb
sbb
cmp
push
fwait
pushf
out
dec
xor
adc
push
cmp
cmp
push
js
je
fsubr
cmp
push
shl
cmp
cmp
idiv
sbb
and
in
fstpt
or
rcrl
or
jbe
inc
push
or
xchg
test
jne
mov
inc
sbbb
jbe
dec
mov
das
popf
movsl
fwait
iret
sub
or
imul
subb
cld
inc
sbb
push
xchg
jae
loop
ljmp
sub
rcll
stos
repz
cld
pop
cli
pop
les
inc
shr
cmp
push
mov
dec
fs
popa
mov
push
add
sti
cmp
push
int3
sub
mov
xchg
out
es
js
popf
mov
dec
cmp
mov
test
push
fucom
pop
inc
inc
dec
popf
pusha
sahf
test
xor
xchg
dec
xchg
jb
add
cmpsb
jmp
pop
int3
xor
xchg
out
fdivs
mov
inc
push
jne
or
push
pop
loop
cmp
enter
loop
xchg
jg
cmp
jg
out
insb
xor
pop
sbb
push
xor
test
daa
call
iret
cwtl
outsl
and
inc
mov
in
pop
fldl
sub
inc
loope
stos
fildl
movsb
inc
idiv
or
insb
lret
int3
cpuid
mov
cmp
jle
push
stos
sbb
jle
imul
pop
aaa
out
cmpsb
fdivrs
stos
cmpsb
aam
xchg
push
jb
push
xchg
push
push
ljmp
mov
mov
popa
ret
int
lock
bound
adc
inc
into
jge
je
inc
and
out
sbb
dec
imul
int
or
insb
inc
mov
mov
cmpl
sub
test
mov
aad
repnz
fcoms
add
je
adc
sub
cmp
and
push
mov
push
adc
xchg
xchg
and
rolb
ljmp
push
fsubrl
add
imul
sbb
lcall
xrelease
jge
cmp
in
repnz
cmp
repz
pushf
or
sub
jecxz
clc
xor
mov
in
mov
mov
scas
mov
fisubs
xor
pop
dec
xchg
push
outsb
pop
add
mov
sub
cmpsl
pop
sbb
mov
fldl
jle
outsl
xlat
fs
gs
call
mov
jbe
cmp
or
lods
test
xchg
inc
add
or
fcmovbe
mov
jb
lret
xchg
cmp
notb
cmp
andb
call
xchg
aas
cmp
mov
jns
and
adc
push
out
bound
dec
xor
cmp
jl
iret
xlat
aad
mov
rorl
push
push
mov
popa
xor
mov
push
jnp
mov
mov
das
inc
add
scas
add
addr16
fucomi
ret
outsl
dec
mov
push
or
cld
mov
dec
and
mov
pusha
imul
and
sbb
cmpsl
mov
jne
in
nop
das
add
addr16
int3
sbb
movsb
repnz
jbe
mov
pop
inc
push
or
add
xcrypt-cfb
cmpsl
in
cs
ds
xor
jg
aaa
jae
xor
shr
loope
cmp
sti
push
cli
jno
adc
test
testb
ret
sub
out
daa
movsb
inc
cs
xchg
pop
inc
jmp
mov
movsl
jno
ret
call
loopne
mov
xchg
mov
int3
jle
lret
sbb
outsl
jns
and
dec
and
orb
pop
sub
sysret
dec
imulb
daa
adc
mov
fisubrl
add
or
sub
aas
mov
lock
add
sbbb
shll
jg
in
adcb
cs
mov
fsubrs
and
insw
push
push
mov
cmp
adc
outsb
lods
sub
xchg
add
shll
jecxz
pop
and
cld
and
xchg
push
push
jno
scas
pusha
enter
mov
xor
stos
jge
aad
leave
jnp
sbb
rolb
jae
cmp
push
sbb
cmp
enter
push
xor
xchg
fst
push
cmp
leave
repnz
xor
dec
popf
add
cld
add
xchg
pop
mov
lea
sbb
push
mov
jl
push
sub
cwtl
dec
add
sub
out
addb
and
mov
jno
int3
fidivl
pop
hlt
pop
jmp
sti
and
repz
add
jnp
cmp
jns,pn
js
lds
dec
or
push
in
sub
aam
jp
aam
sbb
flds
mov
or
test
pop
dec
jle
in
push
in
es
or
lea
mov
ljmp
fwait
xor
pop
add
shlb
lds
inc
push
cmp
and
dec
inc
scas
adc
xor
inc
rcr
shlb
icebp
sub
subb
sub
fdiv
es
leave
jle
adc
sub
xor
pop
in
repz
inc
stos
repnz
mov
adc
inc
fsubs
incl
lret
xchg
push
js
cmp
jno
ss
or
sbb
shll
loopne
and
shlb
cmc
xor
jb
add
or
push
div
cmp
test
das
or
sub
mov
fsubrl
cmpl
sub
arpl
and
jno
xchg
mov
or
sahf
and
cmp
out
jle
dec
loop
adc
lcall
mov
addr16
out
das
imul
sbb
imul
jecxz
xor
xorb
movsb
pop
test
lea
xlat
pop
outsb
enter
sarl
sub
addr16
inc
sti
push
jmp
outsb
je
or
cmpsb
add
js
xchg
dec
jg
and
int3
shrl
sbb
or
mov
loop
push
sti
jecxz
aaa
and
fucomp
hlt
idivb
pop
xor
xchg
inc
sub
std
rcrl
in
fistpl
adc
loopne
and
dec
fistps
cmp
sbb
sbb
jmp
aaa
mov
xor
movsb
orb
lods
adc
push
sbb
dec
cmpsb
mov
mov
cmp
je
xorb
xchg
cmc
and
xchg
scas
xchg
add
adc
dec
cmp
push
dec
inc
mov
aam
or
inc
inc
jmp
outsb
push
push
sbb
les
mov
outsl
lret
push
leave
lods
pop
or
mov
ror
sub
cmp
lcall
cmc
mov
push
int3
in
pop
leave
sub
adc
cmc
mov
mov
cs
xchg
hlt
push
pop
mov
jl
mov
adc
es
cmp
ret
cmpsl
jne
cmc
mov
dec
xor
data16
scas
dec
stc
sub
jl
inc
ficompl
out
aaa
hlt
cmp
nop
jns
jno
sub
cmp
sbb
xlat
adc
addl
scas
jp
mov
pop
dec
jnp
arpl
push
ljmp
in
in
or
and
dec
out
cmp
ja
cmp
sbb
mov
ss
lock
dec
adc
pop
lds
xchg
and
ret
arpl
xor
and
ss
xchg
mov
scas
lcall
inc
xor
daa
mov
mov
leave
popl
inc
add
jl
sub
test
sbb
popf
lret
and
inc
sarl
ds
gs
mov
mov
adc
repnz
and
ljmp
mov
cmp
push
mov
dec
sbb
add
lret
test
fsubs
cltd
pop
in
jg
jo
sub
iret
mov
jns
iret
mov
xor
cwtl
lock
mov
or
out
mov
repnz
mov
xor
sub
mov
mov
lock
jb
stc
xor
popa
push
lret
and
push
mov
cmpsl
hlt
cmp
sbb
int
mov
push
mov
add
add
add
cltd
out
cli
xor
add
mov
cli
les
inc
dec
bound
add
mov
fisttpl
mov
sbb
stc
sub
daa
and
add
mov
mov
fisttpl
mov
int3
stos
mov
cmp
inc
ret
pop
repnz
sbb
loop
sbb
adc
push
test
xchg
jo
insl
mov
imul
mov
jnp
hlt
jb
adcb
fidivl
in
lods
cmc
pop
mov
push
lcall
ret
movsl
cs
jnp
jae
into
mov
fs
imul
pop
xchg
mov
xchg
pop
xchg
and
out
xor
aas
push
mov
gs
jecxz
xchg
aaa
pop
arpl
fistps
adc
inc
mov
in
popa
add
cs
adc
xchg
in
fimull
repnz
shlb
cmp
pop
cmp
sbb
push
in
sbb
rorl
sahf
and
push
fisttps
in
mov
jns
xor
jle
in
mov
adc
xchg
hlt
push
into
cwtl
pop
xor
inc
adc
rclb
jecxz
xchg
dec
sti
mov
js
enter
int
or
repz
xchg
jmp
add
insl
loop
pop
push
xchg
imul
ss
or
xor
cmp
dec
loope
out
mov
push
pop
mov
mov
dec
pop
and
jbe
fldt
fistl
inc
aad
mov
cwtl
loope
xchg
inc
xchg
or
data16
jnp
mov
lahf
sub
call
add
lcall
dec
pusha
negb
or
add
xor
mov
fucom
mov
sbb
push
sbb
jo
xchg
sub
fnstcw
jl
bound
xor
add
cmpsl
ror
cmp
jno
ret
lock
xchg
aad
mov
aam
sub
push
xabort
push
jns
lods
mov
push
pop
add
out
ret
outsb
fildl
sub
pop
jne
pop
sbb
inc
xchg
cltd
push
rolb
in
jge
inc
pop
mov
cmp
pusha
outsb
out
jp
subl
mov
mov
xchg
push
mov
adc
inc
cmp
mov
adc
sbb
and
cmc
nop
lods
incb
xchg
sbb
xorb
push
mov
popa
shr
stos
push
and
or
pop
xor
adc
int3
pushf
popf
mov
mov
adc
mov
lret
sbb
add
imul
lds
or
call
out
mov
xor
in
pop
sahf
lahf
cmp
sahf
push
cmp
enter
and
int3
jne
sbb
or
mov
inc
xchg
jae
scas
pop
or
imul
jle
mov
rcll
or
dec
inc
xchg
sub
jo
test
shrl
xchg
clc
jp
lea
cmp
adc
leave
mov
fimull
xchg
stc
inc
rcrl
into
inc
cli
pop
pop
outsl
cli
fisttpll
sub
pop
shll
fs
daa
arpl
mov
mov
mov
roll
or
push
jbe
call
add
imul
mov
js
imul
movsl
add
gs
sbb
dec
dec
call
jecxz
dec
push
ljmp
rcll
cmp
mov
ret
loop
add
insb
movl
popa
ret
lds
pop
arpl
test
mov
push
mov
and
push
nop
mov
icebp
inc
jge
mov
cwtl
ss
mov
jge
sub
lea
aam
stos
xor
add
or
pop
adc
jbe
sub
mov
icebp
mov
add
jmp
pop
add
rolb
jg
loopne
bound
sub
cmp
ja,pn
inc
adc
dec
in
cmp
inc
ficoml
lods
lea
inc
scas
and
inc
jno
dec
test
push
andb
stos
sub
fisttpll
xchg
cli
popa
movd
shlb
sarb
ds
dec
test
cmp
fistps
inc
adc
adc
adc
stos
jno
nop
sbb
pop
or
ds
mov
dec
cmp
xchg
push
ret
push
into
xchg
movsl
shll
jne
pop
daa
ret
into
inc
mov
call
mov
cli
lods
lret
or
pusha
dec
dec
rol
jmp
inc
sets
call
lahf
sbb
bound
xchg
imul
pushaw
orb
into
sub
movb
and
nop
jnp
mov
stc
xchg
outsb
outsl
test
loopew
flds
cmpl
jno
xchg
jb
sub
xlat
sub
pop
lret
jnp
scas
jl
vhaddpd
aam
push
andl
lea
adc
mov
pop
shll
inc
lods
xchg
and
adc
imul
cs
pusha
outsl
jge
jmp
adc
clc
pusha
test
mov
pop
inc
ljmp
push
lret
and
push
and
aaa
fcomps
adc
sbb
stos
lcall
jbe
rol
cmp
ljmp
xor
int3
xchg
add
fwait
sbb
lret
cmp
aaa
cld
shlb
sbb
sarl
mulb
dec
add
stos
aaa
loope
xchg
insb
jbe
popf
fcomi
push
cmc
lds
movsl
pop
daa
aad
lock
or
fists
lcall
or
pop
imulb
xchg
orl
cmc
xchg
shll
mov
pusha
mov
lods
inc
std
loopew
jmp
ljmp
jmp
lret
pop
aam
sbb
push
ja
adc
popf
push
adc
cli
jns
fisubs
sbb
sub
or
add
aaa
mov
aam
push
inc
mov
jb
sbb
adc
mov
pop
les
add
stos
imul
mov
adc
lock
int
sub
lods
and
in
stos
pop
xor
int3
aam
bound
je
mov
push
xor
jo
and
push
push
lods
push
aad
enter
stos
sahf
mov
and
add
inc
enter
jo
loopne
push
jo
xor
or
mov
mov
mov
lods
gs
shrl
sbb
insl
inc
pop
dec
js
push
inc
mov
sti
pushf
sub
add
lock
push
mov
push
add
xchg
inc
int
dec
mov
negb
inc
fistps
mov
sub
ja
add
adc
loope
aad
ja
adcl
inc
pop
sbb
cmp
cmpl
pop
outsl
cmc
jb
pop
mov
repnz
push
stos
inc
jns
pop
adc
mov
mov
aaa
ljmp
cmp
push
in
testb
daa
xchg
popf
sub
fildl
loopne
push
sbb
out
das
jno
sub
cli
addl
inc
aas
cld
push
jp
daa
jno
mov
or
movsb
mov
sbb
mov
js
enter
jb,pn
outsb
jne
lcall
out
add
ret
pusha
insl
fisubl
scas
ffree
xchg
in
mov
pop
mov
pop
jg,pn
stos
out
repnz
test
mov
mov
xchg
or
sub
je
stos
aam
fstl
mov
sub
ret
out
push
xchg
and
mov
mov
movsl
imul
push
out
adc
and
cmp
mov
xor
push
sub
fstl
dec
lea
xlat
sub
subb
les
xchg
stc
fmuls
pusha
sub
mov
stc
roll
adc
outsl
call
mov
add
loopne
insl
shl
push
loope
and
push
les
cmpsl
cmp
push
adc
mov
add
divl
xchg
scas
lds
push
lahf
or
xchg
push
out
and
out
into
shrl
jp
pop
jns
dec
push
lret
jb
je
mov
and
sbb
xor
in
cli
ljmp
mov
add
xor
mov
cmp
mov
xchg
lods
mov
push
dec
repz
xchg
and
mov
into
imul
dec
pop
dec
or
pop
mov
sbb
leave
hlt
or
jl
dec
push
in
movsb
mov
in
pop
aam
jp
ljmp
lcall
pop
fwait
lds
inc
jecxz
pop
sbb
push
sub
xor
cmp
nop
aas
lahf
adc
lcall
xchg
lds
ss
lock
xor
test
ret
testb
mov
pop
jp
ljmp
sahf
dec
or
add
data16
and
in
mov
xchg
inc
pop
xchg
adc
mov
sbb
or
add
or
sbb
fdivr
mov
mov
dec
adc
stos
mov
sub
fstpl
adc
adc
scas
and
add
add
ds
shlb
pop
dec
mov
ror
jecxz
push
adc
call
sahf
jle
or
cmp
sbb
pop
mov
or
mov
je
and
jg
cmp
adc
pop
rcrl
aam
ret
ja
out
jp
arpl
adc
imul
cmp
in
cmpsb
adc
rcrl
xchg
stos
stc
lods
out
nop
cwtl
push
or
das
inc
mov
sbb
adc
and
push
das
fwait
cmpl
push
pop
lods
in
jb
outsl
lret
xchg
push
popa
jge
mov
jp
in
push
mov
push
sbb
inc
stos
lods
cwtl
aam
jecxz
cmp
xlat
lods
add
push
lahf
xorb
dec
icebp
sub
jae
or
shlb
xchg
insl
add
fcmovbe
mov
nop
inc
pusha
sub
xor
cmp
cmc
test
xor
inc
cwtl
je
js
pop
lea
add
mov
inc
cmp
cmp
lods
pushf
ret
out
and
sub
mov
aam
inc
sub
mov
inc
bound
cmp
or
in
sahf
outsb
inc
add
dec
jnp
icebp
fistpll
mov
and
add
mov
adc
jecxz
cwtl
jmp
xor
mov
xor
jne
bnd
push
cmp
adc
and
clc
data16
aad
testb
xor
dec
lcall
test
scas
aaa
arpl
paddq
mov
xor
lret
movsl
icebp
adc
loopne
int3
jecxz
and
lret
or
inc
mov
jb
testb
jle
lcall
fidivrl
jo
cmp
sbb
pop
sarb
sti
dec
std
jecxz
rclb
and
mov
mov
xchg
pop
mov
out
push
add
unpckhps
and
push
push
fbld
push
pcmpgtb
lods
jg
xor
seto
mov
negb
and
push
sbb
lods
scas
sahf
lods
jp
mov
or
shrl
cmpl
subb
cmp
push
or
sub
mov
xchg
mov
xlat
xlat
jo
cmp
dec
inc
or
cmpsb
xchg
xor
sbb
pop
jae
mov
stc
sbbb
out
rorl
mov
stos
ja
dec
out
mov
fs
cmp
xor
and
rclb
or
or
fisubrl
fdivs
out
insl
das
push
sub
inc
pop
scas
xchg
fists
adc
js
rclb
add
add
mov
pop
sbb
inc
mov
mov
insb
mov
add
push
movsb
mov
scas
les
cli
mov
sbb
adcb
xor
stc
mov
rcl
in
and
lds
xchg
adc
test
jne
or
clc
stos
icebp
cmp
mov
adc
leave
jnp
sbbb
add
dec
cmp
pop
call
sbb
sti
push
push
and
lods
rclb
mov
notl
mov
push
rorl
jo
shll
fstl
adc
ficomps
pop
iret
mov
movsb
mov
sti
dec
cmp
or
sbb
pop
cmp
test
xor
sub
mov
mov
leave
lds
jno
and
stc
push
mov
lret
jb
dec
dec
inc
pusha
mov
mov
mov
mov
jno
fs
mov
xchg
imul
xor
jne
pusha
aam
pop
add
or
or
push
xor
lods
push
push
adc
pop
frstor
mov
pop
add
xor
cmp
adc
lock
adcb
inc
add
mov
or
js
adc
and
leave
pop
repnz
push
pop
or
mov
ss
inc
add
mov
jno
xor
gs
xor
xor
into
es
lahf
push
or
test
divl
js
cmp
push
or
into
push
shrl
xor
pop
lea
scas
jmp
and
hlt
or
fsub
mov
pusha
scas
ficoms
popf
jg
in
enter
and
mov
test
pop
outsl
mov
dec
or
pop
outsb
je
mov
mov
leave
sbbb
push
mov
cmpsb
lahf
push
mov
int
mov
lock
mov
mov
inc
loop
enter
mov
pop
lods
cmpsl
jecxz
push
ds
dec
jno
sbb
mov
mov
sub
insb
push
scas
push
jecxz
dec
xchg
aam
sbb
aam
mov
in
sub
push
dec
mov
pusha
in
cli
insl
out
jp
ret
mov
cmpsl
or
aaa
or
stc
inc
jge
cli
or
cmc
adc
sbb
sbb
xchg
add
fstp
add
fstpt
icebp
lds
js
stos
xchg
mov
sarl
dec
or
ss
hlt
popa
ljmp
insb
popf
pop
int
shll
in
adc
ja
push
xchg
aaa
lea
pop
adc
pop
mov
jmp
xchg
stos
int3
or
mov
loope
sbb
pusha
mov
xchg
jne
das
sbb
add
mov
fidivs
pushf
ljmp
sbb
mov
cmp
mov
dec
lods
or
outsb
add
iret
add
addb
sbb
lcall
mov
sub
lods
xchg
cmp
cmp
into
mov
and
cld
outsb
popa
test
push
adc
js
sub
push
cmp
or
lahf
sub
pop
cli
xor
scas
pop
es
icebp
inc
add
repnz
or
pop
scas
popa
xor
popa
shrl
jmp
pop
pop
mov
sti
loopne
mov
iret
inc
std
mov
int
fidivs
ds
jmp
add
pop
add
cld
roll
dec
mov
out
dec
enter
aam
lock
cmp
adc
mov
or
movsl
jp
pop
sub
std
ds
clc
or
and
jno
pop
jo
sub
mov
push
test
fdivr
pop
roll
divl
loope
ja
aad
xor
in
cmc
adc
cltd
xchg
xlat
fs
ss
sbb
ds
lcall
mov
cli
stc
lds
in
arpl
jno
xchg
dec
js
cmp
aaa
in
fwait
cmpsl
sub
inc
xchg
pop
fldcw
daa
repnz
inc
mov
repnz
sub
sub
stos
ljmp
jmp
or
cltd
pop
imul
sub
add
outsl
push
sbb
dec
sub
fnstcw
xor
adc
and
insb
jbe
pop
sbb
cltd
jmp
repnz
idivb
jge
shrb
adc
sub
adc
or
ss
stc
gs
pop
pop
and
pop
xchg
aam
mov
mov
enter
ror
mov
loopne
cmp
and
push
jp
mov
xchg
divl
push
dec
scas
out
sub
in
and
ret
aad
testb
pop
adc
popa
in
pop
pop
jmp
or
xchg
mov
add
repnz
sbb
mov
ds
clc
xor
mov
movsb
insb
push
xchg
mov
fwait
out
aaa
cmp
mov
or
ds
popa
ds
jl
ds
xchg
sub
inc
cltd
dec
ffree
xchg
int
insb
jo
inc
inc
cld
push
cli
enter
sbb
jl,pn
stos
and
lret
or
or
gs
in
mov
leave
roll
dec
jmp
sbbl
mov
test
dec
hlt
das
in
push
or
hlt
jge
mov
aas
xor
arpl
adcl
mov
pop
dec
adc
cmp
mov
jno
jle
flds
leave
mov
pop
xchg
sub
pop
sti
mov
sbb
cmp
dec
pop
pop
rcll
inc
mov
or
hlt
and
cltd
orb
or
icebp
movsb
push
mov
pushf
dec
xchg
mov
jmp
ret
dec
insl
sub
mov
scas
in
jb
pop
loop
int
cmpsb
fiadds
es
sbb
je
icebp
stos
ljmp
fists
iret
mov
fsub
cmovl
repz
mov
inc
dec
and
mov
fwait
push
sahf
push
pusha
sub
sti
js
imul
dec
sub
or
negb
inc
xor
add
sub
add
aam
addb
scas
pop
dec
rclb
cmp
mov
pusha
test
cmc
lods
clc
inc
inc
int3
popa
iret
add
inc
popf
popw
dec
xchg
cli
pop
lds
sbb
test
sub
fwait
sbb
les
movb
in
xchg
movsl
daa
add
dec
imul
xchg
sub
push
int3
int
or
lods
sbb
push
fidivs
inc
push
stos
repnz
fisttpl
pop
insl
hlt
xchg
dec
mov
daa
test
jmp
mov
push
sbb
fsts
fmuls
add
mov
aad
or
pop
xchg
sbb
repz
les
add
xchg
test
pop
ss
rcrl
mov
sbb
pushf
inc
daa
xchg
and
mov
jno
ret
das
adc
jno
ret
les
cmc
out
jno
ljmp
add
and
sub
cmp
mov
fmuls
mov
out
pop
lods
push
and
adc
jnp
lret
fsubr
fists
add
mov
mov
fcmovnb
pop
hlt
xchg
push
or
js
test
inc
pop
test
pop
fwait
mov
pop
fcmovnbe
cmp
popf
push
dec
sub
inc
roll
pop
iret
lds
xchg
in
sti
shl
sahf
dec
add
dec
iret
dec
lcall
lcall
and
pop
or
dec
lcall
mov
pop
mov
cwtl
jae
fnsave
add
out
fidivrs
in
fcmovnb
mov
mov
das
adc
hlt
inc
adc
sub
cs
xchg
add
push
in
into
stos
aas
xor
push
push
xchg
movhps
xchg
scas
push
sahf
sahf
add
adcl
test
xchg
jg
pushf
popf
pop
adc
ret
push
push
adc
mov
or
pop
or
mov
loopne
aaa
xor
dec
das
mov
jmp
ds
sub
fstpt
xor
inc
dec
dec
rolb
mov
add
lock
negb
jle
mov
cmp
push
inc
jge
test
lcall
movsl
arpl
pop
test
lods
or
jmp
or
sub
dec
xchg
lock
add
and
or
outsb
inc
ficompl
cmp
adcl
repnz
pusha
pusha
sub
lcall
push
out
dec
sub
dec
test
sbb
pop
into
std
imul
mov
dec
imul
sahf
push
inc
pop
loop
xchg
repz
int3
nop
cwtl
cld
loop
fdivrs
test
add
mov
mov
das
sbb
jge
notb
ficomps
jnp
aaa
xor
dec
iret
nop
into
mov
sub
data16
dec
ret
jle
jae
or
shrb
inc
inc
in
sbb
imul
scas
or
adc
mov
shll
enter
xchg
jg
iret
pusha
movsl
fists
dec
push
out
repnz
sub
xor
js
xchg
clc
test
mov
dec
xor
test
cmpl
mov
cmp
ljmp
outsl
cli
test
jp
int
dec
lahf
test
add
sahf
adc
pop
jp
adc
mov
inc
cmp
pop
push
mov
sub
xchg
mov
rcll
in
mov
std
das
fmull
dec
stos
cwtl
test
sbb
lock
icebp
shlb
andb
xchg
lcall
mov
inc
push
call
fnsave
inc
mov
scas
jne
imul
scas
jns
and
cmp
mov
jno
arpl
gs
fadds
fisubrl
pusha
sbb
addl
and
mov
pusha
pop
mov
sahf
inc
mov
dec
cmp
daa
xchg
shll
das
adc
sti
scas
xchg
jnp
lret
fcoml
pop
xchg
fidivs
cltd
out
fcoms
lret
aam
sub
mov
inc
in
leave
sbb
sarb
cwtl
push
jb
icebp
jns
xorl
mov
out
adc
and
jmp
ljmp
xor
xchg
out
fdivrs
mov
insb
cmp
pop
movb
arpl
or
mov
pop
jle
xchg
divl
test
mov
jno
test
push
pop
loop
and
movsl
xchg
mov
xor
cltd
mov
mov
inc
mov
movsb
rorb
arpl
aaa
out
in
into
out
outsb
fcomps
adc
inc
pusha
cmc
inc
je
sbb
cmc
adc
arpl
cmp
add
and
test
orl
sbb
imul
stos
out
adc
sbb
pop
push
adc
pop
dec
clc
or
negb
and
or
mov
movsb
dec
push
outsl
iret
ss
inc
fisubrl
push
cld
es
das
xor
xchg
dec
mov
movups
fwait
jo
or
sub
std
loope
int
push
or
out
bound
fnstcw
imul
dec
mov
dec
push
inc
in
mov
sahf
sbb
pushf
leave
incl
inc
bound
jno
arpl
mov
xchg
push
jne
stos
fsubl
pusha
fs
pop
repnz
sahf
pop
push
js
jo
sub
stc
leave
std
inc
fdivs
xor
sub
inc
fcomi
add
out
mov
lret
or
gs
out
or
lcall
test
fstps
xlat
cmp
inc
inc
add
lds
or
cs
xor
outsb
push
inc
or
cli
mov
aam
jno
inc
pop
fmul
sub
mov
xchg
lcall
pop
mov
int3
cmp
mov
dec
sti
and
lret
sahf
movsl
xchg
jbe
mov
add
sbb
push
mov
or
cs
dec
scas
cld
pop
jno
pop
add
push
mov
aaa
mov
scas
movsb
sub
ja
xchg
nop
fadds
push
xlat
rolb
enter
fwait
cmp
adc
loop
ret
andl
pop
inc
pop
and
mov
mov
jb
and
jnp
in
rolb
jbe
es
cmp
je
fwait
sub
mov
lret
addr16
cmp
push
cmp
mov
dec
insb
movsb
add
mov
test
mov
adcl
fisttps
sbb
dec
bound
jecxz
jae
pop
or
cmp
fiadds
pusha
ljmp
loop
cli
lcall
out
and
add
in
fstps
jno
outsb
jmp
ja
aaa
or
jno
cmpl
or
lret
mov
icebp
add
push
out
inc
shl
push
cmp
sub
pop
xchg
xchg
out
rorl
movsl
xchg
and
jmp
cmp
sbb
stc
addb
add
adc
shrb
cvtdq2ps
xor
ret
rclb
sub
popf
jnp
dec
or
mov
gs
mov
sbb
fcoml
fmull
mov
pusha
mov
dec
fcompl
mov
pushf
ret
mov
or
sbb
int
inc
ds
pop
xchg
adc
lds
or
fists
sbb
xor
mov
cmp
ds
mov
bound
xor
dec
sub
scas
imul
cli
adc
cmp
decb
ret
inc
leave
inc
sub
repz
loop
dec
jl
inc
mov
add
loopne
cmc
pop
call
std
jb
int
aam
cli
loop
adc
add
or
pushf
and
push
add
or
add
insl
xchg
insb
adc
daa
into
je
test
cmpsl
insl
sub
mov
jno
sub
jl
cltd
sarb
sub
mov
cmp
bound
mov
cltd
fildll
push
adc
sbb
mov
test
adc
jnp
xor
jns
in
jo
out
sbb
fs
inc
jge
xchg
out
push
clc
xchg
call
addr16
lret
loop
or
ss
and
push
imul
int3
daa
sbb
insb
add
jmp
jnp
and
insb
por
pop
fldl
movsl
jge
jl
outsb
push
insb
mov
negl
pop
lahf
jno
dec
add
dec
dec
mov
xchg
inc
rolb
sarl
in
xor
dec
icebp
aas
hlt
jae
gs
jmp
jge
or
mov
jmp
sub
and
arpl
cmp
mov
dec
dec
js
shll
pusha
xor
inc
ficompl
scas
inc
dec
out
rcll
ja
sub
pop
outsb
inc
xlat
shrb
enter
loopne
add
pop
mov
addr16
in
add
dec
mov
sbb
lahf
add
lahf
js
mov
divb
ljmp
out
mov
out
xlat
into
add
inc
mov
add
loop
add
ror
int3
stc
add
jmp
dec
xor
xchg
icebp
insl
xor
ss
daa
push
sbb
sbb
loopne
jl
adc
dec
dec
fildl
insb
xchg
stos
subl
rcll
call
test
ret
add
fdivrl
outsl
mov
gs
dec
insl
fwait
push
enter
cmp
push
pop
movl
aad
mov
pop
repnz
ljmp
test
fistpl
aad
fld
es
cmp
flds
out
xor
iret
sbb
bswap
pop
sahf
lcall
loop
xchg
clc
out
inc
mov
adc
cmp
leave
push
inc
inc
adc
mov
and
inc
mov
popf
idivl
and
push
or
sahf
lods
push
push
stos
adc
rcrl
mov
inc
mov
pop
push
sub
add
pop
fistl
outsb
lods
mov
pusha
push
jae
add
or
add
adc
clc
and
pusha
mov
dec
out
movq
sub
fs
sub
xchg
xor
xchg
leave
pop
push
pop
push
insl
nop
push
movsl
pop
push
cmp
je
mov
stos
jnp
aaa
push
repz
fcoms
inc
inc
push
adc
mov
loop
mov
int3
jo
sbb
enter
inc
incb
mov
out
into
loopne
lods
scas
mov
enter
jmp
jecxz
hlt
push
test
dec
dec
test
add
mov
loop
adc
jnp
or
test
mov
push
mov
mov
mov
enter
fiaddl
js
dec
fwait
adc
test
sbb
movsb
shrl
fldcw
push
push
cmpsl
xor
push
xor
mov
stos
cmp
or
je
mov
in
lret
movsb
and
lcall
sti
bnd
popa
push
sub
adc
pop
and
adc
mov
sarb
dec
inc
cmp
fnstcw
lea
or
add
scas
push
xor
movsl
inc
add
in
imul
aad
cmp
push
test
scas
outsl
pusha
push
inc
scas
sbb
dec
out
nop
int3
pop
mov
jle
push
orb
sbb
fsubs
mov
push
adc
rcll
xchg
sub
dec
out
inc
and
push
js
inc
jmp
pop
cmp
inc
xor
pop
int
mov
or
enter
fisttpl
in
hlt
popa
lods
mov
jle
cli
push
imul
xchg
jae
movsb
or
popa
mov
xor
xchg
xlat
ss
cmp
fstpl
cmp
cmp
and
adcl
adc
shl
addl
sar
jecxz
sub
jo
popf
adc
mov
mov
mov
mov
cmp
pop
rorb
push
or
das
pop
push
cmpsb
scas
idivb
nop
lea
or
or
add
movb
lahf
xchg
cmp
outsl
sbb
setnp
lahf
dec
xchg
push
xor
jno
mov
lcall
xor
sbb
int
push
adc
or
fdivl
add
mov
mov
cmp
into
mov
mov
xor
ret
into
xor
cmp
jae
out
sbb
xorl
mov
cltd
out
push
frstor
sbb
stc
cmpsl
xorb
pop
lods
imul
dec
dec
cmc
movsl
loopne
sbb
add
xchg
pop
inc
aas
and
push
adc
popf
xor
push
lret
incb
sub
mov
mov
ret
fwait
add
mov
hlt
loope
int3
out
in
mov
icebp
fnsetpm(287
cmpsl
xlat
sub
xchg
push
popa
xchg
dec
xchg
adc
jmp
aam
jl
xor
jo
jmp
push
lea
dec
jne
xor
cmp
add
ljmp
movsb
test
push
push
hlt
scas
mov
add
stos
mov
xor
int
pushl
mov
xor
ret
mov
mov
test
mov
jns
sub
xchg
dec
jp
jae
jp
in
dec
pop
hlt
xor
pop
inc
fdivs
in
mov
sbb
nop
mov
xchg
in
mov
xor
fisubrs
in
pop
loop
frstor
loop
movsb
cltd
fwait
mov
popf
mov
push
xor
pop
in
jo
mov
dec
or
rcrb
in
push
movsb
xchg
in
mov
lcall
xor
xchg
adc
fdivrs
call
movsl
std
add
inc
sbb
leave
jne
aad
sti
cmp
inc
jge
lods
dec
data16
fdivs
je
jmp
dec
push
cwtl
nop
cmp
mov
and
scas
cmp
je
ljmp
sub
into
call
lret
fmull
sub
push
sub
lock
fsub
cld
add
xchg
mov
jg
into
insb
xlat
and
ljmp
dec
test
arpl
shlb
icebp
and
lahf
jecxz
mov
sub
sbb
inc
lret
mov
cltd
mov
sbb
outsl
push
add
push
or
ljmp
out
scas
cmpsl
popa
mov
ret
testl
inc
mov
adc
or
mov
push
inc
cmpsl
sbb
setae
fcomi
xchg
mov
push
push
jnp
jg
push
add
mov
out
and
outsl
or
or
jne
out
and
shlb
adc
sbb
and
and
cmpsl
push
testl
sbb
fwait
cs
cltd
push
inc
push
aam
stc
cltd
cld
mov
std
add
imul
add
mov
pusha
pop
loopne
divl
push
sahf
call
rcll
scas
xor
pop
aaa
loope
cmpsl
mov
mov
mov
out
negb
test
jl
int
pop
dec
shrl
fisubrs
pop
xor
rorl
sub
sbb
mov
jb
ret
push
clc
inc
inc
adc
divb
xor
inc
inc
sub
test
mov
push
gs
cmp
mov
fildl
dec
jnp
lock
add
movsl
stos
sub
jp
push
divl
mov
pusha
dec
outsl
pop
xchg
xlat
les
pop
cmpb
stc
aas
xchg
sbb
cmp
sbb
popf
add
rorl
pop
cmp
push
popf
shll
xchg
mov
in
mov
outsb
sub
and
pop
pop
lret
mov
mov
or
sbb
inc
push
adc
pusha
pop
sbb
dec
mov
or
and
test
cmp
push
cmp
in
mov
inc
xchg
xchg
aaa
xadd
sub
sub
lock
push
in
imulb
cmpsb
addr16
push
jne
sbb
push
jb
pop
xlat
ss
pop
into
in
and
aam
mov
imulb
push
movsl
in
mov
cmp
add
xor
fsts
faddp
pop
addr16
jmp
and
loope
aad
hlt
mov
es
mov
pop
jmp
ror
mov
mov
xor
and
das
or
xchg
xor
mov
sub
lret
mov
xchg
call
push
sbb
push
andb
sub
pop
lret
and
add
aam
sbb
sub
inc
lret
aas
inc
fldcw
lret
iret
xor
aam
in
ss
ret
stc
xchg
mov
out
int3
daa
xor
jp
add
sbb
stos
add
mov
addr16
enter
cmp
push
test
idiv
dec
add
or
push
loopne
rclb
mov
push
push
mov
mov
push
xchg
repz
loopne
add
push
mov
sbb
lds
adc
jp
jp
imul
stc
cltd
pop
dec
shlb
add
outsb
ds
xor
cltd
xchg
dec
sarb
stos
ror
shll
jae
shrb
inc
add
or
hlt
dec
aam
loope
sub
mov
insl
out
pop
pop
add
fcoms
cmp
mull
outsl
jp
call
mov
jecxz
mov
or
fcompl
popa
jae
adc
cmp
cld
add
out
jmp
mov
push
cli
ret
cmc
add
pop
dec
push
movsb
shll
dec
fucom
mov
mov
jmp
add
fsubr
imul
int3
cli
xor
jbe
cmpsl
lret
push
ret
push
cs
and
mov
push
gs
xchg
call
dec
xchg
mov
in
repnz
xchg
or
cmp
cmp
mov
lret
aam
mov
out
or
cli
mov
mov
loop
les
sub
cmp
adc
mov
pop
push
cltd
dec
xchg
clc
lods
fildll
fcompl
test
cmc
call
jne
jnp
cltd
jne
cmc
idivb
xor
roll
inc
xchg
fwait
in
push
and
arpl
shrl
xchg
rorb
test
sub
lods
or
rorl
pop
xor
mov
jno
mov
rolb
out
insb
aad
arpl
inc
inc
push
ret
lock
jecxz
push
js
aam
mov
jmp
xchg
xchg
in
stos
xor
inc
popf
push
mov
push
nop
into
insb
pop
fwait
jb
inc
jo
dec
sbb
jnp
mov
repz
mov
lea
push
test
imul
and
mov
fdivs
lcall
mov
jecxz
sub
fcmovnu
sbb
popa
cltd
jbe
divb
cs
lods
out
xor
out
iret
js
jp
jnp
mov
sbb
bound
xchg
xchg
lods
xchg
shrb
jp
sbb
inc
mov
push
or
movsb
sbb
pushf
in
push
fldenv
in
fidivrs
pop
fisttpll
xchg
div
dec
test
xor
xchg
pop
cmpb
ljmp
mov
sub
adc
lahf
pop
enter
out
or
in
jns
push
jmpw
jno
loop
ss
lret
mov
lret
and
cmp
push
dec
cmp
inc
in
data16
bnd
or
sub
add
pusha
push
mov
cltd
jl
pusha
mov
push
loopne
jg
in
aaa
icebp
es
dec
add
ret
jne
test
movsb
cmpsb
scas
push
lea
cltd
mov
int
int3
aad
pop
and
jp
lahf
xor
pusha
add
lds
sbb
loope
xorl
adc
out
sbb
insl
mov
sub
dec
fcmovb
movsb
mov
jle
push
push
mov
lock
inc
and
mov
movsl
adc
pop
cmp
aaa
mov
bound
inc
loop
lret
mov
sbb
mov
aas
add
mov
push
adc
sahf
pop
lds
xchg
xor
ror
in
jbe
mov
xor
push
xor
jb
push
jp
pop
stos
out
in
lds
mov
mov
dec
es
in
in
mull
xchg
cltd
ljmp
dec
addr16
int3
repnz
or
sbb
dec
push
in
sbb
or
pop
fwait
adcb
or
imul
mov
loop
cwtl
loop
mov
or
mov
rorl
aaa
int
inc
inc
cmpb
inc
mov
cli
rorb
je
xor
scas
cs
std
mov
fbstp
and
shll
xchg
rcrb
cs
jecxz
xorb
jl
push
clc
loop
and
dec
dec
mov
push
outsb
and
loop
cmp
inc
sub
testl
stos
shll
push
pop
clc
arpl
sbb
popa
js
and
xor
mov
repnz
fs
cmc
pop
push
mov
leave
in
pushf
ljmpw
mov
sbb
pushf
push
vmwrite
pusha
pushf
test
insl
ss
mov
xchg
sub
pop
jo
mov
lcall
mov
outsl
loop
test
into
sar
jmp
inc
lock
aas
mov
inc
out
mov
xor
jne
inc
fstpl
dec
jg
push
sub
inc
or
cmp
dec
xchg
xchg
pushf
test
daa
pop
sbb
test
cmc
push
jmp
sbb
sarb
fisubl
cli
push
les
pop
dec
ds
pop
jo
pusha
sub
add
jg
icebp
xchg
cmp
jge
mov
stos
fs
fistpll
popa
aas
dec
jg
cwtl
outsl
shlb
add
addr16
nop
pop
outsb
jl
or
fists
push
mov
mulb
popf
fwait
add
xchg
xchg
fsubr
and
and
xor
cmpsl
dec
and
nop
sti
or
loopne
push
mov
out
into
ja
mov
push
fimuls
xchg
xchg
push
jle
shrl
add
movl
jb
insb
mov
fidivl
ja
out
add
pop
sub
sbb
inc
sbb
ret
loope
outsl
inc
add
pop
ret
jmp
popf
loopne
stos
repz
push
and
imulb
add
ret
mov
sbb
push
mov
rcrl
dec
jne
jbe
cmc
pop
cli
sub
je
in
pop
adc
sub
xor
das
xchg
ret
xor
lahf
or
and
cld
jmp
fwait
jae
test
add
gs
pop
add
je
loopne
and
and
outsb
cmpsl
fsubrl
or
setae
dec
inc
mov
sar
std
out
insl
adc
mov
and
dec
jbe
push
inc
sahf
mov
push
mov
mov
xchg
mov
and
push
adc
add
sbb
lcall
pushf
xchg
icebp
inc
pop
ja
cwtl
fnsave
cmp
fsubl
mov
xchg
popa
or
jl
fiaddl
outsb
jl
cltd
sub
push
mov
stos
push
clc
fstpl
es
jbe
daa
mov
jmp
mov
jle
mov
pop
inc
xchg
les
and
lock
mov
pusha
fbstp
hlt
inc
in
or
lcall
ljmp
lods
sub
scas
xor
mov
add
dec
enterw
pop
rcr
inc
add
scas
add
inc
pop
jb
mov
lret
push
mov
andl
pop
mov
xchg
movsb
ljmp
mov
dec
push
call
movsb
jmp
frstor
cmp
sbb
mov
pop
mov
and
adc
movsl
cmc
inc
in
rol
test
aaa
jne
stos
daa
repnz
or
ds
sub
ljmp
test
and
push
jl
lcall
std
rcpps
lcall
imul
cmp
push
add
xchg
out
stos
dec
rcrb
push
mov
lret
jge
jmp
mov
mov
mov
add
dec
mov
bound
dec
mov
fistps
mov
or
fbstp
fcomi
aad
test
pop
ficomps
jl
and
mov
add
insl
xchg
adc
incb
fisubrs
cmp
lea
movsb
movsl
mov
fildll
mov
cmp
add
and
ja
lods
or
test
jl
aaa
jl
mov
imul
mov
fldcw
test
ret
mov
sbb
jp
mov
nop
rcrb
jg
cmp
test
and
push
cmp
pop
dec
push
inc
ljmp
dec
cmp
cmp
addr16
cmp
dec
jl
sub
jae
jp
out
sahf
dec
adcb
cs
xor
imul
mov
or
mov
fiaddl
sbb
jl
add
sbb
xchg
or
rcll
fdivs
cmpsb
vmwrite
jbe
popa
jl
mov
mov
dec
and
ss
cmpsb
adcb
push
push
std
mov
jle
push
cmpsl
in
into
mov
jns
inc
jne
jne
sarl
mov
into
jno
push
adc
and
jae
movsl
adcl
pushf
sbb
dec
in
faddl
jmp
insl
pop
pop
and
dec
add
ds
bound
gs
ss
inc
push
mov
clc
pop
add
call
sub
out
and
sub
mov
xor
jb
ss
mov
call
pop
mov
and
loopne
add
movsb
fimuls
mov
iret
jge
lock
mov
movntps
sub
sbb
out
dec
lds
pop
pushf
jle
push
mov
iret
xchg
push
cs
fistpll
shr
and
mov
ljmp
gs
xchg
shr
sbb
mov
clc
or
lahf
mov
scas
sub
xchg
add
add
imul
out
cmp
scas
in
pop
cmp
das
jb
insl
sub
lea
pop
outsb
push
xchg
decb
jge
jp
repnz
popa
xor
and
in
dec
jmp
mov
jmp
fldt
in
ja
add
sbb
pushf
insb
repz
sub
fs
imul
sbb
test
pushf
push
mov
jg
addr16
pop
adc
mov
dec
ret
ja
inc
imul
loope
mov
push
dec
jmp
cmp
mov
mov
xchg
push
icebp
jg
inc
rorb
cltd
dec
lret
ljmp
nop
and
mov
fdivr
es
repnz
roll
jno
shrb
lea
daa
call
sub
mov
jp
cmp
or
inc
inc
pusha
inc
jbe
cli
xchg
fcomps
adc
aaa
movsb
shll
inc
fsubrs
xlat
data16
rol
sysenter
cmpsb
std
ret
pop
mov
sub
test
xlat
repnz
call
loopne
or
inc
cwtl
icebp
adc
lea
cmp
stos
dec
into
divb
jnp
ret
and
into
int3
push
push
cbtw
in
mov
scas
and
out
push
repnz
cmpl
xchg
sub
mov
in
fwait
ds
les
mov
in
jne
ds
xchg
add
push
ljmp
mov
test
push
nop
in
add
or
mov
rcrb
test
cmc
mov
pop
nop
pop
lret
lea
addr16
pop
mov
xor
mov
mov
or
or
cmp
dec
mov
jns
clc
jns
insl
cmc
add
scas
jbe
add
mov
cmp
fildll
dec
or
icebp
inc
iret
inc
cmpsb
pop
fidivs
pop
inc
push
mov
mov
xchg
enter
push
or
pop
adc
cmp
andl
nop
mov
cltd
popf
sbb
je
inc
xlat
rorl
inc
mov
jecxz
push
cmpsl
incb
test
clc
or
add
pop
push
lahf
insl
clc
stc
pop
lods
dec
lods
aam
lods
adc
or
inc
ficompl
shll
cs
clc
lods
push
pushl
out
or
sub
arpl
xchg
push
fld
push
add
cmc
pop
out
movsb
cli
lods
push
adc
in
rol
movsb
sbb
imul
or
jge
adc
xchg
adc
add
aad
movsl
aas
jg
stos
jle
jle
imul
add
mov
in
int3
mov
mov
or
mov
inc
rorb
test
dec
popa
scas
sub
add
pop
sub
cmpsl
dec
add
jp
and
sub
fidivrl
pop
rclb
dec
pop
jae
lret
daa
cmp
iret
flds
lock
pop
sub
mov
sbbl
or
xor
gs
mov
mov
inc
stos
and
mov
cmp
dec
lret
hlt
mov
lret
jp
sub
gs
xchg
mov
inc
adc
and
aad
pop
mov
mov
das
cmp
pop
dec
andl
dec
fwait
in
fdivrs
andb
mov
mov
into
cmc
push
mov
inc
fwait
or
leave
dec
sbb
dec
leavew
nop
dec
icebp
mov
lods
les
jmp
or
pmulhw
lock
test
dec
ljmp
loopne
sbb
push
daa
aad
testb
lock
repz
cmp
test
sbb
push
outsl
divl
das
cmp
pusha
mov
rolb
push
stc
cmp
fs
aam
inc
or
fdivp
xor
fistl
repnz
pop
popa
xchg
scas
popa
xor
lods
mov
mov
sub
dec
popf
sub
leave
sbb
inc
push
in
fabs
fdivs
stos
mov
scas
fs
mov
and
push
arpl
pop
fcompl
xchg
ss
mov
sub
shl
pop
push
jge
sbb
and
mov
scas
sub
loope
mov
fiadds
cmp
insl
sbb
or
pop
adc
cmpsb
gs
aad
cs
lret
pop
pop
pop
and
jmp
rcr
push
pop
dec
in
push
mov
into
sub
test
mov
adc
je
addr16
inc
push
js
sbb
adc
push
pop
orl
xchg
xchg
nop
test
lods
fldcw
and
add
lret
sarl
icebp
fscale
negl
ja
xchg
idivl
lret
inc
out
cmpsl
rcl
sbb
sub
lods
adc
pushl
aas
cld
pop
repz
aad
mov
es
xor
shlb
stc
shr
mov
mov
xchg
mov
mov
adc
gs
cmc
pop
sbb
in
jno
jge
loope
mov
mov
test
clc
in
enter
pop
out
mov
inc
aad
add
xchg
xchg
push
jb
dec
ret
cs
mov
cmp
gs
loop
pop
cmp
ja
test
dec
mov
pop
push
push
pop
sbb
xchg
insl
out
in
ss
dec
mov
mov
xchg
sub
jge
push
cmp
xor
cld
jmp
enter
or
mov
mov
pop
dec
imul
into
cmp
mov
push
test
orb
dec
addr16
push
aad
inc
cs
cmp
sbb
jmp
pop
xchg
sub
mov
add
push
cld
aas
sub
ja
jb
add
std
mov
pop
pop
mulb
dec
aas
add
imul
daa
dec
loopne
fsts
pop
push
cmc
xchg
mov
lahf
pop
repz
les
pop
shll
pushf
outsl
sets
jb
adc
cmp
rcr
repz
in
fbstp
xor
lock
shll
ds
jle
cmp
ret
xor
jp
pop
adc
xchg
sbbl
das
pushf
push
shlb
daa
test
pop
dec
rolb
repz
nop
clc
inc
dec
std
dec
sbb
cli
or
mov
sti
sub
or
test
aam
jmp
pop
ror
andl
es
jbe
jmp
cmp
mov
add
push
xor
mov
fdivp
loopne
mov
int3
add
lret
out
xchg
add
add
fisttps
iret
outsl
jo
jecxz
pop
mov
mov
stc
inc
and
sbb
push
sti
inc
mov
push
jnp
fidivrl
ret
pushf
xchg
insl
add
jb
pop
mov
xor
out
lret
push
dec
pop
jns
insl
xor
pop
sbb
mov
pop
pushf
cmp
cmpsl
ret
cmp
sub
fwait
pop
mov
or
mov
push
cmp
cmp
inc
inc
add
xchg
mov
dec
mov
jae
sahf
pop
loopne
or
add
pusha
aas
adc
fcmovbe
clc
add
adc
add
scas
mov
lea
sahf
add
pop
ret
mov
mov
inc
push
pop
lods
sahf
sbb
out
push
in
fsubrs
addr16
push
mov
in
stos
pop
pop
cltd
jns
push
mov
push
fldenv
push
xorl
mov
dec
mov
mov
lds
mov
or
dec
repz
sub
pushf
mov
pusha
adc
add
fisttpl
and
dec
ffreep
sbb
cmc
aad
cmp
or
xchg
repz
lret
daa
xchg
xor
inc
pop
xor
imul
inc
insb
jns
sub
imul
rcl
jbe
jg
dec
fdivr
jbe
and
lds
jmp
fadd
inc
add
repz
sbb
or
push
jae
in
jp
cmp
pop
in
movsb
andl
enter
mov
xor
std
jnp
fisubs
data16
xchg
iret
jnp
data16
aas
or
pop
cli
fsubl
inc
cmp
jns
pop
es
lahf
add
lds
das
push
and
xlat
adc
inc
mov
fidivl
ret
test
sub
stos
enter
mov
data16
push
and
mov
xchg
bound
jo
imul
pop
fcmovu
xor
arpl
ror
mov
mov
push
out
lods
mov
jbe
subl
sub
fwait
test
lods
int
jae
pusha
es
cltd
and
cli
fnstenv
mov
in
add
das
and
xor
in
xchg
push
cli
xchg
dec
push
mov
adc
lea
pop
lods
and
ret
popa
pop
mov
pop
insb
nop
add
push
inc
std
jge
cmp
ret
or
dec
add
mov
inc
fimull
ljmp
inc
ror
sbb
fcmovbe
adc
jl
add
cmp
mov
inc
jno
sbb
insl
cmovge
sbb
sbb
fsubl
adc
test
mov
out
jb
flds
test
frstor
sub
and
and
push
xchg
out
cmp
es
mov
orb
shlb
cld
ss
or
out
clc
mov
cmp
ja
push
and
jns
push
stc
pop
out
jnp
add
aaa
leave
jg
xor
lcall
inc
cli
stos
sub
inc
ljmp
into
pop
sub
dec
adc
das
insl
icebp
xchg
push
inc
xor
js
fs
jb
in
pop
cmc
cmp
dec
int3
sbb
fwait
push
mov
push
or
dec
popa
and
imull
jecxz
sub
pop
sbb
aaa
sub
dec
test
jmp
sub
sbb
shrl
pop
add
mov
mov
mov
sub
sahf
pop
cmp
movb
insl
adc
inc
out
sahf
push
fdivs
addr16
inc
push
pop
inc
in
gs
cli
mov
or
out
mov
aaa
stos
mov
or
mov
sub
sub
cmp
gs
stc
cmp
les
fstpt
jl
loope
sub
xchg
aam
lcall
sub
in
xor
dec
sub
rcrb
inc
jecxz
push
sbb
iret
mov
shrl
and
gs
insb
je
dec
mov
sahf
insb
ljmp
shrb
mov
mov
mov
aad
cmp
pop
aas
mov
pop
add
lods
sbb
push
mov
dec
out
in
jge
adc
inc
pop
cmpsb
sub
pop
repz
ret
or
aaa
pop
push
mov
push
ljmp
int3
outsl
negb
push
outsl
loop
cld
in
je
bound
pop
mov
divb
xchg
aam
adc
cmp
repz
pop
mov
sub
and
fistpl
rol
sub
loop
imul
push
jmp
test
sbb
lea
loopw
pop
lock
addl
and
xchg
and
pop
and
mov
movd
inc
dec
mov
xor
nop
insl
popf
jmp
xchg
iret
pushf
pop
sbb
xchg
lcall
sbb
xchg
jge
mov
cltd
inc
mov
push
jg
sub
movsl
lret
cmpsb
out
jno
out
pop
xchg
or
ficompl
ret
push
jno
cwtl
lcall
mov
pop
xor
clc
fs
movsl
lret
test
je
into
cmp
jg
in
data16
scas
nop
cli
jge
stos
xchg
std
mov
pop
repz
mov
cli
cmp
rolb
scas
jbe
mov
out
xor
test
dec
aad
fists
mov
mov
sbb
jp
adc
mov
inc
inc
adc
xor
out
fnstcw
jae
movl
in
push
push
test
adc
xor
adc
rclb
cwtl
into
inc
fwait
sub
mov
adc
add
mov
cmp
xor
ret
fwait
mov
jae
pop
pop
push
xlat
shlb
mov
stc
mov
bound
push
pop
movl
rolb
ret
xchg
push
push
jns
and
sahf
pop
icebp
jg
pop
push
adc
jns
rcrb
pop
shl
mov
adc
scas
mov
or
push
das
imul
adcl
popa
xchg
xor
nop
sbb
cmpsb
out
ljmp
pop
add
cmp
ror
addl
repz
xchg
clc
sbb
out
mov
cmp
xchg
push
and
push
sarl
mov
and
insb
lahf
push
add
lock
sub
mov
andl
lods
lret
ror
push
repz
bnd
mov
cli
dec
xchg
imul
xchg
xchg
popf
mov
add
ja
daa
mov
mov
pop
jnp
lahf
xor
cmp
jp
in
jg
and
rorl
push
ret
leave
testb
mov
dec
sti
fistl
pop
test
out
mov
or
mov
je
dec
test
inc
sbb
ret
mov
xchg
add
aam
jns
mov
rcrl
pop
aam
pop
pop
adc
rorb
inc
or
cmp
adc
jg
fmuls
js
jnp
data16
fs
rorb
and
roll
xchg
or
test
cs
pusha
shl
push
ljmp
mov
mov
rorl
cmpsl
adc
loope
mov
ret
lods
bound
lods
sbb
int
pop
inc
out
scas
test
xor
leave
or
and
mov
imul
cld
jle
cmp
cmpsl
inc
cli
fs
pop
cwtl
push
cltd
dec
cmp
inc
stos
push
push
ds
cmp
sbb
mov
movsb
xchg
jmp
mov
push
add
cmpsl
cmc
fimull
cmp
xchg
fbstp
add
sub
jb
inc
ret
or
in
cmpsb
xchg
and
mull
loopne
inc
mov
test
push
pop
cmp
movsb
push
out
and
adc
rcr
sub
xchg
leave
dec
pop
loope
rcrb
push
shl
pop
and
jmp
add
mov
insb
mov
std
aad
mov
in
xchg
xchg
int
dec
xchg
pop
ret
mov
sbb
cld
daa
adc
daa
shrb
push
add
pusha
leave
cmpsb
pop
push
les
dec
test
sarb
xor
pop
push
cwtl
mov
sub
xchg
xorb
pop
or
mov
std
push
in
pop
mov
fnstsw
dec
into
mov
ds
push
out
jp
mov
sub
cli
add
lahf
fdivl
sub
pop
mov
xor
loop
idiv
push
mov
stos
push
xchg
test
mov
outsl
xchg
jns
adc
mov
push
fwait
in
mov
or
dec
mov
sbb
das
or
jecxz
fstps
inc
and
and
sahf
or
pop
test
add
inc
ljmp
div
mov
xor
sub
hlt
into
mov
mov
popa
inc
repnz
cmp
push
mov
xchg
jl
fcomps
mov
cmp
sub
mov
xor
cmpsb
mov
call
push
sahf
dec
rclb
movsl
inc
jbe
pop
inc
sti
adc
pop
mov
je
mov
or
jns
addb
lahf
add
into
mov
inc
ja
jb
jbe
out
lods
push
inc
out
ja
hlt
pop
push
inc
cli
shlb
bnd
inc
xchg
lahf
mov
inc
xor
add
out
out
popa
mov
adc
jns
mov
adc
pop
adc
inc
mov
and
arpl
push
mov
xor
ds
mov
xchg
or
rcl
or
xor
adc
xchg
pusha
mov
mov
mov
dec
jmp
std
fwait
add
js
mov
xlat
cmc
fmull
cmpsl
xchg
push
pop
aas
js
cwtl
dec
jle
inc
int
out
dec
xchg
test
sbb
jbe
negl
and
cs
imul
push
movsb
mov
aad
out
outsl
bound
mov
stc
or
jb
xchg
and
sub
icebp
aam
mov
jge
mov
push
push
out
mov
dec
aas
adcl
inc
or
daa
fdivs
add
mov
pop
mov
stc
in
and
xchg
and
lahf
lret
xchg
mov
pop
subl
andb
xchg
cmpsl
jl
test
insb
cli
mov
add
aas
sbb
andb
mov
mov
jns
loop
pop
and
imul
call
arpl
xchg
je
mov
mov
lock
add
adc
fnsave
orl
jnp
inc
push
xor
loop
sbb
sbb
ljmp
add
mov
push
xchg
ret
lea
adc
imul
jp
pop
mov
xchg
out
bound
or
iret
cmp
xchg
xchg
inc
adc
loopne
mov
xor
jae
add
test
in
fs
sub
cld
sahf
fwait
sbb
push
xchg
dec
fdivrl
mov
cwtl
loop
jno
cwtl
lret
and
insl
or
lods
notb
faddl
pop
mov
xchg
cmp
je
jne
xor
mov
adc
mov
inc
or
repz
lds
or
sub
rcrl
add
loop
jbe
pop
add
mov
mov
ret
push
clc
out
inc
icebp
sarb
imul
es
or
cs
push
out
es
in
mov
out
mov
in
shrl
daa
adcb
mov
aas
inc
shr
pop
jmp
sbb
adc
shrb
dec
shlb
mov
fidivs
lea
xor
add
adc
fs
adc
pop
mov
cltd
ja
adc
movsl
insb
lret
aaa
adc
mov
mov
enter
sbb
shlb
mov
jne
enter
xchg
and
or
rcrl
xor
mov
sahf
arpl
pop
cs
inc
shlb
pop
je
jae
inc
fnstsw
sub
jb
pop
sub
insb
out
cltd
stos
adc
push
dec
std
ficompl
adc
cmpsb
cmpsb
sbb
popa
jl
sbb
push
xchg
cmp
ljmp
fdivl
cld
lahf
inc
aam
or
jbe
les
xchg
and
out
jg
jnp
out
ficoms
cmp
jbe
in
xor
pop
sbb
mov
icebp
or
xchg
enter
icebp
les
cld
adc
in
mov
xchg
adc
xchg
dec
outsl
adc
sbb
mov
jb
repz
add
jb
gs
and
cli
cmp
js
sub
test
pop
mov
popf
push
jmp
daa
loopne
xchg
in
repz
cld
ds
and
in
mov
cmc
add
sahf
xchg
ret
test
push
outsb
push
call
outsb
out
push
clc
and
and
xor
cld
push
insb
int
mov
sub
repnz
mov
pop
call
arpl
fcoml
inc
or
jp
das
in
pushf
add
out
repnz
call
sub
sti
cmp
repnz
cmpsb
ret
push
les
out
cmp
jnp
mov
popf
jecxz
or
out
mov
adc
sahf
call
xchg
aam
test
in
xor
jmp
test
in
inc
out
lods
jp
pop
sub
imul
cmp
popf
cmpsb
lds
leave
jb
sub
pop
cmp
sbb
daa
cwtl
outsb
lods
xchg
inc
xorb
sbb
dec
ljmp
daa
out
mov
push
xor
xlat
jns
mov
ds
ds
inc
cmp
push
mov
xchg
imul
mov
and
xor
jmp
test
sbb
lret
xchg
cmp
push
ficomps
sarb
fstps
cmp
xchg
sarl
enter
xchg
adc
sub
scas
ljmp
mov
and
test
adc
test
cld
cmpsb
xor
push
sbb
icebp
mov
out
outsl
aas
or
pop
add
ljmp
lcall
adc
out
into
xchg
std
pop
mov
inc
pop
jmp
pop
inc
inc
xor
aam
mov
sub
aam
and
pushf
mov
push
and
repz
lret
add
aaa
mov
sbb
xor
inc
daa
and
cmp
aaa
roll
xlat
sub
sbb
pushf
sub
xor
pop
xchg
imul
leave
xchg
imul
in
push
pop
inc
mov
and
inc
jmp
push
test
test
je
call
push
inc
ror
outsb
in
xchg
outsb
fisubs
mov
jge
leave
or
xlat
jmp
hlt
into
mov
int3
jmp
or
sbb
out
outsb
mul
into
inc
lods
dec
or
repz
xorl
xor
inc
enter
ja,pn
jmp
cmp
sarl
pop
jg
je
and
or
cltd
jle
call
sub
sub
outsb
pushf
push
cmpsl
lahf
push
adc
mov
pop
sbb
sub
pusha
add
mov
dec
sub
test
loope
imul
xchg
aas
mov
and
mov
dec
dec
and
cmpsb
pop
pop
xchg
inc
inc
fidivl
insb
push
maxps
sub
cmp
lea
sub
mov
repz
jmp
pop
shlb
dec
insb
push
rcr
icebp
push
mov
imul
jle
mov
dec
ret
movsb
xchg
lea
outsl
and
add
filds
mov
sub
int
adc
jecxz
push
pop
inc
shrb
or
popa
add
sbb
mov
test
jmp
fs
lahf
in
cltd
push
sbb
bound
cmp
ffree
xchg
pop
iret
jg
cmp
cld
test
mov
inc
xchg
fucom
xlat
mov
aas
jecxz
adc
adc
jp
ja
rolb
test
movsb
sub
adcl
fadd
call
and
lods
jne
and
pop
ret
ror
nop
sbb
ds
mov
cmp
mov
in
inc
add
sbb
jne
xor
push
mov
push
adc
mov
xchg
lods
mov
cmc
or
rcrb
cmc
out
lock
jns
ret
sti
inc
popf
and
pop
in
xchg
xchg
jbe
xchg
sub
add
lahf
arpl
jae
xchg
mov
in
jne
in
shlb
sub
mov
push
testl
jg
cmp
mov
cltd
leave
add
inc
inc
push
adcl
dec
addb
add
icebp
dec
xchg
push
mov
enter
xor
lods
add
ss
pop
push
inc
fbld
pop
test
dec
sub
push
scas
cltd
cmpsl
xchg
mov
and
insb
out
fdivrs
pushf
cmp
push
gs
lods
cs
xor
fwait
sub
lret
out
lret
pop
nop
xchg
inc
xlat
psubq
push
out
pop
dec
movsb
xchg
clc
lods
enter
push
mov
xchg
clc
push
mov
sbb
mov
push
ffreep
call
stos
mov
inc
stos
dec
sub
xchg
daa
fwait
mov
xchg
leave
bound
rcl
testl
adc
popf
call
in
push
xor
test
fidivs
dec
repnz
jl
enter
into
addr16
pop
sahf
ljmp
stc
mul
mov
lcall
sti
out
js
sbb
mov
pop
add
push
mov
clc
insb
stc
sbb
mov
imul
or
subl
jmp
in
incl
mov
out
sahf
stc
out
lock
mov
inc
push
fistpll
jg
inc
sub
icebp
dec
xchg
ret
loope
into
inc
imul
xor
scas
jge
stos
sbb
xchg
push
loopne
dec
pop
dec
ja
and
inc
adc
cli
fs
cmpsl
jno
leave
add
or
insb
movsb
xchg
sbb
fldenv
test
aad
mov
push
pop
sbb
adc
add
ds
ds
xchg
sbbb
sahf
mov
sub
cs
addr16
mov
jno
jo
and
cmpsb
mov
loopne
or
mov
xorb
mov
sbb
ss
xor
pop
adc
sbb
inc
cmp
pop
and
cmp
inc
xor
pushf
cmp
rcll
daa
xor
push
add
les
fisubl
and
adc
or
aam
add
mov
out
fsubs
test
stos
jle
inc
sub
test
std
js
or
jmp
aam
mov
fistpll
mov
pop
dec
cmp
xchg
jnp
inc
fs
mov
cmp
repnz
xchg
inc
sub
mov
movsb
or
roll
outsl
leave
mov
dec
inc
push
movsb
adc
clc
outsl
xchg
out
mov
ja
adc
push
sbb
jnp
sarb
test
pop
cmp
cli
lds
ret
add
sti
push
cmc
jo
cmp
fs
mov
sti
mov
jno
repz
inc
popf
or
stc
hlt
out
dec
imull
or
xor
jno
pop
push
lcall
adc
icebp
pusha
xchg
jg
jp
enter
cmp
movsb
jbe
mov
and
lahf
jo
lret
sbb
inc
addr16
aas
mov
fcomip
sub
pop
and
loop
movsb
mov
es
cmp
xor
xchg
mov
lret
mov
addl
shl
idivl
mov
add
or
push
addl
leave
int3
rcr
jne
and
cmpsl
push
xchg
xchg
sbb
scas
imul
xchg
jno
mov
int3
std
sbb
dec
sahf
in
xchg
jg
popf
jmp
test
fistpl
jecxz
and
xchg
cs
sbb
and
lock
xchg
test
shll
mov
int3
jmp
cmp
push
roll
aad
rolb
in
mov
lea
and
shlb
mov
inc
or
cmpsb
inc
daa
mov
sbb
in
inc
inc
sbb
cmp
std
das
cmc
data16
xor
lock
adcb
mov
in
push
dec
fwait
xchg
lret
sbb
mov
les
cld
out
add
or
jge
xor
dec
mov
dec
fstl
out
adc
imulb
mov
adc
aaa
sbb
aas
cmp
cmp
or
call
dec
mov
mov
arpl
sub
sahf
pop
fwait
fs
cmp
sbb
dec
out
inc
movsl
mov
outsl
popa
mov
popa
mov
lcall
or
cmc
xor
sbb
rorl
pushf
sub
icebp
jbe
fucomip
sub
add
and
mov
jge
or
mov
lea
out
pop
fdivrl
jo
mov
out
cmp
fildl
ud2
or
mov
aam
xchg
jge
fidivl
test
sub
mov
mov
loop
mov
and
scas
mov
mov
repnz
scas
ljmp
int3
cs
add
mov
cmp
mov
pop
xor
or
ffreep
push
add
shlb
jge
xchg
out
mov
sbb
adc
dec
or
cltd
cmc
pushf
iret
pop
data16
lret
sub
scas
int
test
clc
negb
aam
data16
testb
icebp
loop
test
push
aaa
mov
jge
cs
gs
cmp
adc
mov
fwait
sbb
lcall
bound
or
pop
and
push
or
pop
cmp
gs
aad
fwait
push
nop
xchg
out
push
lds
sbb
js
cmp
call
adc
mov
pop
cwtl
dec
dec
negl
adc
andb
test
int
lret
call
out
roll
int
jmp
jp
fisttpl
shlb
cmpsl
sub
xlat
jnp
jns
mov
out
int3
mov
cmp
lods
and
sbb
ficompl
idivl
fs
test
in
mov
stc
and
sbb
adc
and
cs
lods
sub
ljmp
mov
dec
mov
xlat
inc
iret
imul
mov
sub
jl
mov
sbb
das
repz
ljmp
aaa
pop
mov
pushf
or
popf
imul
dec
adc
mov
loop
cwtl
lods
xchg
stc
imul
into
inc
in
push
cmp
adc
jp
cmp
das
shlb
xchg
push
scas
popf
xor
faddl
std
lcall
push
insb
cmpsb
mov
cmp
fisubl
mov
xchg
mov
scas
jbe
jnp
aam
in
pop
inc
and
ret
mov
jg
scas
bound
dec
or
mov
scas
jl
push
pop
gs
push
jl
xchg
mov
or
mov
in
or
mov
pop
mov
ds
sub
fs
mov
je
xchg
cwtl
xchg
mov
add
or
or
or
repnz
jo
outsl
lahf
mov
xor
jge
inc
pop
mov
bound
and
lahf
and
sbb
inc
sub
sbb
das
adc
lods
cmp
test
std
in
loop
sahf
mov
sub
js
stos
mov
dec
cmp
or
jne
popa
push
sbb
aam
aam
jle
cmp
mov
mov
cmpsb
jp
sbb
arpl
mov
jo
outsb
push
icebp
std
shr
sbb
shll
loope
incl
idivl
cmp
xchg
adcl
mov
push
xchg
out
aaa
fisubrl
mov
out
mov
push
hlt
cmp
inc
pop
jp
ret
xor
shlb
test
sbb
mov
lret
or
or
xchg
lret
mov
fisubl
loop
daa
ficoml
inc
and
mov
pop
cmp
outsb
leave
adc
jle
iret
mov
inc
or
into
decb
and
jg
pop
add
ret
mov
popf
and
mov
test
adc
pushf
out
popf
popa
inc
and
loop
xchg
imul
test
outsb
push
dec
int
jl
mov
add
lret
repz
loope
xor
and
pop
push
hlt
cmp
push
addr16
mov
int3
mov
and
mov
pusha
enter
jmp
mov
mov
jmp
add
test
push
popf
cld
pop
add
rolb
mov
into
or
loop,pn
rorl
outsb
mov
or
rcrb
push
fldenv
cmpb
mov
jne
ds
jns
out
shll
xor
sar
cld
call
loop
lds
or
pushf
out
leave
aaa
sub
hlt
pop
cmp
mov
add
push
mov
mov
sub
clc
sbb
ja
outsb
cmp
dec
dec
enter
nop
push
mov
insl
enter
insl
mov
xchg
mov
xchg
inc
sub
lods
cs
jp
stos
push
mov
or
mov
outsb
jb
addr16
add
in
mov
mov
push
neg
std
xchg
aas
xor
cmpsb
dec
in
insl
out
arpl
lods
sti
or
fisttpl
pop
xor
lea
inc
inc
dec
aad
xchg
pushf
and
pop
jne
adc
jnp
jbe
rcrl
pop
stos
add
mov
iret
jecxz
stc
or
scas
adc
lods
push
or
inc
jne
jl
mov
mov
aaa
jl
inc
ret
mov
pop
loop
pop
mov
push
pop
or
jbe
fcomip
js
lfs
stc
mov
movsb
xchg
or
mov
xor
pop
lds
out
inc
dec
xchg
push
mov
dec
adc
pop
out
fdivrp
pushf
mov
repz
leave
xchg
adc
dec
inc
setbe
add
daa
int
lcall
or
cmp
add
fdivl
cmp
dec
mov
inc
std
jo
mov
inc
lods
fwait
mov
movsl
add
cmp
mov
and
pop
and
pop
clc
out
fwait
pop
call
jge
sub
jnp
mov
test
cmp
jno
xor
xor
cmp
dec
sub
in
mov
xchg
xchg
jno
je
and
dec
int3
mov
or
xorl
dec
mov
enter
push
je
sarl
imul
aad
ljmp
pop
shld
jp
test
xor
inc
scas
popf
aaa
int
inc
mov
sub
inc
pop
cmpsl
lds
scas
adc
sbb
xchg
sub
lock
sti
cmp
scas
inc
or
sbb
dec
out
jb
xor
pop
push
sub
dec
mov
inc
rolb
jge
daa
mov
jnp,pt
push
inc
insl
loope
lahf
jg
leave
push
sbb
mov
jbe
repnz
cmp
fldt
ret
pushf
or
fisttpl
sbb
test
pushf
dec
pushf
mov
jecxz
pop
outsb
inc
xchg
pop
or
sbb
xchg
inc
sub
add
jb
or
repnz
cmc
cmp
sbb
shlb
jae
mov
xchg
add
sbb
repz
fmul
mov
sub
rcll
fisttpl
sbb
mov
or
xor
pop
lods
adcl
rcrl
fcoml
es
into
inc
cmc
icebp
ret
movsl
in
and
inc
push
dec
xchg
cli
test
sub
loop
dec
fcmove
repz
add
out
and
scas
or
ja
and
sahf
cmpsl
jge
pop
or
stos
mov
xlat
stc
jp
adcb
hlt
push
lods
cs
icebp
push
imulb
shll
add
inc
int3
mov
mov
lret
dec
lret
mov
insl
push
adc
loope
mov
jb
mov
jae
nop
fisubl
in
xchg
mov
gs
mov
add
dec
adc
mov
inc
ds
push
call
push
insl
inc
test
popa
xchg
cld
insb
or
mov
push
add
add
ret
jg
xchg
pusha
fnsave
mov
or
bound
cltd
mov
pop
loop
jmp
add
scas
js
into
lds
stos
or
negl
in
sbb
push
sbb
nop
fmull
dec
shlb
lahf
jne
and
jne
js
cld
movq
shlb
fbld
xchg
int3
sub
mov
aam
lcall
loop
sahf
sub
shll
adc
es
inc
or
sub
push
push
or
or
lods
adc
adc
stos
xchg
jbe
mov
addr16
mov
adc
neg
stos
notl
xor
enter
leave
insl
jnp
mov
xchg
in
nop
dec
xor
dec
mov
pop
sbb
ret
jl
mov
aas
das
lds
sub
xor
xchg
rcr
dec
jae
pop
sub
mov
aaa
cmpsb
out
adc
fnstsw
loope
dec
daa
popa
mov
add
cmpb
sub
mov
jmp
add
dec
insb
in
nop
data16
int3
lods
pop
rcll
pusha
and
stos
sub
movsb
addr16
jo
repz
shlb
int3
adcb
jnp
and
xchg
xchg
jmp
faddl
loop
les
cmpsl
aaa
loop
cmc
pop
push
mov
push
sub
mov
inc
mov
add
inc
sub
sbb
add
mov
xor
lock
mov
xchg
test
pusha
jb
in
stos
iret
jg
ret
mov
mov
xor
push
int
fmull
pop
pop
cwtl
lods
mov
inc
xchg
or
movsl
cld
pop
push
test
aaa
outsb
nop
cmc
mov
mov
cmp
xchg
push
add
je
inc
push
loope
lods
dec
pop
xor
pop
mov
int
or
and
aam
loop
sbb
in
imul
jge
fsubrl
es
daa
push
pop
ret
rcrl
clc
pushf
dec
cltd
add
mov
xor
adc
addr16
xor
in
ss
ret
cmpl
push
stos
add
jae
mov
or
mov
js
daa
bswap
jg
xor
fimuls
cmpsb
mov
in
cmp
pop
into
sarb
fnstcw
add
jmp
fimuls
daa
js
push
and
ret
mov
jo
adc
sbb
jae
jb
xchg
mov
sub
mov
pop
adc
repnz
cmc
mov
xlat
frstor
cmpl
mov
scas
adc
popa
imul
mov
push
sub
push
xchg
push
inc
dec
in
cmp
mov
jbe
fs
adcl
dec
push
inc
das
mov
jge
mov
pop
xchg
aaa
xchg
ljmp
jb
pusha
jnp
ljmp
sti
jb
push
sub
jno
mov
sbb
ds
dec
addb
cmp
enter
add
jmp
xor
ljmp
cmp
jge
mov
push
sbb
mov
push
mov
xchg
inc
movl
out
rorb
adc
stos
incb
dec
cmc
scas
adc
pop
pop
daa
cmp
xchg
movsb
shrl
loopne
outsb
scas
adc
mov
lock
cmp
xlat
stc
aam
imul
lcall
pusha
sbbb
push
imul
int3
mov
out
cmp
xchg
decb
xchg
addl
pop
cmpsl
add
out
xchg
sub
testl
jl
adc
add
scas
insb
inc
or
mov
fptan
mov
daa
adc
je
mov
xchg
cmp
push
and
xchg
arpl
dec
rorl
cmp
jl
xor
inc
push
bound
loop
push
mov
mov
push
inc
mov
jmp
popa
xorb
loopne
pop
iret
xor
add
movsl
and
cmpl
daa
movsl
sub
mov
xchg
cmpsb
push
shr
sbb
add
shl
gs
mov
pop
icebp
cwtl
inc
das
dec
fsubrs
aad
mov
and
add
loop
fsubs
sub
mov
shr
mulb
bound
mov
mov
iret
pop
loopne
dec
xorb
xor
pop
mov
mov
stos
cld
shlb
pusha
fsts
adc
push
jmp
je
aad
loopne
fsts
data16
or
lock
arpl
mov
mov
lret
mov
fisttpll
ret
dec
cmpsl
dec
xchg
pop
and
push
insl
ss
es
mov
ret
sub
dec
cs
jmp
fsubl
pushf
imul
popa
js
lds
ret
lahf
add
out
test
ret
sub
test
adc
jno
xor
jle
pop
fld
and
fwait
cli
or
imul
jg
nop
mov
mov
xchg
cld
out
cwtl
push
scas
aam
lea
mov
xchg
jnp
ret
or
dec
xchg
nop
jp
dec
push
inc
cmp
mov
aad
loopne
fcoms
dec
or
or
jmp
dec
dec
pop
and
pop
pusha
push
nop
dec
xor
sub
aaa
mov
cmp
mov
stos
mov
push
loop
xor
mov
jg
jae
adc
and
mov
inc
mov
or
test
mov
scas
subb
jge
pop
into
test
add
roll
xor
and
lods
pop
cli
dec
out
inc
lods
in
lods
inc
sahf
adc
inc
dec
mov
mov
mov
shr
adc
inc
mov
fwait
aas
inc
mov
mov
mov
icebp
aam
dec
loope
or
or
mov
mov
and
jmp
out
sub
inc
ret
jmp
lret
pop
or
xor
hlt
ljmp
dec
mov
test
mov
stc
push
sub
fld
inc
movsb
idivl
pop
jbe
pop
mov
adc
ja
mov
sub
mov
or
sbbl
xor
mov
push
movsl
jmp
cmp
mov
test
ret
scas
cwtl
inc
movsl
inc
fdivrs
add
enter
lret
jae
int3
cmp
cmp
fnsave
mov
sbb
fcompl
mov
mov
out
push
and
dec
mov
out
push
mov
sub
imul
cmp
pop
test
clc
mov
mov
mov
pop
xlat
adc
xor
mov
scas
std
fnstenv
mov
in
aad
inc
hlt
mov
sahf
and
or
jle
shll
mov
fcmovnbe
sub
cmpsb
adc
add
dec
sbb
jo
cmpsl
cmc
into
sub
and
pop
mov
das
mov
int
loopne
lret
outsb
cld
push
xchg
bound
and
sbb
popa
xor
xchg
add
lds
jg
out
aam
out
adc
outsl
bsr
pop
dec
push
mov
pop
mov
mov
inc
test
dec
inc
and
mov
fnsave
popf
mov
mov
and
xchg
jns
cmp
icebp
xor
mov
rcll
cmp
es
xchg
lods
xor
cmp
bound
pop
sbbb
sub
mov
test
adc
insl
dec
add
mov
loope
inc
jae
pushf
test
adc
pop
jp
sbb
add
sbb
ljmp
xchg
and
cltd
dec
mov
sti
jmp
out
cld
xor
ret
push
dec
jne
sbb
outsb
dec
inc
fidivs
lret
and
or
gs
test
mov
fwait
rclb
ret
pushf
mov
pop
add
dec
nop
lods
sbb
fists
test
mov
enter
mov
mov
dec
loopne
sub
rcrb
mov
arpl
loop,pn
movsl
sub
in
mov
push
mov
push
push
adc
movsb
mov
pmulhuw
inc
outsb
out
or
testl
pop
sbbl
fwait
rolb
clc
ds
cs
push
in
lds
lods
es
cld
loope
or
shlb
xchg
ljmp
sub
mov
pop
cli
dec
ljmp
test
push
fmull
fidivrl
pop
int
xchg
icebp
mov
dec
push
jb
repnz
xor
mov
in
xchg
push
repz
cs
jecxz
call
sub
xchg
les
mov
and
sarb
fsubr
xchg
mov
inc
out
cltd
jbe
add
orb
add
leave
sub
inc
enter
jo
fsubs
or
xchg
stc
pop
ret
clc
pop
xchg
xor
mov
mov
jae
adc
or
sbb
aaa
sbb
and
in
dec
movsl
fstps
and
fstpt
data16
mov
jmp
shll
mov
ja
subb
push
stc
push
std
push
dec
scas
push
push
jb
pop
push
test
lret
or
enter
push
fcoms
fists
pop
ljmp
cs
in
fldt
push
inc
push
add
stc
mov
add
shll
fbstp
push
cmpsl
push
adc
mov
cmp
mov
mov
leave
je
add
mov
sub
int3
lods
inc
pop
fistpll
jecxz
xchg
pop
jl
lock
or
sbb
ret
xor
cld
pushf
sbb
sti
mov
xchg
into
sbbb
push
fdivs
xor
scas
leave
pop
stos
add
mov
cld
lds
scas
enter
dec
mov
shrb
popf
and
pop
sti
push
shl
xor
fidivrl
test
cli
jg
push
xor
movsl
call
jbe
sbb
ret
adc
push
addr16
lcall
loopne
add
pop
lahf
mov
movsl
xchg
add
xchg
loopne
sbb
pop
push
inc
cwtl
lcall
dec
xchg
add
fstpt
adc
add
jnp
jne
inc
pushl
push
mov
test
ja
and
dec
cmp
stc
fdivl
movsl
loop
popa
pop
add
out
fcompl
sahf
jae
mov
data16
jg
insb
inc
mov
inc
cmp
mov
push
push
ds
jmp
mov
pop
adc
loopne
mov
rcrl
cmp
dec
repz
imul
cli
test
fwait
test
xor
adc
cmp
repnz
popf
push
in
inc
lea
push
add
shl
fsqrt
xchg
add
mov
call
xchg
roll
jge
lcall
jnp
aas
pop
sub
sahf
in
cmpsl
sub
ja
push
and
aaa
rcr
mov
outsb
lock
fbstp
test
insb
jle
loopne
inc
jnp
loopne,pn
mov
cltd
pop
cmp
push
push
scas
push
mov
cmpsl
outsb
movsb
pop
cltd
scas
sahf
or
add
popf
pusha
mov
adc
andb
roll
mov
and
jmp
xor
pop
fsubl
pop
sarb
pusha
mov
mov
xchg
mov
fabs
out
push
or
sub
push
mov
loope
inc
push
or
divb
inc
cs
dec
and
cli
dec
fwait
and
sub
push
loopne
nop
lahf
xor
push
mov
adc
dec
lcall
rcll
adc
mov
cmp
push
lahf
scas
jbe
lahf
pop
insl
dec
daa
loop
ret
cmp
dec
cmc
mov
push
or
mov
mov
lods
mov
rcll
out
loope
out
and
int
sub
psubsw
and
aad
inc
mov
pop
mov
or
mov
push
inc
data16
dec
inc
push
mov
xchg
sub
dec
adc
testb
cmp
dec
xlat
xor
aad
mov
xor
dec
test
mov
ljmp
mov
frstor
mov
and
and
jo
dec
pop
mov
ret
dec
fnstenv
cmc
ret
insb
inc
jle
test
bound
es
mov
adc
aad
pop
xchg
xchg
or
adc
out
aaa
movsl
ss
ret
ljmp
mov
rcr
inc
or
ljmp
ret
lods
das
jb
in
mov
imul
roll
push
push
mov
sarl
add
push
insl
jmp
adc
xchg
pop
stos
movsb
xchg
sub
mov
pop
push
test
rclb
push
ja
aam
cld
push
fdivrs
pop
fidivrl
out
dec
rorb
adc
ss
cmp
sub
outsl
mov
ficoml
and
jno
jmp
jl
hlt
jg
out
cltd
mov
inc
fsts
rcll
and
movsl
adc
adc
outsb
inc
push
fdivrs
fcoms
add
aam
daa
xchg
lret
mov
pop
popf
xor
aad
sub
aas
jb
fistpll
daa
stos
sub
sbb
rorb
rcl
rcrb
insb
cwtl
shrl
pop
ja
lahf
mov
xchg
movsb
mov
dec
inc
xor
leave
xchg
lds
push
pop
inc
out
sarl
adc
sbb
lea
icebp
shlb
es
or
pop
dec
sbb
mov
mov
xchg
pop
es
fcmovb
and
lods
clc
repnz
pop
push
mov
shll
cmp
das
stos
mov
jge
fucomi
add
sti
mov
mov
mov
fwait
mov
or
pop
mov
iret
faddl
mov
pop
testl
pop
pop
push
xlat
fildl
jo
push
je
scas
inc
mov
mov
aaa
inc
xchg
imul
jns
loope
mov
mov
jle
call
xchg
cltd
or
aam
and
sub
sti
rorl
adc
int
cld
mov
fcompl
and
xchg
mov
mov
stos
call
xor
pop
sti
into
sti
lods
cmpsl
pop
shrl
xlat
dec
cmp
xor
mov
jp
je
push
push
pushf
push
mov
adc
insb
or
push
adc
push
cmc
push
xchg
sub
nop
push
jb
jmp
mov
js
movsl
jae
out
xchg
mov
jg
int3
xorl
adc
jg
repz
adc
add
nop
adc
xchg
inc
push
jns
pop
ja
xor
sub
ret
and
movsb
mov
adc
push
xor
dec
test
test
pop
sbb
lods
daa
mov
sbb
arpl
icebp
mov
addr16
xor
mov
inc
scas
lds
add
mov
xor
es
xchg
sbb
sahf
psrlw
movsl
je
fnstsw
xchg
shl
mov
pop
je
inc
push
xchg
outsl
popa
stos
into
xor
mov
int
out
lret
inc
or
orb
mov
test
push
lcall
push
lret
xor
ret
js
dec
lret
aam
or
aad
clc
lods
mov
addb
cltd
mov
jl
sbb
adc
mov
jg
nop
cmp
imul
cmp
xchg
jns
push
inc
adc
cs
and
sbb
sub
aaa
add
and
cwtl
jp
and
movsb
test
icebp
xchg
ror
push
movsl
push
sar
popf
negb
mov
mov
aaa
mov
enter
and
cs
cwtl
xchg
ret
shll
bound
lock
mov
mov
sbb
pop
data16
jno
inc
test
and
xchg
cmpsl
push
jnp
mov
ja
push
mov
stc
xlat
cmp
data16
add
jmp
xor
jl
sub
js
bound
xor
stos
pop
pop
cmp
les
aam
outsl
inc
in
aam
enter
mov
jns
dec
das
stos
insl
ret
mov
ret
sub
inc
aam
cmp
popf
jg
in
push
lea
int3
mov
aaa
addl
sbb
mov
fistpl
cmpsl
push
jno
movsl
aad
nop
lods
and
cwtl
out
pop
cwtl
sbb
inc
aaa
pop
xor
pop
and
test
sarl
jnp
nop
jae
mov
mov
mov
cltd
into
in
movl
sbbl
sbb
dec
cli
rorl
xchg
dec
popa
int3
xchg
das
mov
push
jne
or
pop
push
push
lock
adc
inc
lods
lock
dec
fistl
mov
xor
push
jo
inc
aas
addr16
scas
jnp
adc
shr
iret
dec
repnz
xchg
addr16
push
loop
testb
rolb
lcall
testb
xor
shlb
adc
loope
and
addr16
js
daa
test
mov
fwait
in
not
xor
inc
sbbb
pop
sbb
cmp
mov
cld
jns
xchg
out
jl
js
insb
inc
aas
push
idivb
imul
fstps
jae
adc
sbb
pop
ljmp
nop
cmpb
cmpsb
aad
ss
sbb
mov
jns
or
cmp
shrb
aas
mulb
and
insb
xchg
or
in
cmp
cmc
sbb
jl
pop
inc
mov
inc
adcl
xchg
mov
mov
nop
insb
out
dec
pop
push
ja
leave
jne
das
xchg
sti
cmp
test
sahf
mov
js
mov
loop
add
push
aas
push
push
ret
inc
pop
or
cld
dec
sub
stc
xchg
fdivl
mov
rcll
push
lret
cmpl
testl
shll
xor
lock
out
out
mov
mov
loop
es
cmp
dec
mov
pop
add
out
lods
pop
lmsw
repnz
mov
add
xchg
xchg
mov
cmp
jne
imul
scas
sub
movsl
mov
add
mov
idivb
xor
loop
xchg
add
divb
ret
ds
jle
push
mov
daa
aas
dec
movsb
jbe
addr16
ljmp
imul
adc
scas
xlat
inc
bound
addr16
inc
cli
jbe
sbb
xchg
es
add
jno
pop
sahf
xor
mov
insl
adc
aad
pusha
shll
push
xchg
mov
lret
jmp
push
out
cltd
dec
adc
lret
mov
add
push
inc
mov
ja
js
insl
pop
fbstp
xchg
sbb
mov
xor
out
ret
mov
xchg
shl
push
leave
adc
movsl
std
cwtl
and
adc
les
insb
mov
push
mov
mov
mov
enter
push
test
dec
pushf
test
pusha
outsb
jecxz
mov
adc
dec
adc
cld
mov
mov
jge
shr
inc
add
and
sbb
fwait
or
push
jbe
js
pop
or
scas
fmull
cmpsl
adc
mov
in
mov
sub
stos
fwait
xor
pop
and
push
cwtl
insb
cmp
test
lahf
adcb
mov
and
lahf
cmp
ljmp
mov
ds
sub
inc
xchg
ja
cmp
sub
inc
stc
push
sub
dec
stos
mov
push
xchg
and
push
jne
mov
mov
lahf
jb
cmp
shll
dec
mov
sub
jae
and
or
xor
pop
add
push
inc
fnclex
mov
test
dec
mov
add
or
or
fwait
pop
fxam
in
fidivrl
int3
cwtl
and
inc
lahf
aam
popf
jmp
pop
adcb
mov
testl
dec
mov
inc
mov
fsubr
jno
pop
lods
add
xchg
jle
sub
inc
add
or
xor
push
sbb
mov
js
sbb
cmp
aam
adc
inc
inc
movsl
das
ficomps
arpl
dec
mov
cli
pop
or
icebp
jb
push
sbb
xlat
jg
mov
lods
push
fcomip
mov
inc
es
fbstp
fcmovnu
push
std
mov
inc
mov
out
out
movsb
or
xchg
mov
mov
fs
pop
sub
lea
cli
das
icebp
aaa
inc
addl
jno
xor
or
scas
sub
test
mov
ficompl
mov
sahf
xlat
int
and
push
adc
xor
mov
leave
enter
std
dec
pusha
clc
cmp
jle
lahf
adc
mov
push
mov
out
pop
jp
test
inc
sbb
push
in
fdivrs
aad
sbb
mov
cld
and
inc
cs
loop
out
jbe
inc
notb
sub
sub
cltd
ss
lret
push
xor
lock
hlt
inc
dec
xchg
std
dec
mov
lahf
ret
loop
pushf
andl
jp
call
jecxz
adc
dec
xchg
aad
mov
sbb
and
loope
insl
jne
subl
aaa
dec
xor
lea
outsl
pusha
mov
xor
pop
subb
jns
pop
pop
pop
filds
push
clc
dec
mov
cmp
lock
ljmp
push
daa
je
xchg
fs
cmp
fidivs
xor
push
dec
movsb
xor
xor
sub
mov
test
inc
ljmp
std
in
mov
scas
imul
dec
mov
adc
inc
cs
fsubrs
lahf
dec
iret
andb
push
xor
aam
rcrl
lock
mov
cmp
stos
adc
xor
bound
mov
dec
jns
cmp
repz
rclb
xor
cmpb
jg
lock
addr16
dec
sub
sub
enter
in
lcall
sub
aad
repz
xchg
fnsave
push
push
fisttpll
sub
push
mov
repz
adc
ret
sbb
inc
or
mov
jecxz
xchg
xchg
ret
fstl
xor
xor
std
xor
popf
mov
xchg
sub
and
inc
jecxz
mov
push
mov
jge
fildl
in
xchg
cmp
push
sahf
mov
imul
adc
aas
or
or
cmpsl
jle
in
lcall
sbb
push
adc
sub
pop
mov
add
shll
nop
repz
adc
enter
enter
jg
mov
and
inc
test
ficoms
pop
lds
mov
repz
fisttpl
jmp
sub
cld
jmp
cmp
lock
and
fwait
adc
stos
push
iret
lret
mov
nop
cli
cmp
andb
mov
ljmp
or
mov
adc
mov
xor
push
pop
fistpl
sub
int3
aaa
xchg
push
xlat
out
sbb
mov
and
or
in
mov
int3
mov
jge
std
popa
sub
jno
mov
xchg
test
or
dec
or
dec
inc
xchg
shlb
aad
std
pop
arpl
sbbb
mov
xor
dec
jle
add
pop
push
test
xlat
ja
mov
dec
sahf
mov
xchg
loopne
push
inc
insb
or
loope
and
cli
rorb
shl
cld
cli
orb
out
adc
xchg
sbb
or
scas
cmp
loop
popf
loope
fsubs
cli
pop
int
or
loop
add
dec
mov
cmp
or
cmpsl
sbb
xor
pop
dec
mov
mov
imul
jnp
jno
aaa
inc
mov
stos
scas
loopne
out
add
sti
les
push
mov
inc
ja
dec
repnz
lods
cmpsl
pop
sbb
sub
stc
pop
lods
inc
mov
andb
push
lea
jle
in
or
add
cwtl
daa
ret
mov
sub
imul
outsl
and
mov
pushf
imul
arpl
inc
sub
xlat
loope
adc
sbb
andb
repnz
test
lret
mov
or
push
lahf
insl
lsl
nop
je
sbb
movsb
ljmp
or
ja
into
xor
enter
fwait
push
cli
sub
xchg
dec
mov
hlt
mov
sub
loop
arpl
sbbl
xchg
scas
mov
jp
sub
outsb
mov
stc
out
shll
pop
stos
adcl
push
push
dec
sub
popa
into
dec
and
stos
or
sub
jp
lods
push
stos
fcmovne
notb
adc
cmpsb
fsubrs
andb
les
cmp
adc
jae
mov
sti
cli
sbb
fstpt
dec
ljmp
jne
sbb
stc
pop
jl
mov
aad
mov
call
std
cmp
testb
dec
fnstcw
fidivl
pop
ret
lds
xor
fwait
loopne
hlt
pushf
rcr
idivl
aad
dec
movb
inc
cmpsl
mov
arpl
inc
cwtl
adc
inc
add
sbbl
inc
mov
cld
bswap
jp
adc
mov
push
push
jae
sbb
mov
dec
mov
in
rcr
ljmp
popa
inc
iret
repnz
gs
dec
fldl
push
call
dec
jo
pushf
sbb
repz
lock
imul
dec
adc
mov
andb
cmp
iret
mov
fisubrl
add
inc
mov
cmp
mov
fisubrs
ljmp
adc
fldl
xor
and
jg
add
notl
imul
add
lret
push
icebp
cltd
insb
push
mov
test
sbb
inc
sarb
cmp
pop
mov
mov
pop
sahf
fdivp
out
test
adc
stos
jle
loopne
fnstsw
insb
push
stos
xorl
sarl
rcll
data16
push
rclb
fcmovnb
push
inc
xchg
push
sti
xor
lret
es
jle
dec
jnp
mov
leave
mov
sub
stc
ss
mov
iret
std
adc
int
lret
lret
xchg
stc
mov
dec
stc
aad
mov
dec
cmpb
push
mov
mov
jl
cs
mov
dec
nop
pop
xor
inc
jno
fistpll
jno
das
push
cmpsb
enter
fisttps
sub
cmp
nop
rorl
js
inc
cmpsb
mov
push
je
rorl
leave
ficoms
mov
test
imul
ja
rcr
int3
pop
cmpsb
cmp
orl
push
imul
push
iret
movsl
mov
xchg
hlt
scas
jge
mov
sarl
leave
jl
dec
push
dec
mov
hlt
jecxz
pusha
ss
mov
xchg
scas
sbb
in
dec
inc
xchg
xor
sbb
dec
repz
fstpt
mov
stos
sbb
lock
lret
das
adc
bound
sub
mov
aas
negl
iret
imul
sbb
fwait
lret
mov
mov
mov
arpl
call
push
fidivrl
jle
cld
xchg
mov
repnz
pop
arpl
push
jg
add
or
outsl
aad
leave
mov
adc
xchg
mov
mov
jl
add
sti
jb
mov
bswap
mov
ret
stos
mov
repz
sbb
popf
sti
inc
add
cwtl
lret
flds
iret
pop
cmp
mov
push
vphaddubw
cmp
fnstsw
dec
lods
mov
pop
rcrb
repnz
pop
jp
int3
lea
adc
test
add
xchg
mov
mov
mov
out
adc
or
push
mov
xchg
pop
xchg
lock
mov
xchg
popa
lods
cmp
pop
psubsb
sbb
clc
scas
push
add
or
in
cld
lcall
in
dec
and
mov
add
mov
popf
scas
lds
jb
fbstp
sub
lcall
mov
push
xlat
pop
mov
pop
xorl
mov
mov
paddsw
rorb
adc
arpl
in
mov
int
xchg
imul
push
lret
xchg
jge
pop
mov
insb
fcoms
fs
jecxz
int3
add
arpl
sub
or
dec
orb
jnp
imul
mov
jo
xor
inc
gs
jmp
das
in
mov
push
sbb
js
int
sbb
mov
pop
push
and
bound
aas
push
mov
rorb
in
lds
sahf
int3
insb
xor
dec
sub
adc
pop
xor
pop
xchg
add
ss
cltd
lods
insl
xchg
sti
sub
mov
add
out
dec
mov
add
ds
push
ret
nop
jg
and
add
in
nop
push
lret
dec
jnp
jmp
fcomps
sbb
cmpl
xor
and
push
xchg
mov
popf
shrl
mov
inc
xchg
jb
jnp
out
inc
mov
mov
xchg
or
mov
addl
test
ffree
nop
push
pop
cmpsl
hlt
adc
lock
jle
mov
iret
fsubs
push
ljmp
mov
jae
imul
lods
iret
add
aas
insb
jp
dec
add
cmc
xchg
mov
out
push
mov
std
lcall
rcrl
aas
lods
and
adc
ja
add
test
and
fdivl
call
cmpl
dec
mov
mov
out
imul
or
dec
ret
mov
in
pop
push
out
shll
arpl
scas
mov
pop
scas
shr
pop
push
mov
push
adc
scas
mov
test
pusha
xchg
xor
ficompl
ss
stos
sbb
push
mov
test
push
mov
mov
xor
mov
push
push
dec
dec
imul
les
outsb
lock
inc
push
cmpsb
jnp
jb
decl
pop
xchg
cwtl
mov
pushl
pop
dec
je
out
push
stos
jp
jno
hlt
pop
sub
insl
mov
add
sbb
scas
pop
mov
je
mov
dec
add
mov
push
ds
adc
loopne
es
test
imul
ret
sbb
and
push
add
lcall
mov
data16
aad
pop
push
nop
lret
sub
lret
or
std
or
sbb
movsb
pop
add
test
add
add
or
and
jns
loopne
sar
add
mov
movsl
gs
repnz
cld
push
dec
lea
lahf
out
popa
out
das
nop
jbe
je
xor
inc
dec
inc
sub
xchg
adc
sub
test
cmp
pop
rclb
mov
adc
inc
loope
out
adc
setb
mov
push
std
stos
lahf
mov
lds
sub
ja
sub
insb
sub
inc
sbb
pop
ja
lea
add
sbb
jo
insl
add
jge
push
ret
mov
sub
cs
movsb
sub
mov
ljmp
xchg
pop
xchg
insl
imul
mov
push
addl
mov
jp
pop
adc
and
aas
sarl
mov
add
and
pop
test
mov
cmp
push
dec
push
cmp
cmp
and
xchg
frstpm(287
ret
das
mov
ret
and
mov
add
test
test
into
lret
fstpt
scas
shll
xchg
jbe
adc
mov
jno
mov
aaa
sub
mov
adc
out
jecxz
sbb
insl
in
dec
mov
ret
or
cmp
out
adc
add
xlat
sub
std
mov
dec
sub
addl
mov
punpcklbw
inc
and
sarb
pop
sub
rcll
pop
sub
jecxz
adc
push
jnp
jmp
sti
lds
pop
lcall
addr16
xchg
repnz
dec
push
inc
int3
mov
mov
dec
ret
cltd
xor
insl
add
repnz
mov
mov
cld
pop
add
scas
xchg
mov
add
cwtl
push
ds
xor
jl
add
dec
xor
push
sbb
xor
cltd
mov
ret
jae
divl
sti
popa
push
lcall
mov
test
scas
push
fldln2
jmp
ds
adc
cmp
sarb
rorb
ds
bound
jmp
fwait
aaa
and
pop
inc
mov
inc
aam
sub
je
and
ljmp
jae
xchg
pop
pusha
add
sub
jp
call
mov
or
jne
pushf
nop
aas
mov
pop
and
mov
sbb
popf
inc
repnz
sub
push
stc
lret
mov
sbb
push
mov
aaa
jl
add
mov
jl
repnz
or
add
xchg
andl
push
mov
movq
xorb
mov
imul
fs
xlat
inc
inc
lock
sub
addr16
add
adc
imul
jge
fstl
pushf
pop
ret
aad
push
lret
jo
jno
cmp
test
push
pop
xchg
outsb
loop
dec
cmp
pop
popa
and
jge
sub
ret
mov
mov
fimull
and
xorb
fiaddl
orb
into
mov
nop
test
sbbl
clc
mov
sahf
les
sbb
mov
mov
aaa
mov
sbb
andl
push
xchg
push
xchg
cmpb
lock
or
test
rorl
rorb
pop
cmp
rorl
jmp
sbb
push
pushf
dec
adc
dec
outsb
push
jle
mov
push
jmp
add
push
xchg
xor
adc
dec
ror
mov
repz
lock
push
adc
push
outsl
stos
bnd
xor
pop
push
data16
sbb
mov
in
dec
jmp
sub
test
xchg
add
addr16
mov
adc
mov
xor
sub
sahf
mov
mov
adc
inc
lea
sub
int3
add
iret
sub
add
cmp
push
pop
push
adc
push
inc
shrb
jae
or
and
dec
mov
lods
jg
jl
pushf
aas
jnp
je
mov
aad
xor
sbb
iret
out
insb
mull
fcomp
and
leave
test
test
cmp
and
movsl
jg
or
cltd
add
xor
pop
mov
add
xchg
daa
dec
sbb
pop
das
ficoml
xor
pop
cmp
sub
mov
mov
test
push
cmc
bound
or
test
aaa
xchg
dec
les
dec
sbb
into
pop
xchg
and
or
push
or
popa
cmp
rcll
cli
das
gs
sbb
or
add
andl
sbb
push
adc
jg
fisubrs
dec
ljmp
sbb
adc
aas
mov
in
push
repnz
or
iret
pusha
sbb
pop
mov
mov
out
push
add
xor
fcmovne
loop
outsl
pop
or
inc
out
sbb
mov
mov
shr
fwait
push
rcrl
xor
cmp
or
jb
dec
jmp
mov
cmp
xchg
inc
cltd
jmp
fsub
and
fistpl
adc
out
mov
hlt
mov
lcall
mov
js
orl
jge
stos
lods
or
cmpl
mov
cmp
in
lret
sbb
mov
popa
in
sub
out
mov
bnd
sbb
dec
jns
loope
std
jno
vmovd
cs
push
mov
cmp
pop
fsubs
dec
or
jns
or
sbb
aas
xchg
test
loopne
jl
movsb
test
adc
out
out
adc
leave
pop
push
xchg
lea
repnz
pop
jp
xor
in
mov
cmp
adc
add
imul
pop
push
out
add
mov
shll
and
mov
and
mov
sahf
imul
mov
out
fdivl
mov
imul
or
negl
jmp
xlat
orb
testl
gs
xchg
ret
cmp
mov
in
shll
sti
repnz
jle,pt
fstpt
pop
and
in
mov
pop
push
call
js
sub
lret
movb
aam
pop
pusha
imul
cmpsb
sahf
push
push
fwait
stos
jbe
jns
cltd
inc
push
mov
clc
xor
mov
push
popa
sti
test
sub
jmp
mov
xchg
je
shlb
dec
das
movsb
dec
roll
and
jp
sti
movl
dec
movsl
pop
cli
and
lock
sahf
ret
jo
lock
test
xor
sub
ss
mov
sahf
mov
sarl
outsl
cmp
xor
jne
jge
adc
jg
push
int3
jg
mov
add
mov
cmp
cmc
js
or
lret
mov
mov
shl
adc
fsubrs
popf
lock
rclb
cld
dec
in
add
or
roll
outsb
or
incl
clc
pop
add
push
lahf
fiadds
push
aas
mov
aad
push
popa
movsb
out
call
push
into
inc
std
enter
int
loopne
lods
mov
fisubs
sbb
or
lods
std
js
xchg
ss
arpl
xor
lret
cltd
lock
nop
mov
jle
stos
mov
ds
aad
push
jle
mov
cmc
adc
ss
dec
add
mov
sub
ljmp
xchg
jp
jo
mov
pushf
jnp
lods
add
ss
inc
mov
push
jp
mov
hlt
stos
sahf
dec
lahf
scas
les
jle
in
pop
mov
push
fdivrs
stos
push
dec
mov
add
test
add
sbb
mov
mov
dec
notl
push
arpl
int3
pop
mov
or
fcmovu
ja
push
cmpl
idivb
lret
xor
icebp
xchg
bound
mov
mov
test
outsb
lahf
mov
sub
cmp
in
xor
mov
insb
sbbl
push
xor
xchg
jle
add
rclb
mov
jecxz
cmpsb
test
addr16
sbbb
mov
hlt
mov
mov
lds
add
mov
sarb
push
test
pushf
addps
sub
xor
arpl
incb
divb
jl
inc
push
mov
out
mov
sub
rcr
and
aas
dec
mov
pop
rcll
hlt
hlt
cmp
lods
mov
pop
sbb
test
pop
shl
mul
jo
addr16
pop
dec
jae
loope
push
adc
push
xchg
cli
add
in
pop
ss
xchg
dec
cs
data16
push
repz
mov
inc
ret
xchg
mov
ss
adc
idivl
add
pop
jmp
shlb
sbb
rcrb
sub
das
aad
pop
mov
in
dec
jmp
mov
push
mov
pop
loope
add
sbb
ficomps
cmpsl
jmp
pop
cwtl
stos
outsb
pop
mov
jl
leave
rorl
aad
inc
repnz
mov
or
mov
pop
loopne
arpl
jb
lods
popa
inc
mov
mov
aaa
stc
arpl
inc
repz
jle
imul
lahf
insb
sar
cld
mov
mov
aas
mov
xchg
fldl
lret
stos
adcl
loop
push
inc
aaa
aas
and
jp,pn
dec
repnz
mov
jg
pop
pusha
movsb
pop
cmp
fsubrs
cltd
loopne
adc
xor
xchg
out
aam
sub
inc
inc
cmc
scas
mov
push
aad
inc
loopne
mov
shr
push
sbb
shrl
call
hlt
pop
repz
xor
xchg
inc
and
inc
adc
or
inc
sbb
or
je
cwtl
loope
cwtl
push
jp
push
cmp
leave
mov
std
in
xlat
push
imulb
inc
std
push
mov
mov
les
mov
andl
cmp
popf
adcl
mov
pop
adc
in
xchg
jne
cwtl
jg
inc
movsb
jmp
loopne
insl
push
fisttps
pop
lret
jne
cmpsb
jl
decl
sbb
clc
pop
insl
sub
mov
mov
xchg
lret
js
cld
inc
jne
cli
icebp
jle
add
cmp
cmp
test
or
cmp
xor
int3
pop
push
mov
push
loope
jns
push
fdivp
pop
arpl
xor
cmc
jle
sub
pop
sbb
mov
adc
notl
pop
cmp
inc
mov
mov
lret
shl
mov
jge
add
xchg
popf
pop
loopne
or
fmuls
add
stos
mov
popf
jbe
cmc
and
jecxz
xchg
sbb
lret
lea
aam
or
push
lock
pushf
popf
pop
pop
sbbb
dec
dec
int3
mov
loopne
push
shll
cli
mov
sub
and
mov
in
jno
jg
shlb
or
popf
cmpsb
data16
lods
jnp
scas
jns
pushw
sub
push
xchg
push
push
out
rcrb
outsb
int3
ret
xchg
sbb
push
sarl
mov
and
xor
mov
das
fnstsw
stos
aam
xor
jle
fdivp
daa
imul
mov
xor
xchg
in
xchg
enter
jns
cmp
insb
adc
cltd
add
push
cmp
decb
inc
add
pop
bnd
mov
xchg
out
out
ljmp
sub
cld
or
xchg
fisttpl
cmpb
sbb
or
fdivp
pop
test
in
sub
icebp
adc
cmp
rcll
pop
cmp
jb
cmpsl
inc
adc
dec
jb
add
pop
movsl
mov
mov
mov
ret
sub
xchg
mov
or
adc
movsb
aam
fcompl
test
xchg
and
inc
sbb
pop
pop
cmp
pop
xchg
fldcw
mov
xor
or
push
fcmovnbe
cmpsb
ret
adc
insb
xchg
cmc
mov
dec
adc
shrb
sbb
push
call
xor
scas
dec
lods
movsl
mov
mov
in
lret
and
adc
sub
addb
pop
mov
in
negl
mov
ret
fs
or
push
lds
cld
add
dec
or
bound
lods
arpl
mov
icebp
ja
inc
cmpsb
popf
popa
sub
lods
xchg
and
test
mov
aam
iret
or
push
test
enter
adc
mov
pop
pusha
in
out
imul
jmp
mov
push
xor
adc
vmulpd
cmp
xor
out
inc
minps
outsb
rclb
push
mov
stos
inc
and
adc
sbb
sbb
jg
lahf
dec
mov
cmp
das
popf
jmp
or
lods
adc
mov
jo
inc
add
push
call
push
stos
rcr
xor
jns
loope
jg
push
or
testl
xor
adc
jnp
mov
jle
fcompl
subb
mov
add
inc
mov
jnp
imul
popa
leave
xor
movsl
clc
mov
shrl
xor
lahf
pop
bound
cs
jecxz
inc
mov
sbb
adc
daa
adc
stc
and
xchg
xor
cmp
xchg
adc
cs
mov
imul
dec
aad
xchg
outsl
sti
scas
inc
mov
lret
add
push
inc
fwait
into
jbe
rcr
ret
aam
add
adcb
test
orl
mov
rorl
jge
dec
rclb
or
ja
dec
sbb
in
rolb
fistps
lods
jg
call
or
stos
xor
or
mov
mov
cli
xor
test
pop
cmp
sub
cmpsb
movsb
lret
insb
xor
decl
es
add
cs
aam
add
mov
movsl
push
lret
add
cmp
pop
pop
sub
xchg
sbb
arpl
pop
push
stc
lret
inc
push
test
push
bound
and
fs
in
cmp
std
enter
and
mov
adc
vmread
jnp
lahf
push
scas
iret
sub
xorb
popf
adc
lret
pushf
sub
insb
es
fistpll
sbb
sub
or
fwait
jmp
add
cwtl
xor
icebp
or
mov
popa
add
subb
xchg
xlat
and
outsl
jo
dec
cmc
fs
xchg
fnsave
cmp
adc
inc
hlt
rolb
or
pop
aaa
cmc
sbb
adc
sub
aam
idivl
loope
sub
lods
movsl
xchg
nop
cmp
sbb
push
test
mov
or
xchg
push
stc
push
dec
mov
add
dec
cld
outsb
in
rcr
rorb
jnp
add
sub
mov
adc
loope
jp
mov
adc
cmp
sbb
popa
inc
das
div
jmp
mov
in
jecxz
out
fwait
sbb
add
fidivrl
mov
sub
popf
rcrl
sbb
sbb
fucomi
and
and
jle
mov
je
fnstcw
lcall
cmp
int3
cmp
cmp
pop
shl
add
lcall
jbe
xor
mov
push
inc
sbb
or
repnz
outsl
pop
or
aaa
fnsave
adc
mov
jns
loopne
inc
out
mov
in
dec
mov
pop
xor
sarl
in
sub
loop
sub
dec
ficomps
sarl
or
mov
or
stos
xor
decl
sbb
shl
bound
loopne
cli
cmp
cmpsl
nop
pop
sub
in
pop
mov
or
js
lds
sbb
xchg
mov
mov
adc
mov
or
repz
lea
cltd
subl
push
in
cmpsb
jno
sti
mov
lods
pop
std
inc
cmc
out
mov
lea
adc
mov
insb
xchg
outsb
in
in
xchg
insl
inc
cmpb
out
scas
insb
dec
pop
jl
mov
push
ljmp
pusha
fldcw
or
push
mov
sbb
pop
fildll
cmp
out
loope
cmp
push
push
inc
add
sub
adc
lcall
mov
mov
mov
fnstenv
pushf
cmc
jp
jns
mov
mov
movsl
lret
aam
adc
mov
lret
inc
outsb
xor
lods
pop
xchg
mov
fimuls
lea
mov
sub
out
je
test
inc
aas
in
into
and
xchg
mov
popf
pop
or
inc
mov
into
leave
push
lret
enter
xchg
sub
fs
repz
sbb
insl
inc
leave
es
jnp
xor
aad
cmp
hlt
push
lods
mov
inc
jmp
jnp
or
bound
int3
and
and
mov
dec
xor
rolb
cmp
call
mov
push
cmp
outsl
lret
and
divb
xorb
in
rcll
lods
mov
add
adc
popa
adc
cmp
nop
mov
arpl
mov
test
mov
out
xchg
orl
pop
mov
cli
into
mov
int3
sub
sbb
and
pushf
add
mov
dec
adc
pop
mov
push
add
jo
sti
data16
shrl
pop
pop
pop
icebp
in
repnz
jp
sbb
and
jnp
out
sbb
or
les
testb
cwtl
sub
xchg
mov
addb
mov
sub
add
dec
popf
xchg
jo
xor
cmp
cmp
sbb
jno
xchg
inc
movb
addr16
mov
pusha
xor
cmpsb
mov
pop
inc
or
daa
lods
add
sbb
mov
imul
test
mov
sbb
shr
sbb
mov
sub
add
mov
xchg
popa
testb
sarb
sahf
out
xchg
icebp
push
mov
jmp
in
or
adc
outsb
sbb
fistps
adc
jo
fdivrs
clc
mov
or
sbb
push
push
ret
rorb
into
mov
ljmp
xchg
pop
lret
test
rorl
lcall
cmpsl
fcomip
or
mov
ss
mov
mov
mov
jo
mov
je,pt
das
mov
jne
mov
sub
mov
fbstp
inc
mov
imul
shrb
mov
xchg
mov
jnp
mov
sti
scas
popa
xor
je
pop
out
test
mov
jge
mov
adc
cwtl
mov
sbb
cld
add
mov
movsb
add
sarb
rclb
pop
mov
les
cmp
push
imul
pop
loopne
xchg
pop
lahf
dec
movsl
dec
and
xlat
xchg
pop
pop
cltd
mov
lds
mov
lret
data16
mov
push
inc
cmp
jp
pushf
outsl
movsl
xchg
xchg
jge
ss
jl
xchg
mov
jae
cld
xchg
jae
sub
vpackuswb
fiaddl
sub
aam
and
jnp
popa
mov
out
add
push
in
subl
rol
movb
and
jne,pn
mov
popa
dec
mov
ss
int
emms
imul
gs
jno
cmp
sub
sarl
ficomps
pop
shl
cmc
pop
push
dec
mov
mov
rclb
dec
mov
jnp
jb
pop
lret
inc
das
in
data16
pop
insl
inc
adc
stos
stos
mov
cltd
clc
stos
pop
sub
fadds
clc
mov
leave
fsub
ss
sub
pusha
adc
adcl
popa
shld
xchg
scas
cld
lahf
aas
in
adc
dec
shll
dec
or
pop
mov
out
int3
xor
adc
loop
pop
stc
dec
pop
mov
dec
setle
mov
cmpsl
or
sbb
jne
cmc
push
addr16
jecxz
jmp
shl
leave
sub
add
arpl
les
aaa
add
cmp
call
push
imulb
shlb
lods
push
pop
loope
pop
outsl
gs
cmc
in
nop
aad
pop
sbb
je
fbld
lea
das
sub
xor
in
mov
mov
shr
popa
pop
nop
xor
rorl
jb
cmpsb
mov
outsl
jecxz
in
jbe
mov
mov
inc
or
fisubl
imul
dec
jg
cmp
xchg
inc
data16
insb
xchg
lea
pushf
fs
cmp
mov
xor
repz
xchg
xchg
insb
sub
or
cltd
js
cwtl
test
xchg
xlat
pop
xor
pop
push
rcrb
pushf
cli
mov
icebp
iret
cmpl
std
ja
nop
push
xchg
imul
subl
mov
pop
xchg
adc
jmp
dec
sbb
daa
xor
pop
subb
jbe
es
aas
push
adc
push
mov
int
mov
or
mov
fmull
call
push
xor
mov
mov
inc
sub
test
xchg
mov
pop
push
mov
inc
xchg
xchg
movsb
pop
loop
loopne
test
popa
jle
sbb
or
mov
mov
sub
aas
test
push
dec
fadd
jp
or
mov
sbbl
and
btr
decl
loope
iret
push
outsb
dec
test
sub
hlt
je
mov
lret
adc
repz
daa
jecxz
aad
sarb
adc
xchg
cld
xchg
push
pusha
ss
por
xorb
and
adc
push
sbb
xchg
lahf
jo
inc
fldt
dec
jb
push
pop
lds
or
rolb
jge
pusha
mov
push
dec
xor
daa
lret
push
add
test
adc
adc
nop
cmp
gs
jmp
pop
les
outsb
lods
fcmovnu
mov
movsl
test
adc
add
not
out
addb
sbb
dec
mov
mov
cmp
inc
push
in
mov
xor
je
rcrb
adc
push
mov
imul
hlt
inc
shll
mov
fdivs
dec
ljmp
call
lcall
add
adc
gs
pop
mov
in
jl
gs
inc
ret
inc
or
mov
das
cmc
sbb
int3
jp
jmp
psubb
mov
inc
cmp
cmp
mov
stos
mov
je
add
int3
pop
and
ds
mov
js
xchg
and
push
stos
jno,pn
add
cltd
mov
cmp
ljmp
push
aaa
test
add
aam
inc
loopne
arpl
dec
pop
insl
inc
cmp
out
sub
roll
xor
loopne
mov
dec
mov
pop
pop
cmp
addr16
lods
out
ljmp
lret
sub
icebp
nop
movsb
or
xchg
popf
push
inc
pop
adc
pop
in
enter
aam
xor
int
inc
mov
cmp
mov
pop
xchg
in
arpl
insl
bound
inc
in
pop
jle
sub
sbb
lcall
lret
cld
lds
jmp
adc
or
mov
add
icebp
call
pop
call
xchg
mov
daa
adc
mov
sub
daa
xchg
stos
and
ret
inc
dec
movsl
and
icebp
xor
mov
jae
ret
gs
inc
aas
jne
jmp
sbb
push
aad
jb
insb
insb
loope
sbb
lcall
xchg
lds
adc
mov
in
or
data16
pushf
rcrl
int
push
mov
call
stos
mov
faddl
pop
clc
roll
cld
sbb
data16
and
cmpsl
cmpb
sub
enter
and
pop
add
xor
push
xor
or
jno
outsl
out
fwait
adc
daa
xor
adc
outsl
cmp
mov
push
mov
lret
inc
xchg
jnp
jecxz
lahf
daa
xchg
in
pushl
sub
mov
addr16
fldenv
jle
xchg
ret
adc
addb
and
add
mov
das
fnstsw
das
jecxz
mov
out
inc
and
ja
mov
ret
xchg
fstps
mov
out
xchg
andb
jle
or
jno
inc
js
jmp
fwait
adc
mov
movsl
popa
loope
mov
or
rol
xchg
mov
iret
mov
mov
adc
sub
push
xchg
in
inc
or
inc
cmp
push
cmp
sarl
pop
lahf
xlat
andb
jg
xor
push
and
xchg
in
jbe
out
fcoml
fidivl
mov
das
mov
daa
nop
test
cmc
in
adc
push
dec
pop
xorb
jge
sbb
push
inc
das
sbb
leave
repz
inc
or
sbb
sub
sub
adc
mov
xor
add
mov
loopne
and
xor
fldlg2
mov
mov
pop
out
in
adc
fnstcw
aas
inc
xchg
mov
stos
sub
inc
pop
lret
popf
imul
push
jbe
or
inc
lret
mov
sub
fs
pop
xchg
cld
mov
dec
lock
cmp
add
cld
ret
loop
dec
pop
repnz
xchg
dec
inc
or
loopne
mov
mov
fldenv
in
incl
push
pop
hlt
in
rol
xchg
scas
out
psubsb
shrl
and
shl
mov
rolb
push
mov
push
mov
rol
mov
enter
xchg
jecxz
cmp
jno
jb
insl
mov
or
scas
mov
adc
adc
adc
or
mov
aas
out
sar
fisubs
jmp
repnz
mov
add
adc
push
and
es
add
xchg
out
push
add
out
ds
mov
mov
cmp
sub
in
pop
push
fcompl
cmc
mov
mov
movsb
xlat
or
inc
pop
or
aad
adc
cs
xchg
mov
dec
mov
nop
mov
mov
inc
and
adc
jbe
pop
jne
cwtl
mov
mov
fwait
add
outsb
push
je
int
push
cmp
adc
mov
jmp
cmpsl
jle
xlat
icebp
scas
repz
setg
mov
mov
sbb
jae
pop
jb
pop
insb
inc
sub
lret
xchg
xor
pop
test
xchg
mov
push
scas
sub
push
pop
push
rclb
pop
lret
xchg
aam
fwait
lret
bound
pop
loop
dec
push
jle
mov
popa
xchg
pop
push
mov
pavgw
or
mov
adc
and
pop
out
mov
cmpsl
pushf
pop
divl
dec
push
lcall
cmp
push
adc
or
repnz
psrad
roll
adc
or
ret
mov
inc
and
or
jns
mov
mov
jae
or
mov
mov
fnstsw
pop
ljmp
mov
push
cmp
mov
movsl
cmp
mov
jl
inc
fildl
shlb
hlt
je
das
fdivrl
fcomp
dec
or
pusha
sbb
ficoms
xor
mov
and
mov
mov
inc
jle
lahf
xchg
xchg
ret
clc
loopne
jnp
jbe
les
push
mov
xor
clc
ljmp
xchg
ljmp
mov
lds
xchg
sub
sbb
popa
test
nop
dec
pop
and
dec
lds
add
xor
sti
std
adc
shlb
js
inc
je
aad
xor
xchg
push
push
sbbl
cmp
loopne
xor
lea
das
iret
mov
add
pop
dec
insb
lods
aaa
mov
xchg
out
lods
cmpsb
push
jl
in
add
test
pop
mov
pop
icebp
pushf
dec
pop
icebp
in
push
or
add
sbb
incb
push
sbb
lock
mov
mov
xlat
jbe
xchg
cwtl
lea
add
push
ja
sbb
jnp
sbb
aad
adc
int
adc
cltd
jb
repnz
adc
fwait
scas
stc
lahf
or
xchg
sub
test
mov
cmpsb
iret
into
add
mov
sub
iret
shll
xorb
insb
xchg
cltd
insb
rcl
add
mov
fsubl
xchg
xor
push
sahf
test
sbb
repnz
adc
in
inc
cmp
mov
jbe
inc
test
test
push
cld
inc
outsb
lahf
pop
and
out
jno
insl
or
jge
xchg
lahf
mov
sbb
or
mov
enter
adc
cwtl
test
scas
or
into
nop
mov
data16
mov
mov
push
lea
cld
and
adc
lahf
loopne
mov
loope
jns
dec
add
sti
fwait
jo
or
sarl
in
ja
jb
adc
inc
mov
dec
rcrl
inc
xchg
xor
das
int
fnsave
je
enter
push
pop
push
pop
mov
pop
lcall
dec
les
addr16
mov
push
and
rolb
cmp
cmpsl
jle
fstpl
in
mov
std
push
out
out
and
test
in
xchg
cmp
mov
nop
xor
outsl
inc
mulb
and
adc
stos
adc
mov
or
outsb
ret
lret
xchg
xor
aas
jne
or
sub
sbb
aas
and
rorl
push
push
mov
test
mov
js
inc
sbb
fucomp
jno
push
std
pop
mov
stc
push
mov
fldl
out
adc
push
ret
jae
movsb
pop
les
add
xor
stos
addr16
add
dec
rcrl
imul
push
inc
sbb
push
mov
push
mov
xor
xor
mov
lahf
push
lds
es
xor
shll
neg
jnp
dec
cmp
jbe
and
in
iret
dec
cltd
or
push
sbb
mov
adc
sub
imul
sbb
stc
pop
xchg
cmp
inc
pop
jg
add
xchg
jl
iret
das
pop
test
mov
inc
lret
inc
inc
sbb
mov
mov
pop
push
decl
mov
adc
inc
stos
roll
cli
nop
lcall
insl
lods
mov
xchg
lock
cmp
adc
hlt
out
aam
je
pop
mov
or
sti
mov
lret
test
test
out
les
and
dec
xor
cmp
test
gs
outsl
ds
jns
mov
jbe
ja
pop
test
mov
cmp
dec
and
jp
adc
mov
mov
sbb
clc
push
mov
loopne
cltd
pushf
fcmovnu
shr
jmp
dec
ljmp
imul
mov
xchg
push
jg
pushf
cmp
mov
imul
mov
enter
je
jno
repnz
push
pop
or
mov
int3
mov
mov
test
xchg
mov
nop
daa
cwtl
mov
pop
jb
and
mov
add
jp
xorb
fdivr
push
ret
mov
adc
test
subl
mov
ss
adc
xchg
and
xor
rcr
bound
in
adc
sbb
pop
iret
leave
out
add
mov
lock
pop
push
sub
jmp
push
insb
fwait
mov
mov
push
push
es
jmp
movsl
xor
js
mov
movsl
fidivs
pop
aas
jb
xchg
xor
sub
add
in
pusha
mov
add
adc
xchg
or
mov
mov
xchg
je
aaa
clc
ds
xchg
push
mov
jge
dec
xchg
vmovhpd
sub
outsb
jnp
sbb
dec
cmp
add
jl
bnd
out
cmp
cmpsl
imul
movsl
jg
aaa
rclb
nop
enter
ljmp
xor
mov
push
jne
push
add
jl
xchg
inc
sahf
jns,pt
adc
cltd
mov
sub
aam
inc
pop
push
sarb
aad
ret
mulb
insb
icebp
sub
in
or
or
cmp
xlat
test
jmp
and
inc
imul
sbb
dec
call
adc
popa
fisttpll
popa
and
cmc
push
cmp
mov
out
stc
sbbb
jmp
xor
sub
imul
enter
mov
and
mov
mov
pop
jl
mov
add
mov
and
hlt
jmp
loop
jmp
inc
pop
pop
cmp
test
sbbb
out
stos
ret
cmp
outsb
adc
push
and
push
addl
lods
and
jp
jg
adc
lret
gs
push
mov
inc
stc
outsb
scas
push
ret
ret
lods
add
andb
mov
js
cmpsb
hlt
adc
arpl
sbb
pop
or
fdivrl
mov
out
sbb
xorl
lret
mov
push
insl
sti
mov
shrb
xor
pop
imul
sbb
pop
inc
sbb
mov
push
mov
sub
dec
and
cmpsl
xchg
sub
jp
scas
push
push
add
outsl
sets
shrb
test
dec
rorb
in
dec
cmp
or
add
les
cmpsb
or
or
fisubs
cmp
xlat
cmp
pop
imul
mov
cmp
mov
or
popa
in
in
outsb
mov
aam
outsb
push
lock
andb
outsb
add
pop
mov
icebp
sahf
cli
call
or
push
icebp
mov
shrb
movsb
imul
scas
loope
mov
jg
jmp
stos
mov
icebp
ret
push
bnd
push
sbb
mov
push
bound
or
je
lods
std
jecxz
adc
inc
mov
imul
cmp
test
lcall
push
cmc
cmp
dec
aas
mov
ss
ljmp
dec
mov
jle
lods
inc
inc
adc
arpl
ret
jne
xor
push
mov
daa
sbb
pop
sub
jecxz
iret
or
lds
imul
sbb
fistps
mov
inc
xchg
fbld
inc
call
push
jbe
inc
mov
mov
or
scas
cmpl
add
in
pop
xchg
hlt
fcmovnb
testl
in
les
jg
loopne
scas
mov
inc
out
xchg
mov
shrl
push
dec
xlat
add
iret
stos
push
mov
cmp
iret
scas
psubq
add
mov
mov
mov
cld
mov
adc
stc
mov
push
scas
mov
mov
les
jmp
shrl
add
push
in
ret
ss
xor
dec
push
test
test
sbb
sti
inc
jle
int3
mov
test
sub
aam
loop
jns
std
xor
lcall
mov
sub
in
gs
push
push
ret
notb
iret
mov
cmpsb
pusha
mov
push
jns
or
xor
stc
in
inc
imull
das
mov
pushl
test
push
mov
test
push
cwtl
ljmp
sbb
and
mov
pop
std
cmp
iret
ljmp
fnstcw
test
inc
imul
cmp
mov
mov
fisubl
and
jg
mov
fidivl
jb
mov
mov
or
or
movsl
cli
clc
mov
or
pop
dec
inc
aaa
mov
fbld
or
ret
aam
adc
sbb
mov
or
pop
jmp
das
sub
popa
movsb
cmp
add
jb
sub
mov
iret
or
mov
sti
pop
clc
enter
test
in
or
ficompl
inc
or
push
add
scas
notb
hlt
les
in
sti
rcll
xchg
add
pop
loop
sbb
jns
in
inc
push
lahf
pop
mul
std
dec
push
test
and
cmpsb
xchg
pop
push
push
out
filds
cld
sub
das
push
and
mov
cld
pop
push
cvtdq2ps
fldenv
mov
loop
cmp
mov
call
cli
sahf
pop
in
pop
in
push
xchg
fdivrl
or
sbb
imul
mov
fistpll
xchg
mov
dec
cmp
xchg
std
ss
mov
inc
and
repz
cmp
add
jge
push
xor
aaa
outsl
xchg
pop
in
push
push
inc
dec
arpl
sbb
add
lcall
imul
cmp
negb
mov
push
mov
arpl
mov
aam
inc
aad
mov
in
add
xchg
adc
mov
add
push
leavew
lret
aad
push
daa
cltd
inc
sahf
mov
xor
dec
push
fstl
dec
cs
lret
xor
lods
cwtl
pop
fsubl
mov
push
fimull
push
add
shlb
jl
add
sub
mov
add
dec
int
sub
pop
pop
adc
jns
xchg
out
ret
push
add
ss
fwait
movsb
xor
xlat
mov
mov
inc
pop
loope
cltd
mov
jne
push
ret
test
mov
pop
dec
mov
cmpsb
rcll
bswap
push
sti
je
jae
repnz
jb
add
fdivs
leave
mov
jbe
scas
jae
adcb
sbb
mov
add
sbb
icebp
std
xchg
roll
fwait
mov
inc
inc
lret
sbb
mov
jecxz
cwtl
out
popa
lea
iret
and
hlt
add
or
jmp
imul
jae
and
cmp
push
aad
lcall
pop
push
insb
xchg
mov
dec
loopne
jb
pop
lret
test
rcl
xlat
insl
mov
jae
call
lods
shl
and
fs
mov
test
mov
inc
scas
xlat
addr16
mov
inc
negl
jl
jmp
in
sub
arpl
mov
stos
ret
ret
cmp
jp
aas
std
jge
dec
loopne
sbb
lret
jbe
repnz
xor
dec
rorb
bound
and
sub
or
aas
inc
ljmp
adc
push
adc
sub
int3
sub
loopne
or
lods
pusha
jo
inc
into
and
sbb
cmp
push
scas
lock
adc
rolb
inc
ds
aad
pop
xchg
inc
lret
gs
rcrl
mov
dec
dec
xchg
aam
lcall
mov
fldt
outsl
dec
or
icebp
add
or
pushl
mov
or
cmp
pushl
mov
push
add
aas
shlb
shrb
xor
into
or
jo
push
adc
shll
push
filds
xchg
mov
and
pop
icebp
mov
pop
lock
add
out
or
dec
or
or
mov
and
sub
sti
pop
jae
sub
ficomps
aaa
jg
imul
movsl
or
pop
mov
inc
pop
orb
xor
mov
les
pushl
jno
push
das
sub
aas
and
cmp
mov
pushf
mov
pusha
mov
inc
xor
ds
mov
push
mov
aam
pop
daa
pop
xchg
ret
inc
or
cmp
jmp
loop
push
sub
adc
into
stos
dec
out
in
and
ljmp
mov
push
jno
push
xchg
inc
xor
mov
cli
lds
fcoml
lret
lods
or
das
clc
popa
fcomp
mov
fnstsw
mov
imul
xchg
mov
dec
xor
movsb
or
decl
add
stc
test
mov
xchg
mov
mov
jge
jns
ja
loop
inc
pop
outsl
xchg
mov
fdivrs
lods
sarl
add
xor
ficoms
lock
push
fidivl
xchg
sti
bound
mov
cmp
sbb
xchg
and
cmp
xlat
cmp
and
rol
fsts
sub
mov
push
scas
ret
jmp
negl
gs
jmp
cmp
lret
ss
test
out
sbb
xchg
outsl
mov
les
push
fstps
or
cwtl
sbb
push
mov
out
jns
mov
mov
test
stos
pop
xchg
xor
stc
cwtl
fstpl
aad
jp
popf
in
sub
out
add
nopl
je
nop
and
lods
lret
roll
in
push
inc
mov
pop
xor
les
mov
mov
dec
scas
imul
cld
int3
and
stc
loope
adc
lods
repz
mov
cltd
mov
dec
mov
fisttpl
mov
mov
fxch
mov
jp
icebp
sub
lret
outsb
xchg
dec
adc
inc
pop
xor
mov
je
cmp
adc
aas
pushf
fldenv
stos
aam
cli
adc
jl
daa
cld
int3
mov
mov
insl
mov
cmp
adcb
fs
fisubl
dec
sti
sub
jnp
pop
sub
dec
pop
xchg
inc
loope,pn
int3
cmp
das
pop
rorl
cmp
dec
mul
xor
and
das
add
dec
cmp
scas
loopne
movsl
cmp
sbb
test
shrl
xlat
pusha
sub
in
mov
cmp
jl
lods
out
ret
push
inc
mov
xchg
shl
sar
sar
aam
int3
in
inc
rcll
pop
out
jb
icebp
mov
insl
xor
in
in
out
test
mov
adc
jmp
cmp
pop
fdiv
aam
inc
fldenv
xchg
aaa
testl
or
rcll
int3
push
cmp
mov
shlb
jl
jle
shll
xor
dec
rcr
push
popf
mov
add
pop
sbb
xchg
xor
fucomi
sub
sbb
mov
idivl
jae
xchg
adcb
int
dec
sub
fwait
mov
popa
sarb
mov
popa
dec
iret
es
arpl
sub
and
mov
xchg
int3
cmp
sbb
xor
jbe
sar
ss
sarb
aaa
xor
jae
push
xlat
dec
ficompl
dec
cmp
das
or
add
mov
push
dec
adc
add
ror
nop
jnp
outsl
inc
sbb
imul
sbb
add
fcmovbe
jl
adc
addr16
cmc
sbb
lea
pushf
and
cmpsl
pop
lret
dec
lds
sub
test
mov
jle
data16
fwait
xchg
gs
lods
adc
lods
daa
fidivrl
and
gs
ret
sbb
jecxz
aad
fcomi
in
lock
jg
insl
dec
lea
data16
lcall
cwtl
fstp
inc
pushf
aad
xor
sbb
xorl
test
cltd
mov
or
dec
mov
rcll
dec
clc
leave
pop
repz
clc
fwait
push
cltd
in
mov
lods
fmull
add
arpl
clc
sbb
mov
xchg
dec
addr16
scas
sti
jecxz
lods
jp
sahf
repz
in
push
test
jle
jb
lcall
test
dec
fnstsw
fwait
dec
dec
push
mov
mov
jmp
or
and
jmp
add
mov
sti
sub
sti
mov
adc
testl
ja
cmp
pop
repz
sbb
pop
orl
imul
push
mov
in
cmp
ljmp
jmp
sbb
dec
daa
sbb
cmp
int
and
sarl
fdivl
pop
push
in
dec
or
repnz
xor
xor
or
rclb
fildl
cltd
pop
or
jne
outsl
pop
mov
xchg
cmp
test
mov
mov
sub
insl
inc
and
push
push
inc
xor
lahf
push
and
pop
adc
dec
lcall
push
adc
test
mov
sub
les
insb
xchg
mov
pop
add
leave
das
pusha
ret
cmp
ss
scas
fdivrl
sbb
out
push
into
push
sahf
mov
in
inc
imul
jno
popf
movsb
push
in
fcom
pop
cmc
add
mov
hlt
jge
hlt
and
lods
ret
cli
int3
jmp
jns
xor
push
test
stos
in
mov
pusha
and
lret
add
pusha
adc
je
mov
call
jne
jno
jbe
mov
lret
push
dec
sub
int3
fbld
inc
cli
and
repnz
loope
jae
les
ljmp
mov
sub
sbb
inc
divb
pop
cli
inc
movsb
fdivrs
jb
and
mov
cwtl
js
lret
push
push
xor
xchg
sbb
test
and
shlb
aam
mov
and
push
bnd
pop
inc
dec
jge
cmp
fiaddl
sub
imulb
cmpsb
roll
cmp
push
in
jbe
inc
xor
test
xor
mov
sbb
adc
test
out
sbb
clc
dec
xchg
cmp
es
in
test
cs
cltd
mov
jo
cmp
clc
xchg
sarl
jb
sub
adc
dec
inc
xchg
push
cmp
pop
into
inc
xchg
loopne
stos
mov
pop
dec
sahf
push
into
mov
mov
inc
lret
jns
lahf
mov
mov
movntq
mov
fistpll
inc
out
mov
push
frstor
notl
push
adc
in
fnstenv
daa
inc
adc
and
bound
ret
cmp
push
and
sbb
gs
inc
mov
iret
sub
sub
call
mov
or
jge
add
inc
xchg
push
stos
pop
pushf
test
cmc
into
sub
inc
or
sbb
cld
jp
ljmp
or
fnsave
pusha
pop
mov
and
insb
mov
aas
fcoms
jne
adc
ret
mov
and
dec
push
jle
loop
shlb
test
mov
outsb
xchg
mov
std
rolb
pop
addr16
shlb
mov
dec
mov
lcall
cld
loop
sbb
pop
or
stos
test
testb
imul
loope
test
or
fcompl
test
sti
xchg
pop
xchg
loopne
inc
in
sti
or
jb
pcmpeqb
mov
pop
jmp
mov
pop
shl
mov
push
loopne
insl
or
xchg
cmp
cmp
shlb
xchg
clc
test
repnz
out
pop
xchg
sbb
or
int3
adc
rorl
mov
mov
insb
daa
mov
sub
sub
push
sbb
out
mov
imul
stos
xchg
cmp
sar
mov
inc
xor
sub
ss
loope
test
cmp
mov
mov
bound
bound
iret
xchg
je
bound
pop
leave
mov
shrl
das
xor
adc
daa
lret
push
sti
into
inc
cmp
mov
add
cld
add
pop
xor
lea
and
dec
inc
in
cmp
or
or
jae
scas
es
xor
es
aas
aaa
inc
mov
mov
push
shll
stos
je
adc
in
mov
pop
sti
movsl
mov
mov
pushw
xor
outsl
cmp
clc
push
bound
and
fwait
icebp
pop
xor
dec
das
iret
pop
xchg
mov
sbb
adcl
dec
add
inc
movsb
xchg
movsb
out
sub
fdivrp
hlt
fsub
xor
add
push
inc
ja
ljmp
sbb
xor
cli
shl
movsl
addr16
insb
cmp
xlat
bound
cmp
leave
jbe
pop
jae
jno
jns
ret
fiaddl
inc
jae
cmp
sbb
pop
xchg
mov
rcll
sub
cwtl
dec
shlb
fnstcw
in
pop
repz
fpatan
mov
cmp
lret
popa
cmpsb
lret
sub
push
bound
std
rcr
insl
sbb
cmc
das
jge
inc
xor
outsl
mov
add
or
xor
cltd
pop
bound
inc
xlat
daa
push
sbb
outsl
add
sbb
mov
aas
inc
sbb
mov
aad
adc
daa
cvtps2pi
add
das
ljmp
mov
jg
int
mov
shlb
pop
pusha
or
dec
pop
lret
sbbb
push
jl
ds
movsl
pop
orb
and
xchg
stc
addl
mov
rcr
stc
mov
loope
cmp
ja
mov
rcrl
stos
and
jno
cmpsb
je
mov
rcrl
cmp
mov
jge
adc
fldt
or
xchg
sub
push
push
lret
cmc
fimull
gs
inc
in
xchg
frstor
bound
jno
jl
testl
aaa
cmp
add
mov
enter
cs
stc
lods
cmpsb
and
jo
xlat
sbbb
xchg
cli
push
data16
out
dec
xor
dec
andl
jae
leave
push
jae
push
mov
rcrl
fdivrs
dec
mov
or
dec
repz
std
popf
cs
xor
jl
rcll
xchg
loope
mov
test
loop
mov
sub
pop
push
outsl
ja
das
xchg
adc
fdivr
jae
cmp
je
cmpsl
push
add
push
fucomip
mov
stos
cltd
xor
call
add
inc
xor
aas
cmpsb
iret
cmp
cmp
inc
pusha
mov
into
mov
or
loopne
adc
mov
and
xchg
adc
xchg
adc
ret
xchg
call
out
enter
jbe
imul
mov
cmp
fwait
xchg
pop
mov
shrb
hlt
mov
sub
push
test
movsl
lahf
iret
and
jbe
or
xchg
outsl
cmp
and
push
inc
int
outsl
pop
jmp
jno
imul
xor
mov
sub
dec
pop
lahf
dec
lock
or
dec
lods
enter
xchg
loopne
mov
pushf
pop
fisubrl
ljmp
fxch
mov
cli
jno
pusha
cs
mov
cmpsb
cmp
ljmp
punpcklbw
xor
mov
sti
out
mov
cmp
cld
repnz
out
mov
lahf
sbb
scas
pop
push
adc
xor
fs
xchg
push
cwtl
xchg
jge
scas
test
xchg
adc
cmp
mov
mov
push
add
mov
jne
mov
imul
imul
lods
popa
clc
out
mov
test
push
in
dec
cmpsb
cs
mov
mov
in
mov
rorb
xchg
outsb
cmpb
xchg
or
mov
xchg
sarl
jecxz
loope
cltd
and
fwait
imul
sahf
lods
insb
cmp
inc
sti
mov
jbe
test
push
loop
movsl
orb
mov
ret
cld
fmuls
cmp
movsb
outsl
push
push
mov
push
mov
mul
mov
cli
pop
mov
sub
xorl
arpl
mov
cmpsb
adc
int
mov
push
xchg
mov
pusha
inc
popw
je
and
and
xor
mov
sub
test
xchg
cmp
xchg
ds
cli
or
call
xchg
and
or
inc
dec
sbb
xchg
pop
stos
inc
xchg
out
iret
lock
clc
pop
mov
and
movsl
hlt
xor
inc
stos
mov
push
insl
fs
mov
jle
xlat
cmpsl
and
or
iret
adc
xchg
mov
or
stos
cld
cmp
int3
loope
cmc
and
insb
jp
hlt
das
lret
addr16
dec
loopne
leave
movsl
pop
adc
imul
sub
push
pop
roll
jne
in
test
pop
mov
rcrb
jle
xchg
cld
or
or
ficoml
xor
dec
sti
in
stc
cmpb
push
push
add
lahf
mov
push
in
in
pop
add
fnstcw
sbb
mov
pop
adc
mov
lea
xchg
adcb
xchg
ss
sub
xor
js
movzbl
or
pop
cwtl
mov
test
lahf
inc
push
test
pop
mov
xor
add
adc
jnp
lret
insb
push
aaa
ljmp
fdivrl
clc
lock
jecxz
test
adc
sub
leave
sbb
xchg
sub
and
pushf
ds
aam
inc
jb
ljmp
or
ja
xchg
push
cmpsl
mov
cwtl
inc
popa
lcall
addr16
add
or
iret
addr16
fidivl
shl
cli
dec
mov
dec
cmc
add
and
pop
lods
or
fcompl
gs
pop
push
je
mov
sarb
sbb
pop
xor
loopne
mov
mov
adc
mov
cmp
add
cmp
les
mov
push
out
jmp
adc
mov
and
ljmp
sbb
inc
rcll
push
loopne
stos
test
rcll
xchg
in
and
je,pt
sti
xchg
lret
in
jb
jge
sbb
ss
cmp
in
shll
add
xchg
cmp
into
mov
lods
imul
push
mov
xor
mov
dec
iret
adc
xchg
enter
xchg
insb
and
xor
or
mov
decb
cld
leave
call
push
jbe
call
xor
and
mov
in
addr16
mov
xchg
cld
fwait
scas
dec
mov
inc
gs
out
sbb
fwait
sbb
sub
lock
jmp
fldl2e
lds
xor
out
stos
pop
or
addr16
ret
inc
lock
or
jmp
aad
add
test
and
cltd
xchg
push
clc
rcrl
es
rcll
ret
xchg
cmp
sub
jmp
sub
out
and
mov
flds
xchg
dec
pop
xchg
fstpl
out
pusha
push
add
mov
adc
iret
and
pop
movsl
push
or
dec
push
sub
jae
sbb
jbe
mov
ja
cli
call
out
xor
pushf
movsl
adc
in
xchg
inc
movsl
or
push
xlat
or
leave
aam
push
lods
push
xor
in
mov
pop
inc
lds
dec
mov
inc
fisttpll
xor
and
mov
inc
repz
jg
mulb
ret
adc
sub
test
lock
pop
aad
cltd
push
cmp
and
or
nop
int
xor
lea
dec
in
fwait
or
rorl
fwait
and
and
shll
jbe
aam
sbb
repz
pop
jne
fbstp
mov
jle
mov
and
add
push
pop
cmpsb
pop
inc
xor
mov
dec
fiadds
push
andb
cmp
insb
out
into
rcrb
xchg
push
gs
pop
and
shlb
pop
lods
gs
sbb
jmp
push
mov
negb
jl
movsb
fdivrl
psubusw
bound
xchg
jmp
imul
and
into
pop
sbb
je
les
sti
out
popf
or
cmc
jae
pop
stos
arpl
fimuls
addr16
dec
enter
aad
lds
pushf
pop
imul
or
sbb
mov
dec
jg
mov
out
xor
xchg
pop
sub
sbb
cmp
daa
fcoml
mov
jnp
push
sbb
sbb
adc
test
daa
gs
fisubrs
fdivrs
adc
mov
fisubl
call
mov
xor
insb
imul
ss
addl
pop
mov
pushf
insb
jb
cmp
pop
mov
or
sub
stc
test
icebp
pop
add
stos
insb
test
test
cld
daa
fsubs
pop
addb
or
loopne
mov
fisttps
adc
push
xchg
dec
or
pop
adc
js
sub
add
jg
ficompl
or
xchg
push
mov
mov
and
mov
lcall
pop
and
adc
push
out
adc
xor
jle
and
xchg
mov
scas
pop
outsl
aas
std
xor
rorl
and
xor
xchg
adc
push
add
mov
pop
adc
cmc
adc
fildl
jl
or
mov
jecxz
pop
cmp
add
mov
aaa
cmp
fsubs
scas
loopne
or
jne
inc
outsl
or
adc
jl
aaa
movsl
loop
fisttpll
iret
or
ret
notb
xor
pop
jne
fisubrs
jp
xchg
push
sbb
cmp
xchg
dec
mov
int3
test
push
test
xchg
cmp
testl
test
mov
sahf
inc
cmp
lods
mov
test
fs
mov
jae
xor
lcall
cmpsb
xorb
pop
stos
cmpsb
les
pop
cs
testl
cmpl
mov
dec
jo
inc
int
pop
leave
mov
aas
ja
adc
test
sub
fnstcw
lea
pop
jle
mov
dec
pusha
ficoms
das
mov
js
cli
mov
cmp
mov
and
jge
test
cmpsl
mov
dec
jnp
push
sub
or
sahf
lret
imul
inc
inc
add
mov
out
popf
cwtl
hlt
push
inc
lea
jnp
aad
inc
jl
daa
cmpsb
in
adc
mov
cmp
insl
pusha
int
jbe
xor
inc
in
lock
push
xor
mov
sub
add
jae
xlat
sub
inc
scas
and
inc
lods
stos
mov
repz
cmpl
js
in
sarb
inc
arpl
cmp
popa
fidivs
jb
test
push
push
adc
xchg
icebp
xchg
jnp
jno
repnz
popf
jge
push
inc
lods
or
in
mov
push
cmc
jl
outsb
test
fdivrl
aas
sbb
dec
pop
scas
icebp
inc
ret
xor
mov
pushf
push
pop
xchg
imul
cmp
pushf
jl
inc
popa
sbb
testb
js
repz
xor
xchg
pop
dec
mov
bound
mov
pop
xor
adc
dec
ss
push
repnz
or
aam
mov
insb
in
pop
cmp
loopne
push
insb
mov
add
jb
aaa
mov
mov
popf
add
test
fstps
push
push
mull
data16
and
lods
lahf
mov
xchg
daa
clc
int3
jecxz
hlt
ljmp
cmp
insl
adc
push
cmp
xlat
les
push
adc
test
fs
mov
incb
xor
aaa
subl
xchg
xchg
scas
and
fiaddl
outsl
out
or
sbb
inc
out
ret
xchg
add
jns
adc
in
jbe
sbb
inc
cmp
dec
cltd
imul
add
sbbb
jns
xor
mov
mov
pop
xchg
std
data16
cmc
xchg
push
fwait
insl
inc
scas
out
dec
mov
mov
push
mov
cmp
cmp
stos
je
les
pop
add
mov
pop
or
jae
mov
and
push
jb
pushf
push
cmpsl
mov
in
adc
sub
rclb
cmp
cmc
dec
cmpsb
cmp
mov
xor
xor
setge
sarl
imul
cmp
sbb
das
cmp
sarl
repnz
xchg
cs
rorb
lahf
sub
push
xchg
jo
adc
dec
dec
dec
cmp
push
scas
lret
arpl
fldt
ret
test
rol
add
xchg
push
adc
adc
sub
add
or
jp
or
sub
push
adc
xlat
or
mov
rcll
push
mov
idivl
xchg
addb
adc
dec
es
jle
jmp
insl
stc
push
xchg
call
cmc
push
jnp
ret
cwtl
rcrb
xchg
adc
pop
nop
dec
xor
pop
cmp
push
push
out
push
js
addl
pop
jno
xor
mov
push
cs
fdivs
cmpsb
outsl
cltd
add
adc
scas
mov
add
jno
call
nop
es
xlat
dec
sub
dec
shl
test
cmp
sub
or
lea
cmp
jo
fwait
inc
out
mov
dec
or
push
jnp
cmp
fistpl
pushf
movsl
loope
sbb
mov
int3
lds
add
inc
test
push
jnp
jecxz
lahf
decl
push
jle,pn
rclb
pop
cld
push
push
push
push
in
pop
rep
inc
jnp
in
int3
daa
inc
incl
shlb
xor
mov
insb
or
push
xchg
push
push
stos
lahf
cmp
mov
xor
xchg
push
xchg
sub
inc
and
push
ss
imul
dec
adc
jns
jnp
xor
cmpsl
mov
jb
xchg
inc
jno
mov
fidivrl
ret
icebp
in
mov
sti
jecxz
aas
movsl
clc
sti
lods
adc
cld
leave
adc
mov
cli
popf
xor
in
lcall
jge
add
mov
imul
inc
ficompl
sub
imul
les
sbb
jp
das
mov
fadds
rcrb
jg
xchg
cmp
and
sti
cltd
or
mov
xchg
sbb
jmp
addr16
jbe
in
scas
jmp
gs
pop
out
scas
xchg
mov
movsl
jns
repz
xor
dec
push
mov
cltd
std
lret
or
jl
incb
fistl
cmpsl
jg
xchg
js
sbbb
lods
sahf
into
ss
in
add
lock
sub
or
addr16
aad
dec
les
sub
dec
sbb
mov
and
aas
popf
aas
lea
imul
sbb
cmp
out
adcl
test
pop
xlat
ss
in
out
fsts
xor
cmp
repnz
cwtl
mov
xchg
mov
mov
ds
cmp
sub
xchg
ficomps
inc
addb
mov
in
lock
insb
leave
fs
lahf
aad
adc
jb
sub
ds
outsb
adc
mov
xchg
ljmp
xor
enter
in
icebp
shlb
in
arpl
push
mov
sub
cmpb
sub
jno
jmp
sub
insb
and
sub
push
mov
push
mov
xor
pop
adc
pop
cli
add
scas
mov
rolb
out
and
icebp
aam
ret
cld
adc
or
sahf
add
je
rcll
imull
mov
aaa
mov
sub
arpl
call
cmp
and
xor
mov
sti
fwait
pop
inc
jmp
pop
jl
xchg
xor
mov
push
je
sub
jle
stos
xchg
jae
pushf
iret
repz
push
ds
sub
mov
inc
ret
push
pop
test
xchg
in
sbb
in
sbb
xchg
int
sbb
push
les
fistpll
pop
cmp
push
jo
out
aas
cmp
xor
cmp
push
or
aam
repnz
lds
out
inc
mov
ret
jbe
cmc
xlat
push
inc
cmp
enter
push
adc
adc
sbb
inc
imul
add
cmpsb
mov
mov
arpl
ret
push
mov
insl
insb
lahf
lods
icebp
pop
xlat
outsl
push
jg
popf
imul
jo
add
loop
lds
mov
xchg
aad
loop
pop
out
mov
cmp
mov
xor
xor
loop
fiaddl
adc
xor
pop
call
icebp
inc
push
xchg
stc
es
shll
adc
push
loop
das
dec
mov
fs
mov
lock
fcmovb
out
cld
adc
fsubr
sbb
cmp
add
icebp
cmpl
pop
lahf
sbb
adc
in
inc
lret
inc
insb
lock
sub
mov
sbb
adc
sarb
into
cltd
mov
xchg
out
loopne
xchg
int3
sub
lret
cmp
cld
ljmp
push
je
icebp
fstl
mov
lret
pushf
cmp
cmp
ljmp
mov
sahf
mov
scas
clc
and
and
add
xchg
mov
divl
mov
mov
ret
and
or
jb
dec
mov
mov
je
in
or
mull
mov
fiaddl
jle
xchg
xchg
test
orl
cmp
leave
stos
cmp
mov
mov
fwait
push
xor
lds
push
mulb
dec
dec
jl
or
leave
mov
sub
mov
mov
push
aas
mov
jns
push
loope
loop
and
push
ret
cld
mov
dec
pop
mov
add
xchg
dec
mov
inc
mov
and
popw
jecxz
jle
or
sub
and
mov
scas
mov
ret
test
lods
aas
mov
add
scas
sub
les
jno
aad
inc
mov
add
pushf
push
out
in
sub
mov
cs
sub
xchg
mov
out
fidivl
cmp
add
sub
scas
pop
dec
xor
dec
pop
imul
jno
mov
mov
and
jle
testb
aas
push
jg
xor
adc
icebp
pop
sbb
test
mov
push
cmpsl
push
dec
pop
into
rcl
addb
aad
push
pop
pop
xor
arpl
in
adc
fidivrs
jbe
enter
inc
orb
icebp
in
jb
push
stos
push
clc
je
cmp
sbb
add
push
mov
testl
inc
push
jnp,pt
mov
sbbb
xchg
pop
mov
mov
lret
pop
mov
add
cmp
sti
jne
dec
and
int
rorb
bnd
fwait
loope
and
movsb
aam
imul
jle
enter
addr16
hlt
stc
mov
dec
lods
idivb
in
jmp
fwait
sub
or
pop
data16
xlat
dec
arpl
daa
xchg
inc
mov
imul
outsb
add
mov
into
and
mov
mov
dec
jmp
popf
ja
mov
mov
mov
cmp
jo
jae
pop
lret
xor
inc
fdivl
out
sub
stos
inc
jl
mov
mov
jno
cmp
in
pop
ret
pop
mov
jbe
push
inc
insl
add
and
stc
or
insb
out
arpl
clc
daa
scas
out
mov
inc
inc
fdivr
xchg
clc
and
in
cmc
push
in
lea
rcr
sbb
pop
and
add
icebp
pusha
inc
jmp
push
jge
cli
xchg
jbe
jmp
outsl
sahf
lods
cld
fcoml
fiadds
in
jns
sub
xchg
dec
and
mov
ret
cmp
lock
stc
xchg
rcll
adc
shrl
pop
popf
mov
test
sbb
dec
div
popf
fistpl
adc
lock
jbe
mov
lods
cli
pop
push
outsl
push
shr
sahf
push
pop
imul
inc
test
or
pop
sahf
stc
scas
out
pop
mov
inc
cmp
adcl
jle
push
mov
or
rclb
dec
sub
mov
push
sub
les
xchg
lods
pop
dec
std
insl
inc
lods
cmpsb
adcb
and
loop
sub
mov
je
jmp
xchg
mov
pop
xlat
adc
xor
hlt
mov
cs
push
or
mov
push
mov
aaa
repnz
and
leave
stos
and
pop
dec
fldl
dec
ror
sbb
cmpsb
stos
push
jo
jge
ds
scas
jno
inc
xor
mov
fistps
loop
add
sti
dec
jo
addr16
push
rorb
ficompl
add
mov
sub
sub
jns
xor
push
push
icebp
cmpsl
mov
popa
ret
xchg
sbb
fists
inc
popa
lock
mov
mov
sbb
push
das
adc
cs
adc
cmp
mulb
and
mov
xor
ret
bswap
push
movsb
mov
mov
outsb
les
mov
push
xor
sub
xchg
jne
icebp
inc
mov
das
xor
aam
adc
push
dec
dec
add
add
cmp
mov
inc
pushw
mov
dec
cmpsb
add
fnsave
lea
andl
pusha
rep
cmpsl
sub
mov
mov
inc
mov
mov
aaa
mov
pop
push
push
pop
ret
inc
sbb
clc
adc
je
fcoml
int
in
cmp
loop
fidivrl
mov
jbe
gs
ret
shll
xor
jmp
mov
lods
gs
mov
xor
pushf
xchg
repz
add
stos
out
jbe
fnclex
test
rcr
mov
lret
adc
add
xchg
xchg
adc
pop
rcll
cmp
push
ja
imul
or
pop
adc
or
sbb
shl
push
mov
cmpb
pop
jae
push
dec
and
adc
mov
mov
jbe,pn
ss
lea
cmp
lods
lahf
insl
lods
inc
and
dec
shlb
fiaddl
stos
xchg
test
mov
sbb
cmp
call
mov
out
push
add
fwait
mov
push
mov
sbb
jnp
inc
pop
xor
jne
leave
outsl
jecxz
fucomi
sbb
les
pop
jns
in
fimuls
sub
loopne
sub
je
xchg
cltd
pop
cmc
movsl
mov
int
push
arpl
sahf
iret
inc
dec
sar
in
mov
mov
mov
push
pop
jbe
dec
mov
stc
push
sub
je
xchg
ds
mov
xchg
rorl
sbb
or
out
data16
pusha
add
xlat
mov
shl
mov
jnp
stos
sub
xchg
sahf
push
mov
adc
scas
daa
int3
and
add
mov
ds
pushf
push
xor
lcall
mov
fdivrs
scas
test
cltd
shll
call
pop
leave
int3
loop
mov
aas
out
mov
icebp
shlb
dec
pushf
cmp
cmp
fs
shlb
cmp
and
imul
adc
push
popa
mov
cltd
ret
cli
data16
hlt
mov
cmc
adc
je
add
inc
clc
cmpb
je
call
scas
mov
fiaddl
mov
mov
jbe
lcall
in
and
sub
loopne
ljmp
jo
lods
inc
jnp
mov
je
jns
test
cmp
mov
cmpsb
xor
orl
mov
push
mov
pop
or
push
add
pop
jl
cwtl
daa
data16
dec
push
mov
mov
cmp
xchg
daa
mov
push
ja
push
loopne
dec
es
sbb
cmp
cli
scas
clc
sbb
jmp
push
lods
jb
sbb
fs
fwait
inc
mov
cmp
jg
sar
or
cmp
cmp
cpuid
int3
pop
nop
inc
ljmp
ret
sbb
mov
push
repz
mov
subl
or
cmpsb
dec
cmpsl
pop
sub
outsl
rolb
pop
aad
push
imul
int3
fiadds
adc
mov
jecxz
jg
mov
insb
stos
jns
push
dec
out
arpl
push
jo
sbbb
jge
lods
inc
mov
mov
push
aad
in
iret
push
fildl
pop
adc
cmpsb
daa
ror
adc
mov
mov
or
cmpsl
sarl
nop
or
out
mov
cmp
add
in
pop
je
dec
add
jp
and
data16
push
lea
lret
mov
aas
pop
outsl
cmp
je
out
test
dec
push
mov
sbb
loopne
cmpsl
into
add
xor
jb
pop
pop
cmp
push
adcl
sbb
inc
push
adc
dec
nop
fstpl
lret
xorl
sti
rcr
ja
in
mov
inc
push
mov
or
adc
and
test
sub
jb
jno
pop
movsl
push
jnp
lds
pop
dec
adc
das
inc
dec
mov
stos
icebp
fimull
dec
aas
and
ror
mov
lock
lcall
mov
push
loope
cmp
ret
xchg
lock
sahf
fildl
in
inc
in
mov
ret
adc
outsl
loopne
mov
loopne
repz
jbe
imul
or
push
mov
adc
pop
xlat
das
add
pop
add
lret
test
mov
and
rcrb
imul
xchg
imul
dec
inc
mov
mov
push
lods
int3
mov
push
sbb
mov
loope
xor
and
cmpsl
cmc
stos
xor
test
rcr
das
bound
arpl
jecxz
jbe
cmpsb
mov
pop
cmpsl
mov
lods
jns
jmp
xor
fldt
mov
dec
pop
pmaxsw
fsts
roll
sub
in
leave
cmp
or
xor
out
cmpsb
loop
add
leave
add
lea
nop
and
pop
out
mov
push
dec
fistps
cmpsb
ja
xchg
mov
mov
mov
sub
jae
mov
pop
sahf
xor
mov
adc
dec
sub
push
add
jno
mov
lods
and
dec
jecxz
add
pcmpgtb
idivl
adc
mov
mov
mov
movsb
or
cmc
aaa
hlt
cmp
std
xchg
sti
mov
mov
int3
cmp
inc
pop
inc
nop
in
mov
cmp
pop
jecxz
test
out
mov
mov
es
push
inc
xchg
mov
test
psubusw
inc
dec
imul
ret
das
xchg
jg
sub
sub
loope
xchg
cltd
outsl
adc
inc
cmp
mov
lahf
xchg
add
mov
stc
xchg
into
pushf
mov
cli
aaa
sbb
mov
stos
outsl
mov
adc
dec
into
and
push
xor
jmp
adc
stos
jne
gs
mov
adc
mov
push
imul
dec
ds
lods
or
cwtl
call
leave
push
pop
xchg
repnz
inc
push
cmpsl
ljmp
cmpsb
mov
xorb
inc
mov
cmp
imul
sub
xchg
out
call
add
pop
sbb
sahf
jl
mov
enter
push
inc
es
pop
ja
movsl
mull
cmp
int3
sbb
mov
bswap
test
mov
push
movl
mov
and
mov
in
in
xor
cltd
rcrl
xor
cmp
mov
xor
loope
cmp
cld
rcll
mov
and
mov
sub
mov
call
in
push
jmp
adc
or
ja
fxtract
leave
shlb
dec
aaa
aam
shlb
and
cmpsl
gs
shrd
push
xchg
gs
push
jmp
addr16
pop
dec
mov
test
jp
sub
xlat
aad
cmp
jns
in
jns
mov
sub
add
or
sub
jl
insb
mov
push
jnp
daa
pop
pop
xchg
inc
pop
pop
pop
lcall
add
dec
insl
leave
sbb
or
out
ret
ret
mov
xor
sub
push
mov
aad
or
jne
pop
test
sub
int
imul
adc
jmp
inc
mov
sti
ss
lods
cwtl
jns
shrb
jmp
and
mov
mov
stos
shll
and
stc
repz
clc
scas
movsb
or
or
in
repnz
jae
inc
sbb
cmc
pop
push
inc
insb
inc
aaa
push
inc
mov
adc
loope
dec
add
push
rcrb
lea
pop
jg
popf
pop
ret
iret
inc
popa
add
test
and
popf
in
rorb
xchg
jl
test
jp
arpl
inc
data16
cmp
je
loop
out
xchg
in
inc
mov
mov
add
sti
lds
ret
clc
xor
lret
ss
sbbl
cmpsb
xchg
sbb
xchg
sti
pop
push
sub
adc
pop
insl
adc
jg
jbe
out
sub
rorb
xor
sarb
fwait
clc
bound
cmp
or
fwait
cli
popa
sub
jae
and
jl
mov
adc
test
les
test
add
mov
jo
sahf
pop
mov
xchg
xor
mov
push
cmpl
jns
sbb
ljmp
sub
addr16
movsb
in
jne
gs
insl
in
lret
jmp
mov
mov
and
push
dec
repz
mov
pop
sarb
mov
xor
and
rclb
test
lahf
jmp
push
adc
or
adc
jp
repnz
jbe
xor
lds
pop
sti
xor
stos
or
jge
cmp
stos
stc
scas
adc
cmc
lcall
outsb
mov
outsb
mov
jle
sub
xor
mov
loope
xor
pop
in
ss
rcr
xchg
stos
outsb
cmpsl
xor
rorl
cli
xchg
mov
test
mov
movsb
or
lds
nop
mov
mov
fwait
cmp
shl
mov
aad
pop
push
ss
addb
inc
pop
adc
aas
cmp
pop
mov
and
inc
sahf
movsb
stc
adc
sbb
xchg
sub
mov
jg
fwait
test
cltd
or
mov
lods
dec
pop
add
in
cmp
mov
cltd
push
dec
fs
cld
lock
outsl
sbb
sahf
in
stc
jo
stc
cli
add
lahf
pop
cltd
fwait
mov
ljmp
xor
dec
xchg
in
dec
leave
xlat
outsl
xchg
dec
lea
cmc
lret
pop
bound
inc
mov
cmpb
xor
lret
popa
mov
jle
xor
push
imul
imulb
or
bound
ljmp
mov
xchg
insl
fildll
arpl
ljmp
mov
js
out
xor
in
xor
add
outsl
les
push
pmuludq
cmp
imul
lret
xor
mov
mov
sub
test
clc
daa
jl
lahf
scas
sub
jecxz
jge
mov
out
roll
xor
divb
aas
push
aas
xor
aad
sbb
out
jo
xchg
mov
xor
in
mov
mov
sti
and
cmpsb
lahf
stos
js,pn
je
ficoms
or
mov
xchg
mov
into
call
out
ljmp
fisttpl
pushf
jns
cmp
mov
push
pop
test
xchg
lock
mov
add
cmc
mov
mov
ljmp
popa
mov
daa
lock
sub
lods
ret
pop
sub
xchg
dec
aas
daa
mov
cmpsl
and
inc
dec
js
stos
sub
cmpsb
dec
mov
or
xchg
movsl
ljmp
out
cs
mov
lock
mov
decl
addr16
dec
dec
pop
rolb
pop
lods
cld
std
lahf
faddl
xor
or
movsb
call
mov
mov
and
lds
cmpb
push
mov
gs
pushf
ja
ret
out
or
das
in
pushf
int
shl
test
sub
mov
inc
cmpsb
int
in
adc
sbb
xchg
jg
push
xor
dec
insl
loope
leave
ret
sub
ss
aaa
pop
addr16
mov
sub
and
push
in
xor
cmp
lock
js
jmp
adc
inc
xor
es
in
scas
add
in
hlt
or
outsb
pop
arpl
xchg
sbb
inc
push
and
in
jb
call
and
xchg
xor
mov
jbe
adcb
pop
cmp
rcrl
pop
insl
scas
orb
rclb
mov
aam
mov
xchg
mov
mov
inc
xor
mov
rcrb
bound
std
jo
add
ss
sbb
xor
test
rclb
fs
insl
cs
out
jns
push
std
idiv
or
xchg
adc
lcall
cmp
hlt
insb
ret
jns
cltd
call
mov
push
int
jns
lods
dec
test
aas
xorb
pushl
jecxz
sti
mov
pop
addb
mov
fsubrs
xchg
cmpsb
je
mov
xor
mov
xchg
test
mov
out
in
fldt
clc
in
imul
sub
inc
loop
ja
filds
xlat
jno
lahf
bt
insb
imul
shrb
jle
xchg
std
or
aaa
shrl
imul
aam
sbb
sbb
jle
or
fcoml
and
or
aam
cmpsb
call
in
cmp
movsb
mov
dec
or
xor
jno
gs
idivb
push
hlt
fistpl
sar
in
xor
sbb
mov
rcrl
cmp
sbb
repnz
lret
std
lret
mov
jp
push
ret
out
mov
stc
push
sbbb
push
xor
gs
lock
rorl
mov
xchg
shr
push
adc
jb
addl
dec
push
mov
sti
push
orl
push
movzwl
orl
lea
jecxz
dec
xchg
and
popa
dec
leave
xor
xchg
stos
das
sbb
inc
adc
iret
or
lret
roll
ret
es
mov
imul
push
sarb
fidivrl
cs
in
popl
pop
jp
xor
and
jae
mov
mov
xor
push
pop
lahf
xchg
cs
fldl
loopne
fisttpll
cmpsl
mov
or
add
cmc
pop
fcomp
dec
inc
scas
or
push
cmp
testl
sahf
mov
and
das
xor
xchg
mov
xlat
push
add
je
cs
out
push
inc
jge
jecxz
fsubp
dec
inc
jl
lods
or
repz
frstor
jle
mov
test
lret
ret
jae
sbb
notb
mov
xor
outsl
inc
and
pop
jl
lea
push
out
adc
outsl
outsl
jb
push
mov
test
jb
jmp
lcall
push
into
repz
xor
or
aaa
loopne
add
vmwrite
ljmp
roll
xchg
rorb
insl
jne
mov
sub
fwait
cmp
and
test
incb
xchg
jno
jecxz
mov
sbbb
test
addr16
icebp
rcll
leave
mov
cmc
call
push
lret
stc
jo
nop
test
mov
mov
mov
cmpsb
sbbb
jl
aas
mov
out
fwait
sarb
push
popa
test
xchg
mov
andl
xor
outsl
lret
insb
fcom
and
push
leave
push
rorb
and
mov
mov
rclb
push
ljmp
out
xchg
push
or
mov
add
and
xlat
xchg
mov
or
imul
loope
jmp
push
jmp
mov
dec
call
xchg
mov
bound
movsl
push
cmp
sti
jle
mov
test
inc
loope
xchg
add
scas
pop
push
test
xchg
loop
xor
pushf
fwait
and
outsb
push
xchg
fldl
xor
popa
sub
arpl
jne
push
dec
sub
scas
in
fildll
dec
inc
lods
aam
leave
stos
bound
rcl
xchg
popa
mov
daa
xor
push
mov
add
push
pop
test
mov
mov
mov
jne
in
jno
and
or
cwtl
nop
xchg
pop
jmp
test
mov
call
xchg
push
cmp
push
nop
in
push
ret
aad
pop
lods
cmpsl
lods
sbb
dec
popf
xor
and
stc
lret
pop
and
insl
dec
inc
idivl
les
xor
jmp
mov
iret
or
or
test
or
xchg
lret
shll
or
mov
cmpsb
pop
jno
lret
sbb
pop
mov
in
fists
lds
js
int
xchg
mov
scas
mov
and
imul
imul
mov
call
add
and
clc
ret
inc
pop
or
or
jae
push
mov
in
data16
scas
ret
cmp
jo
cmc
cmp
or
xchg
jg
jge
ja
dec
rclb
sbb
mov
inc
and
lret
int3
icebp
dec
cltd
arpl
sub
and
cli
pop
pause
jns
inc
out
xor
adcl
dec
rol
icebp
jnp
fs
bound
ret
nop
faddl
pop
cwtl
cmp
push
jecxz
mov
adc
pop
push
gs
std
fisttpl
dec
adc
sbb
ljmp
les
lea
sub
insb
popa
stos
cmpsl
inc
pop
je
mov
pop
test
sti
rcl
rcl
lea
nop
fidivl
inc
jmp
int
fldt
cmp
lods
xor
inc
sbb
mov
sahf
movsb
scas
lret
push
push
mov
mov
lcall
call
mov
push
pushf
imul
inc
mov
cmp
jge
das
cltd
jge
pop
ficomps
sahf
fcmovu
inc
xchg
jnp
pop
loope
ljmp
sbb
cmp
jge
adc
adc
std
mov
popa
or
or
repnz
std
fisttpl
and
movsl
popa
cmp
pop
and
adc
pusha
mov
and
jae
les
xor
fwait
mov
and
sahf
push
call
jp
mov
adc
fisubs
test
xor
mov
dec
dec
mov
cmp
jbe
adc
jg
enter
push
in
jmp
adc
das
jg
cmp
xchg
and
sti
movsb
xchg
ss
mov
or
jae
push
mov
jbe
push
inc
cmpsl
sbb
aad
mov
jno
pop
dec
xlat
add
fwait
mov
cmp
xchg
pop
pop
sbb
inc
sub
imul
push
mov
push
in
adc
arpl
mov
fbld
mov
stos
lods
inc
inc
pop
sub
out
pop
mov
inc
lret
lds
loope
ret
test
jl
xchg
pop
in
and
jmp
jle
inc
xchg
test
fsts
std
leave
aas
xchg
imul
adc
cs
arpl
testb
push
xor
mov
dec
jl
adc
in
mov
arpl
push
or
xchg
dec
imul
in
imul
push
dec
test
mov
and
mov
call
ss
andl
xor
adc
enter
mov
testb
popa
andb
fidivrl
cs
jmp
stos
mov
jge
or
movsb
push
ud0
arpl
in
jecxz
xchg
dec
test
cwtl
xchg
aaa
subb
scas
jbe
mov
mov
sbb
iret
mov
mov
add
lcall
sub
xchg
loop
aam
add
xchg
push
xchg
in
test
pop
pop
mov
mov
cmp
test
aad
pop
test
mov
les
add
pop
jecxz
adc
inc
sub
dec
xor
jl
cmp
arpl
mov
jp
jl
loop
and
rolb
mov
sbb
enter
test
push
jns
ljmp
sbb
pop
adc
jno
test
fcmovbe
jbe
add
cmpsl
adc
mov
push
sar
mov
jp
data16
adc
insb
pop
mov
inc
dec
mov
rorl
test
outsl
mov
jns
rcrl
scas
cmpsl
inc
fs
mov
fstps
int
std
stos
xor
loopne
sbbb
lods
xlat
sbb
mov
incb
insl
sbb
rclb
repnz
ljmp
xor
icebp
mov
jne
sbb
jb
pop
std
xchg
popf
ja
inc
sbb
sarl
adc
rcll
stc
stc
out
fldenv
andl
sub
imul
data16
adc
nop
xchg
pushf
fldl
push
jns
xor
push
je
mov
mov
xor
clc
xlat
sbb
in
inc
jge
fidivrl
and
push
push
adc
adc
cmc
dec
js
pop
push
pusha
fdivs
sbb
nop
xchg
shl
cmpsb
fidivl
and
cmp
xchg
sahf
cmp
ret
andb
loop
fcoms
popl
sahf
add
add
insb
and
adc
aam
call
or
or
je
sub
push
adc
xchg
in
loope
mov
adc
sahf
adc
loopne
xor
mov
cmp
jp
pop
jmp
lahf
or
imul
mov
in
jmp
xchg
lods
sub
push
mov
dec
lods
fstps
jge
push
out
out
stc
and
pop
fwait
in
cli
or
xor
std
cmpsb
sahf
add
icebp
outsb
sub
inc
mov
dec
rcl
mov
and
cmp
in
pop
mov
loopne
cmp
mov
add
dec
ljmp
and
cmp
cmpsl
andl
insl
inc
in
notl
icebp
lret
stos
dec
or
dec
insl
outsl
push
inc
pop
lret
cmp
push
jnp
dec
dec
aaa
test
push
push
mov
cmp
mov
loope
jecxz
ret
repnz
pop
pusha
mov
mov
mov
sbb
aam
out
xchg
lods
jl
addr16
pop
push
movsb
jg
faddl
jae
hlt
jb
mov
xor
jbe
mov
push
icebp
jge
dec
and
add
pop
fnstsw
les
mov
icebp
sbb
adc
push
pusha
fbld
scas
lret
rcll
xchg
mov
je,pt
mov
lcall
lods
xchg
pop
test
test
sub
mov
cmpl
push
lods
xor
test
fsubl
pop
mov
sub
ss
add
or
stos
cmp
popf
gs
pop
inc
push
lcall
das
sub
je
aas
push
jecxz
jbe
mov
popf
dec
and
pop
fnstsw
aas
mov
push
mov
or
aaa
push
push
adc
cwtl
adc
nop
jnp
imul
dec
imul
sub
adc
jecxz
fs
outsl
sub
lock
push
xchg
popa
inc
pop
fimull
enter
rcll
fcmovb
push
lock
iret
pop
nop
lret
movsb
insb
mov
xchg
arpl
test
cwtl
adc
adc
incl
ljmp
and
cld
rolb
mov
dec
jl
push
in
sub
pushf
jns
sbb
das
jp
sahf
hlt
fisttpl
pop
notl
cmp
ss
push
jmp
push
and
xor
fildll
and
js
notl
push
pop
pusha
cmp
shl
mov
and
fdivp
lods
inc
mov
loope
and
or
xchg
xchg
sti
sahf
xor
jp
sbb
xchg
js
pop
jb
std
inc
ljmp
xchg
adc
mov
ljmp
sub
sub
jle
fwait
pop
mov
jbe
test
mov
dec
insb
push
add
int
mul
out
pop
mov
inc
repz
dec
out
das
je
sub
mov
aaa
cmp
enter
sub
fwait
jge
popa
jno
dec
xor
imul
jbe
shl
lds
cli
sbb
push
pushf
imul
sbb
mov
mov
jnp
and
xchg
cmp
aaa
cmp
mov
adc
jl
aas
sub
mov
movsl
or
jmp
push
sarb
mov
fstpl
dec
test
xchg
push
sub
jb
cmc
out
out
mov
cmp
test
inc
ret
inc
cli
lds
loop
and
add
in
sub
fsubrs
lret
adc
mov
mov
push
xlat
scas
adc
into
mov
insb
pop
jo
lods
cvtps2pd
adc
add
inc
sbb
shll
ljmp
stos
sub
inc
mov
stos
mov
cmp
sbb
pop
xchg
fsubr
cli
jmp
pop
push
xor
lret
dec
push
push
mov
cmp
call
lds
mov
adc
or
inc
cmpsb
fisubrl
clc
std
addr16
enter
dec
jnp
popf
xchg
fiadds
outsl
sar
push
mov
xchg
jge
out
int
add
pop
push
dec
jl
lds
or
add
loopne
adc
add
add
icebp
insl
js
sub
rorb
add
cmp
push
mov
push
jo
in
jp
mov
test
shr
cltd
insb
movsl
mov
add
mov
fisubl
push
outsl
sub
call
push
sti
addb
jbe
shl
push
aas
cmp
mov
mov
fistl
popa
push
fiaddl
outsb
inc
rcrl
in
adc
sbb
xchg
lea
adc
cmpsb
jnp
lds
pop
lods
cld
out
cltd
cmp
sub
xor
scas
xchg
fs
leave
mov
leave
imul
push
subb
lahf
sarb
pop
ret
jle
dec
lods
mov
int3
xor
ret
jp
adc
sub
je
fcomps
mov
mov
andl
mov
jnp
jnp
cld
adc
aaa
popa
pop
dec
sbb
push
add
xchg
pop
xor
std
inc
je
inc
cmp
push
in
cmp
xchg
inc
in
sti
pop
rclb
dec
icebp
arpl
ljmp
push
sbb
fdiv
addr16
jge
int3
rcrl
sub
stos
mov
dec
arpl
out
shll
dec
rcll
jno
icebp
std
fcomps
adc
xchg
lahf
push
lahf
mov
mov
jle
popa
cmp
ret
add
mov
aas
movsl
xchg
fistpl
xor
add
leave
in
sub
enter
cs
outsb
pusha
add
movsl
pusha
mov
ljmp
push
popa
and
and
mov
push
sbb
jno
xor
test
addr16
cmp
mov
mov
out
xchg
adc
mov
testb
iret
add
xor
push
mov
adc
inc
repz
test
test
es
dec
loope
cmp
movsl
sarl
mov
mov
loope
jnp
mov
sbb
ss
sub
sbb
insb
inc
cmpsb
adc
xor
stos
jno
movsl
fmulp
fldcw
inc
jmp
aad
ret
es
in
pop
aad
lods
insl
fidivrl
mov
and
pop
inc
icebp
lock
and
ds
mov
aaa
imul
dec
rorb
ljmp
fs
xchg
lods
or
int
roll
lahf
popf
xchg
aam
lods
adc
mov
clc
jbe
dec
sub
xorl
mov
ret
mov
cmp
xor
jo
aaa
pusha
icebp
cltd
or
movsb
pop
jmp
data16
popa
scas
jns
out
xor
sar
out
xor
rcrl
js
sbb
stos
std
jnp
dec
fstl
push
xorb
lret
mov
pop
mov
shlb
repnz
inc
add
inc
jbe
jge
push
fiadds
test
aas
pop
insb
sub
sub
aam
mov
loope
xchg
pusha
fisttps
xchg
adc
jbe
mov
mov
inc
pop
lahf
jp
and
aas
icebp
int
mov
nop
fidivl
mov
jmp
cmpsl
pop
add
sahf
xchg
daa
dec
in
sub
pop
pop
daa
add
ds
pop
and
repz
mov
aad
push
fiadds
les
lock
cmpsb
psubb
lods
lret
sub
cmp
ret
in
rorb
in
mov
mov
adc
pop
or
xlat
sub
jle
mov
jae
or
and
adc
inc
bound
add
mov
ljmp
mov
cmpsb
dec
insl
icebp
rorl
movsb
fisubrl
and
ja
out
push
sbb
inc
icebp
mov
pop
std
jecxz
fmuls
pop
cmpsb
je
push
scas
sub
repz
inc
jle
sub
push
jno
popa
sub
jnp
std
in
dec
sub
insb
pop
orl
inc
repnz
mov
xor
scas
leave
mov
out
mov
push
pop
cmpsl
je
adc
adc
sbb
fcoml
movsb
aad
fs
mov
je
or
fs
fimull
inc
mov
mov
add
xchg
sub
lret
sub
jp
negb
je
jnp
addb
push
divb
mov
inc
pusha
xchg
shlb
pop
int3
scas
xchg
cld
gs
mov
xchg
test
pop
nop
ret
lahf
in
push
xor
add
in
outsb
movsb
push
out
cltd
mov
pop
arpl
scas
mov
into
push
dec
push
and
xchg
push
jne
lods
jbe
mov
xchg
pop
adc
jmp
jne
mov
fidivs
shrl
cmp
mov
fsubrl
or
out
ffreep
or
pop
leave
leave
jge
add
in
inc
pop
js
sbb
fmul
pushf
pop
lcall
mov
add
pop
lahf
movsl
adc
xorb
cltd
ds
std
repz
and
mov
sub
fnstcw
cld
push
xchg
fbld
mov
shlb
jno
sub
test
jns
sub
rcrb
jge
out
jo
sub
push
pop
xorb
dec
loopne
mov
jmp
pop
scas
stos
bnd
aas
mov
xor
sub
mov
mov
ds
fnsave
ror
mov
movsb
xor
mov
dec
jno
fcoms
xchg
in
inc
push
xchg
xor
stc
leave
clc
cmp
and
repz
sub
mov
fistpll
call
add
inc
pushf
or
push
xchg
and
mov
movsb
popf
add
das
lret
movsb
xlat
pop
or
shl
lock
fadd
cwtl
push
push
cltd
xchg
or
jb
fs
dec
mov
inc
xchg
mov
and
subb
imul
sahf
lcall
xchg
vcvtpd2psx
adc
sbb
sub
arpl
fucomip
lds
insb
dec
data16
fbld
divb
sbb
mov
sarl
ljmp
push
ds
inc
fstl
push
negl
ja
jge
aam
adc
call
lds
addl
and
jns
or
pop
pop
psubusb
outsl
out
inc
mov
adc
xchg
adcl
ret
mov
jmp
rclb
popf
lret
xlat
push
xor
int
mov
into
inc
in
sub
or
lods
xchg
fimuls
call
or
into
push
push
popf
xor
sbb
push
or
test
adc
mov
lcall
lods
pop
or
pop
shl
mov
lock
into
mov
jb
add
jns
shlb
das
pushf
jp
push
in
hlt
test
xlat
cld
fcmovb
or
idiv
dec
mov
iret
or
jb
popf
sbb
insb
dec
xor
xchg
rep
mov
cmp
rcrl
dec
pop
hlt
pushf
arpl
loopne
push
jno
xchg
iret
lea
and
shll
ja
repz
js
push
cmp
divl
pushf
mov
push
or
xor
shl
inc
sub
jo
xchg
fadd
out
dec
mov
and
mov
add
mov
mov
add
adc
in
sub
mov
popl
xchg
jns
sbb
mov
out
push
add
scas
js
rorb
scas
lret
loopne
and
mov
fnsave
add
rcrb
lcall
xchg
jg
inc
and
out
mov
cmp
fs
std
into
notw
fsubl
bound
ss
jne
push
je
in
and
je
and
dec
mov
add
push
add
sub
xor
clc
test
repz
bound
outsb
pop
lret
jmp
jge
std
xchg
lcall
mov
push
addb
cmp
mov
imul
jno
lret
or
xor
mov
mov
xor
cltd
repz
xchg
add
mov
push
push
cltd
jmp
cld
dec
mov
stos
pop
inc
mov
sbb
lahf
mov
push
dec
xor
mov
in
adc
cmpsl
jg
dec
jb
xor
xor
clc
cmp
sbb
sbb
sub
fisttpll
xor
movsb
and
aad
in
jecxz
cmp
cmp
sbb
mov
pop
pop
imul
mov
mov
pusha
dec
fidivl
add
cmpsb
sub
jmp
hlt
fldenv
lock
mov
stc
sub
mov
shll
aaa
jecxz
xor
gs
divb
out
push
adc
mov
sbb
test
aad
fcomi
sub
out
test
add
sbb
adc
or
leave
cltd
imul
stos
stc
leave
add
cmpsl
xchg
lret
mov
adc
scas
add
bound
loope
sub
pushf
adc
aad
mov
sbb
in
nop
xchg
fsubrs
sub
clc
jno
jmp
insb
nop
xchg
jecxz
pop
mov
int
pushl
cmp
mov
mov
test
push
out
jecxz
jae
xchg
bound
pop
pop
jno
sub
popa
or
lret
inc
cmpsl
pop
push
or
xlat
or
test
pop
xchg
and
push
and
imul
addr16
dec
inc
cmp
in
pop
aad
pop
rcrb
mov
inc
add
ds
sbbb
jl
roll
sub
lods
aaa
jge
dec
mov
cmp
and
xor
aad
cld
mov
das
adc
mov
dec
lods
inc
cld
push
mov
push
lods
outsb
xchg
add
push
sub
xchg
fld
mov
jns
mov
pop
push
aas
shll
test
cmp
push
jp
fwait
sub
insl
xchg
aad
es
add
cmp
aam
adc
or
cmp
adc
push
mov
orb
cmp
mov
lock
fldl
test
not
cwtl
mov
push
js
jbe
in
or
clc
ret
xor
notb
mov
mov
mov
sbb
test
push
shrl
push
int
add
inc
movsb
idivl
mov
dec
xorb
scas
into
mov
push
cmp
nop
lea
mov
loop
inc
call
addr16
jp
dec
mov
sbb
xchg
inc
iret
inc
rcrl
lods
cwtl
push
cmp
cmp
inc
enter
leave
popf
lret
jae
jae
xchg
repnz
dec
clc
inc
sbb
fld1
hlt
gs
in
dec
popa
les
xchg
hlt
arpl
adc
sub
jle
out
cmp
add
daa
aam
xor
arpl
rol
inc
out
cmp
fdecstp
cmp
lea
add
mov
fsubrs
out
dec
in
and
leave
pop
fstl
repz
sahf
cmc
mov
lret
cmpb
enter
cld
pop
dec
pop
lds
addr16
icebp
jmp
push
inc
and
leave
clc
and
dec
lret
xor
cli
mov
pusha
xchg
filds
insl
push
jb
dec
pop
jmp
rolb
jb
sahf
cmp
xchg
loop
imul
mov
or
jns
dec
pushf
cmp
movsl
jmp
cmpsl
or
fisttpll
add
ret
and
xor
call
out
std
loope
jbe
lods
cmp
iret
aad
mov
mov
sub
cli
mov
sub
add
loopne
lds
sbb
jl
push
xorl
sub
and
pop
shl
insl
mov
aam
fwait
movsl
stos
js
push
jmp
loop
xorb
and
mov
scas
pop
daa
or
stos
inc
loope
in
mov
popl
sbbl
and
and
inc
add
test
aas
stos
push
cmc
or
mov
in
pop
or
dec
adc
push
cmpb
int3
in
fnsave
sti
rcr
cltd
frstor
fisttps
fdivrl
aas
mov
repz
je
cltd
mov
mov
test
adc
add
les
cmpl
faddl
lret
push
adc
in
sbb
sahf
or
jne
popf
int
imul
std
cmp
aas
sbb
push
addr16
push
fs
xchg
imul
ss
mov
add
test
sub
cmp
cmp
and
pushf
sub
pop
into
subb
dec
mov
js
jno
gs
stc
inc
dec
cmpsl
sub
mov
or
push
lret
mov
inc
adc
pop
add
cmp
dec
orl
cld
cmc
push
aaa
not
pop
pop
adcb
cmp
popf
jl
out
jmp
push
testb
hlt
pop
ljmp
dec
aas
pop
fnstcw
ljmp
hlt
jns
jmp
sbb
addl
inc
or
sub
cli
js
mov
mov
testb
mov
push
rcl
stos
std
mov
ds
arpl
leave
dec
pop
cs
lock
out
sbb
mov
lret
dec
push
out
sar
hlt
mov
lods
push
push
popf
cmc
lret
inc
in
cltd
add
or
in
cmp
inc
movsl
xchg
inc
mov
jne
xor
push
mov
mov
push
clc
hlt
dec
push
ret
arpl
repnz
out
push
sbb
cmpsl
call
divb
push
adcl
fldenv
sub
sarl
jg
movsl
fistl
mov
sbb
fildll
fdivs
pop
jno
sbb
xchg
inc
push
pop
out
lock
cmp
push
mov
sub
subl
cmp
push
and
jbe
or
xchg
subl
or
xchg
rorl
in
push
jne
adc
xchg
loope
test
push
and
in
or
xchg
rcrl
int3
lret
mov
fsubs
outsb
push
ret
or
inc
fimuls
or
out
and
xchg
push
adc
int3
mov
rcrl
sub
xchg
cwtl
cmp
test
inc
dec
cmp
arpl
jns
dec
and
cmp
cltd
rolb
cmp
imul
mov
mov
pop
call
xor
and
pop
stos
das
idivb
test
inc
ffreep
sbb
arpl
or
or
test
or
mov
test
pop
inc
xor
repnz
out
das
repz
into
push
push
jp
pop
jmp
mov
adc
int
pop
lcall
out
imul
cmp
push
adcb
jae
or
jl
ret
out
or
and
pushf
lods
out
icebp
and
xor
add
stc
out
in
cmp
stc
scas
cmp
inc
xor
inc
rorl
les
test
push
xchg
sbbb
out
pushf
test
je
out
xchg
push
inc
push
loopne
cmp
xchg
lods
out
lcall
xor
insb
ficoms
sub
mov
mov
jl
cmp
pop
inc
ret
inc
inc
jp
mov
jo
rcr
loopne
dec
sbb
inc
fisubs
in
test
push
imul
ja
push
int3
inc
sarb
jmp
lret
repnz
fsubp
out
push
mov
mov
push
addl
call
push
dec
insl
or
mov
std
cltd
jg
sub
cs
inc
jecxz
sub
mov
pop
repz
lea
fstpl
xchg
aas
jmp
aaa
test
push
sbb
lods
and
add
mov
lds
push
mov
aam
insb
push
mov
sbb
and
mov
nop
stc
ret
inc
jmp
and
adc
xor
bound
daa
stos
out
push
sahf
shrl
xor
mov
inc
adc
pop
inc
sub
ret
ret
out
ja
push
adc
das
push
js
testl
adcb
aaa
xor
cmp
push
pushf
test
sbb
jge
mov
jmp
jae
xchg
jmp
jmp
mov
add
mov
pop
outsl
pop
bound
pop
push
xchg
fcompl
out
hlt
jp
pop
jp
aam
faddp
imul
adc
out
push
mov
sub
stos
hlt
dec
and
leave
pusha
cmp
cmp
mov
xchg
cmpsb
leave
mov
sbb
ljmp
sub
call
xchg
outsb
insb
fdivs
push
mov
and
lea
gs
lock
jecxz
dec
jge
mov
and
shll
mov
xor
sub
pusha
cwtl
xchg
mov
inc
or
call
jo
pop
jmp
mov
lock
loopne
ret
hlt
pop
pop
push
test
mov
jmp
fldcw
push
sbb
es
inc
call
aad
adc
inc
mov
xchg
mov
pop
ret
mov
out
pop
xchg
or
sub
ficoms
repz
xor
push
cmp
jne
call
ficoml
cmp
xchg
repz
jl
mov
dec
pushf
cli
aas
loope
fcomi
rclb
mov
inc
dec
or
cmp
sbb
sbb
ds
pop
xor
xlat
jne
je
mov
sub
fcomps
jg
aaa
loop
jnp
popl
mov
mov
repz
int
pop
popl
das
ja
cld
out
bound
ret
mov
fstpt
push
xchg
xchg
out
jg
dec
inc
lods
add
jae
mov
add
js
mov
lcall
or
sarb
xorl
stos
push
cmp
lock
insb
xchg
data16
loope
cli
xchg
mov
inc
jmp
lcall
xorb
aas
mov
ljmp
inc
jns
movsl
ss
cmpsl
xchg
jge
sbb
scas
inc
adc
mov
cmpsb
sub
rclb
mov
pop
rorb
icebp
push
popf
push
xchg
es
xchg
sub
sbb
cmp
xor
mov
test
add
inc
mov
jbe
or
fadds
pop
incl
iret
jecxz
pop
icebp
push
mov
repnz
mov
shl
out
lods
cmp
pushf
dec
cmp
and
and
jae
dec
shll
xchg
mov
add
sbbl
xchg
sbb
in
insl
cli
jnp
pop
mov
mov
lret
jb
mov
pushl
int3
out
and
mov
push
scas
adc
lods
js
xor
dec
inc
test
push
or
out
pop
push
jmp
mov
jecxz
lcall
dec
repnz
inc
sbb
cmpsb
call
sub
data16
dec
pop
cmp
ret
jo
xchg
cmp
mov
cmp
je
mov
inc
ja
xor
repnz
xor
fwait
push
and
push
fs
shll
lea
mov
and
or
mov
and
xchg
dec
cmp
scas
xor
jp
test
dec
adc
push
mov
push
dec
xchg
rcrb
inc
cmp
les
jb
repnz
adc
inc
daa
ja
mov
add
mov
sbb
cmp
stc
push
pushl
xor
sub
jb
data16
enter
dec
into
lods
xchg
add
fimull
out
or
jno
idivb
int3
inc
mov
jl
or
aas
push
lods
mov
imul
mov
inc
adc
mov
dec
mov
les
out
imul
lds
mov
dec
mov
leave
xchg
mov
sbb
pop
in
add
or
frstor
mov
inc
inc
xchg
pop
mov
scas
jno
add
jp
inc
sbb
fdivr
les
test
add
xor
mov
fcmovnb
aaa
loope
fcmove
inc
movsb
inc
in
movsl
mov
hlt
daa
and
adc
lret
hlt
dec
mov
dec
jns
mov
lret
fisttpll
data16
xlat
lcall
scas
lods
xor
adc
rcr
xor
test
pusha
jno
enter
insb
or
sub
mov
sub
mov
and
jae
sti
out
loop
pusha
dec
or
cmp
out
mov
loop
mov
std
xor
and
sbb
push
sub
lods
inc
fimull
gs
xchg
mov
adc
loope
das
es
jbe
shll
icebp
subb
mov
pop
arpl
sub
or
add
gs
in
mov
jne
dec
lcall
push
loopne
jns
call
dec
cltd
movsl
sub
fildl
push
mov
push
pop
cmp
sbb
pop
add
into
popf
sub
sbb
sbb
cwtl
dec
lea
or
push
inc
ss
push
jns
movsl
movsl
data16
mov
popl
pop
ja
ja
jne
push
cwtl
push
jno
mov
jmp
inc
push
test
push
pop
mov
and
fs
flds
lret
int
es
out
jb
add
cmp
out
imul
jbe
push
popf
iret
adc
fucomip
xchg
inc
pop
fistpll
xchg
inc
mov
mov
sbb
popf
in
adc
ss
push
and
ljmp
jb
dec
cmp
adc
mov
repnz
jnp
nop
sahf
adc
cmp
pop
push
sub
xor
dec
roll
fisubrl
ds
mov
inc
stc
mov
sbb
imul
rcr
test
pop
loope
inc
lret
jge
jl
mov
ja
mov
cld
sbb
shlb
jg
adc
ss
loopne
dec
xor
cs
adc
jns
jmp
loopne
xor
xor
iret
orl
aad
or
das
mov
repz
imul
cmpb
js
test
add
cs
pop
cmp
pop
add
je
aas
jo
cmp
lock
dec
sub
cmpsb
stos
xchg
inc
dec
jnp
pmulhw
mov
adc
mov
sbb
fimuls
sbb
rolb
jns
ret
mov
sbb
xchg
dec
adc
in
mov
cmp
cmpsl
repnz
mov
sbb
fwait
inc
fisttpll
aaa
rorb
jl
aam
popl
out
sub
and
mov
ret
sarl
imul
xchg
lock
fwait
push
insb
insb
xor
pop
pop
push
cltd
idivl
bound
jmp
sub
jns
sbb
sub
decb
jne
or
aad
push
adcl
ja
jp
cltd
repz
mov
out
sub
adcl
fdivs
pop
mov
cmpsl
enter
sbb
std
sub
pop
jns
pop
mov
popa
pop
adcl
dec
jecxz
sahf
dec
movsl
sti
jnp
jne
daa
or
and
dec
cltd
sbbl
in
daa
cwtl
jae
pop
pop
cld
sub
call
push
mov
push
jp
adc
add
outsb
jb
push
mov
pop
fwait
rdmsr
cltd
sub
pop
mov
gs
ljmp
adc
rcll
mov
repnz
mov
test
loope
xor
loope
xlat
jne
push
rorb
push
les
out
add
rolb
into
addl
sbb
push
pop
in
aas
mov
popa
cmpb
cld
pop
scas
xchg
or
ja
mov
mov
inc
or
pusha
or
lock
or
add
push
xlat
mov
fstpt
arpl
inc
mov
push
popf
jecxz
add
and
cwtl
sbb
ret
andl
lret
mov
data16
mov
fucom
sbb
lcall
mov
in
test
pop
loope
xchg
push
mov
and
mov
movsb
push
insl
cld
mov
lods
fnstsw
in
int
aas
mov
addb
in
jge
ljmp
pop
mov
mov
je
xchg
xor
jl
push
sub
jne
xorl
cmpsb
mov
add
cmpsl
jle
push
insb
int3
push
hlt
add
mov
or
insb
xor
mov
lret
sub
ds
pop
clc
stos
or
enter
push
xchg
mov
iret
xor
aad
fwait
dec
sbbb
in
cs
mov
lock
inc
sbb
cmp
daa
sub
mov
jle
fcmovnu
or
fs
das
andl
push
lods
or
ds
inc
imul
lea
repnz
push
pop
xchg
push
loope
std
gs
popf
popa
imul
pop
aaa
rorb
addl
xchg
lcall
sbb
cmp
push
rol
call
add
icebp
sub
cmpsl
xchg
jne
hlt
mov
scas
iret
outsb
sub
out
xor
pop
adcl
push
sub
cmp
int
lods
orb
cltd
mov
or
and
inc
test
mov
iret
or
in
out
add
in
sub
pop
lcall
mov
xlat
sbbl
jo
cmp
fimull
stos
jmp
xchg
adc
ss
mov
jae
adc
and
in
icebp
push
jge
pop
test
mov
adc
jnp
sbb
pop
lods
inc
and
sbb
dec
je
pop
and
pushf
mov
addl
clc
jns
fwait
mov
jns
mov
out
ja
pop
sub
ds
mov
iret
fisubs
sbb
or
fnstcw
xlat
mov
mov
in
roll
push
xor
adc
mov
out
adc
inc
inc
out
and
xchg
jmp
jmp
pop
ds
cltd
adc
xchg
push
popf
push
clc
mov
mov
push
stos
fmulp
mov
cmp
sub
mov
insl
pop
xorl
imul
shll
fistps
jne
dec
test
sbb
mov
fldcw
inc
imul
addr16
test
sbb
cs
das
out
push
xchg
cli
cmpsb
mov
lahf
xor
mov
jecxz
lcall
imul
std
adc
pushf
mov
repnz
negb
cwtl
xor
pushf
cmp
sbb
ss
das
push
mov
xchg
je
or
rolb
mov
mov
in
ljmp
pop
sub
testb
pop
lock
fsubp
cmpsl
xor
movsl
imul
xchg
add
rclb
std
arpl
mov
mov
cmc
incl
insb
loopne
push
insl
hlt
sub
inc
hlt
mull
and
addr16
sub
jge
insb
jg
sub
decl
add
stos
xchg
sbb
scas
stos
nop
faddl
xchg
xchg
sbb
xchg
jle
xchg
push
pop
push
fstpl
lcall
pop
jb
fs
adc
push
mov
insb
lret
mov
adc
roll
out
add
addr16
xor
jns,pn
jge
mov
jl
addr16
sar
add
dec
bound
or
fs
jle
add
stos
inc
mov
stos
push
flds
mov
daa
lret
jb
or
arpl
mov
sub
sbb
sub
data16
mov
pop
jns
pop
movl
rol
lcall
and
fs
xor
jge
and
dec
fcoml
xchg
fldcw
fadds
in
outsl
stc
movb
mov
dec
shrb
pop
int
inc
int
movsb
push
or
mov
dec
and
mov
cmc
jo
dec
leave
insl
inc
in
sub
mov
push
push
push
sbb
xchg
cmc
rorb
aam
dec
adc
cli
mov
push
daa
repnz
and
add
jns
xlat
cmc
mov
and
push
aam
or
daa
cmp
sarl
inc
push
ljmp
mov
movsl
ret
xchg
fmulp
rcll
push
testb
xor
sbb
and
or
xchg
insl
pusha
add
adc
adc
cli
and
sub
ds
push
xchg
rclb
jmp
loop
hlt
and
das
jge
mov
push
mov
repz
ljmp
sub
mov
inc
sbb
outsb
aad
aas
push
rcll
mov
sar
nop
out
xchg
xchg
push
lret
push
rcrb
push
adc
in
loopne
mov
jp
add
dec
out
sbbb
push
in
repz
mov
sbb
add
push
mov
dec
out
arpl
ficoms
push
sbb
lods
test
addr16
mov
sbb
mov
adc
aad
sub
mov
aam
stc
mov
mov
clc
push
jb
xchg
mov
imul
xchg
inc
add
jp
xchg
pop
jl
sbbl
xchg
push
inc
hlt
cmpb
dec
repnz
jge
pop
pop
test
insl
aad
out
pop
sub
push
adcl
call
push
inc
pop
pop
pop
flds
ficoms
int3
ljmp
and
cmp
pop
pop
mov
outsl
xor
pop
aad
scas
xor
sahf
pusha
push
push
fimuls
mov
cli
adc
daa
jmp
or
push
out
leave
add
push
mov
xchg
push
ss
push
push
outsb
push
xor
sbb
mov
fcomps
mov
inc
pop
lahf
loope
sbb
pusha
or
cmp
push
xchg
and
sbb
jo
sar
mov
mov
dec
dec
jg
psubq
in
je
pusha
mov
jns
testl
xchg
jo
or
loopne
je
leave
nop
sarl
adc
sub
imul
mov
int
mov
cmp
scas
incl
cmp
cmp
push
sub
scas
cmp
aad
and
cltd
xchg
int3
cld
xchg
shr
cmp
mov
out
jmp
dec
test
push
mov
call
fld
cmp
jne
imul
and
xchg
xor
sub
int3
test
xor
inc
mov
sub
aas
inc
int3
xchg
mov
repz
cmpsb
jnp
push
add
test
sub
popf
imul
sub
int
jo
enter
pushl
gs
push
mov
mov
push
push
cs
and
add
xchg
popa
cli
dec
mov
jno
scas
or
or
mov
or
jae
jae
xchg
inc
and
or
cmp
inc
or
repnz
icebp
jbe
xchg
pop
sahf
out
and
enter
adc
sbb
in
or
xlat
or
cmp
shrl
in
loopne
adc
inc
push
jle
jg
and
push
sbb
sub
icebp
xor
clc
adc
sub
adc
test
pop
jp
or
testb
hlt
add
cmp
andb
arpl
int
cwtl
neg
dec
ljmp
das
mov
jp
ss
xchg
push
adc
sbb
inc
xor
inc
dec
and
dec
imul
push
mov
pushf
xor
fildl
push
imul
dec
js
test
and
cmp
daa
add
dec
iret
pusha
lcallw
or
movntq
adc
dec
loope
cmp
fdivl
jg
cmpl
jne
je
lahf
dec
cs
ffreep
dec
push
mov
aas
sbb
idivl
or
pushf
test
push
mov
cltd
pop
outsl
imul
inc
pop
fsubl
arpl
aam
das
inc
bound
je
adc
fdivr
mov
or
jp
es
ljmp
inc
scas
loopne
imul
mov
out
pop
xor
dec
adc
ret
lahf
lods
aad
aas
inc
sbb
dec
jbe
insl
cmpsb
ds
insb
cmpsb
ret
jl
pop
xor
fiadds
movsl
lahf
mov
dec
and
dec
and
inc
push
movsl
mov
sub
leave
dec
push
inc
add
aas
xchg
scas
cmp
dec
cmp
dec
out
hlt
push
loop
or
sub
push
flds
into
cmp
dec
sbb
es
mov
adc
xor
dec
rorb
sub
cmc
or
lahf
xor
js
add
testl
dec
cld
adc
dec
bound
cs
subb
aas
insb
imul
jmp
push
mov
push
mov
cmc
ds
clc
nop
clc
jl
out
std
enter
xchg
leave
clc
fisubl
mov
mov
or
out
mov
dec
mov
mov
les
push
jns
mov
imul
test
repnz
filds
mov
cmc
ss
outsl
fwait
lds
sub
cmpl
jmp
and
mov
mov
das
ja
xor
jl
or
cmp
in
test
insl
sub
call
pop
or
lds
push
cmpsl
ret
nop
fisttpll
adc
fisttps
loopne
sbb
out
imul
jnp
mov
stos
xchg
sti
jmp
loop,pn
hlt
mov
jbe
adc
lcall
cli
es
in
push
fwait
les
shlb
mov
push
cmp
cmp
imul
mov
rclb
stos
push
xchg
int
jae
xchg
ret
inc
push
fiadds
ret
roll
ss
insl
ret
fnstenv
xchg
xchg
cmpsb
push
les
jo
ret
jbe
mov
cli
sub
aam
std
lock
lahf
xchg
sbb
cld
lea
cmp
mov
push
shl
jb
jg
push
xlat
test
ds
mov
sbb
stos
pop
ret
dec
fbld
xor
out
lahf
mov
lahf
cwtl
mov
sarb
loope
dec
sar
das
push
mov
sub
les
pop
push
aam
jnp
sub
sub
addb
push
jno
mov
int3
push
jg
jg
dec
rclb
sahf
or
mov
mov
pop
in
sti
lds
mov
mov
push
lea
inc
fs
or
dec
sbb
xor
lret
mov
jmp
addr16
sub
push
or
jecxz
jmp
jmp
adc
lret
out
outsl
fistl
dec
insl
jecxz
mov
std
jne
loopne
inc
xor
and
dec
xchg
jo
dec
inc
ljmp
cmp
movsb
adc
ret
cltd
lea
mov
cli
outsl
or
push
sbb
pushf
pop
inc
imul
loope
iret
loope
push
xor
fldl
rcrb
cli
push
fcmove
out
test
pop
jb
pop
aaa
inc
lret
inc
jp
aam
mov
gs
fistpl
lcall
test
std
inc
mov
test
jge
push
mov
into
incl
out
xor
inc
out
push
mov
repz
cvtpi2ps
inc
mov
repz
fwait
cwtl
popf
pop
mov
xor
enter
adc
clc
jle
aam
shrb
cli
ja
cmpsl
mov
aad
push
clc
out
pop
xor
ret
xlat
adc
mov
xchg
xchg
int3
pop
aas
out
lahf
inc
fmuls
clc
arpl
out
mov
out
add
nop
mov
mov
push
inc
push
dec
inc
xchg
jp
inc
mov
sbb
cltd
push
pop
sti
cld
and
adc
dec
adc
imull
xchg
sub
lret
insl
test
mov
pushf
in
push
inc
cld
les
xchg
int
pop
sbb
pushf
jbe
sbb
adc
js
fwait
movsb
out
fwait
and
insl
aam
std
mov
pusha
push
xchg
ret
xchg
dec
call
and
pop
iret
andb
insb
add
add
jo
adc
fs
cmp
cmpsl
sub
pop
mov
mov
pop
mov
fndisi(8087
mov
xchg
mov
into
mov
or
in
cmp
push
pusha
sbb
je
sarl
fnstenv
pushf
dec
dec
push
repz
xor
adc
push
xor
in
std
cmpsb
shll
cmpl
leave
in
mov
imul
mov
ret
cwtl
jb
push
das
pop
jo
jmp
nop
mov
push
ret
test
adc
into
sbb
cli
sub
or
fstps
ret
sub
in
cwtl
js
cmp
push
das
add
xchg
lret
xchg
sub
push
loope
cmp
and
arpl
jno
lods
test
pop
xchg
jns
xor
xchg
ljmp
sbb
xchg
cli
int3
add
ror
pop
das
adc
testb
jmp
adc
push
lods
or
jl
mov
or
add
sub
pop
xlat
loopne
mov
ds
mov
or
xchg
mov
adc
push
inc
jecxz
jne
lcall
inc
cld
lcall
jno
lods
fcoms
scas
dec
ds
hlt
negl
or
les
or
sbb
add
jb
adc
inc
mov
cmpsb
dec
aad
adc
xchg
dec
lcall
out
push
pusha
xchg
imul
outsl
mov
out
jae
jge
lods
inc
mov
inc
insb
cmp
push
dec
jge
jb
pop
push
jne
cmp
xchg
imul
into
push
jecxz
testb
adc
xchg
sub
cmc
lret
into
scas
xor
imul
xchg
jecxz
subb
cmp
lds
pusha
daa
lret
xchg
fistpll
fwait
inc
mov
lea
mov
addr16
insl
and
lahf
cmpsl
dec
ret
mov
mov
or
lods
cmp
push
mov
xor
and
jmp
call
push
sar
popf
orl
sbb
les
push
nop
pop
push
mov
xchg
jno
push
or
in
cmp
mov
add
inc
pop
sbb
xor
cmpsb
ret
lahf
mov
pop
neg
sbb
es
pop
jmp
or
push
loop
xchg
pop
cld
mov
sub
mov
ret
pop
aad
aam
dec
mov
fstps
std
dec
insb
into
scas
mov
add
gs
lds
xor
test
push
jge
mov
push
xchg
and
sub
push
mov
into
cmpsl
mov
add
adc
repnz
and
push
ss
mov
cld
or
rcrl
movsl
xchg
add
fwait
lds
sbb
fldcw
xchg
push
int
add
int
mov
jge
jg
push
lods
hlt
lea
cmp
aam
ja
jno
pop
aam
jg
mov
push
subl
jns
repz
jmp
pop
lea
xor
popf
jno
rclb
icebp
jnp
or
fdivr
sbb
hlt
or
adc
sub
test
dec
mov
dec
mov
mov
fldcw
push
dec
in
mov
nop
fiaddl
jno
xor
stos
adc
mov
sub
cs
js
and
andb
sub
add
xchg
lahf
push
jae
inc
movsb
push
adc
lods
insl
lret
imulb
and
sub
or
or
sub
dec
pop
lods
out
push
cwtl
cmovs
add
gs
imul
mov
sahf
push
dec
les
fstp
adc
sub
stc
push
test
pop
stc
pusha
and
mov
popa
mov
shll
jbe
movsb
jp
push
idivl
pop
add
fcomps
adc
ljmp
mov
cli
cwtl
mov
sbb
push
shl
je
ror
xchg
lds
pop
iret
add
lret
mov
dec
mul
incb
sti
inc
jl
incl
add
out
mov
push
adc
movsb
ret
into
sahf
scas
cli
xlat
and
cwtl
xor
ds
out
xchg
shll
cmp
loopne
or
push
sbb
cmpb
push
mov
das
xchg
cmpsl
fnstcw
cld
out
sbb
push
sbb
call
call
mov
sub
or
xchg
jo
lods
mov
sbb
push
mov
sti
test
int
xor
dec
pop
pop
jecxz
jle
out
mov
dec
xchg
scas
sub
scas
andl
xchg
ljmp
idivb
imul
pushf
jl
movsb
in
test
xchg
roll
int3
mov
cmpsl
jae
lret
dec
mov
int
fsts
xchg
lea
or
stos
rcll
cli
push
or
pop
mov
imul
into
xor
or
es
or
mov
add
int
stc
in
add
sbb
out
xor
inc
iret
outsl
adc
pop
sbb
push
push
fwait
sbb
inc
test
inc
pop
outsl
fistps
push
test
sahf
pop
xchg
pop
mov
xor
adc
add
jl
out
jmp
aaa
xchg
ret
inc
mov
sbb
mov
sub
pop
test
sub
push
dec
pop
dec
inc
pop
push
clc
loope
inc
inc
ja
daa
mov
sti
cmp
aam
pop
jp
loope
out
mov
rorb
lods
or
rclb
add
pop
adcl
addr16
shrb
test
sti
aam
jl
dec
dec
cmp
xchg
or
scas
cld
jo
arpl
sti
insl
mov
pop
cmp
xor
pusha
jmp
jne
es
mov
sbb
popa
imul
lods
dec
sub
insl
fists
aaa
xchg
push
je
rcrl
repz
inc
fbld
adc
pop
call
and
inc
ja
roll
lahf
push
and
push
pop
into
insl
mov
movsl
jns
ret
cmp
test
out
ficoml
cli
loopne
hlt
adc
xor
pop
or
adc
jne
xor
lea
outsb
insb
lea
sub
jle
xchg
lds
xor
call
xchg
and
ret
in
push
adc
jecxz
pop
call
out
data16
xchg
test
mov
adc
pusha
loop
imul
inc
stos
lret
scas
or
mov
aas
minps
out
mov
outsb
icebp
loop
cmp
out
or
cmpb
xor
mov
and
js
scas
hlt
push
mov
lods
push
xor
mov
scas
xor
pop
xchg
cltd
stos
inc
fmull
cmpsb
divl
jo
pusha
mov
cmp
insl
jo
lock
insb
and
adcl
out
mov
mov
xor
sti
iret
fmull
lret
js
pop
xor
or
pop
fdivr
push
add
shrb
rol
es
enter
aaa
cld
add
pop
movsb
mov
cmp
lret
jmp
add
popa
mov
int3
divb
hlt
or
cmp
jbe
outsb
pop
sbb
mov
sub
fs
inc
pop
call
jmp
sub
cmp
pusha
fistps
loop
and
mov
data16
push
es
pop
xchg
add
jle
ret
hlt
leave
dec
dec
cmp
nop
add
ret
or
mov
push
sbbl
sbb
xor
nop
sub
ret
or
push
enter
pusha
test
cltd
cltd
mov
xchg
xor
insl
and
sub
push
dec
mov
cli
cli
jle
mov
push
mov
rorb
cltd
cmp
out
pop
sbb
add
or
sbb
mov
clc
xchg
lea
fs
xchg
cmp
into
aas
movsb
lds
clc
jo
xor
jmp
sbb
pop
inc
cld
ret
jge
orb
mov
lret
pop
inc
subl
and
push
mov
adc
mov
outsl
scas
sbb
bound
das
stc
xor
mov
dec
dec
xchg
adc
sub
jne
xchg
and
sti
lahf
sub
xor
fsubrs
loopne
mov
xchg
int3
xchg
push
jle
push
mov
shll
test
sbb
mov
pop
xchg
cli
cmpsb
orb
outsl
mov
or
les
cltd
test
adc
mov
pop
mov
jnp
lret
rcr
mov
lahf
cwtl
lods
scas
inc
sub
das
mov
jne
addr16
fs
js
mov
jo
mov
imul
stos
and
push
mov
push
cmp
add
mov
call
ret
fldcw
push
inc
dec
xor
push
xchg
dec
jle
dec
jno
adc
xchg
pop
ficompl
and
adc
xlat
or
jne
xor
inc
sub
jno
movzwl
fisttps
xchg
into
cmp
mov
icebp
xor
mov
mov
xor
in
test
mov
xor
pop
cltd
inc
ljmp
sti
int
adc
lret
mov
lods
in
mov
mov
sar
push
or
flds
fscale
adc
jp,pt
inc
push
in
cmpsl
fwait
cmpsb
out
aam
aad
lahf
xor
mov
sbb
push
inc
in
icebp
xchg
gs
mov
in
enter
sti
int
adc
mov
ficoms
icebp
jo
dec
adc
sub
or
int
inc
xchg
mov
add
jle
clc
pop
inc
pop
push
aaa
lods
mov
pop
iret
out
and
push
lret
push
xor
out
cmp
fcompl
and
or
iret
pop
or
xor
xchg
xchg
push
mov
rcrb
mov
in
in
inc
sti
pop
int3
jecxz
ror
mov
das
bnd
mov
cs
aam
shll
nop
insb
in
xchg
jmp
frstor
out
fmulp
or
push
fidivl
mov
add
push
fisubrl
jo
mov
mov
ja
or
adc
orl
inc
lods
jo
jp
jns
push
sub
out
int
lea
in
or
or
test
jg
mov
mov
cld
js
lret
cmp
cmp
stos
pop
jle
into
xor
mov
sahf
jne
add
add
jmp
jnp
hlt
jp
cltd
testl
add
push
add
pop
ss
push
mov
jb
rorl
pop
sarb
xor
push
sbb
test
push
es
fldl
sub
and
cmp
orb
sahf
add
jmp
fsts
inc
mov
push
dec
or
je
mov
gs
ficoms
leave
addr16
add
dec
sub
mov
jmp
sarl
and
mov
push
sbb
mov
lcall
and
pop
xchg
popf
in
sahf
jp
into
inc
movsl
cmp
outsb
cmp
daa
pop
jmp
hlt
insl
adcl
loop
jmp
push
xchg
ret
add
adc
or
adc
sub
cld
mov
outsb
sbb
add
in
out
fstpl
shl
add
xchg
mov
jecxz
cmpsl
repnz
enter
inc
jmp
iret
inc
jne
mov
lcall
je
mov
stos
decb
andl
aaa
repnz
bound
mulb
push
mov
and
js
idiv
inc
pop
adc
add
pop
out
xor
push
sub
sub
fnstcw
dec
mov
adc
pop
add
and
movsl
dec
sub
orb
and
jne
pop
sti
lods
stos
xchg
test
sbb
adc
js
in
dec
loopne
jl
dec
testb
add
stc
xor
sbb
ds
sub
pop
xor
pop
ret
xchg
pop
insb
inc
addr16
cmp
sarl
xchg
in
aam
xor
cmp
add
cld
and
aam
and
push
in
jo
cltd
aad
int
or
mov
popl
cmovae
cld
or
or
push
insb
mov
loop
clc
mov
icebp
xor
pop
push
adcl
repz
cmp
sub
jge
rcrl
leave
sbb
mov
roll
jae
pop
mov
pusha
jle
mov
inc
jge
movl
jmp
cmp
xchg
xor
jecxz
inc
testl
push
pop
mov
mov
arpl
sub
lods
idivl
jo
lcall
lret
xor
out
xor
push
push
aaa
dec
cli
fildl
push
adc
pop
mov
cmpsb
adc
lea
or
jo
test
cli
push
push
or
xchg
mov
cmp
jp
dec
dec
test
popf
push
jg
push
cmp
pop
mov
fsubrs
mov
pop
fwait
aas
mov
into
pushf
lret
cmp
dec
das
ljmp
out
jo
xor
dec
rorl
xchg
pop
dec
int
push
jg
call
ds
shl
pusha
dec
jge
jg
test
xchg
jbe
jne
js
js
push
dec
idivl
sahf
stc
or
pop
ret
scas
mov
popa
jnp
ds
hlt
out
pusha
cld
fwait
cltd
mov
push
sub
cmp
shll
aad
inc
jmp
pop
test
sub
sahf
stc
inc
ret
mov
and
xor
adc
mov
sbb
movsl
fwait
je
dec
dec
popl
push
and
iret
adc
mulb
jmp
pop
loope
dec
jns
fdivrs
or
mov
fxch
jno
add
ds
sbb
adc
gs
lods
mov
cltd
inc
rorl
jo,pn
xchg
fcoms
inc
mov
pusha
aas
cmp
push
xor
loope
jle
rcr
pop
ss
cli
daa
mov
shll
outsb
rcrl
push
ret
fcmovb
mov
test
mov
pop
jb
add
arpl
icebp
scas
inc
inc
xchg
fs
xchg
pop
fisttpl
stos
cmp
pushf
out
or
push
repnz
loop
sbb
push
pusha
pop
outsw
adc
mov
cmp
xchg
mov
push
dec
iretw
std
mulb
dec
in
mov
push
push
std
jbe
lock
cs
sbb
lea
inc
in
out
clc
sub
loopne
push
jae
into
lock
mov
cmpsl
xchg
out
testl
sbb
stos
enter
je
pop
or
cmc
into
pop
mov
pop
mov
adc
lods
in
mov
inc
adc
push
shrb
pop
stc
push
cmpsl
shrb
aas
sbb
sbb
mov
cmp
sbb
dec
fsub
enter
decb
lods
adc
cltd
lahf
push
in
cmp
addl
loope
or
cmpsb
test
xchg
jge
xor
inc
mov
aad
call
iret
out
add
enter
call
push
push
mov
push
cmp
sub
in
insb
xlat
cmpsl
push
popa
ret
fsts
out
mov
cmc
add
mov
sbb
push
dec
pop
faddp
sbb
loop
inc
jnp
faddl
mov
jae
fucomi
mov
daa
pushf
mov
or
push
push
in
mov
or
add
mov
idivl
sbb
and
jne
test
icebp
dec
xchg
rcrb
or
lods
test
or
fldcw
gs
jp
jg
mov
cmp
push
mov
aaa
js
js
sub
adc
outsb
inc
cmpsb
hlt
ficomps
mov
sbb
or
xor
or
rcll
add
filds
sub
cmp
or
cld
inc
xor
sbb
js
in
pop
subb
mov
test
aad
scas
mov
mov
ss
clc
insb
adc
scas
mov
in
xchg
stc
add
test
pop
arpl
push
dec
mov
mov
add
popa
xor
enter
sbb
dec
addr16
xor
adc
cmc
clc
out
int3
popf
mov
dec
push
dec
push
sub
dec
mov
xor
call
cs
inc
popf
popa
cmp
dec
loope
xor
mov
jg
xorl
mov
negb
imul
insb
inc
fists
test
adc
sub
in
dec
push
xor
imul
pop
shll
lret
aas
leave
aaa
fcmovnu
cmp
cli
add
lahf
les
dec
jle
aaa
add
jl
xchg
fsubl
mov
inc
shrl
imul
fwait
scas
lahf
repnz
push
and
cmc
cwtl
addr16
xor
mov
push
scas
jp
aas
rol
outsb
and
in
outsl
cmp
icebp
stos
push
dec
mov
xchg
repnz
push
pop
xor
push
enter
jo
std
or
push
push
jg
aam
cltd
mov
sbb
leave
jl
bound
dec
outsl
lock
mov
sub
jae
push
sbb
xchg
and
ljmp
jb
aas
shlb
pop
das
cltd
inc
inc
in
cmpsl
aad
sbb
bound
and
lock
xchg
mov
je
into
xchg
add
insb
loop
push
fldpi
imul
out
imul
mov
iret
or
mov
cmc
push
rol
push
push
sar
xchg
xor
loope
popa
jnp
xor
repz
clc
push
ss
and
jo
fdivs
jp
add
sub
stos
mov
dec
mov
dec
lods
xchg
jge
mov
sbb
inc
jo
fisubrl
push
ja
lds
out
push
add
aaa
mov
dec
push
cmp
add
xor
aad
fcomp
mov
push
adc
push
ljmp
adc
and
jae
dec
inc
testl
push
or
xchg
cmp
push
push
sahf
inc
dec
sbb
sub
pushf
iret
cmp
pop
add
jns
int3
jne
jae
push
mov
icebp
xor
shrl
pop
jle
jmp
dec
hlt
push
ds
fmuls
js
dec
add
add
lret
out
test
in
add
stos
enter
inc
imul
ficompl
and
or
xchg
or
inc
sahf
es
or
sbb
dec
andb
and
adc
std
jmp
ljmp
cltd
inc
fcmovnu
mov
jg
fdivrl
mov
xor
ret
xor
bound
mov
fisubrs
mov
sub
mov
dec
cmp
insb
add
adc
xchg
mov
add
lods
sarb
outsb
test
or
jne
cmp
popa
ja
test
jo
or
rcrl
data16
in
dec
fwait
and
mov
add
inc
std
or
pop
xchg
mov
mov
push
jl
fs
push
adc
cltd
sbb
popf
or
mov
pop
fstpl
push
and
sbb
pop
daa
fimull
cmpsl
nop
mov
push
cs
stos
sub
movsl
sub
and
sub
andl
mov
cs
ret
ret
sbbb
xor
adc
push
push
ja
fs
sub
mov
cmpsl
xor
inc
fs
mov
jbe
xor
leave
xchg
out
cmp
mov
shlb
push
add
pop
mov
testb
insl
push
mov
sub
lret
mov
cltd
aas
adc
push
push
jno
fidivl
repz
insb
imulb
in
and
jb
fdivl
mov
or
ds
outsl
cltd
into
aaa
in
jl
cmp
and
ret
daa
imul
mov
mov
jns
shrl
fldt
mov
lea
repnz
jo
out
filds
inc
stc
shrl
adc
xchg
mov
in
inc
stos
pop
xchg
test
imul
ss
js
gs
in
xchg
test
push
scas
pop
jae
adc
sti
cmpsb
mov
fimull
outsb
int
aam
dec
into
rcr
loop
stos
enter
repnz
push
daa
cli
aas
jge
xlat
xor
adc
frstor
aad
mov
btc
clc
push
outsl
add
cmp
or
es
das
inc
push
and
sti
outsl
test
addb
adc
mov
ret
std
push
rcr
daa
iret
pop
lahf
lods
incl
es
fcmovnb
rclb
and
sub
clc
jp
mov
or
sahf
sub
inc
jmp
dec
ljmp
ljmp
insl
lock
adc
fdivp
dec
cmp
and
or
xchg
mov
dec
mov
fildl
arpl
sub
fimull
cmc
jg
jo,pt
test
cmp
pop
dec
adc
add
xor
mov
sbb
repz
mov
inc
or
adc
inc
lods
ljmp
push
arpl
insb
xor
cmp
or
sbb
mov
call
bound
adc
pop
dec
aas
aaa
lahf
dec
adc
and
out
out
movsl
insl
jbe
jae
and
int
and
lcall
stos
push
arpl
xchg
and
bound
pusha
pusha
dec
pop
mov
jl
dec
rcll
enter
mov
inc
sub
adc
cltd
or
fwait
add
out
int3
adc
cmp
js
ror
dec
xchg
mov
sbb
jns
shr
in
mov
rorl
and
sbbb
ret
fiadds
pop
jno
inc
inc
out
gs
push
pop
in
cmc
xor
dec
push
rolb
cmp
mov
in
loope
jne
adc
scas
ret
in
cs
and
pop
jge
jmp
lods
jae
popa
es
sub
mov
or
or
shl
scas
loopne
pop
ljmp
and
mov
imul
in
jae
cltd
push
inc
std
push
dec
ss
sbb
and
cwtl
pop
cmp
mov
adc
jb
data16
mul
cmp
clc
stos
rolb
jmp
int
xor
pop
jge
jmp
nop
popf
and
adc
clc
mov
test
jbe
call
imul
fwait
lods
aam
mov
pop
push
push
mov
std
test
bound
lret
jecxz
into
rcrl
jno
cmc
adc
nop
mov
movsl
int
sub
jle
push
hlt
int3
jmp
ds
std
gs
ret
cmp
dec
push
pushl
pusha
inc
test
xor
push
mov
or
ret
xchg
cltd
mov
and
push
inc
pop
dec
shlb
add
or
mov
push
sbb
inc
sbb
sub
ds
addr16
ljmp
pop
cmp
add
lahf
loopne
js
and
mov
loopne
and
int
dec
or
push
enter
mov
aad
inc
jecxz
popf
mov
ds
push
jne
addr16
cmp
mov
xchg
jbe
mov
int
sbb
cltd
aad
pusha
push
idivb
jp
inc
sub
in
sbb
cli
sti
mov
loopne
mov
les
mov
je
mov
mov
jp
lods
loopne
push
jecxz
movsl
insb
and
ss
and
sub
inc
inc
xchg
jl
les
ret
popf
adc
mov
repz
sahf
add
and
xor
popf
in
roll
xchg
jmp
mov
fstp
inc
cmp
pop
adc
jmp
test
cmp
out
ss
sahf
in
pop
push
ss
jno
movsl
outsb
cmc
pop
and
inc
stc
orb
mov
testl
pop
aaa
stos
popa
cmc
xchg
mov
mov
adc
imul
mov
loopne
test
adc
sub
jecxz
ror
test
orl
xchg
fxch
repz
inc
aam
adc
mov
and
aad
sbb
mov
add
mov
mov
xchg
insl
inc
pop
inc
mov
js
out
aaa
jecxz
das
paddsw
mov
and
push
pop
mov
inc
iret
push
jmp
push
into
pop
mov
rcll
adc
and
cmpsb
rcr
test
in
iret
push
or
ds
lds
jl
dec
into
fcmove
aad
xchg
sti
fidivs
pop
das
lret
shrb
sub
aaa
sbb
stos
popl
cmp
loopne
mov
mov
repnz
push
and
xor
lock
popf
in
or
lea
push
lcall
push
and
lcall
inc
ja
adc
aaa
cs
add
dec
pop
lods
aaa
cmp
add
ret
jno
push
jl
fldcw
sbb
inc
mov
jmp
jnp
inc
cmp
mov
adc
lods
push
dec
mov
adc
xchg
dec
ljmp
push
xor
xor
ret
or
sbb
push
cmpsl
inc
int3
stos
outsb
aaa
mov
mov
sub
and
or
cwtl
lods
mov
les
xor
js
enter
cwtl
gs
adc
inc
jecxz
adc
push
mov
xor
add
jmp
jae
test
shlb
jp
jle
jae
adc
loopne
cmp
mov
mov
pop
and
adc
andb
lods
out
inc
xchg
cmpsb
sub
cmc
lret
inc
adc
stos
int3
lds
sub
inc
cmc
in
push
arpl
scas
jge
mov
scas
inc
xchg
sub
adc
roll
pop
jns
aam
shll
jo
add
cs
outsl
inc
mov
fucomip
je
std
pop
test
cmpsb
leave
push
sub
dec
das
sbb
cmp
shll
mov
in
xlat
inc
add
jns
mov
inc
stos
fbstp
movsb
mov
enter
jecxz
cwtl
out
shll
pop
sbb
loop
mov
fcoml
lods
or
scas
icebp
popa
pop
loopne
pop
cmpsb
push
dec
xor
mov
cmp
hlt
jae
stc
mov
aaa
add
mov
addb
sub
inc
cmc
jle
add
lds
pop
ss
in
leave
inc
push
push
mov
pop
ficoms
cs
pop
push
dec
pop
lods
xchg
pop
add
mov
popf
fistps
stos
pop
cmpb
mov
test
jge
add
mov
and
jecxz
loop
nop
rcll
jno
mov
lds
mov
cs
adcl
push
jmp
xlat
xchg
jecxz,pn
ffree
pop
push
sub
in
in
es
jle
inc
mov
dec
xor
scas
imul
sbb
roll
push
loop
push
xchg
push
jns
int3
fldenv
fdiv
pusha
xor
fistl
leave
je
les
dec
outsl
mov
mov
gs
pop
add
xchg
int
xor
jo
cmp
xchg
or
out
pop
fisttps
imul
into
daa
push
fistps
int3
dec
mov
jbe
cwtl
enter
lret
outsb
mov
inc
mov
sti
js
cltd
in
decl
rcl
stos
movsb
jo
je
mov
or
add
cmc
xor
xchg
std
int
adc
mulb
rol
mov
test
test
pop
fidivl
inc
mov
or
sahf
mov
cld
mov
fisubrs
jnp
fnstenv
roll
dec
jmp
scas
and
dec
mov
and
push
ficoml
mov
lock
push
or
and
jl
xor
xchg
or
loop
shr
scas
dec
cmpsb
jnp
sbb
loop
push
movsb
sbb
mov
rorl
sbb
push
adcb
ljmp
sarl
lcall
mov
mov
jle
jnp
cltd
or
mov
and
add
in
cmpsl
mov
loopne
dec
dec
jmp
lods
mov
or
mov
xor
dec
getsec
cwtl
lock
sarl
neg
pop
test
js
jp
roll
ss
es
mov
add
inc
out
icebp
push
add
sbb
pop
lds
cli
fwait
out
sub
lods
stc
sub
xor
rorl
nop
mov
jg
pop
imul
stc
mov
add
shrb
out
imulb
iret
jb
add
in
cmp
cltd
xchg
leave
hlt
pusha
and
mov
rclb
dec
mov
mov
sbb
pop
repnz
xchg
cwtl
sub
xchg
daa
test
push
xchg
in
sti
das
in
mov
roll
lock
push
pop
xchg
sbb
jne
dec
paddq
dec
xorb
xlat
incl
cmpsl
lods
stos
mov
adc
mov
sub
jbe
fisttpl
xor
leave
inc
outsb
fsubl
add
inc
and
clc
imul
ret
pop
ss
cvttps2pi
fwait
ja
inc
in
mov
pop
pop
mov
in
dec
push
aas
and
lods
add
and
and
dec
es
push
sbb
mov
jns
nop
subl
xchg
hlt
jns
gs
push
leave
ja
jo
jnp
add
and
int3
fwait
adc
cltd
pop
sbb
cmp
jne
and
cmp
call
out
fbld
add
aas
inc
adc
movsb
aas
into
pmulhuw
push
daa
aas
in
sar
clc
rorl
push
push
pop
and
mov
cli
loop
shlb
sbb
xor
push
fsub
jge
out
lcall
or
rolb
or
xchg
add
ljmp
int
dec
lods
jne
jno
push
adc
mov
push
les
adc
inc
xlat
push
and
mov
xlat
aad
add
jbe
cmp
int
shrb
mov
inc
jge
xchg
sti
xor
repnz
mov
lret
dec
pop
out
ja
xor
shrl
cmp
decb
sbb
imul
inc
mov
jl
adc
mov
mov
dec
lret
xchg
cmp
arpl
mov
mov
xor
imul
adc
push
ret
test
sahf
addr16
fsubrl
nop
mov
out
xchg
cmp
lock
stos
testb
stc
fildll
mov
fwait
mov
xchg
xchg
in
mov
jle
jg
leave
pop
ds
mov
cmp
sbb
mov
cmp
aas
scas
scas
push
inc
ret
mov
or
out
jecxz
mov
addb
dec
and
add
xor
jne
mov
pushf
int
push
lcall
fucomp
subl
loop
dec
jg
adc
stos
popa
mov
sbb
or
adc
pop
icebp
jno
fdivrs
or
mov
faddp
rolb
adc
mov
fwait
into
or
inc
stos
aaa
rorb
stos
roll
jmp
clc
pop
aam
pop
or
cmp
fwait
js
add
fnsave
and
xor
test
mov
repnz
and
sub
insl
push
xchg
cli
or
lret
pinsrw
enter
push
daa
jp
sbb
jge
pop
xor
nop
fnstcw
adc
sbb
sub
fs
cmpsl
orl
and
push
rol
out
loop
and
repz
mov
scas
jl
cmpsl
push
sbb
add
dec
lds
out
out
cmpsb
mov
jo
cmpb
outsl
es
dec
push
ds
cmpsl
xchg
sbb
adc
jae
test
dec
inc
sbb
stos
loopne
data16
loope
stos
roll
adc
pop
mov
inc
inc
lret
jae
sbb
fidivl
rorb
cmp
cmp
sahf
pushf
sarb
inc
push
lods
stos
xor
test
jle
cmp
cld
stc
ds
xchg
and
xor
lods
sti
pop
xor
sbb
inc
mov
mov
jp
popa
sbb
popf
aad
shlb
mov
pop
push
wbinvd
add
hlt
mov
xchg
bound
adc
push
jecxz
xchg
clc
inc
inc
adc
fmuls
adc
adc
movsl
cmp
dec
mov
in
add
ret
repz
aad
repnz
out
aaa
dec
push
push
daa
out
add
aas
sbb
ret
push
xlat
mov
ret
je
mov
in
stc
fcoms
jno
push
pop
ja
jns
js
outsb
cmp
add
aad
out
mov
mov
sbbb
push
fwait
xchg
movsl
xorb
out
mov
mov
arpl
pop
fidivrs
inc
add
outsb
stos
push
xor
daa
sub
xchg
mov
div
xor
and
aaa
iret
cmpsb
xchg
aaa
jae
or
xor
bound
sti
and
mov
add
push
cmpsl
test
cmp
loopne
enter
in
test
mov
int
fsubs
xchg
jns
subb
cltd
inc
adc
cmp
clc
push
dec
test
out
int3
mov
xchg
sbb
inc
push
nop
lahf
cmpsl
cmpsb
in
out
fwait
mov
xorl
sahf
das
dec
jecxz
push
mov
cmp
sub
mov
fisttps
xor
ljmp
and
adc
xchg
inc
adc
aaa
mov
dec
clc
xchg
xor
mov
aam
movb
cmpb
fbstp
jp,pn
mov
and
or
sub
stos
fidivrs
and
in
sbb
jmp
sti
test
leave
je
rcrb
out
push
lahf
pop
imul
adcl
or
jge
xchg
adc
pop
dec
dec
ret
lret
adc
jns
jbe
adc
adc
sbb
xor
mov
xchg
cmpsb
inc
jecxz
mov
jbe
inc
cmp
jecxz
out
push
rorl
mov
fisubrs
sub
aad
mov
pop
lea
mov
mov
jge
push
mov
rcrl
daa
push
jne
in
mov
jbe
es
lcall
and
pop
in
imul
jg
mov
rcl
or
outsb
mov
ret
je
pop
divl
push
adc
popa
stos
repnz
stos
cmp
cmpsl
adc
xchg
pop
pop
cli
adc
dec
out
jnp
sbb
stc
or
inc
popa
fs
cmp
insl
jl
leave
out
add
inc
mov
xchg
mov
sbb
decl
xchg
cmp
jmp
dec
mov
aam
jbe
outsb
enter
lret
sub
ja
xchg
dec
or
add
cmp
pop
xchg
or
mov
repz
stos
pop
mov
add
cltd
pop
test
imul
fcomps
xchg
stos
mov
add
and
shlb
or
jl
inc
jmp
cmp
out
in
lock
push
mov
mov
pop
push
jle
in
fdivrl
imul
jmp
jne
mov
push
adcb
aad
arpl
xchg
inc
cmp
das
loope
into
fisttpll
or
repnz
pop
pop
and
adc
daa
test
paddq
dec
mov
push
lods
cmp
push
xlat
rcrl
lret
xor
xor
cli
inc
roll
adc
decl
repz
push
sub
sbb
clc
sub
cmp
sub
movsl
xor
add
sub
pop
adc
jno
mov
lcall
divb
gs
clc
rolb
movsb
xchg
jbe
andl
or
add
mov
mov
enter
std
inc
pop
loop
xchg
cmp
mov
and
sub
mov
js
int
push
add
mov
nop
xchg
cmp
data16
push
sbb
sbbb
sbb
push
mov
pop
jl
xor
out
cmp
fs
arpl
out
inc
mov
xchg
and
add
leave
test
popf
sti
hlt
enter
mov
mov
jmp
cltd
enter
xor
push
insb
ljmp
divl
cld
subb
ja
mov
sbb
pop
pmovmskb
cmpsl
mov
adc
pushf
inc
test
popa
fcom
lds
daa
int3
xor
ljmp
mov
ss
sub
push
mov
and
inc
jg
cmc
adc
das
fisubs
pop
lea
xor
inc
sub
imul
push
mov
lret
stos
iret
repz
dec
pop
mov
int
sub
test
js
repz
pop
lods
repnz
arpl
cmp
adc
mov
test
xor
lret
repnz
rolb
pusha
and
mov
imul
mov
mov
xchg
rcll
jecxz
jnp
or
movsb
dec
iret
xchg
mov
insb
in
imull
stos
ret
pop
jno
shlb
ss
sub
pop
push
mov
pusha
test
mov
inc
test
pop
adc
in
or
jmp
faddl
sub
xor
or
inc
je
xchg
ds
cmpl
aas
xchg
inc
sbb
dec
fs
in
std
mov
pop
cwtl
mov
hlt
xor
enter
scas
fistl
outsb
je
xorl
add
push
aaa
outsb
pushf
pop
test
sbb
mov
jecxz
pop
and
movsl
and
sub
out
cmp
xchg
mov
cmp
lds
cmpb
repnz
xor
jnp
sbb
leave
repnz
int3
mull
pop
stc
mov
cltd
fstpt
cmpsl
mov
imul
ficoml
dec
cmp
sbb
mov
lret
push
mov
test
aam
subl
xor
inc
fsubrp
xchg
or
frstor
or
jo
lods
xchg
imul
je
mov
out
out
lret
cmp
push
xlat
insl
mov
fdivr
mov
push
mulb
arpl
sti
das
or
imul
inc
dec
subl
xor
or
daa
pop
into
cmp
fisubl
sub
movsb
or
clc
cmc
adc
loope
mov
and
mov
mov
pop
or
dec
jo
xorb
and
mov
inc
inc
in
mov
js
or
lret
nop
push
imul
mov
repz
inc
mov
test
pop
mov
call
lds
loope
outsb
xchg
cmp
shl
mov
jge
nopl
jae
cltd
push
ds
jge
scas
dec
stos
xchg
imul
pop
jae
xor
push
movsl
dec
push
adc
scas
push
mov
dec
or
push
fistpl
lcall
mov
movsb
scas
ror
cli
xlat
sbb
push
aad
xchg
std
adc
and
xor
and
mov
imul
sub
movsb
mov
cld
xor
fcoml
push
bound
sbb
outsb
jae
jnp
mov
xchg
icebp
adc
jmp
out
icebp
adc
jg
add
sti
or
or
dec
aad
in
mov
aaa
nop
mov
dec
into
loope
out
xor
xchg
in
dec
subb
jno
mov
mov
repnz
cmp
ss
jmp
xor
cmp
pop
enter
shrl
cmp
xor
icebp
mov
sahf
scas
mov
addr16
or
and
mov
test
sti
ret
cltd
cmp
adc
and
aas
and
out
cmpsb
or
mov
or
mov
push
sbb
aas
sahf
add
mov
test
popf
das
cmp
lock
push
cld
lcall
xor
test
cmc
jge
mov
iret
aam
pop
rcll
pop
xor
ss
fnsave
adc
pop
lret
adc
repnz
inc
push
push
std
adc
mov
dec
aam
sbb
or
mov
hlt
rcrl
sub
mov
add
pushf
test
and
xor
or
aaa
add
dec
daa
mov
in
call
into
dec
pop
gs
outsl
jno
add
xchg
dec
jno
cmpsb
adcl
push
adc
cmp
insl
mov
dec
out
daa
daa
mov
addb
and
rorl
jne
push
mov
ret
mov
test
aas
ret
mov
insl
lret
lds
mov
subl
sbb
or
and
popf
fstpt
xor
adc
add
cmp
xlat
xor
rcpps
fildll
and
repnz
cmp
test
or
cli
leave
out
dec
push
jbe
lahf
adc
ret
les
jns,pt
push
add
push
mov
repz
cmp
aam
pop
aam
pop
push
cmp
sub
mov
add
or
out
push
dec
call
mov
mov
mov
hlt
das
push
pop
xchg
mov
pop
fadds
sbb
fmulp
pop
push
lahf
jae
mov
xchg
ja
adc
adc
clc
mov
adc
imul
out
sti
imul
dec
popa
cmpsb
js
lds
dec
repz
int
adc
mov
fldt
ret
sub
out
divl
add
add
icebp
stc
sbb
and
shl
das
cs
lret
xor
jo
leave
push
or
jmp
test
js
cmp
pop
lock
stc
jge
loopne
pop
lret
push
inc
dec
inc
repnz
cmp
lods
adc
into
out
out
lret
pop
ror
mov
pop
push
mov
inc
xor
scas
xor
sub
mov
pop
adc
pop
push
filds
cmp
sbb
imul
data16
fwait
cli
fcomps
and
jge
dec
pop
pop
cmpsl
xor
pop
adc
loopne
insb
mov
ss
cmovge
clc
mov
mov
cltd
adc
mov
push
xchg
mov
fcmovb
lods
mov
xor
or
cs
stc
shrl
push
inc
pop
test
nop
cmp
jg
xor
in
sbb
adc
sub
stc
icebp
in
dec
xchg
pop
sub
repnz
lock
jp
and
xchg
jecxz
lods
pop
scas
sub
int3
in
push
sbbb
or
dec
push
test
and
test
jno
js
cs
pop
ljmp
xor
xor
ds
cmc
dec
sbb
in
add
inc
scas
es
cs
ja
mov
or
xchg
xor
inc
in
xchg
adc
rcll
ja
cld
stos
cmp
cmp
sbb
mov
outsl
xor
pop
xor
pop
lret
and
incl
sub
adc
cmpsl
sub
or
dec
mov
es
inc
leave
pop
push
loope
and
cmpsb
lret
aaa
in
mov
fwait
ljmp
dec
mov
pushf
mov
jg
or
pop
roll
insb
enter
add
insl
push
loope
jne
jecxz
mov
push
mov
sub
add
lcall
xchg
sub
pusha
fucom
orl
mov
fsubrp
add
lock
add
mov
fcmovb
aaa
adc
incl
out
loop
jp
mov
push
pop
popa
or
adc
out
movsb
jmp
mov
cs
gs
in
in
sub
xchg
sbb
lahf
push
arpl
add
pop
push
fmulp
mov
mov
lock
cli
cmp
inc
into
call
sbb
mov
mov
mov
into
adc
pop
xchg
aam
cld
xchg
outsl
movsl
stos
js
insb
sarl
cmp
xor
jl
cli
aad
sbb
mov
jne
mov
adc
ud0
jl
push
xchg
arpl
scas
xchg
loop
sbb
mov
or
cmc
adc
and
mov
movsb
fildll
test
fldl
xchg
mov
push
or
movsl
xchg
fs
push
jnp
divb
and
daa
mov
jge
lea
jae
lds
or
and
cltd
loop
aaa
cli
mov
leave
mov
mov
ret
fxch
mov
pop
fnstsw
or
jb
addb
mov
jg
stc
jge
xchg
test
mov
or
imul
mov
sti
mov
out
sbb
sub
mov
inc
aas
adc
pop
xor
out
and
fdivrp
repnz
stos
fsubrl
xchg
push
call
adc
orl
jo
pop
mov
mov
clc
push
jno
stos
leave
sbb
jns
sbb
repnz
cmp
test
mov
imul
shrl
pushf
shlb
xor
adc
cmp
add
push
sub
fstps
pop
repnz
fcoms
dec
sbbl
out
jne
loopne
jno
outsl
call
adc
out
out
mov
fistps
cmpb
arpl
daa
push
pop
outsb
int
rclb
and
dec
mov
popf
addr16
adc
ficoms
add
clc
cmp
or
pop
movsb
popf
aad
jne
inc
sub
addr16
push
sbb
sub
inc
movsb
jnp
pop
mov
dec
mov
add
loop
lods
or
lods
push
or
shrl
cmp
push
pop
and
adc
repnz
mov
mov
pop
jne
insl
mov
in
inc
iret
incl
imul
mov
aam
outsl
stc
in
sbbb
xchg
jbe
mov
sbbl
pop
cld
and
sub
xor
cmp
das
imul
pop
sbb
xor
inc
sub
xchg
adc
mov
in
imul
lea
xlat
ljmp
sbb
mov
pop
inc
shlb
rorl
xchg
outsl
lods
xor
test
sbb
popa
cmp
jno
xchg
ror
inc
cld
les
sarl
sbb
testl
add
test
inc
fs
or
popf
mov
mov
sub
xor
sbb
clc
shlb
lds
ret
lcall
pop
lods
icebp
push
sbb
gs
cmp
enter
repnz
psrad
push
xchg
clc
pop
or
mov
jbe
je
add
push
loop
bound
fwait
mov
xor
xor
sti
jl
fwait
adc
ret
cmc
out
shl
dec
fdivl
jb
add
stos
cmp
in
mov
mov
cli
jg
pop
in
mov
stc
lea
pop
in
fs
cmc
lahf
sub
mov
adc
dec
jnp
les
mov
mov
and
cmc
dec
stos
lock
popf
pusha
pop
sahf
and
mov
mov
cmp
sti
in
mov
pushf
into
jae
in
add
pop
mov
lcall
data16
lcall
sub
adc
rorl
cmpsb
push
cltd
jne
loope
sub
add
and
ret
mov
loopne
sahf
inc
movsl
pushf
lahf
add
jo
push
mov
push
push
cmp
xor
jmp
inc
xchg
xchg
loopne
call
fsubr
cmpl
clc
lret
popf
bound
xor
adc
xlat
enter
xlat
lea
mov
or
jne
nop
pop
lea
movsb
pop
xlat
pop
hlt
mov
pusha
sub
clc
dec
jo
test
or
imul
or
mov
js
mov
call
ret
les
push
jl
sbb
and
cmpsl
enter
mov
ret
int
aam
jno
inc
nop
das
ret
aad
adc
xlat
mov
stc
movsl
movsl
add
dec
xor
cmpsb
cltd
xchg
push
mov
push
xor
jmp
inc
add
mov
addr16
mov
js
insb
int
lahf
and
outsb
push
fcmovnbe
aad
dec
insb
cld
cmp
xor
jnp
pop
inc
mov
jle
mov
test
xchg
call
push
xchg
xchg
xchg
xor
mov
cli
rcr
mov
inc
aaa
push
inc
and
dec
pop
sbb
popa
out
fcompl
adc
xor
push
or
dec
ret
mov
inc
jnp
xlat
das
ficoml
je
mov
sub
jmp
ja
sbb
sub
or
pop
dec
rcl
dec
dec
jae
loope
loop
enter
or
and
decb
shrb
js
sub
sbb
fidivs
cmp
call
ret
mov
div
loopne
push
mov
cmp
jae
sahf
mull
cmp
repnz
push
daa
mov
sarl
mov
loope
ljmp
int
push
push
inc
movsb
dec
shrl
add
dec
push
mov
call
pop
sub
lret
xor
cltd
cmp
mov
jp
mov
fcoml
stos
ja
fs
mov
popa
outsb
or
adcl
xor
icebp
sahf
or
aaa
loope
xor
data16
mov
mov
sub
mov
push
in
xchg
in
xor
pop
outsb
lahf
inc
xor
push
ret
pushf
cmp
jle
and
sbbb
ds
bswap
inc
mov
aam
call
jne
push
cmp
mov
and
sahf
incl
inc
into
iret
arpl
xor
or
push
add
les
popa
dec
mov
enter
inc
xchg
aaa
jecxz
insl
movb
cmpsl
add
or
movsb
dec
lret
mov
jge
icebp
push
sub
lds
outsl
jo
es
sub
dec
push
jecxz
inc
push
and
in
jle
mov
movsb
inc
inc
cmp
out
add
aaa
cwtl
fstl
loop
cmpsl
loopne
decb
xchg
cmp
xor
mov
rorl
lock
push
add
jno
mov
xor
jg
pusha
and
mov
mov
sbb
adc
fcomip
cmp
cmp
sti
push
ja
lret
je
outsb
imul
lods
cmp
mov
pop
mov
cmpsb
or
cmpsl
aaa
addr16
les
push
test
outsl
push
xchg
mov
gs
aas
call
out
sub
repnz
mov
xchg
add
dec
xchg
sbb
shll
ds
movd
or
or
fcomip
lock
mov
inc
pop
cmpsb
int
out
mov
mov
push
sub
int3
jge
dec
pop
dec
pop
arpl
aaa
jae
push
je
mov
jno
cltd
sub
cmc
jbe
ss
andb
xlat
loope
mov
mov
jb
dec
mov
dec
jp
mov
leave
filds
cmpsl
dec
int
es
shlb
xor
out
push
mov
out
mov
call
inc
lcall
mov
into
jb
mov
push
sub
push
inc
pop
movsl
imul
mov
loop
adc
jo
push
cltd
test
mov
movb
pop
adc
push
pop
xor
dec
push
hlt
xchg
cmp
cmp
cmp
cltd
or
iret
pop
mov
jl
cmp
pop
dec
cmp
mov
sub
js
xor
leave
sahf
ljmpw
xor
sbb
pop
in
mov
add
into
popa
push
sub
xor
jne
mov
sub
pop
andb
call
mov
bndstx
ficompl
xor
js
inc
in
jns
mov
div
jbe
pop
bound
pop
and
or
sbb
or
dec
and
in
cmp
cmp
jnp
daa
addr16
cmp
lods
cmpb
dec
lahf
cmp
xor
and
jns
in
movsb
es
sub
sbb
mov
xor
dec
lret
lods
xchg
in
dec
xor
js
push
js
fs
lret
adc
insb
cmp
xor
ret
in
mov
cmpsl
leave
pop
cmpsl
pcmpeqw
mov
lret
std
lods
sub
push
sbb
push
cli
ret
aaa
call
popf
or
ror
addb
lret
push
add
fisubl
sbb
inc
lcall
insb
xor
int
xchg
mov
and
fcmove
mov
mov
mov
mov
dec
aad
push
rorb
mov
push
outsl
test
mov
dec
push
and
sbb
xchg
sub
fs
js
loope
cmp
xchg
aas
xchg
daa
xchg
leave
cmpsl
testb
sahf
shr
push
aaa
jg
nop
lds
and
xchg
cmp
mov
adc
cmp
xchg
inc
out
rcrl
fmulp
scas
je
pop
jp
cmc
and
repz
stos
push
pop
sub
or
rclb
sub
push
sbb
test
push
mov
stc
sub
cmp
rorb
in
stos
mov
jmp
ds
jg
jb
gs
xchg
or
roll
dec
lcall
imul
adc
ja
and
pop
xchg
fisubl
repz
pop
xor
or
push
pop
imul
shlb
popa
insl
push
ret
testb
xchg
loopne
xchg
cwtl
jmp
leave
mov
test
repz
ds
cli
int3
xchg
add
mov
add
or
sub
mov
popa
das
in
rcr
sub
jne
dec
stos
ss
mov
icebp
pop
cli
repnz
push
mov
sub
test
jle
sub
fcomi
push
test
adc
mov
mov
into
ljmp
pop
sbb
mov
ja
dec
xchg
bound
stos
aaa
cli
cmp
jbe
sbb
notl
imul
adc
call
inc
mov
jmp
cs
stos
cmp
aam
fwait
add
popf
call
pop
shlb
mov
mov
jle
inc
add
push
xchg
cmpsl
mov
jecxz
sbb
es
mov
clc
test
inc
xor
push
sbb
jle
push
out
sbbl
fdivrs
dec
rorb
mov
mov
or
cmp
int3
sub
and
cld
mov
nop
enter
adc
fdivrs
rolb
lahf
inc
mov
int
add
jge
mov
faddp
lock
dec
lds
mov
les
push
xor
pop
movsl
sbb
into
mov
cmp
addb
jg
clc
aad
and
ja
out
in
mov
fldcw
out
inc
sub
fimuls
addr16
imulb
dec
in
add
sti
push
into
loop
aas
xor
and
mov
addl
repz
hlt
insb
mov
pop
jae
or
sbb
jae
jl
and
fsubl
or
inc
cmp
pop
pop
mov
adc
xchg
int
pop
mov
fs
int
jbe
scas
xor
ror
lea
test
fcomp
aaa
mov
shll
push
inc
xchg
in
les
and
in
js
mov
repz
xchg
push
gs
dec
fld
mov
cmp
inc
xorl
int3
imul
jb
lods
dec
outsb
jbe
in
pop
nop
sbb
push
cmp
sub
jge
cwtl
les
addb
push
dec
movsl
das
dec
test
mov
jecxz
cltd
movsl
fistps
sbb
pop
mov
adc
pop
pop
cmp
gs
mov
lret
call
popa
sub
icebp
pop
inc
jbe
and
mov
pop
pop
mov
jp
xor
mov
push
push
in
jno
ficompl
into
cli
add
rclb
xchg
fstl
je
jge
pop
bound
xor
jl
mov
das
out
mov
and
loop
loop
popf
or
pop
xor
std
fldl
pop
mov
mov
fsubrl
lock
dec
loop
push
movsb
bound
pop
outsb
jbe
test
addl
or
pop
out
lods
test
stos
repz
repnz
xchg
mov
xchg
jecxz
sbb
gs
lea
pmullw
mov
xor
cs
imul
adc
sub
cmp
scas
scas
dec
push
das
sub
push
xor
mov
push
lret
cmp
mov
sub
mov
adc
cmp
push
dec
insb
outsb
jmp
xchg
or
mov
push
mov
push
mov
movl
mov
cmp
out
orb
inc
mov
sbb
push
sub
movsl
inc
daa
xor
into
sub
mov
jp
fisttps
pop
inc
inc
push
jl
dec
mov
fisubrs
dec
fsubrl
cmp
testb
fildll
imul
imul
inc
or
jge
and
xchg
cs
inc
dec
out
inc
rcrl
xchg
mov
ret
sahf
jge
sub
jge
jbe
ljmp
dec
jnp
xchg
jmp
test
jmp
xlat
jmp
fisubrl
adc
std
lret
jnp,pt
or
adc
sbb
ret
rorl
sbbb
xor
push
sbb
xchg
xchg
xchg
push
xor
pusha
mov
movl
mov
mov
inc
rorb
sbbl
in
movsl
cmp
dec
mov
scas
testl
xchg
jmp
fldenv
xchg
mov
inc
test
shrl
lahf
add
icebp
adc
scas
add
cmp
test
mov
push
add
dec
cmp
into
adc
aaa
clc
pop
add
dec
dec
xor
out
mov
cmc
dec
cld
push
sbb
cmp
pop
pop
out
out
xlat
adc
les
insl
sbb
push
movsb
and
mov
xor
mov
or
fdivs
lcall
xlat
jmp
les
xor
xchg
pop
and
cmpsb
mov
lock
xor
push
fisubrs
dec
test
pop
popf
pop
movsb
push
fstpl
loope
repz
cmp
dec
mov
mov
dec
pop
je
pop
fs
cwtl
call
inc
lods
push
cs
jnp
shll
xor
das
loopne
ret
mov
cld
les
sub
iret
and
lods
sbb
dec
cmp
mov
jno
pop
mov
imul
mov
les
sub
clc
sbb
pop
jnp
add
fs
mov
dec
insl
inc
inc
sub
pop
jnp
mov
fdiv
xchg
repnz
test
inc
adc
in
mov
and
imul
popa
inc
hlt
in
pop
jecxz
pushf
sub
pop
and
dec
mov
mov
pop
and
adc
das
mov
xor
mov
jp
sub
xchg
xchg
xchg
sbb
test
push
aas
pop
ja
in
rclb
mov
jns
int
in
outsl
sub
popf
cs
push
insl
mov
inc
cmp
inc
or
mov
fcmovnb
iret
ret
pop
inc
cmp
inc
lock
jae
sysexit
insb
or
fistpl
enter
mov
popf
add
in
sub
jo
in
ja
cmp
flds
fists
adc
or
jl
shrb
push
fdivr
fsubs
jg
mov
arpl
add
cmpsl
and
addr16
pop
fsub
out
aad
ret
scas
push
xor
repnz
in
sub
rcrb
or
adc
loopne
cmpsb
cmp
clc
and
lret
jo
sbb
rcrl
loope
push
jne
mov
mov
jae
pushf
cwtl
pop
negb
fwait
push
pop
fdiv
fildll
in
xchg
dec
outsl
fadds
jb
jecxz
outsb
mov
addr16
mov
mov
push
dec
sahf
pop
cmp
jge
xor
pop
inc
or
sub
in
test
and
fisubrs
mull
stos
or
xor
mov
cmp
push
sti
insl
out
adc
push
test
mov
pop
xlat
mov
mov
mov
cwtl
in
rcr
pop
fildl
adc
test
in
std
jmp
mov
gs
xchg
inc
xor
in
leave
in
out
in
xchg
fisubrl
lods
jecxz
cmp
or
or
jecxz
mov
mov
mov
add
icebp
je
mov
inc
or
cmpsb
lods
mov
cwtl
jg
ds
scas
push
data16
push
shlb
pop
push
pop
xchg
enter
sar
pop
dec
ficoml
repnz
fs
lret
popa
jmp
fstps
lds
enter
cmp
xor
cmp
push
shl
mov
pop
push
mov
neg
sbb
jb
cmc
bound
lret
in
mov
dec
push
in
sub
pop
iret
imul
mov
incb
mov
repnz
mov
push
pop
mov
shlb
negl
fsubl
pop
inc
inc
sar
shrb
add
nop
jnp,pt
js
mov
or
adc
in
mov
xor
leave
pop
sub
loop
mov
xchg
inc
test
les
cmp
lods
cmp
cmp
xchg
push
pop
rcll
xor
jbe
or
stos
inc
xor
enter
repnz
ja
imul
ljmp
fcmovne
je
jns
loope
imul
int3
outsb
leave
adc
inc
xor
pop
inc
jnp
mov
mov
cmc
push
dec
loop
outsl
ret
push
scas
sbb
imul
rclb
xchg
inc
repnz
sti
stos
addr16
jbe
out
lret
adc
fdivp
pop
mov
cld
xchg
fmulp
sub
pushf
addl
adc
push
aas
or
insl
cli
js
xchg
and
add
cltd
push
cs
mov
lods
push
fistps
test
cmpsb
cld
ret
push
js
mov
mov
xchg
mov
push
jbe
jp
in
mov
lock
inc
mov
loop
mov
add
aam
hlt
ss
pop
stos
xor
mov
pop
orb
jp
or
and
cli
jae
inc
fnstenv
push
js
sahf
push
in
mov
std
jo
push
or
sub
sbb
aad
add
stc
int
jecxz
icebp
pop
fbstp
push
pop
les
outsl
lret
fdivrl
or
iret
es
popf
ret
iret
fcmovu
fwait
jnp
pop
xor
or
jns
push
icebp
cmpsb
aaa
xchg
pop
test
loope
mov
fcmovb
not
jp
cmp
mov
sub
repnz
xlat
inc
into
mov
popf
pop
and
lods
push
add
imul
mov
push
int3
lods
adc
outsl
inc
iret
mov
push
mov
xchg
inc
clc
ds
cs
daa
push
dec
in
sub
inc
push
mov
loopne
mov
iret
sub
jmp
xchg
mov
pusha
add
push
mov
cmp
fwait
xchg
push
jecxz
js
inc
add
adc
adc
mov
xchg
scas
outsb
stos
push
js
or
mov
movsb
mov
adc
jmp
push
cmp
mov
arpl
inc
fidivl
xchg
add
add
std
js
mov
into
lcall
outsl
jnp
pushf
xchg
xlat
in
lea
aaa
lea
repnz
test
sub
loope
bound
inc
insb
xchg
sbb
sbb
mov
les
jnp
mov
add
loop
inc
xor
adc
adc
cmp
je
push
test
cmpsl
inc
arpl
and
lahf
xchg
inc
pusha
sbb
mov
test
mov
iret
jl
mov
mov
test
in
das
push
mov
mov
cld
push
sub
jne
test
rolb
sti
inc
mov
divl
insl
xchg
mov
ljmp
mov
lds
adc
lret
sti
xchg
in
push
daa
jecxz
cmp
and
das
cmp
mov
xor
pop
push
inc
test
inc
cmc
arpl
test
sub
movsl
mov
jmp
mov
push
imul
or
mov
mov
push
pop
rcl
ss
mov
jmp
fcomp
jns
loope
call
into
xor
mov
mov
pushf
mov
inc
mov
lods
pop
sub
jl
xor
insl
ret
mov
inc
daa
jns,pn
push
outsb
cmpl
mov
ficomps
jl
jnp
and
rorb
push
loop
stos
call
lds
sar
fcomip
mov
in
push
pop
pop
mov
pop
pop
and
adc
push
jecxz
test
inc
ja
scas
sub
push
cmp
test
xchg
xlat
dec
cmp
int
push
mov
into
addr16
jmp
mov
mov
lods
mov
cmp
cmp
mov
lods
sbb
lahf
add
hlt
mov
call
add
out
lret
outsl
inc
mov
loope
jp
xor
cmp
movl
in
ljmp
lahf
into
mov
mov
gs
jb
cltd
shrl
xchg
jge
mov
jle
dec
imul
out
pushf
sbb
adc
fcomps
aad
sarl
in
pop
mov
nop
in
mov
jns
inc
jnp
mov
lock
imul
rcrb
xchg
dec
xlat
xor
out
mov
xchg
or
rcr
leave
push
leave
jp
lds
addr16
mov
jmp
and
pop
sbb
push
add
sbb
mov
sub
sub
xor
xchg
ja
sbb
cmp
std
xchg
push
sbb
xor
jp
fnstsw
push
notl
mov
imul
push
imul
pop
int3
pop
xchg
scas
xor
jge
sarl
sub
mov
xchg
nop
jno
pop
lods
pop
xchg
in
cmc
pop
jno
bound
or
fucomip
xor
out
adc
rcl
jo
shlb
dec
and
add
mov
inc
add
inc
addr16
in
mov
add
adc
out
clc
out
and
jo
enter
xchg
es
test
mov
fadds
or
out
loope
ret
insb
xor
and
inc
stos
fstps
and
insl
ja
adc
les
cmc
sub
xor
sub
fimull
roll
xor
aaa
fs
mov
test
sub
sahf
js
add
and
sbb
dec
pop
xor
push
or
outsl
icebp
mov
push
stc
mov
dec
adcl
in
or
ret
add
mov
insl
inc
inc
or
sbb
pop
and
scas
mov
aad
shlb
fdivrl
mov
movsl
stos
mov
jno
sub
sbb
incl
dec
sbbb
push
lret
faddp
andb
ljmp
test
mov
adcl
lods
add
and
mov
cmp
mov
jecxz
insb
ss
scas
clc
clc
or
lea
loopne
popa
rol
adc
adc
enter
cmp
fwait
popa
adc
test
lock
imul
xor
xor
sbb
out
mov
xchg
les
push
test
and
repnz
into
cmpsb
or
test
movsl
incb
insb
mov
push
std
dec
mov
inc
gs
dec
xor
mov
movsb
sub
lds
mov
in
sbb
pop
out
and
push
sub
out
push
fisubs
adc
dec
or
adc
push
or
dec
jae
mov
xchg
add
lods
dec
mov
or
mov
js
arpl
push
push
add
mov
outsb
inc
mov
jb
push
imulb
mov
int
lcall
pop
testb
pop
bound
or
push
fdivr
out
cmp
fisubrl
xchg
push
adc
jg
push
xor
fildl
ss
xchg
jnp
add
clc
cltd
outsb
and
orb
jno
xor
pop
xor
adc
mov
cmp
pop
mov
mov
push
stos
inc
inc
cld
leave
pop
pop
out
shl
jp
mov
adc
out
jo
push
inc
aas
pop
xor
jbe
mov
pop
je
lods
sbb
loop
push
or
add
push
mov
and
jge
xchg
add
inc
nop
lcall
inc
insl
mov
stos
out
push
xchg
outsl
je
add
add
ret
add
lret
ret
cld
mov
jp
add
stos
outsl
inc
push
adc
lods
cmpsb
jmp
pop
push
adc
fmull
pusha
mov
les
imul
mov
sarb
inc
push
rorb
xchg
test
or
adc
dec
push
pop
loopne
push
xlat
jl
icebp
cli
xchg
jnp
mov
mov
push
sub
jg
dec
nop
jns
pushf
mov
ficomps
push
pop
imul
fmuls
mov
out
push
into
lret
in
xchg
sbb
sbb
add
fsubrl
nop
pushf
mov
mov
ss
mov
mov
push
push
cmp
or
dec
fisttpll
int
cmpl
in
mov
repnz
or
sub
lods
in
outsb
add
inc
push
fmuls
cmp
cmp
add
xchg
mov
stc
cmp
xor
mov
jo
adc
arpl
ds
sbb
dec
and
movsl
mul
mov
add
add
mov
scas
sub
call
pop
insb
sbb
sahf
rcr
cmp
mov
dec
rcr
mov
jg
jnp
xchg
xchg
xor
pusha
arpl
adc
and
or
mov
pop
mov
mov
dec
rcrb
cld
inc
push
lahf
fs
pusha
dec
mov
mov
stc
arpl
sbb
cld
addl
jo
ret
mov
std
adc
jns
push
mov
add
push
dec
jae
inc
add
push
xor
cmp
arpl
popf
sbb
or
dec
add
in
dec
mull
push
and
sub
subl
mov
rorb
mov
repz
mov
cmp
jo
scas
and
setbe
lea
mov
push
pop
jbe
leave
mov
aam
pop
or
movsl
cmp
or
push
ljmp
into
or
adc
ljmp
lret
mov
jl
cld
and
jmp
scas
js
sbb
repnz
mov
aad
sub
sub
fidivrl
dec
jnp
inc
and
xor
sarl
mov
push
out
icebp
dec
and
lods
adc
cmp
insl
gs
ljmp
fnstsw
les
dec
lods
sub
push
mov
push
rclb
mov
arpl
cmp
pop
xchg
loopne
mov
inc
dec
jg
fidivs
je
and
xchg
scas
mov
in
jle
and
lret
sub
inc
lret
movsl
sub
cmp
rorl
inc
jae
insb
vcmpsd
inc
pop
aad
or
xchg
jbe
pop
mov
and
or
pop
mov
std
sbb
xor
push
dec
adc
mov
pop
movsb
ret
in
mov
loopne
arpl
pop
sbb
sbb
ljmp
or
pop
cmc
nop
push
inc
push
nop
ja
orl
mov
sub
or
pop
mov
mov
ds
or
fcomi
pop
push
adc
xchg
cmp
ds
scas
inc
adc
jl
cmc
dec
rclb
pusha
jp
fst
inc
push
test
loopne
push
in
out
push
adc
andb
xor
movsb
into
xor
sbb
or
push
inc
inc
inc
leave
or
es
mov
loopne
jge
mov
shll
adc
insb
andl
pop
xchg
mov
fisubs
mov
js
xchg
jae
sahf
in
jno
push
adc
jge
jae
hlt
out
lea
pop
insb
stos
ljmp
adc
aad
into
add
pop
jle
lahf
les
mov
lods
jns
insb
shll
into
jecxz
mov
jmp
mov
std
or
ds
ljmp
inc
jle
mov
or
push
cld
mov
loopne
or
cmp
inc
test
dec
xchg
mov
repnz
or
outsb
cmp
push
adc
push
pop
mov
scas
mov
in
test
in
sub
jecxz
lcall
stos
divb
aam
addr16
cmp
xor
sbb
or
mov
movsl
and
jno
mov
and
or
mov
ja
mov
lea
and
xchg
inc
xlat
dec
xchg
cld
sti
ss
jg
inc
daa
popf
jbe
in
arpl
inc
push
xlat
mov
ficomps
sbb
sub
sub
mov
mov
lods
cmc
cli
imul
jbe
mov
adc
testl
imul
sbb
sub
pop
pop
inc
push
and
jns
sar
xchg
addr16
shrb
mov
stos
mov
push
lahf
sub
cmp
cmp
pop
adc
sbb
dec
cmp
loop
or
sbb
out
and
fwait
xchg
das
fisttpl
add
cmpsb
jle
jecxz
shlb
pop
rcrb
rcll
xchg
cli
mov
mov
stos
push
stc
fs
lods
outsb
movsb
out
pop
cmp
outsb
or
repz
jns
mov
cli
movsl
inc
mov
movaps
jecxz
fmull
xchg
mov
push
cmpsb
push
orl
hlt
cmp
jecxz
cmp
leave
push
xchg
or
test
out
mov
shll
jmp
test
testb
pop
std
or
repnz
out
cmc
pusha
adc
scas
adc
out
into
scas
sbb
cli
in
ror
out
cmpsb
jbe
adc
add
xchg
jecxz
lret
push
cmp
std
lds
xchg
data16
xchg
or
sub
push
or
add
push
mov
nop
das
mov
imul
mov
movsb
push
and
mov
outsb
dec
mov
mov
lods
enter
mov
pop
xor
mov
jno
or
jbe
sbb
or
push
push
sub
adcl
mov
or
jl
mov
lds
cmc
mov
mov
dec
ret
hlt
pusha
xstore-rng
cmpsl
subb
sub
test
push
mov
addr16
push
sbb
sub
insl
cmp
inc
out
int3
add
inc
mov
inc
or
mov
and
lahf
inc
dec
pop
jg
push
insb
in
lret
pop
popf
testb
xchg
cmp
jmp
cmp
stc
or
xchg
xchg
mov
adc
dec
sbb
aas
inc
ljmp
into
push
adc
out
ficompl
sbb
imul
cmpsl
mov
xlat
cmpb
cmp
pop
imul
inc
cmp
ja
inc
add
mov
xlat
sub
imul
scas
pop
lds
cmpsl
dec
ljmp
mov
mov
inc
sbb
in
je
fcomps
mov
clc
mov
scas
jno
xchg
push
ficoml
into
sub
mov
popf
inc
not
or
xchg
fsincos
or
jg
and
mov
push
cmp
addr16
mov
or
aad
xchg
mov
and
movsl
sub
sub
outsb
shll
mov
mov
and
inc
push
cltd
rorl
inc
test
insb
sub
test
pop
add
xor
in
mov
fiadds
add
mov
lods
xchg
jle
lods
mov
mov
ret
jno
push
cmp
or
jne
push
repz
mov
adc
jno
ja
les
enter
cmp
mov
pop
js
adc
fimull
inc
cwtl
aaa
es
xchg
out
mov
xchg
pushf
and
orl
pop
or
int
jp
sbb
lods
inc
push
cmp
sahf
xor
imul
andb
mov
mov
ds
arpl
and
sbb
push
sbb
fistpll
xor
xchg
leave
ret
jecxz
sub
push
inc
out
dec
mov
ret
mov
sub
mov
mov
out
mov
xor
sub
mov
pop
in
mov
pusha
dec
fstpl
cmpsl
cwtl
pop
pop
popf
xchg
outsb
xor
push
decl
mov
mov
sub
pop
jo
dec
jbe
mov
and
pop
jecxz
testl
lock
jle
sbb
mov
sub
sbb
jo
jo
mov
xchg
xchg
lret
movsb
fldenv
adc
ds
pop
mov
adc
jecxz
test
cmp
mov
gs
mov
scas
mov
stc
in
ds
dec
xor
mov
adc
rclb
lcall
xor
ljmp
adc
or
gs
shl
rolb
and
adc
pop
cmpsb
call
push
pop
pusha
clc
add
dec
lcall
jle
nop
das
repz
inc
pop
push
push
adc
xchg
cli
jge
or
fimuls
in
subb
cmp
cmpl
out
dec
into
pop
xchg
cltd
enter
inc
fwait
add
loope
mov
pop
pop
test
xlat
insl
xchg
jne
add
pop
jno
outsb
push
ss
test
leave
jnp
test
in
das
push
sti
sub
xchg
mov
sbb
and
das
mov
std
out
push
enter
mov
test
lds
adc
popf
aam
orl
dec
xor
inc
mov
xor
mov
bound
testb
jbe
das
inc
push
sarb
ds
inc
roll
fninit
pop
pop
xchg
mov
cmc
rorb
mov
leave
jmp
imul
mov
jmp
scas
pop
xchg
add
add
inc
mov
ret
inc
scas
sbb
lahf
in
fisubs
dec
push
fs
inc
dec
mov
sub
shrb
push
push
mov
sbb
mov
ds
imul
ret
adc
mov
fiadds
cmpsl
aam
das
pop
mov
mov
mov
push
and
jecxz
movsl
loop
repnz
outsl
nop
push
sti
clc
pop
mov
adc
dec
lds
ds
maskmovq
mull
xor
mov
loope
int
sbb
or
push
push
test
int
cmc
xor
aad
aas
addr16
popf
daa
loope
sub
jl
movsl
outsb
inc
and
inc
repz
ds
sti
adc
imul
mov
jns
dec
xlat
cmpsb
mul
inc
pushf
add
mov
repnz
pop
lods
xor
flds
imul
or
sub
ja
movb
lcall
imul
cmc
jae
movb
movsl
shr
jg
aam
lahf
loop
cltd
in
xlat
add
dec
aad
or
sub
js
adc
lds
mov
bound
inc
sub
jl
sbb
jp
mov
out
pop
or
mov
mov
mov
add
or
or
daa
dec
cmp
push
sub
aam
pop
fwait
sbbb
sbb
lea
cmpb
push
aad
ficoms
mov
loop
sub
adc
push
mov
add
jnp
or
jmp
repnz
idivl
push
aas
test
clc
mov
cmp
test
stc
insl
and
fldt
cld
stos
add
shlb
mov
out
sub
insl
mov
mov
mov
in
or
mov
jmp
cltd
insb
jle
pop
cwtl
daa
repnz
dec
xor
out
push
mov
ja
mov
lcall
mov
mull
jbe
into
daa
lea
mov
jle
push
test
mulb
lahf
pop
sub
loope
add
movsb
mov
dec
mov
movsl
mov
popf
inc
jle
imul
push
mov
mov
jmp
dec
pop
mov
xor
push
jbe
lret
insl
imul
cs
mov
add
push
shl
loop
ret
dec
repz
cmp
adc
jecxz
notl
push
mov
shrl
das
cmpsb
scas
outsb
xchg
lret
inc
movsl
sbb
loopne
in
cmpsl
inc
sub
jmp
cmp
inc
jmp
into
push
cmp
mov
jmp
jp
fisttpll
adc
call
cwtl
push
test
push
fsubrs
or
bound
pop
ficoml
add
jg
fwait
adc
jbe
sub
adc
mov
push
adc
inc
mov
xorl
cmpsb
pop
cmp
dec
cmp
xchg
movsb
or
and
jno
xchg
imul
cmp
pop
addr16
subb
pushf
call
xchg
stc
sub
out
xor
xor
sbb
ret
jb
pop
in
stc
aas
pop
into
push
mov
mov
in
div
ficomps
hlt
pop
stc
int3
inc
bound
movsl
daa
mov
pushf
negl
leave
mov
xor
inc
loop
inc
imul
inc
pop
das
loopne
push
sahf
imul
sub
shll
dec
ret
outsl
adc
mov
lret
stc
push
ret
fs
icebp
xchg
add
xchg
movsl
movsl
jge
movsl
mov
inc
sbb
pusha
outsl
or
mov
sar
xchg
popf
or
inc
mov
push
in
pop
shlb
hlt
icebp
push
push
out
xor
mov
jmp
mov
leave
and
das
clc
xchg
iret
jns
add
roll
arpl
lods
imul
sahf
fisubrl
call
fisttpl
loop
push
push
xchg
clc
pop
mov
ss
bound
leave
xchg
add
sbb
dec
jae
mov
push
dec
in
movsl
inc
pop
js
loopne
mov
add
int3
icebp
mov
xchg
movsl
jg
and
adcl
mov
adc
or
rcl
push
xor
dec
pop
cmp
cmp
enter
shll
decb
mov
int
pop
icebp
xor
xor
inc
sti
push
in
cmpsl
push
popa
adc
lock
fimuls
js
pop
popf
dec
or
aad
cs
sub
test
ret
sbb
in
ja
enter
fs
iret
mov
push
mov
ds
pop
fwait
sub
sub
stc
mov
mov
xchg
nop
mov
inc
jp
aas
loop
sbb
inc
mov
mov
pop
movsb
mov
shlb
loope
jge
test
adc
arpl
jp
fwait
or
sbb
mov
pusha
ss
shll
mov
into
outsl
inc
xchg
adc
mov
sbb
and
cltd
aam
add
dec
cmc
outsb
mov
and
leave
dec
fisttpll
ja
rclb
inc
and
lret
fimull
mov
in
js
xor
inc
pop
inc
sahf
mov
sub
inc
and
mov
mov
xchg
leave
imul
int
or
daa
pop
rorl
aam
ret
push
bound
mov
jle
inc
pop
jg
std
pusha
cli
ja
xlat
int
sub
sar
jnp
cmp
dec
xlat
or
outsl
in
mov
jmp
pop
push
xchg
xchg
pop
fbstp
in
push
pop
into
mov
inc
test
shlb
and
push
sbb
cmp
adcb
xchg
lahf
sbb
cmp
shr
sub
mov
andl
mov
dec
movsl
cmp
rolb
adc
addr16
push
or
push
xchg
xchg
lahf
and
jmp
test
xchg
gs
call
jmp
xchg
popa
xchg
sti
imul
mov
mov
jb
dec
insb
sahf
or
jns
xchg
or
movsl
mov
fbld
scas
shll
imul
in
cmp
test
mov
popa
push
xchg
dec
inc
inc
pop
les
rorl
xor
shr
dec
xchg
jnp
out
rcrl
adc
and
cld
mov
inc
jmp
ret
fwait
int
and
out
mov
mov
cmp
into
push
sbbb
mov
rolb
daa
lret
inc
mov
sub
push
jmp
lahf
xor
dec
mov
push
icebp
mov
or
sbb
out
loopne
add
lock
or
dec
pop
jno
push
inc
stc
lahf
gs
jecxz
jno
pop
jns
jle
jo
lods
stos
xor
push
push
xor
std
sbb
fsubr
push
mov
push
push
loope
cmpsb
cmp
loope
xor
add
pop
mov
int3
add
or
xor
push
jne
add
cld
stos
aad
jecxz
inc
sub
jno
sbb
gs
or
sub
mov
add
jo
xchg
jo
and
mov
push
cld
pop
call
int
mov
int3
xor
mov
mov
cmp
sbb
nop
dec
pop
sub
cs
and
imul
mov
bound
addr16
pop
sub
xchg
dec
add
ret
push
push
dec
mov
pop
dec
jmp
jno
scas
bound
subb
repz
stos
xor
mov
push
roll
daa
sbb
jno
enter
xchg
pop
xor
movsl
insl
aam
fs
rcll
sbb
xchg
dec
mov
jb
ja
jl
pop
pop
mov
cmp
pop
jmp
dec
cmovl
insl
arpl
aas
add
mov
pop
daa
mov
les
add
mov
lret
ljmp
fnstsw
arpl
mov
loopne
sarl
rcr
lahf
mov
cmp
hlt
mov
mov
add
push
testb
cmp
adc
xchg
pop
pop
stos
pop
std
mov
push
pop
loop
add
adc
nop
sbb
sub
clc
mov
mov
inc
lret
and
adc
movsb
xchg
dec
push
jl
mov
push
imul
cmp
dec
cld
jb
adc
or
push
or
stc
out
adc
sbb
jg
ret
leave
out
sbb
sbb
lods
shrb
pop
push
mov
mov
xchg
pop
aam
jmp
pushf
and
lods
jno
pop
cmpsl
pop
call
in
andl
add
popf
mov
inc
mov
sub
ret
sbb
lahf
imull
pusha
loopne
fldt
xchg
cltd
dec
or
xlat
loopne
push
jne
mov
add
fcompl
pop
jne
xor
inc
or
mov
fsubl
in
cld
fnstenv
or
shl
lds
pop
mov
and
sbb
pop
addl
or
mov
inc
mov
sti
adc
enter
sbb
pop
adc
aam
call
fdivrs
std
mov
in
jns
sbb
aam
adc
xchg
cmp
ficompl
leave
push
mov
fmul
adc
push
aad
daa
xchg
push
dec
push
adc
dec
movsl
and
arpl
cmp
movsl
shll
sub
scas
clc
jp
in
shll
faddl
sub
fistps
xor
cmp
mov
mov
add
fbstp
out
aas
mov
xor
sbb
mov
cmp
aad
mov
into
call
rcrl
adcb
or
sub
das
loop
fldln2
fimull
incb
mov
lds
fistl
ret
mov
xchg
adc
mov
out
jne
jl
adc
rclb
inc
js
xor
push
pop
mov
jmp
mul
mov
in
lea
icebp
aam
shlb
xchg
pop
cmp
xor
xor
scas
inc
imul
sbb
lds
mov
rolb
std
inc
and
add
xor
leave
jl
loope
add
adc
ja
jnp
lahf
shll
data16
dec
inc
mov
bound
scas
jp
jno
loope
xchg
xor
out
int3
inc
fcoms
mov
sbb
jo
repnz
pop
xor
es
jns
rolb
push
cmp
bound
icebp
faddl
test
fimuls
jg
ss
adc
push
or
sbb
popa
lods
sbb
testb
rcrb
cmp
add
pop
add
or
sahf
dec
pop
jecxz
xor
lret
inc
pop
leave
das
dec
mulb
shll
cmpsl
gs
iret
pop
test
sub
jmp
lret
popf
mov
xor
ret
mov
push
fmuls
cmpsl
lock
cmp
sub
xlat
stos
xor
cmp
subl
call
push
addr16
or
fcmovnbe
jbe
nop
adc
xlat
pop
aas
mov
std
ret
je
fistpll
mov
mov
lock
lods
int3
sub
xlat
inc
fmuls
cltd
out
loop
pop
pop
cmp
mov
inc
cmp
mov
test
adc
outsl
stc
xchg
lock
pop
inc
and
test
scas
adc
ds
jp
lret
dec
pop
into
leave
mov
out
adc
outsl
outsb
inc
sub
fsubrs
into
xlat
imul
in
adc
mov
jnp
push
notb
pop
loop
sub
icebp
mov
mov
jl
cwtl
lock
cmpsl
das
xlat
xchg
cmpsb
and
xor
cmp
pop
cmp
loop
lret
xorl
mov
jg
pop
push
push
pusha
or
lods
int
andb
int3
sub
daa
pop
jnp
inc
xchg
repnz
adc
cmpl
in
or
add
imull
jge
xchg
or
lret
inc
icebp
xchg
repz
pop
inc
dec
and
fwait
mov
jae
repz
add
mov
mov
cltd
lahf
add
jmp
jbe
xchg
mov
adc
mov
cmp
rcll
xchg
je
jmp
fnstenv
enter
mov
pop
mov
mov
add
dec
mov
aaa
fcomip
jmp
jge
ds
ficoms
inc
dec
push
mov
loope
lahf
andl
jecxz
adc
cmc
enter
jne
push
ficompl
xor
push
stos
test
xor
mov
fldl
pop
xor
lret
fdivl
imul
adc
jg,pn
xor
inc
push
dec
popw
sub
cmp
mov
fbld
clc
xor
fidivs
mov
test
pop
push
dec
adc
jbe
inc
dec
inc
shll
cmp
fxch
xlat
and
push
jle
addl
test
jb
sub
jo
les
fildl
imul
in
adc
data16
mov
sti
add
popf
xor
sbb
push
push
adc
jge
insl
scas
test
inc
cmp
jns
aam
and
inc
push
cmp
out
outsl
jp
pop
dec
jp
in
fcoms
pop
mov
jne
in
gs
mov
cmp
inc
xchg
int
addl
dec
mov
push
nop
sub
arpl
inc
mov
adc
lret
fcoml
in
nop
push
cmpsb
imul
sbb
mov
loopne
sbb
xchg
jecxz
ljmp
pop
inc
add
addr16
lret
idivb
iret
inc
in
lcall
shr
mov
loopnew
imul
jge
sub
rclb
pop
xchg
or
sub
pop
push
aad
inc
xchg
cmc
adc
fidivrs
dec
int
addr16
fbstp
loop
mov
int
out
and
inc
cld
hlt
cmpb
dec
push
fimuls
in
out
xchg
jp
nop
adc
mov
jge
out
jp
cld
jecxz
sub
andl
mov
repz
in
jno
sbb
dec
cli
or
lds
and
or
push
push
inc
ljmp
ret
jnp
pop
daa
mov
jle
stc
hlt
mov
and
dec
sbb
rcll
mov
inc
push
pop
popf
loopne
adc
icebp
nop
imul
inc
xor
pusha
sbb
arpl
and
stc
imul
fs
out
testl
or
scas
lahf
lock
insb
mov
call
pop
cmp
lret
push
dec
out
aad
push
dec
and
imul
lods
add
sbb
arpl
lds
adc
ss
repz
movsb
pop
mov
arpl
int3
std
insl
stos
add
lret
insb
cmpsb
or
add
incb
sub
jg
fsubrl
cmp
faddl
xor
insl
imul
sbb
jns
add
mov
loope
sub
mov
shll
lods
jns
pop
cld
xchg
or
jnp
lods
adc
or
ss
push
aad
fiadds
adc
into
jle
push
mov
xchg
jg
int
ljmp
loop
mov
or
cmpsb
lds
mov
adc
ljmp
pop
mov
movsb
xchg
lahf
lods
mov
pop
shl
stc
cmp
sub
dec
add
cmpsb
or
inc
cs
xor
xorl
les
mov
mov
aad
xchg
xlat
and
and
out
loopne
sti
rcrb
cmc
sub
fmuls
sub
mov
clc
xchg
push
xchg
cmp
das
in
xchg
jno
jecxz
pop
mov
or
lret
aas
fidivrl
stos
inc
mov
aaa
jp
push
xchg
rcrl
enter
xor
xchg
fcoms
add
sbb
mov
lahf
sbb
push
pop
lods
fldenv
sbb
jle
push
and
je
mov
sarl
mov
push
dec
push
cltd
push
aaa
cmp
out
add
in
out
test
cmp
divb
iret
jne
aam
sahf
aam
gs
sahf
adc
push
clc
cs
fdivrp
dec
fucom
xchg
enter
adc
divps
and
jno
and
xchg
push
popa
pusha
inc
jbe
pushf
inc
lret
pop
push
fcompl
jle
lahf
push
ret
aad
rcl
insl
or
sub
outsb
mov
scas
mov
jge
jle
lods
dec
xlat
adcb
inc
add
xor
es
stc
fs
push
inc
sub
leave
adc
mov
rolb
sub
mov
add
in
ds
stc
xorb
and
jns
mov
sbb
insb
mov
inc
rolb
mov
leave
xor
adc
scas
dec
sub
xchg
mov
mov
ja
outsl
push
aad
pop
push
push
adc
pop
les
pusha
gs
push
or
push
and
add
jmp
aaa
jmp
cld
adcb
daa
aaa
dec
mov
lcall
xor
jb
nop
jne
imul
sti
inc
fsub
pushf
jns
arpl
cmp
imul
push
dec
jns
xchg
pusha
cmp
mov
xchg
movsl
or
jge
sahf
test
inc
mov
out
sarb
mov
xchg
dec
out
xor
lods
mov
test
mov
lret
pop
push
stc
mov
dec
scas
imul
sarl
into
cmpsb
jne
xlat
pushl
adc
mov
sub
jmp
ret
lock
mov
xchg
test
jp
mull
jne
inc
sbb
rcrb
sub
icebp
fsubrs
out
dec
adc
repnz
adc
stc
repz
std
push
adc
lods
out
and
mov
out
jo
ds
xchg
stos
lods
push
mov
or
out
cli
mov
bound
jne
push
mov
arpl
sub
pop
movsb
or
shrd
mov
out
sti
adc
inc
bound
push
mov
sbbl
sbb
fisubrs
pop
aad
dec
movsl
je
ret
fmuls
push
push
inc
js
mov
add
lahf
fwait
ss
jno
or
fisubl
into
pop
add
lahf
icebp
push
test
ja
sbb
lock
dec
out
dec
sahf
adc
fucomi
inc
cltd
mov
jecxz
or
loopne
gs
sub
clc
dec
mov
hlt
and
mov
inc
sub
sub
movsl
andl
inc
sub
jnp
imul
xchg
cld
js
jno
xor
movsl
into
or
sti
dec
inc
adc
inc
mov
repz
inc
cltd
in
lahf
ss
ret
cmp
cmc
data16
std
pop
mov
add
xchg
mov
std
sbb
subb
push
or
mov
jbe
stc
and
and
aad
cltd
xor
dec
pop
in
insb
fimull
repnz
sub
push
clc
movsb
lcall
cmc
xchg
lcall
cltd
jae
adc
xor
ljmp
mov
adc
fmuls
dec
pop
das
sub
pop
test
add
imul
xchg
xchg
imul
push
int
dec
mov
ds
into
popa
pop
pop
and
cmp
nop
repz
pusha
cs
sub
test
cli
nop
andl
movsb
mov
outsl
mov
mov
shrb
rolb
lods
xor
xor
repnz
test
sbb
lret
sarl
mov
aas
nop
push
scas
fisubrl
and
or
sub
mov
push
add
in
mov
fisubl
mov
aam
push
in
outsl
sahf
repz
dec
cld
push
aam
inc
jns
push
das
es
orb
mov
sub
test
roll
xchg
sbb
aas
mov
ljmp
sti
test
push
mov
fwait
inc
repnz
std
or
jbe
rcll
adc
and
adc
imul
or
dec
push
sbb
mov
cld
scas
popf
shlb
inc
enter
mov
nop
jecxz
jno
fdivrl
xor
sbb
jbe
paddsb
xlat
fildll
fisubs
adc
ficomps
pop
repnz
dec
ja
jbe
lods
ror
mov
in
pop
gs
lock
iret
jmp
loopne
add
fwait
jge
iret
push
int
jecxz
hlt
int3
fsubl
mov
push
sub
xchg
pop
sbbl
shlb
cmp
cmpsl
out
or
dec
xor
dec
add
call
pop
enter
ja
stos
es
pusha
pop
scas
jbe
inc
rcrb
iret
mov
inc
stos
xchg
dec
les
push
push
cwtl
or
and
xchg
mov
cwtl
xor
pop
push
scas
jns
fnstenv
and
insl
lcall
mov
inc
sub
sub
sub
lahf
dec
inc
cmpsb
stos
fisubrl
jbe
aam
sti
dec
ljmp
cmp
add
sbb
lret
and
mov
andb
cs
stos
inc
pop
addr16
repnz
push
mov
and
mov
add
jle
leave
fstpt
sub
daa
xchg
pop
xor
xchg
jno
xchg
cmp
pop
jecxz
xor
sbb
lret
arpl
add
je
in
mov
inc
dec
mov
dec
loope
in
out
sub
jns
mov
sub
sub
mov
shll
xor
push
cmp
lock
pop
add
divl
cmp
jp
mov
movsl
push
lea
and
enter
rclb
xor
gs
popa
leave
mov
jns
popa
or
enter
pop
test
xlat
pop
jae
dec
paddusw
clc
scas
gs
test
mov
leave
rclb
aaa
and
jb
fdivp
int3
inc
test
add
pop
outsl
sub
and
push
jbe
jno
and
jle
xchg
add
inc
ret
bound
shr
and
repnz
fists
inc
mov
xchg
lcall
or
imul
iret
add
aad
push
popf
and
push
add
mov
daa
lock
fimull
cmp
and
aas
mov
mov
lds
xor
xor
sahf
movsb
out
in
dec
je
push
lcall
pusha
loopne
xchg
test
inc
sub
loopne
jmp
lea
mov
sti
callw
inc
in
or
xchg
push
xchg
mov
or
in
jge
and
xorl
imul
into
clc
push
pop
xchg
div
cmp
decb
lret
lods
bound
cmp
loopne
xchg
mov
pop
clc
sbb
das
pop
sbb
les
inc
sub
fwait
loope
sub
pop
mov
sahf
and
mov
lds
lods
push
mov
mov
movsb
fdivl
push
sub
pushf
mov
add
inc
insl
mov
in
sbb
gs
es
xor
lahf
jle
jp,pn
aad
in
aaa
movsl
add
and
movsl
push
push
sbb
and
xor
cmp
pop
int
aaa
or
push
push
and
push
pop
cmp
add
test
imul
dec
inc
sbb
icebp
clc
arpl
sub
lds
hlt
in
loope
sbb
fcoms
jp
mov
loope
pop
js
push
cmp
inc
pop
xor
sbb
fcoml
int
jno
lret
sub
sbb
les
ret
pop
lcall
jecxz
pop
add
enter
je
mov
cld
fs
ds
dec
pop
dec
mov
out
and
inc
jg
inc
mov
sbb
xlat
orl
invd
rcrb
stos
imull
or
xchg
clc
aad
fdivrl
mov
orb
in
stos
cmc
notb
dec
loop
and
fwait
mov
inc
fmul
sbb
aam
add
mov
sbb
stos
movsb
subb
mov
addr16
ss
xchg
loopne
ja
out
jno
sub
mov
gs
lock
push
xchg
outsb
mov
loop
out
xor
in
and
int
sti
or
aad
jecxz
stos
pop
dec
xchg
je
jg
out
sti
and
jle
add
or
mov
imul
xchg
cmp
sbb
vaddpd
mov
cmp
push
neg
addr16
push
cmpsl
nop
mov
out
loope
pop
and
mov
int
sub
jge
and
aas
fmull
jbe
insb
cld
loope
cmp
sub
jle
push
out
push
xchg
xchg
imul
das
fs
lret
sub
rolb
xchg
stc
mov
roll
stos
out
adcl
jns
rorl
ljmp
inc
mov
outsb
imul
push
inc
and
bound
add
push
in
popa
jmp
stc
sub
mov
push
mov
mov
out
stos
test
mov
outsb
push
lods
insb
sub
add
add
xchg
int3
gs
rcr
outsb
loope
pop
and
int3
add
loope
ret
int3
adc
fistl
mov
popf
stos
sbb
mov
inc
inc
imul
or
imul
sbb
ret
inc
cld
xor
hlt
cmp
daa
movsl
mov
push
mov
inc
push
push
aaa
sbb
xchg
jne
mov
sbb
mov
cwtl
push
cmovg
adc
js
rcrl
pop
push
jp
stc
or
out
and
icebp
sahf
test
jnp
les
cmpsb
sbb
cmc
into
outsl
sbb
movsb
adc
push
jns
pop
test
and
push
std
add
sbb
push
or
jae
mov
lods
jmpw
add
scas
inc
pusha
loope
fcmovnbe
stos
jle
sbb
dec
jo
shl
pcmpeqw
fs
xchg
cmpsb
inc
xor
mov
icebp
jne
mov
mov
sub
test
pop
sbb
pusha
inc
div
push
dec
cwtl
or
xchg
mov
push
pop
nop
add
xor
mov
mov
pop
cltd
jp
popf
ret
aas
mov
scas
adc
or
jnp
aam
test
mov
dec
jne
lock
lret
cmp
aas
add
jb
pop
sbb
fs
movsl
cmp
and
mov
rorb
xor
out
sbb
pushf
cli
pop
inc
push
movsl
xor
inc
sbb
sbb
js
xchg
ret
inc
fucom
iret
lcall
or
test
xchg
mov
lods
loopne
cmp
dec
pusha
and
ret
movsl
jae
loope
fisttps
or
inc
mov
push
pop
push
test
sbb
sbb
mov
ret
push
mov
push
negl
cmp
inc
insl
or
add
or
pop
enter
sub
daa
cmp
pushf
or
cmp
jnp
stos
cmp
movsb
mov
mov
cmp
add
xchg
adc
inc
aaa
insl
loop
popf
loope
or
sub
pop
push
and
testb
int
stos
pop
mov
fldl
xor
jle
dec
outsl
loopne
outsb
jg
out
mov
lock
fldt
mov
mov
out
rcrl
or
ret
push
hlt
xchg
popf
mov
sub
fdiv
jb
adc
jae
push
loope
pushf
das
subl
idivl
outsl
jp
leave
repnz
lock
push
fidivs
out
adc
mov
aad
mov
cmpsb
cmp
imul
pop
cltd
mov
repnz
das
xlat
ret
dec
loop
adc
cwtl
cmp
dec
repnz
rclb
jns
stos
mov
cltd
test
add
push
jbe
lds
lds
or
xchg
pop
lcall
push
ficoml
les
sbb
aaa
sbb
lock
adcb
jmp
ret
mov
xchg
pop
scas
imul
sbb
or
sbb
test
daa
sub
mov
movsl
xchg
add
inc
dec
push
add
stc
sar
arpl
xor
and
movsb
ret
fstl
into
lret
mov
aad
out
daa
fdivr
test
cmp
mov
pop
in
xor
mov
outsl
shll
xchg
cmp
in
stos
cmc
shll
mov
add
adc
xor
dec
mov
shlb
out
sti
jbe
lods
addl
mov
or
and
mov
js
std
iret
sub
fisttpll
hlt
test
pop
and
jmp
dec
pop
push
push
lcall
sub
fcmove
pop
imul
pop
in
pushf
mov
mov
rcl
jmp
cltd
xlat
and
pop
rclb
cmp
mov
inc
pop
xor
iret
push
or
inc
dec
push
loopne
mov
loop
bnd
call
clc
cltd
imul
out
cmc
sub
dec
cmp
iret
fs
cwtl
xor
pop
push
mov
or
dec
xchg
addr16
mov
lahf
pop
jle
ljmp
and
dec
or
jmp
test
xor
push
xorb
jns
jno
es
mov
add
sub
mov
mov
cld
addb
es
and
andb
dec
push
pop
sbb
test
loop
jmp
and
sahf
imul
inc
or
pop
jg
sbb
shlb
sti
cld
fcmove
pop
push
fs
mov
pop
jg
call
jl
bound
ret
xchg
push
cmp
mov
mov
loope
and
arpl
inc
inc
dec
das
sbb
mov
subb
pop
scas
andl
jle
inc
icebp
rcrl
or
push
lock
imul
in
pushf
sahf
mov
cmp
ljmp
loopne
incl
xor
lds
ljmp
cld
pop
leave
into
out
cmp
inc
jnp
daa
addr16
flds
cs
or
lds
push
js
popa
jp
loop
movsl
arpl
mov
sbb
insb
push
test
sbb
popl
mov
sbb
add
andb
insl
inc
mov
xchg
push
inc
push
mov
mov
jl
or
aad
dec
cmpsb
pop
xchg
push
cmpsb
add
xchg
scas
pop
shl
pop
in
and
adc
popa
cmpsb
repnz
aad
fisubs
movb
mov
mov
aad
xor
movsl
cli
cmpl
or
dec
and
clc
inc
addb
xchg
pop
push
xor
test
lcall
inc
lock
sub
sbb
leave
cmp
mov
stos
cmpsl
in
dec
dec
test
repz
mov
lock
daa
inc
outsb
push
aad
idivl
dec
pusha
mov
mov
test
stc
repz
push
insb
dec
and
or
and
insl
jae
cmp
loopne
imul
push
adc
insl
lret
in
lahf
and
pop
in
xchg
xchg
jae
js
xor
jmp
mov
shll
dec
ret
mov
sub
sub
mov
lea
sbb
fwait
scas
ss
test
iret
mov
stos
lds
jne
cmp
cmc
call
imul
in
push
iret
sub
add
jb
pop
sub
push
dec
imul
mov
ss
int
push
pop
jno
ret
pusha
in
jmp
stc
data16
shl
mov
cmp
dec
sub
push
push
inc
aad
mov
ds
insb
roll
push
pop
aas
xor
outsl
mov
add
and
dec
xchg
jbe
fld
mov
xor
mov
jns
imul
repnz
bound
arpl
cli
jns
add
xor
int3
sub
imul
jae
pushf
xchg
inc
repz
xor
addl
testb
dec
in
outsb
aad
xchg
and
test
xchg
out
push
ds
cld
push
int
xchg
mov
cmp
daa
and
pop
and
jns
pop
dec
jae
fsubrs
pop
xor
dec
mov
push
out
dec
xchg
and
mov
nop
sub
jnp
lcall
std
sub
into
hlt
jecxz
daa
add
lods
outsb
movsb
dec
cmp
outsb
jecxz
enter
dec
lea
jecxz
xchg
jp
mov
imul
mov
jo
lret
int
xchg
push
mov
sbb
lds
pop
aad
jo
pop
lret
orb
int
mov
psllq
xor
mov
movsl
and
repnz
clc
call
push
imul
dec
es
xor
sub
test
jle
loop
mov
jnp
xchg
sbb
test
push
inc
cmp
pop
jne
sti
and
inc
les
cmpsb
jg
xor
push
mov
inc
mov
ret
mov
enter
xchg
scas
arpl
dec
call
inc
xchg
lcall
repz
pusha
lret
mov
pop
inc
or
repz
xlat
pop
jne
cmp
fdiv
addr16
movsl
shlb
enter
daa
dec
pop
pop
pushf
das
ffreep
inc
outsl
pop
repz
inc
add
xchg
pushf
std
mov
jle
sbb
lock
sti
mov
inc
sub
mov
adc
jl
and
fnstcw
mov
sub
adc
ja
aam
lcall
or
ss
nop
push
cmp
mov
add
mov
add
loope
daa
adc
lods
pop
jnp
out
roll
adc
fidivl
test
add
in
loopne
je
fsubr
rcrb
addb
icebp
xor
sbb
pop
pop
jo
std
mov
imul
jno
pop
inc
test
inc
test
mov
mov
pushl
dec
adc
mov
ds
or
xchg
arpl
dec
sub
xchg
sbb
lcall
movsl
inc
push
and
inc
rcrl
out
cmp
lock
fldt
int3
arpl
push
xchg
add
gs
inc
int
mov
shlb
pusha
in
sub
push
je
imulb
int3
xor
js
lods
push
xchg
loopne
ret
shrl
add
adc
dec
xor
mov
pushf
jb
adc
inc
dec
lcall
inc
outsl
xchg
and
das
adcb
pop
dec
js
jne
cwtl
push
lret
xchg
out
xchg
outsl
push
cmpsl
lock
cld
rcll
mov
inc
lods
loopne
out
and
push
mov
lahf
repz
or
lret
iret
xor
lret
mov
int
or
jno
pop
fstl
popa
test
mov
ficoms
pop
cmpb
lods
andl
pop
fwait
adc
adc
mov
jnp
movsl
fldpi
xchg
pop
loop
fcompl
mov
mov
leave
inc
dec
inc
or
aad
stos
xchg
cmp
ret
fsts
cli
xchg
cs
shrl
pop
jae
rorl
insb
cmp
jne
fcmove
push
and
lret
or
insl
mov
mov
popf
xor
int3
mov
outsl
leave
xor
push
pop
nop
adc
dec
push
dec
mov
lods
mov
cmp
push
aam
xchg
cld
rorb
cmp
xchg
repnz
jl
shll
inc
jb
push
jne
pop
fsts
popa
inc
imul
jle
lahf
cli
gs
aaa
loope
lret
punpckhdq
scas
lahf
cmp
sbb
leave
pop
jb
pop
or
push
mov
fnstenv
mov
pop
or
inc
inc
loop
lea
or
fucomi
pop
adc
rolb
mov
push
sbb
nop
lahf
leave
xor
jns
lcall
enter
push
xor
inc
push
jg
es
ret
sub
sbb
inc
cs
mov
add
xor
je
xchg
push
sbb
xchg
frstor
xchg
incb
pop
and
frstor
cmp
dec
sbb
jle
fsubl
aad
push
dec
xor
lea
sbb
add
cmp
iret
and
aad
adc
or
mov
movsb
scas
sub
call
push
les
insb
out
mov
iret
lret
cld
sub
enter
addb
dec
cmp
xorb
dec
fidivl
movsl
scas
jb
or
xor
lock
out
and
das
fsts
js
ficoms
ret
hlt
mov
xor
mov
mov
cmp
adc
imul
sbb
pop
sbb
dec
mov
mov
pop
aam
adc
push
shrl
outsb
nop
out
fsubs
jecxz
lock
jl
lds
cmpb
std
call
add
cwtl
push
sbb
cmp
mov
movsl
in
inc
and
mov
inc
xor
xor
sbb
shll
fsubrs
push
adc
je
mov
push
inc
cmc
lods
cmp
cmp
enter
fidivl
pushl
jmp
mov
sub
stc
enter
je
cli
push
push
sub
mov
push
pop
xlat
mov
sti
mov
and
jl
inc
movsl
mov
js
lret
and
stos
in
pop
stc
shll
and
pop
imul
and
pop
or
movsl
lea
push
movl
mov
out
std
pop
adc
mov
jnp
daa
call
fdivp
jb
pop
add
xor
fmull
push
fs
pop
sbb
fisttpll
mov
lahf
cmp
std
inc
add
cwtl
popa
adc
push
iret
scas
jne
popf
dec
mov
clc
cmp
fwait
int
in
movsb
clc
jo
dec
in
pop
xchg
lods
pushf
test
scas
sub
inc
or
clc
sub
sub
das
cmp
popa
in
icebp
lods
fwait
mov
es
insl
ficompl
jae
pop
xor
adcl
pop
loop
fwait
xor
out
xor
outsl
sti
leave
and
pop
mov
xor
in
rcr
ret
les
leave
into
mov
mov
adc
push
mov
imull
idiv
ja
cmp
test
push
into
lahf
rcl
out
in
push
mov
movsl
mov
sti
std
jne
dec
mov
sbb
xor
cmp
pop
loope
or
adc
xchg
xchg
dec
sub
sbb
int3
popf
sbb
lock
mov
subps
sbb
jge
cmp
mov
push
inc
mov
clc
and
and
mov
arpl
push
mov
xor
test
cmp
mov
mov
and
xor
mov
push
test
xchg
inc
adcb
adc
rol
adc
imul
jge
fsts
stos
add
jl
outsb
mov
iret
mov
pushf
push
mov
pop
in
push
stos
add
sub
imul
jb
fstpl
dec
mov
jecxz
inc
aas
outsl
mov
leave
loopne
repnz
adc
aad
cltd
mov
imul
arpl
movsl
out
xchg
push
lea
mov
enter
xlat
out
and
add
mov
call
paddb
in
adc
mov
push
jns
cltd
pop
adc
out
cmp
mov
dec
mov
sub
lcall
flds
cwtl
bound
shll
movsl
loopne
dec
pop
gs
pinsrw
mov
jp
cmpsb
arpl
outsb
int
push
xchg
scas
mov
ret
test
mov
fwait
mov
out
ret
clc
bound
loopne
into
jns
pusha
test
jo
aaa
aad
out
xchg
imul
xor
lcall
ret
xlat
mov
cs
lret
sub
push
jl
jge
mov
addr16
pop
call
mov
test
push
les
sbb
push
jbe
pop
lods
sub
sbb
sub
jmp
cld
popf
jo
push
sti
xor
repz
inc
adc
insl
adc
cmp
xchg
mov
pop
inc
pop
lret
xchg
jge
adc
adc
jecxz
pop
movsl
or
mov
mov
add
out
ret
negl
nop
dec
insl
cmp
cld
adc
jb
aas
push
mov
int3
xchg
mov
mov
clc
push
inc
in
das
jl
arpl
sbb
jb
sub
lret
rclb
xchg
dec
and
mov
inc
inc
scas
in
int
test
rcrb
mov
xchg
adc
dec
lret
iret
shlb
aad
testb
push
aam
mov
push
dec
and
pop
dec
popa
xchg
daa
scas
xchg
xor
cli
xor
pop
mov
int3
bound
mov
push
cwtl
notb
fidivl
bound
in
jge
std
add
insb
xor
add
add
mov
repnz
and
mov
mov
push
pop
adc
sbb
push
push
cmp
xlat
xchg
mov
ja
loop
scas
cwtl
or
shrl
sub
lods
repnz
fmuls
cltd
lods
adc
jecxz
in
test
jae
sub
addr16
push
inc
fistps
in
jae
sub
in
jl
cmpsb
mov
add
pop
movsl
loope
inc
or
ja
lock
fdivs
ret
or
jne
jbe
in
lods
mov
cs
ret
mov
mov
in
ret
pop
adc
test
ret
insb
in
pusha
ret
dec
test
je
arpl
mov
push
stc
stc
adc
and
ss
and
pop
add
adc
aas
icebp
push
les
insl
into
imul
inc
mov
repz
in
xor
cmp
insb
push
sub
mov
xchg
inc
pop
scas
insl
int
mov
cmc
out
mov
jo
jbe
or
pop
add
into
cmp
adc
ret
in
aad
jmp
stos
cmp
jns
mov
jg
push
cmp
xor
mov
pop
data16
fwait
add
or
mov
das
add
int3
pop
add
dec
dec
aam
int
inc
imul
inc
push
lcallw
adc
lret
mov
add
inc
imul
lahf
lcall
int
and
adc
push
adcl
les
lret
add
cwtl
mov
sbb
sti
xor
fdivs
divl
jno
sub
loopne
stos
negb
movsl
outsl
ja
or
test
jno
cltd
in
push
lahf
aam
imul
xor
adc
jecxz
sbb
jno
test
pushf
cmpsb
out
sbb
pop
jle
xor
cmp
js
mov
test
mov
sbb
leave
lock
cmp
push
mov
push
mov
cli
sbb
fisubs
scas
cmp
xor
dec
push
jl
and
mov
inc
mov
subb
imul
jp
shl
mov
js
pop
adc
lods
or
popa
mov
push
mov
lods
adc
fsubrl
cld
fimuls
and
pop
in
add
outsl
insl
subb
lock
add
test
mov
inc
xor
lods
lret
out
fcoml
loope
mov
filds
sub
repz
lea
mov
mov
icebp
negb
daa
sub
icebp
sbb
mov
and
ret
sahf
adc
pusha
fiaddl
cld
xchg
into
out
push
lret
push
mov
sub
mov
fidivrs
cwtl
loopne
popa
das
scas
jecxz
fimuls
pop
xor
xor
or
aas
shrb
pop
outsl
ret
stc
inc
pop
insl
scas
inc
mov
test
mov
mov
push
and
repz
int3
mov
xchg
cwtl
call
sub
mov
xlat
insl
stos
jle
push
les
add
xchg
adc
inc
lods
xchg
int3
adc
sbb
sbb
popf
jb
push
std
cmpsl
pop
dec
jmp
cltd
test
jp
nop
push
hlt
insl
jns
sub
lahf
cmpsl
mov
mov
std
or
nop
repnz
inc
push
mov
test
lods
es
or
xlat
cmp
lret
enter
push
jns
out
adc
xlat
cmp
xor
jne
clc
xchg
out
xor
aas
pop
addr16
into
pop
das
sarb
mov
mov
and
sbb
imul
movsl
fstl
cmp
jmp
pop
js
pop
sub
mov
adc
dec
mov
popl
sti
xor
cld
cmp
int3
pop
add
cmp
xor
outsb
pop
mov
movsb
inc
mov
sti
adc
leave
int
aam
shl
mov
mov
mov
rorb
jecxz
or
cmp
in
push
aaa
divl
xchg
mov
hlt
incl
in
mov
outsb
jb
hlt
ds
roll
loop
mov
mov
and
mov
jmp
lods
jae
pop
out
push
cmc
adc
dec
clc
in
adc
mov
jnp
ljmp
cmp
mov
sub
cmp
lods
cmp
imul
push
push
out
fs
dec
push
movsl
sub
outsl
add
mov
fs
push
mov
add
mov
pop
pop
pop
jbe
xchg
push
aas
rclb
rep
outsl
mov
lcall
dec
mov
xchg
cmp
mov
mov
inc
lds
jae
je
push
mov
pushf
mov
cmp
xchg
movsb
cld
xor
sahf
ss
scas
jno
mov
sub
es
push
fidivrs
cs
hlt
fxch
int3
sbb
xor
fnstcw
bound
popf
push
cwtl
es
imul
je
and
test
loop
shr
push
outsb
imul
inc
push
outsl
mov
in
cmp
mov
lods
push
pop
test
sbb
repz
sub
enter
xor
lret
das
cmc
xchg
out
jge
mov
fdivl
mov
out
mov
adcl
jmp
mov
fisubl
repnz
int
push
mov
inc
inc
hlt
pop
push
fldt
adc
dec
shrl
mov
cmp
jmp
fstp
ret
lock
arpl
mov
add
testb
mov
mov
sbb
inc
fidivrl
mov
lahf
out
push
push
repz
test
mov
xchg
mov
std
movsl
jne
lret
bound
sub
dec
xlat
sub
das
test
imul
dec
es
hlt
cmc
jge
in
inc
jecxz
jb
movsbl
inc
enter
jb
push
movsb
out
mov
push
or
ret
cltd
test
jmp
xor
cld
aas
jl
mov
push
pop
loopne
stc
insb
cmp
insb
dec
push
add
stos
pop
push
mov
jecxz
loopne
xchg
daa
cli
es
adc
sti
mov
int3
pop
xlat
sbb
push
adc
jbe
outsb
pop
std
push
xor
out
es
into
inc
test
jnp
in
data16
and
adc
sbb
pushf
es
stos
mov
aam
mov
inc
mov
xor
lcall
test
xor
xor
dec
pop
inc
xlat
cmp
mov
or
push
nop
mov
or
xor
or
jge
push
mov
inc
out
in
outsb
dec
dec
rcll
ja
imul
sbb
mov
inc
mov
iret
pop
dec
lahf
test
push
lret
jp
repnz
pop
stos
js
rcrb
xchg
sahf
out
gs
ljmp
pop
jnp
push
mov
adcl
inc
movsl
dec
sbb
mov
popa
fs
add
inc
rorb
add
rolb
out
fsts
fxch
or
stos
std
and
popa
lea
inc
mov
and
ds
je
sbb
dec
shrb
cltd
inc
aad
cld
mov
cmp
mov
imul
dec
jp
mov
push
addr16
fnstenv
mov
adc
stc
lods
mov
jne
mov
push
loopne
nop
ret
leave
mov
jmp
cmpsl
inc
xor
sti
add
push
insb
adc
adc
adcl
xchg
mov
push
inc
or
mov
test
aad
cmpsl
push
pop
insb
sbb
negb
cmp
xchg
imul
cmp
lret
sarb
shl
or
lock
push
xchg
cmp
push
push
push
dec
addr16
jno
insb
ret
mul
mov
subl
sub
jle
mov
fsubs
or
cld
mov
xor
or
or
adc
cmp
xor
push
rcl
loopne
cs
pop
push
lock
insl
je
cltd
sub
data16
mov
leave
jg
aaa
stos
cmp
pop
call
bound
sub
cmpsb
test
jl
sbb
add
mov
mov
cmp
or
dec
mov
push
adcl
push
adc
inc
add
pop
adc
jmpw
sub
ds
jno
jne
push
xchg
jl
xchg
adc
sti
ja
inc
inc
add
lock
aad
mov
shll
lea
jne
adc
mov
mov
mov
outsl
and
aaa
mov
rcl
fadd
mov
ljmp
lahf
push
xchg
call
movsl
adc
mov
insb
pop
outsl
outsl
add
mov
gs
fldt
fcoml
lret
enter
add
lds
gs
ret
jno
cli
pop
sub
and
cltd
mov
cmp
out
xor
and
out
rcll
push
jp
cmpb
rcll
mov
jne
incl
js
in
movhps
adc
xchg
inc
je
xor
ror
fldenv
add
and
repnz
ljmp
adc
test
mov
in
adc
fcomip
gs
repnz
test
inc
adc
aad
push
sbb
out
sub
xorl
add
xor
in
cld
lahf
dec
jle
fdivr
lds
jbe
xlat
out
cld
fisttpl
mov
bound
mov
sbb
lock
cli
mov
outsl
out
cmp
push
push
xchg
cmp
sub
lret
xchg
mov
repz
imul
imul
or
xorl
pusha
nop
xchg
xlat
xchg
jb
cmp
dec
outsl
sbbb
push
mov
pop
pop
sbb
lahf
out
xchg
cmpsl
lahf
enter
sbbl
mov
loopne
cwtl
data16
js
sbb
sub
stc
or
fs
jbe
jmp
mov
out
enter
sbb
repz
mov
ljmp
jecxz
daa
ds
or
outsl
lea
add
jmp
lcall
inc
sub
sbb
adc
mov
insl
push
repnz
in
fstpt
or
stos
sub
adc
mov
clc
or
int3
push
pop
idivl
fbld
inc
push
mov
and
sarb
je
cmpsb
mov
add
adc
mov
in
cmp
dec
mov
sub
movsb
stos
jl
movsb
jmp
adcb
xchg
lods
mov
ljmp
pop
sahf
mov
xchg
xor
mov
hlt
jmp
xchg
ds
jp
insl
push
popf
mov
test
push
xchg
cld
lock
jle
and
cmpsl
xor
cli
pop
jo
and
cltd
lea
or
lcall
xchg
stc
cmpb
push
cs
mov
outsb
xor
jo
lods
and
and
inc
sarb
cwtl
addr16
mov
mov
xchg
mov
std
test
mov
aas
mov
xchg
and
add
inc
xorb
and
jb
test
les
mov
data16
int
lock
shlb
rclb
cwtl
mov
jns
popa
pop
mov
js
test
or
bound
pop
jnp
add
inc
cmp
insl
pop
stos
loopne
das
lds
les
pop
stc
and
outsl
xorb
adc
mov
jge
mov
mov
repnz
movsl
jnp
js
stos
mov
out
filds
dec
sti
repz
mov
sti
imul
arpl
push
mov
addr16
enter
es
mov
xchg
lret
or
lods
push
xchg
xchg
mov
lcall
movsb
push
fbstp
outsl
ja
aas
into
and
and
jne
aad
lock
push
stos
mov
loope
push
aaa
dec
xor
adc
push
sub
testb
xchg
bound
js
inc
adc
int
subl
insl
mov
cmp
sub
adc
inc
lods
sbb
in
into
jae
and
clc
sub
push
sarb
ficompl
in
in
js
mov
ljmp
dec
scas
push
push
js
pop
adc
or
rclb
cmp
xchg
notl
roll
inc
mov
std
roll
push
and
mov
add
sti
xchg
or
push
lock
jns
add
shll
push
push
inc
jmp
add
stc
jae
inc
push
adc
dec
pop
sbb
xchg
ljmp
test
arpl
jp
dec
and
dec
jg
dec
mov
lret
adc
cmp
dec
adc
test
test
jl
enter
lock
or
inc
mov
pop
insb
xlat
iret
sbb
nop
sub
rcrb
pop
pop
dec
pushf
and
xchg
mov
pop
xor
loop
les
push
scas
cld
cs
sbb
stos
enter
nop
call
pop
and
ror
popf
add
inc
dec
and
jbe
xor
mov
cmpxchg
pop
icebp
and
jo
sbb
sub
inc
out
pusha
xchg
add
data16
outsl
adc
cwtl
enter
sbb
jge
dec
sbb
add
push
sub
fdivrl
insl
insb
push
ja
mov
roll
sub
sbb
mov
push
push
lahf
and
jge
ja
jecxz
pop
xchg
out
pop
cmp
jle
pushf
repnz
xor
sub
or
test
les
bound
mov
lcall
or
adc
adc
or
xchg
pop
mov
in
loop
sub
mov
mov
adcb
int3
pop
addr16
mov
faddl
cmp
lcall
fcom
inc
pusha
rcrb
shl
cmp
jmp
out
push
jp
dec
ja
mov
aas
pop
inc
je
sub
lods
mov
shrb
ja
jns
adc
fisttpll
push
xchg
inc
mov
inc
movsl
addr16
mov
cli
mov
je
jp
xchg
push
stos
and
mov
mov
sbb
cld
inc
cld
pop
fmul
xor
lahf
push
xor
pop
das
repz
cwtl
push
xchg
add
out
data16
outsb
aaa
cmpsl
loopne
sbb
enter
jno
xchg
mov
xor
int3
flds
shlb
add
dec
cmp
and
adcl
cmp
jo
dec
push
xchg
std
out
mov
jp
andnps
bound
icebp
enter
imul
in
call
test
and
test
insl
inc
outsl
pop
mov
pushf
faddp
jp
std
cmpsl
or
arpl
neg
fs
imul
push
cmp
mov
repz
xlat
add
xchg
xchg
shll
loop
dec
fstpt
test
jb
xlat
add
inc
add
fisubl
mov
out
pushw
ss
push
xchg
andl
insl
push
mov
ds
fwait
inc
pop
insb
std
in
les
imul
jns
mov
push
bound
pop
xor
mov
shll
adc
and
jmp
push
and
test
test
pop
jecxz
pop
sub
outsb
pop
push
push
dec
hlt
sbb
inc
cmc
xor
mov
mov
fs
cmp
dec
movsl
fsubl
sbb
jo
push
rorb
icebp
cmpsb
fimuls
fucomip
jle
xchg
jbe
push
mov
cmpsl
mov
push
ret
sub
inc
add
pop
jae
xchg
fmulp
fs
ret
or
or
xchg
lcall
mov
lock
pop
test
fwait
cmpsl
sbb
stc
fdivrl
inc
push
jae
addr16
jl
inc
pop
cmpsb
mov
sar
cltd
fnstcw
xchg
movsb
movb
out
lcall
inc
pop
push
xor
push
aam
clc
out
out
dec
cwtl
xor
stos
outsb
mov
dec
xchg
xchg
cmp
pop
pop
jb
or
xor
imul
cmp
mov
add
mov
xchg
xchg
pushl
imul
pop
pop
aad
ret
mov
lock
lods
int
sbb
jns
dec
pop
push
push
jno
jle
and
test
adc
imul
lods
cmp
push
inc
cmc
sbb
sub
mov
ret
pop
fidivl
lahf
add
aas
cld
aam
hlt
aaa
xchg
es
mov
lods
frstor
lods
mov
push
cmpsl
fadds
or
push
fcmovne
mov
inc
pop
iret
rolb
lea
sub
nop
in
stc
mov
test
adc
xchg
mov
and
data16
sti
mov
lret
add
add
xchg
mov
xor
mov
in
mov
ds
mov
push
ja
push
or
xchg
and
and
pop
jecxz
stc
push
sub
mov
test
in
dec
mov
outsl
jne
adc
clc
stos
inc
out
jmp
dec
rcrb
aad
add
fldt
gs
ds
mov
push
je
adc
clc
dec
or
nop
sbb
add
or
and
gs
ficomps
popl
pop
dec
fwait
dec
push
pop
call
inc
sub
push
lods
cmp
push
sbb
jb
bound
xor
sahf
inc
mov
adc
and
mov
scas
out
lods
mov
repz
iret
pop
mov
addl
xor
and
repz
ret
xor
cltd
dec
add
add
js
rcrl
stos
mov
lds
imul
mov
sub
pand
mov
xor
insl
sbb
xchg
subb
mov
test
push
mov
or
xchg
in
cmp
mov
lret
cld
inc
push
pop
gs
adc
jnp
dec
in
in
sbb
incb
xchg
mov
xchg
sahf
adc
push
push
pop
sbb
mov
in
lret
gs
lock
cmpsb
xchg
pop
les
adc
push
xor
mov
xchg
add
add
mov
loop
xchg
push
call
cli
out
mov
sbb
inc
jbe
test
xchg
pop
sbb
outsb
stos
jo
mov
adc
pop
fcmovu
fidivrl
push
jl
cmp
push
xchg
nop
add
idivl
push
movsl
jae
push
jmp
aam
lea
arpl
adc
push
cmc
repz
movsl
repz
push
xchg
cs
or
pop
mov
rorb
dec
in
xor
jle
cmp
jnp
outsb
xor
ja
jl
movsb
xchg
xchg
pop
aam
mov
inc
add
adc
mov
sub
ss
jb
or
mov
ret
test
dec
movsl
addr16
push
add
xor
xchg
rcll
nop
out
cmp
xchg
testb
mov
jmp
adc
mov
mov
xchg
fst
or
call
dec
inc
add
push
mov
ja
loope
jno
ds
and
test
das
mov
lret
cld
cmp
test
sti
dec
xchg
lods
loop
cmp
cli
or
pop
outsl
xchg
jle
mov
adc
outsb
and
mov
jo
mov
in
xor
push
out
mov
pop
jb
bound
lods
xchg
xchg
jecxz
xchg
push
icebp
in
in
dec
orb
dec
in
add
fsubrs
in
or
sbb
mov
sub
clc
sbb
in
mov
test
jns
mov
mov
and
fdivl
and
lods
jg
loop
fidivrl
je
daa
inc
add
sbb
es
cmpsb
jp
pop
adc
xor
cmp
push
push
mov
push
cmp
dec
shlb
and
imul
shl
or
popf
jnp
add
and
xor
mov
out
adcb
xchg
scas
ret
outsl
mov
pop
cmpsl
js
sbb
pop
mov
lcall
jne
movsl
mov
stc
xchg
mov
insb
repz
pop
sub
in
xor
push
cmp
imul
or
pop
mov
pop
pop
inc
jnp
dec
push
xor
lods
mov
insl
ret
lods
sbb
cli
inc
jmp
mov
jne
int3
nop
xor
outsb
aas
push
aad
mov
xor
add
gs
stos
movsl
jge
jle
sbb
leave
push
jbe
mov
xchg
jae
inc
xor
lahf
daa
push
shll
xchg
das
jg
data16
cs
lahf
mov
mov
sbb
or
mov
inc
xchg
dec
pop
shr
mov
and
fisubs
mov
sbb
testb
sub
stos
mov
xor
outsb
or
mov
inc
fucomp
cwtl
dec
scas
sub
rcll
mov
iret
test
mov
orl
jae
push
sti
aam
ret
mov
mov
test
cmpps
dec
or
cs
mov
dec
jbe
dec
decl
aam
sub
add
adc
shld
mov
mov
clc
inc
pop
out
out
jecxz
mov
in
dec
divb
mov
inc
ja
jge
dec
movsb
mov
pop
lock
and
mov
repnz
xchg
dec
inc
jecxz
pop
enter
inc
jnp
adc
ja
adc
sub
xlat
das
jmp
addr16
rclb
jmp
fldt
mov
out
adc
adc
add
push
int
cwtl
hlt
in
loope
jnp
mov
pusha
in
mov
ja
inc
or
jns
dec
or
and
cld
aad
addr16
sub
add
out
in
or
and
loop
leave
iret
xchg
sub
test
inc
jb
mulb
negl
cmp
cmpsl
cmp
incl
test
xchg
mov
int
mov
add
addr16
jge
dec
sub
and
and
popf
cmp
lahf
push
les
push
and
mov
enter
test
dec
les
ds
cmp
lods
subb
push
push
jg,pt
mov
or
stos
mov
push
rcrl
int3
push
xlat
push
mov
repnz
mov
sub
xor
pop
and
shlb
mov
ja
inc
xor
dec
inc
lds
imul
inc
scas
mov
xor
mov
add
cmp
jl
cs
mov
jnp
mov
cmpl
fdivrs
in
shrl
stos
incl
fsub
outsb
or
push
and
pop
sub
and
push
daa
fiadds
hlt
xchg
dec
cmpsb
sbbb
ja
je
fidivrl
push
mov
and
push
xor
dec
rcrb
bswap
adc
test
stos
and
push
xlat
nopl
jmp
mov
rorl
or
dec
or
mov
push
je
sbb
pop
fidivl
cmp
add
ljmp
inc
lock
les
mov
cmp
in
xchg
push
jmp
and
stos
push
aam
lahf
stos
and
popa
in
dec
inc
aas
test
loop
int3
sub
addb
jns
ljmp
divl
in
std
jne
jae
arpl
sub
roll
lods
test
cli
and
xorb
shlb
xchg
loope
xchg
dec
and
lret
mov
fwait
cwtl
and
arpl
mov
jg
mov
xchg
fldl
cs
lret
lods
and
jb
or
mov
or
inc
xchg
je
ror
inc
cmp
cltd
add
fdivrl
mov
pop
jecxz
out
xor
das
mov
in
test
sti
mov
push
or
imul
repnz
mov
in
movsb
push
ret
jno
movsb
cltd
sbb
lock
pop
stos
cli
inc
jge
lcall
orl
cli
out
loope
pop
sahf
outsb
rcll
jmp
push
and
ret
inc
jno
shrb
cwtl
popa
idivl
js
add
aad
jne
lods
dec
cwtl
mov
cld
push
mov
cmp
xchg
test
inc
xchg
lods
xchg
fisttpl
xor
mov
insb
mov
xchg
in
and
mov
xchg
adc
xlat
fcompl
dec
cmpb
mov
xor
jns
pop
enter
pop
mov
inc
sahf
ljmp
mov
icebp
adc
push
mov
adc
or
inc
push
jge
or
lods
mov
push
xchg
test
popf
ds
sub
je
push
aam
dec
sti
rcrl
std
popf
add
rclb
neg
hlt
dec
push
xchg
mov
jg
neg
add
aad
adc
cmpsl
stc
jge
mov
and
push
push
cld
aaa
mov
xor
inc
jno
data16
and
outsb
movsb
mov
ds
ss
sub
jae
daa
jo
adc
or
sub
icebp
leave
pop
fstps
in
popa
iret
inc
leave
inc
mov
insl
scas
fsubr
bound
mov
arpl
xlat
push
cmp
cmp
push
jge
mov
nop
xchg
ljmp
call
cmpsb
je
mov
ret
or
pop
mov
mov
sub
adc
xchg
xchg
ds
pop
scas
call
loop
sub
out
sbb
jno
dec
fisttpll
adc
jne,pn
xchg
push
mov
inc
sbb
hlt
imul
mov
aad
cmp
cmp
iret
push
mov
prefetch
jne,pn
stos
hlt
dec
test
ret
outsb
jge
out
adc
mov
or
jns
mov
pop
xchg
jmp
outsl
insb
or
add
mov
jmp
fistpl
xor
and
test
aam
ret
xchg
ror
mov
daa
mov
sti
sub
ljmp
movsl
outsl
mov
arpl
pop
mov
imul
xor
adc
push
sbb
push
movsb
mov
jns
jg
out
cmp
ret
stos
les
mov
loop
divb
je
mov
ret
xor
shld
mov
xor
push
and
aas
lret
mov
fstpl
pop
push
cmp
push
pop
mov
roll
jne
or
mov
xlat
out
dec
mov
out
inc
jg
sbb
pop
xchg
sbb
push
xor
push
mov
adc
test
cld
lds
out
add
shll
xchg
add
int3
xchg
fistpll
mov
pop
mov
std
out
adc
in
and
jo
fcomip
test
int3
mov
lret
jecxz
test
hlt
sbb
ret
mov
out
stc
cwtl
fistpl
xor
lret
in
std
sahf
iret
dec
cmp
xor
enter
jo
shr
add
jb
mov
xchg
pop
movsl
std
in
loopne,pn
xchg
sbb
push
std
icebp
mov
dec
aad
push
leave
stc
aas
popf
xchg
jb
pop
mov
roll
stc
int
imul
sbb
jno
sub
mov
nop
mov
test
mov
inc
aad
xchg
ljmp
fs
mov
leave
popf
std
xchg
sub
ret
mov
add
sbb
les
dec
mov
push
fwait
add
insl
pushf
jle
imul
cwtl
fs
pop
pop
cld
popf
or
jmp
stc
pop
or
insb
loopne
xchg
sbb
pop
fwait
adc
pop
pop
lods
pop
icebp
bound
push
iret
sub
mov
inc
pop
inc
test
int
cmp
cmp
testl
xor
or
test
filds
cmc
pop
inc
push
jle
inc
add
jg
push
sub
mov
push
aad
and
adc
add
scas
loope
pop
mov
push
ja
push
ret
out
inc
push
outsb
icebp
rolb
jp
repnz
lods
adc
jmp
dec
popf
test
jl
out
add
pop
mov
pusha
xchg
shl
orl
xor
xlat
jb
push
mov
aaa
mov
ss
les
adc
jg
stc
or
cmp
add
outsb
jno
fsubrs
movsl
out
sbb
lea
mov
push
aas
mov
int3
and
push
leave
push
mov
jg
jecxz
mov
pusha
subb
xchg
mov
adc
mov
je
mov
imul
fistps
ljmp
ret
popa
jbe
push
jecxz
xchg
dec
jno
cmp
es
dec
inc
xchg
push
shr
mov
out
jge
enter
inc
pop
lds
add
push
in
sub
xor
mov
dec
xchg
mov
fnstcw
mov
std
push
lock
adc
das
ret
pop
dec
scas
rcrl
lock
push
sbb
xchg
fwait
int3
and
mov
and
mulb
push
xchg
lret
or
sbb
adc
dec
sahf
sub
xchg
xchg
sahf
mov
arpl
aam
xchg
cmp
mov
cmp
popf
jecxz
subl
dec
xor
ds
ret
ret
imul
movb
xchg
inc
inc
cmpsl
enter
mov
shll
pop
mov
adc
mov
sub
test
pop
das
cmpsb
je
cmp
repz
in
movsl
inc
test
jbe
stc
in
pop
mov
push
cmp
and
adc
pop
xchg
enter
aad
jo
inc
jp
incb
mov
inc
add
mov
aas
xchg
sub
in
sbb
adc
mov
push
iret
test
mull
loope
or
shlb
test
aas
pushl
push
jmp
cmpl
aas
mov
push
dec
les
out
mov
out
and
mov
fs
lret
lret
movsl
jge
sysret
cmpsb
imul
lock
into
shrb
imul
in
mov
fwait
in
and
pmulhw
call
sub
dec
push
dec
dec
rcrl
cs
push
loopne
ljmp
cmpsb
and
hlt
push
lret
repz
fidivrs
cmp
adc
mov
pop
adc
pusha
icebp
add
mov
sarl
outsb
add
sbb
loope
popf
mov
lahf
pushf
or
mov
int
sahf
cli
fs
xchg
aas
aas
ss
sbb
push
ljmp
fcoms
push
fs
sub
mov
daa
xor
dec
test
xchg
sbb
jg
xor
mov
testb
movsl
rol
das
loopne
lahf
dec
lcall
scas
fs
inc
shlb
dec
outsl
push
out
inc
pop
sub
aad
jmp
add
pop
test
or
jbe
leave
mov
mov
ljmp
scas
cmp
add
pop
and
xchg
pusha
pop
jo
out
cmpsb
je
ds
imul
adc
loope
popf
repz
sbb
mov
or
xor
mov
nop
xor
sti
das
jp
jl
mov
inc
imul
fstl
sbb
loop
xchg
xor
pop
add
sbbl
add
dec
sub
xchg
cmc
cltd
xor
test
inc
adc
ret
or
add
mov
ja
out
jo
adc
sub
call
push
orb
add
push
outsb
cmp
es
loopne
xchg
jb
mov
and
sbb
sar
sti
xor
outsl
xchg
jmp
fnstenv
xor
fildll
pop
in
cld
or
mov
divb
shlb
mov
inc
adc
jbe
push
or
sbb
dec
orb
cmp
test
mov
rcr
jne
rorl
cmp
adc
jno
xchg
test
dec
add
addb
cmp
add
xchg
out
push
or
add
fidivrl
pop
jle
sbb
xchg
sbb
cmpsl
mov
js
es
fnstenv
stc
push
lock
adc
stc
shll
cltd
pushf
data16
jle
out
daa
and
inc
xchg
stc
fsts
insb
aad
xchg
add
add
lea
push
mov
cmp
popa
sbb
fsincos
lea
cmp
or
insb
js
loopne
add
sub
es
adc
xchg
imul
xor
pop
xor
les
js
or
adc
add
cmc
mov
stos
cmp
and
adcb
fxch
add
loopne
mov
insb
loope
fstl
mov
jns
insl
ljmp
xchg
movsb
test
mov
scas
and
xor
pop
dec
mov
ja
jo
cmp
repz
sub
mov
inc
push
fldcw
ret
xchg
add
and
movsl
and
mov
push
sahf
stc
mov
je
daa
in
mov
nop
sbb
ret
xlat
or
rclb
in
in
in
mov
fldenv
flds
add
or
es
xor
mov
jnp
shll
and
fdiv
sub
lret
xchg
cld
sbb
push
sahf
mov
aaa
es
call
gs
mov
pop
cmp
xchg
iret
jae
sbb
aad
jo
adc
dec
hlt
mov
cmp
inc
push
and
dec
xor
insl
ret
fcmovnbe
ret
hlt
xchg
shrb
lret
out
es
je
jnp
mov
xchg
mov
out
add
push
push
mov
sbb
or
cmp
mov
outsl
out
in
iret
aam
les
or
pop
mov
pop
in
push
scas
int
push
xor
sub
fs
mov
add
xchg
pop
mov
xchg
jle
jne
dec
loop
jge
push
test
mov
xor
fsubrs
and
adc
and
scas
xor
and
mov
aad
in
out
xchg
and
stos
popa
es
aam
ret
rclb
dec
divl
cmp
inc
cmpsl
mov
pusha
jmp
push
xchg
xchg
xchg
mov
enter
push
mov
test
dec
add
jl
cs
add
into
jg
xor
fadds
daa
adc
dec
cmp
mov
hlt
shl
jae
push
arpl
xchg
imul
cmp
mov
ljmp
std
popl
xchg
cmp
add
push
fsubr
getsec
and
mov
ja
je
mov
sub
and
ja
out
cwtl
iret
mov
call
outsl
int
adc
mov
out
fmull
aaa
xlat
sbb
and
in
add
les
ret
jecxz
jne
adc
xor
jb
and
dec
ss
pop
jae
ljmp
nop
fnsave
mov
and
loop
mov
imulb
sbb
sarl
jmp
sub
leave
xor
or
sarb
out
or
mov
adc
and
dec
pop
loope
adc
out
push
movsl
fdivrs
lods
es
mov
sbb
xlat
sti
cmp
sahf
lahf
pop
popf
dec
sbb
das
scas
jno
cwtl
jecxz
and
mov
jecxz
or
cld
sbb
insb
adc
js
xchg
and
jge
xor
xchg
xchg
int
jl
test
jmp
jmp
mov
push
cwtl
loop
adc
pop
sti
xor
in
mov
in
mov
adcl
icebp
mov
fs
clc
das
ja
xor
in
push
mov
lret
add
stos
add
insb
cs
cmp
idivl
cmp
adc
sub
xor
dec
or
xchg
mov
shll
pushf
rorl
lock
lods
daa
out
inc
imul
mov
mov
mov
and
or
out
ljmp
clc
stos
xchg
push
jnp
dec
jmp
inc
sbbb
jne
stos
push
dec
sbb
mov
pop
xor
cmpsb
mov
mov
and
cltd
clc
in
ljmp
aaa
movsb
mov
and
cmp
imul
pop
cmp
jno
test
inc
sahf
popf
mov
mov
rclb
aaa
sbb
lods
lahf
mov
je
int3
xchg
push
lock
dec
mov
les
insb
sub
rorb
push
mov
jno
inc
mov
shll
shll
cmp
mov
pushf
jnp
shl
ret
rol
rcrl
ret
lret
pop
addr16
nop
call
imul
out
inc
xchg
js
mov
sbb
imul
and
rorb
lods
xchg
lods
int
mov
shll
mov
ret
aaa
jp
daa
inc
push
imul
jmp
mov
scas
fildl
mov
stos
xor
mov
and
sub
jp
mov
andb
jne
mov
cwtl
push
jne
push
mov
dec
pop
push
push
adc
lahf
mov
jae
rcrl
mov
push
xchg
xchg
mov
aas
loope
pop
imul
jno
xchg
clc
fidivs
pop
push
aas
hlt
inc
daa
aas
add
out
mov
sub
xchg
adc
adc
out
inc
dec
cmp
inc
popf
add
inc
sarb
and
pop
lret
lret
cld
insl
js
cmp
xor
ret
rcrb
rolb
jno
cmp
jbe
gs
inc
xchg
pop
xchg
dec
jnp
andl
fistps
jo
mov
mov
test
sub
cmpsb
sbb
jg
insb
sbb
and
xchg
scas
movsl
inc
leave
lcall
sub
pop
in
lods
cmp
adc
mov
cmp
lods
sahf
or
cmp
jbe
scas
or
and
test
adc
je
insl
push
xlat
mov
orb
xchg
push
add
js
xchg
in
ljmp
cmp
sbb
clc
or
jg
and
pop
adc
xchg
mov
ficompl
sub
mov
adc
xchg
push
je
ret
hlt
sbb
push
pop
leave
loop
and
popa
sbb
imul
jo
bound
sar
xchg
push
jecxz
mov
and
dec
adcb
pop
jge
mov
pop
lods
scas
lods
xor
iret
cmpsl
ret
jb
gs
outsb
jbe
xchg
imul
std
scas
popf
cmp
scas
testb
cld
cmp
outsb
pusha
xchg
add
jmp
int3
or
push
adc
cmpsl
mov
into
sbb
inc
aaa
imul
out
fisubs
pop
and
scas
or
nop
pop
jo
in
or
mov
sub
popl
sub
xor
jle
lahf
and
mov
lock
lcall
fs
je
test
mov
cmpsb
cmp
mov
push
jne
or
push
icebp
sub
ret
xchg
sarb
jge
pop
mov
jo
lret
fnstsw
hlt
mov
ljmp
xor
into
jae
mov
jl
bound
xor
cmp
lds
mov
stos
in
fdivrs
pop
jg
sub
out
sub
mov
sub
mov
negb
mov
cmp
sti
aam
or
lds
mov
inc
mov
notb
jl
and
stos
fwait
addl
test
mov
stc
jle
fdivrs
scas
test
mov
jbe
movsl
cmp
cmp
xchg
dec
das
dec
xorb
fistpl
inc
js
cli
dec
push
sti
xchg
fwait
sbb
adc
sub
data16
popa
xchg
mov
xchg
sbb
cmp
jg
fdivl
sub
cmpl
dec
add
mov
imul
repnz
jb
stos
pushf
pop
mov
test
pusha
ret
dec
shl
gs
mov
subl
add
aaa
aad
lret
nop
mov
xor
jne
rorb
aam
idivb
cmpsb
in
sub
push
lods
mov
mov
inc
cmp
cld
adc
dec
sbb
push
xor
gs
xor
cmpsl
das
mov
push
jbe
jecxz
test
inc
xchg
mov
adc
push
imul
dec
mov
push
jbe
add
inc
xor
frstor
pop
mulb
call
or
sbb
rol
pushf
push
lcall
mov
mov
pop
xor
sbb
das
mov
push
and
pop
inc
adc
or
pusha
inc
pop
movl
insl
xor
stc
hlt
add
adc
jecxz
ret
mov
add
mov
mov
pusha
call
imul
adc
ja
std
movsb
xchg
dec
ret
lods
hlt
sub
mov
sub
push
les
test
push
sarb
push
pop
push
xor
mov
cltd
or
je
push
das
mov
sub
xlat
es
aas
loope
push
gs
dec
xlat
jge
clc
pop
loopne
cmpsb
sub
rcl
mov
iret
cmp
xchg
ret
push
in
stos
mov
mov
push
imul
pusha
inc
je
add
ja
xchg
mov
sub
mov
sbb
adc
sub
das
aad
xchg
aaa
arpl
adcb
dec
retw
sbb
mov
cwtl
adc
pushf
iret
js
inc
fdivr
aas
mov
push
pop
outsb
pushf
cld
mov
in
push
sahf
pop
cmp
adc
jae
or
inc
imul
and
mov
add
sbb
pop
jle
adc
add
pop
mov
test
xchg
scas
test
popf
mov
adc
lret
sub
jnp
movsb
xor
lods
xor
jge
xchg
cltd
fwait
push
js
and
dec
mov
dec
cmovp
ljmp
in
imul
iret
lock
dec
jae
jge
ret
cmpsb
pop
jae
dec
adc
movsb
and
jmp
xlat
sub
and
lret
call
loopne
mov
out
push
and
mov
and
jmp
push
mov
shlb
loopne
lock
and
inc
aaa
outsb
pop
iret
fstl
pop
lea
jecxz
rcrb
loop
cmp
lock
jne
xchg
xchg
aad
cltd
pop
pop
lahf
dec
add
shrb
sahf
adc
daa
adc
sub
mov
push
mov
es
jne
lea
lock
pop
aaa
lods
pop
cmp
movsb
sbb
dec
out
shrb
adc
or
out
out
int
mov
or
std
and
or
fsubrs
dec
pusha
adc
cs
scas
out
jge
dec
stos
pop
cmp
adc
jno
or
pop
or
lret
cmp
subl
fcompl
loope
loope,pn
dec
cmc
dec
cmp
hlt
add
adc
mov
jb
mov
sub
or
lods
idivb
cltd
jo
fs
loope
les
jbe
cmp
fcomi
not
add
pop
push
xor
pop
mov
popa
das
mov
roll
dec
mov
fs
mov
mov
xorb
mov
fimuls
fadds
lret
pushf
leave
das
in
inc
dec
mov
cmc
aaa
ret
cmp
std
sbb
movsb
lods
stc
adc
insl
jnp
ret
test
movsb
addr16
add
cmc
adc
outsb
and
xchg
xor
inc
cmpsb
mov
mov
test
fidivl
loop
mov
mov
fwait
je
push
pop
out
adc
and
cli
fisubrs
and
inc
test
pop
pop
sub
int3
xchg
lret
inc
shrl
outsl
cli
or
mov
fcoms
add
mov
push
iret
loopne
jmp
cmp
fwait
scas
pop
sti
in
andl
out
in
cmp
ja
in
sbb
lea
cli
adc
push
rorb
adc
loope
pop
lock
xchg
lea
pop
mov
leave
bound
xor
mov
and
out
adc
pop
shrb
mov
mov
adc
pushf
mov
fsubl
out
pop
and
test
fsubs
loop
sbb
xlat
mov
or
into
sbb
cmp
dec
iret
incb
sbbl
outsb
shlb
xchg
jecxz
ret
sti
xchg
xchg
fucomip
lahf
in
push
sbb
lods
mov
or
mov
cmp
aad
or
pop
sub
adc
sub
jb
xchg
adc
dec
push
call
push
push
pop
and
idivb
inc
iret
xchg
xchg
add
icebp
and
mov
sub
xchg
fisttps
leave
inc
je
leave
push
frstor
loop
mov
movsl
lret
pop
cmp
pop
jnp
mov
cli
popa
sbb
or
out
mov
popf
jb
or
inc
test
arpl
mov
aaa
dec
pop
cmp
xchg
pushf
je
adc
and
in
fdivrl
fnstsw
adc
filds
fnstcw
cli
pop
xchg
popa
fs
mov
mov
lds
cmc
jl
jno
lret
sbb
jg
push
push
out
out
cltd
fidivrs
pop
add
out
js
scas
adc
rolb
iret
pop
or
addr16
popf
mov
and
mov
aas
scas
dec
push
cmp
nop
lahf
xlat
pop
lock
sbbl
and
mov
fsubp
add
dec
out
imul
stos
jge
stos
jno
jle
andl
into
sbb
outsl
out
cmpsl
mov
jnp
cmp
pop
jno
enter
cmp
cs
adc
ror
add
xor
jbe
rcl
xchg
punpcklbw
rcrl
jl
mov
mov
cmpsb
jnp
loop
xor
addl
mov
cmp
in
test
mov
loope
fmul
pop
sbb
dec
nop
and
ljmp
outsl
mov
movl
enter
pop
adc
mov
mov
and
pop
js
push
cmp
repnz
mov
out
movsl
int3
cmp
out
or
stc
xchg
inc
or
sbb
popa
shll
cltd
jbe
push
xchg
mov
and
jp
and
repnz
cli
sbb
icebp
loope
add
decl
mov
ret
jge
daa
outsl
popa
inc
xchg
mov
and
jmp
pusha
and
scas
fisubrl
hlt
pop
cmp
xor
cld
repz
test
idivl
push
push
sbb
mov
or
movsl
xchg
imul
push
xchg
pop
shl
mov
rcrb
inc
dec
or
ljmp
push
jle
lret
sub
cmp
mov
ret
test
adc
push
inc
mov
les
ljmp
fcmovb
push
cmp
xor
fbld
jnp
jmp
adc
sub
pop
pushf
mov
add
mov
push
test
inc
cmp
and
inc
jp
addb
in
mov
mov
aas
out
roll
xor
out
sbb
jb
push
push
push
dec
xlat
mov
nop
mov
mov
push
mov
aaa
in
ja
adc
jecxz
lahf
popf
xlat
leave
movsl
fs
bound
xchg
arpl
fcomps
or
iret
mov
sti
xchg
push
cmp
call
xchg
pop
mov
inc
les
mov
repnz
test
xchg
cmc
pop
jbe
mov
loop
and
mov
popa
insl
iret
mov
dec
xchg
jge
mov
dec
int
push
hlt
mov
xor
inc
cmp
sbbb
sti
sti
sub
sti
scas
roll
fs
arpl
out
scas
jmp
adc
push
out
pop
jae
mov
adc
fs
fdivl
jmp
repz
xor
mov
scas
dec
cmpsb
mov
stc
repnz
lods
jne
jmp
pop
nop
jnp
ror
add
clc
push
movsl
add
push
sub
push
inc
ficoms
sub
fidivrs
push
in
call
inc
push
jge
push
xor
push
aam
mov
fstl
inc
push
test
es
mov
push
sub
dec
in
adc
push
xor
ret
push
out
dec
roll
sub
jo
jns
jp
les
or
push
push
hlt
adc
pop
movsb
ljmp
scas
pop
lods
ja
sbb
xchg
mov
ja
push
adc
iret
jp
in
mov
loopne
mov
fsubl
xchg
sti
out
jg
sub
push
xchg
mov
leave
adc
sbb
inc
inc
mov
icebp
sub
mov
pusha
mov
mov
add
ss
test
xor
and
mov
and
mov
adc
sub
xchg
cmpsb
cmp
scas
dec
jge
cmc
iret
out
jp
negb
ffreep
cmp
out
sarl
shrb
aas
dec
jno
xchg
mov
rcl
arpl
dec
stc
pop
push
bound
ret
xchg
pop
jae
jp
fstl
mov
inc
lahf
mov
stos
cmp
add
mov
mov
mov
push
in
jmp
in
aas
mov
push
jns
icebp
sbb
xchg
es
mov
mov
mov
lret
iret
inc
sbb
inc
out
sub
mov
inc
inc
sub
push
aas
data16
adc
jmp
pop
adc
cmp
ffree
or
mov
inc
fstps
subl
outsb
fcomps
fwait
enter
andl
shl
dec
shll
sub
icebp
mov
push
std
dec
nop
fcmovnu
test
and
loopne
push
mov
jae
mov
dec
jae
xchg
jp
jns
lock
jge
cmp
rcll
test
lret
cmp
stos
nop
pop
lcall
xchg
xchg
shrl
pop
scas
faddp
sti
test
in
arpl
mov
xor
jmp
stos
sbb
fcmovnu
rcl
inc
jno
ss
pop
pop
xchg
clc
pushf
mov
mov
mov
movsl
fldt
mov
mov
aam
xchg
push
mov
int3
inc
loop
int
enter
in
push
xchg
add
imul
adc
push
cli
jp
insl
ds
dec
mov
mov
out
test
in
pop
mov
in
leave
jecxz
push
divl
xchg
pop
stc
iret
jl
sysret
jno
ja
inc
add
mov
sbb
aaa
dec
aaa
jb
jo
mov
cltd
mov
in
inc
std
icebp
leave
inc
push
test
fsubr
sti
adc
mov
or
subb
inc
pop
dec
sub
jl
pop
out
lea
data16
mov
or
ror
jo
hlt
enter
popa
cmp
test
sbb
mov
bound
push
test
sbb
pusha
fs
lret
pop
adc
aas
sub
inc
je
loopne
pop
inc
add
cmp
xchg
inc
mov
lret
test
cmpsl
jmp
mov
and
lret
fincstp
fsubr
rcrl
scas
sbb
clc
iret
data16
in
into
aas
mov
mov
sahf
repz
mov
cmp
mov
je
cli
jbe
data16
test
in
bound
andb
jns
lods
shl
addr16
mov
mov
mov
cmpb
sbb
ret
xchg
cmp
sub
scas
pop
cld
push
stc
jle
adc
imul
outsl
addb
and
sub
mov
aam
repz
cmpsl
fldl
pop
mov
cmp
cmp
mov
int3
add
rorl
jae
and
int3
aaa
lock
repz
sarb
cmpsb
loop
dec
or
insl
arpl
mov
arpl
pushf
and
mov
cs
xchg
je
inc
xchg
mov
jmp
xor
and
push
xlat
jno
sub
pushf
and
je
orb
add
adc
enter
and
into
stc
dec
inc
loop,pn
push
dec
or
in
cltd
lahf
jb
pop
add
rcl
jle
repnz
je
sti
insb
inc
daa
mov
inc
std
or
fdivs
dec
mov
mov
adc
push
and
xlat
jmp
addr16
std
sahf
divl
pop
iret
outsb
jmp
jbe
adc
addr16
xchg
and
aas
insb
cmc
aam
adc
push
sub
iret
adc
cmpsb
lahf
pusha
bt
mov
jne
push
push
in
or
scas
sub
push
test
mov
push
stc
cli
mov
scas
dec
in
jge
movsb
data16
sub
loopne
adc
insl
adc
cmp
aaa
push
xor
jb
jecxz
aas
sbb
dec
jo
int3
sbb
xchg
inc
xchg
mov
je
imul
adc
push
hlt
das
inc
int
xchg
lods
sahf
xor
lret
mov
mov
xlat
shll
push
hlt
dec
pop
mov
or
xchg
sbb
mov
pop
adc
jb
rcr
addl
dec
scas
jmp
iret
push
mov
mulb
pusha
push
pop
test
or
rolb
xchg
aas
scas
mov
xor
adc
outsb
mov
push
jae
lret
lods
xchg
sub
mov
cmp
cmc
lea
mov
daa
dec
out
jmp
enter
mov
mov
mov
rcr
sub
notb
mov
fsubp
adc
inc
test
fcoml
mov
sub
xor
imul
pxor
cmp
loope
jp
and
push
add
scas
fisttps
jp
or
popa
aas
xor
shlb
rclb
xor
inc
xorl
lret
arpl
test
outsb
cmc
mov
es
aam
sbb
outsl
push
fisttpll
pop
mov
loop
jle
jle
lahf
inc
les
inc
xchg
or
inc
pop
mov
and
loope
dec
jne
js
xchg
sar
out
add
aam
popa
adc
pop
in
in
cmp
mov
test
pop
test
leave
jl
insb
pop
dec
mov
add
push
push
push
cmp
mov
sbbb
mov
mov
outsl
sbb
cmpb
push
clc
cmp
dec
imul
mov
fs
sub
adc
lods
ret
pop
adc
ret
cltd
pusha
sbbl
and
dec
loopne
push
mov
push
je
outsl
aam
jo
test
inc
cmp
insl
stc
ret
nop
push
test
jge
je
repz
movsl
imul
jecxz
cmp
lcall
push
mov
mov
subl
xchg
mov
jo
sbbl
push
mov
xor
or
and
pop
aad
aam
icebp
inc
inc
or
hlt
jae
dec
jo
xchg
add
cmc
jp
jne
movsb
cltd
lret
push
pop
cmpsb
leave
xlat
popf
test
scas
imul
leave
test
cs
jno
test
lock
dec
pop
add
adc
call
insl
jge
aad
cltd
sbb
fcmovbe
and
filds
out
fstpt
stos
imul
rolb
sti
adc
scas
push
jmp
xlat
xchg
mov
insb
mov
rclb
mov
mov
ss
adc
pop
bound
notb
sub
cmp
pop
outsl
nopl
fcompl
cmp
lcall
or
mov
adc
mov
inc
dec
push
sub
mov
mov
jmp
movsb
mov
scas
sub
mov
jnp
dec
repnz
sub
add
inc
sub
outsb
push
shl
inc
ja
mov
cli
ja
add
iret
mov
pop
pop
pusha
or
sbb
cmp
mov
mov
or
lcall
sbb
mov
add
lcall
xchg
jp
sbb
outsl
adc
out
mov
mov
outsb
sub
push
jmp
sbb
cmp
add
addb
inc
cwtl
fcmovu
xor
das
imul
inc
stos
imul
dec
loop
dec
dec
lret
push
ljmp
les
adc
int3
mov
push
dec
in
push
mov
lahf
push
js
stos
mov
repz
xchg
or
repnz
jnp
mov
js
push
test
xor
add
xchg
ds
push
or
push
adc
inc
frstpm(287
repnz
stc
jecxz
mov
or
ss
jge
cmp
xchg
cld
out
xor
cmpsl
data16
in
xor
fildll
lahf
xchg
outsl
pop
not
push
clc
and
and
cmp
sub
cmpsb
sahf
dec
or
stos
cli
aas
jmp
dec
mov
pop
sbb
in
popa
mov
and
sbb
rclb
jg
ja
sbb
aas
and
mov
fs
dec
or
mov
add
mov
sbb
sub
fmuls
add
decb
lock
clc
js
fwait
das
pop
int3
xchg
loopne
outsb
es
cmp
inc
test
dec
int3
inc
push
dec
adc
dec
in
mov
sti
mov
fs
lret
cmpb
mov
adc
pop
inc
out
dec
cmc
xchg
stos
neg
or
into
das
jbe
sub
jne
insl
push
jb
popf
fldt
or
xchg
loop
cmp
mov
xchg
dec
out
and
gs
outsb
incb
scas
lret
andl
rorb
inc
adc
jbe
in
lods
cwtl
push
and
rcrb
in
pop
add
inc
jl
rolb
sti
addr16
sti
adc
sahf
mov
int3
enter
mov
xor
repnz
les
mov
imul
add
adc
dec
pop
outsb
fildll
and
xchg
outsl
pop
xchg
pop
xchg
push
lds
test
inc
sub
xlat
mov
cmp
ficoms
rcll
sti
pop
fnstenv
mov
cmpsb
mov
cmp
push
faddp
test
out
or
add
mov
mov
mov
push
pusha
add
lds
add
mov
jb
mov
insl
fdivs
test
xchg
xchg
jo
imul
rcrl
jl
in
or
pop
mov
and
jmp
loop
std
cmpsl
xchg
push
or
mov
or
xor
adc
push
push
lret
mov
mov
mov
or
jle
jae
sbb
jne
push
ds
sbb
push
add
dec
clc
fcomps
ss
inc
roll
cmp
push
and
imul
lock
insb
mov
xchg
xor
cmp
or
cmpsb
daa
sbb
pop
loopne
sbb
adc
out
push
and
pop
cli
mov
mov
es
lret
aam
jecxz
dec
mov
push
sub
aaa
mov
push
jle
dec
inc
cmpsb
imul
xor
sti
inc
jno
mov
dec
loopne
test
aas
cmpb
xchg
sbb
js
xor
xor
sbb
stos
xchg
add
and
jae
sbb
sbb
adc
dec
add
xchg
pushf
daa
xchg
jnp
mov
xor
repz
mov
add
lods
fsub
stc
aas
ds
ds
mov
jns
adc
xor
mov
rorb
stc
push
out
and
jg
mov
fcomi
sbb
iret
push
inc
jmp
call
push
fscale
push
sbbl
pop
inc
cli
mov
jg
sub
add
mov
xor
pop
jo
mov
cmp
rcll
jnp
xchg
xchg
sub
sbb
ds
sub
push
push
push
fucomip
popa
adc
imul
inc
xchg
xor
cmp
sbb
icebp
popa
lret
shlb
cmp
mov
ss
enter
data16
adc
adc
xchg
dec
outsb
ss
stos
dec
lods
jbe
add
sahf
sub
xor
dec
pop
into
adc
loopne
subb
in
xor
mov
insl
into
pop
popf
ret
pop
sti
stos
sub
mov
idivb
cli
mov
jg
lods
test
shl
jns
fiadds
push
push
out
dec
mov
insb
and
mov
in
sahf
mov
xchg
scas
orl
push
std
jo
inc
add
cmp
sahf
mov
and
in
mov
pop
repnz
insl
lock
shrb
leave
ret
dec
arpl
adcl
mov
xor
adc
fidivrl
mov
xor
cwtl
inc
push
ljmp
pop
xor
ret
add
jo
or
and
arpl
mov
movsl
lcall
dec
pop
or
push
add
icebp
lods
insb
stc
stc
pop
fwait
mov
jmp
arpl
and
les
call
icebp
adc
loope
mov
or
cltd
sub
xchg
orb
jns
hlt
jbe
sbb
lret
pop
lea
pop
pop
jmp
mov
aad
add
adc
push
mov
jmp
xchg
dec
js
dec
in
js
cmpsb
std
pusha
arpl
int3
cmp
lahf
push
popf
push
or
sbb
lods
push
xor
add
inc
data16
jb
fnstsw
into
loope
xlat
and
add
bound
and
test
sbb
push
addr16
pushf
xor
pop
add
fs
js
icebp
int3
mov
xchg
cs
addr16
int
fildl
push
bound
xchg
imul
pop
inc
mov
and
adc
mov
fwait
mov
into
lea
adc
lods
mov
rolb
mov
test
incb
cmc
adc
stc
fldl
loope
mov
dec
pop
hlt
add
sti
add
pop
out
jl
mov
push
mov
ffreep
jecxz
and
out
jl
out
mov
mov
mov
mov
mov
es
cmp
mov
mov
pop
lods
xchg
icebp
stos
adc
cmp
scas
divb
and
xchg
mov
push
cmp
lea
inc
les
bnd
orl
nop
scas
fwait
jb
std
fidivrl
jmp
icebp
dec
pusha
inc
dec
push
xchg
hlt
and
icebp
shrl
cwtl
fldenv
lock
cmp
int3
lcall
ljmp
xor
cmp
mov
pop
popf
cmpsl
add
mov
jl
stos
cli
iret
std
jo
std
fstpt
xchg
adc
xor
xorl
cmp
push
loop
mov
sub
in
movsb
and
mov
xchg
mov
cmp
les
ret
push
pushf
jecxz
sti
or
xchg
xor
adc
jmp
xorb
jns
dec
int3
aaa
sbb
lock
je
jecxz
roll
or
mov
push
push
ret
and
cmp
push
jge
sbb
add
xlat
lods
mov
rorl
int
cmp
xor
hlt
pop
cmpl
insb
mov
dec
cmp
outsl
sbb
mov
loop
sub
or
sbb
add
sbb
dec
out
push
xor
dec
std
inc
loope
in
mov
xor
and
test
xchg
inc
adc
lret
cmp
cpuid
lea
add
rcr
popa
mov
push
cli
sub
cmpsl
inc
daa
in
pop
popl
xor
imul
mov
dec
cmpb
or
push
outsb
mov
pusha
scas
push
bound
icebp
lods
data16
aam
mov
cli
push
dec
or
xchg
and
hlt
out
jno
bound
es
push
clc
or
sub
inc
leave
out
iret
jnp
sbb
adc
dec
ret
and
out
jnp
xlat
les
das
dec
mov
lods
inc
cmp
jg
mov
lods
adc
fcoml
add
test
ror
cli
jl
cmp
jle
test
fsubl
mov
dec
mov
inc
orl
mov
cmp
or
pop
aam
push
xchg
mov
mov
sarl
mov
sbb
hlt
insl
loop
gs
xchg
xor
ljmp
jmp
xor
repnz
pop
adc
inc
ds
mov
xchg
push
jne
pop
enter
pusha
mov
repnz
cmpsb
pop
jbe
scas
push
and
or
dec
stc
push
mov
push
xor
xchg
xchg
jecxz
loop
mov
ficompl
or
push
fcompl
lret
repz
dec
les
out
and
add
sti
cmp
divl
pop
mov
lret
sub
pop
sub
dec
dec
cltd
mov
add
imul
mov
lods
decb
push
adc
jmp
ret
sub
enter
push
icebp
mov
cwtl
pop
cmp
out
ret
jecxz
ljmp
repnz
adc
inc
repz
les
pop
sub
sub
mov
jae
jl
bound
out
jecxz
mov
mov
jns
add
pop
mov
sbb
sub
and
adc
fwait
sub
or
xchg
dec
xchg
les
or
xchg
adc
ljmp
mov
push
in
jg
orb
pop
mov
pop
imul
add
mov
pop
adc
jp
mov
out
leave
sbb
aad
pop
sbb
daa
pop
testb
cmpsb
mov
pushl
jno
ret
inc
aad
xchg
in
mov
aad
mov
andb
fnstsw
or
inc
pop
xchg
mov
movsb
nop
mov
inc
cmp
inc
push
mov
push
nop
dec
jb
hlt
xchg
outsb
mov
lods
loope
loope
pop
and
int
cmpsl
int
fcmovnu
adc
and
fs
sub
shrl
pop
pop
adc
mov
mov
add
ret
mov
cmpsl
stos
push
mov
cs
stc
jmp
aaa
jo
xchg
loop
and
mov
imul
jmp
scas
les
mov
and
cmp
jne
cmp
inc
pop
inc
mov
xlat
cmp
mov
pop
jnp
xor
cmp
cmp
daa
adc
sub
jbe
fwait
inc
subps
inc
icebp
dec
pusha
in
in
clc
mov
popf
mov
fisttpll
int
jno
bound
sbb
jae
fnstcw
adc
cmpsl
push
inc
xor
xor
test
cmp
inc
fucomip
and
xchg
bound
xchg
push
fisttpl
or
pop
std
fs
mov
push
mov
jo
mov
clc
mov
loop
test
out
jp
stos
pop
pop
lcall
and
aad
and
call
enter
mov
inc
cmpsb
clc
push
arpl
bound
cwtl
push
mov
jbe
mov
arpl
push
jge
ljmp
arpl
in
lds
rcrb
cmpsb
test
sub
mov
imul
les
js
in
add
add
or
mov
cmc
push
jmp
aas
mov
push
push
add
out
daa
mov
sub
jnp
fidivrl
bound
rcll
dec
sub
jge
mov
sub
mov
fmuls
jbe
leave
fwait
adc
pop
dec
xchg
out
jg
cmpsb
jmp
gs
mov
jns
push
fnstcw
outsb
out
loope
call
mov
fsubs
stc
sahf
xor
mov
sahf
jp
jae
push
mov
xor
outsb
lret
add
es
aam
xchg
add
test
dec
ret
nop
in
aas
cmpsb
add
dec
leave
insl
ret
cmp
jle
mov
pop
ds
push
inc
sbb
sahf
add
sahf
or
add
adc
enter
mov
inc
xor
mov
out
sub
jmp
ja
and
mov
pop
mov
push
push
push
jl
mov
lret
mov
out
ljmp
jmp
mov
das
fidivrl
inc
jne
ljmp
loopne
sub
out
push
jae
mov
sbb
ret
jns
dec
mov
test
xchg
sbb
mov
inc
sti
mov
insb
outsl
and
inc
inc
adc
orb
xchg
lds
cld
inc
sbb
mov
jb
pop
dec
xor
leave
jmp
out
shlb
je
xor
push
popa
mov
push
hlt
cmpsl
arpl
les
and
shlb
imul
xchg
std
in
ret
or
popf
jg
nop
jecxz
push
jne
cmp
rcll
jnp
in
insb
sbb
das
ja
out
pop
pushf
sbb
cs
or
or
xchg
stos
or
loope
push
inc
jnp
cld
jns
mov
jae
mov
dec
cs
xlat
and
sbb
rdpmc
data16
fs
test
gs
push
data16
mov
insb
xchg
fldl
lret
push
outsb
js
push
sbb
inc
popf
loopne
pop
or
lods
push
mov
xor
inc
pop
iret
inc
xchg
loope
leave
sub
fisttpl
sub
or
cs
into
cmp
testb
popa
cs
or
jp
mov
rcll
leave
movsb
jb
shr
xor
mov
outsb
push
dec
lds
pop
push
pop
jnp
loope
mov
int3
xchg
push
jnp
sub
jnp
fwait
sub
or
aas
xchg
cmpsl
loope
or
incl
stc
inc
inc
adc
stos
mov
mov
jns
adc
scas
add
js
jmp
sbbb
jb
loopne
jg,pt
addr16
dec
mov
add
xchg
adc
mov
sub
pushf
out
neg
jp
mov
shll
rcrl
sar
leave
fdivrl
cltd
orb
mov
inc
inc
std
jae
pop
arpl
mov
sub
cmp
or
and
sbb
movsl
push
in
cmp
xorl
insb
int
cwtl
mov
cmpsb
hlt
dec
in
jp
and
pushf
dec
dec
pop
lret
push
std
adc
test
push
cmp
cwtl
fst
pop
xor
push
xor
adc
insl
cmpsl
sbb
push
sub
loopne
scas
jle
shlb
into
into
mov
push
sbb
sub
add
mov
sti
leave
cli
insl
jb
add
and
adc
imul
sti
sbb
and
sub
lret
imul
fmull
sub
leave
outsl
add
dec
inc
sarb
jl
or
and
sbb
pop
adc
jge
fstl
je
test
mov
jns
test
in
mov
add
push
pusha
sub
pop
pop
or
test
or
push
jecxz
inc
cmp
adc
xchg
and
push
mov
dec
mov
int3
subl
cli
sbb
push
add
xchg
adc
sti
ror
sbb
testb
xchg
imul
mov
and
jno
inc
mov
lea
inc
cltd
iret
pop
jo
hlt
pushl
gs
movsb
jae
outsl
movsb
out
jmp
hlt
add
mov
stc
xor
mov
into
xchg
xchg
in
pop
sub
cmpsl
cltd
cmc
aaa
jmp
add
or
mov
and
shrl
and
loop
adc
dec
jmp
aad
fildl
push
xchg
outsb
outsb
or
ss
jo
cltd
inc
push
dec
mov
fistl
xlat
pop
call
rorb
test
mov
inc
insb
mov
mov
icebp
add
xor
inc
shll
mov
add
mov
and
pop
cmp
mov
jle
xor
rorb
gs
repz
cmpsb
stos
lcall
push
insl
jge
add
in
cmp
jo
lea
inc
dec
ret
cmp
lods
push
pusha
jbe
mov
pop
push
std
testb
xor
push
pusha
nop
lods
data16
cli
cmp
cltd
pop
vcomiss
and
insl
jnp
mov
mov
cltd
jmp
sub
imul
adc
xchg
mov
push
adcb
push
sbb
icebp
fnstcw
sbb
pushf
out
std
cmp
mov
push
add
push
add
mov
dec
mov
daa
mov
dec
push
cmpsb
adc
or
out
pop
mov
or
dec
jno
inc
pop
mov
mov
data16
out
push
cmp
cltd
fwait
xor
adc
xchg
cmp
lea
rorb
jecxz
cmp
lcall
push
inc
repnz
out
das
movsl
mov
and
xchg
mov
pop
dec
fidivl
clc
insb
push
ficompl
mov
sti
addl
dec
sbbl
inc
fwait
mov
mov
sub
outsl
mov
sbbb
insl
mov
js
insl
push
mov
std
inc
jp
mov
dec
mov
mov
jecxz
and
jge
pop
xor
and
lcall
fistl
enter
mov
jns
shr
fsubrl
xchg
cmpsl
xlat
push
mov
imul
arpl
and
dec
pushf
mov
push
pop
mov
popf
xor
loop
mov
lds
stc
mov
std
xor
insb
aam
out
stc
faddl
into
mov
outsb
fbstp
shll
pop
clc
iret
aam
movb
iret
push
mov
je
frstor
sti
ret
lea
adc
aas
and
sbb
xchg
adc
scas
loope
mov
jge
orb
fs
mov
movsb
rolb
inc
lea
stc
arpl
xor
jae,pt
negl
mov
push
lods
mov
call
dec
lret
arpl
add
in
imul
aaa
sti
fs
xorl
mov
dec
inc
dec
aam
push
stos
testb
aas
es
popa
adc
mov
mov
sbb
and
or
mov
pop
add
add
or
andl
nop
xor
insl
scas
inc
or
and
or
add
inc
filds
push
jp
or
mov
push
push
arpl
rol
fsts
nop
andl
adc
jmp
cmp
or
js
mov
xor
insb
push
and
jl
daa
inc
mov
mov
and
dec
inc
dec
or
sbb
mov
mov
out
mov
sub
ret
pushf
jmp
xor
cmp
lock
hlt
mov
and
pop
push
or
xchg
cld
imul
ljmp
xorl
sub
loopnew
adc
bound
clc
push
inc
shld
test
or
fadd
cmc
pop
or
out
add
dec
xlat
out
sbb
mov
xchg
xchg
mov
adc
jne
in
les
dec
clc
lret
fwait
mov
dec
fdivrp
mov
mov
les
mov
fadds
int
testl
pushf
sub
lahf
lret
sub
cmp
push
pop
push
jns
jne
sbb
add
dec
dec
outsl
imul
inc
lock
lea
adc
cld
loope
std
and
mov
js
pop
ror
and
or
xchg
pushf
fcomps
push
imul
or
daa
loop
popf
movq
adc
inc
inc
std
sub
mov
jnp
shrl
in
shl
icebp
aad
mov
inc
xor
push
inc
sarl
cmc
mov
jae
adc
lods
add
lock
in
jns
std
sbb
mov
dec
loopne
mov
out
popa
es
test
arpl
mov
fcos
sub
hlt
call
imul
sbb
cmpsl
int
or
pop
pusha
in
lock
jmp
push
jb
insl
sub
mov
mov
mov
adc
xchg
xchg
push
lahf
outsb
js
in
adc
cltd
into
mov
push
imul
push
hlt
xor
into
mov
out
subb
xchg
mov
pop
das
repnz
inc
mov
sbb
or
js
popf
mov
lods
or
aad
cmp
sbb
or
fdiv
mov
mov
mov
in
popf
jnp
mov
test
xor
sub
shlb
enter
cmp
daa
lea
adc
aas
pop
aad
outsb
push
mov
stc
jecxz
sub
lcall
mov
popf
bound
push
test
jno
adc
out
mov
addr16
int3
stos
xchg
dec
jle
xchg
ret
jecxz
shll
add
in
and
jl
adcl
test
mov
mov
inc
xchg
dec
mov
fcoms
es
cwtl
in
xor
sbb
jp
inc
call
in
ljmp
mov
or
ds
stc
mov
push
xor
cmp
xchg
mov
jl
sub
stos
and
mov
loop
mov
adcb
repnz
inc
movsl
in
in
push
and
xorl
mov
sbb
mov
dec
mov
je
leave
mov
jae
popf
xchg
aas
cmpsb
adc
and
mov
clc
cmp
ret
leave
roll
adcl
dec
jge
popa
jp
sbb
sub
push
jmp
dec
or
inc
shr
inc
pop
bound
ljmp
or
add
cli
lcall
cmp
ret
out
fnstcw
sub
inc
jl
js
pusha
inc
xchg
call
cli
pop
dec
stc
nop
lock
mov
sub
bnd
sbb
sbb
fisttpl
inc
into
add
cwtl
xor
push
inc
xchg
nop
fiadds
xor
mov
mov
push
out
mov
mov
push
mov
ficomps
and
inc
pop
push
inc
push
lock
dec
jg
lcall
mov
jne
insl
push
xor
das
outsl
dec
sub
fcomip
test
add
pop
cmp
xchg
cmp
jl
mov
loopne
add
adc
repz
sub
pop
dec
movl
fadds
pop
mov
xchg
adc
jno
cmp
outsl
jno
cmc
mov
sbb
sub
cmp
mov
in
fldenv
xchg
jl
push
sub
pop
loope
pop
out
inc
cli
and
xchg
xchg
or
in
xor
pushf
mov
lret
xchg
adc
xchg
xor
into
aas
pop
fisubl
push
enter
sbb
subb
mov
add
out
add
xor
mov
test
xor
movsb
xor
jge
mov
xlat
or
mov
cltd
sti
call
mov
push
test
add
dec
xchg
cmc
ja
repnz
movsb
popa
sarb
lea
adc
push
mov
add
sbbb
lock
mov
dec
das
sub
movsb
pop
mov
or
or
xor
xorb
int3
pusha
sahf
ret
aas
fdivs
mov
lds
and
jl
out
add
imul
inc
jecxz
pusha
mov
mov
mov
fcompl
xchg
xchg
sub
mov
dec
add
adc
push
add
repnz
mov
pop
push
int
jbe,pn
xchg
cmp
xor
add
ss
insl
pop
and
mov
mov
cld
into
jecxz
mov
cs
pop
mov
addb
add
and
stos
mov
mov
mov
dec
inc
mov
mov
out
sbb
cwtl
jb
pop
clc
sbb
sahf
gs
out
pop
fisubrs
ljmp
jl
ljmp
enter
mov
idivb
mov
popf
xor
pop
cmp
and
sti
int
adc
sub
decb
jns
movsl
leave
pop
clc
pop
xchg
mov
mov
inc
adc
inc
mov
insb
rorl
push
inc
sub
pop
pop
cwtl
sbb
sub
popa
test
pop
mov
popa
ret
sbb
sti
pop
test
mov
or
fisubrl
adc
mov
icebp
xchg
mov
add
mov
iret
cs
cmpxchg
jle
out
mov
push
jl
mov
fdivl
mov
lods
fadds
sub
inc
lret
ja
mov
inc
je
pop
rclb
add
dec
lods
push
in
mov
xchg
insb
sbb
rcrl
je
daa
xor
fiaddl
cld
push
inc
shlb
mov
sarl
popf
jmp
or
stos
mov
out
pop
fistps
push
jb
ror
sbb
fadds
sbb
mov
pop
rclb
mov
popa
stos
or
mov
cs
popl
cmp
mov
mov
into
ret
clc
mov
lods
in
fidivs
sub
mov
std
insb
int
dec
pop
lret
sbb
push
push
inc
int3
rcl
push
scas
iret
cmp
or
adc
mov
dec
cmp
std
push
inc
dec
js
jl
pmaxub
lock
dec
ret
sub
jmp
imul
cmp
aaa
jg
out
sub
or
push
cli
xchg
xor
test
fcmovu
in
cmp
aam
lret
in
push
adc
jae
ja
scas
lahf
mov
inc
es
subl
nop
mov
subb
xchg
push
cmp
xor
jae
lds
mov
leave
idivl
dec
jno
push
movsl
sub
ljmp
mov
rorl
addr16
or
mov
fwait
out
lds
xlat
stc
lret
pusha
cmp
das
xor
mov
subl
sbb
add
xchg
adc
pop
and
fs
mov
mov
scas
enter
inc
ret
stos
ljmp
mov
xchg
cmp
rolb
fidivrl
test
mov
fcoml
dec
insb
xor
pop
scas
aas
xlat
mov
rcrl
and
dec
imul
stc
dec
test
or
ret
xlat
fldt
iret
gs
dec
repz
orl
imul
inc
pushl
adc
stos
jl
push
sbb
stos
into
add
int
push
rorb
in
add
add
xchg
push
push
loope
push
nop
ja
stc
adc
loope
push
xor
rolb
pop
mov
sbb
mov
aaa
mov
pop
cs
aas
lret
mov
loope
mov
cld
int3
loop
dec
ds
jns
sbb
and
imul
pop
scas
loop
stc
decb
imul
xor
or
jg
inc
or
mov
jbe
imul
in
in
sub
or
and
mov
xchg
and
lds
cwtl
leave
cmp
insl
jp
cmc
fs
pusha
nop
mov
mov
jmp
sub
das
add
mov
lret
adc
mov
jo
lods
adc
aaa
movsb
pusha
cmp
popa
sbb
jno
push
pop
out
sub
std
mov
out
cmp
jecxz
cli
in
insl
dec
pop
loop
mov
minps
icebp
shll
inc
sbbb
mov
mov
dec
mov
pop
inc
out
addr16
push
push
fstpl
insb
out
lods
je
xor
test
pop
inc
iret
inc
popf
inc
jbe
jne
out
adc
jp
xchg
call
mov
mov
cmp
mov
mov
cmp
loope
push
in
sub
jbe
adc
adc
jnp
lds
daa
daa
scas
cmp
xorl
aam
or
jno
xor
xchg
pusha
es
pop
rcll
pushf
adc
dec
scas
xchg
and
push
jno
mov
fistps
adc
fistl
sbb
xor
cmp
push
jne
sub
dec
pop
mov
cmc
ror
pop
xchg
pop
pminsw
fsubs
pop
pop
xor
outsl
cltd
pusha
push
sar
xchg
je
js
inc
loopne
mov
mov
aam
push
jbe
call
out
aam
movsb
test
cld
mov
add
add
push
pop
or
aas
std
insb
fisubrs
sahf
add
jne
jl
mov
sar
into
adc
sub
or
aaa
lods
out
int
jp
rolb
push
xchg
cmp
jns
xchg
insl
xchg
lret
aam
mov
fcomps
adc
adc
mov
mov
pusha
sbb
dec
fwait
aad
sub
pop
test
js
nop
and
xor
sub
std
and
andb
mov
into
push
scas
imul
pop
imul
xor
xor
mov
cmp
ss
jns
pop
rcrl
stos
push
mov
sahf
sahf
pusha
ret
test
and
lret
jge
pop
loopne
xchg
sub
jae
das
imul
mov
addr16
sub
or
push
in
adc
and
scas
outsb
fisubrs
jb
mov
xchg
test
js
adcl
sub
push
aad
scas
in
sbb
sbb
mov
add
das
aaa
or
jne
xchg
lods
xchg
jne
out
fcompl
lahf
scas
outsl
in
aaa
popa
and
rolb
cmp
loope
xchg
pop
and
sti
pop
inc
in
push
push
sub
aad
call
jl
inc
sub
or
sub
adcl
sub
out
push
mov
in
pcmpeqb
loopne
cvttps2pi
sbbl
push
mov
inc
movsb
ja
jecxz
repz
xchg
leave
sbb
fst
adc
lcall
sub
xchg
mov
sti
inc
aad
leave
xchg
in
xchg
sti
mov
mov
stos
dec
jecxz
fnstenv
insl
xor
xchg
xchg
pop
inc
xchg
inc
gs
add
fidivrs
std
push
xchg
push
cltd
fmull
and
pop
jge
dec
mov
jne
sub
mov
jo
xchg
call
dec
loope
jp
sub
dec
and
xor
cmp
stos
in
dec
jb
test
push
scas
sbbl
push
mov
fcmovnu
aad
ss
lods
std
rorl
push
data16
cmpsl
push
jecxz
inc
into
mov
push
cmp
mov
cmp
mov
es
jge
call
mov
xor
push
notb
jo
int
inc
mov
fbld
mov
inc
idivl
call
daa
fcmovb
cli
inc
pop
mov
jle
arpl
lret
jns
imul
cmpsb
pop
gs
push
push
ret
mov
sbb
pop
push
loopne
adc
inc
adc
pop
orb
cmp
jo
int
mov
mov
mov
into
xor
lea
out
cmp
bnd
mov
int
aaa
dec
cmp
mov
or
bound
sub
jl
sahf
mov
stos
ss
daa
dec
loop
dec
jns
lcall
jecxz
call
cmpsb
pop
insb
pop
pop
mull
pusha
pop
push
imul
mov
repnz
repz
bound
or
lahf
lods
lret
dec
jns
mov
leave
loope
lea
cmp
push
cs
clc
dec
jecxz
fimuls
dec
out
lds
add
mov
fadd
xchg
fdivrl
frstor
xchg
add
inc
mov
jbe
loopne
mov
mov
mov
enter
repnz
dec
call
inc
jmp
and
push
pop
pop
xchg
push
insb
and
adc
fwait
or
jecxz
dec
xchg
inc
out
hlt
popf
test
outsl
jmp
sub
mov
popa
push
dec
mov
fistl
dec
jae
mov
add
inc
xlat
push
out
jl
adc
stos
aam
into
aas
std
sub
add
stc
lea
cmpsl
inc
clc
xchg
fwait
sahf
outsl
fs
xchg
pop
outsb
lret
or
inc
js
filds
add
push
ds
into
clc
inc
cmp
loope
sub
dec
mov
fbld
mull
pop
cmp
ret
stos
ljmp
mov
scas
sbb
rcll
je
andb
inc
mov
jg
pop
stos
ret
fdivs
jne
push
jbe
leave
mov
aam
add
es
mov
in
dec
cmp
sysexit
in
sahf
or
js
popf
mulb
stos
sti
std
mov
mov
xorb
xor
addr16
mov
push
inc
test
jae
adc
sbb
dec
dec
push
pop
dec
dec
add
xor
dec
sti
repz
dec
pop
push
out
fiadds
sbb
xor
adc
inc
out
movsb
es
arpl
in
mov
sti
mov
pop
aaa
and
jb
or
jae
es
ja
pop
push
adc
in
scas
scas
popa
push
add
mov
sbb
push
insb
mov
ljmp
sub
or
movsb
adc
push
mov
and
mov
aam
mov
imul
mov
shrb
cld
test
aad
mov
ret
loop
inc
cmp
jb
dec
mov
xchg
jp
cmp
not
iret
iret
xor
nop
dec
inc
outsl
adc
mov
arpl
stc
jns
jg
xchg
test
scas
out
mov
cmc
mov
and
mov
dec
sbb
dec
shrb
in
dec
mov
jae
rol
sub
xchg
xchg
sbb
xchg
adc
push
lret
vcvtsi2ss
pushf
mov
lock
fwait
xchg
pop
in
test
mov
sbb
push
je
sub
mov
rorl
xchg
cmp
pop
lcall
jl
xchg
sub
cmc
mov
fisubs
test
adc
adc
jnp
mov
mov
divl
push
mov
jbe
ficompl
repz
mov
data16
jb
dec
pop
sub
mov
jns
int
or
mov
sbb
push
icebp
jmp
and
push
sti
ret
and
dec
lea
xlat
lock
jb
nop
push
movlps
lods
push
dec
jg
push
pushf
and
lods
adc
lods
push
push
jae
sahf
sbb
imull
cld
jecxz
and
insl
xchg
fistpl
push
sub
or
stc
or
jecxz
je
mov
rolb
ss
sti
or
jae
mov
sbb
out
call
pop
mov
pusha
xchg
pop
lds
lahf
or
cmp
out
mov
sbb
frstor
lods
pop
mov
dec
cmp
cwtl
xchg
dec
cwtl
push
or
adc
inc
adc
movsb
test
add
inc
fs
dec
jmp
pop
cwtl
jg
jecxz,pn
clc
ljmp
faddp
xchg
sti
orb
adc
das
cwtl
test
mov
dec
addr16
xorl
out
inc
jmp
es
mov
test
movl
enter
inc
jp
mov
add
inc
mov
mov
xrelease
cmpsl
fstl
jae
mov
or
fnstcw
ja
sarb
sar
dec
xchg
nop
popf
mov
inc
xlat
mov
xchg
movlps
je,pt
in
movsl
mov
adc
out
arpl
cmp
imul
insl
cmp
mov
push
jle
or
fcmovne
mov
rcr
sub
push
mov
pop
lcall
aas
adc
xchg
jnp
jae
scas
or
int3
std
sub
orl
jbe
add
xor
xchg
lret
pop
sti
sbb
push
repnz
stos
push
jl
pop
cmpsl
xor
dec
loopne
cmp
jmp
lea
js
fnstenv
adc
insb
movsb
adc
or
or
mov
adc
jecxz
out
jb
pop
mov
cmp
aaa
inc
icebp
data16
and
aam
pop
pop
xchg
int3
adc
and
mov
loopne
push
inc
push
jmp
sti
mov
scas
mull
fs
in
mov
stos
aam
das
xchg
push
sbb
frstor
fsubp
in
mov
jae
or
lds
xchg
sub
cmp
leave
icebp
icebp
aam
dec
jmp
inc
aad
mov
mov
jno
push
fsubr
mov
mov
push
xchg
sub
and
cmp
xchg
cmp
in
jb
stos
lock
and
xlat
shl
push
push
movsl
loopne
aas
sbb
ljmp
dec
cltd
jle
cmp
mov
mov
daa
mov
adc
push
loope
sub
ja
fwait
inc
inc
sbb
push
adc
icebp
push
dec
adc
ret
add
xor
jnp
test
outsb
jnp,pn
inc
jmp
cmpsl
jae
in
call
inc
jmp
outsl
adc
xchg
inc
aam
dec
movsl
aas
std
lock
pop
push
ret
lcall
and
in
cmp
psubsw
imul
inc
stos
xchg
cmp
loop
add
ss
push
and
jmp
pop
ds
jmp
aad
push
jnp
push
jmp
or
jnp
in
mov
sub
xor
jbe
movsb
inc
pop
sub
ficomps
add
lcall
leave
cld
loopne
popf
bound
lods
pop
dec
daa
mul
or
and
lods
rorl
fnsave
bound
inc
jle
push
sub
lahf
mov
cmp
xchg
adc
adc
mov
xor
xor
js
mov
lret
sti
push
push
or
push
mov
and
add
adc
popf
push
gs
jmp
sub
into
fimull
mov
lock
nopl
aaa
in
dec
sbb
push
xor
scas
arpl
mov
jmp
sub
push
test
aaa
das
mov
add
test
add
push
cmp
fwait
jnp
outsl
jnp
jnp
cmp
and
loopne
inc
ljmp
stos
ss
sub
or
or
sub
aad
movsl
dec
and
xchg
inc
lret
imull
mov
lds
arpl
lock
cmp
mov
imulb
jecxz
roll
mov
ds
or
fildl
leave
fwait
mov
jle
adc
rcrl
cmp
sahf
or
in
clc
pop
hlt
dec
std
add
and
xchg
out
jne
pusha
xchg
lret
lcall
int3
mov
mov
popl
dec
inc
push
bound
and
push
xchg
sti
mov
xor
lahf
add
aas
mov
ljmp
cmpsb
repz
ja
and
jl
or
test
sub
add
inc
push
int3
sarb
cmp
xchg
lods
pop
inc
xor
jo
fwait
push
iret
es
lock
xorl
subb
jbe
lahf
dec
mov
xlat
or
mov
out
push
cld
inc
push
dec
or
jmp
es
mov
das
dec
add
cltd
pop
stc
mov
pop
jge
stos
push
mov
aas
mov
clc
mov
jae
cmp
add
jno
add
stos
push
arpl
inc
mov
and
imul
call
mov
mov
cs
and
push
lods
ficoms
adc
cmp
sub
je
xor
add
and
js
loop
outsb
into
cmc
popa
push
jl
inc
aas
out
sub
xchg
push
pop
shll
les
in
sub
shrl
mov
sbb
mov
pushf
mov
bound
mul
dec
stos
scas
dec
add
jl
cmpsb
jbe
adc
mov
dec
push
jl
pop
jl
pop
movsl
fwait
xchg
lcall
or
mov
idivl
sarb
mov
or
cld
or
cmp
testl
add
xor
dec
lcall
or
lea
and
jmp
mov
fmulp
cli
sub
sub
lcall
ret
movsl
push
mov
pop
jg
adc
or
pop
out
inc
sbb
loop
out
dec
mov
push
inc
mov
inc
jo
pushl
and
stc
inc
mov
sub
aad
test
pushf
in
sbb
mov
sti
jmp
outsb
imul
fimuls
sub
jae
sbb
ja
inc
mov
clc
imul
js
clc
pop
insb
lret
push
rolb
fstps
imul
mov
fdivrp
fwait
cld
pop
es
scas
fwait
and
mov
in
sub
pop
push
mull
fs
inc
dec
rol
sbb
or
cmp
mov
nop
dec
bound
jno
mov
and
dec
rcr
arpl
jne
add
xchg
mov
iret
imul
cmpsb
pop
push
enter
lea
dec
xchg
fistpl
or
bound
mov
push
mov
lods
xor
loopne
inc
xor
arpl
mov
enter
or
xchg
xchg
fstpl
mov
jb
roll
pop
cmp
hlt
add
push
add
mov
test
dec
fcmovnu
lret
into
lret
dec
fcmovnu
adc
rolb
jp
scas
scas
mov
mov
or
call
mov
ficompl
in
dec
mov
test
out
dec
stc
push
mov
adc
loope
rcrl
nop
mov
mov
mov
sbb
xchg
ss
mov
stos
enter
mov
ja
dec
xor
mov
mov
pop
xor
push
in
jmp
loopne
js
or
sbb
mov
and
sbb
jb
sub
iret
in
cltd
pop
sahf
and
repnz
sub
inc
out
outsl
adc
nop
test
pop
test
in
repz
jmp
pop
fwait
repz
lods
or
fsubl
fistps
gs
loopne
xchg
fistps
mull
xchg
mov
and
loop
stos
cltd
cmp
movsl
in
insl
push
je
in
pop
xor
movsl
and
sbb
mov
std
sub
aas
mov
mov
notl
mov
dec
lahf
add
rclb
push
push
push
push
hlt
adc
pop
dec
inc
inc
sbbl
sbb
sub
aad
jae
insb
xchg
mov
leave
aas
sahf
out
pop
lret
add
pop
add
roll
adc
pop
leave
add
add
shlb
mov
bound
inc
repz
cmp
push
xchg
ficompl
and
cs
xlat
imul
add
movb
jmp
dec
mov
jge
setno
push
jno
mov
xor
jnp
xchg
ror
aaa
stos
push
cmpsb
sbb
and
dec
out
push
aam
outsl
pop
mov
sarl
inc
cmpl
loopne
ja
xchg
sarl
mov
sub
and
jns
xchg
ret
enter
movsl
loope
or
sub
ds
dec
cmp
mov
xchg
scas
push
lods
mov
test
jae
add
in
shl
or
pop
insb
in
sahf
inc
int
jb
jne
sub
pop
inc
jne
into
dec
lods
out
lahf
test
insl
xchg
outsl
imul
lahf
jp
jns
nop
cltd
mov
loope
mov
inc
xchg
aam
push
jo
pop
sub
pop
cltd
mov
sub
xchg
sbb
mov
daa
jae
add
push
mov
mov
jnp
ja
lret
icebp
shrb
bound
lret
dec
je
add
cmpsb
jge
jge
mov
cli
jae
sbb
test
mov
push
jmp
pop
lods
imul
pop
repnz
loopew
into
or
fistps
pushf
into
and
sbb
in
jnp
ret
data16
aaa
fisttpll
lds
push
mov
lret
push
sbb
adc
insb
mov
lods
mov
hlt
in
daa
jmp
cmpsb
push
loop
dec
aam
or
inc
in
sub
push
sub
mov
sti
pushf
push
clc
jbe
mov
adc
jmp
outsb
mov
nop
ret
mov
int
and
in
sahf
mov
sbb
lret
sbb
sbb
in
jecxz
repz
rclb
or
pop
bound
dec
jg
test
pusha
add
iret
in
adc
std
push
jbe
jg
data16
lods
mov
jns
dec
gs
jo
fcoml
ljmp
dec
jecxz
jl
adc
push
fisubrs
rcrb
inc
into
push
and
loopne
subl
adc
add
jnp
jo,pn
pop
pusha
xor
jecxz
scas
mov
out
jle
pop
or
outsb
xor
test
dec
xchg
sub
push
fidivrl
mov
orb
pushf
cmpsb
xor
std
sbb
cli
ja
mov
rolb
jg
pop
movsl
cld
ss
ljmp
mov
test
lcall
sbb
les
xor
daa
sbb
repz
cmp
adc
xchg
push
jecxz
jle
jnp
xor
loope
jo
dec
xchg
xor
imul
shrb
push
cwtl
out
mov
xchg
inc
jne
fs
inc
nop
ss
xchg
in
or
ds
pop
jge
and
lcall
push
js
je
jp
mov
jl
pop
push
xchg
mov
sub
cmp
lods
les
adc
add
sbb
gs
in
push
cmp
pop
shlb
jb
fwait
xor
in
and
adc
cmp
adc
xor
jg
aas
or
mov
pop
jp
sahf
ja
or
and
or
jo
shr
mov
cmp
iret
subl
pushf
ljmp
sahf
push
loopne
shrb
ljmp
or
enter
jmp
mov
pop
les
mov
dec
ljmp
push
jo
lret
imul
xchg
daa
mov
rorb
outsb
mov
lahf
imul
test
mov
and
xor
lock
bound
cmp
dec
push
xor
xchg
mul
popa
addr16
mov
insb
inc
xor
or
popf
mov
mov
bound
jge
repnz
add
jp
ret
sub
into
jecxz
add
push
push
cmpsl
sbb
mov
popa
xchg
fdiv
repz
loope
xor
cli
je
les
icebp
mov
jbe
pop
pushf
inc
adc
mov
into
dec
mov
fstp
push
sub
adc
nop
and
ss
inc
xchg
ret
movsb
dec
jno
cmpsl
dec
scas
addb
dec
mov
insb
push
adc
add
jbe
in
adc
push
into
inc
mov
test
mov
adc
idivl
sbb
mov
lods
sbb
xor
in
inc
sbb
pop
hlt
lds
stc
push
shll
mov
outsb
push
jg
mov
les
in
loop
out
sbb
xchg
cmp
pop
lock
xor
aad
decl
fsubs
adc
jae
push
popf
pop
xlat
jae
test
push
popf
in
dec
mov
orb
push
push
lret
test
mov
add
hlt
pop
in
mov
dec
sub
dec
push
shlb
lcall
pop
pushf
insb
rcr
lods
shlb
dec
movsb
pop
cli
inc
fldt
loop
mov
mov
insl
pushf
push
lds
das
outsb
pop
xor
sbb
testb
ficompl
inc
jne
push
cltd
in
sarl
lods
data16
sbb
push
mov
xor
cmp
cmp
and
daa
mov
mov
cld
in
pop
push
in
aad
mov
push
mov
sub
lahf
dec
pop
cmpsb
cmpsl
js
clc
jne
inc
pop
mov
sub
xchg
push
loope
pusha
adc
jnp
xchg
ss
lods
loope
xor
sbb
sbb
pop
sarb
mov
add
mov
adc
push
repz
in
arpl
cmp
xchg
push
in
mov
cmpb
aam
call
jb
push
push
aad
test
fdiv
mov
fildl
in
xor
inc
push
adc
xlat
or
mov
ljmp
scas
or
out
sub
and
cmpsb
pmaxsw
sti
mov
ds
dec
aad
dec
and
add
cmp
add
std
mov
jp
aaa
jb
enter
push
ds
add
pop
xor
pop
mov
pop
in
mov
push
ror
adc
out
mov
out
fucomp
jnp
mov
lret
sub
jno
jns
in
xor
ss
out
adc
faddl
xchg
dec
stos
push
xchg
and
sti
aas
inc
xchg
ss
mov
jae
cld
and
pusha
dec
pop
fmuls
and
outsb
inc
lock
jnp
lahf
inc
sub
jg
mov
pop
jae
jns
enter
xor
jl
rolb
in
xchg
aaa
inc
mov
push
xchg
jbe
lret
dec
ljmp
mov
pop
mov
daa
arpl
inc
pop
into
mov
stos
push
xchg
les
insl
je
push
jle
xchg
js
pop
in
sti
imul
push
fwait
xlat
fisubl
pushf
mov
mov
shrl
jge
lock
shll
test
stos
mov
cwtl
nop
dec
push
xchg
push
sub
sub
pop
push
pop
fimuls
dec
push
cli
adc
jp
pop
movsl
add
pop
arpl
sbb
mov
lret
cs
dec
mov
inc
pop
fistl
clc
mov
out
push
xchg
lods
push
xchg
testl
pop
adc
push
fstpl
inc
lahf
insl
mov
jle
and
decl
mov
sub
xchg
jno
ret
enter
xchg
adc
dec
sub
hlt
cli
jmp
in
mov
outsb
or
inc
out
iret
fbstp
and
out
mov
int
inc
aas
call
mov
call
addb
inc
bswap
jp
fnstsw
sbb
inc
push
test
ret
push
jge
std
lods
jnp
push
inc
sbb
fmull
and
xor
pop
jmp
push
je
cmc
push
cmp
jb
sub
pop
mov
addr16
sub
jns
cmpsl
test
shl
mov
adc
xchg
sub
mov
ficoml
insl
mov
xchg
xor
push
and
cmp
inc
push
or
push
lods
or
pop
hlt
or
cmp
idiv
ljmp
jbe
cmp
daa
repnz
adc
or
push
mov
mov
insl
imul
mov
les
insl
mov
mov
and
out
xlat
sub
xorb
inc
mov
test
cwtl
leave
sbb
call
ret
out
inc
or
lock
mov
sub
gs
pop
push
jmp
adc
mov
cmp
cli
mov
shll
sti
into
icebp
inc
js
mov
dec
xchg
es
xchg
xor
stc
rcr
dec
shrb
pop
mov
push
shrl
sub
mov
jg
js
ja
xchg
mov
xchg
push
sub
addr16
loop
mov
pop
pop
inc
pushf
not
add
or
and
je
sbb
pushf
cmp
jne
xchg
frstpm(287
dec
jecxz,pt
adc
push
lods
adc
bound
leave
mov
jno
lea
xchg
xor
jnp
mov
popf
fsubp
jp
xor
dec
pop
out
adc
add
xchg
movsb
rcll
jg
pusha
inc
adc
mov
and
ljmp
pop
push
daa
testl
enter
add
insl
scas
and
sub
aad
or
mov
add
out
add
jg
mov
rcl
rcll
popf
jne
lahf
mov
lcall
inc
shll
inc
pop
and
dec
xchg
mov
cltd
stos
test
in
or
sub
push
dec
fistpl
push
rcrl
xchg
shrd
inc
cli
cwtl
inc
stc
push
push
xor
and
xchg
push
idivl
cwtl
dec
xchg
pop
mov
mov
lcall
out
or
sbb
lret
add
cmp
push
fsubp
sbb
divl
and
les
insb
jbe
shrb
xchg
nop
into
sysexit
sarb
push
xchg
stos
je
leave
jg
psubb
call
cwtl
inc
xor
pop
xor
inc
gs
cltd
cmc
fimull
jmp
popa
icebp
test
cmp
mov
addr16
lea
loopne
popa
repz
lock
repnz
out
call
mov
std
pop
sub
inc
leave
sbb
xor
fwait
push
inc
inc
outsb
mov
push
xchg
cmp
cltd
pop
fsubl
cld
xor
cmp
movsb
cmpl
clc
sbb
jns
mov
dec
mov
jecxz
xor
inc
mov
daa
and
xor
mov
pop
inc
in
pop
mov
dec
xchg
or
out
xorl
call
gs
leave
negb
ficoml
and
sbb
and
add
mov
jmp
shlb
jecxz
dec
dec
push
int3
cld
addr16
mov
adc
stos
inc
dec
lret
lds
test
and
cmp
mov
outsl
inc
dec
shrb
inc
xor
cmp
mov
cli
jae
lods
bound
push
inc
push
pop
fs
sub
push
out
push
out
ds
stos
aad
andl
pop
inc
or
mov
sub
sub
inc
js
jl
add
sbb
stos
aas
mov
sbb
in
lds
jae
adc
push
testb
push
xchg
cs
sbb
sub
mov
jno
mov
cmp
shll
fcompl
mov
out
xchg
testb
xchg
xchg
mov
shll
mov
push
sahf
sbb
aaa
in
jmp
enter
sub
rdtsc
popaw
pop
sub
cmpsb
pop
icebp
and
in
dec
stos
jae
cmpb
cmpsb
shll
and
or
xor
out
int
subb
sti
sbb
mov
xorb
in
shl
js
or
push
sub
push
test
pop
push
lods
xor
fldenv
movsb
sbb
dec
push
push
ds
sub
das
xor
inc
popa
iret
add
sahf
or
mov
imul
jnp
lret
inc
add
add
jnp
pop
iret
out
adc
test
lods
fisubrl
shl
icebp
sbb
outsl
xchg
jecxz
lock
inc
mov
into
mov
fnstsw
dec
xor
outsb
pop
ret
test
push
dec
pop
mov
lret
jge
outsl
mov
xchg
pop
es
lea
push
jge
inc
sbb
out
ljmp
mov
adc
in
add
ds
mov
inc
and
cld
push
sub
ror
cmc
data16
sbb
sub
in
cmp
les
jne
pop
rolb
inc
mov
std
xchg
pop
testl
jns
pop
imul
cmpsb
lock
xchg
push
jmp
enter
adc
int
pop
pushf
xchg
pop
or
fsubs
push
adc
cmpsb
or
decb
loop
insl
mov
inc
push
icebp
cmpsl
pusha
pop
scas
or
sbb
daa
pop
outsb
fistpl
xchg
imul
out
shr
gs
xor
andl
sbb
loopne
repz
imul
xchg
xor
subb
xor
int
lds
jg
je
pop
inc
loopne
jns
sub
out
fistps
cwtl
xor
add
adc
rcrl
mov
outsb
or
or
out
sbb
hlt
pop
insl
movsl
ret
and
test
in
rcll
subl
in
insb
das
mov
or
sbb
stos
cmp
iret
ret
loop
inc
push
rcr
bound
int3
fadds
out
push
jns
rcll
lds
push
mov
xchg
and
cld
outsl
add
mov
or
jecxz
push
aam
loop
jl
pop
test
es
aam
cmp
test
dec
mov
js
mov
jns
sbb
mov
lret
leave
add
scas
push
mov
popa
inc
in
sbb
mov
mov
lahf
nop
in
mov
cmp
jae
cmpsl
dec
mov
sti
pusha
jno
das
xor
xchg
and
cmc
lods
pop
mov
scas
inc
add
iret
inc
loopne
sarb
ds
and
scas
pop
ret
cmpsl
or
jmp
push
sti
sbb
cli
bound
stos
cs
jmp
les
ret
aam
xor
leave
int
ljmp
xlat
call
test
xchg
scas
add
or
pushf
push
mov
lds
mov
stc
cmc
cmpsb
in
jno
add
hlt
fcomip
sbb
outsl
pop
push
outsl
repz
pop
fistpl
scas
push
push
hlt
push
repnz
sub
mov
or
movsl
sbb
add
pop
xchg
adc
sub
jmp
push
fildll
inc
cmpsb
adc
outsl
jmp
fwait
sti
pop
pushf
mov
adc
loop
adc
mov
pushw
mov
dec
stc
daa
sub
xor
xor
jle
data16
dec
xchg
stc
xlat
fisttps
repz
adc
push
sbb
scas
dec
int3
xor
loop
dec
sub
mov
fiaddl
aad
lods
adc
negl
stos
mov
pop
bound
push
xchg
shlb
cltd
insl
cmpsb
insb
aas
mov
test
inc
das
into
call
add
cmp
pop
addr16
mov
push
push
mov
mul
sbb
popf
mov
jb
ljmp
outsl
or
mov
mov
push
jae
adc
cmp
dec
cmpsb
das
xorb
inc
jns
jbe
scas
arpl
pop
jl
xorl
int3
fcompl
mov
stos
mov
inc
and
xchg
dec
js
inc
jecxz
vmovmskps
data16
pop
jbe
sub
leave
popa
addb
jp
ret
cmp
or
push
jae
and
mov
fwait
movsb
jle
in
xchg
cmpb
mov
stos
adc
lcall
fst
and
inc
jnp
je
lock
insl
cmp
jne
cmp
inc
jne
adc
iret
enter
lds
out
hlt
sub
adc
mov
std
je
inc
xor
imul
stos
roll
and
lret
jb
pop
cmp
das
leave
push
loopne
xchg
aam
jl
xchg
mov
scas
in
ret
sahf
mov
pop
dec
iret
lret
ljmp
add
ja
divb
aad
unpcklps
adc
stc
mov
out
cmpsb
cmp
sarb
rcr
pop
mov
inc
fimuls
jge
xchg
insb
mov
out
dec
sbb
pop
lret
ss
into
cmp
lds
ljmp
mov
popa
imul
xchg
sub
divb
pop
addr16
adc
push
je
repnz
sbb
add
add
popf
add
jle
push
mov
lock
xchg
mov
test
dec
es
push
sub
push
lret
inc
loopne,pt
xor
cli
sub
insl
dec
test
dec
cmp
into
mov
test
mov
inc
sub
jb
lods
sbb
test
insl
int3
mov
std
rorb
jle
hlt
sub
imul
lds
popa
sub
imul
sub
andl
pop
imul
xchg
ljmp
and
jle
cmp
cmpsb
cmpsb
push
push
mov
jb
dec
je
inc
psrad
inc
inc
and
sub
jae
mov
inc
cmpb
push
shll
inc
pop
inc
or
sarl
sti
out
xchg
out
jmp
popf
mov
shr
push
xchg
mov
test
shl
or
rorb
sbb
cmp
lds
repnz
das
popf
add
popa
add
xchg
sub
and
push
fldt
lea
scas
push
sbb
sti
cwtl
or
pusha
loope
movups
int
pop
mov
push
or
clc
cmc
push
cltd
scas
int
and
cmp
movsl
repz
mov
pcmpeqw
loope
mov
inc
sti
loop
addr16
inc
mov
call
cmc
xchg
adc
in
sbb
iret
add
movsl
dec
and
dec
xor
inc
fidivl
jnp
scas
inc
lea
mov
or
mov
ret
pop
imul
fildl
psubsw
cmp
dec
lahf
imull
add
popf
cmpsb
pop
dec
sub
add
gs
cmc
add
mov
dec
lock
cli
dec
in
testb
cmp
bnd
inc
pop
fnstsw
dec
sub
clc
mov
or
inc
lahf
scas
lcall
and
in
mov
daa
xchg
xchg
mov
pop
mov
int
mov
mov
pop
mov
xor
lods
repz
test
out
aam
lahf
add
pop
adc
imul
test
push
xchg
dec
das
cltd
decl
addb
mov
adc
call
loop
ja
sbb
mov
mov
mov
or
jle
aad
rcl
cltd
mov
js
ljmp
or
sub
dec
mov
or
fistpll
rcr
mov
and
sahf
mov
xor
aaa
mov
repz
jg
sahf
xchg
lahf
xor
cmp
in
shl
inc
int3
andb
sub
clc
push
sbb
push
sub
lcall
and
pushf
test
pop
inc
and
or
stos
xchg
push
xchg
xchg
cld
in
leave
fwait
lret
icebp
lods
es
xchg
dec
ja
mov
es
movsl
pop
aam
daa
ret
jo
dec
in
bound
dec
scas
nopl
andb
int
rcl
add
negl
xor
mov
push
pop
xor
loopne,pt
testl
nop
lods
arpl
jne
sub
cld
das
push
jge
into
xor
stc
outsl
adc
sub
mov
push
jmp
mov
ret
push
adc
mov
jmp
adc
cmp
enter
pop
mov
sbb
aam
or
mov
xlat
sub
jne
or
faddl
sbbl
cmpsb
test
sub
jmp
cs
stos
pop
test
and
lahf
paddq
mov
sahf
mov
jbe
js
dec
pop
mov
enter
outsb
fildll
jae
jno
ficompl
xchg
fwait
pop
das
mov
fwait
mov
loopne
daa
les
ljmp
add
popa
iret
inc
jmp
aad
out
dec
xorb
mov
xchg
fdivr
or
dec
jae
mov
mov
gs
hlt
mov
jo
sbb
dec
mov
jno
mov
out
cmpsb
cmp
lods
push
mov
or
rclb
imul
sub
dec
fldcw
addr16
call
mov
xchg
bound
cmc
jns
imul
cmpsb
inc
inc
loopne
aaa
dec
test
aaa
inc
push
cmp
fwait
pop
fidivs
icebp
jns
das
lods
adc
in
and
addr16
xchg
lds
or
pusha
jle
mov
insl
js
xchg
jecxz
divb
jmp
in
inc
inc
fs
xor
inc
daa
int3
inc
jno
imul
jnp
mov
insl
je
adc
shrl
add
sbb
jnp
std
pop
jmp
in
lds
inc
in
jge
int
pop
inc
jle
nop
ret
inc
add
pushl
decl
ficomps
fisubrl
sbb
in
and
inc
int
pop
dec
das
jno
inc
lea
mov
xchg
stos
and
stos
jno
and
loop
sbb
sub
mov
test
hlt
inc
mov
jg
in
ds
dec
out
std
sbb
lods
rcrb
jge
aas
lahf
cmp
pusha
add
push
lret
mov
std
adc
and
cmc
add
cltd
push
fs
enter
push
pop
js
jbe
sbb
mov
movsb
les
bound
pop
pop
jl
test
adc
push
cmpsl
mov
sub
sub
mov
insb
sub
lret
jp
xlat
inc
and
leave
and
push
fstl
mov
jmp
cmp
and
movsl
popa
lcall
dec
mov
stos
addb
inc
jne
xchg
outsb
sbb
cltd
mov
fbstp
addb
jns
sub
sub
xchg
xor
or
les
dec
addr16
push
jnp
dec
arpl
std
xorl
dec
jo
je
lcall
lds
into
js
ljmp
cli
jecxz
jmp
in
pop
incl
in
mov
dec
xchg
inc
lcall
mov
and
and
push
lds
aaa
sub
cli
mov
imul
mov
push
in
scas
std
shll
clc
lds
sub
sub
call
insb
enter
mov
pop
push
daa
test
js
push
jmp
das
inc
xor
leave
out
sahf
out
sbbl
inc
dec
xor
jae
mov
int
xchg
sub
or
xor
sub
push
movsb
repz
adc
divl
test
and
loopne
lcall
es
test
lods
sbb
fisttpll
out
push
pop
or
inc
arpl
push
pop
add
int
in
icebp
sti
aam
jg
and
pop
pop
mov
jo
jae
inc
and
xchg
fwait
xor
push
lret
push
push
out
sub
push
add
sbb
mov
add
cmpsl
fisttps
jg
mov
xchg
sbb
stos
jecxz
imul
and
leave
inc
test
pushf
scas
scas
jl
mov
imul
or
pushf
repnz
sub
jne
push
xchg
movl
cmp
pop
dec
int
jge
pushf
adc
dec
mov
lea
xchg
lods
add
incl
dec
cmc
fadds
ss
pushf
aad
cmp
mov
roll
add
jp
push
cmp
fs
fsubrl
xchg
pop
repz
xchg
or
and
xchg
sub
dec
fsubrp
sbb
aas
jbe
adc
mov
cmpsb
jns
cli
lods
sub
cmp
cmp
test
push
lods
iret
cmp
into
add
test
sub
rcll
and
ffree
mov
cmp
and
xor
bound
xor
in
sbb
lret
inc
xor
andl
sbb
pop
pop
push
shrl
sub
push
cmpl
insb
pop
cmp
adcb
shr
cmp
es
xchg
repnz
sbb
mov
pop
fprem1
push
in
int
xchg
pop
pop
scas
pop
movsl
popa
clc
sbb
neg
fisttpl
pop
xor
clc
jmp
sub
shll
shl
adc
leave
cmp
jo
inc
leave
stos
movsb
aas
ret
fistl
clc
imul
sahf
cmp
in
jmp
stos
andl
xorb
ret
rorl
push
mov
jno
push
cmp
cld
ret
jo
add
cltd
fcomip
mov
daa
add
shrl
inc
icebp
xchg
mov
ficompl
daa
mov
xchg
inc
shll
pop
aas
cmpsl
mov
mov
dec
xor
pop
fsubl
jae
andl
leave
inc
cmp
xor
xchg
popf
add
dec
mov
mov
push
push
xor
aas
lock
ljmp
ds
jne
and
or
mov
inc
sub
xor
mov
out
sbb
mov
jb
cmp
in
gs
cmp
movswl
jae
fisttpl
cmp
push
or
pop
mov
inc
cmpl
in
xor
xchg
push
out
mov
loop
push
mov
enter
out
and
push
pop
pushf
lret
or
mov
jmp
push
mov
stc
xor
pop
mov
mov
cmp
orl
sub
xor
pop
je
fs
cwtl
cmp
call
rorl
cmc
add
jo
add
test
mov
test
mov
stos
movsb
stos
push
cmpsl
clc
mov
adcl
in
int
faddl
sbb
fadds
xor
std
fadds
mov
xor
pop
ljmp
xchg
in
es
xchg
sarb
xchg
mov
cmpxchg
dec
enter
cmp
jg
mov
xor
inc
lds
clc
mov
enter
aas
stos
mov
xchg
fcompl
mov
jmp
mull
xchg
jnp
adc
xchg
scas
shlb
sub
sub
fcompl
push
jl
adc
adc
jne
inc
outsb
test
push
scas
cmc
and
notb
enter
sbb
out
cmp
and
mov
fiadds
dec
jb
pop
shr
popf
inc
add
jmp
push
mov
pop
mov
mov
push
xchg
add
aad
mov
jp
clc
inc
push
add
aam
insb
xchg
rep
or
pop
icebp
pop
call
mov
mov
shl
rcl
lds
and
div
mov
or
out
decl
xor
daa
jge
and
or
adc
mov
fisubl
movsb
xchg
gs
popf
mov
pusha
adc
push
sti
sbb
mov
push
pushf
and
jne
mov
xchg
lock
and
dec
pushf
rorl
inc
push
mov
aad
in
jae
dec
icebp
push
pop
movsl
xchg
add
and
pop
sub
repnz
clc
mov
inc
or
and
push
dec
adc
and
test
xor
cmpsl
stc
pop
xor
mov
dec
xchg
dec
jnp
xchg
sbb
push
inc
xchg
inc
cmpsl
mov
jg
xchg
lahf
testl
mov
imul
adc
and
push
addr16
mov
add
push
popf
pop
out
xor
addl
cs
loopne
cltd
insb
fsubp
push
es
clc
cmp
subl
imul
fwait
jae
mov
dec
mov
fs
cltd
xchg
xchg
add
idivb
xor
into
mov
fcoml
push
dec
inc
sub
aam
dec
push
pop
loop
pop
ret
push
icebp
and
ffree
adc
test
fldcw
pop
mov
cmp
sbb
hlt
jg
fs
sbb
mov
inc
fidivrs
sub
mov
clc
jl
stc
adc
pop
cmp
testb
rorb
add
pop
imul
test
lret
sti
imul
mov
push
sbb
inc
and
inc
pop
aad
push
or
sbb
movsb
cmc
pop
adc
into
push
into
scas
dec
mov
sub
test
cld
orb
fsubrl
mov
adc
mov
stos
sub
sbb
or
dec
add
jb
mov
cwtl
sub
jns
jns
filds
fwait
adc
mov
call
fistps
xchg
jb
ljmp
dec
pop
imul
sbb
add
inc
lea
jl
inc
cmc
inc
mov
xor
stos
std
mov
jno
lahf
popf
xchg
je
adcl
scas
repnz
xor
mov
xchg
lret
pop
out
cmp
or
fistpl
push
sbb
or
hlt
push
adc
aam
bound
mov
fwait
mov
sbb
jp
mov
sarl
push
and
push
aaa
sub
arpl
xchg
movsl
push
inc
addr16
adc
das
cld
cmc
push
mov
scas
adc
pop
dec
inc
add
pop
shll
nop
mov
pop
mov
repnz
repz
scas
cmp
addr16
push
fstl
pop
and
lods
into
adc
mov
push
and
cli
sub
in
xchg
mov
das
in
push
mov
xchg
push
xlat
mov
xor
inc
sub
cmpsb
jle
push
sbb
inc
and
lahf
jmp
cltd
add
or
aad
adc
cmp
or
icebp
pushf
jle
push
adc
aas
jg
xchg
inc
xlat
adcl
inc
sub
xchg
and
mov
jns
pop
ss
mov
pushl
sub
andb
cmp
je,pt
adc
in
adc
repz
sbb
mov
mov
and
fmul
clc
xchg
fidivrs
push
cmp
push
sbb
lahf
pop
mov
inc
movsb
cmpsl
xchg
ds
adc
sub
inc
pop
fwait
xchg
fisubl
xchg
idivl
cmp
leave
mov
mov
push
in
push
outsb
sbbl
pusha
mov
jp
inc
pop
mov
out
fstps
pop
pop
shl
ret
cmp
push
fdiv
xchg
test
cmp
sbb
int
xlat
mov
mov
mov
jbe
lock
cwtl
push
cmp
bound
imul
fsubs
pop
hlt
xchg
jle
data16
sbb
inc
xlat
sub
fwait
jnp
mov
in
sbb
cmpsb
pop
adc
cmp
mov
icebp
cmc
mov
cmp
std
mov
cmp
stos
loope
aam
iret
jns
repnz
test
xor
lret
jge
in
notb
mov
sbb
jb
inc
push
into
popf
imul
mov
movsl
mov
push
or
pushl
jge
ret
leave
js
xchg
or
inc
je
mov
fwait
loop
xchg
fidivs
in
cmp
cmp
and
mov
je
mov
gs
incb
shl
jo
sub
jg
adc
scas
inc
push
bound
lcall
xchg
mov
lock
leave
add
popa
movsb
dec
xlat
std
xor
mov
xorl
sbb
cmp
pop
test
mov
xchg
fcomp
xchg
cmc
test
sarl
fmulp
add
sub
gs
das
insl
mov
push
lock
cmovne
push
scas
add
push
out
push
loop
out
movsl
ss
push
mov
stos
out
sahf
rorl
call
pop
push
imul
hlt
pushf
movsl
jbe
push
inc
cmp
cmp
push
movsl
jp
out
mov
xchg
xor
mov
inc
gs
in
pop
jbe
xor
mov
or
insb
mov
leave
or
push
mov
sub
push
jmp
stc
lcall
xor
jbe
mov
xor
or
mov
daa
adc
subl
cmc
jl
or
pop
cmp
sbb
dec
and
fsts
push
mov
xor
add
sti
xchg
mov
ds
int3
push
das
std
mov
rcr
sti
jne
insb
mov
stos
adc
cltd
lret
add
test
inc
push
mov
repnz
xor
mov
loopne
inc
adc
mov
push
mov
jae
and
aaa
popa
xchg
jg
sahf
sub
mov
add
test
std
jg
xchg
sbb
shll
jmp
adc
add
stos
jne
daa
jle
or
sahf
imul
test
aad
inc
lcall
or
ret
jp
lret
dec
stc
sub
inc
outsl
cwtl
insb
addl
sarb
pusha
out
sbb
icebp
into
fcompl
dec
fcoms
pop
xchg
cmp
lret
pop
jae
push
or
sbb
add
hlt
sub
fidivs
daa
adcb
mov
jge
dec
fistpll
pop
out
loopne
cwtl
jnp
dec
ljmp
pop
pushl
and
add
sbb
ss
jno
mov
sbb
dec
inc
movsb
xchg
xchg
mov
adcb
and
xchg
pushw
sbb
jb
iret
xlat
xchg
or
jo
mov
ljmp
andb
mov
inc
jecxz
insl
cmpsb
scas
mov
push
lahf
pushf
jecxz
out
xchg
lret
enter
ret
mov
or
sub
add
jp
je
pop
xor
xor
adc
xor
ds
test
push
dec
xchg
cli
movsb
pop
mov
jp
test
dec
aaa
pop
in
lea
pusha
mov
stos
mov
xchg
mov
clc
nop
pop
test
mov
jge
xor
negb
call
clc
push
pop
cmp
stos
in
inc
mov
xor
xorl
out
pop
or
mov
dec
jmp
push
jne
stos
cmpsl
int
xor
cli
mov
repz
mov
jnp
sbb
push
stc
aaa
movsl
mov
add
pop
push
icebp
mov
cmpsl
es
call
xor
add
xor
pop
subb
jp
sub
mov
rorb
sub
xchg
mov
sub
shll
adc
cmp
frstor
push
lcall
pop
lods
outsl
mov
les
ljmp
sbb
push
xor
repnz
nop
dec
inc
fisubs
and
pushf
jo
bound
sahf
mov
sub
jle
add
mov
xor
scas
inc
ret
test
pop
lods
scas
mov
or
cld
pop
loope
movsl
shrb
cld
dec
mov
push
jl
repz
addr16
or
jecxz
cmpsl
std
in
loope
mov
or
or
mov
movsl
mov
bound
mov
hlt
xchg
das
sbb
and
cmp
jg
js
mov
std
shrb
and
outsl
outsl
sub
xchg
fbld
in
nop
rcrb
dec
and
inc
lahf
aad
and
jle
adc
imul
inc
jno
in
in
cmpsb
fsubl
and
or
sub
enter
call
rorl
add
call
adc
and
lahf
rolb
mov
gs
lcall
cli
push
mov
movsl
ficoml
fnstcw
insb
mov
in
aam
scas
or
mov
or
fdivrs
push
stos
roll
mull
cs
enter
sbb
mov
sub
imul
cs
pop
js
mov
lcall
iret
jecxz
lods
jge
or
insb
jg
dec
mov
jl
aas
adc
movups
fisttpll
sub
or
pop
mov
nop
sbb
inc
iret
ret
lahf
mov
or
pop
xchg
xor
iret
jge
or
xor
in
push
cmp
and
mov
nop
shrb
pop
xor
test
test
sbb
xor
push
inc
scas
pop
adc
mov
cmc
xor
stos
mov
outsl
dec
jg
mov
test
mov
enter
adc
sbb
lret
jae
in
fnstenv
enter
pop
jmp
add
mov
lods
int
and
les
jge
push
push
xor
imul
int
nop
pop
sub
shrl
pop
jl
mov
leave
repz
divb
mov
xor
movsb
and
mov
cmp
in
dec
push
xor
ljmp
hlt
popa
xchg
lret
xor
sarb
jne
inc
loope
inc
clc
loope
outsb
leave
orb
cmpsl
aas
stos
hlt
in
xchg
ret
cmc
call
sub
mov
inc
insl
and
pop
cmpsl
outsb
stos
xchg
jnp
push
push
cmc
into
mov
pop
dec
or
adc
addb
inc
rorl
arpl
aam
fs
cli
insl
and
out
sbb
pop
add
hlt
and
add
xor
xchg
cmpsl
pop
pop
xchg
leave
cmp
hlt
mov
lods
and
push
mov
jae
pop
cltd
or
adcb
frstor
cmp
push
cmp
mov
movsb
out
mov
movsb
out
dec
cld
daa
mov
in
fwait
inc
ds
pop
stos
stos
out
stc
mov
pop
xchg
enter
call
ds
mov
xchg
xchg
inc
adc
mov
loopne
cmp
in
pop
enter
jl
loop
pop
lods
and
lahf
in
shl
mov
shl
or
or
sub
in
and
mov
pop
jbe,pt
rcl
fs
xlat
fstps
out
div
fwait
xor
jnp
cld
inc
xchg
std
push
in
mov
testb
ljmp
clc
adc
bnd
adcb
xchg
mov
adc
xchg
ljmp
popf
cmpl
bnd
inc
xor
das
int
notb
gs
pop
idivb
sub
xchg
aaa
xchg
js
sbb
es
adc
orb
pop
mov
sbb
out
dec
divb
or
cmp
out
dec
push
insb
ss
enter
push
jl
mov
out
test
gs
ret
cmc
movsl
cmc
aaa
roll
fwait
cmp
mov
lea
stos
adc
and
mov
mov
in
pushl
test
mov
push
mov
ficoms
mov
mov
push
add
in
cmpsl
ljmp
and
dec
sbb
lds
imulb
test
popa
mov
inc
dec
mov
fcoms
pop
ja
jae
int
dec
enter
and
les
jmp
sub
push
push
imul
and
push
outsl
xlat
pop
test
lret
push
xor
repnz
inc
mov
xchg
xor
stc
xor
adc
in
sti
pop
jle
mov
mov
sbb
bound
rclb
clc
lods
pushf
movsl
loop
mov
mov
mov
rcll
popf
dec
jl
adc
out
jecxz
test
int
call
addr16
mov
mov
mov
inc
lea
test
pushf
sbb
jp
in
inc
leave
std
xchg
mov
or
shll
cmp
xchg
imul
mov
inc
movsb
lea
jmp
adc
ss
xchg
int
arpl
xor
add
movsl
jle
sub
and
pushf
mov
into
dec
les
js
fcmovnb
scas
mov
ja
outsb
push
fisubrs
mov
or
out
add
rcll
cs
inc
sub
sub
into
and
push
popa
jg
es
scas
sub
scas
cwtl
push
icebp
sbb
fs
jle
lock
or
sub
repnz
cmpsl
and
xor
lret
imul
ljmp
fistpll
xor
mov
test
mov
inc
mov
sub
adc
pop
cmp
mov
cmp
clc
add
dec
push
mov
sub
dec
pop
je
jnp
mov
pop
icebp
lret
xchg
mov
in
cli
test
cmp
sbb
inc
popa
mov
or
test
loop
lea
test
pop
fxch
push
cmpsb
cmp
push
inc
and
dec
push
push
fnsave
in
add
cmp
sahf
sub
es
push
xchg
cli
fsts
outsl
call
inc
or
imul
push
and
imul
jle
push
jns
fnsave
lods
ret
call
int3
test
push
insb
scas
rolb
test
bnd
push
add
sub
ret
push
nop
cmpsb
mov
pop
imul
mov
cld
xrelease
outsb
dec
repnz
xchg
sar
aam
outsl
mov
mov
push
inc
push
adc
pop
andb
sub
leave
mov
sub
push
xchg
mov
loopne
ret
mov
imul
lds
sbb
xchg
mov
or
sub
arpl
mov
insl
mov
rcrb
imul
enter
jns
test
sbb
xor
and
cmpsl
nop
mov
pop
sar
inc
cli
xchg
mov
mov
dec
insb
dec
ja
sub
vcvttss2si
in
cmc
rcll
js
lret
enter
xchg
mov
jns
icebp
mov
faddl
sbb
mov
sahf
or
jbe
push
push
xchg
adc
cmp
fs
pop
out
inc
out
push
ss
and
notl
push
mov
sbb
dec
xchg
repnz
xchg
sbb
pop
sti
adc
in
pusha
sub
jle
repnz
add
bound
add
cmp
int
ljmp
fidivrs
insb
insl
popf
push
outsb
call
scas
sbb
dec
outsl
and
or
lahf
and
out
xchg
sbb
sti
jb
sub
cmp
lds
xchg
mov
inc
test
adc
mov
push
inc
mov
jns
dec
cmp
ficoms
mov
inc
bound
cli
jmp
adc
sbb
mov
into
aas
loope
cmp
push
dec
jmp
sti
and
cli
jno
push
adc
repnz
lret
xlat
cltd
pop
sub
adcb
lcall
xchg
push
in
cwtl
mov
inc
jnp
cli
inc
adc
jecxz
mov
ret
push
mov
xor
in
jl
aas
test
push
mov
inc
in
enter
or
adc
shrl
adc
sub
pop
inc
mov
pusha
mov
jmp
aas
cmpsl
xor
mov
and
sbb
fidivrl
dec
add
add
js
popf
ljmp
mov
test
push
pop
add
pop
dec
sbb
xlat
les
sub
arpl
iret
stos
pop
loopne
mov
jl
addb
dec
dec
mov
adcb
orb
and
jb
fstpl
and
pop
mov
xchg
jnp
fwait
test
pusha
and
data16
insb
add
and
cmp
fbstp
shll
mov
cwtl
in
in
mov
push
fwait
xor
jl
lahf
sarb
aam
jle
popf
mov
cli
sbb
add
paddd
push
xorb
lods
mov
test
mov
pop
shrl
jmp
lcall
scas
jp
insb
xchg
roll
mov
cmp
add
and
adc
stos
in
cmpsl
sub
jo
jae
push
lods
mov
adc
jnp
mov
sub
push
sbb
adc
imul
adc
jecxz
or
sbb
nop
add
lahf
outsb
sub
pop
or
lods
jae
pop
jns
mov
hlt
shl
dec
movsl
add
push
mov
push
jne
sbb
jmp
or
xor
inc
mov
cmp
dec
lods
leave
dec
jecxz
adc
adc
ret
or
insb
icebp
mov
inc
push
ja
cmc
jecxz
bound
sbb
pusha
enter
pusha
xor
fwait
inc
jmp
ljmp
fimull
into
add
pop
into
and
imul
mov
pusha
lds
jle
dec
stc
cmpsb
xchg
test
outsl
fsubl
aam
jno
xor
add
les
leave
lcall
xlat
pop
jge
dec
cs
jns
adc
data16
movsl
sti
lcall
cmp
std
lds
adc
xor
cmp
xchg
add
in
sbb
inc
mov
leave
pop
sahf
cltd
sub
pop
pop
adc
ret
imul
cmp
mov
pop
and
mov
comiss
mov
inc
vpackuswb
aas
xor
mov
cmp
and
mov
in
push
cld
cli
rcll
push
mov
shll
ret
call
test
adc
push
shl
add
xchg
int
or
mov
mov
test
enter
in
pop
scas
loopne
xchg
sbb
lcall
in
notl
pop
add
adc
xchg
int
sub
js
mov
fisttpl
lods
stc
cmp
mov
rclb
pushf
xchg
imul
xlat
xlat
push
xlat
add
add
mov
jmp
push
js
jle
mov
pop
stos
jnp
inc
shll
pop
fbstp
xchg
lock
lea
jecxz
cmpl
pop
inc
das
je
inc
jno
xchg
sbb
or
lret
rol
ret
mov
repz
jp
push
jno
pop
imul
xchg
push
jae
mov
in
dec
rol
and
dec
repz
lods
xchg
pop
mov
lret
mov
inc
mov
lcall
sbb
jp
push
test
mov
cmpsl
loope
les
jmp
icebp
lds
inc
mov
rorl
je
icebp
xchg
test
xlat
subb
test
sbb
mov
movsl
daa
idivb
dec
sbb
loopne
out
sub
push
out
scas
mov
inc
cmp
adc
mov
leave
testb
dec
push
sti
adc
mov
arpl
mov
bnd
es
scas
sbb
mov
ret
push
push
cmp
dec
jecxz
addr16
xor
jecxz
outsl
cmpsb
mov
and
scas
subl
cmpsb
jl
daa
cmc
mov
xor
shl
sub
xchg
in
cmpsb
test
jecxz
int
dec
mov
push
mov
loop
lret
xlat
xor
or
and
or
stc
mov
lahf
jae
sbb
fildl
mov
jae
mov
or
jmp
and
mov
jg
shl
jb
aad
fbld
lea
xlat
incb
bound
dec
pop
or
sbb
xchg
push
push
or
int3
xor
jle
pop
insb
sbb
fdiv
and
in
adc
jbe
or
jae
cwtl
int3
lret
rorb
ds
neg
add
add
out
scas
push
dec
scas
push
data16
cmp
cld
add
mov
sub
fimuls
inc
xlat
xor
sahf
xlat
push
mov
cmc
dec
sbb
cwtl
stc
xchg
xchg
lret
xchg
adc
call
push
push
ds
cltd
jecxz
mov
scas
rcll
and
sub
sub
into
fmuls
nop
sub
out
cmp
and
cltd
mov
outsl
add
je
fbstp
pop
cmovns
fldcw
imul
pushf
or
lcall
lret
push
daa
mov
orb
push
mov
divl
jl
in
push
fmull
sbb
out
data16
xchg
test
sub
cmp
ret
pushf
jl
data16
push
and
jb
xor
stc
fsubrs
jg
cmc
fcoms
mov
mov
lahf
andl
je
xchg
jle
lret
aas
out
mov
adc
and
in
cmp
into
test
outsb
fisttps
scas
je
insb
xchg
xchg
popa
nop
repnz
inc
adc
paddusb
jg
lret
je
xor
hlt
cmp
mov
mov
call
out
test
sub
fxch
push
push
outsb
inc
cs
xchg
sbb
adc
scas
pusha
inc
nop
imul
imull
pop
out
push
mov
jne
loop
ret
mov
and
test
cmp
lods
mov
mov
cmp
jmp
cli
xchg
pop
lret
push
movsb
and
out
es
cmp
shll
mov
xorb
adc
xchg
cmc
xor
fdivs
neg
aas
adc
pushf
daa
insb
mov
push
and
rclb
jb
xor
lret
ds
xor
rcl
add
cld
es
dec
lds
and
mov
fwait
int3
or
pushf
adc
mov
das
fwait
adc
lret
mov
rcll
aas
inc
adc
je
push
daa
sbb
les
mov
gs
hlt
pushf
ffree
insl
in
mov
push
and
negb
and
adc
add
sbb
pop
std
rep
jecxz
fistl
dec
lock
cmp
andb
cmp
in
mov
lret
pop
stos
push
scas
or
inc
pop
adc
or
xchg
in
pop
out
rolb
mov
imul
push
out
in
in
push
push
mov
insl
aas
jns
mov
lret
sbb
push
and
int
lret
leave
lock
sti
push
cmc
or
mov
sbb
loopne
addr16
push
or
stos
dec
repz
jmp
or
mov
cld
lods
daa
mov
sub
jp
lods
insl
cmpsb
popa
add
pop
ret
inc
ficoml
push
in
lods
push
mov
sub
lcall
push
mov
mov
insl
add
dec
or
psubusb
insb
add
pop
xor
push
sub
leave
push
adc
jne
int
clc
pop
notl
jmp
adc
adc
pop
stos
je
push
aas
popf
mulb
in
negl
xchg
fisttps
push
pop
and
in
mov
mov
ds
mov
mov
hlt
mov
lock
or
ds
adc
iret
jnp
pop
dec
inc
mov
ljmp
mov
add
add
mov
out
inc
mov
or
aad
repnz
ss
lahf
mov
in
mov
notb
scas
cmpsb
pop
and
jb
enter
test
jns
fistl
push
inc
gs
lret
sti
popa
out
jp
popa
add
fsub
sbb
push
lods
mov
test
mov
cld
xor
aas
push
add
insb
cwtl
lret
orb
cltd
or
push
xchg
jnp
and
daa
test
xchg
out
xchg
ds
add
mov
or
bound
and
mov
int3
sub
dec
adc
movsb
jge
je
push
mov
add
ljmp
testb
test
pop
or
mov
add
or
adc
mov
pop
or
and
sbb
lods
ret
icebp
mov
mov
stos
cwtl
pop
add
pop
aam
jnp
addr16
mov
mov
aaa
in
sarb
cmp
and
jmp
mov
push
mov
nop
std
xchg
push
nop
andb
fwait
jno
aaa
xor
push
xlat
lcall
jmp
pop
sarb
mov
xchg
shl
ror
cmp
aam
mov
outsl
add
xor
jmp
pop
int
jne
out
and
data16
mov
es
dec
sar
rcrb
add
adc
mov
bound
icebp
mov
sbb
test
mov
leave
or
xchg
arpl
jg
bound
xorb
iret
mov
fwait
loope
in
repz
dec
jle
rorl
psubq
mov
jle
sarb
jmp
xlat
cmp
mov
mov
push
mov
dec
xor
aam
cmp
sbb
jl
into
cld
sbbl
jnp
inc
mov
fildl
addr16
xor
add
outsb
sub
cmp
lds
adc
outsl
in
sbb
hlt
mov
pop
lcall
idiv
jl
sahf
dec
mov
out
push
adc
icebp
fildl
fs
mov
sub
int
repnz
cmp
out
pop
jmp
dec
shll
stos
iret
imul
ret
loope
rorl
ficompl
jne
mov
lds
iret
add
cli
lret
gs
mov
outsb
faddp
filds
arpl
ret
cld
sbb
shlb
dec
fninit
jno
mov
adc
loop
fdivp
iret
insb
je
push
fsubrp
les
repz
lret
inc
adc
adcb
jnp
xchg
stos
call
outsb
dec
fs
fisttpl
sub
pop
pusha
gs
cmp
jecxz
pusha
in
lret
je
or
xchg
sarb
fistpll
dec
adc
scas
and
int3
jge
cltd
sub
movsl
xchg
das
les
jae
mov
imul
lock
mov
aaa
mov
and
fisttps
ja
xor
clc
stos
arpl
xor
shll
scas
fbld
jg
test
repz
cmp
test
push
xchg
cwtl
cmp
cli
jge
mov
imulb
inc
es
cld
and
mov
nop
ss
fisttps
lahf
add
and
aas
imulb
and
jo
sahf
out
lods
or
fisubl
jb
clc
aam
test
pop
adcb
rorb
jle
scas
or
ret
pop
jnp
cmc
ljmp
xchg
mov
loopne
xchg
ret
rclb
jnp
repnz
mov
enter
sbb
cmp
sbb
dec
cmp
adc
or
push
dec
jge
xchg
or
bound
lahf
das
mov
test
jae
ljmp
ds
ret
pop
hlt
sub
ljmp
cs
inc
popf
test
ss
nop
aam
shll
insb
xor
arpl
jns
mov
into
jmp
loopne
loope
fidivs
xchg
jp
add
jns
shlb
xor
pop
cmp
xchg
jno
push
push
mov
faddl
pop
add
pop
push
inc
and
push
fldl
fs
pop
outsl
cmp
add
insb
cld
jae
dec
call
les
flds
loop
testl
in
ja
push
mov
xor
repnz
outsb
and
and
xlat
std
lcall
shl
sbb
mov
jne
xchg
out
and
sub
outsl
sub
cs
icebp
xchg
cltd
lss
insb
out
test
bound
lock
test
cmp
sub
adc
or
inc
insb
lds
mov
mov
xchg
adc
inc
push
inc
or
sbb
or
sbb
fidivl
mov
jbe
sbb
sbb
push
lods
mov
stos
add
xchg
and
divb
mov
repz
jmp
shlb
pop
mov
loopne
stc
dec
push
aas
sub
stos
ficoml
out
mov
xor
inc
repz
sbb
xchg
jno
arpl
mov
mov
test
jo
scas
push
xchg
sbb
fwait
jecxz
xor
idiv
ja
or
mov
xchg
cmp
jecxz
xor
dec
ret
testl
or
fwait
bound
inc
cs
insl
inc
lock
js
and
fbstp
cwtl
fldenv
push
je
data16
jle
fistpll
arpl
loop
outsl
loopne
xchg
ficoml
mov
mov
adc
jge
bound
ret
pop
mov
push
jae
imul
jg
pop
jge
jns
dec
fs
add
inc
fcomi
movsl
xchg
pop
arpl
in
cmp
mov
xor
sbb
cld
mov
push
and
mov
sub
ja
adc
push
and
pop
pop
notl
xor
add
ds
jmp
fwait
dec
stos
xor
scas
jecxz
dec
add
fstpl
lahf
push
mov
lock
push
push
imul
cmpsl
xor
mov
stc
dec
push
xchg
mov
std
lret
cmp
pop
mov
lods
inc
enter
stc
sub
or
lea
add
jo
pushf
sbb
je
jp
add
aas
mov
pushf
jl
sar
cltd
push
xchg
addr16
fstps
adc
pop
and
data16
push
fmuls
xchg
cmc
pop
cmpsl
test
rolb
popf
cmp
pop
xchg
mov
ficoms
cmp
mov
test
xor
dec
jo
xchg
fcomps
pop
rcll
dec
scas
xor
xchg
scas
mov
loopne
dec
cmpsb
xor
fisttpll
add
push
lcall
clc
outsb
sarl
lods
pushf
cld
sub
loope
sub
xchg
adc
pushf
das
push
mov
pop
or
xor
adc
and
jbe
lret
push
sub
sbb
mov
cmp
cmp
mov
and
fcoms
mov
mov
push
pusha
push
cmc
in
test
lods
hlt
adc
add
jb
mov
adc
xchg
fimull
mov
dec
leave
jmp
rorb
out
pop
adc
cmp
lcall
inc
push
mov
push
inc
outsl
xor
imul
in
adc
out
std
adc
adc
mov
call
add
mov
sub
pop
test
jle
xorb
jg,pt
lods
sbb
out
jns
inc
popf
pop
orps
fdivrl
ljmp
push
xchg
mov
fidivs
movsl
or
xchg
inc
sub
xchg
cmp
psubusw
xor
clc
xchg
dec
movsb
repz
pop
pop
ficoms
popa
lret
dec
jnp
and
inc
fisubrs
inc
adc
mov
or
xchg
mov
jb
ja
push
nop
pop
std
or
add
sub
mov
mov
lods
imul
sbb
negb
mov
icebp
pop
arpl
xchg
stc
jns
int3
test
xchg
inc
sbbb
cmp
stc
add
cmp
add
adc
mov
push
sub
es
pop
xchg
sbb
int
xor
adc
gs
jge
sub
andb
dec
stc
js
loope
cltd
sub
cwtl
scas
xchg
jo
rcl
sub
sbbb
mov
lock
mov
pop
add
sbb
fldenv
lahf
push
divl
sbb
dec
sbb
inc
adc
and
ret
scas
and
sbb
sbb
ja
repnz
incl
jmp
add
and
or
and
push
pushf
push
stc
xchg
mov
mov
stc
popf
test
std
add
xchg
shrb
rol
cmp
bound
fs
pop
inc
inc
out
out
inc
sarb
pmulhw
in
mov
in
xor
loop
fdivrl
dec
dec
xchg
addb
or
jne
mov
out
cli
nop
cmc
lahf
popa
pop
mov
imul
sbb
int3
mov
push
int3
cli
dec
xor
adc
test
sbb
sbbl
sub
lods
jbe
outsl
leave
aam
mov
xor
mov
xor
imul
arpl
bswap
out
aaa
pushf
sbb
xchg
sahf
in
mov
lahf
push
test
repnz
inc
leave
or
sub
jecxz
shl
shl
add
sub
or
mov
and
pop
mov
out
lods
xor
iret
faddl
jb
push
ret
add
dec
leave
sub
adc
arpl
or
mov
popf
inc
and
call
or
lock
dec
lods
aam
arpl
adc
lcall
xchg
out
nop
xchg
lock
cld
cmp
lods
les
jns
bound
inc
mov
mov
mov
sub
jmp
pop
pushf
dec
push
loop
pushf
push
mov
lods
sub
sbb
or
cmp
and
rcrb
int3
in
xchg
pop
int3
call
les
insb
rcrb
and
pop
ja
fsubs
out
jne
cmp
push
popf
mov
ret
je
inc
dec
lahf
sub
mov
out
xor
sub
push
faddl
sbb
in
mov
notl
clc
pusha
xor
mov
in
sarl
stc
dec
add
push
push
into
int
xchg
jbe
cwtl
or
xchg
adc
xor
mull
test
shll
mov
lea
or
dec
enter
xchg
inc
aas
dec
xor
std
dec
gs
push
enter
push
ja
and
dec
pop
or
mov
in
jo
and
cmpsb
dec
into
or
pushf
pop
add
sub
scas
js
jg
jmp
xor
lret
mov
fists
int
je
mov
mov
cmc
test
inc
icebp
sub
jo
inc
push
inc
repz
cmp
lock
mov
testb
xchg
mov
mov
cmp
mov
clc
sbb
pushf
out
cmp
in
rorb
jnp
dec
sbb
test
dec
sbb
mov
or
in
pop
sub
mov
fisttpll
out
push
mov
jno
rolb
pop
cmp
ss
push
pop
aad
and
and
xchg
repnz
nop
imul
xchg
or
repz
loopne
inc
popa
in
push
rcll
and
push
dec
adc
sub
xlat
icebp
inc
aaa
sbb
push
nop
cmp
jge
ja
add
mov
xchg
pop
divl
ret
div
call
clc
divb
or
sti
int
push
mov
cmp
pop
and
or
sarl
icebp
push
imul
test
cmp
jle
push
dec
xor
std
sahf
xchg
cmp
bound
mov
adc
xor
mov
sbb
adc
insl
inc
in
test
push
xchg
out
pop
sar
out
sub
fidivs
popl
xchg
add
mov
call
cmp
jmp
ret
mov
lods
and
and
gs
aam
xor
js
push
mov
or
aad
xor
mov
mov
sti
or
jmp
dec
icebp
and
xor
cmp
mov
push
sub
movsb
pop
insb
pushf
mov
cld
or
jmp
pop
aad
negl
push
cmp
stc
push
sahf
pmaxub
ds
mov
add
xchg
lret
clc
lds
bound
push
sub
sub
aas
and
in
popf
mov
cmpsb
and
sar
jmp
addr16
jp
jns,pt
adc
das
mov
insb
imul
mov
sub
inc
or
xchg
and
add
push
mov
jnp
sahf
jo
mov
rcll
inc
sbb
lds
cmp
arpl
xchg
ds
add
imul
rolb
sub
push
loop
jo
add
ss
shr
and
repz
pop
out
adc
cmp
mov
fnstsw
push
movsb
in
push
in
std
inc
push
jnp
daa
sub
lds
sub
loope
add
sub
sbb
mov
or
cld
adc
idiv
cmp
popa
icebp
loope
dec
fsubrs
mov
pop
pushf
mov
push
jmp
nop
das
popa
test
out
xchg
add
into
sub
dec
sarl
adc
push
cmp
and
popa
bound
xor
jb
test
mov
fwait
inc
cmp
cmpsl
filds
scas
mov
sti
jae
mov
cmc
xchg
out
rclb
mov
testl
shll
sbb
dec
and
lret
gs
or
jb
inc
sar
test
add
fisttps
jno
fldt
aam
rcrb
outsl
pop
jle
nop
pop
fwait
push
pusha
rorb
int
call
in
loope
pop
aam
mov
int3
push
jmp
sub
out
jae
jo
sub
mov
add
nop
test
push
fwait
shll
outsl
daa
or
push
adc
mov
iret
sbb
je
pop
sbb
shrl
aad
iret
repz
fcomps
ljmp
inc
pusha
orl
and
add
iret
ja
xchg
psllq
cmp
and
adc
iret
clc
xchg
movsb
das
ret
xchg
arpl
dec
dec
mov
xchg
lods
mov
and
test
fs
dec
mov
sub
and
sub
out
shlb
jo
fldcw
aad
xchg
jmp
jno
repnz
inc
cmpsl
jae
push
lahf
test
lcall
test
mov
jge
dec
mov
pop
cmc
aas
fs
movsb
cltd
xchg
jne
movsb
cmp
xchg
dec
xchg
sub
popf
cltd
jle
lods
sub
outsl
jns
jo
in
nop
adc
mov
pop
mov
and
cmp
mov
add
fisttpll
mov
add
mov
mov
push
sbb
mov
push
repz
cmp
xor
add
js
mov
jge
test
stos
xor
aas
jmp
or
and
mov
shll
inc
and
lret
into
mov
icebp
pop
stos
nop
dec
lcall
fwait
shlb
adc
mov
out
jle
inc
mov
mov
in
lock
pop
test
add
in
lret
jle
rcr
imul
ret
jge
sti
std
lahf
fs
cmp
ljmp
movsl
mov
pop
enter
aas
dec
dec
notb
hlt
push
mov
cltd
sarb
fisttps
mov
sbb
ljmp
aaa
jge
adc
leave
push
or
xlat
xchg
jno
out
jb
xchg
lock
ret
cwtl
je
gs
repz
push
das
out
dec
fwait
negl
movsl
unpckhps
les
add
add
or
je
popf
fdiv
in
xor
pop
pop
add
and
adc
mov
pop
test
xchg
push
ja
enter
push
or
mov
and
and
mov
mov
push
dec
or
xorb
sbb
xchg
push
or
mov
jo
pop
inc
jl
xchg
adc
xchg
or
cmp
sbb
loop
jg
and
nop
or
push
ds
push
lods
jl
jmp
mov
out
push
mov
jbe
sub
push
dec
dec
sbb
xor
sub
cmp
in
popf
mov
daa
popf
xchg
and
aam
xchg
or
jl
test
mov
ljmp
aad
insb
adc
mov
dec
jnp
jnp
es
pop
mov
es
sbb
fnstenv
sbb
sbb
pop
mov
sahf
or
je
shlb
fidivrs
rol
nop
or
ljmp
mov
xor
jmp
int3
push
scas
jle
push
jg
ljmp
mov
mov
dec
fisttps
or
aam
test
pusha
leave
jecxz
gs
jno
daa
push
mov
adc
sub
repz
cmc
test
lock
push
inc
xor
adc
xor
shll
sbb
sbb
jno
fsub
jne
or
jge
gs
in
sbb
mov
xchg
jo
push
movsb
ds
mov
mov
push
xor
flds
xlat
sbb
xchg
and
insb
push
push
push
jo
leave
bound
icebp
add
andb
sub
iret
ret
dec
jns
add
inc
xor
jp
fildl
ljmp
les
mov
call
fistl
sub
add
rcll
jle
pop
inc
dec
das
int3
pop
mov
dec
sub
adc
xchg
mov
js
jmp
lods
jo
fisubl
popl
cs
movsl
clc
mov
lcall
and
enter
lret
test
movsl
pop
dec
fsubrs
xor
popf
adc
js
lcall
shrl
adc
loopne
orl
xor
push
faddp
mov
lds
pop
add
loope
mov
sbb
aas
outsb
test
sbb
jle
jle
push
xchg
mov
push
add
out
out
shll
orb
testl
pop
pop
cmp
into
inc
cmp
jne
sahf
imulb
xchg
cmp
loop
adc
mov
jae
jb
stc
jecxz
leave
push
jnp
insl
loopne
in
stos
sbb
and
aas
mov
cltd
fnstsw
add
adc
mov
aaa
test
sbb
hlt
mov
fisttpl
mov
les
xchg
in
js,pn
cmp
fdivs
and
enter
mov
push
inc
add
jnp
cmp
mov
or
out
push
int
push
jp
mov
hlt
pop
dec
xlat
pop
sarl
pop
aaa
push
mov
and
mov
bound
jae
mov
test
adc
dec
repnz
adc
and
cmpsb
or
inc
fwait
push
pop
aaa
fwait
inc
add
in
xor
movsl
sub
pop
jns
clc
das
into
imul
or
imul
out
pop
mov
popa
mov
push
test
inc
add
ret
push
mov
xchg
add
mov
test
aas
fnstenv
ds
cmp
outsb
sbb
or
jne
sahf
aad
lret
xchg
iret
pusha
addl
arpl
sub
sub
int3
movsl
int3
xchg
mov
insl
mov
jo
sub
mov
push
fmull
outsl
add
pop
inc
adc
lret
lods
mov
in
in
push
xchg
xor
push
out
xor
pop
pop
daa
mov
add
mov
fisttpl
leave
dec
out
movsl
andb
xchg
insb
push
sub
mov
xchg
or
xchg
into
jns
inc
mov
ja
jo
pop
jge
jns
dec
xlat
sub
popf
xchg
mov
inc
push
xor
pop
inc
dec
rorb
push
push
sub
ljmp
add
inc
xor
ret
mov
cmp
or
and
mov
outsl
sub
xchg
aaa
subl
mov
pop
movl
add
out
mov
xor
mov
arpl
daa
ja
push
jmp
aaa
popa
ficompl
outsb
cmpsb
aaa
dec
mov
test
rorb
clc
mul
fst
lods
xor
xchg
push
inc
cld
push
or
jae
sbb
sbbl
push
lea
xchg
stos
aas
jbe
rcrb
sub
mov
out
cvtdq2ps
lock
repnz
int
mov
arpl
gs
mov
push
push
mov
mov
xchg
mov
bound
push
jge
jns
xchg
xchg
lods
outsl
test
xchg
add
cmp
adc
pop
out
adc
xorb
mov
das
pop
lea
mov
xchg
mov
mov
shll
mov
cmp
cld
lret
dec
sbb
xchg
mov
xchg
and
sbb
pop
mov
xor
fwait
ret
xchg
pop
mov
sub
pop
movb
and
jle
fnstsw
adc
or
and
sbb
or
jno
cmp
cmp
imul
or
scas
mov
push
or
test
mov
js
cmc
adc
sbb
dec
jns
push
pop
imul
lds
test
cmp
mov
aam
jb
or
ficoms
xchg
xor
cld
or
or
pushf
adc
les
xor
adc
rclb
inc
dec
roll
and
inc
push
xor
push
loopne
cmpsb
cmp
cmp
cli
fwait
out
inc
inc
cld
fmuls
push
ja
and
jg
and
imul
jo
test
cmc
push
mov
xor
repz
jnp
jle
cmp
inc
xor
sti
les
adc
into
fcompl
arpl
jno
mov
fstpt
dec
xchg
mov
lods
inc
lea
cmpsb
push
push
mov
pusha
loope
notb
xchg
sub
fwait
adc
stos
cmc
xchg
and
cmp
or
sub
popf
ret
popf
xor
mov
adc
mov
xchg
cmp
rcrl
add
cmpsb
dec
pop
popf
iret
imull
lea
mov
jmp
test
or
add
add
imul
les
pusha
cmpb
adc
cld
cmp
jmp
cmpsb
sub
cmc
mov
mov
out
sbb
or
push
lock
jecxz
movsb
pop
loope
lods
push
mov
andb
lods
or
cld
fisubrl
ret
cli
xchg
dec
lds
int
mov
jbe
scas
stos
in
pop
adc
stc
imul
xor
sbb
lods
and
add
jmp
test
les
sub
popf
outsl
icebp
mov
push
inc
push
jg
pop
out
mov
and
popa
gs
sbb
testb
cmp
jno
dec
orl
push
lret
or
imul
mov
adc
insl
fldcw
scas
inc
add
or
lods
gs
add
dec
clc
ds
cmc
loop
jno
scas
es
add
dec
fists
mov
jp
cmpsb
jno
sbb
call
and
push
jp
aas
test
pop
dec
ret
loopne
push
iret
add
adc
sub
adc
sbb
add
js
sarl
sub
fcmovnb
jge
repz
mov
sbb
out
stc
xchg
stc
dec
mov
pop
rol
fidivrs
jecxz
sbb
insl
inc
loop
stc
pop
test
sbb
dec
pop
into
xchg
fildll
jns
shl
in
out
aam
js
adc
jp
jmp
inc
xchg
popa
frstor
enter
push
cmc
mov
adc
mul
xchg
xor
fdivs
mov
enter
fldl
or
rsqrtps
mov
scas
inc
inc
sub
mov
mov
enter
inc
lret
xchg
jns
lock
out
xor
mov
dec
cli
into
and
movsl
ljmp
sbb
orb
mov
mov
jae
leave
pop
adc
jae
inc
mov
std
cmpl
adc
das
cs
push
int3
dec
push
or
fcoml
inc
mov
mov
jb
pop
xor
js
pop
mov
jb
mov
scas
pop
fcomps
cmp
push
jno
and
lods
cwtl
xchg
pop
and
movsb
mov
je
pop
jnp
sti
sbb
inc
je
mov
int3
jmp
push
or
in
sub
stos
pop
mov
cmp
sbb
cmc
jae
enter
pop
lahf
push
push
cltd
in
cmp
mov
sbb
in
push
mov
das
adc
ret
mov
sub
outsb
icebp
or
sahf
pop
sub
xor
cwtl
pop
movsl
jnp
fs
fdivs
incl
add
mov
stc
mov
ja
insb
inc
pop
ror
inc
stc
std
pop
pushf
shl
pop
popf
clc
repnz
cmp
data16
pop
cmc
sub
xor
push
leave
mov
push
out
lods
mov
sub
or
cmp
pop
in
pop
jne
cmp
push
cmpsl
and
mov
or
sahf
or
repnz
pop
add
jae
adcb
inc
repnz
and
pushf
test
jecxz
test
and
mov
repnz
cli
popa
mov
aam
cmp
jge
jo
rclb
fldl
out
mov
test
mov
insb
sbbl
xchg
or
push
js
add
sahf
sti
jne
das
push
xchg
mov
mov
in
lret
scas
lcall
movsb
insl
ret
jnp
call
sbb
mov
popa
fwait
mov
xchg
lods
push
inc
jecxz
pop
xchg
sbb
pop
mov
outsl
fwait
fwait
and
addb
lahf
cmc
arpl
fildll
xchg
inc
stos
aad
jae
mov
xchg
cmp
divl
mov
jae
or
xchg
jo
pop
inc
mov
pop
push
cltd
adc
inc
adc
cltd
cmp
divb
out
stc
cltd
mov
rorb
dec
cltd
daa
mov
jge
je
or
or
adc
loope
cld
ja
mov
jle
aad
pop
ffreep
pop
lret
sbb
mov
ret
imul
iret
ds
mov
xchg
dec
inc
lret
mov
push
cs
movsl
jno
fcmovu
pop
xchg
std
adc
xor
fneni(8087
or
fcmovnbe
mov
add
mov
sbb
sbb
and
dec
int3
jns
mov
out
push
sbbw
in
jmp
add
imul
insb
mov
fcoml
popa
cwtl
add
test
je
cwtl
jnp
call
stos
xchg
pusha
xor
das
out
add
push
jecxz
outsl
outsl
pop
cmc
mov
sbb
sbb
xor
cmc
xchg
xor
repz
xchg
xchg
or
mov
fisubrs
cmpsb
adc
mov
stc
and
mov
jge
mov
jg
dec
scas
aaa
add
mov
ljmp
stos
jne
dec
aad
addr16
xlat
mov
loop
test
xor
inc
jb
pushf
mov
scas
lcall
add
scas
ss
imul
hlt
xlat
cmp
or
loopne
xchg
xchg
adc
pop
mov
xchg
ljmp
mov
in
sti
das
clc
push
test
mov
xchg
mov
jp
mov
aaa
fbld
int
cs
add
sbb
loop
data16
jae
xor
adc
push
push
pop
xchg
mov
mov
xchg
sbb
cmc
fmul
inc
loope
lods
insb
jge
fwait
xchg
xchg
add
xlat
stc
jle
pop
push
sub
fsubr
imul
sbb
aaa
sbbl
popa
push
std
out
popf
and
nop
ret
lahf
add
data16
out
out
xor
jl
mov
in
pushf
jecxz
cwtl
scas
jnp
minps
adc
dec
lock
lahf
xchg
outsl
and
dec
call
pop
int3
sahf
cmpl
sub
cmovae
xchg
mov
cmpsl
pop
cmp
mov
and
call
shrb
aam
sub
sbb
sbb
popf
loopne
mov
pop
insb
dec
sbb
aam
pop
add
repnz
pop
clc
sbb
lds
fdiv
cmp
je
repz
and
or
and
push
adc
ss
test
xchg
pushf
outsb
addl
xchg
sub
push
sbb
daa
pop
mov
test
lret
iret
out
stos
sub
xor
psrad
pusha
lea
push
repz
xor
mov
mov
leave
inc
enter
pop
pop
sub
mov
rolb
jle
sub
shrl
movsl
pop
clc
ror
inc
lods
in
jmp
jbe
rol
clc
mov
mov
shl
mov
inc
jp
sbbb
push
mov
push
sub
sub
push
sbb
add
test
jnp
jae
cmp
repnz
xorl
sbb
ret
hlt
cltd
lret
jmp
movsb
es
std
push
addb
jg
pop
xor
push
sub
push
fucomip
rorl
mov
dec
push
ja
xor
or
hlt
imull
jns
fldenv
mov
mov
xor
inc
dec
adc
movl
out
mov
lds
pop
ds
jge
loope
jmp
dec
sahf
loop
lahf
mov
pop
xor
push
dec
pop
dec
mov
or
sbb
dec
sub
jne
jmp
inc
shrl
lret
xor
xor
out
or
push
sub
lods
add
nop
jge
movsl
inc
stos
sub
adc
jle
int
test
mov
push
push
push
mov
or
in
cld
test
push
mov
call
mov
jns
xchg
and
lahf
inc
fiadds
or
add
push
mov
jge
fdivl
adc
push
leave
jge
add
and
in
pop
std
aam
nop
inc
ret
xlat
pop
fnstenv
inc
mull
loope
aas
cmpsl
out
adc
add
mov
add
add
cmpsb
push
leave
pop
stc
pop
daa
mov
dec
sbb
push
xor
jecxz
das
xor
aas
mov
dec
out
js
arpl
leave
das
in
cs
or
lret
aad
cmc
cli
xchg
rcrb
push
push
cmp
mov
and
push
decb
or
cmp
sub
adc
loop
imul
or
jns
sub
jnp
mov
push
mov
pop
shlb
push
adc
cmpsb
aam
lock
and
adcb
inc
test
cmpsb
xor
std
ss
loope
nop
divb
mov
iret
jp
pop
lahf
dec
shll
push
loopne
fiaddl
push
lock
jnp
pop
test
std
daa
mov
jg
adc
sub
imul
test
pop
stos
pop
shlb
lcall
sbb
cmc
xchg
sbb
mov
aas
push
int
mov
aas
sahf
insb
data16
out
imul
ja
push
push
or
xor
mov
mov
mov
or
mov
sbb
sbb
and
shrl
xchg
popf
xchg
push
push
add
sti
and
aam
icebp
xor
mov
pop
bound
out
insl
frstor
data16
inc
sbb
enter
fistps
jae
jp
nop
add
xchg
loopne
jbe
mov
dec
mov
mov
mov
int3
lods
scas
and
add
dec
in
add
stos
mov
adc
lock
mov
in
das
je
ja
out
insb
testl
mov
dec
daa
and
cmp
fstpl
rcr
mov
push
jge
adc
adc
jns
dec
repz
clc
xor
mov
ljmp
dec
and
sbb
mov
shrb
dec
xchg
inc
loope
into
sub
lods
rolb
pop
ret
pusha
jl
xchg
push
push
dec
inc
mov
dec
mov
lock
push
mov
insw
pop
mov
pop
js
jnp
xchg
js
jne
sub
fidivrl
adc
dec
jl
xchg
mov
jbe
mov
cmp
mov
lcall
fucomi
cs
or
sti
add
add
cmp
jns
lock
sahf
popa
sub
xchg
outsb
out
sbb
jae
scas
mov
pop
or
test
adc
cmp
push
adc
xchg
hlt
inc
sbb
mov
xchg
lock
out
icebp
add
andb
outsl
pop
sub
jmp
int3
pushf
xor
xlat
inc
and
xchg
pop
mov
shll
inc
out
rorb
mov
cmp
in
add
andl
xchg
add
jns
sub
cmp
aad
testl
add
mov
or
push
mov
jbe
ret
add
xchg
sbb
into
in
jo
inc
ja
les
xchg
loope
adc
mov
cmc
xchg
push
cmp
fldcw
dec
es
dec
in
xor
push
fisubrl
ficompl
xchg
gs
int
push
movsl
pop
jl
jo
stos
icebp
xchg
pusha
lret
dec
lcall
pop
and
enter
pop
inc
xchg
sahf
int3
inc
lcall
push
aam
lret
xchg
push
add
jle
enter
in
setp
pop
lret
sub
add
rclb
lahf
jne
push
inc
rcr
mov
loope
adc
xor
dec
push
cmp
mov
xor
xchg
popf
jle
fnstsw
cmp
cmpb
testl
fbld
jne
addr16
xor
jnp
or
and
lcall
arpl
call
imul
mov
cmpl
pusha
jno
and
js
adc
xchg
aaa
lock
add
clc
inc
fdiv
and
movsl
jbe
fiadds
lods
nop
hlt
xchg
lock
les
fstl
inc
mov
gs
mov
and
lods
push
jp
loopne
sbb
sti
fst
adc
jbe
xchg
icebp
hlt
cmp
outsb
pushf
push
test
xchg
das
clc
imul
loop
lret
pop
mov
jo
enter
sbb
mov
inc
push
test
sub
dec
mov
pop
mov
sbb
pusha
mov
sbb
fistpll
fstpt
pushf
cmpsb
in
push
stos
je
imul
adc
dec
push
and
fcoml
andb
add
icebp
arpl
dec
fisttpll
add
xchg
jmp
out
mov
and
fiadds
adc
cmp
popa
mov
sbb
ss
in
or
cld
orb
mov
jge
outsl
sbb
jmp
scas
pop
test
out
insb
int
lcall
xorl
cmp
or
in
cld
add
cmp
and
mov
inc
cmp
xchg
mov
pop
out
or
push
xorl
scas
push
add
leave
mov
inc
test
shl
loopne
xor
imul
xchg
pop
dec
xor
sbb
subb
dec
stos
push
cld
sub
testb
cmpsb
out
loopne
std
decl
aaa
jmp
fistps
jae
sub
push
mov
fiaddl
jo
pop
and
lcall
insl
mov
negb
rclb
insb
add
add
jmp
sahf
fstl
dec
pusha
test
add
icebp
mov
pop
jne
sbb
cmpsl
adc
sub
cmp
dec
pop
cmp
cmp
ficoms
sarl
or
mov
inc
sub
push
inc
inc
mov
adc
xor
enter
dec
std
mov
mov
out
es
cmpb
xor
std
fneni(8087
lock
mov
enter
hlt
fbld
popf
icebp
mov
and
ficompl
dec
mov
shlb
stc
cwtl
enter
adc
sbb
pop
in
pop
cs
hlt
xchg
call
test
jbe
mov
loope
out
scas
pop
xchg
dec
inc
pushf
nop
push
inc
testl
jnp
xor
rorb
sbb
mov
pop
popf
es
jbe
sbb
in
fs
incl
pop
test
notl
fldenv
popl
adc
mov
test
pop
mov
loope
in
add
jmp
sbb
jmp
flds
and
push
rol
xchg
push
mov
inc
je
call
insl
out
fiadds
and
scas
popf
and
xlat
and
adc
mul
loopne
mov
dec
cld
lea
jle
mov
arpl
dec
fldl
mov
aad
mov
scas
js
repz
mov
sbbl
imul
lods
sub
inc
rcl
cwtl
cmp
ret
lock
incb
sbb
mov
xchg
sbbb
dec
add
je
cmp
jo
sub
lahf
pop
mov
or
xor
push
sti
cwtl
mov
mov
mov
xorl
adc
mov
mov
sub
inc
pusha
cmc
nop
subb
add
idivl
mov
push
inc
fcomp
in
mov
mov
dec
inc
xor
dec
cmp
push
or
mov
add
setl
mov
push
or
cmpsb
sbb
hlt
es
mov
cmpb
test
repnz
out
xchg
adc
stos
test
sub
sti
or
lods
sub
fists
aad
xor
sbb
push
adc
test
fwait
jno
or
adc
mov
lret
out
out
pop
idivl
das
repnz
das
movsb
mov
stos
dec
int3
jne
imul
jae
out
lds
jmp
shlb
cmp
add
and
loope
adc
xor
mov
into
testb
push
and
jmp
fwait
sub
out
scas
mov
push
jmp
stos
cmpsb
and
jno
dec
xchg
add
icebp
adc
popf
mov
clc
jl
xchg
xchg
mov
loope
pop
outsl
stos
mov
movsl
or
movsl
popl
and
xchg
push
xor
xor
cli
pop
xor
add
mov
test
fcomi
movsb
arpl
int3
adc
mov
jl
into
push
cwtl
adc
fstps
inc
push
mov
inc
mov
sarl
fistl
fildl
inc
dec
ljmp
and
lea
std
lods
popa
sar
cmp
das
stos
cmc
sbb
stos
pop
repnz
pop
sub
mov
pop
bound
pop
insl
ja
out
jbe
mov
mov
inc
pop
movsb
or
mov
pop
ret
loop
out
mov
pop
xchg
jo
mov
repnz
es
mov
test
xor
sub
fsubrs
lret
mov
movsl
imul
rcll
mov
inc
xor
inc
movsb
fmull
sbb
lret
cwtl
std
ljmp
mov
cmp
cltd
pop
fmul
dec
xchg
lahf
dec
or
dec
hlt
jg
into
arpl
mov
push
or
fcoms
and
xchg
std
lods
dec
lds
jecxz
out
xchg
cmp
mov
lds
lcall
sub
push
jl
cmpsb
addl
add
sahf
fbstp
sub
jmp
jnp
mov
jle
jo
rcrl
inc
dec
inc
cmp
js
bound
out
pop
ret
xor
push
aad
stos
mov
bound
mov
pop
scas
sbb
fisttpll
mov
out
das
dec
test
mov
div
imul
sub
iret
or
fcmovu
pop
cltd
mov
lcall
js
or
int
pop
jmp
xchg
jo
pop
jae
insb
xor
xchg
dec
dec
in
int3
or
lods
xchg
js
mov
cmovg
shrb
mov
pop
jno
popf
adc
push
and
add
cmpsl
stos
sub
push
ffreep
dec
movl
shrb
test
jmp
cmp
fs
mov
mov
dec
xchg
pusha
cli
adc
jmp
cmpsl
test
mov
popf
pop
popf
mov
outsl
or
cld
addr16
ja
sbb
and
fiadds
lea
aam
or
mov
mov
aad
dec
repz
mov
int
pop
mov
fmuls
je
popf
jbe
cmp
xchg
ret
repz
imul
jae
dec
sbb
adc
adc
pop
pop
es
fadd
fildll
xchg
movsl
add
mov
aad
jl
leave
nop
cmpsl
cmp
mov
mov
mov
out
divl
xchg
loope
jo
das
xor
push
lahf
or
ret
push
push
bound
rorl
jp
shr
cmp
enter
je
clc
shrb
jmp
push
out
pop
into
push
jnp
jmp
push
adcb
gs
mov
in
shlb
outsb
sbb
call
leave
lock
mov
insl
xor
call
dec
adc
cmp
mov
adc
ljmp
out
push
xor
repnz
stos
pop
mov
enter
stc
jp
mov
ret
cs
in
mov
mov
fcoml
movsb
mov
jecxz
inc
mov
push
addr16
sub
aaa
subb
dec
je
jp
push
cmp
fnstsw
stc
addl
ja
pop
or
rcrl
test
push
mov
mov
push
lahf
repz
mov
int
jmp
test
jnp
or
or
jns
add
movsl
iret
sub
cmc
inc
push
mov
adc
repz
rolb
mov
jb
in
lret
mov
xor
popa
rorb
dec
add
mov
rcl
in
comiss
ja
shlb
lahf
add
mov
pop
jnp
xchg
pop
jnp
in
xchg
gs
popf
sbb
loopne
or
insb
pop
movsl
push
sti
gs
xchg
sahf
in
pop
stos
out
lds
loopne
popf
sub
xchg
add
mov
sbb
pop
fdivrs
push
bnd
stos
dec
adc
xchg
push
lods
lahf
adc
inc
inc
lds
xchg
popf
ss
out
aam
ljmp
out
mov
imul
or
repnz
test
sti
bound
jecxz
add
push
shl
fsubs
test
mov
in
in
mov
jne
mov
clc
ja
fwait
dec
std
enter
lods
sbbb
in
jecxz
adc
push
or
jbe
cmpl
xchg
mov
jmp
sar
cmp
in
jge
dec
push
push
aas
outsl
xlat
adc
out
pop
cmp
ds
mov
in
fwait
popf
xor
xor
cmpsb
leave
cmp
pop
bound
xchg
lret
add
mov
lock
out
lea
add
sub
fbstp
les
jne
mov
cmp
fsubrs
incl
pop
cmpsl
ss
test
cmp
sbb
sub
fildl
test
cltd
stos
push
insb
mov
ret
adc
or
popa
fisubs
lret
inc
mov
cmpsb
pop
sti
sub
pusha
lahf
or
repz
sub
push
push
add
cs
clc
push
dec
mov
fcoml
fldt
mov
dec
push
hlt
aas
loopne
xchg
xchg
je
jo
push
add
xchg
push
jns
leave
jns
mov
leave
mov
push
popa
xor
shlb
lods
out
test
scas
add
sbb
push
inc
sub
jecxz
clc
or
mov
dec
std
and
cmp
cmp
popa
imul
dec
pushf
push
cs
fcomip
fidivl
push
addr16
jmp
sbb
cmp
jno
mov
cmpsb
jl
add
cmp
fdivp
nop
mov
xchg
outsl
pop
stc
or
out
sub
loope
jge
sub
sub
shlb
out
fisttps
add
stos
push
mov
repz
mov
sbb
pop
push
or
das
push
and
push
lret
sbb
lock
jnp
dec
cmp
mov
iret
cli
aas
fisttps
and
scas
mov
sub
jo
pop
shrb
xchg
fsubrs
xor
popf
mov
mov
and
iret
hlt
jo
mov
ja
mov
sbb
xchg
add
cmp
fisttpl
lods
push
adc
sarb
jo
insb
insl
ss
fcompl
mov
loopne
jg
scas
test
pop
into
pop
jecxz
mov
cmp
adcl
dec
xorb
sti
sbb
and
sbb
movsl
push
jl
in
cmp
add
ret
sub
sbb
add
inc
sub
je
sarb
imul
sub
mov
dec
outsl
pop
cmpsl
das
pushf
fisttpl
pushf
push
xchg
je
in
mov
jo
pop
jae
std
xor
jge
pop
jp
inc
popf
add
sub
sub
pop
in
call
jge
movsl
in
movsb
push
out
pop
add
in
pusha
or
and
sbb
sbb
bound
push
popf
dec
mov
push
push
fsubs
in
outsl
or
or
cmpsl
data16
enter
cmp
daa
sahf
adc
sub
daa
xor
sub
jns
sbb
pop
leave
fs
daa
insl
adc
add
mov
jmp
jge
mov
jmp
xor
scas
fxtract
sbb
test
mov
ret
dec
cmp
ret
ds
sbb
jnp
scas
ret
mov
insl
inc
pop
jns
jmp
loopne
adc
mov
ja
push
dec
shr
fs
ja
cmp
dec
decb
jmp
lcall
sub
jge
mov
jne
push
jnp
fnstcw
outsb
pop
pusha
sahf
lods
mov
mov
pop
adc
push
stos
and
pop
pop
lods
fdivrp
mov
jmp
ret
inc
pop
pop
mov
sbb
jge
lret
pminub
pop
imul
in
mov
sub
pop
pop
and
scas
lret
dec
nop
out
fcmovnbe
jecxz
cld
pop
xor
or
mov
lds
subl
xchg
inc
aas
and
adc
cwtl
inc
pop
push
push
dec
push
inc
pop
add
aam
push
sub
jae
push
xchg
rcl
inc
xchg
cmpb
ret
aam
mov
cmpsl
aas
pop
jno
mov
mov
mov
xchg
rcl
inc
es
mov
xchg
scas
pop
pushf
outsb
inc
mov
out
xorb
xor
mov
notl
sub
stos
sar
push
pusha
xor
stos
fst
enter
fimull
push
adc
xchg
cmp
imul
les
int3
iret
xchg
mov
cmp
ss
pusha
xchg
lock
in
stc
sbb
xchg
repnz
int
in
outsb
push
xchg
loope
or
icebp
sarb
adc
xchg
lods
mov
test
xor
push
push
roll
fnstsw
movsl
sub
xor
push
and
xchg
jne
mov
lret
xchg
push
push
lahf
and
js
adc
adcb
scas
sub
addl
into
and
jae
push
jle
pop
push
pop
push
sbb
hlt
test
icebp
or
dec
outsb
std
or
push
jl
cs
mov
add
mov
mov
mov
jbe
scas
push
arpl
xchg
xor
cld
loopne
jns
or
pop
sbb
pop
je
out
aad
imul
mov
cmp
mov
mull
sar
pop
scas
pop
outsb
fcmovu
cmpl
adc
add
jnp
jbe
sub
in
xor
das
mov
test
shrb
repz
push
call
mov
xor
ja
push
arpl
and
and
jae
and
fstpt
jbe
fidivl
push
mov
mov
jo
stc
xchg
fwait
dec
adc
aam
call
imul
pop
push
shlb
test
sar
insl
out
fsts
lret
icebp
sub
rol
and
sub
push
mov
cmpsb
aam
dec
jle
add
or
or
mov
xlat
js
xchg
daa
cmpsb
xchg
cmp
cwtl
je
pop
fidivrl
mov
notb
sub
stc
rorb
pop
mov
and
mov
fldcw
xlat
inc
push
lods
xchg
andl
adcl
jecxz
fwait
inc
push
push
inc
lock
out
cmp
aaa
in
xchg
cwtl
out
shll
push
sbb
add
out
fsubrs
imul
icebp
jmp
or
fmull
sar
or
adc
push
add
cld
loop
test
add
mov
testl
enter
lods
cmp
push
nop
sub
xor
repnz
insb
jecxz
mov
sbb
call
xchg
or
sbb
shr
pop
mov
sub
sti
mov
cmp
push
enter
dec
in
jae
aas
or
stos
dec
xchg
fdivl
push
adc
rep
add
out
xchg
outsb
arpl
mov
pop
out
das
jle
es
add
and
fsub
inc
or
and
xor
mov
xor
inc
sub
or
inc
push
mov
test
stc
xor
rcrl
cmp
pop
ss
jne
cmp
sbb
cmpsb
orb
push
mov
es
push
jo
jl
push
aas
stos
xchg
notb
sbb
les
jb
mov
das
in
and
push
xchg
cmp
push
pusha
inc
adc
jecxz
into
or
xor
aam
sti
push
sub
lahf
cmc
cmp
jp
adc
fmuls
test
pushf
out
fisubrl
add
pop
dec
xor
and
cwtl
inc
mov
xlat
mov
add
and
mov
or
add
sbb
jo
cmp
int
pop
addl
jae
mov
lret
ret
dec
cwtl
adc
fnstcw
out
insl
or
and
popa
dec
inc
xor
sub
fs
pop
ss
pop
add
js
aaa
notb
sbb
in
xor
or
cmp
lds
xchg
out
or
into
rorb
or
dec
lcall
add
cmp
cmpsb
add
es
imul
cmp
or
dec
inc
pop
movsb
sarl
in
pop
out
mov
loop
mov
js
divl
xchg
ret
or
sub
scas
fs
sub
hlt
sbb
adc
in
or
mov
inc
loopne
pop
xorl
loop
testb
js
test
xchg
addl
pusha
clc
or
jb
sub
jb,pt
pop
or
aaa
cmp
dec
add
push
pop
sbb
test
das
out
cmp
inc
pop
push
add
jge
inc
jnp
push
xchg
sbb
jnp
icebp
or
or
jne
pop
arpl
sti
subl
addr16
or
pop
xor
in
xchg
mov
mov
jecxz,pt
in
pushf
or
bound
les
cs
xor
lods
loope
or
rcll
sahf
push
test
mov
inc
adc
cltd
data16
icebp
mov
in
rcr
in
push
in
cmp
mov
sbb
add
mov
loope
sbb
cmpb
rolb
in
and
pop
out
inc
aas
insb
pop
push
fsubrl
pop
das
pop
or
pop
mov
flds
fsts
das
mov
pushf
xor
mov
mov
add
js
push
mov
out
sub
jne
push
sub
sub
cmpsl
adc
adc
lods
cmp
insl
mov
and
jnp
pop
ret
fistpl
rcrl
sub
mov
or
sbb
vpsubusb
pop
xchg
cmp
outsl
stc
and
mov
cmp
bnd
dec
shrl
and
adc
adc
inc
push
sbb
xor
je
push
or
bound
mov
aas
xchg
add
sub
lock
jne
rcrl
int3
push
stos
dec
rol
ds
pop
adc
push
sub
clc
leave
lcall
cld
ja
int
or
imul
movsb
jns
mov
mov
cmp
out
and
test
sub
sarb
mov
push
push
stos
push
lret
cmp
dec
gs
enter
cli
mov
pop
ret
xor
fnstcw
arpl
jle
shl
outsl
pop
inc
jp
movb
sub
icebp
sbb
les
dec
scas
dec
rolb
shll
call
or
aas
dec
rcll
lahf
ret
movsl
movsb
push
out
cwtl
ljmp
push
xchg
outsl
addl
xchg
pop
or
call
push
cmpsb
xor
icebp
das
ja
roll
mov
and
std
xlat
xchg
scas
or
xchg
test
mov
jbe
mov
adc
ffree
rep
xchg
mov
imul
jge
push
shl
jnp
into
pop
lahf
cmp
xchg
cli
jmp
inc
mov
testl
popf
fcmovbe
pop
ljmp
sbb
lahf
lcall
mov
sub
or
jmp
cmp
pop
dec
inc
fidivrl
inc
push
xchg
inc
pop
bound
mov
ss
mov
imul
out
mov
sub
insl
rorl
mov
call
dec
gs
xlat
push
imul
or
mov
sub
loope
hlt
push
push
daa
add
lfs
cmp
or
push
sub
icebp
xchg
push
xor
bnd
dec
test
lea
sbb
sahf
in
sbb
cli
loop
mov
dec
ds
out
mov
lods
mov
data16
lock
dec
dec
mov
cs
imul
adc
loope
xor
push
movsl
sub
jge
and
ljmp
rorb
insl
sub
in
ss
in
jne
pop
and
fisubrl
push
jnp
pop
testb
push
xchg
test
test
jae
fiadds
sub
pop
pop
cmpsl
test
mov
pop
out
cmp
popf
or
push
fstpt
adc
movsb
std
mov
dec
nop
pop
les
push
pop
addr16
mov
aam
insl
mov
jb
pop
test
scas
imul
je
push
mov
out
rorl
insb
sbb
movsb
dec
icebp
fidivrs
mov
nop
add
fimull
cmp
adc
test
clc
push
frstor
es
jb
ljmp
rcrl
push
inc
std
dec
sarl
fiadds
push
pusha
cld
and
mov
pusha
aaa
xor
stc
mov
fsubrl
pop
dec
iret
push
dec
pop
movzbl
in
cmpsb
movsb
xlat
popf
adc
jecxz
test
dec
dec
mov
and
test
xchg
lds
mov
cmp
popf
cmpl
imul
mov
or
cmc
jnp
lret
dec
cmp
shl
xor
fdivrp
repnz
inc
enter
sub
hlt
movsl
sbb
insl
lahf
sub
mov
stos
dec
adc
mov
xchg
mov
inc
sbb
jnp
xor
cli
xor
ds
out
pop
fisubl
dec
push
sbb
push
dec
movsb
xchg
roll
inc
js
fsub
lods
adc
ljmp
inc
and
cmp
cwtl
mov
pop
mov
mov
cs
pop
xor
dec
jbe
adc
arpl
js
mov
mov
xchg
push
inc
cs
in
adc
sbb
cmp
imul
shl
in
outsl
sub
into
pop
mov
faddl
dec
jne
popf
add
ljmp
rolb
mov
push
pop
xchg
icebp
pop
xchg
mov
out
add
adc
sub
fs
adc
mov
xchg
jns
ret
add
dec
jg
push
push
adc
push
push
cmp
rcrb
or
popf
insb
pop
icebp
xor
scas
negb
je
lock
xchg
movsl
mov
ficomps
push
je
mov
cli
lahf
fidivl
imul
fstps
pop
lods
xor
cmpl
push
std
mov
cmpsl
test
push
fcomi
enter
jle
jge
mov
sbb
int
sub
mov
sub
jmp
in
jno
hlt
aaa
repnz
and
cltd
aad
xor
out
stos
insb
dec
mov
jp
inc
stc
mov
sub
lahf
lods
imul
mov
je
repz
lock
out
repnz
clc
jbe
int3
stos
jns
pop
int3
int3
jae
mov
adc
pusha
jnp
push
test
les
pop
or
xchg
mov
cmp
or
test
cmovbe
jp
repz
mov
mov
and
xchg
and
inc
lea
lret
xchg
inc
test
sub
sub
push
jmp
jmp
cmp
inc
and
mov
jbe
mov
cmp
clc
out
addr16
lds
pop
sub
ja
push
push
imul
mov
push
int
add
or
jl
outsb
std
adc
cwtl
iret
add
and
ja
lock
xchg
inc
popa
pop
pop
xchg
lods
pop
add
and
fdivrs
inc
mov
ljmp
aaa
mov
push
stc
or
pmulhw
js
cltd
jno
into
push
sbbb
les
cs
jp
or
clc
cmpsb
pop
push
scas
movsb
adc
xor
cmc
mov
adc
aad
test
mov
mov
out
cmpsb
pop
cmpsl
adc
repz
sbb
in
mov
mov
mov
int
popl
xchg
push
push
mov
sub
jo
fidivl
or
imull
xchg
adc
sbb
cmp
jbe
cmpsl
sub
xchg
xor
jno
idivl
push
cmp
int
mov
lret
addr16
dec
jne
and
jnp
pushf
xor
jo
sbb
ficoml
lock
out
in
pusha
inc
jbe
mov
ja
pop
push
add
push
out
jae
jle
mov
sbb
mov
aad
mov
mov
mov
idivl
mov
hlt
loop
int
pop
icebp
int3
push
hlt
fwait
cmp
cmp
jmp
ficoml
insb
xor
inc
call
aad
xor
lock
nop
test
shrl
mov
adc
cmc
je
xchg
test
aaa
fisubrs
pop
into
out
inc
push
mov
test
add
movsb
cwtl
dec
mov
in
mov
xchg
inc
mov
movzwl
push
mov
push
xchg
sbb
add
push
mov
pop
sbb
sub
mov
lahf
std
negl
loop
or
repz
xchg
xchg
outsl
fsubrs
js
sub
add
dec
push
xor
lds
sbb
jp
mov
jno
out
xchg
sahf
jge
dec
xor
ret
aas
nop
push
inc
rorb
dec
mov
pop
fildl
lahf
adc
and
cmpsb
in
cli
and
lods
xchg
jg
sarl
push
inc
test
test
mov
add
insb
lods
gs
and
aam
adc
push
mov
lahf
aad
sub
nop
cmpsl
je
leave
fnstenv
hlt
jmp
mov
gs
mov
lret
xchg
fidivl
push
popf
les
cmp
imul
mov
dec
jmp
mov
dec
scas
sub
and
and
rcrb
xchg
xor
mov
mov
mov
cmp
ljmp
fstl
loopne
lods
fcmove
and
adc
pop
mov
or
mov
pop
mov
stc
jle
sub
push
sub
add
xor
ds
sub
out
and
fisubs
mov
adc
shrb
shlb
jl
dec
pop
mov
or
push
js
lock
and
inc
das
repz
mov
mov
inc
lds
xchg
push
inc
lret
cmp
and
sub
sbb
sub
xchg
mov
push
sahf
inc
adc
les
movsl
add
popa
pop
mov
pop
mov
pop
pop
mov
lods
cmp
inc
sub
ret
mov
jle
adc
add
fsubrs
test
sub
mov
or
fsubr
adc
inc
add
out
outsb
fdivr
int3
mov
jge
dec
xchg
dec
addr16
cmp
pop
xchg
and
loope
lds
inc
icebp
fidivrl
push
pusha
pop
pushf
inc
push
lock
cmpsb
es
loopne
add
xchg
pop
mov
stc
in
lods
mov
cmpl
xchg
lea
adc
js
ja
jecxz
mov
add
mov
sub
push
xor
rolb
aaa
jmp
aas
rclb
es
add
mov
sub
inc
sbb
cs
pop
aas
rorb
fistl
mov
pop
push
popa
in
jmp
out
inc
fisttps
jl
ja
and
adc
out
loop
xor
mov
gs
xlat
pop
mov
inc
mov
push
push
imul
imul
mov
ret
out
loope
jno
xor
adc
ret
je
or
and
xchg
and
or
pusha
mov
ret
rolb
xchg
mov
je
arpl
jne
xchg
mov
pusha
vpsubusw
ja
mov
sbb
pop
ja
or
jle
loope
jle
sbb
loop
les
sub
and
sub
and
lret
jmp
inc
lcall
fucomp
mov
sbb
test
lds
lcall
xchg
sub
jg
and
inc
cmp
pop
aam
mov
xor
mov
xlat
call
ficoms
std
fwait
pop
ret
jl
in
push
push
les
test
cmp
aad
push
test
add
sbb
pop
mov
pop
or
shr
in
dec
xor
xchg
and
push
stos
repz
call
jbe
pop
or
testb
xchg
inc
push
cmp
out
sub
push
arpl
push
jno
pop
ljmp
adc
mov
stc
cmp
sarb
aam
or
dec
adc
jae
and
cmp
jmp
xlat
sbb
fsubr
or
insb
xchg
das
mov
and
lea
enter
pop
mov
cld
mov
mov
arpl
test
call
pop
mov
sti
sbb
andb
mov
in
pop
inc
inc
rcl
in
outsl
pop
lds
pop
xchg
ljmp
mov
out
push
call
mov
mov
or
add
mov
cltd
pop
lret
mov
xchg
ret
jbe
jae
in
gs
cmpsb
pop
imul
lock
push
inc
shll
dec
fwait
mov
scas
insb
test
aaa
out
imul
popl
mov
es
xlat
divl
add
cwtl
cs
xor
gs
popa
cmpsl
addr16
or
loopne
icebp
inc
out
add
adc
cwtl
or
call
imul
out
inc
fisttpll
and
sbb
es
cmp
cltd
push
xor
mov
mov
leave
and
js
and
movsb
sti
aaa
dec
push
call
cmp
rcrb
sahf
inc
add
jg
lahf
stos
dec
mov
imul
insl
aas
ljmp
jp
scas
mov
xor
rcrl
stc
int
mov
xchg
popf
fildll
jmp
pop
sub
imul
or
jmp
clc
popf
hlt
dec
xor
sahf
jns
dec
xor
lods
fcomp
cmpl
into
sub
push
hlt
xchg
pop
scas
cld
lods
fs
jb
cmp
leave
inc
xchg
lret
jo
mov
into
push
add
mov
mov
leave
inc
pushl
test
mov
das
mov
or
pop
bound
pop
scas
sbb
popa
mov
loop
sbb
daa
std
or
aam
mov
push
ss
adc
push
sbb
rcrl
imul
pop
jns
fistps
mov
and
pop
xor
inc
push
or
aaa
ss
dec
popa
pop
push
mov
pushf
xchg
pop
jnp
mov
lret
aas
cli
push
lock
leave
fsubr
xor
or
cmpsl
sub
inc
pop
adc
jmp
pop
push
xor
icebp
mov
push
mov
sbb
loopne
ret
inc
push
adc
int
test
xchg
mov
int
insb
mov
data16
es
dec
add
xor
sub
lods
cld
pop
xor
notb
sti
lds
mov
das
cmp
cmp
xchg
cmp
insl
or
fidivrl
sub
sbb
add
dec
sbb
std
jge
or
mull
xchg
sub
push
clc
pop
xchg
or
add
sub
fbstp
clc
pop
xor
fstps
into
jmp
leave
in
sub
push
pusha
mov
adc
dec
jnp
call
push
push
mov
das
hlt
jecxz
ljmp
outsb
nop
pusha
sub
lods
mov
cmovnp
mov
je
subb
arpl
cvtpi2ps
and
jle
rcrb
push
out
test
add
cmc
pop
sbb
and
push
sbb
jl
push
testb
mov
ja
cmp
xor
jmp
sbb
push
mov
aam
imul
ljmp
sahf
push
inc
int
xor
cmp
mov
gs
mov
aaa
clc
mov
cmc
add
jo
ret
cmp
orl
jecxz
fadds
mov
jbe
pop
scas
xchg
sbb
inc
ret
inc
dec
addb
cltd
adc
xor
inc
test
lock
and
and
jge
inc
jmp
cli
xchg
mov
cmp
lret
cs
xchg
mov
outsb
add
lret
mov
test
jns
add
sub
aas
fdiv
inc
mov
inc
sbb
stos
inc
in
aad
movsb
pusha
jp
pop
and
pop
push
jnp
adcb
pop
stos
push
lcall
mov
mov
sbb
lock
add
pop
repnz
sarl
xor
sub
mov
xchg
pop
xor
xor
jb
push
mov
mov
adc
in
adc
xchg
jno
ret
jecxz
add
fs
add
movsb
mov
mov
push
adc
ljmp
into
movsb
dec
insl
clc
jmp
addr16
and
std
std
daa
jmp
jae
repz
pop
xchg
add
repz
imul
push
iret
addr16
lret
fdivs
pop
ljmp
sbbb
lret
pop
push
scas
add
lret
xor
or
cmp
fldenv
sarl
inc
inc
pop
adc
jp
fimull
push
xchg
pop
xchg
fists
out
addb
push
pop
add
decl
dec
mov
movsb
pop
and
hlt
dec
dec
je
mov
mov
sub
push
mov
push
imul
push
xchg
and
cmpb
dec
lods
ljmp
jno
dec
in
xor
jns
inc
addr16
ja
mov
adc
cmp
out
sub
adc
pop
aam
adc
sbb
rorl
movsl
leave
in
and
mov
mov
lret
xchg
movsl
and
push
xor
outsb
jo
ja
cmp
sub
ds
fidivrl
sti
cmovle
cmp
cli
imul
sahf
add
out
xchg
sbb
fwait
movb
push
scas
sbb
push
test
adc
cltd
or
cmp
push
push
aad
cmpsb
add
loop
jmp
les
adc
cwtl
inc
divb
imul
addr16
mov
pop
xor
adc
divl
inc
in
fwait
out
jb
push
lock
shr
and
aaa
mov
mov
movsl
fmuls
orl
lock
outsb
hlt
lods
in
sahf
nop
mov
in
sbb
movsl
xchg
and
xor
or
dec
jbe
adc
fisubl
dec
lods
cmpl
xlat
or
mov
ljmp
pop
mov
test
mov
cld
je
dec
push
stos
cmp
mov
std
fnstsw
lret
xorb
cmpl
loope
or
jp
adc
ljmp
push
sbb
inc
fisubrl
lcall
push
mov
push
xchg
scas
insl
jmp
push
push
sbb
int3
inc
jnp
pusha
mov
or
stos
movsl
adc
xchg
mov
lahf
mov
ljmp
mov
in
xchg
xor
or
fsubrl
mov
jmp
xchg
mov
sarl
fdivrp
push
adc
testb
jno
jp
lea
mov
aad
sahf
sbb
add
out
cmp
sub
lods
shll
jg
dec
jmp
aas
fisubrl
lret
jns
jo
ja
mov
mov
add
and
or
jecxz
in
and
mov
outsl
xchg
dec
mov
scas
and
popa
hlt
movsl
cmp
mov
sbb
in
dec
std
mov
mov
sbbl
outsb
into
mov
jne
mov
sbbl
mov
mov
pushl
adc
shr
push
dec
int
sbb
jne
push
bound
arpl
jl
nop
aad
movsl
into
loop
add
xchg
les
popa
shrb
push
bound
cwtl
testl
pop
ret
xchg
xchg
push
out
adc
or
lds
sub
or
dec
cmp
mov
cmp
icebp
dec
std
dec
int3
mov
pop
pop
mov
lds
jg
rclb
sub
and
arpl
nop
es
sarl
out
push
mov
mov
xor
fwait
rclb
nop
push
leave
jl
pushf
mov
movsb
and
lret
aaa
mov
dec
lcall
mov
mov
gs
xchg
add
adc
pushf
inc
gs
jmp
rorb
push
lcall
icebp
fsts
inc
sbb
aas
jp
rclb
cmp
push
aas
aas
xorb
push
and
mov
mov
insl
test
nop
push
pop
cmp
lods
popf
jmp
adcl
bound
mov
out
out
mov
lds
push
les
xchg
pop
jp
loope
cwtl
and
divb
mov
mov
lock
pop
hlt
inc
dec
mov
dec
loope
ret
lret
pop
sbbb
jns
in
dec
cltd
cmp
push
pop
test
icebp
mov
sbb
out
xchg
sbb
mov
cmp
in
into
stos
imul
roll
sbb
into
mov
int3
shll
inc
test
out
loopne
fs
dec
addr16
push
and
das
mov
stc
je
repnz
or
and
cmp
ss
and
mov
inc
fmul
push
mov
movsb
push
cmpb
test
dec
push
pop
stc
mov
sub
or
and
lods
out
xchg
fisttps
add
xchg
test
cmp
push
fs
ret
adc
pop
cmpsb
mov
imul
js
push
inc
loope
and
jae
push
push
or
test
sbb
sub
in
lea
rolb
ja
fists
ljmp
fimuls
mov
aam
lahf
int
icebp
xor
jecxz
jecxz
mov
dec
adc
arpl
xor
mov
sahf
adc
mov
ret
iret
aaa
insl
jo
and
jo
xchg
xor
sub
jmp
and
rep
fs
pop
mov
add
jae
cmc
icebp
sub
rcr
icebp
and
jno
fidivl
pop
sub
cwtl
dec
mov
jo
roll
sbb
jle
aad
hlt
orl
inc
shlb
xchg
rorl
dec
push
jecxz
dec
mov
fldl
cmc
xchg
lahf
jmp
jecxz
repnz
shrb
mov
dec
mov
xchg
xor
mov
inc
xor
jno
aam
sbb
add
mov
inc
and
std
jge
adc
sbb
movsb
jmp
mov
jae
loop
cltd
lret
fst
xor
cmp
push
cmp
jl
pop
call
jo
mov
fsubs
ljmp
add
push
rolb
or
ficoml
out
out
jge
mov
cmp
rcrl
add
shll
jmp
movsb
jb
lods
pop
add
inc
into
inc
ret
lcall
push
or
and
into
pcmpeqb
div
daa
xor
ja
fsubl
cmp
and
jnp
mov
cld
out
cmp
push
dec
mov
adc
mov
dec
jg
inc
in
pop
or
loop
jge
sbb
and
cmp
aad
mov
lds
jge
or
aad
jnp
inc
gs
sbb
ror
arpl
adc
vpcomb
sarl
xor
out
pop
cmpsl
sub
mov
mov
stos
mov
js
and
popa
repz
ror
xchg
mov
inc
add
mov
sub
insl
pop
adc
dec
jp
js
push
imul
cmp
mov
pop
stos
int
mov
mov
iret
lcall
imull
mov
mov
shrl
and
and
int
dec
outsb
test
sub
repz
add
inc
sahf
scas
xchg
xlat
mov
pushl
ljmp
pushf
incl
bound
jecxz
fimuls
out
pop
xor
fcmovnbe
cli
pop
lock
push
lods
lea
sub
std
in
and
cmpsl
enter
push
mov
sub
mov
and
mov
mov
pop
pop
imul
adc
cmpsl
xlat
outsl
pop
dec
or
jmp
ret
dec
aad
in
xlat
sub
call
ja
icebp
flds
popf
in
mov
push
inc
cmp
xor
adc
mov
popa
mov
mov
das
dec
cmpsb
fwait
sub
push
or
cmp
hlt
sti
int3
cmpsb
addr16
or
inc
mov
sbb
push
cmp
and
pop
popa
sub
outsb
and
jl
xor
mov
scas
xchg
clc
out
out
pop
sbb
in
mov
or
call
mov
nop
test
idiv
aad
movsb
mov
add
pop
xor
jg
mov
jge
adc
adc
dec
jl
hlt
test
enter
xchg
outsl
mov
arpl
sti
iret
xchg
mov
in
pushf
iret
and
je
out
aam
mov
cmp
aam
dec
xchg
sub
or
push
out
test
mov
lea
push
push
imul
cmpsl
push
ror
int3
pop
movsl
inc
cmp
ss
popa
jnp
mov
sub
aaa
cmp
mov
or
popa
mov
inc
repnz
xor
pop
roll
push
xlat
adc
stos
inc
add
popa
jnp
mov
xchg
sub
xor
jg,pt
inc
or
add
cmp
inc
dec
mov
cs
mov
enter
mov
fbld
or
dec
lret
mov
pop
enter
adc
pop
fisubl
pop
and
in
insl
dec
sbb
adc
cltd
mov
call
xor
fwait
je
cwtl
inc
mov
xchg
adc
pop
add
lea
add
fimuls
imul
repnz
int3
pop
add
push
out
xor
push
add
test
jo
inc
or
sub
cwtl
mov
mov
popf
decb
push
xor
push
in
or
jg
pop
div
je
pop
mov
mov
out
lods
dec
mov
lea
cmpsl
mov
fisubrl
jecxz
out
bound
cmpsb
mov
lret
fldcw
loop
shll
xchg
lcall
inc
mov
push
mov
xchg
iret
pusha
jno
mov
mov
lea
fwait
and
fstpl
mov
outsb
imulb
add
pop
pop
xor
leave
cmp
rcr
jg
mov
lods
sub
test
inc
and
out
les
and
movsb
loopne
mov
xor
testb
sbb
sahf
inc
wrmsr
daa
push
mov
std
aad
cs
xchg
pop
insb
mov
or
clc
jns
sbb
add
mov
dec
inc
out
push
push
jp
push
mov
fcomps
out
mov
das
rep
push
jmp
std
loope
cmp
add
das
lock
jae
out
out
stos
bound
pop
jne
mov
mov
loopne
stc
inc
pop
cs
test
imul
fwait
cltd
lock
and
cmpsl
cmp
dec
jo
pop
repz
cmp
xor
push
and
mov
mov
mov
ljmp
clc
mov
stos
push
cli
pop
sub
lret
outsb
add
pop
mov
movb
pop
fisubrl
dec
scas
subb
push
pop
xchg
sub
push
or
hlt
xchg
hlt
scas
adc
mov
sbb
xchg
pop
pop
aaa
xchg
sbb
sub
pop
and
aas
or
insb
lods
adc
inc
sub
pop
jg
call
rcr
data16
out
fdivrl
lret
add
popf
dec
lahf
js
bnd
aaa
divl
and
cmp
in
mov
adc
sti
data16
shlb
mov
dec
mov
rclb
insb
mov
inc
push
mov
int
inc
add
inc
insl
mov
lods
dec
addr16
jne
lret
xchg
in
clc
mov
mov
pop
push
shrl
lcall
sbbl
pusha
loope
lock
dec
dec
mov
fcomip
loope
pop
rcl
negb
int
mov
sub
icebp
dec
nop
pusha
and
dec
pop
in
fidivs
jb
fldt
mov
xorl
clc
scas
inc
mov
stos
ret
push
in
fwait
mov
inc
pop
inc
jmp
mov
insb
sub
das
ss
fprem
mov
loopne
jmp
cmp
cmpsl
cmp
andb
lock
into
ss
loope
or
sahf
fwait
push
mov
xor
pop
jl
popf
hlt
lret
jge
or
push
pop
sub
fisubrl
mov
sti
mov
nop
popa
sbb
sbb
jmp
xchg
bswap
mov
call
pushf
add
hlt
and
push
incb
imul
add
mov
and
xlat
lods
pop
fnstenv
xor
cmp
jne
inc
aas
hlt
ficoms
lock
scas
jae
or
jnp
enter
mov
dec
adc
aas
sbb
mov
in
push
add
inc
xor
jno
comiss
cmpsl
mov
les
cmpsl
paddd
inc
stc
jle,pt
adc
and
dec
and
cld
fnstsw
test
pop
adc
mov
out
mov
and
cmp
push
and
adc
mov
jns
or
or
jo
or
add
ja
into
mov
pop
fucom
dec
int
cli
sub
out
shll
mov
dec
repnz
and
test
cmp
out
cmp
negl
cmc
arpl
lcall
or
pop
popf
call
push
popa
sahf
push
xchg
movsl
cmp
pop
seto
adcb
sbb
cmpsl
xor
mov
add
xor
push
jecxz
xchg
mov
push
push
call
ds
cwtl
cmpl
sbb
or
test
push
cli
lods
sub
xor
int3
inc
push
inc
ret
xor
adc
mov
pop
xor
xchg
lods
sub
loop
pop
mov
movzbl
fsts
sahf
jmp
fs
lret
out
push
ss
sarb
imul
insb
and
push
xor
mov
pop
adc
jge
movsl
dec
xor
pop
faddl
xchg
js
lods
jge
and
mov
je
call
out
orb
icebp
fists
xor
jp
inc
or
dec
pop
insb
sbbl
enter
hlt
data16
mov
push
mov
inc
push
ljmp
aas
enter
out
sbb
stos
add
inc
jecxz
insl
cltd
pop
insb
pop
cltd
jno
add
mov
aam
fdiv
je
or
sbb
jle
int
cmp
mov
cwtl
outsb
inc
sub
or
inc
jne
xor
sub
int3
or
dec
frstor
cmp
push
enter
stos
stos
inc
das
push
mov
adc
dec
or
je
ljmp
jg
lret
or
xorb
sbb
outsb
sub
inc
insb
xchg
pushf
dec
mov
xchg
dec
push
mov
add
push
add
sub
xor
int
inc
add
adc
add
test
leave
mov
mov
adc
arpl
mov
push
xor
movsb
test
stos
cs
enter
in
and
lret
sbb
filds
icebp
jp
xchg
mov
dec
fwait
icebp
xchg
movsb
mov
push
mov
adc
dec
js
imul
xchg
bound
adc
cwtl
fisubl
adc
or
lods
xor
sarb
mov
push
ret
lea
sub
jns
test
or
stc
xchg
stc
sub
jne
and
js
mov
adc
jnp
sbb
mov
out
jbe
ljmp
hlt
movsl
push
inc
fs
ret
cld
push
mov
xorl
ret
sub
mov
idivb
pop
mov
fstp
jecxz
aaa
inc
mov
lcall
div
lock
lahf
mov
fcomps
inc
and
cmp
push
mov
xor
insl
and
aad
mov
adc
mov
or
bound
mov
inc
iret
mov
xor
lea
into
lds
sub
sbb
inc
jae
std
cwtl
mov
mov
sub
lods
sahf
insb
bound
push
enter
stos
into
aas
pop
jmp
movsl
repnz
add
cmp
outsl
fistps
pop
in
je
les
pop
fsubrp
fistl
jno
arpl
inc
lret
jo
jae
mov
pop
adc
lret
jecxz
mov
inc
enter
insl
cwtl
push
aam
pop
ljmp
fisttpl
call
xor
cmp
pop
mov
idivb
stos
stos
andb
add
pop
mov
pop
adcl
xor
push
adc
aam
jae
jb
pop
shl
stos
in
mov
jns
jns
jo
lods
mov
in
sub
fimuls
and
xchg
pop
leave
test
inc
fistpll
js
mov
mov
xor
mov
pop
sbb
adc
mov
mov
stc
mov
movsl
xor
mov
imul
inc
stos
icebp
popa
ret
add
push
cmp
cmp
jns
test
popa
xchg
and
fcoml
pop
call
jle
xorb
cmpsl
popa
cmp
rorw
data16
add
data16
loopne
mov
sbb
add
add
rcrb
adc
xor
mov
adc
sub
dec
dec
inc
scas
or
inc
imul
mov
arpl
jle
jle
or
mov
sbb
xor
cmp
subl
mov
roll
jb
repnz
mov
and
popa
pop
sbb
and
aas
outsb
arpl
mov
std
rorl
add
push
mov
xchg
xor
movsb
pusha
add
call
roll
mov
mov
xchg
push
ja
loop
push
lock
or
lret
cmp
stos
xchg
icebp
pop
int3
xchg
adc
loopne
sub
mulb
push
add
cmp
xchg
dec
daa
push
mov
push
cmp
dec
fistps
ds
or
mov
push
fmulp
jmp
jmp
xchg
aaa
push
nop
add
sub
add
popa
lods
nop
adc
iret
filds
mov
add
dec
cmpsl
mov
jge
and
sub
sub
arpl
sti
jle
mov
arpl
add
ljmp
add
sub
mov
pusha
out
or
sarl
fiaddl
add
loopne
jg
lds
std
ret
shll
inc
nop
call
and
xchg
subb
mov
jg
jl
sbb
xchg
and
cmp
arpl
push
stos
filds
xor
push
pop
lods
push
mov
lret
fstp
pusha
pusha
std
sbb
andb
and
add
cmp
push
and
cld
test
push
lret
add
jno
repnz
lret
popf
mov
sbb
stos
loopne
pop
lods
xchg
andb
or
shlb
pop
clc
xor
loopne
loop
imul
mov
les
scas
enter
cmp
ja
sbb
pop
rorb
pop
and
mov
jns
pop
sub
mov
dec
ja
movsb
xchg
mov
jmp
mov
adc
cmp
jae
add
bound
out
and
int
insb
dec
jle
pop
mov
mov
dec
xchg
push
cmp
push
lcall
sbb
lret
mov
rol
xor
pop
lock
mov
loope
push
xchg
andb
bound
fstpl
sti
je
push
mov
sub
push
push
rol
lods
pop
mulb
mov
cmp
or
aam
rorb
bound
outsl
clc
in
paddq
or
mov
mov
jle
dec
and
jmp
iret
jp
jns,pt
xor
pop
adc
icebp
mov
daa
adc
pop
int3
and
std
lods
pushaw
nop
xchg
imul
pop
ljmp
cmc
addl
je
mov
adc
mov
add
fucomi
mov
cmp
mov
pop
popa
inc
inc
sub
pop
sti
xor
and
leave
lods
mov
push
add
scas
or
lock
inc
inc
adc
je
idivl
imul
add
pop
mov
xor
inc
daa
mov
pushf
out
roll
addl
push
xchg
adc
cli
cltd
jmp
sbb
int3
in
mov
fs
jge
xchg
cmp
pop
cmpsl
xor
mov
repnz
pop
xor
push
jbe
or
popf
loope
shrl
out
xchg
pop
dec
test
push
enter
or
mov
adc
mov
lret
fs
sbb
je
jnp
stos
xor
fwait
scas
sbb
lea
mov
xchg
and
scas
inc
arpl
push
out
pop
push
rcll
jbe
adc
dec
jnp
xchg
pushf
mov
das
push
xor
imul
mov
xchg
hlt
push
insb
cmp
sbb
test
lods
push
dec
stc
add
aas
or
adc
out
dec
mov
repz
jecxz,pn
adc
popl
pop
push
sbb
push
mov
test
gs
add
insb
dec
movsl
fsincos
cmp
rolb
insl
ss
adc
dec
cmpsb
shr
xor
fadd
cmpsb
adc
pop
cmp
stos
cmc
and
xor
xor
xchg
jne
outsb
push
retw
stos
sub
mov
or
xor
loopne
in
mov
push
cmp
or
cmp
and
lret
ficoms
movsl
outsl
sahf
pop
mov
push
rclb
mov
out
pop
mov
mov
xor
jmp
subb
repz
mov
adc
mov
mov
jnp
sub
adc
call
ror
aad
mov
xor
jns
mov
dec
lods
out
xor
jle
enter
repz
aaa
lock
pop
test
fwait
cmpsb
and
pushf
sahf
repnz
movsl
shlb
clc
cmp
cld
jmp
std
cs
jg
repz
pop
or
jno
cs
in
insb
iret
punpckhdq
cmpb
mov
ret
push
mov
out
xchg
or
pop
popa
mov
jmp
lods
sbb
and
pop
sahf
lret
fsubrp
pushf
and
mov
sub
repz
fsubr
gs
push
leave
nop
cmp
loopne
jae
or
or
xchg
jbe
nop
push
dec
shll
into
pop
mov
lahf
mov
mov
push
lods
xchg
ja
test
dec
xor
ret
mov
jno
iret
push
pusha
dec
les
push
mov
adc
add
push
add
xor
aad
push
orl
dec
shl
adc
add
sbb
mov
mov
sbb
cmp
xchg
jbe
out
pop
lret
add
xor
cmpsb
loop
pushl
xor
jb
mov
popa
jecxz
imul
lcall
xor
xor
lods
hlt
ror
das
call
ret
movsb
out
add
or
mov
xor
mov
enter
aam
sti
fdivrp
test
jnp
adc
fdivp
jo
leave
mov
mov
pop
fcom
jecxz
sbb
nop
sub
jnp
test
out
icebp
adc
dec
pop
lods
push
cmpsb
jne
test
imul
cltd
or
dec
push
dec
sahf
aad
in
out
adc
fwait
clc
fwait
mov
cmpsl
enter
mov
push
lcall
jle
mov
enter
stos
push
repz
jno
test
lret
sbb
inc
mov
mov
push
stos
out
fptan
push
xchg
xchg
imul
out
mov
out
push
and
cmp
call
rcr
ja
cli
mov
dec
out
push
xorl
iret
in
sub
sbb
dec
jbe
cmpl
fld
or
push
pop
rcl
xchg
sbb
cmc
sub
test
inc
cmp
dec
leave
jmp
cmp
pusha
stos
cmpsl
sbb
adc
aaa
mov
pop
mov
popl
loopne
sbb
lds
push
aas
adc
ficoms
sub
ret
in
sbb
pushf
mulb
in
cmp
mov
addb
xchg
aas
in
mov
push
jg
movsl
arpl
rorb
lock
addr16
iret
test
rclb
dec
mov
add
lods
pop
mov
scas
pop
dec
or
push
dec
xchg
lock
mov
xor
pop
popa
mov
fcoml
ret
shll
ds
insb
cld
loop
rcrb
ss
mov
jo
cmp
cmp
out
mov
sub
xchg
and
scas
jns
fdivrs
mov
dec
xchg
std
lret
mov
lea
xchg
mov
sub
movsl
movsb
jae
dec
jno
jnp
in
mov
mov
add
inc
in
pusha
test
push
add
push
popa
data16
pop
mull
cmp
push
sbbb
push
adc
scas
fdivl
xlat
mov
divl
sub
test
cli
enter
pusha
push
mov
cmp
or
pop
repnz
addb
sar
aas
lock
fmull
into
mov
add
divl
and
fadd
ljmp
adc
sarl
js
push
mov
inc
inc
cs
imul
fcoms
xor
out
mov
pop
mov
inc
lcall
or
test
xchg
inc
popa
xchg
fdivl
mov
repnz
pop
or
xor
push
adc
xor
lcall
push
mov
mov
dec
jmp
cmp
popa
leave
xor
mov
push
rolb
lret
fstpt
sbbl
push
jno
into
loopne
inc
dec
mov
jecxz
and
and
dec
push
fidivl
dec
push
mov
loope
mov
push
jl
and
push
xor
test
xor
cmp
jno
or
sbb
and
jp
hlt
iret
test
insl
xor
xor
ror
mov
out
jmp
xchg
ljmp
ss
out
mov
call
icebp
cld
insl
dec
and
push
inc
xchg
rclb
add
rclb
adc
adc
inc
arpl
add
mov
pop
sarl
mov
lret
xor
addr16
pusha
popf
out
shll
movsl
imul
cmpsb
xor
add
outsl
es
xlat
cmpsl
or
pop
mov
in
cltd
xchg
shll
xor
mov
xchg
or
xor
xchg
cltd
add
inc
adc
pop
xchg
aaa
jecxz
dec
lea
jne
lret
lahf
addr16
push
es
out
test
rorb
push
pop
xchg
xor
cwtl
nop
xchg
sub
jns
inc
and
mov
scas
hlt
push
dec
dec
push
add
popf
xor
dec
xor
dec
out
xor
push
or
lods
pop
outsl
add
icebp
pop
jbe
sbb
ret
aam
loop
out
hlt
add
cmp
nop
push
or
icebp
sub
jno
mov
sbb
mov
pop
fldl
lock
lahf
mov
and
and
add
adc
add
call
sub
dec
movsb
push
push
cmp
ficompl
xlat
lea
pop
cld
in
dec
cmc
cmp
mov
xchg
xchg
mov
push
cltd
loop
push
sub
jnp
dec
aad
pop
mov
jp
cld
cs
adc
adc
mov
lds
mov
test
jno
pusha
xchg
push
das
test
lds
clc
cld
insl
int3
xor
xor
bound
sub
xchg
pusha
xorb
mov
adc
hlt
push
mov
xorl
xchg
stos
cli
push
add
arpl
xor
call
xchg
aam
add
xor
cmp
ljmp
popf
aas
leave
es
add
dec
sbb
cmpsl
dec
pop
loope
lods
jg
mov
ret
inc
inc
cmpb
adc
mov
mov
and
inc
lods
repnz
mov
cli
stc
int3
cmp
xor
adc
adc
xchg
aam
push
and
push
lret
lods
imul
shl
cmpsb
ficomps
or
test
inc
push
cmc
outsb
pop
and
js
mov
xchg
outsb
dec
loope
xor
enter
in
cmp
jmp
out
inc
jb
pop
lds
cltd
imul
imul
enter
popf
inc
mov
and
aas
push
push
pop
loopne
push
icebp
test
cmpsl
pop
addl
xchg
mov
loope
push
out
push
pop
popf
rclb
or
or
xchg
cmp
mov
mov
adc
cmp
mov
daa
xchg
add
adc
xor
xchg
dec
outsl
lea
sub
push
stos
lds
idivl
sahf
push
mov
xchg
jbe
add
xchg
movsl
insl
dec
add
loopne
pop
iret
and
cld
sbb
ja
dec
cld
iret
pusha
ljmp
rclb
jne
andb
test
mov
test
mov
push
aad
xlat
jns
jp
pop
jbe
repz
into
ljmp
es
sub
pop
jno
das
mov
mov
xchg
pop
gs
mov
push
push
cwtl
mov
or
jecxz
pop
in
xor
stos
imul
adc
leave
movsl
adc
mov
cmpsb
inc
dec
dec
sahf
xor
push
es
aad
bound
test
fcoms
test
xor
rcl
mov
mov
vmulps
fimull
mov
pusha
rcrl
aaa
in
lret
clc
inc
cmpsb
call
ret
les
push
sbb
lock
cmp
push
xchg
cld
aam
outsl
imul
pop
sub
outsb
add
mov
imul
cmp
aaa
cmpb
push
xchg
int
icebp
pop
ljmp
lcall
test
leave
xor
clc
out
dec
mov
cld
aam
or
pop
mov
mov
inc
xor
mov
lahf
cltd
cli
pop
dec
sahf
rcrb
dec
add
and
fnsave
mov
leave
xchg
cltd
add
shr
test
mov
cmp
adcb
mov
pop
aas
jecxz
adc
push
pop
ss
mov
jbe
sbb
cmp
lea
jae,pt
test
fcoms
in
mov
adc
test
and
stos
push
orb
dec
xchg
mov
outsb
push
lods
cwtl
jmp
mov
jo
shl
adc
test
or
shrl
inc
lods
xchg
xchg
add
clc
test
mov
out
in
ljmp
cltd
cmp
sbb
loopne
mov
hlt
fs
aad
ss
gs
popa
pop
dec
stos
data16
or
insb
push
out
mov
sbb
push
add
repz
out
cmpsl
sbb
sbb
nop
add
inc
andb
xchg
pop
push
jmp
inc
aaa
adc
cmova
add
xchg
jge
je
into
sahf
out
js
leave
popf
sub
mov
lcall
mov
mov
adc
cmp
dec
je
jnp
add
mov
push
mov
fisubl
dec
xchg
jo
sti
sub
lea
cmp
mov
andl
cmp
inc
cmp
imul
enter
or
adc
or
bound
cmc
sarb
dec
mov
mov
jge
sbb
out
js
and
in
test
push
or
jp
ret
lahf
xchg
sub
adc
mov
pop
jmp
add
adc
xchg
out
or
lods
mov
jae
testb
bound
add
and
pop
add
xor
movsb
jp
fiadds
jbe
pop
clc
jle
arpl
sub
pop
scas
scas
fstl
sarb
scas
pop
sbb
pushf
repz
pop
int3
push
add
push
jae
dec
sub
xchg
pop
lods
mov
aad
call
je
mov
fwait
sbb
pop
mov
dec
sbb
iret
mov
dec
shll
push
mov
mov
and
dec
xor
pop
imul
inc
add
pop
dec
mov
xchg
and
lcall
mov
aas
sub
enter
and
arpl
dec
inc
add
mov
movsb
sbb
nop
loopne
jecxz
lcall
lret
stos
dec
std
push
mov
ja
leave
mov
jne
mov
dec
mov
xchg
pop
pop
repz
push
int3
int
pop
inc
aaa
mov
ret
cltd
dec
mov
jb
pushf
mov
inc
ss
mov
jb
pop
std
sub
sahf
mov
xchg
mov
dec
cmpsw
fs
sbbb
adc
add
dec
xchg
adc
push
lock
clc
jmp
dec
push
pop
fs
adc
adc
jmp
fildll
imul
cltd
jns
leave
jge
iret
frstor
pop
divb
sub
into
jnp
fmull
adcb
mov
je
fdivs
dec
and
mov
dec
push
out
pusha
nop
leave
add
and
cmp
roll
idivl
push
nop
inc
add
jae
xor
cmpsl
arpl
gs
xchg
pop
jnp
dec
pushf
lods
data16
mov
sbbl
in
jbe
or
out
cwtl
mov
or
les
movl
cmpsb
add
inc
loopne
popf
scas
add
ret
xor
push
mov
xor
repnz
cld
std
mov
or
enter
jecxz
rorb
dec
adc
aas
jns
dec
fcompl
mov
sahf
sub
cmp
pop
popf
jecxz
jne
arpl
ljmp
xor
adc
jns
lods
jae
test
inc
xor
push
jne
push
into
and
addb
mov
sbb
movsb
lcall
stos
pusha
xchg
push
js
pusha
xchg
call
sbb
mov
mov
sbb
xor
dec
scas
shrb
pusha
cmpsb
ja
fnsave
mov
xchg
xchg
pop
jg
add
jle
dec
iret
dec
ljmp
cld
int3
cmp
xlat
ficoms
mov
push
push
sub
imul
mov
jmp
cmp
mov
stos
mov
pop
pop
es
jge
cli
adcl
jg
enter
fyl2xp1
sbbl
push
push
xchg
mov
dec
testl
sbb
jp
dec
cs
mov
pop
pop
popa
xchg
pop
scas
nop
sbb
mov
rolb
pop
xor
jbe
fdivrl
sbb
jbe
cmc
rcll
cmp
xchg
dec
dec
fmull
mov
sahf
mov
or
aas
test
lret
imul
sub
and
fsts
ret
sarl
mov
sahf
push
inc
shll
aad
cltd
ss
loope
or
insb
mov
sbb
lahf
mov
jl
sti
push
scas
jb
mov
xor
in
ds
mul
xchg
add
pop
fstpt
and
lock
nop
jns
int3
sbb
lods
xor
int3
add
push
and
pop
gs
fs
pop
repnz
mov
mov
std
outsb
pop
mov
fidivs
das
imulb
pop
dec
sbb
jle
das
adc
mov
ds
cli
mov
push
cmp
lods
jbe
and
jecxz
jae
paddq
mov
fnstenv
mov
lea
aas
push
ror
aam
clc
sub
int
inc
push
cwtl
stc
gs
or
stos
cmp
push
ret
data16
decl
pop
jmp
push
jp
pop
test
shr
arpl
add
jg
clc
call
mov
pusha
xchg
mov
aad
push
push
or
das
aaa
jae
jl
jecxz
in
rcll
pop
sbb
daa
out
add
or
ja
mov
push
iret
imul
mov
xchg
jne
mov
pusha
sub
rclb
mov
adc
es
dec
lods
aad
mov
cmp
stos
or
test
vpsubq
loop
inc
movsl
or
fcmovne
xchg
notl
insl
mov
jl
scas
inc
inc
clc
mov
into
adc
jp
xchg
test
sbb
sbb
mov
cmp
inc
lds
ret
inc
pop
push
push
add
xlat
hlt
sbb
shll
sbbb
imul
psubq
cmpsl
cmp
mov
js
pop
jp
lcall
andb
sub
add
jns
dec
dec
xor
insl
ds
ret
lcall
xchg
cmpb
out
test
mov
lock
add
std
lods
cmp
roll
sub
imul
fbstp
les
es
jp
jo
pop
faddl
fwait
inc
xlat
xchg
add
sbb
outsb
xchg
insl
stos
pusha
and
fistl
and
xchg
lea
xchg
loope
cmpsl
xchg
enter
fisubs
jmp
jb
inc
or
push
stos
jns
rorb
mov
xchg
cmp
mov
mov
scas
or
mov
xor
call
bound
xor
xor
xchg
dec
aam
add
jecxz
mov
sub
mov
add
call
enter
ja
out
lahf
int3
dec
jne
fwait
cmpl
adc
adc
push
arpl
notl
movsl
mov
pop
push
test
dec
enter
std
clc
xchg
pop
jb
icebp
sub
aad
sub
sbb
aad
xlat
ret
rolb
or
int3
cmp
movsb
mov
in
or
jns
dec
add
test
xchg
cltd
or
jbe
sti
fwait
jbe
xchg
lds
xor
jo
xchg
jl
dec
aam
shrl
test
sbb
popa
cmp
mov
pop
or
enter
rcll
push
push
jb
mov
and
mov
ds
mov
add
mov
test
je
cmp
lds
pop
jg
mov
jmp
sub
add
pop
bound
push
xor
push
pop
mov
dec
int
jno
dec
mov
lods
xor
loopne
rcrb
mov
or
loope
imul
out
sub
xor
push
fidivs
cmp
lds
mov
into
hlt
mov
inc
push
cltd
sti
int
jmp
int3
sub
into
dec
jnp
adc
dec
jae
jecxz
stc
mov
incl
andl
sbb
sbb
fidivs
out
sub
loopne
mov
mov
gs
jbe
mov
outsl
mov
stc
jge
or
pop
mov
pop
lds
mov
inc
cmp
cmp
sub
push
mov
add
fidivrs
and
mov
clts
bound
sub
stos
push
xor
dec
inc
jmp
in
jle
jae
sub
test
cmpsl
sub
or
xchg
xchg
arpl
jmp
jle
mov
lahf
mov
pop
jmp
gs
inc
mov
aam
push
clc
sahf
cmp
into
inc
pusha
add
insl
dec
icebp
sub
lret
icebp
sub
dec
bound
adc
stc
fiadds
mov
cs
in
or
mov
pop
dec
jge
xor
mov
pop
outsl
icebp
testb
jo
or
cld
push
cmp
popf
sbb
mov
jmp
outsb
inc
xlat
add
mov
mov
in
pop
cmp
out
js
xchg
cmpsb
mov
mov
xchg
sahf
inc
adc
je
movsl
enter
dec
in
mov
roll
xor
rcrl
or
nop
add
jle
addr16
das
xor
outsl
push
adc
adc
or
jge
ss
jl
jl
lods
inc
inc
inc
imul
push
movl
xlat
or
js
insb
pop
push
ret
cmp
outsb
sub
cld
adc
ror
ds
or
mov
out
push
lahf
push
mov
jnp
push
pop
test
sbb
jecxz
mov
add
xlat
dec
sbb
or
sub
cli
or
cmp
jp
push
mov
pop
and
inc
sub
mov
pop
xlat
ss
andb
ljmp
shlb
sub
pop
pop
inc
lret
ss
add
xchg
cmpsb
std
sub
sub
adc
lods
cltd
ficompl
cmc
pop
cmpl
scas
lock
in
shll
jmp
xor
dec
push
ret
das
mov
mov
jp
movsl
mov
test
mov
xor
movsl
mov
add
cli
or
fisttps
or
outsb
shl
lds
cmc
cli
js
stos
pop
pop
orb
cmp
lcall
dec
jp
jo
gs
adc
push
scas
shlb
das
cld
add
pop
dec
ss
jno
popa
leave
scas
or
js
push
xchg
push
push
xor
xchg
adc
mov
dec
shl
or
fsubr
dec
fcoml
lea
adc
cli
das
and
jne
std
xchg
jne
mov
jae
repnz
mov
mov
push
mov
pop
in
jp
mov
sarb
lret
rcrb
loope
jns
ffree
sbb
push
out
fsubr
adc
jecxz
decl
test
hlt
fnstsw
mov
bound
and
xchg
jmp
nop
stc
xchg
lcall
and
mov
push
xor
lock
hlt
pop
push
ss
clc
jmp
add
shrb
inc
sub
push
daa
xchg
cmp
sar
or
or
inc
sub
xchg
stos
push
add
int3
push
clc
adc
insl
pop
out
mov
dec
sbb
scas
xchg
mov
jb
popa
mov
inc
mov
mov
mov
xor
sbb
insb
fdivl
add
cmp
mov
or
rcrb
jns
or
fcompl
lods
ret
test
and
outsl
mov
pop
pop
loop
aam
fwait
push
aaa
aam
jnp
enter
std
push
mov
push
fcomp
inc
shrb
mov
adc
push
push
fsubs
mov
es
sub
and
xor
adc
cmc
cli
iret
movsb
addr16
daa
mov
xchg
mov
ret
popf
test
test
adc
fisubs
add
and
xlat
stc
sbb
mov
push
pop
xor
push
fmull
jns
dec
adc
mov
sbb
push
push
push
sbb
out
add
das
bound
ret
mov
aad
cltd
jne
rcll
dec
mov
mov
inc
cwtd
cltd
decb
popa
test
pop
leave
cwtl
ja
out
and
lock
sbb
adc
rcr
mov
pop
fstps
add
loop
pop
pop
fisttpl
sub
mov
es
jne
lods
scas
les
pop
mov
and
cld
ret
pop
dec
adc
mov
cmp
mov
mov
jne
mov
orb
sub
pop
outsb
sbb
jne
lcall
mov
mov
push
lock
and
mov
pusha
shlb
or
mov
jb
push
out
pop
fsubp
push
mov
sbb
sahf
imul
pop
fnstcw
fldenv
push
add
ror
ja
loope
stc
sub
fcoms
ret
daa
mov
sub
jns
lds
xor
rcrb
imul
repnz
xor
frstpm(287
or
sub
shrb
xor
push
pop
xor
stos
sub
mov
repnz
push
sahf
dec
mov
adc
mov
pop
ds
mov
int3
inc
cwtl
out
out
clc
cld
mull
repnz
pop
and
mov
jl
rcrb
rcll
pop
fmuls
cs
add
test
popf
cwtl
movsb
shl
out
xor
push
mov
cmp
nop
or
sub
jmp
jecxz
push
jne
xlat
sahf
fcmove
pop
jecxz
and
xchg
xchg
mov
aad
call
mov
loopne
adc
pop
negl
mov
pop
ljmp
xor
push
mov
xchg
push
push
pop
mov
xchg
xchg
sti
out
or
loope
mov
mov
popa
outsl
addr16
test
rcrb
sets
test
daa
aad
stc
loopne
or
aas
icebp
sub
inc
mov
bound
pop
push
inc
and
icebp
xor
ret
je
scas
pop
sub
add
and
lods
jg
jo
subl
int
cs
inc
lods
cmp
subl
xchg
pushf
push
lret
xchg
adcl
sub
ficomps
adc
inc
inc
nop
jl
pop
aad
push
test
mov
leave
imul
mov
ficoml
shll
aam
inc
mov
imul
mov
or
fldlg2
inc
in
aaa
cmp
dec
loopne
fdivrl
mov
stos
xor
or
cmp
cmpsl
test
cmpsl
roll
push
mov
daa
and
into
inc
jmp
addr16
or
jno
sub
cli
xchg
pop
mov
xor
or
shl
xor
movsl
scas
mov
dec
inc
push
cli
mov
jno
push
jge
dec
fsubs
jno
mov
test
cld
icebp
mov
cmc
test
or
inc
push
sub
stos
pop
jp
fcmovne
lea
orl
push
ss
lret
loop
xlat
mov
push
and
cld
and
dec
fistpl
xor
mov
mov
jmp
pop
in
je
imulb
ljmp
mov
rolb
add
iret
xchg
lods
ljmp
push
xchg
sbb
dec
aad
mov
imul
daa
jb
and
test
xchg
lret
pop
mov
cmpsl
mov
ficomps
inc
mov
outsb
mov
mov
std
and
gs
cmp
pop
iret
loope
scas
mov
jle
push
fbstp
adc
call
repz
pop
loopne
adc
cmp
fwait
inc
mov
jne,pn
adcl
inc
mov
and
mov
ficomps
jl
push
pusha
cmc
and
pop
idivl
push
cmp
inc
cli
mov
adc
pop
outsl
mov
mov
cmp
add
sbb
bswap
fldz
mov
addl
iret
pop
jl
fstpl
and
sbb
mov
outsl
inc
enter
outsb
popa
mov
push
jl
cmp
into
add
repnz
cmp
test
xchg
inc
inc
imul
hlt
test
ja
out
adc
inc
test
or
pop
jecxz
out
dec
cltd
add
cmpsl
mov
lods
mov
adc
add
mov
daa
add
call
outsl
mov
stos
movsl
add
aam
into
jl
test
adc
sahf
pop
movsl
movsb
mov
or
adc
adc
fwait
jo
dec
mov
jmp
shll
out
orps
mov
sub
int
push
movsb
ret
xor
bound
loope
dec
cmp
fwait
adc
push
or
sti
xchg
adc
push
xchg
dec
into
xchg
loopne
inc
push
push
jno
out
scas
push
es
xor
pop
iret
lret
adc
shll
dec
inc
mov
and
adc
shrb
testl
sbb
inc
push
add
sbb
xchg
popa
lret
notl
sbb
cld
jmp
mov
sbb
bound
incl
adc
jns
sbb
orl
in
mov
xchg
inc
xor
xor
adc
bound
popf
xor
add
stc
iret
cmpsb
dec
add
adc
cmp
dec
movsl
leave
test
push
sarl
xor
sarb
pusha
pop
fldt
dec
add
jecxz
mov
out
ss
int3
in
out
aas
add
inc
lods
cmpsl
mov
dec
pop
test
cmpsl
dec
xchg
push
addr16
adc
add
enter
cwtl
cmp
lods
dec
leave
mov
movsl
pushf
insb
mov
or
mov
cmp
sbb
push
lcall
nop
mov
insb
push
xchg
or
jne
fsubrs
jmp
jo
jns
fs
nop
bnd
pop
inc
dec
xlat
mov
scas
mov
or
inc
and
js
pop
inc
ret
sbb
jae
mov
mov
sub
xchg
dec
cmp
insl
mov
lret
sahf
jecxz
sub
push
jns
sbb
lds
jl
subps
gs
lea
test
cmp
inc
je
scas
add
gs
loope
jmp
stc
out
inc
ror
ror
mov
fs
dec
insl
jge
cmp
dec
dec
add
stos
and
sbb
xchg
cmpsl
push
loopne
sbb
outsl
fistl
pop
mov
pop
push
dec
sti
jns
cltd
cli
xlat
inc
jmp
out
cld
jmp
mov
sub
cmc
cld
insb
add
cmp
sub
sti
jecxz
lods
shlb
shrb
fadds
movsl
loopne
stc
sti
leave
cmc
in
in
outsl
pop
out
mov
pushf
and
mov
mov
scas
sub
pop
fistpl
insl
rolb
mov
bound
rcr
add
cmp
push
popl
mov
adc
jg
ss
jb
loope
jmp
xchg
clc
sub
sar
sbb
dec
push
and
mov
or
cmp
push
les
push
xchg
cmp
stc
in
pop
xor
test
and
mov
ja
fstp
out
push
adc
fwait
and
sbb
push
adcl
outsb
pop
mov
outsl
inc
xor
mov
xchg
rorb
and
cmp
adc
sbb
movswl
pop
mov
add
push
inc
icebp
js
cmpsl
cmp
scas
mov
out
pop
adc
pop
dec
sarl
sahf
or
mov
mov
cmc
sub
push
cwtl
test
sub
mov
push
in
cmp
push
mov
mov
cmpsb
sar
repz
inc
inc
stos
mov
and
dec
stos
push
fmuls
loopne
adc
dec
xor
or
push
ret
sub
lock
ljmp
test
sub
lods
pop
mov
sbb
xchg
std
lahf
cmp
sbb
cmp
sbb
pushf
mov
je
out
jle
in
or
hlt
push
cmpsl
cmp
mov
lods
inc
testb
stc
or
lret
jno
cmpl
out
mov
lea
lahf
leave
fisubrs
les
cmp
fidivs
add
push
mov
js
pushf
inc
daa
mov
inc
adc
aaa
fcmovu
or
test
xchg
and
cli
inc
pop
inc
sbb
out
inc
or
jle
inc
mov
adc
insl
aas
cmp
xor
loope
jb
aam
push
jo
jmp
inc
adc
inc
mov
out
xchg
popf
aam
stc
les
stos
add
loopne
testb
xor
dec
clc
or
mov
test
rcr
lahf
mov
jbe
mov
fnstcw
sahf
outsb
enter
mov
in
sbbl
dec
cltd
ret
idiv
mov
adc
fisttps
add
loopne
mov
cld
test
call
imul
fs
mov
loopne
pop
adcl
jno
and
add
dec
jnp
lcall
mov
and
cmp
mov
cmp
push
call
inc
repnz
cwtl
lret
jle
aaa
stos
adc
sahf
xor
mov
jp
movsb
xchg
sbb
js
in
iret
dec
and
mov
cld
pop
mov
jne
add
scas
jg
sbb
les
sub
mov
arpl
add
jl
dec
cs
cmp
jne
and
mov
rolb
inc
imul
mov
and
stos
mov
jg
dec
mov
js
les
cmp
and
shlb
mov
aad
ljmp
inc
jno
jne
test
and
push
push
movsb
jne
and
mov
jno
jne
adc
xchg
aad
sahf
pop
std
shlb
mov
mov
push
mov
mov
in
cli
cld
sub
jmp
pushf
lahf
repz
aad
shlb
pop
aam
fisubs
aad
sbb
dec
cmp
in
adc
cwtl
sbb
adc
add
push
push
test
cmp
fidivs
jecxz
or
cmp
in
std
pop
mov
push
popa
jp
xchg
cld
pop
mov
inc
add
std
mov
movsl
mov
insb
mov
or
pop
dec
pop
daa
adc
adc
mov
sarl
je
or
and
mov
imul
lds
pop
or
or
mov
mov
jns
xchg
adc
xchg
xor
negb
jecxz
lock
jne
dec
and
push
mov
fldt
outsb
or
pop
mov
cmp
dec
aam
pusha
sub
js
negb
movsb
iret
lahf
jl
pusha
inc
inc
and
pop
jge
and
or
ret
add
pop
repz
mov
sub
testl
out
dec
cltd
sbb
dec
pop
fbstp
insl
push
mov
add
mov
jl
call
mov
gs
clc
dec
pop
js
iret
shl
lods
push
sbb
movsb
xchg
pop
out
jmp
ds
loopne
fcomps
pushf
lahf
das
popf
sub
addl
xor
cmp
stos
sbb
push
fistpl
int
mov
in
and
into
loopne
jbe
arpl
pop
adc
adc
cs
test
lea
jbe
mov
xlat
ljmp
lret
sbb
pusha
pop
sahf
inc
test
aas
xor
mov
cwtl
dec
punpckldq
pop
and
xchg
rorb
addr16
les
push
pop
dec
adc
stc
mov
dec
lods
mov
xchg
cli
mov
fisubrs
in
into
mov
mov
push
lds
sub
je
mov
dec
mov
mov
jmp
cmpsb
xor
fldenv
push
lods
xchg
inc
popa
cmp
lcall
inc
scas
xlat
popl
je
sub
pop
cmpsl
sub
shlb
jl
mov
stc
roll
cmpsb
in
fimull
xchg
lcall
mov
stos
push
addr16
cwtl
cmc
mov
sbb
int
mov
psubw
xchg
mov
aaa
fdivrs
jb
inc
xor
ds
dec
inc
and
fisttpl
or
jmp
sbb
pop
aaa
iret
mov
sbb
les
scas
xor
cmp
push
pop
inc
fs
dec
mov
data16
add
push
push
ds
cli
xchg
aad
sti
or
ja
sbb
inc
dec
rcrb
dec
cmp
das
test
sahf
aaa
and
ljmp
hlt
cs
dec
adc
test
leave
loop
test
ja
xchg
push
out
add
inc
iret
cltd
inc
inc
loopne
movsl
insb
mov
dec
push
idiv
jle
mov
dec
and
mov
lods
pop
dec
in
sbb
sub
sbb
jmp
push
or
pop
jl
dec
cwtl
mov
push
mov
adc
mov
enter
dec
mov
or
jg
or
push
xor
daa
inc
pushf
out
mov
stos
rclb
jo
jne
loop
push
gs
stos
push
ret
stc
cmpsb
out
inc
mov
or
daa
outsl
xchg
mov
xchg
arpl
pop
stos
jae
jle
pop
in
in
dec
push
repz
cmp
lds
xchg
repz
nop
shl
mov
imul
xor
test
sbb
je
pop
cmp
cmp
cmp
cmp
add
cmpsl
cli
lea
cmp
mov
hlt
call
shrl
pop
sub
popl
sahf
cmp
cld
dec
mov
inc
push
mov
outsb
cmp
sti
xchg
xor
fs
sub
je
xchg
add
add
inc
test
subl
pop
xchg
pop
inc
pop
adcb
adc
jbe
out
xchg
fnsave
repnz
jmp
inc
mov
loope
mov
fiadds
cwtl
mov
push
scas
std
xorl
push
xchg
mov
popf
mov
mov
jge
dec
testl
sbb
jns
jmp
xor
jmp
push
xor
mov
lods
sahf
and
das
xor
sbb
cmp
lret
cmp
push
mov
icebp
or
popa
sbb
mov
push
data16
int3
cmp
dec
movsl
mov
mov
lcall
lret
jno
or
cmp
cltd
imul
ljmp
das
or
mov
xchg
cmp
andb
ret
xchg
jae
mov
repnz
ret
fisttpll
pusha
fcomp
int3
sub
inc
pop
jecxz
cmp
popf
dec
push
sub
mov
loope
sarb
test
popa
sarb
jne
lds
push
pushf
inc
sti
lea
es
cwtl
sahf
enter
insb
lret
pop
int
pop
cmpsl
aaa
cli
jl
ljmp
cld
cmp
cli
jns
fldt
xchg
jmp
sbb
add
aam
aam
enter
rol
dec
pop
aam
jbe
sbb
and
popa
std
fidivrl
notb
mov
or
out
xchg
cmp
mov
cwtl
mov
outsl
addr16
arpl
mov
and
adc
xchg
push
daa
repnz
mov
inc
insl
fmuls
jne
jecxz
inc
jle
shlb
gs
sti
xchg
lcall
movsb
jl
fsubrl
int3
jecxz
jbe
mov
out
jb
sbb
inc
adc
in
addr16
mov
jg
gs
es
test
lods
cs
rclb
mov
mov
or
ds
inc
js
fstps
jns
les
and
and
xchg
lods
es
repz
push
repnz
dec
icebp
dec
daa
inc
iret
mov
cmp
sub
push
insb
lods
imul
push
in
leave
iret
out
add
jg
sarb
pop
outsb
in
push
test
xchg
mov
sbb
in
mov
popa
cli
dec
adcl
into
jp
dec
into
dec
push
fstpl
xor
fldt
mov
and
scas
popf
int
test
cs
into
inc
in
add
xchg
insb
fildl
mov
je
jns
and
jge
lods
lret
cmc
and
mov
mov
cmp
sahf
jp
add
ds
and
push
sub
push
mov
jmp
lahf
aad
dec
xchg
mov
push
test
std
mov
push
lahf
pop
ret
and
testl
inc
bnd
pop
pop
xor
gs
fildll
jl
adc
jl
push
ret
imul
in
mov
jecxz
push
mov
xchg
fcmovnbe
inc
sarl
or
pop
out
mov
xchg
xlat
movsb
orb
xor
icebp
loop
fstl
pushf
adc
jns
and
dec
pop
add
xor
and
test
jnp
dec
xchg
pop
push
jae
or
popa
popf
stos
stos
push
xor
jno
hlt
movsb
and
fiadds
cmp
adc
sbb
pop
and
je
je
cmc
mov
fcmovnbe
scas
sub
popf
sub
in
mov
cld
lret
jno
fidivrl
fcoms
xchg
shl
ja
sub
stos
xchg
insb
ja
push
insb
aam
in
fidivrs
jne
ret
mov
cmp
cs
adc
push
sbb
pop
enter
sub
xchg
ljmp
or
sti
sbb
cmp
insb
fstps
sbb
mov
mov
mov
lahf
pop
mov
adc
xchg
ja
stos
mov
inc
std
outsl
inc
xchg
jl
shlb
add
jbe
arpl
xchg
adc
xor
mov
or
std
xor
out
mov
hlt
insl
enter
pop
xor
pushf
mov
nop
and
popf
and
es
loope
sbb
or
mov
fstps
lcall
outsb
jp
nop
xchg
lods
cld
in
inc
add
leave
xchg
adc
test
xchg
mov
sbb
cmp
sbb
imul
fwait
xchg
dec
in
insl
jns
outsb
jns
stos
insb
ret
movsl
add
push
mov
pop
and
mov
sahf
shlb
cwtl
gs
xor
ds
sub
xchg
in
ja
or
xchg
mov
lods
pop
sub
fldenv
dec
scas
push
mov
iret
lret
in
hlt
and
xchg
adc
cmp
pop
cli
pop
adc
mov
and
jo
mov
mov
nop
push
mov
scas
lock
sbb
xchg
cmp
ljmpw
xchg
popa
mov
sub
lcall
mov
scas
outsl
lret
mov
pop
or
ret
mov
sbb
sub
mov
sahf
lcall
add
cltd
xor
sbb
stc
inc
aas
jnp
lods
ficomps
adc
cld
nop
xor
loopne
decl
dec
jo
add
aaa
call
cs
stos
clc
adc
cli
pop
jne
test
lock
xor
aaa
jno
scas
cmp
and
lds
pop
cli
or
setnp
pop
cmp
xor
jle
call
fldenv
cmp
pop
fs
push
leave
pop
stos
xor
ret
jns
dec
mov
scas
xchg
adc
pop
sysenter
dec
add
lret
mov
mov
adc
stos
jns
cmp
lcall
sub
aad
push
dec
lahf
pop
lods
push
or
icebp
out
jmp
jmp
add
sbb
rol
lcall
insb
dec
das
fnstsw
scas
and
jg
cs
cmp
add
cli
pop
adc
jb
mov
jp
dec
scas
pop
inc
push
or
pop
jmp
jo
push
sbbl
call
add
aam
sbb
mov
jg
jecxz
loopne
cmc
rcrb
jbe
add
push
xchg
cmpsl
pop
inc
mov
sbb
in
lea
xchg
push
popf
cmp
in
dec
xchg
jbe
sti
fisubrs
rcpps
shlb
push
arpl
dec
outsb
mov
pusha
and
pop
insb
popa
lret
jge
sbb
mov
lret
and
nop
lret
adc
repz
mov
jl
xchg
or
and
stos
add
out
cld
movsb
lea
stos
test
xchg
out
push
cmc
sbb
adc
mov
inc
mov
stc
sar
loope
mov
push
mov
mov
es
fwait
imul
cmp
ss
fs
jl
shll
testb
pop
jg
cltd
xchg
cmp
mov
shll
icebp
jns
jnp
lea
dec
cmp
jl
jl
dec
cmp
fdivs
cmp
not
cmp
test
stc
stos
dec
ret
pusha
cmpsb
call
sub
jl
and
lea
push
ret
or
shlb
lock
mov
popw
xor
seta
ljmp
push
sub
pop
in
mov
movl
mov
and
mov
cwtl
pop
scas
inc
mov
jns
mov
add
in
and
xchg
fldcw
fidivrs
fsubs
ja
jmp
aam
out
mov
mov
es
and
clc
jnp
cmp
jno
loop
adc
xchg
and
pop
sbb
shlb
xchg
adc
dec
xchg
pop
xchg
and
push
iret
pop
sti
iret
cltd
lss
daa
mov
out
je
mov
cmp
or
mov
push
lods
or
sub
xor
out
ret
and
loopne
test
xchg
adc
mov
add
and
push
sub
cld
repnz
add
jae
test
std
jbe
shrl
cmp
dec
negl
aaa
jo
xor
add
cmp
sti
inc
cld
mov
dec
outsl
push
aas
adc
test
mov
iret
mov
mov
pop
insb
stos
dec
leave
mov
xor
pop
sbb
out
pushl
sub
push
daa
scas
push
test
or
mov
sub
sbb
fistps
and
ljmp
mov
cmpsb
jl
xchg
add
mov
jecxz
out
or
divl
loopne
scas
aam
insb
mov
sti
sub
pop
mov
inc
jecxz
cmc
push
pop
push
mov
ret
in
inc
mov
mov
mov
adc
rcrl
test
lahf
mov
add
mov
data16
pop
or
mov
lret
pushf
jmp
arpl
std
fimull
sub
int3
xor
or
fisttps
lods
jb
pop
push
xlat
jne
enter
cld
or
hlt
bound
sbb
scas
mov
xor
or
into
clc
pop
adc
pop
xchg
dec
testl
jnp
push
data16
pusha
arpl
mov
xchg
pop
mov
jecxz
mov
fs
ds
pop
adc
fwait
or
pop
jle
in
adc
mov
ret
and
sbb
mov
xor
jecxz
xor
xchg
sbb
xchg
pusha
ja
mov
outsl
dec
je
or
jns
xchg
out
and
add
ror
xchg
sti
hlt
sbb
fdivr
scas
adc
out
out
push
cmp
sti
sti
lea
lods
mov
arpl
inc
jne
imul
lods
add
mov
pop
xor
xchg
fisubrl
lds
scas
dec
xchg
loop
xchg
inc
push
aas
enter
ja
shlb
call
test
test
nop
pop
sub
loop
xchg
push
jbe
xorb
jp
clc
mov
mov
dec
mov
and
call
fdivrs
sbb
int
fidivrs
dec
mov
movsb
xchg
ret
popl
jnp
inc
cs
xchg
scas
jb
cmp
sub
xchg
jmp
jb
lret
adc
popa
mov
lods
imul
sarb
ret
inc
xchg
insb
cmp
ja
stos
add
cmp
jnp
stos
inc
lret
fadd
add
mov
fnsave
into
mov
sbb
mov
fwait
insb
test
test
jne
insl
outsb
inc
cmp
inc
movsb
fnstsw
mov
or
xlat
int3
and
sti
mov
mov
in
cmc
xchg
xchg
in
testl
shl
in
xor
fcompl
lods
dec
je
js
std
pop
mov
lret
test
aaa
add
icebp
or
pop
xor
cmp
mov
loope
push
push
xchg
inc
mov
in
hlt
in
ja
cmc
mov
lock
addl
mov
rcrl
xchg
imul
sub
xchg
sbb
sub
fcomps
ret
fld
f2xm1
xor
pushf
in
sub
fdiv
lcall
adc
xor
mov
lods
cmp
rcrb
and
ja
push
xlat
mov
mov
test
insl
lods
stos
shll
xchg
sbb
lock
sahf
inc
and
es
movsl
icebp
cli
add
jae
aaa
mov
cmp
inc
call
mov
pop
cli
mov
cmc
and
test
cli
out
imul
dec
and
cli
lds
xor
cld
push
mov
mov
and
and
xchg
fwait
cli
andl
and
xor
stc
enter
inc
leave
xor
in
fidivrs
pop
adc
adc
out
pusha
or
add
popa
aaa
out
icebp
out
cwtl
or
and
sbb
mov
es
gs
sbb
pop
cs
jb
test
cld
sbb
pop
sar
mov
pop
mov
cmp
idivb
pop
add
int3
hlt
or
xchg
xchg
in
xorl
je
jae
inc
icebp
dec
shrb
mov
bnd
scas
or
fwait
cmp
in
icebp
sti
fsubrs
add
cmp
mov
push
pop
and
mov
in
inc
aas
adc
xlat
mov
ss
pop
or
int3
test
sub
imul
fsubrp
loope
imul
movsl
xchg
mov
inc
or
inc
mov
sahf
mov
jmp
pop
test
repnz
dec
mov
xchg
icebp
ljmp
repz
fisubrl
push
adc
fsts
inc
dec
dec
call
cltd
sbb
push
mov
or
pop
ret
xchg
shl
and
mov
mov
sbb
cmp
jae
mov
xor
fdivrs
inc
leave
in
xchg
mov
lret
lds
into
mov
xchg
push
dec
mov
rcll
lods
testb
dec
lea
mov
outsl
stos
jge
mov
cmpsl
lods
push
dec
jge
jmp
push
xchg
jno
jbe
lahf
xchg
fcmovne
shlb
ds
mov
adc
push
rolb
xchg
ficoml
push
jp
mov
jecxz
sub
lea
or
popf
hlt
je
inc
frstor
ret
jge
add
outsl
insb
mov
xchg
inc
mov
sbb
loop
stos
mov
xor
sahf
cli
pushl
pusha
mov
mov
push
sub
push
jge
pop
sub
mov
test
arpl
jae
inc
lock
fbstp
lock
aas
sbb
mov
add
ret
pop
insl
shlb
notb
or
loop
adc
in
add
das
clc
addr16
mov
mov
and
jb
sarb
loope
inc
push
ja
lock
mov
test
push
dec
cmp
push
xor
adc
sbb
lock
xchg
sarl
ret
jae
mov
inc
pop
js
les
mov
lret
xlat
popa
cmpsb
popa
test
mov
dec
xchg
cmpb
dec
sbb
adc
mov
outsb
out
dec
in
or
push
inc
fldl
lods
mov
cli
cmpsl
sub
into
mov
mov
jp
push
mov
mov
out
call
jae
cmpsl
cmp
dec
lret
lock
repnz
add
outsb
adc
out
sbb
jecxz
stc
xor
movsb
pop
and
and
test
sti
xor
push
lock
dec
and
adcl
das
es
inc
push
and
add
mov
push
stos
cli
cmp
dec
imul
jg
int3
fsubl
sbb
mov
mov
fiadds
inc
pop
mov
jb
jbe
pop
adc
and
cmc
stc
push
dec
cli
pushf
jg
daa
aad
dec
push
jne
and
ja
fadd
cmpsl
sbb
xchg
sub
mul
nop
nop
sub
addr16
cld
cmp
or
aas
xor
aad
jmp
int3
fbld
inc
mov
aam
push
daa
mov
or
sub
imul
inc
xchg
ss
aam
aad
pop
cmp
inc
or
jbe
subl
add
out
cld
cmp
lret
sbb
int3
xor
dec
ja
mov
jno
push
lret
sbb
push
shlb
cmp
mov
jae
pushf
addl
xchg
pop
popa
xchg
cmc
add
and
mov
cmp
insb
fcompl
fxch
inc
mov
jae
aam
pop
pop
popa
push
mov
sahf
mov
mov
imul
jne
iret
pop
scas
les
inc
push
jge
in
xlat
push
mov
arpl
xchg
mov
adc
cmc
ds
dec
in
pusha
popf
xchg
mov
outsl
pushf
mov
ss
pushf
clflush
sbb
push
bound
mov
mov
rol
add
jns
sbb
mov
sbb
push
pop
mov
sub
call
mov
lahf
jbe
daa
inc
pop
pop
push
mov
adc
push
add
lea
pop
roll
andl
loope
fildll
fwait
xchg
shlb
movsl
nop
cmp
lods
mov
lret
inc
cmpsl
xor
stc
jne
sub
adc
xor
mov
outsl
mov
push
idiv
adc
dec
xor
pop
push
dec
pop
jge
cmc
movsl
lods
xchg
pop
stos
and
xchg
leave
sbb
in
add
popf
cwtl
pop
sbb
cli
in
xor
sub
pop
dec
and
scas
push
lods
or
inc
fistpl
push
dec
inc
push
push
pop
mov
mov
popf
fbld
ds
xchg
lret
jne
push
out
push
sub
mov
lcall
adc
aaa
andl
cltd
scas
fcmovnb
pop
lcall
imul
or
add
lcall
push
adc
mov
loopne
mov
mov
ljmp
mov
sbb
and
pop
call
ror
mov
jae
loop
je
xchg
dec
cs
rorb
adc
das
insb
aam
xlat
das
popf
lods
mov
sub
cmpsl
dec
jg
outsl
inc
mov
lds
xor
in
push
inc
pop
mov
mov
lahf
test
dec
aam
inc
push
mov
push
fidivl
in
mov
sahf
out
and
adc
lret
mov
inc
ret
dec
test
repz
sbbb
sub
sbb
add
jbe
les
hlt
or
mov
xchg
cmp
int3
xchg
xchg
sub
sub
push
add
test
and
repz
cwtl
sub
sub
inc
lock
xorl
mov
inc
sbbb
cmp
add
xchg
stos
xchg
mov
mov
imul
nop
mov
int3
ja
mov
insb
pushf
ficoms
cs
les
dec
push
cmp
je
mov
lret
jae
and
pop
hlt
jecxz
cs
addr16
fwait
push
aam
and
push
inc
das
in
dec
or
orb
stc
es
jne
scas
dec
test
loope
and
sbb
ljmp
mov
cmp
xchg
mov
cmpsl
dec
jno
subb
mov
scas
cmp
mov
cmp
push
dec
bound
xchg
cs
push
dec
hlt
cmpsb
mov
arpl
sub
sbb
mov
adc
xlat
or
push
push
mov
mov
sbb
rclb
jae
int
xchg
loopne
fisubrl
aad
mov
rcll
mov
fstps
icebp
outsb
inc
fwait
rcrb
mov
sbb
int3
mov
shlb
sbb
mov
mov
xchg
dec
ss
mov
xor
movsb
inc
jp
sbb
jnp
add
dec
jge
out
inc
je
popf
fdivrl
xor
xor
mov
dec
mov
lods
or
jbe
das
push
xchg
jg
sarl
sbb
outsl
jae
xlat
or
inc
je
jecxz
pop
testb
mov
sbb
dec
popf
cltd
jg
shlb
lock
push
sub
xor
and
add
sbb
ja
pop
test
outsb
sub
inc
add
mov
andl
xlat
jg
mov
and
xchg
lret
and
jge
pop
jbe
test
enter
dec
into
mov
rorb
or
xor
shl
nop
adc
mov
pop
flds
inc
cltd
xchg
inc
lcall
xchg
xchg
sbb
lea
out
loopne
pop
loopne
dec
aaa
jmp
rol
jge
test
and
jnp
rcl
sub
cmp
mov
sarl
movsl
and
adc
aas
mov
test
mov
int3
in
rolb
xor
or
xor
mov
sarl
cmpsl
int3
std
xchg
mov
popa
std
inc
or
jge
and
sbb
sbb
std
mov
and
inc
cwtl
arpl
xor
adc
push
dec
push
push
push
or
xor
and
and
push
lods
bnd
xchg
pushf
and
dec
push
dec
test
dec
bnd
cmpsl
je
imull
cmp
mov
idivl
fisubrl
lcall
test
cmp
cmc
test
push
push
sahf
and
jbe
cltd
cmpsb
das
in
sbb
add
into
jno
xor
out
fdivrl
mov
xchg
and
fistl
mov
ret
sub
add
mov
stc
ljmp
negl
test
sub
lods
jo
pop
shrd
push
sbb
jnp
daa
mov
loop
add
and
jne
pop
lock
leave
push
test
pop
sbb
push
cld
jmp
mov
fwait
sub
jge
mov
push
repnz
jae
mov
ret
test
or
push
jbe
shrb
orl
sub
pushw
mov
rcll
stc
jmp
cmp
cmp
fisttpll
add
xor
xchg
xor
and
sub
mov
mov
cmp
push
in
push
sub
js
or
dec
pop
in
scas
hlt
cmp
lock
xor
out
add
ljmp
outsl
jp
pop
out
push
adcl
icebp
int3
int
mov
sti
pop
loope
and
cwtl
mov
mov
mov
mov
sub
popa
inc
insb
out
js
cmp
mov
arpl
and
xchg
jg
clc
adc
dec
push
cmp
pcmpeqb
pop
sbbb
lret
inc
popa
pop
sbb
ret
inc
in
lods
out
mov
xchg
in
ss
xor
imulb
orb
adc
mov
pop
divl
mov
shl
aaa
or
add
mov
nop
adcl
scas
mov
bound
cmpsl
xor
dec
testb
jg
in
test
push
adc
push
mov
idivb
or
mov
add
pop
ds
fwait
icebp
imul
gs
sbb
test
jmp
or
mov
ja
jb
incl
loope
dec
ret
push
popf
dec
jns
sbb
arpl
push
mov
in
jo
test
jb
xchg
fiadds
pusha
inc
push
fstpl
outsl
enter
fldt
adc
scas
fisttpl
jp
push
dec
adc
cmpl
lods
loope
xchg
xchg
sub
dec
outsb
sti
adc
or
mov
lret
cmp
aam
ret
xor
pop
insb
push
jp,pn
sub
add
and
ljmp
dec
jbe
dec
hlt
sub
test
dec
ret
xchg
and
push
adc
rorl
mov
test
test
fstl
fmulp
adc
xor
sbb
add
and
or
mov
adc
sbb
adc
or
icebp
push
fdivrs
dec
mov
insb
xchg
mov
mov
rclb
jb
xchg
inc
sub
push
cmp
stos
xchg
mov
mov
and
jg
inc
iret
add
push
movb
das
push
jno
js
jno
or
lods
push
fstpt
jmp
out
dec
pushf
in
inc
rolb
and
jb
cmp
pusha
cmp
jecxz
pop
mov
enter
inc
popa
mov
fistl
add
mov
pop
repz
xor
cmp
mov
sub
fsubl
in
dec
ja
xchg
mov
push
xlat
mov
negb
mov
and
sub
popf
mov
sbb
test
aad
dec
sarb
jo
out
cmpsl
outsl
dec
pop
mov
xor
sub
arpl
jae
dec
sub
and
fmuls
ret
clc
iret
pop
mov
xlat
jp
imul
fnsave
out
movsb
data16
ljmp
movsb
pop
pop
cld
mov
cmp
push
jp
daa
adc
or
cltd
adc
adc
jmp
xor
xor
repnz
xor
inc
mov
xchg
inc
pop
fsubrs
mov
xchg
mov
add
mov
mov
clc
std
scas
xor
sub
arpl
cltd
mull
sahf
mov
push
frstor
pop
push
or
pusha
or
jb
sub
cmc
cwtl
js
jbe
call
or
cmpsl
fcoms
shll
jo
loop
fwait
aas
in
jo
ja
cltd
mov
fwait
cmpsl
testb
mov
dec
jno
xchg
notb
addl
dec
sbb
and
scas
sub
dec
out
push
scas
jnp
cmpsl
adcl
push
test
or
cltd
dec
xchg
and
stos
or
jbe
jecxz
sub
mov
xor
push
mov
popf
and
lret
lret
outsl
dec
nop
sub
popa
cltd
push
mov
loope
aam
or
iret
pop
lea
mov
sahf
imul
icebp
adc
xor
inc
jecxz
mov
pop
icebp
cmp
xor
out
push
pop
ret
cmp
test
xor
fisubrs
mov
sub
lods
dec
push
hlt
inc
test
imul
lods
mov
icebp
cmpsb
into
add
popa
mov
sub
in
imul
xchg
mov
lret
out
sub
dec
jae
fwait
lahf
mov
scas
xchg
push
jno
iret
clc
call
mov
cld
sub
daa
imul
ljmp
sahf
sub
sbb
mov
jnp
cli
ss
sub
jge
imul
or
iret
xchg
mov
shrl
ret
mov
shlb
cwtd
sub
jbe
xchg
stc
mov
and
cmp
fiadds
pop
shrb
xlat
sub
addr16
aam
inc
dec
mov
xor
pop
jnp
cmc
cmp
negl
lahf
cmp
or
or
and
lods
aad
cli
in
out
rcll
push
sbb
mov
cmc
arpl
jns
inc
inc
add
inc
sub
pop
add
or
add
dec
repz
jno
out
lock
loopne
clc
imul
dec
or
ret
repz
xchg
dec
xlat
dec
push
into
sahf
pop
push
lods
outsl
mov
jnp
mov
imul
lea
pop
push
inc
adc
rcr
xor
and
lret
adc
inc
ljmp
mov
test
fdivr
jb
sub
mov
testl
out
fldcw
dec
icebp
xchg
push
and
sub
lcall
pop
aad
push
or
jmp
sub
int3
cwtl
xchg
and
inc
int3
jnp
adc
mov
pop
subb
sti
push
loope
shrb
add
in
lods
addl
ficoml
or
test
dec
stc
bound
ret
cmpsl
lds
loop
movsb
adc
addb
mov
hlt
push
mov
mov
aam
and
repz
inc
std
rorl
mov
lret
lds
dec
inc
pop
lods
sbb
pop
mov
sarl
mov
jge
aam
int
sbb
scas
xorl
mov
jecxz
enter
ljmp
mov
xor
mov
adc
sbb
pop
add
dec
xchg
dec
jns
cltd
mov
pop
pop
pop
push
cmp
push
xor
mov
push
xchg
ljmp
lds
push
stos
or
xor
orl
inc
ds
dec
push
jle
sti
jle
cmp
jmp
or
test
adc
repnz
pop
int
xor
leave
cld
xchg
nop
xor
stos
add
movsb
clc
inc
sbb
insl
outsl
mov
push
xor
shl
daa
cs
fisubrl
pushf
aas
mov
insb
add
mov
add
dec
je
test
clc
cmp
cmp
or
and
or
int3
push
jne
dec
cmpsb
pusha
outsl
ficoml
or
loopne
ror
pop
in
stos
xchg
bound
pop
inc
pushf
into
sbb
pop
sahf
jle
jg
daa
mov
fnsave
sub
mov
imul
divb
jge
inc
mov
mov
sub
fidivl
les
xchg
mov
pop
fists
or
ds
and
scas
pushf
loope
lahf
call
pop
leave
fidivrl
fsts
fisubs
jne
cmp
in
fs
jecxz
es
movups
xlat
pop
xor
lret
ret
mov
jl
jg
mov
pop
lret
sbb
cmp
push
fiaddl
sub
testb
int3
stos
js
movsb
imulb
push
aam
rorl
adc
lret
pop
ljmp
aad
in
pushf
sub
mov
push
jns
jno
outsb
sub
mov
jne
mov
cmp
mov
sahf
cmp
lret
shll
std
pushf
fcmovb
xor
in
xchg
stos
mov
dec
xchg
push
dec
ret
lcall
call
lds
xchg
pop
movsl
inc
adc
cmpsl
mov
outsb
or
fbstp
and
test
jno
loopne
iret
jmp
and
jae
imul
push
in
add
jl
dec
inc
std
pushf
push
pop
daa
jecxz
cld
std
shll
sbb
sti
pop
dec
push
push
aas
cmp
lcall
call
dec
pop
jae
cwtl
ljmp
pop
jnp
cli
dec
lea
in
xor
push
pop
test
std
in
js
clc
dec
or
mov
pop
outsl
mov
mov
outsl
dec
les
data16
pop
sbb
insb
stos
sar
jp
sbb
repnz
push
sbb
jne
jae
icebp
test
push
cli
pop
xchg
pop
aas
dec
mov
daa
pinsrw
lahf
je
aad
and
femms
hlt
mov
xor
clc
pop
xor
push
data16
push
stos
sub
mov
xlat
pop
xchg
mov
sub
int3
loope
adc
and
cs
cmpsl
lock
jge
sbb
aad
cmc
xor
stc
inc
sub
sub
mov
negb
test
or
adc
pop
adc
or
stos
jno
xchg
adc
stos
xchg
cmp
push
orb
push
mov
test
inc
xorl
pop
lahf
lahf
sub
shll
push
out
shrb
cltd
mov
shrb
jge
sti
mov
andl
mov
pop
push
push
or
leave
jecxz
fmuls
aad
inc
ljmp
lea
jbe
decb
lods
mov
repnz
dec
lods
mov
push
push
jge
std
js
mov
or
mov
fsts
insb
push
and
lret
xor
in
icebp
or
movsl
pop
gs
mov
mov
inc
mov
xor
cmpsl
cmp
popf
hlt
push
xor
pop
and
pop
ss
fidivl
bound
fisttpll
jge
xor
xor
aaa
lods
lock
lret
repnz
sti
and
dec
out
les
scas
or
dec
mov
mov
in
dec
fstps
repnz
xchg
sbb
cmpl
mov
test
dec
jb
mov
movsb
xchg
testl
inc
or
in
sbb
in
xchg
xchg
hlt
shll
loop
gs
imul
daa
imul
pop
cmp
mov
lret
sbb
mov
repnz
insb
xor
lods
push
mov
cmpsl
bound
hlt
cld
inc
and
jg
std
or
inc
insb
inc
fdivl
fadd
test
cmp
xlat
mov
pop
popa
push
cmp
daa
adc
popf
ss
mov
mov
and
movsl
out
mov
fisubrl
cmp
push
jl
rcrl
mov
mov
lods
dec
outsl
dec
adc
dec
fistpll
ja
xor
fisttpll
scas
pop
rcl
jmp
rcrb
rcl
dec
fisubl
das
sbb
adc
mov
mov
push
or
xchg
clc
sbbl
mov
daa
mov
pop
jge
int
mov
pop
imulb
scas
mov
icebp
xor
loop
jmp
lahf
push
inc
inc
mov
in
adc
mov
adc
shrl
lcall
pop
push
and
xchg
out
out
mov
faddl
pop
pop
sub
and
loope
xor
sub
fldl
pop
mov
mov
fadds
in
xor
inc
enter
inc
lock
pop
sub
loopne
xor
mov
ljmp
pop
mov
dec
jmp
sbb
sub
or
rcrl
xorl
add
jno
rorl
push
int
add
data16
adcb
adc
cld
adc
xlat
push
repnz
jae
ret
adc
movd
test
mov
pop
nop
sbb
xchg
outsl
test
mov
push
mov
icebp
adc
sub
lret
in
out
push
cmp
fbstp
sub
insl
icebp
imul
xor
cmpsb
inc
cmpsb
out
std
xchg
fdivrl
outsb
cltd
mov
mov
pop
jge
sub
and
sarl
jbe
aas
leave
sahf
shrl
test
push
insb
and
sbb
push
je
int3
add
imul
sbb
add
jp
xchg
xchg
mov
mov
fcoms
test
sub
mov
ja
data16
aas
adcb
inc
lods
int
imul
leave
incl
mov
fs
jnp
xor
or
jae
push
pop
fcmove
cwtl
clc
imul
insl
xlat
push
mov
inc
xchg
int3
cmpsb
mov
lret
inc
sbb
mov
xor
xchg
cmpsl
pop
jge
popf
adcl
xchg
flds
cmpsb
repz
mov
and
fistpll
push
stos
add
fld
and
sub
imul
nop
push
cmp
das
mov
sub
or
sbb
out
and
push
dec
lret
sbb
sub
negl
scas
mov
cli
pusha
mov
adc
cli
fs
in
xchg
push
jne
out
jg
pushf
xchg
push
jbe
lea
add
faddl
and
xchg
push
inc
imul
lcall
or
jb
arpl
mov
xor
es
cmp
add
leave
cli
aam
sbb
sbb
push
testb
and
xchg
inc
loop
std
pusha
mov
mov
jecxz
push
mov
idiv
xchg
pushf
mov
mov
in
mov
std
cmp
scas
xchg
test
sub
test
cld
pop
push
movsb
dec
lret
out
xchg
xchg
xchg
daa
stc
shll
xchg
std
cld
dec
inc
mov
and
fmuls
push
push
in
sub
inc
addr16
xor
mov
std
sub
adc
dec
mov
orb
and
add
mov
lods
dec
cmp
or
inc
push
inc
in
sub
sbb
push
sub
push
sub
fs
sub
imul
lret
repz
jle
sub
cmp
sbb
lahf
sbb
dec
inc
scas
jl
sub
sbbl
popf
mov
prefetch
or
imul
or
jl
jp
adc
mov
int
test
sbb
aaa
adcl
cmp
das
push
dec
sahf
cmpsl
xchg
movsb
repnz
in
cmp
push
aam
outsb
sub
loope
push
arpl
add
and
inc
jmp
stos
xor
adc
enter
push
nop
cmp
data16
loop
adc
clc
sbb
jo
jecxz
cmp
ret
daa
cs
push
push
sbb
aad
out
fcompl
sub
andb
push
fimuls
data16
fcmovbe
mov
and
scas
int3
jp
sub
movsb
ss
ficoms
rclb
adc
pop
ds
fcom
fldcw
add
lds
dec
cmpsb
xchg
cmpsl
aaa
jns
pop
jnp
test
and
dec
cs
dec
stos
dec
jle
scas
sbb
dec
aam
jecxz
arpl
add
sub
adc
push
inc
sbb
xor
filds
ds
lcall
mov
hlt
or
out
xor
fadds
xchg
dec
std
lcall
xchg
loop
inc
testb
loop
addr16
fnstcw
shr
jg
xor
cmp
incb
call
cmp
cmp
sti
pop
fucomip
and
shrl
cmp
mov
sbb
sub
cmp
repnz
fnsave
mov
jae
ja
or
es
xor
xchg
int3
data16
lcall
mov
rcrb
mov
bound
in
lods
xor
cmp
std
sub
jg
orb
lea
std
cltd
push
mov
repnz
rolb
call
rcrl
fucom
push
out
jae
gs
cld
pop
lock
loopne
sti
popf
iret
push
repnz
mov
jg
inc
add
aam
xor
jp
pop
in
cld
mov
rorl
xor
and
xlat
and
sub
sbb
jg
testb
push
push
lcall
inc
rolb
push
mov
ljmp
add
and
fistpl
leave
and
mov
sub
scas
jl
inc
popa
mov
cwtl
out
es
xor
mov
out
cmp
mov
adc
jne
cli
pushf
xchg
lcall
sub
scas
add
mov
cmpsb
and
xor
arpl
cltd
xlat
ret
mov
into
xor
xchg
rcll
movsb
inc
incl
jle
adc
mul
repz
xor
sub
adc
out
sbb
clc
sub
ret
push
inc
pushf
dec
push
jbe
out
mov
push
adc
out
iret
out
in
das
jo
loop
jne
inc
inc
push
adc
jge
jecxz
sbb
pop
xor
mov
mov
mov
lret
or
imul
jb
mov
xchg
inc
mov
mov
or
cld
cmp
xchg
scas
cltd
mov
cmp
in
inc
adc
ss
inc
data16
test
and
mov
out
lcall
mov
cs
sub
pop
sub
jns
and
fwait
pop
and
cwtl
xor
add
jl
in
or
repnz
pushf
mov
jle
in
ljmp
rorl
mov
sub
inc
xlat
fucomi
adc
xchg
xchg
xor
sarb
lds
push
pop
imul
enter
jne
add
insb
adc
and
sub
imul
cmp
pusha
rorb
notb
aaa
test
xchg
inc
test
sbb
mov
pop
mov
ja
lods
xlat
sub
jg
orl
addr16
negl
jl
rorl
imull
lea
xor
mov
and
out
xchg
into
loope
mov
adc
in
in
and
inc
fstps
in
inc
push
popf
add
push
or
sbb
xchg
adc
xor
repz
in
aad
cmp
fdiv
imul
mov
lods
xchg
mov
push
out
inc
inc
mov
mov
popf
addr16
sbb
mov
jo
outsb
mov
push
add
mov
loope
pushf
shrl
cmp
adc
jl
out
sub
addb
fmull
mov
lock
pop
es
mov
push
test
in
xor
insl
jnp
and
push
out
pop
dec
push
fistl
pop
xchg
outsl
jo
stos
adc
and
ret
jbe
cmp
mov
jns
in
enter
stc
cltd
xchg
dec
inc
push
cmp
movsb
sbb
jle
xor
push
xchg
mov
or
jl
mov
lcall
mov
movl
fs
xchg
stos
sahf
pop
add
jecxz
mov
leave
push
mov
sbb
dec
push
add
mov
mov
aas
loopne
icebp
jg
pop
add
je
jb
fistps
mov
aas
push
cwtl
les
xchg
imull
loopne
add
xor
adc
and
mov
inc
or
jmp
mov
jle
ljmp
jne
dec
dec
push
ret
popf
pop
fidivl
mov
cmp
adc
push
sbb
fistpl
pop
faddl
mov
blcmsk
push
pop
arpl
push
pop
sub
outsl
adc
gs
mull
add
lods
xor
fnsave
inc
out
push
popa
and
in
repz
popl
adc
mov
xchg
cld
push
pop
or
ss
or
xor
data16
or
gs
mov
js
popf
jp
pop
sub
adc
mov
pop
int3
ljmp
pand
sub
push
inc
rolb
or
dec
mov
sbb
xchg
push
pop
xor
sub
fsubr
push
mov
sub
ficompl
mov
xor
adc
lods
leave
hlt
aaa
push
mov
mov
cmpl
fidivrl
aaa
imul
hlt
insl
adc
jo
mov
dec
pop
push
dec
rclb
push
fisubrs
out
and
into
fwait
imul
enter
insb
aaa
ljmp
test
xchg
inc
mov
sbb
lret
fcoms
xor
sbb
scas
hlt
mov
pusha
shl
ss
pop
fadds
sti
dec
or
xor
into
pop
pushfw
lds
rcr
loop
pushfw
daa
enter
pop
mov
aas
or
adc
adc
xchg
inc
dec
ret
mov
push
xchg
fiadds
xchg
lret
iret
push
into
sub
in
push
xor
out
and
jge
iret
cmpsl
in
inc
inc
dec
into
push
popf
insl
dec
insb
and
and
xchg
xor
test
jmp
adc
xor
xchg
test
outsb
lcall
jge
xchg
pusha
out
int3
insl
lahf
lea
test
subl
imul
in
cltd
in
xor
xchg
sub
jg
pop
sbb
push
xchg
cmp
outsl
fdivl
lods
jg
inc
getsec
mov
jl
lock
imul
pop
add
and
in
popf
clc
push
sbb
pushf
incb
pop
test
cmc
ror
jg
lret
xchg
cltd
pop
xchg
fisttpll
out
push
ret
shl
pop
xor
popa
push
enter
in
cwtl
mov
addb
in
mov
mov
inc
inc
inc
xlat
pop
mov
stos
in
sbb
jbe
adc
aaa
push
std
sarl
inc
int3
mov
inc
or
mov
repnz
pop
lahf
arpl
jns
sub
add
and
or
add
lods
or
and
out
pop
jge
mov
cld
mov
dec
mov
insl
les
jl
in
ljmp
gs
jb
leave
mov
cmp
mov
inc
cmp
sub
cmc
sub
js
jbe
sbb
jp
loopne
in
call
or
jb
pop
or
fildll
lea
or
fs
pop
rcll
pop
mov
or
iret
sbb
aam
mov
adc
or
cld
ja
mov
pushf
mov
test
outsl
aam
mov
push
imul
cmpsl
mov
gs
fdivrl
jne
pop
sbbb
aam
xor
and
or
sbb
mov
jnp
jg
xchg
or
jg
xlat
hlt
sub
push
fidivs
pop
in
jo
add
into
int3
adc
sub
insb
cmc
jns
and
cmp
cltd
aas
psllw
fs
fsubl
int3
jae
fsubr
lret
test
lea
add
inc
xor
lods
mov
pop
xchg
mov
outsl
adc
inc
mov
rolb
mov
mov
push
xchg
and
mov
clc
int3
das
adc
adc
xlat
repnz
jg
adc
lods
push
out
jb
jecxz
mov
lea
scas
xchg
scas
cmp
or
mov
out
push
int3
fsts
outsb
mov
sbb
dec
pop
lcall
scas
enter
fdivl
lret
sub
scas
test
divl
dec
fdivl
sub
xor
mov
cmp
lahf
xor
das
dec
mov
stos
or
cmp
fisttpl
pop
pushf
jle
popf
or
mov
lret
push
adc
lcall
lods
push
mov
sbb
outsl
mov
jbe
ljmp
ljmp
adc
or
xchg
xchg
push
inc
movsb
daa
addr16
dec
mov
std
add
push
push
rcl
cmpb
cmp
mov
frndint
xchg
mov
pop
leave
or
mov
or
in
inc
sbb
std
ja
enter
mov
insl
shlb
fists
movsl
inc
scas
add
ds
mov
add
mov
sbb
push
sti
jmp
flds
xor
filds
inc
mov
icebp
push
adc
jg
ds
dec
sbb
jp
call
xor
iret
and
js
aas
das
dec
pusha
or
vmovapd
mov
loopne
mov
cmpsl
ss
and
jo
in
jb
mov
sti
out
divb
das
notl
subb
adc
fistl
xor
push
aam
scas
jno
sub
and
dec
push
mov
push
cmpb
push
je
mov
bound
in
pop
xor
test
std
dec
int3
push
pop
out
psrlq
and
ds
rorb
in
xor
clc
mov
add
push
mov
aad
dec
push
adc
clc
in
pop
xchg
pop
xchg
notb
mov
sub
jnp
in
stos
mov
es
mov
rorb
xor
add
dec
fs
xchg
in
lret
insl
cmp
dec
ret
lret
nop
dec
push
fs
add
push
ror
test
adc
cmp
mov
sahf
scas
sbb
adc
fisttpl
and
pop
call
test
out
jns
mov
dec
push
sbb
fyl2xp1
sbb
cmc
or
pop
mov
jnp
in
call
inc
xchg
std
arpl
pusha
cld
xor
and
out
pop
pop
push
sub
lea
mov
or
xchg
ret
pusha
mov
mov
pop
ds
or
mov
and
cld
es
dec
mov
cmp
xorb
frstor
jno
xchg
push
mov
xchg
in
lahf
adc
in
dec
cmp
cmpsl
call
jns
imul
adc
or
rcrl
adc
repz
mov
dec
cmpsb
lods
in
add
push
leave
xchg
or
inc
pop
cmp
add
cmc
std
cmc
push
neg
mov
adc
sub
in
test
mov
cmp
rcrb
cmpsl
pop
lret
inc
mov
lcall
scas
out
dec
or
out
mov
or
mov
shll
popa
xor
inc
outsb
or
inc
mov
inc
pop
sbb
lds
in
xor
and
and
sub
jo
jl
in
push
mov
xor
and
sub
stos
sbb
stc
and
gs
mov
sub
aad
stos
xlat
dec
and
cld
jnp
addr16
ds
leave
sbbb
or
lds
lcall
dec
mov
pop
out
sbb
call
adc
daa
add
pop
lds
pop
adcl
push
push
or
stos
pop
stos
js
sub
fnstcw
int
xorb
sub
push
shll
ds
pop
popf
mov
in
scas
stos
and
jge
or
mov
sti
adc
mov
xchg
popa
stc
icebp
adc
jns
xchg
movsl
sbb
inc
add
mov
push
int3
nop
sbb
insb
or
movsb
cltd
and
fldl
daa
sahf
out
fdivr
pusha
or
int
in
movsb
mov
adc
js
mov
sub
xor
mov
push
cmc
adc
inc
pop
loop
cwtl
in
fcoml
movsb
add
sub
inc
xlat
test
repnz
int
adc
mov
sub
jno
sarb
dec
adc
lcall
pop
xor
popa
xor
dec
jbe
imul
rclb
repz
dec
incb
ret
imul
cli
push
bswap
and
pop
movsb
push
sub
xor
xchg
nop
xchg
cld
mov
movsb
mov
outsl
pop
daa
aad
lock
xchg
pop
scas
dec
sub
nop
cmc
ret
pop
push
mov
lea
adc
mov
xchg
outsb
sahf
jae
xchg
pop
in
mov
lahf
sub
push
mov
shll
mov
jbe
fiaddl
std
xor
cmp
mul
in
std
dec
mov
add
push
or
imul
or
add
add
ja
sub
xor
in
and
ja
fbld
mov
shll
mov
ret
cmpb
movsl
jnp
jle
outsl
lret
mov
ss
sti
sti
sbb
into
and
mov
popa
popa
in
push
adc
mov
xor
mov
in
loopne
xor
sub
dec
lods
or
inc
call
out
dec
lcall
xchg
dec
sti
mov
shll
push
xchg
mov
out
inc
jne
js
ret
cs
and
pop
push
push
fwait
adc
pop
lcall
fimull
push
sti
rcl
pop
mov
sub
out
es
cltd
fisubrl
pop
pop
xor
mov
pop
addl
out
mov
pop
loop
push
push
fiaddl
je
std
xor
mov
cmpsl
cmp
loopne
fwait
pop
sub
repz
leave
inc
and
stos
mov
addr16
or
aam
cld
scas
clc
cmpsl
repnz
cmc
pop
add
xchg
movsl
dec
xor
lds
jno
add
push
jbe
adc
fimull
inc
mov
cmovl
pusha
clc
cmp
test
ficomps
xchg
inc
test
inc
mov
das
mov
lcall
push
cmp
and
pop
imul
xchg
fsub
mov
int3
mov
push
mov
pop
inc
pop
into
inc
dec
or
mov
aad
inc
lds
sbb
insl
fnstenv
dec
sarb
lcall
in
cmp
pop
notl
jnp
mov
aad
and
lods
or
jnp
or
push
inc
imul
into
cmp
jbe
in
mov
adc
add
and
adc
daa
mov
imull
jle
adc
into
or
dec
nop
pop
sub
es
es
mov
js
mov
loop
cmpsl
test
cmpb
imul
pop
cs
aaa
pop
dec
lock
cs
test
dec
push
add
dec
xchg
or
pop
xor
push
test
cmpsb
mov
loope
mul
call
loopne
loop
adcl
outsl
cmp
mov
sub
dec
mov
cli
jl
mov
jbe
xchg
nop
lcall
arpl
push
stos
aad
add
xor
loope
inc
mov
sub
xorb
mov
adc
or
sbb
loop
repnz
mov
pop
aam
mov
sarb
dec
xor
inc
icebp
push
sub
sub
lret
cmp
cltd
inc
push
cwtl
pop
inc
out
ja
out
fstp
lret
xchg
out
mov
jns
jns
es
pop
movsb
mov
mov
and
loopne
jp
push
jle
dec
and
mov
lcall
xor
add
sub
pop
stc
cwtl
dec
jno
fidivl
push
aas
mov
cld
cli
pop
outsl
sub
pop
push
mov
mov
or
mov
stos
or
loopne
sub
sbb
stos
jae
sahf
aad
lcall
enter
xor
inc
jecxz
ljmp
scas
mov
xchg
cmp
xlat
mov
mov
jecxz
rcrl
pop
in
cmc
pop
add
pop
pop
pop
xchg
shl
mov
out
outsb
cmp
nop
xchg
add
addl
movsl
out
add
mov
lahf
ret
jno
dec
ret
sbb
negb
in
call
inc
cwtl
mov
and
fbld
sub
shlb
sbb
movsb
xchg
xchg
or
xchg
pop
pop
stc
leave
adc
sbb
push
ret
sbb
fldenv
shlb
outsl
call
rorb
cmp
adc
jbe
xor
jo
fdivp
test
jno
cltd
out
pop
mov
das
in
push
mov
jle
cmp
sub
ficoml
cmp
sbb
xor
lea
xor
mov
shll
or
and
iret
std
inc
xor
mov
mov
mov
daa
jecxz
fcompl
sbb
stos
mov
cmp
or
subl
xor
out
pop
in
push
rcll
cmp
pop
mov
popa
pop
sbb
xchg
dec
add
pop
stc
aam
stc
imul
call
or
lcall
add
xor
jl
shll
out
jns
cmp
dec
test
cwtl
andb
imul
jp
mov
or
insw
mov
mov
aam
mov
cli
cs
call
mov
xchg
inc
sub
test
push
stos
and
lcall
ret
inc
roll
mov
cld
sub
push
xchg
cmp
dec
jge
jb
test
mov
ljmp
mov
cmp
ficompl
or
dec
popa
xchg
sub
push
sub
push
fs
loopne
arpl
or
and
or
loope
lret
movsb
xor
add
jmp
out
mov
sarl
es
in
or
mov
loope
add
aam
dec
sbb
and
clc
mov
cmpsl
daa
daa
shlb
xchg
fsubp
enter
sbb
dec
cwtl
int3
lea
mov
dec
das
dec
jl
in
dec
xchg
cmc
arpl
clc
imul
ds
mov
mov
cltd
add
fs
cmp
jnp
xchg
mov
inc
or
mov
sbb
test
push
aad
nop
jbe
jbe
sub
jg
mov
stos
stos
pop
mov
mov
leave
das
mov
mov
push
movsl
cmp
lcall
cmp
fisubrs
push
push
dec
dec
stc
dec
in
loop
ds
aas
adc
inc
ljmp
sub
mov
adc
jmp
pop
scas
addl
sbb
sbb
enter
fs
sub
aaa
push
cli
mov
fimull
ret
loopne
sbb
stos
inc
adc
lds
sti
lret
in
cmp
cwtl
mov
pop
ds
pop
movsb
xchg
push
adc
or
fcompl
out
test
pop
inc
stos
lods
and
add
xchg
testb
or
mov
adc
popf
inc
mov
sbb
inc
xor
stc
test
or
sub
xchg
cltd
stos
jge
test
lock
movsb
jo
inc
mov
fisttpl
mov
cmpsb
sarl
push
dec
dec
insl
jb
aam
pop
pop
add
cmp
addr16
loopne
jb
es
cld
ljmp
jge
enter
push
aaa
inc
pop
adc
mov
das
es
inc
jg
sbb
fwait
ds
sti
out
jae
or
push
push
xor
adc
lret
sub
cli
inc
or
xchg
mov
or
daa
fsubrl
push
xchg
insb
data16
mov
dec
add
and
icebp
pop
sbb
sarl
mov
cmp
dec
cmp
stos
mov
outsl
add
shlb
je
mov
dec
mov
sbb
iret
xchg
insb
mov
fstl
mov
sub
cmpsl
mov
popa
mov
scas
iret
lret
xor
and
fstp
and
mov
dec
cli
shrl
mov
insb
in
jle
fiaddl
call
and
dec
mov
xor
sub
xor
outsb
inc
bound
jns
shrl
ss
add
cmpsl
jl
xchg
sub
shll
add
aam
imul
pop
jnp
lea
gs
push
dec
es
ret
inc
push
push
data16
add
addr16
sarl
arpl
mov
mov
fstps
sti
adc
jge
cltd
jnp
cmp
cs
lds
jge
mov
in
ss
call
rcll
iret
mov
roll
adc
bound
aam
xchg
dec
loop
sti
rol
jo
pop
jbe
fs
rcrb
sbb
or
sbb
adc
outsl
and
xor
loope
mov
addr16
jo
scas
lea
data16
fildl
ljmp
in
int3
pushf
push
mov
fcoml
ja
roll
xor
jg
or
es
into
pop
pop
ret
popf
loopne
int3
mov
or
jl
cld
add
out
lds
mov
jecxz
ret
jne
jae
add
mov
imul
jns
icebp
and
mov
xchg
push
jp
sbb
push
test
rolb
push
insl
sbb
cmp
test
pop
mov
mov
sbb
cmp
mov
sub
jp
xor
in
test
adc
popf
fidivrl
xchg
nop
es
xor
fnstsw
or
mov
leave
lahf
add
xchg
insb
inc
popf
clc
cmp
push
xor
add
pop
leave
mov
mov
inc
mov
lahf
sub
sbb
inc
mov
cmp
mov
dec
sbb
ror
push
rcrl
xlat
sbb
cmp
orl
imul
iret
mov
xchg
dec
arpl
inc
stos
aaa
sbb
jecxz
imul
dec
aad
mov
out
jg
xchg
aaa
lret
imul
inc
ret
std
or
adc
adc
xor
jle
mov
jge
mov
or
jo
call
xchg
push
test
xchg
push
orl
mov
loopne
adc
cltd
lds
iret
xor
sub
pop
pusha
imul
test
in
and
adc
js
xchg
mov
xor
and
inc
and
xor
cwtl
mov
add
imul
arpl
xor
jl
mov
cld
loop
mov
push
xchg
scas
insl
add
adc
test
pop
repnz
mov
outsb
jae
jno
mov
fistpl
cwtl
xrelease
mov
rclb
mov
je
ds
cmp
add
add
xorb
out
lock
push
sahf
lods
mov
js
fnstenv
imul
lea
test
pop
adc
imull
dec
movsl
test
mov
cwtl
inc
mov
jg
gs
add
mov
jae
jmp
bnd
xor
arpl
dec
fidivl
lods
fsubrs
xchg
daa
add
loop
fwait
data16
cmp
push
jmp
or
out
fcoml
mov
outsb
dec
sarl
mov
cmp
outsb
dec
sbb
push
push
stos
test
fnsave
bnd
movsb
rcll
xchg
inc
pushf
add
inc
adc
xchg
dec
subl
pop
add
scas
jbe,pn
and
je
dec
fidivrs
dec
jl
stc
mov
sbbb
enter
out
cmpsl
mov
lock
adc
pop
jecxz,pt
mov
outsb
xlat
sahf
xchg
mov
mov
ffree
xor
and
jb
lahf
orb
fisubrs
cli
lcall
inc
sub
imul
inc
mov
pop
aas
popa
xchg
fldcw
inc
mov
das
adc
ret
lea
push
adc
pop
imul
sbbl
dec
add
fwait
push
mov
rorb
adc
imul
sbb
aam
imul
sub
flds
ret
sbb
shlb
ret
int
out
pop
add
lock
repz
mov
cld
jae
jae
mov
cmp
sti
mov
outsl
mov
or
inc
and
push
test
into
cmp
in
das
and
cmp
movl
adcl
aas
push
xchg
mov
inc
in
loop
es
fwait
dec
stc
add
test
imul
pop
fwait
mov
jge
loope
cmp
in
iret
cmp
cmp
lods
in
out
jmp
jl
sbb
mov
add
mov
lock
test
das
repnz
das
jne
jmp
cmp
mov
sub
shr
rolb
mov
lea
adc
aad
fsubrs
lcall
pop
xchg
xchg
idivb
mov
mov
push
cld
mov
cmc
sub
pop
xor
filds
loop
mov
mov
das
sbb
loopne
loopne
or
xchg
jge
repz
jl
insb
mov
pusha
dec
aaa
mov
enter
dec
insl
dec
jmp
and
imul
jo
ljmp
outsl
cmp
adc
mov
jns
xchg
pop
js
fcomip
gs
jne
movsl
stos
cmpsb
mov
adc
repnz
test
pop
and
into
adc
inc
sbb
xchg
mov
loop
sub
or
cltd
shrb
dec
sbb
sub
aad
clc
imul
popa
fbld
dec
jecxz
and
push
ds
mov
mov
dec
inc
push
daa
enter
xor
test
cmp
push
xlat
mov
fistpll
inc
cwtl
mov
inc
daa
add
sarb
push
xor
icebp
xor
bound
sahf
lds
cmp
dec
mov
push
sbb
fwait
out
sub
mov
stos
in
cmp
stos
inc
sbbb
xchg
leave
insl
or
and
sahf
inc
shrb
pop
icebp
mov
cmc
data16
jle
sbb
lock
sub
jb
and
cmp
notl
fildll
mov
je
cmp
add
es
movsb
mov
repz
add
mov
or
and
fcoml
loopne
cli
and
and
movsl
cmp
arpl
push
dec
mov
in
repnz
int
out
int
xchg
sub
xlat
pop
out
push
push
xchg
mov
jmp
jnp
sub
mov
pop
add
add
mov
rorl
and
lods
std
sbb
xchg
lret
jp
jle
jp
cwtl
decb
in
aaa
xorb
in
or
cmp
inc
inc
jno
outsb
repz
sub
dec
pop
sahf
adc
ret
inc
mov
pop
jmp
cwtl
sbb
adc
nop
lea
sahf
test
movsb
andl
negb
mov
repnz
fnstenv
and
and
test
outsl
sub
stos
add
in
addl
pop
xor
and
add
dec
fs
sbb
aas
mov
pop
shll
mov
and
inc
test
push
inc
ja
fdivrl
pop
sti
jne
popa
fsubl
inc
cmp
adc
adc
sbb
mov
mov
sahf
xor
jne
mov
ds
mov
outsb
xor
and
xor
lea
mov
adc
aas
jecxz
push
push
fnstenv
pusha
popa
mov
mov
mov
fldt
sahf
mov
loop
sub
sbb
pop
jnp
jp
and
gs
popa
addr16
leave
repnz
cmp
les
lcall
sub
nop
test
into
or
arpl
adc
push
data16
pop
or
sub
sbb
sbb
mov
cmpsl
mov
add
jae
data16
xchg
mov
pop
popa
xchg
es
mov
das
je
push
sub
adc
adc
int3
cmp
cmp
xchg
cmp
in
std
in
ja
pand
outsb
fsts
repz
testl
ds
inc
mov
cmp
add
jns
lds
ret
gs
xchg
addb
nop
inc
cmp
popf
inc
test
aas
xorb
sbb
orb
jae
dec
inc
outsl
add
and
adc
fs
pop
push
int3
and
cmp
xchg
movsb
and
push
sbb
sbb
adcb
enter
cs
in
wbinvd
jmp
mov
and
push
cmp
fdivs
and
jne
loopne
and
into
and
xor
rol
fs
inc
loope
pop
nop
sbb
xchg
push
mov
gs
cmp
push
inc
mov
outsl
dec
std
imul
lcall
test
dec
and
mov
loopne
xor
push
jmp
pop
dec
jbe
frstor
into
jg
data16
jle
adc
lret
mov
and
adc
sbb
je
mov
xchg
push
and
cmpsl
xor
dec
cwtl
mov
insl
inc
test
lods
adc
ja
cmp
jns
lret
ljmp
xor
add
gs
push
imul
mov
jle
sti
cmpsb
shll
dec
inc
xlat
fiaddl
repz
dec
cmp
sub
sbb
out
lret
or
sub
insl
mov
xchg
push
scas
mov
in
ja
sbb
dec
inc
mul
pusha
sbb
mov
xchg
push
gs
add
or
bound
fdiv
sbb
pop
adc
mov
xor
sub
andps
lret
rclb
sbb
shrl
add
adc
or
orl
jo
pop
jp
pop
fmull
pop
stos
mov
sub
mov
inc
lods
rclb
fxch
sub
into
shrl
jbe
pop
mov
stos
icebp
sub
jne
push
inc
adcl
pop
cltd
out
sti
pop
loopne
xchg
mov
adc
call
and
or
je
cmpl
out
bound
stos
outsb
jae
pop
inc
aaa
dec
repnz
adc
push
jp
lea
lock
dec
mov
dec
cmc
in
pop
jae
js
loop
dec
pop
jge
bound
fbstp
cmp
xor
adc
sarl
ret
movsl
addr16
jmp
inc
or
or
popf
mov
or
inc
cltd
lahf
dec
dec
cltd
shrb
jb
cltd
in
stc
outsb
mov
or
dec
call
jne
xchg
and
outsl
test
das
jle
lea
or
jo
or
loopw
mov
cmp
adc
stc
push
mov
fisttpl
mov
push
fldl
mov
sub
push
dec
hlt
rclb
inc
dec
mov
test
add
jnp
xor
ror
loope
mov
stos
in
loop
arpl
pop
je
jge,pn
jecxz
cmp
jecxz
pop
movhps
sbb
push
pop
xchg
xchg
xlat
mov
leave
ds
push
sarb
pop
push
sbb
mov
aam
roll
jle
ds
mov
jmp
push
sbb
repz
pop
mov
mov
stos
pop
je
mov
sub
cmp
cmpsl
bound
push
and
aam
jnp
pop
test
andl
or
mov
popa
ret
adc
test
ja
mov
push
xchg
subb
pop
sbb
xchg
xchg
sbb
inc
int3
mov
ficoms
add
push
push
jns
push
mov
loop
inc
xchg
xor
out
inc
xor
dec
repnz
enter
xchg
ret
sbb
loope
and
pop
sub
fists
adc
jge
push
push
adc
mov
popa
push
jl
mov
lahf
dec
bound
popa
dec
lahf
and
aam
aaa
ffreep
inc
xchg
stos
rcll
xchg
cmp
cmp
fcmovnb
popl
ds
jg
sub
xchg
mov
aad
cld
dec
add
mov
mov
dec
mov
sub
inc
or
sub
pop
fstpt
jp
push
movsl
sbb
inc
xor
popf
add
out
and
xchg
sub
xor
push
jb
lock
jmp
int3
push
lea
or
ret
inc
cmpsl
out
out
mov
int3
mov
lds
in
or
push
scas
and
push
xchg
outsl
mov
xor
xor
rol
sub
js
prefetch
sbb
sbb
je
push
sub
test
pop
xor
push
push
dec
inc
xor
dec
fisttpl
fs
test
ja
or
lcall
push
lcall
clc
icebp
outsl
ficompl
stos
adc
push
push
daa
jmp
or
idivl
loopne
mov
repnz
mov
sbb
pusha
jmp
das
shrb
push
sahf
fisubrs
pop
stc
sbb
and
sti
mov
call
dec
popa
inc
push
cmp
jl
mov
adc
cmp
push
mov
add
lods
les
push
push
fnsave
in
lods
cmp
nop
push
divb
in
mov
cld
ret
test
lods
jne
xor
ss
sub
lock
aaa
fistl
adc
aas
in
call
and
push
es
int
dec
push
jg
ret
popf
inc
rcrl
add
pop
adc
jp
pop
mov
push
into
rorl
or
mov
jb
push
push
insl
jge
pop
or
dec
inc
push
cmp
out
jo
roll
dec
push
cmp
mov
inc
xor
push
rorl
in
adc
dec
aam
add
xchg
xor
mov
sbb
mov
call
mov
cld
jge
inc
mov
test
cs
inc
test
push
hlt
push
scas
pop
repnz
popa
add
stos
and
mov
out
pop
jne
dec
mov
dec
inc
enter
adc
mov
mov
subl
das
xchg
add
loopne
mov
ret
fsubl
icebp
fidivs
loop
mov
push
mov
and
mov
fwait
adc
add
fucom
inc
pop
loop
sbb
mov
cmp
mov
pushf
pop
add
ja
rorl
adc
mov
add
and
into
les
and
mov
xchg
cs
cmp
or
sub
xchg
les
cmc
sub
xchg
and
lock
lahf
add
clc
mov
mov
pop
aad
push
sub
xchg
adc
pusha
dec
dec
int
push
lea
sub
xchg
subl
dec
jmp
cmp
inc
jecxz
leave
or
ja
xor
and
pop
pop
dec
push
shlb
loop,pn
dec
orl
jecxz
insl
outsb
int3
ja
mov
xor
les
xchg
pop
testl
test
and
addl
push
mov
sar
lock
jecxz
and
sub
clc
xchg
jne
sahf
imulb
inc
cltd
pop
or
xchg
int
addr16
inc
jle
mov
loope
mov
pop
mov
sbb
hlt
aam
adc
add
mov
mov
mov
xchg
mov
jae
mov
or
jnp
jbe
cld
pop
xor
cli
aaa
leave
fnstcw
adc
lahf
cs
ret
sbb
dec
sub
pop
stos
jae
adc
jb
lret
nop
out
enter
fildll
cld
dec
cltd
jmp
ja
xchg
leavew
lea
adc
sbb
mov
mov
movsl
adcl
loop
xor
subb
mov
test
scas
mov
insl
sub
pop
xlat
add
xor
xor
mov
jb
loope
movsb
inc
or
dec
xor
sahf
push
out
stc
test
inc
pop
ds
std
push
pop
push
xor
jp
loope,pn
ret
lret
les
and
mov
dec
mov
push
mov
ljmp
and
cmp
shlb
stc
sbb
mov
add
sbb
pop
lods
lret
mov
lods
push
aam
ja
jmp
mov
mov
dec
mov
push
mov
mov
inc
gs
inc
in
or
lret
push
dec
es
call
outsb
mov
ret
stos
mov
jne
mov
cli
cltd
fwait
mov
call
daa
dec
loope
popf
mov
xor
mov
stos
pop
xchg
dec
lods
js
jl
dec
repz
ret
mov
popa
push
push
cwtl
pop
and
fistpl
nop
stos
cmp
rep
sub
and
mov
pop
mov
shrl
dec
neg
xor
jge
and
cmp
cs
pushf
inc
pop
jl
fstl
mov
or
push
sar
mov
xchg
mov
cmp
jno
cli
and
pop
ja
pop
pop
jge
and
cmp
test
jae
inc
push
sti
bound
lea
xchg
lahf
mov
stos
push
sbb
fs
jae
fidivrl
and
mov
push
mov
and
faddl
push
shrl
mov
fwait
hlt
clc
hlt
jp
repnz
xor
xchg
push
adc
add
lahf
pop
push
das
ret
je
dec
jmp
add
aad
sub
sbb
jmp
or
shll
dec
pop
jbe
add
cmpsl
sub
fidivrl
mov
fldl
adc
pop
fisttpl
sub
mov
xor
fs
adc
imul
call
dec
mov
dec
in
sub
aas
insl
ljmp
inc
mov
in
cmpsl
std
dec
xor
pop
or
cs
jecxz
xor
jno
fs
inc
mov
pop
xchg
lret
cmc
jle
mov
aad
aaa
loope
vpsrad
adc
leave
cld
int
imul
jno
sub
or
mov
and
scas
fsubrl
jo
pop
or
adc
adc
fwait
js
push
cmpsb
hlt
and
int
pop
int
mov
repnz
xor
cmp
bound
hlt
inc
jecxz
and
mov
add
lcall
cmp
mov
test
mov
cltd
pop
dec
in
leave
push
push
mov
pop
or
adc
xor
jb
add
inc
and
pushf
cmpb
insl
out
repz
mov
lock
sub
xchg
dec
das
fsts
cmp
jb
cmp
stos
lea
mov
and
pop
mov
ds
dec
xchg
pop
and
mov
cmp
jmp
and
sbb
jne
loop
enter
xchg
pop
mov
loopne
xchg
arpl
and
pop
dec
pop
sub
enter
leave
imul
sbb
mov
call
stc
cli
and
andb
mov
push
pop
lods
stc
or
pop
dec
imul
testl
add
hlt
push
cmovae
dec
leave
cmp
insl
fisttpll
out
loop
jecxz
ja
mov
and
out
or
pop
xchg
aaa
test
bound
test
xchg
scas
lods
cmp
pushf
jae
cmp
lret
rep
xor
jmp
outsb
arpl
fcomps
shrb
icebp
enter
xchg
xchg
test
pop
pushf
int3
repnz
notb
and
sub
sub
jne
mov
lret
jne
aas
inc
xlat
cli
aam
push
mov
push
xchg
mov
idivl
jne
xor
jns
aad
call
lods
sbb
push
jnp
insb
scas
popa
out
fldcw
or
xchg
clc
mov
mov
filds
mov
pop
hlt
insl
dec
mov
dec
mov
jmp
push
sbb
mov
jmp
out
and
cmpsb
push
inc
xchg
or
inc
adc
test
xlat
pop
imul
and
inc
into
fadds
mov
and
and
rorb
dec
rcrl
jecxz
xor
sbb
cs
int3
cltd
sahf
mov
jae
and
jg
cmp
in
cmp
repnz
xchg
mov
add
ss
inc
cmp
fxtract
cmp
mov
into
jl
in
gs
cmpsb
and
pop
xchg
aaa
dec
idivl
mov
dec
scas
movsl
je
stc
movsl
imul
pop
jbe
xchg
cmp
mov
add
inc
outsl
jne
scas
add
pop
loope
rcrl
cltd
xlat
repnz
sub
in
dec
fldt
mov
push
data16
jns
jecxz
lret
xchg
lea
stos
xor
popa
mov
ss
lods
outsb
jle
shrl
in
push
jne
sub
xlat
insl
nop
decl
stos
in
fsubl
ss
push
inc
mov
scas
or
xor
xchg
bound
xchg
xor
xor
xor
fcmovnbe
pusha
fidivs
xor
in
push
call
test
inc
in
fmuls
arpl
mov
cmp
out
sub
frstor
hlt
into
mov
das
sbb
out
addl
push
pusha
jne
mov
imul
das
aam
imul
cli
insl
add
mov
dec
das
mov
out
mov
xchg
mov
fcoms
lods
inc
mov
inc
ds
cli
inc
adc
adc
repnz
xor
or
ja
in
add
lret
adc
xor
mov
cmp
stos
cmp
mov
ret
mov
sub
insl
ds
and
shll
cmpsl
scas
call
add
scas
int
faddp
cmp
shll
jb
pop
jne
pop
jae
ficomps
loope
jns
inc
xchg
fnsave
scas
lcall
inc
sub
jae
xchg
pop
mov
jns
cli
inc
sbb
xlat
inc
fistpll
in
pushf
dec
in
insb
sti
mov
mov
and
dec
xor
mov
ds
mov
movsl
mov
into
shll
and
mov
rclb
ret
loope
sbbl
repnz
dec
scas
and
pop
loope
mov
addr16
lahf
adc
xor
sub
rcll
daa
mov
aas
add
push
insl
dec
add
fcoms
mov
mov
pop
movsb
cs
pop
fwait
les
mov
or
lock
sar
stc
or
out
or
push
shl
inc
dec
test
icebp
scas
jnp
pop
fadds
es
jbe
lahf
in
jo
inc
iret
inc
bound
stc
sahf
rclb
cmpsb
lods
jb
add
cmpsl
sub
lea
xchg
mov
pop
mov
lret
cmc
mov
andl
push
xchg
mov
movsl
arpl
popa
dec
std
mov
inc
jmp
pop
rorl
rorl
inc
pop
fistps
cmpsl
inc
nop
adc
and
dec
dec
xor
mov
pop
ljmp
cmp
mov
ficompl
outsb
sti
sbb
and
jo
rcll
mov
rcrl
fiadds
mov
push
or
out
enter
enter
push
sub
roll
fiaddl
pushf
cmp
dec
xchg
shrb
pop
clc
xor
ret
loope
mov
xchg
jno
or
repz
repnz
test
das
and
fimull
ret
sti
jmp
adc
ss
inc
movsl
xlat
and
addb
movsl
pop
loope
jo
dec
pop
pop
mov
stc
icebp
sbb
inc
leave
ret
inc
push
push
mov
inc
dec
and
out
aad
mov
lea
push
or
outsw
fidivrl
push
out
sub
xor
jl
xchg
adcl
das
mov
fists
cmp
mov
push
xchg
push
sahf
lahf
incl
push
sbb
scas
mov
xor
inc
adc
sahf
testb
xchg
cmpsb
movsb
push
testb
aaa
xorb
nop
loopne
lret
add
add
or
rclb
sbb
bound
inc
push
adc
mov
loopne
std
ret
jae
in
cltd
push
push
mov
fs
add
lock
mov
xchg
fsubrl
mov
movsl
scas
test
roll
mov
add
pop
inc
test
adc
int
out
ret
pop
mov
cli
dec
orl
sbb
sbbb
frstor
xchg
xor
jo
in
call
push
stos
mov
mov
mov
xchg
or
or
xor
addr16
xor
mov
cmpsl
sub
add
in
mov
fmull
push
nop
notl
cld
repnz
fcoms
mov
mov
fcmovnu
gs
inc
pop
aam
push
hlt
dec
nop
mov
pop
inc
cmp
movups
pop
xor
and
jb
pop
inc
ret
jne
repz
sar
in
mov
mov
push
push
into
pushf
notb
das
pop
xchg
pop
xor
roll
fcomps
sahf
push
pop
cmc
js
les
and
inc
cmp
and
clc
pop
insl
inc
insb
jbe
dec
sbb
ret
fidivs
mov
and
fidivs
cld
cmp
out
or
pop
out
xchg
test
mov
cmp
xchg
push
jl
es
cwtl
mov
ret
sbb
orb
addl
cmpsb
xchg
in
xchg
scas
mov
dec
mov
or
out
or
jns
and
daa
cld
imul
sbb
adc
pushl
xchg
in
sahf
jnp
and
outsl
jb
mov
cmp
adc
test
sbb
lods
sub
push
jmp
lods
sub
cmp
in
xor
cmpsl
in
jp
dec
sbb
mov
nop
xchg
inc
aam
les
call
jb
orb
test
lods
jecxz
pop
inc
jo
lock
pop
inc
insb
dec
enter
push
or
and
xchg
mov
fs
and
mov
in
icebp
sub
mov
push
scas
add
aas
andl
sbb
ret
and
adc
dec
ljmp
popa
mov
and
mov
test
push
pop
xchg
test
jl
xchg
push
aas
push
lret
adc
pusha
pop
cmp
in
mov
lcall
sub
test
frstor
test
icebp
push
xor
repz
push
or
pop
je
in
mov
mov
out
sub
int3
movsb
cmova
pusha
xorl
pusha
fsub
cwtl
lea
incb
rorl
ret
loopne
lret
xor
xchg
jecxz
mov
dec
jbe
push
or
in
lock
imul
jo
and
ds
pop
rorb
push
add
and
mov
pop
mov
pop
xchg
movsb
outsl
dec
popf
popa
cmp
and
inc
xchg
and
fs
sub
sar
aas
test
lcall
dec
cld
jne
and
leave
mov
jp
cmp
das
jp
sub
jno
fsubrl
gs
sti
jb
rorl
cmp
or
push
fs
jecxz
adcb
or
lods
lcall
ja
movsl
int3
test
xor
test
jb
insb
lods
into
repz
mov
mov
pop
xchg
fcomps
sub
sub
fiadds
aaa
in
in
add
out
test
mov
push
dec
cltd
ljmp
xor
jecxz
sbb
add
imul
mov
jb
adc
mov
jne
push
pop
sub
lret
xchg
jmp
pop
or
pushf
or
fisttpll
mov
ss
repz
int
nop
inc
out
or
or
lahf
notb
test
popf
and
enter
rcl
test
lret
push
out
adc
scas
and
mov
adc
jmp
js
inc
push
pop
rcl
dec
push
andb
lret
dec
loopne
or
outsl
outsb
mov
or
jmp
scas
and
movl
or
js
int3
loope
xor
sub
jo
aad
repnz
and
fdivrp
mov
mov
and
ljmp
test
xor
lcall
lds
iret
inc
jecxz
mov
int3
cmp
sbb
mov
cwtl
sub
xchg
popa
hlt
xchg
adc
dec
mov
popa
lcall
push
dec
mov
xchg
inc
xorb
mov
sub
mov
cltd
mov
adc
pusha
and
push
xor
jno
sti
push
in
sub
jmp
push
pop
test
adc
std
js
adc
jmp
mov
jb
aas
xor
cmpsl
stos
test
mov
shlb
xor
cli
push
sbb
rcr
jge
test
outsl
xor
arpl
popf
mull
out
pop
and
bound
int
sub
out
rcll
loopne
sbb
hlt
xor
inc
outsb
stc
xor
cwtl
cs
mov
dec
outsl
mov
int3
rorl
mov
psubsw
mov
outsl
jge
pop
repnz
sbb
movsl
fistps
leave
sbb
push
insl
push
inc
cmpsl
aam
fidivrs
aas
mov
xor
in
xchg
adc
push
sub
push
xchg
pop
adc
pop
and
jo
cmp
cltd
loope
xlat
or
push
jo
pop
fidivrl
imul
scas
xor
add
or
mov
or
cmp
out
rorl
fildl
push
insl
aad
cs
sbb
xor
imul
mov
fistps
scas
imul
sahf
out
sbb
xor
pushf
fwait
into
repnz
sub
movsl
imul
xlat
in
push
sbb
lds
lods
push
popf
xlat
add
mov
cmp
adc
jbe
hlt
test
mov
test
sub
scas
mov
sub
andb
mov
cmp
mov
test
clc
pop
leave
mov
sbb
pop
mov
stos
gs
lea
dec
rol
xchg
fcmove
int
je
test
cld
popf
imul
scas
scas
jo
dec
rol
pop
lret
movsl
inc
sub
std
pop
cs
inc
or
mov
cmpl
add
adc
rorl
out
or
outsl
sbb
mov
or
mov
push
movsl
sarl
push
jg
notl
mov
movsl
adc
push
xchg
pop
scas
sarb
adc
insb
jb
aad
test
sahf
pop
dec
xor
dec
fisttpll
js
add
or
pop
popa
push
imul
or
movb
mov
aam
ss
jns
inc
test
or
imul
les
ljmp
div
xlat
sbb
aaa
out
scas
xchg
adc
addr16
or
mov
mov
sbb
xor
loope
pop
fsubrs
std
or
add
xlat
xchg
mov
add
es
jns
add
rcll
mov
or
sahf
popf
pop
fisttpll
xchg
fwait
xor
push
pop
dec
movsb
and
jmp
xchg
addb
sub
stos
data16
std
mov
insl
loop
pop
mov
mov
xor
repnz
xor
dec
adc
loop
inc
jmp
xchg
out
or
or
fwait
ds
add
sub
rcrb
jns
jae
and
icebp
add
shll
fldenv
cmp
es
pop
jae
push
cmp
stos
adc
imul
sub
daa
push
jg
out
mov
jge
mov
test
xchg
enter
mov
mov
push
bound
dec
test
fs
inc
push
push
sub
sbb
xor
fcoms
jne
cmovle
push
shlb
sub
and
stos
add
dec
sub
sbb
out
daa
dec
pushf
inc
aas
push
out
shlb
mov
loope
jae
cmp
dec
insl
insb
cmp
pop
xlat
dec
xchg
mov
ljmp
clc
nop
mov
jae
jl
rcl
or
stc
in
data16
lret
sbb
sub
jmp
addl
push
pop
es
insb
ljmp
lahf
dec
sub
mov
lcall
mov
and
jne
xor
mov
lds
fstpl
shll
pop
iret
dec
cmp
pop
and
fisubrl
dec
pop
not
scas
fsubrl
test
and
into
mov
jge
jp
rcr
lock
mov
das
add
ja
sub
xchg
pop
inc
mov
imul
mov
addr16
add
add
xchg
jnp
repnz
and
push
dec
lock
fadds
xchg
scas
mov
fidivl
mov
xor
xlat
xchg
loop
or
fbstp
cmc
pop
xchg
pop
loopne
je
fisubrl
into
jle
and
fsubrp
aam
pusha
push
ss
or
pop
push
mov
ds
and
mov
lahf
enter
push
sbb
int
push
in
test
lret
in
xchg
call
xchg
cmp
pop
les
std
popf
pop
mov
jae
in
addr16
cmp
add
lahf
dec
sbb
pushf
incl
sub
das
ret
decl
sub
xor
dec
test
adc
aam
pop
cmp
adc
push
mov
dec
or
mov
and
je
sbb
adc
inc
cmp
scas
mov
popa
and
repnz
xchg
aaa
jmp
inc
jo
insl
push
jns
test
ret
mov
xchg
add
or
dec
nop
movsl
hlt
dec
and
hlt
adc
loop
add
fiaddl
sub
inc
pop
popa
enter
test
jo
aad
outsb
push
push
cmp
test
mov
fisubl
push
in
or
ljmp
mov
mov
les
jg
jb
shrb
add
test
int
jae
sub
movsl
lds
lret
xchg
lock
pop
mov
loop
pusha
fstps
cwtl
aam
cmp
in
scas
test
mov
jecxz
xor
aad
mov
dec
ss
cmpsb
aam
js
pop
test
sub
cmc
adc
jp
dec
wbinvd
enter
fwait
cmp
fidivrs
inc
xorb
ds
and
and
stos
loope
popf
jb
push
daa
mov
dec
loopne
fisubrl
out
mov
out
push
jge
push
out
mov
in
loopne
inc
adc
scas
and
movsb
mov
ss
cld
ds
jbe
sbb
push
sub
xor
xor
add
sbb
or
xor
lahf
jle
pushf
es
jno
dec
insb
sub
iret
add
and
dec
sub
pop
xchg
sub
popf
ja
icebp
sti
mov
out
fst
divb
leave
push
push
sti
cs
jmp
iret
jmp
fld
mov
ljmp
jbe
aas
addr16
cli
or
push
cmc
roll
dec
testl
std
sub
xchg
loop
inc
dec
xor
sarl
xor
ret
adc
adc
lcall
xchg
repz
xchg
movsb
loope
aam
testl
lcall
jl
imul
adc
ljmp
fwait
bound
pushf
fs
xlat
sbb
call
sbb
xchg
jne
or
jnp
and
dec
xchg
orb
divb
push
mov
notl
iret
mov
xor
fwait
call
or
icebp
out
xchg
push
rclb
stc
shr
nop
dec
mov
jge
add
out
and
cmp
jge
and
aaa
mov
mov
or
xchg
imul
xchg
sub
mov
enter
aad
imul
imul
movsb
cmpsb
fsubrl
or
push
repnz
stos
test
cwtl
sbb
xor
in
mov
add
int3
les
mov
push
shlb
jmp
imul
inc
and
inc
pushl
es
stos
out
sbb
inc
xor
inc
popf
and
repz
jg
xchg
mov
adc
inc
push
pop
fsubs
fnstcw
les
pop
pop
stc
mov
and
outsl
lcall
outsb
mov
pop
push
jns
rolb
in
outsl
leave
shr
or
nop
inc
xor
push
jnp
mov
cmpb
cmp
adcl
lahf
xchg
inc
sbb
cmp
out
into
rorb
lret
ficompl
fwait
or
sub
fistl
imul
popf
ds
mov
sbb
ds
je
jl
sub
push
mov
pop
mov
add
adc
pop
cs
adc
push
arpl
sbb
xor
push
mov
test
shl
sub
fdivl
pop
aam
in
pop
hlt
fnstcw
mov
sub
enter
hlt
xor
les
roll
xorb
lcall
pop
icebp
xor
in
in
fucomi
mov
pop
nop
adc
dec
sbb
mov
fcomip
shlb
xchg
scas
fdiv
shl
jb
jg
les
push
xchg
pop
les
in
mov
push
cltd
shl
mov
call
sbb
add
mov
add
xor
mov
lods
in
iret
bound
mov
inc
mov
mov
lods
add
movsl
out
jb
shl
sub
pop
sub
lret
push
aas
inc
xchg
or
xchg
push
xchg
xchg
dec
dec
fbld
xchg
fxch
loope
jb
mov
fcmovnu
les
adc
aad
or
lret
mov
in
push
call
fnstsw
pusha
push
mov
adc
mov
mov
cmp
call
add
xchg
loopne
mov
pop
inc
or
xchg
jns
cwtl
or
xchg
incl
gs
cltd
bswap
cmc
cmpsl
lds
xor
xor
daa
or
ja
push
lret
mov
aad
dec
xlat
fwait
pusha
or
into
or
int
sbbb
scas
mov
pop
sub
adc
fdiv
dec
cmp
pusha
ja
cmp
nop
jg
pop
inc
orl
les
incl
popa
and
push
pushf
daa
aaa
adc
lret
dec
pop
mov
or
cli
inc
stos
xchg
aad
lods
adc
js
sub
mov
mov
xchg
mov
add
pop
cltd
mov
pusha
jbe
push
popa
push
fs
out
movsl
jb
cmp
pushl
xor
rcrb
ret
clc
gs
mov
mov
aaa
stc
sbb
and
jp
or
add
inc
pop
add
mov
popf
push
stc
in
mov
fstpt
les
es
dec
ja
aam
jno
adc
lcall
popa
xchg
xchg
lods
or
fsubp
inc
adcb
lcall
cmc
ficoms
jo
lods
add
xor
sub
fstl
pop
out
xchg
lret
push
inc
jbe
adc
jmp
mov
out
in
pop
lret
out
add
ret
cmp
pop
and
cmp
sbb
add
mov
jns
test
mov
mov
push
lcall
or
scas
xchg
sub
push
jecxz
xorl
and
pop
xor
shrl
mov
addr16
sub
push
loope
lods
movsb
cmpsb
and
fcoml
mov
push
cli
call
aaa
add
sbb
xor
push
mov
xor
sbb
push
xor
and
xlat
repnz
jg
test
push
mov
xchg
ja
push
jbe
scas
sahf
cltd
push
push
loopne
or
push
mov
sub
nop
xor
scas
xor
andl
mov
out
nop
repz
aad
rorb
cmp
xor
jmp
dec
loopne
and
xchg
gs
shll
sub
mov
or
pusha
adc
cmp
enter
loope
cmp
xor
out
xorl
insl
int
inc
jmp
xchg
insb
adc
adc
pushf
repz
femms
pop
sbb
in
out
or
inc
loopne
dec
in
fcompl
mov
push
cld
jecxz
push
add
testl
cmp
loop
popa
push
out
fstps
cmp
dec
cmp
sahf
cmpsb
cld
push
rorl
mov
lock
mov
push
jne
dec
aam
stos
inc
jbe
out
mov
xor
popf
xchg
sti
sub
mov
or
add
pop
sbb
std
lret
mov
push
aaa
int
inc
repnz
xor
test
mov
push
push
and
jbe
xchg
add
insl
sahf
cmp
push
adc
xor
or
int
and
nop
ss
ret
cmp
decl
jge
insb
repnz
sbb
in
movsl
pop
iret
sbb
lret
popl
stc
mov
cmp
fsubp
out
xchg
shl
add
pusha
jbe
leave
adc
pop
aad
dec
leave
into
dec
adc
pushl
inc
add
pop
dec
jg
sbb
test
mov
jecxz
or
push
int3
mov
jecxz
lea
js
push
xchg
add
sbb
add
mov
dec
or
cli
pop
xor
pop
out
jecxz
cmpsl
mov
shrb
dec
out
leave
cmp
dec
hlt
push
imull
andb
dec
imul
mov
fcompl
dec
push
test
inc
inc
lret
push
cmpsb
and
fs
in
and
jge
out
cmp
in
ret
xor
mov
movb
lds
and
pop
add
outsl
rclb
mov
push
je
cltd
in
mov
out
xor
pop
js
add
movl
jl
fcompl
sub
pop
sbb
test
pop
adc
or
add
push
lret
movsb
add
push
cli
add
gs
push
dec
push
pop
insl
fcmovu
add
add
xor
ret
xchg
popa
outsb
mov
pop
mov
mov
add
scas
subb
dec
mov
sbb
in
jl
jmp
mov
pop
jmp
mov
ja
jp
xor
call
lock
ss
outsb
lcall
xor
cli
xchg
nop
mov
test
cmp
int
xor
cmc
mov
call
rcl
xchg
sub
xor
add
loope
fucomip
adc
adc
shrl
push
xor
xchg
dec
xchg
pop
inc
int
fisubl
cmp
jecxz
inc
and
push
repnz
sub
filds
cmp
mov
int
lock
sbb
adc
popa
icebp
pop
inc
sub
lahf
and
pop
inc
lret
and
pop
push
push
shrl
sub
xor
push
push
jbe
rclb
shrl
pop
repz
lcall
testl
inc
jne
aaa
jle
leave
mov
lds
insb
push
subb
xor
scas
pop
subl
xchg
push
insl
push
push
xlat
jmp
rcll
push
mov
or
pop
xor
sbb
mov
cmp
je
mov
push
mov
cmp
adc
cmp
adc
bnd
sti
sbb
sbb
insb
push
es
sub
xchg
leave
cld
sbb
shrb
jmp
in
xchg
or
sub
mov
jp
cmp
or
jl
ret
adc
push
jbe
in
lcall
clc
cmp
stos
mov
loope
xor
cld
orb
das
call
daa
lds
add
ret
pushf
mov
sbb
enter
push
mov
fmuls
inc
push
jo
mov
bound
or
mov
or
ss
pop
shll
sbb
sbb
push
jmp
adc
test
shrl
push
stos
scas
jl
ja
sti
insl
dec
sbbb
lret
faddl
add
add
imul
sub
test
arpl
icebp
imul
outsb
ret
aas
aam
mov
loop
mov
ret
dec
cmpsb
test
xor
imul
mov
sub
repz
mov
inc
inc
pop
push
ficomps
pushf
cmp
and
sbb
testb
shlb
ss
lock
test
jmp
rsqrtps
or
add
xchg
sub
inc
out
add
xor
push
cwtl
jp
xchg
add
test
jle
sbb
inc
sub
jne
jae
inc
enter
add
dec
push
mov
pop
dec
cmp
xchg
popf
xor
in
cmpsl
pop
xchg
push
push
and
mov
and
adcl
mov
jp
data16
xor
mov
push
mov
js
notl
scas
call
add
jecxz
and
mov
pop
xchg
push
fcoml
sub
mov
or
outsb
xchg
fbld
mov
push
or
lds
test
push
pop
cmpsb
mov
pop
in
and
stos
cmp
pop
js
xchg
xchg
cmp
stos
pop
leave
outsl
or
addl
mov
or
imul
jb
pop
stos
push
in
mov
pusha
dec
or
sub
nop
inc
jp
dec
mov
test
out
cltd
mov
fdivrs
insl
mov
pop
hlt
mov
cmp
inc
clc
add
sti
mov
call
or
sub
ficoml
mov
pushf
pop
dec
xor
pop
je
out
jo
scas
in
mov
rcll
pop
fxch
adcb
aam
jecxz
cs
xor
outsl
stos
pop
loop
dec
or
and
fisttpl
lahf
lock
cmp
scas
adcb
adc
dec
mov
hlt
push
pop
addr16
sub
sub
jge
js
bound
mov
dec
sbb
push
xor
jle
lods
and
and
push
stos
sub
pop
int3
shrb
aam
dec
inc
add
lahf
pop
push
xor
dec
inc
rclb
loop
notb
mov
pop
in
push
insb
mov
clc
inc
jecxz
adc
push
nop
and
dec
pop
je
mov
lods
and
adc
int
adc
push
cmp
cmp
aaa
cmp
xor
xchg
mov
push
fildll
cmpl
xor
mov
sti
stc
pop
push
movsl
and
inc
sti
jb
xorl
shl
xlat
mov
aaa
push
loopne
insb
sbb
pop
aas
loopne
adc
adc
jle
loop
adc
inc
shlb
mov
mov
outsb
mov
adc
and
test
cmp
mov
sti
pop
xlat
sbb
add
sub
mov
data16
or
inc
push
xor
or
push
xor
xor
mov
je
cmc
jb
in
arpl
jo
in
and
mov
pop
jl
out
lahf
cmpb
push
inc
xchg
out
test
fwait
mov
movsl
cltd
cld
call
cmp
or
mov
xchg
in
and
loope
push
push
test
and
push
push
adc
pop
shlb
add
jbe
ror
loop
cwtl
jns
add
movsbl
adc
push
pop
imul
push
mov
loopne
xorb
push
sub
lds
pop
sbb
jmp
sbbb
sbb
notl
mov
imul
sub
xorb
or
jl
lods
outsb
adc
cmp
jo
sub
bound
xchg
adc
mov
lock
int3
mov
or
out
mov
or
mov
pop
sti
jns
faddl
stc
xlat
push
int
jbe
decl
mov
mov
repz
xorl
xorl
jl
ret
scas
aad
cli
add
and
jb
fwait
push
adc
jnp
ret
xor
xchg
xchg
sbb
into
mov
dec
scas
out
push
fwait
cmp
aaa
lret
mov
dec
sub
into
mov
lcall
stc
data16
sti
mov
mov
push
aas
and
clc
cmp
pop
int
inc
ja
ljmp
in
loope
inc
jl
push
cmp
iret
jns
fwait
cmp
xchg
imul
mov
jo
inc
sbb
into
add
inc
sahf
mov
sub
pop
loop
scas
push
cmp
mov
rolb
add
sbb
cvttps2pi
push
shlb
in
mov
push
and
sub
out
push
flds
inc
adc
sbb
adc
mov
daa
and
insw
pusha
sub
push
inc
int3
inc
lret
or
pop
bound
sar
push
dec
nop
mov
leave
cmp
mov
int
mov
dec
loopne
mov
in
mov
inc
fisttpl
outsb
jno
mov
jmp
jb
xor
adc
pop
dec
mov
inc
inc
out
adc
cwtl
xchg
sahf
aaa
jmp
je
inc
sub
scas
jns
sarb
cmp
sub
test
sarb
or
xchg
mov
stos
imul
int3
xor
cmpsb
cmp
mov
clc
ja
sbb
cmc
sarb
jo
call
push
lds
orl
shll
leave
ljmp
or
push
lret
xor
push
xchg
pop
ljmp
mov
leave
jl
insb
fsubr
fmul
or
xchg
jge
cmp
scas
out
sbb
sbb
dec
sub
xchg
mov
inc
into
hlt
pop
push
sub
xchg
mov
mov
popa
out
inc
sbb
std
push
enter
cmp
imul
push
mov
push
out
and
push
lret
cmpsb
cs
inc
imul
cmpsb
inc
pop
and
pop
hlt
pop
into
hlt
popa
repz
rcll
mov
and
pusha
loope
jbe,pn
pop
push
sbb
cld
dec
mov
dec
rolb
lret
ds
addr16
push
inc
loopne
xor
mov
fs
or
adc
mov
or
sbb
sbb
inc
dec
inc
jmp
xlat
inc
stc
add
adc
scas
mov
jns
cmpsl
lahf
and
inc
push
cmp
fisubl
js
stc
stos
xor
jne
rolb
mov
sub
xor
jmp
ds
repz
mov
subb
cmp
nop
enter
jp
add
fidivrs
fiadds
add
fldenv
adc
mov
sub
fwait
popl
dec
dec
sbb
adc
pop
pop
pop
dec
sub
in
cmc
iret
popf
mov
sbb
int3
jo
cmp
int3
push
in
sub
xor
dec
inc
and
adc
repnz
adc
rcl
hlt
sub
jge
inc
jno
add
xchg
fadds
jge
aam
xchg
lds
ret
imul
jmp
addl
pop
adc
cmovns
add
adc
mov
or
and
mov
jno
int3
mov
adc
filds
sub
addr16
ficoms
push
rol
and
stos
sbb
enter
xchg
jo
fiadds
fwait
push
mov
dec
sub
xchg
lods
int3
inc
sbb
mov
lods
mov
out
xor
mov
movsl
mov
lods
scas
pop
push
push
mov
cmp
cld
add
orb
call
scas
popf
std
mov
dec
sub
add
cmc
mov
jns
fisttps
jp
jmp
and
sub
sahf
mov
jne
xor
cmovb
iret
sub
cmp
cmp
mov
andb
faddl
adc
ret
mov
notl
cmp
push
jmp
ljmp
mov
mov
jmp
mov
sub
icebp
pop
cmpsb
mov
and
inc
rcrb
pop
pop
into
pop
mov
fdivl
cmp
xchg
mov
mov
std
ds
fcoms
in
adc
ss
lcall
inc
and
mov
aaa
cmpl
scas
int
xchg
pop
cmp
clc
int
lahf
adc
sbb
xchg
sbb
mov
lods
dec
lret
rcll
inc
adc
adc
fstps
pop
pop
jno
xchg
in
pop
inc
lods
sbb
mov
mov
jo
and
push
pop
add
rolb
push
inc
jmp
cmpsl
cli
das
sbb
add
dec
cmp
enter
ja
pusha
decl
loopne
inc
add
mov
mov
or
sbb
xchg
push
out
and
ficoml
int3
push
or
inc
mov
mov
stc
iret
mov
lods
aam
mov
iret
mov
les
and
jnp
push
and
push
mov
fsqrt
mov
mov
push
inc
shrb
icebp
sub
je
scas
rolb
push
movsb
das
aad
addb
imul
lcall
jl
dec
cltd
jmp
xor
imul
scas
mov
popa
sbb
sbbb
lcall
mov
sahf
inc
dec
cmpsl
pusha
enter
mov
mov
pop
ffreep
adc
movsb
daa
or
cmpsl
jo
add
fisttpl
cmpsb
rol
xor
fldenv
fidivl
jmp
loopne
mov
mov
xchg
pushf
pop
inc
and
cltd
push
xchg
and
or
fisubl
negb
add
test
lret
ret
dec
test
movsb
es
enter
pop
cmp
push
pop
cld
outsl
shl
stos
sahf
or
jnp
sub
loope
jecxz,pt
pop
aam
js
mov
int
mov
enter
push
pop
out
ret
or
adc
xor
and
movsw
cmp
jnp
js
outsb
sbbl
push
jbe
std
xor
mov
mov
pop
daa
shlb
push
clc
cmc
ror
daa
nop
or
inc
lock
adc
test
lahf
cmp
sub
cld
push
mov
and
inc
cmpsb
add
jecxz
out
mov
rcll
mov
gs
sub
jns
in
aam
sub
hlt
jns
addr16
pop
mov
stos
data16
pop
adc
test
out
pop
push
mov
xor
int
lock
and
aas
fcoms
ror
jno
repz
or
or
out
ficoms
mov
in
stc
xor
push
pop
mov
sarl
add
add
cltd
pusha
movsb
outsl
mov
gs
pop
cwtl
inc
sbb
mov
jg
hlt
fs
adc
inc
icebp
cmpsl
mov
fists
lcall
adc
xchg
sar
jmp
mov
in
out
nopl
mov
dec
or
imul
push
and
mov
ret
mov
sbb
fidivrs
mov
ja
enter
jecxz
jle
jp
adc
sbb
mov
loop
lods
and
test
cwtl
inc
fcmovnbe
insb
imul
sub
rcrl
cmc
jle
movsb
loop
xor
das
or
xchg
mov
test
cltd
xchg
pop
xor
test
inc
cmp
mov
push
mov
mov
mov
cmp
mov
pop
xor
aaa
testl
jns
jmp
pop
ja
mov
scas
pop
or
jle
dec
clc
sahf
mov
mov
jl
flds
dec
mov
add
mov
xor
sub
test
leave
decb
xor
fisttps
push
xor
test
mov
pusha
cli
sbb
jl
iret
and
pop
scas
sub
fmul
push
adc
pop
push
enter
scas
mov
cmovge
enter
xchg
mov
mov
call
ljmp
jge
adc
jle
inc
xchg
dec
in
fstpt
mov
ja
sbb
sub
sti
loopne
les
sbb
inc
test
loope
out
jmp
ss
and
pushf
pop
sub
inc
xchg
imul
dec
push
stos
movsb
cmp
mov
push
sbb
call
sub
jmp
inc
in
mov
lcall
sub
aad
test
and
cmovs
push
lods
ret
sbbb
mov
call
enter
add
sbb
std
xchg
mov
aas
call
mov
xchg
mov
rol
in
gs
jo
rclb
jmp
imul
out
dec
sarb
in
jbe
call
outsb
gs
lcall
mov
sbb
xor
add
fcmovnu
sbb
cmp
fadd
arpl
subl
fiadds
xchg
pop
call
jmp
mov
ds
xor
repz
and
sub
mov
loope
inc
ss
add
insb
or
push
jg
pop
test
into
cmp
fidivs
imul
add
rcrl
xor
mov
and
addr16
xor
data16
jge
or
sbbb
loopne
and
idivl
aad
div
out
mov
jmp
std
movsb
sbb
add
shr
adc
bound
mov
aaa
cs
sub
dec
sahf
mov
or
cmpsb
inc
cmp
adc
and
jae
loop
sub
pop
test
test
adc
gs
adc
lcall
cmp
lret
xchg
leave
ficompl
push
and
dec
sbb
mov
nop
and
fcompl
rclb
xor
pop
sbb
add
mov
pop
icebp
cli
and
test
cmpsb
popf
je
lcall
or
inc
ja
jnp
pop
frstor
mov
fistps
dec
sti
add
es
xor
cld
pushf
xchg
mov
hlt
or
or
xor
dec
xchg
scas
dec
in
popa
and
inc
shr
jl
add
jno
jl
or
ret
adc
mov
pushf
xorb
scas
mov
dec
outsl
insb
cmpsb
inc
sbb
fwait
je
imul
adc
sbb
cmpsb
loopne
jecxz
sub
int3
sub
push
sbb
dec
mov
sbbl
test
ds
dec
insb
xchg
or
mov
pop
mov
sbb
jno
outsb
nop
xchg
loop
test
push
pop
jo
rorl
dec
fnstsw
fstps
mov
imul
mov
sub
mov
iret
notb
scas
movsl
jo
cwtl
add
int
mov
scas
scas
arpl
loop
test
icebp
jmp
repz
or
sbb
cld
push
push
sub
cmp
aas
rcrb
je
outsb
mov
mov
scas
jbe
cmp
cmc
xlat
xor
loop
push
adc
fistl
fsts
repz
scas
inc
cld
mov
popa
mov
push
imul
das
lds
ret
mov
adc
sub
in
and
int
pop
dec
loop
int3
cmp
add
xchg
add
out
sbb
test
push
ss
ja
ret
cmp
mov
leave
xor
movsb
cmc
mov
std
data16
aaa
aam
lods
mov
jl
in
movsb
call
pusha
mov
xchg
or
mov
jns
ljmp
and
outsl
popa
fstp
push
cwtl
jge
movsb
pop
enter
inc
cmp
sub
out
adcb
xor
jnp
bound
inc
cmpsb
inc
mov
sahf
xchg
push
xchg
push
int3
call
scas
push
das
in
xchg
jle
lea
cltd
pusha
xchg
in
loopne
mov
jl
inc
mov
mov
fisubs
push
xor
pop
mov
pop
add
inc
add
jnp
mov
stos
jg
cltd
mov
xor
out
shl
sbb
mov
xor
xadd
or
xchg
xor
stc
pop
xor
cmp
xchg
imul
cwtl
mov
cmpsl
mov
mov
jmp
fdivl
mov
mov
addr16
jno
jl
or
aas
xor
icebp
imul
inc
pop
out
jnp
aad
inc
fs
nop
cmp
mov
aad
adc
mov
mov
mov
mov
rolb
maskmovq
testl
cmp
stc
jne
fbstp
mov
mov
sub
xchg
mov
int3
push
mov
jp
mov
ss
iret
add
ljmp
insb
push
inc
lret
mov
or
mov
xchg
pop
push
push
or
mul
xor
mov
nop
and
jl
xlat
movups
push
pusha
lahf
jecxz
push
push
push
xor
repz
mov
inc
bound
shll
test
cmp
pop
cmp
and
jns
mov
xor
fsts
aam
sarb
scas
push
es
push
es
inc
mov
lcall
dec
and
push
ja
adc
stos
ret
cmp
testl
rcll
and
pop
lea
cmp
push
dec
shll
inc
test
jno
cmp
out
xor
jmp
push
add
jmp
mov
xchg
add
enter
bound
pop
and
in
or
push
out
and
mov
cmp
loop
loope
sub
dec
lcall
inc
imul
mov
cltd
or
movsl
sub
add
push
adc
cmpsl
rcrb
mov
xchg
gs
jl
data16
lock
outsb
sub
in
xchg
add
sarl
shll
jae
je
ret
push
jo
mov
lcall
jmp
andl
clc
lahf
dec
and
cmc
add
jbe
cwtl
mov
jg
mov
lods
mov
imul
push
push
xor
push
bound
je
stos
or
ja
sbb
push
inc
sub
insl
sub
and
mov
adc
aaa
jmp
pushf
je
insl
mov
inc
push
fistps
ret
xchg
cmp
dec
gs
xor
nop
and
lahf
fstl
inc
aas
es
push
pop
xor
mov
mov
mov
sub
lods
outsb
xor
sarb
mov
or
mov
jle
add
jg
mov
int3
xchg
fdivrs
movsb
jo
rorb
cli
dec
sbb
pop
or
lods
and
push
cmpsb
fimuls
scas
out
aam
jle
lods
push
add
js
test
or
mov
adc
sub
cld
sub
mov
push
mov
mov
mov
add
pop
test
sti
pusha
mov
std
jecxz
sbb
xchg
mov
cld
lea
mov
loopne
inc
xchg
pop
hlt
cmpb
push
je
sbb
jp
mov
add
iret
and
inc
fcomp
jle
cmp
dec
int3
dec
ljmp
xchg
scas
inc
xchg
mov
push
notw
cmpsb
lcall
adc
lods
test
movsb
cld
xchg
sub
cmp
mov
mov
xor
adc
sti
push
mov
adc
xor
imul
scas
mov
fcmove
stos
jle
lcall
push
adc
call
jmp
mov
mov
out
test
xchg
gs
je
rcl
push
mov
popf
inc
mov
xor
js
inc
test
mov
pop
xchg
loopne
in
ljmp
stos
enter
pop
ds
pop
mov
incb
fmull
xchg
outsl
popa
loopne
popa
mov
and
jnp
iret
xlat
pop
cmpsl
insl
xchg
loop
in
shll
push
or
mov
mov
mov
pop
dec
out
push
lea
sub
cmp
popa
lock
xchg
fcomip
pop
test
push
cmp
lds
movb
cmc
mov
cmpsl
mov
xor
ret
jno
xor
sbb
rcrl
push
xchg
lret
aad
sbb
or
add
push
pop
mov
lds
test
jle
jle
mov
nop
bound
sbb
pusha
lret
jmp
scas
int3
data16
xchg
je
pop
lods
xchg
aas
pusha
hlt
and
pop
rep
shll
bound
xor
call
mov
inc
jb
mov
mov
jnp
sub
dec
jge
shll
call
inc
ss
cmpsb
or
repnz
or
add
and
bound
jmp
jae
cmp
mov
mov
and
sarb
loope
xlat
out
imul
ret
mov
mov
adc
add
loope
jbe
inc
cmpsl
pushf
push
mov
loope
adc
and
rorb
push
mov
adc
imul
inc
rcr
cmc
sti
add
cmpsl
xchg
cwtl
lea
test
in
imul
repnz
xor
xchg
push
push
cmp
popf
jbe
pushf
push
gs
rcll
rcrb
add
inc
pop
mov
into
adcl
cmpsb
adc
pop
shlb
rol
fimull
jno,pn
jecxz
fldt
push
aam
pop
fs
mov
push
js
in
cld
orb
lahf
sbb
adc
lods
adc
cmp
roll
bound
stos
adc
xchg
push
inc
enter
sub
ja
pop
enter
js
into
push
mov
into
xlat
lds
ss
add
xchg
ss
mov
xor
xor
icebp
fadds
cld
cmp
cld
or
inc
data16
ret
adc
pop
roll
jbe
mov
sub
inc
xlat
push
jne
push
frstpm(287
daa
add
adc
adc
add
xor
dec
dec
xchg
inc
and
pop
push
shlb
js
cmc
sub
outsb
in
jge
test
lret
adc
mov
pusha
pop
and
dec
cmpsl
inc
loopne
xchg
xlat
fwait
sbb
push
xor
mov
mov
lcall
mov
xchg
lret
xchg
loope
jnp
movsb
shlb
mov
packuswb
xlat
add
das
xor
add
sub
out
scas
jns
out
leave
in
out
xor
in
rcrb
lret
add
mull
rcll
nop
add
sbb
mov
push
xchg
flds
sub
dec
out
test
gs
jecxz
jbe
lock
or
call
or
mov
lcall
fcmovne
sahf
mov
pop
mov
and
cwtl
and
rorb
out
jb
insb
addr16
imul
sbb
xchg
aad
imul
fcoms
aaa
enter
add
not
and
xchg
jno
push
orl
and
ror
sar
mov
in
sub
push
je
jp
push
aas
loopne
rorb
jg
movsb
mov
mov
push
cs
adc
test
jnp
stos
inc
adc
fcoml
pop
inc
push
sarl
and
mov
testl
mov
imul
ja
leave
and
je
mov
pusha
repnz
lock
aaa
fsts
les
aas
xchg
dec
push
cwtl
imul
xchg
rcrl
es
jmp
enter
test
mov
sub
adc
mov
mov
in
in
in
mov
or
insb
es
test
mov
pusha
fbld
popa
xor
sbb
mov
ret
outsl
dec
mov
xchg
popa
pop
pop
fs
cmp
xchg
pop
sub
mov
mov
into
add
inc
xrelease
push
sub
pop
xchg
sbb
ss
and
ret
aad
sahf
pop
int3
jecxz
lods
push
lods
lods
push
out
cmp
xchg
daa
mov
xor
inc
jno
push
pusha
test
insb
pop
dec
loope
add
test
es
ja
sarb
mov
jae
xor
mov
movsb
inc
jbe
lods
icebp
jbe
pop
or
sbb
sbb
mov
xchg
jb
rcll
imul
xchg
shr
and
xchg
add
ljmp
test
mov
dec
xor
fsubp
lods
leave
dec
sti
ficompl
pop
ret
fistl
pop
mov
jle
pop
cmc
jb
xor
jo
clc
lahf
adcb
push
cmp
std
mov
test
dec
outsl
scas
dec
ficomps
and
out
fisubrs
fidivrs
xor
mov
out
test
mov
stos
xchg
sub
cwtl
cltd
add
xor
jne
and
in
push
rcr
imul
in
dec
lods
inc
mov
daa
movl
movsb
mov
add
mov
mov
pop
adc
sub
ficomps
push
push
add
cwtl
mov
xor
pushf
lcall
jne
andl
pop
icebp
hlt
xor
js
adc
cmp
mov
cs
dec
xor
pushf
in
popa
xor
ja
lret
fs
xchg
xor
and
andl
outsl
and
push
jne
dec
cmp
mov
sbb
mov
enter
cld
xchg
jne
or
xchg
push
mov
ss
push
jge
lcall
shll
loop
cltd
or
out
adc
jmp
pop
add
pop
xchg
cs
mul
dec
pop
inc
sbb
adc
sbb
and
and
dec
movsb
daa
mov
fwait
cmp
and
repnz
sub
and
fcmovnbe
dec
adc
sbbl
orl
add
movsl
jg
jbe
int
in
je
popf
mov
cmp
xchg
cmc
cs
cmpsb
mov
jle
fldenv
push
add
mov
loope
shll
xor
inc
std
xor
add
xchg
pop
push
repnz
or
xchg
adc
jne
lds
push
push
mov
lcall
dec
xchg
les
leave
ljmp
or
push
xchg
fmulp
je
popa
test
push
cmpsl
cwtl
mov
sbbl
xchg
or
stc
sub
je
repz
lods
cmp
repnz
push
mov
pusha
pushf
push
dec
test
mov
int
sbb
inc
addr16
mov
clc
rorb
or
jne
cwtl
xor
mov
fisttps
js
xchg
or
cmp
push
addr16
xlat
push
gs
pop
push
adc
movsl
pop
out
andb
insb
jp
dec
rorb
mull
dec
insb
imul
xor
pop
cltd
cmp
dec
shrl
lods
jge
inc
pop
mov
push
cmpsb
mov
pop
pop
sti
gs
xchg
clc
pop
ljmp
cmp
sti
mov
cmp
xlat
lahf
jp
dec
mov
lock
add
and
xchg
pop
and
mov
test
mov
popf
sti
xchg
mov
ds
aas
pop
movsl
pop
jp
int3
push
mov
mov
repz
rorb
sub
mov
lods
or
shll
add
pop
cmp
stc
in
adc
inc
into
stos
aas
ljmp
jmp
jl
cmp
add
enter
iret
xor
mov
test
in
cli
inc
das
add
aas
fdivl
jp
dec
pushl
add
cmpl
and
popf
insl
sub
adc
lea
push
dec
or
and
test
pop
jle
pop
test
cmc
aaa
rcll
push
stc
mov
jne
mov
test
clc
sub
ja
fstpt
fistpl
mov
sub
out
lret
add
test
mov
rclb
inc
push
mov
xchg
subb
imul
sbb
loopne
mov
sub
mov
dec
sbb
fs
jne
lahf
mov
in
pop
add
xchg
outsl
mov
sbb
add
push
xchg
inc
cmp
mov
sub
or
mov
adc
sbb
aam
push
repnz
icebp
inc
cmp
stc
and
sahf
addr16
lods
data16
cmp
ds
jae
lods
mov
cmp
sbb
aam
inc
iret
mov
shl
inc
cmp
in
jae
fsts
dec
cmc
jle
nop
jbe
pop
push
in
inc
mov
inc
sub
xor
dec
cmpsb
sub
mov
xor
rorb
jg
pop
fdivl
shrb
arpl
sahf
sub
sub
sub
xor
mov
in
adc
int3
out
jp
add
call
push
test
imul
and
adc
mov
inc
cltd
mov
stos
mov
push
gs
mov
mov
sbb
or
sbb
push
pop
mov
bound
and
xor
loop
dec
ret
mov
mov
xchg
pop
jl
mov
push
vmovntps
filds
pop
dec
fidivs
int3
lods
subb
mov
pusha
inc
xor
out
jne
push
xchg
rcll
je
mov
scas
mov
fs
mov
or
mov
fsts
add
popf
imul
xor
sub
pusha
sub
mov
iret
sbb
inc
xor
xchg
mov
mov
pop
aam
out
mov
ret
or
stos
mov
fs
pop
adc
xor
in
add
fucomip
daa
adcb
pop
repnz
jbe
xchg
in
test
lds
dec
test
flds
shll
adcl
adc
fadd
jge
stos
pop
jecxz
lret
inc
into
push
dec
in
ficoml
mov
mov
jne
lret
popf
push
dec
jb
popf
lcall
lock
sub
into
mov
movsl
mov
daa
mov
xor
jmp
ret
xor
scas
call
add
lods
add
sti
aam
pop
or
and
ret
add
xor
mov
push
jl
and
ss
int
mov
push
adc
and
jmp
inc
xchg
cmp
fnsave
cli
out
test
xchg
xorb
ret
mov
scas
jne
and
sbb
jle
sub
stos
lret
mov
int3
pop
adcl
mov
cwtl
mov
mov
scas
insb
mov
jge
imul
lahf
andb
push
lods
cmp
add
sbb
lds
and
add
cli
ret
scas
aad
jno
lret
pusha
pop
xchg
sbb
cmp
xor
aas
pop
mov
xchg
mov
mov
push
mov
daa
mov
adc
daa
push
pop
sti
xor
xchg
mov
dec
xchg
pop
push
push
push
cmp
out
jbe
and
andl
lret
pop
jecxz
mov
ds
or
enter
add
mov
mov
fcmove
loopne
jl
and
test
cli
inc
cmpsl
mov
inc
fbld
das
jl
call
or
inc
insb
ficoml
xchg
int3
imul
dec
mov
push
push
inc
push
loopne
ja
mov
les
int
cmp
sbb
adc
push
inc
fiadds
aam
xchg
fnsave
jbe
mov
ret
jp
jb
imul
pushw
xchg
roll
or
scas
call
arpl
sbb
push
mov
xchg
push
sbb
or
aam
inc
push
mov
sub
imul
sbb
out
gs
dec
aaa
adc
add
xor
mov
lahf
int3
in
lcall
jo
addr16
push
sbb
xor
call
add
movsb
mov
call
xlat
js
and
adc
shlb
xchg
fcmovne
cli
imul
sbb
mov
test
fwait
sbb
negb
mov
push
add
mov
push
out
outsb
xchg
mov
push
das
outsb
sub
cmp
jbe
ficompl
dec
sub
loop
jb
imul
or
sub
or
lea
loope
mov
dec
popf
cmpb
mov
jno
mov
dec
mov
addr16
pop
shll
mov
test
fstps
lods
mov
or
ret
je
into
jb
sbb
cmc
add
sub
stc
or
popa
mov
fwait
mov
lea
fisubs
shl
int
add
ror
or
cmpsl
leave
mov
push
test
out
push
nop
dec
fstps
mov
sti
lret
pop
imul
mov
clc
fisttpl
xchg
sub
inc
cmp
in
jge
add
stos
cmp
jb
mov
lahf
or
jno
jae
jbe
dec
insb
or
repnz
test
leave
sub
pop
jo
loopne
xchg
mov
repnz
xor
jns
mov
scas
jle,pn
mov
mov
inc
sbb
pusha
dec
mull
cmc
sub
jo
and
push
lock
lahf
out
jmp
imul
lcall
mov
mov
addr16
mov
jmp
mov
mov
sbb
jno
add
sbb
loopne
testb
dec
xchg
mov
add
jae
repnz
sbb
js
ss
mov
push
ret
cmovb
sub
cmp
cli
xor
stos
cmpb
dec
frstor
dec
cld
addr16
jmp
mov
xlat
loop
mov
shrb
sub
loop
dec
invlpg
cltd
cmp
mov
jne
pop
xchg
lods
sub
std
inc
gs
inc
or
dec
out
add
sbb
popf
daa
icebp
mov
mov
adc
xor
sub
lock
notb
subl
adc
pop
fldlg2
sbb
mov
dec
mov
and
int3
xlat
dec
cmc
lahf
test
test
xor
aad
test
sub
adc
mov
shrl
cmp
in
xchg
xor
fldenv
mov
lcall
sahf
fildl
jle
ljmp
aad
outsl
sbb
dec
aad
pop
leave
and
loopne
divl
mov
mov
pop
push
cmp
cmp
push
call
in
jnp
aas
add
jnp
inc
clc
outsb
adc
mov
sub
or
sub
add
call
dec
sub
jecxz
aam
dec
pushf
cmp
xor
pushf
push
or
aam
vdivsd
subl
xchg
fnstsw
pop
mov
adc
pop
pop
rcl
stos
insl
rclb
sbb
adc
or
stc
jmp
cmp
push
and
fistpll
inc
cli
bound
push
dec
jae
push
les
pop
adcb
mov
push
ds
rclb
ljmp
push
cmpsb
fcomps
into
jmp
xor
test
dec
jnp
inc
sub
test
es
roll
and
cmp
aam
in
xor
xchg
inc
scas
in
jb
or
pop
and
dec
xor
out
data16
in
pop
ret
add
jnp
push
mov
push
mov
ret
jmp
push
lahf
icebp
scas
rcr
jg
xchg
popf
in
cmp
repnz
adc
shll
xor
div
dec
jmp
aam
xchg
insb
dec
in
adc
mov
xor
cmp
stos
push
sbb
loopne
addl
in
pop
sbb
mov
ds
adc
adc
ficompl
adc
adc
xor
jecxz
sub
or
or
lret
pop
scas
filds
les
sarb
mov
cmpsb
pop
lea
arpl
sbb
sbb
fmuls
xchg
push
sbb
push
jp
dec
jae
out
jp
and
iret
mov
sbb
outsl
sbb
mov
mov
lea
stos
sub
push
mov
pop
aaa
int
adc
mov
in
lods
and
jp
fnstenv
xor
push
inc
dec
fnsave
ret
sub
add
push
dec
rorb
push
andb
and
inc
iret
cmp
jmp
sub
mov
enter
addl
je
inc
xchg
adc
sbb
and
aaa
or
in
idivb
pop
inc
mov
ja
repnz
push
sub
fs
andl
mov
mov
aaa
popf
cmpb
or
or
pop
lea
and
sub
mov
cwtl
mov
add
mov
data16
mov
call
push
jbe
jp
cmpsb
push
fimuls
jle
repnz
xchg
mov
adc
repz
xchg
dec
test
js
lea
dec
xchg
outsb
sbb
sub
out
sub
stos
fnstcw
cpuid
jmp
scas
dec
fsub
ret
and
cmp
adc
mov
scas
repnz
gs
push
dec
cmp
imul
jne
pop
sbb
stos
jge
dec
loop
sbb
les
outsb
addr16
xor
ljmp
mov
scas
pushf
mov
arpl
out
sbb
xor
cs
inc
xchg
shlb
adc
lock
push
jae
push
imul
lret
test
add
std
jnp
in
inc
mov
pop
inc
xchg
lds
add
scas
movsl
cmp
pop
lods
sbb
jp
in
mov
outsl
pop
xchg
xlat
sub
fcomp
mov
push
and
sub
push
push
fstl
lahf
vmptrst
cltd
addr16
lods
pop
in
ss
sarb
jecxz
sub
std
inc
test
frstor
sahf
xchg
mov
loop
movsb
add
push
jmp
imulb
xchg
test
sub
jmp
cwtl
ret
jecxz
out
cwtl
jge
cmp
loope
jecxz
loop
push
mov
mov
lea
cmp
pop
cmpsb
dec
dec
fwait
sbb
push
xor
jecxz
sahf
inc
cmp
lahf
dec
sbb
xlat
ret
and
daa
xchg
icebp
xchg
mov
cmp
gs
mov
pop
dec
xchg
int3
xor
fistps
inc
jle
inc
push
inc
mov
jo
dec
xor
and
lods
sub
daa
mov
rclb
ret
or
pop
out
push
aaa
sbb
cwtl
sub
xlat
pop
pop
lcall
movsl
lret
add
ss
in
mov
pop
cli
loope
xchg
or
mov
fwait
test
jle
inc
jns
jecxz
push
mov
aaa
mov
mov
loopne
mov
mov
rorl
push
mov
nop
cmpsl
cmp
sbbb
sub
rolb
xor
js
adc
sub
loopne
das
dec
xor
xchg
adc
sbb
in
js
xor
test
xchg
outsl
inc
xor
arpl
into
mov
pushf
pusha
sub
aam
inc
xchg
shl
jecxz
xor
dec
arpl
xchg
or
add
enter
sub
aad
sub
lock
xor
pop
rorb
mov
sub
mov
xchg
fsubrl
shrb
cmpsl
iret
ds
nop
xchg
cmp
das
in
or
xchg
xor
out
adc
push
dec
xor
jbe
sti
sbb
aad
das
pop
or
inc
stos
out
cltd
enter
add
adcb
pusha
aam
enter
or
sub
cltd
loope
jp
push
fcmovu
mov
push
mov
adcl
push
and
sub
cmc
adc
les
and
and
jnp
sub
leave
mull
jae
mov
xor
test
insb
push
loop
push
das
ds
arpl
in
aaa
cld
aas
sarb
stc
adc
xor
sub
or
adc
lods
bound
jge
sub
in
xor
call
sub
cmp
and
sbb
mov
and
setne
lret
pop
pop
add
int
ss
sbb
xchg
push
aam
lea
loopne
cs
inc
mov
mov
sub
jle
sbb
mov
pop
push
add
push
or
js
stos
lahf
cmp
sub
scas
jno
loop
xchg
sub
cmp
and
ljmp
push
insl
mov
sbb
in
jge
mov
dec
mov
jo
in
mov
or
repz
push
stos
jle
stc
pop
iret
add
and
fsubrl
push
pop
cmpsl
dec
hlt
outsb
pusha
adcl
xor
mov
fiadds
enter
mov
fwait
test
cmpsl
fisubrl
icebp
push
jno
cmpsb
jo
adc
mov
mov
fbld
jbe
iret
ds
pop
jns
sarb
jp
pop
sahf
xor
pushf
and
lods
testl
sbbl
dec
test
into
popa
insl
jbe
mov
push
iret
lcall
pop
out
adc
dec
ret
or
aad
stos
les
lret
sbb
mov
loop,pt
mov
pop
inc
sub
es
pop
sub
xor
cmp
movsb
mov
cltd
int3
stos
addr16
adc
filds
inc
sub
and
shlb
cld
mov
lcall
mov
lret
and
arpl
inc
hlt
sahf
pop
in
icebp
sbb
xlat
pop
and
ljmp
lahf
or
stos
mov
cmpl
bound
pop
pusha
and
inc
mov
mov
mov
dec
push
fstpl
add
xor
xlat
cmpsl
add
mov
xchg
popf
rcrb
adc
and
and
gs
ficompl
notb
lcall
call
push
gs
and
ss
jno
inc
pop
loope
fldt
in
mov
clc
pop
pusha
sahf
in
fiadds
push
push
fimull
in
into
fsubp
fstps
shlb
lods
out
mov
je
fadds
popa
xor
inc
cmp
xor
fdivrl
mov
call
or
repz
dec
or
mov
pop
and
push
arpl
jge
daa
pop
adc
imul
push
out
jmp
movsl
adc
dec
adc
pop
stc
pop
or
lock
push
mov
push
jo
ds
mov
pop
clc
and
sbb
mov
pop
mov
xchg
dec
push
or
inc
jae
mov
inc
sbb
sub
cltd
gs
in
xchg
and
mov
dec
divl
sbb
mov
aam
test
lahf
inc
cmp
sub
clc
sub
leave
jecxz
dec
cmp
dec
pop
scas
inc
ss
dec
lret
mov
cmp
fdivr
out
cs
repnz
rclb
inc
fdivp
xchg
mov
push
shlb
cmp
or
mov
insl
leave
mov
pop
inc
sub
insl
push
jae
xor
lret
filds
fistpl
dec
mov
mov
mov
adc
movsb
xor
add
dec
popa
iret
mov
das
xor
mov
and
imul
jb
dec
mov
lea
js
pop
xor
and
pop
cmpsl
sub
mov
mov
jbe
push
aas
stc
pop
mov
ret
lret
fimuls
add
fabs
cmpsl
cmp
cmp
mov
jle
mov
loope
jmp
test
fucomi
outsb
jo
cmpsl
push
and
mov
add
pop
mov
lret
xor
sbb
lods
cmp
es
movsl
into
add
sarl
int3
test
roll
jp
imul
out
jle
aad
out
repz
js
imul
and
ja
mov
pop
into
mov
mov
dec
imul
movsl
push
fidivrs
mov
adc
or
cmpb
cmp
cmp
notl
mov
xchg
pushl
mov
fmulp
mov
inc
sahf
sbbb
das
inc
push
mov
insb
inc
leave
mov
out
mov
aam
or
les
sbb
pop
jecxz
xchg
or
inc
in
push
adc
or
jl
bound
test
arpl
shlb
push
xor
jmp
andb
orb
movsl
sbb
or
pop
jb
enter
or
xchg
fidivl
in
and
cld
adc
in
ret
aaa
insb
push
clc
arpl
movntps
add
into
nop
test
pushf
sub
jne
inc
leave
fsubl
loope
and
add
add
sti
or
push
not
sub
and
mov
insb
sub
and
js
shrl
mov
arpl
test
jle
xorb
sub
xchg
push
dec
push
call
cmpsl
cli
stos
je
inc
jle
jbe
test
fs
sub
jne
repz
out
pop
or
arpl
stos
mov
mov
popa
push
cmp
cmp
jne
cld
add
dec
sub
jbe
hlt
push
dec
arpl
stos
sbb
or
shr
mov
mov
loop
xchg
nop
lcall
orl
pop
rorl
sarl
sub
je
pushf
cs
pop
xchg
jmp
push
es
push
icebp
cmpsb
lret
dec
loop
mov
adc
incb
xchg
mov
or
fnstenv
jbe
in
inc
cmp
in
cmp
mov
ret
fwait
sub
cltd
mov
ja
jno
lock
jmp
pusha
insl
ret
xchg
jae
testl
in
mov
sbb
push
and
loopne
fwait
fwait
int
jns
outsw
lods
stc
jns
mov
js
ss
rcll
pop
jge
cmpsb
outsb
pop
out
into
push
scas
out
shlb
ret
testl
insl
pop
push
mov
std
outsl
mov
decb
pop
in
outsl
lock
arpl
xchg
cli
lea
jno
pusha
aam
adc
lret
pop
stc
inc
cltd
rcrb
inc
sbb
loopne
push
push
cmp
subb
movaps
in
push
lds
xlat
dec
lahf
je
sar
and
jbe
test
mov
mov
int3
cmp
cmc
lcall
pop
test
hlt
cmp
adc
sbb
sub
jle
test
imul
cltd
lock
add
stos
jge
fbstp
setae
xchg
call
jo
push
in
das
sub
fsubrs
xchg
popf
lods
out
ljmp
inc
fcomps
in
insl
mov
jae
loopne
jbe
dec
inc
stos
xor
jae
or
mov
fisubs
xchg
les
mov
cmc
push
mov
cwtl
or
cltd
loop
iret
push
dec
ds
inc
pushl
mov
mov
sub
decl
frstor
push
and
rorl
push
js
pop
and
lahf
mov
mov
or
imul
lret
cwtl
rcr
dec
inc
mov
inc
in
cmp
jle
nop
pop
and
test
std
stos
mov
lock
into
xchg
ss
add
shll
lahf
in
xor
jp
test
cmp
xchg
dec
out
testl
xor
shll
lcall
mov
dec
cwtl
xor
ja
mov
arpl
data16
cmp
xor
fcmovne
fisubl
xchg
ret
xor
mov
movsl
xchg
jg
mov
addb
mov
cwtl
rcrl
mov
xchg
jge
mov
mov
adc
inc
lcall
mov
fwait
cmpb
insb
pop
scas
sti
xor
loope
insb
movsb
inc
lods
xchg
mov
push
scas
in
or
lock
aam
fadds
push
inc
stc
adc
mov
pop
fsubrp
pop
enter
lods
xor
add
sbb
test
mov
xchg
adc
jnp
das
lret
lods
and
mov
or
lret
sbb
mov
sbb
data16
dec
sbb
stos
ja
aad
fucom
dec
stos
outsb
xorb
clc
xor
dec
inc
push
mov
mov
repz
push
daa
movl
push
test
shrb
cmp
hlt
pop
or
out
sbb
mov
inc
data16
ljmp
subl
popf
into
ret
xor
into
inc
mov
cmp
inc
addps
flds
pop
push
data16
scas
pusha
inc
sahf
push
js
mov
dec
jne
mov
stc
rorl
rorl
or
inc
mov
cld
jp
mov
mov
or
out
cs
cmp
adc
push
jle
stos
adc
mov
outsl
lds
jne
sbb
and
and
loopne
iret
lds
lret
orb
pop
cmp
ljmp
and
adc
cltd
test
xchg
dec
loope
pop
fcoms
sub
sub
pop
xor
xchg
xchg
lcall
mov
xlat
sbb
notl
mov
inc
push
dec
jne
and
cmp
push
outsb
mov
xlat
scas
loope
push
and
sub
idivl
repz
and
lea
test
add
into
cmp
cltd
push
jp
cmp
je
jb
inc
ret
leave
ret
testl
mov
dec
loopne
mov
aaa
fnstcw
fwait
mov
xor
test
cmp
lea
dec
gs
pop
lods
mov
lret
icebp
inc
xchg
push
mov
inc
and
add
xchg
iret
inc
ljmp
and
fdivrp
mov
pusha
outsl
sub
fstps
lods
fwait
lds
stos
adc
sub
inc
cmp
call
insb
int
or
mov
stos
xchg
hlt
sti
ret
pop
scas
shlb
adc
jbe
lds
xor
sub
loopne
add
sub
je
mov
cmp
mov
out
pusha
lds
pop
mov
in
mov
aas
test
fcom
cmp
add
fcomp
mov
into
lcall
push
cmp
or
int
mov
test
imul
stc
test
push
mov
pop
sub
adc
cmpsl
xchg
imull
mov
mov
jecxz
cli
shrl
test
adc
push
jns
inc
mov
lret
adc
pusha
dec
das
mov
and
xchg
xor
clc
add
xchg
mov
lods
lods
fwait
jl
sbb
enter
xchg
cmp
mov
ret
test
scas
lds
mov
out
movsb
js
adc
dec
popf
cmc
test
scas
lds
add
into
mov
adc
popf
add
lahf
push
push
cmp
push
ret
xchg
mov
jne
fnstcw
pop
stos
popa
imul
jmp
aam
sbb
and
and
inc
push
sti
cmp
jo
push
xchg
mov
xchg
pop
cmp
dec
cs
rorl
xor
icebp
arpl
cmp
loopne
sub
out
sbb
dec
out
test
jne
dec
loope
sub
idivl
mov
jle
dec
dec
sbb
jbe
jae
mov
mov
stc
dec
addr16
jae
fcomps
mov
mov
leave
loopne
xor
pop
loope
mov
inc
sbb
je
mov
std
adc
stos
or
addr16
inc
mov
bound
mov
daa
mov
pop
pop
das
adc
loop
mov
jl
vcvtpd2dq
adc
cmp
pop
test
aam
cltd
sub
xor
sub
hlt
std
popa
movsb
add
adc
cmpl
cmpsl
adc
xchg
jne
add
ljmp
dec
insb
and
xchg
and
push
add
add
mov
lods
mov
sub
inc
idiv
inc
fimull
xor
adc
push
sbb
pop
mov
lock
test
clc
xchg
ficoml
mov
std
or
sbb
mov
push
xor
scas
fsubs
push
repnz
in
sub
and
add
gs
xchg
repz
mov
xchg
pop
jl
adc
paddb
push
adc
and
ljmp
mov
add
shll
cli
cmp
add
mov
neg
xchg
adc
loope
in
or
adc
aaa
xchg
test
sub
xor
fmul
sbb
jno
sbb
in
xchg
push
pusha
adc
mov
jnp
push
fbld
out
aaa
aad
pop
jnp
dec
sbb
arpl
roll
adc
inc
shlb
inc
jecxz
clc
fsubrs
mov
stos
dec
fstps
cld
mov
sbb
sbb
imul
sub
ret
jae
inc
sbb
mov
imul
daa
or
pop
test
std
inc
add
xchg
cltd
adc
loopne
sbbb
jp
inc
inc
or
in
lock
dec
iret
or
sbb
cld
or
cmp
popf
mov
into
push
cmpsl
hlt
idivb
insb
int
xor
in
or
aad
pop
mov
lahf
adc
mov
pushf
mov
mov
sbb
out
les
cmp
insb
cli
jne
shl
mov
ja
mov
imul
cmp
push
xchg
cmp
scas
das
stos
scas
pop
out
psadbw
fsubrl
ret
into
aam
ja
mov
ljmp
mov
mov
jb
push
jmp
add
xchg
cmc
mov
lods
mov
stc
or
inc
xlat
sbb
push
mov
mov
ficoms
lahf
mov
adc
in
jae
loope
mov
ror
adc
imul
jne
xor
mov
cmp
cpuid
lret
adc
lods
xchg
mov
cltd
pop
push
aas
add
jmp
sub
mov
popa
enter
rcl
leave
add
or
gs
inc
insb
fldt
sbb
insl
jae
sbb
orb
dec
xor
hlt
inc
popa
outsb
cmpb
mov
cmpsb
or
jmp
movsl
dec
xchg
xor
das
adc
mov
mov
lock
aad
in
mov
fnstsw
insl
cli
fisubl
mov
ret
jbe
jns
jbe
push
lret
sub
int3
sbbb
or
aaa
push
sub
xor
cmp
aad
incl
stc
push
ss
push
and
jmp
push
hlt
in
jmp
aam
xor
inc
ret
push
add
jae
jo
shr
lods
push
cli
mov
rclb
imul
in
arpl
push
ss
arpl
mov
push
jecxz
lcall
imul
sar
rcr
insl
mov
sbb
rorl
scas
ret
pop
add
lcall
or
aad
jp
rorb
sbb
xchg
add
insb
xor
mov
dec
aas
add
push
lods
sti
in
daa
or
cwtl
fstpl
mov
shlb
pop
inc
and
test
xchg
jmp
ret
cmp
mov
shll
js
ja
pop
jmp
xor
cmp
nop
in
mov
test
xchg
ret
sbb
rorb
jge
add
test
pop
in
adc
insl
fadd
lret
clc
mulb
jl
jnp
cmpsl
add
in
out
pop
mov
outsb
add
ja
xchg
push
mov
push
jns
rclb
jo
ficoml
pop
push
fs
les
nop
popa
or
push
xor
lret
pop
mov
xor
das
leave
mov
ret
das
loop
jbe
bound
mov
mov
sbb
mov
loopne
lds
cmc
push
aam
pop
xor
lds
aad
je
push
cli
int
mov
inc
cld
stos
ljmp
test
sbb
or
pushl
pusha
or
cmp
mov
das
and
mov
or
sbb
dec
mov
stos
in
mov
sbb
in
call
push
sbb
mov
and
xchg
rcrl
xor
lret
and
pop
sub
test
push
iret
dec
add
xchg
add
ljmp
sarl
pop
inc
mov
pop
lods
jge
arpl
and
rol
sub
mov
xchg
outsb
inc
xchg
pop
into
ljmp
hlt
dec
aad
cltd
pop
les
out
mov
push
inc
mov
push
cmp
xor
popa
mov
dec
aaa
imul
and
or
mov
or
in
add
insl
outsb
mov
jl
clc
sub
arpl
pop
mov
jno
sub
rcrl
xor
int
add
orb
outsl
jae
mov
leave
cmpsb
push
fldl
mov
daa
jns
adc
fiadds
or
xchg
stc
ljmp
xor
add
add
lea
cmp
ret
jle
lcall
mov
xchg
loopne
out
jge
rcrb
push
cmpsb
stc
dec
ja
xor
mov
sbb
stos
push
out
loope
addr16
push
cmp
cmp
pop
out
and
call
mov
sbb
icebp
mov
rorl
inc
lods
pop
imul
dec
jae
mov
lock
ficompl
cld
xchg
imul
je
jle
sub
mov
imul
inc
mov
incb
cmpsb
dec
rclb
sub
mov
rolb
fcomip
test
jmp
movsl
jno
shr
dec
dec
push
mov
sub
sub
or
pushf
cmp
or
scas
aaa
in
adc
stos
out
into
push
sti
out
dec
fs
sti
add
aam
cmp
es
xor
repz
mov
pop
xchg
je
orl
sahf
or
mov
push
fdivs
add
adc
fwait
bnd
outsl
hlt
sbb
scas
push
pop
scas
cltd
dec
bound
mov
pop
sub
add
stos
jmp
mov
mov
adc
ja
adc
jbe
test
or
shlb
ja
popf
fistpl
mov
xchg
xor
je
fnsave
xchg
add
add
test
dec
push
inc
or
test
into
andb
nop
mov
testl
pop
fcomi
xchg
xor
add
stc
xor
mov
add
jns
fdivrs
addr16
in
cmpsb
cltd
mov
pop
into
jp
loopne
sbb
xor
cmp
mov
pop
repnz
iret
or
adc
aaa
cmp
push
popf
adc
sbb
test
ret
push
push
loope
dec
mov
shlb
aad
adc
sub
mov
and
push
or
mov
jne
ret
les
cmp
test
je
inc
outsb
sarb
inc
outsb
cmpsl
xchg
insl
shlb
les
mov
xlat
fsubr
adc
mov
mov
loope
inc
lret
ljmp
fs
jle
imul
inc
loopne
test
loop
fstp
jne
scas
cltd
fadds
fmulp
das
inc
sbb
mov
movsl
sub
scas
pop
push
push
cmp
and
scas
loop
movsb
subl
int
mov
stos
nop
ss
in
orl
sbb
push
sub
fbld
dec
test
out
cmp
enter
inc
movsb
inc
out
dec
pusha
inc
inc
add
setno
fs
sub
mov
add
lret
xchg
push
and
dec
pop
or
inc
arpl
lret
shrl
jecxz
and
addr16
arpl
aaa
sahf
in
aaa
andb
lock
mov
push
adc
iret
mov
js
and
addr16
mov
pop
jmp
arpl
sbb
lret
cli
mov
push
ret
sub
gs
sub
and
outsl
test
test
aas
or
addl
repz
pusha
sub
mov
jns
loop
mov
and
mov
and
ja
and
cwtl
xor
and
push
mov
push
insb
cmp
sbb
lods
flds
fcmovnbe
loopne
fidivs
fwait
scas
jg
ljmp
push
mov
dec
and
fbstp
aam
pop
sbb
jno
add
inc
ret
nop
jb
mov
add
aaa
push
lock
push
hlt
push
pop
pop
mov
sarb
pop
scas
out
test
pop
add
mov
pop
sub
adc
aam
sbb
pop
push
add
in
pop
and
pop
insb
jns
loopne
pop
outsl
adc
push
decl
dec
ja
dec
shlb
pop
cmp
mov
lcall
cmc
sub
cmp
dec
dec
loope
cld
push
cmp
dec
bound
in
sbb
call
enter
jno
flds
xlat
mov
icebp
cmp
xchg
mov
stc
sub
iret
sub
test
shrl
or
rcll
inc
rclb
cmp
push
scas
mov
sub
ret
cld
xchg
dec
xchg
mov
mov
test
jmp
and
add
mov
xor
icebp
loop
into
mov
push
jg
nop
xor
dec
push
push
iret
pop
push
or
popa
fmull
inc
and
add
cld
loopne
pop
outsl
lea
sub
xchg
imul
xchg
aad
rcrb
sbb
xchg
push
test
cmp
clc
orb
ret
lcall
fcomi
icebp
push
loopne
add
dec
jge
mov
push
sub
inc
in
iret
jp
push
dec
stos
pusha
push
sub
sub
movsl
ljmp
sub
dec
jle
lahf
jb
scas
push
push
jge
jmp
fstpl
out
subb
sahf
sub
sbbb
add
mov
inc
fsubl
sarb
out
mov
fsubr
mov
pop
repz
pop
inc
adc
xchg
add
jnp
in
push
mov
cmpl
ja
lods
mov
subb
xrelease
jmp
fs
out
inc
lods
and
xor
push
cmp
jp
jns
int3
das
jmp
stos
sarl
mov
xchg
push
call
inc
popw
cmp
icebp
arpl
repnz
mov
xor
push
incb
js
sbb
jle
xor
xorb
dec
jecxz
jae
sbb
push
fisubrs
mov
mov
cmp
int3
dec
imul
insl
pop
or
js
jge
fcomps
shll
outsb
xchg
out
gs
add
pop
fdivl
dec
cmc
ds
sub
fisttps
sbb
jbe
fildl
imul
leave
mov
dec
adc
gs
outsb
sti
add
pop
das
pushf
sub
or
cli
call
pop
mov
data16
sbb
dec
push
js
pop
mov
lret
push
mov
cmpsb
ss
data16
test
dec
inc
movsl
andb
xorl
mov
out
cwtl
mov
cmc
push
stos
jno
call
int3
add
pushf
adc
sbb
mov
sbb
ds
repnz
inc
lahf
das
js
push
test
divl
fwait
aam
lea
mov
adc
mov
jae
xchg
lock
inc
adc
mov
mov
daa
jno
test
cmp
inc
xchg
push
xor
test
or
insb
orl
hlt
mov
cmpsl
push
mov
xchg
test
out
fildl
mov
dec
mov
xor
mov
push
pop
dec
hlt
ljmp
add
adc
roll
or
mov
inc
and
test
in
cmp
xchg
xchg
lods
jge
das
sarl
cmpsb
or
xchg
mov
lods
cmpsl
pop
push
jp
sbbl
mov
sbb
ficoms
call
js
jnp
push
mov
add
out
out
cmp
ljmp
jle
sub
xchg
out
push
in
add
lret
jne
ficoml
pop
into
add
mov
jns
rcrb
adc
insb
inc
cld
gs
loope
ljmp
in
xor
push
sub
lahf
sub
inc
and
stos
mov
call
pop
jp
cltd
or
popf
xchg
pop
ret
mov
es
xchg
ljmp
out
shl
ss
add
in
push
inc
cs
adcb
adc
mov
sbb
rclb
sbb
loop
out
sbb
cs
and
mov
sbb
sbb
mov
in
mov
faddp
rorb
jl
xorb
jnp
pop
std
sub
pop
fcmovne
js
sti
fcoml
inc
cwtl
in
push
xor
test
sub
idivb
in
push
push
sbb
xlat
dec
push
xchg
xchg
sbbl
mov
cltd
insl
pop
movsl
in
into
test
mov
mov
inc
add
xor
push
mov
mov
inc
mov
lcall
add
dec
repnz
mov
or
arpl
push
pop
sbb
push
fs
popf
add
icebp
repnz
add
mov
fstpl
dec
mov
into
sbb
jns
int
pusha
arpl
cwtl
out
int
mov
mov
jbe
aad
push
nop
sbb
imulb
and
push
pop
push
xchg
arpl
ret
inc
cmp
cmpl
test
or
mov
push
inc
je
jne
pop
enter
gs
add
insb
push
push
in
cmp
fwait
push
pop
test
adc
mov
pop
add
fistl
sub
movsl
ret
xchg
jl
jecxz
fidivrl
fmul
cmp
sahf
dec
scas
mov
inc
int3
mov
dec
test
test
das
cmp
icebp
inc
std
push
mov
cmpsb
fwait
aam
jmp
out
jb
outsb
lods
je
xlat
push
es
lcall
stos
cli
jp
lahf
je
out
mov
rcl
or
lods
xchg
cmc
mov
outsb
out
fadd
mov
insb
pop
mov
outsl
add
cld
ret
mov
and
lock
mov
dec
xlat
xchg
mov
out
xor
es
js
adc
mov
add
daa
aaa
inc
inc
push
std
cld
cmp
aam
pop
xchg
stos
sbb
jb
arpl
push
inc
and
lds
outsb
cmp
out
jl
adc
mov
int
lods
cmpsb
ds
into
out
jmp
mov
pusha
pop
stos
pop
mov
mov
repnz
inc
out
adc
lods
movsb
and
out
loope
cmp
rcrl
mov
ds
pop
xor
jl
fs
pop
fwait
pop
and
aad
jmp
and
scas
xchg
sbb
push
xor
sbb
out
pop
mov
mov
push
popf
sbb
cmp
jmp
repz
int
jle
gs
arpl
or
mov
adc
movsb
addl
lods
ret
shll
inc
sub
aad
or
inc
push
xor
inc
inc
dec
push
cltd
es
in
pmulhw
ret
jecxz
out
add
fsubp
mov
stc
ret
jne
push
es
inc
xchg
pop
lcall
xchg
popa
add
jnp
stos
pusha
mov
stos
jo
push
xlat
add
sub
sbb
add
insb
pop
sub
mov
mov
cli
and
pusha
add
jmp
xchg
jge
fisubrs
cmp
fs
mov
mov
lods
and
add
fcompl
or
push
adc
or
lahf
push
ror
movsl
ret
sarb
inc
mov
inc
dec
or
mov
iret
fimuls
or
notl
add
popf
test
mov
inc
jae
iret
mov
fbld
adc
in
inc
test
sub
xor
pop
lret
xchg
icebp
mov
mov
out
rcl
aas
popf
lahf
cli
adc
push
jns
test
jle
pusha
xchg
roll
xlat
lcall
sbb
outsb
jg
push
rcr
pop
ljmp
inc
cmc
mov
mov
cmp
sbb
pop
add
mov
inc
jae
fs
call
push
or
movsb
sbb
outsl
jp
xchg
iret
nop
push
enter
in
aaa
add
out
insb
test
sub
mov
xor
stc
orl
push
inc
dec
pop
dec
repnz
mov
mov
dec
and
jnp
inc
xchg
lret
jb
pop
sub
fildll
nop
dec
inc
into
outsb
mov
addb
pop
adc
xchg
movsl
mov
lea
sbb
imul
insl
std
loopne
jbe
cmc
push
data16
and
movsl
mov
rcrl
mov
cs
pop
call
or
sub
ret
pop
fimuls
stos
movsl
dec
mov
pop
adc
jmp
shlb
cmp
sbb
mov
aad
sub
in
test
sbb
mov
lds
sbb
add
sub
stos
cltd
sub
mov
push
adc
lock
jge
mov
pop
or
je
mov
imul
mov
lcall
push
nop
xchg
add
mov
repz
in
dec
mov
out
arpl
bswap
jg
mov
mov
xor
std
mov
mov
pushf
lea
sbb
mov
pop
and
mov
push
dec
inc
sahf
test
mov
pusha
rorl
es
jne
mov
push
push
bound
into
push
lahf
push
adc
setg
xchg
repnz
aaa
or
jno
aam
in
mov
xchg
adcb
roll
jbe
push
inc
sub
fiaddl
push
mov
lret
sub
push
in
mov
or
sub
dec
xor
xor
lcall
adc
lea
mov
mov
clc
xchg
push
cmpsb
mov
out
loope
and
out
add
scas
sbb
incl
and
adc
mov
cmp
popa
cld
inc
ljmp
popf
adc
fidivl
sbb
or
dec
repnz
rclb
ret
dec
push
xchg
cmp
sbb
leave
and
xchg
push
decb
jne
xchg
lea
jnp
test
js
cltd
icebp
add
xor
jp
xor
stc
leave
out
inc
push
jne
pop
mov
add
xor
fwait
xchg
dec
loope
orb
sarb
mov
pop
xor
inc
sub
mov
in
cmp
mov
jle
sbb
xchg
jne
movsl
ljmp
into
mov
or
cmpb
or
movsl
sbb
aam
rolb
pop
add
daa
enter
popa
js,pn
dec
pusha
cli
cmp
pop
jp
pusha
call
call
inc
aad
push
push
ds
std
xor
and
dec
push
sub
and
repnz
jns
scas
sti
cmp
lods
xchg
nop
mov
cmp
add
cmpsb
push
pop
sbb
dec
mov
sbb
stos
rcrl
or
arpl
arpl
dec
mov
cmp
sub
dec
mov
les
adc
sti
sub
cmp
push
in
sub
dec
add
mov
push
jg
movsl
xchg
mov
loopne
xchg
jno
outsl
ja
ret
ja
or
ret
push
push
pop
push
pop
and
xchg
dec
fidivs
cmp
setbe
sbb
pop
outsl
out
sub
sbbb
into
push
cmp
push
stos
dec
cmpsl
cs
pop
or
insb
jge
mov
mov
dec
push
fs
xor
aad
lahf
outsl
dec
xchg
sar
push
push
shl
cltd
xor
add
xchg
push
sub
lcall
out
cmpsb
fdiv
stc
call
pop
test
lds
mov
inc
mov
arpl
push
xchg
inc
push
or
add
outsb
iret
iret
inc
mov
jae
sub
push
sub
popf
bound
mov
mov
sahf
cmpsb
movsl
push
xchg
stc
or
ss
pop
jns
jns
insl
test
mov
cltd
addr16
and
lcall
inc
cmp
popf
inc
inc
sub
int
cld
out
imul
inc
mov
loope
fwait
sbb
push
inc
dec
mov
hlt
jno
lret
lock
sbb
hlt
cmpsb
scas
jo
fsubrl
mov
fbstp
das
push
das
shll
mov
scas
pop
test
inc
lock
sub
test
mov
sub
ret
xorl
int
sti
sbb
dec
sbb
sahf
stc
repz
inc
addr16
and
outsb
jp
cld
push
mov
sbb
dec
xlat
popf
cmpsl
push
outsl
imul
das
stos
ret
mov
mov
pop
jno
jae
pop
iret
mov
inc
mov
inc
push
inc
pop
inc
and
xchg
clc
xor
les
aaa
addr16
std
adc
jmp
or
leave
inc
mov
jp
into
movsb
call
dec
mov
lret
mulb
into
ficoms
fmulp
fstpt
mov
jle
rcrl
inc
out
push
les
aas
test
enter
test
push
jg
lods
out
push
ds
adc
lods
sbb
push
pop
sub
in
mov
fmuls
stc
sbb
mov
rclb
push
repz
clc
in
pop
fisttpll
stc
sbb
xor
push
dec
cmp
sbb
jl
insb
scas
adc
inc
dec
mov
out
sub
daa
mov
jp
repz
lahf
out
xor
imul
sbb
mov
xchg
out
xchg
mov
into
adc
and
mov
adc
clc
push
dec
shl
jns
jle
movsb
cltd
loop
fmul
inc
sub
divb
out
adc
pop
in
fldenv
fbld
addr16
mov
push
loopne
ds
gs
inc
not
int3
xchg
mov
xor
out
jno
leave
cmpsl
pop
test
sbb
daa
adc
mov
xchg
mov
inc
mov
push
push
out
ret
or
pop
call
out
and
fsub
inc
pop
das
lcall
movsl
in
scas
dec
fptan
or
jp
xchg
jne
test
out
xchg
jecxz
sbb
push
mov
sahf
or
dec
push
stc
xchg
cli
in
mov
sub
cmpsl
xchg
cmpsl
jecxz
push
jns
outsb
out
mov
aad
pop
mov
imul
push
outsb
fnstenvs
sbb
add
pushl
sti
and
dec
mov
jl
add
divl
dec
cli
sbb
dec
out
lock
jg
scas
add
mov
pushf
or
popf
movsl
cld
out
dec
loopne
ret
mov
add
pop
xchg
pop
shl
push
icebp
js
mov
lcall
rorb
xor
and
testb
enter
in
lods
mov
fs
sbb
cs
decb
pop
repnz
inc
and
and
test
and
pop
fsubs
call
fcoms
mov
cwtl
ljmp
push
jg
adc
dec
je
int
add
clc
mov
sub
pop
fildl
les
inc
cmp
dec
cmp
lret
cmc
jbe
rcrb
decb
out
jmp
mov
xor
jbe
add
es
xor
mov
jo
inc
lods
test
pop
je
daa
adc
adc
pop
lret
push
imul
out
cmp
andl
push
lods
inc
testl
pop
jns
flds
in
aad
outsb
stos
add
cmp
jne
mov
mov
mov
outsl
xor
ret
loopne
adc
cmp
sti
push
xor
movsl
in
jl
aaa
mov
or
push
cli
ss
adc
sbb
aaa
fidivl
jae
mov
sbb
cmp
das
orl
andb
fmulp
repz
sub
sbb
xor
les
pop
aad
add
inc
pop
mov
pop
imul
out
out
and
sub
clc
mull
xchg
mov
mov
xchg
xchg
pop
and
mov
addr16
outsl
and
mov
pop
movsl
je
inc
sbb
adc
loop
xorb
xchg
clc
adc
mov
arpl
jb
imul
fstps
mov
popf
mov
test
iret
and
fsubr
xchg
dec
push
push
cltd
sbb
mov
std
icebp
ret
xlat
les
clc
flds
icebp
jecxz
pop
xchg
and
cwtl
in
adc
sub
xor
outsb
mov
adc
push
cmp
mov
inc
push
dec
fisubrl
push
iret
push
fimull
adc
jg
icebp
popf
icebp
bnd
outsl
inc
pop
mov
xor
ja
data16
jge
dec
inc
std
clc
push
adc
inc
pop
in
loop
xchg
in
movsb
and
fcoms
ljmp
test
pop
mov
inc
lods
imul
aaa
call
es
mov
popa
arpl
sbb
js
sbb
mov
jp
lock
ljmp
loopne
xor
cld
fbstp
cwtl
and
cwtl
inc
popf
sti
cmp
jg
ja
daa
cli
adc
push
inc
and
sub
out
and
push
jns
add
mov
xor
sbb
xchg
push
sahf
test
iret
mov
jb
sarb
mov
stos
daa
andb
push
xlat
int
loope
jbe
push
in
loope
rep
dec
aaa
push
inc
mov
adcb
push
cmp
xchg
jo
xchg
rcll
mov
popa
dec
outsl
inc
pop
gs
xor
mov
daa
and
mov
xchg
pop
jl
xchg
dec
or
loop
and
dec
dec
dec
loope
mov
iret
xchg
divb
mov
inc
xchg
push
push
jmp
push
test
mov
xchg
enter
mov
imul
lret
mov
lcall
inc
xchg
into
dec
lods
or
fisttpl
push
dec
cmp
imul
dec
repz
dec
fs
inc
sarb
mov
shll
sbb
sbb
push
pop
push
xor
jecxz
mov
std
cmp
mov
sbb
pop
cmp
es
insb
push
ret
out
jl
xorl
movsb
xchg
sarb
mov
mov
xchg
pop
lea
ljmp
cs
pop
lahf
xor
jmp
or
rorb
cs
lret
add
subb
fldt
pop
xor
sahf
push
mov
push
loop
jbe
mov
mov
rcrb
movsb
jecxz
xchg
mov
jp
pop
push
dec
mov
jmp
pop
and
xor
inc
xchg
xor
cmp
int
xlat
popa
aad
or
les
in
and
inc
lret
das
in
sbb
inc
adc
bndstx
sbb
push
sbb
jbe
lock
xor
or
into
mov
xchg
xor
mov
fisubs
test
mov
mov
popf
aaa
hlt
mov
mov
ret
test
cmpsl
dec
mov
pop
mov
dec
test
adc
mov
sub
pop
dec
sar
loope
and
mov
nop
dec
pop
insb
subl
das
adc
xchg
pop
pop
mov
inc
mov
pop
jnp
mov
jno
xlat
xor
in
in
push
adc
leave
test
out
lret
mov
add
dec
imul
ffreep
cld
and
movsb
sub
add
add
mov
mov
in
clc
mov
rcl
lret
fadds
lcall
push
and
imul
sub
push
mov
sbbl
sbb
out
enter
jmp
push
xchg
clc
push
insl
vpslld
rcll
pop
lahf
icebp
pop
pop
jae
scas
adc
mov
push
and
mov
dec
jns
pop
inc
movsl
jbe
xlat
inc
mov
out
dec
mov
scas
push
std
sub
xor
mov
ret
cwtl
out
jmp
ret
cmp
mov
icebp
dec
rorl
sbb
mov
jmp
aad
xchg
ljmp
xchg
sbb
fcomi
jg
pushf
je
adc
andl
ret
adc
testl
inc
adc
es
push
xchg
sbb
repz
sbb
or
jg
addr16
xchg
ljmp
ja
in
sbb
arpl
rcl
sbb
jl
popa
shl
aaa
lock
mov
ja
shlb
lock
inc
lods
in
ficoms
pop
adc
pop
cld
lock
jae
stc
dec
into
out
xchg
movzbl
mov
out
and
mov
dec
or
aad
push
push
push
or
shrl
lret
inc
je
and
lock
ret
scas
pop
int3
jl
and
xchg
imul
aas
fwait
xchg
rcrl
dec
dec
movzbl
fdivrs
daa
dec
pop
cli
mov
add
in
sti
inc
les
ret
repz
xor
cltd
adc
xor
adcl
cltd
les
xor
cmp
cmp
pop
out
pop
ret
shl
adc
test
popa
das
out
mov
lods
push
xorl
dec
jne
fstps
sub
dec
push
or
jno
mov
mov
shlb
in
pop
jmp
ret
inc
sbb
sbbl
fwait
into
loopne
xor
mov
aam
dec
pop
int3
xorb
sbbl
add
push
stc
cmpb
daa
pushf
adc
sbb
xor
inc
inc
lret
add
popaw
or
mov
lcall
cmp
push
push
fwait
adc
movsb
int
mov
adcl
test
inc
sahf
psraw
xchg
mov
test
xor
jno
add
inc
add
sbb
sub
in
popf
aas
fcomps
fsubrl
adc
pop
mov
inc
or
xor
sahf
test
jmp
or
das
mov
data16
xor
std
std
out
jbe
inc
enter
adc
fsubs
jbe
xor
decb
dec
adc
mov
jbe
mov
addr16
test
push
pop
sbb
push
jge
movsb
push
mov
std
jae
pop
xchg
xchg
mov
int3
push
lahf
fs
das
std
dec
or
rcr
fdivrs
cmpsl
xchg
repz
sbb
lahf
mov
cmp
in
lcall
inc
cwtl
sahf
cmpsb
shrb
dec
add
jmp
mov
dec
xchg
ds
ja
mov
insb
repz
adc
or
and
dec
repnz
out
mov
pop
les
push
sub
dec
ds
or
into
pop
in
or
add
mov
stos
bound
jge
xchg
xchg
or
cltd
mov
push
sub
xlat
pop
pusha
movsb
ljmp
mov
das
and
call
mov
inc
mov
inc
and
mov
jle
xor
andl
xor
add
mov
aam
ss
sub
sub
pop
cmpsl
mov
addl
mov
frstor
xor
outsl
nop
loop
gs
into
cmp
fdivs
loopne
add
and
shll
out
inc
loop
xchg
sbb
popf
in
out
stos
lods
jno
icebp
leave
int3
enter
pop
mov
ds
cmpb
das
ja
pop
mov
add
mov
popa
xor
das
sub
mov
lcall
or
pusha
dec
xchg
jmp
mov
jae
mov
adc
into
popa
add
cmpsb
mov
mov
incl
pushf
push
ljmp
mov
aad
in
and
xchg
sub
add
stos
push
mov
xchg
or
imul
add
sbb
call
shr
adc
mov
mov
mov
cmp
sbb
fnstsw
push
stos
ret
mov
sub
lcall
int3
data16
xchg
add
out
mov
and
jae
add
sbb
std
bnd
rcrb
xchg
dec
negl
xchg
int3
mov
mov
add
leave
test
stc
xor
ficoml
scas
dec
popa
push
adc
add
sub
xor
nop
mov
push
addr16
sarl
add
push
adc
out
movsl
jne
imul
orl
sub
or
sbb
jmp
ss
or
inc
cmpsl
sub
jge
mov
sbb
loope
sub
xor
std
or
sbb
fsubrp
fs
push
add
scas
mov
adc
mov
xor
aaa
popf
mov
mov
push
inc
out
sahf
mov
les
pop
xchg
jp
lahf
sbb
imul
mov
sbb
push
fdivl
mov
cmp
fildll
and
test
loopne
jmp
aaa
pop
or
sbb
push
cmp
stos
dec
push
lcall
jbe
dec
out
or
sub
pushl
mov
in
das
cmp
mov
add
js
mov
daa
cmc
outsb
repz
jb
jns
vmwrite
ss
int3
shll
add
mov
insb
jno
subl
sbb
movb
jno
or
mov
add
lret
loop
rolb
xchg
jo
popa
movsb
test
jle
loopne
popa
pop
popl
ljmp
scas
aas
aad
xor
in
cmp
jne
fldenv
shrb
stc
loop
rolb
shrl
test
repnz
in
mov
mov
ret
cltd
test
jg
mov
mov
or
das
iret
add
mov
pop
xchg
leave
lds
sahf
xor
cmp
hlt
pop
jl
fwait
pop
cli
inc
and
cmp
sub
lods
sbb
inc
lret
cmp
hlt
outsb
jae
and
sub
dec
or
sub
movsl
pop
add
scas
adc
cltd
fstps
dec
or
outsl
cmpsb
orl
cmp
loope
jno,pn
push
imul
pop
adc
mov
aam
xchg
dec
push
leave
imul
bound
lret
add
mov
popf
inc
test
dec
movsl
xlat
jg
jb
mov
bound
jg
call
dec
jae
stc
lds
mov
mov
jo
or
adc
inc
push
sbb
cwtl
mov
jne
loopne
and
cmpsl
jno
iret
jge
jnp
jnp
pop
lea
sahf
mov
xchg
xor
adc
movsb
scas
cmp
xor
out
push
or
mov
dec
mov
sub
and
add
sti
or
dec
add
scas
packssdw
out
push
insb
inc
ljmp
int
dec
xchg
sbb
imul
xchg
mov
sub
xchg
ret
push
das
and
sbb
in
cmpsl
dec
iret
es
fldt
leave
push
xor
loop
and
cwtl
push
mov
cmpsl
in
or
xchg
adcl
pusha
iret
shll
sarb
test
test
sbb
add
push
ret
aas
or
inc
inc
inc
inc
xchg
pop
in
es
stos
add
sub
out
push
mov
inc
adc
jno
icebp
addr16
clc
sbb
std
sbb
shlb
and
jle
je
or
push
and
push
xlat
fildl
inc
inc
cli
lds
test
sahf
push
daa
mov
mov
and
xchg
je
mov
mov
inc
addr16
pushf
add
mov
popa
stc
nop
sub
cmpb
inc
scas
mov
ficomps
scas
inc
cmp
mov
mov
jmp
xchg
sbb
or
mov
cld
roll
or
push
daa
fbstp
fildll
jne
mov
imul
inc
add
lds
pop
in
leave
or
pop
jnp
mov
rcr
repz
fs
js
cmp
icebp
std
add
loope
dec
mov
inc
pop
dec
inc
add
sbb
ror
incb
mov
inc
xor
mov
mov
bound
pop
mov
fldenv
icebp
mov
ja
lea
loope
jae
rorl
js
push
push
adc
sahf
push
rcl
dec
fwait
mov
push
arpl
pop
or
dec
mov
sarl
push
loope
mov
stos
mov
outsb
sub
outsl
cld
jl
adc
lods
mov
mov
or
jae
inc
pop
nop
add
clc
or
fisubs
mov
push
or
cmp
insl
inc
lds
sbb
lods
jbe
push
push
adc
ficomps
mov
or
cs
repnz
fwait
scas
add
ss
outsl
inc
sub
xor
cltd
mov
aaa
outsl
das
and
sti
push
pop
mov
xor
cmp
enter
sti
fcomp
clc
nop
lock
mov
out
pop
add
sbb
les
fmull
outsl
push
out
iret
or
sbb
daa
cmp
pop
jp
repz
sahf
mov
out
jo
dec
in
pusha
push
loope
andl
add
add
aaa
mov
mov
cmpsl
cmp
sbb
mov
cmp
mov
jge
adc
mov
cmpsl
xchg
mov
xor
leave
sbb
outsl
sub
mov
or
in
mov
rorb
dec
mov
dec
adc
pop
movsl
leave
jg
adc
rorb
and
adc
adc
mov
add
mov
sbb
mov
clc
and
lret
les
sub
xlat
stos
adc
jnp
popa
mov
xor
jecxz
or
xchg
insb
bound
ret
out
push
test
mov
push
cmpsl
hlt
out
add
cmp
jae
lock
sbb
repz
imul
xor
or
or
pop
mov
pop
sub
and
enter
test
test
pusha
lahf
mov
push
push
mov
xchg
adc
xor
fbstp
sbb
mov
and
pushl
loopne
mov
ljmp
int3
inc
mov
in
shlb
mov
aaa
cmpsl
sub
cli
push
sbb
movsl
out
dec
and
or
xor
mov
movsl
xor
mov
jl
pushf
lret
dec
sub
decb
mov
in
add
aaa
jnp
call
mov
stos
aad
adc
mov
mov
fs
inc
popf
dec
add
mov
loope
jmp
lret
fcomps
mov
or
inc
fstpt
cld
out
clc
pusha
add
mov
shrb
or
mov
push
jmp
mov
xchg
cmp
rolb
scas
shrb
mov
sbb
or
jp
std
mov
mov
scas
push
push
movsl
mov
jl
adc
inc
pop
xor
sub
push
sub
sar
mov
fstp
mov
and
movsl
sbb
jns
roll
mov
cmpb
jecxz
hlt
cltd
pop
xlat
hlt
out
clc
ret
call
shlb
pop
out
pushf
addb
dec
imul
inc
lea
outsl
mov
out
sbb
pop
sub
or
rolb
divl
sub
xor
rcrl
inc
shl
adcb
popa
jns
icebp
lret
data16
scas
pop
cmove
test
inc
es
adc
mov
rol
sub
cltd
mov
outsb
sub
leave
shlb
inc
clc
out
jp
xor
test
sarl
divl
pushf
bound
lock
lret
pop
cmpsl
push
rorb
stos
sbb
insb
adc
sbb
mov
ljmp
jbe
shlb
sahf
push
mov
out
mov
push
data16
cmp
popa
dec
les
loope
in
xchg
jmp
mov
push
lea
fwait
add
addr16
cmpsl
pop
xadd
mov
repnz
mov
cltd
sub
fld
mov
cli
xor
push
enter
xor
mov
pop
jno
clc
aaa
icebp
sub
out
mov
mov
push
cmc
push
sbb
and
fnsave
add
outsl
mov
iret
add
out
adc
xor
cli
sbb
repnz
test
lret
jnp
pop
xchg
push
add
test
cmpsl
xchg
mov
aas
xchg
js
mov
inc
lods
je
inc
imul
mov
aas
int3
xchg
shrb
lret
cmpsb
scas
adc
enter
pop
mov
std
pop
cmpsl
je
add
mov
lods
sti
in
sub
add
movsb
pop
jg
in
sahf
iret
cs
xchg
xchg
xchg
cmc
in
cwtl
push
push
insb
dec
sub
pop
and
jns
mov
sahf
inc
xchg
lods
pop
push
stc
dec
push
icebp
or
xchg
shrl
and
xchg
je
pop
imul
inc
cmp
mov
sub
addr16
std
mov
cld
xchg
loope
dec
outsl
enter
ljmp
subl
dec
shrl
movups
pop
test
dec
xchg
fiadds
mov
mov
fldcw
mov
pop
out
imul
cmc
mov
xchg
dec
push
xlat
enter
jnp
mov
dec
orb
inc
aas
sbb
mov
xchg
mov
xchg
push
mov
lcall
inc
lret
adc
push
adc
add
mov
mov
mov
xchg
sahf
mov
mov
adc
jb
push
push
daa
lret
jns
lcall
inc
std
gs
mov
dec
mov
fbstp
lcall
rcll
mov
icebp
mov
fisttpl
cmp
shll
or
push
cmp
imull
xchg
loopne
ret
mov
lcall
rclb
rcr
pop
test
hlt
lahf
cs
ds
sbb
aaa
test
xchg
pop
stos
xchg
in
inc
sub
es
and
popa
insl
inc
push
pop
jecxz
lahf
fdivrl
cmp
inc
je
adc
push
mov
test
call
xor
mov
inc
movntps
jnp
xchg
mov
adc
ret
push
xchg
loope
das
dec
aaa
cli
test
jns
shrb
cmpsl
fldenv
jbe
je
jge
dec
pop
clc
fsubl
jnp
ret
or
jb
mov
push
mov
repnz
and
dec
shll
rcrb
ret
mov
pop
add
xchg
gs
push
in
repnz
mov
ficompl
lds
div
push
out
jae
mov
movsb
out
xchg
jmp
cltd
loope
push
sbb
in
xchg
lods
testb
iret
xor
lret
dec
xor
in
int
jmp
sbb
mov
inc
mov
and
mov
not
cmpsb
jecxz
test
or
push
cltd
inc
inc
lret
movsb
test
and
pushf
xor
jge
mov
int
outsb
push
push
lret
mov
jnp
inc
mov
cmpsl
xchg
dec
jge
push
in
push
int3
pop
xor
in
push
sti
or
cwtl
pop
cmp
sbbl
cmp
inc
sub
xor
mov
movsb
lea
sub
adc
pop
or
and
push
mov
dec
and
jp
into
jmp
bswap
ljmp
xlat
aam
scas
lahf
jb
out
mov
sbb
add
and
shrl
cltd
fldl
mov
in
or
movsl
cld
outsl
inc
repnz
fistpll
popa
xor
mov
int
pop
pop
and
cmp
ja
iret
push
adcb
jecxz
adc
mov
orl
sbb
xor
mov
mov
insb
cmpl
sahf
imull
push
cmc
push
push
ret
jbe
movsb
xor
imul
int
jg
pusha
mov
aam
pop
xchg
push
mov
inc
outsb
sub
push
popa
adc
ficoml
mov
out
xlat
sbb
xor
sti
cmpsb
cmp
mov
xchg
fcmovnb
cmpb
arpl
push
lahf
jg
mov
into
jo
loope
pop
mov
push
mov
jg
dec
dec
adc
pop
lods
jmp
shll
cmp
xchg
xchg
aam
push
fistpl
cmpsl
leave
push
bound
pop
out
imul
lret
pop
dec
jbe
pop
lcall
fiaddl
ss
and
jge
add
js
or
repnz
lret
ss
or
adc
dec
mov
jae
inc
pop
loop
in
mov
mov
mov
push
mov
dec
nop
lahf
xor
or
das
push
mov
mov
adc
inc
pop
mov
shlb
repz
mov
sbb
sub
mov
mov
mov
les
cwtl
lods
hlt
lahf
sbb
les
mov
loope
and
xchg
add
rorl
lock
mov
popa
rorb
mov
into
mov
ret
ss
cmp
cmpsl
loop
xlat
int3
outsl
adc
je
mov
xchg
push
cld
ret
fisttps
aas
add
jge
sub
sub
btr
repnz
add
push
in
dec
aaa
rcrb
mov
mov
or
out
movsl
push
test
xchg
jmp
popf
inc
pop
pop
push
jns
fidivrl
popf
popa
cmpsb
lods
loope
stc
sub
mov
jge
adc
jmp
adcl
dec
sub
jno
loopne
fs
ret
adc
out
xchg
or
jae
mov
adc
push
pushf
in
sub
lods
and
addr16
mov
cwtl
out
enter
xor
incb
jae
xor
or
dec
push
push
mov
fs
xor
lahf
cwtl
sbb
mov
xchg
push
rcrb
xchg
or
or
jbe
or
jne
or
out
in
into
mov
xchg
dec
mov
mov
mov
rorb
sub
xor
lods
jo
daa
cs
lea
adc
push
pop
cmp
adc
pop
xor
shrl
or
inc
push
mov
mov
xchg
adc
pop
in
sahf
pop
pop
lds
xchg
rcl
inc
sbb
push
popa
mov
jno
shll
push
mov
adc
mov
pop
aaa
stos
movsb
lahf
xlat
je
pop
in
pop
test
popf
jmp
outsl
and
jne
cld
add
pushf
fiadds
sub
push
ret
and
push
fnsave
lods
loopne
outsb
or
ss
mov
fnstcw
bound
imul
and
insb
loop
shll
pop
int3
lods
leave
cmc
sub
and
icebp
add
cli
sbb
lret
and
cmpsb
pop
and
adc
add
and
insl
xchg
xor
decl
enter
cmp
fsubs
add
insl
stos
stos
lods
mov
push
in
sbb
aad
or
mov
data16
mov
in
lds
data16
data16
lahf
or
sbb
adc
rclb
loopne
subl
inc
mov
mov
pop
pushf
or
bound
mov
cmpsl
mov
call
cmp
mov
stos
scas
xchg
mov
cs
dec
pop
xor
movsb
in
mov
js
pop
movsb
mov
les
cld
loopne
sbb
and
add
out
clc
or
xadd
pushf
movsl
imul
push
dec
mov
jg
jnp
push
clc
or
test
iret
sbb
imul
sbb
leave
lret
mov
dec
cld
out
xchg
ret
js
jo
cmp
notl
xor
dec
arpl
adc
pusha
inc
daa
mov
stos
lcall
adc
xchg
push
add
imul
cs
jns
lret
fucom
stc
in
lret
test
push
mov
adc
and
cmc
cmp
stos
sahf
mov
xor
call
test
cs
repz
stos
imul
sub
or
lret
jge
nop
or
inc
fucomip
leave
mov
dec
or
adc
pop
mov
insl
lcall
call
push
or
pop
xor
push
aaa
push
xchg
insb
push
idivl
pop
jnp
mov
fbstp
mov
push
or
les
lret
rorb
or
push
out
lret
jbe
inc
mov
test
loope
inc
into
cmp
pop
jne
ja
pop
mov
xchg
adc
ret
fcomi
lock
pop
idivb
add
push
int
cmp
sbb
jp
jno
popf
fcoml
lret
pop
sbb
mov
roll
stc
fsubs
push
cwtl
addr16
pop
ja
mov
rolb
fmull
push
and
test
mov
in
inc
cltd
repz
jae
jae
jae
lret
out
jl
mov
xchg
sbb
out
add
les
iret
inc
ds
mov
xchg
pushf
repnz
or
sbb
gs
jge
add
jne
aas
push
sbb
adc
xchg
loopne
das
ds
add
adc
sbb
shll
and
pop
jmp
cmp
int3
subl
repz
xor
mov
cmp
xchg
sub
cs
xchg
add
pop
loopne
rcrb
fmulp
add
loope
mov
std
pusha
jecxz
movsb
push
add
out
lea
aad
xchg
xchg
pop
and
xchg
cmp
mov
call
mov
js
push
jle
test
imul
jg
and
fdiv
stc
and
js
shr
and
sbb
cmp
and
scas
pop
mov
mov
xchg
mov
cltd
mov
test
pushf
lret
jle
pusha
adc
or
lock
in
aas
and
pushf
lret
lahf
test
out
mov
push
jbe
in
lods
and
ss
popa
sbb
mov
jnp
sbb
jmp
in
jnp
es
push
fistl
xor
out
push
jp
xchg
js
test
shll
call
jno
sbb
dec
dec
ljmp
movsb
xor
stos
push
bound
mov
pop
mov
push
inc
rol
dec
lods
xor
mov
adc
cmp
mov
push
xor
sub
push
ljmp
sbb
js
aas
out
sbb
adc
loope
xchg
add
int3
jnp
hlt
xchg
jns
imul
sbb
and
lds
sahf
fisubl
stos
mov
in
cmp
cld
xor
lahf
hlt
in
mov
insl
lea
and
cltd
inc
lds
jg
mov
dec
cmp
pop
in
shll
jnp
aaa
mov
pop
ss
and
test
ss
or
xor
dec
sbbb
pop
push
fcoms
inc
jno
inc
add
out
repz
cltd
clc
push
loopne
das
bound
mov
pop
or
lret
fwait
sbb
xchg
and
or
push
dec
xor
fildl
inc
popa
sahf
push
fisttpl
repz
arpl
ss
push
xchg
mov
test
sti
inc
cmp
mov
int
arpl
iret
imul
in
xor
insl
dec
in
lret
aam
in
dec
cmpsb
push
pop
cld
test
and
lret
sub
adc
pop
dec
jb
push
ds
cmpsb
xchg
mov
vpsllvd
xchg
dec
lahf
cmp
jl
mov
xor
in
and
shlb
push
insb
xchg
sbb
push
in
pop
test
sub
lret
gs
aad
cmp
stc
sbb
aaa
mov
or
rol
out
mov
adc
adc
dec
sub
mov
mov
out
pop
adc
rol
and
rcr
cmp
pop
sti
xor
test
outsl
jmp
lods
sarb
push
mov
in
sub
sbb
ljmp
std
ja
and
cmpsl
cmpsl
mov
in
pop
call
push
lock
mov
lods
xchg
mov
lods
jle
in
push
pop
es
mov
repz
rolb
push
enter
cwtl
pop
xor
dec
mov
pusha
lock
orl
iret
ljmp
rcll
nop
pop
test
xchg
adc
mov
subl
decl
xor
shl
div
rcrl
hlt
inc
stos
mov
and
sub
jno
mov
pop
lret
and
cmp
test
jle
jmp
add
repnz
add
pop
fimull
mov
arpl
out
insl
push
stos
jg
mov
sub
dec
lea
push
jb
cmp
add
mov
movsb
test
mov
aad
add
arpl
mov
enter
lds
xor
push
lret
mov
ds
push
mov
lods
xor
lds
push
pop
mov
data16
mov
mov
out
aaa
repnz
jo
icebp
mov
add
xchg
aaa
push
outsb
ds
mov
or
pop
push
cmpsb
jmp
rorl
roll
negb
in
pop
sbb
push
sbb
mov
outsb
stos
xchg
aaa
gs
subb
jl
add
and
mov
orl
sub
inc
cmp
push
push
and
or
sub
xchg
es
push
lcall
jle
pop
int
in
fmul
adc
stos
js
xor
dec
dec
fwait
push
and
push
xor
outsb
jle
or
or
jno
mov
jne
in
les
jns
add
sbb
xlat
aad
dec
ljmp
sub
es
xor
popaw
sub
sbb
dec
mov
stos
dec
sbbl
jge
rolb
aad
jne
rorl
and
sbb
dec
ret
stc
jecxz
jecxz
cltd
sbb
sub
mov
push
xchg
out
xor
adc
jmp
jbe
test
cli
mov
mov
in
cmp
mov
jno
ret
lods
sbb
dec
imul
ret
dec
les
pop
push
push
cmp
enter
cltd
mov
add
xor
int
push
mov
jecxz
mov
jle
xchg
inc
sub
cmp
fs
sbb
cmp
mov
repz
jbe
and
sbb
cmp
push
test
jecxz
pop
xchg
and
shlb
push
sti
cmp
or
imul
lock
dec
push
and
mov
dec
test
mov
lcall
cmpsl
jl
rolb
mov
cmpsb
push
dec
rcll
ret
pop
mov
lea
cmp
add
into
aam
adc
push
inc
push
cmp
ficomps
adc
and
mov
sbbb
cmp
pop
cmp
loop
xchg
lcall
outsl
sub
mov
inc
mov
cmp
push
mov
cmp
pop
inc
insb
hlt
or
fisubs
bound
and
das
or
pop
lds
subl
cmc
test
add
movlps
mov
cli
imul
jl
andb
or
inc
aas
pop
daa
xor
cmpsl
push
adc
fists
jg
movb
scas
mov
sub
in
push
inc
or
or
push
lds
push
js
lea
lea
and
lahf
mov
dec
cmp
icebp
cmp
insl
lret
mov
negl
adc
pop
dec
sti
or
adc
shrb
roll
or
inc
dec
in
mov
push
or
popa
inc
rcll
mov
mov
insl
popa
or
and
repz
cli
dec
dec
and
push
sub
and
sub
stos
xor
test
mov
xor
into
fisubrs
dec
nop
pop
xor
out
in
hlt
adc
inc
nop
ljmp
add
in
inc
int
sub
aas
pop
mov
and
aam
bound
or
push
outsl
in
push
icebp
aam
out
arpl
or
test
dec
jbe
ljmp
mov
jl
test
push
pop
sub
aam
jp
adc
adc
add
mov
fwait
imul
test
in
repnz
or
xor
icebp
loopne
mov
jno
addl
std
xchg
mov
jp
add
sbb
scas
add
push
mov
jne
xchg
popa
xor
pop
fisttpl
cmpsb
shlb
xor
adc
sub
push
test
dec
aam
rclb
xor
std
jmp
fmuls
nop
cmp
sbb
sbb
or
or
mov
clc
cs
pop
in
scas
dec
in
jno
push
adc
mov
inc
roll
mov
jno
scas
and
notl
aaa
in
mov
push
int3
or
cs
lods
mov
jl
mov
jns
lock
clc
and
add
fs
das
out
subb
inc
es
loop
repnz
or
ja
add
icebp
stc
push
insl
daa
jmp
jne
pop
or
xchg
ss
jle
pop
fistl
cli
repz
cwtl
push
mov
fsubr
scas
mov
aaa
push
cld
loope
dec
jns
and
jnp
out
or
subl
call
rcrl
mov
stos
or
inc
push
das
stos
sub
out
inc
ss
add
aaa
cwtl
imul
and
dec
popa
aad
les
add
mov
adc
mov
sbb
ja
repz
dec
fildl
test
out
inc
xor
int
push
pop
les
and
cmpsb
mov
cld
mov
sbb
push
pop
stc
push
jno
ja
call
inc
div
adc
xchg
mov
inc
inc
mov
cltd
daa
sbb
mov
mov
inc
je
adc
fwait
mov
hlt
sub
mov
push
mov
rol
inc
out
pop
xchg
pushf
js
sbb
sahf
outsl
inc
or
cmp
add
dec
jne
mov
dec
pop
gs
jle
and
pop
push
xchg
loope
test
aam
xchg
pop
pushf
popa
inc
js
sti
push
popa
cmpsb
pop
iret
dec
insl
adcb
sub
scas
cwtl
iret
cmp
insb
mov
or
jno
cmpb
and
cvttps2pi
dec
or
frstor
mov
mov
mov
and
push
mov
mov
out
inc
in
out
push
gs
fs
fwait
jp
pop
jp
add
sbb
out
lds
xchg
push
push
push
jp
add
jae
rorb
jecxz
pop
das
xor
and
pop
adcb
popa
mov
repnz
xchg
ss
jl
fisttpll
xor
xchg
and
jnp
aad
ljmp
clc
mov
jnp
jae
jbe
xor
ror
jno
mov
pop
aad
lcall
adc
add
push
out
test
lcall
and
jns
jmp
adc
cld
mov
pop
push
fsubl
mov
dec
clc
adc
icebp
sahf
clc
mov
mov
fldl
adc
ja
fidivl
and
insl
loop
test
jge
cmp
mov
cltd
lcall
or
into
xor
adc
lea
bound
daa
fcom
mov
mov
scas
inc
scas
loope
xorl
ficomps
icebp
arpl
jnp
imul
pushf
jno
addr16
lret
push
jmp
outsb
mov
insl
enter
mov
sbb
xor
adc
push
push
xchg
mov
inc
xorb
cmp
in
jns
test
sub
addr16
add
adc
mov
mov
mov
testl
xchg
xor
inc
fwait
inc
sahf
mov
in
add
adc
rolb
mov
xchg
stos
jmp
fnsave
xlat
das
cs
dec
adc
push
insb
out
pop
mov
mov
dec
inc
jbe
jl
and
imul
outsb
repnz
inc
inc
cltd
ret
int3
push
inc
enter
push
popa
insl
repnz
or
and
xor
inc
mov
rorl
dec
fldcw
push
pop
mov
cld
clc
add
add
sbb
ret
jne
jnp
inc
cmp
or
adc
mov
in
xor
or
iret
add
fstpt
cmc
xchg
stos
outsl
mov
dec
sbb
pusha
loop
xor
mov
mov
push
xchg
std
dec
stc
cmc
js
lcall
cmp
outsb
xchg
test
in
and
cmp
add
aam
jge
fwait
lahf
jge
ds
dec
cmc
jnp
add
sti
jle
xlat
stos
xchg
loop
insl
jle
or
movsl
and
std
cmp
cmpsb
mov
in
ljmp
js
rcrl
cs
leave
adcl
dec
imul
jo
lea
jle
push
push
xchg
movsb
or
cwtl
push
fstl
sub
sbb
jns
push
imul
subb
mull
out
adc
cld
out
jmp
into
mov
divb
lock
aam
inc
pushw
rcrl
xchg
jecxz
mov
xchg
mov
inc
aad
inc
cmpsb
mov
cmp
loope
bound
mov
sub
loopne
out
push
and
clc
sti
mov
lcall
xchg
and
jmp
xchg
pop
cmp
dec
xor
cli
test
jbe
inc
jl
xchg
pushf
pminsw
mov
sahf
and
jp
popf
icebp
cmp
cmp
in
int
fwait
mov
cmp
jge
mov
movsb
xchg
xchg
xor
test
lods
push
cmp
push
cltd
jne
mov
out
nop
ret
leave
push
adc
pop
mov
call
dec
sahf
ret
inc
xchg
cmpsb
sar
push
movsl
imul
fs
imul
jns
jp
shr
adc
cmpsl
aas
std
mov
outsb
sbb
adc
sbbl
lods
or
sbb
push
mov
mov
add
inc
cmp
mov
ror
aad
cli
les
cmpsl
scas
cli
cmpsb
adc
xor
fcompl
pop
clc
sahf
jnp
jns
pop
outsb
push
cmp
int
fwait
aas
and
cld
mov
shrl
aad
push
push
js
imul
js
add
dec
cmp
and
inc
fsubl
mov
pop
scas
outsb
mov
andb
jo
push
jmp
pushf
push
arpl
ret
dec
in
mov
jmp
mov
pop
push
lds
aaa
add
adc
push
mov
add
dec
outsb
or
stos
test
or
test
push
dec
lea
cmp
sarl
mov
cld
into
jb
xchg
mov
cmpsl
imull
mov
jb
rdtsc
mov
jge
sarb
cmpsb
cmp
je
add
adc
adc
mul
adc
dec
dec
dec
sahf
push
push
dec
repz
sti
ja
cmp
xchg
xchg
inc
xorb
sbb
cmp
gs
inc
das
cmp
int
stos
and
cltd
or
and
sub
clc
xchg
arpl
out
test
es
mov
cmp
loop
dec
cld
pop
push
inc
icebp
and
imul
out
dec
sub
jge
mov
rorb
test
dec
insb
dec
sbb
cmc
je
mov
dec
test
aaa
add
adc
jmp
adc
push
xor
dec
jo
cmp
out
scas
outsb
pusha
int
cmpl
inc
sub
push
popa
aaa
mov
mov
push
sahf
jp
cmp
dec
stc
inc
ljmp
stc
out
mov
je
cmp
mov
inc
ret
mov
movsb
pop
cmp
adc
leave
xor
enter
dec
in
push
arpl
push
cmp
or
mov
xchg
xchg
xor
mov
sbbl
hlt
cmpl
lret
xor
inc
cwtl
mov
mov
mov
pop
enter
clc
fldl
cmpsb
cmp
ret
dec
push
inc
mov
add
add
loopnew
or
lea
cmp
jne
dec
push
cmp
xor
dec
orb
loopne
imul
jl
bswap
daa
adc
fwait
movsb
cmp
dec
ficompl
jmp
mov
push
mov
adc
dec
leave
rclb
push
rcrl
or
cmp
test
ja
outsl
arpl
mov
xchg
outsb
mulb
dec
out
push
cwtl
insb
push
sti
cwtl
shll
add
inc
pop
push
sub
mov
out
or
xor
frstor
add
xchg
sub
jg
inc
sbb
icebp
lret
add
mov
jg
mov
and
sbb
jg
adc
dec
out
sub
repz
cmc
mov
xor
mov
lahf
push
pusha
inc
jp
pop
in
mov
pop
imul
loop
cwtl
sub
fadd
call
add
add
hlt
mov
mov
add
js
push
jae
adc
cmp
xlat
push
clc
lret
push
sbb
in
je
fucomp
add
fmull
jo
push
fsub
in
push
xchg
movsb
and
and
dec
orl
push
jnp
cmc
insl
lea
push
xor
xchg
jne
or
push
jne
setne
dec
decb
or
movsl
pop
add
mov
sub
add
sbb
repnz
aas
jb
or
sub
xlat
jle
sahf
sbb
xor
add
fistpl
cli
jmp
mov
stos
mov
addr16
jg
ss
es
shll
dec
enter
cmp
imul
inc
mov
mov
test
lcall
test
fchs
push
shrl
sub
push
hlt
push
sahf
add
jg
fwait
enter
mov
filds
ret
xor
imul
jo
xchg
ficompl
and
jbe
cmc
lods
cs
mov
cmp
out
mov
mov
push
movb
fiadds
shrb
sub
sbb
pop
mov
jne
sbb
dec
stc
fdivrp
mov
test
leave
mov
xchg
mov
adc
sub
inc
out
push
hlt
jle
adc
imul
jg
cmp
inc
fwait
mull
cmp
fs
pushf
lret
divl
inc
faddl
xor
jns
dec
daa
je
fwait
cmp
dec
aad
sub
mov
daa
popa
insb
jo
cltd
decl
xor
inc
inc
and
mov
mov
adc
sub
cmp
push
dec
sub
jno
add
or
data16
dec
xor
add
sbb
test
mov
pop
sub
cmp
mov
dec
out
lret
sub
cltd
es
or
mov
push
jno
xlat
es
dec
push
sarl
sub
roll
imul
fdivrs
imul
lcall
test
jmp
add
std
add
pop
jae
and
cmp
out
xor
xor
adc
cmc
adc
xor
dec
ljmp
and
pop
cmpsl
addr16
lods
jns
lock
pop
push
cmp
adc
and
cltd
push
in
push
inc
jge
pop
insl
mov
jmp
bound
popa
inc
into
cld
or
cmp
inc
ret
xchg
fadd
and
add
test
jns
xor
in
movsb
jp
push
add
xchg
addr16
add
rcrl
sub
outsl
or
icebp
enter
push
pop
cltd
xchg
testl
jl
jecxz
push
mov
or
insl
pop
adc
cmp
das
lods
xchg
or
clc
sbb
out
cmp
icebp
push
cmp
outsb
inc
ret
sbb
adc
jg
leave
fstps
popf
jns
dec
test
sub
rol
and
inc
dec
cmpl
add
test
aaa
push
dec
jb
in
clc
xchg
cmp
iret
xor
cli
cmpsb
inc
sub
or
or
fimuls
in
mov
int
in
iret
repnz
mov
jbe
scas
or
cmp
into
xor
dec
pop
repnz
cltd
aas
lods
cmp
stc
sub
push
jle
xor
inc
mov
cmp
jb
xor
call
test
test
cmp
js
xchg
jbe
lock
cwtl
cmp
lock
mov
adc
pop
sub
cmp
sarb
xchg
dec
loopne
inc
insb
ds
mov
sbb
pop
loope
hlt
popf
dec
scas
stos
and
and
adc
nop
sahf
ds
or
dec
lret
inc
pop
dec
jo
cld
call
xor
jecxz
cs
push
in
mov
rclb
ret
hlt
test
in
pusha
insb
test
push
sbb
rol
push
shlb
das
jecxz
mov
lods
sti
dec
fimuls
jns
add
pop
jb
sbb
inc
daa
jns
incl
cltd
and
lret
idiv
and
iret
outsl
xchg
int3
fidivrl
outsb
shll
sbb
cmp
sarb
inc
fsubr
xor
push
ds
ja
mov
or
adc
daa
fcoms
mov
fdivrs
mov
add
or
out
lret
mov
in
sub
or
fstpl
jl
or
mov
and
mov
popf
pop
enter
or
orb
scas
mov
fcmovu
cmp
push
fistps
inc
mov
pop
sub
dec
gs
pusha
sbb
inc
xchg
push
mov
out
fidivrl
jno
xor
xor
imul
mov
pop
sub
sub
xchg
stos
or
fcomi
repz
sub
insl
hlt
xlat
test
xor
test
int3
sub
aam
add
inc
or
loopne
fcmovbe
imul
lds
adc
mov
mov
repnz
push
bound
mov
mov
add
xchg
cwtl
ja
loopne
outsb
sbb
fs
mov
iret
int
mov
dec
insb
in
mov
cmc
test
cli
dec
mov
sbb
adc
mov
mov
es
mov
faddl
out
mov
inc
xor
push
pop
fwait
mov
xlat
jno
or
cmp
mov
add
dec
sbb
mov
push
mul
mov
gs
scas
or
jae
fildll
push
leave
scas
imul
xchg
jge
sbb
popf
mov
pop
jp
push
into
arpl
add
xor
arpl
mov
popf
mov
push
addr16
addb
pop
mov
cld
xor
push
push
lret
std
dec
daa
loopne
xor
push
sub
dec
lcall
mov
cltd
and
mov
cwtl
and
mov
xchg
cmp
in
adc
mov
loopne
add
push
pop
outsl
cltd
xchg
push
repnz
adc
sbb
add
call
bound
les
negb
xor
out
mov
bound
xchg
adc
mov
cwtl
and
or
inc
adc
cmp
push
push
scas
pop
clc
cmpsb
push
sbb
jb
shr
cld
or
mov
mov
rcll
stos
mov
push
ret
xchg
inc
jl
xchg
dec
jbe
cmp
xorl
sbb
cmpsl
push
movsb
loopne
in
dec
mov
jns
ljmp
in
push
adc
jge
xlat
and
cmp
cmp
andl
into
jae
adc
movsb
dec
mov
lahf
adc
les
movsl
mov
adc
and
loope
lock
vandnps
xor
jae
fadd
jbe
inc
repnz
adc
call
xor
rol
lods
sbb
push
jmp
out
jp
jae
movsb
xchg
mov
sub
mov
lret
iret
das
testl
jne
pop
push
or
mov
pop
mov
push
push
cld
dec
mov
stos
mov
into
pop
add
fidivrs
mov
pop
jno
scas
sub
mov
cmp
pop
dec
je
sbb
test
xor
xor
test
stos
imul
nop
lret
sub
out
pop
int3
cwtl
mov
arpl
pop
loop
fcoml
jo
push
sahf
std
ss
mov
add
xchg
pop
enterw
sti
xor
je
stos
sahf
cli
xchg
insb
mov
add
sub
pop
mov
push
mov
sbb
pop
lods
ficompl
mov
sub
xchg
cmc
scas
cmpsb
mov
pop
xor
fdiv
pop
loopne
andl
in
sub
jne
pop
mov
and
out
add
int3
pop
and
adc
adc
mov
std
pop
dec
ljmp
cmp
lret
in
mov
sbb
adcb
hlt
or
out
cmp
repz
sbb
push
fiadds
push
orl
or
cmpsb
dec
mov
and
fdivrl
jnp
pop
sub
pop
cmc
mov
aaa
pop
loopne
mov
call
imul
mov
inc
ret
rol
fwait
mov
test
pop
pushf
adc
data16
addr16
enter
out
cs
pop
test
fsubs
imul
inc
jp
outsb
out
ret
inc
test
mov
or
adc
push
mov
arpl
xor
pop
jmp
lea
je
dec
stos
daa
xor
cmpsl
ljmp
or
sbb
and
or
mov
xor
pushf
mov
clc
enter
jns
bound
in
xor
sub
sbb
mov
pop
jnp
dec
push
xchg
and
outsl
rorb
es
jae
lods
mov
das
in
jp
sub
lods
push
mov
mov
adcl
and
push
or
cli
push
mov
jne
xor
inc
mov
jmp
hlt
in
xchg
push
mov
and
mov
shlb
add
popa
sbb
out
sub
jns
hlt
jmp
pop
and
mov
loop
fsubp
and
pop
jo
lahf
dec
or
movsb
sbb
cmp
int
mov
les
sbb
fwait
pusha
pop
add
in
cltd
cmpb
pop
cli
sar
adc
out
lods
adc
cs
inc
push
ds
sub
adc
imul
mov
das
jle
fucomi
mov
imul
pop
add
push
add
sub
mov
xchg
dec
jae
js
and
xor
mov
cmp
aas
mov
shl
loope
lahf
jnp
sbb
test
xchg
cmpsb
pop
ss
adc
add
push
sarl
jno
fsubl
cmpsl
mov
adc
cmp
enter
mov
push
lahf
test
mov
test
notb
outsb
mov
jbe
cltd
jmp
aaa
inc
ds
lea
outsb
push
imul
add
std
mov
mov
std
mov
addr16
sbbl
mov
cmp
aas
dec
arpl
sbb
xor
adc
ret
lret
jecxz
inc
loope
pop
mov
cltd
ljmp
jbe
xor
in
sti
inc
pusha
das
lret
inc
add
aad
mov
add
jbe
jb
ret
aaa
jne
aaa
adc
fadds
loop
inc
mov
cwtl
or
push
push
jp
inc
leave
shll
jns
std
mov
sub
repnz
jae
popa
jl
cltd
xor
mov
scas
pop
dec
dec
push
and
ljmp
je
ds
hlt
lcall
push
sub
sysenter
andl
mov
xchg
dec
push
jne
mov
mov
je
shl
mov
dec
inc
loope
test
and
sbb
xlat
pop
sbb
push
xchg
or
xor
mov
pop
push
les
dec
cltd
popa
xchg
cli
loop
inc
mov
fildl
dec
mov
out
in
xor
loopne
mov
roll
sbb
push
add
lea
sub
mov
adc
lods
jno
lods
movsl
dec
lock
dec
pop
dec
cli
adc
repz
push
push
adc
pop
push
leave
fcmovnu
add
in
push
and
inc
ret
std
and
imul
push
repnz
into
test
bound
dec
out
mov
xor
xchg
xchg
fidivl
aam
push
pop
dec
inc
pop
out
pop
xchg
mov
cmp
hlt
pop
inc
aam
sub
lods
cmpsl
leave
and
push
iret
mov
sub
repz
or
pop
je
dec
and
or
or
push
cmp
inc
xlat
mov
push
mov
pushf
loopne
fcmovu
ja
pushf
stos
xchg
lods
loope
fistps
xchg
icebp
push
push
call
xlat
add
add
xchg
sbb
ss
das
stc
test
and
lods
sub
les
inc
fadd
lea
jmp
mov
lock
pop
xchg
jns,pt
mov
push
sbb
pop
dec
xor
xor
arpl
fwait
inc
jecxz
pop
into
cli
mov
or
mov
lods
sbb
imul
in
mov
stos
cmc
lods
sbb
mov
mov
pop
ja
xchg
scas
imull
loop
subb
aam
ret
lret
popa
test
aas
out
sub
data16
mov
outsl
stc
xor
cld
cld
out
inc
mov
lods
add
add
mov
push
sub
dec
dec
mov
adc
clc
xchg
aam
cmp
leave
add
int3
or
aam
popf
icebp
or
xchg
leave
mov
popa
adc
xchg
push
jae
clc
dec
cli
out
push
pop
es
jbe
mov
cmp
enter
shl
enter
lcall
insl
in
mov
scas
ljmp
in
mov
aam
jge
dec
lock
repnz
sti
mov
les
jno
pop
mov
sub
stos
jo
scas
maxps
into
add
adc
pusha
daa
mov
lahf
out
xchg
dec
jg
add
jecxz
ja
and
aas
push
test
mov
subl
jo
fistpl
mov
das
cwtl
pusha
mov
mov
mov
or
pop
dec
jp
push
aad
push
jae
into
jne
fisubl
mov
inc
rol
adc
aaa
lret
ficoml
and
inc
sbb
loope
mov
mov
cmp
pop
sbbb
aaa
pop
es
test
outsb
pop
mov
in
pop
inc
shl
in
popa
add
xchg
jb
or
sbbl
jmp
aaa
out
pop
or
in
sbb
mov
mov
sbb
add
sbb
stos
dec
pop
mov
and
popf
jns
pushl
leave
les
pop
outsb
js
js
cmp
cmpsl
fistpl
arpl
push
push
sub
stos
subl
mov
sub
and
inc
repz
mov
push
adc
xchg
lds
jo
pop
jns
adc
dec
aam
popf
lds
stos
mov
push
mov
jle
mov
repz
sub
ret
movsb
jns
ljmp
push
loope
pop
lret
andb
mov
lret
cmp
jnp
ljmp
mov
inc
rolb
popa
adc
mov
jl
sarl
jns
test
repnz
pusha
test
jns
in
cmove
cwtl
data16
test
daa
mov
popl
mov
sbb
push
es
ret
mov
jl
mov
lock
jnp
xor
mov
push
mov
negl
testl
rorb
mov
inc
xchg
stos
adcl
fwait
pop
es
cmp
mov
es
add
and
mov
inc
and
push
aad
mov
int3
cmpsb
push
pop
daa
cmp
shlb
jecxz
mov
loopne
je
and
les
mov
add
mov
add
mov
push
ss
decl
xchg
cmp
xchg
ret
mov
lock
decb
data16
aaa
jp
dec
push
jecxz
xchg
jo
pop
sahf
jmp
and
pop
int3
gs
insb
push
clc
xor
mov
jl
xchg
shr
leave
sarl
iret
outsl
add
sbb
pusha
cmpsb
popf
test
outsl
xor
loopne
cmpsb
jecxz
int
push
and
pop
pusha
push
cltd
out
mov
pop
and
cmpsl
fidivs
cmp
lods
mov
dec
dec
in
loop
mov
mov
cmpsl
add
xorl
inc
adc
jne
sbb
sub
cmp
dec
or
mov
mov
dec
data16
dec
dec
sub
push
push
rorb
mov
mov
and
push
xchg
sbb
or
and
pusha
insb
ficoml
push
call
cltd
test
mov
mov
push
pop
jbe
sbb
arpl
jecxz
call
cmp
xlat
xchg
filds
sbb
loopne
push
mov
data16
pop
lcall
out
test
sti
loope
imul
imul
inc
stc
aas
das
pop
dec
jne
and
aad
or
adc
and
loopne
test
pop
mov
adc
xor
pop
retw
push
je
mov
push
outsl
sarb
dec
fcoms
sbb
add
pop
subl
lock
aad
mov
imul
punpckhwd
cmpb
scas
or
bnd
pop
mov
mov
jl
adc
push
push
loope
xlat
pop
or
aad
xor
shrl
and
and
sahf
xor
iret
xor
faddl
imul
adc
lahf
hlt
or
hlt
in
inc
xor
sub
cli
ja
or
jge
lahf
push
movsb
lds
das
cmp
pusha
aas
mov
cmpsl
inc
jne
mov
arpl
ret
inc
jns
inc
inc
gs
lods
pop
fmuls
sbb
xor
push
dec
rolb
sbb
push
inc
add
jp
jmp
xchg
jne
xor
cmp
xor
add
adc
push
xor
outsl
mov
lea
jo
pushl
ljmp
pop
pop
frstor
jb
loopne
mov
xchg
popa
inc
stos
lods
mov
insl
pushf
je
sbb
adc
jb
dec
subb
mov
dec
insb
dec
dec
aad
jnp
repz
sbb
inc
cmp
aaa
scas
loope
test
sbb
ds
jnp
loop
pop
inc
cli
sub
xchg
faddp
out
xorb
ja
mov
out
fisttpll
dec
cmpsb
jnp
xorb
jl
inc
push
imul
lret
sub
xor
pusha
shrl
cmp
orl
aas
push
loop
cld
jo
and
pop
mov
clc
xchg
inc
in
add
into
test
mov
xchg
iret
sbb
jo
sbb
mov
xor
xchg
mov
adc
or
xlat
mov
fstps
push
roll
push
sub
pop
lret
orl
leave
pop
ret
and
cmc
jmp
xchg
call
jg
cli
pop
sub
cmp
je
lods
fcmovnu
inc
pop
fs
jmp
shll
lea
push
fs
cmp
jecxz
sub
add
push
mov
icebp
lret
inc
xchg
scas
cmp
jp
idivl
sbb
jmp
inc
es
mov
imul
aam
xor
sahf
jo
pop
sub
pop
add
pop
dec
shufps
push
mov
jne
adc
mov
mov
sub
xorb
mov
pop
ret
gs
stc
hlt
pushw
fistpl
cmovns
cltd
fiadds
inc
dec
leave
rcrl
pushf
pop
repnz
insb
ficomps
sub
cmc
ret
mov
fisttps
pop
cmp
pop
sbb
inc
idivl
jl
cmp
lea
ficomps
js
rcrb
in
pop
ret
add
mov
stos
js
mov
rcrb
adc
sub
add
ret
pop
xor
dec
add
out
jmp
sarl
add
adc
in
mov
fwait
imul
push
cmpb
dec
test
jecxz
inc
test
xor
les
cltd
fcmove
daa
mov
clc
mov
cmp
push
pop
or
bound
dec
dec
fiadds
ret
inc
jp
push
sub
inc
push
add
arpl
mov
mov
adc
pop
mov
pop
mov
ds
mov
jge
mov
ss
fldenv
adc
adcb
add
mov
pop
xchg
mov
test
xchg
inc
xchg
mov
lret
mov
sub
outsb
in
mov
sahf
sbb
or
pushf
cli
sbb
aas
dec
testl
or
imul
or
push
sbb
iret
scas
pop
xor
add
mov
jns
dec
jnp
sbb
stos
loop
cltd
lock
push
fisttps
out
imul
das
cli
sbb
xchg
xor
ja
adcl
dec
jmp
dec
sub
bound
dec
jmp
cmp
jp
fstpl
imul
pop
jno
sbb
mov
cld
mov
pop
das
jno
or
mov
loope
and
icebp
mov
jp
pop
xor
sub
or
and
push
fmull
sub
adc
pushl
xor
xor
fcmovu
fildll
fidivrl
es
sub
in
icebp
adcl
gs
xor
testb
lods
sarb
and
aad
cmp
dec
push
dec
push
jecxz
pop
insl
mov
test
test
data16
push
mov
mov
xchg
int3
push
mov
arpl
ss
pop
sbb
pop
sar
sarl
std
insl
in
mov
out
pusha
rcrl
xor
fstp
shlb
add
add
ret
push
sahf
pop
stos
mov
ds
mov
dec
adc
mov
mov
out
jp
fstps
insb
pop
call
dec
lods
out
adc
mov
fldcw
sub
dec
xchg
icebp
mov
cli
adc
mov
mov
dec
test
add
or
cmp
lock
nop
or
std
rclb
rcrb
movsl
aad
outsl
mov
repz
pop
mov
fyl2xp1
sbb
insl
jmp
pop
pop
ficomps
stos
jae
shrl
add
dec
jno
fwait
pop
mov
or
std
and
stos
ret
sbb
nop
cmpsl
std
lods
movsl
imul
sub
xor
mov
jb
subb
mov
sbb
ja
mov
repz
bound
push
mov
nop
mul
lret
dec
inc
mov
imul
mov
call
xchg
mov
pop
test
mov
into
ficoml
xor
add
mov
pop
in
insb
jmp
ret
call
in
sbb
popf
lcall
jb
popa
push
arpl
leave
adc
ss
inc
and
out
cli
inc
dec
int3
sarb
add
int3
mov
dec
fwait
cmpsl
xor
test
in
and
lods
popf
call
or
mov
rcrl
pop
dec
test
and
in
in
mov
repz
jbe
lds
add
cmpsl
xchg
stos
push
out
fwait
adc
jo
push
loope
addb
or
jnp
out
imul
fdivs
stos
enter
shrd
cmp
enter
cs
mov
xchg
fcomps
popf
popf
pushf
rcrl
dec
loopne
jmp
rcl
xchg
sbb
sbb
int
jns
movsl
pop
sti
ja
div
in
call
fsubs
outsb
mov
ss
pop
mov
add
inc
cmp
inc
push
in
pop
dec
std
cld
mov
push
jbe
in
popa
in
xor
jmp
mov
loopne
mov
sub
dec
ja
mov
gs
adc
incb
jbe
jle
mov
mov
stos
add
cmp
dec
pushl
push
cmpsb
je
xor
cmc
sbb
leave
adc
add
sbb
cmp
cmpsb
aad
adc
iret
cmc
loopne
push
int
loopne
mov
je
ret
f2xm1
fistps
mov
inc
das
cld
test
push
movsb
mov
pushf
or
mov
and
adc
ja
ret
fwait
test
aaa
loopne
mov
xlat
dec
pop
pop
daa
fwait
push
xor
inc
sbb
insl
jbe
arpl
pop
incl
xchg
xchg
xlat
or
jns
cmp
aam
sub
xor
addb
aam
cmpsl
jns
and
mov
mov
xor
bound
jo
clc
orb
jbe
push
lds
mov
sbb
rcrl
cmc
js
sub
jne
dec
xchg
ja
push
mov
jl
sbb
addb
ljmp
ret
pop
mov
pusha
imull
lods
push
push
scas
js
xor
sub
fdivrl
in
stos
cmp
cmpsb
cld
mov
std
mov
xchg
aam
fcmovnbe
push
ret
jge
dec
sub
int3
insl
nop
mov
xchg
lea
out
mov
dec
fstps
dec
jno
sbb
pop
cmp
cmp
cmpsl
add
aaa
inc
inc
jmp
adc
mov
fwait
sbb
ret
jmp
mov
xchg
adc
xor
sub
mov
mov
pop
daa
testb
xor
jmp
fsubrp
or
and
sub
stos
imul
inc
and
mov
and
popf
cmp
mov
psubusb
rcr
add
movsb
add
mov
cmpb
jmp
shr
popa
sbb
dec
pop
nop
push
fwait
out
adc
int3
adc
jae
ror
sbb
mov
xor
int3
jmp
xor
pop
sbb
mov
in
fnstenv
jp
popl
and
xlat
cld
outsb
cmpsl
push
mov
jb
cs
jl
inc
mov
ds
mov
addr16
fldl
fldl
daa
aas
daa
mov
pop
push
cld
mov
push
loopne
sbb
mov
jecxz
sahf
xor
pushw
aaa
cmpsl
xchg
push
enter
ret
mov
xchg
mov
add
jp
jbe
add
dec
das
adc
lods
fsubl
rorl
out
sti
adc
cmp
mov
js
and
and
adc
in
aad
jno
sub
scas
cmpsb
adc
and
and
dec
pop
pusha
pop
addr16
mov
push
pop
and
mov
mov
scas
cmp
insl
lods
imul
mov
mov
xor
dec
inc
in
mov
mov
insl
xor
sbb
push
icebp
cmp
push
cmp
mov
fsubs
hlt
xchg
push
roll
mov
out
aas
xor
rorb
mov
push
jg
ficoml
aas
mov
out
adc
push
int
into
push
nop
dec
jle
jnp
mov
movsb
fistpl
mov
sub
adc
push
xchg
sub
jb
out
shll
rorb
fisubl
pop
xchg
in
fmull
popa
cmp
sbb
movsb
popa
test
or
lea
pop
rolb
ja
xchg
and
cmp
loope
or
adc
std
xchg
aad
add
cli
xlat
in
dec
jp
outsb
pop
push
pop
lcall
mov
jecxz
mov
in
xchg
cwtl
and
ss
xor
push
mov
repnz
ss
mov
imul
add
fwait
push
jno
icebp
dec
mov
cld
xor
scas
out
sbb
and
sti
add
hlt
test
jecxz
sub
sbb
dec
cmp
mov
xchg
pushf
notb
stos
pop
or
fs
push
and
addl
movsl
lods
out
xor
inc
scas
mov
mov
into
mov
and
cmp
mov
enter
cld
mov
pusha
ja
push
dec
out
repz
fcom
sbb
std
popf
xor
rcll
jle
fldt
push
orb
and
pop
cmpsl
hlt
lods
xchg
imul
mov
push
imul
aas
and
fimull
and
rcl
je
out
adc
adc
add
sti
push
push
rcr
cwtl
es
rcr
aad
cmp
shll
mov
pop
fs
fnsave
pop
cltd
cmp
rol
stc
outsb
push
sahf
scas
lods
sub
xor
pop
stos
std
push
shlb
cmpsl
inc
jno
mov
mov
lea
fidivs
out
cmc
in
xchg
xor
jp
add
insl
stos
push
sahf
mov
ud1
movsb
hlt
fwait
lods
loop
in
inc
pop
inc
cltd
sbb
push
je
and
mov
dec
jbe
xchg
xchg
fisttps
mov
mov
xor
icebp
sbb
pop
push
mov
test
loop
sbb
pusha
cmp
sbb
push
das
ficomps
cwtl
push
std
pop
sbbb
cmp
shlb
pop
xchg
cltd
ja
roll
in
mov
pop
data16
or
fwait
pop
ftst
repnz
aam
popf
mov
push
jae
inc
mov
sub
int3
xor
test
mov
xor
adc
dec
xor
mov
adc
mov
add
push
lods
lcall
xor
mov
pop
mov
fistpll
shlb
data16
pusha
mov
fildl
push
and
mov
dec
mov
adc
xlat
adc
inc
int3
das
xchg
sti
adc
cmp
out
sti
test
sbb
add
mov
mov
outsl
rolb
mov
mov
dec
mov
or
das
pop
ds
fadds
shlb
jp
mov
xor
jle
call
test
push
insl
iret
mov
ja
cld
xor
lret
bound
test
sub
insb
lret
add
call
push
mov
xor
fs
adc
pop
cmp
push
ror
test
cs
jl
jge
test
push
sbb
pop
hlt
scas
out
jns
lret
data16
mov
sarl
aam
dec
faddl
sub
mov
scas
cmp
jne
stc
jp
lods
add
jo
inc
or
fcmovu
xchg
movsl
adc
mov
pop
sub
sub
cmp
fstl
push
pushf
mov
xchg
mov
or
loopne
mov
push
ljmp
jl
imul
es
mov
shlb
sahf
in
mov
dec
lret
loop
fwait
xchg
add
adc
push
and
mov
in
sarl
inc
xor
loope
dec
in
mov
xlat
movsb
sbb
jno
mov
test
fwait
stos
sub
pushf
popf
mov
sub
cmp
dec
dec
repz
int
jmp
lcall
push
inc
test
dec
add
sub
or
sub
sahf
fs
cmpb
enter
mov
or
mov
jo
in
leave
mov
mov
or
add
add
cmp
xchg
sub
dec
pop
mov
dec
xchg
jecxz
adc
jmp
gs
test
dec
dec
and
mov
lods
inc
repnz
mov
xchg
sub
sbb
mov
sbb
nop
pop
sbb
xchg
out
bound
or
fcomps
mov
mov
sbb
cwtl
push
fisttpll
out
mov
ret
push
test
xchg
push
sbb
or
adc
mov
sub
loopne
lcall
sub
or
sar
adc
mov
out
or
mov
mov
inc
ja
fcomps
mov
jle
xor
je
dec
psubsb
sysenter
pushf
es
mov
mov
imul
test
shlb
and
fcmovnbe
sub
mov
daa
int
scas
mov
jno
inc
dec
add
and
pop
push
xor
jge
imul
xor
sbb
sbb
repnz
pop
mov
jge
loopne
mov
inc
repnz
cmc
xor
dec
enter
data16
repnz
inc
gs
lock
or
into
hlt
or
jnp
repz
popa
sub
movsl
pop
call
jno
call
divl
popa
add
daa
mov
repz
pop
ret
mov
movsb
cmp
clc
push
push
call
cmc
aaa
xchg
fdivr
jmp
cmp
inc
sti
cmp
pop
dec
pop
xchg
lret
rorl
xchg
ljmp
mov
and
sbb
outsb
xchg
lods
push
xor
push
adc
pop
imulb
sbb
imul
add
incl
scas
lret
mov
xor
insl
sbb
loop
enter
pop
adc
shrb
push
pop
mov
or
das
xchg
dec
imul
scas
aad
sbb
scas
or
lods
cmp
push
nop
sti
push
mov
jno
pop
inc
ret
sub
negl
and
nop
cmpsb
adc
outsb
jle
add
mov
pop
faddl
mov
mov
fstps
push
lods
mov
js
rcrl
xor
cld
call
clc
inc
jo
test
push
fnsave
gs
stc
lds
loope
movsb
sub
sub
mov
sahf
lahf
jno
ljmp
push
and
jp
rolb
add
aas
shrl
enter
push
leave
das
push
jmp
mov
xor
fildll
push
push
scas
int3
cmpsb
aaa
gs
jbe
mov
mov
cmp
xor
in
shll
push
and
das
xchg
add
or
sbb
adc
sbb
imul
test
adc
fmulp
mov
xchg
xor
test
jge
cld
pop
jge
testb
sub
arpl
fistpl
loopne
inc
sarb
popf
xorl
ja
enter
ja
test
jo
orb
enter
pop
imul
sahf
jp
cs
punpcklwd
sub
push
fidivrs
push
and
pop
xchg
inc
fcmovnu
inc
int3
add
cmpsb
nop
pavgw
lods
hlt
cld
shll
pause
mov
stc
inc
scas
mov
sbb
and
rolb
adc
cwtl
cmp
ja
mov
push
out
add
call
mov
sub
push
in
jg
mov
int
inc
push
jl
mov
pop
out
pop
jle
jecxz
xchg
mov
jge
adc
pop
and
mov
movsb
lahf
enter
inc
enter
xchg
or
sbb
je
repnz
and
push
call
call
add
pop
mov
add
test
cli
insb
mov
dec
mov
add
mov
jge
cs
cwtl
and
mov
pop
add
cmp
sbb
and
inc
mov
cmp
sub
cwtl
rcr
xor
add
mov
add
shlb
adc
jecxz
test
cmpsl
std
add
lret
and
fcmovnb
loop
push
xor
lcall
push
insl
mov
mov
or
pop
test
insl
fdivrl
add
bound
lods
ret
out
movsl
lahf
dec
lds
loopne
jecxz
pop
sti
popl
imull
movsb
pop
ljmp
fsts
inc
std
jae
pop
icebp
gs
pop
adc
mov
xchg
fisttpll
and
push
inc
stc
adc
and
xchg
dec
arpl
pop
out
out
movsl
mov
fldt
test
icebp
dec
int
inc
fisttpll
mov
cmova
mov
lahf
loopne
mov
mov
shll
inc
jp
add
sub
orb
xchg
pop
dec
aad
mov
add
lock
enter
aad
jmp
aaa
stos
dec
xor
xor
xchg
cmpl
push
sub
mov
je
lods
in
loopne
jo
push
out
js
daa
or
std
ss
cmp
mov
cmpsb
push
cmp
push
dec
xor
mov
addr16
out
pushf
jbe
cmp
push
inc
rcl
xor
push
push
mov
push
jne
nop
and
jecxz
sbb
enter
pusha
dec
pusha
ljmp
sbb
dec
push
xlat
jns
adcb
dec
sub
pop
mov
aaa
test
stos
in
jnp
popa
lods
inc
xor
imull
pusha
inc
jge
mov
sub
sbb
enter
cmc
mov
jo
or
sarb
lds
add
int3
insb
mov
pop
aas
es
pop
lds
fists
jnp
mov
je
stc
jl
xchg
xchg
dec
push
mov
adc
dec
or
ljmp
sbb
je,pt
ror
cwtl
mov
or
mov
mov
mov
sub
xlat
push
movsb
fistps
dec
test
lret
fists
andb
mov
push
repnz
pop
cmp
jbe
sbb
xor
xor
dec
xchg
xchg
xchg
xchg
xchg
pop
out
in
jecxz
lret
aad
hlt
aaa
sbb
lret
push
rcrl
aas
jle
daa
cmpsb
negl
shrl
subb
push
inc
fisttps
jl
addr16
fadds
mov
sarl
pop
cmpsb
fs
pmuludq
fwait
lea
jg
mov
ret
cmpsb
xor
dec
cwtl
inc
add
mov
fstpl
cmp
and
inc
jge
cs
ljmp
bound
and
imul
scas
or
xor
je
popa
insb
rclb
xor
cs
jle
xchg
imul
mov
test
pop
inc
or
fnsave
xchg
nop
pop
loope
scas
mov
imul
pop
fcmove
jecxz
dec
push
fidivrs
stc
fcoms
adc
cmp
sbb
fsubrs
js
dec
pop
or
mov
sbb
jle
jns
in
ror
sbb
rorb
jl
jno
addr16
inc
cmpb
pop
xchg
imul
pop
push
mov
push
pop
orl
in
inc
in
adc
out
cmp
lret
lret
jmp
sbb
not
ficompl
dec
insl
out
add
sub
dec
add
nop
into
arpl
adc
sub
dec
int3
int
sahf
push
inc
cwtl
imul
cmpsl
mov
dec
fldt
jb
and
jne
andb
lea
push
lods
xor
cmp
and
cmc
sar
mov
fdivrp
push
xor
sub
dec
stos
inc
sub
sarb
and
test
dec
pop
icebp
xor
nop
aad
lock
ja
out
mov
popl
cmpsl
movups
outsl
xor
cmp
cmp
scas
mov
sbb
jl
enter
mov
aas
jnp
cmp
fiadds
outsl
inc
sbb
mov
sub
sbb
xchg
enter
xchg
xchg
dec
in
xchg
subb
scas
stos
pop
jne
or
int3
outsl
arpl
inc
cmpsl
out
popa
test
push
mov
aas
ljmp
push
pop
cli
push
sbb
dec
lods
fwait
jg
inc
cwtl
cld
lret
invd
mov
pop
outsl
mov
push
and
int3
sbb
test
movsl
add
sbb
cmp
push
pop
add
enter
or
rdmsr
adc
test
mov
xchg
add
sub
mov
xchg
icebp
push
popf
or
xorl
cltd
lahf
dec
scas
nop
into
je
ja
jb
add
xor
ljmp
jnp
and
push
in
clc
loope
xchg
jb
inc
scas
mov
pop
add
dec
sbb
adc
iret
sub
iret
stos
movsl
sbb
std
pop
push
ror
mov
mov
jne
xor
mov
lcall
xchg
xor
mov
shll
and
xor
in
insl
movsb
xor
mov
pop
scas
pop
pop
cmp
fldt
sub
fstpl
xchg
or
xor
xor
pop
push
movlps
sub
aaa
push
ret
popa
fidivl
stos
mov
mov
add
push
or
fs
inc
add
test
xor
xchg
dec
jmp
ljmp
adc
sub
push
dec
adc
cld
ja
push
cvtpi2ps
push
outsl
mov
mov
stc
dec
out
mov
call
cmp
inc
adc
cltd
dec
push
cli
and
xchg
sbb
rcll
mov
push
jecxz
mov
popf
test
sub
out
leave
adc
or
leave
xchg
lret
xor
push
push
lea
cld
ret
and
jl
cmp
out
fwait
add
sbb
adc
out
and
mov
pop
cmpb
mov
es
jp
mov
dec
mov
adc
mov
rcr
fldl
xchg
push
or
mov
or
js
adc
inc
nop
jmp
sub
loope
fnsave
adc
out
jle
mov
mov
sub
jle
ret
mov
jecxz
lock
jno
icebp
fistl
xlat
test
aad
inc
ljmp
push
mov
es
arpl
clc
inc
test
push
sub
fimull
pushf
mov
pop
mov
inc
inc
mov
inc
dec
test
movsb
test
inc
insb
mov
test
and
xor
ja
sahf
push
pop
push
dec
std
lret
add
dec
call
jge
jo
add
xor
mov
inc
inc
out
jmp
sahf
or
xchg
inc
cmpsb
loopne
fsubrs
sbb
loope
xor
dec
mov
or
cld
cmc
pop
mov
and
add
sbb
xor
pop
ffreep
out
jmp
or
arpl
idivb
shll
pusha
inc
or
lea
test
orl
mov
adc
inc
out
push
inc
dec
mov
in
fisttpll
jge
and
jnp
cmc
pop
nop
push
xor
dec
mov
lods
and
mov
inc
int3
xor
leave
gs
cli
push
inc
pop
popf
stos
pushl
pop
int3
nop
push
movsl
fucomp
aam
mov
fsts
test
jo
andb
cmpl
sub
pusha
icebp
push
cmp
ljmp
dec
jno
jmp
jmp
insb
sbb
cmp
push
jp
jnp
xchg
pushf
jo
rclb
aaa
fsubrs
xor
cli
fmuls
dec
mov
mov
nop
sbb
clc
les
push
push
sbb
pop
out
xchg
mov
ljmp
scas
sbb
and
std
sbb
lcall
mov
cmp
push
push
xor
and
lock
rcll
cmp
jns
inc
in
ss
jb
cmp
lds
les
pop
enter
out
xchg
je
push
nop
jne
xchg
pop
test
xlat
dec
ficoml
xchg
add
push
adc
rcll
xorl
add
fnsave
pusha
orb
mov
sahf
mov
and
mov
mov
lods
jp
sahf
xchg
fiadds
cmp
dec
and
hlt
mov
pop
repz
and
mov
cmp
adc
and
sti
lret
test
loope
imul
mov
cmpsl
push
cld
jle
add
jg
sbb
pop
les
lock
into
ljmp
lcall
rcrl
fs
sbb
xchg
xor
ds
aam
jns
mov
inc
stos
aaa
push
and
adc
cs
repnz
fdivs
pushf
cmp
or
fistl
sbb
or
or
bound
lods
mov
outsb
shll
cli
int3
pop
loope
gs
jnp
ss
mov
push
push
push
add
xor
jmp
cmpsb
jns
adc
sub
leave
lds
stos
sub
inc
fmuls
jb
out
in
stc
pop
insb
push
hlt
jg
sub
push
xchg
adc
xchg
es
cwtl
in
cli
popf
fimull
jne
imul
push
sbb
inc
insl
jle
mov
sub
mov
jecxz
mov
cltd
sbb
bound
ds
cmp
xchg
loope
sarl
test
arpl
pop
ss
leave
pop
dec
jp
sub
xor
xchg
and
jae
push
sub
fs
into
std
xchg
imul
push
mov
and
iret
ljmp
xchg
rol
sub
fistl
das
or
xor
xchg
pop
sub
push
addr16
push
dec
adc
out
mov
outsb
jb
hlt
xchg
fwait
dec
mov
cmp
adc
dec
lahf
call
cmp
cmp
add
ficompl
mov
in
adc
mov
mov
lea
pop
pop
add
test
or
cmpsl
mov
lock
xchg
rolb
sub
xchg
dec
je
stos
fs
mov
stos
push
cmp
rcrb
lods
pusha
mov
cmp
inc
xchg
rorl
mov
sub
cmpsl
adc
or
into
xchg
fdivl
adcb
cli
sub
mov
inc
fcmove
dec
es
lret
ud2
lds
adc
in
jae
lret
scas
sarl
popf
fcmovne
out
inc
movsl
enter
out
cs
inc
cmp
das
xchg
xchg
icebp
out
cmp
mov
out
pusha
or
and
inc
jno
sbb
inc
adc
sub
xor
mov
lahf
jge
mov
fwait
movsb
jmp
push
sti
xlat
xchg
sbb
int
imul
xchg
imul
inc
push
mov
adc
sbb
push
jo
add
sbb
lret
adc
xor
add
xchg
jecxz
call
jbe
imul
mov
pop
or
add
inc
je
cltd
inc
jb
aam
repnz
xor
pusha
push
aad
add
mov
insl
pop
out
xor
addr16
jmp
in
mov
sub
jae
les
sbb
and
jo
into
test
sbb
pop
in
out
xor
pop
lods
and
dec
push
xchg
aaa
mov
ljmp
adc
push
mov
dec
jns
jmp
leave
pop
add
mov
sub
jle
orb
fdivl
cmp
dec
inc
lahf
xor
push
ja
adc
cmp
insb
scas
jmp
je
orb
mov
je
inc
fmull
jg
insb
cld
out
js
push
sbb
inc
mov
xor
jg
jae
cld
dec
mov
jp
rclb
call
inc
inc
inc
outsl
repz
lahf
sub
and
cltd
test
inc
push
mov
scas
out
outsl
and
in
sbb
mov
lret
cmpsb
cmpsl
mov
dec
call
nop
xor
dec
les
cs
sahf
test
lds
mov
pop
ret
or
dec
cmp
xor
xor
and
and
or
push
mov
mov
xor
hlt
rcl
push
pop
mov
std
jo
pop
cs
jmp
je
push
outsb
cmp
iret
sub
jnp
xor
pushf
sbb
aaa
imul
jo
ret
xor
mov
scas
cmpsb
inc
in
lods
mov
in
or
stos
and
aam
inc
mov
rcll
es
or
fwait
in
sarl
jg
mov
pop
inc
cs
mov
sbb
cmc
mov
sarl
mov
adc
lods
sbb
mov
push
ds
adc
inc
mov
jecxz,pt
popa
arpl
ja
dec
jp
add
inc
adc
mov
jg
rcr
pop
jge
sti
pop
dec
cmc
push
jle
bnd
mov
jnp
adc
jb
and
lret
xchg
scas
int3
dec
frstor
adcl
sub
mov
ja,pn
jae
adcb
push
xchg
pop
loope
pushw
rcll
testb
cmpsl
aad
insl
jne
cmc
in
mov
repnz
add
xchg
sbb
cli
andl
out
fsubs
adc
dec
cld
or
mov
pop
sbb
ds
mov
cwtl
in
gs
cmpl
sbb
mov
pusha
movsl
rcrb
dec
sub
add
int3
adc
test
in
xchg
pop
insl
and
sub
and
pop
nop
cwtl
in
mov
pop
test
mov
fxam
and
or
and
aam
dec
jbe
pop
xor
fsubrs
mov
push
push
jge
mov
mov
inc
cli
xchg
pop
mov
loopne
sub
cld
pop
and
outsb
mov
dec
int
sbb
or
out
es
orl
cltd
out
inc
pop
cmp
dec
cmp
mov
mov
mov
push
das
leave
jb
jno
fstps
insl
nop
mov
sub
enter
push
lock
or
xchg
mov
cmc
mov
nop
notb
incl
push
add
mov
jp
idivl
adc
sub
jbe
mov
mov
adc
jns
xchg
pop
sbb
mov
daa
dec
pop
arpl
push
in
jp
sbb
adc
mov
sbb
insl
bound
add
inc
cmp
jl
add
aad
icebp
and
call
ffree
xlat
inc
push
in
ret
mov
adc
les
jle
mov
lock
cmc
lea
jge
nop
lret
jae
lret
pop
mov
adc
push
inc
inc
xchg
xchg
mov
ljmp
incl
bound
pop
testl
jno
jle
call
cmpb
inc
xchg
orl
cli
mov
ret
adc
push
jo
fwait
sbb
jo
xchg
mov
clc
scas
int3
out
dec
mov
cli
dec
jg
jne
inc
jle
out
rorb
xor
xor
test
sbbb
mov
fbld
xchg
cmovs
dec
test
clc
cmp
movsb
inc
cmp
dec
ret
addl
fdivrl
mov
sub
pushf
int
sbb
or
out
sbbb
inc
mov
repnz
aad
call
int
push
loopne
insb
cmp
shrl
sbb
pop
jp
mov
int3
lods
hlt
lock
inc
je
mov
je
jae
ret
stos
int
out
adc
mov
fiadds
sub
call
sbb
or
push
out
and
inc
cmp
or
fs
push
aaa
stc
push
cmp
ja
xchg
adc
adc
mov
movsl
pop
lock
jmp
add
xorl
sub
push
dec
inc
cltd
adc
pop
and
js
sbb
adcb
outsb
out
arpl
sbb
adc
jno
aam
movsb
dec
mov
and
jle
xchg
jb
nop
lret
pop
orb
dec
push
cmp
dec
pop
testl
mov
shll
pop
imul
mov
push
and
xchg
adc
inc
aad
addr16
test
test
das
mov
dec
leave
aaa
in
add
cmc
cmpsb
pop
mov
stc
jb
shlb
or
xlat
pusha
stos
test
sub
insl
data16
lock
sahf
sbb
cmpsb
mov
pop
into
mov
insb
or
fimull
add
fisttpll
add
adc
mov
and
cli
push
adc
inc
fsubl
or
sbbl
lods
dec
sub
scas
push
rorl
xchg
insl
addl
test
adc
sbb
js
cmp
ds
sti
sete
dec
outsb
shlb
pop
daa
push
scas
mov
cmpsb
push
adc
mov
test
aad
aaa
les
jb
cmp
aaa
and
ds
push
ficomps
mov
xor
adc
xchg
jge
call
dec
ret
lds
cmpsl
xor
fucomp
fstl
lahf
js
mov
fistl
outsl
pop
roll
mov
jne
adcl
out
gs
je
jg
and
pop
insb
cwtl
and
add
scas
dec
and
xlat
add
fsubr
ljmp
daa
mov
pop
mov
adcl
sbb
jle
scas
mulb
int
icebp
mov
mov
jge
mov
pop
or
add
mov
imul
jae
jmp
jecxz
sbb
and
jle
out
push
cmc
push
aaa
inc
sub
push
cmp
add
mov
mov
push
sbb
popa
pop
adc
push
btl
loope
aad
fisubs
adcb
sub
adc
ss
fs
cmp
movsb
jmp
lea
lods
xchg
loope
sbb
out
xchg
mov
sbb
add
adc
jns
inc
mov
cmp
aas
add
leave
cs
xor
jp
repz
emms
sub
les
adc
push
dec
push
or
mov
push
xor
int3
push
das
test
sub
sbb
xchg
xor
or
xchg
sbb
xchg
xor
jmp
dec
sar
int
ficoml
stos
push
push
add
jmp
iret
and
sub
inc
test
add
movsl
and
mov
imul
or
or
aam
in
mov
mov
push
cmpb
mov
xchg
jecxz
fld
or
push
push
jg
out
les
push
in
enter
icebp
mov
mov
jg
mov
das
loopne
and
leave
int
movsl
pop
mov
ss
jns
mulb
dec
fbstp
fwait
push
jb
push
jnp
lret
roll
push
push
adc
lcall
lcall
push
or
inc
push
icebp
int
mov
iret
cli
jge
add
xchg
or
icebp
jmp
lcall
call
sbb
pusha
ja
int3
scas
sub
movsb
scas
scas
aas
in
mov
lret
fsubr
push
adc
fs
lock
icebp
xor
jnp
shr
in
adcl
mov
inc
mov
adc
xchg
jne
xlat
dec
inc
outsl
xchg
mov
jbe
stc
test
mov
pop
clc
je
xlat
in
jecxz
test
pop
xchg
sub
mov
xor
xchg
test
out
dec
popf
fnstsw
fsts
or
or
rcl
mov
movsb
dec
mov
int
icebp
lcall
testb
out
pop
imul
ror
xchg
mov
mov
clc
jl,pt
outsb
pusha
mov
imul
ljmp
roll
stc
lods
lret
insl
pop
enter
inc
lcall
dec
fldenv
push
scas
dec
push
fldt
aam
cmp
cmpsb
mov
add
int3
lahf
sub
mov
mov
jecxz
stos
sbb
repnz
das
mov
fdiv
cltd
es
pop
mov
insb
mov
add
mov
mov
adc
movsb
stc
inc
cmp
out
adc
xor
std
bound
pop
mov
jo
dec
jecxz
mov
stos
jo
out
and
imul
mov
fistps
add
packuswb
cmp
mov
pop
mov
cli
push
insb
xor
jb
pushf
testl
into
aam
and
mov
xor
xchg
xor
and
cwtl
push
xor
adc
jns
add
mov
and
inc
inc
je
rorb
test
mov
fadds
inc
aas
rcrl
setge
jp
cmc
jge
hlt
inc
inc
sub
mov
xlat
pop
jnp
push
les
lods
js
out
jecxz
ljmpw
pop
pop
fs
mov
xchg
push
imul
enter
mull
inc
dec
xchg
arpl
movsb
inc
cmovp
fucom
icebp
xor
shrb
pop
repz
out
push
inc
xchg
cmp
imul
adc
jne
adc
popa
jge
xchg
adc
into
and
addb
pop
push
xor
sub
gs
pop
add
jae
cmp
sub
imul
dec
xchg
mov
jecxz
mov
jno
nop
int3
nop
mov
push
shll
rcr
ret
push
lock
es
pop
push
xchg
mov
xor
loope
xor
xor
dec
xchg
scas
mov
in
jmp
int
arpl
js
or
in
into
adc
sbb
test
into
mov
cmp
scas
lods
fdivl
lods
sub
sbb
sub
add
outsb
enter
ja
inc
popa
mov
mov
cmp
inc
clc
lahf
imul
xor
fmul
push
arpl
mov
imul
pop
outsb
and
ret
rclb
stc
popa
dec
fcom
or
mov
aad
lds
xchg
pop
std
addl
or
pop
fnstenv
repnz
dec
add
cwtl
mov
mov
jecxz
bound
fbld
xor
cli
inc
push
imul
test
sbb
fiadds
rol
sub
mov
mov
loopne
aam
test
ret
popf
leave
mov
mov
loop
inc
jl
nop
out
loopne
xorb
sbb
lds
jae
stos
jle
pop
fidivrs
movsb
dec
jbe
icebp
push
loopne
mov
out
sub
mov
and
jb
inc
leave
mov
jmp
sbbb
mov
xor
xchg
sbb
xchg
cmp
cs
sbb
add
imul
jge
mov
sbb
cmpsb
pop
inc
clc
subl
adc
movsb
iret
xchg
or
xchg
fidivs
lock
xlat
inc
int
and
cmp
sti
adc
sti
scas
lods
les
aaa
push
mov
ss
jno
scas
das
imul
sbb
add
sbbl
mov
jno
fcomi
leave
ret
mov
gs
scas
mov
rorb
mov
mov
in
insb
mov
outsl
push
mov
jmp
mov
and
cmpsb
mov
add
shrl
push
ficoml
popa
in
jno
mov
and
movsl
popf
mov
push
pop
jbe
or
test
mov
jnp
movsb
es
jge
rorl
pusha
ret
and
inc
add
xchg
in
mov
loopne
jo
mov
pop
mov
arpl
sub
paddw
pop
sub
in
xchg
call
mov
xchg
loope
testl
mov
mov
xor
inc
aam
or
xchg
sub
aam
dec
jbe
or
negl
addr16
inc
fcomps
and
mov
push
or
xor
add
popf
fcomps
movsb
jns
ret
rorb
push
mov
mov
sub
mov
mov
bound
adc
rcr
jp
je
lods
ss
pop
ss
sub
add
popf
lahf
mov
scas
sbb
adc
jmp
mov
add
dec
inc
jb
cmp
mov
aaa
cs
pop
aad
jne
cmp
mov
fs
filds
mov
aad
je
sbb
mov
jecxz
sbb
lds
sbb
xchg
sbb
and
in
xor
push
fldl
icebp
fisubs
jge
jb
addr16
negb
out
pop
std
iret
jb
xchg
xorb
loopne
into
in
mov
sbb
add
divb
cmp
std
call
mov
inc
outsl
xor
mov
pop
pop
stos
sahf
push
xchg
mov
adc
adc
add
outsl
push
ss
data16
adc
icebp
cltd
xchg
aaa
mov
xor
leave
clc
gs
pop
inc
add
clc
cmc
push
dec
or
push
cmpb
mov
xor
decb
xchg
cmp
cmp
loop
sbb
xor
pop
nop
shll
in
dec
push
cmc
loopne
lods
out
lock
xchg
jmp
nop
insl
pop
xchg
mov
mov
add
cwtl
stc
cmp
cmp
jne
scas
mov
lds
test
xor
mov
cmp
pop
xor
mov
mov
mov
adc
bswap
lret
aas
fstl
sub
xlat
popf
js
push
stos
into
push
jno
push
cmp
jnp
sub
sub
add
repz
lods
into
scas
sahf
fimull
push
not
jb
cwtl
mov
int
sub
pop
repnz
mov
jns
jg
adc
in
stos
xor
add
shl
dec
push
mov
cld
mov
rol
push
aad
lock
mov
sub
pop
lock
fwait
outsb
sbbl
push
imul
dec
add
out
call
dec
dec
call
and
pop
or
fsubl
push
xchg
xor
sti
mov
stos
loopne
sbb
jb
jp
jmp
mov
test
fdivl
xor
mov
rcrl
mov
repnz
orb
inc
mov
addr16
mov
push
vpcmpeqb
std
in
or
das
jge
rcr
pop
loopne
mov
rcrb
cmc
adc
and
or
stc
andl
jns
xor
xchg
lcall
lock
jg
adc
xchg
pop
test
in
xor
pop
pop
cmp
cmp
rcrl
push
cmpsb
dec
dec
jns
add
pop
mov
mov
ret
fists
cld
dec
and
xor
cmc
lret
mov
xchg
pop
mov
es
clc
hlt
bound
sub
xchg
mov
sub
mov
shrl
movsl
lods
sti
sub
cmpsb
cmp
mov
stos
xchg
xor
push
mov
insb
int3
out
lret
movsl
jnp
pop
cmpsl
mov
push
or
mov
push
shlb
fsubrl
mov
inc
shlb
jecxz
inc
pop
adc
in
mov
insb
es
mov
push
in
cli
sub
shll
dec
jns
int
mov
aaa
adc
cwtl
mov
xchg
dec
xchg
xchg
daa
jne
sbb
cmp
xchg
inc
adc
test
lahf
out
push
into
pop
jno
test
nop
pusha
jge
ljmp
ss
shlb
loopne
repnz
out
imul
repz
adc
pop
daa
mov
fwait
add
add
insl
or
pop
add
data16
mov
pop
in
ffreep
push
xchg
and
movb
mov
xchg
xchg
adc
lret
mov
int3
mov
cs
es
adc
push
gs
and
mov
movsl
shll
pop
or
inc
in
int
rcrl
in
subb
aad
pop
jl
in
mov
aaa
icebp
bound
inc
addl
xor
adc
jge
cmc
fistpl
dec
or
or
sbb
adc
add
dec
mov
pop
mov
mov
dec
fldenv
cmpsl
add
arpl
fbstp
jle
je
mov
call
xchg
cmpsl
cmp
repnz
faddl
push
inc
inc
mov
cmp
imul
mov
scas
jmp
lods
pushf
test
cmp
or
push
dec
pop
mov
xor
jbe
ja
sub
push
jno
ret
lock
mov
xchg
nop
imul
pop
out
je
lret
adc
stc
push
jb
and
pop
inc
xor
pop
lahf
pop
rcr
or
push
inc
sub
mov
xor
jno
outsb
lret
pop
lea
mov
mov
fmuls
inc
stc
jne
mov
ja
les
sbb
cmp
out
xor
or
popf
inc
cltd
pop
sbb
adc
sahf
or
loopne
and
lcall
sbb
xchg
ds
sbbb
popa
mov
mov
dec
adc
lods
in
ja
mov
stc
shl
stos
decl
scas
cmp
mov
xchg
outsl
ret
jmp
or
sbb
push
dec
nop
jmp
mov
cwtl
ljmp
push
mov
aad
jns
add
mov
lods
es
mov
or
out
mov
call
outsl
mov
xchg
cmp
andb
and
popa
cs
scas
insb
outsl
lcall
or
fdivl
inc
das
idiv
push
and
shl
shlb
or
jmp
insb
arpl
xlat
cli
cmp
bound
es
and
gs
mov
sub
mov
push
out
mov
leave
loopne
fs
test
adc
lods
shl
and
mov
fmuls
loope
in
ret
hlt
daa
ss
adc
and
mov
sub
dec
inc
mov
jl
sbb
in
stos
sahf
mov
jns
mov
mov
in
adc
addl
mov
and
pop
mov
cwtl
mov
mov
sti
or
fldl
rcll
in
daa
out
bound
fwait
clc
dec
fs
fwait
clc
fcoms
fildl
jle
cwtl
movl
xchg
pop
adc
inc
mov
imul
xchg
test
out
lds
fildll
iret
faddl
xchg
xchg
lret
push
or
in
daa
subb
add
pushf
ret
out
inc
subl
movsb
mov
orb
in
jno
cmp
lea
inc
incb
in
arpl
mov
mov
icebp
pop
sub
mov
push
add
lock
adc
inc
cli
jbe
and
fwait
ja
lods
cli
lock
imul
mov
add
insl
shlb
lock
ret
push
je
push
aad
jmp
lret
pop
cmp
adc
xchg
cmpsb
dec
aam
push
adc
test
xchg
xchg
mov
sbb
cmp
push
ja
cmp
or
gs
and
fs
push
testb
xor
rclb
xchg
leave
into
pop
pop
rcl
mov
sarl
stos
pushf
sarb
lods
cmp
push
aaa
sub
mov
ja
ror
jg
jo
mov
fstpl
repz
xor
xchg
push
cmp
mov
xor
xor
daa
aas
cli
clc
pop
dec
ret
stos
int3
mov
push
mov
adc
data16
add
in
cmp
dec
pusha
fisubrl
mov
scas
outsb
dec
pop
sub
add
insb
xor
push
fistpl
std
orb
in
aam
xor
xchg
mov
insb
mov
jge
sar
xchg
scas
mov
bound
xor
jecxz
sub
mov
sti
mov
fs
push
rcr
les
ljmp
lcall
push
jbe
icebp
int
gs
mov
out
in
in
mov
mov
lods
aas
popw
sub
inc
rorl
mov
ret
sahf
push
pushf
insl
ss
or
sub
adc
mov
add
pushf
aam
imul
pop
jno
ja
insl
add
outsl
add
out
mov
xchg
test
into
and
pop
mov
xor
add
repnz
and
inc
or
sahf
stos
xchg
ret
inc
and
pop
pop
pop
mov
leave
dec
into
mov
dec
jb
xchg
mov
popa
cltd
scas
daa
pop
movsl
in
clc
je
lret
push
push
or
pop
cmpsl
cmp
adc
mul
add
sbb
push
ret
fdivr
jl
cmp
call
stos
aas
pushl
or
es
dec
mov
push
or
mov
test
sbb
gs
clc
in
xchg
cvtps2pd
movsb
xchg
cld
cmpsb
push
cmp
scas
xor
outsl
dec
fwait
dec
mov
push
jge
out
jmp
and
inc
outsl
jge
mov
lea
mov
shll
pop
sti
jg
add
xchg
inc
xchg
mov
inc
inc
sbb
sbb
pop
decb
xor
mov
adc
sbbb
xchg
das
push
push
add
test
ljmp
mov
arpl
movsl
int
adc
call
sti
out
sbb
cmp
fnstenv
push
call
push
int3
dec
dec
push
xor
fcomp
out
int3
stos
je
pusha
sahf
and
adc
xchg
mov
xchg
xchg
pop
pop
cmp
fisttps
hlt
ja
cmpsl
rcrb
push
add
mov
mov
les
inc
adc
out
in
and
testl
repz
adc
rcrl
sub
push
xlat
cmp
jp
pop
fdivrp
inc
dec
mov
xorl
jmp
pop
mov
daa
dec
insb
mov
jg
int3
pop
sti
in
xor
sar
cmp
cmp
mov
cli
dec
jb
movsb
mov
cmc
ficomps
dec
movl
es
sarl
dec
mov
add
jns
push
ja
sbb
lcall
jmp
mov
ljmp
mov
cmp
mov
leave
pop
pop
mov
loop
sub
xchg
xchg
mov
cmp
hlt
bound
and
je
nop
shrl
stos
cmp
cwtl
mov
jp
or
xor
sbb
lcall
pop
cltd
sarl
jg
cwtl
loop
sbb
repnz
minps
inc
and
pop
je
jmp
imul
sub
push
fsubrs
sub
repnz
cld
inc
adc
xor
xor
mov
jns
pop
xchg
jl
or
popf
mov
nop
xor
sahf
jp
sahf
mov
or
or
scas
xchg
adc
xchg
inc
jp
ljmp
pop
xchg
rorb
sbb
push
loope
loope
cltd
stos
pusha
test
scas
test
xchg
xchg
and
xchg
xchg
arpl
push
int3
mov
jo
jl
inc
inc
dec
sbb
push
cmpsb
jno
inc
push
arpl
cs
mov
fmuls
mov
mov
loope
xor
adcb
repnz
sahf
add
xor
fstpt
inc
lods
ljmp
and
scas
int3
in
cmc
add
fisttps
dec
or
mov
test
fucomi
in
jge
ja
and
popf
or
mov
aas
cmp
mov
rolb
iret
cmpb
mov
outsl
lahf
push
mov
xlat
ds
cmc
mov
je
cli
or
mov
ret
xchg
shll
adcl
lods
push
push
mov
mov
inc
bswap
adc
jle
out
and
mov
mov
sbb
enter
mov
int3
jle
pop
cmp
add
out
mov
xor
aad
inc
inc
addl
stos
jae
mov
outsl
insb
push
mov
sbb
inc
mov
xchg
gs
clc
pop
cmp
mov
out
xchg
mov
jbe
fnsave
fsub
add
cltd
in
pop
mov
inc
filds
sbb
test
adcl
jl
cld
xor
out
nop
or
ret
scas
movsb
cmp
cmp
inc
mov
jle
outsl
or
mov
dec
and
sub
enter
jbe
lods
ficompl
pop
inc
cltd
icebp
into
sarb
xchg
mov
push
push
cli
scas
or
fisubrl
inc
jge
ret
lods
dec
jnp
sbb
ret
das
lds
sbb
cmp
and
adc
push
sti
jle
or
int
cmpsl
gs
xchg
mov
xor
mov
cs
cmc
sbb
pushf
mov
jmp
jg
inc
sub
insb
and
repz
imul
adc
pushf
xor
aas
and
and
sahf
sti
inc
pop
cli
popa
pushl
pushf
in
jle
inc
jns
dec
inc
jo
popa
mov
push
mov
or
inc
scas
into
xor
sbb
pop
sbb
xor
dec
jno
push
mov
mov
popf
push
outsl
fldl
js
jnp
push
sbbb
cmp
mov
test
loopne
lock
lods
jmp
sub
orb
insl
pop
or
negl
add
sbbb
pop
mov
out
js
out
pop
mov
lret
fldt
ret
push
adc
fstpl
mov
ret
ljmp
imul
mov
fists
cmp
push
mov
lret
cmpsb
and
fcmovbe
lods
xor
cs
and
in
cmc
xchg
dec
sarb
mov
add
int
adc
mov
loopne
imul
mov
repnz
sbb
pop
add
repnz
push
jb
dec
cld
iret
lret
mov
loopne
sbb
xor
inc
mov
or
or
and
xor
pop
jmp
mov
mov
fistpll
dec
lcall
xchg
fwait
xor
dec
sub
pop
push
push
fwait
push
jae
cli
out
popf
mov
mov
adc
xor
scas
fwait
pop
jge
fdivs
inc
adc
sbb
insl
and
mov
mov
jmp
pop
push
rcl
fsubrs
int3
int
xor
gs
pop
aad
or
je
sub
cli
adc
mov
insb
addr16
mov
ret
push
std
mov
jle
inc
imul
jb
xchg
mov
mov
mov
scas
xchg
sbb
idiv
push
in
adc
and
jge
rcll
ret
mov
dec
mov
mov
hlt
mov
add
xor
xchg
in
gs
add
xchg
mov
cli
mov
jmp
popf
xor
and
dec
sbb
xchg
mov
and
loopne
xchg
aam
dec
inc
daa
adc
inc
xlat
shlb
push
rcrl
xor
lock
jno
and
xchg
or
inc
in
pop
lods
add
mov
sarl
iret
mov
arpl
aad
imul
jb
call
push
adcl
idivb
arpl
push
cmp
push
push
cmp
cmpsl
add
pop
xor
xor
arpl
cmp
push
inc
mov
inc
sub
lods
push
movsl
popa
push
inc
loope
fildll
addl
inc
push
push
cmc
sub
add
repnz
dec
fdivs
mov
mov
add
data16
cwtl
popf
xor
and
adc
xchg
pop
mov
cmp
les
mov
sbb
jp
into
repz
in
adc
mov
xlat
sbb
xchg
mov
and
arpl
fistl
fdivs
jp
std
fildll
sub
repz
std
pop
push
ret
out
xchg
push
repnz
mov
sbb
inc
xchg
sub
mov
or
or
rcl
xchg
lods
mov
or
fwait
in
dec
jb
jge
push
cmp
out
test
or
jp
adc
sbb
jnp
pop
out
sub
push
insb
sbb
jb
outsb
pop
mov
test
addl
pop
xchg
jbe
mov
mov
inc
roll
jae
aam
bound
ds
ss
out
mov
int
aam
lods
sub
push
ret
ss
push
iret
cmc
adc
ficoms
and
insl
sub
stos
test
into
in
push
adc
insl
jo
imul
call
xchg
test
das
xchg
repnz
and
add
lret
and
lahf
imul
fcoml
inc
xchg
push
push
popf
inc
push
out
lea
in
enter
outsb
outsl
in
addr16
jbe
mov
cmp
ficomps
mov
and
xchg
stos
mov
testl
mov
pop
xor
xor
push
mov
testb
inc
sub
in
data16
and
iret
adc
lcall
psubsw
dec
add
xor
mov
push
scas
add
cmp
cmp
pop
cmp
aas
hlt
xor
xchg
cli
cmp
add
pop
push
lret
inc
dec
and
push
in
add
cs
movsl
cmp
add
imul
sarb
push
dec
aas
pop
mov
adc
push
or
adc
push
lods
pusha
mov
pop
test
test
jbe
mov
lea
out
insb
jb
mov
mov
dec
lret
fsubrp
fbld
in
popa
xchg
cmpsl
sbb
stc
xchg
xchg
mov
iret
out
loop
xchg
test
outsb
dec
xor
outsb
or
dec
jne
cwtl
adc
dec
pop
xorl
mov
sbb
mov
aaa
add
adc
js
adc
or
fwait
mov
lret
mov
out
push
cli
jle
bound
xor
dec
dec
mov
rcrl
fisttps
lahf
xchg
movsl
jp
pop
xlat
sbb
xor
sar
lea
xchg
jp
shll
ds
inc
mov
xchg
xor
pop
int
inc
push
gs
test
jno
aaa
adc
xor
add
loop
mov
clc
stos
mov
jle
sub
stos
pop
mov
xchg
and
fwait
fcoml
xor
dec
sti
inc
jecxz
pavgw
adc
movsl
movsl
sub
js
test
insb
mov
fiadds
adc
fmull
outsb
mov
insl
xlat
pop
cmp
loop
xchg
dec
aad
pop
int
repnz
jbe,pt
pop
ja
cmp
call
icebp
pop
jecxz
jecxz
or
xor
pop
or
jge
iret
sub
fists
andl
fistpl
test
in
outsl
fsubrl
pusha
mov
dec
cmp
neg
mov
pop
sar
outsb
pop
pop
or
sub
pop
xor
sub
xchg
popf
std
jle
ret
outsb
jo
and
push
or
aas
movl
jp
out
aad
cmpsb
ret
popa
sbb
fiadds
sbb
dec
and
xchg
pop
mov
push
xorb
mov
fsubr
imul
fdivs
int3
mov
sub
out
jge
call
sbb
jo
cli
or
sub
pop
rcr
and
add
aaa
sub
cmp
ja
vmovmskps
test
jle
test
or
adc
sub
inc
aas
xlat
cmpsl
insl
lds
sub
jp
sub
hlt
adc
dec
xor
sbb
inc
loop
mov
out
das
call
pushf
shr
inc
insb
jns
testl
adc
sub
or
sub
xor
cmp
cli
sub
in
push
into
es
mov
xor
mov
xchg
shlb
mov
mov
and
stos
cwtl
dec
xor
pop
push
mov
movsb
push
out
sbb
sub
xor
jae
pop
test
jae
icebp
lret
out
adc
dec
leave
clc
nop
jmp
in
jmp
es
xor
or
mov
or
lock
imul
jl
icebp
sub
les
je
call
stos
in
sbb
repz
imull
mov
mov
dec
mov
inc
pop
pop
cmp
in
jo
ljmp
sub
pop
push
xchg
xor
jmp
add
cmpsl
dec
iret
push
jmp
scas
inc
push
xlat
sub
xlat
pop
xchg
mov
in
rcl
mov
xlat
sub
xorb
pop
repnz
push
orb
push
push
fsubrs
pop
jbe
int3
nop
ss
ja
xchg
in
mov
fcmovu
fsts
sbb
shlb
pop
mov
outsl
mov
ljmp
push
or
push
push
addl
icebp
dec
out
dec
inc
and
neg
mov
inc
mov
test
stos
or
and
push
int3
add
jo
mov
popf
or
xchg
fiadds
mov
ja
test
mov
mov
push
dec
xor
mov
in
test
out
idivb
push
fnsave
stc
fs
dec
mov
mov
mov
xchg
dec
imul
mov
inc
dec
aad
enter
mov
pop
sbb
in
mov
pop
pushf
push
pushf
mov
test
mov
pop
xor
mov
loope
in
xchg
adc
orb
ret
data16
mov
fwait
jae
jbe
xchg
cmp
mov
aaa
pand
pushl
ret
mov
stos
xchg
lahf
call
inc
testb
cmp
fisubrs
sbb
pop
mov
rcl
or
pusha
pop
shl
ss
xchg
incl
push
mov
lock
mov
dec
dec
lret
call
in
xor
aaa
das
push
pushf
hlt
out
cmpsb
incl
cmp
pop
or
xchg
aam
mov
fwait
cmp
add
pop
or
cmpsb
fs
push
pop
js
pop
inc
pop
pop
popa
ret
test
cmp
dec
mov
sbb
push
push
xchg
and
mov
push
outsb
fstp
dec
mov
repz
or
test
cmp
cmc
add
aad
sahf
lret
mov
in
push
ds
daa
xchg
mov
mov
rep
dec
xor
push
mov
push
sub
mov
cmp
push
scas
fildl
inc
xor
xchg
mov
shl
jp
mov
push
mov
mov
cmp
leave
or
pop
jno
out
test
xchg
mov
mov
mov
ss
mov
rorl
idivl
xchg
xchg
cltd
pop
decb
mov
cld
mov
dec
xor
pop
jecxz
lret
xlat
in
pop
mov
or
nop
rcrl
mov
outsl
mov
stos
push
pop
jle
vcomiss
jae
add
sti
jnp
in
lahf
cmp
jnp
pusha
push
psubusb
mov
pushf
out
sub
pop
stc
mov
leave
dec
cmp
mov
mov
dec
fcmovne
push
mov
pop
mov
out
push
add
cmp
sbb
add
cmpl
xchg
jbe
inc
xchg
movsb
pop
xchg
loope
mov
daa
scas
ja
inc
adc
mov
xchg
stos
xchg
leave
mov
adc
int3
dec
add
xor
les
cwtl
add
xchg
rorl
or
mov
movsb
insb
inc
daa
loopne
cli
add
lock
testb
sbb
jp
mov
test
pop
dec
outsl
sub
mov
jp
add
dec
ror
lret
insl
or
ss
and
xchg
das
add
cltd
mov
sub
cmpl
jl
call
mov
xor
les
roll
mov
fs
xchg
sub
dec
sbb
ljmp
addr16
idiv
lret
test
cmp
xchg
lock
xchg
xor
das
cmp
lret
mov
or
adc
rcrb
aas
xchg
mov
insl
and
dec
popf
test
dec
mov
cwtl
pop
jle
jnp
lock
addr16
call
test
dec
loope
das
mov
pop
pushf
dec
xor
push
sbb
lods
add
stc
fiadds
fstpt
sub
daa
sbb
int
bound
mov
jle
cmpsl
or
les
mov
lock
ss
pop
lock
mov
push
add
and
in
inc
dec
or
dec
or
pop
sub
pop
je
xlat
or
jge
ljmp
xor
cmp
jmp
loopne
push
xchg
iret
js
movsb
mov
mov
lds
xchg
sub
call
xlat
jl
shll
jne
ds
cmp
mov
xor
or
and
xchg
es
pop
inc
in
aad
ja
mov
mov
ss
sub
sbb
push
nop
jae
out
cmpsb
popa
rorl
push
daa
jae
and
xor
stc
pop
jb
adc
nop
mov
pushf
aas
inc
or
imul
xchg
pop
cli
xor
cld
fstpt
adc
repz
mov
je
ficomps
aam
mov
inc
jmp
mov
test
mov
out
mov
jnp
adc
jg
das
mov
mov
sub
jno
cmp
pusha
leave
popf
mov
or
fiaddl
mov
xor
mov
mov
in
mov
push
adc
lret
xlat
and
outsb
sbb
subb
adc
pusha
cld
jbe
std
shlb
icebp
int
popa
scas
add
push
into
mov
push
negl
lods
rsqrtps
xor
mov
lret
adc
aaa
and
aad
dec
sahf
sub
mov
cmp
adc
fidivrl
push
pop
in
pop
inc
rol
mov
jmp
iret
movsl
aaa
nop
mov
jne
jb
je
xlat
or
scas
push
jmp
jno
js
ja
xchg
arpl
push
cld
xor
mov
std
fisubs
lahf
pop
mov
and
push
dec
jb
push
dec
jecxz
jns
push
jmp
clc
mov
into
pop
mov
repnz
sarb
cmp
insl
div
sub
das
push
jbe
mov
fadds
testl
and
xor
adc
aaa
push
in
pop
sbb
push
scas
jbe
add
mov
pusha
mov
xchg
push
push
pop
and
gs
push
add
push
mov
fs
les
jge
mov
or
xor
add
leave
jae
and
out
mull
adc
pop
pop
movsl
or
push
test
subl
push
lock
push
in
loop
inc
mov
ss
out
mov
push
aad
adcl
push
pop
or
out
or
popa
notb
inc
and
jecxz
adc
push
pop
fdiv
mov
or
xchg
push
mov
stc
mov
dec
insl
fdivrl
adc
rcll
jle
jno
push
aas
mov
push
jae
call
repnz
outsl
je
je
sbb
mov
rcr
push
xchg
pop
pop
jne
sub
fcoml
ds
dec
mov
mov
add
pop
out
xor
push
sbb
dec
frstor
ja
sub
sahf
ds
push
mov
and
movsb
adc
push
cmpsb
sub
cmc
xchg
inc
cmp
movsl
leave
lods
in
add
mov
cmp
pop
loopnew
mov
fistpl
test
pop
bnd
or
aas
mov
pop
inc
inc
ret
inc
je
stos
adc
mov
in
lret
in
je
aam
and
imull
cmpsb
roll
pusha
ret
sbbb
mov
push
jmp
inc
or
int
loopne
std
mov
cltd
insb
lods
cld
add
inc
pop
insl
add
out
xchg
andl
test
mov
or
aaa
cmp
add
mov
mov
outsl
jns
mov
jns
aam
sti
js
jl
ja
mov
call
sub
pop
aaa
lret
out
outsl
ss
out
cmp
or
cmp
roll
cmp
mov
out
imul
dec
jg
add
pop
jo
sub
xor
std
mov
mov
cmp
aas
mov
and
bound
shrl
and
push
loop
inc
mov
xchg
cmp
mov
repnz
cmp
sbb
cmpsb
nop
jbe
mov
dec
mov
sar
cltd
push
push
shll
cmc
and
push
sbbb
fmull
loop
xor
jbe
xor
cmpsl
lret
lock
fsts
out
ja
bound
xchg
xlat
rol
jg
subl
or
pop
sub
out
roll
mov
mov
in
or
cltd
popa
inc
int3
jl
inc
add
mov
push
inc
jae
inc
outsl
movsb
aas
movsl
or
push
stos
xor
add
imul
dec
fldt
bound
add
sbb
mov
jmp
call
std
imul
pop
lock
movl
xor
sbb
aaa
jno
fstps
xchg
aas
arpl
inc
shlb
mov
pop
in
inc
adc
aaa
stc
sarl
daa
aaa
jl
mov
int
sub
call
xchg
mov
xor
es
js
test
sbb
fstps
mov
arpl
in
insb
clc
inc
fs
dec
mov
imul
jns
and
ljmp
stc
dec
pop
mov
jo
jle
jae
jg
push
adc
roll
pop
aad
daa
cmp
outsb
mov
shlb
scas
inc
add
jmp
push
pusha
pop
sub
andb
sti
or
leave
cltd
inc
jbe
push
cltd
inc
pushf
jl
mov
jbe
adc
xchg
cmp
test
pop
xor
dec
mov
fs
icebp
pusha
mov
aas
popf
sub
jl
ljmp
inc
cs
xor
pop
pop
andb
das
dec
or
sbb
sbb
or
insb
imulb
jmp
mov
and
and
mov
push
subl
lret
sbb
jnp
xchg
push
stos
cld
sti
mov
insl
dec
mov
lea
mov
adc
loop
cmc
mov
bound
lods
je
pop
dec
pop
push
or
add
fwait
mov
xor
push
shlb
subb
clc
cs
pop
xchg
jne
add
jbe
shrl
lods
fwait
idivb
pushf
hlt
sbb
fwait
mul
xchg
pushf
cwtl
push
add
lret
shrb
lahf
mov
and
push
and
and
xchg
xchg
xchg
loopne
les
lcall
stos
clc
or
pop
sbb
cmp
nop
mov
lods
test
sub
or
call
leave
mov
inc
mov
jle
pop
mov
jne
jne
lods
rcrb
mov
lea
xchg
mul
scas
adc
cmp
sbbl
mov
jbe
inc
cmp
inc
xor
mov
aaa
pop
mov
aad
xor
or
push
imul
aas
xchg
mov
push
and
ja
push
jnp
or
outsb
sbb
sub
lahf
push
bound
sahf
ds
lret
ret
lds
xchg
lods
aam
test
cmp
str
or
loop
mov
jo
or
lods
sbb
jns
push
andl
cmp
pop
mov
cli
and
xchg
mov
dec
dec
in
or
xchg
in
xor
xor
xor
movsb
or
rorl
xorb
push
mov
xchg
lahf
inc
outsl
or
into
std
int
sub
ret
js
sub
fimuls
imul
popf
adc
sub
inc
dec
loope
dec
arpl
sub
add
loop
ljmp
sub
std
frstor
inc
je
nop
hlt
or
or
add
jae
js
in
pop
stos
cmp
mov
xlat
pushf
or
movsb
pop
mov
adc
jo
add
test
pusha
inc
aas
xchg
push
push
adc
adcl
sub
pop
xor
aam
std
lods
xchg
jmp
clc
jg
mov
push
cmpl
pop
jns
inc
push
dec
mov
movsb
inc
aas
add
sub
adc
push
lods
mov
add
mov
xchg
mov
cld
xor
or
push
test
or
add
mov
insl
pushf
into
pop
mov
adc
test
ja
inc
mov
mov
std
add
stos
mov
xchg
popa
insl
test
mov
adc
enter
mov
mov
mov
mov
sbb
dec
data16
ret
aad
cmp
pushl
mov
je
push
xor
into
sti
lcall
into
call
or
xchg
xchg
hlt
push
mov
push
repz
outsb
mov
push
mov
out
lahf
ret
in
and
sbb
lahf
dec
xchg
sub
mov
cmc
fsqrt
pop
ds
mov
push
and
int3
pop
or
jge
and
es
sub
dec
js
inc
xchg
pusha
pop
gs
add
int
cld
std
sub
cltd
adcl
mov
jg
push
pop
xchg
hlt
fwait
jnp
mov
sbb
mov
sti
aas
ret
mov
push
in
cs
in
jge
xlat
mov
cmp
or
je
shr
jnp
lds
movsl
call
adc
mov
jle
rolb
in
testl
xchg
addr16
push
add
push
hlt
sbb
lds
and
out
jle
push
hlt
loop
and
je
xorb
jae
adc
pop
xchg
sti
add
popa
xchg
jmp
bound
shr
mov
mov
stos
cli
int
mov
sbb
std
frstor
ss
xchg
jae
jno
dec
jb
cmp
inc
arpl
std
icebp
mov
cwtl
ret
aad
dec
std
test
adc
rcrl
sbb
sbb
cmp
jecxz
sbb
nop
or
mov
mov
fmulp
push
dec
cmp
pop
call
jl
xor
xchg
xchg
sub
cmp
enter
mov
xchg
mov
dec
test
bound
jmp
mulb
adc
jmp
pop
add
mov
add
push
outsb
xchg
lods
out
adc
pushf
sbb
ret
int
sbb
repnz
xchg
push
out
lret
pushf
popl
pushf
fwait
mov
ret
mov
cmp
js
insb
inc
das
push
ss
and
sti
inc
fdiv
adc
fcomps
in
inc
dec
jp
scas
push
push
shl
arpl
and
lret
call
sub
cmp
fadd
lahf
mov
xchg
mov
je
xchg
lcall
jae
andb
lds
incb
pop
pop
mov
ret
push
arpl
cwtl
in
out
stc
pop
fcmovb
lods
dec
dec
or
push
sbb
sub
sbb
mov
sub
pop
dec
cmpsl
lcall
ficoms
sbb
adc
push
and
cmpsb
mov
pop
dec
mov
add
push
pop
faddl
lods
clc
xorb
adc
fisttps
mov
bound
test
push
inc
xchg
ss
push
ljmp
push
and
ret
push
stos
ljmp
sbb
push
lret
out
repnz
data16
lods
xlat
scas
inc
dec
cmc
in
mov
sbb
push
int3
out
call
out
sbb
pop
test
mov
xor
mov
or
lock
add
mov
jne
pusha
inc
popf
jmp
jecxz
repnz
xor
mov
stos
jp
cmpsl
pop
mov
cli
lods
pop
shrb
sbb
sarl
ret
xor
push
sub
ss
clc
push
cli
jg
push
xor
push
lock
sbb
sti
xchg
cmp
xor
aaa
xchg
lret
and
test
shll
cs
inc
xchg
test
in
rcll
movsl
adc
ja
fbstp
mov
cmpl
sti
mov
jecxz
or
leave
rcrb
sbb
fs
mov
jae
mov
pusha
sub
shrb
in
iret
cmp
cmp
repnz
mov
pop
stos
testl
lea
sub
psraw
ficoml
dec
jge
cs
mov
out
ja
pop
xchg
aad
idivb
xor
int3
mov
sahf
jb
xchg
fs
push
mov
jb
sahf
sub
lock
stc
das
imul
and
adc
insl
ret
mov
add
pop
sub
ss
inc
outsb
push
insl
clc
popa
nop
add
dec
outsb
xchg
subb
cltd
mov
push
subb
scas
cli
xor
pop
movsl
movsl
clc
xor
mov
lcall
mov
neg
aad
divl
sub
aas
mov
dec
xchg
test
and
mov
cld
loope
and
add
xor
add
imul
out
push
leave
add
out
addr16
scas
ljmp
mov
lock
mov
outsl
mov
mov
repnz
jle
push
rol
xorb
aas
add
dec
lock
idivb
fistpll
lahf
mov
out
push
xor
into
xchg
mov
inc
les
lods
test
scas
gs
inc
jle
jle
sarl
sub
popf
unpckhps
inc
mov
dec
sbb
ja
xchg
sldt
pop
movsb
mov
ret
mov
hlt
test
sub
xchg
cmp
mov
imul
dec
dec
mov
and
adc
stos
mov
sahf
push
dec
mov
scas
add
aam
dec
ljmp
mov
cli
loopne
mov
stc
subb
sub
jmp
inc
adc
add
mov
and
push
sbb
jg
cmpsb
sti
add
stos
stc
adc
or
xchg
push
lea
push
dec
push
jl
xchg
fldl
jbe
xor
out
cmpsl
jge
cmp
into
mov
push
rolb
push
pop
jae
add
insl
dec
lock
xchg
add
fstpt
mov
sub
data16
push
cmp
xor
sbb
shl
int3
adc
shrb
je
sub
rcrl
xchg
dec
vsqrtpd
ja
sub
aas
sbb
in
lcallw
out
dec
popf
add
or
scas
mov
lock
push
hlt
das
jne
sub
jo
pushf
pop
add
jno
cmp
jl
mov
imul
nop
mov
jmp
outsb
mov
sbb
mov
insl
mov
shlb
inc
enter
scas
lds
imulb
lcall
mov
imul
push
jns
lods
push
arpl
lahf
jno
mov
xchg
in
test
pop
inc
lcall
ret
enter
xor
stos
jb
adc
pusha
ret
out
inc
or
fsubs
cmp
mov
sub
xorl
xchg
setg
arpl
inc
inc
sbb
cmpsl
pop
jnp
popf
inc
mov
xchg
dec
rep
mov
pop
push
es
mov
mov
lods
cld
mov
call
sbb
ja
shl
inc
mov
imul
cs
std
mov
orl
add
stos
cmpsb
or
pop
imul
xor
mov
xor
sbb
imul
popa
jne
xchg
jno
push
out
cmp
pop
jl,pt
xor
xor
shll
cld
les
adc
or
mov
and
dec
xor
into
push
js
rcrl
cmp
mov
lods
cmp
push
movsl
push
mov
mov
icebp
pop
bnd
push
mov
sub
shll
add
movsb
push
imul
int3
out
push
xchg
pop
inc
ret
mov
lahf
cmp
cmpl
push
or
dec
xor
pushf
xor
enter
jg
pusha
cmpsb
push
pusha
sub
aas
es
movsl
mov
pop
push
inc
arpl
ss
cmovbe
mov
adc
sbb
cmp
mov
mov
popa
mov
scas
mov
push
dec
xor
js
sub
xchg
fnstenv
mov
pop
or
adc
sub
xchg
cmp
clc
adc
cmp
fwait
push
mov
inc
mov
push
dec
bound
or
xor
or
jbe
ss
loop
mov
mov
mov
cltd
cmp
outsb
sub
adc
loope
inc
popa
in
or
insb
push
mov
add
test
je
pop
inc
mov
dec
push
jg
inc
loopne
cs
lea
cmc
fisubl
jno
pop
repnz
mov
setg
dec
mov
and
sub
into
cmp
jns
or
mov
test
cs
sub
movsl
mov
pop
mov
popf
cmp
insb
or
repnz
sub
shlb
pop
xchg
dec
lds
mov
add
popa
inc
mov
stos
mov
addr16
test
fadds
xchg
mov
and
xchg
imul
xchg
movsl
dec
aas
xor
in
adcb
xor
hlt
xchg
arpl
scas
push
dec
call
or
mov
pusha
test
push
call
rcll
mov
jmp
mov
push
dec
add
movsl
ds
ljmp
jb
and
stos
addr16
dec
mov
les
int
ljmp
lods
rcl
ja
mov
test
sbb
jbe
ja
jp
sub
negl
jns
das
imul
iret
stos
mov
in
js
or
iret
jmp
jo
mov
mov
xchg
push
or
icebp
ja
and
pop
push
inc
push
adc
inc
inc
mov
in
lea
mov
repz
test
pop
add
push
mov
loop
pop
fimuls
shll
out
gs
mov
shll
adc
sub
dec
sub
test
dec
int
inc
dec
sub
lock
aam
inc
and
mov
rclb
mov
mov
in
sub
xlat
push
xchg
pop
fstp
xchg
sti
push
cmc
movsb
adc
adc
setb
jne
push
mov
cld
xchg
pusha
xor
push
inc
jmp
arpl
mov
pop
push
jae
push
in
jle
mov
mov
imul
movsl
dec
add
adc
out
sti
or
inc
pop
lods
jns
mov
stos
dec
fs
subb
xchg
test
sarb
fdiv
into
ja
push
aaa
sub
pop
or
jns
lcall
aam
leave
shrb
outsb
outsb
aam
xchg
xor
sbb
cmpsl
out
in
mov
dec
or
jecxz
bound
test
mov
dec
xor
daa
lahf
arpl
gs
scas
mov
sub
push
jns,pn
push
push
pop
and
cmpsl
lock
test
dec
mov
loope
push
ficomps
aam
stos
andl
xchg
addb
aas
sub
sub
add
dec
push
loope
shll
and
pop
stc
test
mov
rorl
adc
sub
popf
push
ja
ret
insb
popf
adc
jnp
sahf
test
jb
sub
int
xchg
lods
out
inc
addr16
incl
cwtl
cs
gs
jo
lret
sbb
das
outsb
jb
test
insb
xchg
jo
add
xor
call
lods
sub
jo
push
es
add
mov
xchg
jle
addr16
insl
jge
movb
jg
std
jecxz
sbb
daa
addr16
and
dec
xor
add
fimuls
mov
stc
popf
xor
adc
daa
push
je
xlat
inc
and
dec
or
movsb
adc
push
out
or
jne
test
test
dec
sub
bound
or
adc
popaw
pop
mov
mull
fldenv
dec
scas
lahf
mov
sub
imul
out
ss
rolb
pop
fistl
xchg
int
test
flds
jge
imul
daa
imul
sar
mov
test
cwtl
adc
lea
arpl
inc
cmp
pop
jp
or
cmp
mov
jmp
ficoml
mov
jle
shrl
mov
pusha
dec
fcompl
cltd
mov
push
xchg
cld
xor
push
and
fwait
je
rep
ja
lods
popa
sub
sub
adc
fisubrl
mov
adc
and
sbb
sub
mov
in
push
addr16
push
or
xchg
and
jl
ret
popa
pop
rclb
dec
test
sbb
inc
jns
adc
adc
pop
pop
shlb
loop
lret
cmp
pop
push
shl
int3
test
adc
mov
in
test
cmp
shlb
into
int
jne
adc
int3
xchg
nop
or
jecxz
pop
adc
nop
xchg
mov
dec
jecxz
pop
shll
and
outsl
scas
mov
hlt
add
cmpsl
jne
xchg
mov
adc
pop
ss
xchg
xchg
pop
dec
bound
push
jl
inc
cmpsb
sub
dec
and
sbb
pop
sub
clc
sbb
or
dec
adc
leave
fidivl
gs
xchg
popa
inc
pop
lcall
pushf
fs
iret
and
loop
rclb
inc
loope
jns
inc
pushf
push
ja
fnstsw
jecxz
mov
mov
addr16
lods
in
scas
jg
movsb
jae
jg
adc
xchg
mov
bound
dec
sub
xchg
pop
mov
out
in
into
popa
fbstp
enter
jg
pop
adc
xchg
idivb
dec
inc
jns
pop
push
incb
rolb
add
push
pop
aam
mov
test
fisubl
xlat
sahf
xchg
cmp
ja
ret
movsl
sar
and
push
sbb
mov
sti
daa
int
outsl
jne
and
and
leave
sbb
inc
pop
dec
or
shrb
xor
rclb
add
push
insb
mov
mov
jge
sbb
sub
or
push
and
inc
sbb
push
sub
lods
jno
add
jae
sahf
mov
mov
mov
add
gs
push
lods
subb
lea
cmc
mov
shlb
mov
cli
mov
scas
loope
out
push
out
mov
mov
cmp
mov
pop
mov
inc
mull
dec
icebp
xchg
push
sbb
sbb
jl
sub
into
aam
aaa
mov
daa
push
adc
add
test
inc
xor
jge
sub
ja
sub
vmovmskpd
iret
pop
mov
jge
mov
outsb
movsb
popf
pop
push
test
ss
sub
rcr
and
xor
sbb
sub
int
mov
mov
inc
lea
test
cli
clc
sbb
push
cmpsb
xor
andl
std
jp
pop
push
or
mov
dec
fxch
stos
xor
adc
bound
sub
fldl
xchg
and
andb
jp
in
lock
push
pop
mov
lahf
subb
inc
cmpsb
fdivs
jle
add
adc
mov
and
insl
xchg
lret
jb
andl
or
inc
push
sub
lahf
mov
cmp
push
dec
in
std
test
and
push
inc
int3
int
and
pop
pop
add
adc
xchg
sti
ja
or
mov
mov
out
sub
bound
inc
jno
mov
mov
sbb
gs
mov
popa
jne
pop
in
cmp
xchg
xchg
aas
lods
sub
mov
insb
push
aam
imul
outsl
mov
add
xor
jge
add
xchg
dec
or
cmp
aad
inc
pushf
and
push
fbstp
mov
pop
push
imul
cmp
pop
push
xchg
xor
call
xor
mov
adcw
sbb
pop
push
jb
xor
pop
push
fdivrl
push
insb
je
subb
enter
mov
out
or
mov
push
push
in
sbb
inc
hlt
jmp
ss
pop
mov
test
xor
or
push
insl
test
flds
andnps
in
push
inc
out
pop
mov
mov
add
cs
pop
xchg
in
adc
ss
cwtl
pop
sbb
cmp
mov
jmp
loop
cmp
loop
out
aas
mov
and
jb
shll
test
xor
xchg
ja
cmp
push
sub
jmp
int3
dec
mov
and
cmp
pop
lds
sahf
loopne
jl
xchg
stos
mov
iret
sahf
lods
insb
cmp
pop
pop
xchg
jmp
in
cmp
mov
aas
and
je
dec
mov
in
push
mov
inc
push
xchg
xchg
pop
sarb
jbe
inc
or
xor
dec
adc
adc
shl
sub
rclb
xor
lds
fidivrl
mov
xchg
jno
pop
xor
or
and
xchg
inc
leave
jge
scas
mov
int3
int
andl
and
jmp
sbb
push
xchg
xor
pop
cwtl
xor
popf
fsubl
lahf
scas
adc
repnz
mov
notb
sar
pop
mov
cld
xor
loope
push
das
cmp
in
sbb
mov
ja
jmp
mov
dec
jmp
sahf
repnz
push
in
into
pusha
out
dec
sarl
inc
out
adc
mov
sub
sub
hlt
xchg
push
std
dec
out
add
test
xchg
pop
mov
leave
js
jg
cmp
mov
fisubl
pop
shrl
adc
fcoms
xchg
xchg
adc
pop
rcr
sahf
js
inc
adc
sub
repnz
mov
popf
jg
in
out
stc
divl
scas
inc
stos
push
mov
sti
popa
lods
add
shll
out
add
xchg
ficoml
scas
lret
icebp
mov
xchg
xchg
sbb
rcr
mov
clc
shl
mov
mov
push
jns
jmp
mov
cld
cmp
arpl
std
mov
in
jnp
xor
adc
fmull
outsb
add
pop
rolb
mov
add
sbb
jmp
sahf
add
jb
test
lret
sub
ficoml
mov
pop
push
cwtl
fisttps
clc
dec
roll
push
test
pop
fwait
adc
mov
shlb
cld
xor
push
movsl
or
cmpsl
push
fsubrs
das
sub
test
add
fwait
mov
sbb
add
imul
movl
fs
and
fs
movsl
add
stos
sbb
adc
xlat
leave
ffreep
xchg
lods
dec
dec
lcall
fstpt
imul
icebp
movsb
cmovle
leave
stos
cmpsl
xchg
xchg
lea
movsb
lock
aam
adc
mov
icebp
imul
mov
int3
dec
std
cld
rolb
scas
shrl
jp
das
push
or
mov
shlb
inc
xor
and
mov
mov
fucompp
cmpl
mov
add
push
pop
mov
mov
pop
lcall
push
aam
or
movb
mov
adc
fcmovbe
inc
adc
popa
push
mov
lcall
add
adc
xor
and
sbb
imul
xchg
adc
xchg
mov
loop
fidivrs
jl
std
sub
test
in
pop
movsl
arpl
and
inc
mov
repnz
ss
or
lods
inc
in
cli
mov
paddusb
out
imul
pusha
iret
mov
push
adc
adc
je
push
push
out
sub
cwtl
mov
adc
test
jmp
stos
enter
adc
add
push
lods
adc
mov
or
pop
jo
in
pop
add
bnd
sub
movb
mov
fs
xor
scas
and
stos
mov
dec
int
push
mov
cltd
test
popa
sarb
bound
pop
sti
loopne
mov
notb
inc
and
cmp
call
jbe
jnp
aam
mov
mul
cmp
fimuls
inc
xchg
cmpsb
mov
push
xchg
lds
or
lret
ja
xor
addr16
jnp
adc
int
repnz
sub
stos
in
cmc
in
adc
adc
xchg
xchg
sbb
ljmp
inc
xor
hlt
rep
movsl
mov
adc
int
adc
xor
iret
out
sahf
rorb
inc
dec
inc
add
pop
imulb
inc
jbe
inc
out
inc
fs
rcll
mov
push
cli
in
or
sub
lea
in
adc
inc
pop
adc
cmp
cmp
dec
gs
jbe
lret
mov
cmp
jno
daa
mov
xchg
lds
cmp
xor
mov
loop
jp
rcll
mov
imul
push
movb
add
pop
sub
inc
sub
lock
or
push
xor
adc
shll
ja
push
in
pop
xlat
dec
arpl
lock
test
imul
jo
dec
cmp
leave
sbb
or
adc
outsl
je
divl
dec
loop
fnstenv
mov
out
xor
dec
das
nop
jns
cltd
icebp
xchg
loop
pop
insb
push
addr16
sbb
cld
gs
mov
jle
stc
pop
outsl
mov
jge
xor
addb
hlt
roll
mov
cmc
cmp
sub
aaa
push
push
pop
fcoml
mov
dec
into
mov
adc
out
mov
push
mov
mov
lret
fcomip
inc
push
loope
mov
sbb
insb
pop
fadd
aas
mov
pop
mov
sbb
push
lea
jge
hlt
into
xchg
lret
jae,pn
xchg
inc
test
mov
pop
xor
aaa
inc
sar
jb
ss
roll
xchg
dec
shl
outsl
dec
pusha
stos
jmp
cmp
pop
cmpsb
mov
push
jne
jmp
outsb
shlb
jl
das
jne
sti
sahf
or
push
rcl
add
add
in
add
pusha
xor
lcall
add
sti
adc
scas
push
jae
out
pop
cmp
ljmp
and
xchg
gs
mov
js
or
push
sar
sub
movsl
bound
data16
js
mov
stos
sbb
out
fcoms
push
aam
cltd
int
xor
test
or
lret
mov
das
add
mov
mov
outsb
sbb
into
push
cmp
xchg
jecxz
movsl
scas
sub
or
cmp
jle
jl
fnstsw
fcmovbe
sub
outsb
popa
inc
pop
pop
mov
pop
push
scas
cs
out
jle
push
fisubl
outsl
xchg
js
jmp
mov
negl
jbe
cmp
rcrl
or
cmp
popa
mov
mov
in
hlt
xor
fnstcw
xchg
sub
fdivl
fs
inc
adc
cmpsl
mov
fucomi
push
push
jo
fcoml
jb
test
pop
mov
pop
pop
fmul
or
repz
push
push
shrb
add
in
cmc
mov
mov
std
sbb
jae
or
jle
or
push
lret
imul
pop
xor
int3
sub
les
leave
mov
mov
xchg
out
into
cmp
bound
mov
pop
in
xchg
and
test
iret
leave
pusha
lods
mov
xchg
push
dec
sub
icebp
insb
iret
push
stos
testl
or
std
sti
mov
ds
mov
sub
sbb
fiaddl
int
xchg
lret
fcoml
mov
movsl
fsubrl
mov
xlat
mov
dec
negl
and
push
lds
and
pop
sub
les
jmp
les
jl
aam
push
mov
pop
mov
sbb
aaa
ret
xchg
adc
sti
leave
inc
lods
hlt
pushf
pop
sub
dec
cmp
sub
or
sti
leave
sbb
and
data16
sub
pop
jno
push
adc
arpl
shll
push
mov
loop
xchg
rol
leave
mov
dec
push
je
pop
in
testl
ret
outsb
nop
pop
in
cmc
mov
mov
repnz
cmc
jb
sub
xlat
pop
ds
sub
sub
outsl
sbb
insl
or
addr16
and
mov
idiv
jnp
int3
mov
mov
pop
std
add
ljmp
das
and
aas
sbb
inc
sub
ss
pop
insb
and
cmp
mov
jb
mov
jb
pushf
dec
xchg
into
es
out
loop
lret
lcall
rclb
sbb
ficomps
in
xor
cmp
mov
dec
sub
scas
pop
movsl
test
sarl
in
rclb
scas
or
pop
xor
ljmp
insb
insl
dec
mov
lret
jle
jl
leave
repnz
adc
mov
add
inc
xor
enter
mov
fcmovne
popa
push
sbbb
stos
xor
mov
imul
xor
clc
pop
and
sbb
int
cmpb
gs
pop
cltd
fld
jbe
pop
sbb
fdivl
xlat
ja
ljmp
inc
push
push
xchg
inc
xchg
mov
rcll
adc
shl
jl
push
adc
xor
sbb
pop
or
inc
mov
adcl
cltd
mov
cs
push
aam
push
add
mov
roll
inc
movsl
insl
push
jb
mov
xor
pop
push
les
sub
aam
insl
cmc
ds
mov
add
inc
dec
repz
cltd
pushf
std
sbb
xchg
and
xchg
xlat
push
test
into
lret
pop
sub
lods
insl
inc
inc
mov
xor
ret
xchg
or
out
xor
insb
ds
push
pop
mov
sub
dec
loope
stos
lcall
mov
loope
dec
pop
fcmovnb
jmp
lods
icebp
mov
xor
adcl
jecxz
add
andl
out
mov
js
xchg
out
fdivp
gs
imul
fcmovnu
stos
out
out
fdivrl
inc
ljmp
pushf
adc
popf
pop
adc
pop
inc
loope
insl
jg
xchg
add
xchg
jne
test
out
pop
cmp
iret
adc
xlat
mov
push
push
xor
xchg
subl
add
loop
popa
cwtl
mov
aas
lahf
fs
mov
div
push
pusha
rclb
pop
mov
xchg
xchg
in
pop
or
jo
fmuls
test
and
inc
xor
push
push
mov
cmp
cmp
sbb
ljmp
jbe
loopne
loope
mov
mov
sar
leave
ljmp
dec
pop
mov
cmp
jns
in
repnz
lret
mov
mov
mov
insb
lods
inc
and
xlat
mov
pop
push
insb
addr16
stos
lea
mov
out
mov
inc
jns
lods
sub
jmp
xchg
hlt
mov
and
cmp
inc
pop
push
xchg
push
mov
xchg
scas
sub
and
iret
ss
xor
mov
mov
fistl
notl
jle
mov
fdivrp
iret
mov
test
mov
popa
push
incb
push
adc
mov
and
sub
div
xor
xchg
jb
cmpb
out
inc
mov
sbb
out
lods
jp
cli
jecxz
ljmp
movaps
or
out
test
push
push
out
xchg
xchg
gs
dec
xor
jbe
ss
pop
jne
xor
push
out
mov
std
mov
daa
dec
mov
popa
mov
inc
mov
inc
test
fs
aam
push
enter
cmp
cmp
mov
mov
bound
jl
xchg
cmp
rcrb
inc
test
add
lock
int3
inc
clc
in
fwait
in
in
negb
sarb
mov
cmpsl
pop
bound
cmp
out
or
sbb
jae
lods
xor
inc
dec
dec
add
arpl
sub
daa
repnz
roll
das
sub
cltd
mov
das
xchg
xchg
add
pop
les
ficoml
fdivrp
mov
sub
push
int3
adc
adc
aad
xchg
stos
adcb
sub
inc
aas
sti
sub
mov
mov
int
push
and
jge
mov
add
inc
or
push
dec
jg
mov
in
scas
xor
enter
inc
movsl
pop
xor
lahf
sub
in
std
xor
outsl
mov
push
clc
cmpl
jmp
sub
adcl
xchg
sbb
fiaddl
lock
popf
push
testb
sarl
js
jo
dec
fnstsw
mov
std
jae
cli
and
jns
mov
xchg
sbbl
jge
mov
insl
add
sahf
adc
inc
or
imul
mov
out
sbb
jno
fildl
adc
mov
push
cmc
addr16
int
or
xlat
rorl
jecxz
fsts
notb
lds
add
jle
mov
loope
mov
cvttps2pi
jns
mov
into
shrl
inc
xlat
cmp
imul
int3
mov
dec
inc
adc
dec
adc
jnp
dec
inc
jnp
push
jg,pt
inc
sub
cs
pop
inc
and
adc
sbbl
xchg
shlb
sar
push
pop
lods
and
xchg
lea
add
es
pop
mov
insb
push
in
or
mov
out
push
push
dec
in
sub
pop
cs
xchg
or
mov
inc
ljmp
mov
inc
loopnew
cmp
outsb
aad
shl
imul
xchg
push
push
pusha
add
mov
xor
xchg
push
lcall
fdivrs
repnz
jmp
jge
cmpsb
mov
or
mov
push
cmpsb
mov
xchg
cwtl
cmpsl
mov
fdivrl
push
adc
adc
dec
mov
dec
push
push
mov
je
pop
pop
push
andl
repz
or
fsubl
xchg
daa
mov
repnz
sub
jae
sarl
adc
mov
mov
aad
add
mov
aas
notl
rcr
xor
mov
push
popa
xlat
lcall
xchg
jp
cmpl
push
xor
shlb
call
add
out
xor
scas
aas
xchg
xorb
int
inc
adc
xlat
pop
imul
repz
jp
scas
jg
ds
sarl
cmc
or
cmpsl
movsl
bound
push
imul
add
dec
imul
mov
jmp
and
jb
add
mov
xchg
dec
dec
mov
stos
lea
mov
sbb
aas
fisubl
or
dec
jecxz
fmull
adc
fsts
in
sbb
out
cmp
push
popf
cmp
jg
js
sub
push
insl
mov
cmc
xor
xor
lret
xor
icebp
xor
adc
sub
jecxz
nop
or
mov
nop
lea
out
pop
test
ja
popa
leave
mov
in
jb
jae
push
adc
xchg
xor
mov
jns
mov
sub
insl
push
jp
cmpl
mov
lahf
das
test
dec
movsl
and
lcall
les
mov
aam
dec
inc
xor
mov
cmp
cmp
xor
ret
xchg
sahf
xchg
subb
push
or
imul
pop
aam
xchg
test
inc
mov
test
and
dec
hlt
mov
iret
cmc
sbb
sbb
jne
mov
and
pop
rclb
push
aam
nop
hlt
frstor
pop
mov
mov
int
cmpsl
leave
and
ja
sbb
addr16
mov
pop
negb
mov
stc
inc
push
aas
test
xchg
jb
mov
and
hlt
fwait
sbb
mov
dec
movsl
and
imul
pop
mov
inc
jge
jns,pt
insl
jmp
test
das
lea
and
arpl
daa
imull
cmp
jecxz
cmp
lret
xlat
aad
lret
inc
outsl
cmp
add
pop
xchg
and
cmovne
add
sahf
mov
shrb
jno
mov
fwait
or
jmp
xchg
jle
mov
aaa
adc
sbb
pop
push
lock
cld
fsubl
data16
cmovl
sbb
sbb
xchg
aam
repz
ret
into
outsl
xor
add
xor
loopne
xchg
and
mov
out
imul
push
sbb
inc
stos
jo
xchg
iret
fadds
mov
mov
insl
mov
jecxz
mov
lods
adc
cwtl
or
and
mov
rorb
sti
popa
sbb
xchg
mov
mov
xchg
jo
outsl
jne
data16
lock
mov
push
lcall
push
sbb
adc
in
rep
or
scas
imul
mov
sub
prefetchnta
dec
fisubrs
push
xchg
jae
cmp
repz
stc
inc
lret
imul
mov
adc
adc
lods
sbb
cmp
jbe
lea
sbb
lahf
push
cmp
mov
das
jl
pop
cmc
ss
pop
mov
fdivrl
or
cltd
and
les
mov
repnz
or
adc
std
ret
ss
lds
iret
out
les
push
movsl
push
and
je
into
xor
and
cmc
cmp
int
loop
add
cmpsl
repnz
test
repz
inc
or
xor
jbe
inc
pop
movsl
pop
ret
inc
dec
mov
adc
or
pop
push
jnp
or
jmp
adc
dec
fiadds
pop
js
stos
outsl
loope
mov
aad
rol
and
jno
mov
imul
jbe
push
jo
and
xchg
int3
data16
sub
push
mov
outsl
cmp
push
test
adc
and
pop
mov
and
ret
dec
xchg
mov
sarl
adc
pop
push
jo
mov
movsb
sbb
mov
xchg
in
orl
jne
xor
or
dec
loope
jns
xchg
sbb
adc
cli
xchg
scas
add
xchg
stc
cmp
mov
jmp
inc
pop
int3
bound
push
sub
imul
dec
call
dec
stos
or
or
ret
pushf
cld
add
lds
cmpsb
xchg
xchg
rorl
aaa
enter
add
cltd
push
add
dec
mov
mov
xchg
inc
xor
cld
fsubs
adc
fldt
mov
pop
xor
mov
cmc
mov
ljmp
scas
hlt
xchg
xor
cwtl
outsb
and
fs
insb
cwtl
cmpsb
add
pushf
fwait
int
loop
imul
mov
cmpsl
push
out
jns
ljmp
mov
fdivrs
xchg
gs
dec
mov
in
arpl
ficoml
cmpsl
pmuludq
push
movsb
jge
and
sub
mov
fidivrs
leave
ret
movsl
int3
data16
mov
xor
std
pushl
popf
fwait
idivl
and
adc
jbe
imul
xchg
mov
and
out
test
xlat
hlt
loopne
add
out
xor
imul
rcl
lret
xor
inc
aaa
dec
test
je
int
push
push
sar
xchg
add
and
jl
pop
repnz
jnp
and
adc
mov
mov
iret
or
stc
rol
sbb
adc
dec
ret
mov
add
jmp
mov
dec
xlat
into
add
pop
fidivl
lcall
jns
add
aam
lods
push
push
adc
mov
lods
in
push
shrb
jne
pop
cs
cmp
mov
in
cwtl
mov
jae
cs
inc
and
xchg
cmc
out
filds
out
mov
mov
add
sahf
mov
or
lds
and
cld
xchg
fisubrs
or
les
ja
lds
test
sbb
aas
fwait
jp
packuswb
jns
das
lret
pop
pop
inc
add
ret
jecxz
sbb
add
xor
inc
or
lods
dec
cmp
push
pushf
ss
lods
bound
lds
cmpsl
add
rcl
or
int3
repnz
out
adc
mov
push
fstpl
mov
xchg
jl
out
lock
sub
andb
xor
xchg
cmc
pop
or
push
mov
std
cltd
jge
aad
repz
xor
mov
sub
fistpl
push
mov
jo
dec
icebp
jp
fwait
dec
xchg
cld
mov
jle
xor
jbe
adc
jb
test
int
sbb
mov
and
jb
mov
stc
inc
fcmovnu
movsb
rolb
das
mov
cmpsb
jl
outsl
add
push
out
jp
xchg
ds
pop
dec
cmpsl
shrl
scas
ds
popa
or
sbb
leave
mov
add
scas
test
mov
cmp
pop
rolb
push
rolb
jno
mov
iret
sbb
scas
outsl
popf
fstp
or
push
inc
push
add
xlat
int3
add
test
in
rcrl
inc
push
and
or
rcl
dec
lret
in
leave
ret
cmp
nop
in
ret
add
loop
push
gs
repnz
popf
mov
frstor
and
add
push
outsb
push
jge
cmp
mov
mov
in
push
add
and
xor
fs
xchg
mov
jl
dec
testl
pushf
push
das
mov
pop
sbb
dec
test
lock
test
jp
test
hlt
inc
jnp
and
add
pop
lahf
lds
and
mov
pop
fldl
test
fmul
jl
out
mov
in
add
xor
ror
jnp
jmp
lahf
mov
int3
add
mov
mov
xchg
adc
sub
adc
loope
idivb
js
cmp
xchg
pop
or
pusha
loopne
xorl
mov
lahf
bnd
mov
sub
movsl
popa
fsubrs
mov
add
mov
into
fmul
jne
push
mov
mov
mov
jbe
inc
push
mov
lock
mov
and
loopne
in
out
out
jmp
lea
jmp
mov
jb
mov
mov
jae
stos
popl
inc
xchg
mov
xchg
fsubrl
sub
xchg
pop
sar
mov
in
imul
insl
jge
les
repnz
sub
adc
and
popa
cmpsb
jb
xor
or
dec
pushf
in
xor
mov
scas
push
mov
push
xchg
push
in
sub
or
and
sbb
addr16
cmp
and
call
frndint
ljmp
mov
push
adc
cmc
and
push
lcall
inc
mov
sbb
lds
mov
fwait
inc
mov
js
sbb
xchg
ror
repnz
and
sub
scas
scas
xchg
or
inc
cmc
push
iret
clc
cltd
jnp
stos
rol
ja
xor
push
dec
and
mov
test
sub
xchg
aam
mov
lds
int3
cld
mov
sub
ficoml
sar
negb
rcl
jle
test
sub
cmpsb
jno
sbb
test
sub
mov
shl
into
or
jb
jne
es
shll
push
push
pushf
out
adc
mov
xor
es
subl
aam
test
mov
loope
push
mov
mov
movl
loopne
negb
fildll
loope
and
lds
sahf
sti
jecxz
fnstenv
xor
xchg
jb
and
mov
add
iret
dec
jae
mov
es
jnp
push
movsl
arpl
cmp
fstps
ja
jle
mov
mov
jle
int
xchg
sub
fcompl
pop
xchg
aad
loope
push
mov
mov
mov
or
adc
cmp
jmp
loopne
fwait
mov
ret
inc
add
cmp
mov
adc
loope
dec
lret
mov
lahf
mov
add
popf
pop
mov
push
sarb
imul
shll
ljmp
leave
jo
js
inc
mov
pop
mov
add
mov
and
sbb
and
incl
pmulhw
add
lcall
push
imul
push
gs
jae
mov
push
lret
xor
ret
test
mov
push
gs
xchg
xchg
xchg
outsl
mov
cmpsb
mov
andl
inc
mov
xor
sbb
adc
jne
adc
pop
xchg
pop
sub
shrb
sub
jbe
mov
mov
jae
or
dec
and
inc
out
sbb
bound
ficoml
adc
mov
and
cltd
xchg
sub
pop
sub
pop
in
sub
cmp
jl
dec
add
push
xor
daa
imul
cmpb
ss
ja
lock
pop
mov
jmp
fsub
cmp
loop
scas
mov
inc
andl
dec
loop
xor
sbb
push
repz
push
icebp
mov
subl
cmpsl
jbe
dec
imul
jno
jae
push
jecxz
rolb
inc
xor
jge
xor
cmc
cli
jnp
insb
mov
in
repnz
mov
push
adc
adc
fsts
xchg
andb
xlat
inc
aas
mov
sbb
fs
lods
mov
jae
mov
add
sbb
mov
pop
cmpl
fadd
sarl
ror
mov
jnp
dec
mov
popa
imul
inc
and
std
dec
scas
inc
push
sbb
ss
jbe
cmpsb
adc
adc
sub
xchg
in
test
lds
std
or
push
add
push
arpl
mov
add
cmp
aaa
inc
adc
sahf
daa
inc
jo
mov
out
or
or
jno
mov
add
fcomp
dec
mov
xchg
dec
push
mov
inc
popa
dec
pushf
push
clc
push
push
and
aaa
insb
inc
push
mov
mov
sbbl
outsl
enter
mov
push
and
andl
pusha
jmp
jp
hlt
cmp
fs
mov
inc
movsb
and
or
xchg
cmp
lea
jo
rcr
icebp
sarb
stc
mov
repz
and
fidivl
pop
add
adc
mov
test
pop
push
inc
scas
test
jo
andl
cmovs
es
push
call
and
jb
mov
scas
sub
aam
or
bswap
loop
aas
mov
xchg
lds
mov
sbb
lods
jae
rol
dec
lds
jo
mov
add
mov
xor
pushf
aad
je
xchg
inc
adc
pop
mov
stos
jb
xchg
dec
leave
add
jmp
in
iret
aam
mov
mov
fwait
call
mov
fs
jp
mov
sub
fwait
and
subb
push
xor
inc
xchg
inc
cmpsl
push
sub
dec
cwtl
les
outsl
add
push
in
add
mov
stos
or
fucom
imul
inc
xchg
mov
ljmp
rorl
in
inc
outsl
adc
nop
int3
adc
add
add
push
cmc
rcrl
icebp
addl
lock
xlat
popa
push
mov
xlat
adc
fldlg2
push
loopne
jmp
ss
mov
mov
leave
xchg
inc
cmp
dec
add
sub
pusha
cmpsl
jbe
mov
jge
sbb
pop
clc
sbb
pop
push
and
mov
mov
mull
xor
pop
bound
xor
fcom
jb
jmp
jns
lods
ljmp
mov
mov
popf
dec
mov
inc
or
pop
fucomi
jg
inc
push
xor
dec
out
jb
sbb
push
sub
mov
adc
mov
test
cmp
and
stos
fs
xchg
jbe,pn
push
or
add
scas
inc
notb
mov
lock
clc
sbb
fneni(8087
lret
mov
adc
jmp
enter
or
add
clc
mov
inc
push
shr
or
and
je
fiadds
lea
stc
mov
or
aad
sub
pop
into
jp
jno
scas
mov
mov
into
mov
jecxz
cltd
mov
cmp
jnp
mov
fwait
outsb
jb
in
mov
arpl
pop
sbb
cmc
mov
add
and
sbb
mov
mov
inc
adcl
ss
nop
xor
jg
mov
mov
mov
loop
pop
sahf
out
sti
cli
nop
cmc
lret
fstp
stos
add
pop
mov
int
gs
adc
cmp
mov
sti
cltd
ljmp
repz
in
pop
xor
outsl
cmp
test
lahf
or
lret
ja
sbb
mov
popf
insl
or
sbb
pop
loopne,pn
data16
iret
scas
xchg
push
clc
pop
aas
int
pushf
adcb
push
dec
xor
sub
lahf
cmp
in
sub
popf
cltd
lods
jb
adc
fidivs
or
pushf
push
inc
push
insb
leave
insl
cmp
imul
loop
je
addb
pop
pshufw
cmpsl
clc
jno
push
ret
mov
jle
test
xor
fsubrs
jg
lods
xor
xor
mov
pop
movups
movsl
adc
jae
aaa
iret
addr16
adc
aaa
jl
es
xchg
push
xor
sub
jmp
outsb
in
popa
fwait
lret
lock
pop
mov
in
inc
imul
add
pushw
lcall
xchg
repz
repnz
lods
iret
sub
xor
push
xor
push
cwtl
ds
mov
leave
and
faddl
outsl
xchg
or
icebp
mov
jecxz
dec
fistps
jns
push
and
in
jb
out
cmc
push
pop
inc
nop
cwtl
push
dec
popa
rorb
subl
frstpm(287
jo
imul
xchg
out
push
out
enter
lock
test
dec
jne
scas
loopne
fs
arpl
stos
imul
shl
push
lahf
arpl
out
lcall
adc
add
mov
xor
insl
dec
adc
int
cmpsl
punpckldq
hlt
mov
xchg
push
cs
adc
cmp
add
lret
decb
mov
mov
nop
push
jg
addb
xchg
jg
xor
in
dec
cli
filds
mov
mov
add
daa
mov
jo
push
fnstcw
add
and
pop
addr16
mov
lret
ja
jge
xchg
pushf
mov
andl
mov
fwait
andl
mov
daa
jl,pt
in
and
adc
loopne
insl
jge
je
shlb
sbb
into
cmpsb
or
sub
lock
mov
xchg
add
pop
fs
dec
ja
repz
lret
dec
hlt
ds
ficomps
inc
xchg
bound
mov
frstor
mov
add
pop
mov
xor
repnz
cmp
out
repnz
cmpsb
pop
lcall
shr
fucom
loop
insl
ret
jnp
mov
stos
push
dec
lcall
daa
sub
cmc
jb
ret
jp
jp
fwait
jmp
or
push
mov
adc
push
jmp
cmp
sbb
and
push
xor
mov
les
stos
cmpsb
push
xchg
int
or
adc
and
xchg
push
push
mov
pop
push
xchg
push
in
and
rorl
fcoms
idiv
cli
cmp
fsubs
ds
mov
push
sbb
out
mov
les
lock
jno
jge
pop
sbb
cmp
outsb
hlt
stos
sub
loop
or
std
pop
and
xchg
xor
test
aad
ret
cmp
bound
scas
out
les
xchg
test
cmp
data16
adc
and
scas
imull
inc
jae
push
stc
lock
dec
pop
sbb
cltd
pop
sub
push
push
sbb
mov
test
xor
xchg
xorb
pop
xchg
pop
lahf
xor
jne
and
das
out
xchg
fisttpll
push
jnp
mov
pop
jmp
xchg
adc
mov
fcmove
mov
xor
or
ljmp
leave
jo
mov
test
aad
push
add
sahf
mov
xchg
leave
scas
aad
rol
xchg
xchg
repnz
cmp
inc
or
jnp
idiv
sbb
pop
or
aas
jb
in
dec
pusha
insb
cwtl
int
out
inc
popa
dec
mov
out
out
sbbl
xrelease
pop
loopne
and
push
xchg
cmp
pop
xchg
mov
mov
test
mov
fwait
adc
and
and
cmp
mov
in
mov
notrack
mov
and
jno
cltd
jbe
push
sub
popf
fistps
jmp
push
mov
stc
mov
mov
inc
pushf
inc
jo
add
add
or
inc
stos
inc
fwait
add
jge
test
ret
cli
jbe
std
arpl
nop
push
jecxz
icebp
out
mov
std
pop
test
int3
and
jg
stc
sub
push
enter
xchg
push
lods
push
push
push
cmp
vcvtsi2sd
aaa
aam
into
icebp
sbb
push
cwtl
iret
inc
lret
mov
jae
push
test
adc
jge
push
xor
mov
dec
psubusw
lock
cs
pusha
add
in
xchg
dec
imul
mov
mov
xor
in
aam
leave
fwait
push
add
mov
imul
push
fisubs
cmp
mov
add
push
and
aas
jl
mov
pop
int
ds
lcall
adc
movsb
xchg
stos
mov
insb
xchg
mov
sbb
hlt
jmp
mov
pop
xchg
sbbb
int
aas
push
sub
out
bound
sbb
jno
lods
int3
mov
push
mov
xor
scas
inc
nop
xchg
cmovge
sbb
cmpsl
cmp
inc
fstpt
loope
sbb
test
adc
lods
xor
fs
les
inc
dec
push
dec
inc
ret
loope
leave
aam
test
pop
je
leave
sbb
sub
pop
mov
jl
jae
popf
push
adc
xchg
jle
in
fdiv
xchg
add
mov
jl
out
rorl
jne
mov
xor
rolb
cmpsb
xchg
andl
jp
bound
mov
enter
pop
pop
mov
cmc
add
push
mov
inc
mov
and
je
xor
nop
int
push
push
shll
mov
rol
mov
sub
mov
mov
movsb
mov
roll
sbb
aad
push
inc
fldl
sub
push
and
outsl
scas
push
cmc
repz
fcoml
sub
xchg
mov
dec
sbb
fdecstp
aaa
mov
pop
sbb
dec
scas
dec
enter
fmuls
pop
nop
imull
adc
cld
aam
push
lcall
sub
jmp
add
ret
mov
lods
push
jl
pop
lock
or
lock
add
jo
neg
out
mov
mov
movsl
fwait
cwtl
subb
push
jge
xchg
pop
jo
add
call
jp
in
jns
daa
lcall
dec
mov
addr16
cltd
or
cmc
or
pop
mov
dec
das
out
testb
cmpsb
rclb
pop
repz
jns
fidivl
jbe
push
jo
movsl
cmpsb
xchg
jb
jle
add
push
push
cmp
jno
leave
dec
mov
jl
out
repnz
leave
pusha
jle
dec
cmp
leave
in
cmpsl
shlb
subl
xchg
sbb
cmp
ror
adc
outsb
aam
fwait
dec
and
sbb
clc
imul
inc
sub
aas
mov
rcl
repz
adc
ja
bound
xchg
shll
clc
cmpb
mov
push
js
mov
or
jg
sbb
xchg
ja
orl
mov
call
in
pop
xchg
jns
cli
popa
cmp
push
push
decb
fldl2t
xor
dec
dec
cmp
dec
push
xor
mov
jno
dec
mov
icebp
in
test
inc
repz
fistps
lret
shrl
xchg
xor
icebp
sbb
or
sti
movl
adc
test
mov
pop
call
popa
sub
or
pop
arpl
orb
inc
aad
fwait
mov
bound
fldl
xchg
ficompl
or
sub
popa
mov
imul
mov
pop
mov
jbe
insl
jle
dec
jge
sub
dec
subb
lret
stc
inc
test
dec
fs
mov
adc
xor
and
aaa
adc
ret
jno
pop
std
cmp
cs
int
into
out
xor
insl
cmpsl
sub
out
sub
rorb
add
inc
inc
cmp
aam
pop
xchg
lcall
mov
shr
out
xchg
int
sub
negl
in
ret
aaa
fs
in
mov
call
or
rcr
mov
or
cmp
cwtl
fwait
add
cmp
data16
push
sub
lds
xor
lods
push
mov
and
shl
jne
fld
sub
add
mov
aam
jne
pop
pop
inc
or
mov
in
xor
adc
mov
stos
adc
in
ja
jnp
addr16
mov
fstps
andb
lods
pop
lcall
or
aaa
and
arpl
lcall
es
push
pop
adc
inc
xor
xchg
cld
sbb
jmp
and
test
lcall
jmp
or
mov
mov
pop
add
cmc
cwtl
jb
aas
int3
out
push
pushf
mov
fcomip
scas
sub
mov
mov
mov
lcall
cmp
sar
and
stc
inc
or
mov
fstl
pop
xor
div
mov
es
jecxz
cmp
test
inc
fildll
inc
pop
ret
mov
int3
mov
dec
nop
xchg
push
pop
repnz
popf
clc
lcall
add
add
push
fnsetpm(287
sub
je
cli
outsb
mov
pop
out
aaa
jg
adc
mov
adc
mov
hlt
leave
jmp
imul
in
xchg
dec
or
lods
lods
cli
fbstp
sub
loop
lock
aam
sti
dec
lods
jb
lock
ja
loopne
fsincos
lahf
mov
std
incb
mov
adc
scas
mov
jmp
clc
mov
adc
xor
xor
mov
jmp
gs
test
xchg
nop
xchg
and
and
es
jns
test
int3
ficompl
repz
mov
mov
stc
cli
push
xchg
sub
mov
out
mov
or
sahf
mov
jecxz
adc
and
repz
pusha
xor
xchg
xor
mov
lock
push
sub
jmp
cs
push
fwait
mov
mov
xchg
call
and
es
inc
ss
mov
ret
out
out
adc
test
popa
dec
aaa
sbb
das
insl
dec
and
mov
sub
jno
or
sub
push
sub
add
mov
xchg
dec
insb
jnp
jne
inc
lods
cli
adc
mov
sti
cltd
imul
shlb
xchg
shlb
jp
push
or
pop
inc
pop
push
sbb
mov
mov
push
mov
inc
fimuls
mov
lods
stos
push
jg
stos
out
in
mov
dec
mov
enter
ds
jne
sbb
stc
mov
in
xor
fwait
pop
insl
stc
test
lahf
jle
dec
mov
andb
dec
xor
fists
inc
pop
mov
sbb
xchg
test
pop
sbb
pop
loopne
xchg
fdivrl
adc
cmp
push
in
lea
cltd
mov
jb
add
adc
mov
cmp
cli
xor
aas
std
lods
lret
jnp
dec
add
sbb
push
cltd
dec
daa
int
test
xchg
stc
inc
cmpsl
shrl
and
aas
ljmp
int3
sbb
mov
lds
inc
sub
adc
out
aas
lods
inc
fwait
ret
movd
jp
push
cmp
mov
add
cmc
mov
movsb
mov
push
sub
pop
xchg
jg
sub
mov
outsb
add
into
xor
jno
pop
and
xchg
cmpsb
inc
ss
aas
shrl
fcom
outsb
je
mov
das
repnz
int3
shll
xchg
fbstp
adc
mov
xorl
hlt
xchg
cmp
fwait
xchg
std
pop
or
pop
inc
xchg
nop
push
cld
pop
cli
aad
push
sub
clc
insb
js
out
in
cltd
nop
int3
pushf
xor
mov
das
stos
jecxz
jae
xchg
mov
test
push
movsb
push
ss
mov
enter
adc
push
mov
dec
repz
sub
repnz
insl
mov
repz
xchg
or
sahf
mov
divb
fmuls
testl
loope
push
leave
lods
pop
scas
sbb
xlat
hlt
pop
lea
bnd
push
in
add
jb
lahf
mov
inc
jb
lods
mov
sahf
js
mov
outsb
pop
xchg
inc
fidivs
xchg
jmp
mov
lcallw
push
xchg
cmpsl
push
xor
aaa
ret
imul
mov
pop
mov
sbb
mov
ljmp
jo
jmp
fidivl
cmp
data16
xchg
xor
in
pop
sarl
or
or
mov
inc
divb
je
in
test
or
mov
push
popf
mov
inc
in
add
mov
lret
mov
sti
jno,pt
and
xchg
es
ret
leave
pop
sbb
ret
mov
sahf
xlat
mov
dec
sub
fistpl
and
cmp
xchg
sub
rclb
bound
dec
fucomp
and
test
adc
mov
pop
inc
ljmp
add
sub
fwait
or
lods
or
cmp
repnz
lahf
inc
and
cmp
adc
addb
mov
or
imul
rcrb
or
out
pop
orb
dec
dec
js
or
int3
push
lea
mov
sbb
xchg
and
jg
add
adc
add
daa
jle
mov
push
cld
xchg
dec
cmp
fadd
pop
xchg
push
jp
mov
cmpsb
pushf
call
lcall
arpl
mov
jnp
std
adc
cmp
fwait
jae
imul
mov
mov
scas
inc
sahf
movb
jge,pt
pop
cmpsl
or
or
xchg
lods
mov
pop
pop
icebp
fldenv
packssdw
lods
ret
test
lret
sbb
lods
adc
aam
je
pusha
or
mov
cmpsb
arpl
loop
sub
test
mov
adc
cmp
and
inc
insb
add
mov
jno
add
and
pushf
jno
mov
cmp
out
dec
loope
dec
push
xchg
pop
adc
into
in
fxch
test
lea
pop
subb
sbb
dec
or
in
aas
push
cmp
cmpb
and
cmp
dec
movl
in
fs
ds
test
movsl
xchg
jne
aad
test
sahf
shll
mov
mov
sbb
repz
adc
repnz
stos
xor
mov
mov
sti
adc
inc
insl
ret
movsb
cmpsl
or
mov
lret
decl
cmp
lret
pusha
sti
mov
or
insb
and
jp
mov
dec
lds
testb
test
jg
lret
shrb
add
sbb
xchg
and
mov
inc
mov
sub
shl
in
pushf
cmp
mov
test
cltd
aam
pop
mov
outsb
pop
sti
ret
stos
stc
mov
jns
and
push
js
aam
repz
arpl
divl
xchg
rclb
es
xor
jno
insl
iret
loopne
subl
inc
push
push
movsb
mov
lods
out
cmpsl
leave
popf
adc
movnti
and
jl
cmp
inc
or
or
fimull
imul
dec
std
adc
subl
idiv
mov
mov
in
xor
mov
adc
sub
addb
dec
dec
enter
cli
dec
movl
cmp
mov
test
mov
inc
bound
mov
push
mov
sub
std
repnz
daa
or
mov
cmpsl
into
inc
add
insb
dec
adc
xchg
cmp
dec
lret
xchg
jno
leave
rclb
in
ficoms
lods
dec
xchg
mov
leave
cmpsb
insb
add
enter
stc
mov
mov
sahf
sub
or
adc
pop
int
jmp
cmpl
sub
andb
xchg
imul
and
lock
outsb
mov
ficoms
lods
sbb
sbb
mov
jg
addr16
mov
cmp
mov
sub
adc
stos
push
inc
push
in
lcall
sub
add
mov
xchg
int3
dec
lahf
imul
sub
xchg
push
mov
icebp
push
test
sbb
xchg
or
jp
out
jno
cmp
sub
and
cld
push
aas
ljmp
js
pushw
adc
sub
jge
xchg
adc
out
sub
mov
xor
jns
and
mov
filds
and
push
push
inc
lret
cmp
mov
into
aam
xor
scas
mov
arpl
xlat
add
xchg
adc
or
fisttpl
insl
inc
add
daa
cltd
jge
sti
sti
hlt
pop
adc
cmp
ds
fisttpll
inc
push
test
adc
xor
sbb
push
stc
addl
xor
mov
mov
fsts
imul
aam
add
adc
jle
pop
mov
aad
jle
sub
mull
cli
push
out
mov
sbb
daa
pop
xlat
dec
add
cmp
into
jns
xchg
sbb
dec
lret
adc
arpl
xchg
shll
sahf
cmc
xor
mov
mov
jae
xchg
arpl
cltd
push
lea
cmpsl
pop
push
lret
cmpsl
inc
sub
ret
cwtl
in
test
inc
mov
or
lods
daa
dec
mov
sub
jecxz
and
or
and
cwtl
mul
xchg
sahf
fidivrs
dec
ret
xor
sub
sub
aaa
ret
xchg
sub
push
lret
fisubs
and
adc
jns
dec
push
sbb
in
sub
imul
mov
inc
push
into
add
adcl
shl
cwtl
loope
aam
jg
in
xchg
test
movb
mov
mov
rcl
mov
sbb
add
subb
sub
dec
in
push
xor
xchg
outsl
adc
push
push
std
adc
in
xchg
mov
gs
sti
pop
push
imul
jbe
push
xor
repz
aaa
cmp
inc
push
scas
out
mov
lock
push
xchg
lods
aad
leave
lahf
cmp
mov
aam
push
scas
icebp
std
adcb
shll
pop
mov
push
das
add
ret
lcall
pushf
les
adc
xchg
pop
insb
sub
cmc
sub
jnp
imul
stos
push
push
loop
lds
stos
jae
movsl
jns
mov
mov
push
jb
insl
jae
inc
pop
popa
or
in
in
jno
lret
aam
hlt
adc
mov
xchg
mov
cmp
shrb
add
sbb
mov
lret
cmp
adc
or
mov
sub
cmp
negl
imul
ss
dec
xor
jl
adc
jnp
ds
cwtl
decb
sti
outsb
test
ljmp
push
mov
icebp
pop
push
hlt
pop
mov
sbb
and
out
cs
or
fnstcw
cmpb
aaa
mov
ljmp
and
test
aaa
dec
jne
testb
ret
add
cmp
imul
lea
xor
sbb
add
inc
jo
into
jns
cli
jb
test
jecxz
push
xlat
dec
fs
and
ret
mov
mov
shll
rclb
lds
mov
and
inc
dec
xchg
mov
mov
aad
icebp
sub
jb
xchg
mov
and
adc
cli
mov
in
xor
addb
das
ret
mov
pop
and
push
mov
out
and
ljmp
xchg
jo
cmpsl
add
mov
jge
lods
jl
mov
mov
xlat
int3
nopl
inc
xchg
mov
test
fnstcw
inc
aam
jmp
mov
test
push
mov
sbb
js
xor
fistl
xor
and
mov
lahf
add
lods
sti
cmp
ret
push
sti
sub
das
xchg
rclb
xor
jno
ja
jns
cmp
cmp
dec
sbb
call
lea
sbb
sub
xchg
push
into
xchg
pop
mov
inc
jge
mov
lea
rcr
mov
push
loop
mov
sub
xchg
pop
jge
sbb
ja
pop
cmp
fs
dec
mov
test
fldcw
lock
xor
popa
lahf
aas
xor
mov
sub
dec
xchg
xchg
out
stc
jnp
jae
mov
sub
xchg
jae
mov
mov
sub
lcall
mov
add
push
push
xchg
pop
loop
dec
add
scas
in
lea
sbb
popa
idiv
negl
out
cmpsl
fcompl
ljmp
pusha
fcomps
pop
std
shlb
enter
les
jge
and
push
mov
shll
xchg
mov
sub
data16
mov
add
xchg
aaa
test
clc
sub
shrb
or
push
pop
jno
repnz
int3
ss
rcrb
fidivrl
sbb
xlat
mov
sti
jmp
addl
or
popa
inc
and
pop
lret
sbb
dec
or
roll
rorl
int3
xchg
popa
push
inc
xchg
or
mov
lcall
push
xor
mov
movsb
or
jb
pushf
inc
cmp
aad
rcr
out
xchg
es
adc
push
adc
sub
stos
push
cmp
add
pop
and
xchg
pop
mov
push
fcmovb
dec
test
addr16
jne
ret
bound
cmpsb
cmc
adcb
jmp
xchg
and
loope
cwtl
pop
push
enter
xor
ret
push
jmp
imul
inc
out
or
mov
jecxz
jg
addb
in
clc
push
lds
xchg
icebp
loope
xor
mul
mov
mov
into
push
cmp
xor
adc
sti
xchg
sub
cs
jbe
xchg
push
call
mov
movsb
mov
mov
inc
mov
arpl
arpl
add
inc
sbb
push
adc
mov
xchg
cmp
adc
pop
gs
sub
loopne
ret
mov
ficoms
sub
stc
cmpsl
stos
dec
fiadds
cs
cmp
in
and
add
lret
bound
into
xchg
outsl
fwait
dec
jle
sub
pop
rolb
mov
loopne
xchg
jne
jp
and
orb
js
pop
jns
adc
add
mov
push
sub
ljmp
mov
push
movd
or
push
add
adc
push
pop
lret
addr16
push
dec
adc
cwtl
sbb
in
adcl
sub
push
bnd
iret
out
adc
jg
aad
insb
xchg
mov
movsl
in
push
dec
dec
aas
lock
lahf
inc
adc
aas
add
mov
sbb
dec
sub
shlb
shl
pop
or
jo
in
xor
mull
mov
mov
out
dec
daa
xchg
push
mov
xor
push
xchg
daa
mov
out
pop
sub
mov
push
push
inc
dec
push
ffree
pop
push
movsb
movsb
not
scas
lds
pop
mov
jo
pop
cmpsb
bound
fs
dec
insl
pop
pop
das
mov
mov
out
es
dec
lret
sub
in
andb
pop
cltd
mov
loop
cmpsb
cmc
inc
push
mov
jo
cmp
rclb
mov
filds
cmp
push
leave
push
and
add
cld
fildl
cmp
cmp
adc
mov
jno
mov
inc
dec
xchg
movsb
loope
sub
inc
mov
cmp
mov
xlat
movsl
jno
cmp
mov
or
sarl
cmp
xor
arpl
push
repz
cmp
addr16
into
mov
mov
pop
call
xor
outsl
into
lret
arpl
mov
pop
cli
pop
sbb
push
sub
cmp
sbb
mov
jl
popa
andl
lds
fmull
dec
rorl
dec
mov
adc
jecxz
das
jbe
lret
in
movb
repz
add
sub
aad
jmp
xchg
aad
mov
xor
pop
ljmp
aaa
xlat
ja
add
les
inc
or
js,pn
jns
dec
lods
icebp
stc
add
lods
jecxz
insl
jmp
adc
jg
mov
fcoms
adc
inc
dec
cltd
jno
mov
or
or
mov
repz
cs
mov
repnz
xchg
mov
leave
jnp
aad
sub
fucom
out
loopne
ds
mov
out
xor
stos
sub
or
and
pop
xlat
sbb
movsb
pop
jp
ds
push
xlat
int3
lock
daa
and
out
mov
and
inc
jbe
push
pusha
in
pushl
lds
shl
fidivrl
incb
and
imul
fucomp
lcall
sbb
cmp
fstps
adc
mov
sarb
mov
insl
cmp
dec
sarb
adc
cld
cltd
jb
pop
mov
jp
data16
push
pop
cmp
test
cmpsl
dec
daa
shrl
pop
jmp
idivb
sub
iret
aaa
imul
test
lret
loope
leave
imul
sub
fmuls
inc
sub
adc
xchg
ror
outsb
adc
mov
lds
fisttps
in
xlat
lea
xchg
out
dec
and
lock
lods
add
mov
sbb
scas
adc
aas
push
lock
xor
lods
mov
cmp
icebp
fdivl
mov
push
mull
cwtl
inc
push
cli
dec
jle
jb
dec
adc
les
ds
sbb
xchg
aaa
outsl
rolb
addl
test
adc
int
fimull
jle
mov
mov
imul
mov
cld
fnstcw
sbb
stos
popa
jl
std
xchg
into
inc
add
dec
and
inc
divb
addl
inc
rcll
repnz
push
out
mov
mov
bnd
sub
jecxz
adc
push
pop
inc
sub
addr16
ds
mov
sub
mov
ret
adc
mov
cltd
test
testl
gs
data16
cmc
add
xchg
rorb
ss
xor
sbb
sbb
and
cld
adc
mov
fsubrs
add
jns
sbb
fs
cmp
sbb
mov
inc
add
bsr
outsb
sti
adc
out
jb
sti
xlat
aam
adc
nop
out
movsb
mov
arpl
jb
pop
sbb
push
xchg
push
mov
adc
or
mov
adc
push
mov
loop
xorb
push
dec
jo
mov
inc
inc
ret
push
and
lret
push
mov
ss
xchg
sahf
and
in
in
push
and
in
orb
add
in
adc
xchg
and
mov
xchg
gs
xchg
pop
xorb
loopne
iret
sbb
jle
lods
fisubrs
test
xchg
cmp
mov
mov
jmp
sub
push
pop
pop
in
xchg
push
sbb
dec
cmp
add
mov
repz
mov
cmp
in
test
mov
xchg
adc
cmp
js
movsl
sub
sub
xchg
into
hlt
or
popf
das
jmp
in
xchg
loopne
in
mov
xchg
cmpsl
ret
lods
outsb
xor
push
pop
cwtl
scas
mov
in
push
int3
mov
movsl
movsl
jo
jb
cmp
lcall
fnsave
ficompl
into
adc
pop
lods
pop
mov
jb
sub
jle
dec
mov
adc
enter
fdivrl
aaa
int3
push
ds
push
lcall
pop
ds
jno
adc
pop
inc
inc
es
outsl
mov
std
ja
lea
subl
adc
pop
inc
rorl
stos
stos
aam
dec
test
daa
nop
mov
pop
test
pop
stc
sub
ja
dec
adc
mov
rorb
dec
test
dec
aas
push
cli
int
cmpsb
add
and
jmp
and
sarb
lgs
pop
mov
and
mov
push
adc
cmp
lds
jge
clc
jle
mov
cs
and
out
into
out
inc
into
mov
sub
mov
mov
lods
and
lahf
pop
mov
mov
cli
sbb
xchg
push
icebp
das
addr16
inc
mov
test
outsb
push
pop
lock
sub
mov
arpl
xor
in
and
pop
sub
add
mov
push
lahf
stos
mov
jbe
or
cmp
rclb
jb
aas
es
and
int3
shlb
enter
mov
jmp
enter
int
bnd
shll
ss
pop
popf
cs
adc
xor
into
scas
push
scas
xor
cmp
je
pop
jns
pushl
std
sti
hlt
jne
cs
imul
andb
xor
push
cmp
inc
imul
ss
and
and
xchg
mov
in
popl
je
and
or
xor
in
rcl
insb
or
ja
and
fwait
aaa
cmp
push
rclb
in
adc
bound
inc
and
das
out
leave
aad
aam
xchg
das
sub
push
imull
movsl
stos
int
push
sbb
push
pop
push
mov
paddq
mov
pop
add
aaa
cmp
outsb
mov
add
sub
dec
adc
lds
xor
sub
nop
and
pop
in
ja
and
jp
jg
mov
in
jle
in
pop
mov
xchg
insb
pop
add
and
lret
jl
ja
das
inc
shl
int
sub
cmp
sarl
js
sbb
or
inc
jns
js
sbb
mov
popf
repnz
aaa
pop
lret
sarb
cwtl
fcompl
jmp
sbb
xchg
sti
xor
stos
lret
jbe
pusha
push
ja
and
or
or
jo
jge
scas
or
xor
addb
xlat
arpl
shl
and
nop
jecxz
std
fsts
dec
outsb
push
pop
pushf
iret
cmp
inc
pop
cmp
push
mov
jns
cmp
jo
ds
push
push
mov
adc
xchg
push
mov
add
mov
cmpsl
or
dec
mov
ss
push
push
out
int
fisttps
repz
jecxz
dec
jge
push
fs
movsb
frstor
xor
dec
cmp
shrl
lds
insb
fimuls
dec
jge
and
push
pop
daa
std
ss
test
push
mov
subl
or
mov
mov
cmp
sub
add
daa
mov
stc
mov
jne
or
loopne
adc
add
xchg
jmp
leave
test
push
adc
insb
mov
pop
dec
bound
mov
jne
addr16
rorb
setp
mov
cld
jne
pop
or
mov
mov
loope
pushf
dec
mov
mov
orb
and
cmp
out
xor
adc
jmp
sub
movsl
inc
sub
std
shr
out
jno
sbb
gs
lods
out
addr16
lods
cltd
add
outsl
cld
out
test
shrb
adc
mov
lret
out
sahf
imul
dec
in
and
dec
sub
ror
sbb
xchg
and
ret
mov
frstor
sub
mov
sub
xor
les
jbe
mov
cmp
in
insl
inc
inc
push
mov
hlt
test
cld
or
inc
outsl
xchg
jl
or
stc
inc
push
sub
rorl
pop
mov
les
in
pusha
adc
jno
sahf
pop
and
gs
sahf
jecxz
add
addr16
xlat
je
jnp
push
xchg
sub
add
stos
cmc
xor
ja
or
add
cli
xchg
sbb
hlt
cmp
dec
out
call
push
and
fcoms
jbe
test
js
fcomp
mov
imul
lret
jl
fstpt
test
call
mov
icebp
je
cmpsl
leave
jns
bound
or
adc
push
and
and
jl
and
stos
es
push
test
xchg
xchg
jb
adc
add
ret
cwtl
mov
pop
fstl
push
sbb
cmp
insb
dec
imul
dec
adc
mov
ficomps
add
jae
icebp
inc
adc
pop
adc
xor
jno
mov
fwait
and
dec
mov
test
cltd
push
sbb
sbb
jecxz
popf
mov
subb
push
ror
aam
out
adc
mov
out
unpcklps
lods
dec
jbe
orl
mov
test
inc
stos
dec
out
add
pusha
add
fwait
pop
xchg
fcomp
rcrl
add
cs
aas
call
inc
xor
aaa
mov
mov
aas
cmp
inc
lcall
jo
mov
push
pop
out
cmc
js
lea
pushf
or
test
add
cmpsl
rcrl
loop
test
pop
sub
cltd
daa
push
xchg
push
mov
cmp
mov
xchg
std
dec
addr16
incb
jmp
jbe
pop
das
stc
dec
inc
or
rcl
movsb
pop
fisttps
cvttps2pi
cmp
sti
dec
pushf
sti
sbb
cld
mov
ss
pop
ret
aaa
inc
pop
xor
push
inc
sbb
sbb
cwtl
and
sbb
pusha
xor
sub
call
sbb
or
pop
push
mov
add
adc
lods
mov
sbb
add
in
aad
inc
ja
bound
cmc
pop
cwtl
xor
inc
xchg
in
dec
movsb
jbe
mov
pushf
out
sbb
push
mov
int3
mov
xchg
imul
mov
push
fisttpl
fisttpll
cs
scas
mov
push
pushf
push
fists
ljmp
rol
inc
or
mov
push
mov
loope
adc
movsb
adc
jno
xor
adc
das
arpl
inc
jns
pop
pop
into
or
flds
xchg
mov
mov
test
mov
jnp
mov
pop
stc
out
jle
pop
jmp
pop
add
mov
fiadds
dec
mov
xchg
sbb
iret
add
lret
insb
adcl
ret
fldcw
call
cmp
das
flds
mov
sub
rol
in
mov
call
push
pushf
cli
sub
cmp
out
jne
lds
jl
mov
xchg
sbb
shlb
push
adc
mov
cmc
jge
mov
sub
test
mov
inc
int3
dec
lcall
insb
push
pushf
mov
or
cld
xlat
test
movsl
mov
mov
mov
jle
push
clts
repz
jne
stc
xchg
jb
aad
and
mov
out
mov
stc
out
out
stos
int
xor
lea
rol
cwtl
fs
cmpsb
scas
lcall
ljmp
pushf
aad
mov
in
dec
cmp
inc
pop
mov
xchg
dec
xor
je
push
lds
cmp
cld
cltd
xchg
ja
xorl
cmp
test
xor
add
xchg
jae
add
mov
adc
jg
loopne
jno
ds
pop
ljmp
shrl
lods
inc
mov
aaa
and
stos
movsl
inc
push
adc
pop
ja
pop
movl
xchg
mov
mov
xchg
imul
imul
add
mov
fst
ror
adc
mov
rorl
sbb
stos
jne
je
jne
lock
loopne
iret
insl
test
xchg
je
adc
cmpsl
fiadds
xor
xor
xor
ffreep
or
cmp
add
out
std
adc
sub
sub
mov
stos
pop
pop
cli
dec
jg
sbb
cltd
sub
insb
lods
push
inc
int3
imul
sbb
jo
out
add
xor
cld
push
mov
out
mov
jae
inc
fdivrs
or
and
mov
arpl
add
jno
pusha
xor
xchg
cmp
pusha
test
cli
mov
push
es
cli
leave
or
xor
mov
jle
fcmovnbe
inc
mov
cmovp
adc
loop
jmp
mov
iret
and
xor
dec
out
icebp
in
ljmp
push
lods
add
div
inc
push
lods
adcl
popf
push
pushf
js
and
or
fstpt
jmp
ror
movsb
outsb
repz
mov
in
int3
int3
cwtl
jae
fsubr
test
je
inc
inc
jbe
out
mov
xchg
jbe
and
dec
add
push
aad
inc
ficoml
addl
jle
adc
mov
les
popa
add
mov
sub
jne
and
and
add
mov
adc
add
lcall
repnz
xor
mov
xor
mov
push
cmp
mov
test
gs
push
lods
jae
bound
scas
ret
inc
pushf
mov
or
movsl
sub
cmp
xlat
test
sbb
mov
xchg
repnz
filds
lds
sbb
mov
pop
xchg
sbb
pop
cltd
aaa
xor
inc
and
js
mov
out
fistpll
and
aas
xor
aad
sbbb
xchg
js
mov
or
repnz
addb
out
add
pusha
jnp
xor
pop
cld
and
adc
cmpsl
je
mov
lret
out
popa
or
lret
fwait
lret
sbb
mov
aam
xlat
push
or
and
or
and
dec
aad
pusha
rcr
xchg
mov
push
ret
popa
popf
xor
sahf
movl
aas
or
add
jp
lods
jle
adc
mov
jns
or
test
imul
pop
rclb
jp
icebp
stos
mov
decl
lock
adc
scas
in
inc
sbb
push
lods
xor
lock
or
and
repnz
jecxz
test
fidivrs
insb
int
test
jmp
popa
arpl
dec
push
mov
sbb
push
xchg
pusha
lcall
cmp
in
out
leave
fmull
out
ds
cmp
repnz
imul
jbe
xchg
or
inc
and
add
loopne
mov
icebp
aas
adc
ror
nop
adc
jl
mov
jecxz
inc
adc
data16
sub
repnz
dec
daa
pushf
cmp
sti
xlat
push
add
sub
push
movsl
outsb
pushf
inc
out
jo
or
push
or
adcb
je
dec
lock
daa
shrb
cmp
out
pop
mov
lods
inc
cmpsb
outsb
mov
ljmp
loop
inc
addl
lret
mov
in
je
sti
push
mov
and
or
jno
xchg
or
call
dec
ret
mov
aas
rolb
jns
fwait
pop
sbbb
jle
psubd
pop
xor
add
dec
add
mov
jl,pt
lret
addr16
adc
and
pmaxub
inc
inc
loop
aam
popa
push
nop
mov
mov
jb
mov
loopne
divl
outsl
imul
push
ret
cltd
jnp
sub
pushl
lea
sub
adc
movsl
mov
and
mov
rolb
xchg
inc
nop
sub
pop
xchg
sub
in
out
pop
hlt
mov
mov
aas
fmull
xor
rcrl
cmp
cmpl
stc
lret
dec
cmp
loope
adc
fcmove
jl
pop
rclb
divb
sbb
cmp
sbb
sub
mov
or
shll
adc
or
or
sub
sub
or
in
fucomip
mov
xor
fbstp
jmp
jg
sarl
fadds
push
mov
decl
rclb
or
jmp
pop
inc
repnz
dec
sbb
mov
repnz
xor
push
in
dec
and
int3
fsubl
cmpsl
mov
inc
pop
or
loop
scas
xchg
les
test
pop
adc
sbb
outsb
into
pop
iret
xor
mov
popf
daa
cmpsb
and
in
cld
es
aaa
int3
rcr
sub
xchg
mov
movsb
movsb
and
cli
nop
xchg
leave
lods
ret
xchg
aad
mov
and
pop
or
inc
xchg
sbb
movsl
leave
mov
adc
int
jp
aas
jnp
fstpt
adc
and
call
aad
dec
add
insl
and
int3
xchg
add
test
or
push
dec
add
ljmp
sbb
inc
and
mov
mov
gs
call
lcall
notl
stos
jmp
inc
scas
mov
stos
mov
sbb
ja
sbb
cmp
mov
repz
jg
shll
sbb
sub
imul
add
xlat
loope
inc
pop
std
mov
cli
add
xlat
sahf
testb
add
dec
lahf
dec
inc
jle
int3
xor
cmp
xor
stc
lcall
xchg
fs
outsl
push
mov
notb
fxam
add
ret
in
mov
test
and
sbb
cmpsl
ret
push
xor
test
jmp
push
sub
arpl
adc
inc
push
pop
mov
mov
pop
xor
cmpsb
mov
test
adc
push
xor
adc
les
test
outsb
push
ljmp
icebp
mov
sbb
idivl
data16
jb
ret
mov
mov
pushf
test
push
pop
data16
outsl
push
outsb
xor
shrl
adc
cltd
pusha
mov
push
imul
popf
mov
imul
mov
add
imul
cmp
test
jle
loopne
lahf
jl
jl
inc
mov
adc
dec
scas
roll
mov
test
xor
or
push
cwtl
jbe
pop
xchg
jae
sub
stos
cmc
cmp
or
iret
xchg
adc
push
scas
pop
xchg
frstor
push
xor
and
push
or
rclb
dec
mov
sub
sarb
mov
xor
mov
xchg
pop
mov
add
cli
pop
add
xchg
cs
rcll
movsl
paddq
push
and
in
rcrb
cmp
add
pop
cli
fidivrl
jne
push
fnstenv
iret
jg
fmuls
imul
push
pop
repnz
mov
xor
mov
outsb
pop
aaa
in
loopne
mov
dec
jmp
cmp
dec
cmc
fnstenv
outsl
push
sub
inc
push
imul
fidivrs
ret
xor
xchg
stos
jnp
or
int3
pusha
mov
in
addr16
loop
and
es
push
add
daa
jl
out
iret
fwait
pop
and
inc
fwait
cmpsb
push
lret
jge
lret
pop
out
sub
mov
pop
jge
out
sbb
mov
or
mov
sub
cmpsl
sub
test
dec
cli
into
xlat
cmp
mov
inc
xchg
stos
outsb
sub
pop
mov
jae
mov
cli
out
shlb
aas
lcall
pushf
pop
add
mov
add
test
daa
ds
xor
rorb
loop
fcmovnbe
cmpb
jne
sbb
sub
rolb
pop
dec
pop
sub
mull
sub
xor
test
ret
shrb
pop
pop
or
sbb
fisubrl
push
lret
push
ficoml
arpl
mov
dec
enter
sahf
mov
int
xor
mov
mov
or
xor
mov
xor
jmp
mov
dec
or
sub
out
repz
imul
outsl
fnstenv
jnp
sub
mov
push
ss
jge
test
jg
iret
inc
add
lahf
adc
cmc
fwait
sub
and
xor
lahf
cmp
insb
push
add
clc
pop
daa
adc
xchg
ds
jp
mov
outsl
jle
mov
shll
mov
mov
adc
aam
jge
cltd
pop
call
mov
jmp
mul
mov
push
adc
sbb
adc
test
sub
pop
insb
scas
sbb
and
cmp
sbb
xchg
out
imul
sub
adcb
std
cmp
inc
stc
jle
nop
pop
shll
mov
xlat
lret
aas
cmpsl
mov
and
faddl
push
ds
jg
mov
push
and
pop
cmp
inc
ds
daa
test
dec
sub
je
sbb
dec
sbb
fildll
idivb
jns
rorl
scas
iret
and
pop
pop
adc
sub
add
fsubrp
vsqrtps
xchg
dec
sarl
aad
jmp
push
pop
or
daa
jbe
andl
jns
movsl
push
ja
ret
xor
scas
mov
shlb
jle
daa
stc
pop
das
xor
cmp
dec
push
jge
xchg
call
inc
repnz
push
push
jne
add
or
adc
stos
rcll
jle
daa
jecxz
and
push
mov
push
push
cmp
push
pop
sub
and
pop
adc
sbb
add
cwtl
movsl
mov
xchg
mov
ror
mov
test
out
mov
push
jnp
fbld
mov
adc
mov
sbb
outsl
jo
cld
idiv
jae
and
inc
mov
push
xor
inc
test
sub
pushf
outsl
dec
in
out
jl
push
in
mov
idivb
push
mov
stos
push
mov
pop
outsl
jns
or
and
mov
or
xchg
jb
fsubrl
stos
test
dec
jno
lock
jns
lea
gs
cmp
xchg
adc
push
arpl
sub
fistps
shrb
aas
cmp
sub
adc
movsb
fdivs
and
adc
jmp
dec
loop
filds
inc
push
push
xchg
xchg
iret
leave
add
pop
jno
pop
jle
cmp
movsb
enter
aam
and
jbe
dec
cli
xchg
jmp
jbe
mov
inc
mov
test
or
jne
dec
mov
pop
jbe
inc
idiv
mov
sub
cmp
pop
dec
mov
sub
fs
movsb
or
add
xlat
iret
popa
in
dec
mov
fdivr
popf
xchg
ja
fs
mov
daa
sub
mov
js
fsubr
mov
ja
and
sahf
mov
mov
addb
loope
lds
rdpmc
jecxz
scas
bound
cld
pop
aad
dec
jbe
inc
push
fldt
inc
in
call
mov
or
mov
inc
cli
or
rep
fcom
ja
sub
cmc
push
push
test
bswap
leave
fs
pop
cli
inc
pushf
jo
inc
add
jno
repnz
jle
daa
or
dec
sub
leave
test
out
sub
in
mov
jb
sub
cs
sbb
inc
jno
mov
imul
fimuls
cmpsl
pop
out
mov
into
sbb
popf
mov
repnz
test
mov
outsl
mov
stos
jno
xlat
lcall
sbb
sub
loopne
jg
sbb
repnz
sarl
mov
inc
jl
scas
notl
cmp
rorb
xor
aam
ja
xchg
das
xor
add
leave
xchg
sub
jo
loop
adc
dec
addr16
popf
mov
pop
leave
inc
jo
pop
shrb
popa
sbb
es
dec
ret
and
cmp
lret
mov
adc
inc
fisubrl
ja
in
push
or
cmp
pop
inc
pop
or
rclb
lock
and
cmp
out
in
sarb
adc
jmp
lods
or
ficoms
iret
dec
pusha
mov
sub
inc
push
leave
mov
jl
xor
andb
mov
movsl
push
sbb
fistpll
xchg
fcmovnbe
icebp
push
add
xchg
xchg
lea
pop
jno
add
inc
cld
hlt
das
sub
bound
int3
cmp
idiv
pop
mov
xchg
ret
inc
hlt
mov
js
xor
mov
cmp
scas
xchg
ds
mov
jp
cld
push
or
pop
in
jp
cmp
cmpsl
sub
je
xchg
sub
dec
cmp
in
lret
popa
mov
jmp
popa
or
cwtl
jp
push
adc
pop
mov
fdivp
lcall
mov
cmc
cmpsl
adc
pop
pusha
ret
or
lods
mov
mov
xlat
les
cmc
jbe
arpl
rclb
add
subl
and
cmp
test
daa
arpl
jb
into
popa
out
jne
xor
or
sub
xor
ds
inc
inc
and
fsubrl
stos
jae
push
sbb
mov
loope
push
push
popl
push
imul
xchg
leave
lock
pop
pop
subl
mov
pusha
mov
lods
lods
push
xchg
mov
fs
fucomp
sub
popl
nop
xor
pop
mov
cmp
shll
push
inc
inc
cmpl
fadd
adc
adc
lods
cwtl
mov
fldenv
call
mov
inc
and
mov
addr16
adc
xorl
jne
addr16
fprem1
call
outsl
push
mov
jbe
and
push
inc
cmp
or
adc
nop
xchg
into
lret
mov
dec
cli
dec
lods
subl
xlat
iret
xor
adc
dec
addr16
mov
fstl
jl
mov
and
ljmp
add
sbb
adc
popa
jmp
stc
or
push
sti
nop
push
mov
mov
dec
push
mov
aas
decb
sub
push
mov
xchg
mov
mov
cmp
fcoml
pop
notl
xchg
or
dec
push
sbb
sbb
loope
mov
or
negl
test
mov
scas
push
inc
cmpsl
nop
mov
jns
leave
jl
lret
mov
inc
mov
lods
cmp
cmp
jecxz
inc
jmp
fbstp
or
sbb
jp
xor
fldt
jle
fcomps
adc
andl
loope
enter
mov
cmp
jg
mov
cs
mov
jecxz
add
sbb
es
jae
mov
popa
xor
add
xchg
xchg
adcl
xor
clc
mov
sbb
mov
stos
shl
subl
push
inc
fistl
mov
pusha
lds
add
inc
int
dec
pop
sub
in
lret
scas
outsl
xchg
pop
mov
es
ljmp
testb
cmpsl
enter
bound
aad
dec
mov
pop
imul
les
push
pop
in
lret
shrb
cmp
je
cwtl
mov
push
add
or
mov
aas
clc
fimull
inc
jg
dec
xor
aaa
lds
in
rcl
fwait
out
ja
cmp
sahf
repz
dec
push
stos
dec
in
arpl
mov
xlat
push
imul
jnp
mov
ret
jmp
imul
adc
pop
into
mov
stos
dec
lods
jg
imul
adc
or
out
mov
jno
out
into
nop
aad
inc
pop
mov
jmp
inc
je
nop
mov
int
push
pop
mov
bound
sub
fldl
test
jbe
sbb
ljmp
in
insb
sbb
push
xchg
fs
cwtl
out
push
push
pop
xor
mov
mov
lcall
addl
jge
lahf
push
mov
sub
loop
or
mov
jno
rcrl
imul
repz
test
add
and
mov
test
sub
mov
lods
lahf
xor
repz
inc
add
xor
xlat
adc
movsl
adc
scas
and
jl
inc
or
xchg
scas
fs
movsbl
jbe
push
push
jne
xor
icebp
push
sub
pop
lcall
rolb
xchg
xor
int
push
push
add
lahf
cs
or
cmp
test
insb
popa
out
mov
sub
getsec
cmpl
push
xchg
hlt
outsb
xor
xor
push
insl
mov
lret
movsl
sar
push
xor
lcall
mov
add
sbb
dec
inc
scas
or
mov
push
cmc
sub
mov
lret
cmp
jns
xchg
je
push
test
je
js
jp
adc
pushf
int3
popf
movl
in
sub
stc
xor
sbb
insb
mov
adc
mov
shll
ficompl
push
fisubrs
inc
insb
shrb
lock
imul
aas
jmp
cwtl
ficoml
addr16
es
jbe
mov
sbb
or
sti
xor
dec
cwtl
mov
or
or
insb
mov
std
or
jp
mov
iret
push
and
adc
movb
testl
cld
sbb
repnz
mov
lar
movsl
push
lods
mov
inc
mov
and
pushl
leave
ss
jnp
insb
mov
cwtl
popf
jae
push
inc
inc
inc
loope
mov
sbb
inc
fisttpl
movsl
push
arpl
add
insb
cmp
lret
ja
out
pop
mov
addr16
ljmp
cmc
lds
pop
repnz
lret
mov
bound
stos
notl
dec
cld
jne
and
dec
adc
ss
out
xchg
jp
inc
mov
jp
les
sub
out
cmp
lock
add
ret
cmp
es
xor
ljmp
call
xchg
add
sbb
push
ja
into
sti
pop
push
xchg
into
mov
jp
mov
push
push
or
in
mov
hlt
leave
mov
outsb
es
movzwl
pop
cmp
cmp
ljmp
mov
dec
movsl
xchg
jo
push
cld
gs
nop
dec
jbe
push
stos
and
mov
mov
xlat
in
mov
aaa
rclb
add
stos
mov
les
leave
xor
stos
int
mov
push
mov
mov
fnstsw
insl
push
mov
mov
outsl
lds
popf
cltd
gs
xchg
push
loop
inc
push
adc
ljmp
or
jecxz
repnz
aaa
push
in
add
dec
fcmovnb
into
es
or
arpl
cmc
or
hlt
rclb
clc
pop
add
push
pop
cwtl
jno
scas
js
mov
ds
or
and
jle
lret
testl
jmp
cwtl
cwtl
std
insb
or
xlat
mov
add
mov
aaa
cmp
enter
shl
cmp
test
jp
pop
cmpsb
and
xlat
in
xchg
iret
or
sti
jl
mov
enter
and
mov
push
scas
mov
xchg
mov
jo
adc
push
mov
pop
stc
mov
rcrb
push
scas
dec
int
mov
popf
xor
dec
sarb
mov
repnz
mov
leave
xor
pop
scas
add
fists
pop
data16
pushf
mov
cmp
xor
sar
xchg
test
pop
insl
ja
push
int3
aaa
cmp
orb
mov
ss
mov
cmc
faddl
dec
call
insl
xchg
push
in
shr
fs
or
rcr
adc
ss
insb
addr16
aam
sbb
jp
or
es
jnp
mov
or
and
or
lods
imul
sub
pop
imul
shrb
lret
popf
xchg
cmc
pop
jp
cltd
jle
test
and
cs
imull
xorl
mov
int3
xchg
add
xchg
mov
cmp
adc
mov
sti
out
aas
inc
mov
mov
lods
jle
aad
mov
sub
jle
pop
pushf
outsb
mov
incb
hlt
mov
sbb
dec
outsb
push
ret
dec
pop
sub
jae
jae
adc
fwait
cmpsb
cmp
pushl
adc
mov
sahf
xor
push
cmpsl
clc
std
aad
fists
pusha
mov
in
sub
add
lret
add
clc
lret
pop
xchg
push
or
xor
subl
push
testl
mov
push
cmc
shrl
pop
das
lds
or
clc
jbe
dec
fistpll
push
out
dec
jne
lcall
icebp
pop
xchg
pop
test
sbb
fdivp
imul
stos
mov
or
push
pop
xor
and
jne
pop
inc
xchg
pop
cmpsb
add
mov
add
or
cltd
cmp
dec
jb
mov
xor
push
lods
lahf
nop
mov
mov
fnstsw
mov
out
inc
sub
rolb
js
gs
out
cmpsl
sbb
lcall
pop
mov
popa
push
xor
mov
fdivrs
pop
in
cmpsl
subb
fs
std
xor
aad
cmp
push
adc
aaa
mov
insl
add
xor
insb
pop
hlt
xlat
sbb
inc
cltd
mov
cmpsl
icebp
pop
stos
jb
cltd
jae
mov
adc
icebp
xchg
stc
jl
imul
out
aas
fwait
stos
xor
dec
shlb
dec
cli
test
test
ja
sbb
fs
sbb
outsb
mull
push
outsb
and
js
arpl
dec
sbb
pop
and
fcmovnb
sarb
dec
outsb
iret
arpl
push
or
icebp
data16
call
add
jmp
das
jno
ret
scas
mov
pop
rolb
push
jne
test
cwtl
xchg
daa
cs
dec
sarb
hlt
jae
mov
xor
and
mov
jae
lret
xor
test
or
lods
lcall
dec
adcb
and
jmp
push
pop
xor
out
pop
ja
inc
std
push
add
gs
out
dec
jg
cmp
xchg
insb
xchg
mov
sti
adc
push
pop
mov
movb
pop
outsb
push
push
aas
in
fmull
nop
jp
cwtl
sbb
lahf
nop
daa
mull
push
add
jbe
add
daa
add
cwtl
or
daa
dec
pop
fsts
mov
loop
xlat
pop
mov
push
mov
pop
cmc
hlt
xor
movsb
jo
add
mov
push
out
xchg
ja
jl
jnp
jbe
mov
mov
les
cmp
push
out
sub
lahf
dec
adc
jmp
jns
lcall
xor
ja
addr16
mov
cltd
add
xchg
imulb
xlat
pop
es
outsb
out
in
jl
add
cltd
and
pop
xor
xchg
mov
mov
pop
mulb
pop
lock
gs
mulb
adc
aam
push
insl
repnz
mov
nop
jne
sbb
mov
sbbb
les
push
sahf
sbb
outsl
mov
stos
dec
mov
outsl
icebp
mov
popa
movsb
out
popa
in
jno
inc
and
jb
test
sub
subl
imul
mov
dec
xchg
in
adc
xor
mov
fidivrs
pop
mov
ret
jmp
or
cmp
pop
jle
cmp
sbb
xor
push
jmp
jo
and
xor
cmp
subl
jl
mov
lret
mov
add
sbb
inc
ja
cmp
cmpsb
lret
aad
movsl
outsb
fwait
xchg
xchg
lea
cmpl
rol
jecxz
cmpsb
outsb
addr16
sbb
mov
sub
pop
stc
adc
cmpsl
mov
dec
leave
loope
stc
mov
stos
adc
sub
mov
std
cli
icebp
dec
xchg
pop
adc
xor
mov
rolb
int
inc
pop
jnp
cld
gs
sub
xchg
pop
popf
and
loope
add
or
pop
add
roll
popa
sub
js
jecxz
jecxz
fcomi
sub
and
aam
add
jge
adc
cmovbe
idivb
xchg
pusha
outsl
push
inc
xor
cmp
or
push
pop
lcall
jnp
leave
scas
cltd
mov
add
mov
xlat
cmp
xor
sti
cmp
mov
push
jnp
fs
sub
pusha
push
and
dec
aad
outsl
add
fisubrs
push
leave
ja
add
mov
jne
sub
fldt
mov
or
cmp
imul
daa
sahf
dec
mov
lods
cmp
xchg
fwait
adc
jg
jge
push
inc
push
sbb
pop
jp
popa
nop
outsl
pop
mov
divb
das
cmp
sub
cmp
sbb
inc
rclb
and
inc
pop
scas
add
xchg
inc
call
push
mov
adc
out
mov
outsb
aad
in
sub
dec
pop
sahf
push
sub
js,pn
je
ljmp
add
mov
push
inc
inc
push
js
jge
pop
mov
inc
inc
dec
cmp
es
dec
daa
cltd
loope
sbb
fistpl
pop
arpl
adc
mov
sub
pop
outsl
fisubl
addr16
fisubrl
daa
lcall
xchg
dec
psrlq
das
xchg
call
scas
pop
dec
push
je
add
lods
mov
xchg
int
sbb
pop
push
nop
mov
shlb
sub
and
mov
popa
popf
inc
xor
notb
dec
das
jno
cmp
jmp
and
sub
cli
call
hlt
cwtl
jle
sti
aas
cmovo
jmp
and
cmpsb
dec
or
sbb
adc
sbb
jne
insl
add
rclb
insb
cmp
jl
mov
out
rcll
adc
sub
in
das
jnp
adc
stos
inc
pop
or
sbb
or
lret
inc
cmpsb
pusha
call
pop
mov
mov
filds
jb
sub
inc
xlat
nop
xchg
shrl
jmp
repnz
movsl
xor
and
int
lea
adc
sub
dec
imul
vpmacssdqh
or
push
jnp
sti
test
movq
or
jecxz
arpl
ljmp
or
mov
lret
xor
xor
jg
push
xchg
and
fnstsw
inc
cs
call
int
adc
movsb
jno
xor
and
mov
jmp
repnz
cmp
and
inc
ret
mov
mov
cmp
lcall
lret
and
ret
dec
sub
push
rcll
in
push
rcll
decb
jb
fidivrs
cwtl
sahf
mov
adc
push
out
add
dec
push
sub
xchg
test
pop
jmp
nop
fwait
cld
xchg
mov
clc
stos
pop
dec
xor
ret
cmp
test
cld
mov
fs
push
pushf
cli
test
ss
mov
inc
cmp
mov
mov
int3
jnp
insb
pop
scas
inc
pusha
insb
add
sbb
push
clc
push
add
dec
dec
adc
inc
pop
xor
push
scas
xor
xchg
insb
stos
add
push
sbb
jnp
pop
scas
repz
fistpll
ljmp
cld
repz
and
and
lods
nop
push
jno
movsb
push
push
pop
rorl
js
test
stos
xchg
xchg
bound
jno
inc
arpl
aas
push
test
mov
cmp
cltd
pop
imul
lds
fmul
repz
ret
sahf
outsl
jb
lret
jecxz
mov
add
popa
xchg
xchg
daa
repnz
mov
and
leave
popf
lds
daa
mov
xchg
movsl
shlb
dec
mov
popf
pop
lret
subl
jbe
orl
sbb
testl
xchg
push
outsb
inc
test
shrb
iret
lods
flds
mov
mov
cmp
enter
cwtl
add
std
inc
dec
sahf
mov
jl
leave
inc
jge
cmpsb
addr16
jge
or
jb
jle
cmp
push
aad
repz
inc
in
mov
pop
je
cmpsb
lods
stos
fiadds
and
movsl
pop
xchg
popa
dec
mov
call
inc
out
rorb
jmp
cmpsl
add
mov
mov
dec
inc
pop
mov
pop
enter
cmc
cmc
in
ja
repz
inc
gs
sbb
adc
push
or
inc
sub
lahf
push
jo
inc
or
fwait
xchg
rorl
sahf
faddl
mov
mov
pop
sahf
cmc
outsb
call
or
xchg
pop
in
popa
add
mov
nop
xchg
push
sbb
mov
pusha
daa
sahf
jb
cmpl
sub
jnp
cmp
popf
adc
cmovne
pop
add
add
sub
jns
xor
nop
cltd
mov
sub
mov
push
and
push
push
es
sub
dec
fmull
ret
and
insl
mov
inc
adcb
mov
sbb
mov
ljmp
push
mov
sub
sbb
lcall
jne
push
ret
lret
jmp
pop
mov
das
jae
scas
xor
ds
icebp
insl
cltd
divl
xchg
pop
pushf
inc
pop
cmp
lret
gs
mov
jmp
jg
idivl
fidivrs
mov
clc
int
fwait
dec
fsubp
adc
test
lock
or
rclb
outsl
rcrb
xor
push
pop
adc
xor
fwait
adc
adc
in
or
notb
pop
lock
adc
dec
sub
sub
in
jl
es
dec
mov
adc
adc
mov
cltd
mov
pushf
adc
sbb
imul
or
in
mov
inc
mov
pushf
push
push
push
push
pop
ss
jg
imul
mov
pop
or
lock
js
push
inc
adc
nop
outsl
out
push
mov
cmp
pop
test
cmp
std
out
xchg
out
xor
dec
inc
out
cmp
mov
loope
pushf
xchg
stos
and
sub
jbe
and
loopne
into
inc
add
lods
mov
data16
adc
out
push
pop
shr
mov
out
arpl
xchg
push
popa
aam
in
fs
cmp
xchg
inc
pushf
popf
xchg
xorb
dec
xor
adc
mov
andl
cmp
fld
dec
es
rcll
ljmp
and
bswap
mov
mov
lods
lods
test
dec
inc
lds
imul
aad
lcall
jnp
dec
hlt
popa
cmp
out
cli
dec
cmp
cmp
dec
add
inc
add
jns
in
jle
xchg
cli
jmp
ss
jmp
pop
pusha
daa
push
jbe
dec
in
cwtl
lock
shrb
jns
inc
stos
popa
sbb
outsb
jl
addr16
mov
test
fildl
inc
jno
jmp
data16
jns
push
cmpb
mov
xchg
mov
int3
add
loop
mov
out
or
inc
push
pop
pop
ss
jp
rcrl
lock
jmp
cli
or
mov
push
mov
adc
jecxz
cmp
inc
jp
shll
and
test
mov
dec
es
call
imul
shlb
ret
jo
fdivs
jmp
ret
cltd
sub
mov
jb
pusha
mov
xchg
mov
aad
and
ret
pop
rorb
jns
loop
stc
jecxz
imul
push
or
inc
test
jg
jb
int
pop
xchg
inc
leave
jp
ret
sub
mov
mov
pop
sub
pop
roll
cs
cltd
sub
lods
sbb
in
clc
xchg
pop
jno
pop
ret
lcall
ja
cmp
insl
pop
xor
pop
test
dec
and
or
cmp
std
incb
sar
daa
fbstp
sbb
inc
notl
arpl
adc
cwtl
dec
pavgw
xor
dec
mov
enter
adc
inc
pop
cmpsl
out
jnp
jl
and
imul
xor
push
mov
mov
pop
andb
mov
adc
orb
mov
add
sti
les
pop
cli
inc
mov
scas
or
pop
push
sub
daa
in
inc
mov
pop
pop
icebp
test
test
add
stos
and
je
and
jmp
push
dec
pop
dec
push
int
stc
add
inc
or
fstpt
pop
sarb
icebp
outsl
pusha
loopne
sub
mov
fiadds
out
fidivl
dec
outsb
popf
ret
cmp
std
imull
dec
push
lea
stos
out
dec
decb
popl
mov
fwait
pop
add
pop
inc
push
ljmp
mov
inc
fwait
sub
jmp
fnsave
push
sub
push
push
add
mov
push
push
jmp
and
cwtl
xchg
hlt
cvtps2pi
push
cs
sbb
aaa
push
inc
mov
outsb
or
jge
ljmp
jb
inc
mov
pusha
dec
ficomps
jo
jno
xlat
cs
jmp
push
push
bnd
fmuls
sbb
mov
add
mov
in
dec
pop
or
cmp
and
ret
or
inc
and
xor
xchg
testb
mov
scas
nop
dec
sbb
ljmp
inc
movsl
push
out
das
adc
push
and
jmp
call
lret
xlat
pushf
lret
mov
call
inc
in
es
mov
mov
int3
daa
fld
mov
andl
aad
scas
mov
cmc
movsb
iret
cmp
mov
dec
fdivp
ljmp
mov
lods
stos
adc
xor
mov
nop
inc
mov
loop
and
fldcw
lcall
add
sbb
and
fnstsw
fsubs
sbb
xor
mov
xor
insb
or
pop
int3
mov
lods
cmp
sub
adc
xchg
xor
decl
test
or
xchg
fcmovnbe
xchg
into
lahf
lds
xchg
and
push
and
pop
movsl
jbe
psraw
scas
pop
sub
dec
notb
aas
lods
lret
jae
repnz
push
arpl
mov
sbb
or
pop
ljmp
push
mov
sub
dec
fstpt
movsb
in
mov
dec
xor
insl
fs
xlat
add
inc
xor
mov
xchg
sbbb
aad
cmpsb
add
add
or
daa
fnsave
iret
pop
pop
hlt
adc
pop
and
je
ficompl
and
outsl
es
or
lahf
and
sub
imul
pop
or
scas
repz
jbe
sbb
mov
or
pop
add
addl
lds
jle
mov
bound
outsb
push
je
push
sbb
stc
scas
fadds
jle
adc
sbb
jle
or
les
gs
push
insb
cmp
les
inc
xchg
sub
adc
stos
add
shrl
in
or
jge
jne
mov
clc
push
push
inc
mov
mov
out
out
sti
rclb
add
scas
mov
cli
fistps
mov
dec
adc
nop
or
int3
pop
pop
xchg
js
stos
in
mov
or
cmp
xorb
imul
mov
lods
daa
test
xchg
int3
jns
sbb
insb
lock
iret
test
imul
pop
sar
aam
xlat
pop
pop
add
adc
sbb
pusha
mov
xchg
mov
rorb
mov
jle
sar
fidivrl
loop
xchg
sti
push
add
ds
mov
sbb
stos
lcall
xchg
mov
xchg
es
or
imul
orb
add
or
mov
stos
loope
xchg
lcall
movsl
mov
aas
mov
std
addl
jno
lock
xor
dec
mov
cmpb
xor
rcrl
in
popa
add
lock
cmpsb
cmpsb
bound
or
sub
inc
divl
jbe
sub
cwtl
mov
mulb
xlat
lret
jb
das
int
pop
ffree
xorb
test
pop
mov
insl
add
fs
mov
sub
push
sahf
int3
fnsave
in
daa
test
push
add
clc
scas
pop
mov
jp
test
scas
hlt
xchg
xchg
jo
pop
scas
dec
push
das
or
and
ljmp
arpl
cmpl
fs
inc
popa
je
mov
pop
inc
jge
adc
mov
loope
xor
jnp
pusha
mov
aaa
inc
jns
scas
sub
iret
stos
mov
push
aam
pop
sti
dec
mov
pop
jge
dec
cmp
pop
pop
pop
pop
arpl
in
and
inc
cmc
add
sti
nop
xchg
daa
push
out
xlat
and
xchg
sub
pushl
cmp
or
adc
jo
add
mov
push
jb
in
pop
movsb
jns
and
sub
mov
fisubl
sub
aas
outsb
cmp
dec
push
fldt
xchg
lcall
ss
stc
pop
mov
dec
shll
xchg
insl
frstor
mov
dec
scas
rcrl
addr16
js
hlt
inc
sub
movsl
pop
loopne
sbb
lahf
cmp
loop
xor
cmp
mov
int3
dec
clc
push
mov
adc
inc
mov
add
add
orl
rcrl
pop
stos
mov
lods
pusha
cmp
push
rorl
std
in
or
mov
outsl
int
cmc
cmpsb
push
dec
push
xor
jge
cmp
adc
jg
dec
push
xor
inc
mov
mov
scas
and
mov
sub
and
adc
jmp
sub
cmp
int3
push
add
int
and
loopne
lret
scas
inc
movsl
inc
or
repnz
and
jge
mov
xchg
lods
outsb
scas
sbbb
push
mov
popa
push
mov
das
sbb
jmp
dec
in
stos
xchg
add
sub
sbb
mov
shlb
stc
jp
pop
xor
or
into
icebp
mov
mov
mov
aam
repz
nop
ja
cmp
test
jne
cmc
mov
pop
lahf
mov
aas
cltd
xchg
into
imul
and
movsl
sub
cmp
fsubs
scas
icebp
xor
xchg
std
adc
inc
push
sbb
ret
add
jno
lds
mov
cmpsl
lret
add
stc
mov
lret
sahf
stc
cmp
lahf
xchg
rcrl
cmp
jb
or
inc
ljmp
sub
dec
lret
std
in
or
rcll
out
insl
fs
call
pusha
lcall
inc
or
cmp
cmpsl
mov
filds
imul
dec
int3
in
pop
and
add
dec
jp
mov
lds
mov
or
push
pop
adc
push
rolb
imul
mov
and
out
icebp
cmp
dec
push
addr16
cmp
xchg
ror
xor
xchg
pop
dec
jo
adc
std
mov
pop
imul
rorl
xchg
insl
or
ds
dec
cld
jo
scas
lock
sbb
xchg
inc
cmpsb
push
dec
cmpsb
into
and
inc
and
mov
cmp
xchg
enter
xlat
add
shll
and
pop
insl
cli
stc
mov
mov
out
push
inc
xchg
loope
mov
scas
jg
mov
adc
int
test
cwtl
scas
scas
loop
mov
inc
adc
test
outsl
sub
fnstcw
inc
sahf
fwait
or
sub
add
jg
mov
adc
stos
call
hlt
ret
inc
lcall
jae
fs
call
pop
pop
push
sbb
lods
hlt
out
fs
jle
push
adc
call
icebp
inc
scas
repz
jmp
out
adc
lret
dec
in
fdivrp
dec
sahf
sbb
push
push
into
sbb
and
in
sub
test
fisubl
mov
int3
dec
cmp
jno
addr16
stos
sub
mov
add
push
out
inc
addr16
mov
or
mov
mov
cs
pop
lea
sub
sbb
add
jmp
add
jne
cmpsl
ret
pop
lock
cmc
adc
ss
mov
test
adc
nop
push
jge
cmpsb
xor
loop
or
out
pop
xor
sub
into
dec
lods
lods
rcrb
adc
push
scas
jbe
xor
shll
jne
ret
jle
adc
sbb
lock
lods
or
adc
int3
ret
loop
and
mov
and
jbe
pop
inc
incl
leave
cltd
pusha
shll
cli
and
rcll
pop
dec
lret
jge
lret
pushf
pop
lea
ret
inc
mov
xor
std
xor
jp
dec
xor
ficoms
xor
pop
mov
inc
push
ja
movsb
push
sbb
or
mov
xor
cmpsl
cmp
andl
adc
xor
call
push
push
mov
jb
popf
inc
sbb
and
lahf
pop
jb
jne
fdivr
cmpsl
cmpsb
push
out
int
xchg
push
jb
fsts
insl
lret
mov
imul
inc
xchg
xchg
test
mov
adc
mov
xchg
jns
lods
xchg
lahf
push
push
shl
cmp
sbb
mov
out
sahf
jnp
mov
dec
adc
pushf
mov
or
lods
add
add
adc
mov
test
mov
push
pop
lock
cmc
inc
and
pop
dec
sbb
mov
jmp
push
and
cmp
cmpsl
pop
mov
mov
push
sbb
lock
mov
in
jl
stc
ljmp
jb
shrl
add
ror
inc
in
jne
ss
repz
pop
cs
jo
fldcw
pop
lds
sub
out
insb
lds
sahf
lds
fmul
lea
stc
cmpsl
cmp
ja
shl
lret
mov
inc
pop
mov
mov
push
mov
rcrb
add
xchg
lcall
cmc
lret
mov
jbe
ds
mov
pop
ljmpw
test
pop
ret
fs
jbe
fbstp
add
pushl
mov
pop
sbbl
je
mov
outsl
pop
insb
mulb
sub
xor
sub
sahf
add
cmp
cmpsl
xor
cmp
mul
mov
jl
stc
cmp
mov
js
jge
fstpt
push
jns
xchg
das
add
cs
mov
inc
push
xor
or
hlt
pop
roll
data16
fbld
insb
out
inc
jmp
xor
or
dec
jno
jmp
cs
or
or
pop
es
sub
mov
jmp
mov
xchg
mov
xor
mov
adc
mov
rcr
aaa
in
in
aad
xchg
sbb
mov
jle
shl
scas
je
dec
mov
scas
insl
es
shll
xchg
adc
xor
pop
addb
cmp
push
mov
inc
mov
gs
popf
cs
aam
sub
mov
cmpsb
movsb
jge
into
cli
repz
out
mov
rcrl
lds
add
test
rorb
std
test
in
lahf
popa
sub
imul
push
clc
icebp
push
pop
cmp
iret
ficoml
mov
xor
sarl
je
filds
pusha
dec
addb
push
fimull
enter
imul
aaa
sahf
pop
mov
mov
inc
pop
and
xor
jmp
or
xchg
fcmovnu
mov
out
cs
lahf
mov
push
inc
mov
cmp
adc
popf
mov
imul
lret
loope
xor
xlat
call
into
aaa
and
pop
cmp
iret
pop
xchg
jl
jecxz
inc
adcb
popa
test
push
loope
sub
imull
test
fs
aaa
nop
loopne
jae
inc
jmp
les
xor
push
and
sub
imul
mov
xor
addr16
and
xlat
push
xor
mov
mov
int3
mov
jge
pop
xchg
mov
shrb
jle
ljmp
inc
sub
int3
cmp
sub
jmp
fidivrl
daa
ret
mov
mov
mov
leave
insl
ja
rolb
es
or
mov
in
xor
xchg
test
push
mov
jp
ret
add
cmp
or
adc
lods
mov
clc
lock
jle
adc
inc
sahf
sub
xchg
fcoml
push
mov
xchg
stc
stos
imul
pop
pop
jmp
mov
cmp
xchg
cli
mov
lahf
mov
mov
pop
jno
pop
pop
clc
or
push
mov
jecxz
mov
jbe
jae,pt
adc
add
bound
stos
pop
out
push
xor
jle
cmp
in
pusha
inc
fs
xchg
cmp
mov
xor
std
add
sub
call
cmp
xorb
je
cmp
movl
outsl
pop
jnp
fbld
cmc
lahf
clc
jecxz
fmuls
xchg
aam
lcall
jnp
xchg
xor
push
jecxz,pt
mov
xor
jae
das
xchg
sbb
sub
icebp
lock
mov
rcll
rcr
cmpsl
imul
push
test
mov
inc
in
inc
xchg
cmp
adcb
mov
mov
stc
mov
push
push
lea
idivb
cmpsb
xadd
cld
jle
jmp
mov
mov
out
sbb
les
test
addl
das
inc
popf
popa
mov
inc
inc
jle
mov
and
adc
xchg
lret
mov
insl
and
cmp
xor
lock
or
jmp
and
push
scas
pop
mov
mov
xchg
mov
dec
mov
imul
sar
movsb
mov
fisttpll
stos
jle
pop
cmpsb
repnz
std
lea
mov
jecxz
cs
aam
stos
cmp
fmul
mov
mov
xor
push
adc
inc
test
mov
fisubs
imul
sbb
pop
mov
ret
sbb
addr16
in
fisubs
or
push
sbb
or
cmpsl
push
ret
xchg
jmp
call
push
jge
push
push
xor
xor
mov
mov
sbb
cmp
je
sub
imul
leave
sbb
pop
test
xor
lcall
xor
inc
inc
pop
jmp
inc
jle
int3
jne
popf
xor
outsb
xor
xchg
mov
push
sbb
push
test
dec
adc
movsl
push
mov
enter
out
sub
shll
in
sub
xchg
insl
dec
popf
mov
sub
sbbb
ja
xlat
mov
sbb
pop
xchg
jnp
and
push
repz
sbb
mov
arpl
sarb
mov
pop
add
and
push
imul
dec
cmp
sbbb
or
aad
or
leave
out
push
push
fiaddl
jp
fidivs
inc
mov
add
ss
test
incl
lock
push
xor
push
fistps
push
rolb
mov
cmc
adc
loope
stos
xchg
mov
push
icebp
mov
mov
dec
mov
cmpl
inc
or
or
cmp
hlt
mov
rcr
movsb
xchg
push
cld
sti
fwait
pop
add
ret
loop
sub
push
xlat
imul
aaa
cs
push
imul
mov
and
aaa
shl
dec
test
addr16
jmp
pop
fcoms
daa
add
dec
jbe
pop
pop
popa
push
aaa
adc
mov
xlat
jo
iret
jae
fildll
push
adc
jmp
enter
inc
xor
popa
sbb
pop
mov
lcall
pop
and
mov
push
lea
cmp
aam
ds
adc
hlt
cld
rcrb
outsl
fmulp
sub
loop
shlb
mov
and
add
sbb
sbb
xor
mov
jmp
pop
outsl
mov
fidivs
jg
ljmp
inc
sbb
lahf
jge
das
and
push
add
in
or
dec
sub
jge
loop
int
test
dec
daa
mov
lods
lcall
mov
lods
arpl
cmp
lcall
lock
mov
push
test
mov
aas
lods
shlb
es
jl
push
cmc
adc
sbb
cmp
and
adc
mov
mov
loop
inc
and
adc
or
push
sbb
lea
adc
cmc
dec
pop
test
sbb
mov
mov
cmpsl
pop
int
and
sarb
jge
mov
lret
popf
pop
mov
enter
add
mov
inc
or
adc
xchg
pop
xchg
aaa
mov
into
xchg
pusha
cwtl
cmp
xchg
jae
leave
jnp
imull
mov
shr
push
xchg
cwtl
mov
xor
test
das
pusha
sub
sarl
jp
push
iret
bound
pushf
ljmp
rcll
mov
cmp
pop
icebp
popa
push
repz
into
loope
push
fbld
mov
jmp
inc
sbb
and
pop
das
or
je
dec
shll
dec
aas
xchg
sbb
aad
in
fsubrl
pop
add
jmp
mov
mov
and
leave
pop
cmpsb
sti
sbb
repnz
xor
cmp
and
iret
and
in
loop
loopne
shll
ss
loope
jmp
push
mov
add
daa
dec
int3
das
in
mov
xchg
das
je
xchg
sub
mov
not
test
lds
lahf
dec
inc
sub
das
add
stc
jae
jmp
jae
mov
cmp
into
mov
cmpsl
mov
divb
or
jge
xor
and
popf
lcall
lock
push
out
sbb
rorb
jo
sub
cmp
or
out
movsb
adc
dec
test
pop
into
popa
or
out
mov
cmp
mov
mov
pop
lods
addr16
rorl
or
data16
mov
lods
loop
das
sbb
stos
pusha
fldl
outsl
or
adc
shll
lock
dec
cmpsb
push
xchg
divl
filds
aad
mov
pop
inc
pop
mov
ficoms
shll
ja
or
loope
inc
jge
test
mov
fcmovu
insl
or
enter
add
aaa
stos
xchg
cli
xchg
jae
push
cmp
push
ss
sbb
fs
ds
in
jp
jp
rcll
in
mov
mov
mov
sub
test
and
cli
sbb
and
shrl
lock
xorl
mov
jl
mov
imul
hlt
push
ret
sbb
dec
rolb
xor
dec
rcr
push
scas
pop
dec
xchg
push
sub
xchg
push
ret
push
test
jge
add
cmp
inc
pop
cltd
pusha
xchg
push
lret
cmpsl
xchg
ret
and
sub
cmp
ss
mov
mov
sti
inc
ret
inc
int
jnp
outsl
ret
xchg
fdivs
add
mov
or
bound
pop
enter
cmp
adc
jecxz
jmp
nop
js
xor
addl
into
mov
sbb
mov
push
jno
lock
call
mov
aas
stos
mov
mov
push
loope
mov
mov
add
mov
test
xchg
in
cmpsb
sub
cmp
sub
imul
sub
movsl
pop
jle
sbbb
and
mov
jno
loop
push
xchg
sbb
mov
xchg
adc
push
jbe
mov
cs
lcall
mov
movsb
mov
sbb
adcb
lods
xchg
push
cli
xchg
imul
fildll
xor
push
xor
push
pop
filds
cs
lock
lcall
xchg
outsl
sbb
xchg
scas
push
repz
out
aam
pop
and
sti
sub
mov
adc
push
jne
jb
mov
jge
int
add
mov
mov
push
mov
in
xchg
cld
loope
stc
add
mov
in
insb
mov
jo
mov
jne
pop
rcll
or
xchg
sbb
mov
inc
or
fwait
jmp
jb
cmp
jnp
mov
jb
mov
mov
sub
mov
add
mov
sbb
sahf
xchg
dec
or
scas
sub
addl
or
cmp
iret
push
and
adc
in
into
sbb
or
pop
xchg
scas
cltd
dec
mov
orb
aaa
fimull
push
repnz
mov
cld
arpl
adc
mov
jmp
lods
mov
jg
mov
rorl
mov
out
outsb
outsb
and
mov
insb
cmc
test
fwait
cmpsb
xchg
nop
push
loope
adc
jno
cli
adc
inc
push
repz
sbb
sahf
push
je
cmc
xlat
das
sub
loope
arpl
hlt
inc
pop
negl
or
out
fidivrl
xor
sub
and
jo
lods
outsb
pusha
pop
inc
mov
xchg
xor
lock
popf
mov
pop
mov
in
fcmovb
jne
add
nop
rorb
dec
repz
mov
aaa
sub
xchg
inc
xchg
and
in
add
mov
or
lods
movhps
pop
add
xor
test
shll
add
out
in
cmp
and
pop
jl
data16
data16
sbb
mov
push
and
idivb
pushf
mov
jl
aad
int3
pop
in
cmp
out
jmp
mov
push
add
in
addr16
leave
dec
inc
fwait
out
negb
jbe
das
xor
jp
sub
mov
andl
movsb
push
addb
fcomi
loope
sbb
cmp
jg
lret
fstp
ror
rorb
lret
not
push
pop
pop
dec
xor
js
sub
pushf
dec
cmpsl
cltd
outsl
cmp
jge
lret
daa
lock
and
adc
pmulhw
rcrb
into
dec
decb
sarl
or
or
iret
inc
movsb
stos
add
cltd
rcr
sbb
lea
pop
adc
mov
lods
jle
mov
xchg
pop
test
or
repz
or
mov
adc
ljmp
pop
test
and
sub
aad
loopne
fs
fiaddl
dec
test
cmc
inc
cmc
sarb
push
mov
insb
movsl
mov
popa
mov
imulb
inc
mov
into
lret
cmp
dec
stos
sahf
fistps
sahf
mov
push
add
sbb
sub
push
push
inc
jmp
jno
les
push
xlat
mov
jns
cmp
movsl
outsl
sub
stos
inc
frstor
and
imul
and
icebp
movsb
push
addr16
jbe
daa
test
dec
mov
mov
cmp
xchg
push
xchg
movb
out
xor
mov
call
scas
test
mov
lret
xor
lret
aam
stos
and
daa
sbb
lret
in
leave
cmpsl
or
fcompl
int3
fsubr
cmpb
mov
fimull
pop
jecxz
inc
jo
mov
adc
cmpl
in
shlb
sub
stc
inc
addl
add
push
in
mov
sub
jne
xor
loope
mov
mov
inc
call
jae
jl
mov
sbb
xor
lret
call
sub
popf
sti
and
jge
lds
fildll
adc
add
stos
minps
ret
xchg
jnp
pop
inc
out
jno
adc
mov
xchg
inc
popf
cmp
dec
daa
push
ds
push
sbb
jmp
xchg
lock
lods
into
rolb
sub
cwtl
push
or
int3
test
pop
loop
sahf
lret
mov
sbb
bound
fimull
ficompl
and
push
inc
add
lea
out
cld
cmp
inc
push
mov
adc
mov
or
lret
lock
pop
leave
imul
out
call
mov
inc
dec
pop
mov
jp
outsb
xchg
push
mov
dec
inc
lods
mov
dec
mov
aad
and
sub
hlt
movsl
mov
sub
pop
push
dec
ja
or
dec
add
ljmp
mov
int3
dec
pop
pop
add
outsb
cli
mov
imul
loope
cwtl
sub
bound
addb
fstl
xchg
movsl
imul
pop
jg
aaa
sbb
loopne
xchg
hlt
icebp
sbb
or
jno
insb
push
xor
fnstcw
jb
test
gs
mov
mov
out
and
cld
mov
jmp
cmp
xor
xor
test
mov
mov
cmp
popf
add
cwtl
cld
adc
pop
mov
lret
adc
jb
addb
sbb
jp
mov
pusha
mov
xchg
js
es
bound
cmpsb
push
rcpps
ret
popa
push
sub
movsb
leave
mov
fwait
dec
sbb
hlt
jnp
push
xchg
push
or
ja
sbb
cwtl
sbb
push
inc
pushf
mov
aad
xchg
xor
jnp
cmpsb
notl
fimuls
insl
adc
in
out
xor
jno
imul
test
out
movsl
mov
jbe
icebp
push
or
mov
sub
mov
std
in
aam
lods
mov
repnz
lods
push
fstpl
dec
cltd
push
push
shlb
stos
xchg
mov
pop
das
bound
stos
mov
mov
aam
inc
and
push
out
add
shl
sbb
xor
jmp
xor
in
das
je
mov
mov
mov
fidivs
xchg
pop
ljmp
or
std
pusha
sub
xchg
jp
stos
aaa
sub
mov
mov
out
loopne
mov
and
pop
stc
out
mov
cmp
mov
adc
rorb
push
fcomps
mov
push
mov
mov
arpl
push
ret
popf
cmp
subb
mov
xchg
aas
cltd
dec
add
sub
cmp
xchg
pop
cmpsb
adc
mov
cmp
inc
lahf
inc
cwtl
dec
ficoms
dec
outsb
ss
and
iret
lods
mov
js
pop
cmpl
aam
inc
jns
dec
dec
fimull
dec
lret
jnp
lds
out
mov
lods
sbb
and
and
xchg
mov
inc
test
sub
rcll
xchg
outsb
dec
adc
jge
and
dec
idivb
jmp
mov
movsl
lods
mov
jmp
mov
imul
dec
mov
sti
lcall
xor
push
mov
hlt
dec
jne
sub
stos
push
clc
fdivr
mov
push
aas
pop
dec
sub
cmc
mov
mov
movsb
outsl
jnp
add
fldl
push
fnstenv
sti
sub
pop
push
pop
fcmovne
dec
lods
adc
mov
mov
or
jge
jb
mov
and
addr16
push
or
and
leave
mov
xchg
sub
movsb
cmpsb
push
xor
scas
aas
leave
in
push
lods
cld
in
in
inc
mov
iret
push
fs
xchg
xor
popa
movsl
xchg
pop
loop
fnstcw
mov
dec
js
cmp
or
data16
subb
test
cmp
out
stos
addr16
pop
fsubr
mov
aad
and
xor
shrb
cwtl
insl
mov
mov
cmp
cs
iret
mov
jae
lods
loop
and
sbb
in
in
xchg
mov
lods
cwtl
iret
insl
mov
or
xchg
push
aas
adc
das
fsubs
aaa
push
dec
add
call
xor
ret
sti
mov
cmp
push
sub
pop
jp
pop
jne
jb
int
aam
cmp
ljmp
test
fwait
pop
outsl
jp
and
add
jmp
dec
fmul
inc
js
rcr
aas
clc
mov
jmp
mov
xchg
push
test
or
xchg
scas
imul
cli
je
mov
ret
das
cmpsl
mov
push
aad
or
out
or
and
mov
ss
and
in
and
xor
push
push
popf
daa
xchg
mov
xor
mov
fucomi
ljmp
add
pusha
pusha
in
aaa
in
shl
sbb
xlat
mov
cmc
mov
push
and
test
int
adc
mov
addr16
stc
bound
cmp
aam
stos
push
jle
push
pop
aaa
repz
out
fsub
mov
loopne
std
aad
jl
imul
test
es
sti
es
sub
data16
sbb
scas
cmp
cmpsb
jmp
cmpsl
pop
jo
or
sub
in
jno
mov
sub
mov
loopne
gs
push
pusha
sarb
sahf
dec
mov
jnp
push
cs
pop
insl
aam
mov
mov
mov
data16
jg
sub
push
nop
sub
stos
repz
push
xchg
add
and
pop
xchg
pop
and
lock
xor
inc
test
push
popa
push
mov
icebp
mov
xchg
mov
add
or
je
iret
adc
mov
push
sbb
sub
push
punpckhbw
adc
iret
adc
pop
jmp
loope
pop
inc
inc
loop
mov
iret
int
cmp
mov
push
pop
push
mov
pop
inc
mov
mov
jge
jge
adc
push
push
outsb
adc
roll
aas
mov
movsb
pop
popf
jbe
pop
mov
shlb
sub
movsb
int3
pop
cli
jmp
mov
cmp
mov
mov
jns
mov
pop
pop
dec
mov
testb
xchg
es
repz
add
mov
int
cmp
xchg
sarb
xchg
aas
xor
mov
xchg
and
notl
ds
imul
test
stos
jp
mov
xor
cltd
mov
or
cld
add
pop
sub
add
xor
lock
int
movsb
jo
add
insl
test
push
or
shl
arpl
push
mov
dec
adc
push
and
int
pop
or
add
arpl
je
sti
inc
sarb
or
sbb
add
mov
jne
fscale
push
shlb
sbb
inc
fdivrp
fdivl
sbb
mov
lret
fwait
shl
je
cwtl
xor
adc
repz
les
arpl
push
adc
out
dec
sub
bnd
dec
sub
iret
push
popa
xchg
lret
jne
and
push
pop
in
sbb
push
in
pop
sbb
mov
mov
pop
mov
addb
xchg
movsl
scas
jecxz
pop
rcl
shrb
pop
jbe
dec
insl
or
cmp
iret
sbb
xor
shrl
outsb
shll
jne
test
sti
push
and
push
xchg
aam
jns
mov
sub
pop
std
push
clc
into
push
mov
cwtl
push
outsb
loop
jbe
add
mov
in
out
incb
xchg
mov
jg
mov
aas
loopne
mov
ficomps
cmp
call
call
xchg
adc
sub
sub
push
std
dec
mull
inc
pop
sub
sbb
insl
aaa
sbb
outsl
test
inc
clc
jg
jbe
mov
test
cmp
dec
adc
push
out
inc
sub
stos
mov
jmp
dec
dec
jne
fidivrl
loope
stos
pushf
sbb
gs
sbb
sbb
aam
scas
out
push
into
aaa
pop
and
into
cmp
lock
cmp
xor
shl
pop
ljmp
imulb
pop
mov
add
scas
sbbl
sbb
adc
sbb
or
inc
lods
sbb
dec
out
aad
lea
insb
sahf
stc
inc
push
inc
addr16
sub
xor
mov
stos
xor
jg
mov
pop
leave
xchg
xor
mov
jle
stos
inc
ret
adcl
into
dec
sub
mov
test
rol
dec
pushf
push
neg
repnz
xor
rcll
inc
test
fidivl
push
pop
ja
dec
xchg
stos
jecxz
outsb
fsts
inc
xorl
outsb
pop
lret
sahf
jp
cmpsb
dec
and
mov
iret
outsl
xor
xor
or
push
bnd
inc
data16
jne
mov
insb
mov
sbb
xor
inc
ljmp
pushl
and
ss
dec
sub
rol
mov
or
add
push
xchg
xor
xchg
lret
cmp
xchg
inc
pop
lret
cs
push
pusha
xchg
push
call
lea
xchg
mov
dec
xchg
add
add
mov
or
sbb
loopne
outsb
fcompl
std
icebp
fwait
shll
mov
es
fs
das
mov
imul
xor
cli
xchg
int
ss
loope
sbb
cmp
mov
xor
repnz
fcomps
push
jge
jbe
mov
sbb
mov
cmpl
cmp
clc
loop
ret
fsubrl
pop
andl
mov
fdivrs
es
imulb
sbb
pop
jle
daa
ja
enter
xor
jmp
ds
adc
fisubl
adc
repz
inc
xchg
xchg
jg
xchg
xchg
sub
stos
cmp
lea
or
repnz
mov
sub
aas
bound
jg
pop
sti
and
test
dec
daa
xchg
repz
xlat
xor
xchg
lcall
insb
push
add
das
xor
mov
insl
out
jp
test
icebp
popf
dec
loop
out
js
pusha
dec
ret
testl
jle
cs
pop
loop
push
push
js
cmpsb
shll
dec
push
mov
pop
jne
jecxz
stc
movsb
mov
and
pop
jae
push
out
pop
add
ljmp
cmp
fbstp
outsl
sbb
xor
popf
mov
xor
and
or
xor
mov
push
dec
cmp
lea
or
sahf
shrb
inc
outsb
ds
out
fstl
inc
addr16
or
mov
add
dec
cmp
and
sti
dec
ret
mov
sti
push
je
jbe
out
dec
xchg
xchg
pusha
push
in
sub
sbb
pop
xchg
lods
clc
imul
test
dec
dec
popf
into
sbb
cmc
pusha
mov
movsl
js
ret
push
arpl
insl
scas
shll
in
outsb
adcl
mov
jbe
inc
xchg
popf
adc
bound
lahf
repnz
cmp
jge
test
xchg
popf
and
cld
in
js
fdivrl
xor
push
push
and
mov
mov
cmp
popa
ljmp
or
loop
mov
mul
mov
ljmp
out
and
mov
add
xor
push
andl
aaa
inc
outsb
mov
cmp
jnp
inc
mov
mov
fiaddl
out
xchg
pop
inc
sub
xlat
pop
jle
dec
sub
jnp
push
popa
dec
push
xchg
icebp
lods
int3
arpl
jo
and
pushf
shr
addr16
imul
xchg
push
jns
mov
dec
and
data16
fs
out
mov
dec
cs
dec
add
pop
jnp
jbe
pop
xor
int3
push
mov
lret
subb
test
mov
out
nop
sub
jecxz
push
pop
bound
or
inc
adc
and
orl
push
push
push
inc
test
inc
aas
mov
js
jo
shll
jne
test
xor
aaa
test
addr16
jle
sarl
lods
pop
sub
and
ficoml
mov
and
out
add
mov
bound
sub
arpl
std
out
loop,pn
pop
pop
pcmpeqd
or
adc
mov
addl
icebp
movsl
or
pop
adc
mov
adc
push
mov
lock
xchg
filds
mov
sbb
outsb
scas
jl
enter
jb
mov
insl
jns
jecxz
pop
xchg
xor
push
repnz
sub
xor
dec
inc
cmp
insl
and
cwtl
shrb
shll
dec
lahf
hlt
loopne
in
jno
xor
mov
push
int3
mov
cmp
inc
push
mov
dec
flds
out
jbe
in
ret
aad
mov
cli
lods
sub
sti
movsb
clc
cld
mov
push
xor
cltd
cli
add
xchg
fs
gs
and
test
dec
mov
jb
rep
mov
push
cmp
mul
jp
jg
cmp
jmp
fildll
lds
mov
mov
and
movsl
xlat
jae
cmp
xor
inc
xchg
lods
lret
push
xor
and
xor
jnp
dec
int
push
jns
push
pusha
jp
ljmp
imull
jbe
jno
push
mov
xchg
pusha
push
outsl
sahf
stc
lcall
movsb
imul
sti
in
lds
jmp
shll
add
mov
fnsave
push
adc
xor
sbb
subb
inc
outsl
inc
aam
andb
inc
test
int
in
ret
hlt
mov
shrb
inc
cmp
push
fwait
mov
sub
add
xor
pushf
push
push
jne
lcall
std
mov
pop
scas
mov
ret
iret
test
shll
orl
dec
pop
call
out
lods
mov
pop
mov
and
sub
pop
stos
fstpt
movsb
adc
add
pop
aas
out
dec
mov
sarb
jns
ss
movsl
and
in
es
pushf
arpl
stos
lock
adcl
shlb
lds
lds
in
push
jbe
test
loope
push
pop
push
xor
add
mov
das
dec
lret
mov
inc
add
push
adc
jle
in
pop
xor
cmp
jmp
jmp
arpl
sahf
adc
test
pushf
and
sub
sub
popa
jae
imul
pop
clc
mov
xlat
jo
jns
cmpsl
or
cmp
push
mov
sti
pop
jnp
repz
aas
cs
lock
in
divl
ljmp
pop
into
mov
cmp
std
dec
adcl
mov
hlt
out
popf
jmp
daa
lods
adc
es
fistpl
mov
dec
enter
cli
dec
sti
movsb
leave
gs
sub
aam
dec
movsl
movsb
in
mov
sub
dec
xlat
xor
dec
in
js
movsl
mov
and
loope
shll
or
add
idiv
push
bound
xlat
adc
mov
mov
in
push
subb
cmpb
ljmp
mov
or
loope
fcompl
pop
mov
xor
push
mov
fwait
fs
mov
popa
mov
xor
cmpsl
test
shlb
fidivl
lods
das
into
add
outsb
jno
fcomps
xchg
push
shrl
ds
hlt
jg
ret
inc
pushf
cmp
push
sbb
clc
andl
movb
mov
movsb
mov
inc
pushf
adc
ljmp
xchg
pop
xor
out
dec
or
rcrl
mov
imul
add
mov
and
shrl
jmp
in
out
cmc
or
shr
mov
adc
jbe
std
iret
in
inc
rclb
xchg
xor
xchg
notb
sub
and
aad
aaa
sub
and
sub
or
les
call
shll
repnz
es
push
in
xchg
push
xchg
xor
scas
sbbl
and
mov
cwtl
loop
arpl
ficoml
dec
dec
aaa
ds
loope
inc
xchg
pop
data16
loopne
add
testl
test
mov
je
mov
xor
outsl
jg
in
and
dec
lea
push
add
sti
inc
scas
cltd
dec
inc
cwtl
xor
and
daa
or
dec
cmc
sahf
jg
test
jge
test
inc
mov
mov
push
sbb
shlb
dec
push
stc
out
gs
jae
std
sti
xchg
lods
or
cmp
or
out
xor
sti
lock
in
mov
faddl
mov
jnp
lods
push
in
xchg
and
jb
xchg
movsl
sbb
das
or
and
pusha
sbb
cmp
cmp
sub
adc
mov
shll
mov
cmpsb
mov
jg
rorb
cmp
aaa
int
call
dec
or
popa
sbb
sti
or
mov
pop
insl
dec
inc
add
mov
mov
sub
inc
mov
push
mov
enter
fiadds
imull
gs
in
push
fidivrl
lods
push
adc
push
sbb
jb
or
hlt
data16
sub
enter
hlt
jne
pop
or
into
int
xchg
mov
ss
int
ljmp
push
movsl
ds
or
test
loope
out
repz
sub
push
sti
test
stos
add
aam
sub
ret
in
cmp
add
in
mov
je
and
nop
xor
mov
rol
or
inc
lds
notb
inc
rol
es
sarl
int3
cwtl
popf
adc
lods
sbb
mov
adcl
shr
enter
jmp
outsb
ds
test
bound
fisubrs
mov
scas
jo
jle
xchg
ljmp
push
sbb
xchg
cmc
lahf
ret
mov
inc
cmp
pop
call
cli
dec
cmc
dec
push
pop
mov
mov
add
cltd
and
xor
das
pop
mov
pop
push
shl
cmp
dec
inc
add
xchg
fadd
xchg
push
aam
adc
dec
dec
pop
jo
out
fisubrs
and
add
repz
push
mov
cmp
data16
ret
or
orb
in
fcmovne
mull
jecxz
or
pop
lcall
or
cmpsl
cmp
dec
push
push
push
adc
pop
adc
hlt
add
jns
mov
pop
insl
lea
inc
dec
pusha
out
mov
push
rcrb
test
and
xor
sbb
jge
rorl
push
pop
dec
adc
mov
or
sbb
add
push
rorl
fdivrs
xlat
gs
mov
mov
int3
inc
inc
push
push
add
xchg
outsb
gs
sub
mov
sti
mov
out
xor
outsl
shll
xlat
fwait
bound
popa
jge
xor
inc
xchg
mov
sub
movsl
out
in
rcr
lret
lret
or
loop
jnp
adc
scas
pop
sti
and
mov
aad
and
push
cld
hlt
adc
add
test
int3
insl
push
pop
push
xchg
sbb
in
xchg
mov
rolb
mov
inc
dec
xlat
push
in
and
mov
call
imul
mov
fbld
cmp
cmp
inc
xchg
pop
test
mov
testb
shr
inc
in
out
dec
jnp
or
sahf
data16
push
loopne
mov
fsts
jns
arpl
sar
mov
push
xor
fs
lea
push
in
jns
dec
pop
and
ja
aas
mov
push
ficoms
popa
int
mov
les
push
and
scas
jbe
jno
lods
xor
mov
lcall
and
jo
xor
stos
mov
add
xchg
inc
in
out
cmp
leave
and
adc
push
fwait
enter
xor
mov
xchg
scas
addr16
sub
jmp
xchg
mov
std
lods
add
sbb
mov
movsl
sub
pop
cwtl
adc
sub
insb
movsl
popa
movsl
andb
and
cmc
pusha
data16
jmp
and
ds
bound
sbbb
and
and
insb
cmpsb
xchg
sub
sub
mov
cmc
inc
mov
out
mov
iret
popf
out
push
pop
popf
add
fdivrl
jge
dec
int
testl
ret
jge
push
jbe
dec
xor
rolb
ss
rclb
cmpsl
and
or
andb
into
mov
negb
xchg
outsl
xor
or
int
test
sub
xchg
push
sub
adcl
aad
shlb
js
stos
push
scas
fisttps
adc
rcrl
xchg
inc
sahf
repz
cmp
out
fs
mov
call
mov
int3
call
out
loop
inc
inc
pop
push
rcr
pop
sub
sub
mov
mov
ds
ss
push
cltd
xchg
adc
out
jae
bound
in
sbb
mov
sahf
mov
aam
lock
push
xchg
test
inc
add
mov
cmp
notb
mov
je
arpl
add
mov
aaa
mov
jl
into
push
bnd
orl
dec
scas
xor
sahf
test
rcll
xor
lcall
jl
xor
shll
sub
loop
lcall
xabort
mov
mov
dec
aaa
lds
push
in
mov
push
mov
sub
sub
mov
fldcw
xor
xor
pop
adc
or
mov
push
add
int
das
push
mov
test
adc
or
ficompl
aad
sar
cmpsl
cwtl
test
cmp
cld
dec
push
inc
xlat
fistps
int3
sbb
out
xor
cmp
cld
rcrb
inc
or
mov
out
pushf
pop
adc
mov
cmpsb
fnstcw
in
and
repnz
icebp
ja
outsl
add
lahf
scas
and
push
jns
in
xor
dec
jp
les
adc
or
inc
inc
and
cld
pop
in
out
scas
shll
lods
and
mov
inc
xchg
ret
loopne
jmp
pusha
lds
pop
in
dec
dec
in
out
dec
or
adc
push
les
jecxz
dec
mov
cmc
push
and
arpl
xchg
adc
dec
lret
and
jns
push
mov
ror
fstpt
popa
outsl
xor
call
and
mov
js
pusha
jo
popf
pop
into
mov
pop
mov
outsl
sub
or
test
push
push
push
outsb
or
pop
out
std
push
aad
mov
jecxz
aas
or
icebp
sbb
gs
sahf
popw
cld
mov
in
pop
mov
daa
mov
repz
popf
scas
mov
test
mov
inc
in
sbb
and
add
mov
movsb
sub
cmp
xor
inc
in
pop
sub
or
sbb
scas
arpl
mov
sub
jns
ds
cmpsb
aad
js
xchg
stc
dec
jmp
xchg
or
sahf
and
sahf
pusha
sti
cs
jns
mov
pushw
test
xchg
inc
cli
pop
dec
lcall
pop
mov
fsubl
rolb
mov
dec
inc
xchg
mov
pop
stos
arpl
mov
or
or
xchg
out
lods
add
fbstp
mov
hlt
sbb
mov
filds
sbbl
ljmp
jg
repnz
jecxz
orb
jp
pop
insb
out
das
jo
cmp
shll
inc
mov
cmp
push
lods
cmp
lods
mov
sub
cmpsl
push
cmp
add
pop
inc
repnz
aaa
xchg
imul
aas
ds
mov
or
cmp
adc
std
sti
push
jl
ret
jmp
inc
sti
in
xlat
jo
popf
shlb
repz
outsb
mov
daa
aas
js
pop
and
dec
out
pop
sbb
ret
mov
mov
lahf
cltd
ss
adc
loopne
aas
bound
cmp
sub
test
jl
sbb
jmp
ret
push
cwtl
lcall
arpl
outsb
dec
out
scas
lahf
dec
mov
bound
dec
dec
inc
mov
out
or
rorl
cltd
shl
roll
clc
js
mov
mov
push
dec
mull
dec
arpl
push
or
pop
addr16
jl
push
pop
lahf
adc
lea
mov
pop
icebp
inc
pop
aaa
sahf
adc
push
mov
sub
xlat
filds
lcall
push
test
mov
rcr
or
popf
sbb
sbb
ret
ss
xchg
jbe
mov
int3
testb
ficompl
cs
insb
sbb
arpl
xor
fcomps
add
fcoml
push
adc
in
into
add
cmp
jle
test
mov
jbe
lods
mov
inc
mov
sub
stos
or
inc
dec
rcr
mov
inc
test
jg
enter
je
dec
mov
xchg
push
fmuls
sub
jae
xor
test
push
pop
int3
test
adc
mov
mov
pop
or
fcoms
lods
xchg
fistpll
scas
into
inc
int
jge
lds
js
int3
loope
imul
mov
enter
inc
out
inc
in
adc
pop
into
hlt
popf
loopne
inc
je
jecxz
cmp
data16
fucompp
inc
xchg
out
or
inc
pop
mov
fisttpl
movsb
out
out
dec
pop
aaa
and
fucomip
jo
adc
push
push
inc
adc
jmp
and
test
and
sbb
dec
movsb
subb
push
xor
fsub
cld
fcomi
lret
mov
or
es
and
mov
cmp
or
inc
not
cmp
pop
add
mov
sbb
or
jmp
pop
movb
jmp
pop
mov
mov
jbe
insl
out
cs
shll
es
in
xchg
jp
inc
add
je
icebp
sti
push
and
push
jne
pop
pop
movsb
cmc
push
xchg
sbb
push
fldl
add
push
adc
pop
mov
mov
clc
pop
dec
ljmp
xor
adc
inc
mov
xchg
mov
stc
dec
sbb
not
xor
addr16
cltd
cmp
lods
fcompl
in
or
inc
mov
setno
xor
mov
bound
shrl
jecxz
cltd
fwait
les
pop
xor
inc
add
mov
jno
xor
loop
lahf
pop
out
fisubrs
fs
pop
add
fimull
sub
and
shll
mov
cltd
pop
add
adc
cli
sarl
lods
sbb
roll
out
arpl
lods
dec
fcompl
jne
inc
adc
mov
jne
cmp
lahf
sub
leave
fwait
add
stc
mov
adc
xor
lahf
mov
dec
call
test
mov
jle
mov
sbb
mov
xchg
out
loope
cmp
xchg
pop
inc
inc
sbb
jmp
fs
lock
cs
adc
mull
test
xor
andb
rcr
adc
enter
adc
push
out
into
or
sbb
xchg
mov
sub
mov
xchg
mov
es
push
push
jne
ss
xor
adc
adc
or
xchg
je
or
enter
jns
aaa
mov
add
jp
dec
or
xor
pop
lahf
mov
pop
jne
fdivs
xor
and
cwtl
and
pop
and
lret
in
outsl
push
mov
fadd
pop
imul
pop
ret
lds
ss
pop
ret
add
jbe
fucomi
cmp
push
inc
popa
mov
sarb
fs
pop
mov
add
ret
pop
cmp
inc
fcom
es
adc
jmp
xchg
sarb
jp
pop
xchg
pop
mov
xchg
repz
pop
push
popa
pop
hlt
mov
xor
xchg
lret
push
loop
xchg
cwtl
mov
add
ret
and
lods
xor
leave
cltd
xor
push
jae
jmp
mov
out
movsl
sub
or
or
pop
mov
and
inc
or
mov
jle
es
cmp
mov
jae
and
ret
out
sub
cwtl
ja
xor
inc
or
jl
in
push
in
cld
sbb
or
xchg
xor
int3
lods
hlt
or
pop
flds
sbb
push
xor
insb
push
hlt
dec
lods
stos
fistpll
cmpsb
push
ret
inc
adc
popa
and
iret
mov
loopne
or
jp
dec
out
adc
lcall
mov
repz
push
sbb
movsb
into
push
loope
dec
ds
push
xor
lea
mov
add
adc
push
adc
ret
sbb
adc
stos
icebp
and
fidivrl
jl
mov
out
test
xor
mov
notb
mov
xor
pop
shrb
xchg
cmpsl
push
dec
sti
leave
das
add
es
imul
negl
inc
dec
jle
bound
aad
sbb
testl
dec
daa
jb
arpl
mov
sub
sbb
cli
sbb
add
cmpsb
add
mov
mov
jne
push
mov
mov
loope
mov
xlat
mov
insb
pusha
add
pop
test
leave
mov
add
inc
jp
jno
int
push
fisubl
sahf
iret
cs
dec
xchg
out
xchg
sub
add
adc
adc
es
mov
adc
cmp
mov
dec
mov
and
mov
push
mov
xor
pop
out
popf
sub
loop
jo
iret
enter
or
mov
sub
adc
xchg
cmp
sbb
cld
pop
ljmp
xlat
jae
out
xchg
lods
aad
mov
pop
mov
popf
jb
aas
test
fsubrl
sub
inc
inc
loop
sahf
into
pushf
leave
adc
bound
arpl
mov
push
xor
test
fistl
inc
flds
imul
out
cmpsb
or
add
arpl
xor
push
mov
dec
int3
not
jns
jl
mov
xor
lods
jne
push
push
loopne
mov
bound
xorl
mov
xchg
cmp
adc
push
pop
loop
cmpsl
xchg
xchg
mov
and
out
lods
insl
push
insl
adc
push
sub
rorb
cltd
xchg
add
pop
outsb
cwtl
sub
cs
pop
repz
neg
lds
push
or
mov
push
int
rcrl
cmp
out
add
lcall
sti
lods
inc
lret
out
enter
sub
jecxz
push
cwtl
in
enter
jmp
inc
loop
cltd
divl
jnp
fwait
int
sub
movzbl
dec
ja
pop
lods
xorb
hlt
fldenv
inc
lea
lret
out
out
adc
clc
cmc
fsubrs
jne
dec
repz
in
xor
mov
sub
leave
fdivp
mov
mov
pop
xchg
fcomps
mov
cmpl
mov
mov
mov
hlt
xchg
mov
dec
jl
movsl
out
js
pop
xchg
or
cmp
sub
jmp
mov
scas
lods
les
jnp
push
ss
imul
popf
push
test
adc
lds
jmp
sub
or
add
lock
hlt
mov
mov
jo
cmp
xchg
and
fnstsw
jnp
stos
addr16
inc
mov
sub
lock
pop
das
das
inc
daa
push
out
cltd
add
cmp
outsl
cmpl
xchg
jl
xor
sarb
push
test
xchg
les
sbb
icebp
sbb
ds
xor
leave
stc
xor
xchg
test
clc
xor
fcoms
jmp
xchg
and
inc
pop
leave
xchg
and
test
add
fadd
pop
jle
fwait
xchg
mov
je
fisttpl
stc
les
xorb
icebp
mov
dec
add
mov
dec
lods
mov
lods
pop
and
push
jg
fmuls
push
pop
ds
push
dec
fisttps
jne
cwtl
ret
pop
or
imul
push
mov
sbb
mov
add
in
lds
adc
or
mov
mul
inc
ja
pop
cmp
add
inc
sbb
test
stos
push
in
leave
lea
jbe
dec
divb
xor
pop
sahf
ret
sti
inc
mov
xchg
ss
adc
insb
mulb
and
push
and
jb
inc
in
mov
xor
add
xchg
and
arpl
in
aas
imull
jne
pusha
xchg
pop
fisubs
leave
adcl
lock
xor
int
inc
pop
sub
jb
xchg
ja
mov
xchg
es
adc
sbb
or
inc
mov
ss
or
dec
pop
std
cmp
mov
jnp
shlb
cmpl
sub
sbb
or
mov
cmp
pusha
lods
testl
jb
int3
test
jp
out
push
xor
add
inc
cwtl
pop
loop
gs
int
xor
cltd
mov
sahf
in
scas
jns
and
dec
dec
push
cmpsl
mov
push
aaa
popa
iret
mov
je
sub
mov
xor
ss
push
xor
jp
pop
stc
nop
cmpsl
push
inc
push
inc
push
cmp
fadds
push
scas
loop
push
adc
and
add
testb
pushf
int
leave
push
test
cs
sub
pop
mov
addr16
mov
into
rorl
jnp
fidivrl
add
adc
clc
and
mov
rcrl
xchg
xlat
std
inc
push
idivb
xchg
push
dec
shl
stos
fldcw
lods
sahf
mov
mov
rcl
and
cld
sbb
sub
data16
rclb
sbbl
lcall
push
bound
dec
or
stc
fdivrl
inc
jae
sbb
jl
mov
les
adc
lds
mov
xchg
pop
jp
shlb
sub
mov
addr16
mov
arpl
mov
int
xchg
dec
jbe
mov
lret
sub
cmc
inc
dec
aaa
mov
lods
xor
add
imul
xchg
fidivrl
and
movsl
addl
dec
rcl
scas
xchg
stos
sbb
jno
cmc
cmp
adc
jns
outsb
ss
adc
pop
imul
aam
mov
and
adc
out
scas
jns
lahf
aad
cmpb
adc
cmpsl
aam
xor
or
rcrl
cmp
mov
sbb
mov
dec
ret
or
ret
std
and
push
xchg
add
lods
add
mov
shrb
in
adc
js
inc
mov
shll
cmp
mov
imul
push
fsubrl
sbb
xor
cld
dec
ret
es
sbb
lcall
sbb
sbb
inc
lock
and
out
push
in
shrb
add
jnp
or
inc
sbb
fs
sub
push
lods
pop
hlt
mov
adc
or
mov
xchg
outsl
mov
push
mov
les
popl
gs
pop
mov
inc
mov
imul
jns
adc
xlat
cmp
movsl
add
add
mov
outsl
xchg
nop
aaa
idivb
mov
adc
mov
fstps
push
pop
sub
mov
ret
cs
mov
sbbl
mov
cmpl
int3
fdiv
shrd
int
shr
fnsave
clc
inc
adc
hlt
and
jl
adc
pop
fdivs
inc
out
adc
das
xorl
lret
cmp
in
jns
fxch
rcrb
clc
lcall
adc
in
mov
pop
pop
push
xchg
rolb
call
add
loopne
adc
filds
mov
mov
outsb
xchg
xchg
xor
mov
xchg
jns
or
xchg
scas
and
adc
bound
push
dec
adc
adc
or
in
mov
pusha
fisubs
xor
and
jecxz
stos
inc
xchg
data16
cwtl
test
scas
adc
dec
dec
shl
cmp
dec
pusha
push
pop
imul
int3
pop
xchg
pop
adc
lock
adc
pusha
mov
and
test
adcb
pushf
push
enter
cld
cmp
adc
icebp
movsl
pusha
loope
and
push
jge
nop
in
push
aad
inc
sub
pop
and
stc
dec
fnstsw
pop
rclb
arpl
dec
rorl
pop
aam
xchg
jae
mov
insb
push
es
or
mov
int
cmc
and
dec
push
jns
fwait
into
pop
out
mov
push
roll
jne
lods
aam
clc
test
lea
mov
push
sbb
push
sbb
xchg
fmulp
lock
dec
icebp
pop
xchg
add
lods
lahf
cmp
mov
mov
jnp
jb
sti
sbb
fcoms
stos
xchg
lods
mov
ja
pop
mov
sbb
call
xchg
mov
lock
scas
jl
sti
scas
fmulp
addr16
lds
shl
in
in
mov
ret
loopne
je
notl
sub
or
fiaddl
loop
mov
cmpsl
pop
add
lea
xchg
sbb
add
mov
inc
std
mov
xor
fcmove
dec
mov
pop
inc
push
ss
pop
call
push
cld
push
jo
rclb
insl
lret
adc
mov
bound
inc
ret
cwtl
pop
repz
push
jg
cld
aas
jg
adcl
jecxz
sub
rorb
and
daa
daa
push
mov
sub
inc
cmp
dec
sbb
mov
icebp
mov
jns
imul
or
mov
hlt
xchg
test
cli
cltd
jnp
xchg
dec
xor
jnp
inc
inc
out
enter
push
pop
lock
or
adc
loopne
out
jl
lock
inc
dec
lahf
icebp
sbb
inc
xchg
push
ja
sub
aaa
repnz
or
in
pop
iret
jno
adc
std
mov
fcompl
int
mov
sti
lcall
inc
mov
test
js
pop
push
mov
jg
lds
inc
push
xlat
mov
inc
out
jnp
out
jecxz
fbstp
mov
pinsrw
cmc
daa
rol
xchg
jp
xchg
add
push
imul
push
pop
popa
lds
mov
psraw
inc
addr16
sub
std
leave
cwtl
ds
fcmovnu
xchg
jl
push
mov
push
psllq
adc
mov
fstps
cmc
cmp
shl
into
arpl
jl
mov
lret
lahf
or
mov
pop
and
sbbl
mov
and
lods
push
lahf
lahf
cmc
jae
je
push
xchg
es
jle
push
add
lock
dec
jb
out
inc
jo
jl,pt
xor
mov
out
sub
mov
popa
call
add
and
int
movsl
pop
in
inc
jmp
mov
jns
jbe
jne
mov
test
roll
out
dec
iret
adc
ds
sahf
jne
or
stos
jecxz
xor
sub
or
jl
jp
movsb
adc
mov
imul
in
je
sub
aaa
mov
jmp
test
and
cs
xchg
lahf
cwtl
mov
arpl
sbbb
add
xchg
sub
je
sarb
repz
dec
aam
xor
icebp
sahf
jb
dec
and
adc
lahf
lds
push
popa
mov
xor
nop
jns
mov
cs
mov
push
lea
movsb
xchg
jl
dec
jb
sub
out
xchg
inc
nop
dec
arpl
fisubl
push
cmp
les
loop
ret
out
sbb
mov
inc
sub
rcl
jne
ss
and
out
xchg
and
out
outsl
push
pop
mov
shr
movsl
idivl
jbe
test
test
aad
pushf
dec
adc
fcompp
addr16
inc
inc
jge
push
mov
mov
ss
icebp
or
fs
inc
mov
cld
in
leave
arpl
jbe
adc
inc
xchg
hlt
mov
adc
data16
sub
mov
or
xchg
nop
push
xor
icebp
sbb
ds
sahf
mull
dec
lock
andl
arpl
push
fscale
fsubrl
in
xor
aaa
bound
lret
push
pop
jp
iret
clc
repz
andb
flds
push
scas
mov
les
adc
sub
jmp
mov
loopne
mov
jge
loope
push
jne
xchg
mov
mov
int
jns
cs
rolb
inc
in
dec
fistps
add
cmp
adc
pop
rcr
push
mov
inc
int
sbb
pop
scas
int3
in
pop
adc
sbbb
lret
sbb
lahf
jg
mov
aas
xor
cmp
aaa
push
repnz
lods
add
mov
fnsave
inc
mov
cmpsb
insb
imulb
daa
add
xorl
push
out
stc
scas
insl
and
xor
jl
loope
mov
jnp
and
cwtl
ret
roll
out
es
jl
jb
daa
adc
lods
pop
shrl
mov
lcall
es
imul
mov
fldl
daa
cmp
sub
ret
jne
mov
lods
dec
fadd
adc
cmpl
rolb
shrl
dec
imul
je
pop
mov
lock
pushf
fwait
push
cmp
pop
sub
mov
sub
je
sbb
call
sub
out
cwtl
scas
cmp
leave
adc
subb
mov
cvttps2pi
outsb
fcmovnb
aam
and
sub
lods
cwtl
mov
nop
push
push
push
repnz
push
in
mov
lock
mov
mov
adc
jl
inc
jge
cmp
ror
subl
push
sub
xchg
ljmp
sarl
lock
sbbl
data16
sub
mov
flds
sub
aad
xor
data16
sub
movsb
or
insl
add
loop
xchg
lds
pop
inc
shlb
mov
aas
push
add
pop
movswl
lret
push
adc
inc
or
inc
rcr
xlat
pop
xor
mov
inc
cmp
gs
mov
out
je
test
fdiv
adc
sub
dec
stos
jae
jae
mov
push
sub
adc
enter
sub
adc
pop
mov
ljmp
repz
and
push
lods
lds
clc
and
xor
cld
dec
sbb
or
jne
push
pop
inc
cmpsl
jmp
jno
xor
insb
sbb
addr16
xor
aam
push
lods
mov
std
clc
pop
xor
out
fnstenv
fmuls
lret
es
pop
iret
out
icebp
mov
cwtl
jae
stos
mov
ljmp
mov
xchg
out
mov
cmp
add
mov
and
icebp
js
add
sub
mov
sbb
fstpl
mov
jl
movsb
stos
test
jnp
bound
jecxz
adc
imul
mov
sub
pop
dec
jne
sbb
jl
push
sub
test
imul
enter
pop
repnz
xchg
and
inc
xor
lds
jle
pop
daa
adc
add
xor
sbb
mov
mov
int3
mov
in
jge
xchg
pop
pop
sbb
push
clc
push
leave
xchg
cmpsb
std
cmp
test
stos
inc
mov
call
incb
ss
add
mov
mov
adc
sbb
shrl
xchg
add
lock
pop
andl
pop
lahf
test
cmp
push
jne
sbb
sbb
mov
outsl
mov
sbb
rcll
lahf
into
cmp
mov
cmp
out
push
sbb
pusha
out
and
loop
sub
pop
inc
rorb
jmp
sub
out
mov
and
loopne
xor
leave
cltd
ljmp
fwait
inc
mov
sbb
lea
mov
xor
outsb
enter
das
scas
jns
pop
pop
adc
jne
or
cmp
cli
pop
xlat
xor
cmp
sbb
lds
ds
xchg
pop
stos
dec
cwtl
jecxz
ret
fcmovnu
dec
iret
cmp
sub
vpsubusb
sbb
stc
cmc
pop
pop
sbb
dec
daa
cmp
sbb
ljmp
push
cli
popa
aas
fsubs
outsl
sub
icebp
mov
cmc
mov
pusha
xor
sbb
lods
int
clc
cld
inc
push
mov
out
jmp
sbb
jae
jle
jg
or
neg
and
jle
sub
mov
in
pusha
int
loopne
mov
loopne
mov
movsl
mov
or
cmp
xchg
enter
push
dec
int3
cmp
popf
out
xor
add
and
icebp
iret
lock
jne
xor
and
test
stos
pop
sbb
ret
test
or
insl
push
pop
jo
cltd
xor
mov
pop
repz
cmpsl
adc
mov
stc
xor
mov
imul
mov
stos
or
outsb
sub
jae
mov
scas
hlt
hlt
sbb
jne
iret
fimuls
repnz
mov
int
out
sarl
pop
xchg
das
loope
push
pop
sbb
loopne
test
jg
xor
clc
sbb
pop
es
sbb
aas
add
dec
pop
mov
rcr
dec
lods
aam
lret
mov
sub
repz
jmp
push
aad
adc
mov
xor
lret
dec
insl
cmp
sub
cmp
dec
pop
add
xchg
jp
xor
rclb
mov
mov
pusha
sbb
ds
and
dec
adc
std
push
add
pop
and
loopne
xor
and
aaa
imul
inc
int3
es
cs
insb
aaa
or
shl
testb
stos
enter
jbe
mov
in
loop
out
cmp
push
icebp
adc
jle
add
jb
sub
out
test
xchg
outsb
adc
test
movsl
xor
xor
insl
movsl
pop
les
pop
dec
repz
fisttpl
mov
clc
jecxz
xor
repz
pop
sub
jecxz
cmpl
lret
cmp
sub
ja
mov
and
jb
sbb
mov
es
cwtl
lret
inc
in
aad
sub
imull
stc
fdivl
sbb
xor
pusha
les
pop
clc
mov
mov
inc
sti
mov
dec
or
imul
xchg
pop
lret
and
xor
mov
stos
scas
addb
push
iret
xacquire
ret
pop
jmp
in
or
add
cmc
push
aad
in
scas
pop
jne
hlt
push
dec
mov
mov
or
gs
js
adc
xor
sub
clc
insl
and
mov
pop
ret
adc
pop
shlb
or
sbb
mov
js
dec
icebp
das
cmpb
sti
bound
xor
pusha
roll
push
ljmp
cmp
movsb
and
movsl
pop
cmp
dec
jle
cwtl
jmp
sbb
insl
pop
testl
addr16
xchg
dec
mov
in
out
ja
aam
out
repz
mov
and
push
xchg
ljmp
mov
les
mov
ret
pop
or
test
mov
push
push
out
jnp
xchg
mov
add
mov
inc
fidivrs
push
sbb
pop
push
cld
bound
scas
aas
pop
lahf
stos
mov
inc
or
rclb
xchg
add
testb
sbb
dec
popf
cwtl
test
jle
icebp
fadds
das
aam
add
sbb
inc
sub
sbb
push
push
mov
mov
push
xchg
outsl
push
ret
or
pusha
cmpsb
insl
pusha
mov
repnz
push
mov
adc
xor
pop
je
test
mov
dec
adc
jae
inc
xchg
inc
or
sub
cmp
mov
outsb
cld
mov
xor
cs
mov
fcomip
xor
lret
out
pop
ljmp
std
dec
inc
pop
and
dec
mov
notrack
outsb
cltd
or
or
scas
aas
xchg
sbb
scas
cld
and
or
cwtl
push
mov
lahf
or
jg
inc
and
xor
pusha
push
jne
sbbl
jge
cmpb
dec
push
lods
scas
movsl
jle
xchg
mov
fsubs
xchg
gs
scas
rcrl
aaa
mov
out
xchg
mov
cmpsb
jae
dec
dec
add
xchg
and
sub
popf
cmc
mov
inc
pop
adc
dec
test
sbb
je
inc
into
push
jb
and
mov
fcmovb
bound
pop
jg
adc
negl
and
hlt
mov
out
fnstcw
mov
xchg
sub
imulb
lret
add
dec
fs
sarl
push
mov
inc
mov
mov
mov
fwait
mov
je
jbe
sti
jmp
push
mov
adcl
push
fnstcw
ffree
imul
pop
xchg
pop
mov
movb
callw
pop
push
or
sub
or
subl
xchg
and
xchg
ja
sbb
push
inc
push
scas
lret
or
jge
lea
ljmp
and
jbe
into
pop
jae
out
scas
bnd
or
shlb
xchg
pop
cmpsl
jge
jl
sbb
pushf
mov
inc
cmpl
sbb
lea
xor
adc
loope
mov
lds
sahf
and
insb
sub
sahf
push
push
into
sub
les
fsub
xchg
outsl
loop
xor
mov
mov
sub
test
jnp
mov
xor
mov
out
stos
sub
fildl
cmpsl
sarb
ljmp
pop
shl
movsb
jl
test
push
sbb
cmp
clc
inc
rcrl
js
jg
sbb
jecxz
add
lret
push
aas
cmp
xor
add
fwait
mov
jge
jo
das
and
incl
pop
shl
sub
std
test
es
cmp
loopne
mov
adc
les
adcb
mov
push
cmovle
cs
mov
cmpsb
push
pop
int
and
addr16
jl
add
movsb
gs
jae
scas
adc
sub
jnp
mov
sbb
inc
insl
pop
enter
mov
stos
sar
mov
mov
or
sbb
gs
pop
jmp
mov
xor
cmpsl
dec
push
ds
lods
addb
sub
icebp
pop
data16
loope
or
roll
lods
inc
adc
loopne
mov
call
push
addb
jp
idiv
adc
daa
mov
sbb
rcrb
cs
clc
loopne
mul
int3
mov
daa
xchg
ret
cmp
xchg
test
add
test
nop
idiv
arpl
inc
pop
add
dec
inc
pop
dec
call
mov
arpl
jg
aas
imul
push
push
lahf
int3
mov
ds
out
in
sbb
xchg
in
int
jecxz
sub
addb
xor
dec
daa
mov
fbld
jae
sbb
cmc
pusha
inc
cmpsb
fnstenv
inc
jmp
je
pop
dec
pop
add
insl
dec
push
cmp
pop
fldt
dec
addr16
sbb
enter
repz
and
repnz
lds
fs
scas
ds
push
scas
mov
imulb
mov
push
sbb
daa
das
and
repz
ret
add
jo
mov
filds
and
leave
stos
ret
xor
push
ds
sub
rorl
jecxz
push
repz
pop
ja
jo
lahf
push
cli
shlb
outsb
fsubl
mov
out
jae
leave
sarb
ret
iret
jl
cmpsb
arpl
jnp
add
stos
xchg
push
ret
addr16
int3
jge
cmp
cmp
out
inc
sbb
inc
insb
adc
pop
add
pusha
push
or
lea
jp
push
lahf
jl
loop
dec
dec
jp
dec
rorb
jle
ret
ja
and
sbb
ret
mov
mov
adc
mov
jl
and
shlb
lcall
inc
sub
sub
rol
xchg
adc
cli
leave
inc
aas
mov
loopne
mov
mov
iret
int3
or
outsl
adc
repnz
popf
jne
outsb
sbb
push
inc
pop
mov
pop
add
aam
es
and
ljmp
jge
jns
and
in
jmp
inc
nop
cmp
imul
xchg
ljmp
addr16
jmp
lret
inc
popa
mov
add
aam
outsl
pop
sub
jne
sub
mov
mov
stos
pop
xchg
push
pushf
xchg
dec
xchg
mov
dec
lahf
mov
fdivrl
js
jb
or
sub
or
push
lahf
dec
xchg
aas
aas
aad
and
fwait
rcll
out
cmp
popf
rcl
xchg
mov
imul
push
and
hlt
pop
std
loopne
aad
push
cmp
in
push
mov
scas
scas
es
test
repnz
in
xchg
mov
pop
into
xor
mov
fidivs
nop
add
xchg
mov
out
adc
into
fucomp
cli
jnp
xchg
cmc
rorb
imul
pop
mov
loope
push
pop
add
mov
sub
sbb
js
cmp
cmp
push
push
xor
push
adc
std
and
xorl
mov
rcll
adc
mov
or
ret
aad
mov
push
pop
pop
jbe
jp
test
test
mov
insb
int
sahf
aaa
jnp
xchg
hlt
mov
fiadds
imul
testl
pop
in
lahf
xchg
mov
enter
in
arpl
jnp
mov
leave
push
in
add
jl
push
outsb
nop
xchg
pop
loop
sbb
fcmovb
je
mov
xchg
js
push
out
xchg
ror
inc
mov
add
sbb
fcoml
sub
sub
int3
jmp
jno
inc
jno
int3
mov
mov
mov
jmp
mov
imul
and
adc
jae
nop
push
test
cmpsl
push
sbb
ds
or
test
and
lds
shlb
es
sti
cs
rorl
jae
xorl
push
mov
cmpsb
cmp
dec
sbb
imul
push
fiaddl
mov
ds
add
sbb
movsl
sub
arpl
and
adc
cmpsb
push
lahf
jg
xchg
cmp
lock
xor
loopne
sub
fwait
jecxz
cwtl
mov
xor
sbb
rcrb
push
bound
ja
dec
subb
cs
sub
loop
inc
xchg
out
sbb
lahf
out
out
sbb
popa
pop
andl
jns
aas
xor
xlat
dec
ret
lods
lret
cltd
lods
rcll
das
pop
and
mov
mov
xor
dec
add
leave
mov
decb
lret
stos
jns
nop
ljmp
loopne
cmpsl
fiaddl
cmp
push
rcll
pop
sbb
pop
xchg
or
pop
dec
jmp
mov
leave
xor
mov
sbb
inc
xor
adc
xchg
jle
xchg
test
movsl
inc
mov
shrl
popf
std
out
int
pusha
jge
or
lds
or
adc
xchg
cmp
mov
sbb
fwait
xor
std
mov
add
fcoml
or
jle
sbb
int3
orb
cli
dec
and
mov
fmull
roll
mov
sbb
int3
adc
mov
push
sar
adc
xor
cs
xchg
insl
data16
pop
test
mov
enter
inc
fs
mov
push
testb
sub
js
sub
enter
fcmovb
clc
lahf
push
test
fnstsw
dec
in
roll
and
sbb
pop
fcmovne
jg
daa
lea
insl
xchg
ds
or
out
mov
fstl
data16
adc
adc
lock
ret
cmp
clc
daa
loop
nop
sbb
jp
adc
lret
in
negb
jne
rcrb
xorb
sbb
dec
cmpb
enter
int3
xor
movsl
fstpl
imul
push
outsl
xor
leave
scas
addl
push
mov
mov
notb
outsl
pop
cmp
cmpb
addr16
loopne
mov
inc
cmp
fadds
xchg
xchg
addb
and
jb
mov
or
aam
jge
aaa
jb
dec
and
pop
mov
cmp
mov
mov
outsl
test
mov
inc
lods
jp
mov
push
out
push
nop
mov
add
lret
push
mov
or
and
dec
push
mov
sub
mov
je
adc
rcrb
xchg
mov
jae
scas
stos
mov
pmulhw
and
int
ja
jmp
dec
fnstsw
dec
lea
leave
xlat
in
gs
pusha
xor
fs
loopne
scas
sti
xchg
je
adc
outsl
leave
movsl
sub
fsubrp
lcall
mov
xchg
jmp
or
loop
hlt
add
jns
or
add
inc
inc
pop
int
cld
pop
clc
rol
jnp
xor
sub
jecxz
imul
sbb
out
sub
cwtl
add
lret
mov
enter
and
fdivl
mov
in
cmp
push
pop
pop
sbb
insl
leave
jmp
pop
cld
rcrb
sub
daa
jnp
pusha
pop
aaa
jnp
mov
or
jmp
sbb
add
mov
xchg
inc
push
jmp
mov
fstps
xchg
push
leave
mov
enter
testb
iret
out
sahf
pop
sti
xor
cmp
popa
adc
xchg
xor
lahf
fldln2
dec
jbe
repz
jno
mov
pushf
mov
xchg
mov
shl
and
sti
add
sub
inc
fcomip
divb
add
hlt
ja
dec
out
fisubs
leave
mov
and
fwait
cmpsb
and
sbb
lods
or
mov
fld
cmc
insl
pop
out
cltd
jg
jo
sarl
repz
xor
mov
mov
mulb
push
mov
loop
cli
daa
fsubrl
enter
mov
shrl
xor
repnz
call
xor
lret
inc
sbbb
sub
sarb
pop
jb
mov
fwait
or
rorb
dec
sub
mov
cld
fsubs
fsubl
add
movsb
cltd
scas
cmc
stos
mov
add
add
mov
repnz
out
ffree
imul
xchg
push
movsb
dec
inc
push
sub
mov
cli
pop
and
mov
aas
xchg
aad
and
push
pop
pop
insl
dec
pop
iret
adcl
adc
cmp
sbb
les
xchg
sbb
imul
add
and
das
xchg
or
pop
bound
scas
jmp
shr
outsl
outsl
sarl
sub
xchg
call
stc
xor
out
dec
in
mov
inc
repz
cmpsl
imul
pop
mov
adc
mov
sbbb
movsb
mov
jne
xchg
fwait
push
pop
jmp
ds
fistps
and
cli
cmpsl
not
sbb
dec
mov
les
mov
cmp
push
xor
sbb
lods
imul
mov
dec
scas
fcoms
or
xor
jbe
icebp
or
in
ffree
fisttpl
cmc
scas
test
jae
pop
imul
loope
push
xchg
dec
fcmovbe
push
push
mov
xor
loop
pop
or
sbb
xchg
notl
incl
outsb
hlt
add
outsl
stc
pushf
clc
bound
or
jg
push
mov
sbb
adc
pushf
xor
pushf
jne
mov
jb
inc
mov
xchg
dec
je
jmpw
lods
adc
jge
mov
addb
adc
ss
nop
add
sarb
jo
add
mov
movsl
mov
int3
push
andl
xor
sub
sbb
mov
pop
and
mov
push
or
ds
pop
or
stc
push
movsb
into
cmp
sub
xchg
and
sub
cmpsb
sbb
mov
lcall
and
flds
jg
inc
pop
stos
fwait
jne
dec
mov
xchg
fsubr
mov
adc
and
fwait
dec
and
sbb
ss
mov
imul
iret
mov
inc
adc
add
mov
lea
xchg
and
push
les
dec
sub
inc
cmc
xchg
test
sbb
cmpsb
lret
loopne
in
ret
mov
mov
adc
mov
jg
in
out
outsl
sub
sub
xchg
add
aaa
adc
pop
fimuls
pushf
in
cmp
repz
out
cmpl
and
push
lods
add
sbb
cmp
das
gs
out
test
movsl
rolb
or
cli
pop
xchg
fmull
xor
fisttpl
and
insl
ss
std
inc
mov
lods
fists
xor
lcall
mov
xchg
lcall
jo
scas
mov
pusha
mov
cmpb
mov
or
push
sahf
push
sub
jns
in
notb
lods
cwtl
gs
push
ja
mov
pushf
std
dec
fisubs
fwait
push
mov
jecxz
mov
popa
sbb
pop
push
out
or
adc
out
mov
mov
in
push
std
cs
and
mov
lods
push
sbb
inc
add
mov
mov
push
pop
int
cmp
js
sub
jecxz
arpl
cmp
mov
mov
fmuls
adc
orl
rclb
sbb
out
push
mov
cmp
and
and
pop
dec
or
adc
fwait
insb
shl
das
cmc
mov
rcrl
out
xor
ds
scas
scas
adc
test
and
jp
or
pop
dec
scas
ljmp
std
push
je
or
sbb
pusha
loop
push
movsl
and
stos
arpl
lock
jmp
jecxz
mov
cmp
jae
and
mov
mov
add
sbb
push
fcmovbe
xor
mov
push
mov
sarl
nop
rorl
es
mov
insb
sub
xor
in
leave
pop
lock
rcl
mov
mov
lea
sbb
cmp
jo
test
mov
mov
test
xchg
enter
inc
xchg
loop
sti
or
mov
mov
sub
out
icebp
shlb
and
sub
aaa
xchg
sbb
xor
inc
xor
in
out
cmpsl
and
fistpll
xchg
subb
out
out
pop
dec
repnz
push
xor
js
sub
mov
in
jecxz
pushf
push
daa
lcall
jno
sti
adc
decb
fiadds
cltd
cli
imul
iret
add
jns
popf
nop
stos
repz
lods
and
lahf
mov
add
icebp
or
jge
sbb
adc
and
jnp
adc
mov
xchg
imul
push
cld
andl
or
lret
dec
arpl
imul
mov
inc
jne
divl
xchg
mov
cld
inc
es
repz
mov
je
loopne
arpl
adcb
shrb
xchg
shll
fcoml
subb
andl
inc
inc
sub
jns
inc
in
cmp
or
adc
je
push
int3
cmp
mulb
adc
xorl
gs
cmp
sbb
adc
pop
out
scas
jge
in
jne
cmp
sti
out
xchg
pmaddwd
popf
gs
add
jae
inc
fmull
pusha
fcmovbe
aam
inc
and
add
xor
cmc
lds
adc
rcll
lret
loopne
push
subb
lods
mov
dec
lcall
call
lds
stc
xorb
cmpsb
loope
pop
cmp
test
inc
cmp
shrl
jmp
xchg
mov
out
hlt
push
cli
mov
test
mov
jnp
or
lock
cmpsl
mov
mov
test
ret
imul
xor
push
mov
and
movsb
lcall
cmp
negb
iret
sahf
jnp
cs
scas
mov
push
xlat
mov
jno
int3
aad
mov
pop
cmc
cmp
lea
inc
cmp
xor
mov
push
inc
mov
adc
leave
sub
push
sub
push
adc
sub
fs
cwtl
call
nop
sbb
int
imul
shrl
adc
sbb
stos
jne
lods
jmp
and
les
int
dec
adc
mov
push
sbb
adc
and
adc
aam
add
jns
fbstp
aas
shrl
test
cmc
mov
add
ss
xchg
cmpb
push
cmpsb
and
dec
mov
jnp
sub
jle
mov
ja
fidivrs
push
in
popf
in
sbb
fs
dec
ret
ficoml
subl
fistps
xor
fnstenv
inc
aam
int
outsb
push
dec
es
aas
pop
mov
jno
int3
popf
sub
dec
pop
jge
adc
popf
adc
mov
aas
mov
and
xorl
push
cmp
push
inc
sub
mov
push
test
cld
adc
xor
dec
dec
lock
shll
fwait
outsb
xchg
outsl
enter
popf
fstpl
addr16
and
into
xor
fs
fsubs
push
adc
addr16
pop
sub
daa
hlt
gs
and
clc
inc
and
std
xorl
pop
jnp
call
fwait
sbb
xor
cltd
pop
cvttps2pi
insb
out
inc
gs
mov
sarb
jle
dec
repnz
addr16
adc
cld
mov
mov
mov
bound
sti
xor
ret
push
outsb
dec
es
adc
push
jbe
jge
ds
in
insl
in
mov
mov
push
pushf
mov
mov
aaa
mov
je
loopne
jo
mov
mov
sbb
fistps
mov
jo
lock
repz
jmp
xchg
push
out
push
nop
ljmp
hlt
shlb
push
pop
dec
and
jnp
inc
sahf
mov
sub
and
and
call
ror
or
das
xchg
pop
inc
xchg
jns
loope
mov
xorl
data16
or
sbb
mov
sub
cmp
shr
xchg
fsts
gs
cmc
pop
and
shlb
insl
add
cmp
jbe
insl
push
mov
adc
loop
mov
loope
lret
pop
jge
lock
hlt
lcall
in
sbb
inc
shl
mov
out
sub
pop
inc
mov
scas
dec
jge
push
sarl
add
mov
adc
mov
jbe
rorb
lods
jne
mov
cld
scas
lea
or
imul
ds
xor
adc
or
jnp
ret
loopne
outsb
cmp
xchg
fs
xchg
inc
jp
pop
loop
pop
mov
int3
mov
ss
sti
adc
sarb
in
stos
pop
cmp
in
mov
dec
jle
and
lahf
outsb
xor
sub
jl
pusha
mov
push
mul
mov
mov
xchg
roll
add
adc
mov
xlat
cmp
nop
pop
or
sahf
push
fiaddl
xchg
adc
sub
sbb
fmull
je
xchg
jbe
dec
mov
xor
repnz
jecxz
ret
xor
push
sub
mov
sahf
cwtl
ret
or
xchg
mov
mov
jle
jne
bound
mov
aaa
daa
and
inc
lret
lods
inc
push
xchg
push
cmp
shll
fildl
sub
xchg
insl
outsl
cld
and
lods
shll
jno
loope
in
jns
adc
jle
inc
in
pushf
lahf
cwtl
push
fwait
mov
ret
nop
sbb
dec
fcomps
push
jle
inc
cltd
call
inc
lahf
das
sub
push
cli
loope
andb
adc
scas
push
in
lods
bound
lret
insb
sub
iret
and
jb
and
pop
and
shll
cmpsb
adc
test
pop
dec
jle
pusha
push
xchg
xchg
cmp
jp
or
push
insb
es
lcall
mov
pop
iret
and
jne
jmp
ret
in
xchg
les
pusha
pop
mov
pop
xor
nop
mov
mov
dec
dec
jecxz
pop
popa
sahf
or
dec
scas
scas
pop
mov
jb
enter
les
arpl
mov
mov
test
dec
inc
in
jb
je
repnz
es
fsubl
inc
mov
ljmp
xor
push
mov
adc
adc
sub
push
lret
mov
jo
leave
xchg
xchg
dec
shll
in
sub
jns
mov
das
dec
pusha
stos
imul
movsl
xor
stos
mov
dec
fisubrl
mov
cld
cmp
comiss
test
sub
movsb
mov
adc
sbb
hlt
sub
pop
mov
aaa
movzwl
fstl
mov
lret
sbb
ret
pusha
jp
outsl
mov
sub
insl
in
sahf
insb
jo
inc
xchg
inc
div
jmp
mov
std
rol
out
out
mov
scas
xchg
out
int3
fstl
out
sbb
movsl
push
jmp
adc
cld
and
inc
and
lret
lods
cmpsb
xchg
lretw
push
mov
in
dec
pop
rcr
sbb
ficomps
mov
xchg
sbb
out
or
mov
dec
jmp
jle
ljmp
or
fcomip
pop
outsb
xlat
sub
rorl
or
sarb
in
jae
sub
dec
sub
pusha
or
jo
push
fnsave
or
jecxz
dec
mov
inc
lahf
xor
lock
out
sti
loope
jnp
popa
inc
inc
mov
mov
pop
cmp
push
push
xlat
and
pop
sbb
dec
test
jmp
inc
addr16
std
jmp
repnz
adc
cmpsl
fcoms
aaa
pop
lea
jno
sbb
lcall
imul
movsb
loopne
movsl
mov
push
pusha
mov
sub
adcb
loope
in
jecxz
shl
xor
push
outsl
push
sti
fwait
xchg
fbstp
out
push
sub
pop
pop
push
std
inc
or
adc
inc
fadd
and
insb
jns
xchg
fdivrs
fs
push
daa
xchg
mov
in
push
int3
and
adc
push
or
lds
lods
into
inc
je
or
and
out
cmp
and
sahf
pop
ficomps
cmp
jno
dec
lahf
and
stc
dec
xchg
dec
xchg
data16
mov
fildl
or
dec
ds
loop
mov
fbstp
rcll
sbb
int
sbb
dec
push
lods
ljmp
aaa
xor
fmul
lods
bound
fs
inc
dec
pusha
clc
je
push
and
in
in
hlt
sbb
sbb
pop
lcall
pop
stos
testb
mov
jl
xlat
mov
cltd
cmpsl
daa
fimuls
or
push
aad
adc
dec
addb
and
pop
push
js
cmp
push
aad
dec
stos
add
mov
stos
test
ficoml
and
cmp
add
and
inc
add
mov
data16
mov
fldenv
sbb
movsl
xchg
andl
jmp
in
sbb
ficoms
push
cwtl
fisubrl
fsubs
xlat
or
je
inc
in
mov
mov
rcll
ljmp
pop
or
jae
sbb
mov
lcall
push
sub
fs
adc
ja
std
test
adc
push
mov
cmpsl
aaa
aaa
push
ljmp
adc
jae
mov
ds
gs
ljmp
aad
cmp
add
and
imulb
add
je
lock
aaa
add
mov
sti
cmp
cmp
sbbl
xchg
or
lock
fnstenv
xor
dec
fs
mov
sub
xchg
jb
add
inc
pushf
stc
adc
jns
add
insb
addb
pop
inc
cmpsb
clc
or
mov
pop
push
test
mov
call
xor
sbb
shlb
pop
jne
insl
icebp
roll
gs
sbb
mov
movsl
iret
test
mov
psubq
mov
jns
les
lret
inc
lods
daa
outsw
movsl
xchg
xchg
mov
jno
lret
add
mov
pop
pop
mov
lret
inc
or
mov
jno
sbb
sub
sub
inc
mov
jae
and
pop
add
add
iret
je
popf
jno
or
adc
push
xor
scas
loope
add
loop,pn
lock
sbb
pop
movsb
jns
loop
mov
adc
mov
mov
lret
nop/reserved
jmp
shl
push
sub
daa
jge
sbb
dec
jle
faddp
jmp
sub
mov
nop
xor
jnp
subl
inc
xchg
xchg
pop
mov
add
xor
ds
dec
cs
dec
sub
in
aas
int3
hlt
mov
or
enter
and
sbb
mov
inc
or
push
movl
imul
pop
jge
movb
out
inc
cltd
test
jno
mov
in
xor
js
mov
call
das
fwait
push
inc
and
lahf
mov
mov
push
cmp
mov
mov
fadds
mov
xlat
jmp
xor
loop
repz
and
daa
mov
dec
fldenv
push
inc
inc
push
pop
nop
sbb
add
fsub
adc
adc
fsubrp
push
pop
insl
add
xchg
jp
fidivl
push
jle
xchg
aas
add
pushf
cmp
dec
dec
pop
mov
mov
or
jbe
mov
push
dec
orl
loopne
gs
xor
pop
dec
pusha
lock
mov
mov
xor
fsubrs
fdivp
mov
inc
cmp
and
sbb
imul
outsl
in
lret
movsb
nop
mov
and
cmpsl
cwtl
jmp
mov
outsl
cwtl
cmpsl
xchg
pop
mov
je
std
pop
ret
mov
scas
loope
inc
lock
jbe
xchg
ret
push
or
lock
dec
or
push
clc
xor
lea
mov
popa
movsl
push
daa
scas
xchg
dec
adc
gs
aam
jb
aaa
insb
dec
hlt
pusha
adc
repz
inc
and
mov
xchg
movsl
sbb
cltd
sarl
and
mov
fisttpl
ret
nop
rclb
xlat
push
pop
adc
test
add
stc
loopne
out
imul
dec
cmp
or
lea
cmp
out
lds
xchg
popf
lds
pop
push
mov
sbb
lds
pop
lret
mov
adc
aaa
shrl
jge
jmp
cmc
cmp
loope
xor
and
dec
dec
aas
cli
aas
or
pop
sarb
sub
inc
incl
rcrb
push
xor
inc
mov
inc
jb
sbb
sbb
jle
xor
mov
xchg
int
cli
mov
dec
es
movsl
lret
mov
lret
xchg
xor
daa
or
in
jo
icebp
jle
inc
arpl
sub
xor
mov
popf
insl
xchg
mov
xchg
lcall
xchg
jmp
decl
rclb
popa
je
add
xlat
in
popa
xor
outsl
andl
into
sub
flds
pop
pop
adc
sbb
xchg
dec
or
dec
xchg
add
jge
push
shll
in
jmp
int
push
test
sbb
adc
xchg
dec
or
xor
xchg
push
pop
dec
fnstsw
xor
mov
test
imul
stos
pop
jg
stos
add
iret
jecxz
pop
xchg
xor
push
fwait
hlt
xor
in
dec
sahf
orl
dec
sbb
nopl
pop
out
stos
mov
or
imul
aaa
lret
mov
pop
sub
pop
aas
aam
test
dec
mov
push
push
and
or
and
pop
aaa
nop
or
jp
int3
pop
stos
fisubs
pop
lods
jge
test
add
loope
rorl
lds
call
push
fidivrl
mov
orb
jo
mov
scas
mov
adc
dec
add
add
jbe
in
push
jecxz
call
inc
xchg
pushf
lods
ds
hlt
inc
cwtl
stos
rcll
ss
in
xchg
mov
mov
jl
push
loopne
fstps
popl
arpl
test
and
inc
or
jmp
push
sahf
xor
insl
add
pop
test
in
or
sub
shll
jmp
push
jp
das
pop
call
add
dec
add
ljmp
xor
addr16
inc
int3
lods
clc
stc
xchg
dec
popa
cmc
inc
aad
lcall
mov
mov
push
lret
mov
lds
pop
mov
mov
add
les
sub
push
adc
xchg
sub
pop
inc
fimuls
insl
andb
fistl
sbb
sbb
loopne
outsb
xchg
in
push
lods
or
pop
mov
adc
aad
das
popf
dec
and
adc
subb
aaa
pop
dec
fisttpll
pop
roll
ret
cwtl
pop
adc
cltd
ja
test
flds
inc
addl
cmp
imul
xor
dec
jmp
sbb
or
hlt
or
xchg
mov
pop
test
mov
std
push
add
xor
lret
push
mov
lret
cltd
cli
add
xlat
bound
sub
aam
cli
in
jno
daa
xchg
std
pop
adcl
sub
das
pop
pop
cmp
mov
mov
leave
add
and
idiv
mov
push
stos
test
pop
rcrl
jl
mov
or
pop
mov
mov
adc
lahf
loope
lret
xlat
movsb
push
jecxz
lret
int
or
mov
shr
movsl
mov
or
sub
imul
popa
addr16
dec
or
arpl
je
mov
popa
mov
jb
outsb
sub
and
subb
pop
stos
fisubrs
in
mov
filds
icebp
adc
test
mull
xchg
fbstp
or
stc
call
xchg
iret
adc
jne
ds
lock
inc
in
jl
mov
aad
push
dec
mov
ljmp
ret
sub
incl
or
inc
mov
insb
fs
in
mov
cld
add
jnp
adc
sub
nop
xchg
add
mov
imulb
ss
jl
vphsubwd
inc
sbb
leave
test
lock
push
fildll
mov
or
add
stos
xor
xchg
inc
xor
iret
inc
incb
jmp
sbb
mov
mov
int3
push
xor
push
pop
push
and
jbe
test
cmp
dec
adc
xor
aam
mov
scas
and
lret
jno
loop
mov
pusha
lret
pop
and
aas
fcoml
mov
push
jecxz
xchg
and
sub
inc
stos
iret
punpcklbw
scas
call
pop
into
rsqrtps
inc
jb
js
jmp
sub
iret
iret
test
sub
aam
insl
jp
movsl
call
scas
lods
cli
push
mov
push
enter
shll
and
xor
and
jo
popf
xor
jb,pn
pop
mov
adc
mov
and
cwtl
jecxz
cs
jmp
sub
lods
jecxz
test
inc
jmp
shll
fwait
insl
jp
inc
adc
es
mov
pusha
jl
into
push
std
dec
loopne
fmuls
dec
xchg
mov
cmpsb
push
pop
je
cmc
enter
cli
pop
rep
jl
or
test
mov
imul
gs
int3
pushf
xrelease
scas
js
inc
and
mov
aad
xchg
dec
inc
sub
push
add
arpl
mov
das
cmc
sbb
bound
je
lock
mov
dec
outsb
pop
addr16
adc
push
inc
inc
and
xchg
push
fs
callw
sarb
xlat
or
jns,pt
popf
dec
sub
mov
mov
inc
popf
add
mov
mov
or
mul
pop
cmp
psrlq
push
daa
mov
hlt
mov
aaa
into
cmpl
pushf
push
dec
xlat
mulb
or
repnz
pop
out
push
push
sub
test
mov
mov
aam
int
push
jg
mov
int3
add
adc
nopl
insl
into
push
rcrl
icebp
cmp
cmp
xchg
insl
cltd
fdivs
aas
in
cmp
xchg
pop
mov
addr16
cmpl
sbb
push
dec
xorb
cmp
movsl
cld
add
jb
fdivr
push
icebp
test
mov
pop
dec
jg
shl
jns
jne
ret
jne
int3
sub
jbe
arpl
jmp
adc
dec
xor
lock
iret
xor
fsubrs
cmp
pop
and
ret
and
cmpsl
inc
adc
push
or
nop
jbe
mov
std
jno
mov
inc
mov
cmpsl
lcall
mov
std
mov
push
jle
fdivrs
addl
xchg
or
jl
loope
jl
lcall
out
or
int
out
rclb
jno
cmpsb
popa
sub
ss
call
push
adcb
out
insl
sub
test
rorl
repz
or
addb
in
scas
sub
xor
adc
jbe
inc
cli
dec
nop
sbb
repnz
rcll
stos
or
rorb
jo
jae
xlat
sbb
pop
jp
adc
sti
ret
or
mov
adc
repz
sub
push
pop
pop
jns
dec
int3
fidivs
cli
pusha
fcomip
fldl
dec
pop
xchg
fwait
pop
popa
int
pop
psubw
push
pop
test
jecxz
pop
xchg
and
cli
sbb
mov
add
cmp
jae
xor
mov
out
xor
push
inc
sbb
jne
adc
add
lods
mov
int
mov
into
ja
xor
xor
push
dec
and
push
cmp
mov
shl
jp
adc
and
sbb
mov
lahf
dec
incl
inc
movsb
dec
xor
mov
push
xor
sarl
cmp
dec
mov
push
sbb
mov
lods
dec
es
stc
test
push
pop
mov
sbb
scas
xlat
push
cs
hlt
sbb
arpl
and
inc
imull
out
jns
mov
inc
adc
nop
pop
leave
lea
nop
movsb
mov
lahf
mov
in
fisubrs
or
jno
out
movsb
jmp
sub
adc
sahf
sub
out
mov
cmp
push
aad
dec
dec
lret
out
adcl
pop
mov
push
scas
pop
pop
sbbl
js
cs
icebp
rcrb
mov
sarl
fmulp
bound
xchg
lret
adc
jmp
lods
aas
into
mov
stos
push
jl
push
cmpsl
xor
xchg
pushf
lock
test
add
xchg
cmc
inc
push
mov
fstpt
inc
stos
ds
test
outsb
mov
pop
adcb
cmp
fisttpll
js
mov
lea
and
fdivl
cmp
jecxz
fldcw
sahf
fidivrl
or
sub
lcall
sub
fcmovnu
mov
lret
sub
mov
pop
dec
enter
xchg
cli
jno
rorb
mov
in
mov
xor
xchg
dec
mov
or
ret
add
pop
ret
mov
add
sbb
or
out
ja
dec
mov
sub
out
psrad
push
adc
jg
push
ds
faddl
test
jp
mov
cmpsb
pop
sbb
pop
cmp
leave
mov
imul
test
dec
popa
xchg
or
addr16
add
mov
nop
push
or
cld
rorl
inc
je
int3
adc
push
xchg
inc
mov
shrb
int3
cs
rcl
hlt
frstor
or
mov
fisubrl
enter
xchg
inc
jnp
inc
fdiv
loopne
adc
pop
fistpll
lods
scas
pop
lock
inc
sbb
adc
xor
rorl
loopne
mov
add
jns
les
in
mov
jg
orl
arpl
mov
insl
jmp
cmpb
mov
sbb
fistl
pop
xchg
adcl
dec
xchg
ret
mov
inc
add
mov
pop
aas
test
mov
adc
nop
cwtl
jle
xor
pop
dec
fsts
loopne
mov
sub
test
pop
rcrl
jmp
cmpsl
int3
mov
xchg
xchg
mov
aam
sub
jo
insl
loope
xor
mov
dec
push
cmp
mov
dec
fildll
mov
rcl
popa
mov
in
mov
outsl
jmp
xorb
aam
lock
adc
mov
dec
inc
out
testl
jns
test
dec
push
test
outsl
sub
xchg
mov
mov
aaa
fisubs
in
push
push
aam
in
mov
jnp
lahf
push
adc
les
sbb
add
scas
int
xchg
mov
dec
pushf
aad
push
jg
lock
adc
lea
lods
nop
pop
enter
mov
shll
repz
lahf
sub
push
jae
pushf
aam
pop
xchg
cs
inc
nop
dec
adc
and
jne
push
gs
jo
sbb
mov
add
outsb
pop
push
lds
and
dec
cmp
xor
lea
aad
sub
sahf
fadds
test
test
cwtl
add
fwait
movsb
xchg
rorb
orb
outsl
test
pop
inc
push
inc
fsubl
xchg
or
sub
or
gs
lret
into
loopne
jmp
adc
imul
icebp
ds
repz
sahf
testb
imul
cwtl
cmp
mov
push
fnstenv
push
mov
lods
lea
cwtl
mov
cmpsl
lods
mov
orb
sub
stc
add
clc
push
data16
test
je
cmp
xlat
mov
lret
js
add
mov
inc
pop
xchg
int
push
or
jb
mov
cmp
pop
xor
mov
mov
jnp
xor
inc
stos
dec
mulb
out
sub
sbb
int
xlat
push
sbbb
lods
or
aam
mov
push
rol
pop
repnz
mov
ss
mov
sbb
or
or
aaa
subb
insl
jnp
push
sti
ljmp
arpl
subl
sbb
dec
mov
popf
jecxz
insb
inc
mov
sub
pop
negb
pop
orb
push
push
popa
cmc
push
inc
test
test
and
dec
inc
les
dec
sti
mov
bound
push
mov
cmp
imul
dec
and
pop
addr16
mov
mov
leave
sti
scas
inc
adc
xchg
repz
jecxz
fbstp
pop
lret
sub
insl
or
add
inc
ret
imul
leave
push
add
xchg
adc
cwtl
popf
pop
test
popf
lods
sbb
jle
out
xchg
mov
jb
xchg
dec
xchg
jo
sar
ja
cmp
and
jbe
push
decb
sti
std
cmp
push
pusha
sahf
xchg
inc
fs
aad
mov
mov
sbb
add
jb
movsl
mov
adc
push
dec
addl
xchg
test
out
or
insl
push
push
pusha
fwait
popa
pushl
addr16
int
pop
daa
mov
in
mov
sbbl
test
push
fldt
mov
cmpsl
nop
sub
aam
ljmp
loope
aam
into
add
cltd
not
jg
mov
lods
xchg
add
fldt
rclb
imul
loope
sub
ret
and
pop
ret
or
xchg
cmp
xchg
push
out
pop
xlat
and
cltd
int
cmp
enter
adc
xchg
or
out
push
lea
mov
popf
sub
mov
cmpsb
mov
pop
and
fwait
mov
xchg
or
aad
push
pop
pop
jg
arpl
es
rcrb
cvtps2pi
mov
sub
lret
scas
aam
test
pop
push
or
out
adc
rcrl
rolb
nop
pop
mov
mov
inc
and
mov
mov
aad
movsl
jecxz
shll
adcb
jns
int
hlt
les
imull
mov
push
test
scas
pop
bound
xor
into
sbb
adc
arpl
xchg
out
xor
and
cmpsb
push
inc
cwtl
mul
or
and
sbb
in
loopne
dec
jp
int3
imul
sarl
stos
test
inc
lret
jge
push
adc
aam
push
ja
out
push
push
sub
pop
mov
mov
cli
popa
cmp
clc
or
stc
pop
push
mov
fwait
outsl
imul
nop
mov
xor
cli
fdivr
call
jo
cmp
xchg
into
pop
filds
icebp
cld
rorl
xchg
mov
imul
adc
xchg
cli
rorb
adc
dec
sbb
push
cmp
and
jne
or
in
cwtl
mov
xorl
arpl
ljmp
push
xlat
or
je
sbb
sbb
lea
sub
fstps
add
mov
xor
shl
push
jl
stos
pop
call
mov
jge
mov
aam
sbb
push
dec
xor
aaa
sar
or
xor
and
lahf
es
xchg
loopne
jecxz
xor
mov
xorl
mov
fdivl
xchg
das
lods
xor
fnsave
mov
pusha
int3
movsl
sub
pop
and
or
loope
sbb
scas
add
in
jecxz
lret
mov
jge
adc
xor
pop
mov
std
xor
mov
inc
arpl
add
adc
add
push
loop
push
mov
movsl
aas
mov
int
sbb
test
cld
cmpsb
ss
jg
rorl
loopne
or
nop
shrl
loopne
sbb
inc
adc
mov
repnz
mov
xchg
les
test
push
loopne
in
sbb
cmp
inc
insl
push
xor
in
inc
add
lcall
xchg
jns
xor
lds
sbb
fucomi
es
pop
sbb
jg
add
movsb
iret
push
sbb
cltd
sti
call
test
nop
or
out
fcoml
sti
pusha
sub
pushf
push
ret
into
bound
enter
push
mov
mov
mov
pop
fcmovnu
cli
test
pop
add
xor
out
inc
iret
sbb
push
xchg
push
jmp
je
and
and
aad
outsl
jnp
jl
mov
int
in
fiaddl
enter
xchg
mov
inc
adc
loope
cmp
out
jmp
mov
adc
jecxz
in
mov
movsl
daa
mov
sub
or
dec
iret
cmpsb
pop
loop
std
pop
leave
mov
mov
sbb
imul
jge
pop
push
in
jno
test
stc
decl
jg
sbb
inc
lods
leave
sbbb
dec
xlat
mov
mov
imul
ret
movsb
inc
pop
adcl
adc
jmp
imul
outsl
push
sbb
loopne,pn
in
loopne
add
lahf
cmpsb
mov
lahf
mov
dec
sub
sbb
xchg
push
inc
sub
aaa
fwait
sub
push
xchg
into
pop
lret
repnz
js
add
xlat
je
scas
mov
inc
adc
add
dec
popf
pop
and
fisttpll
into
inc
stos
int
add
adc
test
adc
adc
jno
pusha
leave
stos
rcl
and
ret
gs
fldcw
pop
mov
jge
mov
cwtl
xor
mov
out
bound
fs
fisttpll
inc
lret
mov
stos
aas
aam
je
mov
jnp
lcall
xchg
jle
push
inc
jns
add
mov
sub
push
add
xor
cmp
movl
lret
mov
inc
push
pop
out
or
cmp
xor
pop
test
pop
xchg
sbb
push
or
jge
xchg
pop
pop
in
jecxz
add
xor
ret
xor
into
int
into
test
xor
cltd
pop
cmpsl
mov
cmp
sti
xchg
mov
inc
rolb
std
stos
mov
shlb
lret
push
lret
push
test
cmpsl
xchg
push
mov
xchg
xchg
stos
xor
pop
cmp
or
inc
je
jg
dec
xorl
fdiv
and
ret
scas
fdivs
push
addb
je
test
push
push
jle
aas
pop
fwait
roll
mov
push
xchg
pop
std
aaa
fbld
ficoml
jle
aad
and
xchg
imul
filds
orl
mov
insb
sbb
fdivr
mov
lret
sbb
inc
push
mov
pop
lret
add
jno
xchg
add
in
xchg
add
mov
outsl
mov
xor
dec
lods
jg
push
dec
mov
jb
mov
out
mov
mull
pop
call
mov
pusha
xor
add
push
sbb
mov
cmc
shll
mov
gs
ret
dec
out
cmp
mov
subl
enter
dec
and
sbb
pop
cmp
inc
outsb
jmp
mov
inc
dec
fnstsw
inc
dec
pop
jnp
xor
inc
sbb
mov
or
adc
xchg
sbb
subb
test
mov
cmp
pop
ret
push
pop
mov
mov
adc
loop
enter
sub
pcmpgtw
std
lret
mov
into
or
aam
adc
push
negb
sub
mov
addr16
hlt
mov
inc
shll
inc
xor
jb
das
or
not
jns
jg
cmp
xchg
dec
xchg
popf
adc
jge
arpl
scas
fisttpll
sub
push
lock
arpl
cs
je
aad
pushf
addr16
je
aas
enter
and
rorl
xor
or
popa
sub
imul
bound
sti
scas
aas
movsl
push
inc
and
int
shlb
mov
push
test
lea
mov
push
clc
jmp
dec
lahf
repz
pop
cmp
and
dec
sbb
inc
xlat
jmp
test
add
test
mov
push
pusha
jmp
push
sub
jbe
les
push
movsl
sbb
pop
push
pop
cmpsl
scas
add
xor
out
jo
stos
cli
dec
ja
pop
inc
test
inc
fbld
cwtl
lret
mov
into
jno
cli
pusha
out
aaa
dec
fnstsw
sti
call
cmp
jp
xor
outsl
sub
ds
push
xor
mov
push
lock
jbe,pn
adc
jecxz
mov
leave
jmp
aam
dec
cmp
scas
mov
enter
test
rorl
jb
cmpsl
dec
adc
arpl
adc
frstor
pop
xlat
sbbb
add
dec
xchg
adc
cmp
add
jae
cli
popa
mov
inc
mov
decb
mov
fs
sub
jg
repz
aam
pop
cmp
test
mov
add
jg
test
std
fistl
mov
dec
xchg
sbb
ss
cmp
loop
negl
mov
pop
adc
lea
sar
pop
jp
scas
jno
jno
std
dec
out
mov
cmp
pop
ret
pop
stos
dec
dec
add
mov
addr16
or
test
mov
outsb
jl
lahf
and
mov
cmp
dec
mov
shrb
inc
pushw
dec
or
mov
shll
pop
outsb
ja
dec
and
pop
aad
jge
jno
lahf
out
sub
inc
in
xchg
cltd
fisubrs
pop
jnp
pusha
jmp
scas
les
inc
jbe
or
xor
xchg
sbb
pop
addl
inc
ss
cs
xlat
repnz
mov
dec
sbb
arpl
xchg
or
pop
xchg
and
cmp
jl
jmp
je
repnz
xor
movsl
les
fidivrl
mov
add
push
dec
jo
lea
lock
das
loopne,pn
push
movb
gs
cmpsl
popf
xchg
ds
add
jns
adc
bound
insb
jle
cmp
jno
adc
imul
mov
xchg
xor
in
pop
mov
inc
out
insl
fsubp
pop
insl
clc
fs
lds
add
shrb
imul
das
jns
jge
idiv
std
and
jecxz
or
leave
dec
ret
or
mov
in
mov
scas
sbb
cmc
ljmp
test
pushf
inc
es
lret
scas
jo
add
xchg
mov
jg
and
repz
mov
xor
clc
shll
mov
jno
cmp
ret
xchg
xchg
sbb
out
into
cmp
aaa
cld
fwait
mov
mov
lcall
adc
in
mov
jmp
aam
sbb
push
test
or
nop
rcl
hlt
pop
push
push
and
jb
jp
pop
sub
sub
xor
lret
inc
cwtl
xchg
pop
cmp
cmp
xor
push
or
mov
xor
jg
mov
cmp
cwtl
or
cmp
adc
jno
sub
lock
imul
fidivs
pop
scas
jle
pop
xchg
dec
nop
notb
push
ljmp
pop
or
push
pushf
repz
pop
pop
pop
scas
add
jo
sbb
and
bnd
aaa
pop
inc
pusha
fisttpll
xor
lods
push
repnz
int
push
add
mov
hlt
mov
inc
adc
fldcw
pop
adc
les
and
mov
sub
scas
mov
mov
fnstsw
imul
aaa
and
enter
lahf
pop
sbb
adc
inc
mov
dec
jge
jmp
movsl
jae
cs
aaa
bound
int
divl
inc
test
push
std
sub
pop
insl
lods
pop
outsb
loopne
push
pop
jne
fsub
cmp
pop
stos
cmc
mov
push
sbb
out
dec
cmpsl
std
in
dec
pop
int
mov
rcr
fcmovnb
jmp
push
fisubs
cmp
cld
lea
rcrb
enter
push
add
xor
repnz
pop
out
push
inc
rcl
inc
dec
push
jbe
xchg
je
push
lods
jo
mov
lods
inc
dec
jmp
mov
push
shll
sysret
or
mov
xchg
sbb
lret
xlat
sbb
fsincos
mov
pop
lcall
push
jp
push
pop
push
lea
jnp
test
mov
push
lahf
jp
cmpsb
jae
cld
mov
mov
andl
mov
mov
test
mov
int
sbb
mov
sub
ja
ss
nop
cmp
add
sbb
mov
rcrb
xchg
mov
pop
sbb
dec
ss
pop
adc
mov
or
es
pop
push
mov
not
mov
inc
ljmp
lcall
inc
xchg
pop
arpl
and
lea
pop
out
jle
insb
pop
jl
aas
pushf
imul
stc
cmpsb
imul
in
aam
jp
mov
pop
out
jb
cltd
xorb
mov
fisttpll
movsb
jle
and
mov
or
sbb
ljmp
pop
outsl
jmp
out
sbb
cltd
jae
cmpsb
mov
xchg
pop
outsb
mov
sub
pop
or
mulb
jmp
and
mov
push
popf
addr16
test
leave
rorb
cmp
jecxz
insl
mov
pop
fcoml
jg
test
add
push
sti
fwait
je
in
leave
dec
leave
add
sbb
lds
inc
inc
enter
jl
adc
mov
popl
sti
jb
mov
fs
sub
dec
sub
dec
repz
push
fxch
mov
pop
or
loop
cmpsl
jmp
mov
push
mov
aaa
lods
lahf
lock
shl
push
xchg
test
std
shl
ret
dec
jns
cmpsl
fisttps
sbb
daa
sarb
sbb
les
outsb
pop
mov
ficomps
ret
xor
arpl
flds
jp
sub
call
push
je
adc
inc
push
iret
and
jl
test
ret
test
cmp
mov
mov
jno
call
mov
popa
jns
pushf
xchg
jbe
adc
jo
in
insl
jg
jl
in
js
subb
sub
loope
pop
hlt
xchg
jmp
pop
jge
xor
loope
jmp
inc
jle
pop
mov
jne
mov
in
stc
scas
xor
push
mov
push
das
sub
rcrl
mov
and
sbb
rcrl
mov
mov
in
pop
rol
fidivl
mov
mov
xor
test
push
mov
mov
dec
adc
and
adc
push
adc
es
push
mov
jmp
pusha
int
jmp
push
sub
jp
mov
push
push
dec
fdiv
movsl
scas
out
dec
in
mov
jbe
sbb
aad
push
dec
subl
in
dec
push
inc
xchg
sub
lods
mov
aas
inc
xchg
nop
ret
or
popf
xor
insl
sbb
gs
jecxz
js
and
lods
xor
repz
movsb
push
mov
inc
push
cmp
push
fldl
xchg
popl
mov
enter
push
jmp
and
in
xor
inc
jecxz
icebp
cmp
mov
rorb
push
xor
scas
aad
movsb
mov
xlat
fxam
arpl
inc
out
fidivrl
or
bound
xchg
call
sub
stos
add
cld
lock
dec
xchg
pop
or
aam
cmp
sti
repnz
cmpsl
loop
or
sub
aaa
dec
push
add
add
repz
loopne
mov
loop
add
cmp
cmp
hlt
sub
pop
stos
sahf
push
push
es
faddl
mov
jo
xor
pop
cmpsb
nop
cmp
add
outsl
mov
fwait
stos
sbb
arpl
jle
push
and
lcall
push
xchg
cmp
les
outsb
mov
xchg
and
push
cltd
mov
iret
sahf
jnp
push
sub
fcomps
test
leave
inc
jb
scas
imul
lret
add
jae
mov
fucomp
push
movsb
jmp
or
movsl
rcrb
cmpsl
in
adc
xchg
int
xchg
sub
inc
inc
sbb
mov
add
scas
add
fildl
popf
pop
or
enter
imul
or
movsb
aad
pop
jbe
subl
outsb
lret
cltd
or
in
pop
mov
ljmp
adc
xlat
jns
xchg
mov
and
xchg
dec
jns
adcl
std
mov
pop
imul
push
mov
sub
xchg
call
not
mov
jle
xchg
test
testl
mov
jp
popf
and
push
out
and
mov
into
mov
inc
and
lahf
addl
mov
push
psubq
xor
sub
jae
sub
pusha
sub
movsl
addr16
pop
divb
nop
call
pop
scas
or
int
mulb
push
sahf
rclb
je
cmpl
mov
mov
cmpsl
mov
dec
sbb
push
ja
shlb
inc
mov
mov
dec
daa
in
adc
cmp
xchg
pop
icebp
push
mov
mov
lcall
push
sbb
or
mov
mov
roll
fldenv
and
out
xor
jmp
leave
pop
mov
xchg
hlt
pop
arpl
sbb
leave
cmp
push
and
xor
loop
aad
aam
mov
fildl
mov
ret
stos
xchg
cli
mov
test
xor
aas
push
in
testb
mov
lods
cmc
outsb
mov
inc
push
lret
roll
ror
dec
ficoml
push
fisttps
cmpsl
ja
mov
pop
stos
loope
popa
and
cltd
out
xor
lea
sbb
inc
inc
dec
xchg
int
popf
cmpb
ret
push
mov
adc
jns
fsubrs
cs
fisubrl
dec
mov
int3
ljmp
xor
mov
xor
in
outsb
mov
pop
imul
repnz
imul
lahf
dec
xchg
adc
and
mov
add
adc
ud0
daa
out
test
bound
cltd
xor
mov
ret
dec
cmp
sbb
inc
stos
jmp
imul
xchg
push
ss
cmpl
stc
cmp
test
cwtl
jb
xchg
orb
enter
xor
adc
jae
enter
popa
sbb
push
xor
xor
cmpsb
inc
test
inc
push
int
movsb
aaa
sub
shrl
lods
push
cmp
pop
or
fistl
pop
cmp
xchg
inc
jp
or
enter
call
add
dec
add
jge
call
pop
lret
outsl
pusha
rcrb
lods
ja
sbb
jne
imul
in
faddl
xchg
add
mov
sub
fisubrl
pop
inc
shll
outsl
sub
adc
mov
repz
mov
scas
xchg
or
inc
sarb
add
mov
xor
frstor
pop
jb
jmp
jne
jl
sub
movsl
adc
lcall
pop
pop
xor
movsl
push
jae
cmp
mov
sub
nop
or
push
out
xchg
and
and
pusha
xchg
fistpl
mov
repz
mov
sbb
pop
dec
mov
dec
fisttpl
cltd
jl
mov
in
sbb
jno
sub
jp
repz
xor
popa
mov
lret
sub
mov
repz
repz
inc
xchg
in
xchg
sub
testb
loop
mov
cmpsb
inc
fs
inc
lret
lcall
jne
std
sbbb
imul
cwtl
dec
lcall
xchg
jns
push
outsl
int3
jl
test
mov
dec
rclb
mov
test
je
push
add
cmp
push
jo
mov
je
mov
jecxz
in
sbbb
and
xchg
or
pusha
and
int
dec
cmc
pop
sbb
mov
fs
insl
fisubrl
insl
sbb
clc
shrl
out
cld
add
ret
lahf
sbb
inc
shlb
jle
das
xchg
jge
mov
xchg
mov
push
lret
mov
fnsave
mov
mov
out
push
pop
sub
ret
aaa
popa
jb
test
push
jle
shrl
mov
repz
iret
cmc
movsl
xlat
lea
in
jmp
lret
cmp
stos
mov
dec
or
adc
call
in
pop
pusha
xchg
mov
loopne
pop
pusha
xchg
sub
push
outsl
push
lea
in
mov
outsb
cmpsl
mov
sbb
or
xchg
int3
lods
mov
sahf
xchg
pop
mov
pushf
subb
icebp
roll
pusha
jp
dec
pop
imul
int3
cmp
sub
ljmp
fistpll
lret
in
cmpsl
push
cmp
sti
cmc
pop
jg
addb
xchg
and
sub
push
mov
fists
mov
lret
lds
ret
lret
pop
xor
pop
ss
and
idivl
xor
int
sbb
mov
push
pop
nop
je
in
mov
jae
mov
inc
cmp
scas
pop
loope
push
jl
stc
cmp
mov
xor
lods
test
in
pop
bound
ja
mov
and
sti
fsubr
sub
xchg
inc
dec
incb
insl
fiadds
rolb
push
test
jp
jnp
lock
mov
xor
in
sub
push
stos
jb
jg
xor
xorl
pop
mov
sbb
lcall
adc
ds
js
xchg
mov
aam
repz
bnd
xchg
sub
or
sahf
inc
add
mov
mov
lcall
and
repz
add
adc
sti
jns
mov
push
mov
hlt
stc
push
pop
inc
fwait
xor
cmovae
or
inc
xchg
dec
push
mov
les
popf
ja
rclb
mov
loop
jge
cli
xchg
dec
stos
xor
cmp
das
fidivrs
inc
test
adc
popl
pop
dec
mov
cwtl
in
filds
test
push
cmp
inc
xchg
xchg
mov
mov
and
punpckldq
repnz
popf
inc
push
mov
js
and
pop
loop
pop
gs
in
jo
enter
add
jae
or
cmp
inc
cwtl
jae
push
in
mov
jle
mov
mov
cld
jb
sbb
mov
lock
push
or
adc
loopne
mov
and
insb
jae
outsb
in
sti
mov
add
push
push
push
clc
and
sbb
iret
sarl
and
lea
mov
nop
push
xchg
ljmp
jb
push
pusha
pop
adc
push
cmc
mov
sub
xor
dec
push
icebp
sbb
leave
lea
push
xor
jb
sbb
xchg
adc
sbb
push
je
divl
add
mov
cs
push
into
adc
divb
inc
repz
sbb
push
mov
std
xor
movsl
into
sub
into
clc
fs
repnz
rorb
push
jmp
pushf
dec
adcl
xchg
in
insl
cmp
or
mov
jns
jno
mov
ret
repnz
cs
push
out
data16
ret
pop
out
xchg
cld
cld
je
das
dec
jmp
xor
in
mov
xor
xchg
add
pop
xorl
cmp
mov
mov
sub
les
push
icebp
lret
fsubrl
mov
or
mov
pop
ret
and
push
sti
imul
and
xor
add
sti
mov
testb
mov
pop
jmp
xchg
push
jmp
mov
inc
xor
xchg
mov
cmpsb
xor
not
mov
sbb
loope
out
lds
and
data16
subb
mov
adc
mov
inc
inc
jle
inc
dec
xchg
jge
jo
loopne
lds
insl
lods
repnz
xor
paddw
outsb
push
aam
in
pop
mov
fisubs
jo
lcall
cwtl
hlt
xchg
js
sub
xchg
cmp
clc
push
cmp
jmp
divl
fbld
jno
xchg
in
fwait
sbb
xor
cmc
jns
jo
push
push
jecxz
int
push
mov
jmp
add
call
inc
mov
and
mov
jne
lcall
mov
out
lcall
in
popf
aam
jns
mov
jb
sbb
mov
sbb
aaa
mov
ss
mov
lret
in
sub
out
cmp
aas
rcpps
jmp
xorl
imul
pop
loop
out
sbbl
lods
sahf
add
aas
and
enter
push
xchg
inc
sbb
mov
pushf
push
and
add
ss
mov
sub
pushf
ljmp
pop
dec
div
loop
adcl
xchg
sub
ret
movsl
cmp
adc
cmc
aaa
cmc
adc
dec
loopne
aam
gs
movsl
adcb
icebp
sub
cli
ret
push
ret
addr16
lds
jg
xor
rolb
sbb
arpl
mov
jecxz
mov
in
fdivl
jbe
xchg
movsb
idivb
stos
data16
sub
push
imul
leave
push
mov
ret
inc
and
ja
loop
sub
mov
adcb
add
lock
push
cmpxchg
adc
push
cld
fmull
notl
cmp
movl
cmp
in
cld
call
hlt
cltd
test
hlt
dec
add
cmp
sti
pop
jne
xor
lcall
mov
jne
cmpsl
lcall
pop
stos
cmpsb
dec
mov
lods
dec
ss
xchg
push
out
pop
in
dec
push
imul
xchg
mov
mov
mov
cltd
sub
pop
fwait
dec
mov
mov
mov
cwtl
and
sub
mov
enter
xor
test
repz
lahf
outsb
jo
movsl
mov
ja
cmc
into
fistl
pop
mov
mov
shrb
clc
mov
iret
jp
inc
jg
xchg
ja
inc
push
gs
adc
xlat
lea
pusha
in
mov
dec
adc
push
fldenv
push
rcrl
pushl
in
or
adc
enter
pop
jmp
inc
xchg
xchg
rcrb
nop
cli
movd
aam
sbb
sbb
pop
inc
stc
inc
fmull
xchg
fcmovu
mov
rorl
adc
cld
aad
stos
mov
sub
dec
enter
jno
mov
xor
std
enter
js
daa
push
jge
cmp
insl
fnstcw
add
out
fmull
rclb
mov
les
stos
inc
mov
pop
stc
dec
or
out
mov
or
mov
popf
in
in
push
fcmove
mov
xor
cli
pop
std
push
js
in
or
repnz
cmp
and
je
xor
pop
lret
sub
fnstcw
ret
mov
roll
out
rorb
scas
lods
fisttps
in
test
icebp
lock
lahf
xor
ss
push
je
xor
repz
add
cltd
mov
push
ja
lret
mov
mov
ljmp
rcrb
mov
cmpsl
shlb
in
hlt
clc
cmpsl
dec
push
xor
andl
mov
adc
inc
jle
xchg
cmp
xchg
ret
lods
imul
adc
and
cmpsl
adc
sub
incl
inc
fcomi
xchg
push
outsl
push
dec
je
fstps
rclb
and
push
pop
xchg
add
mov
daa
lret
sti
std
movsb
in
pop
cmpsl
mov
cmp
pop
xor
lahf
aaa
rorb
mov
push
jae
mov
test
in
das
pop
iret
ret
xor
xor
int
outsl
xchg
lods
jns
mulb
inc
xchg
lea
pop
pushf
push
jno
inc
fnsaves
jne
mov
sub
jbe
adc
or
mov
inc
and
mov
rorb
dec
xchg
pop
js
sahf
ljmp
xor
adc
dec
dec
test
sub
call
xchg
out
cmp
inc
cmp
imul
dec
call
push
imul
push
add
les
cli
cwtl
jne
imul
je
push
in
test
inc
in
mov
ljmp
xchg
xlat
int
les
arpl
and
clc
add
daa
push
adc
or
and
sbb
sbb
xor
imul
cmpsl
push
jo
jl
vmread
xchg
lods
inc
push
jmp
in
pop
rcl
and
sub
shl
pusha
imul
sub
test
cmp
xlat
cmc
pop
fstps
adc
int3
pop
out
cmp
test
int3
sub
jecxz
lods
sbb
test
rolb
and
push
fwait
add
rcr
jae
loop
xor
mov
push
push
jmp
adc
movsl
jnp
adc
loopne
in
arpl
add
das
xchg
testb
sbb
incl
xor
out
mov
lret
lea
arpl
jno
rcrb
nop
enter
daa
inc
inc
push
lds
daa
and
cltd
pop
sub
iret
lret
jp
ja
sbbb
mov
aam
push
mov
mov
rol
dec
sub
fwait
jmp
dec
imul
add
jg
sbb
mov
inc
test
mov
xchg
stos
push
shr
out
jno
push
fsts
test
cmp
fcoml
adc
sbb
fldcw
push
pusha
in
out
adc
cmp
lock
add
jae
mov
jmp
shrl
shll
loop
pop
stc
or
xor
repnz
scas
add
inc
loope
or
imul
mov
ds
sub
pushf
stos
shll
addr16
sub
out
idivb
enter
sbb
in
scas
lods
popf
add
pop
sti
sti
mov
subl
fstp
lret
xchg
push
lods
sub
adc
cmp
hlt
data16
imul
push
push
xchg
ds
je
dec
mov
call
xchg
sub
mov
pusha
inc
std
mov
stos
cmp
xor
rcrb
pop
out
ja
dec
rep
out
movsbl
aas
aam
xor
subl
cmp
mov
aaa
ljmp
daa
mov
push
mov
jns
xchg
or
in
mov
dec
dec
test
add
sbb
jmp
sbb
pop
or
call
pop
sbb
mov
test
test
mov
mov
faddl
or
xchg
pop
std
nop
imul
xor
adc
stos
and
das
out
repnz
mov
adc
or
push
lcall
adc
mul
inc
test
dec
dec
cs
xchg
fbld
add
cltd
sbb
arpl
adc
outsl
sub
mov
aas
xor
fsub
test
ds
pop
js
or
nop
and
add
daa
cmc
int
dec
addr16
or
call
fnstcw
cmp
mov
cmc
cmp
and
dec
arpl
jne
push
inc
inc
cmpsb
xchg
icebp
imul
pop
vpmuludq
iret
mov
push
ja
inc
ja
mov
fldt
fadd
fistps
repnz
ror
es
pusha
shl
push
jl
std
aaa
inc
mov
mov
lds
dec
shr
mov
dec
in
pop
mov
mov
adcb
xchg
mov
mov
dec
nop
push
dec
mov
jecxz
mov
call
xchg
in
je
sahf
push
fadds
push
cmp
in
add
adc
lods
cmp
insb
inc
addr16
pop
push
mov
push
sarb
rol
pop
adc
out
or
inc
mov
and
fsubrs
int3
sub
inc
les
jns
loopne
mov
fidivrs
inc
jp
repz
loope
pop
add
mov
mov
and
test
mov
sbb
out
loop
jp
mov
loopne
and
inc
or
fs
loop
stos
in
jmp
cwtl
or
cmp
inc
in
xor
pop
sbb
lods
inc
xchg
add
pop
movsl
pop
pushf
add
cmpsb
stos
mov
xchg
shrb
cltd
je
jmp
push
loope
xlat
mov
mov
jmp
out
lret
clc
pop
ss
outsl
and
push
push
mov
mov
sahf
pop
push
xchg
push
mov
mov
pop
mov
dec
aas
mov
jmp
fildll
fstl
cltd
in
lds
or
xorb
adc
cld
in
jbe
push
popa
ja
push
inc
and
subl
dec
ret
push
negl
es
push
sbb
pop
sub
mov
mov
sub
divb
paddb
cmp
es
dec
mov
mov
pop
or
xchg
xchg
cmp
jl
shll
orb
lahf
fstl
stos
fnstcw
cmp
in
popf
test
jb
stos
rclb
aam
push
mov
jp
movsl
adc
xchg
adc
mov
adc
xor
add
jae
mov
movsb
dec
mov
mov
arpl
and
mulb
xchg
adc
xchg
mov
xchg
popf
dec
push
pop
sahf
jnp
data16
fs
mov
pop
test
out
xchg
pushf
cmp
xlat
mov
push
add
insl
cld
xchg
cmp
cmp
out
jle
mov
mov
lret
fs
test
push
xchg
in
jae
xor
dec
pop
in
mov
shrb
ret
data16
mov
sub
addr16
sbb
rclb
xchg
pop
lret
adc
mov
xchg
stos
test
jne
add
lcall
xor
outsb
test
jb
cmp
push
pop
sub
lret
testb
divl
xor
and
pop
mov
and
jmp
dec
out
idivl
mov
scas
mov
lret
or
mov
push
sar
cld
imul
fwait
jbe
inc
add
sbb
in
jmp
jnp
bound
pop
sub
sub
iret
enter
inc
repz
sti
rcr
repz
jmp
pop
cmp
nop
add
mov
mov
and
mov
out
test
adc
xor
shr
pop
jns
sbb
or
cmpsb
cltd
fcom
es
mov
hlt
pop
inc
pop
sarl
jp
jecxz,pn
or
jge
push
in
pop
insb
out
inc
gs
nop
lret
fisubs
out
dec
push
xchg
cmp
repnz
rorl
repnz
imul
imul
push
inc
and
sbb
fsubrp
mov
cmc
mov
inc
cwtl
pop
sbb
cmp
jp
call
lock
push
out
add
imul
movsb
imul
ret
call
or
and
loope
mov
push
xchg
xchg
insb
push
mov
outsl
js
sbb
fs
hlt
cmpl
ret
xor
or
cmp
dec
cmc
fists
mov
sub
int3
lods
add
call
int3
sub
xchg
pop
xor
outsl
call
out
imul
das
ds
cmp
imul
mov
in
mov
loopne
xchg
je
sbb
xchg
movsl
cs
push
mov
jg
test
xchg
pushf
jge
fisubrs
mov
pop
cmpb
mov
push
jge
std
imul
test
bound
push
andb
gs
rclb
push
inc
push
adc
cmc
addr16
das
subb
adc
flds
cmp
mov
imul
in
lret
lds
sub
daa
adc
rcr
fnstenv
ds
xchg
mov
adc
xchg
sbb
sbb
pop
pop
outsl
and
pop
or
pop
shrl
lret
insl
arpl
mov
sbb
test
test
sub
repz
jno
mov
nop
out
cmp
into
jge
and
add
mov
push
xor
stos
rcrl
test
enter
loope
insb
pop
pop
and
dec
stc
test
mov
das
or
mov
roll
mov
aad
sbb
or
push
mov
cli
in
xor
jp
popf
int3
mov
lret
ds
inc
cld
lds
mov
in
jmp
mov
mov
stos
mov
pop
sbb
fwait
pop
push
pop
push
dec
rclb
aad
jae
dec
jecxz
xchg
or
push
scas
stos
in
and
and
scas
cmp
mov
sahf
mov
pop
and
jp
cmp
mov
call
cmp
test
cwtl
dec
mov
mov
mov
jge
dec
mov
pop
fisttps
jb
lods
fwait
arpl
in
inc
xchg
push
cmp
pop
sbb
stos
push
lea
and
fs
jno
mov
hlt
mov
test
dec
test
jl
xchg
jo
movsl
movsb
pop
add
mulb
scas
jg
adc
pop
inc
cli
js
dec
xchg
adc
loope
pop
mov
lcall
pop
in
xchg
pop
mov
imul
add
push
aas
into
movsb
cmpsl
and
jecxz
add
jae
add
js
jg
cmp
and
jns
ds
push
xor
sbb
arpl
std
mov
outsl
push
fs
mov
dec
push
cmp
out
adc
push
add
js
clc
subb
int3
shrb
sub
add
cmp
sti
xor
push
cmp
js
cmpsl
or
xchg
mov
sbb
lock
add
and
push
pop
cli
xchg
aaa
ss
insl
inc
out
adc
add
cli
mul
add
sbb
jmp
inc
in
mov
dec
pop
in
rcrl
repnz
insl
hlt
mov
aas
adc
xor
fwait
test
sbb
lcall
ja
xchg
enter
adc
lea
fistpl
inc
jecxz
xchg
adc
jge
or
sti
clc
ja
fstps
jp
pop
hlt
out
aad
mov
sbbb
pop
jle
js
push
adc
fcompl
push
adc
lahf
subb
dec
das
xor
dec
push
mov
adc
arpl
fiadds
out
out
in
js
pushf
test
int
popa
je
adc
loope
add
cmp
fdivrl
push
xor
push
push
xchg
pop
je
inc
out
jo
inc
insb
clc
adc
mov
js
filds
pop
inc
jg
std
test
sti
int
push
shlb
ss
pop
popf
das
jmpw
mov
sarl
fwait
pop
popf
cmpsl
mov
dec
test
jge
out
and
pop
cmpsl
imul
xor
iret
push
cmp
and
mov
mov
or
repnz
cmp
jb
ljmp
jns
pop
sahf
dec
lods
jp
les
add
scas
mov
dec
out
jge
cltd
inc
int
shr
out
out
out
push
stos
jecxz
mov
pop
pusha
int
pop
xor
sub
ud2
pop
pop
adc
stc
or
int
lahf
push
out
sbb
push
push
push
sub
inc
jne
push
imul
cmp
pop
pop
mov
dec
frstor
sub
test
cltd
mov
push
and
jmp
je
cmpsl
mov
pushf
sbb
out
inc
mov
loope
pop
jne
ds
fildll
add
xchg
pop
push
test
fnsave
pop
jle
into
add
mov
push
fstpt
push
push
repnz
mov
addb
rorl
cltd
cmpsl
outsb
xor
sbb
jecxz
xchg
mov
sub
xchg
jg
jle
cmp
dec
inc
cmp
sub
test
cmp
fstpt
mov
jbe
mov
cltd
iret
jge,pn
xor
adc
sti
jp
cmp
dec
inc
mov
inc
sub
xor
stos
std
jmp
clc
dec
loop
aas
mov
je
clc
das
jge
icebp
mov
cmc
aas
daa
add
fiadds
cs
lret
adc
daa
ss
test
push
sbb
sbb
adc
popf
push
cli
ret
in
mov
sbb
mov
cwtl
mov
xchg
cmpsl
shll
dec
jbe
mov
push
xchg
cmpsl
add
popa
dec
in
test
mov
jl
shll
mov
lods
pusha
mov
or
add
sub
pop
jnp
fcomip
cmp
jb
jns
jmp
fistpll
sub
add
adc
jo
push
cltd
jle
mov
shll
inc
push
std
in
mov
dec
adc
outsl
pop
push
xor
lret
cltd
shl
mov
int
shll
cmp
aaa
mov
xchg
sbb
mov
loop
dec
aad
fcoml
or
lahf
arpl
sbb
cs
dec
loopne
xchg
jbe
popa
and
mov
rcrl
xor
lea
push
push
test
mov
xor
push
out
fs
into
push
sarl
jmp
lahf
out
clc
add
xor
jg
fyl2xp1
fs
scas
cld
sbb
pop
jecxz
dec
mov
adc
into
jmp
and
ds
push
ljmp
mov
sbb
sbb
sahf
adc
ss
mov
ss
pxor
icebp
add
inc
sub
sbb
les
mov
sbbl
pop
sahf
xchg
ret
xchg
adc
mov
cmp
sub
push
xlat
sarb
pop
xchg
push
into
fs
dec
cmpsl
insl
jbe
outsl
aaa
aaa
ss
frstor
mov
imul
xor
sbb
mov
rclb
mov
pusha
test
xor
inc
mov
test
push
leave
popf
int3
adc
loop
fldt
subl
or
test
mov
sub
fmul
dec
mov
lret
xchg
rol
xchg
lret
cli
cmpl
popa
push
cmp
and
push
sbb
loopne
dec
push
in
rolb
movsl
or
inc
nop
aas
out
call
sub
fisubl
daa
test
xchg
sbbl
xchg
gs
cwtl
and
mov
xchg
gs
add
out
push
push
or
dec
pop
lahf
jne
loopne
xlat
xchg
leave
sti
aaa
mov
sbb
test
stc
cmp
fcmovnb
call
mov
mov
cmp
lcall
je
icebp
test
or
push
clc
daa
cmpsb
or
inc
adc
mov
sbb
jecxz
ss
xchg
test
std
adcl
lret
lcall
dec
int3
mov
mov
rol
icebp
call
push
xor
push
out
mov
int
out
or
mov
and
push
lock
fisubrl
lock
mov
les
repz
repnz
sbb
fdivs
xchg
pop
cmc
leave
mov
or
push
xor
sarb
cmp
mov
mov
dec
inc
and
cmp
test
lcall
fadds
cmpsb
nop
xchg
loope
loope
test
lods
xor
cmp
push
mov
stos
and
cmc
cmp
sbb
xchg
sbb
inc
or
jmp
ret
cmc
imul
and
jp
xchg
mov
mov
fs
idivl
shll
jp
fisttpll
aaa
into
into
rcl
int3
pop
or
pop
adc
jle
js
mov
stos
aad
fadds
lods
add
lahf
sbb
inc
in
pop
xor
stos
sub
subl
cs
ds
xchg
out
mov
push
jae
mov
pop
mov
xchg
dec
add
test
cld
gs
imul
mov
cli
jmp
push
jo
xchg
movsl
sbb
adc
jp
enter
jg
and
das
out
xlat
out
pusha
cmp
cmpsb
rorl
movsl
clc
ss
adc
push
js
stos
xchg
cmp
inc
roll
inc
std
mov
into
or
pop
xchg
setp
imul
ja
mov
out
mov
pushf
loopne
fwait
cwtl
sub
sbb
push
mov
inc
ss
aas
mov
mov
jnp
pop
and
jle
mov
xchg
dec
push
dec
push
mov
filds
pop
adc
add
mov
mov
ljmp
jecxz
mov
pop
in
fbstp
cmp
xchg
push
cmpsl
pop
pop
in
sbb
ret
daa
loope
inc
push
push
xor
scas
pop
sub
mov
js
mov
ret
hlt
int3
mov
push
ret
mov
incl
js
int
lods
repz
imul
push
ficoml
jp
sti
push
push
sub
das
movb
call
test
sub
in
push
out
in
jge
xchg
call
imul
mov
pusha
inc
mov
mov
push
popa
cmpsl
jbe
mov
add
mov
addr16
sub
lods
pop
mov
fidivrs
sub
and
xchg
scas
pop
cmc
leave
std
fdivl
mulb
mov
mov
push
int3
mov
popf
sbb
mov
mov
call
clc
imul
sub
sahf
lods
mov
dec
pushf
pop
xor
mov
sti
xor
add
stc
xor
loope
adc
ficomps
add
push
gs
repz
lcall
dec
sbb
push
and
loope,pt
jnp
xchg
pushf
mov
xor
jae
out
fisubs
inc
mov
sbb
adc
push
xchg
scas
sub
cli
in
inc
dec
mov
scas
imul
aas
mov
leave
pop
into
lea
fdivrs
pop
add
insl
pop
mov
out
fadds
push
into
test
lret
add
add
pop
adc
outsl
aaa
lret
cld
lds
fildll
mov
movsl
add
adc
outsl
dec
addl
push
cmp
cmpsl
xchg
push
jl
pop
and
ja
mov
repz
aas
int3
leave
das
ss
popa
xchg
jnp
mov
sbb
mov
and
movsl
aas
lcall
rol
mov
dec
daa
add
scas
push
fldt
sbb
fdivrl
adc
call
cmp
into
call
pushl
ret
jp
dec
pop
mov
mov
push
xor
arpl
jecxz
fsubrl
xchg
repz
inc
imul
subb
lret
jge
fldl
mov
insb
dec
rclb
push
ljmp
outsl
test
outsl
xchg
adcb
add
call
imul
adcl
insl
mov
jmp
cmp
int3
test
add
stos
cmp
in
lahf
cmp
ss
xchg
icebp
push
popl
jb
mov
shl
jne
mov
dec
sbb
or
xor
push
jg
pop
lcall
jnp
adc
mov
xor
stos
xor
cmp
push
sbb
adc
seto
mov
aaa
cmp
pop
jnp
lea
das
addr16
adc
xchg
mov
jbe
fcomi
add
pop
cmp
inc
jecxz
lds
xchg
pop
push
adc
in
call
inc
mov
dec
not
xor
push
shlb
mov
adc
xor
or
aam
in
pop
xchg
test
mov
fdivs
cmp
sarl
dec
dec
outsl
pop
cli
sub
or
insb
lret
mov
sbb
andb
fimuls
lret
push
fwait
pop
jo
mov
inc
xor
mov
pop
pushf
push
test
nop
push
aam
mov
loopne
push
cltd
or
enter
and
push
mov
les
mov
jp
sbb
pop
stos
add
pop
pusha
xchg
test
ljmp
in
fldt
stos
or
jae
and
sbb
inc
add
pop
push
push
cli
add
dec
inc
adc
call
out
cmpsb
xchg
aaa
jnp
inc
cmp
push
jg
inc
arpl
pushf
inc
xor
pop
jp
iret
push
out
inc
movsb
pop
mov
xor
push
mov
mov
popf
xchg
psubusb
mov
xor
gs
xchg
rcll
movsb
popf
mov
xor
xchg
js
mov
jmp
mov
inc
bound
iret
mov
jg
add
imul
ret
and
loopne
xor
mov
jae
scas
inc
mov
leave
ret
das
insl
and
jmp
inc
xor
cli
mov
shlb
xchg
cwtl
rorb
add
stos
fdiv
test
movl
fiadds
xor
fstpt
lfs
fdivp
or
xorl
test
push
mov
xchg
mov
ja
sti
fucomi
dec
push
in
hlt
push
xor
call
xchg
mov
mov
inc
lea
pop
xchg
pop
or
les
fisttpll
push
popf
or
loope
jle
push
mov
rcll
out
ja
fwait
popf
xlat
je
pusha
jo
iret
jns
lcall
inc
xor
fbld
insl
pushf
adc
and
xchg
aaa
arpl
adc
inc
mov
or
daa
lock
hlt
dec
cmp
adc
ja
popa
jl
mov
arpl
dec
cmp
cmc
jl
ss
subb
imul
gs
das
pop
mov
and
lods
cmp
xor
dec
or
iret
in
das
pop
std
subl
cmp
pop
outsb
enter
jb
sub
inc
or
ror
push
xchg
jo
fwait
dec
fmull
adc
inc
mov
xor
lock
bound
daa
fwait
inc
repnz
sbb
cmpsb
jns
mov
loope
jg
sub
enter
mov
imul
jecxz
inc
or
mov
sub
gs
cmp
ds
adc
xchg
xchg
cmpsl
loop
add
dec
cltd
into
das
enter
out
pop
pop
jle
jle
pop
faddl
es
jne
test
lea
stc
mov
sbb
in
add
jns
mov
repz
lea
pop
nop
lcall
push
dec
ds
test
mov
jnp
out
cltd
in
mov
mov
sbb
adc
jb
popf
mov
fsub
bound
in
push
fsubs
in
sub
or
fldl
push
cmp
mov
stc
call
cmp
jmp
push
decb
stos
sbbb
jp,pt
mov
out
addr16
or
push
fisubrl
shl
jno
scas
jno
xchg
test
xor
sbb
int
cmp
mov
arpl
jns
mov
push
jne
shlb
scas
lret
sub
pushf
jae
xor
push
mov
out
js
arpl
push
add
test
jno
mov
adc
sub
mov
rcrl
add
mov
lea
push
scas
push
ss
out
mov
ret
mov
sbb
aad
or
jbe
mov
xchg
jns
out
lret
mov
mov
add
lea
adc
sub
xorb
test
mov
scas
test
mov
hlt
mov
pop
gs
insb
xchg
stc
mov
mov
cmpsb
mov
sub
jle
xchg
sbb
fs
in
pop
test
gs
jmp
call
jg
insl
jp
dec
push
inc
aam
divl
fstp
dec
push
mov
cmpsb
adc
adcb
lock
lcall
mov
fdivr
dec
repnz
pop
popf
xchg
sub
dec
mov
cmpsb
repz
sahf
pop
fiaddl
mov
sub
jecxz
mov
bound
xchg
mov
inc
popa
inc
sub
xor
sbb
testb
jns
adc
xchg
stc
daa
jecxz
sbb
adc
adc
sub
lret
push
insl
pushl
mov
xor
push
dec
push
loopne
dec
cmc
cmp
jo
ja
shll
push
std
xorb
stos
xchg
pop
xchg
std
emms
insl
dec
and
push
xor
enter
adc
xchg
mov
loopne
mov
pop
sti
stos
xchg
out
mov
jle
scas
das
cwtl
dec
dec
xor
sti
xor
scas
sbb
in
cltd
xchg
notl
ficomps
scas
rolb
cmp
push
push
cmp
loop
pop
pop
push
pop
mov
cmc
es
inc
int3
xor
add
rolb
mov
mov
mov
cmpsb
and
inc
test
mov
inc
pop
xorl
push
rolb
pop
out
outsb
mov
rcpps
es
jle
inc
imul
loop
pop
adc
lea
mov
mov
xchg
push
xchg
int
orl
addb
and
leave
call
out
popf
or
inc
faddl
mov
es
sub
mov
add
ret
sbb
xor
inc
inc
dec
xchg
mov
stc
dec
pop
or
sub
cwtl
mov
push
sub
sti
jnp
sbb
sub
pop
mov
push
cmc
jg
daa
cli
mov
dec
add
sub
xor
cwtl
std
adc
add
dec
jl
fsubrs
xor
cmpsb
insb
mov
dec
add
test
fisubl
push
push
add
xchg
push
xlat
push
dec
lock
test
je
push
pop
fadds
pop
adc
xor
repz
or
xchg
sti
xchg
test
scas
incb
cmp
xor
lods
push
ret
je
roll
es
xchg
push
xchg
and
inc
jge
insb
inc
repz
mov
pop
dec
js
rcll
outsb
das
int
jnp
outsb
jmp
or
les
push
sbb
aad
hlt
mov
andb
ja
adc
adc
adc
andl
stc
push
cwtl
ss
addr16
insl
movsl
fwait
xorl
add
jge
sub
sti
push
sbb
movsb
jp
dec
enter
jl
sub
sahf
setge
shlb
imul
cmp
mov
mov
pop
dec
jae
lds
sahf
xor
sbb
adc
adc
pop
add
mov
xchg
mov
sbb
pop
sbb
mov
push
movl
mov
xchg
or
inc
pop
mov
cltd
mov
imul
insb
cmp
leave
in
cli
push
push
in
dec
or
inc
test
rclb
push
sbb
xor
and
imul
das
pop
and
inc
cmp
xchg
jl
inc
pop
outsl
jp
fsub
xchg
pop
lret
flds
pushf
add
pushf
jecxz
jo
add
aas
adc
stc
in
imul
flds
aam
mov
loop
push
adc
push
dec
mov
fisttpll
dec
ds
shlb
lret
jo
add
xor
scas
daa
push
push
movsl
stos
test
sbb
imul
bound
clc
or
icebp
mov
enter
push
call
imulb
xchg
pop
sub
sub
in
jns
mov
mov
jno
sub
mov
mov
inc
sub
dec
in
js
in
mov
xchg
ljmp
ja
lds
dec
push
sbb
push
stos
sub
insl
jns
bnd
call
cmovno
rclb
and
cmp
push
les
mov
repz
cs
lcall
aam
dec
mov
mov
and
out
addr16
lret
fs
or
xor
mov
cmp
jp
shl
add
lahf
out
pop
and
out
jg
addr16
fxch
xchg
and
lret
mov
dec
dec
dec
call
sarb
xchg
xchg
mov
shlb
push
lret
mov
add
cmp
mov
xchg
cld
fwait
sub
rclb
adc
mov
jbe
addr16
mov
loopne
jo
iret
lds
call
jno
sub
mov
test
mov
sbb
sub
les
add
sub
daa
mov
dec
stos
inc
jno
jg
std
iret
ret
lds
jge
and
stos
in
mov
icebp
inc
mov
or
ljmp
push
or
mov
add
movsb
ret
pop
imul
jne
inc
xchg
or
ja
pushf
addb
push
in
mulb
push
out
cmpsb
ss
lcall
jne
test
lods
push
rclb
mov
push
gs
pop
mov
test
push
aam
je
sbb
inc
jne
push
popf
xchg
pop
jne
js
mov
idivb
and
push
jge
add
ss
ret
push
mov
and
cli
int3
out
stos
sarl
sbb
pushf
test
add
xor
leave
repnz
jo
jecxz
add
push
xchg
push
adcl
sbbl
clc
test
xor
xlat
inc
xchg
xchg
outsl
sti
mov
pusha
fdivl
xor
cmp
mov
dec
mov
out
mov
mov
dec
cmp
xor
in
cmp
or
pop
pop
outsl
les
sbb
xchg
dec
cmpsl
and
mov
repnz
stos
lahf
shll
scas
inc
inc
jbe
adc
inc
push
imul
imul
loope
in
pop
jns
jae
popa
push
enter
in
les
scas
sbb
movsb
test
add
dec
adc
out
xchg
out
popf
jmp
pop
clc
adc
or
aas
and
and
mov
data16
das
pop
inc
outsl
or
jae
dec
adc
cld
xlat
out
jge
lret
mov
jne
or
add
jmp
lret
int3
or
dec
mov
inc
mov
lret
roll
loop
cmp
inc
dec
xor
fwait
lret
pop
loop
pushf
or
lahf
adc
sbb
arpl
pop
and
push
xorl
test
push
sub
stos
fcmovnbe
xchg
stc
pop
cmpsb
gs
int
sbb
add
imul
xor
xor
cmp
inc
and
jno
repnz
ja
sub
pop
popa
fstpl
je
leave
cwtl
inc
cltd
ficoml
stos
sbb
aaa
cmpl
sar
push
dec
sub
mov
mov
or
sub
lods
sbb
pop
clc
and
int
pop
aad
fstpt
aaa
das
movl
sub
xor
inc
lock
nop
fldenv
enter
sbbl
mov
movsb
mov
orl
loope
push
add
out
cmp
mov
add
aam
push
pop
and
lea
xchg
aam
adc
cmp
test
inc
cmp
jmp
jb
add
or
call
add
pop
daa
mov
add
push
sub
pop
gs
adc
and
cmp
fsin
hlt
dec
movsl
jle
dec
shl
pop
mov
ljmp
test
movsl
subl
mov
cltd
pop
pop
jne
sbb
shrl
cs
mov
xlat
sub
loopne
cmpb
ficomps
add
rclb
push
call
inc
jmp
cltd
mov
aad
inc
gs
pop
js
popa
jecxz
xor
push
jmp
rorb
ret
fwait
nop
pop
add
jne
shrl
imul
inc
inc
dec
pop
push
rol
mov
insb
ret
mov
jns
scas
pop
jg
mov
mov
in
and
xchg
mov
push
insb
dec
sub
jns
or
sar
cmp
popf
pop
cmpsb
out
xchg
in
hlt
in
xchg
out
mov
movsl
mov
push
lds
fadds
lret
cmp
sub
andb
data16
adc
fistl
lods
cwtl
mov
cmpsb
cmp
adc
fists
fisubl
repz
rcrl
loope
xchg
dec
movsl
dec
sti
imul
cmp
xchg
loope
clc
or
xchg
ficompl
popf
clc
sub
xor
xchg
aas
data16
xlat
ret
dec
xchg
adc
cmp
outsl
test
sub
movsl
jo
das
xchg
inc
pop
rorl
xchg
jno
lock
or
jmp
outsl
adc
shrb
loopne
cmp
push
jnp
data16
lahf
ret
adc
or
and
adc
pop
fistl
inc
in
push
jno
clc
pop
mov
cmpl
push
push
xor
jle
xchg
cmpb
sbb
mov
ljmp
inc
mov
mov
movsb
xor
or
cltd
repnz
jmp
rcll
fs
inc
iret
xchg
mov
dec
push
shr
and
mov
jo,pt
add
dec
into
imul
xor
xor
in
and
es
cmpsl
mov
outsb
outsb
mov
ljmp
jnp
jno
divb
dec
aam
cmc
mov
dec
mov
jne
shrb
fdivr
adc
pop
cwtl
movsb
xchg
das
xchg
cli
mov
dec
clc
cmc
fistpl
repz
fimuls
repz
aaa
movhps
je
mov
cmpsl
mov
arpl
ds
mov
and
jbe
xchg
lea
adc
dec
out
xchg
pop
shrb
and
xchg
and
xor
test
cmp
mov
int3
push
lahf
into
push
cmc
mov
loop
mov
cs
outsb
jne
fldl
xor
repnz
dec
adc
push
inc
mov
mov
mov
mov
inc
pop
pusha
inc
xor
das
repnz
adc
int3
pushf
jge
and
sbb
cmp
pop
not
in
xchg
lcall
adc
cmp
xor
test
sub
mov
cmpb
fisttps
sbb
sub
inc
cmpsb
xchg
and
faddl
cmp
jl
jmp
lahf
mov
test
repnz
stc
addr16
mov
adc
push
jno
lods
push
scas
icebp
fisubs
cwtl
lods
sbb
mov
lcall
add
xchg
int
subb
loop
cmp
pop
jnp,pn
mov
pop
push
ss
mov
add
out
in
lahf
dec
jbe
push
jle
shr
mov
popf
test
lods
jnp
enter
add
jmp
mov
repz
sar
test
or
mov
call
notl
shl
mov
xchg
test
xor
sub
fisttpll
cmc
pop
jecxz
or
pop
popa
jno
push
or
popf
inc
aad
popf
gs
cmp
push
inc
rclb
push
imul
push
push
push
add
cmp
stos
mov
mov
pop
xlat
divb
in
cmp
xor
pop
outsl
mov
jns
stos
je
inc
movsl
xchg
addb
or
in
mov
mov
andl
cmp
pushf
push
shll
mov
fdiv
outsl
sub
jp
mov
aas
xor
xchg
lret
pop
inc
stos
cmp
shll
popf
lcall
test
add
mov
or
push
test
sti
pop
les
sub
in
sbb
loopne
pop
aas
das
rcr
mov
or
lds
out
jmp
inc
dec
add
repnz
sbb
jl
out
mov
cmp
jne
inc
dec
pusha
lret
adc
mov
mov
inc
xchg
je
mov
mov
arpl
cwtl
xchg
gs
jp
fisubl
adc
mov
pop
mov
push
jmp
or
popa
mov
pop
cmp
sti
imul
jbe
xchg
orl
push
mov
jno
xor
sbb
scas
fmull
hlt
jl
popa
pushf
mov
add
jmp
jge
xchg
mov
push
bound
mov
testl
dec
dec
xlat
andb
add
add
stos
dec
push
or
adc
mov
test
pop
xlat
cmp
pop
insl
sbb
loopne
pop
ffreep
sahf
push
push
pop
iret
mov
sbb
or
das
inc
fwait
cmpsl
pop
cmp
pop
fdivrs
pop
mov
adc
push
cmpsl
sub
mov
cmp
push
je
mov
xor
scas
movsb
add
testl
push
jmp
aam
adc
sub
js
push
lock
mov
mov
popa
jmp
mov
jecxz
filds
in
mov
imul
mov
inc
dec
mov
pop
rorl
cmc
sub
jmp
inc
jp
subb
xor
stos
gs
fisubrl
xchg
cs
icebp
adc
das
adcl
pop
es
pop
inc
pushl
jnp
rorb
push
push
mov
mov
aaa
roll
cmpsl
sbb
lret
outsl
xor
sub
nop
cmp
pop
xchg
in
hlt
xchg
sub
fisttpl
gs
push
cmpsb
lahf
or
push
add
pusha
or
jmp
jae
adc
fwait
jecxz
lds
mov
pop
mov
out
int
xor
mov
cmpsb
inc
jne
and
inc
enter
mov
clc
test
mov
push
bound
inc
xlat
push
shl
clc
xor
insb
pop
cmc
pop
xchg
push
mov
cmp
insl
adc
lcall
iret
push
xchg
and
jmp
jns
sarl
test
inc
sbb
cmpsl
fisubl
push
popa
mov
pop
lahf
leave
mov
sbb
divb
cmp
mov
xchg
pop
std
lods
mov
adc
mov
fcmovnb
cmpsb
scas
sbb
or
sbb
xchg
inc
cmp
pop
mov
lods
mov
das
repz
insl
jbe
scas
jne
pop
test
stos
dec
xchg
xor
fsts
adc
add
xchg
jns
mov
lds
roll
sahf
lcall
jne
hlt
inc
repnz
xchg
dec
mov
jbe
or
fwait
lods
bound
stc
fadds
adc
jne
or
mov
jae
out
cmp
jp
nop
loop
xchg
inc
cmpsb
mov
dec
sbb
ret
mov
lret
lock
push
mov
cwtl
cmp
push
mov
leave
call
or
test
mov
sub
mov
add
jp
push
in
mov
jne
mov
mov
xchg
and
push
push
mov
mov
mov
lods
iret
mov
rcrb
lds
test
shlb
sarl
bound
inc
clc
add
jge
cmp
xchg
cmp
jb
scas
enter
or
push
int
mov
lock
adc
data16
mov
xchg
rdpmc
jl
incl
mov
ss
adc
jns
inc
sub
pop
jmp
cmp
cmpsb
jb
movsb
xlat
popa
or
pop
jnp
inc
push
ret
dec
int
xchg
ss
push
popf
sahf
cmc
sti
xor
jno
pusha
shll
arpl
inc
dec
mov
out
pop
push
sbb
daa
hlt
test
sbb
add
and
ficomps
mov
das
or
dec
mov
dec
testb
andb
neg
dec
sub
rclb
jmp
sub
pop
pusha
sub
call
imul
cmc
cltd
cmp
jne
into
std
pop
scas
lcall
loope
dec
enter
xor
add
rolb
mov
outsl
jle
iret
mov
rclb
push
popa
dec
addr16
orb
rcr
in
dec
fdivs
xor
dec
jecxz
sbb
mov
xchg
insl
in
test
sbb
popa
lds
and
les
xchg
jmp
mov
loope
aaa
inc
das
lret
out
sbb
or
test
and
fld1
jecxz
cmp
and
adcl
mov
push
xchg
xchg
mov
sub
cmc
inc
or
mov
and
sbb
inc
lds
push
mov
xchg
cmpsb
mov
xchg
cs
cmpsl
jle
mov
in
dec
pop
xor
lods
test
jp
int
xlat
arpl
stc
cmpsb
sahf
cmc
jl
cwtl
and
xor
mov
adc
loopne
scas
js
je
ret
inc
xchg
ret
outsl
xchg
push
lea
roll
jle
sub
stos
push
outsl
lret
testl
add
and
fs
lcall
mov
mov
jb
lret
jge
jecxz
pusha
popa
aaa
adc
call
rcrb
or
mov
cwtl
lock
stos
push
adc
roll
mov
xor
lret
ja
xor
ja
inc
or
fstpt
pusha
jo
sub
ret
ror
movsb
push
nop
sti
ret
xor
sub
add
dec
push
adc
inc
shrd
dec
or
xchg
pop
lods
icebp
mov
mov
push
adc
lods
cmp
mov
mov
faddp
out
in
jmp
repz
jbe
push
pop
leave
pcmpeqd
or
mov
ljmp
loopne
out
cmpsl
insb
inc
in
pop
push
mov
or
push
push
shrl
mov
jnp
add
jns
mov
pop
jmp
bnd
lock
lret
stos
and
loope
stos
inc
rcrb
fdivs
push
mov
int
push
scas
adc
bound
cmc
mov
sbb
lret
mov
pop
pop
add
mov
jns
and
hlt
aad
shlb
pop
out
push
and
gs
imulb
out
xchg
xchg
jge
aaa
fwait
test
popf
fsubrp
mov
mov
jmp
xchg
sahf
lret
mov
xor
push
add
lods
mov
cmpsl
loopne
call
inc
clc
push
in
mov
push
mov
gs
in
or
add
adc
dec
rcrb
dec
push
ret
ret
mov
and
addr16
push
jl
arpl
inc
daa
mov
sub
cwtl
testb
mov
pop
adc
pop
das
and
sub
pop
clc
iret
les
mov
and
push
dec
and
in
addr16
dec
adc
push
in
or
jle
cltd
or
shrb
sbb
and
nop
xchg
pusha
andb
pop
addr16
mov
adc
cmp
cwtl
hlt
jb
scas
sbb
je
ss
mull
pusha
push
jb
cmp
mov
pop
push
mov
ss
mov
xor
and
cmp
movsl
cmpsb
ljmp
jmp
fcoml
or
xchg
sub
and
jae
in
mov
xchg
or
mov
pop
xorl
xor
pop
xchg
push
das
fistpll
xlat
cmc
clc
jae
xor
sti
push
push
adc
stos
inc
dec
xlat
push
sub
push
rorb
push
pop
insl
mov
dec
mov
mov
test
es
cmpl
ljmp
fbld
xor
enter
inc
test
enter
ret
sbb
or
aam
int
mov
rol
sub
pop
clc
cwtl
jp
adc
inc
xor
lcall
xor
jge
sub
push
scas
hlt
shl
out
sbb
mov
sahf
push
cltd
mov
cmp
push
inc
pop
push
mov
or
clc
mov
dec
xchg
aam
das
stos
jle
mov
dec
out
shl
jbe
add
inc
sub
fwait
mov
push
xor
or
stc
gs
arpl
mov
rcl
sbb
cmp
or
dec
jne
in
xor
sub
xchg
sub
dec
cmp
push
fistpl
lods
push
mov
and
mov
xchg
dec
mov
out
push
cmc
pop
shlb
fcoml
leave
mov
add
dec
adc
por
fs
outsl
jl
push
cmc
jns
in
push
add
imul
mov
xchg
adc
xchg
mov
and
cmp
jge
or
adc
jp
mov
popf
aam
add
sub
pop
push
mov
scas
sbb
gs
mov
testl
loop
test
mov
out
fld1
fstpl
lods
hlt
into
dec
aad
lcall
inc
xlat
fdivl
pop
xor
clc
xchg
push
ret
cmpsl
and
fs
loopne
cwtl
jno
lock
mov
pop
lock
mov
andb
nop
out
push
aad
enter
inc
lods
cmpsl
pop
inc
pop
in
leave
test
mov
cmp
cmpsl
gs
lods
sbbl
and
mov
cmp
imul
mov
psrad
mov
mov
int3
lock
xchg
jmp
pop
lahf
mull
idivl
pop
push
pop
adc
out
mov
into
mov
aad
jg
mov
mov
adc
adc
sbb
xchg
sbb
inc
inc
mov
or
xchg
pop
sti
je
push
or
sub
add
xchg
dec
jge
push
push
cmpsl
cmp
imul
jl
ss
xor
imul
jge
sbb
int
movsb
cmp
xchg
out
mov
int3
test
xchg
jbe
or
sahf
out
shl
lock
mov
mov
out
mov
int
xor
dec
mov
inc
scas
xchg
push
xchg
popa
xor
stc
sahf
pop
ljmp
sbb
add
loope
lea
call
jge
xor
add
mov
fnsave
mov
testl
mov
aad
clc
pop
mov
push
shr
daa
adc
or
into
inc
mov
repnz
leave
addr16
adc
aas
sub
test
scas
inc
pusha
xchg
inc
xchg
pop
cmp
pop
and
data16
sti
rcll
mov
dec
insb
sub
lret
dec
jno
and
clc
shrl
and
jp
xchg
jne
dec
insl
out
pop
sbb
fcompl
sbb
inc
fs
cltd
dec
mov
out
jae
mov
and
pushf
push
ret
test
mov
in
jg
data16
popa
mov
mov
xor
xchg
int3
mov
mov
insb
mov
xor
push
out
ds
add
xchg
xchg
mov
sbb
add
dec
insl
fldt
inc
ja
add
inc
jp
ja
lahf
loopne
dec
mov
ja
cmp
into
idiv
jae
dec
xorl
mov
call
and
rcl
aas
mov
jo
xchg
js
int3
imul
push
xchg
bswap
sbb
mov
xor
stos
scas
and
inc
std
mov
sub
cmp
outsb
aad
ljmp
in
xor
popf
xor
mov
mov
mov
cmp
rclb
hlt
adc
or
and
sbb
repnz
filds
mov
imul
mov
int
das
cmpsl
pop
cmp
sbb
clc
or
push
push
jne
mov
fwait
adc
mov
subb
cmp
es
jmp
fwait
dec
push
rcr
sti
aad
movsb
pop
and
movsl
mov
adcb
push
pop
adcb
add
pop
out
je
mov
arpl
mov
cltd
stos
rcrb
into
cmp
fstpl
fmulp
lock
lds
xor
ja
outsl
sbbb
popf
orl
dec
aas
add
notb
sahf
xchg
lahf
cmp
leave
mov
test
incl
adc
mov
pusha
stos
jbe
lods
adc
ud1
mov
cmp
ret
in
rorb
inc
les
in
movsb
cmp
loopne
jo
lret
xor
dec
add
mov
or
mov
aas
or
dec
xor
scas
sbb
fsubs
stc
daa
daa
lahf
into
outsb
inc
mov
cltd
imul
lahf
or
xor
mov
xchg
cmp
loop
cmp
shrl
es
mov
orb
test
imul
pusha
fsubs
jl
outsl
clc
jp
mov
insb
cld
bound
movsbl
daa
sbb
jecxz
ja
arpl
dec
xchg
adcl
sub
add
sbbb
jmp
sbb
icebp
pushf
jns
in
mov
jns
jp
jecxz
mov
mov
sub
outsb
xor
iret
inc
pop
js
push
mov
mov
jae
in
sti
aad
mov
xor
sbb
mov
jnp
dec
mov
add
xlat
cwtl
scas
loop
xor
in
lret
ret
into
enter
rcr
xchg
pusha
nop
xchg
push
inc
pop
inc
and
jbe
inc
vmwrite
jno
js
loop
inc
sbb
in
jno
enter
sbb
mov
imul
pop
add
adc
add
leave
dec
popa
mov
shrl
gs
sbb
fildl
jl
adc
pop
mov
or
or
push
lods
push
jno
lcall
outsb
inc
add
push
add
notl
test
mov
add
ds
xchg
addl
fstpt
lahf
shr
icebp
push
mov
jmp
lods
lcall
mov
jbe
inc
inc
push
and
inc
shl
push
lock
lcall
inc
ja
fmuls
add
sub
inc
push
ljmp
ret
mov
rclb
ds
aaa
addr16
out
inc
inc
cmc
or
pop
or
sbb
adc
stos
inc
sub
push
shld
loop
fstpt
js
out
or
sub
enter
movsb
bound
pop
jecxz
mov
adc
leave
mov
add
lcall
jg
inc
cmp
rclb
inc
ds
jmp
xor
xchg
xchg
xor
sbb
mov
dec
fimuls
mov
cmpsl
sub
shrb
dec
push
shrl
cmp
and
mov
lds
out
scas
sahf
fisttpll
in
pop
out
pop
cld
dec
sbb
dec
int3
xchg
mov
imul
mov
aaa
mov
inc
addr16
jae
cltd
popa
mov
test
pop
gs
push
xor
and
mov
ret
or
jae
ljmp
cltd
les
xchg
lahf
in
push
or
inc
cmpsb
call
fsubrl
movsl
xor
shl
push
clc
scas
adc
dec
inc
sbb
scas
dec
inc
mov
jns
push
cs
jecxz
push
es
rorb
in
push
mov
imul
cltd
xchg
xlat
mov
insb
jg
pop
inc
sti
push
insb
xchg
push
dec
or
mov
fadd
cmp
ds
adc
call
fadds
lock
and
jg
aam
push
sbb
stos
scas
xor
lahf
int3
sbb
sub
mov
in
push
or
iret
jmp
movsb
movsb
push
mov
repz
lods
add
cli
push
mov
mov
jne
ja
movsl
ret
mov
sbb
lods
push
insl
loop
adc
dec
cmp
push
fwait
sub
sub
imul
scas
lods
imul
das
nop
sub
aas
mov
out
scas
ljmp
cwtl
js
pushf
inc
frstor
fisubs
imul
outsl
fnstenv
cmp
sub
xor
pop
inc
je
js
or
sbb
mov
mov
loopne
ffreep
mov
or
xchg
ret
outsl
mov
shlb
enter
mov
and
fsubrs
push
cld
iret
add
cmp
enter
dec
mov
adc
fs
shll
adc
lea
dec
xorb
pop
notb
pop
xor
std
push
ja
add
inc
mov
sub
cmp
mov
scas
imul
pop
popf
into
aas
xchg
mov
rol
fbstp
or
push
or
sbb
mov
nop
mov
cmp
add
fsubrl
loopne
cmp
sti
inc
and
int3
loop
pop
imul
test
test
enter
or
mov
inc
cmpsl
push
xor
pop
sub
mov
jb
sti
lcall
add
xor
sti
push
xchg
sbb
inc
jae
push
xchg
lret
sbb
test
test
sub
loop
jb
or
loop
xchg
test
insb
rorb
pop
inc
pushf
push
pop
jb
add
adcl
pop
rcr
push
pop
in
cmp
mov
mov
mov
push
pop
fcmovb
ja
inc
aad
adc
out
aas
and
and
xlat
loope
insb
stos
in
add
fwait
mov
xchg
jns
fs
ljmp
ret
mov
mov
jae
jmp
gs
out
aam
pop
adc
enter
in
sbb
mov
outsb
insb
and
nop
mov
push
js
jle
push
clc
loopne
fwait
sub
pop
sbb
xchg
xchg
mov
cmpb
or
jmp
out
pop
add
push
adc
xor
and
jg
test
lcall
addr16
sub
cwtl
dec
xor
popf
je,pt
lods
cmp
inc
sahf
or
mov
jecxz
cmpsb
cmp
jmp
daa
adcl
inc
ds
push
push
push
mov
in
jge
sbb
sahf
ja
mov
das
mov
fildl
stos
sub
or
mov
pop
fiaddl
pop
daa
mov
fdecstp
cmpsb
jne
int3
adc
daa
rol
mov
mov
mov
popf
fmuls
sbb
repnz
sbb
sbb
in
fwait
popf
fimuls
data16
fistps
and
mov
bound
xchg
or
mov
pop
xchg
pop
mov
cmp
ret
xor
xchg
ss
pop
jo
stos
and
mov
push
mov
add
sbb
scas
and
jp
negb
mov
jb
xchg
cli
adc
pop
jbe
or
adc
mov
sahf
cmp
sbb
push
jl
pop
je
loope
jno
mov
lcall
fsub
add
or
sub
mov
pop
out
outsb
imul
cltd
pop
or
push
inc
pop
cmpl
pop
bound
ja
mov
fistps
lock
hlt
add
xor
jne
icebp
in
and
arpl
dec
into
loop
pop
add
jecxz
inc
pop
push
sbb
cwtl
xor
hlt
ljmp
lds
cld
and
push
sub
adc
rolb
cmp
arpl
mov
mov
mov
int
dec
fisttpll
add
cmp
cmp
stc
cmp
in
inc
mov
push
pop
push
push
pop
or
movsb
mov
dec
pop
mov
cld
jae
ret
bound
negb
lods
push
fisubl
aad
lds
mov
cltd
pop
cmp
out
je
repz
nop
jo
xchg
mov
sbb
std
mov
addr16
lods
loope
mov
out
hlt
xchg
ret
push
mov
outsb
cwtl
xor
add
ljmp
add
sbb
jge
daa
mov
jno
call
mov
jno
mov
test
and
shlb
jbe
movsb
cmpsl
sub
xor
mov
sbb
cld
enter
jle
in
push
shl
lahf
mov
mov
mov
xchg
ret
pop
xor
enter
mov
jmp
movsb
or
push
stc
lods
das
test
push
test
sbb
subb
mov
xor
xor
cmp
loop
pop
inc
lret
xchg
pop
jge
mov
mov
popf
retw
fs
addr16
icebp
adc
or
dec
cmp
ficompl
xchg
mov
push
pop
mov
rorl
cmpsb
add
rolb
out
dec
mov
xlat
push
inc
jl
inc
sti
jb
je
adc
aad
stos
or
pop
pop
lods
jp
sub
add
inc
imul
test
sub
lcall
outsb
scas
fnstsw
adcb
shrb
inc
add
lcall
add
mov
inc
iret
mov
movsl
xchg
sub
sbb
mov
popa
xchg
out
push
dec
push
divl
imul
pop
jp
sub
dec
les
mov
pop
lock
roll
push
in
jb
mov
push
xchg
sub
or
das
je
in
fsubrs
cs
loopne
push
into
mov
aas
test
in
int
and
xor
testb
test
outsb
mov
xchg
repnz
mov
mov
lock
push
and
lcall
inc
xchg
and
mov
jo
mov
adc
push
int3
inc
pop
pop
fistpll
cmp
xchg
and
dec
lds
ret
fsubr
jbe
in
aad
push
xor
mov
mov
fsubrl
pusha
int
jg
aad
loop
cwtl
mov
fstsw
push
and
mov
hlt
cltd
nop
sarb
clc
inc
int
xchg
aad
mov
popa
mov
das
inc
jle
pop
lahf
xor
jp
cmpsb
xor
cmp
fisubrs
pop
mov
jmp
test
cltd
cltd
cld
mov
icebp
pop
stos
dec
clc
jne
inc
pushf
loope
jmp
mov
subb
dec
lock
jp
test
not
sbb
and
mov
sub
cmp
push
nop
or
sbb
add
fs
nop
adc
dec
popf
ja
cwtl
xlat
ja
shll
xchg
in
ss
jb
pusha
jecxz
xchg
out
adcb
mov
mov
imul
pop
aam
sub
or
push
in
sbb
ljmp
mov
fldpi
outsl
lds
push
push
aaa
ficomps
push
jl
and
sti
lret
sbb
aaa
mov
sahf
movsb
jmp
push
jecxz
lods
or
xchg
popl
mov
cmpsb
inc
mov
lcall
or
mov
dec
cmpsb
mov
lret
in
pop
repnz
mov
dec
mov
xor
fdivrs
xchg
addl
push
aas
add
out
mov
sub
jno
push
repnz
fwait
ljmp
das
jmp
shrl
repz
faddp
dec
ja
mov
scas
xchg
xor
insb
stos
stos
jle
xchg
out
incl
lea
sahf
add
dec
mov
aaa
inc
or
test
adc
xor
cmpl
push
in
std
popf
push
and
rcrl
xchg
jle
repz
jo
test
inc
xchg
test
dec
adc
pop
mov
pop
fidivrl
push
fcomip
fstpt
mov
das
and
pop
sbb
xor
movsl
lret
pop
sub
sub
inc
sbb
mov
inc
pop
mov
push
jecxz
sarb
xchg
dec
out
push
inc
out
mov
aas
out
add
push
or
push
sbb
xchg
inc
mov
addb
cltd
mov
push
pop
xor
cmp
jo
jl
leave
jne
jl
in
cwtl
xchg
dec
xchg
loop
rcrb
xchg
gs
mov
fiaddl
scas
mov
lods
jge
imul
imul
or
mov
cmp
dec
pop
and
imul
pop
dec
sub
dec
sbb
ror
and
push
sub
stos
lds
mov
dec
mov
mov
adc
xchg
shlb
jne
push
mov
out
jbe
dec
out
mov
sbb
cli
xchg
ror
add
xor
nop
cmp
mov
mov
bound
inc
cmc
xchg
dec
lock
out
mov
and
into
mov
and
xchg
mov
dec
push
push
adc
xchg
xor
lds
dec
jae
jmp
fstpl
js
popf
cmp
and
repnz
loop
subl
repnz
mov
stc
push
ret
push
or
add
mov
adc
outsl
mov
stos
or
gs
or
int3
ficomps
fsubs
call
push
sub
adc
stos
adc
push
xchg
test
insb
out
int3
add
ja
ljmp
ficoms
mov
adc
shll
jecxz
xchg
push
pop
aam
xchg
popf
cmp
and
push
daa
shrl
push
lret
shrb
popa
mov
out
sub
or
cmpsl
mov
fldenv
sub
pop
rorl
into
scas
add
scas
out
jbe
mov
mulb
xchg
popf
mov
mulb
out
adc
stos
mov
sub
les
mov
rcr
adc
xchg
and
sbb
stc
inc
dec
aaa
outsl
mov
xchg
repz
clc
insb
mov
ljmp
ja
and
mov
test
inc
cmpsb
dec
xorl
or
icebp
rorb
loope
cltd
sbb
add
dec
sub
scas
das
shrb
movsl
pusha
xchg
mov
cmc
push
xchg
add
int
push
sbb
call
testb
push
daa
and
jmp
mov
notl
sbb
mov
hlt
sbb
loope
subb
adc
orl
insb
insb
jnp
ds
icebp
add
repz
mov
adc
rcl
test
and
jns
sub
imul
in
daa
and
xchg
lock
out
iret
sahf
inc
add
inc
subl
xchg
mov
ljmp
dec
xchg
adc
sbb
jne
mov
movsb
dec
add
shr
mov
add
aam
repnz
ret
fcomp
sbb
jb
addr16
and
cmp
scas
xchg
leave
sub
mov
and
and
dec
xchg
xor
movsb
dec
or
shlb
out
inc
test
sub
pop
or
cli
xchg
das
push
jge
dec
inc
cmp
xchg
inc
ret
clc
and
call
movsb
push
jnp
jecxz
sbb
shl
jno
ret
jle
and
cmp
mov
mov
shll
inc
movsl
mov
insb
inc
xlat
dec
cli
lret
fsubrl
in
cmpl
and
out
sbb
int
rolb
xor
fidivrl
push
adc
mov
insb
fmulp
shll
mov
mov
jl
or
cmp
aam
cmpb
pop
mov
mov
daa
das
or
test
xor
daa
outsb
push
sar
jecxz
dec
ja
mov
add
pop
popa
mov
jne
lds
mov
xor
xchg
pop
add
test
and
sbb
faddl
xor
xchg
xchg
jp
mov
leave
aad
mov
ljmp
repnz
jp
data16
inc
arpl
std
adc
adc
movb
jns
add
aaa
pusha
shll
mov
mov
rol
cmpsb
jb
dec
jns
xchg
fnstsw
jg
sarl
iret
add
dec
sbb
push
mov
mov
cmp
add
std
inc
daa
pop
jns
gs
pop
sbb
cmpb
jecxz
inc
aas
jmp
inc
xchg
xchg
mov
adc
popa
dec
adc
lds
ss
sbb
stos
loope
mov
and
cwtl
enter
mov
mov
and
and
mov
mov
pop
pop
imull
pop
mov
in
cmp
inc
jge
adc
ljmp
push
testl
test
dec
loop
mulb
inc
scas
mov
cmp
push
and
lock
mov
jge
das
pop
je
cs
test
mov
dec
xor
pop
js
shlb
je
mov
jns
xor
sbb
mov
nop
out
dec
jle
adcb
std
add
sbb
xchg
jbe
out
aaa
and
inc
sbb
jmp
pop
sub
sti
inc
cli
sbb
out
scas
dec
add
sub
lret
sbb
jb
lret
insb
xchg
sub
shlb
cmpsb
int
stos
xlat
xchg
aam
loope
cltd
test
mov
pop
cmc
mov
cmc
test
sbbl
mov
sub
stc
lock
cmp
lds
push
nop
or
lahf
aas
and
xor
ds
insb
repnz
lcall
inc
outsl
push
jl
xchg
cmp
lret
rcrb
pop
lcall
mov
jecxz
scas
clc
inc
push
adc
mov
sahf
dec
xchg
mov
imul
mov
lds
xchg
out
adc
push
test
out
dec
jnp
cmc
add
lret
pop
lods
add
push
in
sbb
lcall
push
idivl
rcl
jae
inc
dec
add
aad
and
push
ja
push
sub
clc
outsb
std
pop
iret
cmp
aam
sbb
lods
jne
push
mov
pusha
fistl
orl
mov
pop
dec
pop
mov
mov
xchg
inc
xchg
fcomps
xor
les
lock
adc
imul
push
cwtl
inc
imul
enter
jg
icebp
gs
ficomps
notb
rol
ss
adc
adc
mov
mov
fwait
xchg
repnz
sub
mov
adc
mov
pop
movsl
mov
ficoml
xchg
sub
jns
fisttpl
loop
sbb
divb
roll
insl
pop
lock
or
jp
in
ds
adc
adc
repnz
cmp
imul
xor
fldz
pop
sbb
mov
notb
sbb
push
cmp
inc
jg
jne
mull
fs
stos
ror
and
fnstcw
jl
icebp
fidivrl
aam
push
and
inc
xchg
repz
jmp
imul
push
mov
int3
adc
int3
sub
push
xor
push
stos
mov
push
cmp
test
lcall
insb
mov
mov
pop
jmp
and
mov
push
loop
int3
stos
or
jecxz
mov
sar
pop
arpl
and
dec
sbb
push
jle
shll
insl
lahf
pop
lret
sub
adcl
push
mov
pop
push
fwait
aas
jno
insb
pop
in
or
mov
mov
adcb
dec
mov
xchg
test
stos
mov
lock
mov
cwtl
in
mov
adc
loop
or
insb
test
push
inc
mov
inc
jp
hlt
pushl
imul
int3
cmp
jmp
fdivl
loopne
cmc
cmc
add
hlt
push
gs
push
xchg
mov
data16
sub
cmp
or
cli
sub
lods
int3
jns
aam
movsb
into
xchg
cmc
adc
cmp
or
and
or
addr16
cwtl
out
popf
ficompl
outsb
ret
test
andl
repnz
xor
add
inc
jmp
mov
gs
adc
mov
cwtl
xor
out
pop
mov
or
mov
daa
push
jb
inc
xor
pop
cli
stos
jp
pop
xchg
cmpsb
clc
scas
cmp
mov
cmc
jg
or
adc
push
xchg
cltd
jmp
push
mov
pop
fcoml
jg
pop
popa
les
fdivl
idivl
mov
insb
imull
aad
ljmp
sub
lock
mov
mov
pop
inc
sahf
in
pop
or
push
dec
in
test
jno
jno
clc
or
sbb
dec
jmp
jp,pt
jg
lcall
fnstenv
orl
pop
jb
les
out
popa
scas
push
mov
and
sub
outsl
adc
xchg
cmc
xchg
aad
adc
add
add
mov
lea
xchg
add
shll
int3
mov
push
mov
push
dec
mov
xor
jnp
cmp
mov
jmp
adc
mov
mov
addr16
dec
loop
add
shrl
int3
inc
sti
out
shr
jbe,pn
cmp
std
dec
mov
ljmp
insl
push
mov
js
or
and
sti
call
sbb
inc
cmpsl
pop
jb
scas
or
pop
jg
push
or
repnz
pop
push
sub
push
cmp
pop
xor
jecxz
and
and
test
mov
test
push
lock
movsb
sbb
xchg
mov
xor
push
insl
push
pop
sub
dec
pop
mov
ret
ficomps
xorb
scas
push
pop
pop
aad
cmc
cmpsl
cmc
lock
sub
push
mov
inc
iret
out
mov
ret
jo
mov
sub
das
subl
aad
cmpsb
jnp
push
int
stos
push
out
bound
movsl
jmp
xlat
mov
mov
loopne
push
cmp
shlb
inc
sarl
xchg
pop
scas
fsubl
push
add
xor
xchg
xor
js
pop
aaa
enter
cwtl
fcomps
push
rcr
push
movups
push
or
xchg
cmc
icebp
fiaddl
mov
cmpb
bound
clc
lock
mov
pop
imul
xor
cld
adc
add
xchg
fdivrl
insb
and
insb
mov
jl
subb
sbb
stos
push
mov
je
shlb
movq
jne
sbb
addr16
std
lret
cmpsb
jge
push
mov
inc
pop
mov
fcom
ja
sub
aad
dec
mov
jb
aas
sub
xchg
or
xor
push
xchg
xchg
cwtl
ret
ljmp
insb
inc
movsb
fs
dec
push
scas
adcb
clc
dec
nop
push
jb
adc
iret
jmp
inc
and
mov
ret
mov
add
jnp
push
sahf
jno
fcomip
imull
add
pop
inc
pop
mov
sahf
fdivs
sub
mov
push
fldt
sbb
call
pop
out
cld
xor
dec
fbld
pop
daa
movsl
decl
mulb
inc
lret
or
mov
pop
notl
xchg
adc
andb
enter
cld
xor
or
shlb
pop
sub
imul
loop
ljmp
mov
push
mov
sbb
movsb
xor
nop
cmp
adc
push
jp
idiv
inc
jo
fs
ss
mov
fldt
cmp
dec
push
jl
movsl
mov
icebp
mov
outsl
in
mov
cmp
cmp
arpl
or
push
adc
or
test
fxch
sahf
into
mov
jge
sub
aam
scas
jmp
mov
jle
mov
mov
ret
jle
loopne
push
cmpsl
pop
imul
xor
ficomps
lds
mov
cmp
mov
cmpsl
out
scas
pop
cmp
cltd
loopne
pop
mov
push
mov
adc
cmpb
shl
aad
mov
daa
push
scas
lock
stos
fisubrl
sbb
icebp
cwtl
jle
xchg
ds
cmp
xchg
xchg
xor
jge
inc
pop
xchg
xchg
pop
test
mov
cmp
inc
xor
test
mov
jg
fistpl
test
into
pop
addr16
lret
jne
in
mov
jge
icebp
sbb
enter
lods
rorl
add
ret
ja
popf
sub
xchg
hlt
imul
cmp
lret
into
lock
cld
jp
sbb
mov
lods
mov
stos
adc
xchg
jne
jno
jl
cli
iret
xor
in
push
sub
sub
insl
xor
add
sbb
fistpl
lcall
cmp
xchg
sub
out
popa
jno
jp
jmp
movsl
loopne
js
inc
fidivrl
add
sti
adc
mov
jl
sub
add
push
xchg
sbb
cmp
lcall
add
insb
ret
shrb
mov
dec
mov
leave
cmp
add
leave
data16
inc
repnz
outsb
and
iret
sbb
mov
jbe
dec
dec
push
mov
pushf
xchg
ror
cwtl
lea
imul
adc
outsb
dec
js
mov
rclb
pop
jo
sub
mov
dec
xchg
out
push
fisttpll
xchg
and
add
dec
std
test
int
outsb
ja
stos
push
jno
insl
out
or
mov
mov
std
mov
mov
aad
push
mov
jg
push
push
scas
mov
mov
mov
mov
test
paddw
pushf
add
pop
movsb
scas
mov
mov
adc
les
pop
out
or
mov
dec
xor
lods
lea
rcl
pop
cmpsl
mov
jae
push
xor
adc
push
pushf
jnp
pop
mov
mov
sbb
test
bound
cltd
ret
inc
push
xchg
fcompl
adc
inc
pop
mov
jecxz
mov
repz
sub
mov
xor
lock
imul
inc
pop
lret
xchg
cmp
in
pop
repz
fistl
pop
out
ret
test
insb
cmc
mov
clc
movsl
out
or
xor
dec
xor
mov
arpl
insl
jecxz
add
data16
das
dec
jl
push
inc
mov
js
enter
stos
dec
jae
in
and
lret
in
fsubrs
rcll
cld
call
nop
or
sub
or
push
cmp
sub
test
and
rcrb
jne
ss
jmp
pop
sbb
push
adc
and
or
in
cmp
js
pop
or
sub
inc
out
aaa
shrb
lods
addl
fsin
cmp
jmp
cld
subl
sbb
mov
inc
test
mov
cmp
nop
dec
mov
push
mov
cmp
xor
add
mov
add
sub
mov
and
shlb
in
cmp
out
jg
xchg
fstl
or
or
shll
mov
pop
sahf
fidivrs
add
popa
pop
fisubs
ljmp
jo
nop
shrb
dec
xor
mov
mov
lds
movsl
jmp
xchg
inc
inc
mov
dec
cmpsl
repnz
cmp
gs
int
fsubrl
scas
shll
ret
out
aas
aas
push
pop
scas
cmp
pop
dec
push
or
jp
mov
bound
push
mov
add
in
aaa
pop
jecxz
jle
loop
mov
lods
addr16
jae
lds
mov
sub
mov
push
rcrl
cmp
or
hlt
cmpsb
mov
repnz
xor
test
push
pushl
lea
loopne
test
jmp
dec
xlat
inc
or
mov
test
pop
mov
in
imul
sarb
add
inc
out
cmp
addr16
movsl
push
cmp
jnp
lods
ret
inc
xorb
ret
insb
push
jno
or
fldcw
mov
push
das
inc
ret
imul
icebp
lret
mov
jg
mul
loopne
push
mov
adc
xor
aad
pop
push
out
enter
mov
push
rcll
pop
xlat
stc
mov
nop
int
xor
and
or
xchg
cld
adc
sarb
lea
mov
leave
stc
ss
mov
inc
push
testb
xor
cmp
fidivrs
pushf
jno
push
cwtl
push
cltd
mov
xlat
outsb
incl
into
jl
sub
xchg
test
inc
es
jb
movsb
movsl
sub
adc
hlt
shll
jbe
aaa
pop
mov
mov
je
add
inc
mov
dec
dec
stos
addr16
les
and
pop
pop
lret
inc
xchg
pop
std
mov
jbe
loop
sahf
mov
sub
js
jb
popf
mov
pop
mov
ret
mov
jns
das
imul
adc
adc
push
in
dec
fisttpll
mov
xchg
cs
shr
pop
pop
cld
jne
gs
or
jo
in
enter
int3
outsb
mov
sbb
stc
mov
icebp
shlb
pop
or
pusha
int3
rcll
mov
pop
mov
cmp
xchg
inc
pusha
fwait
mov
pop
cwtl
sub
pushf
mov
lods
push
fs
movsb
mov
jne
or
dec
xchg
and
mov
mov
pop
sub
pop
add
in
pop
or
ss
ljmp
add
pop
lahf
mov
fcoml
mov
lods
sub
sbb
scas
call
cmp
inc
inc
inc
loope
lods
arpl
test
ja
xchg
sbb
pusha
cmp
int
shlb
fcomi
enter
clc
inc
mov
sub
xorl
jno
shll
or
ljmp
xchg
fldenv
mov
insb
enter
sub
ja
push
jbe
int3
mov
nop
int
push
gs
xchg
jge
mov
push
mov
inc
repnz
push
fidivrl
jae
fwait
push
fs
test
mov
mov
stos
mov
sbb
out
cltd
lcall
mov
outsb
pop
popf
cltd
in
jg
cmp
push
popf
push
or
pop
popf
stos
mov
scas
cmpsb
lods
js
and
sub
insl
sbb
and
xchg
or
or
fldl2e
or
loope
rorl
mov
push
insl
pop
test
enter
lods
fld
jnp
adc
mov
push
pop
jne
inc
clc
pop
fsubr
xchg
jno
xchg
in
jle
dec
decb
dec
shrb
adc
mov
shll
dec
xchg
adc
popa
scas
push
mov
insl
xchg
sbb
mov
lods
cmp
and
lahf
add
xlat
push
dec
push
pop
imul
shlb
xchg
roll
add
xchg
adc
sti
xchg
adc
jge
ljmp
pop
inc
imul
loope
jl
jmp
jnp
jg
sbb
les
cld
jae
std
push
mov
pop
loop
push
mov
testl
ljmp
lret
mov
mov
xor
scas
jecxz
xchg
push
cli
mov
mov
addr16
jle
rolb
ja
xchg
jl
les
jg
mov
int3
shl
in
out
xor
pop
sub
mov
fucomip
jne
fidivs
std
mov
push
inc
inc
sar
sbb
orb
jo
mov
roll
gs
mov
or
gs
or
mov
scas
pop
lock
arpl
daa
hlt
xchg
push
add
push
cmp
je
rcr
sub
push
fwait
pop
mov
cmc
push
lret
push
sub
mov
ja
cmpl
add
mov
sbb
lahf
outsl
aas
lods
xchg
or
or
dec
mov
mov
or
sub
shr
test
push
jecxz
mov
mov
shll
hlt
mov
je
mov
incl
sbb
xor
sarl
out
nop
xchg
xchg
addl
rclb
mov
inc
dec
xchg
orl
inc
xchg
outsb
mull
xchg
jecxz
xor
jo
addl
sub
enter
or
cld
rol
in
and
mov
sarb
dec
orb
sbb
sbb
rolb
sbb
fisubl
cmp
loop
xor
sub
in
jle
ss
sub
mov
add
aaa
fstl
adc
sub
mov
pop
xlat
push
push
mov
add
insb
mov
fistpll
xlat
sub
dec
out
adc
xor
sbb
add
das
incl
lock
shlb
fidivrs
adc
ss
sbb
sub
lret
out
push
xchg
lods
fcoms
fisttpl
out
fmull
addr16
mov
xor
rolb
lods
adc
stos
dec
add
cli
sbb
sub
sti
add
xor
xor
mov
xchg
lea
inc
sbb
push
jae
cwtl
cmp
inc
inc
sarb
xor
jle
mov
inc
jns
dec
ficoml
sbb
pop
sub
adc
std
adc
loop
lods
movsb
ret
es
or
insw
mov
jb
push
cli
out
test
adcl
test
xchg
fnstcw
push
push
in
sub
iret
cmpsl
outsl
fcmovbe
clc
pop
arpl
pop
pop
mov
lcall
cli
mov
bound
inc
adc
sub
xor
push
xchg
mov
push
in
mov
sar
iret
lcall
imul
add
xor
aas
fdiv
xchg
inc
idiv
xchg
mov
icebp
xchg
je
jne
mov
jmp
lret
add
mov
mov
jl
in
sti
hlt
movsl
inc
pop
or
in
inc
ret
inc
add
aas
popf
sbb
inc
sarl
scas
in
inc
lahf
xchg
and
cltd
pushf
mov
cmpb
ficoms
jmp
pop
imul
lea
lods
orl
test
add
mov
lods
outsb
lds
or
adc
jo
add
jno
push
bound
jne
out
cmp
nop
dec
cmp
outsb
push
push
and
je
pop
mov
in
mov
sub
testb
sbb
inc
add
hlt
sub
pop
push
cmp
ret
rcl
outsl
pop
dec
xor
adc
pcmpeqd
mov
push
mov
mov
shll
pop
inc
or
mov
outsw
lods
or
and
and
int3
and
jns
rol
pusha
enter
neg
repz
das
pop
jb
nop
insb
dec
adc
adc
mov
jnp
pop
xchg
scas
xor
and
decb
repnz
movsb
test
jnp
sahf
add
push
std
xchg
shrl
pop
mov
cmp
push
jge
enter
repz
sbb
imul
cld
sub
xor
outsl
push
cmpsl
scas
mov
jb
and
and
je
mov
push
sbb
das
xor
leave
fnsave
add
inc
xchg
sub
scas
aad
loope
dec
lods
shll
out
iret
jecxz
mov
dec
movsl
mov
iret
mov
jl
jg
sub
mov
jb
orps
push
fwait
or
call
sub
xchg
not
in
ficoms
hlt
repnz
js
shlb
cmpsb
nop
xor
out
nop
hlt
cmp
jne
popa
cmc
into
xchg
popf
fwait
pusha
adc
add
bound
xor
sub
cmpsb
cmc
ds
mov
test
inc
or
push
sti
ret
aad
cmpsl
mov
xor
jge
mov
and
add
inc
sti
addr16
int3
es
fstpt
or
insl
ljmp
push
mov
jne
xor
xlat
out
ds
xchg
mov
das
in
daa
push
push
cmp
pusha
push
call
xor
and
push
je
xchg
cmpsl
imul
cmp
arpl
or
add
xor
out
mov
jae
mov
sub
and
scas
sbb
imul
test
insb
decl
fists
pop
test
xor
mov
sbb
cmp
lahf
cmp
enter
mov
mov
jo
mov
sub
cld
cli
xor
out
dec
jno
jnp
and
loop
and
mov
imul
sub
xor
pop
shll
andl
ret
and
pop
push
out
xor
jle
aam
sti
dec
cmp
into
jbe
or
mov
adc
jo
mov
les
sbb
sbb
xchg
loop
mov
idiv
inc
insb
nop
mov
cmp
or
cli
pop
pushf
xor
push
push
mov
dec
add
cmp
xor
push
loopne
enter
bound
roll
mov
ds
inc
ja
inc
mov
and
dec
ss
jb
pop
jb
lods
lods
testb
cmp
mov
or
adc
test
jp
xchg
adc
lods
out
jns
in
bound
icebp
lret
imulb
push
xchg
mov
adc
add
mov
shlb
sub
lea
out
jo
and
lahf
shll
inc
ja
ss
mov
fldt
dec
cmp
push
pop
cmpsl
ret
int
pop
mov
mov
push
sub
gs
popf
inc
mov
ret
xchg
insb
out
mov
jmp
dec
push
test
outsb
jo
dec
jg
pop
cmc
je
mov
movsb
inc
mov
inc
hlt
cmp
jns
lea
push
xchg
sub
lea
inc
push
xchg
in
imul
out
push
mov
in
add
jb
push
xor
mov
mov
jl
push
cmp
arpl
sub
xchg
xchg
cmp
push
lcall
divl
sbb
pop
mov
aam
std
add
inc
dec
pop
mov
stc
jl
and
sbb
xor
adc
imul
fs
shr
adc
mov
gs
jno
xchg
dec
pop
mov
push
sarl
gs
pop
xlat
push
fsub
stos
or
mov
mov
lds
sbb
stos
cmp
mov
xlat
pop
aas
xchg
popf
xor
test
sub
into
repz
test
lret
mov
cmc
jmp
and
stc
or
sahf
dec
fildll
mov
bound
addr16
add
sbb
sub
push
fidivl
jne
dec
hlt
push
mov
push
or
xor
imul
in
pop
jg
ja
mov
adc
sbb
jno
or
pop
sbb
cmpsb
add
lahf
cwtl
test
mov
shr
or
outsl
cmpl
xchg
sub
jb
mov
inc
ljmp
mov
jo
add
sbb
cwtl
das
out
aam
jae
or
movsl
fistl
in
xchg
inc
cmp
ja
dec
mov
std
out
movsb
mov
popf
fsubrl
push
dec
in
andl
rep
push
ret
popf
call
mov
mov
clc
lcall
ret
push
clc
sub
cmp
or
fisubrl
ljmp
leave
int
and
out
sarl
outsl
add
sub
pop
sbb
add
cmpsb
scas
mov
and
test
mov
dec
pop
loopne
loopne
leave
rol
cmpsl
fiadds
scas
or
dec
shrl
scas
mov
stos
xchg
mov
push
arpl
imul
jecxz
inc
andb
std
pcmpeqd
pop
xor
in
and
mov
sbb
add
hlt
leave
xchg
mov
addr16
bndldx
cmp
imulb
adcl
xchg
imul
aaa
lahf
in
inc
jecxz
nop
loope
cltd
sbb
mov
out
xlat
xor
and
mov
pop
repnz
mov
xor
outsl
fs
mov
jnp
and
cmpsl
mov
dec
cmpsb
and
or
dec
movsb
pop
push
sub
out
push
inc
jbe
and
jle
pop
cli
ss
push
xor
test
sbb
sub
aam
add
jb
sub
and
cs
pop
sbb
mov
push
hlt
add
sub
mov
adc
or
daa
jae
xlat
push
and
xor
fisttpll
icebp
int
xor
test
stc
loop
jg
or
jae
pop
ret
icebp
ret
xor
jne
push
in
sbb
clc
fdivr
or
test
jle
ljmp
ret
mov
xor
into
and
popa
mov
lcall
pop
pushf
inc
jle
and
add
xchg
es
or
cltd
out
sub
inc
in
repnz
pop
test
push
cmp
ds
inc
ret
repz
push
lods
aas
sahf
fldl
pop
jge
jnp
adc
lods
jno
cwtl
scas
mov
xchg
hlt
mov
outsb
push
clc
xchg
push
or
lea
push
cmc
icebp
push
int3
push
or
sbb
popa
xorb
dec
fisttpl
adc
push
lcall
inc
dec
gs
mov
outsl
pop
dec
adc
stos
cmpsb
and
insl
sub
adc
push
popf
sbb
lret
mov
aad
fistl
or
dec
scas
pop
add
mov
pop
es
xchg
mov
out
xchg
adc
incb
or
enter
jecxz
sbb
imul
int
imul
pop
jg
push
pop
lods
fdivr
adcb
jp
jl
dec
idivl
fstps
js
add
inc
inc
gs
pop
inc
mov
stc
and
popf
xchg
cmpb
xchg
mov
mov
ja
jle
sbb
or
mov
xor
shl
mov
xorl
jns
nop
in
cmp
lret
lret
pop
je
push
bnd
and
subb
out
jns
cwtl
mov
adc
fstl
insb
sub
cld
inc
xchg
in
in
rorl
gs
mov
lods
mov
icebp
andl
stc
mov
rcll
cmpsb
lret
mov
push
fiaddl
mov
mov
add
jbe,pn
lods
lds
out
fsubl
vsqrtsd
pop
xchg
sbb
aaa
sbb
dec
push
add
fcoml
ret
es
push
aas
xchg
mov
add
adc
cmp
mov
fcmovnu
mov
push
inc
push
fwait
mov
sbbl
ss
icebp
into
idivb
popf
mov
aad
xchg
pop
inc
jmp
push
and
mov
cmc
shlb
jl
inc
mov
mov
testb
jecxz
mov
out
mov
addr16
movsl
shlb
icebp
mov
sbb
push
sahf
push
xor
les
test
mov
mov
push
xor
cmp
mov
push
lds
mov
ds
scas
and
pushf
bound
add
xchg
cmp
hlt
mov
mov
push
mov
and
or
loopne
adcl
ret
repz
push
jg
add
clc
sub
push
cmp
test
inc
repnz
xor
je
cld
xor
out
mov
into
mov
jnp
gs
lods
and
add
pushl
mov
mov
fisubl
es
adc
fs
push
cmp
push
adc
hlt
and
rorb
notb
cltd
jnp
das
inc
push
add
ret
sar
push
jns
cwtl
repnz
jp
cmp
pop
xor
jle
add
cld
lock
lahf
rorl
inc
sbb
and
mov
xor
mov
cmp
fiadds
mov
cs
adc
fldcw
pop
and
fldl
inc
popf
and
fistps
mov
inc
xor
inc
jg
mov
or
loopne
cmovge
push
jns
cwtl
and
das
ss
xor
cmpb
xchg
xor
jne
dec
loop
xor
sub
xchg
in
push
aas
and
mov
lock
jmp
pop
ficomps
or
or
fildl
lcall
pop
mov
nop
xchg
or
ss
sbb
mov
add
divl
cs
pop
dec
fmul
mov
std
out
sbb
imul
dec
mov
xor
rclb
insb
add
pusha
inc
jae
in
mov
sub
ret
insb
rcrb
std
and
push
cld
ljmp
push
jo
mov
lea
push
mov
sti
mov
clc
and
loop
pushl
or
add
movsl
int3
jmp
cmp
movsb
lahf
jg
mov
jmp
add
sub
dec
je
cltd
and
jle
movsl
add
stc
pop
orb
je
lods
jnp
andb
xchg
jae
imul
lahf
loop
mov
push
and
pop
cli
sub
mov
xor
arpl
mov
in
xchg
pop
or
sub
loop
mov
mov
adc
ds
ret
loop
inc
push
js
xchg
sbb
lock
mov
mov
outsl
sbb
outsb
int3
les
rorl
lahf
xlat
ret
xor
clc
enter
loopne
xchg
xchg
clc
fildll
mov
dec
aaa
lret
jne
in
cld
xchg
fimull
xchg
out
mov
cmp
push
fdivs
xor
sbbb
mov
mov
and
leave
cltd
pushf
ret
dec
gs
sahf
das
arpl
sub
lea
and
cs
dec
mov
dec
fstpt
jno
push
xchg
xor
aaa
push
fucomip
dec
xchg
mov
push
pop
pop
lahf
xor
mov
or
test
rcll
xor
int3
daa
inc
jp
lds
push
pop
push
arpl
sti
lds
xor
pop
mov
adc
dec
push
dec
dec
cmp
jle
out
aaa
mov
lahf
sub
lahf
lock
inc
and
sbb
das
mov
dec
adc
or
inc
stos
mov
dec
pop
or
jns
xchg
int
jno
ja
lret
pop
dec
scas
imul
pop
xor
stos
lret
int
push
jae
add
in
cmp
notl
filds
pop
rclb
xor
ljmp
jl
roll
lahf
ret
leave
shll
mov
push
outsb
sahf
popf
pop
add
test
xchg
scas
xchg
sbb
jne
filds
orl
outsl
mov
shrb
aad
mov
loop
notb
lods
int
cmpl
adc
sub
push
cmp
mov
call
add
cmp
adc
leave
push
sbb
call
push
sbb
ljmp
xchg
inc
pop
out
icebp
adc
adc
push
jp
andb
xor
cmp
mov
aaa
lds
xor
daa
mov
add
pusha
lcall
dec
imul
add
jmp
jbe
orl
inc
add
lcall
jnp
pop
pop
inc
mov
lret
in
iret
jge
test
push
xchg
sub
xor
dec
fwait
push
and
outsl
ffree
jnp
inc
jne
pop
pop
and
movl
cmp
rolb
lods
sar
mov
cmpsl
mov
mov
and
cltd
lret
add
lods
mov
or
leave
cmpsl
sub
mov
ja
xor
test
fucomip
ja
cmovge
fwait
sbb
vpxor
jae
clc
sbb
add
mov
mov
enter
cmpsb
enter
fucom
pop
sar
addb
movsl
loope
pop
add
cs
orl
push
loope
loop
mov
sub
je
mov
lret
test
imul
in
add
xor
jb
repz
shl
out
lahf
push
sarb
dec
int3
push
popa
add
push
xor
pop
ds
stos
ljmp
cmp
pop
les
dec
les
xchg
jnp
icebp
push
fwait
icebp
dec
pop
push
and
mov
std
jnp
or
mov
and
cld
ljmp
ds
das
loopne
sbb
adc
fcmovu
dec
pop
pop
or
mov
pop
arpl
add
inc
jmp
jb
xchg
mov
push
mov
push
pop
in
or
into
sbb
loop
sub
or
xchg
inc
cltd
xor
sbb
jnp
xor
mov
mov
push
popf
jno
inc
je
mov
fsubs
sar
cmpsl
mov
inc
lret
pop
out
call
dec
cmc
imul
mov
rcrb
push
lods
jns
out
out
out
in
out
pop
in
addl
lods
push
xlat
xchg
mov
bound
movsl
jmp
xchg
mov
inc
js
fimull
pop
dec
out
pushf
dec
sub
adc
cmpsl
mov
add
or
sbb
scas
fisubrs
lods
outsl
mov
pop
xor
cwtl
cltd
pop
fidivrl
sbb
jns
sub
inc
lock
fisttpll
jae
lods
jae
adc
or
test
stos
adc
inc
fildl
loopne
sub
in
sbb
sub
lahf
mov
int
xlat
jle
sahf
int
or
inc
dec
daa
test
ret
dec
mov
fsubl
cmpsb
call
mov
add
divl
xchg
sub
mov
movsb
rclb
xchg
mov
xor
adc
dec
adc
cmp
enter
inc
xor
lods
scas
jns
cltd
lcall
pop
cli
adc
add
out
cli
test
xchg
mov
fwait
clc
mov
adc
stc
inc
mov
xor
add
dec
fisttps
clc
popa
jp
push
cmp
gs
js
xor
add
pop
movsl
call
and
dec
and
pop
or
and
inc
or
ret
add
fidivrl
in
jle
enter
sub
push
jno
popf
cmp
arpl
and
popf
push
push
push
cmp
shrb
enter
int3
test
mov
mov
jnp
push
xchg
add
jge
and
sahf
push
mov
lods
cmp
std
aaa
das
sub
mov
mov
adc
das
sti
dec
jge
xchg
outsb
into
inc
ljmp
adc
push
fnsave
jbe
sarb
and
mov
push
in
jns
dec
xlat
or
mov
adc
xor
out
xchg
cmp
sbb
adc
mov
ret
stos
hlt
out
sti
xchg
nop
mov
jecxz
mov
pop
hlt
xor
jmp
daa
aas
xor
aaa
jbe
aaa
sub
jbe
and
push
mov
push
sub
js
ds
insb
in
sub
push
scas
cmpsb
sub
shl
xchg
mov
fwait
adc
xor
lods
imul
adc
push
adc
jbe
shl
fdiv
test
insl
xor
mov
lods
pop
addr16
cmp
ljmp
fs
popa
xlat
popf
push
inc
inc
push
xchg
cmp
cmc
lret
mov
cltd
sbb
ljmp
xchg
mov
xor
adc
pop
xchg
lret
aam
das
shlb
xchg
test
enter
xchg
lea
cld
add
test
aad
inc
fidivrl
and
xchg
push
cmp
test
mov
cwtl
fdivrl
fdivr
push
push
or
sub
cmc
sub
fsts
mov
pop
mov
cmc
cltd
pop
popw
stc
mov
mov
xchg
dec
popa
push
xor
mov
test
dec
rcr
jl
fcoml
cmp
sub
adc
dec
jno
cmpsl
jmp
mov
movl
adc
scas
xchg
mov
pop
xchg
idiv
push
sbb
xor
loopne
mov
jmp
mov
fs
and
pop
mov
cltd
jns
dec
jl
add
inc
jne
out
lds
xlat
add
lret
bound
mov
fcoms
sbb
popf
add
arpl
or
in
push
push
rcr
lods
lea
out
insl
dec
or
lea
aas
inc
or
jb
insb
in
mov
push
pop
dec
pop
outsb
cmp
mov
adc
sub
mov
cmp
cmp
enter
fs
adc
bound
add
gs
mov
sbb
dec
adc
inc
mov
mov
or
pop
dec
flds
dec
mov
bound
in
jg
daa
adc
pop
das
adc
idivl
pop
test
jle
dec
ja
int3
inc
pop
adc
xchg
mov
adc
paddusw
mov
cmc
mov
jb
test
rcl
cmp
xor
or
pop
imul
cmp
cmp
stos
repz
ret
ret
cli
fsubl
loop
out
xor
lret
inc
push
shl
xchg
adc
lcall
arpl
xchg
dec
aas
or
lret
iret
sub
inc
insb
mov
add
repnz
mov
add
out
mov
lock
fcmovne
mov
mov
xor
xchg
inc
adc
bound
xchg
or
out
mov
scas
ljmp
xchg
xor
insl
js
mov
jge
mov
mov
mov
aad
test
aam
cmpsb
xchg
push
dec
dec
sbb
sub
mov
sub
fadds
cmp
inc
mov
frstor
or
arpl
jg
fwait
loope
push
lret
daa
aam
push
or
aam
push
outsb
xchg
imul
inc
sbb
movsl
mov
and
adcb
popa
add
lahf
inc
jae
ja
pop
xor
jl
es
es
cmp
cmp
sub
mov
cmpsb
nop
loop
mov
cmpsl
loop
in
dec
add
imul
dec
call
in
dec
in
mov
jg
stc
mov
test
mov
sub
sbb
into
mov
xchg
xlat
in
test
pop
xor
gs
ja
test
outsl
push
and
jnp
mov
adc
imul
nop
out
mov
int
aad
sbb
pop
cli
fadds
adc
hlt
pop
lods
data16
or
outsl
cld
lods
bswap
in
into
jbe
out
pop
add
jl
data16
arpl
jg
add
cli
sub
sub
cmpsb
or
inc
and
add
mov
xchg
cltd
loop
addb
ss
rcrl
pop
lock
pop
fisttpl
push
testl
lcall
movsb
mov
inc
insl
popf
inc
js
jmp
and
inc
dec
test
stos
xchg
push
out
inc
cmpsb
inc
mov
xor
mov
test
jg
orb
or
icebp
and
jle
sub
repz
inc
adc
cmp
and
or
xchg
movsl
jnp
lahf
cmp
das
arpl
fwait
insl
or
jecxz
fsts
xchg
inc
in
ljmp
dec
scas
push
outsl
fimull
fldenv
shrl
cmp
mov
xor
inc
fbld
jno
add
jns
xchg
mov
lcall
push
addr16
jnp
imul
cmp
mov
fistpll
inc
aad
cwtl
int
push
inc
add
fimuls
les
pop
pop
dec
popf
sbb
xchg
in
xchg
lahf
mov
arpl
add
lods
sbb
popf
mov
add
or
lahf
pusha
clc
add
jmp
mov
jg
xchg
jno
or
add
addr16
fisttpll
orl
mov
mov
mov
lret
or
mov
stos
dec
mov
gs
cmpsb
insl
inc
repz
ja
and
cmp
in
gs
or
out
or
fiaddl
fisubs
mov
mov
cmc
xchg
add
gs
incl
mov
repz
sub
adc
scas
je
xchg
les
js
mov
sub
inc
daa
and
jne
imulb
hlt
mov
in
pushf
popa
mov
sub
xor
jmp
gs
fsub
in
es
clc
cmp
mov
lcall
das
jle
pop
movsl
lcall
lret
ljmp
add
and
inc
sbb
fwait
sbb
pminsw
mov
lret
lcall
dec
icebp
pop
dec
ja
icebp
jno
xor
dec
int
test
loopne
dec
or
popa
pop
add
jno
sbb
sub
mov
out
push
jl
jp
sahf
pop
orb
or
cmp
mov
cmp
dec
stos
and
pop
dec
pop
mov
jmp
pop
pop
ja
frstor
stos
in
pop
cwtl
loope
leave
mov
cmp
or
dec
cld
addl
ret
cmp
sbb
faddl
mov
rcl
cmpsb
xor
mov
push
gs
ds
scas
mov
pop
jle
fsubrl
adc
sbb
movl
push
rcr
mov
cltd
mov
push
fwait
mov
insb
xchg
adcl
mov
out
test
xchg
mov
pop
cmp
repz
jp
or
push
dec
fwait
xchg
or
aas
add
mov
shrb
cmp
push
jp
stc
inc
xor
rcrb
lret
and
xor
scas
sti
pop
outsl
frstor
in
pop
jns
and
fnstsw
mov
les
dec
fiadds
cmc
sbb
fimuls
adc
xor
mov
add
mov
push
cmc
jle
loop
stc
sti
or
fidivs
jg
xlat
or
lret
lock
lret
mov
lea
addr16
dec
lods
scas
into
push
mov
pop
add
pushf
iret
mov
out
dec
movsl
rolb
stos
int3
pop
lcall
cmp
pavgw
pop
mov
int3
scas
orl
aam
cld
push
pop
push
iret
dec
lds
jmp
adc
leave
negl
mov
sbb
lahf
push
pop
jg
repz
sbb
push
scas
stos
cmp
cmpsl
aaa
mov
adc
cmc
icebp
push
aaa
push
inc
faddp
pusha
mov
lahf
fisubrl
lcall
mov
add
xor
push
sbb
ljmp
mov
ss
add
push
xchg
pop
and
xor
pusha
cltd
iret
or
mov
jns
ja
cli
sub
lret
or
loop
aas
in
mov
jnp
sbb
inc
xor
fwait
cmp
jae
enter
ss
icebp
xchg
adc
sbb
daa
xchg
clc
jo
pop
add
je
ja
pop
mov
jp
test
addr16
movsb
aaa
fdivrs
push
outsl
sbb
push
push
ds
orl
icebp
iret
dec
test
mov
pop
fwait
xlat
jmp
aaa
xor
sbb
sarl
call
xchg
lea
inc
fisubrs
dec
icebp
and
fstps
jp
xchg
inc
enter
push
inc
or
in
lcall
push
or
enter
fimuls
lret
pop
push
or
addr16
pop
add
popf
sbb
nop
ret
int3
addr16
fldt
inc
jns
lcall
add
aad
sbb
shlb
lods
mov
push
out
mov
pop
and
pop
sbb
jecxz
or
cmp
dec
and
daa
add
les
std
xchg
adc
jmp
mov
jae
push
and
cmp
push
inc
jo
pop
scas
cmp
inc
dec
into
adc
cld
dec
fisubs
mov
sub
xchg
js
outsl
mov
cmp
push
or
repnz
pop
cmp
stos
add
sbb
push
mov
std
mov
mov
aam
mov
aad
push
sub
cmp
fsubl
outsl
xor
xchg
rolb
or
lahf
in
inc
add
cmp
cmp
pop
mov
mov
insl
jnp
pop
mov
ljmp
xor
pop
arpl
mov
aas
xchg
sub
add
sub
or
push
mov
test
int3
pop
add
pushw
add
xchg
or
aam
out
jnp
dec
pop
inc
and
or
arpl
in
in
push
ss
loopne
iret
jns
dec
rolb
cli
test
iret
mov
or
addr16
das
xorb
stc
and
pop
mov
test
fisttpll
cmp
lea
scas
mov
mov
and
rclb
and
sub
mov
xchg
dec
bound
pop
aam
xlat
push
ja
scas
aam
in
mov
std
pop
sarb
mov
popf
or
hlt
ret
or
push
add
dec
mov
stc
clc
icebp
jle
xchg
js
add
int
fwait
roll
xchg
xchg
sub
xchg
rcrl
test
mov
push
dec
sbb
mov
pop
xchg
jge
flds
inc
lock
push
fldenv
mov
mov
inc
pop
sub
mov
add
addl
pop
sub
popa
loopne
int3
and
mov
pop
in
add
add
mov
sub
mov
inc
mov
xor
mov
sbb
adc
xchg
dec
int3
in
out
cmp
cli
pop
jb
sbb
pop
sub
cmp
adc
push
js
push
add
jge
jmp
cmpsb
inc
xchg
dec
adc
xor
jge
dec
or
insb
mov
sbb
fnstenv
and
ljmp
lret
add
cwtl
aam
add
adc
into
pop
or
jl
sub
jnp
mov
push
int3
dec
out
shll
fwait
sti
jl
out
or
out
mov
xchg
clc
gs
push
fwait
gs
lods
test
xchg
aam
or
push
es
adc
inc
lret
sti
mov
mov
fnstenv
insl
push
stos
movsb
mov
in
imul
dec
dec
popaw
daa
cmp
lods
or
cmpb
fldenv
inc
jecxz
sbb
add
das
insb
adc
negl
sub
shll
jns
mov
sub
mov
and
pop
cmpsl
or
mov
xor
adc
pushf
shl
inc
lods
jno
scas
sbb
xchg
sub
int3
mov
fisubl
add
jle
inc
jge
popf
xchg
fsub
dec
fcoms
dec
jnp
cmp
lcall
xchg
fisttpll
aaa
popa
lret
fdivrs
push
lret
jmp
inc
into
xor
cltd
sub
cmp
mov
out
popf
mov
mov
mov
lret
mov
dec
mov
push
enter
and
pushl
jmp
jb
rorl
clc
fisubrs
sbb
inc
xor
mov
inc
adc
andb
mov
scas
out
lcall
movsl
or
xchg
into
cltd
add
icebp
cltd
jmp
bound
pop
dec
insb
sahf
jbe
iret
and
xor
push
inc
mov
xchg
faddl
inc
mov
clc
cld
sbb
jecxz
fstps
jmp
es
rcl
pusha
and
loopne
xchg
pop
icebp
mov
mov
dec
xchg
int3
push
push
sbb
pop
rcll
lea
dec
mov
imul
std
push
jo
mov
imul
push
lret
call
andb
imull
repz
adc
sub
push
push
jbe
cmp
dec
movsb
enter
std
mov
in
inc
lahf
out
imul
gs
test
out
adc
pop
cmc
sub
pop
fwait
sub
jmp
and
push
dec
sahf
adc
lods
into
mov
sbb
into
dec
shll
lock
sbb
sub
movsl
bound
pop
pop
or
ljmp
cmp
pop
jl
xchg
pop
cs
sbb
repnz
sbb
push
sub
leave
mov
add
inc
push
jae
push
jge
stos
xor
loope
push
push
and
adc
dec
push
out
jb
inc
ret
cmpb
push
xchg
mov
mov
push
cmpsb
out
lcall
shrl
push
mov
pop
and
jl
subl
pushf
pop
xor
mov
test
fidivs
clc
cmpsl
xor
cmp
add
add
stos
cltd
push
mov
cwtl
lods
push
inc
dec
push
jno
arpl
ret
sbb
lods
fcomp
sub
hlt
xchg
lahf
xchg
insb
bound
mov
pop
jne
xchg
lods
or
push
add
adc
lcall
movsb
lcall
rcrb
add
fnsave
incl
loope
pop
popf
leave
imul
dec
jp
mov
or
pop
lret
sbb
dec
push
scas
lret
xor
inc
mov
outsl
mov
mov
rcrl
imull
mov
mov
adc
xchg
or
xor
mov
pop
inc
and
fldln2
jg
mov
push
add
inc
lret
mov
aaa
push
pop
cmp
pop
mov
and
xor
jecxz
pop
out
push
mov
stc
jl
sub
paddd
cld
rcll
xor
fsubs
stos
in
add
movsl
loop
xchg
stos
sbb
mov
stos
mov
jb
fcmovb
daa
adc
mov
xlat
sbb
mov
xlat
jne
jecxz
adc
mov
sbb
loopne
outsl
jmp
mov
lds
mov
and
pop
ljmp
pop
mov
xor
jae
loop
jae
lock
ss
repnz
push
pop
test
mov
mov
cmp
icebp
fmuls
stc
loope
lds
mov
ret
addb
rolb
lods
testl
addr16
and
test
pop
out
in
mov
out
jo
xor
push
ficoml
xchg
adcl
aam
fidivs
js
jmp
sbb
sub
dec
or
ret
popa
mov
mov
subl
roll
sti
ja
fnstsw
mov
mov
jmp
push
lcall
imul
dec
adc
xchg
adc
dec
dec
and
cld
ret
icebp
loope
pusha
cld
or
inc
sub
sti
mov
lock
mov
mov
loop
sbb
mov
and
xchg
imul
movsb
ljmp
adc
rcrl
mov
test
and
arpl
dec
or
adc
popf
add
mov
push
adc
sbb
out
testb
sub
xchg
pop
jae
negb
std
sbb
sub
mov
in
ret
daa
ss
arpl
jno
ret
jo
js
dec
jecxz
pop
ret
and
int3
inc
shrb
sti
adc
jb
sbb
rcrb
jnp
fs
xor
lcall
mov
aad
xor
and
mov
cmp
mov
cmp
sti
movsb
and
shlb
aas
sub
xchg
jae
xor
mov
xchg
mov
stos
fldl
decl
lea
pusha
lods
fistpl
push
mov
pop
xchg
into
mov
testb
xchg
xor
les
fbld
popa
rcr
leave
or
or
push
mov
cmp
pop
mov
jo
push
test
aas
mov
sti
xchg
mov
mov
dec
movsl
cmpsl
lahf
nop
gs
icebp
and
in
adc
shlb
jno
push
sti
sahf
sub
inc
xchg
mov
push
test
xor
inc
int
xchg
or
into
test
xchg
push
cld
sub
mov
imull
imul
and
and
ds
popa
stos
repz
pop
xchg
push
sbb
rorl
jge
mov
sbb
pop
out
mov
fistpl
xchg
adc
push
or
sub
sub
js
icebp
movsl
loop
push
jns
inc
ljmp
inc
ficoms
xor
nop
mov
jp
out
aam
inc
js
inc
push
cmpsb
sub
mov
xor
pop
in
add
mov
ficoml
mov
mov
jl
inc
jp
testb
pop
or
adc
and
ss
scas
rdmsr
jmp
lods
adc
and
mov
in
push
push
add
lea
jne
adcl
mov
xor
lcall
or
xor
fldcw
lret
cmp
sti
cmp
xchg
aam
subl
sbb
mov
mulb
pop
ficompl
enter
aas
inc
mov
out
xchg
mov
repnz
mov
adc
mov
mov
bound
pop
ja
adc
iret
ss
xor
or
xchg
test
jmp
aam
fs
sub
and
ret
fidivrs
sbb
jle
les
ficomps
addl
push
shll
test
add
mov
xor
loop
sbb
in
xchg
fstl
push
and
cli
push
dec
xchg
sub
inc
loopne
icebp
roll
cli
out
push
add
movsbl
hlt
insl
daa
enter
push
cwtl
movsl
push
hlt
les
pop
pop
inc
mov
push
mov
inc
nop
jno
xchg
in
pop
out
jnp
jp
cmp
push
lds
push
andb
pop
das
out
inc
outsb
sub
sub
add
fwait
mov
push
xchg
inc
dec
loop
mov
dec
icebp
pusha
shlb
std
or
sbb
int3
sub
cwtl
in
fmulp
mov
cwtl
pop
jmp
adc
push
sub
ljmp
in
cli
adc
frstor
lods
xchg
fnstenv
jmp
mov
lods
sub
lcall
aad
cmc
orl
jmp
call
data16
ret
pop
mov
cmc
jnp
sbb
inc
mov
pusha
loope
xor
and
addl
fs
fdivs
sti
mov
sub
stc
jecxz
daa
sarb
test
dec
cmp
inc
mov
mov
xor
mov
lahf
fcoml
xchg
or
insl
jb
mov
xchg
test
xchg
arpl
mov
sbb
loope
repnz
iret
fistpl
push
dec
int
repz
scas
stos
fcoml
pop
testl
push
ret
inc
jle
xor
push
mov
aaa
insb
in
pop
loop
data16
je
mov
inc
test
jnp
dec
cmp
popa
mov
push
pop
mov
outsl
leave
test
jge
mov
mov
adc
xchg
xor
xchg
mov
inc
mov
push
stos
imul
inc
adc
mov
push
stos
pop
jecxz
lods
ds
lahf
add
js
pop
lds
and
add
inc
fwait
js
adc
or
mov
out
lds
repz
sbb
jg
xlat
fnstenv
push
sbbl
in
inc
or
notb
pop
pop
movsl
inc
ja
sbb
cmp
inc
adc
jecxz
pop
xor
inc
pusha
mov
fcmovb
pusha
push
lret
cmpb
insb
sbb
lods
shr
jecxz
dec
insb
adc
or
or
or
and
int3
cmp
lods
push
xchg
stc
ror
sbb
mov
mov
gs
test
call
dec
fstpt
cs
das
sahf
dec
and
cmc
push
mov
pop
or
add
dec
inc
pop
mov
pop
movsb
cmp
push
insl
dec
push
mov
jnp
jne
std
cwtl
add
inc
rorb
pop
jp
int3
fdivp
push
icebp
mov
push
or
cmp
push
jnp
mov
jno
cmpsl
int
xor
xchg
mov
sub
jmp
pop
movsb
xor
dec
xchg
fdivrp
mov
stos
sbb
xchg
push
sbb
xorl
add
pop
ljmp
negl
lods
xor
push
cld
test
add
pop
fsubl
pop
pop
sysret
stc
xor
lock
inc
loop
pop
xchg
ja
pop
inc
sub
push
bnd
mov
adc
mov
jmp
out
into
push
jnp
mov
cwtl
mov
lock
scas
push
inc
cmp
mov
adc
xchg
jg
xchg
push
sub
int3
mov
movsl
adc
push
fistps
stos
test
int3
lcall
nop
xor
push
scas
in
xor
cld
jnp
dec
jae
aas
aam
adc
xchg
outsl
sub
bound
fwait
xchg
loope
dec
mov
xchg
rolb
inc
xor
adc
lcall
push
jp
in
sbb
xchg
jbe
mov
sub
loope
mov
push
cmp
and
push
cltd
insb
mov
jecxz
adc
es
cmp
mov
xchg
jae
xchg
mov
inc
adc
xor
push
inc
sub
push
cmp
inc
mov
jne
fdiv
stos
mov
ljmp
mov
jl
xor
add
mov
dec
mov
mov
loopne
ret
cmp
mov
lahf
push
pop
hlt
cmp
jmp
inc
iret
xlat
mov
and
fildll
cmp
mov
xchg
sub
push
push
xor
sub
leave
test
or
lret
mov
daa
aaa
sahf
test
leave
nop
dec
dec
imul
mov
test
dec
fs
movsl
cmpsb
lock
jg
push
cmp
pushf
es
movsb
lahf
jne
xchg
fcomps
sub
fstp
jns
jle
xchg
mov
mov
lret
inc
test
jbe
inc
mov
ss
imul
xchg
fs
testl
pop
hlt
int3
mov
bound
push
xor
cmc
fstl
mov
sti
js
jle
mov
ret
push
xor
out
out
pop
fimull
in
or
scas
push
add
or
js
sub
inc
fwait
roll
sti
and
sti
lea
and
adc
movsl
jb
mov
pop
mov
inc
adc
inc
jmp
gs
dec
lret
lods
xchg
out
cmp
add
jp
outsb
loope
mov
xor
cmc
xchg
push
xor
sbb
inc
push
xchg
pop
cli
insb
push
mov
rcrb
aad
out
and
pop
iret
push
push
mov
orl
cmp
jbe
cmc
hlt
je
hlt
dec
outsl
push
sub
pop
push
iret
cmp
popf
mov
out
or
mov
push
xor
insl
sub
or
clc
aam
mov
lcall
inc
mov
xchg
lahf
mov
ficompl
pop
sti
pop
stc
xor
or
cltd
mov
cmp
imul
ss
or
lret
je
lea
mov
pop
adc
add
jo
sub
mov
mov
mov
mov
jp
ja
mov
add
add
mov
cs
or
cmp
rorl
or
negl
movsl
jecxz
in
push
in
and
cmpsb
iret
adc
bound
icebp
mov
adc
inc
cmpsl
add
adc
sub
movsl
js
repnz
and
inc
sti
pop
addr16
mov
dec
xchg
sub
and
cwtl
ja
iret
pop
shr
mov
xor
jmp
das
and
pop
into
xlat
sahf
addr16
lea
movsl
std
xchg
jnp
push
jae
cmpsl
lods
dec
jle
outsb
sub
and
sti
cltd
xchg
inc
sub
fs
addr16
cmc
leave
nop
add
push
sbb
xchg
rcrl
push
xor
cmp
add
and
add
insl
fdivl
ror
mov
dec
outsb
insb
mov
push
les
or
idiv
inc
shr
inc
iret
push
mov
xor
and
lock
sub
xchg
push
lea
int3
add
sub
and
daa
and
sbb
xchg
cmp
push
jg
xor
cmpsb
mov
fbstp
lret
cmp
jmp
jns
int
jns
jae
or
fdivrs
adc
inc
xchg
es
jle
pop
lds
push
decb
dec
pop
js
xor
sub
cmp
jle
sarb
jns
add
into
int3
mov
mov
add
shll
add
inc
lahf
rcl
ds
mov
jmp
sbb
mov
jnp
jmp
loop
inc
adc
or
cmpsb
mov
cld
xchg
push
push
pop
aad
lods
add
cltd
inc
mov
mov
mov
jmp
stc
xchg
std
enter
idiv
dec
lcall
test
test
xor
xor
and
bound
xor
lea
sti
push
xor
jl
popf
xchg
dec
sbb
cmc
cli
jno
sahf
push
cmpl
or
push
shll
push
pusha
push
mov
add
mov
aas
cld
jne
mov
fwait
pusha
loope
cmpsl
stos
dec
pushf
ja
lock
sub
aaa
arpl
nop
xchg
je
dec
mov
adc
push
fdivr
cltd
out
int
mov
dec
mov
mov
lock
mov
push
push
lcall
pop
fucom
andl
int
sbb
cwtl
decb
repnz
popf
sub
pop
sahf
mov
fisubrl
sub
fidivrl
mov
orb
push
fnstcw
pushf
arpl
or
pop
inc
mov
fisttps
xor
js
adc
add
scas
dec
inc
and
out
addr16
push
out
addb
jecxz
aaa
and
lahf
leave
bound
xchg
adc
mov
mov
xchg
jp
jmp
pop
lods
pop
fstpl
xchg
sbb
rorb
or
add
ja
lods
jmp
pop
inc
xchg
adc
xchg
scas
push
pop
das
fwait
insb
cmp
jle
mov
and
daa
js
pusha
js
mov
lret
dec
jo
ret
cmp
mov
data16
mov
je
loopne
mov
arpl
and
bound
lcallw
les
jp
jle
sahf
fnstcw
stos
mov
sub
movsl
adc
or
cmp
push
adc
enter
js
shlb
pop
mov
pop
mov
in
mov
roll
js
shrb
lcall
jb
popf
and
dec
add
cltd
add
dec
cmpl
gs
push
decl
push
insl
xor
movsl
outsb
mov
add
cli
and
or
and
cmpsl
xchg
jno
push
rcrb
xor
jg
or
les
paddb
push
pop
and
mov
popf
stc
pusha
out
mov
jle
arpl
movsl
jg
push
inc
dec
pop
rcl
leave
xor
xchg
loop
out
lret
repz
movsl
sbb
sub
or
aad
mov
call
std
mov
ds
dec
push
jae
sub
ficomps
pop
xor
mov
arpl
or
int
in
loope
cmp
mulb
clc
adc
mov
push
xor
xchg
aaa
cli
out
addr16
xchg
mov
jmp
pop
sti
and
in
jb
or
lods
mov
pop
pop
mov
add
push
inc
enter
dec
ret
inc
rorl
adc
inc
xor
xchg
adcl
or
lret
mov
fnsave
sbb
fidivrs
aad
mov
rolb
je
mov
jecxz
ficoml
inc
js
rorl
push
test
xchg
sub
cmpsl
js
sbb
ficomps
hlt
mov
and
cmpsl
mov
xor
lea
nop
lcall
inc
lahf
xchg
cmp
nop
fsts
xsaveopt
out
dec
xor
in
sub
out
aas
insb
inc
or
lcall
cmp
mov
or
addr16
sub
aas
pop
bound
sbb
mov
clc
add
scas
sub
ja
cmp
int3
fldt
lock
data16
mov
mov
sbb
jle
sbb
push
outsb
inc
js
sbb
lds
add
lea
int
pop
cmp
push
popl
or
sarl
adc
sub
adc
jae
int
mov
jns
push
icebp
dec
jge
sub
ljmp
pop
or
push
xor
inc
pop
cmp
call
notl
fldt
adc
arpl
imul
mov
pop
push
shl
sbb
pushf
adc
or
xor
stos
loope
mov
ds
push
xchg
js
sbb
dec
loop
inc
xchg
out
stos
mov
mov
fcompl
test
dec
lret
jmp
cmp
sbb
aas
stc
xchg
adc
fsubs
es
jle
mov
xlat
sbb
mov
cmpb
push
add
or
and
jne
pop
xlat
outsb
out
mov
rcl
mov
les
push
mov
test
scas
std
sbb
sub
inc
pop
fadds
shll
inc
push
lds
test
cmc
daa
xchg
push
stos
repz
fisttpl
pop
add
sahf
ljmp
stos
orb
fs
mov
cmc
lcall
cmp
fildl
mov
inc
fnsave
cmpsl
xor
stos
leave
add
lods
pop
push
std
cmpsl
loop
inc
enter
sub
sahf
movsb
jae
mov
ret
test
jge
repnz
fnsave
aad
push
jnp
pusha
push
add
rcr
xor
xchg
movsl
loopne
out
xor
fsubs
xor
rorl
sahf
fsubr
xchg
or
out
cmpsb
notl
mov
jecxz
push
data16
outsb
in
and
and
jae
je
test
nop
add
cmpb
mov
insl
pusha
mov
push
cmpsl
adc
imul
sbb
jo
aad
xchg
stc
mov
cmp
xchg
scas
adc
xchg
das
jge
jmp
mov
cmp
or
aad
mov
loop
mov
fbstp
pop
add
xorl
jnp
lock
out
jmp
out
hlt
push
and
inc
lret
mov
mov
dec
push
in
push
mov
inc
std
cli
cmpsl
pop
ret
je
cwtl
mov
mov
or
pop
xchg
out
pop
mov
adc
stos
addr16
adc
jl
nop
ret
divl
lcall
out
testl
sub
adc
xchg
or
stos
or
icebp
cmpb
sub
mov
rcrb
leave
add
xchg
mov
in
aam
fs
in
xchg
enter
pop
ja
cmpsl
xor
xor
sahf
ret
pop
and
icebp
jns
or
sub
jge
cmp
xor
or
push
add
ds
je
adc
push
fs
adc
push
fisubl
aam
pop
imul
push
add
repnz
mov
jge
out
pop
cmpsb
leave
or
jns
cmp
mov
in
or
or
push
repnz
and
push
inc
xchg
imul
out
xchg
out
je
push
fisubl
cmp
jne
inc
sub
jne
pop
push
push
inc
add
imul
movsb
push
lea
adc
cmpsl
in
mov
das
test
push
and
icebp
sub
lds
ret
mov
fildll
cwtl
jnp
jmp
cmc
sbb
add
sbbl
shrl
add
pop
lret
sub
pop
and
adc
leave
lret
lret
pop
xor
pop
mov
loope
push
pop
shr
push
cmp
cmpsl
mov
call
iret
js
test
ret
cmp
jno
inc
lret
cwtl
lret
or
add
stos
and
nop
stos
push
jno
test
pop
out
add
adc
mov
jle
movsl
mov
jbe
adc
add
out
aaa
std
mov
ds
sbb
scas
cmp
ret
mov
xor
inc
dec
mov
int3
test
nop
cmp
iret
adc
sub
repz
mov
hlt
imul
shll
aam
and
mov
dec
loope
mov
push
jns
mov
and
xor
fdivs
adc
cmp
js
add
test
movsb
cmc
dec
mov
mov
icebp
push
push
sub
lock
lahf
inc
pusha
sbbl
adc
aad
push
in
ds
ljmp
std
outsl
dec
aas
pusha
dec
insb
es
jle
sbb
scas
mov
mov
lds
sub
mov
mov
adc
test
pop
add
dec
jnp
fdivr
lret
jns
xor
mov
icebp
pop
das
dec
and
pushl
movsb
push
cli
mov
jecxz
and
lahf
rcll
cld
div
mov
out
mov
adc
jne
inc
sbb
sahf
and
pop
pop
dec
or
fsubrs
aad
addb
jg
lret
mov
add
pop
fs
ret
movsb
sub
add
add
lods
imul
xchg
sub
inc
mov
push
and
pop
popa
loopne
loop
cwtl
fildll
xor
bound
popf
outsb
pop
inc
aad
add
inc
mov
mov
lods
icebp
repz
out
mov
push
mov
mov
int3
and
cwtl
rclb
dec
imul
xor
andl
bnd
loope
std
push
stc
push
jl
iret
pop
ljmp
cld
xor
and
pop
pushf
mov
inc
popa
clc
push
sbb
mov
pop
andl
add
fwait
mov
or
pop
pushf
cli
je
sbbb
cmpsb
fadds
imul
mov
mov
aam
xor
pop
xchg
push
jo
mov
and
inc
into
sub
sbb
push
aaa
out
cmp
pop
andl
inc
adc
addr16
iret
mulb
cmovo
mov
push
cmpsl
mov
cwtl
out
or
mov
fdivl
fucom
jl
pop
mov
jns
leave
mov
xor
mov
pop
test
mov
mov
dec
mov
outsl
cmp
pusha
dec
jo
xchg
add
jnp
adc
mov
imul
insl
mov
icebp
pop
lcall
fbld
lcall
cmp
aam
cmpsl
repz
mov
jmp
push
pop
in
pop
inc
lcall
dec
lea
andl
aad
pop
push
sub
jle
add
dec
and
neg
xchg
mov
loope
cmp
ret
lahf
ret
mov
mov
scas
mov
lea
mov
jge
scas
fiadds
mov
jns
add
jl
push
pushf
cmpb
clc
jmp
lock
mov
pop
mov
push
cmp
sbb
in
clc
push
fdivr
pop
cld
je
xor
add
adc
xor
pop
test
test
in
mov
pop
and
test
mov
lds
jmp
adc
and
scas
mov
cmp
inc
mov
loop
pop
test
fwait
mov
cmp
scas
push
sti
sahf
in
and
inc
test
inc
loop
xchg
cli
sub
xor
je
fiadds
out
insl
push
hlt
ret
jmp
ret
add
push
out
mov
in
xchg
pop
xor
pop
scas
pop
mov
pop
andl
mov
pop
pusha
loopne
scas
cwtl
push
sbb
sbb
dec
insb
xchg
sar
jne
scas
subb
out
xchg
pop
mov
stos
mov
rorb
cmp
jl
sbb
mov
ljmp
pop
in
mov
sub
xor
out
pop
rcr
mov
sub
call
or
add
push
fsubp
ret
mov
insl
lock
cli
dec
scas
mov
iret
sub
stos
sub
push
popf
xchg
std
push
ss
cmpb
lret
popf
mov
imul
pop
dec
mov
xor
xchg
jmp
mov
lret
and
insl
xchg
rcrb
clc
add
icebp
lret
and
sahf
inc
shrb
lcall
and
loope
jns
cmp
lods
lret
mov
pop
fnstenv
scas
mov
jp
cmp
or
mov
shll
mov
hlt
je
mov
fcoms
mov
lea
pop
out
or
mov
push
sbbb
mov
cmp
jmp
js
movsl
mov
sub
sub
ret
mov
leave
movsb
loopne
dec
dec
cmp
mov
jae
inc
das
adc
aaa
mov
aad
adc
fsincos
enter
push
and
mov
ljmp
inc
jno
inc
test
das
lret
jb
outsb
aaa
scas
add
mov
lret
int3
xchg
lock
jno
icebp
push
test
pop
add
adc
add
iret
test
lea
pop
sub
push
orl
dec
insl
aam
int
xor
orb
les
inc
xorl
pushf
test
and
lea
pop
and
mov
insb
addr16
or
mov
and
pop
adc
ss
pop
das
inc
xor
mov
in
mov
int3
bound
gs
mov
add
lahf
push
repz
scas
sahf
addr16
sbb
pop
test
pop
aaa
rcrb
cmp
pushf
push
int3
fsubrs
gs
enter
and
xor
in
icebp
mull
push
cli
cmp
in
inc
imul
mov
ds
pop
out
imulb
xor
cmp
xchg
jle
jg
mov
push
dec
add
pop
ja
pop
sub
push
xchg
inc
sub
fcoms
sbb
push
xchg
inc
xchg
xchg
dec
addb
sub
adc
out
adc
test
push
push
xor
rcrb
repnz
sub
xorb
lcall
pop
xchg
test
mov
xlat
dec
cltd
fmuls
mov
inc
pushf
push
lret
fwait
push
adc
lret
adc
lods
and
or
pop
lahf
stos
loop
push
imul
pop
stos
pop
repz
call
bound
es
lods
push
add
enter
adc
sbb
inc
mov
ds
jmp
add
jnp
push
test
mov
xchg
jp
dec
inc
addb
movsb
jl
dec
fsubr
test
jp
sbb
xor
lds
mov
add
sub
jmp
sub
xchg
cmp
xchg
cmp
inc
testb
adc
pop
sub
push
movsb
andb
adc
dec
lds
std
push
add
aas
ja
adc
pop
cmp
lcall
sub
mov
adc
inc
lahf
pusha
xchg
loopne
mov
iret
push
jl
push
jbe
pop
es
fdivrl
clc
int3
mov
aaa
lock
sbb
dec
pop
jl
push
add
mov
out
mov
add
pushf
imul
shr
sub
clc
rolb
popa
push
mov
jmp
out
and
stc
jnp
es
pop
cmpl
test
cmpsl
mov
addr16
xlat
jl
jl
lods
pop
es
pusha
je
sbb
cmp
fldcw
xor
loopne
lock
loope
mov
divl
xchg
ret
push
jno
adc
test
and
sbb
pop
dec
out
xor
jl
adcl
cmpsb
movsl
stos
nop
cld
scas
xchg
rcl
add
repz
pop
gs
xchg
inc
jae
mov
add
cmp
nop
fscale
push
add
lahf
push
divl
aaa
pushf
mov
xor
gs
lock
jns
int
and
outsl
lods
loop
pop
rorb
fs
xor
aam
pop
fs
mov
insb
lods
dec
jge
push
inc
cmpsl
aad
mov
adc
jo
loopne
jae
inc
pusha
cmp
loope
xchg
mov
pushf
aam
in
sub
andb
dec
push
dec
mov
stc
fwait
lds
lods
movsb
or
repz
sbb
mov
ja
dec
je
mov
xchg
xchg
mov
jne
iret
adc
scas
xor
adc
and
pushf
cmpsb
dec
jmp
aaa
loope
jo
shrb
aam
test
pop
cs
or
and
and
xchg
xchg
add
pop
xchg
sbb
enter
add
lahf
std
cmp
push
jl
movsb
and
dec
pop
jp
and
xor
sbb
fistps
lret
aaa
mov
lds
and
imul
jns
inc
pop
sbb
and
cmpsl
lcall
cmc
inc
repz
and
dec
addr16
int
dec
fcmove
das
in
xchg
xor
mov
push
mov
scas
push
jecxz
or
or
jno
insl
sti
jne
int
daa
sahf
push
lea
test
lock
dec
inc
sbb
outsl
jg
icebp
mov
gs
and
sub
jnp
enter
cmpsb
test
push
pushf
cmp
in
xchg
repz
int
jb
jno
and
fs
mov
xchg
sub
pop
jl
test
arpl
ret
dec
or
mov
mov
or
jae
lahf
sarl
sbb
pop
and
fstpl
jb
xchg
repz
nop
popf
popf
faddl
hlt
jg
mov
jno
xchg
pop
data16
mov
out
into
add
pop
cld
cmp
sub
inc
scas
clc
test
test
xor
rcr
hlt
movsb
inc
flds
dec
jb
fs
push
sbb
xchg
sub
xchg
mov
dec
ret
loope
push
test
lock
imull
jnp
shl
popl
pop
es
int
cld
adc
sub
xor
mov
mov
test
add
std
push
xor
je
popa
cmp
lret
test
aas
or
jo
pushf
addr16
adc
lock
cmp
dec
lds
loopne
jns
or
mov
fwait
idivl
push
adc
inc
das
mov
pop
in
mov
fldcw
jno
mov
aam
mov
xchg
inc
adc
add
lahf
js
aad
mov
testb
ljmp
nop
lret
in
mov
dec
outsb
sahf
cmp
push
or
data16
rcrl
pop
xor
das
add
imul
inc
pop
lahf
cmp
int
xchg
jae
test
test
pop
mov
jno
jmp
mov
or
sub
lods
adc
pop
shll
xchg
and
xor
lret
rorl
nop
jg
xchg
insl
mov
testb
ds
into
adc
and
mov
jbe
xchg
test
in
xor
lock
mov
mov
in
in
ret
imul
roll
clc
rclb
pushf
pop
testl
xchg
filds
insl
xor
xor
cmp
and
lods
jns
std
int3
xchg
daa
adc
or
pushf
adc
rcll
xor
xor
sti
rcl
xor
stc
out
test
add
mov
and
test
ret
adc
mov
outsb
outsl
push
inc
or
scas
imul
fnstsw
test
stc
aas
lock
mov
dec
in
xlat
int3
js
ja
adc
add
inc
jno
outsl
sub
in
sub
insl
push
xor
movl
jnp
notl
cmp
xchg
fwait
mov
les
jg
pushf
mov
lcall
mov
sbb
jge
lock
inc
adc
insb
jp
fsubr
cmp
jmp
fsts
ret
add
cmp
inc
xchg
mov
push
bound
repz
pshufw
bound
cmp
cmp
sbbb
mov
pop
add
mov
mov
into
push
mov
xchg
out
das
imul
sub
orl
sbb
push
xchg
mov
or
fdivl
jp
mov
adc
pop
fs
add
and
push
movsl
sbbl
outsl
mov
mov
add
sti
out
mov
sarb
pushf
xor
dec
xchg
fadds
hlt
nop
aad
arpl
int
rclb
sub
not
jle
fistps
test
jg
mov
nop
mov
cmp
std
push
shl
cmp
sub
stc
movsb
pop
in
out
orl
dec
outsb
sarb
pop
adc
sub
call
and
pop
jb
push
inc
mov
aad
inc
xchg
xchg
mulb
adc
cmp
mov
std
hlt
mov
and
fbld
or
shrb
sbb
repz
pop
push
ror
mov
cmp
add
hlt
xor
into
sub
les
mov
das
mov
ffreep
cmp
mov
lea
into
cli
pusha
pop
xchg
jmp
leave
sbb
iret
pop
sbb
dec
xor
inc
jmp
jl
data16
popa
sbb
mov
xchg
cld
popa
ret
mov
enter
insl
mov
mov
ja
mov
fistpll
xchg
shll
add
cmp
dec
sarl
inc
push
add
lea
aam
add
out
mov
adc
ret
dec
ljmp
aaa
pusha
push
pushf
int
leave
jle
test
mov
lods
cmpl
cwtl
into
out
shrl
jo
mov
fwait
pop
cmp
add
inc
and
jo
sti
andl
nop
xchg
ja
xor
mov
mov
lods
xor
pop
pop
adc
aam
fmull
movsl
std
mov
filds
ret
mov
xor
adc
sub
xor
mov
loop
cmp
mov
jae
xor
aaa
jmp
sarb
inc
mov
add
je
xor
enter
mov
mov
fisubrs
sub
lea
push
pusha
sahf
scas
lock
or
jo
cmp
mov
subb
fsubrl
xor
cmpsb
add
lcall
push
ljmp
jne
mov
das
push
aam
pop
sbb
dec
mov
dec
loope
rcrb
mov
inc
loop
jae
dec
mov
pop
cwtl
fsubrl
cmp
fsubrl
enter
lcall
mov
inc
sub
mov
xor
xor
or
popa
or
scas
rolb
sbb
arpl
pop
and
mov
cltd
les
or
shlb
cmc
mov
sub
adc
ret
adc
pop
fdivs
dec
sub
push
dec
sbb
cmp
cmpsl
dec
out
jmp
hlt
les
and
cli
xor
mov
outsl
popf
mov
add
pop
jno
andb
fistpll
mov
xorb
mov
cmp
fidivs
add
stos
dec
and
cmp
sahf
fs
pop
xchg
ljmp
fnsave
mov
dec
sbb
jmp
ja
adc
rcr
sbb
push
xchg
xchg
cwtl
or
dec
mov
cmp
sub
inc
dec
mov
shr
adc
dec
inc
test
fdiv
ljmp
jne
cli
sahf
cmpsb
pop
jbe
aaa
jno
or
sub
jb
jne
je
pop
sub
cmp
ret
lcall
and
in
orb
fadd
mov
fstpl
mov
lret
adc
push
repnz
jns
mov
cmc
mov
xchg
and
in
xor
add
inc
sub
stc
cmpsl
mov
xchg
lds
aad
cmc
setae
sbb
inc
fadds
test
jmp
ret
push
sbbl
xor
test
rol
mov
xor
pop
popf
or
xor
es
or
out
xchg
out
or
xchg
dec
gs
shl
inc
push
sbb
shll
push
dec
sbb
popa
sti
cmpsb
or
test
outsl
das
or
mov
or
sbb
cmp
jb
pop
add
push
adc
addr16
jb
ret
nop
movsb
adc
mov
dec
mov
sub
or
popf
insl
mov
pop
jmp
cld
fidivrs
iret
sbb
xchg
pop
push
js
mov
jbe
jb
cld
jns
and
mov
inc
dec
mov
lods
jecxz
inc
scas
push
stos
and
shlb
or
xchg
xchg
sub
add
mov
dec
sub
scas
cld
mov
repz
into
or
add
in
insb
push
out
fs
test
adc
je
jmp
add
fisubl
jp
stc
pop
mov
aad
jbe
dec
mov
sub
and
loopne
idivb
pop
add
lret
sti
out
xchg
pop
mov
push
or
jnp
cld
arpl
subb
xchg
jge
pushf
jne
cltd
inc
daa
mulb
pop
pop
repz
arpl
jae
cwtl
push
push
nop
sbb
pop
add
jg
outsl
lods
jp
jo
sub
repz
shrl
pop
fidivl
psubusb
data16
add
inc
fs
cld
pop
ror
and
inc
jmp
dec
add
ds
test
jge
sub
sub
mov
data16
mov
sub
cmp
fmul
lea
arpl
cmpsb
mov
xchg
sub
rcrl
mov
dec
call
xor
fisttps
add
stos
mov
adc
jbe
pop
mov
notb
cmp
inc
nop
adc
int
ljmp
test
jle
jae
mov
rep
ljmp
sarl
pop
mov
in
sti
adc
adc
mov
xchg
mov
enter
stos
mov
ljmp
sar
pusha
cltd
push
cmpsb
mov
push
dec
test
adc
push
js
mov
aam
cmp
jmp
pop
test
loope
sahf
or
js
mov
frstor
andb
call
nop
mov
and
inc
mov
sbb
stc
adc
xor
imul
push
daa
push
mov
andb
mov
rorl
pop
sti
sbb
cs
mov
out
mov
in
and
mov
sbb
fisubrl
xchg
pushf
add
daa
sub
jo
adc
enter
mov
mov
dec
jo
inc
sahf
test
pop
add
repnz
insb
mov
dec
aas
mov
dec
std
inc
lcall
pop
aas
test
cmpsl
test
in
xor
cmpsb
xchg
rcrb
push
mov
pop
rorl
je
movsb
mov
and
subb
in
lea
icebp
push
jns
inc
lea
icebp
push
push
jp
xor
jl
push
dec
jne
add
mov
bnd
fdivs
cmp
pop
mov
push
inc
xlat
icebp
mov
push
cmp
insb
add
mov
ds
adc
cmc
shr
in
mov
dec
pop
push
cmp
nop
xchg
aaa
mov
lds
mov
pop
decl
jge
mov
xchg
in
sub
push
cs
mov
cwtl
mov
fldt
pop
popa
mulb
pop
or
sbb
cld
pop
adcl
lret
xchg
pop
outsb
add
mov
xchg
or
into
pop
outsb
movq
fs
jne
in
das
iret
jno
inc
push
and
add
cwtl
or
adc
cld
popl
aad
aad
jo
fldenv
xor
aam
sub
test
shll
xchg
or
popf
jp
sbb
jle
fisttpll
pop
push
or
push
adcb
fmul
gs
mov
and
xlat
sbb
cmc
imul
pop
cli
and
lock
andb
sbb
jno
mov
add
inc
cmp
xchg
jecxz
jne
cmpsb
jno
and
mov
dec
cmpsl
movsb
cs
int3
outsb
cmpsl
mov
sbb
jne
lcall
aam
jp
sbb
sub
pop
mov
cmp
dec
icebp
aaa
sbb
nop
shrl
add
jle
jno
aaa
jp
jne
adc
repnz
jle
jo
xchg
stos
js
or
fsub
adc
sbbl
push
sbb
jne
in
adc
mov
mov
ret
push
mov
push
cmp
xchg
mov
test
lret
out
pop
mov
xor
xor
icebp
sbb
cs
cmpsb
rcrb
mov
in
clc
and
cmc
mov
in
mov
out
xor
lods
testb
cwtl
add
sarl
inc
in
push
loop
xor
xchg
loop
pop
mov
and
or
data16
push
std
xchg
push
xchg
pop
xor
sbb
ret
out
shlb
test
leave
jmp
movl
or
xchg
lcall
daa
lcall
mov
negb
or
jne
mov
sti
cltd
push
and
scas
or
stos
push
xor
and
dec
hlt
xchg
dec
push
fnstcw
mov
out
outsb
pop
sbb
lahf
xchg
xchg
loope
and
push
nop
sub
fnsave
mov
jno
in
mov
and
xchg
dec
jmp
pop
popf
sub
pop
int3
repz
gs
pusha
gs
clc
jo
inc
mov
inc
jp
cltd
push
out
fists
sub
dec
sbb
xor
cld
inc
popf
push
sub
out
push
cmp
fs
pop
icebp
insl
cmpsb
and
aad
jnp
push
ss
cmp
imul
jg
daa
inc
mov
xor
mov
push
jp
loopne
mov
dec
imul
rcrl
dec
cwtl
std
pop
jns
cmp
and
adc
cmpxchg
xchg
pop
cmp
aas
xchg
mov
inc
xchg
mov
xchg
cmp
mov
test
gs
fistpll
pop
xchg
shlb
imul
mov
dec
adc
mov
hlt
jmp
addl
imulb
xchg
out
xor
daa
loope
sarb
mov
sbb
mov
loopne
or
pop
mov
cmp
pop
pop
xchg
lods
mov
inc
fwait
jae
in
xchg
jle
les
sbb
push
mov
popa
cwtl
jge
call
pop
push
mov
inc
mov
pop
pop
inc
aas
sub
xor
aaa
inc
jae
inc
add
insb
push
movsl
sbb
outsl
sbb
inc
in
and
je
aaa
adc
sbb
mov
test
mov
ficoml
or
lret
nop
jp
nop
mov
jl
icebp
insl
push
mov
rcrl
cmpsl
push
imul
add
cmp
scas
xchg
insl
mov
jecxz
ds
into
push
mov
rolb
pop
cmp
loope
inc
sub
out
repz
jg
push
or
push
test
scas
repz
hlt
cmp
or
push
roll
mov
or
jle
sbb
pusha
loope
cmp
pop
aas
jg
movsl
cmp
aaa
dec
sub
dec
xlat
pusha
pop
cli
mov
stos
push
icebp
push
lods
fsts
lcall
fistl
push
xlat
icebp
jmp
jns
mov
push
jp
dec
lret
xor
pop
xchg
jg
mov
adc
or
jmp
pop
push
nop
sbb
or
in
aas
insl
mov
in
shrb
add
pop
jg
pushf
or
loop
pop
xchg
roll
mov
sub
dec
lods
jno
pusha
popf
lret
cmp
dec
insl
cld
insl
mov
jne
je
pushf
bound
jmp
out
inc
mov
add
sbb
loop
int3
sbbl
pop
fs
dec
aam
lods
aad
xchg
jecxz
mov
sub
pusha
loop
lret
enter
push
xlat
lahf
cltd
cmp
add
sub
and
cmpsl
mov
dec
daa
pop
les
or
aas
cmovo
pushf
pop
cli
jp
mov
call
das
in
iret
mov
nop
cltd
fnsave
sbbl
push
mov
pop
outsb
adc
cli
fsubp
jnp
mov
inc
in
pop
mov
loope
mov
dec
aaa
adc
pop
out
push
ret
cmp
xor
ja
adc
cwtl
outsb
lcall
push
je
dec
inc
test
sub
gs
sub
sarb
adc
push
js
xor
out
mov
out
pop
and
mov
mov
pusha
cmpsl
xchg
adc
mov
sub
and
push
scas
movsb
or
dec
stc
test
mov
inc
test
push
cmp
mov
lcall
adc
push
mov
addr16
aaa
sub
shr
shlb
add
jp
adc
xor
imul
push
loop
in
negb
out
push
cmp
in
cmpl
pop
sub
jg
sbb
sti
add
cmpsl
lcall
cmpsl
pop
mov
push
and
sub
test
dec
push
fwait
aad
jge
xor
imul
jno
push
xchg
lret
push
js
hlt
and
lods
cli
ret
jne
pusha
adc
int3
adc
imul
cmpsb
rolb
xchg
and
mov
cwtl
cmp
jle
jg
lret
sub
cmp
fldcw
and
ss
jge
mov
mov
mov
cs
filds
pop
scas
inc
aaa
imul
jle
rcrl
es
adcb
push
cld
das
stos
sbbb
adc
aam
aaa
cmp
popa
inc
mov
mov
push
lret
mov
aam
jno
push
arpl
mov
mov
in
xor
xchg
cli
adc
mov
pop
fstps
fs
shll
mov
xor
gs
movsl
xchg
es
cmpb
inc
pop
in
push
cld
pop
es
mov
int3
mov
inc
jb
lock
sub
push
xchg
lret
push
fsubs
xchg
repnz
add
sarl
push
dec
aad
test
mov
add
inc
mov
dec
cs
imul
hlt
sub
mov
faddl
enter
popf
xchg
sar
lock
imull
mov
dec
insb
fcomps
subb
fsub
add
test
dec
dec
outsl
arpl
add
bound
adcl
aam
enter
push
cmc
jno
imul
pop
xlat
sub
repz
lahf
dec
and
sbb
ret
or
mov
jae
movsl
out
dec
or
dec
jnp
and
and
addr16
ljmp
add
mov
rcrl
lock
or
mov
cmpsl
test
fsubrl
fsubrl
call
je
dec
or
dec
fs
adc
pop
cmp
cwtl
mull
sub
movsb
push
and
push
cwtl
addr16
bound
std
lods
sub
dec
mov
insb
mov
or
mov
or
xor
xchg
xchg
in
cmpsb
mov
xchg
jp
shll
push
sub
ret
rorl
xchg
push
fistps
fldcw
test
rorb
push
mov
or
adcb
cmp
ror
mov
mov
adc
sahf
dec
mov
dec
hlt
or
aam
cmp
stc
xchg
popf
or
cwtl
push
mov
inc
daa
push
rcl
mov
push
dec
xchg
rcrl
jg
sbb
repz
loopne
clc
ret
stc
in
iret
sub
or
inc
pop
sbb
jno
scas
insl
arpl
dec
addr16
jg
int3
das
xchg
lods
jo
adc
cmp
xchg
jae
js,pn
xchg
sahf
push
xor
in
mov
cmpsb
add
or
in
push
jbe
dec
or
jmp
adc
mov
flds
jp
lcall
jmp
pushf
jl
jnp
or
lret
jns
mov
or
das
rcr
sti
pushf
mov
test
add
and
xchg
call
cs
xchg
mov
mov
test
clc
lods
dec
gs
mov
lahf
ja
push
push
enter
je
xchg
dec
popa
lea
addl
std
jbe
aas
mov
fistpll
out
lahf
std
dec
fisubs
ret
and
rclb
bound
and
stc
out
sbb
cmp
xor
scas
testl
dec
mov
or
mov
xor
popa
and
fcoms
pop
loopne
mov
sbb
das
test
das
shrl
adc
mov
xor
lock
leave
mov
inc
xor
or
xchg
adc
xor
addb
xchg
jbe
aam
fucomip
push
in
mov
and
mov
dec
and
das
rcr
push
or
cld
and
fcomps
sbb
inc
jmp
test
lea
sbb
in
push
arpl
xchg
cmp
mov
dec
pop
je
jecxz
andb
and
push
out
push
push
xchg
stos
ret
inc
clc
jecxz
pop
dec
cmp
cmp
and
mov
int
xor
dec
cli
pop
jmp
into
push
cmp
push
inc
aaa
outsl
fimull
jg
adc
test
lods
inc
inc
inc
lret
ja
out
xchg
lcall
test
mov
dec
cwtl
sbb
fs
cltd
ret
aas
mov
inc
push
sbb
fwait
mov
mov
dec
mov
filds
mov
push
loop
mov
sub
mov
mov
es
iret
jae
xor
adc
sbb
test
cwtl
repz
dec
dec
push
dec
pop
aam
and
loop
fimull
and
xor
inc
fisttpll
fldl
jg
repnz
fsubrs
jne
push
mov
out
ficomps
rolb
cmp
and
pop
xchg
inc
pop
insb
sbb
cmp
inc
das
data16
lods
mov
push
out
jecxz
repnz
shl
jbe
imulb
xchg
inc
clc
bound
incb
jg
mov
bound
lea
dec
idivb
mov
pop
adc
jle
call
addr16
je
or
mov
fwait
imul
sub
movb
cmpb
jae
add
sbb
or
mov
ja
mov
and
and
push
xor
jp
ret
or
xlat
mov
out
push
mov
adc
push
ja
jmp
insl
mov
pop
mov
es
add
fimuls
scas
jmp
fmull
jge
mov
popf
mov
packsswb
int3
rclb
ss
call
clc
std
addl
sbb
nop
repnz
mov
addr16
mov
pusha
mov
jno
hlt
dec
xchg
push
nop
iret
jmp
push
xor
push
fucomp
daa
push
std
rep
push
sbb
test
dec
cmp
add
sbb
test
insb
sti
mov
sub
in
xor
aam
and
xchg
pop
sbb
in
dec
jo
insl
test
pop
dec
fisubrl
iret
mov
sahf
test
lcall
mov
xor
push
or
xlat
imul
xchg
add
mov
cs
xchg
andb
pminub
fidivl
fsubs
xchg
mov
mov
jns
mov
mov
leave
dec
jl
jge
stos
sbb
aad
stc
pop
es
lods
test
ret
test
iret
movb
nop
out
cmp
jno
dec
mov
je
inc
enter
rcrl
pop
int3
pop
push
scas
loop
sub
mov
icebp
adc
repnz
inc
cmp
sbb
lret
xchg
pop
scas
inc
enter
data16
lods
mov
repz
mov
cmc
loopne
push
movsl
jmp
push
inc
cmp
js
xor
push
dec
add
hlt
cmp
icebp
jg
fsubs
outsb
test
insl
shll
stc
clc
in
inc
add
popf
xchg
arpl
dec
in
and
pop
nop
mov
ja
in
pop
addr16
or
outsl
cwtl
mov
cmp
daa
aad
outsl
fists
or
mov
pusha
jnp
or
std
cmpsl
add
dec
or
lock
jecxz
jnp
cmp
mov
je
pop
jo
pusha
filds
sub
pop
or
mov
push
and
into
loopne
ljmp
xchg
test
ljmp
sub
je
mov
outsl
test
ja
add
fdivl
popa
pushfw
aaa
mov
jp
add
mov
fwait
xor
std
ret
leave
sub
or
int
sarl
incl
clc
add
imul
incb
xchg
mov
lret
scas
out
pop
xchg
ljmp
sbb
pop
add
xor
ss
inc
mov
jnp
sub
testl
mov
dec
test
es
xchg
out
sub
rorb
push
aam
xchg
hlt
imul
pop
sbb
data16
imull
scas
sahf
mov
repnz
test
jp
sub
popf
dec
lock
lods
lods
loope
push
xor
inc
inc
int
xor
cmpsb
mov
xchg
push
and
outsb
movsl
jnp
pop
jbe
cs
xchg
popf
ljmp
or
and
lods
adc
xchg
adc
jecxz
and
xchg
pop
ret
and
lcall
sahf
call
fsubrl
add
cmc
mov
mov
lret
mov
adc
xchg
push
xor
mov
mov
rorb
jge
aam
jns
mov
bound
mov
adc
repz
or
lret
in
mov
dec
push
in
sarb
mov
sahf
mov
scas
mov
fcompl
cwtl
dec
scas
mov
insb
icebp
shl
cmpsb
inc
loop
call
lahf
movsb
add
subl
fpatan
sbb
mov
inc
das
adc
inc
clc
ret
jnp
dec
dec
and
insb
ds
push
dec
out
scas
outsl
gs
jb
lods
jg
lahf
cmp
iret
dec
out
inc
xor
popa
popf
outsl
fadd
ret
lds
lods
and
bound
stos
mov
lret
lock
das
int3
xchg
adc
dec
mov
shlb
aam
add
push
sti
pop
mov
jo
ljmp
in
leave
adc
cmp
daa
mov
add
aas
jbe
test
fwait
lret
mov
and
sub
sbbl
sbb
mov
sbb
and
pop
xchg
mov
xor
jecxz
test
or
fimuls
push
dec
sar
inc
xchg
div
lret
cmc
imul
imul
fxch
mov
cmpsb
mov
enter
lods
jnp
icebp
mov
pop
sub
inc
stc
xchg
sti
mov
xchg
cmpl
pushf
mov
int3
jo
addb
jnp
mov
cli
pop
cmp
push
jbe
js
movsl
jg
les
xor
fwait
jmp
sbb
xchg
dec
lods
jb
repnz
lret
ret
cmp
and
cmc
out
cli
jg
mov
xor
sbb
fstp
movsb
jg
add
rcl
rcrb
xchg
aad
and
clc
jnp
push
xchg
into
sbb
fcmovnu
and
adc
cmp
lcall
pop
sbb
cltd
add
dec
mov
orl
stos
xchg
cmp
loop
or
outsl
pop
jge
sub
mov
mov
push
arpl
mov
fcomip
out
push
aas
fisubrs
pop
inc
sub
lahf
jnp
insl
xor
xchg
adcb
aaa
fwait
xchg
in
lret
jnp
enter
sbb
add
sbb
fadds
inc
xor
pop
shll
leave
pop
and
test
in
lds
mov
insl
insb
mov
loop
fstpt
das
fnsave
sub
iret
xor
adc
cltd
adcb
movl
and
das
aaa
and
mov
add
in
xorb
sbb
mov
inc
sub
loopne
mov
aas
enter
in
xchg
mov
jecxz
sbb
stos
dec
movsl
inc
test
stc
sub
out
mov
vmovsldup
add
inc
pop
sbb
add
and
jns
loop
inc
mov
push
mul
mov
sub
in
push
gs
sub
mov
in
sub
adcb
jb
push
mov
jmp
mov
dec
das
xlat
inc
mov
fucomip
jns
add
mov
pop
fldt
cltd
fucom
xchg
lret
dec
push
and
test
aad
mov
out
xor
adc
sub
jae
enter
into
dec
mov
ret
and
cmpsl
int3
lock
push
xchg
xchg
repnz
push
cli
arpl
int
jns
mov
pop
dec
sub
fdivrl
mov
daa
pushl
ficoml
jle
lods
mov
fistpll
xor
test
and
lret
scas
mov
sub
inc
jecxz
dec
pop
mov
adc
int3
test
loope
mov
mov
cltd
pop
pushf
stos
mov
icebp
out
add
pop
arpl
popf
arpl
int
mov
lahf
imul
scas
das
xor
lods
loop
adc
ficomps
push
mov
push
jp
test
loop
jns
jb
mov
sub
and
cmp
scas
fadd
pop
lods
and
ds
push
bound
orb
cmp
gs
and
ja
push
inc
jg
cmpsl
call
fcmovb
mov
mov
fwait
inc
jmp
sbb
sar
cmpsb
stos
mov
fcomps
cmp
imul
xchg
mov
sbbb
lds
in
dec
xchg
in
inc
add
mov
cmp
pop
pop
lahf
jnp
cli
mov
int
add
daa
fcmovnb
cmp
sub
cmpsl
or
pop
bound
fdivrl
out
sub
add
ror
sub
or
jns
outsl
loop
and
js
xor
in
or
inc
arpl
pop
dec
jb
orl
or
fs
cltd
je
bound
xorb
jo
gs
jge
lods
jno
mov
xor
out
or
jae
xchg
inc
push
mov
push
jns
test
movsb
hlt
mov
inc
add
das
mov
jle
into
nop
dec
cmpsl
insl
sub
push
jg
ret
mov
fsts
movsl
xchg
into
iret
mov
add
ret
mov
mov
ja
fldl
aaa
inc
sub
xlat
jle
pop
cmp
mov
out
pop
pop
rcrl
cmp
aas
sbb
sub
push
mov
inc
pop
scas
in
mov
push
push
std
enter
jmp
movsl
loope
inc
lret
or
aaa
push
inc
shl
inc
repnz
add
aas
js
or
push
int
nop
movsb
fs
push
scas
mov
insb
repz
adc
ror
imull
into
xlat
xchg
subps
dec
aaa
into
popf
fidivl
sbb
mov
fistpl
hlt
inc
icebp
push
scas
xchg
shrb
pop
jle
or
or
mov
pop
pushf
lock
dec
jmp
fbstp
mov
adc
cld
add
into
sbbb
push
sbb
jne
ret
lret
add
mov
mov
or
or
clc
jno
mov
mov
add
shlb
loope
lret
cltd
sahf
je
sbb
jg
call
jp
lea
xor
mov
jecxz
sbb
ret
les
pusha
push
aad
jno
jae
roll
stos
mov
in
daa
dec
inc
xor
mov
pop
aad
shrl
and
push
idivl
iret
pop
aam
call
inc
stc
loope
lods
mov
lret
pop
enter
arpl
loop
xor
mov
aaa
ja
and
sub
rol
testb
push
fdiv
pop
aaa
jno
mov
sbb
stos
mov
mov
jp
pop
iret
sub
xor
loope
roll
push
repnz
or
lret
inc
pop
pop
outsl
xor
xchg
psadbw
int3
jno
das
push
test
cltd
sbb
pop
scas
int
jbe
jo
out
fstpl
cli
lock
jecxz
sbbb
mov
lahf
les
xchg
int
pop
push
pop
or
movsl
lahf
in
lea
addr16
es
insl
cmp
cmpxchg
jecxz
or
xor
pop
sbb
shrl
xchg
adc
daa
mov
inc
xlat
push
and
data16
lds
arpl
inc
mov
mov
daa
mov
cld
ret
test
jae
inc
and
dec
jmp
in
cwtl
lret
dec
into
cmpsl
add
fists
aas
iret
pop
ret
or
test
js
jge
jmp
mov
scas
ljmp
push
or
adc
addr16
fsts
xchg
les
daa
and
in
ret
cmp
iret
mov
push
mov
cltd
push
lcall
xchg
mov
push
aaa
rol
fsubrl
mov
hlt
pop
std
hlt
in
fsubrs
rcl
popa
addr16
je
inc
ds
push
in
pop
jo
das
inc
cli
sbb
xorb
add
pusha
mov
mov
mov
adc
popl
dec
inc
cmp
mov
je
lods
fwait
std
push
or
clc
aas
std
ljmp
xchg
add
and
jb
je
popf
fcmovbe
lahf
rclb
add
div
shlb
push
and
mov
push
pop
jne
mov
mov
mov
add
xchg
loope
dec
inc
jne
push
int3
mov
mov
lock
pushf
fsts
pop
jmp
clc
movsl
jmp
xor
inc
inc
sub
push
mov
fcmovnb
add
dec
sub
fdivrs
lcall
stc
icebp
xchg
jae
idivb
pop
inc
lods
dec
sub
cs
jbe
xor
fucomip
fdivrp
nop
addr16
push
mov
mov
bound
scas
dec
xchg
stc
cmp
xor
dec
cld
inc
stos
lods
xor
push
sub
or
jns
lea
repz
lcall
sub
and
mov
cltd
push
out
xor
stos
push
pop
les
insb
push
cmpsb
in
dec
lahf
loope
mov
push
jnp
cmpsl
in
call
stc
xchg
inc
pusha
mov
adc
sub
sbb
xchg
push
lcall
in
push
arpl
neg
out
mov
sub
dec
and
sub
mov
push
sbb
fwait
push
stos
pop
int3
andb
cmp
ret
int
aam
cmpsb
dec
ds
je
nop
pusha
mov
jae
int
mov
mov
dec
sub
pop
lret
dec
mov
mov
out
xor
mov
push
push
sbb
pop
lcall
push
cmpsb
sbb
dec
daa
pop
hlt
mov
adc
mov
test
and
js
rolb
push
aam
les
push
inc
xchg
cli
mov
mov
adcl
jns
ficomps
dec
inc
pusha
xchg
mov
inc
add
movsl
pop
rcl
lahf
arpl
inc
cmp
cmp
push
xchg
adc
mov
jmp
sbb
push
aaa
repz
dec
notb
loopne
lock
das
popa
mov
add
push
mov
jo
push
jecxz
pop
sub
and
mov
dec
xchg
insb
sbb
and
inc
jg
sub
push
push
in
xor
cmp
js
movl
mov
fistpll
imul
sahf
mov
push
enter
jb
lahf
loopne
test
std
std
out
rolb
scas
fsubs
push
dec
leave
mov
outsl
shll
push
fs
fxch
cs
rcr
jp
subl
add
out
aas
hlt
push
outsl
hlt
arpl
cmp
sbb
jle
aas
ror
cwtl
jp
xchg
mov
dec
out
jg
int
xchg
imul
mov
xor
ud0
adc
cmpsb
sub
lods
jg
xor
inc
cmpl
push
inc
mov
in
mov
adc
int
add
in
mov
push
add
mov
lock
mov
mov
ljmp
mov
add
std
adc
sahf
sbb
inc
pop
scas
enter
stc
add
fbstp
idivb
jle
les
xchg
das
dec
add
mov
push
dec
adc
lahf
fpatan
loopne
mov
pop
fisttpl
or
les
lret
dec
jecxz
dec
mov
je
mov
xchg
ret
repnz
adc
dec
por
xor
add
jg
fstl
fisttpl
lock
jg
daa
stos
bound
movsl
pop
sub
dec
gs
pushl
and
push
xchg
or
dec
cli
ficoml
out
jno
addr16
test
pop
loop
lods
ds
int
fsubrl
js
pop
and
out
push
mov
cltd
movsl
sbb
out
test
sti
inc
push
dec
mov
fdivs
aaa
popf
aam
lcall
dec
frstor
stc
in
cmpsb
test
into
cmp
scas
shll
add
cltd
xchg
cmpsl
jle
or
imul
cld
in
jge
dec
jo
jnp
add
xchg
cs
mov
mov
xchg
adc
mov
icebp
orb
mov
push
jecxz
test
sbb
sbb
mov
fcompl
xchg
in
mov
ja
pop
movsb
or
int3
cli
pop
lods
andb
mov
popf
lea
cmp
or
lds
lret
test
cmpsl
and
mov
dec
shr
lods
repz
ds
mov
jae
sbb
aam
fstpt
mov
leave
jmp
jo
dec
mov
sub
adc
jb
icebp
mov
call
sub
out
pop
mov
aam
dec
arpl
sti
xchg
je
lock
cld
shufps
jle
xchg
scas
cmp
jbe
test
arpl
lock
test
mov
test
paddusb
dec
stc
adc
add
or
xchg
hlt
das
cmp
and
imul
jno
dec
cmp
mov
adc
and
dec
shll
inc
or
lds
push
sub
mov
push
out
pop
pop
mov
xchg
pop
cmc
xor
lahf
push
mov
and
sti
std
repz
add
xor
push
fmul
add
lods
inc
ljmp
cmp
inc
or
iret
mov
jp
jnp
jg
jge
das
insb
jb
sbb
mov
mov
jbe
scas
pop
inc
mov
loopne
in
cltd
push
jp
pusha
mov
fwait
scas
or
xor
dec
inc
test
dec
or
mov
mov
test
jb
lea
cmpsl
lcall
mov
cmc
aas
mov
icebp
mov
dec
dec
stos
lods
shll
mov
and
test
cmpsl
loopne
movd
sub
pop
addr16
pop
sub
hlt
adc
add
arpl
xchg
scas
mov
inc
fcmovb
les
push
sub
pop
test
pushf
mov
dec
dec
jecxz
mov
icebp
cmp
mov
pop
xchg
jmp
xchg
in
add
push
insb
imull
stos
insl
repz
lret
xor
mov
mov
idiv
mov
and
mov
sub
lret
cld
lock
cs
aas
sbb
mov
mov
push
cmp
out
push
xchg
jle
daa
ljmp
pop
push
mov
push
xor
iret
cmp
and
movsl
fstpl
aam
js
pop
or
mov
pop
rclb
xor
pop
movsl
lret
in
fimuls
out
inc
xchg
xchg
add
and
sub
push
cmpsl
jo
cmp
fbld
sahf
jne
cmp
ss
stos
push
mov
inc
pop
pop
mov
xor
mov
xor
cmp
lret
repz
push
daa
lret
vandps
sbb
lea
sub
addl
outsl
push
sub
mov
movsl
mov
mov
loop
jle
lret
pushf
pop
sub
ja
sbb
or
cmp
push
inc
pop
loop
mov
pop
les
push
sbbb
push
push
imul
cltd
push
fsubs
xor
movsb
jnp
scas
dec
mov
nop
push
call
jg
out
mov
lahf
dec
fstpl
cli
add
imul
xor
pusha
data16
divb
pop
push
out
jbe
pop
and
jae
inc
jo
call
in
ljmp
out
pop
mov
jp
xchg
pop
lods
jne
dec
xchg
mov
aad
aaa
xor
aas
push
sub
ud2
or
cs
or
mov
aad
cmp
mov
mov
lock
ret
cwtl
vandps
loop
and
push
out
lods
clc
push
jl
es
into
jecxz
xorb
xchg
mov
xchg
push
fstps
in
fs
mov
shl
in
sub
pusha
mov
daa
pop
mov
test
pop
mov
sbb
test
sub
xchg
lcall
test
xchg
into
mov
push
jmp
mov
push
pop
cld
adc
imul
outsl
imul
gs
and
xor
nop
mov
inc
pop
pushf
inc
inc
jbe
shr
aaa
stos
fcomps
push
jnp
cmpsl
test
dec
mov
mov
sub
std
out
jnp
jle
jbe
jae
xchg
mulps
cmp
jge
test
std
mov
int
in
ds
cmp
jl
int3
ds
adc
push
outsl
leave
outsl
xchg
icebp
adc
mov
cld
xchg
mov
cld
ds
cmp
mov
xor
pop
jns
xor
divl
mov
or
xchg
ja
push
std
mov
daa
cmp
subb
or
mov
sahf
imul
cmp
leave
xchg
mov
adc
push
mov
scas
aas
pop
scas
jae
inc
adc
in
outsb
dec
popl
and
mov
cmp
dec
aas
cmp
repnz
ds
js
push
addr16
inc
jge
mov
fcompl
jp
cld
adc
add
sub
bound
ret
push
dec
pop
gs
xchg
xchg
xchg
mov
xlat
sbb
sub
imul
sti
inc
mov
insb
es
test
enter
xchg
sbb
mov
insb
mov
add
sub
pop
test
out
in
or
iret
jns
adc
xchg
mov
jo
int3
jge
mov
stc
sub
inc
and
xchg
mov
jo
stos
inc
add
xchg
arpl
cmp
jmp
in
ja
pop
lahf
jnp
cs
jge
sub
je
cs
stos
out
jg
scas
push
mov
sbb
pop
sbb
fldt
mov
call
sbb
xor
push
add
xor
enter
mov
jge
xor
cltd
jae
jp
push
lret
mov
in
imul
out
mov
bound
ret
repnz
push
xor
sahf
sbb
fdivrs
les
and
mov
sbb
push
sbb
dec
add
jle
aam
inc
out
loop
push
pop
mov
dec
loop
shrl
mov
cmpsb
loop
lcall
sbb
in
out
cmp
jge
hlt
movl
jmp
pop
jbe
and
call
mov
insl
pop
mov
daa
mov
xchg
test
mov
cmp
sub
push
push
pop
stc
push
neg
inc
cmovle
or
mov
out
lods
mov
push
dec
out
stc
dec
add
xor
sbb
andl
sub
jge
es
mov
push
out
aas
pop
push
repz
and
ja
ljmp
mov
mov
push
xor
xor
push
cmp
clc
add
xchg
mov
add
mov
ljmp
push
js
in
jbe
into
cmp
mov
xor
inc
leave
mov
leave
loopne
lcall
push
dec
adc
mov
jnp
mov
rorb
cmp
push
mov
mov
je
add
mov
stc
xchg
cld
shrl
adc
xchg
sbbb
sub
cli
xchg
fcoms
xor
bound
faddl
int3
cwtl
mov
mov
push
daa
aas
inc
cwtl
or
shll
adc
or
or
mov
je
repz
inc
inc
dec
jb
mov
test
xchg
fsubr
cmp
lcall
mov
adc
clc
pop
iret
inc
dec
sbb
fcoms
push
sahf
push
shlb
pusha
jo
or
stos
inc
mov
clc
sub
test
cpuid
lret
clc
or
mov
jo
mov
jecxz
mov
aaa
fwait
sar
aaa
stc
xor
rolb
pop
mov
mov
mov
mov
lret
fidivrs
movsb
or
push
sbb
mov
xchg
jl
sbb
lea
and
mov
cld
and
hlt
dec
out
push
push
negb
movsl
loopne
aad
fwait
sbb
sbb
mov
jp
push
sahf
mov
fdivrs
mov
xor
in
dec
push
pop
aam
insb
sub
pop
pop
or
fnstcw
aad
popa
xchg
pop
shr
xchg
movsl
jo
gs
fildl
outsb
xchg
jg
adc
cmp
adc
enter
mov
das
cmp
test
sbb
xchg
mov
inc
and
subb
or
jg
movsb
xchg
pop
jecxz,pt
xchg
faddl
mov
xchg
and
push
popf
or
je
icebp
aaa
cli
push
and
cmpsl
mov
scas
ret
adc
dec
mov
icebp
fmul
test
hlt
xor
jne
out
ret
jmp
cmc
cmp
fcoml
repz
call
add
rcrl
jno
mov
mov
mov
xchg
dec
shrl
int3
xlat
ja
fimuls
inc
test
fs
inc
lret
sahf
fbstp
ss
adc
sbb
xor
push
mov
lahf
fwait
push
mov
sbb
sbbb
xor
imul
int
jbe
insb
pop
xlat
iret
add
std
pop
aaa
push
inc
mov
int3
push
ds
clc
outsb
add
jno
pusha
xor
jne
test
pop
sub
push
lcall
shll
mov
loopne
and
enter
psraw
iret
nop
out
sti
jge
dec
inc
add
fucomi
pop
xchg
add
pop
fwait
xor
ss
add
hlt
pop
sub
xchg
test
lea
mov
in
adc
mov
add
dec
enter
repnz
xchg
ds
adc
fwait
cmc
addr16
inc
int
and
adc
int3
fwait
and
jns
xchg
rclb
pop
or
jnp
out
push
in
in
ret
rolb
mov
pop
mov
out
or
fstpl
dec
jge
sub
ja
pusha
lret
sub
scas
add
mov
loope
cli
or
add
out
pop
call
cmc
dec
pop
push
int3
xor
shl
lret
mov
ficomps
mov
cltd
outsl
fdivrl
les
xor
pop
mov
fnstsw
lret
cmp
movsl
mov
es
cmpsb
mov
shrl
js
outsl
and
fwait
or
cmp
test
add
inc
mov
clc
xchg
dec
call
loopne
jl
or
test
clc
test
sarb
std
cltd
jle
push
inc
mov
pop
out
movsl
imul
ret
ds
outsb
shll
shlb
and
ficoml
xchg
lds
popa
jecxz
in
xchg
jmp
push
sub
ja
push
mov
pop
cmp
sub
fimuls
mov
scas
pusha
adc
mov
movsb
xchg
xchg
dec
jbe
das
in
rclb
cmc
mov
mov
or
lcall
cltd
popf
jg
xchg
xchg
adc
push
decl
mov
push
out
stos
and
test
sbb
or
scas
jg
push
xchg
lock
xchg
lcall
push
dec
enter
cmp
xchg
int
outsb
pushf
lods
mov
jp
sti
sub
mov
cmp
shrl
test
test
push
movsb
adc
mov
mov
scas
dec
pop
popf
and
imul
aas
in
shl
bound
push
push
sahf
mov
fiaddl
fwait
sahf
fildll
js
movsb
pushf
pop
mov
clc
stos
jnp
imul
sbb
mov
aad
push
insl
mov
sbb
jo
and
add
jne
mov
pop
scas
pop
fcmove
movl
test
push
adc
rorl
gs
mov
mov
in
adc
lods
push
sub
pusha
push
adc
mov
mov
jecxz
inc
icebp
lods
pop
jg
in
test
cmpsl
push
sub
ss
pop
mov
xchg
mov
pop
jb
or
inc
orl
hlt
mov
push
jno
lock
lcall
and
xchg
dec
push
popf
xchg
inc
xor
fimuls
ds
popa
mov
enter
or
sbb
int
xchg
imul
test
ja
xchg
cmpsb
xor
cmp
mov
outsb
add
gs
mov
sub
and
cmp
cli
xchg
iret
or
cmp
stc
and
lgs
lds
jne
fsubr
pop
mov
dec
cmp
stos
dec
jmp
jmpw
rcrl
call
ss
and
rcll
xchg
cmovae
xchg
cmp
sbb
insb
insb
sub
xor
cmp
sub
pop
and
ss
push
sti
inc
xor
sbb
cmp
ljmp
mov
cmp
mov
fnstcw
arpl
popf
cmp
inc
sub
ss
cmp
pop
or
popf
jbe
add
sbb
add
mov
or
leave
fadds
pop
sub
mov
adc
add
mov
fs
add
sahf
jle
sbbb
cs
movsl
cmpsl
mov
lcall
add
ss
cmp
fistl
or
jg
jb
sti
pop
jmp
ljmp
inc
mov
outsl
test
push
mov
xchg
and
jge
jl
pusha
jge
cmp
in
sahf
lret
in
jns
scas
or
shll
mov
mov
decb
mov
jl
sub
cmpsb
es
sbb
aad
sub
push
cmp
jae
and
cmp
cli
inc
sbb
hlt
xchg
mov
lret
push
lds
rcl
adc
mov
ret
or
mov
test
movsb
sub
fcmovb
jp
fbstp
data16
and
or
pop
addr16
sbb
mov
ficompl
cmp
loopne
int
add
scas
sbb
mov
xchg
pop
mov
dec
fs
xor
push
sbb
pushf
pop
repnz
mov
in
negl
mov
pusha
xchg
fsubs
mov
sub
mov
aam
clc
xor
fdivrp
in
cmpsb
xchg
add
rcll
fidivl
mov
stos
movsb
stos
fbstp
xor
ficomps
push
repnz
sahf
push
cmpsb
sbb
sbb
shlb
stc
add
adc
pop
popa
mov
int3
jge
add
fimull
fsubp
dec
imulb
push
xlat
dec
sbb
xchg
dec
mov
rcrb
jge
vxorps
insb
aaa
cwtd
pop
mov
insb
aad
cs
sahf
rorl
or
inc
sbbl
and
daa
sbb
xor
lcall
inc
repz
pop
jne
movsb
push
sti
push
out
les
ret
decb
and
addl
push
pop
aam
and
les
adc
lods
sub
lcall
mov
push
xchg
mov
mov
mov
adc
and
packssdw
push
jno
shrl
push
lcall
out
or
loopne
fsubp
xor
fbld
dec
orb
aad
sbb
and
cmc
clc
add
dec
and
lds
mov
or
or
icebp
sub
pop
arpl
imul
in
jge
test
add
push
leave
sahf
sarb
mov
int3
cmp
scas
test
inc
outsl
push
movsb
mov
cmp
sbb
jo
aas
cmc
push
sbb
xchg
push
dec
mov
cld
popf
das
and
xchg
test
xor
gs
cmpsl
jbe
aaa
push
push
cmp
adc
and
inc
leave
jne
pushf
sbb
mov
cltd
lock
dec
repz
mov
scas
push
sbb
sub
sbb
pop
shlb
arpl
xor
dec
and
sub
clc
mov
dec
lea
pop
in
mov
mov
push
cmpl
mov
out
and
fdivs
rorb
xchg
loope
sbb
in
lds
int
mov
cs
das
loop
subb
sahf
enterw
push
stos
cmp
push
pop
sbb
pop
push
jnp
arpl
mov
aaa
int
jne
cmp
data16
seta
out
fcoms
cmc
mov
cld
jl
cltd
lds
xchg
outsb
mov
inc
movsb
nop
enter
xchg
in
mov
xor
xchg
sbb
push
adc
outsb
sub
dec
pop
out
pop
sub
inc
outsb
jg
push
xchg
inc
cmp
pop
cs
add
fsqrt
cmpsl
or
sub
in
sub
fldl
cli
xor
out
sbb
mov
stc
inc
inc
mov
jns
pop
pop
out
jbe
cmpsl
cmpsl
addr16
fsubr
push
or
fucomi
or
push
idiv
or
adc
stos
sub
push
push
xor
mov
xor
and
push
sub
cld
or
inc
cmp
sub
repnz
les
add
enter
in
and
inc
mov
sti
fcmovne
in
shrb
xchg
cmc
rol
int3
orl
sub
xchg
adc
jns
xor
mov
push
mov
lods
pop
lahf
je
mov
pop
stc
daa
xor
icebp
or
aas
xchg
adc
mov
sub
push
leave
mov
jmp
rorl
rclb
fiadds
or
xor
pmaxsw
mov
jle
mov
testl
lods
mov
repnz
filds
push
mov
icebp
jne
xchg
je
dec
adc
into
sub
jle
out
xchg
add
mov
out
sti
daa
lods
popf
jmp
ret
ds
sub
or
jecxz
cmp
cmpsb
movsl
hlt
xchg
in
loope
push
and
or
or
aaa
mov
xlat
mov
cmc
sub
cmp
insb
cltd
lahf
je
je
lea
sbb
jmp
lods
es
leave
cmp
jl
xor
sub
hlt
cmc
sbb
and
outsb
cmp
xchg
and
jle
stc
and
xor
inc
push
shlb
filds
jae
jmp
xor
mov
jmp
ljmp
insb
rol
lods
sub
sub
jne
lret
mov
test
mov
mov
jae
mov
sub
push
lods
out
popa
xchg
jmp
dec
enter
cli
jle
fimuls
loope
dec
sbb
in
cwtl
in
pusha
mov
jle
xchg
jl
rclb
fndisi(8087
lds
add
mov
lcall
aaa
in
mov
pushf
fcmovbe
leave
cltd
mov
lea
into
push
in
jns
insb
sub
test
push
cmp
and
test
rcrb
dec
test
sub
test
or
jecxz
pop
fstpt
adcb
xchg
push
fdivrp
push
jg
xchg
dec
inc
push
pop
mov
loope
scas
and
or
lods
add
imul
stc
int3
lods
jnp
les
and
out
push
test
xor
int
fidivl
mov
adc
push
push
sub
dec
adc
inc
aam
push
cs
gs
xor
vpmaxsw
mov
xor
pop
ss
lods
mov
fnstenv
xchg
jo
mov
or
cmp
pop
mov
jle
mov
dec
push
pop
jb
frstor
pop
jmp
pop
arpl
mov
sub
or
and
test
roll
outsb
inc
popf
ds
adc
dec
jle
stc
inc
adc
add
and
int
shlb
aas
int3
adc
sub
mov
in
lret
mov
popf
sub
push
push
mov
mov
push
ja
or
sub
push
mov
imul
add
adc
inc
pusha
add
popf
sarb
das
bound
dec
aaa
xchg
into
xchg
pop
cmc
jb
movsb
mov
loope
cmp
in
gs
mov
push
and
pop
jge
roll
clc
lea
lods
mov
dec
inc
loop
adcb
jecxz
mov
shlb
pop
jg
test
jns
rcrl
ss
inc
sub
xor
cmpb
cmp
hlt
add
pop
add
mov
inc
jle
jno
cmpsl
xchg
out
cmpsb
cmp
push
fdiv
outsb
mov
push
dec
lret
xor
fwait
test
lds
lahf
movsl
cmp
aas
popf
xchg
xchg
scas
push
sbb
adc
jae
push
mov
adc
insl
and
outsb
aaa
testl
inc
push
sub
scas
imul
cmp
jae
add
out
outsl
rep
push
inc
ret
cltd
adc
dec
sbb
imul
cmp
ror
insl
mov
jecxz
sbb
xor
fsubr
js
test
call
fld
insl
push
dec
fldcw
push
test
adc
pushf
test
inc
mov
hlt
xor
pop
flds
jbe
test
jnp
mov
lods
add
leave
iret
jl
insl
adc
les
enter
pop
and
fdivrl
or
movsb
pushf
push
sti
outsb
cmp
pop
sti
mov
xchg
sub
adc
pop
xchg
pop
dec
loopne
aaa
sar
movsl
stc
stos
or
shrb
fs
sbb
xchg
mov
mov
mov
sub
inc
lds
loopne
movsl
fs
push
int
xor
idivb
adc
xchg
arpl
jo
dec
mov
mov
xchg
push
add
add
push
outsb
ret
ss
aam
aas
xor
clc
repnz
pop
scas
imul
das
je
je
jae
outsl
int
pop
inc
push
movsb
cli
mov
sbb
xor
out
adc
imul
push
push
mov
std
ret
inc
cmp
jle
cmp
mov
addr16
mov
xchg
and
mov
mov
aam
sbb
jle
xchg
jns
xchg
adc
sbb
sbb
pop
mov
add
sbb
loop
lcall
jmp
scas
mov
movb
out
jle
daa
mov
sbb
out
sbb
ja
imul
es
pop
adc
ss
mov
std
scas
lea
and
push
mov
test
fisttpll
stos
out
and
fstl
xchg
scas
jbe
xchg
in
pop
pusha
into
lcall
push
lahf
iret
jo
push
mov
push
and
push
inc
and
rorb
add
lea
repz
pusha
inc
jg
jmp
jl
sarl
push
mov
cmp
ss
mov
out
xchg
push
aas
sbbb
sub
inc
sbb
lock
enter
mov
ss
jbe
stos
sbb
cmp
ret
clc
add
dec
popf
mov
leave
pop
sub
sub
pop
pop
dec
sub
aas
leave
stos
push
push
mov
push
pop
lcall
inc
add
rcrl
loope,pt
mov
in
mov
pop
pushw
cld
in
inc
push
mov
push
lods
bnd
ss
loop
add
add
mov
mov
adc
fs
sar
sub
cmpl
jno
lods
xor
inc
push
cld
enter
popa
sbb
stc
data16
testl
mov
shl
adc
outsb
outsb
jno
in
rcl
mov
xchg
nop
ret
cmp
out
add
outsb
hlt
clc
or
pop
jmp
leave
mov
iret
or
shlb
mov
inc
out
inc
test
cmpsl
or
adc
sbb
mov
scas
sub
call
push
add
inc
cmc
push
sub
mov
repnz
xchg
scas
ljmp
fucomip
sqrtps
mov
mov
push
jns
cli
pop
js
dec
push
popl
and
add
push
je
sbbl
aad
push
out
pop
mov
xchg
jmp
inc
xchg
shrb
cmp
cmp
mov
faddp
loopne
adc
int3
clc
testb
outsl
cmp
dec
add
mov
mov
jle
mov
xor
lods
xor
in
xor
cmp
or
test
out
add
mov
sbb
sbb
push
xor
add
cmp
mov
inc
in
mov
lcall
jge
in
cltd
stos
fcomip
mov
sbb
lcall
subb
jbe
test
and
sar
in
sbb
mov
or
pop
mov
sbb
cmp
mov
jno
cli
ret
pop
ficoms
cld
or
pop
cmp
push
outsb
js
xchg
rolb
lcall
jo
enter
cmp
sbb
jl
push
movsl
into
rcrb
or
or
xor
xchg
lods
jmp
out
test
pop
or
je
xor
dec
xchg
push
out
mov
dec
xor
sbb
daa
fidivrl
inc
xchg
arpl
gs
enter
sub
sub
int3
mov
pop
mov
pop
cs
shll
dec
outsb
xchg
xor
push
cli
mov
cld
lcall
push
and
mov
push
mov
popf
test
cmc
pop
xchg
push
movl
popa
divl
divb
std
movsl
stos
sar
add
inc
insb
mov
mov
shr
mov
in
clc
mov
xchg
push
mov
mov
pushf
push
push
lret
sahf
jb
test
or
xor
lods
push
xchg
mulb
std
pop
push
jne
jo
test
ljmp
cmp
pop
jg
jns
mov
mov
mov
insl
mov
cwtl
sub
cmc
in
stos
mov
movsl
pop
mov
test
outsl
iret
inc
push
pop
inc
mov
ret
in
xchg
xlat
jnp
mov
sar
or
and
adc
int3
mov
into
inc
adc
dec
add
stc
scas
push
in
mov
sub
aas
sbb
jns
push
xchg
xchg
jg
adc
jle
mov
cmp
push
inc
mov
jne
je
add
mov
pop
cwtl
add
adc
dec
inc
das
movsl
or
and
and
jns
lcall
call
stc
mov
or
pop
add
out
mov
and
dec
jl
add
in
cmp
daa
sbb
out
cwtl
pop
push
ud1
ds
pop
test
and
adc
mov
pusha
psraw
nop
sbb
sbbb
cs
inc
add
cmp
arpl
call
pop
lods
or
push
jl
outsl
push
or
insb
cmp
jg
ss
inc
lret
ret
xor
mov
mov
icebp
xor
inc
cs
add
xchg
sbbb
sbb
nop
sahf
jnp
and
push
hlt
pop
rcll
jle
xor
int3
cmp
xor
inc
xchg
mov
or
shl
mov
push
mov
xchg
lret
or
into
cmpsb
or
cmp
xor
or
xchg
fidivrl
and
mov
lds
cli
cmp
lahf
xchg
xor
das
enter
in
add
and
add
jg
in
lahf
mov
rorb
in
adc
cmp
jmp
shrl
repz
sbb
daa
mov
call
mov
jmp
stc
ljmp
cli
and
xchg
sbb
imul
aam
mov
jo
jbe
outsb
or
das
adc
cmp
insl
dec
sub
mov
cwtl
add
xor
sbbb
adc
push
cmp
or
arpl
mov
test
jo
mov
pop
sbb
in
mov
cmc
dec
repz
in
or
or
rcl
ljmp
push
and
testl
jo
cmpsb
andb
push
cltd
xor
movsb
cmpsl
add
lock
nop
in
or
loope
adc
ja
dec
sub
sub
xchg
clc
stc
jmp
mov
adc
adc
push
lahf
adc
das
std
sbb
mov
lea
sub
mov
pusha
lret
int3
sub
push
bound
push
cwtl
pop
aaa
and
in
mov
stos
xchg
xor
jecxz
dec
daa
addr16
pop
inc
dec
cld
ret
cmp
pop
decb
mov
mov
inc
push
sbb
xor
inc
jmp
dec
xor
pop
fs
pop
stos
jbe
aas
movsb
test
add
cmp
addr16
sub
pop
into
mov
or
sub
jl
test
xchg
cmp
xor
push
mov
insl
jge
xchg
mov
mov
repz
lods
daa
int
mov
es
cmc
mov
int
scas
push
fisubs
push
mov
add
xchg
movsb
mov
pop
bound
lret
sbb
dec
jbe
test
pop
scas
adc
xchg
lock
movb
jno
xor
jp
sub
add
or
adc
es
pop
arpl
jg
add
sbb
mov
mov
add
cmp
in
or
push
cmp
loop
and
sub
fld
lds
sub
or
sbb
inc
iret
fimuls
sarl
mov
mov
mov
jbe
mov
pushf
mov
jno
iret
adc
imul
aas
lret
ret
jae
or
stos
xchg
add
sbb
add
sub
jmp
dec
xchg
enter
popa
mov
or
addl
push
jae
mov
adc
stos
shrl
fs
in
push
js
and
sbb
add
dec
das
sub
mov
xchg
das
cmp
jmp
cmp
mov
sbb
pop
jp
sub
fildl
imul
sub
sub
or
xor
lods
inc
add
inc
addr16
lcall
mov
push
push
scas
jecxz
add
sahf
xchg
sbb
xchg
lock
ss
push
sarb
xchg
insl
out
hlt
lret
xor
int
test
add
shrb
sbb
mov
leave
inc
mov
sahf
pusha
sbb
xor
xlat
lock
or
fs
sbb
or
cmpb
push
cmp
xorl
cltd
lret
add
adc
pushl
or
shll
fildll
notb
shrb
push
mov
push
pusha
sub
sbb
ret
dec
imul
int3
lods
adc
mov
or
repz
ds
and
fsubs
fisttpll
in
iret
cmp
mov
jge
push
out
aaa
iret
pop
sub
dec
sub
and
popf
cmpsl
add
add
xchg
xchg
setns
pop
cmp
sbb
xchg
sbb
outsb
stos
loop
pop
cmp
fmuls
xchg
test
xor
clc
ret
pushf
js
add
xchg
dec
leave
scas
xor
aam
inc
xchg
cmpsb
inc
pop
imul
leave
inc
bound
add
jno
and
sub
std
ror
jb
and
inc
jecxz
test
fs
push
in
sbb
sbb
jmp
sbb
push
rcll
lds
fcoms
enter
mov
adc
je
inc
push
and
inc
sahf
fsubrp
scas
hlt
cs
test
jge
sbb
loop
xor
cltd
movsl
js
push
xor
faddp
mov
je
je
pop
mov
js
sbb
xor
mov
addb
sbb
shll
mov
cmp
into
mov
sub
ds
data16
jb
jl
test
inc
fdivrl
sbb
dec
xchg
int3
jne
mov
fldenv
jne
sahf
shll
jl
push
mov
jae
jnp
andl
push
dec
push
push
jno
shll
cltd
mov
insb
and
adc
imul
and
test
push
stos
mov
icebp
jp
sbb
fldcw
mov
test
adc
ss
adc
call
repnz
es
imul
stos
jg
and
data16
mov
movb
fdivs
test
or
out
loop
mov
in
pop
shlb
test
test
clc
dec
pop
lds
or
push
pop
leave
scas
ja
sbb
test
fnstenv
xlat
push
cmc
mov
jae
mov
or
xchg
add
pusha
mov
call
sub
or
sub
xorl
inc
pop
aam
call
icebp
repnz
addr16
mov
mov
bound
push
imul
inc
fistps
cmpsl
push
cmp
pop
sub
xor
cltd
cmp
jl
std
or
test
aam
mov
jecxz
shlb
mov
add
shrb
pop
out
dec
pop
and
inc
xchg
mov
fwait
mov
or
and
add
add
mov
out
adc
shll
sbbl
imul
popl
pop
add
mov
mov
xchg
dec
std
iret
lds
or
mov
iret
add
adc
lret
inc
aad
adc
test
jae
and
add
sbb
jnp
dec
in
xor
mov
pop
loopne
inc
adc
es
into
adc
adc
je
pop
sbb
adc
mov
inc
push
push
stos
cwtl
and
sbb
loope
sbbl
enter
lds
sbb
popa
adc
pop
lahf
sbb
mov
in
stos
and
push
lods
push
mov
outsb
pushf
pop
dec
orl
in
jbe
mov
pop
jne
mov
dec
fildl
fs
aad
jg
mov
dec
leave
test
insl
sub
and
adc
mov
and
fisubrs
iret
pushf
rcl
cmp
out
cmp
adc
mov
mov
pop
mov
call
test
cmp
fcompl
add
stc
test
cli
test
push
and
icebp
mov
arpl
lcall
jl
inc
add
fldenv
sub
cmp
imul
mov
negb
xchg
int3
xlat
sbb
inc
sbb
or
enter
dec
pop
mov
fwait
xor
pop
pop
pop
inc
jmp
filds
imul
movsb
pop
out
sub
jge
pop
jmp
test
push
push
cmp
in
dec
pop
sub
push
jne
sti
add
pop
pop
push
pop
nop
cld
jo
stos
push
stc
adc
mov
xor
sub
dec
pop
dec
fucom
out
adc
ret
shrl
test
xor
pop
pop
push
push
fwait
sub
sarl
nop
sub
aas
mov
mov
mov
pop
xchg
lcall
or
leave
outsb
jge
js
int3
cmp
pop
outsl
pusha
sub
in
or
mov
aad
std
and
inc
testl
imul
cmp
stos
daa
lcall
jb
cmpl
jle
gs
add
jl
mov
movsl
xchg
fdivrl
pushf
or
daa
mov
xchg
push
imul
mov
xor
mov
pushf
repnz
dec
mov
orb
rcr
nop
dec
push
ret
lods
fnsave
and
pop
out
std
in
mov
cmp
sub
ret
push
add
push
xchg
or
and
mov
fs
jns
std
repnz
pushf
leave
sbb
aaa
mov
jb
repnz
test
xchg
mov
mov
scas
and
mov
cld
cmp
fisttpl
cmpsb
je
lcall
adc
xor
mov
out
push
jno
loopne
out
xchg
out
popa
popa
pop
ds
inc
dec
cmp
mov
loop
lods
in
add
mov
push
shrb
and
push
sub
pop
and
xor
cmp
movsl
sub
mull
icebp
mov
stos
jo
mov
mov
dec
xchg
mov
outsl
push
imul
xor
std
scas
xchg
and
addb
mov
dec
dec
scas
mov
or
leave
jmp
jo
lods
mov
test
pand
mov
idivl
sbb
mov
aam
jecxz
int3
shlb
outsb
shrb
inc
push
stos
sbb
dec
push
icebp
icebp
enter
sbb
fstl
and
cwtl
pop
ljmp
mov
dec
jg
mov
in
lods
sbb
jnp
xchg
scas
shr
xchg
std
sbb
pop
mov
jne
aam
xor
push
pop
lods
adc
cmp
cltd
and
inc
cli
ret
fisubl
xor
lock
sub
fwait
notl
inc
insl
pop
aad
dec
test
in
mov
mov
movsb
and
in
and
sbbl
scas
mov
xor
out
test
mov
ja
flds
test
sbb
dec
mov
mov
dec
xchg
lret
sub
add
lcall
ret
xlat
pop
lds
mov
xor
mov
or
lret
int
lret
outsb
addr16
pop
cmpl
add
push
pop
push
arpl
cs
movsb
sahf
push
lods
jmp
mov
lods
stc
mov
repnz
cmpsb
scas
ficompl
push
div
xor
inc
push
out
pop
daa
mov
mov
repz
pop
lret
push
push
xchg
pop
push
dec
or
xchg
mov
movl
std
xchg
js
add
dec
cmpb
je
xchg
cs
loopne
and
shl
out
sbb
pop
jbe
subb
nop
mov
add
lea
jmp
inc
les
mov
push
push
add
jnp
jge
into
add
ret
fsubs
add
clc
inc
rol
push
arpl
xorl
mov
mul
aad
inc
dec
outsl
les
push
inc
pop
push
test
sub
xchg
pop
ret
add
mov
dec
rcrl
xchg
lea
dec
stos
fdivrl
mov
cld
repnz
clc
add
orb
add
xchg
adc
iret
scas
jle
cmp
jne
mov
pop
mov
lcall
imul
cwtl
int
lock
arpl
lcall
adc
scas
and
mov
out
xchg
cmp
fimuls
lock
and
push
push
cmp
jp
inc
pop
pop
ss
jmp
scas
inc
mov
cltd
icebp
push
pop
cmp
decl
jecxz
add
cmp
xchg
stos
rcrb
ret
push
jecxz
push
mov
test
test
sbb
cmc
stos
sbb
js
jle
rcl
popa
mov
test
hlt
or
adc
add
adc
data16
sub
adc
cs
dec
aad
push
mov
or
scas
pop
cli
imul
popf
gs
adc
xchg
sub
lock
and
inc
fs
pop
repz
insb
cli
or
nop
aaa
sbb
fisubrs
daa
mov
outsb
jno
add
adc
push
xchg
inc
lea
mov
jnp
jge
pop
in
fmuls
int
ret
pop
clc
imulb
lret
jmp
sub
add
out
je
jno
je
fwait
mov
imul
adc
mov
out
adc
insb
ds
dec
adc
cwtl
cmc
ret
lcall
xchg
add
add
sub
add
mov
scas
loope
shlb
mov
fiaddl
add
ds
popf
xor
push
jp
enter
addr16
clc
push
jge
push
mov
aas
das
or
fsubp
push
ds
pop
orl
xchg
or
add
fildl
nop
fwait
sbb
xor
cmpsl
jle
jnp
fcmovu
testb
or
jmp
xor
imul
popf
stos
out
aaa
and
pop
pop
into
jns
sbb
sub
loopne
gs
lds
inc
inc
jle
cmpsl
pop
cmp
push
and
stos
clc
mov
mov
lahf
gs
jmp
dec
jp
jnp
mov
outsb
testl
mov
xchg
adc
mov
sbb
dec
adc
jne
jge
fmul
xor
mov
mov
inc
sub
pop
fmull
jbe
mov
cld
mov
imull
notb
mov
std
daa
dec
mov
ret
jno
xorb
testb
fsubl
mov
mov
add
enter
inc
adc
and
mov
ja
hlt
fstpl
mov
inc
mov
les
push
add
or
mov
mov
push
and
popl
rcr
sbb
and
xchg
addr16
sbb
and
mov
inc
fstps
add
jno
sbb
sbb
mov
cwtl
mov
icebp
sbbb
cmp
stos
mov
mov
les
adc
and
aam
jl
xor
dec
shl
dec
sub
jg
mov
inc
jle
xor
pop
cltd
sbb
dec
rcrb
sbb
pop
adc
sti
xorl
and
sub
pop
imul
cmpl
cmp
or
pop
sub
shrb
loop
imul
xchg
imul
gs
pop
in
dec
fiadds
jge
outsl
repnz
in
mov
mov
stos
lea
or
pop
mov
nop
xchg
lahf
idivl
sub
inc
push
popa
pop
inc
test
rol
stos
xor
and
inc
inc
push
xchg
inc
adc
repnz
sbb
push
cmc
jle
sbb
ds
repz
std
inc
movsb
mov
clc
lret
sub
inc
sub
movsb
add
test
mov
insl
mov
outsl
mov
lods
sbb
cmp
aas
xor
cmp
cli
lods
dec
cmp
sub
add
add
cmc
mov
inc
pop
mov
iret
mov
push
mov
sbb
jo
cmp
cli
lock
es
out
pop
getsec
hlt
fisttps
repnz
es
in
adc
in
mov
or
or
in
mov
sub
orb
cmp
jmp
cwtl
sub
jno
inc
lods
sbb
repnz
pop
mov
xor
push
je
mov
popf
cwtl
jo
inc
dec
jle
add
xchg
push
jecxz
jae
cmpsb
popf
sbb
mov
lods
imul
adc
xchg
test
insl
xor
pop
xchg
mov
pushw
das
or
dec
sub
scas
mov
gs
inc
fwait
ljmp
push
ficoml
addr16
lods
mov
cmp
xchg
xchg
push
xchg
test
mov
cmp
repz
and
lcall
sarl
push
jbe
fbld
sub
ss
xor
pop
lea
xchg
loopne
imul
mov
sbb
daa
pop
das
data16
push
cltd
adc
pusha
or
mov
jle
lock
cmp
push
popf
je
int3
leave
cmpsl
xor
addb
inc
pop
ret
inc
push
out
loop
orb
and
icebp
inc
int
loopne
adc
add
in
xchg
jns
jge
decb
lahf
push
negb
mov
add
inc
inc
imul
icebp
or
sub
enter
cmpb
xchg
mov
inc
out
in
pop
inc
add
push
ss
idivl
data16
push
jo
pop
push
push
push
adc
icebp
mov
test
popa
dec
push
sbb
cmp
in
pop
imul
in
sbb
sub
inc
fldl
mov
adc
cld
ljmp
flds
movsl
addb
inc
hlt
pop
sti
xchg
add
lcall
mov
inc
or
mov
cltd
in
add
xor
sub
lret
lock
idivl
enter
inc
jne
imul
push
mov
add
dec
dec
inc
into
dec
out
in
xchg
push
mov
jl
icebp
xchg
pop
jle
in
sbb
test
scas
scas
inc
add
sub
lock
aad
stos
or
or
jnp
stos
dec
cmc
xchg
jne
data16
mov
xchg
mov
add
mov
push
jmp
xor
pop
push
push
sub
mov
add
sub
int3
or
out
push
bound
das
faddl
fmulp
lret
mov
rcrl
mov
test
mov
std
loope
dec
add
repz
and
xchg
xor
mov
cmp
dec
in
inc
push
mov
mov
mov
sahf
pop
lds
mov
xchg
call
adc
adc
ljmp
jbe
inc
cmp
mov
push
pop
cmp
or
icebp
fstps
pop
sbb
gs
lret
sahf
mov
cs
jl
aas
jns
clc
add
mov
inc
daa
xor
adc
mov
add
add
icebp
pop
or
movsb
adc
and
hlt
je
lcall
dec
add
fisttps
leave
ja
in
out
xor
idivb
mov
cmp
mov
pop
test
mov
in
in
mov
jae
jle
lret
or
cmp
cmp
stos
adc
or
sarl
mov
dec
js
inc
push
xchg
cmp
sbb
sahf
daa
mov
test
push
outsl
add
mov
cld
out
xor
jb
sbb
lahf
mov
xor
or
push
cmpsl
rorl
push
mov
test
push
mulb
outsl
add
lock
dec
xchg
xor
inc
push
xchg
stos
outsl
lock
lock
rclb
jno
int
inc
sbb
pop
jmp
mov
pop
iret
xor
and
pop
xorps
inc
mov
xchg
outsl
iret
pop
adc
mov
mov
fdivr
rorl
sub
inc
sbb
pop
push
mov
icebp
adc
ret
mov
jnp
xor
mov
fwait
inc
and
and
jb
pop
jae
add
js
add
lods
les
addb
mov
mov
inc
inc
stos
shl
xchg
in
loop
shlb
xor
mov
or
repz
add
jb
mov
pop
popa
out
lods
adc
adc
sub
cmp
and
push
sbb
pop
clc
mov
sbb
and
lds
sbb
in
xchg
stc
decb
add
test
enter
mov
jb
clc
and
mov
adc
fucom
es
mov
add
gs
jmp
insb
test
and
cmp
or
push
cmpl
and
imul
push
pop
leave
mov
push
mov
repz
daa
sbb
out
adcl
mov
or
loop
mov
imul
jne
cmc
lds
lea
and
das
rcrb
mov
into
xchg
repz
into
repnz
fcmovnb
cmp
jo
mov
xchg
add
inc
loope
dec
sub
or
mov
outsl
std
mov
jno
das
xchg
xchg
lea
inc
iret
hlt
pop
sub
std
inc
addl
jb
and
in
iret
aad
dec
inc
push
lock
mov
sahf
dec
bound
xchg
jns
aas
mov
movsl
adc
mov
mov
dec
xchg
aaa
lds
pushf
movsl
push
loopne
fildl
insl
xlat
mov
xchg
lods
push
mov
aaa
test
cld
mov
jp
mov
shlb
pop
dec
push
lea
mov
outsl
mov
daa
fdivrl
int3
xor
mov
sub
push
and
mov
sbbl
les
repnz
loope
divb
jmp
xchg
or
push
in
push
es
lcall
add
das
adc
dec
sbb
push
xlat
or
add
dec
lods
ret
inc
pop
jmp
movsb
sub
and
xchg
lret
xchg
ss
daa
dec
jmp
test
js
out
nop
mov
xor
mov
pop
fists
mov
fnstcw
ret
loopne
mov
xchg
idiv
mov
cli
sub
inc
pop
roll
mov
ret
jl
add
lret
repnz
into
out
sbb
jecxz
lods
pusha
jle
push
mov
test
jmp
adc
ficompl
arpl
fs
data16
lret
mov
in
mov
push
lcall
mov
push
gs
pop
stc
rcrb
int
adc
xlat
ss
mov
into
bound
fldl
inc
adc
mov
or
mov
jbe
inc
aas
es
mov
fstp
cmp
sbb
mov
inc
jnp
xchg
cmp
sti
cmp
inc
and
sub
pop
ss
push
inc
xlat
out
push
jo
rorl
push
pop
add
pusha
add
cmp
ljmp
mov
call
dec
in
mov
pop
pop
adc
ret
repnz
std
pop
cmpsb
jno
cmp
and
int3
pop
inc
pushf
pop
outsl
pmullw
mulb
daa
pop
push
push
les
mov
adc
or
sbb
mov
or
ds
shr
je
lret
dec
mov
loope
dec
cld
sbb
pop
addb
mov
push
xchg
lods
pop
mov
adc
je
insb
mov
jmp
and
ja
add
stos
cwtl
jle
and
lods
mov
imul
enter
in
dec
lahf
int3
adc
in
xchg
fwait
les
fidivl
xor
cmp
loopne
pop
jbe
cmp
cmp
mov
adc
pop
cli
loope,pt
fwait
lahf
push
adc
xchg
push
icebp
and
xabort
mov
outsb
test
mov
mov
das
stos
dec
je
mov
adcl
mov
cld
cmpb
insl
mov
dec
ja
lahf
outsb
mov
int3
pop
outsb
inc
lret
jl
push
aas
adc
in
iret
pop
push
cmp
add
cmpsb
outsb
push
mov
bound
push
push
test
popf
adc
pop
push
cmpsb
repz
lock
pop
dec
pop
sti
dec
dec
call
push
loop
xor
aas
test
push
mov
add
aaa
outsl
add
fs
shrb
pusha
aam
mov
test
dec
fwait
xor
xchg
imul
adc
imulb
push
inc
gs
and
pop
addb
jb
stos
jmp
je
lret
mov
int
mov
ja
mov
dec
lds
in
dec
lods
outsb
adc
data16
mov
mov
std
scas
ss
daa
jbe
les
outsb
inc
cmp
or
ret
lods
and
iret
loope
xlat
ret
mov
cmpsl
jne
cmp
lods
jl
and
or
or
out
mov
aas
xchg
and
mov
out
mov
dec
in
xor
pop
scas
pop
mov
jp
test
pop
cs
popf
es
test
faddl
loope
mov
xchg
fnop
inc
in
mov
cmp
fiadds
dec
or
mov
mov
pusha
mov
outsb
leave
jnp
jle
xor
sub
mov
in
jecxz
sahf
push
ja
sbb
jns
mov
mov
push
pop
inc
rclb
cld
xor
fldt
fidivrl
out
fwait
ja
loopne
repz
mov
dec
std
ss
out
in
imul
lock
sub
push
mov
repnz
popf
push
mov
jae
enter
or
push
dec
sbb
loop
dec
lea
insl
popa
mov
nop
data16
movsb
cltd
sbb
inc
inc
rcr
shll
js
aas
loopne
call
sbb
jmp
xor
push
pushf
dec
js
repz
inc
in
arpl
mov
push
xor
jbe
lods
jae
bound
sbb
mulb
xchg
imul
mov
jmp
rorl
push
movsb
cmp
in
leave
pop
nop
cli
adc
rorb
add
stc
imul
cmp
out
inc
and
out
lods
mov
inc
cwtl
lret
insb
leave
fcmovnbe
test
adc
out
or
lcall
or
loop
jecxz
pushf
jo
std
out
xchg
out
xchg
xor
stc
subb
lcall
jnp
rolb
negl
xchg
xor
inc
push
sbb
frstor
stos
inc
push
sub
enter
pop
push
insl
das
les
sahf
push
into
mov
inc
push
add
dec
jo
jg
xor
test
sbb
mov
je
mov
std
xchg
int3
mov
xchg
jno
mov
aas
insl
lods
in
lea
xchg
mov
js
inc
mov
out
lock
or
inc
pusha
rorb
pushf
stos
shrb
test
mov
push
in
jecxz
cmp
sub
imul
sub
dec
imul
adc
cltd
test
mov
cmpsl
les
xchg
push
incl
cmc
dec
je
adc
ret
xor
jecxz
sbb
pop
push
xor
out
and
fmuls
ss
mov
xor
xor
xor
inc
mov
sahf
cmp
in
outsb
cmpb
ss
pop
jl
cs
addr16
sbb
test
rcrl
jae
xchg
mov
mov
cmp
cs
jnp
shlb
and
cmp
dec
lret
fisubl
stos
jmp
cmp
add
or
outsb
repz
pop
mov
test
add
sti
mov
pop
and
add
popf
sarb
mov
adc
cmc
call
loop
xor
cmp
sub
mov
mov
push
push
ljmp
jae
les
mov
adc
int3
mov
repz
lcall
fadds
inc
xor
into
pop
xchg
and
rclb
mov
xor
lret
into
das
inc
data16
xchg
fdivl
pop
xchg
cmc
xor
iret
test
mov
arpl
xor
dec
mov
das
pop
push
pop
add
sti
pusha
imul
xchg
cmp
and
pop
mov
dec
enter
jbe
mov
dec
in
xchg
ja,pt
mov
xchg
add
aam
fbstp
cmp
jle
xor
push
sbb
xchg
push
fcmovnb
lcall
jg
into
insl
jo
test
sub
scas
neg
ss
xchg
cmp
imul
ffree
inc
add
shl
mov
sub
lods
inc
cmpsl
addl
inc
movsl
xchg
inc
vmread
decl
pop
or
mov
clc
sbb
lret
pop
push
lea
or
int
xchg
mov
lcall
mov
scas
mov
sub
push
mov
or
add
jg
out
lods
mov
int
int
xchg
jb
cs
and
jns
jno
sahf
pop
dec
fldcw
sub
jge
sbb
mov
adc
mov
or
pop
mov
push
gs
repnz
pop
jmp
rol
lds
scas
mov
or
in
sbb
push
loop
shl
dec
jmp
ljmp
add
add
push
push
mov
xchg
push
xor
or
dec
and
and
pop
and
in
pop
xor
pop
aas
aas
popf
repz
lock
cwtl
fistpll
mov
cli
xor
iret
insl
pusha
sbb
pop
loop
fdivrp
shrl
xchg
in
mov
xor
mov
push
jmp
stos
pop
repnz
mov
aaa
pop
mov
mov
xchg
repz
push
add
cmp
idivb
xor
inc
daa
xchg
sbb
or
cltd
jle
outsb
sub
xchg
in
mov
cmpsb
popf
inc
mov
fildll
xor
hlt
out
pushf
enter
jle
and
test
lea
mov
pop
es
mov
cmpsb
or
clc
mov
out
dec
shrl
out
fisttpll
fiaddl
add
adc
dec
out
dec
mov
mov
in
cwtl
lahf
fists
and
ret
mov
test
push
push
jp
scas
add
or
icebp
jns
mov
inc
add
add
and
es
rcrl
pop
adc
aam
inc
inc
mov
mov
mov
sbb
outsl
jnp,pt
fsts
call
enter
xchg
in
sbb
call
push
je
jmp
repz
lret
inc
mov
bound
push
sbb
jmp
mov
out
mov
mov
out
mov
add
xchg
mov
lock
or
out
js
xchg
aam
xor
gs
cmp
xor
jg
cmp
add
pusha
cmp
inc
sbb
xchg
cmc
aam
fcompl
mov
jle
mov
sub
imul
jno
push
sbb
in
or
dec
clc
aam
fcomip
sub
dec
or
aaa
sbb
fidivl
mov
mov
pop
sub
jb
mov
in
and
stos
lea
gs
pop
lcall
sbb
insl
add
push
add
test
out
jbe
cmp
shll
jns
add
or
inc
mov
jae
das
or
test
jb
add
or
mov
test
cltd
fsubs
imul
dec
gs
data16
mov
jl
adc
in
repnz
aaa
mov
lock
jge
fnstsw
sub
or
xor
push
jbe
cmc
inc
push
out
ss
fildl
das
aam
ja
sbb
cmpsl
jmp
mov
pop
in
test
jge
xor
in
xchg
lret
sub
imul
divb
adc
add
imul
xchg
movsb
enter
push
or
push
or
cmp
jmp
mov
dec
mov
mov
fisubrl
mov
inc
dec
mov
loop
and
test
mov
imul
aad
lods
or
mov
add
out
push
shrl
xor
shrb
xchg
aaa
loopne
xchg
ret
push
xor
inc
jno
scas
adc
fdivrs
mov
dec
jo
xchg
rolb
xchg
pop
lahf
je
aam
mov
mov
xchg
cmpsl
mov
repz
jb
xchg
inc
jo
cltd
sbb
adc
cmpsb
mov
inc
add
repnz
or
ret
in
out
dec
loope
lods
adc
imul
mov
sub
sbb
sub
jg
mov
pushf
add
leave
sbb
dec
es
sti
add
ljmp
movsl
mov
adc
rorb
insb
cmp
push
fdivrs
mov
fs
pusha
xor
jmp
push
std
adc
comiss
push
cmc
fldenv
lret
dec
mov
mov
lock
mov
cmp
mov
fdivs
ljmp
sub
add
mov
mov
pop
sbbl
pop
pop
stc
cltd
out
xor
not
jnp
cmpsb
mov
cltd
das
jle
lea
nop
pop
in
push
cmp
ret
stc
mov
iret
dec
movntps
ret
iret
pop
adc
add
and
xor
push
or
and
enter
xorb
test
sub
push
outsl
and
ret
xchg
mov
mov
int
aas
adcb
std
sbb
movsb
lret
test
ljmp
imul
leave
add
pop
jnp
loopne
inc
inc
stc
sub
loop
mov
test
and
std
dec
cs
loopne
lods
cmp
test
aad
ja
sbb
mov
lods
ljmp
dec
scas
loope
fidivrl
lahf
and
addr16
jno
pop
xchg
sub
xor
repz
mov
orl
jl
pop
pop
lret
mov
xchg
mov
add
mov
clc
insb
aas
test
out
mov
fwait
sbb
mov
mov
dec
xor
nop
jae
movsb
xchg
push
andl
lods
cmp
mov
push
fs
adc
adc
or
and
inc
cwtl
mov
mov
xor
mov
push
inc
sbb
leave
imul
lahf
lahf
push
jbe
cwtl
and
shlb
mov
stc
cmp
add
or
test
fisttpll
and
lock
lock
push
bound
and
mov
loope
std
fmul
lock
sbb
mov
pusha
add
rorb
sbb
and
sbb
push
sbb
mov
inc
or
iret
jne
test
into
test
jae
mov
or
inc
in
scas
rolb
xchg
cs
sbb
cmp
dec
xchg
pop
jae
mov
pushf
adc
mov
push
jg
movsb
cmp
clc
mov
push
out
in
and
push
mov
push
arpl
dec
jnp
fadd
and
addr16
or
cmpsb
imul
inc
mov
loopne
mov
push
dec
sti
ja
mov
and
cs
cmpsl
jns
data16
jmp
mov
pop
jle
add
out
xchg
add
push
jmp
inc
lret
repz
cltd
xor
cmpsb
or
cmp
and
imulb
jle
add
inc
push
cmpsl
sbb
mov
add
xor
lods
xchg
lret
test
nop
shrl
pop
pop
inc
jg
inc
adc
aad
movsl
jg
dec
dec
sub
adc
pop
lods
testl
fdivr
add
sub
mov
mov
adc
adc
jb
push
je
aaa
out
or
lea
xchg
xchg
inc
rcrb
test
jo
add
sbb
test
jb
cmp
into
lods
push
sub
add
xlat
outsl
mov
test
pop
cmp
add
cmc
cli
sbb
test
sbb
or
rcll
cltd
mov
daa
adc
fiadds
mov
pushf
icebp
ljmp
in
adc
test
movsl
jne
divb
xchg
mov
jbe
test
orb
sub
jge
scas
xor
lods
mov
push
jle
or
stos
mov
adc
mov
int
push
mov
adc
sahf
insb
cmp
cld
or
jge
aaa
lahf
push
cltd
and
mov
xchg
cmpsl
cwtl
add
clc
mov
shrb
dec
dec
rclb
mov
daa
mov
sbb
mov
jb
lods
nopl
dec
jecxz
dec
mov
jno
adc
push
adc
dec
mov
mov
xor
xacquire
mov
and
leave
in
insb
adc
repnz
lock
int3
pop
mov
dec
lret
mov
cli
xchg
repnz
into
add
cli
lret
repnz
aam
xchg
and
ds
out
xchg
cmpsl
jo
push
dec
sbb
add
xchg
or
pop
sti
or
xchg
scas
mov
sbb
sub
sub
xchg
aas
push
inc
out
add
testl
dec
adc
cmp
push
shrb
lcall
lods
fwait
mov
data16
das
iret
nop
mov
cmp
jnp
je
and
hlt
fistpl
lret
outsb
cmpsb
pop
aas
xor
icebp
das
dec
sbb
daa
test
in
push
jb
fdivr
fsubs
les
push
in
mov
outsb
and
psubsb
add
dec
cltd
iret
call
adc
mov
sub
fcoml
testb
push
in
pop
mov
shll
addr16
or
or
shll
lods
out
sbb
xor
enter
jns
stc
push
mov
lods
sub
dec
addr16
pop
iret
jecxz
jecxz
inc
xor
ja
mov
lcall
add
sahf
cmp
ret
cmovb
mov
cwtl
push
mov
imul
ljmp
mov
adc
pop
fimuls
mov
sbb
imul
jnp
adc
das
and
stos
push
cltd
cs
fdivrl
inc
ret
jo
clc
or
lcall
xchg
inc
mov
std
mov
rorb
lcall
dec
fnstenv
ss
push
or
cmp
sbb
inc
and
aaa
push
nop
mov
add
fsubs
jmp
inc
fsubrl
cmp
in
pop
adc
cmpsb
push
movsb
sub
repnz
cmpsb
dec
ret
push
pop
xlat
idivl
or
pop
pop
jp
sbb
add
loope
data16
nop
and
test
test
xor
dec
mov
aas
push
aad
mov
dec
test
sub
add
xchg
or
in
mov
fistl
adc
popf
cmp
aad
jb
and
or
and
scas
or
add
ljmp
mov
cmp
cmp
xchg
jp
or
add
dec
sbb
out
mov
aaa
inc
rcrb
sub
fcomip
sub
inc
popf
push
in
sbb
xor
lahf
aam
adc
cmc
dec
bound
jno
rol
cwtl
adc
push
aaa
sub
pop
inc
dec
cmp
and
inc
fs
push
add
xchg
ss
inc
in
pop
and
xor
rcrb
pop
mov
or
sub
outsl
fildll
adc
aas
jo
push
jle
scas
mov
pop
ss
int
aam
imul
sub
es
aas
into
scas
pop
iret
sbb
shrb
or
push
cmp
icebp
jg
pop
outsb
sbbb
jb
outsl
push
test
sub
adc
rcr
and
xor
hlt
aaa
inc
shr
loopne
mov
push
iret
cmp
cmp
lahf
add
aas
enter
mov
mov
test
xchg
or
out
mov
pop
mov
dec
sub
sub
shl
jmp
faddl
aas
add
cli
repnz
loop
adc
data16
fnstenv
push
stc
push
movsl
and
in
movsb
je
adc
sub
pop
lods
jl
and
imul
mul
lods
jbe
push
add
ss
jnp
jmp
pop
xchg
aad
in
xchg
and
cmp
cltd
int
dec
inc
or
sbb
push
push
cmp
cmpsl
sbb
pop
repz
adc
mov
dec
xor
xchg
sahf
call
andl
add
mov
outsb
mov
enter
pop
jo
add
outsb
mov
sbb
xchg
in
jl
jmp
out
or
test
pop
test
test
and
mov
adc
shr
jb
cmp
dec
in
add
dec
in
xor
adcb
aas
lods
es
adcl
sub
loopne
sbb
sbb
lret
mov
add
inc
inc
push
dec
xor
test
aaa
add
test
in
xchg
mov
sbb
cltd
or
aad
inc
jp
ret
rolb
scas
popf
push
orb
icebp
mov
js
subl
pop
sar
lods
sub
mov
sahf
sti
scas
push
mov
lock
lods
int
dec
bound
scas
les
lret
pop
std
xor
xor
add
dec
xchg
aad
loop
sti
jbe
lods
movsl
mov
dec
xchg
test
hlt
push
jns
sbb
inc
jb
jne
mov
rcll
mov
shlb
jne
cld
divb
pop
dec
loope
outsl
xor
out
adc
lods
mov
notl
or
rclb
out
adc
mov
and
xchg
iret
sbb
add
gs
roll
dec
in
in
or
xchg
inc
mov
and
outsl
in
mov
bnd
xchg
pop
hlt
test
cwtl
adc
and
dec
mov
xor
fiaddl
xchg
fisubl
xor
xlat
and
std
jnp
popf
shr
aad
and
call
mov
into
lret
cli
shlb
inc
cmc
int
and
push
lock
dec
jecxz,pt
out
jmp
scas
popf
icebp
mov
xchg
repnz
aaa
test
nop
shll
cmpl
loopne
xchg
call
jnp
cmp
push
fstp
xor
or
push
xor
inc
mov
lret
push
jecxz
pop
push
std
cmpsl
mov
pop
mov
repz
xchg
stos
addl
or
inc
mov
int
jnp
jmp
jl
dec
aas
psrlq
fidivrs
or
arpl
out
push
inc
pop
test
in
out
dec
fiaddl
cld
sub
mov
xchg
je
repnz
ffreep
adc
std
jge
sbb
fisubrs
dec
xchg
in
movsb
dec
leave
in
push
fs
aas
mov
jle
mov
mov
mov
sub
adc
mov
in
mov
jae
adc
enter
mov
aam
pop
les
pop
mov
adc
mov
repz
loop
rolb
in
out
lea
adc
sub
adc
mov
and
mov
dec
jno
ja
jge
push
or
dec
arpl
std
pop
mov
mov
rcrl
inc
sti
xor
xchg
push
test
xor
and
movsl
movl
pop
lea
subb
leave
leave
std
popw
inc
pop
mov
push
ljmp
and
std
jnp
daa
pop
fldl
popf
cmc
pop
jne
pusha
cmp
pop
addr16
movsl
sbb
xchg
outsb
arpl
ret
mov
cwtl
fiadds
lret
loope,pn
test
dec
mov
mov
ret
dec
sbbl
mov
jns
inc
xchg
ds
mov
adc
mov
push
cmpsl
mov
fsubl
mov
pop
add
fistps
hlt
and
stos
inc
cmp
sub
fcomps
push
nop
sar
insb
bound
addl
sbb
pop
in
fucomp
fwait
sbb
sub
ljmp
ljmp
lods
popa
aaa
xor
leave
arpl
xchg
sahf
in
push
add
inc
dec
jns
dec
mov
mov
add
sub
mov
dec
rclb
mov
jecxz
shlb
add
test
fcmovnu
mov
mov
out
mov
mov
sarb
in
addr16
mov
jbe
xor
lds
call
fbld
pop
push
insb
mov
adc
aam
xchg
xchg
fmul
sar
enter
push
cs
xlat
shrb
clc
sub
cld
add
push
ss
add
sub
mov
pop
mov
xor
int3
js
jle
xchg
jno
fidivs
jnp
xchg
enter
cmc
sub
mov
in
and
pop
push
jp
test
clc
ja
movsl
stc
outsl
lds
inc
jg
test
xchg
pop
push
clc
xchg
add
pop
fmul
mov
lahf
dec
xchg
gs
or
sub
rolb
xlat
mov
sub
xlat
or
sbb
repnz
pushf
inc
push
les
sub
pusha
bound
and
jnp
loope
adc
outsl
dec
mov
mov
aas
arpl
icebp
mov
lahf
or
mov
daa
repnz
pop
fcoms
scas
popa
mov
and
lcall
sbb
jns
sbb
sbb
dec
sar
das
sbb
cmp
int
lcall
xor
dec
jecxz
mov
bnd
out
fcoms
sub
cwtl
outsb
sub
adc
ret
pop
loop
or
inc
xchg
sbb
lcall
fdivrp
imul
push
mov
mov
loope
jmp
xchg
sbb
sub
xlat
mov
stos
dec
push
or
daa
and
xchg
sub
es
adc
in
xchg
nop
push
addr16
sbb
pop
inc
sub
out
pop
outsl
adc
mov
adc
sbb
cmp
adc
push
mov
push
sub
push
xor
ljmp
scas
hlt
sub
xchg
in
sbb
cmc
outsb
imul
mov
jnp,pn
inc
sub
jecxz
sub
push
in
inc
in
jmp
push
mov
sbb
mov
push
xor
add
incb
xchg
iret
movd
repz
mov
mov
sbb
cmp
ja
repz
adc
jno
nop
sub
mov
inc
ja
scas
inc
jno
in
enter
add
adc
jmp
popa
insb
sahf
lcall
negl
scas
cltd
in
aam
xchg
scas
sub
inc
jo
inc
aad
cmpsl
push
insb
out
and
dec
in
inc
sub
mov
stos
add
pop
sub
inc
shrl
xchg
mov
dec
and
loop
jg
and
loop
stos
popf
jmp
sub
mov
insl
shrl
pop
pop
pop
je
jnp
stos
fmull
jns
daa
xor
pop
stc
cli
imul
cmp
in
or
icebp
cltd
add
cld
pop
jmp
pop
shl
std
inc
movsl
dec
add
xor
loope
push
mov
sbb
xchg
out
or
cmp
cmp
push
inc
jns,pn
test
add
cmp
push
push
xor
mov
xlat
clc
cmp
filds
push
hlt
in
push
push
stc
sbb
mov
mov
and
mov
pop
cmp
movl
popf
mov
enter
pushl
inc
pop
push
fsubl
sub
or
or
lods
ss
test
sbb
fxsave
xchg
and
mov
xchg
movsl
jg
mov
pop
mov
sub
daa
push
push
mov
push
dec
imul
sbb
mov
dec
popa
lods
insl
mov
orl
cmp
add
fs
and
add
cli
fists
pop
insl
rol
sbb
outsl
cmp
mov
jnp
rcr
pop
ret
push
fsubrs
jg
mov
out
aad
frstor
jns
and
mov
push
mulb
inc
add
pop
dec
pop
xchg
inc
or
add
jb
or
sbb
xor
lahf
push
in
sub
push
adc
lret
push
std
ret
stos
pop
divl
ret
xor
cltd
sub
js
add
cmp
outsb
fidivrl
inc
inc
in
dec
out
dec
adc
int
cmp
mov
fldl
call
scas
faddp
dec
roll
pop
xor
inc
or
and
xchg
adc
jne
leave
rcrl
jne
mov
mov
pop
dec
hlt
pop
outsb
and
mov
or
mov
inc
jmp
xchg
sbb
int
push
adc
dec
or
fsubrs
xlat
rcrb
stos
sbb
xor
fwait
ds
add
scas
call
and
aaa
aas
xchg
mov
inc
jl
and
sbb
sub
dec
dec
ja
lret
call
leave
mov
mov
jge
inc
cmp
cli
notb
lods
stc
jmp
or
or
pop
pop
mov
ss
push
adc
test
mov
jb
jne
mov
jmp
add
fildll
mov
xor
cmc
adc
jo
scas
mov
pop
cmp
dec
iret
sbb
or
xchg
scas
lock
jnp
aaa
lea
repz
adc
addr16
jno
pushf
push
fs
jmp
jbe
jecxz
stos
xor
dec
cmpsl
cmc
cmp
mov
push
push
mov
insb
mov
popf
mov
test
lock
cmp
jae
sbb
mov
xorps
and
fsts
lds
mov
add
fwait
in
cmp
lahf
pop
lds
mov
lods
xor
aad
xor
xchg
and
insb
pop
mov
xor
addb
jae
xchg
test
mov
cmp
aad
push
dec
jno
lock
fidivl
push
mov
xor
dec
lea
xchg
rolb
sbb
aad
cli
roll
xlat
add
mov
fcmovnbe
push
jno
or
mov
aad
rorl
jl
fisubl
lret
lods
subb
pushf
insb
mov
adc
jle
dec
pusha
stc
dec
mov
or
xor
mov
sti
stos
push
cmp
sub
out
and
lods
aas
xor
or
pop
push
addb
ljmp
aas
xchg
mov
into
lret
fwait
out
jp
test
jbe
add
inc
shl
test
xchg
sub
jnp
adc
add
cmp
jae
pop
lcall
cwtl
mov
enter
mov
popf
out
sub
adc
sar
sub
mov
mov
xlat
adc
lds
bound
pop
ret
sbbb
or
cmp
and
push
rclb
pop
dec
lock
mov
pop
nop
je
shll
or
je
movsl
arpl
xor
dec
cli
scas
mov
xor
pop
mov
repnz
xchg
push
mov
insb
cmpb
adc
push
sub
sub
out
mov
sti
dec
scas
fs
bound
add
scas
xchg
cmp
ss
out
cmp
std
clc
sbb
mov
xchg
or
movsl
sbb
inc
pop
mov
rclb
xchg
inc
test
stos
shl
aad
call
aad
or
lcall
mov
cmp
sarb
jmp
mov
push
out
loopne
xor
mov
lds
mov
mov
add
push
inc
jnp
leave
ret
mov
test
pushf
int3
sahf
push
cmp
imul
std
add
jae
aas
sbb
cmp
mov
jnp
xchg
in
into
or
notb
mov
and
fidivrs
outsl
jo
mov
iret
jge
in
cld
mov
xor
pop
cmc
pop
mov
dec
rcr
sub
popa
mov
xor
mov
xchg
nop
or
call
fucomi
repz
sbb
mov
loope
aas
nop
rcll
ficoml
ja
testb
in
ds
lcall
add
mov
jl
inc
data16
xor
fcomps
pop
flds
sbb
jle
in
sbb
push
jecxz
sbb
and
push
imul
roll
jmp
jmp
ret
mov
stos
push
imul
stos
jno
subl
xchg
xchg
mov
fwait
lods
push
add
mov
fdivrs
lods
push
ret
mov
leave
xchg
add
add
dec
icebp
cmp
in
iret
jle
jno
push
inc
jno
inc
out
mov
mov
jecxz
push
gs
and
dec
insb
mov
and
cltd
xchg
pushf
mov
sbb
and
inc
mov
enter
aad
and
xchg
pop
mov
das
sbb
xchg
sbb
xor
sbb
jns
jno
testl
aad
lret
les
fistps
sub
dec
push
pop
lcall
jecxz
shlb
adc
loope
imul
push
aas
add
int3
popf
bnd
test
jno
test
sub
mov
mov
std
push
cmp
and
push
cmp
ret
sbb
bound
test
mov
roll
mov
sti
test
test
div
pop
aaa
addr16
shlb
js
repnz
pop
mov
loope
data16
xchg
in
lods
sub
xchg
leave
jle
cmc
cltd
imul
fld
mov
mov
mov
leave
mov
xor
adc
add
nop
xchg
std
pop
and
sub
and
and
lods
pop
pop
pop
rclb
test
add
ret
dec
cmp
jecxz
repnz
test
inc
mov
gs
psllq
inc
xor
fiadds
push
das
std
sbbl
test
lret
pop
push
in
and
mov
movsb
rorb
test
loopne
jmp
testl
cmp
loop
mov
pop
in
out
loope
sahf
or
or
cmp
adc
popa
pop
jns
sbb
ja
sbb
stos
ret
into
addl
fisttpl
sbb
out
mov
dec
loop
dec
lods
cmpsb
push
jp
cwtl
jbe
jb
push
ret
dec
xor
popf
loopne
insb
sub
jle
lea
jmp
and
dec
and
mov
xor
jmp
push
scas
pusha
jg
mov
xchg
sbb
scas
aaa
add
jno
lret
jg
and
dec
pop
sub
loope
ret
dec
shlb
addr16
in
iret
out
xorl
mov
inc
pop
pop
sbb
daa
mov
pop
jae
fstl
cwtl
fdivr
outsb
shr
mul
sbb
pushf
pop
shrl
or
popa
and
push
sbb
addl
in
loope
neg
pop
sub
mov
xlat
fmull
dec
movsl
jl
jl
dec
mov
orb
lret
lock
adc
cmpsb
mov
ret
dec
leave
sub
pop
repz
ret
lret
cli
jae
sub
out
push
inc
pop
mov
lret
push
jl
pop
fwait
imul
test
stc
pop
dec
or
cli
jno
fldenv
cmpsb
insb
sbb
cmp
pop
in
test
jnp
or
sahf
sarb
sub
pop
aas
loopne
xchg
mov
xchg
dec
pop
ljmp
cmc
into
sbb
or
arpl
jno
and
iret
cwtl
mov
daa
mov
mov
in
mov
sbbl
inc
outsl
sti
lcall
ds
fsub
sub
sub
cmp
lock
add
sbb
popa
and
in
and
mov
les
xor
icebp
stc
arpl
adc
lods
adc
cmpsb
inc
jne
jecxz
cld
mov
fisubl
sbb
dec
mov
loop
mov
mov
or
les
push
mov
jle
xchg
in
xchg
adc
push
or
imul
jp
push
out
fcomps
pop
stos
cmp
sub
icebp
xchg
pop
ss
pusha
and
cmpsl
jb
sar
jae
mov
nop
mov
movb
out
cs
jo
dec
mov
pop
jb
cwtl
mov
or
cmp
sbb
sub
int3
jge
daa
out
jns
outsb
inc
test
push
mov
push
andb
cmp
ret
pop
adc
add
mov
rcrb
lock
stos
add
lea
cmp
call
sub
ret
fidivl
push
js
push
repnz
leave
gs
mov
inc
iret
pop
cmp
cmp
js
into
cltd
outsl
je
sub
std
pop
into
mov
cmp
sbbb
shlb
shrl
inc
xchg
sti
xchg
xchg
popf
inc
int3
js
inc
add
lds
cmp
fisubl
cmp
sbb
add
iret
aam
sahf
add
in
arpl
mov
cwtl
sbb
sbb
xor
cmp
sbb
and
out
cs
in
jge
call
mov
mov
xchg
cmpsb
sbb
mov
jno
or
incl
movsl
xchg
sbb
jmp
idivl
or
negl
aam
xor
or
imul
mov
ret
push
inc
ficomps
mov
jg
std
insl
add
gs
lret
js
adcb
sub
nop
mov
mov
cmp
fidivs
push
movb
cs
mov
jp
pushf
cmpsb
ficompl
mov
cmp
movsl
lret
jb
dec
push
or
sub
jmp
pop
cmp
sub
dec
sub
adcl
movsl
sub
and
mov
lahf
cmp
push
cmpsl
rcrb
jns
sub
out
pop
or
xchg
jns
xchg
mov
stos
dec
orb
lds
stos
inc
setge
cmpsb
or
imul
mov
das
xchg
pushf
sub
call
js
cwtl
sub
jmp
pushf
es
add
add
mov
push
mov
sarb
addr16
add
pop
push
aas
mov
cmpsl
movsb
mov
in
or
cltd
lock
inc
ret
clc
cwtl
sub
dec
cmc
std
mov
repz
dec
add
mov
cmp
jmp
xchg
subl
lret
sub
cmc
ltr
push
xchg
stos
stc
int
int3
into
scas
mulb
push
add
jbe
out
imul
adc
ret
push
bound
cmp
inc
push
push
out
jl
in
jmp
or
push
push
fisubs
repz
dec
mov
ficompl
in
pop
xchg
or
lcall
shrb
stos
mov
scas
loope
inc
movsl
and
icebp
into
pop
mov
pusha
xchg
lret
arpl
ss
test
sahf
xchg
push
fs
popf
testb
mov
add
mov
mov
xchg
jle
sub
dec
inc
sbb
cmp
ret
test
fbld
aad
fidivs
pop
into
arpl
inc
pop
fildll
sub
sti
fstpl
jge
popf
lea
or
push
pop
and
add
insl
popf
xchg
mov
push
xchg
clc
sarl
dec
sub
xchg
mov
sbb
xor
aad
sbb
inc
notl
enter
pop
paddsw
lcall
or
push
ret
jno
pop
cmp
sub
add
xchg
xchg
push
dec
insb
out
out
xlat
mov
popa
cmp
xor
dec
call
and
std
pop
inc
lods
scas
loopne
pop
cli
cltd
stc
adc
cwtl
inc
rclb
xlat
dec
andl
sti
popa
sbb
push
and
stos
cmp
push
imul
bound
loope
dec
add
dec
adc
adc
dec
sbb
inc
jmp
adc
int
dec
jb
add
jle
mov
int
mov
ret
xchg
and
jns
aas
cmpsb
cwtl
dec
pop
clc
loop
jl
cmp
sbb
jb
jbe
imul
xchg
mov
je
sbb
loop
dec
movsb
add
cs
in
push
xor
rcl
movsl
negb
addr16
and
mov
ljmp
dec
sub
das
loopne
mov
and
dec
add
ret
mov
pop
clc
and
cmp
lds
mov
mov
repnz
mov
jl
mov
cmpsb
dec
shlb
cli
cmpsl
dec
or
mov
inc
ds
orl
scas
jp
or
pop
xchg
aaa
imul
add
xchg
iret
out
pop
lock
push
call
shrb
sbb
test
xor
sbb
cmpsb
cwtl
mov
pop
sbb
sub
data16
sbb
sub
and
ret
idivb
in
mov
fs
hlt
jo
stos
aam
push
fldpi
hlt
hlt
adc
xchg
or
lret
jge
fwait
loop
sbb
jle
int3
cmp
pusha
cmpb
test
in
jecxz
inc
and
jno
push
cmc
loopne
aaa
jns
popl
loop
popf
ret
mov
adc
cltd
ss
out
enter
in
push
push
les
movsl
mul
cld
cmp
movsb
ds
sahf
sub
add
jae
fldcw
sub
rolb
in
pop
jo
jle
and
repnz
jae
fadds
call
enter
mov
or
ss
pminub
lds
rorl
arpl
fisubl
pop
fdivl
es
mov
dec
push
or
pop
dec
dec
rol
cmpl
sbb
pop
mov
mov
add
out
sbb
push
inc
js
ds
inc
int
mov
pop
push
jge
xchg
pop
mov
mov
imul
jb
cmp
das
sub
int3
xchg
iret
adc
add
clts
adc
sti
cmp
test
pop
mov
or
adc
dec
loope
push
jge
mov
sbb
sub
mov
cmc
fdivrs
add
div
push
repz
adc
sub
test
inc
inc
movsb
jecxz
inc
and
push
and
shlb
inc
orb
cmp
mov
dec
stos
push
aad
pop
xor
pop
mov
jb
ficomps
arpl
iret
shr
mov
rcll
outsl
mov
or
test
loopne
outsb
push
out
pop
and
or
dec
test
cmpsb
cmp
xor
movaps
inc
fs
inc
movsl
sbb
ja
and
pop
inc
shl
mov
mov
push
pop
and
mov
mov
xchg
add
ret
jbe
push
int3
mov
test
insb
push
dec
cmp
add
out
loop
push
mov
xorb
mov
cs
call
test
cltd
enter
dec
lds
aad
cmp
ljmp
jmp
popa
sub
pop
jb
cs
outsb
mov
mov
fwait
ljmp
or
cmpsb
cwtl
mov
int3
cmp
cmpl
mov
dec
repz
cltd
out
fdivrs
sbb
inc
pop
xor
dec
xchg
add
jp
loopne
fimuls
sub
push
rcr
or
dec
int
lods
stc
daa
dec
or
push
dec
inc
outsl
adc
rep
push
jo
leave
mov
or
dec
test
mov
pop
cmp
les
ss
mov
andl
and
cld
jmp
movsb
pusha
dec
or
sbb
addl
popf
mov
data16
stos
mov
pop
and
pop
xor
xor
lock
test
popa
push
mov
sbb
movsl
add
xlat
ljmp
nop
cmp
push
push
fstpl
fwait
loop,pn
sahf
sbb
loope
in
pop
sub
push
lret
rorl
into
mov
lea
loopne
jecxz
leave
cltd
dec
xor
insb
imul
into
xor
inc
mov
ret
inc
stos
outsl
mov
test
imul
cmp
lret
pop
out
push
sarb
jmp
dec
xchg
jne
gs
fistl
out
xchg
loopne
repnz
int
push
push
fisttpll
shll
mov
mov
les
inc
mov
cld
add
sub
loop
iret
push
pop
sbb
jns
mov
inc
loope
shl
out
sbb
shlb
cli
jecxz
xor
dec
jge
negb
lret
ss
sub
mov
cwtl
xchg
mov
inc
inc
jns
int3
push
and
ds
and
mov
hlt
dec
in
divb
xor
out
jae
mov
ret
shll
xchg
mov
shlb
cmc
in
mov
stc
js
inc
in
sbb
loopne
out
pop
mov
jae
fiaddl
cld
inc
imul
lods
cmpsb
xchg
push
dec
xchg
ds
sub
mov
pop
ja
rorb
cmp
mov
bound
fwait
cmc
xor
dec
or
stc
sbb
push
and
fdivp
cmpsl
loope
add
sbb
loopne
subb
jbe
sahf
pop
inc
push
cmp
dec
sbb
out
cs
sbb
mov
mov
xor
nop
int
jecxz
push
add
call
mov
out
inc
js
jge
and
jl
cmc
cwtl
xor
lock
sbb
popf
repz
cmpsl
ret
mov
mov
sahf
jns
fsubrs
fimuls
leave
stos
or
stos
sub
int3
cmp
fdivs
jmp
fbld
into
hlt
fadds
out
inc
fcompl
scas
les
leave
inc
pop
inc
addr16
lret
dec
jnp
js
cld
out
pop
sub
xor
sbbb
push
push
nop
ljmp
push
xchg
mov
andl
popa
les
add
cltd
mov
ficoms
movsl
cltd
rcll
mov
push
icebp
sbbb
dec
testl
lahf
mov
out
cmp
test
pop
add
js
lret
push
es
jbe
shrb
adc
jo
ds
cmp
shr
push
inc
mov
fdivrl
cmpsb
js
std
adc
dec
cwtl
mov
out
mov
fisttps
mov
sub
mov
test
shl
popa
push
jb
mov
das
mov
xlat
mov
xor
ret
inc
out
cmp
xor
mov
add
jmp
lret
jg
inc
or
jno
daa
push
out
scas
sarb
jle
stos
cmp
or
sbb
scas
push
mov
push
fldenv
jns
cltd
loopne
fildl
dec
roll
jns
cmc
push
push
inc
pop
xlat
sub
push
inc
iret
push
jo
arpl
xchg
push
lret
mov
cwtl
sub
inc
jae
mov
mov
clc
lret
add
jmp
cmp
aaa
cmpsl
ror
out
push
and
mov
inc
lret
and
dec
fcomp
lcall
int
nop
cli
fdivrl
or
sub
test
cmp
aas
fsubrl
or
stc
pop
jecxz
push
push
inc
adc
jo
jecxz
ja
push
das
or
push
sub
inc
or
mov
aas
mulb
cmpsb
pop
stos
jle
inc
mov
addr16
mov
inc
in
fnstcw
mov
in
stc
and
ds
orb
sub
xchg
dec
or
rol
xchg
mov
jg
mov
fmull
sbb
push
repz
pop
dec
lcall
outsl
adc
pop
jns
fisubs
fnstenv
shlb
es
jp
sahf
add
lret
fmull
sahf
test
adc
mov
in
inc
dec
dec
dec
ror
loope
push
or
imul
insb
adc
test
arpl
cmp
add
adc
sbb
pushf
in
je
jl
adc
bound
cld
sahf
in
psubq
clc
inc
xchg
mov
pop
shlb
dec
mov
add
mov
shld
in
divb
dec
lahf
enter
jle
and
push
jns
push
mov
out
sbb
jnp
cmp
and
sbb
shr
inc
jnp
lret
bnd
mov
pop
push
imul
or
cs
cmp
fistpl
pop
imul
mov
mov
test
clc
mov
pop
mov
push
loope
dec
mov
mov
movsb
sbb
orb
imul
mov
jo
jp
mov
mov
pop
movsl
stos
mov
fdivp
cwtl
cmp
xchg
push
or
xor
insl
mov
cwtl
mov
cmpsb
int
push
mov
arpl
sub
lea
and
js
jo
cmpsl
or
scas
sbbb
jecxz
jnp
jo
push
sub
aaa
fsub
movsb
and
adc
dec
fcmovb
cmp
push
lret
jge
aaa
jo
out
in
lds
imul
shll
mov
cmp
and
sbb
push
mov
jl
repnz
lds
enter
clc
in
or
mov
mov
and
jl
repnz
sbb
popf
inc
pop
outsl
icebp
ss
cltd
lahf
cmc
arpl
sbb
stc
sbb
mov
cmovae
add
jg
mov
cmc
stos
cmp
jno
mov
loopne
add
cmp
adc
int3
fbstp
xor
out
jbe
mov
test
pop
add
jge
and
lret
int3
shll
nop
and
je
inc
pushf
mov
int3
rcrl
jg
ljmp
cmc
push
loope
cmp
xlat
lods
mov
sbb
aad
inc
push
and
dec
adc
cltd
sahf
lcall
ret
ljmp
sub
inc
dec
pop
mov
outsl
cs
lods
mov
and
dec
imull
orb
aam
adc
in
fisubs
loopne
outsb
dec
aad
inc
pushf
pop
push
adc
pop
pop
lock
iret
out
or
mov
fsubl
call
adc
inc
sbb
aas
push
push
xor
push
fbld
repz
in
mov
pop
push
jns
sbb
addb
lea
inc
ss
push
sub
std
pop
and
ret
flds
add
rolb
jl
mov
ret
add
jo
and
jno
pop
test
mul
std
adc
popa
pushf
xlat
cmp
in
lcall
mov
imul
pop
xchg
xchg
outsl
dec
xchg
cmp
lods
lds
mov
sub
xchg
pop
jge
xor
in
jno
loop
testl
bound
jecxz
stos
ret
popf
or
test
cli
cltd
push
mov
xchg
cmp
ss
lret
jecxz
xchg
xchg
pop
das
out
xchg
aas
rcrb
mov
clc
into
sub
arpl
int3
inc
clc
jbe
push
out
fwait
fs
movsl
or
sbb
jg
enter
and
aaa
mov
jg
lea
mov
ljmp
mov
push
test
add
xor
hlt
das
sub
mov
push
mov
fcmovnb
xchg
lock
in
mov
and
in
fisubrl
mov
sbb
mov
lcall
mov
push
lds
push
xchg
and
push
popa
movsl
xor
jne
aam
pop
mov
adc
icebp
push
cltd
dec
xchg
pop
pop
outsb
push
loopne
cmp
mov
and
mov
bnd
pushf
pop
fs
or
addl
add
push
imul
jbe
adc
inc
stos
fs
adc
out
mov
out
mov
push
cmc
fadds
mov
mov
orb
test
movsb
lret
cmp
pop
jl
push
loope
repnz
xlat
xor
sbb
adc
lcall
adc
jno
sub
jmp
and
outsb
sbb
sub
cmpb
cmp
aas
pop
cmp
mov
jle
push
fbstp
and
loope
cmpsl
mov
in
mov
ret
scas
out
jmp
xchg
ret
add
pushf
rcl
lcall
and
xor
xchg
cld
mov
lahf
jge
mov
inc
fwait
dec
jmp
stos
movsl
std
lcall
enter
push
jnp
jb
sub
in
lods
jae
add
enter
sbbl
test
jns
inc
push
add
xor
xchg
fcoms
fsubp
lahf
push
fisubrl
cli
add
xlat
push
add
jecxz
arpl
mov
mov
loop
shrb
data16
jl
outsl
jecxz
stos
aas
inc
je
jo
jae
in
in
sahf
or
mov
mov
addr16
add
aaa
mov
sub
xchg
pop
scas
fisubl
and
repnz
fadds
push
pop
xor
dec
stos
in
sbb
les
mov
mov
xchg
sahf
outsb
call
ljmp
jbe
sti
jmp
test
jne
int
scas
add
mov
push
in
cld
cmp
popa
orl
mov
pop
inc
mov
adc
or
out
jle
cmpsb
les
rorb
subl
add
push
dec
xchg
push
push
hlt
decb
jle
roll
fldenv
repz
jnp
je
jae
or
lods
inc
sbb
cwtl
mov
cmp
add
push
cmpsb
in
mov
mov
mov
jbe
or
test
adc
or
mov
jecxz
xor
push
sub
fucomi
stc
adc
test
sahf
vmwrite
push
gs
fdivr
mov
lret
sub
adc
test
xchg
arpl
adc
mov
lea
lods
iret
inc
and
jmp
rcll
and
inc
xchg
pop
inc
sub
pop
jae
lcall
mov
xchg
sub
lea
push
xchg
mov
mov
push
add
movsl
inc
shll
lcall
xchg
inc
add
movsl
lods
fstps
xchg
ficoml
cmp
mov
push
mov
stc
sbb
in
cmp
mov
repnz
int
mov
jl
or
inc
xchg
mov
add
and
out
icebp
dec
aam
iret
xor
repz
jp
inc
sbb
stos
iret
adc
insl
sbb
mov
mov
mov
cvtps2pi
leave
aam
mov
lahf
filds
push
pusha
sahf
mov
leave
xchg
das
or
jge
cmp
arpl
jo
xor
sub
sbb
sbb
adc
jae
into
insb
pushf
pop
sbb
or
sbb
or
insl
adc
xchg
pop
inc
cli
sti
into
dec
test
push
stos
aam
pop
lahf
sbb
push
cmp
push
test
loope
push
jge
xchg
xchg
lret
inc
sub
iret
orb
lock
mov
rorb
sarb
test
mov
shlb
insl
sub
push
inc
inc
cmpb
stc
sbb
xor
add
fidivl
or
cmp
int3
mov
jmp
int
gs
sbb
xchg
xchg
out
jl
lahf
inc
mov
jne
push
out
add
jne
jmp
jbe
sbb
inc
lock
push
adc
mov
sarb
call
pop
les
lea
push
dec
jnp
inc
cmpsl
jns
add
sarl
enter
test
xchg
push
or
push
out
mov
pop
aad
stc
call
xor
push
adc
aad
mov
and
sbb
loope
xor
push
xorb
xor
xor
loope
lret
sbb
std
xchg
divb
cli
push
mov
push
fwait
xchg
pushaw
lcall
lahf
andl
adc
test
fwait
scas
shlb
mov
loope
test
inc
add
out
pop
or
xchg
enter
stc
arpl
jb,pn
pop
out
loopne
cmc
lea
pop
cmc
adcl
add
or
clc
jge
push
hlt
or
les
and
inc
and
and
and
clc
and
ret
inc
lcall
stos
push
push
cmp
cmp
faddp
sub
xchg
inc
lret
ja
push
add
scas
dec
pushl
cs
mov
gs
xor
pushf
mov
mov
int3
pop
cmp
xchg
jle
ljmp
cs
add
add
inc
adc
iret
stos
sub
mov
aas
and
dec
and
int3
nop
das
mov
sahf
jmp
xor
shll
ljmp
mulb
push
jge
sub
mov
rcrl
push
mov
xor
xchg
insb
push
stos
push
hlt
jle
int
in
shll
and
es
pop
jae
or
fs
mov
or
insb
test
scas
decb
movl
fiadds
jns
cmp
mov
add
cltd
fsubp
push
lahf
nop
inc
pop
es
or
xchg
jg
xchg
mov
cli
fisubrs
mov
je
ss
inc
xor
xchg
in
mov
add
fldcw
jns
push
mov
xor
sub
rorl
iret
jge
aad
iret
sbb
imul
inc
sbb
push
push
rolb
or
dec
pop
jecxz
and
sub
mov
hlt
repnz
nop
and
ljmp
mov
add
adc
imul
loope
mov
push
mov
fsubs
sbbb
stc
aad
sbb
sbb
shrl
push
test
jmp
jns
pop
nop
dec
fsts
out
je
xor
rcl
push
mov
fcmovnu
into
push
pop
sub
ret
imul
icebp
xchg
imul
mov
sbb
inc
cmpsb
fs
dec
mov
mov
je,pt
inc
lret
sbb
loopne
cmp
xor
ret
jno
lahf
cs
mov
mov
mov
movsb
aas
ljmp
out
int3
pop
sti
out
bound
hlt
pusha
inc
adc
movb
pop
add
adc
test
shll
mov
mov
fs
stc
dec
popa
jnp
dec
mov
cltd
fdivp
loope
xorb
mov
jp
or
sub
mov
in
inc
popf
pop
dec
sbb
mov
jb
loopne
push
fwait
or
enter
pop
shll
in
adc
shlb
das
icebp
pop
xor
mov
pop
xor
mov
les
inc
sti
fs
idiv
test
inc
sub
push
cmpsl
dec
loopne
push
jno
cli
and
cmp
ljmp
mov
xchg
mov
jp
hlt
fisubrs
ds
outsb
adc
and
sub
pop
jno
mov
fisubl
sarl
or
pop
and
add
es
out
adc
xor
mov
pusha
imul
es
lock
orb
mov
xchg
icebp
pop
js
dec
push
add
jnp
xchg
into
arpl
mov
jns
andb
mov
sub
pop
scas
mov
sbb
sbb
xor
stc
xchg
outsb
cltd
aaa
ret
jge
add
cmp
mov
cli
push
mov
mov
add
xchg
cmp
dec
leave
sbb
bound
push
and
lahf
dec
loopne
negl
xchg
leave
and
test
mov
shrl
js
loope
mov
mov
test
sub
inc
xchg
jmp
xchg
test
repnz
out
mov
jl
or
outsb
pop
mov
jno
in
xchg
ss
adc
pop
ret
pop
add
fstpl
pop
mul
sub
or
and
jo
push
and
repz
test
lcall
out
imul
scas
lock
add
jge
dec
pushf
scas
insb
adc
in
sub
test
loop
adc
cmp
insb
outsb
ljmp
push
scas
out
dec
jo
mov
push
sti
fstpl
mov
out
enter
popa
and
add
test
repz
bound
inc
pop
dec
push
mov
pop
push
xor
lods
fnstsw
ret
daa
mov
fsubl
cli
movsb
mov
xchg
movsb
pop
bound
cwtl
inc
sub
pop
out
dec
decl
add
and
jnp
lock
cmp
sub
pop
fsub
pop
out
sub
or
xchg
call
sbbl
jno
sub
pop
mov
sbb
jno
mov
scas
mov
inc
fbld
mov
repz
cmc
sub
adc
imul
mov
xor
cld
int3
mov
jae
loopne
dec
shrb
das
dec
adc
push
bound
dec
sub
inc
xchg
sub
stc
push
push
outsb
insl
dec
rcrl
xor
pop
jb
fs
out
inc
mull
or
cmp
xchg
jns
notl
mov
mov
shrb
xor
sbb
imul
inc
jbe
cli
pop
stc
mov
cmp
sbb
dec
aam
add
pushf
pop
inc
cmp
loopne
loop
mov
lods
lsl
lds
insb
ret
roll
mov
cld
in
mov
int3
je
add
add
jg
nop
push
adc
daa
and
popa
sarl
pop
pop
jmp
or
stos
jbe
imul
sti
pop
inc
cltd
xor
icebp
xor
jg
pop
pop
mov
inc
popa
pop
jecxz
inc
xchg
adc
sub
sbb
in
jecxz
addl
jnp
adc
fistpll
loope
cwtl
sbb
sub
mov
mov
and
push
xor
add
push
mov
shll
fiadds
mov
dec
ljmp
ljmp
ja
aas
mov
xor
add
pop
insl
cmp
jnp
call
push
and
ds
mov
or
lock
jb
jl
jbe
mov
shlb
orb
mov
mov
sahf
cmp
sti
loope
jnp
dec
fadds
out
add
add
outsb
jg
mov
mov
or
mov
mov
xor
mov
dec
pop
pushf
lcall
enter
stc
mov
mov
fmull
jge
add
fiadds
call
pop
aam
shlb
loopne
jl
aad
loope
xor
orb
cld
fistps
dec
mov
dec
sbb
xchg
movsl
lock
out
ret
dec
dec
into
adc
movsl
test
jnp
fwait
mov
fcomip
adc
inc
jge
pusha
dec
aaa
std
add
leave
mov
push
jecxz
inc
and
cld
mov
nop
cwtl
aam
sbb
mov
xor
cs
pop
test
jmp
adc
sbb
xor
div
in
and
mov
jmp
jmp
add
les
sbb
es
push
fildl
enter
ret
faddl
int
cmp
dec
xchg
inc
lret
pop
rcl
out
add
bnd
enter
or
dec
les
push
push
mov
push
mov
out
test
push
inc
cmc
bound
adc
push
stc
in
pop
fsubr
pop
and
in
pop
es
xchg
gs
mov
movsb
mov
cli
cmp
jmp
data16
jno
cmp
cmpsb
je
lods
pop
cld
dec
pop
ja
mov
mov
int3
and
rcll
loopne
test
dec
incl
pop
push
mov
add
into
jle
push
adc
es
and
or
ret
add
push
xchg
xchg
fnstenv
aaa
sbb
push
in
insl
aas
push
popaw
and
fadd
fs
fstpl
ss
outsl
ds
loopne
and
sar
or
and
lock
sub
cs
ja
and
int3
pop
sub
fcoms
rcrl
sub
jmp
lea
xchg
xchg
push
inc
sbb
adc
ljmp
pop
hlt
popf
jmp
lahf
or
dec
mov
sbbl
and
lahf
pop
pop
mov
pop
jns
jle
das
add
inc
rorb
adc
sub
hlt
outsl
dec
rolb
pushf
push
dec
sub
push
inc
aad
cli
push
mov
xor
lcall
cmp
and
out
jnp
inc
arpl
js
xor
mov
adc
addb
sub
dec
cmpsb
je
loopne
mov
push
pop
in
sbb
mov
rcll
loopne
jbe
pop
daa
shlb
bswap
pop
dec
add
adc
jb
sahf
leave
int3
mov
cmp
jno
mov
shrl
jg
fs
scas
mov
fldt
pop
add
sub
shll
sub
sub
pop
dec
aad
stos
xlat
mov
jge
mov
cmp
add
mov
ret
fcoml
movsl
and
leave
inc
dec
rol
loop
bound
ret
cli
pushf
xchg
repnz
xor
loop
mov
inc
shll
or
xchg
ja
or
inc
dec
addr16
aam
dec
add
pop
jnp
mov
out
sub
hlt
fdivrl
add
hlt
cltd
jo
outsb
pop
jg
xor
cmpl
jae
push
mov
out
or
out
push
iret
test
cli
pop
dec
out
pop
cmp
sbb
and
icebp
test
mov
mov
mov
xchg
sub
mov
stos
lds
popa
lock
add
xchg
sub
adc
mov
sbb
ret
lods
mov
xchg
cmp
clc
dec
fstps
jle
cltd
mov
scas
xor
add
pop
or
jae
inc
mov
mov
fucomp
popf
inc
ljmp
lds
cmp
jae
aas
repnz
mov
cs
int3
and
adcl
sbb
mov
and
xchg
iret
pop
inc
mov
andb
jp
pop
ret
push
pop
sbb
cs
cmp
pushf
sti
mov
ja
mov
fsubl
adc
xor
mov
and
jbe
sbb
mov
mov
ss
inc
insb
mov
stc
js
outsb
lock
into
in
mov
shrl
movsb
mov
pusha
lret
fidivs
xor
and
popa
and
insl
out
push
sahf
adc
cmp
xor
xor
add
mov
mov
push
aam
adc
lods
data16
push
test
jne
jmp
pusha
popa
cli
gs
add
movsb
shll
mov
cmpsl
pop
and
adc
inc
xor
xchg
push
or
gs
movl
lock
pop
mov
cmp
mov
mull
xchg
xchg
or
mov
pushf
popf
arpl
popa
add
xor
fists
hlt
adc
rcl
pcmpeqb
cltd
sbb
in
stos
popa
fnstcw
pop
cmpl
mov
add
nop
add
and
int
addr16
push
jno
es
repnz
jbe
jp
cmp
out
inc
ljmp
sbb
mov
hlt
mov
not
xchg
xchg
dec
test
sub
dec
and
lock
dec
gs
pop
or
xor
pop
add
mov
inc
mov
call
pop
ret
inc
ret
test
movsl
in
dec
out
addl
pop
dec
insb
mov
xchg
pop
adc
test
push
jnp
pop
hlt
icebp
push
cmp
dec
inc
sbb
mov
and
mov
sub
push
mov
add
inc
gs
sub
xor
and
andl
and
jg
neg
int
cmp
adc
aas
mov
imul
in
subb
sbb
test
leave
adc
mov
xchg
sbb
das
ss
mov
sbb
xlat
pusha
sub
sbb
stc
outsb
pop
pop
jno
popf
fdivrp
jb
cmp
bnd
sarb
cmpsb
and
jle
lcall
fsubrs
jae
pop
inc
xchg
mov
mov
jecxz
dec
aam
adc
test
adc
sub
ret
sbb
sub
add
loop
hlt
or
pusha
inc
adc
fwait
leave
loope
addr16
scas
or
loope
sbb
cmp
and
loop
pop
loopne
dec
lock
mov
xor
sbb
mov
jae
popf
clc
and
push
and
ja
push
mov
stc
mov
mov
adc
dec
sbb
sbb
sub
imul
jne
xchg
mov
int3
addr16
dec
xchg
dec
jae
xchg
add
int3
aaa
mov
repz
int
jmp
inc
pusha
jne
stos
push
iret
cmpsl
xchg
push
inc
test
outsb
loope
push
hlt
lods
jl
test
lcall
movsb
lret
xchg
scas
cmp
sbb
adc
flds
inc
dec
fsts
sbb
xlat
inc
movhps
mov
insb
daa
cli
mov
outsb
scas
inc
push
fwait
pop
mov
sahf
adc
ret
lods
dec
repnz
cmpsb
popf
mov
in
xchg
dec
cli
push
pop
push
or
wrmsr
shrl
mov
push
pop
pop
mov
or
dec
rorb
inc
insl
mov
pop
dec
out
test
push
loope
in
push
lock
sub
outsb
es
insb
and
js
leave
fisubs
ds
xchg
inc
xor
hlt
lock
test
arpl
fisubl
fidivl
dec
and
movsb
leave
out
stc
mov
or
xor
jnp
and
xchg
das
shrl
mov
jmp
jne
in
dec
enter
xchg
push
cmp
mov
cmpsb
insb
jg
addl
out
inc
pop
out
lds
pop
adc
xchg
cwtl
mov
mov
jb
ss
ljmp
je
shrl
add
or
and
sub
stos
inc
fyl2xp1
sbb
das
int
add
outsl
mov
mov
into
or
sbb
mov
cwtl
je
addb
xchg
test
sub
jl
ja
insl
in
and
dec
mov
jnp
fsubrs
lcall
xor
and
lcallw
xchg
inc
hlt
push
jp
xor
and
or
cbtw
ljmp
les
pop
sbb
or
and
data16
dec
out
ret
and
pop
imul
pushf
cmpsl
dec
mov
cmp
ja
and
shlb
icebp
jno
adc
mov
add
fcompl
pushl
test
push
fdivl
ret
frstor
repnz
push
jecxz
lds
mov
mov
pop
iret
mov
scas
mov
mov
ljmp
cmpsl
inc
pop
ficoml
adc
mul
xchg
push
sbb
mov
mov
and
push
push
push
cmp
fimull
ja
adc
sub
adc
cltd
pop
lods
lret
mov
fcompl
cmpsl
in
out
popf
cmp
push
fs
dec
push
xchg
add
dec
rcll
add
push
or
aam
out
pop
or
sub
sbb
and
push
or
ljmp
out
xchg
fidivs
push
xor
add
scas
mov
lret
rcrl
insb
lds
sub
adc
adc
sub
pop
aas
test
sub
jns
mov
cmpsb
test
mov
and
adc
sub
fdivl
mov
test
add
push
mov
std
enter
mov
cmpsl
sub
bound
inc
int3
popf
adc
out
push
add
sarb
lods
jmp
adc
out
jl
in
push
cs
mov
insb
jo
test
fnsave
jmp
cs
push
repz
push
lods
inc
loope
and
cmp
adc
jecxz
mov
out
jl
push
inc
pop
popa
es
and
das
adc
ds
mov
or
idivb
inc
cwtl
scas
lods
clc
je
dec
xor
les
adc
cmp
ss
fucompp
aad
in
scas
sarb
or
ror
testl
mov
push
xchg
adc
add
pop
fstpl
fcoms
out
das
fs
cmc
and
scas
xchg
mov
sub
jns
xor
daa
pop
out
imul
pop
subb
mov
mov
mov
cmp
lods
or
pop
aaa
and
inc
lock
xor
mov
mov
jae
and
out
ret
xchg
add
cmp
lds
icebp
sub
fidivs
add
movsl
daa
xchg
push
xor
add
rcr
stos
sbb
test
loop
stc
sbbl
addr16
add
pop
fcmovne
xchg
stc
loop
add
pop
gs
sub
bound
stc
push
pop
adc
inc
ss
push
sbb
jge
gs
ret
loopne
test
xor
jp
test
divb
sub
jno
movb
add
aam
dec
mov
call
call
icebp
add
outsb
inc
mov
lods
mov
test
nop
and
jmp
lock
xchg
mov
inc
shrb
scas
dec
out
flds
insl
jo
mov
into
lret
iret
outsb
enter
std
add
jmp
outsl
ss
and
add
in
or
pop
lahf
cmp
add
test
cwtl
into
test
mov
or
pop
mov
jp
fistl
loopne
mov
lods
inc
inc
mov
push
xor
mov
std
mov
int
mov
mov
mov
hlt
adc
loopne
and
or
daa
imul
test
lods
cwtl
iret
or
push
sbb
pop
repnz
mov
in
mov
xchg
xchg
cwtl
aam
pop
mov
sarl
mov
clc
mov
cld
dec
sarl
jle
outsb
sub
cmp
fcomi
dec
in
vmwrite
out
xchg
shlb
movsb
rcrl
mov
jle
loopne
mov
mov
lahf
ret
xor
out
lret
fimull
or
jns
daa
push
scas
xchg
xchg
mov
cmp
or
scas
int3
mul
dec
jl
xchg
sahf
sub
cld
loop
add
xchg
cmp
addb
lock
loope
inc
leave
dec
je
xchg
inc
xchg
test
adc
nop
dec
mov
je
leave
andb
xor
bound
push
mov
popa
or
into
jmp
sbb
cmp
or
mov
mov
mov
outsl
data16
lahf
std
std
aam
dec
cmp
iret
and
aam
sbb
adc
es
mov
dec
cmp
outsl
pop
add
stos
rorl
fstps
mov
push
mov
iret
int
mov
inc
test
movsl
int3
jns
xchg
cmpsb
mov
and
xchg
in
aas
add
jle
xor
shlb
dec
jmp
and
leave
js
sbb
add
sahf
mov
imul
notb
or
pop
push
dec
push
jg
gs
mov
rcrl
cmp
sbb
imul
test
push
sbb
or
scas
push
mov
aaa
sar
test
lret
mov
xor
pushf
jl
xchg
pop
call
dec
and
xor
xchg
inc
popa
dec
xor
imul
incl
fldt
mov
pop
jno
pop
adc
sbb
inc
testb
sti
jns
xor
fisubl
xchg
fildll
xchg
jbe
add
loop
mov
jne
adc
cs
lods
xchg
jp
and
popa
mov
push
pop
mov
mov
mov
xor
push
out
gs
add
lcall
gs
jbe
push
cld
mov
in
sub
jl
xchg
rolb
jl
pusha
inc
out
push
or
or
lock
inc
jg
sbb
pinsrw
or
stos
daa
std
loop
dec
outsb
push
push
dec
loopne
bound
rcll
imul
sbb
push
jle
inc
xor
insb
lds
aam
ret
dec
dec
cmp
push
mov
xor
xchg
xchg
testb
cmpsl
lcall
data16
enter
jg
mov
rep
mov
lds
mov
hlt
test
xchg
test
cli
cmp
cmc
mov
imulb
and
scas
and
icebp
xchg
test
mov
add
lret
aam
cli
insl
xor
xchg
in
aas
jns
cli
pop
xchg
xorl
jecxz
shlb
mov
lret
in
jno
icebp
shlb
inc
es
push
dec
repnz
or
xor
push
mov
std
or
call
ret
loop
outsb
xchg
repz
mov
mov
call
sub
filds
enter
loopne
les
jns
xlat
aam
ja
dec
les
or
jecxz
aas
hlt
jo
imul
andb
ficoml
xor
add
sbb
xchg
cmp
sbb
dec
andl
shlb
xor
clc
xorl
imul
inc
pop
mov
fcomps
push
dec
mov
xchg
jnp
sbb
imulb
push
stc
unpcklps
xchg
and
mov
js
jmp
xchg
inc
inc
pop
or
xor
stos
adc
repnz
jp
mov
and
subl
mov
es
cltd
xchg
xor
push
test
push
scas
sub
lock
adc
mov
adc
lds
iret
dec
sbb
lcall
dec
rcll
jle,pt
adc
mov
pop
out
jo
sahf
jo
lock
adc
test
mov
cltd
cmp
rcrl
test
clc
xchg
lret
adc
xchg
push
hlt
jno
shl
jo
decb
sbb
jl
cltd
lods
add
mov
sahf
mov
int
popa
jl
xchg
inc
idivl
fwait
pop
int
arpl
or
setne
in
subb
scas
pop
int
and
pop
stos
pusha
out
mov
jae
mov
xchg
sbb
jb
aaa
aas
call
adc
push
iret
sbb
outsb
add
enter
outsl
adc
add
cmc
in
cs
adc
or
mov
mov
insl
jmp
or
pop
pop
xor
jne
ljmp
aas
dec
cmpsw
add
shl
sub
dec
sbb
pop
mov
fwait
add
dec
scas
dec
int3
push
sub
leave
jnp
rcl
or
pop
adc
jmp
jae
dec
dec
add
sub
xchg
or
hlt
lock
adc
testl
mov
or
adc
popf
out
push
test
jl
jmp
stc
jecxz
cs
fwait
jbe
stc
loope
push
mov
rorl
stc
xchg
test
mov
sbb
mov
loop
insb
loopne
repz
mov
rol
push
lcall
popa
fmuls
dec
mov
push
enter
pop
iret
cmp
push
inc
pop
call
sbb
mov
scas
or
ja
outsb
jmp
sbb
dec
cld
add
insl
push
out
loopne
int
shrl
dec
jo
jecxz
fsubs
jecxz
icebp
pop
and
ror
scas
jp
ficomps
insl
enter
jb
sub
outsb
fbstp
jnp
inc
and
sbb
fisubrs
xor
sub
adc
adc
inc
mov
adc
mov
clc
inc
jg
xchg
mov
inc
xlat
pop
add
leave
lods
pop
fdivrl
out
stc
into
sub
rclb
jbe
mov
adc
pop
imul
pop
cmc
fstps
add
cmp
add
mov
cwtl
mov
xor
mov
pop
ja
sub
sbb
fs
xor
push
pop
mov
leave
shrl
jmp
mov
or
std
mov
mov
mov
xchg
dec
add
cmpsb
mov
sub
push
loope
in
push
or
fisubs
setbe
xor
loopne
fimull
inc
mov
mov
fimull
sahf
loope
pusha
pushf
adc
inc
lahf
das
or
dec
movsl
add
inc
or
shl
sub
xchg
mov
data16
idivb
addl
sti
jae
cmp
lds
out
pop
aad
mov
lea
testb
insb
cmpb
lods
int
shrl
leave
mov
shr
fdivrs
daa
mov
mov
mov
dec
je
scas
cwtl
cli
insb
sub
aas
inc
pop
dec
cld
sbb
pop
add
in
pop
psubq
mov
or
test
lahf
mov
xor
sbb
mov
sub
gs
push
test
outsl
sub
std
xlat
sbb
jmp
push
jge
rcll
out
adc
lock
sar
mov
push
xor
mov
cmp
repz
or
pop
cli
cmpsl
ffree
repnz
arpl
xchg
aas
lock
jmp
dec
js
or
push
lret
push
inc
loopne
xchg
repnz
inc
mov
movsb
rorb
inc
jmp
lret
cmp
and
rcll
adc
mov
xorb
into
adc
mov
sbb
js
testb
loope
xchg
mov
adc
stos
insb
shll
adc
daa
adc
mov
mov
out
repnz
test
stos
jg
popf
pop
clc
cmpsb
arpl
mov
cs
test
sub
add
fmuls
mov
je
sub
gs
inc
movsl
xchg
iret
inc
cli
xor
negb
inc
sbb
cmpsl
rol
nop
adc
popa
mov
ret
dec
push
test
xor
pop
repz
insb
lea
push
fwait
aad
mov
rclb
movsl
mov
arpl
dec
adc
sbb
mov
call
lret
push
stos
mov
rorl
or
gs
dec
add
fisttps
dec
sahf
pop
and
outsl
imull
repnz
cmc
fmull
cmp
cli
push
lahf
outsl
shlb
sub
and
sbb
stos
or
movsl
inc
pop
mov
stc
ret
add
daa
inc
and
aaa
std
mov
ds
ret
inc
push
pop
bound
inc
sbb
sbb
inc
pop
mov
lock
and
xchg
sti
dec
xor
sbb
scas
stos
lods
and
out
lcall
daa
push
nop
jae
bound
push
jb
sbb
or
lods
fcomps
pop
push
sub
xchg
lret
mov
bound
js
add
sbb
inc
testl
in
mov
jne
mov
xchg
or
loop
xor
xchg
in
cli
sbb
adc
and
dec
sbb
pop
push
out
pop
insb
cwtl
pop
lahf
mov
loopne
std
inc
loopne
xchg
imul
sbb
mov
std
and
pop
fidivl
out
jle
xchg
pop
ret
sub
loope
mov
jbe
xchg
sub
repz
adc
mov
pushf
out
dec
add
stos
daa
shll
bound
outsl
sbb
jbe
clc
xor
lahf
aas
pop
mov
mov
jns
jb
push
mov
sbb
les
sbb
dec
xor
pmulhw
cmp
push
imull
scas
cli
cmpl
add
stos
add
inc
loope
insl
loopne
shll
xchg
and
jle
iret
popf
mov
lret
and
mov
jns
pop
ss
cmp
xchg
sub
xchg
mov
inc
sbb
cmc
mov
shlb
test
push
pop
lret
add
xchg
jle
and
mov
clc
push
xchg
push
mov
and
dec
insl
call
imul
dec
mov
jle
pop
sub
out
jbe
add
cmp
cmpsb
cltd
jg
add
mov
lret
mov
xchg
dec
loopne
cld
or
popa
daa
mov
pop
scas
mov
cwtl
xchg
lock
jno
int3
lods
pop
dec
fs
mov
fidivs
movsl
fbstp
dec
cmpsb
loop
lock
lahf
mov
or
stos
mov
mov
add
lods
mov
cmp
adc
add
repnz
sbb
popf
xor
mov
dec
or
lret
dec
lock
out
cmp
fisubrl
inc
push
pop
xor
or
aaa
push
inc
out
jne
dec
movsl
jge
sub
es
xor
jmp
xor
or
fdivp
jnp
cmpsb
pop
mov
jns
shll
outsl
leave
jne
enter
push
call
dec
mov
push
lcall
lret
cmp
mov
rclb
adc
pop
bnd
add
sub
aaa
sub
cmp
xor
mov
jo
mov
sbb
lock
xchg
adcb
cmp
xchg
call
pop
rolb
divb
test
pop
cmp
dec
pushf
pusha
sub
std
out
lds
sub
popf
add
int3
jno
mov
cmp
fwait
xorl
les
adc
add
das
push
scas
lret
fbld
test
push
cs
fsubr
sbb
cmp
and
mov
loope
push
jge
fscale
rcrb
stos
fmuls
inc
mov
pop
add
popf
pop
movsl
roll
loopne
aas
adc
loopw
pop
pop
jbe
in
dec
das
movsb
dec
lods
jbe
imul
jg
roll
jns
dec
adc
dec
nop
cmpsl
jns
std
arpl
xchg
xor
sub
xor
push
inc
jnp
xchg
push
jb
pop
sbbb
xchg
mov
xchg
sti
sbb
sbb
mov
notl
idivl
mov
lds
in
into
outsb
lret
jge
ds
push
loopne
lcall
inc
or
stc
jns
cmp
andb
add
out
pop
sarl
push
lahf
add
add
sbb
mov
adc
jo
xor
out
xor
adc
sub
mov
and
dec
imul
js
ljmp
inc
jne
aad
loope
and
xchg
jnp
outsb
int
lcall
subb
pop
cmpsl
fwait
cmp
inc
adc
inc
sub
xchg
or
adc
ret
inc
ret
mov
pop
pop
dec
fdivl
and
dec
and
call
ja
pop
iret
shrb
jne
push
ficomps
pop
movb
popl
xchg
pushf
sbb
dec
mov
pushf
test
sbb
jg
cmp
cmp
inc
rolb
insl
xchg
adc
pop
mov
jae
mov
aad
push
lret
cwtl
fidivs
ret
xchg
insl
push
inc
push
xor
xchg
sub
mov
out
mov
aaa
addl
mov
enter
mov
je
sub
jb
outsl
xor
and
mulb
mov
shl
mov
mov
push
test
or
xor
cmpsl
sbb
sbb
mov
in
stos
flds
out
mov
call
dec
cli
push
test
xchg
pop
out
jnp
stos
inc
mov
pop
inc
ds
sub
in
movsl
jno
jns
out
adc
daa
movsl
mov
fdivl
jmp
dec
rsm
into
fcoms
mov
clc
ds
pop
adc
and
pop
or
cmp
push
lret
adc
pop
adc
and
repz
rorl
ret
adc
fwait
rorl
mov
cmpsb
dec
testb
stc
mov
insl
xchg
adc
pop
mov
sbb
adc
jl
mov
and
sub
and
and
dec
test
pop
sub
gs
iret
add
mov
adc
sub
out
adcb
mov
repz
cmp
inc
add
cwtl
mov
sub
sahf
mov
jp
sbb
mov
xor
dec
mov
and
mov
bound
hlt
sbb
cwtl
jle
inc
xor
mov
mov
push
xchg
dec
jae
inc
fadds
pop
das
jns
hlt
xchg
ds
and
mov
xchg
pop
mov
jmp
loope
ss
lahf
shll
popf
aam
ljmp
insb
sbb
outsl
adc
inc
push
inc
mov
call
test
jg
ror
mov
test
dec
add
push
cld
cwtl
pop
inc
insb
mov
cs
ret
dec
in
sub
aaa
fwait
push
aas
jmp
hlt
enter
sub
and
loopne
aaa
xchg
or
xor
mov
push
in
cs
add
cltd
add
pop
dec
mov
cmp
fbld
cs
fildl
or
pop
mov
into
adcl
dec
cmc
adc
or
sub
bound
cmovs
lock
loopne
icebp
mov
fsubrs
add
shr
xor
push
xor
sbb
enter
decb
aam
cmp
dec
lea
js
insb
cltd
xchg
jg
stos
xchg
jecxz
inc
dec
mov
inc
fmuls
pop
dec
adc
scas
sti
jo
and
lock
dec
out
add
mov
inc
fidivs
bound
outsl
mov
add
imul
pop
jnp
dec
inc
push
fistpl
dec
fwait
dec
adc
dec
push
push
mov
sub
lds
adc
fldt
cmp
movsl
sti
insb
pop
jecxz
jle
out
call
push
cmc
into
std
repnz
pop
aad
xor
xor
xor
jg
mov
roll
fstps
shlb
fs
leave
push
shll
adc
and
or
clts
and
sar
jae
aaa
xor
dec
jge
xlat
jp
xor
gs
das
inc
mov
xor
pop
test
push
mov
repz
sbb
pushf
dec
scas
mov
mov
sub
sbb
dec
xchg
sbb
orb
incb
sbb
and
les
cmpsl
data16
pop
pop
xchg
popf
scas
orl
push
in
or
popf
jg
pop
aad
xchg
push
pop
xor
add
mov
fs
jp
push
inc
les
data16
sti
daa
mov
mov
sub
arpl
dec
xchg
mov
push
movsb
mov
test
idivl
enter
or
mov
paddd
std
into
sbb
mov
incl
les
jnp
jbe
sbb
adc
mov
mov
inc
xchg
repz
mov
ss
push
mov
mov
mov
push
xchg
lcall
lods
mov
mov
xor
xor
sar
bsr
mov
sub
and
mov
les
push
and
arpl
shrb
mov
imul
andb
push
cmp
add
sub
or
inc
movsb
push
dec
push
cmc
mov
idivl
adc
mov
sub
cmc
int
dec
nop
cmp
stos
ja
sbb
rolb
jecxz
jo
loopne
incb
cmpsl
lea
sub
fwait
xchg
aad
fidivs
adc
mov
dec
pushf
lods
stos
or
cmp
stos
decb
mov
mov
jo
xlat
pop
sbb
lea
jne,pn
in
out
loopne
gs
xchg
xor
mov
mov
mov
test
mull
cmp
jne
mov
fldl
repnz
and
cli
imul
sub
adc
iret
ljmp
inc
mov
clc
inc
lods
jle
sub
and
xor
insl
ret
sbb
repz
lret
xchg
mov
xchg
xchg
and
and
fxtract
int3
sbb
mov
pop
sarb
popf
fs
mov
mov
mov
pop
rorl
sub
xchg
outsl
ja
pushf
aaa
fwait
mov
mov
mov
cli
jo
gs
xor
fldenv
fiaddl
je
jp
cmpsl
js
xchg
inc
mov
push
fstpt
pop
and
aas
and
sbb
fsubl
ja
std
popa
cmp
int
sub
mov
jle
mov
lcall
jns
adc
int
mov
dec
mov
or
aas
mov
push
inc
fwait
das
in
lcall
loope
stc
enter
and
cmp
nop
sbb
addr16
daa
mov
enter
xchg
or
dec
es
stos
mov
hlt
mov
cmp
cmpsb
inc
dec
sub
scas
test
cld
fmuls
or
cmp
xor
outsb
daa
inc
ficoml
and
jno
jmp
nop
inc
lods
aas
jae
mov
mov
adc
mov
dec
sub
fst
cmpsb
dec
mov
sbb
ss
jne
jns
clc
sub
cltd
sbb
mov
loopne
pop
sti
dec
clc
adcb
mov
mov
fsubr
push
push
fsubs
cmpsb
mov
loop
in
insb
inc
into
in
pusha
shl
push
popf
imul
jne
not
pop
stc
jl
adc
stc
ljmp
pop
push
pop
fstpl
add
sub
out
rcrb
sub
inc
or
push
lods
dec
xor
cmp
or
xchg
subb
in
fbld
fildl
jecxz
mov
test
out
sahf
and
cwtl
xorb
adc
sub
lock
arpl
movsb
pop
ja
sub
sbbb
js
jno
stos
fcmovnbe
sbb
adc
and
insb
pop
xor
or
pop
out
lods
jmp
les
repz
push
sti
es
fnstenv
sti
insl
scas
sub
mov
in
sub
jmp
sub
mov
iret
in
jnp
inc
jae
xor
jmp
inc
push
mov
popa
pop
inc
push
or
sti
out
mov
cmp
cmp
and
stos
dec
imul
jle
jge
add
adc
cmp
in
imul
mov
push
sbb
sub
mov
insl
cli
mov
movsb
inc
xlat
imul
scas
xchg
lds
and
cli
push
iret
or
in
xchg
shlb
in
mov
pop
ja
jb
int3
jmp
je
daa
xchg
les
aad
pop
sub
jp
lods
aam
lahf
sbb
sub
jbe
jmp
pop
mov
xchg
loopne
jbe
loopne
push
adc
rorl
pushf
or
sbb
popf
fidivs
add
lcall
jno
sbb
sub
xor
imul
mov
test
lods
sbb
add
repnz
inc
insl
inc
push
or
lret
popf
xchg
inc
xor
popf
stos
mov
push
and
and
xor
into
test
int
jecxz
sbb
xlat
or
loope
push
ret
lds
fistps
jb
mov
cwtl
push
in
daa
xchg
das
push
pushf
inc
push
fldcw
cli
inc
outsl
cmp
xor
ja
lods
aaa
jle
lock
xorb
out
add
aaa
pop
ficoml
ja
nop
jnp
add
imul
xlat
sar
jmp
mov
lods
jo
cld
nop
pop
stos
imulb
out
and
adc
daa
imull
dec
dec
addr16
mov
andl
popa
push
xor
es
scas
into
fs
add
lods
jnp
jmp
movsl
fwait
push
mov
imul
xor
push
xor
dec
data16
adc
stos
push
loopne
mov
jp
leave
loop
mov
rclb
pop
mov
xor
add
and
mov
pop
add
fnstsw
pop
outsl
icebp
mov
add
mov
lods
popa
cli
pop
pop
add
jno
arpl
in
pop
fnstcw
lods
dec
aad
push
mov
jno
jmp
mov
lds
rol
add
push
repnz
sbb
push
adc
mov
xchg
xor
imul
leave
imulb
adc
xchg
std
mov
ret
jo
or
pop
mov
divb
jge
lcall
pop
cmp
cli
lods
mov
xor
cmpsl
lahf
test
loopew
sub
xor
or
jno
push
aad
stos
sub
and
add
js
lods
mov
push
mov
bound
mov
imul
push
ret
jns
aas
movsb
mov
ja
addr16
sub
add
sbb
mov
sbb
orb
xchg
pop
mov
ret
lret
sti
sub
in
jns
and
fbstp
cmp
in
leave
cmp
jbe
les
sub
mov
dec
rorl
inc
test
lea
outsl
jno
xchg
pop
xor
loopne
out
rol
loope
pop
sarl
pop
ficompl
xchg
lret
push
cwtl
xor
add
icebp
mov
push
mov
cwtl
cmp
leave
test
dec
frstor
inc
jmp
or
push
push
lds
mov
jmp
rcll
loop
rorl
or
xchg
xor
aad
dec
mov
std
xchg
mov
mov
enter
das
jmp
aam
inc
cs
adc
sbb
hlt
ljmp
add
mov
push
dec
xchg
or
test
insl
adc
mov
popa
inc
push
lock
imul
cmp
hlt
imul
mov
outsl
adcb
pusha
jns
popf
xor
xor
xchg
jp
sub
dec
mov
adc
inc
cmp
mov
inc
sahf
scas
inc
pop
mov
lods
or
aad
lods
lret
pop
data16
cmp
subb
sbb
sbb
push
push
shll
mov
rcll
xchg
repnz
adc
lock
jp
inc
idiv
imul
negb
jmp
sahf
lds
inc
stos
cmpsl
stos
in
pop
inc
xchg
les
cmp
lcall
fsts
xchg
add
mov
jae
fbstp
inc
or
cmp
nop
pushf
sbb
pushf
cmp
roll
adc
test
jmp
into
imul
shll
test
push
lcall
in
rorl
out
test
es
cli
mov
or
pop
leave
dec
or
daa
sbb
aad
cmp
sub
mov
data16
mov
shlb
xchg
pop
pop
into
std
push
add
jle
ficoms
pop
in
cltd
lods
add
sbb
mov
enter
xchg
adc
jp
in
in
sbb
hlt
or
pop
call
iret
aam
fsub
cmp
pop
pop
call
xor
xor
sub
xchg
cs
xor
or
jecxz
loope
cmp
mov
or
jecxz
popa
outsb
jg
dec
mov
inc
cld
in
add
pop
sarb
cmp
pop
ljmp
adc
adc
push
mov
push
shll
shll
xchg
pop
test
or
cltd
pop
mov
adc
je
into
xchg
mov
pop
scas
dec
inc
lahf
int
imul
mov
cmpsl
mov
jecxz
cmp
xor
scas
pop
fdivrs
cmp
cld
dec
hlt
pop
in
xlat
xchg
aad
loop
shlb
imull
or
out
lcall
xchg
aam
jecxz,pn
sub
mov
arpl
test
mov
or
stos
dec
aas
xchg
inc
push
xchg
repnz
movsb
jns
fistpl
jg
sub
cs
test
jmp
xchg
sbb
mov
xchg
decb
dec
jbe
repnz
sub
mov
jb
xchg
sbb
dec
imul
mov
add
mov
mov
lds
inc
lods
xchg
mov
jne
mov
enter
mov
mov
mov
sub
add
mov
and
ja
cld
int
insl
mov
nopl
mov
int3
xchg
dec
mov
insl
shrl
mov
mov
xlat
pusha
or
clc
rorl
or
lcall
cmp
and
out
outsl
lret
inc
xchg
add
xorl
mov
cmp
icebp
insb
pop
hlt
lret
loope
pushf
lods
sbb
mov
cmp
into
jecxz
out
mov
push
adc
ljmp
dec
shrb
imul
and
in
adc
adc
mov
pop
fsts
adcb
dec
jo
scas
or
shll
lea
cmpsl
mov
jg
push
dec
dec
jne
sub
add
jnp
inc
imul
lret
dec
cmp
mov
test
jp
mov
pop
es
scas
jl
cmp
dec
in
jecxz
xchg
cmpsl
insb
xchg
dec
leave
gs
sub
addr16
dec
fnclex
test
mov
xor
cltd
jb
lret
xor
sbb
mov
sarl
or
or
push
ss
dec
rcrl
movsb
push
sub
aam
ljmp
inc
aas
xor
cmpl
and
jl
aas
adc
mov
fstps
into
mov
out
inc
clc
ds
dec
sbb
inc
scas
jbe
sbb
lods
and
sub
lcall
xchg
xchg
mov
inc
sub
out
adc
ss
add
fildl
push
inc
inc
sarb
pusha
cmp
pop
cmp
xchg
inc
bound
push
push
dec
scas
mov
adc
clc
call
inc
cwtl
inc
test
adc
insb
fsubr
dec
insb
or
pop
sub
xchg
inc
test
pop
adc
xor
dec
arpl
shlb
push
dec
inc
sar
mov
out
cmpsb
fildl
imul
imul
xorb
mov
mov
or
pop
jno
jmp
pop
pop
iret
dec
push
std
cld
ds
xor
pop
add
aas
mov
fiadds
sub
mov
cmp
xchg
mov
lcall
cli
add
aam
xchg
cld
and
mov
ret
les
jecxz
lret
cmp
fmuls
lods
fnstcw
in
inc
ds
enter
daa
and
jmp
out
mov
shrb
mov
adc
sub
sub
mov
adc
aaa
gs
js
loopne
mov
insl
mov
popf
sbbb
cmp
stos
cmpsl
pop
clc
mov
lods
cltd
fwait
xchg
imul
ja
loope
pusha
imul
inc
fwait
shll
clc
leave
dec
jp
loop
add
lret
lods
gs
fiaddl
bswap
inc
adc
aas
push
pop
hlt
movsb
fsubrs
add
sbb
xchg
pop
shrb
xchg
loope
xchg
lea
mov
icebp
push
fcmove
push
sahf
cmp
lret
push
sbb
fsubr
fsubs
addr16
sub
out
add
rclb
mulb
stc
mov
push
int
mov
push
pop
add
inc
jecxz
icebp
aad
out
jo
inc
inc
es
xor
dec
dec
push
jmp
cmc
std
cli
inc
aaa
pop
xor
rclb
adc
xchg
cmp
cmpsl
fwait
mov
pusha
mov
pop
add
popl
xor
lret
outsl
cltd
jbe
and
les
lret
js
gs
inc
aad
sarl
stc
enter
adc
mov
and
adc
dec
jo
push
sti
sub
jae
sahf
insb
mov
sbb
adc
push
jo
add
lea
cmpsb
jo
repz
test
addr16
test
adc
mov
mov
addl
sbb
xlat
jno
add
js
inc
jbe
and
jl
sti
shll
mov
addr16
jns
leave
xchg
mov
rcl
push
and
fprem1
pop
lods
adc
jns
shrb
stos
scas
jge
test
sub
jbe
pop
dec
lea
test
xor
es
push
loope
xchg
xchg
notl
data16
out
stos
pop
jnp
in
shlb
inc
incl
cwtl
sub
cltd
adc
mov
fdivrp
adc
and
test
jl
cmp
add
imul
mov
xor
fdivp
jg
inc
pop
push
int3
dec
fsubrs
sahf
push
dec
and
sti
sbb
adc
mov
push
xor
fadds
sub
pop
mov
int
ret
das
rolb
rorb
or
or
and
jae
add
iret
nop
pushf
and
push
jg
or
mov
jge
cli
ds
jne
sub
adc
call
xor
or
shrl
ja
cmp
popl
daa
je
lcall
fisubrl
sbb
push
fs
test
icebp
jae
or
push
lahf
mov
and
mov
xor
jp
mov
rcll
cmp
push
out
pop
mov
and
sub
stos
mov
cmc
jae
adc
mov
xchg
mov
lahf
adc
and
mov
stc
outsb
xor
arpl
test
sahf
or
lahf
xor
notl
clc
test
cld
mov
jg
lea
mov
test
sub
mov
and
leave
xchg
cmp
ds
shrb
data16
add
andb
push
cmp
stos
out
in
mov
mov
jge
decl
test
and
sub
test
fs
in
test
loopne
xor
das
mov
movb
es
shll
addb
subb
inc
cmp
and
and
dec
pusha
jecxz
mov
jae
addl
cmp
push
xlat
add
xchg
jmp
mov
repnz
mov
cmp
insl
inc
push
cmc
leave
in
fldenv
jbe
push
push
xchg
and
adc
sti
dec
arpl
ljmp
icebp
lcall
fnstsw
mov
sub
fidivrs
imul
mov
ror
adc
stos
loop
daa
pop
mov
andb
aad
lods
cmpsb
add
out
and
sub
shrd
mulb
scas
loope
insl
repz
inc
cmp
push
add
inc
aas
push
and
and
sub
test
sbb
inc
push
and
movsb
and
outsl
pop
dec
push
in
cmpb
dec
adc
inc
js
mov
loopne
insl
sub
stc
imul
outsb
xor
sub
or
clc
mov
adc
dec
aad
loop
inc
popf
movsl
dec
lods
and
pop
sub
push
mov
icebp
imul
fcmovnbe
lea
mov
outsb
rcrl
outsl
clc
inc
test
andb
jmp
push
hlt
or
xlat
adc
addr16
lods
dec
pop
add
mov
jle
cltd
adc
sbb
in
lret
dec
mov
cmp
xchg
sub
and
rol
into
add
test
sbb
data16
lret
inc
mov
aas
pop
int3
and
xor
inc
mov
pop
mov
xchg
out
sub
ret
ret
scas
push
inc
push
mov
mov
xchg
adc
out
cmp
stos
cmp
mov
es
daa
insb
lretw
sbb
push
jp
fsubl
jns
add
neg
add
jb
cmp
ja
cli
cmp
shll
dec
fsubr
dec
in
lds
add
mov
sbb
sbb
jp
and
jle
inc
mov
ret
mov
xchg
pop
inc
add
sbb
clc
xchg
dec
mov
jnp
es
dec
arpl
jmp
fisubrl
aaa
fcmovnu
xchg
movsb
sarl
out
ds
cmp
xchg
and
xor
bswap
mov
out
sbb
or
mov
popa
pop
popf
xor
mov
shlb
push
fsubrs
inc
lret
pop
mov
mov
ds
inc
sbb
xchg
ret
push
and
jo
dec
mov
pop
sti
cs
fisttpll
push
or
jne
inc
out
dec
mov
test
pop
in
sbb
lret
mov
sbbl
xorl
jp
fs
pop
inc
popa
sub
test
ret
into
xlat
push
cltd
and
loopne
or
mov
cmpl
xorl
loop
int3
daa
push
orl
cmpsb
pop
cmp
mov
rorb
lock
out
stos
outsb
xor
hlt
adc
cld
test
cld
push
sarb
mov
or
mov
popa
dec
test
es
jo
dec
mov
cli
xchg
push
out
popa
movsb
aam
test
outsl
cltd
sbb
inc
and
scas
bound
lods
inc
js
add
or
jmp
xchg
jne
ljmp
subl
inc
xor
xchg
push
fdivrp
add
cli
or
aad
jp
push
adcb
mov
fisubl
lods
fnstcw
mov
dec
sbb
add
adcb
stos
ret
dec
test
push
or
jge
jbe
in
jl
or
aam
dec
jnp
mov
fisubrl
std
cwtl
mov
lods
cmp
or
scas
cmc
ja
ja
dec
cmp
xor
aas
and
mov
dec
inc
cld
ret
mov
mov
cmp
dec
popf
rolb
stos
pop
sbb
std
cli
in
and
into
movsb
ja
and
xchg
out
inc
les
nop
cmp
sub
aas
pop
enter
pop
iret
shll
jns
out
xor
mov
ret
inc
and
popf
ret
icebp
orl
add
dec
push
cli
insb
test
outsb
cmpsl
cvtpi2ps
jg
scas
push
mov
jb
sbb
cld
push
jo
stc
enter
or
cmp
cli
dec
pop
ret
cmp
stos
jbe
popa
popl
adc
adc
push
rcr
cmc
push
jmp
and
pop
xchg
cmp
xor
sarl
jl
cmpsl
inc
mov
jne
or
jbe
mov
pop
inc
pop
xchg
jae
jecxz
inc
stos
or
lahf
push
xchg
mov
or
add
pop
fists
out
mov
mov
les
push
pop
test
nop
hlt
push
test
push
outsl
popa
pop
mov
psadbw
adc
cmc
daa
js
cmpsb
xchg
jmp
and
test
mov
jne
push
ret
js
push
cmp
xor
sbb
ficoms
movsb
js
add
pop
add
int
call
cld
mov
push
pop
mov
push
fstps
xchg
xchg
out
dec
add
jecxz
je
dec
sub
sub
jbe
mov
sbb
dec
movsl
lock
push
add
pop
aam
pop
jns
aaa
push
fistpll
xchg
push
loop
jne
and
mov
add
ret
add
lods
in
and
aad
push
cmp
inc
out
aam
sbb
xor
cmp
add
sub
or
xchg
cmp
xor
sub
xor
cmp
fildll
bound
mov
lret
test
sub
or
dec
jl
inc
dec
and
pop
inc
pushf
into
inc
es
push
dec
jnp
push
sbb
enter
push
ja
lock
and
scas
leave
cld
out
icebp
and
sbb
fcoms
push
ss
fmull
dec
lds
stos
cmpsb
adc
sbb
iret
and
or
inc
fwait
or
or
into
fdivr
shrl
test
adc
mov
cwtl
xor
mov
or
daa
cwtl
cmp
idivb
cmp
dec
mov
sahf
cltd
xor
clc
add
xchg
nop
adc
push
idivb
scas
inc
js
pop
push
aam
push
xchg
add
pop
xor
push
dec
and
xchg
enter
fisttpl
xor
push
imul
xchg
orb
ret
add
add
add
dec
xchg
ret
pop
out
mov
mov
test
add
ret
xchg
mov
repnz
ja
push
fucomi
das
sub
aaa
xchg
fimull
popf
iret
mov
pop
jecxz
dec
sub
sbb
xchg
dec
pop
mov
aam
pop
dec
nop
xor
or
insl
test
mov
xor
pop
movsl
dec
shll
das
fcmovnb
sub
dec
xchg
mov
ficomps
ss
adc
or
push
and
push
adc
fwait
insl
adc
push
pop
cs
or
lds
pop
dec
andb
and
outsb
pop
jle
testb
mov
subb
call
mov
cwtl
dec
pop
sbb
adc
insl
jbe
lock
aas
jbe
dec
leave
lcall
xor
pop
rcrb
addl
lea
and
push
scas
and
out
sub
stos
in
cli
clc
sub
fwait
scas
frstor
fs
lds
push
stc
scas
bound
adc
sub
mov
jae
inc
cmp
mov
rcll
jnp
adc
fwait
push
out
push
mov
aam
mov
iret
lea
or
repnz
fucom
add
popl
sub
enter
mov
mov
jns
mov
pop
xchg
insb
movsl
test
xor
sub
mov
mov
push
in
lods
inc
mov
scas
iret
mov
pop
inc
dec
push
popa
fildl
mov
pop
mov
jge
ds
sub
inc
lret
xchg
sbb
cs
int
fidivrl
adc
and
mov
fs
pop
pop
or
cli
mov
repnz
dec
cwtl
mov
into
std
ds
dec
insb
push
mov
xchg
movsl
andb
mov
inc
mov
sbb
xchg
imul
dec
adc
dec
inc
jne
mov
mov
pop
test
int
or
ss
mov
add
sub
daa
push
je
stc
adc
scas
push
mov
dec
repz
mov
ror
stos
rcrl
mul
dec
or
inc
scas
push
pop
and
jp
adc
cld
push
ja
and
or
inc
hlt
push
pop
or
xchg
ja
xorb
push
push
fwait
outsb
inc
inc
mov
push
push
inc
rcrl
loope
add
inc
inc
cld
xor
loop
cmp
sarl
sbb
out
mov
mov
in
add
cmpsl
xchg
ds
stos
inc
repz
sub
or
mov
add
cli
mov
les
sbb
or
js
and
leave
nop
jae
aaa
mov
in
lods
inc
mov
add
das
cltd
xchg
fdivrl
repz
pop
or
dec
cmc
xchg
test
add
add
stos
push
mov
pop
sub
inc
fs
cld
rcrb
cltd
xchg
mov
call
pop
neg
pusha
stos
jecxz
sbb
negb
xchg
dec
into
sub
ret
fdivr
shr
and
jae
push
mov
aam
inc
rolb
add
adc
mov
sbb
gs
fldt
jp
and
call
ret
ret
push
mov
outsl
sbb
sub
aas
or
mov
out
inc
cli
loopne
push
iret
or
aaa
cmp
cmp
jge
adc
push
xchg
mov
push
enter
lcall
js
cwtl
sub
push
repz
mov
cld
clc
cs
fisubrs
sahf
js
les
dec
mov
sub
test
popa
fwait
mov
dec
cmp
sub
dec
push
test
sub
scas
and
notl
sbb
loopne
bound
fimull
mov
ss
xor
xorl
add
fnstenv
inc
mov
mov
out
repnz
icebp
jno
add
addr16
mov
mov
jb
cmp
fstpl
cltd
loope
push
es
jl
dec
insl
fnstsw
inc
push
inc
and
sbb
shrb
inc
xlat
and
or
inc
inc
push
std
sbb
stc
fs
xor
gs
loop
and
rorl
sbb
in
mov
stos
imull
sbb
scas
push
ljmp
sbb
push
dec
push
sti
int3
in
lret
test
sti
popa
idivl
dec
mov
cmp
test
in
adcb
dec
gs
mov
sbb
shll
cwtl
xchg
jmp
in
clc
rolb
cmp
popf
push
sbb
sbb
dec
adc
adc
jle
out
sbb
sbb
pop
ljmp
xchg
test
add
enter
fwait
xchg
test
leave
inc
cmp
das
jno
push
inc
dec
aad
push
xor
sub
cmp
cmp
mov
dec
ljmp
inc
pop
adc
ja
cwtl
sbb
pop
ljmp
xor
inc
int3
sbb
lock
sbb
and
and
dec
jnp
add
xor
cmp
jo
into
jbe
pusha
xchg
adc
add
enter
inc
jbe
testl
pop
mov
ret
pushl
mov
sbb
jl
pop
and
push
sarb
fwait
jg
cmpsl
mov
iret
cmp
pusha
or
lods
repnz
cmp
insb
insb
fbld
call
mov
inc
daa
sbb
aas
popf
sub
pop
or
adc
int
fs
ljmp
push
add
outsb
pop
push
cwtl
adc
out
xchg
pop
icebp
or
push
lret
popa
jmp
xchg
movsb
lahf
arpl
enter
jae
cli
fs
nop
dec
lods
xor
mov
pusha
test
inc
cmp
fists
or
imul
ljmp
cmp
or
ror
and
and
xchg
repz
pop
sub
arpl
scas
inc
pusha
pop
pop
jg
cmp
inc
push
mov
lock
xchg
fsub
xor
in
ret
popa
xor
add
lret
mov
mov
jmp
out
fnstsw
add
inc
loop
insl
loope
lret
add
decl
xor
cmp
dec
sub
pop
sbb
icebp
push
lret
jmp
sbb
sahf
sub
dec
xchg
push
inc
addr16
jg
add
sub
sbb
inc
push
mov
xchg
lds
xor
movsl
sahf
ss
idiv
popf
pop
and
sarl
daa
inc
outsb
mov
xchg
pop
out
shll
shlb
mov
dec
imul
pop
dec
add
stos
addb
add
sub
loope
pop
push
mov
ds
out
and
jae
sub
and
jbe
shlb
out
lods
jecxz
aas
push
xor
lods
push
shll
aad
testb
push
enter
push
in
jle
or
sub
aad
iret
jg
and
in
rcr
xlat
mov
test
fwait
iret
cmpsb
in
negb
push
inc
dec
mov
mov
mov
pop
mull
sbb
fwait
pop
xchg
je
shll
repz
test
in
imul
jl
inc
icebp
xchg
pop
xchg
add
int
stc
mov
lods
push
leave
leave
mov
addr16
cld
push
cmp
dec
xor
daa
aaa
and
push
xchg
dec
call
pop
fs
pushf
call
out
jae
and
mov
imul
in
mov
aaa
out
gs
fadds
in
inc
daa
jb
jge
dec
push
fbstp
sbb
push
lds
dec
testb
push
test
cmp
cmpsl
adc
mov
pop
popa
mov
loope
lret
leave
insl
adc
std
rcrl
dec
clc
cmp
imul
incl
xlat
and
adc
ret
pop
sub
pop
sti
pop
dec
dec
pop
mov
xor
mov
andb
cmp
imull
arpl
mov
jo
sub
ret
or
cmp
add
xchg
decl
pushf
dec
dec
arpl
jge
push
mov
push
cltd
mov
inc
les
dec
lahf
nop
popa
pop
in
sub
arpl
xor
pushf
xchg
out
xchg
sbb
inc
and
ficoml
pop
mov
testl
inc
je
mov
dec
aaa
or
js
jae
in
lods
icebp
ljmp
mov
into
push
mov
out
lds
jg
push
lret
pop
cmp
int3
les
out
cmp
mov
cmp
push
pushf
xchg
fistpll
pop
push
dec
or
mov
xor
pop
jnp
das
stos
das
xchg
mov
test
imul
dec
sub
arpl
divb
std
jno
rcr
push
mov
loope
loope
ret
or
lods
and
push
test
push
bound
or
mov
xchg
stos
out
inc
rcrl
inc
push
lods
outsb
mov
cmp
inc
js
jmp
pop
movsb
mov
cli
cmpsb
les
rcrl
dec
lret
xchg
cmp
mov
cld
push
lcall
out
mov
cwtl
das
cmp
ds
xchg
lahf
push
mov
adc
gs
or
aad
aad
mov
cmp
in
lds
pop
or
pop
sbb
xchg
sub
and
xor
loop
mov
mov
mov
sub
lods
xchg
pop
bound
outsl
jge
pop
or
stos
aam
rclb
int
xor
fdivl
dec
arpl
pusha
jnp
pop
mov
imul
add
jl
test
aad
xchg
cli
sub
adc
jo
inc
mov
in
movsl
pusha
sbb
inc
mov
jb
and
xchg
jmp
add
andl
xchg
outsb
lret
jmp
ror
popa
xchg
lret
clc
test
icebp
pop
jnp
add
lcall
jg
inc
jae
inc
movsl
add
clc
leave
clc
push
lret
sarb
aaa
mov
mov
scas
sbb
mov
mov
jns
icebp
jl
jo
jmp
push
aad
jl
mov
and
insb
leave
cs
xor
andl
dec
or
scas
and
push
insl
xor
xchg
subb
clc
push
iret
stos
nop
std
inc
in
push
les
and
jge
cmp
fisubs
neg
pop
out
xlat
xor
mov
push
mov
pop
ja
divl
mov
bound
je
iret
and
js
clc
cmpsl
movsb
pcmpgtd
cld
ljmp
xor
mov
jns
enter
jecxz
jecxz
aad
int3
pop
in
cmpsb
ja
fwait
sbb
ret
or
mov
mov
je
mov
mov
inc
mov
lock
dec
in
bound
mov
popa
push
and
insl
lcall
inc
cmpsb
sbb
sub
mov
clc
inc
mov
call
arpl
imul
sbb
dec
xor
mov
lret
test
enter
test
bswap
xor
dec
xchg
xchg
jne
loopne,pt
aad
push
pop
int3
je
and
push
fbstp
lods
jnp
push
shll
je
sub
mov
ficomps
adc
pop
out
adc
push
add
aaa
pop
jns
pop
icebp
repz
scas
add
sbb
ja
je
outsb
shl
mov
adc
hlt
push
shll
push
movsb
sbb
in
sarl
jno
jle
push
mov
jno
sahf
push
jb
insb
aas
jno
pushf
mov
dec
gs
xor
sbb
testb
mov
ret
in
pmaxub
fadds
outsl
flds
sub
scas
adc
scas
lret
xchg
jno
push
mov
fistpll
aam
movsb
dec
das
scas
addr16
fsubrp
je
orl
push
xchg
aad
fsubl
sbb
pushf
loope
push
addb
ja
jo
or
je
popa
jle
out
iret
mov
imul
into
hlt
pop
out
testw
testl
jecxz
divl
mov
inc
sbb
xchg
adc
stos
push
mov
stos
xchg
adc
dec
pop
icebp
pop
mov
sub
add
jae
pop
push
js
divl
out
inc
inc
sub
mov
push
sahf
ret
dec
mov
jbe
inc
sbb
or
pop
push
sbb
inc
leave
lds
inc
mov
fcoms
xchg
adc
cmp
mov
mov
pop
xor
iret
fbld
ret
dec
imulb
ss
jne
push
test
out
sbb
adcl
pop
mov
inc
xchg
push
xlat
or
sti
xchg
xor
jle
movsb
in
push
decb
dec
movb
and
pop
rcrb
jae
push
aaa
pop
xor
int3
fnstenv
pop
sbb
lret
repz
cmp
in
pop
jp
in
lret
push
addl
adc
pop
mov
fs
iret
dec
into
testl
int
adc
out
les
call
das
inc
sub
xchg
sbb
adc
push
shl
or
cmpsl
inc
cmp
push
jnp
pop
jmp
jne
xlat
pmaddwd
xchg
lods
jmp
js
jl
jle
nop
and
dec
stos
lcall
xor
adc
stos
inc
mov
adc
fadds
lock
dec
into
jecxz
mov
loopne
in
popl
cmp
popa
aas
std
sbbb
and
xchg
fbld
xlat
lahf
and
lea
cmp
adcb
xor
out
addr16
mov
push
pop
add
dec
xchg
insb
andb
loop
dec
jno
push
inc
dec
cld
dec
pop
jmp
mov
or
mov
dec
add
popf
sub
inc
inc
fbstp
pushf
adc
push
mov
mov
cltd
pop
mov
test
enter
imul
cld
push
push
or
mov
outsl
xor
dec
push
and
in
repnz
or
rcll
popa
sbb
add
mov
jno
xor
inc
insb
rolb
popf
leave
fsubl
in
and
fsubrl
aas
or
pop
jecxz
jg
lods
nop
jns
xlat
testb
popa
loopne
pop
or
mov
pop
jb
rclb
pop
jg
inc
lret
movsb
jp
xchg
je
ja
xorb
mov
jle
insl
dec
mov
cwtl
sub
add
push
add
das
leave
aam
outsl
dec
lret
lds
leave
addr16
mov
dec
adc
insl
xchg
rcrb
aas
push
or
jbe
into
xor
inc
pop
aas
and
jecxz
mov
popf
and
je
clc
insl
repnz
pop
fistpll
xor
lret
push
inc
dec
pop
sub
shll
jle
or
cmp
mov
sbb
mov
dec
lods
pop
cwtl
ljmp
jp
stc
mov
adc
pop
mov
sbb
ljmp
cmpsb
repz
pop
pop
xor
push
fstpt
gs
stos
xor
sahf
fdivrl
xchg
adc
mov
xchg
in
hlt
and
and
test
mov
mov
fwait
mov
leave
leave
outsl
mov
pop
pop
inc
addr16
das
cwtl
andl
ror
je
adc
mov
push
jle
int
xor
mov
dec
mov
mov
cmpsl
mov
inc
mov
fdivrl
xor
add
push
cmp
push
in
pop
fimuls
das
je
add
std
mov
lcall
cli
cmpsb
mov
rep
outsb
sbb
fs
mov
push
pop
push
xor
cs
enter
jnp
dec
mov
fildll
xor
std
cli
pop
or
call
iret
jb
stos
loope
inc
push
push
mov
fwait
add
mov
jge
or
mov
clc
xor
imul
mov
pop
out
repz
xor
push
insb
neg
lock
mov
sub
add
push
in
push
fldcw
mov
je
lds
xchg
inc
mov
mov
cltd
cmp
jno
andb
divb
bound
dec
dec
mov
or
inc
xor
inc
imul
test
cmp
mov
cmp
cmp
dec
lahf
fwait
movsl
lock
imul
sub
and
xchg
jp
loope
or
data16
pusha
je
addr16
stc
fsubrs
dec
lcall
cmp
sub
sbb
sbb
adc
insb
sti
dec
push
jo
sub
lds
fs
and
xor
mov
pop
adc
ljmp
lock
add
stc
fs
inc
iret
cmp
push
repz
xchg
add
lods
mov
pop
lods
mov
push
push
push
xor
imul
popf
xor
xchg
jle
jno
adc
sub
je
or
mov
fdivl
imul
sbb
imul
or
jb
sub
push
data16
adc
arpl
add
sbb
push
fistpl
in
ss
outsb
les
push
and
and
rclb
movl
pop
pop
icebp
inc
push
inc
movsl
xchg
push
cmpsl
scas
push
and
jg
or
fldt
inc
jmp
sbb
sub
sarl
xor
jne
into
cmpsb
adc
and
addl
mov
sub
xchg
jns
sbb
dec
mov
movsb
out
or
fstl
pop
adc
adc
int
and
fcoml
push
es
add
jl
mov
out
test
inc
cmpsl
mov
pop
fmull
in
gs
lds
sbb
pop
call
icebp
pop
in
subb
mov
push
add
mov
fimull
mov
pop
push
mov
data16
push
ret
je
pop
out
inc
push
adc
mov
add
insl
jp
or
mov
imul
je
fcoml
mov
xor
leave
aas
add
mov
pusha
inc
fmull
mov
test
xchg
add
adc
add
aaa
insl
sahf
filds
int3
dec
xor
out
jp
xor
out
rcl
popa
add
xchg
xchg
int
adc
out
cld
or
mov
das
outsb
pop
mov
mov
lods
sub
jns
out
popa
add
mov
lock
scas
loopne
out
aaa
push
cltd
sbb
sub
or
add
pop
adc
rol
pop
dec
sub
inc
aaa
adc
pop
rolb
mov
pop
adc
call
jecxz
insl
int
dec
pushf
out
jmp
mov
orl
loopne
pop
sar
scas
pushf
outsb
int3
in
sub
xor
in
mov
push
shrl
fcomps
inc
push
xorb
minps
xor
jo
jnp
bound
bound
or
mov
jnp
jl
jle
pop
pop
xchg
ljmp
cmp
popf
loopne
push
jecxz
into
push
into
sub
xchg
adc
xchg
insl
movsl
testb
dec
or
shll
pop
lods
and
mov
rorb
in
shrb
lret
mov
movsb
hlt
pop
imul
cld
fldt
repz
inc
mov
icebp
pop
ror
xor
mov
xor
and
or
dec
clc
rorl
pop
adc
push
pop
in
out
xchg
jne
pop
sbb
mov
lahf
js
ds
jo
pushf
mov
push
push
fidivrs
fucomp
fsubrp
mov
xor
cmpsb
mov
lods
aad
or
inc
aas
int3
or
in
mov
stos
lods
xchg
ljmp
leave
ficompl
les
add
movq
into
test
lea
outsb
mov
into
or
fcomps
push
das
inc
inc
dec
adc
cmpsb
icebp
pop
pop
or
adc
pop
mov
xchg
nop
call
subl
lret
push
mov
bnd
mov
sti
or
inc
outsl
jns
ret
push
dec
outsl
sbb
pusha
in
bound
push
jb
inc
push
cli
lea
loop
jle
das
dec
sbb
outsb
lock
pop
insl
stc
cmp
rolb
lock
and
repz
push
cmp
pop
out
mov
loopne
ljmp
stc
mov
inc
sub
cmp
add
sbb
push
int3
das
push
ljmp
mov
call
inc
jne
xor
mov
insl
insb
mulb
inc
jge
cmp
jo
jp
cmpsb
mov
jl
jg
pop
cli
mov
pop
sub
dec
outsb
jnp
and
sti
inc
mov
dec
cld
xchg
outsb
cwtl
pop
mov
scas
js
stc
jmp
add
push
in
cmp
xchg
lret
out
dec
hlt
cld
es
xlat
repz
aad
cmp
dec
xor
shlb
xorb
and
mov
xor
stos
js
jns
aaa
push
cld
ret
aas
out
dec
jns
pushf
orb
mov
dec
sbb
stc
cltd
mov
imul
arpl
inc
in
js
pop
jnp
cmpsl
cmc
shll
xchg
out
add
int
jg
push
sarl
xchg
mov
mov
addr16
mov
mov
es
outsl
mov
push
inc
sbb
sbb
popf
jo
mov
arpl
jmp
cmp
inc
stos
and
pop
call
lret
ss
je
sbb
mov
icebp
add
repnz
in
push
and
gs
pop
das
and
or
in
out
cmpsb
hlt
cmpsl
ss
stos
ss
add
lret
ret
mov
add
sahf
mov
inc
jg
lock
mov
int3
mov
call
adc
lods
inc
repz
movsl
jnp
mov
movsb
inc
loope
popl
test
test
cli
add
dec
adc
mov
xlat
scas
mov
xchg
mov
insb
sbb
dec
dec
sub
das
sbb
mov
jbe
jnp
int3
lock
rclb
or
daa
cmpsl
cli
imul
push
rorb
and
sbb
loope
lods
cmp
ret
mov
adc
cmpsl
ret
test
in
je
pop
cmpb
pop
pop
jmp
cmp
xchg
fdivrp
xchg
or
inc
orl
mov
dec
pop
adc
cmpb
cmp
bound
js
aaa
je
inc
mov
add
sarb
into
jl
pop
sub
adc
cmc
mov
xchg
mov
pusha
mov
jge
nop
dec
clc
fdivrl
mov
pop
pop
bndldx
sbb
stos
movsb
aaa
hlt
cmc
js
sbb
xchg
pop
cli
mov
inc
insl
mov
fbld
cmp
addr16
test
or
repz
mov
mov
jns,pt
push
adc
mov
js
stos
jb
jle
insb
mov
mov
imul
mov
xchg
icebp
sahf
xchg
les
pop
insb
xchg
ss
sarl
in
subb
outsl
test
in
hlt
cmp
push
or
test
mov
or
cli
into
mov
jp
add
cmc
cltd
jmp
and
dec
insl
push
or
ljmp
sub
aaa
enter
mov
adc
sub
push
or
stc
or
dec
addr16
push
jmp
mov
pop
inc
pop
loop
shlb
inc
iret
cmp
push
repz
repz
test
jbe
leave
testl
dec
cli
adc
cmpsb
repnz
ss
stos
jno
les
mov
outsb
es
or
loopne
dec
fmul
push
push
dec
mov
mov
sahf
mov
lahf
push
loop
xchg
xor
mov
pop
mov
jb
adc
mov
int
fwait
lock
dec
push
inc
mov
call
incb
es
jmp
adcb
loope
mov
ja
adc
sbb
and
arpl
lahf
fnstsw
mov
inc
cli
inc
aad
inc
mov
pusha
jnp
mov
push
and
divb
inc
int3
or
jnp
fcomi
inc
stos
mov
les
out
pop
and
jae
andl
std
test
jle
cld
dec
cmp
lcall
cmp
bound
sub
sbb
inc
mov
hlt
xchg
xlat
stc
inc
or
add
fcmovnu
cmpsl
sbb
pop
xor
mov
push
imul
ss
cwtl
ss
xlat
stc
outsb
pushf
out
frstor
or
cs
iret
mov
jno
enter
push
test
fcoms
leave
dec
mov
or
cmp
mov
cltd
xchg
push
outsb
scas
stos
loope
xchg
push
jne
cli
mov
add
cltd
inc
fisubs
push
push
jl
out
push
js
cmp
sarl
orb
ret
movsl
subb
add
imul
in
pop
push
fdivs
test
inc
jb
stos
sub
movsb
in
xor
mov
adc
loop
add
mov
loope
outsb
or
sbb
ss
repz
mov
aaa
xlat
add
inc
dec
daa
in
hlt
xchg
das
std
ja
out
push
inc
fcmovnbe
add
jb
sbb
pop
fistpll
adc
push
cmpsl
pop
insb
addr16
mov
pop
xlat
inc
dec
xchg
mov
inc
aad
sbb
lods
cld
inc
jmp
push
dec
add
push
sub
addr16
pop
mov
imul
push
loop
dec
add
adcl
out
out
lods
cmp
das
insb
jnp
jg
or
stos
xchg
ret
dec
test
adc
bound
outsl
pop
filds
outsl
popa
leave
add
sahf
cmpsl
repz
sbb
xor
xor
jmp
adc
sbb
outsl
jecxz
int
sub
jge
push
in
sahf
cmp
adc
jle
xchg
and
and
add
div
inc
stos
int3
mov
sbb
popf
inc
adc
bound
fnstsw
repnz
mov
pop
adc
mov
sbb
or
mov
xor
nop
inc
xchg
insb
jb
repz
fdivr
addl
enter
lods
sub
mov
adc
xor
or
and
and
and
lcall
and
xor
lods
lods
inc
aad
mov
jge
mov
jns
sbb
and
pop
cmp
in
lds
out
popf
sub
push
mov
fdivr
shrb
xchg
cltd
inc
out
test
sbb
jne
out
lds
bound
iret
sub
fcmovbe
push
pusha
adc
jp
clc
neg
mov
xor
bound
in
daa
xor
jnp
out
mov
inc
int3
imull
shrb
fldcw
cmp
xchg
mov
push
sahf
popf
inc
add
in
push
shlb
out
andb
icebp
mov
mov
inc
cmp
int3
ret
sahf
stos
test
adcb
cmc
xchg
loop
fucomi
xchg
cmp
pop
lret
add
lret
aaa
inc
cli
cs
mov
popa
add
push
cmp
pop
outsb
fs
fwait
xchg
sti
push
ror
sub
daa
das
xor
mov
es
mov
inc
xor
cmp
adc
sbbb
push
cmpsb
cld
sar
outsb
mov
adc
scas
cmpsl
xlat
scas
data16
jg
sbb
nop
add
add
outsl
sbb
and
scas
mov
es
mov
pop
std
sbb
mov
mov
test
imul
icebp
mov
sbb
push
pop
xor
push
lahf
dec
fs
xchg
outsb
psubq
pop
daa
mov
int
mov
xchg
repz
daa
rcl
stos
mov
aam
and
std
xor
mov
fwait
cmp
into
xor
xchg
aam
xor
popa
test
pop
jbe
fisubrs
push
xchg
andl
jno
mov
test
lock
mov
mov
sbbl
sbb
ds
in
cs
jbe
and
loope
aad
or
aas
mul
xor
add
jns
movsb
insb
inc
int3
push
test
mov
cmp
out
sub
test
cld
cmp
cmp
or
fildll
hlt
cmp
push
fadd
in
inc
dec
out
aad
sti
or
mov
jle
jnp
repz
sbb
lahf
jmp
pusha
movsl
das
sub
jns
sub
das
arpl
fs
fidivl
movsl
pop
loopne
pop
sahf
les
adc
dec
addb
ret
lods
rorl
mov
mov
mov
adc
std
sahf
fwait
imul
fistpl
jl
inc
fwait
inc
data16
pop
push
sub
cmp
push
add
sti
sub
adc
ds
sbb
push
push
pop
cwtl
sti
icebp
and
inc
mov
mov
mov
mov
jl
fidivl
int3
push
and
lahf
sbb
cmc
pop
in
xchg
aam
add
xchg
pushf
notl
push
out
pop
inc
adc
cli
lcall
add
and
mov
cwtl
cmp
leave
jno
stos
jb
push
push
rol
pusha
out
por
adc
imul
or
jmp
popa
xchg
jno
lock
jge
int3
adc
pop
in
fildl
and
push
aaa
inc
inc
push
add
arpl
jo
mov
scas
xchg
int3
inc
cwtl
inc
test
cmp
and
xchg
adc
test
ljmp
or
cmc
pop
sbbl
mov
insl
xchg
test
cmpsl
shrb
outsb
lods
sbb
icebp
mov
add
in
cmp
lds
call
scas
mov
imul
push
add
lahf
adc
sarl
test
xchg
in
movsl
xor
pop
add
adc
adc
and
pop
imul
or
test
mov
sub
xor
push
mov
jbe
jge
and
lea
fdivrs
pop
dec
cmp
inc
mov
data16
clc
adc
in
shlb
stos
negl
dec
sub
pushf
dec
cli
inc
sbb
roll
shll
xlat
dec
xchg
jge
inc
sbb
push
push
mov
fnsave
adc
shlb
cmp
es
mov
xchg
xchg
insb
fimull
mov
cs
jnp
jmp
or
cmp
xchg
jmp
mov
jl
add
inc
push
ret
ror
and
or
or
flds
mov
ja
or
jae
cs
subl
add
test
pushf
test
or
imul
jp
aam
mov
or
mov
shr
mov
js
dec
out
push
dec
pop
xchg
movsl
shrb
adc
inc
add
lds
lret
dec
rorl
roll
les
sti
pushf
jle
add
xor
aam
sti
xor
cld
sub
xchg
mov
dec
pusha
xor
sub
inc
cmpsb
jns
sbb
mov
mov
adcb
push
lods
adc
int3
or
sub
and
xor
push
mov
mov
inc
sarb
test
cmp
and
push
test
rorb
jnp
mov
inc
stos
hlt
insl
and
inc
sub
bound
or
add
jno
popf
adc
xchg
xchg
mov
jl
repnz
mov
adc
test
push
jle
sarl
fs
inc
test
jo
add
dec
jmp
ja
pushf
sub
cmp
sbb
pop
rorb
add
mov
inc
lret
pop
xorb
out
adc
out
lahf
sub
push
rorb
sbb
lods
xchg
and
in
les
test
std
mov
arpl
int3
lock
mov
push
lea
fidivs
inc
pop
push
mov
dec
lahf
xchg
aad
push
xchg
fdivrl
sbb
lea
aas
jmp
vhaddps
xchg
repnz
scas
pop
dec
xchg
mov
hlt
into
mov
fwait
cmc
xor
mov
mov
xlat
insb
fistl
cmp
pop
push
pop
int3
rcrl
push
int
insl
lahf
adc
mov
and
outsl
movsb
repnz
sbb
mov
bound
push
es
and
pop
das
js
cmp
sbb
cmp
push
repz
decl
clc
das
lods
int
clc
inc
pushf
ja
mov
sbb
lret
sbb
push
les
xorl
cmc
push
cltd
dec
in
insl
add
test
add
jmp
lods
ljmp
adc
fisttps
xorb
cmp
sbb
cs
sbb
loop
sbb
xorl
lods
scas
add
orl
jecxz
ret
scas
mov
icebp
fwait
pushf
popf
sbb
pop
or
lahf
xor
pushf
sbb
sti
mov
cmp
int
sbb
dec
fisubl
dec
outsl
out
ja
stc
scas
loop
outsl
mov
xor
adc
pusha
out
stos
mov
xor
sub
cmp
aad
adc
jb
das
hlt
das
push
mov
std
dec
fdivrs
stos
int
push
cmp
test
dec
adc
adc
cli
mov
push
push
lea
mov
push
les
mov
repnz
mov
cs
int
xchg
or
sub
adc
xor
or
movsb
add
out
jp
std
shrb
push
dec
xor
pop
cld
xor
adc
movsb
aas
add
mov
sahf
add
xor
xchg
nop
jmp
adc
adc
mov
inc
pop
push
mov
out
xlat
lret
push
imul
lret
cmc
in
sub
repnz
sub
das
bound
movsl
subb
clc
loope
cmpsb
pop
cmpb
fmull
jp
arpl
data16
dec
jbe
movsb
out
subb
inc
sub
xorb
incb
aaa
test
xor
ljmp
xor
pop
das
mov
xchg
adc
repnz
cmp
push
out
dec
mov
cmp
mov
mov
sarl
test
in
cwtl
or
sti
mov
fmul
push
pop
mov
and
jmp
ss
cs
int3
in
mov
mov
fs
cltd
lret
mov
aas
imull
test
sbbb
fisttpll
sti
dec
xchg
pop
xchg
pop
and
pop
js
cwtl
or
int
sbbl
sarl
aam
xor
adc
lret
nop
pop
jbe
fldenv
dec
sub
jb
pop
mov
cmc
das
xchg
stos
into
pushf
push
mov
test
jecxz
or
imul
sub
add
jle
loope
push
sbb
dec
dec
rcll
test
dec
mov
sbb
xchg
sub
sub
xchg
inc
adcb
pop
jno
pop
cmc
daa
sti
repnz
and
shlb
push
cmp
mov
fimuls
cwtl
and
in
shrb
sbb
enter
inc
je
inc
lods
pusha
lcall
or
adc
and
setne
pop
push
les
dec
movl
ja
fwait
and
mov
jae
insb
adc
out
mov
and
in
push
lret
xor
jg
cwtl
cs
jp
cld
in
push
daa
and
inc
add
das
xchg
push
cmp
sbb
cmp
pushf
aaa
pop
pushf
or
mov
mov
sahf
or
in
and
or
sarb
int
idivb
pop
addr16
out
dec
js
bound
sti
cmp
loope,pn
aam
cwtl
out
push
pop
xor
les
or
shr
in
add
js
in
bound
pushf
xor
lds
push
pop
push
adc
outsl
push
mov
jl
pop
mov
rorl
inc
add
mov
dec
pop
xor
inc
dec
lods
adc
lea
cs
jno
iret
push
pop
mov
xchg
or
dec
in
out
int
aam
pushf
scas
stos
std
ljmp
loopne
rcrb
jnp
aad
lock
xor
cmp
iret
div
pusha
mov
inc
lods
mov
inc
cmpsl
sub
nop
jle
orb
push
mov
clc
bound
ficompl
push
popa
jge
sbb
mov
xlat
jge
dec
aaa
jns
jb
jns
mov
ds
adc
stos
nop
aaa
mov
test
xor
sbb
mov
stos
push
fistpl
das
daa
sbb
mov
iret
pop
jo
jbe
mov
ror
jecxz
notl
cmp
movsl
sbb
imul
test
lock
popa
out
pop
push
imul
sbb
inc
push
movsb
push
insb
out
lret
sbb
fs
test
aaa
loop
sub
pop
xor
or
add
inc
popa
push
sbb
and
mov
dec
out
in
xor
inc
dec
jmp
cld
cmpsl
leave
pop
repnz
push
mov
jne
in
sbb
frstor
movsl
scas
jae
ja
mov
mov
dec
sbb
xchg
push
rclb
jmp
jne
pop
movsl
xchg
adc
cmp
lcall
lret
cmp
mov
jp
add
test
int3
fsubs
or
ret
jnp
or
mov
or
mov
xlat
aam
xchg
sbb
cmp
ss
xchg
cmp
lock
pop
leave
cmp
jns
cmp
repz
inc
add
pushf
arpl
xor
cmp
add
sbb
mov
sub
sbb
jo
mov
mov
jp
pushf
cmp
cmpsb
mov
aam
push
mul
pop
cmp
xchg
lcall
ficomps
movsb
sbb
dec
dec
push
fidivl
pushf
jecxz
fdivrs
xorb
aas
jo
adc
hlt
pop
cmpsl
xor
ss
inc
dec
fimuls
cli
daa
cmp
push
xlat
jl
mov
sbb
mov
mov
mov
aas
cli
mov
jge
ja
and
xchg
lcall
mov
mov
mov
dec
lret
xchg
lock
fisubrs
jne
jne
mov
data16
shl
xor
mov
jle
stos
fwait
xor
mov
adc
jnp
fcomps
stc
andl
xor
xlat
dec
mov
sar
jle
ret
mov
repnz
adc
sub
call
std
mov
sub
mov
leave
rcrl
lock
mov
xchg
mov
mov
in
sti
loop
mov
jecxz
cmp
je
gs
mov
mov
rorl
les
dec
adc
xchg
jo
out
inc
mov
add
movsl
xchg
xchg
insl
lcall
stos
adc
je
and
in
jnp
xchg
xor
cmp
test
cmp
cmpsl
push
daa
jle
in
pop
lahf
cmp
fsubrs
xchg
dec
outsb
fdivs
pop
call
and
push
cmp
cmp
dec
inc
or
jns
mov
fdivrp
fsubl
pop
lcall
mov
repnz
lods
nop
mov
and
xchg
outsl
jp
scas
lds
aas
xor
or
int
lods
xorb
and
je
cltd
loop
stc
cmp
andb
cmc
inc
clc
fcoms
sbb
sub
push
mov
push
call
jbe
cmp
cmpsl
cs
repnz
vmovhps
or
sub
cmp
mov
shrl
sbb
mov
lret
push
mov
add
cmc
mov
xchg
add
lock
jbe
push
xchg
lock
int
xchg
movsb
mov
cli
repz
std
adc
mov
fiadds
inc
xor
fwait
mov
andl
jle
pop
xchg
pop
jns
push
and
lods
or
int
sub
stos
mov
pop
xchg
add
inc
icebp
cmpsb
inc
aad
pop
stos
in
scas
mov
dec
lret
xor
pop
arpl
jge
fs
mov
cmp
mov
lds
xor
push
pusha
jge
jecxz
repnz
adc
mov
test
popa
vhsubpd
fnstsw
pop
xor
mov
out
out
dec
adc
pop
clc
add
sub
lahf
xor
addl
pushf
pop
pop
out
add
mov
inc
push
mov
cltd
lcall
jmp
lods
jmp
fidivl
mov
sahf
xchg
xchg
or
lods
dec
jbe
movsb
push
stos
stos
das
sub
jl
sbb
pop
mov
aaa
and
ret
xchg
fs
cmc
push
sbb
sahf
mov
notl
hlt
mull
fwait
xchg
js
sbb
das
jb
sbb
mov
enter
and
rcrl
dec
cmp
push
push
out
mov
inc
inc
xlat
mov
mov
cmp
jle
loopne
pop
popl
or
adc
hlt
lret
xchg
xlat
fbstp
pusha
or
and
mov
mov
mov
cltd
or
filds
popa
mov
mov
push
xchg
push
sbbb
push
push
inc
test
rcll
or
enter
mov
and
cvtps2pd
mov
rcrl
xor
cmpsb
xchg
loope
push
fdiv
inc
mov
pushf
lcall
mov
jno
pushf
add
pop
jmp
inc
mov
mov
xor
adc
mov
ret
or
cmp
mov
add
test
xchg
inc
in
mov
test
insb
xchg
sbb
addr16
cmpsl
pop
cltd
pop
les
xor
arpl
add
lret
std
enter
fnstcw
cmpsl
test
sub
pop
call
popa
or
cmpsb
pop
adc
inc
mov
jge
jmp
psadbw
lahf
sbb
xor
sub
or
adcl
sub
push
push
fstpl
dec
sbb
sbb
into
jge
inc
mov
jmp
mov
test
pop
shlb
xchg
cmp
sub
mov
and
inc
cmp
pop
xchg
mov
nop
mov
dec
or
lock
push
sbb
pop
int3
mov
stos
fcoml
inc
call
xor
out
add
mov
stos
pushf
rep
cmpl
jne
dec
push
lods
push
movsb
out
and
jmp
outsl
inc
adc
or
xor
fdivl
adc
loopne
inc
add
mov
or
mov
lret
iret
xchg
jae
lds
push
test
cli
orl
mov
xchg
lret
adc
cmp
fxch
add
iret
adc
in
adc
push
mov
int
mov
fiadds
movsb
pusha
icebp
inc
jmp
add
or
mov
fdivrs
adc
jl
xchg
daa
ja
sbb
adc
adc
scas
push
pop
das
fidivrs
cmp
inc
mul
xor
inc
loop
inc
push
fwait
cmpsl
xchg
add
push
das
rcr
add
xlat
std
sub
pop
push
ja
xorb
stos
stos
push
cmp
or
call
dec
std
int3
adc
dec
push
nop
sbb
ficoml
pop
push
push
push
into
add
fildl
xor
jmp
inc
mov
arpl
adc
in
es
cmp
fiaddl
test
leave
push
rcrl
test
push
and
shrl
xor
mov
inc
push
fists
push
ja
rcrl
dec
jecxz
cmp
adc
add
stos
das
test
pop
sub
mov
mov
push
sti
mov
sar
adc
in
int3
arpl
add
jg
mov
fildl
pop
lds
fs
ret
xchg
sbb
cmp
rcr
push
sbb
int
rcll
xchg
outsl
cmpsb
lret
lock
pcmpeqb
bound
xor
add
cmp
fwait
arpl
add
cmp
mov
lret
mov
ret
out
xchg
mov
mov
pop
xchg
ror
ja
mov
mov
repnz
cmpsl
sbb
mov
dec
in
ja
inc
popl
dec
iret
ss
and
or
dec
fisubl
cs
pop
adc
cmpsl
mov
sub
inc
inc
mov
std
xor
xchg
cli
scas
or
jns
xchg
or
mov
nop
and
insl
sti
dec
mov
pushf
inc
movsl
cwtl
aas
cs
ss
add
movl
fistl
cmpsb
dec
insb
and
lahf
push
fisubl
mov
mov
addr16
xchg
js
push
stos
nop
or
lock
ja
push
sbb
lea
imul
and
jb
stc
sub
mov
push
mov
pop
inc
jge
dec
jg
dec
mov
jae,pn
mov
xchg
dec
or
nop
test
push
and
or
ljmp
mov
cmpl
push
enter
bound
cwtl
mov
gs
xchg
push
add
jbe
or
push
repnz
mov
andb
mov
jae
cmpsl
pushf
mov
iret
call
mov
fidivrl
sbb
mov
inc
test
or
aam
push
loope
shlb
dec
sbb
jle
test
in
pusha
pop
mov
pop
pushf
leave
or
rcrl
sub
add
or
cmp
in
int3
adc
mov
bound
mov
addr16
fisttps
out
dec
cmpsl
dec
std
adc
je
xor
nop
shl
add
adc
mov
xor
lret
adc
in
movsl
sti
jno
add
inc
cli
xlat
mov
pop
stos
push
pop
mov
loopne
push
add
lahf
lods
mov
jae
aas
mov
sub
mov
out
mov
mov
and
mov
jmp
cmpl
mov
mov
jns
fcmovb
add
dec
lahf
jne
repnz
adcl
int3
scas
rorl
out
stos
xchg
xor
test
xchg
inc
mov
jno
or
ljmp
mov
std
sbb
out
push
dec
xor
jnp
jecxz
xor
fmull
stos
negb
insb
daa
xlat
adc
arpl
and
dec
popa
leave
pop
aaa
jno
push
imul
pop
pop
clc
mov
and
cld
jnp
and
inc
es
mov
mov
enter
inc
std
rdmsr
clc
mov
or
dec
in
call
loope
mov
dec
adc
pushf
xchg
pop
inc
jge
or
fcoml
push
adc
loopne
sbb
imul
popa
lret
mov
mov
pop
decl
bound
test
enter
ss
pop
enter
sub
pop
sub
add
adc
cwtl
cmp
aad
fidivl
mov
insb
out
mov
sub
push
dec
nop
jmp
xchg
outsl
mov
vpunpcklqdq
add
xchg
push
dec
mov
stc
insb
daa
es
mulb
inc
mov
adc
insl
or
fdivr
andb
stc
sub
add
das
add
cs
pop
adc
jb
imul
mov
add
sbbb
bound
addr16
in
xchg
in
and
iret
aad
repnz
pop
jbe
push
popf
mov
xor
pop
inc
in
mov
pop
aad
fidivl
add
clc
ret
mov
lret
inc
push
push
aas
popf
decl
iret
sub
adc
dec
jl
leave
add
lea
dec
ljmp
fistl
not
lcall
aas
gs
jecxz
movsl
jnp
mov
xchg
sar
mov
push
mov
loop
dec
fcmovbe
je
sub
mov
ja
js
and
lret
test
je
das
cli
add
pop
jno
dec
mov
xchg
js
inc
js
lods
xchg
nop
jno
fiadds
sub
fistpll
push
enter
push
dec
xchg
jp
mov
adc
or
mov
push
cli
cmp
dec
in
adc
insb
add
enter
push
jae
xor
push
aad
adc
ljmp
notl
xchg
testb
out
push
es
push
fs
xchg
mov
movsb
dec
ss
aas
arpl
idivb
ds
dec
mov
loope
xchg
movsl
push
push
and
cmp
orb
test
inc
jge
stos
out
rclb
ljmp
pop
cmp
loopne
cmp
ret
adc
jmp
jb
jne
pop
sub
daa
and
pop
out
pop
jae
je
or
invd
lea
xor
inc
fstpt
pop
xend
inc
sub
sub
jb
arpl
mov
scas
leave
aaa
fsubr
inc
and
push
pop
frstor
lock
cwtl
mov
mov
adcl
loopne
mov
pop
xlat
cmp
mov
lods
mov
jp
pusha
or
jg
loop
aas
flds
insb
inc
ljmp
lret
push
js
pushf
fdivp
adc
imul
pop
xchg
jge
cwtl
mov
mov
jne
les
cmpsb
cmp
inc
ljmp
adc
push
das
aam
mov
cmpsl
xor
mov
insl
mov
or
scas
in
lret
fidivl
cmp
loope
sub
scas
popf
xchg
popa
adc
pop
pop
fs
cli
cli
pushf
pop
mov
popf
lods
sub
dec
bound
rcrl
daa
jne
jbe
xchg
sahf
dec
sbb
idivb
dec
inc
mov
es
dec
dec
daa
sub
add
pusha
dec
and
pop
mov
lea
leave
sbbl
inc
jge
adc
loopne
add
cmpsb
enter
in
aam
sbb
mov
daa
mov
inc
dec
pop
dec
add
imul
dec
sbb
xchg
jbe
mov
inc
cmc
jge
insb
stos
notl
ret
xor
sbb
cmp
inc
dec
cwtl
outsb
hlt
into
rorl
repnz
mov
cmp
adc
add
test
jge
push
adc
icebp
sub
xor
xchg
fnstsw
jp
shlb
jl
adcl
cmp
jb
inc
jmp
mov
insl
push
rcll
xchg
cmp
sbb
mov
mov
cmc
int3
es
std
lahf
cld
movsl
cmp
sarl
loope
aad
rcll
and
test
dec
dec
dec
data16
jbe
pop
mov
inc
push
xor
nop
insb
jge
xchg
leave
xor
into
mov
repz
leave
jmp
inc
loope
cmp
jne
aaa
and
bound
test
mov
jge
call
xchg
xchg
inc
shlb
adc
inc
jle
and
mov
and
mov
jp
inc
inc
jl
jno
gs
movsl
sub
out
sub
repnz
arpl
les
or
mov
call
addl
or
popf
inc
jne
mov
inc
stc
cmc
test
sahf
popa
xor
call
dec
shrl
adc
mov
dec
jo
shll
mov
cmp
cmp
push
inc
aas
fcmovb
jbe
cmp
insb
addb
test
lret
mul
and
pop
push
dec
dec
pop
and
push
or
lahf
iret
push
sbb
xor
aam
sub
jmp
pop
push
mov
xor
sbb
inc
fidivrl
negl
dec
or
das
fs
jns
dec
sbb
cs
orb
or
inc
divb
mov
xchg
mov
cli
fwait
gs
sub
pop
ds
jo
or
in
incl
sbbb
mov
add
cmpsb
daa
enter
dec
and
mov
fstps
mov
movl
inc
jne
rcpps
jmp
in
cmp
daa
cwtl
fnstenv
es
adc
sbb
mov
cmp
mov
cwtl
test
sbb
and
pop
lea
es
lods
and
cwtl
dec
sbb
jmp
sbb
mov
arpl
outsl
jp
cs
mov
shlb
dec
pop
push
sbb
jge
xor
outsb
lcall
out
cmpsl
mov
xor
and
pop
cmp
mov
sbb
fucomip
aam
dec
scas
mov
fsubl
push
fiadds
jmp
cld
orl
loope
movb
lret
jbe
out
add
ljmp
shlb
nop
popf
sub
bound
xor
pop
scas
fbld
std
addb
ljmp
iret
hlt
sbb
push
push
inc
xchg
lds
aaa
out
fcmovnbe
dec
into
xor
ficoms
lret
insl
push
insb
adc
mov
and
mov
and
jbe
dec
mov
cmpb
mov
mov
jmp
cmc
out
pusha
adc
out
mov
push
jecxz
jmp
jno
popa
pop
scas
inc
cmpsb
mov
gs
sbb
jmp
inc
pop
push
jg
scas
jle
cli
ds
adc
cmp
xchg
ror
std
and
xchg
add
jbe
test
andl
xor
xor
ret
xchg
sar
dec
pop
cmp
sub
add
bound
xor
add
ljmp
lret
xor
cmp
sub
xlat
movsb
test
pop
ja
sti
push
cmp
mov
je
addb
mov
mov
mov
or
int3
xchg
subl
fwait
hlt
sbb
inc
aas
push
imul
inc
call
call
fmuls
ds
insl
and
or
push
pop
inc
sub
ss
insb
jge
xor
mov
add
mov
idiv
push
dec
push
xchg
xor
cld
movsl
pop
out
sbb
xlat
cltd
inc
and
xor
or
iret
pushf
jns
mov
mov
test
xchg
and
repnz
cmp
sub
or
dec
add
enter
popa
imul
and
xchg
cmp
pop
pop
scas
ljmp
in
push
xchg
push
out
sbb
outsb
in
mov
addb
add
mov
lock
outsb
scas
push
or
gs
mov
jns
and
popf
dec
xchg
int
sbb
cli
aad
push
ja
aas
adc
fmuls
and
data16
mov
pop
iret
push
pop
lods
in
jbe
jns
push
inc
push
enter
or
daa
ss
pop
jg
std
jo
inc
mov
pushf
aam
iret
mov
negl
dec
lcall
arpl
movsl
jecxz
xor
shlb
fimuls
pop
sbb
mov
insb
jne
pop
push
std
lods
pop
mov
bound
std
or
sub
xchg
adc
addl
scas
inc
mov
into
pusha
jle
pop
mov
scas
pop
arpl
jbe
cli
and
cmp
test
outsb
xchg
inc
shl
push
bnd
push
call
jae
xor
ja
sbb
mov
mov
int
mov
mov
enter
mov
xchg
les
pop
lret
ljmp
sbb
mov
in
pop
jb
aas
mov
ret
stos
xlat
out
repz
iret
sahf
xchg
mov
dec
inc
leave
in
mov
mov
sub
fdivrs
out
fcompl
rcrl
out
ds
or
fs
mov
xchg
inc
arpl
mov
test
rcll
and
add
dec
cmp
lret
mov
cmp
push
mull
gs
sub
clc
mov
ljmp
jbe
sbb
mov
mov
ret
dec
js
ss
test
and
jp
das
push
inc
cmc
jecxz
std
test
filds
fidivrl
cs
fisubrl
cmp
sub
jne
movsl
in
mov
popa
xchg
shrb
cmp
xchg
adc
jno
call
out
xchg
or
cmpsl
dec
xchg
int
cmpsb
push
pop
fld
outsb
or
mov
hlt
or
outsl
push
push
jae
in
test
xchg
sbb
pushf
cli
ret
jo
fcoms
imul
in
in
mov
mov
fbld
insl
mov
mov
dec
test
and
push
inc
jne
xchg
pop
lds
jnp
or
cmc
mov
in
sbb
fcom
fwait
ret
xchg
mov
sti
movsb
mov
inc
or
inc
push
xchg
or
pop
aaa
cld
ds
in
ja
adc
stos
adc
and
inc
cmp
leave
test
gs
mov
cmp
push
lret
dec
mov
push
jo
clc
mov
lret
push
filds
addr16
mov
lret
and
xlat
cmpsl
push
mov
and
pop
stc
cmpsl
inc
add
pop
pop
sub
and
push
pop
sbb
sbb
or
lds
lock
jb
adc
movsb
and
cld
dec
inc
lock
sbb
outsl
ljmp
sub
fs
ret
jne
sub
adc
cs
lea
push
inc
push
mov
xchg
mov
ds
test
push
mov
dec
add
pop
xchg
inc
jl
shll
shll
and
jno
in
mov
jae
insb
cmp
fdivrl
push
and
add
imul
pushf
dec
out
mov
pop
xchg
push
psrld
inc
mov
ret
sbb
shl
sub
mov
std
aas
xor
push
adc
or
outsb
iret
fldt
push
inc
lret
dec
mov
mov
test
inc
repz
jecxz
xchg
clc
orb
subb
addr16
sbb
nop
daa
add
mov
fwait
lods
mov
pop
fcmovnb
push
sub
push
cli
sbbb
pop
mov
lret
or
stc
notb
popf
mov
dec
cmp
sbb
shrl
test
sti
clc
add
fcmovnu
jb
cmc
enter
leave
cs
loopne
mov
mov
push
lock
stos
rorb
stc
sub
cmpb
mov
and
pop
push
out
pop
mov
loope
frstor
jbe
les
icebp
and
orl
insl
mov
mov
out
dec
cwtl
outsl
mov
imul
cmp
mov
mov
roll
mov
sub
add
jmp
sti
xchg
ret
pop
pop
jecxz
int
test
std
mov
testb
imul
daa
es
jge
mov
ret
and
fwait
je
xchg
insl
lahf
jp
add
loop
jnp
inc
daa
fidivrs
cmp
std
pushf
js
call
icebp
aaa
in
sahf
sarl
jne
int3
sub
pop
daa
lea
std
leave
xacquire
and
xchg
cwtl
push
inc
dec
fcoml
imul
mov
mov
sub
pusha
imul
adc
xchg
jecxz
and
fs
loopne
xor
fsubs
lds
cltd
cmp
or
xor
rcl
jnp
ja
pop
insb
sarb
in
test
test
popf
fldcw
jmp
cmp
les
negl
lcall
push
xchg
clc
push
out
das
mov
add
movsb
pop
dec
mov
data16
cmp
and
rorb
pop
int
into
xor
xchg
ljmp
inc
adc
push
pop
sbb
int
push
jge
lock
push
stc
xchg
std
inc
in
jecxz
sub
fisubrl
repnz
xchg
das
xor
add
popa
sbb
xchg
lcall
mov
mov
lock
in
sub
scas
xchg
mov
dec
addr16
push
cmpsb
pop
sub
sub
mov
xor
mov
and
jp
fistpll
pusha
sbb
test
pop
loop
cmp
loope
mov
xchg
push
ret
jno
dec
inc
movsb
xor
xor
mov
js
iret
xor
dec
rcrl
and
rcll
pop
rcr
sahf
idiv
dec
or
jno
add
repnz
xor
ret
cli
imul
fld1
cmpsl
and
sbb
sub
xchg
rolb
dec
decl
sti
test
rclb
and
daa
push
push
lods
cmpsl
jg
sbb
cmc
flds
nop
mov
testb
arpl
push
aad
mov
js
rcl
pusha
push
mov
lods
iret
xchg
inc
fldenv
inc
incb
pop
xor
out
cli
push
rorl
xchg
or
into
dec
les
clc
into
xor
xchg
arpl
xchg
cli
fnstcw
clc
or
push
cmc
or
inc
clc
out
add
mov
leave
aas
ljmp
cmp
sbb
pop
mov
push
xor
xchg
mov
ror
aad
adc
testl
cli
push
pop
out
sub
addr16
xor
sti
int
lock
repnz
aad
cmp
cmp
xchg
mov
cmp
pop
xchg
nop
repnz
daa
mov
push
cmp
inc
inc
jmp
loopne
repz
enter
mov
addr16
and
jae
leave
push
mov
jns
sbb
fs
xor
int3
arpl
mov
xor
cmp
dec
fsubrl
insb
pop
and
push
mov
sub
and
sbb
ljmp
inc
dec
iret
mulb
mov
or
imul
mov
packsswb
lds
fmul
fistpll
push
in
pop
add
mov
ja
and
shrl
xchg
loope
pop
mov
cmp
xor
mov
std
ss
addr16
and
push
add
inc
fnstcw
ds
les
jg
lock
add
cmpsl
or
hlt
push
out
xorl
adc
out
xchg
inc
rcrb
pop
shlb
inc
add
outsb
adc
or
pop
lea
push
mov
movsb
aas
push
into
fcmove
and
mov
faddl
push
mov
or
cmc
jno
mov
pushf
jp
sbb
xlat
inc
in
test
mov
faddl
mov
xor
fnsave
jg
mov
adcl
fs
xchg
jae
js
movsl
into
cmp
lea
add
pop
xor
hlt
imul
pop
sahf
lcall
out
and
cmp
popf
cltd
mov
inc
add
sarb
fs
int
mov
sahf
mov
dec
stc
ja
mov
stc
iret
in
int
sub
add
jne
repnz
das
ljmp
push
out
out
enter
cltd
xchg
call
push
loope
or
pop
es
call
mov
and
mov
cmpsl
aas
inc
cltd
xor
inc
xchg
adc
es
jne
lret
inc
inc
testb
test
lahf
insb
shlb
push
icebp
ds
mov
inc
jnp
push
mov
leave
pop
pop
dec
fmul
insl
stc
mov
cmpsb
sub
hlt
aaa
sub
xchg
out
repnz
icebp
repnz
add
popa
repnz
inc
jp
in
lret
push
fwait
dec
mov
xchg
outsl
and
or
int3
cli
mov
repnz
mov
in
cmp
dec
shlb
fimull
lods
notb
jbe
gs
pop
fidivrs
adc
ror
xchg
jge
and
mov
jno
push
mov
adc
out
ficomps
out
pop
bound
add
fwait
ss
cmp
mov
dec
adc
sub
adcb
ficoml
pushf
mov
cltd
clc
mov
insl
ja
cmpsb
imul
test
lock
iret
test
stos
jno
leave
inc
jb
xor
dec
test
int3
push
mov
push
mov
fs
sub
sbbb
inc
sbb
in
mov
or
inc
cltd
dec
and
and
rcrb
xor
sbb
cwtl
add
cwtl
enter
inc
xchg
test
iret
adc
cltd
out
and
iret
mov
test
movsb
mov
sbb
leave
cmpsb
arpl
dec
call
lret
mov
out
xchg
and
and
in
adc
xor
into
cwtl
dec
stos
cltd
not
imul
pushl
push
mov
jl
out
mov
jbe
add
cmp
ja
push
inc
or
imul
sub
rcll
arpl
jle
push
jb
int3
repnz
adc
jge
sahf
jecxz
nop
fnstcw
jo
jle
pusha
stos
pop
fisubrs
jge
movsb
push
stos
jo
test
jmp
fldenv
xor
in
inc
sub
push
inc
bound
xchg
dec
lods
cmp
clc
sub
call
jg
imul
rcrb
bound
push
xor
je
adc
cmpl
aaa
jl
nop
js
dec
xchg
jle
movsl
xchg
jbe
imul
out
cmp
cmp
adc
mov
andb
push
cld
sti
mov
xchg
shlb
dec
dec
ljmp
ljmp
mov
xor
ret
cmp
push
mov
xor
movsl
movsb
push
addr16
stos
push
inc
outsb
test
and
fmull
dec
push
pop
ror
aas
jb
cmp
aaa
mov
dec
pop
lcall
nop
cs
cmp
mov
sbbb
es
mov
dec
inc
lods
cmp
mov
dec
xor
mov
repz
sub
loopne
pop
cmpsl
cld
push
xorb
pop
loop
into
sbb
adc
movsl
cmpsb
and
mov
pop
popf
movsl
insb
cmc
adc
cmp
shrb
repz
push
or
mov
jge
lret
sub
ret
js
push
mov
bound
fmuls
fs
fdivr
jne
jl
shll
jmp
cmp
mov
add
cld
repnz
mov
clc
mov
jno
jo
jmp
adc
mov
push
cmpsb
pop
in
fs
repnz
and
mov
mov
cld
fnsave
xorb
xchg
mov
xchg
xor
loop
cwtl
call
clc
jp
pop
test
jmp
sbb
repnz
and
jne
cltd
aam
mov
cmpsl
mov
push
inc
bound
ss
iret
adc
add
insl
ret
pushl
outsl
js
mov
cmp
pop
and
imull
jp
mov
ds
cmpsl
mov
xchg
adc
in
and
out
js
fsubrl
in
outsb
sarb
push
inc
or
popa
mov
dec
mov
xchg
sarl
mov
adc
lods
bound
lcall
outsb
shlb
rclb
inc
and
movsl
inc
fisttps
add
scas
or
push
sub
fdivrs
xchg
xor
mov
jecxz
stos
gs
xchg
in
int3
mov
push
sti
or
das
int3
add
sahf
dec
test
dec
push
cmc
les
out
mov
or
out
push
jbe
mov
iret
addr16
xchg
add
inc
pushf
out
add
cmp
mov
dec
movsb
bound
aad
out
push
mov
mov
dec
dec
rcrb
mov
xchg
push
std
fildll
ret
lock
scas
mov
repz
lock
xlat
cmpsb
pop
cld
and
add
mov
push
call
push
and
in
add
cmp
pop
mov
out
sbb
out
mov
and
lods
jg
cmpsb
adc
movsl
adc
rclb
dec
notb
cs
roll
jnp
shll
out
cld
in
test
fisttps
mov
push
rorl
enter
movsb
fwait
xchg
xchg
add
sar
mov
adc
jecxz
addr16
popa
loop
or
aas
add
pop
jb
push
js
xor
adc
mov
or
outsl
fistpl
adc
xor
mov
mov
inc
add
mov
jns
into
fbld
inc
ja
sbb
stc
mov
push
ja
pop
outsl
mov
into
cmp
push
int3
pop
push
stos
mov
lret
dec
push
outsl
ja
dec
mov
fistpll
insl
inc
push
xor
cmp
out
sbb
sub
pop
inc
push
ds
push
sbb
fisttpl
cmp
mov
add
inc
pusha
jg
push
mov
jns
fisttpll
mov
int3
addr16
fs
dec
jmp
dec
sbb
popf
inc
xor
mov
data16
mov
pop
jno
mov
pop
inc
into
stc
lock
sub
xorb
cmp
popa
xchg
jae
outsb
cltd
push
xchg
mov
iret
mov
in
jmp
sub
es
sbbb
push
sbb
int3
imul
cmc
outsl
lret
cmp
mov
xor
inc
lcall
push
push
push
fdivrl
stos
dec
in
movsb
mov
pop
dec
fistpll
push
sub
jle
in
jmp
cmp
cmc
mov
fsubs
xor
mov
sbb
outsl
mulb
dec
mov
pop
cmpl
add
xlat
sbb
adc
cmp
push
ficoms
mov
jbe
xchg
xchg
cld
cwtl
mov
shrb
push
lock
xchg
sbb
cmp
aad
inc
mov
pop
jmp
push
xor
fildll
sysret
or
aad
adc
mov
mov
aam
sbb
mov
cmp
or
mov
jnp
fdivs
push
popa
pushl
sbb
pop
pusha
mov
xchg
rorl
mov
ret
mov
sti
pop
iret
pop
sbb
xchg
aad
pusha
pop
sbb
mov
setl
mov
fildl
sar
loopne
addb
sub
lock
sub
in
xor
cld
jnp
jbe
jno
icebp
idiv
mov
sub
loope
cmpsb
ret
popa
or
adc
mov
jg
lods
call
pop
addr16
mov
loopne
jb
push
frstor
pushl
loope
psllw
cmp
sub
das
lds
jl
inc
test
movsb
lods
scas
pop
inc
inc
les
dec
pop
pop
mov
ja
imul
pop
mov
adc
fidivrl
adc
movsl
xchg
mov
dec
and
std
xor
push
leave
inc
movsb
mov
inc
pop
adc
xor
or
cmp
and
arpl
inc
lods
pusha
or
or
loope
jo
push
xchg
xchg
or
mov
sbb
bound
push
ret
cmp
mov
sub
pop
es
xsaveopt
mov
aas
cmp
shrl
jle
jp
scas
mov
sub
stc
push
jge
ret
push
pop
xor
es
pop
sbb
jnp
sbb
lret
mov
adc
rclb
inc
add
cld
test
imul
and
inc
pop
adc
push
mov
out
iret
xchg
add
mov
pop
sbb
iret
mov
cltd
adc
xor
shll
lcall
add
cmpsb
cmp
jg
mov
jmp
push
mov
or
rorb
add
push
test
pushf
mov
xor
jbe
clc
pop
in
lcall
lods
lock
xchg
xlat
mov
in
jp
hlt
test
push
jmp
ljmp
fstpt
cmpl
gs
and
jo
lret
cvtpi2ps
sbb
mov
or
or
xchg
push
cli
lods
subps
in
jmp
testl
int3
hlt
idivl
xchg
shrl
cmp
out
push
insb
les
cli
icebp
cmpsb
inc
mov
shr
mov
cltd
loope
sbbl
aam
rcll
ja
addr16
dec
cli
inc
mov
push
sub
imul
je
inc
pop
push
filds
and
push
xchg
xor
hlt
out
daa
pop
ret
adc
pop
das
loopne
push
cmpsb
adc
inc
lret
push
mov
daa
dec
gs
push
ja
icebp
pop
out
mov
mov
fnstenv
push
inc
shl
mov
xchg
int
xor
inc
data16
jae
mov
dec
shll
icebp
dec
mov
pop
lea
push
pop
or
pop
les
fwait
repz
bswap
stc
fs
stc
xchg
test
push
testl
cli
out
inc
xor
xor
xchg
test
cmpsl
sbb
lahf
sub
testb
and
insl
pop
subl
icebp
lock
inc
imul
cmp
cltd
addr16
rcl
fsts
fbld
pop
xchg
jns
sahf
lods
xchg
fwait
add
mov
out
sub
inc
nop
inc
bound
cli
cld
cmpb
lock
jg
repz
lods
mov
aas
mov
mov
ret
idivl
push
scas
je
orl
in
hlt
imul
jns
dec
shlb
lds
rorb
clc
fadds
add
inc
xor
pop
and
mov
mov
xchg
add
cmpsl
fxch
out
idiv
sahf
inc
pop
pop
and
mov
and
ljmp
and
add
jne
cmp
cmp
or
cmp
jmp
dec
cli
and
int3
jle
push
or
mov
clc
xchg
icebp
push
aad
out
sbb
es
cltd
mov
fmuls
mov
call
jnp
cmpb
jo
push
or
in
mov
cwtl
pop
bound
jge
arpl
lret
inc
hlt
leave
sbb
mov
jb
out
push
ljmp
sbb
cld
mov
add
or
cmc
pop
movsl
push
cmc
cmp
mov
clc
loopne
pop
mov
and
xor
inc
popa
mov
jecxz
fsubl
popa
mov
addl
mov
fldcw
push
hlt
xchg
xor
cwtl
stc
jae
push
or
push
pop
imulb
loope
sarl
lahf
sahf
pop
push
stc
scas
jne
sub
bnd
mov
inc
in
imul
loop
les
jne
cli
adc
rcrb
shll
mov
sub
sbb
scas
inc
jp
and
ret
push
and
fwait
mov
aam
pushf
push
xchg
push
pop
ror
jecxz
data16
test
mov
aad
aaa
inc
mov
cmp
mov
pop
cmp
rcr
xor
push
ja
inc
jmp
ret
cltd
and
ret
gs
xchg
out
pop
fadds
shll
mov
js
push
push
mov
lea
pop
imul
jg
mov
fnsetpm(287
in
mov
lret
mov
out
pop
loop
dec
scas
xlat
mov
push
jo
cmp
add
ljmp
xorb
xchg
shrb
enter
xchg
pop
imul
mov
pop
xchg
daa
test
lret
mov
adc
xchg
stos
xchg
mov
dec
xor
mov
pop
xchg
pop
or
fwait
ror
pop
fldl
add
aas
into
mov
inc
test
push
xor
xor
mov
clc
gs
xlat
add
cmp
jp
fimull
movsl
mov
rcll
arpl
fdivs
or
push
inc
push
outsl
movsb
xor
xorb
jne
adc
loope
repz
inc
fs
adc
testb
xor
xchg
mov
pop
in
mov
enter
mov
and
jg
push
rcll
xchg
das
inc
shlb
mov
mov
cmp
push
mov
lcall
fsubrs
mov
fcomp
bound
aaa
xor
icebp
sbb
ficoms
push
aas
push
and
mov
shlb
jmp
jle
add
ljmp
inc
mov
adc
repz
mov
mov
test
xor
mov
ss
nop
ljmp
cld
rcrl
cmp
inc
or
outsl
std
or
mov
xor
loop
pop
stos
dec
cltd
mov
addl
cmp
fnstsw
cld
jg
mov
pop
mov
icebp
icebp
lock
pop
cld
sbb
pop
clc
pop
loope
loopne
pop
mov
mov
mov
xor
xchg
lds
push
push
test
rorl
push
xchg
add
movsl
andb
lods
ret
xchg
stos
cmc
sub
stc
cmpsb
push
shlb
pop
mov
loop
cld
loopne
call
push
addr16
js
add
pusha
outsb
stc
outsb
push
lods
aad
mov
dec
inc
adc
xchg
sub
jb
dec
jb
cld
adc
pop
fstpt
insb
sub
push
inc
mov
sti
icebp
cmpsl
and
mov
add
test
fiadds
ljmp
xchg
scas
sub
xor
enter
ss
xchg
insb
jmp
ss
into
jmp
adc
add
outsb
xorb
js
repnz
jnp
imul
popf
cld
or
out
xor
cmp
pusha
dec
outsb
or
rcll
movsb
daa
mov
pop
movsl
adc
and
sub
dec
xlat
lods
mov
add
inc
cmp
xor
test
inc
sahf
and
notl
sbb
jmp
in
push
sbb
xor
adc
je
shll
aas
push
dec
xchg
push
lock
mov
roll
mov
push
out
imulb
pop
fwait
sbb
sub
mov
mov
mov
in
loopne
popf
mov
rolb
inc
jae
leave
neg
or
mov
dec
jb
lret
add
in
xlat
rorb
dec
aas
lret
jmp
aaa
in
mov
add
xchg
data16
insb
push
in
popa
scas
out
xchg
adc
xchg
sarb
out
xor
std
fcomps
push
lret
sub
pop
nop
lea
mov
fimull
in
shlb
je
or
xchg
or
enter
test
adc
sbb
or
lock
movl
dec
add
dec
in
jmp
lcall
fwait
push
imul
xchg
pop
int
jns
fbld
hlt
cmp
mul
je
jmp
mov
lods
aad
xor
les
mov
mov
scas
je
enter
fwait
xchg
daa
add
negl
outsb
ret
cmp
mov
mov
dec
ds
jp
xor
cmp
imul
outsb
cmp
ds
nop
push
ficoml
sbb
sbb
dec
or
mov
or
loopne
sti
out
sub
lea
jmp
mov
dec
ljmp
adc
sub
or
adc
out
stc
fisubrl
sbb
in
mov
pushf
jmp
fxch
fsubs
or
cwtl
aaa
jg
lret
pop
inc
lcall
xchg
std
lahf
add
icebp
add
add
dec
cmp
xor
cmp
lret
push
mov
in
outsb
pop
xor
xlat
lret
push
testl
or
sbb
nop
or
or
enter
mov
or
cvtdq2ps
xor
adc
pop
push
jne
jo
mov
loop
and
push
pop
bound
jl
mov
push
mov
test
pop
lods
xor
adc
inc
call
xor
cltd
scas
and
loopne
mov
int3
lret
stc
adc
sub
pop
xor
push
fs
push
mov
adc
mov
call
mov
lcall
out
xlat
cmpsl
add
push
aam
stos
xchg
lods
jecxz
xchg
roll
sbb
jnp
mul
in
sub
cld
iret
cmp
cmp
cmp
fnstcw
fmull
cltd
and
sahf
sub
nop
pop
sbb
sti
jecxz
sbb
inc
leave
mov
and
adc
mov
cmp
out
add
push
iret
mov
add
and
sbb
inc
jo
dec
or
xchg
testb
mov
lock
mov
out
dec
pushf
sbb
pusha
sbb
das
and
imul
push
cmpb
adc
lock
xchg
sbb
test
inc
ffreep
clc
in
add
xchg
adc
ret
xchg
lea
dec
fstpl
ja
push
insb
and
rorb
pop
cmc
cmc
push
enter
and
cltd
xchg
adc
mov
shlb
outsl
fsubrs
mov
mov
out
add
sbb
cltd
xchg
mov
inc
outsl
shrl
ret
sbb
add
sti
mov
fiaddl
xorl
les
js
dec
xlat
addr16
mov
movsl
ja
icebp
mov
xlat
mov
mov
fwait
bound
shl
testl
mov
sbbb
inc
mov
xchg
adc
push
das
or
cmc
adc
shlb
sub
jnp,pt
shl
sbb
lret
fwait
retw
xor
sbb
adc
dec
je
push
arpl
imul
inc
push
test
add
xor
scas
adc
js
jl
mov
movsl
rcrb
xor
test
inc
adc
icebp
pusha
cmp
mov
fstl
pop
adc
jmp
pop
cmp
adc
data16
mov
aad
lds
mov
or
cltd
stos
stos
dec
inc
inc
out
mov
stos
scas
call
xchg
jne
xchg
push
aam
andb
in
and
cmp
dec
mov
adc
sub
add
lea
jl
adc
sbb
mov
jnp,pt
rcrb
dec
data16
adc
pop
adc
mov
adc
das
push
adc
gs
lret
fildl
divb
and
leave
jno
ffree
add
scas
xor
popf
bound
add
jmp
in
clc
xchg
movsb
cmpsb
and
nop
xlat
jecxz
mov
jae
inc
inc
mov
push
pushf
add
mov
xchg
xor
or
imul
jns
mov
ret
pushf
imul
frstor
jne
ja
cltd
ds
push
js
cmp
cmp
in
in
add
dec
es
dec
and
imul
jecxz
popf
xor
mov
xor
dec
rorl
push
inc
enter
mov
dec
xchg
loopne
data16
dec
mov
sub
add
popl
adc
mov
sahf
orl
add
mov
and
pop
stos
xchg
push
inc
cli
rolb
add
loopne
push
loop
call
dec
adc
jno
cli
imul
inc
push
or
cmp
maskmovq
testl
loopne
cmpsl
cmp
mov
add
dec
mov
sti
push
inc
adc
test
push
movsb
add
aas
push
cs
or
jne
aaa
insl
cmpsb
jg
insb
ja
pop
test
mov
imull
ret
or
lds
push
mov
lock
jb
sbb
dec
iret
push
dec
divb
jnp
and
dec
dec
int3
outsb
push
outsl
in
xor
int3
jmp
fsubl
dec
and
jnp
xchg
jmp
outsl
push
adc
in
fisubl
dec
test
or
jns
dec
fstl
hlt
xchg
loopne
fdivs
xchg
int
add
mov
push
pop
pop
add
pop
loope
sub
mov
neg
push
adc
repz
flds
xchg
mov
mov
mov
adc
mov
lods
ja,pn
repz
sbb
gs
and
jne
je
bound
in
inc
popa
mov
incl
adc
stc
jmp
aas
dec
xchg
daa
filds
jge
sbb
arpl
dec
jns
sbb
xor
and
mov
mov
inc
sbb
push
nop
insb
daa
ret
pop
loope
lret
xchg
test
xchg
mov
jns
icebp
add
rep
clc
sub
add
loope
mov
jmp
enter
jmp
mov
push
pop
movsb
or
jbe
dec
aam
scas
sarb
std
inc
mov
jns
push
add
jne
fwait
xchg
jecxz
repz
fmuls
pop
add
jno
pop
dec
jecxz
sahf
add
subb
pop
ss
icebp
jnp
in
stos
mov
int3
jno
inc
xchg
or
jne
mov
pop
les
and
les
xor
les
sub
mov
xor
xchg
stos
enter
inc
cmpsb
addr16
fs
inc
dec
mov
jmp
imul
stos
mov
repnz
fcoms
or
fs
dec
adc
xchg
inc
ffree
xchg
mov
aam
sarb
jmp
fsubrs
ds
or
xchg
ds
sbb
test
or
mov
adc
aaa
xchg
outsl
cmp
das
outsb
dec
jp
push
leave
pop
mov
or
xchg
xlat
testl
es
lea
xor
cmp
stos
mov
pop
sbb
repnz
sti
shlb
cmpsb
fisubrl
fadd
lahf
pop
cmpsl
sbb
movsl
lcall
arpl
xor
adc
inc
mov
cmp
rolb
pop
dec
leave
mov
mov
stc
mov
iret
jne
testb
fnstsw
push
in
pop
cmp
inc
xor
mov
lcall
add
jge
into
test
sbb
jmp
or
in
adc
jae
adc
dec
push
outsb
negb
frstor
sbb
inc
xchg
cmpsl
ljmp
pop
cs
sahf
out
clc
andl
ret
xchg
xchg
sahf
pop
into
jne
lret
mov
les
test
mov
and
movsb
and
mov
mov
leave
xor
fnstcw
sbb
cmp
mov
orl
adc
mov
loopne
cmp
dec
test
repz
jle
ds
daa
sbb
fildl
test
jo
mov
cmp
jmp
add
addr16
pop
jb
or
popa
jmp
mov
shll
outsb
inc
ficoms
cwtl
jmp
and
xchg
mov
fidivl
jbe
push
jne
cmp
mov
inc
xchg
xchg
sub
jnp
jnp
in
ljmp
mov
sub
shll
mov
or
scas
das
or
jne
mov
std
mov
pop
cmpsb
dec
adc
jno
aas
iret
mov
cmpsl
add
push
mov
xchg
call
sbb
lret
jmp
js
aaa
pop
mov
lods
cmc
mov
imul
fcomi
mov
inc
les
pop
jb
jecxz
test
lret
insl
scas
pop
sub
jns
jne
xchg
scas
sub
pop
inc
push
xchg
ret
mov
inc
test
imul
popf
and
cmp
imul
sub
and
mov
enter
xchg
fnstenv
iret
movsb
and
daa
jle
fcmovnb
adc
out
push
or
mov
in
xchg
xchg
pop
or
xchg
sti
dec
sbb
mov
in
sub
outsl
cs
es
aad
filds
push
imul
and
mov
sbb
rclb
movsb
and
test
out
div
dec
pop
and
sub
add
pusha
xor
shll
mov
pop
or
daa
jno
jns
fwait
aam
test
into
cmp
mov
xor
adc
mov
pusha
mov
cs
lods
pusha
ds
mov
shlb
fnstenv
adc
mov
jo
mull
pushf
icebp
repnz
imulb
mov
pop
lahf
cmpsl
fdivr
xor
rcll
mov
and
push
push
inc
stc
movsb
push
stos
sahf
lret
je
pop
xor
pushl
push
inc
push
into
mov
or
sub
sbb
adc
inc
je
call
loopne
test
testl
dec
jmp
inc
pop
jp
scas
fildl
cmp
and
enter
xchg
out
mov
addb
cwtl
mov
adc
push
xor
inc
xchg
xchg
movsl
jnp
daa
mov
aam
jb
push
mov
or
or
cltd
js
jp
repnz
jmp
sub
loopne
lcall
stos
push
cmp
mov
pop
decl
outsb
imul
pop
xchg
adc
and
shl
add
sbb
jne
movsl
std
xchg
rorl
scas
ss
xlat
adc
inc
incb
mov
jo
xchg
pop
pop
test
inc
test
mov
sbb
push
subb
jle
testb
mov
mov
movsb
ja
in
adc
scas
outsl
inc
sbb
push
sbb
test
pop
ret
sbb
hlt
call
push
cmpsl
mov
in
adc
ja
mov
clc
test
add
enter
push
mov
fldt
aas
mov
or
ljmp
orl
push
dec
dec
xchg
push
push
sahf
cltd
jle
sti
shld
cmp
outsl
out
cs
push
pop
insl
xchg
sub
adc
xchg
pusha
jbe
mov
iret
ljmp
je
mov
jae
sbb
sbb
icebp
xchg
test
es
xor
dec
jle
ja
std
dec
aam
lcall
movsb
xor
adc
pop
insb
rcll
cmp
mov
addr16
or
sub
xor
or
push
adc
les
stos
adc
pushf
outsb
shlb
xchg
and
out
imul
in
push
xchg
in
daa
pop
cmp
scas
or
mov
inc
push
and
dec
add
test
mov
cmpb
jge
or
sbb
or
push
popf
insb
and
mov
ljmp
mov
pop
je
pop
dec
or
pop
sti
add
jg
push
pop
out
loopne
mov
push
mov
in
sbb
mov
or
push
shll
jns
push
shlb
push
sysenter
ds
and
in
or
or
inc
je
mov
sbb
pushf
push
add
int
sub
or
jle
add
xchg
lods
sub
jb
pushf
ja
test
dec
gs
fcoms
mov
push
rorl
push
mov
movsl
ficoms
add
cmp
insb
and
pop
cmp
xchg
fs
or
pop
xchg
mov
sub
icebp
imul
mov
pop
dec
mov
mov
dec
jno
cmp
jp
lea
cmp
jl
scas
mov
scas
xorl
mov
pop
addr16
leave
adc
mov
xchg
js
xchg
insb
mov
adc
leave
xchg
cmp
pop
in
xchg
dec
shll
adc
ja
dec
notl
push
push
clc
sbb
pop
adc
outsl
arpl
xor
pop
shrb
sahf
fs
mov
das
xor
out
or
es
mov
sarb
and
xor
lods
xchg
dec
pushf
sbb
add
mov
sub
cmp
lods
sbb
ret
push
adcl
inc
cmc
mov
rcr
subl
fstps
mov
xchg
push
repz
cmp
imul
pop
jnp
push
sbb
bound
adc
or
ja
dec
movq
clc
dec
pushl
push
lret
insl
fsubl
shll
ja
aas
adc
movsb
push
sub
loop
sarb
jae
pop
iret
imul
cmp
rorb
fbstp
add
xlat
dec
pop
testb
mov
imull
add
sub
mov
lahf
dec
imul
pop
ds
jne
ljmp
xchg
shl
mov
dec
incl
cmp
inc
aas
into
lods
xor
fcmovbe
xchg
in
rorl
push
movsb
ja
add
jne
cli
shlb
jmp
push
cli
add
dec
add
shrl
call
push
jne
daa
subb
fistps
add
rep
add
inc
pop
jno
xchg
mov
test
dec
lret
inc
add
inc
lahf
pushf
popf
idivl
sti
test
sub
add
movsl
lock
add
add
jle
lret
push
adc
mov
jns
inc
insl
sub
sub
jg
adc
push
add
leave
jnp,pn
icebp
clc
in
xor
or
mov
inc
out
jge
roll
js
aaa
push
pushl
mov
push
aam
push
loopne
out
in
dec
enter
mov
out
xchg
xchg
xchg
push
mov
cmp
sarb
test
rorb
out
mov
add
popa
pop
aad
jnp
add
jge
fsubp
lds
xchg
pop
mov
xor
pop
lret
lret
xor
cs
mov
test
xor
cmp
jb
repz
push
loopne
imul
lods
xchg
xor
ret
cmp
insb
cmp
sbb
pop
push
jg
jb
out
jge
mull
arpl
cld
add
aaa
push
and
rcrl
fiadds
sbb
popa
popa
mov
xor
xor
loope
mov
cmp
in
mov
inc
insb
sub
cltd
loope
jp
nop
rorl
sub
jnp
imull
push
fsubs
sbb
fadds
js
fsubl
sbb
jecxz
loope
arpl
pop
movsl
sbb
or
lock
push
xor
inc
inc
out
das
lods
pop
pop
rdtsc
pop
lret
mov
inc
lods
repnz
in
jmp
mov
ljmp
pop
cmp
ja
xchg
xchg
js
test
lret
movsb
mov
pop
orl
jmp
inc
fdivrp
cltd
mov
mov
mov
cmp
mov
jle
jge
push
addl
popa
mov
or
insl
pop
push
out
iret
and
mov
jl
out
fs
js
mov
es
xchg
xor
dec
mov
inc
fs
filds
add
jp
sbb
sub
xor
add
xchg
xor
or
add
clc
mov
sbb
in
flds
movsl
mov
sbb
and
pop
xorb
out
shlb
pop
push
and
dec
inc
or
inc
mov
popf
push
jae
outsl
call
add
pop
or
pop
sub
js
call
xor
mov
pop
scas
mov
insl
out
jge
in
jecxz
adc
mov
sti
or
movsb
nop
jl
call
pop
cmc
or
movsl
cmp
sub
stos
mov
sub
push
mov
ret
adc
pop
mov
xor
inc
addr16
add
pushf
jno
dec
adc
jmp
insb
and
mov
mov
jo
les
jno
data16
mov
int
shlb
jno
insb
pop
and
dec
call
xchg
jnp
mov
outsl
xchg
out
sub
pop
and
insl
pop
sbb
pop
cli
jl
cwtl
jmp
sub
or
fistps
jns
movsb
pop
test
xchg
add
dec
cltd
adc
mov
mov
mov
loop
sub
arpl
xlat
add
int3
incl
cmpl
jae
call
jecxz
rcr
cmpl
xchg
mov
inc
jno
xchg
mov
pop
pop
sub
pop
in
sub
ret
xorl
xchg
call
ss
dec
dec
cmc
xchg
bound
jg
push
and
jbe
sub
cmpsb
out
ds
push
sbbl
fidivrl
mov
lods
fldcw
add
sub
jnp
call
dec
aad
push
lock
ljmp
mov
adc
out
pand
in
dec
andb
fnstsw
mov
mov
lea
add
or
insb
pop
xchg
leave
ret
gs
call
inc
add
lea
mov
pop
fwait
push
mov
sub
mov
ficoml
lret
mov
sahf
push
out
sub
out
shlb
and
jae
cmp
lret
mov
movsl
dec
pop
push
clc
or
subb
or
xlat
mov
lcall
xchg
test
fwait
jl
hlt
jecxz
mov
mov
mov
int
popf
or
test
and
inc
mov
int3
ret
lds
das
sub
movsb
pop
sarl
lret
jp
rcll
inc
pop
pusha
out
fcmovne
nop
fs
mov
fstl
or
cltd
sub
leave
xor
sbb
sbb
outsb
dec
ret
je
adc
icebp
jge
clc
xchg
add
jge
jg
dec
pop
inc
mov
dec
es
sub
fstps
bound
fcoms
cmp
mov
xchg
push
pusha
or
xchg
pop
test
sbb
pushf
xor
out
mov
push
or
fstps
loope
ja
lea
scas
cmpl
lods
jae
mov
ja
ljmp
outsb
insb
jmp
adc
xchg
loopne
xor
in
lahf
cwtl
aam
pop
mov
outsl
maxps
add
daa
sarl
inc
inc
xchg
mov
pushl
sub
dec
push
mov
sub
mov
jbe
cmp
test
mov
or
jne
test
ja
sub
jge
push
leave
and
rorl
mov
mov
mov
mov
shll
or
pop
cmp
mov
dec
ret
call
aam
movsl
cltd
xlat
mov
imul
sti
iret
jbe
dec
cwtl
push
test
lret
adc
jne
popf
sbb
add
xchg
xor
xor
sbb
aam
stos
jb
aad
sub
ret
pop
dec
popa
lock
xchg
test
dec
cmc
das
aam
ja
cmpsb
das
inc
stos
or
jns
push
jnp
fistpll
mov
and
and
xlat
mov
jmp
jp
stos
jg
xchg
sbb
xchg
fwait
add
imul
add
xor
test
mov
sbb
cltd
cs
sbb
ret
fcmovbe
scas
cmpsl
xchg
cmpsb
jge
jp
xchg
dec
or
scas
fwait
hlt
cs
cmpsb
lret
jnp
aad
pusha
mov
loopne
or
dec
xchg
mov
ss
insl
sub
jne
mov
test
fmulp
loop
loopne
subb
inc
imul
cwtl
bound
loope
pop
rcrb
dec
mov
cwtl
arpl
mov
test
mov
out
xorb
outsl
push
out
push
xchg
pop
push
pushf
xor
xchg
outsl
pop
pusha
cmp
inc
mov
je
inc
mov
inc
cld
push
jns
push
mov
mov
stos
cmpl
mov
fistl
xor
lahf
inc
ljmp
fldenv
lock
sub
pop
sub
inc
das
aaa
pop
jns,pt
sub
jno
mov
push
and
outsb
cmpsb
jmp
lea
pop
gs
scas
jbe
pop
jecxz
xchg
mov
cld
push
mov
dec
pushf
popa
xchg
or
pushf
loope
mov
sbb
pop
leave
outsb
sbb
sti
push
loope
scas
je
sbb
and
nop
sub
xchg
xor
sub
shll
add
mov
mov
mov
cmp
dec
es
sub
knotb
and
dec
and
add
lcall
adc
jbe
sub
shrb
inc
mov
xor
outsb
push
pop
out
cmp
ficompl
add
aaa
gs
pop
mov
dec
imul
xlat
lods
data16
mov
adc
lahf
xor
cwtl
push
repz
mov
jnp
movsb
daa
push
xchg
ss
mov
adc
dec
movsl
aas
xlat
cmp
push
test
mov
jb
sbb
mov
sbb
inc
push
xor
repnz
int
aad
or
rcrl
mov
adc
sub
dec
aad
fcomps
hlt
adc
sbb
not
jb
sbb
fcomi
test
lods
adc
pop
pop
cld
cmp
cmp
add
xchg
repnz
out
and
add
ja
ret
lret
lock
jle
pusha
ljmp
test
jge
jg
loop
add
inc
add
adc
mov
jno
cmp
mov
je
mov
outsl
mov
push
and
and
pop
pop
loopne
jge
loop
sub
dec
out
ss
into
inc
jb
sbb
jb
jbe
cwtl
pop
inc
movb
inc
rorb
inc
sbb
movsl
jno
aas
cli
jae
mov
xchg
mov
sarb
sbb
sti
xchg
xchg
test
or
push
cmp
mov
stc
imul
mov
lret
inc
cli
lahf
into
loope
mov
and
xchg
clc
pusha
sbb
mov
pop
jg
jmp
cli
sti
inc
es
nop
pop
cmp
divl
fidivrs
cmc
fs
pop
test
add
cs
xchg
iret
add
sub
stc
sti
add
ret
add
adcl
jnp
pop
into
mov
ret
leave
test
mov
out
sub
into
nop
dec
aam
test
dec
in
push
jp
mov
imul
xchg
push
mov
mov
inc
ret
adc
into
aas
and
push
test
or
xor
sub
and
mov
fcompl
es
sub
mov
std
cli
xchg
push
lods
jnp
aad
sub
push
hlt
jbe
out
pop
mov
jb
inc
dec
iret
fisubs
xchg
pop
xchg
add
es
cmp
xor
pusha
or
popf
in
add
jle
cmpsl
sahf
pop
jns
gs
cmpl
mov
xor
clc
orb
add
adc
fdivrs
mov
jns
jge
pop
push
jb
icebp
push
mov
pop
cli
not
mov
mov
stc
insl
js
rcrl
ss
nop
cli
aas
ss
lds
sub
fistl
jg
dec
fstpt
push
std
xlat
in
out
dec
mov
in
inc
fisttpl
inc
xchg
stc
mov
test
dec
imul
mov
pop
lea
push
mov
enter
bound
mov
ficomps
push
aad
push
popf
fldl2e
lea
iret
mov
jl
jb
jl
testb
lock
lret
ds
cmp
ficompl
or
test
cmpsl
daa
xchg
mov
ror
fsubp
cmc
xchg
popf
out
xor
jae
mov
cmpsl
mov
outsb
or
or
jmp
fldenv
fcomp
and
cmp
sbb
enter
and
in
arpl
pop
testl
bound
jo
stos
stos
dec
and
sub
inc
jge
leave
dec
das
push
mov
mov
stos
pop
dec
cmp
cmp
cmp
mov
addr16
sub
mov
jae
sub
and
pop
xchg
movsl
out
dec
movsl
adc
hlt
fstpl
mov
or
push
orl
xchg
stos
cltd
jg
adc
pop
adc
andb
dec
cmp
push
insl
sti
out
aas
shlb
outsl
cmpsb
push
jo
cmpsb
mov
rcll
mov
add
lea
insb
inc
out
lea
in
notb
add
cmp
or
loop
lcall
test
in
adcb
loope
cmp
inc
add
xchg
mov
adc
or
adc
lcall
aaa
in
dec
jecxz
ss
dec
int3
dec
sbb
repz
addr16
push
cmpsl
sbb
mov
iret
ds
or
int
jae
sub
sbb
in
test
cmpsb
lcall
mov
mov
push
aad
outsb
mov
repz
enter
mov
jle
sbb
adc
add
movsl
jecxz
or
and
add
stc
push
add
leave
xchg
data16
movsb
aam
sbb
jo
mov
out
les
or
adc
push
mov
xor
pop
ljmp
mov
sub
test
aas
adc
sbbb
out
mov
mov
std
insb
mov
inc
fs
mov
and
outsl
xchg
sbb
cmp
and
cwtl
sbbl
lods
in
test
inc
add
test
mov
xchg
popf
imul
push
loop
movsl
cmc
rcrb
icebp
adc
xor
pop
mov
push
and
cwtl
int
add
rolb
sub
frstor
or
inc
shll
repnz
mov
dec
ret
pop
sti
fcmovnbe
int3
insl
pop
push
sub
gs
out
lret
in
push
mov
sub
jl
push
jl
test
push
sbb
mov
cmp
adc
jge
aaa
jle
icebp
outsl
dec
cmc
ret
inc
sub
mov
inc
push
add
pop
add
jg
mov
inc
adc
fldl
jae
lret
sti
and
inc
icebp
xchg
dec
jmp
rcr
sub
add
inc
outsl
adc
in
mov
test
mov
mov
sbb
cli
ss
jmp
out
cltd
ljmp
outsl
xor
dec
test
in
mov
add
repz
xchg
inc
mov
lock
pop
mov
pop
pop
in
jecxz
mov
jae
cs
inc
xor
jge
mov
mov
addr16
push
mov
add
in
mov
arpl
gs
fisubrl
dec
outsl
jbe
sbb
cli
into
sub
cmp
inc
push
cmp
push
and
push
vmwrite
lods
testb
cmp
push
subl
jg
mov
cmc
push
sub
iret
lods
mov
xchg
dec
sbb
rcl
jae
pop
fwait
insl
xchg
icebp
out
inc
jecxz
dec
mov
xchg
out
push
iret
add
ja
mov
into
sub
test
mov
sarl
out
fld
cwtl
inc
ss
mov
push
jno
sbb
cmp
bswap
push
aas
dec
insb
iret
subl
and
dec
and
inc
sti
jp
adc
cld
cmp
pop
sbb
push
repz
ret
or
sub
addr16
fwait
rcll
lods
je
lds
shrb
mov
out
fdivrl
jle
sbb
pop
enter
mov
decb
dec
sbb
jb
ret
clc
cmc
add
cld
hlt
sbb
ja
cmp
mov
cld
jne
pop
dec
pop
adc
inc
push
out
leave
das
icebp
sub
inc
jns
sub
mov
out
or
sbb
es
add
inc
scas
pop
aam
sub
xor
xchg
cmc
leave
js
mull
or
pop
mov
xor
jnp
test
fs
jp
mov
dec
fisubrs
arpl
cmp
fstpl
sbb
and
xchg
mov
stos
pop
mov
repz
fcmove
cmp
jnp
sahf
ljmp
xchg
into
mov
mull
mov
xchg
shr
add
mov
adcb
mov
lret
fsts
xchg
shrl
in
dec
jnp
mov
jle,pn
xchg
popf
lock
inc
pop
or
outsb
sbb
sahf
xchg
push
cmp
push
sub
push
cli
test
and
stc
lcall
stc
pop
hlt
jnp
xor
add
cmp
popf
scas
mov
pop
push
outsb
rcrb
dec
popl
push
ljmp
out
stos
rcrl
mov
cmpl
in
fisubs
dec
fildll
cmp
test
push
in
ja
dec
mov
pop
jmp
fs
jl
or
mov
bound
decl
mov
push
mov
pop
ljmp
sbb
cmp
sub
push
ret
xchg
push
adc
lret
addr16
adc
test
sub
mov
xorb
jb
adc
int3
pop
repnz
dec
int
clc
xchg
or
mov
inc
movb
and
insb
iret
jo
lds
enter
inc
data16
sti
popa
cmpsb
push
into
and
mov
xor
xchg
xorl
mov
push
fistpl
pop
clc
test
and
add
dec
xchg
sbb
push
push
scas
mov
pusha
push
mov
jae
add
mov
xor
dec
daa
cmpsb
mov
iret
stos
bound
jbe
pusha
shlb
int3
out
xchg
aad
cmp
jo
fcmovnu
xchg
xor
jg
stos
adc
push
mov
out
and
push
push
aaa
sub
mov
mov
sti
or
jmp
or
mov
mov
cmpsb
and
and
idiv
pop
mov
iret
gs
stos
mov
mov
xor
subl
push
ret
out
mov
cmp
ss
clc
pop
inc
fdivr
scas
push
into
adcl
popa
adc
jns
push
rorl
jne
insb
dec
in
push
sbb
mov
iret
push
iret
fs
sub
mov
cmp
adc
or
stos
aam
sub
das
mov
jne
hlt
fildl
mov
cli
add
loope
push
push
lds
dec
cli
xor
gs
cmc
push
out
jecxz
jno
push
jo
ja
mov
out
inc
inc
xor
adc
sub
nop
imul
adc
push
sbb
adc
movl
inc
sbb
fnstcw
sub
mov
frstpm(287
and
cld
xchg
inc
mov
push
xlat
sub
pop
mov
lods
mov
jmp
add
adc
dec
push
jge
mov
push
nop
mov
in
test
mov
sub
inc
fwait
xor
cltd
sbbl
inc
test
xchg
packuswb
popa
loop
test
scas
ss
loop
mov
xor
pop
pop
cmp
es
repz
pop
das
ret
test
enter
xor
and
das
push
loop
out
xor
or
push
mov
mov
call
inc
xor
adc
pushf
bound
lock
cmp
push
call
cld
jne
mov
push
jmp
fcompl
ficoms
xor
adc
adc
imul
int3
std
add
in
nop
cmpsl
iret
and
mov
in
outsl
nop
outsl
pop
cmp
cmp
pushf
iret
into
xchg
jg
add
popf
fistpll
mov
lcall
mov
add
or
loope
cmp
push
sbb
jne
sarl
out
jne
sti
xchg
jbe
inc
cld
out
leave
mov
sbb
in
fwait
jno
lret
push
cmp
push
or
mov
dec
mov
jnp
jae
adc
pop
xchg
inc
inc
outsl
fld1
call
loope
dec
jo
adc
cmp
xchg
push
pop
add
aam
aad
push
mov
ds
out
pop
xor
push
mov
roll
arpl
add
rorl
lahf
rolb
rorl
notl
fwait
outsb
mov
pop
mov
js
xor
sub
or
mov
jge
dec
lret
in
pop
jb
pop
dec
lcall
aas
rol
or
and
sbb
mov
xor
mov
mov
jnp
mov
mov
loop
iret
and
sar
inc
sbb
add
mov
sub
lods
ljmp
pop
jmp
dec
enter
xchg
jne
loope
inc
adc
adc
daa
xor
jbe
or
loopne
stos
ljmp
add
outsl
ja
cmp
push
or
loopne
out
xchg
fisttps
das
loop
shlb
push
cmp
lods
jle
shr
loop
or
mov
sub
hlt
fsin
outsl
jecxz
mov
push
jno
cmp
imul
xchg
dec
push
dec
jb
out
lcall
add
rclb
das
dec
into
xchg
sub
daa
lock
mov
mov
hlt
out
cwtl
repnz
popf
and
dec
hlt
xor
xor
xor
jmp
lods
mov
push
xchg
andl
pop
bound
mov
dec
ljmp
popf
subl
aas
jecxz
mov
sti
and
stc
add
mov
sub
lods
push
xchg
xchg
jo
or
js
scas
cli
iret
nop
mov
push
ffree
mov
lods
push
jle
mov
sbb
imul
sub
in
sbb
push
mov
xchg
mov
frstor
jg
push
jmp
push
enter
sub
inc
ss
ljmp
mov
bound
mov
fldcw
fisttpll
cmp
test
pop
roll
sbbb
leave
test
bound
or
or
movsl
add
xor
lret
fwait
into
pop
imul
mov
dec
jl
out
sarb
fdiv
lret
enter
in
adc
mov
adc
mov
xchg
inc
jns
mov
pop
lret
popf
sub
repz
pop
aas
in
pop
mov
mov
xchg
sbb
mov
push
arpl
lret
lds
lahf
add
stos
mov
push
jecxz
xchg
daa
mov
std
xchg
xlat
mov
and
inc
jl
xchg
pop
mov
xchg
mov
cmp
sbb
bound
loop
mov
xchg
push
ret
subb
adc
fwait
outsl
mov
outsb
lret
and
dec
or
rorb
and
xchg
insb
les
div
in
push
xor
adc
mov
mov
jo
xor
or
stos
jae
xchg
js
popa
add
pusha
fcomps
pop
add
sbb
icebp
ja
outsl
dec
inc
das
and
ss
icebp
dec
pusha
xor
sub
je
fldl
lcall
loope
or
test
inc
jbe
pushl
sahf
mov
sub
lods
or
sbb
cmpsb
xchg
cmp
imul
in
pop
std
jae
dec
push
xchg
fisubrl
dec
xchg
push
cmp
mov
fpatan
and
dec
movsl
pushf
sti
sar
sub
rcll
int3
insb
and
add
add
test
test
jg
imul
push
xchg
add
mov
sub
in
inc
sbb
lds
sub
addr16
sub
arpl
add
nop
ljmp
and
sbb
sbb
jae
clc
ficoms
loopne
cmp
ja
push
mov
mov
adc
add
in
ss
addb
push
ret
leave
out
insb
push
dec
andl
jne
out
mov
rolb
cmpsl
fnsetpm(287
arpl
ffreep
cmp
cwtl
arpl
fcoml
cli
mov
cmp
cli
push
shrl
shrb
cmp
pusha
and
add
mov
jg
or
out
jno
adc
lahf
pusha
jle
sbb
pop
pop
repnz
jp
inc
push
shll
sbb
jle
jbe
push
pop
push
popa
xchg
mov
xor
push
mov
in
lods
push
imul
add
aaa
push
or
testb
dec
and
outsl
sbb
addr16
enter
rcrl
cmp
stos
fnstcw
loopne
xchg
adc
mov
sbb
xor
adc
sar
js
inc
scas
mov
popa
lock
dec
shr
xor
pop
orb
xchg
jle
in
ficomps
iret
testl
xor
lods
push
dec
in
leave
int3
or
mov
sub
mov
aas
sbb
scas
adc
dec
jbe
push
popf
testb
lock
add
std
xor
cmp
sbb
test
xor
mov
sbb
add
xchg
test
int
cltd
xchg
ss
lret
push
das
pop
loope
fsubs
jbe
mov
pop
push
pop
outsb
cltd
mov
dec
pushf
sub
loopne
xchg
or
int
xchg
sbb
push
mov
lea
sub
xor
rcll
pop
pop
jge
imul
push
fs
sbb
lock
fbld
aad
call
mov
push
xchg
pusha
cld
pop
movsb
mov
lods
jno
test
add
cmp
stos
pop
or
cmp
cmpsl
inc
jecxz
js
mov
xchg
mov
lods
jne
cmp
dec
inc
pop
sub
cmp
ljmp
mov
arpl
dec
outsl
mov
lcall
push
std
faddl
mov
pop
xchg
add
mov
mov
fwait
lock
inc
pop
cmp
mov
xor
mov
incb
dec
sarb
inc
out
scas
rol
dec
cmp
push
mov
pop
icebp
push
arpl
xchg
mov
mov
sbb
shlb
push
sbb
mov
push
mov
ss
jnp
dec
sahf
mov
fs
cmpsb
add
nop
xchg
jno
and
mov
das
fs
aad
push
imul
leave
add
sub
jecxz
mov
or
out
stos
gs
xor
dec
mov
dec
xchg
sbb
loope
mov
aaa
add
cmp
outsb
aam
mov
fbstp
pop
inc
cld
xchg
push
test
inc
dec
push
sti
mull
jb
lahf
loopne
nop
pop
mov
xorl
loope
push
xchg
test
in
das
jp
shlb
divb
cmp
aam
jno
imul
dec
mov
jb
dec
xchg
xor
test
push
cltd
jmp
data16
mov
mov
gs
push
hlt
mov
adc
pusha
mov
xor
movsb
insb
xor
add
stc
push
add
movl
fcmovne
add
xor
xor
jnp
jp
sbb
int3
fiadds
mov
popa
lret
push
push
adc
dec
shl
sti
sub
or
mov
or
test
mov
int3
or
pop
xor
fdivrl
incl
push
lahf
aad
addr16
daa
xchg
sub
mov
sub
sbb
cs
adc
mov
mov
js
popa
cwtl
push
xor
enter
movsb
sbb
pop
sbbl
xor
or
or
jecxz
mov
sbb
pop
pop
inc
ljmp
inc
mov
inc
xchg
or
movsl
mov
adc
adc
inc
movsl
and
jne
sti
fs
test
pop
out
cmp
push
xor
mov
out
xlat
inc
pop
and
sub
mov
xchg
dec
lods
mov
lcall
lret
dec
xchg
jb
sub
fwait
add
lods
xor
scas
dec
adc
lods
pop
add
int3
mov
or
stos
sbb
loop
mov
inc
xchg
pop
aas
outsb
inc
xchg
and
xchg
sti
repnz
sub
pusha
add
mov
mov
or
jg
fstpt
fwait
or
inc
je
jno
xor
adc
pop
mov
mov
mov
adc
push
aas
repnz
push
mov
lock
and
dec
lods
pop
inc
mov
sub
movsl
jmp
fcomi
mov
cli
mov
hlt
repz
and
jecxz
sub
data16
hlt
mov
imul
and
push
testl
jp
mov
out
call
fcom
scas
lods
xchg
cmp
ljmp
sub
movsl
adc
mov
dec
mov
or
test
sar
clc
push
adc
repz
ffree
cld
xchg
sub
lret
aaa
test
cld
push
pop
ret
xchg
adc
jge
mov
loop
jae
mov
pushf
orl
mov
outsb
xchg
inc
int
xor
add
lds
scas
into
lcall
or
adc
imul
out
mov
das
ds
cmp
out
mov
andb
pop
gs
inc
push
inc
cmpsb
sbb
daa
or
bound
adc
mov
out
sahf
pushl
cmp
pop
mov
aaa
test
push
mov
sbb
pop
or
sbb
adc
mov
data16
cmpsl
test
jge
lds
or
push
cmp
dec
data16
mov
mov
xchg
stos
sub
xchg
xchg
movsl
fwait
icebp
add
enter
lods
loopne
test
jno
les
mov
jecxz
or
rorl
dec
cmc
pop
inc
add
cmp
add
sub
cmp
fdivp
xchg
divb
out
mov
push
pop
dec
cld
lret
jg
repz
int3
add
inc
xor
add
addb
subl
dec
sbb
adc
je
repz
cmp
cwtl
rorb
neg
je
sbb
adc
sub
prefetchnta
shlb
mov
pop
inc
int3
mov
xor
fcomps
mov
xchg
mov
xor
test
lcall
mov
inc
add
cmp
stos
dec
adc
mov
hlt
jp
add
xlat
and
notl
lret
mov
daa
jno
in
mov
cwtl
mov
cmpsb
into
ficompl
mov
test
fld
fwait
mov
das
jno
add
mov
outsl
scas
ss
int3
pop
stc
add
pusha
leave
xchg
nop
push
sub
dec
add
les
mov
jmp
xchg
lods
lcall
into
push
int3
inc
arpl
pop
dec
bound
xchg
scas
loop
push
call
shll
inc
enter
jl
lret
sti
mov
adc
fmuls
arpl
push
xchg
or
or
testl
jnp
mov
push
jg
lea
push
lcall
lret
cmp
int
icebp
sbb
sub
cmp
jno
inc
out
popf
movsb
lock
fisubs
xor
jge
push
repz
cmp
loope
pop
or
or
pushf
shrb
iret
and
sub
dec
jcxz
jns
mov
dec
pop
push
sub
mov
je
push
lcall
loope
daa
ret
outsl
mov
inc
rcll
sub
das
xchg
mov
shl
sub
fidivrs
in
sarb
loop
ret
gs
stos
and
mov
and
xlat
sub
sbb
mov
xchg
sub
mov
xchg
nop
mov
jbe
cmp
pop
subl
lods
push
ss
xchg
jnp
mov
pushf
cld
mov
inc
mov
pop
jns
pop
xchg
ss
lcall
stos
sbb
ret
mov
pop
mov
cmpsl
xor
enter
mov
dec
into
or
les
jmp
sahf
fisttpl
add
dec
daa
mov
jnp
fisttpl
adc
adc
or
xorw
pop
sahf
aam
jnp
mov
fs
in
dec
test
xchg
and
push
in
sbb
sub
push
adc
pop
repz
insb
dec
sahf
loope
jno
dec
or
lods
adc
cmp
in
shr
scas
xor
icebp
mov
xchg
call
enter
add
aas
outsb
cmpsl
or
lcall
in
adc
hlt
les
addl
sub
adc
xchg
dec
sub
mov
cmp
sub
int
xchg
movsl
xchg
push
jns
mov
sbb
add
in
lods
pop
sbb
xchg
inc
outsb
lods
xor
add
cld
push
jb
xchg
in
adc
mov
jmp
clc
loope
push
imul
rcrl
into
bound
mov
insb
dec
lods
sarl
sahf
push
stos
cmp
ret
xor
fldln2
add
out
inc
inc
mov
adc
jmp
cwtl
dec
jle
andl
enter
mov
addr16
outsb
fistps
clc
push
and
sbb
sets
and
lcall
inc
add
sbb
movsb
js
in
cld
add
icebp
pop
adc
test
repnz
inc
dec
ret
fmul
or
add
nop
xorl
jmp
lock
push
loopne
test
in
push
push
rcrb
pop
rolb
mov
jbe
jbe
or
or
movsb
mov
xor
mov
xchg
dec
mov
std
push
loope
bound
stc
jno
cli
int
leave
mov
add
push
int3
into
xor
stc
inc
mov
loop
insb
mov
push
mov
sub
or
mov
adc
bound
test
hlt
push
xchg
xchg
push
dec
cmp
mov
rclb
popa
stos
and
enter
loope
push
mov
mov
imul
pop
fcompl
out
mov
or
sbb
sahf
xchg
and
push
jle
les
fwait
pop
push
mov
xor
es
jno
gs
cmp
jnp
and
xchg
fidivl
aam
dec
jg
test
mov
sbb
adc
pop
pop
scas
int3
lods
inc
call
fdivrp
aaa
inc
xchg
inc
or
cmp
mov
and
cli
pop
jbe
popf
lods
out
cwtl
sub
xor
dec
aas
mov
insb
jnp
decb
aas
js
idiv
neg
cmp
dec
push
adc
jl
shlb
sub
inc
lea
idivl
inc
icebp
jae
popf
repnz
outsl
push
push
dec
fdivp
inc
fisubrl
adc
cmpsb
jb
imul
cld
dec
outsl
mov
out
and
mov
aaa
mov
sarl
push
mov
inc
jmp
push
xchg
inc
divl
dec
ljmp
sarb
or
lret
dec
or
call
in
sti
jo
cmp
repz
pop
pushf
mov
inc
int
cmc
inc
pusha
add
and
lods
sbb
bound
mov
movsb
sbb
sarb
mov
mov
mov
roll
pop
aad
loope
adcl
mov
jp
nop
mov
inc
mov
pop
loopne
cs
push
ret
popa
xchg
or
aaa
pop
mov
adc
dec
cmpsl
cmp
pop
loope
or
lahf
cltd
clc
mov
jmp
jo
fldl
fisttps
fs
dec
fisubs
cmc
adc
pop
adc
lahf
xchg
in
lret
cmpsl
lret
mov
test
xchg
adc
rcr
add
xchg
aas
orl
sbb
mov
sbb
imul
data16
popf
shrb
dec
sub
repnz
or
xchg
ret
ljmp
inc
dec
stc
cltd
mov
hlt
dec
inc
and
inc
stc
xor
push
sbb
sbb
pop
pushf
inc
andl
lahf
adc
popa
xchg
pop
decl
inc
mov
cmp
fildl
in
xchg
inc
push
sarw
es
out
mov
adcb
jne
loope
sti
outsb
fsubrs
out
addr16
mov
fs
jae
jnp
addr16
or
ds
hlt
popa
xor
dec
mov
push
lea
inc
clc
fcompl
push
adc
leave
bnd
pop
cmp
or
iret
sub
cli
add
aad
fmuls
xchg
cmp
in
dec
fdivrl
psrlq
add
std
aaa
in
push
mov
outsl
adc
cmpsl
popf
xchg
push
pusha
push
imul
scas
mov
mov
or
adc
mov
movsb
jae
rorb
jbe
cs
lret
mov
push
dec
fnstcw
sahf
or
imul
inc
dec
sub
cmp
test
fadd
ss
daa
push
push
lahf
mov
lcall
ficoms
mov
sub
lret
lods
fdiv
jnp
jno
push
mov
mov
or
mov
push
rcrl
cwtl
sub
aam
bound
adc
pusha
jge
into
jp
jecxz
movsb
movsb
adcl
dec
scas
dec
insb
pop
shll
out
pop
sub
inc
in
fwait
or
mov
aam
testb
arpl
push
scas
xchg
outsl
cmc
mov
mov
gs
mov
xchg
adc
cmp
sub
test
dec
dec
push
pusha
and
mov
jmp
pop
and
xor
pusha
push
xor
pushf
mov
adc
jge
iret
jnp
in
and
sbb
mov
in
mov
pop
arpl
out
cmp
mov
shlw
into
stc
mov
inc
mov
bound
imul
jno
aaa
into
inc
sbb
outsl
scas
lock
dec
cltd
std
incl
es
add
jl
pushf
lcall
xchg
pop
mov
scas
jge
mov
and
mov
sbb
push
jl
fcmovu
aaa
test
pop
fistpll
cli
out
push
jae
push
nop
fsubp
rcr
sbb
mov
cmp
fcmove
icebp
into
dec
mov
cmp
sub
clc
xor
jmp
push
daa
push
cmp
xor
adc
fnstenv
jno
aaa
inc
loop
out
push
outsb
adc
jae
out
sti
xchg
push
xchg
outsb
push
add
adcl
xor
outsl
fnsave
add
jp
mov
fadds
rclb
mov
inc
xor
and
push
imul
dec
pop
xchg
mov
int
imulb
dec
or
ljmp
cmpb
push
and
shll
imul
aas
addr16
lahf
lods
test
insl
in
pushf
iret
ret
rclb
or
pop
mov
fisubrl
stos
xor
and
mov
stos
daa
movsb
add
test
or
xor
sarb
int3
add
lret
mov
arpl
and
outsb
mov
fucomi
push
lds
cmp
mov
mov
push
cmp
push
popf
clc
dec
insb
das
imul
or
xchg
dec
inc
ret
insb
dec
xor
ds
fsubl
aam
aas
into
dec
cs
sub
lods
jl
scas
rorb
xchg
pop
jo
sti
mov
mov
xchg
out
sbb
shlb
push
cmp
dec
subl
inc
push
loopne
sub
fs
sub
push
jmp
pop
das
push
mov
pop
adc
xor
push
mov
dec
gs
push
pop
inc
inc
push
xchg
lcall
sub
das
imul
neg
inc
add
ljmp
xor
and
jmp
popf
cmp
ljmp
push
mov
and
mov
in
inc
enter
imul
nop
mov
mov
add
ret
add
loopne
jno
pop
in
or
lock
aas
and
stc
push
push
stc
adc
loop
leave
je
and
pop
xchg
call
rol
aad
int
lea
add
cmc
cmp
xor
cwtl
pushf
pop
enter
popf
mov
inc
dec
idivl
enter
aad
fisubl
test
sbb
cmp
mov
xchg
repz
sbb
sbb
jo
inc
xor
jb
orb
scas
shlb
mov
out
stc
pushf
push
pop
dec
stc
dec
fmul
sbb
je
rcll
sub
mov
add
adc
add
repz
fcoms
push
cmp
and
push
out
lahf
mov
in
cmp
xchg
lret
dec
mov
dec
cmpb
clc
mov
and
add
lods
mov
sti
dec
das
outsl
ficoml
inc
push
mov
jb
pop
mov
mov
sbb
lcall
inc
out
push
dec
test
adc
adc
add
sbb
mov
dec
pop
dec
mov
out
dec
imul
loope
add
pop
dec
insb
add
stos
shlb
movsl
mov
xor
hlt
gs
fdivp
jns
mov
xor
cmc
push
xchg
add
xchg
mov
xchg
sub
jge
dec
bound
xor
cwtl
sub
push
xor
push
dec
xchg
rolb
mov
popa
dec
ja
xchg
push
das
jecxz
lods
arpl
nop
xchg
add
fsubs
leave
xchg
popa
add
loope,pn
push
cmpsb
out
ret
xchg
iret
mov
cmp
sbb
enter
jl
inc
clc
fimuls
jne
pop
das
pop
call
push
jge
neg
dec
push
inc
xchg
jbe
cltd
mov
shll
sub
notb
sbb
pop
movb
or
scas
out
clc
rorl
imul
mov
mov
hlt
in
daa
movd
imul
mov
dec
cmp
cmpsb
or
cmp
mov
loop
xchg
mov
and
mov
mov
push
mov
mov
insl
rorb
fcomps
mov
xchg
shll
sbb
jl
neg
and
dec
xor
mov
push
inc
mov
mov
addr16
in
jle
int3
push
scas
imul
xor
lret
std
and
or
xchg
test
sub
push
stos
cmc
sub
add
cli
pop
imul
cmpsb
call
xchg
int3
sahf
or
imulb
nop
in
mov
push
pushf
dec
or
push
es
inc
ret
addr16
mov
pop
push
push
fisubrl
js
pop
push
sub
sub
pop
adc
lret
adc
adc
jno
adc
adc
les
in
out
in
mov
call
lret
push
sarl
mov
pop
mov
cmp
and
fbstp
test
cmp
jge
addr16
add
mov
and
pop
inc
sub
push
mov
or
les
loope
mov
sub
lds
bound
sub
jle
popa
adc
movsb
sub
into
sub
and
xchg
push
mov
xchg
outsb
daa
sbb
dec
cli
push
out
cmc
mov
pop
ljmp
sbb
lcall
fdivrl
icebp
fxch
xor
test
sti
les
in
lods
add
je
and
inc
or
in
ds
mov
xchg
rcrl
hlt
mov
pop
mov
aas
into
dec
or
xchg
dec
adc
insb
jb
aam
sub
or
cmpsb
dec
xchg
divl
mov
dec
out
in
mov
inc
xchg
mov
int
push
shrl
enter
mov
lods
mov
or
lahf
push
test
adc
push
popa
inc
jg
adcl
sbb
shlb
adc
imul
fdivr
cmpsl
mov
cmp
or
dec
mov
xchg
push
inc
cmpsl
mov
fidivl
arpl
icebp
mov
or
mov
faddl
cmp
push
mov
or
pop
icebp
jmp
lock
dec
test
sub
adc
pushf
sbb
mov
roll
adc
mov
sarl
jbe
lret
ret
pusha
fimull
insl
adc
rcll
enter
mov
mov
inc
lcall
dec
movsl
adc
or
push
mov
cmp
adcb
sbb
mov
popf
jecxz
sbb
addr16
sbb
mov
inc
daa
xchg
xor
pop
xchg
or
jecxz
and
nop
add
xchg
jmp
sbb
movl
pop
mov
xchg
add
ss
ret
rolb
movsl
push
imul
push
lret
xchg
mov
push
cmpl
pusha
arpl
imul
sub
inc
and
out
ja
test
aam
jl
mov
aaa
sbb
mov
fcompl
xchg
stc
loope
and
or
and
dec
push
xchg
jno
mov
sbb
shll
out
std
xchg
aaa
lahf
loopne
cmpsl
adc
sbb
xor
lahf
cmpsl
and
popa
sub
repnz
add
mov
xchg
push
add
mov
and
sbb
mov
ret
xchg
lcall
iret
mov
and
mov
lcall
and
sub
xchg
jge
aaa
add
dec
push
popa
std
adc
add
inc
inc
repnz
mov
pop
test
arpl
add
orl
js
dec
mov
xchg
xchg
outsb
outsl
fnstenv
xor
push
in
jle
call
outsl
sbb
adc
add
sbb
lock
shll
inc
mov
dec
xchg
cmc
mov
lahf
movb
out
or
stc
rorb
cmp
flds
lds
pop
out
push
pop
pop
shl
std
xor
dec
ret
fsubr
and
inc
inc
xorb
cmp
shr
fldcw
and
mov
adc
addl
icebp
aad
fsubp
jecxz
dec
jns
or
jge
adc
jno
lods
jnp
aad
push
icebp
xlat
push
ficoml
push
lcall
fmuls
mov
push
lock
mov
jp
jp
adc
dec
sub
nop
lds
imul
add
pop
test
sbb
int
in
mov
mov
sub
cmp
pop
sub
jg
push
mov
sub
sbb
movsb
add
es
sub
xchg
mov
dec
push
fisttps
ja
ja
loopne
inc
add
jle
aaa
mov
sahf
popf
mov
adc
jnp
shl
je
fimull
loop
cli
cmpsl
insl
aas
dec
daa
and
jge
xor
rcr
and
loopne
xor
or
inc
mov
pop
mov
add
xchg
mov
cmp
sbb
ja
fwait
shl
in
addb
das
sub
push
push
into
cmp
push
dec
cmp
insb
sbb
inc
jb
mov
pop
fisubs
fsts
in
and
imul
hlt
sbb
adc
xor
push
int3
dec
mov
adc
mov
ljmp
dec
adc
pop
pop
adc
pop
or
adc
or
int3
aas
daa
jno
jo
andl
mov
mov
scas
fmuls
add
adc
aas
lahf
out
add
sahf
push
and
cmp
adc
cltd
mov
mov
stos
cs
mov
enter
loope
add
adc
add
mov
jae
add
dec
insl
jbe
mov
and
mov
or
cmp
add
xor
pop
orb
das
xor
push
push
add
or
cmc
cmp
fcmovnu
int3
and
mov
pop
mov
mov
inc
lods
inc
cmp
xchg
add
in
bound
cld
xor
cmc
xor
shrl
sbb
add
enter
sbb
insb
dec
mov
int3
popf
dec
stos
sarb
or
sarl
push
push
mov
push
cmpsb
test
hlt
lods
loop
pop
jle
add
enter
inc
clc
out
adc
pop
lahf
aas
lds
int3
and
cmp
xchg
pop
fucomip
test
aaa
xchg
lds
mov
lahf
jge
push
das
sub
imul
popf
jp
xor
cmp
pop
add
sub
pop
aas
xchg
popf
popa
inc
inc
mov
stc
or
call
mov
add
cmpsl
and
inc
cld
mov
mov
lret
sbb
imul
xchg
test
jnp
mov
jne
testb
test
fisubrs
jle
add
insb
loopne
push
pop
movsl
call
lods
incb
rcr
aam
adc
and
hlt
cmp
adc
xchg
lds
scas
push
adc
in
xor
into
inc
mov
cmp
xchg
add
adc
scas
movsl
or
xorl
or
inc
or
aam
les
jne
popa
rcrb
test
xor
mov
and
pop
leave
sub
sbb
call
mov
dec
lock
adc
rolb
push
pop
push
jecxz
cmp
pop
add
cld
loop
sbb
mov
inc
jmp
in
lea
dec
adc
test
mov
jecxz
cmpsb
and
and
mov
adc
in
xor
mov
cmp
lcall
xor
sbb
pop
jecxz
cmp
ret
pop
push
fadds
int3
pusha
imul
cmp
dec
xlat
inc
clc
lret
popf
jne
add
dec
in
push
js
push
je
lahf
addb
dec
or
out
cmp
xchg
pop
sub
call
push
aam
xchg
dec
pop
push
shll
cwtl
mov
stc
add
and
imul
pushf
dec
fdivl
sub
add
pop
mov
or
fistpll
pop
lods
scas
pusha
mov
push
popf
xchg
les
jb
xor
pop
jne
orl
push
test
pop
jl
cmc
jne
subl
shlb
and
inc
clc
push
arpl
push
imul
addr16
and
inc
inc
jmp
push
jbe
fnstenv
dec
mov
ds
pop
sbbl
call
jae
cmpsl
mov
rol
pop
mov
lcall
icebp
dec
out
and
xchg
mov
adc
jbe
cld
popa
mov
add
cmpsb
data16
roll
pop
mov
sub
dec
sbbb
dec
inc
adc
pop
pop
inc
jno
incb
push
dec
jge
xchg
inc
mov
xchg
lahf
adcb
jnp
aas
movsl
mov
in
mov
mov
mov
and
dec
in
or
jbe
xchg
xchg
lahf
adc
sbb
in
inc
repnz
jecxz
xor
xchg
hlt
shll
adc
mov
pop
jnp
or
imul
dec
fs
mov
cmp
jno
dec
adc
ljmp
fdivs
and
push
sub
ds
pop
lret
mov
ret
adc
dec
bound
xor
iret
and
pusha
mov
test
push
lods
icebp
xor
insl
rcll
leave
scas
jne
xor
cmp
pop
lods
sbb
add
jae
andb
jb
aas
mov
or
mov
mov
push
shlb
repnz
stos
xchg
and
mov
cmp
jnp
cmp
negl
sub
push
movl
pop
dec
mov
sbb
mov
xor
lahf
push
fidivrs
sub
dec
imul
or
sub
adc
add
mov
push
imul
dec
imul
out
clc
ficompl
or
hlt
jp
sarb
sub
les
popf
sub
inc
lcall
xor
adc
mov
mov
mov
aas
sahf
mov
rcr
dec
loop
cmp
xchg
cwtl
mov
pop
cwtl
ret
pusha
pushf
jns
clc
xor
and
loope
in
cmp
xor
mov
inc
cmp
dec
inc
pop
lock
mov
lcall
fisubs
or
pop
jne
arpl
mov
push
push
jg
testl
dec
dec
cmpb
lret
jge
cmpsb
xchg
cmpl
in
push
jno,pn
mov
mov
cmp
push
icebp
lods
jne
sbb
fcmovnbe
pop
mov
rclb
and
ficoml
mov
jae
cwtl
jb
test
xchg
push
mov
fcoml
or
lcall
push
lahf
mov
mov
inc
and
aaa
adc
int3
aam
pop
cmpsb
outsl
ds
sbb
cmp
test
adc
push
xlat
dec
push
or
nop
icebp
data16
loopne
rol
add
pop
mov
push
out
add
into
mov
call
dec
push
into
bound
call
lcall
loopne
or
popl
dec
push
mov
mov
adc
xacquire
adc
xchg
sub
pop
cmp
push
pop
popf
dec
sahf
rcl
sub
dec
pop
pop
push
pop
inc
mov
ret
ja
sub
and
loope
jmp
add
jge
out
pop
jl
lods
pop
and
cmpsl
mov
out
sub
repz
fs
pushf
and
or
pop
mov
and
nop
pop
cltd
pop
addr16
and
cwtl
outsl
mov
add
in
push
and
jg
push
mov
aas
jbe
jb
adc
jg
in
sub
xchg
aad
std
fstpt
jecxz
xor
xlat
sub
hlt
lods
gs
mov
mov
outsl
xor
push
lds
sbb
cmp
out
mov
xchg
int
push
sahf
cmp
sti
add
mov
cmp
stc
cmc
shll
ja
xlat
mov
cmp
out
test
idivb
pop
lcall
enter
mov
pushf
mov
push
std
jns
cwtl
pusha
ret
test
sbb
cli
sub
jmp
dec
test
pop
add
sub
dec
inc
jge
incb
test
pop
sub
pop
sub
push
dec
mov
popf
shlb
mov
std
mov
and
std
xchg
push
shrl
push
popa
repz
adc
loope
push
jecxz
sub
or
aad
cwtl
dec
xchg
mov
mov
test
aad
xchg
adc
add
push
xchg
mov
mov
mov
mov
adc
jle
in
out
dec
jno
fwait
push
rcr
bound
fiaddl
add
xor
or
jbe
hlt
stos
loope
ja
les
mov
pop
leave
mov
out
and
fildll
mov
cmc
mov
mov
and
adc
fstl
or
sub
aam
xchg
add
push
or
pop
sbb
out
inc
imul
jne
pop
inc
ds
icebp
pop
adc
mov
jp
stc
scas
inc
mov
sbb
jge
xorl
orb
arpl
pop
jmp
movsl
pushl
pop
flds
lret
sti
loopne
sbb
movsb
sub
aad
test
ss
int
in
xor
arpl
jecxz
xor
adc
int
mov
pop
xchg
push
add
hlt
pop
adc
and
push
and
aaa
mov
ror
and
insb
xchg
xorb
test
pop
push
and
sbb
scas
or
test
mov
cmp
insl
xor
stc
loope
jmp
and
scas
jg
ljmp
mov
cld
adc
fstpt
popf
lret
cmp
xchg
lods
push
dec
sub
mov
sti
in
std
jmp
or
cld
add
cwtl
je
call
pushf
xor
xor
roll
lret
sub
movsl
push
jg
out
test
fidivl
dec
out
popf
cwtl
lahf
repz
cltd
fadds
scas
into
fwait
pop
inc
jl
xchg
iret
aaa
sub
jle
jae
pop
mov
and
xorl
lret
rcrl
xchg
xchg
imul
inc
loopne
push
std
pop
pop
aam
cs
jnp
sub
imul
jo
outsb
imul
add
ss
scas
or
dec
jno
mov
sub
cmc
pop
inc
mov
xchg
add
mov
push
in
inc
shr
pop
and
je
jge
mov
push
int3
inc
mov
popa
js
mov
cld
pop
xor
fcmovnbe
or
lods
or
mov
mov
xchg
in
loope
dec
insb
mov
pusha
cmp
push
repz
aam
inc
notb
leave
mov
fcoml
sbb
mov
mov
or
dec
inc
nop
xchg
ret
cs
pop
inc
cmpsb
mov
fs
clc
mov
xchg
sbb
dec
adcb
mov
jnp
inc
adc
xor
andl
fimuls
xchg
dec
arpl
divb
cmpsb
pop
and
mov
lret
xchg
scas
mov
or
sbb
and
arpl
arpl
inc
jle
fmuls
or
out
loope
push
loop
mov
sub
add
xchg
sbb
cmpsl
xchg
bound
push
fwait
push
mov
push
shrl
cmp
stos
mov
fcompl
loop
inc
jle
sub
std
lods
dec
jmp
imul
xchg
and
cmp
stc
and
addr16
sub
pop
or
mov
push
and
mov
jns
addr16
scas
mov
mov
lds
pusha
add
aam
inc
or
aaa
dec
mov
inc
or
inc
cmpsb
xchg
popa
mov
test
cmc
dec
cmpl
pop
mov
leave
dec
repnz
mov
in
xchg
les
pop
jns
jne
pop
sub
xor
mov
xchg
mov
outsb
fld
lods
je
push
xor
pusha
mov
sub
rcll
lret
cmpsb
jae
lahf
pop
push
sbb
add
push
ret
mov
mov
dec
dec
inc
mov
pop
mov
add
scas
aad
xchg
and
call
stos
stos
fisttpl
sahf
in
or
cmp
aam
and
mov
push
mov
dec
nop
mov
or
jmp
and
rorb
cmp
in
dec
push
cli
or
movsl
mov
jo
data16
out
lea
sbb
dec
pop
push
xor
lahf
inc
gs
pop
pop
cmp
mov
fs
xor
bound
xchg
jns
movsb
dec
fistpll
test
cmp
in
jno
in
pop
and
push
push
push
inc
fldenv
sbb
mov
out
or
xchg
cwtl
clc
or
pusha
mov
arpl
scas
dec
dec
outsl
push
adc
mov
inc
in
and
orb
add
push
cmp
test
mov
push
pop
loopne
loop
adc
add
pop
inc
or
mov
ss
scas
xchg
dec
fstps
xchg
push
mov
aam
in
in
sub
xchg
dec
lods
call
pop
in
cltd
lds
jp
jae
sub
outsl
cmp
mov
out
jge
mov
jl
test
inc
mov
test
ds
inc
xchg
das
lahf
and
imul
div
adc
int3
mov
push
ss
stc
fcmovnu
daa
mov
dec
rcll
xor
jb
adc
dec
dec
dec
les
mov
push
dec
adc
adc
into
movsl
mov
loopne
push
xchg
das
inc
dec
test
fnstenv
rcl
in
push
push
icebp
jne
inc
sbb
loop
mov
nop
cmc
pop
out
pop
xlat
rcrl
jnp
dec
mov
ret
hlt
test
inc
cmc
jae
xchg
cmovns
mov
lahf
pop
push
mov
fldt
test
in
mov
pop
mov
pop
bound
mov
xor
inc
rcrb
jae
loopne
ss
mov
stc
jg
stos
or
inc
sarl
aam
sbb
test
aad
sti
stos
popf
xlat
sbb
inc
addr16
rclb
idivl
push
pop
mov
sub
cs
adc
cltd
mov
imul
sbbb
fidivl
cwtl
add
aam
mov
lods
fwait
or
les
sub
mov
jl
jge
leave
push
into
xchg
fdivs
ljmp
mov
sbb
add
fsubr
inc
adc
rclb
sbb
lcall
loop
cmp
inc
repz
and
in
mov
jae
cmp
loop
push
jg
ror
and
cltd
and
fistl
push
bound
je
clc
sub
fs
cltd
sbb
scas
mov
sbb
repz
mov
roll
sub
icebp
adc
and
aad
scas
sbb
pop
mov
jge
and
hlt
jo
pop
jle
cmp
out
mov
mov
int3
add
cmp
out
inc
push
in
movsb
jae
adc
les
and
inc
add
lods
and
insl
in
lods
popf
stos
iret
int
adc
mov
fdiv
add
leave
sbb
mulps
mov
ja
das
insl
push
inc
and
xchg
leave
or
add
lret
mov
aaa
sbb
pop
and
jg
dec
rcrb
mov
imul
xchg
or
xor
cwtl
test
cmp
inc
ret
outsl
cmpsb
adc
mov
push
add
jg
addb
pop
pop
icebp
insl
stc
sbb
mov
xchg
pop
cmp
xor
xor
pop
adc
std
ja
dec
cmp
mov
and
ficoms
ss
pop
cmp
xchg
add
insl
cwtl
xchg
adc
cmp
jno
jp
call
push
and
xor
inc
sar
xor
ljmp
jg
adcb
add
sbb
arpl
adc
or
cli
sub
mov
mov
subl
loopne
in
mov
dec
adc
repz
adc
sbb
xchg
cmpl
or
jno
or
mov
or
bound
push
popa
jge
mull
aam
sbb
insb
loope
movsl
scas
mov
sbb
or
iret
mov
inc
dec
int
jge
pushf
icebp
cli
cli
xchg
push
xor
lods
dec
addb
hlt
rcll
xchg
movsb
push
and
ljmp
insb
cmp
sbb
add
adc
out
push
lcall
and
rcrl
jmp
adc
push
es
sbb
mov
cmp
mov
arpl
or
xor
or
push
and
fidivrs
xchg
mov
adc
fcmovu
add
cmp
cld
fucomp
popa
inc
pop
sahf
mov
stos
sarl
inc
std
mov
in
mov
jg
xchg
lock
push
mov
mov
push
cltd
hlt
sub
stos
pop
ja
push
movsb
cmc
and
push
mov
fidivl
pop
pop
fdivs
data16
push
stos
sbb
sahf
push
out
shrl
sarl
icebp
int
inc
dec
out
lds
popf
xorb
dec
jnp
pop
push
pop
dec
mov
movsb
pop
sbb
or
roll
push
cmpsb
mov
pop
clc
sbb
or
test
push
into
xlat
movsb
imul
jns
and
jp
pop
js
cmp
imul
jle
mov
mov
pop
xor
sbb
mov
enter
mov
xchg
push
mov
in
sub
loopne
mov
testb
loop
mov
fadd
stc
lret
dec
imul
in
out
outsl
xor
adc
push
notb
mov
push
loop
cmp
loopne
int
pop
and
fldenv
mov
mov
ds
cwtl
jbe
pop
imul
mov
das
outsl
sub
std
cmp
sub
in
nop
xor
inc
mov
shrl
loopne
push
imul
scas
add
inc
pop
jae
sub
aaa
fisubs
dec
cmc
push
and
data16
in
out
rol
pop
cli
fldenv
js
mov
jnp
mov
movsl
in
ret
ret
adcb
mov
lcall
and
lret
or
or
cmc
stc
jecxz
adc
sub
fadd
popa
inc
inc
in
es
loope
xor
lds
lret
mov
negl
xchg
adc
inc
movsb
adc
sbb
fnstcw
add
jnp
or
shrb
cmp
lock
fcoml
test
call
xchg
and
sbb
dec
mov
loopne
push
dec
pop
cmp
xor
pop
sbb
push
pop
push
add
add
sub
insl
mov
cmp
repz
stos
divb
sbbl
jbe
adc
leave
icebp
inc
and
xchg
test
loop
push
sub
push
lods
fdivl
ret
imul
push
out
mov
lret
je
sbb
xlat
xchg
add
orl
pop
sbb
pushf
test
mov
daa
mov
aaa
push
lret
pop
push
outsb
addr16
insb
inc
cld
mov
fsubl
out
mov
cmp
mov
lods
call
push
sub
add
inc
mov
push
fwait
jl
pop
stos
iret
pushf
jnp
roll
aas
mov
js
jp
sub
in
bound
jle
xchg
mov
adc
fldl
ret
out
repz
std
dec
test
xor
pop
sar
daa
xlat
sbb
sub
pusha
xchg
pop
ret
xchg
mov
repz
xchg
rcrl
testb
inc
pop
stos
mov
adc
aam
pop
aaa
out
shlb
xchg
push
mov
int3
mulb
xchg
push
or
stc
arpl
enter
lcall
std
pop
or
ret
push
cmp
mov
shll
nop
mov
lock
sub
adc
pop
push
and
xor
xor
orb
pusha
cmp
mov
leave
cmpsb
arpl
and
lea
outsb
mov
mov
gs
shll
jg
push
ss
inc
lock
lock
notb
scas
and
mov
dec
rep
or
in
or
imull
les
mov
cld
clc
aad
jae
jbe
test
call
sub
neg
mov
or
xchg
xchg
rolb
mov
enter
xorb
popf
cmp
outsl
xchg
sbb
push
add
scas
pop
adc
sub
add
subl
int3
daa
jge
sub
sub
test
aad
cmpl
fsubl
mov
mov
jge
xor
iret
rcll
pop
jecxz
push
sbb
cmp
addr16
les
scas
inc
xchg
push
inc
ds
inc
ds
test
add
je
lds
cmpl
mov
ljmp
cs
and
mov
push
push
ficomps
ljmp
dec
stc
add
jecxz
aas
adc
out
rorl
adc
mov
mov
imul
add
sbb
stos
sub
stos
dec
sub
addl
mov
jb
loopne
and
je
jp
mov
mov
push
addr16
push
adc
cmp
fs
push
sub
sbbl
mov
jbe
and
ret
xchg
call
int3
mov
and
and
mov
push
push
jo
dec
data16
into
test
test
subb
fldt
loope
popf
and
jecxz,pn
jns
pusha
aad
jnp
lods
int
xchg
outsb
or
call
push
dec
and
pop
inc
dec
out
sbb
aad
lods
sbb
xor
fnstcw
push
push
in
addr16
jmp
xor
and
xor
xor
ficompl
dec
std
arpl
test
dec
mov
dec
cmp
push
mov
or
jmp
sub
sarl
dec
dec
sbbl
roll
or
inc
pop
call
aad
xchg
push
ss
ljmp
push
loop
jge
fldcw
outsb
lods
push
lock
push
ret
hlt
fwait
dec
pop
dec
sbb
or
inc
imul
iret
sbb
pop
pop
sub
out
sbb
add
adc
scas
mov
cmpsb
mov
mov
movsb
mov
out
jnp
lea
scas
mov
mov
add
push
das
imull
mov
les
imul
test
je
out
mov
loop
out
cmpsl
push
inc
lods
adc
movb
rorb
jbe
pop
mov
mov
xor
inc
fisubrl
and
imul
arpl
jl
jno
movsb
popa
fcmove
bound
filds
in
test
lahf
mov
push
rcrl
cld
aas
inc
push
pop
mov
xor
or
out
cs
jno
pop
pop
xchg
cmp
sub
inc
mov
insl
jbe
popa
jg
daa
xchg
mov
pop
pop
dec
or
pop
push
mov
aaa
push
sbb
test
fcmovne
and
dec
fimuls
roll
call
mov
push
fiaddl
push
xor
js
xchg
mov
bound
xor
stc
outsl
repnz
sub
jg,pt
shrl
ficomps
out
scas
mov
iret
stos
mov
out
in
fdivl
sbb
clc
scas
dec
add
lcall
mov
push
pop
jg
xlat
adc
jl
adc
cwtl
xchg
insb
xchg
push
in
dec
ljmp
hlt
inc
ficoml
leave
adc
xor
inc
xchg
ljmp
add
jns
addr16
inc
xchg
nop
std
xchg
lds
stos
ljmp
mulb
out
insb
xchg
push
outsl
pop
std
jecxz
pop
mov
pop
pop
push
cmp
pop
dec
inc
mov
stos
mov
mov
and
into
and
and
xchg
das
ret
sub
gs
pop
pusha
sub
add
sahf
cmc
and
mov
add
test
mov
sbb
out
into
test
cwtd
and
in
sbbl
jb
mov
ret
aad
adc
mov
dec
inc
in
xor
arpl
adc
add
jge
icebp
lcall
push
adc
sahf
in
mov
je
inc
dec
scas
test
movl
dec
loop
mov
cmp
outsb
jge
out
filds
loope
fsubrs
lock
jmp
enter
stc
cs
inc
sub
inc
sub
xchg
cltd
fsubl
shll
ret
mov
mov
outsb
push
pop
out
add
cmpsb
xor
mov
fwait
mov
shrl
pop
fisubl
xchg
sahf
push
repnz
leave
xor
je
push
jl
xor
and
js
outsb
icebp
cmp
shll
sbb
push
inc
xchg
and
or
inc
in
rcll
lret
mov
jns
cld
pop
aaa
shrb
cmp
into
add
and
jl
aad
out
into
or
xchg
fadds
imul
aam
jno
dec
mov
test
ret
add
fdivrs
inc
pop
push
jo
out
aaa
dec
pop
cs
mov
inc
fidivl
js
enter
mov
pop
xchg
sub
pop
testl
mov
rolb
dec
loope
test
push
imul
xor
xor
sub
mov
mov
sbb
pop
in
fcoml
and
sarl
xchg
cwtl
imul
mov
sahf
fisttpll
int
xor
jg
mov
pop
push
xchg
repnz
fidivrl
jne
inc
inc
leave
fwait
add
pushf
sbb
dec
lods
into
lahf
inc
jp
shlb
and
int
cmpsb
lods
jl
popa
jbe
mov
push
ret
bound
je
sahf
scas
aad
mov
mov
gs
icebp
inc
repnz
imul
push
shll
into
add
imul
andl
shll
sbb
add
mov
sbb
dec
call
enter
aam
xchg
push
lods
outsb
jmp
mov
add
pop
add
jl
mov
mov
call
outsb
mov
mov
lods
add
jbe
push
xchg
addr16
adc
and
sbb
mov
mov
adc
out
call
stc
pop
push
inc
setp
xor
imul
iret
movsb
mov
std
mov
test
lret
jp
ficoml
add
out
in
lahf
jle
out
xchg
lcall
mov
push
adc
sub
seto
aaa
stc
and
push
sub
mov
movsb
dec
mov
or
add
call
push
lahf
test
mov
jmp
cmc
jae
notl
lea
in
mov
or
inc
jb
divb
xor
aaa
push
add
lret
into
loope
mov
jp
xor
loopne
xor
popa
shrl
sarb
push
sti
push
adc
jno
push
in
jb
add
xor
out
xchg
test
inc
sbb
add
lods
mov
and
cmp
test
sub
rcrb
stos
pusha
mov
aad
xor
outsl
mov
and
loopne
push
fistl
mov
outsl
add
pop
enter
fists
mov
jo
test
xor
jl
mov
in
add
icebp
mov
nop
pop
dec
mov
fs
pop
loopne
popa
fnsave
pop
addb
or
mov
mov
test
std
cli
sarl
sub
icebp
add
and
in
add
xchg
pusha
adc
push
jg
jg
sbb
dec
hlt
xor
leave
sub
inc
jg
mov
shrl
mov
sbb
outsl
fistps
pusha
mov
pop
outsb
add
jle
testb
test
xor
push
inc
xchg
mov
adc
push
test
std
xchg
mov
iret
mov
loop
call
mov
dec
mov
adc
or
lret
popa
test
push
lods
jb
popa
int
mov
jne
and
iret
mov
ds
push
jnp
pop
scas
into
stos
loop
pop
nop
inc
and
inc
inc
fisttpll
push
or
dec
mov
mov
leave
mov
push
into
ficoms
pop
or
test
xchg
pop
fcomp
jo
cltd
sub
pop
shrl
mov
inc
mov
gs
fstl
cmpsb
je
sbb
shrb
jle
dec
cmp
sub
pop
or
xor
ds
adc
inc
jge
imul
adc
int
imul
push
sti
mov
inc
lds
mov
fs
in
push
jo
filds
xor
sbb
cmp
ljmp
inc
aaa
cmp
or
sarb
je
in
sub
js
leave
sbb
and
sar
sub
jne
mov
xorb
divb
push
cmp
arpl
mov
xchg
fisubrl
loopne
adc
mov
fcoml
push
stos
push
mov
and
pop
jge
pop
addb
imul
mov
add
out
pop
in
sub
adc
dec
push
xchg
test
xor
jnp
push
pop
push
scas
arpl
and
dec
mov
or
cltd
jmp
in
xor
push
jb
dec
insb
insl
jp
out
sub
aam
pop
xchg
pusha
pop
into
xlat
fnstcw
repnz
push
imul
out
mov
pushf
inc
or
and
pop
mov
add
iret
cmpl
push
cmpsb
push
mov
xchg
or
cmc
sbb
dec
fcomps
inc
and
pusha
in
into
ret
and
js
push
test
repz
pop
or
and
enter
lds
jl
push
jl
ds
or
and
fwait
andb
test
std
test
lods
in
test
inc
xchg
jg
lods
mov
fadds
or
jmp
outsb
cmp
movsb
or
add
dec
adc
addr16
test
pop
pop
or
cmpsl
jns
faddl
mov
jae
lods
adc
or
inc
and
mov
mov
jns
xor
cmc
popf
into
dec
imul
sti
pop
add
arpl
pop
stc
mov
loopne
mov
nop
sbb
sub
inc
jbe
adcb
pop
mov
pushf
lds
scas
loope
sub
mov
out
insl
push
sarl
and
sub
xchg
mov
mov
cwtl
inc
and
mov
push
push
out
mov
jmp
xor
adc
inc
icebp
arpl
ret
cmp
fisubl
mov
push
adc
mov
sbb
mov
maskmovq
negl
stos
sub
mov
xchg
rcrb
dec
int
lods
add
xchg
add
push
inc
in
or
or
pop
movsl
pop
jg
sub
ds
and
aam
mov
imul
cmc
mov
add
and
jmp
xchg
icebp
or
pop
mov
push
lea
fldl
xchg
fwait
in
arpl
mov
cmp
nop
adc
aam
call
scas
decl
test
push
xorl
sbbb
pop
or
mov
insl
adc
imul
das
fcomp
dec
sbb
push
jbe
push
ret
sar
stos
pop
sbb
out
pop
or
in
push
fsubs
sti
push
push
inc
mov
in
xor
sub
fstps
xchg
out
adc
mov
leave
shl
or
mov
ret
out
in
call
sti
fs
aas
int
ret
hlt
push
pop
out
push
pop
adcl
fidivl
bound
hlt
nop
and
repz
cld
mov
adc
mov
mov
mov
xchg
scas
mov
mov
xchg
in
push
mov
jle
imul
fldt
jecxz
and
xchg
xchg
insb
xchg
sti
push
fnsave
rolb
xorb
ljmp
les
shr
push
test
lea
xchg
fistpl
mov
movsl
push
out
push
dec
rcll
fsubp
nop
xchg
cld
mov
sbb
sub
aas
inc
outsl
mov
lds
gs
scas
cli
jl
jne
mov
shrl
je
imul
addr16
movsl
cmp
notb
adc
mov
xchg
clc
push
jg
insb
subb
es
cmp
and
add
or
xchg
sbb
and
inc
sbb
iret
lock
xor
jne
push
or
jecxz
pop
je
fcmovbe
add
xchg
push
fistpl
xchg
and
sub
lds
out
sti
mov
cmp
out
outsb
pop
lahf
rolb
pop
repz
cmpsl
fdivrp
repnz
movsl
cmpsb
in
fimull
sbb
std
xor
popa
in
das
mov
add
push
pushf
negb
push
hlt
jne
hlt
shl
lods
or
or
out
jbe
into
jnp
adc
fwait
inc
ss
insl
dec
pushf
sub
cmp
loop
push
cmp
lcall
jae
adcl
jae
xchg
int3
andl
add
sbb
pop
xor
negl
iret
in
xchg
les
ss
int3
out
dec
cmp
test
or
xchg
fcoms
inc
add
ret
ljmp
sub
jl
rorb
out
xor
mov
lock
ss
out
dec
movsb
out
test
outsb
sbb
mov
scas
push
inc
dec
aas
adc
mov
lds
rcrl
icebp
sti
lret
aaa
push
lret
xchg
inc
jns
test
mov
xlat
jae
adc
out
dec
sub
sbb
std
lahf
mov
shrb
add
cmp
lea
or
lcall
adc
jae
mov
inc
jp
fs
xor
jmp
lret
cld
or
nop
test
and
inc
loopne
jo
arpl
div
sbb
stos
sbb
pusha
pop
add
repz
adcl
push
outsb
and
popa
jg
paddusb
push
mov
push
sbb
jg
sub
xor
fcmovb
shrl
cmp
or
push
adc
dec
fcoml
fbstp
popa
mov
cmp
cmpsl
dec
dec
sub
sbb
sbb
popf
xor
test
test
adc
jmp
jle
xchg
inc
jg
js
cld
add
outsb
cwtl
dec
add
gs
lret
push
lea
pop
in
stos
and
or
or
jo
aaa
aam
cltd
cs
hlt
inc
cltd
xor
rcll
outsl
rcrb
mov
mov
mov
jge
mov
xchg
stos
aam
out
push
stos
jg
xchg
inc
sbb
loope
xchg
and
mov
jecxz
rolb
sub
loope
sub
cmp
dec
outsl
nopl
daa
push
movsl
mov
icebp
fadd
lods
or
fyl2x
or
push
xchg
inc
movsb
lods
mov
inc
mov
movsb
pop
sbb
sbb
dec
hlt
cwtl
bound
xchg
loopne
push
repnz
leave
test
into
sub
push
cmp
fisttpl
int3
hlt
daa
pop
mov
jp
rorb
lahf
loopne
jae
pop
cmpsl
mov
jmp
into
mov
rol
xchg
pop
jns
mov
lods
push
mov
cs
call
mov
ret
jg
imul
adc
lret
sub
outsl
pop
dec
test
cmp
call
int
mov
pop
xchg
mov
cmp
xor
int
lods
aas
popa
fcoms
ret
and
mov
loopne
test
roll
cmpsb
sbb
loope
mov
stc
sub
je
mov
dec
inc
mov
stc
pminub
mov
dec
andl
pop
xorb
add
test
push
icebp
clc
xchg
adcl
or
fcmovnu
jmp
pop
sbb
arpl
jne
mov
jmp
jle
adc
repnz
and
cmc
arpl
push
daa
lods
rcrl
sub
push
sti
push
and
cmp
or
push
repnz
jecxz
stos
inc
jne
cmpsl
push
mov
out
mov
pop
lcall
mov
push
xchg
loop
fwait
daa
call
xchg
push
xchg
outsl
dec
or
and
or
arpl
shl
shrb
add
mov
movsl
cmp
push
pop
jns
xchg
pop
xchg
adc
or
jle
test
ss
int3
out
xchg
sub
pop
mov
dec
enter
adc
sbb
stos
xchg
dec
xor
lret
cmp
outsb
push
inc
xchg
xor
inc
pop
test
arpl
pop
lret
out
and
push
jp
dec
jo
sti
xchg
rolb
aas
daa
adc
movsl
xchg
mov
negl
and
nop
scas
fdivr
inc
out
arpl
xchg
mov
dec
std
lcall
xchg
stos
adc
pop
pop
lret
mov
icebp
aaa
sub
xchg
int
js
xlat
jae
cmpsb
leave
jge
and
mov
xor
mov
mov
push
mov
cmp
sar
mov
pusha
or
jo
cs
mov
xchg
out
leave
xchg
dec
mov
mov
and
cmpsb
rorb
or
dec
dec
sub
imul
ds
dec
jb
ret
add
outsb
mov
das
ret
sbb
xor
sub
loope
push
addr16
cmp
sub
sti
sahf
fiadds
out
adc
cli
dec
pop
mov
push
sar
jae
pop
lret
lahf
data16
mov
ftst
and
fldl
cmp
testb
cmp
inc
inc
stos
inc
dec
mov
mov
xchg
lret
repnz
push
xlat
xorb
repnz
int
sub
pop
lock
sbb
dec
push
int3
jl
in
jecxz
daa
mov
jl
adc
jle
lea
aad
lds
mov
repz
cmpsl
jns
xchg
je
fs
sbb
mov
leave
je
mov
inc
fsubs
fsubr
add
incl
jb
add
rep
push
addl
cmc
xorb
add
aad
mov
in
add
dec
cmp
cmc
or
enter
jns
scas
call
cmc
pop
fnsave
cmpsl
cmp
jne
popf
or
frstor
cmpsb
jmp
jo
mov
xor
pop
cmp
imul
out
or
std
lahf
mov
ds
dec
xor
push
inc
adc
push
inc
lods
cmpsb
test
pop
inc
jp
pop
adcb
das
sbb
mov
mov
mov
jne
and
sub
xor
mov
mov
rclb
insl
psllq
sarb
push
cli
test
lret
rcr
pop
aaa
dec
popa
lret
inc
pcmpgtd
lds
lods
fwait
cmp
fisubl
cmp
in
mov
mov
out
and
mov
jmp
jp
mov
cwtl
xor
inc
dec
push
sahf
or
or
sahf
sub
mov
cmp
mov
or
jnp
xchg
add
ds
inc
and
fisttpl
jg
cmp
test
adc
sub
repz
mov
mov
cmc
mov
rorl
jg
movsb
je
add
in
cld
ret
jp
xchg
shl
cmp
push
sbb
mov
sub
aad
in
mov
push
sub
ficomps
mov
lds
xchg
movsl
mov
jo
pop
inc
cwtl
mov
xchg
es
fsubrl
add
shll
jl
xor
add
add
movsb
inc
jb
cmp
cli
gs
sub
xchg
xchg
jmp
jl
cmp
inc
das
and
les
scas
int
enter
scas
std
test
jg
mov
jo
cli
popa
ljmp
mov
sub
sbb
inc
inc
mov
ljmp
dec
pop
mov
frstor
out
xor
xchg
mov
and
lret
xor
adc
das
push
cmp
xchg
mov
dec
or
roll
loopne
and
xor
push
stos
cmp
push
xor
inc
xchg
pop
and
fwait
insb
jbe
mov
repnz
pop
cltd
pop
adc
push
insb
jne
arpl
jg
mov
hlt
sub
out
xor
ljmp
dec
jno
mov
movsl
add
pop
inc
mov
lods
mov
outsb
adc
sub
insl
cmp
movsl
lahf
jecxz
ds
ror
cwtl
jae
ja
je
stc
jo
xchg
sub
aas
fldl
push
xor
push
add
xchg
cmpsb
inc
or
movsb
rcr
cmp
lret
fmuls
and
pop
lods
mov
sbb
ret
inc
or
leave
inc
jno
adcb
ficompl
sub
in
and
inc
int3
cmp
pop
ja
inc
inc
enter
incb
imul
pushf
xchg
and
fildl
and
mov
mov
loop
jge
lahf
dec
mov
lds
bound
jbe
sbb
stos
or
xchg
mov
push
and
lahf
xor
cmp
pop
out
jnp
add
add
mov
pop
stos
filds
mov
add
pop
and
xlat
call
sbb
xor
adc
sti
inc
jns
mov
aam
or
add
sbb
ja
lods
xchg
cli
push
cs
fisubs
and
pop
xor
mov
jbe
dec
jl
test
fwait
es
or
jmp
fdiv
dec
rol
jp
cld
or
sbb
aas
out
pop
in
arpl
xchg
clc
mov
add
cwtl
cmp
icebp
out
dec
ror
mov
roll
mov
scas
sub
add
popf
int3
gs
adc
sbb
inc
cmc
and
pop
and
cld
adc
adc
outsb
out
out
xlat
jae
repnz
lcall
inc
and
daa
mov
xor
inc
enter
xor
in
fwait
mov
cmp
jmp
fs
xor
inc
mov
in
shrl
ja
push
movsl
mov
in
test
out
pop
into
sbb
jmp
dec
rcrb
scas
test
sub
loope
pop
sarb
mov
sbb
sbb
out
in
xchg
mov
ret
mov
add
rolb
dec
xchg
and
ss
movsb
and
call
testl
dec
in
mov
fidivrl
out
lock
ds
cwtl
mov
push
data16
or
test
push
xlat
fbld
dec
jl
sbb
push
sahf
movsl
sub
lret
mov
loope
rcrb
pop
in
push
cld
and
mov
aad
cmp
sub
mov
dec
repz
jle
sub
mov
mov
rclb
repz
inc
mov
shr
nop
dec
cmc
inc
inc
mov
fstps
loopne
lods
cmpsb
dec
inc
add
push
lods
test
jb
cltd
pop
mov
cli
outsl
mov
dec
daa
adc
sbb
mov
loope
rcl
dec
test
fadd
mov
int
mov
lods
pop
mov
mov
or
push
test
insb
nop
lea
cwtl
sahf
and
repnz
and
sub
imul
or
jnp
mov
jno
mov
test
push
popa
pop
or
leave
push
sti
movb
enter
scas
dec
jne
je
mov
add
outsb
cmpb
mov
psubusw
push
xorl
or
inc
adc
mov
cmpsl
outsl
icebp
in
adc
sbb
dec
popf
out
roll
mov
outsb
into
jo
dec
fstl
pushf
rorb
out
int3
push
fcomps
jmp
sbb
adcl
insb
sbb
inc
mov
mov
or
std
cwtl
mov
jno
je
test
mov
lea
rcll
es
jo
call
cli
incb
sbb
imul
sub
push
push
in
fwait
addr16
push
ljmp
movsl
cmc
fstps
pop
jb
adc
xchg
test
add
cmpsb
dec
cli
aad
pop
les
jbe
lock
mov
inc
or
adc
cmpsb
decb
push
xlat
sbb
subb
push
fstpt
fwait
push
pop
xor
push
out
loopne
cwtl
mov
into
mov
add
lock
andl
or
xchg
sarl
jno
adc
or
mov
loop
jno
test
push
mov
inc
push
aad
mov
fdivl
pop
mov
add
mov
sbb
xchg
cmpsl
jmp
pop
xchg
dec
outsb
push
fs
pop
mov
cmp
dec
xor
not
leave
ds
adcl
outsb
loop
sbb
das
push
adc
jge
sbb
dec
sub
sub
jo
sub
or
pop
gs
pop
jg
push
leave
dec
inc
int3
ret
sbb
out
add
lods
push
inc
mov
fucom
fs
lret
xor
jmp
push
fs
sbb
pop
loop
fs
xor
mov
fnstsw
and
push
outsl
adc
inc
jnp
in
xchg
cmp
mov
insl
cmpsb
cmp
in
sub
movsl
adc
mov
sub
ss
mov
shlb
cmp
rcll
das
dec
imul
repnz
mov
es
out
int3
push
or
mov
lods
or
xchg
push
movsb
daa
xchg
mov
adc
jmp
mov
add
aad
mov
ss
mov
aad
sub
pop
mov
aam
int
and
popf
jo
cli
jecxz
dec
cmp
pop
cmp
or
jmp
adc
enter
sub
jo
cld
int3
dec
cs
xchg
xchg
rol
in
and
cmc
add
das
adc
sahf
or
cwtl
jg
fisubl
xor
xor
stos
sar
adc
sub
mov
push
test
sub
mov
xchg
fnstsw
xorl
inc
xchg
jne
cwtl
add
mov
addl
scas
or
cltd
inc
push
rorb
insl
test
mov
pop
pushf
pop
rol
jg
ror
mov
sbb
testb
ss
pop
mov
mov
xchg
out
cmp
ret
push
adc
sub
pop
outsb
popf
pop
sub
fmul
pusha
neg
ficompl
aaa
cld
pusha
pop
pop
xor
in
pop
xchg
jl
push
sub
lret
or
lods
out
push
out
and
mov
cltd
inc
push
mov
xor
xchg
xor
iret
mov
ljmp
mov
adc
cmc
je
cmpsb
mov
jo
shll
mov
cmp
mov
data16
xor
test
mov
and
fnstcw
pop
test
sub
push
int
mov
rorb
idiv
inc
loop
pop
xchg
xchg
pop
or
rcrb
mov
mov
jle
xchg
fwait
enter
call
loop
mov
or
and
outsl
pop
int
lret
inc
fnstcw
std
fwait
sbb
mov
jbe
adc
sbbb
inc
mov
add
outsb
jns
xor
add
shll
mov
push
pop
mov
xlat
sbb
das
je
insl
icebp
dec
sub
fdivs
into
sbb
addr16
pop
test
arpl
dec
mov
cmp
and
or
mov
fxam
push
push
mov
mov
fsubl
ret
add
pop
addr16
shll
xchg
mov
andl
push
aad
scas
pop
xor
mov
sti
test
cmp
pop
push
fdivs
cmpsl
arpl
mov
std
push
stos
xchg
dec
mov
out
das
cld
cli
or
int3
not
add
das
adc
mov
mov
inc
out
mov
jl
out
aad
lcall
dec
divl
add
mov
daa
out
push
aas
ret
add
movsl
sub
xchg
mov
mov
mov
sbb
mov
inc
leave
xchg
dec
test
fucomip
xor
jne
jne
sbb
cwtl
xor
inc
sarb
or
rcrb
jno
stos
fdivrs
sbb
aas
adcl
out
cmc
jne
xor
mov
inc
mov
cmp
push
cmp
jae
jge
mov
rolb
jns
xchg
and
sbb
push
mull
mov
pusha
mov
ret
cli
into
shll
aam
pop
or
cmp
inc
arpl
test
scas
mov
ljmp
pop
push
js
mov
jae
mov
mov
xchg
xor
stos
repz
testl
mov
and
ret
in
fsubr
mov
mov
popf
dec
addr16
jb
dec
pop
push
xor
adc
pop
sbb
fsubs
fwait
xchg
pop
inc
std
insb
in
push
call
cmpb
aas
stos
sbb
call
jnp
stc
clc
inc
out
andl
aam
lret
cmpsb
aaa
mov
add
lds
call
jg
scas
pop
xor
push
dec
add
fnsave
out
imul
mov
cld
cs
sub
push
lods
inc
incl
mov
pop
out
icebp
cmpl
jns
aam
mov
mov
nop
mov
sbb
and
xchg
arpl
pop
inc
testl
es
lods
lods
movsl
insl
stos
icebp
jb
je
inc
jmp
addb
dec
pop
cltd
stc
inc
pop
test
xchg
dec
xor
data16
lods
dec
sbb
in
fs
pop
sbb
or
xchg
pop
shrl
xor
pop
and
adc
mov
movsl
mov
shrl
or
inc
fisttps
fildl
adc
adcl
fidivs
cmp
loope
jl
hlt
push
jnp
mov
xchg
loopne
mov
or
ret
add
lahf
adcl
idiv
add
test
jns
shll
xchg
lea
jmp
call
arpl
mov
mov
stos
lods
int3
xchg
fdivl
xor
test
sub
xor
or
pop
cmp
daa
dec
call
adc
xchg
sub
rorb
scas
push
xor
aas
test
push
shlb
adc
xchg
shrl
push
cltd
inc
icebp
mov
das
cmp
lahf
pop
cmp
add
mov
xchg
cwtl
outsl
xchg
pop
push
pop
xchg
cmp
xor
sbb
and
mov
addr16
movl
stos
jge
mov
imul
test
xchg
xlat
push
repz
dec
aas
sub
lahf
dec
sbbl
bound
adc
mov
add
es
flds
and
test
jge
arpl
jge
xchg
xchg
inc
sahf
cmp
xchg
push
fs
jnp
adc
sbb
loope
jnp
fidivrl
sbb
in
push
leave
sbbl
mov
lods
or
mov
inc
dec
dec
xor
mov
movsb
push
adc
in
addr16
repnz
inc
cmp
jne
jmp
mov
push
mov
in
fistpl
pop
iret
mov
packsswb
shrl
in
cmp
mov
jne
push
repnz
iret
orb
mov
pushf
insb
pusha
stos
ret
or
push
sbb
lea
testb
cmp
adc
cmpsl
psraw
je
clc
xchg
clc
stos
mov
in
gs
gs
in
mov
sub
or
testl
mov
or
mov
inc
scas
out
pop
pop
and
sbb
sti
or
xchg
mov
mov
push
imul
mov
sub
icebp
in
outsb
push
pop
mov
js
stos
adc
adc
jmp
cltd
lea
jnp
lcall
scas
push
mov
cmp
rclb
lret
loopne
cmp
mov
xchg
xor
test
cld
push
movsb
pop
mov
sub
adc
pop
xor
popf
clc
add
add
fs
dec
sbb
pop
dec
push
movsb
dec
dec
inc
scas
pusha
pop
cs
shl
xchg
add
mov
testl
adc
cmp
stc
cmc
scas
cld
push
sbb
dec
int3
xchg
subl
jge
cmc
call
popf
cmpb
pop
test
or
ret
mov
dec
cmp
addr16
gs
iret
js
std
in
inc
add
popf
popf
clc
movsl
in
jecxz
xor
or
jmp
add
xor
ret
cmc
in
mov
inc
inc
push
jmp
ret
adc
sbb
inc
dec
into
push
std
test
push
outsb
add
adc
aaa
adc
fstl
test
ret
pop
cmp
lods
dec
and
xchg
cmp
xor
mov
sub
sbb
int3
mov
cmc
les
mov
inc
add
fstpt
ds
mov
sbb
lsl
iret
movsl
loopne
mov
repz
repz
jo
fwait
sub
fwait
dec
or
pop
xor
fabs
aaa
ret
mov
cmp
push
outsl
loopne
outsl
mov
jmp
repnz
xor
mov
in
xor
push
cmp
mov
pop
push
push
dec
outsb
gs
jge
pusha
xchg
lahf
out
dec
test
xor
orl
mov
pop
or
fcoml
sbb
lock
test
flds
cmp
sbb
lret
jno
jo
nop
mov
mov
pop
or
lahf
cmp
call
mov
imul
mov
push
jmp
bound
aas
imul
xor
jb
and
push
dec
out
cwtl
xor
mov
inc
mov
xor
xor
out
std
rol
mov
jno
mov
data16
cmpsl
mov
cmp
sbb
stos
xchg
sbb
aam
xchg
push
shlb
mov
mov
imul
xchg
shrb
xchg
sub
bound
loopne
push
js
push
sub
dec
test
mov
mov
xor
xchg
inc
test
loopne
shll
outsl
and
mov
aad
into
movsl
pop
pop
jmp
fbstp
mov
mov
jecxz
cmc
ret
sbb
xorb
adc
sbb
nop
pop
out
pop
stc
mov
imull
inc
or
cmp
inc
iret
fcmovu
adc
mov
dec
jle
xor
cmc
push
xchg
adc
pop
aas
rorl
arpl
adc
test
mov
adc
aam
in
pop
iret
add
push
hlt
mov
test
cmp
call
sbb
mov
cmp
jns
addr16
xchg
fistl
dec
pop
mov
jne
jo
add
fs
scas
mov
mov
movsl
or
xchg
out
cmp
and
pop
fsts
jb
rol
or
and
mov
fs
int3
lock
sbb
stc
mov
pop
jge
cld
push
dec
jle
out
in
pop
popl
push
and
aad
iret
and
sarb
data16
shll
imul
push
dec
dec
stos
cmp
cmp
xor
or
add
jnp
adc
push
adc
icebp
push
dec
mov
jmp
push
fs
pop
mov
dec
lods
jae
mov
cmpsl
mov
mov
sahf
out
fsubs
xchg
pop
popf
fucomp
sti
mov
cs
aad
cmpsl
popa
adc
int
rcl
lods
inc
in
outsl
mov
addb
int
nop
rcrb
sbb
in
loopne
aas
imul
jp
pop
dec
dec
pop
xchg
movb
in
out
jo
les
clc
ret
xchg
daa
int
mov
cmp
ret
adc
mov
pop
aaa
xchg
daa
je
jp
outsl
mov
and
xor
pop
test
xchg
xor
add
call
aam
jae
xor
dec
cli
aas
inc
mov
das
push
lds
inc
xchg
sarb
enter
addr16
jmp
xor
inc
mov
mov
pop
popf
xchg
or
pusha
je
lock
hlt
lea
push
je
mov
lea
ja
repnz
mov
int
fwait
or
push
outsl
add
cmp
shll
xor
scas
push
mov
jns
iret
stos
lds
add
jbe
dec
jbe
insb
iret
xor
add
and
cmc
fwait
xor
xor
movsl
pop
inc
xor
pop
or
mov
loopne
cs
std
aad
pop
mov
popf
pop
out
cmp
gs
pop
mov
dec
es
add
outsb
je
and
jb
faddl
push
mov
mov
pushl
push
mov
and
mov
jno
mov
inc
or
dec
clc
cmc
sub
mov
andl
lret
jmp
pop
in
dec
into
mov
test
lret
mov
add
inc
sahf
mov
in
jg
xchg
mov
add
mov
xchg
pop
mov
xchg
push
test
mov
flds
movsl
aas
mov
mov
jnp
ficompl
push
push
fsubr
xchg
sub
mov
nop
push
sub
ja
out
xor
lods
xchg
unpckhps
push
adc
outsb
pop
in
fnsave
sar
sub
jg
iret
add
xchg
and
or
lods
push
xchg
mov
mov
jns
add
xchg
mov
in
in
not
mulb
adc
aas
in
movsb
mov
pop
dec
shl
addr16
int
sbb
or
in
sbb
out
cmpsl
mov
ud1
and
pop
je
str
cmp
arpl
sbb
jge
out
xor
xchg
in
mov
mov
and
loope
mov
movsl
outsb
or
cli
dec
ljmp
jae
push
push
lahf
mov
or
out
dec
add
push
mov
pop
and
sbb
sub
jmp
xlat
popw
xchg
cmpsl
jl
mov
xchg
jns
xchg
int
addb
scas
pop
mov
pop
lret
and
test
dec
ror
int
aas
pop
cwtl
sbb
adc
mov
adc
sbb
add
push
out
stc
sbb
je
or
in
in
pop
sbb
add
cmp
pop
and
push
ret
pop
in
inc
mov
int
pusha
mov
jbe
rorl
xor
add
repnz
xor
pop
loope
and
repz
pop
mov
mov
sub
sub
es
xchg
push
mov
dec
lahf
sbb
dec
lods
ljmp
xchg
out
lods
lahf
pop
cli
adc
ds
psubusb
loope
mov
pop
fbld
addl
ficoms
es
aaa
push
jo
pop
sub
arpl
scas
not
bound
loop
sbb
mov
sbbl
inc
je
add
pop
insb
add
fists
sub
or
pop
lea
ror
arpl
les
imul
popa
addr16
dec
mov
in
xchg
es
rol
lahf
inc
outsl
jo
mov
incb
aam
arpl
insb
add
nop
ficompl
jge
outsl
insb
aam
dec
inc
scas
ds
sbb
test
rolb
js
inc
mov
jnp
testb
dec
xchg
or
cmp
stos
or
jnp
dec
push
sbb
arpl
scas
mov
pop
test
outsb
adc
stos
addr16
or
mov
add
mov
es
mov
adc
out
lahf
sbb
sub
fbld
jle
or
aam
inc
inc
pop
jnp
dec
add
movsb
jge
imul
shl
icebp
mov
mov
cmp
into
iret
imul
pusha
lea
fidivrl
push
jae
cli
jg
xor
in
xlat
push
mov
lods
popf
ljmp
or
outsl
dec
xor
cmpsl
lcall
adc
and
cmpsb
add
dec
jmp
and
cli
sbb
jae
inc
add
shlb
dec
mov
jge
jecxz
jne
cwtl
test
and
jno
out
ror
pop
push
imul
cmp
cmpsl
out
adc
out
ret
inc
dec
fistps
sub
movsl
ret
aam
adcl
mov
or
cmpsb
push
iret
mov
xorb
mov
movsl
add
jecxz
fwait
add
fwait
mov
cmp
out
push
mov
sbb
inc
inc
add
xor
pop
das
jl
jecxz
rorb
add
aad
inc
psrlq
ljmp
lahf
std
and
stos
sbb
out
loopne
xchg
push
xchg
rclb
mov
out
mov
les
lock
xor
or
jge
jno
push
movsb
jmp
rcr
mov
cmp
jae
mov
popl
ds
push
mov
xchg
stc
dec
fisttpl
mov
inc
pushf
int3
in
dec
setge
icebp
jp
dec
testl
decb
xchg
test
stos
outsl
sub
add
or
test
dec
imul
xor
cmp
mov
inc
arpl
pop
int
ss
imul
mov
lea
lret
mov
lea
inc
cs
inc
sbb
cmp
pop
stc
add
pop
xlat
pop
adc
and
or
inc
xor
mov
addr16
fdivrl
push
mov
pop
add
pusha
jno
cmp
notb
aad
xor
xchg
jo
dec
daa
pushf
subl
cmpsl
push
mov
sti
cmp
inc
leave
jo
mov
sbb
idivb
daa
std
jl
xchg
push
inc
stos
fmuls
fisttpll
push
stos
mov
sbb
adc
mov
fisubrs
call
nop
aam
inc
lods
mov
mov
jecxz
xor
loopne
xchg
xchg
stos
in
xor
inc
sti
retw
dec
adc
and
iret
subl
rcrb
aas
outsb
sbb
mov
inc
roll
cmp
hlt
xor
jmp
scas
outsb
hlt
sub
fisttps
lods
inc
jae
cmp
cwtl
pop
cmp
mov
cmpsl
push
jae
cmp
pop
pop
les
lds
xchg
inc
daa
rorl
jl
jno
mov
test
lea
incl
test
push
push
mov
pusha
mov
add
push
mov
cltd
mov
xchg
mov
inc
push
sahf
cmp
xor
icebp
cltd
and
std
in
data16
aad
or
cli
xchg
inc
addr16
cs
xlat
daa
mov
inc
or
outsl
cs
push
push
sub
xor
push
aam
out
in
push
jp,pn
mov
sahf
jecxz
inc
cmc
cmpsb
in
jb
sbb
push
mov
add
cwtl
dec
xor
mov
in
inc
adc
xor
mov
lcallw
mov
lret
imul
jg
jbe
inc
xchg
add
xchg
sbb
aaa
or
mov
das
dec
adc
mov
sub
mov
clc
repz
cld
push
pop
daa
jb
and
dec
xor
adc
fs
pop
test
cli
addr16
mov
mov
pop
iret
jle
movsb
lea
mov
mov
mov
inc
jne
mov
fbld
seto
jmp
sbb
sub
xchg
aas
add
pop
pusha
arpl
ret
xchg
clc
sbb
imul
je
xchg
sub
inc
fidivrl
adc
aaa
dec
lock
xlat
xchg
add
mov
add
out
mov
in
add
daa
aaa
aad
push
xchg
rcrb
int
stc
ss
dec
sbb
insb
xchg
push
cmpsl
and
pop
pop
or
out
push
into
mov
aaa
movsb
mov
out
mov
adc
arpl
cmp
mov
xchg
push
inc
mov
ja
pushl
repnz
dec
popl
dec
jecxz
std
in
outsb
in
hlt
mov
mov
pop
lea
sbb
add
sbb
pop
mov
pop
mov
or
dec
insl
xor
push
iret
ss
xor
pop
mov
jecxz
or
add
aam
dec
xlat
jmp
or
cmpsl
mov
jae
cmpsw
pushf
lods
es
jne
iret
mov
rcll
and
mov
in
add
pop
lret
cltd
shrb
outsl
movsb
shrl
xor
push
add
pushl
test
jae
imul
neg
and
sub
ss
and
add
xor
pop
push
arpl
xchg
mov
outsb
mov
decl
inc
add
mov
push
jnp
push
dec
cmpsb
stc
adc
fnsave
outsb
xor
ss
leave
pop
icebp
sub
mov
xchg
jno
ficomps
or
in
lods
enter
and
mov
jecxz
stc
lcall
daa
jl
and
outsl
das
frstor
mov
inc
nop
test
fdivs
pop
mov
sub
icebp
push
jecxz
dec
in
add
mov
sbb
xlat
dec
jno
xchg
xlat
inc
into
add
pop
mov
sbb
sub
pop
lcall
popf
pop
xchg
shlb
imul
push
xchg
mov
jns
nop
and
lods
pop
lcall
mov
pop
xorl
cltd
fdivrs
pop
aad
push
mov
cld
outsb
in
xchg
out
xor
and
clc
adc
xchg
in
jge
jne
jne
je
test
mov
mov
jb
fidivl
xor
push
cmp
shr
insl
add
pop
jbe
jnp
pop
loope
gs
or
clc
mov
fs
mov
add
mov
addb
push
out
and
mov
aas
out
out
insl
sbb
adc
pop
jbe
js
test
or
add
jo
int
mov
pop
add
mov
xor
mov
push
sub
cmp
mov
ds
pop
mov
scas
stc
cmpsl
outsl
cmp
xor
daa
fs
cmpsl
jns
test
ret
cwtl
add
xchg
sbb
jge
int3
lret
xchg
xor
movsb
repnz
dec
inc
addl
into
mov
adc
xor
inc
jle
fdivrs
cs
imul
pop
push
scas
jle
xchg
lock
mov
jmp
xor
sahf
and
incb
cmp
je
adc
clc
pop
imul
lds
leave
dec
hlt
out
mov
mov
or
push
das
lea
sbb
jge
cli
lds
andl
xchg
dec
and
aas
pop
add
mov
lcall
jge
ror
stos
ss
pop
mov
inc
gs
aaa
mov
and
sbb
xor
lret
cs
loope
ljmp
xchg
das
sub
add
cli
pop
xor
jecxz
pop
ficoms
or
mov
dec
mov
in
pop
mov
mov
push
repz
jne
inc
mov
int3
sbb
mov
fmuls
or
mov
cld
and
imul
dec
lods
cvtpi2ps
rcrl
dec
xchg
andb
mov
mov
mov
pop
dec
lcall
sub
dec
pop
insb
js
fisttpll
push
aam
jae
aaa
or
and
jmp
mov
int3
push
mov
negl
loope
arpl
ret
or
push
xchg
inc
jge
cmpb
mov
add
add
or
sbb
mov
in
stos
mov
pop
sub
daa
in
fldt
add
xorb
fwait
std
mov
mov
add
outsb
lods
jmp
lcall
cmpb
es
mov
or
insl
mov
push
mov
cli
adc
jg
cmc
out
imul
arpl
sbb
sub
and
rolb
mov
pop
test
xchg
or
loop
mov
cmpsl
cmc
adcl
mov
xchg
mov
xor
in
fstpl
push
adc
notb
dec
les
push
shll
ds
cld
mov
add
fsts
inc
adc
aam
adc
pusha
arpl
and
dec
idivl
jle
xor
pop
jg
in
scas
add
fwait
movsb
sbb
xor
dec
push
jae
jnp
in
mov
sub
fcompl
aam
outsl
sbb
xor
xchg
mov
push
sbb
cs
aad
lods
or
mov
divl
sub
push
xchg
or
popf
scas
iret
imul
test
not
jp
rol
cwtl
scas
shl
lods
stos
xchg
adc
xlat
movsl
aad
adc
es
out
sub
aaa
jge
cmp
inc
dec
dec
add
incl
int
pop
aas
scas
or
push
fistl
fldenv
push
jae
pop
or
add
mov
jg
sub
pop
xchg
xor
lds
pop
sub
xchg
xor
mov
loope
xor
ljmp
or
aam
cmp
mov
xlat
or
nop
hlt
or
jb
lea
stos
mov
adc
inc
push
push
ljmp
xchg
xchg
xchg
mov
jle
jle
lret
cmpsl
cmc
in
sub
sbb
in
sbb
push
out
mov
sbb
add
jmp
jge
cltd
adc
or
shll
jno
inc
dec
or
popa
lahf
mov
cld
xor
and
in
enter
ror
int
in
mov
sub
loopne
jnp
sbb
rolb
or
out
mov
aam
push
sub
clc
mov
ja
icebp
rcl
cltd
sbbl
enter
mov
cwtl
adc
sbb
mov
sub
out
xor
cli
stos
xorl
mov
add
ja
inc
mov
xchg
popf
scas
mov
adc
sbb
test
aas
icebp
cmp
sahf
fistpl
push
jno
loop,pt
or
cmp
push
xor
cmp
dec
hlt
shl
mov
les
inc
into
mov
int3
mov
loope
leave
sahf
xchg
lcall
dec
mov
cmc
insl
push
sbb
scas
subl
mov
addr16
and
mov
pusha
or
or
idiv
orl
xlat
xchg
in
cmp
jmp
pop
movsb
jg
xor
push
aas
in
seta
push
mov
ja
cmp
stc
mov
lret
fs
dec
mov
stc
stos
mov
pop
andb
inc
push
shrl
test
ror
dec
mov
rclb
addb
xchg
mull
sub
pusha
pushf
bound
pop
cmp
lret
mull
insl
outsl
mov
adc
mov
jo
ss
sahf
shr
and
cmp
or
push
sbb
jo
cmpsl
pop
inc
repnz
push
xchg
cmp
jb
push
mov
pop
mov
test
and
aaa
fldenv
into
add
push
jae
les
and
out
cmp
rclb
xchg
fwait
in
in
mov
outsl
xor
mov
cs
jae
and
call
scas
in
pop
xchg
jl
call
jae
jge
addr16
les
js
fxch
xchg
scas
sti
call
lods
cmp
dec
mov
movsb
adc
pushf
inc
fsubs
sbb
mov
jecxz
mov
push
push
adc
cwtl
rcrb
cmpsl
shl
adc
aaa
sub
sbbb
les
xchg
insb
xor
loope
adc
mov
mov
cmp
lds
xor
out
sbb
mov
jbe
adc
sarb
repnz
mov
jns
sbb
int3
shll
ljmp
push
fucomi
in
inc
test
call
adc
in
jl
add
xchg
pop
lcall
outsb
mov
mov
xlat
sbb
jge
pop
lods
push
mov
or
ret
ret
inc
jno
test
repnz
lcall
bound
adc
scas
inc
mov
popf
sbb
push
outsl
jle
jle
outsb
push
subl
cltd
mov
adc
adcl
and
enter
push
sbb
pop
sub
insb
adc
mov
fistps
mov
daa
test
lret
mov
lods
cli
icebp
pop
andl
pusha
sbb
sbb
negb
pop
jg
xchg
dec
adc
push
or
adc
int
fstl
pop
js
jecxz
ret
cli
and
loopne
lods
aaa
add
dec
std
sbb
dec
cmp
push
mov
lds
xor
shl
sub
dec
dec
bts
jne
fs
icebp
and
lret
inc
fsts
and
xchg
shl
movsl
popf
adc
nop
aas
jns
xchg
inc
stos
mov
neg
inc
shr
lds
sub
divb
jo
sub
xchg
inc
test
sahf
fistpl
divb
mov
scas
cs
and
push
lret
fdiv
xor
and
pusha
inc
aam
leave
lret
cmc
inc
jns
dec
push
jae
stos
inc
pop
std
inc
fnstcw
leave
mov
rcrl
aaa
data16
outsl
in
pop
fs
popf
inc
xor
scas
bound
dec
insb
xor
insb
and
ret
mov
sbb
hlt
jge
adc
stos
xchg
dec
ds
orb
add
cmpsb
dec
mov
test
out
inc
shrb
mov
nop
cltd
cmc
iret
ja
xchg
mov
adc
roll
mov
cltd
add
lods
fcoms
fidivl
movswl
cwtl
dec
into
pop
lods
pop
stos
repz
mov
cmp
xor
push
pushf
ret
sbb
into
outsb
ss
fwait
rol
mov
and
cltd
add
mov
push
cmpsb
add
andl
xchg
push
xlat
push
pop
out
cmpsb
mov
jae
inc
inc
jmp
add
dec
cmp
xchg
sub
push
gs
jp
dec
in
jge
xchg
repz
pusha
cmpsb
lea
outsl
cmp
pop
aas
xchg
push
and
rclb
repz
cmp
clc
je
dec
mov
xchg
add
imul
cltd
adc
xchg
mov
into
inc
in
fiaddl
sahf
fnstenv
inc
xlat
pop
dec
mov
in
push
adc
pmaxsw
in
adc
iret
xchg
pop
inc
outsb
aaa
mov
pushf
xor
sbb
or
movsl
pop
in
mov
add
mov
mov
or
stos
rol
xchg
and
mov
je
mov
std
mov
inc
jle
mov
int
dec
jg
xchg
add
nop
mov
add
push
jle
scas
mov
fwait
cmc
mov
ret
jo
loop
adc
xor
pusha
pop
cmp
test
divb
xor
jge
xchg
add
xchg
push
inc
int3
data16
popf
fimull
adc
mov
jle
add
mov
push
das
mov
xchg
xor
fs
sbb
push
pop
loope
dec
lea
cmp
mov
push
shll
inc
mov
lss
out
push
movsl
mov
mov
inc
dec
xchg
jnp
inc
or
movb
adc
js
fs
mov
sarl
sbb
ret
add
mov
sbb
jp
mov
or
je
fisubs
fadds
arpl
dec
ss
dec
clc
insl
ja
daa
add
mov
ja
push
lods
rcll
xchg
dec
ret
push
push
push
push
pushw
push
aad
sbb
cli
orl
loop
fisubs
jge
in
or
testl
or
sub
fmull
sarb
enter
js
push
adc
mov
out
jne
ds
movsb
out
test
sbb
xlat
lock
mov
mov
add
and
jl
jecxz
enter
subps
idivb
pop
cmp
xor
orl
mov
mov
or
push
sub
dec
mov
jb
test
jno
or
int
cmp
inc
pop
mov
fwait
mov
repnz
jns
les
bound
pmaxub
xor
inc
mov
mov
fsubr
jns
xchg
orb
and
xorl
cwtl
and
in
int3
pop
add
xor
mov
jae
push
pop
cwtl
sub
push
aaa
in
pop
cmc
inc
cmp
mov
fsts
jp
mov
shlb
dec
add
pushf
inc
popf
jle
je
jle
mov
jp
pop
btr
sbb
jg
pop
push
ds
and
loop
in
add
pop
int
int
inc
and
jg
sbb
mov
jnp
xchg
rol
inc
rol
lea
lret
xor
pop
pandn
repnz
jmp
mov
xor
std
push
cs
or
add
or
jnp
out
mov
adcb
and
mov
adc
add
in
dec
push
movsl
test
loop
jg
aaa
pop
sub
jmp
mov
movsb
cmp
mov
and
or
mov
sub
call
sub
loope
addr16
imul
add
jae
jp
loopne
mov
mov
leave
out
jbe
jnp
mov
loopne
cmp
mov
push
jnp
mov
inc
std
sub
out
in
sub
pop
mov
sub
dec
test
mov
outsl
mov
inc
sbb
mov
mov
cmp
xchg
ljmp
jne
xor
sub
mov
and
ror
iret
movsb
scas
ljmp
stc
adc
in
push
movsl
mov
cmc
and
mov
hlt
in
dec
mov
adc
call
into
sub
sti
sbb
cmc
popa
testl
cmpsb
sub
xchg
fidivrs
mov
cmpsl
idivl
push
iret
inc
mov
lea
xchg
mov
je
sbbl
sub
cmp
lds
sbb
cmp
cmp
pushf
daa
mov
xor
inc
repz
fs
daa
cltd
cmpsb
fidivs
shr
xor
cmp
dec
fbstp
cmp
mov
and
mov
or
mov
xor
fstl
jae
push
sbb
stos
lds
pop
adc
jmp
shlb
mov
sbb
jl
pop
mov
inc
shr
test
mov
mov
mov
mov
mov
mov
push
les
popf
cmp
hlt
sub
xor
ljmp
decb
jnp
adc
jle
data16
lret
aas
adc
mov
std
ret
cmp
jno
push
hlt
pop
sti
movsw
xor
ds
cld
fstps
xchg
xchg
ja
fldcw
push
mov
movsl
nop
pop
negl
pushf
ficoml
mov
adc
test
jp
sahf
sahf
wrmsr
xchg
jns
hlt
in
mov
mov
test
xchg
lock
mov
add
loope
push
lock
jge
xor
push
xor
mov
dec
xor
pushf
cmc
mov
mov
movsl
pushf
or
push
mov
test
repz
test
imull
mov
sbb
push
sub
mov
out
icebp
call
push
in
mov
in
ret
sub
push
jmp
ret
scas
add
stos
insb
pop
in
or
xchg
mov
jo
bound
in
dec
in
int
mov
imul
mov
mov
inc
jbe
add
enter
test
sbb
mov
mov
aad
insl
ret
ficoms
mov
pop
and
or
sbb
jae
sahf
test
push
add
es
mov
push
fldt
and
ljmp
int3
jo
icebp
icebp
or
out
loope
mov
popf
daa
inc
mov
inc
xchg
enter
and
fisubrs
sahf
add
flds
xor
sbbb
adc
xor
dec
inc
xor
and
mov
ja
orb
lcall
add
jle
mov
fistpll
arpl
insl
cmpsl
cltd
bound
mov
mov
cmp
in
xor
les
lock
cmp
xor
sub
or
cltd
fstps
sub
lock
inc
inc
mov
add
repnz
cmpsb
insl
es
mov
addr16
cltd
lods
cmp
add
into
ljmp
adc
jno
mov
mov
sub
and
add
shrl
stc
mov
lret
fcoml
inc
stos
lahf
ret
repz
mov
mov
in
xor
dec
insl
ljmp
icebp
xchg
pop
sub
and
or
mov
sbb
notb
cltd
mov
push
mov
and
mov
ja
pop
test
dec
mov
push
adc
stos
rcrb
pop
stc
movsb
repnz
addl
jl
aad
hlt
pop
push
cld
or
cmp
xchg
sub
lds
add
add
dec
jae
dec
imul
clc
popf
mov
sub
jg
lahf
or
adc
push
ss
sahf
adc
aam
in
inc
xor
ds
and
inc
mov
les
mov
in
mov
jnp
loope
mov
sub
call
sub
movsl
jge
cmc
std
pushf
sbb
and
lods
xlat
adc
mov
mov
dec
mov
je
sbb
push
das
and
dec
inc
push
jle
fnstenv
scas
cs
and
cmp
nop
shrb
out
repnz
xchg
fisubrl
push
mov
in
lods
loopne
rcll
dec
xchg
fcmovne
jle
dec
adc
push
mov
arpl
mov
pop
jo
js
jg
jmp
pushf
scas
test
dec
hlt
gs
cmp
mov
cmc
push
mov
bound
cld
xchg
outsb
jns
sub
cli
rclb
loopne
lea
xchg
xor
mov
and
add
fbld
fldenv
or
pop
mov
and
mov
mov
je
lahf
ret
xor
push
fldenv
xchg
adc
push
into
ror
cmpsl
fwait
sub
pop
dec
insb
dec
push
and
ds
data16
ret
dec
jbe
lea
cmp
test
cmp
xor
jmp
lret
std
shrl
loopne
loopne
xor
and
pop
adc
add
xor
mov
stos
add
ret
in
mov
mov
sub
dec
sti
pop
add
lds
jbe
jecxz
and
mov
cli
stos
sbb
lret
mov
pop
add
fistps
push
sbb
xchg
sub
xorb
inc
aas
pop
dec
lret
and
in
enter
sub
shll
cmp
mov
mov
subl
sub
and
out
mov
and
ss
and
mov
cmp
mov
mov
mov
xchg
mov
lret
inc
mov
jo
and
xor
lock
rorb
push
repz
stos
push
inc
sub
jb
xchg
sbb
sti
mull
xchg
shrb
mov
push
push
icebp
adc
adc
xchg
lods
dec
movsl
test
ret
xor
adc
out
jae
inc
mov
jo
loop
int3
and
xor
push
add
in
jle
pop
ja
lock
dec
jb
xchg
cmp
jge
add
add
mov
call
leave
xor
push
xlat
rol
orl
adc
insl
pop
pop
out
mov
inc
and
pop
bound
ljmp
pop
pop
cwtl
or
adc
mov
add
addb
cli
sub
test
stos
push
int3
sbb
push
mov
sub
inc
out
iret
xlat
mov
ret
fnstsw
rorb
insl
or
loop
das
out
jmp
shr
push
xor
mov
pop
ja
cmp
mov
adc
mov
jo
adc
int3
dec
push
push
and
fidivs
lahf
sub
test
or
inc
jmp
ljmp
ret
lds
add
pop
mov
fs
mov
pop
inc
xchg
shll
lret
into
jge
movsb
and
mov
dec
ret
push
int3
xchg
test
inc
outsb
mov
mov
loopne
pop
or
leave
add
or
sbb
lahf
pop
cmp
je
fisttps
adc
outsb
in
popf
dec
or
aaa
hlt
xchg
push
or
pushf
inc
sub
iret
xor
dec
int3
xchg
div
ret
add
jle
inc
mov
xchg
sub
aas
pop
xor
ja
hlt
cli
stos
and
shl
aaa
addr16
das
push
mov
arpl
cld
addr16
sub
push
add
pop
out
imul
push
arpl
and
insl
js
cmpsl
adc
sbb
adc
dec
inc
and
test
add
sbb
sbbb
popa
add
push
and
xor
mov
out
dec
lcall
gs
and
mov
outsl
rorl
mov
imul
into
jl
push
dec
sbb
inc
das
repnz
lahf
gs
mov
lret
inc
jns
add
stos
stos
mov
jb
xchg
fstpl
inc
or
es
rcrl
add
xorl
js
mov
in
shrl
push
cli
lcall
mov
outsl
mov
xor
xchg
arpl
pop
repnz
loope
mov
sub
shlb
jae
sub
mov
ret
adc
sbb
add
enter
mov
mov
lods
das
pop
in
inc
xor
gs
icebp
dec
out
xchg
push
mov
scas
lahf
repz
jge
leave
pop
mov
xchg
popa
add
mov
nop
shll
pop
sub
add
bound
inc
sub
int3
cmp
mov
fwait
mov
inc
pop
push
daa
in
cmpsl
mov
jns
dec
jb
mov
pop
rorl
pop
pop
shl
and
jbe
dec
xchg
xor
and
xchg
cmpsb
or
mov
pop
call
data16
pop
cmpsb
or
lcall
push
in
imul
push
jne
lcall
and
inc
outsl
mov
pop
mov
cmpsl
add
push
popf
repnz
dec
ficompl
mov
pop
push
cmp
or
outsb
jle
out
mulb
fcoml
or
cli
int
pop
cmpsl
mov
outsb
sbb
inc
lcall
mov
popa
pop
jae
lods
and
pop
les
scas
or
jecxz
fimuls
adc
aam
lock
lock
outsl
jl
mov
pop
jmp
ret
scas
test
in
data16
fs
pop
lahf
imul
loopne
sub
push
pusha
scas
jge
scas
inc
aam
sub
adc
mov
hlt
xor
fists
jge
and
fmull
notb
push
push
lods
cli
insl
cwtl
pop
out
mov
fwait
jg
bnd
dec
ljmp
ret
or
addr16
test
sahf
lahf
dec
addb
xor
lcall
dec
scas
mov
dec
mov
xor
or
pop
mov
movsl
enter
shl
cwtl
xor
xor
out
out
jmp
sub
jmp
xlat
pop
clc
mov
and
jns
es
jge
sahf
lret
push
sub
sahf
int3
gs
jnp
cmpsb
test
test
je
sbb
xor
es
push
dec
loop
jns
sub
pushf
ret
rcrb
cmp
outsl
pop
add
fcoml
aad
adc
jno
les
sar
cmp
sbb
test
mov
cmc
inc
jb
out
or
pusha
enter
mov
mov
sub
pop
jne
popa
jns
mov
in
lea
mov
push
lds
jne
imul
sub
daa
mov
repnz
sbb
cmp
jo
mov
scas
push
fcomps
jp
mov
xor
std
imul
mov
sub
cmp
popf
scas
jnp
pop
jns
stc
call
mov
sub
scas
xchg
nop
jmp
in
and
lds
bound
js
loope
sbb
aaa
repz
jmp
cwtl
je
pop
in
xchg
insb
subb
push
sub
scas
aaa
mov
pop
dec
jl
test
sub
fstpl
xchg
ret
adc
scas
adc
adc
hlt
lret
push
scas
mov
jns
mov
xor
pop
xchg
sub
outsl
movsl
sbb
pop
cmpsb
inc
ds
icebp
lret
cmp
mov
xchg
ret
push
mov
fistl
imul
adc
inc
mulb
mov
push
jns
cmp
aad
inc
pop
push
fs
mov
push
in
cmp
mov
inc
dec
sub
dec
mov
ss
cmc
jecxz
pop
popf
push
in
outsl
cs
xchg
inc
mov
or
pushf
loope
push
cs
xlat
xchg
movsb
movsl
lock
jecxz
or
jecxz
adc
fnstcw
dec
std
pop
loopne
out
in
loopne
gs
and
mov
mov
and
pop
out
out
ds
test
mov
stc
cmp
mov
ja
cmp
push
mov
movsl
adc
aad
cltd
test
andb
push
in
push
ficoml
int
jnp
les
xor
fwait
sub
pop
push
mov
addb
ret
ss
cmp
push
loope
dec
inc
xchg
xchg
xor
push
jle
add
imul
push
mov
lret
mov
icebp
movsl
imul
jge
inc
int
inc
aad
mov
sbb
lret
push
pop
pop
push
sub
stos
mov
sbb
xor
out
int
push
stc
aas
mov
xor
pop
or
mov
mov
push
pop
outsb
sub
les
pop
fcoms
sub
in
js
js
cmpsb
loopne
out
int
mov
pop
pop
mov
ja
subl
pushf
xchg
loopne
rolb
aam
mov
mov
mov
lea
stos
repz
mov
xor
aaa
sahf
inc
scas
in
push
xor
aas
arpl
pop
js
lds
and
lock
lock
jnp
adc
arpl
mov
mov
xor
jno
push
push
iret
jns
mov
adc
test
in
xor
sub
fisubrs
leave
pop
out
jg
in
out
sbb
adc
pop
xchg
or
popf
mov
pop
sahf
mov
jl
dec
pop
loop
testb
sub
loop
test
or
mov
mov
and
pop
jg
std
test
pop
inc
scas
cmc
mov
cmp
cmp
aad
test
pushf
jns
test
ja
fdivl
aad
and
mov
imul
xorl
andl
call
push
jo
ja
sub
sbb
rcll
inc
enter
xchg
imul
pop
mov
fcoml
fiaddl
sti
push
push
mov
jbe
out
adc
sub
xor
cmp
adc
test
cmp
cli
mov
mov
mov
je
and
and
push
pop
xchg
xchg
adcb
test
popa
aas
sbb
jno
jecxz
test
cmc
popf
mov
inc
aam
dec
push
sub
sub
pushf
jno
mov
daa
add
xchg
inc
push
mov
movsl
arpl
mov
inc
inc
stos
sbb
sub
adc
jl
stc
rclb
xor
daa
push
test
out
add
or
int3
mov
das
mov
js
dec
cli
xchg
xchg
dec
adc
jg
cmp
lods
xor
les
push
sub
sbb
sub
xchg
dec
scas
lock
jg
aaa
hlt
xchg
pop
push
fnstsw
xor
repz
add
jge
mov
or
push
pop
cmp
mov
and
sti
adc
test
sti
in
fst
insl
nop
out
dec
jnp
push
je
pop
ret
jle
push
mov
rcrl
idiv
sub
sub
lds
sbbb
fcomps
xchg
pushf
leave
das
add
scas
mov
cmp
pop
in
and
adc
out
es
jp
jnp
pmaddwd
lret
push
xlat
xchg
mov
jo
jo
lret
push
mov
and
pusha
cwtl
mov
jbe
popa
fldl
jmp
push
gs
bound
in
imul
out
add
scas
stos
jns
push
xchg
mov
test
repz
add
fwait
push
lods
roll
adc
adc
ljmp
pop
aas
push
ss
int3
pop
fisubl
mov
push
cli
test
imul
jbe
aam
mov
add
inc
fnstenv
addr16
outsl
and
inc
lea
sbb
ss
cmp
xchg
lods
clc
rcl
mov
xchg
aas
leave
stos
xchg
inc
imul
dec
add
cmp
mov
loop
cmp
movsl
adc
test
xchg
movsl
mov
stos
jge
xchg
xchg
hlt
addr16
aam
lret
add
lods
jg
jp
inc
xor
add
lret
jne
outsl
xor
push
repz
lret
push
sbb
mov
mov
lret
mov
add
mov
xor
inc
psrad
test
sub
or
daa
xor
sub
mov
sarl
push
fs
jnp
add
arpl
mov
inc
scas
test
pop
jae
mov
in
mov
push
push
imul
add
cmp
fwait
adc
xchg
sub
pushf
push
sub
insl
sub
jo
sbb
gs
adc
and
mov
mov
jne
fildll
jl
mov
xchg
inc
jge
xchg
or
iret
fldt
xor
xlat
jo
ficoml
test
out
mov
mov
cmpb
imul
mov
mov
jmp
loope
dec
jbe
js
jmp
mov
out
pop
cltd
xor
daa
sbb
fstl
inc
mov
adc
cmpsb
xchg
sbb
loopne
pop
mov
lret
sbb
js
loop
adc
xor
sub
sub
cmp
adc
pop
mov
xchg
inc
mov
mov
pop
int3
cld
movsl
inc
test
sbb
cld
sbb
push
repz
divb
jae
rol
subb
in
xchg
inc
jmp
rcl
movsb
push
sahf
data16
lock
pop
out
imull
int
ss
xchg
lret
lret
jecxz
push
fisttpl
ljmp
push
sub
je
inc
sub
mov
lcall
mov
xor
mov
mov
xchg
sub
daa
sbb
popa
jg
cmp
lcall
xchg
lret
gs
mov
add
nop
movsb
gs
sbb
inc
fcoms
into
mov
aaa
je
adc
cmpsb
sbb
clc
lahf
cs
out
sbb
dec
outsl
and
dec
aam
mov
mov
add
out
enter
adc
lods
dec
into
push
or
jge
fisubrs
notb
push
sub
add
adc
lret
pop
inc
jnp
inc
jp
or
pop
jle
sbb
out
sub
in
sbb
mov
inc
in
jle
jp
push
inc
pop
xchg
add
mov
sarl
and
pop
sbb
and
fnsave
push
jno
xchg
pop
aas
dec
aaa
mov
add
fisttpl
or
pop
popa
push
js
mov
out
fimuls
xlat
pop
imul
pushf
call
loopne
or
pop
fildl
push
leave
pushf
test
lods
js
cpuid
and
jnp
pop
lods
test
adc
fsubl
push
jo
data16
or
adc
jne
jl
insb
add
es
insl
mov
jb
jge
pop
and
pop
adc
dec
or
push
adcl
pop
pop
shr
cltd
xor
std
push
mov
mov
pop
xlat
lahf
jae
cwtl
sbb
andb
or
sub
fmull
das
imul
push
push
test
shrl
jns
mov
pop
call
in
ljmp
cmp
jp
push
movsb
fs
inc
popf
test
out
mov
movsl
mov
dec
fidivl
les
push
push
sub
popf
jmp
pop
pop
or
repnz
mov
mov
sti
pop
sub
cltd
mov
clc
ja
test
mov
push
mov
ja
rcrl
sbb
mov
ljmp
addr16
mov
dec
jae
mov
std
mov
mov
inc
andb
scas
mov
shr
pmaxsw
idivb
push
scas
ret
mov
loope
bound
mov
lcall
imul
aas
sbb
mov
jg
nop
add
xchg
jb
sbb
pusha
add
inc
sbb
test
jo
mov
lret
int3
in
dec
cmp
cs
cmp
pop
add
push
mov
mov
sbb
cmp
popf
fs
sbb
lcall
dec
xor
adc
xchg
mov
or
jns
xchg
movsb
popf
jb
push
int
into
in
inc
inc
push
mov
pop
xchg
bound
or
dec
iret
in
push
xchg
fcmovnu
imul
and
lods
out
stos
decb
sbb
gs
inc
mov
push
sub
sbb
out
xor
sub
jb
and
xchg
xchg
add
test
popa
flds
adc
mov
daa
in
clc
mov
stc
pop
jle
es
inc
ss
mov
xlat
ret
xchg
pop
pop
ret
popa
push
daa
sahf
js
shlb
loopne
aam
stc
in
loopne
adc
imul
vmulsd
or
push
adc
pmaxub
xchg
enter
fidivrl
daa
mov
test
inc
mov
xor
jmp
cmp
mov
lcall
repnz
sub
pop
cmc
mov
adcb
add
sub
add
andb
mov
pop
xor
jmp
cmp
mov
ret
lahf
jo
les
xchg
mov
addr16
cwtl
push
das
xor
jnp
aad
inc
leave
xorb
inc
mov
adc
inc
dec
outsl
xor
or
fdivrp
adc
jg
mov
cltd
adc
adc
push
bound
andl
mov
and
or
jo
xor
fmull
dec
and
push
jb
call
fdivrl
sbb
clc
das
sub
push
enter
sbb
in
dec
negb
fisubs
sub
push
push
and
sbbl
ret
arpl
call
push
add
xor
jnp
movsb
push
sub
and
and
pop
mov
lods
and
sub
xchg
or
lcall
and
sbb
out
push
dec
sbb
sub
jmp
adc
xchg
pushf
inc
stc
sub
loop
int
add
fbld
jbe
and
lock
pop
add
cmpsb
pop
jge
cmp
test
or
add
lock
adcl
add
aam
pop
pop
cmc
sub
enter
sub
sti
mov
mov
test
ret
add
sbbl
jmp
mov
xchg
ret
pop
cmpsl
stc
xor
xor
sahf
cld
xor
pop
jp
lretw
push
push
jl
sub
fdivrs
inc
scas
push
lret
pop
xor
or
push
xchg
sub
hlt
sbb
shrl
in
fcoml
addr16
sbb
push
jb
cs
push
hlt
pushf
pop
push
cmpsl
stc
dec
sbb
out
mov
repz
andl
add
int
push
ret
fldt
sub
sub
sarl
and
loop
mov
pop
xlat
or
cltd
mov
add
movsb
inc
out
mov
cld
scas
jecxz
fwait
cltd
loope
mov
cmp
popf
sub
in
cmp
orl
xchg
out
sub
push
aad
insl
jl
lods
add
rol
fld
and
xor
test
aad
or
jno
mov
popa
lret
mov
out
inc
popa
fiaddl
fists
sbb
push
repz
adc
int3
mov
push
sub
leave
push
push
lock
imul
nop
inc
faddl
sbb
xchg
aad
insb
cli
fs
mov
cmp
imull
pop
faddl
loop
pop
int3
or
push
dec
mov
ss
addr16
notl
or
or
lret
xchg
jge
jbe
mov
fcmovnu
aaa
aaa
cmp
fwait
cld
or
or
ret
push
rorb
cwtl
call
jge
push
das
lock
mov
pop
fidivs
outsl
aas
call
movsl
dec
int
pop
cltd
loop
xchg
aaa
int3
loope
jbe
adc
repnz
mov
push
cs
sbb
push
mov
fs
push
mov
mov
test
ljmp
xlat
in
fcompl
push
call
pushf
adc
aaa
popa
mov
scas
in
popa
adc
xchg
cli
xor
push
jnp
leave
test
ficoms
pop
js
addr16
jne
movsl
xchg
les
mov
adc
ret
cmp
outsb
je
sbb
xchg
pusha
cmpsl
aad
out
and
loopne
add
pop
push
adc
stc
sub
xchg
adc
loop
fldl
sti
out
jl
xlat
sub
push
cmp
les
clc
inc
mov
mov
mov
rorl
es
pushf
jle
test
xor
add
cmp
jge
jl
sbb
cltd
loope
lock
add
inc
loope
and
clc
jl
sbb
sbb
jb
nop
push
ret
shr
xchg
inc
loop
dec
sub
test
test
push
jge
loop
xor
inc
or
stos
jecxz
and
pop
and
jp
loope
cmpsb
or
dec
sbb
push
aam
pop
add
in
jecxz
shlb
rorl
cld
xor
inc
mov
sub
mov
inc
ret
flds
outsl
insl
sub
mov
or
cmp
sbb
sub
test
mov
dec
test
into
inc
icebp
imul
sahf
push
mov
outsl
nop
pop
add
or
mov
nop
push
xor
mov
aad
outsl
jg
rol
and
loope
adc
lods
mov
mov
sbb
dec
or
in
and
push
fbld
dec
push
test
cmp
cmpsb
sbb
sub
fsubr
test
fmull
imul
shll
or
jge
cs
push
outsb
xor
pop
dec
mov
and
imul
sahf
inc
push
test
outsl
push
fwait
jns
and
jne
add
aaa
fnsave
dec
mov
addb
xor
xor
pop
hlt
lret
dec
ret
popf
nop
xchg
lret
jb
or
out
pop
xchg
cmpsb
xor
jp
ss
jmp
out
mov
xchg
sahf
xchg
pusha
roll
pop
adc
in
cld
inc
dec
inc
mov
pushf
inc
je
aaa
jo
test
dec
shlb
jg
ret
fists
cmp
mov
sbb
inc
adc
lea
movsl
outsl
jg
leave
out
lret
or
arpl
stos
arpl
out
cmp
cmp
int3
pop
mov
mov
out
loop
pop
dec
jg
scas
adcl
lahf
incl
adc
call
fwait
ret
pop
cmp
sti
lret
movsb
pop
mov
bound
popa
mov
in
or
rcrb
int3
cs
mov
or
fldcw
test
pop
xorl
mov
in
mov
push
xchg
pop
sbb
cmpsb
fs
adc
inc
data16
or
pop
pusha
mov
adc
sbb
jbe
dec
gs
jns
inc
mov
das
out
or
test
aaa
mov
arpl
movsb
or
lret
add
cmp
push
inc
loope
push
ret
xorps
mov
inc
pop
sahf
lret
mov
push
dec
push
xchg
push
dec
xchg
inc
jp
lea
ffree
lea
cld
xchg
push
andl
push
fbstp
and
push
inc
pop
into
imul
lret
mov
xchg
cmpsb
pop
adc
sub
clc
arpl
add
or
sbb
lock
xchg
mov
or
cmp
push
js
sbb
pop
cmp
or
add
push
insb
es
mov
xor
mov
jne
xchg
adc
jne
aad
jecxz
and
test
dec
push
lds
cld
int3
sarb
popf
jecxz
lret
daa
incl
mov
lahf
xlat
jle
jb
and
and
jp
mov
jmp
pop
add
dec
push
faddl
pop
and
int3
xor
shl
andb
xchg
xor
fsubl
dec
fstl
inc
imul
test
call
jbe
lock
or
push
nop
add
mov
xor
ljmp
add
xor
inc
psubb
nop
test
sar
fisttpll
sti
adc
or
movsl
xor
xor
sbb
popa
fwait
bound
nop
clc
jno
test
cld
insb
mov
push
outsl
ja
lret
xchg
movsb
aas
inc
dec
mov
ja
scas
sarl
inc
cltd
in
jmp
sbb
fwait
movsl
xor
add
xchg
test
rol
lret
jne
popa
push
adc
das
jmp
sbb
loope
sub
mov
push
pop
call
jl
pop
push
in
dec
push
xor
xlat
ljmp
jge
pop
cs
sbb
adc
mov
in
add
out
loop
test
divl
push
cmp
xlat
negb
mov
popf
lock
push
loope
addl
ljmp
jo
jmp
push
stos
lret
outsl
insb
push
rorb
cltd
sub
fiadds
push
cmpb
in
inc
jno
adc
ficomps
sbb
push
call
daa
xor
nop
pop
leave
add
mov
popf
popf
sub
mov
or
ljmp
push
cmpsb
cwtl
arpl
clc
jbe
push
lahf
cmp
dec
add
enter
dec
cmpl
aaa
mov
sub
mov
fistps
and
jp
dec
add
sahf
and
lock
jg
insb
pop
das
xchg
or
cltd
out
cld
mov
movsl
call
xchg
sahf
aas
imul
lods
and
test
lds
jge
dec
push
push
hlt
lock
fs
mov
je
lret
mov
dec
sbb
icebp
pusha
filds
pop
ljmp
push
jmp
adc
lods
adc
frstor
imul
in
in
add
and
mov
aas
movsl
xor
scas
sub
enter
adc
push
dec
jnp
gs
push
mov
dec
fs
pop
mov
aas
push
xchg
pop
mov
aad
push
cmpsl
lcall
lods
jae
push
jmp
mov
std
cmc
xchg
test
fs
cmp
data16
insb
sarb
repnz
xchg
in
inc
ljmp
push
in
and
add
mov
call
negb
loop
and
xchg
jnp
sbbb
pushl
arpl
lret
jnp
pop
mov
fstl
fldl
pushf
enter
or
popf
dec
cltd
imul
stos
stc
dec
pop
jg
adc
and
shlb
mov
mov
sub
ds
sub
jp
xor
push
jae
adc
jecxz
stc
in
xor
cmc
hlt
imull
aaa
jno
int3
loop
mov
mov
cmpsb
push
hlt
lods
dec
js
add
mov
inc
adc
mov
out
int
aad
imul
mov
sub
adc
mov
jnp
dec
sahf
out
aad
xor
adc
jns
jnp
shrb
mov
mov
dec
mov
or
iret
icebp
in
sub
jbe
movl
xor
adc
ret
leave
lret
daa
lock
lahf
mov
cmpb
dec
dec
mov
mov
imul
sub
fildl
push
inc
cmpsb
clc
inc
dec
xchg
popf
jne
xchg
jae
mov
mov
push
stc
ret
jno
jmp
push
xchg
jb
pop
or
mov
test
sub
test
icebp
dec
cmp
imul
jp
dec
and
pop
adc
and
xchg
xchg
adc
data16
stos
and
jmp
cmp
and
lods
sarb
leave
push
in
in
cwtl
add
fucomi
mov
jmp
jo
mov
popf
push
push
aas
cmpb
push
cs
mov
xchg
inc
inc
mov
in
insl
jmp
mov
rclb
mov
mov
push
fdiv
mov
loope
mov
test
or
les
in
lods
imul
jmp
push
incb
and
rcrb
or
inc
xchg
push
jle
pop
icebp
push
cs
fsubrs
sbb
iret
mov
and
sub
cwtl
out
cld
dec
xchg
arpl
sbb
out
dec
outsl
push
repnz
popa
aaa
jae
jbe
enter
inc
add
xor
pusha
inc
mov
popa
jns
pop
leave
or
sub
cmpsl
jae
cs
mov
mov
sub
fs
and
fs
adc
xchg
mov
push
ja
pop
ljmp
mov
xor
fiadds
xchg
cmp
cld
sub
enter
xchg
arpl
and
or
stos
jp
fbstp
sub
push
lahf
adcl
shrb
int3
jns
jb
jge
cli
or
push
lods
xor
jmp
in
fsubs
movsb
xchg
inc
pop
jecxz
inc
jno
mov
xor
jbe
lahf
or
leave
aaa
mov
insb
popa
xor
pop
fbld
and
sub
add
addr16
xor
and
mov
lret
pop
lahf
popf
sbb
sarl
sub
in
inc
hlt
pop
ljmp
sub
xchg
outsl
mov
sub
dec
clc
push
fidivrs
loopne
outsb
jne
mov
cs
pop
das
jecxz
cmpsl
jmp
das
inc
test
mov
nop
fsubs
aaa
mov
movsl
push
fyl2x
mov
push
jle
xchg
stc
stos
stc
mov
pop
loop
cmpsl
push
dec
fstpt
stc
jge
js
adc
pop
insl
mov
sbb
into
test
pop
pop
mov
push
int
scas
cltd
mov
out
std
sub
mov
lcall
push
mov
test
adc
fimuls
sub
xor
adc
lahf
fwait
pop
out
fnstcw
xlat
xor
adc
sub
push
test
or
add
cmpsl
clc
mov
xchg
xchg
mov
je
xchg
cli
mov
movsl
int3
inc
mov
lods
dec
inc
sbb
adc
pop
nop
fwait
xchg
xchg
mov
sarl
or
dec
fidivl
cmpsl
cmp
push
movsl
mov
xor
adc
push
inc
lcall
sub
clc
pop
in
mov
cmp
pop
loope
adcb
xor
push
scas
xor
pop
push
lret
xlat
insl
push
mov
xchg
sar
pop
push
testb
insl
cmp
cwtl
push
loopne
ss
cli
adc
cmc
mov
jae,pn
fdivr
outsl
not
push
jp
into
push
das
rclb
ja
dec
sbb
fnstenv
pop
cli
std
push
call
inc
je
repnz
aam
cld
jb
lcall
mov
push
mov
in
out
sbb
xor
cmpsb
js
daa
int3
cmp
in
lret
mov
adc
scas
mov
mov
sub
pop
jp
and
pop
mov
mov
nop
pop
mov
lcall
xchg
fsubr
add
leave
sub
inc
dec
jb
insl
inc
xor
dec
in
jnp
lret
shrb
jp
mov
push
pop
and
sti
popf
jae
fdivl
adc
gs
sub
in
inc
push
leave
sbb
push
mov
cmpsb
sahf
inc
out
dec
fidivrs
lock
fstpt
shrb
add
jl
stos
out
or
test
icebp
xchg
mov
mov
cmpl
push
push
aad
inc
outsl
mov
pop
pop
sti
or
aaa
xlat
stos
mov
jno
fidivl
inc
in
lret
xor
loope
stc
mov
push
mov
in
addr16
adc
cmpsl
mov
jg
mov
test
push
mov
repnz
push
sarl
out
xlat
push
dec
int
pop
add
jnp
repnz
jno
xchg
jae
push
or
xorl
pop
mov
pusha
pusha
mov
dec
andl
call
sub
orl
cld
dec
jne
add
aad
scas
xchg
add
lock
sub
pop
sar
and
xchg
ds
pop
jo
cmpsl
or
iret
mov
dec
add
aas
arpl
mov
jle
arpl
pushf
sub
cmp
cmp
jg
jne
inc
adc
hlt
cwtl
jbe
hlt
insl
adc
xor
mov
cmc
bound
out
pop
mov
in
mov
popf
pop
test
stos
pop
dec
mov
in
inc
cwtl
push
ret
in
sbb
mov
cmp
fcmovnb
int
sub
stos
loop
pop
test
data16
std
mov
xchg
sbb
icebp
sub
fwait
xchg
ljmp
mov
jne
fs
adc
jmp
xlat
pop
das
adc
out
xor
fnsave
add
jns
cld
popf
mov
sbb
fisubl
lret
mov
pop
nop
pop
and
pop
mov
push
jl
jo
int
xchg
push
sbb
inc
push
mov
xchg
andl
or
mov
imul
add
inc
bound
icebp
ret
orb
push
js
mov
lock
inc
loopne
dec
out
add
lods
push
out
enter
lea
les
fs
adc
sub
out
push
ret
sbb
lret
sub
hlt
or
mov
inc
mov
in
mov
cmpsl
out
das
testb
lock
mov
jg
in
sbb
loope
es
rcrl
xor
push
repz
out
mov
dec
pop
shll
cmp
loope
xchg
inc
mov
xor
adc
icebp
sbb
push
mov
mov
xor
nop
hlt
aad
loopne
jle
jae
ret
mov
mov
cmp
cmp
pop
movsl
push
shl
add
aad
nop
mov
lahf
push
mov
jecxz
mov
or
mov
imul
pop
subl
xor
mov
cmp
sub
or
lock
cli
testl
popf
and
popf
mov
xorl
xor
pop
cmp
sbb
pop
mov
sbbl
ja
xor
shlb
in
repnz
rorb
mov
test
es
mov
lock
pop
mov
mov
nop
jns
in
imulb
lock
or
push
repnz
fucomp
outsl
cmp
pop
mov
dec
xchg
cmp
cmp
pop
sub
pop
ficompl
and
sub
std
in
clc
aad
shr
popa
jge
sti
and
mov
sbb
ret
imul
loop
mov
cli
daa
pop
rep
and
gs
pop
or
mov
hlt
je
add
push
inc
pop
fsubrs
out
push
mov
inc
xchg
inc
sub
ret
pop
lock
jge
pop
push
andl
test
push
dec
dec
cmp
mov
movsl
xlat
adc
sbb
shrb
and
fcompl
dec
fldenv
test
pushl
sbb
xchg
test
inc
ret
pusha
sub
add
js
xor
xor
lahf
add
pop
enter
cmp
je
insb
and
jle
mov
or
ss
adc
xchg
loop
es
out
ds
popa
xchg
sbb
cmc
add
rcrl
pop
sbbb
outsl
sub
jl
rcl
push
rclb
sti
mov
testb
xchg
aas
xorl
rorl
push
ficomps
push
pop
ret
test
mov
movl
mov
lods
cmp
data16
loope
ffreep
loope
xor
dec
das
pop
mov
adc
loopne
xorl
jp
inc
mov
test
push
insb
jb
pusha
jle
sbb
jge
inc
dec
in
stc
xchg
scas
lods
repz
mov
stos
mov
xchg
xchg
loop
sbb
xchg
mov
jg
mov
cmp
movsb
add
sbb
xor
mov
xchg
popa
xor
in
push
les
shl
cld
inc
test
lcall
cmp
std
pop
ret
addr16
aaa
test
and
test
inc
or
movsl
mov
int3
push
leave
notb
aad
or
dec
and
xchg
sub
push
and
sarb
xor
xor
xor
mov
sub
adc
push
adc
leave
and
xor
insl
pop
sahf
sub
lahf
nop
stos
inc
dec
xchg
mov
mov
add
imul
adc
jb
jge
jp
jecxz
sbb
mov
mov
das
mov
pushf
pushf
je
mov
sahf
dec
and
imul
fists
repnz
add
pop
inc
push
inc
scas
scas
jo
add
dec
push
loope
cmp
scas
fcomip
mov
sub
lock
enter
adc
jb
dec
jl
in
mov
jg
imul
fmuls
mov
inc
hlt
mov
sbb
or
cmpl
jbe
scas
sbb
or
push
mov
jnp
lock
fsts
movsb
mov
xor
lods
xor
rcrb
mov
jge
jns
lahf
aas
leave
outsb
stos
inc
dec
repnz
das
sub
pushf
sub
mov
out
popf
ret
xor
lea
pushf
adc
or
ficompl
fists
mov
das
jge
fstpt
ret
jno
dec
stc
in
out
jne
mov
repz
mov
sub
dec
jne
add
mull
pop
jns
sub
adc
sti
push
arpl
stc
adc
dec
push
cmpsb
xchg
enter
jno
xchg
fcmove
sub
stc
rclb
mov
jge
into
out
mov
mov
mov
or
and
gs
in
mov
hlt
mov
mov
bound
rorb
inc
mov
add
test
pop
lock
std
fmull
jle
jle
ss
std
lahf
addr16
or
je
int
or
outsb
xchg
cltd
out
std
stc
jne
mov
gs
jg
lret
sub
aam
shrb
and
in
sbb
mov
test
into
cmpsb
mov
add
pop
lods
enter
lret
iret
cmp
aaa
stc
jne,pt
scas
fstps
or
ds
js
inc
aam
mov
mov
fnstsw
int3
mov
cltd
mov
arpl
test
jne
pop
cmp
mov
sbb
jg
xchg
movsb
test
lret
lea
idiv
add
mov
push
push
adc
test
lret
xor
push
jno
xchg
cmp
mov
out
dec
push
ja
data16
sbb
insl
xor
fisubrs
push
ret
sar
jl
out
in
inc
add
or
lock
pusha
xchg
mov
cmp
imul
pop
rolb
jmp
xchg
lret
lods
sub
pusha
cmp
xor
gs
sbb
pop
mov
mov
sbb
pushf
jo
pop
lcall
xor
xchg
addr16
inc
dec
cwtl
test
sbb
ret
jl
xchg
ret
mov
mov
pushf
bound
and
dec
cwtl
dec
xchg
sbb
lock
mov
popl
iret
or
and
out
lods
out
ret
pop
lahf
or
in
inc
gs
xchg
iret
pop
pusha
jnp
divb
mov
pop
fiaddl
jle
mov
aam
lea
inc
rcll
loope
add
inc
mov
xor
bound
sub
imul
sbbb
iret
push
jp
sbb
push
mov
daa
int
mov
fidivs
mov
add
cmp
in
cmpsb
ss
out
xchg
mov
mov
hlt
lds
ja
fwait
mov
jbe
pop
add
dec
in
loopne
adc
outsl
jge
jp
pop
orb
lock
adc
fidivl
ds
jecxz
inc
cmpsl
call
mov
shrb
mov
div
xchg
test
sub
sti
bound
stos
push
add
cmpb
pop
aam
js
sbb
pop
add
nop
push
lods
push
leave
add
aad
popa
cltd
sbb
jmp
stos
xor
inc
xor
cli
and
mov
out
dec
fs
nop
pop
jecxz
fwait
xchg
pop
lock
add
out
rcll
and
jp
jbe
cli
shr
push
sbb
ja
sbb
lods
in
jnp
cmp
cmp
jmp
xlat
and
hlt
inc
jle
mov
sbb
mov
dec
and
xchg
dec
adc
sub
xor
loope
loope
call
divl
or
outsb
lock
popf
out
jbe
jge
or
mov
pop
pop
xchg
push
jnp
or
pop
sahf
add
cltd
sbb
lods
adcb
call
pop
pop
rcrb
add
in
fistpl
adc
int
mov
sub
jmp
xchg
mov
movsb
lret
jle
and
add
jbe
lahf
push
mov
pop
mov
add
mov
repnz
test
xor
fsubrs
and
inc
mov
mulb
cmpsb
icebp
imul
push
sbb
mov
icebp
cmp
aam
stc
sti
sbb
insl
jb
or
mov
add
xchg
cmp
hlt
or
cmp
mov
xchg
push
lods
sbb
inc
adc
insl
xor
js
push
fisttpll
dec
add
je
test
jmp
mov
add
popf
cmp
inc
jl
stos
jae
test
leave
dec
add
jge
lcall
push
lods
mov
popf
mov
out
xor
inc
xor
xchg
jle
and
adc
dec
iret
adc
fs
dec
or
mov
in
cs
pop
cmpsl
pop
adc
pusha
add
push
enter
lret
cmpsl
jo
xor
xchg
cmp
cs
cwtl
repz
iret
xor
ds
fstpt
cmpsb
mov
out
pop
mov
std
xchg
je
cmovo
xor
aas
jmp
push
and
test
cmp
dec
push
jb
mov
popl
mov
sahf
das
jno
cwtl
fildll
push
adc
lcall
adc
jecxz
adc
adc
test
les
testb
push
in
dec
push
jle
sub
xchg
jmp
jnp
call
mov
pop
cmp
out
adc
jg
jmp
xorb
lret
stc
imul
jns
mov
mov
fsts
push
aaa
fnstenv
test
jp
stos
push
pushf
into
mov
cltd
rclb
cmpsb
sbbb
sbb
jecxz
fdivp
es
xor
add
or
pmaxsw
fimuls
and
fildl
mov
jmp
gs
pop
out
jmp
iret
outsb
imul
xchg
aas
inc
jge
jae
test
jmp
jge
and
cs
jne
stc
xlat
mov
sub
mov
or
cli
push
mov
imul
cmp
mov
and
test
jne
dec
fs
jp
pop
xchg
mov
sub
scas
inc
jae
shlb
sub
fs
js
repz
xor
jg
in
divb
rdpmc
imul
add
aam
int
cmp
shlb
sbbl
push
mov
push
out
inc
dec
scas
cmp
xor
xchg
push
vmulss
movsl
mov
adc
inc
push
or
add
adc
imul
rcrl
jnp
cmp
negl
inc
sarb
insb
rcll
divl
jp
sbb
lea
sbb
dec
inc
enter
lods
fwait
push
push
sub
adc
jns
das
mov
sbb
mov
push
cmpsb
rcl
iret
insb
stos
imul
mov
sub
jecxz
adc
enter
int3
push
dec
mov
je
lods
lcall
in
jg
push
pop
jae
xor
aas
addr16
outsb
push
pop
cmc
jle
fildll
test
add
lds
xchg
cmp
fprem1
orl
and
addr16
ds
lret
xchg
pop
xchg
insl
sar
xor
lret
mov
in
inc
pop
aaa
add
into
sub
movsb
lret
push
mov
aam
mov
and
mov
inc
jne
pop
push
pop
push
cmp
ja
mov
je
lds
mov
into
cwtl
aad
or
jae
lea
mov
cwtl
mov
pop
in
xor
insl
mov
sbb
mov
xor
fldt
cmpsl
das
call
mov
add
shrw
jmp
xchg
cmc
xchg
cmc
movsb
pop
js
cmpsb
lea
lret
insl
cmp
mov
idiv
stos
inc
cmc
ds
insb
xor
sub
lahf
lods
sbb
lea
mov
aad
popf
xchg
sub
hlt
les
mov
inc
inc
in
sbbb
xchg
jns
dec
push
cmp
xchg
ss
cmpl
testl
data16
rcrl
sub
fs
popf
outsb
cmp
lods
ds
push
in
cmpsb
jg
cmp
inc
sbb
inc
cmp
mov
push
sti
jne
scas
popf
mov
jno
add
xor
fs
adc
cwtl
sbb
ret
lock
pop
js
push
dec
jbe
and
ret
dec
fsts
pop
push
sbb
and
mov
int
or
out
out
mov
aas
cmp
lods
add
xor
jbe
dec
mov
ljmp
lods
dec
inc
test
movsb
repnz
pop
inc
aaa
test
or
sub
inc
mov
stos
sbb
pushw
cld
pop
push
xchg
mov
pop
sbb
xchg
and
cmc
cmpsb
ss
mov
cmp
out
std
loop,pn
jbe
adc
jg
ljmp
fsubl
jne
mov
cmc
js
addr16
leave
and
stc
bnd
lret
pop
mov
add
in
push
xlat
bound
and
call
inc
xor
sti
fnsave
mov
popa
xchg
repz
jbe
scas
call
cmpsb
mov
pop
lods
jp
hlt
data16
cmp
in
pop
jp
or
jae
pop
cmp
outsl
insl
sbbl
les
xor
ljmp
xor
fistps
imulb
test
lahf
mov
dec
mov
les
stos
aas
mov
ja
ret
jecxz
push
add
loopne
add
into
jmp
add
out
out
adc
add
push
fwait
pop
xchg
xchg
cmp
xchg
mov
adc
lahf
out
imul
jg
push
sarb
mull
sub
sub
call
mov
jbe
mov
in
mov
sbb
lret
adc
and
in
lock
es
les
pop
sbb
jle
cwtl
xchg
cld
sbb
repnz
sarb
cmc
jb
xchg
lock
and
outsb
pop
jmp
loopne
xor
cli
hlt
dec
jg
inc
sbb
imul
stc
mov
cmc
mov
test
mov
sbb
lds
in
sub
push
xchg
mov
jecxz
lds
mov
dec
cmpsb
lds
pop
emms
imul
jo
push
rcrl
ficoms
call
into
dec
cs
mov
fbld
cmc
jmp
mov
fs
adc
jle
push
stc
push
mov
ljmp
shrl
bound
add
pop
stos
mov
xorb
mov
inc
lcall
ds
fstpt
pop
pop
loop
neg
pop
out
daa
scas
xlat
rorl
and
push
mov
dec
stc
and
jb
jmp
adc
push
sti
aas
dec
fstpl
dec
sub
daa
and
push
push
inc
not
mov
ja
and
mov
sub
jne
mov
add
or
xchg
ret
adc
push
out
and
or
mov
push
iret
add
iret
movsl
loopne
mov
sbb
in
fstpt
pushf
adc
jbe
out
xchg
sbb
add
rolb
jl
in
in
aaa
insl
add
push
in
sbb
movsl
mov
cmp
push
xor
popf
out
ljmp
loope
jl
scas
hlt
sbb
sub
rcrb
enter
cmp
inc
pop
pop
push
stc
mov
ja
repz
sbb
jle
cmp
lea
push
lcall
lret
dec
lods
xchg
lret
xchg
in
ret
mov
pusha
test
fbld
dec
pushf
out
adc
in
lds
jle
mov
insl
xchg
mov
add
leave
mov
je
repnz
sbb
mov
lret
jb
xor
out
push
mov
arpl
mov
push
xor
add
sbb
outsb
ret
stc
push
xchg
lods
sub
sbbl
or
push
jb
inc
mov
std
enter
sbbb
jl
pusha
dec
fdivl
pop
movsb
mov
pushf
or
jg
mov
push
adc
mov
jle
cli
xchg
pop
aas
pop
inc
xor
xchg
mov
mov
shrl
push
data16
jmp
imul
es
inc
add
adc
je
ds
xchg
push
xor
rclb
sub
xchg
xor
inc
cmp
mov
iret
stos
push
jle
es
adc
popf
es
sub
jb
jge
mov
pusha
sbb
test
sub
sub
mov
add
nop
sbb
stc
les
mov
mov
das
dec
fs
int
dec
and
daa
aam
mov
or
pop
cmc
outsb
jmp
xor
daa
sub
dec
pusha
sbb
xor
or
test
inc
fwait
xor
xor
in
cmpsl
sub
pushf
leave
outsl
std
adc
orl
mov
clc
dec
rcrb
andl
scas
xor
inc
out
dec
sbbb
test
or
stos
mov
push
inc
mov
mov
jl
movsb
loope
or
mov
cmp
iret
xor
jge,pn
addr16
enter
pcmpeqw
bound
bound
lret
push
xchg
ja
test
push
and
pop
out
lret
out
add
int3
sub
fdivl
lods
and
dec
ss
into
fs
dec
and
in
ja
dec
jg
es
adc
rcrb
mov
pop
jno
movsl
mov
push
jl
mov
out
cmpsb
data16
pop
jae
loope
mov
mov
idivb
jmp
test
int3
cld
std
jecxz
cli
inc
push
icebp
je
inc
cmp
xchg
sarb
cmpsl
in
pop
icebp
mov
mov
lds
push
data16
inc
sub
sub
movsb
loope
mov
into
mov
imul
shlb
insb
cmpsb
sbb
jmp
enter
mov
sahf
popf
sbb
lods
fisttpll
jle
dec
pusha
rolb
out
sahf
mov
cmp
pop
jmp
pop
cmpsl
lock
pop
pop
mov
lds
jg
icebp
fidivrs
mov
popa
mov
repz
rcr
test
aam
daa
stos
lock
ds
add
pop
mov
stos
shlb
adc
ljmp
sub
cltd
aas
mov
sub
icebp
pop
push
dec
xchg
lcall
in
cld
jp
mov
sahf
aas
push
fistl
jbe
or
outsb
rolb
cmp
push
clc
mov
cwtl
out
push
ljmp
std
je
inc
imul
xchg
decl
popl
mov
movsl
cmp
fadd
nop
sub
call
inc
jb
pop
inc
dec
jne
sub
popa
cmc
shrb
inc
in
dec
mov
inc
push
fadds
pop
mov
xchg
fstps
scas
push
pushf
adc
divb
dec
dec
loop
xor
nop
js
decb
sub
fistl
adc
adc
aam
rcr
sub
daa
insb
and
imul
dec
adc
push
or
xor
clc
mov
out
mov
das
repz
ds
fldl
push
push
les
sbb
js
sti
fisubl
jmp
outsl
out
pop
mov
xlat
cmpsl
cmp
sbb
sbb
icebp
orb
lods
in
loop
sbb
imul
mov
stc
pop
aad
ds
scas
pop
cmp
cmp
xchg
push
pop
xchg
mov
dec
cmp
test
pop
jne
adc
lcall
sub
enter
aaa
fwait
add
push
push
adc
daa
hlt
xor
pop
xchg
pop
jmp
loopne
in
aas
lods
mov
sti
sub
mov
and
dec
out
fisubl
lds
push
data16
mov
ljmp
mov
ror
fwait
adc
pop
mov
and
mov
int
mov
ficomps
into
test
push
sahf
loop
pop
daa
cmp
jne
lods
mov
add
test
imul
loope
imul
mov
lahf
push
mov
icebp
mov
push
pause
inc
jmp
lret
mov
scas
hlt
pusha
inc
push
ja
add
in
stos
int3
repz
mov
add
test
mov
mov
stos
jmp
ljmp
sbb
and
cmp
and
lods
pop
jl
push
out
pop
mov
sbb
or
incb
sbb
jb
fwait
ss
dec
ljmp
mov
inc
inc
sub
lcall
mov
xlat
xor
and
insb
mov
std
jmp
arpl
pop
cltd
jl
push
xchg
lcall
inc
jno
pushf
and
test
lock
mov
xor
xchg
jge
cld
adc
notb
sbb
jo
int
push
adc
dec
adc
xchg
mov
jbe
mov
mov
insl
jae
mov
inc
pop
mov
mov
adc
mov
sub
lea
push
aad
mov
mov
jmp
test
adc
test
dec
xchg
lock
mov
sub
pop
dec
sahf
out
cmp
xor
sbb
push
stos
xor
mov
les
paddw
jge
dec
imul
cmp
push
int3
mov
call
sub
add
push
es
loop
fcmovnu
hlt
repz
insl
js
out
xor
cltd
repnz
popa
pushf
xorl
jb,pt
test
inc
mov
cmp
fwait
cld
fwait
sahf
movsl
mov
aaa
or
and
pusha
roll
mov
mov
repnz
movb
pushf
or
mov
cmpsb
xor
hlt
mov
fistpll
sarl
mov
mov
or
enter
push
pop
mov
int3
dec
mov
dec
and
inc
scas
lock
and
push
pop
push
int
jne
add
stos
push
or
xor
mov
jo
lahf
mov
popa
loope
mov
jb
in
inc
adc
dec
sub
mull
pop
aas
sbb
test
insb
lret
testl
mov
jbe
cmp
push
cmp
pusha
lahf
pop
mull
push
filds
call
stc
lahf
mov
sub
dec
sub
jns
mov
jge
cmp
mov
or
sub
cmp
push
cmc
cmp
loop
push
pop
mov
test
cmp
and
adc
xor
mov
dec
inc
sbb
or
clc
adc
lods
adc
cld
insb
jbe
bound
ret
mov
popa
mov
lea
lret
ds
inc
xlat
inc
jae
xor
cmp
and
shrb
aaa
sbb
jg
jmp
push
loop
pop
adc
sbb
enter
call
mov
push
dec
sbb
sbb
sar
xor
in
inc
jnp
dec
mov
xchg
dec
xchg
sbb
sahf
imul
imul
call
jle
sbb
cmp
inc
sub
mov
add
int3
sub
cmp
add
mov
leave
mov
popa
lahf
js
and
and
fcom
push
inc
mov
aad
jbe
adc
cmp
fists
add
xchg
pop
cmpsb
mov
jge
dec
or
jl
nop
loope
repz
push
pop
int3
adc
mov
mov
fists
lock
out
insl
jb
push
cmp
das
mov
mov
int3
mov
push
dec
jno
cld
stos
jp
jp
sub
pop
into
sbb
lds
sbb
popf
push
testl
add
test
cmp
gs
push
lods
dec
leave
cltd
jge
lcall
jo
popa
out
fidivrl
loop
pop
jge
sti
add
in
sub
cmp
into
ljmp
add
in
jp
or
sbb
mov
int
lea
push
arpl
add
les
sbb
into
or
mov
loope
jnp
or
clc
and
sub
sbbl
mov
ss
ja
inc
inc
ja
xlat
out
xchg
pop
sbb
adc
dec
dec
inc
inc
shll
ljmp
inc
movsb
cs
lods
stos
mulb
repz
dec
fnstenv
cmp
add
xchg
dec
adc
loopne
mov
lcall
jmp
sub
jl
pop
cmc
and
push
nop
dec
pop
sbb
in
shrb
jecxz
xlat
std
jo
adc
or
insl
mov
xchg
xor
jg
stos
pop
mov
jns
adc
dec
lods
mov
std
lahf
out
push
or
hlt
pop
pop
roll
mov
xchg
and
xchg
cmp
xchg
fwait
and
fildll
xchg
icebp
mov
mov
dec
shlb
fwait
mov
cmp
sbb
pop
es
sub
leave
je
mov
rorl
cmpsl
push
xor
cmc
pop
fisttpll
fsubl
test
mov
xor
mov
roll
inc
jle
or
jne
jbe
adc
into
cmc
ja
mov
xchg
adc
mov
adc
scas
push
add
ficoml
lret
shl
fdivl
mov
pop
cltd
into
stc
rep
rcl
or
outsl
jne
lahf
sbb
out
xlat
add
jne
test
ret
das
into
es
xor
stos
push
cmp
dec
movsl
loopne
stc
push
push
dec
call
xchg
es
in
stos
lcall
hlt
dec
rcl
subl
push
jb
mov
insb
out
popf
jno
cmp
ror
jno
in
insb
jb
ret
icebp
jbe
pop
insl
pop
mull
mov
push
aad
sbb
sub
jns
mov
rorb
jo
jg
lea
fcoms
mov
mov
cmp
lret
mov
xor
outsb
push
adc
orl
lods
mov
int3
shlb
and
out
ficoms
xor
pop
sbb
pop
xchg
xchg
cltd
mov
fistpl
loop
and
repnz
std
pop
xor
rcr
out
jl
lret
adc
cmp
mov
mov
push
inc
jne
mov
or
sbb
push
mov
xchg
lea
scas
xchg
ficoms
lcall
lahf
cmp
cmpb
and
mov
icebp
inc
jbe
xchg
je
cmpsl
lock
test
cmp
leave
out
fists
imul
inc
xchg
in
int3
les
jmp
sbb
sub
cli
or
pusha
sub
jecxz
jmp
movsl
and
push
stos
jno
xor
bound
mov
test
data16
jbe
or
or
fisttps
adc
stc
push
fcmovb
and
pop
fsts
andl
jp
imul
ret
adc
pop
shl
cmp
in
dec
repz
xorl
popf
js
scas
xchg
shlb
sti
dec
outsb
fiadds
xor
add
dec
not
push
sahf
xlat
fs
cmp
adc
cmpsb
push
testb
cld
jg,pn
pop
f2xm1
arpl
test
inc
rorl
in
sti
fmuls
mov
and
sub
cld
push
adc
mov
nop
or
and
add
or
cmp
dec
cli
xchg
mov
pop
and
sarl
pushf
fstl
jp
pop
xchg
cmp
sub
inc
cs
in
test
xor
stos
push
test
adc
pusha
add
lock
rcll
inc
orl
push
push
es
fcoms
idivl
push
cmp
mov
dec
popa
pop
xor
sahf
jns
jl
hlt
sbb
rsm
insl
xchg
jmp
dec
lcall
popa
dec
inc
jecxz
movsl
push
lret
pop
sub
and
xor
sti
pop
jno
lret
addl
lahf
pop
sbb
insl
sub
mov
and
jmp
frstor
push
or
xchg
mov
mov
push
dec
mov
les
cwtl
cwtl
aam
and
push
mov
push
dec
out
push
mov
jno
cmp
loope
mov
sub
xchg
mov
pop
fnsave
xchg
lret
jp
and
movsb
das
xor
inc
cmp
add
xor
sbb
sarb
adc
ljmp
add
es
mov
out
shrb
inc
dec
out
xor
mov
jbe
jbe
add
mov
pop
stos
xchg
pusha
or
int
push
mov
push
jo
jmp
lock
xchg
jecxz
lahf
jns
xlat
sub
adc
fiaddl
rclb
add
pushl
rcl
pop
sub
imul
scas
adc
aad
mov
adcl
sahf
icebp
enter
scas
add
and
mov
ret
lds
nop
pop
arpl
adc
lret
test
fbld
pop
add
repz
jg
stos
or
fldl
addr16
mov
rcrl
mov
shll
cmp
adc
js
push
mov
jo
sbb
inc
push
iret
outsb
fsts
xchg
icebp
inc
xchg
mov
fwait
mov
loope
fisttps
push
sbb
test
cmpsl
shll
jl
mov
sub
mov
jg
sarl
lea
sti
push
jecxz
xorb
mov
mov
imul
pop
test
std
jge
mov
adc
ret
or
daa
repz
aam
movsb
pushf
cwtl
ficoms
shrl
lret
xchg
jle
inc
popa
aad
cmpsl
sbb
test
bound
push
jg
stos
ret
imul
sub
xlat
ret
mov
movsb
cs
fimuls
imul
xchg
scas
mov
es
xlat
cltd
sbb
mov
scas
or
or
gs
add
mov
and
sub
xor
stos
cmpsl
in
pop
jmp
jno
out
sub
test
jmp
js
hlt
rclb
stos
jbe
fsts
pop
inc
mov
repz
xor
loopne
pop
test
inc
ja
or
fwait
lret
std
enter
pop
test
mov
mov
adc
or
fidivrl
sti
shll
rcll
push
xchg
fwait
or
mov
movsb
sbb
jns
jg
add
push
incl
arpl
xor
rcrb
rcl
or
sub
mov
pop
or
push
pop
and
inc
repz
xchg
dec
mov
sbb
push
pop
movsb
mov
lahf
mov
insl
xor
sbb
inc
out
mov
mov
dec
std
mov
fstps
add
lods
fdivr
cmp
rcll
repz
push
int
pop
push
mov
lock
adc
std
pop
cld
shll
cmp
fs
in
xor
push
sbb
cmp
and
cli
jb
dec
cmp
mov
repnz
mov
cmp
push
test
jae
sbb
add
xchg
mov
pop
pop
adc
in
mov
aam
mov
shl
adc
insb
sti
ja
fistps
push
lahf
ret
sub
xchg
xor
mov
sbb
cmpsl
ja
add
imul
xchg
push
cmp
icebp
out
arpl
pop
popf
fwait
add
mov
test
adc
xchg
pop
push
int3
pop
outsb
or
push
lock
sub
and
dec
mov
jbe
add
fstps
popf
arpl
icebp
icebp
mov
sbb
lds
xor
imul
xchg
clc
in
mov
xor
push
jnp
mov
les
or
clc
push
test
mov
pop
dec
popf
cmp
stos
xchg
add
lds
or
inc
das
aaa
pop
cmpsb
dec
divb
ds
jns
mov
scas
push
xlat
sbb
mov
sub
adc
ret
repnz
rol
inc
adc
jne
push
clc
insl
adc
pop
lcall
jae
popf
mov
rorl
ljmp
pop
push
push
mov
aas
add
aas
push
sub
ss
gs
mov
out
jmp
sub
pop
inc
repnz
mov
push
icebp
imul
fsubrs
inc
shll
jmp
movsb
dec
fsubs
or
mov
negl
sub
cli
dec
or
in
call
pop
add
es
push
loopne
sbb
popf
sub
pop
adc
push
mov
adc
jo
data16
jmp
cs
mov
test
enter
mov
sub
sub
ret
jge
cmpsl
outsl
xchg
jne
in
ja
int
je
aaa
mov
aaa
nop
mov
pop
dec
dec
imul
dec
mov
lret
pushf
les
nop
sti
mov
adc
idivl
out
mov
es
mov
aaa
pop
cmp
out
xchg
push
call
ds
and
add
mov
add
loope
mov
mov
push
lds
xchg
out
and
cmp
adc
cld
xor
add
adc
loope
icebp
xor
mulps
mov
adc
andb
jge
aaa
sub
bound
mov
push
jo
adc
call
jp
sti
inc
jae
leave
scas
test
push
sbb
adc
lods
lds
xchg
push
cmp
aas
dec
cmpsb
in
dec
cmp
add
cmpsb
lods
ljmp
push
daa
pop
stos
outsl
addr16
jmp
fbstp
mov
gs
mov
mov
clc
sbb
test
and
mov
sub
aaa
ss
adc
xor
cmpsl
repnz
ja
mov
cmp
stc
pop
int3
sbb
mov
es
xor
mov
add
jle
jg
jecxz
push
loope
repnz
or
add
lret
adcb
pop
xchg
xchg
or
cltd
fstpt
inc
mov
push
fidivl
jne
push
stc
or
or
inc
sub
inc
mov
fwait
dec
or
pop
fistps
aam
je
adc
cmpl
dec
in
rorb
dec
lds
xchg
in
cmp
lahf
mov
jecxz
xor
push
cmpsb
xor
dec
mov
cmpb
rclb
insl
lods
mov
jne
lret
push
cld
dec
rcrb
mov
test
xorl
or
mov
and
sti
push
jecxz
out
es
xchg
add
jbe
and
fisttpl
shr
xchg
jmp
ss
mov
lock
inc
pop
cs
scas
daa
dec
out
sub
xor
sar
cmp
mov
test
jo
loope
push
icebp
movsl
or
or
pushf
cmp
cmp
test
dec
arpl
sbb
les
imul
pop
push
pop
and
push
cwtl
inc
test
in
jo
jb
out
das
sub
mov
cld
lods
movb
pop
clc
pop
push
sbb
sbb
pushl
mov
add
mov
push
mov
push
loope
test
mov
movsl
adc
pop
sbb
bound
mov
inc
mov
cmpsb
scas
pop
mov
mov
cltd
in
lahf
cmc
mov
adc
jo
xchg
mov
or
cmpsl
pusha
out
cmp
lods
add
fimuls
out
jno
test
lea
xchg
push
ret
adc
sbb
add
mov
jns
lahf
add
and
out
pop
pusha
in
int
add
or
pusha
pop
and
dec
loope
cmpsb
or
enter
repnz
pop
jg
aaa
sbb
push
mov
and
mov
mov
icebp
add
pushf
cld
js
or
aas
xor
cmc
adc
dec
ficomps
aad
sub
adc
ja
fisttpl
pop
js
mov
push
xor
imul
push
mov
or
mov
inc
mov
pop
mov
xchg
push
push
nop
or
push
cmp
inc
mov
add
test
jmp
shll
arpl
pop
es
jge
notb
das
xchg
sub
test
adc
xchg
sti
jl
sub
iret
jge
sbbl
inc
pusha
sahf
push
mov
lods
mov
and
mov
mov
push
int3
dec
mov
std
inc
sub
cmpsb
push
lret
push
mov
ds
repz
sbb
jnp
scas
push
xchg
fsts
das
iret
loopne
add
arpl
jb
adc
mov
das
popf
movsl
jle
imul
dec
dec
jmp
sbb
clc
or
in
cmp
fs
sbb
jae
es
rsm
dec
mov
xchg
xor
nop
inc
jb
jne
pop
stos
dec
icebp
jae,pt
sbb
mov
std
rol
pop
xchg
push
out
scas
xchg
lods
xchg
push
lea
sub
and
jp
cmp
out
std
cmpsl
lock
pusha
imull
dec
xchg
scas
mov
inc
xchg
sbb
sub
mov
outsb
pop
gs
imul
and
pop
in
sti
imul
test
sbb
xor
mov
popa
enter
jnp
fnsave
sub
mov
mov
push
sub
mov
sub
or
out
inc
mov
pop
mov
jg
mov
stos
test
and
repnz
mov
in
bnd
mov
sub
xchg
push
dec
or
iret
add
jbe
mov
inc
pop
push
cmc
adc
stos
test
push
in
mov
mov
or
sbb
cs
or
add
fldt
sbb
xor
mov
dec
lret
test
repz
mov
mov
fsubs
cwtl
adc
jmp
fnstenv
or
cmpsl
aad
icebp
das
mov
sbb
not
ja
xchg
add
pop
rcrl
test
mov
mov
add
nop
xor
test
cmp
xchg
xor
movsb
push
fidivs
jl
mov
or
fnsave
inc
inc
mov
jno
cmp
test
pop
push
or
xor
stc
hlt
sbb
mov
jbe
xchg
test
into
add
add
mov
hlt
stos
jle
out
scas
pop
xchg
dec
js
in
push
pop
sub
repz
test
sbb
into
jle
in
jns
cmp
faddl
movsl
ret
sub
dec
pop
out
jmp
and
addr16
loopne
pop
jp
mov
and
mov
xchg
cld
lea
adc
es
sbb
test
push
jbe
loop
sbbb
sahf
mov
pop
cmpsl
aaa
jb
popa
jl
inc
push
and
pop
adcb
not
imul
insl
push
cmc
or
outsl
out
xchg
inc
cmc
fadds
jp
push
jecxz
pushf
sbb
jmp
mov
xor
cmp
xchg
add
ds
push
fnstenv
xchg
test
and
ja
cli
test
cmpsl
adc
mull
mov
out
aad
push
dec
cli
push
mov
test
mov
mov
repnz
sti
mov
fnsave
mov
hlt
push
cmpsl
push
mov
shlb
inc
cli
mov
ret
rorb
test
rcl
mov
and
popa
mov
stc
add
test
repz
test
adc
cmp
int3
mov
insb
pop
fwait
rcrl
jge
mov
push
rcll
or
push
pop
out
push
lock
xlat
loopne
push
mov
bound
fidivrs
jns
mov
mov
jo
push
repz
mov
cli
jnp
push
or
fisttps
cmpsb
loopne
icebp
mov
test
jl
mov
dec
call
push
mov
pusha
xlat
sub
orb
jecxz
push
ss
xchg
std
movsb
popa
dec
and
jge
mov
call
das
popa
aas
dec
dec
popa
sbb
xchg
jbe
outsl
repz
push
mov
and
in
pop
push
inc
cltd
sar
lods
xor
mov
mov
inc
cmpsb
out
sub
pop
les
pop
imul
jns
jmp
mov
and
push
mov
flds
inc
sbb
sub
aas
jae
jle
pop
in
jae
push
jo
jmp
and
mov
push
sti
fimuls
push
pop
ficomps
je
push
pop
jp
sub
lahf
shrb
outsl
mov
cld
or
jp
mov
hlt
shl
mov
daa
sbbl
aas
pop
pop
sahf
repnz
out
aad
mov
push
aad
daa
imul
ljmp
inc
lret
rcrb
popa
mov
jb
ljmp
movsl
push
mov
pushf
pop
addr16
sbb
mov
sub
cmp
loop
ror
mov
loop
xchg
adc
out
test
xchg
inc
mov
es
adc
js
lret
sbb
les
fistpll
ljmp
stos
cld
dec
mov
scas
out
lahf
xor
jae
jae
inc
rcll
or
cmp
pop
jne
movsl
bound
vlddqu
scas
cli
pop
xchg
data16
fcoml
in
pop
lret
inc
sub
shll
out
lods
jnp
arpl
add
lcall
adc
pushf
repz
dec
icebp
mov
sbb
xchg
lahf
jne
xor
in
adcl
int3
mov
push
push
push
mov
outsl
sub
and
jno
test
and
fldl
in
dec
je
adc
ja
out
cltd
mov
hlt
addr16
mov
dec
sbb
xor
lods
out
jno
scas
jo
cmpsb
pop
push
fsubrs
sbb
cmp
and
add
aam
cs
daa
jno
test
aad
dec
jmp
enter
push
sub
fwait
idivl
shl
lds
add
sbb
mov
addr16
sub
inc
stos
outsb
div
loop
jmp
es
call
int
add
fildl
movl
cwtl
push
clc
std
xchg
orl
in
pop
loop
insb
in
push
sbb
jecxz
dec
adc
add
loop
scas
arpl
dec
mov
mov
adc
cmp
fwait
ja
pushf
sub
pop
add
add
inc
js
xor
cmpsb
outsl
aad
jne
xchg
sbb
icebp
xchg
inc
jmp
mov
loop
push
rorb
inc
inc
pop
pusha
mov
jo
test
push
cmp
clc
adc
adc
mov
lock
mov
mov
sbb
add
gs
xchg
sbb
sti
xchg
jno
lret
sub
out
cwtl
hlt
hlt
mov
pop
imul
push
stos
mov
xchg
sbb
scas
or
test
mov
sub
or
lods
jl
push
movsl
out
aam
dec
xor
adc
and
pop
pusha
xchg
test
or
xlat
rclb
negb
jp
insl
test
push
insl
mov
inc
inc
jge
xor
test
inc
icebp
dec
stos
jnp,pn
stos
jp
notb
into
adc
cmp
test
inc
insb
imul
ljmp
xchg
int3
xchg
clc
int
jl
leave
cmp
pop
xor
inc
out
pusha
scas
out
popa
nop
scas
data16
jl
loope
sub
daa
push
addr16
dec
jle
push
loope
testl
or
hlt
mov
xor
push
dec
or
fsub
push
xor
or
mov
shrl
insb
sub
fcoms
mov
repnz
add
sbb
mov
aaa
push
mov
lods
nop
in
aas
out
xchg
fdivl
dec
fdiv
cmpsb
mov
pop
and
cli
cmp
sqrtps
bound
push
dec
cmpb
inc
inc
dec
dec
dec
ds
fwait
cmp
mov
clc
scas
push
sbbb
xchg
ja
jns
repz
cmpxchg
in
xor
xchg
imul
mov
pop
data16
adc
add
fwait
inc
imul
in
jne
mov
lods
repz
sbb
or
lea
cmp
cmc
mov
pop
inc
push
lods
mull
push
stos
pop
pop
push
mov
xchg
out
or
dec
push
sub
in
insl
lds
adc
leave
mov
inc
push
xchg
mov
or
lods
xchg
jbe
jbe
pop
xor
adc
push
inc
mov
add
jge
aad
outsb
jno
mov
cmpsl
push
xchg
enter
pop
popf
add
push
into
ret
cmp
jne
push
ss
sub
add
call
sbb
pop
shll
mov
mov
sbb
aam
in
pop
xor
cmp
lods
pop
adc
cmp
jnp
or
mov
in
into
addr16
in
mov
int
jle
push
mov
jno
inc
push
imul
mov
int
rcrb
xchg
ds
sbb
or
dec
mov
xchg
jo
mov
mov
fsubl
data16
les
push
iret
das
dec
inc
push
shl
sub
pop
sbb
arpl
pop
popf
loope
lea
ret
rolb
cmpsl
jae
decb
jo
lods
mov
idiv
sbb
shrb
loop
es
test
mov
dec
sahf
cwtl
dec
mov
cltd
pop
cmp
mov
or
pop
cmp
mov
push
push
jmp
popa
ds
jae
dec
fisubrl
rclb
subb
fidivrl
int
xchg
jg
push
jecxz
xor
and
jns
mov
mov
or
std
in
xor
ss
shrl
push
js
incb
xor
xchg
mov
inc
js
jbe
inc
mov
mov
cwtl
and
xchg
fidivrs
dec
ljmp
cmp
sub
mov
roll
ds
imul
push
faddl
push
sub
out
sbb
es
aam
pushf
dec
cli
adc
xor
xchg
pop
in
pop
daa
dec
das
hlt
sbb
test
imul
push
into
imull
popf
mov
mov
adc
ret
add
or
mov
push
cmp
dec
mov
stos
hlt
cmp
mov
push
push
fs
inc
daa
xor
out
xor
pavgb
popa
icebp
jecxz
scas
shlb
lret
aam
mov
inc
or
shll
gs
sbb
and
clc
fmulp
inc
cmpl
jns
mov
sub
sarl
and
xchg
cmp
push
mov
jne
xchg
mov
cmp
out
sub
mov
pop
dec
mov
pop
jnp
test
mov
scas
cmp
or
or
push
jae
and
mov
arpl
sub
rorl
shrb
leave
push
mov
xlat
nop
sub
and
push
fdiv
stos
dec
inc
jl
dec
pop
mov
push
mov
jp
incb
hlt
and
cmpsl
cmpsl
pop
test
and
sub
xor
xor
mov
lret
enter
xor
fadd
cmpsl
jno
jg
movsb
push
enter
sub
dec
rcrb
int
jecxz
cmp
jle
cmp
or
pusha
cwtl
rorl
ficompl
mov
adc
arpl
xchg
sbb
addr16
lock
mov
mov
sbb
lcall
mov
inc
jecxz
ds
xchg
int3
mov
daa
xor
clc
aam
mov
add
lods
cwtl
push
sub
les
inc
push
inc
loopne
mov
mov
add
gs
ret
data16
mov
cmp
xchg
lea
int3
cmp
shll
xchg
sub
push
notl
sub
lahf
adcl
arpl
or
mov
xchg
xchg
inc
jno
mov
cmp
push
push
iret
fildl
xor
pop
sbb
inc
aam
shlb
dec
loop
movsb
sbb
fwait
movsb
mov
int
fbstp
jmp
mov
gs
cld
add
jnp
inc
and
fucomi
push
push
adc
cmc
loope
pushf
xchg
les
jno
jae
rcrl
imul
out
mov
sbb
mov
ret
dec
fmul
push
sub
jo
insl
jne
mov
xlat
cld
xor
xor
mov
mov
test
cmp
xchg
inc
dec
les
sub
inc
xor
mov
sbb
cmp
ret
add
stos
mov
jns
lods
push
pop
jnp
or
cmpsl
subb
xchg
push
add
js
outsb
mov
cli
cmpsb
es
push
xchg
or
lods
lods
mov
into
roll
sarl
idivb
std
pop
scas
stos
push
lods
mov
enter
ret
mov
xor
dec
mov
adc
test
xchg
fwait
sarb
push
mov
jno
or
in
repnz
test
test
in
fldenv
test
sbb
jmp
pushf
test
ret
leave
dec
fistps
push
mov
sbb
push
mov
sub
adc
push
lret
cmp
lcall
cmp
push
jae
mov
xor
dec
jbe
pop
or
push
into
aam
inc
add
pop
inc
mov
push
scas
xlat
add
imul
gs
push
mov
ret
shrb
and
mov
je
nopl
scas
and
lcall
adc
mov
push
fmull
lret
sub
inc
jle
in
and
scas
movsb
jns
xchg
mov
jae
cwtl
insl
mov
xchg
pop
xor
xchg
fsubs
sbb
cld
mov
xchg
dec
imul
in
repz
push
imul
ret
pusha
and
xor
cltd
push
rclb
xor
mov
mov
push
cmp
imul
imul
ljmp
rolb
icebp
sti
adc
cmp
ficompl
adc
imul
fcmovnb
out
jne
fs
jno
xchg
movsb
xchg
sarb
push
pushf
mov
arpl
and
int3
sti
and
rcl
hlt
adc
mov
mov
xchg
insl
outsl
pop
sbb
xchg
shlb
out
mov
jo
dec
arpl
mov
aas
outsb
lods
mov
arpl
and
cwtl
data16
cmp
outsl
fcmove
xchg
adc
pop
sub
in
ss
push
test
cmc
subl
mov
bound
inc
jle
lret
or
jg
test
sbb
in
jecxz
or
dec
fisttpl
fistps
pop
push
jnp
mov
fnstenv
movsl
push
push
jo
jbe
sub
mov
mov
jp
adc
scas
add
pop
xlat
pop
adc
inc
jecxz
pop
pop
bound
fcoml
test
lret
cwtl
nop
popf
in
pop
data16
ss
or
insb
jmp
mov
sti
loop
xchg
push
cmp
and
xchg
cmp
mov
inc
inc
sub
mov
xor
leave
scas
arpl
cmp
lds
test
push
fdivl
sahf
fsubl
fwait
push
lcall
push
xorl
orl
fiaddl
and
test
adc
or
lds
out
mov
jne
pop
call
aam
mov
enter
xor
sub
pop
sub
sti
push
ss
enter
mov
cmp
insb
mov
push
mov
out
js
aaa
xchg
pop
nop
cmpsb
in
test
inc
mov
test
movsb
add
dec
push
test
ficompl
test
inc
jb
imul
aaa
mov
call
enter
ljmp
insb
gs
cmpsl
mov
arpl
inc
loop
inc
jo
cs
shrl
mov
ret
lods
out
test
and
jp
in
or
pop
mov
fdivrl
push
sbb
rorl
xor
cs
cmpsl
jbe
in
lock
adc
mov
pop
and
jb
test
dec
hlt
das
subl
call
pop
mov
mov
mov
push
repnz
fstl
jnp
call
inc
mov
cmp
insl
or
xchg
outsb
jns
cltd
pop
adc
stc
cli
fisttpl
gs
fs
dec
adc
lahf
sbb
stc
ror
faddl
clc
lea
pop
imul
xor
pop
ss
adc
movsb
das
xorl
fcoms
mov
or
rcrb
mov
les
cli
mov
or
mov
xchg
clc
add
jg
std
push
cltd
cmp
jle
adc
nop
js
mov
loopne
dec
lds
add
push
jecxz
mov
mov
mov
ss
cmpsl
or
arpl
adc
mov
in
pushf
dec
dec
xorb
mov
pop
lret
int3
cmpsb
and
pop
xor
push
dec
popa
jnp
xor
xchg
jge
fbstp
xchg
cld
nop
dec
push
sbb
inc
repz
cld
xor
mov
mov
in
xor
lock
mov
andb
push
js
out
pop
push
dec
sub
sub
jae
ljmp
inc
mov
mov
push
popa
xlat
lds
or
in
add
repnz
cmp
and
add
fdivrp
xor
dec
cmp
add
jg
xor
sub
stos
mov
cmp
hlt
inc
cmp
dec
and
mov
push
push
dec
mov
adc
movsl
xchg
out
mov
fimull
insl
call
xchg
mov
outsl
jne
das
adc
sbb
lods
mov
mov
jne
insb
arpl
cmp
dec
xchg
xchg
pop
cmc
arpl
adc
pop
jae
dec
movb
daa
mov
insb
mov
mov
adc
xchg
mov
pop
fnstsw
out
aam
sbb
sub
lea
movsl
add
shlb
popf
push
push
jb
xlat
jge
sbb
push
out
sub
mov
mov
insb
mov
ret
adc
test
out
cli
xor
lcall
aaa
std
stc
mov
fnsave
and
icebp
test
shll
leave
ret
pop
arpl
add
pop
cmp
mov
out
mov
jg
leave
xor
xchg
pusha
int
inc
loop
xor
or
insl
insb
mov
in
scas
mov
pop
test
add
cmp
xor
cltd
sbb
pop
imul
sub
mov
mov
hlt
fdivrs
mov
mov
fistl
xchg
aaa
test
push
pushf
loope
aas
aaa
sete
jae
mov
notb
xchg
fnstcw
cmp
xor
pushf
ds
or
cltd
cmc
inc
int3
dec
mov
sbb
out
xor
ss
inc
sub
aas
sti
mov
xchg
adc
enter
dec
mov
es
outsb
fcmovne
or
push
insl
push
jnp
pop
movsl
out
add
pop
push
addb
mov
pop
jg
clc
cmc
scas
dec
jl
outsl
xchg
jo
jge
or
loopne
push
orb
and
lret
int
es
inc
xchg
inc
xor
fwait
inc
pushf
or
aas
sub
inc
xchg
xor
mov
sbb
out
pop
sub
xchg
add
fs
data16
scas
rcrl
sub
dec
leave
push
pop
pop
rcrl
int3
xchg
lds
cmp
and
insb
mov
mov
pop
pop
lret
xor
and
pushf
cmc
cli
sub
sub
lock
ss
pushf
cmp
aad
lret
cmp
cmp
test
cld
test
adc
loope
cmp
adc
dec
and
fistl
mov
pop
dec
jb
stos
mov
pop
aas
mov
movsb
pop
push
aas
dec
fs
int
aam
jne
mov
fldcw
lods
push
loopne
sbb
inc
inc
hlt
push
or
lds
sub
jns
das
and
aas
xor
lods
jne
xor
ffreep
jge
loopne
iret
clc
stc
int3
in
enter
mov
bound
nop
aad
mov
pushf
inc
xchg
movsb
mov
or
mov
adc
rolb
mov
lds
cltd
pusha
lret
cmc
shrb
cmpsl
xchg
jl
pop
push
fwait
dec
insb
ficomps
call
mul
jge
and
xlat
js
imul
out
or
xchg
mov
sbb
pop
add
lea
insl
mov
data16
cmp
movsb
in
je
shlb
cmpsb
repz
jl
cwtl
cmp
test
dec
mov
adc
mov
push
fsubr
mov
mov
add
sti
sub
insl
icebp
idiv
mov
jno
mov
push
sub
cmp
aad
fwait
mov
stos
xchg
lahf
hlt
push
mov
sub
arpl
jo
out
mov
add
mov
mov
mov
fnstcw
pop
icebp
sbb
hlt
mov
ficompl
out
jecxz
pop
stos
add
jl
fildl
inc
movsb
push
add
fildll
inc
add
add
dec
xchg
enter
lea
sbb
ret
push
cltd
lds
outsl
shl
test
inc
lcall
pop
sbb
addr16
mov
mov
stc
jmpw
pop
aad
add
fbstp
pushf
sbb
cmp
daa
call
pusha
add
rolb
push
or
lahf
mov
xor
aaa
pop
in
adc
add
pushf
cmp
enter
sbb
lods
and
jg
xchg
rorl
push
mov
xchg
mov
pop
repz
cmc
cmp
mov
xor
arpl
pop
inc
cli
push
mov
ljmp
fwait
sbb
inc
bound
push
sub
lret
push
jg
dec
mov
dec
adc
das
add
xchg
andb
lahf
add
out
and
jae
nop
xor
sbb
fwait
cltd
mov
adc
cmp
dec
pop
push
fs
jae
sahf
pushf
aam
adc
xlat
es
dec
enter
push
sub
pop
mov
in
push
daa
loopne
aam
and
sbb
push
loopne
add
in
mov
add
jg
insb
andb
lea
inc
pop
lret
and
je
stc
insb
movsb
push
aam
aad
and
xor
outsl
mov
xchg
lods
es
mov
int
dec
clc
mov
in
jecxz
cmp
add
stc
cmp
pop
ja
pop
movsl
xchg
mov
inc
cmp
jecxz
add
fsubrs
outsb
jae
push
and
mov
sub
dec
loopne
mov
push
pop
fwait
lcall
xor
int3
pop
mov
and
std
aam
imul
icebp
jp
mov
pop
imul
sbb
inc
sub
cmp
mov
bound
jmp
mov
lods
xchg
aaa
loop
cmp
dec
fildl
mov
cli
mov
dec
stc
xor
mov
dec
pop
mov
xchg
or
out
xor
push
lock
pop
imul
fcomps
jmp
cli
xlat
sub
sbb
cltd
lahf
outsl
dec
mov
mov
mov
insl
dec
outsl
or
push
jecxz
jnp
push
clc
mov
xchg
ret
decl
gs
pop
xchg
out
repz
outsb
mov
xlat
mov
sti
or
mov
pop
sarb
insl
pushf
and
test
push
pop
movsb
jmp
out
jae
push
pushf
mov
mov
imul
and
mov
sti
cmpsl
cwtl
iret
popa
mov
aad
in
lds
fstpt
idivl
mov
add
ds
cs
xor
cmp
stc
push
test
inc
sahf
imul
lcall
jb
hlt
lret
ja
js
mov
fs
add
dec
cmpsl
aam
and
mov
inc
inc
jg
insl
dec
in
insl
jb
adc
mov
push
inc
sub
jno
fiaddl
mov
frstor
pop
mov
inc
pop
lock
test
adc
mov
inc
mov
hlt
xchg
inc
aam
push
mov
js
mov
adc
jle
pop
xor
cli
data16
pop
testb
aas
push
pop
xlat
pop
flds
add
mov
leave
arpl
cmpl
jmp
push
mov
sub
roll
pop
add
test
shll
std
sbb
and
std
push
push
xor
and
stos
int3
sbb
mov
push
push
lea
mov
inc
jg
outsb
sahf
shll
jae
loop
std
inc
jmp
stc
xor
test
mov
aaa
sbb
insb
and
or
push
mov
nop
cwtl
mov
outsb
shr
leave
xor
pop
stc
in
mov
cmc
push
imul
sub
mov
mov
mov
xor
mov
push
jecxz
gs
in
xchg
sbb
sbb
loop
jmp
mov
lcall
inc
inc
xchg
sbb
jmp
add
push
add
jp
es
mov
mov
pushf
xor
sbb
loop
mov
inc
fisttpl
call
fiaddl
mov
dec
mov
xor
rcll
dec
pop
pop
or
push
hlt
in
push
pop
popf
jge
inc
into
adc
scas
jo
mov
mov
and
in
dec
aas
add
mov
sub
xor
pop
jno
aad
fldenv
pop
sub
bnd
outsb
cmp
mov
cmp
popa
dec
adc
cmc
pop
test
push
in
jns
inc
cmp
std
sub
jb
xor
scas
pop
ja
aas
mov
dec
dec
jno
aas
mov
and
int
jo
test
cwtl
lock
inc
or
lods
int
lods
inc
loope
dec
cmp
jnp
and
cmc
iret
ret
push
ret
testl
outsl
mov
call
and
aam
push
gs
jns
add
movsl
es
jns
inc
loopne
mov
jg
into
mov
xchg
sbb
cld
mov
cltd
mov
pop
shlb
into
out
lods
mov
les
sbb
jg
add
adc
fst
adc
lret
pop
add
adc
or
lods
lea
movsl
in
cmc
add
testb
dec
fcmovb
hlt
outsb
inc
int
sub
mov
les
sbb
xorb
or
mov
inc
mov
push
sub
adc
mov
pop
lret
xchg
xchg
add
jb
inc
enter
jmp
shlb
push
shlb
js
rclb
adc
mov
jb
sub
fdivl
push
mov
inc
inc
or
es
fs
or
push
mov
outsl
cwtl
addr16
push
adc
jne
or
or
jns
xchg
pop
cmp
push
push
xchg
fcomp
mov
sub
mov
popf
or
xor
das
sar
pop
int
push
int3
das
daa
jp
xchg
xchg
ret
jne
push
ret
xchg
aam
inc
aaa
out
call
jmp
fwait
xor
incl
test
add
std
mov
es
push
push
inc
push
sbbb
insl
ljmp
fstpt
and
scas
jge
push
sbb
pushf
adc
inc
and
push
test
scas
gs
xor
int
jae
mov
movsl
cmp
mov
dec
dec
pop
test
or
lods
xor
pop
pop
and
pop
mov
xlat
jle
inc
jnp
mov
mov
or
sub
pop
fcomps
mov
and
cmp
out
bound
ficoml
mov
inc
push
mov
test
dec
mov
jecxz
testl
fldenv
test
xchg
mov
hlt
mov
scas
mov
cltd
out
es
mov
cmp
and
insl
fcomps
pop
es
jo
ds
lret
jge
ds
push
dec
out
stc
aad
cmp
ljmp
or
xchg
outsl
ficomps
ja
pop
adc
es
and
into
iret
pop
les
insb
or
push
clc
sub
test
sub
fdivrs
mov
sbb
mov
mov
std
mov
mov
arpl
repz
shrl
jno
pop
xchg
sbb
mov
pop
jno
int
int3
and
adc
xor
or
insl
inc
aam
push
xchg
push
xchg
scas
and
pop
jle
in
data16
bound
imul
outsb
int3
nop
movsb
inc
sahf
jecxz
push
sub
dec
mov
es
xor
daa
dec
push
push
cwtl
mov
repnz
nop
add
pop
sub
pop
or
pop
push
jno
xchg
pop
das
ss
xchg
mov
sbb
arpl
shll
mov
cmp
dec
test
dec
dec
or
pop
cmp
fisttpll
inc
hlt
jnp
movsb
shrl
std
rorl
hlt
lods
xlat
mov
sbb
rol
leave
push
adc
aam
jno
jbe
fsubrp
cld
cmp
out
inc
test
pop
jnp
push
sti
jnp
lret
repz
bound
imul
bound
call
loope
xor
adc
jmp
ret
or
lcall
and
pop
clc
and
add
aam
scas
mov
into
xchg
jbe
mov
inc
mov
jbe
leave
leave
aaa
jb
shl
mov
cwtl
roll
sub
push
loopne
int3
aaa
mov
xchg
mov
xchg
imul
jae
dec
ficoml
sub
mov
mov
cmp
xchg
inc
xchg
xchg
cld
mov
gs
cmpsl
inc
mov
add
push
add
push
out
or
movsb
dec
xchg
adc
pop
mov
iret
inc
xchg
lahf
sub
jbe
std
shlb
adcl
mov
jbe
punpcklwd
or
xor
dec
or
mov
jnp
test
xchg
pop
xchg
mov
shll
jecxz
push
mov
cmc
mov
std
jg
dec
imul
mov
jl
incb
pop
and
es
int
xor
sub
dec
or
dec
addr16
ret
cltd
aad
sub
shll
jmp
fidivs
or
mov
aam
xchg
sub
xchg
mov
adc
stc
leave
sub
fidivrl
das
or
mov
xor
jp
aam
aad
inc
pop
or
sub
aam
xchg
lods
push
add
ret
pop
std
or
lea
out
and
lods
sbb
pop
push
xor
hlt
pop
filds
lcall
sbb
sub
xor
ret
in
jmp
ret
leave
inc
mov
dec
xor
outsb
add
popf
xor
mov
ss
inc
rorb
mov
push
rcrb
mov
xchg
xchg
cli
nop
shll
mov
mov
or
dec
cmp
stos
test
lock
in
in
rcpps
mov
subl
pop
out
loop
sti
jge
add
push
nop
lea
sbb
enter
jl
mov
cwtl
or
inc
mov
or
iret
ljmp
lods
xchg
fmuls
ljmp
mov
add
loop
inc
push
mov
fisubrl
inc
adc
sub
sub
pop
and
sahf
insb
mov
out
dec
in
xchg
adc
lds
sbb
ret
push
dec
dec
mov
and
inc
dec
jns
add
cmp
pusha
sbb
repz
mov
faddl
sub
mov
cld
or
lds
mov
inc
mov
filds
inc
dec
mov
cmp
xchg
sahf
sbbb
out
mov
and
dec
and
push
fs
ficoml
addr16
movsl
lods
xor
pop
movsl
cmp
aas
clc
sarb
push
xchg
gs
pop
xor
stos
jl
dec
mov
shll
mov
int
pushf
fldcw
sub
push
sbb
enter
pushf
ret
jmp
fsubrl
xor
push
lret
lea
inc
in
dec
mov
push
rclb
pop
adc
cmpsb
xchg
add
pop
pop
xor
enter
cmp
cmpsb
mov
and
in
jecxz
push
imul
inc
and
imul
and
leave
fisubrl
arpl
xchg
divps
mov
sub
test
ret
sbb
cmpsl
adc
es
sub
mov
push
test
xchg
int
or
pop
jmp
sbb
adc
xchg
push
daa
add
pop
push
dec
adc
xor
push
movsb
out
rcrb
cltd
jne
enter
imul
or
xor
movsb
mov
push
mov
jo
int3
pusha
push
xor
push
jmp
or
xchg
dec
dec
mov
sbb
push
je
negb
mov
and
shrb
mov
bound
push
mov
mov
mov
mov
lds
xlat
aam
ja
sbb
lret
xchg
loope
fs
dec
sbb
add
push
or
mov
in
scas
add
movntq
add
xchg
lea
jg
sub
rcr
mov
mov
sub
test
mov
jb
and
insl
mov
stos
scas
test
cmpsl
or
xor
mov
lods
cmovl
lahf
pushf
jns
sahf
adc
push
popa
sub
in
or
stc
push
mov
mov
jo
mov
mov
mov
xor
jns
in
jns
outsl
cwtl
dec
adc
lock
jmp
fsubr
xchg
add
jmp
rorl
pop
cmp
jmp
insl
ss
xorl
enter
leave
dec
jecxz
xchg
pusha
out
xor
cmc
fadds
sbb
lahf
repz
cs
dec
jecxz
int
popf
das
mov
mov
mov
xchg
movsb
mov
cmpsl
cmpb
lea
test
mov
test
push
into
cmpsl
cmp
jns
mov
xchg
cmp
push
xor
and
sbb
xor
jbe
xor
outsb
xchg
jae
cld
stos
fnstcw
test
stc
imul
cmpl
lret
mov
lds
shrb
ja
pop
movsl
lea
das
imul
int
dec
sub
or
imul
das
jp
mov
mov
int
mov
insb
ja
sbb
or
or
das
mov
xor
stc
and
xor
push
jnp
mov
int
jb
ja
std
and
push
add
pop
mov
in
ffree
mov
adc
xorb
fwait
data16
sarb
lea
and
sub
inc
sbb
xchg
xchg
jno
cmp
cmc
lea
mov
inc
pop
cmp
dec
push
dec
cmp
xor
fcmovnbe
xor
or
leave
insl
pop
sub
push
sbb
call
outsl
pop
mov
xor
push
rep
andb
and
int
pop
sub
pop
lds
jp
inc
lret
popa
in
ds
xchg
adc
xor
inc
scas
inc
adc
call
or
xchg
stc
das
not
sub
inc
inc
lods
mov
xchg
shrl
lock
iret
sbb
aad
sti
scas
hlt
int3
lds
cmc
or
and
leave
push
push
cmp
out
adc
pop
hlt
add
xor
jae
sbb
cmp
fsts
lcall
cmp
adc
insb
pop
inc
pop
aam
sbb
hlt
xor
push
fcmove
and
lret
fs
test
sbb
or
sub
aas
mov
dec
bound
push
mov
cmp
add
inc
push
inc
dec
jo
clc
mov
mov
jge
inc
ficoms
testb
lcall
push
addl
xor
or
aam
mov
adc
movsl
mov
rcrb
mov
mov
test
xchg
mov
mov
aam
pop
enter
sbb
les
cmp
int3
lret
dec
mov
arpl
xchg
hlt
in
xchg
pop
mov
jo
call
inc
xor
push
push
push
and
sbb
push
pushf
pop
nop
dec
pop
inc
jg
movsl
xchg
push
cs
sbb
dec
jo
out
inc
jae
mov
loop
ret
cmpl
out
sbb
pop
sub
mov
push
cmp
fadds
sub
stos
or
xchg
sub
and
and
mov
lcall
mov
pop
jp
ror
pop
pop
aad
out
cmp
std
jae
cmpsb
adc
cltd
data16
jg
ret
outsl
mov
repz
test
xor
gs
jge
jno
fbld
stos
and
push
mov
push
les
mov
sub
push
inc
mov
sub
pop
aam
pop
lods
xor
lea
lret
mov
in
dec
mov
sub
lods
bound
fucomi
mov
push
cmc
push
scas
or
xor
jns
cmp
rcrl
cmp
and
dec
push
movsl
xor
out
mov
xor
je
push
xor
adc
dec
cmp
je
xchg
pop
out
scas
or
dec
inc
push
add
gs
sub
pop
leave
jl
shr
fldt
shl
shlw
xor
sti
mov
mov
or
cmc
daa
pop
lods
and
dec
fbld
loopne
sbb
and
shll
sbb
cli
ret
mulb
notb
insl
rorl
push
adc
jne
pop
and
add
jns
fidivrl
sub
or
lds
add
leave
cmpsb
decb
lret
pop
mov
cmp
add
mov
lret
ret
mov
dec
xorl
inc
insl
dec
int
jnp
js
inc
test
lahf
adc
test
xchg
inc
dec
adc
in
pop
or
js
icebp
xor
daa
lcall
aaa
jae
cmpsl
scas
cmp
push
mov
subb
mov
out
outsb
or
cltd
lret
add
cs
jg
add
aad
test
lret
mov
cmpsl
mov
mov
mov
xor
imul
xor
int
sub
pop
jg
clc
xchg
inc
add
push
hlt
in
sub
hlt
pop
cli
in
and
int3
xchg
sub
cs
cwtl
in
leave
mov
xchg
orps
sti
pushf
loop
push
outsl
add
pop
js
cmp
and
mov
in
push
aad
sbb
pop
mov
adcl
dec
dec
and
scas
fiadds
mov
dec
inc
nop
xchg
mov
add
ss
pop
shrb
popf
jp
add
sub
div
fcmovne
pop
scas
aas
pop
mov
xchg
mov
mov
loope
jmp
movsb
fisubrl
jno
cmp
fcmovnb
addr16
inc
add
fnstenv
push
fbld
repz
jl
inc
adc
mov
sbb
add
je
aas
repz
push
jns
adc
pop
or
push
mov
leave
ds
and
adc
mov
fbld
ret
fcompl
cmpl
sbb
push
enter
xor
pushf
scas
repnz
push
mov
cltd
adc
in
insl
fcompl
orl
lock
cwtl
push
fnstenv
pop
mov
and
roll
repnz
add
sbb
xor
xlat
inc
adc
andl
cmc
shl
call
scas
aas
dec
out
jmp
pop
mov
pop
mov
icebp
dec
sahf
mov
mov
inc
dec
jg
pop
lret
fbld
in
fisubrl
cmp
push
lock
add
xchg
outsb
add
fcompl
insl
mov
cmp
lcall
and
sbb
dec
sub
insb
sbb
popa
inc
jb
xchg
rclb
mov
notl
loop
push
add
mov
adc
sahf
bound
mov
lahf
orl
push
mov
or
lea
mov
jno
mov
add
stos
xor
mov
xchg
in
pop
rorb
aam
ficomps
and
mov
jo
scas
ja
inc
jp
test
pop
int3
jbe
push
int3
lea
loopne
sbb
push
jg
mov
enter
mov
xchg
add
outsl
and
xor
sbb
jmp
arpl
std
stos
lock
lret
jnp
add
pop
pop
dec
xchg
inc
imul
adc
pop
push
pop
shl
mov
hlt
popf
and
sub
test
dec
popa
inc
mov
aas
je
dec
out
sub
push
stos
pop
adc
cmpl
add
mov
mov
jo
and
cli
fcmovbe
in
ja
mov
sbb
dec
sbb
cld
cmpsl
xorb
aaa
xchg
cmp
out
dec
pop
nop
sbb
push
ret
movsb
sub
xchg
notb
add
clc
adc
int
inc
mov
jle
xor
xchg
ror
std
ja
jbe
aad
into
sbb
mov
int3
pop
jb
js
or
rolb
mov
js
rcrb
xor
ds
jp
add
loop
out
pop
test
stos
test
outsl
pop
cli
popa
into
fwait
adc
mov
out
xchg
pop
or
mov
enter
into
inc
push
in
fcomip
loope
add
data16
ja
jnp
sub
cltd
cs
sub
icebp
loope
pop
sub
jae
mov
insl
movsb
xchg
in
xor
adc
cmp
loopne
fwait
cwtl
adc
pop
pusha
cmp
xor
das
sub
or
roll
and
add
insl
xchg
dec
in
sbb
jp
mov
rep
mov
popa
outsl
mov
sub
sub
jbe
loopne
or
je
push
mov
aaa
fsubrl
mov
mov
sub
imul
xchg
loopne
and
xor
xchg
insw
ja
inc
sub
pop
push
mov
mov
push
lock
push
ja
inc
sub
add
add
pop
aas
leave
xor
loope
mov
mov
pop
cmp
push
add
add
pop
or
or
leave
xchg
mov
outsb
cmc
popf
outsb
push
in
testl
and
xor
cld
pushf
xchg
pop
nop
pop
aad
lds
fimull
push
inc
cmp
inc
fwait
pop
jg
rcrb
or
lret
or
ficoml
mov
push
xchg
popf
mov
scas
inc
sub
sbb
cmp
cs
iret
call
sahf
movl
call
in
and
sbb
aam
hlt
js
movsl
xchg
pop
push
daa
sbb
inc
shll
std
call
push
mov
cli
push
cwtl
fnsave
sti
add
jno
pop
dec
ss
repnz
loope
fwait
or
mulb
add
movl
xlat
roll
popa
inc
scas
stc
movsl
stos
jne
fs
cmp
cmc
fsubr
ret
and
mov
in
iret
imul
gs
cltd
ret
lahf
adc
mov
mov
bnd
mov
xor
cs
jmp
pop
insb
add
pop
fnstcw
scas
sbb
xchg
adc
pop
mov
lods
adc
lea
add
push
insl
push
data16
and
push
ret
jno
sub
sbb
loopne
popa
pushf
or
sub
filds
mov
push
mov
push
outsb
add
cltd
jb
cwtl
outsl
xor
cmp
stos
dec
xor
paddsw
dec
pop
and
pushf
pop
outsl
jecxz
in
inc
repz
push
mov
push
rclb
pusha
adc
jb
mov
mov
cmpsb
mov
sbb
sbb
mov
icebp
pop
rol
mov
ja
push
or
insb
insl
pop
adc
inc
iret
mov
sub
clc
mov
sti
icebp
in
push
mov
jbe
ja
aam
dec
imul
cmp
adc
mov
stos
jecxz
and
pop
mov
add
jno
aas
arpl
jbe
pop
stos
faddp
jle
cmpsl
push
cltd
out
mov
adc
mov
mov
mov
push
outsl
cmp
and
and
jno
mov
imul
pop
mov
pop
or
ss
xor
push
adc
data16
inc
dec
and
out
leave
mov
adc
dec
and
aaa
in
push
lods
adcb
sbb
dec
xchg
mov
xchg
jmp
popa
mov
pushf
jle
dec
cmovno
fdivrs
xlat
jae
jmp
jg
mov
out
push
dec
repz
lods
pusha
insb
jecxz
push
ljmp
or
add
cli
xchg
mov
pop
ret
inc
and
xor
add
leave
add
je
push
daa
jp
or
xor
test
faddl
scas
test
xchg
and
inc
push
push
push
mov
pushf
in
jb
mov
rcr
jg
ret
hlt
movsl
cwtl
cmp
jae
sbb
in
push
dec
sti
mov
jp
and
add
dec
out
arpl
shlb
int
jae
mov
jg
lahf
xor
pushf
mov
pop
mov
and
mov
push
push
mov
clc
out
add
or
lods
addb
shll
mov
add
mov
pop
lcall
jb
mov
dec
adc
lcall
aad
sar
pop
inc
in
add
aas
jg
jg
adc
cs
jae
mov
add
cmpsb
add
add
iret
cmp
test
xor
xchg
pop
ljmp
xor
mov
and
repz
push
inc
stc
jg
and
arpl
scas
sub
cmp
scas
dec
inc
fiadds
sbb
test
dec
inc
sbb
pop
jecxz
dec
leave
push
icebp
addr16
sarl
rcrb
and
lock
arpl
push
jp
outsb
xor
pusha
scas
sbb
scas
jno
int
add
mov
xlat
das
hlt
popa
mov
ficoms
push
push
mov
inc
leave
mov
out
xchg
cwtl
aaa
pop
push
mov
pop
inc
cmpsl
mov
xor
jg
sbb
cmp
test
leave
xchg
aam
negl
jge
add
aad
xchg
nop
inc
js
xchg
pop
mov
jge
mov
xchg
mov
outsl
nop
mov
rsqrtps
les
lret
cvtdq2ps
stc
mov
cltd
push
test
mov
loope
mov
pop
cmpsb
and
sub
int3
push
call
cmp
mov
mov
insl
fiaddl
in
push
pop
xor
xchg
xchg
roll
out
faddl
mov
cmp
xchg
outsb
daa
mov
mov
jo
int
mov
or
jbe
and
cmpb
add
sbb
or
inc
cmp
push
add
mov
inc
add
aaa
pop
jns
sti
stc
sub
add
xchg
out
sbb
push
enter
or
ret
out
sub
je
add
mov
sub
roll
add
subl
ficompl
jl
pop
insb
push
push
pop
inc
lret
cmpsl
dec
adc
jl
je
dec
cs
push
dec
int3
shl
stos
jge
push
loopne
cmp
test
push
scas
adc
sub
sti
nop
xchg
mov
arpl
pop
and
xchg
cli
pushf
mov
push
sbb
insl
pop
xchg
jl
mov
push
in
add
and
ds
js
sub
repnz
sbb
das
inc
mov
lods
nop
cmp
push
insl
inc
ja
sub
test
inc
xorb
jg
push
aas
dec
daa
out
jne
lahf
mov
pop
xchg
adc
imul
fxch
mov
add
aam
add
mov
enter
jae
sbb
adc
fs
or
cld
sbb
xchg
pushf
jl
mulb
jae
jecxz
loop
cmc
das
fisttpl
sub
mov
mov
sbb
shr
xchg
or
sbb
adc
xchg
push
xor
and
ret
loop
cmpsl
mov
add
jnp
addb
mov
cltd
or
fiadds
dec
nop
in
jns
pop
fnstsw
mov
and
xor
adc
rcr
cmp
movsb
xor
adc
pop
fwait
ss
or
icebp
xchg
fidivl
mov
out
pusha
into
sbb
jns
lret
inc
push
lret
add
jns
lods
mov
loop
imul
jo
cli
xor
adc
adc
lret
jno
sbb
jo
pop
pusha
pop
lret
adc
push
mov
shrl
and
rep
es
xchg
push
out
iret
mov
scas
mov
stc
jb
push
loopne
sub
push
scas
aas
aaa
out
xchg
jmp
movsb
es
imul
inc
xlat
sbb
ja
or
popf
arpl
add
je
orb
sub
cmpsl
ret
xorb
push
mov
inc
push
lahf
test
cmp
jo
out
orl
mov
adc
inc
ss
jns
movl
bound
xor
mov
cltd
dec
jl
pop
aas
jnp
aas
insl
add
dec
cmp
popa
dec
xchg
mov
pop
add
push
fists
int3
mov
shlb
xor
sbb
push
jecxz
sbb
xor
in
xor
dec
cmp
cmc
push
insl
imul
cmp
mov
into
push
or
mov
cmpsb
out
xlat
mov
add
dec
add
mov
dec
add
dec
jns
sbb
dec
orb
dec
pop
mov
call
xor
sub
add
cmp
sbb
testb
adc
sbb
jb
mov
inc
push
insb
in
enter
sahf
sub
insl
dec
imull
mov
sub
cmpsb
outsb
outsb
and
mov
and
pop
mov
add
mov
stos
jg
mov
pushf
mov
push
push
gs
mov
cmpsb
test
adc
xchg
psubsw
scas
xchg
fbld
jl
fldenv
xor
mov
call
mov
inc
lock
inc
cmp
mov
add
mov
in
dec
test
inc
push
xlat
out
mov
test
loopne
data16
add
or
mov
sti
sbb
add
push
lahf
inc
dec
sahf
inc
daa
adc
lds
aam
ficomps
std
movsb
adc
cmpsl
jle
sbb
mov
ja
and
cmp
out
loope
and
add
cvtpi2ps
fs
in
xchg
nop
push
insl
aad
and
cmpsl
setnp
movsb
or
fisttpl
out
inc
arpl
mov
out
les
adc
pop
daa
add
clc
adc
aad
add
add
shrl
cwtl
sbb
xor
addr16
xor
dec
fbstp
bound
mov
push
pushf
cmp
push
test
dec
imulb
stc
add
int3
movsb
push
mov
stos
scas
hlt
mov
and
cmp
xchg
js
jo
in
mov
iret
cmp
out
or
pusha
mov
sbb
sbb
imul
pop
sbb
jecxz
mov
add
xchg
fisubrl
dec
or
fistpll
jae
insl
dec
ror
out
scas
inc
lret
in
jp
arpl
mov
xor
jecxz
cmp
jns
mov
scas
call
mov
push
cmp
adcb
stos
stos
test
cmp
cmp
bound
adc
push
adc
mov
or
in
cmc
cmp
mov
add
push
pop
scas
loope
or
pop
push
ret
pop
stos
add
lds
out
push
loopne
mov
jp
mov
iret
push
lds
orb
mov
inc
ljmp
shll
test
movsb
mov
dec
sti
jle
adc
jne
lods
pushf
pop
mov
insl
jne
push
cmpsl
lahf
sbb
add
xor
jbe
dec
xchg
cmp
pushf
jb
adc
mov
cli
out
pop
xor
stos
jno
test
push
pop
mov
in
mov
test
and
adc
xchg
sub
leave
es
loopne
xchg
gs
stc
es
ljmp
sub
bound
jecxz
mov
shll
fnstsw
nop
cli
sub
inc
pop
and
or
insb
and
mov
add
fdivs
fadd
pop
movsl
fistpl
xchg
js
stc
sub
std
mov
loop
push
imul
adc
mov
lcall
das
movb
sti
stos
cmp
xchg
cld
inc
pop
adc
xor
es
outsl
cmpsb
inc
lret
jg
fwait
ja
jbe
or
mov
xor
dec
gs
cmp
add
and
das
jne
push
je
mov
hlt
xchg
arpl
rclb
lcall
inc
and
xor
mov
xchg
adc
aam
mov
popa
xchg
sbb
xor
mov
inc
and
in
inc
push
xor
jbe
repz
adc
jle
outsl
adc
in
sbb
nop
sbb
pop
dec
sub
inc
mov
mov
mov
mov
notb
mov
rol
mov
int
inc
add
loopne
jl
aaa
iret
xchg
rorl
adc
cmp
push
fcom
jmp
push
aad
mov
fsub
std
mov
sti
pop
xchg
cltd
mov
fistps
data16
dec
fidivrs
adc
not
mov
or
inc
js
add
or
orb
ss
mov
popf
sti
iret
mov
or
pop
scas
jle
add
xchg
jne
sbb
pop
xchg
vmovsd
jge
pop
adc
jmp
pop
sub
les
in
lods
sbb
orl
arpl
mov
lds
fs
xchg
or
jg
mov
les
pushf
stc
fcmovbe
mov
sub
push
fimull
stc
stos
cmp
push
xor
push
or
xor
fadds
dec
aam
imul
sbb
push
adc
sub
cli
and
jb
push
test
mov
pop
sbbl
jno
fsubrs
inc
jge
jge
dec
sbb
and
cmpsl
mov
fsubr
push
cmpsl
and
xor
and
shlb
mov
hlt
fcmovb
xor
imul
loop
pop
shl
sbb
dec
xor
call
jb
sbb
mov
cmpl
push
inc
push
inc
jbe
mov
mov
sarb
icebp
and
out
adc
fmul
mov
sarl
fwait
mov
mov
mov
mov
pop
sub
mov
aam
push
cltd
movsb
cmp
mov
bound
das
or
movb
xchg
add
daa
jle
mov
mov
fcmovbe
data16
adc
repz
push
sbb
xchg
lea
cwtl
out
pop
dec
clc
fisubrs
jno
mov
pusha
sub
kortestw
shlb
addr16
movsb
xchg
enter
adc
inc
inc
push
arpl
repz
fdivr
mov
xchg
addr16
popl
mov
jne
test
sbb
jmp
fidivrs
cmp
test
dec
fimull
push
xlat
mov
mov
adc
xchg
mov
push
mov
push
mov
clc
push
sbb
and
push
sub
in
adc
add
mov
fidivl
cs
data16
sbb
nop
lret
enter
ss
xchg
cwtl
or
call
or
call
dec
test
ja
lret
nop
xor
lret
cmp
cmp
inc
mov
js
test
push
out
sbb
enter
mov
fbld
iret
imul
arpl
adc
xchg
rcrb
repnz
xor
fldcw
xchg
hlt
mov
ja
xor
imul
dec
mov
pop
fwait
out
pcmpeqb
jno
jne
push
pusha
stos
jno
fsts
mov
xchg
cmp
scas
xor
xchg
xchg
scas
mov
xchg
push
inc
push
adc
cmpsb
cmp
lcall
int
imul
arpl
imul
sub
ret
or
push
mov
mov
inc
mov
mov
std
cltd
cld
sahf
leave
pop
add
sahf
std
andb
movsb
add
insb
mov
push
repz
adc
mov
mov
test
leave
push
test
lret
jl
mov
out
clc
dec
out
pop
adc
pop
add
mov
popa
xchg
sbb
push
mov
xor
dec
mov
arpl
mov
dec
loop
mov
mov
lods
mov
mov
pop
nop
sbb
xchg
mov
pushf
jmp
hlt
inc
ja
js
scas
hlt
cmpl
leave
push
enter
dec
mov
movsb
xor
cmp
inc
cmp
std
mov
mov
inc
jbe
adc
popa
xchg
adc
xor
adc
pop
inc
bound
call
ret
shrb
arpl
push
fsts
data16
fistps
adc
test
xor
negb
test
pop
stos
movsb
push
sub
fnsave
pusha
inc
arpl
xlat
es
cld
or
adc
fildl
mov
or
inc
leave
jno
push
pop
inc
xlat
add
fwait
or
jmp
sub
adc
adc
jns
rol
aad
sbb
sahf
adc
daa
bound
gs
imulb
rcrl
cs
stos
pop
lcall
cmpsb
dec
or
fs
loop
out
mov
push
or
mov
enter
es
sbb
movsl
sbb
ret
sbb
aam
jbe
cmpsb
loopne
call
jmp
sti
scas
jge
in
or
ret
jle
xor
and
int
pop
es
rcl
fnstcw
ljmp
sub
mov
es
aas
gs
fsubrs
lea
dec
inc
outsb
mov
repnz
xchg
pop
aaa
fldl
scas
aad
stos
mov
filds
cld
pop
cmp
repnz
fcoml
push
pop
nop
mov
add
data16
mov
dec
push
stos
inc
mov
mov
cmp
mov
fs
adc
cld
jo
out
and
and
out
lods
ja
scas
orb
sbb
add
xor
add
jo
insl
movsb
push
xchg
out
outsl
sahf
out
jnp
xchg
stos
add
daa
idiv
add
pop
pushf
add
jo
sub
mov
and
pop
into
jmp
jp
adc
ret
xchg
addr16
mov
out
test
and
or
shl
jnp
inc
jmp
inc
pushf
mov
jno
xor
pop
cwtl
mov
sub
and
pop
jb
std
jns
dec
lods
mov
scas
fiaddl
test
dec
push
cmp
mov
outsb
xor
dec
decl
cli
leave
pop
push
outsb
dec
adc
mov
jae
cmc
jp
jne
xor
xchg
cmpsb
xor
movsl
enter
cmc
dec
add
push
cwtl
mov
pop
repz
mov
jnp
xchg
repz
test
dec
das
mov
loopne,pt
fstl
aas
cmc
stos
pop
mov
and
in
mov
fiaddl
mov
jo
push
lods
movsl
jl
jae
xor
les
fdivrs
ds
icebp
sub
sub
repz
divl
and
call
rcll
mov
les
js
cmp
repnz
movsb
sti
push
lock
cld
stos
aam
bnd
xchg
sbb
mov
scas
lods
sbb
dec
sbb
mov
fstps
pop
stos
and
cld
jl
shll
popa
sbb
aad
and
and
imul
push
mov
dec
add
or
inc
mov
je
sti
es
and
xchg
cmp
push
rcrb
lods
aam
es
push
and
sbb
or
pop
pop
popf
fdivrl
inc
imul
shll
jb
test
mov
into
popf
pop
push
xlat
out
push
subl
dec
hlt
icebp
push
adc
pop
test
lcall
mov
pop
dec
adc
leave
shrb
and
mov
inc
cmp
mov
jmp
mov
or
sbb
and
xchg
adc
sub
adc
cmp
sbb
lods
cmc
inc
sbb
ds
push
dec
in
mov
mov
add
subl
inc
pop
dec
xchg
mov
mov
dec
adc
mov
popf
iret
sbb
rcl
add
or
rcr
fnsave
adcb
inc
jg
out
push
inc
xchg
cmc
xchg
cli
fiaddl
and
sub
rcr
dec
xchg
loopne
dec
aaa
pushf
cld
fst
andl
sbb
add
cmpsl
ja
in
mov
and
mov
adc
push
in
movsl
cwtl
ja
cmp
fnstenv
cltd
sub
sub
lahf
call
mov
adc
cli
decl
aas
sahf
movsb
stos
push
mov
int
pusha
insl
loop
scas
add
sarl
add
in
dec
or
shll
outsb
mov
test
cmpsl
subl
stos
pop
pop
pop
in
push
int
fstps
sub
or
jb
dec
bound
push
js
sub
fadds
jg
jg
movsl
sub
mov
int3
mov
mov
addb
fisubrl
scas
cmc
mov
test
clc
xorb
call
in
lcall
adc
push
cmp
movb
sbb
dec
mov
cmp
fidivrs
stc
cmp
sahf
push
push
push
repnz
lods
mov
sbb
xchg
push
std
adc
aaa
pop
jle
add
sbb
imul
dec
loope
jp
mov
outsb
push
scas
pop
pop
icebp
rorl
mov
stc
pop
lods
mov
addb
aad
xchg
std
pop
pop
in
aad
mov
clc
aaa
cmp
shrl
xchg
sbb
add
mov
insb
xchg
adc
test
andl
or
into
popf
mov
jl
cmp
adc
pop
xchg
cmpsb
in
clc
leave
fisubrl
insl
fstl
jmp
orb
insb
pop
rorl
pop
mov
mov
xchg
dec
xchg
cld
push
fwait
aam
mov
ret
lods
mov
decl
into
movsb
clc
enter
mov
pop
mov
mov
jbe
movl
inc
fs
fldt
mov
sub
push
push
push
fstpl
or
lret
adc
and
mov
cmp
test
nop
cli
roll
pop
out
es
rolb
jecxz
outsb
adc
xchg
ret
jle
test
and
and
push
imul
ja
push
sbb
insb
push
stos
pop
push
mov
cmp
repnz
negl
xchg
insl
std
jmp
or
jp
iret
cmp
ret
fcmovnu
insl
das
popa
jo
inc
cltd
xor
rcrl
std
cli
ljmp
repnz
and
popf
fwait
das
data16
outsb
fistpl
jo
jo
insl
sbb
mov
and
sbb
add
scas
or
aas
push
mov
ja
sbb
inc
sbb
imul
mov
push
cmp
addr16
daa
jne
mov
mov
cmp
cmp
push
loope
push
stos
addb
mov
cli
fildl
mov
push
jmp
push
mov
fs
jo
adc
mov
add
dec
xchg
push
std
or
aad
xchg
lret
mov
les
pop
pop
scas
xchg
dec
dec
cld
stos
cmp
dec
xor
frstor
aam
fs
hlt
fcmovne
cwtl
ds
fisubrl
andl
lods
jae
add
push
and
outsl
jbe
loop
mov
aas
into
or
lods
daa
bound
jmp
fnstenv
icebp
push
adc
scas
inc
xlat
inc
aaa
dec
pop
jb
lea
jbe
dec
dec
cmp
mov
mov
aam
xchg
mov
movsl
aas
mov
xor
and
loope
sbb
mov
idivb
mov
sbb
gs
push
adc
sahf
daa
dec
pop
push
jmp
fsubrs
fcompl
jp
inc
lods
pop
or
inc
fdivrs
add
rcrl
lahf
xor
push
xchg
and
mov
sub
xchg
dec
mov
jmp
aad
loopne
test
mov
xor
adc
repnz
pusha
test
lea
aaa
mov
mov
inc
out
ljmp
fldt
add
sub
in
pop
das
mov
xchg
mov
stc
jmp
mov
imul
out
arpl
iret
and
movsl
out
fistpll
dec
in
add
inc
rcr
roll
lock
outsb
or
rcll
stos
test
inc
mov
jecxz
out
jmp
cmp
sbb
mov
cmpsb
add
std
movsl
cltd
mov
mov
mov
mov
ret
jo
sbb
ds
pop
fwait
lret
fs
jge
xchg
scas
aad
sub
push
repnz
lods
out
pop
andl
add
scas
ds
sbb
int3
and
jns
nop
mov
push
test
adc
popa
cmp
jp
cli
ljmp
lds
ficoms
inc
jne
inc
mov
lods
sbb
int3
leave
dec
std
addr16
iret
outsl
out
cmc
lret
cmp
or
data16
mov
inc
enter
push
fiaddl
cmpsb
jo
inc
ret
ret
add
cmpsl
aad
nop
stos
dec
cmc
icebp
push
fidivs
aas
dec
dec
ljmp
push
add
sarb
pop
popa
mov
adc
call
dec
sub
mov
xacquire
std
es
imul
movl
es
xchg
xchg
stos
xlat
and
xchg
popl
mov
test
sub
and
xchg
imul
test
lea
pop
inc
nop
inc
inc
and
sbb
out
stos
movsl
popf
mov
mov
jbe
call
push
rolb
push
out
push
pop
xor
ljmp
sub
mov
add
mov
mov
add
mov
inc
xor
loop
mov
ja
add
pop
addr16
push
pop
lret
cmpsb
ds
or
add
imul
mov
xchg
leave
fisttpl
mov
mov
and
stc
xlat
push
add
adc
mov
jno
sbb
jp
jae
out
sub
jb
repz
stos
xlat
mov
mov
jo
sarb
scas
sbb
mov
dec
iret
clc
xlat
ljmp
cmp
arpl
or
push
push
mov
mov
mov
xchg
ret
and
shlb
xchg
mov
dec
sub
inc
sub
push
fwait
jb
pop
sub
stos
mov
in
arpl
std
movsb
cmpsb
jecxz
clc
stc
cmp
jle
adc
popf
out
lret
gs
sub
adc
in
stos
lret
mov
dec
mov
push
push
nop
mov
clc
cmc
sub
xchg
mov
into
inc
insl
call
mov
gs
cmpl
imul
add
fs
inc
push
sbb
ja
ret
push
test
and
outsl
mov
popf
mov
ja
inc
push
stc
out
sub
sub
loope
mov
jb
adc
sub
std
jns
adc
adc
push
jne
or
xlat
lods
cmp
jb
cmp
bound
ret
xchg
lret
in
xor
leave
push
pop
aad
sbb
push
arpl
add
jecxz
out
jge
push
adc
cs
sahf
mov
mov
shll
sub
jge
add
lahf
int3
sbb
inc
xchg
dec
add
das
adc
addr16
insb
call
pop
push
xlat
test
lcall
in
and
xchg
xchg
insb
in
in
movsl
cmp
cmp
jnp
cmpsl
adc
sarb
dec
xor
pop
adc
sub
or
pop
sbb
or
faddl
dec
aam
repz
test
push
mov
xchg
push
dec
enter
push
mov
clc
inc
jle
lds
add
and
and
xor
xchg
cmp
ret
jge
jmp
enter
cmpsl
jmp
lods
mov
dec
mov
jg
cltd
pop
lods
push
rolb
pushf
scas
ljmp
fiaddl
popf
xchg
add
mov
jb
push
cltd
push
aam
push
clc
lods
adc
push
bound
inc
sub
adc
sarb
xor
rolb
sbb
dec
mov
add
cs
jo
imul
sub
cwtl
cmp
mov
mov
and
movsl
rcrl
push
mov
stos
push
or
sbb
fistpl
adc
sub
mov
pop
scas
negb
mov
xchg
pop
lret
pop
vmovapd
or
add
out
mov
out
cli
data16
inc
ud1
pop
in
insb
enter
adc
testb
pop
mov
loop
inc
mov
jl
sbb
dec
or
and
lods
xchg
or
push
mov
and
mov
mov
sub
inc
negl
out
inc
and
and
jmp
sub
imul
push
and
cmp
add
insb
add
mov
xchg
add
jnp
scas
pop
fisttps
cmpsl
mov
stos
fs
mov
push
in
outsb
pop
adc
mov
mov
sub
inc
pop
les
mov
mov
or
notl
mov
dec
loopne
ss
dec
and
and
jge
push
cltd
pop
add
cmp
fmul
cmpb
mov
pop
add
ds
test
push
mov
sub
ds
push
js
fs
xchg
xchg
aam
push
cmp
sub
adc
int3
inc
mov
push
and
add
cmp
pop
je
sub
out
dec
out
adc
mov
lock
xchg
fimull
popf
add
aam
lret
sbb
mov
pop
push
movsl
fldenv
mov
add
dec
jmp
mov
inc
pop
mov
popa
pop
fwait
clc
inc
imul
xchg
mov
ret
lods
imul
loopne
repnz
cmp
psubb
jo
pop
fwait
ja
js
mov
inc
jge
sub
push
in
movsb
xchg
push
pop
cli
jns
mov
xor
icebp
loop
imul
sbb
jne
insl
add
rorb
jmp
popa
sub
add
push
nopl
dec
jmp
mov
ror
rolb
ja
mov
bound
jmp
inc
push
mov
gs
je
in
popf
je
mov
pop
jecxz
mov
pop
push
xchg
cs
xchg
dec
cwtl
ss
loop
mov
in
cmp
shrb
test
inc
xor
cmp
push
or
repnz
call
add
std
pop
fistl
xlat
push
fildl
mov
aas
pop
fcompl
mull
test
int3
xor
rcrl
cmp
mov
out
call
mov
pop
bound
sub
mov
arpl
loop
out
mov
pop
sub
lcall
call
call
out
pop
xor
cmp
xor
outsb
loope
idiv
mov
fisubrl
xor
stos
and
sbb
mov
leave
rolb
jnp
sbb
repnz
bound
lcall
out
sub
loop
test
cmp
fwait
mov
push
test
ror
sub
pop
xchg
out
fldenv
xor
out
xlat
inc
mov
mov
adc
cmpsb
xor
pop
inc
dec
mov
xchg
mov
fwait
mov
mov
std
sbbl
mov
dec
aam
imul
xchg
int3
pop
fmull
mov
fbld
repz
xor
sub
sarb
mov
adc
jne
mov
adc
imul
pushf
inc
cmp
xchg
push
les
mov
pushf
hlt
repnz
das
in
popa
mov
xchg
jl
mov
mov
loopne
dec
outsb
add
push
sahf
or
jbe
fmuls
adc
imulb
lds
lods
mov
mov
ljmp
adc
out
repz
dec
roll
sahf
pop
mov
dec
push
inc
sbb
xchg
jge
fnstcw
popf
xor
or
outsl
or
lock
add
cmp
mov
add
gs
or
push
mov
jbe
lret
push
subb
push
out
sbb
shl
xchg
movsl
sti
lret
test
inc
push
push
or
into
or
xchg
mov
int3
aam
js
xchg
inc
in
xorb
dec
in
push
daa
js
mov
das
mov
inc
adc
sbb
loope
jle
ss
mov
sahf
dec
daa
repnz
lret
sbb
rolb
xchg
enter
mov
nop
bound
insb
mov
xor
insb
lods
xchg
into
pop
gs
push
mov
aas
jecxz
enter
adc
dec
pop
test
dec
add
sbb
jp
add
test
andl
mov
fneni(8087
call
push
pop
dec
xchg
add
leave
push
pop
testl
mov
call
sub
sub
sub
push
or
xor
xor
sub
stos
or
addl
pop
and
and
push
inc
jo
inc
push
nop
xchg
fnstsw
movsl
rol
js
sub
mov
pop
pop
add
fnsave
in
mov
dec
lahf
into
les
loop
call
stos
push
inc
insb
cmpsb
repnz
icebp
aas
mov
fisttpll
mov
sbb
add
jge
xchg
mov
cmp
jmp
jae
mov
scas
jg
insb
repz
dec
iret
or
sbb
cmp
dec
and
cmp
das
jns
or
je
and
les
inc
sub
rclb
pop
addb
pushf
out
mov
dec
xchg
insb
imul
jno
jl
push
loope
das
int
das
std
mov
ljmp
sub
nop
pusha
push
imul
cmp
ss
mov
push
push
xchg
cmp
xor
jbe
push
iret
sbb
push
add
jbe
pop
inc
add
js
mov
push
cmpsb
adc
mov
jae
cmp
out
fldl
pop
lock
mov
repz
adc
and
mov
push
ret
mov
sub
ds
inc
pop
inc
push
mov
jae
icebp
jno
pop
and
test
jmp
inc
jg
cltd
add
cltd
test
data16
in
add
es
sbb
popa
lea
int
pop
sbb
jbe
add
ja
xorl
adc
inc
sub
and
mov
and
mov
cmpl
scas
xchg
insb
add
adc
sahf
mov
mov
insl
sahf
lret
push
pop
adc
inc
rorb
jno
outsl
push
adc
in
xor
jmp
jecxz
xor
push
mov
cmc
fidivrl
lea
arpl
jne
insb
jne
xchg
bound
ja
pop
mov
sub
mov
inc
push
xchg
popa
stos
inc
jge
popf
nop
aaa
mov
mov
jbe
inc
movsb
mov
mov
sub
pop
sahf
pop
push
cmp
stos
roll
pop
sub
dec
inc
test
or
es
push
cmpsl
push
mov
xchg
hlt
stos
fdivr
jae
jle
mov
inc
bound
lock
and
cmc
inc
mov
mov
mov
roll
dec
adc
push
pop
clc
xor
cmpsb
pushf
je
pop
cmp
push
mov
sti
sbb
ficoms
scas
fs
mov
cmc
aaa
insl
inc
rcrl
cld
mov
loopne
iret
and
inc
sbbl
insb
mov
xchg
and
movsb
pusha
lcall
cmpsb
dec
arpl
mov
xor
rcrl
ja
and
ret
inc
push
cmpsb
js
cmpsl
sti
aaa
pop
pop
popf
shrb
lds
jb
scas
pushf
jae
xchg
or
rcll
dec
sub
aad
mov
jg
inc
push
xor
fstpl
mov
add
inc
mov
out
cmpsl
xor
cwtl
jmp
jns
pop
jle
fisttps
insl
sub
sbb
je
mov
mov
and
mov
mov
sbb
into
les
std
cmpsb
les
aam
inc
lock
dec
jbe
dec
add
jl
aam
cmpsl
ja
imull
add
jns
cltd
outsb
xor
mov
not
shr
js,pt
mov
mov
loop
shl
push
cmpsb
mov
cwtl
cmpsb
mov
add
enter
out
mov
sbb
mov
inc
xchg
xor
mov
popf
aam
pop
test
es
fisttpl
xchg
xchg
mov
fdivl
ljmp
push
jno
cmp
fprem1
mov
int3
adc
dec
icebp
bnd
push
lods
inc
inc
scas
rolb
in
cmp
icebp
xor
adc
xor
into
arpl
xchg
lcall
aaa
insb
xchg
lock
test
sbb
jmp
out
mov
mov
mov
push
icebp
dec
dec
jo
xor
adc
arpl
pushf
shrb
loope
xchg
xor
out
pusha
xor
sbb
fimuls
adc
imul
or
scas
dec
xchg
or
outsb
jl
push
decl
add
in
cmp
mov
add
add
nop
xchg
push
adc
add
scas
cltd
push
jl
push
sub
mov
insl
pop
mov
std
bound
hlt
mov
loopne
icebp
hlt
gs
cmp
addr16
pop
jae
or
cmp
data16
fnstenv
jg
nop
mov
cmp
jae
and
shrl
xchg
xchg
mov
jg
mov
addl
dec
pop
sbb
cli
sub
rolb
lret
orl
int
scas
pop
lret
sub
das
pop
add
xor
push
mov
pop
cs
scas
inc
xor
stc
aad
xchg
aaa
jecxz
jg
stos
fwait
push
cmpsl
adc
popf
stos
dec
pushf
jo
sti
xchg
bnd
push
mov
icebp
sbbb
lret
sub
mov
scas
jg
adc
jecxz
dec
inc
mov
in
repz
sbb
xor
dec
hlt
bound
out
stos
in
sub
or
inc
shll
daa
xchg
sub
out
inc
xlat
filds
mov
jle
mov
adc
mov
mov
out
ss
mov
addr16
cli
mov
adc
imulb
cwtl
push
mov
and
fistl
inc
push
pushf
xchg
xchg
xor
insl
jo
push
inc
jae
ret
mov
xor
lcall
jp
mov
mov
add
mov
popf
sub
mov
jbe
jp
mov
jae
and
insl
xor
sub
push
sub
in
out
cmp
jo
or
mov
or
mov
jb
lret
icebp
mov
jle
je
gs
scas
jle
mov
jb
cltd
push
gs
mov
sbb
das
imul
adc
xchg
ficoml
lea
push
outsl
or
ss
lea
aam
mov
cmc
cmc
add
inc
cs
xchg
mov
sub
pop
sub
movsl
mov
adc
push
cmp
jp
and
fwait
cmp
adc
pop
pop
add
mov
cwtl
out
jae
or
sarl
std
pop
dec
xchg
sbb
pop
pusha
movsb
push
and
mov
inc
jae
mov
loop
out
int
or
cmpsl
loopne
outsl
pop
cmp
jl
push
mov
push
popa
inc
aam
xchg
js
sarb
mov
sub
push
ljmp
jbe
add
mov
movsb
aas
rcrl
jp
leave
int3
ret
addr16
inc
add
lret
mov
cmp
mov
in
fsubl
sahf
in
shl
or
or
inc
adc
lcall
pop
add
daa
jge
int
cwtl
xor
inc
mov
mov
or
jne
je
inc
icebp
push
icebp
jp
and
insb
push
pop
dec
mov
and
xor
mov
iret
sub
call
add
rcrl
aam
mov
push
sbb
nop
imul
clc
xchg
sub
pop
notl
movsl
aam
stos
xchg
mov
cwtl
lods
cltd
dec
int
add
dec
lock
mov
out
push
mov
aad
dec
lds
mov
and
adc
pop
lret
mov
dec
adc
mov
push
or
aas
aam
dec
and
repnz
xchg
and
mov
xchg
push
mov
or
shrl
scas
and
mov
jbe
outsb
shrb
cmp
ret
mov
pop
out
add
sahf
jo
mov
mov
mov
pop
andb
xor
add
and
lds
mov
gs
test
push
pop
pushf
sub
sub
aam
dec
nop
rcl
xor
or
stos
xor
pop
pop
add
clc
bound
pop
dec
jo
je
push
mov
cwtl
push
dec
es
shlb
loopne
rcl
xor
daa
xor
add
in
xchg
jmp
xchg
loope
out
repz
mov
aam
movsl
aas
andb
xchg
enter
push
adc
call
orl
repz
xor
mov
vmwrite
cli
and
cs
lods
dec
cmp
push
or
mov
stos
push
or
cltd
dec
call
test
push
jg
das
out
jg
aad
cs
or
ror
adc
or
into
dec
stos
or
cmp
out
add
xor
pop
sub
jbe
sarl
les
fwait
cmp
fs
js
push
push
pop
pop
cmpsb
dec
or
popa
cmp
and
jbe
inc
sub
inc
loopnew
ds
shrb
loop
push
mov
divl
lods
adc
notl
dec
js
pop
mov
push
scas
imul
jno
adc
aad
nop
cmp
pop
orl
inc
shrl
add
mov
and
aam
xchg
sub
les
xchg
and
mov
pop
jl
pop
cmp
test
dec
mov
ror
mov
shlb
scas
add
movsl
lahf
mov
mov
lea
stos
mov
xchg
jecxz
inc
inc
mov
add
mov
cmp
movsb
jb
fs
xchg
adc
xorl
push
jne
in
xchg
addb
or
insl
std
int3
mov
jp
xor
add
xchg
lahf
inc
cmp
jnp
sbb
lea
mov
scas
xchg
sarl
jmp
sahf
and
push
pop
loope
pop
fidivl
xchg
xchg
push
insb
in
sub
cmp
push
lock
shll
addb
or
leave
and
repz
icebp
mov
fsubl
out
scas
cmp
xchg
jecxz
lds
xchg
std
sub
sbb
push
sahf
xor
mov
mov
xchg
lds
pop
or
jne
push
pop
aad
jmp
mov
test
lods
jae
aam
ret
sti
adc
cmp
in
sbb
xchg
test
loope
xchg
mov
rcrl
fidivs
les
data16
xchg
pop
add
test
stos
std
in
jmp
outsb
in
inc
xchg
push
dec
adc
rcrl
test
xchg
iret
xchg
call
std
cmpsb
movsb
dec
sbb
outsl
jp
and
push
rorb
inc
addb
lds
push
cli
inc
clc
add
int
inc
lea
jl
mov
dec
mov
inc
insl
shlb
pop
popf
idiv
sbbl
cld
xor
xor
clc
test
mov
push
lods
xor
xchg
adc
ljmp
out
lahf
pop
mov
pop
cwtl
es
fwait
rcrl
stos
sub
adc
inc
out
scas
mov
jmp
subl
les
nop
mov
mov
pop
mov
cltd
mov
add
out
lods
push
out
cmpsl
jmp
inc
pusha
xor
out
imul
into
repnz
or
mov
gs
mov
jb
test
aad
data16
jno
mov
or
inc
daa
jp
cmc
sbb
sbb
and
push
popa
push
inc
imul
repnz
jbe
cs
int3
cmp
cmp
inc
push
mov
mov
fadds
adc
je
sbb
push
testl
mov
test
pusha
inc
pop
xchg
add
int
jl
push
pop
in
mov
sub
mov
leave
clc
jmp
mov
sti
cmp
xchg
inc
sbb
mov
out
das
loop
int
test
mov
inc
dec
xor
std
pop
xchg
cmp
mov
dec
push
sub
inc
lcall
mov
jp
sbbb
in
xchg
cltd
dec
nop
fsubrs
xor
aam
leave
mov
xorl
adc
mov
xchg
das
in
arpl
outsb
je
add
rcrl
mov
cmp
jp
out
xchg
xchg
sbb
xor
call
insl
xlat
shrl
in
into
shl
sub
xchg
cmp
mov
sar
dec
jb
arpl
lret
cmp
cmp
testb
mov
repz
ret
xor
clc
sti
and
cld
pop
sahf
and
adc
loope
or
jbe
pop
addr16
jle
mov
push
sub
aam
mov
sbb
imul
cwtl
std
push
mov
imul
dec
addr16
sbb
sub
les
sbb
push
ds
outsl
repnz
jg
add
in
nop
popf
mov
pop
xor
out
stos
pop
xchg
pop
adcb
dec
sarl
scas
test
pop
jle
je
pop
ljmp
push
sarl
push
jne
cs
pop
pop
mov
inc
or
mov
sbb
sub
mov
pop
mov
inc
lea
xchg
sbb
ds
jg
test
sbb
stos
lcall
and
ljmp
pop
jmp
ljmp
add
pop
pusha
enter
ret
sub
pop
out
lret
xchg
xchg
mov
adc
adc
pop
or
lods
xor
shll
sub
pop
lds
adc
lods
ror
or
pop
fwait
mov
mov
or
sbb
sub
divb
sbb
or
int
loope
movsl
mov
pop
cs
shr
xchg
in
pop
cmp
fldl
je
ss
xlat
cmp
andl
xchg
inc
lds
in
xorl
add
xchg
subl
je
mov
fcoml
xchg
in
push
sbb
neg
les
mov
cmp
int
popa
je
shll
mov
mov
sbb
icebp
popa
push
mov
xchg
movsb
xchg
push
scas
sqrtps
mov
jmp
jmp
inc
mov
and
cli
sbb
cwtl
adc
adc
ja
inc
mov
mov
insb
or
and
test
add
lret
movsb
jno
in
sbb
cld
jb
jge
sub
in
mov
xor
test
clc
push
push
adc
adc
adc
mov
push
sbb
push
sub
out
movsl
aaa
lock
push
adc
mov
ljmp
cltd
sbb
lds
sub
pop
mov
add
jne
xor
mov
mov
imul
out
mov
adc
in
inc
pop
nop
mov
mov
aad
call
inc
js
xchg
shll
mov
cltd
xor
and
cmp
out
cld
sbb
mov
loopne
arpl
out
jg
int
pop
xlat
dec
adc
scas
sarb
push
pop
or
in
jg
xor
scas
sub
adc
bound
call
enter
scas
adc
int
sub
xchg
decl
stos
fisubrs
stc
jae
xor
lods
and
jb
gs
add
pop
push
imulb
cwtl
or
mov
dec
inc
clc
mov
hlt
imul
pop
cwtl
mov
fwait
and
fistps
push
shlb
mov
xor
xor
pop
pushf
cmpsb
adcb
nop
cwtl
sbb
pop
adc
add
add
dec
gs
adc
mov
xchg
inc
ds
arpl
or
stos
cld
pop
aad
jnp
fdivrl
clc
movsl
ret
inc
lds
push
sbb
push
insl
repz
sbb
lret
daa
sub
mov
xchg
jge
jb
cmp
das
mov
sahf
lods
mov
je
or
sarb
cltd
loope
xlat
imul
test
xchg
push
idivl
repnz
cmpsb
xchg
shl
cmpb
dec
mov
inc
shrl
add
jle
loop
dec
rcrl
repz
mov
push
push
push
pop
push
mov
ja
mov
cmc
sbb
mov
add
xchg
lret
xor
test
xchg
sarl
mov
pusha
iret
dec
inc
and
frstor
jnp
sti
in
jb
stos
loopne
push
jge
aaa
mov
arpl
repz
adc
mov
sbb
aad
cld
push
leave
dec
xchg
je
fwait
xchg
int
mov
xchg
lret
cmp
sbb
jns
lahf
cmp
push
inc
pop
mov
push
pop
ret
lcall
rep
popa
jge
cmp
scas
pop
andl
dec
push
cli
dec
cmc
cwtl
lret
test
arpl
arpl
add
pop
or
es
lcall
popf
das
in
insb
add
and
stos
and
out
xchg
adc
into
mov
lock
lock
adc
gs
test
sub
xchg
insl
test
push
mov
jbe,pn
and
iret
inc
popf
mov
inc
iret
daa
out
data16
iret
shlb
fwait
hlt
lds
in
shrb
ljmp
cld
pop
fistpll
push
cmp
pusha
add
rorb
mov
inc
addr16
cmovne
xchg
and
popf
fidivrs
call
lods
pusha
or
mov
pop
aam
sbb
cmpsl
shlb
cmp
int3
stc
pop
mov
xchg
pusha
add
scas
pop
inc
or
inc
push
dec
mov
popa
jo
push
xor
sarb
ds
push
add
or
fs
inc
roll
test
movsb
xchg
enter
cmpsl
xor
lods
xchg
cli
sbb
inc
or
lock
mov
and
es
jns
dec
call
decl
lods
sbb
pop
in
xrelease
shll
xor
add
shrl
push
js
repz
xchg
and
ljmp
cmp
test
sbb
and
jg
lds
push
mov
addr16
push
movsb
xor
adc
and
popf
xchg
jg
loopne
sbb
or
pushf
inc
cmp
inc
mov
loope
xchg
outsb
pop
jnp
pop
push
mov
rcl
mov
aad
mov
scas
mov
pop
movsl
cmp
sub
push
sbb
pop
int3
xchg
imul
data16
pop
jns
dec
mov
jb
into
imul
loopne
ret
jb
add
xchg
in
aaa
sub
lods
sti
mov
outsb
in
or
scas
dec
out
xor
fdiv
into
hlt
lds
lock
sbb
xchg
lret
test
xchg
dec
inc
adcl
add
mov
into
mov
scas
push
mov
call
movsb
mov
fsubrs
inc
and
jne
scas
rorb
sbb
out
test
push
pop
pop
push
data16
fdivrl
mov
add
mov
jg
push
pop
cmc
in
mov
sbb
add
push
clc
fsubl
pop
aam
cmp
xchg
and
imul
sbbl
iret
mov
shlb
add
inc
dec
cld
mov
nop
inc
lret
jae
and
xchg
mov
add
imul
xchg
jp
adc
ja
enter
outsb
rorb
mov
jns
xchg
adc
test
dec
push
je
adc
add
loop
icebp
push
xor
hlt
shlb
in
lahf
xorl
test
std
stc
fdivrl
gs
stos
enter
xor
add
xor
daa
push
and
les
in
push
hlt
mov
xchg
push
leave
cltd
jg
test
leave
cmp
data16
arpl
jae
sbb
jp
push
sbb
pop
push
sub
mov
into
jg
aaa
es
and
test
int
lahf
test
push
or
stos
mov
cld
imul
std
lods
xor
xchg
lds
mov
xor
scas
fnstcw
out
jns
idiv
in
pop
mov
aas
leave
rcrb
pop
fucomi
dec
shl
add
jbe
xor
pop
add
fsts
addl
xor
jae
fldt
scas
mov
sbb
shlb
std
into
gs
or
mov
dec
mov
subl
add
mull
dec
sub
leave
shrl
fwait
mov
push
pop
out
fnstenv
or
scas
inc
pop
outsb
lea
insb
rcll
scas
pop
push
push
xor
jo
jb
aad
sub
push
inc
fs
push
inc
mov
mov
push
sub
push
gs
scas
mov
aam
dec
mov
ss
cltd
add
cld
lcall
pop
cmpsl
rcrl
inc
lret
out
int
ds
pop
std
xchg
jl
inc
cmp
xchg
xchg
push
or
push
add
insb
sub
aas
sub
cld
cwtl
jmp
test
sbb
cmp
push
push
aad
dec
push
mov
outsl
loopne
test
mov
ja
aas
incl
test
pop
test
xlat
mov
sbb
pop
mov
cmp
int3
inc
cmp
mov
xor
pusha
mov
imull
movsb
fdivrl
fildl
int
push
outsl
sbb
jns
cmp
ror
xchg
lea
xlat
push
and
rclb
xor
xchg
leave
lods
adc
insb
loopne
popf
test
lcall
dec
and
out
in
cmc
add
ret
or
jmp
sub
nop
imul
add
sbb
daa
std
sbb
sbb
hlt
fcoml
jns
cmp
ss
mov
mov
dec
fisubl
xor
mov
pushf
data16
jo
pop
mov
arpl
out
movlps
xchg
jo
lock
mov
cli
xchg
cmp
je
mov
dec
insl
add
push
loop
mov
lcall
push
xchg
adc
add
jge
cmp
popa
and
std
cmp
cld
sbb
insb
sub
ljmp
push
arpl
mov
inc
nop
jno
shlb
mov
dec
adc
call
insl
and
xchg
pop
outsb
ja
mov
pop
inc
icebp
jno
movsb
dec
pop
jge
outsb
sbbb
dec
xchg
jb
push
ja
shlb
and
rcl
insb
push
dec
lods
xchg
mov
addl
cmp
add
xlat
pop
subl
popf
shl
pop
pop
outsl
aas
or
mov
inc
ds
cmp
mov
push
call
or
push
fs
imul
jl
add
repnz
mov
loopne
test
bound
scas
aam
xchg
int3
adc
aaa
jecxz
cltd
out
lods
and
push
stc
adc
popa
dec
loop
mov
push
dec
xor
ret
in
ret
xchg
dec
shll
lahf
jmp
insb
push
cmp
jns
jbe
ljmp
adc
pop
and
mov
popa
test
xchg
fildll
fwait
pushf
outsl
fmuls
sbb
in
lret
jmp
outsl
push
xchg
dec
push
cmp
push
cmc
push
xchg
or
jns
cmp
addb
push
mov
lods
loopne
out
mov
enter
mov
xor
mov
mov
ds
adc
lcall
mov
sbb
jns
cmc
or
jbe
jae
loopne
addr16
incb
mov
insb
sub
cwtl
inc
mov
sbb
movsb
rcrb
add
cmpsl
nop
push
daa
xchg
fs
test
int
nop
xchg
xor
xchg
inc
ljmp
fimuls
mov
pop
push
lret
sub
repnz
jo
jge
lcall
shrl
aaa
clc
dec
mov
movb
std
cli
inc
adc
sahf
mov
xchg
pusha
pop
sub
pushf
add
fidivs
inc
pop
pop
or
cmp
int3
cmpsl
jg
adc
cmp
mov
lods
push
sbb
jne
and
sbb
mov
pop
imulb
sti
in
or
dec
pop
adc
mov
sarl
add
lret
cmp
js
mov
pop
jnp
or
dec
ja
mov
ljmp
mov
or
and
mov
adc
sbb
mov
mov
adc
test
sbb
mov
mov
mov
in
hlt
xchg
and
inc
mov
es
mov
daa
mov
in
insb
xchg
and
fistpll
mov
cmp
arpl
hlt
push
xor
out
fcmovnu
movsb
or
lds
es
in
add
sbb
daa
insb
in
mov
cli
fdivrp
adc
cmpsb
rorb
add
test
jo
test
out
aas
push
jae
and
inc
pop
je
andb
daa
daa
fnsave
in
cmpsl
es
mov
jge
cmp
ds
jg
mov
sbb
inc
dec
scas
lods
xor
push
imul
loopne
popf
fisubrl
scas
adc
mov
std
xor
les
mov
mov
or
rcrl
jae
pop
js
mov
aad
mov
movsl
addr16
outsl
pop
mov
jg
xchg
mov
xchg
push
iret
jae
or
adc
push
jbe
test
mov
xchg
mov
and
mov
inc
stos
mov
mov
pop
xchg
outsb
push
sub
hlt
out
xadd
jl
or
cltd
dec
or
and
out
adc
out
xor
adc
pop
stos
into
jo
xchg
mov
pop
inc
les
mov
xchg
cmc
and
and
into
mov
les
cmpsb
cli
and
adc
loopne
dec
jecxz
mov
sbb
scas
mov
cltd
add
pop
sbb
mov
xor
xor
inc
addb
loopne
mov
fwait
xor
mov
or
sti
dec
jb
pop
daa
adc
aaa
dec
xor
xchg
clc
loop
cld
cmpsb
je
aaa
push
pop
int3
jnp
xchg
cmc
mov
leave
mov
push
movsb
enter
lds
xor
inc
mov
adc
andl
or
xor
pop
pop
das
push
call
bound
add
fsts
pop
mov
aam
in
addr16
lret
or
mov
cmp
dec
sbb
pop
fdivs
inc
and
in
add
xchg
sbb
dec
addl
je
fstl
mov
lahf
fs
pop
mov
lds
sub
stos
inc
ljmp
xchg
test
sub
rorl
dec
sub
lock
push
lock
mov
into
xor
jmp
add
fwait
mov
sbb
jecxz
bound
fildll
cmp
push
mov
jl
cltd
push
add
jg
insl
loope
stc
adc
jecxz
loope
xor
in
fisubrs
inc
int
inc
xor
hlt
mov
add
rorb
jle
lds
or
mov
push
ret
dec
daa
shrl
cmp
movsl
inc
insb
add
into
divl
dec
jo
ret
fistpll
mov
cld
cmpsb
xchg
repz
push
mov
cwtl
inc
sub
repz
stc
fnstenv
dec
insl
les
rorl
pusha
div
scas
pop
daa
push
movsb
push
jle
movb
dec
inc
stc
ss
fadds
fiadds
mov
xorl
mov
sbb
sti
xchg
inc
pusha
sub
popf
call
pop
pop
sub
cmovs
jmp
movb
rcl
call
push
ret
jnp
inc
in
pushf
dec
pop
in
scas
nop
push
push
and
xchg
out
xchg
or
shlb
sub
frstor
dec
sub
and
and
jl
inc
pop
into
push
adc
call
xchg
sbb
jno
ret
mov
lods
daa
loope
stc
cmpsl
sti
jmp
dec
stos
dec
mov
loope
push
xchg
push
or
sub
mov
mov
xchg
mov
mov
sub
push
ljmp
mov
aaa
mov
js
sarb
dec
sub
lcall
or
and
in
or
jno
mov
jl
pop
xchg
xrelease
cmc
jp
pop
push
out
push
inc
lcall
rcl
imul
and
rcrb
pusha
ds
outsb
mov
inc
ja
dec
mov
xchg
jno
int3
xor
push
ds
shll
jbe
daa
popa
icebp
jae
sahf
inc
push
stos
inc
ja
std
pop
ja
repnz
out
sub
movsb
xchg
cld
pop
sub
cmpsl
xor
jnp
add
add
pop
orl
and
pop
push
orb
xchg
aas
inc
aaa
mov
dec
xor
dec
and
in
jb
jg
movsb
decl
faddl
and
gs
sub
push
pop
sub
sub
popa
xchg
das
mov
lock
lods
les
jmp
jmp
cmp
pop
cltd
rcll
lret
xor
xchg
dec
or
stos
xor
lahf
pop
add
jecxz
add
ds
adc
and
divl
imul
xchg
arpl
xchg
test
mov
jae,pt
sbb
std
test
pop
loope
xchg
mov
xor
jne
push
pop
iret
inc
gs
int
stos
sbb
jbe
pop
icebp
aas
cli
inc
bound
outsl
fsubrs
leave
mov
sbb
mov
mov
aas
xchg
pusha
sbbb
imul
push
cmpsb
je
les
int
or
dec
mov
push
lcall
pop
aas
xlat
xor
popa
leave
adc
or
mov
sbb
jge
cmc
mov
xorl
outsb
pusha
movsl
dec
dec
push
jno
add
sub
dec
aas
movsb
cmpsb
pop
rclb
sarl
test
mov
sub
stc
lods
add
xchg
mov
insb
call
and
inc
les
sub
mov
cmp
stos
stos
dec
mov
insl
lret
sti
scas
sub
ds
adc
dec
and
ja
stos
inc
xlat
adc
divb
cmp
leave
push
cmp
test
xchg
fsub
ss
lret
jae
or
lahf
xor
xchg
mov
pop
test
cltd
or
or
or
sub
in
mov
inc
push
cwtl
mov
sub
dec
daa
xor
sub
cld
jbe
dec
add
mov
mov
dec
cmpsb
outsb
push
mov
js
add
jl
lcall
insb
pop
adc
pusha
mov
cmpl
sti
mov
adc
dec
push
inc
scas
repnz
cwtl
sti
jecxz
adc
dec
lea
xor
push
adcb
or
scas
mov
scas
and
adc
pusha
jne
mov
push
adc
push
and
into
in
shl
into
aas
cmpsl
imul
lds
ud0
cmc
out
stos
enter
pop
bound
outsl
imul
cs
push
or
js
push
adc
jl
in
bound
cmpsl
mov
add
push
movsl
cs
xchg
push
adc
push
dec
or
insl
cld
inc
out
or
imul
or
ret
sub
inc
arpl
cmp
push
jmp
jnp
and
dec
cli
adc
inc
test
mov
jo
hlt
xchg
pop
mov
ss
out
pop
scas
stc
push
dec
push
loop
add
sbb
ss
jle
mov
cmpb
sub
cmp
xorl
out
mov
xchg
incl
sub
xor
dec
sub
sub
sbb
xchg
sbb
inc
xchg
pop
jecxz
sub
pop
cmpsl
into
or
inc
outsb
dec
inc
or
ret
add
cmp
jl
inc
movsb
xchg
insb
jmp
pop
int
fstpt
das
rcrl
stos
dec
mov
push
cmpsl
add
jns
rcll
push
inc
ret
mov
jge
enter
xor
cmpsl
or
pushf
cli
dec
dec
fdivp
lock
cs
or
filds
cs
cmp
ficoms
shll
mov
fdivrs
adc
pusha
cmp
test
dec
cmpsl
jne
int
cld
mov
out
inc
pushf
test
lea
mov
push
add
lock
out
add
fdivrs
outsb
pusha
or
and
mov
insl
adc
testl
loop
and
push
mov
repnz
rcr
xor
mov
jge
lahf
shr
and
stc
imul
mov
push
fsts
in
adc
out
cmp
repnz
cmp
scas
mov
mov
data16
das
lret
mov
cmc
jmp
push
jecxz
sbb
mov
lea
je
mov
ljmp
imul
int
adc
push
insl
mov
lds
add
sub
mov
sbb
jmp
mov
mov
mov
mov
push
and
fiaddl
js
jecxz
cmpl
mov
xor
in
push
cmp
sub
add
fsubrl
enter
and
repz
adc
movl
and
or
xchg
cmpsl
mov
xor
mov
mov
adc
sub
sbb
enter
or
jmp
mov
jl
daa
mov
xor
sub
mov
sbb
out
mov
sahf
cmpsb
pop
push
add
rorl
icebp
jae
mov
inc
imul
dec
fadd
mov
outsl
aam
push
lock
inc
pop
xchg
int
daa
jmp
popf
mov
cmpsl
xor
psadbw
into
xchg
push
xor
into
or
stos
xchg
fs
ficoms
xchg
loopne
inc
fnstenv
xor
mov
popa
fwait
daa
mov
push
in
adc
xchg
repz
mov
mov
xor
xchg
and
push
mov
cmp
loop
mov
pop
xchg
pop
gs
neg
cmp
jecxz
out
fnstcw
aaa
adc
fidivs
push
es
cmp
jae
jno
in
push
xchg
in
add
cmp
add
or
fwait
out
mov
data16
sbb
jns
xor
cli
js
jb
xor
sub
sub
int3
rorl
in
loopne
xor
out
xchg
adc
mov
xorl
pop
adc
inc
mov
ret
mov
icebp
jb
xor
mull
mov
or
lds
out
stos
int
call
jne
sub
lret
outsb
jnp
push
jecxz
xlat
xor
cwtl
xchg
inc
stc
aas
ljmp
mov
or
popf
xor
and
mov
and
push
cld
es
add
fwait
shll
pop
add
arpl
ret
lcall
sbb
outsl
cs
add
jno
int3
dec
movl
xchg
xchg
out
and
mov
xchg
ds
pusha
dec
mov
sbb
std
xor
push
cltd
push
mov
xor
cld
in
jns
int
fsubs
rclb
loope
mov
pop
outsl
sbb
inc
nop
sti
pop
mov
jg
cmpsl
add
push
mov
cld
cmpsl
sbb
xchg
sahf
pop
outsb
sbb
or
jae
mov
sub
andb
push
cmp
adc
fstpt
xchg
push
sarl
add
mov
dec
imul
test
mov
les
leave
adc
sti
out
mov
fcompl
iret
mov
ljmp
mov
push
sti
lock
xorb
movsb
pop
std
fwait
scas
fs
sahf
scas
in
sub
dec
std
and
aaa
fnstenv
pop
das
xchg
mov
jb
mov
cmpsl
cmp
mov
sub
es
and
add
sahf
insb
ret
call
shrb
outsb
push
shl
test
dec
div
or
dec
mov
ret
cmp
xor
dec
clc
pop
ret
addr16
or
je
shr
ficoml
mov
mov
mov
mov
pop
mov
das
jmp
cld
hlt
or
jnp
dec
testb
outsb
push
fimuls
jno
incl
or
sbb
test
sbb
mov
sbb
pushf
hlt
and
hlt
fistpl
and
inc
xchg
dec
xor
bound
xor
fldenv
and
inc
and
mov
int3
bound
jle
imul
jmp
cmpsb
pop
mov
jecxz
inc
or
pop
mov
mov
adc
std
add
adc
shl
fdivrs
cltd
clc
mov
gs
and
push
loop
test
add
push
into
mov
out
icebp
cli
arpl
in
inc
pusha
mov
popf
adc
dec
mov
mov
lods
xchg
mov
dec
adc
sub
xor
mov
xor
ret
stos
cld
scas
leave
mov
jae
sbb
fsubrl
jnp
mov
outsb
icebp
sbb
mulb
pop
mov
int3
sbb
xor
scas
sub
bound
stc
enter
popa
mov
dec
sub
jno
outsl
add
lods
sub
dec
decb
insb
fstps
push
jge
outsl
stc
sbb
xchg
pop
mull
pop
ljmp
cs
add
mov
insb
and
xor
fsubrl
into
mov
inc
cmc
and
rcr
inc
inc
sub
hlt
aad
lret
xor
pop
lock
cmpsl
inc
fstl
mov
inc
nop
pop
clc
jle
sub
jb
jnp
xchg
jp
int
and
mov
push
icebp
es
outsl
mov
jns
aad
dec
hlt
push
dec
pop
sti
into
mov
mov
inc
pop
push
mov
or
jg
mov
and
xlat
mov
movsl
push
inc
sbb
cmp
data16
adc
jo
add
mov
jle
fsts
lcall
in
mov
cmpsl
push
fsubrl
and
movsl
adc
mov
push
pop
jo
adc
xchg
xor
repz
mov
mov
mov
outsb
adc
jnp
stos
jmp
xchg
mov
test
mov
push
enter
xor
or
lret
movsl
and
sti
sbb
icebp
xchg
pop
or
or
mov
cmp
es
jns
mov
cmpsl
movsb
xchg
andl
es
jno
jmp
fmuls
sbb
popa
dec
fs
dec
xor
push
call
xchg
push
adc
pop
mov
add
add
xlat
xchg
subb
add
xchg
ret
lock
jb
mov
mov
je
jle
mov
orb
dec
adc
cs
or
dec
insb
jp
arpl
xchg
push
scas
test
sub
pop
jg
mov
lods
mov
mov
xchg
pop
pop
int3
dec
lea
mov
mov
popa
stos
sbb
cmp
cmp
inc
ja
pop
and
push
in
fldt
push
addr16
pop
add
sti
js
xor
mov
push
inc
out
cmpl
js
sarl
int
push
jns
xor
addr16
mov
add
mov
adc
dec
jae
mov
push
ret
cltd
aaa
inc
mov
imul
insl
rorl
mov
cmp
jnp
cmp
stos
js
push
mov
ds
jae
sahf
aad
cli
lahf
fidivl
std
fwait
mov
add
popa
sbb
xchg
jmp
out
int3
cmpsl
push
jns
imul
pop
scas
mov
jmp
iret
dec
ficoml
inc
stc
sub
loopne
push
clc
faddl
cmp
shlb
test
and
cmpsl
stc
sub
out
rolb
sub
jnp
test
mov
add
fs
or
cmp
into
insl
or
add
insb
add
mov
jl
cld
xchg
dec
jge
xchg
aas
push
ror
jl
mov
or
jg
ret
leave
or
push
test
mov
mov
bound
fisubrs
jmp
movsb
aad
jb
jp
cmpl
rorb
out
push
mov
pop
leave
mov
pop
mov
jecxz
adc
xchg
or
std
fiadds
in
add
scas
pop
outsl
mov
xchg
jl
pop
ret
call
and
cmpsb
out
push
and
into
jne
or
and
iret
out
sbb
sbb
hlt
inc
cli
nop
loopne
cli
cmp
inc
xor
sti
dec
cmp
nop
jbe
clc
rcll
cmp
dec
subb
negb
popa
xchg
cwtl
aam
mov
mov
fucomip
sub
rclb
lods
mov
test
int
sub
cmp
or
pop
adc
ja
inc
andl
jnp
mov
lds
push
mov
stos
or
lods
push
xor
clc
imul
fisubl
fcompp
push
xor
and
add
xlat
ljmp
inc
sub
adc
aas
lods
es
out
jno
pop
cmp
push
repnz
das
sbb
aam
jmp
ja
imul
cmp
xchg
mov
mov
push
xor
fldt
je
jo
leave
outsb
push
xchg
pop
aaa
push
enter
rolb
mov
std
les
sbb
adc
adc
test
jae
xor
inc
adc
ljmp
lods
insl
pop
filds
xor
test
iret
pop
aas
aam
lret
mov
cmp
sbb
icebp
jae
int
ds
shlb
in
mov
icebp
inc
xchg
sbb
popf
rcll
jp
sbb
sub
jl
fs
xchg
scas
lods
ja
or
fxch
xchg
outsb
push
jmp
pminsw
cmp
lret
pop
pop
pop
lret
adc
std
into
or
ror
mov
cmp
insb
push
dec
cmpsl
fcmovnbe
aad
aas
popf
cmc
clc
mov
inc
add
cwtl
fwait
jl
jno
jbe
xor
sarl
cmc
cmp
and
imul
sahf
cmc
push
mov
cwtl
push
lret
push
mulb
and
dec
push
call
inc
jbe
add
mov
lret
pop
fidivs
mov
mov
sbb
mov
in
dec
shll
and
dec
loopne
inc
pop
inc
jl
sub
out
loope
jno
sub
dec
in
adc
mov
aas
xor
pop
xchg
add
sti
je
jmp
sub
adc
xor
sub
sbb
pop
jo
mov
jnp
dec
lret
call
xor
mov
in
push
mov
repnz
add
movsl
or
int3
lds
mov
mov
jmp
popf
fsub
mov
cmp
mov
pandn
cmp
dec
cmp
pop
jbe
leave
les
fsubr
iret
inc
mov
adc
cltd
loope
aaa
mov
push
xchg
pop
xlat
rclb
scas
rclb
sub
cmp
jl
mov
sahf
cwtl
testb
cmc
test
mov
xlat
pop
xor
lds
pushf
dec
fstpt
sub
or
les
cli
ret
or
add
stos
out
movl
pop
or
ljmp
jle
adc
xor
push
mov
das
mov
adc
xor
je
adc
fpatan
push
jecxz
in
sub
or
jno
sub
sbb
or
loope,pn
jecxz
sbb
mov
inc
mov
js
pop
sbb
adc
inc
lahf
mov
in
icebp
or
sbb
jp
sbb
push
and
es
jp
jno
int
add
insb
xchg
mov
popf
sub
mov
jae
stos
dec
mov
inc
jmp
push
jmp
rcll
mull
pop
outsl
dec
xchg
ficoml
mov
xor
push
jbe
outsb
leave
jge
add
xor
pop
out
subb
jno
inc
pop
or
arpl
in
xor
dec
pop
cwtl
adc
push
xchg
dec
and
add
jl
test
adc
imul
push
aas
inc
imul
cmpsb
adc
pxor
out
xchg
lret
outsb
pop
xchg
adc
loopne
and
pop
xor
dec
lcall
fdivp
mov
mov
cmc
pop
pop
mov
xor
cmp
add
pusha
aas
je
jg
dec
stc
pop
iret
push
pusha
jmp
rcrb
xchg
stos
out
jb
imul
cmp
sub
xor
enter
mov
mov
fwait
dec
test
fucomi
fcmove
mov
scas
repz
xchg
sbb
mov
shl
and
ds
dec
xor
or
jns
push
in
xchg
push
cld
pop
push
inc
lock
jp
jl,pn
rcrb
pop
xchg
xchg
xor
jnp
loopne
push
sub
lcall
ja
add
jg
adc
je
sub
call
inc
lds
or
cld
push
lret
js
lea
add
sub
lods
loope
fistps
in
lods
fisttpl
aad
aad
cmpsl
dec
mov
xchg
pop
dec
fsubrl
idivb
mov
pop
lods
fsubrs
gs
jno
fsubr
cli
adc
jnp
repz
push
or
pushf
loope
sbb
pop
repnz
sub
jns
jle
fwait
pusha
stos
mov
mov
aas
mov
dec
mov
push
nop
cwtl
inc
inc
and
push
popf
pop
push
mov
xor
jne
sub
xchg
inc
lret
jp
xchg
jmp
adc
or
stos
in
int3
xor
xor
lahf
aam
aad
es
mov
dec
xchg
sti
pushl
in
aad
or
mov
test
mov
xchg
cmpsb
adc
jge
and
jno
xchg
push
leave
cmp
cmp
out
nop
mov
arpl
or
sbb
insl
xchg
mov
push
pop
gs
or
js
mov
daa
daa
addb
cmp
cmp
add
jae
arpl
popa
pop
jae
adc
cmpsl
mov
push
mov
iret
pop
loopne
ret
jle
fisubs
aad
cltd
icebp
cmp
in
and
in
lea
pushf
dec
shrl
cmc
aad
mov
lods
pop
test
and
pop
cli
dec
adc
cltd
inc
adc
jmp
cli
mov
jo
xor
pop
arpl
sub
js
fwait
jae
rol
dec
push
push
call
shlb
cmc
inc
pop
mov
lcall
inc
and
mov
pushf
mov
repnz
enter
pop
adc
xor
mov
push
faddl
je
aad
fistpl
shr
push
es
iret
inc
loope
flds
or
sub
jbe
sarb
sub
call
repz
aam
in
in
das
aaa
lods
jns
jo
fistps
movl
adc
cmp
inc
adc
daa
mov
xchg
cmp
es
cs
ss
pop
dec
rorb
and
xor
dec
pop
mov
in
cli
ficompl
push
mov
cmp
fld
add
outsb
jge
fstpt
es
sub
push
out
and
rcll
xchg
shrl
adc
xchg
jbe
push
mov
sbb
scas
cmp
arpl
test
mov
leave
gs
cmp
sub
imul
xor
lcall
arpl
pop
lea
clc
outsl
jnp
pop
lcall
inc
fld
lret
cwtl
mov
in
jb
mov
aam
cmp
orl
sub
mov
adc
fwait
loopne
pushf
jne
test
mov
sbb
sbb
push
pop
sub
push
xchg
hlt
push
mov
and
xchg
jno
aas
call
jno
stc
pop
adc
or
mov
cmp
popa
fildl
cmp
jle
test
inc
cmpsl
aaa
aaa
insb
test
stos
shlb
fld1
out
sbb
clc
bnd
inc
pusha
out
fcmovnb
adc
inc
loope
pop
cltd
pop
jge
jp
or
dec
cmpsl
cmpsb
inc
notb
cmp
jge
test
mov
imul
mov
dec
dec
aam
and
cs
push
dec
push
dec
dec
adc
jbe
add
enter
add
test
imul
es
rclb
sub
sbb
xor
jp
jne
jge
pop
xor
adc
and
mov
mov
sbb
loope
push
ja
repz
or
lds
inc
scas
aam
sbb
jbe
imull
and
in
das
std
inc
jno
aaa
scas
jns
pop
mov
loope
push
cmp
lea
xchg
iret
repnz
jg
js
sub
arpl
sbb
jns
out
sbb
int
fldl
dec
cli
mov
jne
push
push
or
push
test
aad
sub
shrb
dec
push
push
loop
adc
ljmp
mov
lcall
fcmovbe
imul
jbe
mov
lods
sub
sub
jne
mov
arpl
sub
ss
gs
xchg
lock
mov
jb
push
loopne
maskmovq
negl
mulb
pop
cmpsb
push
ret
aad
ljmp
repnz
mov
stc
notb
out
pushf
push
adc
test
mov
in
insb
xchg
and
popf
shrl
rorl
mov
nop
push
into
xchg
stc
adc
jbe
push
xorb
adc
xchg
push
mov
sbb
sub
push
jno
icebp
xor
jne
or
fistps
imul
das
pop
sti
adcb
dec
jmp
in
dec
fsubrs
fs
pop
mov
jae
cmpsb
pop
iret
pusha
popa
adc
fstpl
sub
loopne
mov
xor
out
push
lods
dec
push
inc
ret
xorb
mov
cmp
daa
mov
mov
in
jg
xchg
jnp
insb
inc
cmp
inc
les
gs
pop
inc
fwait
mov
or
repnz
mov
push
sti
aad
rcr
adc
sbb
cmp
aad
inc
adc
jmp
push
adc
gs
leave
repnz
leave
sbb
icebp
movsb
sbb
jecxz,pn
adc
fadds
lds
add
jnp
icebp
mov
insl
lcall
push
mov
int3
sub
mov
mov
loopne
and
inc
iret
dec
add
rcr
push
add
lods
jg
mov
mov
insl
jb
dec
sbb
cmpl
cmp
xchg
sti
scas
in
mov
sbb
ja
roll
or
fwait
aas
arpl
ret
jmp
ret
divl
jno
lcall
sahf
dec
imul
jge
cmpsb
xchg
lcall
lret
and
adc
dec
les
dec
je
inc
mov
shlb
xchg
fsts
dec
inc
mov
pop
inc
mov
and
ror
lahf
jl
pop
ret
and
or
aas
mov
fiadds
inc
shrb
ss
fstpt
in
and
and
aaa
mov
test
addb
jns
fisubl
push
lcall
int3
adc
cs
push
xchg
subb
cmpsl
aad
pushl
jns
pushf
xor
jge
xchg
mov
cmp
adc
cmp
mov
xor
divl
dec
bound
cmp
fisubrl
push
out
sub
fwait
inc
dec
lcall
inc
iret
jns
mov
inc
jne
push
add
and
push
psadbw
cmc
lcall
out
sub
xchg
fisubrl
sub
dec
loope
leave
repnz
xor
inc
push
xor
fldl
jl
add
inc
push
call
mov
scas
pop
jle
sbb
and
pusha
pop
mov
inc
jbe
lahf
mov
dec
pop
arpl
push
and
fcomps
xchg
pop
daa
fdivrl
arpl
scas
mov
add
pop
mov
sub
mov
mov
xor
icebp
jp
adc
mov
jecxz
out
daa
xor
ja
sbb
iret
icebp
fwait
pusha
arpl
data16
push
cmp
icebp
mov
movsl
pop
mov
cmp
inc
mov
pop
xor
mov
jo
shlb
xor
sbb
mov
mov
sti
mov
add
fimuls
sub
loopne
push
pop
aas
pop
add
pop
addr16
rorb
movsl
cmp
cmp
stos
pushl
popf
hlt
or
mov
cmp
enter
loopne
xor
inc
mov
and
into
pop
adc
in
xchg
fisubs
cmpsb
cmc
loopne
andb
push
outsb
fimull
popf
lret
cmp
jne
sarl
pushf
push
pop
dec
repnz
add
push
inc
jmp
dec
mov
adc
lock
insb
rorl
pop
or
lret
les
fst
inc
mov
pop
jo
add
insb
pop
xchg
xchg
cmp
or
ja
movsb
mov
clc
adc
mov
loope
dec
pushf
push
cmp
fstps
fcompl
pusha
pop
sbb
fildll
in
out
add
in
sbb
imulb
or
sbb
sub
shlb
xchg
xchg
xor
cmp
fcompl
shll
or
pop
jno
sub
rcl
daa
mov
mov
mov
push
sub
repnz
ja
xor
or
lea
lsl
add
das
mov
cmp
stc
arpl
mov
or
mov
add
dec
adc
push
iretw
sbb
stos
popf
cmp
dec
jg
arpl
xchg
inc
lahf
inc
jl
les
in
pop
cmpl
fs
pusha
cltd
fildll
jecxz
imul
and
lret
outsb
mov
push
std
sub
dec
lock
cmp
andl
add
cltd
addb
inc
and
push
repnz
pop
cvttps2pi
cld
sbb
nop
sahf
pop
jb
inc
push
push
pop
mov
mov
cs
adc
outsb
out
pop
cmp
add
jp
and
lock
dec
mov
xchg
cwtl
push
jns
inc
sti
imul
xor
push
dec
out
mov
cmc
pop
mov
adcl
mov
divb
daa
xlat
call
xor
bound
adc
icebp
cld
lock
mov
dec
or
and
aam
stos
dec
into
fstpl
js
mov
mov
je
call
mov
push
sub
dec
or
jae
inc
cli
rcll
sarb
int3
fwait
cmp
mov
inc
mov
bound
inc
push
lods
negl
clc
jne
pop
push
ja
mov
xorl
std
xor
mov
inc
xchg
stos
sub
pusha
mov
dec
push
ret
push
pop
clc
cmp
add
idivl
pusha
mov
and
mov
jb
imul
mov
in
push
add
vandnps
and
jnp
clc
xchg
mov
ja
inc
cmp
lcall
in
orb
push
mov
in
jecxz
aam
sub
push
nop
inc
rcll
stos
arpl
jnp
fwait
shll
lods
mov
imull
mov
mov
lods
sarl
adc
cmp
cmpb
testl
rclb
lret
fnstenv
imul
aad
lods
cmpsb
dec
in
jae
inc
shlb
lret
adc
jb
xor
xor
pop
je
cwtl
push
repnz
out
ja
and
pop
add
mov
add
mov
mov
fisttpll
xor
jae
mov
mov
cmp
mov
pop
daa
inc
cmp
daa
cs
mov
out
mulb
sahf
cmc
addr16
mov
stos
scas
mov
adc
rcr
inc
dec
das
loopne
push
in
lods
adc
lcall
pop
nop
and
popf
cmp
xor
ficompl
mov
in
hlt
push
push
mov
mov
lds
sbb
push
nop
lahf
cwtl
dec
js
jns
ret
jbe
mov
sbb
enter
lods
loope
outsl
movsb
das
adc
push
fmuls
roll
mov
push
lea
inc
mov
dec
dec
pop
sub
xchg
mov
jle
pop
outsl
add
cmp
pop
jbe
pushf
xor
aam
pop
jnp
mov
in
test
mov
nop
mov
jns
cltd
test
push
xchg
pop
and
mov
in
jecxz
ljmp
imul
adc
aas
push
call
or
stos
mov
insb
imul
or
test
adc
dec
cli
test
jge
insb
outsl
xchg
or
insl
jle
inc
or
xor
in
xor
mov
shl
xor
fnstenv
inc
pop
mov
js
pop
pop
daa
cmp
xchg
push
mov
insl
popf
mov
scas
arpl
leave
mov
lock
fnstcw
pushf
ss
jae
sub
mov
jl
inc
cmp
cld
aas
gs
dec
xchg
scas
ja
dec
mov
adc
nop
sbb
pop
out
xor
loope
xchg
call
xor
pop
pop
testl
pop
aad
mov
fwait
test
pop
into
stos
int
outsl
mov
orb
xchg
sub
cmc
js
mov
or
mov
or
pop
mov
mov
js
sbb
add
mov
mov
cld
lods
jle
mov
in
pop
dec
xchg
jp
loope
ljmp
cmp
xor
add
data16
mov
shlb
and
xor
fwait
test
cmp
ja
fadd
fisttpl
sbb
adc
sti
mov
stos
pop
lahf
dec
mov
inc
scas
sbb
pop
and
xlat
aad
ds
dec
test
cwtl
push
dec
mov
dec
fisttps
test
mov
push
rolb
xchg
cmp
add
jbe
mov
fdivrl
dec
sbb
cltd
rorb
jg
rorb
pop
in
push
gs
popf
lret
lds
arpl
jbe
sub
popa
push
aaa
lods
mov
outsl
jo
in
xchg
sub
test
aas
in
add
mulb
or
pop
cmpsb
incb
gs
rclb
mov
jle
in
test
arpl
sub
jno
mov
mov
cmc
loopne
or
mov
mov
leave
pushf
imul
fsubrp
inc
mov
rcr
mov
cmpsb
sub
mov
sub
movb
lahf
flds
rcll
outsl
push
inc
dec
mov
dec
cmc
adc
mov
jnp
jmp
xor
xor
adc
adc
int
xor
loopne
nop
fildll
and
xchg
cmp
and
lods
outsb
inc
scas
cmp
mov
pop
dec
into
sbb
sti
add
xchg
nop
mov
adc
outsl
je
out
cs
mov
rcr
sbb
sub
divb
xor
cwtl
push
dec
lret
sarb
push
push
mov
jmp
xor
lcall
scas
out
pop
scas
cld
pusha
and
loopne
xor
sub
movsl
test
sub
imul
call
outsb
imul
mov
movsl
loop
add
lcall
add
pushf
shrb
shl
das
pop
mov
add
loope
inc
rorb
popf
xchg
or
sub
push
lods
iret
xlat
cmovb
jmp
pop
test
enter
push
repnz
or
mov
iret
leave
out
cmp
sub
xchg
notb
js
jmp
fwait
jo
push
lcall
stc
jle
out
pop
or
shrl
adc
sbb
sti
xor
test
popf
cmpsl
xor
fildll
pop
jne
jl
push
je
arpl
test
pop
mov
cmc
dec
and
xchg
in
xlat
push
push
push
insl
addr16
pop
adc
jnp
xchg
xlat
add
and
mov
shrb
aas
je
int
xchg
dec
lret
pop
cmpsb
inc
jge
xor
mov
push
insb
out
sub
ss
repnz
lret
ret
popf
xor
jp
adc
adc
or
ret
push
out
fcomi
cmpb
rclb
lods
xchg
sbb
jbe
mov
sub
dec
ret
mov
out
repz
addr16
pushf
lods
ja
jmp
dec
movsb
std
mov
and
movsl
movsl
cmp
repz
mov
les
ljmp
into
aam
movsb
ret
mov
icebp
add
push
fistpl
les
inc
mov
arpl
insb
movsb
outsl
lcall
cmpsl
fnstcw
dec
in
call
dec
inc
mov
icebp
cmovne
aaa
sbb
and
dec
xchg
rorb
cmp
jns
sti
jae
enter
icebp
shlb
pop
jo
scas
icebp
jns
jns
pop
lods
sub
mov
ja
or
dec
mov
hlt
pop
das
push
jbe
jb
mov
pusha
jnp
int3
imul
or
and
outsb
pop
mov
ret
loopne
iret
pop
iret
jbe
mov
inc
lret
mov
xchg
and
mov
in
jp
pop
les
das
mov
nop
in
add
or
mov
test
adc
jle
jb
and
mov
adc
mov
js
icebp
gs
pop
outsl
pop
or
out
cli
addl
or
xor
dec
popf
dec
or
mov
cmpsb
lret
sub
sub
cwtl
popa
cli
stos
adc
loopne
cmp
fcompl
loope
int
test
and
inc
pop
jp
or
in
mov
pop
jmp
popa
sti
jo
and
vpunpcklwd
loop
out
mov
out
cwtl
add
test
pop
loope
adc
outsl
xchg
in
nop
dec
or
push
xchg
das
mov
mov
push
xchg
int3
xor
pop
fld
fiadds
ror
xlat
dec
popa
cmp
pop
push
mov
push
adc
pop
mov
cmp
pusha
or
test
xor
aam
cmp
frstor
add
pop
dec
or
test
xchg
arpl
movsl
or
shr
leave
lahf
push
dec
icebp
adc
idivl
mov
rclb
and
popa
mov
and
and
and
icebp
ret
popf
and
lock
inc
xchg
mov
push
arpl
adc
adc
stos
xor
das
inc
pop
push
lds
mov
pop
pop
popf
add
xlat
in
mov
adc
sbb
xchg
iret
fs
jecxz
fwait
inc
fiadds
repz
dec
push
int3
pop
clc
movsl
aam
aam
lods
dec
test
pop
mov
mov
or
mov
ret
aaa
cmc
out
ret
outsl
scas
adc
mov
or
sahf
orb
sub
and
sbb
test
push
add
sbb
push
mov
es
cmc
pushf
fadds
call
repnz
fwait
jns
cmp
xchg
mov
rcrb
mov
push
loope
into
xchg
cmp
xchg
rcrl
clc
imul
push
sub
mov
ljmp
cs
pop
xchg
icebp
and
jle
orb
or
mov
movsb
sbb
jge
sbb
ret
fnstsw
and
fists
mov
push
fmuls
fstpl
xchg
add
int3
lcall
stos
inc
jg
push
pop
lcall
adc
xor
popf
clc
outsb
and
mov
mov
push
dec
scas
add
ljmp
mov
xchg
adc
xchg
scas
out
out
sbb
push
fdivs
into
sbb
lahf
inc
dec
popf
inc
mov
xlat
data16
sbb
sub
push
aas
lock
in
das
mov
call
lahf
enter
jns
jbe
mov
sub
jge
aad
jecxz
push
push
push
adc
xor
xchg
ljmp
enter
into
pop
rep
add
xchg
push
jbe
pop
mov
movsl
jae
aaa
int3
adc
popa
mov
fwait
or
sub
je
push
rcrb
inc
sub
mov
repz
ret
loope
and
add
loop
ljmp
pushf
aaa
cmp
aad
or
mov
push
pop
js
in
into
xchg
ss
out
mov
rcr
add
sub
add
lock
pop
hlt
ljmp
ret
fs
adc
inc
push
in
in
adcb
mov
test
dec
xchg
test
in
cmpb
xor
addr16
push
loop
lahf
daa
mov
mov
sbbb
loop
add
insl
add
cmp
and
jns
into
mov
enter
aas
jp
std
rcrl
aam
jmp
out
adcb
and
ret
loopne
in
xlat
inc
daa
adc
add
mov
ret
push
mov
sbb
cmpsl
mov
add
cli
jae,pt
aaa
mov
sbbb
mov
jno
push
mov
mov
inc
in
sub
or
pop
add
std
clc
aad
aaa
mov
xor
push
mov
aas
cmc
lds
ss
shrl
mov
sbb
xchg
imul
sbb
cli
jb
negl
fcoml
xchg
mov
xchg
mov
jns
ficoml
pop
aas
adc
iret
mov
or
scas
mov
push
les
xchg
test
adc
pop
ret
xor
inc
pop
dec
rcrb
cmc
in
pop
popf
sti
shll
in
inc
or
xchg
sub
and
lret
lods
xchg
into
xchg
pop
fsubrs
cmp
sub
dec
out
mov
xor
sub
cmp
gs
cmpsl
or
adc
mov
sub
shr
in
pop
xlat
inc
int
movq
inc
mov
xchg
adc
cltd
mov
jl
pop
lahf
popa
xor
mov
fbstp
stc
loopne,pn
pop
cmp
mov
adc
mov
das
test
xchg
jae
mov
icebp
sbb
popa
std
sti
insl
and
lahf
in
pop
sub
jo
ljmp
sbb
push
popa
lods
xor
or
insl
pop
xor
mov
xchg
pop
push
cs
cmp
fists
icebp
xchg
lea
xchg
mov
ja
scas
jns
scas
xchg
fsubp
sti
jno
dec
cmpl
lods
inc
loop
out
and
ds
lret
lea
push
lret
outsl
push
mov
loope
scas
fs
sbb
fnstenv
ret
cli
mov
rclb
jae
mov
testl
mov
mov
das
inc
push
in
in
shrl
and
mov
pop
mov
ljmp
mov
es
in
xor
sbb
les
lea
or
or
or
sub
xlat
dec
ljmp
mov
inc
sub
xchg
mov
add
lea
fmul
dec
jg
xorb
add
mov
and
rcl
stc
shrl
xchg
xchg
add
mov
scas
out
jb
lods
pop
shl
cwtl
insl
adc
daa
cmp
adc
and
test
or
inc
aaa
incl
add
cltd
call
fsubs
jecxz
into
add
scas
int
shll
fldenv
mov
mov
insb
out
jno
enter
and
aad
fidivrs
xchg
dec
add
mov
arpl
jmp
push
rcr
vpshuflw
or
xchg
gs
adc
in
lods
jae
pusha
ret
stc
dec
pop
dec
loop
sbb
or
lret
add
stos
insl
mov
mov
cwtl
jge
incl
push
lea
push
add
jge
xor
lret
or
lods
mov
push
pop
push
or
jne
cmp
outsl
add
adc
cmp
sbb
dec
add
ret
hlt
test
pop
lret
sahf
shrb
cmc
mov
mov
pop
inc
mov
addb
sbb
cmp
xchg
cli
cmp
ss
xchg
mov
mov
sbb
jmp
addb
cwtl
test
insb
lahf
xchg
push
add
leave
xor
sarb
inc
xlat
jne
xchg
sbbb
sarb
lods
fdivs
jb
adc
scas
push
add
pushf
cmpb
data16
dec
mov
dec
mov
imul
test
std
insb
dec
fisttps
sub
mov
inc
scas
mov
adc
cmp
mov
stc
jae
iret
or
aas
icebp
mov
ss
mov
mov
test
mov
ja
sti
and
rcrb
xchg
pop
leave
lahf
leave
push
lea
aad
dec
mov
push
lods
xchg
lods
xor
dec
dec
cmp
jg
jge
mov
push
xor
push
lock
scas
jg
jne
test
divb
std
mov
in
test
fldenv
lahf
in
xor
jae
or
add
dec
jp
mov
add
sub
jecxz
mov
mov
pop
mov
xchg
add
push
and
mov
dec
jnp
add
xorl
pop
pop
push
test
sub
andl
lock
addr16
mov
into
add
shll
out
or
mov
sbb
cmp
not
cwtl
ds
test
leave
pusha
loopne
push
test
xchg
inc
in
xor
pop
outsb
movsb
jbe
arpl
xor
xor
pop
inc
mov
and
test
cld
cmp
cmp
cmp
or
repz
loopne
cmp
xchg
test
mov
push
inc
cmp
daa
and
push
xor
sbb
shlb
fucom
add
cmp
sbb
mov
lret
mov
xor
cld
inc
xchg
xor
mov
int3
dec
sbb
std
sahf
mov
jnp
sbb
pop
lea
cmp
dec
stos
mov
mov
in
stos
cmp
jo
out
jbe
hlt
push
das
mov
push
xchg
fmull
outsl
iret
mov
dec
xchg
lret
test
roll
mov
sub
jbe
push
in
push
mov
push
jge
or
sbb
jno
xlat
repnz
sub
repnz
add
in
std
add
stc
lret
pop
dec
and
cmc
mov
rclw
cmp
in
mov
push
out
shll
out
dec
mov
pop
lret
jnp
ds
add
xor
loopne
je
les
lahf
pop
aam
mov
xchg
rclb
xchg
or
xchg
movsb
xchg
mov
cmc
out
mov
inc
mov
lods
repz
arpl
mov
dec
testl
orb
push
xchg
jne
xlat
xor
inc
lea
pusha
pop
pop
repnz
cmp
js
lret
and
imul
cwtl
js
xchg
mov
scas
cmpsb
inc
add
in
ret
hlt
jmp
add
cltd
pusha
xchg
scas
adc
cmc
mov
ljmp
lds
enter
loopne
test
insl
push
jne
push
repnz
mov
lods
mov
insb
test
xchg
xor
sbb
xor
je
lds
adc
add
pop
addb
pop
hlt
cmp
outsb
add
notb
or
pop
sbb
dec
adc
push
das
movsb
cli
pusha
xor
test
inc
jne
enter
fmull
fistl
sub
xchg
rorl
jnp
popa
fcompl
pop
or
nop
mov
jns
lock
dec
xchg
loope
cwtl
in
fnstcw
shll
cmpsb
or
adc
je
or
sbb
das
and
ficoml
mov
shll
cmp
clc
or
pop
xor
cwtl
mov
mov
movsl
imul
xchg
cmp
leave
fstps
adc
adc
rorl
cmp
mov
out
push
cwtl
jge
fwait
xchg
lea
adc
shlb
sub
adc
rcrl
pop
aaa
outsb
xlat
in
mov
inc
imul
mov
mov
inc
lea
mov
push
arpl
and
cltd
icebp
sbb
add
jl
cld
xor
mov
and
lret
das
pushf
stc
into
loop
push
add
pop
sbb
push
or
scas
mov
xor
es
add
loopne
aaa
sub
jmp
mov
bound
int3
adc
test
cli
xor
cltd
adcb
push
pop
lahf
xlat
repnz
or
int3
fwait
xlat
adc
and
sbb
sbb
inc
jae
pop
lock
call
push
mov
mov
and
outsl
aam
jmp
pop
and
scas
test
cwtl
sub
daa
or
mov
jne
rolb
push
mov
out
clc
lahf
pop
pop
test
fs
sub
add
xchg
in
out
iret
cmp
cltd
aam
dec
xchg
cmc
adc
adc
int3
inc
xor
push
fcmovu
arpl
das
dec
cltd
and
jo
fcoml
jb
rorl
sti
adc
ds
xchg
cmp
jmp
xlat
jp
ret
icebp
lods
inc
add
in
outsl
lock
add
insb
or
sub
sbb
mov
push
add
jno
xchg
icebp
push
andl
add
rcll
or
or
das
cmp
push
push
stos
jne
insb
and
and
xchg
adc
jg
mov
cmp
cwtl
and
in
ret
mov
lock
xor
stc
lock
mov
mov
cmpsb
out
push
aad
scas
add
mulb
xor
add
and
xor
pusha
and
mov
cmpsl
mov
mov
push
mov
fdivrp
xchg
lret
test
addr16
dec
fnstcw
sub
insl
jp
or
sarl
mov
push
fisttpl
imul
lret
xlat
push
mov
inc
movsl
and
popa
jecxz
int3
push
add
in
xor
adcb
pop
gs
pushf
push
jmp
pop
in
leave
pop
pop
sbb
mov
cwtl
rcll
js
ja
pop
or
aas
gs
lods
mov
push
cwtl
xorl
xor
jecxz
imul
jl
xor
fnstsw
das
hlt
xor
insb
sti
stc
xchg
push
fcom
mov
push
sub
inc
mov
lds
inc
arpl
jno
inc
aad
movb
out
push
mov
loop
bound
inc
push
push
jmp
xor
ret
xor
sbb
loop
or
fisubl
xor
inc
inc
mov
sbb
cmp
test
add
xor
call
std
aas
sar
xchg
pop
adc
loop
jnp
push
ret
add
sbb
dec
jl
iret
pop
incl
and
data16
mov
and
pop
or
jg
xchg
xchg
mov
xlat
sub
out
test
addl
push
loop
sub
lcall
jb
leave
cs
mov
movsl
or
addr16
test
fsubrs
aaa
pop
fst
push
cmp
mov
push
push
xlat
push
pushf
inc
leave
xchg
enter
es
mov
jae
xchg
pop
int
fidivrl
ds
pop
stc
and
ljmp
jmp
in
add
inc
fwait
dec
imull
inc
stc
cs
mov
pusha
push
outsb
lds
sbb
inc
test
iret
pop
int
enter
mov
pop
fisttps
push
or
icebp
or
es
icebp
rcrb
mov
int
jl
sub
ret
ror
cli
rcl
gs
inc
loopne
imull
adcl
push
dec
xchg
mov
fsubrl
lods
out
int3
fnstsw
sbb
iret
inc
dec
push
mov
lds
and
sbb
cli
dec
insb
sub
loopne
cmpsb
ret
mov
rclb
les
lret
scas
imul
push
lock
int
int
loope
xor
out
mov
mov
dec
lds
cmp
cmp
xchg
cs
pop
sbb
xor
js
roll
xchg
andb
clc
std
jne
and
iret
jae
add
mov
dec
pusha
mov
push
pop
xchg
sbb
jbe
xor
lcall
out
inc
rcrl
dec
in
es
dec
sbb
test
rol
sub
sbb
sbb
leave
rcrl
fisubl
ljmp
pop
jbe
or
outsl
jle
lcall
xchg
add
inc
in
and
mov
ret
xchg
lds
sbb
cmp
call
hlt
cwtl
sub
jbe
dec
mov
outsb
push
mov
pop
das
sub
dec
cmp
mov
sbb
sub
ja
les
cld
loopne
repnz
outsb
sbb
inc
sbb
push
inc
rol
into
jae
pop
sbb
inc
aaa
mov
adc
icebp
insb
divl
lea
sub
add
and
outsl
push
fbld
lods
les
jmp
ret
mov
sbb
xor
jbe
push
mov
cwtl
pop
mov
out
pop
test
add
sahf
adc
cmp
sbb
sti
lret
xchg
sbb
pop
addr16
add
push
sbb
stos
adc
xchg
xor
adc
mov
lods
push
lret
icebp
mov
iret
das
xchg
outsb
sub
pusha
inc
rclb
jl
scas
movsb
imul
xor
out
dec
nop
and
cmp
dec
pop
pop
mov
inc
add
xor
pop
into
mov
or
sub
testl
inc
mov
ficompl
aas
cmp
cmpsl
lock
adc
pop
push
pop
imul
jbe
mov
xor
aam
cmpsl
adc
add
sbb
sub
jp
hlt
ret
jne
les
pop
fistps
pop
adcb
push
imul
popa
pop
jle
dec
or
out
pop
inc
les
sub
pop
adc
notl
ret
sub
or
pop
ret
mov
sbb
lret
dec
cli
cli
jbe
xor
jo
adc
mov
mov
add
jns
sbb
cmp
pop
pusha
int3
jb
fnstsw
pop
arpl
push
mov
ficomps
or
int
fcompl
push
mov
cs
divl
mov
stos
subl
test
add
out
dec
loope
lds
xor
dec
jbe
mov
aas
imul
aam
out
pop
sbb
sub
shll
flds
test
xchg
cld
clc
cmp
sub
adc
data16
cs
push
sub
jns
push
push
lahf
rolb
out
jecxz
js
push
push
popf
sbb
into
out
and
jo
repz
sub
cmp
inc
xchg
leave
test
jns
in
out
cli
lea
and
add
xchg
loopne
js
bnd
dec
hlt
mov
sbb
fidivrs
xchg
sub
ficompl
dec
mov
hlt
pushf
sbb
dec
cwtl
ret
inc
mov
pop
repz
nop
push
hlt
movsl
mov
inc
mov
add
test
sub
adc
iret
cmp
jae
aas
shll
fincstp
leave
dec
dec
mov
int3
dec
stc
push
jae
lock
or
mulb
outsb
shrl
gs
lds
lahf
sub
jecxz
gs
sbb
add
jne
push
div
xor
mov
lret
js
mov
loopne
inc
scas
dec
imul
icebp
into
ret
or
mov
inc
int
ds
inc
add
xchg
test
sub
and
cmp
jmp
ret
lock
loop
push
movsl
jne
iret
int
or
dec
mov
movsl
imul
mov
adc
fdivrs
sarl
vcvtpd2dq
sti
cmpsb
lcall
lock
and
mov
int3
push
and
xor
adc
sbb
xor
enter
daa
dec
fs
stos
sbb
sbb
cwtl
jge
xchg
lret
mov
add
adc
rcrb
pushl
es
jmp
push
jb
leave
aaa
fadd
and
data16
sahf
mov
das
call
jo
out
out
mov
xchg
insl
or
push
repz
ror
xor
fldenv
mov
fistpl
xchg
stc
mov
sub
add
fisttps
int
in
inc
js
mov
sahf
xchg
int
jbe
mov
int
incb
dec
loop
enter
lock
sub
adc
and
mov
subb
mov
bound
je
pop
movsl
pusha
lret
pushf
lods
mov
sub
jmp
or
fcomip
in
xor
sbb
movsb
adc
daa
int3
push
int3
mov
xor
incl
jnp
decl
stos
fnstcw
xor
neg
pop
mov
dec
cs
ret
push
insl
insb
push
dec
loope
ret
repnz
out
movsl
pusha
lcall
dec
fstpt
push
mov
je
xlat
jae
adc
sub
cld
cmp
lock
ds
insb
push
xchg
mov
insl
aad
or
adc
sub
clc
push
mov
inc
dec
jns
mov
xchg
repnz
insb
enter
xchg
pop
mov
sub
mov
flds
mov
imul
add
imul
cmp
mov
lock
xor
add
pop
and
inc
movsl
test
int
mov
fistl
fcmove
inc
pop
push
jmp
clc
fwait
popf
rolb
ror
adc
outsl
and
aam
xchg
fisttpl
fstpt
popa
mov
pop
movsl
cmp
std
cmc
leave
rol
addr16
dec
pop
mov
insl
cmp
add
add
and
dec
jge
inc
scas
add
stos
aam
shrb
jnp
ret
jae
icebp
outsl
sahf
lcall
mov
out
xor
xchg
cwtl
xlat
jno
iret
ror
xor
repnz
add
adc
in
fs
jne
sbb
sti
shrb
mov
jno
xchg
cmc
imul
cltd
pop
cmpsb
scas
lret
test
fimuls
into
adc
mov
cmpsb
jo
xchg
adc
scas
xchg
sbb
mov
xchg
mov
mov
cmc
mov
fs
loop
mov
and
int3
test
sub
outsl
mov
lret
mov
inc
mov
xchg
fsubrs
inc
pop
faddl
outsl
xchg
cmpsl
xchg
sub
push
daa
xor
and
lds
in
fsts
sbb
xchg
lahf
jmp
xchg
inc
mov
out
movsb
sbb
sti
xor
movsl
out
push
sti
aam
push
stos
stc
pusha
scas
nop
aam
mov
mov
lea
lahf
aaa
sub
out
das
pop
outsl
mov
xchg
data16
mov
mov
pop
hlt
into
aaa
sub
cld
icebp
sbb
jnp
aad
or
les
sbb
imul
sahf
dec
or
mov
cmp
loop
int
push
xchg
pop
aam
dec
mov
ficomps
or
mull
or
shlb
ds
mov
mov
mov
scas
cmc
lahf
adc
jp
cmp
sarl
out
and
mov
inc
lds
ret
das
xor
pop
adc
mov
call
or
jns
jnp
and
fidivs
adc
ficoml
cmp
xor
andl
jns
mov
std
sbb
lret
sbb
cmc
icebp
pop
push
lret
data16
int
mov
addr16
jmp
add
xorb
fadd
inc
int3
fidivs
pop
imul
pushf
add
outsb
jbe
je
or
mov
ret
fsts
add
mov
add
mov
jl
bound
pop
sbb
jecxz
lds
popf
push
xchg
jle
adc
mov
sbb
mov
inc
push
orb
add
inc
lret
insl
xor
sbb
jg
out
inc
js
outsb
dec
mov
insb
cmp
bound
cmp
and
std
ljmp
inc
loope
sbbb
lea
xchg
dec
adc
lods
cmpsl
lods
fwait
push
out
imul
lret
ret
decb
mov
popf
icebp
loopne
jl
sub
mov
idiv
pop
insb
pop
add
dec
cwtl
mov
scas
sbb
xchg
sub
mov
dec
jle
sub
cmpl
or
sub
cwtl
loop
paddsw
lcall
sbb
mov
xor
fcoms
scas
jbe
adc
pop
push
adc
popa
cmp
push
lcall
xchg
nop
pop
test
push
in
int
push
or
sahf
cmpsl
dec
pop
imul
int3
sbb
sahf
dec
ss
popa
test
shlb
aaa
or
mov
pop
call
or
dec
adc
test
push
xorl
mov
add
test
gs
movsb
ss
inc
jae
or
test
loop
aad
jle
push
jb
xchg
into
fstl
out
out
jmp
add
adc
ljmp
loopne
repz
inc
jb
mov
mov
pop
sbb
pusha
inc
les
sub
push
das
lods
pop
lahf
push
incl
cmpsl
mov
pusha
dec
sahf
lods
popf
xlat
inc
movsl
inc
mov
in
or
lcall
mov
adc
fsubrs
lock
test
or
push
push
ficoml
xchg
adc
arpl
cli
cmp
call
mov
dec
fistpl
movsb
pop
sub
inc
pop
addl
cmp
out
rorl
movsl
and
or
bnd
lahf
rcll
jg
addb
hlt
pop
loop
lea
mov
xchg
xchg
add
ja
aaa
aad
in
stc
xor
and
movl
and
push
or
in
dec
jo
lcall
in
int
das
out
fmul
xchg
mov
sub
add
push
andb
mov
xchg
pop
aam
pop
pop
sub
imul
gs
adc
push
adc
ljmp
adc
cltd
dec
cmp
jbe
add
xchg
movsl
adc
sbb
fs
out
mov
es
outsl
mov
fwait
aas
test
push
scas
sub
mov
lret
ds
dec
pop
test
xor
test
movsb
and
ffreep
xchg
mov
pop
xchg
cmp
cli
or
push
out
push
add
aas
push
push
int
mov
sahf
clc
add
ret
pop
sbb
inc
stos
xor
pop
adc
sub
mov
out
adcb
fimull
movsb
dec
fstps
fisubl
mov
mov
iret
clc
mov
fmuls
lock
push
cmpl
dec
jns
fdecstp
mov
test
xchg
xor
mov
push
imul
or
add
leave
lcall
push
loopne
xor
add
jle
or
push
sbb
xor
clc
outsb
pushf
repnz
popf
cli
push
mov
cld
pop
adc
dec
xchg
and
push
fsub
aas
stc
mov
jne
imul
mov
mov
push
or
sti
adc
cld
imull
mov
in
stc
repnz
lret
andl
dec
loopne
jae
dec
mov
jmp
rcrb
test
fimull
inc
adc
mov
sti
pop
xchg
or
in
jge
push
and
lods
sahf
xchg
stos
and
pushf
lea
faddl
movsl
add
adc
notb
jmp
scas
loope
mov
nop
outsb
pop
cs
sub
ror
push
mov
test
push
dec
jns
rolb
es
push
adc
push
push
mov
fisttps
pop
push
aas
pop
push
adc
fwait
xchg
lret
xchg
inc
sbb
hlt
icebp
push
mov
add
arpl
push
sahf
shlb
or
arpl
sub
sub
mov
lods
and
lahf
sbb
and
scas
mov
iret
std
fldcw
sarl
stos
xor
lret
jae
mov
jae
cmpsl
sub
outsl
pop
std
mov
and
xchg
sub
test
xor
pusha
add
jne
fistps
lds
cmc
mov
fistpl
test
int
xchg
fsubrl
xchg
stc
mov
dec
mov
xor
and
inc
cmp
mov
push
loopne
pop
ret
dec
push
pop
cmp
xor
push
loop
fists
lret
aam
mov
in
dec
or
mov
pop
push
push
lds
sbb
sbb
das
inc
or
xchg
in
out
push
pop
jecxz
call
sub
mov
jns
mov
cmpsl
jecxz
sub
jns
pop
rclb
inc
ret
lea
dec
lods
xor
and
repnz
push
dec
sub
shrl
and
in
loope
sub
jg
sbb
pushf
sub
xor
rol
ss
int3
jl
popa
jle,pn
out
push
sub
push
xchg
std
mov
xchg
lahf
jg
cli
movsl
cli
sbb
mov
dec
inc
adc
cli
test
add
aas
in
xchg
lret
and
mov
outsl
push
lds
pop
pop
jg
and
lcall
insb
dec
mov
mov
divl
jnp
or
mov
aam
out
inc
lods
and
lods
push
jmp
xchg
mov
ret
mov
cmp
jne
aam
imul
leave
mov
clc
scas
push
in
adcl
orl
xchg
cmp
adc
cmpsb
movsb
adc
or
or
and
loopne
xchg
adc
lods
dec
jl
int3
xchg
or
xchg
inc
insb
cs
or
movsb
cmp
mov
mov
shll
js
icebp
jns
ret
cmp
dec
cs
mov
mov
jnp
sarb
cmp
mov
aas
jg
sbb
shl
sbb
jl
mov
push
cmp
add
pop
xchg
inc
mov
scas
xchg
inc
jecxz
rcl
aam
fwait
xchg
in
cmp
iret
leave
push
cs
mov
push
mov
inc
ror
data16
insb
cltd
lret
lea
jecxz
push
and
sub
mov
ja
mov
hlt
xchg
push
aaa
movsl
sbb
inc
cmc
add
push
pop
fcmovnbe
aam
xchg
push
icebp
xchg
pop
or
pop
shl
insl
stos
ficoms
data16
lcall
xor
scas
pushf
addr16
enter
sbb
xchg
pusha
lea
scas
pop
lcall
ja
call
call
xor
mov
mov
adc
movsb
das
lea
jbe
mov
or
pop
aaa
popa
jns
or
dec
lret
push
ret
iret
in
es
in
stos
sbb
push
jns
pusha
push
adc
clc
or
or
pop
jns
andl
sti
cmp
test
jae
push
cmp
in
hlt
push
pop
and
js
sbb
ja
test
jp
sub
ds
nop
pop
xor
jle
xchg
in
push
push
cmp
xor
push
sub
fdivs
clc
subb
or
shrb
aam
test
arpl
sti
xorl
push
sub
sbb
mov
sub
cltd
testb
xchg
cld
push
sbb
in
lahf
inc
mov
aaa
cmp
push
add
mov
dec
lret
hlt
add
mov
and
mov
movsb
shrb
in
mov
aam
xchg
in
inc
mov
pop
jns
aas
push
add
outsl
or
repz
test
aaa
push
scas
adc
mov
mov
js
adc
cwtl
mov
jge
cmp
subl
jl
ss
jae
lret
clc
out
jbe
dec
push
lock
sub
mov
mov
push
popf
in
popf
sbb
ds
fldenv
mov
cs
add
imul
out
inc
inc
mov
xchg
fs
out
push
or
sub
or
and
fxch
js
sti
dec
int3
rolb
test
int3
adc
mov
mov
xchg
je
push
xchg
int
jne
test
notl
push
cmp
mov
call
movl
or
dec
cld
enter
jae
cld
inc
fidivrl
js
or
cmp
aam
std
sti
lock
dec
sub
mov
xchg
or
imul
aam
sbb
das
xor
fcmovbe
rorl
ret
dec
stc
mov
push
adc
sub
mov
test
sub
mov
jns
mov
addb
sub
add
pusha
aaa
in
mov
pop
sub
inc
add
fucom
cmpl
mov
cmp
ljmp
stc
add
ret
cwtl
mov
jnp
aam
ljmp
mov
xchg
adc
pop
mov
xchg
adc
jne
jl
pop
mov
jne
sti
sub
mov
cmpsb
fs
inc
fwait
mov
inc
adc
movsl
out
es
fs
or
leave
mov
gs
in
out
lods
fimuls
test
sub
cwtl
push
adc
mov
orl
pop
dec
pop
sahf
pop
popa
lret
jle
jb
push
and
lret
sub
push
add
ret
test
push
rorl
and
xor
daa
test
mov
jmp
int3
push
fsubp
or
sahf
pop
fcompl
sarb
insl
scas
les
sub
popf
negb
je
in
sbb
xchg
daa
cs
xchg
stc
dec
shrb
scas
popa
or
jp
push
xor
mov
pop
push
imul
jne
stc
jne
mov
pop
push
std
std
pop
pop
jge
test
aas
mov
xchg
sub
cmpps
idiv
inc
daa
dec
pop
mov
enter
fmul
and
xchg
into
lock
push
fadds
dec
jbe
inc
xorl
push
and
jns
inc
outsl
aaa
in
adc
lock
pop
roll
loopne
dec
cltd
lods
dec
inc
xchg
scas
aas
dec
pop
mov
jae
push
popa
xchg
or
jnp
lcall
aas
aad
dec
cld
sub
xchg
andb
mov
and
jno
stos
jbe
ljmp
fmull
sbb
ds
in
dec
mov
sub
push
imul
sub
loope
leave
jecxz
mov
jnp
adc
or
jmp
or
rcrb
xchg
negb
cmp
jb
push
mov
cld
bound
xchg
sub
popa
cwtl
rcrb
fucom
aaa
lock
jl
push
in
gs
or
pop
icebp
fildl
mov
sahf
jno
cmc
pop
pop
sub
mov
mov
inc
mov
cmp
insl
mov
pop
ja
lret
iret
out
mov
mov
inc
das
jno
imul
dec
jns
mov
jg
cmp
loopne
jmp
ja
ja
fs
andb
dec
mov
subb
sub
jb
mov
cltd
inc
pop
push
mov
ss
dec
push
sub
sub
sub
lock
mov
xchg
mov
pop
out
jno
je
push
sti
xor
push
adc
in
inc
jbe
mov
ficoms
stos
pop
inc
sbb
mov
jnp
xchg
cmc
push
aam
xchg
or
inc
and
scas
sahf
jae
mov
cli
mov
dec
repz
outsl
add
aam
pop
xchg
lds
push
std
and
dec
insl
je
mov
or
inc
orl
sar
sbb
push
dec
cwtl
outsb
xor
fstpt
in
shlb
es
int
xchg
adc
insl
xchg
lods
xchg
mov
xchg
cwtl
loop
mov
adc
inc
xchg
hlt
xlat
idivb
mov
subl
mov
inc
enter
mov
fwait
jmp
push
and
sub
lock
inc
dec
test
mov
mov
stos
xor
lahf
popf
out
jle
xchg
sbbb
loopne
and
mov
jmp
in
std
push
arpl
shll
sbb
inc
cmpsl
lods
add
scas
jnp
lret
into
lret
enter
shlb
test
mov
and
push
loope
cmp
ret
dec
jmp
cwtl
test
add
push
mov
rorb
xor
add
jp
push
dec
imul
xchg
push
imul
fldenv
cwtl
fistpl
popa
lret
mov
jb
enter
dec
mov
jne
fistl
das
out
sub
popf
sbb
daa
or
jmp
adc
int3
sub
jns
cmpsl
mov
xor
xchg
cmp
int3
cmpsb
push
or
rclb
int3
push
sub
clc
test
mov
pop
xchg
adc
cld
xor
mov
aas
xchg
or
pop
dec
sub
jmp
mov
sahf
in
jl
cmpsb
xchg
xor
jns
dec
ficoml
adc
sarl
ja
ret
out
addb
pop
xchg
daa
ss
jle
ret
jmp
cmp
das
xor
sub
jo
insb
rclb
iret
pop
out
aam
pop
insb
cmpsl
or
out
inc
add
jo
clc
out
int3
jmp
test
add
jbe
jne
cmp
jl
stc
xorb
fisubs
adc
xchg
jge
outsl
out
outsb
stos
inc
scas
inc
imul
ds
insb
shrb
mov
movsl
mov
or
push
in
ret
divl
adcl
andl
adc
xchg
cmpsb
sbb
loopne
dec
mov
adc
mov
stos
imul
jle
add
repz
test
inc
add
cmp
nop
gs
adc
dec
and
add
sbb
or
lea
sbb
cmp
adc
rolb
xor
lods
aaa
xchg
cli
cmpsb
adc
mov
dec
outsb
scas
sbb
outsl
test
mov
sarl
jp
mov
int3
dec
jmp
adc
outsb
pusha
mov
ss
mov
lods
inc
add
adc
out
or
push
add
xor
mov
mov
cmpsb
ja
repnz
out
mov
xchg
push
add
shll
sbb
dec
das
jp
adc
pop
cmc
in
mov
addr16
gs
scas
fs
pop
push
dec
mov
add
dec
ret
lock
or
jbe
and
jbe
mov
add
mov
pop
pop
movsb
push
jbe
pop
push
mov
push
mov
addl
bnd
das
push
xchg
fadd
xor
xor
ret
add
xchg
and
sub
jne
inc
scas
mov
shlb
insb
dec
sarb
fwait
daa
xor
pop
arpl
dec
in
outsb
js
nop
cmc
jnp
rol
xchg
jbe
mov
pop
xchg
cltd
ds
iret
rorl
in
mov
lea
adc
cmp
dec
pop
and
add
pop
mov
or
xchg
mov
xchg
cmc
imul
call
adc
pop
std
out
scas
repz
mov
cwtl
jp
or
shlb
daa
pusha
lret
sbb
mov
outsb
cmp
sarl
or
mov
or
dec
adc
in
mov
or
cmp
mov
ss
push
fstps
xor
pop
out
jae
lret
jnp
dec
sbb
sbb
aad
mov
out
mov
jno
or
icebp
sbb
pusha
mov
imul
push
mov
sbb
inc
popa
lods
test
push
int
fndisi(8087
mov
lock
pop
mov
rcll
and
push
sahf
repz
stos
rcrl
sub
dec
insb
pop
das
mov
lds
into
mov
fcomip
add
push
fimuls
imul
cmp
mov
push
inc
mov
and
add
loopne
inc
pop
cmpsl
mov
das
test
or
jo
inc
sahf
pop
icebp
repnz
mov
fcmovnb
cmp
lahf
jg
in
out
stos
sbb
mov
stos
push
push
in
ja
cmp
je
push
or
dec
lahf
and
sub
xchg
cmp
push
or
add
sub
sbb
xchg
loope
out
or
sbb
inc
cmp
inc
sbb
pop
imull
jo
loope
cmp
xor
in
add
in
in
cmpsl
cs
pop
lods
inc
adc
jl
les
push
movb
jne
stc
dec
cltd
jl
clc
inc
jne
out
into
pop
cmp
jge
jo
push
mov
jns
dec
loope
js
sarb
add
pop
dec
push
pop
adc
insl
jle
out
lods
xchg
dec
push
lret
mov
xchg
sbb
fs
cmp
sbb
dec
ret
test
or
mov
hlt
cli
add
call
add
sbb
mov
xlat
ss
cld
cmp
addr16
mov
mov
lea
in
push
lret
cwtl
mov
mov
mov
xor
daa
xor
es
lahf
fimull
or
lcall
aam
xor
bound
sub
lods
mov
out
push
scas
inc
js
jmp
insb
int3
jge
fistps
adc
je
push
pushf
xor
sahf
xchg
aaa
xchg
pop
cmp
inc
dec
lcall
mov
inc
xchg
movsb
or
jo
daa
ja
push
lret
aam
adc
lods
or
mov
and
push
pop
or
pop
mov
push
mov
add
imul
jp
or
push
cwtl
xchg
imul
pop
inc
add
std
mov
xchg
ret
xchg
inc
inc
ds
outsl
adc
cmp
mov
xchg
shrl
inc
fbld
xor
jb
adc
stos
xchg
mov
xor
cmp
fisubl
lret
pop
xor
and
bound
lea
adc
pop
mov
jb
sbb
mov
jle
gs
test
xchg
divb
mov
adc
mov
lret
adc
fsubrs
fcmovnbe
adc
pop
pop
pop
je
push
adc
out
div
sar
lock
xor
rcll
lods
roll
xor
adc
cmp
dec
cmpsb
sub
jns
mov
imul
fisttpll
dec
in
out
inc
popa
push
ficompl
clc
xchg
lret
xchg
jnp
stos
nop
cli
lods
imul
imul
sbb
add
outsb
adc
ljmp
inc
cwtl
or
and
mov
xor
jno
aaa
and
ror
fcmovbe
and
mov
decl
lods
repz
jbe
ss
dec
push
out
mov
loope
mov
xor
jle
jb
aas
movsl
mov
xchg
sub
rorl
pusha
xchg
push
inc
and
push
addr16
arpl
imul
test
leave
cmpl
lahf
dec
lcall
mov
xor
sti
inc
fucomp
xor
loop
mov
push
jp
or
xor
jbe
sub
mov
sahf
or
insl
pop
movsb
xor
sbb
cld
gs
sub
outsb
mov
cmp
out
cmpsl
rorb
imul
and
test
idivb
movsb
repnz
jnp
daa
mov
pop
outsb
roll
cld
arpl
mov
pop
ds
cmp
cmp
hlt
pop
or
sarb
movsb
mov
cwtl
test
pop
jae
xchg
fimuls
lods
jae
push
inc
out
je
into
pop
inc
pop
mov
shll
add
cltd
mov
std
mov
mov
add
push
mov
daa
inc
shl
xchg
fwait
into
sub
adc
sbb
sbb
cmp
add
sar
repnz
test
lods
mov
lods
sbb
mov
pop
dec
mov
or
hlt
sarl
adc
das
mov
push
dec
mov
cmpb
mov
and
jle
jae
push
repnz
cmp
stos
and
sub
fists
int3
or
stos
lcall
cmp
inc
lret
mov
ret
into
repnz
sub
add
sub
or
lcall
popf
and
clc
bound
test
mov
sbb
fdiv
ret
testl
mov
ret
aad
pop
scas
sub
pop
movsl
mov
xchg
popf
push
inc
into
cmp
rorb
or
jmp
cmp
outsb
xor
mov
sbb
add
test
jae
add
push
int
scas
xchg
repz
in
add
imul
jg
loope
xchg
pop
test
fidivrs
dec
lods
sahf
mov
into
pop
dec
lcall
int
mov
cmc
pop
and
into
push
jae
pop
sub
adc
mov
nop
pop
das
or
popl
xchg
mov
push
sub
add
sbb
notl
mov
stos
and
push
aaa
das
mov
aaa
aaa
rol
jg
mov
mull
jns
jg
xchg
mov
mov
ret
pushf
shlb
movsb
leave
dec
subb
div
sub
sub
mov
mov
inc
test
adc
mov
inc
inc
lods
or
jno
jmp
cld
or
push
clc
aad
jle
xchg
adc
cwtl
addr16
xchg
icebp
negl
jb
pop
xchg
ret
or
mov
add
push
xor
js
roll
hlt
xchg
xlat
inc
fst
loope
cld
push
xor
sbb
aaa
lret
arpl
sbb
je
mov
imul
cmp
xchg
push
divps
in
or
jns
in
push
adc
fdivp
pop
sbb
pxor
jmp
ljmp
in
stos
rcrl
push
mov
or
xchg
mov
cmp
dec
sub
mov
xchg
pop
xchg
or
daa
cld
std
sbb
test
sub
push
rcrb
sub
xor
outsb
inc
out
mov
ljmp
pop
je
cwtl
adc
lds
imul
nop
inc
test
sbbb
push
xor
cmp
push
xchg
mov
es
pop
mov
gs
xchg
cwtl
cmpsb
in
bound
test
xlat
push
dec
out
mov
adc
adc
clc
js
dec
cli
ljmp
fwait
mov
aad
sub
aam
pop
push
cmp
ss
scas
and
xor
xor
xor
shlb
mov
ret
cs
mov
and
and
jmp
jge
jo,pn
out
dec
subb
fsubrs
xchg
arpl
cltd
push
mov
cld
mov
dec
mov
leave
dec
mov
xchg
ja
insb
pop
xchg
ret
and
jne
push
sub
arpl
sbb
or
das
rcll
cmp
push
stos
movsb
cmpsw
test
jne
test
or
aaa
push
adc
insb
cmpb
and
mov
in
inc
push
cs
xchg
adc
movsl
call
shl
out
pop
movsb
sahf
sub
mov
loop
sbb
xchg
loope
adc
push
pop
xor
or
gs
fs
fwait
mov
imul
and
dec
xchg
repnz
inc
jmp
adc
inc
jae
sbb
pop
jne
pop
inc
dec
push
push
or
dec
cwtl
xor
filds
test
xchg
mov
dec
fs
test
jecxz
fcoms
inc
insb
imul
gs
sbb
rorb
in
pop
nop
out
pop
into
add
push
in
dec
adc
xor
lea
mov
dec
leave
xor
lods
iret
ret
gs
rolb
push
jge
mov
cmp
sbb
jnp
lods
adcb
push
jl
jmp
in
scas
mov
ss
xor
jnp
lret
imul
ret
jg
mov
mov
movsb
mov
mov
int
lods
dec
mov
push
or
pop
push
or
stos
gs
add
mov
mov
gs
and
push
lahf
adc
inc
and
sub
lea
pop
lahf
lods
xorb
pusha
in
xor
jns
jne
adc
or
and
mov
push
pop
dec
xchg
vpmaddwd
inc
hlt
xchg
pushf
mov
jno
mov
push
aaa
cmp
insl
push
sbb
vmulsd
je
aaa
adc
xchg
sbb
cmpsb
pop
out
mov
sahf
xchg
and
scas
int
sbb
inc
fcoms
mov
mov
rcrl
jne
repnz
xchg
adcl
aaa
xchg
sub
into
pop
ds
shrb
push
push
enter
jmp
test
les
imul
test
or
ss
int
fdivrs
xor
and
mov
fld
insl
nop
adc
call
pop
push
sbb
and
or
lret
test
iret
mov
vmovq
jl
jle
jne
jae
bound
adc
and
movb
rep
mov
and
cmp
jb
loop
xor
mov
in
dec
dec
and
ror
mov
mov
mov
adc
lds
pop
negl
push
cmp
jp
mov
jge
adc
pop
adc
or
xchg
or
lods
jno
push
test
push
adc
sbb
or
pop
fsubrs
push
daa
jns
repnz
mov
inc
xor
push
mov
out
je
cs
pop
jmp
lods
loop
and
adc
mov
dec
xor
xor
xchg
pushf
jle
pop
cmp
jne
fstp
mov
xor
mov
stos
or
lahf
mov
adc
in
rolb
pop
push
dec
ret
adc
xor
add
mov
xor
mov
inc
data16
shll
sub
in
pop
lahf
and
cmpl
jecxz
sub
movsb
push
pop
push
push
and
ljmp
or
jecxz
jl
stc
or
int3
or
lods
movsl
ds
scas
mov
inc
cmpsb
or
in
pop
int3
adc
pop
cs
out
sbb
mov
pusha
mov
push
or
adc
sbb
cmp
sub
lret
xchg
cmpsl
repz
add
aad
dec
add
out
lock
popf
or
insl
addr16
bound
mov
jne
cmp
cmp
stos
jae
cmp
shlb
inc
popa
fdivs
pop
jnp
push
sbb
aaa
mov
dec
stos
cmp
fs
mov
aad
cmp
pop
mov
leave
fsubr
fs
leave
add
push
dec
cmc
or
mulb
movsb
out
dec
insb
ljmp
js
hlt
add
pop
dec
push
mov
rcll
iret
mov
pop
roll
in
dec
sti
pop
mov
std
std
das
ret
mul
sub
clc
fs
lock
xchg
jge
pop
repz
in
mov
cmp
nop
mov
mov
cmp
outsl
lret
and
pop
xchg
lcall
mov
dec
or
pop
ja
shrl
rorl
push
jle
sbb
ret
push
repz
inc
mov
and
lret
mov
pop
fsubrl
or
or
or
pushf
or
pop
push
test
dec
inc
mov
sbb
fisttpl
leave
insl
push
jb
adc
mov
test
push
push
add
xlat
cmpsl
dec
lods
mov
sbb
mov
jl
cmp
jp
hlt
push
cmpsb
into
mov
cli
dec
add
mov
sbb
test
pop
divl
add
push
cmc
sub
lcall
jp
fiaddl
mov
inc
leave
dec
push
pop
push
and
mov
mov
add
lea
popf
aas
or
int
dec
mov
imul
pop
or
mov
xchg
lods
popw
mov
cmp
cmpsb
sbb
pop
clc
or
xor
adc
jne
pop
movsb
add
xchg
adc
fldcw
test
divl
rorb
sbbl
fisttpl
mov
sbb
insb
xchg
jl
jg
jb
cs
shrl
les
test
jl
lods
das
movsl
mov
sti
lds
mov
jnp
icebp
test
mov
jo
rclb
insb
repnz
mov
dec
inc
pusha
push
gs
loopnew
pop
push
push
movsb
cwtl
dec
mov
sub
arpl
sbb
dec
jp
push
add
cld
dec
jo
pop
fmull
xlat
mov
lods
fmull
adc
int
rep
jl
in
ss
cmp
mov
fs
lcall
pop
add
sbb
loope
pop
lods
out
xchg
scas
jmp
cmp
cmc
xchg
scas
and
add
jno
push
mov
sbb
or
and
and
je
dec
or
jge
test
add
in
pop
dec
push
faddl
imul
xor
add
das
or
xor
push
mov
add
rcl
push
in
scas
ss
jge
sub
xchg
jbe
in
arpl
pop
sbb
mov
mov
fstpl
mov
xchg
or
xchg
xor
aaa
xchg
pop
out
sub
push
cmp
gs
fstps
cmp
cmpsb
adc
shlb
lds
xor
sti
ret
int3
xchg
xchg
inc
jle
sti
scas
cs
sub
dec
sbb
xor
sbb
xchg
divl
inc
inc
ds
call
sub
stos
pop
lods
enter
xor
dec
mov
nop
mov
out
je
arpl
jb
int
int
stc
or
xchg
push
or
addr16
push
push
dec
mov
push
mov
mov
in
nop
fxch
xchg
inc
and
xlat
lea
pop
scas
scas
stos
jae
pop
and
mov
cmp
test
into
mov
jp
or
and
ja
jg
enter
push
mov
dec
fsubs
dec
add
andl
dec
ds
pop
das
fistpll
fsubrl
lcall
xlat
or
cltd
mov
mov
insl
lods
add
inc
iret
cwtl
insl
mov
add
scas
rcr
push
fldcw
js
and
bound
popf
adc
test
push
adc
in
push
push
popa
int
pop
sarb
test
push
jge
sbb
mov
divl
mov
ja
push
dec
push
lds
divl
fdivs
add
or
in
adc
xor
dec
into
lds
lahf
add
cltd
dec
sub
sub
icebp
jnp
push
xor
aad
push
clc
add
xchg
movsl
sub
and
xor
inc
das
fidivrs
jne
cmovbe
push
pop
out
inc
push
xor
mov
sarb
lcall
jmp
icebp
aad
sbb
sub
aad
add
inc
ret
mov
in
inc
push
or
jae
dec
lock
and
pop
or
jo
repz
pop
mov
insl
sbb
cmp
lret
inc
lds
nop
cmpsl
inc
call
jne
push
repnz
orb
pop
sbb
imul
xchg
xchg
adc
push
imul
movq
hlt
iret
mov
inc
and
xor
jo
cmp
sub
pop
lret
sbb
pushf
icebp
add
aas
lret
cld
ss
sub
dec
popa
cs
mov
sarl
daa
clc
rcrb
mov
xchg
jecxz
loop
pop
cmpsl
outsb
sarb
mov
add
sbb
stc
cld
xor
adcb
add
pop
or
sbb
jne
add
xchg
xchg
mov
insb
ret
add
das
out
daa
xchg
jno
pop
jae
ss
sbb
jno
xor
add
sbb
push
sbb
imul
scas
je
int
jns
int3
scas
pop
shr
xchg
push
cmpsl
pusha
mov
mov
movsl
int3
mov
dec
aam
and
into
pop
lcall
clc
xor
and
into
gs
hlt
lret
std
inc
repnz
outsb
inc
mov
ret
fstl
and
dec
filds
movsb
mov
shlb
repnz
pop
pop
sbb
imul
sub
jecxz
movsl
lods
fcom
jge
jecxz
lock
push
in
jmp
ret
test
or
mov
aam
outsb
cwtl
add
dec
xchg
xor
cmp
aam
sub
movsb
insb
pop
dec
pop
addr16
push
mov
leave
test
sub
popa
dec
mov
andb
add
ljmp
mov
cmpsl
aad
and
xor
jno
lock
loopne,pn
les
or
enter
enter
das
jne
sbb
int3
adc
out
mov
jmp
ss
stos
add
xchg
nop
aaa
jl
aam
and
inc
mov
adc
fs
loopne
scas
cmpsl
std
addr16
adc
xor
mov
fdivl
pop
lock
dec
inc
icebp
ret
hlt
adc
pop
adc
cmp
popf
and
pop
xor
xchg
dec
sbb
adc
xor
and
fs
xor
sbb
nop
xor
add
push
lcall
shll
inc
leave
xchg
jnp
mov
xchg
ret
pusha
xor
push
fsubl
adc
pushf
xor
xchg
sub
test
pop
and
sbb
fnsave
sarl
ror
pop
sbbb
cmc
or
adc
xorb
dec
dec
pusha
jp
std
pop
pusha
push
sti
dec
cltd
sub
xchg
jns
inc
mov
loope,pt
call
shl
in
int3
push
cmp
mov
js
inc
je
test
in
rorb
mov
test
sti
jnp
aaa
push
les
test
rclb
fisttps
in
cmp
shlb
push
jnp
mov
adc
fwait
xor
loope
sub
iret
pop
push
cmp
jae
lea
mov
jmp
sub
xchg
repnz
ds
cmp
pop
js
push
cmc
fs
xor
les
rorl
test
or
mov
fs
loope
cltd
les
cmpsl
cwtl
scas
loope
mov
out
xchg
cmp
pusha
sbb
push
prefetch
arpl
sub
cli
imul
sbb
or
push
cmp
add
and
jp
std
jns
or
mov
sub
icebp
mov
inc
pushf
sbb
cmp
lcall
andb
cltd
popa
mov
out
push
jo
pop
popa
js
mov
rcr
or
inc
adcb
pop
test
jge
pop
test
test
sbb
jmp
imul
inc
shll
data16
add
je
adc
outsl
out
ret
loop
cli
pop
inc
jae
pop
xchg
xchg
xchg
mov
xor
movsb
pop
jmp
push
stos
cmp
in
pop
enter
push
test
call
sbb
inc
in
push
stos
out
adc
lock
inc
pop
pop
inc
lods
push
jp
xchg
iret
out
lock
push
mov
outsb
das
int3
push
ret
add
addr16
mov
and
push
xlat
mov
ja
mov
test
adc
sub
loope
inc
lea
or
sbb
inc
insb
jb
or
inc
outsl
cwtl
mov
cmp
adc
push
repnz
into
pop
hlt
push
or
out
std
loopne
ss
push
xchg
add
int3
mov
mov
cmc
push
out
lods
dec
jmp
mov
addr16
cmp
movsb
ljmp
pop
jg
cmpsb
xchg
dec
adc
into
adc
add
xor
pop
bound
cmp
ret
dec
mov
movsl
fwait
sbb
mov
popf
mov
xchg
pop
and
sbb
nop
xor
mov
pushf
rorl
pop
sbb
insb
jno
mov
addl
iret
xor
js
xchg
push
pop
xor
cld
in
sub
pop
xchg
xchg
mov
or
outsl
and
inc
loop
mov
jne
scas
adc
cwtl
test
popa
and
cmp
jge
mov
sbb
sti
stc
adc
add
mov
nop
data16
shll
divl
sub
cmp
pop
mov
add
adc
and
inc
and
psllw
mov
xor
mov
sar
pop
ds
sbb
daa
mov
jge
pop
xlat
xor
push
rcrb
mov
pop
or
pusha
scas
pusha
lcall
or
sbb
pop
pop
loopne
push
call
push
pop
lahf
loopne
bound
mov
bound
inc
nop
popf
pop
sbb
outsb
clc
fcoml
lahf
in
out
ret
or
aad
out
dec
dec
and
push
cmpsl
pop
addr16
pop
pushf
mov
imul
insb
aad
dec
jbe
jl
inc
mov
adc
lock
jecxz
mov
jbe
pop
cmpsl
mov
lock
or
mov
xor
scas
shl
outsl
sbb
cmc
loopne
cmp
out
add
adc
xor
xor
imul
lahf
aam
lahf
sub
push
xchg
lds
adc
inc
xchg
cmp
push
ret
adc
pop
lea
icebp
idivb
jmp
cmp
xchg
aaa
lods
and
jbe
sbb
pop
mov
xor
cmpsl
and
enter
push
mov
ficoms
repz
fwait
adc
mov
xor
popa
popa
jo
or
xchg
stos
sub
and
push
inc
fcmovnbe
fcoms
or
testb
out
loope
or
add
push
jns
push
and
mov
lea
jb
mov
iret
loop
cmpsl
scas
mov
popf
dec
inc
adc
mov
add
mov
pusha
pop
ljmp
incb
xchg
jmp
xor
xchg
jo
mov
and
dec
data16
sub
in
out
pop
jbe
adc
xor
jns
mov
jnp
inc
xchg
sub
mov
cmpsl
nop
cmp
jmp
pop
ficompl
inc
inc
dec
lock
adc
mov
xor
movsb
inc
xchg
pop
sti
sbb
mov
cmpl
and
loope
js
jmp
pop
fwait
stc
jae
aad
push
adc
mov
je
es
inc
enter
ret
xchg
test
add
or
sub
mov
test
fdivs
out
cmp
xlat
fsts
in
pushl
gs
lahf
cwtl
cmc
mov
dec
jne
or
add
scas
or
jae
sbb
jge
adc
test
mov
push
pop
in
mov
pop
push
das
push
and
popa
and
jecxz
pop
loopne
insb
push
jl
lret
stc
repnz
fwait
popa
aad
nop
jl
add
mov
addr16
xor
push
push
rol
les
sbb
sbb
sub
push
mov
fs
clc
mov
cmp
imul
pop
mov
lcall
mov
cmpsl
lock
les
mov
outsl
fcmovnbe
fistpl
push
mov
nop
ss
pusha
inc
loop
sahf
lahf
lods
aaa
add
jae
in
loope
test
and
hlt
shl
cmc
sbbb
insb
mov
mov
test
pop
sub
test
jbe
das
pop
pop
xchg
in
mov
nop
push
loopne
scas
roll
addr16
scas
in
inc
pushf
lea
jle
push
cmpsl
mov
addb
je
xchg
xlat
jno
mov
leave
call
push
add
in
dec
test
pop
push
js
std
mov
sbbb
movsl
mov
dec
lea
xchg
mov
popa
cmp
in
mov
lods
cmp
mov
arpl
pop
xchg
xchg
lcall
adc
andb
in
stc
testl
movsl
js
je
mov
rcll
sti
hlt
outsl
idivb
fwait
ljmp
mov
insl
adc
rcll
cmp
mov
jmp
daa
push
ret
add
mov
mov
xchg
shll
sbb
sbb
andl
pop
or
sub
sbb
popf
xchg
fs
xchg
testb
jns
fidivrs
outsb
fcompl
add
cmc
dec
outsl
cli
add
aam
loopne
cld
fsubrp
mov
stos
outsb
imul
or
mov
sbb
dec
mov
dec
pop
mull
mov
mov
ficomps
adc
cmc
pop
imul
fs
inc
xlat
bound
pop
ss
sub
push
stos
or
mov
lods
xchg
cmpsb
rcr
add
je
jne
shrb
xor
cmpsb
add
inc
sti
cld
pop
xchg
sahf
loopne
pop
int
mov
jp
dec
in
lret
jecxz
test
aad
fcomps
and
cmp
sub
cwtl
pop
xchg
xor
push
ds
mov
sahf
add
sarb
jae
andl
adc
pushf
dec
ss
shrb
popl
lahf
lahf
mov
or
sub
sbb
int
sbb
add
add
xchg
in
cmp
imul
les
iret
enter
fsubr
nopl
pop
sbb
mov
jne
push
leave
mov
test
lret
pop
ds
mov
pusha
lret
fucom
scas
daa
frstpm(287
out
jmp
insl
and
push
push
call
fsubrp
dec
sbb
cmp
xchg
mov
lock
mov
mov
inc
xor
movsb
xorl
sahf
push
scas
mov
out
je
adc
pop
fs
loop
xor
aam
inc
in
or
cmp
int
out
lahf
jg
adc
popa
out
jl
fdiv
adc
jno
sub
into
xor
push
movsl
jp
sti
jge
dec
mov
out
sahf
call
incl
movq
add
and
jnp
push
jmp
xchg
mov
add
dec
dec
push
push
xchg
sti
cmc
jno
dec
push
fstpl
stc
fldt
fbstp
add
jle
mov
jno
in
out
daa
shll
rcll
inc
mov
jg
dec
shl
cld
pop
pop
push
pop
sbb
inc
stc
rol
dec
inc
repz
sbb
lcall
pop
das
xor
iret
sti
mov
enter
lods
cmc
cmp
xchg
xor
sarl
inc
xchg
cmp
stc
in
and
push
and
js
jno
pop
inc
mov
sub
lods
mov
adc
push
pop
jae
mov
jae
insb
dec
adc
lock
mov
insb
jne
jecxz
dec
jp
xchg
push
mull
push
xor
or
addb
jns
mov
jae
lret
inc
aaa
pop
sbb
movsl
xor
out
lret
mov
and
testb
push
icebp
inc
add
shrb
das
aam
stos
mov
out
dec
fistl
inc
xchg
mov
cmpsl
bound
ss
sub
sti
ror
xchg
mov
mov
sub
std
out
push
js
push
or
mov
inc
ret
and
fildl
imul
es
push
mov
sahf
mov
iret
nop
or
mov
jne
xlat
je
xor
inc
jo
bound
shl
lods
adc
cltd
mov
sahf
xor
daa
sub
or
mov
sub
pop
jbe
mov
out
push
fisubs
loopne
pmaxsw
mov
mov
es
push
cmpsl
aaa
daa
lock
push
sar
pop
mov
mov
sbb
std
jg
mov
addb
pushf
inc
mov
xchg
loopne
xlat
js
testb
imul
into
lds
mov
sub
sub
or
dec
lods
rdpmc
sbb
cmp
jge
xchg
and
pop
into
and
fwait
mov
xchg
mov
jp
cmpsb
outsb
and
into
pushf
xor
loope
xor
rcrb
push
xchg
inc
cld
and
and
out
mov
xor
repnz
adc
les
sub
mov
pop
push
sub
sub
out
push
jbe
xor
sub
test
dec
lock
out
icebp
push
in
sbb
in
jns
sbb
mov
inc
in
sarl
and
dec
push
lcall
lcall
sbb
inc
sub
lret
push
add
pusha
ret
icebp
int3
and
cmpsl
xor
cmp
pop
fldenv
scas
inc
or
ss
into
and
insb
pop
je
adc
cmp
aad
push
xor
xchg
xor
push
aam
add
push
pushf
and
lret
outsb
pop
ds
mov
ja
xor
faddp
pop
rorl
xor
jecxz
nop
push
and
pop
nop
pop
mov
xchg
push
and
lahf
jmp
jl
inc
cmp
enter
jnp
mov
fs
xchg
sbb
mov
imulb
mov
outsb
or
pop
je
xchg
pop
popf
pop
clc
cmp
mov
lods
clc
leave
mov
call
jmp
sbb
insl
mov
jbe
ficoml
jae
jecxz
into
xchg
in
jmp
inc
cltd
mov
xlat
test
inc
pop
call
mov
dec
es
insl
adc
stc
lret
pusha
test
subl
and
sbb
sbb
add
sbbb
push
pop
lods
test
js
adc
xor
push
lods
fst
lds
or
fimuls
dec
mov
popa
inc
in
adc
aas
cmp
cld
xchg
mov
das
push
inc
dec
jb
cltd
andb
loopne
pop
inc
enter
push
scas
lds
std
dec
aad
xor
testl
imul
jae
cld
unpcklps
push
cmp
jecxz
mov
call
sub
dec
adc
adc
in
popa
inc
push
xorl
dec
xchg
testl
mov
aad
adc
or
add
dec
insl
cmp
repz
je
and
lds
pop
xorl
push
push
push
mov
imul
lods
jp
push
sbb
lret
insb
out
inc
dec
lock
mov
dec
ret
sub
jecxz
push
loope
std
xor
lods
into
push
ljmp
cwtl
cs
dec
repz
add
ja
mov
push
dec
inc
cmp
icebp
in
or
int3
outsl
imul
push
pop
sbb
xlat
test
int3
jnp
xor
push
cmp
iret
and
dec
rcr
jmp
jp
push
xor
fadds
sbb
push
or
stos
or
cmp
pop
xchg
and
mov
and
imul
ret
les
cmpl
pop
aaa
sbb
inc
lods
cmpl
mov
pop
ljmp
add
cmp
jg
mov
cmp
loopne
xor
hlt
call
mov
cwtl
jge
mov
fisttpll
cmp
in
lods
xchg
or
stos
push
scas
mov
or
in
sub
je
mov
sub
jecxz
in
in
inc
and
or
inc
adc
push
imul
imul
mov
mov
jae
in
pop
loop
lret
sahf
ljmp
inc
sbb
xor
inc
jo
cmp
mov
imul
data16
iret
test
push
lahf
mov
call
mov
pop
call
cmp
mov
fbld
or
add
mov
push
sbb
mov
xor
imul
xor
in
jns
cs
gs
xor
inc
xlat
in
jno
int
mov
sbb
in
mov
rol
adc
xor
cmp
adc
scas
jmp
stos
inc
lahf
leave
dec
adc
popa
cmc
bound
sub
inc
out
js
adcl
insb
cmpl
inc
aas
sbb
xchg
mov
pop
rclb
mov
mov
sbb
ljmp
cmp
sub
lcall
lods
cmpsl
sti
ret
pop
or
aam
push
cs
repz
xor
xor
aad
movsb
cmp
pop
jns
movsb
cwtl
pop
in
push
add
and
sub
xchg
xchg
leave
push
pop
pushf
mov
movsl
out
jo
cmp
das
xlat
sbb
int3
enter
xchg
add
or
xor
pop
xchg
adc
dec
stos
mov
xor
pop
lock
push
dec
jp
adc
add
cmp
dec
fwait
hlt
es
xor
popa
into
ret
ret
sub
adc
cmp
loopne
nop
lds
cmp
cmp
jle
dec
fstpl
mov
push
aaa
jo
insb
adc
sahf
mov
adcl
add
dec
lods
fnstenv
fnstcw
std
add
and
xor
lea
and
cmp
pop
outsl
sti
ret
rol
or
mov
hlt
stos
fidivrs
es
and
inc
fs
pop
loopne
shrl
pop
loop
add
xchg
mov
cmpsb
mov
shrl
fdivl
and
lea
mov
mov
or
test
mov
and
cld
jp
dec
out
into
xor
mov
or
sbb
mov
pop
dec
sbb
push
rolb
adc
adc
pop
andl
rep
outsl
mov
int
push
movsl
sub
jns
sbb
popa
adc
adc
push
adc
jb
lahf
nop
aaa
mov
sub
push
lods
push
cmpsb
int
or
js
rol
iret
fcoms
sub
push
jecxz
or
loop
clc
mov
xchg
mov
test
dec
mov
mov
mov
sub
jne
xchg
push
lods
add
pop
out
fildll
repz
sub
lock
js
dec
int
rorb
and
dec
push
sbb
mov
xchg
mov
cwtl
sbb
cmp
xchg
lods
sbb
lret
jmp
loop
mov
push
call
jb
mov
dec
jle
and
add
test
scas
push
jno
insb
orb
popf
lret
in
fadd
push
jns
mov
rol
aam
in
mov
pop
stos
cs
sbb
es
jmp
or
xor
test
outsl
push
ja
adc
scas
jle
aad
out
or
and
mov
jmp
ds
add
push
and
mov
sahf
into
mov
aam
mov
push
and
jnp
push
je
lcall
and
pusha
cmp
out
mov
mov
mov
stos
fnsave
outsl
jmp
test
inc
fsubrp
jl
cld
xor
cmp
addr16
test
popf
and
sarl
pop
adc
pop
rcrl
jecxz
xchg
fisubrl
xor
jmp
inc
jae
cld
mov
push
in
xor
pop
sub
imul
or
cmc
out
imul
sub
mov
fisttpll
repz
mov
and
std
cli
inc
jp
lahf
cmpsl
dec
mov
add
xchg
push
fwait
es
aaa
inc
cld
pop
fldcw
sub
fcomp
mov
pop
mov
dec
aam
xchg
pop
out
popa
das
ja
mov
pop
orl
or
inc
sub
enter
pop
mov
lods
roll
test
xor
fisubrs
lret
add
pop
cwtl
mov
pushf
sarl
push
sbb
dec
pop
in
sub
jne
cmc
call
mov
pushf
add
mov
xchg
mov
fsub
repnz
cmpsb
sub
add
push
mov
dec
mov
jae
cmpsb
push
add
lods
mov
cwtl
inc
sbb
jp
into
fisubl
add
mov
lods
or
mov
movsl
push
out
push
test
shrb
add
jb
or
enter
lds
add
rcrb
lds
add
sarl
incl
and
mov
jl
sahf
movsb
and
in
repnz
stc
push
mov
test
popf
fucomp
pop
pushf
es
dec
loope
mov
scas
shrb
jecxz
cld
shll
mov
fidivrs
xor
cld
jmp
addr16
and
jnp
lea
pop
push
pop
xchg
fisttpll
mov
insb
int
jmp
cmp
cs
js
sub
inc
and
push
test
les
fidivrl
addr16
loop
jbe
loopne
mov
xchg
cmpsl
push
or
imul
cwtl
icebp
xchg
add
mov
out
sbb
sub
aam
pop
pop
push
adc
test
data16
divl
xor
into
mov
cld
mov
aam
inc
or
loope
mov
ss
adc
or
adc
test
xchg
subl
sub
push
outsl
adc
push
stc
fiadds
inc
mov
jl
jo
ja
shll
inc
pushf
sub
and
cmp
dec
and
scas
ss
adc
andb
in
mov
leave
xor
imul
ret
imul
jle
add
xchg
lret
push
push
push
sub
popa
inc
mov
mov
inc
icebp
cmpsl
movsb
jns
in
mov
loope
jp
mov
sti
movsl
ds
mov
ja
sub
and
gs
out
mov
and
xlat
xor
cmp
sti
xchg
mov
addb
cld
push
call
fcomps
jne
sub
dec
out
outsb
shrl
jb
jl
mov
adc
adc
shll
mov
shrl
sub
and
call
add
xchg
push
in
and
sahf
mov
sbb
test
shl
aad
adc
ret
jecxz
cmp
sti
inc
push
cmpsl
pop
dec
movsl
adc
sbb
jg
mov
xchg
nop
jo
ds
loopne
mov
mov
sub
gs
sub
out
fidivrl
sar
outsl
nop
std
cmp
out
in
sahf
sbb
test
inc
mov
maxps
xlat
sub
sub
push
mov
pop
or
in
cwtl
push
int
mov
int
incl
add
add
das
or
add
loopne
pop
push
dec
into
jb
push
mov
ja
popf
add
inc
cs
sub
negl
sub
ret
sbb
cmpsb
xor
movsl
mov
decl
push
xor
sbb
pusha
push
push
pop
xor
fs
push
and
xchg
fs
ja
sbb
adc
cmp
int3
aam
test
and
daa
pop
push
pop
je
mov
pop
dec
fcoms
xor
push
lret
push
jnp
enter
xor
ret
fwait
insb
stc
mov
outsb
xor
jo
ret
push
cmp
icebp
or
movsb
inc
xchg
pop
push
mov
out
pop
mov
xchg
aas
dec
mov
aam
xor
outsl
call
pushf
sbb
lods
mov
sbb
mov
xchg
inc
lret
dec
sub
and
xor
hlt
sar
push
test
cmp
mov
testl
jo
cmc
push
popa
mov
push
flds
ljmp
push
addl
push
mov
fcompl
in
dec
mov
or
insb
xor
mov
rolb
sbb
sub
hlt
cmpl
rcrl
sub
mov
out
mov
insb
adc
mov
mov
aas
jmp
sbb
imul
add
xor
sarb
loope
in
js
and
xor
pop
sub
adc
xchg
mov
ljmp
mov
popf
inc
pop
inc
addr16
inc
inc
push
ja
jmp
iret
scas
mov
sarb
sub
in
js
std
sbb
fdivrs
stos
jp
enter
cmc
aam
mov
sbb
cltd
jns
cli
fists
aad
sarl
movsb
mov
iret
adc
scas
stc
xchg
jmp
mov
data16
fisubs
aas
sbb
pusha
int3
ret
xchg
or
cld
icebp
fldcw
cmp
js
insb
or
mov
movsl
mov
add
xchg
xor
lods
loope
xchg
sahf
sub
cli
lret
outsl
push
xchg
out
into
sub
mov
mov
cs
out
loope
jne
mov
cmp
sub
test
jecxz
rorl
insl
mov
sub
lcall
je
cmp
pop
xchg
and
dec
cmpsl
mov
rcrl
addr16
jo
xchg
pop
mov
sahf
lret
mov
stos
int
adc
out
xchg
mov
sub
push
aas
test
test
xchg
data16
fs
add
sub
sbb
js
in
roll
pop
adc
add
out
dec
and
jo
push
lods
fadds
jle
icebp
test
push
fmul
popf
jae
xor
sbb
sbb
sbb
test
xchg
dec
aam
adc
mov
pop
sub
andb
jnp
mov
add
int3
mov
rolb
xor
dec
mov
je
in
loopne
or
pop
sub
xchg
push
push
inc
push
xchg
dec
jnp
sub
jl
pop
in
mov
adc
imul
dec
out
cld
mov
push
shrb
xor
aad
xor
fbld
lahf
add
in
inc
jmp
xchg
mov
pop
cmp
shlb
pop
inc
xor
nop
mov
push
fwait
and
mov
cmp
outsl
inc
pop
lahf
lds
loope
movsl
push
pop
into
scas
jne
and
fsubrl
mov
mov
sarb
cmpsl
loope
and
adc
pop
or
xor
ret
das
xor
fwait
inc
fnstsw
mov
pop
rclb
dec
notl
cmc
add
test
in
inc
sub
inc
push
adcb
push
sbb
cs
pop
mov
push
aaa
xchg
fchs
cli
mov
stc
or
mov
mov
insl
out
cmp
pop
push
mov
mov
mov
daa
out
and
dec
xchg
scas
fs
sub
adc
mov
clc
push
mov
es
mov
and
sbb
sub
test
in
call
adc
and
push
dec
cwtl
dec
loope
xchg
inc
popa
xchg
sub
out
or
sbb
dec
xchg
pop
xchg
daa
push
mov
push
mov
filds
mov
je
lahf
add
mov
mov
rcr
jle
daa
out
popf
sbb
push
int3
mov
mov
sub
subb
cmp
and
std
xchg
inc
mov
fstpl
adc
inc
push
clc
lds
mov
lods
jo
adc
mov
pop
lcall
and
bound
mov
sbb
fnstenv
dec
xlat
pminsw
mov
xchg
xchg
sbb
jecxz
cs
add
mov
in
mov
dec
jp
cs
shll
inc
xchg
xor
repz
and
scas
aaa
in
fcoml
add
add
andb
pop
inc
mulb
sbb
stos
sbb
stos
push
popl
pop
jne
add
pop
imul
inc
xor
jnp
insl
sbb
and
sub
inc
aas
add
jmp
and
sahf
or
pop
in
daa
gs
mov
adc
push
mov
adc
insb
adc
vrsqrtss
xchg
lcall
ss
dec
add
pop
mov
aam
incb
ds
xor
lods
xchg
movsl
jno
call
pop
lret
pop
popf
xchg
bound
and
adc
mov
mov
push
push
dec
mov
dec
icebp
cmp
pop
outsb
jl
shr
es
sti
jmp
push
pushf
cli
mov
rorl
jl
pop
jne
pop
jmp
mov
fldt
xchg
push
enter
call
push
subb
ja
ljmp
or
std
jmp
cld
clc
xchg
add
adc
into
add
pusha
negb
test
pop
mov
into
dec
es
mov
sahf
inc
mov
popa
inc
popl
mov
decb
sbb
fstpt
enter
loop
lret
xchg
cmp
jo
pop
scas
stos
fnsave
jl
cmp
jl
mov
cmc
loope
test
cmpsb
mov
push
aas
ds
mov
push
add
sbb
or
jp
mov
pop
mov
or
sbb
test
jmp
out
outsb
mov
pushf
push
sbb
pop
call
push
inc
or
jb
and
jl
in
stc
cli
lcall
xchg
inc
lds
dec
add
mov
inc
adc
adc
mov
xchg
dec
idivb
push
hlt
ljmp
cwtl
cwtl
ret
cmp
loope
in
orl
push
orb
xchg
cmp
mov
xchg
test
arpl
mov
jp
out
sbb
xor
mov
push
cmp
dec
fs
cli
fiaddl
test
jl
lds
dec
inc
ljmp
mov
dec
sub
xchg
jle
les
sub
fldenv
xchg
add
pop
loopne
repnz
jle
jns
mov
and
jae
std
movsb
xchg
and
lcall
aad
outsb
iret
and
or
mov
in
cmp
jbe
in
incb
mov
les
sahf
jg,pn
imul
push
jns
jle
int
loop
cltd
inc
cmp
cld
fdivl
dec
das
pop
lret
js
scas
aam
in
arpl
insb
testb
fucomp
cmp
inc
push
or
inc
xor
rsm
fcoms
mov
mov
and
rcll
in
in
lahf
in
jmp
dec
fsubrl
lods
sub
or
xlat
xchg
ljmp
leave
xchg
shlb
xchg
dec
aas
cltd
jnp
lods
jbe
insl
pop
inc
je
loopne
pop
pop
arpl
outsl
imul
fwait
pushf
bound
inc
ss
inc
xlat
shl
dec
jb
insl
popaw
add
push
repz
pusha
inc
gs
mov
push
arpl
dec
inc
mov
lahf
mov
push
jle
ret
jno
mov
and
cmpb
xchg
push
mov
stos
int3
popa
idivl
jecxz
sbb
pop
mov
xor
jecxz
and
add
in
sbb
rolb
xchg
lcall
sti
sub
mov
sti
or
outsb
outsb
push
fisttpl
or
cmpsl
and
cmp
enter
add
push
int3
xchg
dec
pop
outsl
dec
or
mov
fbld
scas
or
test
xorl
jno
mov
popa
pop
push
std
push
rclb
das
aad
mov
jns
cld
mov
cli
and
in
sbb
xlat
push
lods
jo
push
daa
jp
mov
inc
fcomi
movsl
insb
ffreep
leave
loope
stos
pop
dec
mov
mov
outsb
jbe
adc
mov
icebp
movsl
insb
out
mov
dec
add
adc
stos
dec
loop
mov
xorl
aam
fsubrl
les
insl
xor
cmpsb
inc
std
mov
shll
push
push
cmc
push
lret
cmp
lcall
mov
js
add
cli
frndint
sbb
lods
mov
stos
mov
out
pop
xchg
or
ror
and
add
in
inc
xlat
jno
pop
dec
pop
stos
push
mov
xchg
inc
les
cltd
sub
js
insl
outsl
mov
dec
loopne
rcl
pop
jae
xchg
adc
in
cmp
in
and
push
dec
mov
pop
idivb
xchg
pusha
ret
shrb
push
ja
mov
sub
xchg
shr
fisttpl
xor
in
rclb
sub
or
add
inc
aas
jmp
mov
xchg
pop
cltd
mov
leave
push
enter
push
rcll
sub
inc
xchg
inc
dec
mov
push
movsb
xchg
data16
jns
aas
out
mov
cmpsb
and
jecxz
mov
stc
mov
repz
ds
mull
rorl
cli
ret
jnp
testb
movsl
sbb
pop
out
jo
adc
lods
push
push
pop
xchg
jp
jns
inc
adcb
adc
xor
sbbb
xor
push
das
out
aaa
xchg
and
scas
mov
or
jmp
in
movsb
nop
ds
xchg
nop
pop
scas
popa
push
outsb
sahf
movsb
jne
mov
shrb
addr16
sbb
xor
stos
adc
int
and
and
mov
or
sub
mov
lods
fwait
inc
pop
adc
out
pop
and
ja
jp
out
lods
xor
jo
xchg
js
pop
out
mov
mov
mov
dec
call
inc
decb
loop
enter
dec
idiv
and
adc
out
add
xor
cld
std
std
cmp
inc
sbb
movsl
mov
mov
sub
data16
les
mov
and
int
inc
enter
mov
mov
scas
sbb
jle
jb
int3
movsl
push
inc
sti
jno
xchg
lahf
add
popf
cmovg
cld
insl
or
adc
mov
lahf
push
push
cmp
lods
pop
jbe
dec
jb
mov
addr16
int
ljmp
rorb
pop
into
lods
fs
in
loop
fs
dec
pop
mov
stos
mov
testb
pop
push
dec
mov
mov
pushf
jmp
add
test
stos
cmp
cmpsl
pop
mov
leave
aas
jnp
add
pinsrw
nop
loop
sbb
mov
mov
jge
push
repnz
rcrl
cmp
add
push
data16
ret
push
jns
popf
mov
pop
cmp
mov
fadds
cmp
sbb
mov
sbb
mov
dec
jp
cld
loop
shll
inc
ds
stos
es
adc
push
jae
inc
out
outsb
mov
pushf
loop
adc
fs
pop
or
cmc
mov
popf
add
jmp
add
and
fidivs
popa
mov
xlat
rcrb
cmp
ljmp
mov
icebp
arpl
jnp
pop
stc
adc
testb
lret
xchg
jl
push
jle
and
movsl
sbb
push
jl
sub
push
mov
repnz
sub
add
xlat
std
push
dec
xor
dec
pop
movl
cli
dec
repnz
outsl
adc
and
stos
inc
dec
call
mov
test
or
and
fidivrs
mov
mov
mov
jg
push
jle
adc
xchg
mov
dec
xlat
xchg
jno
or
lods
cmp
mov
in
push
mov
adc
dec
and
cmp
out
xchg
cmp
int
inc
inc
mov
sbb
pusha
xchg
lods
add
imulb
je
fnsave
push
cmp
lret
mov
cltd
stc
es
cs
and
stos
mov
notl
sub
test
fcomip
mov
dec
les
or
add
lret
imul
and
addr16
or
fnstsw
pop
mov
or
sub
inc
loopne
mov
aas
imul
inc
mov
jb
pushf
repz
dec
mov
je
mov
in
out
push
cmp
push
cs
je
xchg
int
das
xchg
imul
lock
lea
add
rclb
push
lods
fistps
mov
sub
xor
mov
fists
imul
repz
test
ss
out
fstl
and
out
fwait
mov
push
push
jge
les
cmp
stc
push
aam
lret
idivl
or
adc
lea
imul
or
sbb
mov
and
and
xor
sub
sahf
inc
enter
data16
adc
fnstcw
xchg
int3
mov
fs
sbb
pop
inc
sub
repz
imul
mov
mov
push
xchg
mov
idivb
and
inc
lret
sbb
add
mov
mov
aas
test
popf
ljmp
repnz
xchg
jg
mulb
push
inc
xor
aas
fisttpll
dec
in
dec
sbbl
sbb
std
cmc
ljmp
lret
insl
shrb
add
jbe
inc
push
cwtl
dec
and
pop
js
pop
xor
xor
incb
mov
xlat
lcall
sahf
push
sbb
push
cmp
lds
movl
or
xchg
and
and
hlt
dec
cmp
inc
popl
ja
ss
sbb
sbb
xchg
add
cmp
sbb
lea
fadd
inc
stos
loop
sub
outsl
push
std
push
cltd
das
or
and
xor
clc
cmpl
adc
lods
iret
repz
movsb
adc
sub
repz
mov
ret
in
dec
movsb
cwtl
pop
adc
pop
call
aam
pop
jae
rol
sub
xor
movsb
lahf
or
int
xchg
jl
lods
inc
pop
inc
fs
int
insl
lret
repz
out
addr16
mov
inc
sbb
cmpsl
ja
mov
and
fisttps
cli
repnz
and
es
fisubrl
jno
fwait
jbe
lret
mov
shrb
mov
sbb
add
and
jecxz
pop
lcall
aad
aam
mov
xorl
sbb
lock
rorb
xor
repnz
test
lahf
out
js
inc
test
jbe
cmp
stos
pop
add
dec
cmp
dec
mov
stos
inc
sub
jns
dec
sbb
xlat
xchg
or
adc
xchg
mov
jbe
mov
sub
mov
fdivp
inc
mov
ljmp
data16
mov
mov
mov
std
inc
pusha
adc
sub
add
mov
lahf
je
dec
rep
pop
inc
mov
icebp
out
fwait
cmpsl
and
sahf
add
dec
arpl
pushf
jge
repz
popf
mov
call
inc
imul
aaa
das
mov
ds
rolb
pop
and
mov
das
and
or
mov
andb
and
int
dec
js
loopne
int
xchg
inc
std
push
add
push
popf
cmp
jns
mov
cmc
or
aam
ret
clc
clc
inc
int3
push
shl
or
adc
adcl
add
mov
mov
inc
imul
ljmp
lfs
in
mov
pop
sbb
lcall
cmpl
fldenv
repnz
addr16
jo
rorb
and
xchg
stos
cltd
sbb
sub
jl
je
insb
lea
add
icebp
push
ja
xchg
lds
cmp
jno
jbe
aas
ret
leave
cmp
pop
sbb
xor
mov
mov
xchg
stc
sub
push
aam
xchg
clc
inc
or
loopne
int
in
adc
imul
and
nop
icebp
inc
adc
jg
movsb
fxtract
or
inc
sub
add
push
pushl
xchg
fs
jl
ficomps
xor
mov
xor
aas
cmp
hlt
out
pop
and
inc
or
mov
or
ficompl
test
cmovae
outsb
or
shll
loop
xlat
test
xor
pop
orps
inc
and
xor
inc
jnp
sbb
add
mov
pop
imul
or
fdivl
mov
jmp
pop
dec
cmp
mov
ficompl
or
lahf
fbstp
cwtl
dec
lcall
in
js
mov
addr16
jl
stc
push
mov
mov
fwait
mov
mov
mov
in
jmp
dec
aaa
mov
sbb
dec
out
or
dec
mov
sar
pop
js
push
outsl
lods
xor
ret
mov
lods
jp
cmp
pop
insb
push
hlt
popa
pop
pop
or
lock
push
outsb
std
push
fistpll
mov
and
aad
pop
dec
fsubr
push
sub
addr16
subb
ja
rcrb
aas
jmp
add
jns
mov
cmpsl
inc
popf
fidivrl
fcmovne
xor
in
sahf
shll
mov
push
leave
ret
xchg
sbb
fisttpll
fildl
and
mov
jl
mov
loope
imull
add
stos
pusha
xchg
mov
ds
mov
scas
mov
mov
lahf
aaa
insb
sub
xchg
mov
outsl
adc
bound
pop
shll
push
dec
popa
or
mov
ucomiss
dec
rorl
sbb
fmul
cmpsl
dec
or
stc
pop
decb
mov
add
jge
cmc
mov
inc
jo
andb
out
ror
std
cmpsb
add
xor
xchg
inc
xor
pop
sbb
cltd
push
int
xchg
sub
inc
iret
test
sbb
or
out
dec
jb
cs
push
movsb
arpl
repnz
cmp
aas
cltd
xor
cmp
out
push
test
or
lcall
cmp
int3
ljmp
adc
cmp
movsl
and
push
fisubrs
inc
mov
push
int
or
cmpsl
jl
pusha
dec
dec
cwtl
dec
dec
sbb
lods
sub
jp
rol
add
movsl
dec
cmp
mov
dec
movsb
je
nop
lret
push
out
fcmovb
add
sub
fcom
fs
mov
test
iret
mov
cmp
mov
es
icebp
cmp
andb
sub
adc
adc
call
fucomp
pop
decl
cmp
outsb
xchg
je
mov
jo
es
dec
and
dec
insb
and
arpl
loopne
jo
ret
lds
jl
mov
lods
sbb
pop
sub
iret
cmp
loopne
push
fadds
mov
outsl
les
dec
mov
repnz
pop
enter
mov
xlat
push
icebp
pusha
shrl
xchg
ret
mov
push
dec
imul
inc
xlat
push
lds
mov
movsl
xchg
fs
ljmp
lods
xor
iret
xor
sub
ja
fists
sbb
addr16
adc
xchg
je
sbbl
icebp
pop
jecxz
je
ficoms
inc
lea
adc
scas
cmp
jp
xchg
push
and
shr
aad
pop
in
std
add
fcoml
adc
pop
cmp
fldenv
adc
jb
cmp
cmp
aaa
cmp
push
sbb
xchg
xor
ss
or
rcrb
xchg
clc
enter
inc
cmp
jl
leave
jecxz
lret
push
xchg
mov
inc
aas
xchg
call
or
fidivs
ficoms
jns
cmpsb
cmp
push
popf
xor
push
jecxz
push
lods
push
pop
adc
es
jle
cmp
in
mov
mov
jp
icebp
and
add
dec
push
pop
stc
push
clc
push
test
test
xchg
mul
sub
xchg
in
sbb
mov
stos
test
cmc
mov
jnp
inc
fmull
adc
aaa
ret
in
push
push
push
pop
dec
push
push
inc
cltd
cltd
push
sbb
cmp
mov
test
ret
scas
mov
adc
cli
xchg
scas
nop
sbb
and
movsl
mov
cmp
nop
outsb
jbe
mov
outsl
fmulp
and
int3
push
mov
mov
mov
inc
pop
lret
add
mov
mov
cmc
jno
sbb
inc
ja
fsub
lret
xor
xchg
movsb
jb
popa
sbb
ret
pop
out
jg
adc
adc
out
push
xorl
cld
xchg
dec
jle
xchg
and
cmovnp
or
js
mov
ja
outsl
sbb
out
jbe
jl
lahf
adc
pop
jnp
cwtl
stos
push
jnp
mov
lcall
insb
pusha
out
mov
popf
xor
lcall
and
subl
stos
js
xor
sub
icebp
das
cmpsl
fmul
ss
and
jmp
push
adc
push
xchg
hlt
xchg
xchg
pop
notb
imul
pop
std
shll
adc
push
dec
cmp
js
mov
mov
cmpsl
pavgw
sbb
adc
inc
repnz
mov
push
fs
imulb
fcoml
and
cmp
stos
xor
jp
ror
lret
aas
dec
add
sbb
jns
popf
sub
cltd
jge
mov
outsl
fildll
aaa
inc
movsl
addr16
add
in
fisttps
in
hlt
mov
popf
adc
xchg
inc
pop
xorb
and
movsl
xlat
out
ror
lods
in
sbb
mov
xorb
pop
cmp
aas
repz
rcl
aaa
int3
xchg
pop
sub
jb
mulb
outsl
imul
call
xchg
movsb
test
fidivrl
sti
je
xchg
push
mov
and
adc
mov
jge
adc
inc
mov
dec
std
popa
iret
ret
sub
jb
mov
f2xm1
inc
aam
mov
jp
and
dec
pop
lcall
sub
mov
lcall
cmp
nop
add
push
dec
das
sbb
pop
mov
xor
inc
cld
cmp
cld
clc
test
stos
or
icebp
call
push
lods
cmp
imul
or
insb
jae
cltd
repnz
jo
or
lea
ljmp
pop
or
in
jns
stos
and
add
popf
pop
std
repz
imul
ja
xchg
test
movsb
xchg
mov
mov
dec
in
int3
push
cmc
mov
gs
jecxz
xchg
enter
pop
cli
sub
fs
imul
mov
adc
lahf
jmp
sub
push
cmpsl
push
cltd
cli
das
dec
popf
push
ret
xchg
addb
and
lock
fadd
push
jns
testb
outsb
arpl
inc
scas
jl
pushf
pop
xchg
inc
mov
lret
add
push
test
fstpl
mov
xor
les
xchg
lahf
or
cmp
mull
int
std
mov
mov
dec
mov
adc
jp
push
pop
lods
jle
les
hlt
push
stos
mov
and
aam
sub
nop
rcr
push
mov
mov
mov
ficoms
inc
push
jge
xor
and
pop
xchg
aad
fs
ljmp
push
insl
movsb
cli
mov
flds
pusha
mov
jne
push
scas
lea
cmp
push
ret
inc
pop
out
xor
add
fdivrs
data16
pop
fsubs
xchg
fidivrs
jle
mov
fstpt
push
fstps
push
add
out
and
adc
mov
push
dec
jae
push
inc
mov
inc
add
jbe
cwtl
insb
stos
mov
inc
pavgb
jmp
outsb
and
push
jg
add
cli
shll
mov
int
xchg
data16
shl
jno
jge
pop
push
cld
mov
mov
mov
mov
push
sbb
add
push
push
sub
les
sub
push
rcrb
ss
jl
notl
and
inc
cmpsb
mov
dec
jecxz
push
repz
mov
cmp
pop
push
insl
jmp
xor
mov
xor
jge
mov
push
pop
xor
movsb
aas
sbb
sar
and
xchg
rcll
ja
lods
add
sub
xchg
inc
subl
mov
movsl
or
sbb
out
inc
cmp
ds
jl
ljmp
outsb
sarb
or
pop
in
aad
sbbb
adc
insb
xor
icebp
dec
push
mov
cmp
imul
push
push
cmp
es
jne
in
fwait
insb
lret
in
jns
iret
pusha
mov
sbb
flds
sbb
je
outsl
jae
xor
and
cmp
rcl
sbb
outsb
in
nop
or
mov
ljmp
fisttps
leave
popa
pop
call
dec
pop
jmp
int3
or
data16
add
popf
stc
popa
or
adc
stos
ret
inc
gs
mov
dec
push
addl
test
fnstenv
mov
nop
jge
in
mov
stc
mov
mov
stc
mov
in
dec
jo
sbb
int
mov
test
mov
outsl
insl
cmp
movsb
sub
mov
aaa
inc
mov
popf
sub
xchg
mov
mov
xorl
aam
xchg
les
scas
jno
test
adc
push
leave
xchg
pop
and
nop
xchg
xchg
jns
mov
jmp
jge
push
cs
xchg
shll
add
in
stos
inc
rolb
or
push
sahf
lods
cmpsl
xchg
daa
ljmp
rcrl
outsl
pop
cs
loop
das
pop
jne
jle
repz
mov
adc
or
clc
fisttps
sbb
jae
loop
cmp
icebp
pop
pop
cld
stos
inc
sub
xchg
daa
inc
jp
testl
mov
pop
sbb
in
inc
push
lret
or
xchg
pop
adc
out
mov
int
fst
and
mov
ja
nop
sub
fisubrl
dec
pop
push
adc
lods
cmp
and
fildl
sub
jo
daa
xor
test
dec
frstor
mov
mov
rol
gs
mov
xchg
push
mov
adc
mov
inc
sub
adcb
outsl
cmp
sbb
mov
mov
jg
sbb
imul
add
mull
mov
add
rcr
mov
cmpsl
pushf
xchg
adc
fidivrl
das
inc
imul
inc
mov
lea
mov
addr16
roll
insl
std
xchg
outsb
mov
fsubs
cli
jbe
imul
pop
cmp
xor
jo
lds
pop
jle
out
aam
jne
xor
xchg
pushl
xchg
push
sub
popa
pushf
cli
add
sub
xchg
lds
xchg
loopne,pt
imul
jb
add
stos
fbstp
mov
pop
lods
int
jae
mov
out
xchg
push
loop
test
bound
in
cmp
push
ljmp
mov
dec
or
push
aas
bound
and
xor
cmp
inc
out
rol
bound
cs
pop
aam
in
mov
stos
fcomps
roll
add
sub
add
movsl
cmp
sub
sarb
xchg
rolb
pop
push
in
outsl
hlt
adc
ret
bound
pop
loope
stc
jno
lret
push
mov
dec
je
mov
dec
inc
jne
or
mov
sub
stc
test
cmpl
aaa
sbb
sbb
fcmovb
movsb
stos
jae
mov
in
jge
mov
das
stc
sbbl
sub
mov
push
or
insb
adc
sub
lcall
push
dec
xor
stos
out
nop
mov
pushf
fwait
push
movsl
arpl
push
and
jmp
sub
cmp
sub
jnp
dec
and
sub
lods
fsubs
fsub
or
mov
jge
xlat
push
call
je
mov
insb
mov
test
mov
jl
mov
pusha
pop
stc
xchg
sub
imul
dec
std
outsb
aad
je
mov
adc
jns
xor
sbb
scas
clc
ljmp
xchg
add
mov
mov
sbb
jne
mov
cli
popa
stc
faddl
cltd
cwtl
addr16
and
pushaw
dec
cmpsl
test
mov
pop
icebp
add
lock
icebp
mov
pushf
cmova
popa
push
xchg
outsl
into
ret
imul
mov
cli
lahf
lock
jle
push
ficoms
mov
outsl
cmp
push
fcomps
xchg
sub
sbb
cltd
jbe
loopne
xor
imul
mov
inc
bound
movsb
lock
pushf
jb
sub
inc
cmp
sbb
sub
xchg
mov
out
in
xor
or
push
jns
and
enter
sub
add
imul
xchg
int3
push
dec
aaa
sti
or
aaa
popa
fwait
jmp
data16
push
mov
sub
shlb
movsb
fsubs
clc
push
xor
fldt
mov
pop
add
add
and
and
int
push
fnstcw
mov
mov
push
sub
into
inc
cmp
data16
jae
mov
dec
cmp
fwait
stos
and
inc
cmpsl
enter
inc
clc
int
mov
inc
loop
xchg
jae
add
or
xor
lcall
shlb
add
fists
sub
inc
mov
adc
dec
adc
data16
outsl
shrl
mov
inc
movsl
aaa
ljmp
cmp
nop
test
xor
filds
xchg
push
pop
mov
jns
cli
adc
fstpl
or
int
cmpsl
jecxz
pushf
inc
inc
xor
aad
cmovne
decl
inc
push
add
adc
xchg
dec
push
push
outsl
sahf
jbe
push
jb
xchg
icebp
cli
aaa
mov
mov
pop
cmp
ffreep
stc
hlt
dec
sbb
arpl
mov
jne
loope
push
push
js
aas
mov
mov
ret
scas
sti
mov
and
rcl
xor
lcall
sub
das
negl
and
and
mov
push
data16
mov
xor
hlt
sbb
jge
movsl
aad
and
xchg
dec
jbe
mov
fs
cmp
shrb
ficoms
scas
test
repz
aas
jge
addr16
sbb
fxch
and
xchg
dec
cwtl
mov
sbb
sbbl
test
jg
pusha
push
ljmp
lcall
lods
mov
testb
mov
mov
cmp
pop
pop
flds
adc
dec
repz
mov
and
ret
ffree
jge
adc
cmp
movsl
dec
dec
or
movsb
sub
jge
aad
inc
mov
ja
pop
sub
mov
dec
pop
stos
nop
cmc
js
cwtl
dec
push
push
insb
iret
and
out
sub
xor
push
push
adc
sub
add
adc
jne
and
sbb
sbb
cwtl
jmp
imul
xchg
cmp
insl
sbb
enter
fistl
mov
sub
ljmp
add
insl
stos
repnz
mov
mov
jle
sahf
sub
das
dec
clc
pushl
clc
scas
daa
ja
ret
mov
xchg
mov
adcb
sub
mov
sub
xchg
hlt
jge
and
movsl
pop
dec
decl
adc
xchg
dec
pop
xor
into
inc
and
push
lcall
adc
mov
dec
mov
or
xchg
xchg
nop
add
sub
push
fs
or
rcrl
arpl
fnstcw
addr16
nop
ja
xchg
mov
out
dec
out
ficomps
jg
adc
dec
jge
pusha
es
push
cwtl
aad
jne
jmp
pusha
iret
clc
loopne
mov
in
jns
jge
jae
dec
imul
js
mov
and
ds
sub
push
cmp
div
or
cmp
pop
mov
je
mov
cmp
or
inc
movsl
cmpsl
sbb
and
rolb
mov
cmp
dec
stos
push
jno
jne
mov
stos
mov
jb
lahf
call
ljmp
sbb
cltd
hlt
pusha
xor
iret
dec
jbe
popa
les
movsb
movsb
inc
xor
cmp
adc
cmc
test
test
out
mov
in
jne
notl
cmp
adcl
ss
pop
movsb
aas
aad
lahf
rcrb
jae
daa
lcall
lock
sti
cmc
outsl
sub
and
sbb
xchg
lahf
add
jecxz
in
sub
jno
jo
pop
xchg
out
mov
mov
xor
jo
xor
pop
and
idivl
filds
adc
xchg
pop
ds
in
inc
inc
icebp
cvtpi2ps
dec
mov
sbb
xor
and
mov
cmp
push
lret
les
jmp
adc
or
pushf
mov
repnz
iret
pop
std
jae
iret
aad
lret
fdivl
rcll
jle
popa
push
pop
int3
mov
dec
mov
xchg
scas
loope
mov
clc
inc
add
xchg
scas
cmp
in
stos
out
and
stc
mov
mov
pop
pop
nop
mov
mov
xchg
hlt
sub
addr16
inc
div
push
or
shl
mov
int
rorl
adc
test
cmp
push
mov
dec
adc
xchg
inc
or
int3
test
inc
in
imul
inc
inc
push
fistl
mov
popa
loope
idivl
jae
clc
int
inc
add
xchg
sahf
aam
push
sbb
push
repnz
ret
dec
out
jnp
rolb
jg
or
mov
mov
push
dec
cs
int3
mov
and
test
adc
jno
xlat
dec
mov
dec
test
add
lret
enter
mov
adc
jo
jp
sub
adcb
sbb
je
sarb
sti
sub
hlt
out
int
imul
cld
cmp
xor
xchg
add
or
mov
popf
pusha
ror
test
ret
mov
xor
mov
imul
sub
sarl
cmc
imul
loopne
add
scas
mov
and
mov
and
shll
stos
and
inc
push
das
std
dec
popa
clc
sub
cmpl
xchg
mov
test
sahf
inc
inc
and
int
inc
movsl
jns
sbb
and
ja
pop
or
mov
inc
jno
pop
dec
xchg
jo
push
dec
pop
repnz
pop
jo
or
sbb
add
enter
bound
mov
je
fiadds
bsr
pop
sbb
push
jge
sbbb
cld
fs
and
xchg
mov
fnstsw
cmp
sub
mov
dec
jle
jbe
ds
pushf
lret
adc
mov
xor
pop
lcall
stos
in
xlat
mov
mov
push
push
push
adc
in
popa
mov
sbb
pop
enter
dec
jo
sub
es
ret
cmpl
push
jns
iret
ss
xlat
out
ret
insb
fucomi
and
mov
xchg
mov
ds
nop
push
outsb
ss
ja
inc
ljmp
mov
jb
es
pcmpeqw
jnp
adc
lock
sbb
data16
dec
fs
jmp
xchg
mov
loop
dec
out
cmc
mov
mov
aam
xor
dec
movsl
dec
aam
dec
adc
sti
add
xor
sbb
cmc
xchg
pop
dec
stc
mov
or
push
jns
pop
loope
pop
lock
xor
ss
roll
jo
push
fxch
adc
xchg
xchg
ds
xchg
adc
dec
or
js
jo
push
sub
pop
mov
pop
cs
sub
mov
sub
inc
mov
repz
daa
adc
imul
in
mov
testl
repnz
mov
js
fucomip
in
ljmp
cmp
loope
adc
andl
rcll
mov
dec
loope
sub
lahf
lcall
or
or
mov
inc
xor
or
cltd
pop
cli
movsl
movsl
mov
xchg
stos
cmpsb
scas
xchg
cmp
adc
ret
das
cltd
add
ret
inc
mull
sub
add
add
pop
cmc
pop
cld
jnp
test
bswap
rcrl
jp
push
lahf
rorb
setg
and
xchg
imul
mulb
pop
dec
lds
and
or
cmc
inc
jge
sub
and
cmc
iret
push
inc
push
popa
rcrl
lret
repz
rolb
xor
aas
fs
popa
xor
mov
loopne
mov
and
test
in
pop
inc
rcr
jnp
stos
mov
push
mov
sti
hlt
push
xchg
inc
add
nop
pop
sbb
fisubs
sti
lret
or
mov
les
sub
mov
inc
sub
push
cld
pop
andl
push
inc
inc
sbb
push
bound
ficomps
fs
add
out
or
push
in
add
in
pop
inc
and
pusha
jnp
mov
gs
and
fcomip
xor
xchg
adc
and
cwtl
and
mov
das
int3
mov
add
sub
daa
xor
inc
mov
pushl
out
pushf
adcb
sub
aas
add
mov
cs
loope
scas
call
ja
incl
out
lahf
dec
add
shlb
enter
jnp
jbe
mov
xchg
pushf
fs
gs
clc
mov
jae
adc
mov
insb
sahf
mov
cwtl
inc
mov
mov
movsb
movsb
push
int3
cmp
roll
sahf
add
pop
and
sub
pop
es
hlt
int
ljmp
out
insl
xor
pushf
outsl
cmpsb
lcall
scas
aaa
sub
mov
int3
dec
imul
pop
gs
cmp
sbb
hlt
pop
pop
fidivrs
inc
xchg
stc
test
out
sar
add
idivb
leave
push
cs
sub
xchg
pop
and
xor
mov
pop
inc
and
icebp
sbb
jnp
mov
shll
dec
stos
jo
add
pushf
jnp
ja
push
xorb
movb
sub
pop
pop
loope
add
cmp
push
imulb
mov
sbb
lods
sbb
or
cmc
sbb
sbb
das
faddl
xor
push
outsl
faddl
mov
test
pop
push
add
ljmp
out
enter
sbb
mov
lock
pop
mov
push
cmp
xchg
stos
aad
dec
push
shlb
sti
call
cmp
lcall
fiaddl
pop
je
adc
sub
repnz
push
outsl
gs
aam
and
rcrl
movsl
movsb
arpl
das
dec
xchg
popa
dec
daa
add
mov
cmp
jecxz
into
pop
mov
rol
loope
inc
mov
inc
mov
cmp
sub
fisubl
or
pop
insl
ljmp
aas
inc
inc
in
sbb
jp
repnz
test
lods
xor
adc
sbb
fsubs
cld
cmpsl
pop
mul
clc
xor
cmp
mov
out
mov
dec
sahf
dec
sahf
shrb
and
lods
imul
jb
sbb
xchg
cmp
jp
es
push
mov
movsb
ds
pop
outsl
xor
repz
es
adc
call
arpl
cmp
cli
jnp
arpl
cmc
lds
dec
mov
lahf
pop
mov
lcall
mov
mov
or
popf
repnz
sbb
mov
mov
mov
fists
scas
mov
dec
insb
je
fwait
dec
add
addr16
stos
xchg
imul
and
outsb
xchg
mov
les
push
adc
mov
and
mov
mov
inc
jae
inc
arpl
test
dec
cmc
cmpsl
add
test
int
cmp
in
imul
js
lods
cld
mov
jl
sbb
dec
les
shll
mov
mov
cmpsl
movsb
xlat
xchg
push
and
arpl
add
fbstp
sub
cmpsb
push
daa
scas
jo
mov
jl
cmp
icebp
movl
je
mov
es
in
js
dec
ffreep
add
push
mov
lahf
or
fs
dec
push
mov
jge
inc
cmp
jae
xchg
pop
loopne
adc
inc
lods
or
mov
lock
mov
and
cwtl
sarl
sbb
push
enter
cmpsl
je
pop
js
or
cmc
xor
into
testl
out
mov
sbb
sub
mov
ja
outsl
cmc
push
pop
mov
cmpsb
in
jmp
dec
push
hlt
pop
push
adc
mov
push
adc
sbb
in
inc
xchg
fdivrs
xchg
dec
push
je
dec
fcomip
mov
loope
dec
add
test
xchg
subl
push
xchg
xchg
xlat
sarl
fildl
inc
dec
das
fsubl
cmp
pop
jl
push
addl
repnz
mov
jmp
pushf
pop
pop
lea
imul
popf
adc
insb
inc
push
mov
xchg
inc
shlb
cmpsl
cmp
test
mov
pop
jmp
mov
sbb
jae
sbb
and
fwait
dec
mov
insb
int
scas
push
dec
dec
mov
or
rorl
pop
leave
push
call
xchg
sbb
addps
sub
sbb
xchg
daa
add
xor
jecxz
push
pop
or
in
leave
roll
stc
xor
sub
mov
mov
sub
inc
out
cmpsl
shlb
lcall
movsl
orb
dec
pusha
cs
imul
fisubrl
adc
push
jne
loope
cmp
mov
push
and
add
jo
arpl
xchg
lahf
and
sbb
addr16
mov
mov
mov
stos
sbb
ss
loop
jo
pop
cmp
rcrb
sub
ret
and
cmp
jnp
cmp
add
mov
dec
pop
insl
imul
das
dec
lds
adc
mov
mov
out
lahf
inc
mov
xchg
jno
lret
and
xlat
jne
pop
lods
push
dec
fs
jmp
inc
xchg
out
dec
adc
sub
ds
or
call
inc
pop
push
roll
sub
scas
sub
std
xor
mov
mov
dec
adc
jecxz
je
outsl
dec
mov
or
pop
lds
jmp
lea
jno
mov
enter
push
dec
sbbb
xchg
fstpt
dec
cmp
add
dec
add
pop
dec
inc
adc
sub
inc
sub
or
vphsubbw
fmulp
inc
in
in
adc
repz
js
jnp
lahf
notb
cs
dec
mov
add
data16
mov
ds
adc
and
mov
pushf
inc
jecxz
ret
lret
sahf
sub
or
jae
jo
or
inc
sbb
in
lahf
ljmp
or
pushf
outsb
cmp
mov
mov
add
sub
rol
into
les
negl
inc
test
pop
xchg
mov
mov
cmpsl
unpcklps
add
mov
mov
or
push
ja
fsubrl
test
push
inc
push
test
push
inc
pop
lock
adc
push
sahf
adc
cwtl
out
aam
loope
pop
cmpsl
scas
mov
cmovb
adc
push
insb
loope
loopne
in
imul
fmuls
stos
mov
or
jnp
sbb
or
xor
xchg
inc
or
daa
mov
orl
add
mov
shl
daa
or
mov
xchg
shl
test
int
rclb
sub
jno
sahf
std
cmp
lret
es
push
in
loope
popf
not
testb
call
std
sbbb
xchg
push
push
and
test
xchg
dec
mov
mov
add
jl
shll
mov
mov
in
adc
lock
pusha
inc
fisubrs
inc
pop
push
bound
loope
cmp
daa
aam
fisubl
cld
mov
loope
jnp
ds
or
in
inc
fs
sbb
and
out
divb
xor
mov
and
sbb
pop
sarl
sub
push
inc
mov
testl
jg
jle
clc
xor
push
outsb
ljmp
cld
inc
xchg
sbbl
xor
cltd
push
inc
or
test
jb
inc
lods
mov
icebp
and
sub
dec
in
and
push
loop
cmpsl
jmp
movsl
neg
lahf
negb
and
scas
in
mov
loopne
jg
rorb
xchg
movsb
mov
and
icebp
mov
fwait
jge
mov
std
jg
int
cmp
mov
out
jnp
fcmove
clc
adc
lcall
in
leave
xchg
bound
cmpsl
cmpsb
fs
xor
jecxz
rolb
shlb
cmp
pop
pop
test
jnp
orl
jno
mov
leave
push
scas
popa
push
cmp
push
cwtl
and
xchg
dec
fldenv
inc
or
and
lret
mov
push
test
dec
leave
xor
inc
ja
lds
mov
push
nop
pop
sub
mov
add
mov
pop
inc
jnp
negb
and
cs
jo
lret
dec
sub
stos
mov
sub
push
xlat
cld
inc
mov
sub
in
xlat
sbb
mov
mov
loopne
in
xchg
and
clc
jno
loopne
cmpsl
gs
and
pop
push
jns
fucomip
jl
dec
loope
iret
out
and
sbb
or
dec
jne
sarl
nop
sub
and
movsb
fidivs
scas
test
or
call
push
dec
jecxz
stos
je
jl
lret
pop
lds
pop
xor
jmp
mov
sbb
jae
insl
and
jns
outsl
mov
cmpsb
hlt
test
test
out
fistl
or
lret
jo
cld
xchg
sbb
repnz
inc
and
out
mov
and
cmp
out
xor
roll
xchg
lret
lahf
pop
cltd
jo
ss
les
xchg
push
and
loope
aad
xor
xchg
xchg
fmul
xor
outsl
fs
dec
sahf
loope
repz
sbb
iret
mov
je
mov
xor
push
iret
ljmp
in
mov
push
xchg
sti
sub
inc
leave
rclb
mov
ljmp
xchg
jnp
icebp
rcrl
and
vmovhps
pop
daa
push
jle
icebp
lret
sti
aaa
or
cli
push
sbb
dec
mov
fcompl
cli
xor
cld
data16
and
sub
jb
jo
mov
push
dec
lret
iret
inc
mov
sbb
jp
pop
mov
pop
pop
mov
sbb
daa
inc
subl
xchg
aad
or
popa
popa
jno
repnz
mov
paddq
nop
pop
fdivl
mov
loopne
daa
mov
in
xorb
repz
pop
or
mov
xchg
inc
jmp
dec
jl
jae
das
sub
pop
jmp
mov
push
int3
fwait
push
addl
jne
and
dec
ljmp
mov
xor
pop
inc
mov
in
dec
sub
loop
jg
inc
lods
int
mov
lcall
fs
divl
adc
pop
jno
push
push
inc
adc
dec
pushf
mov
push
add
push
xor
bound
mov
inc
sti
adc
fbstp
cmp
jno
cmp
mov
sahf
das
push
mov
filds
pushf
dec
loopne
adc
mov
iret
cmp
aad
pop
in
dec
test
add
shr
mov
sbb
lret
ret
lret
sbb
push
fmul
xchg
push
mov
or
cld
imul
sbbb
addl
sub
mov
pop
push
das
inc
push
push
push
imul
pop
push
mov
adc
mov
shrb
adcb
out
xchg
aaa
cmpsb
xchg
or
mov
pushf
popa
jno
dec
dec
outsb
cli
aad
lods
jp
cmpsl
je
pop
sub
jle
sub
popf
test
mov
adc
xor
mov
cmp
das
outsb
mov
out
pop
mov
push
mov
jmp
inc
dec
scas
lcall
add
xor
sbb
dec
in
iret
dec
dec
and
xlat
fistl
subl
mov
xor
jge
adc
cmpsl
mov
or
xchg
mov
pop
into
xchg
sbb
jae
ret
pop
test
stos
popf
lods
push
mov
jo
rorb
cwtl
jnp
cs
jmp
pop
rorl
and
pop
dec
xchg
outsl
xor
cli
fldenv
pop
aas
cmp
lret
icebp
dec
inc
inc
mov
in
insb
sub
lea
push
sahf
inc
inc
out
sbb
and
mov
loopne
mov
aam
pop
cmp
call
mov
mov
shll
ljmp
mov
dec
jno
mov
popf
inc
icebp
jbe
inc
mov
cld
in
jns
xchg
roll
into
cmp
lods
dec
xchg
decl
repnz
aas
fwait
shrb
cli
outsb
mov
iret
pushf
bound
ret
addr16
sub
xchg
dec
data16
fisttps
pop
pop
add
ds
pop
aad
jb
repnz
or
or
jle
test
test
push
jne
std
fmull
dec
cmp
test
hlt
xor
cmp
lret
jnp
push
mov
das
fs
fiaddl
add
ret
inc
or
in
negl
lods
pop
xor
ret
jp
inc
cli
test
imul
out
mov
dec
inc
xchg
test
loopne
push
in
int3
xor
scas
inc
rcll
cmp
mov
mov
test
or
fwait
pushf
ror
pop
cmpsb
xchg
jb
loop
sbb
push
xor
adc
test
arpl
aas
test
xchg
inc
and
cmp
stc
out
jns
push
pop
jecxz
xchg
ljmp
sbb
dec
and
push
push
jg
inc
mov
dec
scas
xor
in
popf
jbe
mov
out
ljmp
loope
pusha
mov
push
inc
pop
es
jno
fisubs
aad
mov
insb
cld
divl
gs
jns
xor
lea
fisttpll
pop
inc
add
lods
mov
in
xchg
std
jl
sub
in
out
jns
cmp
and
repz
push
inc
loop
cli
repnz
arpl
fiaddl
test
std
add
fiadds
stos
pop
lcall
and
adc
stos
and
int
xchg
les
mov
das
adc
lcall
sub
mov
mov
mov
fnstcw
jb
mulb
lcall
adc
or
hlt
or
test
iret
mov
add
and
cmpsl
fmull
pop
fnstenv
dec
mov
mov
mov
push
out
fcmovnu
pop
push
dec
jl
loopne
movsl
sti
in
adc
sbb
cmc
sbbl
push
inc
test
inc
movsl
sub
or
sbb
xchg
testb
dec
jl
jl
dec
sbb
dec
lret
movsb
ljmp
add
lret
mov
adc
mov
mov
mov
pop
imulb
js
and
sbb
mov
test
pop
pop
aaa
fnstenv
inc
mov
jle
out
mov
push
jbe
rcl
adc
fsubrs
ret
jge
movb
clc
or
mov
sbb
ret
test
lret
push
enter
shl
xchg
jl
aaa
test
lret
adc
inc
push
test
mov
mov
aam
mov
push
pusha
inc
sub
xchg
cmp
xchg
fdivrl
xor
and
cli
sub
int
or
mov
stos
mov
lcall
lds
jle
enter
cmpsl
adc
xchg
cmpsl
adc
nop
cltd
mov
test
fninit
dec
jle
lcall
enter
js
cmc
fstpl
sbb
popf
mov
cmp
cltd
cmp
aas
inc
pop
mov
aas
gs
mov
jb
daa
ret
popa
or
imul
outsb
jo
xchg
sub
dec
aaa
popa
int
andb
shr
mov
popl
shll
add
dec
in
mov
mov
outsl
in
or
mov
xchg
adc
add
outsl
icebp
into
mov
dec
xor
adc
jge
jecxz
lret
mov
or
jge
sub
jl
loop
and
lock
mov
out
lea
pop
jne
aad
or
mov
inc
inc
aaa
aam
pop
or
jmp
mov
adc
mov
push
jb
enter
test
adc
lock
lea
inc
lret
pop
adcb
add
and
ret
out
jp
or
fisttps
into
mov
mov
or
pop
add
inc
or
mov
loopne
xor
mov
repz
cmpsb
iret
fistpl
and
xchg
dec
mov
rolb
adc
lods
pop
or
adc
adc
or
icebp
xchg
pop
sub
adc
jmp
cli
push
shr
and
in
in
dec
fs
mov
pushf
psllw
roll
push
pop
sub
pusha
call
sarl
mov
je
or
push
or
push
lods
test
iret
push
sbb
add
xor
cmp
popf
mov
repz
loopne
das
dec
sub
xchg
xchg
insl
in
shrb
inc
cmp
ret
ljmp
xchg
fidivs
dec
icebp
aam
mov
inc
incl
push
inc
adc
jnp
in
pop
sub
insl
insl
xlat
ja
add
xchg
insb
add
ret
je
pushf
lcall
scas
stc
aad
pop
enter
mov
push
fstpl
mov
jmp
das
mov
clc
sbb
subl
adc
ds
jl
mov
xor
and
out
outsb
or
or
adc
pop
cld
mov
add
mov
ds
cltd
rorl
ret
xchg
gs
jo
pop
inc
ret
js
iret
xchg
dec
xor
rcrb
fstpl
and
and
fnsave
jecxz
mov
nop
rolb
jno
mov
xchg
insl
mov
jg
adc
roll
loopne
xor
push
ss
or
pop
out
setg
lret
or
test
xchg
xchg
popa
mov
repz
into
xchg
loop
ds
movsb
pop
sub
mov
xchg
push
dec
jg
or
pop
stos
jle
fisubl
nop
pop
jmp
mov
jp
imul
cmc
addl
in
xchg
jne
je
mov
dec
mov
xor
scas
or
cmc
les
adc
fsubl
push
xchg
push
or
movsb
mov
pop
in
ss
sub
jns
notb
xor
inc
aas
jecxz
mov
loopne
xchg
shll
fbld
pop
setne
sbb
or
dec
sub
test
lods
test
push
and
add
cltd
fcmove
mov
pop
pop
ljmp
and
rorb
ljmp
mov
jae
cmp
aam
add
es
imul
add
inc
mov
lahf
mov
lcall
gs
pop
jmp
jge
lcall
cmp
ficomps
ds
test
daa
int
cmp
cmp
shr
sbb
add
jecxz
popf
pop
shrb
pop
jmp
add
je
ds
xchg
sub
subl
jge
out
in
subl
xchg
fistl
add
in
stos
cmp
sub
fildl
flds
pop
mov
and
or
jns
scas
scas
xchg
mov
inc
outsb
push
test
into
push
lret
mov
push
mov
mov
xchg
mov
out
dec
cs
push
mov
dec
cmpsl
inc
xchg
pop
jno
cmp
clc
lret
cmc
adc
repz
jmp
lcall
xor
fcmovne
pop
sub
cmp
fistpll
jg
xor
sub
mov
adc
dec
xor
adc
stc
jne
movsl
pop
movups
jmp
iret
dec
dec
lea
fwait
sbb
cmp
imul
pop
inc
out
addr16
or
neg
repnz
lock
pushf
loop
mov
ss
sub
mov
sbb
dec
test
xor
stos
aas
cld
out
cwtl
stc
ljmp
aam
xchg
push
xchg
push
stc
add
loop
adc
pop
cmp
xchg
push
leave
or
mov
jle
gs
orb
lods
lahf
in
push
test
fidivrs
mov
aas
mov
test
testl
xor
add
and
inc
sbb
movsl
dec
sbb
subb
call
and
sbb
xor
clc
les
pop
mov
test
fimull
es
into
cmc
shlb
mov
and
jae
rolb
dec
out
les
jl
dec
test
inc
jb
ja
jno
faddp
sbb
push
mov
xchg
lea
loope
xchg
and
xor
out
test
fs
outsb
add
dec
xor
js
aad
mov
sbb
loop
mov
pop
dec
mov
add
shlb
rdtsc
enter
xchg
xchg
mov
ljmp
in
xchg
lock
mov
les
cltd
pop
mov
xchg
mov
push
jmp
add
pop
push
xor
jmp
push
or
cld
aam
pop
idivb
ret
lret
das
int
addb
cltd
push
adc
shr
gs
sbb
mov
push
pop
iret
std
sbb
jne
add
xchg
aaa
xor
test
mov
inc
sub
fcompl
outsb
and
and
divb
in
lcall
mov
imul
jne
jo
mov
jns
jnp
jmp
xor
sbb
je
lcall
cmpsl
inc
inc
lods
xlat
aam
in
movsb
or
and
cmp
ljmp
add
in
daa
ljmp
out
test
dec
gs
jmp
fstps
cld
aam
fsub
test
cmc
das
fcmovbe
repnz
je
push
ja
aas
adc
je
outsl
xchg
sti
les
test
xchg
jne
daa
sbb
pushf
jb
mov
dec
das
jl
ficompl
and
and
stc
fimuls
mov
lock
add
inc
addr16
loope
imull
imull
test
call
clc
xchg
jbe
aad
dec
inc
mov
int
fisttps
adc
pop
push
mov
insb
jmp
add
sub
dec
sub
mov
mov
or
xchg
add
push
inc
push
pop
cld
jne
xchg
mov
sti
push
stc
enter
cmp
add
xchg
sbb
iret
fmuls
mov
adc
test
pop
inc
pop
pop
jg
test
sub
xchg
mov
insb
xor
sub
scas
add
inc
cmp
push
popa
bound
xor
jnp
xchg
xchg
sbb
inc
shll
popa
sub
lock
sahf
into
stos
inc
adc
lea
cmpsl
in
jg
sub
test
cmp
fisubrs
pusha
mov
push
pushf
decl
pop
sti
dec
iret
push
sbb
int3
les
xchg
pop
loopne
insl
or
push
mov
cmp
fisttps
jae
insl
shll
push
shll
inc
mov
jns
cmp
pushf
xchg
pop
and
jnp
out
sbb
mov
scas
adc
fs
cwtl
mov
pop
lea
push
and
popf
jle
push
ror
sub
xor
mov
sbb
lock
dec
repz
jb
out
adc
dec
lds
sub
pop
cmpsb
dec
std
sbb
sub
sub
jl
js
mov
ja
cli
int
and
xor
mov
aam
lret
ja
sbb
icebp
jl
mov
pop
lods
mov
ljmp
ss
sbb
ret
pop
out
xor
or
mov
sub
cs
and
outsb
imul
xlat
not
ret
mov
stos
xchg
mov
mov
cli
lcall
xor
ss
mov
inc
xor
and
daa
ffreep
bound
cmovs
scas
mov
mov
or
sahf
mov
mov
inc
pushf
fldcw
mov
and
add
sbb
xor
clc
insl
pop
lea
js
sbb
icebp
lret
lahf
lods
xchg
aad
std
arpl
adcb
cld
xor
push
pop
add
mov
sar
push
fwait
into
and
jnp
cmpsl
imul
cmpsb
xor
fsub
mov
fstpt
mov
sbbl
cmp
sbb
rorl
fidivrs
jns
insb
cmpsb
in
cmp
aas
xchg
rorb
inc
out
adc
jae
in
mov
cwtl
incl
data16
sub
aaa
dec
pusha
sbb
xchg
int3
inc
test
jns
mov
sub
pop
pop
fadds
mov
mov
ret
sub
mov
into
sbb
and
mov
aaa
call
mov
add
xchg
jg
out
int
in
jb
out
scas
jmp
mov
test
clc
rcl
jne
movb
inc
mov
sbb
dec
cltd
xchg
add
push
inc
cmc
in
sub
or
std
mov
push
jp
loop
cmpsl
popf
int
jne
sbb
lea
mov
or
ljmp
in
xchg
add
xchg
test
xchg
mov
hlt
jle
je
lock
lea
xor
jae
mov
stos
mov
inc
movsb
cli
int
pop
xlat
adc
push
pop
shl
ret
jg
test
subb
jne
sub
pop
push
jbe
ljmp
lods
dec
shl
xchg
cmp
push
and
xchg
xchg
daa
cmp
adc
sbb
lods
ja
lea
add
popf
jle
jae
adc
ficoml
cmpsb
or
inc
xor
adc
repnz
wbinvd
int
mov
movsb
mov
sbb
lea
fstpt
and
insb
data16
push
cmpsl
pusha
xor
lock
outsl
scas
fisttps
inc
popf
popl
lock
xor
lret
notl
mov
xor
mov
push
sub
inc
subl
out
sbb
push
in
cmp
cmpsb
hlt
mov
test
mov
pop
cmp
dec
add
jbe
in
jbe
xchg
pop
dec
push
mov
sbb
xor
or
or
jnp
in
inc
testl
insb
enter
push
je
adc
bound
rcr
adc
cltd
pusha
sub
pop
and
mov
scas
mov
leave
add
ss
arpl
stos
rclb
into
xchg
test
out
pop
bound
dec
dec
daa
popf
mov
shrb
sbb
xchg
fcompp
lea
fisubrl
add
mov
inc
sub
or
inc
dec
pop
movsb
push
sbb
jle
insb
sbb
lret
int
pop
jmp
outsb
push
mov
inc
add
loopne
dec
in
lret
cmp
cmpsl
push
jl
adc
mov
rcll
daa
mov
lock
mov
xchg
test
or
aas
or
sub
decl
add
pop
mov
cmpsb
leave
sbb
incl
test
jmp
dec
lret
pmullw
cltd
mov
rolb
or
pop
adc
push
adc
shrb
or
sub
pop
movsl
inc
xchg
dec
pop
stos
cmc
pusha
xchg
sarl
repnz
jns
inc
mov
push
xchg
scas
sub
dec
out
push
popl
sub
lea
jp
fdivrl
test
cltd
sub
sti
stos
dec
pusha
pop
pop
daa
or
leave
sbb
jecxz
mov
mov
jnp
mov
xor
arpl
cld
es
mov
mov
aaa
mov
outsb
leave
jl
push
add
jl
inc
mov
mov
dec
adc
into
fcomps
sbb
xchg
sub
les
je
jmp
push
jae
jge
cs
jle
cmpsl
adc
fnstenv
sbb
out
dec
jo
lds
subb
inc
mov
outsb
mov
daa
mov
or
js
popf
bound
je
cmp
aam
mov
cli
arpl
or
add
in
negb
mov
adc
and
add
addr16
fbstp
push
and
jle
movsb
push
leave
lret
clc
sbb
stc
inc
pop
clc
adc
pop
jno
sbb
jp
xor
pop
or
dec
inc
pop
pop
testl
mov
jg
jmp
dec
adc
cmp
cmp
mov
nop
xchg
dec
outsb
bound
push
js
cld
inc
jecxz
xchg
adc
leave
and
cmp
jnp
and
add
sub
out
sbb
or
xor
shlb
push
add
movsl
add
sub
fmulp
leave
stc
adc
imul
mov
sub
jmp
mov
push
bound
jo
push
push
mov
mov
mov
fsubrl
cmp
jl
inc
mov
add
cmp
push
mov
adc
cmpsl
cmpsb
sbb
xchg
mov
clc
dec
bound
shll
jne
and
push
and
aas
cmp
xor
and
das
sub
push
sti
pop
aam
sbb
ljmp
or
mov
dec
rol
push
jno
mov
adc
addr16
mov
aaa
or
or
push
adc
fmuls
push
fwait
inc
mov
nop
loope
or
xor
mov
mov
sub
std
push
mov
out
pop
test
fwait
cmc
cltd
add
xchg
or
sbb
test
call
jle
mov
fidivl
hlt
jns
test
fistps
negl
pop
xor
jae
cmp
std
sbb
add
sub
sub
movsl
sbb
fs
outsb
xchg
or
imul
subl
push
ficoms
dec
ret
lahf
mov
jb
adc
push
and
xor
jno
mull
xor
sbb
popa
pop
add
ljmp
sbb
je
inc
ja
jb
testl
lret
nop
fisubs
sbb
ret
repnz
sbb
pop
or
fs
push
jno
rcr
ss
imul
enter
inc
pop
mov
fildll
mov
xorb
pop
push
repnz
adc
jbe
movsl
mov
fildll
mull
xchg
xchg
mov
mov
fmuls
pop
push
icebp
outsl
push
lcall
mov
xchg
adc
jp
and
pushf
in
cmc
sub
scas
in
ljmp
and
sub
push
imul
add
std
fisubs
dec
inc
shlb
stos
inc
or
mov
arpl
add
mov
add
aad
xchg
in
push
xchg
cmp
sub
rcrl
popf
mov
adc
ds
shlb
mov
and
push
push
sbb
arpl
jg
int3
call
icebp
and
test
repnz
xlat
dec
lret
leave
fistpll
aad
inc
mov
dec
scas
ret
mov
mov
fbld
sub
adc
dec
outsl
loope
pusha
adc
bound
daa
sarl
adc
mov
push
mov
mov
lods
cmp
push
ss
inc
jl
in
dec
scas
jne
mov
xchg
adc
add
sub
cmpsl
mov
push
les
ss
mov
bound
inc
in
lcall
push
pop
cmp
mov
std
fsubrs
mov
cli
outsb
lea
jno
xor
outsb
xchg
or
outsl
push
cs
pop
pop
filds
sbb
stos
es
mov
dec
aad
mov
pop
shrb
lock
fsub
in
outsl
jae
xchg
add
push
dec
push
ret
fs
shl
xor
cmp
arpl
sbbl
add
jge
adc
in
js
lahf
sub
and
loope
aas
cld
sarl
pop
dec
mov
call
cltd
xchg
mov
imul
xor
push
jbe
xor
sbb
cmp
xor
test
scas
sub
inc
pop
cld
xchg
and
lret
les
iret
xchg
rclb
insb
mov
push
jae
jle
pop
lds
dec
pop
pop
push
arpl
sub
bound
or
xchg
aam
loop
divb
out
jno
xchg
jnp
loope
pop
xor
enter
jecxz
call
ffreep
in
pop
push
pop
dec
into
mov
mov
addl
xcrypt-cfb
cmpsl
data16
dec
cmc
adc
sahf
sbb
cmpsl
xor
add
push
jmp
dec
sbb
push
shrl
jmp
pushf
adcb
cs
jmp
sub
stc
and
xor
stos
mov
addb
mov
roll
in
dec
je
loop
fwait
sub
jbe
cmpsb
pop
dec
testl
rcrl
pop
or
pop
or
adc
pop
lahf
dec
cmp
add
add
repz
push
add
ret
cmpsb
imul
adc
test
mov
mov
loop
cmp
iret
xchg
enter
subl
xor
outsb
loop
movsl
out
adc
add
enter
xchg
pusha
popf
pop
stos
iret
hlt
add
cwtl
xchg
in
cmp
push
mov
inc
sbb
leave
sub
push
icebp
scas
mov
scas
insl
sti
inc
lock
int3
sub
xchg
imul
scas
les
int3
fdivrs
mov
cmp
sbb
cmp
jp
xchg
aam
xlat
or
rcl
jae
adc
out
insl
or
mov
xor
loopne
test
xorb
in
movsl
sarb
inc
jge
mov
mov
stos
sub
ljmp
sub
lods
sbb
jge
jns
sub
and
sub
data16
outsl
inc
fs
mov
pop
rolb
insl
mov
testl
mov
jge
pusha
push
bnd
add
clc
mov
sarb
adc
popa
sbb
or
xchg
std
push
inc
pop
or
or
pop
fidivrs
das
cltd
add
fsts
stos
mov
out
pop
stc
stc
sbb
loop
andl
mov
pop
cmpsb
xor
xchg
dec
jp
stc
lods
iret
imul
bound
cld
sub
andl
sbb
adc
sub
mov
jnp
hlt
clc
rorb
fdiv
push
dec
insl
aas
call
push
cli
mov
add
add
sti
push
sub
xchg
sbb
inc
mov
cmp
rol
fsubrs
ljmp
mov
mov
mov
test
outsb
lods
or
repnz
int3
fidivrl
rcrb
cltd
dec
sti
lock
sbb
xor
jae
jno
cmpsb
out
leave
sub
in
dec
insb
iret
into
mov
icebp
cld
dec
fimull
pop
popf
mov
sbb
cmp
mull
pop
jg
jge
in
pusha
popf
sti
mov
lahf
sbb
mov
movsb
stos
das
icebp
in
cwtl
xchg
leave
pop
ret
jmp
fistl
sbb
cmp
out
lcall
ss
mov
dec
gs
mov
mov
popa
sti
fcmovnu
sub
xor
xor
mov
cs
cld
subl
inc
pop
and
in
mov
in
ja
inc
stc
sbb
mov
dec
shll
cmp
adc
mov
xor
add
push
inc
lahf
fildl
or
mov
repz
scas
stc
push
add
jecxz
jle
imul
adcb
cmp
sbb
dec
sub
ss
pop
stos
xchg
xchg
add
es
leave
adc
jno
sub
push
add
in
sete
jo
jnp
inc
push
in
jne
sbb
out
sahf
jle
mov
stc
iret
or
icebp
test
xor
adcl
cs
shr
arpl
mov
mov
ss
xchg
sbb
test
xchg
jne
lret
cltd
inc
sti
pop
out
xchg
add
out
sub
lock
or
jne
nop
stos
pop
jnp
or
sbb
test
sbb
add
mov
fistl
push
arpl
and
fsubr
imul
sbb
in
fucomip
push
gs
cmp
nop
in
mov
daa
cli
fisttps
push
cmpsb
aas
cmc
sub
xlat
xchg
jo
imul
cmc
int
xchg
in
xor
repnz
jge
sub
mov
jae
mov
jo
andb
inc
in
outsl
push
cwtl
sbb
insb
cmp
push
shlb
xor
in
and
insb
in
rcrl
bound
mov
outsb
sarl
and
outsb
dec
std
sub
sbb
jne
xor
jb
mov
stc
xor
push
push
nop
mov
lcall
and
daa
ja
push
addr16
add
sub
stc
fildll
lock
cld
mov
inc
movsb
leave
pop
orb
fnstenv
sahf
dec
lret
rol
loop
testl
iret
std
xchg
mov
sti
int3
push
xlat
sbb
das
jns
scas
or
pop
add
mov
push
scas
mov
int
cwtl
add
cs
mov
mov
iret
sub
xor
dec
pushl
jnp
roll
repz
mov
out
cmp
lea
das
test
aaa
sbb
sbb
cmpb
dec
jg
es
out
and
out
mov
pop
inc
stc
jo
lods
mov
push
ja
mov
mov
mov
xor
mov
loopne
fwait
hlt
insl
clc
mov
inc
aas
xor
cmpsb
movsl
repz
xchg
pop
sbb
je
sbb
xchg
int
jmp
fidivrl
mov
xchg
xchg
leave
sti
mov
jno
out
jmp
push
push
iret
iret
and
sbb
mov
push
mov
inc
pushf
xchg
lret
mov
aam
jp
lods
mov
out
mov
xor
sbb
mov
add
cwtl
mov
cmp
mov
mov
and
inc
jg
cmp
popf
mov
cli
repz
fisubrl
scas
adc
cmp
sbb
scas
das
pop
xchg
imul
mov
cmp
sbb
or
xor
les
repnz
jns
cwtl
in
jg
push
sub
cli
or
addb
imul
mov
movsl
fisttpll
or
test
xchg
popf
out
and
dec
rcll
jns
jg,pn
jno
add
sahf
jecxz
mov
fs
loopne
xchg
filds
mov
mov
popf
cld
scas
or
insl
pop
adc
lds
hlt
aaa
popa
pop
pop
push
inc
lods
subb
adc
call
and
cmp
fidivs
inc
xchg
push
lret
add
mov
sub
dec
int3
cmp
daa
shrl
dec
jmp
js
in
adc
or
cmc
ds
and
and
shll
xchg
pop
filds
dec
outsb
mov
fimuls
mov
inc
out
inc
out
jnp
jne
mov
data16
mov
xchg
dec
pop
add
mov
stc
arpl
lds
push
jnp
jne
dec
aad
ljmp
add
dec
cltd
mov
mov
xchg
or
xlat
pop
sbb
hlt
jecxz
dec
pop
enter
pushl
imul
xchg
repz
hlt
popa
pop
inc
pop
les
cmp
pusha
popf
mov
add
lahf
mov
inc
notl
outsl
ret
jne
ja
pop
nop
insl
sub
mov
in
js
mov
inc
inc
pop
fwait
leave
push
loop
sbbb
sbb
test
push
sbb
pop
das
outsl
mov
rol
sar
mov
push
cltd
mov
xor
pop
mov
xchg
jmp
dec
push
fnstsw
sub
in
xchg
pop
or
cld
icebp
pop
outsl
ret
fcomp
cmp
xor
loop
imul
ds
je
mov
jge
cmpsl
inc
and
xor
fwait
cmc
mov
cmp
lcall
mov
xlat
pop
xchg
cwtl
inc
add
pop
cwtl
int
scas
cmc
repnz
mov
seta
mov
shl
and
or
pop
push
mov
xchg
shll
cmp
fadds
ja
ror
filds
adc
xor
lcall
push
or
xchg
and
add
push
lret
scas
mov
lods
cmpsl
cli
inc
sbb
sarb
xlat
pop
loope
mov
lcall
leave
mov
in
lret
mov
sub
xor
push
cmp
jns
add
push
push
jge
popa
adcl
lcall
aas
ljmp
movsb
push
leave
movsl
jne
pop
pusha
mov
mov
dec
rcll
mov
icebp
es
aam
jg
or
mov
sbb
sbb
nop
mov
xchg
rolb
hlt
mov
dec
pop
pop
pusha
adc
jbe
stc
cld
imul
jmp
mov
sub
int
mov
inc
test
test
adc
pop
cmp
sbb
mov
jne
scas
sahf
adc
push
repz
out
xchg
leave
inc
inc
jle
push
and
std
mov
ljmp
adc
pop
mov
lods
out
loope
push
insl
inc
ror
das
push
and
cltd
and
pop
dec
sub
loopne
test
inc
scas
ja
lods
mov
mov
add
dec
or
xor
loop
push
xchg
or
mov
clc
ja
mov
xorb
jno
adc
push
imul
imul
cmp
jno
add
lret
test
push
jbe
in
subl
lods
cmc
dec
fs
and
loopne
fwait
out
sti
imul
push
daa
fstp
sub
jnp
lret
stos
fdivl
jle
dec
rorb
movl
pop
add
out
imul
lods
loope
out
cmp
jecxz
addr16
scas
and
mov
ret
mov
xor
enter
dec
sbb
cs
mov
insl
roll
sub
mov
sar
outsb
xchg
neg
inc
mov
push
mov
dec
insb
jp
dec
cmp
hlt
add
push
imul
add
jge,pn
xor
insl
leave
or
xchg
lock
cli
adc
mov
jb
cmpsb
mov
fs
xor
sti
push
push
icebp
subl
je
dec
xchg
ds
push
cld
loop
popf
andb
push
push
pop
pop
sub
enter
in
xchg
lods
pop
lock
xchg
mov
imul
daa
lods
dec
adc
or
mov
sub
inc
clc
mov
sti
or
cmc
xchg
lds
mov
jp
inc
aam
mov
adc
dec
sbbb
sub
sbb
ror
imul
xchg
loope
scas
je
pop
enter
cli
pop
rcr
sub
repnz
push
popa
pop
push
pop
leave
or
inc
pop
dec
mov
sbb
movsb
xchg
mov
test
sahf
loopne
ja
mov
sahf
es
or
addr16
lret
push
out
xchg
and
out
cmp
movsb
mov
add
cmpsb
cmpsb
pop
xchg
jns
jns
mov
outsb
js
fistps
repnz
aam
sbb
mov
jbe
stos
xchg
mov
mov
mov
xchg
daa
sbb
scas
add
in
mov
mov
lea
fsub
pop
out
jne
push
movsl
sti
mov
cmc
aas
roll
mov
ret
sbb
out
mov
dec
or
jbe
lret
pop
out
jle
std
mov
ret
ds
fsub
lret
int
cmc
mov
repz
mov
pop
and
jge
push
fistpll
pop
xchg
and
mov
sarl
mov
jmp
or
push
ror
mov
outsb
dec
loope
mov
arpl
icebp
jne
pop
sub
hlt
mov
jae
fistpl
sbb
cmp
mov
xchg
fwait
cmp
cwtl
test
jno
ds
cmp
data16
cmp
adc
push
inc
adc
mov
fstpt
inc
or
dec
push
movsb
icebp
out
mov
sbb
daa
and
das
inc
sbb
je
mov
or
loope
lahf
ljmp
pop
jp
sbb
inc
fisubl
jmp
cwtl
pop
xchg
mov
ss
jmp
cwtl
sti
sbb
insl
ret
mov
aam
xchg
movsb
jmp
daa
or
vpunpckhwd
and
aaa
add
jp
cmc
cmp
test
inc
xor
shlb
lret
ljmp
fisttpl
xor
push
mov
cmp
mov
sub
test
lret
cmp
push
loopne
insb
bound
xor
xor
mov
cli
out
imul
out
push
push
inc
jecxz
movsl
cwtl
jno
in
xor
mov
out
add
lock
sahf
add
and
test
rorl
mov
sti
push
xchg
jecxz
scas
push
mov
push
out
xor
cmp
push
xor
sub
sub
iret
iret
shrl
push
bound
out
inc
cmp
jl
jb
addr16
push
shl
cmpl
or
dec
ja
test
jnp
movsl
sub
sub
nop
sahf
imul
lds
and
dec
jp
cld
mov
dec
inc
pop
pop
pop
mov
mov
or
and
clc
and
imul
cmp
cmp
mov
lcall
mov
jnp
dec
sub
xchg
mov
aad
push
mov
in
stc
mov
shrb
cmp
xor
lahf
push
push
dec
xor
push
fwait
shlb
mov
pop
jb
js
push
xor
je
sarl
shlb
dec
xor
out
mov
xchg
inc
call
ja
daa
jns
icebp
jae
insb
sub
cmp
shlb
lods
in
fadd
fldl2e
or
jge
mov
inc
in
cltd
call
add
in
dec
mov
inc
adc
jg
gs
push
pop
xor
in
shll
ficoml
xor
jns
sarl
andl
movsb
and
shl
adc
out
sub
ret
mov
rorl
in
mov
mov
out
xchg
xor
push
jb
stc
mov
popf
mov
jle
sti
jg
inc
inc
push
inc
jnp
insl
dec
sbb
xor
in
sub
pop
and
bound
subl
pop
adc
fsubrs
testb
cmp
nop
xor
daa
cs
imul
inc
les
pop
jno
mov
xchg
pop
add
mov
add
jge
sbb
ret
xchg
shl
or
mov
mov
inc
addl
inc
rcll
adc
sub
mov
outsb
sti
sub
ds
scas
mov
std
daa
test
jns
inc
jge
js
fwait
arpl
fadds
add
and
xchg
cmp
imul
xor
sbb
fsts
ja
sub
inc
cs
fnsave
mov
xchg
mov
jbe
leave
xchg
ficoml
fcmove
rcrl
and
lock
inc
cmp
fbstp
adc
xor
add
mov
les
cld
mov
aas
in
imul
pop
sub
dec
or
and
sbb
mov
sbbb
call
cmpsl
jno
jp
and
inc
stc
loope
hlt
shrb
jbe
jecxz
ss
hlt
sbb
mov
xor
xor
mov
popa
jl
adc
jecxz
push
xor
das
dec
adc
fsts
lahf
ret
inc
pop
call
push
jnp
mov
xchg
mov
cmp
sbb
adc
sti
andl
test
sbb
xor
jno
iret
fld
cltd
jp
shl
ja
out
data16
adc
call
loope
test
nop
xor
dec
ds
incb
lods
mulb
cli
xor
mov
sbb
leave
cmpsb
stos
imul
fldenv
cmp
clc
mov
fadd
cmpsl
stos
jl
into
pop
out
js
mov
jbe
push
nop
aaa
punpckhdq
add
mov
ljmp
or
lret
pop
add
and
jnp
arpl
lcall
inc
stc
sub
addr16
mov
andw
fstp
pop
jne
out
adc
les
pop
xchg
push
adc
mulb
mov
or
out
cld
out
or
jnp
movsb
jo
xor
pop
lds
jl
loop
outsl
test
ret
das
inc
call
xchg
jp
or
add
into
out
pop
popa
leave
xchg
int
aam
mov
ds
jecxz
add
cwtl
test
cmp
cmpl
inc
mov
push
leave
rcll
push
add
addr16
mov
dec
sub
dec
clc
xchg
pop
push
ss
shll
sbb
dec
or
loopne
inc
out
aaa
scas
test
testb
sahf
xchg
xchg
out
out
add
mov
pop
sbb
mov
aam
inc
cmc
add
inc
cmp
cmc
scas
aad
and
push
and
mov
add
pop
add
jb,pt
loop
dec
xchg
cmp
test
or
mov
dec
jge
pop
loop
orl
repz
fisubs
xor
scas
icebp
adc
adc
pusha
add
pop
data16
mov
sub
sbb
out
test
push
rep
into
cmp
adc
pop
lods
lcall
mov
add
jmp
mov
jbe
aad
adc
cli
imul
roll
jne
mov
jp
push
mov
fchs
ret
in
mov
stc
ret
mov
mov
shlb
sub
add
and
outsb
mov
jae
mov
and
push
outsl
adc
pop
mov
loop
lret
loopne
sub
mov
sub
sbbb
sub
xchg
jecxz
jb
or
mov
mov
add
stos
pop
adc
dec
testl
pusha
int
sti
into
outsl
iret
aam
daa
insl
sti
ficompl
js
inc
sbb
add
daa
sbb
mov
mov
pop
or
std
mov
jg
mov
fdivrl
dec
insl
mov
push
adcb
lret
push
lds
insb
scas
push
test
push
ja
mov
jecxz
dec
or
xchg
mov
enter
ret
fbld
insl
in
mov
or
inc
or
dec
xor
dec
or
loope
add
notb
aas
push
add
stc
and
push
push
in
adc
punpckhdq
paddb
mov
cmp
test
push
adcb
jl
out
clc
cltd
imul
mov
mov
out
inc
orps
sbbb
pop
push
addr16
xchg
pusha
mov
sub
inc
jnp
or
stos
cmp
lcall
push
lret
add
sahf
popa
fildl
bswap
movl
mov
jb
push
scas
jge
shll
js
mov
and
lods
jnp
and
push
fldl
outsb
cmpsl
loop
pop
inc
mov
in
dec
push
pop
inc
repz
icebp
push
mov
xor
or
fdivrl
pop
mov
pop
cmp
mov
and
std
jne
add
in
pop
mov
push
loopne
jbe
ljmp
push
push
leave
movsl
add
mov
adc
stos
lret
mov
and
mov
shrl
or
push
popf
dec
inc
and
pop
mov
xor
insb
cmp
and
inc
mov
aam
les
cltd
ja
jle
xor
cmp
add
pop
lods
in
push
pusha
out
dec
jnp
inc
loopne
mov
xchg
sub
mov
ljmp
xchg
ror
add
mov
and
xchg
sub
jl
and
pop
mov
insb
jb
add
test
jecxz
add
imul
xchg
data16
rclb
dec
and
hlt
fstl
jle
loop
jp
xchg
adc
leave
scas
sbb
jno
es
lea
test
int3
test
nop
ljmp
repnz
mov
push
cs
pop
aaa
fmuls
or
mov
jbe
lcall
sub
lods
stc
jl
xchg
xor
dec
xor
add
jae
das
mov
add
and
stos
test
sbbb
jge
lods
sbb
and
jecxz
bound
insl
lock
mov
pushf
sbb
cld
hlt
sbb
clc
mov
pop
push
push
jnp
std
popa
addl
aas
xor
dec
mov
dec
orb
loopne
divw
lcall
lahf
cltd
pop
pop
icebp
cmp
jmp
iret
xchg
idivl
andl
test
lods
jae
jbe
les
cld
in
mov
xlat
pop
repnz
sbb
into
cltd
cmpsb
inc
push
jge
adc
add
out
clc
cmp
jb
dec
int3
out
cmp
scas
cmpsl
push
jle
dec
gs
mov
mov
popa
sub
outsl
insl
or
add
cli
mov
pop
je
data16
insb
stos
fmuls
clc
mov
sub
cltd
insb
mov
movl
popl
mov
inc
loope
or
rep
pop
mov
in
shll
inc
out
jl
repnz
push
loopne
add
stos
inc
stos
aad
cld
add
sbb
roll
call
hlt
lahf
fldt
push
aad
aaa
scas
inc
insb
nop
sahf
sub
int3
ljmp
cmc
cmp
dec
adc
and
cmpl
inc
add
daa
jae
mov
out
pop
cld
push
xlat
cmp
push
pop
mov
mov
and
jns
or
pop
enter
into
cmp
xchg
mov
add
lret
lahf
lods
idivl
push
cmp
jge
insb
and
ja
outsb
lcall
ljmp
cmc
into
ret
sbb
mov
cli
jbe
inc
ss
mov
cltd
sbb
or
lock
sahf
sub
fnstcw
mov
cmp
cs
add
sub
cld
add
aas
movb
jmp
jbe
dec
dec
cmp
test
fisubrs
int3
lods
fsub
test
scas
cmc
inc
inc
or
popa
xchg
test
mov
addl
fcoms
sti
es
mov
dec
les
outsb
int
dec
mov
xor
push
jae
pop
ja
xchg
adc
aad
sub
rcll
and
push
xor
mov
add
rclb
daa
popa
rcrl
lods
cld
out
xchg
divb
inc
xor
mov
adc
jmp
inc
mov
sar
daa
add
push
mov
sti
sar
xlat
bound
js
fiaddl
aad
jg
pop
pop
popf
push
aas
push
test
lods
mov
inc
imul
jl
sahf
dec
orb
or
scas
push
fnsave
stos
pop
test
mov
adc
in
fistpll
hlt
clc
and
popf
xchg
fcom
or
fscale
nop
adc
or
adc
push
cmp
sbb
rcl
daa
xchg
mov
fldenv
loop
xchg
stc
js
add
lret
clc
add
loope
pop
jecxz
pop
inc
inc
in
dec
test
add
inc
mov
xlat
mov
popa
sbb
out
int3
xor
sti
scas
les
ja
sbb
shrl
out
dec
sub
jp
nop
and
jb
mov
dec
in
push
adc
cmpsl
fmul
into
jo
dec
or
hlt
push
and
xor
jl
stos
jnp
ljmp
xchg
sahf
mov
lret
arpl
push
sbb
or
pusha
mov
dec
fsubs
popa
pusha
jle
roll
test
pop
das
ds
lcall
adc
mov
cmp
or
jbe
cmp
ret
push
addr16
dec
popa
rcll
stos
iret
sahf
sbb
inc
adc
enter
inc
adc
or
or
jne
roll
jmp
push
xor
in
push
mov
push
sbb
andb
dec
xchg
test
inc
jle
xchg
loopne
sbb
dec
addl
jecxz
mov
rolb
test
mov
push
aam
add
fcmovnu
rol
dec
rorl
jae
jb
mov
cld
mov
pop
adc
imul
inc
cmp
addr16
xor
addb
mov
xchg
pop
and
into
bound
ljmp
test
popf
in
in
clc
jmp
push
bound
inc
es
loop
fwait
subl
insl
mov
addr16
out
push
cld
sbbl
mov
push
shl
arpl
ss
clc
mov
fdivrs
sub
and
sub
xchg
test
aaa
int
cld
push
sbb
decl
xor
nop
insl
dec
pop
ret
sub
xchg
jecxz
mov
jne
pop
xchg
or
jne
or
pop
sub
fs
jl
mov
test
sub
cmpsb
in
add
jecxz
shrl
aaa
xlat
out
outsb
cmp
mov
in
mov
inc
dec
mov
jne
mov
call
mov
icebp
sub
dec
je
lock
cmp
aaa
mov
hlt
pop
xor
pusha
inc
sbb
pop
insl
addl
inc
nop
mov
insb
add
insb
adcb
cld
hlt
fdivs
or
mov
and
fcmovbe
dec
xor
into
xor
mov
jbe
fcomps
add
leave
rorl
xor
add
loope
decb
pop
push
idivl
add
jge
cld
repz
clc
rcll
adc
das
test
shl
pop
push
cs
pop
fcoms
into
decl
repz
int3
lods
xor
in
or
fwait
jns
cmp
and
and
jb
dec
pop
movsl
jmp
out
sti
jae
aas
lcall
jae
sbb
loope
stc
lock
mov
xor
or
stc
inc
sub
divb
cwtl
movsb
mov
mov
mov
jns
adc
arpl
pop
shrl
dec
jl
mov
clc
iret
ror
loop
andl
xchg
lds
or
add
mov
and
in
inc
int
jns
dec
popa
adc
pop
sti
cwtl
sub
mov
lods
mov
mov
cmpsb
inc
inc
pop
jecxz
in
lock
jle
sbb
stos
mov
or
data16
xor
push
sbb
enter
xor
repnz
ret
cmp
inc
dec
jnp
pop
mov
cld
jl
push
sbb
jae
mov
adc
sbb
les
jns
cli
scas
jae
subl
fstpl
nop
rep
mov
faddl
scas
nop
hlt
push
add
stos
test
adc
pop
sub
mov
test
outsb
test
inc
call
clc
sub
jbe
roll
fisubrs
inc
std
xchg
pop
outsl
into
inc
cmp
fcmovbe
and
jne
into
fisubrl
and
cwtl
or
sti
cmp
rorl
xchg
test
dec
leave
insl
aas
mov
pushl
repnz
jnp
xchg
inc
out
jmp
jl
shl
mov
cmp
adc
sbb
pop
cmp
inc
pop
sbb
jns
out
dec
mov
mov
xchg
ljmp
cli
std
ss
testl
mov
je
adc
sbb
or
push
push
cltd
jne
in
ss
pushf
rolb
stos
dec
push
bound
add
xchg
insl
mulb
xor
add
mov
sub
jnp
xor
jle
mov
xchg
or
insb
out
push
add
sbb
aas
sbb
jno
icebp
in
xchg
cli
sbb
dec
lods
dec
inc
in
mov
and
subb
cmp
in
jae
outsb
mov
loopne
dec
mov
inc
and
mov
fwait
sbb
dec
es
sbb
or
orb
out
xchg
into
icebp
add
and
push
fiaddl
inc
sub
scas
clc
xor
add
fwait
jae
jno
xchg
imul
std
pop
rcrl
adcb
aad
ss
mov
inc
sub
or
sbb
push
xchg
clc
jo
jno
in
pusha
push
add
es
mov
fdivrs
mov
or
popa
popf
cmp
lret
hlt
test
push
push
dec
mov
cmp
mov
cmp
mov
push
jp
lret
cltd
add
daa
ja
cmp
mov
loop
sbb
cmp
loop
lret
cmp
cmp
pushf
lcall
xor
cmp
add
sbb
adc
ret
cmp
pop
jnp
add
sbb
sbb
adcl
lret
scas
cmp
xchg
mov
or
addr16
jmp
dec
int3
repz
dec
xchg
cwtl
out
int3
and
scas
lock
lods
out
imul
rcl
inc
dec
lods
lods
dec
cltd
add
dec
xchg
xlat
cmp
popl
es
notl
and
mov
pusha
xchg
les
xor
scas
push
aas
mov
and
fcmovnbe
mov
and
mov
xchg
cmp
ret
xorb
inc
cmc
push
adc
lret
popa
popf
lahf
xchg
cwtl
jecxz
push
jo
pushf
push
dec
jle
in
adc
fwait
lods
fnstenv
sbbl
test
out
insl
jno
popf
add
out
cmp
rcll
sub
dec
sub
dec
mov
mov
fisttpll
mov
aad
arpl
inc
lret
adc
jmp
inc
cmp
push
iret
push
mov
lcall
or
test
cmp
subps
lock
cltd
xchg
pushf
ja
icebp
mov
loop
bound
insb
jmp
mov
lods
lods
out
inc
xor
jle
pop
sub
and
test
je
fsubrl
pop
sbb
dec
jno
roll
inc
out
int3
pop
push
mov
and
enter
lds
popa
fildl
daa
shl
cld
mov
mov
add
jl
stc
add
mov
popa
pop
call
adc
jge
bound
scas
es
out
pop
inc
int3
cwtl
shr
int
cltd
push
lock
mov
push
popa
mov
pushf
arpl
aas
or
add
js
insl
pop
stos
inc
and
les
add
loop
cmp
push
sbb
add
xor
xor
xchg
add
pop
test
aas
pop
flds
jns
jb
gs
in
pusha
xchg
dec
repnz
sbb
out
iret
das
pop
xor
movlps
mov
push
das
insb
cmpsl
cmp
mov
inc
inc
adc
int3
xchg
mov
sbb
insb
jp
or
sti
loop
rol
mull
lcall
sarb
sub
pop
sub
repz
mov
pop
jae
pop
inc
stc
iret
daa
loope
out
pop
cmp
sbbl
loop
cs
mov
sub
ja
inc
sub
push
sar
adcl
xor
sahf
rep
mov
sub
mov
sti
insb
pop
imul
mov
mov
enter
les
in
scas
jno
lds
call
fs
fbld
pop
inc
ja
leave
test
push
lret
rclb
ss
xchg
ffreep
cmc
stos
xchg
popf
insb
lock
xchg
sbb
inc
imul
sahf
xchg
insb
add
std
sub
int
test
push
stos
mov
outsl
lret
cmpsb
cmp
call
mov
ds
or
dec
repz
mov
pop
and
push
aam
das
sbb
shll
cmp
out
push
out
mov
cmp
aad
cli
push
mov
and
cld
sti
jno
mov
jbe
xchg
xor
outsb
push
lret
mov
ret
sarb
push
test
les
xchg
jno
cmp
mov
inc
pop
fwait
and
clc
and
push
mov
stos
xchg
mov
or
cmp
mov
loope
sub
mov
add
sbb
cmp
dec
repnz
mov
insl
mov
arpl
rorl
in
loop
add
push
ja
cmp
test
sub
out
sub
mov
jl
cmp
dec
mov
cli
clc
loopne
pushf
cmp
es
pop
into
fbld
cmp
mov
inc
and
jo
mov
hlt
sbb
push
mov
sbb
xchg
into
mov
cmpsb
push
les
repnz
mov
cwtl
les
push
sbb
dec
xchg
xor
ret
sahf
mull
sbb
frstor
xchg
test
int3
cwtl
jg
insb
xor
fcmovne
arpl
jne
cmp
out
add
inc
fiadds
xchg
cmp
sbb
insb
mov
mov
loop
repz
mov
dec
push
loopne
lcall
or
in
incl
nop
mov
push
in
cmp
sub
mov
imul
adc
mov
dec
adc
pop
lret
xor
xor
repz
mov
xchg
mov
fsubp
cs
jge
bound
push
mov
sbb
push
xor
jb
jo
call
or
lcall
lock
cmp
mov
cmpsb
dec
add
xor
xor
fdivp
idiv
lahf
aam
cltd
xchg
fisttpl
popa
or
jle
xchg
cs
add
stos
shlb
jns
scas
and
scas
sbb
xchg
adc
pusha
sub
pop
pop
cmpsl
xchg
sbb
xor
xchg
mov
adc
ss
mov
adc
cli
and
ss
mov
cmc
lods
or
sahf
iret
ret
cmp
jge
dec
sub
lret
paddsw
adc
rcrb
sbb
sbb
xchg
cmp
adcb
or
xchg
lock
mov
sbb
push
call
jg
inc
mov
mov
push
dec
jno
popa
loop
dec
les
cmpb
arpl
cmp
sub
jge
dec
pop
mov
mov
ljmp
loope
int3
push
xchg
movl
xchg
jp
fimuls
add
fstp
dec
or
test
or
ret
repnz
ds
fucomi
add
or
inc
dec
mov
or
dec
xor
rcrb
js
popa
sti
mov
mov
and
out
push
xchg
pop
bound
xor
test
push
loop,pn
mov
rcrb
adc
fstps
popa
adc
mov
pop
jg
gs
jo
outsl
stos
fs
lea
adc
pop
lahf
jb
add
repz
adc
dec
cmp
and
sbb
jge
add
popa
ja
icebp
pop
mov
and
sbb
fmul
inc
adc
dec
loope
adc
mov
xchg
mov
mov
mov
stos
in
mov
loop
add
shll
lock
push
dec
or
push
movsb
decl
mov
insb
push
stos
jo
push
in
and
jb
and
pop
add
xor
mov
pushf
jmp
push
pop
lds
fsubp
loop
jnp
pop
hlt
je
jg
mov
and
iret
ss
xor
test
sub
xchg
xchg
ja
cltd
sahf
insl
enter
fcoms
sarb
jmp
cmp
in
adc
int3
rol
cmc
mov
sub
push
sahf
mov
in
ljmp
je
xor
pop
shl
clc
inc
call
aas
cmc
add
xor
inc
mov
jno
fistpll
xchg
sub
cmpsb
xchg
ficoms
ret
xchg
lret
add
ficompl
xchg
lret
ret
clc
cmp
inc
jae
ss
pop
and
jmp
xor
int3
xor
lea
cmpsl
test
std
dec
add
incl
sbb
clc
ret
out
sbb
cmp
mov
lds
dec
out
add
dec
jo
movsl
rcl
arpl
sub
mov
enter
or
mov
popf
cmpsb
lahf
mov
das
pop
iret
gs
xor
push
dec
repnz
gs
lea
or
mov
sbb
call
mov
push
in
or
pop
cwtl
inc
loopne
or
or
xor
jle
jb
int3
mov
push
adc
rcrl
dec
mov
xor
mov
sub
js
push
mov
sub
lea
test
and
int3
mov
cmp
scas
mov
dec
stos
cmc
adc
mov
mov
pop
test
sub
lea
repnz
fsubs
enter
adc
mov
cmp
out
dec
xchg
sbb
adcb
mov
stos
stos
jecxz
mov
shrl
cld
cmp
mov
cmp
arpl
inc
aam
add
in
and
dec
mov
xchg
xchg
lcall
rolb
inc
xchg
insl
adc
add
mov
mov
mov
dec
in
jmp
lret
mov
push
lods
test
sbb
cmp
sahf
std
dec
jl
repz
subl
cli
cmp
adc
and
das
mov
mov
ja
out
xchg
mov
cmp
ljmp
fisttpll
sub
aas
sbb
std
repnz
scas
shll
test
outsl
xor
mov
xchg
jb
ss
inc
push
mov
out
xchg
xor
lret
or
pop
into
push
pop
xor
cmp
out
fidivs
adc
sbb
sbb
adc
pop
sbb
inc
dec
fisttps
mov
rep
xor
pop
xor
int
ja
outsl
aad
std
push
sub
data16
cwtl
dec
test
push
roll
gs
lods
cld
ss
popa
jmp
xchg
pop
push
inc
jp
or
rcrl
sahf
sub
in
aaa
jle
xchg
push
mov
push
xchg
fidivrs
dec
push
add
dec
in
mov
addr16
mov
lods
shll
push
cltd
ds
imul
sbb
sbb
aas
add
outsb
pushf
xlat
inc
cmp
rcrl
jecxz
movsb
in
push
cld
jbe
outsb
jl
mov
pop
rcrl
je
loopne
push
lret
xchg
mov
jnp
ret
pop
add
adc
fdiv
gs
fistpl
mov
lret
je
jno
pop
orl
popl
rep
cmp
stos
lcall
sti
ret
or
mov
in
in
loope
cmc
mov
and
mov
push
ret
je
adc
jne
xchg
insb
mov
cld
dec
push
mov
je
cwtl
in
xor
add
mov
stos
dec
stos
mov
arpl
jg
or
shlb
sti
lahf
leave
lcall
int
push
fadd
dec
test
dec
mov
sbb
pushf
and
mov
and
xor
adc
jns
jmp
add
inc
js
ds
xchg
inc
es
cmp
adc
mov
jae
adc
imul
mov
loop
sub
aas
ds
mov
jg
push
fiaddl
int
cwtl
xor
adc
fidivl
sbb
fdivs
leave
inc
cwtl
mov
cmp
mov
add
cmp
unpcklps
inc
mov
mov
inc
shrl
cmp
sahf
xor
adc
mov
jne
push
addl
lahf
imul
push
lahf
int
push
dec
pusha
imul
ret
int3
pop
lods
or
adc
fwait
call
xchg
push
inc
or
call
cs
jp
out
inc
pop
sub
ds
push
mov
mov
je
lea
dec
push
or
jno
xchg
idivl
xchg
add
rorb
roll
or
xchg
int
mov
mov
fcomi
mov
or
mov
push
jp
out
xchg
adc
pop
xchg
roll
mov
lods
clc
ds
mov
hlt
fsubp
mov
gs
fwait
fwait
in
mov
mov
in
cs
mov
mov
fiaddl
or
jbe
and
lds
shrb
fmul
mov
scas
ror
and
inc
cwtl
cmp
push
ficompl
sub
movsb
cmp
lahf
scas
ret
jns
test
outsl
push
dec
fs
scas
add
test
cmpsl
push
jo
std
or
pop
sti
mov
mov
cmp
scas
pop
cmp
arpl
or
mov
mov
pop
xchg
cmp
in
lock
ror
xor
mov
flds
mov
add
mov
arpl
cmp
sbb
xor
xor
jp
pop
pop
pop
fcmovnb
cmp
inc
xor
jp,pn
cld
aam
out
fcmove
xor
pop
test
sahf
xchg
imul
pop
sub
js
jb
jne
outsl
movsl
jbe
xchg
add
mov
loop
inc
jmp
fwait
or
in
adcb
repnz
mov
int3
mov
fldl
icebp
pop
je,pn
push
or
push
out
sbb
scas
push
lock
sub
jne
sbb
mov
mov
cmp
std
xorb
outsl
add
shlb
out
cmp
lock
push
mov
cmp
push
sbb
aam
int3
add
inc
fistps
sbb
into
outsb
std
das
add
and
pop
mov
daa
cltd
jne
out
xchg
pushf
std
add
dec
adc
jb
cs
aas
add
insl
lahf
and
xchg
inc
add
or
add
xchg
mov
call
shrl
sub
sub
cmpsl
xchg
lahf
cmp
leave
jae
mov
test
jmp
clc
add
ja
cmovs
lret
nop
inc
call
loop
add
fidivrs
rcr
mov
fisubl
fcomp
iret
inc
cmpsb
xor
daa
test
mov
lock
sub
jecxz
loop
xchg
hlt
imul
insl
shlb
xor
stc
pop
cli
movsb
push
int3
and
push
mov
je
pusha
iret
loop
ja
dec
in
data16
aam
enterw
in
sbb
cmc
sbb
push
aam
cmp
sub
shll
xor
arpl
cmpsl
sub
lea
iret
and
fs
dec
mov
js
inc
mov
dec
movsb
pop
cli
push
popa
fmuls
lret
repz
or
dec
ret
test
mov
jge
in
jmp
shlb
cmpb
pop
into
xchg
int3
lock
inc
mov
rcr
push
xchg
push
add
sahf
pop
lea
push
push
mov
gs
cmp
xor
mov
je
in
cmpsl
sbb
or
xchg
ljmp
dec
ret
dec
mov
hlt
jne
jbe
push
inc
mov
int3
sahf
fdivs
inc
dec
pop
dec
aam
and
dec
or
pop
sti
shr
fstps
dec
dec
test
adc
outsb
ret
fst
push
xchg
sbb
mov
jb
or
fdivrl
jne
mov
cmpsl
clc
negl
adc
clc
sbb
mov
mov
xchg
and
imul
imul
fidivs
and
loopne
mov
imul
lea
xchg
ret
pop
sub
nop
inc
cld
and
sub
jns
shll
bnd
pop
fadds
pop
pop
fs
mov
stos
xor
ja
shlb
mov
push
popf
pop
jno
call
mov
daa
popf
subl
incl
cld
ja
cmp
lods
ljmp
push
mov
shll
xchg
push
aam
push
cwtl
stc
cmp
fisubrs
xchg
xor
dec
test
shlb
inc
sti
pop
or
cmp
out
popf
jnp
jp
shr
std
mov
ljmp
or
jne
push
push
sbb
sbb
mov
loope
mov
enter
and
lea
idivl
push
negl
ljmp
repz
dec
jo
loopne
in
roll
into
aad
sub
add
add
ret
sub
mov
inc
inc
or
xor
mov
mov
rcll
ss
mov
xchg
negl
cmpl
addr16
ret
or
mov
pop
inc
scas
lret
stos
fidivrl
mov
sub
pop
jge
mov
push
in
stc
lea
and
jp
lret
test
sbb
out
fdivrl
and
dec
mov
fs
loopne,pn
xor
push
mov
rcll
cli
mov
push
sbb
jno
adc
loopne
outsb
sub
dec
xor
jns
inc
hlt
orl
pop
mov
dec
mov
in
and
sub
or
dec
test
notb
fadd
lret
pop
mov
mov
xor
and
pop
sbb
sti
mov
and
mov
push
ja
movsb
enter
sub
jns
pop
pop
mov
xor
push
addb
stos
push
aas
shrb
test
loopne
fbld
sub
sbb
push
adc
sahf
or
xchg
mov
inc
pushf
hlt
pop
scas
mov
pop
cltd
daa
mov
push
shll
iret
nop
sbb
ret
mov
inc
inc
inc
pop
sub
add
fucom
aas
sub
pop
mov
adcb
and
loop
jp
xchg
fdivs
cmp
mov
nop
adc
scas
outsl
and
mov
or
xor
add
sub
ja
arpl
adc
arpl
repnz
inc
jne
sbb
adc
je
test
jne
daa
cmp
mov
fistpll
mov
adc
jnp
mov
lock
jne
jmp
lds
sbb
fucomi
fsubrs
insb
mov
jge
jae
cmp
push
and
mov
or
pop
mov
lds
sub
test
mov
xor
pop
adc
mov
xor
addr16
ss
hlt
mov
daa
cmp
adc
test
push
pushf
xchg
jno
ret
ds
int
or
sarb
mov
push
out
mov
mov
loop
jmp
idiv
sti
std
incb
lcall
push
arpl
rcr
imul
dec
mov
lahf
mov
test
cld
cmpb
cli
in
lret
lahf
clc
xor
testl
aaa
inc
in
outsl
sub
int3
fwait
das
js
jne
xchg
test
xchg
imul
mov
lods
jne
cmp
cmp
in
lods
testb
out
add
sbb
repnz
popa
sbb
xlat
inc
adc
mov
mov
jo
jmp
aad
icebp
dec
arpl
arpl
test
inc
gs
dec
xor
jbe
ja
popa
insl
ja
mov
jmp
sti
pop
inc
lret
jge
fwait
or
jo
jo
inc
ret
repnz
in
mov
mov
mov
pop
dec
push
fisttpll
add
rorl
aas
cmpsl
js
mov
ds
test
aad
inc
dec
out
or
mov
xchg
sub
mov
xchg
dec
cmp
pop
jle
out
cltd
cmp
shll
imul
ds
mov
jl
incb
and
inc
dec
adc
push
hlt
cmp
mov
add
cmp
stos
enter
in
jno
push
fdivs
push
cmp
dec
flds
insb
cmp
sbb
and
pop
bound
jae
aam
popa
push
cmp
test
inc
mov
and
repz
mov
pop
sub
sti
ret
mov
pop
pop
jp
mov
jno
pop
push
push
dec
xchg
xcrypt-ctr
cmpsl
fwait
lahf
lds
cmp
xor
leave
mov
scas
ret
add
out
cmp
ds
aaa
outsb
cmpsb
movsb
lods
daa
fdivrl
pop
or
or
and
dec
pop
push
sub
inc
inc
mov
insl
dec
xor
xchg
jae
jle
lock
xchg
sbb
push
push
push
sub
in
fnstenv
rolb
adc
insb
pop
lret
push
jb
lret
push
jb
ret
test
mov
shrl
or
dec
in
idivl
inc
add
dec
push
out
fidivs
add
push
mov
fsub
mov
xchg
enter
rcrb
lcall
icebp
adc
push
xchg
and
lret
cmp
xchg
ss
sar
hlt
mov
adc
push
in
mov
xor
test
cmp
fdivrs
lahf
dec
push
aaa
enter
pop
insb
jo
push
outsb
jecxz
jg
xor
into
lods
aas
push
xorl
inc
ds
cs
push
in
jns
neg
dec
iret
pop
ds
push
jae
dec
pop
jo
rcll
aam
call
jne
lcall
sbb
sub
insb
xor
xor
in
adc
lahf
sbb
inc
nop
out
sub
movsb
sub
mov
mov
dec
fldcw
or
or
dec
pop
dec
inc
push
fpatan
mov
pop
sub
dec
sbb
jb
add
inc
sbb
pop
push
jo
cld
aad
or
rcll
fdivl
vunpckhps
dec
arpl
cmpsl
jne
push
jg
cmc
scas
jns
rcr
lret
inc
cltd
xor
mov
or
mov
mov
aam
dec
cmpsb
inc
ss
dec
adc
popf
lock
xor
std
mov
fstpt
ss
mov
rorb
lds
add
pop
mov
jnp
inc
mov
pop
inc
xor
add
push
out
enter
push
sets
xchg
push
scas
call
adc
pop
mov
lahf
add
mov
loopne
jle
bound
jp
sub
and
or
sbb
mov
divl
fnstsw
shll
outsl
mov
push
insb
push
test
jno
push
stc
inc
pusha
clc
fscale
or
or
sbb
ja
cwtl
mov
dec
mov
nop
in
sub
in
dec
inc
and
int
cmp
aaa
es
in
bound
call
pop
pop
sub
inc
fs
dec
mov
stos
push
out
pop
aad
cltd
mov
jmp
stos
inc
bound
mov
and
lods
jge
add
dec
pop
mov
pop
pmaxsw
xchg
push
fistpll
lahf
dec
rcll
jne
cli
jecxz
add
cmpl
push
rorl
sbb
faddl
jecxz
cmp
call
xor
jb
and
mov
jae
sbb
testb
mov
testl
fwait
jno
inc
std
sbb
adc
pop
jle
lret
cmpsl
bound
notb
addr16
testb
cmp
adc
mov
sti
sbb
jns
in
int
repz
xchg
push
pop
add
pusha
inc
shl
adc
and
shr
cld
adc
jne
and
mov
xchg
popf
xchg
xlat
adc
mov
sub
cmp
in
sahf
push
sbb
pop
or
outsl
jp
ljmp
mov
iret
scas
fs
pop
je
sarl
push
jns
ss
push
fwait
add
ret
or
xchg
xchg
imul
stc
lock
loop
stc
cltd
fdivr
adcl
sub
mov
pusha
mov
adc
jne
mov
test
mov
pop
aam
mov
mov
and
sub
imul
jge
movb
rcll
dec
filds
sbb
or
jg
add
movsb
adc
popf
das
fstpl
imul
lahf
mov
fwait
addb
out
scas
scas
xorl
nop
into
outsb
pop
test
cmpsb
inc
in
lds
cmp
push
adc
add
rcll
mov
imul
inc
mov
adc
call
mov
xchg
fsub
mov
dec
das
mov
stc
push
bound
mov
pop
inc
dec
sbb
xor
push
cmp
push
ja
xor
add
pop
mov
out
notl
leave
in
lods
push
add
call
ret
pop
adc
in
mov
sbb
cwtl
pop
push
sti
pushf
pop
arpl
andl
dec
push
sbb
lock
fnstcw
js
call
add
pop
lret
and
adc
mov
cmpsl
xor
pop
pusha
mov
aad
jmp
lret
ljmp
ret
inc
jl
pop
cmp
jecxz
pusha
push
orl
xchg
pop
add
jg
rcll
out
cmpsl
pop
push
bound
call
pop
daa
adc
xor
sub
push
xor
out
inc
cmp
inc
mov
push
jmp
add
ljmp
push
test
mov
repnz
inc
jge
jo
push
push
ljmp
stos
mov
mov
mov
push
or
pusha
out
mov
dec
cmp
xchg
jo
loop
xor
ret
testb
inc
loope
mov
xchg
sub
sarb
add
or
addr16
xor
scas
pop
mov
pushf
jp
mov
iret
push
aaa
fcomip
inc
add
jle
outsl
in
dec
sbb
and
xchg
cltd
add
or
insl
jne
jnp
jnp
lcall
lods
jge
clc
push
pop
fprem1
int
add
adc
mov
pop
adc
mov
inc
repz
jge
jb
and
aam
out
mov
mov
loope
sub
push
adc
das
xchg
into
sub
iret
out
rcr
cmp
and
aam
aaa
pushf
jle
arpl
in
jb
in
cmp
in
mov
pop
push
cltd
hlt
xor
mov
xchg
mov
mov
fidivrl
lds
in
jb
add
adc
mov
inc
push
aad
mov
imul
cld
sbb
aad
test
loope
sub
pop
add
dec
jecxz
inc
adc
xor
mov
fs
xchg
pushf
or
pop
add
popf
push
fildll
loop
dec
inc
and
mov
aad
adc
movl
je
imul
insb
rorl
inc
mov
popl
movsb
pop
ret
sbb
stos
mov
clc
sub
jl
out
std
inc
xlat
mov
adc
fldl
lahf
jge
je
jne
add
out
insb
lods
xor
movsl
jmp
xor
add
sub
sub
push
xor
pusha
repz
call
out
daa
pop
in
test
sub
inc
mov
jmp
leave
cwtl
and
imulb
aad
ds
fdiv
and
in
mov
xchg
xlat
pop
sub
repz
inc
dec
fstp
scas
jne
and
dec
lret
sbb
lahf
mov
repz
inc
fmull
add
push
call
xchg
in
movsl
sti
or
push
sti
xchg
mov
adcb
popa
or
syscall
lods
pop
sub
or
mov
div
sub
repnz
out
inc
mov
shl
or
push
sub
je
jge
fisttpll
fidivrl
jo
cli
dec
inc
daa
fdivrl
cltd
mov
test
push
mov
xchg
mul
mov
call
imul
fnstcw
addr16
adc
in
sub
fbld
add
daa
popa
fwait
aas
popf
sub
mov
outsb
sub
pop
faddl
push
fwait
add
sub
mov
jno
and
loopne
clc
xor
pop
or
ds
stc
rclb
mov
or
jmp
ljmp
stos
jne
fimull
jbe
fimull
test
push
fsubl
test
cmpsl
jle
mov
and
xor
inc
mov
pop
hlt
cmp
push
cltd
mov
repnz
xor
loop
xchg
loopne
insb
mov
add
jb
sub
push
popa
ljmp
cmp
negl
xchg
sbb
gs
std
popa
xchg
jmp
push
jle
arpl
fisubrs
add
shlb
cmp
mulb
repnz
daa
pop
sub
roll
sub
mov
rcl
shrl
fldcw
repz
pop
shrl
hlt
js
sub
xchg
jmp
orb
iret
into
pop
lods
adc
lds
jmp
in
daa
mov
inc
ret
jg
arpl
add
stos
dec
cmc
lock
xor
cmp
dec
lahf
movsb
test
popf
sbb
rclb
jg
push
push
and
ljmp
jp,pn
mov
inc
lods
sbbb
mov
mov
loopne
inc
repz
and
lahf
fwait
les
fsub
adc
roll
jbe
lock
push
int3
shll
sub
cmc
or
mov
lods
or
test
lock
ret
add
mov
stc
pop
dec
adc
mov
push
lods
sbb
aaa
imul
jnp
xchg
fimull
leave
daa
jbe
mov
add
jns
push
or
mov
lods
sbb
in
leave
mov
out
jbe
jg
loopne
lcall
sbb
fimuls
jle
pop
sub
xchg
add
cmpl
push
shrl
xchg
negb
sub
cli
imul
add
lcall
pop
jl
fnsave
flds
movsl
xchg
icebp
insb
mov
push
or
push
jns
pop
cmp
xor
jecxz
push
xchg
xor
push
idiv
sub
mov
pop
pop
inc
rcrb
sti
jae
push
dec
pusha
test
add
sarl
xor
mov
xchg
inc
repnz
pop
rcll
mov
adc
cld
popa
mov
mov
test
fwait
push
popa
enter
fadds
scas
lods
mov
dec
cmp
mov
and
adc
mov
sub
mov
xchg
cmpsb
xor
int
jmp
pop
cmp
xchg
addr16
mov
pop
jmp
test
cmc
dec
cmp
cmp
and
ja
mov
das
push
xchg
enter
adc
jb
fistpl
addl
mov
dec
pop
cmp
arpl
xor
cwtl
dec
mov
shll
cmc
lcall
pop
push
out
xor
pop
imul
mov
jmp
call
ss
pop
inc
dec
sub
cmpsl
push
pop
cmp
scas
loop
out
movsl
daa
push
loope
out
movsb
and
cmc
mov
pop
je
ds
mov
xchg
insb
jle
adc
pop
or
movsl
xor
mov
mov
mov
cmp
ret
add
jecxz
cmp
or
daa
loop
das
loope
hlt
adc
dec
int3
clc
inc
stc
roll
fildll
pop
inc
mov
js
mov
mov
lds
dec
adc
aad
adc
pop
aam
lods
jg
dec
lcall
mov
cwtl
js
mov
mov
add
stos
dec
data16
lahf
add
xor
daa
movsb
mov
cli
pop
sub
mov
and
gs
inc
dec
in
sahf
rep
jne
in
mov
cmpsb
daa
out
rcll
xchg
dec
xlat
pop
dec
xor
gs
pop
jo
fs
sbb
lock
lods
xchg
stc
mov
xchg
dec
rcll
cmp
sbb
cmp
pop
mov
or
sub
notl
add
lret
fucomp
dec
stos
xchg
test
jp
xchg
mov
sti
or
mov
aaa
andl
sub
pop
movsl
outsl
insb
aam
nop
pushl
cmp
in
js
in
movsl
stos
pop
imul
jl
repnz
mov
push
push
inc
jne
xorl
sarb
mull
add
lock
dec
dec
cli
fldl
into
and
aad
daa
sysexit
add
mov
jno
mov
mov
int3
push
lret
or
bound
adc
and
shrl
dec
jecxz
adc
push
push
mov
das
jmp
xchg
lea
push
loopne
bound
mov
push
aad
sbbl
xlat
xchg
gs
sbb
stc
push
adc
sti
jecxz
stc
leave
loopne
sbb
inc
in
inc
cli
lahf
gs
rcr
leave
pop
add
push
mov
fbstp
je
inc
dec
pop
push
lods
repnz
mov
cmpsl
sar
int3
stc
dec
ret
fwait
dec
fidivrs
rclb
repz
cs
imul
ja
int
mov
sbb
cmpb
sub
jl
andb
adc
pop
and
pop
negb
cmpsl
ret
jmp
fst
push
adcb
fs
arpl
mov
dec
fildl
sbb
dec
inc
mov
push
out
pop
mov
cs
lock
jl
loopne
adc
adc
mov
es
push
pushf
bound
test
ret
fisttpll
jns
cmp
out
push
mov
xor
ja
scas
in
lds
aad
lret
xchg
mov
jmp
outsl
mov
sub
out
jge
mov
rcr
mov
pop
sbb
ljmp
inc
inc
lods
mov
mov
and
sub
test
scas
mov
pop
data16
add
lcall
pop
sub
add
stc
in
mov
push
adc
push
mov
dec
out
cmp
outsl
ret
lret
jae
stos
sti
mov
jl
xchg
enter
jbe
cmpsb
jle
pop
jmp
push
aas
arpl
jle
inc
pop
std
cli
mov
mov
push
arpl
shrl
pop
mov
or
ret
jns
mov
xor
push
push
pop
lret
xor
sub
into
xchg
dec
adc
add
pusha
jbe
or
add
mov
test
imul
push
xor
push
nop
cmp
aaa
fcmovnu
iret
jl
lods
or
cmc
mov
rcrl
jecxz
fnstsw
int
sub
jbe
rcl
insl
mov
inc
and
movl
push
jmp
lret
enter
jnp
lods
cli
mov
repz
jbe
dec
loope
mov
dec
std
fcompl
popa
mov
mov
fimull
negb
cmp
push
and
pop
enter
add
sbb
dec
out
inc
pop
fadds
mov
out
aas
xchg
xor
les
cwtl
fs
inc
rcll
pop
mov
cmp
and
push
aad
lea
cmp
inc
pop
ljmp
mov
call
lret
mov
dec
sbb
std
movsb
mov
enter
cmpb
or
xchg
dec
repz
arpl
push
pusha
dec
push
sbb
std
aam
scas
mov
push
dec
insl
js
hlt
mov
ljmp
ffree
cwtl
hlt
cmpsb
jno
mov
loope
ss
lds
scas
outsl
mov
mov
push
decl
xchg
test
mov
jecxz
jo
test
xor
or
popa
inc
jae
insb
mov
push
outsb
fidivs
mov
jp
sub
add
jno
pop
sbb
fnsave
or
xor
rcrb
sub
fsubp
inc
xchg
or
insl
xor
leave
mov
or
mov
popf
outsl
sti
jb
das
lock
mov
dec
lea
scas
or
in
shll
mov
and
jbe
sahf
adc
in
xchg
shl
aaa
ret
cmpb
rorb
push
int3
adc
lret
and
mov
lret
jno
push
mov
pusha
insb
inc
xor
test
lock
push
xchg
jo
add
inc
xor
and
pushf
mov
xchg
mov
add
loop
fs
mov
std
cld
adc
daa
and
aaa
movsb
int3
sbb
pop
mov
subl
add
mov
popf
jno
inc
cwtl
or
into
out
sub
mov
dec
iret
int3
adc
clc
add
dec
dec
sbb
or
xor
negb
jecxz
scas
jae
stc
pop
lahf
xor
std
movsl
imul
inc
std
cmp
xor
shlb
push
xor
test
push
push
xor
mov
sti
bound
adcb
pop
aaa
mov
adc
pop
xchg
jg
xchg
into
sub
in
inc
jns
insb
loopne
outsl
loop
jg
stc
js
jns
ficoml
pop
movsb
jno
mov
cmp
ja
cmp
in
xchg
mov
out
data16
sbb
outsb
pop
add
push
jb
adcb
jo
popf
cmpsl
fstl
out
mov
or
or
subl
sahf
movhps
std
lahf
test
lock
push
mov
adc
shr
test
xchg
frstor
stos
nop
addl
push
adc
and
pop
out
bound
out
or
xor
in
shlb
xor
and
dec
cltd
sahf
ds
mov
adc
pop
clc
fisubrl
and
push
jne
mov
dec
enter
push
out
popf
je
lock
push
xchg
xchg
xchg
test
pop
scas
pop
pop
dec
inc
fcoms
mov
insb
and
mov
repnz
or
subb
push
int
enter
movsb
jno
xor
push
mov
mov
addr16
mov
ja
adc
mov
pop
jns
and
insb
push
out
lock
inc
jg
loope
les
add
jnp
or
and
lret
out
adc
sub
jge
dec
pop
xor
popa
mov
repz
push
lock
jns
mov
mov
xchg
std
mov
cmp
add
pop
nop
mov
add
test
out
mov
cli
repz
cmc
inc
sbb
mov
stos
sub
leave
adc
ja
lock
pop
repz
lcall
dec
cmp
mov
xchg
hlt
xor
insl
stos
addr16
xor
jno
mov
sbb
adc
mov
mov
sub
aad
add
sbb
test
loope
mov
inc
ja
mov
stos
lock
push
das
es
out
jo
mov
ret
xchg
imul
pusha
xor
popf
sub
inc
mov
xor
popa
sbb
loope
mov
rorl
jae
adc
and
push
mov
pop
sti
ret
pop
pop
sub
cmpl
test
cmp
mov
mov
mov
sbb
push
pusha
daa
jl
imul
notl
sbb
xor
jmp
jge
sbb
mov
lea
jp
cli
jb
lahf
inc
sub
mov
jo
ror
jo
push
push
jne
arpl
scas
or
es
push
leave
jnp
inc
ss
lgs
bound
aam
lcall
cmp
stos
popf
cmp
adc
shlb
popa
xor
mov
jnp
jmp
stc
cmp
sbb
fbstp
cwtl
pop
into
lahf
xor
test
and
fisubl
pop
and
into
cmp
frstor
mov
call
int
flds
mov
je
xchg
lods
inc
shrl
stos
dec
jp
je
and
and
mov
retw
orl
out
lods
pop
movsb
ss
xchg
cmp
aad
aam
cmpsl
xchg
adc
xchg
xchg
out
fisttps
cmp
out
les
ret
in
add
scas
push
and
fisttpl
mov
add
mov
aad
cs
aaa
add
adc
fstpl
push
insb
shrb
lods
inc
data16
insl
js
xchg
push
mov
push
mov
mov
rcrl
test
add
adc
add
insb
pop
into
cmp
dec
in
or
mov
sub
lock
ljmp
dec
sbb
mov
shlb
sbb
cmc
xor
ss
imul
jle
mov
dec
inc
or
adc
test
dec
bound
adc
in
dec
test
xlat
xchg
je
add
add
clc
mov
scas
dec
test
ret
ud2
adc
lods
mov
addr16
mov
shrb
push
mov
sahf
aaa
clc
mov
jae
mov
jo
jbe
fisttps
xlat
mov
xor
pusha
roll
imul
out
xlat
xor
pop
push
sti
cmovae
stos
push
into
cmpsb
mov
mov
int
or
push
mov
xchg
mov
xor
add
xchg
jmp
or
cmp
jo
stc
adc
fstpt
inc
jecxz
mov
test
jns
in
xor
mov
and
out
daa
or
fidivrl
in
shrb
inc
stos
scas
filds
fs
adc
shll
inc
bound
mov
clc
es
clc
in
mov
fisubl
and
in
imul
gs
dec
ret
mov
adc
sbb
movsl
lret
test
int
out
mov
adc
xor
ja
mov
sbb
pop
mov
test
dec
inc
repnz
stos
mov
aaa
sti
jb
shll
lret
loopne
je
lock
test
loopne
mov
pop
outsb
add
mov
outsl
test
inc
negb
lods
dec
in
ds
mov
pop
jl
lods
into
cwtl
push
or
sbb
mov
notl
loop
cmp
ret
pop
subl
test
xor
mov
leave
out
enter
shl
cs
clc
repnz
into
imul
and
pusha
mov
pushf
jbe
cmpsb
xor
call
out
and
ds
jmp
enter
or
push
cmp
stos
add
pop
xchg
push
mov
rcrb
sahf
scas
movl
cmp
lods
lahf
xor
inc
incl
inc
pop
jmp
roll
sarl
pop
mov
sbb
out
and
inc
pop
mov
inc
jecxz
out
or
dec
movsb
cmp
stc
lret
out
jno
mov
fldl
push
mov
hlt
lahf
or
inc
shll
call
dec
xor
lea
popf
push
pop
fwait
adc
scas
lea
adc
aaa
dec
test
add
sti
xor
lahf
lea
sbb
or
aaa
mov
xor
imulb
xchg
shlb
sub
shrl
mov
enter
dec
pop
gs
test
call
insb
sahf
pop
dec
xchg
push
sub
mov
rcrl
mov
add
sbb
mov
inc
decl
fwait
int
stos
cmp
mov
fs
shl
dec
jbe
and
jns
push
adc
dec
pop
movsb
cs
lret
repz
or
inc
popa
xchg
sub
jnp
add
scas
add
repnz
gs
inc
jns
mov
pop
mov
add
inc
lcall
dec
insl
icebp
sbb
pop
mov
iret
pushl
in
rorb
lret
insl
sti
xchg
sub
add
jns
pop
xor
push
negb
sub
jge
and
repz
ljmp
xor
cmp
inc
fnstenv
sahf
loop
and
adc
cmp
mov
std
pop
jb
addr16
push
pop
lock
mov
sbb
push
jge
jns
push
jmp
dec
outsl
mov
aas
leave
mov
cltd
mov
out
or
les
xchg
mov
jp
sub
dec
repz
mov
aaa
paddusw
inc
mov
movsl
orb
popf
inc
adc
jge
jnp
nop
in
inc
lahf
fs
fcomps
clc
or
sbb
sub
loopne
sbb
addb
sbb
adc
ret
ds
mov
frstor
jnp
mov
push
mov
dec
pop
call
mov
sbb
push
jbe
inc
leave
mov
imull
sbb
loop
push
sub
adcl
mov
daa
leave
rclb
mov
lods
push
push
inc
cmp
jp
mov
xor
out
xor
lods
loope
jns
xor
ja
sbb
mov
and
pop
xchg
xchg
sbb
cmp
insb
mov
pop
stos
imul
aaa
out
lock
xor
subb
nop
in
stos
loope
leave
adc
sub
cmp
xor
cmpsl
xchg
inc
shlb
test
push
jno
les
test
cmp
arpl
jo
sbb
cltd
lret
mov
dec
movb
push
jl
in
jne
subl
xchg
adc
adc
xchg
in
loop
mov
es
add
testb
cli
shrb
testl
mov
sbb
fdiv
sbb
aam
push
aad
cmp
pop
mov
mov
add
mov
inc
jg
dec
pop
and
or
das
xor
in
testl
ffreep
popf
adc
sahf
jg
add
scas
mov
fsubrp
jae
adc
setno
orb
leave
inc
mov
shll
enter
and
arpl
jl
popa
mov
cmp
clc
pop
lret
fs
cltd
jg
mov
and
nop
repnz
jp
addr16
insb
xchg
push
lahf
mov
push
add
mov
ret
cmp
or
lock
ror
inc
inc
or
pop
sbb
inc
sub
in
cmp
mov
pusha
jecxz
movsl
jbe
imul
xchg
sbb
dec
stos
mov
bound
push
mov
mov
ds
xor
movsl
ret
aas
lea
mov
xchg
movsb
rcl
xor
mov
pop
dec
pop
jl
and
stos
inc
dec
add
pop
imul
cmp
xchg
sahf
std
call
adc
mov
fmulp
dec
dec
sbb
fisttpll
movl
sub
movsl
jge
pop
ror
lods
scas
repz
sub
or
add
rcrl
push
mov
adc
mov
inc
rcrb
outsb
cmp
movsl
jle
pop
mov
adc
incb
sbb
sub
lods
xlat
or
addb
cld
les
and
cli
lock
loope
dec
aam
inc
pop
cli
mov
or
out
cs
decb
mov
es
ljmp
mov
or
and
mov
movsl
sub
loop
rcll
imul
cld
push
lea
in
inc
lcall
icebp
and
fwait
loop
xor
rorb
inc
ja
xchg
mov
xchg
push
icebp
in
hlt
or
xor
mov
lods
cmp
push
pop
aad
push
gs
ja
lea
loop
add
movsb
lods
fucomp
inc
mov
stos
test
sub
mov
adc
jne
push
push
cmp
loopne
divb
sub
movsb
xchg
fs
jns
int3
addl
mov
or
movsb
andl
imull
divb
inc
lds
lahf
push
data16
ret
pop
das
inc
and
popl
pop
adc
out
mov
cmp
js
cmpsb
call
fcompl
lahf
adc
mov
sar
cmc
std
push
sti
das
cmp
and
jbe
adc
xchg
sbb
cmp
data16
lods
aaa
je
adc
mov
in
aam
jb
test
push
push
les
lock
cmp
std
xchg
shll
inc
jne
mov
lahf
mov
dec
repnz
insl
push
mov
mov
xchg
jge
sub
sub
fidivrs
std
mov
ret
inc
mov
xchg
lea
mov
xor
cmp
and
jnp
add
mov
bound
push
cmp
push
orb
cmc
and
ja
dec
ss
push
scas
sbb
cmpsl
into
xor
lea
pop
dec
out
inc
pushf
outsb
insb
xchg
mov
and
ljmpw
aaa
add
mov
int3
sbb
ficoms
mov
dec
lahf
pop
xchg
jno
fcmovne
sub
add
and
and
leave
pop
or
not
sub
inc
dec
mov
mov
movsl
outsb
add
nop
jae
xchg
mul
loopne
hlt
out
pop
push
jno
aad
aas
test
stos
imul
icebp
mov
or
jmp
push
cmp
xor
cs
add
movsb
sub
xchg
test
push
fstpl
pop
or
dec
pop
inc
jmp
je
in
cmp
mov
cmpsl
inc
adc
or
jl
pop
loop
sub
addr16
pop
nop
gs
and
or
jbe
fdivr
cmp
mov
jne
inc
iret
and
out
pop
mov
mov
and
ret
pop
add
pusha
cltd
adc
addl
and
xor
inc
daa
pop
jnp
push
movsb
or
pop
push
pop
xchg
daa
aas
sub
sbb
fldcw
jne
daa
jmp
sbb
pslld
mov
sub
adc
mov
mov
push
jae
imul
lret
or
push
cmp
cmp
ljmp
push
lods
and
mov
jno
add
xor
xor
cmp
hlt
cmc
push
jno
hlt
pusha
dec
pop
test
mov
xor
lds
je
mov
std
por
xor
pop
inc
outsb
mov
arpl
imul
pop
popf
pop
xchg
rol
adc
jb
or
movsb
sbb
dec
cmp
pop
into
xor
std
clc
ret
xchg
iret
mov
jl
add
aad
fsubl
fisttps
sbb
lcall
jge
mov
mov
cmp
clc
mov
fdivrs
fdivs
push
repz
leave
push
dec
popf
mov
sti
cld
out
lcall
add
jo
xor
add
mov
xor
loopne
adc
leave
cmc
movsl
inc
sti
xor
pop
in
xor
fimull
testl
or
pop
mov
and
and
loop
mov
push
dec
ret
pop
sub
mov
mov
push
cltd
dec
sahf
popa
je
imul
insl
shrb
push
popa
xchg
sti
subl
or
cs
mov
jge
insb
cmp
dec
or
xchg
dec
push
js
sbb
and
dec
push
inc
push
shlb
sub
cld
hlt
int3
in
or
inc
imull
aas
lods
jge
cmp
cmp
push
lds
negl
mov
or
test
adc
jmp
out
jae
pop
pop
out
xchg
orl
pop
push
xchg
sub
es
sar
rorb
in
cltd
add
sbb
shll
test
sub
cmp
out
add
out
ja
enter
jecxz
mov
mov
sbb
pop
push
cli
and
clc
inc
cmp
test
clc
sub
les
ja
mov
push
das
add
outsb
in
add
push
push
xchg
in
jg
mov
xchg
or
xchg
decb
push
mov
leave
mov
xor
mov
rep
adc
ja
mov
mov
cmpl
sbb
sbb
stos
push
repz
jne
and
mov
divb
je
mov
mov
add
inc
or
push
fldz
test
xchg
dec
xchg
xchg
pop
add
mov
ja
loop
mov
sbb
dec
sub
push
or
mov
cld
loope
push
fs
out
cmp
imul
and
test
int
jns
mov
mov
cmpsb
insb
pop
inc
movsl
xchg
mulb
mov
mov
push
cmp
mov
push
pop
es
pushf
lods
ret
and
adc
test
mov
ljmp
and
sbb
out
test
mov
add
or
sub
cmp
or
inc
dec
sub
sub
pop
outsb
adc
divb
mov
ret
imul
fists
xchg
xchg
stos
lods
push
popf
push
out
push
push
negl
test
pop
xchg
xor
push
cmpb
or
sub
subb
out
fisubs
inc
push
mov
xchg
xor
xor
mov
xchg
cs
and
jmp
jno
ds
jbe
pop
mov
mov
dec
and
xchg
mov
mov
mov
cmp
jns
test
es
imul
mov
mov
aaa
fistpl
fdivr
pop
iret
or
stos
jno
adc
push
jmp
cmp
xchg
sbb
push
subb
leave
jp
ficoml
push
xchg
dec
rclb
cltd
xchg
sbb
mov
aas
out
mov
push
and
mov
mov
mov
dec
jge
pop
leave
mov
int3
pop
adc
in
inc
shll
xor
lock
inc
sbb
push
sbb
add
adc
test
jbe
sub
das
mov
sub
mov
test
outsb
pop
enter
stos
lret
dec
or
loop
mov
dec
or
or
and
clc
pusha
pusha
and
lods
rcrl
std
pusha
int3
ret
xchg
lret
fistps
adc
adc
inc
stos
jns
adc
jne
pop
bound
rcl
mov
lahf
pop
push
xchg
push
adc
nop
aaa
inc
mov
ret
insl
shlb
lret
jmp
adc
mov
lahf
addl
out
loopne
imul
fs
xchg
inc
stos
shll
mov
mov
pop
sti
add
mov
mov
and
ret
notb
out
xchg
jb
or
inc
jno
and
mov
out
pushf
xchg
movsb
out
out
movsb
daa
fs
cmpsl
pop
add
or
pop
dec
insb
hlt
inc
leave
sub
fs
lcall
iret
jmp
movsb
and
int
sub
xor
jge
repz
js
clc
into
insb
mov
ss
js
push
inc
mov
cmp
mov
ret
sub
mov
adcl
push
je
cli
bound
jo
loopne
cld
mov
pop
scas
mov
nop
cmpsb
inc
sahf
cmpsl
lret
push
and
mov
addr16
fsubr
outsb
je
sub
xor
faddl
fs
pop
int
and
xchg
ss
loopne
push
je
in
jno
sbb
pop
arpl
xchg
nop
out
or
popl
scas
and
sbb
fwait
aaa
lods
push
ret
nop
cmpsb
movsb
push
mov
inc
fsubrs
cmc
stos
push
or
sbb
jae
mov
call
jl
xor
cmc
nop
jbe
aaa
or
pop
jo
mov
dec
cmp
mov
inc
leave
notl
test
cmc
cmp
hlt
xchg
add
adcl
aaa
cmpsb
pop
mov
xchg
nop
cmp
loop
adc
pushf
xchg
setnp
sti
es
arpl
dec
xor
push
test
cwtl
test
int3
js
jns
cli
ret
aaa
aad
cmp
aas
rcll
outsl
mov
or
sub
stc
pop
mov
inc
add
inc
mov
shrl
fcmovbe
cmp
pusha
add
inc
test
sub
in
aad
jno
cmp
add
sbb
dec
jno
inc
pop
stos
sbbl
push
lcall
jmp
and
repnz
pop
cmp
cmp
psrld
fildll
pushf
mov
aaa
add
jecxz
jns
jns
cmc
jg
mov
xchg
pop
insl
dec
pop
mov
in
fwait
mov
test
cltd
das
cmp
sarb
pop
xchg
mov
mov
lods
cs
sbb
mov
test
sub
fs
pop
jecxz
lcall
jne
push
xor
mov
add
fcompl
pop
cmpsl
jb
out
fdivrp
data16
pop
xchg
mov
push
pop
fcom
fdivs
das
cmpsl
xlat
mov
xor
fsubrl
adc
add
mov
ds
pop
pop
sbb
sarb
push
dec
cmpl
xchg
cmc
or
jmp
movsl
arpl
ss
cltd
idivb
pop
inc
arpl
push
mov
filds
leave
adc
cmp
add
pop
test
lock
mov
aam
jb
xor
push
jnp
inc
imul
mov
enter
xchg
mov
inc
xchg
mov
lock
loopne
int3
inc
les
push
inc
adc
xorb
and
les
fdivrl
push
xor
outsl
xchg
roll
movsb
in
or
data16
ficoms
mov
push
add
mov
or
lret
out
and
pop
call
xor
out
loopne
pop
je
fiadds
xchg
sbb
xchg
shlb
lret
je
mov
and
in
pop
mov
scas
xor
xchg
inc
mov
aaa
cmp
mov
ret
xor
mov
adc
mov
pop
mov
mov
or
call
nop
in
mov
adc
jae
cli
fstpl
sbb
adc
sub
shll
push
mov
adc
popf
cmpsb
cmp
enter
aam
mov
push
push
pop
into
mov
and
lret
mov
dec
pop
mov
pop
stc
lret
enter
loope
sti
jmp
xor
push
mov
frstor
dec
pop
sti
cmp
leave
data16
xchg
fdivrl
xchg
xchg
les
pop
xor
cmpsb
mov
inc
fisubs
pop
adc
fiadds
negl
pop
jne
imul
xor
push
dec
in
cltd
vandpd
jnp
mov
push
movsl
mov
fnstsw
mov
ss
lret
test
cmpsb
pop
test
lret
out
leave
movsl
sbb
frstor
pop
pop
mov
jl
pop
mov
inc
dec
xchg
mov
and
push
and
and
xlat
mov
push
fistl
or
aas
sbb
icebp
sti
pop
imul
bound
test
notl
test
bound
cmp
hlt
adc
dec
cmp
mov
sub
xor
daa
in
mov
stc
xchg
pop
or
and
mov
sbbb
dec
lods
loope
xor
mov
dec
in
mov
inc
test
xor
daa
mov
call
mov
mov
cmp
ss
lcall
cltd
cmp
outsb
mov
scas
or
xchg
addl
arpl
std
stos
pop
scas
out
adc
push
or
jns
sbb
incl
aaa
cmp
enter
cltd
mov
bound
cmp
xor
loop
sbb
xor
xchg
imull
or
lea
xor
jns
lahf
cld
push
and
or
int3
cmc
aas
adc
aas
xchg
cmp
pushf
mov
je
lods
lods
sub
dec
fisubrs
mov
stc
mov
leave
sub
xchg
roll
lret
repz
jbe
fucomip
leave
bswap
push
push
mov
xlat
cmp
xor
fcmovne
push
sub
jge
mov
add
dec
movl
pushf
aam
sub
test
push
outsl
push
adc
pop
or
push
add
xchg
sub
jo
cwtl
lcall
xchg
push
outsb
jg
addr16
addr16
daa
dec
xor
or
in
pop
sub
push
xchg
sbb
or
sub
mov
clc
je
pop
insb
and
loopne
push
pop
cmp
mov
test
or
stc
mov
bound
mov
fbstp
cld
sahf
test
in
xchg
sti
jle
ljmp
pop
nop
pop
aas
andl
movsl
jp
int
or
push
jmp
xor
aas
gs
les
jno
addr16
push
dec
stos
inc
rorb
fstl
push
stc
dec
push
hlt
cmp
xor
adc
inc
push
dec
push
aaa
inc
cld
int
pop
aad
mov
pop
mov
scas
ret
loope
iret
cmp
jg
jl
sbb
mov
xlat
xchg
jnp
js
insb
cmp
pop
pop
add
push
sarb
mov
sbb
inc
arpl
and
sbb
add
fsubp
scas
push
stos
dec
add
jle
inc
scas
incb
xlat
in
enter
fstpt
ret
scas
int3
inc
ss
cs
mov
repnz
pop
cmc
sar
sub
sahf
xchg
out
mov
fs
rcll
pop
sbb
fcmovbe
mov
stos
lret
cwtl
xor
gs
out
push
jne
popa
or
jb
fldcw
bound
iret
pop
repnz
or
aad
cltd
lcall
negl
shlb
in
bnd
inc
mov
aaa
xchg
std
push
ret
push
enter
pop
dec
jecxz
jge
and
inc
iret
fwait
test
int
ljmp
and
fstps
inc
adc
sub
cli
and
lea
add
outsl
inc
add
ja
pushf
mov
aas
das
or
mov
decb
mov
push
cltd
push
sbb
dec
pop
ljmp
fsubr
dec
or
lret
mov
dec
or
shrb
clc
fsubs
imul
lods
push
movsl
pushf
or
jns
or
and
mov
into
mov
rcrl
mov
dec
pop
cmpsb
aam
mov
pusha
out
pushf
testb
js
jle
icebp
sbb
sub
test
push
arpl
and
std
push
jle
imul
jmp
shl
data16
jl,pn
sub
push
dec
and
sub
shr
mov
lret
movsb
jb
popa
cwtl
lock
stc
leave
pop
pop
pop
movsb
out
sbb
jo
fs
pop
in
cmp
mov
or
jge
xor
pop
das
adc
roll
imull
mov
mov
je
push
inc
fdivrl
push
iret
in
cmp
out
inc
gs
cld
inc
cmp
fwait
loop
movaps
scas
adc
dec
push
dec
push
jle
mov
mov
nop
int
divb
orl
hlt
mov
dec
mov
imul
mov
in
pop
sbb
fidivl
inc
icebp
addr16
xchg
into
cmp
mov
test
out
mov
dec
jae
jmp
mov
outsl
lret
push
ss
iret
dec
inc
in
fstps
pushf
es
scas
xor
sbb
cmp
leave
xchg
stos
mov
adc
dec
mov
jns
inc
rcrl
mov
aas
xchg
leave
inc
idiv
out
xor
cmp
mov
cmpsl
ja
xchg
movsb
mov
xchg
pop
in
std
mov
inc
push
mov
or
lret
cmpb
inc
dec
test
mov
and
fcmove
cmp
mov
mov
sbb
xchg
scas
jmp
das
adcl
test
jl
js
sbb
xor
cmp
rcll
push
dec
dec
inc
jnp
adc
movsl
ss
rclb
or
loope
mov
mov
push
pop
dec
jl
movsb
mov
sbb
movsb
adc
pop
fsubr
stc
jle
mov
stos
mov
jg
jb
push
and
and
jle
sub
dec
xchg
or
icebp
lret
insl
mov
mov
or
inc
scas
lock
cld
dec
lds
enter
sub
nop
repz
dec
ja
add
add
and
inc
push
add
push
mov
mov
sbb
mov
xchg
push
jl
jbe
mov
mov
insl
rorb
mov
loop
sub
out
or
lret
and
xor
cwtl
add
mov
sarl
mov
ret
pushl
sub
orl
vpaddd
int3
and
xchg
adc
pop
call
jge
and
insb
xor
push
mov
iret
mov
lock
movsl
in
adc
push
cmp
sahf
inc
out
adc
pop
sbb
and
inc
and
push
mov
inc
jl
xchg
decb
mov
mov
and
ret
cld
or
in
jbe
adc
sti
push
dec
push
xlat
sahf
movl
jnp
cmp
stos
jecxz
leave
pop
push
insl
leave
in
testb
lods
push
stc
add
dec
mov
ret
std
sbb
loop
cli
xchg
jns
pop
and
test
imul
fldcw
or
xor
xchg
mov
les
data16
or
inc
dec
dec
movsb
stos
lea
aas
insb
push
mov
cmpsl
leave
ljmp
push
stc
outsl
sbb
fstp
in
bound
dec
jg
add
or
shll
shll
cmc
jg
lods
add
push
ret
sub
jge
add
scas
sub
xchg
add
mov
test
insb
xchg
fdivl
inc
add
pushf
xchg
lock
lahf
sbb
adc
data16
fidivrs
add
push
jnp
fcom
mov
ss
mov
fidivrl
into
int3
jns
xchg
xchg
push
or
cmp
xlat
ret
xlat
testl
pop
cmp
mov
pop
inc
outsl
or
mov
mov
inc
aad
sbb
fldenv
mov
xor
push
or
nop
sbb
roll
mov
push
or
sub
push
mov
stos
mov
in
sarl
sub
xchg
into
push
fimull
cmp
jns
push
push
inc
clc
cmovne
push
push
and
inc
out
mov
add
rorb
xor
enter
out
or
insl
pop
add
lods
cltd
out
sarb
pop
lret
leave
scas
or
insl
shl
lahf
cmpsl
test
rclb
inc
movsl
dec
movsb
sub
lods
bound
mov
loope
cmp
mov
pusha
push
fwait
inc
mov
clc
fwait
or
cmpsb
loope
mov
mov
rorl
js
ret
out
pusha
inc
cmp
push
mov
cmp
iret
sub
roll
pusha
popaw
jecxz
ret
push
jae
pop
shlb
in
push
or
mov
aas
cmp
in
rclb
push
mov
sbb
xlat
or
adc
sbb
ljmp
inc
fwait
inc
dec
mov
mov
and
movl
push
push
and
jb
mov
mov
iret
xchg
ja
dec
inc
outsb
push
iret
sbb
adc
pop
push
movq
add
jg
sbb
cld
xor
lods
bound
or
movsb
push
push
std
cmc
es
scas
adc
sbb
lsl
incb
psrlq
movsb
mov
ret
fs
cmp
mov
add
testb
sbb
inc
lea
shrl
mov
test
mov
clc
fucom
cmp
push
or
ds
lods
jmp
jmp
xor
cmp
loope
jns
mov
sub
movsb
jp
testb
sub
fsubr
movsl
sub
sbb
dec
loopne
push
dec
jmp
outsl
push
cmc
test
mov
jmp
mov
xor
scas
sub
mov
mov
adc
sbb
icebp
test
lahf
xor
pop
sti
fwait
mov
call
pop
icebp
and
cmp
inc
aam
repnz
popa
pop
lds
mov
mov
cmp
push
xchg
mov
addb
mov
push
fimuls
outsb
sub
les
fcmovne
pop
cmpsl
fldcw
jp
sbb
ds
es
es
or
sub
inc
jb
sbb
sbbl
dec
jmp
xchg
jae
jmp
call
jmp
jns
xor
out
out
jp,pt
inc
dec
mov
cld
ret
scas
jmp
mov
stc
inc
pop
bound
push
pop
insb
aaa
dec
inc
jne
fwait
sub
les
inc
pop
cmp
cmp
rcl
mov
push
dec
out
cmc
xchg
mov
ljmp
testb
cs
int
dec
cmp
or
int3
scas
push
test
mov
daa
mov
cmpb
and
cs
jmp
insb
lcall
test
int3
mov
jb
jp
sub
mov
pop
mov
cmc
das
mov
cwtl
mov
jb
insl
jbe
cmp
or
ja
xor
xor
and
adc
pop
aam
push
mov
xchg
adc
andb
jo
cmp
cwtl
mov
sbb
mov
xor
xchg
call
sarb
pop
fbstp
sub
rorb
daa
leave
lods
imul
jmp
push
cmp
xchg
mov
mov
jo
add
pusha
and
push
pop
inc
or
ja
ds
les
dec
and
and
shlb
sub
inc
cmpsl
subl
sbb
dec
adc
push
adc
popf
clc
sub
cmp
push
mov
das
fistl
pop
mov
sti
jo
std
out
cmp
cmp
mov
test
pop
cmp
xchg
jmp
nop
cmpsl
jmp
xlat
or
cs
idivb
inc
leave
jb
les
mov
add
adc
push
int
ljmp
mov
cmp
dec
cmp
fs
int3
mov
ret
pop
lret
lret
sub
jl
hlt
cmp
outsb
cld
fdivl
adc
les
out
pop
push
inc
mov
repnz
xor
outsl
mov
js
inc
test
add
rcr
fistps
pushaw
ljmp
adc
sbb
pop
aaa
hlt
lock
pop
mov
test
sub
pop
jle
lret
lea
gs
inc
daa
and
mov
sarl
mov
push
aad
mov
xchg
scas
out
xor
mov
and
fwait
out
in
mov
mov
popf
decb
push
sarl
rcr
scas
out
mov
sub
addr16
xchg
pop
sar
int3
xlat
push
pop
mov
repz
mov
stos
fdiv
pop
push
xchg
fldcw
pop
lret
xchg
jle
adc
or
in
ja
rcr
push
push
add
lahf
lret
xor
mov
leave
push
mov
mov
xor
xchg
pop
dec
cwtl
pop
mov
stos
dec
xchg
mov
inc
idivb
xchg
and
jle
shrb
stos
sub
xor
inc
jmp
orl
cwtl
fs
add
in
imul
sarb
les
lods
push
lcall
adc
jg
outsl
sub
push
mov
push
mov
dec
xor
int
mov
bound
push
inc
dec
test
pop
mov
scas
mov
inc
scas
addr16
mov
add
jbe
icebp
int
mov
or
aad
lret
jp
hlt
inc
mov
pushf
jb
insb
hlt
dec
pop
sbb
mov
in
nop
dec
push
add
push
or
pop
pop
cltd
inc
fstpl
xor
pop
std
in
inc
cmp
xchg
pushf
xor
iret
repz
addl
lret
popf
out
es
aaa
pusha
outsl
cmp
ss
xchg
cmp
gs
ss
lret
aam
jo
sbb
jno
or
leave
movsb
jne
push
rol
jle
mov
or
push
xorl
mov
scas
lret
mov
pop
jmp
scas
xchg
lret
inc
jae
cs
popf
mov
add
push
test
xchg
in
add
xchg
in
daa
dec
stos
dec
jl
cmp
sub
fists
test
mov
mov
sahf
icebp
repz
subb
cli
into
cmpsb
mov
mov
sbb
or
inc
dec
pushf
ja
push
sahf
test
out
inc
call
les
inc
aad
mov
aad
test
rclb
jae
repz
xor
repz
xchg
out
push
orb
add
frstor
push
lret
sub
test
stc
xchg
test
mov
push
call
into
adc
adc
and
dec
outsb
push
enter
fidivs
add
push
cmpxchg
outsb
dec
cmp
rcl
pushf
jmp
pop
xrelease
sbb
xor
sub
mov
fsubr
adc
mov
in
mov
mov
push
les
mov
jl
or
and
mov
jecxz
movsl
in
xor
cmp
cmp
fistpl
jne
inc
roll
in
inc
add
cmp
sub
lcall
xchg
frstor
out
nop
jge
aam
mov
mov
mov
dec
pop
iret
push
lds
push
dec
repz
add
sub
mov
jns
adc
ds
pop
movsl
fists
lret
ret
inc
xchg
cmpsb
sti
sub
es
pop
mov
out
aam
inc
cmpsl
outsl
frstor
sbbb
xchg
fisubrl
lcall
dec
icebp
dec
sub
das
divl
mov
es
cmpsb
inc
inc
fldt
push
cld
ds
mov
add
and
cld
int
bound
push
aad
data16
les
push
imul
sub
xor
jg
sub
and
in
stc
mov
dec
or
or
fnstsw
movnti
mov
cwtl
push
sub
mov
or
fadds
jmp
push
jge
mov
mov
or
mov
insb
push
mov
cmc
cltd
fsubrs
and
scas
xchg
in
and
jl
ret
cmp
fisttps
sub
sub
mov
ss
pop
pop
popf
pushf
pop
sub
xchg
mulb
roll
sbb
xor
push
jg
mov
xchg
lock
xchg
dec
or
jae
inc
andl
jge
aaa
stc
test
std
lock
sar
and
or
sub
ffreep
mov
aas
test
les
aas
ljmp
xor
xchg
add
cmp
adc
stos
adc
gs
loopne
out
outsb
jl
aam
inc
hlt
sarl
jg
ret
mov
aam
push
xor
scas
insb
cmp
jmp
fsub
int3
lret
mov
cmp
mov
add
ljmpw
and
cli
dec
cmp
rcr
dec
imul
pop
arpl
dec
xor
pop
dec
sub
inc
mov
lods
cmp
mov
imul
xchg
in
js
jae
enter
mov
in
mov
push
xor
push
dec
fsubr
cld
mov
mov
pop
icebp
imul
sub
jno
and
pop
fmuls
xchg
aam
bound
scas
inc
mov
int3
push
rcr
lahf
cltd
and
sub
add
out
loopne
loope
adc
das
adc
loopne
xchg
aaa
into
movb
cwtl
fdiv
lock
and
lds
sub
xor
mov
lods
sub
sbbb
xor
movb
or
cld
adc
sub
in
fsubrl
mov
cwtl
mov
mov
filds
or
addb
jno
cmpsb
jl
lea
inc
aas
push
mov
dec
in
jno
fmull
bound
mov
cmp
xchg
out
mov
js
xor
inc
add
add
inc
fistpl
hlt
dec
popa
lret
jmp
bound
aaa
adc
imul
mov
cld
aas
pop
sbb
add
pop
into
mov
fsubrl
xlat
pop
inc
aam
sub
xor
loop
les
and
ja
lds
sub
in
aam
and
jo
adc
jmp
pop
pop
clc
imull
push
sub
fwait
add
adc
or
mov
stos
aad
mov
mov
sbb
cmc
dec
mov
negl
xchg
sti
jns
push
jmp
push
inc
sbb
adc
jge
mov
test
sbb
mov
sub
pop
mov
push
movsb
mov
and
into
mov
add
ficoml
lfence
xchg
out
mull
ss
int
xchg
cmp
sbb
rolb
xlat
cld
aad
cmp
dec
or
cwtl
xchg
loopew
mov
into
test
fnstcw
loopew
mov
lods
push
push
into
mov
lret
xor
movsl
add
pop
lret
orb
imul
ficoms
in
lds
push
out
pushw
sahf
ja
sub
or
cmp
inc
pop
pop
fidivrl
repz
adc
mov
outsl
push
test
enter
pop
pop
outsb
jnp
cld
popf
sub
push
rcll
pop
pop
into
stos
jl
mov
xchg
adc
int3
pop
adc
fisubl
mov
dec
pop
or
or
data16
push
cld
cmp
mov
sbb
push
ja
int
dec
aaa
ret
xchg
mov
lods
outsl
dec
scas
fsubrl
fsubrl
call
xor
mov
fwait
cltd
mov
int3
push
pop
adc
test
adc
sti
nop
je
std
repnz
and
and
sbb
lahf
cld
insb
sub
pop
stc
mov
lea
lcall
cmp
push
xor
mov
gs
jnp
fs
fwait
les
daa
mov
ret
jecxz
add
mov
mov
ret
adc
pop
insl
cmpsb
into
add
inc
pop
std
push
repnz
mov
add
sbb
les
daa
lock
dec
pop
dec
adc
mov
out
andl
pop
lods
push
xchg
pop
cmpsb
out
mov
dec
pushf
and
mov
inc
mov
mov
sub
dec
sub
push
or
push
xlat
repnz
clc
in
insb
and
jecxz
xchg
jbe
sub
mov
inc
mov
dec
mov
xchg
outsl
scas
stos
mov
pop
hlt
mov
imul
jne
mov
pusha
out
xchg
es
aad
sbb
pop
das
pop
add
sahf
std
push
std
repnz
lods
mov
sbb
test
cmpsb
ljmp
mov
mov
mov
sahf
push
push
jne
mov
lcall
push
lods
add
or
push
mov
addb
movsb
cmp
fiaddl
xchg
loop
out
dec
addr16
xchg
push
add
cltd
dec
movsl
stc
xor
andb
stos
xchg
pop
push
xor
mov
cld
into
mov
mov
lret
jne
adc
jo
xchg
in
xchg
cmp
incl
fldl
popf
ret
push
rclb
repz
rcr
jl
lcall
adc
push
lea
movsb
add
jl
push
scas
je
xchg
pushf
subps
ffreep
jbe
in
push
ljmp
jbe
and
imulb
pop
add
push
dec
enter
rclb
cli
jb
idivb
xor
into
and
mov
pop
sbb
push
bound
add
sub
inc
cmp
pop
xchg
xchg
xchg
loopne
push
lret
dec
xchg
push
shlb
jge
xchg
mov
mov
jmp
bound
and
pusha
or
das
in
cmpsb
mov
in
inc
dec
cmp
mov
ljmp
iret
push
in
jbe
iret
cwtl
mov
sub
cli
iret
jmp
mov
jl
fwait
cmc
mov
pop
fisttpl
fists
stc
add
sahf
insl
iret
inc
jmp
test
rorb
fildll
xchg
push
xor
test
adc
in
jle
mov
mov
mov
int3
add
shll
rcll
mov
jnp
mov
in
or
sub
xchg
inc
insl
ds
loope
in
mov
inc
fisttpl
xchg
daa
stos
cmpsl
sub
loope
mov
inc
sahf
mov
adc
adc
jnp
std
js
pop
or
cs
add
std
into
push
and
arpl
es
or
or
mov
and
aaa
push
cmp
dec
sbb
mov
push
cs
outsl
mov
jne
test
and
adcl
ss
cmp
xchg
adc
mov
pop
adcb
mov
jg
and
and
add
push
fstpl
xor
cld
stc
in
jno
jae
jmp
jl
or
pop
jne
stos
mov
mov
fdivs
inc
pop
and
mov
push
out
fisubl
xchg
loop
push
sub
add
pop
or
pop
pusha
xorb
fs
adc
cltd
or
imul
dec
in
sarl
mov
icebp
fnsave
cmp
sub
mov
es
lods
cmpsl
mov
popa
xchg
ret
push
lds
sub
shll
rclb
outsb
pop
jg
lea
ret
jmp
clc
mov
aas
cs
leave
cmp
mov
lds
sbb
mov
push
loope
pushf
push
and
in
sti
cli
cs
retw
rcr
jnp
push
jno
into
sub
loope
ss
and
movsl
add
std
mov
leave
jg
mov
repnz
sbbl
cltd
xchg
ret
jmp
adc
int3
lods
add
pop
out
leave
and
dec
jbe
xchg
mov
int
jae
iret
shlb
movsb
push
xor
pop
fs
into
testl
pop
imul
cli
out
inc
jbe
loop
mov
adc
adc
pusha
hlt
or
fs
popa
inc
lret
divl
dec
push
rcll
rcll
insl
jp
push
xor
das
dec
dec
int3
xchg
andb
ja
pop
ja
and
push
mov
add
adc
jge
fists
out
mov
xchg
pop
addr16
xor
cmc
jmp
repz
and
sbb
into
daa
ljmp
std
pushf
outsl
cmpsb
movsl
mov
outsl
imul
test
fimull
sbb
out
fadd
cwtl
mov
aad
mov
sbb
dec
cmp
jno
xchg
xchg
push
iret
fwait
and
pop
dec
insl
fisttpl
imul
cs
xor
lret
pop
out
lock
dec
imul
mov
pop
cmp
arpl
insl
and
test
sbb
mov
cmp
jno
xchg
jmp
sbb
jmp
inc
std
mov
rorb
addr16
mov
cmp
push
pushf
subl
push
sysexit
sub
cmpsl
xor
pop
push
lahf
rcrb
or
fstl
in
lahf
stos
lea
fisttps
int
inc
cld
push
add
adc
lea
push
xchg
inc
popf
imul
xchg
out
mov
adc
mov
and
mov
ficoms
sub
or
adc
insl
adc
dec
aaa
and
sbb
inc
sbb
lret
sub
aam
or
pop
cld
nop
mov
mov
jnp
testl
stc
pushf
sub
popf
inc
sub
cmpsb
fmull
inc
xchg
in
add
dec
dec
scas
jb
xor
sbb
add
push
dec
insb
xchg
jp
inc
sbb
or
aaa
stc
xor
clc
lea
mov
js
lahf
popa
iret
sbb
loope
leave
rol
mov
inc
addb
je
sub
add
ljmp
js
xor
lds
push
into
mov
xor
and
sti
jb
out
les
add
out
xor
dec
mov
jo
loop
rorl
outsb
mov
aad
cmp
sbb
hlt
mov
int
mov
je
stos
or
data16
xchg
insl
pop
lods
ficoms
xchg
push
xchg
clc
push
mov
bound
jo
cs
xlat
xchg
loopne
mov
pop
sub
push
or
sub
mov
mov
xor
jno
pop
xchg
rorb
adc
and
aad
mov
fs
or
cmpsb
mov
push
xor
fidivrs
js
xchg
mov
data16
lahf
sbb
in
xchg
pop
mov
or
mov
fldpi
push
push
xchg
xchg
outsb
mov
rcrl
sti
arpl
mov
mov
or
in
lcall
push
sbbl
and
and
dec
ret
xor
adc
xor
add
scas
mov
shrl
leave
dec
sti
sub
cmp
jge
repnz
nop
push
add
push
call
je
or
pop
das
adc
enter
in
pop
xor
inc
pushf
xchg
in
adc
inc
adc
inc
adc
ret
mov
std
hlt
ljmp
shrl
or
jne
punpcklwd
inc
fmull
xor
pop
cs
xor
popa
aad
iret
dec
orl
insb
jg
push
cmc
pop
adc
mov
out
adc
repz
cmp
mov
aas
adc
in
jno
out
sti
shrl
leave
xchg
pop
and
mov
and
les
mov
adc
std
mov
dec
insl
sbb
scas
cwtl
cmp
iret
stos
or
mov
mov
shrb
aad
ret
loopne
scas
xchg
std
rcll
or
stc
inc
push
adc
lods
clc
xor
push
outsl
ja
fisubl
cld
push
pop
ss
sti
xor
test
sub
push
fcoms
mov
hlt
bound
int3
fbstp
mov
scas
pusha
lock
jecxz
inc
inc
mov
and
out
ret
xchg
aam
jno
jl
test
xchg
fmull
push
mov
cmp
pop
pavgb
push
fdivs
icebp
dec
push
pusha
jp
ret
in
cmp
mov
lock
jmp
bswap
pop
mov
xor
xchg
jp
mov
jae
fnstsw
sbb
jno
jecxz
push
mov
gs
jno
mov
inc
ja
sbb
lock
mov
mov
xchg
inc
mov
cmpl
data16
daa
pushf
in
jmp
cmp
jl
jmp
scas
movsl
div
mov
dec
in
fbld
dec
xor
jecxz
xchg
jbe
icebp
stc
stos
pushf
inc
fcoms
inc
pop
repz
mov
push
mov
outsb
std
adcb
repz
inc
jmp
dec
mov
sbb
sub
cmp
jns
sub
and
lods
or
les
dec
pop
iret
push
pop
xorb
neg
jg
call
push
mov
dec
out
in
mov
ret
ljmp
mov
jns
dec
enter
repnz
jne
mov
js
popl
bound
mov
add
jno
sbb
lahf
imul
js
mov
adc
shll
das
adc
jo
addr16
out
jge
xchg
xchg
ret
dec
or
fsubrp
outsb
sbb
lea
push
add
fstpl
add
push
mov
mov
xor
sbb
xchg
inc
mov
mov
subl
sti
pop
and
pop
add
cmp
mov
cmp
mov
pop
cs
xchg
pop
jns
pop
lock
scas
sub
and
nop
ds
dec
pop
movsl
push
int3
sub
mov
mov
sub
ljmp
repnz
stos
cld
leave
outsl
pop
je
inc
js
add
cli
mov
fisubrl
xor
xor
jo
test
jb
inc
jo
jno
cmpsb
jo
dec
lahf
in
out
mov
aam
leave
inc
jae
in
pop
xchg
popf
jbe
jo
xchg
xchg
insb
decl
cmp
xchg
adc
or
aam
or
sub
outsb
repnz
add
xchg
out
cmpsl
loop
out
xor
jmp
inc
or
inc
inc
cwtl
mov
xchg
jns
clc
adc
mov
or
aad
jmp
negb
cltd
orb
ds
cmp
xor
jle
pop
mov
js
movsl
orl
scas
adc
xchg
outsl
or
xchg
sub
call
and
dec
inc
jg
in
call
sbb
fwait
add
and
loop
sbb
and
stc
insb
xlat
inc
or
and
push
jae
mov
xor
lods
or
sahf
ljmp
and
inc
fs
lret
mov
or
repz
jo
xchg
sbb
or
fnstenv
cld
or
faddl
pop
in
out
rcrl
subb
cld
and
jnp
xor
test
ja
pop
lar
ljmp
int
rcrl
mov
nop
mov
lret
adc
call
in
mov
clc
dec
mov
bnd
stos
jmp
shlb
stos
filds
aad
orb
ja
dec
movsl
pop
adc
cmpsl
or
adc
mov
push
jae
xchg
xlat
dec
adc
sub
mov
daa
sbbb
aaa
jmp
inc
sub
mov
xor
pop
sarl
cltd
mov
jo
movsl
pusha
loope
fisubs
pop
push
sbb
stos
adc
jns
hlt
xchg
sbb
in
sub
daa
mov
adc
sbb
pop
fmuls
data16
test
test
adc
popf
jns
leave
lock
sub
scas
and
or
pop
dec
inc
pop
fcompl
mov
mov
dec
dec
enter
js
and
gs
cltd
cmpsb
icebp
or
pop
out
daa
xchg
xchg
mov
sbb
inc
insl
cmp
int
bound
inc
fucomp
pushf
push
mov
negb
mov
sahf
xor
inc
push
repnz
cmp
push
std
cmp
test
dec
test
push
les
add
pop
jno
lds
scas
inc
ss
inc
pop
pop
or
sahf
jp
jl
xchg
jl
in
xor
fwait
cmp
mov
adcl
sub
cwtl
or
sub
mov
int
xchg
sub
in
adc
pusha
ja
pop
stos
xor
rclb
mov
push
stc
ret
lret
sbb
jle
dec
fildll
js
into
xchg
lods
mov
mov
int
pop
mov
push
jge
shl
mov
test
fwait
sub
mov
jae
xor
jmp
loope
push
inc
mov
call
dec
adc
bound
dec
nop
into
inc
ja
lret
mov
jns
in
test
test
sbb
outsb
cmp
out
xchg
jge
jnp
int
pop
pop
sub
or
inc
in
sbb
mov
cmp
pushf
lcall
mov
fsubrp
mov
sbb
mov
jae
mov
mov
pop
mov
add
lret
lahf
stos
in
insb
out
inc
xchg
cmp
cmp
dec
in
xor
ret
push
jae
das
mov
sbb
mov
std
arpl
lahf
jb
push
movsl
pop
test
fistps
sbb
inc
cmpsl
and
adc
aas
dec
fcomps
subb
mov
data16
bound
stos
pop
loopne
int
mov
sbb
ja
inc
cmp
cmp
lcall
mov
jno
jge
fwait
movsb
aaa
scas
mov
cld
push
xor
in
inc
cmpl
mov
cmp
pop
fsubs
js
push
xor
cmp
pusha
push
push
cmpsb
and
or
jbe
popf
pop
cs
rcrl
gs
mov
add
pop
dec
add
ds
cmpsl
mov
jo
pop
das
and
movsb
sub
lds
hlt
and
mov
cmp
sbb
xchg
stc
xchg
pop
testb
dec
lahf
pop
and
int3
and
in
sub
mov
je
std
mov
aam
sti
rcr
sub
sbb
push
adc
bound
push
dec
adc
jge
dec
adc
loop
mov
pusha
insl
ja
sub
push
add
sbb
std
push
sbb
into
mov
and
pop
sub
clc
adc
inc
xor
and
rcll
jmp
out
or
js
add
pop
mov
add
sub
and
jae
mov
push
imul
pop
adc
stos
adc
stc
jo
lock
out
ds
out
lret
sbb
push
and
sub
sahf
sub
and
pushf
iret
jns
inc
mov
lahf
and
mov
cs
stos
push
xor
andl
xor
xchg
jb
int
in
imul
xor
out
dec
in
pop
xlat
sbb
xor
int3
test
fsubs
imul
cwtl
xor
movsl
pop
sub
movsb
cld
sbb
loopne
adc
pop
fnsave
push
jecxz
jle
sub
dec
inc
sbb
cmp
test
jg
pop
mov
test
jbe
rol
out
cmp
dec
clc
push
jg
cmp
aad
out
adc
sbb
mov
bound
xorb
mov
mov
orl
or
mov
faddl
nop
std
test
xchg
pop
sbb
jg
mov
sti
pop
jnp
test
loope
jno
jns
xchg
fmuls
rcr
mov
pop
js
and
std
popa
sub
or
cli
pop
dec
std
xchg
fdivp
cmp
pushl
pusha
fstpt
or
mov
dec
or
leave
shlb
push
xchg
call
mov
fs
ja
mov
mov
xchg
push
mov
dec
divl
mov
in
pop
ss
mov
dec
xchg
jmp
cmp
push
ljmp
jnp
cmp
jae
inc
fnsave
sbb
ljmp
lret
sbb
mov
std
mov
lret
inc
mov
out
push
cs
adc
jbe
pop
orb
dec
clc
xor
dec
xorl
repz
lahf
hlt
frstor
faddl
insb
mov
sub
test
xor
jb
jl
and
pop
sbb
loop
add
xor
jmp
sub
test
mov
frstor
hlt
xchg
mov
pusha
enter
jecxz
inc
adc
lcall
cmp
shl
lret
and
ds
push
sub
pushw
xchg
nop
jecxz
or
mov
sbb
fisttpl
hlt
stos
hlt
adc
add
rorb
cmp
push
add
dec
das
xor
ret
xor
stos
gs
lods
pop
mov
sbb
pop
xor
rcrl
or
imull
loopne
rcr
incb
outsb
shrl
add
mov
rcrl
test
or
mov
push
jno
loopw
mov
xchg
mov
in
scas
mov
mov
hlt
dec
lock
mov
mov
ret
cmp
sar
mov
cmc
sub
subb
add
js
repnz
sti
loopne
mov
or
scas
rclb
mov
sbb
xor
sbb
es
jb
dec
imul
test
jns
xchg
movsl
xor
arpl
xor
mov
test
fcoml
jae
jns
cltd
jb
imul
pop
xor
loopne
in
xchg
push
cld
push
scas
mov
xchg
jg
xor
sub
and
sub
jle
sbb
lahf
aaa
push
hlt
xchg
adc
cmp
sub
and
outsb
mov
mov
jle
dec
mov
idivl
cmpsb
cwtl
sbb
fcompl
dec
push
xor
imul
lea
pop
and
insl
jl
sbb
gs
loopne
add
fwait
ja
hlt
ret
notl
xor
arpl
inc
and
cmp
cli
ds
and
jg
sarb
cltd
outsb
lcall
daa
inc
jae
imul
add
fisttpl
mov
push
dec
mov
rclb
in
jo
dec
aaa
ss
mov
aad
push
cli
mov
gs
mov
and
popl
testb
fdivrl
enter
push
dec
jl
ret
dec
cmp
cmc
mov
xlat
test
cmpb
mov
dec
pusha
adc
cmp
push
mov
scas
stos
ja
aaa
ljmp
push
loop
and
cmp
dec
xchg
fsubrs
ret
sarb
fcompl
adc
jl
shlb
mov
ficoms
ficoml
cltd
in
xchg
mov
adc
inc
in
mov
and
and
jp
fdivrp
imul
subb
testb
icebp
inc
and
les
daa
dec
pop
aas
lret
lods
daa
daa
in
cmp
cmp
imulb
mov
sti
xor
jl
in
jle
filds
lret
in
nop
jae
das
subb
ret
xchg
sahf
pop
xor
xor
and
mov
movsl
neg
xor
mov
shlb
mov
mov
cmc
outsb
imul
dec
xchg
arpl
cmp
and
jnp
dec
inc
lds
mov
adc
and
mov
add
mov
cmc
jae
xor
das
or
lock
aas
push
jae
hlt
cli
add
scas
mov
shrb
addb
cld
add
sub
movsb
sub
xor
orb
jbe
aad
call
pop
inc
fsubrp
and
jmp
pop
stos
data16
mov
adc
lret
jae
sbb
jo
sbb
sbb
jnp
cmp
inc
mov
adc
cwtl
aaa
scas
pop
mov
scas
fcom
in
xor
ss
jecxz
sub
pop
arpl
imul
sbb
outsb
les
fwait
mov
mov
insb
lods
aaa
loope
adc
push
faddl
daa
push
adc
xchg
add
jge
rcrl
loop
loop
test
test
mov
cltd
mov
call
testl
sbb
int3
pop
mov
mov
mov
arpl
adc
gs
cmp
scas
xor
decl
lret
push
test
xchg
sub
stc
cmpsl
lds
js
sti
test
in
mov
call
imul
or
fwait
stos
xor
sbb
scas
or
xchg
dec
aas
das
sbb
mov
mov
jle
mull
xor
ret
movb
sub
jl
or
adc
inc
ds
sbb
es
rorb
subb
mov
mov
or
mov
nop
inc
sbb
cli
addb
lret
jecxz
rcr
xor
or
mov
roll
clc
mov
mov
arpl
loopne
push
ret
inc
or
push
mov
fsubs
psrad
leave
lcall
popa
add
pushf
cwtl
mov
dec
add
inc
fldcw
cmp
ret
scas
xorb
dec
rclb
pop
repnz
movsb
pop
mov
xchg
in
jbe
sbbb
cmp
cmp
rcrb
push
mov
shlb
dec
in
jae
jge
or
leave
nop
outsb
dec
sbb
icebp
lret
lcall
lahf
pop
sub
mov
xchg
mov
faddl
jmp
sub
sbb
fsts
mulb
pop
sbb
xor
lock
test
mov
addl
lret
aas
in
xor
mov
dec
push
push
cmc
stos
xchg
adc
push
ljmp
shl
sahf
inc
aas
push
dec
jle
addr16
xchg
jle
push
push
outsb
xchg
or
lock
push
ja
inc
je
xchg
mov
mov
mov
adc
jae
out
jg
mov
pop
ja
das
push
push
in
ljmp
mov
insl
mov
mov
and
insl
xchg
lds
push
test
and
bswap
push
cmp
mov
add
mov
dec
mov
dec
mov
repz
ret
adc
mov
cmp
addb
mov
push
pushf
ret
fisubrl
insb
ret
xor
pop
iret
shrl
xchg
inc
call
scas
cmp
inc
out
mov
and
xor
push
ljmp
cmp
enter
pop
mov
jle
mov
arpl
out
jecxz
push
xor
fstpt
cmp
ss
dec
jmp
xorl
int3
add
push
push
cld
repz
insb
rorb
lret
test
dec
imul
roll
pop
bound
sbb
add
jno
out
lea
dec
dec
iret
jle
or
pop
xor
push
scas
cld
inc
xchg
into
jae
arpl
stos
div
scas
adc
inc
fiaddl
and
dec
in
je
mov
jnp
in
ss
sub
dec
nop
jno
sbb
outsb
cmp
dec
xchg
jnp
add
data16
test
sub
sbb
inc
addr16
lret
mov
cld
test
or
inc
mov
dec
es
aaa
cltd
add
and
lret
imul
iret
dec
jp
mov
xlat
rcrb
sbb
pop
ret
xchg
sbb
fimull
or
mov
add
cli
scas
mov
test
mov
push
fcom
lret
incl
xor
mov
and
push
and
mov
adc
hlt
lods
inc
in
dec
pushf
daa
jge
repz
inc
push
popf
addr16
jle
jle
bound
pop
sub
mov
gs
sub
mov
ljmp
pop
pushw
jb
pop
add
push
xor
jl
das
arpl
mov
pushf
push
xchg
rorb
cmp
out
call
iret
xchg
hlt
add
cmpsb
lcall
stc
pusha
stos
inc
sub
int3
mov
add
lods
mov
scas
mov
test
call
cmpsb
addr16
repnz
test
lret
loope
fstl
xor
scas
cli
push
imul
jnp
loop
in
pop
lahf
lcall
sbb
ret
movsl
mov
adc
add
sub
arpl
dec
mov
dec
fwait
hlt
insl
cwtl
lods
mov
push
sub
pop
int
outsb
cmp
sbb
mov
int3
subl
mov
mov
mov
mov
into
inc
pop
sub
pop
sub
imul
sahf
mov
lret
mov
mul
call
cmp
xchg
mov
jbe
push
cmc
add
cmp
scas
stos
leave
adc
push
jp,pn
ljmp
stos
jnp
mov
stos
pop
lret
aad
aaa
adc
sbb
shr
add
mov
insb
inc
movsl
and
loopne
add
adc
rclb
sub
inc
or
ss
mov
jb
fcompl
test
mov
mov
cmpsb
aas
lea
out
gs
dec
fmull
fisubrs
aad
cmp
in
sbb
push
negb
dec
dec
dec
and
insl
sub
xchg
inc
fisubl
test
aas
ret
push
inc
or
push
pop
add
sbb
xchg
out
mov
sub
imul
stos
aas
lods
mov
inc
arpl
inc
mov
xor
pop
mov
andl
scas
xchg
aas
mov
in
aad
adc
mov
add
fisubrs
jns
scas
ljmp
mov
sbb
jne
sub
lods
mov
dec
inc
imul
stos
addr16
jo
push
cs
sbb
jle
mov
adc
in
iret
test
lret
jmp
lea
insl
add
rcl
dec
jb
sbb
xchg
sub
ret
jle
in
cs
cmc
es
xchg
outsb
outsl
adc
xchg
mov
jo
dec
je
inc
dec
adc
test
inc
test
in
inc
loopne
out
jae
push
fndisi(8087
sbb
or
mov
and
dec
dec
stc
inc
in
rcrl
cmp
or
lods
sub
add
add
loope
sbb
rorb
push
popf
mov
add
or
xchg
jle
adc
rcl
out
cmp
std
movsb
mov
jle
xchg
in
jo
rorb
fstpl
dec
cmp
mov
sub
out
aaa
and
sbb
ljmp
mov
xlat
dec
pop
lock
cld
out
fnstsw
push
push
add
movsl
add
or
or
mov
mov
and
xorps
mov
loope
loope
sbb
adc
cmp
fwait
rcrl
icebp
imul
popf
dec
xchg
push
pop
mov
inc
sar
jb
or
in
or
jecxz
popa
fwait
int
sub
sub
mov
jge
out
add
lret
adc
jmp
jge
rolb
sti
js
and
test
inc
jnp
inc
pop
pop
data16
jne
cmp
and
loopne
pop
jbe
ja
cmpb
in
lret
push
out
pop
or
xorb
add
rol
sbb
mov
dec
ficoml
cmp
stos
subl
dec
repz
pop
test
inc
fnstsw
xchg
push
or
jnp
addr16
or
xchg
inc
mov
call
scas
sbb
shrb
aaa
xor
sbbb
mov
daa
sbb
fwait
aas
push
mov
push
out
adc
ret
sbb
insl
xchg
jp
dec
fwait
gs
negl
adc
dec
sub
loop
in
inc
cmp
gs
dec
mov
cmpsl
cli
mov
xchg
cld
xor
jo
add
int3
in
shll
cmp
jecxz
ss
mov
pusha
loope
sahf
mov
lock
in
inc
jle
sub
stos
mov
enter
dec
sbb
lods
dec
add
iret
sarb
mov
inc
or
mov
inc
push
mov
scas
mov
jns
lods
push
sbb
lods
jno
sahf
xor
jno
insl
sub
pusha
shl
mov
jns
jae
pop
fs
add
jmp
xchg
or
lret
inc
enter
pop
push
mov
ljmp
mul
jp
push
sahf
jmp
mov
rep
pop
lret
movl
pusha
rorb
push
adc
loope
test
insb
push
fwait
dec
sub
insl
xchg
jae
sub
dec
jp
add
ror
mov
mov
pop
push
dec
ds
cmp
dec
mov
cmp
stc
test
and
mov
lret
stos
movl
cmp
xor
and
pop
arpl
sbb
sbb
int3
jo
cmp
mov
int
mov
or
xor
lock
cmc
aad
xlat
push
dec
loop
std
mov
imul
mov
push
sbb
lret
shll
jns
dec
xchg
pop
mov
sbb
cmp
push
fistpll
add
cmp
mov
sbb
call
lock
lcall
dec
xchg
push
sbb
int
fwait
inc
insb
in
call
jnp
sarb
inc
xor
pusha
xlat
mov
dec
xorb
fnstenv
xor
jae
add
inc
pop
in
sub
das
jbe
call
cmp
push
fldl
insl
mov
bound
add
lcall
lods
push
fnstcw
arpl
xchg
inc
adc
and
aad
dec
cs
cmpsl
push
push
xchg
cmp
inc
adc
dec
ss
inc
adc
or
loop,pt
movsb
fdivrs
xor
xchg
mov
push
cmp
push
cli
cmpsb
xlat
sbb
and
mov
lock
test
dec
pop
lret
icebp
fisttpll
and
mov
dec
push
iret
lock
iret
lret
fnsave
jbe
xor
xor
adc
sub
adc
mov
test
es
or
nop
mov
xor
es
inc
lods
shlb
sbb
rcll
out
add
loop
fldt
mov
cmpsl
in
inc
in
sahf
mov
xor
pushf
lds
notl
adcl
push
dec
dec
add
jmp
adc
adc
mov
pusha
pop
arpl
insb
sub
shrl
movsl
enter
dec
fistpl
cmp
mov
mov
flds
push
sub
xchg
adcb
in
into
sub
out
icebp
mov
js
fstpl
sbb
in
mov
ret
sahf
xchg
mov
mov
bound
cmpsl
mov
negb
aaa
cmpsb
pop
adc
rol
sub
xchg
or
mull
shlb
xor
cltd
mov
test
rorl
test
inc
jge
sub
nop
bound
and
loop
add
out
mov
movsb
ss
push
ret
stc
mov
enter
loope
mov
and
rcll
fs
sub
sub
mov
repnz
cmpsl
ds
aad
add
sub
outsl
loope
call
roll
lds
mov
js
push
dec
add
adc
cmpb
std
pop
test
xchg
lea
dec
leave
mov
fisubrl
jno
jg
test
notb
dec
jmp
cmp
pop
jne
mov
xchg
or
sbb
mov
add
mov
xchg
pusha
inc
push
ss
adc
aad
mov
lret
out
push
movsb
icebp
jp
inc
repnz
sahf
cmpl
lea
add
push
dec
adc
ret
js
out
jmp
test
loope
jns
cmp
inc
mov
cli
daa
movzbl
lock
or
push
lret
mov
insl
push
inc
mov
jmp
test
cmp
and
mov
jns
scas
mov
cmp
inc
fistpll
popf
mov
test
xchg
lahf
ja
aad
scas
jbe
mov
les
imul
inc
out
dec
push
cmp
jge
mov
jmp
lret
fistpll
call
jecxz
ss
jbe
pop
dec
push
aas
imul
pusha
call
xlat
call
mov
cmp
jge
mov
stos
dec
imul
stos
pop
je
aas
cli
xlat
nop
push
imul
repnz
int
pusha
mov
fstpl
mov
lock
lret
insl
fisubrs
nop
mov
pushf
das
push
xor
fcompl
ret
mov
mov
sub
xor
dec
stc
gs
pop
les
sub
ret
out
xchg
jo
adc
cld
mov
insl
mov
stos
outsb
std
enter
fnstcw
aam
mov
pop
int3
ret
les
add
sub
sbb
mov
imul
call
dec
les
push
jge
mov
ret
fmulp
in
fdivr
stc
test
lods
inc
pop
xchg
rcl
mov
insl
pop
adc
dec
xor
sub
dec
frstor
fcos
or
cld
clc
mov
push
mov
popf
adc
adc
jns
sahf
add
outsl
stos
scas
popa
jge
cmp
rol
popa
rcll
addr16
in
pop
inc
add
aam
add
shr
jecxz
iret
and
sbb
mov
cmp
adc
push
mov
inc
sbb
inc
out
push
into
fsts
rorl
subl
popl
rorb
notb
mov
xor
pop
mov
add
sub
push
in
sbb
je
jnp
mov
xlat
testb
fmull
sbb
imul
lret
cmovo
js
stos
sbb
js
sbb
cmp
and
fmulp
test
fsubrl
aaa
cmp
adc
test
push
push
jle
cmpsl
repnz
adc
insb
push
mov
pop
dec
out
in
mov
xor
outsb
fsubl
xchg
sti
stc
js
lea
sbb
cmp
push
mov
inc
push
ss
push
dec
loope
push
insl
push
xchg
mov
data16
sbb
jp
xchg
pop
push
pushf
add
in
mov
mov
and
add
jl
add
frstor
shlb
loop
push
fdivrs
sub
loopne
mov
es
cmpsl
and
mov
js
adc
push
mov
pusha
cmp
aaa
into
out
cmc
les
sbb
mov
call
adc
sbb
fimuls
sub
jns
lea
cmp
mov
mov
mov
jo
cmp
dec
inc
addr16
mov
adc
mov
mov
out
icebp
or
std
pop
cmp
out
scas
inc
jb
sarb
stos
add
dec
and
sbb
cmp
sbb
add
and
mov
add
sub
sahf
mov
or
popf
shlb
shl
xlat
sbb
insl
cs
jmp
inc
fs
push
int
fidivs
lret
and
jle
shrl
jnp
push
jae
dec
loope
cmp
mov
adc
add
dec
lcall
cltd
les
ret
loope
mov
adc
add
lret
jge
cmp
pop
push
lret
cld
jns
sbb
lret
adc
sub
jl
fldcw
push
test
psllq
push
enter
mov
loopne
cmp
or
mull
cld
inc
scas
push
imul
addr16
fld
rcll
nop
shrl
mov
mov
mov
push
xor
mov
pop
lret
pop
and
gs
xor
push
sbb
js
stc
mov
lea
out
insb
mov
outsl
sbb
dec
push
mov
inc
adc
inc
dec
xchg
rol
movsl
inc
xchg
std
xchg
mov
arpl
movsb
cmp
cmpsl
in
stos
ret
xchg
xor
mov
jl
addl
maskmovq
testl
loop
cmp
add
movsb
fsubl
dec
movsl
pop
dec
mov
jp
sub
adc
jmp
lods
in
jmp
inc
xor
push
add
hlt
stos
in
xor
xchg
les
outsl
or
les
mov
in
outsl
shlb
xchg
in
popf
fistps
nop
push
push
mov
stc
push
inc
mov
mov
dec
mov
scas
xchg
sub
outsl
add
or
mov
xchg
sbb
lcall
rcrb
push
imul
xor
fsubrs
out
loop
sub
jle
push
fwait
xchg
into
dec
test
xchg
xor
std
push
inc
xor
pushf
mov
pop
jnp
xor
data16
xchg
shlb
iret
nop
notb
rorb
fdivr
aas
stos
scas
loope
stos
add
shl
jae
mov
add
xchg
xchg
jno
xor
adc
pop
call
je
mov
or
or
pusha
les
push
cli
jl
jmp
out
scas
lods
mov
clc
sti
test
mov
insl
mov
mov
push
outsb
mov
shl
or
aas
add
cltd
jmp
dec
fwait
mov
inc
test
dec
jl
and
mov
and
xor
adc
cmp
push
inc
and
or
sbb
jae
shrb
push
push
adc
mov
mov
adc
and
push
xchg
popf
sahf
sbb
insl
fsubs
inc
and
mov
popa
cmp
and
out
bound
inc
mov
mov
cmp
js
inc
jne
sbb
in
xchg
cmp
push
cs
mov
dec
lret
xchg
pop
punpckldq
sti
leave
mov
xor
adc
mov
inc
mov
pop
inc
aas
dec
pop
test
jo
mov
jbe
clc
rcrl
mov
xor
scas
inc
cld
icebp
aaa
xchg
pop
cmp
or
and
insl
fwait
jge
out
adc
ret
add
jle
pop
jnp
mov
cmpsb
jp
in
movsb
push
mov
movsl
cmp
push
and
or
jge
les
stos
int3
push
int
lahf
or
sub
out
mulb
cld
daa
dec
out
pushf
lds
std
add
xor
cltd
in
lret
les
addr16
inc
scas
out
lret
jnp
push
add
aaa
mov
cmp
sub
adc
add
pop
loopne
lahf
stos
out
stos
fisubrl
mov
mov
push
dec
sbb
dec
or
cli
cmpsl
pop
jne
push
sub
lds
in
jecxz
enter
loope
mov
mov
js
push
pop
lea
or
int
cmp
ljmp
fistpll
sub
sbb
aam
push
xchg
data16
setle
pop
adc
shl
cli
xchg
mov
data16
or
shll
imul
lea
test
ss
fdivrl
mov
test
pop
ss
fstp
rorb
stc
lret
and
in
pop
in
out
insb
sbb
ss
dec
xchg
dec
sbb
inc
sarb
cmp
ss
add
jge
movsb
hlt
pmaxub
in
scas
xchg
cmp
cli
inc
in
sub
imul
cltd
in
es
adc
push
add
test
sub
xchg
cmp
mov
arpl
sbb
int3
addr16
and
ja
test
and
loopne
xchg
cltd
adc
mov
and
mov
cwtl
and
loope
cmp
mov
sub
or
mov
cmp
pushf
divps
popa
outsl
sbb
clc
pop
mov
movsl
xchg
fbld
movsb
push
adc
jbe
or
outsl
mov
mov
lock
jo
sbb
mov
mov
das
lods
stos
adc
jbe
aam
sub
mov
out
into
and
loopne
lahf
inc
cld
mov
and
aad
clc
cwtl
decl
rdpmc
or
sbb
mov
cmpsl
mov
or
cltd
or
fstl
cmpsb
mov
out
cmpsb
std
in
cmp
xor
add
sub
mov
sub
out
pusha
push
lahf
mov
in
xor
jno
mov
dec
xchg
jns
arpl
loop
stos
mov
fiaddl
fcmovbe
insb
clc
outsl
loop
scas
cli
xor
dec
xchg
fistl
adc
pop
xchg
jnp
add
enter
mov
push
scas
nop
test
lcall
dec
out
jmp
rcr
add
jmp
ficompl
cmpsb
sti
insb
popf
into
pushf
adc
pushf
xchg
ja
in
add
and
pop
xor
xor
push
mov
and
mov
pop
sbb
push
inc
orb
movsb
loopne
sbb
xchg
es
out
cltd
out
sub
std
or
or
ret
add
fwait
ud2
mov
cld
push
pop
xor
test
inc
cmp
xchg
jle
les
push
scas
lds
pop
js
outsb
xchg
int
mov
scas
push
sub
cltd
loope
push
mov
dec
data16
in
popf
dec
arpl
cmp
dec
ret
jnp
movsb
mov
les
je
mov
shlb
sahf
pop
stos
pmuludq
dec
mov
icebp
cmp
cmp
jns
out
xchg
jp
push
test
jae
adc
loopne
imull
jle
stc
mov
inc
hlt
adc
in
aad
pop
lds
sahf
out
inc
and
insl
fbld
pop
addr16
shll
lods
xlat
push
pop
and
stc
push
pusha
daa
lock
sub
fistpll
add
jl
movsb
mov
lahf
pop
lods
add
xchg
les
sbbl
add
fmuls
ficoml
filds
out
mov
jg
and
jg
xor
mov
iret
ret
cltd
scas
push
and
aas
pop
add
jecxz
daa
stc
xor
icebp
mov
aad
add
pop
pop
pushf
loopne
jle
cmpsb
add
mov
out
cwtl
inc
mov
mov
mov
mov
in
insl
push
negl
jecxz
jge
in
sahf
fs
je
jmp
lds
fwait
cli
xchg
cmp
and
inc
inc
pushf
in
or
cmp
xchg
jae
js
in
ljmp
movsl
lea
pop
aam
xor
fildll
sub
outsl
mov
testl
fildl
out
mov
dec
mov
sbb
shll
gs
xor
jp
outsb
inc
into
test
xchg
push
stos
cmp
xchg
xorb
ret
xchg
add
inc
imul
pushf
or
enter
daa
in
gs
imul
ret
xchg
push
inc
jnp
pop
sub
dec
hlt
arpl
cmp
les
mov
sbb
aam
std
mov
pushf
int3
dec
mov
movsb
loopne
jge
lret
int3
xor
adc
push
ss
into
ficoml
xchg
mov
and
adc
adc
push
mov
cmp
xor
xchg
mov
stos
push
scas
sub
inc
and
sarb
cmp
ret
gs
sub
test
adc
jo
cmp
cmp
dec
aam
ror
xlat
adc
mov
rolb
add
inc
imul
mov
loop
dec
fs
ret
call
shlb
ret
addr16
sbbl
out
push
aaa
and
lods
dec
imul
notb
xor
pop
mov
int3
and
rcrb
cmp
fbld
in
or
cmp
ds
out
call
cmp
mov
movzwl
add
fcoms
add
pop
mov
cld
aas
dec
adc
and
icebp
xor
movsb
ljmp
cmp
mov
test
aad
in
rcrb
xor
sarb
xchg
testl
mov
enter
in
aad
and
ljmp
add
loope
inc
and
xchg
jp
testb
mov
xor
cltd
cld
jno
scas
pop
test
cmp
cld
push
cs
jo
dec
push
sti
add
push
sti
push
add
icebp
or
outsl
cmpsb
gs
frstor
shll
pop
mov
fs
stos
and
insl
fs
nop
inc
sbb
cli
adc
dec
fwait
movhps
or
add
repnz
scas
xor
mov
mov
adc
cmpsl
adc
nopl
insl
jbe
mov
dec
insb
or
stos
xchg
mov
sbb
pop
mov
inc
pushf
jge
add
push
push
mov
xchg
out
xchg
in
orb
inc
insb
repnz
inc
jmp
and
shll
xchg
sbb
shlb
add
xor
mov
dec
sbb
ret
imul
and
es
cld
loop
xchg
mov
outsl
cmp
mov
xor
pop
adc
stos
jp
stc
and
jae
xor
adc
dec
push
jne
and
divb
pop
in
into
sti
sarl
mov
rcrb
addr16
mov
jae
sti
lds
mov
mov
mov
notb
popf
fs
mov
repnz
jnp
add
pop
adcl
adc
cmp
cmpsb
push
repnz
aaa
xor
rorl
loop
sbb
ja
lods
pop
inc
push
int3
push
sti
pusha
pop
aad
loopne
jne
fistps
pop
sahf
xchg
stc
jno
loop
icebp
movsb
shrb
pop
fcoms
rorl
cli
ja
jl
or
loopne
mov
fildl
adc
xchg
mov
inc
mov
push
into
mov
test
shll
adc
push
aad
pop
mov
sbb
bound
in
jl
test
mull
fstps
lret
mov
jp
jno
out
mov
or
or
sbb
jb
sub
imulb
cmpsb
push
movsl
push
pop
or
mov
xor
or
mov
enter
jp
xchg
push
add
jno
push
js
lret
jle
or
mov
sub
and
fsubr
js
xchg
imul
rorb
pop
mov
and
gs
sbb
idiv
xchg
ret
jmp
std
mov
inc
mov
inc
in
hlt
mov
ljmp
out
xor
hlt
mov
lods
xchg
subl
mov
fdivl
jmp
cmpsl
push
jne
imul
mov
or
sub
jo
push
push
les
mov
test
cmp
pop
pop
add
popa
pop
leave
xchg
adc
cmp
lds
and
test
aaa
xchg
imul
fdivp
bound
jp
jle
mov
and
fbstp
movsl
or
jmp
outsb
jbe
fcom
das
add
js
outsl
xor
ficomps
push
jp
fiaddl
inc
jnp
pop
lea
pop
lods
div
pop
in
mov
in
leave
push
jg
mov
mov
cltd
leave
fmull
mov
cmpsb
imulb
and
mov
push
in
je
test
shrl
jge
adc
mov
loopne
test
xchg
mov
push
adc
sahf
adc
pop
in
pop
dec
int
push
call
cmpb
sahf
add
cmp
mov
xchg
mov
jb
mov
mov
sahf
add
js
pusha
sahf
or
bound
into
popa
iret
xor
xchg
add
jl
aam
sbb
shr
jmp
les
arpl
dec
jae
jge
or
mov
out
jnp
cmc
mov
xor
jbe
mov
or
mov
mov
mov
imul
pop
add
add
cmp
stos
mov
mov
pop
mov
and
adc
adc
pushf
aad
push
mov
mov
jle
gs
jp
popl
xchg
xor
pop
out
mov
xlat
sub
rcr
icebp
in
incb
test
sbb
or
xchg
imul
bound
imul
pop
adc
repz
push
xchg
mov
jno
push
sub
adc
in
cmp
js
adc
out
adc
dec
pushf
test
cmp
addb
adc
mov
mov
jns
sbb
adc
mov
sub
aad
pop
stc
push
sbb
ljmp
adc
jns
mov
sti
push
popa
or
jb
not
test
cmp
push
int
mov
inc
repz
mov
mov
pop
xor
sub
jp
popa
call
mov
das
xchg
jp
sbb
sti
loopne
push
add
jp
inc
add
dec
sub
cmp
mov
mov
mov
push
push
or
insb
push
mov
mov
pop
insb
mov
pop
rclb
xchg
sarb
xchg
lock
insl
iret
and
incl
jo
mov
mov
xchg
mov
js
data16
sbb
lock
into
cs
rcrl
or
pop
jno
mov
jl
lods
cwtl
int3
sahf
mov
add
pop
xchg
dec
lds
imul
lock
test
dec
pinsrw
fwait
xor
lds
fdiv
pusha
lcall
jbe
outsl
aad
cmp
stos
mov
fdivr
inc
or
add
push
or
jl
sbb
mov
pop
xchg
je
and
push
daa
xor
cli
pusha
test
adc
loope
xchg
dec
xor
insb
fstpl
push
mov
jecxz
sarb
push
jg
xchg
xlat
cmp
sub
jbe
les
mov
and
sub
cmp
fwait
mov
sub
fcoms
lods
or
mov
rcrb
add
out
bound
jo
pop
lods
inc
pop
push
adc
lret
cmpsb
adc
in
mov
cli
mov
adc
jnp
push
mov
outsl
cmp
mull
push
xchg
aad
jle
outsb
mov
sub
sub
add
ret
outsl
je
xlat
cmc
xor
inc
ss
push
push
push
xchg
add
aaa
out
push
lcall
push
icebp
movsl
sbb
cwtl
je
cmpsb
mov
inc
mov
sbb
popf
push
mov
pushf
inc
mov
int
lcall
mov
xor
sub
sbbb
outsl
ret
sbb
cmp
sbb
jge
jmp
adc
js
dec
ja
iret
jl
jle
mov
inc
outsb
inc
repz
mov
jnp
xor
add
roll
sub
aam
add
enter
stos
int3
fdivp
inc
shrb
mov
cltd
mov
sbb
mov
fwait
iret
rcl
jne
sub
sub
inc
pop
mov
fidivs
or
push
fs
pushw
pop
or
sub
lahf
test
movl
push
xor
shlb
arpl
jg
idivb
outsl
mov
jno
sarl
movsl
ret
pop
push
xchg
dec
lds
push
out
bnd
in
and
test
leave
clc
hlt
cli
imul
push
add
push
jb
push
shlb
out
push
repnz
jne
stos
jge
movsb
bound
pop
push
cltd
add
pop
imul
or
mov
mov
adc
insl
mov
push
mov
call
stc
cmpsb
and
cmp
fwait
loope
mov
imul
jbe
movl
out
sub
imul
rorb
push
xor
int3
sahf
sub
sarb
scas
pop
rorl
pop
inc
cld
push
jbe
fidivs
das
nop
push
dec
fstl
lret
pop
add
xchg
stos
fnsave
jns
lret
xlat
jbe
mov
sti
cmp
ficoms
sbb
cmp
and
sahf
test
test
add
mov
cld
jnp
sbb
adc
rcr
cmp
lock
lea
jl
adc
out
mov
mov
out
or
cmp
or
add
add
adc
sub
je
sbb
pushf
notb
divl
insl
sub
mov
cmp
outsb
int3
outsl
and
or
pop
xchg
in
jae
adc
xlat
cs
mov
leave
and
xor
add
rol
jle
les
aam
mov
ret
stc
insb
test
or
mov
push
xchg
add
mov
mov
lds
push
iret
or
sti
jp
inc
pop
lods
sarb
movsl
sbb
sub
loopne
mov
mov
sarl
cltd
outsl
loopne
mov
mov
dec
jae
cmp
das
xchg
adc
or
inc
or
loope
pop
testl
cwtl
adc
sarl
cmpsl
hlt
lods
inc
fdecstp
mov
fs
aad
sub
lahf
das
ss
sbb
int3
popa
sbbl
sub
out
push
mov
push
adc
mov
fldcw
jno
imul
mov
fstl
repz
push
je
fs
lahf
xchg
add
and
lahf
xor
push
mov
xor
hlt
push
jbe
cmp
pop
cmp
or
or
or
inc
mov
dec
mov
jo
jno
stc
adc
cmpsb
push
ret
xchg
jbe
xchg
insb
xchg
outsl
inc
lods
mov
ljmp
add
sub
inc
les
push
in
add
nop
sbb
jg
lods
out
pusha
jno
dec
or
jbe
shrl
int
pop
mov
in
add
aad
sub
sbbb
ljmp
pop
cmc
push
loop
jg
add
test
xchg
inc
push
into
jae
add
shll
lret
fists
inc
je
negl
pop
push
sub
aas
jmp
or
out
sbb
in
outsl
movl
sahf
lock
mov
adc
cmp
es
repz
mov
les
sub
xchg
enter
and
pop
inc
or
movq
dec
mov
mov
xor
mov
dec
dec
mov
fwait
addr16
fwait
inc
in
xchg
mov
cmp
sub
mov
clc
and
cs
out
xor
dec
mov
repz
cmpsl
mov
mov
aad
ljmp
jne
out
jno
pushf
lret
add
loope
cld
cmpsb
stc
or
jecxz
adc
mov
shl
mov
cmp
pop
lea
or
cmp
lds
pop
jne
sbb
mov
jo
cmp
cmp
mov
add
rcrb
roll
xchg
scas
popf
push
pop
insb
fcomp
and
aad
jae
cltd
ja
add
jmp
push
adc
data16
movl
mov
sbb
mov
sar
popf
xor
or
movsl
mov
je
scas
push
movsl
cli
ficoml
add
in
cmpsb
call
adc
in
cs
xor
sarb
sbb
cmp
int
xchg
scas
mov
mov
pusha
sbb
test
inc
scas
arpl
addr16
cs
inc
cmp
iret
ret
stos
sub
out
in
push
lret
sub
jp
ficomps
cmp
pop
xor
cmpsl
push
movsb
dec
int3
push
gs
push
lcall
mov
fs
xchg
dec
cmp
gs
dec
int3
sub
int
insl
cmp
in
or
jp
push
fistl
inc
subb
lods
enter
shll
or
add
pop
data16
and
jno
and
cmp
scas
imul
minps
mov
push
jg
and
mov
stc
repz
mov
leave
mov
adc
pop
dec
inc
ss
sbb
lcall
fwait
jmp
mov
sub
loopne
test
sbb
pop
inc
or
dec
gs
mov
adc
dec
pop
push
cltd
dec
leave
add
dec
jno
addr16
ficoml
lret
xchg
je
popf
pop
mov
mov
leave
dec
cmp
inc
andb
and
data16
sbb
mov
mov
ret
nop
inc
jae
mov
call
pop
icebp
je
dec
leave
and
fwait
dec
inc
or
xor
fcomps
adc
mov
clc
stc
outsb
ja
xchg
sub
and
and
ds
out
mov
loope
xor
jo
jnp
shlb
xchg
mov
inc
jns
jae
dec
sbb
lds
pop
mov
push
outsb
xchg
inc
aam
flds
cmp
loopne
popa
loop
orl
pop
pushf
sbb
or
and
jo
scas
or
inc
popa
lret
jmp
mov
hlt
sbb
std
rcll
int
les
sti
ja
adc
xor
das
loop
push
out
dec
rorl
jl
and
mov
in
inc
addr16
jne
jns
loopne
stc
inc
dec
jge
movsl
or
pop
les
loope
sbb
mov
dec
adc
les
shlb
imul
out
pop
lret
nop
cmpsl
add
dec
call
movsl
or
jl
frstor
xchg
mov
mov
out
js
mov
inc
ret
jae
jl
fildl
imulb
dec
inc
or
arpl
or
and
sbb
enter
cmpsl
icebp
add
mov
lahf
or
or
pop
sbb
mov
adc
adc
dec
mov
jae
push
fsts
mov
popa
out
ds
in
rorb
mov
pop
lahf
push
sub
push
pop
or
xchg
insb
lcall
loope
mov
jle
cmc
rclb
jmp
push
and
add
jo
out
inc
cli
lahf
out
inc
pop
and
mov
cmpsl
adc
xor
and
jmp
das
stos
add
sub
mov
icebp
mov
jl
into
outsl
lahf
mov
mov
ret
and
pop
or
xchg
jmp
or
and
popf
arpl
lods
or
xchg
mov
lret
nop
sub
xor
adc
aaa
jo
or
adc
or
test
mov
lea
pop
fidivl
xor
daa
pop
jle
cmp
in
dec
mov
inc
ds
in
xlat
cltd
cmpsl
pop
stos
insb
scas
pushf
sahf
or
sbb
in
loop
jge
push
cmp
lcall
push
hlt
pushf
sbb
jp
adc
cmp
add
outsb
test
in
push
push
jg
mov
adc
mov
jp
sbb
jne
test
pushf
mov
lahf
push
adc
lret
xchg
popf
fsubrs
addr16
push
popf
mov
imulb
pop
arpl
addb
out
push
int
sbb
xor
or
repnz
int3
imul
sahf
and
popl
ret
or
insl
rcll
inc
push
pop
and
pop
test
cmp
adc
pop
repnz
and
loope
shl
fmul
fbstp
call
nop
xor
pop
outsl
sub
mov
pusha
push
out
jno
cmp
ret
mov
stos
xchg
lods
xchg
mov
loope
dec
mov
and
and
jnp
js
push
js
subb
jne
or
jmp
aaa
push
and
push
or
and
fnstenvs
xchg
rcrl
jo
imul
cltd
hlt
lea
mov
cmpsl
in
imul
sbb
in
cmp
rorl
fisubrl
jbe
pop
idivb
lods
in
xorl
aam
in
cmp
xchg
xor
repz
jno
fmuls
insb
cmp
cmp
mov
out
stos
dec
xor
inc
cmp
push
inc
jnp
aam
les
xor
out
pop
and
repz
notl
jo
rorb
cltd
add
cmpsl
inc
mov
push
mov
dec
shlb
pop
add
mov
movsl
fiaddl
repz
pop
or
mov
pop
repnz
cmp
loope
notb
int3
pop
nop
inc
movsl
ljmp
data16
ljmp
sub
add
xchg
rcll
mov
lds
inc
in
add
push
inc
push
xchg
leave
leave
movsl
dec
je
xor
dec
cmp
mov
xor
xor
jne
lods
xchg
leave
sbb
in
cmp
add
popf
sub
aaa
sarl
pushf
int3
jmp
ret
cmp
pop
add
lret
and
xor
inc
outsb
mov
push
test
or
addr16
divl
stos
dec
cwtl
lea
xor
mov
dec
adc
xor
andl
xor
pop
arpl
jmp
mov
jp
or
into
inc
addr16
or
outsl
mov
cmp
mov
inc
jns
inc
loope
inc
xor
out
mov
enter
aam
inc
jmp
and
add
add
outsb
pushf
andb
push
inc
sahf
cs
and
test
loop
mov
test
int3
ficoms
lock
pop
xchg
insb
scas
les
add
and
mov
scas
add
pop
jne
sbb
or
and
mov
out
sahf
mov
pushf
pusha
inc
inc
mov
mov
psrad
or
sub
das
fwait
xchg
cs
enter
ljmp
test
mov
xlat
lret
nop
jb
arpl
dec
outsb
jns
sahf
and
sub
push
fimull
rolb
jmp
mov
movsl
repz
push
push
test
leave
stos
xor
mov
mov
shll
es
xchg
push
movsl
sub
xor
sub
push
out
mov
mov
mov
mov
sub
dec
and
push
scas
scas
sub
inc
dec
aad
sub
lret
cmp
repnz
mov
int3
out
addl
mov
mov
mov
and
shr
subl
push
xor
cli
hlt
sti
aas
loop
call
pop
mov
imulb
push
pop
and
xlat
sbb
and
test
and
or
sbb
xchg
mov
enter
jl
ret
movb
xor
push
fwait
popa
fwait
jmp
pushf
mov
cltd
push
dec
jns
adc
jbe
in
xchg
in
bound
fs
push
mov
ja
mov
jl
dec
mov
repz
mov
or
ljmp
and
jbe
pop
js
call
jne
pop
fmull
add
mov
sub
cmp
xchg
mov
stc
insb
mov
sbb
jecxz
push
pop
insl
data16
xor
mov
loope
lret
pop
lret
cmp
mov
fwait
mov
pop
xchg
dec
jl
pop
lock
push
pushf
jmp
and
sub
pop
mov
cmp
inc
out
pop
jns
test
pusha
adc
ss
cld
mov
inc
adc
add
rorl
push
aas
sti
jns
ret
addb
push
dec
push
iret
mov
jp
sub
push
push
jle
imul
jecxz
iret
lret
push
aas
push
lret
loop
mov
push
lcall
pop
arpl
repz
fwait
shrl
or
data16
pop
dec
cmc
mov
clc
ret
popa
cmp
test
mov
xorb
push
mov
hlt
mov
in
push
ljmp
push
push
jae
test
fs
push
outsb
jg
jle
not
cmp
stc
dec
in
pop
js
cmp
lret
lret
scas
or
push
es
dec
adc
pop
pusha
lea
adc
adc
stc
pop
fs
xchg
and
fnsave
ret
stc
mov
cld
lock
or
fists
push
out
aaa
xchg
ss
add
out
cld
inc
push
mov
jae
sub
xlat
cmp
adc
or
push
ret
cmp
rcr
inc
fdivp
inc
add
cld
cmp
sbb
pop
outsl
xchg
cmpsb
mov
jge
ret
xor
pop
rol
mov
and
push
js
push
cmp
call
sub
mov
mov
repz
push
cmpsl
pop
sti
sub
mov
and
mov
icebp
jo
fsubs
leave
test
add
dec
xor
dec
xchg
mov
or
or
sbb
xor
stc
clc
inc
cmp
clc
sbb
add
and
mov
aad
aam
jbe
popa
jp
test
pushf
aam
or
cmpsb
stos
mov
mov
enter
pop
fcmovnu
in
lret
jnp
sbb
ret
add
in
dec
daa
mov
push
xlat
popf
fstp
lret
xchg
rorl
ja
fsubrs
mov
inc
mov
xor
adc
lock
or
hlt
mov
pop
lcall
gs
push
lea
xor
push
ret
repz
sub
into
in
jns
mov
ds
cmp
pop
sub
leave
xor
jecxz
mov
sub
test
cltd
cmp
xchg
sub
ds
es
repnz
add
sbb
fisubs
imul
mov
clc
add
mov
sbb
jo
ds
dec
sbb
and
mov
xchg
repnz
negl
loopne
cmp
xchg
ljmp
jnp
sub
or
jno
push
mov
adc
aam
aam
and
call
dec
mov
dec
jg
sub
fbld
sbb
iret
sbb
sub
pop
or
dec
stos
mov
mov
mov
and
je
push
jmp
sub
pop
stos
mov
dec
mov
pop
loope
mov
xchg
nop
and
jns
adc
loopne
or
push
aas
xchg
xchg
sarl
out
fwait
adc
fidivl
mov
push
dec
mov
outsl
ss
mov
ss
clc
shll
inc
mov
jl
dec
fildll
cld
sub
fbstp
dec
pop
mov
jecxz
hlt
lahf
sahf
out
into
xchg
xchg
ds
insl
jns
adc
sarb
outsl
cs
aaa
cmp
jb
arpl
fdivr
xchg
and
pop
icebp
inc
mov
mov
xor
or
dec
fdiv
ds
fcoms
jmp
out
cltd
add
cmp
fsubp
adc
leave
out
stc
and
in
or
xchg
outsl
outsb
hlt
jmp
push
mov
dec
jecxz
lock
imul
outsl
pop
orl
xchg
out
arpl
int
jne
dec
mov
repz
hlt
mov
mov
xor
sbb
dec
outsb
inc
mov
clc
adc
idiv
adc
mov
inc
je
js
movsl
mov
or
out
push
push
jl
aas
insb
xor
mov
pushf
shrb
adc
jp
loop
sbb
scas
lret
hlt
pop
lcall
mov
aaa
mulb
int
mov
inc
sub
pop
mov
inc
out
mov
mov
es
pop
xchg
out
outsl
cwtl
lods
inc
test
push
jno
push
mov
mov
jnp
aaa
stos
in
cmpsb
pop
ror
in
inc
and
std
mov
je
fdivl
icebp
add
int
mov
dec
popf
xor
imul
dec
jmp
mov
xchg
jnp
lret
mov
fisubl
call
jbe
mov
push
in
and
test
pushf
sub
js
mov
scas
das
adc
cmpsl
or
adc
inc
scas
jle
cmp
sbb
aas
leave
mov
mov
lret
and
addb
or
insb
inc
mov
fisubrs
popa
sub
and
std
loope
inc
fbld
das
mov
lods
repz
lods
setl
xchg
and
push
fwait
ret
cmc
lret
mov
mov
mov
jbe
adc
test
daa
jmp
and
cmp
daa
push
adc
cli
cmc
sbb
xchg
jbe
pop
shrb
mov
dec
xor
in
lret
shll
aaa
jns
sbb
and
pusha
dec
add
dec
arpl
inc
sbb
int3
je
sub
xor
xor
jno
and
cmp
push
mov
in
jno
dec
xchg
mov
movsl
in
sbb
icebp
stos
adc
call
lods
jle
roll
cmp
jne
je
outsl
rcrb
popf
ljmp
shll
push
push
dec
or
jmp
and
xor
push
sbb
add
popf
and
add
push
movsb
lahf
cld
aam
fstpl
push
or
xchg
xchg
imul
test
sub
in
inc
inc
test
idivl
push
lods
mov
xchg
inc
sahf
out
subb
push
jp
adc
mov
call
cwtl
out
or
and
dec
ror
cmp
mov
jo
scas
movsl
adc
pop
test
leave
xor
clc
dec
sub
subb
cmp
jno
mov
mov
cmp
fwait
mov
jmp
pop
js
inc
push
sbb
cltd
aaa
fcmovu
popa
push
push
push
push
cmpsl
jge
sahf
lock
xlat
jbe
jmp
mov
pop
aaa
iret
aad
in
xchg
jp
fildl
rorb
xorl
jg
mov
popa
xlat
arpl
sub
xchg
push
gs
mov
daa
adc
ror
adc
idiv
out
jmp
inc
xchg
cmpsl
mov
movsl
inc
dec
js
imul
movsl
or
push
aas
in
aas
jno
mov
and
ds
lods
clc
movsl
adc
je
xor
outsl
cltd
xlat
sub
cmp
es
xadd
or
jl
arpl
mov
lahf
push
and
push
je
hlt
inc
test
and
fs
cmp
aaa
sbb
jnp
inc
daa
cmc
fildll
out
mov
jge
pusha
popl
scas
int
sub
and
pop
orl
and
sti
imul
push
lret
sbb
test
js
test
in
xchg
mov
mov
psadbw
push
pop
ficoml
fidivrl
je
adcb
aad
mov
sarl
inc
jns
xor
sbb
jb
xchg
mov
fcom
mov
loopne
test
cmp
in
xor
sub
insb
add
pop
ret
jg
jno
fldcw
nop
bound
jl
sahf
push
enter
aam
adc
xchg
push
sbb
pop
call
mov
iret
cmpsb
cmc
fwait
aas
dec
stos
loop
jge
enter
mov
adc
add
pop
push
jmp
popf
into
fdivs
mov
jl
jp
xchg
sbb
das
shll
out
xorb
into
or
dec
sub
ficomps
adc
test
mov
leave
sub
icebp
iret
test
mov
out
and
jmp
insl
lahf
fildl
xlat
dec
push
mov
inc
lret
jge
lods
fldl
mov
arpl
fldcw
mov
xchg
sub
sub
iret
mov
ficompl
in
popa
dec
lcall
pop
sti
ret
into
push
lock
js
xorl
cmp
jo
out
xchg
in
stos
mov
add
sahf
dec
and
in
dec
into
mov
popa
shlb
mov
push
inc
jle
sti
mov
xchg
jne
push
sub
sbb
mov
test
mov
stos
cmp
jb
pusha
insl
shlb
call
ret
xlat
enter
xor
movsb
nop
ret
pop
cmp
add
mov
or
pop
push
mov
imul
jne
pop
mov
dec
fcmovne
adc
fnstcw
cmp
pop
jmp
mov
or
jecxz
test
cmp
outsl
cmp
gs
fldcw
and
enter
cmpsl
icebp
imul
xchg
cwtl
xchg
sahf
outsl
jb
and
jns
test
add
and
xchg
push
loopne
ss
fwait
ljmp
insb
out
je
jl
mov
adc
int
fsubl
jge
stc
cmpsb
movsb
mov
inc
divl
adc
cmp
in
into
xchg
test
push
shlb
pop
add
addr16
pop
xchg
sub
lods
push
push
inc
lea
out
xchg
sbb
fldl
xor
outsl
push
out
mov
cmpsb
loope
decb
and
cmp
out
xor
add
aas
lock
scas
xchg
gs
dec
pushf
leave
lret
mov
int
out
push
or
pop
lods
xchg
aaa
rclb
mov
aam
test
ss
sub
in
push
movsl
aam
insl
gs
adc
arpl
jae
fsubrs
pushf
sbb
adc
push
rorb
rclb
je
in
es
pop
add
clc
mov
mov
mov
daa
and
aam
insb
hlt
and
push
xor
rcrb
jnp
add
imul
cmc
std
sbb
in
test
ja
imull
cs
mov
mov
loopne
movsl
out
inc
cmpsl
les
mov
cli
ret
push
cmp
sub
mov
push
xor
add
les
jmp
cs
mov
jae
jecxz
xchg
inc
adc
add
test
jae
fwait
stos
push
arpl
mov
dec
dec
cmp
pop
and
dec
dec
xlat
jle
mov
jno
fcoml
lea
lds
in
loope
push
xchg
fstp
adc
loope
iret
cwtl
test
and
xchg
imul
test
repnz
dec
lods
into
stos
imul
and
inc
repz
bound
mov
mov
int
fsub
leave
mov
mov
adc
inc
pusha
sbb
jbe
xchg
xchg
mov
or
dec
xchg
xor
lahf
sbb
jle
cmpl
shlb
lret
xchg
loopne
pusha
dec
pop
sbb
iret
outsb
mov
jge
inc
xchg
outsb
frstor
pop
sub
in
insl
xor
ret
clc
xchg
xor
insb
or
sub
or
mov
push
jnp
mov
add
jge
and
outsl
hlt
jmp
lods
jae
mov
cli
fnstenv
adc
mov
or
lea
push
call
cmpsl
pop
frstor
outsb
mov
cmp
je
insb
sub
je,pn
adc
sub
cmp
pop
cmp
cmp
ljmp
fnstenv
xor
xchg
stos
lcall
dec
aad
mov
sub
sbb
add
xchg
mov
mov
mov
mov
xchg
js
sbbb
sub
xchg
shrb
mov
loop
and
add
imul
mov
stos
or
out
stos
pop
mov
insl
imul
xlat
fldt
fcmovb
stc
ds
xchg
icebp
insb
call
sbb
into
out
rclb
rcll
push
mov
stos
mov
sbb
or
sub
xchg
fs
scas
repnz
and
xor
popf
adc
cmp
add
jno
in
iret
in
lcall
and
or
pop
cmp
push
adc
cltd
adc
mov
jns
mov
push
mov
lods
rcl
fsubp
push
js
dec
inc
mov
leave
clc
jecxz
out
out
cmp
sbb
sahf
mov
pop
dec
fists
pop
xor
inc
stos
adcl
gs
xchg
jne
and
xchg
lock
jne
dec
ficoms
pusha
into
iret
add
mov
cld
in
out
mov
rcrb
or
inc
addr16
mov
push
popf
les
popf
xchg
xlat
or
xchg
add
cli
lds
jae
stos
jno
dec
push
decl
enter
dec
imul
and
xor
or
sub
movsl
test
pop
xchg
push
repnz
and
iret
lahf
xor
cmp
das
sahf
dec
xchg
cmpsl
push
jb
fistpl
push
insb
fidivs
dec
adc
sub
push
fadds
arpl
cmp
inc
mov
outsl
xchg
cmp
jnp
pop
sahf
aas
dec
int
xor
addr16
mov
push
push
and
popf
in
hlt
and
jmp
add
popa
js
push
scas
clc
dec
xor
mov
fwait
or
inc
leave
xor
or
js
mov
jg
fsub
cltd
sub
jne
into
jne
insb
push
cmp
push
xadd
xor
roll
and
stc
lds
int
mov
adc
pminsw
loopne
jnp
ss
inc
rorb
aas
popf
in
jmp
inc
jbe
mov
and
jecxz
dec
fwait
xchg
mov
and
icebp
xor
bound
jp
mov
mov
cmp
movsl
jmp
cmp
test
inc
lea
imul
sbb
jmp
test
std
imulb
ret
xor
push
orb
jp
pop
adc
mov
inc
dec
cmc
mov
sbb
add
mov
mov
daa
sub
fsub
jecxz
insl
popf
pop
and
pop
shr
inc
push
lea
lods
or
mov
adc
add
jg
js
imul
dec
mov
push
loop
out
ja
test
pusha
dec
addl
add
xchg
and
jae
and
add
jno
rcll
clc
cmp
xor
and
xchg
out
push
and
cs
mov
mov
cmc
pop
fmull
jl
movsl
mov
xor
dec
adc
jge
test
jno
cmp
hlt
sbb
mov
mov
pop
or
test
jb
inc
push
enter
add
jb
repnz
out
mov
leave
aam
mov
sahf
in
cmp
push
imul
xor
jecxz
lret
add
adc
out
push
adcl
xor
aad
push
mov
loop
push
pusha
inc
rol
sbb
lret
dec
std
push
jecxz
call
nop
mov
popl
subl
xchg
in
out
scas
push
xchg
subb
cmp
popa
push
xlat
xlat
ljmp
cmp
and
dec
pop
shr
nop
pop
jecxz
inc
sbb
jns
or
mov
inc
into
or
fs
mov
outsl
aaa
jp
xor
push
dec
mov
mov
repz
pop
pop
cmp
das
dec
push
pop
jns
add
lock
dec
push
repnz
mov
in
add
pop
iret
xor
jbe
repnz
arpl
push
xchg
mov
sub
pushf
jmp
add
mov
inc
stos
mov
mov
cli
jne
jl
xor
imul
sbb
aam
inc
inc
jno
icebp
cmpsb
in
ss
dec
cmp
std
pusha
iret
nop
pop
sub
imul
sub
jne
fwait
imull
push
les
es
xchg
adc
enter
icebp
test
mov
rcrl
aas
push
pop
or
pop
bound
xchg
subb
and
cs
sbb
and
mov
cs
sbb
insl
sbb
push
xlat
arpl
jne
fisubl
test
pop
jno
pop
and
dec
into
gs
mov
sbb
pusha
cmpb
inc
mull
aas
loop
fisubl
notl
jb
xor
sbb
xchg
fmull
movsl
cmp
push
xchg
int
jb
stos
jne
dec
cmpsl
lcall
ret
scas
shll
sbb
mov
mov
jg
addr16
mov
jmp
push
stos
sub
inc
test
and
or
scas
inc
xor
inc
mov
and
sbb
adc
into
stc
scas
jb
in
dec
push
pop
inc
cmp
xor
cmpsl
aad
dec
inc
cwtl
lcall
bound
rcr
adc
adc
bound
or
lahf
adc
xchg
xor
movsb
pop
sahf
repnz
inc
lea
sub
movsl
mov
int
jbe
mov
lds
sbb
in
pop
xor
outsb
ror
lods
xchg
fidivl
je
sarb
stos
in
mov
mov
sbb
stos
xchg
mov
dec
sub
dec
das
stos
xchg
sti
mov
and
jbe
test
dec
mov
jmp
sbb
sub
inc
xchg
and
sbbb
movsb
mov
je
addb
ds
scas
stos
int3
es
pop
idivl
push
sub
or
lds
xor
lahf
inc
cltd
int
sti
idiv
jl
lcall
arpl
js
dec
mov
jns
dec
push
inc
fdivr
rcrb
or
mov
js
sub
jmp
int
movntps
push
shll
nop
mov
xchg
sbb
ja
sub
dec
mov
movsl
aam
sahf
mov
fdiv
mov
jge
sbb
xor
sub
imulb
movsb
lods
xchg
rcrl
jge
mull
lret
in
sub
faddl
adc
test
lea
lods
imul
jmp
fst
push
ficompl
mov
sbb
push
pop
cmc
in
enter
mov
out
xchg
mov
test
mov
xor
mov
cmp
cmp
push
data16
sbb
push
negb
add
lock
or
icebp
dec
stos
push
cwtl
lock
xchg
lret
push
cmpsb
add
and
gs
fs
insl
xchg
xchg
imul
xchg
xchg
fdivs
pop
adc
aam
mov
mov
pop
scas
lahf
and
out
add
fiadds
in
addr16
ja
jl
pop
scas
inc
shrl
jl
fsubrs
test
imul
ss
test
push
xchg
aam
sahf
imul
cmp
out
mov
xor
mov
push
mov
cmpsl
push
ret
mov
idivb
insl
jg
push
jge
lods
lret
push
mov
xlat
pop
insb
sbb
out
nop
xor
xor
arpl
push
mov
cmpsl
in
clc
repz
lods
jae
pop
ret
pop
ret
test
int3
xchg
add
pop
and
dec
in
nop
mov
jns
and
jo
int
pop
fadds
pushf
push
repz
pushf
dec
lods
jno
push
loopne
cltd
ja
or
daa
cmp
fwait
mov
mov
inc
fdivr
jae
mov
stc
jg
repnz
inc
lcall
jns
xor
jbe
rorb
int
jae
insb
out
mov
or
subb
adc
xlat
stc
data16
mov
popa
xchg
jmp
push
xor
and
lods
loopne
or
in
jnp
int
pushf
or
mov
fstpl
sbb
cmp
xchg
push
add
pop
mov
sub
aad
rcll
or
fwait
les
cmp
and
cwtl
sahf
lea
lahf
cmc
sbb
mov
push
pop
mov
dec
lcall
pop
xchg
mov
out
out
mov
test
iret
loope
or
cld
clc
push
xchg
into
xor
jecxz
jae
ror
mov
adc
add
mov
jno
add
pop
sahf
out
xchg
jge
cmp
xchg
les
in
das
cmp
std
mov
pop
shlb
xor
lods
mov
or
test
mov
add
mov
pop
mov
int
mov
push
adcb
or
mov
sub
and
cmp
mov
movsl
lret
fldenv
adc
dec
push
jge
and
or
imul
jno
mov
stos
sub
mov
sub
push
adcb
insb
push
sbbb
divb
push
mov
push
adc
ret
aad
fdivs
leave
sub
mov
sub
fidivrl
inc
mov
scas
fidivrs
sub
mov
sbb
add
xchg
mov
or
sub
mov
xchg
fistpl
sub
dec
loopne
adc
jle
xchg
cmpsb
xor
mov
xchg
jmp
sub
mov
pop
dec
dec
fwait
sub
jnp
sarb
scas
js
mul
sbb
cltd
nop
pop
imul
xchg
pop
test
scas
mov
pop
jmp
loope
jge
inc
flds
cmp
mov
dec
sub
ret
arpl
sbb
xor
inc
mov
mov
sub
xchg
xor
cmp
cmpsb
sahf
mov
push
sub
aad
adc
sti
and
fisubrl
push
je
lds
int3
dec
dec
push
es
gs
mov
out
mov
movzbl
incl
aam
sbb
lahf
mov
add
jecxz
rcrb
mov
inc
bound
xchg
jae
pop
lahf
in
jbe
jae
aad
rcrl
fwait
out
inc
into
ljmp
or
and
jge
stos
adc
cmc
adc
mov
imul
sub
and
jge
mov
xchg
imul
scas
cwtl
repz
int
sti
insb
shll
pop
idivb
imul
mov
jns
jnp
in
inc
lret
and
lret
xor
add
mov
xor
xor
cmp
pop
pop
jge
mov
nop
mov
or
jb
test
jnp
or
repz
and
xchg
xor
mov
add
shl
shll
adc
lcall
ljmp
movsl
xor
pusha
out
inc
popl
push
push
jbe
in
cmp
mov
sbb
sub
xor
xor
fisubrl
xchg
std
lret
pop
fcomps
ret
loopne
cmp
add
mov
adc
fwait
push
sbb
in
pop
rolb
rclb
jbe
scas
mov
mov
cmp
dec
stos
sub
cmp
xor
gs
pop
iret
incb
mov
idivl
daa
mov
lahf
push
mov
inc
xor
pop
sbb
inc
cltd
mov
fisttpl
inc
insl
adc
sbb
repz
out
mov
mov
dec
and
push
sub
mov
pushf
into
hlt
in
pop
pop
add
xor
out
sbb
adc
mov
imul
push
lahf
pop
mov
stos
add
movsl
cmc
test
pop
dec
mov
fnstcw
push
shrl
sbb
aaa
into
lret
jmp
inc
xchg
orl
mov
cmp
sti
fbstp
cs
repnz
xor
xchg
jne
xchg
addb
adc
bound
mov
lahf
icebp
mov
aad
push
and
push
fistpll
push
or
shlb
scas
inc
adc
jnp
mov
inc
push
es
xchg
pop
adc
adc
pop
rcrl
dec
push
je
fs
mov
pop
pop
fwait
push
mov
scas
mov
mov
and
jno
nop
or
hlt
xor
cwtl
jbe
cli
stc
out
mov
cmc
fbstp
sub
mov
and
sbb
repz
push
mov
pop
jae
push
jno
loope
xor
xchg
pop
push
cmpsb
or
clc
jbe
ret
cmp
and
sub
mov
in
popa
andl
cmp
lahf
xchg
test
push
lods
adc
xor
inc
cmpl
out
dec
scas
popf
fs
shl
xor
dec
push
outsb
inc
mov
je
mov
in
imul
mov
xor
adc
or
add
push
in
in
mov
divl
loope
inc
adc
imull
pop
add
andb
cwtl
stc
out
out
mov
je,pt
xchg
jecxz
add
dec
adc
sub
imul
xchg
jb
lods
imull
lcall
aam
lea
mov
mov
stos
popa
cmp
rclb
xchg
sti
pushf
inc
jno
sub
xchg
xor
repz
jnp
ja
jl
popw
cld
jne
leave
mov
mov
sbb
sbb
xchg
push
mov
out
push
xlat
inc
mov
ss
sbb
in
add
ds
mov
cmp
cmp
mov
aas
xor
or
jb
or
aas
rep
push
and
insb
repnz
adc
jmp
ds
cltd
cmc
mov
lret
push
lock
icebp
and
filds
into
inc
inc
mov
into
in
movsl
mov
xchg
insb
xchg
xlat
mov
add
aas
in
out
or
stos
cli
inc
loope
fwait
stos
mov
dec
test
ljmp
test
stos
arpl
adc
test
pop
lods
xchg
mov
lahf
push
pop
xchg
or
stc
mov
call
es
adcl
pop
jge
pop
aam
sbb
js
stos
adc
push
je
xchg
popa
fcomp
inc
xchg
xor
and
mov
movsl
or
fcoms
mov
cmc
andb
je
cmp
dec
iret
das
insl
mov
sti
aam
fs
es
or
inc
push
xchg
push
out
fimull
mov
add
mov
fidivrs
push
test
popa
test
xchg
loop
stos
lahf
sti
sub
jb
pop
loop
sub
shll
adc
clc
jecxz
clc
les
xchg
jne
ficoms
cltd
fcmovnbe
cld
std
mov
ja
mov
fsubrs
fst
inc
lock
mov
xor
std
push
ja
pop
adc
dec
inc
jecxz
je
cltd
xchg
shll
ljmp
fsubr
cmpsl
lods
mov
cmp
into
sbb
pop
adc
sub
mov
repz
mov
addb
push
xchg
fucom
xchg
imul
and
adc
jg
jecxz
shlb
stos
gs
repnz
js
add
xchg
fimuls
mov
dec
lahf
lods
cmp
inc
inc
shl
push
adc
adc
cli
jmp
sbb
in
stc
pop
cmpsb
arpl
gs
leave
ss
clc
test
lret
out
cmpsl
stos
mov
lods
sbb
sarl
outsb
cld
add
xor
mov
sbb
std
fsubrp
add
xor
out
mov
push
mull
in
arpl
and
lds
bnd
mov
xor
mov
lock
bound
pop
out
gs
daa
and
fistpl
scas
test
inc
daa
pop
sbb
mov
pusha
gs
dec
gs
xchg
pop
pop
pushl
test
jmp
inc
fnsave
or
in
xchg
cmpb
leave
daa
mov
int3
daa
xchg
scas
mov
nop
pop
loopne
xchg
aas
loopne
xchg
outsb
inc
add
jb
jns
loop
cld
xchg
or
lods
inc
jo
dec
jbe
movsl
ret
and
out
scas
xchg
cmp
sbb
mov
sub
out
cmp
xlat
sub
sub
xchg
enter
into
repnz
dec
imul
adc
jp
scas
sub
xchg
stos
cmp
andl
add
fidivrl
test
mov
xor
and
sub
and
fisttpll
daa
les
clc
jl
mov
or
leave
mov
or
add
sti
mov
cs
or
aaa
adc
lea
scas
mov
stos
and
test
dec
pop
sbbb
and
sub
sbb
adc
stos
cli
mov
jno
push
imull
push
xchg
std
push
inc
ja
and
lods
push
sub
xor
push
lea
jae
mov
js
add
movl
push
pop
sbb
jnp
bound
inc
outsb
cwtl
inc
mov
cmpsl
nop
aas
movsl
dec
adc
es
lea
pop
das
mov
or
cmp
xor
arpl
lret
dec
sbb
and
out
jle
nop
pop
lock
and
test
dec
fstpt
push
fwait
aaa
xchg
cmp
xchg
mov
pop
inc
add
cmc
adc
fnstcw
cmp
out
push
outsl
dec
fsubs
mov
leave
aas
in
dec
push
pop
mov
or
pushf
push
push
mov
fs
mov
xor
mov
xchg
or
adcl
or
xchg
pop
jae
or
je
mov
xchg
repnz
cmp
adc
adcb
push
cmp
cmc
mov
push
leave
pop
mov
loop
int
sub
and
mov
push
dec
inc
adc
pop
jmp
inc
dec
incb
fwait
dec
push
roll
mov
sbb
rcrb
loop
add
ljmp
stos
mov
rep
push
sti
pop
dec
mov
adc
scas
rclb
pop
inc
jns
movsb
mov
sbb
scas
push
jp
mov
jecxz
inc
inc
add
push
push
mov
pusha
nop
or
mov
dec
jno
and
fcmove
sbb
test
movsl
repz
inc
shr
xchg
dec
insb
sub
mov
adc
out
xchg
sarb
sub
lods
push
outsb
push
add
jle
out
push
fmull
xchg
mov
movsl
imul
jmp
pusha
fdivrl
orl
std
std
push
push
lret
fidivrs
cmpsl
and
aas
push
xbegin
xchg
addr16
in
jb
xchg
xchg
outsb
push
jmp
ret
mov
xlat
inc
lahf
xchg
lods
mov
enter
fwait
or
out
xchg
leave
adc
sbb
nop
ja
sti
out
inc
pop
scas
pop
leave
mov
dec
subl
push
lahf
icebp
fnstcw
repz
mov
fs
pop
mov
and
shl
sub
orl
sub
fstpl
xchg
and
jge
out
fistpll
es
xchg
jae
lock
fwait
arpl
ja
jo
popf
pop
xorl
pop
push
aam
xchg
repz
inc
pop
pop
sbb
cs
dec
inc
icebp
dec
dec
vmovdqa
popf
push
pop
jns
andl
pop
sbbl
xchg
adc
and
icebp
and
mov
maxps
sti
rorb
lds
js
push
mov
stos
pop
ret
ret
icebp
stc
test
mov
imul
imul
pop
sub
fadds
clc
mov
adc
test
cmp
sbb
into
stc
jp
daa
pushf
xchg
jg
push
bsr
aam
sub
xor
mov
loopne
into
or
cltd
cmp
fwait
sub
stc
jp
xor
push
jl
int
loope
in
cmp
mov
pop
dec
adc
inc
lcall
and
pop
pop
subb
pushf
test
dec
adc
xchg
orl
sbb
xchg
xchg
out
mov
sbb
iret
fwait
xor
adc
addr16
or
ss
dec
inc
xor
stc
pop
popf
adc
mov
pop
xchg
stc
js
shlb
ficoml
jae
mov
mov
and
mov
fdivrs
cli
stc
mov
imul
pop
in
repnz
rcr
sbb
pop
lods
popa
dec
dec
mov
out
push
push
jle
inc
shl
fistpll
mov
pop
xchg
mov
out
xor
test
xor
loope
dec
sub
fs
jge
int3
fnstcw
fdivp
sub
add
inc
and
push
jp
push
icebp
jo
daa
adc
xor
ret
lods
loope
sbb
imul
jne
insl
popf
jge
out
arpl
mov
push
mov
lret
int3
outsb
push
in
xchg
jmp
jae
pop
mov
scas
inc
call
outsb
jl
stos
movsb
fnstenv
arpl
dec
pop
sub
adc
xchg
pop
je
sahf
outsb
mov
js
ja
mov
daa
mov
jno
xor
rclb
scas
mov
js
sahf
incl
pop
push
sub
hlt
dec
push
mov
cmpsl
and
sbb
rcl
mov
test
xor
mov
movsb
into
pop
xchg
xor
fsubl
stc
inc
inc
fsubl
or
or
mov
cmpsl
es
ljmp
imul
call
xchg
movsb
arpl
mov
dec
fsubl
pushf
pop
or
pop
inc
xor
mov
add
xor
cmp
dec
fmuls
pop
pop
cmpsb
lods
mov
mov
addl
std
cld
ljmp
data16
jg,pn
xor
mov
lods
pushl
xor
mov
adcb
bound
outsb
orb
addl
lods
adc
clc
jbe
mov
xchg
test
lret
imul
lahf
mov
ss
xchg
or
movsl
call
mov
lret
jne
mov
xor
rolb
in
dec
cwtl
divl
das
push
out
inc
jp
andb
psrlq
arpl
sub
pop
mov
and
sub
mov
call
sub
inc
adc
cmp
mov
pop
fwait
dec
movl
ja
test
pop
inc
fcomps
cmp
mov
mov
test
fprem1
mov
outsl
rol
xor
push
addl
test
sbb
jmp
jbe
mov
dec
fiaddl
sub
push
test
adc
jl
adc
push
mov
ljmp
push
xor
sub
sub
add
mov
push
in
fisubrs
dec
cmp
in
push
sub
les
in
cwtl
ja
in
pop
sbb
call
in
mov
mov
stos
and
push
mov
cmp
dec
ret
mov
ret
out
sbb
cltd
arpl
ds
and
sub
mov
jb
and
jns
push
push
mov
imulb
shlb
sbb
pusha
les
push
mov
fs
push
mov
xchg
imul
and
sbb
cmp
sbb
xor
adc
cld
mov
xor
push
aaa
insb
imul
loopne
sub
out
fcmovnu
hlt
dec
lods
dec
mov
adc
inc
mov
gs
jno
cmp
les
add
cwtl
adc
lea
fdivs
jp
inc
popf
icebp
imul
mov
das
xchg
ss
sbb
pop
mov
jmp
and
jbe
sar
cmp
sub
fisttpll
dec
repz
faddl
loopne
sub
aaa
mov
pop
in
push
push
repnz
jp
insb
out
jp
mov
sahf
fnstsw
lahf
insl
adc
movsl
and
jnp
call
cmpsl
stos
loope
cwtl
shl
stos
icebp
aam
outsl
sbb
enter
test
lahf
push
sub
cmp
mov
pop
ja
xor
inc
sub
jle
cmp
jp
aaa
movsb
out
xor
lea
iret
fsubl
mov
shrl
mov
lret
add
xchg
shlb
das
push
loop
mov
fmul
mov
andb
push
fidivl
pushf
hlt
xchg
xlat
outsl
insl
push
lods
out
xor
fcmovne
inc
jge
cmc
les
adc
cmc
jle
or
xchg
stos
lds
jle
push
sbb
push
mov
mov
adc
test
hlt
addb
and
jbe
filds
inc
jg
sbb
push
adc
in
mov
pop
test
sub
popa
cwtl
pop
add
xchg
and
dec
je
cli
xor
jnp
aaa
jge
and
sub
pop
or
pushf
xchg
pop
or
push
pop
int
aas
and
popa
cld
push
adc
inc
adcb
inc
sub
cli
imul
sub
add
inc
mov
push
or
add
cmp
push
clc
push
daa
fbld
ja
mov
and
jmp
fldenv
das
sub
orl
adc
push
test
dec
push
jne
jbe
cmp
lods
loope
push
test
lods
xchg
jno
dec
push
inc
xchg
movsb
dec
scas
cmp
pushf
outsl
cmp
fnstenv
out
lret
pusha
adc
dec
loope
ss
in
pushf
pop
lods
cmp
mov
testl
jmp
jbe
xchg
imul
dec
fldl
or
xchg
add
aas
pcmpeqd
xchg
mov
add
iret
or
cmp
pop
xlat
xchg
mov
inc
jbe
lea
dec
xorb
movsb
jg
dec
mov
cltd
mov
push
add
push
imul
icebp
ja
out
movb
dec
sahf
mov
xchg
pusha
or
dec
pop
pop
pop
push
mov
jo
clc
and
mov
dec
aam
insl
dec
or
pushf
jge
out
cwtl
pop
sbb
or
popf
das
icebp
mov
xlat
insb
and
xchg
lods
mov
dec
testb
push
cmpsl
sub
cmpl
jp
xlat
aam
pop
nop
in
int3
jmp
mov
jp
push
pop
lea
out
dec
lods
push
int
lea
xchg
cs
mov
mov
stc
jecxz
mov
lcall
leave
xlat
repz
and
cwtl
add
notb
push
daa
sahf
mov
ds
add
cmp
fcomps
push
dec
repz
sbb
mov
call
sbb
xchg
cltd
jmp
and
js
scas
or
stc
jnp
dec
into
cli
push
out
dec
mov
addr16
sub
inc
sub
sarb
es
enter
mov
push
dec
pop
pop
adc
movsb
movsl
inc
inc
jp
inc
mov
out
enter
xchg
insl
clc
movsl
out
stos
pop
sub
cmp
or
cld
lahf
ret
mov
and
lods
pop
xchg
adc
push
xchg
lods
push
das
mov
cmpsb
icebp
and
out
dec
cli
out
cs
enter
jno
movsb
xor
and
js
pop
cmp
and
cltd
loop
jae
in
and
mov
lock
ret
rolb
pop
xor
cwtl
mov
negl
movsb
imul
lcall
pop
call
loop
lods
in
cmpsb
out
pop
sub
pop
mov
rorb
dec
push
test
push
xor
movsl
int3
jo
xchg
sub
or
ret
test
mov
xchg
pop
adc
or
jmp
ret
or
pop
dec
push
imul
dec
mov
push
xchg
daa
add
add
js
jno
shll
push
jnp
test
mov
bound
xchg
xchg
add
test
adc
ret
cmp
rorb
fdivp
nop
aaa
add
inc
xor
push
mov
aad
incb
xchg
inc
das
jle
dec
jbe
inc
loope
mov
fidivl
addr16
leave
lock
sarb
inc
mov
mov
inc
scas
leave
daa
lea
daa
pop
stos
cmp
sahf
fldenv
popa
call
out
psrad
ja
add
jns
je
test
dec
jo
test
cmpb
lds
xor
stc
cltd
adc
xchg
js
movsl
xchg
incl
sti
scas
push
popf
ret
lcall
lods
xlat
xchg
in
xchg
scas
int3
mov
add
loop
loop
inc
test
std
aam
ljmp
scas
xor
or
les
jne
fwait
dec
mov
mov
jp
loopne
or
jae
test
or
mull
mov
add
lds
pop
scas
in
add
mov
ret
lret
sbb
lcall
ror
cltd
lretw
mov
and
icebp
in
mov
in
les
inc
stos
jb
call
dec
loopne
in
xor
imul
pusha
ret
jmp
push
mov
adc
sbbb
add
jle
adc
in
sbb
ss
repz
in
cld
adc
lods
mov
aaa
mov
inc
push
cmc
gs
pop
xor
shl
int3
mov
mov
adc
out
add
xchg
jb
pusha
sub
les
stc
int
in
xchg
xor
pop
sbb
repz
mov
nop
pop
movsl
or
sbb
gs
into
xlat
inc
aad
aam
mov
jle
lret
lret
out
lods
or
mov
mov
aad
out
loopne
cmp
xchg
inc
ret
arpl
imul
icebp
fadd
xor
mov
cltd
scas
xor
push
in
icebp
xchg
fidivs
jno
cmp
mov
repz
ss
movsb
dec
out
inc
outsb
push
inc
into
daa
imul
push
inc
push
add
bnd
data16
insb
or
or
inc
jae
lods
int
mov
sbb
jg
xchg
xor
inc
inc
sub
pop
mov
xlat
stos
cmp
adc
cmpsb
jg
xlat
mov
out
movsb
sub
add
dec
and
pop
mov
fs
outsb
sub
xchg
pop
imul
outsb
and
dec
xor
sahf
push
mov
cli
mov
push
lahf
lret
hlt
xchg
inc
mov
push
jbe
adc
stos
pop
fstpl
jmp
adc
push
mov
push
xchg
ret
lcall
fbstp
and
in
repz
mov
test
and
or
mov
xchg
cmc
daa
rcll
add
pop
lea
fisttps
pop
cltd
adc
dec
enter
pop
jns
pop
xorl
into
jo
mov
push
imul
out
adc
ja
xchg
inc
adc
xchg
push
inc
int3
outsb
shl
pop
jg
mov
or
jbe
push
and
xchg
sbb
inc
and
cmpb
int3
add
jnp
mov
enter
out
xlat
stos
dec
testl
ds
inc
test
dec
iret
sti
add
jle
sar
dec
icebp
mov
cmp
inc
rclb
lahf
mov
jnp
push
insb
push
mov
stc
sbb
jecxz
jno
mov
cmpsl
movsl
cmp
xor
inc
inc
sub
xor
filds
mov
cmp
gs
cli
pop
cmc
mov
mov
fs
and
jmp
pop
in
mov
add
shrl
xchg
xor
fmul
xlat
mov
data16
movl
or
jmp
hlt
pop
cltd
push
cmp
mov
fiadds
mov
test
sub
dec
cmp
pop
in
scas
add
pushf
and
add
out
push
mov
inc
int3
jnp
inc
pop
loop
push
cmp
imul
movsb
dec
sbb
dec
pop
popf
or
mov
clc
xor
repnz
xchg
push
xchg
pushf
ja
outsb
and
loop
out
adc
mov
xor
or
outsb
push
ljmp
stos
shrl
sahf
dec
xchg
arpl
xor
insb
cmpsb
lea
fstpt
xor
fistl
outsl
out
mov
jle
test
lock
jbe
mov
sbb
lock
push
fadd
jmp
cwtl
pop
cmpsl
mov
and
stc
loope
xchg
repz
or
lahf
aas
sbb
jne
xor
pop
pop
repz
push
lock
incl
jl
fmuls
int
jp
mov
repz
xor
daa
std
arpl
dec
sbb
je
and
int3
inc
fs
fists
dec
xchg
sub
sbb
popa
scas
pop
scas
hlt
dec
sahf
push
add
pop
movsb
add
mov
sub
out
cmp
subl
xorl
dec
daa
xor
pop
ss
inc
push
lret
cmp
int3
addr16
push
insb
imul
sbb
mov
outsb
push
dec
es
pop
dec
test
mov
lds
es
cmp
dec
in
mov
adc
lods
push
xlat
sbb
pop
adcb
mov
add
idivl
mov
inc
aam
dec
pop
jns
push
loope
pop
mov
pop
cmp
js
ss
push
loope
pop
cltd
inc
stc
fnstenv
mov
push
mov
aaa
push
aaa
inc
fwait
lcall
in
or
notl
adc
pop
nop
or
shll
xorl
fcomps
mov
mov
sub
inc
and
outsb
and
sub
das
inc
jns
fdivl
bnd
enter
lret
inc
sarl
inc
dec
push
jge
jne
pop
push
jmp
mull
sbb
rcr
jae
cmp
xchg
fs
arpl
jg
or
enter
hlt
or
pop
jl
sub
nop
lods
test
imul
xchg
push
mov
xchg
cmp
jg
jg
lahf
daa
xor
push
sub
cmp
jne
leave
rorb
jno
daa
or
dec
cmp
jle
inc
adc
xor
xchg
cltd
cld
and
xor
mov
xor
fbld
xchg
mov
push
faddl
movsl
mov
adcl
dec
mov
lcall
popa
sbb
ret
shl
adc
and
push
ljmp
inc
fadds
or
xchg
push
adc
xor
cmpsb
cwtl
loop
xchg
lds
repnz
cmpsl
or
xchg
jle
lea
mov
push
repnz
stos
push
inc
pop
pop
mov
jnp
push
pop
daa
fdiv
pushf
pushf
dec
pop
jmp
roll
gs
and
sbbl
push
out
and
enter
pop
scas
in
xchg
js
and
inc
cmc
sub
fildll
mov
in
mov
popf
into
mov
adc
clc
das
push
mov
aaa
mov
ffree
cmp
add
adc
mov
jp
xor
mov
inc
inc
pop
mov
sub
push
jns,pn
in
dec
lret
mov
mov
mov
fstl
fnclex
ja
dec
push
sbb
test
lods
sub
jbe
ljmp
les
xor
xchg
xchg
mov
push
ja
fildl
xchg
push
mov
call
cmpsl
mov
cmp
fisttpll
jne
je
lcall
mov
mov
xchg
ret
repz
lods
arpl
or
jmp
pop
cmp
and
mov
mov
mov
sbb
enter
inc
push
xor
pop
jb
lahf
jg,pn
adc
push
sub
mov
sahf
mov
rclb
jne
stc
xchg
or
xchg
enter
lret
cmp
and
adc
imul
lock
or
fistps
inc
lahf
aam
aad
ss
dec
adc
add
fwait
loop
lock
push
in
add
movsb
adcl
push
jnp
mov
jmp
cs
push
leave
mov
adc
rol
ljmp
sub
pop
repz
test
les
sub
mov
sbb
dec
test
lds
test
mov
stc
mov
std
lods
aam
sahf
push
in
sub
or
ud1
outsl
or
pop
loope
sub
pop
pop
lea
dec
sbb
lds
mov
enter
mov
push
lret
fstpl
xchg
notb
js
addr16
add
cmp
push
std
ja
push
sbb
sub
frstor
cld
scas
fs
loopne
or
mov
mov
jbe
pushf
fbld
cmp
ljmp
pop
sub
out
add
pop
loope
jmp
icebp
repnz
mov
xor
popa
mov
xchg
inc
push
popa
inc
adc
dec
mov
xor
jae
adc
fsubr
lods
aas
dec
or
test
lret
into
push
bnd
xchg
rcl
jmp
and
insl
push
ljmp
jbe
or
leave
jbe
in
jnp
mov
lods
sbb
lea
xchg
xor
add
inc
in
out
xor
or
dec
movsl
filds
push
fwait
movsl
stos
std
std
xor
mov
movsl
pop
ret
dec
iret
add
inc
out
push
inc
rorl
fbld
mov
fsubs
cld
cmc
xchg
jecxz
lods
adc
cmpsb
jmp
arpl
mov
mov
lret
adc
push
fsts
dec
jl
fdivs
inc
or
sub
fcomip
mov
flds
cmpsl
lods
push
insl
aas
jnp
hlt
mov
pop
out
fimuls
add
mov
icebp
add
dec
shrb
pop
inc
arpl
and
push
mov
cmp
ss
insl
fistps
and
push
jmp
dec
pop
out
jge
mov
cmpsl
aad
fidivrl
sub
adc
lret
and
lcall
js
xchg
in
arpl
in
sbb
push
jg
insl
cld
or
push
js
adc
inc
addb
mov
inc
or
leave
xor
js
loop
dec
in
sub
jmp
je
and
xor
jle
mov
loop
icebp
push
cmpsb
pop
pop
jns
dec
int3
xor
push
and
jno
xchg
or
aam
sti
dec
cmp
test
cli
aam
aas
push
pusha
inc
or
daa
fdecstp
cmp
shll
fsts
or
repnz
cs
push
dec
inc
test
jge
data16
lods
cmp
cmp
sub
jae
dec
or
cmp
out
dec
jle
stc
sbb
ret
jb
inc
cmpb
mov
outsl
jne
jp
xlat
push
fst
mov
pop
outsb
lcall
hlt
leave
xor
dec
sub
mov
daa
sarb
insb
sub
sub
pop
ret
lret
notb
mov
sbb
dec
fdivs
ja
loop
push
or
ss
mov
push
shrl
xlat
in
dec
lds
rorl
test
out
outsb
jecxz
es
in
lea
stos
add
loop
sbb
lea
gs
popa
and
scas
and
popa
iret
pop
shrl
bound
lods
icebp
add
pop
cmp
mov
out
outsb
je
stc
and
mov
inc
pop
lret
add
lret
xor
cld
jecxz
mov
xchg
sbb
xor
mov
jo
adc
cwtl
jmp
adc
mov
lret
jae
cs
lcall
xor
adc
dec
popf
xor
sub
popf
sbb
mov
and
sti
mov
xor
lcall
push
mov
dec
mov
int3
or
addr16
movsl
fbstp
mov
jns
pusha
inc
inc
shlb
sub
push
fwait
outsl
sub
pop
adc
and
jbe
cmp
xorl
and
fisubrl
int
out
repnz
call
add
ss
jmp
jne
loop
mov
cld
xchg
push
pop
sti
ss
int
in
push
repnz
jns
popf
xchg
dec
decb
movsl
cmp
stc
movsb
js
mov
test
sub
push
inc
mov
mov
sar
mov
dec
push
bound
mov
pop
mov
test
std
enter
dec
loope
jne
mov
sub
lock
sar
shrb
add
cmc
adc
ret
fdivrs
les
pop
fnstsw
sub
das
mov
push
fimuls
ss
sbb
je
pop
adc
std
jns
cmc
out
sti
push
repnz
mov
insl
dec
adc
mov
mov
popa
xor
push
rorb
daa
pop
xchg
outsl
sbb
icebp
inc
mov
ffreep
adc
xchg
bnd
cmpsb
jg
push
jnp
adc
in
fwait
repnz
sbb
ficompl
outsl
mov
lret
add
add
mov
push
inc
dec
add
inc
push
ficoms
int
mov
inc
and
movsb
cmp
dec
push
lret
mov
mov
in
jp
sbb
int
test
dec
cld
mov
and
dec
mov
push
mov
cmp
int3
sbb
ret
adc
popa
je
mov
push
dec
push
jae
xchg
mov
sbb
dec
test
aas
jl,pn
ss
adc
pushf
into
mov
rcrl
ljmp
test
in
or
xchg
push
jg
insl
jb
insl
jmp
int
jg
inc
out
sbb
outsl
outsb
lock
mov
mov
dec
out
pushf
leave
filds
dec
data16
jle
std
loopne
ja
jmp
xchg
jecxz
sub
addr16
mov
out
mov
mov
scas
popa
lcall
int3
xchg
inc
mov
jecxz
and
jl
ret
sub
and
mov
push
mov
pop
lahf
adc
in
es
push
fldenv
outsb
cltd
loope
ret
arpl
mov
inc
repnz
push
pusha
mov
or
cltd
mov
int
and
es
ljmp
jo
mov
xor
push
jp
ret
sbb
lods
xor
popf
aaa
mov
fcmovbe
imul
icebp
xor
cmc
sub
pop
out
push
xchg
mov
cmpl
adc
pop
or
int3
add
sarb
or
lds
xor
lds
dec
sbb
cmp
js
mov
mov
psllq
cmp
lcall
push
testb
or
enter
xchg
sub
insb
test
int
push
test
sbb
pop
cmc
aam
xchg
out
inc
jbe
push
lock
cwtl
mov
fs
je
pop
jle
jb
enter
mov
xchg
or
push
xchg
jge
movsb
add
call
fildl
pop
aaa
mov
arpl
imul
das
dec
jecxz
lods
leave
mov
adc
orl
mov
lods
or
mov
or
mov
or
movsl
inc
mov
xor
fstpl
or
cmp
pop
pop
jnp
fwait
jle
jbe
cmpsl
lock
lret
pop
pop
inc
mov
ds
inc
insb
icebp
mov
jns
jecxz
lock
rorb
xor
lret
push
fldl
xchg
lahf
pop
lcall
inc
mov
sbbb
fisttpll
jnp
lahf
bound
out
lock
jle
nop
ds
scas
iret
cmp
mov
mov
lods
scas
mov
lds
in
iret
sbb
mov
fs
out
pop
and
ss
inc
push
xor
ror
inc
or
lods
cli
les
ljmp
out
das
test
cmc
loopne
rcll
or
popa
push
or
and
je
push
gs
imul
adc
jmp
lret
fstps
pop
and
mov
lods
mov
pop
ja
cmpsb
insl
push
dec
out
jmp
mov
je
mov
iret
mov
outsl
mov
stos
push
sbb
or
popf
lock
jle
rcrl
sbb
push
ret
cmpsl
cmp
loop
insl
insl
jle
mov
faddp
lods
xchg
jbe
push
pop
test
sub
rorb
cmp
sahf
or
mov
push
dec
and
add
ret
insb
jg
xchg
push
scas
xchg
sub
fwait
pop
mov
push
add
jno
faddp
cmpsl
in
test
or
pop
hlt
adc
dec
pop
les
in
mov
mov
les
add
in
sbb
cmp
add
pushf
test
pfrsqrt
jnp
adc
repz
pusha
ficompl
enter
xchg
sub
jp
dec
negl
scas
or
jae
mov
mov
lcall
xchg
xchg
push
add
push
push
sarl
jo
xor
xchg
add
std
lock
sbb
inc
sbb
fsts
push
mov
xor
pop
out
and
pop
push
push
xchg
repz
daa
mov
shrb
fs
sahf
mov
and
jne
xor
loope
sbb
mov
mov
cmp
out
mov
rcll
mov
add
shlb
mov
out
inc
pop
mov
fcmove
jmp
sub
in
push
std
cmp
call
mov
push
test
and
mov
mov
sub
push
jne
int
xchg
xchg
adc
out
lock
jmp
and
es
loopne
es
jmp
push
les
cmp
push
movsl
jnp
sbb
lret
in
std
add
pop
mov
jmp
push
movsb
push
dec
sub
imul
and
push
jbe
and
inc
mov
insb
pop
jns
xor
dec
push
ja
lea
jp
int3
shr
xchg
pop
xchg
outsb
add
cli
fildl
xorb
call
push
loope
ret
inc
or
out
repnz
je
mov
adc
push
push
mov
pop
cmc
mov
notb
lods
cmpsb
and
mov
xchg
adc
adc
mov
clc
and
fisubrs
add
mov
aas
push
ja
sub
or
push
push
fldl
sbb
and
adc
pop
and
orl
mov
cmp
jnp
gs
cmpsl
inc
or
mov
icebp
ret
push
rorl
call
test
sti
xor
push
les
fisubl
xchg
jbe
or
fimull
sub
imul
jbe
stos
xchg
dec
cmpsb
mov
loope
in
aam
in
push
daa
push
jmp
push
sbb
mov
jo
addr16
jmp
jmp
inc
or
sbb
and
mov
dec
paddusw
inc
xchg
leave
cmp
jl
add
sub
or
icebp
loopne
jbe
das
arpl
cmp
lahf
mov
mov
cmpsb
xchg
lea
cmp
movsl
sub
int3
mov
out
es
mov
aam
xchg
dec
inc
jmp
shlb
pop
pop
mov
nop
jg
dec
cwtl
pushf
aam
add
push
push
mov
push
mov
and
sbb
pop
push
push
xchg
pop
ficompl
aas
inc
and
data16
and
popa
stos
mov
movsb
insl
inc
sar
push
gs
test
jle
movsl
lock
cmpsl
add
push
xor
mov
pusha
and
es
pop
bound
sub
popf
aad
in
xor
cmc
mov
enter
aaa
adc
fcomp
xchg
cmpsb
push
jle
mov
mov
mov
xchg
pusha
out
jge
inc
das
xor
fdivrs
daa
and
jbe
jmp
jl
in
pop
lea
xchg
cs
adc
lea
sbb
pop
mov
pop
fidivrl
rcl
imul
pop
arpl
add
outsb
add
mov
dec
and
sti
je
sahf
xchg
and
shll
or
rorb
sbb
ljmp
loop
int3
loope
mov
fsubrp
or
and
sub
jo
inc
jl
dec
loope
leave
std
ljmp
mov
mov
xlat
nop
push
fisttps
push
jbe
xchg
adc
fdiv
adc
mov
jmp
add
nop
int
orl
sub
add
sub
lds
aas
lock
mov
ljmp
loop
xchg
cld
or
shl
das
mov
movsb
cmp
add
scas
push
popf
js
pop
loop
xor
add
pop
sbb
inc
push
cmp
fistpl
inc
xchg
adc
mov
mov
adc
mov
pop
or
cmp
int
xchg
mov
mov
jle
mov
push
push
test
ret
daa
sub
dec
mov
rsm
or
mov
add
insb
xor
lods
inc
push
jb
jmp
loopne
sbb
cltd
mov
push
jecxz
cwtl
lods
std
dec
enter
hlt
pop
dec
xor
push
cmp
and
outsb
mov
cli
sub
or
cmpsl
xchg
adc
fmull
inc
adc
rorl
push
xlat
in
mov
cmpsl
and
xchg
shr
pop
pop
test
add
in
sbb
and
addl
out
add
outsb
mov
xor
xor
jl
sub
xchg
add
sbb
cmp
sub
push
aam
sbb
cmc
adc
repz
fbld
sahf
ficoms
shlb
jbe
cli
ljmp
dec
jecxz
movsb
push
ss
shlb
leave
xor
test
fisubrs
cmp
lods
add
xchg
mov
and
pop
jecxz
out
push
xor
mov
xor
fisubrs
test
push
pop
xchg
filds
jb
xor
fwait
pop
pop
or
ja
into
or
xor
cmp
in
mov
xor
rcrb
pop
inc
and
daa
iret
inc
nop
mov
fsts
inc
mov
mov
das
and
push
and
dec
cwtl
fiadds
lret
test
cmpsb
mov
xchg
inc
xor
gs
mov
lods
jle
inc
neg
inc
or
jnp
mov
xchg
lahf
lret
shlb
mov
lock
pop
mov
inc
mov
dec
out
sti
or
jno
out
inc
mov
xor
idivb
cmp
aad
data16
sub
imul
pop
jmp
mov
mov
jnp
inc
sahf
scas
cmp
cmc
ss
fidivrl
push
jmp
sub
pop
pusha
mov
das
imul
js
in
fwait
inc
inc
cmpl
out
jbe
mov
cwtl
lods
jb
cli
and
mov
fs
add
stc
loope
add
cmp
mov
push
in
in
lret
inc
ja
or
bound
lahf
dec
xor
cmp
lods
shlb
fidivs
inc
repz
cmp
test
mov
pusha
iret
fnstcw
push
adc
popa
shrb
ret
test
loope
pop
icebp
jle
hlt
outsb
mov
daa
orb
leave
les
push
idivb
push
testb
inc
jo
loop
dec
pop
bound
or
adc
push
scas
mov
popf
jne
ljmp
jo
and
push
stos
in
loop
mov
orl
or
cli
cmc
sub
xor
int3
push
stos
jne
sub
notl
fwait
sbb
add
inc
push
es
mov
jmp
xchg
push
call
test
xlat
sbb
mov
ud2
inc
jbe
ret
push
pop
scas
or
jns
lahf
mov
out
cmpsb
mov
add
rcrb
mov
out
out
inc
std
lods
das
movsl
dec
lcall
cld
push
jns
lret
out
jl
in
or
pop
test
bound
out
stos
jecxz
push
add
lcall
pop
nop
daa
xchg
jecxz
imul
or
fsubrl
pop
fsubs
outsl
in
cltd
mov
ret
mov
insl
idivb
stos
leave
push
xor
outsl
outsb
pop
jecxz
mov
push
dec
mov
jp
mov
push
aas
jb
adc
jne,pn
push
movsl
sbb
insl
fwait
cmpsl
add
addl
fimull
add
sbb
ja
mov
push
in
mov
sub
and
rolb
pop
mov
les
mov
test
call
mov
add
bsf
inc
mul
iret
sbb
mov
scas
in
adc
aad
dec
inc
add
lcall
aaa
lcall
push
outsl
ss
or
adc
lret
push
mov
daa
repz
sub
daa
jns
repz
add
cmpl
ja
cmp
sahf
cmp
cmp
mov
fldcw
push
daa
repz
dec
pop
sub
and
loop
mov
int3
jbe
push
xchg
aas
dec
in
sahf
mov
fimull
pop
inc
dec
sbb
in
and
outsb
ljmp
xchg
mov
cli
xchg
jnp
push
in
test
sti
xchg
pop
leave
push
sub
or
iret
push
mov
and
into
sub
in
gs
repz
mov
pop
popa
and
pop
mov
imul
divb
scas
fwait
pop
jb
pop
cmp
mov
adc
les
outsb
inc
pop
or
test
cmp
push
jcxz
es
xlat
insl
shll
test
and
outsl
out
push
and
test
lds
push
ds
bound
inc
mov
mov
sbb
stos
and
fnstenv
call
fidivs
adc
mov
jno
mov
fsub
int3
push
xor
mov
xchg
jle
sub
cmpsb
scas
pop
and
ret
call
loop
jmp
dec
movsl
pop
fcmovnb
popa
in
mov
pushf
adc
ficomps
lret
out
and
stos
jne
sbb
out
mov
xor
sub
jmp
push
data16
ja
mov
sti
sub
enter
popf
das
add
mov
je
and
xchg
push
repz
out
out
mov
outsl
out
add
aas
call
cmp
push
not
nop
sub
cmp
shll
loop
sbb
popa
pop
jo
pop
cmc
push
fisttpll
sbb
or
mov
cmpsb
ficompl
jl
sbb
into
lods
addr16
add
popf
mov
pop
xchg
mov
sub
into
jp
mov
push
hlt
push
inc
adc
cmp
leave
cld
movsl
mov
dec
push
push
lret
sub
bnd
fcompl
int3
inc
push
inc
jl
push
sbb
sub
sub
inc
mov
cmp
in
rcrl
lods
xchg
jo,pt
andb
dec
movsb
pop
xchg
test
adc
xor
dec
lods
cmc
mov
repz
shll
jb
push
pop
fmull
shll
out
mov
loopne
push
or
mov
daa
inc
imul
idiv
hlt
mov
dec
push
or
bound
lret
sbb
cmp
sti
jb
das
bnd
mov
out
mov
pop
repnz
imul
aam
sbb
adc
lods
pop
ja
mov
in
scas
and
imul
rep
xor
stc
push
xchg
sub
mov
mov
mov
fwait
sub
gs
fcmovnbe
mov
fnsave
stos
scas
test
icebp
testl
mov
stc
mov
mov
inc
popa
inc
aam
xchg
or
xchg
xchg
lock
sbbl
jo
dec
mov
xchg
js
and
leave
xchg
mov
ret
adc
push
dec
mov
je
lock
shll
jnp
cld
mov
loop
lret
rcl
mov
test
stos
mov
sub
xor
out
add
pop
dec
aas
xchg
cmp
or
arpl
mov
lods
pop
mov
and
aam
imul
jg
bound
lcall
push
int3
clc
push
fcom
sbb
pop
leave
sbb
add
dec
pop
pop
sub
ret
and
xchg
push
and
fldenv
jg
jo
cmpsb
pop
iret
mov
jecxz
sarb
jge
rcl
cmp
in
shl
icebp
ja
js
adc
inc
sbb
testb
aas
ljmp
out
xor
inc
data16
push
aas
fcmovnb
dec
loopne
ja
jae
mov
mov
ljmp
pop
lods
xor
and
push
imul
or
mov
sti
fwait
jp
aas
mov
and
jmp
pop
mov
mov
adc
repz
mov
movsb
add
jo
inc
jle
cmpsb
clc
pop
mov
clc
inc
mov
pop
or
or
daa
add
scas
xchg
inc
add
and
lods
lock
push
icebp
leave
jg
stc
add
xchg
arpl
xchg
roll
movsb
testb
jge
sbb
mov
movsb
je
pop
adc
ret
data16
ja
js
cli
scas
pop
or
adc
jb
or
cmpsl
loopne
jge
or
fxtract
pusha
fwait
inc
stos
pop
das
xor
ud2
fbld
sub
mov
je
xor
repnz
cmp
cli
mov
xchg
pop
push
test
aam
push
sti
ss
xlat
divl
jo
xchg
lods
insl
cmpsl
push
adc
xor
aad
cli
mov
mov
popf
and
fs
mov
lret
das
xchg
fdivs
lods
out
test
loop
shlb
cltd
mov
stc
lret
fs
cmp
je
ret
inc
pop
mov
sahf
lret
sub
and
das
arpl
mov
sub
daa
stc
xor
jbe
jle
int3
shlb
arpl
mov
movsb
mov
sbb
aas
sbb
popf
and
movsb
cmp
loope
das
iret
xchg
xchg
xor
pop
xor
jp
imul
jecxz
stos
jno
jge
mov
loopne
add
test
pop
xor
or
shll
dec
mov
inc
divb
aam
into
lea
sub
daa
nop
pop
sbb
mov
or
mov
arpl
xchg
adc
insb
ds
xchg
sub
add
mov
aas
dec
push
lods
jae
cmpsb
sub
cwtl
and
pop
push
mov
mov
or
fneni(8087
and
sbb
aas
je
xchg
into
and
leave
data16
add
fnstcw
push
test
icebp
test
rcll
mov
ret
mov
mov
aam
mov
int
call
push
pop
dec
xor
stos
aaa
mov
and
mov
lcall
imul
mov
xchg
fcomp
mov
lea
add
int
mov
call
pushf
push
cmp
pop
xor
shlb
in
fwait
out
fs
mov
dec
sub
xchg
test
aam
lret
xchg
cmc
pop
int
pop
sbb
ret
js
arpl
mov
inc
mov
daa
repz
dec
jae
jbe
mov
icebp
stos
stos
mov
test
test
in
sub
mov
call
pop
pop
push
rorb
pop
mov
aad
inc
pop
out
mov
mov
jne
and
testl
addr16
or
mov
add
lods
ja
mov
mov
loop
xchg
mov
sbb
mov
and
and
je
and
xchg
in
imul
cwtl
bound
lcall
lahf
and
int
mov
ret
or
ljmp
fs
mov
inc
ja
jne
sub
xchg
aaa
add
ficompl
repz
movsb
into
push
jae
in
je
xchg
aad
ret
inc
cmp
inc
dec
cmpsb
in
inc
xlat
push
dec
test
in
mov
jns
out
push
pop
mov
add
sbb
adc
ret
fwait
push
stos
pop
shll
stc
dec
dec
scas
mov
mov
stos
adc
sbbb
sahf
leave
mov
pushf
push
cmp
repz
test
inc
mov
mov
enter
test
out
aam
mov
aam
pop
jmp
jmp
in
add
jo
mov
jg
fdivs
mov
xchg
xchg
jmp
sub
aaa
adc
aaa
mov
aas
jbe
out
movl
imul
cmp
lcall
inc
out
outsb
hlt
hlt
adc
mov
pop
pop
push
test
jns
addr16
in
rcrb
jp
mov
fcmovnu
push
sub
mov
lcall
pop
mov
imul
dec
xchg
sub
lds
stos
adc
addb
jo
pop
out
lds
mov
push
pop
data16
xor
icebp
jo
push
lret
jl
js
inc
jbe
icebp
mov
or
test
xchg
xchg
into
mov
xchg
jmp
fimuls
cmc
lcall
test
fisubrs
mov
aam
add
pusha
das
enter
xor
test
sub
cmpsl
jl
sar
js
call
push
aas
arpl
adc
or
mov
pusha
aaa
mov
les
outsb
aaa
cmpsl
and
mov
xchg
mov
nop
cmp
jecxz
test
rcrb
mov
lret
jno
mov
fs
out
movsb
sbb
sbb
mov
dec
call
or
xor
int
mov
cmc
rcrl
dec
das
ss
mov
in
int3
and
xor
js
cmp
push
push
cmpsl
leave
std
addr16
xlat
mov
es
cmc
or
adc
hlt
pop
xchg
pop
or
or
int
out
jg
or
push
adc
inc
add
or
lds
xchg
mov
xchg
out
pop
or
inc
inc
subb
out
xor
cltd
push
mov
hlt
lea
mov
ret
inc
xchg
xor
lods
push
loopne
xchg
cmc
mov
pop
cld
bnd
andb
stc
push
inc
cld
pop
jecxz
dec
mov
sub
xor
sub
test
aas
std
sbb
rcll
mov
xchg
sarl
cld
insb
in
fwait
stc
xor
dec
loop
nop
int3
xor
dec
stc
jecxz
aad
pop
xor
mov
cmp
push
pop
in
stc
ja
outsl
test
and
popf
pop
movb
jmp
scas
lcall
sub
xor
cli
dec
dec
lahf
bound
sub
test
test
cltd
sub
mov
mov
lds
pusha
repz
mov
jae
pop
sbb
or
testb
push
adc
dec
mov
cmp
push
xor
mov
lret
test
fisttpl
adc
push
mov
jge
pop
imul
mov
sbb
xchg
cwtl
push
jb
fisttps
repz
adc
xor
inc
aad
sub
xor
fs
cli
xchg
dec
rclb
je
or
inc
lahf
xor
rol
aad
push
jo
mov
and
hlt
lds
lret
pop
iret
dec
negl
in
scas
mov
adc
call
mov
mov
dec
pop
mov
movsb
mov
out
shll
inc
mov
mov
aas
testb
xor
cli
cmp
lods
inc
push
mov
leave
jge
cmp
test
cmpsb
xor
repnz
int
outsl
sbb
mov
out
or
test
sub
jl
mov
or
jl
cli
sub
pop
and
pop
push
mov
and
adc
addl
cmpsb
push
subl
or
mov
jns
mov
fcomps
xchg
add
fcmovne
cli
mov
xchg
int3
aas
fidivrs
cmc
loope,pn
push
push
rcrb
mov
ljmp
popf
sbb
or
outsb
mov
or
xchg
imul
ljmp
inc
cmp
andl
xor
dec
insl
out
jg
in
add
add
xchg
xchg
mov
pop
aad
aad
xor
and
leave
jmp
imul
aad
mov
leave
scas
xor
pusha
xor
or
hlt
add
sub
pop
sub
xchg
ja
out
imul
shlb
movsb
jnp
xor
data16
pop
xorl
pop
push
mov
int3
imul
test
mov
mov
push
mov
repnz
mov
jl
xor
adc
push
scas
stos
sbb
fucomp
mov
fwait
repnz
popa
fiaddl
jnp
in
stos
sub
push
cld
xchg
inc
lcall
in
jbe
pop
es
test
jae
push
inc
push
push
fwait
mov
ss
ffree
mov
xchg
sti
xorl
dec
inc
mov
out
pop
adc
push
mov
aad
int
jb
imul
mov
daa
adc
ficomps
sbb
pop
mov
mov
dec
sub
lret
int3
lahf
ret
add
cmpsb
repz
sarb
sub
sub
arpl
pop
addl
xchg
mov
push
popa
in
lcall
adc
inc
sbb
shlb
xchg
dec
das
mov
pop
push
pop
sahf
aas
aas
xchg
push
jmp
insl
addl
clc
lret
fisttps
cs
xor
in
push
push
fxch
jge
fistps
mov
stos
pop
arpl
fdiv
lock
psllw
push
xor
jns
sbb
jmp
popf
xchg
movsl
jns
mov
adc
jg
sub
cs
fcmovu
mov
mov
inc
sbb
aas
pop
lcall
insl
daa
adc
xchg
sbb
inc
add
inc
icebp
push
popa
mov
insl
lods
gs
and
sarb
dec
pop
sbb
or
and
out
jecxz
adc
dec
jo
xchg
or
dec
cmp
enter
subl
fistpl
scas
push
dec
fst
test
jecxz
fs
pop
fstp
cli
sub
aam
xchg
push
mov
adc
or
loopne
icebp
fisubrs
and
push
xchg
loop
in
and
flds
adc
mov
mov
push
xchg
and
and
push
leave
push
lea
xchg
cmp
rcrl
pop
dec
cli
dec
fisttps
cld
das
fisttps
push
aam
xor
cmp
mov
sti
push
add
ffree
iret
adc
dec
jecxz
pmaddwd
shll
lods
mov
movsb
divl
jb
xchg
mov
mov
pop
jnp
fsts
sahf
dec
push
cld
mov
les
fcoml
scas
xlat
lea
add
mov
jae
xchg
add
std
sbb
test
andb
inc
out
cmc
and
cs
loopne
xlat
pop
daa
xor
adc
sbb
popa
jb
in
loop
add
pop
ficompl
sbb
test
push
and
adc
insl
cltd
subps
xor
push
mov
stos
mov
pop
jecxz
jmp
jle
inc
push
subb
dec
mov
xchg
lret
test
cmp
mov
cltd
xchg
sbb
inc
xchg
adc
loope
and
aaa
sub
shrb
adc
dec
xor
adc
xchg
pop
and
aas
adc
outsb
adc
or
cs
sbbb
sub
dec
lds
push
test
daa
mov
inc
mov
jno
stos
out
lcall
xchg
nop
mov
iret
sahf
aaa
xchg
in
sbb
movsb
loope
xchg
xor
fcmovb
jmp
cmpsb
sub
mov
xor
pop
hlt
in
cmp
loopne
sbb
and
xchg
loopne
and
enter
push
xor
mov
jbe
fmul
pop
dec
mov
aam
fs
or
incl
repnz
pop
inc
aad
xchg
in
shll
mov
mov
inc
adc
jbe
mov
les
add
push
lcall
sub
push
mov
loope
movsl
xor
mov
pop
test
inc
cmc
push
pop
mov
lahf
insl
ja
iret
pop
in
ficompl
push
sbb
in
inc
in
jnp
push
mov
mov
pop
idivb
add
cltd
loope
dec
aam
pop
xchg
or
jmp
ss
mov
mov
mov
ss
jge
stos
int3
dec
cmp
push
pop
leave
push
mov
mov
mov
fwait
movsb
xor
insl
pop
dec
sub
add
out
roll
xchg
push
push
push
in
aaa
pop
lcall
and
mov
insb
fnstcw
sbb
or
out
pop
in
addr16
dec
cmp
sbb
mov
or
insb
aam
inc
inc
aas
mov
bound
jl
daa
data16
mov
lcallw
scas
mov
rcll
ret
loop
pcmpeqd
outsl
xor
sbb
xchg
adc
roll
fisubrs
mov
out
mov
imul
ljmp
jmp
movsl
push
data16
ljmp
cltd
cltd
jne
dec
xor
notl
scas
adc
cmp
aam
pusha
imul
loopne
mov
dec
test
cmpsb
rcll
pop
dec
mov
xchg
xchg
out
sti
xchg
out
add
or
adc
fistl
inc
fidivl
adcb
xchg
pop
out
repz
pop
int3
lock
mov
incl
fwait
xchg
arpl
sti
mov
cmpsl
cwtl
dec
sarb
cs
in
push
xlat
cmp
mov
stos
push
dec
repnz
cmc
frstor
lret
test
cmpsl
adc
je
and
dec
iret
sub
cmp
int3
icebp
stc
fimuls
outsl
jle
push
dec
xor
or
jge
imul
bnd
leave
xchg
pop
adc
ljmp
shr
mov
loopne
mov
or
out
jl
mov
int3
xor
scas
mov
sub
mov
push
lea
jb
sbb
subl
shrb
and
lea
mov
dec
popf
stos
adcl
mov
sub
cmpsl
pslld
adc
dec
sbbb
aas
jmp
fcomi
test
jae
imul
js
add
sarl
dec
cmp
ret
xchg
repnz
push
xchg
push
cmp
js
out
addl
cmp
movsl
mov
iret
push
dec
or
cmpsl
mov
jecxz
adc
xor
xor
and
movsl
dec
add
test
xor
in
adc
and
imulb
out
jns
add
ljmp
flds
or
mov
sbb
mov
lcall
sbb
sub
rol
and
adcl
test
inc
js
pop
pop
aaa
hlt
lods
test
mov
cmpsb
xchg
addb
dec
pop
sub
and
loopne
push
or
jle
notb
popa
mov
pop
pop
mov
and
mov
mov
and
orb
cmpsb
int3
sahf
sub
add
cmp
jnp
in
or
gs
sahf
pushf
aad
pop
mov
test
test
addr16
fisttps
cmpb
lds
aas
addb
lahf
ds
div
pop
repz
mov
mov
or
fisubl
cld
jmp
jb
push
aam
loope
insb
and
xor
rcrl
mov
xchg
out
arpl
aad
repnz
cmp
mov
loopne
sbb
inc
mov
adc
sbb
aad
int
enter
adc
and
adc
out
sahf
lret
jle
add
pop
out
push
sbb
mov
test
aas
outsb
shrl
aaa
adc
iret
mov
loopne
add
mov
leave
and
mov
scas
movsl
xor
mov
cli
sarl
sbb
lcall
mov
test
mov
ss
push
adc
push
or
out
shll
add
call
push
int
dec
std
bound
into
jae
scas
stc
icebp
mov
out
andb
xor
push
inc
xorl
push
fists
test
dec
nop
flds
jl
dec
xor
dec
sub
cmp
lcall
xor
decb
das
adc
paddsb
loopne
into
or
sub
ret
xor
mov
pop
fadds
sbb
sub
sbb
inc
cmp
jle
cmp
mov
es
andl
cmp
ja
xchg
call
adc
leave
sub
aaa
dec
xchg
movsb
in
pop
imul
inc
jo
sub
out
mov
popf
clc
aad
adc
mov
mov
dec
push
jns
int
pop
mov
nop
sbb
pop
xor
mov
dec
fstl
jge
push
xor
jns
fldenv
cmp
outsl
movsl
xor
push
jmp
adc
repz
sarb
test
push
inc
inc
dec
dec
sarb
push
hlt
adc
lahf
out
jbe
and
rcr
mov
inc
das
mov
cmc
call
addr16
and
mov
or
in
mov
fadds
insl
test
xor
xlat
mov
shrb
xor
sub
fiaddl
xchg
lods
mov
jp
sbbb
mov
test
jo
mov
inc
mov
inc
jb
into
inc
sbbb
ret
or
cli
loope
orb
fdiv
bound
std
or
ja
push
mov
inc
stc
mov
testl
unpckhps
movsl
or
sbb
cli
jmp
push
adc
xchg
xor
push
stc
insb
pop
test
add
loop
or
insb
sub
and
mov
sbb
bound
jle
out
iret
xor
or
mov
push
addr16
xor
mov
adc
orl
inc
adc
movsl
rcrl
fists
mov
add
call
xlat
cltd
cmp
mov
and
in
adc
mov
push
pop
adc
sahf
adc
mov
ss
cmp
dec
cltd
test
idiv
and
jecxz
cmpsb
cmp
and
loop
inc
mov
mov
jae
xor
out
xchg
js
pop
lea
sbb
dec
das
jmp
push
addl
xchg
xor
std
test
lcall
lret
inc
xchg
mov
insl
jno
mov
sbb
or
ss
daa
data16
fs
mov
add
mov
test
inc
sub
loop
je
insl
sbb
shll
push
or
scas
stos
add
and
lret
mov
xlat
cmp
cmpsl
cmp
push
sbb
xor
in
test
lock
add
cmpsb
or
sahf
leave
insb
les
in
mov
loopne
mov
vpgatherqd
ret
in
shl
add
inc
les
lods
filds
mov
lea
loop
mov
push
sahf
loope
jl
fsubrl
popf
cltd
ds
push
out
xchg
push
inc
mov
dec
xchg
gs
and
inc
out
push
mov
dec
xchg
mov
pop
clc
data16
scas
lcall
stos
pushf
xchg
mov
xor
fdivrl
lods
inc
push
jns
push
sbb
aaa
cmove
cmp
mov
ret
xor
ljmp
lock
out
ss
xor
rcrl
ja
push
movl
add
in
push
lods
cmp
cmp
inc
int
stos
mov
fdivr
rorb
push
aaa
cli
jl
jp
fwait
mov
adc
hlt
pop
pushf
test
lahf
loope
out
jle
leave
je
aam
add
add
rcr
mov
dec
jne
adc
dec
ret
lret
cli
addr16
pop
sub
sub
fisubl
arpl
idivb
ljmp
sub
xchg
neg
lcall
sub
fsts
push
cwtl
lcall
pop
mov
inc
cmpb
ljmp
shlb
popf
jecxz
lea
enter
jge
mov
pop
fnsave
test
lea
test
xchg
inc
adc
dec
xchg
mov
mov
or
movsb
rcr
test
leave
mov
sbb
mov
and
or
lret
cmpsb
loope
loope
test
pop
in
pusha
int
popa
adc
and
lods
out
ss
out
push
inc
sub
ljmp
shll
jg
fldcw
xlat
scas
test
mov
jg
push
mov
push
mov
lcall
addr16
fidivrl
es
dec
dec
pop
jno
xor
inc
pop
mov
mov
orb
test
mov
inc
xor
sbb
sub
fsubp
pop
fsubrl
popa
inc
out
gs
add
les
jno
push
sbb
nop
idivl
repz
push
pop
adcb
pop
cmpsb
test
mov
jle
push
xor
jae
jne
in
inc
jmp
bound
lea
outsb
ret
sti
mov
cli
lds
sbb
mov
sub
imul
pop
push
arpl
xor
push
mov
add
push
jg
cmpsl
rclb
inc
mulb
in
in
stos
test
push
fwait
add
leave
cmc
sbb
inc
xor
adcl
push
lcall
push
test
adc
dec
iret
jmp
mov
pop
mulb
cmpsl
or
or
testb
inc
dec
lds
popf
adc
mov
mov
clc
mov
and
lret
adc
jne
mov
mov
jmp
mov
dec
adc
push
outsb
scas
xor
pop
sbb
lods
in
cmp
fcos
movsl
push
sub
ret
nop
movsb
and
insl
lcall
jmp
jb
jo
cmp
jae
pop
addr16
jl
pop
out
xor
xchg
outsl
sub
cwtl
adc
out
loop
cld
fiaddl
shll
inc
pop
sbb
cwtl
and
lock
cwtl
pop
test
adc
sbb
jl
int3
inc
mov
bound
dec
push
ret
or
jp
cmpsb
push
adc
cmpb
jle
mov
or
cwtl
jmp
jle
int3
in
fsub
cwtl
aad
ja
mov
or
push
call
mov
lret
stc
aaa
fs
outsb
xchg
sarb
rcll
xlat
xchg
outsl
inc
mov
test
fs
fnstenv
imul
les
jnp
add
popf
pop
xorl
mov
adc
xchg
int3
push
push
iret
mov
mov
add
sub
sahf
dec
xor
in
adc
cld
inc
mov
push
sti
push
mov
test
jmp
inc
lods
shll
xchg
ljmp
or
sti
mov
adc
insb
popf
std
ss
ss
push
cmpsl
lods
fldl
iret
lret
scas
movsl
adc
jbe
jae
fmulp
fbstp
cld
pop
inc
loopne
xchg
lret
cmpsb
xor
inc
daa
scas
cld
push
fldt
xor
lock
pop
inc
rorl
push
mov
stos
push
pop
push
fucomi
sub
iret
cltd
sub
mov
bound
fildl
cmp
negl
loope
mov
jne
aam
pop
pop
xor
cmp
test
adc
inc
inc
fldt
lock
or
cmpl
inc
cmp
loopne
shr
fwait
adc
mov
scas
outsl
xlat
leave
jmp
js
jb
or
test
mov
inc
cmp
mov
dec
rcl
incb
outsl
push
mov
dec
dec
mov
dec
fsubl
push
shlb
pminub
sahf
mov
cwtl
cmp
sub
sbb
fidivs
jl
sbb
fisubrs
xchg
pop
lods
push
jns
in
cmp
mov
rcr
xchg
cli
clc
insb
dec
loop
aad
mov
decb
pop
mov
push
sbb
jb
mov
faddp
andl
pop
icebp
scas
push
hlt
pop
mov
pop
jmp
fsubp
add
sub
jo
jbe
push
inc
cmp
adc
dec
dec
mov
ret
popf
or
daa
sbb
jmp
or
sub
ljmp
mov
xchg
lds
sbb
fisttpl
rorl
and
inc
mov
les
cld
idivl
pop
jg
push
ss
mov
push
xchg
xor
mov
nop
ja
ret
sar
shl
out
stos
xchg
in
push
jmp
pop
push
mov
mov
xor
cmp
ret
pop
sub
xor
outsl
mov
inc
sti
loope
inc
inc
sarl
push
push
cmp
lods
adc
pop
ja
jae
push
das
adc
mov
ss
js
jo
cmp
bound
fstl
sbb
test
loopne
jo
sbb
and
cmp
rorb
je
cmp
movsb
jns
jp
xorb
jbe
jmp
lret
sub
ja
sbb
xor
cmp
pop
jle
sbb
pushf
mov
ljmp
sub
jae
shrl
cmp
cmp
and
xchg
cmp
xchg
loope
jns
cli
push
pop
lret
out
lcall
jno
subb
sbb
sarl
out
ret
bound
cmpl
mov
loope
xor
push
lods
jo
push
stos
inc
dec
clc
jmp
push
xor
out
mov
xor
push
imul
add
xchg
sub
push
adc
sbb
roll
xchg
cld
mov
arpl
dec
push
les
push
lea
je
fdivl
bound
mov
cli
inc
xor
out
sub
sub
fadd
dec
jp
jbe
mov
cmpsl
or
xchg
and
les
pop
fs
test
das
stc
fnstsw
cwtl
loope
push
icebp
jno
adc
cmp
sub
repnz
push
mov
outsl
mov
ret
movsl
sub
mov
jg
xchg
mov
add
fildl
in
jge
pop
xor
leave
xchg
ds
icebp
xchg
or
inc
mov
adc
jnp
pop
rclb
out
je
or
jns
add
pop
and
fsts
adc
ret
mov
into
les
xor
push
add
mov
or
sub
and
lahf
stc
cmp
jne
outsl
jbe
out
cmp
sub
sti
add
sub
ja
dec
std
sub
mov
ss
sbb
adc
lea
xchg
dec
xchg
ss
adc
xchg
cmp
fisubrl
push
hlt
gs
push
insb
xchg
jecxz
and
in
out
mov
inc
jo
mov
pop
xlat
flds
pinsrw
lods
pop
cmpsl
adc
dec
aas
dec
pcmpgtw
xchg
cmpsb
out
bound
cld
pushf
leave
mov
xchg
add
inc
int3
mov
iret
jmp
lods
les
lods
icebp
xchg
cmpsl
imul
into
outsb
adc
push
hlt
ftst
cmp
jp
mov
and
mov
test
lods
pop
stos
fistl
stc
imul
jle
pop
xchg
shll
jae
fiaddl
pusha
fs
jnp
inc
add
nop
inc
sbbl
adc
loope
je
inc
hlt
insb
bound
flds
mov
mov
cli
and
sub
fldenv
jnp
jb
out
mov
fiaddl
jno
cmpl
cmpsb
xor
jmp
aas
daa
add
rorb
jno
sub
pop
pop
std
push
push
pop
bound
mov
push
pop
mov
sub
add
add
push
add
cli
in
cli
adc
lea
dec
test
enter
stos
xchg
jp
leave
mov
fidivrl
into
aam
push
or
mov
inc
pop
insl
push
lret
sbb
nop
push
dec
daa
xchg
outsl
hlt
pop
pop
popf
adc
lahf
xor
mov
pop
cs
mov
dec
inc
stos
mov
les
jns
repz
test
cltd
pop
cmp
push
in
aaa
mov
or
imul
jae
jno
in
dec
xlat
cmp
jnp
add
sti
outsb
xchg
xchg
shl
popl
test
push
cmp
adc
rcll
or
xor
pop
iret
dec
out
mov
xor
mulb
jg
push
sahf
push
jl
jmp
loope
cmp
pop
loop
lcall
call
inc
frstor
jbe
aas
test
cmpsb
hlt
sbb
int
jmp
add
outsl
loopne
cli
mov
imul
mov
dec
les
xor
into
push
sub
inc
jecxz
scas
inc
sub
adc
dec
xchg
repz
pop
push
xor
xchg
or
andl
sti
lds
lock
js
or
mov
or
popa
stos
xchg
adc
mov
xchg
ss
shrb
or
insl
loop
test
shr
and
popl
xchg
xor
lahf
xor
cmp
scas
and
add
addr16
pushf
inc
hlt
mov
int
dec
lods
sahf
testb
push
fistps
cs
int3
imul
push
xor
or
push
push
adc
leave
or
inc
std
daa
cmp
sahf
mov
mov
mov
divb
jo
xchg
push
xor
add
add
fsub
sub
cwtl
dec
out
das
add
mov
mov
adc
add
inc
repnz
lahf
and
imul
in
sbb
fcompl
into
mov
dec
shrb
frstor
daa
std
sub
sub
lds
sub
cld
cmp
mov
jb
call
hlt
push
mov
xchg
add
jns
popa
add
add
inc
gs
sbb
sbb
lret
out
cwtl
aam
adcl
sti
push
stc
xor
and
test
in
lods
lret
minps
mov
dec
push
jl
cmp
pop
pop
sahf
clc
sbb
mov
popf
scas
cmpsl
push
and
movntq
out
xchg
scas
xchg
mov
or
or
pop
rorl
data16
ret
and
fdivs
fwait
sbb
mov
inc
pop
lret
dec
cmpsl
xchg
imul
push
jns
or
inc
ja
fdivs
xor
pop
adc
mov
loope
les
sub
cmpsb
outsl
jmp
xchg
test
imul
adc
cmp
scas
push
lods
cli
stos
inc
jbe
int3
movsb
xlat
ljmp
push
xchg
in
pop
cwtl
mov
cmp
movsb
leave
aaa
popf
repz
cmc
xchg
fistl
data16
mov
adc
jp
paddd
out
and
pushf
mov
or
in
out
cmp
cmp
pop
rclb
mov
addr16
imul
rcr
dec
nop
dec
mov
add
xchg
cwtl
pop
jmp
stos
jae
les
xchg
rorl
cmpsb
sbb
pop
mov
fidivrl
adc
in
pushf
and
jge
mov
mov
adc
pushf
rclb
pop
fcmovbe
hlt
nop
fildll
cmp
call
cld
stc
mov
fidivl
pop
cwtl
pop
call
or
lret
push
in
sbb
dec
sub
negl
xor
cli
and
test
xchg
jno
mov
insb
std
inc
push
popf
arpl
dec
push
sbb
cmpsb
cmp
or
mov
xorl
inc
jg
out
adc
fs
jns
cmp
cmp
jmp
imul
pop
mov
jl
inc
xchg
pop
dec
fstps
ja
test
sub
repz
insl
lea
mov
fidivs
xchg
add
sbb
adcl
lods
sarl
inc
jp
imul
cld
xor
or
push
lea
movl
cmc
fwait
mov
hlt
not
rorl
sar
push
rolb
out
sub
sbb
mov
test
jg
ja
into
fsubrs
jg
divb
add
pusha
les
jbe
dec
popfw
add
movsl
xchg
ss
lock
inc
sub
popf
call
or
or
and
pop
cmc
rolb
xchg
hlt
jg
mov
test
js
insb
jo
test
mov
ret
inc
icebp
dec
jmp
push
into
test
insl
jg
xchg
subb
lahf
push
cmp
push
push
ljmp
jmp
sbb
mov
jecxz
pop
xchg
inc
cli
jae
call
inc
push
les
out
popa
and
aas
scas
sbb
push
popl
push
gs
xor
cltd
lock
add
out
xchg
dec
imul
xor
js
cmp
push
andb
lds
sahf
sti
loop
inc
int3
xchg
jo
add
xchg
jne
xlat
pop
repz
nop
fsubrp
or
cmp
clc
mov
push
add
cmp
lods
jae
jecxz
xor
jo
dec
sbb
cmp
sub
xchg
nop
mov
test
int3
pop
icebp
cmp
adc
push
fnsave
jo
pop
push
movsl
pop
adc
addr16
push
outsb
or
add
or
inc
or
mov
movsb
xchg
je
aad
lods
push
hlt
xor
and
jle
jne
shl
es
sub
out
pop
jno
or
mov
mov
out
clc
clc
inc
add
lcall
sbb
push
subl
cmp
cmc
mov
sbb
stos
or
inc
lods
pop
adcb
push
int3
inc
lods
sbb
stos
rol
pop
mov
loop
movsb
insb
pop
add
mov
xchg
push
jbe
inc
and
js
add
jl
stos
pop
cmpsl
shlb
cmpsl
aam
fstpt
or
enter
push
add
add
cld
in
les
mov
outsl
pop
outsb
mov
hlt
repz
sub
cmp
xlat
inc
mov
xchg
and
ds
pop
notl
bnd
jecxz
pop
fs
adc
mov
jb
aam
in
aaa
clc
shl
popf
adc
or
mov
mov
dec
dec
inc
pop
mov
arpl
test
adc
outsb
xor
jno
hlt
add
ffree
push
rcl
adc
ficoms
lret
add
movsl
mov
or
dec
or
pop
mov
stc
or
inc
ret
mov
mov
pushf
lds
jmp
xchg
or
mov
int3
cmc
and
push
adc
fstpt
add
mov
xchg
inc
cmpsb
cwtl
dec
xor
xchg
hlt
in
movsl
dec
mov
enter
sbb
pop
call
adc
add
inc
xor
lock
arpl
pusha
adc
fcompl
sub
filds
jno
std
xchg
and
stc
lds
enter
sub
mov
aam
adc
jecxz
aaa
sbb
jg
dec
in
ficoms
push
jl
mov
out
and
fdivl
add
xchg
jmp
repz
push
xlat
test
inc
es
sub
mov
sub
pushf
mov
mov
and
sarb
adc
std
ljmp
je
push
push
cwtl
mov
sub
jo
sub
mov
in
jae
sar
scas
scas
sbb
ljmp
iret
int3
loop
dec
clc
sahf
pop
mov
pop
sub
jg
adc
test
mov
dec
nop
adc
xchg
aam
mov
or
movsb
mov
mov
dec
outsl
xchg
out
outsl
dec
stc
add
sbb
xor
fisttpll
clc
sub
xor
add
fistpll
leave
inc
fsubr
sbb
out
add
fwait
cmp
adc
push
mov
mov
lss
ficoml
daa
jbe
fucomp
dec
cmp
daa
iret
xor
sub
sbb
das
jge
std
cmp
dec
or
xlat
inc
push
lcall
popa
pop
scas
pop
xchg
lcall
adc
icebp
xor
es
mov
push
jbe
out
push
sub
push
xor
mov
idivl
mov
mov
adc
scas
mov
cltd
rolb
xchg
lcall
popa
xchg
and
mov
sti
pop
rcll
inc
arpl
pop
add
mov
dec
out
push
in
jne
popa
neg
mov
sub
dec
fbld
jbe
jp
movsl
js
int3
pushf
popf
jne
insb
or
xchg
jge
pop
js
rcrl
add
cmp
sbb
call
lds
sbb
test
sbb
test
mov
movsl
pop
push
mov
icebp
pop
test
call
stc
in
fdivrs
loopne
rcll
sub
jns
mov
add
aas
insb
hlt
lret
xchg
cld
in
fldt
pop
shl
fs
xor
jle
xchg
xchg
inc
jecxz
sub
xchg
sub
jno
or
shlb
rcr
xlat
cmp
xor
fdiv
ja
push
lock
test
push
sub
daa
mov
xor
pop
jmp
sbb
lock
mov
call
cmp
mov
sbbl
aas
mov
stos
mov
iret
repz
shr
test
push
mov
push
adc
mov
popa
mov
mov
adc
shll
add
cli
sbb
add
push
inc
mov
cmpsl
push
rcr
add
in
mov
es
fsub
mov
dec
mov
fs
mov
xor
mov
dec
dec
les
cwtl
add
movsb
cmp
in
sub
out
das
in
pop
pusha
pop
jb
in
orl
xchg
movsl
imul
dec
push
cmp
inc
push
pop
cmp
xchg
and
sbb
sbb
test
psubsb
mov
xchg
sbb
push
addr16
adc
repz
cmp
cmp
mov
push
xor
fidivl
pop
xchg
add
mov
inc
adc
xor
add
cld
adc
into
andb
movsl
sahf
mov
jnp
test
fmuls
cmp
loop
mov
dec
sub
cmp
and
mov
or
add
push
pop
or
mov
je
repnz
stos
cmpsb
outsl
cli
repz
inc
cmp
dec
imul
fiadds
xchg
mov
or
fidivrs
pop
lock
fsubl
pop
clc
sub
popf
dec
xlat
inc
xor
jge
icebp
jns
push
push
movb
gs
fidivrs
or
xchg
fs
test
das
mov
add
or
ret
mov
or
sub
addr16
inc
sbb
pushf
cmp
sarb
loop
pop
in
xor
sub
lcall
ds
in
mov
sbb
mov
fdivr
sbbl
mov
insl
cmpsl
clc
lea
mov
xchg
mov
in
mov
dec
lds
negl
jae
xor
and
pop
lret
mov
out
and
iret
loop
lea
ds
outsb
pop
mov
mov
ret
cmpsl
pop
scas
and
cli
daa
push
xor
xchg
cs
adc
data16
sti
subb
or
push
or
dec
sub
out
xchg
push
or
xchg
sti
punpcklbw
iret
xchg
add
pop
sub
xor
inc
inc
pop
push
add
fneni(8087
inc
icebp
sub
clc
test
arpl
mov
ror
inc
pop
shll
pop
pop
inc
sbb
cmp
cltd
addr16
addb
in
lcall
dec
fmul
lods
pop
jmp
dec
cmpsb
push
jbe
and
mov
push
cmp
or
out
jno
ljmp
inc
cmc
nop/reserved
or
xchg
inc
ret
int3
ja
fdivl
push
jb
push
and
or
lods
mov
int3
jg
lods
lds
sub
pusha
dec
add
jnp
add
out
jne
ror
rol
xchg
sbb
clc
add
pop
sbb
mov
repz
mov
mov
dec
ja
mov
push
jnp
lock
lods
mov
outsb
test
or
adc
fucomi
mov
jecxz
data16
repnz
dec
fisttpll
inc
shr
lock
loop
fildl
adc
sar
inc
inc
push
xlat
add
fildl
or
push
mov
mov
movsl
loope
fdivrl
setno
pop
popf
repnz
jno
lock
sbb
cltd
loop
dec
or
hlt
pop
sti
pushf
mov
pop
adc
movsl
add
pop
out
cmc
outsl
mov
push
cmpsl
jno
test
pop
test
cmp
and
pop
lds
adc
enter
and
es
imul
or
das
lret
dec
adc
and
jl
data16
shlb
pop
cmc
rclb
in
mov
popf
sbb
in
and
mov
dec
dec
xchg
in
dec
movsb
lods
push
adc
test
lea
and
xchg
xchg
out
loopne
adc
into
cwtl
imul
dec
in
pop
mov
dec
into
data16
mov
xchg
scas
jle
lret
add
out
adc
mov
pop
sahf
fimull
into
lds
xor
mov
dec
fs
scas
lea
lret
xchg
and
cmp
xchg
movb
mov
stos
test
insl
xchg
shr
add
outsl
cmp
pop
inc
stos
inc
and
sub
repnz
bound
mov
inc
mov
das
sub
int
subl
jnp
in
rolb
mov
sbb
or
jae
cmpsb
inc
incl
popa
sarb
push
adc
lock
adc
imul
jae
je
stos
cmc
and
inc
lret
jle
int3
loope
xor
jb
daa
lret
out
test
pop
stos
into
jo
inc
mov
icebp
dec
adc
mov
cmp
push
aam
sbb
lods
mov
rcr
xchg
mov
add
outsl
aad
xor
pushf
cmpsb
call
mov
and
mov
aas
jmp
lea
or
sub
sti
sub
mov
push
jl
inc
xor
pop
scas
mov
xor
call
jl
mov
mov
push
and
in
pusha
fcoml
enter
pop
mov
imul
push
insb
int3
addr16
and
push
add
xchg
shl
xchg
cmp
jb
mov
iret
sub
aaa
ljmp
inc
or
jo
or
movb
jecxz
fnsave
enter
call
stos
mov
or
inc
jmp
popa
jle
jae
mov
out
mov
sbb
jl
bound
dec
shl
test
dec
dec
sub
and
pop
orl
push
inc
push
pop
pop
fldenv
dec
cmc
enter
mov
cs
and
cmp
les
outsb
mov
subb
sbb
pop
jle
inc
xor
cmpsl
in
aad
into
and
and
sub
dec
cwtl
mov
shl
dec
and
mov
test
push
push
es
mov
adc
sti
mov
loope
fidivl
mov
mov
add
cli
out
ret
ja
adc
pusha
aas
mov
fwait
imul
inc
shll
es
push
cmp
loope
lret
in
mov
out
sbb
or
clc
and
dec
sbb
sub
mov
popf
xor
inc
pop
ss
push
jae
or
jb
push
xchg
inc
jecxz
mull
lcall
imul
mov
sbb
data16
mov
sbb
adc
aad
jns
mov
rol
push
int3
sub
lock
push
mov
insb
mov
lea
repnz
fcmovnbe
movsl
repz
add
outsb
jge
mov
ljmp
or
jno
ljmp
lock
roll
aaa
pop
insb
add
mov
icebp
and
mov
jle
in
sbb
dec
xchg
mov
rclb
rol
lea
add
mov
adc
jp
and
push
dec
stos
pushf
rol
mov
jecxz
sbb
lahf
jns
andl
andl
jae
mov
sbb
out
cli
pop
mov
bound
repnz
jbe,pn
sbb
je
loop
bound
pop
daa
sbb
pop
jle
xor
sub
stc
fcoml
mov
push
push
lods
leave
sbb
xor
fcoms
jmp
outsl
push
push
push
xor
sar
dec
push
in
lods
dec
or
pop
adc
mov
adc
inc
mov
ss
pop
push
inc
shl
into
out
push
data16
test
out
popa
arpl
xchg
repz
sub
jp
retw
pusha
mov
popa
lods
aam
push
adc
cmp
adc
cs
mov
cltd
mov
push
aad
and
gs
add
cmpsl
push
out
outsb
pop
ss
ja
mov
clc
pusha
mov
nop
mov
dec
cld
mov
cmp
mov
mov
adc
xchg
je
lods
xor
fldenv
fisttpll
mov
mov
push
pop
repz
gs
or
bound
test
pop
sbb
sahf
jmp
enter
add
imul
nop
adc
mov
aaa
sbb
sti
push
ficomps
popf
jle
sub
add
add
push
push
leave
mov
xor
scas
pop
scas
sub
sub
popa
xchg
iret
lods
nop
and
fnstsw
mov
insl
int3
dec
sti
orps
add
loope
push
jmp
add
push
and
fwait
mov
daa
push
xchg
flds
and
cmp
mov
imul
pop
pop
sub
imul
shlb
pop
jno
addb
mov
push
mov
in
fnstsw
test
mov
in
jnp
sbb
pop
es
or
popa
ficoml
jp
fcomps
push
mov
xchg
add
ds
in
lahf
mov
inc
nop
mov
aas
push
cmp
mov
jl
dec
push
test
fsubrs
xchg
jbe
xchg
std
inc
call
jge
inc
adc
mov
ljmp
in
or
imul
dec
test
xchg
push
push
orb
pusha
addr16
cmp
aaa
addl
cmp
vmwrite
rcrb
sub
mov
fildl
cmp
push
inc
cld
lahf
fidivl
jbe
daa
push
xchg
jo
stos
fimull
cltd
aam
mov
imul
enter
push
cmp
jecxz
sahf
das
mov
add
dec
cld
rcrb
push
cld
sbb
fidivrs
ret
xchg
lret
ror
jmp
rclb
or
mov
mov
arpl
into
lcall
testb
mov
mov
or
in
dec
jmp
and
inc
loop
push
mov
inc
shll
pop
call
xchg
cwtl
push
push
xchg
adc
push
int
mov
data16
ja
fbld
pop
test
or
xchg
mov
orl
xor
lds
inc
push
cmp
jp
subl
leave
cmp
or
fbld
push
int
sub
jbe
xlat
test
ror
stos
mov
ljmp
sti
jae
adcl
iret
movsb
xorb
inc
dec
sbb
jnp
inc
mov
mov
add
and
ds
cmp
scas
mov
out
xor
cltd
adc
out
je
mov
sbb
mov
jno
or
lds
lods
cmp
adc
fadds
inc
mov
jo
bswap
aam
lea
xlat
sub
pushf
adc
add
inc
cmp
lret
and
fstp
stos
popf
jns
fstpl
xchg
jno
inc
push
xchg
call
cmpsl
mov
add
movsb
imul
adc
out
add
push
movsb
cld
mov
xor
xor
test
movsl
sbb
pusha
in
stos
pusha
mov
lcall
mov
xchg
or
and
sub
jbe
add
rcrb
sub
out
pushf
and
sub
or
inc
and
movsb
and
xor
cwtl
xor
and
adc
xor
lea
cmp
fdivrs
ret
push
mov
mov
jl
fwait
inc
mov
mov
mov
fs
stc
pop
ljmp
out
lock
xor
and
aas
cwtl
fs
out
mov
in
add
test
jecxz
insb
adc
lcall
pop
xchg
dec
xchg
push
xchg
hlt
lea
mov
add
neg
bound
jae
loopne
cwtl
push
sub
aad
scas
pop
mov
in
add
mov
xor
adc
cmpsb
scas
jge
xchg
pop
push
fdivs
fisubl
pop
sahf
stos
fldt
pop
pop
stos
int
loopne
test
hlt
nop
ljmp
cs
mov
add
and
pop
push
xor
cld
adc
add
repnz
cld
ret
mov
mov
adc
pusha
mov
cmp
sbb
push
xchg
shlb
aaa
stos
popa
push
xchg
pop
mov
lret
daa
movsb
popa
xchg
aam
add
fsubrl
in
loop
ret
jnp
fisubl
int
mov
rcr
xchg
pop
scas
and
arpl
inc
or
jno
popa
push
mov
xchg
test
or
xchg
pop
jb
adc
pop
push
push
xor
stc
adc
xchg
push
sbb
rorb
push
jns
mov
inc
adc
dec
cmp
jl
xchg
and
dec
mov
mov
cmc
lods
mov
mov
sub
popf
pop
sti
in
dec
and
mov
mov
dec
movsb
mov
dec
xchg
push
aam
repz
push
add
fmuls
ljmp
lods
pop
push
xchg
dec
cltd
jmp
out
pop
push
jo
cmp
push
sti
sub
dec
movq
mov
adc
ss
movsb
outsl
jne
data16
outsb
mov
movsl
jno
lret
push
mov
mov
xchg
inc
xor
jnp
cli
test
xlat
jp
jbe
mov
inc
dec
xor
sbb
inc
out
add
lock
pop
and
popa
das
sub
jbe
pop
cmpsb
jg
out
in
dec
xor
cmp
push
or
xor
mov
mov
and
lds
mov
and
loopne
sub
jne
jl
shll
sub
sub
cmpsl
or
xlat
jno
idiv
imul
mov
leave
leave
inc
int3
adc
movsl
cmpsb
cmc
sbb
iret
shll
insb
or
insb
dec
mov
in
add
lret
mov
mov
add
mov
or
mov
cmp
inc
sbb
adc
pop
adc
outsl
mov
and
push
pushl
bound
test
iret
in
ret
stc
xchg
lea
in
pop
or
insb
adc
fxch
push
mov
or
mov
testb
das
jmp
mov
pop
inc
pop
int
or
mov
mov
xor
outsl
adc
addb
pop
sub
sarw
mov
fldl
sub
out
pushf
mov
cmpsb
jecxz
lods
add
inc
pop
jno
imul
clc
xchg
push
scas
push
repnz
xchg
add
or
jle
popf
shrb
xor
push
mov
popa
outsl
jmp
dec
xchg
add
mov
and
out
or
xchg
xchg
mov
sub
scas
jp
sub
cli
adc
lds
ss
push
test
or
push
fwait
xchg
rcrb
inc
mov
mov
lcall
lret
rolb
fincstp
jecxz
addl
and
or
loop
daa
enter
outsb
push
pop
fdivrl
mov
push
jge
sbb
sahf
mov
inc
sbb
adc
mov
cli
xchg
add
xorl
clc
push
test
pop
ss
pop
lods
imul
mov
psllw
push
lock
adc
lea
adc
inc
mov
idivl
cmp
in
pop
dec
sub
int3
xchg
adc
jle
gs
push
mov
jmp
xor
rorb
jge
or
mov
xor
pop
push
subl
inc
adc
jns
jbe
lods
xchg
sub
das
shlb
and
adc
mov
dec
sub
jnp
inc
lods
in
mov
push
lahf
push
out
jo
dec
xchg
xchg
mov
fisubrs
sub
aad
gs
and
movsl
mov
mul
in
jbe
outsb
mov
dec
inc
sbb
add
lods
psadbw
sbb
mov
shl
and
or
pop
jmp
cmp
iret
pop
ficoml
ret
sahf
xchg
lods
jns
test
sbb
pop
sahf
imul
das
mov
imul
inc
push
xchg
jns
lea
rolb
add
shlb
ss
adc
fs
sub
mov
add
dec
popa
or
les
inc
push
mov
insl
arpl
jb
fistpll
mov
xchg
daa
jg
out
cmc
out
mov
mov
pop
das
sbb
dec
dec
sbb
into
sbb
pop
or
cwtl
adc
gs
fnsave
lds
pop
mov
mov
pop
pop
testb
mov
nop
mov
cmpb
arpl
inc
push
sbb
data16
in
movsb
cltd
sbb
cmp
cmp
push
fildl
lock
push
mov
ljmp
cmpsl
xor
loop
jg
call
and
or
mov
ljmp
in
dec
aas
fsubrl
mov
fsubr
add
out
cmc
push
lcall
jp
cmpsl
cltd
dec
shrl
in
add
mov
xlat
jne
rorb
leave
lret
push
lcall
ss
test
dec
and
divl
test
sub
std
rorl
insl
adc
xchg
and
in
enter
lods
xchg
mov
mov
mov
mov
testb
add
mov
in
inc
out
std
lcall
enter
gs
es
and
mov
stos
sub
dec
outsb
fs
aad
mull
and
ret
push
repz
sahf
xchg
mov
stos
popf
mov
pusha
into
testb
push
dec
aaa
cwtl
sbb
cmp
mov
test
fmuls
loopne
stos
addr16
sbbl
add
dec
pop
outsl
pop
dec
push
mov
ja
fwait
jo
int3
ljmp
cmp
inc
fisubs
mov
pop
jnp
push
shr
shll
adc
cltd
mov
out
scas
pop
icebp
inc
stos
add
test
ljmp
int3
cmp
ljmp
xchg
arpl
popl
sub
notb
cmp
sub
xlat
push
and
mov
outsl
mov
in
push
ss
push
lcall
mov
fcmove
stc
mov
testb
push
pop
sbb
dec
or
call
push
mov
inc
push
andb
fst
mov
scas
movsb
push
push
xor
push
mov
stos
test
mov
in
shll
push
aam
sbb
mov
pop
aad
in
loopne
mov
insl
push
pop
inc
or
pusha
test
pop
lds
insb
mov
pop
dec
mov
out
mov
ds
out
std
xchg
mov
or
mov
scas
adcl
insb
loopne
je
xor
aam
popa
mov
mov
sub
lcall
cmp
repnz
mov
push
jae
and
into
into
hlt
aam
mov
dec
jge
dec
test
movsb
ss
sub
cltd
test
out
mov
mov
inc
push
fdivs
pusha
pop
push
sar
aaa
push
pop
outsb
push
xlat
or
cld
mov
imul
mov
cs
add
cmc
arpl
in
xor
push
sbb
test
popf
cmp
adc
xchg
sbb
jecxz
mov
and
fwait
and
add
insb
and
mov
push
and
dec
aaa
dec
xor
mov
jbe
out
pop
mov
sub
daa
mov
mov
jle
rcl
bound
jp
sti
push
jne
daa
arpl
aad
mov
sub
pop
adc
xchg
cmp
into
das
enter
sub
sbb
test
cltd
popf
pop
daa
call
lods
adc
adc
rcrl
or
cmp
repnz
pop
pop
stc
aas
cmp
jg
in
xor
cmp
aam
jb
call
rol
mov
lock
push
addr16
lods
out
stos
mov
movsb
inc
adc
sub
test
int3
xchg
cmovg
sub
aad
aas
and
int
fisttpl
or
fcmovnu
test
outsb
popa
mov
hlt
cmp
sub
cmc
arpl
cmp
fisttps
dec
test
jp
sub
iret
sub
mov
and
sub
sub
in
out
out
loop
in
cmc
nop
je
mov
and
pop
adc
int
loopne
adc
pop
sbb
lea
fs
push
dec
test
push
mov
jmp
cmp
sbb
ret
jne
je
rcrb
fidivrs
and
addr16
test
mov
xchg
fucomip
adc
pop
xchg
push
cs
ljmp
fildl
push
lret
outsb
mov
push
xor
mov
jge
sbbb
cld
push
xor
aaa
jg
dec
mov
jbe
xchg
push
sbb
ljmp
gs
push
push
out
push
roll
jbe
pop
cmpsl
mov
pop
xchg
cmc
inc
ss
mov
sahf
xchg
lds
lock
cmpsb
adc
outsl
aaa
and
cmp
outsb
mov
fbstp
hlt
scas
repnz
mov
popf
sbb
lret
nop
inc
mov
and
mov
fwait
shll
je
cmp
sbb
sbb
inc
push
or
enter
inc
mov
sub
xor
les
fcomi
push
loopne
leave
out
pushf
cmp
inc
stc
pop
push
push
pop
adcb
lea
adc
adc
jmp
sbb
stos
xchg
cmpl
mov
icebp
fsub
and
pop
aam
data16
inc
daa
adc
jo
cmp
inc
push
lds
mov
aam
or
sub
ss
sbb
stos
nop
lods
or
mov
insb
mov
xchg
jle
xchg
mov
in
cmp
pop
flds
roll
in
daa
fcmove
ja
mov
shlb
xchg
adc
cmp
shrb
and
and
imul
jmp
push
xor
outsl
xor
int
mov
dec
xlat
movsl
movsl
icebp
fisttpl
jp
cmc
ss
cmp
rcrl
iret
mov
scas
mov
fs
mov
mov
add
dec
ds
dec
xor
dec
cld
pop
clc
add
mov
fcmovbe
daa
mov
add
imulb
mov
cltd
shrb
in
mov
imul
jb
leave
sbb
mov
cmp
mov
scas
in
sahf
cmp
or
mov
dec
add
push
out
cmp
add
pop
mov
or
push
mov
inc
daa
cs
jno
int
ljmp
sub
mov
fstpt
lret
dec
rcl
rcrl
cmc
es
test
mov
mov
pop
popa
lods
pop
outsl
pop
lret
mov
fs
mov
mov
icebp
sbb
mov
aas
sahf
add
mov
inc
lret
loope
xchg
incl
faddp
mov
movsl
adc
es
int3
fiaddl
xor
mov
lcall
jnp
add
jno
cmp
xchg
lds
add
cs
mov
sub
push
jns
add
lea
rorl
gs
daa
mov
nop
cmp
cmp
orb
out
mov
push
inc
sbb
insb
sbb
dec
mov
addr16
das
push
mov
addr16
pop
aad
push
inc
cmp
sub
cmp
fldenv
pop
lods
pop
call
leave
mov
mov
call
or
push
dec
mov
test
aaa
fidivs
inc
jns
lcall
or
repz
pop
or
fmull
or
inc
pop
cli
push
mov
push
std
jl
cltd
mov
push
dec
pop
fisubl
cltd
mov
movl
enter
jg
add
adcb
sbb
xor
aad
lea
mov
add
shr
je
jmp
dec
jo
inc
test
jnp
inc
lea
aaa
mov
mov
sub
inc
or
fisttpll
xchg
pop
mov
cmp
cmp
adc
shll
int3
push
pop
js
push
cmpl
jae
inc
out
dec
mov
enter
insb
cvttps2pi
xchg
jp
mov
push
inc
mov
push
aam
pop
mov
sub
inc
inc
pop
lds
rolb
sbb
jle
sbb
cmp
mov
jecxz
sub
es
fstpt
add
shl
mov
push
pop
xchg
cwtl
mov
adc
xchg
int
stos
stos
push
sbb
or
push
nop
pop
bound
mov
adc
leave
setbe
test
adcl
aam
daa
sub
cli
cmpsl
sub
sub
mov
mov
xchg
dec
xor
xchg
scas
pop
cmp
xchg
dec
mov
adc
mov
aas
scas
fsub
jle
pop
mov
push
adc
test
jge
inc
cmp
mov
push
sub
mov
sub
jnp
pop
cmc
push
mov
adc
push
daa
mov
out
mov
clc
popf
mov
sub
aad
mov
push
in
ret
dec
scas
in
lret
add
mov
adc
mov
jge
dec
lock
aad
in
cmp
xor
insl
icebp
lock
je
fnstsw
roll
or
fimull
lcall
cwtl
and
dec
push
into
sbb
ret
jmp
aad
add
inc
data16
or
aas
ss
sub
xchg
jmp
ljmp
push
push
aam
cs
push
jge
xor
sub
sbb
adc
jecxz
cmc
mov
sub
dec
xor
loope
jnp
jb
inc
mov
pop
les
jecxz
adc
mov
icebp
dec
insl
in
stc
inc
std
cmp
lock
xchg
mov
daa
fistpll
xchg
cmpsb
xchg
sahf
pop
xor
es
inc
jnp
xor
adc
fcoml
mov
mov
push
jp
loop
sbb
movsb
mov
adc
lock
das
and
test
inc
jp
inc
or
adc
sub
jp
jle
pusha
scas
push
jns
fcmovne
mov
and
ss
movsb
movsl
cwtl
mov
pop
or
sbb
xor
pop
out
enter
stc
add
mov
mov
ljmp
mov
nop
pop
mov
lea
es
pusha
int
cmp
arpl
into
or
test
out
add
add
fnstenv
jae
cmpsl
sbb
pop
jecxz
test
mov
sar
mov
and
adc
jae
xchg
ror
sbb
roll
call
hlt
and
push
stos
roll
cmp
cmp
fwait
loopne
cmp
xchg
cmpl
fmul
and
mov
movsl
lret
mov
mov
shl
dec
add
sahf
hlt
cli
sub
outsb
and
int3
sbb
jp
inc
adc
xchg
sbb
sub
fstl
fcoml
cmp
adc
cmc
cmp
and
xchg
inc
mov
aaa
mov
aad
mov
adc
mov
inc
xorl
shll
addb
lds
aaa
sbb
ret
lock
push
jne
lahf
lahf
aad
and
inc
insl
fsubl
es
sbb
daa
fnstenv
push
or
or
xchg
or
adcl
xchg
nop
enter
jno
adc
addr16
dec
je
pop
frstor
testb
fisttpl
aad
jne
pop
and
rorb
xchg
ss
cmc
xchg
dec
xchg
fisubl
mov
pop
push
shll
cli
cwtl
lods
fwait
pop
outsl
ud1
scas
sub
fwait
and
lds
je
test
gs
clc
push
in
dec
dec
daa
stc
loope
lods
dec
xchg
mov
scas
xchg
pop
push
outsb
cmp
out
aam
jb
inc
int
jns
pushf
int3
rolb
sbb
and
aad
jle
xor
ret
inc
sub
enter
arpl
cld
xorl
inc
shrl
arpl
dec
jo
jge
shll
and
pop
cmpsb
imul
mov
rcl
jo
inc
fidivl
cmp
sbb
push
push
mov
imul
adc
lret
xchg
push
and
jecxz
lcall
ficoms
sub
addr16
mov
jmp
push
in
sbb
mov
or
pop
lock
mov
out
sub
pop
jp
cli
sub
sub
lods
jns
push
adc
loop
lret
div
push
fisttps
push
xor
cltd
rolb
lahf
cld
scas
push
mov
lods
test
je
xchg
loopne
inc
ret
jmp
mov
data16
fnstenv
aas
cmpsl
mov
insb
adc
iret
decb
out
cmp
lock
es
xor
dec
xor
aam
mov
push
movsl
jecxz
push
lcall
insb
sbb
adc
std
iret
sti
ret
in
jae
mov
ss
cmp
adc
call
mov
cmp
mov
add
add
ret
in
popf
sbb
mov
lar
fisubl
mov
stos
sub
test
lock
dec
lds
repz
pop
xor
push
mov
dec
pop
or
in
jno
incl
push
mov
jo,pt
cmc
xchg
cltd
push
sub
es
lcall
or
icebp
mov
jecxz
lahf
push
dec
sbb
pavgb
sub
scas
mov
test
leave
lods
in
scas
cmpsb
insb
mov
push
sbb
cmp
es
cmp
adc
test
aam
push
cwtl
mov
popa
imulb
adc
push
gs
cmc
ret
xor
or
mov
dec
cmp
daa
out
in
jbe
fninit
xchg
adc
jl
add
or
inc
mov
cmp
jbe
pushf
shl
cmp
imul
fsubr
mov
xchg
jns
adc
addb
nop
or
mov
cs
loop
es
sbb
int3
inc
inc
mov
push
arpl
insb
bound
mov
cmp
sub
decb
push
xchg
mov
push
test
sti
shlb
gs
daa
jno
subb
les
rcll
mov
jg
sbb
inc
inc
lock
jnp
jnp
push
push
bound
or
loop
xchg
or
fdivl
inc
mov
sbb
mov
add
mov
gs
jecxz
mov
lea
adcl
pop
mov
adc
mov
stc
mov
jge
adc
mov
cmpsb
repnz
or
jmp
lahf
mov
clc
test
mov
call
sahf
xorl
stos
mov
outsb
mov
dec
dec
sub
shlb
out
xor
adc
es
xchg
xchg
repnz
add
dec
xchg
adc
dec
dec
add
rcrb
pop
add
pop
ret
testb
aaa
adc
jnp
dec
rorb
fwait
adc
jle
iret
rolb
cs
lock
sbb
in
imul
addr16
ja
adc
pop
mov
sub
sbb
push
dec
insb
data16
mov
jg
sbb
push
mov
cltd
or
dec
add
int3
mov
or
pop
faddp
nop
ja
cmp
cmp
outsb
or
aas
aad
inc
out
and
fadds
cmp
repnz
pop
jmp
cli
cld
mov
pop
pop
and
fbld
push
xchg
jbe
scas
push
and
inc
jmp
dec
aaa
aaa
test
lods
into
repnz
cmp
mov
xor
andb
xchg
and
mov
scas
xchg
rcrl
cmp
fdivrl
int
sub
dec
fwait
sub
mov
adc
mov
sahf
movl
mov
call
clc
push
ja
push
int
adc
jno
adc
test
lods
js
dec
jb
sub
lods
js
pop
hlt
sub
call
push
imul
adc
sbb
mov
dec
addr16
mov
inc
and
outsb
sbb
xchg
negl
xor
aam
adc
ljmp
imul
mov
aaa
sub
xor
das
push
adc
outsl
push
mov
lea
enter
cmp
insl
inc
cmp
pop
lahf
repz
cmp
xor
pop
test
dec
push
xchg
js
filds
mov
enter
cld
xchg
cmp
call
aaa
adc
scas
jmp
pushf
xor
pop
push
sub
jne
push
mov
in
testl
outsl
xchg
ret
loope
xchg
jge
dec
adc
xor
daa
shlb
push
add
jp
inc
int3
pop
cwtl
jp
push
cmp
cmpsb
mov
xchg
movsl
bound
push
push
insb
mov
push
dec
loopne
xor
xchg
test
pop
imul
adc
and
adc
test
loop
push
add
imul
popf
orb
aam
jecxz
add
pop
pop
incl
xor
arpl
iret
loop
jp
jbe
aad
out
in
xchg
call
pushf
ds
cmc
push
insl
xchg
ds
loopne
popa
xchg
add
inc
sub
divb
mov
add
imul
dec
in
in
clc
stc
shlb
sub
xchg
aam
xor
pop
xor
mov
xor
xchg
daa
in
bound
ror
scas
gs
scas
cmp
and
pop
imul
inc
out
add
imul
xchg
fcomps
xor
in
push
cmp
fistl
mov
sub
sti
adc
cmp
pop
add
xor
xor
push
cmpsl
outsb
mov
movb
sahf
out
sub
lret
ret
jb
fstpl
add
jge
jle
ljmp
inc
jle
adc
add
mov
rolb
lcall
sub
jg
insb
lcall
rolb
inc
loopne
cmp
cmp
out
loop
ja
xchg
push
sbb
lret
and
jmp
cmpsb
dec
lods
test
dec
iret
sahf
data16
aas
les
push
loopne
psubusb
push
pop
sar
xlat
xchg
or
pop
lret
pop
sbb
ds
dec
imul
bound
add
sarb
shll
lea
mov
xchg
mov
jle
gs
ss
dec
jnp
je
add
lds
cmp
add
test
cmp
xlat
push
dec
popf
mov
std
mov
mulps
nop
sbb
rcrl
xchg
pop
jns
scas
flds
test
dec
cld
js
aaa
mov
call
repz
adc
dec
cmp
xor
insb
push
jg
pop
cmp
sbb
jne
fimuls
cmp
pushf
out
into
shll
xor
adc
and
push
mov
sarb
add
mov
or
mov
repz
aas
xchg
lock
adc
xor
leave
pop
push
cmpsl
add
cmp
aad
xchg
lock
loope
and
jmp
xchg
push
and
mov
mov
lea
xchg
add
ret
idivb
ljmp
jbe
mov
cmp
xor
dec
or
xor
adc
lahf
and
and
sub
xchg
push
popa
adcb
std
iret
lcall
xchg
call
popa
call
cmp
hlt
adc
subb
fwait
mov
adc
mov
xor
push
cmp
pop
mov
mov
push
arpl
repnz
push
sbb
iret
imul
mov
aaa
xchg
daa
aas
xchg
dec
ret
sbb
jae
jp
cmp
sbb
loopne
push
popa
xchg
push
xor
popa
lret
sub
dec
inc
mov
int3
xlat
xadd
xchg
push
movsb
clc
push
outsb
pop
in
jns
sub
subb
scas
lea
jle
cmp
rcrb
xorl
lea
dec
dec
mov
xor
dec
cmp
lahf
in
adc
inc
insl
xor
aaa
dec
pop
in
fnstcw
add
xor
or
add
and
jne
pop
jo
inc
les
mov
or
pop
lea
mov
and
xorl
inc
inc
sbb
push
jae
mov
filds
into
outsb
cmp
das
xor
inc
aam
cmp
push
data16
shlb
shll
push
roll
sub
mull
adc
xchg
xchg
fwait
bound
fstpl
lcall
test
scas
push
je
loopne
sbb
xchg
pop
sub
dec
sbbb
mov
popa
adc
dec
mov
sbb
les
adc
cmp
push
loope
adc
ficoml
repz
cmpsl
sbb
xor
cltd
ljmp
std
ret
dec
or
push
test
jl
call
int
lret
cmp
outsb
sbbb
sti
xchg
lods
mov
aas
lret
push
in
fwait
inc
fs
sbb
dec
addl
adc
pop
push
cwtl
movsb
dec
xchg
in
clc
sbb
lea
aaa
loope
cwtl
mov
jnp
dec
add
add
stos
sub
icebp
ret
pop
xor
xchg
xchg
push
lahf
cmpsl
loopne
outsl
mov
cmp
pop
in
repz
pop
push
repz
scas
mov
les
inc
push
add
sbb
xchg
pop
out
xor
cmpsb
popl
fidivrl
fisubrl
out
pop
pop
push
or
jge
js
lock
lods
ljmp
sub
mov
ror
in
jmp
xchg
sub
push
or
das
test
aad
push
movsb
sub
mov
push
pop
imul
leave
pop
pop
inc
pop
cmp
sub
mov
jo
fwait
shl
mov
dec
stc
imul
inc
jg
adc
pop
in
rdtsc
gs
fsubrp
dec
loopne
fistpl
sbb
aam
aam
popa
test
or
dec
icebp
iret
dec
loopne
sbb
sahf
xor
sub
aaa
rclb
dec
addb
mov
mov
inc
jg
cwtl
fdivr
mov
ret
mov
lds
jne
cmp
mov
ljmp
dec
inc
divl
sub
shll
jp
or
daa
add
push
adc
dec
rorl
adc
popa
pop
into
pop
lock
cmp
mov
test
dec
jae
pop
add
mov
scas
add
sti
and
mov
mov
mov
lds
cli
out
cmpb
xor
fs
xchg
maxps
push
or
rcl
adc
je
popa
mov
sarl
out
add
decb
sbb
rcr
stos
mov
cmp
subl
ret
push
imul
or
adc
and
fcomps
and
mov
aam
mov
sub
and
sbb
arpl
dec
leave
or
ja
and
in
pop
pop
std
cmp
jp
mov
push
repnz
add
jae
mov
xor
and
lret
hlt
pop
adc
xor
and
jnp
mov
inc
mov
cmc
or
cmp
mov
jb
or
sub
test
sub
add
dec
jbe
out
dec
cli
sbb
fisttpll
jb
ja
fistpll
cld
sbb
scas
mov
jno
fs
sub
inc
fisubs
std
xor
adc
scas
mov
push
fnstenv
add
inc
sub
adc
repz
or
fcomps
inc
xchg
and
stos
and
scas
pop
pop
sub
jnp
mov
es
dec
jnp
loope
xchg
cwtl
aas
dec
dec
pop
adc
mov
incl
int
mov
outsb
in
push
outsl
sub
scas
iret
pop
ret
dec
movsl
jb
dec
fdecstp
out
pushl
mov
pop
dec
idiv
inc
sub
fcmovnu
out
mulb
mov
adc
or
movsl
jl
xchg
sbb
sbb
ljmp
das
jecxz
push
xor
xor
cmp
inc
jg
jo
sets
jl
add
mov
push
pmulhw
sarb
xlat
jne
mov
sahf
xor
fidivrl
pop
sub
stos
hlt
fadds
mov
mov
scas
or
cmc
in
das
cmp
jne
cld
mov
mov
popa
mov
stos
pop
push
pop
es
aas
pop
mov
dec
mov
add
out
cltd
jmp
and
sub
insb
xchg
ljmp
pop
inc
cltd
fistl
xor
add
or
add
xor
inc
lea
add
jg
push
popf
xchg
fdivrl
lret
mov
fdivrl
out
repnz
scas
xor
mov
repz
add
fistl
hlt
cld
mov
mov
sbb
jo
movsl
dec
hlt
fildll
or
add
andl
lret
or
push
sarb
pusha
cmp
jo
insb
xlat
jl
dec
mov
push
sti
clc
mov
adc
in
push
fdivrs
jg
sbb
sbb
lret
movsl
inc
sbb
mov
sbb
xor
cmpsb
jns
outsl
mov
sbb
sarl
mov
xchg
call
mov
popf
psadbw
add
adc
rcrl
test
out
pop
lock
add
push
add
std
out
jl
sbb
addr16
inc
bound
mov
test
jmp
fldenv
mov
cmp
stos
sahf
sub
xchg
xorb
aam
xor
lcall
pop
sahf
push
dec
jecxz
adc
adc
push
test
push
xlat
pop
fildll
into
inc
cmp
scas
cmc
sbb
and
mov
gs
inc
pop
or
pushf
push
xchg
icebp
lahf
dec
or
push
jle
mov
ret
mov
cs
fstpt
dec
cmpb
jbe
add
fwait
adc
push
addr16
dec
shlb
push
jle
jmp
jecxz
pop
addl
test
cld
mov
dec
scas
pop
sub
sbb
mov
mov
pop
rclb
loopne
aad
loop
shlb
leave
jae
orl
dec
cmp
push
in
jae
jl
fs
mov
inc
add
aad
push
xchg
mov
mov
push
push
lahf
mov
shlb
out
adc
mov
test
and
cmp
mov
notb
fisubs
cld
or
xor
imul
xor
mov
movsl
pop
add
ret
addl
shlb
ret
xorb
push
test
pop
xchg
sti
or
addr16
inc
or
lods
out
repnz
pusha
add
movsl
mov
fldcw
sbb
cmp
pop
int
ret
adc
xor
sub
cmp
jo
sub
out
jnp
and
and
mov
cld
mov
mov
fistl
xchg
cmc
pop
xor
ficomps
lods
xchg
je
jmp
xchg
inc
sub
or
jbe
cs
and
pop
push
or
xchg
add
repnz
in
pop
xor
int3
ljmp
sbb
in
stos
dec
fistl
fs
inc
push
push
jecxz
sbb
dec
mov
lcall
mov
icebp
outsl
lret
cmp
fidivs
stos
dec
mov
inc
dec
add
cltd
mov
repz
jae
sti
sub
icebp
sarl
mov
sub
fs
pop
add
loop
xchg
int3
sbb
add
mov
inc
leave
cwtl
add
testb
mov
mov
es
jle
push
gs
pop
xor
add
sbb
xor
sub
into
rclb
sub
and
add
call
pop
adc
out
orb
es
push
adc
enter
jmp
pop
call
ret
xchg
adc
inc
adc
add
ss
cmp
ret
xchg
repz
mov
xor
ljmp
cmp
ljmp
cwtl
call
icebp
add
mov
int
push
push
std
arpl
xchg
fadd
or
in
cmpsl
scas
pushf
add
test
je
and
dec
test
ljmp
stc
adc
std
pop
lret
iret
fiaddl
jg
sub
sub
js
xchg
jge,pt
test
daa
movsl
mov
pop
inc
push
xchg
call
sbb
lods
inc
or
mov
decl
das
arpl
je
jo
test
lcall
mov
loop,pn
pop
mov
pop
loope
aaa
xchg
fisttpl
mov
pop
cwtl
mov
jge
xchg
xchg
rorl
jmp
test
xor
mov
dec
inc
mov
mov
xchg
adc
xor
xor
popa
sbb
stos
lfs
fisubl
adc
loop
gs
dec
cwtl
iret
imull
adc
ret
add
xor
dec
adc
inc
mov
xor
dec
jle
sub
cmpsb
inc
loope
mov
and
cmc
mov
xor
sahf
xchg
xlat
in
and
lcall
mov
inc
aad
cli
fmulp
xor
mov
icebp
sbbb
mov
pop
shrl
xor
dec
loopne
into
scas
xor
out
pop
inc
dec
cltd
jns
dec
nop
add
imul
or
addr16
mov
test
das
pusha
pop
out
stc
jno
cmp
js
add
nop
add
adc
mov
xchg
in
xchg
pop
addr16
iret
imul
add
call
add
test
mov
aas
or
push
dec
adc
fcmovnbe
hlt
mov
mov
fcompl
and
les
pop
inc
xchg
and
popf
rcrl
and
inc
cwtl
mov
sbb
jmp
rolb
mov
mov
cmpl
insb
pop
dec
icebp
loop
dec
and
outsb
jmp
je
outsb
mov
outsb
mov
outsl
adc
dec
sbb
push
repz
fists
push
ss
xchg
stos
ret
lret
lock
popf
cld
movsl
loopne
and
in
inc
inc
xor
sar
and
stc
push
push
into
jno,pt
lcall
pop
std
inc
test
cmovg
insb
add
imul
dec
mov
rorb
pop
pop
sub
sbb
cmp
sbb
mov
xchg
into
lret
aam
xchg
dec
mov
movsl
ss
iret
test
lea
psubsb
jmp
pop
fcmovnu
in
pop
ret
lahf
push
pushf
xor
xor
jp
sbb
mov
or
rorl
bound
inc
mov
cld
ret
xor
loope
loopne
pop
in
sub
push
pop
mov
movsb
notl
adc
jae
sbb
pop
inc
fists
xchg
enter
loop
mov
cmp
sbbb
mov
pop
pusha
mov
addr16
addr16
jae
adc
inc
imul
dec
aaa
test
sbb
cmp
pop
test
call
adc
arpl
fstps
movsb
jbe
out
push
rcrb
fcom
mov
call
xchg
call
sahf
sti
movsl
cld
mov
cmp
mov
jl
stc
xchg
test
int
test
push
je
sti
data16
addr16
pop
test
imul
subl
mov
sti
push
jge
test
stos
fucomi
inc
loope
mov
cmc
dec
push
mov
sbb
xchg
mov
out
ret
xchg
sti
jne
insb
icebp
idiv
xchg
js
jae
xor
aam
sbb
xchg
jecxz
lock
div
gs
jnp
sarl
lret
mov
bound
jg
lds
adc
repnz
fwait
jns
cmpsl
imul
xchg
pop
jl
iret
lret
popf
aad
ret
mov
ljmp
in
add
lock
sub
into
ja
fwait
mov
enter
sub
popa
cmp
loope
fcoml
pop
mov
stos
push
pop
lret
cld
add
jmp
imull
icebp
xchg
and
fs
aaa
shl
mov
inc
lods
mov
mov
sbb
repnz
rol
sbb
cs
arpl
iret
push
dec
xchg
mov
in
dec
into
dec
jb
mov
jg
mov
dec
fs
mov
lods
xor
aam
push
mov
push
or
test
pop
push
jg
test
sub
jb
pop
movsl
adc
pop
mov
sub
sbb
xlat
test
or
imul
inc
test
dec
sti
cmp
push
cmc
xor
ficoms
out
add
sbb
int
push
xchg
mov
cmpsl
test
into
test
jge
and
push
add
cli
lods
push
shrb
enter
gs
inc
mov
into
add
fmul
shlb
popl
aad
push
bound
lret
pusha
les
fbstp
sub
arpl
mov
shl
add
mov
sbb
dec
push
sub
loopne
xchg
xchg
xor
int
ret
loopne
loope
sub
rorb
xlat
pop
cld
sub
mov
gs
aam
dec
xchg
jecxz
mov
gs
stos
cmp
imul
stos
sub
mov
push
sbb
and
mov
push
mov
jecxz
in
jmp
repnz
add
xchg
add
pop
inc
insl
jo
cmp
pop
je
fldenv
add
pop
ficoml
mov
sbb
fsub
mov
outsl
leave
icebp
inc
lods
xchg
sbb
mov
cmpsl
jl
gs
mov
mov
popf
daa
jnp
cli
lock
and
sti
roll
or
rol
movsl
pop
inc
sub
pushf
jnp
pop
dec
and
dec
or
jl
sarb
dec
fnstsw
aas
push
stc
push
jbe
cmp
pop
das
in
loop
mov
push
lock
rol
scas
or
mov
dec
mul
aaa
testl
in
lds
movsb
scas
xor
mov
lret
jb
addl
dec
mov
jecxz
push
jl
push
mov
add
int
push
sbb
arpl
pop
ljmp
jge
ret
xchg
cmp
stos
lds
sbb
fcoms
frstor
enter
enter
jno
sub
sub
movsb
mov
aam
adc
mov
mov
rcrb
xchg
imul
xor
ret
popa
je
inc
xchg
xor
fdivrs
pop
jno
pusha
push
mov
xchg
dec
pop
icebp
jle
pop
stos
ficompl
lcall
loope
hlt
cmp
dec
and
iret
std
int3
xchg
adc
inc
mov
sub
lock
mov
fstpt
js
cld
jno
xchg
loope
inc
cmc
lret
lds
repnz
mov
out
cmpsb
js
xor
in
mov
fisubrs
xor
ss
movsl
mov
mov
mov
xchg
jp
into
push
mov
adc
pop
sbb
pop
call
and
rcll
push
mov
adc
sbb
pop
sub
xchg
frstor
or
mov
pop
test
or
dec
jg
mov
fistpll
and
cltd
fcoml
daa
cltd
mov
cmp
jmp
inc
shr
inc
setp
fs
sbb
or
mov
mulb
arpl
ss
cltd
and
pop
and
pop
out
outsb
lahf
ficoms
fcomip
imul
xchg
sub
or
into
mov
cwtl
out
insb
inc
loope
mov
ja
das
test
pop
sub
pop
cld
pop
inc
dec
shl
push
fs
in
stos
mov
orl
outsb
adc
sbb
sub
pop
or
inc
pop
dec
mov
inc
lret
lahf
sub
in
xor
xchg
scas
lods
ss
mov
dec
test
sub
and
adc
sbb
insl
cs
mov
lods
je
mov
adc
fmull
repz
or
jae
lahf
insb
ljmp
jmpw
mov
inc
repz
push
mov
movsl
jbe
test
xchg
mov
mov
fdivl
ret
sub
dec
sbb
in
xchg
sbb
cmp
dec
dec
stos
into
test
pop
push
xchg
mov
add
shll
leave
bound
mov
dec
xor
cmpsl
pop
mov
adc
inc
gs
add
daa
push
daa
repz
jmp
mov
add
cmpsb
movsl
imul
mov
sub
dec
fdivl
cmpsb
imulb
mov
pop
jecxz
jno
jne
cwtl
sub
pop
loope
cltd
mov
push
mov
gs
mov
mov
sub
dec
sbb
outsb
pop
mov
enter
jnp
push
popa
jo
jge
ss
cmc
imul
xchg
adc
push
data16
xchg
xlat
xchg
and
sub
leave
mov
sub
mov
pop
dec
mov
fstps
cmp
add
jle
outsb
popa
lahf
jbe
xchg
sbb
daa
mov
sbbl
lds
js
push
inc
add
or
push
fimull
scas
push
je
inc
test
add
loop
adc
or
divb
ret
fwait
out
fs
mov
xchg
jno
scas
pop
sub
cwtl
sub
mov
mov
cmpsb
jo
outsl
jne
ret
or
insb
notb
push
xor
xchg
addr16
sbb
jge
dec
pusha
push
mov
aaa
in
inc
sbb
imul
adc
jb
jns
xchg
sub
pop
and
je
mov
lret
jb
sub
mov
push
dec
aas
pop
jp
leave
js
xlat
adc
push
dec
push
mov
pop
cmp
shrb
pop
and
pop
cmpb
nop
cmpsl
sub
in
xchg
sbb
js
int3
jecxz
scas
stos
push
das
push
and
jno
int
jno
pop
mov
xchg
or
lret
xchg
js
daa
xor
xor
mov
or
outsb
int3
mov
push
movsb
sbb
testl
lea
movsl
inc
icebp
or
xchg
sub
insb
clc
enter
add
mov
or
xor
push
xchg
rcr
sbb
rorb
pop
stos
jmp
mov
stos
aaa
orl
fisttpl
mov
push
repnz
xor
lahf
ss
call
adc
insl
gs
and
clc
inc
pop
xorl
or
mov
sbb
movsl
ljmp
mov
aad
mov
push
mov
loope
and
jecxz
aad
int3
repz
sub
xchg
cmpsl
pusha
mov
js
repnz
pop
inc
lds
arpl
stos
inc
sbb
loope
les
and
and
sub
out
jnp
arpl
aam
roll
push
push
out
inc
sbb
sub
fwait
test
bound
mov
fidivrl
mov
pop
cmp
xor
test
std
fildl
jl
nop
push
mov
dec
ds
or
mov
add
jae
flds
incb
lds
fistl
test
sub
loope
arpl
cmpsb
dec
cs
push
rcrb
sbb
mov
jno
and
outsl
mov
pusha
pop
xor
jge
aad
test
sarb
dec
dec
cmp
xor
shll
pop
cmpsl
jl
mov
mov
pusha
push
xchg
lds
sbb
out
push
cmp
inc
bound
clc
jns
insb
mov
loopne
mov
mov
cld
mov
push
or
sbb
push
sbb
add
gs
sarl
cmp
and
dec
dec
push
pop
xchg
cs
cli
addr16
xchg
mov
je
lea
push
and
sahf
sbb
mov
sub
and
jg
stos
or
adcb
and
push
cli
or
repnz
push
enter
sti
popf
insb
and
andb
lahf
movsl
jg
andb
sbb
sarl
popa
dec
push
or
lret
idivb
fs
popf
cmp
push
dec
sarl
xchg
shlb
jb
sbb
inc
xchg
je
clc
mov
pop
lods
lahf
pop
mov
cmp
dec
mov
scas
pop
push
jnp
adc
mov
dec
add
cmp
leave
lock
idivl
xor
popf
push
pop
lds
xor
xchg
sti
mov
pop
dec
adc
push
test
mov
jg
jne
cmp
pop
aaa
jl
sub
add
out
movsb
jge
jg
and
inc
pusha
jmp
sub
stos
out
mov
jns
sub
pop
mov
lds
shr
lea
mov
push
int
es
fiadds
and
hlt
aas
or
arpl
jp
repnz
mov
aam
xchg
ss
add
movsb
xchg
xor
sbb
sub
cmovne
mov
imulb
dec
aad
fs
out
mov
stos
pop
jle
push
push
ficoml
int3
aad
neg
push
leave
mov
push
push
mov
sub
mov
jg
jmp
xchg
push
jae
dec
clc
in
push
mov
jmp
not
fnstcw
jge
das
xchg
jnp
movl
into
mov
pop
dec
dec
push
xor
push
loopne
addr16
jecxz
pop
cmp
sbb
mov
cmp
add
sbb
push
xchg
repnz
and
insb
pop
mov
push
push
sti
xor
or
icebp
jnp
fisubl
push
adc
mov
das
or
inc
xor
add
cmp
cwtl
add
out
daa
push
dec
into
into
divl
lcall
dec
mov
add
sub
push
mov
jecxz
mov
stos
push
into
je
jl
jno
scas
dec
pop
and
xor
adc
add
aas
nop
jne
pop
mov
sbb
push
sti
and
cmp
and
ret
xor
jle
mov
cmc
std
xchg
das
pop
out
adc
call
rol
xchg
sub
pop
pop
daa
out
out
dec
inc
cmp
mov
add
push
pushf
mull
test
sbb
js
call
jmp
push
outsl
lods
xchg
fdivrl
push
test
dec
das
and
sbb
loope
cs
push
das
inc
imul
push
dec
mov
cld
ja
popf
ret
xor
int3
sbb
or
push
insl
cmpsl
inc
mov
aaa
pop
mov
cmp
push
cmpsl
inc
cld
movsl
mov
std
and
mov
es
int3
mov
xchg
lret
jecxz
xchg
or
adcl
addr16
push
les
movsl
mov
dec
inc
fs
mov
mov
mov
mov
es
push
subl
pop
add
iret
inc
stc
sbb
leave
sub
xlat
jecxz
dec
pop
andl
inc
mov
fadds
pop
rcl
das
xor
pop
ficoms
xor
mov
pop
fcoml
inc
mov
push
cmpb
or
ja
sub
xor
popf
mov
es
in
ss
dec
jo
pop
mov
pusha
mov
pop
inc
sbb
mov
sbb
addl
test
cmp
sub
xchg
mov
fcomp
in
mov
outsl
mov
jno
fwait
sub
ret
mov
stos
mov
mov
dec
repz
inc
cli
clc
cmp
adc
aas
mov
js
xchg
inc
jnp
inc
rclb
clc
call
leave
lds
shlb
mov
lret
push
movsl
adc
stos
push
scas
jb
cmp
cmc
add
push
sub
push
adc
cmpb
pop
movsl
mov
ss
sub
int
pop
sbb
cmp
les
lahf
test
divb
mov
mov
lret
inc
pushf
pop
jle
cmp
cmp
push
sbbb
cmp
cltd
js
mov
stc
pop
sub
jo
aas
pusha
mov
sub
mov
ja
push
and
orb
push
pand
mov
jmp
ret
fidivrs
push
xor
clc
jae
cmp
mov
mov
jp
movsl
mov
subb
inc
sub
mov
jecxz
adc
add
mov
dec
jae
push
adc
fnsave
cs
daa
pop
cli
mov
in
jg
cli
aad
in
adc
pop
ret
inc
xor
in
int
stos
aaa
es
lahf
cli
or
xlat
pusha
or
cmp
shl
lcall
sarl
pop
sbbb
jl
inc
fsubl
movsl
es
enter
xlat
adcb
movsl
aam
sbb
pop
cmp
xchg
pop
xchg
sti
mov
cmpl
outsb
add
pop
hlt
jle
and
jnp
mov
sub
adc
jo
xchg
mov
scas
mov
jo
in
dec
xchg
mov
mov
pop
push
jns
cwtl
xchg
cs
fwait
push
sbbb
icebp
inc
and
mov
push
lods
cvtps2pd
sub
mov
jbe
imul
loopne
insl
mov
dec
icebp
jb
in
add
lds
fldl2e
xchg
sub
add
mov
lahf
dec
pop
xchg
cmp
imul
out
pushf
rorb
dec
jp
cmpsb
push
xor
outsl
adc
test
arpl
mov
xchg
popf
mov
xchg
xor
cmpsb
je
add
jns
pop
pop
dec
sub
arpl
dec
inc
cwtl
mov
cmp
pop
jb
mov
dec
sbb
sub
aad
bound
lea
sub
roll
icebp
inc
adc
xchg
or
imull
and
insb
popa
or
xorl
jo
aaa
test
rcll
lahf
mov
sbb
add
pop
and
sbb
test
or
xor
repz
pop
sub
or
or
gs
inc
ljmp
dec
cmpsl
mov
add
mov
inc
lea
and
stos
cwtl
cmpsb
in
incl
fwait
sub
ds
push
cmp
aam
ret
out
repnz
pop
mov
mov
push
vminps
push
cmpsl
xchg
mov
cmpsb
sbb
shl
scas
xchg
fdivrs
test
jmp
test
inc
loop
mov
mov
lret
sub
push
notb
push
notl
pop
sti
lods
imul
daa
fs
lret
cmp
dec
fbld
rorb
cmpsl
pop
xchg
or
shrl
pop
clc
xor
notb
inc
xor
adc
icebp
ret
jmp
int3
js
ret
imull
ret
int3
inc
adc
orl
fisubs
fcmove
inc
je
sub
aas
jbe
and
jb
lcall
popf
cmp
cmp
push
std
push
or
into
je
mov
lock
mov
push
mov
mov
mov
xor
mov
cmp
sbb
std
jecxz
les
jecxz
popf
push
inc
jmp
in
test
loop
ret
jle
fldt
sbb
testb
cld
add
mov
mov
push
push
mov
mov
push
aas
imul
std
aad
add
adc
mov
mov
inc
movsb
and
sti
movsb
pop
idiv
jmp
mov
test
jno
pop
adc
in
jno
icebp
cld
and
mov
mov
add
insb
mov
in
xor
test
mov
push
mov
adc
mov
adc
jl
imul
data16
inc
lahf
pop
sti
and
adc
sbb
cmpsl
call
test
lods
mov
mov
or
jne
push
sar
insb
ret
inc
xchg
insb
sub
in
mov
push
mov
mov
cmpsl
jecxz
jmp
inc
cwtl
mov
inc
sti
ret
fldt
pop
push
rcl
frstor
push
out
adc
dec
cmc
cld
mov
scas
mov
fmuls
jnp
mov
je
aaa
leave
push
arpl
dec
dec
lods
imul
pop
or
sub
imul
xchg
xor
loop
push
ret
movsb
mov
lds
mov
jb
adc
jle
ja
mov
lock
adc
lret
push
adc
or
jae
mov
in
stos
mov
xchg
popl
test
movsb
into
js
jne
sub
outsl
lock
jnp
aad
push
cmpsb
add
es
jb
stc
imul
push
pop
cmp
int3
into
push
enter
lods
mov
mov
test
add
mov
jmp
mov
jns
aas
out
sub
push
outsl
jge
mov
pop
rorb
sbb
cwtl
xlat
mov
addl
dec
mov
daa
jle
ret
popf
mov
es
scas
scas
ss
into
adc
addr16
adc
jne
cli
push
add
lods
jecxz
hlt
mov
rcrb
imul
and
lods
push
mov
int
pop
cltd
cmpsl
mov
cwtl
sbb
or
shll
and
push
hlt
cmp
push
gs
add
inc
test
mov
fmuls
mov
mov
in
jp
lcall
sub
aam
push
jno
data16
ja
pop
or
push
lea
mov
inc
test
insl
lock
sarb
pop
imulb
lahf
ja
cmp
or
push
ficoms
in
jno
pop
ds
or
fs
jnp
mov
imul
xchg
mov
sbb
aam
pop
dec
cmp
inc
int3
cli
andl
in
addb
pop
mov
cld
icebp
jae
in
mov
std
add
addb
cmp
ja
dec
orl
sub
ja
outsl
pusha
pushf
leave
cmc
pop
xchg
mov
es
sbb
or
out
pop
rclb
xchg
pop
adc
lods
pop
stos
sarl
xchg
inc
insl
push
je
inc
sub
sbb
cmp
in
dec
xchg
sbb
mov
mov
sub
imul
add
xchg
or
mov
imulb
pop
clc
ds
cli
lret
mov
push
je
adc
fwait
xchg
mov
mov
mov
jg
daa
andb
cmp
xchg
adc
mov
outsb
add
mov
ds
jge
std
iret
lods
add
mov
ror
test
inc
clc
jo
sub
jbe
pop
fcmovnbe
adc
mov
pop
iret
cltd
sub
xorl
cmp
push
repz
xchg
push
dec
test
push
gs
dec
inc
sahf
bound
popf
mov
sub
cmc
outsb
xchg
popf
ja
std
dec
cwtl
fcmovnb
movb
test
dec
mov
xchg
outsb
pushf
pop
dec
sub
lret
stos
push
xchg
inc
xchg
jl
lods
adc
adc
jne
push
push
shlb
int
pop
cld
lea
daa
daa
test
xor
mov
insb
mov
adc
adc
dec
push
mov
loope
clc
push
shlb
xlat
stc
mov
mov
cmp
sub
test
cli
stos
in
lahf
int
lock
mov
mov
inc
loope
ds
mov
aas
hlt
out
insb
and
dec
add
clc
test
jp
aam
adc
jo
cmpl
inc
movsb
sarb
sysret
rcl
xor
push
inc
mov
and
mov
pop
cli
adc
cld
add
jo
lock
push
dec
or
mov
add
or
scas
fcmove
scas
arpl
push
pop
mov
aad
xchg
sub
imul
lret
in
xor
ds
jb
or
aas
jg
notb
fisubl
jecxz
adc
test
idivl
xchg
call
or
adc
xlat
dec
cltd
iret
outsb
push
aas
outsl
pop
or
inc
imulb
cmc
and
in
sub
adc
lret
pop
out
sarl
jnp
ret
shlb
je
inc
test
rcrl
fs
inc
mov
loopne
pop
adc
enter
mov
dec
stos
adc
or
sbbb
je
pop
mov
xchg
jecxz
sbb
xor
or
inc
xchg
sti
jo
fcmovu
popf
xchg
test
push
push
xchg
out
decb
rcrb
xchg
mov
data16
les
xchg
aad
mov
push
xlat
jmp
cmp
inc
test
inc
jne
jecxz
mov
pop
lods
aam
jmp
lcall
movsb
jp
lods
mov
out
cmp
mov
or
idivb
test
arpl
lcall
dec
jge
sbb
xlat
gs
into
enter
jle
and
cmpsb
dec
lock
add
movb
mov
jl
mov
pop
movsl
scas
jl
add
push
loop
imul
pop
xor
into
xor
jbe
and
add
dec
stos
popl
jmp
adc
xchg
and
add
inc
testb
xlat
or
sti
outsl
and
outsl
or
shl
push
sbb
enter
movsb
repnz
jmp
clc
pop
je
loopne
pushf
mov
daa
pop
pop
and
push
inc
xchg
in
cmp
mov
mov
fadds
pop
orl
and
or
and
ret
xchg
movsb
mov
mov
xchg
aaa
jno
int
sbb
adc
mov
xchg
rcrb
imul
xchg
mov
mov
fwait
xor
scas
cmp
pushf
lret
imul
push
test
lea
mov
stos
push
push
ficoms
lds
sti
jmp
mov
lcall
dec
cmp
test
lods
shrl
xor
fstl
or
in
cld
imul
imul
sub
jnp
clc
test
jbe
inc
mov
xchg
xchg
std
dec
cmc
jno
loopne
cli
sbb
mov
push
stos
jno
rolb
dec
mov
or
pusha
aam
loopne
sbb
xchg
es
dec
xlat
xor
jge
outsl
lock
dec
gs
push
into
sbb
mov
sub
je
popw
push
push
cs
roll
cs
xlat
and
add
pop
push
mov
jo
sub
or
pushl
inc
repz
sti
out
fcmove
jg
xchg
mov
mov
dec
cmp
out
push
sbb
mov
je
cmp
sub
stos
std
xchg
xchg
add
mov
jl
repnz
std
outsl
push
xchg
and
xorl
sbbb
insl
add
or
out
scas
in
jg
or
cmp
cmp
sub
orl
stos
fldenv
push
ljmp
sub
pop
push
mov
outsb
int3
dec
cmpsl
mov
push
sub
xchg
lret
pop
and
rcl
push
mov
cld
push
incb
pop
mov
adc
lcall
cmp
aaa
mov
adc
lret
mov
addl
xor
mov
in
add
dec
add
loop
rclb
mov
mov
clc
xchg
dec
dec
and
sub
mov
in
and
mov
loopne
mov
mov
pusha
repz
pop
mov
mov
movsb
add
orb
inc
mov
ret
cli
mov
insl
sar
and
je
lea
sbb
arpl
pusha
mov
xchg
xchg
jno
fwait
inc
sbb
cltd
stos
adc
or
std
lcall
cltd
loop
mov
in
pop
add
inc
pop
fwait
mov
jnp
push
sub
dec
cmpxchg
mov
dec
loope
add
pop
testl
movb
cmp
mov
mov
jo
mov
mov
mov
and
sub
adc
cmp
movsb
sub
inc
mov
dec
inc
cmpsb
mov
inc
orl
sbb
cmp
fmull
iret
sbb
je
xor
mov
das
fwait
sahf
push
pusha
daa
jl
inc
fnstcw
shll
rclb
mov
mov
sbb
jno
cmpsl
mov
add
adc
fistps
jb
dec
ficoml
xchg
xchg
mov
and
xchg
in
arpl
mov
push
jo
sar
pushf
and
jb
cmp
mov
jnp
push
ds
jbe
rolb
aam
int3
addr16
xchg
sbb
xorl
inc
int3
lds
and
sbb
iret
test
jne
push
je,pn
ja
and
pop
inc
mov
repnz
mov
fisttpl
mov
mov
hlt
mov
inc
adcb
xchg
pop
pop
in
insl
cs
push
arpl
mov
test
cwtl
inc
mov
arpl
and
test
cltd
inc
hlt
daa
movsl
cmp
or
inc
fwait
xchg
fwait
xchg
jo
sub
daa
stos
xlat
pop
fs
roll
test
inc
leave
loope
icebp
inc
push
push
push
out
cli
into
pushf
dec
lahf
dec
ret
inc
pop
mov
loope
mov
mov
or
jecxz
pop
xchg
sub
aaa
cs
xor
jmp
jmp
mov
sbb
jg
mov
sub
or
sbb
mov
cmp
and
cmp
test
pop
sahf
int3
enter
and
pop
leave
js
sahf
mov
dec
adc
mov
rorb
mov
inc
out
mov
sub
popa
xor
cmp
push
xor
test
lret
xchg
mov
ljmp
mov
popa
les
push
xor
xchg
or
aad
sub
xchg
ja
pop
xor
popa
jns
js
xor
dec
xor
push
repnz
shrb
in
fidivl
add
mov
stc
inc
ret
pusha
jecxz
mov
pop
inc
jno
mov
push
push
inc
mov
iret
xchg
add
sbb
adc
mov
jnp
out
cwtl
or
rolb
ss
je
push
xchg
aas
sbb
mov
dec
xchg
vmwrite
rclb
mov
push
or
pop
pop
or
sti
enter
mov
ds
cld
dec
push
stos
mov
pop
int
sbb
mov
js
icebp
jns
test
mul
cmc
pushf
and
fcoms
jne
push
adc
pop
fcmove
jae
push
rol
jl
arpl
push
inc
arpl
xor
push
sub
loop
or
sbb
inc
adc
jb
push
sub
mov
fidivrs
in
and
mov
mov
mov
jp
xor
out
push
popa
pusha
addb
and
sbb
fs
cmp
add
jecxz,pt
jno
repz
mov
mov
jns
or
cmp
lret
int3
jnp
and
xchg
dec
mov
dec
test
or
loop
in
xor
pop
fisttpl
sbb
cmp
clc
dec
int3
push
jo
push
sbb
mov
data16
mov
loop
dec
cmp
mov
cmpsb
xchg
jmp
mov
mov
mov
out
jns
loopne
sbb
iret
fisttpll
mov
jmp
xchg
pop
sbbb
xlat
rolb
sub
inc
sarl
mov
rorl
outsl
push
and
add
inc
ret
pop
shr
pop
push
lahf
ret
movsb
into
pop
xchg
mov
fidivl
inc
dec
mov
hlt
sub
jns
pop
into
inc
cmpsb
inc
mov
pop
lods
shl
mov
fisubrl
push
repz
push
loopne
test
into
push
fdivr
sub
inc
mov
mov
xchg
imul
cmpsl
sub
push
and
cs
pop
mov
iret
and
mov
pop
loope
and
inc
xchg
pop
in
gs
lods
or
sbb
push
rcl
clc
mov
push
or
cmp
jecxz
cmp
jp
or
mov
loop
push
adc
inc
and
lods
movsb
lahf
xor
cmp
adcl
sti
adc
dec
jne
in
enter
sbb
jbe
fbld
fisubs
inc
lods
adc
xor
ret
ja
out
xor
scas
or
push
out
or
push
aam
pop
xchg
adc
call
shll
movsl
sbb
mov
mov
daa
or
sub
test
cli
leave
mov
cmp
fwait
pop
into
fmull
in
xchg
icebp
hlt
imul
lock
cs
push
xlat
test
daa
sbb
push
sub
lods
lds
jp
sti
or
mov
pop
push
andb
push
icebp
pop
and
gs
das
inc
inc
sub
data16
mov
or
or
popa
jge
in
lods
bound
inc
and
push
in
test
arpl
and
or
jmp
jo
push
lret
cmp
cmpsb
push
sub
xchg
in
imul
jle
sub
push
ds
int
jge
mov
loopne
mov
pop
ja
ret
push
xchg
and
aam
jnp
jle
test
out
and
jbe
leave
dec
dec
jb
xor
repz
cwtl
outsb
insl
ret
mov
aam
outsl
rclb
incl
test
inc
popa
out
jne
mov
stos
sti
jmp
mov
das
pop
je
loope
push
lahf
push
das
popf
lretw
push
movsb
notb
cmp
push
scas
sbb
in
mov
out
mov
arpl
mov
or
aas
adcl
inc
dec
sub
popf
mov
mov
and
and
insb
hlt
pop
mov
cmp
sarl
inc
cmp
mov
pop
mov
push
and
pushf
xchg
mov
arpl
cmp
jns
mov
xor
push
jno
xchg
cmpsb
inc
setle
mov
ret
in
fwait
or
iret
inc
lods
cmpsl
imul
inc
dec
xor
push
mov
add
xor
outsl
adc
push
add
sub
sub
xor
dec
in
lret
or
jae
loop
fdivrl
es
les
push
clc
jg
mov
sbb
fs
lock
imul
add
xchg
and
fsubrl
sub
sub
in
sbb
aad
inc
inc
push
pop
or
or
je
inc
cmp
insb
dec
jmp
lds
mov
sub
mov
push
jnp
pop
sbb
lea
sbb
add
jnp
imul
loope
mov
push
mov
hlt
and
push
outsl
fucomp
pop
adc
cmp
das
shrl
negb
cltd
mov
fisttpl
fcmovbe
inc
or
mov
cld
jbe
fldcw
and
clc
push
cmpsl
add
add
daa
pop
stos
std
rcrl
es
inc
xor
outsb
and
push
outsb
icebp
mov
and
test
or
or
and
xlat
mov
push
sbb
xchg
mov
call
pop
cmp
sbb
js
aam
cmp
sub
out
ljmp
pop
lahf
mov
xchg
je
inc
or
ficoml
xor
pop
push
adc
pushf
mov
pushl
push
cs
out
adc
leave
test
sbb
int
jns
xor
push
loop
aaa
aaa
add
and
les
mov
sbb
dec
je
mul
dec
add
or
movsl
dec
sbb
shll
xchg
std
jo
jb
inc
pop
and
mov
ja
or
jne
scas
cmp
repz
rcrl
loop
sbb
mov
jae
cmp
cli
mov
pop
loope
enter
add
mov
mov
scas
ret
cmp
cmp
lret
dec
test
pop
add
inc
jae
add
and
in
mov
dec
push
je
xor
fcom
lahf
lds
arpl
xor
test
jge
subl
repz
es
lcall
push
mov
insb
pop
jmp
adc
sub
dec
push
push
leave
repnz
out
lds
adc
and
je
xor
mov
movsl
mov
ljmp
pop
jge
dec
dec
fistps
mov
sbb
inc
movsb
ja
dec
inc
shr
cmc
push
mov
or
xchg
imul
popf
mov
insl
mov
cmp
es
jno
scas
pushf
jne
inc
mov
mov
inc
lcall
jno
cld
lods
sbb
imul
jns
imul
mov
aad
add
sub
push
fistl
fptan
push
adc
cli
stos
jne
push
fwait
in
bound
stc
aad
dec
push
lods
mov
mov
sub
push
xchg
loopne
jmp
lock
pop
xchg
popf
push
xchg
scas
rorb
xchg
pushf
fsubrs
jb
and
mov
and
clc
outsb
leave
mov
push
mov
pop
ficomps
xchg
test
or
and
or
int
xchg
je
pop
inc
xchg
push
inc
lock
dec
inc
clc
fcoml
shll
popf
sub
push
sbb
mov
push
sbb
add
sbb
je
mov
out
lods
xchg
push
roll
jle
icebp
shl
outsb
xor
sarl
mov
mulb
lcall
rorl
or
jne
aas
push
outsb
xchg
lds
lds
test
push
xchg
mov
jg
sub
pushf
ds
das
add
sub
jmp
jp
cmp
or
and
ror
loopne
xor
std
xchg
lret
mov
sbb
sbb
fadds
mov
inc
sbbl
rcl
push
add
fs
movsb
push
mov
jne
push
add
pop
pop
ret
fstpl
push
pop
into
xor
dec
jnp
inc
gs
mov
movsb
aam
stc
iret
mov
outsb
fsts
pushf
mov
test
dec
jp
mov
push
mov
sarb
test
adc
or
ds
sbb
xor
xchg
dec
sti
dec
push
jae
test
and
push
sbb
jp
ffreep
shrb
cwtl
pop
loopne
lcall
int
mov
outsb
call
outsl
pop
aam
jl
lret
sbbb
lahf
jne
sbb
or
pop
sahf
and
fndisi(8087
aas
leave
hlt
adc
cmp
arpl
test
lahf
mov
stc
sub
jns
adc
adcl
jbe
lret
cmp
cmc
bound
es
jge
or
stos
cwtl
enter
mov
xchg
sbb
push
rcrb
xchg
xor
je
push
faddl
or
test
daa
adc
mov
mov
sbb
imul
adc
xor
cmc
pushf
cmpsb
dec
mov
mov
mov
movsl
rcrb
xor
mov
je,pn
cmc
mov
mov
jmp
or
std
mov
mov
nop
es
imul
push
addr16
arpl
and
add
or
push
fsubrl
lcall
jp
repnz
fwait
pop
xchg
jmp
mov
and
lret
lret
ror
mov
lret
mov
rorb
data16
addr16
cmpb
lds
stos
jbe
pop
arpl
out
cwtl
mov
xlat
sbb
popa
mov
cmpsb
pop
aas
and
int
cmpsb
dec
cmc
pop
or
leave
push
mov
je
xchg
fiadds
movsb
mov
sbb
dec
sbb
out
cwtl
rclb
cmp
int
das
gs
xor
jbe
add
les
xlat
or
and
jg
push
and
inc
adc
ret
push
lret
mov
jne
idiv
pushf
lret
pop
mov
iret
mov
jb
fstl
stos
lea
subl
pushf
fcoml
cltd
pop
icebp
inc
rolb
cmpsb
xor
popf
jo
out
enter
sub
sbb
rorb
daa
je
mov
iret
sbb
mov
into
lret
jne
test
mov
add
and
push
dec
das
mov
gs
je
cmp
mov
adc
mov
xor
inc
bound
outsl
jge
dec
mov
outsb
add
aas
cmp
sub
int3
cltd
dec
loop
lret
cmp
push
and
out
jne
loope
lods
loope
jmp
mov
push
xchg
adc
mov
mov
jle
jb
mov
lret
cmp
loop
jb
loope
sbb
push
or
mov
arpl
jle
icebp
dec
inc
orb
js
rorb
inc
sahf
mov
lods
or
add
mov
sti
movsb
push
fsubrp
mov
mulb
imul
xchg
mov
mov
loope
mov
mov
adc
dec
aas
pop
or
push
pop
int3
mov
mov
and
mov
cs
leave
data16
sbb
mov
add
push
xor
aaa
add
lods
mov
jne
shlb
in
cmp
push
push
popa
push
pop
outsb
xchg
mov
mov
pop
pop
stc
mov
mov
adc
push
push
insb
outsb
shl
ss
insl
inc
flds
out
add
leave
sub
das
mov
arpl
lahf
xorl
rcll
pop
add
mov
in
jle
xchg
gs
adc
xchg
notl
mov
mov
jno
lds
jae
xor
mov
cmpsl
xchg
daa
mov
js
sti
enter
idivb
enter
mov
loop
cld
sub
test
fucomi
adc
jmp
inc
enter
ret
sub
xor
cltd
mov
push
mov
test
add
cmpl
jmp
mov
or
fcomps
data16
or
popf
icebp
lret
lea
mov
lods
pop
pop
sarl
testb
sar
push
adc
push
stc
lods
repnz
into
jb
rclb
jle
jg
cltd
xchg
ud1
dec
pop
mov
mov
cmp
imul
clc
xchg
cld
scas
aam
icebp
pusha
add
cs
popf
bound
sbb
sub
aaa
into
shrb
out
sbb
dec
lock
movsl
xchg
pextrw
mov
xchg
jge
add
cmp
sub
stos
jnp
and
imul
mov
fnstenv
sbb
fbstp
mov
es
sahf
out
popa
or
sti
or
inc
adc
mov
outsl
sub
push
fldt
pop
inc
ret
add
add
sbb
mov
aam
mov
fmuls
jge
gs
add
pop
sbb
leave
dec
add
fildll
int
jg
add
jecxz
mov
fimull
mov
or
popf
decl
xchg
jne
xchg
shl
mov
sbb
imul
fisttpll
aad
mov
push
jbe
cmpsl
loop
push
in
xchg
leave
cmp
sub
bound
pushf
out
xchg
dec
inc
xchg
arpl
dec
sub
cmc
push
popf
sbb
pushf
or
cmpl
add
pop
scas
insl
lcall
mov
or
mov
test
xchg
adc
inc
popa
fwait
sbb
jnp
mov
lcall
aad
clc
jne
addr16
sbb
pop
cltd
lret
rcrb
roll
push
adc
or
out
clc
sar
rorl
push
inc
rclb
xor
inc
adc
adc
std
xorl
mov
xor
jl
cltd
cmc
bound
in
push
adc
sub
inc
mov
or
test
adc
es
xor
mov
hlt
lock
subl
push
rorl
loope
inc
adc
cmp
test
ret
xor
sub
in
push
popf
scas
pop
xor
sbb
mov
arpl
cmp
aad
cmp
cmp
inc
stos
test
shrb
sub
out
scas
aas
push
mov
sti
lods
mov
adc
scas
xor
aam
lret
sbb
out
imulb
jno
pushf
push
aad
jne
xchg
sub
add
or
add
mov
data16
fcompl
mov
cmpsl
add
int
cwtl
jb
shll
or
ja
adc
enter
or
or
ja
add
jl
mulb
mov
idivl
mov
test
repnz
loop
shl
add
sbb
inc
shll
inc
inc
inc
push
pop
in
loopne
push
jmp
out
shll
outsb
movsb
iret
and
xchg
mov
bound
lcall
sub
addr16
adc
and
or
pop
daa
and
jmp
mov
push
cmc
sbb
fs
and
pusha
stos
dec
pop
jmp
ror
jo
dec
mov
push
and
lock
push
fsts
jo
push
fcomps
or
mov
xchg
js
lret
les
xchg
js
aad
mov
inc
xorl
sub
inc
xchg
lods
repz
mov
or
scas
imul
clc
cmp
add
out
pop
cmp
rorb
out
nop
mov
sub
fsts
mov
sub
outsb
pop
or
jmp
fldcw
jae
imul
sbb
sarb
ljmp
adc
sub
nop
fs
es
ja
and
std
pop
dec
fwait
jb
mov
call
mov
bound
sub
dec
mov
lahf
dec
ror
gs
cwtl
stos
dec
jnp
sbb
push
push
je
sub
cmp
sbb
xrelease
cmpsl
sbbl
ret
add
mov
test
icebp
jnp
aad
orb
stos
repz
or
pushf
enter
lahf
cvttps2dq
mov
xor
and
xlat
jns
iret
loopne
dec
xor
xor
xchg
pusha
push
jb
loop
fnsave
push
lahf
imul
adc
pop
pop
and
dec
cwtl
or
dec
cmp
mov
fstpt
lods
daa
jo
xlat
lcall
mov
flds
and
imul
orb
or
js
aad
sub
xchg
and
and
jecxz
push
arpl
and
dec
orps
sbb
push
jnp
insl
arpl
lahf
pushf
repnz
cld
xor
sub
fsubl
cltd
divl
sub
sbb
sbb
jle
cmp
mov
fsubs
or
je
daa
fsubr
pop
mov
push
mov
jl
loope
insb
push
in
imul
inc
dec
push
rcrl
in
lret
xchg
xchg
jns
aam
test
in
into
xchg
and
xchg
fisubrl
fs
inc
cmpsb
andb
add
iret
mov
pop
lret
popa
sbb
in
mov
cmpl
repnz
mov
test
xchg
fnsave
and
and
jne
or
mov
jno
cmp
xchg
pop
push
repnz
push
jge
sub
xchg
inc
push
out
rcrl
fistl
mov
adc
orb
stos
scas
jg
vmovdqu
cmp
push
and
xchg
pop
ss
fld
ja
mov
mov
loope
mov
cwtl
pusha
dec
popf
cmpsl
lea
mov
clc
mov
jbe
test
push
enter
test
repnz
leave
shll
dec
lahf
inc
imul
xchg
scas
adc
outsl
movsb
or
in
or
push
cld
ds
sub
lret
adc
xchg
sbb
lcall
xorb
cmc
roll
mov
sub
xchg
je
xchg
push
ret
inc
sti
mov
outsl
sahf
push
push
push
testb
fxch
addr16
jno
sarb
cmpsl
mov
data16
and
jae
xlat
xchg
enter
ficomps
stos
inc
lahf
add
cmpsb
sbb
std
negb
leave
fcmovnbe
lahf
into
or
cmpsb
jecxz
or
push
stos
out
sbb
jne
adc
fsubr
les
test
iret
pusha
or
sbb
fstl
xchg
inc
fimuls
lods
push
test
pop
fidivrs
mov
or
and
jg
xor
sub
cmp
rorl
negb
xchg
in
neg
scas
sbb
and
or
inc
std
jl,pn
sub
cmp
enter
jle
xchg
pop
jg
fnstcw
pop
cmpsl
xor
cmp
adc
lods
fsubl
andl
pop
orb
push
mov
out
pop
mov
fcompl
scas
xor
pusha
mov
loope
mov
cld
mov
sti
mov
or
imul
lock
rcll
pop
mov
enter
dec
or
mov
jne
xlat
pop
push
xchg
movsl
adc
mov
push
push
push
imul
or
outsb
insb
lcall
cs
adc
fadds
mov
out
ror
push
dec
jl
sti
cmpl
or
scas
addr16
jmp
pushf
inc
sub
loope
incl
mov
std
jb
add
jecxz
fucomp
or
inc
push
hlt
push
mov
jnp
cmpsb
sub
divb
add
jbe
mov
fnstsw
in
ss
jge
lods
sbb
cmp
sub
js
test
pop
fdiv
pop
pop
js
sbb
cmp
addr16
mov
sti
cmp
push
out
js
addb
xor
pop
outsl
add
jnp
adc
mov
xor
aaa
xchg
adc
rcrb
movsl
popf
adc
nop
mov
inc
xor
or
inc
js
mov
gs
push
mov
sub
dec
fimuls
lea
cli
mov
aad
stos
mov
add
push
cli
add
lock
xchg
sbb
xchg
mov
ljmp
dec
push
cmp
ljmp
or
sti
dec
rcrb
add
xor
fnsave
mov
test
sub
cmp
pop
mov
cmpb
inc
dec
lds
xchg
cmpsb
jmp
rolb
pop
aas
jne
mov
insl
dec
inc
orl
insl
ljmp
jae
ror
jg
pop
loopne
push
idivb
pop
hlt
outsb
sub
sub
outsl
imul
inc
inc
xor
ficoml
mov
sahf
dec
es
aam
or
xchg
lahf
popf
fistps
les
aaa
and
idivl
push
push
in
stos
pop
int
dec
dec
sub
mov
jno
mov
cmp
adc
aaa
lods
adc
fldenv
std
leave
shll
fdivrl
popa
es
lods
lds
dec
dec
sub
or
leave
iret
bound
pusha
cmp
jo
push
pop
test
movsb
outsb
jo
sbb
addr16
lahf
or
push
and
sbb
adcb
mov
pushf
mov
lods
pop
cmpsb
out
pop
pop
fisubl
loope
cmp
sub
into
aaa
or
sub
xor
mov
sbb
scas
inc
and
push
out
cmpsb
adc
pop
data16
cltd
or
or
xchg
mov
push
push
xor
stc
ljmp
xchg
adc
jno
pusha
scas
cmp
sub
aad
and
movsl
push
ror
push
ret
aam
test
jg
aam
enter
and
std
pop
pop
sbb
mov
mov
or
jle
mov
outsl
imul
cmc
fisubrl
sbb
jbe
mov
cmp
push
add
fldt
imul
insl
inc
xchg
popa
in
jl
cld
inc
je
ds
mov
jle
adc
xor
leave
xchg
mov
insb
pop
sahf
or
inc
fnsave
pop
mov
sar
mov
jecxz
lods
xor
leave
mov
inc
push
or
lret
push
loope
inc
pop
inc
mov
rorl
mov
shrb
in
mov
xchg
sti
mov
inc
cmp
rorb
std
repnz
stos
pop
and
fidivs
push
mov
push
lds
lahf
cmp
fmull
stc
arpl
sub
xorl
inc
lcall
mov
clc
push
jmp
loopne
inc
cwtl
pop
pop
inc
sub
cmp
and
jns
mov
int
xor
je
rolb
jne
xchg
jmp
push
sub
movsl
fsubrp
pop
push
jbe
scas
jns
mov
out
inc
cmpsb
add
dec
xchg
xchg
ljmp
jmp
ds
fisubrl
es
lcall
icebp
out
ljmp
adc
xor
shrb
mov
js
stos
clc
cli
mov
mov
adc
call
psubq
into
jecxz
dec
sub
movsl
mov
arpl
mov
jne
test
push
dec
or
int
rol
sbb
cmp
aas
and
loope
add
mov
out
outsl
pop
fists
inc
es
shlb
or
xchg
lods
pop
xchg
fsubs
cltd
mov
shrb
sub
int3
add
xchg
out
mov
dec
xor
sbb
inc
push
pop
add
pop
fisttps
jb
jg
inc
stc
lea
inc
shll
dec
jne
aad
je
jo
adc
dec
dec
jne
jge
idivl
mov
loop
cwtl
test
imul
scas
inc
icebp
inc
lds
sahf
xorb
daa
imul
stc
aas
aam
push
xor
xchg
cli
mov
push
cltd
and
std
pop
add
mov
mov
test
std
sub
push
adc
scas
cmpsb
repnz
into
sbb
cmc
stos
aam
push
cli
pushf
push
sbb
ds
mov
lea
sti
mov
ret
pusha
inc
xor
mov
les
mov
add
stc
dec
adc
cmp
cmpsl
cmpsb
jecxz
add
jb
sarl
inc
sarb
or
ja
inc
jns
addl
mov
repz
jmp
add
and
pushf
push
out
loopne
ja
mov
push
mov
sbb
push
sbb
mov
jecxz
jg
mov
loopne
inc
into
jo
sbb
xor
mov
cli
pushf
and
adc
and
mov
cmp
xchg
sti
xchg
and
stc
jmp
sub
aas
jbe
rorl
mov
and
cmpsb
dec
dec
les
push
jle
fdivrl
adc
leave
push
insb
mov
xchg
fwait
dec
mov
cli
jbe
push
in
adc
ja
mov
pop
cmp
jns
pop
cmpb
lock
push
push
orl
adcb
scas
cmpsl
cltd
mov
lea
push
add
add
test
insb
mov
orl
dec
dec
cmp
pop
inc
lock
mov
loopne
adc
inc
mov
pop
aad
mov
mov
fld1
pusha
jecxz
loopne
xchg
mov
xlat
push
pop
aas
dec
inc
sub
inc
addr16
movsb
and
sub
sub
sbb
out
cmpsl
xchg
iret
into
rorb
addr16
mov
call
cmp
sub
es
in
cmp
mov
push
pop
data16
and
cmpsb
jl
scas
push
je
les
rcrb
gs
pop
cld
jmp
fsubrs
popf
add
lcall
in
cli
jg
lea
pop
inc
ret
lea
ljmp
lods
or
addr16
adc
daa
sub
mov
mul
popf
insl
xchg
and
out
jae
cmp
rcrl
lock
idivb
popa
mov
and
imul
add
jno
icebp
adc
and
sbb
iret
lea
add
daa
iret
inc
sbb
fbld
loope
das
cmp
loopne
dec
lea
lods
add
sbb
push
cmp
push
rol
xchg
pop
mov
popa
mov
add
clc
and
jmp
mov
dec
push
cmp
js
ss
mov
idivl
stc
add
iret
insb
in
add
push
dec
pop
mov
pop
push
repnz
cmp
clc
aaa
add
in
mov
mov
adc
cwtl
stos
add
mov
mov
push
loopne
cmp
jle
fs
cmp
cmp
push
stc
jge
jne
or
test
pop
xor
enter
call
cmp
test
add
fimuls
cli
mov
jo
adc
lods
jae
aam
xchg
fidivrs
mov
cwtl
pop
sar
arpl
incb
adc
push
cs
pop
cmp
sbb
leave
stos
scas
xchg
aas
sbb
xor
pop
inc
shr
jle
xchg
lret
pop
and
xlat
jnp
add
xor
xchg
inc
sbb
sar
mov
dec
push
in
inc
pusha
or
lds
mov
test
clc
mov
sub
lcall
or
inc
jbe
jmp
fsubr
push
xor
rorl
in
adc
push
push
push
xchg
ret
xchg
jo
fadds
cld
mov
jb
mov
xor
jno
mov
inc
mov
adc
cmpb
xor
push
jg
fldt
ja
sarl
cmp
pop
shrb
insb
jg
mov
cmpsl
mov
inc
std
adc
sbb
aad
std
imul
push
daa
push
movsb
mov
xchg
adc
pop
sub
mov
loope
jmp
lock
dec
mov
mov
jmp
adc
cmp
mov
add
dec
inc
std
inc
adc
das
adc
lcall
mov
aam
in
jb
jle
scas
mov
sub
into
imul
movsb
mov
fwait
arpl
fwait
jns
loop
scas
rcrl
xchg
out
scas
out
pusha
pop
cmp
push
cmp
xor
bt
cmpsb
cmp
add
addb
std
in
sbb
aam
jle
sub
lahf
arpl
inc
xlat
outsl
sbb
stos
xchg
lods
adc
mov
jae
mov
out
dec
xchg
negl
or
lret
adc
mov
daa
sub
and
pop
cmpl
lcall
ljmp
push
test
or
lock
mov
add
xor
add
ss
or
jg
scas
je
inc
adc
mov
lds
jae
push
or
cmpsl
stos
fisubs
dec
insl
fisubrl
pop
rcll
sti
sub
push
mov
in
cltd
and
in
mov
xchg
pop
mov
push
aaa
outsb
aas
sti
call
imul
pop
fadds
sbb
addb
in
jmp
dec
loope
sub
xor
and
jmp
sbb
aas
or
sbb
enter
cmp
dec
faddl
std
fdivrl
rclb
lods
jmp
pop
bound
xlat
jne
rol
and
add
and
in
xchg
xor
xorb
add
jl
lret
and
imul
xchg
inc
adc
cmp
cld
dec
push
push
dec
push
test
push
push
jge
cwtl
stc
lahf
repz
mov
push
and
fistps
mov
gs
xor
jns
nop
add
sbb
scas
xchg
ficoms
movsl
daa
sbb
inc
cmp
repnz
xchg
or
xor
std
aas
lods
shll
sbb
mov
test
movsl
lds
jne
test
jg
and
adc
inc
ds
xchg
cmp
mov
sarb
xorb
aaa
in
push
xchg
and
jno
xchg
push
mov
repnz
xchg
mov
notb
pop
mov
div
jp
add
mov
stos
sub
cli
push
jecxz
push
fbld
and
sbbl
movsb
adc
mov
dec
pop
jnp
push
sahf
mov
adc
mov
mov
jge
push
test
in
je
popf
test
and
jl
cmc
fists
insb
xlat
mov
ret
xchg
outsl
jecxz
stos
fnstcw
pop
push
add
aas
aam
dec
and
lcall
mov
xchg
clc
stos
ja
mov
dec
orb
gs
inc
orl
pop
std
bound
inc
hlt
mov
fldl
arpl
cmc
ljmp
out
fistpll
sub
lea
sbb
sbb
push
sub
sub
xor
push
test
pop
xlat
add
in
pop
lods
pop
or
jnp
adc
test
pop
pop
add
roll
sbb
xchg
repnz
faddp
push
cmp
fimull
mov
add
sbb
shr
movsl
mov
adc
das
pusha
in
push
push
xchg
stos
repnz
cwtl
loopne
adc
inc
jmp
test
cltd
out
push
mov
pop
mov
or
fisubrl
mov
lret
jbe
push
or
shrb
mov
mov
xchg
xchg
je
and
xor
sub
adc
lods
lds
insl
fildl
jg
out
jb
cmp
ret
aas
mov
arpl
aad
in
cmp
out
notb
push
in
test
add
jbe
or
jo
cs
addr16
repz
fldcw
outsl
mov
fstpl
jne
xor
adc
dec
movsb
test
subl
xor
sub
push
dec
xchg
loopne
push
mov
pushf
std
ret
cmp
xor
jle
add
imul
sbb
add
test
fnstcw
aam
rclb
or
dec
cli
xchg
frstor
cmc
mov
push
xor
push
movsb
cs
push
les
mov
inc
ret
dec
cmp
inc
outsb
out
nop
popf
pop
jns
or
in
mov
push
stos
aaa
loopne
es
pop
mov
push
push
les
std
sarb
clc
cmp
mov
xchg
outsl
data16
sbb
inc
int3
nop
inc
out
adc
jnp
in
testl
js
pusha
mov
in
mov
in
and
pop
xchg
fwait
cmp
mov
or
int
mov
ja
rcll
push
mov
xchg
add
into
jo
push
mov
call
mov
or
jbe
sbb
fstpt
push
jnp
push
ja
xor
repz
in
cmc
outsl
and
mov
mov
out
data16
stos
sub
hlt
xlat
sahf
push
loope
cmc
inc
add
nop
jl
jl
aad
roll
les
out
dec
lock
clc
pushl
orl
dec
xchg
pop
cwtl
or
inc
mov
pusha
mov
lods
insb
and
sbbb
cwtl
nop
lret
or
xchg
lods
addr16
aas
daa
cmp
mov
push
fcomip
jbe
repz
sbb
add
arpl
nop
int3
xchg
inc
cmp
andb
push
mov
hlt
dec
repz
mov
add
adc
mov
arpl
clc
or
cmp
pop
dec
sub
add
pop
iret
adc
mov
int
pop
mov
mov
mov
or
and
push
cmp
mov
push
hlt
add
adc
rcl
lods
cmp
xchg
xchg
adc
mov
mov
cmp
adc
cmp
mov
iret
dec
scas
imul
je
fsts
sti
pusha
andl
fsub
xchg
sti
icebp
aam
cmc
mov
shlb
addl
jns
lods
aaa
jne
in
mov
call
loopne
pop
xor
out
imul
fucomp
pop
mov
out
mov
xor
hlt
push
int
xchg
pop
test
fwait
test
inc
loope
out
insb
xlat
pop
repz
jmp
sbbl
inc
xchg
out
mov
lahf
pop
push
sub
add
ljmp
xchg
pusha
fdivp
fucomi
imul
pop
stos
cmp
sarb
fsts
jge
movsb
or
adc
jl
mov
outsl
sbb
pop
cmp
outsl
insb
idiv
jae
divps
in
andb
cmpsl
jmp
mov
inc
cmp
mov
lret
push
test
sbb
jg
cmp
loop
adc
inc
xlat
mov
adc
ljmp
test
pushf
adc
es
pushf
aas
aaa
ret
stc
les
push
push
int
dec
jne
setg
mov
jae
ds
push
or
push
icebp
xchg
mov
push
in
out
inc
adc
scas
mov
mov
pop
arpl
in
je
leave
xchg
rcrl
in
fldt
ja
add
or
es
test
sub
in
int
sti
sbb
xor
aaa
js
aam
lcall
push
scas
ss
lods
test
jmp
roll
inc
dec
int
adc
lret
push
pop
mov
sahf
or
and
mov
mov
jne
outsl
loopne
inc
pop
jmp
pop
orl
out
and
lock
inc
cli
pop
and
pop
pusha
lret
dec
add
scas
dec
mov
lock
sbb
dec
mov
jge
loop
adc
xor
mov
int3
or
mov
out
mov
in
mov
mov
sub
mov
xchg
imul
cltd
movhlps
sbb
push
loopne
xor
push
and
sub
jo
cmp
sahf
loopne
push
push
jb
movsb
iret
dec
mov
mov
mov
pop
iret
pop
andb
ds
ret
cmp
xlat
roll
stos
cli
clc
sbb
or
adcl
xor
cmp
adc
xor
jo
add
xor
jno
mov
add
cld
sub
imul
xchg
je
imul
lods
adc
in
xlat
into
cwtl
add
and
dec
fildll
add
cmpsb
jb
in
pop
adc
adc
outsb
rcrb
mov
inc
dec
sbb
xchg
mov
push
jbe
loopne
imul
nop
lcall
mov
shll
xchg
jmp
xor
daa
xchg
in
mov
stc
ss
idivl
xchg
scas
dec
xchg
adc
or
and
cmp
mov
rcr
fiaddl
push
mov
test
enter
ljmp
fldt
sti
mov
mov
cmp
inc
in
and
addr16
enter
das
daa
mov
fdivrs
jl
pop
mov
pop
insl
inc
negb
je
fistpll
jns
or
inc
outsl
xchg
movsl
cmp
rcrl
pop
adc
imul
bound
push
mov
or
movsb
fwait
loope
iret
add
xor
imul
pushf
mov
clc
jle
pop
fwait
mov
sub
repnz
pop
inc
cmpsb
jmp
mov
push
or
das
dec
lods
fdivrs
mov
dec
test
jl
or
adc
pusha
arpl
mov
pop
repz
push
pop
fstpt
mov
ficoml
inc
iret
jbe
push
mov
push
add
stos
data16
dec
mov
pop
push
stc
dec
subb
out
gs
inc
jbe
adc
out
or
xchg
cmp
shl
jns
mov
or
adc
cmp
fcomp
or
mov
out
xor
mov
adc
ljmp
dec
dec
xorl
test
movsb
adc
pop
pop
jae
push
stc
shlb
mov
imul
push
lahf
dec
jbe
mov
inc
xor
addb
push
je
and
movsl
sub
or
adc
mov
loopne
xor
jmp
jmp
aad
mov
imul
popf
jae
imul
sar
jns
pop
xchg
movsl
roll
add
sub
rorl
mov
jns
mov
outsb
xor
jl
fisubrs
add
pop
pmulhw
lock
push
sub
xlat
clc
js
inc
movsl
jl
cmp
pop
inc
jp
mov
sbb
sahf
sub
add
add
cmp
ret
ja
adc
adc
fldt
lret
lods
arpl
xchg
pop
inc
mov
mov
mov
pop
out
in
cmp
cli
dec
aam
sub
inc
adc
out
cmpsl
jmp
and
fistl
in
mov
pusha
or
adc
pop
shlb
fs
iret
call
sub
sbb
xor
push
aaa
or
push
fstp
mov
js
sbb
add
sub
scas
sub
aas
xor
jmp
mov
shrb
sub
sahf
out
fucom
fldt
dec
sbb
add
adc
loopne
test
aam
aaa
sar
aad
mov
cmp
inc
xor
cmp
iret
mov
stos
jg
or
lahf
push
jg
leave
hlt
xchg
mov
ret
cmp
or
iret
cmp
scas
lcall
fadds
xchg
lcall
mov
pop
loop
dec
fwait
xor
aaa
ret
and
test
fwait
add
outsl
shlb
or
xchg
inc
shlb
or
subb
sbbl
pop
roll
bound
add
ds
fwait
mov
fs
lock
and
int3
lcall
cltd
mov
bound
adc
inc
pop
dec
iret
jne
sbb
cld
je
andl
imul
addr16
adc
push
xchg
xchg
xchg
mov
dec
and
fstps
xor
jnp
inc
add
scas
into
or
jb
push
jle
cli
cmp
jb
stc
pushf
daa
jp
add
push
jmp
pop
xorb
pop
out
mov
out
stos
mov
fs
sub
xchg
je
adc
and
adc
mov
loop
pop
in
sbb
sbb
mov
outsl
mov
enter
mov
shrb
inc
sbb
clc
pop
or
lcall
shlb
push
aam
mov
mov
push
int3
mov
shlb
adc
cmp
fucomip
mov
xchg
rcr
enter
sub
loop
cmp
cmp
orb
adc
adc
jbe
xchg
rcrb
ffree
or
clc
imul
lret
pop
test
push
push
call
in
jne
push
cmp
add
out
push
adcl
in
mov
fwait
mov
xor
sbb
ss
or
pop
add
mov
iret
cli
mov
out
lret
mov
call
mov
jg
enter
daa
pop
push
test
xor
aas
sbb
nop
xor
push
adc
mov
xor
into
xor
adc
subb
jmp
sbb
pop
lods
inc
push
jg
popa
sub
ljmp
pop
jo
imul
shrb
int3
dec
sti
fnstenv
out
xchg
testl
test
test
out
dec
xor
lahf
mov
dec
adc
push
iret
pop
lock
sbb
xchg
ljmp
rcrl
gs
daa
and
fs
xchg
int
or
xchg
hlt
adc
xor
stos
pusha
cmpsb
sub
sub
lcall
daa
mov
jl
sti
pop
out
sbb
pop
mov
test
cmp
pop
das
cld
mov
or
sub
pop
lcall
idivl
lea
xor
xchg
jecxz
sbb
aas
mov
sub
addr16
stc
mov
jo
cs
mov
jbe
gs
cmp
jmp
push
mov
xchg
pop
and
mov
std
jns
pop
mov
or
shlb
mov
outsb
ret
pop
cmpsb
pop
int
mov
jle
adcl
jnp
mov
mov
scas
mov
daa
bound
cs
fmuls
fmuls
mov
sahf
mov
clc
ljmp
push
xchg
jge
repz
clc
stos
sbb
fmull
xor
ficoms
sub
xchg
cmp
jl
inc
andb
and
ret
mov
xor
js
aaa
pop
jnp
sbb
rcr
ds
subl
cli
ret
dec
sbb
mov
mov
xchg
loop
ss
insb
pop
xchg
cmpsb
aas
inc
push
inc
xor
adc
in
mov
cmpsl
mov
xchg
adc
sub
push
lret
xor
and
jbe
sbb
inc
adc
mov
vdivps
ficoms
jge
es
fists
cld
push
jecxz
and
outsl
mov
push
adc
or
mov
je
push
idivb
adc
rcr
fistpll
sub
sbb
and
mov
xchg
hlt
rclb
pop
push
dec
js
in
sbb
xchg
push
and
inc
mov
stos
sti
mov
push
mov
adc
adc
push
hlt
and
cmpsb
pop
test
sbb
cmp
cli
dec
dec
jbe
jmp
in
test
aam
icebp
mov
mov
aas
dec
or
cmc
repz
les
mov
stos
mov
ficoms
les
jl
out
push
adc
incb
imul
insl
lods
jl
sub
jnp
rcll
push
cmp
loope
cld
xchg
jp
lock
push
cld
push
daa
das
jp
stos
push
ja
pop
fcos
jmp
rcrl
xchg
xlat
xchg
popa
xchg
jl
in
sbb
mov
and
cmpsl
out
jne
div
andb
scas
pop
jns
adc
mov
arpl
or
js
jb
inc
mov
iret
xchg
std
sub
shll
xchg
stos
jne
pusha
mov
mov
outsb
fcoms
imul
jle
xchg
sarl
loope
dec
xor
jge
or
cmpl
adc
dec
inc
shll
xchg
sub
es
popa
or
jbe
lahf
jno
push
lea
sub
and
and
rcrb
cltd
ljmp
inc
xchg
movsl
mov
add
leave
dec
mov
insl
arpl
and
in
ss
popf
dec
lods
push
xlat
xchg
sbb
loope
push
add
and
test
inc
inc
and
ret
pop
jle
roll
adc
lods
addb
inc
iret
xor
icebp
sbb
xor
daa
insl
js
or
in
mov
pop
mov
push
inc
push
xor
and
pop
int
stos
or
test
adc
xchg
in
xor
add
imul
pusha
lea
jb
in
pushf
push
jno
lods
xchg
je
lahf
mov
jnp
and
xchg
cwtl
sti
cwtl
pushf
xchg
sarl
hlt
cmp
cmp
mov
adc
add
sbb
aaa
dec
inc
pop
xchg
cmp
or
inc
ret
sub
and
pop
jle
sub
jae
aaa
pop
int
xchg
ret
pusha
cmp
movsl
jg
or
fwait
imul
cmpsl
mov
jo
ficompl
bound
mov
and
lods
xchg
xor
mov
test
sahf
jl
into
dec
lcall
mov
cs
mov
add
out
push
ret
mov
fcompl
cmpsl
sub
std
push
adc
pop
outsl
adc
mov
daa
push
nop
push
ds
jle
jb
aam
arpl
jbe
mov
mov
xchg
mov
dec
and
sbb
dec
scas
push
inc
in
imul
xchg
fildl
lods
cmp
dec
adc
rorl
hlt
and
mov
xor
clc
popf
loopne
orb
std
sbb
xchg
lret
xor
mov
jbe
or
cmpsb
adc
dec
daa
xor
add
inc
mov
icebp
dec
mov
add
imul
jp
fs
mov
xchg
push
mov
jo
dec
adcl
xchg
cmp
cltd
dec
xor
pop
scas
in
test
jl
repz
es
mov
mov
dec
fisubs
push
mov
push
pop
sub
lock
mov
and
sub
add
xorb
repnz
push
les
or
out
into
insl
jnp
andl
adc
popf
fcom
in
sahf
repz
push
ror
in
push
cmp
orl
mov
mov
or
mov
loop
xchg
into
or
xchg
das
xchg
jne
enter
and
ret
gs
jb
dec
push
jbe
push
jns
aas
and
shl
mov
je
push
rcll
arpl
shlb
xor
xchg
adc
aad
dec
xchg
jo
push
jnp
clc
jg
adc
pop
sbb
mov
lods
loope
outsb
je
popf
xchg
cmp
add
sub
hlt
mov
je
or
insl
lcall
mov
mov
and
fcoml
fwait
mov
incb
mov
dec
mov
adc
push
in
leave
add
call
js
sahf
inc
cmp
push
sub
cmpsl
jmp
xchg
push
arpl
cmc
mov
add
inc
outsb
aaa
fcomp
or
mov
sbb
rorl
jno
mov
fucomip
outsl
xchg
iret
into
xchg
mov
inc
imul
pop
push
leave
inc
and
ret
mull
pushf
cmovle
xchg
inc
mov
loop
ss
jg
fsubl
sub
stos
jno
testl
test
je
aad
inc
test
movsl
cmp
mov
push
loope
lock
outsl
pop
sti
fisubrs
mov
rcll
cmp
orps
cmc
jns
sbb
jae
cwtl
or
fldl
mov
mov
cmp
xadd
cmpsl
xor
push
inc
lret
xchg
in
es
shll
add
adc
lea
fstps
pop
ss
test
pop
push
js
xor
or
sub
icebp
inc
inc
scas
out
pop
jp
add
cmpsb
stos
sbb
add
pcmpgtd
push
xor
dec
cmc
aaa
mov
mov
sub
sbb
push
xchg
loop
arpl
sub
inc
popa
jne
outsl
xchg
add
movsl
pop
adc
fdivl
cwtl
inc
mov
inc
or
lods
pop
inc
xchg
ljmp
xchg
addb
lret
insb
arpl
int
xor
mov
xchg
and
fwait
mov
xor
jno
mov
pusha
mov
jbe
stc
ret
mov
aaa
cwtl
pop
mov
inc
adc
dec
mov
jl
cwtl
rcrl
movsb
sub
flds
ret
mov
mov
sbb
fidivrl
cmpsl
stos
jnp
int3
mov
xor
stc
and
aam
mov
cs
push
dec
imul
sub
push
pop
push
stos
pop
mov
inc
fsubl
bound
and
loope
sysret
aas
and
pop
sbb
clc
jp
movsb
insl
xor
dec
pop
adc
or
xor
cwtl
aas
sub
call
sahf
dec
gs
aaa
scas
mov
test
cmp
aad
dec
in
adcl
cmc
movsb
inc
mov
inc
fs
mov
ljmp
das
orb
pusha
xor
ret
and
sub
cmp
std
jne
loop
inc
mov
lahf
enter
mov
loopne
xor
scas
sahf
lods
inc
shlb
fists
add
imul
ret
imul
pop
lds
repz
jp
push
insb
dec
cmpl
pop
lods
lret
lea
push
and
in
mov
jle
pop
stos
ljmp
xchg
insb
push
scas
mov
adcb
sub
jno
mov
push
mov
mov
movl
gs
outsb
push
out
sti
in
xchg
and
std
inc
jle
mov
lock
aaa
or
mov
sub
in
fbld
lahf
push
jecxz
xor
sahf
test
jae
popf
jo
test
pop
shl
mov
repz
mov
sub
enter
mov
sti
push
shr
loopne
cmp
push
cwtl
push
or
lods
mov
xchg
sub
jecxz
fdivrs
test
fwait
call
fnsave
mov
subl
cmp
and
jle
mov
dec
pmulhw
popf
lock
cmp
test
xor
movsl
or
filds
repz
jns
mov
xchg
add
and
andl
daa
std
jns
nop
call
loop
lods
lret
ljmp
mov
scas
shl
int
inc
addr16
dec
jp
dec
mov
frstor
dec
cs
cwtl
sub
cmp
mov
cmpsl
xor
lods
xchg
js
mov
push
lret
sub
outsl
cmp
pop
leave
inc
sub
mov
mov
fiadds
mov
sbb
push
mov
movsb
stc
ss
add
jae
push
clc
repnz
cmp
mov
push
xchg
inc
arpl
mov
add
out
adc
lcall
dec
andb
loop
loope
add
pop
dec
xor
sbb
dec
mov
sub
add
sub
lret
int
fcomps
and
xorl
sub
mov
adc
pop
adc
xchg
sahf
or
das
test
mov
inc
sarb
jo
mov
mov
sti
pop
fdiv
sahf
iret
inc
pop
xchg
bound
mov
sub
movsl
xchg
mov
xchg
iret
push
test
dec
xchg
shlb
push
lds
daa
repnz
jns
add
adc
jbe
sub
mov
xchg
ret
mov
les
in
sbb
out
pop
pop
je
dec
movsl
xor
jno
test
add
xor
adc
mov
popf
xchg
jle
sub
arpl
pop
mov
mov
push
cmp
ja
adc
rcrl
dec
mulps
stos
or
sub
pop
push
and
sub
xchg
pop
add
into
pop
lock
mov
aad
jo
cmp
in
js
in
cmp
sub
fadds
pop
dec
pop
lock
or
dec
out
outsb
addr16
cld
test
xchg
cli
ret
iret
popa
pop
sub
outsl
inc
int
add
div
xor
mov
push
notb
mov
pushf
addr16
in
pop
call
fistps
sub
adc
mov
pop
sbb
and
arpl
cli
out
out
xchg
ds
ss
lret
dec
mov
lahf
and
xor
lds
andb
push
dec
movsl
fnstenv
stos
or
and
jecxz
or
lea
push
jno
xchg
cmp
in
mov
push
rclb
cvtdq2ps
and
sbb
int3
stos
xor
into
pushf
jbe
adc
cmp
aas
bound
pop
outsb
lea
jbe
adc
jns
jmp
and
and
sahf
hlt
stc
outsl
adc
add
gs
xchg
dec
sub
xchg
push
repnz
test
push
sbb
lret
mov
push
jle
mov
push
scas
cli
dec
push
lcall
cmp
adc
ror
pop
into
hlt
testl
pop
and
pop
pop
mov
xchg
orb
push
xlat
repnz
out
les
dec
scas
gs
push
push
inc
push
ret
xchg
fs
inc
jns
cmpsl
shll
push
js
sbb
cli
jno
std
hlt
xchg
sbb
mov
jb
clc
loope
test
imul
mov
shl
stos
lds
cmp
lahf
lods
adc
nop
sub
or
push
icebp
movsl
xor
fcompl
sbb
push
aaa
and
inc
adc
sub
outsb
xchg
dec
cmc
jns
lea
mov
push
push
repnz
and
mov
push
and
sti
leave
push
loop
jb
add
and
mov
xchg
dec
mov
clc
xor
and
mov
lcall
jle
fisubrl
mov
jo
aas
jns
sti
mov
fnstsw
lret
fldl
jo
push
mov
mov
xor
in
push
je
xor
sbb
ror
mov
sbbb
int3
and
cwtl
out
shlb
lds
dec
or
test
xchg
aas
adcb
push
gs
je
ja
adc
les
jl
arpl
clc
xor
out
loop
ficomps
adc
je
punpcklwd
sbb
in
adc
adc
xor
loope
jno
adc
sbb
insl
mov
cmp
cmp
mov
popa
cmp
inc
jbe
or
jae
loop
mov
pop
rcll
inc
pop
sahf
sbb
arpl
jmp
mov
mull
jp
fcomi
cmp
adc
jmp
xchg
mov
pop
sbb
aaa
ja
mov
xor
jae
fstpt
cmp
inc
rcr
xor
mov
and
sub
aam
and
testb
xor
jnp
xor
shl
inc
fucom
mov
pop
mov
xchg
inc
jp
sbb
fistl
xchg
sub
cwtl
cmpsb
enter
cld
rcrb
push
jno
mov
inc
fbld
aaa
outsl
rorl
das
addr16
inc
sahf
aaa
xchg
cmpsl
xor
sbb
nop
mov
jg
in
sub
cmp
pusha
add
mov
mov
fistl
clc
dec
xor
incb
jnp
sbb
pop
lock
es
mov
js
iret
mov
push
aas
pop
dec
sub
test
and
inc
sti
lds
fildll
and
ljmp
cld
push
das
mov
sbb
pop
mov
inc
jge
mov
call
pop
sbb
or
pop
xchg
dec
dec
sbb
push
mov
dec
cmpsl
sub
push
lods
cld
or
push
push
hlt
cmc
sub
mov
or
rclb
fmuls
mov
int3
iret
mov
popf
jne
shrb
mov
add
call
cmp
lods
into
outsb
push
loope
call
xchg
add
cld
test
and
and
dec
sahf
test
out
lock
jbe
shll
shlb
mov
push
mov
stos
jecxz
sbb
cmpsl
and
xchg
mov
dec
stos
ljmp
dec
pop
add
mov
xchg
aaa
dec
mov
lahf
cmpl
pop
jo
and
or
push
xchg
jmp
add
bound
pop
xchg
jge
jecxz
movsl
ljmp
out
pop
and
xchg
add
dec
push
xorb
sub
lds
sti
call
push
outsb
fwait
jmp
cmpsl
mov
push
mov
cmp
push
lret
repnz
out
jg
and
xchg
roll
sub
lods
std
out
jne
mov
add
and
inc
add
out
mov
shl
push
lods
inc
cmp
mov
sbb
adcl
dec
mov
fildll
mov
mov
in
jmp
idivl
rdtsc
mov
sbb
cmp
imul
cmpl
in
cli
cli
clc
loop
pop
pusha
pop
cli
inc
lock
cmpl
insb
loopne
adc
mov
fwait
pop
fwait
cltd
lahf
iret
pop
mov
or
jge
pop
cmc
push
xorb
loopne
loopne
mov
jecxz
or
testb
cli
fdivrp
clc
and
inc
mov
mov
dec
adc
std
pop
xor
cmp
shlb
jne
addr16
test
clc
sub
sub
arpl
dec
daa
mov
test
and
jb
mov
cs
leave
inc
push
sbb
mov
and
ss
les
mov
xchg
mov
add
fstpt
mov
shlb
adc
cmp
fucomip
jne
inc
mov
into
leave
data16
lea
adc
mov
xchg
rolb
mov
movsb
sti
subl
shld
out
out
inc
dec
push
cmp
jecxz
sahf
pop
aas
rcl
cmp
ja
push
mov
sub
xchg
mov
mov
push
lahf
mov
pop
inc
jecxz
daa
sbb
lods
push
loope
mov
mov
xchg
sbb
jmp
fsts
mov
mov
repnz
cld
xchg
movsb
paddsb
out
or
loopne
push
stos
bound
mov
rcll
incl
mov
daa
xchg
cmp
xchg
or
daa
sbb
jl
push
pop
loop
mov
out
sub
push
pop
add
arpl
cmp
mov
decl
fsubrp
mov
dec
xorl
lahf
xchg
inc
cld
sbb
insb
sbb
push
subl
xchg
fisttps
adc
in
outsl
adc
jl
scas
xor
mov
mov
test
les
jmp
or
mov
mov
ret
out
sbb
push
add
pop
stos
inc
dec
int3
les
in
pop
int
loop
data16
test
rcll
lods
ja
in
cmp
je
call
push
or
aas
movsb
rorl
jmp
mov
mov
add
loop
inc
mov
sbb
in
mov
jg
out
mov
xchg
repnz
jl
inc
nop
stc
inc
scas
fldenv
inc
xorl
add
jae
push
mov
mov
stos
jg
ja
sub
clc
mov
mov
cmp
sbb
repnz
cmp
loopne
fsts
int
mov
and
hlt
xchg
jmp
aam
push
testl
movsl
lods
pop
jbe
sbbl
pop
aad
add
in
add
jo
mov
incb
sub
test
cmp
in
xchg
imul
push
out
cmc
vmovupd
sahf
into
pop
add
rcrl
into
jl
mov
scas
pop
adc
js
js
fistl
xchg
adc
mov
repz
lock
mov
fsts
pop
dec
pop
enter
xchg
flds
xor
rol
push
and
sub
fisubrs
mov
pop
or
stc
push
divl
cmp
std
outsl
xchg
in
or
sbb
call
and
xor
popa
cmp
xor
mov
rolb
in
dec
xchg
or
jge
sbb
sbb
ret
outsl
je
push
xor
aam
sbb
push
mov
or
pop
mov
pop
test
lret
jns
xorl
push
mov
fwait
jp
ret
sub
aaa
loop
push
inc
js
jo
push
sbb
nop
in
pop
pop
jnp
xor
mov
mov
stc
jge
add
movsb
iret
and
jp
mov
lret
jecxz
adc
lahf
pop
push
dec
xlat
lcall
cwtl
pop
in
adc
sbb
ror
dec
lcall
adc
sbb
mov
xor
cmp
sbb
fcompl
sbb
mov
outsb
add
push
shr
lods
repz
sbb
sarb
push
imul
jl
dec
add
shrl
sub
mov
sahf
cmpsl
clc
xchg
mov
push
mov
dec
outsb
test
repnz
push
mov
and
out
or
mov
push
sarb
lcall
push
mov
mov
sbb
divl
mov
pushf
arpl
xchg
pop
adc
pop
xchg
sub
lea
pop
dec
jb
or
add
pop
inc
ret
mov
mov
stc
sbb
mov
xor
cmpsl
and
jp
xchg
stos
xchg
mov
jl
adc
lret
imul
lret
das
adc
int3
or
ret
cwtl
stos
pop
clc
mov
lds
or
inc
shr
daa
dec
in
adc
pop
pop
popf
in
call
fsts
fdivs
mov
test
insb
notl
or
push
mov
nop
iret
je
xor
ljmp
inc
je
sub
sarl
xchg
mov
call
lods
lods
mov
adc
mov
ljmp
shll
std
out
or
adc
sub
sbb
cld
add
jecxz
sbb
xchg
jp
jnp
lret
or
push
shlb
lock
mov
xorl
popf
sub
jae
mov
or
push
in
push
jecxz
imul
repnz
fwait
pop
ror
jb
mov
lret
inc
mov
jp
push
repz
and
out
pusha
pushf
inc
lret
jmp
int3
inc
mov
jns
or
add
test
mov
mov
dec
sub
arpl
out
shll
and
cwtl
mov
in
outsb
xchg
pop
jp
fbld
sti
subl
loope
dec
stc
adc
or
je
icebp
adc
mov
mov
cli
lea
cmpsb
inc
pop
cltd
or
adc
dec
scas
pop
mov
fstpl
ret
lret
nop
les
mov
cmp
lret
notl
sub
mov
aaa
pop
jg
pop
cmpsl
lods
test
mov
adc
lret
mov
pop
push
icebp
jp
xor
mov
sbb
jge
jge
jmp
dec
pop
mov
push
or
bound
in
aas
std
insl
shlb
sub
popf
mov
dec
xor
push
xor
insl
lret
int
ror
dec
add
xor
dec
push
imul
sbb
in
jno
jg
mov
arpl
pop
add
pop
lock
xchg
cmp
mov
cmp
iret
pop
mov
add
leave
adc
negl
scas
ret
iret
add
push
clc
pop
fistps
or
inc
incl
pop
popa
je
daa
ret
mov
imul
xor
cmpsb
dec
xor
and
mov
adc
and
and
xchg
cwtl
les
sbb
push
or
jno
sbb
xchg
or
movsl
in
imul
pop
jno
jle
mov
jo
test
xchg
pop
xchg
aad
and
add
add
iret
dec
inc
jle
or
inc
jne
ret
mov
vstmxcsr
add
mov
pop
arpl
or
add
pop
ds
pop
pop
popf
das
sub
mov
mov
jne
mov
imul
ret
mov
fs
outsb
movsl
in
sbb
ds
dec
lea
jg
mov
xchg
dec
xor
adc
inc
cmp
mov
pop
pop
ret
ret
cmp
mov
mov
addb
inc
nop
in
pop
cmc
pusha
jns
fistl
dec
lods
add
mov
xor
push
int
in
add
or
add
int3
jb
adc
add
jecxz
push
cli
es
push
add
sub
fs
cltd
inc
jo
es
movb
xchg
and
mov
dec
fldt
cmp
or
xor
outsb
fcmovb
movsb
loope
adc
aas
pop
or
scas
mov
popf
mov
or
push
fistpll
mov
sbb
repz
push
popa
cmp
arpl
addb
cmp
mov
cwtl
xor
mov
xchg
sub
xor
ds
jp
pop
or
inc
cmpsb
cmpsl
je
out
xchg
push
sub
and
add
push
or
test
or
adc
lods
add
xor
cmp
add
sbb
gs
push
mov
ss
add
scas
inc
loope
and
divl
outsl
cmp
push
dec
xchg
mov
ljmp
cmp
inc
push
pusha
test
mov
std
cli
fsts
mov
icebp
in
rcr
jecxz
xor
jae
xchg
jl
add
divb
enter
and
sub
jmp
xor
push
adc
data16
push
fwait
lods
out
jae
bswap
dec
cmc
lock
test
movl
scas
imul
push
mov
rcr
in
dec
clc
mov
jp
lret
push
mov
dec
cmp
out
mov
cmp
jecxz
dec
dec
lea
inc
loope
inc
popf
cmp
das
mov
mov
jp
mov
repz
daa
es
pop
movsb
in
out
fwait
mov
flds
dec
andb
adc
xlat
and
repz
jae
popf
mov
insl
into
cltd
scas
scas
dec
dec
jle
sbb
loop
lods
push
and
out
or
daa
cld
ja
das
sbb
xchg
cmp
jbe
dec
loopne
mov
outsl
into
pop
jnp
stos
sub
mov
cs
aaa
aad
push
ror
cmpsl
aam
lods
mov
ret
fdivrs
jo
jne
popa
push
out
pusha
ds
xchg
outsl
scas
lods
push
pop
pop
jns
mov
mov
push
pop
shll
into
ja
cltd
gs
jmp
in
xchg
and
inc
inc
loop
cmpsb
stos
jb
cmpsb
into
scas
sub
xchg
sbb
test
das
int
sbb
push
mov
jecxz
xchg
inc
cmp
aam
gs
rorb
fisttpll
mov
xchg
jle
repnz
mov
loopne
inc
mov
fildll
lret
pop
sbb
notb
sarb
stc
aad
xor
cmc
shlb
mov
jnp
dec
xchg
repnz
xlat
ss
push
jb
pusha
stos
pop
pop
fwait
icebp
fisubrs
sbb
sbb
push
rorb
xor
inc
xchg
adc
jl
xor
std
enter
jmp
cwtl
inc
lret
sti
stos
jb
jnp
lcall
mov
push
mov
aam
or
test
fists
inc
dec
xor
or
pop
dec
inc
movsl
sbb
push
mov
inc
subl
call
ret
lock
and
jmp
fabs
add
add
das
rcll
dec
sbb
push
into
fcoml
mov
jmp
cmpsl
push
pop
out
or
mov
sub
sub
push
mov
mov
in
push
mov
cmpl
or
mov
ret
or
stos
cmc
fcoml
jmp
into
insb
push
jg
stos
cwtl
int3
ds
adc
inc
ds
add
pop
push
jmp
int
pop
push
add
hlt
addr16
enter
mov
roll
aad
out
test
sub
out
clc
clc
cmp
push
in
push
ljmp
mov
jnp
faddl
shlb
fistps
cmp
test
mov
jle
mov
popa
cvttps2pi
notb
pop
nop
ret
or
test
jno
sub
sub
xor
add
sbb
pop
jecxz
sti
push
adc
movsb
shll
add
jo
sub
and
mov
push
sbb
les
xor
mov
pop
push
xorb
jo
test
pop
popa
jbe,pt
fmuls
outsb
cmp
int3
dec
cmpsl
aas
out
mov
dec
shlb
adc
adc
aas
in
pop
sub
adc
int
dec
mov
insb
movsl
adc
cs
mov
jecxz
pop
and
aam
test
xchg
cld
dec
mov
repz
and
mov
out
dec
and
pop
pop
mov
push
add
push
orb
add
xchg
mov
in
xchg
sub
mov
clc
jmp
pushf
sbb
xchg
pop
sub
mov
mov
in
popa
fprem
std
fidivrs
loop
xor
std
popf
xor
test
pop
mov
or
sbb
rcrl
hlt
das
dec
inc
add
or
outsl
cli
jae
scas
mov
mov
mov
insb
int
sbbl
imul
in
or
or
insb
clc
jbe
xchg
mov
adc
xor
mov
shll
pop
sarb
xchg
xor
push
push
insb
mov
sub
out
fisubrs
test
xlat
divl
xchg
mov
pop
sbb
xlat
mov
shrb
std
in
int
fstp
adc
inc
jl
add
popf
leave
in
std
mov
adc
leave
jmp
adc
je
gs
and
xchg
fldt
pop
mov
adc
inc
pop
es
outsb
push
dec
mov
cmpsl
cwtl
sub
stos
sbb
fwait
push
loopne
mov
jp
mov
xchg
pop
lcall
imul
leave
push
adc
pop
lds
stos
outsb
adc
add
pop
cmp
ss
or
or
jne
ret
pop
sub
mov
push
cmp
mov
pop
in
dec
mov
pop
packuswb
lds
loop
stos
push
sub
xchg
addr16
and
aas
outsb
test
push
xor
and
loopne
sbb
jecxz
and
sub
xor
push
movsb
pop
loope
cmpsl
divb
inc
mov
jne
ret
bnd
js
xchg
dec
sti
sub
fs
les
in
adc
mov
sar
dec
and
ljmp
ja
mov
mull
jae
sub
in
into
and
mov
jp
test
xchg
insb
frstor
imul
stos
jnp
and
dec
add
inc
adc
pushf
mov
popf
mov
jmp
sub
xor
mov
push
mov
jp
push
and
in
mov
mov
sti
inc
inc
or
xchg
test
inc
mov
stos
jp
in
sbb
jbe
notb
aad
lock
movsl
cmp
mov
pop
mov
sub
pop
xchg
push
test
mov
pop
inc
ret
test
pop
imull
loop
subl
sbb
pop
ret
test
iret
mov
lret
mov
pop
sbbb
loope
push
mov
jb
daa
fcomip
into
out
stos
jne
inc
adc
pop
sbb
sbbb
popf
adc
repz
dec
arpl
shl
push
cmp
jecxz
pop
sbb
jp
sbb
ror
lcall
aad
lods
inc
or
mov
sbb
call
mov
xor
sahf
test
push
out
mov
jl
inc
into
in
ja
enter
imul
pop
mov
jnp
popl
in
adc
out
ficoml
xchg
inc
aad
pop
mov
mov
cmp
mov
xchg
stc
mov
mov
pop
dec
out
xor
std
mov
rolb
cmc
push
inc
mov
test
adc
in
pop
mov
adc
add
jne
xchg
mov
mov
xchg
insb
adc
loope
in
xor
push
push
dec
adc
sub
int3
cmp
imul
decl
inc
xor
and
cwtl
jnp
cmp
fadds
add
and
cwtl
fidivrl
adc
cmp
js
nop
inc
shrb
adc
popa
mov
loope
mov
cmp
jecxz
jmp
mov
int
sub
out
lods
mov
leave
adc
repnz
adc
mov
sti
push
jg
sub
rcrl
jle
dec
cmp
int
cmpsl
shll
es
test
cmp
arpl
inc
outsb
mov
and
ds
aad
mov
dec
jmp
xor
incb
sbbl
or
pop
adc
fldcw
pop
push
outsl
and
in
push
hlt
and
push
out
adc
xchg
push
sbb
movsl
jbe
pop
dec
xlat
lea
decl
cwtl
jo
mov
movsb
xchg
movsb
mov
loope
dec
ds
cmpl
addl
jle
sbb
jno
jl
loope
push
ljmp
lret
sbbl
mov
test
negl
sub
inc
inc
fmull
aad
insl
dec
andl
dec
mov
lock
test
pop
add
inc
int
xchg
adc
sarl
loope
push
sbb
cmp
ds
outsl
pop
ret
je
add
lahf
and
sub
pop
mov
insl
das
insl
sti
ficomps
pop
lcall
inc
in
xchg
mov
mov
and
jge
stc
inc
movsl
xchg
dec
outsl
cmp
subb
mov
gs
mov
or
add
loope
add
data16
movsb
fstpl
ss
jno
jmp
dec
ficoml
insl
dec
push
sahf
and
dec
cltd
sbb
dec
call
loope
mov
sub
jo
or
mov
imul
pop
mov
outsl
pop
std
rclb
mov
inc
out
testb
test
add
insb
push
jl
jge
add
push
scas
popf
xchg
pop
mov
push
fdivl
cmp
jecxz
mov
and
and
jne,pt
and
xchg
mov
adc
out
sbb
jg
pop
cmpsl
hlt
cld
stos
mov
xor
mov
xchg
xor
mov
dec
sbb
sbb
pop
sti
sub
subl
dec
arpl
pusha
popf
dec
cmp
dec
adc
lock
cli
mov
lea
shlb
mov
sub
bound
in
int3
pop
clc
in
lretw
cltd
divb
hlt
mov
movsl
push
mov
mov
mov
subb
jb
dec
mov
sti
sub
xlat
sub
jg
lods
add
lcall
cwtl
pusha
sub
testl
lods
inc
mov
and
leave
mov
jb
je
jge,pt
pop
xor
jl
mov
fcom
inc
fistpl
sti
daa
pushf
cs
dec
cmp
addr16
jmp
push
pop
pop
sbb
sbb
test
cmp
inc
fsubrl
int
cmp
cmpb
fwait
push
xor
je
mov
loope
jge
xchg
jecxz
and
mov
mov
mov
or
iret
cmp
sbb
jne
or
aad
stc
dec
add
ss
test
outsl
push
dec
and
jle
cmp
mov
lcall
mov
std
or
and
mov
fs
jecxz
shl
cmp
push
mov
or
inc
ja
dec
xchg
push
mov
aas
les
addl
push
dec
push
fsubrl
mov
cmp
xchg
push
jb
sub
insb
and
cmc
cmpsb
dec
xchg
add
das
dec
sbb
sbb
jno
mov
ficompl
inc
faddp
xchg
dec
bound
bndstx
cli
cwtl
adc
daa
jnp
or
inc
sub
imull
imul
dec
pop
inc
dec
ja
fiaddl
fidivrs
push
fwait
pushf
fildll
push
add
mov
gs
pop
xchg
add
push
adc
nop
jmp
mov
lods
mov
pushf
fadds
dec
pop
jle
and
call
cmp
or
mov
lods
jl
imul
adc
and
jns
ret
mov
pop
sahf
xlat
das
push
adc
and
xor
push
out
push
or
fiaddl
inc
mov
or
xor
imul
imul
call
or
cmc
shl
enter
movsb
sub
popf
shr
add
mov
into
xor
lods
mov
xor
das
push
pop
fsubrl
jb
cld
jmp
pop
mov
cwtl
jno
and
icebp
sbb
leave
mov
push
xchg
jp
icebp
cmp
icebp
outsb
outsl
gs
pop
sbb
fcmovnu
add
dec
add
imul
inc
pop
and
aas
repnz
mov
mov
pop
mov
inc
aam
dec
jnp
sahf
insl
nop
adc
test
scas
fimull
shl
mov
mov
jne
ficoms
iret
sub
stc
sti
in
test
lret
cmpsl
pop
push
and
push
test
movsb
testl
pop
dec
in
xchg
icebp
sub
sub
or
daa
cmpsl
aam
aam
sti
or
jo
ljmp
fsubl
pop
popf
data16
popa
xchg
push
outsb
pop
iret
int
jb
mov
icebp
in
std
stos
adc
jb
push
jg
xor
pop
cmp
aad
inc
sub
clc
add
xor
xchg
fldcw
pushf
mov
in
ss
mov
cs
inc
xchg
mov
leave
cmc
cmp
movsl
pop
fs
jp
xchg
inc
and
aas
jae
ret
js
xchg
xorl
inc
add
xchg
sti
cltd
dec
mov
scas
cmp
xor
lea
push
lahf
loopne
push
pop
inc
pusha
mov
icebp
xchg
enter
lods
imulb
mov
popa
add
fcoml
call
mov
adc
ss
mov
pusha
or
mov
add
rcrb
cwtl
and
inc
mov
jp
add
ja
pop
js
inc
mov
aas
mov
dec
adc
fndisi(8087
inc
mov
shll
mov
insl
cmp
push
in
ja
fcoms
movsl
adc
ss
pop
daa
pusha
loopne
jmp
pop
mov
ljmp
pop
test
mov
adc
rcr
add
jno
andl
mov
mov
fwait
inc
pushf
sbb
call
mov
push
jbe
cmp
adc
sbb
lods
je
mov
lods
push
lret
cmp
call
mov
into
scas
shl
test
cmp
xchg
loop
fisubl
xchg
mov
movb
mov
int3
in
mov
mov
inc
jne
insl
or
or
mov
add
cwtl
jne
divb
mov
out
push
xchg
out
test
mov
lods
lret
cld
out
aas
scas
xchg
iret
mov
mov
test
idivb
pop
lret
adc
out
lcall
add
notb
enter
dec
inc
fmull
xor
pop
mov
addr16
xchg
ds
outsb
scas
loope
dec
mov
daa
enter
jo
sub
nop
sbb
jnp
pop
adc
testb
pusha
sub
aaa
in
repnz
mov
out
lret
push
push
inc
xchg
popa
mov
sbbl
icebp
popa
insl
imul
add
enter
inc
andb
xor
test
or
push
push
xchg
popl
clc
jb
decl
mov
lret
sbb
mulb
aas
push
xchg
cld
xor
stc
ss
orl
cmp
popa
pusha
sti
pop
rol
sub
hlt
test
sub
out
aas
push
mov
ret
in
and
fldt
dec
and
add
xchg
pop
inc
push
xchg
dec
sahf
sbb
cmp
aam
test
add
jbe
popa
mov
jnp
or
cmpl
mov
dec
mov
out
insb
imul
pop
stc
ljmp
mov
inc
subl
testl
push
leave
scas
loope
push
movsl
mov
js
sbb
sub
test
cld
jecxz
mov
sbb
mov
or
psraw
pop
or
jmp
loopne
add
lock
jle
fstp
xchg
or
adc
int3
pop
push
add
rcl
ficoml
mov
ror
mov
stos
rcll
push
outsb
sbb
es
gs
imul
sub
push
cli
jecxz
daa
push
mov
push
pop
dec
jno
dec
push
sbb
pop
movsl
in
inc
jae
jo
inc
enter
mov
ss
cs
movsb
xchg
imul
or
inc
addr16
xlat
out
xor
cmp
mov
sbb
lcall
mov
jmp
push
lods
lret
in
shl
push
sbb
xor
add
add
fidivrs
lahf
stc
add
leave
push
fs
pop
mov
and
sbb
dec
mov
fistpl
mov
fmuls
sub
and
popf
jo
ss
push
mov
or
cmp
es
and
test
push
shr
dec
pop
in
out
dec
cs
mov
outsb
loopne
ret
test
mov
leave
cmp
mov
jp
cmpsb
push
jmp
hlt
push
sbb
mov
add
imul
adc
sub
imull
push
xor
inc
scas
scas
cmp
clc
pop
sbb
lods
sarl
push
rclb
lock
cmp
mov
pop
je
mov
out
pusha
cmp
subb
pop
popf
subb
fidivl
cmp
mov
leave
cmp
sti
int3
pop
mov
mov
imul
dec
mov
out
leave
lods
adc
jmp
out
inc
add
mov
hlt
adc
ljmp
xchg
icebp
and
or
adc
in
pop
js
or
cmp
push
fiaddl
addr16
xor
mov
pop
das
ret
out
shr
divb
cmp
xor
add
fistl
jns
pop
sbb
sbb
test
push
mov
xchg
mov
iret
aam
sbbb
test
stos
sub
imul
sbb
sub
faddl
push
stos
clc
mov
popf
rcrl
inc
in
dec
jnp
mov
arpl
ret
in
add
cmp
add
imul
add
pop
xorb
add
inc
xchg
inc
outsb
pop
push
mov
scas
xchg
in
lcall
aas
push
ss
jg
cmp
add
push
push
cltd
or
or
sar
adc
int3
pop
sub
arpl
ljmp
leave
shrl
inc
jge
or
sub
add
test
xor
rolb
insb
dec
rcrl
out
popl
not
pusha
mov
ljmp
mov
mov
adc
adc
aaa
pushf
popa
mov
or
addl
js
mov
dec
dec
pop
mov
fmul
add
fucomip
pusha
mov
pushf
arpl
and
inc
mov
mov
sub
repnz
inc
mov
push
pop
lds
lea
or
pop
dec
js
idivl
jb
fsubrl
je
adc
movsl
out
pop
push
adc
and
mov
decb
jge
xorl
fcoms
mov
insl
mov
fs
sub
jo
shl
push
mov
pop
aaa
sti
imul
or
iret
imul
jo
lahf
movsl
or
cmc
pop
and
insl
sub
sub
sub
movsl
sub
sbb
loope
fwait
push
lret
inc
out
sbb
fmul
add
test
adc
push
dec
ja
into
sbb
test
test
mov
xor
loop
aam
pop
loop
popa
inc
std
rol
jp
iret
fs
lret
jns
int3
repnz
mov
pop
mul
les
or
adc
psllw
in
push
add
stc
mov
jno
inc
lods
dec
in
inc
add
aam
mov
fucomp
movsl
dec
add
cmp
inc
call
dec
xchg
or
aaa
jbe
mov
mov
mov
das
mov
xchg
add
lahf
lahf
scas
and
lcall
mov
mov
push
push
adc
sub
or
mov
or
add
fsubl
lock
insb
int3
repz
inc
test
mov
js
jno
sbb
xor
xchg
inc
dec
mov
lret
sub
test
leave
jae
mov
addr16
in
int3
and
bound
pop
or
leave
push
sub
mov
cmp
jo
mov
fistpl
sub
int
push
loope
out
stos
jne
subl
and
mov
loopne
mov
jno
push
mov
loope
in
xor
mov
sub
popa
or
data16
bound
pop
add
lcall
fwait
or
mov
data16
adc
in
push
mov
sub
ret
fdivrl
ds
xchg
jg
pop
sub
out
xchg
adc
lret
mov
xchg
sub
gs
hlt
ret
stos
es
and
fbld
fnstsw
ss
hlt
push
mov
xchg
fdivl
hlt
or
push
fstpl
in
mov
sbb
mov
notb
inc
fstpt
fstpt
xlat
movb
push
or
test
jne
loope
inc
xchg
in
inc
bnd
jb
xor
jmp
dec
shrl
insl
test
pop
nop
push
pop
pop
incl
and
pop
fldt
xor
leave
jo
rolb
xchg
and
dec
xchg
in
or
adc
mov
lock
into
cmp
inc
cmp
das
sub
movsb
aaa
in
push
mov
jge
jbe
xchg
mov
fnstenv
pop
inc
enter
inc
mov
cmp
push
add
or
or
imulb
xchg
bound
sbb
aas
xor
xchg
adc
aam
or
sbb
daa
or
pop
mov
stos
cmp
xchg
aas
fildl
test
xchg
in
jl
mov
jecxz
cmp
js
in
cmp
add
icebp
jmp
stc
adc
mov
outsl
and
or
bound
mov
or
lahf
stos
push
jb
test
push
jp
daa
aad
shll
xchg
xchg
push
cltd
xor
xchg
out
mov
xor
ljmp
inc
pop
fnstcw
and
and
out
fldt
mov
pop
pop
inc
repz
inc
enter
addr16
mov
push
dec
mov
ret
add
xchg
in
cmp
xor
aam
xchg
add
jl
or
sbb
mov
jmp
push
inc
mov
pusha
scas
and
sub
cs
xchg
xlat
dec
mov
into
adc
lods
out
mov
xchg
sub
sub
popa
xlat
and
cmp
cmp
popa
aas
push
cmp
ljmp
mov
cltd
repnz
rcll
int3
mov
mov
sub
jae
add
push
aam
jle
stc
xor
popf
lret
popf
pop
movsb
cmp
or
push
in
movzbl
mov
stos
jns
mov
pushf
jmp
and
fisubrl
aam
xor
jo
adc
mov
movsl
mov
outsl
add
sub
gs
xchg
adc
xorb
push
xor
sbb
jmp
jo
pop
push
outsl
inc
movsl
sub
out
adc
sbb
add
stc
sbb
pushf
sbb
mov
push
inc
mov
and
outsb
pmaxsw
push
mov
fdivrl
addr16
push
sub
pop
mov
adc
or
out
incb
nop
sbb
mov
cmp
ss
push
pop
pop
pusha
cmc
push
clc
jg
ja
sbb
test
lret
push
rorb
sub
push
xor
in
cltd
mov
mov
pop
fisubrs
xlat
pop
dec
idivb
loop
mul
jb
shl
ds
inc
mov
div
sbb
sub
icebp
push
xor
pop
lret
push
jnp
sub
sahf
inc
jae
xor
adc
mov
je
xor
cmp
sub
push
cmp
dec
or
dec
pop
loope
push
push
sub
out
push
scas
loope
dec
mov
adc
sub
mov
fwait
adc
add
in
add
fs
cmp
insl
repnz
cmc
mov
mov
cmp
push
mov
sub
loopne
xor
mov
lret
add
add
daa
dec
xor
test
or
lret
cld
clc
mov
in
or
adcl
in
les
into
pop
icebp
xchg
stos
fldcw
jno
inc
xor
gs
pop
inc
js
dec
push
sti
or
ss
icebp
xchg
repnz
mov
inc
inc
jo
bound
sti
mov
mov
repnz
bound
nop
pop
fwait
cmp
aaa
jnp
shlb
pop
jae
dec
jno
mul
imul
cli
push
mov
xchg
fsubrs
shll
jbe
testb
cmpsl
dec
pop
mov
cmp
jns
enter
add
xchg
pop
adc
sarb
addr16
call
mov
pop
icebp
adc
repz
push
jecxz
mov
andb
mov
fistl
adc
fistpll
xchg
xchg
or
ret
js
imul
xchg
int
addl
add
test
gs
ror
jp
mov
dec
lds
loope
mov
push
xor
stos
mov
push
pop
ret
xchg
inc
daa
dec
mov
loope
add
arpl
or
sub
push
scas
sub
add
repnz
cld
push
outsb
push
popa
or
cmp
inc
ret
push
push
xchg
int
es
aam
cltd
pop
mov
cmp
push
insb
push
stc
aam
arpl
repnz
into
repz
jecxz
xor
pop
push
rol
call
jb
or
rolb
in
xor
bound
out
imul
cld
pop
or
rcrb
inc
test
mov
mov
sbb
fsubrl
out
push
cmp
push
lahf
push
dec
xchg
ficomps
mov
lock
and
add
ds
cmp
loop
lcall
cs
dec
mov
shlb
cmp
dec
inc
jle
hlt
das
jmp
add
lock
cwtl
dec
ja
dec
fistpll
movsl
push
jl
jb
mov
rcl
or
ljmp
jmp
push
imul
xchg
test
hlt
fldt
mov
lcall
lret
lock
in
xor
es
sbb
cltd
jb
jbe
arpl
lods
insl
test
push
mov
stos
aad
and
outsb
lcall
imul
adc
mov
add
sbb
std
cmc
stc
cmp
inc
cmp
inc
cwtl
sbb
hlt
dec
lock
sub
adc
stos
bound
mov
outsb
lds
int3
adcb
adc
in
inc
imul
sbb
loopne
xor
pop
hlt
mov
sti
mov
push
inc
jne
inc
push
mov
or
lock
in
enter
test
and
sahf
cltd
xchg
push
ja
shrl
xor
add
and
fildll
or
add
cld
jne
out
sahf
mov
dec
cli
scas
js
inc
mov
xchg
mov
pop
mov
push
mov
js
into
in
ja
ds
mov
lds
lods
iret
dec
push
mov
push
xlat
sbb
sub
ljmp
xorl
ds
push
or
push
inc
fstpt
loop
mov
fidivl
repz
int
mov
fsubl
pop
dec
sbb
push
int
inc
pop
cmp
lea
cmc
pop
scas
scas
out
mov
adc
stc
jb
cmp
sub
sahf
in
jnp
cli
stc
pusha
mov
dec
xchg
scas
imul
je
push
and
mov
inc
mov
mov
orb
mov
sub
sub
mov
mov
push
mov
outsl
mov
cmp
outsb
movb
ljmp
mov
pop
push
pop
inc
and
sahf
popf
add
sar
pushf
lcall
fs
std
sub
scas
arpl
push
in
fmuls
shrl
loop
adc
cmp
inc
popf
js
pop
outsl
cmpsl
pop
lds
jae
insl
mov
adc
lcall
mov
xchg
or
xchg
stos
and
xchg
cmp
sub
loope
dec
stos
fimuls
jb
insl
fstl
or
bswap
lret
sub
stc
cmp
adc
pop
lahf
mov
jb
push
sbb
cmp
jg
out
add
or
xor
pop
in
movsl
mov
mov
cmp
ficoml
jbe
inc
ss
mov
push
pushf
jp
into
stc
sub
ja
shll
xchg
or
lods
loope
addr16
loop
repnz
xchg
inc
xchg
push
adc
adc
adc
push
and
das
adc
gs
je
mov
add
into
or
popf
xchg
je
pusha
xchg
mov
pop
or
mov
and
sti
mov
and
cmp
icebp
mov
cmp
jp
push
add
mov
ret
lods
cs
popf
adc
inc
inc
xlat
jbe
xchg
inc
sbb
fwait
test
arpl
negb
jae
or
dec
sbb
nop
xor
inc
adc
fdivrl
stos
das
in
jl
cmp
call
sbb
adc
mov
dec
or
clc
cmpsb
movsb
jnp
mov
outsb
sub
emms
mov
sahf
pop
push
xor
or
scas
xchg
push
stos
fdivl
jno
mov
cmpsb
repz
fcmovne
aad
adc
sub
mov
sub
pop
daa
in
push
pop
imul
dec
subb
out
push
and
test
mov
mov
push
popa
dec
daa
sub
iret
inc
push
scas
sahf
xor
aad
sub
push
addl
aaa
pusha
mov
fidivrs
out
lock
and
jo
mov
dec
imul
push
mov
mov
jns
cmp
ss
loopne
jb
lret
mov
popf
or
jle
pop
inc
into
mov
pop
or
ljmp
dec
mov
adc
push
jle
mov
lods
push
icebp
or
mov
subb
mov
push
data16
jg
pushf
adc
pusha
insl
push
pop
stos
dec
and
orl
pop
aas
or
imul
rorl
sti
repnz
mov
lahf
inc
lret
mov
cmp
out
dec
push
mov
das
lcall
adc
mov
clc
fistps
outsl
sarl
adc
int
sub
movsl
cmp
cs
xor
in
push
and
je
mov
pop
dec
ss
mov
mov
sarl
inc
ret
repz
jp
stos
test
adc
das
mov
or
mov
inc
cli
dec
sti
mov
out
pop
in
fstl
dec
cs
ret
sti
dec
orl
fmuls
mov
gs
cmp
inc
sbb
ss
cwtl
aas
cmc
jg
mov
push
sbb
sahf
jns
sub
std
xor
mov
leave
xchg
mov
int
jnp
fwait
mov
sbb
jmp
sbb
push
and
mov
out
add
les
ficoml
ljmp
add
mov
mov
fs
outsl
jl
pop
movsl
jle
push
push
lcall
jne
inc
jl
insl
xor
xor
daa
int
cld
mov
cmpsl
adc
ss
inc
jns
aaa
add
inc
mov
pop
and
push
or
jmp
shrl
mov
pusha
adc
repnz
xchg
lret
inc
mov
push
add
cltd
sahf
push
push
dec
in
inc
les
xchg
int
mov
int
insl
push
bound
in
jp
sbb
cmp
dec
gs
xorl
add
ret
es
pop
dec
cld
loop
inc
leave
mov
mov
lcall
sub
fs
loop
jg
int3
push
inc
mov
pop
cmp
lcall
dec
cmp
push
ret
pop
icebp
lret
jo
sbb
aam
mov
inc
sub
mov
out
xor
jno
shll
push
mov
sub
pop
scas
repz
idivl
sub
cmp
lret
cmp
push
sub
iret
xchg
sbb
pop
xlat
test
or
add
mov
adc
dec
shlb
cmc
fdivs
inc
pushf
add
leave
loope
mov
sbb
jmp
in
in
push
mov
adc
stc
cmpsl
mov
and
pop
filds
insl
aam
dec
inc
mov
fstl
into
leave
arpl
mov
std
leave
insb
mov
push
in
dec
stc
test
mov
loop
lret
sbb
xor
ds
shrb
movsl
rcr
pop
mov
mov
roll
or
out
and
mov
jno
cmpsb
sub
and
vcmpss
cmp
add
test
sub
loopne
xchg
sbb
testb
movsl
test
pop
lock
xchg
xor
ja
xchg
and
insb
mov
pop
sbb
sub
aas
movb
out
out
push
pop
repz
jmp
sub
movsl
in
jle
or
into
pop
and
adc
dec
xchg
pushf
sti
mov
into
lret
fidivl
mov
push
sbb
jmp
inc
mov
pop
jl
mov
push
jns
les
loop
sbb
lahf
aam
mov
andb
sub
leave
and
cmp
sar
shll
fstpt
gs
push
rcpps
out
jns
in
pop
mov
jne
idivl
imul
push
mov
leave
push
mov
shrb
sarl
ss
adc
rcrb
cmp
pushf
mov
cmp
fisttpl
ss
ljmp
fdecstp
pop
iret
mov
ss
pop
clc
jecxz
leave
or
ljmp
aad
jo
stos
add
xor
and
aad
mov
fildll
mov
rcrb
or
xor
pop
movsb
push
xor
add
fiadds
xchg
mov
imul
sti
or
sub
movsb
ret
inc
inc
jp
mov
mov
repnz
nop
fmull
mov
xor
xchg
das
mov
pop
imulb
insl
pusha
xor
test
cmp
orb
mov
inc
lea
sub
stos
cld
cmovp
mov
into
push
aam
mov
xor
test
push
mov
mov
jl
xor
mov
ret
or
je
cmpsl
and
dec
stc
loope
mov
ss
cli
sub
mov
push
incl
pop
xchg
int3
adc
arpl
test
mulb
frstor
das
stos
lea
imul
ljmp
nop
sbb
xor
nop
imul
push
adc
push
pop
es
push
and
mov
xchg
lgs
push
addr16
dec
jne
iret
jmp
stos
roll
pop
ss
and
mov
push
adcb
daa
mov
aaa
jge
xchg
fiaddl
inc
and
or
xor
into
mov
sti
stos
mov
xchg
sub
ds
popf
stos
scas
testb
lds
push
lahf
mov
nop
mov
stos
ss
scas
in
and
mov
jae
add
mov
sbb
enter
jo
add
fcoms
pop
test
jb
fwait
movsl
testl
out
adc
mov
sbb
and
ret
scas
jnp
lds
cs
fiadds
adc
xor
xor
push
inc
cmpsl
iret
inc
jmp
mov
lock
cmc
mov
stos
out
push
and
mov
movsl
sub
jmp
xchg
push
int
adc
sar
cmp
pop
mov
or
or
shrl
test
xchg
movl
out
dec
lock
pop
mov
pop
dec
cmp
enter
pop
mov
sub
ret
xlat
xchg
push
pushf
mov
mov
test
xchg
nop
sahf
push
add
add
jb
cmp
push
adc
dec
stc
pop
xchg
pop
sti
adc
pop
in
stc
or
add
orb
pop
fldl
or
add
jb
insb
icebp
dec
sub
insl
jae
testl
scas
fldl
adc
lret
lret
test
in
mov
xchg
daa
and
cmp
inc
fidivrs
xchg
test
xchg
xor
mov
inc
fwait
cmp
dec
push
mov
das
jg
mov
dec
das
jnp
shlb
pop
inc
adc
in
and
imul
fmuls
xchg
into
mov
lods
adc
jg
outsb
push
inc
rclb
aaa
insl
dec
out
mov
dec
stc
mov
in
addr16
lock
arpl
ja
inc
ss
pusha
int3
or
adc
inc
ds
sbb
or
call
sub
movsb
test
int3
pop
in
add
mov
ljmp
jge
cmpsb
xchg
jno
sbb
cmp
dec
stc
cmp
or
pop
pop
pop
shl
or
pop
xor
and
pusha
adc
subps
pop
and
das
jge
repnz
movsb
add
out
dec
mov
mov
and
clc
fsincos
push
adc
mov
push
fdivl
movsl
cmp
rcll
xchg
mov
dec
cmc
jmp
cmp
cmp
icebp
or
and
mov
dec
mov
cmp
js
mov
lea
lret
rcrl
lods
jl
aam
add
loope
pop
nop
mov
xor
sbb
sbb
xor
cli
out
int3
cmp
pusha
aam
push
mov
pop
out
ljmp
aam
pop
pop
cmp
inc
orb
jns
mov
xor
or
sub
test
mov
jo
xchg
sbb
imul
flds
popf
stc
mov
add
pop
popf
adcb
data16
movsl
iret
fidivrl
scas
mov
push
fdivs
and
iret
std
dec
fcomps
mov
out
mov
mov
dec
int3
fldt
mov
aad
gs
les
mov
cli
arpl
ficomps
add
sbb
cli
push
popa
fnsave
mov
dec
xor
cmp
shr
int3
aam
pop
jg
adc
xlat
imul
fimuls
xchg
push
repnz
xlat
pop
shr
adc
aaa
pop
insb
dec
pop
aad
jle
pop
inc
and
sbb
push
add
mov
imul
mov
pushl
aad
ror
dec
jno
repz
sarb
pushl
rorl
out
xor
out
jae
sub
mov
shl
xchg
outsb
push
adc
cmpsl
mov
add
xchg
xchg
xchg
loopne
icebp
adc
icebp
mov
xchg
inc
or
fcmovnb
das
inc
xchg
repnz
pop
push
faddl
jbe
lcall
pusha
sti
andb
nop
sbb
mov
iret
repnz
mov
sar
iret
outsb
scas
lcall
sbb
imul
jno
std
loopne
mov
push
inc
leave
pushl
push
aas
outsb
imull
cli
testl
push
repnz
das
orl
xchg
arpl
in
push
jmp
aad
xchg
pop
fidivrs
or
pop
in
push
adc
or
jae
mov
addb
or
aam
add
js
repnz
test
addr16
push
dec
jmp
mov
fdivrs
add
cmp
jp
dec
popf
xchg
jae
test
in
fdivrp
add
jmp
rcll
stc
leave
dec
hlt
adc
dec
or
jle
xor
sbb
repnz
mov
insb
out
push
outsl
adc
xor
pushf
clc
iret
sub
jnp
ljmp
setp
ja
out
pop
adc
sub
int
inc
inc
dec
jge
stos
js
mov
jp
push
ffree
es
cmp
aaa
push
mov
push
sti
jl
test
mov
fwait
ja
inc
mov
loop
xor
mov
out
dec
push
xchg
adc
in
sbbb
or
push
popf
aam
mov
loop
shrl
jmp
cmpsb
sbb
dec
cld
lret
sub
push
repz
mov
sub
jne
test
clc
push
loopne
dec
fisttpl
sar
push
in
mov
xchg
dec
add
out
push
lret
mov
inc
in
jns
scas
inc
jmp
or
loope
dec
pop
dec
mov
mov
adc
scas
inc
pop
adc
cltd
sub
inc
insb
outsl
jns
pop
inc
sbb
fwait
cld
or
ds
mov
in
mov
mov
push
mov
jb
xchg
add
test
dec
mov
inc
dec
push
iret
cmc
movsl
pop
sub
lods
jle
arpl
mov
inc
out
adc
inc
inc
test
les
repz
jae
mov
sub
cmpsl
add
pop
repz
pop
inc
rcl
xchg
inc
leave
or
push
mov
test
mov
ss
test
shrl
xchg
pop
rol
shrb
test
call
sahf
insl
pop
jbe
jno
mov
pop
adc
ret
lret
rcll
mov
mov
and
std
sbb
pop
leave
or
shlb
in
sbb
movsb
cld
and
jbe
fcoms
cltd
mov
pop
push
pusha
sahf
stos
jp
dec
dec
xchg
or
leave
xchg
loope
mov
mov
gs
cmp
fcompl
das
mov
loop
push
mov
push
push
and
jmp
loop
mov
sbb
mov
dec
pmaxsw
call
mov
sahf
addr16
lods
xor
adcb
into
inc
push
pusha
enter
fisubs
xchg
pop
jns
add
sub
inc
iret
xchg
push
in
sarb
xor
emms
mov
loope
lret
in
dec
pop
mov
cmpsl
cmpsl
notl
enter
lods
xchg
icebp
lods
loope
ror
xor
sub
mov
mov
lahf
scas
mov
cmc
cmpsb
push
pushl
out
sbb
outsl
lret
or
lock
push
jle
div
inc
sbb
mov
shll
test
fnsave
push
or
in
les
cmp
mov
dec
mov
and
insl
dec
mov
add
int3
mov
ja
pop
jb
je
fisubrs
jmp
mov
xor
cwtl
or
add
cmp
lock
dec
insl
bound
aam
xchg
push
pop
daa
jno
outsb
sub
gs
in
ss
cmpsb
test
pushw
or
pop
sub
mov
xchg
dec
pop
cmp
imul
mov
addb
out
fcomp
and
cli
mov
lea
std
lods
cmp
push
push
mov
out
xor
das
imull
adc
cmpsl
jnp
dec
stos
fcmovnu
out
mov
out
fsts
mov
cmc
fcmovbe
ljmp
pop
pop
fnstcw
out
repz
inc
sbb
sbb
icebp
push
and
iret
dec
dec
sahf
or
push
xchg
sarl
mov
xchg
cmp
and
push
in
sbb
rorb
add
adc
scas
ja
dec
xchg
lahf
fimuls
jb
cmp
inc
std
mov
in
mov
mov
mov
push
xchg
test
inc
push
dec
sub
xor
push
jmp
shlb
daa
rcrl
push
pushf
pop
out
pop
out
push
out
dec
call
sahf
xchg
lcall
insb
sahf
add
pop
mov
mov
push
outsl
pextrw
add
bound
xor
add
ja
push
adcb
push
cld
aad
in
std
mov
push
incl
cltd
sbb
lods
rep
mov
jmp
sub
inc
std
mov
pop
outsl
pop
jp
leave
stos
in
adc
scas
lcall
js
test
cmc
push
sbb
pop
js
movsl
push
or
sar
pushl
mov
inc
push
mov
push
cmp
in
or
jns
mov
dec
rclb
xchg
cmp
test
data16
xchg
inc
cmp
add
orl
daa
cmp
iret
cwtl
out
sbb
popa
aam
lods
jecxz
push
xchg
adc
fadd
daa
shl
push
xor
test
sahf
jle
cmp
aad
or
fstl
inc
shrl
inc
jbe
pop
loopne
mov
push
inc
mov
ss
add
outsl
push
sub
xor
push
das
cmp
dec
cltd
pop
jp
pop
xchg
push
loop
pusha
xor
ficompl
jg
xor
pushf
enter
xchg
mov
insl
repz
out
mov
pusha
mov
add
jge
sub
cli
paddw
fisubrl
aaa
mov
sahf
cmc
adc
lock
hlt
xchg
test
fs
mov
fisttpll
sub
and
dec
iret
outsb
sahf
mov
mov
popa
lods
dec
sbb
jge
sbb
jmp
jmp
mov
lcall
arpl
call
sub
jb
sbb
mov
and
mov
fistl
and
xchg
jno
adc
insb
and
ss
adc
pop
mov
and
mov
and
lret
inc
xor
push
add
mov
ret
push
fistps
sbb
sub
test
pop
dec
int3
mov
mov
icebp
loope
pusha
cmp
mov
ss
dec
dec
int
repnz
ss
or
inc
and
mov
testl
cmp
rcr
jge
mov
cmpsb
push
shl
jns
pop
test
push
aad
xchg
jb
aad
insl
jge
mov
dec
dec
push
stos
out
ja
iret
push
fistpll
mov
ss
movsb
jecxz
fprem
or
aas
push
out
mov
pusha
scas
mov
cmp
push
inc
bound
and
outsl
cmp
dec
adc
add
mov
cld
dec
lods
fmuls
add
or
sub
fsub
out
sub
lret
inc
cwtl
adc
arpl
cwtl
or
mov
pushf
cmp
cld
repz
lret
pop
pushf
jnp
fsubr
pop
pop
push
or
adc
ficompl
jl
add
xchg
notb
test
mov
js
dec
mov
mov
imul
lahf
sub
sar
push
mov
lret
sub
out
and
adc
outsb
and
aaa
in
jae
jle
rcr
xor
pop
sbb
sub
xor
push
lock
jmp
adc
dec
dec
arpl
lahf
jb
fnstcw
mov
mov
mov
mov
mov
mov
imul
xchg
in
push
mov
push
jo
cli
sub
ret
das
ss
mov
jo
add
hlt
push
and
aam
cmp
test
loop
xchg
in
lret
imul
add
xchg
sbb
and
bound
dec
adc
inc
push
jo
jo
mov
lcall
shlb
mov
and
xor
pop
push
and
mov
push
daa
sub
aaa
and
mov
dec
sbb
mov
lds
std
sahf
sbb
sbb
push
imul
xchg
ss
fldl
mov
mov
dec
inc
jecxz
push
imul
gs
or
dec
ficomps
or
mov
fsubr
mov
lds
cmp
jl
xor
mov
mov
push
dec
dec
xchg
push
jmp
cmpl
jo
pop
hlt
xchg
add
pop
jne
pop
jno
adc
mov
or
jbe
scas
jp
sub
xchg
push
into
sub
sub
test
adc
nop
adc
scas
rclb
cmp
pushf
inc
std
xchg
fdivl
cmp
jl
test
or
sarl
add
mov
bound
or
mov
cmp
repz
jns
mov
xchg
pushl
dec
les
sub
push
add
js
push
jae
jmp
jmp
sub
mulb
xor
and
sub
shll
pusha
cs
rolb
cmp
jnp
adc
insl
xchg
hlt
push
push
inc
xor
mov
pop
out
mov
inc
scas
adc
jle
stos
rorl
ss
dec
mov
insl
jns
lret
mov
push
lret
mov
jle
xor
jnp
xorb
fimull
sarb
je
jnp
in
pop
jecxz
out
mov
add
movsl
add
out
ret
mov
sahf
mov
xor
es
ljmp
aam
mov
pop
in
icebp
std
fldl
adc
notl
mov
and
xchg
jecxz
data16
scas
pop
ret
pop
push
aas
int
jo
test
aas
cmp
xor
inc
ret
sbb
movsb
pop
mov
lock
fisubrl
pop
rcr
jg
mov
sbb
jecxz
xor
fdiv
shll
cmpsb
inc
mov
fucompp
or
push
testb
stos
dec
les
push
adc
flds
sbbl
sub
enter
out
loop
nop
fst
jne
mov
push
mov
add
aas
cmovle
push
mov
cli
int3
loope
mov
jae
lahf
rorl
mov
dec
push
mov
cmpsl
int
inc
bound
sti
ret
dec
mov
xchg
jbe
into
and
sub
dec
or
inc
movsb
jnp
mov
lock
pop
sti
mov
jbe
lahf
xchg
jp
dec
in
orb
jo
sub
repnz
adc
push
or
mov
rolb
mov
rcrl
into
xchg
and
fadd
jo
xor
test
xchg
int3
ret
outsl
pop
cmpsb
sbb
adcb
fwait
adc
std
sbb
lods
jae
es
jns
push
mov
cli
xchg
jg
mov
mov
mov
and
or
inc
call
push
mov
adc
test
in
or
mov
sbb
push
outsl
or
xor
ret
rolb
mov
sbb
leave
ja
imul
scas
sub
push
outsl
sub
outsb
fiaddl
add
nop
inc
lcall
pop
xchg
add
lret
pusha
and
sbb
cltd
adc
in
mov
add
aad
mov
push
mov
adc
dec
ret
mov
sbb
das
mov
jmp
xchg
or
pusha
pop
pop
sahf
mov
sub
ja
bound
sbb
jp
addr16
loope
jns
adc
and
fiadds
add
insl
xchg
es
testl
jnp
sar
stos
jecxz
or
pandn
inc
add
push
mov
lahf
xchg
cmp
sbb
mov
xchg
setbe
cwtl
cmpsl
sbb
push
pusha
dec
dec
pop
dec
push
jae
adc
loope
mov
jns
mov
into
or
cmp
adc
and
mov
shll
cmp
daa
out
add
lahf
or
pop
out
xchg
in
in
sub
pop
add
jp
mov
shl
and
movsl
shll
mov
repnz
jns
push
dec
enter
fsts
fsubrp
mov
push
hlt
gs
decb
hlt
dec
enter
sub
orl
loopne
imul
loope
jb
pop
js
push
xchg
test
or
xor
mov
sub
lods
out
fcomp
lahf
xorb
push
push
dec
in
sbb
and
xchg
pop
mov
lock
push
xor
sahf
flds
pushf
sub
lea
sti
jns
js
mov
mov
bndstx
lret
cmp
mov
jl
hlt
imul
inc
push
xchg
dec
inc
or
enter
mov
arpl
fmuls
les
and
cs
mov
mov
mov
das
test
pop
cmp
add
bound
cs
xchg
loop
lods
xor
jno
out
fsubr
ds
test
loop
mov
shl
dec
movsb
int
push
rcrl
orl
push
fidivrs
movsl
mov
call
out
add
cmpsl
mov
repnz
repnz
and
shlb
xchg
dec
mov
lea
xor
mov
mov
jno
scas
push
and
mov
jmp
call
xor
ja
imul
call
inc
shrb
out
xor
loop
in
dec
or
mov
mov
dec
fmul
cmp
sub
or
vminss
jmp
movsb
ret
mov
sub
push
push
xchg
inc
pop
xor
push
shll
dec
inc
lret
fcmovbe
xorl
push
mov
addr16
or
push
or
stos
cs
mov
xchg
shll
mov
inc
xchg
or
lret
lret
nop
inc
jle
sbb
xor
adc
imul
das
scas
and
test
lock
or
xchg
or
jge
lds
aaa
add
sbb
out
sbb
mov
bound
stos
xchg
add
das
fstl
adc
or
loope
in
and
adc
and
push
ret
mov
fsubrs
daa
jmp
jns
ud2
inc
fsub
in
fnsave
push
lock
mov
sbb
mov
lods
sbb
dec
leave
les
sbb
inc
pusha
shl
insl
clc
inc
lahf
imull
mov
jmp
aas
iret
cli
mov
outsb
imul
scas
icebp
popf
mov
loop
jno
jno
xor
pusha
push
inc
mov
and
lcall
and
mov
incb
dec
pop
repnz
push
mov
push
sub
and
cmp
outsb
data16
adc
test
jecxz
xor
mov
fwait
dec
mov
insl
jbe
jp
pop
stos
call
and
cmp
mov
stc
lahf
mov
pop
mov
xor
sahf
mov
xchg
sbbb
in
repnz
mov
jmp
psubw
push
and
xor
cli
inc
fidivrl
aam
cmp
ljmp
inc
fwait
movl
push
push
add
and
stos
cs
mov
dec
outsl
add
in
fmuls
test
xor
popa
mov
lret
loope
sub
xchg
add
stos
pop
fnstenv
lods
scas
mov
push
xor
adc
xor
or
jp
ljmp
rol
ljmp
jae
mov
loop
mov
fnsetpm(287
adc
sub
daa
andl
mov
pop
loopne
iret
decb
adc
dec
addr16
cwtl
dec
scas
mov
push
ja
test
jge
or
out
adc
dec
and
das
sbb
lods
push
xor
aam
xlat
adc
ja
ljmp
fbstp
sahf
xor
xchg
or
out
sub
mov
cmpsb
xchg
inc
add
pop
adc
stos
xor
mov
dec
icebp
mov
add
xor
sub
adc
jbe
mov
arpl
cmpsl
push
fsubl
mov
xor
push
push
mov
scas
out
lods
roll
outsb
lods
in
sbb
test
mov
fadds
mov
sub
xchg
loopne
idivl
pop
push
adc
mul
insb
pusha
str
mov
cmpsl
hlt
inc
pusha
shl
or
push
xchg
insl
pop
sbb
xchg
pop
xchg
sub
lock
jl
in
sbb
dec
sub
call
out
jmp
mov
test
dec
add
mov
xchg
jae
bound
mov
repnz
ja
mov
jae
lods
jns
rorb
mov
push
inc
mov
movsb
jecxz
ror
push
lods
fsub
adc
fmuls
lock
insb
mov
enter
mov
aas
mov
add
jae
adc
lret
test
adc
adc
jp
and
rcrl
loopne
adc
jns
stc
xor
push
dec
cmp
xchg
int
mov
scas
dec
xor
jp
add
push
sbb
nop
mov
xor
add
inc
loopne
mov
fmuls
loop
ds
pop
in
mov
loope
ficomps
xchg
lcall
xorl
mov
adc
test
repnz
call
or
jge
adc
sbb
or
scas
rcrl
xor
inc
pop
inc
aad
sti
fidivs
cmc
xor
mov
mov
and
or
stos
dec
inc
xchg
mov
sahf
mov
mov
nop
pop
adc
fdivl
jecxz
inc
inc
stc
mov
test
hlt
hlt
push
rorb
dec
jbe
ja
mov
nop
xchg
lock
mov
sbb
outsl
aad
mov
insb
out
scas
and
in
popf
cmp
fnstcw
popa
add
fs
je
int
mov
cmp
pusha
lock
jp
mov
dec
lahf
daa
push
push
mov
push
jbe
mov
das
jae
lock
subb
dec
push
gs
fwait
rolw
call
fisttps
or
div
jp
std
sbb
pop
loope
jno
shr
pop
push
mov
mov
sar
stos
insb
loop
push
mov
add
lock
iret
cmpsb
and
mov
dec
ret
popa
adc
pushf
js
jae
add
out
jne
or
or
roll
dec
or
sarb
stos
pop
aas
sbb
sub
sub
pop
js
rolb
gs
ljmp
sbb
or
std
sbb
dec
and
bound
rorl
test
mov
push
int
out
popa
add
jmp
pop
xchg
push
inc
test
mov
jnp
mov
iret
jmp
add
jp
jg
iret
out
or
xchg
adc
js
test
hlt
imul
cmc
push
jnp
or
repz
cltd
stos
jns
xor
lea
cmp
sbb
ss
in
jmp
inc
imul
insb
cmp
sti
inc
rcrb
dec
ret
add
and
inc
std
xor
sub
test
push
and
dec
or
inc
test
pop
sbb
mov
mov
xor
dec
cld
xchg
es
out
push
stos
arpl
mov
mov
loope
inc
push
ret
xchg
push
pop
loopne
iret
mov
pusha
in
push
push
or
push
or
js
jecxz
adc
loopne
and
mov
imul
lods
ret
flds
push
sahf
mov
outsl
push
sbbb
ljmp
jb
jge
sub
fwait
lret
mov
pop
int
rcrl
scas
and
sub
in
test
or
jg
inc
lcall
cmp
mov
sub
sbb
lret
xor
mov
movsb
push
jge
push
jg
aaa
sbb
mov
xor
mov
leave
sarl
xor
push
movsb
fidivrs
pop
fbld
loopne
shrl
dec
push
xor
xor
push
mov
xor
push
int3
icebp
adc
xor
and
jmp
sarb
cltd
js
inc
inc
sbb
jnp
sub
and
lea
pop
je
shr
scas
add
mov
ficoms
xor
adc
jns
cs
fwait
cltd
shlb
andb
ret
or
mov
das
lds
or
sbb
aas
bound
adc
jne
jmp
ljmp
aaa
inc
stc
mov
dec
fs
push
xor
or
aas
nop
fldt
popf
sub
xor
push
lea
aaa
lret
test
popf
xchg
loope
cs
sub
xchg
or
and
push
iret
jns
dec
loope
cmp
xor
mov
jg
icebp
sti
inc
mov
or
cld
je
std
jnp
add
std
divl
mov
notb
inc
jbe
or
cmpsb
jge
and
fdivrl
pop
xchg
add
js
mov
jle
pop
or
test
aad
es
outsb
dec
inc
vmovhps
sub
movsl
or
push
pusha
cli
and
inc
pop
lods
xchg
xor
lret
push
jg
mov
js
mov
test
mov
dec
ret
mov
js
mov
call
push
push
pop
pop
ret
inc
mov
jge
scas
push
xchg
mov
mov
lea
fcmovnu
pop
mov
jae
ss
jo
push
cmp
pop
sub
lock
testl
fmul
jp
sbb
cld
fimull
cld
xchg
mov
push
fsubrl
dec
sti
inc
add
mov
hlt
lret
test
jecxz
xchg
movl
xchg
push
and
pop
ret
inc
mov
rcrb
sub
push
cmp
sarb
pop
pop
sbb
loope
pop
inc
push
xchg
pusha
jmp
cmc
mov
push
repnz
call
into
es
sub
test
dec
mov
pop
dec
out
test
sub
mov
mov
cmc
mov
dec
mov
pop
or
and
sub
adc
xchg
dec
xor
jbe
mov
jno
insl
aad
dec
and
mov
cli
pop
fs
ja
mov
rcll
add
jno
add
fisubs
lahf
jbe
xor
popf
nop
add
fldcw
xor
mov
pop
jne
xchg
cltd
loope
dec
repnz
xchg
jnp
mov
mov
add
rclb
xchg
mov
and
ret
dec
adc
scas
add
pop
ja
shlb
cmpsb
dec
add
imul
stos
testl
and
push
gs
call
sub
jecxz
fst
add
jg
jp
jmp
xor
lods
xor
xchg
in
movsl
dec
loop
in
imull
ss
sbb
stos
sbbb
mov
sub
mov
pushf
and
shl
es
push
and
decb
push
and
inc
jbe
jle
mov
imul
push
mov
xchg
rclb
cltd
aam
inc
jne
jg
lahf
out
es
adc
ss
dec
add
mov
dec
call
ficoms
jae
adc
mov
xchg
std
out
pop
jns
jg
and
jno
xlat
mov
mov
int3
mov
fdivrl
stos
mov
cmp
xchg
sbb
outsb
mov
or
pop
mov
and
fwait
dec
sbbl
push
lret
and
dec
mov
and
mov
cld
cmp
aam
scas
xchg
jbe
xor
jecxz
clc
pop
and
add
xor
sti
lret
sub
mov
cltd
stos
inc
enter
xor
call
data16
xor
retw
pop
outsl
xlat
add
push
fidivs
push
mov
mov
and
cltd
shl
enter
call
or
pop
cli
ret
xchg
roll
pop
mov
test
dec
jl
scas
jae
jecxz
ja
or
sbb
jae
sbb
ja
out
or
pop
adc
mov
add
xor
push
jmp
jnp
ljmp
repnz
sti
outsb
push
mov
fbld
inc
clc
push
adc
adc
inc
jmp
mov
jmp
mov
cmp
sbb
xchg
call
pop
scas
ds
push
inc
sahf
mov
xchg
lea
mov
int
add
aad
lds
mov
inc
call
mov
std
shr
mov
frstor
out
movsl
int3
adc
push
adc
dec
mov
dec
mov
fcmovb
popa
ss
push
aam
mov
test
cmp
test
insb
cli
pavgw
xor
invd
std
pop
ljmp
xor
aam
sub
mov
xrelease
mov
xor
pop
dec
xor
jae
mov
mov
and
lods
gs
sub
add
aaa
xor
ljmp
xor
push
mov
lock
fistpl
inc
jle
je
test
cltd
xor
push
lds
stc
push
cwtl
jb
call
sub
test
fnsave
push
xchg
pop
outsb
loopne
xchg
sbb
ljmp
stos
pushf
push
repz
pop
ret
pop
cwtl
xor
iretw
or
push
mov
mov
cwtl
hlt
sahf
cmp
adc
int3
addr16
push
popf
adcb
adc
dec
int3
push
jp
subl
leave
pop
mov
in
loop
mov
jo
mov
arpl
jmp
mov
decb
cwtl
push
jmp
mov
mov
push
in
cltd
or
test
mov
popa
adc
scas
test
mov
aas
adc
in
pop
test
sbb
push
mov
shrb
jo
in
xor
dec
mov
fists
out
imul
out
lock
js
push
cs
sti
sub
cmpl
xor
sbb
lret
inc
adc
paddusw
out
mov
adc
mov
mov
push
sub
pop
jmp
mov
pop
push
pusha
int3
xchg
mov
mul
sahf
sub
pop
out
pop
mov
or
test
xchg
cmp
loope
mov
cld
movsb
add
jno
popf
in
cmpsb
xor
sbb
inc
mulb
dec
cmp
lret
pop
aad
insb
push
cmp
sar
sub
jae
arpl
movsl
int
mov
popa
sbb
xchg
pusha
sub
add
sbb
pusha
cmpsb
scas
div
jb
aaa
js
cltd
ret
mov
jo
je
lods
mov
cmp
inc
mov
mov
inc
sbb
xor
lret
icebp
mov
sahf
pop
test
icebp
ret
xlat
xchg
xchg
cld
dec
inc
imul
lcall
sub
dec
cltd
scas
pop
fwait
or
dec
sbb
cltd
jg
adc
sub
insb
popf
dec
mov
inc
pop
bound
decl
loope
mov
scas
pushf
push
and
xchg
imul
sub
rorl
push
xor
cld
or
inc
int
cmp
jecxz
movsl
adcl
and
dec
lods
xchg
ret
jnp
test
pop
add
add
iret
hlt
bound
jmp
fcompl
sub
xchg
pop
push
cmp
cmpsb
or
pop
xchg
mov
imul
clc
arpl
or
imul
inc
adc
xor
jnp
jle
ret
push
jno
sbb
xlat
dec
mov
xchg
iret
mov
rcl
test
das
hlt
xchg
int
cmpsb
pop
jle
xchg
cltd
sbbb
loopne
jg
pushf
push
jno
inc
mov
es
pop
gs
xchg
adc
push
sbb
les
pop
cs
xorb
dec
andb
sub
lcall
insl
imul
imul
test
push
jne
ror
dec
pusha
pop
sbb
icebp
add
icebp
inc
push
in
xor
mov
test
dec
adc
and
lods
jne
insl
cmc
jge
xchg
dec
fbstp
in
and
cwtl
fadds
out
cltd
jo
addr16
mov
adc
ja
xchg
push
inc
sub
jae
inc
fwait
and
xchg
lret
or
fnsave
test
adc
xchg
fdivrs
or
xor
repz
decb
sub
jno
lds
mov
inc
push
mov
adc
inc
out
pusha
push
mov
pmullw
ret
xor
dec
je
sbb
out
cli
mov
inc
mov
ljmp
je
inc
call
pusha
out
xchg
mov
shr
pop
fwait
daa
js
lret
dec
pop
test
gs
jnp
mov
gs
pop
mov
jg
dec
sahf
xlat
and
dec
push
cmp
adc
mov
inc
es
jge
rcrb
push
repnz
cmp
insb
int3
arpl
mov
and
lret
lea
lock
out
add
add
dec
dec
jne
notb
add
stos
jp
mov
push
mov
pushf
ret
jae
lock
add
outsl
nop
ja
mov
adc
imul
mov
mov
mov
mov
into
mov
fisubrs
mov
gs
push
in
add
pop
adc
imul
insb
mov
push
push
aam
fwait
add
cmp
cmp
jmp
test
inc
js
xor
inc
jge
push
test
mov
mov
xchg
mov
scas
pop
nop
push
hlt
lods
and
xor
test
jge
clc
mov
mov
cmp
add
ss
mov
or
mov
inc
mov
mov
xchg
xchg
mov
inc
repz
mov
inc
mov
inc
cwtl
inc
sub
movsl
fwait
mov
out
ljmp
inc
mov
lds
or
mov
inc
out
xor
cmp
jno
pop
adc
and
cmp
jp
popa
push
and
ss
xchg
imul
dec
add
inc
dec
stos
xchg
sub
loopne
mov
hlt
inc
xlat
mov
call
cltd
pop
xchg
inc
repnz
and
ds
dec
imul
mov
mov
and
cmp
push
out
and
inc
inc
fdivs
sub
cmpsl
pop
cs
jns
pop
sub
xorb
hlt
addr16
cmpsb
std
in
cwtl
das
outsb
push
add
jbe
mov
mov
stos
adc
or
dec
fwait
adcl
in
xchg
sbb
jg
arpl
mov
fcoml
stos
cmp
jl
jmp
mov
test
pop
mov
imul
xchg
dec
pop
leave
ds
shll
or
mov
inc
pminub
jae
push
cmpsl
ret
jae
pop
xchg
mov
push
jb
setb
or
pop
and
out
xchg
leave
pushf
cpuid
ret
in
movsl
xchg
test
out
dec
cmp
xchg
jge
xlat
sbb
lahf
xchg
popa
mov
inc
xchg
mov
mov
push
and
ret
inc
and
push
lret
cmpsb
mov
pusha
adc
insl
mov
lods
inc
adcl
rol
test
lret
dec
push
outsb
jbe
mov
or
lock
push
jbe
dec
in
popf
inc
test
sub
or
adcl
sub
sbb
addl
cmp
sub
lahf
dec
jo
jo
ret
mov
mov
das
inc
xchg
mov
mov
or
loop
dec
dec
scas
push
scas
sub
js
lods
dec
jns
pop
stos
or
adc
jo
sbb
pop
hlt
lret
fs
notb
xchg
jmp
stc
lock
mov
xchg
sbb
jle
loope
and
mov
mov
add
sub
cmp
or
bound
ret
int
mov
fisttpl
popf
xor
push
inc
in
js
test
sbb
fisubs
sbb
es
push
jnp
jb
inc
push
or
jb
xor
mov
scas
shl
xchg
xchg
popf
imul
bound
fcmovu
xchg
push
and
xor
mov
inc
cmp
nop
mov
sub
ds
lret
cwtl
xchg
add
mov
add
dec
xchg
dec
and
fstpl
pusha
imul
mov
iret
mov
xor
out
cmp
mov
jne
push
sub
inc
xchg
iret
pusha
out
pop
lock
cli
aaa
ficompl
add
test
jg
mov
lret
xor
mov
xor
les
push
mov
out
cwtl
jns
mov
push
movsb
lcall
add
fadd
repz
sahf
ficomps
add
sub
xlat
sbb
movb
xchg
jp
mov
arpl
inc
sub
jp
in
or
inc
push
std
inc
ljmp
pop
dec
jbe
mov
insl
popa
pop
icebp
mov
mov
jmp
sbbl
test
inc
mov
mov
int
mov
scas
jg
add
or
addl
inc
jae
inc
les
arpl
xchg
movsl
mov
std
jno
popa
inc
and
mov
or
movl
sahf
inc
in
mov
enter
lcall
das
xchg
jns
mov
mov
xor
mov
loopne
mov
xchg
add
xchg
sub
shll
out
inc
sahf
jne
in
add
dec
les
popa
xor
cwtl
loopne
not
insl
in
jb
sbb
leave
mov
mov
movsl
fiadds
lea
pop
lods
daa
xchg
dec
cmp
cmp
jmp
or
movsb
push
inc
dec
pop
cmp
pop
adc
pop
jmp
jne
repnz
in
add
data16
adc
out
mov
sbb
push
stc
mov
fwait
jmp
mov
cmp
lcall
in
scas
mov
cmp
cli
int
mov
sahf
nop
pop
cs
mov
js
std
xor
outsl
icebp
test
outsl
xor
xchg
mov
cld
adc
pop
and
jmp
scas
fistl
cwtl
loopne
test
mov
aad
xor
test
sub
xor
sub
pushf
and
pop
imul
xchg
aas
push
fwait
xor
pop
outsb
push
cmpsl
mov
xrstor
cmp
rcrb
cmp
call
outsb
and
in
cmp
sub
jl
cmpsl
lret
adc
jb
lods
sub
pushf
xlat
cs
fsubl
xchg
mov
mov
inc
in
push
daa
loope
jg
test
jg
fisttps
jno
add
icebp
stc
test
xchg
jnp
xor
mov
and
adc
fwait
sub
adc
cmc
dec
jns
push
dec
outsb
sub
popa
mov
jecxz
cmp
mov
cmp
sub
mov
cmp
dec
out
xchg
push
lea
fs
pushf
cmpsb
cmp
gs
adc
mov
movsl
adc
repnz
xchg
stc
dec
lds
xchg
mov
sbb
and
jbe
addr16
fists
sub
daa
out
mov
lahf
fmulp
popl
outsl
push
fldt
adc
or
mov
int
mov
jno
xor
add
mov
and
daa
dec
fmuls
pop
lret
outsl
jl
mov
pop
xor
mov
pop
xchg
lcall
lds
xor
push
pop
pop
jmp
push
call
cmp
sbb
mov
loop
ds
pop
dec
jo
cli
adc
cmp
stos
push
push
add
mov
insb
jne
dec
cld
pop
mov
gs
insb
imul
mov
sbbl
mov
pushf
xchg
inc
inc
sbb
xlat
lahf
pop
jo,pn
mov
adc
fs
lcall
in
xchg
inc
pop
test
dec
or
cmp
push
mov
push
daa
mov
int3
popa
loop
cmp
inc
icebp
xchg
iret
cmpb
or
mov
sub
sub
sub
call
test
adc
in
mov
rol
je
mov
adc
inc
sbb
push
mov
lods
cs
imul
sbb
jmp
out
imul
sbb
xchg
out
cltd
lret
dec
or
mov
cmp
fldt
fidivs
out
sbb
inc
sbb
stos
popa
call
les
and
jmp
adc
mov
ret
adc
imul
in
out
adc
sbb
mov
push
xchg
fucomp
movsb
cmp
add
adc
cmc
jecxz
shrb
inc
data16
jo
push
fcomps
jo
dec
sub
notl
out
inc
mov
mov
cmp
mov
or
ret
jl
mov
out
cmpsl
in
movsb
imul
mov
testb
dec
sub
sub
in
stos
jb
xchg
shll
nop
and
pop
inc
adc
pop
push
test
daa
outsl
loopne
jp
scas
sub
push
inc
xor
sub
mov
xchg
ds
mov
and
addr16
and
pop
mov
push
lods
gs
push
and
test
and
xchg
xlat
fdivrp
int
les
or
cld
dec
je
sub
cwtl
sahf
sbb
cltd
sbb
sbb
xor
es
pop
pop
ljmp
dec
in
mov
jno
rolb
add
mov
push
inc
pop
push
adc
lods
mov
aas
hlt
gs
sbb
jecxz
fucomp
sub
ret
push
mov
mov
test
fisubs
dec
pop
out
bound
in
xchg
or
lret
mov
ja
movb
pusha
pop
outsl
dec
pushf
cld
leave
adc
test
popa
clc
clc
gs
push
sbb
fstp
lcall
fidivl
push
pop
inc
scas
sbb
jne
inc
and
orb
or
jmp
inc
xchg
dec
test
or
dec
in
cmp
daa
push
jne
sbb
test
adc
iret
xor
ds
fistps
inc
or
cs
scas
rcr
sub
mov
mov
mov
push
ja
jl
pop
imull
or
lds
addr16
sbb
mov
adc
xor
cmpsl
xchg
dec
js
xlat
mov
and
mov
addr16
insl
inc
push
or
int
dec
nop
ss
pop
push
inc
mov
sbb
inc
mov
mov
in
outsl
fisubrl
mov
test
hlt
cmp
insb
stos
cmp
loope
dec
mov
cmpb
repz
hlt
loopne
xor
out
popf
cli
sbb
insb
mov
dec
jle
jp
adc
negb
aad
test
lods
lock
push
stc
mov
cld
stos
dec
data16
movhps
lock
insb
xchg
push
hlt
adc
xchg
leave
cmp
or
filds
cmpsb
jns
psubq
test
cmpsb
add
add
sbb
aam
loope
stc
push
ffreep
inc
push
imul
icebp
decb
sub
cld
and
repz
aam
and
and
sarb
or
push
and
adc
aaa
rcr
or
pusha
clc
ficoms
test
dec
arpl
dec
fsubs
out
xchg
dec
orl
mov
int3
stos
enter
pusha
mov
mov
rolb
mov
sahf
add
mov
push
mov
std
ss
fnstcw
movsl
js
push
or
xchg
packsswb
rclb
leave
jle
xchg
daa
mov
lods
imul
adc
je
pusha
xchg
sbb
cmp
int
push
cs
rol
popf
popf
dec
lahf
outsl
mov
push
xor
icebp
outsl
aas
insb
mov
mov
fimuls
add
xor
lahf
divl
daa
adc
jge
imul
add
icebp
jno
xchg
push
outsl
mov
mov
xchg
mov
or
fbstp
into
insl
inc
push
jne
xchg
or
cmp
xlat
pop
in
insb
push
mov
adc
or
cmp
and
and
xor
dec
jmp
sahf
mov
mov
xchg
out
inc
cmp
stc
mov
paddsb
jecxz
in
push
shrl
mov
ljmp
xor
push
mov
cmp
sub
or
daa
stc
ficoml
or
adc
lea
cmpsl
or
out
stos
mov
add
and
loop
repz
unpckhps
mov
ss
mov
pop
cmp
movsl
mov
jnp
xchg
xor
and
lods
jnp
lahf
dec
lret
imul
in
sbb
insb
pop
decb
loope
aas
xor
negb
in
shlb
divl
xchg
sub
data16
test
cmpsb
jl
pop
and
xchg
inc
scas
lret
repnz
movsb
je
hlt
sti
int
cld
adc
push
push
inc
sbb
mov
movsb
fsubs
xchg
xchg
or
xor
sub
xor
enter
movsb
xchg
es
xor
sub
add
test
mov
movsb
jmp
test
dec
xchg
inc
pop
gs
pusha
sbb
ss
ret
loop
pop
sbb
inc
mov
jno
mov
xchg
imul
jl
das
xor
in
pop
or
fwait
xchg
nop
mov
sub
push
inc
sbb
pop
rorb
xchg
fistpl
and
jbe
loopne
ja
popa
adcb
pop
cmp
add
sbb
inc
pop
sub
popa
test
imul
cs
cmp
decl
adc
enter
inc
pushf
in
sarb
imul
or
testb
aam
popa
insl
pop
stos
mov
xlat
sbb
sbbb
loope
xlat
push
dec
pushf
cld
mov
aam
xor
sub
mov
pop
lods
mov
mov
repz
lret
mov
mov
xchg
xor
les
outsb
pop
and
xor
or
or
mov
jg
mov
loope
push
add
out
test
bound
fbstp
or
shll
and
lods
arpl
sbb
dec
sbb
fstpl
mov
xchg
icebp
push
add
cs
inc
lods
mov
rcrl
sub
mov
jne
aad
ss
mov
jmp
enter
out
inc
js
jl
inc
vmread
and
add
pop
test
mov
insl
fldt
adc
test
xor
cs
fs
sbb
xchg
adc
inc
sbb
or
add
mov
shll
out
hlt
jbe
pop
ret
pop
lahf
pop
sub
push
leave
sub
jge
vcvtsi2ssl
and
push
pop
jecxz
adc
std
adc
hlt
mov
push
test
push
sub
mov
push
cmp
nop
push
jne
sbb
lret
adc
rclb
es
xchg
jnp
pushf
decb
or
cltd
js
xor
adc
icebp
and
shrb
ljmp
push
and
pop
or
xor
out
xor
loopne
pop
cli
xor
or
les
dec
add
push
add
std
sbb
xchg
or
jne
sti
or
movsb
cmp
jne
jg
movsl
jl
popa
mov
stos
push
dec
test
cmpsb
push
and
sub
ljmp
inc
pop
test
sub
test
inc
xchg
andb
jle
test
pop
xor
xor
sbb
insb
lcall
cli
stos
adc
inc
mov
mov
sub
sub
dec
xchg
ret
pop
or
outsl
test
xchg
jb
inc
push
pop
das
daa
insl
fcoms
inc
xor
sub
ret
sbb
mov
movsl
mov
pop
inc
cmp
movsl
push
fs
stos
xor
or
lahf
movsb
and
sub
sub
ficompl
pusha
adc
std
xor
xchg
outsb
inc
inc
icebp
insl
shll
aad
mov
lcall
stc
jae
sub
aam
cwtl
jns
fstl
lcall
add
data16
pop
cmp
pop
idiv
jbe
jbe
ja
push
fmull
sub
nop
sti
dec
mov
push
push
adcl
adc
push
loope
inc
das
inc
sbb
or
shlb
pop
xor
sub
mov
out
mov
cmp
ror
enter
mov
daa
cmc
inc
inc
hlt
sub
mov
mov
mov
cmp
repz
sub
ds
mov
fcoms
xor
lock
mov
sbb
ret
mov
pop
push
jmp
xchg
pushf
sarb
iret
cwtl
dec
sbb
sbb
adc
mov
loop
iret
outsl
and
fisubl
pop
or
push
and
xor
sub
bnd
test
adc
mov
inc
jae
loopne
std
adc
push
fs
pop
mov
add
add
jl
flds
mov
mov
mov
xchg
insb
xchg
pusha
lret
push
sbb
je
xorb
imul
je
push
sbb
test
mov
mov
and
out
push
mov
movsb
in
int3
inc
and
pop
sub
mov
pop
daa
mov
add
pop
aas
ljmp
pop
orb
test
loope
adc
mov
adc
cmc
sahf
lock
and
sbb
sub
shl
lahf
stc
pop
jae
call
pop
rolb
inc
jmp
mov
dec
mov
inc
or
push
xor
call
stos
fstps
xor
xchg
clc
arpl
les
dec
or
jne
mov
cmpsl
js
xor
cli
popf
insb
add
mov
into
cmc
adc
mov
fildl
pop
rol
aaa
in
loopne
xor
rorb
dec
pop
cld
scas
popf
ja
mov
mulb
shlb
shl
jle
call
mov
das
inc
fs
sarl
jp
rolb
enter
pop
jge
pop
add
aam
scas
aas
test
sub
fmulp
jae
push
xchg
cwtl
aad
inc
push
mov
sahf
pop
loopne
outsl
ljmp
push
xchg
pcmpeqw
out
or
and
or
pop
hlt
in
adc
xchg
arpl
sub
mov
ror
ja
jmp
lcall
mov
lods
pop
xchg
repnz
mov
push
fwait
and
frstor
sbb
mov
orl
std
push
out
scas
fadds
mov
scas
jns
xchg
jl
adc
xor
push
movsl
in
insb
jg
sti
movsl
jp
mov
inc
pop
jecxz
jns
dec
or
ss
es
lcall
fmul
rolb
mov
cld
test
ds
dec
jb
or
mov
cmp
add
inc
add
sahf
insl
push
xchg
push
mov
adc
das
sbb
inc
cmp
mov
pushf
out
inc
mov
pop
les
xchg
cmp
popf
mov
push
and
insl
sbb
cs
cmp
sbb
fdivrs
lods
jns
adc
push
xchg
inc
ss
adc
push
sbb
subl
int
pop
mov
stos
add
jle
int3
cmpsl
aam
fcmovnb
xchg
das
jno
dec
dec
mov
out
and
adc
xchg
cmp
jecxz
push
jmp
shll
add
popa
outsl
in
cmp
mov
jbe
lahf
shrb
subl
or
push
jae
mov
xor
cmpsb
paddsw
inc
inc
enter
cmc
call
test
or
sahf
or
mov
mov
cmp
int3
out
jecxz
jb
int
leave
test
add
scas
ljmp
xor
aas
shll
data16
fisubrl
mov
jb
push
and
pop
gs
mov
shlb
pushf
faddl
xor
jne
cmp
punpckhwd
inc
jns
inc
mov
rcrb
fstpt
test
push
mov
sub
popf
cli
mov
jecxz
mov
push
repz
ss
arpl
inc
ret
push
add
mov
clc
mov
sub
leave
in
nop
and
scas
pop
je
push
add
adc
and
dec
lcall
sbb
pop
test
orb
pop
in
mov
cli
enter
ret
in
jae
inc
xchg
les
sub
je
push
nop
push
mov
mov
popf
repz
inc
arpl
sub
mov
push
aas
out
or
lea
mov
jmp
inc
loop
or
enter
jl
cmp
xlat
xor
sbb
xor
mov
pop
xchg
out
mov
xor
scas
mov
das
mov
cmpsb
ss
mov
jmp
mov
andb
pop
and
inc
xor
mov
outsl
sbb
inc
fidivrl
loopne
mov
hlt
xchg
subb
nop
jecxz
frstor
rcr
in
jl
arpl
or
jno
out
xor
into
pop
das
addr16
adc
mov
imul
mov
dec
xor
mov
cmp
push
jae
fldl
sub
lock
add
push
test
decb
jns
mov
fmuls
adc
pop
outsl
ljmp
gs
inc
sbbb
pop
inc
jno
add
mov
xchg
les
mov
push
mov
andb
pop
imul
mov
jae
sti
gs
push
add
cmpl
imul
fadd
addl
out
inc
loope
aaa
jmp
cmc
arpl
jnp
jns
or
fidivs
addl
inc
ljmp
inc
sub
push
arpl
xchg
dec
ret
fbld
in
jae
pop
jge
dec
xor
jmp
dec
popa
pop
xor
dec
fiadds
repnz
push
data16
cwtl
sub
cmc
stos
sbb
cmp
clc
pop
outsl
add
pop
leave
rorb
xchg
adc
fwait
pop
imul
enter
popa
repz
dec
test
je
repz
lods
inc
push
mov
or
fstl
inc
mov
jno
inc
jmp
mov
hlt
stos
push
out
inc
push
jne
mov
repnz
lret
cwtl
popf
mov
into
mov
or
pop
je
fistpll
add
inc
sbb
je
pusha
movsl
mov
and
sbb
in
add
push
out
aam
es
xchg
push
inc
jge
or
sahf
mov
pop
and
les
aaa
loope
mov
pop
inc
outsb
mov
mov
jo
lcall
lret
lcall
lods
es
and
inc
jo
mov
push
fs
add
fcmovbe
push
aas
cmp
mov
and
mov
cmpsb
xchg
cld
outsb
outsl
or
js
insl
pause
pushf
adc
sbb
inc
rcl
pop
mov
inc
mov
fwait
mov
sbb
loopne
jnp
dec
jno
jns
lret
sub
jbe
sbb
xor
mov
adc
je
adc
lahf
scas
mov
add
gs
mov
jbe
and
inc
sbb
iret
adc
push
shll
mov
cmpsl
cwtl
bound
in
sbb
inc
or
fistl
lret
add
sbb
test
add
js
mov
scas
in
mov
popf
rcll
daa
mov
addl
inc
lock
mov
iret
xchg
mov
int
inc
aad
mov
pop
fnsave
loop
mov
add
adc
test
and
int
and
pushf
inc
bound
ja
sub
fimull
sub
icebp
ds
dec
mov
xor
call
xorl
imul
mov
lahf
push
loop
inc
decl
test
xchg
and
mov
fs
addl
std
or
sbb
iret
arpl
xor
shll
or
addr16
add
add
push
cmp
sbb
jne
bound
dec
sarl
jp
mov
bound
outsb
pop
sbb
inc
adc
mov
mov
loope
jb
filds
stos
dec
lock
adc
mov
xchg
out
pop
out
and
sub
sub
xor
or
push
and
ret
push
push
dec
and
xor
ret
adc
adc
push
pop
mov
push
shl
push
lahf
mov
jmp
call
insl
mov
cmp
in
fldcw
push
cmp
mov
cltd
dec
lea
popf
loope
lds
lahf
btr
mov
or
fidivl
clc
icebp
aaa
mov
fnstenv
mov
iret
jl
dec
push
gs
sbb
js
adcb
push
cmp
cmpsb
stos
pop
pop
mov
add
fsubl
loopne
cld
sub
icebp
int
les
and
and
xchg
mov
xchg
rcr
adc
insb
jns
jp
ja
push
adc
lods
dec
add
invd
lods
cmpb
push
sbb
daa
inc
fbld
pop
jne
nop
in
push
repz
cmp
jp
cmp
mov
cmp
lahf
sti
fldl
je
inc
fstl
fwait
shrb
pusha
ss
das
ficomps
call
lock
adcl
mov
dec
jg
cmp
ficompl
sbb
movsb
movsl
or
out
sub
or
jbe
xchg
sarb
mov
jle
jbe
dec
arpl
xchg
inc
insl
loop
mov
sub
add
mov
push
ret
les
gs
ljmp
ret
dec
mov
cmp
mov
dec
cmp
adc
outsb
into
cli
fwait
sub
xor
jno
jge
lock
mov
mov
push
push
sbbb
sub
mov
mov
sahf
or
das
mov
and
bound
and
sbb
mov
sub
inc
das
test
xchg
popf
divb
adc
or
pop
adc
and
push
cmc
mov
lock
rolb
sti
sbb
imul
notb
mov
sub
dec
je
push
std
scas
lock
jae
mov
cmp
mov
imul
push
xor
sbb
push
inc
insb
and
cmp
push
inc
push
out
lcall
cmp
cltd
xchg
push
pop
lahf
or
inc
or
sbb
popf
pop
repnz
jmp
xlat
pop
jb
fisubrl
iret
cwtl
dec
loopne
xchg
add
sub
xor
jle
js
or
ljmp
adc
popa
inc
or
and
mov
cmpsl
insb
les
xchg
and
mov
mov
add
scas
mov
cmp
scas
jne
ret
pushf
outsb
cli
push
ds
orb
sarl
js
mov
adc
jge
orb
es
cmpb
xchg
xchg
addr16
lock
fincstp
dec
imul
scas
xor
mov
js
cmp
arpl
adc
mov
mov
add
or
mov
jecxz
lret
dec
popf
add
gs
xchg
lahf
jge
daa
sub
inc
sub
sub
adc
lods
inc
cmpsl
ficomps
movswl
jmp
adc
negb
pop
mov
mov
cmp
pushw
or
sub
mov
mov
cmp
sub
inc
fistpll
or
xor
inc
and
mov
movsl
imul
jmp
mov
aaa
lods
adc
pop
stos
sbb
xor
inc
nop
inc
lods
lret
bound
outsb
sarl
insl
sbb
or
lret
sti
lret
stos
orb
leave
mov
das
stos
loope
mov
fldcw
sahf
dec
or
lods
aas
or
fadds
arpl
fmuls
divb
nop
mov
push
or
push
in
or
stos
push
cwtl
inc
push
jmp
xor
scas
fs
xchg
ja
sub
push
adc
lods
shl
gs
lods
fnstcw
or
cmp
dec
xor
inc
rcrb
adc
iret
xor
outsl
cwtl
mov
pop
in
mov
gs
sbb
push
in
clc
in
daa
push
les
xor
in
ljmp
and
inc
sbb
lods
sub
test
sub
mov
push
es
hlt
inc
cmp
fdivrs
aam
repz
loop
movsl
or
inc
fldt
mov
adc
push
sbb
add
in
cld
mov
jno
or
iret
inc
xor
dec
mov
xchg
sbb
sbbl
lods
mov
int3
pop
imul
cwtl
push
xor
ljmp
mov
ret
jmp
pop
scas
or
pusha
cmpsb
mov
in
jb
fucomi
testl
into
shrl
sub
mov
popf
nop
fldt
dec
pop
sbb
stc
pusha
je
jne
and
std
adc
sub
orl
movsb
xchg
arpl
loopne
cwtl
mov
or
add
pop
lahf
mov
push
jl
push
fstpl
cmpsl
mov
mov
imul
jno
xor
xchg
sub
mov
pop
cmpsb
cli
in
mov
sub
xchg
test
fmul
mov
add
or
add
sub
pop
adc
xchg
sbb
outsl
cli
stos
cmpsb
jbe
and
mov
or
mov
pop
jp
mov
mov
scas
jmp
push
dec
aas
pushf
xchg
pop
jle
movsb
xor
imul
push
ret
jl
pop
scas
mov
xchg
aas
loop
sbb
sbb
shlb
push
lcall
jmp
xchg
cmp
in
icebp
add
mov
and
addl
inc
pushf
cmp
sbb
inc
mov
stos
xchg
mov
jmp
and
inc
les
add
out
sbb
jl
pop
pop
jbe
in
cmp
add
mov
lahf
dec
fwait
jmp
stos
xor
xchg
sub
cmpsb
fstpl
xchg
mov
testb
lahf
daa
pop
mov
push
rcrb
es
mov
inc
jno
lret
ja
stos
jl
ss
push
lcall
mov
sub
sti
sub
mov
leave
push
add
cmp
and
jne
mov
pop
xchg
das
hlt
daa
in
pop
mov
or
rorl
imul
jmp
aaa
jns
pop
aaa
mov
inc
dec
adc
push
jo
jb
inc
shll
inc
lea
lea
cld
jnp
lea
xor
iret
hlt
sti
or
pop
push
fimuls
cmpsb
xchg
cmp
out
xchg
pop
rclb
fwait
adc
inc
pop
js
lods
stc
stos
inc
dec
aam
ja
adc
sbb
fcoml
push
pop
fstp
insb
ja
sub
cmp
idivb
shrl
fsubrl
jg
adc
aaa
mov
dec
dec
ljmp
imulb
mov
inc
repz
imul
movsb
icebp
movsb
test
add
and
sub
iret
cwtl
and
inc
int3
cmpb
cld
lret
addb
push
sub
in
mov
cmpsb
ficompl
pop
jg
out
aam
cmp
fcmovbe
push
imul
or
adc
add
popa
loope
inc
mov
fidivrs
dec
xchg
bound
sbb
test
cwtl
testb
cmp
sub
test
sub
mov
xor
dec
dec
jmp
out
xorb
stos
pushf
into
ljmp
xor
ret
outsl
shrl
mov
mov
mov
mov
lods
es
imulb
inc
insl
data16
outsl
fbld
lds
lahf
clc
aas
xchg
inc
jne
or
mov
xor
cmc
xchg
add
pop
data16
push
leave
inc
jecxz
pop
jnp
leave
xor
inc
ror
mov
out
adc
lock
popf
and
and
mov
mov
roll
pop
out
mov
xchg
cmp
sbb
adc
mov
dec
mov
inc
movsl
lret
insb
mov
cmpsl
and
call
ds
clc
je
adc
movsb
or
pop
mov
rorl
fisttpll
or
lcall
movsb
loope
cmc
js
cmovle
pop
inc
pushf
lock
lods
sbb
xchg
pop
aaa
jle
nop
mov
inc
adc
ss
mov
xorl
or
mov
sub
movsb
sbb
jnp
inc
sahf
out
clc
ds
call
sbb
lahf
or
xor
cmp
int3
push
aas
shl
cmp
sti
cmpl
inc
flds
and
xchg
popa
or
mov
push
out
mov
xchg
aaa
mov
fstps
lods
fwait
ret
leave
or
xchg
and
rep
sbb
test
xchg
cld
mov
xor
xor
pusha
in
or
stc
test
pop
daa
dec
pop
jne
lret
or
or
xchg
sbb
sbb
mov
xchg
mov
cwtl
mov
xor
imul
scas
cltd
pop
pop
lock
inc
aas
push
adc
fwait
xor
push
pop
sbb
and
mov
mov
xchg
fbld
push
xor
dec
xor
scas
das
insb
clc
fs
xor
pop
fnstsw
mov
fbld
or
pop
mov
scas
mov
movsl
push
movsl
and
lea
pusha
jae
fsub
jp
mov
pop
xor
aam
push
xchg
bound
dec
mov
test
jle
ja
and
jp
inc
and
aas
push
xchg
insb
inc
pusha
inc
mov
bound
push
pop
out
sbb
pop
sub
dec
jo
dec
ss
lret
test
xchg
cld
add
cmpsl
out
jmp
aaa
mov
negb
js
or
adc
inc
xchg
pusha
test
in
ja
pop
call
jns
nop
fwait
jl
imul
and
inc
sbb
test
adc
lods
sub
mov
mov
inc
push
adc
test
shlb
fistps
mov
sbb
push
xor
mov
sub
pop
ds
jle
mov
xchg
stc
adc
xorb
push
test
dec
or
js
and
lods
cmp
test
xchg
stos
xor
out
stos
xchg
nop
dec
into
xor
adc
push
insl
lods
mov
adc
popf
push
jg
ficompl
inc
push
ret
pop
dec
jns
rcr
inc
cmovne
inc
add
psubd
cmp
divl
push
pop
fisubrs
frstor
lcall
pop
add
fimull
ret
in
mov
insl
movsb
ss
movq
xchg
int3
pusha
in
dec
pop
mov
jge
mov
mov
js
cmp
push
adc
stos
orb
lods
push
or
cltd
xchg
push
in
sti
add
enter
push
nop
ror
sahf
lcall
jecxz
push
fbld
pop
ja
repz
inc
roll
jp
add
xchg
je
arpl
in
arpl
jnp
mov
pop
imul
mov
or
loop
or
cmp
orb
pop
ja
cmp
inc
mov
jmp
aaa
shlb
inc
rorl
icebp
inc
xor
mov
loop
xchg
loope
pop
jno
out
sti
std
mov
cmovbe
add
loop
mov
pusha
adc
adc
xchg
xor
rcll
lcall
scas
aad
insl
mov
les
je
push
add
sub
jge
cmp
push
dec
hlt
mov
ljmp
mov
stos
ret
push
fs
and
mov
out
mov
mov
dec
mov
das
xor
sbb
push
sub
inc
movsb
movsl
jecxz
lcall
jl
orl
and
call
ret
pop
xchg
rcrl
ret
add
popf
shll
jecxz
fbld
dec
jmp
add
mov
add
dec
mov
lahf
and
xor
mov
mov
test
inc
mov
dec
orl
arpl
jo
jmp
daa
sub
mov
in
mov
iret
jns
adc
cwtl
mov
jp
push
aaa
rcl
aas
sbb
out
test
pop
cmp
test
pop
in
ret
sbb
test
dec
and
inc
dec
dec
int3
stos
lds
or
sub
bound
sub
adc
popf
mov
pop
test
lcall
lds
cvtps2pd
fmul
xchg
xchg
shrl
rolb
jb
push
sub
and
jne
or
mov
testb
jp
sarb
xor
cmp
push
dec
sbb
repnz
xor
and
scas
adc
les
adc
test
cmp
jl
inc
jecxz
cwtl
aaa
xchg
jge
orb
popf
ds
jb
push
std
outsl
cmp
cmpsb
add
and
fwait
adc
lds
outsl
dec
shlb
pop
enter
and
sahf
jne
or
jno
bound
pop
adc
lret
inc
insb
fistpll
adc
fwait
push
dec
jbe
push
mov
dec
mov
inc
es
xchg
xor
mov
sbb
cmp
in
lea
adc
pop
mov
sbb
into
mov
cmp
adc
dec
leave
or
into
jle
cmpsl
je
ror
adc
sub
mov
jp
push
out
movsl
mov
xchg
loope
mov
fisubl
xchg
test
test
push
dec
jmp
cmp
movsl
jbe
sub
ret
or
je
insb
sahf
lock
inc
ds
outsb
ror
sbb
push
enter
and
sub
out
and
insl
pop
xchg
push
mov
lcall
jmp
or
lods
imul
xchg
stc
mov
jle
adc
cltd
test
mov
cmp
inc
shll
lds
mov
pushf
jo
mov
or
cs
mov
fxch
xchg
andb
das
roll
xchg
fsubrs
sti
fwait
mov
pop
stos
or
cli
popf
lock
int
xor
xor
pop
mov
rclb
aaa
inc
popa
inc
in
xchg
rorl
xor
jp
std
jge
inc
pop
xor
lods
mov
stc
jmp
cmpsl
pop
and
outsb
stos
iret
iret
push
add
xchg
jmp
sbbl
aas
xor
mov
jl
or
cmp
fst
mov
and
ja
pop
xchg
or
dec
les
fldcw
pop
push
push
mov
mov
jmp
movsl
lds
cmp
push
lea
sub
lock
sbb
sbb
ljmp
dec
lods
xor
adc
xor
fmuls
mov
hlt
or
incb
cmovno
sbb
and
or
clc
fisubrl
xchg
std
push
cmc
adc
insb
movsb
and
into
leave
sbb
jbe
int
sahf
push
pop
fistpl
outsl
mov
or
sub
mov
ficomps
and
leave
out
call
shll
add
in
fidivrl
pop
fs
sbb
push
xor
shrb
add
lret
sbb
pop
cmp
das
xchg
adc
dec
insb
sbb
jno
enter
push
mov
mov
dec
mov
or
insl
pop
xchg
xchg
loopne
daa
sbb
stc
outsb
imul
cmp
jno
xchg
ss
add
movb
cmpsl
cmpsl
cli
xor
cmp
jb
or
pop
mov
mov
stos
into
and
mov
adc
fcmovb
mov
ss
push
adc
imul
jle
adc
enter
add
rclb
int3
mov
xchg
ds
in
outsl
mov
adc
push
sub
lds
push
add
movl
loope
pop
test
popa
sar
negl
in
cmp
jecxz
movsb
push
inc
push
xor
pop
and
loop
test
mov
ds
stos
iret
mov
hlt
xchg
mov
push
js
lods
sub
mov
or
fwait
cmp
mov
faddl
in
mov
mov
xchg
pop
rcrl
lock
sub
int3
fidivl
dec
sub
mov
xchg
leave
insb
or
jne
mov
xchg
xor
les
pop
mov
insb
in
cmpsb
jo
pop
jge
test
push
icebp
movsb
push
pushf
ja
inc
push
jb
push
xor
cmpsw
push
and
and
push
and
xchg
out
mov
aas
or
shr
mov
nop
xchg
ret
cmpsl
and
out
pop
int3
test
test
cmpsl
sti
out
iret
fimuls
push
jns
add
sub
cmp
xchg
sbb
sub
sti
loopne
out
out
pushl
cmc
fcoml
ss
data16
arpl
jge
cmpsb
jne
cmp
pop
push
and
out
push
mov
push
mov
xchg
popa
lods
lock
or
out
inc
into
fwait
sbb
xor
push
push
repz
cmc
fsubr
enter
inc
in
fidivs
and
aad
sub
in
hlt
ds
mov
out
mov
xchg
insb
popf
cmp
cmp
enter
in
mov
das
insb
int3
push
in
shll
mov
pop
lret
cmpsb
pop
adc
pop
sbb
xchg
incl
jp
in
lahf
les
dec
das
loopne
fimull
jne
movsb
inc
cld
sub
adc
ja
sbb
cmp
sub
fcom
sahf
pop
call
jmp
dec
and
dec
out
pusha
call
jnp
jmp
jnp
mov
cmpl
xlat
jo
mov
adc
cmp
inc
push
fcoml
lock
mov
inc
imul
rol
cwtl
aas
xor
lahf
icebp
cmpsb
call
and
push
inc
pop
sbb
cmc
sbb
rcrb
lret
rolb
push
jle
test
scas
push
roll
mov
imul
rorl
fadds
and
int3
pop
jae
or
jl
add
push
cmp
cmc
jmp
xchg
mov
mov
loop
inc
movsl
xchg
in
fists
add
fs
sahf
xchg
mov
xor
pop
xor
fwait
jp
push
fs
add
aad
pushf
bound
push
lock
cmp
daa
fcmovne
mov
int3
xchg
shrl
das
push
ss
or
mov
adc
movsl
rcrl
test
mov
or
ror
sub
adc
pop
aam
or
mov
add
scas
movsb
add
pop
jge
xchg
push
mov
xchg
popf
mov
sarl
and
jg
mov
mov
cmp
cmpsb
repz
stos
mov
sbb
ss
dec
xlat
fldcw
ret
clc
inc
jae
and
orl
cmpsl
icebp
mov
clc
pop
loopne
mov
cld
sub
add
sbb
sub
xchg
in
push
addb
inc
outsb
fs
mov
fisttpl
xchg
xchg
and
jbe
jmp
popa
leave
fwait
rclb
negb
fsubp
lods
hlt
test
and
je
iret
xchg
incl
mov
adc
jp
ljmp
je
outsl
jo
test
cli
push
mov
movsb
and
xor
sahf
cmc
loop
and
or
xchg
fcmove
xchg
testb
shl
rcr
cmp
icebp
cmp
fidivrs
xor
cmp
repnz
int3
stos
pop
sbb
jnp
xchg
into
inc
clc
ja
imul
loopne
repz
int
cmp
stos
cmp
mov
lret
nop
scas
sbb
xchg
mov
mov
mov
push
lock
cltd
xchg
sub
pushf
and
sarb
notb
xchg
movsl
push
fnsave
add
sub
sti
or
js
pop
sbb
ds
cmp
in
sbb
mov
testl
xor
jbe
mov
mov
in
and
in
out
mov
shl
icebp
loop,pt
inc
xor
pop
inc
cmovns
xor
loope
xor
push
fbstp
or
repnz
subb
sarb
dec
out
pshufw
adc
clc
insb
movsl
je
inc
xchg
push
or
xchg
pop
jecxz
dec
pop
cmp
and
data16
or
add
enter
lea
aaa
out
fisubl
out
xchg
push
and
xchg
addl
insl
mov
inc
loopne
fimuls
xchg
mov
fnstsw
pop
das
stos
mov
inc
pop
outsb
daa
xchg
and
outsl
mov
movsb
xchg
cmc
scas
add
rclb
or
fiadds
push
mov
into
aas
in
fisubs
pop
inc
sbb
fnstenv
push
sbb
jo
dec
sbb
xchg
xchg
mov
xor
push
es
lods
dec
xchg
xor
cwtl
and
push
mov
sbb
mov
xchg
hlt
mov
frstor
cmpl
adc
pusha
cmp
and
rorb
inc
daa
out
pop
lcall
pushf
outsb
adc
sub
test
cmp
imulb
test
add
stos
sub
ret
andl
mov
inc
sahf
lahf
loopne
jnp
insb
call
cli
imul
subl
xchg
or
xchg
bound
or
lea
mov
rolb
pushf
out
cmpsb
xor
push
and
cwtl
or
sbb
test
fcoms
and
ss
dec
shrl
mov
push
stos
lea
inc
popf
leave
adc
jle
mov
stos
fwait
inc
mov
pusha
aad
push
cmp
cmp
in
pop
xor
pop
fldl
pop
test
fstpl
rol
stc
leave
add
stos
jne
not
add
adc
jbe
inc
insl
sbb
out
inc
test
xchg
xlat
fdivrp
xchg
pushf
popf
neg
and
movsl
sub
rcrb
iret
jp
xchg
xchg
pushl
dec
xchg
mov
mov
cmp
or
sbb
les
sub
mov
mov
rclb
out
jns
xor
leave
in
mov
xor
in
sub
or
push
xchg
jbe
jae
bound
filds
xchg
aad
loop
jne
test
outsb
out
sub
in
sti
push
push
cmpsl
ljmp
outsb
incl
int3
xchg
add
add
push
arpl
jecxz
xchg
jp
xchg
dec
movsl
jge
loopne
stos
and
inc
xor
sti
mov
add
decb
and
xor
xchg
cmp
push
jno
jae
popf
push
stc
dec
repnz
xor
int
sbb
mov
lock
jnp
jno
adc
jle
xchg
mov
incl
orb
mov
pop
and
mov
daa
push
add
mov
out
cmpsb
add
test
jg
fstpt
cltd
addr16
in
int3
or
shl
mov
xchg
shl
dec
push
lret
adc
addr16
stos
adc
add
inc
xor
dec
js
or
addr16
es
cmc
rcrl
adc
mov
maskmovq
negl
in
fcomps
inc
rclb
cmp
aas
xchg
push
and
pop
mov
sbb
lret
arpl
orl
push
mov
sbbl
mov
mov
pop
jg
mov
aas
xor
mov
xor
xchg
xlat
inc
fcompl
loope
pmullw
imul
push
subb
lahf
cmpsl
and
xor
xor
mov
sub
xorb
fcoms
inc
mov
scas
add
cmp
lds
xor
popa
or
sbb
testl
inc
sbb
jg
pushf
jne
es
inc
cltd
movsl
lods
xor
or
mov
sbb
int
sbb
cmp
test
xchg
into
aas
mov
fsubrs
mov
insb
icebp
and
mov
enter
pop
sbb
xor
mov
subl
mov
sbb
addb
mov
fstpt
sub
push
sbb
jnp
xor
dec
and
cmp
sbb
sbb
mov
mov
mov
and
stc
mov
and
enter
mov
mov
ret
mov
mov
jle
sbb
pop
aad
fidivs
lods
cli
pop
jle
and
aad
mov
das
inc
xor
repnz
roll
outsb
leave
dec
outsb
adc
bound
mov
sbb
pop
shll
xchg
xorl
rcrb
fsubs
fmull
xor
mov
shll
aaa
push
cltd
xor
mov
mov
xchg
imul
mov
daa
fcmovne
sub
or
lds
out
pop
movsb
dec
lock
mov
out
sub
xchg
aam
adc
ss
hlt
out
xor
adc
xlat
enter
adc
pop
fadds
and
mov
lret
or
sbb
inc
or
dec
push
insl
cmc
fidivs
mov
pop
in
hlt
add
dec
mov
push
push
push
rorb
dec
scas
cmpsb
or
inc
imull
clc
pop
sub
jne
mov
cltd
shll
push
cmpsb
and
and
rorb
cli
mov
call
mov
js
jns
jae
pushf
push
lock
sbb
arpl
pop
inc
stos
jne
mov
cmp
xor
mov
hlt
fucomp
incb
dec
cmpsl
inc
enter
loop
or
ljmp
cld
mov
push
fsubrl
pop
dec
rclb
aad
shll
or
test
jne
gs
cltd
pop
adc
inc
fwait
xor
mov
sub
gs
aam
ret
xor
out
jecxz
push
push
or
ror
out
jns
ljmp
xchg
mov
imul
mov
adc
dec
fcompl
push
imul
push
les
cmpsb
xlat
xchg
aas
mov
ja
or
sbb
cli
inc
or
data16
mov
in
xchg
xor
jno
lock
popa
subl
test
mov
and
mov
inc
mov
lock
scas
or
fucomip
xchg
dec
xor
mov
dec
and
sahf
pop
into
mov
loop
aad
mov
mov
inc
lret
lret
jmp
test
jecxz
rcrb
std
sub
inc
insb
xlat
dec
push
push
lock
ret
adc
arpl
inc
insb
pusha
pop
popa
sbb
and
sbb
or
xchg
repnz
mov
sub
xchg
cmp
leave
xchg
ss
dec
add
sbb
inc
xor
add
push
data16
rorl
jo
shlb
sar
xchg
push
inc
test
adc
cwtl
lret
mov
mov
jae
outsl
adc
cmp
xchg
std
in
test
gs
xchg
pop
fstpl
call
xchg
mov
inc
cmp
cmp
bnd
ljmp
sahf
out
filds
sbb
push
jecxz
fstl
cmp
mov
dec
sahf
inc
test
mov
mov
cltd
sarl
jbe
xchg
inc
movsb
push
ret
cmp
gs
ret
sbb
orb
call
xchg
adc
mov
in
arpl
xlat
js
sbb
das
push
outsl
xchg
cli
into
popa
shll
jne
pop
imul
stos
insl
xchg
or
hlt
mov
insl
xchg
pop
aam
les
test
or
xlat
lock
inc
cld
enter
outsl
dec
sub
or
cmpsb
inc
bswap
data16
or
cli
mov
call
add
mov
shrl
push
mov
lock
mov
loope
rolb
rorl
mov
out
or
adc
sub
dec
and
xchg
push
mov
repnz
xchg
jbe
jns
sbb
sahf
jmp
stc
rcrl
xor
xor
clc
test
shrb
dec
ret
sbb
pop
pop
lock
cmpsl
mov
clc
mov
dec
jb
orl
out
sbbl
loope
cmp
cmp
or
dec
addr16
xchg
add
adc
inc
push
addb
mov
int3
loopne
popa
loop
js
loopne
lahf
mov
std
adc
push
inc
cmp
inc
out
out
mov
fxch
incb
stos
push
push
sub
jnp
cmp
jns
mov
mov
xor
int3
dec
out
push
lods
xor
mov
jb
jno
out
xor
jmp
dec
pusha
test
addr16
mov
cwtl
inc
repnz
aaa
mov
xlat
sbb
pop
pusha
repz
pop
mov
stos
div
push
xchg
xor
out
jnp
and
pop
ret
test
push
loope
stc
mov
dec
cmp
jbe
lods
pusha
sub
subl
icebp
lret
sbb
test
sub
enter
imul
rcll
loop
xlat
push
insb
lock
addr16
mov
leave
or
mov
jge
scas
cmpsb
jmp
mov
jbe
xchg
mov
scas
mov
or
out
push
ficoms
out
std
xor
push
iret
test
xchg
cmpsb
test
fs
mov
mov
add
popf
mov
addr16
sbb
lret
jne
inc
mov
and
and
inc
movsb
clc
call
mov
in
and
out
idivl
or
imul
adcl
jb
mov
mov
pop
sbbb
repnz
xchg
outsb
fmul
xchg
xchg
add
dec
lcall
add
sub
cltd
mov
shll
movsb
xchg
fmull
in
int
rorb
push
cs
fisubrl
or
inc
sub
push
mov
outsb
xchg
pop
out
or
adc
outsb
stos
mov
push
xlat
mov
jl
les
add
jne
mov
cmpsb
out
pop
mov
es
push
aaa
test
cwtl
xchg
ljmp
roll
into
lret
lods
sbb
sbb
and
insb
lcall
mov
cld
jge
hlt
pop
cmp
adc
pushf
nopl
bound
scas
ret
jne
testl
or
xchg
jno
fstpl
inc
push
push
xor
pop
jae
cmc
jae
aad
mov
mov
aam
out
and
jg
pushf
nop
inc
mov
and
ljmp
mov
mov
icebp
cli
scas
jns
pop
mov
push
and
ret
fwait
sbb
sub
inc
jg
xor
mov
repz
push
movsl
movsb
test
lcall
push
mov
pop
scas
xchg
aam
dec
or
rcl
cmp
mov
pop
and
mov
fwait
jnp
mov
sub
mov
cmp
push
sbb
jno
inc
out
add
les
mov
icebp
and
sbb
pushl
dec
mov
xchg
mov
pop
adc
xchg
adc
xlat
adc
jge
and
xchg
pop
pop
lods
cmp
push
pushf
push
sbb
or
add
inc
and
push
inc
sbb
test
sahf
mov
lds
sbbl
mov
or
aaa
jmp
mov
loope
imul
jmp
gs
iret
fmulp
sub
scas
adc
notb
daa
lahf
idivl
scas
inc
cmp
ja
sarl
xchg
cmp
add
sub
pop
push
dec
movsl
add
test
pop
dec
sbbb
add
loop
pop
dec
dec
rolb
out
xchg
and
stos
aaa
xchg
dec
aaa
orb
mov
adc
shl
inc
push
sub
push
jmp
pop
pop
jns
jle
shlb
jmp
lds
lcall
ljmp
repnz
out
and
cmp
or
jl
movsl
imul
imul
jns
lret
mov
decl
std
jge
mov
loop
add
xchg
mov
mov
sbb
mov
adc
repnz
jnp
int3
rclb
nop
and
inc
cmp
adcl
and
ds
mov
test
xchg
mov
or
or
lods
xor
ds
ja
cmp
stos
mov
cld
jbe
sbb
imul
sub
pop
jne
shl
mov
stc
mov
xchg
mov
push
dec
mov
mov
sub
adc
lcall
mov
stos
cmpsb
aam
fisubl
jae
pusha
push
jo
or
mov
rcrb
jnp
inc
std
cmp
mov
push
mov
mov
mov
mov
clc
inc
push
int3
gs
sbb
popl
jno
add
sbb
mov
scas
fstp
xor
or
pushf
and
sub
mov
push
mov
xchg
dec
add
fidivrl
jo
xlat
fidivs
jge
dec
inc
lock
sbb
add
jno
xchg
lea
leave
lcall
pop
iret
cmp
push
cwtl
loope
scas
imul
cmp
mov
sub
push
mov
sbb
xor
or
std
xor
lahf
push
lods
loopne
mov
pop
fnstsw
arpl
ret
add
mov
out
mov
cmp
push
cmp
sbb
test
popa
repz
mov
cltd
sbb
lret
and
popw
leave
es
int3
and
iret
jle
add
mov
push
sub
fmull
out
lods
ja
add
push
ret
lock
int3
js
sub
mov
loope
bound
fdivrl
hlt
out
nop
dec
test
in
cmp
and
stos
adc
xchg
lods
push
lods
mov
test
jl
cld
mov
insl
push
xchg
mov
pop
cmpsb
rolb
pcmpgtd
add
jns
ret
mov
adc
mov
sub
mov
repz
push
pop
test
and
pop
test
icebp
push
lret
testb
aaa
dec
push
sbb
mov
mov
and
xchg
push
sub
ljmp
dec
jns
xchg
test
sub
jg
std
adc
adc
andb
pop
fisubrl
stos
imul
decb
push
mov
ret
jb
cwtl
fsubrl
movsb
daa
shlb
fisttpll
mov
shlb
enter
inc
mov
sub
push
mov
sub
push
scas
cmpsl
push
mov
mov
mov
rorl
or
data16
mov
xchg
dec
aas
imul
or
mov
repz
pop
cmpl
fsts
inc
je
push
or
mov
jns
inc
jp
lea
dec
fnstcw
popf
xchg
dec
inc
repz
mov
xchg
insb
dec
dec
push
mov
xor
ret
test
dec
rcll
sbb
dec
cmc
sbb
in
mov
es
inc
test
jae
xrelease
cmc
test
out
cli
movsl
stos
dec
cmpl
in
js
xor
pop
addb
jle
divb
mov
xchg
mov
mov
inc
inc
mov
xchg
fdiv
inc
lcall
inc
mov
bound
xor
ret
push
mov
insl
lea
dec
jb
sbb
inc
mov
push
arpl
pop
ds
add
and
inc
test
mov
inc
jg
fs
hlt
mov
int
sub
sar
std
xchg
push
out
test
push
sub
inc
mov
push
add
aam
cmp
and
cwtl
test
lods
cwtl
aam
scas
lret
mov
jmp
rclb
insl
push
xchg
sahf
hlt
mov
test
fcmovne
repnz
aaa
pop
idivb
sub
jae
shlb
push
jmp
mov
leavew
loopne
sbb
ja
cltd
cmp
jecxz
push
shll
cmp
movsb
sub
jae
jb
push
scas
jae
sbb
repnz
add
test
push
xchg
push
sahf
add
adc
xor
outsl
jbe
insb
in
xor
rcr
shll
add
scas
dec
shl
sub
jge
push
call
adc
jbe
mov
or
mov
push
jge
xlat
cwtl
jg
jl
ret
and
xor
rcl
sti
popa
mov
testb
shll
filds
repz
cwtl
mov
fisttpll
and
mov
idiv
jmp
lahf
scas
dec
inc
xchg
xor
xor
and
add
push
sbb
mov
cmp
int3
movsl
mov
or
fs
jp
les
add
outsb
jae
or
fsubrp
loop
ret
sbb
sub
ret
hlt
out
into
and
add
xchg
stos
push
and
dec
sbbl
frstor
les
sub
das
add
in
mov
jmp
sbb
mov
mov
or
mov
push
xor
loop
dec
adcb
popa
addl
mov
mov
scas
pop
jnp
sbb
mov
ss
cmc
push
jnp
jns
xor
scas
imul
aam
addr16
mov
mov
bound
movsb
arpl
sbb
or
addr16
mov
fisttpl
add
int3
pop
xor
adcb
lret
push
jne
in
imul
pushf
orb
mov
push
mov
les
js
xor
xchg
stos
rclb
mov
sbb
ret
rorl
stc
test
inc
xchg
cmpsl
pop
jle
idivl
xlat
cmp
adc
push
lods
sub
shl
adc
jecxz
hlt
mov
dec
outsb
cli
jp
push
jmp
xor
adc
mov
dec
adc
cmc
jecxz
push
cmp
addl
cmp
jne
push
out
rol
ja
jne
out
lcall
cmp
test
dec
adc
push
test
shrb
lret
decl
xchg
mov
repz
scas
push
adc
cld
jle
pusha
mov
bound
int
jns
ja
mov
rcl
mov
push
mov
sub
mov
push
iret
xor
mov
pop
inc
push
pop
and
lahf
lds
nop
lea
aas
dec
or
popa
shrl
pop
movsb
inc
jns
add
ret
push
clc
in
pop
sbb
sbb
andl
dec
cwtl
inc
fmul
repz
insb
repz
cli
arpl
pushf
push
dec
clc
mov
or
jno
cmp
or
lcall
ret
shrb
rolb
int3
stos
cmp
push
mov
mov
in
es
pusha
cmp
pop
mov
xor
dec
adc
mov
jne
mov
jle
dec
div
jo
or
arpl
xchg
push
je
pop
add
enter
jl
or
clc
ret
test
pop
dec
ss
adc
scas
arpl
je
sbb
testb
arpl
add
or
mov
mov
push
stc
push
adc
int
add
cmp
movsl
lcall
jmp
insl
jb
and
into
or
imul
inc
push
popf
fstpt
adc
in
out
fucomp
mov
repz
inc
mov
mov
aam
mov
insl
out
aam
dec
add
or
mov
ret
xchg
lods
push
cmp
ficoml
cmc
repz
repnz
cmp
subb
fadds
pop
fildl
addl
pop
call
outsl
cmpl
sti
xlat
outsl
ss
push
fsts
and
cmpsl
fiadds
ds
mov
sbb
aad
and
in
adcb
inc
jno
fs
das
insb
xchg
or
push
jge
scas
add
rolb
sub
add
in
jg
es
cli
insl
roll
scas
faddl
push
popf
movsb
mov
pop
cmp
or
leave
lods
push
test
add
mov
nop
add
cli
std
dec
fisttpll
sarb
push
outsb
jmp
subb
in
das
xchg
and
xor
clc
fcmovbe
add
ret
sahf
xlat
aas
aas
lcall
jno
out
push
mov
pop
addr16
sbb
fcompl
sbb
mov
addr16
jmp
in
pop
and
xor
lock
pop
dec
dec
mov
pop
inc
mov
jno
int3
lahf
dec
pop
ficoms
call
cmp
insb
dec
adc
push
add
lahf
jno
sbb
js
stos
mov
repnz
test
mov
outsl
divl
push
cmpsl
das
mov
pop
adc
inc
iret
rol
loopne
push
decb
enter
and
inc
jae
int3
fnstenv
jbe
mov
dec
or
jnp
add
adc
or
pop
sarl
mov
add
and
es
mov
ret
ja
mov
cwtl
decl
insb
sbb
sbb
data16
cli
sti
popa
cmp
fsubrs
scas
pop
adcl
loopne
dec
out
jb
jmp
gs
mov
pop
in
push
aam
push
add
pop
push
jl
inc
cltd
or
add
call
sbb
adc
es
inc
or
mov
pop
mov
lcall
sti
inc
mov
test
sbb
xchg
jno
and
inc
out
and
ljmp
mov
lods
add
jmp
mov
cwtd
sahf
mov
sarb
mov
push
aad
test
mov
cmp
xchg
hlt
add
sti
and
leave
insl
pop
outsl
lret
stos
mov
outsb
add
xchg
jnp
push
ret
or
adc
add
sbb
pop
mov
aas
sub
outsl
rcrl
push
or
jo
cmpb
dec
jb,pn
jle
ljmp
fnsetpm(287
jbe
pop
pop
cld
pushf
roll
and
mov
xchg
jne
mov
ljmp
mov
mov
adc
movsl
inc
loope
mov
out
pmuludq
cmp
movsb
mov
ret
test
push
dec
lock
jb
vmovntps
vunpckhpd
fcoml
push
aam
jle
mov
add
lods
in
stc
jae
lret
out
xchg
xorl
inc
pop
jge
imul
test
lret
repz
lods
pop
cmpsb
in
sub
sub
xchg
mov
fldl
cmp
push
insb
push
jg
sbb
je
mov
inc
dec
xchg
ljmp
add
xor
pop
push
mov
adc
add
xor
int3
push
pop
sub
stc
cmp
stc
clc
pop
scas
les
xchg
mov
ret
dec
xor
in
dec
enter
add
sub
lea
ret
jg
fdiv
mov
push
ds
inc
aas
jbe
inc
push
fcomps
popf
icebp
loopne
divb
fistpll
adc
std
mov
sbb
lods
pushf
cmp
inc
push
add
jg
inc
shlb
insb
out
fisubl
push
sti
inc
add
mov
mov
push
xchg
lods
adc
rol
orl
es
jno
sub
sbb
rcrb
testl
push
lock
xchg
dec
mov
xchg
enter
inc
ss
add
pop
js
les
mov
jle
pop
lahf
lds
jg
aad
mov
add
int
add
mov
pop
push
sbb
jbe
sub
sbb
sub
inc
pop
push
pop
popf
add
mov
pop
jbe
enter
mov
out
pop
fbld
lods
cli
mov
rcll
ret
test
stc
mov
xchg
push
pop
xlat
sbb
fsubr
test
aad
jle
out
jp
stc
rol
sbb
jnp
jae
in
repz
mov
jo
cmpl
lcall
or
dec
cmp
jne
xchg
mov
cld
mov
cli
fisttpl
iret
dec
cmp
ss
pop
insb
fwait
movsb
inc
or
in
mov
adc
sub
insl
repz
out
cmp
push
jg
stos
mov
repz
ret
mov
adc
fdivp
cmp
and
dec
roll
test
popf
test
fs
mov
loopne
mov
or
lock
mov
addr16
dec
sub
jns
push
aas
push
lds
add
mov
aad
xchg
push
stc
fcomps
mov
push
fnstenv
loopne
aad
inc
cmp
daa
sub
xchg
dec
jb
pop
es
xor
mov
repz
bound
loope
out
push
mov
mov
stos
aam
xchg
add
mov
mov
xlat
mov
cmc
pop
ljmp
jno
dec
and
or
ret
pop
movsl
aaa
mov
jecxz
pop
sub
xchg
aas
inc
cmpsb
outsl
xchg
mov
sub
adc
lock
add
or
sub
mov
jmp
add
xchg
xor
pusha
sbb
jg
clc
push
enter
jbe
jecxz
insl
pop
xor
lea
dec
std
ja
push
inc
dec
adc
jae
pop
gs
xchg
adc
imul
repz
loopne
aas
movsb
lods
call
repnz
ljmpw
inc
mov
popa
lds
xchg
pop
adc
mov
xchg
and
fildl
cmp
dec
mov
ja
push
in
lock
adc
out
out
loopne
dec
sarb
loop
or
push
outsb
mov
xor
jb
add
add
inc
cmp
mov
pop
sub
repz
sub
mov
jb
mov
dec
arpl
jo
mov
mov
mov
sbb
mov
lret
fisubs
fidivl
out
ds
ret
sub
xchg
jne
xor
popa
pop
insl
sti
and
es
xchg
loope
int3
rcr
gs
roll
movsb
dec
out
jp
leave
aaa
arpl
add
incb
je,pn
adc
aas
movsl
mov
dec
stc
bound
repnz
xchg
or
add
test
test
inc
push
sbb
adc
dec
repz
mov
inc
out
adcb
andb
pop
outsl
outsb
sub
sbb
cmc
or
mov
repnz
xchg
push
std
fisubrs
or
sbb
fcompl
pop
xchg
inc
sbb
or
lret
cli
repz
xchg
mov
add
xchg
je
jmp
push
jns
lea
nop
push
pop
push
xchg
rclb
mov
addr16
fcompl
xchg
cmpb
cmpsb
lret
callw
cmp
mov
jb
fildll
repnz
inc
fidivrl
mov
xchg
sub
aas
sbb
add
jle
stos
cmc
cli
insb
fwait
gs
jae
nop
scas
popa
pop
mov
mov
xor
inc
and
div
addb
mov
cmpsl
and
lret
leave
push
int
cmpsl
bound
jl
rorl
mov
mov
xchg
pop
out
push
jnp
addl
call
stos
push
add
fiadds
push
in
pusha
and
es
clc
into
and
ss
icebp
xor
out
dec
dec
sbb
sub
jae
mov
push
nop
gs
bound
jne
push
jo
addr16
pop
cmpl
scas
xlat
stos
jp
xor
in
mov
cld
mov
mov
pop
or
mov
xor
xor
das
push
jbe
fcmovu
decb
subb
mov
pop
les
movsb
push
sub
jno
dec
xchg
mov
cmp
and
orb
gs
mov
mov
mov
mov
jne
mov
xor
lods
add
mov
cli
mov
and
bound
loopne
dec
sbb
repz
and
mov
push
dec
cmp
jg
cwtl
jb
cmpsb
pop
nop
loopne
mov
aam
adc
idiv
or
or
cmp
dec
rcl
and
aam
js
rorb
push
cli
nop
or
lods
ror
jns
jge
xchg
aas
out
push
rolb
xchg
mov
fwait
jl
divb
cli
dec
fsubr
cmpsl
pop
in
dec
lret
xchg
es
test
ret
leave
mov
int3
mov
inc
scas
inc
xlat
lods
and
jo
or
arpl
imul
mov
call
cmc
jecxz
xor
push
mov
pop
in
ret
mov
insl
and
cwtl
pop
sub
xchg
jno
pop
insl
mov
cmp
xor
xor
mov
jbe
mov
nop
push
ja
repz
dec
or
pop
cwtl
leave
add
outsl
inc
mov
je
icebp
or
cs
call
adc
dec
inc
arpl
mov
addr16
mov
loope
or
shrl
hlt
gs
lret
cmp
jge
mov
mov
mov
lds
mov
sub
mov
sbb
xor
jmp
pop
lock
mov
mov
fcompl
xchg
push
inc
fdivr
mov
sti
mov
jne
dec
cld
hlt
and
lret
movsb
les
stos
push
aaa
xor
comiss
lods
xchg
shll
mov
pusha
arpl
fs
int3
addr16
lock
cmp
int3
push
jecxz
aam
and
xchg
mov
in
pushf
fisttpll
adc
into
push
lcall
push
xor
xchg
lret
adc
movsl
or
mov
mov
shrl
cli
xchg
jae
mov
jge
cmp
jle
in
imulb
or
mov
repnz
addr16
cld
xor
cmp
popa
in
mov
mov
imul
loopne
cmp
and
cmpsb
into
lock
xchg
std
push
bound
cmp
ja
js
in
shrb
cli
jl
dec
das
cli
inc
lcall
out
add
je
adc
repz
fsubrp
push
cmp
sti
jne
inc
lret
jo
xchg
dec
leave
xchg
int3
inc
ret
push
icebp
cld
rol
sbb
pop
jo
mov
pop
mov
aaa
add
les
lahf
test
add
test
out
into
out
out
push
repnz
pushf
mov
sti
sub
call
push
in
in
cli
dec
adc
sarb
push
out
clc
test
lock
xor
repz
popf
push
ss
adc
jae
pusha
push
dec
adc
push
jbe
fucom
mov
outsb
xor
sub
es
jmp
clc
lahf
adc
or
stc
addr16
sub
or
cmp
pop
push
cmp
dec
jecxz
hlt
fisubs
pop
cltd
add
aad
shlb
or
fcompl
leave
mov
mov
mov
jmp
mull
xlat
ret
clc
jle
add
leave
sub
sbb
or
xchg
and
out
fmul
pop
stos
ja
dec
jo
mov
mov
dec
cmpsl
mov
ret
test
pop
mov
mov
inc
and
adcb
test
pop
push
push
dec
sbb
jae
rorb
cli
shlb
imul
sbb
jns
inc
das
gs
repz
push
test
xchg
movsl
or
shlb
jno
out
push
insb
dec
ds
fnsave
pop
push
loope
mov
mov
jo
outsb
testl
pusha
mov
sub
inc
mov
inc
insl
lret
into
and
clc
movsl
in
into
jns
loope
lret
mov
xchg
jp
sti
pop
inc
negl
rorl
enter
jo
daa
cli
je
jnp
jge
adc
jg
jg
pop
dec
inc
lahf
jl
fwait
adc
dec
pop
adc
jno
ljmp
push
push
imul
sbb
add
xor
pop
mov
fucomp
mov
pop
fcomi
push
mov
mov
cltd
dec
clc
cmp
ds
shll
daa
sub
inc
cltd
addr16
cmpsb
sahf
xchg
ret
cmpsl
je
cld
mov
adc
xchg
aad
addr16
scas
sbb
mov
std
xchg
adc
mov
push
sub
les
sahf
lds
daa
outsl
adc
xchg
adc
mov
sbb
or
push
sub
ss
cmp
icebp
mov
out
mov
jmp
jnp
push
xchg
stos
js
jmp
fdivl
iret
aad
cmp
mov
fs
jns
es
mov
rcrb
push
push
das
mov
mov
arpl
sub
sub
repnz
dec
mov
fwait
test
or
jnp
xchg
sbb
sbb
loop
push
pop
dec
mov
imul
jecxz
in
cmpsl
cmpsl
rcr
fndisi(8087
mov
outsb
pushf
mul
dec
addr16
xor
and
addl
mov
dec
push
stc
adc
mov
ljmp
push
or
and
cld
mov
dec
imul
arpl
dec
ret
mov
mov
iret
test
adc
cli
xchg
inc
enter
xchg
inc
sti
aad
cmpsl
adc
mov
orl
mov
pop
imulb
pop
adc
pop
stc
imull
movl
cmp
fs
jle
dec
pop
pop
jg
outsb
or
cld
jecxz
in
sarb
incl
mov
addr16
stos
mov
lods
jle
inc
imul
int3
sahf
add
adc
mov
mov
or
mov
test
or
pop
mov
fwait
in
dec
imul
jmp
cltd
dec
int
stc
pop
xor
lods
xchg
fstps
and
inc
popf
int3
mov
testl
pusha
sarl
add
xorb
aaa
lcall
dec
hlt
inc
into
stos
mov
and
mov
xchg
mov
scas
mov
push
jb
das
mov
in
push
sbb
mov
aad
xchg
and
and
push
mov
lods
xor
shll
jbe
mov
mov
sub
adc
clc
pop
ss
xchg
rcrb
std
sarl
xchg
push
lret
push
mov
or
rcrl
adc
pop
call
mov
daa
iret
in
scas
sbb
pop
mov
lahf
test
pop
jge
pop
cltd
fcmovnb
cltd
xor
cmp
cmpsl
add
daa
and
cmp
enter
sub
in
cmp
inc
iret
adc
mov
es
push
nop
int3
xor
sbb
out
fildl
ds
lahf
shl
ljmp
mov
add
movsb
fnsave
dec
out
test
cli
push
jne
jl
xchg
stos
and
shrb
fucomi
add
inc
xor
pusha
out
and
in
outsl
ret
sbb
mov
imul
dec
mov
jb
pop
leave
inc
xlat
inc
fstl
cmp
jne
jb
mov
es
mov
cmpsl
cmp
mov
inc
mov
and
lcall
mov
ret
pop
fwait
in
gs
and
mov
jp
mov
loop
scas
jbe
cmpl
jle
dec
pop
lret
scas
mov
test
or
xchg
fisubl
dec
jp
inc
mov
cmp
and
dec
mov
mov
push
stos
or
cld
inc
aas
inc
subb
pop
test
jecxz
in
or
dec
inc
xor
dec
mov
jns
out
xor
push
out
add
idivb
mov
cmp
mov
cmp
adc
push
pop
xor
push
sbb
rclb
roll
cltd
outsb
ret
jno
xchg
imul
push
clc
ficoms
popl
ljmp
dec
adc
aaa
loope
fldenv
jb
jmp
es
mov
outsl
stos
xchg
fistps
test
or
mov
test
sahf
arpl
sbb
jns,pt
inc
popl
fcmovbe
in
repz
int
outsl
push
or
call
outsl
ret
sbb
xchg
jp
push
push
out
and
push
xchg
aaa
popa
fists
xchg
push
es
popa
rcrl
ficoms
stos
mov
mov
rcr
jnp
mov
and
sarl
out
or
cltd
sbb
repnz
push
add
cmp
pop
sub
shlb
jno
mov
jle
negl
in
mov
test
add
pop
pusha
pop
or
ficomps
divb
pop
add
ret
outsl
cwtl
stos
insl
out
xchg
push
or
xchg
aas
fbstp
mov
imul
xlat
js
arpl
xchg
add
iret
cmpsl
clc
adc
xchg
movsl
rcl
pop
std
jmp
xchg
mov
mov
ljmp
addr16
xor
sbbl
lahf
sub
es
das
rol
addl
push
lcall
adc
jecxz
pop
add
cmp
mov
insb
adc
outsl
lcall
push
sub
xlat
mov
shlb
js
cmc
sbb
adc
inc
mov
out
mov
lock
or
ret
aas
stos
in
add
pushf
mov
or
sbb
mov
inc
je
ret
push
ret
sbb
int
mov
cs
inc
mov
xor
pop
imul
cmp
cmp
imul
subl
and
lahf
mov
call
std
imulb
add
or
inc
push
bound
jmp
les
pop
or
arpl
lahf
orl
and
mov
inc
loop
cmp
or
out
repz
mov
imul
xchg
dec
clc
cli
aaa
push
adc
mov
cmp
es
push
or
dec
in
out
adc
cltd
js
mov
in
sbb
jno
jle
mov
clc
movsb
inc
and
pop
lcall
cmpsb
lods
jae
testl
cmp
in
sbbl
aaa
insl
addr16
lcall
out
xor
in
mov
add
and
and
pushf
jne,pn
cmp
gs
mov
push
push
xchg
out
jmp
sbb
dec
in
xor
stos
or
jl
add
and
jo
fnstcw
sbb
sti
sub
jmp
xor
in
imul
dec
inc
dec
add
adc
add
imulb
adc
pop
in
stos
dec
and
aad
sub
jl
insb
loope
out
sbb
ret
adc
xchg
movsb
ret
jmp
inc
xchg
mov
cmc
push
pop
cmp
dec
std
dec
mov
es
loopne
aad
xorb
imul
push
shll
pcmpeqw
js
in
inc
ret
add
jecxz
sub
aam
sbb
vunpckhps
loop
cmp
adc
sti
mov
jmp
sub
iret
pop
push
enter
ret
jecxz
add
loop
jmp
std
mov
pop
outsb
test
popa
jns
xchg
cld
or
ds
stc
sti
int3
nop
push
out
dec
sbb
cli
push
or
or
pop
jp
loopne
push
add
sbb
adc
jl
push
push
sahf
and
jge
das
mov
dec
pop
pop
cld
ljmp
jae
aad
pop
mov
add
sbb
es
cltd
in
lahf
adc
cvttps2pi
add
jl
in
cmp
sarl
cmp
xor
movsl
popl
xchg
cmpsl
lret
xor
pop
in
sub
xlat
pop
icebp
jbe
shlb
dec
ret
adc
lods
std
mov
dec
mov
mov
pop
ss
mov
inc
and
mov
aas
sub
xchg
lds
push
das
inc
in
sub
jg
insl
push
jg
mov
push
and
js
sarb
or
ret
push
and
rolb
push
sbb
test
adc
push
jg
sti
stc
fidivrl
push
ss
cmpsb
pusha
push
fstpl
pusha
push
into
addr16
jg
mov
dec
mov
lret
fdivr
testl
lcall
cmp
xchg
in
mov
xorb
mov
mov
imull
fdivs
push
mov
or
gs
add
xchg
lret
xchg
fisubrl
scas
pop
pusha
jno
pop
xchg
pushf
jle
testb
int3
imul
cs
nop
and
ret
out
sahf
push
pop
iret
lea
add
cmpsb
repz
sub
add
ljmp
mov
cmc
loope
daa
pop
pop
stos
mov
aam
adc
les
bound
sbb
sub
movsl
adc
test
les
xor
pop
dec
sbb
xorl
xchg
pop
imul
mov
mov
pop
std
inc
outsl
popf
cmp
add
xchg
scas
test
xor
xchg
cld
ljmp
fidivrs
pushf
nop
pop
jecxz
mov
fstpt
push
aaa
fcomps
dec
mov
imul
push
incb
mov
data16
jge
mov
mov
push
push
pop
dec
cmc
mov
xor
mov
jle
sub
and
add
rcll
adc
pop
xor
xlat
push
xor
test
push
aam
sbb
push
adc
outsb
repz
inc
xchg
pop
xchg
pop
inc
pop
std
repnz
push
icebp
dec
inc
xchg
xchg
sbb
fidivrl
jmp
ja
push
jmp
loopne
dec
jbe
arpl
in
sbb
scas
inc
lea
scas
orl
sbb
lods
int3
xchg
aam
jnp
jae
adc
hlt
mov
in
ret
sahf
popf
dec
inc
inc
and
mov
inc
cmpsl
outsl
sub
cs
pusha
sub
lahf
or
xchg
mov
inc
xchg
mov
jbe
jae
enter
adc
addr16
add
jge
jecxz
js
xchg
add
dec
shll
jmp
pop
mov
add
repnz
fbld
inc
out
sahf
mov
push
sub
outsb
mov
es
jge
jecxz
mov
mov
xor
mov
cmp
xchg
popf
outsb
sbb
sbb
addr16
int3
xchg
pop
add
popf
lea
jne
mov
inc
add
cmpb
shll
out
jl
orb
stos
jg
pop
fucomip
push
jl
mov
push
mov
repz
popf
push
push
incl
cld
mov
rorl
add
sub
push
bound
cmc
inc
add
push
insl
in
outsb
push
loop
gs
pushf
and
cs
lods
lods
into
jb
mov
jg
mov
in
iret
mov
cmp
jge
push
lcall
lret
mov
inc
idivb
in
in
shrl
pop
adcb
mov
test
ds
cmp
inc
sbb
dec
in
repz
add
cmpsl
xchg
jae
rcr
fidivl
mov
push
jns
jg
cld
jmp
mov
test
hlt
add
test
arpl
test
dec
or
out
cmp
call
testb
inc
icebp
enter
hlt
loope
jge
xor
dec
lcall
or
jb
bound
adc
jns
and
daa
ficoml
lea
or
and
dec
mov
inc
pop
arpl
mov
ret
mov
pusha
lods
shl
and
repz
ret
scas
movsb
pop
int
cmpsb
mov
xchg
sub
ja
in
lret
add
push
jae
cs
jmp
jno
xchg
gs
pop
repz
pop
jg
xchg
mov
mov
cld
sbb
xor
sbb
xchg
adc
in
jns
mov
sub
sub
cmp
clc
icebp
stos
or
cmc
or
stc
lahf
sbb
add
js
jg
dec
repnz
repnz
shlb
push
dec
decl
lret
mov
pop
cmpsb
lcall
or
ret
inc
adc
push
imul
das
ljmp
in
or
mov
ljmp
mov
add
rclb
cmpsl
mov
shr
aas
fwait
pop
jecxz
movsl
pop
loope
jns
in
sbb
frstor
xchg
test
xor
add
adc
or
int3
in
repnz
dec
fstpl
in
xchg
and
jno
imul
sub
ss
pop
push
repnz
lods
pop
xchg
enter
jbe
fnstenv
movsb
lea
js
movsb
cli
xchg
pop
test
mov
xchg
sub
int
out
das
loope
sbb
mov
push
out
mov
pop
outsl
cs
mov
bnd
adc
andb
xor
dec
push
sarb
xchg
mov
aad
pop
addb
insb
outsl
dec
sbb
mov
mov
cmc
outsl
andb
mov
inc
push
cmp
xor
xchg
daa
push
push
pop
aas
sahf
in
in
jne
mov
and
push
cmc
dec
xor
call
mov
jnp
jg
jb
or
loope
mov
jns
mov
ja
int3
iret
ss
sbb
xor
daa
cmpsl
cmp
lock
stos
xlat
cltd
imul
lea
mov
repz
mov
mov
dec
subl
cmp
lcall
pop
out
in
stos
daa
iret
mov
pop
cmp
repnz
je
aam
loop
aad
fwait
sbb
cmp
rorl
ljmp
push
in
sub
es
loope
cmpsb
aas
inc
mov
jecxz
ret
icebp
out
pavgw
js
pushf
insb
loope
pushf
cmp
xor
cmpsl
ror
push
icebp
and
xor
das
xchg
sar
jae
dec
ficompl
in
xor
imul
jmp
fwait
subb
sub
dec
jg
cs
imul
ds
inc
and
push
out
movsl
es
js
call
cmp
adcl
cld
dec
leave
add
and
jb
lret
sub
cltd
stc
into
xchg
outsb
xchg
jb,pt
clc
xor
mov
iret
scas
sbb
mov
push
jbe
or
or
sbb
shl
adc
push
mov
mov
fdivl
loope
xorb
push
cmp
mov
sub
xchg
mov
ret
repnz
jecxz
test
sbb
das
dec
leavew
cmp
mov
iret
incb
enter
pop
mov
lds
push
shl
mov
mov
shrl
inc
push
pop
adc
dec
outsl
pushl
adc
jns
dec
cmovb
push
push
rcll
cmp
sbb
dec
or
or
sub
es
cmpsl
filds
adc
repz
xabort
cmp
out
mov
mov
mov
std
int
lret
mov
jmp
ret
shr
push
sbb
mov
mov
or
adc
cmp
mov
push
test
sti
adc
pop
add
xor
frstor
sti
fldl
lret
mov
jne
gs
hlt
lods
pop
pop
dec
xchg
jg
and
inc
inc
sahf
adc
xchg
repz
shlb
lcall
addr16
dec
gs
cmp
pop
fisubrs
pushf
out
ljmp
or
stos
mov
jmp
ret
mov
mov
icebp
clc
in
setno
jl
adc
mov
mov
out
adc
sarl
inc
xor
popf
xor
push
dec
mov
lahf
sbbb
mov
xor
movsl
leave
xor
lods
fdivl
dec
jbe
pop
movsl
popf
lret
and
popl
mov
xor
mov
dec
cmp
jecxz
xor
ret
out
adc
mov
rol
inc
mov
push
cld
icebp
adc
dec
aad
mov
int
push
ljmp
fsub
fidivrl
jl
jb
mov
jbe
add
xlat
mov
mov
sbb
ret
push
and
test
aad
mov
dec
pushf
ret
push
push
add
clc
sub
mov
fdivl
data16
xchg
std
bound
stos
sbb
jne
adc
cmp
sahf
and
repnz
mov
cmp
adc
stos
sbb
jns
sbb
jbe
push
cmc
pop
mov
lret
ja
inc
insl
adcl
ja
inc
or
push
loop
push
test
lea
and
cwtl
call
data16
sbb
add
inc
dec
int
sub
push
xchg
lcall
sbb
aas
shll
push
sub
cmpsb
dec
scas
or
mov
mov
into
or
inc
or
and
rorb
add
xchg
loope
pop
cmp
sub
cltd
inc
imul
cmp
sub
lods
lock
lahf
test
cltd
mov
adc
xchg
jg
push
add
sbb
mov
lahf
add
inc
loopne
frndint
and
cmp
scas
pop
cmp
fildll
into
sbb
xor
mov
sub
stc
mov
movsl
adc
out
cmc
lods
enter
das
push
fstps
dec
inc
data16
or
mov
adc
xor
inc
adc
push
adc
adc
aam
xor
arpl
repz
mov
cld
in
or
xor
dec
shll
pop
pop
cmp
dec
xor
jl
mov
mov
xchg
pop
inc
xchg
stos
shll
push
mov
jg
or
call
jbe
jb
fisubrs
sbb
mov
cwtl
in
push
xor
test
jbe
mov
js
xchg
addr16
ljmp
cltd
int
mov
push
pop
inc
add
xlat
fidivl
js
int3
aas
dec
out
rorl
je
sub
rcrb
insl
inc
in
and
jo
test
mov
pop
fwait
out
rcrl
dec
sub
addr16
push
sub
mov
dec
int
shrb
mov
jge
in
xchg
mov
int3
sbb
in
jge
xchg
pop
enter
lcall
sahf
pop
pop
xor
stos
and
add
out
fld
lret
xchg
xchg
outsl
pop
jge
aas
mov
test
scas
scas
mov
cmp
scas
and
enter
imulb
std
sbb
fcoms
jp
ds
fstpt
push
es
gs
imul
std
in
mov
jg
addr16
pop
xorb
jbe
or
add
int3
xchg
cmc
mov
imul
xchg
jle
jecxz
lock
insl
xor
out
cmpsl
fidivrl
dec
xor
xor
out
out
mov
les
stc
dec
jge
dec
clc
sub
into
call
push
stos
add
pusha
sub
pop
ss
push
push
xchg
mov
out
sbb
mov
add
cmp
jb
int3
mov
outsl
jns
push
addl
scas
push
jmp
xor
sub
lea
outsb
movsb
aaa
cmpsb
or
sub
xchg
pop
scas
mov
xchg
testl
mov
mov
mov
or
add
pusha
ret
pushf
jae
stc
test
add
or
je
scas
ret
aas
fld
aas
mov
rolb
xor
les
cwtl
lret
aas
cmp
mov
fwait
inc
sub
lret
mov
and
adc
push
decb
dec
sbb
mov
push
xor
push
pop
les
pop
xchg
out
orl
mov
push
shrl
push
fdiv
mov
pop
sub
push
sub
shll
out
shll
ljmp
cmc
aad
push
push
aas
xchg
mov
inc
sbb
push
xchg
xor
test
icebp
movsl
sahf
adc
das
jno
test
fists
push
cmp
or
sub
stc
xchg
cwtl
add
add
cmpsl
mov
inc
xor
std
mov
pop
and
cli
int3
add
lret
push
and
or
loopne
cmp
and
out
ret
rcl
or
je
jb
stc
mov
xchg
and
mov
push
hlt
or
addr16
in
or
dec
dec
in
mov
cmp
mov
lock
mov
mov
lock
push
shrb
mov
sbb
jg
test
ret
ret
neg
or
fidivs
iret
mov
xchg
mov
dec
fs
cmp
icebp
je
adc
call
pop
addl
bound
sub
mov
scas
jmp
outsb
lds
movsb
in
push
add
mov
imul
xchg
scas
mov
loop
or
lcall
mov
lea
jg
xor
jmp
mov
pop
fsubl
cltd
jle
sarl
mov
popl
int
icebp
fbld
ror
fstp
add
adc
lahf
mov
xchg
test
jns
push
mov
inc
sub
in
outsb
ja
mov
sahf
je
mov
cli
icebp
xchg
and
js
test
mov
rcll
inc
xchg
cmp
sub
push
pop
andl
js
fsubrl
gs
mov
cld
shrl
pop
das
pop
xor
dec
hlt
hlt
adc
aad
xor
sub
push
cmpsl
ffree
cmp
inc
sub
push
jns
ss
aad
xor
popa
xchg
or
popf
pop
ljmp
das
cmc
mov
test
icebp
data16
repnz
enter
xor
add
int
leave
inc
mov
adc
mov
xor
dec
mov
or
and
adc
mov
jecxz
xchg
out
addb
lock
pop
int3
adc
or
sub
pusha
hlt
xchg
jg
xchg
xchg
push
adc
cmpsl
jo
cmpsb
inc
sahf
mov
mov
je
outsb
lds
clc
mov
aad
cld
fwait
into
cmp
jmp
rcll
and
in
int
jg
loope
jl
dec
mov
jne
leave
jmp
and
mov
fisubrs
jb
push
mov
sub
mov
pop
adc
xchg
xchg
sub
fldcw
jmp
jge
pusha
inc
fstpl
popf
xchg
pop
xchg
lcall
dec
es
lods
dec
and
dec
repz
push
mov
mov
mov
mov
push
out
add
push
jae
and
or
mov
ja
jno
out
inc
mov
mul
inc
sub
fnstsw
pop
cmp
sub
xchg
pop
insl
test
sarb
shrl
rcrb
inc
xchg
cmp
xchg
cmpsb
adc
addl
pop
daa
pop
xchg
movsl
adc
mov
lods
fsubr
lea
jmp
jae
jb
jl
das
cld
jne
jno
cmpsb
or
fstl
and
mov
mov
xchg
sarb
pop
imul
jmp
cld
iret
out
sbb
mov
and
mov
popf
mov
icebp
cmp
jns
push
imul
adc
or
fmuls
pop
mov
xor
fmulp
lcall
cltd
ss
repz
push
int
je
rorb
pop
jmp
inc
push
jmp
and
adc
mov
stos
jns
xlat
lods
cmp
popl
push
lods
mov
into
out
dec
mov
in
inc
mov
ficompl
fwait
in
cltd
shrb
and
cmpsl
xchg
jbe
sub
imul
out
mov
mov
adc
inc
lods
adc
cld
in
clc
imul
ljmp
leave
subb
loop
popa
mov
sbb
out
rcrb
or
dec
test
imul
sbb
adc
xchg
inc
popa
jp
and
rorb
xchg
sbb
icebp
add
xor
aam
or
pop
mov
mov
notl
or
scas
xchg
rcll
leave
mov
loope
ret
inc
sbb
xchg
sub
push
aaa
sbb
sub
in
scas
loopne
inc
xchg
dec
mov
int3
cmpsb
dec
repnz
in
mov
imul
mov
xchg
mov
xor
add
xchg
sub
cltd
push
into
and
sbbb
jge
cmpl
fstpl
les
cmc
mov
aam
test
ror
adcb
lock
pop
call
dec
lods
scas
lods
vpsubusb
mov
add
cltd
cmpsb
push
cmpsb
icebp
adc
and
nop
popa
mov
mov
cld
dec
pushf
xor
scas
shlw
pop
cmpsl
add
add
add
jnp
add
sub
push
add
or
insl
mov
xchg
sbb
jb
inc
mov
cltd
xlat
lcall
mov
daa
pop
pop
push
scas
cwtl
loopne
rorl
in
xor
xchg
loop
cwtl
adc
mov
dec
pop
adc
ljmp
into
fsts
xchg
dec
test
or
and
pushf
insl
xor
add
adc
sbb
int
or
lret
sub
xchg
rcrb
mov
lods
lock
outsb
inc
call
mov
out
leave
mov
andl
lret
ret
and
adc
sbb
scas
jae
cmc
mov
in
daa
in
lea
cmc
lock
out
push
xlat
call
lock
aad
in
sub
vcvtdq2pd
movsb
out
cmp
shll
stos
aaa
clc
outsb
push
stc
adc
inc
jb
pop
pop
add
mov
mov
icebp
out
enter
mov
sub
imul
pop
test
jle
sub
mov
fists
pop
xchg
mov
rclb
daa
xchg
dec
adc
mov
mov
xchg
cli
daa
cmc
dec
mov
stos
push
mov
mov
bound
icebp
pop
ret
mov
mov
mov
shlb
mov
dec
xor
sbbb
call
sbb
jge
push
and
fbstp
push
int
add
push
push
outsl
xchg
or
nop
jnp
cmp
pushf
sub
adc
sbb
lock
mov
mov
dec
orb
ud1
lret
insb
cli
lahf
icebp
rcrb
mov
sub
popl
mov
addr16
lock
movsl
std
cmp
dec
fdiv
push
pushf
sbb
mov
and
inc
insl
test
push
in
or
mov
and
ret
loope
popa
movsl
and
bound
nop
push
stos
mov
or
sbb
pop
rcrb
adc
or
pop
shl
vpaddb
push
xor
pop
std
loop
out
push
outsb
and
icebp
mov
es
inc
lahf
dec
mull
adc
fs
inc
xor
scas
bound
or
movsb
sbb
adc
out
in
jecxz
mov
inc
gs
movsb
dec
pop
or
test
adc
xchg
inc
sbbl
pop
aas
sbbl
jmp
xchg
add
dec
test
dec
orl
outsl
fsubrl
sbb
negl
pop
frstor
adc
ret
pushf
push
lods
fwait
mov
sbb
cmc
pushl
jecxz
data16
dec
fisubs
movsb
xabort
mov
pop
leave
lods
dec
sahf
mov
xchg
and
push
inc
mov
sub
jae
test
cmp
mov
or
inc
fldz
lret
jno,pt
loope
or
xor
cmp
add
inc
insl
xchg
fsub
add
pcmpeqw
cmc
inc
pop
xchg
xor
aad
orl
jae
scas
mov
mov
aas
fsubrl
xor
mov
out
imul
daa
mov
test
movsl
sbb
mov
addr16
outsb
stos
xchg
sub
sar
sbb
sbb
sbb
dec
inc
ret
addl
pushf
cmp
mov
jmp
jle
out
inc
jg
jb
mov
clc
sbb
lea
mov
mov
in
in
sbb
push
dec
scas
int3
adc
add
lret
fcoms
sub
pushf
imul
jb
jp
jne
cmp
cmpl
jnp
add
ret
js
mov
iret
ljmp
int3
adc
xor
shrl
shr
and
push
xorb
jbe
stos
mov
test
and
mov
jmp
dec
gs
test
sahf
push
add
mov
sahf
jecxz
sub
jns
hlt
xchg
cmc
mov
inc
popa
imul
imul
cmpsb
in
mov
and
lock
mov
mov
xchg
insb
mov
add
ljmp
shrl
add
in
lret
inc
fst
dec
stos
add
movsl
sub
mov
ja
lret
mov
hlt
pop
fwait
mov
loop
and
xchg
in
inc
xlat
lcall
add
imul
scas
jecxz
test
and
cmpsb
ja
fdivrl
cmpl
icebp
aad
inc
fwait
lock
js
jne
rcl
into
ror
cmp
outsb
sahf
xchg
sub
or
loopne
stc
xor
jg
repnz
mov
mov
sbb
adcb
les
rorb
cltd
movsb
popf
push
out
lods
mov
pusha
popa
adc
mov
out
das
stos
mov
inc
cmp
jge
jae
add
leave
scas
fnstenv
rol
mov
jmp
push
js
xor
ja
cmp
cmc
add
imul
cli
shlb
push
mov
aas
outsb
dec
and
inc
xchg
shll
dec
xchg
je
aaa
push
sub
popf
icebp
sbbl
pusha
ret
dec
repz
push
xchg
outsl
pop
aas
in
dec
aas
mov
rcll
dec
mov
lock
stos
sti
les
add
popf
mov
arpl
dec
mov
icebp
mov
add
pop
dec
out
loop
jle
inc
dec
dec
or
and
rorb
je
jmp
dec
scas
repz
xchg
les
sti
mov
popf
or
push
add
mov
or
movsl
out
lret
call
adc
insb
je
mov
idivl
xchg
imul
push
pusha
xchg
mov
ds
mov
dec
sbb
push
ret
jecxz
loope
leave
push
movsl
fisubs
lret
or
lods
dec
sahf
in
rorb
lods
cmc
sub
sahf
push
mov
sbb
or
add
sub
mov
jle
aas
imul
loope
xor
test
or
pop
xlat
repnz
cmpsb
clc
pop
jge
aas
push
out
iret
movsl
and
pop
pop
repz
ret
test
cmpsl
pusha
fwait
nop
or
sub
andl
ja
adc
jno
lret
test
pusha
repz
sbb
xchg
adc
inc
mov
popf
call
mov
rol
insb
das
xchg
mov
loope
pop
jbe
inc
jmp
mov
dec
mov
pop
out
cmp
jmp
ja
sbb
push
sbb
popa
mov
adc
xor
lahf
mov
mov
inc
sub
push
shrl
or
scas
rol
cld
test
in
pop
test
adc
outsb
jp
cmc
clc
das
mov
jne
cmp
aad
test
scas
test
inc
mov
in
adc
loop
mov
jl
inc
rcrl
ja
sti
mov
pop
cmpsb
adc
scas
xchg
popf
mov
sbb
add
lods
sbb
mov
mov
les
ficoml
aad
lock
lcall
movsl
stos
cmc
xchg
cmp
adc
lea
icebp
sub
pop
sub
loopne
inc
jge
lock
mov
out
sbb
getsec
lcall
pop
adc
inc
adc
dec
mov
xor
iret
dec
jp
or
in
jno
scas
test
arpl
and
xchg
fisubs
jmp
arpl
adc
mov
xor
or
pop
aas
loop
fs
stos
pop
or
std
popf
cmp
repnz
xchg
je
lret
and
hlt
daa
enter
sub
and
aam
cli
push
and
xchg
cli
sub
out
push
cwtl
pop
mov
jmp
das
adc
pop
std
sub
hlt
sbb
dec
inc
mov
or
in
test
data16
stc
out
sub
je
sahf
imul
shlb
jg
xchg
add
test
push
lods
outsl
xor
insl
cmpsb
mov
sub
enter
jae
add
adc
imul
dec
clc
popa
iret
or
pushf
and
pop
scas
scas
or
dec
js
in
cmp
adc
inc
jg
outsl
insb
mov
aam
shl
mov
fdivl
or
sub
pop
lea
aaa
mov
mov
mov
scas
and
sahf
je
push
aam
jno
pop
cmp
cld
or
pop
int3
shrb
das
out
jns
sub
lcall
aaa
pop
add
sub
jl
mov
cmpsb
aad
push
movsl
hlt
repz
jmp
mov
pop
out
fldl
xchg
insl
cltd
lock
mov
loopne
loop
sub
mov
sbb
call
shr
rorl
clc
cmpsl
pop
sbb
push
adc
jno
addr16
cmpsb
lods
add
bnd
sub
mov
scas
mov
fisubrs
mov
faddl
add
es
fsubl
mov
ds
pop
cli
xor
sub
xchg
jb
stc
rcrb
popf
push
fisubs
cmp
adc
add
xlat
icebp
mov
jp
lds
adc
imul
push
pop
jb
pop
hlt
cmp
jb
pop
sub
inc
and
pop
inc
jg
into
push
inc
cltd
loop
das
fisttpll
cli
and
jmp
cmp
stos
xor
ret
loop
incb
adc
push
jge
test
loopne
ret
lds
xchg
pop
mov
in
shrb
inc
imul
xlat
rcrl
shll
popa
lock
or
jmp
add
fimull
loopne
lods
dec
push
adc
xchg
sbb
mov
fisttps
jae
jmp
cmpsb
in
dec
incl
push
rcll
inc
mov
mov
fsub
lahf
inc
xor
jp
mov
mov
vpandn
push
and
mov
jo
repnz
outsb
pop
clc
or
jle
pushf
jecxz
fildll
pushf
push
sub
mov
sbb
add
out
mov
cli
adc
fcmovnu
lret
scas
call
lods
mov
mov
sub
imul
adc
inc
lret
or
popa
je
jg
push
sub
mov
xchg
xorb
in
inc
data16
shl
xchg
cmp
xchg
push
jmp
xor
cltd
adc
jbe
and
rol
xor
mov
mov
cmc
shll
fisubrl
xchg
jge
jb
scas
aaa
xor
xchg
pminsw
or
out
xchg
inc
xlat
mov
andb
xor
and
inc
leave
xorl
xchg
cmp
cmc
or
cmp
test
bound
insb
push
pop
or
stos
int
leave
ret
jae
push
stos
divl
add
lock
sub
scas
fistpl
sub
mov
adc
xchg
pusha
add
mov
and
movsb
negb
jp
cmp
mov
stc
ja
mov
aaa
js
stos
cs
fsubs
mov
mov
fcomp
lret
sbb
int3
xchg
pop
sbb
or
xchg
testl
cmp
hlt
or
outsl
sub
and
cwtl
push
dec
sub
std
adc
jbe
ja
adc
stos
in
lret
cmp
test
loope
pop
icebp
out
int3
bound
mov
xchg
inc
xor
les
and
xor
jmp
push
enter
test
repnz
icebp
inc
sub
out
je
push
cli
dec
fmull
or
mov
mov
lods
inc
sub
pop
mov
and
aam
lock
xchg
add
pop
dec
xor
pop
gs
xor
pop
push
pop
imul
dec
jno
or
int3
es
lods
add
outsl
out
pop
jbe
and
clc
pop
into
xchg
imulb
mov
cmp
push
cmp
or
xchg
and
jmp
rcr
loop
xor
or
dec
and
sub
out
jp
into
ret
mov
movsl
push
mov
cmp
int3
test
inc
push
mov
jae
lods
jnp
xor
ret
scas
pop
ret
add
negl
inc
cmp
clc
mov
movsb
lcall
repnz
or
pop
and
xchg
sub
jo
jl
repnz
jecxz
lods
push
jl
jns
mov
sbb
outsb
pop
jle
xchg
ss
lock
and
pop
rclb
jnp
ds
loop
icebp
fnclex
addr16
sub
outsb
lret
mov
test
mov
fstpt
lcall
push
xor
imul
mov
ljmp
inc
stos
mulb
fucom
fdivrl
mov
push
jne
insb
mov
lds
je
xchg
jmp
pop
imul
loopne
in
daa
sbb
ds
cli
and
imul
xor
frstor
lods
inc
jb
xchg
std
push
ret
ds
mov
subl
mov
out
sub
jbe
test
jg
adc
xchg
lds
cmp
stos
das
sbb
outsl
lods
mov
lcall
scas
enter
loope
mov
lds
neg
outsl
into
xor
inc
add
sub
movsl
lret
cmp
addr16
lret
loop
subb
sub
push
add
xchg
pop
inc
call
and
and
imul
push
pop
call
mov
cmp
or
xor
mov
cs
enter
in
jbe
lods
orl
movb
mov
mov
setno
inc
push
nop
lods
pop
sbb
mov
xchg
pop
mov
add
pushf
incb
dec
leave
jecxz
xor
adc
sub
sub
inc
pushf
ljmp
cmp
mov
sti
mov
cmovl
inc
cs
int
mov
pop
mov
xchg
sub
jne
mov
pop
ds
inc
push
add
das
scas
sub
xor
adc
pop
mov
shll
cmp
dec
push
inc
sub
mov
lds
mov
ret
out
fiaddl
adc
and
sti
adcb
nop
ss
fiadds
add
insl
in
push
mov
sarb
js
mov
pop
mov
int3
xor
xchg
scas
loope
adc
popa
scas
out
mov
fstpt
push
or
rclb
or
mov
xchg
adc
int
jmp
inc
in
and
mov
aas
sub
out
ja
push
mov
pushl
in
push
mov
lcall
add
cmpsl
add
cmp
jg
push
nop
andb
cmpsb
cmp
test
clc
in
mulb
sub
insb
jl
mov
sarb
arpl
mov
jb
mov
sub
sub
and
mov
daa
cmc
mov
cwtl
imul
jnp
add
out
dec
add
negb
aad
incb
gs
or
sbb
mov
clc
jb
ficompl
push
xchg
xchg
and
fisubrl
inc
into
cmpsb
xchg
out
jmp
out
cmp
repz
or
ljmp
cmpsb
add
int
out
ja
incl
repnz
iret
inc
mov
fadds
lds
mov
rcr
add
aas
lret
dec
cmp
and
push
inc
jns
mov
andl
push
mov
mov
xor
xchg
jg
push
pop
lcall
push
fsub
mov
push
mov
int3
xor
sarb
mov
adc
cmp
push
sti
ss
jl
movsb
mov
pushf
dec
mov
and
jno
ret
leave
xchg
mov
sbb
xchg
mov
int
shll
mov
inc
das
into
push
and
mov
add
or
shll
addr16
push
jae
xor
push
es
mov
popf
lds
fidivs
ficompl
push
hlt
xor
xor
scas
addl
lods
je
aad
cmp
sbb
xlat
cs
add
outsb
inc
add
sub
es
pop
cmpb
ja
sub
out
sub
fs
daa
sahf
mov
xchg
test
into
inc
imul
and
xor
mov
jb
leavew
mov
mov
push
jecxz
pop
and
push
popa
mov
std
lcall
fisubrs
sbb
jo
cwtl
lods
cmp
hlt
int
cmpl
sub
fwait
xor
fisttpll
sub
cltd
and
sti
pop
mov
inc
addr16
pop
pop
dec
mov
and
push
pop
xor
lret
std
rclb
push
adc
rcll
sti
leave
daa
cmp
scas
iret
ljmp
fsubrp
push
aas
xor
jge
mov
push
dec
lock
xor
in
mov
jo
push
inc
pop
call
fwait
and
mov
add
jno
xchg
sbb
fst
std
xchg
mov
cmp
ja
mov
test
sahf
xchg
pop
movsl
push
mov
and
ja
fs
mov
loop
push
nop
jb
jo
mov
push
jp
clc
std
testb
jecxz
sub
in
dec
xchg
add
pop
or
out
out
repnz
jmp
cmp
fwait
cmp
jne
js
xor
push
push
mov
mov
inc
sbb
fiadds
stc
in
pop
adc
jbe
movsb
rcr
fdivr
movsb
mov
insb
xor
arpl
pusha
push
sub
or
pop
mov
adc
out
sub
push
cmp
mov
adc
pushf
jmp
lcall
into
cltd
cwtl
jnp
xchg
call
cltd
outsl
push
sbb
clc
inc
aas
xor
aaa
push
movsb
inc
sub
repz
mov
push
sarb
out
movsl
mov
icebp
decb
mov
in
in
mov
imul
pop
jae
push
and
mov
das
test
outsl
pop
cs
fisttps
xchg
lods
rolb
dec
and
mov
mov
dec
fdivr
mov
das
push
fwait
inc
enter
fidivrl
dec
mov
lret
loop
sbb
mov
pop
and
test
inc
xchg
or
cmp
push
inc
xchg
xor
mov
clc
lcall
fs
int
cmp
movsl
xchg
sub
pop
stos
loopne
iret
or
jnp
sbb
or
push
dec
mov
add
mov
imul
mov
mov
inc
mov
bound
mov
jle
pop
mov
add
mov
repz
cltd
aaa
mov
push
pop
jb
mov
js
inc
cmp
enter
hlt
mov
stc
gs
jmp
pop
push
adc
jge
outsl
inc
ret
adc
hlt
addr16
mov
and
inc
sahf
in
xchg
add
fisttpll
pusha
leave
dec
rcll
xchg
and
test
lock
mov
in
std
mov
mov
in
push
pop
dec
arpl
in
xchg
aad
insb
cmp
pop
mov
mov
filds
cmp
loopne
mov
fwait
aam
sti
jns
dec
cmp
xor
jnp
jnp
cmp
lret
aad
lods
stc
xor
imul
mov
add
loop
pop
sub
push
push
jbe
movsb
sbb
add
mov
jno
in
pop
push
mov
enter
out
mov
pop
push
xchg
lcall
mov
mov
add
push
jae
ret
insb
pop
inc
or
nop
cmp
dec
push
mov
in
aad
dec
int3
fcompl
js
xchg
fwait
adc
xchg
pop
pop
fdivrl
mov
sbb
loope
aaa
loopne
lds
call
xchg
mov
add
push
cli
adc
pop
mov
fsubl
adc
lea
cltd
mov
fldenv
or
lods
rcrl
loopne
ret
mov
fwait
nop
xchg
pop
fwait
mov
into
ja
mov
xor
push
call
cmc
push
pushf
mov
jge
loop
add
stc
cmp
pop
inc
mov
outsb
xchg
mov
cli
cli
mov
icebp
flds
popa
andl
gs
movsb
insl
cmp
mov
stc
loop
xchg
fst
jp
into
mov
adc
adcb
inc
or
fldcw
out
aam
fdivp
test
jle
pop
mov
or
mov
push
push
jmp
scas
mov
push
pop
outsb
fs
or
popa
fimull
insl
xchg
or
inc
std
mov
lock
sub
cwtl
in
ss
sbb
or
cwtl
jnp
sub
inc
mov
add
push
notl
mov
cmc
cmp
push
cmp
repnz
adc
and
pop
aam
jb
loope
nop
mov
mov
cmpsb
sbb
and
std
out
cmc
jbe
lds
adc
imul
add
fnsave
pop
add
in
xchg
push
cwtl
pop
cli
pop
repz
icebp
dec
mov
ja
out
add
ds
pop
arpl
lods
mov
and
mov
jmp
jns
push
lock
lea
cmp
repnz
test
jmp
cs
adc
out
or
xlat
aas
cmp
xchg
add
imul
or
jp
stc
xchg
in
les
push
scas
filds
adc
aas
lea
and
repz
daa
sbb
inc
add
outsb
cld
in
inc
popf
xlat
dec
mov
xorl
arpl
ljmp
iret
mov
in
je
in
outsl
ds
lret
fwait
jnp
repz
push
std
jb
xor
fwait
scas
cltd
stos
add
nop
push
out
xchg
jp
cwtl
mov
mov
xchg
call
in
push
push
jbe
loopne
mov
jmp
jns
push
mov
rcll
pop
jg
out
or
cld
sahf
dec
mov
js
jnp
xchg
cmp
and
in
lds
sar
pop
mov
sbb
or
push
adc
xor
mov
and
and
push
mov
inc
mov
test
insl
in
add
cld
fwait
jl
push
xchg
sbb
mov
sarl
int
ss
dec
test
adc
imul
das
and
fwait
cmc
enter
sub
push
mov
hlt
push
sub
repnz
jle
push
mov
lcall
mov
cltd
fisttpll
pop
dec
or
insb
shl
rcrl
mov
mul
inc
jae
icebp
adc
cmp
lret
lret
stos
jae
ds
enter
gs
dec
aad
movhps
aas
jge
loopne
push
pop
das
inc
jbe
adc
enter
test
lret
test
sahf
lds
push
pushf
pop
pop
scas
sbb
mov
pop
aas
andl
mov
xchg
lcall
ss
inc
sub
mov
add
jge
xor
mov
call
and
mov
or
popa
leave
stos
leave
mov
add
outsl
jp
addr16
or
jecxz
aad
lret
nop
lret
mov
outsw
gs
out
inc
mov
jle
dec
jle
into
nopl
dec
fnstsw
test
jge
lahf
or
ljmp
fcomps
inc
sub
push
add
and
cmp
cld
test
nop
in
jnp
dec
jae
shl
cli
cmp
out
lock
test
fnstsw
jge
adc
dec
and
jns
test
push
xchg
push
test
sar
punpcklbw
repnz
xlat
fistpl
inc
add
aas
outsl
xchg
pop
std
call
sbb
in
jl
outsb
push
jl
sahf
js
xchg
aam
outsl
xor
pop
inc
xchg
cmp
cltd
js
loope
daa
mov
enter
repnz
fldl
imul
pushf
adc
int3
push
add
sbb
loop
lds
push
in
test
jnp
pop
lods
outsb
pop
loop
dec
sbb
jne
mov
out
cmpsb
cmp
je
inc
ds
mov
in
push
cmc
cmp
in
xchg
insb
pop
jmp
cmp
aad
adc
push
jge
movsl
add
int
mov
mov
jp
psubb
mov
xchg
outsb
lock
inc
inc
jge
dec
fcom
rol
sbb
jbe
sbb
mov
imull
icebp
std
in
dec
or
lds
and
insl
arpl
es
adc
cmpsb
insl
sub
sub
fdivr
jg
xor
push
jb
cmp
inc
pop
push
ds
and
outsb
adc
cmp
nop
pmulhuw
imul
aam
and
adc
out
in
movsb
movsl
dec
mov
pop
outsl
sbb
cli
rcll
leave
cmpl
add
cld
stc
int3
sub
repz
testb
dec
ljmp
cmp
xchg
ds
xchg
stos
maxps
leave
repnz
pop
fwait
pop
lods
adc
cltd
push
push
clc
fwait
mov
ljmp
dec
dec
and
inc
js
mov
push
je
cmp
xchg
or
ror
outsl
rcrl
ds
mov
aad
pop
cmp
xchg
xor
push
push
xchg
pop
cmpsl
lock
cmpb
ja
les
xchg
mov
dec
repz
sbb
lret
mov
notl
jns
dec
or
imul
cmp
scas
and
jae
mov
or
and
shll
jl
cli
dec
fimull
xchg
inc
out
daa
pop
inc
mov
addr16
jno
jle
xor
cmp
popa
jle
nop
das
gs
int3
push
clc
in
adc
or
popa
xor
iret
sbb
rcll
cwtl
pushf
out
pop
mov
ret
cmpsl
add
repz
sub
lret
sbbb
or
mov
jae
xlat
clc
inc
test
mov
es
mov
xchg
fsubl
inc
sub
jge
and
mov
xlat
orb
outsl
dec
push
loope
dec
js
jae
rorl
cmp
iret
add
xchg
inc
arpl
lret
mov
pop
or
mov
adc
scas
add
adc
idivl
nop
jb
sub
jecxz
mov
call
sub
ret
dec
lods
add
and
fdivl
push
outsl
xlat
push
ret
dec
pop
fildl
xchg
out
jnp
fs
jnp
mov
leave
add
fstpl
and
pop
test
mov
sub
test
outsl
inc
xchg
push
add
pop
lock
sub
dec
je
mov
sti
ja
repnz
or
mov
bound
pop
gs
pop
mull
imul
cmp
sub
stc
lea
lds
clc
push
fwait
mov
mov
ret
mov
cmp
bswap
mov
adc
mov
aad
mov
std
and
popa
dec
cli
sbb
mov
mov
cmp
cmp
lds
and
cs
cld
jge
and
sbb
pop
pop
or
lret
jl
lahf
movsl
adc
push
mov
cmpsb
inc
fbld
fisttpll
jmp
inc
das
add
inc
in
jnp
sbb
dec
lods
mov
mov
mov
lahf
enter
mov
dec
int
sbb
sti
mov
pop
push
adc
dec
jmp
popa
mov
mov
mov
es
popf
inc
out
lahf
inc
ret
dec
sarl
cwtl
lcall
out
and
add
aas
clc
sbb
sbb
mov
cmp
or
ret
ret
and
pop
ljmp
cli
xlat
lods
jo
cs
push
lsl
es
jmp
push
test
out
test
add
sarl
imul
dec
push
sbb
pop
mov
mov
adc
imul
int3
inc
push
push
ret
xchg
lock
mov
js
out
cmpsb
arpl
cmp
ret
fidivs
out
push
xchg
bound
dec
das
inc
aad
mov
pop
es
adc
leave
movsl
shrl
sbb
pop
sbb
mov
cli
popf
pusha
pusha
push
sbb
xchg
bound
jecxz
pop
hlt
lods
jae
jle
jo
lcall
lea
testb
inc
test
dec
cltd
fldl
sbb
hlt
shlb
imul
push
cmp
movsl
jle
jg
mov
test
mov
test
movsb
xchg
insl
rcr
out
add
pusha
pop
subb
pop
jle
dec
cmp
fadds
stc
cltd
adc
clc
inc
pop
gs
or
mov
lods
stos
jge
mov
and
inc
mov
jo
dec
popf
cli
hlt
jo
xchg
ret
mov
mov
or
ret
daa
dec
shrb
int
inc
push
sahf
dec
mov
push
fidivs
or
jno
pop
push
in
and
shll
pop
lods
dec
jb
mov
adc
and
loopne
fwait
lahf
pminsw
imul
jl
rol
pop
inc
sbb
sub
xlat
jecxz
int3
ds
dec
sbb
enter
pusha
test
sbb
cli
in
inc
les
inc
cs
cli
jmp
xchg
cmp
or
je
ja
call
mov
pop
lret
dec
sub
pop
stc
jne
mov
ss
jge
add
pop
dec
adc
shll
out
dec
adc
sub
divb
mov
stc
adc
dec
loopne
jns
inc
xchg
in
push
pop
pushf
xlat
bound
mov
fmulp
insb
stc
cwtl
add
imul
adc
mov
mov
loop
cltd
push
mov
and
pop
adc
and
xor
stos
fstl
add
pop
adc
scas
pop
push
sub
jmp
ret
mov
dec
and
icebp
fisubl
pop
neg
mov
xchg
pop
fs
imul
push
ljmp
loop
out
clc
jg
and
in
dec
mov
mov
mov
in
daa
mov
pop
add
push
push
inc
rcl
movsb
sub
xor
int3
inc
arpl
push
inc
inc
cwtl
outsl
push
shrb
xchg
fidivrs
fildl
sbb
xor
inc
xor
fwait
sub
syscall
dec
addr16
ja
mov
and
sub
mov
lcall
or
inc
in
hlt
mov
ds
in
and
lea
cmp
xor
mov
sub
cmp
xor
adc
push
sbb
sti
arpl
imul
popa
ficomps
jp
orl
and
push
stc
pusha
movsb
push
mov
stc
xchg
or
fidivrl
insl
sahf
mov
movsb
call
lods
int3
pop
adc
shll
imul
sahf
mov
dec
push
popf
mov
hlt
xor
pop
js
sub
cwtl
sbb
xchg
push
dec
enter
test
adc
in
jecxz
rclb
mov
imul
popf
inc
test
cld
lcall
icebp
add
fidivrl
lods
adc
pop
shlb
repz
addr16
fs
xor
movsb
shlb
ret
sub
rolb
decb
xor
xchg
xor
movsb
les
scas
xor
aam
fisubl
ss
and
int
ss
and
popa
std
dec
fdivs
out
popa
cmp
pop
cmp
mov
repnz
sarl
rolb
mov
out
inc
shl
aaa
jns
push
fwait
sbb
cld
push
inc
shll
pop
lds
mov
pop
repz
repnz
outsl
movsb
mov
fisubrl
icebp
outsl
jnp
ret
fstpt
cltd
ret
sbb
cld
push
add
cli
shl
inc
stos
cmp
subb
pop
add
xor
lock
inc
fnstcw
in
hlt
popa
mov
movsb
adc
ficoml
ljmp
pop
outsl
mov
add
stos
dec
push
inc
into
adc
push
add
jo
std
jnp
adc
add
sub
adc
aam
call
push
out
icebp
mov
fsts
adc
fdivs
push
lds
lock
inc
mov
sub
mov
lret
xor
adc
in
xchg
push
mov
mov
sub
pop
push
insl
enter
fldt
mov
pop
jecxz
push
or
ja
shlb
cli
or
push
bnd
les
aam
fucom
dec
lods
loop
jge
lods
es
dec
xlat
push
sarb
adc
pop
ds
imul
jo
lods
jae
lret
push
push
enter
pop
scas
fbld
mov
mov
aas
push
loopne
sub
aad
cmp
adc
out
push
insb
scas
cli
imul
js
fisubs
lods
les
jge
out
imul
pushf
xor
lret
nop
sbb
push
push
xor
push
dec
je
mov
mov
loop
loop
inc
out
mov
push
inc
mov
cmpsl
fnstcw
xor
xor
fdivrs
inc
mov
sub
push
pop
clc
xlat
jg
decl
mov
xchg
xchg
adc
sub
ss
mov
xchg
push
pop
or
cmp
dec
icebp
das
jge
sub
mov
fstl
idivl
inc
mov
xchg
adc
sub
incl
mov
stc
xchg
fisubrl
stos
out
mov
pusha
xchg
pop
in
xor
lret
loope
sub
fmull
inc
mov
jns
cmp
sub
pop
jnp
mov
out
fwait
sbb
pop
xchg
push
add
les
addl
cld
pop
mov
jecxz
pop
in
stc
outsb
pop
push
push
push
adc
jb
fisttpl
mov
mov
orb
rorl
xchg
mov
cmpb
jecxz
mov
xchg
je
sbb
pop
xchg
test
sbb
and
int
aam
ror
mov
aas
xor
insl
jge
inc
adc
xchg
adc
pop
movsl
push
inc
inc
sarb
fsubrs
stos
or
fwait
or
or
dec
pop
cmp
cli
mov
xor
shr
aaa
xor
mov
ljmp
sub
dec
cmp
add
test
and
mov
icebp
fistpll
push
and
pop
rcrb
loop
mov
int3
cmp
pop
aad
xchg
rcrl
inc
out
xor
stc
out
fisubrs
and
cmp
aam
push
adc
mov
cli
sbb
mov
nop
mov
push
xor
iret
add
rcl
cwtl
out
js
negl
pop
ss
test
aas
cld
jae
xorb
add
inc
sbb
andl
xchg
aam
aad
push
mov
dec
push
fnsave
rolb
inc
mov
push
movsb
test
mov
in
cs
fdivr
xchg
push
jnp
mov
push
dec
pushf
fs
inc
xchg
pop
jns
nop
pop
dec
push
int
int3
pop
daa
out
ljmp
loop
pop
pop
scas
xor
pop
mov
repnz
mov
and
and
cmpsb
ds
out
cmp
jg
jecxz
movsl
dec
out
lods
or
sbbb
test
jns
test
rcrb
into
aaa
es
adc
cmp
push
imul
lods
add
xor
test
jmp
mov
xor
cmovp
rclb
push
xchg
insl
pusha
ret
mov
dec
ja
aad
sti
cwtl
cmc
std
fiadds
sti
add
lea
aas
push
xlat
push
push
fsubs
push
push
pop
movsl
ficomps
jb
mov
dec
push
add
fwait
repnz
cld
cmc
loop
mov
lret
inc
xchg
arpl
xchg
add
in
cmpsb
cmp
push
test
or
xchg
dec
out
mov
pop
sbb
jmp
and
subl
push
add
enter
xchg
sbb
test
loope
inc
or
jns
std
cmpsl
add
loop
cmp
and
jb
mov
out
dec
fiadds
jae
test
pop
scas
aad
cmp
inc
or
push
add
xchg
inc
inc
cmp
aad
cmp
pop
gs
test
inc
pop
mov
imul
adc
outsl
and
inc
ss
xchg
adc
ds
or
or
mov
outsb
jle
pop
mov
lods
push
push
stos
xchg
adc
jmp
outsb
adc
cmpsb
stos
xor
push
mov
sbb
call
dec
push
daa
xchg
sub
xchg
add
add
ret
arpl
inc
mov
cli
aad
fisttpll
out
inc
mov
sub
repnz
adc
les
imul
adc
pop
inc
movsb
xchg
xchg
rcll
push
sbb
pop
fwait
aad
jmp
mov
iret
or
mov
pusha
std
cmp
push
ret
push
push
cmpb
xchg
and
faddl
inc
pop
xor
adc
and
int3
test
mov
mov
pop
cmp
sub
sbbb
pop
cwtl
adc
xor
jg
repnz
add
add
or
fs
mov
lcall
and
aas
push
cmc
movsl
jmp
insb
mov
or
shrl
jg
scas
movsb
mov
or
incl
inc
andb
ja
fisubs
dec
ffree
pop
fs
mov
xchg
sub
fs
jb
imulb
jns
fwait
add
ret
push
inc
or
jnp
push
cmp
mov
pop
push
xchg
and
push
mov
in
shll
test
sbb
inc
jns
cmp
sub
into
aas
pusha
mov
jge
pop
negl
ds
lock
push
out
sbb
lahf
mov
iret
repnz
int3
lret
dec
push
mov
xor
adc
mov
loope
in
xsha256
cmpsb
shrl
movb
mov
ret
or
movsb
push
pop
or
push
loopne
mov
imull
scas
movsl
add
mov
or
fstps
dec
push
jecxz
sbb
inc
scas
mov
pop
jae
mov
push
jns
jle
mov
sub
xchg
loope
cltd
js
mov
and
fcomps
insl
mov
fistpl
xor
dec
lahf
stc
add
jmp
xlat
add
dec
cmp
mov
pop
jo
adc
bnd
mov
imul
stos
add
xchg
movsl
or
sar
insb
rcll
lahf
cmp
test
xchg
inc
test
scas
dec
xchg
add
dec
je
loop
jmp
jo
add
dec
push
es
fs
jl
sbb
mov
xchg
or
cmpsl
loopne
shlb
rorb
icebp
mov
shlb
push
pop
outsl
test
aas
into
push
mov
push
icebp
mov
ret
fs
andb
dec
xor
push
int3
pop
das
mov
and
mov
je
addr16
iret
sbb
adc
sbb
xchg
push
arpl
xchg
and
push
cmp
jge
lcall
insl
dec
inc
add
xchg
mov
add
dec
inc
testl
adc
xor
enter
sahf
orl
mov
adc
pandn
sub
dec
mov
shll
ja
and
push
subl
mov
mov
mov
jmp
sub
inc
icebp
mov
outsl
test
jno
add
out
mov
je
pop
jl
out
sub
push
mov
jecxz
push
outsl
xchg
adc
jmp
lret
testb
arpl
inc
mov
adcb
pop
xorb
push
cmp
rcrl
bound
leave
adc
std
js
je
mov
sub
jmp
out
dec
fldenv
outsb
call
fwait
rol
pop
sbb
adcl
dec
leave
iret
xchg
ss
out
and
cmp
sub
mov
xor
sub
int3
fistl
or
or
shl
notb
ss
popf
push
pop
mov
mov
adc
les
mov
mov
mov
xchg
scas
push
lds
jmp
stc
mov
scas
movsb
shlb
adc
jbe
shrl
dec
and
clc
mov
leave
dec
add
mov
repnz
lcall
xlat
mov
adcb
add
lds
lods
ret
mov
cs
or
bswap
cmp
jmp
sub
add
push
mov
xor
clc
popa
dec
fsubl
insl
jo
add
dec
sbb
dec
cli
cmpsb
fs
ja
jge
mov
lea
pushf
xorb
adc
in
lods
jecxz
inc
or
cld
mov
jle
js
mov
decb
mov
jl
dec
xlat
mov
cmp
insb
mov
jmp
jg
push
out
pop
xor
adc
or
dec
xor
sub
dec
push
orb
in
daa
imul
sub
xor
ss
xchg
mov
in
and
mov
mov
cmp
push
mov
jb
adc
dec
mov
and
pop
mov
ret
dec
call
movl
lea
pop
rclb
repz
xchg
daa
mov
outsb
shrb
sub
in
jb
add
adc
lret
adc
pop
add
xchg
loop
xchg
sarb
adc
daa
or
loop
push
mov
xchg
xor
fwait
and
rcll
push
sub
mov
rclb
stc
sub
fdiv
fnop
adc
push
enter
mov
and
jae
nop
adc
or
jnp
adc
inc
and
dec
sbb
xchg
jmp
movsb
sbb
mov
cltd
sbb
and
jno
gs
pop
lcall
test
xchg
in
pop
fsts
hlt
push
mov
xchg
ljmp
sub
dec
aam
xchg
rcll
pop
movsb
add
icebp
fs
add
cmp
and
lods
test
cmp
jmp
jns
loop
cltd
or
adc
xor
mov
stos
and
push
out
aaa
lret
clc
xchg
jbe
inc
push
inc
orb
pop
sub
push
es
out
stos
out
enter
add
mov
andl
gs
and
push
imulb
xor
inc
bnd
and
cmp
mov
sarb
xchg
repnz
dec
jp
inc
push
fnstenv
or
mov
jns,pn
mov
outsb
shll
or
test
les
pop
mov
pop
jno
and
push
dec
xor
jmp
incb
cmc
stos
cmp
dec
jnp
ss
clc
sub
in
add
cli
sti
loopne
sub
mov
inc
in
scas
jns
adc
imul
xchg
inc
sbb
inc
sbb
fdivrs
int3
es
pop
lcall
xchg
or
imul
add
fwait
adc
clc
imul
out
dec
jp
fiaddl
xchg
movsb
repz
and
xchg
jl
fsts
dec
rcr
ss
push
ret
or
pop
jge
pushf
repnz
xor
jle
jns
push
cmc
mov
mov
xchg
pop
insl
push
inc
adc
sti
push
xchg
mov
push
mov
leave
imul
fstps
mov
jb
xchg
sub
mov
iret
sbb
mov
sti
mov
sarb
jno
mov
lcall
cli
dec
mov
imul
test
inc
inc
lods
mov
mov
dec
test
sub
inc
retw
cmp
test
mov
stos
add
jnp
fdivl
fnstcw
popa
in
out
test
pop
rcr
lret
xlat
insb
daa
cld
push
loope
pushf
mov
mov
cmp
in
mov
sahf
xchg
in
mov
lcall
aam
fdivrl
jb
jg
jp
cmp
sbb
mov
cmp
fdivr
addr16
call
aad
lea
pop
cmp
inc
cmpsb
xlat
bound
std
dec
movsb
push
jle
add
lods
fst
pop
ds
mov
ret
sub
sbb
fdivs
outsb
or
repnz
adc
clc
pop
nop
mov
ja
dec
and
andb
fmul
call
mov
imul
aaa
movsb
aaa
pop
mov
cmc
test
inc
pop
inc
sbb
cmc
jns
push
jle
cmp
repz
lods
scas
push
xor
movsl
lret
mov
and
pusha
daa
scas
pop
jge
jl
mov
hlt
mov
aam
data16
sbb
sub
add
cmpsl
sbb
hlt
cltd
adc
inc
adc
or
js
fistpl
jno
shrl
xchg
lahf
dec
hlt
ja
jo
popf
pusha
inc
push
inc
fnsave
and
fiadds
and
sbbb
and
cmp
or
mov
sbb
sub
jno
cmp
les
aas
cmpsl
and
jge
add
int3
or
pop
inc
shll
jg
les
xchg
test
jbe
cmpsb
xor
sahf
or
int3
and
nop
inc
pop
addr16
cmpsb
out
add
add
outsb
aad
js
or
lahf
cltd
jle
mov
lret
jmp
jle
jnp
ret
repz
mov
sbb
pop
push
sahf
inc
cmpsl
dec
or
dec
xlat
push
shll
movups
cli
mov
cmpsl
pop
pop
int
sub
mov
rorl
mov
inc
push
adc
and
js
or
cmpsl
movsl
sub
repnz
or
adc
fs
and
loope
cs
jns
push
insb
cs
in
dec
shll
adc
mov
push
pop
fsts
test
push
cltd
lods
out
add
sbb
outsl
jo
sub
outsb
jmp
cmpsl
push
mov
xchg
cmp
and
lret
xor
lds
call
sahf
lahf
cmpsl
mov
aaa
hlt
xchg
sbb
test
daa
mov
cmp
xchg
fildl
insb
xchg
lods
push
sbb
aas
add
dec
xchg
cltd
jl
jo
mov
pop
aam
out
cltd
loop
fs
shll
lods
inc
inc
xor
testl
xor
insb
adc
cltd
dec
ret
sti
sub
inc
pmaxub
xor
xchg
test
add
xchg
mov
jecxz
test
dec
push
push
pusha
sahf
popa
mov
gs
cmp
test
call
repnz
lea
inc
imul
push
shll
shlb
add
mov
int
scas
loopne
imulb
push
xor
aam
je
stc
in
cli
daa
xchg
fnstsw
stc
add
or
inc
push
sub
cs
pop
lods
or
jmp
xchg
xor
arpl
jg
iret
ret
scas
pop
add
mov
adc
dec
jb
mov
cmpsb
inc
sbb
and
rcl
sbb
ret
movsl
fcomip
je
or
lahf
divl
leave
stos
or
sbb
str
xlat
adc
mov
into
mov
push
adcl
xor
popa
jae
dec
aaa
xchg
outsb
cmp
add
cs
xor
jmp
aas
cli
out
stc
les
jno
and
daa
pushf
aad
mov
ljmp
jmp
enter
int3
add
mov
push
and
pop
insb
fptan
mov
xchg
stos
adc
pop
cs
mov
ljmp
cmpsl
aaa
sti
movsb
adc
mov
bound
out
mov
xor
sbb
dec
sub
jno
jnp
sub
pusha
es
clc
lret
push
aam
adc
cltd
pop
lret
mov
repnz
outsl
mov
js
pop
test
pop
cmp
xor
jb
jns
push
lahf
add
xchg
xchg
mov
adc
int3
test
push
pinsrw
stos
or
test
add
jbe
cmp
xchg
push
push
fwait
add
or
and
sahf
xchg
fmull
mov
hlt
dec
or
push
cwtl
popf
mov
outsl
in
xor
lret
or
adc
add
orb
pop
outsb
pop
sub
fwait
inc
lock
iret
mov
xabort
jb
ljmp
pusha
dec
fcoms
das
push
inc
idivb
setns
fsubl
adc
roll
fstp
nop
jbe
testl
jnp,pt
fistpll
enter
jae
fidivl
mov
les
lds
sbb
fnstenv
outsb
push
loope
xchg
lcall
push
add
test
mov
loopne
scas
add
xor
jle
lods
in
mov
pop
sub
jmp
fwait
push
jl
clc
jnp
cmp
cmp
pop
cld
arpl
aaa
dec
pop
aam
cmpsb
icebp
out
shrl
vrcpss
cmpsl
cli
push
bound
xlat
inc
push
add
jp
dec
imul
inc
icebp
jo
mov
adc
pop
scas
in
adc
cmp
sbb
and
push
imul
fstpl
aas
cmp
call
xchg
pop
cwtl
fstpl
int
addl
cmpsl
repnz
xor
pop
leave
jno
push
mov
xor
jp
inc
jl
in
inc
mov
je
add
or
test
notl
stos
mov
sbb
in
daa
mov
mov
mov
cmp
inc
inc
ljmp
loop
stos
xchg
jge
push
push
rcrb
outsl
rorb
dec
pop
mov
imulb
dec
xchg
mov
nop
sub
xchg
stc
lock
sahf
das
jnp
cmp
or
into
cmpsb
loope
add
mov
adc
adc
outsl
ret
add
scas
and
movsl
inc
cmc
inc
push
fcomi
add
pop
push
mov
lcall
jecxz
inc
inc
fisubrl
add
roll
fiaddl
lcall
add
mov
enter
pop
push
les
add
jg
mov
and
xchg
push
dec
sbb
js
push
cmpsb
ljmp
jno
fwait
jmp
dec
lret
dec
or
movsl
xor
lret
mov
js
xor
stos
movsb
or
sbb
mov
push
jp
mov
loope
add
arpl
imul
cmp
lds
pop
push
sbb
xor
dec
aaa
int
mov
leave
add
jns
dec
xchg
mov
sub
stos
cltd
jmp
or
call
nop
popa
ljmp
fisubrl
jo
fisttpl
add
insl
mov
sub
std
push
push
jb
or
int3
mov
in
add
fimuls
push
mov
or
lock
xchg
subl
loopne
inc
pop
push
mov
cmp
lock
sbb
pop
loopne
mov
mov
insl
sahf
mov
push
std
les
aam
xchg
rolb
mul
test
jo
add
ds
rcrl
stos
sub
lcall
out
fiaddl
jg
add
sub
cltd
pusha
int3
jle
hlt
sbb
mov
in
test
gs
mov
inc
inc
outsl
out
pop
mov
stos
test
cld
sub
leave
xchg
imul
mov
sbb
out
sbb
jge
fwait
std
mov
and
xchg
push
imul
and
cmp
xor
loopne
push
mov
sub
repnz
aam
repnz
ds
cs
push
sub
daa
xor
mov
lds
and
test
and
inc
test
or
stc
cmp
sbb
ret
xchg
add
sub
mov
in
or
testb
xchg
push
push
test
aad
clc
dec
inc
scas
adc
cmpsl
dec
pop
std
test
popf
mov
in
repz
inc
sbb
scas
dec
fisttpl
mov
ss
mov
rcl
mov
dec
jg
in
aas
push
dec
pop
loope
in
push
divl
testl
mov
inc
xchg
popa
pop
xchg
lock
mov
std
push
inc
mov
lds
mov
or
cmp
cmp
sahf
dec
mov
adc
jecxz
ret
fs
push
inc
xor
scas
xor
call
push
inc
out
mov
arpl
enter
sbb
push
mov
push
mov
pop
dec
movsb
xor
addl
inc
xchg
rcrb
bound
pop
jge
imul
jle
lods
jae
dec
dec
cmp
xor
cmpsb
int3
cmp
or
shr
mov
xchg
xchg
fcomps
or
jno
fistpl
cmpsb
dec
xchg
imul
xor
mov
aaa
inc
out
mov
inc
shlb
fs
out
add
outsl
ds
sbb
scas
loopne
cwtl
mov
fdivrs
xchg
lret
add
or
cmpsb
pop
mov
enter
scas
inc
dec
aas
mov
xchg
jg
sbb
pushf
xchg
icebp
or
sub
mov
hlt
enter
xchg
inc
in
pop
fisttpll
out
fistpll
iret
testb
push
fdivrl
aaa
xchg
inc
popa
int
sbb
incb
fdivp
enter
jae
roll
mov
mov
ret
stos
xchg
test
sbb
cmp
lods
icebp
pop
pop
dec
adc
shll
aad
sub
xor
jno
jb
lock
sbb
jg
or
addb
pop
pushf
xchg
inc
jno
sub
inc
mov
sti
jae
sbb
inc
sub
mulb
push
jo
jno
insl
xacquire
dec
repnz
pop
fistps
push
mov
fbstp
fsubs
inc
inc
mov
shld
mov
mov
add
test
insb
cltd
or
jl
popa
mov
testb
xchg
add
int
lock
movsb
rclb
ds
daa
aad
push
adc
negl
fcoms
lea
cmp
rcll
or
jecxz
and
cltd
xor
mov
ret
outsb
js
jl
sub
shll
push
add
fistpl
dec
mov
sub
mov
jo
cs
mov
mov
add
leave
mov
xor
or
and
lret
sbb
xorb
xlat
je
subl
adc
rcrb
fistpl
cmp
arpl
hlt
lock
fdiv
ja
dec
sbb
adc
cld
pop
jmp
sbb
sbb
mov
jne
aaa
ljmp
and
push
dec
std
data16
adc
jnp
js
movsb
pop
lahf
lods
inc
test
bound
lahf
jnp
mov
and
xorl
movsl
es
icebp
cmp
or
call
addb
pop
xchg
or
out
sub
insl
mov
outsl
pop
in
insb
mov
pushf
pop
sub
xor
add
nop
sarb
loop
fstl
js
push
dec
xchg
pop
mov
jnp
pop
sub
pop
insb
push
dec
outsb
scas
mov
mov
push
jge
pop
mov
test
adc
dec
clc
push
mov
aaa
push
mov
stos
sbb
lcall
adc
mov
test
fistl
fwait
ljmp
inc
or
rorb
jg
or
cmp
fcompl
es
adc
movsl
add
scas
mov
cmp
jns
je
and
ja
ljmp
push
repnz
daa
mov
call
out
jb
stc
push
xor
mov
sahf
je
stos
insb
iret
add
dec
inc
sbb
lcall
lcall
js
psadbw
fdivrl
cmp
aad
push
mov
pop
inc
outsb
ss
push
ficoml
jno
sbb
mov
push
aam
sbb
xor
out
popa
push
mov
jg
daa
sbb
test
enter
cld
xor
ja
jmp
fidivs
jae
mov
jg
sbb
mov
or
imul
and
dec
adc
andl
add
pop
cmpsb
mov
dec
jb
jge
and
pop
jb
hlt
or
pop
out
fdiv
arpl
add
or
jl
hlt
clc
mov
gs
jb
sahf
pop
subl
ret
mov
push
xchg
hlt
dec
inc
push
add
xchg
xor
mov
pop
fldcw
lret
dec
cmp
daa
jecxz
inc
std
push
adc
mov
pop
imull
daa
mov
test
out
or
mov
jno
mov
subl
pop
mov
sub
adc
imul
sbb
or
or
pop
fyl2xp1
setbe
pop
movsl
enter
cmp
int3
xchg
jns
or
insl
pop
or
cwtl
xchg
pop
jecxz
mov
negl
sbb
mov
icebp
repz
dec
inc
cmc
loope
push
inc
nop
mov
out
sub
pop
out
mov
push
das
aas
push
sub
jmp
pop
cwtl
cmp
int3
pop
mov
sub
jmp
pop
and
lock
inc
inc
cmpsl
xor
sbb
insb
sarl
cltd
mov
adc
addr16
lock
cmc
jl
iret
pop
rorb
jecxz
fucomip
and
in
mov
push
aam
cmpsb
int
rcr
xchg
imul
sub
push
in
popf
xchg
std
pop
je
aam
fsubrl
in
fs
int
push
insl
xchg
inc
arpl
pusha
cmpsl
pop
mov
dec
or
das
adc
pushl
xchg
inc
aas
or
adcl
stos
xchg
or
adc
or
in
add
imul
cmp
jge
mov
push
jecxz
mov
jg
push
xchg
pop
into
mov
scas
imul
ret
loope
dec
int3
movswl
mov
subb
nop
adc
inc
fistpl
pop
das
jbe
es
stc
sbb
xor
mov
jmp
insb
fwait
jae
inc
repz
in
pop
jecxz
movb
std
or
cld
pop
loopne
adc
stos
xchg
dec
in
xchg
mov
into
and
adc
scas
rorb
cmpsl
jle
shrb
mov
dec
das
les
or
push
mov
loop
roll
lret
inc
mov
or
inc
cmpsb
mov
cmp
xchg
stos
inc
aad
imul
cs
mov
ficoms
cmp
and
aam
nop
imul
jl
sbb
movsl
pop
adc
mov
jbe
lods
push
sbb
mov
cmpsl
pop
push
dec
inc
xchg
lods
push
and
push
xchg
dec
inc
jno
cld
test
sub
rol
and
mov
testb
inc
add
fdivs
insl
sub
adc
jbe
rcll
out
adc
bound
xchg
push
iret
sbb
mov
rolb
shrb
xchg
adc
mov
jnp
dec
sub
fistl
divb
cmp
xor
adc
int
data16
pop
mov
addr16
loope
scas
jae
aad
add
insl
bound
and
adcl
xchg
outsl
cmpsl
jecxz
repnz
xor
inc
mov
jnp
icebp
sub
repz
daa
dec
sub
shrl
repz
xor
add
shll
in
imul
bound
push
mov
stos
dec
push
jnp
mov
xor
dec
fsts
pop
imul
cmp
cmp
or
xchg
test
or
ret
dec
cltd
mov
jbe
pop
rorl
add
pop
lods
sbb
pop
imul
dec
out
dec
add
enter
mov
roll
pop
lds
push
or
or
inc
jp
ja
imul
mov
lret
mov
mov
inc
inc
jnp
dec
clc
adc
sahf
je
scas
int3
repnz
jl
adc
out
and
pushf
cmpsl
mov
mov
inc
outsl
jl
xchg
not
push
clc
int3
mov
out
sub
and
mov
adc
adc
jmp
add
jecxz
jb
jno
sbb
ja
insb
iret
mov
inc
iret
and
lcall
gs
and
fnstenv
nop
mov
in
xchg
mov
movsb
jno
cli
aam
and
mov
sub
out
cmc
push
push
push
movsl
fsubrs
xor
stos
sbb
clc
sbb
fwait
push
aaa
test
loope
xchg
ret
or
fldt
movsl
ds
adc
fwait
int
out
loop
mov
mov
icebp
sbb
lret
lea
popf
pop
rcrb
fistpl
push
add
arpl
pop
mov
shll
xor
cmp
push
mov
test
fcompl
push
stos
ljmp
xchg
out
cmp
stos
hlt
cmpsl
test
and
jp
pop
adc
pop
lret
mov
push
enter
adc
pop
jg
mov
jnp
xchg
mov
popa
dec
jno
mov
mov
jl
stc
mov
dec
jbe
les
outsl
inc
out
mov
pop
mov
cmp
add
mov
aam
cmpl
es
mov
testb
or
mov
inc
pop
jno
stos
jo
mov
sbb
in
push
pop
lret
inc
mov
loopne
jns
and
aam
adc
and
cmp
icebp
stc
mov
sub
jle
jle
inc
and
push
roll
jg
je
push
ja
xor
sub
sub
lcall
jmp
pop
dec
xor
shl
cwtl
sti
pop
ljmp
and
das
pop
jg
mov
jecxz
pop
cltd
outsl
jmp
inc
out
scas
inc
int3
les
cwtl
aas
xor
ret
rcll
lds
push
inc
cmp
inc
fs
lea
add
sub
mov
ret
cld
leave
jg
lea
mov
sbb
shr
pusha
mov
sub
xchg
dec
outsl
dec
inc
mov
out
cli
xchg
stos
mov
mov
iret
sbb
jo
jo
aaa
fwait
and
push
jns
test
mov
pop
mov
mov
add
sbb
jl
scas
adc
pop
push
and
in
daa
fwait
enter
dec
cmp
dec
subb
mov
dec
sbb
push
push
dec
mov
cmc
leave
or
lds
jbe
cmp
push
xchg
xchg
mov
cs
or
pop
cwtl
cwtl
lock
insl
mov
shlb
mov
scas
sub
mov
or
in
sbb
pusha
outsb
dec
fimull
aam
fs
mov
icebp
cmp
adc
loopne
js
or
in
adc
pop
repnz
cmc
inc
jmp
pop
lock
jmp
inc
fwait
imul
lahf
ret
imul
mov
xchg
test
pop
fiaddl
sub
mull
loopne
lret
int3
outsl
test
imul
ret
jne
dec
enter
jecxz
mov
jo
jno
cmpsb
daa
ljmp
xor
lods
adc
xor
sub
movl
lods
movsb
daa
sahf
pop
mov
mov
or
mov
and
sbb
mov
push
adc
sti
stos
enter
mov
fstl
shrd
rorl
push
sti
sub
fisubrs
xchg
inc
add
popf
out
stos
shlb
push
mov
int3
push
aad
dec
and
or
ss
fildl
in
cmc
jmp
out
fwait
data16
inc
js
sysret
scas
shlb
arpl
xor
push
lcall
and
insl
adcb
jge
jns
sub
sbb
addb
rcr
jne
mov
jb
stos
mov
sub
cmpl
adc
xchg
add
xchg
int
in
ja,pn
movsl
pop
push
pop
xchg
in
mov
xchg
xchg
imul
add
mov
push
dec
push
jge
adc
jb
sarl
scas
sub
xchg
xchg
nop
and
and
test
pop
jecxz
aaa
mov
cltd
mov
mov
jne
xlat
dec
negb
pop
pop
inc
outsl
lret
adc
xchg
pop
sub
jne
mov
js
mov
outsb
pop
and
and
sbb
in
data16
push
xchg
xlat
inc
inc
sub
mov
sub
pop
cmp
out
insb
pop
lcall
jo
pusha
push
stc
inc
push
mov
fildll
mov
out
pop
es
ljmp
xchg
push
clc
mov
xchg
xchg
push
adc
sbb
and
rorl
sub
xchg
mov
cs
test
jne
es
adc
sbb
fistps
xor
jne
jmp
gs
outsb
mov
dec
in
or
push
cltd
sahf
xchg
out
fadds
xor
and
aas
cs
cld
cltd
ret
lcall
adc
sti
pusha
or
ret
push
out
adc
rcrl
inc
sub
jmp
sbb
mov
mov
sub
int3
pop
push
dec
ja
sub
loop
or
jb
xchg
sub
jp
adc
je
fdivs
or
or
shlb
loop
and
mov
xchg
cs
outsb
dec
cmc
jmp
clc
mov
lret
pop
cld
sahf
add
test
sbb
sbbb
cltd
or
jae
mov
and
mov
dec
out
jge
ljmp
push
push
sar
mov
fldcw
xlat
sbb
sbb
jb
outsl
push
xchg
sub
fcmovb
pop
push
mov
lahf
add
jle
fstl
mov
push
mov
jnp
jecxz
pusha
fucomip
dec
push
inc
lret
call
rcl
repnz
test
push
call
xchg
sub
push
cmp
test
add
cs
loopne
in
cltd
push
dec
push
sbb
mov
sbb
mov
cmp
lahf
or
cmc
dec
es
xchg
pop
inc
arpl
sbb
jecxz
xchg
sbb
xchg
inc
punpckhwd
sti
imul
push
mov
jb
pop
xchg
aam
in
pop
leave
shrl
or
out
push
mov
das
cltd
sti
mov
insb
sbbb
pop
pop
adc
leave
test
or
call
nop
in
je
push
push
sbb
cmpsl
push
sub
stos
mov
cs
sub
push
inc
scas
daa
adc
inc
sti
push
hlt
pop
push
xchg
out
xchg
pmaddwd
and
or
mov
mov
repnz
das
push
sbb
add
hlt
pop
popa
mov
xchg
lods
mov
test
rclb
mov
loope
hlt
std
out
xor
jecxz
mov
jl
mov
mov
ret
xchg
les
push
jp
leave
insl
idivb
adc
lock
loope
jl
nop
mov
test
jae
cmpsl
rolb
outsl
repnz
pusha
adc
mov
test
and
ds
divb
inc
out
adc
xchg
pop
scas
leave
xor
jbe
std
fisttps
mov
mov
fadd
cmpsl
and
jnp
xchg
fdivl
mov
mov
adc
inc
iret
jne
adc
cmp
mov
insb
out
jl
or
xchg
adc
repnz
sbb
dec
out
stos
sbb
mov
insb
add
mov
cmp
clc
bound
call
mov
sbb
test
jle
aad
xchg
cmp
je
lods
mov
xchg
inc
push
or
bound
lods
nop
sub
enter
imul
fwait
xor
pop
mov
mov
enter
sbb
ss
xorl
stos
mov
xor
popf
push
inc
and
incb
ficomps
mov
add
sbb
pop
ret
lds
push
push
push
pop
ds
and
aaa
std
test
or
btr
adc
movsb
loop
xor
sbb
sbb
mov
inc
mov
inc
dec
std
gs
insb
mov
jmp
leave
xchg
in
dec
push
jno
sub
lret
imul
cs
stos
push
sub
mov
pop
shrb
cld
add
xchg
xor
push
fsubl
xor
dec
rcrb
sbb
inc
lcall
jbe
dec
cltd
jbe
inc
mov
negl
aas
and
or
mov
jnp
pop
push
pop
adc
dec
or
enter
xor
in
cmp
ja
xor
movsb
jle
add
mov
inc
ljmp
add
hlt
repnz
clc
std
mov
btr
xor
mov
push
or
mov
out
gs
aas
push
daa
sub
mov
dec
and
sbb
pushf
movsl
popa
outsl
mov
xchg
or
or
push
data16
imul
pushf
test
add
inc
gs
jae
mov
jecxz
call
pop
mov
or
icebp
insl
push
lahf
sbbb
int
repnz
out
cli
popf
sub
mov
int3
or
adc
lds
out
fistl
add
sbb
xchg
push
fwait
jnp
xchg
push
mov
push
shlb
lods
ja
jge
inc
mov
shll
int3
mov
inc
repz
shlb
test
fstps
cmp
fidivrs
push
sbb
rorl
sti
dec
in
in
push
cltd
cmpsl
push
mov
jmp
xor
popf
ss
push
mov
push
push
pop
data16
sbb
jmp
push
and
mov
mov
mov
push
out
add
mov
push
dec
add
push
mov
leave
or
gs
enter
cmp
mov
test
pusha
jns
in
rcrl
js
shlb
xchg
ljmp
aaa
mov
ret
pop
push
sbb
shlb
sub
cmp
sti
push
fdiv
and
inc
mov
ja
mov
jecxz
jae
stc
push
in
xchg
call
lock
adc
aaa
push
lahf
sub
stos
mov
push
pop
xchg
jmp
fs
pusha
inc
or
and
dec
and
add
ss
cmc
ffreep
pop
and
mov
ss
mov
pop
leave
mov
inc
inc
pop
in
xchg
jg
jo
add
nop
dec
xlat
xchg
adc
add
call
sahf
jmp
mov
jae
jo
repz
sahf
mull
xor
pop
lret
jne
mov
sub
push
jmp
popf
push
mov
jne
add
cltd
jnp
jle
or
scas
mov
fistps
push
fmul
ret
sti
and
bound
sbbb
jl
imul
scas
cld
sub
cmpsb
out
shlb
shl
pop
cmp
dec
subl
cltd
gs
push
mov
movsl
pop
stc
inc
xorl
mov
andb
sbb
repnz
cmc
shlb
arpl
dec
pop
mov
enter
addr16
mov
ror
rcr
pop
fsin
shll
popf
mov
xor
xchg
repz
jbe
stc
add
ret
pop
mov
cwtl
in
mov
dec
movsl
movsl
leave
in
adcl
aad
xchg
mov
inc
add
pop
cli
lods
cmp
movsl
or
aad
out
pop
sbb
imul
sbb
adc
push
mov
and
cltd
or
mov
mov
fisttps
pop
out
pusha
mov
or
add
jg
jo
std
js
mov
and
push
sub
int
insb
testl
in
fwait
jne
test
or
mov
push
scas
push
add
push
mov
add
inc
insb
or
cwtl
pushf
inc
cmp
inc
stc
cltd
jne
mov
jnp
je
jno
aaa
shrl
inc
stos
test
inc
mov
sbb
lcall
in
add
mov
push
insl
int3
andb
dec
sbb
or
popa
mov
int3
test
or
icebp
push
add
mov
loop
and
sbb
jnp
or
xor
outsl
push
inc
mov
lret
shll
insl
adc
incl
stos
cmp
or
lods
dec
repz
test
fwait
jnp
or
mov
and
xor
push
xchg
push
mov
pcmpgtw
xchg
idivl
mov
mov
cmp
loop
pusha
mov
xor
mov
xchg
pushf
lahf
div
aaa
push
loopne
jo
mov
orl
out
mov
mov
jne
fildll
andl
jp
pop
sub
aas
sub
sub
clc
adc
mov
test
addr16
inc
adc
pop
xor
fstps
xchg
out
jecxz
push
outsb
sub
das
aas
clc
std
lret
insb
aam
xor
loope
inc
js
inc
imul
les
xor
push
es
movsl
sbb
lret
push
xlat
inc
cmp
cli
inc
mov
pop
call
dec
in
jae
cmp
ljmp
cmp
and
dec
inc
inc
insb
mov
xlat
stc
add
jge
cltd
movb
scas
and
jnp
pusha
xchg
push
jb
add
rcl
adc
cld
mov
xor
xchg
and
outsl
xor
stos
mov
jg
insb
shll
mov
mov
adcb
add
iret
jmp
cwtl
jp
cli
mov
into
mov
jne
cmp
add
mov
scas
and
popf
pop
add
mov
loop
call
ret
andps
hlt
mov
or
mov
pop
jg
fiaddl
loope
cmpl
into
loop
adc
pop
jno
stos
mov
mov
jae
pusha
cmp
fisubs
and
iret
and
pusha
push
popf
xchg
aas
or
xchg
in
in
mov
mov
repnz
ljmp
xor
and
shlb
pusha
push
fisttpll
push
enter
in
jmp
sub
push
jg
xchg
cwtl
push
in
cs
aaa
arpl
xchg
jo
clc
arpl
push
pop
jg
adc
scas
pop
mov
add
scas
push
cmp
and
sar
clc
mov
subl
and
mov
cmp
outsl
adcb
adc
fwait
pop
mov
or
mov
sub
cltd
sub
push
cld
pop
test
sub
jns
dec
ljmp
inc
jmp
xchg
data16
pop
or
mov
jne
rcrl
jne
arpl
popf
scas
push
jg
test
inc
xchg
jns
andl
ds
stc
jae
fdivs
cmp
sbb
outsl
shr
repnz
stos
lcall
xor
adc
jl
je
arpl
cmp
cmp
leave
or
dec
pop
xchg
pop
add
push
mov
subb
scas
cli
sub
sub
dec
cmp
mov
aaa
in
xchg
out
pop
scas
idivb
imul
fisttps
mov
lret
arpl
sbb
pop
js
loop
sbb
lahf
clc
inc
je
pop
xlat
dec
xchg
xor
imul
dec
push
dec
sub
lcall
or
mov
in
vpshlq
sbb
daa
mov
cmpsl
flds
jbe
xchg
bound
pop
jb
jecxz
hlt
inc
ficomps
movsb
popa
loope,pt
push
stos
out
cmp
dec
jno
cld
lret
push
sub
test
inc
popa
movsb
and
cmc
mov
or
jl
and
pop
aas
sub
jns
push
and
lods
jmp
fsts
mov
cmpsl
dec
into
fld
mov
out
and
or
inc
in
sti
lahf
shll
imul
xchg
push
pop
idivb
push
mov
stos
les
or
xchg
pop
imul
mov
cmp
je
inc
mov
addr16
pop
ret
jne
repz
cmp
and
shl
lahf
icebp
daa
fdivs
icebp
and
sbb
push
imul
xchg
push
roll
mov
aam
sub
pop
es
push
xor
adc
sarl
push
in
push
and
mov
push
dec
lock
xchg
jl
lods
and
sbb
sahf
jecxz
xor
or
add
lret
adc
dec
xor
shl
pop
pop
bound
dec
lcall
xchg
pop
dec
fld
mov
in
aam
push
lock
mov
cmp
lahf
push
add
jge
fwait
add
test
bound
add
in
mov
fidivl
pusha
insb
adc
jmp
stos
push
jmp
loop
pushf
pop
xlat
add
cwtl
inc
imul
mov
jg
mov
aas
ftst
int
mov
dec
ficompl
es
sub
repnz
xchg
mov
das
into
jmp
sarb
add
shll
in
add
les
cmpb
pop
adc
pop
pop
push
das
cmp
mov
xchg
lcall
push
jl
mov
pushf
int
ss
and
aas
imul
insl
cmp
je
fwait
push
cmp
and
cli
inc
cwtl
inc
lds
mov
std
outsb
xchg
aaa
jle
imul
adc
cmpb
out
out
sub
in
xchg
fs
enter
xchg
sbb
and
out
mov
aad
jmp
aaa
push
mov
ror
int3
sub
lret
fdivrs
inc
sub
in
int
repnz
mov
add
in
push
xor
in
mov
and
dec
idivb
addr16
orl
adc
adc
test
add
lods
or
addr16
fistl
cld
add
idiv
sub
cmpsl
jne
cwtl
add
scas
pop
add
sbb
mov
xchg
jmp
cwtl
jno
leave
mov
push
xchg
sbb
xchg
dec
pop
sahf
inc
xchg
jnp
mov
loopne
lret
dec
sub
dec
cmpsb
jecxz
daa
loopne
stos
mov
in
inc
popa
mov
repz
mov
movsb
mov
jmp
fld
in
fnstcw
ficoml
call
stos
pop
fistpll
adc
out
xor
mov
push
incl
dec
adc
mov
mov
cmp
sub
pusha
and
cmc
insb
mov
jle
insl
jb
mov
shrb
sub
jle
imulb
sbb
jle
rclb
test
aam
pop
xchg
cld
stc
in
pop
rcr
push
jno
popf
inc
shll
cmpsb
lea
jl
and
nop
jp
push
stc
stos
das
pushf
insb
dec
je
rorl
clc
push
popf
jmp
sbbb
adc
dec
or
mov
mov
arpl
jge
push
daa
divb
push
loopne
mov
sub
push
lret
cmp
and
sub
pop
out
daa
fsubrs
mov
jmp
mov
subb
repz
pop
mov
rol
push
sub
push
xchg
sarb
setle
cmp
jecxz
pop
pop
ret
scas
dec
imul
jbe
add
stc
xchg
bound
test
xchg
bound
and
xchg
cmp
mov
std
mov
mov
jo
push
es
loope
iret
add
xchg
sub
lret
fnsave
int
loope
lds
add
xor
sub
aaa
test
pop
imul
mov
repnz
icebp
jp
push
cmpsb
fwait
imul
dec
pop
lods
ljmp
lret
movsl
in
scas
stos
xor
or
fneni(8087
inc
faddl
jmp
pushf
iret
mov
push
in
and
pop
mov
xlat
imulb
movsb
outsb
xchg
and
inc
inc
movsb
xchg
int
aas
mov
sahf
mov
dec
in
push
add
push
xchg
aad
les
repnz
frstor
sbb
cmp
pop
bswap
pop
jb
fidivrl
jge
pop
jle
mov
sub
scas
mov
imul
aam
sbb
xchg
lret
adc
in
mov
xor
mov
dec
in
pop
loopne
adc
es
mov
popa
adc
test
data16
lods
inc
je
rol
ljmp
stos
xor
xor
mov
push
flds
in
ret
cli
lret
inc
ljmp
inc
push
mov
cmp
and
bound
fnop
jle
dec
jne
adc
aaa
loopne
push
stc
outsb
cli
xor
clc
jbe
lods
out
movsb
and
cmc
fildl
cmp
addl
imulb
add
mov
das
inc
loope
jg
mov
push
dec
and
out
mov
or
repz
add
out
cwtl
dec
outsb
pop
je
and
pop
fcompl
cmpb
push
movsl
adc
inc
dec
repnz
push
int
test
mov
push
dec
out
es
xchg
shrb
or
icebp
sbb
sbb
clc
mov
cmovno
aas
lret
xchg
add
pop
jl
inc
or
and
pop
mov
adc
xchg
jge
inc
cmpsl
insb
fidivrs
sbb
push
mov
lret
ss
push
sbb
popf
dec
daa
jae
shll
stos
fisttpl
arpl
popf
mov
lds
fldl
or
push
add
mov
lret
adc
push
fs
test
movsl
and
jmp
push
orb
lods
dec
and
mov
jmp
cmpl
mov
cmpsb
testb
sti
cs
push
xchg
jno
lret
pop
pop
xchg
mov
es
inc
movsl
xor
or
mov
mov
jbe
ds
int3
ret
jp
jle
dec
stc
mov
insl
push
rolb
mov
add
ret
push
or
pusha
outsl
or
and
cs
clc
xchg
mov
lea
fcomip
sbb
cmp
js
fs
add
lcall
jge
rcrl
cli
je
jb
mov
repz
pushf
in
pop
cmc
mov
push
xchg
sti
dec
clc
daa
test
xor
inc
jp
xchg
adc
mov
aam
pop
decb
cmpb
mov
dec
in
pop
or
inc
rorb
out
sbb
and
rcr
cli
and
lock
and
enter
inc
inc
cmpsb
mov
test
jae
nop
sbb
test
cmp
jb
cmp
sbbl
cli
inc
jae
cmc
jno
adc
ja
mov
lds
lock
scas
scas
movsl
or
rol
je
test
fsubrs
aam
or
push
stc
or
mov
ds
ljmp
mov
lret
adc
shlb
and
daa
rcrb
nop
jb
outsb
sbb
mov
aas
inc
das
xchg
ret
push
cmp
arpl
jl
inc
jge
cwtl
sbb
das
rolb
cmc
jl
push
sub
dec
rcll
cmp
jmp
xor
cmp
lret
jecxz
xlat
jbe
loop
cmpsl
in
std
and
mov
cltd
and
imul
fsubl
push
pop
xor
mov
xor
lods
shlb
lcall
xchg
pop
out
adc
add
mov
inc
jp
loope
mov
add
or
in
clc
pushf
sbb
add
xchg
and
mov
mov
xchg
cmpsl
add
scas
sub
orb
jecxz
xchg
pop
cmp
mov
sub
push
mov
js
sahf
fistl
dec
pushf
pop
jns
push
pop
mov
xor
movsb
xchg
int
jle
ret
cmp
adc
sub
pop
imul
aaa
jno
jp
sbb
outsl
repnz
nop
jbe
inc
push
adc
insb
lods
push
mov
pop
iret
lcall
jp
scas
xor
jns
or
inc
ljmp
pusha
inc
fidivl
dec
pop
adc
pop
push
bound
inc
jl
xor
or
mov
aas
mov
mov
jp
cmp
mov
mov
cmpsb
outsb
pop
sbb
fsts
sahf
xor
js
sub
push
mov
xor
lods
repz
mov
xchg
aaa
faddl
xor
in
jmp
subb
pop
or
ja
push
in
popa
add
sbb
jb
or
push
gs
sahf
ror
out
push
and
movsl
mov
aas
insl
xchg
push
and
xor
jne
orb
adc
popf
sahf
cmp
mov
popf
jne
push
pop
adc
xor
xlat
dec
mov
push
dec
rcl
lds
enter
cmp
inc
fldl
dec
sub
jne
int3
mov
mov
cmp
sbb
push
int3
negl
or
xchg
aas
dec
dec
je
sbb
rcl
movb
push
pusha
test
inc
icebp
aas
and
stc
test
sahf
xor
jl
mov
imul
xor
jb
sbb
pusha
fwait
inc
mov
cmpsl
adc
sarb
mov
mov
lds
fidivrs
testb
mov
test
inc
xlat
cwtl
shll
adc
add
ret
lret
filds
jae
pop
sub
les
outsl
or
inc
inc
movl
xchg
sub
stos
inc
rcrl
pop
dec
jbe
and
inc
xchg
subl
dec
jmp
inc
outsb
ret
in
push
jge
or
shl
test
addr16
jmp
sar
call
sub
xor
add
mov
jne
std
inc
lods
jne
repnz
insb
adc
add
inc
cs
mov
jmp
faddp
sub
ja
xchg
mov
iret
xchg
into
mov
pop
push
mov
in
add
popf
rolb
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
imul
cltd
aaa
pop
jmp
mov
push
jb
cld
adc
test
sarl
cmp
sub
jp
shll
call
movsb
inc
dec
fldt
mov
movsb
jb
mov
enter
stc
xchg
pop
mov
lret
fcomps
mov
lcall
push
lcall
add
adc
and
dec
dec
inc
mov
pop
and
cwtl
rcll
push
sbb
mov
push
xor
insb
cmp
mov
cmc
mov
rcl
pop
cmp
push
pop
sarb
movsl
push
rolb
fldt
shrl
jmp
push
jle
sbb
jmp
xchg
test
xor
test
jne
push
arpl
sub
popf
fildl
jne
mov
jle
repz
sahf
icebp
loop
push
mov
adc
mov
std
mov
dec
bound
mov
sub
pop
std
into
stos
orb
rcll
pop
mov
add
mov
ljmp
and
dec
cmp
push
add
sahf
push
dec
enter
cmpsl
sbb
dec
pop
inc
jecxz
mov
mov
pop
jnp
adc
inc
jbe
dec
add
ds
mov
mov
jge
xlat
scas
and
repz
fisubs
arpl
mov
xor
jo
mov
rolb
mov
fs
sub
add
fcoml
ljmp
cmc
cmpsl
in
pop
mov
mov
xchg
mov
dec
mov
cmp
pop
jg
xor
cli
insl
xor
fmull
scas
or
mov
adc
adc
test
cmp
sti
ret
movb
inc
pop
enter
add
and
add
add
add
add
inc
xchg
pusha
add
xchg
fstps
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
mov
add
xlat
mov
