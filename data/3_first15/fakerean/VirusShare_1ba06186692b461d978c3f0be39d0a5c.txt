add
add
sub
loop
and
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
push
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
test
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
lea
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
lea
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
orl
orl
push
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
lea
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
push
push
call
test
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
fldl
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
mov
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
cmpb
jne
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
push
call
mov
cmp
jne
lea
cmp
jb
lea
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
push
mov
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
pushl
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
fdivl
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
mov
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
mov
lea
lea
push
push
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
test
je
lea
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
jne
lea
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
call
mov
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
lea
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
push
movl
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xlat
add
add
add
add
add
and
add
adc
add
test
mov
je
mov
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
add
dec
add
add
push
add
popa
jns
add
add
mov
xlat
add
add
add
enter
cwtl
pop
popa
xchg
mov
add
notl
addb
iret
jne
add
icebp
mov
push
add
lahf
mov
in
hlt
call
in
add
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
out
subb
push
gs
imul
out
mov
iret
jnp
mov
jno
ja
xchg
scas
jp
jp
mul
enter
fiadds
ljmp
xchg
into
add
mov
insb
scas
add
add
add
mov
jb
push
imul
add
xchg
in
add
lcall
inc
in
push
push
lea
push
push
push
push
push
lea
push
push
call
push
add
add
xchg
mov
scas
jo
rcrb
fldl
outsl
add
loopne
jae
push
xchg
add
add
arpl
mov
add
cwtl
add
mov
mov
fwait
mov
mov
mov
jmp
sub
pop
push
push
push
push
push
push
push
push
push
push
call
mov
lds
int
add
lods
xchg
scas
bound
add
add
test
flds
push
std
sub
pop
push
push
push
lea
push
lea
push
call
cli
add
in
add
mov
add
add
andb
pop
add
sti
cmp
cmc
add
in
add
pop
movsb
shll
in
lods
cmc
idivl
add
rolb
xlat
add
arpl
sub
pop
call
push
push
push
push
lea
push
push
push
call
jne
out
cltd
pop
rcrl
add
aam
rcrb
jb
ljmp
popa
mov
add
jne
in
jmp
add
mov
mov
loop
cli
add
add
xchg
xchg
popa
add
call
push
push
push
push
call
pop
ljmp
mov
push
add
jae
lret
mov
push
test
cmpsb
popf
loopne
outsl
clc
xchg
add
add
push
in
addr16
mov
add
fcomps
mov
add
jns
pop
cltd
add
jge
mov
out
pop
fs
push
addb
add
add
sub
pop
jmp
ret
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
loop
jmp
cmc
add
mov
lret
insb
add
aam
int3
jmp
in
loopne
lcall
inc
hlt
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
pop
push
mov
stc
add
std
push
imul
addr16
jns
ja
xchg
add
xchg
out
add
loopne
add
add
add
mov
rcr
ja
int
add
add
test
add
jae
movsb
add
pop
add
icebp
mov
push
add
add
iret
add
mov
ja
add
sub
pop
mov
add
push
push
push
lea
push
push
push
push
push
push
push
call
out
fwait
add
std
add
add
mov
add
addr16
mov
add
add
cld
add
jp
add
mov
icebp
cmpsb
push
add
add
add
movsl
add
add
add
fiaddl
add
out
add
cmpsb
push
mov
cmc
sub
pop
add
push
push
push
lea
push
call
out
add
push
mov
add
pushf
std
add
add
push
mov
out
push
mov
mov
push
xchg
int3
add
xchg
in
lock
lcall
ret
fmull
add
cmp
mov
iret
push
and
add
sub
inc
sub
add
dec
pop
shl
pop
push
push
lea
push
lea
push
call
addl
mov
jae
jmp
in
leave
add
pop
add
pop
std
jns
add
add
add
push
add
add
add
out
add
xchg
mov
mov
add
add
ret
in
lock
pushl
call
push
lea
push
push
push
push
push
push
call
add
mov
push
int3
add
jbe
xchg
outsl
add
add
add
icebp
jns
add
not
cld
add
xchg
jno
sub
pop
mov
movl
push
push
push
lea
push
call
pop
pop
mov
iret
imul
add
ljmp
pop
roll
add
mov
add
pop
jno
jp
add
shr
add
cmc
clc
std
jecxz
imul
lock
lcall
inc
call
inc
cmp
mov
stos
push
call
lock
add
add
add
add
mov
jae
pop
js
add
add
add
add
add
mov
lret
xchg
push
add
add
cli
add
mov
clc
add
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
repnz
add
add
imul
mov
mov
icebp
add
pop
add
fiaddl
cltd
shlb
add
jne
pushl
push
push
call
push
add
xchg
push
add
ljmp
xchg
lods
fistpll
int3
add
gs
add
jae
add
imul
add
lret
add
add
lock
add
int
add
mov
sub
pop
call
push
push
push
lea
push
push
push
push
push
lea
push
call
push
xchg
push
add
cwtl
add
in
lret
mov
add
rcll
pop
add
add
stc
std
stos
push
flds
arpl
stos
add
jns
lods
cmpsl
add
clc
lret
push
add
lcall
jne
push
lea
push
push
call
int3
add
loop
out
add
test
add
jp
movb
pop
stos
aam
push
std
xlat
fcomps
add
sahf
mov
cltd
add
add
xchg
test
ja
sub
pop
pushl
push
lea
push
call
push
push
mov
movsb
mov
test
add
addl
leave
pusha
add
ficoms
mov
sahf
mov
mov
add
in
add
push
add
add
add
add
add
jae
sub
pop
call
push
push
inc
not
push
xor
add
rol
not
inc
sub
add
dec
pop
dec
pop
push
lea
push
call
jp
add
jmp
enter
add
bound
add
add
add
jle
push
add
scas
je
jae
mov
test
sub
pop
pushl
call
push
push
lea
push
push
push
push
call
add
add
pop
test
add
push
lret
add
add
roll
add
jae
jnp
fsubl
add
ja
movl
add
popf
add
sub
pop
push
push
push
dec
add
sub
shr
push
push
pop
add
add
shl
not
rol
sub
dec
shr
add
pop
sub
pop
push
push
push
push
push
lea
push
push
push
call
add
add
fiadds
push
fs
je
pusha
add
add
add
add
sarb
jle
cld
test
outsl
mov
in
jmp
jmp
mov
sub
pop
push
push
push
push
push
push
call
js
add
mov
add
mov
add
mov
add
jmp
lea
add
mov
lcall
add
rclb
push
lea
push
push
push
push
push
call
lcallw
scas
cld
stos
mov
add
lret
fiaddl
mov
add
xlat
add
mov
add
add
lret
push
call
jnp
popa
add
add
into
jp
mov
stc
add
test
sub
pop
mov
push
push
push
push
lea
push
call
add
add
add
add
outsl
adcb
scas
mov
mov
add
add
mov
add
mov
pop
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
lcall
mov
mov
add
and
movsw
aam
mov
push
pop
adcb
mov
scas
add
lea
repnz
insb
lret
add
pop
hlt
push
lea
push
push
push
push
call
jae
mov
fiaddl
add
add
xchg
lcall
shlb
add
add
mov
insb
insb
roll
add
add
add
push
add
addr16
mov
test
pushf
icebp
push
mov
add
push
add
clc
mov
lret
into
push
add
add
stos
add
add
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
iret
add
addb
aad
add
rcr
fistpl
add
sti
test
lret
add
mov
add
adc
add
cli
xchg
fdivrl
add
push
into
add
mov
push
mov
pusha
push
in
fcompl
ret
add
add
push
push
push
push
push
push
lea
push
push
push
push
call
repnz
cmpsb
pop
push
ja
popl
mov
enter
jb
add
add
movsb
add
add
andl
add
xchg
push
sti
add
add
push
add
xchg
add
add
in
in
fdivr
lcall
ret
fmull
add
push
push
call
add
clc
js
mov
add
jae
add
add
repnz
push
out
cmpsb
add
add
add
lahf
cmpsl
add
add
add
add
hlt
add
add
add
add
jne
in
add
add
fincstp
cmpsl
roll
arpl
add
in
lock
mov
xor
push
push
call
fwait
test
add
mov
flds
jb
lret
aam
jp
add
add
stos
imul
add
nop
add
jecxz
gs
mov
add
scas
test
iret
mov
sub
pop
add
push
lea
push
lea
push
push
lea
push
call
test
push
add
mov
mov
ljmp
loopne
mov
add
add
rcr
mov
js
addb
shll
js
add
push
lea
push
call
add
bound
xchg
add
lods
ret
add
add
mov
pop
in
leave
stos
testl
add
in
clc
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
push
testl
fsts
loope
movsl
scas
add
pop
add
movsb
jmp
add
test
lods
add
test
movsb
add
mov
add
sbbl
add
lret
fildll
pop
mov
jns
int3
add
add
sub
pop
add
push
push
push
push
push
lea
push
call
addl
add
test
pop
into
sahf
add
scas
add
mov
mov
test
add
out
add
pop
sub
pop
pop
push
lea
push
push
call
mov
jnp
add
add
popa
mov
in
movsl
int3
popf
bound
add
movsb
stos
repnz
mov
add
rolb
fsubrp
add
mov
jle
insb
add
in
ljmp
jne
push
xchg
sub
pop
mov
push
push
push
lea
push
push
push
call
push
xchg
in
push
sarb
lcall
add
jnp
add
cmpsb
mov
add
push
add
ja
add
add
jns
outsl
push
add
pop
add
add
mov
lcall
or
push
lea
push
push
push
call
movsl
cld
int
lcall
in
fdivr
mov
ja
mov
add
repnz
jo
shr
xchg
mov
stc
xchg
mov
out
cltd
mov
add
stos
idiv
loopne
lea
int3
sarb
mov
add
add
add
lcall
les
push
push
call
add
test
mov
mov
add
stc
add
push
lea
faddl
xchg
sahf
xchg
popa
pushf
push
add
add
add
lcall
mov
push
push
push
push
push
push
push
push
lea
push
call
in
add
add
add
jne
je
push
test
repnz
add
add
add
pusha
add
in
add
nop
mov
mov
xorb
add
pop
add
jp
add
subl
add
add
out
add
add
add
push
lea
push
push
push
push
push
push
push
call
add
add
add
xchg
out
pop
icebp
xlat
add
lea
add
out
jl
add
add
add
lret
mov
repnz
ljmp
add
mov
xchg
pop
xchg
add
add
add
mov
add
fldl
loop
push
sub
pop
add
push
push
push
push
push
push
push
lea
push
call
mov
pop
add
add
ror
gs
cmc
mov
leave
add
rclb
xchg
mov
add
cld
push
lret
add
add
movsb
icebp
bound
add
add
sub
pop
sub
pop
push
push
call
add
stos
add
jle
jmp
mov
lds
add
in
add
add
add
add
add
incb
mov
add
add
hlt
out
out
lods
out
add
pusha
out
add
mov
fdivp
add
add
rolb
leave
flds
add
sub
pop
rep
pop
push
push
push
push
push
push
lea
push
push
push
call
add
stos
add
mov
mov
add
add
add
mov
loopne
add
add
bound
je
clc
mov
popf
add
lcall
mov
icebp
xchg
add
pop
add
add
add
mov
popl
pop
hlt
push
push
call
scas
mov
add
add
add
scas
add
add
push
lods
addr16
cli
loop
shll
roll
push
add
add
pop
sub
pop
add
push
push
push
call
sarl
add
test
ja
subl
in
add
mov
lret
jmp
add
fiaddl
jle
loope
out
imulb
sub
pop
add
add
push
push
push
call
add
add
add
push
mov
outsl
ret
add
add
add
add
xchg
add
add
add
je
add
add
mov
cmc
mov
cwtl
mov
add
add
add
add
xchg
sub
pop
mov
push
push
push
push
push
call
add
add
test
mov
test
rolb
xchg
push
add
pop
pop
add
add
add
shl
in
aad
jl
mov
mov
add
xchg
iret
js
mov
xchg
test
mov
lcall
add
push
lea
push
lea
push
push
lea
push
push
call
pop
add
pop
pop
outsl
into
lea
xchg
mov
pusha
jle
add
xchg
add
test
mov
mov
cltd
add
jno
add
add
lods
roll
icebp
sbbl
jmp
add
call
push
lea
push
lea
push
push
push
push
lea
push
push
call
addb
loop
jmp
add
push
add
mov
jb
cmc
mov
lret
jl
addr16
push
pop
add
add
loopne
add
fsts
add
enter
out
in
addb
jno
add
cld
fnclex
popa
add
jo
ficoms
jns
jecxz
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
mov
cmc
add
lods
mov
stos
movl
add
stos
mov
pop
lds
add
add
xchg
fmull
pop
loopne
pop
gs
fsubs
add
add
add
add
shrb
push
add
lds
mov
add
cltd
add
mov
add
fs
sub
pop
xor
push
push
push
push
push
push
push
lea
push
push
call
add
add
ficoms
add
mov
xlat
jb
add
mov
fildl
cmc
sarb
add
mov
sti
mov
mov
jp
jmp
add
mul
roll
test
sub
pop
add
push
push
call
push
add
pop
fwait
add
out
add
add
test
add
add
add
fcompl
idivl
fcomps
add
jnp
sub
pop
mov
xor
push
push
push
push
call
add
ljmp
leave
add
add
add
cld
add
stos
add
push
jae
lret
add
call
xchg
add
add
fwait
loop
add
addl
cmpsl
jns
add
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
call
xchg
sarl
cwtl
add
rcrb
add
movl
add
add
leave
add
add
xchg
jle
add
xchg
aad
into
add
add
add
imul
ja
xchg
lahf
fadds
fs
aam
add
xlat
test
push
in
int
popa
mov
movsl
pop
mov
add
faddl
rcll
enter
nop
loopne
cld
push
call
add
test
mov
xchg
xchg
mov
scas
add
add
popa
out
mov
mov
xor
lods
repnz
add
jb
add
jae
fiaddl
add
sub
pop
mov
push
push
lea
sub
shl
sub
push
and
add
sub
lea
xor
sub
pop
lea
inc
pop
push
push
push
push
push
push
call
add
addl
mov
jae
jecxz
call
mov
add
in
add
add
add
js
add
add
les
outsl
loopne
add
add
loop
sahf
lods
add
std
ja
add
cmpsl
add
add
fisubrl
pop
pushl
push
lea
push
call
add
hlt
mov
add
in
add
mov
add
sarl
add
jmp
roll
popa
enter
scas
fwait
lods
add
jno
mov
in
scas
movsl
add
vmovq
add
add
idiv
xchg
jnp
mov
add
in
clc
lcall
cwtl
push
add
push
lea
push
push
push
lea
push
call
add
xlat
xchg
in
clc
mov
add
bound
cli
mov
sarl
jp
xchg
int
test
add
push
add
jnp
add
loop
add
xorb
pusha
add
mov
in
mov
push
add
mov
incb
lcall
cwtl
cmc
add
push
push
push
not
not
push
xor
add
rol
sub
add
not
shr
inc
pop
not
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
movsb
sahf
stc
fldcw
add
mov
test
imul
gs
movsl
jb
scas
mov
scas
jo
in
add
add
test
pushf
jmp
fwait
arpl
bound
add
int
add
fcomps
push
push
push
call
mov
xor
xchg
cli
add
jne
add
fwait
lea
cwtl
lcall
insb
mov
pop
test
clc
js
add
rorl
jmp
rolb
movb
idivl
sar
add
mov
add
aad
cmc
mov
jno
fldl
add
in
mov
add
lcall
add
jb
xchg
add
js
mov
mov
jp
mov
fldl
out
jns
js
add
jecxz
ja
imul
add
popf
add
int
add
cltd
add
add
out
fsub
add
jns
add
xchg
popf
cli
int3
test
mov
add
xchg
jmp
lret
fwait
add
sub
pop
call
push
push
push
push
call
add
rolb
add
cmpsb
push
mov
jb
add
add
mov
jbe
in
pop
add
add
icebp
aam
addb
enter
push
mov
push
shll
add
out
insb
addb
in
lock
lcall
clc
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
in
iret
jle
add
int3
std
mov
mov
mov
scas
fcomip
add
mov
mov
add
jmp
out
add
mov
push
loopne
add
add
add
add
add
mov
lcall
push
push
push
push
push
lea
push
push
push
call
test
add
pop
mov
push
add
fadds
mov
addl
stc
stos
mov
add
xchg
add
add
pop
add
add
mov
add
add
lock
add
xchg
roll
add
lcall
mov
push
lea
push
push
push
lea
push
call
xlat
enter
add
add
add
add
jnp
add
xchg
out
lods
add
add
mov
lcall
push
cmc
sti
add
add
faddl
aad
mov
add
scas
mov
in
in
pop
add
push
push
push
push
push
lea
push
lea
push
push
call
add
xchg
add
add
add
jmp
stc
push
push
push
fwait
add
xchg
add
testl
mov
cli
into
sahf
roll
mov
ret
add
add
push
lea
push
call
add
ja
out
add
data16
ja
add
add
call
jne
fidivrs
mov
add
add
add
lcall
imul
popf
roll
add
repnz
push
add
lret
mov
add
movsb
test
movw
dec
add
push
push
call
pop
loopne
cmpsl
add
popf
imul
stos
add
cltd
in
sti
addr16
add
add
mov
stos
ljmp
add
add
imul
add
lahf
imul
add
pop
mov
xor
push
push
call
les
push
lahf
mov
add
pop
add
add
call
add
subl
gs
pusha
in
mov
rol
push
lcall
mull
clc
lcall
jne
push
push
push
push
call
add
add
test
pop
jmp
add
push
std
add
add
jbe
jo
test
add
out
mov
scas
call
out
add
cmpsl
lods
add
mov
mov
in
stos
lods
push
mov
outsl
lret
fiadds
cmpsb
add
lcall
inc
adc
cmp
movsb
push
push
push
push
push
push
lea
push
lea
push
call
jecxz
add
add
add
pop
in
add
cli
jmp
out
mov
in
add
stos
pop
add
roll
jae
jo
stos
lea
cmpsl
test
mov
in
add
lcall
add
push
push
lea
push
push
push
push
call
bound
add
add
mov
ret
popf
add
xchg
jo
mov
jbe
scas
add
ja
jmp
add
mov
add
add
add
xchg
add
je
add
sub
pop
add
push
push
push
push
lea
push
call
add
jae
lret
test
fwait
jo
add
les
stos
nop
add
imul
add
pop
test
addl
add
cwtl
add
lcall
lock
lea
push
push
lea
push
lea
push
call
bound
icebp
pop
data16
push
outsl
cld
jno
lahf
jl
addr16
add
mov
add
imul
add
pusha
call
jge
pop
add
mov
xlat
add
loope
xchg
mov
xchg
jp
add
jge
fwait
jns
cmpsl
addb
iret
incb
add
add
push
add
add
add
test
in
in
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
loopne
add
cmc
movsb
add
push
imul
cmc
stc
push
test
bound
sarb
jl
leave
add
add
cmpsl
add
jecxz
shlb
mov
lret
lcall
lds
aad
add
in
pop
add
add
jmp
add
movsb
jne
loop
sub
pop
mov
xor
push
push
push
call
add
fwait
icebp
lock
add
add
add
clc
jb
pop
push
add
mov
mov
push
roll
jnp
jle
imulb
jmp
add
jl
stos
add
mov
sub
pop
rep
push
push
push
call
int3
aam
pop
ja
fisttps
add
add
hlt
gs
xchg
mov
add
scas
fistps
test
add
call
bound
addb
ret
add
mov
mov
xor
push
push
lea
push
push
push
push
push
push
push
lea
push
call
jnp
xorb
lods
sahf
add
add
iret
add
ljmp
jle
gs
rorl
popf
mov
mov
xchg
insb
add
lcall
leave
je
push
lea
push
push
push
push
lea
push
push
push
call
add
add
int3
add
fdivs
add
stos
addl
pop
add
jge
jbe
popa
lret
add
add
add
add
add
add
add
add
jo
add
data16
jne
cwtl
add
pop
add
lcall
xor
or
ja
sub
dec
add
add
pop
pusha
add
add
add
flds
pusha
add
cltd
cmpsb
out
mov
fldl
aam
add
out
mov
mov
jge
add
imul
add
add
loop
add
xor
push
push
push
push
lea
push
call
sti
mov
pop
add
jmp
add
fs
cmpsl
notb
add
faddl
jae
cltd
xchg
fdivr
out
lahf
in
add
orl
lcall
les
add
push
push
push
push
push
push
push
push
lea
push
call
ljmp
shl
jbe
fmull
imul
mov
cmpsl
add
jge
add
fsubr
jo
int3
add
xchg
cmpsb
test
lahf
stc
mov
subb
add
mov
in
fcompl
push
sbb
mov
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
sti
lods
add
push
mov
add
add
cwtl
test
add
test
pop
in
xchg
add
add
cli
repnz
and
testb
add
push
push
leave
add
add
jnp
gs
add
mov
lcall
repnz
push
push
push
push
lea
push
lea
push
push
call
mov
jno
in
stos
nop
jl
mov
add
rolb
xchg
add
xchg
rolb
add
push
sahf
mov
mov
mov
add
in
add
sub
pop
add
push
lea
push
push
push
lea
push
push
call
add
mov
add
add
sti
add
add
add
sahf
nop
add
std
pusha
mov
arpl
jns
shll
stos
add
add
fldt
js
lods
pop
lret
test
add
add
in
sub
pop
push
push
push
push
push
push
push
push
call
out
icebp
add
mov
mov
hlt
mov
add
jno
add
add
lods
add
xlat
add
pop
jle
outsl
mov
add
push
pop
mov
xor
push
add
add
lea
pop
add
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
xchg
insb
jbe
xchg
pop
add
add
add
out
lret
push
negb
addb
add
add
mov
mov
roll
add
add
pop
add
lcall
movsb
mov
xor
push
lea
push
lea
push
push
push
call
add
xlat
xchg
add
xchg
add
add
bound
rcll
add
in
pop
xchg
pop
lret
out
add
mov
mov
xor
add
mov
test
mov
sub
pop
or
je
push
rol
pop
mov
push
add
pop
add
push
push
push
push
push
call
test
push
add
insb
pushf
mov
mov
add
insb
in
int
imul
jbe
gs
jne
out
imul
pop
add
out
push
add
mov
add
cld
add
sbbb
add
std
add
call
leave
pop
pop
sub
pop
add
push
lea
push
push
lea
push
push
lea
push
lea
push
call
imul
add
jmp
xchg
call
add
mov
add
and
add
hlt
cltd
jno
testb
push
add
rol
add
add
push
add
add
out
fdivrp
mov
out
pop
bound
fdivr
flds
imul
aam
sub
pop
rep
push
sub
pop
pop
push
push
inc
rol
push
or
not
add
ror
dec
shl
not
sub
lea
pop
xor
pop
push
push
push
call
mov
add
jmp
add
int
rcr
add
add
xchg
ljmp
add
add
loop
add
add
cmpsb
mov
in
hlt
lcall
mov
push
push
push
push
lea
push
call
add
add
add
add
mov
xchg
fisubs
mov
add
rolb
mov
add
pop
leave
add
mov
add
pop
add
rcrl
jmp
sub
pop
mov
push
ror
sub
inc
pop
mov
push
push
push
push
push
push
push
call
in
add
lcall
xor
data16
rcr
jns
add
jnp
add
loope
push
jl
add
add
leave
pop
mov
sahf
xchg
pop
sarb
addb
add
add
nop
pop
sub
pop
jmp
push
dec
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
mov
add
sahf
mov
pushf
loop
jle
add
add
jno
lods
idiv
in
add
scas
popa
subl
addr16
push
add
push
mov
add
add
jle
int3
shl
in
lods
add
lcall
in
push
dec
add
add
pop
add
push
push
shr
pop
push
push
sub
ror
add
pop
push
push
push
pop
mov
push
dec
ror
dec
pop
pop
push
inc
rol
pop
pop
pop
push
lea
push
push
call
add
rolb
jge
aad
add
add
insb
add
loope
push
add
nop
add
cli
fs
jbe
add
mov
popl
push
mulb
movl
jbe
imul
xchg
add
out
pop
pop
add
roll
jno
outsl
mov
sub
pop
pop
leave
push
lea
push
push
push
push
push
push
call
shlb
add
bound
aad
add
enter
int
add
mov
add
in
lcall
or
push
push
sub
dec
pop
mov
push
push
lea
push
call
pop
add
lcall
add
je
call
xlat
xchg
add
add
mov
add
imul
les
push
add
pushf
stc
lahf
in
xlat
cmpsl
out
add
pusha
add
push
pop
mov
add
into
add
test
sub
pop
add
push
lea
push
push
push
call
leave
add
pop
add
jmp
pop
addb
xchg
out
add
pop
add
adcb
std
add
mov
add
bound
mov
add
sub
pop
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
stos
add
out
fildl
rolb
pop
rcl
mov
int3
add
popf
push
enter
addl
xchg
add
push
int
add
add
stos
test
add
add
push
push
add
sub
pop
push
push
push
push
push
push
call
flds
push
add
mov
add
add
add
cmc
add
jge
add
std
shl
gs
add
add
lcall
inc
cld
add
add
push
push
push
lea
push
push
push
push
lea
push
call
add
scas
clc
insb
ljmp
jnp
add
add
shrl
push
insb
add
add
fcmovbe
add
filds
faddl
add
scas
add
test
out
fmul
mov
add
mov
add
lcall
inc
clc
incl
add
add
iret
add
pop
mov
push
sub
ror
pop
pop
pop
push
ror
lea
pop
pop
push
add
pop
pop
push
push
push
call
push
add
rolb
add
stos
add
fcmovbe
cmpb
add
jmp
repnz
add
imul
into
xchg
add
add
add
out
xlat
add
movsl
add
testl
sub
pop
leave
push
push
push
push
push
lea
push
push
lea
push
push
call
cwtl
add
enter
add
insb
add
add
sar
cmpsl
add
add
add
jle
add
add
add
add
test
je
arpl
in
popa
fadds
add
push
push
push
lea
push
call
je
add
out
insb
test
jl
out
mov
add
xchg
fidivs
cmpsb
in
test
add
movsb
add
cltd
test
mov
xchg
add
imul
sub
pop
mov
add
push
push
push
push
push
push
push
lea
push
push
call
lcall
mov
xchg
mov
enter
clc
add
add
mov
add
out
jne
jp
fistpll
push
ljmp
add
ljmp
std
add
pop
addr16
mov
cld
faddl
lcall
push
push
push
push
push
call
xchg
mov
mov
shll
lds
add
add
add
mov
jle
add
fdiv
mov
addl
push
add
add
add
add
push
pop
add
add
add
lcall
push
lea
push
push
push
lea
push
push
call
lahf
add
add
add
add
mov
mov
loope
aad
popa
in
mov
mov
incb
add
add
jecxz
add
jne
add
add
add
fstps
cmp
fwait
push
clc
shll
sahf
stos
pop
stos
fiadds
lcall
push
push
push
lea
push
lea
push
call
jmp
arpl
add
add
add
mov
add
insb
add
add
mov
mov
xlat
add
jne
add
into
push
pop
add
fcomp
arpl
add
shrb
push
jnp
add
fwait
sahf
add
add
add
pushf
pop
xchg
cmpl
lret
leave
add
add
sub
pop
push
push
xor
rol
add
shl
pop
testl
addl
push
push
push
push
push
push
lea
push
call
cmpsl
lret
add
out
jae
std
add
add
mov
fsubp
add
add
add
add
imul
aad
xchg
add
bound
add
rolb
add
jne
addr16
pop
add
cltd
out
in
in
lcall
add
rolb
fsubs
rorb
call
mov
push
push
push
push
push
push
push
push
lea
push
push
call
jbe
in
sub
pop
add
rol
clc
add
jae
rolb
add
add
fsubs
mov
add
orb
int
add
xchg
mov
pop
cwtl
test
stos
push
scas
fiadds
add
mov
add
iret
shl
add
add
lcall
jne
push
push
push
push
push
lea
push
call
add
mov
add
add
repnz
add
mov
fdivrs
repnz
fcompl
push
pusha
xchg
les
add
rol
add
add
add
add
xchg
sub
mov
push
add
pusha
add
add
add
add
std
pop
iret
pop
mov
mov
jmp
push
push
push
lea
push
push
push
push
call
add
mov
add
mov
roll
int3
add
aad
jbe
xlat
jecxz
pop
fiaddl
add
addr16
mov
add
pushf
gs
jae
hlt
add
add
data16
test
fdivrl
cmpsb
sub
pop
push
call
push
xor
pop
cmpl
jne
push
lea
push
push
push
push
call
push
add
add
mov
add
push
addr16
lcall
lcall
subl
push
enter
add
add
add
mov
add
cmc
add
push
movl
in
ljmp
fistpl
pop
add
in
in
pop
pop
push
sub
shl
inc
pop
pop
push
inc
inc
pop
pop
push
push
push
lea
push
push
call
add
add
iret
push
test
add
add
pusha
cmpsl
fwait
cmp
mov
aad
adcl
add
add
mov
cli
loope
mov
out
sub
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
add
add
xchg
js
push
add
cli
fmul
push
mov
add
mov
fs
add
fsin
add
xchg
xchg
add
test
movsl
popf
mov
popf
mov
scas
outsl
xor
lret
in
add
add
add
pop
add
aam
lret
ljmp
mov
fstl
iret
jecxz
in
fdivr
lcall
push
rol
sub
rol
pop
ret
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
cwtl
mov
pop
add
add
add
mov
mov
jmp
fwait
add
int
mov
mov
lret
fidivrl
push
add
mov
add
add
fdivr
lcall
push
shl
pop
mov
add
push
push
lea
push
push
push
push
push
call
mov
iret
push
dec
add
mov
pop
add
add
sti
add
add
add
add
xchg
mov
add
add
add
add
jecxz
xchg
testb
enter
in
mov
test
fildl
push
pop
lret
jnp
mov
out
in
in
push
push
push
push
call
mov
add
movsb
pop
add
mov
add
xchg
shrl
add
add
add
jne
cmpsl
add
rolb
xchg
add
lret
call
add
in
xchg
push
add
loopne
add
test
push
popf
xchg
add
imul
add
add
scas
pop
pop
mov
add
push
push
shl
shr
pop
push
push
push
call
hlt
scas
add
movsl
test
jecxz
movb
mov
sahf
cwtl
mov
iret
iret
test
jbe
addb
add
mov
push
test
fimull
fsubr
cwtl
incb
sub
pop
movl
push
push
lea
push
push
push
call
divb
movl
je
cmc
add
stc
out
add
mul
add
cmpsl
add
add
lods
xchg
out
scas
popa
add
pop
sub
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
xchg
into
xchg
out
add
add
add
push
add
add
mov
pusha
add
add
cwtl
add
push
mov
ljmp
mov
fldenv
add
jb
stos
testb
add
add
add
popf
icebp
push
lea
mov
sub
pop
call
push
inc
inc
lea
pop
push
call
push
push
push
push
push
push
push
push
call
mov
call
add
add
ja
lcall
sahf
add
in
add
mov
mov
int3
add
add
iret
add
testb
imulb
sub
pop
subl
push
add
shl
sub
pop
cmpl
jne
push
push
lea
push
push
push
call
jb
aam
gs
add
mov
arpl
add
rcr
clc
pop
stos
add
fdivrl
add
jmp
aam
xchg
add
test
lea
xchg
sti
loope
shrl
pop
pop
push
push
push
push
lea
push
push
call
lods
mov
add
add
mov
jne
add
add
mov
rolb
add
fstl
icebp
jo
fldl
cld
add
pop
add
jnp
add
popl
pop
xchg
int3
lods
popa
add
outsl
add
bound
mov
enter
fisubrs
add
pop
push
inc
not
pop
leave
ret
push
push
lea
push
call
push
xchg
mov
movsb
jge
xchg
fcmovbe
icebp
jmp
add
mov
mov
mov
mov
mov
add
test
xchg
insb
add
push
in
add
movsl
push
les
add
jle
add
jns
ljmp
mov
push
not
pop
add
push
push
xor
pop
push
push
push
shl
shr
inc
pop
push
push
lea
push
push
push
call
add
ret
add
push
add
movl
les
add
jecxz
push
add
jecxz
jle
lahf
out
add
pusha
jbe
leave
add
add
sub
pop
mov
lea
push
xor
ror
inc
pop
sub
mov
push
push
call
xchg
movsl
add
xchg
mov
jnp
add
add
aam
ljmp
xchg
rclb
add
add
add
jbe
pop
add
stc
add
mov
mov
add
add
jno
add
mov
add
jmp
mov
add
add
sub
pop
shr
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
push
jl
faddl
loopne
add
add
mov
loop
xchg
add
xlat
mov
iret
add
fisubl
mov
mov
fs
add
inc
or
inc
cld
push
shr
dec
pop
mov
push
xor
add
sub
rol
pop
add
push
shr
pop
add
push
add
shl
inc
pop
mov
push
rol
pop
mov
push
push
push
push
lea
push
call
add
fcmovnbe
xchg
pop
add
cmpsb
add
ljmp
cld
add
add
fildl
add
mov
in
xchg
add
push
jmp
divb
cmpsb
xchg
repnz
mov
fiadds
add
sub
pop
cmp
jne
push
push
push
call
mov
add
ror
lret
add
add
movsb
add
pop
stc
addr16
fdivr
jp
in
jo
movl
sub
pop
cmp
jne
push
shl
shr
rol
sub
pop
mov
push
lea
push
push
call
movsl
add
ljmp
mov
sti
mov
mov
mov
add
add
nop
add
add
pop
add
add
pop
cmpsb
cmpsl
lret
cli
mov
int3
add
imul
fisubrl
mov
add
add
add
hlt
pop
movl
jmp
push
push
call
cltd
iret
shll
stos
cmc
mov
add
bnd
add
insb
cli
les
jb
add
add
push
mov
add
lds
add
lcall
inc
cld
push
dec
rol
add
pop
mov
sub
jne
push
lea
inc
pop
mov
push
dec
pop
movl
jmp
push
push
lea
push
push
lea
push
call
out
les
lock
iret
jbe
add
flds
ficomps
mov
add
out
shr
fiaddl
add
add
cli
lea
add
add
stc
stos
xchg
add
add
add
xchg
sub
pop
mov
push
push
push
push
call
add
pop
xchg
addb
pushf
add
add
add
add
mov
pop
push
fucomip
mov
add
xchg
xchg
mov
add
rolb
add
add
cli
cmpsl
add
pop
push
faddl
lea
outsl
cltd
add
sub
pop
mov
push
dec
pop
cmp
jne
push
shl
pop
mov
movl
push
not
dec
not
inc
pop
jmp
push
push
push
push
push
push
push
lea
push
call
add
popf
rorb
add
add
movsl
rolb
mov
add
pop
pushf
jbe
push
movsl
roll
mov
mov
mov
add
in
clc
add
add
sti
fildll
rolb
mov
add
stc
fldl
add
add
add
lcall
inc
cld
push
push
push
push
push
push
call
pop
aad
movl
in
mov
add
scas
mov
xchg
lods
lea
push
mov
call
cmpw
jne
push
lea
push
push
lea
push
push
call
shrb
test
mov
rolb
jge
popa
xchg
add
testl
jnp
pop
add
mov
in
push
add
scas
xlat
add
mov
pop
clc
add
add
in
int3
popa
mov
add
sub
pop
mov
movl
push
push
lea
push
push
call
add
add
sti
nop
fmul
mov
mov
jne
movsl
lahf
xchg
mov
pusha
imul
add
fwait
add
test
in
lock
jmp
pushl
push
add
pop
pop
mov
push
not
lea
sub
pop
mov
push
push
push
push
lea
push
push
push
call
mov
mov
jge
add
out
add
add
mov
out
add
add
loopne
add
add
stos
add
add
push
xchg
fistps
in
aam
call
stos
mov
push
enter
add
fcoms
pop
mov
add
mov
add
add
push
mov
in
in
lcall
push
or
pop
push
inc
push
shr
push
xor
add
rol
sub
rol
inc
pop
add
pop
push
lea
push
push
push
push
call
add
push
lahf
out
push
fsubp
lret
add
popa
in
test
movb
in
mov
add
test
mov
mov
jae
pop
cli
test
rcrl
lcall
call
push
push
call
add
jno
mov
add
test
imul
fisttpl
fldl
push
add
add
pop
pop
xchg
mov
add
pop
sti
pop
push
shll
add
fistl
push
add
cmpsl
add
rcrl
add
out
add
lea
add
ja
arpl
mov
add
add
in
clc
lcall
js
int3
fldz
ret
fimuls
add
push
push
sub
inc
add
ror
push
push
pop
add
not
shl
sub
add
dec
add
pop
add
lea
sub
pop
push
push
push
push
call
mov
mov
add
testl
add
add
xchg
add
add
pushf
mov
mov
add
add
fiaddl
jnp
pusha
fistps
push
xchg
push
call
aam
pop
sar
flds
push
push
add
mov
cli
pop
test
roll
push
mov
add
pop
add
add
int
ficoml
in
lock
lcall
push
dec
inc
pop
call
push
push
push
push
push
lea
push
push
call
add
xchg
pop
add
add
jnp
outsl
lcall
push
add
add
add
lea
movsb
sti
add
add
add
lea
add
add
stos
sub
pop
cmpl
je
push
push
add
add
rol
not
push
or
inc
add
shl
lea
sub
ror
pop
inc
rol
shl
add
pop
push
inc
shr
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
lds
data16
cmpsb
push
add
cwtl
add
add
addr16
mov
fists
add
add
mov
addl
push
aad
insb
cld
jecxz
ret
add
push
jns
loopne
cmpl
sub
pop
call
push
sub
pop
cmpl
je
push
push
lea
push
or
not
add
add
sub
shr
add
add
pop
not
sub
rol
pop
push
push
push
push
push
call
loop
add
add
fidivs
add
lcall
add
jne
pop
add
add
cltd
outsl
sub
pop
push
call
push
lea
push
push
push
push
lea
push
push
push
call
add
add
imul
jo
icebp
mov
add
add
add
fiadds
add
add
in
loopne
lcall
cmp
rol
je
push
push
sub
rol
push
xor
add
dec
inc
xor
sub
add
pop
sub
lea
shl
pop
push
inc
pop
push
call
push
lea
shr
pop
cmpl
je
push
push
shr
add
sub
push
xor
add
inc
sub
lea
pop
add
sub
pop
push
sub
not
shl
pop
push
push
push
call
mov
mov
mov
xlat
rolb
xlat
push
fistpl
in
add
addr16
xlat
add
mov
fwait
sti
lods
add
mov
jmp
add
mov
jns
loope
fsubrs
push
xchg
add
arpl
mov
add
add
lahf
pop
outsl
add
add
add
jmp
add
add
in
clc
pop
call
cmpl
je
push
push
rol
shr
sub
push
push
pop
add
not
sub
xor
pop
add
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
clc
fsubrp
popf
cld
lcall
add
xlat
ficomps
push
test
add
cmpb
ret
mov
scas
add
enter
add
lcall
push
push
push
push
push
push
push
push
lea
push
push
call
out
add
mov
mov
stos
add
ret
pop
gs
jp
add
addb
rol
mov
imul
movsb
add
rolb
pop
gs
add
imul
add
movsb
jp
add
arpl
mov
jo
add
in
mov
call
push
shr
dec
sub
dec
pop
cmpl
je
push
push
push
push
pop
add
shl
ror
sub
inc
pop
sub
lea
add
sub
pop
push
dec
xor
pop
push
push
not
rol
shr
sub
pop
call
push
rol
pop
cmpl
je
push
push
xor
push
or
not
add
add
sub
sub
inc
sub
pop
not
not
pop
push
dec
not
sub
sub
pop
push
call
push
shr
pop
cmpl
je
push
push
lea
not
not
push
or
inc
add
add
dec
sub
rol
add
sub
lea
pop
add
pop
push
push
push
push
call
add
add
pop
pop
add
pop
outsl
add
add
mov
loop
xchg
repnz
add
add
jle
lret
pop
mov
jbe
add
lcall
push
push
push
push
push
push
call
lods
out
add
add
add
sahf
add
add
stos
add
lods
scas
jl
sahf
ficoml
pop
add
add
add
add
add
pop
call
push
rol
dec
pop
cmpl
je
push
push
lea
add
ror
push
or
inc
add
ror
not
sub
xor
xor
pop
sub
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
div
add
jle
add
add
add
ja
addl
testl
push
add
xchg
mov
pop
add
add
pop
push
push
rol
pop
call
push
push
push
push
push
call
data16
jp
aad
add
add
add
jecxz
add
stc
mov
add
jge
fistpl
sahf
add
mov
pop
add
add
jmp
cld
fnstenv
jb
mov
cld
test
push
aad
imul
flds
add
pop
push
add
add
js
movsl
sub
pop
cmpl
je
push
push
add
inc
push
push
pop
add
rol
sub
add
rol
dec
pop
inc
ror
pop
push
dec
xor
shl
sub
pop
push
push
push
lea
push
call
sbbb
popf
nop
movsl
add
jle
mov
js
ja
scas
test
addb
pop
mov
add
fiaddl
add
outsl
shl
nop
add
fiaddl
ljmp
pop
call
cmpl
je
push
push
xor
not
push
and
add
xor
add
not
shr
sub
inc
add
pop
add
pop
push
rol
pop
push
push
lea
push
push
call
push
add
ret
aam
add
mov
add
mov
add
push
popa
add
add
popa
clc
add
add
xlat
add
cld
xchg
mov
ja
js
addl
hlt
pop
call
cmpl
jne
push
dec
shr
pop
mov
push
push
call
in
add
xchg
add
movsl
test
jns
fsin
mov
enter
test
add
add
add
push
ljmp
add
nop
data16
jbe
in
mov
jo
add
add
loope
add
nop
add
add
sub
pop
movl
jmp
push
push
call
add
gs
sahf
arpl
lcall
je
mov
mov
std
add
pop
xchg
cli
add
add
cld
pop
andb
lcall
rcrb
xlat
pop
pop
push
push
push
push
push
push
push
push
call
faddl
add
add
je
add
add
add
add
add
add
data16
lods
sahf
add
mov
add
xchg
enter
add
out
fdivrl
xchg
add
js
lahf
aad
loope
add
add
add
lcall
pop
push
ror
dec
sub
add
pop
leave
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
out
add
add
pushf
test
pop
add
mov
subb
add
push
jae
mov
add
std
add
test
jmp
jge
mov
add
add
fiadds
loope
xchg
pop
jns
push
lods
add
stos
lods
popa
add
sub
pop
ret
push
add
pop
push
mov
push
not
pop
add
cmpl
jne
push
push
shr
sub
push
xor
add
ror
dec
shl
ror
sub
shl
rol
ror
pop
xor
dec
pop
push
push
push
push
push
push
lea
push
push
push
push
call
popf
add
add
cmc
mov
aam
mov
mov
iret
add
add
jle
add
pop
add
add
add
aad
lret
out
sub
pop
pushl
push
shl
inc
pop
call
push
shl
pop
push
call
push
xor
add
pop
jmp
push
sub
add
lea
xor
pop
cmpl
jne
mov
push
inc
dec
not
pop
call
push
add
sub
pop
ret
push
sub
rol
inc
pop
jmp
cmpl
jne
push
push
add
push
push
pop
add
sub
sub
add
shr
rol
add
pop
rol
not
inc
pop
push
push
push
push
call
scas
mov
mov
imul
cmc
jo
lcall
mov
add
add
roll
add
add
add
lcall
jne
call
push
lea
lea
pop
push
call
push
lea
push
call
jns
push
push
mov
add
pop
hlt
icebp
push
add
push
add
into
push
call
xchg
bound
add
addb
xchg
mov
out
add
cmpsl
lock
test
mov
add
pop
add
add
in
clc
lcall
lcall
xor
inc
sub
pop
cmpl
je
cmpl
jne
push
sub
dec
sub
pop
mov
mov
push
shr
inc
pop
push
push
lea
push
call
sahf
add
mov
push
mov
loope
mov
xchg
mov
mov
lods
leave
add
std
in
add
scas
mov
add
jo
je
add
lods
mov
flds
mov
iret
in
leave
mov
sub
pop
call
call
enter
add
enter
xchg
jo
movsb
xchg
add
add
pop
add
add
flds
add
hlt
pop
outsl
lds
xchg
icebp
add
addr16
add
add
jmp
add
add
ja
add
push
push
add
add
push
push
pop
add
add
add
add
sub
add
sub
pop
sub
ror
pop
push
push
call
mov
aad
cmp
std
mov
jb
mov
mov
call
arpl
add
lahf
add
add
add
addr16
shlb
arpl
sub
pop
pushl
push
push
push
push
lea
push
push
call
andl
out
fildll
out
add
add
shl
jle
in
add
mov
add
add
ja
js
jecxz
test
add
mov
add
sub
pop
call
call
push
push
add
push
or
not
add
rol
sub
sub
sub
pop
sub
inc
add
pop
push
xor
dec
pop
pushl
push
lea
push
push
push
push
lea
push
call
mov
add
jecxz
add
roll
push
mov
push
data16
stc
add
add
int
mov
cli
push
jp
sti
js
fldl
add
add
pop
add
sub
pop
call
push
add
ror
ror
shr
pop
call
push
push
lea
rol
ror
push
sub
add
dec
sub
shl
sub
pop
add
dec
add
add
pop
push
add
inc
pop
pushl
push
push
lea
push
lea
push
lea
push
push
call
lahf
mov
sarb
testl
add
add
add
add
add
add
scas
add
lods
add
lock
xchg
lcall
out
jle
loop
add
add
add
lea
lcall
test
add
add
filds
lcall
mov
add
call
push
push
rol
push
sub
add
shl
sub
shl
shr
sub
dec
pop
sub
inc
pop
push
add
add
not
pop
pushl
push
push
call
pusha
movsl
jmp
pushf
add
sahf
lahf
ja
add
pop
repnz
icebp
pop
outsl
add
add
add
cld
mov
pop
push
sub
pop
call
call
push
push
rol
push
or
inc
add
lea
inc
sub
dec
pop
lea
pop
push
ror
add
lea
pop
pushl
push
shr
pop
call
push
shr
inc
pop
call
push
push
lea
not
rol
ror
push
or
not
add
sub
shl
dec
ror
pop
sub
sub
pop
push
push
lea
push
push
push
push
call
jmp
mov
fadds
add
aad
nop
add
lahf
fldt
jecxz
push
jb
mov
jae
mov
add
mov
imul
or
int3
pop
call
call
push
push
add
add
push
or
not
add
xor
sub
rol
pop
add
add
pop
push
lea
sub
lea
pop
pushl
call
push
push
push
push
push
push
push
call
jecxz
into
cmc
cwtl
popa
fildl
in
xchg
xchg
rolb
pop
stos
add
add
add
add
add
add
add
xchg
roll
sub
pop
call
push
push
inc
shr
push
or
inc
add
sub
add
xor
sub
sub
not
sub
pop
rol
add
inc
sub
pop
push
shr
add
pop
pushl
call
push
inc
add
shl
pop
call
push
push
dec
dec
ror
push
and
add
add
sub
pop
dec
dec
pop
push
not
xor
pop
pushl
push
rol
dec
xor
shr
pop
call
push
lea
xor
inc
inc
pop
call
push
push
inc
push
push
pop
add
shl
sub
sub
pop
add
sub
pop
push
ror
pop
pushl
call
push
add
inc
add
pop
lea
push
ror
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
add
scas
xchg
add
add
add
enter
lret
add
test
add
pop
add
add
mov
in
in
lcall
shrb
jge
lods
push
dec
dec
push
sub
add
shl
sub
add
pop
ror
pop
push
add
add
pop
pushl
push
ror
dec
add
pop
call
push
sub
pop
call
push
push
not
lea
push
push
pop
add
shl
sub
xor
pop
shl
shl
pop
push
pop
pushl
call
push
push
push
push
lea
push
push
push
push
call
add
shl
mov
shll
add
ret
add
add
ljmp
add
add
lcall
shrb
dec
fs
push
shl
push
or
not
add
xor
add
sub
add
xor
inc
pop
not
add
pop
push
sub
lea
pop
pushl
push
add
pop
call
call
push
push
shr
rol
push
and
add
not
shl
sub
dec
rol
add
pop
not
pop
push
pop
pushl
call
push
push
shr
shr
push
sub
add
shr
add
sub
shl
sub
rol
sub
pop
pop
push
push
shr
xor
push
or
inc
add
sub
dec
sub
shl
pop
add
pop
push
inc
pop
call
push
add
sub
add
not
pop
pop
push
push
push
push
push
lea
push
push
push
call
fdivrp
cwtl
icebp
lret
mov
add
lcall
add
stc
add
add
mov
js
mov
popf
push
stos
jns
add
stos
stos
mov
add
xchg
mov
repnz
xchg
mov
xchg
rclb
mov
push
sub
pop
dec
jne
push
inc
lea
inc
pop
call
push
push
lea
push
push
push
lea
push
push
call
movsb
mov
add
add
shll
add
imul
add
lea
add
add
add
add
add
mov
add
xchg
add
jecxz
stos
add
sub
pop
mov
push
ror
sub
pop
int
push
push
lea
push
push
push
call
hlt
aad
mov
xchg
add
jno
add
add
add
roll
add
add
test
mov
add
push
jae
add
add
in
pop
lea
push
push
sub
lea
shr
push
sub
add
not
not
sub
pop
pop
push
push
push
push
lea
push
push
push
call
cmpsb
push
mov
add
push
add
add
xchg
div
incb
mov
add
add
add
fildl
xchg
add
fwait
incb
add
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
enter
add
jmp
mov
xchg
add
add
cwtl
add
add
xchg
lock
jne
add
std
push
pop
js
in
fcompl
fcomps
add
push
push
shr
pop
call
push
push
sub
push
and
add
shr
rol
add
sub
add
xor
dec
pop
lea
dec
pop
push
sub
lea
not
pop
pushl
call
push
push
lea
push
lea
push
push
push
push
push
call
xchg
add
add
add
add
xchg
add
scas
pushf
add
add
repnz
imul
jbe
mov
lcall
mov
test
pop
addb
push
add
lock
add
fadds
lcall
rorb
push
push
push
push
call
fsubrl
add
mov
movb
xchg
lock
xlat
sahf
arpl
icebp
ljmp
add
jae
jmp
mov
test
shr
movsb
ja
add
stos
lahf
repnz
mov
hlt
add
add
fadds
lcall
pushf
and
ljmp
lods
cmc
mov
sub
push
and
add
xor
inc
dec
sub
add
dec
add
sub
pop
dec
add
pop
push
shr
pop
pushl
call
push
shr
pop
lea
push
lea
push
call
popa
int
mov
add
add
enter
add
xchg
add
sarl
aad
push
bound
fimull
fwait
lods
flds
xchg
add
clc
lcall
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
out
pop
int3
mov
mov
mov
popf
add
add
jne
fisubs
dec
add
in
je
jb
pushf
ljmp
add
or
roll
call
loope
jnp
mov
jp
add
jmp
add
add
pop
stos
add
ficoml
fcmovnu
add
add
fiaddl
add
jno
add
stc
add
add
add
mov
loopne
xchg
loop
add
aad
push
jns
leave
xchg
imul
rolb
sub
pop
push
push
shl
sub
lea
pop
pushl
push
push
sub
lea
shr
sub
push
and
add
shr
add
sub
shr
add
pop
shl
pop
push
push
push
call
sti
fs
xchg
mov
add
mov
cmpsl
stos
add
icebp
cmpsl
add
test
mov
add
xchg
jae
pop
add
add
pop
fiadds
popa
ret
outsl
mov
add
lret
clc
mov
push
push
not
pop
call
push
push
inc
rol
rol
push
sub
add
sub
lea
dec
sub
add
pop
dec
rol
pop
push
xor
pop
pushl
push
sub
xor
pop
call
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
push
ficompl
jp
add
std
loope
add
add
add
lock
test
add
add
lods
mov
pusha
add
std
add
int3
movsl
jl
add
pop
mov
add
add
mov
in
fdivr
lcall
call
push
push
inc
not
add
push
sub
add
rol
sub
shr
xor
pop
lea
pop
push
sub
ror
shl
not
pop
pushl
push
push
push
push
push
lea
push
push
call
push
mov
jecxz
mov
notl
add
add
add
mov
lea
add
add
std
imul
add
rolb
add
lock
mov
add
xlat
add
test
roll
add
jle
pop
add
jae
pop
jecxz
add
lcall
insl
adc
add
rol
lret
call
push
sub
xor
lea
pop
pushl
mov
push
lea
add
dec
pop
jmp
push
push
lea
add
shr
shl
push
or
inc
add
inc
sub
dec
sub
shr
sub
pop
inc
dec
pop
push
push
push
push
lea
push
push
push
lea
push
call
jecxz
add
cmpsb
stos
xchg
popa
fimull
add
mov
xchg
scas
add
mov
jge
push
push
ja
mov
add
add
mov
xchg
cltd
add
fwait
shr
movsl
add
add
lcall
jne
push
shl
ror
pop
call
push
sub
sub
pop
push
push
push
push
lea
push
push
push
push
call
add
add
mov
add
add
loop
add
add
iret
stos
int
add
pop
add
iret
cmpsb
cmpsl
lods
add
add
pop
in
add
fnsave
mov
add
shrb
inc
rcl
push
ror
shl
ror
push
or
inc
add
shr
sub
add
lea
pop
dec
ror
shl
pop
push
push
push
call
lcall
add
popf
mov
fcomps
add
in
in
fldl
in
imul
mov
add
sub
pop
pushl
call
push
shr
shl
ror
pop
push
call
push
push
push
call
mov
call
leave
mov
iret
popa
test
movsb
add
out
imul
push
in
lret
add
mov
add
jne
rol
mov
jle
pop
add
add
lahf
add
dec
add
fwait
mov
pop
in
mov
leave
push
sub
pop
add
push
lea
rol
shl
pop
pop
pop
push
ror
shr
ror
not
pop
pop
xor
push
lea
dec
dec
ror
pop
inc
push
lea
push
push
push
push
push
call
into
jge
enter
sahf
add
add
addr16
push
negb
mov
add
idiv
roll
in
add
add
add
mov
mov
pop
cwtl
outsl
add
add
add
lock
push
scas
sub
pop
ret
push
push
push
push
push
push
push
lea
push
call
rolb
add
fwait
add
add
add
cmc
add
mov
push
add
add
bound
mov
add
add
jnp
add
data16
add
add
out
gs
in
push
je
iret
add
jbe
fiadds
add
add
add
xchg
sub
pop
leave
push
xor
sub
shr
shl
pop
ret
push
push
push
push
push
push
push
lea
push
call
add
xchg
fistpl
fidivrl
push
ja
jnp
jmp
mov
add
outsl
lahf
push
roll
add
push
fiaddl
add
testl
imul
mov
add
mov
add
mov
jo
mov
mov
popl
add
sub
pop
push
mov
push
push
lea
push
lea
push
push
call
jge
lea
sti
add
mov
add
pop
cwtl
ja
add
add
loope
add
add
nop
mov
add
pop
test
test
add
add
add
lock
enter
in
in
pop
cmpl
jne
push
dec
add
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
in
sahf
into
xchg
mov
add
add
push
add
push
mov
push
xchg
test
xchg
add
xchg
ficoml
mov
testb
in
fdivr
lcall
push
add
add
mov
jl
mov
lcall
addr16
and
mov
push
push
push
push
push
call
out
add
stos
add
lret
cltd
add
ror
cltd
add
add
add
add
add
add
cmpsb
cmpsb
lcall
add
bound
add
jno
add
loope
push
mov
add
bnd
cld
imul
outsl
pop
je
movl
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
push
jmp
add
add
lea
faddl
add
mov
add
add
cltd
mov
adcb
add
in
hlt
add
jae
xchg
loopne
add
add
bound
lcall
and
push
inc
pop
xor
xor
push
shl
pop
add
push
ror
pop
xor
push
push
push
call
add
divl
add
fsubrl
add
in
add
aam
add
add
mov
hlt
add
add
cld
add
add
add
add
add
dec
push
add
ror
dec
pop
sub
push
push
push
push
push
call
out
aam
stos
add
add
hlt
pushf
nop
add
addr16
cmpb
in
mov
mov
add
sub
pop
jmp
push
lea
push
push
push
push
push
push
push
push
call
ljmp
jge
cld
add
loopne
jl
jo
jl
mov
imul
jno
add
add
add
add
sub
pop
sub
push
shr
pop
pushl
push
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
push
loop
jge
leave
test
push
add
pop
cli
jb
add
enter
stos
add
test
mov
add
mov
gs
mov
add
jns
je
add
add
jno
add
lds
pop
int
add
sub
pop
sub
push
push
push
lea
push
push
lea
push
push
call
add
filds
add
pushf
add
add
add
add
lahf
gs
mov
jbe
mov
add
mov
jge
jns
mov
call
push
xchg
jae
in
in
cmp
jne
mov
push
shr
shl
pop
lea
sub
push
add
pop
mov
push
ror
pop
shr
push
not
pop
add
push
push
push
lea
push
push
lea
push
call
pop
add
movsl
add
loope
add
lock
add
fcompl
aad
add
mov
add
mov
roll
jns
xchg
fildl
add
test
lret
lods
mov
add
mov
add
lcall
jmp
push
push
lea
push
push
call
addr16
test
add
test
jbe
aad
add
add
add
add
test
jmp
fmuls
pop
filds
lcall
push
shr
add
pop
shr
push
lea
add
pop
and
push
dec
not
add
pop
sub
push
push
push
push
push
push
push
push
call
add
bound
push
mov
pop
jl
test
stos
add
add
add
add
cmpsb
push
outsl
xchg
add
aam
add
lcall
stc
sbb
test
push
lea
push
push
push
push
lea
push
push
push
push
push
call
in
add
add
jno
jl
sarb
leave
add
add
mov
mov
add
lcall
add
add
add
roll
sahf
push
pop
lock
in
fdivr
lcall
add
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
test
fdivl
add
add
add
jge
add
cwtl
hlt
insb
fadds
jne
add
add
iret
fwait
add
sub
pop
push
mov
push
push
call
add
rcl
xchg
call
pop
out
add
add
imul
mov
mov
lret
add
iret
in
add
add
jecxz
repnz
add
add
roll
add
jecxz
push
add
rolb
flds
add
pop
add
fiadds
mov
out
mov
lea
lcall
cld
push
rol
pop
push
push
push
shl
ror
sub
rol
pop
push
push
push
push
call
imul
lods
sahf
out
add
push
xchg
mov
fmull
add
jns
jp
aad
xchg
cmpsl
loope
rolb
add
cmpsl
leave
sub
pop
push
push
push
add
pop
mov
push
push
push
push
push
push
push
lea
push
call
jecxz
scas
jp
addb
ret
add
add
add
popl
call
mov
xchg
rolb
add
test
stos
add
xchg
sub
pop
lea
push
push
lea
push
push
push
push
push
push
call
mov
addr16
ja
add
loop
mov
add
insb
call
add
addl
int3
ljmp
nop
xchg
arpl
lods
jo
push
bound
push
add
add
pop
xchg
push
mov
leave
jns
fldl
xchg
repnz
add
into
int3
testb
rolb
lcall
ljmp
negb
adc
ljmp
pop
add
push
push
push
push
lea
push
push
push
push
push
call
add
xchg
hlt
loope
pop
jge
xchg
add
pop
mov
add
add
icebp
add
mov
test
js
mov
add
add
aad
add
xchg
add
in
insb
push
add
addl
mov
xchg
xchg
add
fdivr
lcall
fwait
addb
add
cld
mov
inc
lea
push
push
push
push
lea
push
push
push
call
add
add
add
ljmp
add
add
jbe
les
push
add
rolb
enter
xchg
mov
out
xchg
test
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
jns
add
add
add
test
add
icebp
add
add
cwtl
pop
into
push
mov
add
test
add
les
xchg
add
negl
jmp
aad
pop
mov
add
js
iret
add
xchg
icebp
add
xchg
add
fwait
cld
bound
in
fcompl
jnp
add
push
push
lea
push
push
push
push
push
call
add
sarb
add
movsl
push
add
add
add
xchg
insb
loopne
js
into
mov
les
pop
rcrb
fidivs
pop
add
cmpsl
pushf
add
add
mov
add
add
mov
in
xor
push
lea
push
push
push
lea
push
lea
push
push
call
lcall
mov
jnp
add
pop
pop
leave
std
imul
add
add
sti
roll
add
add
lock
mov
pop
movsb
add
imul
add
add
fwait
add
mov
mov
filds
fistpll
testl
cmpsb
xchg
mov
rcll
jle
sub
pop
mov
and
push
ror
dec
dec
lea
pop
rol
push
shl
shr
pop
rol
push
sub
dec
pop
xor
inc
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
roll
mov
jle
add
xchg
iret
loopne
scas
leave
add
add
or
gs
jl
fmulp
add
pop
mov
jecxz
add
add
fdivs
mov
add
popa
roll
into
add
cmpsb
add
fs
movl
fdivr
lcall
cmp
jne
push
lea
push
push
lea
push
push
call
mov
mov
andb
into
mov
add
pusha
xchg
add
mov
add
into
add
push
add
loope
fiaddl
sub
pop
add
push
rol
pop
cmp
je
push
push
call
add
add
jge
mov
enter
add
pop
icebp
movsb
add
add
repnz
fs
test
cmpsl
xchg
push
jnp
add
xlat
lds
cmc
flds
mov
push
into
mov
loopne
in
xchg
add
xchg
enter
push
add
popa
lods
rclb
lcall
ret
adc
lea
rol
shr
pop
cmpl
jne
push
push
call
add
add
mov
xchg
add
add
icebp
add
idiv
testl
push
add
lcall
jo
add
add
mov
add
roll
add
pop
add
mov
stc
mov
mov
mov
add
add
mov
xchg
jl
ret
add
lcall
rclb
rol
add
pop
pop
push
push
push
lea
push
call
call
std
rol
add
add
stos
add
xchg
add
out
enter
xchg
call
lret
add
jmp
add
add
mov
stos
add
jp
mov
subl
mov
outsl
sub
pop
pop
pop
push
pop
pop
push
push
push
push
push
push
push
push
push
push
call
in
mov
jbe
add
cld
add
add
adcb
filds
add
add
push
test
xchg
xchg
mov
add
add
cmpsl
clc
mov
add
add
add
lret
jl
ljmpw
insb
mov
lods
stos
call
pop
sub
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
test
pop
insb
faddl
add
add
add
into
add
add
mov
jo
loope
mov
jno
add
stos
add
loope
jmp
jge
mov
stc
add
std
testb
scas
nop
imul
add
pushf
int
in
in
lcall
push
add
pop
ret
push
push
push
lea
push
push
push
push
push
lea
push
call
fs
loopne
add
int
add
add
xchg
aad
add
gs
cld
jle
add
arpl
cltd
add
add
imul
jb
aad
sub
pop
mov
push
lea
push
call
xchg
add
push
jns
add
add
add
add
jmp
mov
xchg
flds
add
jno
into
pop
mov
in
clc
lcall
push
or
rcrb
add
push
lea
push
push
call
mov
mov
mov
push
mov
add
add
test
xchg
add
les
add
in
pop
push
mull
push
shl
sub
pop
pop
call
push
xor
shr
ror
sub
pop
push
push
push
call
mov
mov
add
mov
add
lods
push
enter
ret
xlat
add
push
add
ja
add
add
mov
add
lret
mov
add
add
add
push
add
add
add
rcrl
movsl
add
cltd
sub
pop
call
push
rol
rol
add
pop
xor
push
push
push
push
push
lea
push
push
call
cmc
jno
pushf
add
add
imul
fdivs
pop
rclb
movsb
mov
hlt
jp
icebp
lea
add
add
add
push
add
sahf
ja
js
add
mov
add
add
push
icebp
stos
add
add
xchg
mov
add
pop
push
lea
add
shl
sub
pop
pop
push
push
call
mov
lcall
hlt
add
fwait
push
mov
mov
int3
gs
mov
add
add
add
mov
test
pop
add
nop
add
clc
mov
stos
in
add
sahf
faddl
test
add
pop
mov
lcall
push
inc
pop
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
stos
loopne
lret
push
mov
add
int
movsl
test
add
add
out
xchg
jo
into
jae
add
add
push
xlat
add
lock
add
add
add
add
add
add
mov
add
add
mov
ljmp
xor
pop
ret
push
add
shl
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
out
clc
scas
push
jmp
stos
add
push
bound
int3
add
mov
add
into
mov
add
icebp
movsl
stos
frndint
add
mov
add
enter
add
add
add
xchg
leave
in
xchg
lock
add
sub
pop
mov
push
xor
dec
xor
shl
pop
add
push
push
push
push
push
push
push
push
call
mov
data16
out
fwait
out
jmp
add
xchg
fistpl
push
cli
xchg
stc
js
aad
pusha
test
mov
add
mov
add
mov
popl
std
jl
add
add
stc
sub
pop
push
push
shl
lea
inc
pop
push
push
lea
push
lea
push
push
call
mov
add
add
add
add
jmp
mov
mov
add
pop
cld
add
jl
add
mov
xchg
add
pop
sarb
jge
incb
sub
pop
push
push
pop
push
push
sub
add
pop
mov
push
push
ror
ror
rol
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
arpl
mov
mov
cmpsb
movsl
mov
mov
jmp
flds
fiadds
test
add
add
push
jno
flds
out
sub
pop
lea
sub
push
shl
pop
mov
shr
push
push
lea
push
push
push
push
lea
push
push
call
stc
enter
lahf
or
add
push
add
add
popf
ret
add
pop
add
jae
popa
add
mov
add
push
jbe
add
out
xchg
sub
pop
add
push
lea
shl
dec
pop
mov
add
push
rol
pop
pushl
push
add
rol
dec
pop
popl
push
not
pop
mov
push
ror
pop
add
xor
push
push
push
push
lea
push
push
push
push
call
add
add
test
pop
add
add
add
fsubr
push
imul
add
add
mov
add
mov
add
ljmp
add
aad
xchg
add
out
push
add
arpl
add
test
add
in
loopne
lcall
adc
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
loop
add
add
xchg
mov
jb
add
push
add
in
mov
jecxz
add
mov
fiaddl
push
cld
jo
enter
pop
add
test
add
clc
mov
lcall
adc
push
push
lea
push
call
add
add
pop
add
cli
add
rol
add
xchg
nop
loop
cmpsl
int
jo
addb
data16
leave
lahf
add
add
stos
add
lcall
rcll
rorb
pop
xor
push
push
call
gs
add
mov
add
into
ror
add
clc
jnp
movsb
push
mov
add
xchg
add
add
pop
popa
popa
int3
add
pop
add
add
add
jns
add
testl
in
clc
lcall
rolb
push
push
lea
push
lea
push
push
push
push
call
add
xchg
xchg
jb
sti
into
add
addl
add
add
mov
push
aam
push
test
add
add
add
movsb
add
lds
lods
add
xchg
jae
pop
je
out
icebp
pushf
test
sub
pop
nop
xor
push
dec
shl
pop
nop
push
pop
nop
inc
push
push
call
movsl
bound
mov
add
mov
pop
xchg
fidivrs
addl
sub
add
add
add
add
clc
mov
add
cmc
ret
mov
mov
fwait
add
movsl
add
in
add
add
add
mov
int
add
lcall
nop
push
lea
pop
cmpb
jne
push
push
push
lea
push
push
push
push
push
push
call
xchg
add
cltd
add
in
add
add
arpl
popl
int3
mov
aad
mov
cwtl
jb
clc
add
imul
lcall
inc
pop
ss
push
push
lea
push
call
add
add
add
add
add
jns
jecxz
add
cmpsl
add
arpl
push
loopne
mov
add
addb
push
fucom
hlt
add
add
add
add
add
lret
fwait
lea
add
add
std
and
in
test
clc
add
add
shr
xchg
mov
add
add
push
shr
shr
xor
pop
nop
push
dec
sub
pop
cmp
je
nop
push
push
push
call
fdivs
roll
mov
js
add
add
js
add
movb
pop
push
fbstp
add
add
cmpsl
ficomps
hlt
pop
nop
push
sub
dec
rol
ror
pop
inc
push
sub
pop
nop
push
lea
push
lea
push
push
push
push
lea
push
call
sahf
scas
pop
add
cmc
add
jb
add
add
adc
movsl
ja
cmc
add
add
add
pop
nop
cmp
jb
push
sub
rol
pop
xor
jmp
push
push
lea
push
push
call
add
add
mov
test
jle
out
add
jle
movsl
add
out
jno
mov
cmpsb
sti
clc
add
add
add
fidivrs
cltd
add
add
jle
js
ffree
jp
aad
add
add
add
addb
in
xchg
add
add
pop
flds
lcall
push
and
push
push
call
cld
sti
xlat
ljmp
add
add
call
add
ja
pop
add
rolb
scas
fildl
add
roll
int3
add
mov
jmp
mov
ficoms
add
jae
call
scas
in
add
mov
lods
xchg
add
in
hlt
lcall
rorl
mov
jb
push
lea
push
push
lea
push
push
push
call
ficompl
in
cld
mov
jp
add
pop
lods
add
faddl
jne
mov
add
add
cli
add
into
add
add
aad
lods
stos
scas
mov
in
lcall
inc
sbb
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
aad
xlat
add
arpl
add
add
cwtl
add
mov
push
icebp
jle
test
bnd
ljmp
add
pushf
add
add
lea
lds
std
sub
pop
add
push
push
push
push
call
add
mov
add
add
add
add
add
mov
add
test
add
mov
push
mov
add
nop
sub
pop
mov
push
push
push
push
call
pushf
mov
add
enter
add
out
rol
call
mov
push
sahf
fucomp
cmpsb
out
je
jmp
in
fstpl
add
mov
lock
lcall
leave
push
rol
lea
pop
xor
push
push
push
call
in
add
js
rcl
add
lahf
leave
add
add
add
add
test
jge
xlat
aam
and
subw
lds
mov
sub
pop
shl
push
pop
xor
push
lea
push
push
lea
push
lea
push
call
addb
add
scas
enter
add
pop
jle
add
mov
ror
aad
add
je
add
mov
jnp
add
int
addb
pop
add
mov
ljmp
add
in
pop
shl
xor
push
push
push
push
push
lea
push
push
push
call
add
pusha
add
jge
out
mov
lods
add
ficomps
cwtl
add
imul
mov
add
add
mov
jle
pop
add
xchg
popl
pop
cmpsb
pop
sub
pop
shl
push
xor
shl
add
lea
pop
xor
mov
push
shr
rol
sub
pop
add
push
push
push
push
push
push
push
call
xorl
add
movsb
fcmovnbe
out
iret
add
jno
shrb
push
movb
lahf
mov
addb
incb
in
je
add
add
add
xchg
rcll
add
jmp
adcl
lods
testl
add
add
sub
pop
pop
push
push
push
lea
push
lea
push
lea
push
call
mov
popl
imul
cmpsb
imul
lret
xlat
ficomps
add
push
ljmp
push
push
call
imul
cwtl
mov
push
push
lret
add
shl
add
add
mov
xlat
int3
add
loope
pop
add
add
in
rolb
sahf
testl
add
clc
pop
pop
push
pop
pop
leave
push
inc
inc
pop
ret
push
push
push
push
lea
push
push
push
lea
push
call
out
popa
ljmp
xchg
addl
leave
rcl
arpl
in
add
add
sarl
add
data16
add
add
test
xchg
cmpsl
vmovq
add
add
jae
add
add
in
mov
int
jle
jne
sub
pop
push
push
xor
rol
shr
pop
mov
push
shr
not
pop
push
push
push
sub
pop
push
push
dec
ror
pop
push
push
push
push
call
add
fildll
add
aam
add
les
sarb
push
add
jb
scas
add
pop
test
add
fisubl
addb
leave
jnp
mov
add
in
add
cli
xchg
mov
add
sub
pop
mov
mov
push
push
push
push
push
call
movsb
lock
lret
jecxz
pusha
add
add
addb
addb
pop
mov
add
mov
push
add
in
pop
mov
push
push
lea
push
push
push
push
call
out
add
add
mov
add
stos
mov
push
add
mov
mov
nop
jae
add
in
add
push
xchg
add
add
scas
add
mov
int3
jmp
add
mov
in
stos
gs
jne
pop
mov
data16
sahf
mov
lahf
add
push
jne
in
call
test
pop
add
mov
push
push
push
lea
push
push
lea
push
push
call
lock
add
jno
add
add
add
add
add
add
add
sarl
xchg
add
add
js
add
movw
add
lcall
xchg
add
lea
lods
add
lods
add
push
jbe
add
add
add
movl
add
add
jb
test
add
add
sahf
fisubl
add
andl
xlat
incb
ja
jmp
lret
in
pop
jmp
in
lock
lcall
notl
dec
out
sub
mov
mov
push
ror
shl
pop
mov
inc
push
push
push
push
push
call
mov
enter
mov
addr16
mull
push
lret
mov
add
mov
lods
cmc
mov
jecxz
pop
cltd
mov
out
fucomip
xlat
add
call
push
mov
in
lcall
rorb
test
add
add
add
push
lea
sub
pop
mov
push
add
dec
sub
pop
inc
cmp
je
push
ror
pop
test
jne
xor
push
pop
pop
pop
push
xor
ror
sub
pop
pop
pop
push
add
pop
leave
push
push
push
push
push
call
add
mov
push
mov
add
add
rolb
mov
out
add
outsl
flds
add
add
mov
in
add
in
in
lcall
or
push
push
push
call
add
xchg
popf
roll
pop
add
stc
add
pop
push
call
nop
roll
push
fwait
add
mov
pop
mov
imul
add
add
add
pop
add
cwtl
add
xchg
mov
mov
inc
push
add
xor
pop
cmp
jne
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
addb
mov
mov
add
lods
pop
fmulp
add
xchg
pop
add
xchg
add
scas
gs
js
push
cmpl
add
add
mov
push
mov
imul
sahf
mov
jmp
add
jns
add
mov
lea
faddl
add
jne
popa
mov
fdivr
lcall
jle
push
push
push
push
push
call
in
idiv
fnstenv
add
cli
jb
cwtl
add
xlat
mov
add
add
filds
cli
xchg
mov
jp
add
xchg
add
scas
jmp
clc
mov
mov
add
add
add
mov
icebp
add
jnp
mov
sub
pop
mov
push
push
call
push
add
mov
pop
cli
add
pushf
hlt
push
mov
cmc
xchg
lods
xchg
add
mov
add
add
pop
pop
pushf
mov
clc
lcall
in
test
add
add
rol
loop
pop
mov
add
push
sub
pop
cmp
jne
push
push
push
push
push
lea
push
push
call
push
add
popf
add
testl
add
push
pop
push
pop
ja
mov
mov
bound
lods
add
mov
xorb
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
stc
fiadds
add
add
jmp
popl
int
bound
xchg
data16
add
add
add
ret
fwait
out
into
add
je
xchg
nop
push
add
subl
xchg
mov
aad
icebp
icebp
pusha
add
pop
pop
pop
add
mov
mov
sub
pop
test
je
push
rol
add
sub
inc
pop
mov
add
push
push
call
stos
aad
addb
filds
push
add
add
push
jns
add
pop
sti
add
add
add
rcl
in
add
loop
add
clc
lcall
loopne
test
call
or
call
ret
mov
mov
add
fldl
arpl
pop
mov
lea
rol
scas
xchg
popl
lret
iret
add
filds
pop
call
lret
out
pop
add
lret
mov
add
add
jae
jo
mov
cltd
mov
mov
add
mov
add
add
cmpsl
sub
pop
jmp
push
sub
rol
pop
xor
pop
push
push
call
add
mov
lret
xchg
add
mov
leave
sti
add
mov
add
mov
mov
roll
loopne
sub
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
fistps
lods
jle
pop
push
int3
shrl
jecxz
insb
add
push
jnp
add
add
add
outsl
add
add
add
leave
add
add
add
imul
pop
leave
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
jmp
out
add
out
add
jp
addb
mov
add
mov
into
push
add
icebp
in
testb
mov
add
test
add
xchg
add
loop
jne
jl
sub
pop
ret
lea
push
add
inc
pop
pop
push
shl
shr
rol
sub
pop
pop
push
lea
push
push
push
push
push
push
call
add
xchg
add
pop
sti
add
mov
aam
insb
add
add
enter
out
jp
add
lcall
aad
add
sub
pop
pop
push
push
push
push
push
lea
push
push
call
leave
add
arpl
push
add
mov
mov
roll
roll
add
add
mov
add
add
mov
bound
gs
out
lcall
pop
add
mov
in
mov
mov
in
add
add
in
pop
push
add
ror
shl
pop
leave
push
lea
push
call
pop
add
lcall
mov
rolb
add
add
jecxz
repnz
xchg
cmpsb
bound
add
imul
add
popa
jge
movsl
jmp
repnz
add
fiadds
or
push
push
push
push
call
add
add
add
add
add
add
bound
add
cmpsb
add
test
add
push
add
scas
test
imul
add
push
lea
push
push
lea
push
lea
push
push
push
call
add
jo
int3
testb
loop
incb
pop
fldl
iret
clc
int3
lock
xchg
lods
jne
ror
call
xchg
add
push
push
je
rolb
popa
pop
push
scas
pusha
jnp
add
mov
add
pusha
add
in
loopne
add
push
add
in
lcall
push
push
push
call
icebp
cli
roll
add
add
mov
xchg
jle
jb
push
add
les
mov
add
out
add
add
mov
add
sarl
out
rolb
gs
out
mov
add
add
pop
pop
push
dec
shl
pop
pop
push
push
push
push
push
push
push
call
je
call
imul
jmp
lea
out
push
push
add
add
add
jb
add
mov
in
in
pop
push
dec
add
pop
leave
push
rol
pop
ret
cmp
mov
inc
lret
mov
into
mov
loope
mov
ret
lret
test
mov
xchg
lret
or
cltd
dec
enter
add
imul
push
sub
in
xchg
jecxz
in
add
gs
pop
xlat
mov
sub
fwait
xor
enter
fmul
xchg
cli
sbb
jae
adc
xor
push
test
mov
and
mov
cmp
mov
pop
mov
mov
xor
jle
mov
sbb
push
call
dec
dec
ret
dec
stos
xor
xchg
push
aaa
xchg
lods
cmp
pop
push
jno
lods
add
jg
push
push
icebp
lea
movsl
movsb
or
dec
push
mov
xchg
ret
mov
push
mov
mov
int
inc
outsl
rclb
push
push
and
int
push
pop
in
fwait
cmpsb
loop
rcrb
dec
mov
movsl
in
out
adc
fs
or
xor
scas
dec
xor
cwtl
inc
inc
test
pop
cs
shlb
shrb
pop
pushf
jne
and
jns
in
loop
inc
fldenv
ss
dec
cmp
mov
dec
in
jl
ret
mov
popf
fs
inc
adc
aaa
shlb
mov
bswap
mov
sbb
jp
movsl
rorl
scas
mov
adcb
push
js
rclb
mov
jb
in
out
aam
loope
rorl
or
cmp
and
insb
not
sub
aas
mov
cmpsb
call
add
les
aaa
fildll
or
enter
imul
ja
jae
sbb
lds
push
outsl
and
inc
add
inc
add
mov
call
ss
aad
sti
or
or
stos
iret
scas
inc
and
imul
xlat
cmpsb
clc
mov
int3
std
xchg
ja
int
faddl
js
sub
add
std
mov
pushf
add
sub
or
loope
xor
divl
mov
mov
insl
les
mov
xchg
xchg
mov
jno
cs
or
test
in
negl
stos
les
ds
sub
mov
sub
ja
inc
pop
push
rcr
lret
xchg
out
push
lahf
cmpsl
stos
adc
fldenv
gs
lahf
cmpsb
mov
mov
lcall
sbb
or
stos
andl
shr
inc
insl
ss
mov
addr16
mov
out
cmp
lock
and
dec
or
inc
inc
fdivs
in
mov
stc
pop
xor
loop
decl
shrl
mov
adc
loop
je
adcl
xchg
push
xchg
out
or
fisttpll
inc
add
inc
cmp
bound
jmp
insl
cmp
sub
loop
push
adc
pop
mov
neg
fildll
cmp
fisubrl
in
rcrl
mov
jecxz
lods
push
repz
and
mov
mov
add
push
flds
push
adc
or
dec
rcll
jmp
inc
or
pop
ljmp
enter
and
mov
pop
hlt
imul
push
mov
loop
push
pop
pop
dec
jg
xchg
lods
cli
filds
mov
pop
fnstenv
lahf
xchg
mov
pop
cli
mov
ljmp
jp
fwait
sbb
cmpsb
cs
lock
fcmovne
movsb
fadds
mov
inc
dec
gs
push
mov
cmp
popf
cmp
dec
hlt
push
mov
mov
fcmovne
in
add
jmp
adc
xchg
sbb
lods
repnz
inc
mov
sub
push
add
pop
insl
rol
test
dec
jb
mov
add
addb
mov
movsl
mov
cltd
cmp
push
lds
loop
or
jle
negb
loopne
lods
mov
jne
std
lahf
popf
mov
aaa
idivl
sbb
mov
repnz
leave
push
dec
sbb
fcoml
or
insl
push
fcomps
and
xchg
stos
popa
rol
in
push
aam
ljmp
outsl
and
dec
out
dec
push
iret
jle
leave
mov
stos
xlat
ss
fnstsw
adc
add
push
inc
jae
rorb
jmp
jle
xlat
add
cmp
pop
cmp
and
inc
cmp
negl
ss
cltd
fld
mov
stos
sub
rorl
testb
insb
jbe
or
add
dec
sub
hlt
iret
inc
xor
outsw
sbb
arpl
into
fisttpll
fs
xor
sar
movsl
cwtl
lds
add
jle
adc
push
gs
dec
iret
int3
add
scas
xor
mov
fstpl
cmpsl
jg,pt
lea
pop
enter
test
pop
bound
inc
xor
aas
cli
les
jns
aad
inc
xchg
lcall
pop
cmp
clc
in
sub
mov
add
jbe
daa
loop
lock
iret
in
jae
push
sub
xchg
cmp
xlat
shlb
pop
add
hlt
pushf
ljmp
mov
inc
mov
push
sub
or
test
push
in
adc
sub
mov
pop
push
push
mov
add
sbb
mov
sub
cmpsl
adc
mov
in
pop
xorb
pushf
xorb
cmp
out
in
lds
out
mov
faddl
add
movsl
frstor
call
adc
sti
in
pop
ds
das
jmp
mov
add
gs
mov
inc
andl
dec
sub
sub
mov
jge
mov
push
scas
sbb
fs
jne
jbe
popf
fiaddl
pop
sub
and
mov
add
movsl
dec
test
cmp
xchg
test
aaa
sub
dec
add
aad
aaa
sti
idivb
popf
push
sahf
pop
fidivl
idivb
out
fsubrp
sbb
adc
loope
arpl
push
inc
ficoml
cli
mov
push
cmp
adc
loope
pop
cld
rcrb
fisttpl
sub
enter
adc
sub
rcrl
and
adc
sbb
adc
orl
mov
lret
imul
inc
sahf
jo
and
xor
push
cmp
sbb
vsqrtss
or
gs
push
das
pusha
mov
cmp
xchg
mov
push
das
popa
pusha
std
ljmp
aas
addr16
pushf
lea
popf
mov
cmp
jge
roll
mov
loope
mov
in
ret
dec
cltd
enter
or
push
dec
pushf
lret
mov
andl
inc
mov
xor
mov
push
aad
mov
pop
sub
or
movsl
cmp
cmp
insl
lods
mov
imul
cs
xor
mov
xor
and
sub
sbb
cmp
shlb
push
ret
jge
mov
popf
mov
pop
xor
test
int3
bound
push
psrlw
adc
inc
sbb
leave
test
add
sbb
jo
loopne
xor
jecxz
sbb
xorl
dec
mull
repnz
mov
subl
subl
cwtl
icebp
lock
and
idiv
inc
rolb
xchg
jmp
cmovp
stos
fbstp
cmp
dec
add
adc
add
int
rcr
into
jbe,pt
cs
in
arpl
pop
sbb
imul
xchg
std
jg
dec
call
sbb
stos
mov
add
or
or
jmp
sbb
cmpsl
pop
aas
sbb
push
mov
sbb
ja
out
or
and
cmp
repnz
stc
ja
mov
mov
jo
inc
dec
jle
dec
mov
push
lahf
loopne
cmp
lds
repnz
adc
ret
xor
push
fnclex
jecxz
outsl
lcall
je
inc
repz
inc
dec
outsb
lods
scas
div
cvtps2pi
xor
daa
add
test
sahf
test
aas
into
jmp
cmpsl
mov
dec
pop
enter
lret
mov
je
mov
sbb
divb
jae
add
shll
cs
jl
movsb
mov
in
push
sbb
sbb
jmp
mov
mov
add
mov
je
cld
and
mov
adc
push
xlat
sub
xchg
adc
mov
ja
pop
mov
sahf
rclb
ret
repnz
dec
or
sub
lods
into
xor
jb
test
data16
imul
and
cmpl
call
push
fbstp
aaa
mov
outsb
jl
lods
sbb
aad
outsl
scas
pop
add
and
jl
pop
and
xor
lcall
test
xchg
dec
pop
cmc
out
ljmp
ds
test
add
jbe
out
lods
bound
jle
orl
cli
int3
mov
shll
push
mov
add
or
xchg
fimuls
mov
rcl
mov
imull
add
xor
push
mov
xchg
das
xorb
adc
roll
mov
mov
jmp
bound
pop
call
pop
scas
sub
dec
std
stc
cs
out
lahf
xchg
sbb
xchg
cmp
xor
jb
imull
mov
movsb
enter
hlt
stos
repnz
repnz
cmp
loop
xor
push
mov
fs
icebp
and
clc
jb
test
xchg
cs
add
leave
or
aad
xchg
adc
push
cmpsb
dec
imulb
mov
mov
loop
sub
or
out
int
mov
or
insl
movl
adc
mov
push
decl
xor
mov
xor
xor
cmp
dec
adc
mov
mov
dec
push
or
dec
cmp
sub
test
clc
clc
jb
xchg
jecxz
sbb
mov
outsl
and
push
cli
pushf
cmp
xchg
fadds
push
scas
cmp
shr
cmp
scas
add
xor
stos
xchg
xor
pop
sti
or
push
inc
mov
lahf
setp
fisttpll
loope
das
bswap
sti
loope
cmp
sub
and
xchg
add
xchg
add
or
jb
outsl
jmp
add
xchg
rcrl
xchg
mov
xor
sub
sub
pop
xchg
xor
into
int3
nop
mov
js
andl
cmp
bound
adc
call
stc
rolb
mov
xor
xor
xorl
and
jo
mov
dec
jns
mov
push
stc
rclb
lretw
call
outsl
push
cmp
cmc
sahf
xchg
shl
push
flds
push
clc
xlat
ficompl
adc
in
rcrl
int
clc
push
push
loope
mov
jl
or
repz
lret
daa
test
sbb
or
mov
test
and
and
daa
jecxz
push
enter
popa
inc
cmpsb
sbb
roll
fs
aas
mov
in
out
fwait
addr16
xchg
mov
arpl
ror
movsb
jge
push
adc
mov
sbb
lock
or
sbb
or
movsl
lock
fisttps
inc
adc
and
dec
pusha
out
or
mov
cmp
lret
mov
fmul
std
push
pusha
movsb
nop
dec
out
out
jmp
popl
push
sbb
mov
ret
cmpsl
xchg
mov
int3
add
sub
test
cltd
xchg
or
cld
icebp
in
pop
dec
dec
adc
xchg
test
cmpsb
int
mov
pop
test
adc
inc
enter
aaa
hlt
sub
or
pop
into
pushf
call
xchg
xchg
lret
dec
ret
pop
cmp
adc
inc
fildll
cwtl
call
inc
jne
imul
jl
cmp
add
cwtl
xchg
or
mov
ret
mov
cmp
flds
inc
dec
sti
xchg
stc
xorl
pop
ss
sub
das
sub
xor
mov
xor
lods
out
mov
pop
xchg
test
cmpsl
aad
mov
sub
fdivr
in
aas
iret
lret
scas
jnp
into
orb
mov
aas
hlt
push
dec
test
push
dec
ret
or
lcall
fcomps
mov
jbe
in
movb
out
int
iret
xor
jnp
mov
ficoml
xor
notb
stos
movsl
mov
cmp
es
orb
addr16
cmpsb
xchg
insb
std
jae
xor
mov
and
dec
jmp
loopne
mov
lret
pop
jecxz
dec
jo
sbb
and
repnz
pop
push
lcall
xor
pop
nop
push
testb
adc
jmp
jnp
or
test
out
pop
incl
popf
lcall
cld
les
movsb
xor
pop
push
mov
fsubp
mov
pop
jecxz
push
test
lds
dec
aad
dec
mov
ret
in
inc
filds
sbb
mov
adc
aad
sbb
push
arpl
mov
sub
or
push
add
or
mov
nop
stos
clc
addb
pop
dec
inc
lods
int3
insl
sub
cmp
jb
scas
and
ja
mov
mov
es
xchg
sbb
sbb
adc
mov
pop
mov
jne
xchg
mov
stc
add
vpsraw
pop
push
sub
push
pop
fbstp
add
pop
push
cwtl
cmp
push
add
stc
adc
sbb
dec
mov
sub
push
sbb
and
enter
inc
push
jmp
pop
adc
add
dec
add
cltd
mov
aad
testb
adc
pop
stos
sahf
cmp
cltd
add
mov
into
mov
push
in
push
mov
cmpsb
jmp
ret
outsb
out
arpl
scas
xor
mov
inc
movsb
es
cmp
ffreep
add
das
or
mov
insl
aas
gs
inc
cmpsl
test
aas
insl
ss
mov
gs
arpl
mov
ret
adc
js
lods
frstor
aas
dec
xor
cmp
mov
jge
pop
jno
icebp
iret
cmp
rorl
mov
out
jle
or
rorb
and
pushf
ror
ljmp
sbb
shlb
scas
outsl
jle
cmc
jg
mov
cli
js
add
inc
sbb
push
lret
outsl
lods
sahf
arpl
inc
jb
les
jge
cmp
fists
sbb
loope
dec
orb
push
cli
mov
mov
mov
sub
in
mov
mov
cmp
aam
mov
enter
or
mov
shlb
aaa
cmc
mov
outsb
fsubr
outsl
testl
fidivrl
andb
pushf
lcall
negb
mov
dec
mov
cmpsb
lods
jnp
or
mov
push
cmc
mov
jo
adc
xor
clc
inc
pop
push
add
popa
ss
push
mov
inc
shll
and
lock
out
adc
mov
es
pop
dec
stos
movsl
lret
fists
jmp
aaa
nop
pushf
fmull
mov
cltd
mov
xchg
sahf
lods
dec
dec
fucom
shll
lcall
inc
arpl
mov
jb
loopne
dec
popf
or
cmp
pop
out
sub
loopne
hlt
and
les
fnstsw
inc
insb
aad
mov
xchg
call
cmc
cld
jmp
xor
cli
mov
aad
dec
cli
rorl
jno
xchg
pop
imul
or
popf
xor
pop
iret
jo
jo
fisubrl
cld
mov
mov
ds
mov
inc
lcall
xor
mov
loope
mov
stos
js
mov
int3
std
xor
sub
shrb
mov
mov
adc
shrb
mov
pop
in
fs
inc
adc
xchg
xchg
outsl
aad
xor
pop
cmp
mov
sub
cmp
inc
push
jp
inc
and
pop
int
dec
dec
add
pop
movsl
and
push
push
jmp
dec
pop
and
test
pop
es
xor
loope
xor
jbe
and
adc
and
mov
jno
xchg
lret
and
les
pop
adc
stos
imul
push
push
dec
imul
or
shrl
sub
adc
xor
sub
mov
pop
dec
mov
mov
push
and
xchg
mov
bound
cmp
sbb
mov
xchg
stc
lret
test
mov
cmpsb
decl
lret
packssdw
out
js
lret
add
insb
dec
jmp
push
jae
lods
xchg
mull
imul
xor
es
mov
cli
outsb
cmpl
bound
add
cmc
data16
cmpsb
ficoms
jecxz
sub
and
sub
enter
mov
sbb
lahf
icebp
or
mov
lcall
es
sbb
sbb
call
imul
mov
pop
sti
jae
jecxz
fisttps
jne
mov
stos
xor
stos
lock
std
and
pop
xchg
sub
test
aaa
cmpsl
add
sbb
repnz
aas
cmpsb
xlat
add
ljmp
xchg
mov
sbb
stos
inc
or
and
dec
test
enter
push
lock
xlat
dec
cltd
es
std
fcoms
ljmp
testl
sti
jg
mov
mov
dec
mov
leave
movsl
nop
jg
jnp
sub
add
loope
popa
xor
stos
or
and
dec
shrl
push
aas
mov
stos
int3
jmp
sub
push
push
loope
in
inc
add
fstpl
xchg
aaa
test
push
cmp
outsb
jg
push
lret
sti
cmc
ror
sahf
stos
xor
sbb
mov
test
mov
fwait
ret
jp
ds
push
xchg
jnp
lcall
pop
mov
push
insb
outsl
imul
mov
xchg
inc
push
lea
iret
je
cmp
inc
pusha
insb
or
xor
ret
add
push
mov
adc
sbb
push
mov
xor
lods
scas
or
push
pop
xor
pushf
push
loope
out
adc
or
cmp
int3
cmpsb
mov
adc
dec
and
jmp
add
xor
push
test
in
out
jl
stos
addr16
push
loope
loope
jne
je
lret
mov
xor
fimuls
inc
fdivl
test
aas
call
cwtl
lods
ss
idivb
jne
and
pop
xchg
xchg
push
xlat
sarb
fidivs
mov
fsub
shrl
sbb
and
xchg
add
xor
ret
out
cmp
enter
mov
out
das
ds
push
or
sub
mov
aas
test
rorl
aaa
cmpsb
jnp
mov
jb
fidivrl
inc
sbb
and
pushl
dec
or
add
add
push
push
dec
push
xlat
adc
int3
ret
out
jns
xchg
les
push
out
in
jle
or
add
out
sti
and
dec
mul
mov
sbb
adc
dec
adc
push
outsb
fimuls
mov
sarl
and
nop
xchg
mov
xor
outsb
cli
jmp
mov
xor
and
xchg
cmp
inc
push
std
test
nop
jnp
xchg
adc
push
mov
fmul
pop
shll
jb
loop
adc
out
loop
push
adcb
xchg
mov
mov
out
cmp
movsb
jmp
dec
sbb
lret
xlat
xchg
and
lret
lret
stos
inc
inc
or
ja
into
insl
mov
mov
bound
jno
adc
sarb
rcrb
jmp
in
adcl
mov
test
das
xchg
fs
xchg
xor
fsubs
rorl
cmp
push
js
cmp
imul
in
or
sub
loop
cltd
movsl
cs
pushf
xor
mov
das
push
lock
or
push
pop
out
inc
jle
ja
daa
and
in
fstp
adc
popf
ret
fstpt
insl
fldcw
jge
repnz
flds
idiv
cs
inc
or
or
adc
mov
sbb
out
sbb
mov
mov
pop
mov
cmpb
adc
pop
std
sti
pop
mov
icebp
shlb
push
or
jns
out
int3
mov
ljmp
out
ret
xchg
pminsw
adc
je
xchg
inc
nop
lcall
movsb
mov
imul
sub
lcall
in
jne
jmp
in
ljmp
xchg
bnd
cmpsl
dec
frstor
dec
test
aam
aad
lock
lahf
add
lahf
icebp
add
stc
and
jge
push
sbb
fildll
mov
int3
jb
lret
and
aaa
aam
fisttps
xor
dec
xor
pushw
gs
add
out
add
fldt
dec
insb
add
pushf
mov
lods
mov
mov
enter
repnz
adc
xor
and
mov
jnp
bnd
lock
je
or
jecxz
sbb
jp
dec
and
arpl
xchg
jge
fs
cmp
cmpl
inc
rcrl
sbb
jnp
xchg
scas
sbb
dec
stos
jnp
cwtl
das
xorb
scas
repz
loopne
popf
mov
push
push
sbb
jne
push
je
js
fstpt
dec
or
aas
and
cmpsl
mov
mov
das
mov
repnz
jle
into
aad
aaa
xor
cmp
jbe
scas
scas
rorl
xor
add
add
outsl
in
pop
in
movsl
sti
jge
sbb
addr16
lret
or
movsb
sub
es
xchg
popf
ss
lds
ret
lret
lds
stc
cmp
in
add
sub
popa
cs
insl
es
add
mov
dec
movsb
jecxz
dec
js
cltd
cmpsl
shl
or
faddl
lea
fimull
cmc
lods
fs
int3
and
adc
pop
addb
ds
nop
je
or
adc
inc
repnz
cwtl
mov
les
push
adc
fld
jmp
adc
jmp
mov
mov
hlt
dec
mov
sub
adc
sti
into
inc
inc
pop
push
je
and
push
cmp
scas
pop
popf
push
cwtl
imul
ss
and
mov
push
lods
cmp
mov
mov
cmp
aas
rcrl
pushf
inc
sbb
nop
test
test
cmc
loop
lahf
stos
xchg
xor
pop
cld
lcall
inc
in
sub
ds
insb
ret
mov
or
data16
ljmp
mov
mov
scas
add
cmpsl
push
sbb
ret
mov
inc
out
mov
lds
inc
fidivl
dec
es
in
mov
ret
pop
enter
je
ja
insb
jb
xchg
aas
cmpsb
int3
sbb
xchg
add
data16
lea
je
lods
jno
aad
stos
imul
es
dec
and
pushf
repnz
pushf
sbb
mov
enter
pop
xor
stos
cmpsl
or
pop
sbb
fsubrl
inc
out
cltd
mov
arpl
xlat
lcall
shlb
pop
inc
mov
pop
addr16
cs
out
sbb
ficoml
sub
fnstenv
sbb
dec
adc
push
inc
cmp
xchg
aam
mov
mov
pusha
outsl
inc
fistps
bound
popf
js
cmc
pop
movsb
mov
sub
leave
pop
jp
loope
xor
testl
std
mov
xor
fisubs
lahf
add
add
xor
inc
stos
xchg
test
pop
mov
sbb
mov
shll
test
clc
in
icebp
rcrl
shll
xchg
sub
aaa
sub
xor
orb
int3
pop
call
fdivl
jb
test
jno
sbb
sbb
jbe
fs
outsb
in
cmp
das
cmp
xor
shr
out
rcrb
mov
mov
mov
or
inc
jae
out
sbb
aam
stos
adc
or
add
subl
cmp
jae
sbb
cmp
inc
jns
pop
fcmovb
push
sbb
pusha
sub
es
jmp
mov
xchg
hlt
xor
pop
sbb
testl
cld
in
xchg
mov
push
aas
call
or
lock
push
inc
xchg
aad
mov
in
ss
into
xchg
lahf
fsub
mov
lahf
push
loop
cld
sti
pop
sarl
and
into
mull
fisubrs
cs
add
xor
and
sbb
ljmp
xor
mov
bound
jl
std
mov
xchg
xchg
cmp
stos
sbb
inc
out
jns
pop
fldl
mov
jg
inc
fdiv
sub
inc
popa
mov
lret
mov
xchg
sub
into
clc
es
leave
mov
mov
cmp
in
jne
cmc
mov
sub
mov
mov
cmp
sti
popa
xor
insl
cmp
stos
add
and
lahf
jbe
lds
scas
xlat
mov
mov
mov
addl
push
xor
and
lea
cmp
mov
clc
aad
das
ljmp
lea
fwait
mov
movsb
pop
mov
loop
pop
cld
call
inc
lcall
pop
in
into
add
imul
dec
add
mov
mov
cli
xchg
mov
shl
mov
repz
movsl
imul
fisubs
les
and
dec
out
push
hlt
dec
cmp
fdivrl
aas
sarb
scas
mov
decl
leave
or
push
mov
shrb
loope
scas
xor
sbb
sub
bound
mov
mov
dec
je
nop
inc
push
mov
add
sahf
jae
xor
pop
jp
lea
int
cmp
sbb
test
fldl
adc
pop
pop
jb
movsb
push
sbb
mov
test
jbe
das
sbb
and
sti
xor
test
xor
xchg
js
cwtl
jbe
or
vaddsubpd
xchg
dec
movsl
popa
inc
adc
sarl
and
push
mov
sarl
xchg
push
inc
movsl
clc
and
inc
iret
add
sbb
in
mov
aam
dec
pop
mov
xchg
jmp
cmp
and
fimull
les
out
push
push
push
dec
ds
lret
subl
in
xchg
push
in
int
cli
mov
jmp
mov
mov
bound
sub
pop
mov
push
out
test
sbbb
push
xchg
sarb
mov
mov
mov
jnp
adc
mov
push
jmp
stos
aad
pop
ljmp
adc
add
dec
xlat
mov
ret
or
push
imul
stc
sbb
addl
int3
xor
in
sub
xor
ss
shrb
sbb
cmpsb
repnz
cld
sub
notl
push
fwait
add
fsubrl
rcrb
adc
mov
sub
cmp
sub
fists
xor
xchg
fdivrp
inc
cmp
sbb
shrb
mov
loop
les
sub
in
cmp
clc
add
cmp
sarl
leave
pop
jns
mov
inc
push
and
aad
and
adc
mov
dec
lods
lcall
xor
and
in
gs
fsubp
fwait
mov
xlat
inc
mov
outsl
add
lds
outsb
add
stos
stc
pop
dec
sarl
push
mov
inc
mov
shll
mov
bound
sbb
xchg
sub
mov
pop
int
hlt
push
test
inc
es
and
je
mov
clc
xor
add
pusha
out
xor
pop
shrb
cli
dec
cld
shll
push
mov
testl
fistps
mov
mov
mov
sbbb
or
and
popf
dec
loope
jae
pop
je
jmp
jbe
adc
or
jo
or
mov
cmp
stos
sbb
dec
sub
insb
push
push
in
hlt
scas
mov
inc
js
shrb
add
mov
leave
dec
mov
lds
inc
out
leave
sub
ss
aam
or
rorl
and
lcall
inc
xor
adc
movaps
pop
in
testl
cmp
sub
or
mov
cmpb
imul
pop
lret
adc
icebp
pusha
lret
mov
lret
pushf
data16
aad
dec
jg
mov
fsubl
nop
imul
fnstcw
push
cwtl
clc
sub
leave
cmpb
cmp
stos
dec
mov
xlat
andl
sub
mov
gs
sahf
and
imul
sbb
ss
add
inc
mov
subl
xchg
sti
fistps
adc
clc
add
cmp
in
cwtl
das
xor
lds
adc
call
ljmp
jmp
pusha
mov
push
dec
inc
mov
test
cltd
jge
push
mov
popf
mov
fdivl
divb
cmp
xchg
or
lea
arpl
inc
cmp
pop
and
sub
shll
cli
fld
mov
test
push
sub
cmp
aad
sbb
fnstcw
adc
mov
pop
inc
mov
in
sbb
arpl
js
pop
das
mov
ja
sub
xor
xchg
ljmp
mov
jno
movsl
pop
data16
cmp
dec
outsl
pop
lods
cs
cmp
fidivl
js
gs
cmc
xor
icebp
dec
shrb
pop
stc
dec
cmpsl
cmpsb
xchg
xor
jle,pn
pause
mov
imul
enter
je
adc
ja
xchg
or
mov
jle
sub
xchg
cmc
or
push
pop
ret
jo
push
add
addl
xchg
pop
cmpsl
ljmp
mov
pushf
or
jo
xor
mov
push
add
dec
and
mov
xchg
fisubs
push
iret
in
lea
add
mov
fadd
push
test
in
cmp
xchg
ret
or
out
test
inc
outsb
mov
mov
push
jno
into
btc
xor
repz
shrb
pop
scas
gs
adc
movsb
rcrb
inc
mov
jbe
add
stos
mov
outsl
push
notb
mov
inc
pop
xor
pop
adc
sbb
cmp
movsb
inc
cmc
into
mov
push
pop
pop
adc
pop
sbb
jge
rorl
enter
insb
bnd
adc
mov
xor
jbe
sbb
divl
ja
pop
std
rclb
mov
jne
dec
pop
adc
adc
fcompl
adcb
pop
xchg
cmp
mov
scas
stc
int3
mov
in
lahf
add
inc
cs
xlat
ret
les
out
pop
fstps
outsl
cmp
sti
jmp
cmp
dec
enter
out
mov
testb
gs
lcall
mov
mov
push
test
mov
sbb
cmp
jne
shl
pop
push
push
lret
test
and
mov
jne
inc
icebp
sbb
inc
test
ret
mov
and
add
jno
loope
jmp
mov
or
mov
push
mov
pusha
and
push
mov
lods
dec
fs
mov
xor
xchg
sbb
cmpl
cld
dec
loope
or
or
out
in
fidivl
dec
inc
jmp
inc
daa
adcl
add
hlt
jmp
xlat
inc
cli
mov
cmp
loope
imul
pop
inc
push
cmp
cmp
cmp
cmp
int
cs
or
push
out
jbe
add
add
add
idivb
lods
mov
dec
jmp
xchg
fsts
sbb
mov
xorb
mov
add
jecxz
add
mov
inc
clc
test
ret
scas
dec
loopne
adc
sbb
sub
jne
mov
mov
push
repz
ret
mov
push
in
mov
icebp
dec
sbb
mov
sub
stos
dec
aas
jo
loope
cmp
mov
xchg
sbb
lcall
pop
mov
push
mov
cmp
pop
andl
int
jge
in
xchg
lret
divl
dec
cmp
pop
aaa
adc
rcrb
mov
into
mov
push
lods
jmp
and
xor
dec
aaa
fwait
xchg
stc
jnp
jmp
mov
nop
lock
sbb
mov
ss
fprem1
mov
sarb
jne
out
and
sbb
lret
mov
lret
xchg
cltd
je
shll
dec
call
push
pop
jns
insb
sahf
mov
inc
arpl
call
aad
jo
push
ss
xchg
ljmp
imul
scas
arpl
jo
push
mov
dec
outsb
sub
lret
lods
mov
movsl
std
push
mov
sub
or
scas
out
data16
lret
push
sbb
mov
mov
inc
mov
push
xchg
dec
in
pushf
lret
or
push
js
in
mov
iret
mov
nop
lcall
cmp
in
or
shll
sub
dec
push
add
sub
jne
fwait
jns
xor
ret
sbb
insb
in
aam
pop
scas
call
fbstp
pop
inc
jbe
or
repnz
cs
lock
jnp
out
cmpsl
xor
scas
inc
cmpsl
or
mov
push
hlt
mov
mov
cmp
lcall
addr16
push
mov
inc
adc
or
mov
add
or
push
adc
jne
xor
aam
mov
js
push
mov
pop
xor
xor
addr16
cmpsb
push
jecxz
insl
in
dec
ljmp
addr16
mov
nop
mov
aas
lcall
mov
ffreep
inc
and
testb
scas
inc
adc
das
cmpsl
shrl
adcl
scas
pop
pop
add
fisubl
call
aad
and
das
outsl
cmpsb
jmp
push
xor
cmp
aaa
rcrl
into
aas
pop
mov
push
movsb
cmpsl
mov
xchg
inc
sub
mov
cmp
and
and
fcmove
lret
adc
int3
mov
xor
hlt
test
mov
out
push
int3
xor
cmpsb
xchg
arpl
ljmp
add
out
lret
sahf
dec
shr
arpl
data16
in
xor
gs
dec
data16
mov
aas
sbb
xchg
imulb
out
movsl
sbb
in
repnz
pop
cmp
hlt
sarl
sahf
aas
pop
inc
sbb
test
xlat
push
cwtl
icebp
lret
push
pop
xchg
mull
lahf
cs
loopne
fisubl
pop
test
xor
sbb
push
out
dec
scas
mov
jnp
push
jno
mov
jle
pusha
mov
shlb
lret
mov
mov
pop
setge
sbb
out
sbb
add
inc
gs
xor
je
sub
xchg
inc
scas
lds
mov
cwtl
xor
and
cmpsb
in
hlt
insb
xor
push
scas
mov
inc
fstpl
ror
xchg
sbb
repnz
push
push
inc
std
xchg
sbb
aas
jnp
mov
jnp
aad
xchg
dec
dec
fldt
jecxz
push
pop
cmpsl
jne
mov
lea
sub
cli
xchg
sub
dec
call
push
je
cmpb
adc
sub
add
and
fimull
frstor
ret
push
sahf
jle
inc
out
je
jno
jecxz
pop
arpl
pop
clc
fildl
sub
dec
mov
shl
negb
push
jo
std
sti
lock
xor
iret
and
stos
pop
lock
mov
les
xor
jae
cld
addl
scas
das
jno
xchg
int3
sbb
add
mov
fldz
fidivrs
insb
gs
cmp
add
je
int3
push
sbb
fucom
aam
pop
sbb
scas
inc
sahf
pop
mov
inc
jmp
fwait
mov
imul
call
push
dec
pop
xchg
imul
or
decb
lret
into
add
cs
mov
sbb
xlat
mov
cmp
and
mov
push
data16
mov
pop
xor
xor
dec
mov
pop
iret
in
testl
sti
cmp
xchg
xchg
add
fcompl
cmp
daa
aas
sub
cmc
jge,pn
in
idiv
das
or
mov
sbb
jg
ret
scas
xor
add
idivl
ds
ljmp
xchg
add
or
rdpmc
push
cltd
repnz
xor
pop
or
jbe
sbb
ret
les
imul
mov
jle
push
movsl
dec
mov
mov
aas
mov
jge
sub
or
dec
sub
jecxz
fnstsw
or
aam
aam
pop
cwtl
add
or
mov
outsb
pop
mov
scas
mov
pop
insl
mov
leave
aad
inc
jp
das
orl
mov
in
mov
lods
pushf
adc
sbb
push
outsl
xor
movl
popa
and
and
push
aad
stos
fwait
jecxz
stos
push
and
int
loop
jmp
xorl
rcrb
push
xor
cmp
movsl
pop
sub
lahf
roll
into
cmpb
push
mov
dec
add
mov
mov
mov
cmp
push
sbb
sub
mov
cmp
les
and
mov
and
add
enter
xor
pop
inc
icebp
aaa
int3
hlt
js
notb
gs
cltd
daa
imul
imul
lods
flds
jne
push
gs
xor
xlat
sti
daa
sbb
sbb
outsl
jnp
push
and
push
mov
test
mov
dec
icebp
loope
insl
jmp
sub
mov
sub
test
test
out
dec
dec
pop
lret
daa
in
push
das
aas
xchg
push
test
push
cmp
jb
mov
nop
stos
add
and
adc
push
arpl
push
stos
rcrb
es
jne
sti
fmull
clc
mov
out
ljmp
js
jno
in
incb
ret
lea
faddl
mov
cwtl
mov
mov
jae
xchg
dec
das
outsb
dec
out
push
mov
out
adc
stos
jnp
cmpsl
cmpsb
js
mov
pop
iret
xchg
jnp
mov
gs
lahf
mov
pop
insb
shlb
sub
cwtl
cmpl
cmpsb
or
push
fidivl
add
iret
out
add
insb
mov
mov
adc
dec
enter
aam
cmp
mov
jl
xchg
adc
loopne
push
cmp
fcompl
cmp
pop
ficompl
test
push
cmp
xor
cmp
xor
push
pop
and
xchg
loop
into
inc
pop
or
mov
cmp
mov
ss
push
jmp
adc
xchg
sbb
mov
jns
pop
mov
dec
popf
outsb
scas
xchg
mov
sbb
push
popl
mov
add
mov
idivb
scas
jno
mov
xchg
xchg
jo
rcl
mov
aam
xchg
popf
xor
imulb
inc
lds
xchg
nop
loope
inc
mov
out
and
and
loope
sub
ret
jmp
adc
cmpsl
insb
lcall
mov
cltd
and
in
jns
cmpsl
mov
jo
cli
fmull
dec
cmp
in
inc
fiaddl
pusha
xchg
cmp
fistl
movb
mov
mov
adc
ljmp
lds
mov
pop
loopne
cs
ja
fidivs
push
or
xchg
fbld
nop
jo
push
loopne
pop
js
js
insl
pop
movsb
pop
aam
xchg
sti
insb
arpl
or
push
sahf
cltd
and
push
inc
das
push
cli
add
in
filds
daa
push
cmp
push
adc
cld
add
imul
lods
mov
mov
adc
sahf
daa
pop
in
repz
subl
mov
sbb
inc
dec
mov
popa
lods
divb
push
mov
int
sub
cmp
add
frstor
rorl
bnd
subb
push
sub
xor
sub
cmp
cmpsl
mov
sti
mov
pop
rcll
ret
mov
xor
cmp
js
addr16
je
dec
es
sub
pop
bound
stc
jo
decb
call
rclb
dec
cmp
jb
push
lret
inc
nop
xacquire
or
out
int
lds
data16
xor
outsl
outsl
jne
push
loopne
dec
loop
notb
int
inc
mov
mov
into
pop
rcll
jle
jle
mov
fwait
inc
je
mov
icebp
xlat
mov
mov
jbe
push
imul
sub
sbb
push
dec
mov
mov
popa
cltd
ja
loope
adc
xchg
mov
xchg
add
add
adc
ja
fstps
repnz
das
cs
sbb
std
jecxz
das
inc
int
cwtl
pushl
movsb
out
fisttps
ja
mov
enter
in
out
pop
out
dec
outsl
mov
mov
enter
sahf
mov
fsubl
and
inc
add
pushf
mov
mov
mov
jne
xchg
mov
and
stos
push
adc
rcl
sbb
inc
nop
push
lret
inc
xlat
or
ret
inc
mov
pop
jns
xchg
sti
cmp
push
and
dec
sbb
mov
enter
jmp
dec
aam
adc
jno
jmp
clc
add
sbb
in
lcall
test
xor
pusha
xchg
push
rcr
mov
imulb
adc
ljmp
shl
pop
clc
popl
and
add
aaa
or
ja
xchg
and
pop
cs
cmp
fisubl
lcall
aaa
cmp
ss
sub
mov
push
sbb
arpl
sbb
push
icebp
or
mov
add
outsb
in
out
add
in
and
stc
fadds
mov
xchg
mov
lret
cmpsl
inc
icebp
adc
dec
and
stc
mov
idivb
fisubs
movsb
and
out
jecxz
add
adc
repz
repz
xor
mov
mov
outsl
jmp
test
sbb
add
shll
pushf
mov
xchg
lea
mov
ficoml
xor
add
xor
cwtl
inc
xchg
movsb
rcl
lods
jo
or
mov
shrl
mov
xor
pushf
pop
jecxz
push
xlat
mov
addb
rclb
out
push
pop
mov
cmp
ss
mov
jne
or
or
xlat
iret
pop
mov
mov
xchg
xchg
ja
hlt
push
outsl
dec
push
lcall
pushf
sub
cwtl
hlt
loopne
push
mov
mov
cmpsb
sahf
mov
push
repz
lods
cmp
jge
enter
jo
mov
jg
push
std
int3
push
jmp
mov
test
push
jmp
insl
pop
or
arpl
out
pop
xor
sub
out
cmpsb
sub
pop
ret
xchg
inc
jp
cmp
jbe
cli
sbb
lds
jge
data16
dec
jno
in
rorl
ja
sbb
adc
inc
out
enter
cmc
jmp
arpl
cs
pop
ret
and
cli
jns
cs
mov
adc
stc
int3
lods
js
adc
jbe
popl
movsb
xor
ja
sub
push
mov
test
adc
out
add
out
mov
shlb
rcl
or
lcall
and
sbb
mov
inc
inc
mov
lret
add
jnp
lods
ret
push
mov
mov
test
mov
jno
cmp
shrl
and
mov
lret
popa
fs
popa
das
test
push
mov
dec
sub
jecxz
daa
movsl
inc
mov
icebp
pop
and
adc
shrl
pop
gs
mov
cwtl
imul
inc
and
aaa
in
mov
sti
lahf
lods
iret
loop
out
aaa
in
test
ds
dec
fstps
pop
pop
ret
add
in
cmpsl
pop
cmp
shl
fbld
out
dec
mov
or
dec
push
hlt
cli
out
jg
mov
xchg
mov
hlt
ss
test
inc
jo
jl
int
mov
les
mov
push
dec
push
pop
cmc
inc
mov
sbb
lahf
mov
mov
dec
pusha
inc
test
sub
xchg
xor
cld
sub
jnp
mov
cmp
adc
hlt
loop
aad
leave
inc
test
dec
xchg
into
cmp
adc
test
push
inc
iret
xchg
mov
nop
ret
add
push
xor
xchg
dec
xchg
nop
mov
insb
out
mov
mov
lret
mov
sbb
push
aad
out
test
repnz
cmpsl
adc
test
adc
sti
popa
xchg
scas
in
xchg
outsb
add
out
scas
jp
mov
cmp
outsl
lcall
cmp
bnd
incb
pop
push
add
je
pop
pusha
push
lds
pop
adcb
popf
cwtl
push
cmp
fdivrs
sbb
roll
dec
ss
sub
or
xor
orl
call
cwtl
hlt
sahf
mull
mov
cmpsl
out
push
lods
mov
repnz
aas
mov
sbb
pushf
mov
pop
xor
fdiv
les
arpl
adcl
jp
sbb
add
xlat
insb
jns
pop
test
std
pop
sub
jmp
push
adc
mov
movsl
xchg
pop
loop
fmull
mov
loopne
icebp
mov
inc
cmp
xchg
or
scas
or
out
dec
mov
scas
and
push
mov
fs
mov
xchg
stos
add
sub
or
pusha
cld
add
xor
sahf
xchg
movsb
cmp
dec
mov
in
mov
pop
daa
xchg
cmp
mov
imul
addb
mov
xchg
inc
sbbl
push
shlb
push
sbb
push
and
and
cld
fsub
lds
mov
adc
or
out
loopne
mov
xchg
cs
dec
mov
xchg
icebp
mov
xchg
aam
mov
pop
testb
add
insl
shlb
push
rcrb
dec
sbb
das
fisttps
std
pop
sub
push
pop
mov
sti
pop
ss
lret
mov
or
mov
sti
leave
movsl
xchg
mov
ss
jae
repnz
test
xchg
mov
push
add
cmpsb
jp
and
mov
add
std
xchg
test
and
rorb
imul
xlat
loopne
imul
mov
cmpsb
int3
cmpb
imul
add
jb
xor
das
and
jle
leave
test
sub
cwtl
scas
lods
ja
xchg
lods
cmp
sbb
or
movsl
je
xchg
add
push
jbe
dec
pop
lock
xchg
in
sbb
mov
push
enter
push
insb
es
mov
mov
shrb
add
lcall
and
adc
mov
jno
mov
xchg
rcr
adc
sbb
fimuls
jno
dec
pop
pop
push
loop
testb
imul
add
mov
jo
dec
xchg
push
mov
dec
mov
lds
cmp
push
loopne
sub
repnz
test
push
rclb
cwtl
sbb
sar
lret
mov
mov
aaa
cltd
hlt
rclb
jle
cmp
scas
jno
or
adc
jnp
shll
push
lds
testb
push
cmp
xor
andl
pop
dec
sbb
xor
adc
dec
iret
imul
imul
aas
or
movsb
and
xchg
loope
xlat
add
jne
sbb
xlat
jcxz
jb
dec
outsl
sbb
fwait
cmpsb
lea
push
cmp
neg
xor
rcrl
iret
jle
xor
push
xchg
mov
fidivrl
push
push
lret
xor
subb
arpl
xor
hlt
ss
mov
mov
cltd
sahf
loope
and
pop
inc
mov
stos
enter
cmp
les
arpl
pop
lret
push
push
jle
std
sub
das
jecxz
les
clc
or
es
dec
orb
push
gs
xor
sti
add
aas
clc
sub
mov
push
jb
cmp
or
jbe
adc
data16
and
dec
sarl
add
sti
or
repz
fwait
imul
aad
std
sbb
lods
aam
dec
or
jl
loop
pop
sub
aaa
mov
mov
repnz
test
or
cli
sarb
pop
adc
mov
dec
inc
xor
inc
sub
xchg
nop
jno
out
sub
mov
movsb
push
fcmovne
repz
jge
sbb
or
add
je
jb
lods
ja
lds
fisttps
sbb
test
loopne
xor
xor
pcmpeqb
orl
out
adc
sub
lods
jge
adc
jle
sub
sti
cltd
insb
cmpsb
jnp
inc
xchg
jle
daa
xchg
jbe
test
push
xor
adc
sbbb
pop
inc
testb
or
insb
jecxz
xchg
addr16
into
outsl
subl
mov
scas
jecxz
add
shrl
jl
push
test
inc
cmpsb
push
inc
mov
call
add
lret
gs
je
pop
stos
in
pop
aam
and
pop
lods
imul
lock
jmp
dec
add
inc
int3
enter
loopne
mov
push
xor
push
add
add
int
push
flds
repz
sub
divb
adc
mov
and
and
dec
xor
jg
outsl
push
and
in
inc
push
out
xor
mov
outsl
adc
loope
dec
sub
in
pushf
push
pop
or
push
test
into
mov
lahf
out
cmp
mov
std
xchg
rcrb
pop
push
add
push
adc
fisttps
gs
cmp
movsl
lahf
push
mov
and
jbe
pop
mov
cmpb
rorl
and
or
mov
icebp
xor
leave
and
jecxz
clc
sbb
cmp
imul
push
inc
inc
mov
and
js
loop
insb
sub
dec
lcall
jge
hlt
mov
pop
imul
fdivl
test
iret
shr
out
adc
jge
xor
stos
pusha
push
dec
inc
push
call
xchg
sbb
mov
sbb
fidivrs
pop
rcl
push
test
add
pop
js
push
and
std
mov
push
iret
jae
ljmp
lcall
in
xchg
sarl
movsb
dec
xor
pop
xchg
cmp
push
leave
adc
pusha
clc
sti
and
xor
loop
jnp
sub
jae
loop
pusha
mov
add
cmpsb
fs
jnp
mov
mov
mov
mov
jge
stos
mov
mov
cmp
xchg
fmulp
popf
dec
dec
or
push
call
cld
out
mov
icebp
scas
mov
and
hlt
xchg
les
sbb
repnz
js
stc
and
mov
and
fstpl
pusha
and
cmp
add
mov
add
incl
mul
popa
mov
hlt
stos
inc
cmpsl
aas
xor
push
clc
or
cmc
or
push
sbb
and
fisubrs
mov
adc
test
dec
xor
cmp
and
loopne
dec
shr
fsubs
out
sbb
out
dec
lahf
adc
cmpsl
mov
cmp
int3
dec
inc
int3
lods
pop
pop
outsb
aaa
cmpsl
or
mov
test
or
enter
popa
aas
jge
pop
sub
movsl
ret
outsl
xchg
test
cli
mov
movsl
pop
sbb
mov
stc
filds
cmp
addr16
mov
inc
mov
std
xor
or
dec
jnp
add
push
insl
push
sbb
xchg
or
fwait
lea
jno
stos
push
and
dec
push
add
cmp
imul
mov
loopne
mov
andl
sbb
xchg
lock
adc
inc
pop
cs
clc
mov
cmp
mov
xchg
cmpsl
dec
lea
sbb
xor
or
mov
mov
int
pop
into
push
div
ffree
jo
lahf
push
test
mov
dec
fistps
lds
rcr
fs
jg
icebp
xchg
int
jmp
sub
mov
lret
inc
insl
push
xchg
sbb
nop
pop
gs
mov
inc
lcall
test
insl
add
aam
int3
cmp
xor
out
mov
cmp
jp
fstpl
pinsrw
and
dec
sub
pop
mov
out
sub
pop
pop
out
vunpcklps
jge
inc
sti
jns
cmp
fcmovnu
cmp
cmpsb
pop
jmp
and
jmp
sbb
test
cmp
repnz
adc
out
push
insl
push
lret
fstpt
inc
cmp
fldenv
pop
int3
sarl
jne
mov
and
or
or
pop
push
sti
mov
fildl
sub
sub
jnp
std
sbb
aam
fadds
icebp
sbb
inc
add
fimuls
jge
mov
test
hlt
pop
fstps
lock
xor
jnp
nop
sbb
adc
jp
adc
jmp
or
mov
mov
mov
push
call
sbb
lcall
push
or
add
ret
mov
fwait
dec
ficompl
les
loopne
out
inc
dec
pusha
lret
clc
jae
sbb
insb
xor
idivb
dec
add
test
shl
sub
frstor
cmc
adc
mov
loope
xchg
out
bound
fnstcw
cld
pushf
jg
or
jno
aaa
push
andl
xchg
test
pop
pop
lea
test
sti
out
prefetch
and
repz
test
faddl
xchg
outsl
inc
mov
mov
jg
mov
lods
jge
sbb
test
mov
lods
lret
cmp
sub
das
std
sbb
mov
cs
iret
sbb
mov
out
xor
pop
test
lret
pop
icebp
mov
fdivrl
sub
jo
stos
mov
sub
cmc
push
out
add
aam
enter
adc
mov
fwait
mov
subl
insb
stc
cmp
js
jecxz
push
rorb
sbb
push
mov
ljmp
jl
test
lcall
outsl
inc
mov
shr
rcll
arpl
shl
clc
lods
popa
jp
mov
adc
push
insl
int3
xor
dec
cli
and
add
inc
outsb
out
push
xor
dec
inc
push
inc
xchg
mov
ror
nop
stos
adcb
or
sti
push
pop
fimull
pop
mov
loopne
and
rorb
xchg
xchg
movzwl
dec
imul
popf
cwtl
lock
ret
adc
inc
call
dec
lcall
dec
jle
test
mov
xchg
mov
sbb
pusha
movsb
inc
mov
data16
adc
xor
mov
pusha
outsb
shl
mov
adc
push
and
mov
aad
popf
mov
nop
add
bound
mov
xchg
xchg
jno
mov
pop
xor
mov
lea
mov
imul
fcmovnb
pop
fucomp
rcll
xchg
int3
shll
into
cmpsb
aad
aam
sub
xchg
sbb
icebp
add
mov
cli
xor
lret
ficompl
les
mov
aas
in
fwait
xor
adc
mov
scas
jg
cli
std
aad
aam
iret
stc
insb
mov
lods
jno
mov
lods
daa
pop
cmc
and
lods
inc
xor
sarb
mull
pop
lods
leave
loope
mov
in
in
sbb
pop
mov
cmpb
jge
jmp
leave
dec
out
dec
inc
lock
fiadds
stos
imul
cmc
mov
jne
and
fwait
jno
icebp
andb
scas
inc
and
sub
mov
mov
push
rcl
cmpsb
mov
fs
cld
jnp
pop
cs
lahf
leave
adc
jl
and
push
jae
jno
divb
leave
xlat
dec
pop
mov
repz
cmpsl
push
insl
mov
sbbl
notb
out
jp
in
fistl
fnstcw
jae
xchg
popa
fstpl
push
es
pop
lret
iret
inc
sub
add
jle
xor
lret
sbb
push
popa
pop
inc
adc
mov
stc
shll
pop
or
sbb
mov
fidivl
mov
rcll
jp
orl
cli
lock
mov
or
inc
xor
dec
enter
fdivr
out
sub
inc
dec
cld
push
xor
adcl
mov
xlat
add
push
jle
push
mov
mov
or
jmp
fcmovne
mov
mov
pop
sysret
out
inc
push
lret
sbb
ja
test
xchg
xor
pop
sbb
iret
mov
push
aam
push
loop
stos
div
pusha
mov
stos
pushf
fildl
or
out
mov
ficoms
xor
xchg
pusha
xchg
aaa
jb
loope
sbb
and
mov
stc
rolb
aaa
arpl
mov
add
inc
mov
mov
cmp
ja
jne
inc
mov
mov
inc
test
pop
and
test
js
add
out
xchg
add
sbb
sarl
push
mov
push
aam
cmc
push
pop
out
xor
inc
xlat
add
jb
jle
imul
pop
stc
test
insl
xchg
lock
push
xchg
jecxz
xorl
lods
inc
nop
pop
xchg
lsl
stos
xchg
sbb
sub
pop
orb
std
xor
add
rcr
andb
sub
scas
mov
dec
cmpsb
push
and
jg
and
scas
ljmp
movsl
test
pop
mov
stc
daa
loop
jne
repz
dec
sbb
scas
mov
jnp
test
xor
lea
sub
shrb
inc
out
stos
mov
rorl
pop
pusha
adc
ss
cmp
add
enter
fdivrs
inc
inc
push
adc
xlat
jnp
add
faddp
rclb
and
cwtl
jmp
mov
in
out
push
push
bound
or
insb
stc
or
psubb
cwtl
xchg
jns
cs
and
add
cmp
push
inc
test
int3
mov
and
and
sub
xchg
hlt
dec
dec
mov
mov
maxps
sub
xor
and
and
mov
mov
stc
mov
push
dec
mov
xchg
inc
mov
or
lds
add
cli
loop
dec
and
andl
scas
push
lods
mov
lds
cmp
and
mov
jno
mov
dec
test
mov
out
dec
or
sub
lods
test
dec
jnp
pop
hlt
aam
sbb
sbb
xchg
cmp
xchg
insb
sbb
gs
and
mov
imul
push
or
mov
inc
or
call
pop
out
mov
cmp
inc
pop
xor
mov
or
shlb
cltd
pop
mov
popf
pushf
jne
test
addr16
jno
xchg
mov
dec
repnz
mov
sub
cmpsl
fisubs
fildl
pop
push
pop
dec
push
lret
lret
push
mov
mov
nop
fdivrl
sub
sahf
or
cmpsl
fcos
pop
sub
aad
js
xchg
xorb
jae
ret
xchg
ror
cmp
jbe
lds
inc
outsb
or
add
and
in
or
mov
sub
xchg
in
lods
jecxz
fs
lock
out
mov
repnz
xchg
mov
cld
or
loop
push
je
push
push
test
and
lods
push
jno
jae
push
movsl
sbb
repnz
stc
pop
mov
xorb
pop
mov
lahf
shl
xor
das
lds
jmp
call
insb
dec
dec
add
lods
jle
or
xor
mov
push
ljmp
call
cmpsb
jne
dec
mov
and
idivb
lcall
imul
out
movsl
pop
xchg
movsb
inc
in
in
leave
adc
popf
hlt
fs
lret
xor
or
dec
clc
jbe
das
inc
sub
enter
push
loope
pusha
xor
test
cs
jnp
les
xchg
adc
inc
xor
pop
popa
add
inc
inc
test
pop
sbb
aam
push
fs
in
nop
out
out
or
aam
jmp
adc
insb
enter
pop
or
push
rcll
inc
mov
pop
das
out
cmpsb
fiadds
jle
daa
cwtl
in
enter
ds
cmp
sbb
scas
inc
cltd
xchg
aaa
jno
jmp
lcall
insl
mov
sbb
adc
mov
push
test
jb
jne
xor
xchg
mov
data16
push
sbb
mov
stos
mov
xor
jns
xchg
push
rcll
bound
xor
jne
aas
arpl
adc
mov
pop
lods
clc
xchg
testl
sub
iret
inc
pop
add
mov
les
dec
or
icebp
or
xor
push
xchg
sub
clc
rcrl
test
nop
into
xor
xorl
pop
cmp
xor
jle
xor
push
addl
xchg
xchg
movsl
pop
or
out
ljmp
lret
or
das
ja
add
and
push
into
shl
and
repz
cmp
cmp
mov
mov
call
enter
add
adc
pop
call
out
sbb
mov
clc
jbe
pop
in
mov
mull
hlt
cmpl
nop
xchg
das
outsl
ljmp
xchg
pop
aaa
jge
xor
cwtl
jbe
sub
movsl
xchg
xchg
inc
dec
cmpsl
xor
pusha
cmp
mov
fcmovne
loopne
fldt
clc
adcl
into
mov
stos
dec
sbb
outsl
sub
sbb
add
xchg
xor
jns
in
lock
and
inc
adc
mov
sbb
jae
movb
imul
in
ds
dec
jle
xlat
aas
mov
mov
xchg
inc
dec
pop
scas
mov
and
insb
mov
ds
insl
mov
imul
mov
xchg
cmpsb
out
das
mov
int3
jno
fisttpll
push
sbb
stos
popf
push
jp
cli
and
arpl
or
push
mov
and
mov
scas
lea
push
xchg
enter
mov
or
push
shl
cld
sbb
or
xlat
repz
fwait
xchg
test
xorl
push
adc
js
mov
xchg
hlt
hlt
jge
inc
mov
aas
mov
add
mov
fistpll
lods
fmuls
inc
stc
fidivrs
inc
xchg
pop
xchg
nop
cld
imul
cmp
fidivs
jns
repnz
xchg
insb
sub
and
shrl
data16
mov
call
xlat
mov
add
aaa
push
pop
dec
insb
jp
jo
pop
and
dec
mov
or
cmpsl
cmp
mov
ljmp
cmp
int
push
roll
push
jmp
push
push
aad
nop
pusha
cltd
fbstp
cmpsl
leave
add
dec
aam
adc
xchg
cli
mov
or
mov
mov
imull
ljmp
cmpb
mov
mov
pop
mov
push
fdivl
cmp
repz
aam
aad
cli
push
incl
xchg
aam
xchg
lcall
repz
in
jns
int
jbe
inc
hlt
push
cli
imul
clc
jle
xlat
lds
mov
scas
ret
dec
dec
jbe
adc
popa
sbb
push
mov
mov
mov
cmp
leave
pop
test
cld
movsl
mov
push
and
mov
push
push
mov
push
inc
clc
mov
stos
sub
and
ljmp
imul
ds
movsb
sub
jne
clc
shlb
sti
mov
test
out
inc
rcrl
cmp
jecxz
pushf
in
push
stos
xor
les
popa
bnd
lcall
popa
pop
sahf
jnp
ret
mov
add
shll
push
mov
cmc
sbb
inc
addr16
pop
daa
out
and
add
arpl
fistpll
bound
cli
mov
rcrl
movsl
push
push
lds
cwtl
lds
sub
push
aaa
pop
mov
fldcw
test
daa
cmpl
fstpt
push
inc
add
lret
or
push
pop
cmp
xor
loopne
inc
sbb
aaa
pusha
aam
fisubrl
out
xchg
fs
out
daa
out
gs
das
cmp
test
adc
iret
inc
iret
xchg
cmp
lock
mov
mov
xchg
jae
push
inc
adc
data16
xchg
ljmp
insb
icebp
shrl
andl
cmpb
xchg
dec
scas
les
lock
outsb
or
sub
addr16
loop
lahf
mov
lods
test
xor
cmp
pop
jge
fsts
lret
ret
cmp
inc
jmp
cmpl
mov
aad
sbb
mov
fdiv
mov
sub
int
ds
stos
int3
decb
out
xlat
and
outsb
jg
shlb
adc
sub
xchg
sbb
xchg
test
cmp
sub
cli
mov
xchg
lahf
mov
push
dec
and
adc
dec
cmp
jbe
fsubl
push
xor
and
xchg
ss
test
out
jge
jo
adc
test
mov
xchg
jne
mov
loopne
out
xor
sbb
adc
and
jg
xchg
push
sbbl
pop
jno
add
xchg
push
mov
add
addr16
push
or
fistps
stc
sbb
pushf
adc
insl
mov
lcall
and
jl
push
int
xor
cwtl
mov
sub
in
cmp
clc
popa
les
aam
lahf
fs
push
xchg
xor
xor
xor
nop
push
mov
pop
nop
les
or
push
mov
sub
sub
std
jp
push
cmp
in
cmp
or
mov
loope
sar
mov
cmp
sbb
inc
jmp
and
cld
push
dec
enter
shr
cltd
inc
cmp
xchg
xchg
adc
iret
xchg
pop
ficoms
and
add
jnp
fwait
mov
fisttps
rol
sarl
mov
sub
push
jnp
inc
inc
push
pop
push
popf
dec
dec
ret
mov
xorl
jmp
aas
xor
dec
icebp
push
adc
cmp
lds
dec
mov
stos
daa
ret
mov
sub
movsb
loope
and
jmp
or
loop
cmp
cmpsb
test
std
xor
aam
jo
fsubs
mov
arpl
push
xor
int
pop
or
pusha
call
pusha
xor
cmpl
hlt
addr16
jno
adc
or
out
aam
adc
out
jae
leave
jecxz
popa
orl
xor
add
lock
pusha
jmp
sub
aad
imul
lods
out
fstl
add
fldcw
lds
ret
mov
sbb
inc
add
xor
inc
jmp
mov
or
push
dec
jp
xor
dec
jmp
std
inc
inc
cmc
cld
pushf
mov
adc
push
mov
jmp
xorb
mov
mov
test
and
out
mov
sbb
ret
nop
jno
inc
aad
out
mov
push
ljmp
fisttpll
popa
outsb
ljmp
adc
mov
arpl
adc
push
out
cmp
cmp
aam
ljmp
jae
ja
sti
aad
jnp
adc
into
cltd
pop
pushf
inc
sbb
inc
mov
cmpl
xchg
push
mov
mov
mov
sarb
pop
pusha
lods
rolb
cmp
pop
out
sbb
cmp
fs
xchg
ja
in
dec
dec
stos
int3
jmp
pop
mov
enter
ret
cld
inc
xor
outsb
add
ds
push
adc
int3
fstl
mov
fs
fcom
mov
aas
int
addb
test
inc
outsl
es
lea
clc
push
enter
cltd
fnstcw
fstps
call
or
cs
mov
push
xorb
call
in
fmul
inc
cmp
jl
scas
jne
outsl
stc
and
jmp
pop
and
add
fnsave
mov
adc
mov
sbb
lret
daa
out
out
sbb
fidivs
pop
xlat
or
nop
jae
loope
or
cmp
mov
fwait
loopne
pop
test
jge
aaa
inc
fcompl
mov
mov
push
pop
sub
pop
mov
push
pop
mov
in
mov
and
xor
mov
sub
adc
xor
sahf
lock
lock
fisubl
addr16
out
jge
cld
dec
add
jp
add
mov
test
push
vpmacsww
fwait
xor
inc
pushf
sbb
push
rcrl
mov
mov
mov
int
sbb
jmp
inc
lahf
jge
in
mov
test
inc
pop
or
repz
addr16
aaa
cmp
sub
or
repnz
jo
stos
pop
xlat
in
adc
icebp
or
out
jb
jecxz
mov
mov
pop
lret
lret
inc
ffreep
mov
and
pop
mov
mov
pop
or
rcl
pop
test
test
lahf
int
cmp
cmp
mov
outsl
lea
and
jno
test
ficoms
and
das
inc
fs
pop
loope
repz
adc
dec
mov
lods
scas
add
sbb
dec
mov
rolb
testb
adc
cmp
cmp
cmp
movsl
and
repz
int
adc
repnz
sub
xchg
mov
dec
pop
dec
push
pop
adc
lahf
nop
fiadds
cmp
xlat
xor
out
mov
movsl
sbb
and
inc
hlt
jge
pusha
pushf
xchg
mov
sub
mov
xchg
test
cmp
pop
mov
iret
sbb
cmpb
push
cli
in
mov
push
fbstp
arpl
cmp
dec
gs
andb
stos
mov
in
iret
pushf
push
adc
lret
icebp
dec
icebp
std
call
mov
cltd
inc
sbb
sub
mov
stc
lock
call
fisttpll
scas
push
jae
mov
adc
movsl
movsb
fstpt
dec
mov
adc
jns
std
aas
inc
mov
mov
scas
jmp
data16
popl
and
mov
cmpsl
shl
out
pop
insl
inc
fs
push
cmpsl
aad
mov
and
push
std
fstpt
arpl
mov
stos
and
int3
rolb
cli
shrb
in
mov
cs
xchg
dec
lcall
pop
cwtl
dec
cmp
add
sbb
dec
leave
adc
movsl
shlb
lods
lods
outsb
fnstenv
xchg
repz
sbb
cmpsb
in
inc
fsubs
xor
ja
fiaddl
cltd
xor
loope
fadds
inc
aam
mov
roll
iret
test
ss
sar
push
stc
or
rcll
and
bound
jecxz
xchg
sub
inc
push
loope
dec
inc
std
cmpsb
mov
inc
add
test
ficomps
inc
std
aam
ss
mov
jg
ret
cmpsb
push
out
pop
int3
or
fisttps
fiaddl
bound
into
int3
jle
movsl
or
xchg
shl
out
xor
mov
xor
fnsave
scas
push
iret
addr16
popa
pop
xchg
lods
xlat
cmp
jns
inc
into
xorl
pusha
cmp
in
cmpl
test
or
adc
pop
cmc
cwtl
lahf
es
or
out
push
jge
push
push
lcall
aad
mov
fisttpl
popf
iret
rcll
sub
cmp
pusha
mov
shr
xlat
sub
cmp
add
or
int3
adc
sbb
aam
sub
inc
add
int3
data16
adc
xchg
in
cmpsb
mov
mov
rcr
pushf
lds
mov
inc
clc
push
adc
sbb
sub
popa
scas
push
popf
in
cmp
mov
cmp
shll
jg
stos
jae
insl
inc
insl
mov
insb
push
mov
outsl
dec
std
inc
mov
adc
xchg
je
jns
ljmp
sub
mov
add
jo
mov
sub
mov
shld
imul
jmp
mov
aas
sbb
cld
xchg
outsl
lock
vcvtsd2ss
add
lds
add
or
outsl
out
rcrl
ret
cmp
sbb
clc
cmp
inc
mov
jmp
outsb
js
pop
mov
jle
adc
aas
shrb
add
outsl
mov
sbb
movsl
mov
mov
sbb
leave
pushf
cld
rol
push
cmp
es
cmp
insb
into
pop
or
or
mov
mov
loopne
loope
xor
push
dec
sbbl
mov
addl
pop
int3
fs
xchg
dec
mov
in
sub
mov
jp
xchg
jo
jbe
lds
lahf
jns
push
lods
mov
push
push
jne
jae
call
pushf
movsl
mov
js
push
sub
xor
fucom
in
dec
inc
pushf
jo
pop
es
push
test
xchg
int
ja
ds
pop
js
xlat
push
icebp
mov
das
cmp
add
stc
cmc
and
jo
daa
jno
cltd
inc
lds
rcll
enter
ljmp
in
adc
enter
pop
jno
mov
or
mov
popa
push
insl
jge
clc
fiaddl
test
and
hlt
cmp
and
insb
xor
notl
out
adc
adc
insb
in
mov
xchg
dec
out
ficoml
cmpsl
lret
jne
test
sbb
sbb
mov
xor
jmp
test
sub
out
or
insl
xchg
mov
mov
dec
inc
pop
push
sub
ds
mov
pop
push
and
repz
ret
mov
jp
aad
gs
sub
stos
rorb
adc
push
sub
dec
push
mov
pop
pop
stos
fcomp
mov
jle
xor
pop
fisttpll
cmpl
stos
pop
scas
in
in
xor
or
sbb
dec
repnz
and
movsb
adc
cmp
int
push
add
cwtl
xor
push
sub
fwait
in
repz
cmc
and
inc
jnp
popf
xchg
dec
mov
cmp
insl
inc
inc
or
pop
mov
hlt
loop
leave
sub
arpl
cmc
jg
add
add
mov
adc
mov
and
inc
ja
ds
inc
aaa
stos
test
adc
mov
iret
bound
xor
clc
mov
je
jnp
mov
xchg
cmpsb
outsl
mov
pop
cld
cs
addl
and
outsl
dec
and
cmp
test
test
fists
jp
xlat
mov
fadds
test
cmp
add
jg
pop
fsts
adcl
sub
fcomp
sub
outsb
aas
inc
mov
jecxz
ljmp
xchg
popa
xchg
jbe
imul
push
in
repnz
push
inc
ljmp
inc
xchg
adc
fmuls
mov
sub
fninit
push
push
push
sub
pop
add
adc
orl
pop
lds
lods
xchg
test
add
push
aaa
pop
out
jmp
push
and
clc
out
sahf
pop
inc
call
pop
mov
mov
cmp
lods
sub
lret
jecxz
popa
lea
dec
call
push
andb
movsl
mov
jp
xor
lods
jne
lea
xor
cwtl
mov
aas
sbb
cmc
cmp
xchg
sbb
sub
inc
add
aad
jne
sub
addb
test
mov
or
mov
push
retw
xchg
pop
shlb
aaa
inc
xchg
addb
sub
cmp
sub
mov
shll
mov
test
shll
std
jge
das
jg
mov
dec
sarb
mul
xchg
imul
cmp
clc
push
mov
dec
cmc
and
mov
sub
insb
sub
daa
insl
cmp
into
lret
mov
scas
test
pop
inc
fxch
mov
dec
mov
into
mov
lcall
test
shrb
pop
dec
pop
dec
and
movl
pop
test
es
cmc
shlb
nop
cmp
jb
dec
adc
sbb
push
adc
sub
push
out
cmp
aaa
mov
and
test
aam
jg
pushf
and
fmul
arpl
pop
mov
in
and
pop
stc
insb
inc
jge
orl
cmp
push
fidivrs
es
icebp
dec
jne
cltd
push
aam
in
mov
or
imul
imul
lea
stos
jge
cmpsl
imul
cli
adc
mov
pop
pop
or
jns
jmp
sti
push
aaa
pop
dec
call
inc
pop
lods
jge
sahf
stos
and
pop
pop
pop
das
mov
and
iret
sub
cmc
es
mov
sti
aas
stc
jg
iret
mov
into
fwait
pushf
mov
or
out
data16
inc
xor
lock
rcrb
sub
aas
push
sahf
jno
add
in
xor
push
sub
lock
inc
fbld
sti
out
sub
into
sbb
mov
hlt
xchg
jecxz
out
pop
out
mov
inc
jecxz
jnp
aam
aas
jecxz
pop
fs
fimuls
clc
in
pop
mov
int
out
adc
add
pop
mov
and
push
inc
ds
mov
inc
stos
adc
std
loope
cwtl
add
sbb
lret
loope
adc
xchg
xchg
mov
in
dec
pop
movsl
mov
add
xchg
cmp
inc
adc
add
dec
and
insl
mov
dec
lcall
xor
in
jno
xor
sbb
ds
pop
je
stc
cmp
shll
imul
mov
sbb
xlat
push
lcall
sbb
jnp
dec
insl
fucomp
xchg
call
setns
jo
mov
rcll
data16
push
out
mov
cld
sub
mov
stos
cmp
dec
dec
mov
shlb
push
xchg
mov
jmp
xchg
adc
xchg
es
pop
out
jns
stos
push
jmp
movsb
lods
lret
xor
pop
pusha
fwait
mov
ror
out
lret
or
xor
ss
mov
pop
lods
lret
jg
add
adc
movl
xchg
push
sub
push
clc
dec
in
sbb
mov
in
dec
jae
stos
jecxz
and
xor
pop
xchg
sbb
movsb
rcrl
jno
xor
dec
cmp
aaa
xchg
fidivrs
iret
mov
fcmovbe
xchg
mov
insb
mov
push
pop
movsb
movsl
sub
push
dec
stos
mov
and
sub
jge
mov
or
and
scas
dec
cmpl
push
enter
pusha
std
xor
sbb
cli
in
jno
mov
pop
pop
jb
in
cld
xchg
pop
jb
or
sbb
mov
jb
dec
les
iret
add
mov
mov
xchg
aad
sbb
adc
jmp
imul
jbe
loope
pushf
jl
pop
test
in
xchg
mov
ljmp
jecxz
pop
mov
iret
movsl
mov
lcall
pop
sub
es
jns
mov
arpl
test
push
push
movsb
stos
dec
pop
aad
neg
push
xchg
cltd
fmull
ds
and
outsb
mov
shr
out
test
jp
out
dec
dec
movsl
fcom
sbb
xchg
jne
cld
sub
xbegin
sbb
cld
int3
push
aaa
jecxz
lret
add
stc
popa
in
xchg
hlt
xlat
popf
outsl
xchg
sub
outsl
pop
lahf
test
mov
lcall
pop
adc
xorb
mov
jle
jb
loop
mov
and
lea
and
shrl
in
or
shll
out
push
or
ja
ret
shlb
pushf
inc
push
out
insl
mov
jo
inc
lock
sti
jne
icebp
aam
test
imull
pop
jb
out
or
xchg
add
in
das
stos
fcomps
xor
xchg
dec
and
test
movb
mull
pusha
push
mov
dec
xchg
xchg
js
push
lods
minps
int3
aas
test
outsb
push
cmc
into
sub
push
int3
test
xchg
fwait
xor
jo
lcall
mov
or
das
cmp
cmp
outsl
lret
bound
aam
or
stos
add
cltd
orb
insl
sbb
pop
ljmp
scas
pusha
cmp
add
and
inc
or
pop
loope
ficomps
mov
cmp
out
lea
out
fmull
movsb
in
jmp
mov
into
test
lds
out
inc
jg
cld
movsb
scas
fwait
add
sbbb
sbb
icebp
adc
xlat
out
fcoms
mov
je
push
rorb
out
pop
ficompl
loope
mov
sub
dec
jne
mov
bound
loope
out
mov
inc
xchg
sub
pop
inc
out
mov
add
mov
je
xor
xor
add
das
xchg
aad
pop
imul
lea
lods
les
leave
aaa
pushf
mov
divl
adcb
lods
setge
mov
jle
mov
dec
sbb
sbb
iret
or
jl
shl
push
pop
test
jo
stos
dec
add
mov
and
rol
hlt
mulb
jle
data16
popa
mov
mov
ja
or
out
mov
sub
xchg
add
inc
mov
mov
fisubrl
pop
pop
inc
pushf
into
xchg
arpl
leave
cmpsl
jecxz
inc
into
cmpsb
decl
out
add
rcrl
sahf
cltd
mov
pop
imul
stc
mov
xchg
lret
shrl
and
jae
addr16
jg
mov
testl
mov
sarb
push
ljmp
adc
out
ret
dec
arpl
ljmp
ret
cli
sub
mov
sub
mov
leave
push
bound
jge
lahf
xor
fnstcw
mov
mov
xor
int
pop
repnz
and
or
insb
pop
into
cmp
cmp
add
jg
test
pop
testl
cs
xchg
mov
add
jbe,pt
ja
arpl
int3
icebp
mov
pop
fsubrl
cltd
clc
xor
mov
sbb
int3
pop
xchg
add
aas
add
push
pop
pop
inc
dec
sub
fdivp
dec
lret
out
push
pop
xor
pushf
popf
dec
sbb
sahf
adc
mov
ret
sub
ror
dec
lahf
gs
add
or
loope
push
or
in
cmp
mov
imul
int
cmp
sbb
mov
cmpsw
adc
adc
mov
imul
xchg
jmp
leave
testl
xchg
adc
test
aas
sbb
adc
rcl
mov
dec
sub
sbb
es
imul
scas
pop
push
mov
jge
mul
iret
leave
test
jecxz
mov
out
jb
jmp
jns
out
pop
add
jmp
cs
mov
jne
lea
cld
cmpsb
lea
js
mov
push
inc
fbstp
push
inc
nop
sbb
cmp
dec
popf
push
add
sahf
lea
outsb
ljmp
les
dec
jp
imul
or
sbb
inc
data16
gs
aad
sub
aaa
ljmp
cmp
sub
jae
movsb
in
pop
jmp
jno
and
sbb
mov
adc
mov
adc
xchg
int3
adc
sub
pop
fnstcw
ret
movsb
cmp
mov
sbb
xor
stos
mov
decb
xchg
xor
leave
int3
add
cmpsb
jp
sub
imul
or
loope
mov
out
sub
sub
jg
lret
dec
pop
xchg
mov
out
std
push
mov
cmp
adc
loopne
test
cltd
and
call
cmp
sbb
xor
push
mov
cmpsl
jecxz
mov
cld
in
cld
cmp
repnz
jle
neg
add
or
cmp
mov
adc
dec
filds
jle
cmp
gs
xchg
sbb
sti
add
incl
adc
cli
inc
adc
loop
roll
scas
lret
ret
mov
fstpt
and
push
jno
dec
adc
int3
jno
mov
push
xchg
adc
xchg
xor
outsl
pop
xchg
xchg
shll
lahf
test
jmp
std
inc
test
mov
fcomp
mov
ljmp
add
out
fidivl
daa
loopne
push
push
mov
inc
jae
pop
stos
jno
fs
dec
aaa
lods
sbb
dec
es
push
bnd
xor
cs
adc
repz
cmpsl
daa
push
les
jno
push
mov
xchg
dec
inc
call
leave
mov
mov
inc
xor
inc
pop
ljmp
jb
fbstp
push
mov
pop
add
mov
rol
push
fsubrl
cmc
cld
push
pop
and
fbld
and
or
cld
mov
sarb
mov
xchg
movsl
xlat
cmp
push
cmp
push
sub
ret
test
push
adc
stc
js
pop
mov
mov
jae
jg
xchg
repz
adc
xchg
and
in
pop
lret
sub
pop
pop
push
or
mov
in
scas
xchg
ficompl
push
clc
dec
dec
movsl
jnp
pop
testb
imul
cmc
jnp
into
mov
mov
int3
xchg
fists
push
outsl
pop
push
inc
insb
dec
jno
decl
aam
enter
es
out
inc
push
lea
xchg
ds
es
inc
pop
loopne
dec
add
leave
mov
test
stos
leave
adc
mov
push
cmp
addr16
sub
xor
fcoml
xchg
mov
sbb
fsubrl
pop
sub
xorl
int
insl
xchg
fwait
sbb
cmc
xor
jle
idivb
int
repz
outsb
dec
fsts
imul
jbe
cmp
push
ja
cmp
lret
xchg
cmp
push
sbb
jge
cmp
inc
or
outsb
xchg
call
xor
aam
std
shr
mov
push
jle
movsl
dec
scas
cmpsl
cmp
movsb
adc
lcall
ss
cmp
inc
mov
es
pop
sbb
lods
mov
lods
vpcmpeqb
scas
add
test
lods
xlat
jno
xor
clc
push
xor
in
add
add
sbb
jno
add
xchg
lcall
notl
int3
in
jl
or
fwait
test
jmp
push
out
push
xchg
loope
pop
repz
mov
lods
cmp
mov
sbb
adc
in
cld
stc
cmpl
fisttps
lahf
mov
ret
sbb
fcmovb
push
xlat
outsb
push
or
dec
mov
lret
xor
jnp
sbbl
sub
sbb
in
push
in
inc
es
and
es
pminub
lock
dec
sbb
mov
outsl
pop
and
xchg
pop
xor
mov
push
addr16
jg
xchg
pop
in
sub
std
and
cmpsb
scas
aaa
push
xorb
ja
mov
in
js
lahf
xor
aad
rolb
lea
jp
insb
pop
xor
cmpsl
mov
stos
and
push
jns
inc
push
pop
xor
jmp
sub
filds
mov
mov
loope
cwtl
and
push
push
popa
pop
pop
push
jns
or
sbb
jnp
adc
das
xchg
add
xchg
pop
push
xchg
int
lea
cmpsb
xor
cmp
and
aad
add
testl
jns
lock
sub
rol
inc
ret
xchg
in
dec
push
sub
jp
repz
lret
cltd
inc
sbb
dec
jmp
loope
repnz
push
ja
rcr
mov
hlt
fildl
push
leave
push
ss
hlt
dec
or
insb
popa
shrl
jno
push
jecxz
jmp
stc
scas
out
subl
dec
addl
pop
inc
arpl
jo,pn
jns
in
lahf
pop
flds
ss
or
ds
mov
js
insl
sub
sbb
dec
mov
lea
cmpsl
add
and
mov
imul
dec
sub
jb
adc
loopne
xor
adc
cmp
push
jg
stc
stos
lret
aas
push
adc
cmp
mov
sti
mov
mov
push
lds
xor
jb
inc
hlt
dec
imul
inc
jmp
pop
adc
cli
imull
icebp
call
and
out
and
adc
push
sub
mov
fmull
jl
lahf
call
mov
add
sub
out
lods
adc
subl
repnz
es
inc
lahf
mov
jae
roll
adc
lret
sti
enter
sbb
add
pop
test
lock
jb
cwtl
lahf
add
xor
and
clc
and
lea
mov
jg
fisttpll
lahf
jb
pop
aam
and
shlb
xchg
sti
cmp
push
lcall
popa
dec
inc
jb
sbbl
lods
pushf
mov
leave
clc
jnp
push
scas
aam
push
sbb
or
or
inc
rclb
xor
pop
adc
lods
outsl
imul
sub
pop
ret
or
xchg
fdivs
addr16
stc
mov
leave
je
dec
add
pop
mov
xchg
sahf
pop
cmpb
jno,pn
out
fildll
out
flds
inc
test
movsl
xchg
loop
repz
ret
sahf
jno
cmp
adc
xlat
adc
bound
sbb
ret
loope
ja
in
dec
adc
add
mov
jns
sbb
movb
sbb
xchg
push
jle
fldcw
push
jle
lea
pop
mov
lods
or
pop
mov
repnz
dec
push
inc
mov
add
cli
mov
insl
outsb
push
dec
notb
arpl
xor
pop
pop
mov
jo
mov
cld
imul
mov
and
dec
inc
lea
lret
mov
inc
iret
inc
dec
add
cld
fcos
out
inc
or
out
inc
or
mov
insl
or
stos
loope
jo
std
sahf
mov
sub
insl
sbb
rolb
mov
inc
mov
addb
in
pop
cmpsb
and
pop
divl
in
fwait
out
nop
fldl
test
pop
mov
stos
repnz
cld
aam
fwait
mov
cmp
mov
mov
adc
bound
aam
jmp
push
fcoms
or
in
insb
cmp
or
push
inc
xchg
fstpt
js
jnp
out
scas
cmp
ja
xor
push
and
and
and
insb
and
ds
sbb
adc
sbb
adc
cmc
je
add
bnd
std
mov
je
cs
sub
lds
int3
cmp
rclb
jns
fstl
mov
hlt
bound
and
shll
clc
into
inc
cs
ret
sub
scas
fisubrl
xchg
fwait
or
jle
jle
xor
test
es
add
loopne
shll
dec
and
mov
inc
out
or
mov
xchg
mov
test
xor
js
xor
inc
loopne
repz
dec
adc
mov
sub
mov
lods
es
cmp
ret
xchg
pop
adc
xor
inc
ljmp
and
xchg
iret
push
pop
dec
dec
jmp
in
xorb
adc
push
icebp
ja
pop
sub
imul
in
leave
inc
fstps
fiadds
stos
mov
jnp
mov
mov
scas
js
mov
je
arpl
fmuls
inc
and
sbb
pop
outsb
jb
les
clc
cli
scas
popa
adc
mov
std
xchg
or
fwait
add
lea
adc
push
xchg
les
sub
aad
xor
in
or
mov
pop
int3
xor
or
xchg
sub
cli
mov
xchg
movsl
fwait
lret
das
mov
sarb
aas
push
lret
addr16
lahf
and
xchg
out
sbb
cmp
sub
into
sub
jp
cmp
iret
or
mov
and
cli
mov
mov
ljmp
lds
jl
popf
sbb
adc
scas
sbb
sarl
add
nop
sbb
jl
das
inc
dec
nop
push
add
sub
pop
push
loopne
das
cmp
sbb
inc
lahf
rorb
xchg
add
enter
mov
pop
dec
leave
arpl
sub
sbb
pop
mov
lods
mov
sub
aaa
imulb
jo
xor
pop
push
loope
mov
mov
subb
out
xchg
mov
test
xor
cwtl
repz
sub
mov
lret
fldt
jnp
gs
jne
sbb
sarl
scas
jns
icebp
ss
cmc
mov
icebp
pop
out
xchg
daa
icebp
xchg
dec
dec
add
insl
imul
sbbl
leave
gs
mov
inc
lret
xor
aam
bnd
stos
pop
add
add
insb
mov
fs
pmulhuw
mov
mov
lock
daa
mov
or
or
adcl
sub
ss
push
loopne
jecxz
mov
mov
out
mov
fdivs
fmulp
cmp
mov
jnp
sbb
popf
mov
dec
lret
pop
js
addb
jo
add
xchg
test
pop
mov
mov
imul
mov
mov
push
jo
push
add
jecxz
es
lahf
sbb
or
icebp
mov
xor
inc
clc
outsb
or
subl
jl
mov
es
daa
pushf
outsl
sub
push
out
push
pop
xchg
cmp
pop
push
cmp
out
ret
ds
or
or
push
pop
inc
jae
test
mov
push
loopne
pop
lods
jg
pop
fs
adc
insl
dec
cmp
jne
adc
ds
dec
fildl
mov
test
jne
adc
xor
call
std
adcl
out
popf
lret
outsb
jmp
mov
jns
xchg
pop
fwait
and
pop
pop
jg
icebp
mov
sub
nop
repnz
xchg
shr
js
arpl
cs
or
inc
xchg
mov
rep
pop
ficompl
jno
cmp
inc
cmp
adc
popa
xchg
xlat
in
in
scas
mov
add
and
mov
mov
call
mov
idivb
rcll
xchg
inc
mov
jne
cmpsl
xchg
jo
inc
xor
cwtl
add
hlt
and
xchg
inc
lret
sub
insb
push
ror
xor
cmp
mov
pop
add
cmpl
inc
ret
adc
dec
push
in
xor
arpl
inc
stos
xor
jne
rorl
iret
fistl
mov
ret
jbe
xchg
lock
imul
into
rorb
jbe
jne
icebp
or
rcrb
mov
out
pop
leave
into
or
loop
push
mov
and
jno
stc
pop
adc
les
mov
xor
shr
mov
pop
add
sub
repz
popa
call
push
daa
mov
das
mov
mov
xchg
int
mov
add
mov
out
jg
push
sub
inc
lret
divl
or
mov
fidivrs
push
inc
imul
pop
les
stc
vmaskmovdqu
stc
testl
pop
je
pop
or
add
adc
cwtl
mov
jae
dec
mov
test
lods
sub
mov
and
and
das
lods
xor
inc
cmp
sub
lods
or
adc
add
das
mov
xchg
pop
test
sub
call
std
or
outsl
dec
jle
in
ljmp
sbb
js
pop
mov
outsb
sub
xorb
push
sub
dec
adcl
jns
xchg
lcall
nop
push
mov
loopne
dec
clc
ljmp
pop
xor
mul
mov
fadd
xchg
inc
stos
xorb
rolb
pop
push
add
clc
stos
or
stc
pop
cltd
inc
xchg
call
inc
push
cmp
xor
imul
or
pop
mov
jmp
insb
pop
jno
inc
jbe
movq
mov
push
test
push
jecxz
inc
sbb
nop
jns
rcrl
icebp
mov
inc
sbb
subl
jge
nop
inc
and
lods
scas
mov
push
popf
hlt
outsl
jmp
icebp
lods
leave
out
std
leave
adc
sbb
ficoml
ljmp
push
jno
mov
lret
push
cmp
adc
jge
adc
aaa
pop
inc
incb
aad
push
imul
sub
xchg
cmp
cmp
pop
xchg
lds
sub
andl
outsb
xchg
adcl
xor
lcall
outsl
adc
push
cwtl
push
pop
mov
aad
movb
shrb
iret
or
pop
and
ljmp
int
sub
jo
ja
in
lods
jle
stc
pop
in
dec
stos
pop
sub
lret
xchg
iret
negb
dec
push
add
js
test
dec
stos
das
jne
cmp
mov
mov
sub
lcall
push
imul
pop
mov
fs
xchg
lahf
adc
dec
sar
shlb
jb
lret
add
shlb
mov
mov
mov
std
cltd
xor
jmp
sahf
dec
xor
sti
pushf
outsb
int3
int3
rcrb
mov
xchg
outsb
and
sub
fdecstp
or
js
and
xchg
aas
mov
cmp
in
bound
roll
je
inc
xchg
mov
stc
addb
pop
test
sbb
add
pusha
xchg
outsb
adc
xchg
test
sti
jae
mov
repz
sahf
and
cltd
or
and
adc
adc
add
xor
cltd
push
in
stos
test
out
syscall
scas
dec
inc
pop
inc
sub
add
out
movsb
or
cld
dec
jle
ljmp
pop
fsubs
ljmp
ret
outsl
rcl
cs
cmp
mov
mov
add
jge
scas
fistl
or
pop
mov
mov
jns
mov
mov
xchg
mov
push
jge
inc
pop
in
adc
sahf
xor
pushf
loopne
sub
jne
push
sbb
mov
mov
dec
push
push
enter
dec
xchg
stos
gs
mov
jbe
pop
dec
jne
lods
outsb
test
mov
inc
test
jmp
mov
ljmp
jne
pop
aad
outsl
pushf
jg
pop
out
jno
adc
hlt
lock
mov
fstl
inc
inc
adc
out
mov
xchg
ret
mov
data16
mov
cwtl
in
testl
out
stc
repz
mov
mov
dec
sbb
cmp
push
dec
push
cmp
mov
pop
adc
cmp
xor
test
arpl
es
cmp
cmp
icebp
mov
orb
xchg
or
loop
mov
outsl
es
lea
aas
cld
loopne
mov
in
clc
push
scas
jg
jle
rorb
and
and
data16
push
pop
int
aas
cmp
lahf
or
faddl
dec
or
leave
out
pop
adc
mov
dec
cwtl
je
mov
dec
fistpl
lret
jno
mov
mov
notl
cmpsb
std
jle
hlt
xchg
jo
xor
loopne
jmp
aas
mov
add
js
out
inc
dec
sub
js
shlb
mov
push
and
imul
jae
sub
mov
sub
inc
pusha
js
inc
leave
mov
ljmp
jle
call
fwait
xor
cmp
or
xor
mov
push
jmp
dec
inc
repnz
mov
cli
leave
add
push
xor
std
imul
add
xchg
imul
and
mov
add
push
sub
or
or
sbb
add
in
push
insl
jge
scas
fistps
loop
xchg
movsl
sbb
dec
leave
xchg
or
outsb
pusha
lea
repz
mov
xor
jne
mov
out
and
mov
dec
in
jge
repnz
ljmp
push
stos
stc
popa
cs
fsubrp
fmuls
test
and
negl
inc
jbe
and
dec
push
ja
xor
jg
scas
cld
in
js
nop
stos
sarb
sbb
hlt
inc
jecxz
xchg
jmp
into
xchg
sbb
or
out
inc
dec
push
add
testb
adc
enter
adc
lcall
std
insl
fwait
aaa
xchg
dec
daa
loope
push
int
pop
push
push
cmp
pop
dec
push
sub
or
fcmove
cmpb
sqrtps
inc
xchg
add
adc
pop
xor
fcompl
pop
rcrb
dec
loope
movsl
int3
daa
call
jo
je
leave
addr16
hlt
push
mov
push
push
fs
xchg
jg
push
sbb
pushf
pusha
add
add
lret
mov
sub
aam
out
arpl
out
mov
mov
and
mov
test
cmc
adc
jbe
xor
leave
movsb
add
insb
out
clc
test
jmp
aas
bound
cmpl
pop
cli
mov
shll
push
lods
inc
jns
xchg
in
rol
add
mov
push
imul
imulb
fnstsw
mov
mov
adc
adcl
mov
push
jae
or
mov
pop
mov
hlt
xor
dec
scas
shrl
daa
insl
adc
mov
dec
sub
push
add
in
sbb
mov
jne
arpl
cwtl
add
call
test
popa
ja
fisubrl
popf
cli
xor
mov
jge
popl
add
test
xchg
cwtl
jns
test
gs
inc
push
arpl
arpl
adcl
xchg
sub
aas
xor
push
pop
ret
stc
jmp
push
xchg
jge
enter
orl
repnz
jmp
gs
xor
xor
push
pop
push
dec
mov
jg
cmpps
xchg
sub
sub
mov
mov
out
mov
daa
subb
mov
aad
jle
lea
xchg
mov
jns
pop
cld
mov
or
add
or
jns
sbb
inc
or
sub
stos
sub
add
add
jo
rcrl
push
push
cmp
sub
jns
jbe
in
repz
jno
arpl
xchg
xchg
mov
jle
jne
hlt
shll
mov
and
jno
and
sti
inc
lahf
repz
mov
mov
mov
out
pop
adc
mov
dec
mov
out
jbe
daa
pushw
inc
jp
cwtl
fsubrl
cmp
in
jae
out
mov
repz
xchg
jns
inc
adc
aam
ret
xor
xchg
and
dec
cmpl
pop
in
cli
repnz
mov
jmp
inc
jae,pn
push
subl
inc
push
push
sahf
sti
pop
lea
and
push
das
cmp
jg
mov
inc
xchg
cmpsb
inc
jge
ret
fists
cltd
add
insb
outsb
inc
jg,pn
arpl
sarl
lcall
adc
outsb
cs
push
fnstsw
mov
add
cmp
sbb
divb
movsb
lds
xchg
xlat
fcomps
sbb
lods
cmp
jl
push
mov
push
cmp
test
pop
push
ss
cmpsl
push
aas
xlat
repnz
and
pop
out
cli
arpl
dec
fstp
pop
aas
fdivl
sub
push
mov
xchg
fwait
lret
xchg
sbb
jne,pn
adc
js
insb
xchg
or
pop
rcll
shrb
sub
mov
jnp
mul
cld
dec
insb
mov
inc
cmp
je
pop
orl
dec
mov
lahf
lds
xchg
inc
arpl
push
adc
flds
xchg
aaa
sbb
data16
fidivl
fidivrs
cmp
test
mov
fnstcw
leave
and
scas
jb
or
movsb
mov
outsb
gs
inc
imul
lahf
mov
clc
cmc
fld
push
out
or
xor
popa
fwait
dec
inc
out
test
popa
jp
or
xor
stc
lock
hlt
lods
cmp
shr
jecxz
jl
xchg
stc
or
sbb
inc
adc
mov
pop
sbb
fidivs
leave
push
imul
dec
faddp
cmc
pop
inc
xor
mov
shlb
xor
scas
enter
icebp
aas
mov
cmp
and
push
pop
sub
add
xchg
mov
or
cmp
jae
movsb
pop
test
inc
jnp
sbb
mov
lahf
stc
xchg
push
mov
imul
sub
adcb
mov
mov
ja
addb
or
jp
iret
mov
fnsave
stos
inc
icebp
mov
shl
adc
clc
adc
int3
pop
mov
mov
mov
push
mov
stos
es
repz
mov
in
popa
rclb
fs
jmp
movsl
fsubr
orl
stos
inc
and
pop
xor
jno
add
lcall
mov
add
adc
mov
sub
aad
fldl2t
ss
mov
mov
out
outsb
mov
jns
stc
pop
mov
out
sbb
push
int3
sub
sub
add
lds
dec
cmp
push
hlt
mov
dec
enter
xor
xorl
push
je
jb
adc
or
outsb
sbb
cmp
xchg
push
cmp
xor
stos
ret
add
add
push
push
fmuls
mov
add
inc
xor
mulb
js
out
jl
loope
movsl
cs
fadd
test
test
push
xor
pop
cmpsb
es
in
jne
ret
push
and
aas
xchg
jne
inc
cmpsl
aaa
xchg
negb
jbe
mov
pop
das
inc
mov
cmp
enter
shrl
pop
add
cmp
mov
insb
xor
add
rcrb
arpl
in
aam
sbb
adcl
jg
cmp
stc
inc
push
sub
insb
mov
xchg
lret
imul
jl
clc
aam
push
mov
cmp
add
mov
pop
scas
dec
daa
push
mulb
sub
inc
out
cmc
rcrb
loopne
jb
add
mov
loop
cli
mov
inc
scas
mov
lea
xor
sub
pop
lea
cs
arpl
mov
lea
mov
fsubl
stc
mov
jne
dec
into
cmp
or
pop
shrb
mov
dec
and
pop
push
dec
icebp
cld
repz
cmp
or
aaa
test
ss
add
cmp
ss
xor
push
fnstsw
lahf
xchg
push
adc
shlb
cmp
out
mov
aam
idiv
sti
pushf
dec
xlat
xchg
adc
mov
fs
add
out
aaa
leave
mov
repz
dec
inc
jo
cs
jb
aaa
xchg
sub
les
cmpsb
pop
test
enter
loop
testl
xor
jmp
insb
mov
or
dec
push
push
cmp
ret
sbb
fsubl
insl
aaa
movsl
and
testl
test
push
nop
loopne
cli
sub
loope
inc
in
add
cltd
loopne
dec
test
arpl
rol
lret
aaa
xor
mull
mov
xor
cmpsb
pop
jg
popf
int3
loope
cmp
stos
stc
jmp
xchg
sbb
ja
pop
test
cmc
std
inc
jp
inc
cmp
pop
add
les
mov
mov
mov
test
stos
cmpsb
ret
xchg
mov
inc
stos
pop
daa
lods
push
sbb
add
adc
mov
ret
mov
push
xor
insl
mov
mov
ss
push
cmp
jbe
je
stos
add
inc
leave
aas
jns
xchg
add
lods
jo
mov
shlb
fistps
adcb
cltd
jecxz
repz
out
rorl
in
std
repnz
mov
stc
test
mov
repz
pop
test
xchg
bound
pop
add
pop
js
jg
outsl
mov
adc
adc
pop
aam
pop
push
add
shr
lods
int3
out
lret
fidivl
adc
pop
push
and
mov
push
pop
into
bound
stos
pop
aad
jge
xchg
es
arpl
call
inc
dec
or
ss
jge
idivl
ss
jp
sti
mov
dec
stos
push
test
roll
lcall
movsl
test
cli
shrb
lea
nop
ja
addr16
lods
mov
adc
mov
insb
or
je
fidivrl
add
loopne
sub
rorb
mov
xor
pushf
mov
push
push
push
mov
movsb
loope
in
pop
cmpsb
push
daa
imul
cmp
ror
mov
jg
lret
jbe
cmpsb
test
jl
cmp
aas
js
jbe
adc
loopne
mov
push
adc
shrb
daa
rolb
fdivrs
jmp
mov
push
xlat
popf
stc
jo
jp
lret
xchg
sbb
inc
les
mov
cmp
imul
mov
xlat
lea
test
hlt
es
xor
pop
cltd
jp
cmp
jb
daa
hlt
push
ljmp
jle
xor
data16
outsl
jge
cs
ja
rsqrtps
lea
xchg
outsl
inc
xchg
pop
push
in
pop
sbb
cmpsb
jbe
jo
mov
loope
add
push
mov
scas
ss
mov
loop,pn
jo
push
repz
dec
fwait
arpl
loope
lock
inc
jno
popa
push
and
aaa
sbb
mov
adc
mov
sti
mov
add
jl
and
fadd
or
test
cmp
imulb
loop
or
stc
and
push
mov
add
jle
mov
jns
out
xchg
rorb
movsb
aaa
pop
mov
mov
push
mov
rorl
push
icebp
cmpsl
jecxz,pt
dec
rolb
cs
pushf
sub
cmp
cmc
stos
test
test
fdivrs
inc
push
std
les
mov
aad
test
bound
js
scas
push
dec
jl
rcrb
ds
scas
insl
sbbl
mov
xchg
xor
xchg
sbb
mov
mov
lock
addr16
aas
sub
dec
push
enter
sub
cli
push
cmp
mov
imul
pushf
cli
push
or
fmull
fmuls
loopne
cmp
js
cltd
mov
outsl
mov
adc
nop
push
mov
sub
les
add
sbb
popa
cmp
dec
lods
ja
mov
pop
rclb
daa
lods
stos
xchg
xchg
mov
lods
adc
arpl
xchg
into
fs
jnp
or
push
push
fcompl
cmpsl
in
inc
push
test
cs
push
mov
es
cwtl
pop
mov
adc
pop
aas
adc
dec
cmp
test
imul
repnz
iret
sbb
mov
ja
clc
push
pop
jge
ret
push
insl
adc
mov
call
mov
add
test
fsubrs
into
hlt
add
popa
mov
xchg
shll
test
sub
addr16
sub
hlt
push
mov
das
fwait
push
pop
aam
les
jne
push
les
xchg
das
or
gs
popf
popf
xor
aas
das
adc
imul
add
stos
inc
and
js
lcall
movsl
dec
mov
in
rep
lock
in
les
roll
mov
roll
adc
inc
inc
mov
inc
pop
shrb
rcll
mov
jle
std
mov
or
das
push
jb
xor
adc
fidivrl
sbb
jnp
nop
outsb
imul
lods
pop
mov
pop
push
push
push
cld
sbb
jp
lahf
sahf
xchg
out
mov
sub
sub
or
std
push
xor
movsb
sub
mov
daa
cmp
ret
lock
rcrb
dec
jle
out
in
or
cmp
bound
aas
cmp
dec
add
mov
or
xchg
cmp
jo
test
xchg
enter
lock
xor
adc
mov
mov
fisttpl
and
cmc
movsl
loop
rol
es
hlt
push
cmp
jp
fmuls
cmpsb
sbb
shlb
int3
sahf
outsl
xor
icebp
loopne
mov
push
mov
pushl
cli
arpl
push
insb
jbe
fwait
xchg
push
xchg
enter
and
mov
sti
ficompl
and
mov
pop
inc
test
mov
jl
aad
xlat
mov
add
out
and
stos
inc
shll
mov
mov
mov
dec
gs
pop
jmp
push
movsb
scas
jg
cmp
lret
and
cmpsl
push
mov
pop
in
int
icebp
mov
or
popf
add
dec
sti
add
jl
movsb
sub
mov
call
repnz
xor
cs
stc
call
jge
out
xchg
mov
lcall
jae
or
ja
pop
shll
out
mov
push
sti
dec
jbe
pop
pop
add
fs
in
adc
int
loop
roll
insb
mov
sbb
call
cwtl
lods
sbb
xor
inc
inc
and
mov
out
cmp
movsb
into
femms
mov
xchg
jb
inc
adc
and
jb
push
test
in
mov
or
imul
or
cmp
pop
in
inc
out
movsb
push
fwait
movb
mov
insl
addl
mov
push
andl
fists
shlb
out
sbb
dec
mov
push
daa
dec
adcb
data16
inc
ficoms
fmuls
mov
pop
inc
sbb
mov
xor
testb
mov
sti
fsubrs
fimuls
sub
stos
and
pop
cli
aaa
add
fistpll
dec
jne
iret
push
adc
movsl
out
ja
push
inc
fiadds
in
inc
jbe
sbbl
addr16
cmp
rep
cmp
sbb
mov
in
in
push
push
or
les
iret
sbbb
je
es
in
ss
sbb
mov
cmp
sbb
mov
cmp
lods
pusha
mov
push
or
push
iret
jl
repnz
xchg
inc
inc
jns
lret
aam
das
dec
dec
lret
lea
nop
fwait
into
xchg
shlb
jnp
shrl
adc
jp
lods
mov
pop
dec
lret
inc
and
mov
adc
hlt
scas
js
push
test
adc
mov
dec
mov
jbe
sub
imul
push
mov
push
ret
je
mov
add
or
dec
outsb
inc
or
jo
inc
push
xor
call
mov
push
push
inc
cli
mov
imul
sbb
pop
daa
fimuls
adc
adc
jmp
fmul
xchg
sbb
sahf
inc
imul
int
mov
push
cwtl
xchg
or
icebp
push
sub
stos
mov
filds
shlb
jp
aam
es
lea
sub
cltd
or
dec
lret
xchg
xchg
jno
xor
inc
xor
dec
pushf
xchg
lods
sahf
ficoml
sarl
aas
add
and
inc
das
pop
xchg
fstl
popa
repz
push
jle
inc
pusha
cmpl
sub
mov
fists
insl
push
ss
mov
adc
loope
ret
mov
cmpb
ss
sbb
add
xchg
mov
popa
sti
mov
inc
popf
sub
gs
pop
xchg
or
stos
jmp
jp
stc
ja
fwait
stos
fsub
test
fdivrl
pop
jbe
dec
sbb
jl
data16
fwait
adc
lock
jp
fcomps
or
mov
and
pop
lret
ficomps
pop
mov
rcl
mov
add
out
setle
fistpl
shr
push
lods
out
add
and
insb
mov
jae
popa
jecxz
inc
sbbl
sbbb
jge
lcall
inc
roll
sub
or
cmpsl
lods
test
jge
lret
aam
cmp
dec
addr16
sti
push
ss
fiaddl
subb
jle
lahf
pusha
jbe
imul
aam
das
es
jge
or
inc
add
lods
das
xchg
dec
dec
adc
mov
inc
jo
ja
test
insb
lret
push
mov
mov
pop
cld
movb
arpl
scas
fsubrs
psubusw
push
dec
in
and
push
mov
iret
add
lea
and
or
jb
cmp
out
sbb
cmpsl
aam
add
sub
cli
mov
dec
adc
scas
sub
int
sbb
mov
es
ret
movsb
fcomps
inc
ret
iret
add
adc
icebp
jmp
add
xor
xchg
flds
and
fisubrl
sub
test
push
jge
dec
fnstcw
fldenv
jb
lcall
mov
jo
aas
jns
mov
add
jo
mov
or
icebp
stos
xchg
leave
add
mov
imul
cmp
adc
or
addr16
xchg
shll
in
and
or
ds
mov
mov
adc
sub
xchg
push
xor
dec
outsl
test
sbb
mov
adc
inc
repnz
inc
sbb
jmp
xor
dec
jnp
fiaddl
jno
inc
cmc
xor
adc
xor
inc
nop
jno
clc
adc
mov
sbb
mov
in
xchg
dec
xor
mov
inc
or
jmp
cmp
inc
jg
stos
ret
data16
cwtl
lcall
das
ljmp
mov
dec
inc
in
mov
fldl
xlat
ret
lcall
mov
ret
add
jl
lods
pop
push
mov
test
add
lahf
sbb
stos
push
mov
xchg
jl
lea
mov
mov
cmc
or
movsl
mov
outsb
xchg
mov
ret
loope
jp
cmp
xchg
arpl
or
mov
loope
xchg
je
cmp
stos
pop
xchg
push
fxch
nop
push
or
cmp
jne
jecxz
std
push
cmp
xchg
stos
js
xchg
and
shll
cmp
faddl
and
stos
jg
jecxz
int3
fsubs
xchg
scas
sbb
pop
in
jl
adc
cmp
test
xlat
cmp
in
in
sbb
fidivs
je
pop
pop
imul
or
lret
sti
fwait
lret
scas
jmp
lds
mov
pop
xchg
rolb
fwait
sub
pop
push
add
sbb
adc
shlb
mov
adc
pop
xor
aad
repz
mov
xchg
mov
lea
xor
jp
mov
in
pushf
mov
mov
rclb
movsl
sub
outsb
sarl
cwtl
fcoml
in
lea
pop
mov
xchg
jecxz
xlat
iret
cs
xchg
and
sub
jo
xor
fisttpl
jnp
test
jb
test
xlat
clc
mov
mov
fwait
dec
mov
mov
stos
lods
jns
fwait
out
dec
je
shll
cmp
and
jp
fstps
pop
mov
jp
add
xchg
pop
add
and
pusha
stc
add
jbe
cmp
xchg
mov
insl
lods
insl
loopne
shll
je
jnp
mov
lea
mov
pop
jecxz
sti
xor
je,pn
ds
cmp
js
add
xchg
push
outsl
mov
sbb
mov
cwtl
mov
and
into
mov
mov
dec
cltd
fwait
pusha
in
sbb
es
popf
lret
cli
scas
xchg
imulb
mov
outsb
fsubrl
mov
add
idiv
adc
addr16
push
cmp
pop
or
lds
mov
add
inc
addr16
and
je
pop
bnd
inc
sub
repz
test
mov
xchg
dec
xchg
sahf
cmp
pop
test
push
mov
es
ret
lcall
inc
sbb
cmpsl
jmp
pop
popf
xor
adc
cld
pusha
push
int
fwait
push
push
sahf
xor
icebp
push
xchg
les
push
mov
les
push
bnd
call
or
xchg
or
mov
xchg
pushl
das
mov
xor
mov
inc
cmpsl
sub
sbb
push
bound
pop
or
and
test
xlat
or
add
jl
fidivl
fistpl
jmp
pop
sub
xchg
insl
jecxz
push
inc
mov
xlat
nop
xchg
mov
pop
scas
push
lods
pop
inc
and
xchg
testl
in
add
push
push
data16
js
iretw
iret
jg
jae
dec
pop
fisubl
adc
cmp
push
je
jecxz
daa
cmp
xchg
xchg
push
mov
cmp
mov
sub
dec
clc
and
aaa
orb
inc
mov
into
out
push
inc
cli
fwait
sarb
mov
fldenv
cmp
mov
mov
pop
test
pop
add
cwtl
sbbb
mov
lret
jl
jae
jae
xchg
cwtl
add
mov
cmp
iret
mov
push
push
add
sbb
sti
sbb
nop
or
cmp
pop
pmullw
movsb
popf
ljmp
loop
rcrl
js
popa
and
orb
add
fldcw
stos
sub
adc
lock
mov
in
add
adc
add
xchg
outsb
fpatan
jl
push
pop
push
pop
icebp
or
out
sbb
cwtl
add
cwtl
sub
mov
jg
ss
pushf
add
inc
xor
shll
in
fistps
add
xchg
test
jne
pop
sbb
test
jge
cmpsl
add
fisubrl
js
dec
out
xor
fwait
adc
addl
out
je
jb
es
aad
daa
push
pop
mov
test
mov
sub
push
inc
fwait
push
push
sub
loope
jp
push
cltd
andl
sbb
mov
lea
ds
dec
jg
xor
pop
xor
test
loope
cmc
pop
xchg
test
popa
jbe
fidivs
mov
bound
scas
repnz
ret
les
addb
mov
mov
dec
cmpsb
faddl
mov
scas
ljmp
ret
imul
in
push
add
mov
jb
xor
adc
and
loopne
mov
cmp
dec
pop
mov
jne
andl
ret
add
std
push
sub
jl
lods
or
sub
sub
jle
sub
arpl
and
xorb
out
das
mov
xor
push
mov
jmp
mov
sub
into
cs
insb
mov
sbb
iret
in
cmp
loop
sub
dec
mov
cmpsl
or
fsubr
daa
iret
jecxz
adc
push
js
and
dec
adc
sahf
xor
pop
xor
xchg
les
and
cmpsb
jno
mov
add
xchg
jle
pusha
aas
aaa
cld
pop
arpl
mull
cmp
jne
dec
fidivl
mov
repnz
jae
pop
add
xchg
shlb
out
push
cltd
mov
mov
mov
ret
and
or
xchg
popf
push
xchg
sti
lcall
or
mov
scas
aaa
mov
out
mov
sahf
mov
insb
into
and
aam
and
js
xchg
stc
sbb
lcall
pusha
push
cmp
pop
rcrb
imul
jmp
loope
outsb
clc
dec
fsubs
pop
mov
fiadds
xor
std
adc
pop
sbb
mov
mov
cwtl
stos
pop
cld
je
scas
or
mov
mov
in
push
mov
mov
arpl
cmp
daa
xor
push
xor
lretw
push
dec
pop
pusha
adc
clc
pop
cmp
les
fisttps
sbb
and
and
rorl
dec
addb
add
stos
inc
ja
lea
mov
inc
push
in
cmp
mov
mov
les
jl
cwtl
pop
cmp
pop
shrl
clc
mov
cltd
cwtl
in
xor
movb
lds
bound
into
pushf
adc
fucomip
cli
push
idivb
add
stos
pop
lret
into
je
jecxz
push
mov
push
adc
mov
mov
test
sub
jno
inc
repz
or
jecxz
jno
mull
lretw
mov
mov
cmp
movsb
mov
dec
idiv
inc
dec
jo
sbb
aad
jmp
dec
mov
jl
jno
das
les
leave
sar
or
add
sahf
loope
push
push
cli
push
sbb
imul
mov
xchg
lea
test
cmp
repnz
aam
cli
push
push
sbb
mov
pop
das
mov
mov
xor
pop
push
jnp
dec
pop
push
jle
push
loop
mov
cmpsb
mov
add
jg
pop
dec
mov
jo
movsb
dec
pop
xchg
aas
movsb
rolb
ja
lret
cmp
pop
rorl
mov
mov
mov
fcmove
test
mov
out
flds
sarb
inc
jmp
fs
cmp
or
mov
ficoms
pushf
xchg
pop
and
ja
mov
cld
inc
lret
cmp
xlat
sub
loope
ljmp
test
aam
sbb
adc
xchg
aas
nop
jo
push
fldl
xor
mov
jge
mov
arpl
dec
dec
jo
movsb
or
sub
sbb
jmp
ja
inc
mov
xor
ljmp
pop
stc
insl
mov
push
testl
es
out
add
inc
stc
fpatan
pop
pop
sti
cmp
test
and
movb
lahf
stos
xor
adc
mov
or
xor
and
dec
push
imul
cmp
imul
mov
lret
ljmp
sbb
sub
sub
hlt
jns
jmp
fsub
xchg
insb
mov
cmp
lret
dec
outsb
push
pushf
aaa
push
sbb
cli
sbb
out
mov
mov
lds
scas
in
cltd
data16
lock
insb
mov
out
jae
xchg
inc
xorl
add
or
adcb
push
mov
jp
mov
ljmp
cwtl
sub
sub
cmp
dec
hlt
adc
add
push
lret
scas
stos
push
out
mov
out
dec
xor
nop
fucom
sub
bound
jge
jmp
les
mov
jne
dec
popf
inc
inc
pop
sub
hlt
sub
pop
xor
inc
loopne
xchg
out
cltd
sub
addl
imul
ja
mov
mov
sub
fsubr
and
arpl
ja
mov
aas
adc
push
sti
push
int3
pop
scas
mov
sub
in
sbb
arpl
or
pop
dec
repnz
fdivr
shrl
leave
fdivs
leave
sbbb
repz
loope
mov
ja
les
inc
iret
push
mov
inc
sbb
or
pop
inc
orb
imul
insl
leave
or
fisubs
push
mov
mov
inc
push
xchg
in
sbb
int3
cmp
jl
aaa
movsl
push
fldt
nop
inc
insl
or
and
sahf
aad
xchg
jbe
in
dec
rclb
inc
xor
sahf
fbld
push
imul
push
decl
insl
in
sub
gs
xchg
frstor
das
xchg
jl
into
push
mov
movsl
or
ret
push
pushf
sbb
imul
inc
or
xchg
push
ja
loopne
xor
enter
xor
or
into
in
sub
inc
adc
out
mov
xchg
cmpsb
sti
mov
pop
pop
dec
adc
rolb
sub
je
loop
jg
mov
and
loope
subl
shrb
mov
jnp
aas
rol
cltd
dec
adc
xor
mov
mov
mov
pushf
movsb
xor
leave
iret
sti
pop
dec
femms
xchg
push
loope
mov
stc
aaa
inc
std
xor
sbb
inc
aam
out
mov
jl
stos
in
jmp
or
mov
push
inc
or
lret
loopne
mov
sub
adc
out
push
xor
sti
fisttpl
insb
mov
and
jmp
mov
ja
pop
xor
lock
pop
inc
sti
popf
sub
imul
movsl
mov
xor
add
adc
pop
dec
cmp
push
out
jecxz
fsubr
inc
mov
sahf
xor
lods
fcomps
sti
test
cmp
imul
ffree
inc
add
fdivr
daa
sub
mov
pop
sbb
ss
cld
hlt
or
add
aaa
ror
lods
js
or
rclw
mov
repnz
push
scas
or
inc
sub
scas
push
call
sbb
jl
cmpb
insb
xchg
jmp
push
stos
sub
iret
leave
jne
jp
test
push
or
fstpl
cmp
ret
inc
aad
xor
xchg
pop
pop
jns
push
sbb
mov
in
imul
push
shl
cmp
adc
insl
mov
mov
sub
cltd
push
sti
mov
movsb
mov
mov
xlat
lcall
mov
jge
pop
fnstcw
cmp
sub
push
shr
stos
mov
dec
adc
popl
dec
sub
fcoml
das
test
fs
pop
test
in
adc
jmp
jnp
cld
mov
inc
xor
mov
cmp
xor
push
icebp
fbstp
mov
mov
mov
mov
sub
inc
mov
test
mov
je
mov
outsl
out
sbb
mov
shll
xchg
and
pop
inc
fcompl
or
lret
mov
neg
inc
roll
scas
xlat
enter
pushl
insb
mov
pop
nop
push
mov
sbb
sub
cs
test
ss
pop
wbinvd
jns
loopne
and
sti
push
arpl
stc
dec
mov
pop
int
dec
insb
out
popa
add
stos
mov
fwait
or
ficomps
cli
adc
pop
pop
roll
mov
lds
icebp
test
inc
lret
repz
mov
arpl
lret
lahf
lock
xor
jb
xor
push
xlat
sub
and
pop
arpl
rep
mov
push
stos
data16
push
data16
fs
xchg
xchg
lock
jno
xchg
sbb
inc
add
mov
pop
adc
push
cmc
push
dec
push
sbb
test
dec
sbb
addr16
jl
je
or
lret
mov
sub
cmp
adc
fildll
add
outsb
cmpb
xor
xor
push
hlt
imul
cmp
idiv
test
outsl
inc
lods
cmp
push
jle
cmp
fldt
rcrl
xchg
mov
jo
daa
xchg
dec
in
push
and
and
in
insb
mov
jne
fldcw
sub
dec
hlt
bound
jge
xor
dec
sbb
xor
pop
pop
pop
sahf
pop
pop
into
xchg
or
jecxz
lds
inc
sub
into
sbb
push
mov
mov
pop
hlt
cmpsb
or
xor
sub
and
fs
sub
mov
leave
push
cmpl
insl
test
mov
dec
testl
adcl
les
xchg
movsb
movsl
adc
and
fcoms
fs
cs
jns
jbe
push
mov
fsub
jle
cmpsb
pop
sub
test
lret
int
mov
and
dec
add
in
or
cmc
lock
inc
and
push
popf
subb
shll
aad
cmpsl
movl
dec
jmp
outsb
dec
pop
push
jl
or
mov
test
push
ret
adc
shlb
jns
or
nop
stos
inc
loope
mov
scas
cmp
mov
rcrb
movb
jae
sbb
out
arpl
push
mov
lret
dec
sub
ljmp
cmp
fs
jle
xorl
and
popa
and
and
and
outsl
inc
adc
shl
roll
flds
xorl
cwtl
xor
insb
mov
imul
shlb
mov
shrb
addr16
ljmp
push
out
mov
mov
orl
xor
cmp
movsb
loop
lock
loopne
sub
lret
or
jbe
int3
push
push
xchg
cs
repz
dec
std
sbb
insb
mov
lahf
stos
sbb
mov
enter
mov
ds
mulps
mov
fistps
add
addb
je
rclb
and
cmp
int3
filds
cmpsb
pop
ret
sub
mov
adc
mov
dec
aas
bound
das
pop
hlt
adc
mov
push
or
inc
out
xor
movsb
jmp
dec
dec
hlt
int
test
adc
addr16
jbe
dec
clc
call
push
aam
mov
lds
int
pop
push
shl
outsl
ret
mov
in
es
push
mov
jo
and
das
fcmovu
je
push
repz
xchg
xchg
cmpsb
mov
push
scas
sub
js
ss
outsl
pop
std
jbe
cli
push
test
dec
lgs
mov
jecxz
insb
cmpsb
outsl
mov
js
sahf
scas
mov
das
stc
in
push
fwait
test
push
sbb
mov
outsl
aam
xor
or
imul
adc
lcall
cmp
push
xchg
cmp
int
cmp
and
rolb
popf
adc
lret
pop
je
loope
aam
cmp
outsb
ret
mov
xor
pushf
hlt
jge
iret
inc
sub
imull
loopne
clc
xor
les
cmp
xor
jno
hlt
mov
test
sub
stos
add
cld
jp
jmp
mov
iret
ret
and
mov
add
outsl
movsb
dec
add
ds
pop
fimuls
movsl
loope
lea
add
add
xchg
in
mov
add
mov
outsl
or
push
cmpsb
outsl
loope
sub
ja
icebp
mov
cmpsl
clc
and
dec
pop
sbb
dec
in
in
mov
inc
pop
shlb
mov
sahf
or
mov
adc
mov
test
iret
cs
loop
or
dec
shll
jnp
out
cmpl
xchg
dec
xor
mov
xchg
rol
mov
aam
or
cmc
sbb
sbb
jecxz
les
fadd
in
inc
test
cmc
ftst
ss
sarb
sub
xchg
dec
loopne
push
aad
push
cmp
mov
or
fcoml
bound
in
jno,pt
fmulp
fdivp
std
orb
mov
cli
add
cmp
imul
mov
inc
cmpsb
out
jbe
lcall
xchg
push
mov
sub
xor
mov
imul
fs
adc
push
mov
or
and
sbb
ljmp
test
xor
ds
mov
sub
push
mov
test
dec
and
fldt
mov
sbb
pop
push
jg
mov
aad
mov
ss
lds
imul
jl
or
xchg
inc
sub
out
hlt
or
xchg
sbb
jae
or
movsl
addl
decl
fiaddl
dec
cld
imul
sub
mov
or
jnp
add
xor
inc
push
les
cmpsl
xchg
ja
push
and
add
push
sti
adc
jbe
push
add
cpuid
jne
shll
xchg
and
sbb
out
push
lods
bound
sub
push
cld
mov
in
dec
and
sar
pop
inc
out
xchg
fisubs
jb
xchg
jp
cltd
mov
push
insl
pop
mov
sbb
sbb
push
fmuls
scas
pop
cmp
ret
push
rolb
jp
lods
xor
cmpsb
xchg
and
lods
push
jns
mov
fwait
xchg
inc
loope
xor
pop
sbb
addl
hlt
test
mov
push
mov
sbb
mov
add
aas
sbbl
clc
pop
cli
enter
mov
sbb
cmc
push
stos
or
jecxz
mov
add
push
lock
xlat
mov
or
ds
outsb
mov
push
xor
repnz
into
or
adc
scas
mov
xchg
pop
jp
or
adc
out
xchg
clc
lea
ja
mov
push
ljmp
dec
or
push
stos
test
jb
ds
in
push
enter
adc
ss
sub
or
jne,pt
shll
inc
aad
pop
add
repnz
rcrb
aaa
push
sbb
mov
icebp
mov
pop
hlt
int3
sub
aad
dec
fisttpll
pop
pop
pop
xchg
std
jge
arpl
cmc
testl
lds
iret
call
cmp
pop
push
fstl
lcall
or
adc
and
lods
jbe
dec
icebp
add
popf
out
shlb
repz
out
mov
sarb
js
stos
sti
xchg
cmpsb
mov
fcoms
mov
adc
in
adc
dec
sub
push
sbb
in
or
in
xlat
inc
sub
stc
cmp
or
jns
movsl
mov
jno
movsl
or
mov
inc
dec
outsb
daa
push
add
pop
clc
out
pop
xchg
inc
enter
cmp
push
bound
fstpt
add
repnz
adc
mov
repnz
lods
and
leave
idivb
outsl
ds
fwait
cmc
in
push
es
cltd
mov
sub
add
push
in
inc
shll
xor
or
mov
es
inc
inc
inc
outsl
adc
inc
in
mov
ss
inc
xor
je
arpl
ret
xchg
fwait
inc
fst
lock
and
repnz
sbb
fimull
repnz
arpl
mov
dec
cwtl
cmp
shl
or
nop
lret
js
mov
add
cld
in
and
hlt
or
in
xchg
pop
mov
notl
rcll
dec
mov
cmp
je
rolb
addr16
imul
mov
sub
add
les
add
push
cmp
pusha
addr16
stos
dec
les
fiadds
jno
mov
inc
inc
sbb
scas
xchg
pop
fwait
jge
inc
cmpb
repnz
add
push
add
out
dec
mov
xchg
or
xchg
mov
sbb
mov
cmp
cmp
repnz
dec
mov
inc
xchg
sub
out
add
je
mov
test
xor
in
push
lea
call
pop
xor
ret
cs
mov
addr16
movsb
in
lret
cli
notl
cmp
add
jno
push
les
cmp
jecxz
xchg
adc
pop
loope
ret
dec
xchg
sbb
notl
sub
fidivl
cmp
test
and
mov
jb
push
and
cmp
clc
mov
or
inc
cs
sub
std
push
cld
and
jb
mov
pop
and
in
lahf
adc
cmp
adc
xchg
scas
adc
bound
ret
repz
std
add
cmp
in
add
subl
jnp
mov
es
repnz
pop
mov
sbb
jnp
and
sub
out
imul
push
jb
daa
je
dec
inc
cmpb
jnp
addr16
les
cmp
popa
ljmp
ja
inc
clc
mov
outsl
xchg
xor
adc
add
sar
arpl
out
es
scas
aaa
inc
lret
sub
xor
scas
adc
mov
div
dec
jo
imul
das
xchg
cltd
add
in
sti
inc
loope
nop
mov
sub
xor
dec
mov
pop
mov
bound
iret
adc
dec
sbb
mov
adc
jmp
dec
pop
xor
mov
cmp
add
jo
push
imul
sub
mov
mov
flds
sarb
jge
inc
or
jmp
mov
mov
arpl
mov
ja
stc
add
mov
push
rorb
adc
sbb
sbb
into
jnp
ss
dec
dec
inc
mov
mov
mov
sbb
sbb
mov
pop
pop
push
jns
or
je
xchg
and
xlat
fucomi
test
and
test
mov
push
sub
shll
jbe
ret
xor
push
sbb
mov
sbb
inc
mov
adc
mov
cs
mov
fstp
xchg
data16
mov
ljmp
scas
sbb
scas
mov
movsl
sahf
cltd
add
inc
sub
cmp
loopne
ss
push
icebp
mov
cld
mov
gs
mov
cmp
or
cmp
jecxz
pushf
pop
pop
and
addr16
divl
movsb
pushf
lahf
and
ret
les
adc
icebp
divb
sub
push
xchg
cli
inc
jo,pt
mov
push
or
add
insb
pushf
lds
add
sarl
je
push
push
and
es
ja
rclb
add
pop
sbbl
loopne
jnp
fldenv
xchg
inc
out
jno
inc
aad
push
push
fldl
nop
sub
pop
call
fisubs
jge
sarl
cmp
push
mov
gs
lcall
pop
lock
jle
xchg
out
fld
push
dec
dec
int3
and
js
pop
aaa
cmp
aas
pop
lods
dec
adc
je
imul
or
sub
ds
pushf
inc
mov
stos
cwtl
jae
popf
rorl
push
cmp
addr16
sbb
add
fstpl
inc
leave
sub
xchg
mov
sbb
sar
les
mov
jl
out
push
sub
psubusb
xor
jl
out
inc
insb
pop
out
int3
add
repnz
ljmp
sahf
add
mov
inc
xchg
xchg
add
lahf
and
in
rcr
aaa
push
mov
daa
jmp
or
mov
cli
lret
sbb
and
loopne
in
vhaddps
jp
leave
push
ss
xchg
jae
ret
arpl
test
push
mov
imul
sbb
mov
adc
add
stos
movsl
dec
dec
sbb
cltd
mov
fsubrl
test
ss
dec
cwtl
fsubrs
lods
dec
mov
fistps
pusha
cmp
sbb
dec
mov
jnp
or
pop
mov
cmp
hlt
push
aam
ds
sti
add
push
jbe
cmp
neg
nop
lret
xchg
insl
sbb
stos
rclb
lahf
in
incl
in
sub
cmc
mov
scas
andb
sbb
mov
addb
lods
or
add
xchg
xchg
adc
insl
cltd
jle
pop
popl
xor
or
or
out
insb
aas
sbb
and
and
cmp
bound
inc
sbb
mov
cmp
dec
std
leave
or
outsl
iret
data16
cmp
xchg
adc
je
cltd
mov
add
mov
das
gs
dec
and
in
je
push
sub
xor
ja
les
sti
shl
mov
scas
lods
mov
test
mov
cmp
add
ds
adc
mov
ret
cmp
pop
or
mov
mov
rcrb
inc
loope
les
int3
in
pop
enter
mov
cmp
inc
pop
or
jb
sti
dec
inc
xorb
xor
arpl
push
cmpl
adc
test
mov
lods
pop
mov
mov
pop
inc
push
push
add
add
loopne
aam
xchg
push
pop
pop
add
fimuls
xchg
mov
lds
adc
out
sbb
dec
fiadds
mov
pushf
cmpl
stc
push
test
lcall
jmp
cwtl
call
xchg
les
push
push
daa
into
pop
sbb
push
mov
mov
outsl
or
mov
inc
and
pushf
push
loopne
ja
pop
jo
shll
not
nop
lods
and
ret
mov
add
pusha
xchg
push
scas
pop
push
dec
jns
sbb
sub
inc
cwtl
sti
cld
pop
icebp
jmp
sbb
cmp
rorl
xor
push
ljmp
mov
xlat
mov
pop
sub
pop
cwtl
jno
test
push
pushf
jns
mov
dec
mov
fimull
imul
add
xchg
lods
sbb
hlt
push
inc
dec
or
cmpsl
cld
pop
sbb
loope
push
rcrb
sbb
xchg
test
lea
in
lods
roll
inc
in
and
jp
clc
imul
mov
cmp
sbb
sbb
in
int
add
movsb
sub
scas
call
xorb
fcomps
cwtl
scas
add
inc
xor
push
in
cmc
mov
dec
mov
loop
stc
jle
leave
xchg
or
and
push
ljmp
or
sbb
lret
add
stos
sub
cs
mov
dec
insl
iret
loopne
rcrl
pop
xchg
mov
iret
ret
mov
inc
ljmp
fs
mov
jp
mov
lods
inc
test
cmpsl
and
pushf
rclb
sub
fcmovb
jo
icebp
xchg
cs
pop
das
pop
sbb
dec
sbb
mov
insl
data16
fsincos
iret
subb
jb
and
adc
cmp
aam
clc
sbb
fildl
push
fwait
inc
xor
xlat
jl
pop
mov
loop
sbb
add
push
stc
test
jns
mov
jmp
shlw
jb
lcall
xor
mov
xchg
mov
mov
rcll
cli
cmp
or
add
mov
hlt
adc
mov
idivl
scas
orl
mov
add
int3
in
mov
xlat
scas
mov
xchg
das
rcr
out
sarb
daa
out
rcl
das
mov
push
call
adc
add
jmp
nop
ss
in
sbb
jnp
or
mov
mov
roll
mov
pop
rolb
cmp
sbb
imul
lahf
in
scas
pop
push
xor
push
jl
jmp
xor
pop
loopne
lods
lock
xor
pop
jg
push
adc
xor
xchg
cmp
dec
mov
xchg
pop
je
inc
in
xchg
insb
ds
jns
jmp
push
xchg
je
sub
les
and
mov
int3
mov
inc
addr16
stos
xlat
or
mov
out
addr16
add
mov
mov
out
adc
stos
and
and
stos
sbb
jge
loop
jb
aas
movsb
mov
dec
mov
add
or
xchg
fsts
pop
das
sub
outsb
addl
inc
icebp
gs
pop
ret
pop
cltd
int3
mov
and
in
cmp
pusha
or
inc
lods
push
cmp
sbb
sub
xor
mov
mov
xor
jae
std
je
mov
daa
pop
dec
push
imulb
pop
mov
pusha
push
sub
out
mov
dec
push
push
dec
stc
xor
cld
mov
mov
mov
dec
shlb
arpl
jecxz
nop
xor
out
xchg
rcrl
fwait
shl
cmp
dec
mov
enter
cmp
xchg
lods
clc
sub
push
lsl
adc
sbb
js
pop
cmp
inc
out
repnz
or
das
int
in
in
cld
mov
fwait
mov
andb
jmp
push
dec
movsb
lock
jl
xor
add
mov
add
daa
fsubrs
push
push
jbe
test
and
cwtl
xchg
stc
cmp
inc
xor
rorl
mov
fstpt
in
mov
or
inc
dec
mov
mov
and
or
mov
lea
xor
cmpsb
xor
pop
pop
leave
aas
cmp
mov
and
adc
shll
xor
inc
and
adcb
cli
xor
jb
push
jmp
lret
ja
sbb
cmp
cmp
outsl
pop
aaa
insl
pop
mov
stos
xchg
shrb
fdivrl
mov
sub
push
hlt
cmp
pop
inc
insl
sbb
mov
and
ljmp
and
and
or
sub
pop
sbb
cltd
nop
adc
frstor
out
jmp
insl
fistpll
add
jo
mov
cmp
mov
mov
fidivs
mov
cli
jg
xchg
and
cmc
pop
clc
aad
jle
mov
xor
setg
faddl
jmp
inc
xchg
mov
xor
outsl
xor
jns
in
xor
addl
fldcw
adc
add
xchg
mov
addr16
ficoml
jb
in
popa
mov
mov
fsubs
stos
mov
adc
into
xor
push
inc
outsl
cmp
jl
adc
sub
inc
add
ret
mov
push
push
ret
add
cld
push
imul
xchg
shll
shlb
cmc
cmp
push
adc
fsubrl
cld
xchg
in
cli
mov
adc
loope
mov
mov
inc
sarb
add
ljmp
outsl
loopne
sbb
sub
repz
push
jecxz
cs
ror
mov
add
adc
xchg
inc
mov
pop
cmp
or
dec
push
dec
push
mov
xchg
add
enter
rorb
adc
and
mov
outsl
jl
adc
push
jge
adc
shlb
sub
mov
iret
push
in
mov
jmp
cwtl
sahf
leave
mov
hlt
pushf
adc
cmp
jecxz
or
gs
push
mov
pop
es
jp
imul
fadds
or
mov
das
shrl
mov
gs
outsb
fcmovne
xchg
aas
xor
cmp
cmp
mov
dec
ret
xor
leave
int3
mov
xlat
in
cmp
push
lea
cmp
jns
push
push
push
push
sub
inc
in
xlat
call
fadds
push
jns
pop
cmpb
xorb
movsl
cmc
xchg
push
add
xchg
loope
js
jb
pop
add
push
and
fs
dec
push
xchg
and
sbb
cmp
fsts
mov
adc
daa
push
dec
mov
leave
xor
andl
mov
cmp
into
leave
mov
out
jnp
pop
jne
mov
adc
popf
or
decl
int
repnz
popa
mov
xor
dec
stos
test
adc
inc
repnz
push
repz
out
pause
fsubr
es
mov
mov
test
stos
ret
stc
push
fistps
and
xchg
bound
fdivp
push
les
sbb
or
mov
in
push
add
insl
or
mov
push
xchg
push
mov
xchg
fs
xor
clc
cmc
decb
add
popf
je
push
pushf
mov
jnp
pop
int3
movsl
mov
fstps
std
stc
xchg
dec
dec
addb
push
and
faddl
add
mov
ss
push
push
mov
jae
pusha
or
shl
inc
loop
fs
testl
addr16
mov
hlt
push
cmp
insb
pop
pop
sar
pop
mov
add
or
dec
add
pusha
insl
sti
inc
test
cmc
popa
fnstcw
adc
loopne
data16
jne
cmp
mov
dec
adc
push
xchg
xor
addr16
das
push
std
pop
push
mov
sub
out
idiv
cmp
js
lcall
incl
test
cmp
mov
lock
cmp
pop
mov
or
sub
insl
je
pop
sub
push
lods
test
or
in
mov
inc
cmovbe
je
jnp
cmp
push
loop
inc
fs
jns
jle
mov
fnstcw
add
sbb
leave
call
fnstenv
out
xchg
cmpsl
fbstp
lret
call
and
push
xchg
push
ljmp
mov
mov
mov
repz
sbb
mov
or
mov
aam
and
push
jle
lret
dec
leave
or
fistpll
les
and
push
out
scas
or
imul
push
lods
xchg
aam
test
mov
or
scas
push
inc
outsb
sbb
in
pop
push
and
movsl
mov
cmc
jo
cltd
test
sbb
cli
adc
sbb
mov
inc
test
xor
mov
pop
fbld
fwait
ret
scas
lret
incb
lret
lods
and
ud1
xchg
insb
in
pop
sub
xorb
sbb
rorl
enter
aaa
insl
mov
divb
cmp
mov
inc
mov
mov
jns
ficomps
ss
stos
inc
pop
pop
jnp
or
fldcw
or
dec
push
cwtl
push
jmp
xor
faddl
out
mov
sub
cmp
test
loop
jp
cmp
pop
sbb
cmc
dec
arpl
sub
mov
xchg
mov
cld
jae
mov
mov
clc
sub
ret
out
xor
mov
cmpl
mov
aaa
xor
mov
or
adc
push
ljmp
fbld
nop
ljmp
aas
jmp
enter
mov
into
jne
insl
daa
imul
mov
aad
popf
lret
sbb
mov
sub
dec
jl
push
popa
mov
and
mov
cmp
jmp
or
leave
stos
or
loope
mov
sub
pop
pop
inc
cmp
mov
adc
jno
inc
subb
dec
adcb
push
sbb
or
imul
or
adc
inc
push
sub
ret
and
inc
movsl
std
clc
cmp
jno
mov
xchg
xor
pop
insl
jne
fcoml
pop
decb
jbe
sbb
cmpsl
out
add
mov
adc
rolb
dec
js
arpl
lea
and
sub
xchg
cmp
fxch
mov
push
mov
orl
adc
or
mov
and
cmp
lods
cmp
inc
inc
pushf
sub
ss
bound
xchg
rcrb
cld
rcrb
imul
add
sbb
out
mov
arpl
sub
push
sub
push
int
aas
popa
stos
and
lcall
push
stos
lods
or
and
ret
cmp
inc
sub
insl
aaa
ret
push
lret
sub
sub
sbb
adc
sarl
pusha
push
and
push
mov
mov
mov
hlt
jnp
int
leave
aaa
mov
jnp
lods
jge
pop
xor
inc
mov
dec
pop
mov
cmc
add
scas
cli
stos
mov
negb
mov
les
mov
decl
popf
and
push
add
lcall
call
xchg
aad
push
push
jne
xchg
push
outsb
mov
popa
adc
scas
clc
mov
cs
stos
pop
stos
insb
mov
push
nop
mov
xchg
jns
mov
xchg
aam
jne
mov
jl
add
dec
sub
xor
cld
lcall
mov
gs
or
sub
sub
movsl
aaa
jae
push
cmp
push
xchg
jge
call
mov
fidivl
test
mov
addb
sahf
fsubr
xor
ret
mov
aam
and
cmp
pop
mov
stc
inc
xor
mov
call
xchg
push
fadd
bound
test
push
xchg
pop
dec
and
cmp
xor
add
test
sti
xchg
mov
mov
mov
add
or
cld
inc
addr16
sbb
mov
outsl
mov
popf
inc
pusha
repnz
out
or
add
enter
popf
sbb
jge
cmp
jmp
and
sahf
movsb
adc
jbe
cld
dec
lret
cmp
outsl
mov
iret
or
repz
mov
xchg
in
pop
icebp
lods
inc
xor
mov
popf
adc
add
cmp
dec
rclb
mov
jmp
imul
loopne
into
pop
scas
xor
sub
fs
rol
test
dec
nop
out
push
out
lret
push
out
pop
sub
ljmp
sbb
int3
push
push
sbb
ja
subl
pop
mov
push
fwait
sub
jnp
inc
jle
aad
imul
imul
cli
push
push
mov
add
mov
mov
cld
out
adcb
sbb
gs
sbb
or
dec
hlt
adc
inc
dec
mov
pushl
orb
pop
movsb
hlt
shrl
xchg
mov
mov
adc
jae
test
test
loope
push
xor
push
inc
mov
cmp
nop
decl
dec
popa
loopne
enter
dec
notl
addr16
mov
pusha
popa
daa
xor
fbstp
in
add
jb
ja
jnp
xor
cmp
xchg
dec
ret
fnsave
mull
out
dec
mov
adc
push
lahf
or
cmp
mov
push
stc
cmp
bound
push
cmp
cmp
lock
jb
mov
xchg
mov
push
fs
loopne
testl
cmpl
outsl
push
roll
cltd
test
add
bound
stc
mov
mov
pop
shr
mov
mov
pop
dec
dec
mov
aad
and
adc
mov
push
out
addr16
inc
fs
data16
ss
inc
hlt
adc
pop
cmpsl
jp
mov
or
dec
jbe
mov
jp
in
icebp
xchg
repz
rolb
jae
cs
mov
shl
add
ss
push
inc
rcll
imul
sub
repnz
push
ficomps
sbb
sub
mov
jo
pop
or
fyl2xp1
data16
jbe
sub
push
int3
loope
cmpb
into
xorb
xor
cwtl
pop
dec
inc
out
mov
adc
xchg
aam
adc
jecxz
jae
push
stos
dec
pop
je
pop
push
notb
fnstsw
idiv
and
push
add
pop
inc
xor
test
imul
cmpb
dec
push
std
adc
add
loopne
pop
jnp
int
xchg
icebp
out
mov
lock
or
pop
das
aaa
add
das
in
inc
cmp
insb
mov
mov
rcll
inc
sub
loope
or
push
popa
sub
shll
int
mov
cli
ficoml
in
not
mov
inc
mov
sbb
aam
add
outsl
jl
sub
mov
pop
outsl
ret
pop
clc
or
mov
mov
pusha
mov
gs
test
or
out
xor
mov
pop
adc
imul
lds
add
xor
and
inc
and
pop
stc
mov
xchg
add
sub
orl
daa
inc
xor
in
or
out
inc
xchg
cmp
mov
loope
fs
cmpsb
sbb
sbb
je
mov
xor
in
inc
push
ficompl
jmp
xchg
je
aam
test
loopne
xchg
out
les
in
test
jp
pop
push
orb
stos
and
sub
inc
jge
sbb
int
lcall
test
std
sbb
ds
cmp
int
mov
push
jae
adc
pop
pop
push
jnp
and
fdiv
je
pop
mov
sbb
push
iret
xchg
mov
mov
and
add
jp
pop
push
stc
or
xlat
scas
aam
jbe
lahf
xchg
cmpsb
stos
or
faddl
fstpt
mov
in
dec
das
icebp
pop
xlat
ret
hlt
es
divb
jmp
test
int3
add
xor
push
mov
decb
xor
addr16
dec
lods
push
int3
dec
mov
cld
enter
lahf
sbb
sbb
sub
mov
add
jae
mov
in
push
push
and
cmp
ficoml
ljmp
stos
cmp
jbe
inc
sbbb
cmp
xchg
lret
mov
or
sbb
xor
aas
adc
jnp
popf
and
cmc
jbe
pop
pop
xlat
sar
shll
pop
aas
pop
sahf
insl
clc
add
add
mov
add
lods
xchg
jb
ficoml
mov
xor
maxps
fisubl
cltd
call
push
sbb
and
pusha
xor
adc
dec
pusha
arpl
inc
je
xlat
repz
sbb
mov
adc
das
inc
scas
push
mov
lock
add
shll
loope
inc
leave
imul
mov
mov
in
cli
gs
out
sbb
aaa
mov
cld
shr
xlat
or
push
dec
and
push
stc
lock
cmp
ljmp
loop
mov
jbe
lahf
fs
addb
pop
adc
arpl
aad
lret
mov
bound
aaa
add
ds
push
pop
cmp
jo
pop
jecxz
jge
inc
jmp
scas
add
mov
out
popf
jbe
xchg
and
pop
popf
add
lret
fstps
xor
mov
lds
jo
in
jecxz
inc
stos
adc
inc
jecxz
fistl
xchg
add
jg
adc
push
in
cld
or
sbb
cmp
mov
xor
sahf
cmp
jg
ficoms
add
sahf
rep
lahf
cmc
add
xchg
in
inc
mov
sub
movsb
imul
mov
mov
dec
xchg
mov
out
mov
icebp
dec
mov
jmp
xor
lret
mov
sbb
sbb
push
dec
xor
daa
mov
cmp
mov
pushf
js
in
sbb
sub
xchg
les
aas
cmp
jbe
fiaddl
stos
incb
dec
rorl
sahf
cmp
mov
dec
mov
sub
icebp
xchg
outsl
adc
cmp
inc
in
cli
mov
xchg
jb
dec
test
lret
cmpsl
mov
push
cmp
fs
inc
adc
lods
or
std
add
orb
out
pop
mov
mov
cmp
push
ret
hlt
mov
mov
inc
jbe
rolb
repz
mov
out
pop
push
js
jge
fadds
jg
test
data16
cmc
and
jecxz
push
adc
xchg
rcrb
stos
add
adc
sbb
js
xor
mov
xor
adc
pop
in
push
dec
stos
inc
mov
dec
jno
enter
andl
fstl
stos
mov
aaa
xchg
pop
jbe
sbb
jmp
imul
sub
cmp
sbb
inc
mov
call
sarl
imul
hlt
xchg
pusha
sub
stos
push
mov
fistl
ret
jp
ds
shld
push
xchg
xchg
aaa
fldt
push
jo
ja
ficomps
push
inc
stos
lahf
sbb
in
jge
jb
out
cvtdq2ps
je
xor
and
inc
es
dec
add
scas
leave
iret
sahf
pop
cmp
enter
scas
shll
stos
fs
aam
inc
xor
sbb
jns
inc
rcrl
dec
jmp
shlb
xchg
loopne
mov
push
xor
and
jno
aas
rcl
data16
fbstp
movsl
adc
repz
pop
or
adc
xlat
jnp
cmp
outsb
js
loopne
mov
sahf
xchg
scas
cmpsl
jo
lock
jle
lock
outsl
ljmp
pop
adc
fs
movsl
nop
adc
test
fisubs
fwait
jle
test
int
test
jno
mov
xchg
mov
cltd
push
mov
call
sub
or
fwait
jno
pop
cmp
cmp
or
and
mov
jle
and
inc
mov
js
xchg
jge
and
xor
in
push
push
rcll
jns
orl
mov
aaa
mov
push
mov
sub
adc
mov
dec
push
mov
push
mov
jp
rorb
jle
leave
fs
fnstsw
clc
mov
ror
test
sbb
sub
dec
in
in
stos
pop
mov
iret
dec
pop
jnp
sub
or
fdivl
ja
test
or
daa
xchg
insb
daa
sub
test
pop
mov
mov
cmpb
push
stos
inc
jg
cmp
cmp
cmpsb
sahf
gs
adc
mov
rolb
cmp
outsb
lahf
cmpsl
mov
scas
mov
cmpsw
pop
sarb
stc
aaa
mov
jnp
lods
in
outsb
jle
cltd
cwtl
loop
mov
xchg
sarb
and
mov
ss
and
mov
sbb
dec
daa
iret
mov
std
aam
add
pushf
cmp
ror
shll
inc
pushf
jecxz
hlt
pop
push
iret
xorb
cmpsb
and
and
xchg
les
ljmp
jp
sub
test
xchg
ljmp
aaa
inc
xchg
jne
mov
and
scas
and
xor
add
push
ds
fxch
imul
sub
pusha
inc
mov
and
pop
push
iret
adc
pusha
push
shlb
js
int
xlat
test
mov
mov
ja
mov
bound
and
test
dec
xchg
lea
imul
scas
adc
jne
cmp
lret
popf
pop
push
push
jmp
xor
xchg
xor
inc
out
pop
dec
dec
mov
push
adc
mulb
xor
out
aad
mov
sbb
imulb
add
sbb
int3
adc
mov
cltd
and
mov
cmpsb
test
andl
and
sub
out
push
add
arpl
xchg
loope
fistpll
xchg
xchg
add
cmpsb
js
in
ret
xor
call
pop
mov
arpl
inc
btc
sbb
xor
dec
shl
gs
adc
daa
mov
cli
and
xchg
loop
fsts
or
repnz
jg
push
lods
cmp
and
xchg
adc
sahf
mov
leave
mov
or
pop
pop
mov
xchg
pop
or
clc
loopne
pusha
jle
xchg
inc
js
shlb
push
sbb
jmp
scas
repnz
inc
mov
int3
sbb
stos
xor
scas
addb
gs
mov
das
mov
aam
push
jg
add
or
mov
adc
push
cltd
sub
inc
ret
adc
je
subb
inc
rclb
jnp
cwtl
vmovshdup
fisubrl
add
orb
loop
loop
and
cwtl
test
stc
nop
je
nop
lea
jbe
dec
adc
cmp
addr16
add
mov
popa
dec
and
sub
test
ret
out
cmc
pop
pop
xchg
emms
cmp
dec
add
mov
popf
scas
aaa
ret
pop
stos
dec
test
imul
dec
dec
cli
inc
sbb
pop
inc
aam
xchg
jmp
bnd
jge
dec
leave
rol
push
sub
mov
add
ror
xlat
pusha
mov
mov
pop
pushf
icebp
jmp
cmp
dec
mov
dec
pusha
aad
test
test
pop
jno
je
cmp
testb
aas
jp
outsl
cld
and
or
aam
gs
dec
inc
jnp
adc
dec
jbe
fdivr
cmp
jmp
in
xchg
cmp
cmp
or
xchg
xchg
push
jb
lcall
jno
add
sbb
jge
mov
ljmp
popf
movsb
adc
push
push
mov
mov
lea
mov
roll
adc
cli
int3
dec
dec
push
aas
cmp
inc
mov
push
popa
push
mov
inc
insb
dec
mov
xchg
pop
mov
pop
and
shrl
push
xlat
popa
cmpsb
xchg
mov
cmp
xor
arpl
stc
xor
dec
test
and
movsl
popf
add
cmpsb
jg
xor
jnp
pop
dec
xchg
xor
push
insb
push
and
cmp
leave
fisubrs
push
jg
or
out
cmp
mov
rcll
xchg
ret
add
inc
out
mov
mov
cmp
movsb
push
pop
ds
ljmp
sbb
mov
mov
jle
pop
je
xchg
jae
inc
cmp
ja
dec
push
dec
std
xchg
cmp
or
movsl
sbb
std
push
xor
sub
icebp
adc
enter
or
out
lahf
rcl
cltd
aaa
mov
imul
imul
out
inc
jnp
sub
push
or
testl
loopne
xor
push
pop
inc
cmp
xchg
negl
mov
xor
mov
lret
dec
pop
addr16
push
outsb
rorl
jno
fsubl
out
mov
dec
adc
clc
inc
loop
adc
mov
lret
in
jns
shlb
or
push
pushf
test
mov
sub
mov
insb
insl
push
fwait
sahf
push
mov
pop
push
pop
xor
imul
out
mov
sub
push
ja
mov
or
cli
xor
sub
inc
loopne
stos
inc
sahf
jl
aaa
pushl
adc
dec
jmp
jne
aam
sub
std
pop
rorl
ds
sbb
fmull
aaa
loop
or
icebp
cmp
lods
inc
stos
mov
sarb
push
jae
mov
cltd
ret
fists
cmp
pop
xchg
sbbl
ja
out
dec
add
cwtl
xchg
shll
add
rcl
shlb
imul
xor
clc
out
mov
es
adc
loop
rol
pop
inc
mov
fldl
jb
scas
pop
leave
adc
je
dec
jns
cmp
ja
ss
aad
xchg
jns
mov
clc
in
sbbl
dec
out
xchg
cmpsl
into
inc
push
stos
cmp
add
and
leave
and
push
pop
push
or
out
xchg
jge
xor
mov
jne
sbb
sbb
dec
adc
in
gs
push
jno
jb
xor
xorb
jns
addr16
not
push
lods
xchg
add
or
mov
lea
hlt
inc
push
std
repz
jo
and
outsb
stc
mov
xchg
xlat
loop
cli
pop
loope
iret
pop
jp
mov
cwtl
adc
sub
out
ret
pop
fsts
repz
sbb
fstpl
inc
push
arpl
cmpsb
adcb
lret
ds
movsl
jmp
jmp
sarb
push
jae
outsl
cmp
call
fcom
fnstsw
or
xchg
inc
outsl
lret
jl
je
fs
mov
orb
test
adc
sti
cwtl
inc
push
mov
sahf
xorb
aas
xchg
loop
lcall
bound
dec
movsl
or
mov
push
sbb
iret
sbb
xchg
jge
ror
nop
mov
sbb
ret
or
out
les
cmpsb
add
mov
addb
test
cmp
addr16
fs
mov
lds
loope
aas
jnp
jmp
or
and
stos
into
add
nop
scas
fisubs
negb
mov
fdivrs
fwait
pop
icebp
pop
arpl
shrl
lock
out
and
xchg
rcrl
stos
repnz
fisubrs
scas
sub
in
xchg
jp
sahf
xchg
and
out
ja
fsubs
hlt
ret
incl
cmpsb
int3
dec
loope
pop
xor
cmpsl
adc
adc
loope
sub
mov
stos
in
add
mov
mov
dec
jae
ss
xor
sar
sbb
inc
lods
rorl
push
lds
jbe
pushf
push
cmp
fs
xchg
adc
pop
insb
int
inc
into
sub
add
mov
push
xchg
je
es
ret
mov
dec
sbb
xor
rep
int
adcb
insb
push
lret
dec
and
fwait
out
mov
xor
xlat
lods
addr16
push
mov
jns
lods
push
or
lock
inc
mov
xorl
inc
adc
test
lds
mov
leave
inc
insb
push
mov
push
jo
dec
sub
mov
xchg
jnp
andb
or
es
xchg
and
xlat
add
bound
sbb
and
adc
mov
sbb
or
push
xor
shrb
insb
push
add
in
and
jg
and
jne
push
jp
nop
mov
fsubrs
clc
inc
add
lods
fcomps
add
jp
xor
jns
cli
mov
mov
push
in
outsb
push
pop
pop
test
test
jmp
in
rorb
jne
cs
xchg
or
out
aaa
mull
and
cld
inc
shlb
xor
in
fs
jmp
pusha
mov
lea
shlb
mov
test
or
dec
mov
imul
pop
and
add
or
mov
movsb
jle
mov
pop
loope
arpl
orl
pop
out
pop
sbb
fmull
adc
pop
js
leave
sarb
xor
or
or
insb
cmp
loopne
lahf
xchg
sub
js
stos
mov
cld
in
call
ljmp
xchg
and
mov
sub
mov
or
mov
jecxz
push
int3
push
incb
cwtl
sub
inc
out
in
dec
dec
jns
sbb
popa
sarl
fidivrl
xchg
insl
rclb
sbb
push
or
insl
mov
sub
sub
cmp
push
pop
mov
and
cltd
fst
mov
push
loope,pn
lea
mov
push
xlat
xchg
pop
jecxz
lret
pop
pop
lods
dec
iret
loop
fldenv
lock
dec
mov
clc
movsl
adc
rcr
pushf
pop
mov
mov
test
cmp
push
sbb
lods
and
ljmp
jne
cmpsl
push
sub
mov
fs
in
mov
cmp
xchg
icebp
adc
jmp
popa
inc
push
lret
mov
cltd
or
repnz
pop
cmp
bound
sahf
lods
dec
adc
adc
or
mov
dec
xchg
mov
into
pop
sub
fildll
je
dec
sub
sbb
pop
mov
scas
js
mov
jg
cwtl
jb
ficomps
cmc
jge
stos
push
ljmp
outsl
sbb
sub
lods
or
mov
mov
jg
adc
jns,pn
scas
mov
cmpsl
dec
adc
and
mov
mov
cmc
enter
sbb
mov
sbb
ljmp
mov
push
js
jno
daa
das
cmc
mov
addr16
pop
and
pop
push
cmp
push
xorl
lock
and
pop
rorb
movsb
in
aaa
jecxz,pt
addl
pop
fidivrl
inc
sbb
jo
icebp
cli
mov
ret
xchg
cld
jae
push
dec
jmp
icebp
pop
mov
sub
pop
in
outsl
adc
stc
pop
pop
aad
outsl
cmpsl
fsubrl
sbb
push
cmpsb
push
sbb
add
lods
and
movsl
mov
fildl
sbb
aaa
enter
in
cmp
adcl
mov
sbb
fwait
std
cmpsb
add
ljmp
rcrb
iret
jbe
roll
imul
das
imul
jmp
scas
xor
inc
fidivl
sub
push
mov
enter
jecxz
cmpsb
jg
jle
imul
scas
adc
and
fdivrs
add
add
sti
out
xchg
mov
push
andb
and
enter
pop
into
pushf
loopne
rcrl
xor
jno
mov
sti
shrl
ljmp
xchg
out
outsb
stos
in
sbb
cmpb
add
sub
out
inc
pop
in
imul
and
lock
in
xchg
cmp
movsl
mov
ret
sub
pop
shlb
jne
add
push
sbb
ja
jne
inc
ret
push
adc
loope
gs
fsubs
fnstsw
in
push
scas
push
pop
jae
iret
mov
int
fidivs
dec
mov
xchg
mov
mov
adc
push
mov
dec
ja
in
adc
imul
idiv
cmp
jae
lret
orl
nop
loopne
es
dec
mov
loopne
outsl
xor
or
pop
push
int
sti
dec
jns
push
or
fistpll
mov
xchg
sub
inc
adc
mov
stos
mov
xchg
nop
jae
cmp
sbb
push
out
aas
shrl
movsl
cmp
push
stos
xor
test
lcall
add
jo
dec
jle
fwait
aaa
fldl
out
dec
jg
stos
insl
in
push
call
jo
arpl
add
and
outsl
and
pusha
mov
daa
mov
rcl
icebp
sub
add
push
adc
stc
sub
mov
dec
loop
in
and
stos
adc
aad
pop
movl
jno
cmpb
sub
sub
lcall
hlt
aaa
sub
rorl
pop
jecxz
sub
or
dec
in
add
push
cmpsb
sahf
inc
jne
sbb
ret
jp
popa
sub
outsb
addr16
add
dec
cld
or
xchg
je
cwtl
mov
cmpsb
loopne
rolb
incb
iret
mov
stos
ljmp
sub
nop
xchg
push
dec
and
les
add
call
pop
cmp
in
in
bound
lcall
sub
mov
int
into
popa
and
sub
test
sbb
sub
test
gs
fsub
outsb
cmpsl
popf
adc
mov
out
push
cmpsl
enter
xchg
fs
lds
xor
fstpl
das
mov
out
push
fstpl
test
in
rclb
mov
cs
ljmp
and
out
sti
or
sbb
stc
cld
dec
xchg
jo
adc
popa
arpl
roll
xchg
stos
push
xor
sbb
inc
mov
push
dec
les
and
cmp
sbb
cmp
xchg
dec
sub
sub
ret
add
stos
jbe
mov
addr16
pop
jnp
push
dec
sub
xlat
leave
pop
mov
mov
jae
sub
inc
mov
gs
jecxz
adc
rorb
inc
sub
cld
sbb
fiaddl
dec
push
jbe
std
dec
jno
cwtl
xor
jbe
outsb
int
jmp
jge
fisubl
dec
xchg
dec
in
mov
loope
jle
outsb
xchg
xchg
and
out
mov
inc
cmc
out
cmp
loop
aad
push
xor
dec
push
sub
mov
inc
pop
imul
pop
adc
mov
mov
insl
movsb
sbb
cmc
repz
fmuls
in
addr16
fbstp
les
aam
sub
xor
jno
test
fwait
push
pop
cli
adc
test
sbb
int3
into
scas
or
rcll
push
sbbb
push
adc
xchg
mov
push
push
xor
dec
pushf
dec
and
sbb
repnz
bound
data16
orb
fwait
rcrb
cmc
push
testl
and
xor
in
cmp
pop
sarl
mov
mov
jae
jl
pop
lods
cmp
cltd
xor
dec
ja
adc
fisubrl
dec
push
add
dec
cmp
push
fwait
mov
subb
inc
and
jne
add
dec
test
jg
mov
mov
jle
test
lcall
enter
or
idivl
push
inc
orb
les
andl
daa
xchg
jmp
fwait
movsb
mov
dec
shr
inc
pop
xor
out
movsl
and
and
dec
pop
or
cmc
movsb
cli
stc
lcall
into
and
mov
jle
jmp
andb
push
mov
push
stos
mov
test
scas
mov
sahf
ss
insb
insb
addb
xchg
inc
mov
es
lock
xor
aas
jno
mov
jp
adc
test
adc
push
and
or
stc
push
mov
filds
loope
adc
adc
jmp
push
inc
in
inc
data16
shlb
sahf
cmc
sbb
int3
pop
dec
push
orb
rolb
adcl
mov
mov
sub
and
mov
subl
mov
sbb
scas
push
xor
iret
sbb
jmp
mov
xchg
jbe
leave
mov
pop
mov
mov
inc
mov
lods
jo
ret
pop
arpl
jl
and
sti
xchg
mov
test
push
jb
imul
mov
push
cmpsb
addr16
into
repnz
inc
adc
pop
repz
mov
roll
mov
clc
jo
mov
lods
jmp
cld
sub
int3
mov
mov
mov
mov
test
fldcw
loop
mov
loope
jb
sbb
sbb
jle
xor
jb
and
sbb
inc
fsts
or
or
addr16
cwtl
repnz
fildll
repz
mov
nop
xorb
out
test
lods
jnp
jge
outsl
in
push
jp
cltd
xor
push
fs
pusha
mov
pop
bound
add
imul
sub
out
mov
add
ss
push
dec
xchg
pushf
pop
cld
sbb
push
sub
in
movsb
fisubrl
outsb
jo
adc
add
std
push
fs
movsl
xchg
or
lret
pop
xchg
jns
sarl
sbb
dec
or
movsb
jge
adc
adc
and
repnz
inc
xchg
popf
cmp
outsb
mov
arpl
or
mov
in
xlat
xlat
fwait
outsb
jmp
adc
fisttpll
pop
push
popa
sub
iret
or
lret
int3
add
test
adc
jp
sub
dec
out
cmp
xchg
pop
bound
mov
add
jnp
mov
jg
xchg
pop
xchg
add
nop
xchg
jb
repnz
mov
sbb
cld
flds
push
adc
hlt
jp
mov
cltd
or
stos
pop
pop
inc
sti
loopne
jne
lret
adc
fcompl
lods
jo
add
xchg
loop
pop
or
repnz
je
mov
sbb
mov
add
idivb
scas
mov
movsl
clc
sti
dec
mov
pop
shll
lods
xchg
imul
outsl
fbstp
pusha
test
in
or
mov
sub
repnz
faddl
ret
jbe
push
ret
cwtl
aas
adc
add
bound
mov
sahf
jns
mov
jb
cmpsl
fwait
and
jb
mov
inc
push
cmpsl
sahf
adc
out
repz
cli
adc
dec
bound
gs
xchg
jb
cmpsl
movl
mov
pop
xor
pop
aas
mov
stos
and
and
cmp
jb
subl
sbb
negb
jbe
stos
mov
in
add
jbe
cld
push
and
jnp
pop
dec
cmp
gs
lahf
inc
dec
aam
and
push
adc
pop
sbbl
bound
push
popa
lds
loope
imul
adc
xor
call
adc
mov
stc
std
inc
ja
movl
adc
inc
add
hlt
popa
test
adc
pop
and
loope
inc
cmp
fistpl
lods
aas
add
stc
in
pop
and
push
loopne
sub
pop
inc
inc
mov
xor
add
push
aad
fwait
ret
cmp
rcrl
scas
mov
bound
inc
mov
pop
std
popf
imull
subl
xchg
rcrl
lods
mov
and
pop
xchg
xchg
cmp
jns
sbb
sub
sbb
cmc
out
das
sbb
sub
and
pop
mov
dec
out
dec
rclb
leave
or
ret
les
lret
mov
cmp
jge
sahf
add
pmovmskb
sbb
xchg
dec
in
mov
popf
punpckhdq
jmp
dec
out
sub
mov
push
mov
leave
subb
cwtl
cwtl
das
imul
adc
xchg
adc
inc
mov
sbb
or
sbb
insl
mov
out
leave
out
push
sbb
inc
push
inc
cmp
je
icebp
jle
imul
clc
mov
std
in
rcl
dec
xchg
mov
test
sarl
and
sbb
xlat
mov
dec
and
aad
das
adc
xor
out
mov
dec
pop
outsb
aad
push
mov
mov
sar
jmp
mov
and
adc
pop
xchg
inc
mov
test
and
shrl
in
push
sub
mov
mov
orb
imul
das
jne
enter
add
lods
dec
pop
test
sti
push
lds
push
add
mov
lret
in
sti
xor
imul
mov
shl
jecxz
xchg
je
or
pop
cltd
fwait
test
jns
sub
enter
sbb
mov
loop
fbstp
dec
mov
jbe
mov
inc
inc
imul
lods
xchg
sub
gs
outsb
outsl
loopne
add
cwtl
push
xchg
scas
fsts
loope
in
fistpl
lods
stos
pop
clc
add
xor
inc
sbb
test
shll
push
cmp
mov
pusha
add
jae
push
dec
in
mov
mov
iret
mov
or
and
out
test
mov
jbe
push
add
stc
mov
xchg
leave
mov
push
pop
hlt
shlb
and
inc
or
pop
cld
inc
cmpsb
push
lea
movsl
sbb
push
hlt
subb
into
fdivrl
mov
mov
cld
xchg
jmp
loopne
sub
inc
or
jno
adc
icebp
lcall
mov
loopne
lahf
and
mov
jno
or
jb
aaa
adc
mov
sub
call
ljmp
cwtl
xchg
insb
in
mov
lock
mov
repz
lret
jns
test
movsb
mov
mov
ret
aas
or
test
pop
int3
nop
cmpsb
push
or
jne
repnz
outsb
test
jge
mov
call
xchg
fucomip
int3
add
into
mov
xchg
fstpt
dec
mov
or
mov
shll
xchg
jne
subb
test
dec
add
lea
ljmp
sub
mov
mov
xor
mov
push
cmpsl
out
jge
les
in
cmc
sub
ret
les
fmulp
dec
and
xchg
nop
pop
shrd
icebp
and
dec
arpl
cmpsb
or
xor
sub
outsl
mov
jae
push
sub
cmp
rclb
mov
insb
pushf
aam
lcall
xor
popa
push
pop
cli
sti
mov
stos
repz
jp
sub
int
les
xchg
pop
pop
inc
cmp
or
out
pop
xchg
jne
fmuls
push
mov
mov
daa
ja
adc
stos
outsl
dec
xor
push
mov
and
mov
xchg
inc
js
fbstp
in
push
pushf
mov
cltd
lods
push
aaa
loope
push
ja
pusha
add
cmpsl
jnp
push
lock
out
das
inc
mov
sub
je
int
and
test
test
cwtd
cmp
xor
jge
push
mov
addr16
jge
mov
mov
scas
sar
xor
ret
cmpsl
sahf
pop
addr16
lock
and
sub
out
stos
sub
imulb
mov
cmp
in
scas
sub
loop
ret
fimuls
mov
xchg
mov
lods
jmp
sbb
mov
cmp
xor
sbb
cmc
jbe
xor
int
lret
ret
insb
addr16
xchg
adc
es
addr16
sub
mov
jle
adc
nop
lret
or
dec
out
jnp
addr16
xor
or
inc
shrl
xchg
jb
inc
mov
mov
add
lret
push
lret
clc
xor
xor
push
xlat
pushl
mov
sbb
clc
out
lods
lods
push
insl
je
aas
or
pop
lds
mov
cmp
test
insb
adc
xchg
aas
jbe
mov
fnstsw
cmp
xchg
push
pop
sub
shll
pop
cmpl
js
setbe
ss
mov
inc
rorb
sbb
sarb
fucom
inc
adc
mov
mov
xchg
rcrb
nop
mov
fistpl
push
test
aaa
divl
das
jns
ljmp
and
jbe
sbb
int
insb
dec
stos
push
add
pop
dec
mov
mov
cltd
inc
mov
mov
cmpsb
movb
xchg
cmpsb
ret
stos
cmp
aas
sbb
gs
sub
pop
inc
mov
push
scas
addr16
test
xchg
sub
pop
fwait
push
jne
mov
xchg
pop
cs
out
mov
sbb
add
enter
dec
movsl
dec
rcrb
cmpsb
jnp
sub
and
loop
sub
xor
sub
dec
sub
dec
les
and
pop
fnstcw
adc
xor
mov
fisubl
xchg
and
push
inc
out
cmpsl
pop
in
leave
ja
test
cmpsb
cmp
and
mov
dec
mov
xchg
sub
fbstp
fsubrl
jbe
in
push
js
sub
push
cs
in
and
inc
xchg
mov
lahf
loope
or
movsb
or
jbe
int
jge
cmp
arpl
xchg
push
jns
jecxz
data16
or
icebp
and
fstpt
out
shlb
inc
pop
mov
aas
jo
dec
hlt
dec
jg
push
arpl
in
push
inc
call
sarb
add
repnz
movsl
dec
mov
add
cmc
dec
inc
int
aas
scas
data16
xchg
push
nop
pop
pop
cmp
sub
fsubrs
loop
inc
aad
leave
aaa
mov
nop
fprem1
fcmovne
pop
inc
subl
imul
enter
xor
jno
jb
fldt
pusha
xor
pop
negb
jecxz
cmpsl
das
aas
pusha
and
jmp
push
int
in
leave
xor
mov
pop
xchg
mov
aam
dec
ljmp
sbb
add
cmpsb
mov
dec
adc
push
test
lret
dec
and
mov
scas
testl
xchg
lahf
jl
fdivrl
mov
lret
mov
mov
inc
and
test
cmp
pop
fsubs
into
dec
out
add
loop
sahf
cmc
ret
cmp
adc
enter
loope
push
mov
xchg
xchg
push
hlt
into
xor
mov
cmpsb
mov
lret
xchg
push
ljmp
out
stc
sahf
jmp
jl
mov
cmp
xchg
cltd
and
movsl
add
sbb
icebp
adc
popf
inc
jo
jge
fistl
cmc
lods
sti
and
in
aad
aaa
pop
mov
pop
arpl
enter
sub
in
ret
stc
les
loopne
ret
push
mov
cmp
cwtl
pop
mov
clc
jb
popf
add
fisttpl
xchg
push
xchg
mov
outsl
hlt
xchg
test
xor
xlat
xor
les
adc
cwtl
or
std
cmp
jmp
pop
clc
jbe
jp
repz
popa
push
cmp
es
cmc
xor
fstpl
pop
lods
fsubs
fsts
pop
jmp
mov
repz
in
push
cmc
xchg
mov
sbb
movsl
inc
lock
sub
push
repz
aaa
inc
add
push
icebp
out
lret
je
filds
mov
dec
repnz
pop
out
jbe
mov
push
jae
sub
mov
lods
cmp
inc
aad
and
inc
adc
test
mov
cld
sbb
dec
out
aad
ljmp
cmpsl
lret
aas
lret
xchg
jl
xchg
rorl
pop
xchg
xor
mov
mov
inc
pushf
sub
in
aam
add
inc
cltd
push
popa
add
pop
push
dec
test
inc
outsl
dec
add
mov
sub
int3
add
dec
mov
xor
inc
sbb
insb
loop
cmp
lods
fidivs
jl
cltd
in
into
sbb
test
out
inc
in
addb
sbbb
lret
shl
loope
mov
loope
xchg
cmp
imul
std
push
cmc
js
sbb
xchg
mov
stos
adc
xor
stos
cli
sbb
pop
loop
ss
xchg
cli
test
je
loopne
sub
pop
cwtl
xor
dec
into
gs
adc
loopne
or
cs
xor
push
mov
dec
clc
ljmp
loop
push
mov
mov
inc
cltd
cmp
push
mov
je
cmpsb
add
xor
push
and
xchg
fs
pusha
call
mov
pop
pop
call
rcrb
or
jns
cld
xchg
sbb
add
mov
xchg
sbb
daa
jl
push
mov
push
pop
in
fwait
mov
xchg
xchg
inc
dec
xchg
or
shll
cmp
mov
mov
push
and
push
mov
stc
repnz
and
movsl
out
xor
jecxz
int
out
xchg
pop
sub
pop
sarl
mov
xchg
out
sahf
push
arpl
xor
shr
jns
xchg
and
add
pushf
mov
or
in
mov
adc
pop
int3
faddl
jnp
stos
cmp
mov
cld
dec
inc
mov
aas
shll
sbb
mov
test
mov
add
xor
nop
cmp
shrb
push
pop
add
bound
bound
mov
aad
leave
adc
mov
xchg
cmc
xchg
sub
pop
les
cmpsb
pop
jmp
clc
orl
xchg
mov
adcl
jecxz
test
in
jl
fs
divb
or
sub
icebp
mov
jo
addl
mov
popa
rorl
lret
mov
mov
testb
jmp
cmp
repnz
push
xchg
push
adc
aad
lahf
xchg
cltd
jo
xor
adc
unpckhps
cmp
push
out
pop
test
jmp
jo
les
mov
pop
in
imul
inc
push
fcomps
mov
jecxz
mov
stc
aas
bound
adc
dec
test
iret
pop
adc
ficoml
out
push
je
out
sti
in
jmp
pop
fisubrs
out
jnp
lret
xchg
lods
in
cld
push
or
jecxz
stc
insb
dec
lods
stos
inc
mov
jb
add
movsl
pop
data16
push
jmp
ja
xchg
out
sahf
adc
pop
push
shl
stos
sub
and
add
or
hlt
push
lcall
and
jbe
mov
mov
sbb
cmp
jp
xor
hlt
jle
and
inc
sti
mov
xchg
fdivl
fimuls
imul
push
aad
lss
mov
xchg
mov
inc
call
insb
adc
inc
js
or
or
adcb
lret
cwtl
mov
pop
inc
outsb
imul
clc
sbb
push
jle
xor
sbb
outsb
movsl
sbb
dec
pop
into
dec
and
loope
push
dec
fcmovu
pop
add
xchg
out
jmp
sbb
add
mov
or
jge
xchg
subl
test
stos
jge
or
das
mov
sahf
lahf
lret
lea
jp
pop
cli
scas
lret
repz
adc
xor
push
and
ja
mov
out
aad
shll
jae
mov
mov
call
lods
idiv
ja
mov
aas
iret
adc
stos
adc
dec
lahf
mov
mov
jne
fldl
ret
push
hlt
mov
inc
mov
inc
cmp
lahf
jae
inc
jno
nop
adc
loopne
xor
cmp
xchg
iret
int
loop
xchg
movsb
shr
cmp
adc
and
push
ljmp
ds
inc
pop
jno
inc
and
add
lcall
subb
or
and
inc
dec
or
mov
xlat
xor
ja
in
jl
and
xchg
jmp
into
dec
mov
pop
sti
add
loope
sub
xor
jp
or
and
pop
enter
fimull
pop
test
and
mov
sahf
sub
cmpsl
or
in
aas
loop
arpl
pusha
pop
call
mov
xor
lret
rcl
mov
outsb
jae
nop
xchg
or
je
pop
ret
shrb
push
add
es
push
pusha
scas
xchg
sub
rol
push
fucom
call
xor
divl
mov
jecxz
mov
cmp
fs
sbb
jecxz
xchg
mov
in
or
iret
xchg
stos
dec
mov
inc
scas
es
icebp
mov
xlat
jecxz
test
cmp
shrb
negl
cli
out
mov
pop
outsb
push
push
dec
pop
and
push
mov
mov
jmp
outsl
ljmp
xchg
xor
mov
inc
je
add
dec
jmp
in
cmpsl
dec
loop
lahf
mov
lret
add
fistps
or
inc
addr16
cmpsl
push
mov
data16
lea
mov
repz
aad
shlb
and
loope
jno
push
ret
fistpl
lock
rorb
jmp
adc
in
ja
orb
repz
fs
test
fidivrs
aam
inc
or
ret
cs
jns
adc
push
outsb
lret
or
sbb
ret
iret
cli
mov
jge
push
dec
sub
jne
insb
sbbl
js
sarb
adc
sbb
add
push
int3
je
addr16
rcrb
mov
add
jo
jno
dec
and
inc
or
mov
mov
mov
lahf
das
push
push
or
and
pop
mov
out
xchg
lahf
fdivrs
jg
arpl
pop
cwtl
mov
pusha
pop
or
jne
xchg
pop
mov
fwait
aas
mov
les
scas
mov
add
adc
sbb
stos
out
inc
jb
inc
mov
pop
ja
xchg
adc
dec
cmp
xchg
mov
sub
push
inc
and
in
inc
jmp
xchg
sub
inc
frstor
mov
inc
cmp
sti
xor
out
sub
iret
add
hlt
dec
in
jge
enter
mov
sbb
mov
cmp
nop
shll
jnp
and
sub
sahf
cmp
ficoms
dec
adc
lock
mov
jg
test
or
add
pusha
mov
add
in
mov
sbbl
mov
pop
jb
mov
arpl
in
mov
push
jns
add
xor
popf
andl
sub
ret
pop
adc
fsubs
inc
push
test
in
mov
filds
inc
cmp
mov
in
in
push
dec
push
popf
outsb
in
or
js
insb
jecxz
dec
imul
add
xor
insb
cs
popf
cwtl
inc
das
jmp
add
sub
cmc
pop
scas
jae
icebp
in
push
hlt
mov
push
inc
cmp
jns
pop
ss
int
sbb
test
adc
call
mov
mov
fwait
pop
fistl
add
test
int3
mov
leave
pop
loop
pop
ds
mov
aas
push
int
pop
mov
dec
aad
or
mov
int
inc
sahf
popf
sbb
in
stos
aam
adc
xor
aaa
sub
xchg
inc
jno
adc
and
mov
sub
pop
push
bound
fs
mov
ficomps
stc
sub
pusha
add
push
mov
push
int3
ret
xlat
jecxz
mov
mov
pop
dec
jmp
push
out
pop
test
mov
aam
enter
sub
or
pop
clc
sbb
add
fisubrl
jp
xor
in
js
aad
mov
sbb
cwtl
mov
xchg
mov
push
data16
out
rorb
pusha
inc
test
push
ds
into
ja
test
dec
dec
push
shrb
incl
movl
xor
daa
mov
imul
cmp
lock
inc
cltd
xchg
ds
cmpsb
jl
icebp
cmp
mov
pop
push
lret
inc
pop
ror
ljmp
shll
cmp
je
add
xor
and
mov
jnp
and
lds
sti
jne
rcrl
pop
sub
aad
mov
xchg
mov
notb
js
icebp
and
arpl
xor
imul
test
xchg
fistpl
pop
loopne
mov
scas
pop
imul
sub
lds
mov
adc
jle
and
xchg
enter
lret
lahf
sub
jbe
mov
lret
cmp
lahf
lahf
push
pop
movsb
popa
popa
adcb
nop
sub
push
lcall
lahf
fsubs
and
mov
insb
call
sub
xor
data16
in
subps
out
cmp
pop
iret
ffreep
lahf
pop
test
push
pusha
inc
fmuls
pop
pop
rclb
in
insb
scas
and
sti
xor
jle
jns
cltd
dec
xor
in
gs
dec
push
push
ss
test
nop
pop
push
shl
adc
mov
jle
cmc
add
push
enter
sbb
aad
push
xchg
dec
repz
dec
lock
dec
mov
cmpsl
mov
mov
popa
cmp
test
dec
sbb
sbb
daa
outsb
cmp
xor
neg
scas
les
mov
xchg
adc
cmp
mov
inc
nop
adc
xchg
les
mov
aaa
popa
mov
sub
gs
fsubrl
dec
call
push
mov
mov
cmpb
or
ficomps
sbb
jmp
push
jns
or
mov
and
sub
leave
pushl
adc
int
jne
aaa
popa
push
mov
jecxz
push
dec
iret
xor
ficoms
adc
lods
arpl
daa
jmp
inc
test
push
push
pop
mov
in
pop
lcall
out
sbb
test
neg
test
push
push
cmp
insl
jae
std
sbb
lret
add
mov
lea
stc
imul
xchg
sub
push
cmp
mov
in
xchg
scas
pop
or
aaa
xor
js
lcall
lods
xor
push
sub
ss
adc
xor
adc
scas
dec
ljmp
lcall
ljmp
stos
mov
inc
mov
aaa
aas
cltd
push
dec
cltd
lods
vpunpcklbw
adc
js
mov
adc
push
lahf
imul
sbb
dec
lret
cltd
cmp
xchg
push
mov
xchg
fildll
mov
and
pop
cld
inc
push
notb
inc
push
adc
push
mov
mov
sub
insl
xor
daa
test
fsubs
sbb
inc
pop
dec
mov
mov
push
adc
stc
cmp
hlt
xor
fdivrs
lock
sbb
scas
gs
xor
add
mov
aaa
dec
mov
pop
or
lds
xchg
imul
cmp
jmp
je
scas
jns
mov
je
jmp
or
ds
xor
cmc
xchg
les
dec
adc
and
cmp
loop
xor
outsb
sbb
cmpsl
mov
loopne
mov
inc
les
pop
xchg
or
adcl
loopne
nop
imul
dec
xchg
jb
nop
lods
push
xchg
ljmp
mov
nop
lret
andb
push
int
mov
or
mov
cs
jae
xor
pusha
lcall
bound
xor
repz
outsl
ljmp
lods
fcoms
shll
arpl
insl
pop
ljmp
lea
je
or
movsb
shlb
movsl
mov
sahf
test
pop
js
push
ljmp
xchg
and
dec
insb
out
shlb
cltd
mov
push
jmp
shr
mov
jno
cld
and
and
outsb
mov
loopne
leave
lods
dec
xor
adc
xor
sbb
hlt
xor
xchg
pop
pop
fimull
add
data16
mov
push
jnp
hlt
addr16
aad
stos
xchg
and
mov
push
fidivs
mov
xor
pop
mov
lds
jo
stc
arpl
mov
xor
dec
mov
add
dec
adc
fs
cmp
jp
xor
push
jge
sub
lock
jne
pop
sahf
ds
frstor
aad
push
mov
mov
hlt
sub
repnz
fwait
pushf
pushf
fidivs
pop
lcall
jmp
mov
pop
xchg
int3
pop
mov
jns
or
pusha
pop
mov
jno
rcll
or
enter
mov
daa
push
cmpsl
clc
ret
push
std
out
cmc
mov
inc
pop
cmc
aam
loope
add
xor
mov
cmpsl
sub
jnp,pn
jbe
pop
pop
adc
les
movsl
leave
cmp
faddp
sbb
jecxz
fldcw
adc
xor
or
sahf
sbb
into
ja
pop
mov
fcmove
mov
jns
mov
rorl
inc
mov
adc
stos
xchg
int
cli
mov
xchg
push
in
imul
and
dec
add
fidivrl
ret
or
fucomip
cmp
test
loope
clc
iret
inc
cmp
test
push
roll
int3
push
add
stos
or
in
cs
fistps
sbb
push
arpl
push
inc
negb
xchg
mov
test
push
testb
jo
loope
adc
jmp
xchg
dec
mov
adc
sbb
loope
ret
call
sti
xchg
aas
shlb
je
lahf
cmpw
shrb
movsb
sbb
mov
lods
jns
addb
cmp
hlt
leave
or
insb
lods
sub
cli
in
adc
mov
mov
mov
sub
xchg
pop
popf
sub
lods
cmp
mov
pushl
inc
xchg
cmc
clc
or
scas
in
dec
movb
cmp
or
outsl
add
enter
cmp
lods
dec
and
je
xchg
in
scas
and
xor
sub
fmuls
jns
sahf
dec
and
addl
ret
push
imul
call
lret
inc
mov
call
loopne
dec
mov
fdivs
push
sti
sbb
mov
scas
adc
jp
out
xchg
pop
imul
rcrl
repz
inc
leave
mov
icebp
fcomp
add
jmp
fbld
xchg
iret
faddl
or
xchg
adc
jg,pt
cmp
es
adc
subb
mov
or
sub
inc
add
jecxz
divb
test
jo
fisttps
mov
inc
mov
dec
clc
sub
insb
add
adc
add
jo
mov
xor
xchg
sub
or
jecxz
xchg
cmp
leave
lret
inc
jmp
inc
cld
push
out
daa
pusha
ror
sbb
jmp
insb
loope
subb
inc
jle
pop
mov
adc
dec
movsb
sub
dec
push
mov
push
mov
insl
aam
mov
aaa
cli
or
cli
gs
insb
imul
into
int3
add
daa
mov
xchg
jg
fwait
popf
xchg
mov
cmp
cli
xorb
inc
aaa
incb
adc
ret
cmp
fstps
call
stos
xor
mov
aaa
lcall
pop
es
cwtl
jo
fcompl
pop
loopne
adc
push
scas
lahf
sub
pop
shlb
sbb
xor
cmp
arpl
in
dec
or
or
xor
subl
push
loope
or
adc
jns
sub
xor
mov
dec
push
or
loope
mov
imull
call
ljmp
push
fcompl
test
add
in
push
cmpb
sti
dec
adcl
or
jb
fildll
int
jl
cmpsl
xchg
andl
jl
mov
je
ljmp
fldenv
dec
push
mov
iret
or
jmp
xor
add
or
push
je
push
adc
sub
mov
shll
push
mov
test
inc
sub
int3
ret
ficomps
shll
push
inc
fs
mov
call
mov
shll
gs
dec
dec
xchg
fldcw
mov
jecxz
icebp
loopne
lods
cli
movsb
inc
cmpsb
xchg
push
xchg
adc
or
repz
jl
cmpsl
mov
es
in
sbb
pop
mov
inc
xorb
rolb
sub
lds
mov
stos
nop
shlb
outsl
jbe
and
inc
test
dec
cmp
cmp
pop
lret
les
cwtl
outsl
mov
mov
jle
sub
dec
test
test
and
or
das
sbb
xchg
loop
mov
pop
adc
mov
fs
rorb
loope
and
nop
jl
je
fcomp
add
sbb
lock
xor
std
push
add
adc
pop
mov
notb
or
in
sti
fld
adc
pop
add
out
sub
lods
adcb
lcall
je
rclb
test
sti
jmp
cmp
fnstcw
int
in
loope
inc
xchg
pop
lods
cli
and
fwait
dec
repz
sub
pop
mov
jmp
cmp
stos
xchg
cmp
pop
movsl
daa
xchg
fs
xorl
xor
push
int3
lcall
xlat
sub
icebp
and
dec
adc
out
pop
loope
xor
jnp
or
mov
cmp
mov
jg
fnstsw
fsubrl
or
push
sub
xchg
cmpsb
mov
mov
add
jecxz
push
cmc
fstl
pop
pop
mov
or
std
sbb
xor
mov
daa
aam
lods
pop
push
aaa
je
and
mov
popf
dec
decb
lds
ljmp
sub
mov
jnp
lods
sbb
xchg
and
lahf
stos
je
xchg
mov
and
inc
fwait
pop
insb
dec
xchg
shl
push
push
mov
xorb
jl
push
pop
mov
pop
nop
mov
fcompl
push
pop
cmc
arpl
dec
pop
push
ds
sub
fwait
and
pop
test
test
sbb
cltd
or
in
xchg
pop
stc
repz
xchg
push
mov
icebp
add
pop
mov
xchg
xor
nop
in
mov
adc
jle
loopne
cmp
add
xchg
int3
shll
mov
push
loope
cmp
cmp
push
loop
mov
xchg
inc
in
ret
fwait
and
fistpll
sahf
icebp
cmpsl
jle
mov
sub
in
fs
pop
adc
adc
lods
jns
mov
lret
pop
rolb
xchg
jo
and
cmc
je
xchg
push
movsl
push
mov
rcrl
mov
cwtl
in
aam
mov
insb
mov
push
add
adc
imul
push
addb
std
xorb
cld
stos
faddl
lods
mov
mov
push
ret
clc
mov
hlt
adc
cmc
lret
cmpsl
outsl
inc
stos
mov
ss
ret
mov
les
push
xchg
lods
lea
lret
lahf
cmp
das
jecxz
rclb
jbe
les
mov
scas
pop
adc
rcrl
jno
stc
mov
dec
call
xor
mov
mov
add
pop
out
mov
or
arpl
sub
pop
pop
pop
sbb
xchg
add
movsb
sti
imul
inc
stos
seto
in
out
sub
mov
xchg
dec
repz
xlat
mov
inc
repnz
and
push
addr16
std
loope
xor
test
test
pop
test
loopne
and
sub
repz
movsb
idiv
inc
push
bsf
sti
mov
pop
scas
stos
insb
aas
xchg
mov
jmp
push
ds
xchg
js
fldt
inc
loop
dec
cli
cmp
mov
fcoms
daa
xchg
mov
je
push
rcr
cmp
movsb
mov
ds
test
fsubl
mov
ss
sbb
lret
mov
push
rcrb
and
rcrl
imulb
add
fistpll
outsl
inc
int
cs
lods
aas
dec
pusha
popf
vpsubusw
fistpl
and
loopne
adc
test
ss
mov
cltd
notb
push
cli
rcrl
xchg
dec
fwait
xchg
xor
dec
test
add
mov
adc
mov
inc
jmp
add
xor
cmp
cmp
adc
adc
mov
out
xchg
jb
mov
lcall
out
jbe
std
jns
adc
push
scas
mov
cmp
imul
push
aad
xchg
int3
sbb
sbb
loop
inc
mov
push
push
mov
mov
jge
fcmovbe
adc
out
in
push
sbb
inc
mulb
lret
mov
or
inc
add
cld
shl
dec
mov
mov
aas
popf
mov
xchg
and
fstpt
sub
roll
adc
movsb
stos
pop
lret
test
ljmp
scas
pop
in
pop
cmp
jo
mov
mov
insb
dec
ret
pop
cmp
lret
sbb
jecxz
sub
imul
inc
cmp
xor
and
xorb
xchg
imul
stos
movsl
sub
fnsave
jge
test
push
rclb
icebp
lds
lods
hlt
arpl
push
leave
and
push
stos
pop
mov
js
xor
aam
xor
lods
jg
in
out
shlb
fcmovnb
or
call
jmp
ret
push
dec
mov
lds
cmpsl
addr16
stos
and
clc
dec
pop
push
dec
push
xchg
sbbb
mulb
mov
mov
stos
jecxz
inc
out
loopne
lahf
xor
aaa
pop
out
fwait
je
aaa
mov
mov
sti
rclb
out
int3
mov
call
and
push
push
fstpt
or
gs
nop
or
xchg
and
fisttps
push
or
mov
std
popf
idivb
mov
jnp
ss
mov
std
stc
or
in
dec
mov
adc
popf
mov
int
pushf
xchg
pop
call
icebp
jge
inc
shrb
lods
pop
inc
add
mull
jb,pn
cmp
cmp
faddl
subb
xchg
pop
jb
mov
out
mov
les
mov
clc
or
bswap
mov
rcrb
or
cwtl
xor
adc
data16
call
stc
leave
imul
ds
int
push
aam
xchg
jmp
push
cs
mov
cmp
mov
push
push
stos
cmp
jg
enter
out
test
clc
xor
push
repz
pop
addl
or
imul
sub
ds
jne
out
push
mov
insb
je
push
jno
fsubrs
push
mov
enter
inc
xor
enter
rol
or
xchg
aaa
push
lret
sub
push
outsl
push
adc
mov
dec
or
imul
jge
mov
repnz
mov
out
dec
icebp
push
decl
out
je
addr16
mov
jle
loopne
inc
sti
cltd
cmpb
xor
lods
dec
push
mov
push
push
mov
xor
and
jns
fld
jo
dec
es
int
inc
test
pop
test
testl
popf
dec
and
shrd
xchg
test
leave
and
and
test
arpl
push
inc
in
test
push
in
sahf
fmuls
push
mov
push
rol
push
test
loope
jge
popa
jg
js
stc
and
out
je
stc
cltd
cmp
sarb
and
mov
or
xchg
inc
adc
pop
push
jmp
sub
adc
pop
fildl
add
xchg
neg
and
arpl
xchg
mov
les
loopne
subb
mov
leave
mov
std
bound
sbb
push
and
pop
test
js
sbb
mov
jb
xor
aaa
sub
stos
push
test
and
pop
fs
inc
mov
xor
aam
sbb
stos
push
xchg
xchg
adc
xchg
ftst
arpl
jecxz
ljmp
out
sbb
mov
pop
push
sbb
insl
std
inc
mov
scas
out
cli
rclb
into
gs
mov
adc
test
add
push
pandn
push
cmp
movsb
jns
test
lods
mov
mov
xor
ljmp
test
mov
bound
outsl
loopne
mov
adc
mov
mov
fs
test
add
enter
push
daa
inc
push
cmp
pop
lcall
pop
adc
aad
sub
pop
idivl
aas
fistl
fs
in
out
mov
sub
pop
js
adc
fistl
xchg
cwtl
push
ds
or
clc
jbe
arpl
stos
scas
sub
int3
out
inc
add
jae
fbstp
or
xchg
inc
mov
ds
mov
dec
push
push
push
mov
push
dec
dec
fsubrl
icebp
shll
jbe
add
fisubrs
cld
sbb
shll
mov
hlt
rclb
xchg
add
adc
fistps
xchg
clc
and
leave
or
orb
xor
rorb
movsb
arpl
ja
push
xor
push
lcall
sub
fistl
push
insl
das
xchg
data16
mov
sti
fisttps
loopnew
pop
mov
dec
xchg
ljmp
xlat
dec
stos
outsb
pop
xlat
pop
mov
sub
jns
push
jle
out
out
in
mov
jmp
mov
mov
sahf
dec
test
mov
xor
mov
cmc
pop
ljmp
flds
xor
push
outsb
jle
mov
mov
mov
mov
das
loop
mov
divb
fiadds
cld
mov
movsb
xchg
stos
inc
shrb
mov
mov
xor
sub
xchg
adc
jb
das
xor
ja
or
jle
sub
mov
sbb
out
sbb
ss
imul
jno
push
adc
or
test
scas
push
int3
dec
cld
ljmp
add
xchg
mov
push
sti
dec
push
rorb
mov
jns
xor
mov
shlb
test
mov
je
cmp
pop
mov
and
sti
cmp
lea
push
shll
jle
adc
repnz
push
outsb
dec
or
pop
adc
sub
sbb
jae
xlat
cmp
mov
xor
loop
cmp
xorl
sarl
into
xor
clc
ds
cmc
cmpsb
push
sub
sub
cmp
jbe
aad
shl
pusha
ja
rcrb
pop
mov
jl
or
rol
icebp
mov
fs
stos
mov
push
les
jle
sub
repz
lahf
enter
mov
mov
mov
dec
bound
ret
cltd
cmp
push
xor
cmp
and
hlt
rcrb
mov
xor
lret
bound
adc
xchg
mov
loop
mov
fstpt
scas
pop
jb
jge
xorl
or
inc
cmpb
lock
and
in
aas
sub
nop
jmp
imulb
push
and
mov
push
dec
fisubrl
sbb
stc
cwtl
pop
call
out
dec
pop
imul
jae
icebp
mov
inc
icebp
xchg
xchg
data16
and
dec
lds
nop
mov
mov
into
cs
loopne
call
dec
imul
frstor
sbb
bound
jb
nop
xchg
lods
outsl
jp
fsub
mov
mov
dec
jl
pop
mov
pop
jl
push
mov
adc
jmp
ret
mov
or
dec
sub
gs
iret
cmp
push
les
mov
ljmp
std
push
push
mov
minps
add
inc
push
and
adc
icebp
xor
gs
out
or
adc
outsb
fldl
lods
push
xchg
aam
out
add
jbe
mov
ret
ret
sbbb
daa
jnp
test
push
and
addb
sub
gs
sahf
insb
dec
push
rclb
xchg
icebp
lahf
and
cld
mov
into
arpl
cmp
mov
jp
decb
dec
mov
pop
xor
push
ss
sbb
out
xchg
adc
add
xorl
sti
cmpsl
sub
add
mov
flds
or
jo
in
ja
ret
sub
push
jo
fnsave
loope
arpl
repnz
push
mov
loope
add
insl
mov
out
out
fcmovnb
in
push
xchg
inc
add
inc
rclb
daa
jl
pop
and
lds
inc
adc
outsb
lods
dec
pop
int3
ds
adc
push
mov
xchg
pop
rorl
cmpsl
in
lret
ss
out
xchg
cmp
mov
jnp
inc
xor
fld
xor
aas
pop
dec
dec
std
sbb
and
sbb
mov
sub
aam
jle
xchg
cmp
sbb
bnd
mov
ret
jb
popf
ljmp
or
add
adc
subb
aam
adc
mov
daa
outsb
or
sbb
pop
add
mov
aas
mov
mov
mov
sub
aas
sub
dec
cmp
test
in
test
std
jb
icebp
cld
jecxz
fs
xchg
sub
jbe
push
mov
jo
imul
push
push
inc
pop
xchg
jae
lods
cmp
cmp
mov
xor
mov
mov
cs
xchg
movsl
shrb
xchg
cmp
loop
dec
fwait
push
push
inc
lea
push
mov
aaa
addr16
arpl
cmc
pop
inc
xchg
imul
aam
jbe
jge
mov
add
ret
cli
pop
mov
fstps
ret
push
cli
fstpt
pop
sub
ror
cmp
mov
xor
adc
les
mov
mov
sub
pushf
ret
pop
push
inc
test
push
inc
xor
pushl
jno
mov
roll
ret
lret
adc
adc
adc
push
sbb
sbb
mov
jg
frstor
add
xor
push
cmpsl
mov
addr16
sbb
cld
xor
flds
nop
hlt
and
push
xlat
je
fists
in
loope
add
sub
pop
mov
add
rorl
adc
add
mov
xchg
mov
adc
mov
pop
ror
fidivrl
push
daa
or
push
or
sbb
fs
lock
popf
stc
lea
xchg
fiadds
out
inc
fistl
mov
pop
ucomiss
dec
push
ds
mov
aaa
mov
push
dec
mov
sbb
test
mov
push
sub
sub
jb
into
inc
mov
xchg
hlt
lods
mov
inc
cld
std
xchg
sbb
and
and
mov
mov
xchg
mov
sbb
jns
bound
jnp
cwtl
sbb
pop
les
les
hlt
mov
lds
sbb
xor
clc
push
push
in
inc
mov
inc
mov
adc
inc
mov
mov
addb
test
pusha
js
mov
fcmove
jns
dec
inc
pop
sbb
es
jecxz
fsubl
xor
loope
mov
jle
pop
sub
mov
in
inc
and
cmp
jne
cmp
sub
clc
push
lret
sbb
mov
jmp
or
stos
gs
outsl
dec
xchg
into
pop
movsl
out
xor
sbb
je
shl
push
sub
arpl
outsb
inc
push
xor
sbb
sar
movsl
jnp
hlt
repz
call
dec
nop
jge
pop
hlt
divb
stos
push
mov
inc
ljmp
pop
das
cmp
adc
sub
iret
ret
dec
dec
jne
fidivrl
and
push
pop
pop
ja
imul
psraw
or
and
push
cld
jg
aas
inc
dec
int
sahf
jae
daa
jmp
jg
mov
and
pop
inc
hlt
push
pop
inc
mov
jl
dec
dec
cmp
lea
sub
and
pop
inc
mov
test
mov
lea
jns
add
out
xchg
pop
clc
hlt
push
rcrb
jo
stos
mov
jmp
lcall
mov
inc
rcll
clc
jbe
mov
outsb
mov
imulb
hlt
cmpsb
movsb
ljmp
mov
xor
inc
aam
inc
push
mov
movsl
xchg
mov
or
lahf
mov
or
sbb
xchg
test
jge
xchg
lods
sbb
cli
add
jmp
cwtl
add
mov
adc
xlat
sbb
xor
xchg
jecxz
imul
shl
icebp
or
fstpt
fmull
int3
pop
je
dec
fists
pop
mov
addl
ljmp
lods
sub
insl
adc
cmp
loopne
lahf
xor
ds
fwait
lahf
cwtl
mov
and
jns
jl
pop
test
adc
pop
push
out
mov
mov
int
cs
push
mov
sub
adc
add
cltd
and
sub
leave
xchg
es
jg
xor
fstp
xchg
add
mov
adc
scas
inc
fisubs
jmpw
dec
cwtl
push
sbb
jae
jmp
dec
inc
cmc
rorl
push
and
popf
fs
sahf
xchg
jo
mov
xor
dec
push
sarb
lods
iret
add
add
inc
mov
in
mov
lea
or
push
rdtsc
push
inc
movl
jno
xor
gs
out
sbb
outsb
fldcw
jmp
cmpsl
sbb
xlat
sbb
stos
jp
aam
stc
stos
jns
sub
sub
mov
xchg
fisubs
xchg
movsb
int3
adc
or
pop
in
inc
push
dec
inc
xor
fisubs
cwtl
ds
mov
stos
pop
sub
in
pop
inc
out
mov
jo
dec
add
stc
ss
nop
dec
stos
pop
fisttps
arpl
icebp
dec
arpl
repnz
mov
mov
aaa
mov
in
sbb
shl
cld
fs
clc
mov
or
pop
inc
insl
ljmp
xchg
or
push
scas
add
hlt
sub
xor
hlt
cltd
push
xchg
mov
and
mov
mov
mov
or
lods
dec
or
ficompl
outsb
pop
sub
cld
imul
and
mov
sti
mov
mov
int3
imul
and
mov
lods
lea
loopne
decl
mov
mov
shrb
mov
cs
lret
not
xlat
pop
gs
sub
push
sub
imul
mull
or
pop
mov
rcr
push
sbb
les
xor
dec
push
mov
outsb
push
jle
sbb
sbb
fbld
pop
mov
xchg
push
pop
jae
cmp
fistl
or
mov
mov
xchg
in
popf
push
xlat
pop
insl
xchg
adc
mov
das
push
outsl
je
xchg
mov
out
sub
xchg
inc
in
rorl
in
sub
inc
xchg
xchg
pop
cld
mov
mov
and
mov
sbb
xor
and
fistps
insl
aaa
push
add
jns
push
lret
push
mov
xchg
mov
pop
pop
pop
aas
xchg
and
push
roll
ja
test
jle
mov
mov
test
movsl
push
xchg
adc
and
in
es
jno
add
jno
cmp
xor
push
dec
inc
sub
sub
push
in
mov
inc
rorl
shrb
adc
daa
mov
xchg
leave
cmp
pop
or
out
outsl
and
fldcw
sub
popf
jnp
cmp
mov
imul
icebp
jp
into
cmpsl
popf
test
fcmovne
dec
mov
xor
jb
add
ss
test
dec
shrb
sbb
and
pop
inc
sti
xor
shlb
push
mov
ss
push
cs
sbb
dec
push
push
xchg
das
xor
mov
jmp
inc
rcrb
leave
sahf
jg
repz
cmp
test
xor
daa
pop
pop
out
in
aad
sbb
sahf
ret
fsubl
dec
stos
daa
cwtl
idivb
pop
add
rolb
mov
repz
dec
movsb
and
fildl
sub
jo
inc
fildl
pop
jecxz
and
xchg
lret
divb
je
pop
mov
imul
mov
fdivrs
lret
inc
add
jb
loopne
mov
or
push
nop
jbe
inc
aas
cwtl
and
aaa
mov
scas
fwait
inc
mov
mov
mov
aad
mov
mov
scas
js
xchg
xor
or
mov
pop
mov
and
push
stos
aad
call
xchg
push
shll
or
lret
ljmp
rorl
and
dec
adc
cmovge
jno
pop
inc
add
push
cwtl
repnz
sub
xchg
or
cmp
imul
add
lock
push
dec
daa
sub
notb
call
dec
mov
loop
ret
das
push
mov
dec
cwtl
inc
mov
and
sahf
fiaddl
xchg
lahf
in
pop
adc
inc
pop
cmp
push
lock
mov
std
js
xor
jnp
shll
adcl
jns
data16
rolb
mov
mov
dec
mov
adc
gs
scas
adc
push
sub
daa
cli
gs
pop
inc
enter
adc
dec
hlt
pop
pop
rol
aad
xor
push
adcl
loopne
and
and
sub
sbb
adc
mov
mov
and
cs
pop
aad
push
dec
pop
insl
or
pop
test
insb
and
mov
mov
mov
xlat
xor
shll
shrb
ret
loop
push
push
cmpsl
xor
push
mov
mov
subb
push
arpl
pushf
je
imul
pop
xor
lock
mov
push
mov
sbbb
jno
mov
dec
std
dec
test
fwait
pop
mov
cwtl
push
cmp
inc
add
daa
jl
dec
test
sahf
bound
lret
aaa
pop
push
inc
jae
xchg
shl
insb
mov
sahf
or
sub
stos
ljmp
cs
or
cmp
rcl
ret
add
cmp
adc
in
cltd
or
and
mov
push
jl
and
cmp
cmp
pusha
fidivrs
lcall
xor
jne
shrb
mov
xor
leave
xchg
aas
jne
jge
mov
dec
dec
arpl
fcoms
fdivl
lods
jno
push
movsl
shl
sbb
push
mov
ss
iret
stc
xor
mov
xchg
xchg
mov
jmp
mov
iret
xchg
outsb
movsb
inc
sbb
xor
call
or
test
mov
sbb
outsl
stos
mov
jne
aad
push
mov
push
add
mov
inc
mov
nop
jnp
cmp
dec
add
sub
adc
push
xorb
cmp
leave
mov
ss
sub
test
mov
icebp
mov
movsl
rclb
add
imul
je
mov
add
xor
mov
movsb
sbb
mov
xor
fcomps
sbbb
inc
subb
xchg
clc
xor
dec
aam
mov
xchg
push
jb
xor
inc
fidivrl
jmp
cs
jl
sub
jns
shrl
adc
sub
and
addr16
push
imul
and
cmpsl
call
ds
pushw
fisubs
jp
dec
ror
mov
outsl
out
out
int3
sbb
enter
mov
add
pop
or
sbb
adc
push
inc
mov
jb
lock
sbb
adc
in
out
xlat
sbb
inc
lock
push
rol
sub
sub
sbb
adc
xchg
push
xchg
cmpsl
bound
shr
mov
pusha
inc
and
insb
mov
adc
adc
mov
push
addr16
or
push
push
idivl
aad
add
or
cwtl
shlb
dec
mov
ds
jp
les
in
ret
cmp
mov
inc
and
call
mov
sbb
ljmp
mov
fwait
scas
shr
and
push
ret
js
ret
sahf
push
jo
ret
sub
cmp
jo
test
lods
rclb
cmp
movsb
out
sub
into
mov
test
mov
addr16
rsm
test
fldcw
xchg
jecxz
pop
shlb
and
fwait
std
js
repnz
test
adc
inc
les
mov
jmp
ljmp
dec
mov
fcmovu
mov
pop
ds
and
stos
fbstp
adc
sub
bound
inc
mov
cwtl
mov
push
hlt
cmp
lods
fmuls
scas
jle
push
scas
ror
ds
sbb
outsb
jo
xchg
add
pop
inc
stc
xchg
jo
pop
fnstcw
es
sub
add
cld
int3
shll
add
repnz
cmp
pop
lret
int
adc
dec
lock
pop
lahf
stc
jo
inc
jecxz
jmp
add
mov
mov
pop
or
fisubs
sbb
jmp
test
divl
fs
mov
mov
loope
mov
in
mov
inc
cli
lods
call
insl
pop
in
outsl
data16
inc
scas
adc
lahf
out
leave
jp
sub
push
cmp
xchg
mov
adc
test
aas
arpl
outsl
pop
sbb
push
dec
mov
movsl
mov
pop
gs
aaa
xchg
jp
and
ret
and
arpl
xor
adc
add
push
xchg
lret
dec
mov
movsb
mov
pop
in
pop
je
mov
xlat
les
iret
push
xchg
in
je
mov
or
inc
xchg
movsl
dec
mov
imul
fldcw
mov
cmp
xor
push
out
xor
dec
inc
scas
add
sbb
dec
add
mov
push
push
sub
out
out
test
add
lcall
daa
shll
mov
push
pop
dec
fidivl
lea
sti
pusha
fmuls
and
sti
shll
mov
cltd
mov
adc
std
mov
cmpsb
mov
hlt
jecxz
sbbl
push
mov
insl
clc
push
les
push
push
mov
orl
js
aaa
sub
cmpsl
mov
stos
out
jo
add
imul
jl
jbe
and
popa
adc
push
xchg
pusha
dec
jns
xor
inc
nop
ss
push
cmp
outsl
or
sahf
gs
rol
xchg
call
or
mov
mov
ss
scas
jl
mov
das
mov
sub
xor
mov
mov
fadds
dec
ret
dec
sub
dec
cmpsl
jp
clc
fists
dec
mov
call
in
pop
xchg
insl
xor
sbb
pop
idivb
inc
mov
jne
lcall
jb
mov
test
movzwl
adc
jl
divb
in
or
lods
jp
mov
push
adc
sub
fcomps
pop
ror
std
lahf
jae
push
mov
fnstcw
jl
into
addr16
and
inc
lcall
sbb
or
lock
mov
dec
loope
xor
push
cmp
push
and
in
and
int
leave
arpl
add
imul
cmp
insb
jbe
enter
roll
or
stos
and
lods
lcall
inc
xor
scas
add
pop
cld
cmc
sbb
sbb
sub
sub
pop
sbb
push
fidivrl
sahf
xchg
jecxz
mov
push
xchg
push
mov
fcompl
aam
in
dec
inc
xor
push
xlat
loop
push
sub
cmpsl
movb
push
je
pusha
insl
movsl
sbb
mov
out
fisubrs
dec
outsl
sbb
mov
xor
sbb
add
aad
jo
pushf
xchg
or
fdivs
pop
dec
jge
add
decb
ds
loope
in
cs
sahf
in
pop
jae
shll
cmp
mov
add
xor
add
psubb
stos
fs
fsub
cmpsb
inc
or
xor
pusha
jecxz
ljmp
pop
inc
mov
movsl
enter
cld
fstps
sahf
pop
or
pop
xor
gs
ret
pop
cmp
jge
call
xchg
mov
dec
addr16
js
and
adc
data16
inc
into
inc
and
mov
inc
test
inc
in
rcll
jns
lahf
cmp
mov
or
ljmp
and
jne
push
sbb
add
loopne
mov
decl
xor
in
mov
leave
sbb
cmp
popa
jo
add
stos
inc
sahf
les
sahf
xor
pop
push
mov
dec
rorb
fimuls
notl
push
in
loop
out
dec
mov
rol
les
sbb
push
cmp
add
cmpsb
mov
dec
sbb
imul
aad
jns
cmpsb
jno
in
inc
push
xlat
sbb
sbb
xorl
jnp
inc
pop
stc
pop
jecxz
dec
jo
pop
loop
cmp
adc
fsubrp
sub
mov
ret
cmp
or
dec
sahf
inc
ljmp
dec
hlt
mov
test
outsb
xor
push
lret
mov
or
out
cltd
mov
scas
loopne
add
push
pop
mov
subl
mov
dec
sbb
xchg
rcrl
cwtl
dec
shll
pop
stos
push
or
leave
xchg
add
lret
lahf
cmp
in
test
cwtl
push
mov
pop
xchg
adc
cmp
dec
add
mov
icebp
ja
jb
enter
pop
jecxz
out
scas
mov
ret
notb
sbb
mov
sub
inc
or
or
sbb
xchg
inc
push
jmp
ja
sub
outsl
sti
and
imul
ret
in
pop
push
sbb
pop
mov
pop
xchg
pusha
gs
fldl
imul
pop
scas
shr
cld
push
xchg
aas
popa
bound
hlt
cltd
cwtd
ret
sbb
daa
push
sbb
lods
fdivs
rorb
leave
outsb
jae
or
andb
jbe
outsl
loop
mov
lods
dec
or
mov
add
shrb
hlt
into
out
mov
and
jle
call
pop
jmp
and
loopne
xchg
jno
lret
idivl
test
sbb
popa
stc
jl
sub
int3
jge
lods
xor
sti
std
ficompl
push
repnz
movsl
adc
lea
pop
jbe,pt
dec
mov
jb
mov
aas
pop
xor
or
jecxz
push
push
or
adc
cmp
xchg
gs
add
mov
sahf
orl
xor
sti
movsl
jle
jno
je
sbb
cs
ret
cmpsb
or
mov
mov
test
movsb
cmp
fmull
pop
std
adc
add
xor
shrl
mov
xchg
dec
jl
enter
pop
xor
xor
pusha
inc
and
jecxz
imul
imul
inc
mov
sub
xor
loopne
cs
imul
int3
imul
mov
sub
imul
push
push
in
in
pop
or
aaa
xchg
ja
mov
insb
xorb
jnp
ds
lret
outsl
fistps
cwtl
mov
cmp
mov
test
mov
lds
or
jge
sbb
mov
sti
or
pop
cmpsl
push
push
inc
xchg
mov
rorb
push
cmpsl
xchg
outsb
lods
xor
cmp
pop
clc
xchg
cmp
clc
out
shrb
aas
mov
std
and
fidivrl
dec
sahf
mov
das
mov
imul
ja
or
adc
lret
divb
mov
lds
iret
lret
inc
popa
cli
das
adc
sub
adc
cmp
pop
pop
mov
pop
or
adc
stos
sub
push
cmp
dec
xor
popf
jg
mov
add
dec
int3
loope
std
popa
inc
add
inc
xor
pop
adc
and
je
divb
rorb
and
sub
pop
arpl
test
and
lahf
pusha
pop
imul
jns
test
lahf
push
mull
ss
xchg
shll
lahf
or
insl
stos
xchg
clc
mov
dec
push
sub
nop
or
dec
divb
iret
out
rorb
push
movsb
jle
mov
mov
mov
ss
aad
popf
sbb
adc
ret
xlat
sbb
inc
movsl
insb
cmp
mov
fistpl
mov
jo
jg
sbb
and
je
and
int3
jl
subb
ds
pop
xchg
and
jge,pn
ja
or
cmp
sbb
imul
shrb
test
pop
stos
clc
pop
imul
outsb
hlt
popf
xor
and
in
dec
fiaddl
movsb
mov
int
clc
or
pop
cmpsb
divl
cli
cmc
movsl
daa
sbb
xchg
movsb
dec
pop
push
adc
mov
mov
ljmp
fs
test
or
repnz
loop
sbb
jb
in
xchg
xchg
imul
add
stos
pop
adc
jg
out
dec
sub
cli
push
push
out
in
scas
daa
jg
and
mov
push
mov
push
int3
movsb
pop
cwtl
pop
pop
xchg
mov
add
push
fidivrs
aad
mov
mov
xchg
mov
cmp
repz
and
repnz
ljmp
loopne
ss
dec
xor
add
test
lds
rolb
dec
dec
sbb
xor
arpl
push
je,pt
xchg
and
popa
scas
int3
paddsw
icebp
jne
push
xchg
xor
pop
pop
int
nop
mov
adc
test
pop
push
ficomps
jmp
inc
add
xor
mov
pop
cmp
es
mov
adc
mov
add
xor
psraw
push
jno
nop
subb
sbb
lock
jmp
movsb
push
es
mov
test
js
pop
xor
mov
adc
mov
leave
popa
fadds
orb
xorl
loopne
cwtl
cmp
or
cltd
insb
add
push
dec
imul
push
iret
lock
ljmp
mov
pop
hlt
jge
rclb
jmp
and
repnz
stos
in
sub
xchg
xor
stc
cmpsb
push
push
in
xchg
mov
jecxz
stc
pusha
sub
icebp
sbb
xchg
pusha
push
lret
mov
inc
je
or
sub
pop
pop
in
clc
out
cmpsl
dec
imul
and
xchg
xor
scas
incl
nop
call
pop
sbb
pusha
insl
insl
jb
pop
xchg
lods
or
sub
dec
loop
dec
add
inc
xchg
jge
mov
lea
adc
cmp
arpl
subb
jg
jecxz
les
arpl
stc
mov
mov
dec
ret
or
lods
int3
imul
mov
pop
cli
test
call
pop
movsb
xchg
cwtl
add
sahf
lcall
adc
or
lea
ja
jo
int
in
popa
mov
scas
inc
ret
and
insl
dec
pop
or
sbb
out
mov
inc
enter
pusha
call
mov
pushw
sbb
fmull
js
outsl
sti
mov
jnp
sub
mov
gs
mov
shrl
mov
scas
aaa
pop
test
mov
shl
pop
addr16
cmp
je
sar
cmp
xor
je
ret
cmp
jne
cs
jo
cwtl
das
sub
pop
shr
loope
add
int3
add
mov
test
call
es
dec
aad
scas
pop
mov
shll
cmp
rolb
or
and
stc
pop
xchg
loopne
inc
bound
std
adc
ret
dec
push
pop
mov
movsl
insb
push
xchg
push
jmp
fisubrl
lock
call
jmp
dec
out
call
or
or
lea
sti
push
pop
subb
fidivl
les
inc
mov
out
add
data16
xchg
and
popf
fmuls
mov
mov
inc
arpl
lahf
pop
ja
jns
and
push
xor
jp
in
or
mov
repnz
jno
and
inc
dec
sub
in
inc
popa
lods
repnz
popf
pop
popf
imul
fbstp
cmp
or
jle
pusha
stc
mov
cmpsl
jecxz
fwait
mov
push
push
sub
inc
xchg
xchg
les
sub
fistl
test
add
adc
mov
xor
int
fnstsw
ds
lret
push
xor
cmp
sub
fs
mov
inc
sbb
add
mov
jae
fwait
lods
pop
or
fsubrl
pushf
xchg
mov
mov
pop
or
inc
inc
pop
sbb
push
mov
rcll
or
xor
adc
mov
shlb
cmp
jb
xchg
addr16
jo
push
or
sub
adc
cmp
std
cltd
loope
cs
pop
div
sti
scas
lret
mov
xor
inc
mov
imul
sti
xor
aam
jbe
adc
xor
jno
push
insb
aad
scas
pop
or
aad
insl
jmp
dec
into
roll
je
inc
shl
movsb
add
ja
mov
cmc
jle
sbb
outsl
gs
xor
xchg
int3
push
mov
jb
popa
fidivrs
insl
xchg
mov
orb
andl
lahf
cmp
cmpb
bound
inc
fsubr
shl
push
mov
mov
iret
lahf
push
pop
cmc
pop
outsl
adc
xchg
int
cmp
bound
inc
dec
in
mov
sub
lods
push
mov
dec
mov
je
cmp
and
adc
bound
mov
or
lock
sahf
sub
fdivs
or
pop
jne
inc
add
orb
cmp
sahf
mov
or
imul
sub
cmpsb
push
scas
dec
or
adc
icebp
sahf
add
sub
inc
adc
mov
in
mov
mov
lods
jno
arpl
sbb
lock
push
lahf
xchg
bswap
orl
cmp
mov
cmp
cld
mov
sahf
stos
movsb
and
stos
adc
dec
xor
cli
pop
pop
push
push
push
jnp
xlat
or
imul
iret
sbb
jge
maskmovq
idivl
fsubrp
xchg
imul
outsl
arpl
and
mov
fsubs
aas
mov
mov
add
pop
lods
leave
fisubl
std
push
test
sub
cmp
xchg
mov
out
inc
test
fiaddl
sqrtps
mov
xor
lods
push
or
add
inc
lcall
arpl
out
ja
lret
sbb
cmp
sub
xor
je
sti
scas
jge
push
pop
icebp
jmp
pop
shlb
xchg
dec
xchg
test
nop
or
jbe
inc
iret
lret
inc
stc
out
hlt
inc
dec
push
add
dec
sub
mov
divl
jae
lahf
add
add
adc
dec
in
mov
in
enter
jge
sub
pop
repnz
pushf
jns
in
dec
test
adc
in
push
les
in
mov
sti
notb
cmpsl
mov
in
add
mov
idivl
jno
mov
ret
xchg
xchg
jns
push
enter
dec
mov
scas
xchg
or
sub
and
cmc
fcomps
push
mov
mov
sub
inc
jmp
dec
insb
ja
pop
push
rcr
mov
ja
lahf
xor
lcall
push
pop
outsl
cmp
mov
cmp
pop
daa
stc
ja
mov
xor
push
inc
lret
and
adc
in
push
jae
add
xchg
mov
push
mov
sti
insb
es
mov
into
pop
add
mov
cld
repz
push
mov
fsubrs
or
add
jmp
xlat
or
filds
xchg
pop
mov
into
xchg
sbb
ret
insl
sbb
flds
xor
testl
mov
lds
xchg
and
dec
icebp
xlat
pusha
std
inc
ret
mov
leave
int
sti
jge
jmp
xor
jbe
mov
sar
sti
enter
xor
ja
dec
jle
into
inc
ja
stos
aad
adc
cltd
or
out
add
rcrl
cmp
icebp
sbb
iret
sub
mov
cmpsl
outsl
mov
in
adc
dec
std
sahf
ret
aas
cwtl
sub
add
shl
dec
dec
lret
inc
cli
xchg
lret
frstor
cmp
in
ds
mov
cld
and
cli
cli
mov
xchg
mov
in
mov
sahf
addr16
mov
lods
addr16
add
daa
push
dec
and
add
add
jae
pop
sub
orl
xor
cld
movsl
jge
fwait
lock
lds
push
sti
xor
push
mov
std
mov
jmp
lret
lods
les
outsb
jl
stc
mov
loop
mov
push
cmp
cmp
mov
es
jb
iret
mov
ds
adc
pop
mov
daa
mov
add
mov
push
cmpsl
int
xor
sub
inc
jmp
ret
addr16
xchg
stos
lock
movsb
and
push
jl
xchg
jmp
stos
mov
aad
andb
jnp
stc
iret
pop
in
test
inc
out
mov
mov
loope
pop
and
mov
xchg
nop
ljmp
mov
nop
rcl
nop
jae
mov
xchg
mov
xlat
mov
and
nop
loop
js
shr
in
inc
cmpsl
sub
idiv
sub
adc
es
pop
aam
ja
dec
lods
jno
and
cmpsb
pop
ss
mov
leave
out
sub
out
scas
pop
decl
mov
dec
mov
xchg
lock
jge
add
movsb
cltd
insb
or
jp
aaa
iret
cmp
add
int3
add
imul
pop
sbb
inc
jbe
sbb
adc
in
mov
dec
xor
jbe
inc
push
test
ds
test
fisubl
mov
fwait
addr16
push
mov
in
loopne
cmpsb
sub
in
test
xor
fimuls
clc
fdivs
jg
int3
insb
loope
lret
rcr
sub
popf
jmp
data16
push
jle
movsb
mov
lahf
xchg
fmulp
cmpb
cmpb
jbe
xor
popa
imul
pushf
xchg
mov
xchg
pop
outsb
fsubr
jecxz
nop
cli
pop
mull
btc
test
scas
sti
fistl
mov
lahf
lea
add
insl
mov
adc
cwtl
fstl
mov
cmc
xor
loop
jno
dec
add
pop
stos
jb
out
scas
popf
xorb
dec
inc
and
ja
cltd
dec
rorl
jecxz
mov
xlat
push
add
nop
mov
mov
push
out
sbb
or
out
mov
out
mov
fs
xchg
cltd
sqrtps
insb
pop
dec
iret
insl
daa
rorl
lret
or
xchg
cmp
andb
loopne
xchg
dec
sti
dec
ficoms
pop
pusha
test
fwait
cmp
scas
cmp
lods
imul
call
inc
cmpsb
mov
in
xchg
jno
mov
push
lods
enter
leave
pusha
ljmp
ljmp
in
mov
mov
jb
jne
or
and
adc
fmull
jbe
jle
rcrl
xorl
cmp
cmc
pop
into
pop
fstps
testb
jg
popf
popf
dec
mov
mov
cmp
popf
into
mov
int
mov
aaa
mov
ljmp
push
xchg
mov
adc
xadd
and
jbe
popf
hlt
push
out
addr16
push
vmovups
xchg
adc
xor
mov
gs
mov
push
pop
mul
rcl
add
pop
xchg
insl
ret
js
xor
jg
and
ss
test
jle
xor
orl
outsb
inc
cwtl
mov
in
frstor
add
adc
sbb
pop
dec
dec
loopne
adc
shl
xchg
push
sub
push
lock
rcr
xor
pop
sub
fadd
mov
jnp
decb
push
in
xchg
sub
lret
aaa
in
imul
pandn
jo
fisttpl
adc
jno
movsb
and
xchg
push
pop
sbb
pushf
cs
inc
stos
xor
ret
popa
pop
jno
xchg
loopne
mov
mov
fisubrs
fdivrs
inc
imulb
hlt
pop
xor
push
cmp
repz
sbb
push
fisttps
ret
and
push
scas
and
dec
push
pop
nop
xor
fsubrs
pop
mov
shl
adc
rcr
daa
lods
fdivrp
inc
out
jp
mov
notl
dec
test
insb
movntps
push
and
add
cmp
in
xchg
ds
lock
leave
inc
dec
or
mov
into
fcomp
add
push
sti
xchg
dec
pop
fisubrl
cs
xor
adc
mov
scas
jmp
add
mov
xchg
in
sbbb
aas
cmp
cmp
cs
jne
addr16
sbb
ja
ret
rol
in
pop
sub
jecxz
mov
pusha
stc
push
cmp
or
fs
das
cmc
outsl
sbb
scas
adc
mov
fwait
outsl
mulb
or
inc
nop
shrl
mov
and
andb
dec
mov
testl
aad
into
add
loopne
into
adc
inc
xor
cli
cmp
test
jnp
jo
push
scas
xchg
outsl
pop
push
push
sbb
loope
jnp
xor
or
mov
dec
addl
imul
loopne
add
sbb
xchg
pushf
and
in
mov
mov
fimull
or
or
repz
inc
push
das
shl
sub
jo
insl
in
ds
sbb
dec
xchg
mov
daa
push
xor
or
mov
inc
dec
testl
pop
mov
sub
jge
xor
add
push
in
mov
sub
mov
ljmp
and
pusha
pusha
mov
add
fucomi
sbb
push
cmp
adc
jge
outsl
aaa
sbb
insb
mov
mov
fidivs
or
cld
and
pop
stos
dec
movsl
fisubl
inc
cli
stos
insb
inc
scas
in
aam
pop
and
dec
mov
or
aaa
xchg
add
and
sbb
scas
xor
cmp
fs
push
pop
jl
das
inc
pop
xor
jle
mov
jae
mov
push
add
cmovs
pop
inc
out
filds
aam
data16
lahf
ret
rorl
ret
fwait
cmp
repnz
mov
mov
loopne
in
jle
push
push
arpl
jb
subb
pop
jg
pop
pop
ja
and
test
and
mov
cwtl
bound
cmp
or
int
adc
jno
aad
insl
gs
mov
decb
mov
insl
cltd
inc
test
jge
inc
dec
push
push
orl
sub
je
push
cli
mov
lea
xchg
xor
and
cli
es
fimuls
mov
sbb
xor
inc
lahf
orb
mov
dec
push
push
cwtl
stc
mov
pop
movsl
scas
dec
jmp
jno
inc
push
jle
movsb
cs
daa
jecxz
stc
int
sub
scas
stos
aam
lret
movsb
sahf
cltd
mov
rorb
push
mov
jl
xlat
push
and
fmuls
mov
cs
fistpl
xchg
or
into
inc
mov
lret
sbb
jecxz
int
mov
out
mov
xchg
add
push
xor
andb
xor
out
pop
cmc
insl
add
pop
sbb
or
repnz
add
xchg
test
inc
add
hlt
mov
lds
sbb
mov
lods
imul
push
cmp
sarl
inc
jge
cli
jb
sahf
repnz
push
cmp
xor
rolb
mov
sbb
data16
mov
pop
sub
mov
mov
mov
rclb
pop
mov
lret
ljmp
arpl
sbb
jge
aam
imul
ds
push
int
add
out
and
add
cmp
insb
xchg
mov
repz
dec
imul
mov
gs
sbb
cmp
scas
pop
xchg
les
mov
pushl
fsubl
imul
mov
cmp
je
in
add
xchg
into
and
inc
cltd
out
je
jle
scas
push
sahf
or
xor
xlat
push
sbb
cmpsb
add
sbb
rdpmc
add
jb
and
pusha
fs
rolb
jne
pop
mov
repnz
mov
xor
adc
pop
push
fsubl
rclb
pushf
and
mov
loope
xor
sbb
xor
cmp
and
popa
push
addr16
sahf
fidivl
scas
sub
stos
loop
xchg
call
loopne
gs
sub
sbb
repz
out
repz
fs
lahf
aad
outsb
xchg
sahf
push
outsb
sbbb
cmc
sbb
call
cmc
loop
xchg
ror
sarl
hlt
jae
sbb
mov
sbb
dec
popf
pop
sahf
decb
fisubrl
pop
jb
adc
outsb
insl
jnp
dec
jb
and
cli
inc
add
insl
imul
jge
cmp
xor
push
nop
mov
test
popa
dec
enter
aaa
out
mov
outsl
xchg
add
ss
inc
mov
aaa
sahf
xor
push
pop
add
nop
aad
and
mov
iret
pop
test
std
pop
push
inc
mov
mov
int
mov
cld
push
pop
jns
lods
push
dec
pushf
mov
push
mov
adc
cmp
in
test
xor
xor
dec
and
cmc
insb
iret
or
test
outsb
lea
inc
add
xchg
in
push
sub
fiaddl
iret
in
sub
rorb
sbb
fsts
repz
rclb
scas
mov
pop
or
call
sbb
test
icebp
adc
mov
shlb
shl
jge
inc
and
insl
mov
rolb
icebp
dec
in
cmp
out
cmp
sub
mov
cmp
pop
mov
inc
hlt
mov
pop
pop
push
or
sub
ror
fwait
cmpsb
lcall
jp
mov
or
call
lret
dec
push
roll
cmp
mov
pushf
dec
int
cwtl
xchg
add
mov
sub
sub
lcall
cs
sar
jae
jl
dec
das
mov
adc
aas
fwait
inc
jmp
lret
jbe
arpl
bound
out
mov
cmpb
roll
outsb
mov
xchg
fwait
daa
rcl
xchg
call
sbb
add
jns
inc
mov
push
inc
fnsave
mov
imul
dec
sub
hlt
xor
fabs
sub
mov
cmp
in
pop
stc
ss
inc
mov
mov
test
pushf
cld
pushf
jo
jnp
add
mov
jle
mov
fwait
dec
or
or
jae
int
dec
jno
xchg
adc
sahf
mov
jecxz
inc
js
leave
xchg
push
ss
xor
das
comiss
js
jl
les
jge
xor
mov
cmc
stc
lahf
push
pushf
mov
or
fsts
push
sub
sub
incb
repz
mov
fwait
repz
push
mov
shrl
xor
push
or
dec
mov
sahf
mov
dec
add
mov
cmp
outsl
mov
adc
mov
pop
in
insb
sbbb
mov
das
xor
scas
dec
inc
ljmp
bound
push
mov
dec
add
pcmpeqw
push
imul
in
repz
or
loop
mov
sbb
mov
lods
stos
sbb
or
xchg
lods
js
incl
and
cmovle
div
pop
ret
push
mov
movsb
std
mov
flds
aas
and
jle
test
shll
mov
jge
fisubrs
push
lea
arpl
sahf
jl
push
aad
repnz
int
sub
ja
daa
test
test
push
idivl
add
add
add
mov
fnstcw
out
in
add
adc
xlat
shll
lret
or
addr16
add
pop
jo
mov
pop
inc
test
mov
mov
inc
inc
das
scas
and
sub
out
push
xchg
mov
jmp
rcrb
jmp
test
in
xchg
cmpsb
inc
mov
popa
cwtl
xchg
inc
inc
sahf
cmp
cmpsb
cli
fldenv
std
and
inc
aas
mov
dec
pop
push
xchg
add
dec
jp
dec
shlb
xchg
fdivs
scas
aas
xchg
and
iret
and
aad
rcrb
xchg
sub
or
in
stc
pop
sbb
mov
gs
shlb
nop
mov
sbb
out
fldt
jnp
dec
nop
iret
adc
lret
scas
cli
inc
xor
jae
cs
loop
orb
movsl
xchg
fcoms
fdivs
or
ljmp
sub
jp
outsb
mov
sbb
sbb
add
and
ljmp
les
jns
mov
lret
mov
xor
mov
and
mov
test
negl
or
mov
pop
sahf
pop
adc
icebp
iret
inc
mov
fistpll
cmp
lds
dec
insl
aad
jmp
and
dec
ds
sti
push
leave
and
fmull
jne
movsl
dec
bnd
std
nop
and
out
push
jnp
inc
and
lret
sbbb
sbb
gs
andb
add
and
inc
inc
push
arpl
repz
push
mov
fldcw
pop
pop
stc
stc
out
mov
aam
push
jle
inc
xchg
out
jmp
sub
mov
pop
jecxz
sbb
xchg
mulb
inc
jge
xchg
add
mov
cli
mov
xorl
xor
xor
adcb
pop
jns
inc
fsubl
gs
mov
inc
les
in
jge
imul
or
pop
bound
inc
int3
xor
in
mov
mov
add
rorb
inc
push
lahf
test
fnstsw
xchg
or
sti
je
inc
mov
inc
cmp
pop
subl
adc
mov
jne
jno
mov
bswap
and
mov
jns
xor
pusha
stc
mov
push
mov
sarb
rcrb
xchg
and
cltd
mulb
push
popa
ror
outsb
and
cmpsl
dec
insb
xor
repz
cmp
adc
jne
mov
sbb
or
push
pusha
and
cmp
int3
popf
push
and
lret
sbb
jmp
movsl
je
aas
ss
invd
dec
movl
sbb
and
and
jo
jae
pop
sub
aad
into
out
out
int3
inc
lea
push
in
xor
add
scas
pop
mov
fimull
pop
sahf
les
cli
nop
dec
stos
inc
pop
sbb
rorb
popa
mov
rolb
dec
inc
mov
adc
insl
test
out
mov
enter
jp
pop
clc
pextrw
inc
adc
test
pop
mov
jae
jmp
mov
xor
mov
mov
cmpsl
pop
cmp
mov
xchg
xchg
mov
fimull
clc
adc
js
les
stc
les
cwtl
inc
mov
andb
imull
sub
dec
aam
jnp
fisubrs
cmp
cmp
outsl
adc
outsb
cmp
lea
sbb
leave
sub
std
rorl
ret
dec
ss
adc
sarl
aam
push
sub
cmp
add
xchg
scas
jbe
sub
aam
cmpl
jl
iret
sub
pop
lahf
and
push
mov
mov
sar
dec
mov
out
jne
ja
adc
cmovp
sub
mov
jg
inc
or
push
fsubl
pop
and
xchg
jo
mov
cmp
cmpsl
sub
mov
xchg
repnz
and
insb
pop
ljmp
mov
lahf
daa
cmc
or
mov
adc
mov
lcall
sbb
sbb
call
int3
icebp
lret
lret
push
mov
fnstsw
mov
adc
sub
dec
test
shll
out
mov
into
adc
arpl
sahf
lock
or
test
out
addr16
and
loop
jg
mov
push
repnz
pop
adc
or
inc
out
rolb
or
mull
push
jle
mov
pusha
mov
ja
nop
xchg
in
xor
cmpl
jae
cltd
ds
ret
ss
sbb
arpl
fbld
inc
shl
sbb
flds
lea
push
cmpsb
int
repz
insb
popf
push
xchg
xchg
push
mov
iret
jae
and
and
pop
or
je
and
pop
xlat
out
daa
pop
cwtl
notl
sub
addr16
aad
pop
das
mov
js
cmc
aad
xor
pop
fcomp
jl
setno
mov
jmp
sub
fsubl
sub
fs
xor
les
adc
mov
lds
mov
sub
push
pusha
add
push
cli
pop
ficoml
rclb
std
sahf
stos
or
into
mov
dec
movsl
push
adc
js
insl
call
pop
adc
lock
das
push
jl
pusha
mov
scas
nop
and
cmpsb
lahf
cli
pop
hlt
xor
les
loop
test
es
adc
bound
inc
gs
add
adc
cmp
and
sahf
arpl
fs
jnp
nop
mov
imul
adcl
pop
inc
fwait
adc
fnstsw
es
insl
fildll
sub
mov
rol
push
cmp
ja
or
sbb
xor
jns
xor
fcomps
gs
loopne
movb
aam
jbe
sbb
stc
addr16
nop
fwait
push
test
loopne
mov
sbb
xor
divb
nop
xchg
push
mov
mov
cmp
int3
bound
sub
shlb
jg
lds
inc
inc
cwtl
push
or
inc
adc
sahf
push
dec
mov
dec
mov
scas
push
add
std
push
and
pop
in
xchg
out
add
xchg
pop
in
sbb
sahf
lcall
lods
rorb
in
scas
xor
ljmp
les
int
fmull
mov
call
inc
pusha
call
scas
stc
and
mov
out
inc
out
data16
sub
ficomps
sti
dec
testb
lods
lds
xor
fnstenv
fcoml
xchg
push
test
sbb
sub
fwait
push
je
mov
clc
xchg
jl
cli
dec
add
cli
clc
scas
xchg
add
mov
test
or
dec
movsb
jbe
fwait
dec
dec
add
pop
sbb
insl
mov
cmpsl
call
mov
sub
ss
push
lods
cmpl
ficompl
pop
popa
xchg
in
sub
pop
sahf
adc
or
dec
test
fcomi
fs
inc
adc
or
xlat
lock
arpl
test
mov
mov
aam
push
lahf
stos
jl
sti
jne
mov
pop
sub
xchg
push
and
pop
je
sbb
js
push
cmc
hlt
subl
sub
aas
pop
or
dec
inc
add
jp
movsb
pop
movsb
mov
sbb
dec
xchg
sbbb
xchg
sub
xor
xor
fistpl
fwait
insl
and
fs
and
je
aad
fsubrp
push
cmc
dec
push
out
jne
movsl
outsl
les
fimuls
ds
psubusb
inc
in
fstpt
inc
sbb
mov
pop
lea
in
push
lret
fs
test
aam
mov
xlat
and
sbb
sub
jg
sub
addw
pop
sbb
je
lds
dec
in
cmp
jne
icebp
adc
mov
ja
cld
mov
sbbl
ret
ret
pop
inc
add
jbe
dec
inc
xor
sub
adc
mov
mov
lret
cmp
sbb
aad
lds
jns
xor
pop
sub
out
and
adc
sarb
push
sub
mov
leave
iret
insl
call
incl
fidivl
push
adc
push
negl
push
or
dec
cmp
aaa
inc
cmp
loope
push
mov
xchg
mov
in
mov
jmp
cmp
xchg
push
dec
ss
dec
dec
jg
insb
pusha
insb
stos
cmp
orb
lods
or
pushf
leave
rolb
cs
in
add
cli
mov
jno
add
mov
push
lret
pop
imul
or
cmp
enter
pop
divl
add
jg
jl
xor
lret
xchg
fucom
out
es
jl
ss
mov
push
inc
push
loopne
dec
cltd
sti
or
sbb
cmp
xchg
in
dec
negl
lret
lcall
out
lret
iretw
jge
pop
jb
push
mov
push
add
std
addr16
sbb
inc
xlat
ja
pop
movsl
or
ljmp
ret
push
xchg
fiadds
pop
push
shl
outsb
test
cmpsl
jl
mov
xchg
jae
jb
inc
or
sbb
mov
mov
inc
adc
int
pop
cwtl
push
js
and
addr16
gs
sarl
cmp
clc
fucomip
ljmp
nop
pop
push
mov
inc
adc
call
mov
stc
pop
in
xchg
roll
loopne
lock
xor
in
sbb
adc
subl
inc
cli
and
xchg
mov
pop
mov
insl
enter
jae
add
xor
test
mov
xor
jo
lea
fdivr
sahf
jg
xor
leave
adc
call
add
lahf
cmc
sub
inc
hlt
jbe
jns
icebp
push
rcrb
movsl
push
xchg
ss
sbb
or
pop
test
popf
test
aaa
stc
adc
mov
jne
outsb
scas
ss
cmp
add
xor
xchg
or
cltd
mov
stos
clc
addr16
or
mov
and
or
js
cmpsl
popa
mov
in
cmpsb
xchg
adc
sbbb
fisttps
pusha
push
into
aaa
cs
inc
popf
xchg
stc
in
es
pop
jae
push
rorl
fistl
inc
xlat
ret
imul
inc
ja
sub
and
mov
shll
xchg
jo
pop
lds
pop
mov
ljmp
add
fstpl
xchg
jmp
imul
mov
dec
mov
scas
cwtl
lret
jge
mov
sub
in
fdivs
scas
add
pop
pop
mov
lcall
sub
imul
roll
and
fmull
add
fst
cmpsb
test
and
sbb
dec
sbb
rcrl
adc
pop
andl
cmp
outsl
jp
or
movsb
imul
outsb
mov
xor
mov
rclb
test
rorb
cltd
lock
lock
pop
leave
pop
xchg
sbb
inc
jg
imul
fidivrs
cmpsb
cld
pop
jp
xor
mov
inc
xorl
jmp
test
into
mov
cli
aad
jp
in
inc
rcll
push
or
popa
cwtl
cmp
and
movsb
mov
in
in
lds
mov
xor
jno
ret
std
ja
sbb
xor
mov
mov
xchg
sub
sub
mov
adc
inc
notl
and
pop
adc
cmp
shll
pop
js
fbstp
std
mov
cmp
sti
aam
dec
movsl
int3
out
mov
arpl
mov
cmp
adc
sbb
fmuls
xchg
test
mov
out
daa
add
loope
ret
sbb
xchg
dec
fmuls
inc
jmp
xor
inc
cmp
dec
sbb
fistpl
jge
jge
mov
stos
icebp
rcll
mov
and
lods
push
jmp
dec
xchg
mov
push
loop
aad
inc
sbb
push
mov
push
in
mov
sub
fldt
or
out
xchg
push
push
in
adc
scas
in
mov
inc
ljmp
aad
lods
int3
mov
and
xor
pop
loop
enter
xchg
bound
fisubs
pop
jnp
push
sub
mov
test
lcall
outsl
es
xor
push
ljmp
or
dec
add
enter
sbb
mov
xchg
loop
inc
sub
cmp
icebp
xor
jb
fwait
ds
mov
and
test
stc
cmp
shll
or
cmp
das
mov
loopne
movsl
popa
push
sbbb
cmp
xor
jno
jno
mul
mov
aam
loopne
iret
cmp
cmpsl
out
jbe
clc
inc
push
pop
pop
out
lret
mov
push
cmp
std
adc
mov
fwait
or
out
adc
or
and
jmp
add
mov
mov
mov
dec
add
pop
and
jne
fs
mov
fbld
sub
out
dec
std
cltd
mov
lahf
fbld
inc
inc
cli
pushf
push
gs
dec
nop
add
imul
add
and
outsb
jg
in
test
push
jae
int
or
xor
iret
pcmpgtw
dec
mov
lock
pop
sbb
daa
add
stos
neg
and
xchg
jmp
test
mov
sub
int3
sub
int3
fisubl
sbb
or
mov
mov
outsb
and
mov
aam
mov
and
and
jp
cmp
call
mov
out
cmp
mov
jbe
fcoms
cmp
je
lea
cmp
mov
push
out
bound
inc
js
xchg
inc
inc
push
into
or
push
sahf
pop
loopne
jge
sub
xchg
rorl
sti
jo
dec
lret
sahf
fs
sbb
cmp
fsubl
pop
push
xor
and
pop
frstor
adc
or
mov
cmp
ud2
pop
sahf
rcrb
sub
leave
movsl
pop
add
popa
dec
inc
dec
mov
dec
adc
pop
popa
xchg
inc
cmp
sub
sahf
inc
in
dec
sti
mov
pop
fucomip
xor
icebp
in
lret
mov
scas
dec
aad
jmp
sbb
sub
pop
jecxz
fiadds
jp
lods
mov
out
ljmp
push
stos
lahf
xor
sub
pop
jmp
jno
fmul
int3
loopne
or
scas
into
mov
and
adc
sbb
lea
add
and
push
adc
mov
sahf
test
iret
xchg
adc
fistpll
or
or
or
xchg
push
movsb
imul
aaa
inc
mov
and
xchg
pop
push
inc
call
dec
mov
in
enter
pushf
sbb
scas
adcb
bound
lret
dec
and
sub
gs
jp
xlat
std
roll
sbb
ss
cmp
inc
xchg
inc
jp
jne
stos
sub
iret
and
movsb
jno
out
pop
fwait
mov
loopne,pn
into
sbb
sbb
inc
inc
pop
adc
cmpsl
sbb
lret
mov
stos
js
test
lret
rcr
adc
pop
jb
jo
sbb
or
push
add
mov
dec
stos
aas
repnz
stc
push
pop
jae
pop
inc
cltd
sbb
arpl
xchg
out
imul
stc
in
imul
push
or
dec
dec
imul
insl
test
inc
xor
push
sbb
adc
adc
jecxz
push
sti
std
jae,pt
sarl
push
xchg
cmp
aad
aaa
mov
xor
pop
sub
enter
pusha
out
dec
push
nop
xchg
or
fimuls
test
cltd
loopne
xchg
adc
adc
pusha
pop
fwait
arpl
inc
into
xor
addr16
push
or
inc
inc
or
mov
xor
je
mov
shl
mov
mov
push
das
cmp
adc
sti
fwait
rcl
data16
mov
jg
addr16
shlb
pop
ret
int
push
or
imulb
xor
daa
mov
js
fwait
lret
and
inc
fbstp
mov
js
icebp
out
lret
test
or
lahf
cmpsl
orb
sub
dec
pop
mov
sub
dec
or
mov
outsb
mov
stos
div
adc
push
push
je
mov
sub
data16
mov
sysenter
add
lds
inc
add
xchg
dec
pop
lahf
push
xor
int3
loope
leave
lds
cmpsl
pop
ljmp
mov
loopne
mov
out
and
subl
notb
pop
mov
jecxz
test
data16
jns
repz
aam
xchg
xchg
dec
int
pop
inc
js
scas
jno
or
fimull
add
cwtl
add
in
jge
adc
sbb
mov
push
dec
scas
lods
xlat
popf
sub
in
cmp
enter
iret
jno,pt
jge
aaa
adc
hlt
loopne
stc
sahf
sarb
or
repnz
lcall
cli
movsl
xchg
into
outsb
int
dec
cmp
int3
sub
addr16
and
and
dec
les
pushf
loope
inc
inc
daa
fsubl
out
test
repz
ljmp
imul
dec
inc
and
jb
mov
mov
push
call
daa
mov
cmp
xor
sbb
dec
ss
and
xchg
jg
shll
mov
and
hlt
test
sbb
dec
lret
lock
jge
je
loopne
in
add
push
rorl
cmp
loopne
cmpsl
push
mov
pop
repz
jmp
aad
aaa
iret
cmc
mov
sub
inc
pop
jne
ds
sub
in
je
loop
and
mov
jb
push
add
push
mov
xor
lds
adcl
or
aad
sub
popf
dec
fnstenv
cmp
jecxz
push
jb
pop
pop
jp
dec
dec
mov
xchg
dec
lahf
cmc
and
icebp
inc
adc
clc
int3
adc
mov
shll
adc
fs
mov
mov
lock
aam
std
fbstp
mov
loopne
je
push
cwtl
fstl
push
aaa
inc
movl
adc
rol
sub
std
jmp
shll
mov
mov
movsl
jno
cmp
loop
sbb
xor
fdivr
xor
test
jle
and
add
mov
xchg
mov
cmp
mov
mov
adc
sbbb
or
jmp
jmp
cli
and
setp
push
lret
jle
mov
pop
out
xchg
loope
pusha
mov
pop
scas
jne
adc
fildll
icebp
aad
shlb
insb
rcrl
out
leave
test
pop
lods
jp
inc
inc
adc
gs
stos
shl
gs
sahf
inc
test
fisttps
mov
ja
fwait
mov
adc
cmp
xchg
sti
jo
daa
add
dec
adcb
jge
jge
lods
imul
lahf
stc
add
gs
out
aas
pop
pop
arpl
in
leave
mov
push
into
nop
movsl
data16
push
in
push
mov
bound
and
or
or
nop
add
mov
lods
sub
rcll
xchg
sarl
fcomps
aas
es
addr16
imull
jbe
leave
xor
inc
dec
and
les
jns
inc
inc
mov
aam
movl
aaa
scas
fs
mov
push
or
cmp
in
addl
rcl
cwtl
push
jbe
add
aam
lds
out
sbb
pusha
das
nop
ja
adc
adc
push
adc
or
push
repnz
xor
gs
dec
icebp
and
push
push
mov
int3
mov
sub
dec
pop
int
sti
add
mov
add
adc
push
jle
mov
loope
js
iret
mov
mov
lret
lea
testb
popl
out
bound
inc
mov
xor
out
xchg
movsb
jae
adc
mov
adc
in
sub
pop
push
cmp
call
push
adc
push
lds
cmp
or
loopne
jo
push
pop
adc
inc
sbb
sub
scas
pop
fsubl
mov
inc
getsec
mov
fwait
xchg
psrlw
lods
cmpsl
push
scas
lock
inc
repz
int3
es
cmpsb
cs
test
push
push
pop
js
fstpt
in
xor
jo
push
and
outsl
add
mov
sub
pushf
push
test
jge
jg
adc
pusha
adc
fwait
test
ljmp
adc
dec
push
je
inc
adc
add
push
dec
js
xor
repnz
sbb
test
xorl
jmp
lahf
jg
xor
hlt
sub
cmp
mov
jae
dec
add
mov
jns
cmpsb
pushf
ja,pn
lahf
jno
fisttpl
dec
mov
mov
mov
frstors
sbb
mov
hlt
out
mov
mov
call
push
xor
stos
pop
popf
mov
neg
outsl
pop
aam
insl
xor
xor
xchg
and
jno
outsb
icebp
pop
sbb
add
fildll
sbb
sub
fisubl
insl
sti
outsb
or
push
popa
xchg
fstpt
mov
mov
xlat
mov
test
pop
dec
daa
jb
inc
notl
push
roll
mov
xor
xlat
or
or
in
xchg
xchg
scas
inc
jns
es
xchg
mov
add
inc
fisubrl
js
dec
pmulhuw
test
pcmpeqw
stos
push
hlt
mov
jae
call
lret
mov
and
mov
lret
pop
mov
sbb
cmp
enter
mov
lds
sarb
ljmp
mov
adc
movsb
mov
pusha
xchg
and
or
dec
xchg
iret
iret
daa
push
mov
lock
xchg
or
xchg
call
push
insb
xchg
sub
mov
clc
xor
mov
push
repz
imul
xchg
out
loope
outsl
pop
add
mov
cmp
lcall
mov
out
jbe
aad
jp
or
inc
test
cmp
fbld
jo
mov
jp
and
dec
leave
inc
mov
mov
hlt
and
shll
pop
ja
lahf
aam
xchg
adc
das
mov
sbb
int
mov
sarb
bound
or
into
mov
cmpsb
mov
mov
mov
sti
out
out
out
or
dec
fbld
dec
adc
xchg
nop
xlat
mov
repz
or
shrb
adc
popf
lret
ja
outsl
mov
sub
out
cs
mov
or
xchg
pop
pop
stos
loopne
fisttpl
and
mov
dec
sub
jnp
fcom
push
mov
mov
cmp
push
mov
lds
add
add
bound
mov
mov
cwtl
xchg
cld
shrl
or
fsubr
int3
mov
xor
andl
jl
fdiv
add
cmp
hlt
push
fnstsw
outsb
mov
jnp
xchg
cmpsb
jl
pushf
out
outsl
in
pop
js
insb
repz
movsl
dec
je
jae
inc
repnz
les
aas
jns
push
cmp
xor
jg
loopne
adc
cld
sbb
push
stc
stos
cmp
inc
jl
shrl
mov
ja
out
pushf
cmc
fildl
rcll
cs
mov
adc
js
out
pop
fs
fldenv
ljmp
xchg
dec
xchg
sub
cmp
xchg
dec
aas
out
or
dec
inc
cmpsl
or
add
add
out
idivl
sbb
add
pop
loop
xlat
aad
xchg
push
add
cmpsl
clc
mov
push
mov
in
aaa
fmuls
arpl
scas
xor
push
sahf
loope
pop
orl
cmp
sub
push
in
int3
out
push
cmc
int
mov
mov
jg
lods
sub
or
and
xlat
in
fisubs
fwait
sbb
leave
cmp
mov
nop
fucomp
cmp
add
invd
cmp
add
in
and
sbb
jnp
sub
dec
and
xor
into
lods
pop
add
xchg
lods
lcall
iret
sahf
push
mov
loope
fistpl
in
dec
lea
xchg
clc
inc
int3
fwait
or
aam
push
mov
mov
mov
adc
mov
cmp
mov
push
and
test
mov
hlt
adc
sbb
cs
and
pop
jmp
shrb
ss
lea
das
cmc
sub
mov
and
movsb
icebp
jbe
test
vpmacsswd
mov
inc
xchg
ja
imul
icebp
lock
jmp
imul
adc
adc
mov
cmpsl
lret
inc
jg
pop
mov
sti
mov
das
sub
dec
and
sub
jmp
and
push
idivl
push
adc
push
pop
sbb
jae
insb
popa
fcoms
pop
lock
and
cmp
push
push
xchg
sbb
xor
aad
dec
les
sbb
cs
add
movsl
adc
aad
mov
repnz
sub
inc
pushf
ss
ret
cwtl
out
cmp
pop
test
mov
jb
mov
lea
xchg
addb
int3
lods
inc
cmpsb
ja
xor
lods
out
por
push
jne
aam
out
imul
lods
cmp
in
and
fistl
call
clc
outsb
pop
fsub
ss
pop
mov
xchg
mov
lock
pusha
mov
cmp
jb
push
pop
idivl
mov
add
add
push
mov
fcmovu
dec
dec
dec
repnz
mov
adc
addr16
fucomp
fmull
in
daa
mov
subl
loopne
mov
fcmovb
cmc
pop
cmp
inc
aam
movl
test
xchg
fwait
sbb
add
sbb
rorb
ret
push
sbbb
insb
push
mov
orl
dec
and
mov
call
in
mov
jbe
dec
sbb
and
scas
dec
and
push
mov
inc
xor
pop
fcomps
stos
xor
jp
inc
loope
jnp
mov
cltd
pushf
jl
mov
sbb
inc
daa
jne
mov
out
lea
enter
jno
loopne
insb
cs
pop
repnz
xchg
in
addl
mov
icebp
lods
cmp
pop
sub
pushf
fidivl
mov
neg
xchg
jnp
push
scas
push
mov
push
sbb
stc
or
inc
fnstsw
xchg
mov
or
cmp
pop
loopne
mov
xor
icebp
fsubrs
sub
adc
cmp
aam
push
adc
enterw
sub
sub
xlat
out
xor
mov
mov
fisubl
stc
push
inc
mov
jb
xor
jle
pop
xor
mov
mov
jnp
xchg
aaa
mov
popa
cmp
dec
inc
cmp
mov
mov
js
inc
les
in
inc
fnsave
lock
outsb
hlt
mov
or
and
xor
lods
and
cmpl
cmp
orl
jl
dec
jge
fidivl
adc
mov
decb
inc
xor
xchg
arpl
push
and
xchg
ret
add
outsb
and
cmp
rcrb
mov
inc
add
xorb
and
lods
and
push
fcmovnbe
sahf
lret
pop
cmp
and
aas
mov
loopne
sbb
sbb
loope
mov
fwait
push
push
push
dec
adc
int
xorl
hlt
mov
stos
cmp
aaa
repnz
xchg
dec
jle
cld
xchg
int
dec
imul
sub
jns
rcl
push
xchg
xchg
loop
or
je
push
divb
stos
ret
in
mov
aam
cli
and
adc
lret
pop
mov
lret
mov
mov
xlat
fists
xlat
inc
mov
mov
pop
dec
jae
stos
paddd
mov
mov
orl
cmp
jb
jg
mov
adc
orb
xchg
fisubl
daa
dec
out
daa
cmp
in
lock
sub
fstpt
mov
jge
cmpb
pop
int3
push
mov
cmpsl
xor
cmp
xor
jge
xor
test
or
jmp
aad
pop
push
shl
jg
je
inc
push
fdivrl
push
int3
xchg
sub
mov
pop
lret
lods
fldt
fistl
call
mov
iret
jbe,pt
push
xchg
adc
sbb
stc
push
insl
jb
test
add
icebp
movsb
jle
xchg
dec
insb
xchg
ja
jo
xchg
in
dec
popf
pop
das
std
inc
lret
mov
aad
data16
mov
lods
lods
ja
push
les
pop
and
subb
or
xchg
ret
xchg
push
out
or
add
sbb
and
adc
in
inc
imul
add
xchg
shlb
dec
leave
mov
shr
fisubl
jo
xor
add
fistpll
mov
imul
sub
shl
fadd
test
cmpsb
btr
out
loop
push
add
xlat
cltd
mov
mov
xchg
cmp
popa
mov
repz
xchg
sbb
jno
mull
sarb
lods
push
and
pop
mov
adc
push
daa
mov
arpl
lret
les
mov
mov
mov
in
pop
pop
sbb
cltd
jmp
xchg
sub
dec
xlat
mov
lock
roll
xor
rorl
xor
pop
fisttps
pop
cltd
xor
sub
outsl
cld
es
xor
je
addr16
int3
xsavec
cltd
xor
int
hlt
lret
fsubl
cmc
push
lret
or
adc
cwtl
out
and
addb
ja
dec
dec
adc
inc
scas
pop
loope
out
mov
cs
pusha
clc
adc
and
icebp
cld
addr16
push
push
adc
and
das
sub
aam
jp
push
nop
in
out
loope
adc
or
lds
xor
mov
clc
mov
push
inc
sub
jnp
mov
mov
mov
stc
sub
adc
xor
add
cmpsl
sbb
mov
xlat
idivb
shlb
mov
jae
push
call
jo
inc
fmulp
and
add
enter
loopne
std
push
sbb
cld
bound
dec
inc
inc
adc
xchg
scas
daa
or
inc
cld
mov
jno
subb
and
lods
ret
int3
out
push
insl
cmpsl
mov
pushf
lods
mov
mov
push
cmpsb
stos
js
stc
lcall
movntq
mov
addb
dec
sbbl
cld
jno
popa
cmp
jo
movsl
or
out
frstor
or
pop
jnp
setle
sub
xchg
cwtl
fcmovnb
push
lahf
push
pop
setnp
clc
push
dec
das
xchg
sti
ds
testl
scas
nop
out
push
mov
arpl
push
xchg
xchg
icebp
arpl
popf
sbbl
dec
xchg
sub
data16
stc
das
aas
mov
add
adc
stc
ret
mov
mov
jns
adc
and
or
dec
sbb
and
inc
aaa
rcr
pushf
out
jp
dec
cmp
jmp
cmp
mov
imul
cmc
test
rcrl
shl
mov
addb
aad
push
sarl
mov
push
xor
sbb
ja
popf
pop
jl
jl
shlb
mov
insb
bound
mov
xor
mov
repz
dec
inc
gs
ficompl
fcompl
xchg
cmp
dec
outsb
add
dec
arpl
faddl
pop
adc
sbb
and
push
ja
pop
loop
test
adc
jl
or
or
mov
sahf
inc
iret
div
in
add
stos
decb
mov
enter
and
pop
pop
ficompl
pop
xchg
cs
stos
dec
ret
mov
jo
add
sbb
sahf
iret
mov
and
inc
mov
fdivrl
mov
and
stos
dec
sbb
subl
lods
pushf
incl
xchg
inc
push
push
cwtl
or
int
push
push
cmc
mov
out
sub
fisttps
ljmp
jecxz
xor
cwtl
rolb
call
sbb
jns
cmpsb
push
xor
mov
and
sub
out
in
lea
cmpsl
loopne
aad
xor
fnstsw
outsl
test
xor
imul
pop
cmp
or
dec
inc
lcall
sub
pop
loope
inc
insl
or
pop
jge
mov
test
xchg
jmp
and
cs
mov
jg
daa
xchg
and
adc
adc
mov
leave
popa
lods
xchg
imul
mov
cmpsb
jbe
shrb
xchg
lahf
push
jno
out
aam
cmc
xor
outsb
cmp
push
nop
cmp
sti
shrl
push
cmp
arpl
dec
xchg
and
or
ds
xchg
in
imul
gs
aad
jge
aas
iret
loop
sbbl
in
push
sbb
cltd
adc
cltd
ret
arpl
xchg
or
cmp
and
mov
nop
xchg
int3
jne
dec
add
mov
movsl
push
call
mov
and
xor
bound
enter
pcmpeqd
dec
xor
mov
icebp
aad
and
gs
inc
inc
lds
dec
mov
mov
lods
mov
pop
cmp
adc
aas
cld
sub
lods
andb
pop
push
test
sti
lock
arpl
ljmp
xchg
stos
push
mov
push
nop
sahf
xchg
cmp
lcall
xlat
jns
push
jmp
sbb
sbb
jne
mov
xor
fnsave
add
and
stos
lcall
pop
or
mov
pushf
mov
or
fxch
enter
mov
push
int
jns
pop
iret
pop
push
daa
push
pop
js
jg
aas
and
push
inc
fstps
mov
jo
sbb
daa
sub
pop
addr16
jb
cmp
adc
fsub
das
sub
xor
std
stos
sub
xchg
popf
inc
lret
dec
pop
jns
mov
adc
mov
xchg
aaa
pop
clc
pop
pushf
mov
adcb
pop
fwait
nop
lret
dec
mov
or
mov
imul
dec
gs
jle
mov
or
xor
pop
mov
stos
sbbl
outsl
pop
ret
sbb
add
aaa
xor
mov
lods
rcrl
sahf
jbe
sub
shlb
push
push
mov
scas
js
cmp
adc
mov
hlt
jo
sub
xchg
jns
pop
cmp
push
repz
sti
push
scas
jne
sbb
rolb
mov
push
xchg
add
iret
popa
dec
xor
cmpl
fisttpll
in
cmpsb
jp
outsl
xchg
add
mov
enter
mov
mov
icebp
mov
clc
out
or
out
test
inc
push
orb
test
mov
ljmp
imull
sbb
out
dec
js
xor
push
and
mov
mov
and
adc
push
out
push
xchg
sub
jg
push
out
mov
or
arpl
jl
cmp
icebp
dec
sarb
mov
xchg
and
jbe
cmp
in
mov
mov
out
or
out
loop
xchg
je
mov
shr
movsl
add
hlt
aad
lock
and
cmp
jne
xor
pop
adc
mov
add
test
cli
mov
xor
mov
inc
fwait
pop
cld
into
shll
mov
imul
sub
lock
sub
push
mov
inc
outsl
scas
fisubrl
dec
mov
shll
cld
mov
pop
movsb
jne
sub
pop
jp
cmp
loope
mov
subl
adc
or
add
aad
shr
je
dec
shrb
out
cmpsl
mov
mov
bndstx
inc
jp
aas
and
fdivl
aaa
int
xchg
jmp
daa
test
dec
xchg
mov
cmp
xor
pop
adc
xchg
mov
inc
outsl
sahf
pushf
lods
lock
sbb
push
cmp
mov
jl
cmpsl
inc
rcr
push
jecxz
fistpl
js
mov
arpl
aaa
pop
jno
mov
ds
enter
data16
xchg
push
stos
sbb
pop
jb
cmpsb
sbb
insb
aam
xchg
outsb
aas
mov
or
das
adc
xchg
andl
cmc
push
inc
add
je
jge
and
inc
movsb
mov
ret
cs
or
pop
jge
iret
mov
adc
ljmp
mov
cltd
adc
gs
adc
xchg
lods
jb
shrl
das
sbb
lods
sbb
je
out
jne
iret
cld
mov
cmc
push
rcr
ss
fstpl
sub
gs
xor
adc
push
in
dec
mov
mov
jns
loop
mov
push
mov
fimuls
fldcw
push
in
xchg
lahf
repz
shlb
and
mov
jle
rcll
rclb
aas
pop
int3
jmp
std
mov
fistpl
cmpsb
ret
or
jecxz
mov
outsb
daa
data16
push
or
insl
ss
scas
out
fwait
aas
hlt
in
in
cltd
popa
jmp
push
cmp
xchg
aad
loop
cmp
clc
xorb
out
bound
jo
add
push
or
mov
add
mov
ds
adc
mov
fstpt
dec
cmpl
int
es
cmp
inc
not
sbb
cli
push
mov
sarb
std
popa
and
in
std
into
adc
mov
sbb
pop
and
inc
loope
add
push
es
xor
add
lahf
pop
daa
jp
inc
ret
out
adc
int3
push
cmp
inc
mov
pop
inc
adc
mov
xchg
outsb
jns
push
add
in
test
jo
push
jl
inc
in
ret
das
inc
ret
mov
mov
lret
push
sub
jmp
xor
out
rol
orl
rolb
cwtl
jmp
das
xchg
jp
enter
sbb
sub
and
je
out
mull
icebp
cmp
ds
out
lds
icebp
mov
jmp
xorl
je
jbe
fcmovu
pushl
insb
ret
sbb
aas
bound
lds
leave
fldl
mov
cmp
add
xchg
mov
clc
push
pop
rcl
outsl
sub
mov
mov
mov
shl
aas
out
aas
das
sbb
fdivl
mov
sub
fs
int3
jns
enter
ret
mov
into
fsubrs
out
cmpsb
dec
ljmp
dec
push
dec
xchg
lcall
jle
lock
inc
sbbb
and
adc
add
mov
mov
and
mov
mov
cltd
out
mov
lret
cmp
push
ret
roll
fistpl
and
and
push
rcl
push
jp
jb
mov
xor
lcall
pushl
mov
test
fdiv
pushf
jle
dec
pop
lret
cmpsb
jae
jae
push
and
lods
mov
inc
sbb
lea
sahf
sbb
adc
fldenv
ljmp
pop
xchg
les
dec
xchg
lods
pop
sbb
kmovb
popa
sub
sub
cmpb
popf
dec
mov
add
iret
mov
sbb
mov
movsb
iret
push
clc
cs
jg
and
sbb
sbb
mov
jae
imul
ja
cli
sarl
push
out
dec
push
mov
gs
movsb
shl
notb
jno
jns
adc
mov
jmp
adc
mov
enter
scas
jo
cli
pop
test
pushf
test
mov
mov
inc
sub
xchg
es
sar
inc
fnstenv
cmp
mov
push
loope
ret
leave
dec
sub
lods
cmpsb
lods
xchg
cmp
ljmp
jmp
stc
or
imul
mov
pop
lcall
mov
mov
sub
addr16
mov
xor
out
icebp
lret
xchg
inc
lods
and
fcomps
sbb
sub
aaa
xchg
inc
in
pop
push
stos
dec
test
push
push
stos
inc
fisttpll
mov
and
xchg
fs
testl
fs
testb
call
hlt
fs
push
imul
jno
inc
movsb
fucom
jno
lds
mov
mov
hlt
jle
aaa
test
loopne
add
pop
shl
push
sarl
enter
fists
pop
jo
or
jecxz
movsl
dec
sub
ret
mov
fstl
jne
orl
jbe
sub
jae
lcall
jnp
jecxz
out
jecxz
rcrl
push
dec
bound
xchg
push
loopne
ja
cltd
mov
add
rcl
jg
or
call
and
push
stc
cmp
roll
scas
or
lret
shl
popf
int
xchg
cltd
fidivrs
rcl
cld
mov
dec
popf
mov
mov
mov
sahf
pop
int3
ficoml
xchg
ja
cmpsb
sarb
jg
sets
hlt
lret
insb
outsb
rcrl
lods
jge
sbb
mov
clc
adc
ja
xchg
in
int
xchg
xchg
or
out
lods
push
pop
push
push
xchg
add
xchg
loop
notl
xchg
mov
jns
push
aad
clc
lret
pushf
idiv
dec
push
cmp
pop
icebp
inc
sub
xlat
mov
xchg
inc
imul
ja
shl
lods
push
lcall
pusha
pop
ss
dec
mov
jmp
ja
out
addr16
cs
push
adc
lret
fildl
sub
ret
aaa
sahf
orb
es
xor
ljmp
cmp
jl
sbb
push
mov
dec
add
inc
arpl
cmpsb
dec
arpl
rorl
inc
std
jne
or
mov
leave
push
or
mov
xchg
stos
testb
mov
sbb
lahf
push
negb
rcr
mov
addl
arpl
jo
lods
cmp
test
adc
mov
fisubrs
sbb
mov
sbb
adc
push
std
fdivrs
push
push
push
add
pop
iret
xor
addr16
imul
push
hlt
mov
sahf
mov
out
lret
xchg
mov
sbb
mov
pop
and
cs
ret
push
mov
cmp
pop
mov
dec
push
loope
xchg
enter
and
outsb
mov
cmp
sub
cmpsb
mov
rorb
lods
dec
jmp
pop
fsubr
lret
mov
sub
push
add
js
icebp
incb
in
push
lahf
cmpsb
call
inc
jmp
pop
mov
test
sbb
into
xor
jbe
jp
sub
dec
lods
negb
mov
push
cmp
sub
mov
mov
mov
cmpsb
mov
js
jae
push
sub
cli
adc
push
push
mov
and
popa
push
cvtpi2ps
addb
das
mov
out
mov
or
sub
pop
jno
jg
inc
and
jmp
jl
jecxz
mov
xor
ss
cmp
in
inc
loopne
add
and
ja
into
mov
xchg
loope
xchg
mov
mov
dec
sub
adc
leave
pop
fcoml
push
bound
mov
adc
fwait
dec
out
push
jecxz
cmpsl
mov
mov
mov
and
jae
xchg
jne
jge
mov
leave
scas
sbb
cmpsb
cmp
pop
adc
and
or
inc
into
push
push
pop
lods
pusha
jns
fcoml
fadds
insb
dec
cmpl
test
sub
jae
stc
movsl
sub
shll
rol
jge
push
mov
jb
dec
sahf
les
inc
jno
mov
push
cltd
test
cld
popf
and
push
out
push
adc
mov
fdivrs
lea
fwait
push
hlt
add
jg
popf
or
mov
loopne
sub
test
cld
mov
sbb
or
xor
mov
mov
or
in
loope
sub
ja
xor
push
fs
sub
add
mov
movsb
mov
subb
push
fmuls
cmp
lret
mov
or
test
cmpsl
aam
push
or
inc
sub
push
push
pop
xchg
adc
mov
adcl
dec
aam
mov
add
dec
jne
inc
call
jl
dec
fdivs
cltd
stos
jo
xchg
xchg
mov
mov
inc
cmc
push
xorl
jecxz
sbb
popf
pop
std
mov
aaa
dec
xor
mov
fimuls
xor
xor
and
add
subb
pop
cld
dec
popf
mov
jae
adc
jne
cli
xor
mov
cwtl
out
sti
mov
add
pusha
xor
sbb
ss
nop
cmc
mov
movb
lahf
mov
pop
and
pop
push
cmp
xor
gs
callw
push
movsb
sbb
in
dec
sbb
cmp
insl
or
es
mov
incb
or
mov
das
cmpsl
mov
in
dec
xchg
sub
ror
adc
xchg
push
negb
push
and
push
pop
xor
dec
mov
mov
sahf
xchg
aas
pop
mov
sub
clc
popf
mov
jo
add
mov
mov
addr16
jnp
sti
dec
gs
mov
mov
pop
outsl
push
adc
rcll
fdiv
cld
cmpsl
fs
imul
add
mov
mov
mov
adc
mov
movsl
test
or
data16
insl
cli
pop
or
lods
fnstenv
cmc
jns
bound
jge
in
fsts
jbe
pushf
and
scas
jecxz
sbb
stc
movsl
call
sbb
imull
xchg
mov
lret
and
mov
xor
ljmp
xchg
xchg
xlat
or
imul
adc
das
mov
push
dec
jle
aam
dec
xchg
push
data16
sbb
push
subl
cmp
ja
jp
cwtl
lock
cmpsb
inc
or
xchg
adc
sahf
mov
loop
push
mov
pusha
xor
lds
fnstcw
aaa
push
ja
ss
pop
divb
jne
push
iret
mov
daa
sub
mov
stos
ss
pop
mov
das
xchg
dec
lcall
jmp
scas
or
fxch
std
adc
cmpsl
mov
dec
cmp
jnp
fists
xchg
jbe
xor
loopne
jae
leave
iret
int3
fsubs
test
in
sahf
dec
arpl
test
jg
or
adcb
test
push
sub
xchg
mov
mov
xor
aam
and
and
jnp
pop
cwtl
movsl
lods
dec
cs
xor
push
and
bound
mov
or
mov
mov
sub
mov
pop
rcll
jg
data16
fcmovu
cmp
dec
xchg
dec
dec
out
xor
push
pusha
adc
in
mov
in
popf
lret
test
call
and
int3
out
lahf
xchg
inc
movsb
lret
mov
sub
nop
movsl
jno
pop
and
incl
or
cmpsl
add
enter
movsb
inc
in
pop
pop
repnz
mov
dec
pop
lods
pop
cmp
adc
cmpsb
pop
leave
mov
jne
pushfw
pop
xchg
lret
pop
xchg
mov
pop
leave
aam
shrb
sahf
sbb
adc
adc
inc
sbb
pop
lods
dec
das
fs
pop
or
out
out
fcompl
jecxz
test
sti
xor
in
cmp
mov
adc
pop
inc
add
mov
loope
jnp
mov
mov
jo
adc
xchg
ret
pop
gs
inc
jbe
and
sbb
fidivrs
pop
pop
push
nop
fdivl
jmp
ret
pop
xchg
call
mov
and
cmpsl
cltd
cmpsb
xchg
shl
pop
notb
or
ja
imul
js
mov
inc
bound
xlat
adc
cltd
std
fwait
outsb
jl
and
pop
sub
incl
jnp
sub
mov
add
pushf
int3
xchg
aas
test
pop
sbb
jle
test
ds
jmp
das
cmp
or
jl
mov
and
inc
jae
mov
into
pop
cmpsl
jno
pop
ds
lods
jmp
jge
xchg
inc
xor
push
jb
mov
jo
xor
mov
cmpsl
daa
sbb
inc
addb
xchg
leave
add
ljmp
cmpsl
add
lods
push
or
jp
push
dec
aad
mov
ds
cld
add
dec
or
sti
push
hlt
cmp
pop
icebp
out
pop
inc
mov
pushf
sbb
push
sbb
not
pop
jmp
pop
and
out
jns
xor
push
pop
mov
mov
mov
rorl
push
ficoms
cli
mov
inc
movsb
popf
jp
cmp
imul
icebp
int3
jbe
xchg
jl
scas
gs
xorl
xor
inc
rcrb
pop
or
push
xchg
inc
jbe
pushf
adc
das
and
ret
and
imul
pop
cld
xchg
lret
loop
repz
inc
addl
pusha
dec
sub
pop
dec
push
mov
sahf
stos
mov
add
sbb
cmp
cli
fcoml
ret
call
aas
icebp
rsm
scas
inc
data16
push
xchg
xor
inc
cmp
jecxz
push
mov
push
fldenv
adc
jle
or
or
push
sub
stos
jecxz
push
inc
dec
or
sti
xor
jmp
lahf
out
dec
xchg
dec
adc
mov
lret
push
xchg
loopne
outsl
cmpsl
loope
adc
or
jnp
loop
cwtl
cmp
into
mov
or
pcmpgtw
std
je
jecxz
or
arpl
outsb
push
push
in
push
inc
cmp
int3
sbbl
leavew
insl
ss
mov
fidivrs
rcrb
mov
pop
mov
dec
inc
stos
sub
out
cmc
inc
cmp
ss
sbb
pop
mov
daa
icebp
push
mov
pop
icebp
mov
mov
push
xor
xchg
aaa
or
xor
imul
xor
je
add
sbb
mov
mov
les
pop
sti
sti
xchg
adc
dec
xchg
xchg
lock
sub
sbb
gs
test
mov
in
jg
cmp
pop
dec
pop
jno
imul
clc
loop
pop
insl
push
movsl
xchg
and
jp
pusha
xor
je
test
cs
xchg
xor
shl
mov
mov
xchg
mov
cmp
test
imul
ficompl
cmp
out
or
adc
xlat
dec
push
dec
addl
add
jb
pop
pop
daa
sub
out
mov
popa
orl
notl
rol
aas
addr16
sub
xchg
mov
and
daa
iret
xchg
clc
mov
jns
inc
cs
es
xor
xlat
inc
lds
lock
lahf
data16
add
dec
cmpsl
cmp
xor
into
xchg
cs
adc
ss
push
ret
sub
nop
mov
enter
sbb
shll
pushf
ljmp
dec
mov
cltd
add
loop
jecxz
inc
cli
push
xchg
out
dec
lret
and
addr16
jle
js
mov
hlt
aad
rolb
lsl
sub
sub
sbb
imul
xchg
fbstp
adc
rcrl
cmp
fnstenv
outsb
or
shr
xor
sub
mov
in
cli
repnz
push
je
bound
cmpsl
addr16
ret
test
push
in
xor
sbb
mov
cld
ds
jmp
sub
popa
push
sbb
setae
push
sbb
xorb
mov
leave
and
imul
mov
test
std
sbb
sub
mov
jne
dec
fmull
adc
out
pushf
jne
cmc
icebp
mov
dec
fs
clc
push
ret
push
ljmp
es
mov
iret
mov
cmp
roll
mov
stos
sti
add
pop
xor
push
shr
mov
inc
jns
dec
stos
lcall
aas
ffree
mov
dec
sub
clc
cmp
insl
xchg
nop
loopne
xchg
xchg
inc
add
push
int3
xchg
ja
gs
fs
imul
add
jo
push
pop
in
pop
jns
xchg
mov
jne
pop
mov
dec
cmp
in
dec
mov
jb
imul
aaa
outsb
sbb
aaa
add
mov
sbb
mov
add
lahf
adc
test
cmp
stos
jns
into
in
lret
repz
daa
mov
mov
mov
mov
lcall
fimull
fdivl
cmc
lret
xchg
mov
cmc
rorl
and
add
or
and
lahf
in
dec
sahf
fwait
xchg
cmp
jno
pop
pop
stc
sbb
pop
sbb
or
jge
movsl
outsl
shrl
push
jno
sub
jl
or
mov
pop
mov
mov
gs
jo
clc
cmp
jnp
sahf
cmpsl
lret
mov
insb
repnz
pop
mov
rcll
adc
popa
cmpl
mov
and
add
cmpsl
push
je
mov
or
sbb
into
mov
enter
or
dec
lea
add
xchg
adc
and
xchg
mov
dec
sub
and
inc
jns,pt
jns
js
out
or
and
mov
shl
loop
loopne
add
das
pop
scas
mov
lods
repz
nop
sbb
cmpsl
shl
test
bound
fsubl
jmp
mov
outsb
or
pop
sets
dec
leave
sbb
je
pop
mov
out
sbb
xor
add
lcall
fstpt
mov
in
jle
ret
push
jg
lcall
mov
dec
inc
dec
xchg
mov
popa
imull
cmpsl
fisubrs
stc
or
cmpl
cmp
lahf
push
ja
xchg
sub
adc
pop
cs
cmpsb
pop
outsl
adc
mov
sub
idivb
lock
pop
xor
cld
cmp
pop
push
in
insl
loope
cmp
mov
insl
pop
pop
mov
jecxz
mov
leave
je
imul
xadd
clc
sbb
cmp
outsb
push
into
and
sbb
mov
xlat
sbb
aam
xchg
mov
lret
ljmp
cmp
mov
out
je
js
push
mov
and
mov
leave
or
adc
inc
sbb
imul
ds
ret
or
add
jge
inc
ret
ss
xchg
test
adc
pop
inc
hlt
psubusb
loop
outsl
dec
sub
fs
cmp
and
jecxz
rol
scas
dec
sub
inc
rcll
push
or
push
mov
add
cmpl
jecxz
cltd
enter
mov
mov
adc
in
mov
sbbl
cmp
push
in
cmp
pop
dec
int
cwtl
in
pusha
int
jb
push
lret
sbb
xchg
cli
loope
push
arpl
mov
or
adc
stos
shll
xor
cltd
cmp
lea
das
mov
mov
xchg
rolb
lods
sbb
add
inc
mov
inc
add
inc
lock
push
jl
pushw
xor
inc
pop
movsl
sub
inc
inc
cmp
or
cmpsl
fimull
add
std
xor
mov
mov
mov
sbb
into
int
loopne
cmp
jne
js
daa
loop
xor
call
push
imul
jmp
add
loop
in
jge
push
push
cmp
jmp
rcl
lods
mov
fimuls
xchg
jmp
mov
push
cmpsl
inc
or
lret
mov
inc
int3
jo
mov
xchg
into
add
cmp
data16
mov
cwtl
shlb
cs
mov
pop
push
mov
mov
popf
pusha
pop
cmc
fs
test
cmpsl
fiadds
add
inc
adc
add
mov
or
jmp
cmp
imul
into
popf
lcall
or
cmp
mov
ficoml
data16
cmp
fstpt
sbb
xchg
insb
test
jo
xchg
cmp
or
sahf
pop
and
mov
and
lds
enter
mov
and
push
fs
mov
mov
rorl
mov
ret
dec
sbb
and
loopne
or
scas
cmp
sub
pop
addr16
pop
stos
push
cld
in
mov
adcb
lahf
enter
push
push
lds
out
pop
mov
adc
dec
pop
dec
adc
inc
xchg
ja
in
pop
or
je
jg
push
xor
fdivs
sbb
inc
das
pop
lret
adc
mov
rorb
sbb
ss
dec
xor
push
push
int
loopne
cmp
in
add
mov
ljmp
es
xchg
into
cmp
jno
sbb
hlt
incb
ffree
jg
sub
test
lea
je
dec
mov
fs
iret
mov
repnz
jmp
nop
roll
sti
pop
xchg
cmp
cld
popf
adc
test
or
jg
je
lock
in
mov
mov
dec
and
xor
clc
ljmp
mov
dec
dec
pop
adc
icebp
in
daa
outsl
mov
out
in
fimull
shl
mov
repnz
mov
sub
out
stos
in
notl
xor
or
into
filds
sbb
aad
dec
sbb
jp
sbb
jns
xorl
aaa
jecxz
das
mov
sbbb
sub
out
stos
les
hlt
iret
pop
dec
mov
ret
arpl
xchg
das
ds
negl
mov
pop
out
jb
es
mov
in
pop
adc
repnz
and
or
lahf
xor
cmpsb
inc
pop
cli
into
decl
mov
je
jp
testl
inc
fs
in
mov
repz
pop
outsb
insb
adc
jbe
jge
outsl
or
nopl
popf
sarl
mov
cmpsb
ljmp
imul
ret
mov
int
jbe
pop
adcb
aam
xor
cltd
enter
insb
jmp
into
cmpsb
outsb
mov
addr16
mov
stos
insb
and
mov
adc
imul
stos
sub
jmp
add
xchg
mov
jmp
mov
sub
out
dec
outsb
mov
xor
icebp
mov
movsl
shl
ret
or
mov
mov
daa
push
and
ror
popa
insl
fcmove
jecxz
jecxz
arpl
mov
inc
adc
mov
or
cmp
arpl
jecxz
test
mov
fldenv
dec
fistl
jecxz
add
setbe
gs
jno
sub
pop
inc
pop
adc
orl
xchg
ret
adcb
cmp
sbb
std
cmp
push
or
loopne
mov
dec
outsb
mov
mov
ss
imul
adc
adc
jns
push
stos
mov
jne
packssdw
std
inc
outsl
and
aad
mov
aas
out
ja
xchg
mov
scas
je
sarb
inc
arpl
stos
mulb
repnz
test
aas
xchg
lcall
outsb
xchg
mov
adc
xchg
shll
and
inc
push
int3
xlat
cli
push
int
push
push
mov
mov
fisttps
addr16
jns
or
cs
mov
and
or
bound
dec
aam
jecxz
mov
jnp
or
ret
cmp
popa
add
jmp
aaa
jg
push
aad
outsl
mov
mov
dec
sub
push
out
sub
adc
outsl
and
add
icebp
pop
cltd
testb
aaa
xchg
nop
enter
sahf
and
adc
mov
cltd
add
sahf
ds
or
gs
inc
js
add
out
adc
loope
cmp
push
ss
fwait
mov
add
or
adc
mov
out
sar
pop
js
arpl
jge
fidivrl
sub
adc
pop
pop
cmpsb
xchg
push
fcompl
sbb
loopne
fs
daa
es
mov
aad
sbb
pop
jl
out
mov
scas
fcompl
xlat
dec
xor
sbb
sahf
rcrb
pop
xor
mov
mov
mov
xlat
sub
push
or
lods
data16
xor
out
fldl2t
arpl
mov
das
pop
xchg
out
mov
fadds
lea
es
xor
mov
and
test
leave
push
ficoms
out
rcll
mov
enter
xor
test
cmp
mov
es
mov
rcr
sahf
adc
mov
sti
xor
ds
ds
dec
cwtl
mov
mov
hlt
dec
jae
and
arpl
xor
cmp
mov
dec
add
push
mov
xor
mov
push
dec
cld
pushf
aas
sbb
sbb
sub
mov
xchg
bound
sub
out
mov
call
sub
jns
inc
lds
out
lods
lods
sbb
test
dec
dec
push
sti
xor
pop
gs
movsl
push
loope
adc
jae
mov
cmpsb
pop
mull
pusha
sub
mov
pop
cltd
cmp
lahf
imul
push
jns
mov
es
cmovnp
js
std
fsubrs
and
int
rcll
das
in
xchg
aas
js
cltd
cmp
lahf
cwtl
lock
pop
pusha
lds
aas
mov
pop
dec
lcall
sbb
addl
push
popa
cwtl
mov
hlt
rorl
jns
rcll
push
add
sbb
int
stos
shr
dec
xor
xor
inc
push
aam
es
cmp
mov
and
rcrb
outsb
cwtl
mov
xor
clc
mov
imul
lock
int
xchg
mov
fldt
mov
daa
mov
dec
iret
outsl
out
popf
dec
or
imulb
push
lret
cld
mov
sub
jae
mov
ss
out
imul
sbb
or
cmp
and
sub
cmp
adc
mov
cmc
mov
jb
outsb
jecxz
adc
lds
stos
pushf
icebp
inc
push
lock
imul
stc
inc
test
rol
imulb
negl
jb
call
cmp
pop
push
or
mov
mov
xlat
xor
into
inc
scas
aaa
cli
adc
nop
xor
repz
nop
fs
das
out
jecxz
aad
paddq
sbb
mov
int3
or
out
lock
jecxz
dec
scas
in
xor
pushf
add
xchg
push
sbb
pop
cmpsb
mov
mov
dec
xor
xchg
xchg
gs
pop
movsb
imul
das
stos
adc
cmp
clc
and
fs
jb
pusha
pop
adc
in
sbbl
dec
movb
or
cwtl
insl
cli
jl
std
inc
sub
xor
jae
xor
mov
fnstsw
add
jno
adc
inc
aas
lret
les
dec
xchg
stos
or
push
and
ds
sub
push
inc
inc
popa
fidivl
push
sub
inc
push
jge
and
int3
pop
push
test
fmul
push
xchg
fisubs
cli
mov
lret
cmc
pushf
mov
inc
outsl
sbb
mov
jp
cli
test
popf
sbb
arpl
sti
cmc
sti
stos
push
lret
shll
subb
test
loope
push
out
sbb
ss
and
add
add
push
push
sub
push
xchg
sub
mov
add
test
jae
fidivrs
test
jg
dec
dec
mov
ret
arpl
mov
lcall
insl
js
je
outsb
ret
inc
bound
jmp
mov
mov
sbb
jo
stos
out
cld
add
sarl
xchg
xchg
sahf
xchg
pushf
sti
push
xchg
nop
inc
sbb
xlat
dec
dec
jnp
pop
add
dec
imul
divb
scas
push
iret
mov
dec
test
rcl
loop
sysexit
inc
and
cmpb
std
movups
repz
push
sbb
adc
and
adc
or
inc
fldt
ja
mov
mov
loop
lret
fldenv
pop
cmp
xchg
cltd
push
daa
ss
jbe
mov
push
pop
xchg
in
sbb
ds
pop
out
test
test
xchg
cmp
lahf
push
adc
sbb
adc
out
adc
pusha
or
mov
mov
decl
dec
icebp
jno
add
lea
sti
mov
and
push
scas
jmp
sbb
fs
mov
loopne
adc
inc
xchg
and
cmp
xor
mov
dec
rcl
sub
jg
rcrb
sbb
xor
lcall
mov
cmp
pop
leave
loope
dec
lahf
and
pop
imul
xor
pop
pop
mov
push
cwtl
stc
std
fs
sbb
lods
sbb
add
rcrb
jns
fcoml
push
stc
mov
ret
std
stos
xchg
jb
sbb
addr16
sbbl
mov
dec
inc
cltd
xchg
inc
adc
mov
mov
mov
xor
std
fsub
mov
mov
in
xor
sbb
xor
sbb
repz
jbe
fldl2t
dec
into
mov
test
cli
jp
out
or
jle
ret
or
sti
xchg
cltd
rcl
push
lret
loopne
lret
mov
push
xor
mov
in
sub
xchg
inc
mov
gs
scas
jg
inc
mov
add
cwtl
or
imul
std
popa
js
movsl
or
in
dec
es
sub
and
jp
jbe
add
xchg
scas
aam
arpl
addr16
add
stos
sub
jp
cmpsl
push
mov
out
idiv
pop
push
push
inc
cs
hlt
and
cmp
and
jo
mov
add
sbb
icebp
inc
lret
add
insl
xor
mov
push
lret
in
jnp
cmpl
xor
jg
jmp
mov
lods
xor
test
xor
inc
cmp
call
jl
xchg
loop
lods
std
repz
inc
rorb
mov
ror
pushl
hlt
or
shlb
inc
aam
lods
int3
or
out
mov
mov
push
in
mov
leave
pop
lea
cmpsb
repz
and
cs
xor
js
bnd
push
cmp
pusha
pop
jmp
lods
sub
daa
lret
jg
push
dec
cmp
push
leave
in
inc
cmpsb
or
inc
cmp
and
shlw
and
idiv
cmp
mov
xchg
xchg
mov
xor
mov
cmp
pop
sub
adc
sbb
push
mov
push
or
imul
mov
xor
add
pop
push
dec
sub
or
shl
or
in
jl
icebp
subb
imul
lret
clc
sbb
add
les
sbb
mov
mov
xchg
mov
int3
ja
rcpps
inc
add
inc
sbb
sbb
fists
fwait
push
loope
test
pop
pop
ffree
mov
cmp
mov
out
rorl
jle
pop
arpl
cs
or
pop
sbb
insl
xchg
inc
adc
add
push
cmp
xchg
mov
mov
jno
sti
rcr
out
sub
das
mov
add
loopne,pn
call
inc
xchg
xchg
call
sbb
ds
std
or
lret
orb
ret
xchg
arpl
pop
fstps
or
pop
test
dec
fcmovnu
ss
cltd
stos
push
mov
icebp
mov
cwtl
and
outsl
sarl
or
fdivr
mov
lods
push
clc
xor
push
add
bound
push
or
es
into
mov
lret
xchg
ret
rcl
pop
dec
push
lods
pop
rcl
adc
into
pop
pop
fisubl
mov
testl
fdivrp
dec
in
push
dec
shrl
add
mov
cwtl
sar
daa
test
aas
adc
xor
enter
cltd
outsl
fs
sub
test
ljmp
cmp
clc
sub
mov
pop
sbb
sbb
out
test
aam
add
ja
stc
add
subl
push
push
out
adc
mov
push
xchg
loope
push
scas
jbe
out
mov
and
popa
push
xchg
and
shlb
mov
mov
add
lret
shr
adc
push
mov
dec
aas
call
or
das
push
scas
mov
push
packuswb
mov
mov
leave
testl
lea
mov
in
jae
cltd
lds
les
sbb
pop
iret
push
jne
cwtl
or
sub
das
test
push
sub
lahf
fstpt
out
mov
sahf
lds
scas
push
mov
and
clc
dec
insl
jae
or
push
jp
setg
repnz
or
cmp
xchg
and
xor
dec
dec
push
negb
loop
jl
inc
push
shl
jne
sarb
shrl
fisttpll
sti
mov
jbe
inc
inc
mov
jnp
sahf
xchg
and
jmp
xor
push
adc
les
mov
sbb
mov
fidivrl
movsb
in
cmp
jae
and
call
mov
test
cmpb
adc
inc
ficomps
push
sub
mov
int3
jmp
std
push
pop
arpl
out
call
sarb
push
lds
insl
scas
add
cmc
mov
xchg
dec
aad
xor
clc
in
or
out
inc
fwait
push
sti
dec
idivb
dec
add
mov
lods
adc
loopne
mov
jg
xor
cmp
test
loop
cmp
daa
mov
or
mov
lahf
jne
rolb
ret
mov
dec
mov
sbb
pop
mov
flds
jnp
out
adc
xchg
dec
stos
inc
push
cmp
into
cmp
imul
into
ds
mov
or
pop
pop
fimull
fnstcw
mov
pop
or
jmp
or
ret
adc
cmc
les
sbb
dec
xchg
cltd
mov
and
pop
aad
ret
into
ficomps
mov
mov
xor
je
adc
lret
adc
cmp
xchg
lock
lock
ja
add
push
int
es
pop
ret
mov
mov
mov
cltd
xor
xchg
dec
push
jno
les
and
loope
js
stc
addr16
bound
in
data16
in
push
xor
dec
mov
pop
shrl
sti
cli
jne
adc
ror
mov
scas
xlat
push
sbbb
cmpsb
mov
mov
or
xor
dec
enter
or
add
mov
iret
loope
dec
cmpsl
icebp
sub
test
aam
or
add
pusha
jne
inc
rcll
push
ror
popa
es
fcmovne
arpl
cld
mov
clc
mov
jns
negb
leave
push
es
jmp
popf
add
sub
roll
xchg
push
inc
stos
cli
push
xchg
dec
pop
and
mov
fldt
mov
fmulp
sbb
xchg
add
sti
sbb
stos
and
mov
insb
rcrl
mov
mov
mov
cmp
inc
push
cli
cld
lods
inc
or
xchg
in
loopne
mov
ror
cmp
gs
inc
sub
jp
dec
xchg
xor
sub
mov
mov
mov
jae
int
in
jle
mov
jae
pop
xorl
and
cmp
pop
pop
cli
xor
mov
cmp
repz
mov
sbb
sar
call
aaa
movsb
cmpl
mov
push
fiadds
sbbb
cmp
dec
push
sbb
loop
lahf
push
and
mov
out
or
xchg
fwait
push
mov
sub
stc
xchg
dec
inc
rclb
and
adc
push
cmc
pop
aam
xchg
fwait
xchg
mov
sub
sbb
mov
daa
mov
jb
push
mov
cmp
dec
pop
insl
push
or
test
lret
fcmovbe
aas
dec
mov
int3
insl
sbb
lds
mov
pop
mov
leave
shrl
pop
mov
sbb
dec
aad
sbb
and
mov
add
or
add
clc
jns
sbb
rol
mov
add
mov
pop
movl
insb
aad
cmp
loopne
xor
or
test
xchg
inc
jge
sbb
xchg
popf
cmp
jne
les
xchg
jno
sahf
lock
xchg
orl
xchg
cmp
jns
test
clc
mov
add
jnp
sbb
add
test
lods
shrl
ss
pop
or
lock
dec
sub
mov
ljmp
push
subl
or
call
or
mov
es
out
cltd
jae
stos
xor
mov
std
sbb
lods
xchg
xor
loope
mov
push
xchg
xchg
and
add
js
test
and
sub
js
sub
mov
add
test
adc
sub
sub
mov
and
mov
pop
orl
inc
ss
pop
xchg
bound
cmp
int3
ljmp
sbb
push
stc
mov
nop
sub
out
sti
sub
xlat
xchg
shrb
jecxz
andw
dec
push
sub
lods
js
rcrb
fwait
insl
lea
and
mov
mov
dec
dec
mov
shrl
scas
push
addr16
sahf
mov
iret
jp
cmp
mov
cld
in
les
jbe
pushf
in
test
fs
fs
xor
push
pop
push
cmp
cwtl
xchg
mov
out
sbb
or
mov
das
and
push
or
mov
aas
or
pop
popf
adc
jg
outsb
scas
adcb
pop
pop
xchg
pop
in
push
dec
xor
add
fisttps
sbb
icebp
or
hlt
push
inc
das
packuswb
ja
decl
xchg
cld
cmpsl
push
mov
xchg
jp
jg
test
dec
pop
xchg
mov
loop
cmp
mov
imul
scas
scas
imul
lret
push
test
xchg
outsl
xor
adc
add
push
or
sahf
cmpsb
jo
rcrl
stc
pop
push
insl
pop
je
mov
mov
mov
pop
inc
mov
push
add
cmpsl
aad
out
xchg
dec
and
shr
dec
cmpsb
mov
cld
jbe
jno
loope
push
xchg
add
imul
or
mov
cli
cmp
inc
or
xchg
orl
cmp
jbe
mov
test
sbb
notl
or
lds
push
cmpsl
cs
mov
xchg
jmp
push
imul
jns
dec
cltd
int
mov
das
adc
add
dec
cmpsb
and
dec
add
in
mov
in
xchg
and
movsb
fucomip
clc
enter
inc
pushf
adc
mov
fidivs
stos
aam
xchg
inc
outsl
push
jmp
repz
mov
fidivrl
hlt
jnp
in
repnz
cltd
and
in
lcall
lahf
inc
fiaddl
leave
dec
pop
mov
mov
negb
ficompl
push
cli
clc
iret
pop
sub
loopne
aam
lds
mov
out
mov
push
enter
jno
ljmp
inc
jnp
push
sbb
push
cli
insb
jp
aad
pop
and
mov
push
lea
push
xor
fsubr
sub
cmp
int
fldlg2
shrl
popf
pop
add
cld
or
jb
sar
mov
mov
cltd
dec
dec
bound
push
xchg
movsb
js
insl
cmp
jg
test
das
sti
pop
mov
jmp
mov
and
mov
loop
mov
sub
fisubs
jbe
inc
push
stc
jle
sbb
ljmp
jg
xor
xchg
pop
mov
stos
xchg
mov
add
jmp
movsl
mov
addb
sbb
imul
mov
sub
xchg
cmp
jg
mov
jle
outsb
clc
mov
xchg
sbb
jne
or
ljmp
sarb
and
nop
dec
push
jge
sbb
das
adc
imul
mov
jnp
mov
add
je
popa
mov
insl
lcall
lock
rcrb
cmpsb
fisubrl
js
pop
movsl
imulb
loope
sub
imul
je
dec
or
std
xchg
mov
inc
test
jo
jmp
push
add
xchg
popf
in
bound
jmp
pop
cmpsl
or
mov
or
dec
add
addr16
roll
sbb
xor
dec
out
sub
xor
and
inc
movsb
add
aaa
xlat
jp
movsl
xchg
ljmp
jae
inc
xchg
sbb
aad
push
ret
and
push
push
ret
cmp
inc
bound
pop
cmpsb
push
out
adcb
into
xor
jge
cmp
es
insl
push
icebp
test
lods
push
add
push
mov
sub
icebp
sbb
enter
int
pusha
int
lret
and
inc
jle
pop
cltd
xor
mov
cmp
je
loop
pop
jl
dec
pusha
stos
gs
jne
dec
push
mov
mov
leave
or
int3
rcll
mov
cmp
in
mov
pop
mov
out
into
mov
outsb
and
insb
pop
xchg
in
dec
loope
cmp
rolb
pop
push
jo
cmpsb
xor
out
loop
ret
std
pusha
or
cwtl
lret
dec
rcl
fiaddl
dec
inc
mov
jmp
fstpt
outsb
xchg
loope
rorb
sti
into
pop
xchg
mov
ja
std
fwait
pop
insb
xor
shll
out
cltd
sbb
lea
stos
dec
lcall
cmp
push
js
add
push
lock
and
mov
inc
pushf
sbb
out
sub
sbb
push
jmp
cmc
mov
call
mov
stos
jns
xchg
sbb
push
arpl
dec
sub
out
dec
leave
rol
mov
sahf
adc
add
enter
lcall
xchg
xor
mov
sub
dec
mov
lock
lret
aam
lds
xlat
sub
mov
movsl
add
jae
out
gs
xor
rorl
sbb
xchg
or
mov
xor
lret
sahf
aas
cs
inc
repnz
mov
xlat
in
inc
adc
inc
shl
mov
push
push
mov
sbb
imul
jmp
cmp
ja
lods
dec
jp
cli
movsb
lea
shlb
addb
out
sbb
cmpsb
outsl
xor
jmp
or
aas
gs
in
scas
out
push
repz
gs
ds
in
or
push
movsl
jbe
cmp
push
incl
std
shrl
mov
dec
sahf
in
push
cmp
les
dec
aad
mov
dec
adc
sbb
adc
mov
clc
adc
adc
push
in
daa
lcall
pushf
ret
fs
mov
sub
dec
cmp
arpl
inc
andl
not
or
inc
daa
jle
cs
hlt
mov
loopne
outsb
repnz
jne
test
cs
jo
push
xchg
insb
pop
add
outsb
cltd
leave
fimull
jl
lea
jo
sub
ds
das
xchg
push
cmc
push
mov
xchg
inc
in
jae
cmpsb
xor
out
iret
out
inc
dec
push
sub
ret
ret
sub
sub
ds
ficoml
xorl
xor
cld
push
add
pop
adc
test
adc
mov
repnz
sub
xchg
sub
push
movsl
lea
gs
adc
lret
mov
or
insl
jns
adc
dec
push
jge
jns
sti
adc
arpl
aad
inc
jno
rorl
cli
popf
dec
jo
pop
addr16
and
mov
mov
clc
ljmp
add
sti
aad
mov
push
or
leave
or
mov
sbb
pop
iretw
stc
sbbl
stc
sbb
sub
or
xchg
in
imul
jo
std
add
lcall
xor
cmpsb
add
sarl
ds
cli
and
push
adc
jecxz
xor
or
in
fwait
iret
aas
mov
inc
mov
scas
push
adc
xchg
dec
push
xchg
shlb
and
scas
xor
dec
arpl
sbb
pop
xor
sub
int
push
cs
stc
adc
xor
fnsave
adc
and
loop
push
and
cmp
or
mov
shll
roll
and
loope
sbb
xchg
inc
in
int3
aad
xorb
out
and
sub
mov
mov
adc
dec
lahf
push
aas
test
jge
outsl
js
shrb
clc
jns
sarb
fisubl
adc
mov
sub
dec
dec
out
push
dec
sti
pusha
push
out
add
test
scas
hlt
daa
not
cli
outsl
pop
sbb
inc
ljmp
out
dec
es
push
add
mov
test
xor
and
ja
nop
push
daa
push
je
cmpsl
or
mov
pushf
fnstsw
or
cs
ss
xor
repz
fisttpll
clc
jmp
insb
push
mov
and
outsl
movsl
sbb
pop
xchg
loopne
mov
cmpl
mov
pop
inc
mov
jne
mov
out
jns
mov
push
cld
pop
rcll
orb
and
mov
fsubrs
and
mov
dec
lcall
dec
dec
notb
adc
popa
lods
cld
add
and
or
nop
pop
pop
mov
pushf
inc
in
arpl
ja
push
mov
inc
add
pop
jno
and
mov
cli
mov
mov
hlt
jle,pn
or
sub
inc
add
push
xor
hlt
jnp
dec
jb
mov
popl
jp
ds
or
push
jns
cmpsl
fmul
repnz
cli
lods
test
aaa
push
shlb
es
add
cmp
nop
imul
and
jp
cmpsl
jg
out
or
stos
ss
cmpsb
shr
push
outsl
rcrl
jle
sub
roll
stos
cmp
ds
adc
mov
pop
xchg
ja
cmpsb
mov
xor
leave
pop
mov
fadds
and
std
fwait
xchg
and
xchg
inc
dec
mov
xchg
and
outsl
aad
mov
mov
inc
and
pop
cmc
std
clc
ljmp
push
int3
dec
adc
adc
dec
ss
xchg
movsl
pushf
es
repz
out
sbb
repz
movsb
enter
mov
nop
inc
add
sbb
mov
lahf
rolb
jp
pop
mov
pop
shll
jb
arpl
sub
push
js
mov
out
add
or
rcll
mov
and
sbb
addr16
jmp
and
or
sub
ds
add
mov
mov
or
shll
mull
fisubl
mov
mov
aad
in
push
jo
aas
loop
add
enter
test
mov
pop
pop
push
inc
jns
inc
jl
adc
vsubps
lock
push
inc
pop
dec
cmp
popa
sahf
push
mov
dec
add
xor
sub
cwtl
iret
dec
out
out
cmp
or
mov
fs
cmp
pop
ret
cmp
xorb
les
jmp
push
fidivrs
pop
cmp
pop
dec
add
pop
jns
or
adc
jnp
push
arpl
test
add
add
mov
loop
out
xchg
data16
movsl
lds
adc
mov
shlb
cmp
fildl
pop
in
jo
or
test
push
mov
std
hlt
jl
cmp
pusha
xchg
stc
mov
mov
dec
push
mov
mov
fwait
cld
gs
inc
cwtl
movsb
sub
and
stos
ja
into
xor
das
call
jmp
lret
ljmp
cs
int3
adc
jp
mov
out
inc
add
add
gs
pop
fistpl
out
lods
adc
mov
lcall
jg
mov
and
das
sub
jmp
adc
cmpsb
jbe
xchg
inc
lock
dec
test
sub
mov
jb
adc
ljmp
xchg
push
or
pop
imul
push
and
popl
xchg
ja
test
sahf
inc
test
sti
mov
not
add
or
xchg
popf
push
mov
push
imul
xchg
mov
pop
xchg
adc
arpl
enter
pop
xchg
setnp
cmp
adc
addr16
mov
mov
and
aad
out
lods
push
inc
fdivr
dec
or
mov
mov
mov
and
xchg
add
or
inc
mov
inc
jmp
sti
popf
lods
add
lret
pop
cmp
out
jl
int
pop
cmp
inc
adcb
aad
aam
push
lret
fs
add
loopne
add
insl
cmc
dec
loopne
sahf
jmp
sub
rorb
add
pop
xchg
repnz
xchg
imul
loopne
cmpsb
add
add
adcb
or
jg
pop
daa
xor
cmp
stos
cld
xchg
scas
xor
aam
adc
notl
xor
mov
scas
in
pusha
mov
gs
cmpsl
or
ljmp
ljmp
jb
jae
int
adc
stc
pop
jge
in
adc
sbb
jnp
out
into
movsl
das
fcmovu
adcl
in
ret
dec
pop
jno
push
mov
sbb
or
arpl
push
rorb
lock
rcl
push
bound
adc
mov
sahf
jae
enter
popf
jns
lea
sub
sbb
jl
jb
cmp
mov
sbb
clc
arpl
xchg
pop
dec
xor
test
jae
and
insl
sbb
cmp
sbb
in
mov
mov
rolb
mov
mov
or
or
dec
rcrb
push
testb
pop
jo
int
sbb
jo
mov
into
out
cmp
adc
lds
into
dec
ljmp
add
ja
mov
adc
adc
lret
add
cmpl
in
iret
adc
jle
xchg
jno
into
or
cmpsl
xor
mov
xchg
enter
and
cmp
inc
and
inc
cmc
add
xor
mov
sub
xor
icebp
cmp
add
or
jg
idiv
sti
fistps
rcrb
cmp
mov
cmpsl
out
or
iret
jmp
mov
or
fwait
nop
sub
int3
es
dec
jns
pop
insl
flds
jg
xchg
std
fs
mov
sbb
popa
rcl
lods
movsl
negl
in
popa
cmp
out
add
gs
mov
gs
jnp
fistl
bnd
enter
xor
mov
ljmp
sub
insl
stc
mov
clc
inc
jmp
jp
shl
mov
popf
sbb
push
fcmovb
mov
fistps
xchg
fidivrl
lock
stc
mov
pop
jg
sbb
mov
xor
dec
xorl
xor
sti
hlt
aaa
mov
push
rcr
arpl
sub
push
xor
sti
stc
nop
and
push
mov
jb
aaa
add
push
orb
fs
xlat
sub
push
push
cmp
adc
cmpsb
mov
fcompl
xchg
mov
xchg
and
pop
stc
test
imulb
pop
and
inc
adc
out
sub
addr16
cs
daa
xlat
push
jmp
mov
or
cmpsb
jl
or
cmp
ficoms
in
cmp
ljmp
fwait
dec
pop
xchg
cli
push
cmpsb
cmp
and
pop
mov
pushf
cltd
loopne
jp
adc
shlb
sub
dec
js
mov
adc
xor
dec
ret
xor
in
jp
dec
outsb
inc
xor
scas
mov
push
cmp
das
dec
and
xchg
fldenv
out
mov
scas
out
fdiv
inc
mov
mov
ds
dec
or
hlt
pop
inc
push
jnp
pop
jns
mov
ret
rolb
outsl
fadd
sub
xor
fcmovne
or
js
pop
jecxz
std
mov
imul
cmpsb
cmp
and
imul
js
mov
xor
rdmsr
leave
and
fst
rorl
push
and
test
jne
mov
ljmp
daa
shlb
in
sar
cwtl
test
inc
fprem
and
xor
xorb
icebp
inc
jns
popa
inc
jmp
lcall
stc
add
sahf
cmp
int3
lock
sub
push
mov
out
sub
lcall
lahf
adc
push
mov
pusha
cmp
rclb
pop
enter
dec
mov
nop
mov
xchg
or
jnp
add
loope
inc
pop
stos
out
push
std
in
adc
in
stos
or
test
adc
or
xor
call
jmp
lcall
xchg
cmp
pusha
nopl
or
jns
pop
in
add
imul
notl
sahf
out
filds
fsubs
int
nop
roll
call
insb
hlt
lods
dec
into
rcl
test
movsb
popa
inc
frstor
cwtl
pop
loop
hlt
mov
rcrb
and
push
jg
fldenv
mov
add
push
in
cwtl
cmp
xchg
mov
or
mov
movsl
ds
dec
hlt
mov
std
push
mov
imul
cmpsl
ja
in
cld
decb
add
shrl
xlat
shlb
jns
loopne
loopne
mov
mov
pcmpeqb
subl
daa
mov
sbb
cltd
orb
and
dec
and
cwtl
push
out
fwait
mov
call
add
imul
cs
inc
mov
orb
in
out
cltd
clc
outsl
arpl
cmp
xor
add
jae
jne
cmpsl
out
jl
and
aaa
mov
lahf
stc
sub
mov
jbe
jle
sbb
and
mov
adc
push
add
add
mov
xchg
insb
pop
scas
jge
pop
xchg
add
add
lds
sarb
sbb
fimull
jb
push
mov
mov
add
lock
push
xor
jb
push
lock
inc
out
xor
shlb
jmp
xchg
popa
in
xchg
icebp
jmp
aad
jo
and
mov
dec
rolb
mov
dec
pop
push
push
sbb
mov
call
movsl
loope
dec
negb
pop
in
mov
dec
mov
xor
inc
dec
pop
and
xor
xchg
sbb
ja
cmpsb
fstl
insb
in
sub
push
enter
sar
mov
xchg
ret
mov
paddsb
sbb
out
or
xchg
push
out
inc
inc
sbb
icebp
rcrb
jl
rorl
iret
imul
aad
cmpsb
test
xlat
inc
test
mov
out
xchg
incl
shlb
sbbl
xlat
mov
push
sbb
out
xor
hlt
xor
push
pop
mov
or
and
pushf
out
lret
jecxz
pop
dec
inc
insb
or
sub
stos
fstpl
sub
insb
fadds
out
cmp
adc
fsubrl
lods
fdivrs
fnstenv
adc
jns
lret
or
shlb
push
lea
sti
push
jecxz
or
rolb
push
jo
js
and
push
xor
aas
btr
pop
inc
aas
aaa
inc
jmp
out
cmp
mov
aaa
mov
add
mov
push
xchg
mov
sbb
push
xchg
cli
cli
test
mov
push
hlt
testb
negl
out
stos
push
or
sbb
dec
dec
jmp
xchg
pop
outsl
ret
icebp
or
adc
and
adcl
lea
sbb
jae
mov
imul
loopne
or
out
mov
dec
stos
sbb
repz
js
nop
in
push
mov
dec
mov
push
push
or
fs
inc
and
adc
sbb
or
jge
fcoms
push
push
mov
or
xchg
inc
lcall
inc
and
and
adc
inc
mov
push
mov
rcr
sahf
outsl
add
loop
sahf
add
lods
orl
cli
mov
inc
and
mov
fstpt
loope
ret
aad
jl
jo
int3
jnp
push
mov
data16
lods
adc
adc
divl
pop
vorps
lock
mov
inc
dec
lods
cmp
addr16
dec
xchg
mov
pop
mov
xor
add
dec
push
add
push
in
nop
xor
fwait
pushl
fbld
ret
jmp
stc
jmp
and
das
dec
pop
pop
inc
push
sbb
pop
sbbb
subl
cmp
push
mov
xchg
and
call
stos
lret
add
dec
fwait
sbb
mov
sti
out
lea
mov
add
or
in
ja
pop
lret
add
ljmp
add
push
mov
repnz
jno
sarb
ss
lcall
test
into
jnp
nop
shlb
outsl
add
int
sub
test
cmpsb
divb
cli
pop
sbb
addr16
pop
add
inc
sbb
orl
adc
jo
out
ja
test
test
lods
or
call
repnz
sbb
dec
addr16
movsl
push
sbb
pop
mov
loope
mov
jp
outsl
loop
scas
xchg
cli
or
xchg
push
and
xor
test
jns
add
in
les
scas
jb
push
add
lcall
xchg
scas
rep
rcr
sub
ja
ss
mov
lahf
mov
fisubs
push
fcmovne
mov
loopne
mov
movsb
jp
and
and
inc
mov
mov
jnp
fidivrl
inc
call
lahf
mov
dec
push
cmpsl
fs
scas
call
push
js
int
addl
mov
inc
cmpsl
mov
xchg
push
aad
lret
add
jecxz
and
scas
mov
and
sub
cli
pop
int
cld
inc
fidivs
push
pop
cmp
rcl
jmp
imul
mov
arpl
push
bswap
addb
lahf
push
fcmovnb
xchg
hlt
cmp
rcr
sti
mov
inc
jns
xchg
xor
outsb
mov
out
movsl
sahf
ljmp
dec
jns
lods
out
daa
pop
shrb
sub
jns
fistpl
inc
mov
in
xchg
mov
data16
cwtl
fincstp
cmpsl
sbb
inc
mov
sbb
out
and
pop
mov
sbb
xlat
inc
or
mov
cmp
pop
cmp
cmp
mov
xor
popa
sub
pop
repz
xchg
fdivr
out
test
out
jecxz
xchg
sub
xor
push
cmp
jbe
dec
jecxz
dec
dec
xchg
and
mov
lock
in
int
jns
mov
les
std
jmp
inc
ret
mov
xor
dec
stos
pop
shrl
les
fistl
inc
sbb
iret
repz
push
lods
and
add
xor
stc
lcall
fcoml
icebp
jno
setno
mov
mov
jae
or
mov
outsb
fwait
fs
hlt
mov
daa
lcall
nop
dec
rol
stos
jo
inc
cltd
gs
ror
insb
adc
lods
shrd
loop
lret
adc
fbstp
pop
push
mov
jb
mov
fimuls
sub
pop
xlat
cwtl
and
mov
inc
pop
jns
in
pop
and
mov
out
int3
xor
cli
insl
inc
mov
scas
out
sbb
mov
fwait
mov
add
mov
divb
mov
fidivrs
jbe
pushf
inc
mov
stos
pop
xchg
pushf
divb
cmp
xchg
push
jmp
imul
push
flds
pop
jmp
daa
xchg
mov
pop
adc
je
and
shlb
call
sti
jb
push
pop
mov
pop
dec
fbld
popf
shl
cmp
jge
mov
lods
cmpsb
xchg
mov
dec
mov
orb
xchg
sbb
fwait
mov
icebp
push
jecxz
push
cmp
mov
mov
jmp
sub
mov
xchg
shlb
mov
aas
call
xor
int
xchg
jecxz
lcall
cld
xor
and
inc
in
pop
cmpb
push
cs
mov
mov
pop
cmp
rcrl
test
outsl
leave
and
shll
sub
in
cmc
add
or
int
and
repz
xor
insb
xchg
pop
jge
pop
sbb
jne
aad
mov
or
lock
lds
mov
sub
clc
push
aas
push
dec
inc
cs
push
jbe
pop
aam
pushf
popa
xchg
mov
mul
test
loopne
cmp
imul
jbe
movsb
push
sub
mov
mov
push
insb
xorl
cmp
pop
xor
xor
sub
test
mov
jnp
inc
lock
add
push
lods
jp
and
rclb
dec
push
lea
popf
stc
scas
sub
dec
addr16
xor
pop
jecxz
out
xchg
mov
jo
imul
repz
sub
pusha
adc
xchg
sub
test
push
mov
rorl
and
clc
scas
jnp
popf
popa
in
mov
push
mov
stos
decl
nop
inc
pusha
mov
out
jecxz
pop
pop
push
in
cli
lcall
jecxz
xor
aam
add
iret
icebp
lea
jge
aad
mov
fstps
inc
xchg
shll
mov
bound
das
xchg
adc
xchg
pop
inc
sbb
jp
call
cmpsb
test
xchg
xor
cmp
mov
and
ds
in
mov
xor
bnd
test
aaa
add
sarb
testl
jge
mov
fcoml
xchg
and
je
js
insl
jle
pop
push
adc
and
cs
mov
sbbl
and
or
out
mov
out
lcall
scas
dec
push
pop
sbb
testl
dec
mov
scas
and
jge
cmpsb
leave
scas
lahf
rcrl
out
cmp
cltd
pop
pop
xchg
jl
jne
jle
cmp
iret
jae
sbb
ljmp
inc
pop
xchg
lds
cld
aaa
mov
sbb
outsl
push
cmc
sbb
scas
and
leave
cmp
mov
cvtdq2ps
aad
sbb
xor
not
fidivrl
xchg
stos
cs
xlat
es
ret
xor
out
ret
mov
inc
outsb
fstps
push
test
mov
test
ds
ds
cmp
stos
inc
daa
ret
jno
jnp
scas
cld
stos
in
inc
shrl
jge
inc
test
test
in
lret
scas
mov
rclb
scas
rclb
mov
mov
sub
add
jbe
add
idivb
sbb
loop
push
or
adc
fsubrs
cli
inc
xor
jae
sub
sti
daa
lahf
insl
xor
fisttps
leave
dec
popa
clc
popf
out
int3
in
mov
pop
push
add
fwait
ret
ror
push
cmp
scas
cwtl
test
sahf
nop
mov
jp
aaa
mov
inc
pusha
pop
mov
insl
adcl
es
cmp
xchg
fidivrl
fcoms
push
xor
rolb
stc
dec
hlt
daa
push
pop
je
xorb
inc
fnstsw
dec
fucomi
fnsetpm(287
mov
in
inc
push
mov
enter
push
xlat
gs
inc
sub
xchg
sub
cli
pop
jbe
inc
inc
hlt
cli
outsl
repnz
lock
cld
xor
sbb
into
dec
test
cmp
push
cmp
mov
xlat
sahf
dec
sbb
dec
push
xchg
repz
movq
frstor
ss
iret
data16
dec
cmp
outsb
aas
sar
adc
jnp
cmp
sbb
fstl
sub
bound
js
lods
jnp
inc
and
int3
sub
adc
xor
pop
mov
scas
call
call
adc
push
xchg
push
imul
push
mulb
xor
jnp
cmp
jg
fidivl
test
insl
test
hlt
outsb
pop
loope
daa
mov
adc
inc
xlat
in
sbb
fidivrs
fadd
jns
shlb
test
das
cmpb
int3
pop
dec
insb
sub
push
dec
mov
pop
xor
lds
xchg
sub
scas
pop
mov
cs
and
ja
ret
lds
dec
mov
pop
mov
or
mov
add
push
nop
mov
mov
sbb
adc
add
lret
pop
pop
outsb
and
sbb
idivb
jle
and
test
cmp
out
fdiv
out
test
pop
add
icebp
aas
adc
adc
sub
jl
pop
ds
mov
call
movsb
jbe
mov
add
inc
enter
adc
and
adc
pushfw
or
pop
push
not
orl
outsb
insb
xchg
xlat
lret
sub
pop
out
in
dec
mov
popl
std
dec
xchg
lret
cwtl
std
mov
loop
xchg
sub
repz
pop
jmp
xor
pop
addr16
mov
jge
sbb
and
stos
cmc
jg
int
mov
inc
test
and
fisubrs
xor
or
call
pop
fcmove
popf
test
mov
mov
dec
sub
adc
insb
inc
xchg
mov
jmp
fdivs
outsb
adc
sbb
shll
jecxz
pushf
xor
leave
or
sbb
imul
int3
mov
xchg
lds
mov
jmp
test
je
or
fxch
xor
mov
fsubrs
mov
mov
cmp
push
out
push
or
aaa
xchg
popf
jns
adc
fsubp
inc
dec
or
ret
pop
test
stos
rol
es
pop
xchg
sub
rsqrtps
fucom
and
and
out
decl
sti
add
in
pop
pop
loop
stos
arpl
and
incl
imul
mov
cmp
push
das
mov
out
mov
lret
mov
dec
mov
cmpsl
cmpsb
inc
imul
adc
xor
dec
push
fsts
inc
cmp
testb
loope
mov
addr16
jl
mov
adc
sbb
inc
push
arpl
xchg
mov
shrl
repz
test
clc
jge
repnz
pop
mov
pop
jmp
mov
sar
fistps
loop
add
fwait
aas
xchg
dec
push
mov
or
pop
pop
push
mov
gs
xchg
cmp
cmp
outsb
mov
call
mov
ret
lcall
rcll
arpl
inc
push
dec
sbb
push
pop
jge
and
dec
nop
ds
cmc
scas
imul
outsb
add
outsb
or
scas
jae
and
repnz
popf
mov
fdivrl
insl
mov
jo
sbb
lret
jle
push
cld
sbb
mov
std
jmp
sbb
jo
sub
sbb
ficoml
psubusw
fmull
jp
or
fbld
fimuls
jg
mull
daa
pop
mov
scas
jg
pop
clc
test
adc
orb
in
ret
rolb
aam
push
addr16
fisubs
mov
fists
out
mov
mov
out
imul
repnz
stos
push
gs
xor
mov
rcr
pushf
add
pop
mov
shrl
mov
and
pop
and
xchg
ss
imul
lcall
lods
sti
jns
xchg
dec
jp
outsb
mov
lret
push
push
and
cwtl
cmp
cmp
push
notl
inc
in
add
mov
inc
mov
mov
pop
cmp
ljmpw
or
push
ja
pop
lret
mov
mov
sub
insl
mov
inc
mov
sub
mov
and
mov
xor
jno
bnd
mov
jb
add
mov
mov
pop
or
hlt
dec
cltd
xchg
jb
stos
sbb
lret
addr16
mov
enter
test
sahf
pop
and
pop
stos
mov
js
xor
leave
pop
xchg
pop
xchg
ja
or
jle
mov
jno
cld
mov
mov
mov
fsubl
inc
jg
mov
sahf
adc
xchg
jmp
lcall
jecxz
mov
in
fwait
insl
sub
mov
test
fucomip
into
pop
jbe
lds
js
cmp
arpl
lcall
push
inc
add
clc
ds
sbb
or
fldenv
jb,pn
sbb
outsl
sbb
jge
fdivrl
pusha
lcall
jo
xchg
in
or
sub
dec
or
lods
adc
xor
inc
add
inc
add
repnz
xchg
call
add
shrb
pop
sub
or
or
idivb
cmpsl
repz
call
sti
jecxz
push
imulb
jecxz,pt
dec
incl
lock
into
out
pop
cmp
sbb
movsl
cld
pop
pop
xchg
push
ret
pop
inc
push
test
sbb
popf
movsb
lret
dec
xchg
in
xchg
sbb
or
popa
add
mov
push
call
sbb
push
sbb
jge
sbb
lea
mov
adcl
push
insb
cmp
cli
mov
addr16
pop
pandn
push
repz
mov
sbb
out
test
aam
mov
call
jge
filds
and
out
xchg
push
mov
ss
add
fs
xchg
test
jae
stos
add
into
sbb
xchg
leave
pusha
cmp
andl
xor
inc
mov
ljmp
into
jge
jl
lret
insl
inc
cli
jns
mull
adc
mov
dec
arpl
cwtl
pop
sbb
xlat
mov
or
popa
cs
xchg
inc
sub
push
mov
mov
arpl
repnz
inc
iret
xor
cld
ja
pop
push
cmc
in
bound
cmpsl
xor
sub
cmp
or
and
into
ficomps
out
jb
mov
icebp
jge
movsb
pusha
cltd
jns
sbb
cmpsl
push
int
daa
jmp
and
lret
cs
ret
shll
ret
imul
mov
lcall
pop
movb
bound
push
dec
xor
or
mov
jns
cmp
xor
jmp
mov
sub
clc
dec
int
lahf
cmp
bound
push
cmp
loopne
lods
jge
adc
cmp
push
or
pop
std
ljmp
mov
subb
push
ja
out
aad
icebp
mov
hlt
adc
adc
jmp
dec
push
xor
push
aam
fistl
sbb
pop
cmp
mov
lahf
cmpsb
sub
adc
inc
rolb
fs
mov
sub
addr16
jns
cmpsl
lock
div
xchg
mov
pop
jle
out
mov
mov
xchg
lock
adc
je
stc
sbb
test
inc
mov
cmpsl
xchg
jp
insl
sub
pop
mov
push
fcoms
fisttpll
shl
xor
aam
rcrl
jns
pusha
dec
loopne
fucom
repz
aad
test
pop
push
shl
mov
sub
shlb
lods
int
mov
xchg
aas
ja
or
jbe
jg
mov
and
jle
js
jl
push
js
pop
xorb
insb
std
adc
aad
leave
jmp
aas
sub
je
pop
dec
imul
and
or
mov
jb
in
out
stos
xchg
and
push
pop
fdivrl
ret
loop
incl
xor
mov
les
cmp
nop
cmp
jp
push
pop
inc
mov
iret
xor
xchg
sbb
sti
iret
shlb
lds
cltd
add
imul
data16
subl
cmp
ret
sbb
bound
jge
dec
cmp
dec
in
aam
xor
lds
pop
pop
das
lret
movsb
mov
or
xor
orb
mov
push
aad
sar
and
insl
rorb
jmp
jg
mov
sbb
movsb
bound
hlt
lods
in
sub
repz
aam
sbb
loopne
cmc
subb
pop
jo
dec
addr16
xchg
sub
hlt
mov
lea
cld
xor
scas
fcomps
jle
mov
dec
stos
pop
in
add
xchg
out
mov
jl
xchg
xor
dec
shld
sub
mov
sbb
cli
ds
insb
jne
inc
push
int
sub
imul
sahf
pop
jge
push
add
jmp
jmp
adc
pop
lea
or
lcall
mov
pop
and
jns
mov
mov
push
stc
sub
cmovl
addr16
sarb
cmp
mov
sahf
xorl
mov
cli
mov
arpl
fildl
jns
push
imul
add
jae
xchg
jle
aaa
bound
mov
pop
fwait
or
xchg
lods
xor
mov
jge
lahf
jge
mov
dec
xor
xor
push
iret
add
aam
push
and
in
lock
or
sub
cmp
dec
bnd
fbld
data16
mov
lods
cmpsb
push
test
jg
ljmp
into
aaa
in
mov
sbb
out
or
or
ja
int
pop
pop
movsb
sub
sub
mov
and
push
js
cmp
fidivl
in
das
push
lds
stos
mov
aaa
sub
fisubl
adc
in
pop
push
add
popf
lock
out
sti
cld
je
cmpsb
sbb
inc
push
jb
xchg
les
divl
cltd
inc
pop
dec
repnz
hlt
xor
jge
jae
pop
jno
pop
push
inc
mov
out
test
addr16
pop
push
movb
adc
dec
pushf
fs
or
loope
dec
aaa
adc
rorb
sub
add
sbbl
xor
out
jae
outsb
or
pop
pushf
sbb
cmpsb
xchg
ret
fildll
and
andl
mov
mov
mov
outsb
sti
and
ds
sarl
stos
stos
mov
repz
sbb
mov
popa
outsb
pusha
dec
movsb
fsts
test
icebp
xchg
ret
xchg
or
mov
push
les
jns
xchg
inc
loopne
adc
test
jge
pop
int
ds
cltd
aaa
stos
imul
xor
fbstp
jmp
movsb
mov
push
faddl
shll
int
mov
cmp
insb
sub
leave
lret
sbb
int3
dec
ret
and
and
inc
xchg
mov
add
jle
es
jns
add
and
sbb
aas
lock
out
cmpsl
aas
and
add
dec
test
mov
sub
sahf
rcrl
push
ret
or
inc
and
mov
jle
dec
lods
insb
or
mov
push
xchg
cwtl
rcrl
xor
adc
sbb
sub
fnstsw
loop
sub
in
insl
or
shr
inc
adcb
dec
data16
leave
rcll
inc
andl
sbbl
dec
xchg
negl
in
sub
sub
dec
sub
mov
lods
jl
outsb
push
mov
out
mov
fcomip
mov
or
jne
stos
lods
or
sti
les
pushf
iret
adcl
lea
mov
mov
outsl
jbe
loopne
fiadds
xor
insl
push
push
jbe
nop
pop
add
xchg
pushf
pop
shrb
or
or
out
pop
aas
inc
andb
in
mov
loop
jb
mov
push
sbb
test
and
sub
out
stos
js
js
dec
ret
jae
enter
push
rcr
dec
pushf
lds
pop
outsl
jmp
int3
andb
xor
sbb
adc
sbb
out
out
mov
std
sbb
jb
cmp
jo
fisttps
pop
push
xor
adc
imul
inc
in
repnz
add
data16
shlb
pushf
ss
xchg
xor
mov
fistpl
movsb
pop
cmpsb
mov
insl
rolb
jecxz
and
les
mov
out
insl
push
frstpm(287
jne
pop
dec
push
repz
ret
ret
adc
ret
mov
imul
ret
inc
push
dec
rcl
add
mov
jp
inc
add
sub
sub
pop
mov
and
pop
mov
fucomip
lds
icebp
mov
pop
scas
rorb
push
sbb
adc
fimuls
add
or
mov
out
lods
xchg
pop
lret
testb
dec
mov
arpl
jl
outsl
add
push
out
jmp
push
jb
bound
push
mov
or
mov
mov
cmp
cmc
pop
shrb
mov
mov
mov
and
push
xchg
push
mov
test
ljmp
dec
fstpt
scas
stc
sub
out
sti
push
cwtl
push
sbb
imul
iret
xchg
inc
fwait
leave
jbe
push
adc
dec
jne
adc
mov
mov
stos
out
roll
jne
and
data16
mov
lret
mov
pushf
ss
jecxz
xchg
addr16
fnstcw
push
dec
repz
pop
adc
xchg
or
nop
daa
lret
mov
popa
xor
fmuls
mov
leave
push
in
test
ja
fimuls
pop
scas
cli
iret
fsubl
sub
jmp
pop
data16
popa
cwtl
mov
mov
push
and
icebp
js
mulb
lret
pop
rcrb
pop
adc
or
cwtl
add
xlat
into
imul
xor
dec
ret
inc
sub
fisubl
negb
sbb
push
sub
test
mov
out
pop
iret
lret
adc
cmp
jo
mov
pop
push
sbb
fstpt
out
inc
dec
test
mov
dec
sbb
dec
ret
hlt
pop
enter
rcll
push
xor
bound
pop
mov
in
pop
pop
inc
add
in
or
cmpsl
xchg
shlb
and
cmpb
stos
push
es
pop
fistpll
cmp
or
inc
cmpsw
and
rorl
lods
incb
lcall
xchg
push
jp
mov
sarb
adc
enter
push
xor
xlat
cmp
cmp
dec
dec
ja
shl
insl
imul
ficomps
sub
test
fcmove
call
rcll
ror
das
lea
ficoml
push
iret
adc
sarb
mov
or
mov
imul
jp
out
push
dec
fpatan
add
push
xor
inc
jnp
cmp
jecxz
icebp
push
andb
push
and
sbb
in
icebp
jae
xor
lcall
pop
sahf
stc
mov
and
in
jge
xchg
lea
pusha
mov
sub
push
icebp
mov
aam
cmc
shlb
xchg
push
mov
or
sbb
cmp
pusha
push
mov
and
fldenv
cltd
test
and
adc
ljmp
fsubrl
xor
pop
jb
push
out
xchg
fs
aad
mov
jl
into
icebp
xchg
lcall
add
lcall
movd
mov
fists
fdivrl
mov
jge
int3
push
push
cmpsl
lock
push
sub
fucom
mov
add
rorb
loopne
xchg
addl
fs
loop
loope
lods
sub
js
pop
mov
icebp
sub
mov
xor
push
out
outsb
and
mov
mov
stc
ds
cli
adc
cltd
xchg
push
or
adc
pop
cmpsl
push
ret
ret
dec
jno
sbb
dec
adc
jmp
arpl
shr
cmp
jno
jae
inc
add
scas
cmpsl
nop
adc
ret
sbb
ret
sbb
in
mov
mov
jne
aas
enter
push
sub
pop
or
repnz
mov
ret
iret
icebp
subl
xchg
xchg
adc
cwtl
out
adc
or
ret
xchg
iret
or
loope
js
and
test
loopne
roll
std
jg
test
sbb
cld
negl
inc
pop
jae
repnz
add
in
sub
push
int3
repnz
ficompl
lock
sbb
jle
cmpsl
mov
inc
fidivrl
mov
popa
cltd
in
out
jbe
push
and
lret
push
orl
bound
cmc
xor
popa
sbb
dec
out
mulps
out
jmp
mov
sub
lds
fwait
push
aad
in
cmp
jne
fldcw
mov
or
ja
cmp
into
cs
adc
ret
mov
mov
sub
xor
movsb
or
mov
inc
dec
aas
push
int3
push
aad
shll
aas
fildl
and
inc
xchg
ljmp
push
inc
lahf
fs
cmpsl
add
stc
jge
fstpt
sub
pop
movsb
sub
cmc
lods
outsl
xchg
mov
push
mov
xor
mov
inc
mov
sub
xor
repz
out
pushfw
js
mov
mov
je
clc
cmp
cmp
call
inc
aam
add
adc
sti
push
cmp
add
out
mov
sub
rcrl
aam
inc
mov
pop
fwait
mov
inc
aaa
and
mov
cwtl
cs
inc
xor
fdivrl
clc
enter
and
in
in
xor
mov
out
xor
scas
add
lods
and
pop
rol
cwtl
outsb
mov
add
mov
sbb
xor
lods
adc
outsl
mov
sub
mov
notb
jo
push
or
xor
imul
pop
movsb
jmp
ljmp
cmp
in
inc
js
mov
mov
push
cmp
das
push
inc
in
cld
pop
ficomps
add
and
push
jl
loope
push
cwtl
mov
add
loopne
and
stos
inc
jbe
lock
dec
sbb
iret
ljmp
pop
mov
je
or
mov
mov
nop
dec
xchg
pop
sbb
inc
pop
shl
popa
mov
inc
out
btr
ds
jl
cmpsl
sahf
fwait
cs
mov
mov
xchg
shl
mov
inc
cmc
mov
cmp
fldenv
loopne
xor
cmc
cmp
lcall
and
mov
jne
inc
inc
arpl
dec
mov
js
data16
sub
xor
sti
inc
ret
mov
xchg
in
fwait
sarb
test
sbbb
ljmp
pop
cmp
dec
and
jmp
iret
popf
or
mov
and
ljmp
sahf
aad
cmp
stc
lods
cmp
movsl
ret
sub
lock
daa
jl
pop
and
and
xlat
call
ja
jo
loopne
push
out
test
push
popf
lahf
mov
sub
dec
sbb
lods
jl
in
jmp
sahf
mov
int
mov
ss
aad
arpl
xchg
cltd
xchg
adc
rcll
xor
movsb
sbb
mov
icebp
push
push
movsb
sub
sbb
mov
test
add
mov
mov
sti
cld
insb
icebp
dec
add
daa
mov
testl
ftst
sahf
enter
outsl
movsl
and
adc
xlat
aas
in
mov
mov
sub
scas
mov
movl
mov
insb
mov
jmp
shrb
push
movsl
lds
cmpsl
fisttpll
mov
lret
loopne
fstps
pop
fsubrp
push
xor
addr16
test
sbb
inc
pop
jle
fsubs
push
cmpsb
cmpsb
je
cli
inc
mov
cmpsb
dec
das
lock
ljmp
fidivrs
push
lahf
xchg
ja
scas
push
insb
dec
repz
sti
ret
inc
pop
xchg
repz
insb
je
repz
push
ljmp
fstps
notb
fistpl
push
gs
imul
push
addr16
sub
dec
mov
mov
dec
iret
mov
cmp
js
jne
mov
inc
fwait
jns
in
inc
sbb
loopne
jl
mov
cmc
dec
jp
sbb
jg
mov
std
aas
scas
cmpsl
aad
dec
arpl
mov
jl
ret
roll
cwtl
and
xor
pusha
lcall
or
jl
dec
push
insb
sub
inc
dec
mov
pop
sbb
or
dec
lock
dec
dec
inc
xchg
clc
mov
cmp
fistl
cmp
fnstcw
mov
test
outsl
mov
fnstcw
lock
insb
pop
gs
push
loope
sbb
sahf
mov
jp
mov
jnp
pop
adc
pop
ljmp
repnz
sbb
jge
aad
xchg
cwtl
and
icebp
adc
mov
xor
lods
adc
and
sbb
xchg
sarb
sbb
or
dec
mov
mov
mov
jg
test
jle
ljmp
push
stos
out
xchg
shrl
push
lods
mov
sbb
pop
sub
in
or
fnstenv
jnp
fsub
hlt
notl
es
mov
jb
test
popa
addr16
mov
ror
mov
add
pop
mov
push
inc
dec
xor
test
xchg
xor
xor
pusha
in
in
imul
int
cmp
xor
in
sub
out
mov
push
or
mov
mov
popf
xchg
nop
rol
ds
cmp
jecxz
fwait
test
or
ds
pop
dec
ds
scas
addb
dec
outsb
and
xor
lcall
sarl
leave
add
jg
aaa
mov
cmp
jns
push
cmpl
fisubs
add
lcall
or
jno
mov
lahf
hlt
test
xchg
mov
scas
pop
out
sbb
fwait
rol
lods
dec
cmp
dec
cwtl
test
mov
in
push
pop
cmp
mov
rcrl
lock
sti
lea
cmp
cmc
mov
fdivrp
iret
aas
inc
movsb
xor
lock
clc
push
ret
xchg
mov
jns
test
inc
enter
pop
ret
jge
add
repz
add
fs
or
insl
fdivp
addr16
sub
push
cmp
lahf
pop
jecxz
call
outsl
dec
call
cmp
cmp
repnz
or
stos
dec
cmp
shll
sbb
and
testb
data16
push
sub
flds
incb
ss
addr16
cmc
dec
sarl
sub
dec
lods
push
sbb
adc
loope
lods
aaa
push
test
mov
not
push
adc
test
mov
xorb
cs
ja
mov
xchg
in
jnp
inc
mov
sbb
pop
mov
push
push
push
and
inc
jae
mov
inc
dec
xor
and
mov
jo
mov
pop
jo
or
call
mov
std
cld
addr16
lods
lea
push
lock
js
cmp
xchg
mov
jmp
ret
push
sbb
shl
rolb
fs
in
aas
cmp
and
push
or
test
cli
lds
xchg
jge
xchg
add
rorl
cmpsl
mov
dec
or
push
pop
shlb
lret
cmp
test
in
mov
popa
jns
es
fcoms
and
lods
inc
cmpsb
add
mov
aad
jl
mov
mov
pop
imul
lahf
push
push
push
ljmp
mov
cwtl
or
sbb
jb
popa
shlb
int
fstpt
ret
adc
jno
js
sbb
ret
dec
int3
sbbl
icebp
inc
and
push
pop
push
pop
cmp
mov
scas
ljmp
pushf
xchg
xor
pop
dec
push
xor
loop
out
data16
push
cmp
fidivrs
pusha
rorl
xor
xchg
mov
xor
pop
lock
mov
adc
mov
clc
xor
dec
loope
stos
xor
shll
lret
sbb
inc
cmpsb
arpl
and
sub
inc
idiv
inc
bound
in
out
push
fimull
jne
mov
leave
rcrb
clc
ja
or
jp
mov
out
cmp
rcrb
mov
xlat
fldt
ret
aad
push
add
inc
cltd
sub
mov
fisubrl
orb
sub
xchg
lret
push
data16
jmp
loope
shl
loope
mov
mov
adc
into
sbb
xchg
mov
cli
add
sarl
adc
loop
ret
push
cmpsb
jbe
and
sbb
repnz
jl
sti
push
mov
xchg
rclb
and
decb
das
adc
int
sub
pusha
or
inc
or
push
add
in
aas
or
sub
shlb
mov
jl
mov
and
lock
mov
xchg
nop
inc
pop
cmp
cwtl
cmpsl
das
jl
loopne
push
ret
ds
mov
mov
daa
enter
xlat
and
fsub
sbb
and
jns
and
idiv
dec
dec
push
fcomp
jge
xchg
cmp
dec
xor
mov
or
pop
call
test
shlb
int3
or
xchg
lds
mov
into
adc
lret
test
gs
test
popl
mov
ds
cmc
mov
jns
jne
fwait
sar
xor
xchg
lods
outsl
stos
pop
je
imul
lcall
mov
call
lds
pop
ds
lds
xor
test
push
dec
fwait
sbb
xchg
pop
in
rcl
jmp
cmp
or
sub
dec
test
and
cmp
jnp
test
push
insb
sub
jo
xchg
inc
xor
mov
inc
jbe
mov
lods
stos
xchg
mov
cmc
push
mov
adc
cs
mov
xor
fidivrl
mov
sbb
jbe
xor
sbb
push
icebp
out
lcall
inc
mov
mov
lds
fchs
pop
inc
scas
lock
idivl
dec
fsubs
fldl
imul
out
out
sbb
and
mov
xchg
bnd
cmc
scas
jecxz
xchg
and
test
mov
inc
movb
pop
leave
jp
pop
pop
cmp
dec
les
loopne
cmp
das
fnsave
add
inc
cld
push
sbb
dec
dec
push
aam
mov
sub
sub
enter
fidivs
mov
sbb
nop
lcall
andl
dec
or
pop
mov
sarb
mov
cld
mov
fimuls
sbb
popf
outsb
jbe
add
test
inc
sub
jno
mov
mov
mov
mov
imul
popa
int
xchg
jg
mov
in
sar
xlat
jb
cwtl
mov
jl
test
and
cmp
clc
pop
mov
adc
roll
mov
and
xor
adc
cmpsl
ror
js
xchg
or
sbb
cmovae
push
stos
mov
lds
mov
jp
adc
loopne
inc
dec
adc
psraw
mov
mov
mov
je
mul
xchg
mov
test
sub
and
pop
push
sub
mov
push
imul
inc
sbb
dec
inc
and
push
jmp
xor
sub
mov
jp
pop
pop
xchg
ret
fistl
sub
sbb
adc
scas
jo
ja
movsb
fistpl
inc
ss
jne
mov
add
bound
ja
inc
cld
or
sbb
shufps
aam
xchg
lods
inc
xchg
test
es
xchg
ret
dec
push
mov
cmp
mov
xor
test
ret
push
ljmp
cmpsl
movsl
pop
mov
fsubs
divl
icebp
test
xchg
sar
out
mov
mov
scas
lret
push
sbb
call
les
arpl
push
xor
and
inc
mov
dec
pop
pop
cmpsb
mov
scas
test
cs
ds
pop
or
cmp
push
in
repnz
sahf
das
jae
or
push
daa
in
push
adc
cwtl
cwtl
add
fimuls
fists
icebp
or
jecxz
mov
std
mov
dec
mov
xor
and
cli
sbb
repz
inc
push
fdivrs
cmp
mov
addr16
jmp
sbb
sbb
dec
inc
cmp
flds
sub
inc
out
in
sub
cs
xor
mov
pop
jg
dec
xchg
sbb
lret
sbb
push
or
into
cli
add
xchg
sbb
pop
loopne
pop
int
arpl
mov
mov
ja
mov
push
test
adc
sahf
mov
imul
faddp
pop
ja
mov
addl
rcrl
leave
pop
stos
fcomps
fwait
popf
push
stc
ss
nop
fbld
push
in
test
fdivs
test
cmp
out
or
jecxz
push
je
les
pop
pop
mov
and
aaa
test
push
sbb
cli
scas
fistl
cltd
push
mov
insb
push
leave
jb,pt
pop
cmp
cmp
ficomps
fidivrl
cmc
push
ja
pop
inc
dec
das
dec
ss
shrb
pop
in
cmpsl
pop
lods
add
js
sbb
test
push
shl
test
loopne
jno
stos
mov
mov
and
and
push
test
ds
les
or
jg
into
pusha
jecxz
mov
nop
pop
sub
es
mov
sub
push
loop
aas
cli
popa
lcall
xchg
inc
pop
mov
sti
pop
jl
xor
negb
dec
and
subl
mov
jnp
imul
inc
jo
cli
add
les
subb
insb
jl
dec
fisubl
sub
fcmovu
push
imul
mov
add
hlt
cmp
dec
xor
lret
int
dec
in
adc
and
push
inc
sub
push
je
jmp
mov
push
sub
jg
std
ret
cmp
scas
ljmp
outsb
sbb
cmp
jl
xchg
xchg
xor
or
mov
sbbl
mov
repnz
idivb
xchg
pxor
loope
scas
push
fidivs
sbb
inc
cmp
fimull
clc
jbe
xorl
pop
fdivrs
idiv
stos
sahf
dec
les
sub
cmp
inc
mov
or
and
bound
popa
test
add
sarb
cmp
xor
scas
mov
pushf
jnp
pop
jns
fnstsw
ja
out
stc
mov
cmp
sub
std
and
xor
cmp
rcll
cmpsb
push
mov
and
mov
sub
inc
jae
je
pop
xchg
jecxz
stos
jae
xchg
xchg
and
pop
xor
mov
mov
aas
mov
mov
sbb
inc
xchg
neg
fdivrs
fwait
and
and
addr16
xlat
mov
mov
jne
js
lds
sbb
mov
pusha
xchg
inc
or
push
jnp
ja
or
dec
stos
push
xor
mov
cmpsl
int3
adc
das
test
jge
insb
sbb
frstor
sub
std
fwait
clc
aam
fsubr
outsb
mov
int3
lea
popa
loopne
mul
test
rcrb
rcll
fs
add
mov
inc
push
xor
fimuls
mov
pop
inc
jmp
adc
mov
and
inc
in
outsb
xor
icebp
idivb
mov
dec
lret
scas
lret
iret
xchg
ret
icebp
sbb
push
mov
jmp
push
xchg
push
fnstcw
xchg
lods
push
mov
sbb
xor
jae
cltd
push
push
push
mov
jb
or
out
jg
sbbb
popa
push
outsb
inc
inc
sub
test
and
and
pop
jae
cmp
imul
roll
fdivp
hlt
rcr
sbb
shll
mov
gs
or
aam
dec
cmpsl
stos
lea
lret
sti
mov
sbb
mov
cs
stos
dec
mov
jecxz
mov
inc
push
sub
stos
outsl
dec
mov
mov
repz
loop
pop
xchg
dec
in
leave
push
aas
xchg
outsl
into
ljmp
fs
jecxz
pop
popf
lret
outsl
ds
mov
mov
dec
stos
sbb
xlat
sub
cmp
bound
ret
insb
ror
or
je
push
xor
pop
lret
and
subb
cmpl
ds
sbb
jnp
repz
mov
inc
xchg
repz
pusha
mov
mov
mov
jl
nop
xchg
jg
aaa
push
inc
cmpsl
inc
mov
icebp
mov
aad
arpl
outsb
rorb
cld
aam
aas
cli
jle
dec
jl
dec
sbb
sbb
cmp
fildll
jno
adc
mov
clc
mov
xchg
mov
jecxz
aaa
mov
jl
frstor
mov
lods
imul
xor
ss
mov
or
sti
and
fisttpl
sbb
ret
xchg
es
jbe
jecxz
repnz
inc
mov
mov
mov
dec
cli
test
sub
cmp
adc
mov
push
clc
dec
xor
dec
or
pop
out
scas
movsl
cmpsl
jns
cli
sbb
lock
fisubrs
and
fdivs
into
rcll
inc
mov
std
ljmp
pop
inc
jne
sub
mov
mov
ds
out
or
out
cmp
je
adcl
shll
mov
sbb
inc
lret
sub
ljmp
push
jecxz
pop
pop
fisttps
mov
pop
nop
cltd
add
insl
mov
imul
insl
call
fsubrl
ror
xor
imul
or
mov
jecxz
pop
aas
and
sub
mov
jmp
int
inc
arpl
rcr
jecxz
dec
sub
jmp
xlat
orb
scas
sub
mov
pop
mov
xorb
sbb
cwtl
lods
adc
addr16
sbb
mov
cs
push
and
cmpsl
lock
stos
jne
sub
mov
mov
ljmp
adc
pop
ret
dec
hlt
push
hlt
mov
jo
jns
jae
xadd
adc
or
inc
js
xor
mov
sub
push
and
outsb
fsts
and
leave
jmp
ja
daa
mov
and
out
mov
inc
daa
out
int
pop
je
out
in
jbe
pop
jne
mov
nop
dec
shlb
in
or
adc
pop
mov
fisubl
and
jno
out
fs
iret
loopw
xchg
or
jmp
repnz
mov
sti
and
xchg
shr
jp
stc
xlat
popf
sbb
and
jl
lock
mov
push
ret
in
outsb
and
bound
rclb
adc
jno
pop
sbb
push
or
and
loope
add
and
jecxz
movl
int
push
adc
loope
push
outsl
div
imul
rorl
popa
std
sbb
xlat
sbb
adc
mov
pop
mov
in
fsubrp
inc
pushf
push
push
fdivs
sbb
jb
popa
hlt
loope
push
shll
sahf
dec
je
outsb
divb
sub
push
jmp
sbb
xchg
movsb
stc
jbe
inc
dec
sub
xchg
lock
or
mov
icebp
mov
and
pop
dec
pop
or
cmp
cmp
bound
cmp
adcb
add
push
lret
fistps
adc
dec
push
or
lcall
pop
imul
xor
pusha
out
nop
push
cmp
jb
mov
cs
addl
repz
mov
dec
push
enter
xchg
sub
mov
mov
cld
sarb
cmp
decl
fimuls
pushf
sbb
rcrl
scas
stos
shrl
and
inc
push
ds
xchg
iret
pushf
push
lods
push
dec
sbb
in
xchg
sbb
xlat
push
cmpl
sub
and
push
lret
cmpsb
sub
ret
sbb
sub
lods
cltd
js
push
andb
in
inc
pop
mov
idivb
mov
icebp
subb
dec
aam
xor
add
sar
jle
stos
std
lock
cld
xchg
sub
xor
iret
aad
adc
lahf
mov
xor
and
mov
mov
pusha
add
add
in
mov
pop
mov
stos
out
leave
fisttps
loop
pop
in
popa
dec
hlt
push
std
lds
cmc
push
jp
gs
jle
insl
loopne
cwtl
outsb
iret
push
cmp
jb
call
fcompl
or
test
fisubs
pop
inc
leave
enter
dec
orb
jp
sub
add
jb
or
sbb
adc
jmp
or
cmp
lret
push
cli
and
mov
inc
mov
ret
popa
aad
cmpb
imul
or
ret
pop
int3
cmp
fidivs
clc
mov
in
adc
imul
jp
imul
cmp
shll
push
sbb
mov
adc
mul
push
add
mov
cwtl
xchg
cli
adc
shr
les
push
push
aad
insb
sbb
int
pop
mov
popa
cmp
mov
cmp
int3
push
hlt
pusha
sbb
push
and
add
xlat
jae
xlat
cmp
cmp
cmp
adc
inc
pusha
lock
mov
mov
jmp
inc
pop
in
in
sub
lret
sub
mov
mov
jl
push
mov
jp
add
lea
add
sbb
vmread
xor
mov
cwtl
hlt
es
adc
iret
and
hlt
jmp
inc
sti
dec
push
mov
lock
out
into
jo,pn
pop
subl
bound
dec
or
scas
jns
scas
mov
add
or
jmp
leavew
shl
sahf
lods
ret
dec
ret
mov
push
xor
push
popa
fs
add
or
mov
and
push
gs
in
fldcw
pop
imul
mov
sbb
lods
mov
addl
push
inc
or
mov
mov
or
pop
xor
lret
adc
sbb
popa
enter
and
mov
add
ffreep
inc
push
cmc
push
jnp,pt
nop
imul
jae,pn
int
ss
enter
addr16
xchg
fists
repnz
inc
enter
shr
cltd
scas
add
pop
in
mull
xchg
inc
jb
mov
shlb
test
pop
test
push
popf
pop
loop
shl
mov
sahf
lods
aas
adc
mov
sub
cltd
insl
gs
pop
clc
or
daa
add
push
jbe
xchg
adc
inc
ja
enter
arpl
es
and
nop
push
sub
popf
orb
imul
stos
dec
xor
mov
pop
dec
outsb
xor
add
jmp
add
fstps
imul
and
mov
cld
inc
movsl
jb
je
ret
out
sub
mov
dec
cmpsl
mov
inc
jbe
jle
lcall
xor
xchg
clc
lds
adc
dec
mov
cli
xor
out
inc
xor
out
dec
popa
cmpsb
cmp
push
mov
dec
push
add
leave
call
sub
or
das
popa
jo
je
mov
out
cld
pop
lret
rclb
mov
cld
pop
mov
scas
in
loop
int
enter
in
cmp
aas
call
dec
sbb
shll
sbb
jge
jmp
dec
mov
adc
mov
lock
outsl
push
adc
leave
adc
cmp
jo
or
xchg
mov
ss
and
or
pop
cmp
push
pop
dec
cmp
scas
pop
dec
notl
dec
pop
cmp
dec
out
les
jge
jmp
pop
dec
call
mov
cmp
inc
scas
and
xchg
mov
in
jns
mov
add
pop
fimuls
pop
inc
pop
jbe
fdivs
iret
sahf
xchg
mov
std
repnz
xchg
movsb
mov
cltd
or
push
xor
mov
lock
dec
mov
jbe
stos
fsubrs
lret
shrl
mov
mov
jo
test
stos
adc
xlat
test
adc
lods
jns
sub
mov
sbb
mov
mov
mov
mov
inc
dec
cmovb
roll
insb
dec
mov
ss
push
pop
mov
adc
addl
jbe
cs
popa
mov
orl
ja
sub
sbb
xlat
lret
push
add
push
frstor
cli
xor
mov
mov
lods
xor
inc
mov
jb
addr16
pop
dec
inc
nop
outsb
inc
shll
test
add
es
daa
adc
jbe
and
mull
movsb
in
jle
jne
repz
pop
fadd
ja
adc
inc
add
jne
mov
adc
push
sbb
out
pop
push
movsb
inc
mov
mov
fildl
int
loopne
mov
test
mov
stc
and
add
adc
sbb
stos
rorb
xchg
das
lods
mov
pop
mov
repnz
mov
dec
mov
fstpl
jge
ljmp
je
int
int3
jmp
pop
ss
push
cmp
jmp
dec
test
sbb
adc
lahf
icebp
mov
inc
dec
imul
aad
adc
jb
and
cmpsl
rcll
lods
push
pop
in
push
dec
xchg
dec
push
dec
fadd
int3
jge
shlb
inc
xchg
loop
lret
gs
add
xchg
push
lcall
pop
push
insl
add
pop
cmp
insl
fmull
xor
mov
inc
and
lds
incl
int
les
adc
orl
scas
jmp
sbb
push
lods
sbb
inc
and
stc
sbb
mov
cwtl
ret
jg
adc
pop
sub
cmp
andl
jge
pop
mov
adc
jge
iret
cmp
aad
ljmp
fnstenv
fsubs
int3
xchg
mov
add
outsl
cltd
mov
push
xchg
cmp
out
int3
aad
and
add
push
sub
lods
sub
shrb
ret
xor
xor
dec
and
pop
ja
popa
mov
xor
out
ljmp
push
jno
inc
jne
lods
mov
mov
inc
imul
inc
lods
add
sbb
nop
outsb
push
add
popa
mov
dec
dec
inc
add
mov
add
iret
data16
xchg
aas
mov
xchg
rolb
shlb
cwtl
fmull
xchg
fsub
enter
pop
dec
mov
addr16
insl
pop
mov
fnstsw
es
dec
aaa
xor
movsl
clc
into
cmc
cmp
push
jecxz
popa
pusha
icebp
mov
xchg
mov
cmpsb
pop
mov
movsl
xchg
inc
es
push
inc
adc
inc
loopne
push
adc
aam
out
jle
xchg
mov
cmp
movsl
push
xchg
adc
and
aad
shrb
movsb
or
loope
in
xor
aad
repnz
lock
and
fdivr
movsb
std
sub
xlat
jle
xchg
scas
test
push
sbb
dec
pop
inc
icebp
mov
in
stc
test
test
xor
test
jno
cmpsl
lret
dec
mov
cmpsl
stos
push
pusha
xor
lods
fldcw
mov
and
lahf
cmpsl
mov
sbb
ror
dec
stos
dec
insb
cmp
and
lods
jp
icebp
fiaddl
aam
inc
and
mov
dec
push
popa
movsl
mov
xchg
sbb
xor
pop
dec
int
mov
push
fsub
mov
jns
push
xchg
xor
mov
or
cmpsb
iret
stos
mov
cltd
adcl
imul
sub
inc
lahf
outsb
popa
sbb
outsb
aam
lock
test
cwtl
lods
mov
das
add
push
out
shrl
xchg
lret
mov
fcomps
xchg
fst
outsl
jmp
repz
test
or
and
outsl
xor
or
mov
andb
adc
xchg
stos
addr16
test
and
sub
movsb
sahf
into
andl
aad
mov
or
jbe
add
or
imul
movl
imul
stc
mov
add
lods
leave
ja
push
dec
out
les
cmp
fs
fmuls
xor
mov
shrl
test
and
mov
adc
mov
pusha
pop
mov
lahf
aam
idivl
add
jno
cli
daa
pop
cld
jbe
loope
jno
sub
cld
lret
test
jg
xor
pop
test
adc
aam
into
test
sub
loope
cld
clc
push
mov
imul
mov
fcomp
cmpsl
lock
test
test
xor
jle,pt
ja
sbb
std
cwtl
in
lcall
cwtl
jns
outsb
or
dec
adc
cli
aas
pop
int
and
mov
adc
xchg
pop
aad
add
test
pand
pop
clc
lea
pop
push
iret
test
jl
enter
sahf
in
movsl
xchg
mov
adc
jnp
xchg
add
push
mov
push
les
mov
aas
pop
mov
sub
test
mov
daa
cmp
movsl
mov
ljmp
pop
bound
mov
jp
inc
fs
cli
add
out
and
mov
dec
add
mov
or
int3
test
sbb
sub
movsb
cmc
push
pop
add
pop
xor
pop
pop
fadds
jbe
xchg
or
ficompl
scas
mov
sbb
cmp
in
jl
pop
call
ja
sahf
cmp
lcall
pop
int3
mov
outsl
clc
inc
cmc
cmc
fidivs
pushf
xchg
je
push
int3
mov
push
xor
inc
mov
add
add
insb
iret
mov
shlb
iret
imul
call
fs
add
xor
roll
icebp
cli
jle
jo
inc
les
mov
xor
test
xor
lods
out
cmp
xchg
push
jl
out
je
rcr
sarb
aas
mov
mov
xchg
jmp
sub
pusha
xchg
test
in
gs
enter
xchg
popf
shl
shll
mov
pop
jno
xor
ja
add
ja
aas
mov
cmp
push
lods
push
subl
or
mov
xor
push
inc
lods
mov
test
repz
sub
dec
xchg
push
scas
pop
push
fmul
push
lret
ds
mov
mov
sbb
pand
fwait
pushf
fiaddl
das
and
int
mov
in
inc
xchg
sbb
insb
stc
inc
pushf
inc
mov
sub
jnp
mov
and
xchg
sub
add
into
test
jnp
or
jl
lret
notb
dec
iret
pop
movsl
lahf
xor
mov
xlat
add
testl
arpl
jl
add
lds
mov
or
ds
or
lea
dec
xor
xor
xor
xchg
sbb
push
fmull
jne
loopne
cwtl
arpl
jl
adc
pop
push
push
sbb
in
fwait
aaa
xor
dec
arpl
sbb
aaa
imul
jno
insl
inc
sub
pusha
mov
xchg
bound
cmp
loop
and
stos
push
clc
jg
cmp
sbb
hlt
xor
in
mov
pop
dec
pop
loop
rcrl
mov
out
stc
jnp
sub
in
enter
jae
xor
xchg
mov
cmp
pop
les
adc
jecxz
ret
mov
jae
sti
inc
outsb
mov
in
jno
lds
jle
mov
rcrb
ret
push
int3
push
fs
adc
dec
xor
ds
out
sar
pop
fildl
jo
jp
mov
lret
ja
adc
mov
sub
ds
pop
daa
add
pop
xchg
adc
mov
cmp
shl
int
ret
xchg
mov
mov
popa
pop
and
mov
cmp
adc
sbbl
cmpsl
jns
push
push
je
scas
loope
je
pop
popa
adc
mov
jg
fstps
and
test
push
cmpsl
shl
lahf
xchg
imul
sti
xor
loope
mov
sti
xor
in
test
daa
or
je
ss
sbb
push
ds
dec
mov
push
jns
mov
outsl
inc
adc
cmpsb
sbb
jmp
das
adc
les
inc
push
std
pop
sbb
pop
negl
cmp
stc
xchg
cmpsb
lods
ror
mov
adc
loop
add
mov
mov
sub
cltd
sti
stos
orb
mov
inc
jb
pop
and
outsl
push
push
jmp
dec
push
pushf
xor
ja
push
fs
ljmp
outsl
das
jmp
jle
mov
xlat
dec
push
and
dec
sub
cltd
push
repz
xor
pushf
xor
adc
and
pop
cwtl
add
idivl
and
and
pop
enter
xchg
sub
cmc
and
push
cwtl
lock
push
add
je,pn
insl
cmp
xor
mov
lahf
outsl
push
push
imul
mov
imul
adc
test
xor
fisttpl
arpl
call
sbb
sub
aas
fwait
push
xor
pop
mov
and
repz
inc
cmpsl
loop
inc
jae
cwtl
rorb
lret
mov
xchg
push
scas
testl
fsubp
stos
add
gs
add
jbe
imul
lock
out
sub
cmpsb
incb
enter
cwtl
dec
bound
xchg
mov
cmc
xor
out
mov
xlat
aad
icebp
sub
scas
dec
fistps
fidivs
lea
mov
or
xor
mov
nop
mov
push
push
ficompl
jecxz
fsubs
ret
in
sbb
lret
mov
mov
ja
xchg
loop
incl
das
into
mov
subb
sti
sbb
or
cwtl
daa
mov
jg
xchg
add
mov
ss
jb
dec
fwait
mov
xor
pop
divb
outsl
cli
inc
sbb
das
push
pop
lea
xor
cli
cmp
icebp
xchg
push
popf
pop
add
or
lcall
aas
loope
cmp
add
inc
lret
sbb
adc
xor
sub
into
and
sub
adc
cmp
inc
sbb
adc
int
icebp
enter
out
inc
data16
rorb
lret
sub
mov
cmp
xor
jge
xor
pop
sahf
jg
push
outsl
filds
cs
rcr
push
lcall
xor
ljmp
mov
lods
push
sub
pop
and
clc
push
leave
add
xor
dec
mov
jno
jmp
out
mull
ret
xchg
jbe
jmp
sahf
jl
cmp
push
inc
lahf
dec
sub
push
sbb
jo
xor
mov
xchg
lret
js
daa
xchg
push
cltd
push
adcb
das
cmp
sahf
rcrl
sub
dec
ret
pop
add
ds
or
les
mov
movsb
imul
in
sub
popa
pop
js
or
dec
ret
aam
add
push
mov
call
cmp
icebp
iret
push
xchg
enter
and
mov
add
mov
jne
jg
push
popa
cmpsl
and
sub
lahf
pop
inc
ljmp
xor
out
inc
xlat
aas
mov
cs
js
imul
and
imul
ja
dec
jp
jns
cmp
cltd
sub
sbb
pop
cmpsb
pop
or
and
push
inc
popf
addr16
imul
orl
xchg
mov
or
cs
xor
nop
scas
add
out
jle
insb
movsl
je
cmpb
pop
dec
lea
movsl
push
data16
jmp
cli
jno
rcr
fwait
insb
add
add
mov
pop
xchg
pop
sbb
js
jg
sti
repz
int
sub
mov
sub
inc
xor
aas
rolb
jbe
mov
lahf
mov
fdivl
addr16
or
push
mov
inc
cwtl
or
fmuls
sub
adc
jne
les
imul
and
loop
inc
mov
scas
ja
adc
add
shll
mov
add
fsubs
cltd
xchg
hlt
xchg
xchg
mulb
test
icebp
cmpl
cmp
and
decl
dec
mov
mov
adc
push
or
cmc
mov
sub
and
psraw
clc
fnstcw
cltd
int3
popa
jno
call
push
pop
cmp
jnp
push
jle
in
mov
add
jmp
lea
ss
das
adc
xchg
in
inc
pusha
pop
lds
inc
mov
insb
mov
das
xor
in
or
xor
rcr
out
ret
adc
push
cmp
lahf
push
mov
cmp
clc
std
lods
cld
inc
mov
add
adc
sub
arpl
popa
test
fwait
pop
dec
test
or
loope
jecxz
push
sbb
insb
sbb
int3
outsl
sar
test
lahf
outsb
sbb
mov
mov
fmuls
daa
fbld
xchg
imul
xor
fs
or
mov
subl
mov
aas
fnstenv
ret
fwait
mov
int3
lahf
jmp
dec
mov
mov
ljmp
in
stos
das
jns
push
inc
push
insb
mov
adc
or
push
gs
xchg
mov
push
jbe
cmpsb
movsl
mov
mov
repnz
pop
shl
cmp
mov
mov
add
mov
push
pop
fildll
movsl
xor
cmc
cmp
pop
pop
gs
popf
jge
and
fs
or
push
addr16
les
or
imul
dec
idivb
mov
dec
or
fdivs
or
js
shll
inc
test
jl
pop
push
popf
ret
mov
pop
push
fistl
arpl
les
add
test
popa
adc
pusha
or
fldenv
rclb
ret
push
ss
stos
into
loopne
mov
xlat
repz
fld
xchg
jp
mov
jae
test
mov
into
or
cmc
cmp
lods
cmp
cmp
mov
mov
dec
pusha
aas
pusha
cmc
cld
adc
sbb
adc
std
sub
or
xor
sbb
or
les
in
push
or
jle
xor
jbe
into
push
mov
fmuls
pop
xor
lahf
gs
jmp
sbb
inc
mov
mov
pop
rclb
fsub
aas
jmp
rorb
lock
jne
push
jmp
lret
mov
ss
mov
das
inc
sahf
adc
jle
push
pop
mov
iret
scas
and
cmp
inc
loope
lret
movsb
in
ja
mov
sub
sbb
sub
mov
sarl
gs
xchg
loopne
popa
imul
mov
mov
fstps
loope
cltd
js
adc
jp
dec
jle
dec
dec
stos
and
repz
dec
lret
dec
mov
fldenv
cmc
imul
cwtl
dec
gs
popa
addb
outsl
lock
dec
jecxz
cmp
loopne
push
fstl
mov
push
stos
adc
into
xchg
jmp
lret
mov
testb
dec
and
stos
cwtl
or
mov
out
clc
push
es
cmp
sbb
xchg
jmp
inc
inc
repz
movsl
jl
and
lret
es
cmp
lcall
xchg
aaa
cmp
xchg
mov
fmull
mov
add
or
push
sbb
mov
push
lahf
and
cwtl
stc
xlat
jne
daa
mov
imul
lcall
add
pop
push
stos
xchg
sub
pop
push
daa
loop
out
test
or
or
and
dec
shrb
jnp
push
xchg
movsl
inc
and
call
sbb
icebp
dec
call
cmp
in
mov
xchg
xor
mov
or
divb
iret
sub
push
xchg
add
dec
inc
pop
adc
xchg
mov
loopne
cmp
scas
mov
loope
data16
fsubrs
js
xchg
jl
add
or
adc
sahf
pusha
xor
inc
push
cmp
lcall
call
ss
jg
adc
push
je
xor
mov
adc
fidivl
mov
cmp
or
add
dec
fsts
sub
jne
mov
cmp
and
bnd
mov
add
outsl
negl
xor
out
mov
jns
les
in
push
popf
cmpsb
outsb
sub
pop
mov
imul
div
lret
mov
shlb
and
cltd
repnz
jle
adc
dec
cwtl
fsubs
push
jns
test
dec
adc
mov
xor
sti
mov
inc
inc
popa
cmp
leave
dec
ljmp
cmpsl
xorl
mov
movl
fsubs
sahf
fildl
and
jne
jb
cmp
js
je
sbbl
mov
dec
out
pop
inc
cltd
subb
and
sbb
pop
pushf
pop
sbb
lahf
lock
push
or
or
push
mov
xchg
es
outsb
icebp
and
out
dec
test
pop
push
subl
cmp
mov
xor
into
mov
fdiv
adc
out
inc
lea
lea
xchg
mov
push
fwait
dec
cmp
fs
push
jg
das
mov
mov
inc
mov
icebp
mov
or
push
shlb
push
fmulp
outsl
mov
shll
ficomps
and
lea
out
adc
loop
mov
sbb
inc
push
cmpsb
pop
daa
leave
out
cmc
mov
ficoms
dec
inc
repz
mov
xor
adc
inc
add
dec
and
in
cmp
and
ja
icebp
sahf
sbb
and
xchg
adc
mov
fwait
mov
pop
fisubrl
inc
pop
cltd
repnz
je
imul
cltd
and
cld
xor
hlt
es
into
data16
and
aas
enter
ljmp
mov
les
mov
in
orl
adc
cwtl
lret
cmp
mov
adc
push
and
ret
stc
iret
dec
subl
fnstsw
and
mov
mov
mov
mov
lahf
cmp
jecxz
mov
dec
or
xchg
stos
jnp
ret
mov
incl
and
or
mov
loope
arpl
into
std
cmp
add
in
aad
or
in
jbe
dec
jecxz
inc
pop
dec
insl
sbb
cmp
adc
cmp
nop
into
inc
mov
inc
es
xor
xor
xchg
pop
pop
cmpsl
xchg
aad
faddl
or
fdivs
add
add
call
jns
or
int
outsb
pop
and
loope
cmovle
rcll
cmpsl
dec
pop
and
sbb
ss
add
add
ja
add
pop
pop
lods
fmuls
add
mov
mov
xchg
xlat
movsb
xchg
jmp
lock
mov
xor
imul
xor
loop
and
stos
clc
mov
sub
push
jl
jp
jge
xchg
lea
imul
sbb
insb
cmc
or
sub
aam
imul
inc
fisttpll
fbstp
lods
mov
inc
lret
subl
add
out
cld
mov
inc
repnz
cmp
push
es
loope
push
stos
inc
sbb
xchg
mov
fdivrl
sbb
xchg
or
mov
test
ret
imul
adc
lea
xchg
push
mov
sbb
shrl
jle
sub
ja
sub
cmp
mov
iret
or
xchg
shl
mov
lea
das
clc
inc
dec
bnd
mov
mov
xchg
aad
in
dec
movsl
daa
jno
pop
push
xchg
rcr
sbbl
sub
mov
mov
push
out
lods
lea
jno
aaa
mov
pusha
cmp
or
outsb
jae
dec
xchg
mov
adc
insb
cwtl
repz
in
jnp
mov
xor
jnp
adc
inc
inc
pop
addl
fnstsw
bound
dec
xchg
pop
inc
fldt
add
inc
or
cmp
push
test
test
ficoml
jo
xchg
sub
add
xor
bound
fstl
jmp
in
cwtl
xlat
xchg
mov
mov
xor
or
mov
fwait
xchg
sub
jge
dec
jae
mov
shrl
cmp
mov
fisubl
ljmp
inc
xchg
inc
lods
call
sub
push
dec
pushf
leave
add
sbb
mov
xor
incb
add
jb
jecxz
push
jle
or
fsubp
pop
xchg
mov
jp
add
pop
push
xchg
gs
pop
inc
int
mov
mov
loope
js
xor
fs
fiaddl
ret
or
sahf
outsb
sub
mov
in
fmuls
data16
arpl
nop
orl
xchg
fsub
sub
mov
call
test
jmp
in
lahf
xor
fwait
push
adcl
cmpsb
cli
mov
in
icebp
push
mov
and
out
mov
mov
ja
jns
testb
call
jno
out
cmp
in
mov
fsts
aam
movsb
push
mov
pop
call
sbb
sub
ret
mov
pop
fwait
rcl
push
cmpsl
lahf
cmp
mov
negl
mov
test
repnz
jg
jne
sbb
mov
pushf
pop
sbb
fcmovnbe
arpl
pop
adc
push
xor
pop
rclb
das
cmp
cmp
adc
enter
loopne
icebp
lea
or
jae
int3
adc
arpl
test
fidivs
jle
insb
pop
and
out
jb
test
dec
push
mov
stos
lret
sub
fwait
xchg
sbb
cmpb
xor
pop
push
ficoms
push
and
fidivrl
xor
ljmp
imul
mov
add
sub
test
or
fucomip
lea
ret
xor
sub
jle
inc
shl
int3
pop
jns
or
jae
push
inc
sub
adc
test
loopne
xlat
daa
adc
in
std
je
jle
test
popa
inc
sbb
jne
fstpl
fwait
and
cltd
xchg
ficoms
fwait
test
fdivr
sbb
dec
imul
daa
xchg
adc
js
out
stos
sbb
add
push
ja
lods
add
shll
add
mov
push
aaa
dec
xchg
fmul
mov
add
notl
daa
push
sub
jl
inc
rcl
aam
pop
add
fildll
cmpsl
jl
xchg
adc
dec
dec
fsubrl
mov
pop
and
and
mov
clc
jp
outsl
mov
pusha
adc
pop
pop
lret
int
or
xor
js
mov
push
cmc
cmp
jbe
imul
icebp
jge
and
cltd
and
mov
ret
xchg
push
lret
cmp
dec
imul
lods
scas
call
nop
cmp
rcll
lret
aad
and
push
xor
mov
sahf
movsl
or
fwait
dec
loope
xchg
sbb
es
inc
push
fists
add
mov
mov
movsl
int
cmp
push
xchg
inc
and
pop
das
sarl
add
cmp
fcoms
daa
mov
popf
mov
stc
pop
fs
outsl
fldt
pop
and
nop
in
testb
in
jle
stos
into
aas
rol
aas
adc
shll
pusha
das
ss
and
push
mov
dec
mov
fadd
inc
jmp
push
cmp
cmpsb
fbstp
in
push
sbb
popf
popf
cmp
out
andl
gs
insb
stos
in
pop
gs
lret
add
adc
scas
sbb
out
hlt
dec
mov
shll
cmp
mov
arpl
mov
xchg
pop
das
push
outsl
rcrb
lcall
test
xor
inc
mov
pop
push
inc
xchg
push
xchg
pop
int
outsl
add
mov
fmulp
xchg
mov
enter
xchg
mov
sarb
repnz
imul
jbe
aas
xchg
js
dec
xchg
sbb
addr16
pop
addl
in
rclb
fcom
std
stos
jl
push
dec
jb
ret
dec
cmc
push
pop
pop
leave
andl
or
mov
or
int3
jno
iret
js
cs
ljmp
lock
iret
shll
sbb
or
mov
mov
xorl
push
add
or
out
adcb
and
fildl
daa
stos
xor
out
data16
inc
xchg
add
hlt
cmp
add
fisubl
aaa
dec
out
sti
cmp
mov
das
adc
cltd
scas
daa
and
mov
push
jno
pop
imul
aad
pop
mov
xor
inc
pusha
aad
iret
es
test
movsl
xor
or
imul
test
cld
mov
ljmp
in
jae
into
jbe
sarb
xor
mov
mov
dec
inc
adc
rcll
enter
sub
cmp
pusha
out
rorl
jge
or
ja
loope
mov
adc
xchg
mov
pop
xlat
out
sub
lahf
cs
inc
pop
mov
cmp
push
fldt
cmp
inc
cmp
fsts
xchg
or
xchg
or
popf
jge
lods
push
dec
test
xchg
and
xor
add
insl
int3
stos
jge
pop
mov
sbb
jo
push
sub
inc
mov
cmpsb
aaa
add
scas
daa
sbb
pushl
into
adc
addr16
jle
into
shll
pop
int3
sbb
sub
aam
cltd
fdiv
sbb
js
es
pop
gs
push
repnz
dec
fnstcw
aas
sahf
or
and
pushf
mov
test
mov
sbb
ds
loop
jns
mov
sub
sub
add
repnz
dec
mov
loopne
mov
fsubrl
mov
jecxz
add
pop
push
pop
dec
out
cmpsb
cmp
xor
pop
roll
and
cmp
ret
xchg
subl
push
popa
jl
iret
insl
pop
les
outsl
push
push
inc
adc
bound
les
mov
lahf
cmpsb
mov
jbe
lahf
xor
mov
pop
mov
stc
shl
fldt
test
dec
add
outsl
bound
inc
in
inc
cmpsl
mov
xor
fistpll
out
push
inc
inc
pop
or
scas
inc
inc
jg
jb
cmp
push
jns
inc
out
ljmp
mov
loope
push
les
xlat
adc
inc
mov
inc
xchg
sub
xchg
je
mov
nop
sub
fndisi(8087
push
fistps
mov
sahf
cmp
test
sbb
fdivrl
sub
mov
divb
aas
and
movsl
sbb
lds
pop
pop
clc
sub
push
adc
mov
lret
or
mov
xor
adc
jle
out
iret
ret
mov
cmp
in
or
push
adc
hlt
mov
sub
scas
xlat
mov
or
lods
sub
push
mov
fucomp
gs
or
int3
ds
shrl
pop
mov
aaa
adc
push
inc
pop
inc
ljmp
lods
mov
inc
aas
mov
stos
add
and
pop
mov
push
popa
pop
lcall
bound
add
loopne,pn
pushf
orl
rorb
cmp
mov
jg
cmp
loop
daa
mov
add
imul
xor
sbb
sub
aam
push
mov
cmp
jp
inc
pushf
xor
fists
push
aas
pusha
lds
aaa
insb
or
in
test
cmp
adc
in
jmp
rcr
mov
inc
jecxz
out
jns
into
out
fwait
and
jb
mov
sbb
pop
aad
fistl
adc
sbb
cmp
cs
pop
sti
mov
clc
test
adc
cli
in
out
and
imull
push
outsb
cmp
or
in
adc
in
add
test
xchg
pop
lret
sbb
xchg
and
pop
jae
subl
mov
cmpl
incb
int3
cmp
push
add
ds
frstor
push
test
or
insb
insl
fistpl
and
addr16
cltd
push
lret
add
cmp
sub
lret
sub
pop
sti
and
adcb
scas
push
lcall
xchg
pop
call
pop
pop
int
addl
mov
loope,pt
cmp
aaa
cmp
adc
in
ljmp
xchg
mov
mov
aaa
incb
ret
repnz
inc
fistpl
mov
xor
les
cmpsb
int
js
test
add
fsub
lea
sti
fidivrl
cltd
repnz
push
outsb
dec
dec
xchg
js
sub
mov
cmp
mov
dec
dec
pop
sbb
adc
iret
sbb
shrd
mov
imul
inc
sub
and
adc
xlat
test
dec
out
arpl
mov
insb
popa
call
pop
ljmp
jae
jno
test
call
push
jb
mov
mov
add
mov
and
sbb
push
scas
mov
cmp
in
pop
cmp
sub
xchg
jae
dec
inc
mov
fdivrl
data16
lret
cmpsl
xchg
pop
xchg
or
adc
xchg
stos
lret
push
mov
push
punpckhwd
ret
dec
mov
mov
xorl
mov
pop
mov
test
outsb
jno
mov
mov
out
sub
dec
rcrl
arpl
jmp
dec
inc
imul
mov
mov
or
fdivp
aas
test
mov
adc
sbb
outsb
mov
lock
mov
cmc
cmp
push
enter
lret
stos
cltd
popf
decl
enter
push
out
int
ss
add
push
stc
push
shrb
inc
shlb
mov
mov
in
jg
seto
jl
rorb
xor
mov
sbb
xchg
inc
repz
xchg
xchg
fsubrl
cmpb
jbe
sbb
sarb
push
fldcw
cmpsl
fmull
ja
ficoms
pushf
fcmove
fisubs
lahf
push
mov
ja
adc
adc
add
aam
cmp
out
loopne
int3
pop
xchg
cs
ds
jnp
cwtl
popf
jecxz
add
and
aas
mov
decl
ljmp
dec
popf
movsl
mov
jge
mov
ret
and
xor
clc
mov
into
dec
repz
lock
ret
mov
shl
dec
xlat
ret
and
cmpb
je
insl
idivl
popf
lds
sahf
add
into
ds
fwait
sti
shr
mov
fwait
out
mov
lock
pusha
addr16
xchg
or
xchg
dec
fsubs
bound
xor
mov
ja
frstor
adc
add
cltd
lret
cld
jae
jmp
jns
jl
js
imulb
cwtl
mov
inc
aam
out
into
pop
stos
pusha
bound
xchg
nop
loope
inc
mov
dec
gs
mov
notb
out
test
xchg
xor
into
int3
inc
jle
cmpxchg
test
jne
dec
daa
clc
pop
lahf
out
lds
es
stos
jae
jle
mov
sti
jle
inc
ficomps
les
push
ret
mov
stos
rol
or
mov
dec
pop
push
ret
je
push
movsl
xchg
or
repnz
shrb
scas
fldenv
fadds
ret
add
je
loop
scas
imul
repnz
xor
insb
divb
xor
xor
jno
mov
sbb
pop
aam
pop
iret
test
cltd
orl
les
push
dec
or
in
xchg
mov
cmp
push
sahf
push
lahf
mov
lcall
loop
scas
dec
pop
ljmp
popf
dec
inc
stos
dec
jg
push
lcall
ret
ret
add
jbe,pt
xor
cmpsb
aad
xchg
dec
lea
jg
pop
jbe
mov
in
fstl
dec
addr16
loope
int
les
dec
xor
pop
sarl
and
cltd
mov
add
mov
imul
pop
loop
cmp
fmuls
das
nop
jmp
sbb
lods
jg
jb
repnz
mov
cmp
test
or
push
lret
rol
or
mov
shlb
inc
add
movsl
xor
loop
mov
stos
lods
test
xchg
xor
adc
sub
cld
popf
ljmp
push
movl
pop
adc
push
pop
fldt
shrl
mov
pop
lret
sbb
cli
aas
scas
stc
mov
loope
shr
insb
xor
inc
stos
scas
adc
mulb
sbb
nop
jb
sub
pop
cmpsb
out
push
shlb
xor
mov
or
fstl
popf
dec
dec
pusha
mov
adc
or
mov
ja
add
inc
dec
jge
jecxz
push
jle
inc
add
or
ret
jne
in
cli
add
loop
and
repnz
jmp
xchg
push
cmpsl
and
pop
mov
mov
sarl
call
arpl
push
adc
inc
dec
jnp
fidivl
xchg
jg
inc
sub
ljmp
inc
sbb
jecxz
adc
mov
daa
jb
push
daa
les
data16
adc
incb
mov
sub
jl
mov
mov
jmp
push
pop
add
push
out
aam
pop
jp
sub
clc
fisubrs
popf
dec
lahf
fldcw
jle
and
into
int3
push
lds
stos
mov
insb
mov
rcrl
icebp
xor
outsl
aaa
mov
fdivrl
adc
mov
cs
or
les
adc
adc
rcrb
push
fadd
pop
mov
out
cmp
mov
cs
movsl
or
movsb
outsl
insl
pusha
addr16
dec
mov
imul
dec
xchg
lock
dec
inc
mov
icebp
in
xchg
in
and
lret
push
dec
add
rorb
fistpll
dec
imul
push
mov
jns
js
repz
cmp
mov
js
ret
sub
jge
dec
addr16
xor
or
xchg
int
push
popa
cmp
lock
xor
pop
lea
adc
pop
movsb
and
data16
push
and
or
stos
cmpsb
imull
jne
adc
jmp
jns
jecxz
lea
pop
xor
mov
and
push
adc
iret
std
push
stc
pop
sbb
jmp
cmp
or
outsl
int3
lods
sti
fidivs
pusha
negl
sub
and
jae
adc
daa
and
int3
jmp
cmp
call
mov
cmp
fs
jp
cwtl
push
testl
leave
gs
in
loopne
inc
ret
in
xchg
mov
mov
loopne
push
or
inc
add
ljmp
in
pop
sbb
out
sub
adc
shrb
pop
repnz
sbb
add
pop
jg
cmp
xlat
xchg
cltd
dec
movsl
mov
sub
push
aad
sub
add
out
mov
leave
pop
adc
cwtl
stc
movsl
pop
ss
xlat
flds
andl
imul
mov
call
cli
cwtl
cmp
int
xor
mov
popa
mov
sbb
stos
fdivs
aas
mov
sbb
ja,pn
leave
cmp
out
cmc
push
jmp
push
or
outsb
push
hlt
and
mov
call
add
shll
inc
daa
in
cltd
push
ret
lret
outsl
inc
or
sbb
lret
stc
mov
push
mov
ja
adc
xchg
lret
cwtd
cmpsl
cmpb
cmp
sub
fcmove
xor
orl
lahf
cmp
jg
in
fnsave
sbb
inc
rclb
mov
jle
mov
in
cmp
sub
lret
je
mov
inc
mov
push
imul
clc
xchg
sbb
aad
sub
add
lock
into
jno
mov
xorl
popa
testb
arpl
ret
xchg
mov
mov
in
into
ljmp
inc
adc
lods
mov
jmp
jne
sbbb
lcall
sbb
xor
push
inc
xchg
mov
fs
mov
cmpsl
jno
test
jnp
mov
lods
lahf
pop
sahf
shll
or
loopne
cwtl
cmpsb
mov
sbbb
fabs
aas
mov
int
outsl
bound
test
xor
test
xor
arpl
add
fcmovu
lret
shr
adc
mov
pop
stos
sbb
out
add
fsubl
call
out
mov
fs
or
adc
push
pop
sbb
mov
orb
sti
or
pop
in
lods
subb
aaa
push
add
aaa
xchg
notl
ficompl
pop
adc
out
pop
cld
xchg
adc
or
sub
cmp
jg
shr
je
adc
ljmp
sti
insb
clc
mov
add
dec
loope
jmp
pushf
push
or
fidivrs
ljmp
xor
jae
mulb
lock
repnz
cmp
and
sbb
mov
fisubl
jg
mov
xchg
mov
daa
testl
popf
and
inc
cmpsl
xchg
add
fadds
sub
movsb
frstor
mov
mov
loop
or
xchg
inc
dec
inc
stc
inc
or
std
xor
lods
mov
push
inc
sub
data16
dec
and
fildll
lea
ficoms
sbb
lahf
jns
pop
out
sbb
lret
std
popa
push
pop
lods
jb
call
scas
in
out
addb
fidivrs
mov
leave
xchg
xor
xor
mov
sub
sub
fdivs
ljmp
insl
sub
test
jbe
inc
xchg
test
in
dec
jmp
mov
jne
pusha
ds
aaa
or
dec
lock
inc
add
mul
xchg
sub
push
and
je
and
es
push
sahf
sbb
sub
call
xor
iret
cmp
addb
dec
mov
xchg
mov
cmpsb
cmp
das
roll
iret
mov
and
mov
jae
out
fimuls
xchg
xchg
mov
jnp
sbb
lret
sbb
dec
sub
mov
cltd
jp
inc
bound
pop
rcr
xchg
icebp
push
xchg
xchg
dec
mov
test
and
mov
inc
lahf
out
loopne
pop
fisubl
jae
mov
cmpsl
pop
xchg
push
shld
dec
jle
ja
pop
mov
cmpsl
xchg
jmp
lret
inc
sbb
sbb
cmp
popf
daa
mov
adc
ret
incl
mov
jecxz
hlt
rol
mov
in
add
dec
xchg
bound
push
xchg
xlat
js
sarl
cmp
das
jno
or
add
inc
icebp
jle
aam
out
pop
mov
cld
mov
in
movsb
fwait
insb
loope
jg
mov
xchg
icebp
and
ret
jecxz
fwait
and
fcoms
stos
sub
aaa
les
arpl
cmp
arpl
fmul
popf
add
mov
cmpsb
cmc
aad
ss
stos
ficompl
adc
iret
push
in
adc
cli
push
xor
adcl
jg
test
push
mov
push
fdivrl
in
mov
jmp
lret
inc
jmp
inc
mov
adc
in
xchg
iret
scas
loopne
imul
dec
ret
mov
mov
push
hlt
cltd
cmp
xchg
adc
repz
pop
lods
xor
push
push
outsb
inc
out
push
movsl
test
js
add
adc
xchg
jo
jne
mov
rclb
xorb
xlat
push
push
loopne
test
lods
pop
test
rep
and
aaa
lods
push
outsl
inc
cmc
mov
jns
addl
out
movsb
mov
dec
dec
out
xchg
iret
cmc
inc
pop
sub
sbb
in
daa
imul
ljmp
sbb
mov
aam
pop
aad
cmp
adc
cmp
call
pop
int3
xchg
push
imulb
jp
push
mov
mov
jns
rolb
cmp
cmp
js
add
xlat
jmp
mov
inc
fmuls
stc
je
dec
xlat
inc
dec
sbb
lret
dec
hlt
outsb
xchg
mov
les
clc
imul
in
cltd
rclb
add
lods
xchg
xor
mov
push
mov
outsb
pop
xchg
or
pop
test
arpl
xchg
js
pop
jge
adc
cmp
sbb
int
andw
pop
rcrb
in
mov
out
xchg
cmp
adc
ss
lds
gs
jmp
insb
adc
scas
inc
mov
inc
mov
mov
mov
sub
jl
cltd
fcmovu
pop
or
rcrb
jge
shrl
sarb
jbe
xchg
mov
mov
mov
mov
out
mov
sub
sbb
les
repnz
lret
mov
out
mov
dec
into
pop
inc
and
in
ss
mov
ja
mov
cmp
xor
mov
cltd
sahf
repnz
in
and
cwtl
push
jge
into
push
cltd
fwait
push
xchg
mov
pop
cltd
pop
mov
ficoml
in
push
movsl
outsb
in
shlb
stc
ljmp
jmp
popf
push
imul
push
pop
xchg
push
repz
jns
movsb
std
pop
or
ret
and
fwait
ror
fs
sub
jp
mov
push
xchg
cmp
popa
imul
sub
pusha
push
jg
push
jbe
mov
jae
xchg
fnstsw
cmpsl
movsl
or
or
sub
adc
aam
enter
outsb
loop
sbb
xchg
xlat
xchg
loop
mov
mov
xchg
mov
and
dec
jno
mov
add
shlb
push
pop
cmpsl
cmp
and
jmp
call
inc
enter
out
dec
sbb
icebp
lcall
pop
sbb
jge
push
inc
es
sbb
xlat
ss
rorl
jmp
mov
nop
mov
loope
mov
cmp
jnp
add
out
rol
adc
jp
call
push
repz
lds
sub
and
fsubs
fmulp
xchg
fs
xchg
sub
push
out
push
xor
jl
bound
pushf
int3
pop
jae
lds
dec
test
int
sti
and
fildl
imul
pushf
idiv
inc
cmpsl
jno
sub
ja
xor
lods
cli
and
cmc
movsl
negl
mov
sub
inc
stc
fdivs
dec
in
cltd
or
leave
sbb
cld
jo
pop
loop
mov
push
adc
sub
fistpl
dec
push
xchg
mov
dec
adc
js
xor
je
notb
scas
sub
xor
mov
xlat
icebp
stos
js
xchg
push
mov
fiadds
outsb
test
pusha
mov
fdivrp
pop
jne
jo
ret
out
xchg
mov
andl
pop
mov
pusha
sbb
daa
mov
dec
pop
sbb
aaa
pop
scas
xor
test
sbb
dec
dec
popf
ljmp
mov
push
jno
int3
and
gs
test
mov
cmp
cli
sarb
pop
push
push
int3
mov
push
sbb
xor
push
mov
cmpsl
pop
cmpb
mov
in
loop
cli
jns
pop
jle
pop
rcrb
pop
push
icebp
xchg
sub
push
iret
frstor
mov
jnp
js
in
lret
mov
pop
aaa
mov
aas
sbb
inc
or
insb
sub
subl
scas
add
outsl
movsb
jge
or
lds
lret
and
jecxz
jbe
mov
lock
jp
jnp
into
mov
icebp
out
les
cmp
cmc
mov
sbb
cmp
fisubrs
jge
stc
repnz
popa
mov
push
inc
or
iret
jecxz
stc
lcall
mov
mov
mov
add
pop
loopne
sbb
sbb
jae
or
mov
and
jle
xlat
imul
xor
loope
cmc
mov
fcoml
testb
ljmp
gs
rclb
push
mov
cmp
mov
add
inc
loope
pop
pop
test
sub
xor
out
sti
inc
fldl
mov
add
iret
popf
icebp
mov
insb
inc
pop
outsb
xor
fnstenv
jge
push
sub
mov
rolb
sahf
int
sub
insb
sub
push
adc
and
aad
clc
lock
lret
stos
sub
shll
xor
popa
push
aam
jecxz
cwtl
adc
push
movsb
mov
sbb
cmp
dec
dec
push
cmc
mov
enter
bswap
adc
aaa
xchg
daa
mov
cmpb
mov
sub
inc
dec
sbb
out
push
mov
leave
cmp
out
sahf
sub
test
jns
int3
jns
cltd
cli
jbe
cwtl
repnz
cmp
push
cmp
aas
adc
mov
insl
adc
incl
enter
and
out
mov
hlt
add
sub
iret
mov
mov
dec
mov
push
xor
sub
push
jmp
mov
and
mov
mov
adc
pusha
lods
jns
out
test
sub
mov
sbb
xchg
loope
pop
repnz
push
mov
mov
push
adc
ss
jmp
test
jp
call
cmp
xchg
xchg
jno
cmp
add
add
iret
cmc
cs
push
sar
add
into
inc
xchg
push
jp
and
cmp
ljmp
push
fadds
decb
sub
sub
stos
sbb
push
pop
xor
mov
test
cmpsl
jle
dec
mov
xchg
stos
pop
cmpsl
int3
inc
shl
sub
mov
outsl
cmp
scas
jl
clc
clc
in
xor
pop
lret
mov
out
sub
push
pop
shll
rclb
cltd
add
int3
xor
add
dec
popf
push
in
out
dec
xchg
out
mov
and
shrl
inc
clc
mov
inc
cmp
out
adc
sti
pop
imul
pop
pusha
xor
mov
nop
jo
and
mov
scas
push
bound
aas
sar
cli
cmp
dec
inc
es
das
fcoml
inc
hlt
jbe
dec
jbe
push
or
into
mov
sti
pusha
mov
or
mov
mov
enter
les
lret
icebp
pop
in
shrl
sbb
std
jmp
add
loop
cld
add
xorb
ds
sar
int
xchg
jae
rcll
inc
sub
ljmp
je
push
ds
inc
stc
loop
lds
divb
inc
insb
cltd
jnp
ret
pop
mov
mov
jl
cmp
xchg
pop
mov
clc
pop
pop
fdiv
push
pop
jmp
adc
es
imul
lret
pop
inc
or
repnz
xorl
and
enter
pop
repz
pop
inc
adc
sbb
outsb
jmp
repz
cmp
cmp
and
mov
sub
mov
dec
call
or
push
pop
shrl
xor
mov
inc
pop
jnp
outsb
inc
test
lahf
xchg
ficoml
cmp
rcrl
and
dec
ja
jb
or
mov
hlt
jmp
cmp
and
lret
hlt
jmp
push
fs
pushf
jmp
cs
aad
push
sub
imul
outsl
push
jb
enter
aam
jne
sti
add
and
mov
insl
cmp
add
sub
mov
repnz
or
jmp
push
mov
or
das
loop
adc
ud1
lods
cmp
push
cmpsl
out
and
fisubrl
js
dec
or
in
pop
out
fdivrl
mov
movsb
inc
xor
in
and
lahf
adc
mov
cmpl
in
mov
cmpb
sbb
lods
ret
or
std
adcb
inc
ljmp
and
mov
dec
xor
add
out
fisubrl
jle
rorb
sti
cld
add
xchg
pop
pop
nop
dec
adc
pop
decl
xor
js
pop
outsl
pusha
out
repnz
fstps
and
inc
push
ja
inc
dec
loop
ljmp
dec
ljmp
fadds
int3
insl
add
mov
dec
dec
iret
lcall
das
add
aad
rcrl
or
fadds
jo
sahf
mov
mov
pop
or
decl
jb
out
or
pushl
mov
lods
data16
push
call
sub
fsubrs
or
loope
repnz
mov
shld
add
jne
or
mov
outsl
push
stos
dec
push
cmp
movsl
adc
outsl
jne
ss
sbb
imul
insl
xchg
je
leave
insb
out
pop
int3
dec
or
and
ds
dec
repz
inc
jl
jns
shrb
ds
add
stc
sbb
addr16
and
imul
sbb
push
pop
cld
adc
cmp
mov
jp
sahf
dec
mov
or
jecxz
xchg
repz
inc
lods
in
xor
insl
loop
xchg
push
fdivp
and
inc
xor
sub
dec
mov
outsl
out
ret
inc
fiaddl
xchg
xchg
lea
je
clc
inc
gs
sub
pop
jnp
and
push
lods
mov
repz
and
dec
inc
inc
pop
cld
imul
pop
test
sahf
bound
mov
xorl
lahf
jmp
movsl
mov
loope
cmp
pop
jb
dec
push
test
mov
and
dec
fwait
ds
in
sub
pop
cmp
xorps
cmp
mov
repnz
push
xor
and
lds
std
mov
mov
data16
pusha
jecxz
call
inc
js
adcl
xlat
aas
aam
ljmp
fwait
jmp
enter
ret
push
sub
mov
cmp
mov
add
scas
cmp
icebp
movsl
sub
add
jl
dec
or
int3
add
push
xchg
ret
das
mov
xchg
inc
repnz
lahf
cmc
adc
mov
cmp
cltd
inc
add
dec
sarb
cld
rolb
loopne
pushf
jns
mov
jge
imul
je
pop
inc
fnop
xor
adc
cmp
insb
add
mov
xor
inc
xor
add
and
adc
pop
pusha
imul
das
nop
pushfw
fidivs
push
out
mulb
in
xor
arpl
gs
pop
mov
adc
xchg
xor
gs
and
push
dec
sbb
xor
mov
fsubp
sub
xor
ret
lea
stos
addr16
xor
mov
test
mov
pushf
jle
imul
into
movsb
add
repnz
xchg
mov
addb
stos
mov
test
cmpsl
ja
jae
adcb
loope
cld
mov
std
fmull
jecxz
add
mov
adc
out
or
test
jae
add
sub
arpl
lcall
data16
pop
sub
cwtl
lea
call
mov
out
mov
push
and
push
fbld
mov
mov
scas
push
aad
cmpsb
mov
rcrb
add
xor
sbb
or
in
adc
shlb
mov
subl
push
add
ja
out
dec
jb
out
pop
out
je
lret
xor
cld
lods
loop
imul
xlat
in
test
into
into
mov
dec
inc
popl
push
dec
adc
scas
loopne
orl
adcb
mov
rclb
mov
mov
enter
mov
dec
rclb
dec
ret
sahf
divb
ficoms
cmp
sahf
aam
into
sbb
adc
hlt
push
mov
jno
popa
mov
negl
push
sbbb
sbb
add
or
hlt
mov
xor
leave
mov
xor
sub
xchg
push
fcoml
and
and
push
int3
ret
repnz
cltd
mov
adc
dec
data16
mov
mov
jnp
sub
push
mulb
mov
ret
xor
or
push
filds
adc
and
inc
jmp
mov
mov
rorb
mov
out
repz
and
push
add
xor
jo
jmp
xor
mov
jne
popf
int3
in
cmp
jle
jmp
or
sub
mov
lret
sub
das
mov
cmp
fldl
imul
mov
scas
xor
aaa
sbb
pop
jmp
mov
pop
insb
pop
pop
jno
xor
int3
rcll
js
xchg
lret
jb
es
mov
push
push
mov
push
addl
mov
jmp
adc
rclb
jge
aam
and
js
push
mov
sti
mov
inc
and
sahf
jne
aad
add
into
xor
cs
adc
and
gs
add
pushw
pop
das
enter
sahf
jnp
je
iret
push
rcll
js
or
out
fs
mov
fldl
out
pop
fistl
and
xchg
cltd
sub
add
loopne
call
fwait
xor
inc
in
je
lods
or
sarl
mov
test
mov
fs
mov
in
dec
adc
ljmp
popf
jns
mov
jmp
pop
fucomi
dec
cmp
jbe
cmp
loop
imul
mov
cmp
mov
xor
aas
dec
jg
imul
xchg
mov
push
push
mov
push
test
push
loope
pop
sti
inc
cmp
sar
mov
ljmp
movsb
sub
xchg
and
jnp
int3
adc
testb
jecxz
dec
ds
xor
std
lret
sub
sahf
loope
jp
int3
mov
dec
xchg
call
cmp
aaa
pop
xchg
sbb
sbb
test
push
pop
inc
mov
mov
jno
inc
sub
pop
push
sub
sahf
out
mul
xchg
push
cmp
mov
pop
enter
jbe
divl
out
jnp
pop
add
mov
jg
dec
adc
fisubl
add
mov
lods
ret
xchg
pop
push
inc
xor
outsl
ss
aad
xchg
iret
and
int3
shl
lock
outsb
cmove
sub
xor
xchg
xchg
mov
dec
sub
jno
sbb
cmpsb
jae
jecxz
push
pop
jnp
sbb
fwait
popf
bound
mov
cmp
xor
jno
pop
pop
or
cmpsl
scas
lret
nop
adc
inc
inc
gs
mov
xchg
push
idivl
rcrl
aaa
push
hlt
push
pop
sbb
mov
and
fisubrs
mov
ds
stc
inc
pop
pop
sub
mov
ficoml
popa
mov
mov
push
arpl
sar
mov
loope
xor
data16
scas
xor
pop
insb
in
and
testl
loop
pusha
insl
xor
orb
ljmp
xchg
shll
sub
add
add
lock
adc
mov
shll
out
inc
imul
aam
clc
dec
mov
arpl
inc
leave
adc
loope
push
mov
ret
fcomp
push
fidivs
xchg
xchg
push
cli
cmp
cmp
fs
push
pop
lods
and
mov
loopne
inc
adc
jmp
int
or
shlb
hlt
sbb
mov
and
sbb
or
neg
dec
push
push
jecxz
mov
inc
repnz
push
int3
and
nop
js
int
mov
loop
ljmp
sub
or
and
xchg
je
fidivs
cmp
mov
sub
or
inc
cmc
xor
dec
outsl
jne
cmpsl
mov
and
jecxz
sub
mov
dec
push
dec
mov
stc
push
jns
jg
jmp
outsl
xlat
pop
sbb
xchg
xchg
ja
fbld
lock
mov
fstpt
mov
test
lods
imul
pop
cmp
jg
push
push
mov
in
out
movsl
pushf
or
shrb
and
mov
in
xor
dec
sbb
and
int
movsl
add
cmpb
int3
inc
ja
push
and
sbb
call
mov
out
popf
es
stos
je
inc
cltd
add
mov
subps
or
int3
mov
int3
push
cmc
mov
push
xchg
mov
xor
lret
mov
out
cltd
out
fsubs
imul
xor
xor
lods
rcrb
mov
in
dec
loope
jne
out
jae
in
scas
scas
or
nop
fidivl
xor
icebp
xor
push
sub
loop
lds
imul
mov
or
xchg
push
rolb
in
xor
pop
ja
scas
cmp
test
repz
sbb
mov
dec
icebp
leave
mov
sbb
mov
push
inc
cs
bound
rorb
rorb
push
shrl
mov
mov
shll
xchg
fcomps
push
xchg
in
dec
loop
popl
nop
and
sub
es
repnz
xor
xchg
sub
lock
inc
iret
sub
jae
xor
push
popf
rolb
and
lcall
out
addb
pop
pusha
adc
fadd
inc
jecxz
es
imul
mov
xorb
xchg
out
call
int
fdiv
sbb
repz
stos
xchg
test
fimuls
add
out
xor
mov
daa
sbb
xor
xchg
sub
push
daa
pop
ljmp
jge
pop
loopne
xor
fnstsw
cmp
add
jmp
rclb
repnz
and
jo
xchg
or
mov
cltd
pusha
aaa
mov
les
in
mov
shlb
clc
xchg
push
gs
insb
popa
test
lahf
adc
or
push
xlat
pusha
popa
push
fnstenv
fistpl
dec
add
and
xor
xlat
mov
stc
pushf
add
les
lret
popa
pop
dec
push
cltd
stos
push
leave
mov
add
sub
loope
push
cwtl
std
jno
push
test
mov
rorb
jge
mov
xchg
adc
fimuls
daa
sbb
rorb
rolb
inc
jle
mov
ss
dec
add
push
fnstenv
cld
into
push
jle
fisttps
push
nop
in
dec
inc
mov
jno
mov
lahf
and
mov
stc
xchg
push
cmp
daa
push
push
cwtl
push
sbb
es
pop
cmp
and
cmpsb
stos
jle
lock
insb
jnp
movsb
jbe
pop
xchg
mov
push
subb
adc
xchg
mov
lcall
leave
push
lea
mov
shrl
movl
mov
lea
dec
adc
push
fsts
cmpsb
pop
out
cmp
fucomp
push
mov
mov
jno
push
popf
jg
jns
or
aam
mov
cmp
jecxz
mov
stos
lds
imul
dec
mov
cli
ss
sbb
pusha
mov
mov
sub
fimull
push
xchg
shrl
dec
xor
pop
cmpsb
es
out
mov
fmulp
mov
ret
inc
sbb
jg
imulb
ja
adc
sti
mov
sbb
pop
shll
cmp
imul
or
push
test
insb
jmp
mov
insb
repnz
xor
add
loope
inc
fisubs
add
into
push
lret
add
xchg
add
mov
ret
aas
sbb
testl
sub
in
xchg
or
mov
bound
push
lret
addr16
scas
rorl
leave
cmp
or
inc
insl
mov
mov
lods
jne
mov
inc
js
cmp
aad
pop
outsl
dec
pop
inc
jne
cmc
push
popa
lock
flds
push
ret
xchg
fwait
test
or
cmp
clc
jle
xchg
repz
std
sbb
xor
add
push
repz
mov
and
jo
movsl
es
mov
pop
inc
sarl
add
mov
sbb
test
xchg
mov
lret
sti
inc
cmp
in
cld
pop
xor
out
stc
sarl
rep
xor
jo
in
jnp
cmpsl
lods
bswap
or
ds
lds
sub
mov
dec
lods
and
sbb
jp
imul
mov
test
mov
pop
je
mov
jno
cmp
dec
stos
pop
bound
jno
cmpsb
aam
ja
mov
aas
inc
push
fmuls
mov
jo
in
out
cmp
dec
fdivrl
pop
mov
adc
sbb
dec
mov
jno
mov
mov
mov
jmp
fucomi
test
adc
into
in
inc
lods
cld
fs
loopne
mov
adc
clc
movsl
mov
jno
ficoms
scas
scas
dec
push
mov
push
mov
cmpsl
arpl
add
fldl
loopne
mov
enter
adc
jb
jae
pop
inc
cld
dec
mov
or
pop
inc
fstpl
sbb
pop
aas
rcll
loope
dec
lcall
pop
cwtl
cmp
sbb
cmp
xchg
mov
in
push
mov
fisttpl
fs
fildl
sub
lret
pop
sub
hlt
jo
cmp
push
sub
inc
mov
nop
dec
cwtl
out
pop
mov
adc
xchg
in
mov
jle
jle
loop
lods
jb
dec
imul
imul
sub
lahf
in
adc
ror
pusha
data16
jg
sub
fildl
sub
fadds
mov
sbb
push
ficompl
jl
or
jle
lods
mov
mov
icebp
jns
add
xchg
cmpsb
js
outsl
outsb
fs
loop
xchg
or
sahf
push
adc
jecxz
inc
sub
mov
adc
ja
jecxz
jle
aam
pushf
jle
sbb
stos
pause
rorl
test
sub
mov
icebp
pop
xchg
out
push
sub
insl
fdivrl
lea
nop
cs
ljmp
or
repnz
daa
jp
cmc
jl
aas
push
pop
pop
inc
xor
nop
jb
add
mov
hlt
push
rclb
xchg
les
jbe
test
mov
mov
push
arpl
lock
hlt
xchg
jae
fcomps
mov
fmull
mov
add
cwtl
push
les
fidivrl
jecxz
filds
leave
adc
iret
jle
sbbl
cltd
xor
cmc
sbb
xchg
push
js
add
clc
and
or
cmp
pop
xchg
out
lock
adc
aam
fwait
imul
addr16
sub
test
xor
or
jmp
xchg
jmp
or
sbb
adc
jge
lret
and
xor
adc
lods
sbb
push
or
repz
out
jns
subl
cmp
mov
mov
push
addb
pop
scas
dec
mov
das
sub
scas
rcrb
stc
ret
xor
xchg
out
xor
sbb
sub
insb
cltd
mov
sub
jp
gs
push
cmp
loopne
stc
lcall
xor
xchg
lret
arpl
adc
fcmovnb
icebp
mov
mov
dec
gs
out
outsl
lods
sbbl
pop
sti
lahf
xchg
lds
xor
inc
or
pop
pop
popa
rcr
gs
fidivl
mov
mov
mov
ret
ret
les
je
dec
mov
fsqrt
and
movsb
inc
fsub
test
inc
add
mov
icebp
shrl
leave
xchg
divb
push
or
pop
roll
outsb
jl
jno
sbb
push
test
aaa
jno
jmp
push
jne
mov
inc
mov
outsb
push
or
ja
fnstcw
mov
fld1
adc
es
push
pop
mov
push
dec
push
lds
movsb
jmp
cmc
es
fldcw
sbb
pop
ret
adc
je
insl
or
andl
inc
iret
mov
das
insb
in
xchg
adc
out
or
sbb
movsb
xchg
adc
scas
xchg
mov
jno
sub
sarl
xchg
outsl
stos
ljmp
out
aaa
fstl
xor
xor
ret
clc
gs
outsb
xchg
or
gs
daa
push
mov
test
movsb
dec
jae
jl
add
test
mov
popa
jbe
mov
fdivrl
imul
outsl
test
pusha
push
fimull
int
jg
pop
inc
lock
pop
daa
clc
fmul
andb
shlb
cmp
pusha
hlt
loopne
movsb
push
and
sahf
mov
pop
mov
into
inc
mov
cli
sub
jg
cltd
out
jp
pushf
lcall
stos
dec
rorl
testb
int
imul
stc
jb
pop
clc
push
sub
pop
mov
jae
pushf
jg
xchg
mov
mov
cmc
or
inc
push
cs
test
or
movsb
loope
push
adc
add
jge
and
xchg
mov
out
fwait
push
push
rcr
cld
les
and
in
mov
cmp
xchg
cmpsl
insb
stos
inc
jecxz
adc
jb
scas
sahf
mov
shlb
nop
pusha
lcall
sub
dec
cmpsb
inc
push
sbb
cmp
in
data16
sti
push
mov
mov
xor
in
scas
out
adc
push
aas
pop
lea
test
loop
scas
lds
jle
inc
iret
cmpsb
test
dec
add
add
pop
movd
ret
mov
lock
rorl
sub
inc
pop
leave
and
lahf
aas
push
test
mov
pop
jle
sub
outsb
lahf
mov
mov
pop
xchg
mov
dec
lods
in
addl
push
subl
out
stos
cmp
dec
ljmp
stos
add
pop
adc
dec
adc
loope
stos
sub
leave
xchg
cltd
mov
cmp
cltd
cmp
movsb
and
enter
mov
ja
movsb
cmp
test
out
jge
sub
jns
aam
or
and
out
pop
jnp
fsubs
pop
jno
add
cld
lock
and
test
in
push
sub
imul
and
xchg
nop
or
xor
fmull
inc
mov
mov
or
mov
pushf
fs
lea
aas
int
add
push
and
into
dec
mov
subb
jle
and
bound
xor
leave
mov
shll
cmp
and
pop
in
jge
dec
push
pop
or
lcall
out
pusha
mov
daa
jb
and
pushf
inc
xor
sub
jecxz
bound
in
push
push
sbb
pop
pushf
lret
adc
lods
or
sub
or
imul
int
test
bswap
jp
aaa
or
pusha
mov
cmpsb
inc
in
rorb
push
mov
leave
sbb
ret
and
pushf
jnp
push
sti
aam
and
sbb
arpl
mov
push
enter
data16
dec
dec
xor
iret
mov
popa
out
push
and
sbb
jo
jmp
cmp
ret
decl
dec
and
bnd
shll
into
xchg
clc
sbbl
in
es
jnp
enter
jb
jl
sub
ret
mov
sbb
or
pop
mov
dec
mov
and
sub
push
xchg
dec
popf
mov
inc
cli
lret
outsb
fstl
push
stc
adc
inc
cltd
out
pop
pop
sbbl
sub
add
call
test
xchg
fwait
imul
dec
sbb
and
fwait
sub
pop
xchg
add
loop
lock
mov
add
adc
xchg
push
out
cmp
es
into
xor
inc
mov
rcrl
pusha
cmp
jnp
or
aas
mov
nopl
das
out
bnd
pop
jmp
jmp
out
sbb
mov
loopne
pop
stos
ds
mov
and
push
int3
jo
mov
mov
sbb
leave
ds
aad
mov
sbb
out
stos
adc
adc
imul
out
insl
adc
inc
das
xchg
hlt
pop
push
movsb
loope
mov
mov
xlat
repnz
cmpsl
ret
out
jmp
jno
push
loope
push
out
mov
cmpb
hlt
push
dec
mov
hlt
dec
mov
push
add
cltd
or
popa
mov
pop
std
ficoml
in
es
leave
sti
icebp
int
leave
push
js
mov
add
icebp
pushf
enter
arpl
sbb
jno
lret
pop
rolb
test
jg
push
stc
iret
cmp
adc
jmp
xchg
aam
jle
lods
mov
mov
xchg
loope
cmpsl
jno
pop
mov
cwtl
xor
jno
fcompl
add
repnz
icebp
xchg
mov
pop
add
xor
cld
int
mov
filds
add
pop
pop
push
lret
ss
pop
data16
rorl
cwtl
lods
cmp
pop
insb
jecxz
dec
or
pop
inc
imul
pop
enter
jae
cmpsl
into
push
lret
and
addr16
int3
daa
das
lods
retw
jo
sbb
fstpl
mov
cltd
loopne
inc
add
ret
ss
gs
xchg
movsb
aaa
push
pop
jb
mov
lcall
adc
mov
cltd
loopne
mov
xchg
shrl
mov
loop
out
mov
std
pop
jecxz
push
adc
push
inc
xor
repz
push
xor
gs
fstpl
cld
push
notl
flds
into
mov
push
shlb
test
pop
aad
sbb
pop
adc
movsb
push
xchg
std
cmp
adc
cmp
cmp
cmp
jnp
pop
jmp
mov
push
mov
ret
xchg
test
adc
lock
call
cmp
push
scas
jge
mov
jnp
lock
adc
pop
xchg
adc
mov
jae
cmp
and
jg
idivl
pop
les
pusha
cmp
loop
cmp
lret
pop
out
xchg
jg
call
fistl
sub
mov
pop
push
fwait
in
sbbl
mov
inc
int3
scas
data16
sbb
mov
adc
fdivl
lock
mov
mov
mov
leave
cmp
lsl
jl
rorb
cld
jl,pn
jb
pop
shll
pushf
fs
add
ss
in
xchg
lds
sub
mov
cld
push
int3
mov
jne
push
pusha
push
mov
js
popf
mov
out
jecxz
push
sub
int
add
and
inc
popf
cs
push
arpl
lock
enter
inc
andl
inc
jle
pop
xchg
insb
mov
mov
jo
movsb
sub
fstps
cwtl
mov
mov
xor
test
popa
push
xor
or
or
cmp
mov
repnz
inc
mov
fwait
mov
cmpsl
sbb
jbe
out
and
movsl
out
pop
push
mov
lcall
test
sub
sub
xorb
repz
ds
jbe
pop
and
lcall
cmp
inc
or
mov
mov
add
ret
mov
pop
data16
xor
or
adc
lahf
mov
movsb
mov
pop
mov
mov
nop
cmp
adc
xor
stos
pop
sbb
mov
sbb
or
scas
sbb
lods
mov
test
push
mov
xlat
fwait
jb
stos
clc
pop
push
popa
ds
cmp
sbb
cs
pop
add
repnz
inc
jle
add
mov
gs
xchg
mov
aam
out
push
jo
lea
inc
mov
lock
fisttpl
xor
fwait
lods
loopne
xchg
gs
test
loope
xor
push
or
jno
lahf
rclb
sub
xor
push
ja
and
cmp
push
jp
sbb
cmp
cmc
inc
or
lret
cmc
and
mov
push
dec
rcr
cmp
mov
mov
movaps
arpl
xchg
int3
adc
mov
xchg
mov
push
sub
add
mov
nop
cltd
xor
sahf
add
or
xchg
xor
inc
mov
jge
sbb
inc
cmp
cmc
pop
ret
imul
adc
mov
dec
pop
insl
xor
btr
fucom
and
nop
sub
push
mov
add
mov
jno
mov
jecxz
xor
daa
xchg
rorb
pop
aas
cmc
jnp
fidivrl
scas
lahf
xchg
insl
leave
cmp
or
enter
lret
push
fildll
scas
pop
jge
push
pop
push
jecxz
xchg
lret
loope
fbld
pusha
pop
enter
mov
ja
add
stc
jl
testb
je
roll
lea
mov
cmp
loope
xchg
or
cmpsl
dec
or
ret
xchg
clc
push
cmp
jp,pt
mov
das
int
adc
inc
loope
mov
lock
les
cmp
push
lds
cmp
add
mov
mov
xor
pop
dec
and
cwtl
ja
mov
xchg
dec
push
popf
ret
adc
adc
loopne
in
dec
in
xor
call
mov
pop
cmp
ja
cs
mov
addr16
aad
int
xchg
xchg
dec
cmpsl
add
dec
pop
ret
rcrl
pop
mov
sub
jl
test
cmpsb
cmp
std
stc
lret
enter
aam
fbstp
xor
add
out
sub
add
jns
pop
add
pop
pop
xlat
sbb
test
xor
inc
pop
negl
jb
cmpxchg8b
imul
push
nop
dec
test
insl
mov
sbb
scas
fnstenv
in
dec
iret
push
sahf
and
xchg
lcall
fisttpl
lahf
xor
std
sub
daa
cmp
aaa
arpl
sbb
xchg
xor
inc
int
cltd
jg
cwtl
insl
jns
int3
pop
cwtl
jbe
cmpsl
sbb
or
lahf
ja
test
push
mov
pop
mov
sbb
cmp
cmp
mov
ret
in
adc
cmpsl
flds
jno
adc
lods
insl
sub
icebp
mov
enter
pusha
addb
ror
aas
aaa
arpl
cmpl
pop
xor
into
sub
cmp
gs
js
sbb
dec
test
mov
hlt
jge
sti
pop
rorb
xchg
sub
add
out
adc
dec
sbb
jo
icebp
int3
cmpsb
ljmp
mov
cmpsb
mov
sbb
notb
push
out
mov
nop
out
jae
imulb
jg
int
cmpl
cltd
pop
and
push
cmc
clc
mov
in
mov
repz
push
mov
scas
ds
pop
adc
cltd
movsl
jge
cmp
and
scas
sti
mov
xchg
pop
ds
movsb
jnp
icebp
xchg
inc
loope
lret
fs
xchg
fstpt
add
mov
arpl
fisttpl
dec
ret
push
gs
lret
lret
ljmp
in
push
jno
push
sbb
rolb
dec
popa
mov
push
sub
es
movsl
and
sub
push
xor
scas
jp
outsl
es
lock
cmp
imul
and
jle
ret
push
sahf
adc
inc
in
dec
in
out
mov
lret
lods
in
dec
pushf
out
adc
out
nop
out
or
stc
xchg
or
dec
outsl
or
xor
in
inc
lret
in
jo
cmpsl
mov
sbb
mov
dec
repnz
hlt
dec
mov
pop
xchg
movsl
fldt
cmc
sub
xchg
cmc
in
cmp
and
and
stc
or
int
cmp
xor
push
inc
inc
push
movsl
cld
stos
lcall
xchg
sti
cmp
add
das
mov
mov
fwait
xor
jl
iret
ss
sbb
or
cmc
aam
lods
pop
leave
or
adc
rolb
into
sub
sbb
adc
adcl
mov
sub
dec
adc
xchg
cld
cltd
out
push
sub
rcrl
dec
pop
dec
jle
pop
xchg
xchg
jmp
cli
sbb
mov
add
iret
mov
add
push
call
das
xchg
fxch
test
xor
add
outsl
xor
fiaddl
mov
or
push
push
push
arpl
in
jge
lcall
in
dec
push
xor
movsb
sti
jmp
xor
dec
or
dec
icebp
xor
push
sub
mov
std
out
fstpl
jecxz
jae
mov
pushf
jp
cs
test
testb
int
mov
out
in
arpl
mov
pop
push
rcl
mov
movsl
lret
cmp
mov
adc
ss
jmp
xchg
jb
add
pop
mov
push
lahf
popf
mov
pop
mov
nop
sbb
adc
out
pop
inc
fistpll
jne
add
rolb
cmp
or
test
inc
mov
loop
or
leave
pusha
rcrb
lret
loope
cmp
jae
je
or
and
mov
mov
jg
sub
sub
std
jne
mov
xchg
sbb
cmp
or
jmp
mov
dec
lahf
jmp
sbb
push
cmp
push
cld
repnz
int3
scas
jo
jb
insl
test
xor
jge
dec
les
cmp
cmp
subl
test
mov
mov
mov
xchg
cmp
inc
out
mov
mov
inc
dec
ret
xchg
stos
and
adc
in
cmp
fmulp
fnstenv
lahf
imul
fs
orl
mov
test
cmpsl
lods
dec
and
pusha
adc
jge
xchg
adc
inc
mov
pop
xchg
sub
dec
xchg
repnz
cwtl
mov
ljmp
push
insl
or
fldl
mov
add
out
xchg
adc
pop
rorl
outsb
rcrl
and
add
push
rcrl
iret
inc
imul
xor
std
insl
inc
xor
cld
decb
push
test
popa
pop
mov
je
cmpsl
inc
andb
or
adc
add
mov
xorb
or
dec
fsubrl
jmp
inc
scas
sbb
xor
mov
xchg
jmp
or
insl
adc
data16
arpl
mov
and
cs
xchg
das
fisttps
xor
loope
popf
insb
dec
xchg
mov
clc
repz
jg
ja
frstor
fnstcw
dec
jl
aas
lock
or
cmp
push
das
push
cmove
popa
dec
jo
sbb
xlat
popl
xchg
adc
test
enter
sbb
push
bound
cmp
pusha
ljmp
jno
fsubrs
xor
pop
push
and
add
shll
js
addl
imul
or
jl
leave
jae
mov
stos
shrl
dec
or
cmp
and
lret
fildl
pop
mov
xchg
xor
mov
ret
sub
xchg
shll
cmp
fucom
jecxz
movsl
rcll
and
shll
inc
sbb
test
rcrb
fdivrs
hlt
imul
out
fs
dec
repnz
nop
test
lret
mov
cmp
outsb
xchg
jle
repz
mov
mov
pushf
xchg
jne
out
push
xchg
jg
xchg
sub
stos
cmc
lods
daa
lahf
sub
push
mov
leave
outsb
jl
incl
jmp
outsb
adc
push
pop
cwtl
divl
jae
aaa
xlat
ret
adc
push
mov
xchg
xor
imul
rorb
fmuls
push
mov
dec
cmp
mov
incl
push
cwtl
cmc
mov
stc
loop
sbb
shlb
test
outsb
clc
out
xor
mov
hlt
push
clc
loopne
pusha
popf
aaa
xchg
adc
lcall
pusha
outsb
mov
aaa
aas
and
jmp
mov
outsl
lcall
lea
dec
cmp
add
lock
rorb
sbb
jl
xlat
jae
lret
lcall
jnp,pt
adc
mov
pop
sahf
iret
stos
icebp
xor
flds
jp
lods
pop
stc
dec
stos
in
jp,pt
pop
in
loopne
fadds
loopne
sub
fs
les
xlat
movsb
mov
push
int
test
mov
pop
inc
mov
arpl
or
dec
cmp
cltd
jae
punpcklwd
xchg
adc
mov
sub
fwait
dec
cmc
aad
jl
lret
or
inc
pop
test
or
divl
sub
lcall
pusha
in
mov
push
sarl
test
push
jl
fwait
dec
push
dec
cmp
es
negl
sbb
js
int
add
outsl
scas
loope
xchg
data16
test
add
adc
cmpsb
loope
push
push
shl
sub
add
dec
rcll
add
shll
xchg
in
sbbl
enter
cmpsb
aas
notl
test
xchg
pop
in
pop
add
pop
sub
fs
sbb
adc
lret
dec
test
loope
addr16
or
xor
cmp
aaa
pushl
sbb
insb
or
and
inc
or
adc
mov
aas
rcll
cmp
fbstp
hlt
aaa
push
dec
insl
mov
dec
inc
mov
les
aaa
iret
negb
repnz
dec
push
jle,pt
popa
inc
ja
inc
fldenv
rcrl
rolb
xchg
cs
xlat
jns
roll
lea
mov
cmp
jno
mov
or
insl
fdivr
inc
lock
pop
push
sbb
cmpsl
mulb
jnp
mov
repz
adc
rorl
pop
aas
add
xor
pop
aad
fchs
pop
push
mov
push
sub
pushf
pop
push
fdivp
in
loope
lahf
iret
clc
in
push
dec
sbb
test
out
movsl
adc
movsl
xlat
mov
push
test
dec
mov
rep
jno
cmp
dec
dec
int3
insl
jmp
ret
jb
data16
mov
pushf
jno
iret
push
sti
pop
scas
scas
jo
dec
jne
push
mov
or
jmp
inc
cmpsb
adc
sbb
dec
push
cld
push
mov
push
xchg
fwait
into
orb
movsb
lcall
jo
sbb
pop
pop
cmp
loop
and
loop
push
fildl
mov
pop
jns
push
adc
and
fwait
lock
cmp
or
jbe
adc
adc
inc
in
orl
sbbl
clc
sub
adc
outsl
ret
or
mov
lahf
scas
sti
and
inc
ficompl
and
jge
ds
dec
dec
lods
mov
mov
jp
subb
dec
fwait
xor
dec
fldl
lods
add
sahf
loopne
fsubrs
pop
xor
jle
aad
les
mov
insl
dec
xor
jge
jmp
adc
mov
lret
les
xlat
and
inc
mov
push
xor
sbb
aam
cmp
negb
je
cmp
movsb
fcoms
push
jbe
add
imull
aam
jo
mov
pop
xor
dec
xlat
stos
lea
sbb
stos
push
test
cli
int3
jns
es
cld
ret
dec
das
ja
sub
sbb
movsb
repz
mov
mov
xchg
jp
push
mov
add
iret
lock
popf
inc
loop
add
adc
pushf
mov
int
out
sbb
popa
out
test
lods
xor
or
sbb
shlb
xchg
in
mulb
iret
mov
outsl
sbb
mov
add
pop
or
or
popf
enter
jbe
fs
pop
xor
stc
and
rcll
mov
ljmp
sbb
inc
mov
or
icebp
movsl
lahf
ret
aad
xchg
fchs
pop
push
mov
adc
lods
xchg
sub
imul
jns
icebp
mov
mov
pop
and
in
xor
or
clc
cmp
mov
rorl
jne
xor
push
sbb
in
movsb
add
fnsave
mov
jb
fnstsw
mov
adc
outsb
push
mov
mov
aaa
js
sbb
pop
xchg
ljmp
xchg
xor
into
incl
push
or
sti
push
xchg
insl
push
sub
testb
out
adc
fwait
sbb
push
push
mov
lds
aam
dec
add
xchg
add
ret
movsl
adc
insl
dec
xor
ljmp
jae
jp
arpl
push
mul
enter
mov
or
fucomp
push
mov
aam
orl
fidivs
insl
call
mov
loope
cwtl
jns
or
mov
cli
push
shlb
lods
or
faddl
stos
sub
filds
jbe
dec
orl
rorb
add
push
rcrb
sbb
pop
call
or
mov
push
adc
in
pop
and
cwtl
iret
mov
pop
add
cli
popf
mov
mov
xor
sbb
adc
in
mov
adc
pop
in
jecxz
mov
jecxz
mov
mov
sbb
fimull
and
push
xor
inc
cwtl
push
orb
jo
mov
mov
in
lds
movsbl
push
and
xchg
pop
fs
or
dec
pop
daa
sbb
push
sub
add
jbe
push
and
add
in
add
jb
rcr
jp
rol
pop
jg
push
ret
and
adc
ret
sbb
adc
dec
mov
mov
lea
clc
repnz
leave
jnp
out
push
ja
mov
js
xchg
mov
mov
movsl
push
cmpsl
and
dec
jo
push
movb
add
mov
push
sbb
andb
fs
adc
xor
mov
test
stc
fadd
xchg
and
in
lret
repnz
xchg
cmp
stos
into
fsubr
mov
shlb
out
pop
adc
sbb
lcall
sbb
pop
push
in
mov
sub
xor
into
je
or
flds
mov
dec
push
jbe
iret
int3
mov
xor
mov
inc
leave
fadd
iret
pop
adc
sbb
sub
push
mov
jle
aas
adc
roll
jp
out
mov
sub
dec
cs
mov
push
test
notl
sub
inc
cwtl
xchg
inc
lock
mov
and
jo
cmpsl
cs
sub
repz
fnstsw
insl
in
pop
or
fwait
cmc
dec
add
test
bound
cmp
xor
stc
fldenv
sarl
pop
and
dec
out
xchg
jmp
fiadds
int3
pop
dec
sub
imul
rcrl
int3
xchg
and
jecxz
bound
push
dec
fisubrs
adc
or
movsb
in
inc
fwait
ljmp
pop
push
fdivl
pop
or
mov
popf
inc
pop
loopne
idivb
add
sub
hlt
mov
test
insl
push
out
mov
sahf
ss
in
call
push
cmp
lock
adc
inc
mov
in
sti
cmp
add
mov
cmp
cld
mov
movsb
aas
insl
scas
or
mov
or
mov
idiv
mov
mov
push
mov
jl
movsl
call
jns
stc
jae
popa
adc
mov
insb
fwait
mov
mov
hlt
sub
neg
shrl
jle
into
dec
mov
repnz
loopne
pushf
and
xor
repnz
ret
imul
cs
in
push
push
fiadds
jae
imul
add
mov
daa
jo
fsubr
jno
inc
cltd
lods
fiaddl
or
adc
aad
mov
lret
clc
aad
imul
cmpsl
sarb
bound
aas
sub
fnstenv
fstps
cmp
test
dec
adc
pop
rolb
je
rcrb
jge
lock
shlb
ret
nop
jecxz
jg
or
lods
or
dec
lods
loope
addr16
push
mov
cmp
aam
aad
sbb
mov
ret
sbb
data16
ror
sarl
ds
fisttpll
add
adc
xor
repz
scas
insl
test
sarl
mov
mov
pop
inc
or
test
push
idivb
outsb
and
mov
icebp
push
xor
es
fdivl
or
pop
add
push
hlt
pop
sub
cld
cmpsl
jp
fld1
sub
scas
dec
or
enter
cmp
add
xlat
adc
leave
cltd
inc
push
ret
jbe
mov
jl
es
mov
imul
ret
mov
fldl
and
dec
xor
int
or
inc
dec
bnd
das
add
aas
jecxz
xor
out
push
mov
popa
sbb
mov
loop
jb
rorb
mov
and
dec
or
inc
jno
mov
xor
out
int3
mov
mov
aas
jae
fs
outsl
mov
repnz
jns
subb
mov
jb
pop
add
mov
mov
jl
movd
testl
jl
aad
loopne
insl
arpl
pusha
pop
jnp
add
add
pop
push
fcompl
das
out
addr16
fs
stos
push
mov
stos
test
test
jo
adc
inc
push
gs
mov
mov
cmp
mov
imul
lret
std
pop
in
mov
mov
xchg
cmp
fwait
or
loop
mov
push
jl
movsb
sbbb
jno
jnp
aas
in
lret
fisttps
or
push
je
in
dec
shrl
mov
loop
xor
sbbl
or
fcomps
adc
xchg
fwait
test
cmc
xchg
sbb
mov
cmp
push
scas
mulps
fldl
dec
mov
insl
sbb
mov
out
daa
or
xchg
sbb
je
dec
out
mov
fisubs
pop
int
dec
jno
push
out
arpl
dec
pop
lahf
mov
popa
shl
push
dec
xchg
jae
xor
jne
inc
cmp
ss
cmc
cltd
test
and
ds
loop
add
push
roll
in
inc
sbb
orb
sbb
aaa
imul
int
adc
cmpsl
movsl
dec
in
pop
and
stos
xchg
mov
mov
cmp
adc
pop
sbb
dec
sbbl
ja
pop
movsb
push
jg
outsl
sti
fucom
fists
mov
repnz
mov
inc
pop
cltd
aam
mov
mov
shl
xor
sahf
xorl
xorl
inc
test
mov
and
push
test
ja
jbe
push
lret
ss
mov
push
xlat
or
arpl
mov
stos
or
mov
ror
sbb
lret
shlb
insl
nop
bound
mov
int
dec
or
inc
jae
popa
gs
push
inc
push
push
xor
iret
mov
out
mov
xchg
jecxz
adc
icebp
jne
fs
mov
jns
or
or
jbe
lods
push
jl
xor
add
push
sahf
xchg
repz
leave
lock
sub
stos
daa
cs
shrl
out
pop
arpl
int
mov
lods
jl
xchg
or
push
int3
out
dec
cs
mov
out
push
je
in
push
pop
pop
or
cmp
push
adc
jnp
shrb
mov
outsl
sarb
inc
sub
push
inc
sbbl
cwtl
mov
cmpsl
ljmp
jge
or
mov
jge
add
loope
aas
mov
popf
rcrl
mov
mov
pop
adc
scas
sub
in
or
dec
xchg
mov
fiaddl
mov
or
mov
dec
cmp
pop
stc
mov
mov
nop
or
dec
jge
xor
mov
call
dec
mov
xchg
stos
push
pop
mov
push
mov
es
jns
loop
dec
xchg
test
mov
scas
mov
jo
mov
imul
jecxz
fcoml
xlat
lea
pop
in
pop
push
cltd
adc
cli
add
test
ja
sahf
sub
adc
pop
or
fimull
inc
test
icebp
fwait
sbb
xchg
push
mov
popf
or
mov
or
xor
jo
test
gs
cmp
sbbb
jle
xchg
adc
test
fldl
jno
repz
test
dec
sub
and
add
push
xor
aam
pop
lea
jo
adc
lret
andl
mov
sub
xchg
jmp
cmp
mov
add
sub
cmp
and
xchg
mov
rclb
push
imul
mov
inc
shl
testb
loopne
loopne
inc
movsl
fldt
insl
shlb
cli
mov
jo
dec
repz
insl
add
stc
insl
push
jbe
add
inc
aaa
je
mov
and
iret
and
shl
lret
xchg
mov
jbe
stos
loop
in
adc
jge
test
pushf
mov
pop
fmul
out
imul
adc
jno
fiadds
pop
push
out
arpl
inc
pop
mov
cld
gs
aaa
rcrb
aas
inc
lods
adc
in
adc
sub
es
inc
test
ret
jp
outsb
sbb
jo
repnz
dec
out
pop
or
and
jbe
jae
sahf
fnstcw
inc
push
mov
add
jmp
mov
stos
addl
mov
pop
sbb
mov
and
push
mov
adc
icebp
push
mov
and
lcall
ret
test
ljmp
mov
cmpsb
xor
mov
aaa
mov
jb
aam
loop
xor
pop
sarb
lock
scas
mov
shl
or
mov
xchg
outsb
lock
push
xor
fnstcw
xor
pop
nop
mov
out
test
rcll
loop
inc
pop
pop
pop
xor
les
mov
in
adc
and
jl
notb
push
dec
jle
adcl
and
popf
scas
mov
add
inc
lret
xchg
cmp
jmp
test
inc
push
das
cmp
in
hlt
rorl
int3
pcmpgtb
mov
das
scas
mov
cmpb
fildl
xlat
push
orl
cmp
test
mov
cmpb
sbb
leave
mov
jge
mov
sbb
mov
lods
cltd
sbb
cmpsb
cwtl
mov
fs
mov
cmp
add
and
cmpsb
fwait
or
and
sub
in
push
cmp
xorl
mov
dec
popa
push
sub
ret
pop
nop
in
daa
movsl
jne
mov
xor
test
cltd
sbb
fucomp
mov
ror
xchg
or
dec
pop
inc
pop
mov
lds
mov
lock
xor
add
xchg
sahf
stos
sbb
inc
inc
bound
shrb
lods
aaa
inc
pop
mov
mov
pop
data16
inc
nop
out
push
inc
lock
xor
insb
or
aad
jmp
and
jb
sysenter
cltd
xchg
mov
inc
mov
mov
lods
js
fcmovnb
and
dec
aad
js
inc
leave
dec
cwtl
pop
shlb
adc
sub
iret
bound
adcl
sbb
jmp
jns
test
sti
push
mov
mov
mov
ret
mov
nop
xor
and
mov
and
inc
cmpb
arpl
lahf
rcrl
add
and
jle
shr
or
outsl
mov
js
adc
mov
aas
shl
and
das
and
push
mov
sbb
pop
ret
mov
push
and
lahf
mov
js
xchg
adcb
lret
aas
clc
sahf
sbb
xor
mov
test
pushf
pop
int3
xor
in
dec
aaa
add
popa
imul
arpl
lret
sbb
mov
lahf
pushf
jmp
daa
push
jmp
ss
dec
mov
dec
imul
jge
cmc
sbb
jnp
dec
insl
stos
nop
mov
movsl
or
addr16
rcll
loope
mov
fisubs
cwtl
fwait
adc
fwait
repnz
and
insl
negl
mov
js
js
js
nop
into
insl
push
or
mov
je
lret
outsb
xor
sbb
idiv
cs
mov
sub
rcl
inc
push
sbb
pushf
dec
xchg
or
xlat
fmulp
cmp
cltd
xchg
int
sub
jae
cmp
inc
mov
bound
ljmpw
not
jnp
cwtl
xchg
and
and
outsl
int
fld
das
hlt
aas
adc
rorl
add
mov
movsl
int
hlt
in
outsl
jbe
and
std
pop
and
xchg
enter
cs
sbb
or
out
xchg
or
addr16
fcmovnu
jno
or
dec
xchg
dec
call
lock
push
jne
dec
fldcw
jl
jo
test
cltd
xchg
add
push
mov
iret
dec
pop
push
lret
outsb
adc
lahf
pop
inc
scas
fldenv
push
mov
mov
xor
aam
push
pop
inc
lock
ficoml
popf
adc
mov
push
cmpsl
xor
dec
movsl
inc
arpl
adc
sbb
adc
or
jb
addr16
andb
rcll
push
hlt
notb
scas
mov
sbbb
cmpsb
dec
jl
adc
outsb
mov
dec
mov
aam
push
iret
add
insb
filds
or
inc
inc
sub
and
loope
jbe
fstpt
add
repz
adc
jb
and
aas
fwait
popf
and
sbb
stos
inc
data16
daa
and
or
outsb
movsb
fiaddl
xchg
push
orl
pusha
xchg
rclb
lods
mov
notl
dec
ja
cwtl
and
jecxz
push
push
xchg
inc
xchg
scas
mov
lret
stos
sti
popf
dec
lret
mov
imul
leave
sub
mov
outsb
fldenv
mov
cli
mov
cmpsb
subb
addr16
mov
repnz
gs
fadds
xorb
std
push
int3
xchg
dec
dec
lds
inc
pop
push
push
sub
mov
add
or
jl
out
cmpsb
xor
sub
in
jecxz
xchg
scas
subl
outsl
adc
dec
je
movsb
xchg
cld
int3
stos
jbe
inc
jmp
fildll
clc
pop
repz
inc
cmpsb
insl
push
pop
cmp
dec
or
dec
xor
loopne
ret
adc
testl
pop
push
mull
leave
pop
jbe
outsl
xor
mov
and
loopne
pop
xlat
cmpsl
shrl
adc
pop
icebp
xchg
sub
xchg
int3
push
rcrb
pop
push
dec
jmp
dec
push
nop
mov
ret
add
fcoms
push
data16
movsl
and
add
adcl
std
mov
les
repnz
mov
xor
ds
bound
cmp
xor
mov
insl
fdivrs
dec
pop
cld
movaps
push
dec
cmc
out
movsl
pop
rcl
mov
lock
out
test
add
bound
jecxz
dec
cltd
cmp
lcall
adc
outsl
cs
scas
mov
sbb
insl
sub
les
outsb
aad
sub
pop
loop
mov
gs
xor
sbb
push
fldenv
call
mov
ret
or
xor
addr16
and
push
mov
movsl
imulb
jno
ret
mov
xchg
mov
and
xchg
mov
ja
push
repz
jmp
les
push
in
xor
lock
mov
sti
mov
rcrl
adc
mov
mov
jnp
aas
stos
filds
aaa
xchg
jge
inc
ret
int3
fucomp
mov
call
push
and
popf
jmp
pop
jno
adcl
cmp
out
mov
aas
insl
stos
pop
stos
pop
test
gs
in
rcll
sbb
jle
loope
adc
rolb
outsb
aas
repz
and
stc
gs
pop
leave
data16
les
xchg
lods
leave
lret
mov
int
ret
xlat
add
js
rcr
inc
and
xchg
jnp
sub
hlt
mov
inc
mov
xchg
dec
scas
imul
jge
icebp
mov
push
movsb
movl
stos
fisttpl
mov
xchg
cmc
es
add
push
les
mov
cmp
sub
push
je
test
sbb
mov
jne
inc
dec
negb
push
fnstcw
fiaddl
push
pop
add
pushf
xor
hlt
jg
mov
adc
mov
in
sbb
mov
aaa
inc
mov
xchg
pop
fdivrp
rcrb
dec
orb
mov
push
jmp
scas
cltd
xchg
adc
inc
stos
ljmp
pop
leave
lcall
rorb
cmp
divb
fisubrs
repz
fnstenv
pop
add
push
mov
int
mov
dec
mov
add
testb
pop
ja
fdivrs
xchg
push
loopne
fnstcw
test
loopne
add
ret
gs
ja
push
adc
js
mov
sub
adc
test
push
aam
scas
loop
test
insb
ss
pusha
leave
movsb
shrl
inc
stos
push
xchg
adc
adc
andl
xor
mov
and
in
ss
into
push
std
cmp
xlat
fistl
push
enter
les
inc
xchg
lock
leave
int3
jg
das
ljmp
sbb
mov
mov
cmpsl
std
shlb
push
mov
test
mov
ljmp
test
lods
in
sub
push
jp
je
mov
iret
cs
mov
repnz
jp
insb
inc
addl
mov
inc
jno
das
cwtl
xor
out
jno
inc
push
push
jecxz
lcall
push
inc
inc
fisubrs
lock
xchg
les
pop
sbb
fnsave
add
dec
add
js
pop
add
fidivrl
scas
xorb
test
mov
jl
int
rcrl
leave
add
das
dec
call
stos
and
mov
outsl
push
sbb
les
inc
push
jg
fwait
jae
inc
mov
addr16
jle
xor
in
inc
cmpsb
sub
sub
lcall
out
lcall
cmp
cmp
cltd
subl
push
or
outsb
cli
lret
iret
lret
mov
ljmp
test
sub
scas
insb
sahf
push
ret
mov
outsl
cmc
int
mov
mov
pop
enter
imul
mov
addr16
dec
jecxz
popf
xchg
sbb
ja
mov
inc
fldenv
idivb
mov
inc
test
cmc
sub
mov
mov
insl
cmp
lcall
faddl
cmp
and
ds
addr16
dec
and
fldcw
sub
jb
jecxz
pop
stos
lahf
mov
icebp
mov
imull
jle
mov
jl
fisttps
xchg
push
sbb
adc
loope
inc
mov
or
cmp
divb
dec
adc
pop
jp
xchg
cmp
stos
pop
xchg
lock
jbe
or
push
adc
aas
push
std
xchg
inc
mov
test
cmp
jo
inc
imul
jmp
sbb
lods
dec
je
aad
add
mov
nopl
insb
fcmovb
rolb
daa
adc
cmp
inc
or
andl
lcall
repnz
mov
mov
xchg
dec
loop
mov
stc
dec
adc
pop
js
enter
sub
das
jmp
sub
add
xchg
add
lahf
lcall
mov
std
rolb
fstpt
into
stc
mov
pop
loopne
sbb
xor
push
cmp
pop
cmpsl
in
movb
inc
movzwl
ret
sub
mov
push
mov
lcall
xor
popf
iret
sbbb
or
aad
push
dec
lret
sbb
cs
mov
cmp
or
fcomp
inc
int3
inc
inc
repnz
sbb
arpl
xor
sub
sbb
jns
andnps
adc
inc
shlb
add
fildl
cld
nop
clc
dec
jbe
outsb
mov
lods
aas
adc
and
cmc
imul
push
cld
aaa
and
cmp
fstl
push
xchg
jl
sar
mov
add
fimull
push
jb
mov
fiadds
adc
push
fadds
fiadds
popf
adc
adc
mov
out
arpl
es
mov
jp
xchg
pop
and
lock
cmp
xchg
mov
sub
add
in
xchg
push
xor
xchg
lahf
add
cmp
sub
adc
orl
scas
inc
add
fsubrl
fstps
xchg
addl
shll
jnp
cmc
sbb
dec
ja
scas
movsl
stos
dec
out
daa
or
enter
dec
popa
and
fidivrl
mov
pop
sbb
sbb
gs
je
xchg
add
ja
shlb
sub
in
pop
subl
nop
jg
push
popa
fdivs
sbb
pusha
sarb
test
into
sbb
mov
mov
jo
aad
xor
xchg
movsb
dec
jmp
push
inc
test
aad
movsb
lcall
dec
sbb
out
mov
test
pop
wrmsr
out
dec
pop
cld
lcall
outsb
dec
fs
loopne
lcall
neg
and
sub
movsl
shlb
scas
adc
pushf
xlat
sub
mov
jne
mov
pop
cmpl
arpl
jg
jb
and
or
or
or
and
sub
sub
shlb
imul
adc
inc
lds
inc
xlat
in
sar
mov
mov
sub
stos
imul
add
movsb
pushf
sub
repz
mov
mov
pcmpeqb
imul
sbbl
sbb
fimuls
test
ret
mov
ficompl
mov
sti
adc
sub
lds
push
hlt
push
mov
clc
subl
xchg
clc
mov
movsb
mov
je
mov
mov
hlt
lret
adc
int3
pause
jne
call
inc
outsl
arpl
aad
icebp
loope
js
xor
xor
push
sub
movsl
negb
into
fldenv
es
icebp
inc
hlt
scas
xchg
das
fwait
not
jl
dec
jecxz
ret
lret
or
adc
inc
les
xor
cmpsl
sahf
stc
push
aas
shlb
push
sbb
xchg
pusha
push
mov
lret
mov
rcll
stos
add
pop
add
sbb
loop
in
lods
bound
push
mov
aam
push
pop
nop
xchg
or
lods
xchg
add
fs
repz
mov
or
leave
ss
mov
add
xor
pop
in
sbb
add
testb
adc
xor
xchg
mov
daa
scas
lret
fwait
das
ljmp
arpl
mov
jl,pt
fisttpll
mov
lret
sbb
and
inc
lcall
pop
loopne
std
into
cmp
or
mov
and
fwait
outsl
mov
pop
stc
std
xchg
sbb
pop
xor
xchg
lcall
les
adc
lahf
pop
call
jo
cmp
pop
out
cwtl
sahf
out
mov
sub
inc
add
jne
data16
inc
dec
pushf
icebp
mov
rcl
sbb
xor
jl
movsb
jb
arpl
and
into
fbld
movsl
cmp
mov
sub
add
sbb
mov
jp
pop
jg
mov
or
or
iret
cli
adc
cwtl
push
sub
and
push
out
inc
daa
xor
ljmp
je
je
xchg
fnsave
xchg
mov
in
lahf
add
sbb
cmp
icebp
jo
jo
sbb
inc
fadds
mov
dec
cmp
pop
pop
pop
sbb
jmp
addl
cs
ret
out
or
ret
popf
les
insb
dec
sbb
jmp
sbbb
subb
mov
pop
ret
ret
aas
mov
data16
and
dec
push
cmpsl
nop
jae
cld
dec
dec
ja
rcl
lcall
or
insl
and
adc
lods
mov
scas
sbb
in
xor
or
cmpsb
mov
sbb
mov
mov
mov
cld
jl
ret
push
push
outsb
out
in
rorl
sub
cs
popa
xchg
daa
in
lcall
outsb
fstpl
sbb
inc
lds
ss
lods
mov
jg
in
xchg
inc
stos
add
jb
xor
inc
and
pop
js
jge
fmull
cld
in
cltd
jl
mov
or
and
insl
sarb
pop
jmp
xor
mov
stc
leave
scas
xor
loop
fsubs
and
xor
push
out
cmpl
mov
adc
idiv
js
xor
mov
pusha
push
and
xor
mov
fwait
jge
mov
adc
hlt
jo
sbb
jle
sbb
mov
mov
xchg
data16
std
cmc
shlb
call
pop
push
int
mov
add
sub
mov
lods
push
loope
xchg
in
cld
cs
sbb
sahf
fistpll
sub
leave
jnp
mov
pop
loopne
sbb
pop
shll
mov
mov
or
mov
outsl
cld
mov
sbb
xorl
mov
adc
mov
test
cmpsl
outsb
cmpsl
pop
inc
mov
add
stos
imul
clc
mov
lock
in
cmp
ret
mov
jg
call
mov
test
or
inc
mov
pop
std
mov
sub
mov
xchg
xchg
negb
pop
lret
adc
cmp
xor
insb
lods
ds
xchg
rorl
ds
int
jne
inc
mov
lea
jns
push
or
jnp
in
cmp
cmpsb
dec
cli
dec
cmp
jp
cwtl
or
test
in
repnz
aad
push
aaa
xchg
int3
stos
jl
cmp
loope
ljmp
fdivrs
inc
std
mov
mov
lret
mov
dec
mov
int
mov
inc
int3
sbb
int3
lds
loop
outsb
imul
out
pop
test
js
sub
mov
mov
cmp
add
fnstenv
aam
testl
inc
mov
insb
bound
test
mulb
add
dec
addr16
sahf
testl
cmp
scas
mov
aad
and
mov
shr
mov
out
push
lcall
sbb
or
add
cmp
out
enter
sbb
mov
lret
xchg
mov
scas
mov
xlat
fldl
cmp
add
sub
mov
push
pop
test
sbb
test
das
jno
sbb
inc
cmp
mov
int3
mov
out
stos
pop
imulb
mov
fsubl
out
sub
repz
fsub
jge
sbb
cmp
in
outsb
pop
in
pop
aas
cmp
aas
xchg
out
movsb
and
call
and
dec
int
insb
gs
dec
jg
adc
lahf
into
xor
pop
gs
rcr
pop
dec
loope
out
popf
lret
mov
mov
cmp
inc
dec
cmp
pop
pushf
jmp
mov
jae
push
mov
or
xchg
std
stos
xchg
int3
daa
fucomi
leave
inc
mov
push
popa
loop
jle
push
out
test
fcomip
jb
adc
pop
and
mov
mov
insl
adcb
insl
mov
in
test
mov
pop
sbb
or
fmulp
lods
mov
and
repz
xor
jo
sbb
fwait
das
mov
lods
xor
jnp
inc
jp
add
push
mov
testl
mov
or
insb
mov
xor
push
test
inc
xor
dec
cvtpi2ps
push
pop
enter
sub
cmpsl
xor
sbb
nop
inc
jle
cmp
and
dec
inc
lahf
daa
imul
jecxz
pop
arpl
inc
pop
js
in
jo
pop
xchg
xchg
pop
setg
add
push
inc
cmp
mov
mov
or
mov
pusha
sub
or
cmpb
in
rclb
push
aaa
add
rcrb
mov
rolb
sub
ficomps
sbb
or
jns
jmp
out
inc
popa
push
loope
inc
push
sbb
and
adc
ljmp
mov
push
negb
scas
and
add
outsl
pop
pop
dec
repz
sub
inc
imul
test
pop
push
cltd
ds
roll
dec
imul
and
aaa
inc
aad
dec
mov
loope
or
shr
ds
xchg
pop
mov
insl
mov
leave
aas
jl
addb
enter
mov
data16
clc
mov
idivb
xor
cmpsb
insl
rclb
mov
xor
pop
or
and
pop
and
test
adc
sub
push
dec
popf
mov
lods
pop
mov
rcrb
push
mov
mov
fdivrl
mov
call
or
or
out
in
add
jp
cmp
dec
lods
cmp
das
mov
std
popf
sub
sbb
push
lods
pop
ret
iret
addr16
outsl
mov
xchg
mov
shr
ja
aad
sbb
or
jge
dec
push
or
pshufw
inc
into
mov
cmp
add
xor
inc
inc
mov
sbb
mov
mov
fwait
pushf
decl
mov
sbb
mov
pushf
sbb
roll
xor
and
ror
add
jle
and
shr
mov
inc
or
scas
lds
lret
inc
out
xor
cmp
mov
cmp
sti
js
jl
movsb
leave
mov
test
shl
test
je
jge
sub
dec
pop
dec
jp
aad
add
dec
inc
xor
adc
mov
test
rcrl
push
ds
repz
and
xor
sbb
fisttpll
add
adc
popa
in
mov
add
jno
rcl
push
mov
push
fdivrs
movsl
mov
scas
fwait
xchg
hlt
ss
inc
hlt
jmp
shl
mov
int3
fmulp
cmp
test
fsubr
repz
xor
push
aam
xchg
pop
bound
or
jb
cmp
xchg
and
adc
sub
jnp
sbb
inc
mov
dec
shl
fldl
lock
push
sbb
insb
xorl
decb
sahf
dec
mov
rorb
mov
leave
mov
or
cmpsl
xor
jno
xor
xor
jmp
sub
shr
or
sbb
mov
incb
leave
pavgw
ss
push
mov
lcall
jmp
cmp
movsl
stos
adc
fistpll
daa
test
in
movsl
cmc
mov
bound
pop
adc
pop
xor
loopne
or
inc
das
pop
lods
adc
test
and
and
mov
inc
lret
loop
shr
jl
add
adc
or
testb
jl
mov
push
inc
jbe
out
cli
jle
add
jg
pushf
pop
in
in
or
loopne
or
pop
out
stos
and
inc
mov
mov
adc
mov
sbb
dec
jb
push
pop
cld
pop
push
cmp
mov
push
xchg
adc
pop
ret
push
push
lds
addr16
and
ret
loope
mov
push
pop
xchg
pop
rcll
sbb
dec
sub
adc
mov
mov
shlb
fsubrs
pop
sbb
and
jne
pop
dec
jmp
sub
or
movsb
addr16
push
repnz
stos
call
sbb
add
pop
pushf
aam
lods
stos
or
popa
scas
push
sbb
movsb
xor
dec
dec
popl
and
fisubrl
test
outsb
jg
or
sahf
stc
add
add
pop
sbb
pop
xchg
jno
push
fisubrs
cmp
xor
orl
movsl
in
shll
jno
cwtl
xchg
push
aas
sub
lret
push
imul
xor
loop
push
fldt
jns
popf
in
into
leave
adc
xchg
stos
cmp
or
dec
pop
icebp
cmp
and
mov
mov
dec
shrl
pop
xor
imul
pop
loopne
stos
adc
les
dec
mov
jae
inc
les
icebp
or
sbb
cli
lds
mov
sti
in
mov
stos
addb
push
push
sbb
test
and
lea
xchg
mov
push
ja
mov
ja
jecxz
push
or
adc
bound
add
in
mov
or
mov
adc
push
adc
jl
and
sbb
cmpsb
mov
rcrb
xchg
sbb
push
push
stc
lret
outsl
push
loope
mov
sarb
fbld
and
sub
jmp
push
inc
jno
stc
pushf
call
jno
jne
pop
subl
sbb
arpl
lret
or
push
cld
and
iret
fstps
mov
jge
in
mov
sub
cmp
adc
inc
jp
cmp
pop
mov
adc
adc
pop
lock
scas
jecxz
and
ja
push
inc
cli
adc
mov
js
pop
insl
jmp
mov
and
sbb
mov
es
pop
push
sbb
fildl
dec
adcl
andb
and
ss
out
or
icebp
mov
cmc
jp
stc
pop
test
cmpsb
pusha
outsl
in
stos
mov
imul
add
enter
ss
mov
cmp
icebp
cs
mov
or
jmp
mov
add
mov
into
out
cld
daa
mov
sbb
jmp
js
je
jne
and
movsl
push
push
scas
imul
cmpb
cmpsb
int3
xchg
rorl
lahf
addl
nop
dec
hlt
mov
movl
push
xchg
inc
mov
add
fldcw
aam
in
cltd
xor
cwtl
jge
rclb
cmp
imul
mov
imul
lods
sub
xor
pusha
ljmp
ud2
ljmp
pop
sahf
ret
mov
adc
pushf
adc
les
aaa
mov
adc
or
fsubr
or
or
lahf
test
pop
aaa
mov
jnp
xchg
aam
lods
cmp
aaa
outsb
movsb
jmp
test
ds
push
scas
adc
xchg
or
call
inc
jle
mov
pop
mov
mov
pop
cmp
das
je
fildll
xlat
lods
pushf
add
pop
mov
mov
xor
fwait
mov
sarb
or
aaa
jb
push
shrb
popa
xor
push
lods
mov
and
or
nop
pop
frstor
in
dec
imul
in
jns
ret
mov
push
mov
inc
sbb
xchg
sbb
push
mov
das
cmp
inc
leave
pop
push
cld
cwtl
sbbb
aam
jg
jle
ret
mov
stc
sub
fmul
das
adc
jmp
int3
mov
lret
jp
ret
sbb
inc
mov
mov
mov
and
lahf
shl
mov
add
shl
pop
je
lcall
sbbb
adc
addr16
and
or
push
fbstp
sbb
aad
dec
add
jl
add
fnsave
jle
xchg
cmc
lds
pusha
into
lods
sbbl
out
mov
rcrb
adc
pop
ret
mov
imul
imul
cli
popa
push
jle
or
xchg
adc
xlat
inc
xchg
mov
adc
insb
cmpsb
or
push
pusha
sub
clc
mov
pop
xchg
jb
mov
repnz
mov
mov
pop
subl
cmp
xor
inc
das
adc
add
sub
push
add
lret
mov
xchg
cmp
popa
lds
hlt
adcb
aas
jg
mov
icebp
and
mov
je
jns
movsl
mov
sub
xor
mov
cltd
lods
lahf
push
jl
add
out
cmp
shrl
or
dec
imul
sub
or
rcl
stos
jecxz
adc
xchg
cmpsb
add
xchg
in
fsubp
lahf
and
les
jbe
push
lds
lds
add
insl
stos
cmp
mov
xchg
lds
insl
repnz
cmc
shll
rorb
sbb
aas
cld
xor
or
outsb
push
pushf
lret
in
fwait
sub
outsl
insl
mov
jnp
cmp
fcmovnb
aad
jae
orl
sahf
std
iret
sub
ss
push
mov
push
inc
inc
shll
movsl
sub
add
sarl
aaa
lea
mov
mov
repz
push
pushf
js
insl
add
and
xchg
cmp
jnp
adc
xchg
call
js
sahf
pop
jo
pop
or
fcmovne
addr16
jb
push
inc
adc
xor
inc
and
lods
dec
mov
mov
inc
cmp
adc
nop
repz
inc
inc
or
cmpsl
mov
pop
jbe
xchg
xor
dec
stos
sub
pop
inc
dec
loope,pt
lret
sub
in
out
cltd
pusha
hlt
push
sbb
add
sbb
movsl
popa
mov
mov
rcl
push
jmp
sbb
sbb
xchg
nop
mov
lock
fcompl
mov
adc
notb
stc
mov
outsl
xor
mov
dec
jge
fs
sub
mov
mov
aad
stc
sti
iret
pop
jle
push
inc
sbb
iret
enter
scas
cmp
notl
int
js
cmp
cli
mov
data16
jne
cmpb
jle
bound
pushf
pop
shl
lahf
aas
cmp
mov
cmpsb
sbb
push
push
mov
or
or
dec
das
gs
lock
out
insl
aas
in
sub
inc
xchg
dec
jmp
and
addr16
inc
imul
out
sbb
cvtps2pd
jl
xor
das
inc
pop
sbb
lea
pop
push
sbb
in
push
jle
sbbl
push
xchg
lret
jg
xchg
jne
outsl
or
xor
addr16
cmp
test
fucom
sbb
in
sbb
cmpsl
data16
jo
test
ja
jecxz
mov
adc
mov
rcl
repnz
les
lret
loope
pop
aam
and
bound
imul
jnp
inc
inc
out
movsl
fidivs
in
push
out
out
addr16
call
ret
sub
int3
cwtl
pushf
arpl
andb
fldt
xchg
int3
or
outsl
sub
lock
cmp
rorb
test
jp
sub
mov
lods
or
test
pushf
pop
xchg
jmp
ljmp
cs
mov
push
adc
pop
lds
pop
mov
dec
pop
sbb
maxps
aaa
addr16
mov
lcall
mov
pop
pop
movsb
inc
clc
sbb
push
mov
ljmp
hlt
sbbl
mov
cmc
insb
out
jecxz
mov
cmp
nop
stc
fiadds
clc
es
cmp
pop
push
cld
push
cmp
mov
sbb
inc
jg
xor
xchg
cmp
adc
dec
xchg
adc
in
leave
xchg
std
xchg
ss
jge
pop
pushf
jmp
ret
bnd
dec
in
and
jp
imul
sti
sbb
outsl
mov
out
mov
sbb
ss
add
jb
xor
dec
xor
xchg
cltd
ret
xor
loop
in
adc
neg
scas
jp
mov
leave
out
mov
cwtl
lcall
lahf
ss
or
mov
xlat
lcall
dec
cmp
gs
andl
testb
inc
and
lcall
test
out
pop
adc
xchg
loop
xchg
cmp
push
sbb
mov
push
fsubrl
pusha
sbb
pop
xor
and
push
dec
iret
repnz
push
push
sbb
dec
add
les
sbb
rcll
xchg
push
fimull
stc
adc
orl
mov
xor
test
push
jne
mov
cmpsb
inc
int3
stc
dec
dec
shlb
roll
mov
jnp
fwait
mov
sub
and
mov
cld
push
pop
divb
stc
in
xor
cltd
xchg
cltd
jge
pop
cld
sub
inc
dec
scas
imul
xor
and
stc
fcomps
pop
rolb
push
fwait
inc
nop
mov
lock
test
dec
jecxz
jb
add
lahf
stos
imul
mov
aaa
cli
andl
dec
inc
sub
icebp
stos
hlt
in
stos
and
fisttpl
jle
movsl
and
out
les
outsl
incb
add
mov
cmc
outsb
add
or
cmp
jae
inc
popf
stos
test
dec
out
sbb
push
mull
cmpsb
inc
push
pop
scas
mov
insb
outsl
aam
aaa
js
mov
xchg
sahf
call
cmp
fisubs
data16
stc
sbb
aas
jle
mov
scas
mov
and
xor
gs
bound
xor
out
dec
dec
push
imul
mov
bound
adc
sbb
out
scas
jbe
inc
ficomps
gs
push
gs
push
adc
jmp
mov
inc
bound
mov
jbe
daa
into
fucomi
or
mov
fildll
sub
icebp
mov
in
sti
call
aas
or
xchg
iret
cs
dec
sarl
cmp
test
sbb
loope
sbbl
inc
pop
les
addl
mov
iret
adc
mov
cltd
xchg
in
out
repz
adc
push
push
xchg
std
push
sbb
xor
fyl2xp1
and
or
les
push
ljmp
aad
test
pop
sub
in
mov
adc
inc
mov
mov
mov
loope
pop
adc
jle
enter
imulb
mov
mov
fs
je
jns
fcoml
pop
das
add
jne
xor
outsb
arpl
push
je
xorl
mov
cmc
cltd
imul
cmp
es
sub
mov
fs
loope
jle
pusha
push
and
shrb
dec
sahf
sub
sbb
mov
adc
xchg
sub
or
and
stos
cmp
lods
fldenv
mov
pusha
inc
js
inc
stc
dec
fwait
mov
dec
push
cmovl
rclb
add
ljmp
mov
lods
dec
pop
mov
or
jecxz
into
outsl
jo
mov
sahf
mov
xor
andb
sti
aad
mov
and
cltd
push
leave
dec
lods
add
insl
adc
and
je
scas
rcrb
push
hlt
and
mov
mov
mov
lea
xor
jge
andl
or
das
xor
lock
test
lds
aad
mov
push
in
dec
imul
or
arpl
sub
push
lock
lret
pushf
xchg
jl
out
xchg
aaa
jle
push
sbb
mov
arpl
adc
sbb
mov
test
push
mov
add
arpl
xchg
sahf
negl
aaa
and
hlt
mov
sub
xor
out
lahf
in
sbb
cmp
dec
lahf
mov
bound
mov
cmp
or
mov
fisubl
arpl
es
jmp
inc
sub
add
jmp
and
lods
daa
push
inc
ret
mov
pop
aaa
jno
iret
mov
sbb
scas
push
jo
sub
adc
aas
xchg
or
jo,pt
movsl
xchg
repnz
enter
jb
cs
mov
add
jns
mov
es
push
arpl
scas
in
xchg
movsl
push
mov
mov
bound
mov
pop
sub
jns
cmp
inc
jbe
xor
inc
adc
mov
mov
mov
pop
jb
pop
cld
out
lock
xchg
out
sbb
ret
jge
xchg
push
loop
es
fwait
mov
inc
out
xor
dec
mov
fisttps
sub
pop
divb
mov
jp
sbb
cmp
push
adc
mov
push
daa
jl
ret
mov
insl
xor
scas
fidivrl
push
lret
and
sbb
std
sti
xchg
ror
inc
sahf
popf
cmp
movsb
inc
sahf
jl
outsl
dec
divl
cld
lods
ret
pop
and
mov
sbb
xchg
add
adc
add
xchg
bound
test
adc
inc
lcall
jb
jmp
jo
jb
pop
xchg
xor
lock
mov
jno
push
dec
jne
mov
stc
mov
xchg
mov
test
sbb
insl
mov
stc
dec
push
popa
cmp
sbb
xchg
das
pop
cmp
mov
mov
or
fnsave
js
out
and
in
dec
or
pop
arpl
dec
pop
or
mov
xor
mov
mov
scas
dec
jp
jp
push
or
pop
fiadds
push
xchg
pop
xchg
push
mov
mov
sbb
dec
mov
jno
insl
ficoms
pushf
fbstp
fisubrs
cs
mov
lods
cmp
jno
fmull
and
aaa
js
push
std
mov
clc
fsubs
insl
cwtl
es
xorl
sbb
cmp
aas
in
pop
std
or
lret
in
call
sbb
push
bound
jecxz
popa
dec
daa
inc
outsb
sbb
jmp
dec
sbb
or
popf
dec
leave
inc
outsl
cmp
pop
xor
push
je
jbe
in
sahf
pop
aam
mov
fucomi
inc
pushf
nop
push
rolb
push
fcomi
mov
pop
fsts
sub
imul
andb
lds
sbb
aaa
jge
icebp
cmp
shrb
imul
pop
xor
leave
fildl
and
pop
dec
scas
popa
fidivl
pusha
dec
hlt
nop
loope
inc
mov
pop
jb
loopne
addr16
popa
or
xor
clc
mov
jge
scas
mov
dec
inc
iret
mov
insb
insb
loope
adc
outsw
pop
in
out
mov
ret
aad
mov
shlb
jbe
push
push
jp
inc
aad
sbb
or
xlat
xchg
inc
rolb
cmpsl
cs
add
xor
push
stos
xchg
fisubrl
xchg
clc
inc
sub
xor
mov
out
out
stos
test
sub
inc
xchg
sub
or
xor
out
incl
cltd
insl
jge
js
dec
call
into
mov
stos
sub
pop
sub
inc
cmp
repz
mov
mov
dec
pop
dec
lea
adc
mov
movsl
pop
daa
sub
stos
int
into
dec
cmp
scas
mov
mov
lods
test
mov
gs
popf
cmpsb
xchg
mov
out
shrl
add
and
xchg
sahf
or
mov
test
fs
outsl
xor
sbb
add
and
jle
cmpsb
cmpsl
es
ja
jge
dec
int3
sub
ficoml
addb
fcoms
lahf
repz
imul
sbb
ds
hlt
pushf
inc
icebp
fimull
shlb
push
fnsave
sub
and
cli
rclb
add
mov
and
in
inc
cmp
rcll
pop
push
inc
xlat
dec
xchg
push
mov
lret
jbe
pusha
push
pop
jmp
sahf
cmpsb
mov
cltd
pusha
ja
test
cmp
insb
jnp
cmp
or
jnp
sub
xor
je
cmp
push
pushf
add
add
clc
pop
fildl
rolb
loop
mov
stos
add
dec
lret
and
sarb
push
int
fisubrl
shlb
dec
xor
xchg
out
xor
ret
and
mov
jae
dec
jp
mov
adc
xchg
pushf
frstor
ret
aaa
pop
inc
icebp
loopne
fwait
shrb
test
add
pop
sbb
inc
outsl
rcr
mov
pop
insb
pushaw
aas
test
nop
out
xchg
or
pop
movsl
iret
push
imul
jecxz
loop
cltd
sub
ret
imul
fisttps
xchg
sbbb
cmpsl
jnp
in
lea
call
sub
cltd
cs
in
testl
mov
out
or
cmc
imul
cmp
inc
daa
jmp
dec
mov
jp
sbb
lahf
cltd
jp
adc
push
outsl
mov
mov
adc
iret
data16
iret
faddl
mov
out
fwait
mov
rcl
je
out
mov
adc
and
mov
fimuls
sub
xchg
adc
jno
ret
leave
scas
sbb
movaps
fildl
jae
mov
out
inc
popf
jg
in
sbb
xchg
ss
add
jmp
push
push
inc
jno
cwtl
jo
ds
inc
les
and
outsb
in
pusha
sbb
scas
xor
ss
jl
jle
and
ret
push
ljmp
or
in
xchg
setbe
jecxz
cmp
out
imul
xor
pusha
mov
inc
andl
mov
out
cmc
repz
out
sbb
add
imul
dec
adc
scas
xchg
mov
in
pusha
mov
xorl
and
test
jb
mov
shl
adc
int3
adc
sbb
fwait
mov
adc
sahf
addb
xor
pop
xchg
fcoml
xlat
and
repnz
sub
loope
jl
mov
cmc
adc
mull
out
in
or
sub
add
mov
roll
outsb
je
mov
sbb
xor
popa
xchg
push
imul
push
cmp
mov
cmpsl
mov
cmp
push
inc
aaa
aaa
dec
lods
test
sbb
cmpsl
inc
mov
xor
mov
mov
cmp
fimuls
cmp
mulb
jecxz
inc
cmp
sbbb
push
jl
mov
pushf
or
pop
pop
add
push
test
test
jp
lea
pusha
push
cmp
xchg
sbb
into
aam
add
xor
jmp
add
loop
enter
js
lea
shrl
adc
ljmp
fmuls
sub
stc
mov
inc
enter
and
mov
lods
stc
mov
pop
fwait
push
cmp
scas
inc
or
inc
or
insb
dec
add
xchg
iret
cld
inc
cmpsl
iret
mov
push
fistpl
andl
movsb
mov
cli
cmp
lret
adc
movsb
ja
jnp
fs
test
aam
int3
mov
sub
shl
pop
push
mov
mov
xchg
push
add
sub
adc
and
and
das
xor
push
push
xchg
das
roll
out
mov
cld
and
fs
pop
int
jbe
cmp
push
push
or
push
add
lret
movl
sub
outsl
xor
cmpsl
push
mov
push
mov
mov
rcr
cmpl
jge
dec
pop
mov
loop
dec
inc
dec
or
ret
mov
pop
pushf
movsl
fisubl
jecxz
fwait
popf
jmp
pushf
aad
arpl
in
outsl
inc
ljmp
cmpsl
call
mov
xchg
fdivl
pushf
xorl
xorl
mov
push
jne
fcomps
jmp
xor
sub
mov
sbb
adc
fcmovne
mov
fs
imul
movsl
jbe
cld
xchg
mov
cmpsl
jp
xlat
add
pushf
frstor
leave
stos
cmp
mov
cmovne
imul
in
in
outsl
addr16
adc
add
fidivs
iret
sub
mov
test
stos
daa
loop
lahf
add
push
scas
sti
jnp
mov
xor
push
mov
push
test
dec
ret
and
movsl
ja
lock
mov
cmpsl
cmc
sub
pusha
aad
push
test
test
jle
add
push
adc
scas
stc
ss
in
push
xor
lods
cmp
xchg
repnz
inc
shlb
loope
jne
and
scas
pushf
sahf
into
aaa
fs
aas
scas
hlt
les
push
daa
sub
insb
xor
xor
jg
cmp
and
jae
clc
pop
mulb
es
fisttpll
ljmp
push
add
pop
arpl
dec
pop
loopne
ret
les
scas
mov
inc
jns
mov
clc
mov
cwtl
inc
cs
cmp
repnz
popl
xchg
movsl
repz
andl
mov
lahf
rclb
xor
mov
sti
fistps
faddl
sbb
fiadds
xchg
mov
mov
cwtl
dec
jno
cltd
jno
shll
xor
pop
or
aad
loop
out
fldt
sbb
mov
jle
inc
mov
dec
and
push
rcrl
out
pop
add
xchg
inc
xchg
lret
mov
pop
divps
into
and
push
cmc
dec
add
xchg
movsb
add
pop
xor
orl
movups
pop
pop
sub
dec
or
subl
lods
in
or
xchg
xor
add
and
ljmp
sub
outsl
fadds
adc
jb
movb
daa
push
in
dec
out
repz
adc
xor
push
shr
jne
push
xor
loopne
ret
fwait
jecxz
stos
sub
les
test
pushf
cmp
jo
cmp
aad
cmp
add
mov
mov
pop
add
push
dec
dec
imul
jg
xlat
inc
mov
popf
fstpl
cmp
pusha
xchg
jns
repz
out
pop
mov
sub
arpl
pop
cmpb
mov
lret
leave
xor
push
sbb
jle
daa
arpl
or
loop
dec
xor
and
outsb
push
sahf
arpl
call
inc
jno
outsb
sbbl
idiv
sti
aas
ret
test
inc
dec
inc
xor
jb
adc
arpl
pop
clc
icebp
jo
push
push
lock
lea
sbb
xor
pop
mov
cmpsb
mov
rcrb
movsb
push
icebp
mov
mov
jb
int
sub
mov
mov
mov
cs
int
sbb
stos
xchg
inc
jl
xchg
mov
push
jae
shl
or
inc
jne
loopne
jne
bound
xchg
push
inc
lods
jp
sbb
mov
xchg
and
push
sub
jnp
mov
mov
or
stos
xor
sbb
icebp
adc
mov
mov
sahf
adc
adc
lods
ret
pop
inc
dec
imul
je
jp
out
int3
sti
mov
cwtl
fimuls
sbb
movl
xlat
or
jbe
sahf
cmp
movsl
add
out
add
imul
inc
xchg
mov
cmp
in
dec
adc
xlat
inc
adc
inc
loopne
sub
pushf
mov
cwtl
mov
popa
cli
divl
std
mov
fistps
repnz
sbb
adc
mov
or
push
stos
add
fmuls
in
mov
stos
addb
xor
push
cltd
cmp
push
adc
push
imul
push
jp
jns
pop
dec
mov
dec
nop
adc
mov
aad
cmp
jne
es
or
dec
push
inc
push
push
jnp
hlt
cmp
in
xor
xor
mov
push
lods
dec
and
pop
xchg
out
or
xor
mull
out
sbb
stos
mov
aas
pop
sbb
fsubs
push
lret
mov
jg
xor
or
push
lds
cltd
or
mov
xor
cltd
push
inc
xchg
xchg
mov
test
stos
sbb
inc
cmp
das
cld
lods
mov
jp
xor
movsl
inc
pop
xchg
and
xor
xchg
mov
mov
int3
jno
push
dec
je
cmp
jb
repz
sub
dec
pop
pmulhw
xor
xlat
pop
xchg
loop
lods
xchg
pop
pop
mull
iret
mov
ja
mov
fidivs
mov
inc
cmp
sbb
int
xor
cmpsb
imul
dec
mov
pop
call
pop
cmp
pop
pop
mov
test
fucomp
ja
mov
fs
pop
xor
inc
mov
scas
aam
nop
or
hlt
stos
cmpsb
xor
jbe
fisubs
popa
std
xor
pop
movsb
add
sub
or
inc
hlt
fs
mov
mov
sub
repz
dec
mov
inc
into
sub
sub
mov
pop
lock
mov
mul
push
push
and
and
dec
aaa
mov
xchg
adcb
add
fdivrs
dec
adcl
and
fisubl
outsb
js
test
mov
jno
je
cltd
loop
leave
sbb
xor
test
sarb
sbb
fdivl
je
cmp
push
xor
out
fwait
xchg
addb
fcomps
mov
jge
leave
inc
clc
bound
cmp
leave
scas
adc
add
sbb
xor
out
inc
icebp
repnz
in
mov
mov
mov
hlt
mov
lcall
faddl
mov
dec
mov
sbb
lret
test
mov
lds
push
sub
imulb
mov
lods
mov
mov
inc
in
rcrl
hlt
test
sub
mov
dec
jb
ficoml
cmp
add
sub
pop
and
dec
iret
push
sbb
pop
ret
gs
cli
gs
out
xlat
imul
cltd
dec
mov
and
shrl
stc
mov
cld
jnp
movsl
mov
lods
mov
add
xchg
xchg
test
out
cld
fisubrl
xchg
sbb
push
cwtl
sub
ja
mov
aad
sub
stos
mov
out
cmc
adc
enter
dec
faddp
fsubr
sbb
jno
movsl
push
cmpsl
mov
mov
push
sub
ljmp
and
or
mov
int
cmp
lods
fcoml
push
mov
xchg
fmull
inc
fsubrp
pusha
cmc
dec
cmp
roll
iret
mov
jecxz
sbbl
or
call
nop
fs
cld
ja
stos
pop
outsl
inc
sbb
and
ds
cmp
outsb
out
iret
prefetcht2
mov
cmp
mov
loope
push
std
dec
xor
decb
fimuls
sub
add
sbb
sbb
jp
adcl
xlat
es
enter
aas
data16
fwait
sub
out
jo
pop
js
ret
sbb
fidivrl
outsb
push
inc
mov
into
out
mov
xchg
mov
jmp
cmpsl
push
subb
lret
stc
push
dec
jne
mov
insl
jae
jle
sti
cmc
dec
jne
and
in
jb
cld
mov
std
or
xchg
or
push
inc
das
clc
pop
inc
repz
scas
movsb
jno
sbb
mov
clc
test
jno
popf
ds
jns
inc
add
cmpsl
push
subb
inc
test
out
sub
mov
jo
mov
loop
stos
xchg
mov
mov
sub
call
mov
addl
push
jbe
mov
inc
mov
js
fidivl
mov
and
jno
xchg
jns
xor
rorb
test
cmp
mov
dec
cmp
in
cmp
int
test
insl
mov
xchg
movsl
in
adc
aad
cmp
arpl
dec
mov
test
and
inc
shll
imul
and
js
stos
adc
jnp
addr16
in
jp
mov
je
stc
in
inc
sbbb
dec
add
dec
or
lods
inc
jb
mov
mov
cmp
mov
outsl
push
stc
scas
adc
inc
jmp
cmp
lret
mov
push
inc
in
test
data16
add
outsl
call
stos
adcb
js
rorl
in
in
mov
sub
scas
xor
push
aas
test
jns
fistl
testl
dec
cmp
mov
jl
adc
push
cmpsl
ret
inc
ret
cltd
arpl
arpl
test
xchg
xor
jbe
mov
sub
sbb
pop
dec
mov
aas
xchg
fmul
mov
mov
repz
dec
lods
mov
push
repnz
stc
sbb
int
in
xor
lahf
mov
cwtl
in
and
xlat
cmc
test
mov
stc
mov
mov
dec
gs
mov
or
cltd
imul
dec
and
aad
insl
push
or
in
std
add
orl
xor
jge
mov
cmp
scas
sub
movsb
cltd
pop
js
pop
jne
xor
dec
jmp
fnstenv
sbb
pusha
dec
xlat
fisttps
cmc
iret
ds
mov
sbb
jecxz
in
cmpsb
pop
ret
or
outsb
or
leave
hlt
fldl
test
add
ret
pop
ret
pop
bound
sub
test
pop
lods
pop
in
push
xlat
cmc
add
popa
data16
cs
inc
bound
cmp
loope
rorb
sub
jnp
sbb
data16
js
jle
xchg
push
ja
stos
cmp
jo
mov
cld
repz
pop
push
dec
and
lret
inc
loope
cmpsb
loopne
mov
stos
push
sarl
mov
hlt
arpl
sbb
inc
sbb
or
inc
xchg
fdivrs
rorl
dec
fcomps
inc
xor
mov
jge
pop
mov
lock
js
lock
add
insb
mov
push
or
adcb
or
imul
adcb
jl
fldl
daa
movsl
jne
js
adc
inc
sahf
jmp
or
loope
xchg
jne
push
add
sbbb
jmp
mov
leave
mov
ljmp
adc
cwtl
or
push
int
aas
fidivrl
pop
pop
ljmp
test
mov
daa
pop
cli
mov
xor
jo
fidivrl
test
mov
xor
rol
out
push
jns
mov
or
push
addb
adc
dec
push
pop
pop
or
int
push
subl
idivl
rcrl
stos
push
jmp
imul
rcrl
enter
in
pop
jge
adc
pop
mov
xchg
clc
pop
cmp
and
xorb
in
iret
or
add
adc
into
pop
shl
inc
mov
xchg
imul
loop
and
aaa
push
inc
mov
dec
popf
jl
mov
mov
push
sub
in
aaa
jmp
pop
mov
out
je
fisttpll
lock
int3
mov
xchg
dec
push
sub
push
xchg
xchg
cmp
stos
dec
out
jg
xor
xchg
sahf
mov
mov
imul
push
shr
sub
sub
push
int
or
fwait
pop
das
or
adc
sahf
mov
andl
inc
jne
cmp
pushf
adc
dec
mov
dec
movl
xchg
or
or
nop
shrl
xor
inc
aam
jl
sbb
jecxz
rcll
enter
cmpb
push
fnstenv
imul
in
mov
addr16
mov
stc
rclb
ja
xchg
aam
mov
int
loopne
pop
mov
inc
pop
mov
mov
rorl
imul
les
cld
lea
cmp
cltd
mov
pop
aad
mov
jo
cli
mov
sti
loope
cld
lds
data16
filds
in
push
add
or
mov
inc
add
mov
cs
cmpl
scas
mov
int
dec
jmp
mov
pop
push
mov
call
inc
mov
jl
cmpsb
and
iret
adc
cmp
clc
sub
adc
cmp
cmc
xor
es
dec
stos
stos
ja
cmpsl
ds
arpl
jmp
mov
and
jg
rcr
sti
cltd
mov
mov
cld
pop
adc
cld
loop
push
cs
mov
in
testl
mov
inc
dec
es
jge
inc
ror
idivb
bound
pop
in
push
jg
cmc
adc
in
jne
in
ret
in
rcrb
jae
push
pop
dec
icebp
loop
lods
jg
mov
ja
jle
push
shll
ja
dec
xor
nop
lds
rcrb
mov
cmc
shr
cmp
push
popa
call
fadds
pop
mov
jle
in
stc
sbb
dec
repnz
mov
movsl
push
or
mov
aaa
cmp
prefetcht2
and
test
fwait
movsb
push
aas
fildll
and
push
or
inc
push
jae
push
mull
cmp
xchg
inc
les
inc
add
push
pop
ljmp
lock
add
push
daa
js
fs
icebp
xor
xchg
pop
mov
inc
call
negb
icebp
in
xchg
pop
lods
lods
push
push
mov
je
jne
mov
insb
lods
cmpsb
repz
sbb
fidivs
cltd
hlt
or
adc
and
lods
clc
repz
mov
pop
arpl
dec
jns
sbb
mov
inc
adc
lahf
mov
addl
xor
imul
push
into
sub
dec
mov
imul
mov
or
cmp
lods
sbb
lock
mov
idivl
outsb
dec
inc
cmpb
jne
and
lods
add
test
jns
dec
mov
sub
push
push
or
lock
imul
mov
xor
stc
cmp
bound
fisubrs
add
and
jnp
jl
sub
sub
out
xor
xchg
lods
clc
popa
leave
cmp
pop
mov
imul
dec
fimull
sub
into
mov
xchg
repz
mov
jbe
andl
sbb
iret
push
cmp
cmc
in
repz
sbb
mov
fnsave
lcall
adc
fldcw
lods
sarl
or
xchg
add
test
loop
pop
sbb
leave
outsb
fsubl
add
cmpsb
decb
mov
fstpl
jle
fsubrl
pop
fwait
repz
push
mov
je
lds
lds
pop
rcr
fs
mov
fcomps
cwtl
push
lock
sub
fucomi
pusha
mov
repz
inc
xchg
add
scas
xchg
bound
stos
jp
loopne
or
cs
mov
shll
sahf
cmp
lock
roll
pop
pop
xchg
jne
inc
aam
pop
sbb
add
add
fdivrl
sbb
mov
cmpsb
loopne
sbb
ss
ja
out
mov
outsb
mov
pop
fstpl
adc
xchg
sbb
push
adc
inc
mov
aad
sbb
subl
ss
loopne
pusha
sub
cmp
fisubrs
push
dec
imul
push
dec
sbb
mov
loope
or
cltd
xchg
orb
je
mov
bound
and
inc
test
xchg
adc
adc
daa
aam
out
jecxz
mov
rcr
stos
mov
jno
scas
in
inc
mov
call
in
lret
test
insl
ja
insb
xchg
cmp
jo
pop
test
neg
pop
jmp
cmp
mov
mov
scas
xchg
aaa
dec
test
push
pop
arpl
scas
mov
fidivrl
mov
call
sub
push
mov
and
fdivrl
aad
pop
les
xchg
movsb
lea
push
scas
push
movsb
sub
cmp
xchg
mov
lahf
imul
mov
sub
fwait
test
sub
fldenv
jge
adc
inc
or
xchg
rcll
cmp
dec
fnstcw
iret
cmpsl
test
dec
out
jge
and
push
out
cmp
push
push
es
cmp
stos
and
test
es
jp
adc
inc
xor
pushf
loop
add
leave
je
je
jae
loopne
test
sbbl
mov
mov
iret
sub
cmp
clc
inc
hlt
ss
mov
push
cmp
daa
ljmp
scas
test
je
es
aaa
xor
mov
sub
xchg
xchg
lock
ljmp
pop
cmpl
lds
sub
rorl
cmpsl
push
bound
nop
cmpsb
mov
xchg
xor
add
sub
or
adc
fwait
and
enter
mov
in
pop
xor
stos
lret
fcomip
das
xor
outsl
pop
add
sub
popa
mov
scas
cmp
outsb
mov
mov
insb
in
jmp
inc
or
xor
sub
movsl
idivb
push
shrl
mov
rol
loopne
decl
test
xchg
pop
test
xchg
decl
cld
jae
add
push
mov
xchg
dec
sbb
movsl
lea
sub
adc
cmovae
mov
mov
jmp
xchg
gs
lods
loop
pop
sub
in
aaa
idivb
sbb
push
push
ds
mov
je
ficoml
mov
shll
dec
out
fsubl
mov
mov
orb
lock
push
push
xchg
xor
inc
mov
ss
incl
shll
repnz
aad
fidivrs
or
fidivrl
mov
add
mov
into
ljmp
dec
cmp
jmp
mov
mov
and
xor
fucomp
sbb
mov
loopne
inc
iret
lret
clc
or
sub
repnz
cmp
loop
lods
in
pop
dec
pop
stc
inc
sbb
xchg
xor
sbb
fwait
mov
mov
xchg
pop
aad
xchg
dec
shr
sub
sbb
sbb
adc
mov
adc
mov
cwtl
xchg
inc
inc
mov
xchg
stos
sub
pop
ss
push
outsl
mov
test
mov
or
pusha
in
js
mov
dec
pop
in
push
mov
andb
jne
fnsave
rcll
lahf
jmp
aad
sub
pop
jge
lock
ret
aas
aaa
mov
adc
cld
sti
movsl
mov
in
dec
cli
stc
sti
imul
push
flds
adc
aas
push
es
sbb
mov
mov
cmp
sahf
sub
lret
fmull
inc
mov
inc
idivl
dec
loopne
stos
pop
outsb
cmp
les
adc
xor
mov
dec
sub
je
sbbl
cmp
xchg
jo
shrd
or
jle
push
pusha
push
fs
imul
loop
psrlq
sahf
lret
fwait
sub
xchg
lods
adc
aad
xchg
outsb
lods
in
cwtl
pushf
test
sti
xor
cmpsl
aad
adc
inc
add
and
int3
dec
pop
xchg
cmp
inc
rorb
mov
xor
data16
stos
shrb
paddb
cmpsb
cmp
ja
sarl
hlt
popl
or
push
jne
sbb
andb
pop
fildl
sarb
add
les
or
test
fstpl
daa
mov
mov
jno
addr16
add
jo
sbb
cs
xor
xchg
mov
lods
push
mov
dec
pushf
cmp
jne
fsubrl
dec
je
fucomp
xchg
inc
shlb
xchg
xlat
test
scas
mov
sub
icebp
xchg
imul
pop
mov
sbb
iret
cld
push
popf
jae
add
nop
cmp
sbb
jno
sbb
orb
adc
add
jp
test
aam
sub
cmpsl
decl
insl
les
adc
je,pn
push
mov
cmp
icebp
push
sbb
jg
movsl
lret
or
lret
push
sbb
jp
test
mov
ljmp
xchg
icebp
in
lods
mov
fmull
rcrb
icebp
test
subb
loope
mov
jge
pop
mov
insb
sbb
dec
test
lcall
sarb
in
icebp
roll
jmp
cli
movl
and
pop
mov
cmp
loope
repz
iret
in
int3
fdivs
add
das
or
mov
and
jbe
and
dec
adc
dec
sub
repnz
int
mov
adcl
mov
cmp
add
adc
push
int
test
mov
int3
pop
adc
push
mov
sbb
xchg
sbb
sahf
jge
jecxz
out
or
dec
ror
or
jno
sub
or
popa
push
pop
xchg
test
mov
inc
inc
loope
mov
xchg
sub
insb
inc
dec
lock
inc
jmp
inc
cs
lea
insb
sbb
stc
icebp
pusha
pop
pop
push
clc
ret
subl
mov
push
cs
add
imul
sbb
enter
push
mov
cltd
fiaddl
inc
jl
call
pop
sub
mov
cwtl
xorl
or
fstpt
leave
insb
loope
mov
nop
outsl
adc
jne
ds
fdiv
gs
pop
jbe
add
test
jp
or
push
add
dec
push
dec
dec
sub
mov
cmpsb
cmc
sbbl
je
cltd
out
dec
shll
es
mov
jno
repz
in
jmp
test
movsl
ret
out
and
xor
jnp
and
jecxz
out
dec
call
lret
cwtl
lret
std
cltd
fnsave
xor
out
push
into
jg
or
sub
or
subb
jp
scas
dec
push
sbb
int
loope
out
pop
loope
pushf
inc
insl
mov
mov
push
mov
push
mov
mov
imul
in
inc
jno
icebp
ds
xchg
int
sub
adc
push
sbb
pop
and
xchg
mov
cmp
ds
jl
addr16
fcoml
bound
notb
dec
loop
fs
push
filds
arpl
rcrb
pop
ljmp
in
dec
cmp
aas
rorb
xor
in
pop
and
inc
out
or
xor
pop
test
mov
clc
cmp
hlt
lea
mov
mov
push
pusha
add
adc
or
and
aam
xorb
inc
push
shl
outsb
out
pop
push
pop
pop
sbb
fs
je
push
lock
cmp
test
rcl
test
mov
subb
rorb
sub
xor
or
out
cmp
insl
in
jecxz
mov
fnstenv
cmp
xchg
fcmovne
out
fcomps
cmp
cmp
jae
dec
clc
fnsave
adc
inc
inc
or
adc
pop
mov
or
cmc
xchg
and
leave
in
mov
cmp
adc
or
fidivrl
fdivs
out
int
clc
repz
aad
ficoml
fs
or
mov
ret
mov
push
jl
push
and
dec
es
push
inc
mov
sbb
push
pop
add
popf
add
cmpsb
pop
into
push
mov
or
lods
test
mov
popf
dec
cmp
jno
stc
test
imul
ficoms
pusha
adc
and
scas
inc
mov
push
mov
jecxz
and
xchg
add
in
mov
call
les
push
cmp
adc
adc
aad
cli
mov
pop
jns
sbb
vpandn
cmp
cs
insl
je
jno
pop
mov
sbb
mov
add
fdivl
je
cmpb
jae
mov
mov
dec
push
outsb
inc
subb
adc
outsb
xchg
subl
cld
jb
mov
add
mov
je
or
mov
cwtl
push
mov
jmp
stos
ret
xchg
add
aaa
cwtl
add
je
mov
sub
test
pop
subl
dec
inc
dec
sub
lods
or
add
std
gs
pop
push
scas
mov
addr16
aas
cmc
and
test
test
jb
in
subl
lahf
add
clc
sbb
test
mov
xor
cltd
leave
pop
jbe
push
test
js
sub
popl
cmp
add
std
js
xchg
add
int
loopne
push
pop
inc
jle
aaa
adc
pop
je
mov
or
push
sahf
mov
ljmp
call
mov
ss
pop
pop
in
adc
pop
rcrb
out
xor
dec
ror
xor
xchg
inc
shrl
in
dec
popf
gs
ret
in
inc
ja
xchg
mov
pop
mov
fadds
cmp
in
lcall
aaa
xor
or
lahf
xchg
leave
aad
lret
aam
ret
ss
push
inc
inc
dec
jno
insb
in
pop
jae
xor
or
mov
in
dec
or
sub
cmp
jns
les
push
pop
sahf
mov
mov
loop
shll
aaa
pop
mov
loope
imul
sbb
aas
aad
in
lock
or
fwait
repz
and
mov
scas
sub
or
adc
xor
frstor
rcll
repz
insl
dec
xor
xchg
int
pop
push
test
lds
testb
inc
or
jmp
adc
adc
pop
test
shrb
sub
outsb
jns
cmpsb
in
repz
mov
mov
push
mov
or
fisubl
fists
std
cmpsb
subb
push
clc
lret
xchg
mov
roll
mov
xchg
sbb
mov
jo
inc
mov
lcall
ret
shl
cmc
xchg
cmc
test
mov
pusha
pop
mov
and
mov
gs
sar
pop
xchg
stos
mov
lock
jg
sbb
fisttpll
jg
adc
add
dec
xor
xor
cli
mov
loope
jb
add
ret
xchg
inc
dec
mov
xchg
fiadds
movb
lods
ja
push
push
loop
add
stos
repz
push
pop
xchg
test
xchg
aas
ds
fbld
inc
xchg
mov
cmc
insl
mov
push
mov
and
psrad
mov
rol
add
das
cmc
leave
imul
iret
or
stos
and
cmp
or
and
fildl
loopne
xorl
insl
xchg
fwait
inc
mov
xchg
xor
add
cmpsl
add
psubw
fbstp
test
pop
dec
jg
jmp
int3
cwtl
dec
lahf
sub
jns
rorb
stc
jae
xor
mov
popf
and
fucom
fldl
sub
add
inc
xchg
cmp
dec
xlat
jmp
lock
pop
mov
lea
ljmp
pop
mov
mov
sub
or
xchg
fstps
xor
test
cmpsl
xchg
xor
imul
ja
imul
add
data16
mov
fdivl
mov
roll
dec
loope
jge
push
outsb
in
je
mov
insb
cmp
fs
or
nop
add
mov
jbe
inc
test
mov
fwait
cmc
sahf
dec
int
xchg
idivb
sub
sbb
xor
jmp
push
sbb
addb
shlb
push
add
loope
std
mov
inc
hlt
enter
mov
loopne
inc
jmp
mov
insb
loop
insl
les
mov
sti
push
pop
stos
pop
push
in
subl
jecxz
mov
cmc
rcr
mov
mov
aam
cmp
pop
repnz
xchg
lods
pop
xor
mov
fcomp
xlat
test
lret
les
es
mov
fists
lods
lods
add
push
lea
faddl
pop
rorl
cli
cmpsl
push
jge
and
and
mov
cmovs
fsqrt
inc
cmp
cmp
clc
dec
int3
dec
fwait
mov
rclb
lahf
test
out
lahf
add
dec
sub
nop
movsb
mov
lret
std
stc
sbb
cmp
xchg
mov
xchg
shll
fistps
mov
dec
pop
repz
pop
mov
xchg
push
push
or
dec
mov
sbb
adc
call
fisubl
cltd
les
cmp
out
push
dec
testl
jns
shl
imul
test
inc
repnz
insb
mov
add
lret
sub
call
icebp
hlt
fiadds
xor
mov
lds
fldl
push
divl
sub
add
lock
bound
iret
test
fldenv
iret
push
adc
sbbl
sbb
dec
imulb
or
mov
inc
lods
fsub
and
test
jge
cmpsb
add
pop
push
shll
rcll
data16
bound
ret
xor
lds
lods
xor
stc
cli
cmp
and
fistpll
sub
cmp
js
outsl
push
orb
mov
push
iret
stc
das
fcmovb
iret
cwtl
inc
xor
lods
sub
pushf
adc
dec
sahf
dec
lea
xchg
or
pop
outsl
mov
push
push
int3
push
js
cli
inc
push
test
leave
out
bound
fwait
dec
inc
fstl
les
nop
mov
lcall
testl
jmp
cltd
sahf
enter
xchg
int
in
mov
xor
rolb
leave
or
sar
cmp
adc
pop
loope
fwait
loop
mov
in
push
in
lds
fldenv
fstpt
ss
pop
out
test
cmp
imul
enter
aaa
and
pop
fwait
mov
les
dec
xchg
fs
hlt
pusha
cltd
dec
pop
pop
xchg
test
or
leave
icebp
push
sbb
add
mov
mov
push
sti
cmc
inc
cmp
xchg
dec
xchg
mov
out
repz
mov
cld
adc
bound
stos
push
push
pop
addr16
lods
cmp
push
popf
andl
ret
push
outsl
leave
dec
and
dec
mov
outsb
jg
sbb
jle
ja
adc
leave
sub
shr
add
mov
outsl
mov
test
ss
dec
scas
xchg
cmp
pop
xchg
test
adc
cld
or
inc
adc
mov
fists
leave
cs
xor
sub
int
aam
cmpsb
mov
nop
sbb
sub
gs
imul
test
fcoms
movsb
pop
pop
enter
call
mov
cwtl
mov
push
push
xor
neg
mov
dec
ljmp
inc
fstpt
add
xlat
xacquire
pushf
dec
mov
jecxz
sub
gs
and
and
inc
div
sbb
jo
push
dec
inc
fnstenv
mov
in
test
sbb
pop
pop
sub
dec
adc
ss
invd
sub
xchg
jo
mov
int3
jne
test
fwait
sbb
ror
and
imul
and
pop
and
lret
and
cmp
sbb
mov
fistps
outsl
inc
frstor
imul
mov
mov
or
movsl
add
mov
mov
mov
cmp
xor
and
cwtl
lret
mov
cmp
repz
das
fs
mov
mov
or
lret
aaa
loopne
aaa
cli
inc
mov
imul
decb
test
push
or
xor
inc
es
xchg
cmp
fdivl
out
sar
pop
ret
mov
push
stos
aam
cld
data16
cmp
out
or
push
int3
mov
push
rol
xor
fst
pop
cli
jg
js
pushf
sbb
dec
lret
into
adc
loop
scas
add
les
pushf
and
loopne
ret
jb
or
adc
out
cmp
or
push
jns
fisubrl
stos
cld
pop
jns
insb
inc
ss
jne
aas
inc
lret
cli
mov
xchg
push
or
shlb
inc
imul
push
test
mov
jne
cltd
movsl
push
mov
shrb
lea
gs
and
jmp
jl
fcmovnu
loop
or
ret
insl
aam
pushf
add
aam
mov
aad
and
movsl
mov
fmul
loop
jg
popf
mov
shlb
mov
dec
addr16
or
and
insb
in
jmp
js
aaa
mov
jecxz
sbb
popa
sub
push
lds
or
add
test
mov
sbb
mov
push
testl
or
clc
xchg
mov
mov
pop
add
sub
out
or
xchg
das
movsb
jge
arpl
out
mov
mov
jl
insb
into
jg
nop
cs
cmpsl
xor
leave
lds
loopne
dec
jle
ljmp
repnz
mov
and
adc
pop
mov
and
dec
out
test
jne
aam
aaa
jno
neg
jb
mov
jl
js
imul
adc
in
push
shll
in
loop
fstpl
andb
pop
jl
fcmovu
aad
mov
xor
adc
aas
mov
dec
repz
shll
cmc
dec
mov
sub
ja
outsb
test
xchg
mov
or
mov
mov
insb
dec
add
mov
dec
pop
clc
xchg
jae
jno
out
and
ficoms
adc
or
incb
push
adc
dec
stos
rclb
pop
rclb
adc
fcoml
test
sub
and
xor
push
out
imul
xorl
xchg
orb
push
test
xchg
sahf
lea
sbb
sub
int
jae
cmp
jg
and
xor
insb
lds
pop
pusha
or
push
sub
je
repz
jge
pop
push
lret
int
fistps
in
add
jo
popa
popf
enter
inc
out
lcall
inc
sar
daa
shlb
paddw
sub
loopne
loopne
std
and
les
pusha
or
jo
xchg
adc
aad
mov
sub
sub
stos
mov
add
jns
movsb
or
lock
push
pop
and
push
cli
adcb
movsb
cmpsl
loopne
ss
fistl
sub
xchg
stos
js
xor
sub
sub
cmp
jb
lret
es
inc
jns
xor
pop
ds
inc
movb
rcr
sub
insb
sub
xchg
pop
adc
mov
out
popa
enter
mov
push
outsl
or
jb
xor
jle
cmp
dec
push
inc
lods
xor
fs
test
outsl
and
sti
arpl
daa
mov
cmpsl
jo
int3
lea
adc
or
ret
es
ljmp
jg
pop
inc
mov
cli
aam
xor
cmpsb
xchg
mov
repz
in
sbb
fwait
mov
mov
mov
jecxz
cmp
xor
pop
ja
lahf
sbb
loope
xlat
pop
or
jnp
rcll
loop
xchg
add
call
sub
sbb
loopne
scas
jmp
movsb
jbe
imul
repnz
push
xchg
sub
add
inc
mov
pop
call
mov
sub
push
dec
dec
into
das
data16
movsb
add
bound
into
test
push
insl
lea
dec
nop
xlat
int3
pop
lods
push
mov
dec
lahf
lock
jns
mov
gs
sbb
clc
ret
inc
pop
and
imul
hlt
sub
lret
and
adc
cld
pushf
dec
lods
push
sti
adc
xor
mov
clc
cmp
add
mov
pop
xorl
test
lods
sub
add
cmp
push
sbb
jmp
outsb
mov
insl
lds
xor
js
cmpsl
pop
push
mov
xchg
xchg
shlb
push
int
sub
fstl
imul
filds
std
outsl
mov
xchg
mov
leave
sbb
pop
dec
mov
stc
push
add
and
fwait
cmp
mov
mov
inc
or
adc
xchg
cmpsb
dec
stos
aad
jle
xchg
xchg
iret
arpl
outsb
mov
mov
add
or
push
cwtl
sub
jle
cli
push
jecxz
enter
or
sahf
pop
xchg
sahf
leave
xchg
push
loope
aam
cli
imul
jns
ror
mov
mov
jo
jge
dec
filds
daa
xchg
mov
push
lret
xor
in
dec
fsubrs
mov
push
pop
mov
xorb
sbb
scas
test
mov
dec
hlt
mov
mov
outsb
sub
lods
popf
sbb
rcr
icebp
mov
jno
enter
sbb
stos
scas
fstps
and
cwtl
popf
xchg
leave
fcomps
add
and
adc
pop
rolb
xchg
jmp
pop
rcr
add
push
cltd
inc
push
in
imul
iret
rorl
sbbb
inc
lea
mov
pop
xlat
stos
xor
push
mov
add
or
loopne
jg
jp
adc
mov
pop
push
or
sahf
imulb
inc
dec
rcrl
lea
cld
das
daa
imul
outsl
es
in
xchg
jmp
dec
dec
lods
push
into
and
dec
idivl
pop
cmpsl
js
cmp
jae
rol
or
and
lods
pop
nop
jb
mov
in
jg
cmp
mov
lods
mov
xchg
shll
xor
pop
enter
clc
adc
popa
push
pusha
mov
popa
push
cmpsb
inc
and
push
inc
add
rcrb
loopne
sub
stc
jecxz
or
push
jecxz
fwait
and
out
scas
and
iret
testb
out
test
cmc
pop
ds
dec
repz
jecxz
je
xchg
mov
add
pop
xlat
mov
sarb
or
adc
push
or
xchg
mov
dec
adc
scas
divb
std
cld
sti
mov
outsb
sub
insb
sahf
push
cltd
insb
fcomps
mov
xchg
mov
xchg
sbb
fnstsw
jbe
cli
int
push
cmp
outsl
stos
ret
sbb
jb
enter
fistps
inc
jno
push
icebp
adc
addb
cli
inc
lods
mov
mov
leave
stos
inc
mov
inc
push
arpl
push
mov
mov
fstpl
scas
mov
sti
and
enter
movsb
sbb
cmc
dec
mov
adc
faddl
sti
subl
or
popa
add
data16
pop
fnstsw
aad
cmp
xchg
fs
and
jg
lods
jno
inc
call
pop
loop
std
mov
pop
testl
xor
and
xchg
mov
daa
cmp
jge
decb
daa
mov
adc
loopne
roll
add
pop
sbb
sub
sbb
int
sbb
mov
in
mov
or
mov
or
popa
jbe
push
jp
imul
sbb
mov
mov
lods
mov
jl,pt
aaa
mov
jge
aaa
pop
addr16
jge
inc
divl
in
mov
arpl
mov
stc
pop
or
out
dec
pop
push
mov
fcoml
aad
enter
sbb
mov
out
insb
lds
pop
pop
addr16
rol
std
add
push
js
mov
inc
xchg
add
push
or
mov
out
andl
movsl
inc
pop
mov
int3
cmc
mov
sub
push
ror
xchg
hlt
sbb
inc
shlb
jb
in
adc
in
call
icebp
sbb
lods
cmp
test
mov
mov
fs
xchg
dec
jns
fsubrl
add
inc
jmp
push
xor
outsl
hlt
jns
xor
fcompl
mov
dec
jo
jmp
xchg
pop
cmpb
xchg
mov
es
sbb
leave
sub
push
push
stos
ja
ja
pop
stos
sub
inc
xchg
jae
test
enter
ljmp
pop
insb
pop
sbb
jns
jns
and
loope
jmp
adc
adc
cmpsb
dec
dec
cmp
cmpsb
sbb
jp
ljmp
bound
cltd
sub
hlt
scas
xchg
sub
pop
cmpsl
inc
push
arpl
loop
jg
push
adc
add
dec
or
mov
push
stc
fists
stos
int
rorb
mov
add
push
pop
mov
jp
pusha
sub
push
adc
cld
enter
test
jne
jp
or
incb
test
sahf
xchg
push
enter
aad
stc
loop
arpl
dec
mov
sub
dec
std
or
jp
jno
pop
cltd
lahf
mov
mov
add
push
mov
or
mov
fldenv
push
xchg
cmp
testl
dec
mov
fwait
add
mov
inc
xchg
jp
pop
push
dec
in
das
jb
and
js
push
dec
cmc
jle
loopne
add
pop
outsb
dec
mov
sar
test
adc
fwait
lds
lods
and
scas
mov
push
aas
jl
test
mov
insb
ret
or
push
pop
lock
sbb
loope
adc
and
mov
pop
addr16
ret
push
dec
cmc
xor
je
push
dec
fbld
icebp
push
mov
sbb
cmp
xchg
push
ljmp
adc
enter
ljmp
icebp
push
out
ja
ret
iret
inc
fmull
je
push
in
sbb
scas
dec
mov
jno
orps
fidivrl
test
dec
aaa
into
cmp
sub
lods
jae
das
data16
lds
pusha
jge
enter
insb
pop
aaa
icebp
incl
iret
scas
fxtract
dec
sti
clc
mov
int
das
cmpsb
aam
push
repz
xlat
dec
bound
lds
lods
cmpsw
cltd
or
out
ds
rcll
sub
mov
xchg
jo
loopne
les
out
or
add
mov
fwait
jo
mov
andl
clc
mov
xchg
movlps
cmp
xchg
or
out
int3
add
mov
cwtl
and
out
inc
and
shlb
insb
jp
stos
pop
int
inc
and
jbe
scas
xchg
mov
fstpl
adc
gs
fcomps
shll
test
outsb
in
lods
or
xlat
movsb
mov
aad
or
dec
mov
or
mov
add
dec
fsubrs
jle
inc
ret
insl
popf
mov
add
sub
aas
shl
dec
fs
xchg
in
lret
inc
fnstcw
das
test
add
cld
pop
das
cmc
insb
test
shlb
cld
jmp
ds
dec
jns
inc
push
lods
jge
jb
out
dec
or
imul
mov
inc
push
fsubp
push
push
lret
jo
nop
je
daa
outsb
movsl
arpl
mov
stos
mov
xlat
jmp
hlt
ds
and
inc
mov
mov
sbb
mov
pop
je
push
push
xchg
pop
lahf
mov
adc
out
pop
jmp
push
add
xorl
jb
add
cmp
in
clc
imul
in
or
mov
ret
cmp
ss
aad
mov
sbb
push
mov
adc
imul
pushf
adc
mov
es
aam
adc
xor
loopne
mov
repz
push
inc
shr
cmc
sahf
mov
les
jecxz
mov
cmp
clc
ficoms
shlb
popf
cwtl
mov
cmpsb
jp
sti
lahf
movsl
xchg
add
dec
mov
pusha
pusha
dec
and
pop
insl
test
fwait
mov
cmc
xor
or
jecxz
and
cld
sbbl
jne
add
incb
insb
xchg
lds
mov
sbb
jge
jge
pop
pop
notl
mov
ja
push
adc
pop
in
dec
scas
orl
lods
sahf
mov
sbb
idivb
addb
mov
cli
jno
pop
mov
sub
lods
cmp
dec
rcrb
mov
push
stos
fmul
sub
in
mov
cli
adc
push
xor
xchg
pop
rorl
cwtl
dec
xchg
aaa
cs
push
push
cmp
cmp
push
movsb
xor
and
enter
test
movsb
mov
mov
arpl
add
dec
cmp
add
clc
adc
inc
adc
jmp
jb
stos
mov
scas
movsb
jne
fimull
jecxz
fimuls
xor
cmpsb
sbb
aaa
mov
and
dec
and
stos
dec
shlb
and
jno
cmp
xchg
movl
mov
jg
mov
cmp
and
rcll
mov
add
push
mov
test
hlt
xor
push
xchg
inc
sbb
pop
pop
les
adc
cld
sbbl
fneni(8087
stc
cwtl
and
shl
mov
data16
and
cwtl
idiv
std
frstor
sbb
pop
arpl
leave
pop
mov
mul
jge
out
push
xchg
inc
pop
sub
ja
dec
sub
jo
outsb
push
xor
and
imul
lea
out
cmp
and
loope
leave
test
out
insl
in
push
adc
dec
push
scas
mov
push
sub
aad
cmp
in
push
sbb
in
sbb
ret
push
std
cmpsl
in
pusha
sub
scas
jno
jp
jbe
pop
or
pop
loopne
inc
fisttpl
xor
jo
and
repz
rcrb
ficomps
out
and
and
jmp
jns
inc
insb
in
jecxz
stos
popa
icebp
in
shlb
push
aaa
iret
jnp
mov
loopne
clc
xor
fiaddl
subb
ror
cmpsl
or
xor
add
mov
fidivrl
ficomps
scas
mov
roll
nop
pusha
imul
push
pop
clc
lock
jne
lea
cmp
sub
idiv
sti
sti
cmp
stos
outsl
aas
mov
dec
movsl
adc
iret
adc
call
int3
pop
outsl
pushf
outsb
sbb
add
ss
scas
adc
inc
cmp
shrb
and
and
out
jne
and
add
add
data16
or
int
cld
outsb
xor
pop
add
data16
std
xchg
push
xchg
xor
in
cli
dec
aas
mov
xor
push
pop
mov
inc
push
cmpsb
rorb
mov
xor
sbb
and
pusha
stos
int
inc
out
js
cmp
cltd
test
cmp
jg
mov
push
lock
adc
int3
sbb
fmul
sbb
movsl
add
loopne
xchg
jp
fsubs
push
and
inc
sub
icebp
push
jge
xor
mov
sarl
addr16
in
inc
orb
arpl
fcmovbe
leave
lods
repz
ret
lods
cli
inc
ja
lret
mov
dec
stc
outsb
es
in
movd
xchg
scas
loop
or
aaa
aas
mov
sub
xor
js
iret
dec
out
cmp
jmp
xor
lods
lret
push
push
movb
inc
dec
xor
fstpl
fsubrl
push
cmp
xchg
or
xor
xor
imul
push
pop
lods
mov
icebp
cs
push
call
ss
lds
adc
add
mov
pop
outsb
cmp
add
adcb
stc
repnz
mov
inc
icebp
dec
inc
push
jecxz
es
hlt
mov
dec
test
lods
inc
xor
push
test
adc
sbb
cwtl
scas
mov
loopne
sti
jmp
adc
cwtl
daa
add
cwtl
sub
jb
add
dec
clc
sar
leave
and
in
mov
push
inc
mov
xor
pop
dec
test
lock
xchg
sahf
imul
mov
xlat
gs
jl
rol
xor
filds
cltd
fiadds
xor
adc
stos
dec
sub
cmp
xor
leave
hlt
nop
cmp
notb
aas
inc
lods
shl
push
fisubl
or
pop
jno
int
inc
push
loope
std
lahf
call
sarb
aaa
pop
dec
jge
test
xchg
xor
and
movsb
popf
xchg
cmp
mov
icebp
ret
adc
cmpsl
adc
jns
das
lock
arpl
nop
xchg
inc
push
fsubrl
jg
callw
xlat
addr16
adc
jo
lcall
cmpsl
sahf
outsb
ja
sub
stc
or
jg
lcall
add
fwait
sub
inc
imul
mov
daa
cmp
cmp
ret
jbe
dec
push
sub
pop
jecxz
sti
or
cmc
ss
popa
les
push
imul
adc
stos
fcoms
or
push
jb
aas
sti
sar
xchg
sub
inc
out
mov
shl
dec
fs
push
adcl
and
add
icebp
pop
sti
jg
sbb
pop
sbbl
jbe
dec
icebp
popa
stc
add
pop
xor
or
cs
call
aas
mov
push
ja
inc
inc
add
or
sub
dec
out
imul
mov
or
orb
cltd
nop
jns
repnz
mov
xlat
into
mov
pop
in
std
xor
ret
pop
loop
push
test
loopne
imul
fsqrt
lahf
popa
fdiv
adcl
inc
ret
das
int3
fdivrp
push
inc
push
ret
ret
pop
sbb
sti
pop
mov
push
nop
xchg
fld
or
stos
adc
mov
arpl
adc
cmp
in
cwtl
fnsave
pop
jnp
lds
cmp
in
push
out
lock
cmp
xchg
movsl
fidivl
jno
jl
ljmp
test
sub
int3
cmp
pop
fwait
jne
divb
sub
test
cltd
ret
inc
lret
jno
repnz
data16
mov
jge
mov
repz
fistpll
test
pushf
sub
pop
lret
ss
xchg
nop
bound
scas
imul
dec
add
push
jl
mov
pusha
add
repnz
call
je
push
jnp
pop
push
loope
cli
fstpl
push
lret
or
inc
outsb
cmc
sub
inc
mov
int
adc
mov
repz
or
pop
jp
and
adc
lock
fwait
xchg
push
or
pushl
loop
jbe
setge
outsb
sbb
ljmp
pop
aam
loope
getsec
mov
cmc
je
call
aam
sahf
mov
pop
dec
mov
loop
cmp
test
inc
add
lcall
sbb
cmp
aas
xchg
mov
iret
inc
adc
ret
fcmovbe
jns
add
and
out
subb
sub
adc
jae
add
sub
add
mov
insl
cmpsl
and
inc
ja
loope
sti
addr16
rol
aaa
loope
mov
rcrb
adc
push
jo
aas
leave
adc
xchg
mov
repnz
sarb
repz
mov
sbb
sbb
lcall
in
ss
mov
cmp
cmp
dec
decl
jecxz
sub
dec
int3
testl
or
js
jmp
or
pushf
xor
hlt
mov
push
sub
fldenv
je
ds
pop
das
imul
inc
jns
sbb
push
jne
adc
test
cmpsl
mov
idiv
data16
jo
clc
cltd
movsl
mov
outsb
arpl
dec
int3
ljmp
jns
fwait
icebp
pop
cmp
mov
addr16
push
push
das
jp
ficoms
xor
outsb
fcomp
imul
subl
xor
dec
sub
inc
adc
pusha
orl
enter
mov
cld
bound
or
push
push
adcl
test
push
xchg
fs
pushaw
sbb
jae
insb
mov
cwtl
lea
sbbl
psadbw
mov
insb
jbe
iret
popa
jno
pop
pop
hlt
clc
mov
adc
sub
push
aam
xchg
mov
cmp
sub
pop
lods
lds
jg
and
lcall
adc
je
xchg
mov
cmpl
push
cmp
xor
xor
add
ret
and
mov
stos
repz
out
sub
gs
jbe
clc
mov
fiaddl
in
sbb
sbb
sbb
or
test
aad
sub
icebp
add
mov
jne
sahf
notb
mov
idivb
test
leave
push
and
xchg
inc
ja
fmull
ss
stc
test
or
loope
shrl
fmul
out
push
add
sbb
pop
out
je
and
lcall
add
dec
push
sbb
xchg
lret
xor
movsl
cmpsb
ja
xchg
or
mov
sub
call
xchg
xchg
sub
and
test
push
sar
call
aas
movsb
mov
xor
mov
addl
cmp
rcll
push
call
test
jae
and
ljmp
dec
fisttps
dec
jno
mov
push
into
imul
addr16
mov
push
adc
and
dec
call
in
xor
fsubrs
movsb
and
lret
inc
ss
push
syscall
pusha
loopne
arpl
int3
and
xchg
mov
pop
rolb
xor
dec
fs
and
pop
cmp
push
sti
jo,pn
pop
or
orl
or
out
aad
test
jmp
inc
mov
je
into
lcall
pop
rcr
sbb
and
pushf
or
dec
loopne
daa
pop
dec
addl
les
mul
sbb
loop
aam
insb
fs
ss
gs
lds
aam
repz
add
mov
and
loopne
jg
xchg
mov
mov
sub
jle
cld
int
fstpl
inc
pop
jno
add
icebp
cmp
sbb
rclb
divl
cwtl
pop
sahf
jp
pop
in
imul
cltd
adc
lods
inc
ds
gs
out
divb
pop
sti
enter
cmc
lcall
mov
add
xlat
xchg
cmc
stos
fstpl
fnstsw
int3
dec
pusha
lods
pop
sti
lods
sahf
sub
in
shll
mov
adc
and
std
xchg
pushf
std
mov
cltd
scas
mov
push
push
mov
sbb
mov
call
bound
sub
mov
popw
nop
or
loope
popf
push
xchg
aaa
pop
inc
inc
push
cmp
jp
cwtl
push
mov
bound
stc
mov
xchg
and
adc
cld
fdivp
cmc
sbb
lret
mov
or
lahf
pop
mov
xlat
or
add
aaa
mov
dec
ss
leave
mov
adc
or
lea
cmp
pop
pop
jns
xchg
std
cld
mov
sub
xchg
or
xchg
out
daa
dec
or
arpl
notl
enter
push
add
mov
push
push
in
xchg
pop
cs
lds
or
lods
movsb
hlt
cmpl
and
shll
and
jecxz
fwait
pop
stos
lea
fidivs
ret
imul
xchg
dec
add
push
mov
mov
arpl
cmp
mov
pop
sbb
pop
loopne
or
into
pop
push
and
cltd
push
or
inc
mov
add
mov
pop
pop
and
icebp
xor
hlt
sub
rorl
ljmp
rorb
leave
loopne
roll
mov
rcrb
mov
push
nop
inc
jbe
xor
adc
mov
daa
mov
pop
mov
xor
push
jle
lods
popa
and
push
lret
sub
cmpsb
repz
lds
int
push
pop
mov
lret
iret
bnd
enter
shrl
cwtl
mov
ss
push
in
gs
and
dec
pop
js
push
ds
call
mov
or
add
pushl
loope
add
in
daa
sub
pop
pop
xchg
add
popf
fbstp
sub
aaa
call
mov
inc
and
loop
add
lcall
mov
cmp
jg
js
pop
in
out
xchg
xor
push
out
pusha
mov
mov
mov
mov
add
add
lcall
je
pop
mov
rcll
dec
xor
test
sahf
jb
inc
add
movsl
mov
lods
mov
or
scas
and
add
pop
iret
add
cmp
pop
cs
or
test
shlb
cltd
iret
sbb
mov
sub
xchg
mov
test
lods
mov
ja
mov
mov
lss
jo
cmc
es
jbe
push
add
and
jo
fiaddl
sbb
jb
and
xchg
sub
mov
inc
inc
jns
aad
jmp
imul
dec
cli
mov
jne
repnz
inc
daa
fcoml
arpl
popf
jmp
xchg
add
scas
rcrb
stos
das
inc
in
hlt
mov
mov
xor
cmpsl
jge
and
sbb
clc
adc
mov
popf
jle
or
test
imul
test
sub
lahf
loopne
mov
cmp
arpl
mov
sbb
enter
fwait
jl
or
in
dec
jns
cltd
dec
les
out
setp
daa
daa
mov
and
jp
add
jp
inc
mov
jge
jnp
xor
jne
test
jecxz
js
popa
les
sbb
push
xchg
push
pop
dec
hlt
cmp
insl
or
in
cmp
jl
cmpsb
rcrb
mov
ds
jo
fdivrs
pop
pop
sub
xchg
pop
sahf
repz
in
lcall
cmp
out
xchg
int
fldcw
fdiv
lret
testb
dec
iret
dec
pop
pop
inc
inc
adc
js
lods
inc
out
ss
xchg
in
mov
js
aam
loopne
push
in
sub
mov
call
jmp
arpl
je
push
rcrl
cmp
icebp
cmpsl
pop
xor
inc
xor
and
jg
inc
push
adc
xchg
cmp
xor
dec
xor
sbb
add
jb
mov
inc
ret
xchg
and
xor
int3
enter
leave
adc
mov
xor
jns
js
adc
lock
dec
sbb
xchg
sbb
incb
sub
dec
popa
sti
lods
sub
mov
lea
adc
das
rcrl
mov
movsb
scas
mov
dec
ljmp
jl
push
mov
std
jl
jl
cmp
jns
inc
and
sbb
add
sarb
lds
mov
call
cmp
pop
int3
cmpsb
jle
fs
addr16
daa
and
loop
rolb
inc
inc
les
dec
mov
movsb
add
dec
clc
add
mov
inc
sbb
or
mov
adcb
adc
inc
xor
sub
xchg
xor
sti
dec
adc
cli
mov
das
inc
mov
sub
adc
arpl
mov
and
xchg
adc
lds
push
add
mov
push
mov
lret
mov
xchg
mov
fsubrs
clc
mov
sub
aas
sbb
and
jecxz
testl
and
sbb
pusha
outsb
stc
cltd
int
outsb
jne
sbb
xchg
mov
jns
xor
fs
push
and
pop
shlb
dec
mov
inc
in
add
inc
or
push
push
push
mov
xchg
mov
pop
rorb
add
movsl
mov
push
mov
scas
mov
aad
mov
jne
xchg
cs
fdiv
popa
es
sub
cmp
push
pop
jnp
inc
xchg
ret
dec
std
movsl
jp
pop
outsl
or
jns
or
enter
dec
sarl
add
mov
in
jecxz
xor
add
push
sbb
jno
add
inc
cmp
loopne
es
insb
xlat
adc
in
sub
and
push
movl
sub
push
loope
cmp
xchg
or
jo
int3
outsb
mov
or
fsubl
or
dec
add
adc
mov
sub
rorl
jle
push
mov
std
outsl
sub
js
enter
repnz
lods
cltd
mov
in
nop
movsb
and
push
fwait
scas
dec
out
mov
cmc
dec
repnz
xor
cltd
sbb
dec
xchg
aaa
insl
stc
push
dec
push
fstpt
lahf
push
cli
mov
adc
inc
mov
add
cmp
loope
jno
pop
jno
lods
jecxz
addr16
adc
ror
jb
push
dec
push
gs
les
sbb
add
ds
adc
mov
int3
mov
fsubrs
faddl
jge
sub
mov
and
inc
leave
leave
mov
repnz
aas
int
and
push
pop
and
popa
pop
shlb
mov
dec
inc
pusha
loopne
jl
sbb
adc
and
fwait
sub
lods
fs
and
shlb
cld
mov
sbb
add
jmp
cmp
mov
mov
ja
inc
lret
loope
cs
and
mov
push
add
sbb
mov
negl
inc
lret
incl
adc
ja
cmp
xor
out
push
mov
and
lahf
outsb
jb
mov
adc
jno
lea
cli
scas
mov
jp
fsubs
aad
sub
out
lock
xchg
ret
xchg
jae
mov
pop
or
je
jae
shrb
bound
xor
es
jmp
jle
popf
ds
jle
out
push
mov
cmc
jecxz
lds
mov
push
mov
adc
imul
pop
push
fstl
sbbl
in
loopne
adc
ret
push
loope
movsb
push
mov
fstl
push
xchg
push
cwtl
adc
nop
cwtl
imul
cs
dec
mov
subl
xchg
cmp
test
or
pop
xchg
or
mov
jmp
test
sarl
lds
pop
test
sti
mov
xchg
sar
mov
pushf
das
mov
fs
cs
inc
jae
sbb
mov
inc
stos
negb
dec
xor
rolb
dec
jo
cmp
mov
sub
pop
and
push
dec
outsl
in
pushw
rcrb
cmpsl
inc
imul
repz
aas
lods
fptan
mov
cltd
mov
cmp
or
xor
jno
mul
mov
lea
cmp
ds
in
cmpsl
xchg
sbbl
and
inc
fs
pop
push
fmul
pop
sbb
push
sarl
pop
lds
pop
pop
jae
aas
rorl
andl
inc
xor
or
or
adc
sbb
js
push
and
sarl
xchg
mov
ja
cmp
cwtl
sbb
sbb
rolb
push
lea
lods
shl
push
leave
inc
sarl
lret
inc
jle
fnsave
popa
popf
jmp
mov
movl
sbb
les
sbb
jp
jne
mov
xlat
cmp
cwtl
mov
mov
xor
or
cmp
insl
movsb
xor
add
push
mov
jmp
mov
mov
jno
fadds
lcall
fdivp
iret
in
adc
test
jnp
mov
sbb
arpl
cld
aad
mov
dec
inc
sar
mov
xlat
lret
std
or
dec
cmc
push
shl
jb
movsb
pop
xchg
fwait
test
ss
sbb
in
xchg
mov
pop
or
aam
stos
lock
lret
es
cwtl
ret
aaa
push
pop
insl
sub
pop
xchg
movsl
sbb
sub
or
cltd
xlat
mov
scas
popa
add
fstpt
stos
jns
mov
dec
rclb
dec
jmp
out
mov
add
xor
inc
inc
mov
mov
rcrb
fimull
xorl
jecxz
mov
lods
fsubrs
cmp
cld
das
lea
dec
cmpsl
fs
push
and
pop
inc
mov
mulb
cmp
push
jp
and
push
imul
loop
jge
xchg
and
inc
push
adc
ret
sar
or
pusha
adc
add
int3
jmp
mov
arpl
cmc
push
sbb
outsb
out
cld
shr
jmp
mov
loope
lret
cwtl
je
xor
mov
dec
popf
pop
sub
ljmp
mov
pop
mov
in
or
rorl
add
daa
test
mul
andl
jg
jb
xchg
cmpsl
add
cmp
xchg
or
jnp
push
imul
adc
adc
loopne
xchg
lret
mov
ds
sub
push
adc
lret
jns
mov
sbb
dec
sti
popf
aad
fildll
lds
ret
jle
add
hlt
pop
ljmp
pop
insb
mov
dec
mov
push
dec
lcall
insb
cwtl
ret
xchg
and
mov
and
rorl
xor
lods
or
or
andl
pop
and
mov
cmpsl
fdivrl
outsb
loopne
leave
push
xchg
lahf
pop
xor
test
ds
sbb
pop
push
mov
addr16
sbb
loopne
push
push
lds
xchg
sub
scas
insb
fsubp
faddl
cmc
fdivl
addr16
and
clc
mov
mov
aam
mov
jl
cmp
sub
push
lds
jp
xchg
and
mov
stc
sbb
jbe
mov
lahf
push
decl
push
push
mov
mov
pop
test
push
inc
rcll
pop
iret
jle
aad
push
pushl
pop
pop
fcoml
filds
mov
xchg
out
dec
inc
jbe
xchg
rcll
push
add
cwtl
pop
jl
sub
shll
fidivrl
mov
push
pop
push
mov
mov
mov
cmp
outsb
shlb
mov
pop
sub
jns
inc
jge
jp
mov
inc
punpcklwd
adc
cld
adc
dec
jne
cmp
cmpsl
and
es
out
jg
lock
dec
cmc
xor
cmpl
mov
test
xor
jbe
iret
hlt
aaa
lahf
cwtl
dec
xor
dec
in
movsb
pop
pop
or
dec
add
mov
aad
inc
or
loope
xchg
cmp
or
pop
test
data16
push
mov
pop
push
mov
pop
jns
scas
mov
jb
mov
cld
push
xchg
pop
sub
mov
adc
and
push
or
cmp
push
fbstp
adc
imul
sub
mov
jae
in
mov
cmpsl
jle
arpl
sub
enter
sbb
adc
in
inc
out
in
pop
pop
and
xchg
or
adc
lock
sub
add
xchg
adc
and
sbb
mov
out
aad
mov
adc
adc
outsl
sub
push
movsl
aaa
pop
imul
loop
inc
push
out
unpckhps
mov
adc
pop
in
clc
inc
or
fst
aaa
mov
or
pop
xor
pop
push
dec
popl
fabs
inc
nop
mov
test
jnp
pop
push
outsl
mov
cld
outsl
xchg
pop
xor
mov
lds
iret
icebp
adc
and
repz
test
mov
aam
xor
ljmp
daa
shl
pop
arpl
xchg
bound
repnz
lahf
es
adc
push
repnz
and
movsb
dec
mov
push
jg
and
jnp
mov
add
xorl
jge
int
add
pop
rcl
cli
pop
xchg
imul
in
leave
dec
mov
shrl
xchg
in
dec
dec
cld
mov
cs
pop
push
mov
mov
inc
popf
jle
xorl
fsub
sahf
mov
sub
iret
adc
add
jne
sbb
xor
je
push
vmptrst
test
xchg
sbbl
mov
push
sub
es
push
sbbl
int3
xchg
aas
add
and
lods
int
xor
out
dec
cmp
sti
jnp
xor
xchg
js
or
jge
imul
into
push
sub
jb
mov
faddp
outsb
sub
lods
push
je
push
ja
push
jle
jns
mov
mov
mov
xchg
inc
lahf
jbe
mov
dec
fdivs
int3
orb
mov
dec
xchg
mov
popf
fidivs
test
call
adc
outsl
push
and
scas
std
add
insl
push
test
adc
mul
shlb
pop
arpl
push
out
cmp
cmp
scas
iret
jmp
fs
add
push
push
pop
int
jmp
into
addr16
inc
jbe
ret
mov
mov
jbe
cwtl
lock
push
add
xchg
mov
dec
cmp
inc
divl
dec
pop
stos
xorb
jge
das
inc
popa
stos
xchg
push
stc
mov
inc
push
cmpl
fiaddl
std
cmp
dec
sub
ljmp
cmp
and
adc
aas
cmp
cwtl
shll
xor
aad
pop
push
add
push
jne
mov
movsb
xchg
pop
negl
add
jne
pop
lds
cmp
outsb
scas
jo
je
jg
lret
pushf
add
test
jge
dec
fwait
lahf
mov
pop
xchg
or
ret
pop
jle
mov
or
add
push
sub
enter
mov
push
or
xchg
add
jne
cmp
sub
xorl
outsl
lods
repz
data16
repnz
xor
lret
fimull
jle
negl
pop
xchg
shlb
sbb
jo
test
aam
cs
or
pusha
sar
fwait
in
mov
repz
notl
inc
repnz
popf
enter
mov
push
imul
and
clc
not
imul
js
roll
push
bnd
add
inc
sub
cmp
pusha
enter
mov
orb
fbstp
mov
popf
mov
mov
mov
sbb
sub
mov
pop
jno
mov
rcr
jns
shl
xor
ret
imul
dec
out
xchg
dec
pop
pop
xchg
inc
shl
notb
out
sbb
jecxz
outsb
xor
mov
ror
addl
push
pop
test
jbe
movsl
das
addr16
test
mov
push
imul
fnstsw
jmp
add
lret
loop
jb
sub
shrl
mov
je
mov
sahf
loope
pop
out
cld
push
leave
call
mov
insl
cmp
jne
test
add
sub
pop
lea
ja
std
dec
xchg
xchg
imul
and
mov
xchg
pushf
cwtl
mov
in
int3
lds
mov
add
fstpl
loope
pop
jno
lea
in
or
cld
aam
les
es
cwtl
pop
adc
sub
pushf
cmp
aaa
or
aas
add
or
mov
ret
cmp
xchg
mov
fcomps
outsb
mov
rorl
adc
xor
push
rclb
sbb
inc
add
jbe
fildll
mov
imul
mov
das
adc
insb
movsb
test
ret
or
sti
and
inc
jmp
dec
or
fsubs
enter
sub
shlb
outsb
or
or
mov
jmp
in
sub
lcall
lods
sbb
or
decl
or
mov
lahf
and
xchg
mov
js
outsb
lret
sahf
jp
gs
ret
bound
pop
mov
adc
or
push
xchg
out
popa
jg
in
lcall
bnd
enter
xlat
dec
add
fnstcw
movsl
ss
inc
outsb
scas
xchg
popf
sbb
aad
insb
movsb
dec
cmp
mov
in
cmp
and
push
mov
test
data16
mov
ljmp
ljmp
sbb
xor
ret
call
int3
adc
int
fldl
push
movsb
pop
mov
arpl
popa
les
dec
dec
fildl
push
leave
ficomps
hlt
insl
xchg
ljmp
cltd
shlb
stos
popf
xor
cmp
jge
push
inc
xchg
mov
nop
pusha
add
mov
mov
lds
sub
repnz
lods
jo
xchg
repnz
ror
jge
cltd
fstpt
sub
repnz
cmp
sahf
insb
push
jnp
int3
rcrl
mov
xchg
fbstp
insb
enter
das
and
aam
xchg
imul
xor
xchg
popa
jnp
jns
and
fs
outsb
je
mov
and
fimuls
lahf
lods
push
orl
cmp
mov
sbb
scas
mov
mov
xchg
push
add
or
sub
sti
in
hlt
loopw
pop
iret
mov
mov
mov
mov
adc
sub
pop
sbb
jne
xor
jno
inc
pusha
faddl
sbb
jg
test
cwtl
jb
ja
mov
cwtl
mov
sub
jmp
fs
add
hlt
sbb
jae
mov
xchg
xchg
aad
mov
jns
adc
sub
adcb
dec
outsb
test
mov
jnp
mov
out
shll
iret
cmp
lahf
cltd
sub
mov
dec
sub
insb
or
scas
aaa
cmp
fiadds
dec
fstp
push
call
imul
mov
add
pusha
push
and
sbb
push
das
call
cmpsb
push
in
sub
gs
push
stos
aam
cmc
dec
addr16
xchg
fwait
jmp
lahf
jnp
rorb
push
inc
repnz
out
outsb
mov
xlat
xchg
push
clc
pop
cs
inc
add
dec
mov
adc
aam
mov
int
lea
fcmovnu
cli
push
por
pop
xor
rcr
xchg
mov
imul
mov
das
mov
pop
int3
fistpll
push
or
testl
sarb
cmp
xor
out
scas
dec
test
push
loope
mov
pushl
jmp
cmp
ja
sub
xor
popaw
sub
daa
mov
sub
sahf
das
inc
push
xchg
cmp
pop
pop
test
mov
ds
lret
adc
fistps
test
leave
loope
and
in
push
rclb
movsb
hlt
fsubrs
jne
mov
and
es
cmp
repnz
cmp
jp
imul
fcompl
mov
add
push
inc
pop
inc
loop
popf
ljmp
stos
push
rorl
loop
clc
aaa
lret
adc
jle
pop
in
outsl
mov
pop
testl
inc
imul
xchg
iret
gs
xchg
sar
pop
repz
adc
jmp
mov
push
hlt
dec
lods
mov
movsl
mov
inc
push
icebp
sahf
push
cmc
insl
mov
jmp
pushf
scas
in
mov
jne
lods
call
jmp
and
xor
loope
ds
popf
dec
and
adc
rcl
nop
icebp
jne
iret
ja
mov
push
mov
hlt
ss
subl
es
sbb
and
inc
repnz
rorl
sub
pop
push
push
pop
fwait
add
lret
or
roll
jae
dec
dec
mov
out
inc
out
cwtl
pop
cmp
cmpsl
sbb
movsl
bound
fsubrl
popf
gs
mov
ret
cld
pop
add
enter
sub
mov
pop
add
push
cmpsb
or
sbb
stos
fcmove
push
add
cmp
imul
add
jbe
pop
neg
rclb
insl
dec
lahf
cmp
cltd
dec
xchg
xchg
inc
call
dec
mov
call
test
push
cwtl
inc
push
out
or
xorb
aad
dec
mov
pop
call
sbb
or
jmp
push
adc
mov
xchg
fmuls
into
das
pop
xor
or
adc
push
xlat
mov
stos
and
popa
inc
mov
fiaddl
in
rcrb
mov
adc
fdivrl
inc
lcall
mov
sub
pop
std
mov
movsb
testb
pop
fists
test
xor
cmpsl
out
in
cmp
arpl
fsubrp
adc
push
pop
cmpl
xor
loope
icebp
stos
cs
xchg
andb
push
jae
adcl
and
push
jp
jne
aam
xchg
data16
lods
adc
jp
shrb
lret
add
mov
out
stos
outsb
push
jmp
dec
aad
jbe
rol
idivb
add
or
pop
xchg
add
pusha
or
incl
jp
test
lret
xor
inc
mov
lret
int
test
movsb
lret
dec
stc
fstl
jb
and
adc
sahf
sbb
pop
loop
inc
jnp
bound
xorl
ljmp
daa
fwait
or
mov
stos
cmp
xchg
inc
jle
jecxz
xchg
testb
and
mov
xchg
inc
mov
fisttpll
push
in
adc
stos
inc
sbb
daa
inc
mov
and
cmp
ror
shrb
adc
mov
movsl
pop
std
mov
dec
and
cltd
adc
loope
pushf
clc
or
mov
rorl
dec
or
jl
cmp
scas
xchg
mov
fiaddl
dec
xchg
or
xor
pop
and
mov
shr
push
clc
hlt
adc
and
lahf
outsb
mov
cmc
aas
loop
cmp
popa
push
mov
rorl
lock
scas
rcll
mov
cltd
iret
push
add
sbb
mov
enter
in
mov
iret
sub
out
lods
sub
xor
xchg
aas
jbe
sbb
int
aad
je
and
ss
jmp
call
push
xchg
insb
arpl
and
mov
adc
xor
jns
ja
popf
lret
rorb
xchg
mov
jo
pop
mov
or
sbb
push
push
into
push
sub
addb
xor
sub
popa
lret
or
fnstsw
inc
mov
jp
sahf
clc
aas
movsl
js
lret
test
cmpsl
repnz
adc
xchg
push
mov
rcll
in
push
lods
push
cmp
dec
outsl
xor
xor
cmp
insl
iret
adc
out
dec
nop
jg
insb
mov
jns
sti
mov
test
add
das
inc
adc
outsl
xor
std
in
aas
leave
mov
mov
push
jmp
or
and
sbb
dec
sbb
jo
mov
mov
fistpl
cltd
lods
add
sub
mov
ffree
shll
aas
cltd
fdivr
mov
outsb
leave
jmp
pop
mov
adcl
loop
fucomp
addb
es
adc
int
or
cmp
stc
icebp
and
fiaddl
and
push
ja
out
or
cld
inc
jmp
icebp
xor
fiadds
cmp
cmpsl
mov
dec
imul
jl
mov
or
or
adc
sbb
xchg
in
cld
idivl
jb
xchg
int3
mov
jle
imul
lock
mov
cmpsl
enter
dec
scas
jle
mov
mov
pop
lret
test
decb
test
fsubrl
into
lcall
ss
addl
cmc
jne
xor
mov
push
push
jo
mov
pusha
sub
aas
jecxz
ret
and
lret
xor
cmp
jmp
cmp
sub
push
mov
and
pop
sbb
xchg
and
insb
dec
fsubrl
xchg
xor
adc
cli
push
inc
sarl
cmp
rcl
movl
