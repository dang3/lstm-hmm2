or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
adc
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
testb
xor
leave
adc
add
nop
add
dec
std
leave
adc
mov
std
leave
adc
add
cwtl
add
jo
leave
adc
mov
std
leave
adc
add
mov
add
cmp
mov
add
test
int3
adc
add
add
std
leave
adc
add
mov
int3
adc
add
int3
pop
mov
std
leave
adc
add
rolb
dec
adc
cmp
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
repz
add
cmp
filds
outsb
or
push
jno
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
inc
add
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
push
inc
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
mov
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
int3
add
insb
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
sbb
inc
add
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
lods
incb
popf
adc
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
add
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
push
out
add
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
add
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
fadds
mov
mov
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
rolb
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
popf
adc
mov
cmp
mov
mov
je
add
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
push
mov
sub
push
push
push
push
push
push
push
push
push
call
jb
jmp
test
push
popf
rolb
hlt
loopne
add
add
mov
add
je
add
fs
pop
add
mov
mov
int3
add
cwtl
mov
out
jle
sub
pop
popl
push
push
push
push
call
add
jns
xchg
cmp
add
into
mov
cmpsl
mov
mov
push
add
add
mov
cld
pop
cmc
add
mov
insb
addl
add
add
add
fadds
les
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
add
add
popl
mov
in
add
sahf
mov
out
addl
add
mov
loopne
jbe
in
fdivr
lcall
push
push
lea
push
call
int3
ret
nop
add
lret
add
add
add
mov
fstpl
or
xchg
loope
test
add
add
add
add
add
cld
flds
test
add
lret
lods
jb
test
push
add
add
sub
pop
push
push
push
push
push
push
lea
push
call
fadds
insb
xorl
loopne
add
add
add
outsl
icebp
add
add
fwait
mov
xchg
in
add
iret
adcb
mov
mov
mov
add
cmpsb
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
incb
in
mov
add
lods
movsb
add
add
add
rorb
lods
jb
lock
test
mov
add
add
pop
add
cmpl
out
add
pop
xchg
mov
sahf
push
roll
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
test
mov
pop
sahf
sti
popf
jmp
loop
mov
add
add
ja
add
mov
popf
leave
xchg
pop
mov
mov
lock
insb
in
push
mov
test
add
mov
jo
fldl
pop
cli
lret
add
in
mov
cmc
add
add
add
mov
lcall
push
pop
add
push
lea
push
call
add
add
add
add
movsl
add
add
lock
lcall
lods
mov
add
add
ja
mov
mov
arpl
imul
mov
lcall
insl
add
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
lods
roll
mov
add
add
je
mov
add
add
mov
movsb
repnz
add
add
add
mov
loopne
mov
fwait
add
inc
hlt
push
push
lea
push
push
push
push
push
lea
push
push
call
add
fldl
add
push
add
add
add
out
movsb
sbbb
lcall
loope
ja
push
add
jmp
add
icebp
scas
xchg
add
iret
add
pop
add
add
add
out
push
add
mov
test
movsl
push
neg
mov
lcall
pop
hlt
add
push
push
push
push
lea
push
call
jmp
imul
add
push
xchg
add
lock
gs
pop
jmp
mov
ja
pop
mov
cwtl
add
cli
mov
pop
add
push
lea
push
call
fwait
hlt
add
add
push
add
pop
sahf
loopne
add
cli
int
xchg
add
add
nop
pop
add
loopne
pop
mov
shr
std
in
add
movl
fucomp
add
mov
lcall
ret
adc
push
lea
push
call
shll
ja
xchg
add
jb
jle
jbe
add
rolb
cltd
lea
add
loopne
xchg
jnp
mov
movl
popf
out
lret
aad
rorb
jo
push
push
push
push
lea
push
call
rorl
out
add
add
rolb
add
add
add
pop
xchg
out
push
add
add
cwtl
add
add
add
repnz
add
sar
bound
xor
push
push
push
push
call
add
xchg
jbe
xchg
incb
pop
add
add
scas
add
add
add
add
push
add
add
je
lcall
mov
mov
add
cmpsl
push
jb
mov
mov
add
jae
add
mov
out
add
sub
pop
add
push
push
xor
shr
shl
push
sub
add
sub
not
sub
inc
rol
sub
lea
pop
xor
shl
pop
push
push
lea
push
push
call
outsl
stc
add
int
loop
jo
loop
push
push
in
mov
add
jl
leave
outsl
add
pop
loope
add
pop
fadds
fistpl
mov
loope
mov
add
add
out
test
pusha
fstl
mov
pop
sub
pop
pushl
push
push
push
lea
push
call
clc
je
roll
cmc
rcrl
cmpsb
loope
add
add
jp
xchg
add
imul
add
add
jo
add
flds
add
cmpb
fildl
add
add
sub
pop
call
mov
push
push
push
push
lea
push
lea
push
call
addb
roll
negl
add
add
add
add
add
pop
pushf
addr16
add
add
roll
push
ja
scas
into
xchg
hlt
add
fildl
lret
add
mov
add
jecxz
movsb
add
lcall
inc
call
lea
push
push
push
push
push
push
push
call
add
roll
sahf
rcr
rclb
push
in
jns
add
add
lcall
aam
jb
jns
push
stos
and
add
mov
add
popf
lret
std
add
pop
add
lock
jl
addr16
add
pop
add
icebp
sub
pop
push
push
push
push
push
push
push
push
call
add
add
mov
lret
add
icebp
repnz
cwtl
into
pop
pop
scas
addb
push
add
add
pop
mov
ja
add
lods
jle
add
push
add
add
jp
in
add
ljmp
pop
xlat
jno
add
addr16
insb
icebp
ljmp
jne
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
push
sahf
push
mov
mov
add
cld
les
test
popa
scas
insb
cli
sarl
add
add
test
pushf
lcall
sahf
lds
push
add
add
pop
jnp
stos
add
add
int
push
popf
mov
add
add
mov
sub
pop
pushl
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
add
testb
mov
add
add
cli
mov
add
add
add
scas
int3
mov
add
add
add
cmpsb
hlt
lea
add
push
jo
xchg
add
pushf
mov
int
mov
mov
int
mov
jmp
in
loopne
lcall
and
add
aas
push
lea
push
push
push
push
push
call
add
lret
mov
lods
sarl
add
pop
add
add
add
xlat
popf
push
fidivrs
popf
push
lret
add
sub
pop
pushl
pushl
push
lea
push
call
gs
pop
imul
flds
js
push
add
out
push
jecxz
cltd
add
add
clc
add
jno
add
add
jns
push
add
je
xchg
add
repnz
add
add
add
jbe
out
mov
add
icebp
pop
leave
add
icebp
aaa
add
push
push
shr
rol
push
or
inc
add
not
not
sub
ror
shr
pop
sub
xor
pop
push
push
call
add
movsb
mov
enter
add
lods
cmpsl
mov
add
pop
out
add
pop
cwtl
subb
add
rcrl
add
pusha
in
add
mov
add
add
pop
lods
pop
aad
add
repnz
in
clc
pop
pushl
call
push
push
lea
push
call
faddl
add
add
int3
pop
test
imul
lcall
add
add
imul
mov
add
xlat
fidivrl
mov
in
hlt
pop
push
push
push
sub
push
xor
add
lea
lea
add
sub
add
xor
inc
sub
pop
add
sub
pop
push
push
push
push
push
push
push
push
call
add
rolb
fstps
add
into
lret
mov
add
add
popa
add
cmpsl
mov
popl
add
cwtl
aam
lods
add
popa
lret
test
add
mov
arpl
mov
sub
pop
push
push
lea
push
call
lahf
hlt
cmpsb
add
add
loop
push
aad
jl
add
sahf
in
add
int
lret
addb
outsl
incb
jb
int
add
add
out
fs
mov
test
nop
fldln2
nop
movb
lcall
add
xchg
push
push
push
lea
push
call
repnz
xchg
rol
lret
pop
add
pop
jno
out
add
add
fst
jns
jmp
pusha
mov
fbld
add
add
add
jb
xchg
out
add
fadds
call
call
mov
push
push
lea
push
push
lea
push
push
push
call
add
add
jno
add
push
sahf
sahf
std
xchg
mov
add
xchg
cmpsb
add
jb
add
add
add
jecxz
mov
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
clc
imul
add
pop
add
pop
jp
sarb
cmpsb
test
mov
rcl
add
rorb
add
add
nop
imul
add
aad
add
push
jno
aad
mov
add
test
clc
testl
mov
sub
pop
push
push
push
lea
push
call
cmpsl
mov
push
out
add
pop
add
enter
xchg
imul
lods
addl
add
add
stc
add
add
add
lret
add
arpl
lcall
pop
hlt
add
push
push
push
lea
push
push
call
add
cmpsl
sahf
arpl
mov
jp
lret
add
mov
add
stos
cmpb
add
jae
arpl
out
pop
mov
jge
lods
jge
sub
pop
add
add
push
push
call
movsl
mov
iret
add
nop
into
push
add
add
mov
movsl
loope
mov
sti
je
add
add
add
pop
add
pop
outsl
push
mov
mov
mov
xchg
clc
xchg
mov
add
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
call
in
jge
cltd
scas
mov
add
les
cld
add
lods
fldenv
repnz
push
pop
movsb
mov
add
fidivl
add
jmp
add
lcall
jne
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
test
jbe
add
mov
movsl
add
add
fcomps
mov
add
add
push
rcl
jge
in
fdivr
lcall
mov
push
push
push
push
lea
push
push
push
push
push
push
call
nop
add
add
mov
movsl
imull
js
add
rolb
int
movsl
mov
mov
in
jns
add
enter
pop
add
repnz
mov
lods
leave
mov
mov
out
add
lcall
add
push
push
lea
push
push
push
push
push
call
add
add
repnz
ficomps
pop
add
aam
mul
add
jle
mov
push
movsl
xchg
jae
add
add
stc
popa
add
push
add
movsb
popa
in
mov
addb
add
cmpsb
push
cld
push
popf
loop
addr16
add
out
add
cmpsl
mov
add
in
in
lcall
les
push
push
push
push
push
push
push
push
call
xchg
nop
loope
add
enter
test
add
lock
leave
xchg
add
add
loope
notb
sarl
mov
addl
pop
sahf
sub
mov
push
fisttpl
add
jnp
jno
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
cmpsb
add
fbld
add
shll
add
fisttpl
lods
enter
arpl
mov
mov
mov
fstpt
add
add
add
flds
lock
jmp
ja
out
cwtl
add
lcall
push
push
call
std
add
push
pusha
hlt
arpl
loopne
neg
mov
push
add
ljmp
jne
out
add
xchg
add
lret
add
xchg
push
add
pop
add
clc
add
rorl
lods
add
movsl
flds
loopne
cmpsl
add
fs
and
insb
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
xchg
sti
aad
jo
add
add
add
jecxz
data16
lods
cmc
int
in
loopne
lcall
push
push
lea
push
call
test
in
add
addb
jge
add
gs
pop
add
into
add
test
add
add
add
ja
enter
add
fiadds
add
add
movb
mov
add
add
into
push
lcall
add
in
hlt
lcall
inc
or
popf
out
lret
call
mov
mov
add
mov
sti
jno
ret
add
pop
push
add
add
in
hlt
subb
loop
add
cmpsb
push
xchg
add
std
add
add
fidivl
mov
stos
mov
add
jp
mov
add
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
add
mov
mov
jge
add
add
bound
add
pop
iret
add
add
push
sub
pop
add
push
push
call
ret
sahf
stos
add
add
add
add
add
push
jno
stc
xchg
add
add
outsl
add
add
sahf
enter
add
stos
decb
lcall
mov
jno
out
movl
lcall
enter
push
push
push
push
call
cld
jbe
in
cwtl
js
add
add
rcl
test
add
cmpsb
add
shlb
aad
mov
add
addb
add
sub
pop
rep
push
push
lea
push
push
push
lea
push
lea
push
call
fadds
add
xchg
repnz
add
add
jbe
add
ja
mov
fiaddl
add
fadds
add
pop
mov
fmul
add
ja
pusha
int3
pop
ja
add
imul
in
ja
add
xorl
mov
jl
movsb
add
add
push
in
in
pop
mov
push
lea
push
push
call
andb
add
add
mov
fildll
mov
outsl
addr16
scas
add
mov
add
cmc
stc
add
bound
add
cmc
add
add
add
aad
aad
add
add
add
xchg
sub
pop
add
push
push
call
pop
jae
popa
nop
add
add
add
jb
int
cmc
add
add
jb
mov
outsl
add
add
add
out
add
push
mov
fistpll
mov
jnp
ret
incb
movsl
jp
jmp
testb
sub
pop
add
add
push
lea
push
call
push
imul
les
mov
mov
push
pusha
jo
mov
std
add
add
clc
lcall
inc
and
lret
inc
push
push
push
lea
push
push
push
call
sbb
add
add
jecxz
mov
insb
cmpsl
imul
add
pop
ja
fs
mov
movsb
nop
add
out
loope
sahf
pushw
jne
add
add
jnp
add
add
fsubrp
add
js
pushf
add
leave
cld
mov
int
test
add
add
filds
sub
pop
mov
xor
push
push
call
popf
push
add
aam
add
add
jmp
je
scas
push
mov
add
lret
mov
add
add
not
add
mov
js
cmc
add
add
add
add
mov
add
repnz
push
xchg
jl
add
add
dec
sub
lret
das
lea
push
call
shlb
hlt
xchg
add
add
test
cmpsb
pop
pop
add
pop
bound
push
in
add
jecxz
nop
in
add
in
leave
add
add
lcall
ret
js
xchg
cmpsl
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
xchg
div
add
in
andb
lret
mov
jp
add
addl
in
rolb
add
jge
fprem1
mulb
add
add
add
movsl
test
xlat
add
lcall
inc
push
iret
bound
fdivr
lcall
rcll
lods
orb
push
push
push
push
call
add
mov
loope
fnsave
add
cwtl
jmp
mov
pop
fildl
shrl
mov
add
in
scas
jecxz
movsl
insb
add
pop
mov
add
out
mov
add
int3
sub
pop
mov
push
push
sub
shl
push
xor
add
sub
sub
sub
pop
add
pop
push
push
push
push
lea
push
lea
push
lea
push
call
mov
pusha
add
add
jmp
pusha
cltd
std
add
jbe
add
add
movsb
mov
mov
mov
add
jae
imul
cmpsl
fidivrs
add
sub
pop
pushl
push
push
lea
push
call
add
mov
jo
lock
add
mov
sbb
mov
in
scas
mov
fs
mov
add
mov
jb
xchg
subl
xchg
sahf
sub
pop
call
push
push
push
lea
push
push
call
pop
add
add
mov
xchg
mov
add
mov
add
add
add
fadds
jae
add
mov
jns
push
add
pop
add
mov
sub
pop
push
push
push
sub
push
and
add
inc
sub
shl
xor
lea
pop
add
shr
shl
pop
push
push
call
testl
add
std
add
push
add
incb
add
add
imul
cltd
lahf
add
xchg
add
sub
pop
push
push
dec
sub
pop
push
push
push
push
push
push
call
add
xchg
add
add
add
add
add
mov
mov
add
lahf
cli
out
add
shlb
cltd
insb
pop
add
xorl
add
pop
add
add
call
push
add
xor
add
pop
mov
push
add
lea
pop
push
push
push
add
ror
xor
pop
mov
push
push
push
push
push
lea
push
call
pusha
add
jo
add
xchg
popf
pop
imul
add
jmp
add
sahf
pop
hlt
mov
stc
stos
test
add
shl
add
add
std
add
jnp
aad
add
lcall
pop
in
push
lea
push
push
push
call
loope
cmpsl
scas
arpl
js
leave
add
roll
fwait
mov
in
mov
add
add
add
mov
int3
mov
pop
shl
add
add
add
add
cltd
cli
mov
sbbl
jns
in
addr16
jnp
int3
add
xchg
lcall
lcall
ret
add
add
add
push
push
push
push
call
pop
push
arpl
insb
test
push
add
lret
stos
add
mov
loop
add
aad
add
jae
xor
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
add
stos
lahf
out
mov
add
stos
add
int3
add
popf
test
jns
lds
add
out
into
callw
add
pop
push
mov
xchg
add
sahf
mov
mov
lcall
jne
push
inc
ror
shl
pop
push
mov
xor
push
lea
push
push
push
push
call
add
mov
gs
add
add
cmp
push
imul
add
arpl
add
add
cltd
mov
roll
add
icebp
mov
mov
ja
pushf
xchg
mov
add
add
add
add
in
lcall
lock
push
dec
pop
mov
xor
push
push
push
call
mov
push
in
add
xchg
mov
insb
jno
int
lahf
add
add
hlt
add
add
add
lods
add
add
xchg
pop
add
in
hlt
pop
rep
push
sub
pop
mov
push
push
push
push
push
push
push
push
call
into
ja
xchg
add
fadds
add
ljmp
arpl
add
shr
loopne
test
push
add
cltd
jl
jp
mov
add
je
rolb
icebp
mov
pop
xor
push
lea
push
push
push
push
lea
push
lea
push
push
call
jne
add
add
lcall
lds
int
add
repnz
add
add
mov
jno
mov
imul
fcoms
ret
lahf
mov
add
mov
in
loopne
add
push
lea
push
push
push
push
call
mov
pop
pop
mov
add
stc
add
out
pop
add
cmpsl
call
popf
xchg
sti
add
add
add
add
pushf
loopne
xchg
arpl
mov
jne
jns
movb
add
in
add
insb
mov
stos
fwait
in
add
in
lcall
leave
je
push
push
push
call
pop
popf
jle
not
add
add
out
add
pop
pop
pop
add
pop
aad
movsb
stc
out
testb
add
mov
mov
cltd
add
jo
fisttps
imul
js
jnp
push
mov
movb
int
add
pop
add
push
cmc
add
popa
add
add
add
test
add
add
lcall
xor
popf
out
lret
scas
scas
xor
lea
push
lea
push
call
add
fildl
sbb
add
arpl
xchg
add
add
mov
icebp
lods
add
add
ror
add
xchg
sub
pop
xor
push
push
push
push
push
push
push
call
add
jns
push
test
fiadds
je
stc
std
cwtl
add
add
loope
push
add
add
xchg
movsb
add
add
push
mov
stos
data16
jecxz
test
in
add
add
fs
add
iret
add
push
repnz
add
add
mov
pop
add
in
in
add
push
sub
sub
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
std
push
add
add
out
mov
add
repnz
iret
fldl
flds
jno
add
movsl
jb
loopne
jb
add
add
jbe
mov
add
out
add
pop
add
call
ret
add
add
mov
push
sub
pop
xor
push
push
lea
push
lea
push
call
push
mov
add
jecxz
add
add
int
cltd
add
add
add
fs
add
mov
xlat
fwait
adcb
movsl
stc
fiadds
les
add
xchg
add
add
lock
lcall
les
add
push
inc
not
pop
add
push
not
ror
shr
lea
pop
add
push
push
lea
push
push
push
push
push
call
pusha
mov
add
hlt
add
add
lret
xchg
lahf
push
stc
add
jge
aad
roll
fstl
xchg
add
pop
add
call
push
push
push
call
push
add
add
mov
ljmp
test
xlat
add
cld
mov
mov
aam
add
jae
mov
add
add
add
cmp
movsb
mov
cmpsl
roll
mov
pop
in
sbbl
add
add
add
loopne
sub
pop
xor
push
push
push
push
call
add
insb
push
loopne
in
add
jmp
add
cmpsl
test
mov
pop
jmp
mov
add
cltd
push
add
add
js
rolb
push
outsl
les
insb
arpl
jae
add
add
ja
add
les
add
push
add
xor
add
pop
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
rclb
lods
cltd
addr16
xchg
mov
hlt
add
mov
add
je
rorb
add
stos
push
rolb
fwait
cld
in
lea
mov
mov
jae
filds
cmpsl
jge
pushf
add
sub
pop
pop
rep
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
out
stos
mov
fs
lret
add
repnz
test
mov
add
xchg
add
add
push
xlat
add
push
xchg
mov
out
sub
pop
mov
push
push
push
push
push
call
jne
movsb
fadds
pusha
mov
int3
imul
scas
imul
cld
in
pop
add
add
popa
add
add
push
xchg
xchg
add
test
movsb
add
add
pop
in
int
add
add
add
lods
lahf
jecxz
mov
testl
or
push
push
push
push
push
push
push
lea
push
push
push
call
nop
push
xchg
movb
movsb
mov
mov
jge
ljmp
in
imul
rolb
addb
sti
rolb
add
add
popf
add
roll
shl
xchg
cmpsb
add
mov
popf
add
fwait
add
jae
sub
pop
add
push
ror
add
shl
pop
or
je
push
sub
shr
sub
pop
mov
push
rol
not
pop
add
add
push
push
push
push
push
call
add
add
mov
add
jns
stc
int3
in
jb
shlb
add
add
push
int3
add
movsb
pop
push
push
add
shr
push
or
not
add
not
sub
sub
shr
inc
pop
shr
sub
ror
pop
push
push
lea
push
push
push
push
call
add
add
cwtl
add
test
add
add
add
mov
xchg
add
xchg
pop
leave
pop
stc
filds
mov
sti
add
ret
pop
add
test
add
xchg
push
test
mov
sub
pop
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
jecxz
add
add
add
mov
add
add
mov
int3
sti
stc
add
mov
add
jp
jb
gs
xchg
add
xlat
push
pop
addl
jo
add
fnclex
add
pop
add
add
jne
lods
out
add
pushf
mov
sub
pop
mov
push
add
add
inc
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
add
faddl
jge
cltd
sbbb
add
fmulp
add
pusha
add
mov
jbe
je
add
rolb
push
add
in
pop
stos
add
pop
pop
push
roll
stos
mov
add
mov
add
add
push
add
sub
pop
jmp
push
rol
rol
pop
push
push
lea
push
lea
push
push
push
call
add
fs
add
mov
std
scas
pop
lcall
mov
add
imul
icebp
add
in
in
pop
mov
add
push
add
sub
inc
pop
push
push
push
shl
rol
sub
ror
pop
push
push
ror
lea
xor
pop
push
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
cwtl
add
add
jb
pushf
pop
mov
lock
xchg
call
push
movsl
add
movsl
jecxz
add
lahf
add
add
sub
pop
pop
push
rol
rol
pop
pop
pop
push
xor
pop
pop
leave
push
lea
push
push
lea
push
call
roll
mov
test
jl
mov
add
mov
in
insb
jo
fwait
xchg
pop
addr16
add
add
push
lret
add
lea
in
add
mov
jmp
add
add
cli
mov
add
jmp
fadds
add
sub
pop
ret
push
push
push
push
push
push
lea
push
lea
push
push
push
call
scas
add
out
jl
add
pop
add
add
rclb
imul
add
xchg
add
add
add
add
pop
push
push
push
lea
push
push
lea
push
lea
push
call
add
xchg
scas
xchg
add
mov
xlat
mov
pop
push
bound
ret
push
fwait
out
add
xchg
xchg
mov
mov
in
call
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
ja
add
in
filds
add
add
add
repnz
add
jno
clc
add
loopne
add
cmpsb
cmpsb
adc
mov
in
add
arpl
add
popa
add
fiaddl
add
arpl
add
push
icebp
call
add
mov
lods
add
jle
int3
sub
pop
add
push
push
push
push
push
call
jle
add
imul
enter
jge
add
cli
ja
add
pop
add
add
add
jmp
add
add
pop
add
push
ja
add
add
push
pop
pop
scas
add
add
xchg
jb
jns
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
icebp
add
out
add
jno
add
imul
jns
mov
add
add
add
lcall
push
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
movsb
push
add
ja
test
jecxz
add
stc
ja
mov
in
mov
leave
mov
add
add
sbb
bound
in
scas
lret
cmc
shll
testl
notl
inc
cld
add
add
addl
push
pop
test
je
push
lea
pop
mov
push
rol
shl
pop
pop
push
ror
pop
pop
pop
push
sub
inc
add
pop
pop
push
ror
pop
leave
push
dec
pop
ret
push
push
rol
pop
mov
push
add
sub
add
rol
pop
add
push
push
inc
shl
shl
ror
pop
push
push
push
push
push
call
pop
fldenv
add
stc
add
aad
add
add
add
add
add
add
enter
jmp
addr16
lret
faddl
mov
shl
add
add
andl
lock
lcall
push
push
push
lea
push
call
add
test
fildl
add
test
xchg
lods
stc
add
add
add
xlat
add
add
add
xchg
add
imul
hlt
lcall
inc
cld
add
add
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
int
add
call
pop
in
add
jo
add
jo
outsl
add
add
add
in
add
add
add
loope
andl
add
movsb
add
addl
push
push
push
push
lea
push
lea
push
lea
push
call
stos
lds
std
add
int
add
add
jl
add
jb
add
add
je
add
cld
add
add
mov
push
add
pusha
add
add
loop
cld
add
ficomps
add
rclb
add
pop
call
push
lea
push
lea
push
push
push
push
push
push
call
xchg
add
popa
add
mov
repnz
add
add
mov
xchg
in
out
add
mov
gs
add
add
fsts
cmc
push
mov
jecxz
shll
into
cmc
add
jns
je
add
out
in
loopne
lcall
inc
cld
pushl
push
push
push
push
push
call
add
out
add
add
mov
add
in
rolb
repnz
xchg
aad
add
mov
push
mov
mov
push
add
in
xchg
pop
mov
lcall
ljmp
push
add
pop
call
cmpl
jne
push
ror
shl
add
pop
pop
push
push
push
call
mov
mov
loope
lods
add
lods
add
les
add
mov
outsl
mov
xchg
lock
stc
pushf
mov
in
hlt
pop
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
loopne
mov
add
add
in
xchg
cmpsl
add
add
xchg
jo
negl
fldenv
mov
add
pop
add
add
std
loope
test
add
mov
mov
add
arpl
fadds
scas
add
aad
pop
cmpl
scas
stc
jne
stc
sub
pop
pop
leave
push
inc
shl
add
pop
ret
push
rol
shl
not
pop
push
mov
push
push
lea
push
push
push
push
call
push
mov
pop
shl
fs
jl
addr16
mov
add
cltd
add
jl
mov
rcr
add
xchg
jne
repnz
pop
add
push
push
shl
shr
pop
push
push
push
shr
sub
rol
pop
push
push
shl
shl
shr
rol
pop
movl
push
push
push
push
push
call
rcr
xchg
add
add
add
add
out
test
push
add
add
insb
ljmp
add
cwtl
stc
add
out
cmpsb
add
lock
mov
sub
pop
push
push
dec
shl
pop
call
push
push
push
push
push
push
call
add
call
add
lret
in
rcrb
jbe
add
mov
mov
out
jb
pop
pop
ja
add
add
int3
add
add
sti
add
add
add
aam
stos
add
scas
sub
pop
push
push
ror
add
rol
pop
call
subl
push
shl
pop
cmpl
jne
pop
push
push
push
push
push
call
add
push
add
jle
mov
add
push
les
mov
add
in
add
sti
add
pop
jne
cld
xchg
mov
push
mov
jge
add
out
sub
pop
pop
push
add
pop
pop
pop
push
inc
rol
pop
leave
ret
push
xor
not
pop
push
mov
push
push
push
lea
push
call
lret
add
test
add
xlat
add
scas
add
add
add
add
lods
jne
sarl
mov
mov
sub
pop
add
push
push
lea
push
push
push
push
push
call
add
add
add
add
nop
add
cmpsb
add
cli
add
ljmp
add
push
add
out
int3
lods
fwait
pusha
stos
shl
xchg
add
add
add
jno
push
add
add
lcall
push
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
jl
add
mov
jl
add
jp
add
cmpl
add
xchg
add
pop
lock
call
add
add
jecxz
add
push
add
add
add
lods
addl
lcall
push
push
add
add
shr
push
and
add
not
xor
sub
add
shr
pop
shl
xor
lea
pop
push
lea
push
call
add
fiaddl
add
out
lods
adcb
mov
add
xchg
ljmp
lods
add
cmpl
xchg
jl
add
out
add
in
clc
pop
pushl
push
sub
not
pop
call
call
push
pop
mov
push
add
sub
pop
lea
sub
push
sub
lea
pop
mov
push
rol
pop
shr
push
push
push
push
lea
push
push
push
push
push
lea
push
call
out
add
ret
int3
cld
add
cmpsb
pushf
faddl
rcll
pusha
jno
shrb
lcall
les
add
stos
add
out
pushf
add
mov
add
subl
mov
add
pop
push
mov
mov
add
enter
scas
jl
idivl
cli
xchg
sub
pop
add
push
rol
inc
add
pop
mov
push
push
push
push
push
lea
push
call
fldl
fidivs
jnp
add
add
add
out
add
sahf
aam
nop
push
add
mov
pop
mov
add
add
mov
push
add
add
fists
mov
lcall
add
test
xchg
enter
testl
sub
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
add
mov
lods
jb
shll
mov
add
mulb
aam
std
data16
mov
incb
gs
mov
add
add
in
loopne
add
add
push
rol
add
pop
mov
push
sub
pop
mov
push
inc
pop
cmp
jne
push
sub
pop
cmp
jne
mov
push
push
push
push
push
push
push
push
push
call
mov
lret
addr16
push
add
stc
mov
add
add
lahf
mov
add
fsubr
xchg
add
add
add
add
xchg
rcll
add
cld
out
pop
loopne
add
mov
add
stos
imul
addb
icebp
jmp
sub
pop
movl
jmp
push
lea
not
shr
pop
mov
mov
push
shr
sub
pop
sub
jne
push
push
push
push
push
lea
push
push
push
push
call
lret
add
not
hlt
add
mov
add
pop
add
jbe
testb
add
leave
add
add
scas
add
lds
add
add
mov
add
add
mov
sub
pop
mov
movl
push
push
push
push
push
push
push
lea
push
push
call
mov
lods
jne
add
add
js
stos
pop
jb
popf
add
test
add
jge
add
xchg
xchg
add
push
testl
push
testb
hlt
jle
add
jno
into
in
push
stc
add
sub
pop
jmp
push
lea
push
push
push
push
push
push
push
call
out
add
mov
hlt
mov
cmpsb
add
mov
mov
xchg
add
mov
mov
pop
add
loop
add
movsb
jbe
push
add
mov
stos
add
mov
in
loopne
mov
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
stos
push
add
add
mov
add
arpl
add
add
out
add
mov
xlat
add
out
add
add
pushf
cwtl
add
mov
mov
push
out
jl
ret
jne
add
push
add
sub
pop
mov
push
rol
pop
cmp
jne
push
push
lea
push
lea
push
call
add
add
add
add
lods
add
jl
add
lret
out
add
bound
add
cmpsl
add
fistps
jmp
leave
add
add
xlat
add
insb
lods
add
in
add
imul
add
add
add
xchg
lcall
add
mov
add
mov
add
sub
pop
mov
push
xor
lea
sub
shr
pop
movl
jmp
push
not
not
pop
mov
push
push
push
push
lea
push
push
push
push
call
scas
out
jp
mov
ret
add
add
add
add
fsubl
add
jno
std
movsb
add
add
jnp
push
in
loopne
cmpw
jne
push
push
push
push
push
push
lea
push
push
push
call
xchg
nop
fbstp
add
add
add
movsb
mov
out
mov
fucomi
jl
mov
outsl
add
add
insb
bound
mov
add
add
repnz
add
outsl
stos
mov
add
std
sub
pop
mov
movl
push
shr
lea
pop
jmp
push
push
lea
push
push
lea
push
lea
push
push
call
add
jne
add
popa
mov
mov
pushf
lret
pusha
mov
into
lret
addr16
add
add
incb
push
add
pop
shrb
add
add
add
add
adcl
push
mov
add
sub
pop
pushl
push
push
push
lea
push
push
call
add
mov
out
add
add
les
mov
pop
xchg
push
scas
enter
cltd
push
xchg
mov
test
add
add
add
lds
in
add
add
add
add
arpl
jb
mov
in
test
add
add
mov
xchg
pop
testl
in
pop
pop
mov
push
lea
pop
mov
push
add
add
pop
mov
push
push
push
xor
add
add
sub
xor
lea
pop
add
add
pop
push
push
lea
push
call
loope
add
add
add
out
fadds
mov
add
add
test
mov
popa
jo
add
std
pop
xchg
mov
add
pop
push
call
push
dec
shl
shl
pop
cmpl
je
push
push
push
xor
add
ror
dec
shr
sub
sub
add
lea
pop
sub
dec
pop
push
dec
shl
add
shl
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
fsubr
ljmp
cli
pop
add
push
add
xchg
add
jne
mov
shll
add
cmpsl
roll
mov
mov
jno
mov
add
add
in
fdivr
lcall
mov
add
push
inc
xor
shl
add
pop
cmpl
je
push
push
lea
not
shr
push
or
inc
add
rol
sub
sub
sub
pop
shl
pop
push
lea
push
push
push
lea
push
push
call
addl
into
push
lret
push
loopne
movsl
add
mov
mov
add
repnz
scas
mov
popf
push
jl
jle
movsb
add
add
mov
sub
pop
push
call
push
push
lea
push
push
push
lea
push
lea
push
call
add
mov
nop
add
mov
lret
add
add
movsl
add
add
add
cmpsb
add
add
add
add
add
mov
cmc
stc
add
movsb
mov
add
jo
sub
pop
cmpl
je
push
push
shl
shl
rol
push
and
add
dec
sub
sub
add
rol
pop
dec
sub
shr
pop
push
push
push
push
call
fstpl
xchg
mov
add
add
add
add
pop
jl
ret
jge
bound
jecxz
popa
mov
andl
add
data16
add
lcall
ljmp
add
add
lds
xchg
rcl
mov
add
into
mov
add
sub
pop
push
push
lea
add
shl
pop
call
cmpl
je
push
push
ror
push
or
inc
add
sub
sub
dec
ror
pop
not
add
not
not
pop
push
sub
rol
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
in
cmc
jne
add
imul
lahf
xchg
add
imul
jmp
adcb
add
add
add
push
pop
lds
fdivrl
lods
cltd
lock
add
leave
jb
repnz
mov
in
fcompl
sub
add
mov
mov
add
call
bound
enter
in
add
add
add
pop
fildl
mov
add
add
outsl
add
out
fwait
popf
pop
addl
add
mov
in
pop
cmpl
je
push
push
lea
dec
push
or
not
add
not
inc
ror
sub
add
shr
pop
sub
ror
pop
push
rol
pop
push
call
push
dec
not
ror
add
pop
cmpl
je
push
push
add
ror
add
sub
push
and
add
rol
ror
add
sub
xor
pop
rol
sub
inc
dec
pop
push
push
push
push
lea
push
call
outsl
shlb
add
jnp
mov
faddp
outsl
add
enter
mov
in
add
add
mov
mov
add
cli
ljmp
add
add
mov
bound
mov
add
add
push
add
mov
add
cli
jne
bound
add
lcall
push
push
push
push
push
lea
push
push
push
call
shll
in
sti
add
add
sbbl
and
lock
xchg
add
add
mov
xchg
mov
ljmp
add
add
add
add
std
cld
addr16
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
call
in
add
add
add
stc
lods
xchg
add
xchg
in
int
mov
add
add
fbstp
pop
lahf
cltd
pop
xchg
xchg
movb
add
xchg
stos
add
lcall
push
add
jl
cli
add
add
xchg
leave
in
add
lcall
pop
cmpl
je
push
push
not
push
sub
add
xor
shr
sub
xor
shr
pop
shl
ror
pop
push
push
push
lea
push
push
call
mov
add
iret
add
add
stc
add
in
add
mov
pushf
add
add
add
add
add
add
cwtl
adc
add
mov
lcall
call
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
nop
icebp
mov
test
add
add
testb
add
add
add
ficomps
fwait
mov
mov
add
loopne
lcall
cmp
test
add
push
push
shr
shl
add
push
and
add
sub
inc
sub
shr
pop
xor
add
add
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
lcall
add
xchg
xchg
movsb
push
int3
stos
lret
add
ret
movsb
insb
jl
add
add
popl
add
loopne
jo
add
push
stos
add
add
add
add
stc
mov
loope
scas
add
push
lea
push
call
pop
add
movb
add
mov
pop
div
mov
add
cltd
mov
nop
fdivp
pop
jae
in
stos
shll
push
mov
xchg
add
add
fistpl
add
jns
sub
pop
call
push
lea
pop
cmpl
je
push
push
shl
add
not
not
push
or
inc
add
sub
sub
pop
add
pop
push
push
lea
push
push
push
push
push
call
out
int
add
jle
pop
push
imul
mov
test
cld
testl
jns
add
les
icebp
add
xchg
add
add
mov
loop
add
add
add
mov
add
cld
add
push
add
sub
pop
push
call
push
push
lea
push
call
cmpsb
add
push
add
add
nop
add
push
add
nop
insb
data16
add
xchg
add
repnz
je
jnp
aad
js
mov
into
gs
popf
add
je
arpl
lock
movsl
mov
pushf
sub
pop
cmpl
je
push
push
dec
push
xor
add
sub
shl
dec
pop
shl
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
jle
mov
add
addr16
out
enter
jno
test
popf
jl
scas
test
add
add
stos
add
mov
sub
pop
push
call
push
push
call
add
decb
add
loop
fildl
sarl
leave
jle
add
xchg
add
loop
add
movsb
shll
ja
xchg
add
std
add
push
popf
int3
subl
add
mov
arpl
add
push
jmp
movsb
cmpsl
mov
fsubl
add
in
xchg
repnz
jb
add
mov
lods
sarb
in
clc
pop
cmpl
jne
push
push
call
aad
pop
push
stos
jo
add
add
add
push
xchg
out
push
add
mov
mov
mov
add
add
mov
fs
pop
mov
movl
push
not
shr
xor
dec
pop
jmp
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
fwait
stos
icebp
push
add
add
out
xchg
rolb
in
mov
add
mov
fninit
jmp
xchg
jne
rorl
int
into
lahf
test
add
mov
arpl
mov
in
fdivr
lcall
rclb
xchg
lea
push
lea
push
call
add
jmp
popf
xchg
add
add
js
pop
aam
xchg
aam
stc
rolb
ret
add
cli
jo
add
shrl
add
lahf
popf
add
mov
add
add
mov
add
add
add
sbbl
add
lcall
pop
push
add
pop
pop
push
sub
inc
lea
pop
pop
push
push
push
push
call
lahf
jns
flds
add
xchg
add
add
lret
mov
out
add
add
add
js
add
push
imul
push
add
leave
mov
out
sub
pop
pop
push
lea
push
push
push
call
roll
lds
xchg
jne
mov
loop
jb
stos
add
mov
or
push
add
xorl
stc
lcall
in
arpl
add
add
add
roll
push
clc
add
add
roll
add
add
aad
std
arpl
add
add
les
fbstp
mov
lcall
push
dec
pop
ret
push
pop
push
push
shl
rol
shl
sub
pop
mov
push
lea
shr
pop
add
push
xor
not
add
pop
cmpl
jne
push
push
sub
inc
push
and
add
ror
add
sub
shl
pop
not
pop
push
push
push
lea
push
push
push
lea
push
push
call
xorb
scas
add
out
mov
mov
add
mov
jno
add
lret
add
mov
add
mov
xchg
xchg
imul
add
movsl
lret
add
clc
iret
add
xchg
xchg
pop
add
jne
nop
cltd
pop
je
icebp
bound
lcall
jne
call
push
shr
xor
pop
push
push
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
iret
add
add
add
rolb
xchg
mov
sahf
flds
add
add
lcall
dec
sbb
add
test
add
push
lea
push
push
call
add
xchg
nop
popf
add
leave
xlat
pop
fcmovb
mov
in
in
add
fmul
iret
into
fadds
jp
int3
divl
popl
add
add
add
add
hlt
pop
mov
push
push
lea
push
call
movsb
insb
add
add
add
mov
add
mov
lahf
add
jl
clc
popf
pop
xchg
add
popa
add
out
add
in
popa
cwtl
notl
int3
jle
in
hlt
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
add
pushf
xchg
in
add
jge
jp
cmpsb
lds
pop
int3
add
rclb
mov
add
add
testl
jecxz
js
jnp
pop
sub
pop
ret
jmp
push
push
call
xchg
sti
add
mov
arpl
mov
add
cld
add
add
mov
fildl
add
mov
pop
lret
sahf
jne
add
mov
add
add
movl
jp
mov
add
add
fadds
xchg
lock
add
xorb
xchg
sahf
jge
sub
pop
cmpl
jne
push
push
rol
sub
shl
push
or
inc
add
not
sub
inc
pop
shl
pop
push
lea
push
push
call
add
add
mov
add
push
movsl
add
jns
add
mov
add
fcmovu
xchg
jnp
cmpsl
add
push
jno
add
lock
jo
add
call
add
add
add
js
add
push
add
add
add
xchg
pop
mov
cmc
lds
std
lock
add
sub
pop
pushl
call
push
lea
push
push
push
push
call
add
push
enter
pop
sar
jne
add
push
mov
movsl
lods
pusha
addb
add
jecxz
add
add
pop
cli
add
add
add
jmp
add
lcall
add
add
pop
call
push
push
lea
push
push
push
push
push
push
call
scas
aam
mov
out
ror
pushf
roll
shlb
add
testb
addl
jp
pop
cmpsb
jo
add
mov
pop
sarl
add
repnz
add
add
add
add
iret
icebp
add
cld
add
jmp
cmpl
je
push
inc
add
add
pop
cmpl
jne
push
push
push
push
lea
push
call
add
add
leave
xchg
nop
mov
out
mov
jl
mov
stc
sahf
mov
ja
stos
pop
rolb
incb
add
add
imul
push
inc
xor
add
pop
mov
push
shr
dec
rol
pop
push
jmp
push
push
sub
shl
push
and
add
dec
shl
dec
sub
add
dec
shr
pop
dec
pop
push
push
push
push
call
xlat
mov
mov
add
add
add
add
add
add
jge
add
add
pop
add
in
add
in
jmp
loop
add
stc
xchg
add
imul
push
pop
lret
add
rolb
gs
mov
lea
add
mov
test
mov
in
lock
lcall
jne
push
xor
add
ror
pop
call
push
push
lea
push
push
push
lea
push
push
push
call
xchg
add
add
add
pop
push
addr16
mov
add
add
mov
add
mov
add
add
in
pop
add
push
sub
pop
call
push
push
sub
push
and
add
sub
shl
lea
xor
pop
inc
inc
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
enter
imul
add
xchg
sahf
fiaddl
add
add
add
movl
andl
add
add
add
add
imul
mov
stc
add
ficoms
sub
pop
pushl
push
sub
dec
add
pop
call
push
push
push
lea
push
push
push
call
add
add
push
fdivr
mov
jne
add
add
imul
xchg
add
movsl
pop
add
loop
add
add
clc
mov
add
jp
cwtl
xlat
add
pop
add
bound
add
add
data16
lods
les
mov
in
call
ret
sti
and
push
add
push
or
inc
add
dec
sub
sub
sub
dec
pop
xor
pop
push
rol
dec
dec
xor
pop
pushl
push
push
push
lea
push
call
fdiv
ljmp
fdivs
add
imul
popf
mov
pop
nop
mov
xlat
xchg
add
ret
cmc
push
add
add
fadd
add
mov
add
add
pop
jbe
pop
add
add
int
pop
out
add
add
lcall
inc
and
add
call
push
push
add
shr
ror
push
or
inc
add
xor
sub
dec
rol
sub
xor
pop
lea
add
pop
push
push
push
call
les
add
out
add
add
out
add
add
push
add
push
adcl
mov
in
hlt
lcall
jne
push
lea
push
push
push
call
pop
add
push
jno
fists
add
pop
jmp
xchg
xchg
stos
mov
add
add
add
push
mov
add
pop
in
les
xchg
add
sub
pop
call
call
push
push
add
shl
push
or
inc
add
rol
shr
ror
sub
inc
lea
lea
pop
pop
push
ror
ror
ror
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
mov
add
mov
cld
push
std
add
push
xchg
add
sub
pop
call
push
push
push
lea
push
call
aad
clc
mov
xlat
ret
ljmp
addb
scas
xlat
stos
add
add
lods
jl
mov
nop
popl
insb
scas
ret
xchg
add
add
add
sub
pop
call
push
push
inc
inc
push
and
add
rol
sub
not
shl
shr
pop
lea
inc
pop
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
sahf
mov
xchg
xchg
in
rclb
scas
rcrl
lods
push
jbe
xchg
xchg
mov
cmpsl
add
add
add
cwtl
add
js
fsave
add
aad
jno
add
std
sub
pop
pushl
call
push
push
lea
push
push
push
push
push
call
add
stc
out
mov
imul
in
movl
cld
fldl
popa
add
in
add
test
into
arpl
mov
clc
add
lret
mov
lahf
clc
jbe
jne
add
test
add
add
add
add
add
add
out
idiv
cmpb
scas
xchg
add
sub
pop
call
push
push
add
add
lea
push
or
inc
add
add
shl
rol
rol
sub
inc
pop
lea
ror
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
mov
pop
sbbb
lcall
test
add
add
in
add
add
xchg
xchg
ljmp
divl
js
add
ret
add
xchg
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
cwtl
mov
cmpsb
lret
int
lahf
lahf
xchg
cld
jl
ja
pop
pop
add
mov
add
add
rcr
incb
add
xchg
add
xchg
mov
push
mov
movsl
xor
add
out
push
add
mov
rolb
xchg
add
adc
add
push
push
push
push
call
add
pop
jns
ja
repnz
jae
add
jbe
pop
add
pop
jnp
mov
lea
add
add
mov
xchg
add
add
mov
push
hlt
js
pop
add
icebp
add
add
icebp
jle
bound
add
lahf
pop
add
xchg
add
loopne
add
add
lcall
lock
lcall
shrb
nop
js
push
ror
add
shr
push
and
add
shl
shl
sub
xor
shl
pop
sub
pop
push
shr
add
ror
pop
pushl
push
lea
push
lea
push
push
push
push
push
call
add
add
mov
rcr
pop
cwtl
add
mov
jecxz
mov
jmp
add
mov
pop
les
mov
add
add
add
add
cmpsl
pop
xchg
add
mov
xchg
add
call
call
push
push
ror
rol
dec
push
sub
add
not
rol
sub
add
sub
inc
pop
xor
shr
pop
push
shl
pop
pushl
call
push
push
push
push
push
call
cmpsb
in
cmpsb
int
popa
mov
add
add
add
mov
fidivrs
add
enter
add
outsl
add
addl
xchg
add
add
out
leave
int
mov
add
jle
shrl
add
jbe
mov
nop
loopne
jle
add
xchg
add
addb
jle
add
lock
shrb
inc
das
mov
not
sub
push
and
add
add
sub
add
xor
add
pop
ror
lea
sub
pop
push
dec
shl
pop
pushl
push
inc
pop
call
lea
push
push
push
lea
push
call
xchg
add
movb
add
insb
add
xlat
add
add
mov
pop
add
bound
roll
outsl
add
nop
add
testb
cmc
loop
add
add
mov
fcom
add
add
add
fmul
add
pop
push
push
ror
pop
call
push
push
sub
inc
push
or
inc
add
shr
not
shr
sub
not
rol
pop
shr
shl
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
cmc
filds
jl
pop
rclb
xchg
push
add
add
scas
add
add
loop
ljmp
hlt
pop
mov
out
jbe
arpl
cmc
out
fiaddl
callw
mov
les
imul
in
fdivr
lcall
jne
push
ror
pop
call
call
push
push
rol
push
sub
add
xor
sub
rol
pop
sub
dec
pop
push
sub
sub
pop
pushl
call
push
push
lea
push
push
push
push
lea
push
call
outsl
jnp
sahf
jae
add
leave
add
mov
add
movsl
rorl
add
mov
add
test
add
push
faddl
lret
lods
push
std
out
add
add
add
mov
add
add
leave
iret
lock
in
lcall
shrb
mov
push
xor
shr
push
xor
add
add
rol
sub
lea
xor
sub
pop
shr
pop
push
not
shr
shr
pop
pushl
push
sub
sub
add
pop
call
push
push
push
push
push
push
push
push
push
call
loop
xchg
jno
add
popf
xchg
jb
add
add
test
mov
mov
add
add
add
add
loope
mov
xchg
test
jno
sub
pop
call
push
push
not
ror
rol
rol
push
or
not
add
xor
sub
add
pop
xor
pop
push
lea
sub
pop
pushl
push
lea
push
call
cli
mov
mov
add
rclb
lea
add
add
mov
idivl
popa
ret
outsl
sti
add
shll
mov
int
add
clc
lcall
in
add
push
push
add
inc
shr
push
xor
add
rol
sub
add
ror
pop
inc
rol
not
pop
push
push
sub
push
push
pop
add
inc
lea
shr
sub
ror
ror
pop
add
lea
not
not
pop
push
push
push
push
push
push
push
push
call
add
add
pusha
imul
add
incb
pusha
pop
lahf
add
jo
jbe
push
add
add
out
addb
add
in
loopne
lcall
rclb
push
push
push
push
push
push
lea
push
push
call
ljmp
data16
add
sti
jne
call
add
add
add
lret
add
add
xchg
add
pop
cwtl
add
add
fcomps
push
push
push
push
push
call
mov
out
add
add
loopne
push
pushf
scas
mov
add
mov
nop
in
add
mov
add
pushf
add
add
add
add
je
mov
iret
add
in
add
lods
testb
pop
add
sub
pop
dec
jne
push
not
pop
call
mov
push
push
call
mov
filds
add
add
add
add
mov
idiv
fnstcw
xchg
add
mov
add
add
lret
add
mov
add
mov
jbe
add
add
add
pop
arpl
jge
fmul
add
sub
pop
int
push
push
push
call
push
stos
add
mov
add
roll
xchg
lock
xchg
movl
mov
push
add
push
add
popf
push
add
filds
add
loop
repnz
add
add
test
mov
mov
jp
mov
mov
in
hlt
lcall
pushf
and
ljmp
aaa
mov
push
xor
push
push
pop
add
rol
sub
xor
add
pop
inc
not
inc
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
clc
out
iret
add
lcall
add
add
add
add
add
leave
add
mov
add
icebp
popf
into
addb
leave
sti
push
mov
cld
add
add
mov
shlb
imul
cltd
add
add
pop
jl
loope
xlat
scas
jbe
add
add
jp
sub
pop
pushl
push
ror
pop
call
push
add
rol
pop
push
push
add
sub
pop
call
push
push
sub
sub
push
sub
add
rol
xor
sub
add
xor
pop
shr
pop
push
add
xor
xor
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
lcall
mov
test
add
mov
nop
add
add
int3
pop
mov
add
scas
lcall
cli
shrl
sub
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
call
outsl
idiv
pop
mov
shll
lret
add
iret
fwait
mov
add
add
xchg
mov
push
add
jl
ret
add
lods
cltd
flds
sub
pop
call
push
xor
inc
inc
pop
mov
push
push
push
call
mov
pop
icebp
xchg
sbbl
add
test
out
add
add
lock
out
jle
jge
enter
add
sahf
mov
lea
add
add
roll
mov
mov
call
add
lcall
pushf
and
ljmp
ljmp
push
fimull
lods
shl
push
xor
add
shl
ror
sub
dec
pop
shl
pop
push
lea
push
lea
push
lea
push
push
push
call
icebp
add
add
add
xchg
bound
lret
shrb
mov
jecxz
add
mov
pop
add
lcall
add
in
insb
cmpsl
mov
call
push
add
ror
pop
call
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
add
stc
add
mov
add
lock
movsl
add
add
add
pop
jle
mov
pop
add
add
pop
add
pop
add
lcall
push
lea
push
push
push
push
push
lea
push
call
add
add
add
mov
add
add
js
xchg
xchg
fisubrs
je
hlt
xchg
lock
add
add
movsl
mov
add
lea
add
mov
in
in
lcall
add
push
push
push
push
push
push
push
lea
push
call
cld
incb
cld
add
add
add
add
add
test
add
aad
add
stos
xlat
add
mov
add
add
add
add
jne
push
push
not
push
or
not
add
dec
sub
sub
not
add
pop
rol
add
sub
rol
pop
push
shl
ror
pop
push
call
push
push
sub
push
xor
add
dec
sub
lea
sub
pop
shr
sub
pop
push
lea
pop
pushl
push
lea
lea
pop
call
push
push
ror
rol
shl
dec
pop
call
push
push
lea
ror
not
push
and
add
lea
dec
shr
sub
add
pop
shr
pop
push
add
pop
pushl
push
sub
not
dec
pop
call
call
push
shr
dec
pop
pushl
push
dec
pop
mov
push
not
xor
xor
pop
jmp
push
push
shr
sub
sub
push
or
inc
add
lea
dec
sub
sub
inc
sub
pop
not
ror
pop
push
shl
ror
xor
pop
pushl
push
sub
add
rol
pop
call
push
push
ror
shr
pop
call
push
push
xor
push
push
pop
add
shr
shl
sub
pop
shl
lea
not
inc
pop
push
add
inc
inc
pop
pushl
push
push
push
push
lea
push
push
push
call
add
stc
loopne
add
stos
lds
sti
add
jle
mov
lcall
jne
std
add
repnz
xchg
movsl
add
mov
jo
icebp
add
cmpsb
jo
add
in
in
lcall
stos
adc
add
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
xlat
shrl
add
xchg
push
add
arpl
push
add
add
testl
ja
add
test
jbe
xchg
leave
jno
out
call
les
sar
xchg
mov
lock
jns
add
mov
add
mov
in
fdivr
lcall
rclb
mov
subb
loopne
push
push
lea
push
push
push
lea
push
call
xchg
iret
mov
jl
ror
rolb
movb
add
loop
add
add
mov
mov
add
add
bound
pop
mov
lcall
add
int3
jne
mov
add
add
lcall
add
push
push
push
call
cwtl
out
add
add
add
add
insb
sti
add
jle
push
mov
add
push
add
mov
add
add
mov
pop
mov
lods
rcr
xchg
pop
xchg
fiaddl
pop
fiaddl
add
jecxz
add
fcompl
cmpsl
add
add
jmp
add
lcall
pop
push
push
call
jae
cltd
add
add
pop
repnz
mov
add
push
add
popf
add
add
movb
add
add
add
in
add
cwtl
popf
lret
pusha
repnz
addb
cld
lods
ficomps
jns
ja
pop
add
add
mov
sub
pop
pop
push
dec
sub
pop
xor
inc
push
push
lea
push
push
push
push
push
call
mov
add
sti
sahf
cltd
add
pushf
mov
add
mov
add
ret
add
add
add
ja
add
mov
push
mov
roll
fstps
lret
aad
sub
pop
ret
push
push
push
push
push
push
push
push
call
add
add
xchg
add
xchg
add
add
fisubs
ret
jns
enter
add
add
pusha
arpl
repnz
in
loopne
leave
push
push
push
push
push
call
bound
lahf
mov
pop
shrb
jecxz
icebp
aam
repnz
pop
mov
push
add
divl
pusha
jbe
add
jecxz
loop
lods
mov
sub
pop
ret
push
ror
pop
push
push
dec
pop
mov
push
push
push
push
push
lea
push
lea
push
call
add
add
add
add
add
push
je
leave
mov
mov
add
lret
add
add
bound
mov
sahf
jge
loope
stc
lret
add
xchg
pop
push
add
add
aad
cli
add
add
mov
in
cmpl
jne
push
push
lea
push
push
push
push
push
push
push
push
call
add
pop
add
add
ljmp
outsl
jle
aad
add
add
push
add
js
rolb
mov
fistpll
add
add
mov
mov
fdivr
lcall
inc
and
push
push
push
push
push
push
push
lea
push
call
push
jge
jmp
add
insb
in
mov
jo
movsb
lret
mov
add
lret
data16
jae
ja
flds
add
add
jl
add
jns
sar
mov
fcomps
push
xchg
ja
add
fldcw
in
loopne
lcall
or
add
mov
push
not
sub
pop
and
xor
push
shr
xor
pop
xor
push
push
lea
push
call
add
iret
add
add
add
ficoml
push
test
andb
add
add
xlat
pusha
add
int
call
icebp
jns
add
add
xchg
add
pop
add
enter
fists
mov
add
mov
mov
add
push
sub
shr
shr
add
pop
xor
dec
push
push
push
push
lea
push
call
add
xchg
rolb
mov
fwait
loopew
in
fxch
lahf
add
stc
test
js
pop
mull
add
in
lcall
jmp
jmp
push
lea
push
call
add
add
loope
cmc
add
test
mov
jb
add
mov
add
mov
in
add
pop
leave
lahf
add
add
add
rcrb
lds
ja
leave
mov
xchg
ficomps
add
xlat
stc
hlt
add
in
clc
lcall
add
add
push
push
push
push
push
push
push
call
jl
pop
xchg
add
je
mov
mov
iret
add
mov
add
jge
roll
and
add
roll
cmpsb
add
stc
add
scas
add
add
lcall
xor
lea
push
push
push
push
call
lds
lods
add
mov
cltd
add
ficoml
add
add
push
jb
add
mov
mov
pop
ja
pop
xchg
add
jecxz
shl
test
pop
jle
subb
jmp
push
sub
inc
xor
pop
cmp
jne
push
shr
pop
mov
lea
push
push
lea
push
call
fyl2xp1
mov
add
fildll
in
add
out
pop
add
int
add
pop
hlt
mov
add
test
jae
out
add
jmp
idivl
add
add
stos
jno
add
andb
sub
pop
sub
push
rol
add
ror
pop
mov
push
lea
pop
shr
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
add
movl
lock
je
add
scas
add
add
add
mov
ret
fwait
into
pop
mov
stos
add
mov
pop
sub
pop
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
xchg
add
idivb
add
cltd
fs
add
test
scas
add
add
add
add
mov
data16
pop
sub
pop
sub
push
lea
push
lea
push
lea
push
call
adcb
mov
std
stos
scas
add
jecxz
sbbl
push
shll
fs
add
jecxz
push
mov
add
add
add
ja
mov
mov
add
xchg
add
xchg
mov
jle
add
add
add
in
lock
lcall
xor
mov
rep
push
push
push
push
push
push
push
push
call
mov
addl
in
xchg
add
pop
push
out
push
add
add
add
add
out
mov
xchg
mov
add
mov
push
lcall
test
js
js
lods
mov
xchg
les
mul
sub
pop
pop
shr
push
lea
push
lea
push
push
call
fldl
data16
movb
test
add
pop
frstor
lds
cli
pop
enter
mov
add
cltd
add
clc
add
add
sub
pop
and
push
shl
dec
pop
sub
cmp
jne
push
add
pop
leave
push
dec
add
pop
ret
push
push
lea
push
push
push
push
push
push
call
iret
add
jmp
add
add
leave
movsl
in
in
add
add
add
lods
push
roll
push
add
int
mov
out
rcrl
add
add
jno
add
push
lock
add
iret
push
sbbl
cwtl
add
in
popf
push
xchg
add
mov
loope
fs
pop
push
mov
push
sub
rol
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
mov
iret
out
push
add
loope
jmp
mov
add
popf
mov
addr16
add
add
mov
sub
pop
push
push
push
dec
dec
shr
pop
push
push
push
shl
xor
pop
push
push
lea
push
call
lods
insb
push
mov
out
xchg
add
add
popa
add
out
data16
imul
push
xchg
jnp
mov
mov
mov
add
test
add
mov
add
add
add
jmp
int3
data16
lcall
pop
or
add
pop
lea
push
push
push
push
call
in
add
add
cmc
fwait
mov
jae
int3
add
mov
add
add
add
lret
add
jne
add
xchg
add
in
fstpt
add
mov
add
add
pop
add
add
push
cltd
imul
add
std
ja
mov
lock
lcall
ljmp
mov
shr
push
xor
pop
add
mov
push
rol
add
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
fst
mov
gs
xchg
test
negb
add
in
add
insb
mov
pop
test
xchg
outsl
cli
push
xchg
add
clc
mov
in
add
add
popf
add
loop
fdivl
add
jb
in
fcompl
jnp
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
add
add
push
test
sarb
add
in
mov
pusha
add
lcall
into
mov
enter
fldl
fdivr
lcall
jge
xor
push
xor
add
dec
pop
mov
and
push
push
push
push
lea
push
push
call
add
add
add
insb
ret
aad
enter
add
in
out
lahf
add
add
lods
add
push
js
out
sub
pop
rol
rol
push
push
push
push
push
call
lds
add
push
mov
lcall
mov
add
pop
repnz
nop
std
in
mov
add
stc
mov
pop
add
lcall
add
and
bound
add
xchg
sahf
add
outsl
add
add
add
add
jge
mov
icebp
add
addl
xchg
rolb
add
add
movsl
je
add
add
mov
addr16
jns
testl
add
lahf
jnp
pusha
add
fsub
fcomi
arpl
lods
fdivr
sub
pop
inc
push
push
push
push
push
lea
push
push
push
call
add
out
pusha
xchg
mov
movl
repnz
add
xor
mov
jge
mov
xlat
add
add
mov
add
sarb
add
add
mov
add
add
popf
pop
jnp
cmpl
add
lcall
cmp
jne
add
push
not
add
add
pop
cmp
je
add
push
rol
not
rol
ror
pop
cmpl
jne
push
inc
shl
pop
xor
pop
push
push
lea
push
push
push
push
push
push
push
push
call
push
add
adcl
addl
add
add
add
lcall
add
add
add
mov
lcall
push
push
push
push
call
sahf
into
mov
clc
in
add
jb
cltd
ja
add
jle
add
fmuls
rclb
add
push
add
cmpsb
test
fwait
xlat
loopne
shl
add
lock
add
add
outsl
popa
std
shl
add
test
addb
add
loopne
add
in
lock
pop
push
add
shl
pop
pop
push
add
inc
ror
pop
pop
leave
push
lea
push
push
call
pop
test
mov
in
pop
xchg
int3
push
add
add
add
popf
shl
add
jp
nop
rolb
aam
cmc
add
mov
add
add
add
scas
cld
add
sahf
push
add
mov
shr
add
popa
xchg
ljmp
cltd
add
add
xchg
int
sub
pop
ret
push
lea
push
lea
push
push
push
push
lea
push
call
ljmp
push
mov
fnstenv
add
mov
nop
xchg
cli
xchg
out
add
jp
in
in
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
addl
add
imul
jle
push
cltd
xchg
inc
aam
enter
scas
add
jbe
ja
add
lcall
push
or
adc
fdivl
es
pop
add
repnz
out
add
fisubs
add
pusha
repnz
jae
add
mov
mov
stos
add
jp
add
into
add
add
andl
push
add
mov
jmp
aam
add
add
pop
push
add
sub
pop
mov
push
pop
cmpb
push
push
lea
push
push
push
push
push
call
fiaddl
push
add
mov
enter
mov
add
xorl
enter
add
mov
add
cli
in
in
rcrb
out
add
mov
add
mov
lcall
fdivrl
push
push
lea
push
push
call
mov
add
frstor
in
mov
add
fldt
add
out
add
jle
add
int3
add
loope
cmc
test
sti
mov
jge
mov
jle
add
sub
pop
call
push
push
push
push
push
push
lea
push
call
add
pop
add
rcrl
rcr
add
xlat
popa
add
lods
mov
stos
add
add
xor
pop
push
lea
add
dec
pop
pop
push
sub
inc
pop
pop
push
push
push
push
push
push
push
push
call
add
add
addl
mov
add
add
popa
add
mov
add
jb
xchg
jp
pop
xchg
popa
icebp
add
mov
mov
xlat
add
add
add
loop
add
shlb
add
xchg
sub
pop
pop
pop
push
push
call
cmpsb
add
add
add
leave
mov
fwait
mov
pop
pop
fdivs
test
add
popa
test
test
xchg
sbbl
push
in
xlat
add
shr
loope
stc
add
aam
add
movl
arpl
popa
add
add
in
clc
pop
leave
ret
push
push
push
push
push
call
mov
jae
add
add
cltd
lcallw
add
add
mov
loop
add
nop
mov
jle
ja
add
add
jp
sahf
sub
pop
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
fldenv
xchg
out
arpl
int3
add
add
add
aam
iret
jp
imul
pop
jle
shrl
push
add
lea
test
pop
lods
in
outsl
add
imul
gs
pop
mov
push
push
push
push
push
lea
push
call
icebp
xchg
out
imul
loop
imul
add
add
mov
push
xchg
jo
int3
rcl
add
addr16
lahf
lcall
pop
call
xchg
jl
add
lcall
hlt
push
xor
lea
pop
push
push
add
rol
sub
pop
push
push
push
push
push
lea
push
push
push
call
add
add
jle
add
stos
add
add
out
add
imul
add
lock
mov
jp
mov
add
hlt
push
add
add
fwait
mov
add
add
add
mov
add
in
mulb
in
lcall
push
push
shl
lea
pop
mov
push
ror
ror
pop
push
pop
push
rol
add
add
add
pop
lea
push
push
push
call
add
add
add
add
add
add
jp
add
data16
add
pop
icebp
add
leave
jns
fsubrp
movsl
add
add
sub
pop
sub
mov
push
push
push
call
add
add
jb
push
scas
mov
iret
pop
mov
xlat
ljmp
cmpsl
out
add
xchg
xchg
add
add
add
add
test
int3
repnz
shrb
in
hlt
lcall
ljmp
ficoml
push
push
push
push
lea
push
call
aam
add
add
lret
lods
xchg
popf
push
popf
lahf
add
cmc
add
fcompl
mov
cltd
jo
mov
stos
arpl
jnp
push
add
add
add
add
push
les
add
cli
add
mov
mov
add
mov
test
mov
push
dec
add
pop
add
push
push
push
lea
push
lea
push
push
push
call
addl
pop
mov
jb
push
les
pop
jl
imul
loop
add
mov
jmp
jne
cld
testl
add
js
clc
mov
push
add
shl
mov
push
mov
xchg
mov
add
add
lcall
jae
popl
push
add
shr
dec
pop
mov
add
push
push
push
call
add
add
test
rcrl
js
cltd
cld
idivl
add
cli
in
add
add
lods
add
int3
jl
xchg
cmpsb
enter
inc
loop
imul
jbe
sbb
add
ret
add
add
lcall
notb
ret
rcrb
adc
push
lea
push
push
push
call
movl
loope
jle
scas
add
jno
fmul
xchg
add
add
add
test
add
add
mov
add
rolb
add
add
add
ja
stos
xchg
add
add
pop
mov
push
stc
aad
not
add
in
sub
pop
mov
push
push
lea
push
lea
push
push
call
addl
add
test
fidivrs
xchg
into
lea
add
push
add
leave
int3
jmp
mov
loop
test
xchg
add
add
lret
add
outsl
push
add
ret
add
jle
jo
flds
out
add
sub
pop
add
push
not
sub
shr
pop
xor
push
push
push
push
push
push
push
call
push
lret
add
add
mov
add
subl
mov
lahf
add
push
cmc
repnz
add
lds
shl
jbe
xchg
add
lcall
rolb
push
push
lea
push
push
push
push
push
push
push
push
call
pop
test
xchg
add
xchg
push
add
add
out
add
fisubrs
fldl
lret
add
add
add
pop
lds
push
jge
add
add
repnz
mov
adcb
in
fdivr
lcall
push
push
push
call
mov
loop
jmp
mov
frstor
out
add
aad
add
add
ja
out
add
mov
lcall
add
out
dec
inc
pop
nop
nop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
andl
in
outsl
nop
add
add
in
add
add
pop
add
add
mov
add
sub
pop
inc
nop
push
shr
pop
nop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
add
andb
into
add
mov
mov
rcr
add
mov
mov
fucom
push
ficompl
lock
int
lcall
testb
fldt
add
icebp
shl
pop
aad
add
add
pusha
mov
pop
add
add
icebp
pop
pushf
jp
add
jge
sub
pop
cmpb
jne
push
push
push
push
push
call
rcrb
fisubrl
add
add
add
addb
mov
movsl
add
add
in
jmp
add
xchg
out
add
mov
add
add
sub
pop
add
nop
push
add
xor
shr
pop
nop
push
lea
push
push
lea
push
push
lea
push
push
call
add
mov
add
in
into
add
leave
xchg
pop
lahf
movsl
add
je
add
lea
mov
push
jecxz
mov
jmp
mov
aad
add
add
add
add
inc
or
test
add
add
jl
xchg
push
call
add
add
in
add
fiadds
add
push
add
jne
xchg
in
add
jl
mov
fildl
outsl
fiaddl
in
push
jmp
add
pop
fildl
roll
add
movsb
jmp
add
jl
mov
pop
add
lcall
nop
push
sub
lea
xor
pop
inc
push
push
push
call
xchg
xchg
clc
into
add
add
add
xchg
add
in
add
xchg
add
mov
pop
add
lods
mov
add
jle
lods
jl
add
incb
add
add
add
add
add
add
jp
add
leave
xchg
mov
addb
movsb
mov
mov
aam
sub
pop
nop
nop
push
shl
ror
pop
cmp
jb
push
inc
sub
sub
pop
xor
jmp
push
sub
pop
mov
add
push
not
sub
dec
pop
movzwl
push
push
push
push
call
lretw
scas
iret
cwtl
fwait
pusha
stos
fisubs
les
andl
add
aam
cli
popf
xchg
jne
stos
enter
sarl
insb
insb
mov
add
jmp
jae
add
testb
sbbl
xor
lcall
inc
sbb
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
add
rcr
js
mov
mov
jl
rolb
add
jns
add
mov
add
fcompl
rcll
ja
push
lea
push
call
cmc
add
add
jle
add
add
in
jbe
push
clc
add
mov
test
add
sub
pop
mov
push
not
rol
pop
xor
push
ror
inc
pop
xor
push
ror
xor
pop
shl
push
lea
push
push
push
call
xchg
mov
imul
add
loop
xchg
add
add
scas
add
mov
add
repnz
add
add
mov
add
add
lods
add
add
add
imul
add
add
nop
pop
les
sub
pop
xor
push
ror
dec
pop
shl
push
xor
add
sub
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
push
add
fadds
sbb
mov
jle
mov
into
add
push
add
mov
push
mov
add
sti
add
shl
sub
scas
addr16
add
add
pop
add
clc
clc
pop
add
fidivrl
faddp
lods
sub
pop
shl
push
inc
sub
shr
add
pop
xor
push
push
push
call
add
mov
insb
xchg
add
jns
orl
pop
in
addl
test
popl
xchg
clc
xlat
pop
mov
add
les
add
nop
stos
add
jmp
lods
iret
cli
add
sub
pop
mov
add
push
shl
pop
pop
push
add
rol
shr
dec
pop
pop
pop
push
inc
pop
pop
push
sub
ror
pop
leave
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
les
add
add
xchg
cmpl
add
gs
stos
add
scas
in
add
rclb
ja
fldl
add
gs
in
rcrl
lcall
or
push
dec
rol
sub
pop
push
mov
push
rol
pop
push
push
shl
shl
pop
push
push
push
push
call
pop
add
add
stos
mov
insb
cltd
call
cmpsb
cmpsl
add
scas
icebp
ja
push
add
add
int
roll
add
add
add
cwtl
mov
mov
pop
push
add
mov
add
jns
ret
jbe
fsts
add
jne
in
clc
lcall
push
push
push
push
push
push
push
push
call
add
xchg
aam
fiadds
jle
fstps
mov
add
add
add
add
hlt
mov
add
push
pushf
mov
jo
add
add
jns
mov
xchg
pop
add
pusha
xchg
test
pop
mov
push
sub
pop
mov
push
not
sub
pop
mov
push
lea
push
push
call
add
scas
pop
add
lods
movsl
scas
std
roll
js
jo
mov
jb
xchg
imul
fcmovnbe
add
mov
out
je
fdivs
pop
mov
add
in
push
mov
mov
hlt
pop
test
je
mov
push
lea
push
push
push
call
mov
xchg
hlt
add
mov
fldl
add
out
cmpsl
add
mov
xchg
stc
shll
pop
push
mov
mov
xchg
in
mov
pusha
popf
mov
mov
add
cld
sahf
add
sub
pop
test
je
push
add
add
pop
mov
mov
push
push
push
push
push
push
call
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
jne
cld
add
lcall
pop
push
sub
pop
inc
push
lea
push
push
push
lea
push
push
call
push
pop
cwtl
jbe
xchg
outsl
popl
push
jae
fadds
lock
mov
add
xchg
faddl
add
out
lea
sarl
add
sti
out
jne
int3
roll
add
in
call
test
add
add
testl
ficoms
movsl
lea
push
call
add
scas
add
jecxz
pop
add
in
cld
pop
jge
add
add
mov
add
into
xchg
add
sti
jo
add
add
add
mov
lcall
rorb
add
add
mov
push
rol
pop
inc
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
jl
add
lods
mov
add
cwtl
out
repnz
add
push
add
add
std
add
add
add
add
cmc
arpl
outsl
movb
ljmp
cwtl
add
add
add
mov
pop
cmp
je
test
jne
push
lea
push
push
push
push
call
add
pop
add
add
lods
add
push
pop
mov
jmp
pusha
jne
add
fldenv
jmp
add
add
xchg
mov
push
pop
add
add
add
pushf
data16
add
xchg
mulb
in
in
lcall
rclb
roll
fstpl
push
add
pop
pop
push
lea
push
push
call
adc
std
xchg
fs
xchg
add
push
xlat
add
pop
xchg
add
mov
add
pop
fadd
push
push
add
add
xchg
add
xchg
add
filds
add
mov
add
lahf
outsl
sub
pop
pop
push
shl
pop
pop
leave
push
sub
rol
pop
ret
mov
push
push
push
push
push
push
push
push
push
push
call
je
cmpsb
add
cltd
push
add
stc
int3
add
lods
mov
add
add
add
int3
cmpsl
add
add
add
add
int3
jo
add
push
in
add
add
fcomps
cmp
jne
push
sub
add
inc
shr
pop
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
std
add
insb
xchg
fsts
add
idivl
add
add
add
add
iret
fidivl
roll
add
add
mov
in
mov
add
add
js
mov
jp
add
mov
fdivs
in
loopne
mov
push
lea
pop
test
je
mov
push
xor
add
pop
add
cmp
jne
push
rol
rol
pop
mov
test
je
push
push
lea
push
push
call
jb
mov
fildl
add
pop
into
flds
add
add
push
jnp
testb
rolb
add
add
add
in
lock
lcall
incw
push
push
push
push
push
push
push
call
add
sti
fcmovbe
add
add
add
add
cmc
add
push
out
sti
add
mov
movsb
loope
jp
add
rolb
add
add
imul
add
movsl
push
mov
loopne
cmp
je
push
push
push
push
push
lea
push
lea
push
call
add
add
lods
add
std
jge
mov
xchg
movb
add
fisubl
into
lret
mov
stos
call
jo
add
jmp
add
data16
add
pop
pop
ja
sub
pop
jmp
xor
push
sub
shl
add
pop
pop
push
dec
pop
pop
push
add
pop
pop
pop
push
shr
pop
leave
ret
push
lea
push
call
add
add
hlt
mov
add
add
fiadds
mov
mov
mov
mov
pop
xchg
mov
clc
pop
lea
push
add
not
add
pop
pop
push
push
push
push
push
push
push
call
pop
aad
mov
add
add
popa
push
add
lods
scas
mov
cltd
mov
push
jmp
test
in
loopne
add
les
jae
add
lcall
pop
push
add
lea
shl
pop
pop
push
push
lea
push
push
call
js
roll
add
stos
mov
add
std
movsl
add
add
fldl
in
add
mov
ja
neg
ljmp
lcall
ret
push
push
push
push
lea
push
push
lea
push
lea
push
call
jne
mov
jne
js
fcompl
scas
add
pop
shlb
jle
jge
sbbb
jmp
les
add
jne
add
add
mov
add
int
cli
add
lcall
push
rol
ror
lea
pop
pop
pop
push
not
shl
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
rorb
add
out
mov
add
jle
push
xchg
push
add
add
jns
jno
add
loop
add
cmc
mov
jne
add
add
xchg
add
shll
sarb
pop
leave
ret
lods
dec
in
lret
out
lret
out
lret
ljmp
movsl
out
lret
out
lret
out
lret
out
lret
out
lret
in
lret
add
mov
or
lret
inc
jns
daa
jle
jle
mov
aaa
arpl
cmpsb
xor
adc
ja
movsl
scas
mov
aam
js
pop
mov
xchg
in
sub
fcomip
dec
sub
xor
fwait
and
test
ja
sbb
fs
sub
fsubr
cmpsl
jp
lret
mov
xchg
outsb
and
cmp
cmpsl
mov
rcrl
mov
shl
cld
ret
hlt
repnz
mov
add
adc
add
or
or
fldt
hlt
inc
hlt
pop
mov
in
repz
sub
movsb
std
or
out
popl
shl
dec
mov
sahf
add
inc
sbb
dec
inc
push
mov
mov
jecxz
pop
fists
mov
cmp
sbb
jo
hlt
xchg
xchg
test
in
popa
inc
fcmovnb
adcl
cmpb
adc
movsl
add
pop
jmp
in
xchg
lret
outsb
dec
mov
sbb
sub
out
cmp
mov
mov
sub
int
lock
jb
adc
cwtl
xchg
ror
add
adc
addb
push
scas
pop
sarl
pusha
dec
sub
rclb
or
mov
inc
sahf
orl
aad
aam
add
pop
mov
or
dec
sbb
ret
push
lahf
add
jl
or
inc
xchg
cmp
xor
mov
mov
push
repnz
adc
mov
mov
xchg
lcall
cmpsb
xchg
jp
out
int3
jp
inc
pop
pop
pop
xchg
fcoml
mov
cmp
and
xor
pop
sbbb
in
mov
out
mov
sub
decb
xorl
sub
cmc
pop
mov
inc
sub
pop
push
sub
dec
adcl
lcall
int3
push
push
idivb
cmpsl
mov
fisttps
mov
out
xor
inc
stos
push
mov
enter
inc
insb
mov
adc
jmp
add
sbb
jbe
out
mov
xlat
popa
out
loop
sarb
cmc
ja
push
je
divl
fstpl
dec
shll
sbb
pop
test
xchg
jmp
dec
xor
adc
jp
or
cld
add
push
sbb
pusha
inc
std
arpl
mov
fwait
nop
ret
test
pop
dec
jno
int
xor
mov
jae
mov
gs
inc
sub
fdivrl
lea
stc
lret
xor
push
push
gs
jg
push
pop
pusha
xchg
test
dec
fwait
jl
sub
lret
xor
stos
mov
push
call
adcl
imul
cmp
test
push
pop
lret
jno
or
mov
push
loop
sahf
pop
pop
lods
ds
je
inc
mov
std
mov
cmp
cmp
jnp
or
in
add
gs
outsl
or
pop
gs
out
pop
aas
sub
push
fbstp
add
insl
jp
cli
xchg
mov
xor
jecxz
xchg
add
les
clc
pop
mov
fidivs
fsts
pop
pop
leave
adc
lcall
call
mov
aaa
jbe
or
fbstp
mov
or
ljmp
movsb
mov
int
adc
lods
lea
mov
incb
adc
test
stc
movsl
filds
les
sub
xor
jl
ss
xchg
sahf
add
dec
dec
test
mov
repz
mov
into
popf
shl
adc
inc
jnp
dec
in
adc
adc
aas
mov
test
fidivl
or
sbb
add
je
mov
pop
push
xchg
mov
xlat
fwait
jge
orb
mov
push
cwtl
test
xchg
bnd
dec
xchg
faddp
imul
sahf
fimull
fistps
mov
dec
lea
mov
sbb
int3
add
das
xchg
mov
push
jb
inc
jp
outsb
aad
pop
cmp
cmp
and
inc
lods
push
xor
adc
cs
stc
fldcw
roll
inc
pop
cmp
adc
jns
sub
pop
pop
pop
sub
push
jmp
adc
dec
mov
pop
jbe
cwtl
scas
adc
shll
pushf
push
cmp
scas
inc
xchg
jno
loope
repz
ljmp
push
mov
mov
je
mov
cs
sahf
rorb
mov
lods
mov
xlat
sub
xor
stos
popa
insl
imul
dec
sbb
ret
and
xor
dec
pushl
rol
adc
les
fwait
mov
shrl
jbe
mov
sbb
pusha
cmp
dec
jo
push
push
pop
out
icebp
mov
lock
mov
jp
mov
push
fisttpll
lcall
and
jge
cli
lahf
je
test
popa
scas
jns
mov
or
stos
push
addb
cli
popf
sub
push
jp
mov
mov
ljmp
fdivs
sbb
mov
les
mov
pop
movsb
mov
mov
jne
movsb
shll
das
mov
cmp
push
in
mov
xchg
push
popa
stc
stos
mov
in
adc
and
sbb
xchg
mov
popa
js
jl
or
jno
sti
mov
and
sbb
lahf
sahf
loopne
fsubrs
mov
stos
cli
iret
into
jle
push
sub
and
jmp
es
adc
xchg
jle
nop
xchg
jp
daa
push
sete
xlat
cmp
cli
mov
arpl
mov
scas
lock
insb
push
push
popa
insl
sbb
out
or
adc
push
bnd
cmp
call
and
scas
xchg
fistl
data16
or
mov
fnstcw
ds
adc
ficoml
clc
sub
es
and
lods
dec
xchg
push
or
outsl
push
jb,pn
pop
sahf
sbb
sbb
cmp
imul
icebp
shl
in
dec
xchg
cmp
ja
mov
xchg
mov
add
cmp
andl
sbb
mov
inc
rolb
inc
dec
pop
mov
cs
jne
out
ret
sub
out
mov
insl
gs
sub
mov
xor
sbb
or
outsl
xor
popf
fs
js
jns
mov
mov
adc
mov
icebp
mov
lcall
repz
aas
mov
and
pop
mov
out
sti
cmp
sbb
mov
call
push
xchg
aas
mov
icebp
jp
sarl
push
or
enter
add
and
out
pop
xchg
and
stos
loop
outsb
imul
sti
adc
pushl
xor
cmp
outsw
jmp
movsl
in
movsb
xchg
mov
fcmovnu
test
inc
iret
sub
dec
repz
lret
adc
fisubl
cmp
aam
jno
pop
notb
add
mov
hlt
or
or
add
ret
adc
and
ljmp
push
mov
out
jno
adc
xor
xchg
or
sub
cmp
mov
aam
testl
pop
mov
sti
mov
pop
test
add
cmp
nop
out
sti
pop
adc
mov
mov
cmp
sbb
sbb
pop
mov
or
mov
sti
jne
into
mov
cmp
cmp
dec
dec
cs
dec
repnz
jno
pop
std
push
mov
shll
ret
and
cltd
mov
mov
dec
dec
or
imul
xchg
or
mov
adc
adc
mov
push
mov
or
cltd
or
xchg
cmp
cli
sub
leave
int
lea
in
sub
cmp
ficoml
test
pusha
into
faddl
pop
pop
in
dec
jae
push
rorl
in
xchg
inc
mov
push
jb
imul
inc
dec
sbb
mov
pop
aam
cmp
out
jl
jge
out
cli
repz
std
dec
les
inc
sbb
mov
fisubrl
add
dec
mov
xchg
dec
nop
fildll
mov
addr16
xchg
mov
sub
sbb
xor
mov
xor
out
insl
test
sbb
cmp
sahf
cmc
fwait
xor
repnz
pop
xchg
sti
adc
loop
fs
fbstp
cmp
adcl
sahf
inc
iret
fdiv
fucomi
fcomps
sbbl
lahf
loope
arpl
mov
aas
xor
fwait
mov
or
jns
pushf
inc
pop
jb
xor
mov
outsb
fidivl
stos
fiadds
out
rolb
sub
xchg
mov
cmpb
pusha
test
imul
aas
mov
cmp
mov
xchg
out
cs
jbe
enter
add
cmp
mov
pop
push
jmp
test
sahf
jl
bound
cli
and
and
pushf
hlt
and
sub
arpl
jle
icebp
mov
mov
sbb
jo
xchg
inc
mov
dec
ret
mov
push
sbbb
outsl
mov
iret
loop
mov
and
pushf
ljmp
jg
dec
push
jne
mov
push
insl
jns
addr16
stc
orl
and
jp
test
dec
sbb
dec
popf
adc
mov
mov
aam
dec
mov
push
mov
pop
insl
add
push
mov
test
xchg
lahf
aaa
mov
and
lods
adc
test
xlat
sarb
or
mov
movb
xlat
sbb
cmp
jg
sub
outsb
ds
cltd
cmp
or
push
push
pop
leave
cwtl
movsl
stos
pop
jle
cmpsl
mov
sbb
imul
mov
or
sbb
popf
mov
mov
out
xchg
dec
movsb
mov
lret
addr16
outsb
xchg
or
jecxz
orb
js
aaa
sarl
jl
sbb
je
scas
test
push
inc
pop
test
das
xchg
fmull
rep
pushf
aaa
cs
lds
cmp
push
movsl
add
mov
fdivrl
clc
jns
xchg
shlb
daa
xorl
mov
pop
jae
daa
push
and
jmp
nop
xor
rclb
sahf
mov
pop
xor
outsb
mov
sbb
jecxz
data16
int3
cli
stos
cmp
and
out
lret
pop
out
mov
ss
and
movsl
add
jg
xlat
mov
push
movsb
mov
xorb
test
movsl
pop
mov
mov
cmc
mov
stc
adc
mov
iret
stos
lcall
out
adc
mull
ficompl
int
cwtl
add
sbb
jae
or
push
and
movsl
imul
ja
imul
dec
call
jg
jp
mov
cbtw
in
dec
imul
loop
sbb
fldl
gs
cmp
mov
add
cltd
psrlw
xorl
stos
cmp
std
jb
xor
cmpsb
sbb
cmp
pop
dec
mov
ret
mov
ret
sub
stc
dec
in
mov
mov
push
test
out
sbb
xchg
mov
sub
insl
sti
in
and
cs
xchg
into
pop
jnp
and
push
pop
mov
fdiv
imul
sahf
jb
lock
pop
pushf
sbb
mov
in
fnstcw
push
enter
mov
movsb
sbb
sti
mov
mov
nop
mov
dec
leave
xchg
mov
pop
notb
dec
ss
lods
fwait
cmp
jg
shrl
insl
dec
jl
adc
jmp
shrl
mov
pop
lret
mov
sub
xchg
sti
imul
data16
fimull
cld
add
push
clc
or
inc
dec
jo
fimull
push
fcoms
inc
nop
in
inc
cmp
pop
mov
push
aam
inc
imul
es
or
stc
pop
push
inc
push
mov
push
sbb
adc
dec
lret
inc
jle
or
mov
push
mov
sub
ss
daa
mov
in
push
push
and
pop
mov
inc
jno
insb
dec
mov
push
hlt
fistpll
xor
push
les
jg
push
jo
sbb
test
lds
shlb
jne
sbb
fs
sub
push
repnz
mov
inc
dec
pop
add
adc
adc
mov
mov
shrl
cwtl
xor
inc
mov
aad
xlat
or
ljmp
das
repnz
jnp
adc
in
out
jmp
lahf
xor
imul
jo
out
cmp
int
out
mov
pop
xchg
lods
les
and
dec
rcl
pop
dec
sub
cmp
rclb
mov
dec
cltd
sbb
adc
stc
outsb
movsb
fistpl
inc
or
mov
jbe
cmp
rcll
mov
mov
mov
cs
or
mov
sbb
into
mov
stos
add
xchg
xchg
adc
add
imul
addl
fcmovbe
jg
seta
aaa
sbb
ss
in
jge
and
ret
pop
jmp
lods
or
fstl
arpl
jp
pop
out
pop
arpl
adc
cmpsl
sbb
push
and
stc
push
mov
jl
mov
dec
pop
mov
push
cmp
es
sarl
sti
pop
or
fnsave
stos
aas
sbb
in
cmp
mov
mov
cmp
dec
andl
mov
mov
fildll
xorb
mov
popa
ds
jl
icebp
cld
dec
cwtl
scas
adc
mov
xchg
cltd
xor
outsl
jb
mov
push
jmp
sahf
pop
add
mov
js
lods
lahf
in
pushf
jnp
xchg
fiaddl
jge
inc
faddl
testb
cli
stos
mov
ds
out
ret
std
sbb
xor
aas
adcl
xchg
sub
lret
lea
mov
dec
add
xchg
or
out
pushf
mov
dec
xor
lret
icebp
xor
cwtl
es
fldl
xchg
mov
and
xor
sub
shll
aam
pop
dec
or
push
add
mov
add
xor
fists
cmp
push
cld
lret
scas
xchg
fwait
dec
or
lods
aam
add
out
fisttps
jbe
cmp
fadds
out
sbb
imul
dec
xor
popf
mov
fs
aas
or
jle
lods
pusha
imul
ss
xorl
pop
hlt
and
push
or
cld
shrb
imul
rorb
in
leave
mov
bound
test
test
es
push
adc
aas
int3
pop
xchg
sbb
and
out
xlat
or
popa
sub
add
or
popa
adc
xchg
addr16
pop
dec
jb
jmp
cmpsl
push
push
mov
int3
mov
cltd
xor
dec
aaa
fldcw
scas
movsl
sub
scas
mov
sbb
mov
rcr
das
movsb
and
jae
movsb
mov
cmp
out
pop
push
pop
cmpsl
lret
xchg
xor
mov
dec
popf
filds
addl
push
inc
jmp
or
cmc
jge
adc
dec
fwait
lret
loop
jbe
dec
xorb
in
mov
pop
mov
sbb
fnstenv
int
xchg
pop
cs
mov
mov
push
es
mov
dec
lcall
clc
fchs
sbb
and
inc
mov
cs
mov
pop
lea
dec
mov
ret
dec
jo
loope
cmp
mov
add
iret
dec
sbb
negb
xchg
mov
xor
xchg
cwtl
fldenv
clc
mov
push
repz
repz
sbb
jecxz
mov
iret
sbb
iret
xchg
and
enter
and
inc
loop
jmp
iret
mov
add
push
nop
add
add
or
inc
inc
pop
pop
push
insb
out
pop
sbb
in
jmp
data16
insl
test
mov
inc
sbb
dec
gs
push
fstpt
shrb
mov
mov
cli
lcall
push
adcb
mov
aad
scas
cmpsl
imul
sub
sti
gs
orl
jmp
xchg
out
push
and
mov
push
cmp
lods
inc
sbb
cmp
inc
jle
inc
lds
outsb
stc
je
andl
outsb
lret
out
cmpl
gs
sub
outsb
mov
ljmp
mov
jg
ss
imul
mov
cmp
lea
aad
fcmovne
mov
je
xor
dec
out
sub
xchg
jbe
aaa
mov
shl
mov
mov
dec
jg
ds
mov
scas
shrl
in
cmp
or
mov
jo
mov
mov
cmc
or
imul
sub
out
mov
cltd
jge
movsl
mov
aaa
cltd
sub
cmpl
cmp
jl
int
into
push
cmp
out
in
mov
or
xorl
sbb
scas
out
dec
lods
test
jnp
jbe
dec
sub
fnstsw
or
sbb
jno
and
ror
xor
add
cltd
mov
cmp
jnp
leave
scas
jecxz
push
pop
call
push
out
mov
add
fnsave
pop
fsub
xchg
mov
cmp
adc
aad
dec
sbb
adc
sbb
mov
movsb
sub
adc
test
or
sub
fcmovbe
and
ret
cs
pop
and
icebp
pop
aas
pop
mov
fldenv
push
shlb
popf
mov
mov
lret
cmp
xor
xchg
xchg
pop
or
pop
cmp
fcomip
xor
xor
popl
fs
push
dec
mov
aaa
xor
outsb
pop
js
add
xchg
xor
push
and
outsl
out
jp
in
scas
mov
in
loopne
and
outsb
testl
push
push
stos
push
aas
jbe
cmpsl
mov
jb
sbb
aaa
mov
lcall
mov
push
inc
test
xlat
or
or
jbe
jecxz
nop
das
imul
lds
rorb
pop
movsb
rcrl
fmuls
pop
std
mov
shll
pop
fisubl
and
add
sti
outsl
push
sahf
sbbb
xchg
mov
hlt
mov
aaa
adc
sbb
or
into
aam
std
xchg
sbb
arpl
adc
mov
or
cmp
aam
mov
daa
data16
hlt
jl
cmp
sbb
mov
pushf
inc
push
je
dec
gs
arpl
addl
icebp
jg
cmpsl
pop
and
xorb
leave
dec
and
addb
adc
daa
flds
push
inc
xchg
inc
ret
mov
and
and
xchg
in
sar
shl
rcrl
ret
rcrl
push
loope
test
mov
pop
xor
xor
cld
cmp
dec
sti
dec
repnz
mov
mov
jnp
add
bound
mov
or
hlt
clc
mov
xchg
or
mov
jmp
js
mov
sub
dec
xlat
lcall
inc
in
in
sub
pop
adc
jp
sbb
mov
je
divl
out
jg
and
testb
test
mov
shlb
lock
cwtl
cs
push
xchg
int3
test
inc
mov
pop
rol
sub
fwait
cs
cmp
in
mov
jb
inc
adc
scas
scas
mov
cmpsl
out
imul
inc
push
jmp
pop
ret
call
and
xor
or
or
pushl
fldenv
mov
adc
test
fcomip
jmp
cmpsl
pop
loop
ffree
mov
shrb
xchg
loop
mov
dec
xchg
insb
js
divb
pop
movsb
push
push
mov
push
xchg
cmpsb
out
out
int
imul
ljmp
mov
jo
lock
pop
repz
jle
or
mov
je
hlt
inc
cmp
rcrb
mov
lret
jo
add
fwait
jecxz
fsubr
and
int3
out
pop
mov
arpl
mov
fists
dec
loopne
dec
xor
pushf
mov
shrb
mov
fistpl
loopne
adc
dec
lahf
xor
xchg
imul
xor
data16
dec
ja
lods
cltd
sbb
rol
mov
cld
fimull
imul
mov
mov
popf
lods
dec
pop
sub
int3
cmp
cld
xor
lcall
bound
push
mov
out
sbb
mov
out
add
in
aad
dec
dec
aaa
repz
aas
mov
and
jbe
pop
in
or
mov
outsb
pusha
movsb
lret
pop
sbb
pop
cmpsb
hlt
inc
sbb
mov
or
adc
push
adc
inc
dec
jbe
les
xchg
push
sub
dec
add
std
add
stos
adc
jp
fst
shll
inc
jge
sbb
out
icebp
test
pop
incb
nop
mov
aam
call
fstpt
sarb
ljmp
xor
js
div
push
fnstenv
es
dec
test
cwtl
aam
xchg
xor
sbb
push
shrb
or
dec
add
pop
adc
sbb
shrl
add
hlt
xor
add
sbb
jmp
shlb
sbbb
pop
pop
rcrl
rcll
stos
repnz
or
lret
sbb
insb
aas
xchg
idiv
mov
and
jp
mov
daa
pop
ret
lret
lret
inc
test
add
xchg
enter
lahf
or
dec
les
pop
push
ljmp
sub
hlt
mov
or
push
xchg
dec
lods
sub
cmp
int3
in
sub
loope
insb
jne
scas
aam
push
add
sbb
fidivl
inc
xchg
xorl
aad
enter
and
fwait
or
aam
lds
test
jl
sbb
in
xor
xorl
cs
or
inc
dec
scas
push
xor
jg
mov
mov
lcall
ds
mov
sbb
rorl
or
rolb
mov
jmp
dec
lcall
xchg
sub
mov
jo
insb
mov
pop
push
or
scas
jae
rorl
shlb
movsl
int3
dec
icebp
xchg
pop
xchg
ffree
dec
adcb
inc
mov
jl
movsl
in
adc
mov
hlt
xor
loop
jae
pop
push
cmp
mov
jae
mov
inc
dec
or
popf
jno
push
adc
sub
mov
cs
xchg
cmpb
fs
aam
fimull
mov
pushf
das
jmp
data16
cmp
or
loope
je
das
sti
cmp
fldenv
out
std
mov
out
push
lret
out
cli
or
xor
lods
cmp
jno
je
sub
in
or
mov
test
fsubr
sub
xor
adc
dec
cmp
les
jp
les
push
data16
mov
and
iret
sbb
outsl
insl
xor
adc
lahf
jbe
das
or
popf
sbb
aam
lcall
popf
test
xor
icebp
sarb
jg
fs
sub
ss
adc
icebp
jae
mov
pop
imul
call
movsb
insb
inc
mov
dec
andl
pop
or
jle
mov
pop
test
mov
repnz
sbb
push
ds
int3
nop
idivb
lret
mov
in
sbb
test
fmul
add
inc
jg
dec
jmp
shlb
out
clc
jmp
jp
int
mov
or
aad
mov
pop
push
cmpsb
xchg
and
in
shr
sbb
fdivr
ret
xchg
je
addr16
push
ja
je
pushf
stos
adc
inc
and
iret
sub
sub
imul
les
sub
ret
and
sar
or
andl
repz
jl
sub
je
das
adc
into
or
test
mov
paddb
sahf
vpsadbw
pop
pusha
fistpll
dec
loop
xchg
out
arpl
mov
mov
in
aas
mov
cmp
popl
push
fmull
jne
mov
mov
xchg
cli
test
rcll
mov
in
jg
xchg
mov
xlat
insl
mov
pushf
loop
mov
xchg
pop
mov
sahf
pop
cld
jne
adc
dec
in
sub
inc
pop
push
rcrb
push
xor
lret
stc
mov
ja
and
sub
ds
and
sahf
xchg
push
sub
xor
lcall
pop
sub
cwtl
cmp
pop
leave
mov
rcr
repnz
jecxz
hlt
stc
dec
mov
mov
dec
cmp
test
sbb
mov
cwtl
adc
sbb
scas
lahf
sub
insb
outsl
xchg
push
in
pop
adc
test
insl
mov
push
or
mov
and
inc
mov
fmuls
mov
dec
jmp
pop
jmp
dec
mov
mov
and
nop
daa
jnp
push
out
in
out
push
jb
pop
mov
shrl
mov
mov
push
and
rorb
leave
mov
sbb
in
in
leave
add
and
movsl
lret
and
inc
cmp
xchg
or
loope
fwait
or
inc
inc
mov
push
sarb
and
shl
lcall
pushf
repnz
loope
xchg
adc
fcmove
mov
adc
cli
add
and
dec
jecxz
dec
int
aaa
adc
xor
stos
mov
aaa
mov
pop
cmp
lcall
nop
sub
imul
and
sbb
aaa
xlat
les
cmp
push
mull
push
in
xchg
bound
xor
dec
test
fsub
jmp
sbb
sbb
push
adc
inc
mov
sub
js
adc
adc
inc
mov
pop
mov
jb
or
mov
fistl
das
mov
les
sbb
adc
mov
dec
orl
in
push
mov
jl
or
dec
js
cmpsl
test
lcall
push
or
jo
jecxz
push
sbb
pop
test
cmp
sub
jmp
add
movsb
push
in
std
fdivr
push
mov
in
ljmp
fdivrs
push
pushf
pusha
iret
cmp
pusha
mov
sbb
xchg
lret
xchg
arpl
incb
shlb
xor
adc
aam
add
pusha
and
ljmp
cmpsl
sub
sub
lock
leave
push
in
jp
lea
dec
cmpsb
testl
adc
mov
cmp
sarl
cmc
sbb
dec
ficompl
imul
stos
je
int
ror
in
out
sbb
mov
add
cs
mov
ljmp
addr16
int3
push
inc
ss
fnstcw
daa
rcrb
fistpl
xchg
in
scas
push
insb
jl
test
movsb
lret
outsb
in
mov
in
ss
sbb
adc
lods
int3
mov
js
outsl
lea
mov
movsl
inc
into
or
loop
xorb
ficomps
in
in
push
sub
outsl
mov
pop
popf
jb
cltd
testb
lret
fsubrs
popa
into
xchg
jl
pop
mov
add
sahf
add
popf
jo
and
out
sub
sub
ret
dec
dec
enter
das
std
xchg
push
cmp
ss
arpl
and
inc
push
ljmp
bound
push
shll
or
repnz
or
add
out
push
lret
inc
jne
aas
icebp
or
fs
push
dec
in
add
add
jl
cmp
es
test
dec
mov
or
and
push
lcall
out
jl
add
dec
in
mov
sub
stos
push
cmc
pushf
add
adc
inc
cmp
addr16
jbe
incl
push
bound
mov
jmp
mov
xchg
mov
in
lock
jb
mov
inc
cld
sbb
iret
mov
mov
loop
ffree
or
call
and
or
stos
rorb
popf
cmp
test
mov
adc
adc
dec
pop
pop
inc
bound
mov
inc
push
adc
jo
pop
jmp
jne
and
push
and
je
pop
xchg
pop
les
mov
in
dec
dec
xlat
mov
imul
rcrl
fwait
pop
fsubrl
jne
mov
push
in
movsb
pop
popf
in
inc
repnz
jne
clc
mov
aas
lds
int3
je
aas
stos
dec
pop
aam
cmp
shll
jmp
xorl
inc
lods
inc
jmp
pop
jb
lahf
cmc
inc
sub
push
in
out
pop
adc
jl
xchg
sub
dec
or
and
cltd
sahf
dec
add
pop
sahf
lcall
ficompl
fdivrs
in
sub
add
jne
sti
pushl
cmp
lret
jle
pop
bound
and
test
icebp
mov
sbb
movsb
xchg
fwait
jne
sbb
mov
sar
arpl
jnp
adc
mov
leave
jecxz
iret
stos
xchg
mov
or
xchg
xchg
negl
mov
js
jmp
adc
fisttpl
je
and
xlat
cli
mov
mov
push
xchg
js
shl
clc
mov
pop
aam
popa
jno
int
fistl
repz
and
out
mov
js
dec
adc
sub
xchg
mov
lods
pop
cmp
xlat
jl
mov
sub
test
push
add
sti
push
out
fwait
cmp
mov
mov
fisttps
fwait
xchg
mov
pop
cmp
pop
hlt
mov
ret
mov
orb
or
lea
mov
cmc
push
inc
sbb
mov
xchg
sbb
hlt
adc
xlat
dec
dec
and
xchg
jns
mov
out
ja
xchg
in
int
mov
cmpsl
movsb
mov
xchg
and
xchg
cmp
pmuludq
pop
push
lret
jg
jl
adc
mov
out
or
sti
icebp
xchg
jns
pandn
mov
aad
jmp
add
aam
les
mov
fisttpl
mov
inc
mov
xchg
aad
pop
or
mov
or
dec
pop
out
outsl
add
lods
ja
jo
and
jbe
cmpb
dec
es
enter
fidivs
movsl
ja
and
mov
test
movsl
iret
pop
repnz
in
sub
lret
insl
cmpb
mov
lock
outsl
lods
fildl
inc
xor
mov
and
push
adc
lock
add
sbb
jg
or
sbb
dec
mov
mov
nop
add
inc
jbe
int3
ljmp
stos
inc
daa
mov
test
pushf
cmp
or
stc
lods
lods
cmp
xchg
popf
mov
mov
push
mov
andb
sub
dec
fcompl
test
es
jl
add
and
xlat
outsl
sbb
mov
inc
lcall
aam
adc
icebp
xor
stos
jge
aad
pop
out
repz
xchg
orl
mov
mov
addr16
mov
xchg
repnz
jecxz
cmpsb
call
packsswb
sbb
cmpsb
loop
sarb
cs
cs
popf
sahf
std
cmp
dec
std
call
adc
popf
repnz
insl
pop
sub
aad
fidivs
jae
xchg
jae
cmc
inc
or
pop
xchg
data16
inc
out
call
int
xor
lcall
int3
in
testl
lret
js
int
pop
mov
and
mov
ds
das
bts
rolb
inc
xchg
cmpsl
cmp
in
xlat
ret
adc
andl
out
mov
and
cmp
imulb
lods
dec
loope
outsb
ljmp
sbb
testl
sub
jbe
nop
xor
insb
stos
outsl
jo
int3
push
mov
xchg
mov
fnstenv
mov
leave
outsl
lock
mov
outsl
aas
ret
cmp
mov
jge
mov
hlt
mov
cmp
cmp
ja
jae
push
jne
es
push
lock
test
imul
mov
dec
js
ficoms
xchg
fisttps
test
fcoml
adc
cs
fstl
mov
std
loope
mov
into
dec
xchg
stos
jl
rcrb
outsl
out
mov
stos
sub
insl
out
loop
lea
and
shlb
push
fldt
imul
xlat
pop
jns
hlt
mov
rcrl
jne
jbe
movsl
xor
dec
stos
arpl
sbb
fdivrs
inc
das
dec
mov
cs
sbb
inc
out
adc
jns
movsl
cli
mov
int3
repz
dec
mov
pop
dec
dec
hlt
inc
shrl
xchg
add
out
sahf
in
push
leave
int
mov
sbb
and
clc
int
push
cmp
mov
or
dec
xor
jo,pt
repnz
mov
std
negb
cmp
sub
dec
push
aaa
test
shlb
int3
shlb
andb
mov
push
rol
loopne
lahf
out
mov
pushl
cmpsb
sub
stc
in
ljmp
dec
cmp
cmc
hlt
cmc
test
pushf
or
push
ss
jae
int3
ficompl
or
notb
add
mov
adc
or
enter
aam
inc
insb
shl
pop
popa
sub
shll
jo
ljmp
sbb
or
das
push
scas
sub
mov
push
adc
adc
adcb
dec
xchg
imull
mov
cltd
int3
or
sbb
xchg
xor
scas
cmp
push
sub
cmp
sbb
jmp
hlt
out
mov
cltd
adc
aad
int
jnp
insl
xlat
mov
xchg
mov
jmp
xchg
mov
stos
jo
aad
mov
jbe
scas
pushf
nop
fstpl
jbe
xchg
pushf
inc
sbb
xor
insl
xor
mov
fdivs
cli
popl
in
push
icebp
dec
push
mov
pop
outsl
push
std
insb
xchg
int3
outsb
out
cmp
shll
dec
dec
enter
out
pop
cmovae
dec
sbb
mov
insb
in
jae
adc
in
int3
adc
iret
icebp
cmc
mov
xlat
cld
call
or
mov
cs
sbb
and
add
sarb
outsb
sbb
add
lret
pop
push
testl
push
mov
sarb
xor
add
cmpsb
daa
jns
inc
mov
enter
xchg
inc
mov
mov
mov
lahf
cmp
add
sub
lret
inc
jp
js
scas
je
sbb
mov
jge
addl
addr16
jl
sub
ss
popa
sub
or
movsb
push
sbb
mov
ja
pushf
imul
mov
cmp
dec
scas
push
jno
dec
xchg
aad
mov
sbb
mov
int
inc
xor
jne
sbb
jns
test
insb
loop
ret
fcmovnu
pop
in
lcall
fists
movsb
imul
jmp
mov
cld
push
xor
or
pusha
inc
add
sbb
pop
dec
or
insl
push
aam
push
mov
nop
mov
mov
add
pop
fcomi
mov
sub
add
fwait
mov
out
outsl
pop
int3
fiadds
mov
lcall
jle
lds
mov
cmp
push
aam
sub
mov
lret
sbb
imul
idivb
cmpsl
cld
xchg
insl
inc
scas
mov
mov
packuswb
xlat
xchg
scas
inc
fldl
or
inc
fiadds
jno
fnsave
leave
push
adc
imul
aas
cli
mov
add
cltd
mov
mov
clc
mov
inc
push
decl
add
push
rclb
call
out
int3
subl
fcom
and
xchg
inc
test
mov
jmp
cltd
ja
add
mov
in
xchg
cs
out
cmp
mov
dec
push
dec
fwait
cmp
cmp
aas
xlat
lods
iret
push
lret
in
clc
or
push
jo
jge
dec
bound
lods
mov
pop
sub
sbb
or
arpl
xor
mov
cli
jbe
fldl
cmp
push
sub
push
and
push
call
jb
jg
fidivrl
and
adcb
xor
mov
cmp
sbb
pop
clc
cmp
jl
repz
ljmp
cli
mov
lret
sub
outsb
dec
sub
sub
sar
ret
add
in
sar
clc
aad
push
inc
int3
pop
lock
loope
cmp
sti
in
inc
mov
xchg
loope
daa
fildl
or
enter
insb
dec
xchg
jecxz
dec
xor
pop
inc
adcb
movsb
dec
mov
mov
mov
pop
or
arpl
inc
into
dec
or
popa
xchg
es
sub
xor
cmpsb
loop
stos
adc
rolb
ja
sub
dec
sbb
shrb
cmpsb
or
mov
sbb
adc
jge
mov
or
xlat
fincstp
jnp
cmpsl
mov
jae
or
lret
mov
xor
ss
mov
movsb
mov
jo
sbb
movsb
shr
pushf
sbb
int
pop
rcrb
sahf
xor
div
rcll
fs
jb
jnp
out
fsubr
mov
xchg
sbb
sub
clc
cmpsl
dec
aam
xchg
mov
iret
mov
jbe
sub
stc
nop
xchg
dec
xor
mov
mov
pop
clc
lock
mov
scas
adcb
loop
fistpl
test
mov
stc
adc
imul
lret
data16
mov
inc
xchg
adc
xor
inc
jae
fwait
pop
ffree
push
cmp
jne
cmp
inc
insb
jno
jbe
jne
cmc
push
ss
fistpl
pop
dec
dec
sub
ds
sbb
cli
lahf
test
jo
fs
xchg
fistpll
jle
and
mov
lcall
sbb
mov
mov
jmp
sbb
jne
mov
mov
inc
mov
sub
push
inc
in
lds
mov
jns
cmpsb
sahf
dec
xchg
adc
rol
push
addr16
in
or
shlb
lcall
out
xchg
or
sbb
movsl
aad
iret
aas
jp
dec
and
inc
imul
ret
enter
movsb
iret
push
push
or
mov
and
in
mov
lds
test
inc
movsb
daa
test
inc
popf
dec
pop
insb
mov
cwtd
lcall
jns
fs
std
mov
xchg
insb
push
push
adcb
in
fnsave
in
cmc
repnz
mov
xchg
sub
loopne
scas
xor
fnstenv
testl
add
sahf
imul
and
sub
mov
mov
jno
xor
bound
pop
test
push
dec
mov
or
xchg
dec
test
stos
cli
mull
enter
mov
jne
mov
es
add
ret
mov
mov
pop
dec
fisubrl
mov
sarl
push
xor
push
and
sahf
mov
fstp
jo
int
mov
clc
fcomps
jbe
and
in
push
and
mov
and
shrl
cmp
cmp
jb
ss
and
mov
inc
sub
out
jno
test
xor
bound
xchg
std
sarb
sbb
stos
adc
outsl
dec
jge
in
xor
lock
adc
jg
sahf
sahf
imul
sbb
cltd
xor
sub
ds
lret
jb
data16
dec
fs
pop
inc
jp
in
and
pop
sub
or
int3
test
dec
ss
mov
dec
cmp
fcmovne
test
aas
pop
jnp
and
dec
dec
jno
push
sbb
dec
scas
fcompl
mov
cmp
add
sbb
test
inc
mov
test
sub
mov
xor
xor
add
ret
pop
loop
push
ljmp
and
adc
xchg
aad
into
xlat
jg
pop
pop
add
sub
xor
loopne
cwtl
lcall
mov
push
negb
movsb
imul
fdivs
xchg
add
outsl
cmpsb
mov
xchg
mov
dec
adc
bound
mov
jne
dec
pop
lcall
xchg
sbb
jb
dec
out
mov
dec
mov
jg
rorl
int3
mov
sub
sub
pop
cmc
sbb
cmpsl
hlt
sbb
ret
mov
in
test
cld
bound
outsl
xchg
fbstp
jbe
test
push
cmpsb
das
dec
enter
push
les
lock
repnz
cmp
push
jp
in
jl
dec
out
and
das
daa
and
and
pusha
jp
loope
jg
lock
and
packuswb
sbb
stos
repz
inc
mov
lods
fstl
xchg
ljmp
pop
jecxz
mov
inc
mov
pop
pop
leave
xor
dec
xchg
psubusw
insl
movsl
add
jno
pop
mov
lds
mov
aaa
fninit
mov
stc
add
cmp
jnp
jg
push
outsl
dec
in
push
out
xor
xchg
mov
hlt
es
mov
and
sahf
sti
push
data16
rcl
imul
pop
mov
imul
adc
cmp
fidivs
std
mov
mov
mov
adc
rorb
out
int
cmc
fwait
ss
sub
pop
cmp
in
clc
out
push
sbb
pushf
push
subb
xor
pop
ret
jae
cmp
inc
stos
das
int
ss
arpl
xchg
xor
pusha
mov
popf
lods
and
add
push
ret
loope
outsb
shll
pop
jmp
jno
shrl
fwait
jge
mov
cmp
dec
fwait
push
push
dec
push
les
xor
aas
jno
xor
dec
push
cmc
roll
ret
in
dec
sbb
dec
test
outsl
ror
jecxz
roll
stc
dec
mov
dec
pushf
or
mov
push
or
or
inc
add
in
test
push
leave
mov
ss
push
jmp
into
xchg
mov
in
inc
or
xor
mov
mov
xchg
testl
push
cs
mov
add
pop
bound
pop
jno
dec
xchg
adc
jbe
cld
loop
jo
std
add
movsl
mov
mov
fmul
imul
dec
ja
loopne
aas
das
sti
jmp
mov
adc
push
mov
iret
mov
lods
add
arpl
les
popf
dec
cmp
mov
fnstcw
paddb
test
and
imul
lea
shrb
adc
push
int3
out
loope
sbb
int
out
sbb
shl
adc
loope
cli
mov
push
dec
add
es
mov
pop
add
mov
cwtl
mov
repnz
xchg
loopne
or
test
inc
push
fiadds
popf
sub
dec
outsl
rcrb
mov
jns
roll
shrl
fidivl
das
mov
cmpsb
mov
mov
cld
xor
jbe
adc
mov
movsl
bound
jo
and
daa
jle
fisttpl
jb
add
xor
sub
test
cmp
and
pop
ds
mov
fistpl
sbb
jmp
push
mov
outsb
outsl
adc
fcoml
xchg
int3
fstpt
incb
pusha
int3
loopne
adc
stos
pop
ja
data16
movsl
js
jns
sbb
cltd
xor
jne
xor
test
pop
fwait
pop
mov
cmp
pop
cmpsl
std
fcmove
mov
add
adc
call
ja
rclb
fisubl
imul
movsl
mov
in
adc
add
sahf
jae
dec
imul
fbstp
pop
inc
mov
in
xor
or
icebp
sbb
push
out
cwtl
lret
pop
test
adc
push
cmpsb
fmull
inc
pusha
jmp
xchg
fdivrs
dec
mov
call
pop
jno
pop
jae
std
xchg
pop
push
das
nop
pop
add
sti
popf
mov
mov
cltd
fwait
xor
push
pop
mov
rclb
push
add
mov
push
and
call
mov
out
pushf
adc
sub
orl
fsubr
lea
lahf
into
cmpsb
fbstp
loope
sbb
pusha
popa
pop
sti
cmp
cs
incb
out
scas
into
pop
xchg
out
insb
sbb
mov
xchg
push
or
sub
and
out
popa
fwait
loop
mov
daa
add
addr16
sub
movsl
in
shr
sbb
mov
pusha
xchg
in
sub
jecxz
rclb
sub
lea
loopne
cmc
popf
jae
xchg
jmp
and
dec
add
pop
fildll
pop
cmc
or
ret
ljmp
push
cli
test
in
adc
int
loope
lcall
jg
jge
test
inc
mov
xor
or
pusha
jle
and
jo
ja
outsb
push
fiadds
mov
xchg
adc
dec
int3
pop
loope
sub
cmp
cmpsl
pop
out
add
clc
xlat
add
cld
js
adc
nop
push
mov
xchg
gs
or
jo
mov
mov
loop
out
outsl
jb
jge
ja
movsb
dec
ret
pop
and
addb
jg
pop
or
aam
pop
mov
cmp
mov
mov
std
push
mov
add
xchg
in
in
mov
adc
clc
inc
inc
mov
scas
movsb
in
in
test
pop
cld
notb
rclb
mov
push
cmp
mov
cmp
in
imul
and
cmp
xchg
shlb
mov
inc
xchg
pop
fiadds
lret
scas
inc
jg
and
stc
and
shlb
pushf
push
or
mov
add
cmc
ret
dec
nop
mov
jecxz
mov
jl
xor
mov
cwtl
and
aam
jno
xchg
cmp
fldenv
jl
mov
std
aad
push
lods
mov
mov
mov
lds
adc
pusha
lea
cmp
sub
adc
inc
cmp
xor
dec
and
fstpt
or
mov
and
insl
out
jmp
and
ds
mov
inc
adc
adc
jno
mov
test
adc
add
insl
sbb
sub
lcall
xchg
dec
jns
sahf
sti
cltd
rolb
push
outsl
mov
ljmp
iret
pop
loop
mov
mov
adc
movsb
or
sub
leave
stos
aad
pop
js
pop
sub
out
xor
pop
in
dec
ss
xchg
repnz
arpl
bound
daa
fs
fs
data16
push
stos
mov
pop
push
inc
mov
and
pushf
fbld
dec
xor
out
pop
mov
fimull
inc
imul
fisubs
test
inc
movb
movsb
xchg
cmp
cmp
lahf
test
int
or
pop
outsl
idivl
pop
sbb
fisubl
inc
adc
xchg
inc
loopne
stc
test
test
mov
mov
jbe
rolb
pop
popf
and
cmp
sbb
int
adc
mov
push
repnz
aaa
cmp
push
push
and
es
je
dec
pop
das
imul
ret
in
cld
rcr
pusha
loop
and
push
mov
xchg
jg
pusha
sub
add
dec
adc
jmp
cmp
or
ljmp
mov
mov
loop
xor
push
in
jle
jl
adc
sbb
std
pusha
rcr
push
test
adc
inc
mov
and
dec
and
loopne
daa
rolb
mov
jl
lock
or
imul
mov
hlt
cmp
inc
jnp
mov
add
cmpsl
leave
lds
dec
adc
jo
sbb
mov
fldl
cmp
insb
lret
pop
out
dec
subl
add
sbb
pop
push
mov
xor
test
leave
ja
jl
or
mov
jb
lock
stc
jo,pt
dec
icebp
out
daa
push
adcb
xchg
or
sbb
cltd
and
xor
inc
fxch
les
lea
cs
sub
loope
inc
inc
leave
mov
out
lock
mov
cmp
xor
cmpsl
xor
arpl
dec
inc
pushl
js
add
adc
and
cmp
push
dec
mov
jp
data16
mov
cmpl
adc
mov
test
sub
jne
or
inc
mov
aas
sub
clc
jge
or
scas
jmp
insl
pop
inc
jb
dec
push
push
inc
adc
shlb
inc
and
mov
push
inc
pop
pop
pop
and
sbb
les
pop
pop
fwait
sti
dec
fwait
in
sbb
add
sahf
jbe
stc
or
sahf
xor
inc
mov
push
test
xchg
sub
stos
cmp
pop
fdiv
pop
mov
pop
adcl
js
mov
out
xchg
sti
cmp
mov
ljmp
adc
push
arpl
out
nop
and
add
cmp
xorl
stos
cmpsb
ss
pop
into
fildll
dec
pop
decb
out
jl
outsb
and
xor
and
push
mov
sub
iret
and
arpl
dec
pop
push
push
cmp
adc
xchg
add
fldcw
mov
xchg
shl
mov
loope
fidivrl
mov
lods
fimull
xchg
stos
and
jno
int3
pop
mov
pushf
inc
add
les
pop
add
pop
adc
jge
and
push
rolb
ret
mov
fistpll
jl
mov
sbb
movb
sahf
gs
scas
jl
xchg
shl
mov
pop
jmp
pusha
and
xor
out
call
fstl
xor
cli
repz
cmp
mov
sbb
js
rcll
jmp
aas
aaa
pushf
mov
and
fldcw
mov
cmp
mov
popf
aas
aas
imul
idivl
maskmovq
negl
cmp
imul
fcoms
cmp
jno
push
or
add
pop
mov
and
out
dec
fldt
js
xchg
mov
xor
lods
sbb
out
stos
xor
sbb
pop
ds
push
rcr
cmp
push
xor
xor
add
xchg
jne
aad
cs
fcoms
jnp
test
cltd
xor
xchg
lahf
cs
inc
xor
pop
imul
mov
sbb
inc
hlt
sub
pop
or
add
and
std
js
repz
js
dec
push
test
sub
jno
out
aad
icebp
mov
mov
fcomp
dec
sub
es
sub
cli
lret
ss
test
rcrb
pop
or
nop
mov
add
jmp
out
fistpll
or
loop
outsl
pop
aad
cmp
inc
ret
jb
fs
mulb
int3
addr16
pop
jne
in
jnp
jg
push
mov
push
mov
mov
inc
ret
xchg
pop
and
lock
push
out
push
lods
jae
push
sbb
cld
in
leave
es
bound
loopne
push
sahf
arpl
fmulp
cld
sub
cltd
xchg
cld
insb
xchg
aas
inc
mov
xchg
inc
mov
sbb
fistps
lock
xchg
xor
js
push
and
push
mov
iret
out
insl
inc
leave
mov
ja
lea
sub
shrl
loope
jae
xchg
mov
scas
inc
jne
jmp
scas
or
xchg
inc
sub
das
sub
xchg
daa
aas
sbb
lea
fs
repnz
pop
mov
fisubrs
aam
rolb
adc
mov
notb
lock
inc
fld
dec
aad
push
xchg
mov
aam
and
push
es
push
add
inc
stos
cmp
push
mov
push
into
cmp
je
and
dec
inc
and
jle
push
scas
or
aam
mov
leave
jle
ss
pop
test
out
xor
xchg
sbb
sub
inc
pop
incl
pop
mov
mov
and
test
mov
xlat
add
repz
xchg
js
ret
cld
or
pusha
jp
movsl
jno
loope
jl
pop
jge
scas
in
sbb
movsb
out
mov
mov
sbb
cmp
out
jmp
mov
and
push
jg
aaa
jg
popf
cltd
pop
in
fcomps
rcll
inc
lds
sbb
push
mov
push
popa
hlt
repz
xor
cmp
push
dec
ret
sub
rcrl
pusha
insb
lods
xchg
pusha
mov
test
mov
adc
jno
mov
pop
notl
inc
shlb
or
mov
scas
jmp
int
insb
or
or
cwtl
push
jbe
and
push
sbb
xchg
enter
add
xchg
cmp
xor
cli
mov
in
lea
ret
lret
push
push
add
mov
leave
mov
decb
cwtl
cmp
mov
adc
or
cmp
jecxz
jne
lods
push
push
aad
dec
mov
dec
iret
xchg
jl
push
ss
data16
movsl
gs
ss
fistpl
jg
dec
inc
fstpt
xchg
mov
movsl
popf
cmc
mulb
icebp
arpl
out
outsb
stos
mov
dec
popf
mov
xchg
insl
pop
jp
addr16
popa
aas
es
mov
sbb
imul
stos
pop
outsl
nop
xchg
xor
js
cmp
sbb
imul
bound
cmp
mov
pop
pop
bndstx
lret
or
mov
adc
fs
movaps
inc
mov
popa
test
pop
out
pop
mov
pop
ja
fistpl
outsb
inc
scas
mov
cltd
xchg
push
jp
jp
nop
inc
aas
inc
pop
outsl
shr
jecxz
add
stos
jae
add
fisubs
into
sbb
and
pop
push
mov
pusha
or
imul
bound
inc
push
daa
ret
mov
push
xchg
dec
xchg
dec
shl
inc
es
or
call
add
jecxz
xchg
std
mov
addr16
imul
mov
das
ljmp
and
mov
xlat
pop
mov
pop
fsubrp
loope
xor
add
jl
inc
mov
push
je
xor
push
mov
xor
xor
mov
jnp
ret
subb
cmpsw
call
xchg
push
arpl
and
push
lea
jge
and
xchg
ret
lahf
ja
mov
mov
aas
sub
cwtl
lds
fmuls
sbb
mov
push
cli
in
sbb
pusha
sub
xchg
sbb
js
movhps
adc
inc
ljmp
aaa
cmp
adc
mov
xor
jecxz
leave
movl
and
jae
pop
aaa
jmp
repnz
pop
movsb
jns
pop
mov
sbb
out
sbb
mov
cwtl
jb
lds
pop
pop
mov
imul
jno
pop
aam
pusha
aam
ds
std
lret
sub
add
outsb
rclb
sarl
jl
cmp
clc
dec
jl
loopne
scas
cmc
ljmp
xor
aad
add
pop
jnp
shll
outsl
or
cmpsb
pusha
aas
lret
rcl
cmc
ret
clc
cld
cs
mov
inc
xchg
out
add
adc
push
pusha
cmpb
repz
mov
movsl
test
pop
mov
push
jmp
data16
ret
sbb
hlt
fldcw
jmp
jp
inc
aam
sbb
pop
push
jb
adc
insb
mov
testb
movsl
lods
jl
test
ret
xor
jnp
es
xor
into
mov
aad
jle
jns
out
sub
cmp
xchg
cld
shll
xchg
repz
jl
cmp
add
scas
lods
push
outsl
cs
xor
scas
xlat
fwait
cli
xor
mov
rclb
shlb
push
gs
shr
es
xor
loope
mov
push
mov
mov
scas
fcmovne
dec
jecxz
daa
insl
fidivs
and
xchg
hlt
out
xorb
mov
mov
adc
shrb
addl
push
fisubrs
fisubrl
mov
push
rorb
fcomp
popa
sub
lcall
in
into
scas
cmpsb
in
cltd
pop
jb
incl
mov
fwait
and
lret
nop
sbb
mov
pop
xor
and
pop
mov
aas
fmull
jp
push
ja
mov
les
int
mov
xchg
les
adc
dec
adc
xchg
dec
jle
dec
insl
cs
xchg
inc
mov
in
mov
sahf
mov
xor
lcall
cmc
mov
fidivl
loope
sbb
jecxz
aad
aas
gs
jne
in
insb
je
in
fs
mov
push
sub
inc
and
out
xchg
mov
gs
cmpl
cmp
pop
add
cmp
es
push
into
cmp
cmp
stos
xor
bound
orl
fisttpl
cmp
and
call
loop
add
dec
xchg
dec
lds
ja
int
in
xor
push
xchg
or
faddl
cmpsb
sbb
lahf
jne
cwtl
js
mov
mov
aaa
xchg
cwtl
sarb
cltd
aad
ret
sub
inc
icebp
push
aad
dec
out
cltd
jle
push
or
cmpl
add
add
mov
fidivl
dec
adc
mov
rcrb
sub
dec
adc
add
daa
popf
test
cltd
flds
xor
inc
cmp
jle
sbb
neg
nop
imul
mov
inc
fidivl
dec
xor
mov
sbb
pop
aad
cmp
xor
fcoml
sub
insb
dec
sbb
int3
lcall
fwait
in
and
aaa
pop
cmp
loope
dec
adc
xchg
add
mov
add
sub
xor
jbe
dec
aad
ret
inc
fsubrp
xorb
lret
test
in
flds
fisubs
rcll
cltd
stos
jle
std
out
shrb
ljmp
jecxz
mov
sbb
stos
js
movsl
push
out
add
cmp
xlat
cmpsl
aam
fisttpll
int
imul
int3
loope
pusha
ret
cs
jmp
inc
std
lcall
adc
cmpsl
gs
cltd
jae
fsubs
xor
pushf
aad
in
mov
push
cwtl
jb
jno
mov
and
aaa
dec
inc
out
xor
xchg
icebp
mul
arpl
jge
and
test
loopne
xor
push
jmp
ljmp
sti
iret
imul
mov
cli
xchg
cli
out
sbbb
fdiv
out
cwtl
popa
mov
nop
cwtl
pop
cltd
repz
lret
push
or
lahf
dec
or
mov
je
mov
popf
cmp
xchg
adc
aaa
shrb
dec
push
jns
pusha
icebp
sbbl
xchg
mov
fildll
lcall
outsl
imul
mov
inc
pop
pop
aad
std
popf
popa
in
popf
adc
push
jge
jecxz
fists
mov
inc
dec
mov
outsb
hlt
jp
adcl
test
insl
mov
cwtl
testl
inc
sbb
clc
pop
addr16
ret
mov
adc
xor
outsb
jg
int3
cmc
fistl
xchg
or
testb
jae
adc
adc
movsw
add
std
aaa
jge
pop
outsl
push
shll
jle
jge
lret
daa
cwtl
mov
xchg
cs
insl
ficompl
mov
stos
std
insl
mov
mov
cld
cmc
push
inc
add
push
gs
cmp
dec
mov
adcb
add
add
sub
jp
inc
push
repnz
in
fwait
push
lods
cmp
add
push
sub
jae
inc
mov
push
jne
mov
mov
and
fdivrs
xchg
clc
out
mov
sub
aad
iret
std
call
imul
fadds
push
outsb
test
push
into
push
packsswb
mov
das
js
sub
dec
shl
fidivrs
cmp
hlt
push
or
pop
xchg
and
fcomp
or
sub
lds
ror
lods
data16
hlt
test
sub
xchg
stos
dec
dec
fcomp
call
lahf
inc
mov
and
mov
insl
push
leave
nop
mulb
fsubr
cmp
mov
test
cmpsl
jne
add
pop
inc
enter
rolb
pushl
mov
flds
or
je
rolb
fcmovu
clc
jg
jo
arpl
jnp,pt
pusha
call
movsb
xchg
es
iret
xchg
mov
and
pop
int3
dec
mov
scas
fcoms
inc
mov
mov
mov
lahf
add
loopne,pn
push
push
ss
fnstcw
dec
jmp
movsb
test
ja
cwtl
es
flds
push
out
xchg
mov
lret
int3
test
lods
call
pop
xchg
or
adc
and
psrlw
addb
lret
lahf
jno
cmp
test
mov
test
jg
or
dec
and
frstor
xor
pop
jne
cmp
jmp
mov
mov
cli
inc
lcall
ret
lea
jg
cltd
and
sub
in
into
sub
pop
sbb
mov
pop
adcb
cmpl
jecxz
adc
sbb
add
xor
pop
cmp
xchg
add
mov
inc
and
sbb
lcall
iret
sar
ljmp
test
xor
xchg
jae
stos
xchg
push
jo
fcmove
add
out
cltd
mov
mov
iret
xchg
pop
je
jecxz
pop
sarl
jmp
repnz
stos
jns
test
pushf
mov
mov
ret
mov
jmp
fdivp
pop
scas
lahf
aaa
or
jle
sub
mov
pop
jecxz
mov
int
sti
das
daa
xchg
gs
mov
stos
fisubs
sbb
std
fimull
sbb
aam
push
xor
jle
shr
or
pop
cmp
dec
xchg
mov
push
enter
push
add
popf
lea
daa
pushf
clc
daa
pushf
lret
or
sub
mov
int
adc
mov
arpl
repnz
adc
adc
and
orb
adc
xchg
popa
and
jnp
jge
daa
xchg
jle
je
ja
stos
mov
jp
inc
in
aas
imul
stc
in
cmpsl
data16
push
jae
xchg
xlat
sbb
cli
xchg
lcall
mov
pop
hlt
xchg
add
cmp
jecxz
loop
jbe
xor
cmp
cmp
mov
lret
addr16
cs
xchg
or
xchg
cli
es
cwtl
and
add
fldt
pop
pop
sbb
add
not
xor
mov
aam
dec
adc
xchg
mov
fsubrl
and
xchg
repnz
jo
test
inc
mov
in
test
adc
cmp
negb
mov
inc
testl
push
jge
mov
aad
lea
adc
jne
aam
cli
popf
lock
lret
js
lret
stos
lcall
clc
jae
fsubrl
cmp
sahf
xor
int
xchg
sbb
cmpsl
enter
rolb
jge
movsb
sarl
pop
xchg
adc
cmp
test
shlb
cld
test
inc
add
das
push
pushf
mov
mov
lods
imul
popf
in
cmp
xlat
xor
dec
sbb
jnp
dec
mov
data16
lods
out
aas
mov
mov
xor
or
fwait
iret
mov
xor
add
fstps
test
xlat
xchg
gs
loop
push
dec
test
push
xchg
cli
xor
and
xor
mov
pop
xchg
imul
xchg
arpl
pop
std
xlat
in
or
adc
push
push
xchg
daa
inc
adc
test
aad
dec
imulb
test
mov
sbb
imul
or
lods
dec
dec
mov
out
js
dec
sbb
add
jnp
stos
mov
jmp
nop
pop
loopne
or
sub
or
scas
xor
mov
and
ljmp
into
mov
adc
call
cltd
test
fcmovbe
imul
ret
mov
push
mov
sahf
push
dec
sbb
lahf
enter
mov
je
jne
xchg
loopne
pop
shl
clc
pop
cmp
pop
push
nop
xchg
test
into
cmp
xchg
call
jmp
testb
sub
idivb
or
shlb
sub
mov
dec
aaa
sbb
fidivrl
rcrl
sub
pop
pusha
enter
mov
lret
aam
xor
sub
sti
insl
movsb
aam
xchg
jmp
nop
push
push
out
jp
push
xchg
aas
mov
in
jbe
das
das
popa
test
add
inc
mov
popf
push
jmp
pop
lea
shll
pusha
cmp
in
fnstsw
push
sahf
sarl
lds
pop
cltd
pop
sub
jbe
pop
bound
das
adc
mov
pop
mov
pop
mov
popa
pop
insb
fucomip
js
add
dec
fsubs
cld
rorb
popf
pop
pushf
imul
test
loopne
jo
mov
cmpsb
jo
insl
fwait
or
xor
stc
fcoml
popa
in
dec
xchg
rorb
pop
shll
es
int3
mov
cld
hlt
xchg
jne
popa
jnp
pop
setb
out
test
inc
pop
outsb
idivb
ja
and
out
test
sub
fwait
jle
adc
repz
cmp
jp
fisubrl
mov
and
test
jae
push
ljmp
sbb
popf
rorl
xlat
rclb
dec
xor
int
ret
loopne
xlat
repz
jmp
andb
cmp
sub
imul
pop
mov
jb
lods
push
shrb
jge
push
fnstcw
and
loop,pn
push
mov
adc
sbb
roll
cwtl
inc
pop
jecxz
and
xchg
pop
test
push
or
push
inc
sub
xchg
push
dec
lret
les
dec
mov
mov
xchg
test
imul
out
pop
pop
inc
nop
outsl
repz
lcall
mov
hlt
imul
shr
dec
orb
aas
dec
daa
lret
scas
dec
and
sti
cmp
ds
sbb
sti
and
sahf
inc
stos
or
fists
shrl
std
fsubrs
add
repnz
cmp
mov
jle
repz
jl
insl
in
xor
pop
cmp
and
fistl
cmp
dec
test
icebp
popf
fisttpl
mov
xchg
adc
sbb
imul
imul
add
push
mov
jno
mov
add
fwait
je
fs
stos
addl
jmp
and
lds
inc
xor
out
add
add
adc
cld
repz
test
or
sub
jo
mov
mov
add
lahf
adc
aam
mov
pop
dec
movsb
cmp
fdivrs
pushf
out
lods
jp
inc
push
push
jg
or
cltd
leave
out
ja
or
les
and
dec
ret
movsb
in
ss
test
mov
pusha
mov
icebp
pop
inc
push
cmp
scas
leave
mov
cmp
rcll
xchg
iret
and
lahf
adc
cs
test
dec
xchg
fldpi
sub
ja
sbb
push
inc
push
push
in
push
sysret
sbb
cmp
addr16
and
loope
jne
xlat
pop
mov
addr16
and
jne
jg
adc
jl
js
mov
jge
inc
fildl
rol
xor
cld
lock
sahf
test
mov
sbb
lds
mov
sub
add
or
dec
adc
or
xchg
dec
mov
cwtl
sub
imul
addb
cmpsl
ds
jp
jnp
fiaddl
cmp
mov
dec
inc
jecxz
nop
lods
fs
xlat
rorl
inc
stc
cmp
in
push
loopne
in
mov
and
shr
icebp
and
ds
jns
loopne
pusha
dec
inc
xorb
loop
cmp
xor
sbb
fcoml
pop
mov
js
xchg
out
lock
repz
mov
div
ja
or
adc
xlat
jl
push
push
mov
lock
idivl
movsl
mov
push
in
shr
pusha
cmp
sbb
pop
mov
and
jno
jle
ret
and
push
sbb
aad
adc
outsb
adc
sub
popf
jne
dec
repnz
jge
int3
dec
xor
in
je
lods
and
mov
push
jp
into
insb
jns
fs
mov
repnz
mov
inc
mov
dec
leave
sbb
in
lret
push
aam
push
test
push
xor
push
adc
mov
sahf
in
ljmp
sub
loopne
mov
insb
stos
ss
rorl
adc
mov
sbb
push
icebp
add
in
ljmp
scas
sarb
mov
pop
mov
jge
imul
mov
cmp
and
or
xchg
out
jmp
mov
leave
pusha
hlt
scas
into
ss
mov
and
mov
cld
cwtl
pop
leave
shll
cwtl
dec
int
sbb
dec
push
pop
dec
pop
push
sbb
adc
movsl
int3
cmc
inc
cli
push
fsubrs
push
sub
push
adc
mov
push
inc
in
lock
mov
lds
jl
jno
fsubl
nop
jmp
stos
fwait
in
xchg
lods
and
jbe
repnz
add
mov
lods
mov
popa
push
outsb
sbb
push
jecxz
sub
mov
fmull
repz
inc
xor
mov
push
insl
cmp
add
shll
mov
movsb
ja
mov
pop
insl
pop
mov
push
pop
imul
leavew
sti
mov
andb
sti
mov
dec
jb
or
insl
cmp
dec
out
in
add
test
cmp
cltd
cmpsl
xchg
xchg
outsb
mov
mov
ja
fstl
sub
cs
sub
or
xchg
cmp
jne
sti
sbb
mov
mov
cld
sub
rcrl
pusha
cmp
mov
ja
xor
loopne
push
aaa
arpl
scas
andb
fdivs
daa
aaa
sbb
mov
xchg
loop
mov
mov
out
pop
scas
test
add
rolb
call
sbb
lahf
adc
pop
pop
and
add
addr16
cmpsl
test
gs
call
scas
mov
adc
cmp
clc
dec
cli
push
and
lret
mov
sbb
je
cwtl
dec
lock
jne
mov
jle
xchg
inc
mov
and
into
mov
je
push
dec
out
and
sbb
out
ret
mov
xchg
pop
inc
mov
popa
sub
and
and
jecxz
movsl
sbb
adc
sti
das
add
add
cld
dec
js
sbb
loopne
mov
mov
lds
shll
jns
stos
fmul
cli
or
in
fistl
icebp
inc
outsb
or
xor
test
push
loop
stc
mov
mov
sub
and
push
jmp
and
cmp
pop
and
or
mov
adc
loop
fistps
or
js
fs
xchg
mov
and
mov
lret
pop
cmp
xchg
orl
lds
lds
fildl
jg
imul
aas
sub
sbb
scas
sub
and
and
xlat
jae
pushf
sbb
push
lcall
cmp
inc
loopne
fidivl
fildll
rorb
xchg
repnz
fnstenv
mov
ret
cmp
add
cmp
push
sub
stos
add
lret
dec
lock
loope
scas
int3
sbb
cmp
adc
xor
or
aam
pop
in
addl
loopne
fs
xor
pop
fdivl
imul
test
imul
pop
mov
mov
push
mov
stos
in
shrb
sbb
dec
mov
add
loop
imul
dec
mov
or
and
inc
cli
js
sub
pusha
dec
xor
add
lea
imull
xchg
lds
adcl
xlat
in
inc
and
movl
sub
mov
imul
aas
mov
pop
aad
ja
sub
fs
cltd
jecxz
and
lret
sti
sbb
mov
shll
sub
addr16
pusha
mov
ds
mov
mov
jbe
inc
cmp
xchg
in
imul
arpl
mov
std
xchg
mov
fstpt
push
or
clc
dec
xchg
insb
push
xchg
mov
icebp
dec
ficoms
push
xchg
pop
test
push
xor
outsl
pop
cld
add
nop
imull
jl
pop
cmp
adc
sbb
or
pop
push
pop
push
repz
push
stos
dec
pop
mov
mov
xor
sub
push
ret
sbb
fsubp
push
adc
test
outsb
call
dec
and
xor
not
add
rcr
shll
mov
out
rclb
add
push
stc
into
mov
aaa
sub
adc
and
into
popf
add
push
mov
out
inc
gs
push
xchg
shrl
shrl
sbb
test
popf
xchg
xchg
xchg
dec
outsl
push
jno
scas
jl
push
rolb
sub
cmpsb
push
rorl
push
mov
push
mov
outsl
add
jmp
or
sub
lods
xor
inc
adc
cmc
pusha
cmp
addl
cmp
int3
sbb
divl
mov
fcoml
popa
stos
xlat
dec
mov
fimuls
mov
mov
cli
mov
mov
dec
sub
das
js
inc
add
addl
xchg
jp
and
ljmp
rclb
push
mov
popf
mov
push
cmpsl
imul
lods
jmp
mov
ret
mov
jne
pop
xor
xchg
out
in
mov
cmp
sub
jecxz
loope
fadds
mov
push
outsb
ja
lcall
dec
aam
movsb
aam
mov
jno
cmp
jno
add
xchg
inc
cli
arpl
test
mov
inc
or
lcall
shll
pop
mov
fisubl
inc
push
repz
jp
inc
std
and
std
lret
adc
push
dec
xor
test
pushf
mov
das
orl
jl
jo
pop
push
movsb
pop
push
and
push
or
sbb
adc
dec
enter
pop
lahf
mov
in
inc
lcall
test
mul
mov
mov
movsl
lds
lds
jbe
outsb
pop
sbb
mov
popl
mov
mov
mull
push
cmp
mov
inc
adcw
out
in
push
xchg
cmpsb
sbb
push
clc
loop
sahf
xlat
sti
test
jo,pn
and
jle
movsb
lss
jae
lret
jg
adc
fs
mov
std
imul
xchg
or
sbb
push
mov
pop
push
adc
and
adc
int
dec
xor
push
and
or
adc
cmpsb
jl
fidivs
pop
sub
cmp
aaa
inc
jg
inc
shll
test
mov
test
setl
les
mov
pop
aad
mull
xor
pop
ljmp
int
xor
faddl
icebp
mov
call
pop
repz
push
xor
xor
outsl
fisubrs
ficoms
sbb
add
push
xchg
xor
sub
mov
xchg
sub
fwait
repz
inc
adc
inc
adc
cmp
out
cmp
popa
sub
data16
dec
lods
or
lret
aam
sbbb
fsts
jle
pop
es
pop
mov
ret
jl
ds
pop
inc
lods
jmp
repnz
lret
mov
jmp
pop
dec
mov
adc
and
cwtl
push
fldcw
xor
mov
jp
jbe
shr
cli
sub
pop
cmp
lret
sbb
and
icebp
xchg
push
add
push
insl
pop
nop
cmpsl
pop
ds
xchg
mov
sbbb
ror
aad
push
mov
scas
sahf
arpl
xchg
iret
sar
movsl
mov
jge
movsl
lret
sbb
test
xchg
fwait
pop
aas
repz
sbb
gs
adc
add
gs
pushf
outsl
adc
bound
dec
add
rolb
aaa
iret
mov
dec
lcall
fimuls
inc
jo
cs
mov
mov
adc
ffreep
or
or
in
xorl
bnd
stos
pushf
add
jns
shrl
push
fdivrp
push
sbb
jecxz
shrl
or
ficomps
mov
xor
jo
test
movsb
sbb
and
pop
push
add
je
ret
leave
aas
pop
into
imul
dec
lods
popa
lods
push
jae
rorb
sub
stc
cltd
xor
psrlq
test
sahf
cs
repnz
inc
sub
mov
cmc
movsl
aaa
or
clc
icebp
fs
pop
in
test
pop
fidivrl
push
cmpsb
loope
aaa
das
insb
sub
adc
je
jae
in
xorb
ret
mov
cmp
hlt
or
ret
xchg
mov
sub
lods
mov
mov
mov
add
push
clc
inc
sti
add
call
jae
test
enter
cmpb
xchg
and
dec
scas
xor
xor
stos
pop
lahf
xor
pop
add
stos
in
push
jns
push
aas
push
sub
mov
loop
push
ja
jb
addb
cld
fadds
adc
lods
sub
lret
and
sbb
adc
lcall
or
daa
les
mov
xchg
pop
fisubs
enter
shll
dec
leave
jae
push
xor
leave
scas
jmp
sub
xchg
jbe
xor
and
mov
or
or
test
lahf
insb
adc
xor
mov
jmp
push
add
bound
jle
xor
mov
xor
mov
add
in
push
push
jnp
jp
push
jns
loop
dec
ljmp
or
pop
lcall
fisubrs
or
pop
xor
push
xorl
mov
adc
and
pop
shl
cmp
jg
addr16
pop
sub
nop
dec
and
push
add
push
je
cmp
xchg
incb
pop
cld
lcall
lods
ss
lcall
inc
addl
jecxz
jg
xor
mov
lods
sbb
jb
insb
inc
pop
mov
mov
mov
push
cwtl
shl
pop
cmp
call
cli
fldt
mov
xchg
jmp
addr16
in
pop
pop
and
jecxz
loope
add
push
add
sbb
arpl
ret
sbb
dec
shl
divb
push
jo
movsl
mov
jp
popa
fdivl
inc
add
jmp
xor
pop
mov
pop
mov
cwtl
fdivrl
andb
lods
jle
cmp
adc
cltd
jecxz
xchg
xlat
jecxz
jg
ljmp
test
stc
inc
cmpsl
jne
ja
adc
inc
js
sub
mov
or
iret
aad
loop
push
mov
stos
cmp
pop
dec
fcmovnb
nop
idiv
jg
xlat
cmp
testb
sti
add
das
cmp
cmp
jg
mov
push
xor
pop
fs
pop
call
inc
dec
movb
lods
leave
pop
jae
jmp
popf
pop
pop
in
out
in
xor
adc
aad
inc
sbbl
xorb
xor
jbe
pop
cs
sti
adc
into
in
sbb
in
data16
hlt
xchg
cli
pop
fidivrl
xor
or
iret
push
cmp
jnp
xorb
pop
enter
scas
leave
fisubrs
inc
and
enter
popf
lea
adc
xor
pushf
mov
inc
cwtl
cld
enter
lock
sahf
out
pushw
stc
adc
jp
dec
repnz
mov
lods
add
jae
push
mov
push
jl
xlat
jecxz
lcall
mov
divb
add
xor
lahf
mov
daa
mov
shrb
push
bound
scas
mov
dec
cltd
sarb
lds
in
je
cmp
dec
aaa
ss
cld
jns
ja
nop
mov
lods
push
mov
ja
inc
mov
mov
pop
in
jae
and
xchg
mov
pop
test
fldcw
fdivrs
mov
push
add
sarl
sub
pop
movsl
pop
mov
jge
pushf
fistps
cmp
cmp
inc
aaa
fs
das
andl
jmp
mov
bound
cmp
pop
inc
adc
mov
repnz
pop
in
push
pavgw
mov
mov
loopne
xchg
jl,pt
jbe
cmp
shrb
jp
pusha
jge
pop
xor
add
and
sub
imul
aas
loop
sub
xchg
cmpsb
scas
sbb
xor
mov
xchg
cs
mov
inc
jae
pusha
daa
lret
dec
adc
inc
in
loop
push
pop
insl
inc
mov
sub
aad
push
dec
repz
imul
cmpsb
repnz
sub
mov
lret
sbb
push
mov
ret
insl
or
negb
imul
jecxz
jmp
jnp
mov
inc
mov
adc
mov
pop
push
xchg
pop
mov
dec
js
xchg
inc
pop
stos
cmp
sbb
pop
sub
jp
pop
aam
inc
pop
rcrl
lcall
mov
push
ja
lret
cmp
movsb
das
mov
pushf
push
or
pop
pop
icebp
jl
pushf
mov
std
test
or
dec
lea
jg
ss
push
scas
mov
lret
pop
out
xlat
inc
mov
xlat
pushf
icebp
movsb
int
add
sbbl
movsb
lds
insl
sarb
xor
mov
pop
ret
arpl
hlt
xor
popa
into
stc
sbb
xchg
insb
je
cmpsl
xor
arpl
and
adc
pop
cmpsl
pop
cmpsl
test
fwait
lds
mov
aad
add
add
jecxz,pn
rcrb
scas
lods
rcr
call
imul
aad
test
movsl
sbb
stos
popf
movsb
pushf
adc
cmc
popa
mov
jmp
and
mov
jmp
add
adc
mov
das
jecxz
ret
cs
cmp
int3
lods
sub
fidivrs
dec
xchg
pop
pop
dec
cmp
push
adc
mov
rcrl
or
fcmove
mov
cmp
jp
nop
cld
push
push
mov
enter
adc
mov
fsubrl
jae
jmp
cld
sbb
ret
inc
stc
sub
fmull
jns
xor
jmp
flds
loope
inc
mov
cmp
hlt
sbb
pop
add
hlt
adcl
loopne
jno
xor
mov
jmp
movsb
pushf
adc
sbb
push
mov
cmp
mov
cs
fmuls
push
and
sti
fsubrs
or
jmp
enter
std
ret
rsqrtps
sbb
add
fs
test
jl
xchg
rclb
xorl
mov
leave
jne
js
faddl
je
jle
mov
xchg
sub
and
xor
popa
push
sub
gs
pushf
pop
jbe
xchg
fdivl
jmp
in
out
mov
mov
lds
xchg
loop
push
gs
sub
fwait
and
aaa
sti
lods
movsl
into
cmp
mov
ficoml
jae
or
mov
out
jecxz,pn
orl
sub
hlt
pop
or
adc
mov
in
adcl
xchg
into
fldl
xor
in
lret
sbb
inc
shll
insb
pop
outsl
mov
mov
hlt
pop
sub
outsl
movsb
in
shll
xchg
sub
push
hlt
cwtl
lock
daa
pop
loope
xor
loop
mov
jp
and
dec
daa
lds
push
push
negl
test
mov
sbb
dec
pop
dec
loopne
clc
cmp
nop
jecxz
rcll
pop
pop
adc
cmpsl
outsl
mov
shll
rcrl
sbb
je
push
mov
inc
movsb
or
xor
arpl
add
mov
movsb
lock
mov
pop
sub
icebp
pop
frstor
in
dec
loope
dec
add
dec
fidivs
or
cld
pop
fwait
adc
loopne
mov
mov
mov
mov
and
pop
in
and
mov
pop
loopne
add
movsl
push
daa
or
fimull
int3
shrl
cmpsb
lcall
in
lds
fldt
ja
daa
add
imul
test
add
scas
bound
cmp
inc
jb
pop
push
jo
sbb
data16
fnsave
fidivrl
mov
mov
mov
push
jl
add
jb
or
ljmp
jmp
sbb
clc
sbbb
inc
and
js
lock
pop
push
lahf
in
addr16
sub
add
ficoms
xchg
pop
ffreep
out
inc
and
xlat
ffreep
addr16
or
int3
dec
loopne
nop
out
xchg
jle
mov
stos
inc
fistpl
lret
pop
lea
push
mov
jb
insl
push
fistpl
xlat
je
adc
lock
cmc
and
bsr
loop
rorl
jnp
addr16
imul
xlat
loop
or
pushf
xor
js
sahf
sub
lea
lea
mov
mov
dec
push
ficoml
movsl
lds
cmovle
inc
aas
dec
test
mov
outsb
rcll
scas
fstps
dec
xchg
adc
rclb
dec
hlt
mov
lock
fnstcw
into
or
jno
arpl
loop
fwait
arpl
mov
dec
cmpsb
add
or
mov
push
jp
fildll
pop
mov
mov
jle
xchg
or
js
adc
push
xchg
ljmp
dec
pop
dec
dec
xchg
sbb
mov
mov
adc
jo
mov
mov
xor
add
jnp
mov
xchg
mov
scas
movl
cmpsl
jecxz
nop
xlat
out
mov
pop
popf
popa
inc
add
fsubr
lods
stc
xorb
stos
imul
jbe
mov
add
mov
shll
inc
mov
lahf
push
lods
add
scas
loopne
sbb
lds
mov
mov
scas
push
sbb
pop
shlb
add
mov
xor
out
or
and
lret
ja
cmova
xchg
movsb
mov
push
xlat
xchg
fiaddl
add
jg
push
push
sbb
adc
lods
pop
mov
sub
xor
cmp
adc
mov
and
ret
xchg
rcll
imul
icebp
adc
mov
pop
mov
outsb
xchg
inc
xchg
lds
ja
add
push
sub
stos
je
hlt
cs
out
push
add
outsl
push
inc
fdivl
fldl
enter
neg
xor
movsl
and
mov
outsb
loope
in
inc
shrb
sbbb
pop
dec
jmp
sbb
sub
mov
sub
rcrl
in
je
outsl
out
daa
lret
shrl
mov
push
repz
dec
xchg
mov
mov
arpl
out
xor
jmp
lahf
out
pop
lods
sub
js
dec
dec
ss
das
adc
scas
cwtl
add
xchg
ret
inc
inc
ja
dec
repnz
cmp
gs
in
and
or
pop
les
and
bound
ret
cmpsl
bound
int
and
pop
lret
pusha
cmp
stos
and
jnp
xchg
call
sbb
cmpsl
push
leave
mov
into
rcr
cwtl
push
cmpb
xor
shl
les
dec
xchg
cmp
leave
imull
js
cmp
les
sub
repnz
stos
std
loope
and
setge
in
add
test
push
mov
and
inc
mov
pop
push
push
adc
icebp
cmpsl
xor
mov
mov
fwait
out
aas
out
dec
mov
subb
in
movsl
clc
xor
lcall
jns
clc
cltd
popa
pop
adc
push
sub
clc
in
xchg
dec
insl
cs
mov
mov
cwtl
cwtl
sbb
pop
xorb
inc
jno
dec
jg
dec
int
dec
fwait
rcrb
subb
fcomps
mov
lock
sahf
test
enter
xlat
cs
fwait
mov
cmp
pop
sbb
xchg
cs
sbb
ret
inc
jae
lock
jmp
popf
lcall
aaa
repz
dec
mov
cmp
mov
add
jns
pop
jb
mov
push
sub
mov
lret
or
push
mov
push
adc
jp
push
mov
lret
ja
scas
sub
mov
push
pusha
in
aad
cwtl
pop
fstpt
outsb
aas
out
das
das
inc
inc
or
les
push
in
mov
mul
cld
nop
in
inc
mov
mov
stos
pop
les
jns
cmp
cmp
mov
cli
mov
add
sbb
mov
cmp
jg
sahf
adc
pop
and
mov
dec
add
icebp
push
ljmp
push
inc
and
jl
fnstsw
hlt
int
xchg
popf
loopne
or
rclb
mov
pop
mov
in
and
movsl
shrb
std
or
divb
dec
and
xchg
packuswb
in
pop
or
push
xchg
out
push
dec
add
mov
ror
icebp
dec
test
lds
fmuls
pop
sbb
mov
dec
xchg
repz
mov
imulb
pop
cs
xor
mov
dec
push
cmpsl
pop
std
jne
xor
mov
outsb
clc
push
stc
xchg
mov
pop
ja,pn
inc
fstpl
movb
iret
xor
xor
pop
hlt
sub
push
sbbl
inc
mov
add
adc
sub
cmp
sub
lock
fnstsw
iret
or
jle
bnd
add
cmc
mov
roll
or
xchg
sub
or
dec
movsb
bound
mov
rcr
ret
xchg
loopne
movsl
repnz
in
sub
or
pop
pop
fstl
xchg
arpl
mov
repnz
leave
mov
into
dec
aas
add
jno
mov
mov
ds
xchg
sbb
decl
in
jns
mov
icebp
pushf
movsl
test
call
xor
insl
orb
test
mov
shl
or
lretw
adc
push
push
cltd
lcall
mov
and
jmp
inc
mov
mov
mov
clc
jo
daa
fldcw
mov
jnp
data16
ss
sub
inc
cmp
mov
je
push
pusha
pop
rorl
xchg
mov
sbb
sbb
or
outsl
enter
or
push
push
mov
mov
js
movsl
movsb
ss
mov
scas
dec
xchg
or
ds
xchg
pop
mov
xor
mov
pop
dec
pop
mov
shl
add
cmp
sbb
cld
sbb
flds
rcrb
add
jne
push
xor
sti
sahf
rorl
out
mov
insl
addl
adc
enter
adc
lock
sbb
cmp
cmp
jle
mov
mov
aam
lcall
sbb
jge
push
add
sahf
fldt
call
add
xchg
lods
xchg
ljmp
or
and
push
mov
pop
lods
or
repnz
out
pop
test
add
popf
dec
xor
test
and
inc
mov
lds
jle
gs
scas
sbb
icebp
lds
and
pop
es
push
mov
into
insl
inc
ret
lods
jge
pop
shlb
push
mov
popf
jge
jno
inc
inc
ret
lret
jp
cmp
int3
fcomps
mov
adc
push
or
pop
cwtl
dec
cmp
jmp
popf
mov
pop
push
sbb
inc
fscale
repz
lcall
notl
and
adc
cltd
les
fdivs
push
sarb
push
xor
adc
ss
mov
stos
outsl
dec
inc
lods
rolb
je
stos
sub
push
xchg
sbb
jmp
xchg
rcll
jmp
adc
into
jmp
lock
leave
nop
mov
xor
pop
xor
int3
push
add
and
mov
or
fcoms
pop
jg
jns
call
sub
or
pop
pusha
int3
insb
sbb
dec
add
sub
pop
out
inc
insb
mov
lods
and
or
sbb
add
aad
hlt
aaa
inc
fsubrl
dec
xor
je
pop
cwtl
iret
xchg
mov
rorl
movsb
stc
sub
mov
lods
mov
shrb
pop
mov
push
sbb
addr16
mov
scas
clc
xlat
ffree
jmp
sub
lret
rcr
das
fdivrs
jmp
enter
dec
icebp
cmpxchg
add
bound
push
and
xlat
cmc
xlat
call
cmp
rcr
xor
push
test
inc
out
add
cmp
ss
fcomp
icebp
xchg
lahf
dec
jnp
jge
lcall
rclb
insl
mov
pop
cli
push
xor
dec
jmp
fisttpll
xlat
movsl
add
fstl
dec
enter
insl
out
leave
sbb
jp
sbb
mov
fbstp
je
out
sub
jg
mov
pop
push
lahf
mov
cmpsb
mov
add
into
hlt
scas
repz
dec
add
push
xchg
notb
inc
lods
or
push
mov
push
jbe
mov
lods
mov
out
jbe
jae
loope
dec
outsb
fsts
cmp
inc
adc
mov
cmp
inc
pusha
sbb
xor
xchg
pop
mov
jg
sub
jmp
movsb
js
in
nop
jo
push
aad
inc
pop
aas
nop
pop
gs
mov
cmp
push
jmp
pop
aad
test
stos
fildll
sub
mov
subb
dec
mov
insl
loope
je
rcrb
es
shll
arpl
sub
jmp
adc
jae
mov
mov
cwtl
test
ret
mov
imul
jge
nop
jle
sarb
lock
add
fnstcw
arpl
mov
push
push
adc
mov
jge
aad
inc
mov
add
lcall
cmp
test
add
sbb
leave
fs
ss
lcall
mov
cmc
sbb
fsubs
adc
jnp
cmp
ficoms
push
jnp
cmp
in
mulb
xor
mov
out
pop
pop
xchg
outsb
pop
cmpsl
fsub
sbb
movsb
sub
jl
pop
rorb
imul
adcb
lret
aas
or
fidivs
lea
mov
xor
fisubl
cs
add
mov
nop
jmp
cmpsl
cmpsl
mov
in
add
push
sub
in
cmc
sub
mov
xor
inc
dec
fistpl
scas
lds
sub
ror
loopne
insb
mov
cmc
cli
xchg
fs
sbb
lea
add
cmpsl
out
cli
hlt
jne
cli
aas
jp
add
ja
jp
jno
lret
or
sub
loope
iret
dec
or
out
int
pop
mov
call
cmpsl
dec
fimuls
cmpsl
pop
fsubp
pop
and
arpl
es
cmp
ficomps
icebp
rorb
adc
mov
xchg
clc
lea
js
insl
rcrl
data16
sub
and
mov
xor
mov
jne
xor
and
add
movups
jnp
aaa
dec
sub
add
shl
mov
outsl
aas
lret
push
dec
mov
aad
rclb
push
enter
sub
xlat
pop
or
cmp
idivl
pop
orb
pop
jmp
jno
push
loop
adc
mov
leave
lret
sub
jb
ror
mov
xor
negl
mov
jbe
lahf
xor
aaa
adcb
pop
mov
mov
dec
xor
pmaxsw
lods
insl
test
jne
cmc
cmp
hlt
and
adc
adc
lods
repnz
push
int3
pop
mov
push
xor
ret
mov
xchg
dec
imul
xchg
inc
push
xchg
popf
cld
in
jg
cmp
pop
js
and
cmp
stos
imul
jo
loop
je
dec
test
mov
mov
dec
dec
stos
mov
mov
loope
cmpsb
add
dec
jo
mov
push
std
push
enter
push
imul
push
fsubs
fwait
jo
aam
cmpsb
push
aas
push
in
fdivrs
jecxz
adc
in
leave
and
mov
or
aas
js
in
xchg
loope
cltd
sbb
lea
push
out
xor
xchg
mov
lret
push
xor
es
ljmp
cltd
ja
fsts
sti
test
mov
adc
out
popa
jmp
lahf
mov
jb
sub
mov
cwtl
or
pop
addr16
or
es
lret
cld
mov
add
jmp
lret
roll
fsubr
das
jbe
loop
dec
xchg
or
pop
dec
mov
scas
sbb
out
xchg
mov
dec
inc
jno
lcall
shlb
mov
movsl
mov
repnz
mulb
and
or
jmp
mov
mov
mov
jnp
ljmp
xchg
stos
xor
xor
jae
lcall
outsb
outsl
fsts
fisubrs
xor
sbb
cmp
or
push
ret
mov
fdecstp
pop
inc
push
adc
lret
in
push
int3
jecxz
xor
rorl
mov
cmp
jle
and
int3
pop
push
xchg
sbb
mov
fiadds
jbe
aad
cmp
leave
stos
inc
pop
into
imul
dec
test
mov
das
pop
mov
flds
mov
stos
lods
jmp
adc
sub
imul
inc
cld
cmpl
jbe
stos
jmp
mov
ror
and
fstl
cltd
rcl
xchg
mov
fsubl
popf
test
mov
lcall
xchg
js
shlb
xor
dec
out
sbb
adc
jae
mov
jge
xchg
adc
lds
dec
mov
xchg
xorb
push
push
push
jle
imulb
repz
jge
orb
loopne
cmp
mov
cli
aad
pop
cli
inc
add
adc
xor
or
jp
mov
arpl
repz
shll
sub
rcl
jp
or
xor
adc
cmp
cmc
push
lock
adc
rorb
sbb
std
sub
mov
cmp
push
ljmp
add
and
or
fisttpll
sub
pop
call
sub
and
subl
and
cmc
inc
mov
xor
push
outsb
mov
fmuls
div
data16
rcll
shrl
call
mov
iret
cmpsl
mov
fsubs
mov
dec
movl
xchg
xchg
pop
jge
out
cmp
inc
addb
loopne
pop
push
outsb
sub
sub
mov
mov
add
pop
sbbb
aad
imul
cmp
data16
fidivrl
fadd
faddl
sub
sub
dec
pop
xchg
scas
mov
sti
inc
aaa
sub
test
aas
es
adc
iret
clc
rorb
addr16
jecxz
int3
imul
lcall
dec
mov
sub
adc
cwtl
jl
cmp
pop
jne
xor
xchg
adc
int
mov
lock
mov
out
into
loop
in
pop
divb
or
pop
add
popf
mov
stos
sub
inc
or
sahf
mov
sbb
inc
pop
sbb
add
ss
fstl
jle
data16
and
icebp
ja
or
mov
test
sub
fstpt
mov
lods
fxch
rcll
repz
lret
push
mov
stos
push
sub
or
int
test
cmp
jns
add
aaa
and
cmpsl
xor
adcl
add
mov
mov
cmp
ror
ss
repz
jl
cmpsl
insb
mov
xchg
stos
lds
xchg
or
push
arpl
shrb
mov
xorb
popa
dec
lret
lret
icebp
movsl
mov
dec
ja
stos
mov
xor
push
jbe
int
and
dec
fsubrs
out
mov
or
cwtl
add
push
cmpsb
scas
jmp
add
imull
ror
sub
jb
cmp
fidivs
push
jae
xor
mov
out
xchg
fisubl
hlt
push
jg
or
movsl
insb
rolb
lock
orl
loope
fsubrs
mov
mov
fwait
sub
add
imul
mov
insl
pusha
inc
adc
push
jo
xchg
push
push
pusha
or
cmpb
jbe
pop
push
pop
mov
push
ss
je
scas
arpl
mov
mov
dec
cwtl
inc
sub
shl
fildll
pop
outsb
push
cli
repz
xchg
roll
mov
lds
hlt
or
aaa
xor
mov
xchg
ja
mov
pop
testb
sahf
push
add
aas
inc
shrb
imul
sbb
dec
scas
mov
test
in
pop
sti
xchg
arpl
imul
test
loop
fcoms
push
mov
aas
mov
jnp
mov
xchg
jl
push
insb
mov
icebp
inc
iret
mov
in
adc
adc
lods
iret
mov
insl
stc
je
pushl
movsb
sub
jmp
inc
sbb
pusha
cltd
and
xchg
lcall
adc
inc
push
addr16
cltd
andb
jnp
push
sbb
cltd
test
mov
cmp
jecxz
mov
lcall
je
int3
dec
fsub
cmp
push
int3
negl
scas
sub
push
lea
mov
inc
add
loop
insl
shrb
pusha
pop
inc
daa
ret
outsb
xchg
cltd
sub
das
aad
xchg
xchg
and
imul
mov
ljmp
imul
mov
cmp
xchg
insl
add
xor
arpl
mov
xchg
pop
nop
dec
adc
movsb
aaa
into
jle
push
popf
int3
sbb
lret
pusha
insl
push
ss
sti
test
scas
lock
xor
jmp
add
push
fmul
aaa
cmpsb
mov
in
fldenv
or
inc
xchg
push
fwait
lods
ljmp
xor
push
xor
mov
jmp
leave
repz
mov
lea
pop
sahf
sahf
jo
call
repnz
outsl
dec
pushf
mov
or
add
mov
mov
cmp
out
jp
test
cld
dec
add
push
dec
ljmp
sti
insl
xor
std
mov
jns
ret
and
inc
stc
subl
gs
jne
push
fcoms
roll
or
enter
jbe,pn
pop
adc
jmp
jp
and
call
and
andb
push
push
je
aam
sub
cld
int3
adc
sbb
popa
mov
inc
rorb
dec
scas
sub
mov
fdivrl
or
jge
jno
jbe
mov
mov
xor
xor
or
xor
push
std
xchg
xorl
jo
ja
loop
jns
lret
xchg
mov
aaa
and
cmp
mov
mov
repz
xchg
jl
xchg
jl
jae
add
testl
push
stos
jp
pop
inc
xor
fwait
ret
sahf
push
lahf
incb
mov
mov
loop
or
loopne
adc
mov
push
rcrl
and
sbb
cli
call
sahf
aaa
lahf
pusha
mov
push
mov
lea
mov
jo
mov
notb
mov
stos
mov
push
iret
push
mov
adc
pusha
and
mov
shlb
inc
xor
and
imul
jge
sub
mov
push
imul
test
mov
loope
mov
add
sbb
add
sub
add
mov
repz
jno
push
movsl
pop
hlt
addr16
in
js
addl
push
sbb
jne
or
push
xor
mov
adc
or
into
mov
aam
dec
dec
pop
andb
outsb
rol
sti
into
cmp
sahf
pop
leave
pop
test
xor
add
adc
ror
rolb
and
imul
push
cwtl
iret
add
loope
cmp
aad
dec
mov
add
jne
pop
jecxz
pop
dec
lret
shlb
or
je
and
insb
pushf
inc
adc
ljmp
xchg
pop
inc
lods
js
leave
cmpsb
mov
mov
mov
leave
push
mov
cld
inc
mov
bnd
adc
fsts
xlat
js
mov
cmc
cmp
in
sarl
dec
and
push
xchg
sbb
shrl
mov
flds
pop
or
push
mov
pop
push
inc
addl
dec
adc
inc
lahf
pop
aad
outsb
mov
sbb
xor
mov
and
dec
stc
es
daa
sahf
push
fsubr
xlat
ss
daa
sbb
pop
incb
fs
andb
shll
add
lods
out
nop
sbb
sar
pusha
test
xchg
clc
mov
push
es
xor
fidivs
pop
cs
cmpsb
jle
in
sub
xor
movsb
add
inc
push
mov
sub
or
sub
out
rcl
test
loopne
and
mov
jb
inc
mov
pusha
push
cs
xor
jns
inc
pop
sbb
mov
or
dec
mov
ss
lock
mov
or
lds
sub
arpl
mov
hlt
daa
fwait
js
cli
xchg
push
and
mov
push
fdivr
xchg
xor
mov
add
sub
ds
es
xchg
cmpsl
xor
jle
cmp
fnsave
mov
sbb
mov
pusha
fidivrs
pop
xchg
ds
cld
aad
insl
inc
jmp
inc
or
sub
aad
dec
aad
push
xchg
iret
xor
int3
std
lret
push
push
xlat
cltd
mov
popa
out
in
add
lret
adc
push
or
in
mov
rcrb
push
ret
mov
cmpsl
cmp
xchg
outsl
and
mov
ss
shl
sti
jne
mov
cmpsl
pop
or
ss
push
mov
lcall
aaa
push
push
mov
hlt
sbb
or
sub
cwtl
jns
mov
mov
mov
das
cwtl
inc
repz
jne
sub
mov
sbb
sti
adc
xor
hlt
je
movsb
imul
dec
jno
int
dec
add
sbb
xchg
ja
ffree
outsl
push
repz
sbb
inc
jmp
xor
inc
jbe
insb
bound
test
roll
mov
add
push
aad
sub
mov
and
and
jg
dec
enter
divl
aam
or
cmp
es
inc
push
aas
lea
aaa
pop
xor
adc
inc
adc
sub
inc
mov
daa
fs
push
test
repz
or
jne
jecxz
fcoms
push
adc
xchg
pop
dec
ret
push
negl
cli
test
fisubrs
xor
push
adc
mov
adc
arpl
imull
mov
push
mov
rorb
xchg
and
sbb
mov
and
xor
divb
xor
inc
aas
cmp
test
and
xor
imul
mov
hlt
lahf
xor
div
insb
data16
mov
adc
cmpsb
cli
jb
dec
jns
mov
xor
outsb
mov
xor
jo
ror
and
pop
or
lret
sub
outsl
or
pop
push
adc
gs
rcrb
mov
jae
in
fisubs
inc
mov
xor
jo
mov
mov
mov
or
xchg
pop
sub
out
xor
out
mov
sbb
inc
cmp
adc
mov
mov
sub
inc
xor
loope
xchg
scas
lods
fdivl
cltd
ss
sub
imul
enter
inc
aas
mov
jbe
push
vpcmpeqd
or
aaa
adc
mov
cmpl
pop
mov
cmpsb
sarl
dec
aad
xchg
or
inc
sahf
pusha
add
jne
lea
lahf
sub
jne
adc
shrl
je
push
and
cwtl
push
or
push
cmpsb
fcomps
push
cmpsl
mov
pushf
mov
and
fildl
or
mov
cli
push
lds
into
nop
push
movsb
lahf
out
je
lods
jecxz
test
and
cmc
jmp
cmc
into
js
and
lret
mov
mov
popf
xchg
pop
lcall
pop
notl
jae
sti
fstpt
xor
das
movsl
xor
lock
push
push
dec
dec
jnp
fwait
in
jmp
mov
bnd
jno
daa
aaa
lahf
jl
push
in
lahf
ret
rorl
scas
ja
sti
sahf
imul
mov
jne
hlt
xchg
xchg
insb
sbb
data16
push
mov
stos
lea
push
test
mov
data16
arpl
dec
lods
lret
jae
gs
out
push
cltd
stos
test
mov
sub
pop
or
xchg
xchg
mov
loop
add
lcall
xor
mov
dec
mov
adc
mov
scas
scas
mov
aas
arpl
sahf
rcrb
or
xor
aas
sar
cmp
push
jecxz
sbb
sub
test
and
stos
icebp
add
dec
stos
sbb
int
rcll
ret
xor
mov
pop
outsl
mov
add
hlt
iret
push
insb
insl
test
jp
addb
insb
add
outsb
cmp
inc
cltd
add
adc
leave
adc
mov
inc
mov
mov
mov
clc
mov
jle
jle
xchg
sub
pushf
daa
jno
nop
xchg
fldt
int
sbb
test
lods
jne
lahf
lds
add
bnd
mov
push
xchg
mov
jge
adcl
shlb
in
cld
or
popf
inc
mov
mov
mov
push
push
dec
fdiv
mov
mov
dec
mov
sbbb
sbb
pushf
dec
inc
out
and
loop
jecxz
sbb
movsl
fwait
mov
insb
in
andb
mov
lock
scas
imul
clc
shlb
mov
mov
mov
push
stos
mov
mov
movsl
and
icebp
add
int3
arpl
test
jg
mov
jp
lods
sub
xor
stos
imul
addr16
idivb
cmp
jle
sub
mov
int3
mov
int3
dec
mov
notl
cmp
mov
mov
mov
loop
daa
in
jb
jge
add
dec
mov
and
cmpsl
arpl
bound
in
lahf
inc
or
jp
mov
imul
inc
outsl
dec
scas
mov
lret
movsb
pop
push
jno
imul
std
into
jne
mov
and
paddw
inc
ds
mov
es
push
cs
repnz
cs
insl
push
xorb
sub
bound
cmp
lods
pop
in
sub
push
jp
in
push
mov
pop
out
nop
inc
mov
addr16
imul
lahf
stc
jne
xor
pop
inc
add
loope
jle
and
dec
xchg
xlat
cmpsb
pop
lcall
rcrl
xlat
mov
mov
loope
aam
or
xor
ss
out
loopne
rcrb
repnz
add
inc
and
jns
or
or
adc
adc
nop
shrb
nop
in
jne
mov
or
fadds
mov
idiv
aas
fidivrs
mov
lret
xchg
js
cmp
mov
enter
xchg
lods
sbb
xchg
or
and
fisubl
lret
je
ds
xchg
push
xor
fwait
jno
lahf
sbb
enter
pop
sbb
fcmovnu
int3
fistpll
mov
dec
fucomip
divl
lret
mov
dec
clc
fucomp
pop
add
scas
bound
call
dec
mov
push
pop
pop
mov
jnp
std
mov
repnz
xor
insb
shl
pop
xor
xchg
pop
xor
cltd
movsb
cmp
fidivs
xchg
in
gs
mov
arpl
pop
das
or
mov
and
mov
imul
jp
jg
add
cmp
cmp
mov
xchg
sarl
add
xchg
popf
shrb
cwtl
popf
imul
aaa
mov
push
or
fs
jg
aad
sub
shrl
insl
and
flds
ljmp
pop
and
inc
lahf
jnp
cmp
fcomps
or
loopne
outsl
cltd
sbbb
push
dec
movsl
xor
jl
sub
fwait
repnz
or
scas
push
xor
test
outsl
pushf
pop
test
sti
and
scas
sub
xchg
sbb
lret
mov
and
popl
push
mov
mov
rol
cmp
and
cmp
cmp
push
mov
fwait
xor
sub
dec
shrb
add
sarb
das
xchg
push
adc
leave
cltd
xor
test
fwait
setle
inc
mov
icebp
push
push
cs
mov
lcall
mov
sub
fcmovu
mov
into
push
dec
add
lds
dec
stc
arpl
ljmp
push
dec
sbb
sahf
loope
das
adc
xor
sbb
adc
addr16
push
inc
mov
jl
dec
clc
and
mov
add
sbb
xchg
jo
cltd
xor
sub
mov
mov
je
into
fists
or
push
cmp
dec
inc
xchg
and
push
or
dec
aas
jecxz
rcrl
js
std
mov
inc
andb
repz
test
bound
mov
insl
ja
cmp
dec
mov
xchg
aad
aam
add
mov
rclb
stc
xchg
dec
popa
mov
jmp
cld
btc
fcoms
dec
sbb
icebp
dec
xor
mov
je
cmp
test
xlat
fidivl
stc
inc
aaa
mov
jae
cltd
mov
mov
and
push
jno
sahf
mov
push
clc
xchg
push
or
xchg
and
loop
add
shrb
jne
mov
cwtl
shrb
je
shrb
mov
outsb
aas
mov
lret
xchg
inc
xchg
not
xchg
pop
dec
pop
sbb
cmp
adc
frndint
cmp
inc
xchg
xor
fsubl
pop
and
pop
outsl
mov
pop
andl
outsb
pop
sbb
sbb
cld
scas
xor
movsb
rol
or
test
sbbl
std
insl
mov
xchg
shlb
mov
add
and
imul
call
jmp
jmp
into
test
xlat
clc
mov
out
xchg
mov
push
loopne
daa
pop
mov
jge
adc
mov
jl
mov
mov
sub
adc
pushf
fwait
or
mov
fsub
sub
stos
pop
pop
rep
iret
jae
pop
test
sbb
jb
daa
es
lret
addr16
addl
js
movsb
mov
push
add
sbbb
les
dec
testb
xchg
pop
in
sti
mov
mov
test
jle
sbb
dec
movsb
mov
cli
mov
sbb
sti
or
leave
pop
cli
fcmovb
cmpsb
fildll
inc
lea
out
fucomp
and
movb
jo
inc
loop
or
jp
out
mov
pmaxub
hlt
fisttps
subb
or
imul
and
mov
xchg
ret
or
ljmp
ret
jno
rcll
sahf
push
sbb
jp
dec
test
iret
mov
mov
mov
cli
inc
lahf
sti
scas
push
in
cmp
add
xor
lods
pushf
test
loop
push
cmp
add
cmp
mov
shr
fdivr
mov
push
jecxz
mov
push
aaa
and
xlat
in
sbb
sar
xor
xor
adc
push
test
scas
ds
adc
aam
es
add
inc
inc
mov
imul
insb
mov
dec
nop
fmull
ret
push
add
out
mov
in
mov
ds
shl
pop
xor
add
pop
cmc
dec
rcl
mov
cmc
xchg
and
lahf
inc
scas
fdivs
xchg
or
jo,pn
mov
bound
and
add
inc
mov
imul
push
pop
adc
mov
fstpl
je
add
addr16
and
pop
or
sub
inc
mov
dec
mov
push
pop
ja
stc
pop
popa
pop
inc
push
fwait
js
and
fiaddl
hlt
icebp
xchg
nop
mov
and
leave
decl
cli
mov
inc
mov
cmc
fdivr
setle
jmp
iret
fsubr
sbb
mov
sti
mov
mov
cmp
andl
pop
sbb
adc
test
xor
mov
clc
testb
xchg
cmp
jb
sbb
fadds
sub
es
jmp
dec
cli
fwait
push
sbb
fdivrs
jns
or
xor
mov
cld
movsb
test
pushl
push
stc
repnz
mov
add
pop
and
inc
xor
sub
shll
fdivl
mov
xor
jmp
xor
call
lea
jle
jb
stc
xchg
pop
cmp
js
mov
call
push
pop
push
sti
add
insb
inc
cmc
sarl
adc
insb
mov
sbb
ja
sub
push
pop
jmp
aam
cmc
mov
mov
test
sbb
es
clc
sub
add
rorl
icebp
and
xor
cli
xchg
es
cmpsb
enter
xchg
imul
or
inc
mov
dec
inc
pop
pop
mov
push
out
mov
test
push
and
adc
mov
test
pop
fbld
aam
cmp
loopne
inc
sub
xor
fisubs
add
dec
push
clc
cld
push
jo
jge
cltd
ja
jmp
push
jle
pop
push
orb
mov
pop
cmp
js
dec
or
test
fs
jmp
lds
xor
lret
dec
js
mov
insb
outsb
mov
mov
xor
jg
fildll
out
movsl
or
leave
mov
pop
fsubl
lahf
nop
aaa
xchg
sbb
pusha
adc
out
cs
addr16
pop
dec
push
sbb
adc
adc
push
sub
sbb
mov
call
mov
dec
pop
or
arpl
xor
ret
rclb
mov
cmpsb
mov
js
stc
outsb
push
mov
jns
add
inc
fld
sbb
pop
mov
in
or
jg
cs
sbb
cmp
imul
les
dec
mov
push
repnz
je
lahf
arpl
imul
cwtl
mov
test
das
sub
lea
rcrl
and
mov
push
es
dec
into
inc
jb
sub
push
jae
add
pop
xchg
in
outsb
jb
mov
mov
or
fdiv
add
mov
cltd
addl
xchg
xchg
cmp
mov
pop
fdivs
cli
jbe
inc
test
mov
pop
xor
sbb
mov
inc
daa
fadds
repnz
sbb
inc
mov
fnsave
cmp
enter
repz
adc
jp
lods
xchg
add
outsl
mov
and
add
outsb
cmc
int3
stos
mov
test
xor
jnp
inc
sbb
sbb
mov
sub
lods
dec
sub
movsb
arpl
sbb
es
adc
xchg
and
jno
sbb
adc
std
ds
std
fdivr
and
shl
xor
and
clc
mov
call
movsl
repz
mov
aaa
xchg
adc
insl
add
mov
xchg
cltd
in
vpmacsdql
shrl
jge
mov
or
mov
jno
push
push
arpl
xor
ja
jle
pop
pop
sbb
inc
xchg
xor
lahf
xchg
dec
pop
cmp
pop
lret
pop
xor
cwtl
pop
pop
sbb
jne
sbb
jns
mov
cmp
pop
arpl
loopne
xchg
call
xchg
fs
mov
cmp
xchg
out
int
dec
sbb
inc
ror
cmp
mov
or
dec
jg
push
sti
popf
xor
aas
cli
sub
jp
jecxz
jns
in
mov
pusha
pop
js
mov
popf
cli
in
xchg
cmpsl
mov
into
dec
adc
xchg
xor
insb
insl
repnz
mov
xchg
sbb
ds
push
jno
divb
and
out
fs
adc
loop
inc
xchg
jo
jp
test
aaa
ljmp
and
leave
pop
push
jmp
test
out
pop
sub
sub
mov
negb
add
fildll
mov
ss
addb
rolb
lret
iret
outsl
cmpsb
lods
bound
sbb
inc
pop
push
dec
xchg
jle
or
mov
jmp
dec
mov
adc
mov
or
cmp
test
mov
mov
ficomps
imul
mov
inc
inc
push
fistpl
bnd
jns
into
inc
stos
arpl
xor
jbe
jmp
outsb
mov
ja
pop
out
cmpsl
jae
or
gs
mov
mov
leave
hlt
jle
xchg
fildl
loope
xchg
pop
adc
xor
js
and
fs
push
inc
fisubrs
gs
daa
inc
ret
hlt
adc
ljmp
test
sub
test
cmp
cmpsb
or
stos
cmpb
jg
adc
int3
sbb
sahf
clc
rorb
ret
fsubl
fstpt
inc
out
cld
int
mov
andb
pusha
or
push
cmpsl
adc
std
out
xor
lods
lret
popf
add
xchg
pop
fcmovbe
pop
dec
sahf
loope
cmp
xor
or
pop
pop
je
int
adc
pop
inc
popa
adcl
cmp
movsb
xchg
movsb
outsl
adc
popa
inc
xchg
mov
sbb
movsl
imul
dec
shlb
mov
sub
xchg
nop
add
sbb
dec
xlat
int
test
ret
xlat
push
mov
xor
push
dec
pop
nop
sbb
ljmp
pop
das
sti
movsb
jp
xchg
dec
sbb
pop
scas
popf
push
mov
lods
addr16
adc
pop
ret
ror
jno
sbbb
loopne
call
jb
mov
lea
gs
rcrb
dec
repz
out
or
int3
test
mov
mov
cli
fcom
call
inc
push
sbb
dec
adc
jb
outsb
out
loope
push
bound
xchg
xor
inc
aad
stc
sarb
shl
sti
mov
xchg
cmp
aad
xor
sbb
lock
imul
dec
push
sti
fidivs
mov
mov
shrl
xchg
movsb
push
sub
pop
scas
inc
push
and
mov
stc
sar
in
fidivs
cmp
cli
jne
jp
push
jnp
fisubrl
xlat
push
jo
rclb
scas
inc
das
outsl
lret
jb
jp
clc
loop
int3
and
int
add
into
jns
mov
dec
sbb
inc
xchg
adc
add
sub
dec
test
or
lods
xor
push
push
pushf
push
mov
dec
stos
stos
jo
cs
test
cmc
xor
or
adc
fnstsw
push
mov
xchg
rorl
dec
stos
pop
jge
sbb
call
xchg
mov
pop
enter
lods
subl
lea
scas
xlat
arpl
jno
into
adc
mov
dec
mov
mov
shll
adc
add
add
pop
in
adc
sbb
dec
loop
and
out
movsl
clc
mov
test
mov
inc
dec
push
push
mov
lret
addr16
and
aaa
sbb
ret
push
lds
in
pop
imul
loop
dec
push
fmuls
add
test
xor
imul
cmpsl
aas
test
xchg
xor
sbb
loopnew
addb
add
cld
addr16
out
pop
ficoml
cmpsb
push
or
rcrl
int3
stos
push
inc
loopne
pop
mov
inc
sub
pop
pushf
arpl
es
test
repz
loop
cli
sarl
xchg
adc
xchg
hlt
adc
jle
leave
jg
ljmp
jge
pop
xchg
xchg
lcall
bound
push
cmp
rcl
ja
retw
inc
sbb
pop
mov
inc
push
out
fcompl
data16
inc
sbb
mov
push
add
xchg
inc
les
dec
lock
mov
adc
repnz
push
scas
leave
loopne
cwtl
dec
addr16
pop
push
out
mov
cwtl
mov
sbb
xchg
popa
stos
into
mov
sub
psllw
pop
roll
outsb
daa
jo
and
hlt
inc
aam
daa
add
sbb
out
xchg
sbb
mov
cmp
out
and
and
mov
mov
in
data16
mov
dec
pop
in
shll
sbb
hlt
mov
push
xchg
fnstcw
adc
into
popa
jge
lods
xchg
into
sbb
jbe
mov
inc
cmpsl
push
mov
aaa
adc
jne
stos
mov
sbb
jo
cmp
popa
movsl
scas
adc
pop
jp
push
cmpsb
add
nop
pusha
jl
int
movsl
test
mov
in
out
sub
inc
push
push
sub
movsl
cmp
mov
xchg
dec
xor
les
cmp
cmp
out
sbb
push
or
cmpsb
aad
pop
and
cwtl
mov
test
in
xchg
test
sbb
ss
in
push
jne
orl
jle
mov
jne
sub
ss
data16
jle
roll
mov
mov
aas
ret
inc
add
fnstcw
or
aam
pop
movsl
mov
pop
push
pop
xor
arpl
mov
mov
jae
outsb
pusha
cwtl
push
jae
jmp
push
mov
mov
aas
fldenv
mov
xlat
loope
mov
inc
ret
mov
pop
ja
rolb
js
pop
icebp
push
je
pop
xchg
jl
pop
sbb
inc
mov
mov
lds
and
inc
outsl
addr16
sbb
daa
jo
add
mov
bound
out
mov
cwtl
push
jle
and
and
jo
inc
dec
aaa
or
ret
mov
popa
add
out
dec
scas
xor
ret
push
in
sub
sbb
bound
std
adc
push
insb
or
mov
pop
adc
jecxz
rorl
repz
push
add
dec
popa
fsubrs
mov
mov
adc
mov
jge
mov
or
mov
and
jo
dec
cltd
adc
cmp
dec
sahf
pop
adc
jns
hlt
addr16
sar
mov
pop
lahf
cmp
aas
cmpsb
call
repnz
mov
pop
mov
dec
xchg
sbb
fadd
cmp
mov
loopne
test
jb
inc
imul
fadd
inc
xchg
sbb
add
hlt
jmp
mov
cmp
ret
subl
add
mov
mov
xchg
imul
aas
push
or
sub
add
jmp
and
sbb
jbe
aaa
mov
and
xor
sub
pop
adcb
xchg
andb
sub
lds
pop
push
mov
cmpl
mov
movl
mov
aad
cld
adc
shl
pop
jge
mov
dec
mov
testb
enter
es
js
mov
daa
sbb
cmc
inc
sbb
test
push
in
popa
cmc
mov
bnd
jb
dec
mov
sahf
and
mov
imul
int3
inc
xlat
mov
sbb
fdivrl
repz
mov
outsl
in
lods
pop
xor
lds
imul
push
imul
icebp
mov
scas
pusha
cld
push
roll
adc
fdivr
sbb
mov
mov
xor
mov
xchg
sbb
pop
cmp
inc
sahf
ds
or
mov
mov
icebp
and
push
xlat
stos
pop
mov
mov
mov
aad
sbb
fidivrl
mov
lock
ficoml
fwait
xchg
inc
repz
aad
mov
adc
adc
dec
pop
jo
push
movsl
test
lret
sub
scas
movl
es
or
outsw
inc
mov
mov
std
inc
test
dec
stos
fsubrl
inc
and
call
leave
xchg
sbb
mov
in
add
and
inc
insl
cld
aaa
clc
xor
adc
inc
jbe
andl
sub
push
jo
inc
xchg
add
nop
jp
jnp
in
and
setg
pushf
inc
lea
cwtl
loop
mov
dec
add
xchg
ret
insb
add
mov
negb
jnp
inc
and
test
cmp
jp
mov
xchg
mov
fdivrp
xor
push
fldt
icebp
cwtl
cmc
jle
cli
adc
or
pop
jo
cmp
xchg
mov
push
cld
daa
cmp
sub
inc
enter
sub
mov
xchg
sahf
and
loop
or
movsb
mov
test
jnp
cmpsl
dec
adcb
stos
push
orb
or
cs
fstpt
jmp
fidivrl
mov
scas
std
shrb
lahf
loop
movsb
xchg
mov
xor
ljmp
sbb
and
outsl
or
inc
cmp
repz
pop
out
jns
jno
add
cli
dec
mov
inc
fadd
sbbb
fcompl
mov
cmp
jnp
mov
jmp
fidivl
xor
jle
cmp
adc
lods
inc
push
and
movsb
xchg
mov
xchg
jmp
jmp
inc
cmp
xchg
outsb
xor
lea
inc
inc
mov
iret
jne
and
ss
sub
cmp
adc
mov
inc
inc
add
das
push
das
add
pop
push
mov
js
test
mov
lret
cmpsl
pop
divb
ss
dec
repnz
decb
xchg
out
and
adc
dec
movsl
push
push
js
lds
cmp
fcmove
xor
sbb
jne
xlat
scas
aaa
orb
xchg
std
or
fiaddl
sarl
into
add
jecxz
enter
xchg
cmpsl
jl
inc
or
sub
mov
dec
jno
and
xor
mov
inc
and
mov
mov
cmpl
popa
stos
arpl
pop
ret
orl
dec
dec
sbb
sbb
or
xor
ss
push
jmp
push
push
mov
sub
inc
pop
jnp
clc
sarb
out
lret
rcrl
push
or
inc
movsl
push
cmp
lret
xor
mov
sub
movsl
mov
push
dec
pop
pop
push
inc
cli
mov
lret
test
gs
mov
int3
fcompl
es
and
mov
ficoms
cmc
or
xchg
jno
push
mov
inc
or
movsb
and
jmp
andl
ss
mov
inc
cmpsb
push
push
jb
nop
mov
fidivs
imul
fldcw
outsb
insb
adc
mov
add
fsubr
or
sub
addr16
aaa
fnstcw
repnz
add
aam
cs
sbb
ja
inc
idivb
jnp
and
sbbb
sub
sub
cmp
sub
jmp
dec
xor
repz
jp
and
pop
divl
stc
dec
cltd
aam
mov
movsl
xor
ret
dec
sub
in
cmp
dec
lahf
dec
push
in
mov
movsb
mov
cmp
cmp
movsl
sub
adc
sub
sbb
mov
lahf
fcmove
cmp
es
int3
add
repnz
sbb
fnstenv
and
daa
xor
xchg
mov
mov
out
movsl
in
out
mov
ss
cmp
lea
push
fisubs
push
and
add
xlat
jge
push
mov
mov
sahf
leave
cld
xchg
mov
rcl
dec
lcall
lea
mov
mov
shrl
aas
sahf
push
push
cmp
inc
arpl
les
adc
mov
inc
dec
loope
push
pop
out
aaa
js
bound
lcall
testb
inc
out
aaa
inc
dec
nop
mov
dec
leave
xchg
mov
pop
les
dec
jge
add
out
cltd
aam
aam
out
fidivl
out
fs
scas
scas
mov
jl
push
jbe,pt
dec
mov
lock
rcr
push
cld
or
jae
xchg
add
test
aam
inc
rorl
mov
rorb
ds
jo
repnz
lea
push
scas
jbe
sub
add
inc
scas
xchg
mov
std
ljmp
lds
orb
out
outsl
ficoms
xchg
pop
adc
add
mov
jecxz
mov
imul
or
adc
pop
jnp
push
add
gs
pop
repnz
imul
jle
js
iret
cmp
js
ja
mov
jae
jb
mov
jbe
sarb
mov
mov
sahf
das
sbb
jo
int3
popf
repz
and
dec
insb
clc
ficoml
cwtl
sbb
test
arpl
mov
faddl
xor
es
lds
mov
bound
inc
push
cmc
inc
js
xchg
je
in
test
je
push
adc
stos
inc
in
jmp
xchg
ret
xchg
sbbb
mov
cmc
pop
adc
cli
xor
and
mov
pop
aad
cmp
sbb
pop
sub
inc
outsl
mov
inc
and
mov
cld
lcall
adc
loopne
ret
mov
ss
xlat
sub
test
xchg
cmp
stc
cmpsl
flds
hlt
jg
cli
or
inc
adc
cmp
push
pop
ss
aaa
and
aaa
sbb
adc
dec
mov
inc
popa
xchg
xlat
enter
pop
test
pop
mov
sub
pop
in
ret
or
fwait
jmp
jo
out
jbe
sub
imull
add
push
mov
xchg
mov
push
dec
rcll
push
icebp
sar
adc
sti
pop
jbe
mov
mov
xor
pop
jg
xor
fldenv
es
add
dec
push
negl
ds
xchg
xchg
cmp
cmpsb
adc
insl
xchg
xlat
mov
pushf
add
aam
fstp
out
out
push
sbb
popf
jae
xor
jo
aaa
fs
cmp
fistpll
xlat
push
popf
iret
jne
stos
das
sub
and
sub
push
loop
adc
add
es
lea
adc
scas
out
lret
add
cmp
xchg
add
sti
mov
scas
shrl
lahf
leave
cmc
lret
ss
dec
cmp
lret
jne
and
fs
jno
loop
inc
xchg
mov
push
mov
or
fs
sahf
rcll
mov
add
xlat
or
in
fisttpll
mov
repnz
lret
dec
insl
cmp
cs
dec
cmpsb
inc
stos
jmp
mov
xchg
xchg
loop
in
dec
jnp
pop
lcall
or
test
adc
pop
fsubs
xor
ftst
sub
and
mov
cmpsl
cmp
pop
xor
mov
jb
imul
negl
cld
mov
cmp
popa
arpl
mov
stos
jg
xor
rcrb
hlt
outsb
call
loop
test
add
into
fldl
mov
mov
cmp
push
rorb
mov
mov
push
outsl
mov
dec
push
lock
adcb
daa
ja
jp
pop
pop
push
xchg
cmovb
in
jb
add
jecxz
ds
mov
pop
push
push
incl
mov
js
cmp
fwait
sub
sub
aaa
add
dec
dec
pop
aad
sub
imulb
cmp
mov
sti
mov
mov
or
out
lahf
cmp
in
pop
out
push
xchg
mov
mov
cmp
dec
enter
and
mov
xchg
push
dec
jns
or
sbb
enter
in
cmc
sbb
xchg
fildll
mov
ret
ljmp
loope
aad
mov
or
test
retw
aas
and
cmpsb
mov
dec
outsl
data16
dec
sub
into
fsubl
dec
mov
out
and
push
std
jle
enter
lahf
clc
xor
stc
add
pop
cltd
adc
jg
or
sub
xor
pop
cmp
int
jp
xchg
jne
jnp
pop
je
cwtl
aam
dec
xor
sub
das
jg
leave
adc
dec
outsb
jnp
dec
cmp
add
je
jne
cmpl
adc
add
xor
or
and
mov
insb
repz
rcrb
cmpsl
push
sbb
adcb
xchg
sub
nop
mov
rol
repz
jmp
mov
lea
sarb
pop
fdiv
stc
jge
mov
stos
mov
popa
xchg
cmp
sbb
and
aas
mov
dec
cmp
int
jp
push
movsl
cmp
push
imul
dec
mov
mov
dec
fsubs
inc
pop
push
mov
xor
add
add
data16
cmp
cs
lcall
ss
les
into
shll
push
nop
cmp
shlb
inc
mov
aam
stos
and
in
repnz
int3
mov
mov
ja
push
inc
push
push
js
add
xor
mov
lcall
stos
cltd
push
sahf
ds
and
stc
adc
pop
leave
xchg
cltd
icebp
sarl
cmp
push
sub
push
jl
mov
lret
pop
xchg
ja
imul
push
push
adc
movsl
fistpl
cmpsb
adc
push
cmpsb
out
pusha
add
dec
push
lods
and
clc
rol
xor
in
xchg
frstor
dec
jmp
add
idiv
and
leave
lods
or
fnsave
ret
pop
xchg
jno
mov
cmpsl
mov
xor
in
and
and
cmpsb
xor
jo
daa
ficoml
outsb
push
jecxz
je
imul
dec
add
fs
fldcw
mov
mov
sub
enter
jl
mov
jmp
mov
icebp
jae
outsl
push
mov
jns
ret
or
cmpsb
inc
push
sub
mov
mov
cmp
jns
mov
out
push
psubw
je
inc
push
or
or
mov
and
lcall
or
ljmp
std
push
pop
psadbw
pop
add
mov
xchg
jecxz
xchg
mov
dec
and
repnz
push
aas
fisttpll
jno
out
adc
and
xchg
or
lcall
pop
xchg
test
dec
shll
inc
fdivrp
repz
repnz
or
pcmpgtw
push
arpl
rcll
pop
pusha
add
pusha
jnp
sub
mov
xor
ficoml
pop
ficoml
lods
int3
and
popa
push
loop
mov
inc
out
cmp
xor
pop
cmpsb
imul
mov
mov
pop
mov
outsl
adc
xchg
mov
mov
inc
into
xor
mov
test
inc
add
mov
cli
xlat
adc
sbb
movsb
jmp
cmp
add
decb
std
push
fsubrl
adc
arpl
push
into
inc
adc
jno
stc
pop
cmp
add
pop
dec
mov
push
pop
rcrb
das
jnp
fcoml
cmc
into
test
fbstp
cmpsl
sarl
roll
aad
stc
sbb
loopne
sbb
mov
xchg
popa
scas
fisubrl
data16
mov
insl
pop
jp
test
add
push
shrl
mov
clc
out
inc
push
test
popl
dec
sbb
adc
ret
out
in
fadds
or
shll
add
xor
and
aam
lea
mov
dec
insl
out
data16
xor
cli
sbb
jns
out
mov
or
mov
rorl
movsl
sti
cwtl
push
mov
fwait
cmp
addr16
scas
nop
aad
xor
inc
inc
ss
mov
icebp
lcall
and
pop
xchg
jle
adc
jecxz
test
orb
cmp
test
sub
rcrb
xchg
mov
and
pushf
sbb
fs
mov
or
mov
xchg
int3
fsubl
push
xchg
xchg
clc
enter
and
pop
fwait
pop
inc
iret
push
jmp
push
repnz
jmp
icebp
xchg
dec
rorb
pushf
jmp
repz
faddl
cltd
pop
insl
jo
push
mov
sub
out
mov
test
or
jnp
push
pop
test
mov
cmpsb
cld
ljmp
and
and
decb
lret
lea
lock
in
mov
add
lods
movzbl
mov
or
in
or
adc
icebp
stos
popf
jnp
fdivrl
mov
jne
lcall
in
pushf
lret
lret
xor
sub
sti
leave
jmp
add
hlt
clc
outsl
push
push
out
sti
neg
inc
add
dec
mov
xchg
pop
sbb
scas
repnz
dec
and
mov
pop
and
call
or
out
test
unpcklps
or
jl
or
clc
test
push
ja
insl
and
sahf
add
and
in
xchg
dec
jbe
loope
aaa
icebp
data16
out
imul
jg
xlat
xchg
xor
pop
aaa
test
fcmovbe
shrl
inc
inc
mov
jns
je
mov
lock
mov
cmpsl
push
or
add
push
repz
jne
cmp
xor
arpl
xor
hlt
jl
iret
mov
idiv
fcoml
js
dec
xor
push
mov
mov
push
dec
repnz
loope
call
or
cwtl
xlat
push
mov
dec
clc
das
cmp
in
outsl
movsl
test
cltd
sub
mov
mov
mov
pop
cmp
xor
add
xor
push
in
sti
inc
push
sti
hlt
pop
shll
xlat
jae
mov
fistpl
dec
pushw
shld
dec
push
jo
mov
sti
ds
add
jbe
insl
cmc
add
andb
out
jnp
lahf
loop
cwtl
sub
push
push
push
clc
nop
pop
push
insl
in
pop
in
lcall
push
rcll
push
pop
in
outsb
loope
mov
jecxz
das
dec
cmp
fstpt
sbb
jnp
mov
out
popa
or
movsl
mov
stc
mov
loope
sbb
xchg
push
mov
shlb
sarb
xor
sti
jl
sbb
add
mov
jle
mov
jne
arpl
xor
and
push
sbb
push
xor
pop
sub
fistpl
stos
and
shlb
outsl
enter
pop
inc
add
repz
push
add
inc
and
outsb
cltd
ficoms
adc
or
scas
push
daa
inc
or
push
jno,pn
jne
subl
jnp
xor
out
mov
addl
inc
loope
scas
sbb
adc
adc
sub
push
fwait
jge
std
xor
xorl
inc
mov
sbb
mov
ljmp
pushf
nop
push
aas
lret
test
and
pop
xor
mov
xchg
xor
mov
sub
or
or
mov
adc
sbb
sbb
pop
sbb
loop
add
xchg
cmp
scas
cmpsl
mov
mov
mov
neg
ljmp
popa
loopew
aam
mov
xchg
repnz
arpl
out
test
mov
dec
sbb
adc
xchg
and
data16
test
cmp
call
push
icebp
and
mov
adc
hlt
loop
sbb
inc
xor
add
into
add
stos
movsb
fsubs
in
inc
pop
xor
pop
cwtl
mov
popf
std
cld
lret
rorl
pop
add
in
sub
aam
jns
imul
xor
lahf
cmp
mov
push
sbb
mov
dec
dec
cs
add
push
idivl
or
mov
cltd
mov
xor
pop
dec
ret
aad
cmpsb
push
and
push
pop
cmp
repz
imul
xchg
push
mov
mov
xor
xchg
out
inc
arpl
and
sub
inc
lahf
ds
dec
sbb
and
sbb
mov
ja
cltd
lods
rorb
xchg
or
ds
mov
cmp
das
mov
daa
fdivs
out
jae
sbb
pop
sahf
test
push
stos
mov
pop
sti
adc
jecxz
lret
leave
dec
cwtl
xchg
dec
mov
lret
and
sub
insl
cs
pop
or
loopne
add
dec
mov
push
push
imul
mov
push
js
fs
paddw
mov
and
ret
and
lahf
mov
adc
ficomps
cmp
add
sbb
mov
mov
add
flds
out
mov
pop
scas
shrb
jg
jnp
xchg
test
filds
adc
sub
pop
mov
in
pop
out
lahf
mov
jbe
dec
fld
pushf
cmpsl
mov
call
into
outsl
stos
mov
call
mov
pop
leave
mov
enter
fs
mov
inc
inc
xchg
mov
mov
mov
lcall
mov
sub
adc
mov
addr16
std
fisubrl
pusha
inc
test
jne
inc
outsb
dec
or
lods
mov
aas
jb
enter
xchg
inc
outsl
cmp
movsl
aas
int3
xchg
dec
mov
and
test
or
sub
sub
das
fldl
and
nop
push
xlat
mov
js
scas
idivb
mov
je
mov
xchg
sbb
bound
ret
jmp
lods
outsl
jp
cmp
mov
in
loopne
outsl
dec
push
ds
jle
or
mov
mov
notb
pop
fcoms
mov
enter
push
adc
lods
mov
mov
mov
xchg
cmp
in
jp
cmpsb
mov
sub
lahf
fstps
shlb
out
mov
mov
dec
adc
mov
push
inc
or
test
mov
dec
aam
ret
cmc
mov
popf
pusha
pop
jbe,pn
mov
sbb
jnp
jle
xor
stc
dec
data16
aam
lret
mov
jecxz
add
shll
adc
add
imul
cmp
pop
loopne
cmp
out
ja
jnp
ret
stos
mov
sbb
add
cmp
fisttpll
fs
push
mov
mov
adc
loop
sub
push
fwait
inc
dec
lret
lods
adc
add
clc
lahf
es
ds
cs
add
movsl
ss
int3
xchg
aad
cmp
push
out
inc
fcom
and
jo
sbb
imull
js
pop
pop
sbb
push
ja
iret
idivl
imul
gs
xor
dec
dec
mov
xchg
dec
fstl
mov
push
xchg
xchg
add
ja
and
pop
xchg
daa
add
das
or
repz
xor
mov
xchg
or
push
decl
std
push
xorb
ja
sub
hlt
sbb
int3
cld
xchg
iret
xchg
aad
jl
mov
xchg
imul
mov
fisttpll
in
pop
jbe
adc
aaa
xchg
sbb
in
inc
xchg
jp
stc
cmp
imul
bound
and
xchg
cmpsb
fcomip
cs
daa
mov
stos
mov
dec
shlb
rol
push
adc
xor
jb,pn
xchg
mov
push
xorl
jns
gs
bound
cmp
iret
cmpsb
cwtl
sub
inc
and
cltd
es
pop
fstp
add
adc
dec
inc
xchg
push
dec
push
addr16
roll
loope
sbb
ja
mov
mov
test
push
scas
or
rol
popf
rolb
mov
pop
cmp
and
shll
fwait
icebp
ljmp
arpl
test
in
js
mov
fucomip
add
inc
lock
fucomp
cmpsb
or
add
pop
clc
xor
sti
test
add
sarl
push
push
fstp
push
xor
xchg
and
add
ljmp
sub
pop
cmp
nop
adc
in
addr16
xchg
fs
data16
jecxz
cmc
cmp
cmp
mov
lds
js
xlat
js
xor
out
loope
push
shlb
mov
std
inc
fcompl
loopne
cmc
int
std
clc
push
and
jns
outsl
pop
in
add
xor
mov
inc
fwait
adc
mov
mov
fidivrs
cmp
lcall
enter
shl
pop
adc
jne
pop
mov
test
add
pop
inc
je
add
dec
pop
filds
jb
cli
cmp
sbb
dec
call
imul
jecxz
in
lea
adc
xchg
sbb
fisubs
xchg
dec
in
fwait
lds
push
sbb
stos
sub
subb
adc
lret
or
in
movsb
orb
mov
scas
push
test
cmp
inc
inc
gs
cmp
pop
rcrl
test
lds
cmp
pop
movsl
lret
xor
sbbl
mov
scas
lock
psubusw
lret
ljmp
mov
lret
sar
sub
mov
dec
cmp
shlb
mov
imulb
sahf
loop
loopne
leave
or
inc
divb
rclb
sbb
outsl
push
mov
inc
or
cltd
loop
test
sbb
lods
xchg
cmp
in
faddl
jg
sub
mov
lods
or
cli
adc
push
and
pop
jnp
ss
dec
and
int3
inc
aas
inc
std
adc
push
daa
or
stos
sahf
in
insl
lods
scas
fiadds
add
cmp
dec
imul
arpl
ja
movsl
int
sub
jl
test
jbe
sbb
push
cmpb
cli
nop
sar
pop
or
movsl
fimull
sbb
pop
insb
mov
in
xor
lret
push
cmpsl
pusha
dec
shr
mov
sbb
scas
sarl
mov
pushf
in
jmp
or
fsts
jno
cmpl
sub
addr16
test
out
cld
mov
xor
ss
data16
les
shrl
test
into
sub
pop
in
pushf
jg
fiadds
inc
adc
in
rcrl
push
ja
sbb
dec
dec
mov
mov
mov
jnp
mov
icebp
xor
int
aaa
pushf
popf
jge
shlb
addr16
cmpsb
mov
std
mov
cli
test
mov
xor
mov
mov
mov
call
push
xchg
sub
ret
out
lds
rcl
or
xor
pop
arpl
mov
add
sbb
xchg
imul
mov
subl
ficompl
shrl
mov
inc
mov
movsl
in
sti
and
fcoml
sub
jg
sbb
pusha
mov
dec
insb
dec
mov
fstps
shrb
int
pusha
in
call
pop
in
jmp
mov
movsl
leave
idivl
pop
pop
cld
testl
xchg
sahf
mov
adc
jecxz
ret
call
jmp
aas
popa
out
inc
lahf
sbb
bound
ds
sub
xchg
and
fimuls
dec
jmp
mov
lds
jmp
jns
lret
arpl
push
xchg
icebp
jns
out
sbbb
adc
data16
je
stc
outsl
adc
lcall
xlat
pop
stos
or
ss
sub
pop
mov
jb
roll
sarb
hlt
xchg
loop
cltd
adc
push
addr16
loop
add
cmp
mov
push
xchg
fiaddl
mov
and
and
stos
ret
mov
jecxz
pop
popf
push
jne
mov
out
xor
leave
pop
std
aad
inc
push
cmpb
mov
in
bound
jno
call
mov
test
fmul
jae
mov
push
inc
push
or
fstps
pop
and
in
sub
xor
adc
jge
mov
loope
imul
jmp
mov
negb
in
int3
dec
xchg
or
fs
lea
popa
imul
push
jne
push
push
pop
icebp
xchg
inc
push
sub
enter
push
shlb
not
adc
add
inc
shll
cld
cmc
sub
xor
or
test
sti
cmp
fnstenv
lods
fstps
and
mov
rcrb
lock
dec
cmp
lret
mov
cld
xchg
jo
fisubrl
std
and
inc
jne
hlt
stos
sbb
push
or
cli
std
push
xchg
mov
sub
mov
mov
and
cmp
cmc
mov
pop
xchg
sbb
push
cld
adc
in
push
sub
int3
aad
sub
int3
xlat
shrb
mov
or
pushf
cmc
inc
inc
out
xor
mov
in
insl
in
imull
out
mov
cmp
mov
aas
inc
mov
sbb
lret
inc
es
sub
aad
scas
jmp
sarb
jmp
and
xchg
stc
hlt
xlat
popa
pusha
push
loop
jae
test
sbb
mov
pop
xchg
sub
es
fcomi
stos
mov
xchg
cmc
shl
mov
xchg
jo
add
or
or
test
mov
cmpsb
test
nop
lods
push
addr16
mov
jnp
mov
das
in
jp
adc
ljmp
loopne
add
inc
cmpl
mov
in
cmp
push
sub
xchg
jnp
and
inc
int3
ds
cmp
mov
test
sub
loop
or
push
pushf
jmp
mov
mov
and
leave
cmc
mov
and
xchg
lock
cmp
and
insl
pop
dec
pushf
repz
pop
sub
insl
cli
loopne
andl
cmp
dec
jb
inc
xchg
gs
push
stos
jbe
mov
stc
lcall
mov
cmp
adc
jno
pop
mov
or
in
jae
dec
jo
pop
fildl
rolb
flds
test
cmp
pop
mov
popa
jle
std
adc
daa
adc
dec
dec
sub
rcrb
inc
mov
push
jne
mov
sub
hlt
fists
fwait
mov
outsb
pushf
into
mov
dec
ret
sub
popf
mov
sub
inc
lea
imulb
sbb
mov
mov
pop
test
sahf
scas
cmp
test
iret
add
push
mov
sarb
cmp
pop
jge
sub
mov
cmp
in
jb
sbb
inc
mov
call
lahf
xchg
je
cmp
in
add
fldl
ds
add
stc
mov
insb
inc
xor
mov
ds
fwait
xchg
rol
clc
repnz
scas
jp
push
cwtl
pop
aad
and
mov
dec
leave
sub
les
xchg
xor
shll
push
dec
cmpsl
mov
lds
or
xor
cmp
dec
aaa
jns
sub
imul
test
cmp
pop
mov
sar
lcall
fldt
add
mov
bound
pop
or
xchg
cwtl
xchg
or
ds
push
sbb
push
adc
cld
sahf
ret
push
lock
test
lods
shll
push
xor
cmpsb
lret
insb
inc
scas
and
dec
jbe
out
cs
inc
xor
inc
xlat
xor
adc
and
or
pusha
or
in
movsl
fisubrs
push
scas
aas
or
push
push
mov
sbb
adc
mov
sub
imul
mov
aaa
jo
sti
lods
add
loope
negb
test
rcr
dec
push
jmp
lock
jb
pop
lods
jbe
orb
enter
push
dec
insb
into
mov
ret
jle
mov
and
test
faddl
cmpsl
and
or
inc
pushf
push
dec
jmp
push
ds
dec
scas
jbe
sti
xchg
sbb
sti
mov
push
mov
aaa
push
jno
adc
mov
aad
sub
push
fisubrs
lock
push
rclb
jnp
sub
jo
mov
ljmp
stos
or
jbe
pop
jnp
jmp
fwait
push
dec
cmp
push
popa
test
movsb
cs
mov
subb
pmaxub
and
ljmp
enter
mov
les
sbbl
xor
int
rclb
pop
mov
negb
movsl
push
sub
jle
aam
xchg
sahf
shl
ds
clc
cmc
leave
es
pop
pop
push
and
and
ljmp
repnz
sub
mov
or
dec
push
xor
jle
pop
or
fiaddl
cmpl
sarb
orb
cmp
fistpll
sub
rorl
insl
popa
in
mov
cmp
pop
adc
repnz
repz
add
lahf
popa
movsb
mov
pop
test
mov
addl
mov
xlat
inc
stc
cmp
jns
aam
dec
loope
adc
inc
sar
lret
and
mov
cs
jg
decb
cwtl
test
cltd
sub
cmpsl
dec
inc
mov
das
mov
iret
dec
mov
xchg
push
and
dec
insl
push
jmp
mov
xchg
jmp
add
stc
clc
or
fists
pop
lds
lods
sbb
xlat
jge
test
mov
jbe
inc
insl
aam
jle
pop
and
cwtl
int3
daa
push
into
ds
lcall
es
in
jb
push
adc
test
movsb
lcall
pop
push
or
ficompl
cwtl
push
and
xchg
and
fs
dec
add
xchg
repz
push
sbb
mov
les
mov
add
das
mov
and
rclb
fstpl
ficoms
xchg
cwtl
int
testb
pop
xchg
fwait
jl
std
leave
mov
adc
jp
and
call
and
scas
fisubrl
push
lret
dec
push
dec
add
mov
daa
add
inc
in
adc
fildll
lock
push
sbb
mov
push
mov
imul
sub
notb
xchg
mov
push
in
imul
fildll
loopne
ljmp
into
mov
mov
xchg
inc
cmp
dec
add
cld
movsb
popf
icebp
addb
sub
fiadds
cmpsl
xchg
pop
outsl
push
ds
imul
outsl
cmp
push
cmp
push
jnp
jle
xor
imul
mov
shlb
hlt
in
add
data16
pop
and
push
cmp
mov
jno
add
mov
enter
xor
clc
inc
mov
mov
inc
inc
xor
push
out
jbe
imul
adc
and
ss
int3
fidivl
lahf
adc
inc
adc
sbb
and
mov
in
inc
hlt
add
add
movsb
filds
das
adc
pop
out
nop
dec
in
inc
int
in
adc
in
arpl
cld
and
push
shlb
jb
push
ljmp
xor
push
sub
js
insb
jno
int
jecxz
dec
xor
adcb
notb
pushf
mov
repz
dec
xchg
mov
loopne
iret
or
ljmp
mov
fnsave
sub
jecxz
enter
xchg
stos
or
lds
je
jbe
inc
mov
roll
incb
or
addr16
mov
fidivrl
stos
or
dec
aaa
out
pop
xchg
test
adc
or
cmc
les
fldenv
aam
mov
out
stos
ret
dec
pop
mov
mov
std
xchg
mov
jae
ja
adc
and
cwtl
pop
dec
fidivl
add
fdivl
push
shll
push
sub
jl
mov
add
xor
cmp
fildll
cmp
stc
sbb
out
loopne
fsubrl
lahf
jnp
lds
sbb
and
sti
inc
inc
out
sbb
ja
lret
mov
dec
mov
pop
ds
xlat
lock
xor
into
pop
test
movsl
xchg
cmc
adc
ljmp
push
inc
mov
or
push
mov
popa
add
push
insl
push
je
pop
adc
insb
clc
in
mov
lcall
mov
out
sbb
aad
mov
stos
enter
inc
aad
out
bound
pop
xor
add
shl
cli
sbb
jle
mov
push
repz
sbb
adc
push
mov
imul
aad
dec
cli
mov
out
sbb
cmc
shrb
aaa
mov
dec
enter
dec
sub
sub
xchg
divb
outsb
mov
pop
push
aaa
in
sub
pop
mov
test
out
jecxz
mov
inc
fldl
add
ljmp
in
cmpsb
adc
push
pop
shll
mov
inc
iret
addr16
push
jg
je
pop
push
incl
xor
sub
inc
nop
push
push
repz
cmc
dec
shrb
jo
xor
xchg
cs
mov
fsub
xchg
push
outsb
test
fistpl
inc
push
mov
ret
sbb
jnp
pop
daa
pop
mov
movsl
push
jle
or
sub
mov
sub
jae
cmp
movsl
mov
mov
loope
aas
das
cmp
stos
add
pop
popa
scas
and
xorl
ljmp
adc
arpl
icebp
xchg
insl
insb
test
outsb
dec
sub
les
popa
fisubl
movsb
pop
add
lcall
out
outsb
fcomi
push
cmp
or
push
stos
je
xor
rcll
mov
daa
bound
xor
cwtl
pushl
xchg
lret
push
stc
inc
sub
add
insl
adc
shr
pusha
aam
imul
cmpsl
dec
xchg
mov
jnp
out
mov
das
stos
insb
dec
int
iret
mov
sbb
jecxz
lret
inc
or
cmp
and
test
or
xor
dec
bound
sarb
mov
xor
loope
mov
mov
hlt
icebp
je
outsl
pop
loopne
add
rcrb
pusha
cwtl
test
loope
ja
jmp
cmpsl
movsl
or
test
or
test
nop
movsb
pop
repz
test
add
jg
mov
cmp
xlat
pop
push
adc
xchg
xor
add
push
rolb
dec
pop
mov
add
or
mov
sahf
mov
or
push
jb
xchg
push
mov
cmp
mov
enter
sub
cmp
pop
xor
pop
xchg
fcmove
inc
ret
xadd
dec
fidivl
xor
xchg
xchg
sub
push
jo
mov
aam
adc
ljmp
adc
loop
insb
fmull
mov
add
mov
aam
jmp
mov
jp
xchg
sub
jmp
add
and
bound
and
stc
mov
dec
rorb
dec
addr16
jo
push
add
enter
das
test
mov
loopne
mov
mov
lock
aad
mov
out
cmpsb
sub
ja
mov
push
js
jl
rcl
pop
icebp
adc
call
mov
iret
fdivrl
ja
pop
or
pi2fd
ja
inc
sbb
add
pop
aas
shlb
out
mov
loop
stc
push
sub
test
pop
jbe
push
push
lods
cmp
push
and
pop
dec
add
out
leave
add
adc
mov
lahf
jecxz
fistps
imul
sar
in
adc
imul
mov
movsb
inc
cmpsl
mov
or
insb
jmp
mov
cmp
sub
lock
adc
push
mov
lea
xchg
mov
out
and
mov
cmpb
repz
cwtl
iret
scas
fistps
cmc
dec
xchg
iret
push
outsl
addr16
sub
lret
push
pop
ffree
shlb
mov
lmsw
sbb
aad
push
sub
dec
in
outsl
xor
outsb
in
inc
mov
cltd
clc
aam
pcmpgtb
outsl
subb
andl
insl
mov
or
lahf
inc
sbbb
xchg
imul
add
int
stos
subb
imul
mov
mov
fisubrl
xor
add
fsubs
jns
xchg
mov
xlat
cmpsb
or
shl
lcall
mov
add
testb
sbb
jne
fsubrs
das
jbe
movsl
mov
scas
jae
pop
jae
xchg
mov
imul
inc
scas
mov
dec
and
ret
adc
fimull
sub
scas
je
mov
xchg
mov
xor
ret
divb
notb
cmc
cmpsl
adc
lods
pop
call
mov
aad
push
cmp
hlt
adc
aad
fimull
mov
ret
cmp
rolb
loop
jbe
out
or
fsubrs
and
lock
cli
mov
inc
push
nop
fbld
push
je
xor
mov
push
pop
xor
adc
cmp
jl
data16
xchg
test
dec
in
lret
mov
sbb
xbegin
adc
inc
notb
xor
test
clc
cs
les
cmp
push
inc
xchg
insl
movsl
loope
sbb
cmp
ficoms
mov
leave
mov
cmp
icebp
add
lret
aaa
movsl
mov
sbb
jbe
mov
pop
add
ja
ud2
and
dec
sub
jbe
xlat
mov
mov
push
and
xchg
mov
ret
mov
es
and
jmp
mull
test
cmp
sbb
xchg
xor
idivb
xor
mov
sub
sub
sub
mov
iret
or
lea
mov
inc
jle
mov
imul
outsl
xchg
sub
out
dec
cwtl
lds
repnz
je
mov
mov
xor
icebp
fstpl
lahf
cmpsl
aas
shrb
into
sub
pop
lods
inc
push
pop
and
sarb
popa
push
test
mov
inc
xchg
mov
adc
cmc
xchg
out
mov
repnz
pop
sbb
lods
popf
jne
bound
mov
push
jg
movl
xor
sbb
movsl
mov
push
fmull
jns
adc
mov
jno
lods
popf
ds
lods
sub
inc
int
dec
fwait
aad
dec
cmp
add
repnz
ret
imul
xor
mov
ja
pop
pushl
pop
testl
cld
lods
jg
sti
fisubl
or
mov
lahf
prefetch
addr16
lahf
or
dec
push
add
sbb
sbb
ja
int3
ficompl
outsl
stos
fldenv
lds
out
mov
inc
xchg
or
dec
add
shlb
jbe
pop
lret
jmp
adc
aam
int
jo
cld
gs
rcrl
cmp
and
out
shrb
xchg
jmp
xor
pop
mov
fstl
addr16
jle
push
mov
mov
adc
adc
call
jg
push
call
push
subb
jb
clc
ret
adc
lret
ja
js
pop
addl
add
ja
fsubl
and
lock
add
test
push
in
dec
pop
out
mov
sbbl
repz
push
mov
push
jg
in
out
repz
cli
or
test
or
fistps
cmpl
jg
enter
adc
push
adc
iret
andl
fwait
add
and
and
loop
cmp
lahf
adc
pop
stos
bound
out
inc
sub
insb
or
dec
or
insl
hlt
push
add
pop
mov
push
popa
pop
xchg
js
pop
add
pushf
adc
rolb
pop
dec
aad
mov
test
sub
push
jmp
in
push
and
jns
xchg
sub
jle
push
aad
mov
jne
icebp
dec
out
xor
jmp
ficompl
push
fcoms
cmp
les
shll
jg
pop
dec
mov
add
mov
xor
sbb
imul
or
in
jecxz
mov
scas
int3
lds
popf
vdivsd
dec
stos
loopne
std
mov
loop
adc
mov
inc
das
stc
aad
popa
sbb
lods
mov
std
add
loopne
dec
sar
mov
add
cld
mov
push
xorb
int
mov
gs
jns
mov
stos
mov
cltd
addb
pusha
dec
dec
es
xor
sub
das
mov
inc
xor
pop
mov
cmc
adc
xchg
popf
mov
cmpsb
repz
out
jns
jp
mov
pop
push
mov
lret
jbe
or
jmp
mov
sbbb
jmp
jns
fsubrs
jae
imulb
mov
mov
mov
aas
out
vmwrite
or
ret
xchg
shrl
mov
cmpsl
aam
xchg
mov
adc
push
fs
jecxz
dec
icebp
lcall
insl
scas
sti
sbb
sub
cmp
cs
push
sarb
cmp
sbb
mov
mov
jl
jle
mov
inc
dec
lcall
push
out
hlt
jp
inc
push
scas
xor
ljmp
pop
test
cmp
sbbl
in
cltd
test
arpl
test
mull
js
fwait
sbb
jbe
popa
and
adc
fidivrs
daa
pop
push
outsb
lea
cmp
push
mov
call
or
lds
outsl
rcll
sti
scas
jp
popf
cmp
mov
push
pop
jo
es
mov
pop
cmp
in
rorb
lahf
scas
les
inc
or
movsb
adc
data16
mov
fcmovnbe
popf
add
in
pop
sbb
cmp
inc
mov
dec
pop
leave
jmp
push
xor
int3
lret
mov
sub
mov
ss
mov
mov
imul
cwtl
xor
imul
jno
je
pop
jecxz
push
rclb
in
pop
mov
pop
pop
fstpl
outsl
sbb
pop
push
cs
and
sub
loopne
and
add
stos
into
faddp
repnz
sub
xorb
adc
xlat
sub
daa
aas
lds
fisttps
jb
cs
fisttpl
hlt
sbb
leave
jne
insb
cld
pop
ja
jl
jecxz
in
mov
jmp
leave
mov
push
or
es
incb
sti
pop
shll
jl
test
xchg
cld
leave
adc
or
and
dec
mov
stos
addr16
and
pop
das
pop
pop
pop
fs
pushl
xor
shrl
jb
ds
ret
sub
fists
xor
xor
and
mov
sbb
cmp
add
push
push
into
ljmp
ja
jne
pusha
in
sub
lcall
mov
sbb
sbb
aam
adc
clc
pop
mov
cli
inc
mov
sysexit
sub
sub
pop
pop
test
ror
ret
aam
filds
in
shll
mov
imul
rorb
xchg
lea
sahf
scas
add
lock
lods
aaa
jae
roll
adc
lods
xlat
loop
in
popa
adc
pop
or
lret
push
xchg
ficomps
xor
lcall
adc
mov
push
mov
scas
ret
mov
xchg
std
push
sub
outsb
jbe
mov
leave
jg
jecxz
jg
in
pop
inc
jg
push
jl
ljmp
lcall
cmp
xor
sbb
push
ret
testl
mov
jl
add
or
xlat
xchg
fdivrl
mov
frstor
loopne
mov
dec
xor
mov
jmp
xchg
sahf
stos
mov
push
inc
loopne
aaa
push
jno
mov
int
push
jb
cmp
imul
out
sbb
rcr
sahf
mov
xor
insl
jno
dec
or
push
sub
jb
out
imul
outsl
movlps
clc
scas
push
clc
lahf
insl
sbb
inc
enter
cmp
cs
jbe
in
sbb
js
sub
pushf
iret
mov
ds
xchg
sti
mov
movsl
and
mov
js
mov
ja
fimuls
es
mov
bound
dec
mov
icebp
adc
pop
or
pop
ss
lods
pop
mov
xchg
daa
nop
je
xchg
cmp
xchg
pop
popf
jb
out
ret
cmp
xor
adc
out
aam
and
add
mov
cmp
cs
or
adc
and
pop
gs
add
pushf
inc
arpl
inc
sub
popa
sbb
xchg
jmp
jno
adc
mov
cmp
js
push
push
push
mov
pusha
imul
mov
jl
jle
add
stc
push
mov
inc
add
stos
jg
or
repnz
js
pop
fisubs
mov
in
adc
dec
and
dec
cltd
int3
repnz
pusha
mov
lret
cli
in
out
call
add
or
fucompp
adc
je
xorb
outsl
leave
bound
jge
int
cli
fnsave
push
push
inc
subl
cmpsl
mov
outsl
mov
cmp
ds
or
mov
and
lock
xor
mov
cmp
mov
and
int3
xor
xchg
dec
mov
xchg
sub
dec
cmp
fisttpl
lock
sub
adc
pop
mov
push
imul
clc
insl
insb
push
xchg
repnz
into
sbb
add
jge
mov
push
or
dec
add
and
jmp
cmpsb
std
cmp
dec
sub
push
mov
aam
loopne
mov
fucom
dec
pusha
lcall
ds
sti
roll
and
enter
leave
outsb
into
xor
mov
cld
out
inc
popa
xchg
les
xchg
and
mov
push
ret
inc
mov
cmp
or
inc
or
jno
mov
add
icebp
inc
mov
sbb
out
dec
push
les
dec
mov
jb
cltd
mov
sub
jns
push
dec
xchg
pop
mov
or
cmp
les
mov
mov
add
push
adc
xor
std
sub
notb
in
mov
rol
lret
lods
xor
cmp
inc
arpl
adc
pop
mov
int
popf
cltd
addr16
and
pop
or
and
into
pop
sub
cmpsb
into
jl
jl
clc
inc
or
clc
pop
sub
ljmp
lods
sbb
jns,pn
xchg
aad
fwait
inc
out
adc
dec
xchg
adcl
push
sahf
inc
xchg
pcmpeqb
xor
rcr
sbb
jo
adc
das
or
jl
imul
or
push
xor
or
sub
and
pop
std
out
push
test
nop
out
bound
sub
mov
ret
stc
xor
loope
sbb
mov
sbb
mov
pusha
ja
movsl
addr16
out
add
sub
mov
in
je
mov
pop
xchg
dec
pop
pop
aam
test
pop
xchg
or
xor
popf
push
cld
les
jecxz
or
rorb
jl
xor
xchg
adc
sub
jnp
push
dec
in
aaa
or
test
subl
add
out
mov
adc
jne
pop
push
jecxz
ret
add
loop
in
sbb
iret
mov
lahf
sbb
push
lret
add
repnz
jo
lea
sahf
push
xor
decl
insl
mov
cmp
pop
mov
out
dec
push
jnp
dec
inc
pusha
icebp
add
jl
cmp
fs
dec
mov
sbb
mov
and
test
orl
movsb
or
test
jmp
and
and
jecxz
dec
popa
mov
pop
pop
mov
sub
dec
pop
pop
sarl
das
invd
sub
fcoms
mov
int3
mov
out
or
adc
hlt
add
repz
popf
jl
push
and
cmp
lock
fbstp
adc
push
pop
dec
dec
aas
pop
gs
cwtl
sahf
or
ficoms
mov
insb
jo
lock
adc
fmull
xor
or
daa
jae
jno
das
loope
sti
add
dec
pop
xor
aaa
and
popa
stc
jns
fsts
cmp
jno
xor
or
jb
mov
fisubrs
push
shrl
pop
loopne
sbb
rcl
aaa
ljmp
adc
mov
push
in
adc
in
dec
out
cmp
out
mov
pop
repnz
push
push
pushf
std
ljmp
push
jecxz
xlat
pop
add
mov
cmp
jns
sub
stc
popa
pop
test
add
rcrb
out
jg
sbb
aam
push
pop
fimuls
mov
xchg
data16
jl
outsl
dec
jo
jno
aam
dec
fwait
xchg
test
or
or
sub
push
jne
add
lret
fcmovbe
cmp
daa
push
pop
add
addr16
es
xor
pop
mov
aaa
add
mov
xchg
nop
push
in
mov
mov
imulb
repnz
inc
addr16
aaa
test
cmc
xor
orl
mov
inc
sbb
sbb
andl
adc
subl
jno
hlt
jmp
lds
push
mov
icebp
jns
inc
pop
dec
pop
sbb
cmp
mov
stos
dec
mov
aam
clc
xchg
mov
add
enter
rolb
mov
pop
sub
ja
jl
jecxz
loope
pop
cmp
cs
sahf
xor
and
gs
popf
mov
inc
cli
lret
fisubl
std
sbb
mov
jo
in
pop
push
out
push
pop
stos
popf
stc
adc
and
lfs
xchg
pop
dec
mov
lea
lret
bound
incb
adc
std
jl
push
mov
rcl
idiv
sahf
add
cmpsl
and
mov
popl
push
int
xchg
movsl
lahf
or
sub
rolb
mov
and
jne
into
stos
dec
push
adc
bswap
sbb
or
xchg
mov
pop
pusha
and
insl
sbb
push
into
xchg
int3
lcall
nop
jle
jl
out
xor
repz
lds
push
pop
or
andb
sbb
push
xchg
rorb
inc
xchg
inc
aas
call
mov
cmp
inc
pop
push
nop
lret
mov
dec
fcompp
out
or
inc
sarb
fimull
wbinvd
push
push
cld
xchg
mov
sbb
and
in
cmpsl
mov
push
add
inc
test
rcrb
pop
stos
test
adc
sahf
lret
int3
rol
cmp
add
sub
and
lods
jbe
add
jle
inc
test
pop
in
call
or
test
add
insb
int
ljmp
dec
xchg
fisttpl
mov
or
ljmp
mov
cmp
pop
mov
xchg
mov
in
cmp
popf
adc
pop
shlb
mov
sarb
or
sbbb
nop
rclb
pop
jge
xchg
aaa
xchg
scas
or
scas
mov
or
cmp
xchg
fnstsw
repz
cmpsl
mov
sub
xchg
in
push
stos
ret
outsl
push
add
mov
jb
insl
ljmp
xchg
dec
mov
cmp
or
push
stos
push
scas
cmc
repz
jnp
mov
and
leave
jmp
cmpsl
scas
lret
push
dec
mov
idiv
pop
cwtl
pop
push
pop
and
xlat
and
push
mov
jne
outsl
and
rcll
mov
xchg
cmp
xchg
nop
pop
orb
xor
jmp
in
pop
sub
test
mov
hlt
push
out
mov
lods
mov
dec
dec
push
popa
lret
fs
les
call
xor
enter
push
ret
sub
lret
or
cmp
and
hlt
xchg
xor
inc
ss
push
mov
cs
add
lahf
mov
inc
lret
cmpsl
push
and
loopne
inc
dec
aam
jl
pop
xor
sbb
and
or
int
rcr
notl
cli
sub
cmp
push
lcall
cltd
jmp
xchg
mov
inc
aad
xchg
push
aaa
sub
mov
add
sub
insb
in
in
decb
or
push
popa
push
xchg
push
pop
pop
xchg
pop
xchg
leave
aam
sub
loop
ficoml
fsub
clc
sub
inc
into
sub
mov
hlt
fs
and
test
adc
aam
add
mov
mov
jo
ljmp
mov
aam
aaa
sub
lret
bound
mov
int
push
or
adc
out
cmpsb
pusha
lahf
jle
jnp
jmp
push
dec
fs
add
mov
adc
xor
pop
dec
xchg
xor
jne
cld
popf
and
cmp
push
pop
push
push
fwait
push
sub
fdivr
pop
stc
and
push
dec
inc
stos
leave
mov
mov
add
or
lcall
hlt
pop
cltd
daa
ret
das
dec
jae
inc
jne
mov
mov
xchg
mov
pushl
mov
test
lea
mov
pop
push
in
imul
dec
inc
push
dec
into
loopne
push
and
andl
leave
xor
sti
hlt
insl
lock
sarl
xchg
pop
or
push
inc
insb
repz
nop
xchg
in
leave
cld
pushf
fstpl
xchg
sahf
jle
dec
std
push
push
push
aad
sti
pusha
mov
les
fdivs
jge
dec
xchg
mov
jb
xor
cltd
mov
movsb
sbb
pushl
sbbl
push
cli
sbb
xchg
inc
mov
lock
and
jmp
cltd
inc
or
movsb
ljmp
pop
into
xchg
xor
xchg
push
repnz
movsb
xchg
xor
or
push
fistpll
cmp
pop
ret
loopne
push
imul
sti
jge
or
insl
mov
push
movsl
sti
es
stos
jg
xor
xchg
jbe
push
cmpsl
xchg
pop
adc
ljmp
inc
movsl
xorb
mov
lret
das
repnz
test
xlat
mov
push
push
aas
pushf
imul
rcrb
jbe
push
mov
adc
dec
ret
cld
in
or
sub
dec
mov
adc
jo
paddb
mov
loop
iret
inc
sbb
or
mov
and
dec
sti
xchg
sahf
loop
pop
aas
das
cltd
adc
in
push
sbb
movsl
cmp
enter
push
inc
enter
add
popf
inc
sub
cmp
insl
je
jmp
rorl
outsl
test
or
mov
cs
enter
cs
mov
jp
adc
aad
sub
shll
loopne
push
jecxz
mov
pop
adc
and
rclb
mov
xor
call
cltd
sub
adc
subl
inc
xlat
imul
xchg
and
or
fisttpll
mov
in
xchg
push
aam
sub
xchg
xor
adc
ja
lea
push
jne
clc
push
sub
mov
adc
loopne
sbb
shrl
mov
pushf
xor
int
dec
icebp
in
jle
insl
mov
arpl
sti
inc
rorl
cs
xor
add
mov
xor
out
push
push
and
aaa
add
inc
sub
push
pop
test
adc
popf
add
add
jmp
mov
mov
mov
aam
fimuls
sti
sub
stos
mov
cwtd
das
jne
adc
mov
test
add
pop
stc
sub
xchg
in
jl
lret
lcall
adc
cld
orb
lcall
push
and
setno
loope
mov
sub
mov
in
movsb
pop
daa
pusha
jmp
popf
scas
add
inc
lods
push
aad
jge
sbb
inc
jo
ret
pop
push
sbb
cld
mov
xchg
pop
add
adc
sub
dec
xor
xchg
pop
or
xchg
inc
movsb
repz
pop
inc
insb
imul
cmc
adc
jbe
es
ss
ljmp
pop
pop
xor
arpl
and
push
int
repz
enter
jl
add
fwait
push
cmp
das
and
outsl
cs
cmp
adc
rol
mov
jnp
mov
imul
pusha
mov
mov
out
push
cld
xlat
aas
out
test
pop
lods
ds
mov
push
call
xchg
xchg
push
jae
jns
in
js
add
jb
fisttpl
ret
daa
outsb
push
jno
push
push
add
and
sti
inc
sbb
mov
icebp
sbb
sbb
lods
adc
xchg
xchg
cmp
push
jne
into
push
ds
cmp
adc
mull
jecxz
arpl
lcall
dec
ret
xor
sbbl
and
push
in
xchg
clc
pop
mov
cmc
mov
shlb
dec
loopne
xor
fucom
mov
inc
and
mov
adc
test
loope
repz
mov
pop
aas
enter
push
xor
and
xor
fld1
decb
in
in
mov
push
dec
jmp
mov
hlt
mov
dec
push
add
or
pop
lret
cmp
jecxz
out
mov
mov
and
and
js
loopne
mov
sub
fdivrl
xor
loop
rorl
jb
lock
lahf
icebp
and
call
loopne
pop
es
test
stos
pop
mov
ss
insl
cs
jbe
xor
addr16
cmp
push
sub
xchg
imul
push
pop
cmp
push
inc
mov
and
mov
xor
jl
pushf
jl
test
pop
mov
roll
js
sub
pop
inc
push
sbb
mov
pop
test
cmpsl
mov
and
or
xchg
cmp
shrl
or
js
lods
or
incb
mov
xchg
or
cltd
dec
fwait
in
dec
push
addb
mov
cmpsl
xorb
int
imul
mov
outsb
push
sub
jno
movsl
scas
inc
xchg
incl
cmpsl
xor
mov
test
orl
mov
jae
cmp
or
div
sbb
popf
xor
out
xorb
lahf
fsubp
sub
push
mov
xlat
repnz
cmpsl
je
dec
pop
repz
cwtl
insb
mov
gs
bound
mov
mov
iret
push
fnstsw
adcl
cmp
mov
push
repnz
imul
push
shll
sbb
sbb
jns
sub
lods
mov
lods
das
cltd
xchg
inc
movsb
cmp
mov
ja
data16
jns
inc
and
jmp
jmp
sub
mull
and
pop
rcrl
cmpsl
sbb
movsl
sahf
adc
jg
rorb
cld
inc
inc
sub
enter
out
sar
insb
clc
out
sub
call
outsl
gs
jo
fistpl
es
mov
push
push
enter
cmp
push
stos
pop
xchg
xor
enter
xchg
loope
std
mov
jp
ss
inc
addb
inc
pop
dec
es
xchg
mov
push
ret
push
mov
pop
arpl
and
shl
push
or
xrelease
jp
rol
out
rcll
outsl
int
insb
and
repnz
jb
mov
pop
mov
cmp
sub
mov
inc
imul
nop
fistpl
pusha
loop
xor
arpl
xchg
outsb
add
mov
add
aad
test
inc
sarb
jnp
adc
inc
call
and
inc
movsb
push
aam
push
imul
or
stos
scas
fdiv
adc
adc
pop
xor
push
push
mov
cmp
insl
test
in
insl
jp
sub
ficomps
or
mov
add
lods
clc
mov
xchg
pop
mov
jne
add
mov
daa
inc
gs
xchg
mov
mov
adc
mov
test
sub
stc
mull
outsl
outsl
fildl
fldt
jb
adc
clc
cltd
and
jbe
pop
dec
outsb
fs
xor
push
aam
arpl
cli
mov
and
ret
adc
and
shl
fidivrs
push
aad
in
or
lret
cmp
jnp
cmpsb
jge
push
ret
movsl
mov
out
mov
out
leave
into
and
mov
xchg
xor
dec
lods
jae
xchg
icebp
popf
rclb
mov
cmc
cwtl
and
pop
mov
int3
jle
das
sub
and
mov
cmp
lock
cmp
jmp
cmp
mov
and
idivb
loope
aam
ss
sbb
not
int3
adcl
jo
out
mov
jae
ret
adcb
push
or
movsl
xor
cmpsb
cmp
aaa
aam
ret
sub
adc
push
enter
mulb
jmp
or
cmp
pop
inc
scas
xchg
inc
aas
fisubrs
arpl
loopne
xchg
iret
testl
or
movsl
xor
and
hlt
fsubrl
pushf
mov
ss
jge
inc
push
in
ljmp
jle
xchg
mov
roll
xor
popa
outsb
repnz
or
push
cmp
xor
dec
xchg
sbb
cmpsb
mov
pop
mov
add
dec
pop
bound
into
cmp
jne
out
insb
imul
ds
xor
xchg
iret
insb
pushf
push
rolb
mov
jg,pn
lea
dec
mov
movsl
dec
rol
movhps
inc
lahf
push
mov
jge
jmp
adc
jg
pop
fnstenv
cmp
fadd
xor
pop
push
xchg
out
test
arpl
iret
adc
sbb
xchg
std
add
test
daa
out
push
test
pop
stc
push
mov
outsb
cmpsb
gs
sbb
aaa
adc
adc
mov
stc
scas
jno
orb
pop
ret
push
mov
inc
mov
inc
imul
mov
roll
and
adc
lock
clc
xor
cmp
cmpl
and
mov
dec
jecxz
in
pushl
jno
mov
adc
jnp
jle
or
push
sub
pusha
xchg
adc
mov
pop
ljmp
fwait
mov
fsubrs
pop
in
fisubrs
cmpsb
mov
jle
xor
stos
and
push
cmpsb
pop
leave
repz
mov
fiadds
xchg
lea
or
sahf
sub
sub
xchg
outsb
in
sub
cmp
shl
or
dec
push
nop
and
xor
mov
xor
cltd
fstl
sbb
mov
cmp
outsb
sub
or
adc
pusha
xchg
pop
arpl
ret
mov
das
pop
push
mov
mov
stos
pop
ljmp
mov
dec
das
inc
add
fcomps
hlt
mov
cltd
lea
stos
mov
mov
sub
call
popl
and
pushf
inc
or
nop
lea
mov
addr16
sbb
enter
test
mov
pop
aad
in
add
ja
cmp
fs
insl
dec
sub
inc
mov
pop
xchg
scas
shlb
xchg
ja
enter
xor
xor
add
ret
jb
jb
sbb
cmpsl
mov
cli
loop
enter
addr16
dec
cltd
jge
sbb
cld
adc
mov
out
jge
movsl
shrl
jbe
loop
pop
daa
inc
sbb
push
test
xor
and
adc
jns
push
arpl
loop
daa
aas
mov
pop
mov
lahf
dec
add
mov
inc
xchg
or
push
and
push
mov
xor
enter
shll
jae
lret
sbb
sbb
cwtl
lcall
push
test
push
or
jnp
mov
rcrl
scas
scas
jnp
out
cmp
xchg
inc
cs
mov
push
and
add
in
movsl
stos
fcoms
sub
push
cli
into
inc
ficompl
ds
int
fsubrl
in
jb
mov
aaa
push
mov
sub
notl
xor
in
pusha
push
cmp
cmp
sub
jns
mov
push
leave
das
sbb
mov
in
daa
xor
xchg
mov
and
xchg
popa
sub
jae
xor
mov
xor
lret
scas
gs
jg
cmpsl
pushf
ret
daa
adc
sbb
sti
xchg
xchg
jmp
jecxz
cmpsl
les
arpl
inc
lods
addl
mov
fists
adc
xor
pop
in
mov
stc
cmc
push
jae
mov
jne
lcall
sub
fwait
adc
inc
in
movsb
fistl
pop
jo
psrad
sub
mov
hlt
cwtl
jmp
adc
ja
mov
loopne
js
cmp
sbb
dec
jmp
clc
jmp
cmp
ljmp
scas
outsb
xchg
std
aam
pop
adc
sub
out
ss
jg
or
mov
addr16
mov
shr
pop
or
stc
push
sbb
fcoml
insb
addl
jecxz
cs
sahf
and
test
xchg
imul
stc
gs
cli
sar
mov
out
adc
scas
cmp
rcll
loop
aad
push
insb
loop
push
xchg
and
xchg
mov
cmp
xor
fdivs
cld
cltd
sub
push
add
xchg
jge
scas
sub
addl
or
mov
push
shrb
icebp
cmpsb
and
ficoms
stc
sbb
push
daa
xchg
jecxz
push
dec
mov
xchg
loope
mov
lea
stos
pusha
aam
loope
xchg
jae
push
adc
mov
jp
fidivrs
push
call
mov
js
jmp
sub
mov
fs
pop
xchg
cld
push
inc
jne
xchg
lods
out
cwtl
add
push
dec
test
lock
fcmovnb
xchg
lcall
movsb
dec
add
xor
pusha
dec
or
mov
mov
adc
add
xchg
xchg
shr
inc
stos
into
xchg
inc
or
jecxz
sbb
faddl
ficoml
cmp
cmp
and
jae
mov
sbb
adc
sbb
or
imul
sbb
pop
stos
pop
mov
adc
inc
imul
jae,pn
fistpll
shl
pusha
ljmp
xchg
adc
icebp
and
sti
in
cld
mov
adc
shr
jmp
pop
push
jp
fcmovb
jne
xchg
lock
in
fwait
xlat
icebp
cmpsl
out
dec
mov
push
adcl
and
std
movsl
xor
dec
das
int
mov
pop
iret
rcrb
adcb
loop
ljmp
sbb
pop
sub
pop
and
in
xor
sub
les
cs
aam
xor
mov
xor
loop
pop
xor
add
xor
jle
jecxz
gs
jo
cld
popf
ds
nop
inc
mov
imul
arpl
lret
push
movl
nop
mov
mov
fidivl
fstps
mov
lds
adc
sbb
or
push
into
rorl
jbe
arpl
je
out
movsl
inc
cltd
dec
aam
and
sbb
jg
es
push
cld
or
andl
jl
outsb
mov
add
call
dec
das
xorl
xchg
jo
repz
int3
setp
pop
daa
mov
inc
and
pop
add
mov
subl
daa
std
repnz
std
pop
sbb
rcll
adc
cmp
and
jnp
rcll
jne
or
outsb
pop
in
push
mov
mov
xchg
sub
inc
ss
xor
sub
out
rcrl
mov
xor
cld
fldcw
xchg
fcompl
repz
into
and
sub
and
jle
dec
into
mov
cmc
in
add
cmp
mov
push
mov
jp
jl
sti
add
lods
mov
pop
bnd
xor
jg
or
mov
jnp
shrl
push
add
cmp
and
inc
cmp
roll
cmp
test
rcr
cld
sbb
jno
add
push
in
pop
imul
mov
fsubrs
xor
dec
inc
arpl
mov
push
push
in
add
rorb
cli
cmp
xchg
dec
dec
test
or
jle
jmp
adc
inc
lea
cs
rorl
out
sbb
or
xor
mov
xor
inc
ja
xchg
xchg
ret
in
shl
push
jge
mov
sahf
jl
bound
dec
ljmp
fucom
push
adc
inc
add
pop
popa
rcrb
pop
movsl
push
or
movsb
iret
pop
pop
inc
xor
aaa
imul
sbbl
lds
inc
cltd
ret
jle
aaa
mov
in
sbb
mov
push
add
fsubr
xchg
cli
and
lcall
pop
cmovno
sbb
add
fmul
xchg
cli
cmp
push
mov
sbb
ljmp
adc
jne
into
iret
jnp
cmpsb
pop
pop
mov
sbb
testb
cld
sbb
adc
cmp
cmp
push
ljmp
add
divl
add
mov
or
push
inc
sbb
outsl
fnstenv
repnz
jns
les
mull
mov
std
int
pop
xchg
mov
and
mov
sbb
fisubrl
jne
inc
pop
mov
cs
insb
mov
jne
sbb
cld
cld
rcrl
push
add
and
loopne
xchg
mov
push
test
fwait
ljmp
cltd
cmovo
dec
jmp
into
pop
mov
dec
jo
sbbl
bound
mov
pop
popf
add
insl
pop
stos
bnd
dec
scas
inc
out
ret
adc
mov
cmp
mov
shrl
aam
arpl
in
jp
in
decl
andb
pop
inc
jl
ficomps
add
xor
xchg
inc
inc
and
and
out
sbb
jbe
jae
testl
ror
adc
inc
lock
jge
dec
fisubl
mov
push
imul
fwait
xlat
cmp
jo
cwtl
jne
ds
push
push
rcrb
icebp
stos
rcrl
mov
cmpsl
cli
inc
or
push
sbb
push
dec
cmpsb
out
inc
push
pushf
cmp
dec
fisubl
es
xor
pop
mov
leave
inc
shlb
jnp
shll
cli
and
out
int3
cmp
and
in
mov
and
xorb
jae
sbb
jno
cld
repnz
in
jecxz
jecxz
mov
pop
lcall
push
mov
subb
sbb
or
sahf
cmpsl
sub
int
repnz
pop
in
sub
out
movsl
insb
pushw
pushf
dec
dec
imul
stos
mov
int
or
int3
cld
imul
test
mov
mov
rorl
and
arpl
mov
add
adc
mov
push
push
in
jne
xlat
push
or
mov
cld
adc
xchg
pop
jg
in
add
rolb
and
ret
push
cli
idiv
pop
test
stc
rclb
lahf
repnz
push
sub
mov
dec
xchg
pop
insb
sub
jo
and
mov
imul
insl
es
sbb
fsubrl
aas
pop
movsl
fisttpll
jmp
call
pop
imul
shl
imul
in
mov
jle
fcoms
push
inc
xor
data16
xor
je
in
repnz
repnz
cltd
adc
and
in
xchg
dec
adc
sbb
mov
imulb
movsl
scas
imul
enter
fldt
rclb
ss
std
push
mov
fstpt
stos
dec
pop
mov
inc
in
sbb
rcll
mov
pushf
cmp
mov
loop
aad
aas
mov
sbb
stos
aam
push
push
push
dec
fwait
xchg
rcll
jns
loope
push
jbe
ds
clc
fadd
ficoms
cmpsl
in
xchg
xor
mov
fwait
push
push
or
dec
or
adc
pop
dec
pop
push
xchg
mov
mov
pop
jge
sub
ljmp
mov
cmpsb
xchg
test
cmp
iret
and
or
mov
jp
mov
inc
inc
pushf
in
loop
pop
repz
add
sbb
add
jl
orb
mov
lea
test
adcl
mov
clc
mov
ja
into
jae
inc
sub
inc
fcoms
in
adc
das
adc
push
inc
add
mov
inc
sbb
cmpsl
shlb
push
ret
xor
out
outsl
enter
out
push
stos
loopne
jno
adc
or
push
xchg
lahf
adc
fnstcw
call
push
pop
fnsave
jmp
sub
das
mov
les
inc
jp
xor
xchg
and
fnclex
sti
fadds
sbb
jnp
and
jno
jno
lock
jmp
les
out
dec
ret
leave
lds
mov
ror
stos
add
push
pop
adc
mov
push
rorb
dec
cmpsl
mov
jns
mov
sub
std
lret
pop
ret
lret
int3
mov
pop
xchg
push
js
divb
cmp
xchg
sbb
dec
cmpsb
cmpl
jne
into
clc
stos
mov
lds
or
inc
mov
sbb
mov
loope
dec
mov
fs
pushf
je
cmp
ret
movsl
lock
push
cmp
int3
jns
int3
jbe
stos
test
int3
insb
jns
ja
jp
std
imul
push
cmpsl
jecxz
lret
push
mov
and
sub
movsl
adc
orb
adc
fwait
xchg
fistps
leave
nop
ss
lcall
fistpll
loop
or
pop
daa
out
and
cmp
je
lret
outsb
mov
cmp
dec
mov
pop
imul
jp
push
dec
xchg
sbb
sbb
popf
test
mov
repnz
sub
test
add
in
es
sti
shlb
mov
stos
cltd
nop
add
xchg
mov
push
ja,pt
subl
in
mov
mov
jle
aaa
inc
push
sub
ds
push
xchg
fsub
in
and
shlb
xor
and
imul
inc
dec
jg
out
out
cmp
leave
cmp
loop
push
mov
popf
push
dec
sbb
inc
pop
inc
sbb
scas
push
dec
mov
dec
repz
repnz
inc
ss
jg
inc
nop
mov
jge
mov
sub
inc
test
mov
adc
cs
mov
cwtl
jb
and
jmp
xchg
je
pop
sbbb
out
rorb
and
scas
loop
in
orb
scas
sub
lahf
mov
imulb
mov
pop
pop
lock
loopne
mov
test
cs
add
xchg
cmp
shll
sub
pop
or
movsb
loopne
adc
cmp
aam
ret
pop
add
es
pop
aaa
div
xor
cmp
push
aaa
fbstp
xchg
mov
mov
cmp
in
out
or
pop
mov
call
mov
or
inc
inc
push
sub
push
xchg
push
and
push
test
cmc
pop
xorb
orb
jmp
ds
pushf
icebp
push
mov
cmpsb
insl
das
or
cmc
lcall
push
and
sbb
jecxz
mov
test
sub
mov
cwtl
sub
cs
push
mov
cmp
pushf
insb
ds
jecxz
dec
push
mov
jmp
dec
jecxz
sarb
mov
pop
mov
jb
xchg
je
ja
pushf
xchg
lret
push
inc
test
or
cwtl
and
xor
push
pop
add
jge
add
xchg
sub
or
mov
mov
add
pop
aad
lea
fdiv
cmp
addl
pop
mov
out
cld
cmp
cmp
pop
sub
add
add
or
dec
lcall
cmp
dec
sub
aaa
pop
test
repnz
imul
lods
pop
mov
mov
push
adc
outsb
inc
out
mov
push
insl
adc
xor
xor
sarl
cmp
jl
cli
jo
cs
data16
jne
fiaddl
lods
outsl
test
lods
push
xchg
sub
das
mov
iret
in
out
sbb
ljmp
or
mov
sti
jns
out
scas
sub
idivl
mov
xor
aaa
push
mov
add
pushf
sbb
or
or
int
aas
xlat
fbstp
lds
pop
mov
sbb
shrb
repnz
sbb
mov
fsubp
push
xchg
mov
add
jl
lahf
insl
sub
add
cwtl
jmp
dec
jno
jb
cmp
sbb
iret
xor
loope
inc
cld
mov
xchg
mov
mov
inc
cwtl
xchg
sbbl
pushf
aaa
sub
mov
rcll
out
jmp
insb
push
sbb
out
push
scas
sbb
js
adc
jo
std
test
movb
fistps
inc
nop
les
jge
xchg
pushf
mov
test
push
pop
idiv
sbb
inc
cmp
test
fwait
pushf
pop
mov
imul
mov
mov
ja
and
cmp
sbb
test
imul
sbb
and
hlt
xchg
into
pop
lods
add
pop
add
fisttps
sub
shl
and
loopne
ss
mov
lock
push
jge
enter
roll
dec
cmpsb
fisubrs
pop
shlb
cmpsb
je
fbld
out
hlt
fdivr
mov
adc
cmp
lret
scas
mov
mov
sbb
xchg
in
out
sbb
in
test
fidivl
stc
cmpsb
mov
ret
imul
dec
xchg
cmp
jae
imul
cmp
jmp
lods
fwait
pushf
adc
xchg
push
cli
xchg
dec
mov
lahf
ret
sbb
fsts
sbb
inc
in
je
dec
hlt
clc
lods
or
pusha
int
jno
insb
mov
mov
out
xchg
daa
mov
lret
in
ficompl
cld
insb
test
mov
in
adc
aas
call
sub
int
xor
inc
shrl
mov
jmp
adc
int
mov
xchg
shl
sbb
mov
mov
pushf
sbb
or
push
shl
icebp
movl
add
sub
stos
sbb
dec
insl
loop
aaa
mov
lcall
mov
xchg
test
add
dec
add
xorl
outsl
lds
mov
jge
popf
or
jecxz
cmc
push
fsub
push
insb
inc
cltd
pop
enter
inc
jbe,pn
mov
cmp
aam
shrb
dec
mov
cmp
pushf
fldenv
ss
out
pusha
int3
aam
jle
aaa
out
push
xor
adc
pop
lods
inc
lcall
mov
leave
cmp
mov
stc
add
push
mov
add
or
mov
or
or
inc
jecxz
jne
xor
stc
negl
jnp
xor
cmpb
adc
adc
test
popa
push
jne
mov
cmp
sti
sbb
fnstsw
arpl
pushf
leave
cmc
mov
add
leave
sbb
imul
pop
push
ja
hlt
jp
and
test
jecxz
add
cld
sarl
enter
cmp
in
inc
inc
mov
in
imulb
push
dec
mov
std
dec
aas
sti
xor
outsb
mov
jae
aam
push
or
xor
mov
jae
test
jp
imul
sahf
test
shll
jnp
xchg
fldcw
movsb
xchg
mov
sub
cmc
mov
dec
cli
int3
imul
jmp
fwait
ret
movsl
loopne
icebp
mov
push
adc
sub
pop
sbb
and
sarl
lcall
imul
cmp
cmp
jnp
jge
dec
xor
jp
ja
aad
in
fistps
cmp
mov
pop
aam
in
xchg
sbb
faddl
pop
adc
sti
push
mov
mov
int3
loope
sub
aaa
pop
push
xchg
mov
cltd
bswap
es
enter
shll
cmp
or
outsb
aas
popf
adc
and
xor
pop
movsb
mov
mov
mov
xlat
inc
gs
or
xchg
jle
movsl
push
push
and
add
mov
movsl
cmpsb
fidivs
mov
int
ljmp
mov
xchg
or
pop
in
push
pop
fldl
mov
or
cmp
pop
scas
mov
xor
dec
shrb
sub
out
xchg
xchg
stos
push
scas
pop
in
add
mov
aam
mov
sub
inc
out
into
and
dec
dec
adc
mov
mov
add
stos
mov
daa
cwtl
xor
aad
adc
mov
rcrl
adc
dec
cmp
and
sub
sbb
addr16
sub
mov
pusha
pop
inc
cmp
in
addr16
inc
lods
fsubl
mov
jmp
cmp
into
and
sbb
jge
adc
pop
xchg
divb
outsb
test
push
shlb
aam
and
mov
jnp
ret
sbb
mov
mov
stos
push
adc
in
mov
stos
push
int
pop
adc
sarb
inc
int3
aam
leave
mov
xor
ficoms
popa
pop
insb
daa
xchg
sub
adc
flds
push
xor
loopne
jae
mov
popf
insl
jae
push
push
inc
sbb
cmp
mov
sbb
sbb
lock
filds
dec
repnz
shll
jne
movsl
cmp
sahf
mov
adc
divl
movsl
nop
jne
cmovl
sub
push
les
add
test
pop
jns
das
jge
lock
sahf
pop
push
lret
adc
xor
or
adc
push
mov
push
or
sti
cmp
inc
sbb
ret
int3
aas
js
and
insl
cmp
jb
cmp
mov
out
aas
fildll
xchg
js
ljmp
xor
cmc
ret
push
jae
ret
mov
jecxz
push
es
loop
jp
add
sbb
sbb
ret
lods
icebp
lods
inc
pop
pop
mov
inc
cmp
mov
movsb
push
jne
push
inc
imul
cmpsb
mov
and
cmpsl
in
and
sti
roll
xchg
in
fstps
xchg
jp
cmp
add
fists
jg
mov
cmp
xchg
xor
sbb
dec
push
mov
add
dec
shrl
inc
fwait
and
dec
xor
scas
rcrb
mov
mov
cmp
fcoml
scas
scas
and
cmp
rcll
adc
sub
sub
and
cli
sub
movsb
jl
pop
cmp
andb
inc
sub
jae
int3
sub
movsl
ret
cmc
push
sarb
jbe
xor
and
nop
nop
cmp
cmp
pop
mov
outsl
xlat
cli
push
or
nop
mov
ficomps
sub
and
mov
js
int
das
mov
dec
stos
jns
adc
xchg
push
pusha
inc
add
pusha
xor
cmp
inc
outsb
jo
xchg
sbb
loop
add
das
sub
call
pop
jb
dec
jecxz
xor
and
push
jo
sbbb
inc
mov
fs
clc
jp
std
ss
xchg
jg
sti
xchg
insb
pop
je
lods
pop
inc
jl
out
in
test
pop
jb
xchg
xchg
jmp
xor
pop
mov
ret
adc
adc
ds
lds
mov
lods
add
and
call
add
xchg
push
bound
pop
pop
div
xor
es
subb
cmp
out
gs
xchg
mov
mov
lock
pushf
insl
xchg
pop
fwait
ror
int
ljmp
into
push
jbe
loopew
cmp
push
std
enter
cwtl
call
mov
mulb
sbb
and
dec
inc
cmp
out
lock
popf
fwait
mov
imul
pop
aas
jb
xchg
mov
inc
xchg
mov
inc
scas
hlt
push
mov
jne
push
xchg
and
sahf
cmpsb
lcall
push
xor
int
add
pusha
push
fmull
pcmpgtd
lods
add
mov
imul
xchg
cmpsl
jg
dec
mov
mov
cmc
jns
stc
in
and
xchg
push
les
stos
call
xchg
lea
push
mov
xor
out
inc
punpckhdq
add
dec
nop
push
push
imull
fists
mov
push
push
mov
push
iret
cmpl
mov
add
jne
jo
xlat
lret
and
inc
jle
lahf
jmp
dec
mov
in
jns
dec
lahf
adc
mov
push
in
pop
add
out
xor
faddp
dec
jne
inc
sar
rclb
sub
push
in
or
rol
and
sbbl
insl
adc
cs
ret
aad
std
mov
add
adc
fcoml
xchg
fsubs
mov
aam
mov
insl
mov
xchg
stos
cmp
lock
int
xor
add
cs
mov
adc
clc
mov
leave
lret
sarb
shlb
or
push
cli
scas
mov
daa
out
negl
dec
lds
xor
aad
js
adc
push
in
fwait
and
popa
les
movsb
xor
push
mov
ror
mov
js
loop
pop
std
add
cmpsl
fidivl
add
and
jb
dec
jb
nop
imul
stc
xor
pop
add
xchg
dec
adc
jo
xor
pusha
cmp
ja
movsb
pop
mov
mov
or
clc
mov
fisttpl
inc
aaa
or
addr16
rorl
in
pop
stc
push
jbe
leave
adc
push
push
xlat
bound
sbbl
adc
fidivl
or
in
imul
mov
jno
insb
adc
out
sub
out
pop
or
jecxz
popa
jb
in
sbb
sarl
test
jb
xor
mov
arpl
jb
ss
sub
jne
mov
shl
shrl
out
jmp
call
repz
into
mov
push
jno
cltd
pop
xorl
loope
mov
dec
popa
sub
jb
icebp
lds
fstpt
sbb
sub
jne
push
aam
dec
aam
xchg
into
jp
dec
xor
sub
sahf
mov
push
or
xor
sti
fdivs
divb
shl
outsl
ret
in
outsl
js
lods
mov
testb
push
cmp
sub
popf
cli
push
add
enter
divl
jmp
orl
adc
bound
mov
mov
movsb
jg
and
adc
xchg
dec
xor
mov
push
int3
aad
push
sub
push
dec
pushf
arpl
outsb
ret
dec
mov
push
scas
loopne
adc
aad
mov
nop
dec
ret
int
push
pop
and
and
push
xlat
sub
out
scas
iret
adc
sahf
cmc
scas
jnp
addb
stc
sub
mov
lahf
push
pusha
pop
fisttpll
ja
lret
mov
shll
daa
outsb
cmp
push
aas
inc
iret
hlt
decb
es
outsl
mov
push
dec
imul
cmpsl
push
push
lcall
pop
mov
roll
outsb
sub
test
lods
outsb
js
test
out
or
or
cmc
jecxz
neg
pop
ljmp
add
fiaddl
sbb
push
cmc
xor
repz
out
xor
aad
or
fcoms
cmp
dec
out
iret
mov
pop
bnd
pop
xchg
pusha
outsb
cwtl
jbe
outsl
imul
jbe
adc
dec
in
rorl
inc
fistps
lods
les
xchg
andps
test
lcall
popf
arpl
mov
enter
xchg
inc
push
ficomps
jae
inc
adc
dec
mov
dec
inc
sahf
int3
loopne
outsl
sub
hlt
clc
mov
shrb
lret
fistpl
or
test
lahf
xchg
in
out
mov
js
daa
lods
push
mov
mov
mov
mov
inc
frstor
pop
outsb
leave
lcall
cmp
sub
sub
xchg
jb
fsubrl
mov
cltd
cltd
mov
push
jp
xchg
bound
xor
inc
pop
mov
cmp
add
pushf
adc
in
add
movsb
ja
sub
pop
jp
out
adc
lds
sbb
std
sub
push
sub
rcll
out
xor
inc
iret
pop
nop
or
scas
nop
xchg
stos
cmc
pop
lcall
adc
bound
and
jb
shrl
jmp
bound
jg
lea
sub
mov
cmp
lods
cmp
mov
jl
and
addr16
call
in
fidivl
pusha
js
xchg
jno
insl
cld
adc
mov
hlt
sahf
jmp
imul
imul
fcompl
xchg
add
leave
cmp
fdivl
fs
xor
mov
int
sub
flds
cmp
out
out
add
pushf
xor
or
pop
gs
inc
xorb
ja
inc
into
dec
xchg
lea
jecxz
sub
or
xlat
imul
stc
lods
out
adc
xor
xlat
pmulhw
xchg
cmp
jnp
scas
dec
mov
sbb
gs
jnp
mov
cld
push
adc
mov
inc
sub
mov
inc
add
cmp
iret
push
js
fsubs
insb
mov
xchg
xchg
notb
jmp
lea
clc
bnd
jecxz
xlat
adc
xchg
ret
testl
and
and
call
jle
jmp
cmp
into
int3
jns
aas
ret
gs
jnp
sarl
push
fnstcw
out
mov
jb
fsts
lret
sbb
add
mov
fsubl
ja
jo
scas
int3
fcmovnb
sbb
pop
or
xchg
sbb
call
mov
lds
pop
inc
hlt
cmpxchg
jp
mov
cmp
ret
mov
fdivr
push
xchg
jae
cwtl
ret
les
scas
fsubrs
leave
mov
or
adc
or
mov
clc
add
sub
out
mov
into
xor
movl
mov
add
add
dec
rcrl
push
mov
test
hlt
out
cmc
inc
xlat
jle
cmp
shrb
add
jle
imul
and
cld
cmp
lret
cmpb
fcmovnu
inc
das
aaa
cld
or
roll
in
negl
add
leave
test
sub
pop
es
adc
jmp
mov
mov
xorl
push
rcrl
das
test
mov
lret
adc
jo
fcoms
add
lods
insb
subb
adc
xchg
jbe
fs
orb
or
xor
and
daa
in
popf
jp
xor
in
cmpsl
jno
test
pop
xchg
ret
nop
jl
test
mov
jg
sub
jge
lea
iret
inc
add
loope
dec
add
mov
aam
fiadds
insl
pop
xor
mov
add
sub
fstps
or
out
dec
repnz
xor
rorl
in
test
adc
outsb
call
jl
stc
mulb
iret
pop
fiadds
sbb
fwait
dec
iret
add
mov
adc
dec
mov
jl
addr16
in
cmp
push
dec
inc
enter
lods
pop
xor
scas
ss
dec
sbbb
enter
push
or
imul
sub
mov
jg
push
push
imul
negl
xlat
lahf
xor
pop
les
pop
pop
mov
push
into
sub
iret
cltd
icebp
push
add
fists
ret
aad
mov
adc
pop
push
inc
mov
dec
shr
dec
push
sbb
and
sub
mov
jb
xor
fwait
push
add
cwtl
int3
mov
popa
aaa
adc
pop
push
sti
or
adc
push
mov
ds
mov
lds
call
or
int3
lods
hlt
loop
in
xchg
mov
cs
imul
jne
cmpsl
neg
and
mov
cmc
sbb
adc
jne
fsubs
sti
cli
sti
out
int3
mov
push
mov
pop
cltd
and
xor
sub
stos
push
pop
stc
test
mov
fnstcw
and
xchg
pop
aaa
lods
aad
xor
mov
lods
aad
fisubrl
jl
add
jmp
sub
mov
outsl
cltd
movsl
inc
arpl
dec
repz
loope
adc
shrl
sbb
mov
jle
mov
add
pop
jg
mov
in
lahf
or
cmpsl
mov
sbb
push
cwtl
stos
hlt
pop
loope
sub
or
jbe
int
pop
lcall
mov
cld
mov
stos
stc
jb
mov
mov
inc
mov
xor
push
lahf
mov
xchg
fsubs
das
movsl
pop
inc
aaa
push
pop
andb
push
data16
pop
sbb
sbb
push
mov
lods
mov
cmp
xchg
fcmovbe
and
fwait
jb
lds
jns
shll
test
add
push
push
fistps
loopne
xchg
cmpb
mov
out
jp
sub
or
aaa
pushw
mov
xor
push
mov
xchg
cmp
lahf
jns
movsb
outsb
lret
jo
loopne
mov
adc
sbb
xchg
jne
push
fidivl
data16
inc
xor
sub
insl
data16
xchg
dec
leave
lahf
popa
mov
popf
push
cmp
add
jecxz
aad
add
inc
sbb
in
in
mov
inc
sahf
xchg
cmp
leave
mov
and
jb
cmc
das
inc
mov
or
push
cmp
push
xor
out
jmp
mov
clc
mulb
sub
shll
inc
jmp
enter
xchg
cld
inc
rcl
mov
lret
and
repz
out
inc
jg
fiaddl
xlat
cmp
sub
fldcw
dec
loop
or
sti
lcall
js
mov
inc
and
push
add
or
mov
call
sbb
jmp
adc
pop
jle
or
push
cltd
pop
dec
dec
dec
cmp
mov
into
pop
in
jp
mov
push
loope
jl
enter
xchg
pop
jne
cwtl
cmp
sbb
cwtl
adc
gs
lret
ret
push
push
mov
xor
cli
mov
and
lret
leave
mov
add
pop
addr16
fdivs
rcl
jp
xchg
lock
enter
loop
aaa
jg
mov
hlt
sbb
lods
xchg
jle
push
sahf
xchg
jae
mov
out
outsb
jno
add
cmc
cmp
sbb
sub
xchg
cmp
mov
sub
push
xor
ret
es
cltd
inc
mov
shlb
xor
mov
scas
xor
xor
pop
mov
cs
mov
push
mov
outsb
mov
lea
or
dec
dec
xor
sub
nop
shlb
xor
dec
cmpsl
lods
jns
xor
cmp
scas
mov
je
mov
imul
aam
push
popf
stos
sub
vpaddq
lea
dec
jne
sbb
sarb
xchg
sub
std
cmp
xor
ljmp
fldl
jb
sub
loopne
mov
lcall
pop
jg
dec
mov
pop
mov
daa
inc
xor
jle
pop
xchg
push
das
xchg
fbstp
arpl
add
cmp
testb
jbe
aas
mov
inc
adc
mov
daa
inc
add
mov
andl
inc
cmp
andb
nop
jns
repnz
sbb
mov
adc
sbb
out
pop
jo
inc
push
mov
jle
pop
negb
std
inc
jae
inc
lods
lock
xor
sbb
loope
jbe
lret
sbb
add
jae
outsb
out
popl
push
fs
das
mov
xchg
arpl
or
mov
push
or
stos
push
inc
pop
leave
xchg
cli
or
lea
nop
repz
loop
popf
xor
ja
scas
jl
pop
in
inc
loope
xchg
mov
jge
int3
into
scas
stos
outsl
pop
notl
push
dec
mov
dec
addr16
mov
mov
in
cltd
sub
push
push
test
sub
sub
and
sub
dec
and
enter
scas
xchg
adc
jnp
mov
lret
fidivs
js
cltd
inc
xor
mov
add
frstor
mov
cmp
mov
and
mov
shlb
sahf
int
movsb
faddl
pushf
lock
mov
adc
inc
inc
jne
mov
cmc
jecxz
jmp
inc
xlat
sahf
mov
jle
popf
jge
mov
pop
scas
jle
pop
test
mov
sub
shr
xor
pop
in
shlb
aaa
inc
xor
cli
adc
rorl
sbb
aad
addr16
mov
jb
jne
clc
cmpsb
mov
mov
jnp
ja
jg
jno
les
in
mov
pusha
fidivrl
push
insb
in
pop
or
ss
aaa
lods
into
jae
shr
jge
adc
pop
push
js
adc
and
jbe
shl
mov
cmpsl
mov
shl
inc
ret
xor
repz
lds
incb
inc
mov
popf
and
outsl
dec
jb
mov
adc
xchg
mov
xchg
xchg
jb
stos
out
jae
mov
movsl
cmpsl
mov
adc
inc
mov
fs
jecxz
negl
sahf
mov
lret
mov
roll
mov
pop
stos
repz
lods
pop
out
call
push
xor
lahf
faddl
popa
mov
lahf
fwait
xor
stos
cld
adc
idiv
movsb
adc
shll
and
rorl
mov
sub
ret
add
ljmp
or
cmp
test
test
push
or
push
pop
dec
cmp
cli
cld
pop
test
dec
das
or
dec
outsl
lods
aad
loopne,pt
idiv
jns
stos
pusha
scas
loopne
cmp
inc
jmp
into
sub
ret
out
mov
jg
call
movsb
adc
mov
mov
in
jecxz
and
mov
add
sti
dec
adc
lods
xchg
ret
sub
dec
lods
cmp
jge
cld
stos
dec
add
out
jecxz
sbb
mov
gs
or
or
sti
jnp
push
cmp
push
fcoml
sarb
xor
push
push
xchg
jae
or
sbb
repz
in
loope
push
fisubrs
insb
aaa
inc
push
mov
arpl
and
cmpl
imull
pop
mov
pop
pop
repz
dec
pusha
mov
mov
cs
loop
cmp
xchg
les
stos
and
and
add
jl
sti
adc
mov
std
lods
icebp
xchg
mov
fsubrs
int3
les
inc
ret
dec
ss
shrl
fucom
sbb
pusha
xor
icebp
or
fs
ret
ljmp
pop
and
dec
fcomi
cmp
inc
pop
cmpsb
orb
stos
adcl
js
xchg
mov
in
in
mov
mov
lahf
outsl
stc
pop
test
in
movsl
hlt
xchg
jge
adc
test
repz
call
lock
dec
fimuls
jge
dec
sub
mov
bound
into
nop
in
add
mov
loopne
and
cmp
xlat
and
xchg
loop
rcrl
js
loopne
push
ljmp
mov
jb
pop
repz
out
adc
push
cmp
pop
and
sbb
xchg
pop
xchg
push
icebp
insb
dec
popa
xor
movsl
lret
pusha
jl
mov
inc
rol
mov
shll
sar
and
pop
xchg
cmp
fistps
pushf
popl
repz
jmp
inc
sub
push
cld
out
inc
lods
stos
scas
scas
add
dec
addl
cmp
push
out
xor
xchg
out
insl
notb
ret
mov
movsl
out
sbb
bound
pop
pushf
cmpl
inc
xor
call
in
lds
sti
scas
testb
sbbb
int
mov
into
mov
lret
int3
loop
repz
in
scas
jl
fstps
sub
bound
mov
scas
aad
xchg
in
and
popf
push
pop
cmpsl
dec
imul
sbb
jo
xchg
enter
cmpsl
push
pop
dec
mov
inc
jle
decl
ss
pop
test
mov
cwtl
sub
out
inc
inc
scas
ret
or
xchg
jo
mov
test
mov
cmpsl
push
rol
jo
fldl
mov
pop
add
pop
je
jbe
xchg
mov
pop
outsb
stos
cmp
jne
cmc
mov
cmc
outsl
fmul
gs
ret
pop
sar
mov
loope
push
into
push
add
mov
jno
mov
xchg
mov
mov
jno
jmp
jbe
push
dec
sub
cli
jns,pt
mov
cmp
cmp
cmpb
mov
ja
test
jp
sbb
fmulp
cmp
lods
fldt
and
fisubl
sub
js
inc
pop
mov
repnz
rorl
mov
or
mov
jecxz
leave
mov
pop
xchg
sub
jnp
add
and
pop
mov
pusha
pusha
out
sbb
dec
test
ret
xor
jle
push
hlt
aam
inc
mov
mov
mov
mov
nop
test
inc
xchg
pop
jne
mov
pushf
repnz
into
inc
pop
out
divps
sbb
test
adc
inc
mov
adc
fcmovb
jae
push
loop
outsl
jmp
enter
inc
pusha
cmp
mov
out
insb
std
iret
ret
xchg
jge
mov
xor
test
push
ret
add
sbb
arpl
repz
cmp
inc
mov
flds
add
mov
mov
push
push
dec
ret
roll
mov
mov
xchg
rcrb
cld
lret
dec
subl
mov
cmp
jmp
andl
mov
aaa
pop
sahf
push
ret
aas
aad
inc
mov
and
cmc
cmp
push
lcall
xchg
lcall
sbb
dec
sahf
les
jmp
jo
mov
mov
ljmp
or
iret
lods
or
ljmp
xchg
xchg
sbb
sbb
or
adc
stos
fiaddl
mov
stc
loop
pop
in
pop
adc
mov
add
jle
sbb
sub
shll
mov
sub
lea
rcrb
stos
scas
ds
cmp
and
mov
shl
enter
pop
mov
pop
lods
mov
xor
pop
mov
add
loope
mov
mov
xor
sub
jmp
or
loop
out
sub
mov
push
push
dec
pop
mov
mov
test
out
sub
mov
inc
pusha
pop
test
mov
adc
add
jmp
or
xor
aam
imull
xor
ds
out
jmp
aaa
dec
pushf
lea
push
mov
mov
loope
out
inc
loop
rcrl
insl
xor
push
pop
xchg
aad
lret
inc
js
lock
int
mov
push
test
inc
ret
pop
jmp
cwtl
jecxz
xchg
imul
dec
enter
push
push
xchg
mov
lock
pop
loopne
call
repz
sub
xchg
add
test
je
jo
pop
aas
pop
adcl
mov
shrb
mov
jmp
push
sahf
inc
jl
pop
pusha
cmc
nop
out
and
int
sbb
cwtl
adc
sub
das
cmp
jo
sar
pop
les
mov
dec
mov
clc
adcl
mov
scas
daa
movsl
adc
cmp
out
das
pop
adc
arpl
push
add
pop
lahf
inc
xchg
sti
pop
lock
adc
cwtl
stos
subb
sahf
mov
test
sbb
sub
lcall
mov
lcall
mov
popa
je
dec
iret
cmp
or
popa
push
outsl
inc
mov
negl
ss
jg
ja
in
lds
movsb
cli
movsl
mov
mov
arpl
pop
jecxz
mov
imul
push
push
cmpsb
in
mov
loope
repz
nop
mov
pop
psubq
or
js
rorb
ss
neg
pop
dec
ret
mov
mov
push
push
jl
fwait
sub
xchg
es
xchg
push
outsl
data16
sbb
push
out
mov
xchg
ret
mov
jecxz
adc
movsl
les
mov
xchg
lret
or
cs
or
mov
adc
pop
insb
pop
into
xchg
sbb
sub
fwait
sbb
icebp
dec
in
lock
dec
subb
jns
mov
mov
call
ficoml
adc
mov
sub
pop
int
fcomp
push
xchg
loopne
fimull
gs
lds
ljmp
adc
sbb
dec
adc
aaa
out
xchg
cmc
adc
lret
stos
mov
push
rcrb
push
mov
es
mov
or
push
or
cmpsl
jb
fists
dec
add
cmp
int
je
mov
jl
and
and
iret
clc
stos
jbe
inc
bound
sub
and
filds
xlat
jecxz
xchg
enter
push
jno
cmp
add
mov
jmp
gs
xchg
into
fmulp
push
add
sub
orl
sub
outsb
into
sub
xchg
lea
or
fcoms
fisttpl
cs
outsb
mov
in
sbb
add
leave
repz
jl
inc
cltd
xchg
cmp
mov
bound
xchg
enter
fstl
add
scas
in
sti
shr
mov
outsl
mov
mov
fimuls
mov
pop
aad
repnz
xor
jge
out
shll
dec
jae
inc
ja
mov
loop
mov
in
inc
aam
cmp
jbe
js
sub
xchg
xchg
cli
cmp
mov
pop
jno
mov
repnz
and
popf
lock
jmp
pop
cmpsb
stos
or
insl
adc
repz
mov
pop
adc
ljmp
sbb
adc
lcallw
push
dec
sub
mov
cltd
lcall
outsl
xchg
add
mov
test
mov
sbb
scas
add
dec
fsubs
dec
jno
movsl
popa
jns
push
mov
push
push
mov
repz
fwait
test
xchg
lods
xchg
inc
pop
dec
stos
incl
push
data16
or
stos
adc
adc
lea
aad
lds
sbb
int
leave
mov
jne
jno
dec
or
mov
stos
mov
cmc
jg
add
lcall
movsl
mov
std
aam
mov
add
sbbb
scas
dec
adc
jbe
mov
dec
imul
cmp
pop
scas
xchg
or
test
and
mov
mov
lods
in
pop
mov
gs
shrl
cmp
mov
nop
jl
loope
lea
jo
fidivrl
test
pop
sahf
inc
dec
add
cmpsb
inc
mov
scas
mov
ja
jbe
popa
sbb
pushf
notl
ja
jle
movsl
iret
push
sti
adc
fiadds
cmp
push
cli
popf
cmp
movsb
test
dec
and
addl
sbb
dec
test
xchg
add
sub
xchg
rcrl
aas
push
in
add
fs
int
pop
inc
repnz
ljmp
jae
arpl
sub
je
fisubrs
jnp
xchg
repnz
xchg
fbld
sub
add
call
sub
arpl
daa
sub
dec
mov
push
add
std
faddl
xchg
sbb
jmp
pop
or
in
test
daa
std
mov
popf
scas
insl
fstpl
mov
cld
frstor
sahf
aas
testb
test
mov
and
std
fsubrs
sub
loope
and
test
jne
pop
push
sbbl
mov
clc
adc
imul
sahf
and
imul
push
push
lods
jno
jnp
ljmp
mov
pop
insb
sbb
gs
out
int
lfs
mov
xchg
je
test
in
mov
inc
outsb
add
jg
lcall
outsb
jne
push
xlat
jne
lds
sub
fdivl
sarl
push
adc
push
insb
pop
jnp
push
xor
mov
andl
aam
add
outsl
cld
cs
hlt
xor
xor
push
fisubrl
jb
pop
xchg
xor
mov
dec
lods
lock
movsb
add
stos
pop
mov
das
pop
inc
outsb
in
mov
arpl
sbb
stc
pop
test
cli
loop
xor
jne
sar
xor
das
push
sub
js
in
xorl
in
insl
dec
mov
xchg
les
mov
push
xchg
xchg
in
iret
popa
call
iret
xchg
adc
lods
pusha
imul
lret
add
lcall
cld
mov
pop
jbe
mov
stc
jge
jge
and
cmpsb
inc
dec
sub
or
movsb
mov
pop
cmp
mov
ret
cmp
jb
or
sbb
test
push
clc
add
pop
jb
push
out
push
subl
loope
insl
lods
cltd
scas
test
test
ret
pop
insb
pop
into
adc
xchg
mov
push
out
fs
pop
mov
inc
popf
adc
pop
sbbl
pop
and
pop
mov
enter
mov
xchg
lret
mov
imul
add
int
add
shlb
lods
hlt
push
push
movsl
inc
mov
enter
ja
or
popf
pop
xchg
fidivs
jae
mov
pop
das
xor
jne
ja
mov
jmp
mov
jb
push
mov
fdivs
push
mov
std
pop
addr16
xchg
pause
push
fbld
push
stc
test
mov
push
xor
movsl
lds
outsb
push
mov
shr
cltd
mov
or
cli
popf
stos
adc
mov
xchg
or
cmp
mov
xchg
iret
inc
fimull
cmp
pop
pop
divl
out
call
aam
inc
dec
sub
add
jle
mov
aam
shr
clc
ljmp
cmp
xchg
andb
mov
jle
push
pop
inc
pop
push
fnstsw
hlt
mov
cli
loop
pushf
lahf
loop
lock
mov
cmp
jp
call
inc
lds
stos
enter
loopne
push
mov
dec
je
xlat
inc
jne
dec
jae
mov
ret
aaa
jno
sub
fucom
movsl
sub
test
ror
ret
lods
dec
dec
out
ficoml
inc
shlb
lret
gs
arpl
imull
jmp
lret
les
test
pop
push
jmp
daa
cmp
xlat
loop
test
mov
cltd
enter
xchg
xchg
jnp
loop
popf
or
cld
adc
call
nop
data16
jmp
adc
into
lods
or
dec
push
test
inc
mov
div
add
push
sub
insb
cwtl
test
jle
or
addl
rolb
dec
in
pop
aas
out
notl
push
fdiv
sub
rcll
jp
test
movsb
adc
and
outsl
fists
gs
mov
test
push
dec
sbb
iret
loop
insl
or
movsb
std
insb
pop
sub
rcll
ss
jmp
push
ret
scas
jne
pop
sub
cmpsb
push
leave
xchg
out
and
jg
out
clc
out
in
in
cwtl
mov
es
test
shll
xchg
popa
sar
cs
outsb
inc
std
jns
imul
inc
jo
ret
lahf
cmc
stos
dec
add
dec
sbb
les
jnp
xor
pop
cwtl
imul
adc
ds
popf
adc
lds
aaa
push
sbb
shll
pop
outsb
imul
and
movsl
mov
jne
pop
addb
fisttpll
mov
cmpsl
dec
insl
rolb
popf
lret
aam
loop
mov
or
dec
fstl
enter
push
inc
fadd
mov
sub
inc
and
xchg
imul
mov
xor
lods
fldenv
lahf
daa
outsb
fsts
pop
stos
mov
ljmp
xchg
test
out
or
fs
mov
mov
ljmp
into
scas
lds
lcall
mov
push
in
ja
dec
repnz
icebp
xor
cmpsl
inc
in
mov
cmp
push
jle
test
out
push
pop
mov
jne
xchg
lret
std
jbe
push
xor
testl
push
pushf
jnp
sbb
xchg
arpl
lods
in
into
fbstp
scas
loope
aas
mov
out
mov
jne
mov
insl
ret
aaa
mov
jl
cmc
dec
add
loope
inc
dec
mov
sti
mov
out
shr
repnz
xlat
outsl
lahf
ds
jl
inc
insl
inc
and
js
dec
sbb
sbb
cwtl
mov
or
mov
sbbb
into
insb
stos
inc
xchg
xchg
icebp
nop
mov
sub
mov
sbb
movsl
setbe
mov
mov
in
pop
xcrypt-cfb
cmpsl
fs
jae
or
mov
mov
sub
movsl
push
cmp
pminsw
xor
add
clc
jl
nop
jg
mov
rorl
inc
xchg
imul
mov
hlt
add
and
push
cmp
inc
test
sbb
call
sbb
mov
jg
sbb
sub
sti
or
fnstsw
pushf
mov
jno
fnsave
stos
sbb
pop
cmp
rcr
daa
dec
push
enter
lret
inc
or
add
les
xlat
fcmovne
loope
movsb
jl
inc
xor
in
test
xchg
sbb
ret
push
jmp
xor
mov
xor
dec
and
lret
jg
and
lods
sub
xchg
mov
xor
div
add
cmp
sub
xchg
add
into
fidivl
xor
pop
aaa
sahf
adc
xchg
movsb
int3
jnp
mov
ret
sub
popf
insl
inc
add
jl
cmc
scas
pushf
lods
sub
pop
cmp
seto
or
xor
dec
sbb
add
pushf
inc
and
outsb
call
in
mov
mov
xchg
mov
ret
jmp
pop
sub
mov
xchg
pushf
and
mov
mov
xor
sub
nop
dec
cmpsb
or
or
leave
nop
dec
stos
pop
jl
xchg
dec
faddp
sbb
xchg
mov
popa
mov
or
mov
outsb
lret
cltd
mov
and
add
sub
pop
inc
and
ds
aaa
cmp
jge
rcrl
lods
mov
out
mov
mov
frstor
jp
mov
add
pop
pop
xor
xchg
mov
add
mov
pop
repnz
repz
rcrb
fsubl
adc
and
jp
xor
push
add
lcall
bound
xor
push
add
aas
jb
notl
push
call
mov
cli
mov
or
pop
mov
xchg
lahf
dec
or
out
into
push
xchg
scas
push
xchg
hlt
xchg
inc
sbb
in
sahf
sbb
xor
pop
pop
pop
shl
lods
jp
push
ss
aam
adc
andl
js
arpl
je
xchg
pop
jo
mov
add
inc
add
out
add
ljmp
pop
mov
adc
dec
xchg
cmp
inc
mov
imul
pop
ret
testl
inc
mov
ljmp
nop
fdiv
sti
fldt
jmp
jl
in
shll
daa
test
xchg
cwtl
and
faddl
cmc
add
ficompl
mov
pop
cmp
mov
jl
jae
lcall
sbb
cwtl
add
mov
sbb
lret
es
mov
mov
mov
xchg
cmp
sbb
data16
adc
pop
lods
xchg
cwtl
sub
sbb
lock
cmc
stc
push
dec
dec
lret
cmp
cmp
cltd
aam
sahf
lods
jg
sub
adc
and
ss
sub
enter
test
nop
inc
repnz
ret
repz
jmp
mov
jnp
xlat
fadds
push
mov
iret
cwtl
lea
in
jne
xor
sarl
fdivrs
stc
stos
insb
push
adc
ja
inc
sbb
in
es
push
jne
sub
sub
mov
pop
push
xchg
rcr
mov
cmp
lahf
out
ja
push
dec
sub
sub
push
lods
call
jle
stos
ret
jno
shlb
inc
fisttpl
mov
addr16
cmp
fwait
in
scas
imul
ret
sub
xor
jno
cli
aaa
imul
loopne
rcrb
aaa
subb
test
movsl
and
jae
in
xchg
and
decl
and
or
cmp
add
xchg
out
out
xchg
movsl
clc
push
and
pop
mov
lret
sbbw
add
jge
xor
sbb
mov
sbbl
hlt
loop
xor
inc
cmpb
jnp
aad
imul
loop
and
test
call
fstps
xchg
popa
sub
cmp
es
fmull
mov
fucom
aad
push
xchg
fildll
dec
push
sub
sub
outsl
dec
ret
negb
fcmovnb
pusha
push
or
or
inc
xchg
sub
into
insb
sbb
sub
xlat
and
sbb
push
or
xchg
inc
lret
es
sub
insw
push
stc
sbbb
cmp
ret
xor
in
mov
and
cli
push
sbb
insb
add
iret
daa
push
xchg
pop
pop
pop
aaa
and
rolb
mov
xor
imul
push
clc
test
ljmp
or
sbb
and
jmp
gs
fcoms
push
pop
inc
inc
sbb
loope
test
pop
mov
lock
or
jp
cltd
xchg
cltd
push
popa
push
lock
push
pop
ret
sub
or
mov
adc
icebp
outsb
lahf
in
es
dec
mov
sub
xchg
xchg
inc
pop
sbb
mov
cs
cs
pop
adc
call
mov
cmc
in
arpl
je
sbb
jl
dec
inc
xchg
sub
fwait
out
xchg
nop
pop
sbb
push
push
sub
aaa
sbb
sbb
fucomp
aad
dec
cmp
ret
adc
fldcw
mov
sahf
lds
sub
xlat
sar
mov
cli
frstor
rcrb
nop
rcrb
mov
xchg
jge
inc
loope
imul
jno
or
imul
push
sub
jo
scas
add
lret
sub
icebp
push
aad
orl
mov
icebp
fsub
test
jae
cmp
push
mov
mov
pop
add
dec
lods
push
stc
and
push
lret
dec
adc
or
cmpsl
hlt
mov
std
out
leave
pop
movsl
dec
std
in
jmp
fs
and
cltd
push
jmp
push
sbb
mov
cld
push
xor
test
jle
sub
push
scas
lods
push
rclb
aas
sarb
leave
mov
scas
loop
inc
cmpsb
dec
jl
lods
push
outsl
and
mov
add
je
repz
stos
lret
jno
jmp
sarb
mov
add
dec
add
shl
test
or
xlat
mov
add
repz
add
sbb
cli
icebp
ljmp
mov
and
test
out
push
cwtl
in
cmc
lds
pushf
inc
lcall
negb
xchg
shrb
cmp
pop
mov
cs
mov
or
in
lea
jb
cld
adc
push
test
xchg
aam
cmp
repnz
stos
xor
push
mov
in
jno
dec
and
pop
ja
lds
inc
lods
fsubl
insb
xor
sub
push
js
cwtl
lret
pop
cmp
ret
mull
mov
mov
data16
pop
cmp
inc
cmc
xchg
outsb
inc
mov
daa
ds
pop
xlat
aam
loopne
push
jl
rcll
stos
or
cwtl
ljmp
sbb
xchg
pop
daa
sti
loop
cltd
xchg
nop
pusha
jno
cmc
push
xor
cmpsl
hlt
dec
jo
subl
cmc
repnz
mov
xor
test
pop
imul
je
xchg
fmulp
add
fsub
pop
mov
sbb
repnz
fwait
mov
mov
and
imul
xor
mov
dec
imul
scas
sbb
jmp
jb
cs
push
pop
dec
jnp
ffreep
adc
jbe
scas
pop
mov
divl
or
jg
fidivrs
mov
mov
cld
sbb
mov
adc
js
std
test
fdiv
pop
inc
jl
ds
les
mov
jmp
jns
push
push
push
jbe
rclb
pop
cli
mov
dec
and
mov
inc
clc
pusha
popf
dec
mov
mov
ss
in
mov
fisttpll
xor
js
xor
outsl
lahf
rorl
dec
jmp
push
es
mov
mov
inc
aas
or
fbld
bound
int
mov
pop
mov
xor
xor
icebp
xchg
aas
push
sbb
imul
shrl
notl
xor
add
mov
call
cmpb
shr
sbb
jno
or
or
and
add
mov
pop
xchg
adc
sbb
mov
cwtl
xor
les
insb
jae
imul
push
ljmp
inc
sahf
sub
xchg
insb
adc
je
jecxz
test
repz
lods
aad
cs
fistl
mov
int3
or
into
test
push
cmp
sub
and
fsubs
mov
dec
mov
ficoms
in
sbb
mov
jno
ds
loope
insb
ja
pop
or
xchg
pusha
stos
fs
add
mov
jo
push
lret
in
jne
mov
mov
sub
inc
lret
shll
cwtl
stos
sub
in
xchg
mov
jecxz
jb
mov
lahf
fwait
jns
std
jo
rclb
dec
sub
inc
sub
and
mov
push
mov
xchg
lret
jl
scas
pop
jb
cwtl
xchg
or
jp
adc
stos
adc
add
xchg
aaa
sbb
add
in
add
jge
xlat
dec
xchg
lds
testl
fists
adc
pop
mov
mov
pop
aam
lahf
lds
and
sub
inc
mov
push
pushf
push
push
dec
mov
stc
push
adc
leave
in
shrb
sub
leave
xchg
mov
pop
cld
and
rcl
inc
popf
dec
clc
jle
and
test
or
cltd
push
int3
imul
or
push
cs
testl
xchg
add
xchg
mov
jl
jo
and
inc
xchg
imul
add
inc
xchg
cmp
jbe
scas
lock
in
and
add
test
add
xchg
xchg
loope
les
mov
imul
faddl
xor
mov
cli
out
out
or
lea
adc
xor
cmp
stos
mov
sub
push
adc
dec
test
sub
cmpxchg
push
testb
inc
adc
scas
shrl
rclb
adc
loope
enter
or
in
mov
stos
lret
or
ds
pop
lret
mov
push
xor
lret
mov
sbbl
mov
imul
xchg
xchg
xchg
stc
das
insb
mov
and
int
pop
mov
in
xchg
sbb
sahf
sub
cmp
push
stc
adc
in
rcr
push
and
mov
shl
sbb
dec
xor
jp
sbb
stos
cmc
sub
psubb
xchg
and
inc
add
shlb
inc
cmpsb
cmpsb
pop
addl
cmp
cmc
shr
pop
sub
mov
push
mov
and
scas
pop
push
mov
pop
xlat
gs
mov
scas
imul
jle
imul
ss
sub
mov
enter
rolb
pop
sub
mov
inc
dec
scas
gs
or
mov
shl
push
add
mov
fisttpll
cmp
inc
movsl
fxch
fdivl
pop
xchg
cld
mov
inc
jns
mov
mov
movsl
inc
cmpsb
cltd
sbb
cli
add
loop
and
bnd
jae
inc
scas
loop
movsl
fsubrp
call
rcr
jne
jo
push
mov
loop
enter
es
jecxz
inc
mov
clc
add
cli
adc
outsb
pop
mov
mov
push
push
dec
sbb
xchg
loop
out
jg
pop
shlb
pop
loope
xorl
jecxz
xchg
dec
test
ret
push
adc
cltd
jl
push
cmp
dec
jns
jno
mov
lret
lret
enter
sti
dec
inc
into
adc
mov
divb
loope
je
adc
cmp
lock
fsin
inc
nop
int
outsl
lock
std
loope
inc
sbb
sahf
push
shll
loopne
xchg
push
or
pop
push
imul
ljmp
mov
add
mov
je
jmp
and
shlb
imul
push
es
ds
jnp
dec
ret
or
loop
adc
rcll
dec
pop
fists
lds
rcr
jg
inc
jmp
inc
pop
cmp
push
enter
or
roll
pop
sbb
js
xor
mov
sti
adc
ficoms
lea
push
in
shll
lret
movsl
scas
ret
out
into
stos
pushw
test
xchg
dec
inc
sbb
mov
icebp
pop
and
xor
call
xor
cmp
hlt
aaa
cmp
scas
test
cmpl
movsb
fwait
loope
adc
sbb
pop
scas
mov
xchg
arpl
mov
push
xor
and
ja
sbb
dec
pop
add
and
cld
pop
fs
lock
loopne
pushf
fwait
sbb
aaa
xor
imulb
jg
mov
dec
test
loopne
or
stc
sub
scas
push
inc
xor
jle
loope
mov
in
test
add
push
mov
mov
jns
push
mov
std
push
ss
in
in
sub
cmpl
rorl
imul
mov
test
cmpsb
dec
or
divb
outsb
push
pop
sub
addb
je
mov
setb
lock
and
imul
pop
in
lods
scas
js
and
add
cmp
icebp
adc
aas
lods
inc
cli
xchg
pop
xor
adc
adc
pop
adc
jge
push
mov
lock
and
ret
in
xorb
addb
mov
jp
mov
cltd
pop
mov
out
div
mov
arpl
pop
notb
cld
cmp
xor
xlat
rcr
add
out
test
push
jbe
daa
mov
addb
dec
test
cwtl
repz
icebp
insb
sub
and
add
push
ljmp
aaa
enter
or
aaa
pop
and
dec
xchg
iret
aas
or
mov
mov
mov
jg
data16
into
mov
call
mov
lods
pusha
out
push
imul
repz
loop
add
push
fisubrs
lods
arpl
and
cmp
mov
jle
fwait
pop
inc
xchg
and
test
test
sbbl
xor
and
in
sahf
dec
cwtl
int3
vpcomub
mov
adcl
xchg
jle
pop
mov
xor
gs
scas
lcall
mov
lods
xchg
fistpll
out
rcrl
leave
out
inc
leave
jnp
call
dec
shll
push
inc
jb
jmp
lahf
lds
cli
jb
pop
push
sub
repnz
loop
aaa
add
pop
cltd
in
push
cmc
inc
jbe
sub
xchg
sbb
or
or
xchg
fldl
jmp
dec
push
fwait
jbe
shll
mov
movsb
mov
ds
dec
sub
push
lods
mov
mov
mov
imul
dec
ss
lcall
adc
mov
enter
iret
push
sbb
call
jg
imul
and
je
clc
jl
mov
jbe
jmp
es
lea
pop
mov
jns
mov
xchg
xor
shrl
sbb
sbb
mov
add
stos
loope
les
xchg
pop
aaa
add
jae
fisttpl
and
mov
js
adc
iret
mov
iret
shl
jge
lods
cs
clc
movsl
clc
jmp
mov
fstl
clc
push
adc
mov
call
pop
inc
add
into
mov
out
jnp
sbb
mov
adc
adc
dec
je
in
dec
test
mov
cmp
or
sub
stc
mov
sbb
xchg
jo
seto
and
pop
inc
arpl
jae
cmp
fidivrs
xor
je
rcl
mov
dec
jmp
sub
lcall
or
stos
cmpsb
mov
nop
mov
xor
sub
lds
aaa
in
int
lahf
cmp
dec
ja
aas
fldcw
nop
std
mov
in
add
lcall
cwtl
repz
pusha
push
out
cmp
xchg
sbb
arpl
stos
sub
das
pop
mov
jmp
jge
xchg
mov
or
outsl
sub
jecxz
pop
cmp
stos
js
mov
cltd
push
movsl
clc
adc
mov
lock
jb
insl
cmp
jns
and
jae
inc
xor
and
test
inc
sbbb
cmp
push
ret
pop
out
cltd
mov
loopne
mov
sbbl
inc
add
jle
pop
arpl
popf
jmp
mov
sbb
aas
iret
shrb
fs
inc
or
popf
dec
dec
shll
addl
mov
repnz
mov
xor
fldt
lahf
adc
ret
fldt
outsb
pop
repz
stos
mov
sahf
fidivrl
adc
fdivr
xchg
nop
xor
cmp
pop
sub
dec
in
fsts
out
dec
push
xor
rcrb
andl
outsl
sbb
or
jle
jecxz
leave
dec
cmp
mov
and
mov
mov
or
xor
inc
push
and
push
and
out
mov
aam
adc
dec
mov
jns
outsb
xor
jns
mov
lcall
pushf
mov
mov
outsb
add
and
push
jnp
in
dec
pop
sti
mov
or
pop
xchg
fisubrs
ret
cmp
inc
pop
andb
lods
shll
shlb
inc
sub
jle
push
push
cld
call
push
ret
mov
adc
loope
jl
mov
sbb
leave
sub
mull
inc
xchg
mov
pop
xchg
imul
icebp
mov
inc
int
adc
cmp
ldmxcsr
mov
jno
sub
sub
stos
jg
push
mov
mov
or
ss
pop
imul
push
inc
mov
and
xchg
push
add
cltd
mov
mov
sbb
dec
cltd
jl
rorl
les
movsb
push
xlat
clc
nop
cmpsl
cmp
jnp
xchg
jg
cmp
loopne
sub
scas
or
lea
pusha
pop
ja
mov
jg
repnz
scas
out
mov
adc
jae
push
shll
adc
cmp
sub
mov
hlt
push
clc
ljmp
pop
push
mov
jle
push
push
fdivr
test
add
inc
xchg
cmpl
sub
xchg
jp
addr16
aas
or
in
xor
lret
push
and
test
or
loopne
fbstp
mov
scas
lcall
outsl
mov
movb
dec
dec
mov
push
jbe
dec
push
dec
jbe
lock
mov
or
sarb
xchg
xlat
jb
xor
jae
mov
or
imul
lods
imul
adc
ds
sub
mov
es
add
cmp
mov
pop
shl
push
and
xchg
pop
test
test
call
stos
shlb
adc
fcompl
pop
or
repz
mov
shrd
jmp
bound
in
inc
jle
int3
or
mov
mov
pop
aas
sbb
push
push
cmp
fwait
cmp
test
fidivrl
mov
dec
stc
subl
mov
inc
clc
aam
sti
fwait
ret
cmp
fwait
pop
or
mov
ljmp
lods
cmc
adc
mov
pop
arpl
pop
mov
inc
nop
insl
sub
clc
arpl
shrl
pop
jae
lods
mov
add
push
fistpll
aam
arpl
sbb
xchg
cmp
insl
cmpsb
cs
mov
mul
dec
scas
mov
sbb
les
fnsave
scas
fldt
jns
fdivl
xchg
ds
push
ret
and
and
mov
mov
or
sub
and
or
pop
dec
loop
icebp
sbb
cmpsb
and
dec
pop
leave
cmp
add
mov
mov
xor
push
in
test
mov
sub
adc
fstl
pop
sbb
add
xchg
repnz
mov
lret
jns
and
sub
push
sti
jnp
and
inc
movsb
xor
test
mov
dec
leave
and
cmp
cmpsl
cwtl
out
mov
gs
ds
jb
addl
addr16
movsb
xchg
cmp
and
push
inc
dec
inc
xor
push
dec
mov
leave
mov
movsl
sarb
mov
mov
ja
jno
mov
int
lods
push
lret
xchg
jns
out
ror
sub
and
pop
inc
jae
imul
add
jbe
jne
orb
insb
and
jl
xor
or
popf
mov
inc
and
fs
jge
push
sub
popf
push
add
data16
inc
clc
stos
cltd
andb
xchg
push
out
push
das
shrb
cmp
sbb
cwtl
inc
xor
cs
loopne
sbb
outsb
sub
dec
dec
mov
cmpsb
pop
jge
pop
xchg
fs
mov
mov
add
cmc
bound
je
cmp
cmp
mov
dec
adc
into
stos
imul
out
inc
mov
pusha
mov
mov
push
xor
rol
lret
cmc
popf
pop
shll
mov
jmp
dec
shl
jns
and
ret
mov
dec
out
imul
test
sub
gs
jmp
psrld
aam
lret
sbb
lea
mov
pop
leave
lcall
push
and
mov
push
cli
mov
dec
call
pop
fwait
mov
fcoms
clc
shrl
lcall
mov
sbb
xor
push
fldcw
ja
fcomi
daa
sub
arpl
sar
incl
shlb
jbe
inc
std
pop
dec
push
pusha
aad
mov
adc
fiadds
mov
mov
sbb
push
aam
pop
xchg
mov
and
fcomp
sbb
mov
xchg
or
in
pop
std
jp
mov
adc
pop
inc
ss
xor
jl
pop
cmp
ds
add
loop
cmp
scas
sahf
inc
lea
add
cld
in
shll
jle
push
jne
sbb
jbe
movsl
fisubl
popa
add
and
int
pop
or
imul
popf
jbe
pushf
aas
das
sub
and
add
ret
mov
fprem1
mov
add
ljmp
mov
xor
repnz
mov
jb
jecxz
lcall
leave
and
js
xor
int
xor
fs
lret
adc
lcall
call
sub
sub
testl
and
mov
inc
sbb
cmp
mov
jo
shll
xor
xchg
stos
sbb
mov
fstl
inc
outsl
jmp
jmp
lret
mov
test
push
jmp
test
and
es
shll
mov
push
cmc
or
fistps
mov
ror
insb
add
pop
cld
dec
sub
popf
lret
aaa
mov
insl
pop
xor
pop
mov
add
sub
push
stos
mov
xchg
inc
pop
andl
testb
cmp
mov
mov
sub
xor
push
stos
cmc
and
test
xchg
gs
pop
jo
stc
test
jb
and
or
clc
sbb
aad
mov
jecxz
pop
outsb
push
dec
xchg
mov
movb
sahf
scas
jns
out
and
xchg
jl
xchg
in
xlat
cmp
fwait
pop
mov
inc
cmp
push
fidivrs
dec
push
test
pop
cmp
sbb
sbb
or
insb
or
pop
scas
mov
pop
dec
push
or
sbb
jb
jp
pop
scas
adc
in
sub
loope
pop
nop
gs
push
fsubs
scas
sbb
icebp
stos
pop
push
fstpt
or
mov
js
xchg
enter
mov
pushf
cmp
lret
mov
jp
out
loope
xor
repnz
or
in
xor
int3
scas
aaa
cmp
inc
cmp
or
rorl
adc
movsb
pushf
popf
xchg
push
mov
xchg
push
leave
sbb
jae
imul
inc
sbb
imul
arpl
idiv
pop
jo
gs
ror
cmp
movsb
fimuls
into
pop
jno
add
data16
sub
mov
popf
rcr
and
in
pushf
sbb
jnp
adc
rol
loope
pop
leave
out
mov
sbbl
adc
and
fcomps
xlat
pushf
jne
add
pop
mov
js
iret
dec
sbb
enter
pusha
push
push
mov
ss
push
cmp
std
push
out
xchg
add
cli
and
mov
push
dec
jle
inc
stc
jg
cmp
cmp
iret
scas
sbb
in
dec
faddl
jno
push
xor
or
mov
sub
xchg
add
xor
outsl
shll
inc
push
jl
inc
push
fstpt
push
pop
stos
dec
xor
or
fisttpl
mov
cmpsl
ds
popa
jecxz
xor
jp
dec
std
xchg
xchg
xlat
fbld
js,pt
out
xor
jg
shlb
sarb
fcomps
divl
iret
cmp
jecxz
rcrl
pusha
mov
mov
xchg
call
jns
loope
rcrl
xchg
xor
mov
decl
adc
mov
xchg
xor
scas
or
mov
mov
push
cwtl
scas
jae
dec
sub
icebp
cltd
nop
rol
mov
sahf
add
mov
push
add
cmp
fsubrs
xchg
rclb
xor
fwait
call
push
mov
cmp
mov
cmpsl
mov
xlat
into
lods
hlt
fnclex
orb
lock
jecxz
mov
scas
xor
sub
cmp
push
or
push
aas
xchg
xchg
insb
push
push
orl
cltd
fidivrl
test
and
divl
xlat
adc
inc
repz
mov
fwait
test
mov
pusha
scas
sbb
or
movsl
rcrb
lcall
adcl
pop
jl
pusha
in
or
and
push
sbb
outsb
je
clc
and
inc
sbb
movsl
ds
popf
into
iret
or
add
imul
jl
loopne
pop
or
das
cmc
jae
cmp
dec
rcrb
pop
jg
push
test
mov
cld
mov
nop
inc
pop
xchg
cmp
mov
xchg
jge
mov
fimuls
aam
xor
mov
dec
jb
rorl
pop
inc
pop
out
push
mov
and
movsl
leave
pop
sub
test
out
mov
cmp
scas
lret
dec
inc
pop
sbb
cmp
jle
cmp
jl
pop
arpl
bound
sbb
add
mov
inc
fcomps
lods
loop
mov
dec
in
xchg
dec
cmpsl
in
imul
es
scas
and
dec
ret
or
mov
inc
cli
mov
push
inc
mov
xchg
pop
test
subl
jl
inc
push
jp
inc
dec
add
push
jp
add
sbb
enter
dec
jae
mov
sti
dec
movsb
push
adc
adc
filds
adc
stos
aaa
mov
decb
sub
xchg
ret
pop
fsubr
pushf
xor
lret
sahf
cmpl
push
push
cmp
enter
repz
dec
mov
mov
fidivl
lret
fcmovbe
out
pop
insl
les
std
xor
and
mov
push
test
or
das
mov
or
out
push
xor
in
int3
lock
scas
stos
pop
add
enter
jecxz
outsl
inc
or
nopl
jno
mov
lds
xchg
in
pop
cmp
push
out
dec
ror
dec
adc
mov
movsb
call
testl
test
xor
jo
negl
mov
xor
jmp
cmp
mov
cmp
pushf
push
mov
cmp
sbb
jno
mov
leave
popa
imul
scas
jmp
iret
fsts
aaa
mov
outsl
jecxz
push
xor
sub
pop
and
orl
imul
out
adc
popf
fadds
adc
sti
jne
rol
lock
jecxz
js
xchg
insl
orl
adc
flds
mov
ret
int
mov
fsubr
mov
loope
cli
xor
or
mov
xchg
cmp
mov
sbb
xor
pop
int
lea
mov
mov
jno
cmpsl
or
dec
insb
pop
pusha
addb
add
inc
sbb
inc
shr
lea
sub
lret
lcall
sub
pop
outsl
push
jle
sahf
dec
cmp
cmpb
mov
inc
out
adc
adc
push
pop
jns
push
lret
jge
mov
adc
adc
loop
rcll
lds
js
mov
mov
int
testl
sbb
mov
xorl
cmp
out
mov
imul
lock
push
xchg
inc
xchg
xor
pop
xchg
bound
jecxz
sbb
dec
mov
inc
adcb
add
add
lcall
loop
insl
scas
sub
mov
mov
or
filds
aaa
xor
mov
scas
leave
xchg
jae
and
dec
mov
ret
cs
xchg
sti
sysexit
cmp
mov
fcompl
arpl
repnz
pop
adc
in
pop
in
call
pop
jnp
orl
mov
push
lahf
pop
add
mov
pop
add
xchg
aaa
cmp
mov
mov
mov
hlt
or
cmp
mov
add
into
dec
rcrl
gs
and
scas
xor
jge
mov
sti
mov
dec
lock
mov
pop
fdiv
push
popa
mov
sahf
mov
and
jle
xchg
lds
testl
jl
mov
or
xchg
rorb
mov
xchg
pop
add
push
js
aaa
in
shll
adc
sub
sub
xchg
ljmp
aaa
add
jle
cld
pop
pop
arpl
mov
icebp
ljmp
lea
aam
inc
clc
add
lock
fcoml
fistpl
push
test
push
aas
mov
push
jne
sbb
das
ljmp
fimull
les
sbb
bound
fs
test
or
ds
or
aad
loop
rorl
mov
adc
pop
lds
roll
negl
hlt
adc
incl
jmp
lcall
out
xsave
test
xchg
adc
fcomps
bound
xchg
xor
jb
mov
mov
pop
sbb
pop
sbb
into
add
jns
ret
fsubl
or
mov
lahf
push
xor
ror
mov
sbbl
mov
out
in
jns
stos
shrl
mov
dec
push
jp
or
xchg
sti
cmpsb
mov
test
sbb
out
out
sub
inc
push
cmp
adc
inc
dec
popf
jo
js
pop
or
lahf
fcoml
mov
mov
cmc
fisttpll
outsl
mov
divb
jnp
andb
test
outsb
push
ret
dec
push
jo
jecxz
fmuls
adc
into
push
fwait
cmp
ss
adc
test
fisubrl
add
xchg
mov
push
and
push
movsb
sbb
jp
imul
pop
mov
adc
push
fsubs
ja
insl
mov
or
lcall
or
or
mov
push
dec
das
out
mov
pop
stos
and
adc
cmpsl
scas
inc
jge
jns
cld
fbstp
add
sub
fwait
pop
or
std
mov
lcall
push
enter
movsl
test
inc
adc
and
inc
dec
dec
fdivrs
mov
push
push
cmpsb
flds
adc
fbld
dec
xchg
daa
out
xchg
ja
push
out
xchg
adc
cmpsl
ja
cli
in
bound
pushf
je
and
loopne
aaa
stos
mov
pop
ret
or
scas
and
clc
scas
jnp
cbtw
sbb
popf
insb
pop
or
aaa
loop
ja
mov
sub
xor
call
mov
add
dec
sub
add
add
mov
mov
inc
sbb
stos
mov
cmp
mov
dec
mov
inc
lea
inc
mov
mov
sahf
jo
add
das
pop
pop
inc
rcrl
hlt
loopne
int3
les
popa
xor
movsb
repz
xchg
inc
cmp
dec
push
cmpsb
mov
int3
sbb
das
mov
loope
lret
jo
or
shll
jbe
push
push
imul
fs
out
inc
mov
loope
mov
divb
xchg
rorl
add
dec
push
jmp
sbb
xchg
lret
in
loope
mov
dec
js
pop
adc
xchg
into
adc
cli
and
je
ret
jl
inc
mov
inc
add
out
mov
addr16
push
lahf
cmp
or
mov
cmp
pop
or
push
cmp
repz
nop/reserved
jbe
shll
mov
das
inc
cwtl
cmp
in
pop
call
pop
aam
mov
subb
xor
dec
cmp
add
call
jg,pn
fwait
shl
daa
rorl
add
ja
mov
dec
shrb
pushf
push
sub
push
sbb
scas
out
data16
call
inc
psubq
scas
lods
fwait
imul
jle
and
outsb
call
mov
pop
rol
sub
sbb
outsb
pop
popa
aaa
cli
xchg
lods
mov
popa
out
sub
fcoml
inc
push
xchg
clc
inc
inc
jp
and
sub
add
fs
jmp
jmp
repnz
or
dec
icebp
stos
push
sub
mov
dec
lahf
jnp
mov
sbb
and
std
sbb
test
mov
and
out
sbb
nop
mov
inc
addr16
jle
popf
test
add
aad
in
mov
jns
xor
add
icebp
ljmp
daa
jmp
inc
pop
aas
lret
inc
lods
cmpb
xchg
aas
or
rolb
mov
cltd
ret
jp
jg
xor
sub
or
dec
pop
or
mov
mov
inc
jmp
mov
call
mov
ret
mov
sbb
or
in
sub
faddl
in
rcr
fcomps
out
and
inc
mov
sarb
sahf
rcrb
adc
dec
cld
repz
insl
ss
jbe
jp
rorl
pop
int3
scas
xchg
mov
subl
push
jmp
adcb
in
mov
inc
sbb
das
int
sbb
pop
stc
mov
xchg
fstpt
jge
mov
xchg
dec
push
xchg
in
icebp
mov
add
dec
fisttps
rorb
scas
out
pop
loop
add
lods
push
sub
inc
jno
xor
ss
mov
into
fldenv
mov
mov
add
nop
leave
movsb
or
cmp
inc
ss
adc
mov
cli
aad
arpl
pop
sub
dec
xchg
cmpsl
and
adc
or
xor
push
inc
in
fcomps
lcall
scas
fcmovu
push
mov
sti
ljmp
pop
scas
xorb
lret
cmp
and
popa
sarl
mov
in
stos
in
xchg
jge
daa
mov
push
out
push
bound
add
dec
jb
leave
ret
push
fmuls
add
out
or
sub
pushf
int
cmp
jb
shll
dec
cmc
jb
pop
sbb
xchg
lods
push
pusha
cs
sbb
sub
pop
or
adc
mov
add
mov
sarl
pop
mov
sahf
push
or
hlt
sub
rcll
in
loopne
xor
push
jp
int
mov
push
add
aaa
push
push
cmp
das
js
enter
sub
mov
xor
sub
push
xlat
sub
mov
cltd
aas
call
jnp
pop
sbb
jle
sub
pop
daa
out
cmp
insl
or
into
out
and
and
lods
push
pop
xchg
and
stos
sbb
add
mov
mov
repz
int
inc
sbb
cld
sub
inc
faddl
push
dec
outsb
inc
imulw
cmp
mov
mov
loop
dec
mov
jge
into
cld
rcr
aaa
inc
rclb
jae
shl
das
pop
pop
mov
ss
cld
push
shll
mov
sbb
aaa
cmp
cmp
enter
mov
fildl
in
xchg
mov
bound
jo
sub
mov
sbb
xor
lods
xor
mov
jmp
adc
popa
mov
push
and
and
cmp
cmp
std
imul
repnz
sbb
inc
imul
mov
out
ret
cmc
cli
push
cld
adc
repz
pop
rorb
cmp
mov
xor
lds
add
sbb
or
xor
mov
cmc
jle
test
inc
es
inc
xor
dec
jno
stos
addr16
and
stc
in
sub
imul
mov
fldenv
cltd
jle,pt
test
push
and
shrb
subb
mov
push
push
imul
xor
outsw
sbb
fisttps
insl
add
push
icebp
into
xchg
push
push
lock
loop
cmpsb
fs
adc
rcrb
cmp
sub
pushf
fldt
outsb
sbb
mov
jb
add
push
aas
mov
jns
inc
bound
and
push
lods
lds
inc
mov
lock
pop
xchg
inc
push
jg
rcll
ja
mov
inc
dec
test
mov
dec
mov
or
adc
cmp
pop
and
jb
and
or
inc
add
insl
out
fwait
add
mov
or
add
pop
push
inc
cmpsl
jno
inc
xchg
add
push
insl
mov
repz
aas
inc
das
cmp
mov
jbe
mov
test
gs
xor
lcall
dec
sti
repnz
into
imul
clc
pop
push
push
push
dec
movsb
sahf
insb
xor
inc
out
movsb
pushf
out
leave
push
sbb
iret
add
daa
fcom
aad
testb
xchg
mov
push
insl
jle
lret
insl
shl
pop
cs
and
dec
and
movsl
xchg
dec
xchg
fmuls
dec
lret
inc
mov
je
into
push
ficompl
in
adc
adcb
mov
cltd
dec
fsub
aaa
jne
add
inc
pop
mov
lock
sub
les
out
insb
fistpl
outsl
lods
insb
fbld
and
mov
mov
andl
shrb
sbb
inc
fiaddl
test
jmp
aaa
add
pop
jo
pop
or
lahf
pusha
loopne
xor
push
mov
xchg
mov
imull
jo
jle
pop
lahf
push
sub
mov
xchg
stc
mov
leave
clc
or
popa
jmp
push
or
int3
adc
ret
scas
or
pop
push
pusha
ja
arpl
add
sbbl
jl
arpl
push
in
fucom
pusha
pop
loopne
push
scas
sti
retw
add
ret
dec
and
lock
xor
test
push
lods
xor
cltd
jae
movsb
loope
cli
inc
push
xchg
mov
aad
fs
jp
gs
outsl
sub
jp
imul
cs
in
loop
inc
push
subl
imul
and
divl
pushf
inc
out
xor
pop
icebp
fstp
cs
push
ljmp
cmp
rcll
shrl
mov
loope
dec
movsl
push
jp
jecxz
jo
pop
or
xchg
inc
nop
mov
push
setns
popa
sbb
lds
or
insl
dec
pop
js
pop
mov
stc
jnp
cmp
lret
out
lods
lods
incl
mov
rcll
jb
mov
push
xchg
in
cmp
add
test
stc
cwtl
fiadds
xchg
mov
in
in
push
hlt
sub
inc
loopne
mov
or
aad
in
popa
xor
pop
mov
movsl
xlat
popa
enter
cmp
push
enter
mov
or
inc
ss
mov
bnd
ret
aam
jecxz
decl
pop
adc
mov
insl
ja
push
shl
lds
sbb
mov
mov
mov
pop
mov
dec
mov
adc
sahf
clc
dec
mov
adc
push
popa
std
xchg
adc
add
adcb
aad
pop
js
lds
in
mov
aas
ds
pop
ret
mov
movsl
into
pop
das
adcb
adc
rcr
in
cmp
lret
sbb
lcall
aaa
lahf
stc
cmp
add
rol
adc
iret
outsb
lcall
and
push
pop
mov
lods
add
dec
or
sbb
in
mov
mov
mov
pop
fldl
iret
repnz
std
inc
or
and
mov
xor
dec
adc
dec
test
repz
and
or
ret
jne
jbe
jge
inc
in
movl
dec
jns
add
push
lock
cmp
insb
scas
aaa
out
dec
jb
fwait
ss
cmp
sbb
add
rorl
inc
fs
xchg
inc
lods
xchg
or
xor
sub
mov
pop
imul
push
cmc
push
xchg
add
outsl
inc
es
lret
jbe
ss
sub
cld
test
mov
or
inc
das
test
push
fldt
in
aaa
mov
pop
shrl
out
in
adc
pop
fistps
push
and
and
pop
stos
cmpsl
jle
mov
pop
or
cmc
fninit
out
ds
aad
std
xor
xchg
ss
test
lock
repnz
loop
aam
dec
and
inc
pop
cld
pop
mov
jns
dec
mov
lock
cmp
adc
test
lock
imul
std
ljmp
test
jnp
and
dec
xlat
push
and
sbb
and
xor
push
adc
es
xchg
pop
dec
daa
adc
push
adc
inc
jecxz
cmpb
orb
js
addr16
push
mov
int
mov
mov
adc
xchg
xchg
sub
push
test
mov
add
add
cmpsb
sbb
push
arpl
push
mov
in
lret
push
nop
mov
stos
and
into
sbb
dec
cmpsb
sub
aas
enter
push
mov
sbb
mov
xchg
xchg
mov
cli
sbb
inc
insl
pop
jae
mov
loop
test
scas
out
out
sub
sub
mov
test
cmpsl
test
dec
xor
jbe
imul
daa
pop
lret
sbb
cli
jbe
shlb
into
int3
sbb
sub
dec
jbe
cli
ss
and
fildl
pop
and
in
add
mov
push
mov
adc
sbb
sbb
push
xor
xor
pusha
shrb
mov
adc
push
insb
int
or
or
fucomi
clc
xor
push
xchg
enter
fdivrl
add
popa
xorl
mov
inc
mov
loop
mov
gs
xor
ret
test
es
mov
dec
cmpsb
cli
imul
in
orb
add
cmpb
or
mov
push
dec
push
xchg
push
sbb
dec
shll
lods
insl
xlat
rorb
mov
shll
sbbb
loope
mov
jmp
stos
xor
iret
es
test
in
cmp
repz
or
or
adc
mov
xchg
fsubs
sbb
test
movsl
cli
xchg
in
push
addr16
adc
mov
test
push
lahf
cmp
or
lret
xchg
out
push
push
add
es
adc
or
lds
add
jmp
int3
push
out
aam
pop
pop
cmp
or
ljmp
push
xor
pop
push
imul
lahf
mov
add
sbb
shrb
hlt
mov
and
fidivrs
cmpl
dec
add
ret
sbb
js
sub
call
mov
dec
push
lods
icebp
ja
repnz
insb
xchg
sub
ss
xchg
idivb
inc
orb
vpackuswb
lahf
in
imul
test
mov
mov
and
sbbb
mov
dec
mov
mov
inc
fwait
jecxz
mov
sbb
mov
fcoms
ds
nop
lea
mov
stos
xchg
lock
xor
loopne
testb
sti
movsb
add
call
xchg
aam
dec
jp
and
scas
xchg
pop
and
add
aam
addr16
pop
dec
xchg
call
call
push
mov
add
mov
shll
sbb
lret
sub
mov
adc
lret
push
dec
dec
ficoms
jecxz
out
rcll
xor
xchg
inc
cmp
test
test
jo
cmp
and
mov
dec
addl
and
fidivs
jae
dec
dec
dec
mov
mov
xchg
sbb
enter
pop
fdivr
mov
jno
mov
hlt
ss
xchg
add
xlat
lret
shlb
pop
adc
mov
mov
and
jno
jge
ljmp
lahf
pop
xchg
popf
push
dec
push
xchg
ja
cmp
xchg
dec
ss
sub
ja
add
jmp
xor
lahf
stos
int
fwait
div
inc
cmp
xor
cmp
xlat
decb
jo
mov
sahf
adc
push
dec
addr16
xor
sbb
out
pusha
mov
mov
inc
dec
stos
xchg
mov
filds
into
lret
enter
sbb
int3
std
stos
dec
leave
push
in
mov
adc
gs
jns
pop
daa
push
add
rcll
inc
imul
loop
jge
mov
mull
int
cltd
and
rolb
xchg
cmp
and
mov
or
fidivl
add
or
and
repnz
or
jle
xchg
push
push
jno
and
fstpl
add
mov
repnz
bound
push
rolb
mov
out
dec
mov
shrl
pop
dec
aas
sbb
mov
loopne
add
mov
jle
or
mov
shll
movb
inc
or
add
and
mov
shlb
enter
xchg
call
iret
enter
sub
push
pusha
jl
in
cmp
lods
outsl
ds
adc
stos
orb
jbe
clc
das
xchg
mov
and
sbb
add
adc
lods
pushf
and
jle
xchg
nop
sarl
loopne
shld
call
xchg
dec
hlt
sbb
mov
stc
je
sub
roll
cmp
in
rol
sbb
xor
jmp
mul
pop
jne
into
inc
lods
fildll
stc
adc
inc
add
lds
pop
dec
add
add
iret
rcl
cmp
xchg
pop
pop
ds
or
lret
mov
xchg
sahf
dec
dec
fucomip
popa
jp
mov
jmp
in
les
ljmp
pop
cmpsl
in
addr16
mov
insl
iret
cmc
lahf
push
repz
or
les
out
mov
xchg
add
xor
dec
cli
adc
clc
pop
sub
fiaddl
add
jg
jmp
mov
ss
sbb
push
mov
lock
mov
mov
and
lea
cli
mov
lahf
jecxz
cmp
cs
and
push
push
jo
pop
idivl
xor
scas
test
outsl
je
aam
xlat
jge
daa
and
aaa
ss
jmp
fidivs
out
sub
jmp
adc
hlt
pop
bnd
jl
mov
push
aad
dec
sbb
test
xor
mov
jg
in
jecxz
ljmp
pushf
lcall
iret
cmpsb
sbb
and
sub
xor
rolb
std
mov
xchg
inc
jno
sub
xchg
shlb
inc
out
add
pop
lods
inc
iret
stos
cltd
mov
jb
cmc
sbb
dec
mov
add
ret
cmpsb
mov
rclb
enter
mov
into
bound
add
mov
sub
dec
fxch
sbb
push
pop
push
imul
mov
xchg
mov
mov
out
sahf
fwait
pushf
jnp
jle
das
pop
popf
mov
test
dec
add
fsubl
mov
push
push
test
xor
add
mov
dec
test
lret
andb
push
sbb
test
cli
lcall
inc
jno
sbb
rclb
and
add
das
cld
sbb
jnp
or
push
mov
loop
mov
sub
jno
scas
adc
adc
xor
stc
add
js
xor
notl
push
sbb
cmp
mov
test
sub
cld
xchg
imul
inc
gs
outsb
pop
sbb
scas
shlb
popf
xchg
push
adc
jnp
in
sti
xor
mov
adc
int3
dec
addl
cmp
in
stc
out
inc
mov
add
sub
je
mov
sbb
cmp
inc
mov
addr16
push
addl
adc
hlt
adc
loope
mov
inc
lret
xchg
mov
insb
popa
stos
mov
ret
pop
inc
dec
jecxz
cmpsb
cli
insl
mov
aas
rclb
movsb
xchg
data16
mov
mov
cmp
xchg
add
leave
in
mov
leave
push
xchg
lods
movsl
add
inc
jbe
in
leave
into
sub
mov
cmc
in
adc
and
push
sbb
jo
mov
inc
mov
xchg
jmp
aam
clc
and
add
or
cld
mov
mov
je
lret
daa
xchg
lret
pop
mov
ds
dec
lds
or
scas
movsl
loopne
lock
mov
push
inc
fstps
mov
data16
cs
shr
in
mov
jb
popa
imul
mov
pop
ja
ljmp
aad
stos
pop
stos
scas
mov
pop
stos
bound
sub
jnp
fnsave
insl
push
pop
aam
mov
cs
pop
cmp
stc
cli
jecxz
lea
mov
sub
pushl
int
jmp
pop
outsb
xor
int3
push
sub
mov
aas
stos
imul
ss
lahf
pop
sbb
arpl
sbb
mull
push
mov
push
inc
cmpsl
jnp
push
xor
stos
push
enter
jle
and
mov
xor
adc
or
jnp
out
jo
push
jnp
test
sub
adc
or
call
es
push
jge
jne
or
pop
cmp
sahf
add
adc
cmp
mov
pop
lret
add
aas
lods
lret
sub
mov
aaa
mov
test
mov
je
add
xchg
cmpl
idivl
jmp
jle
stos
sarl
orl
xchg
frstor
add
dec
xchg
cmpsb
jl
dec
scas
inc
jecxz
dec
jns
ficomps
or
popf
cli
ret
mov
lret
mov
lods
jge
push
movsb
std
xchg
xor
sub
test
movsl
and
fildl
sbb
jae
arpl
fiaddl
scas
pop
test
mov
and
pop
in
jns
scas
xchg
sbb
sub
test
xor
sbb
pop
adc
push
and
es
pop
adc
cmpsl
jb
shll
gs
out
stos
mov
es
cltd
sarb
cmpsl
sbb
mov
xchg
mov
popf
scas
jne
push
popf
cwtl
insb
push
xor
insb
xor
and
stc
fstpl
rcl
sub
sahf
and
imul
cmp
sbb
negb
jnp
pop
mov
or
frstor
pop
cmp
sub
inc
mov
scas
mov
pop
push
push
ret
es
pop
jl
pop
xor
mov
push
cmpsb
into
lahf
sub
xchg
rcrb
pop
pushf
push
arpl
and
jbe
push
stos
push
gs
jle
push
cmpsb
dec
popa
jno
xchg
repz
cmpsl
clc
gs
or
int3
mov
loop
imul
xor
scas
fbld
iret
ret
mov
clc
popa
add
sub
arpl
stos
lahf
cltd
xor
or
adc
out
cltd
mov
or
xlat
inc
inc
outsl
sbb
sub
adc
jne
ja
adc
cmp
out
sub
aaa
xchg
mov
cmp
lods
sub
push
mov
lcall
pushf
leave
cld
add
cmpsb
xchg
inc
lds
pop
dec
repz
and
loop
or
xor
xor
clc
leave
adc
jae
rcl
push
push
xchg
mov
cld
cmp
mov
ds
mov
mull
push
out
mov
or
push
adc
movsl
out
mull
fwait
in
xchg
jg
es
dec
mov
adc
jmp
push
call
loopne
adc
mov
das
shll
jmp
test
mov
xor
xchg
ret
cmp
pop
fsts
sub
stc
pop
shrb
scas
orl
or
rol
sar
push
or
jb
cmpsb
stos
sbb
adc
cmpsb
int
pop
push
xchg
popa
loope
icebp
cmp
xor
data16
sub
push
mov
pop
push
ljmp
popa
jnp
in
xchg
mov
test
xor
loop
add
jmp
lahf
lea
xchg
aad
test
dec
stos
sbb
xchg
mov
adc
aaa
popf
scas
fnstenv
lcall
inc
fadd
sbb
jecxz
aas
aas
shrl
push
aas
in
shll
mov
mov
std
fldt
test
clc
mov
adc
mov
sbb
test
les
outsb
arpl
popf
andb
mov
out
fimull
int
stc
leave
dec
push
inc
sub
into
je
jmp
inc
test
enter
xchg
mov
cmp
jns
mov
test
inc
xor
addl
std
popa
mov
clc
fbld
out
and
xchg
or
cmpsl
dec
stos
aam
xchg
sub
les
sub
or
rolb
sti
lods
inc
in
mov
repz
mov
mov
fistpl
adc
ja
arpl
xchg
les
mov
arpl
or
pop
rcl
adcb
fnstcw
into
out
int
mov
jge
pop
ficompl
shlb
xchg
mov
pop
sti
orb
arpl
shufps
addr16
sbb
shll
and
movb
rorl
or
dec
mov
int
xrelease
test
adc
dec
or
jnp
call
pushf
or
int3
add
mov
inc
in
int3
test
shrb
fiaddl
jg
les
pop
addr16
jb
dec
shll
mov
mov
daa
movsl
cmpsl
gs
jmp
and
pop
pushw
adc
mov
or
mov
pop
pushf
in
sbb
add
ljmp
roll
xorl
fdivrs
mov
push
mov
lock
mov
sti
sti
fwait
mov
bound
mov
push
out
lret
data16
sti
adc
outsl
mov
add
popf
lcall
and
test
or
test
jbe
dec
mov
fnsave
add
nop
addr16
fcmove
xchg
aaa
shr
movsb
inc
loope
inc
shrb
or
lret
jle
sbb
inc
int
cmp
pop
sarb
addr16
enter
cmpsl
or
ds
test
or
mov
outsb
xor
mov
adcl
cmp
push
sbb
push
push
dec
mov
test
fdivs
mov
push
arpl
pop
jnp
mov
sbbb
addr16
dec
test
mov
dec
cmp
sub
mov
clc
inc
sub
in
add
arpl
mov
jge
inc
das
test
sti
sub
repz
cwtl
out
push
pusha
jns
lret
orb
je
idivb
adc
into
stos
mov
dec
jno
cmc
sbb
inc
adc
movsb
roll
mov
pop
jb
pop
cld
add
inc
or
cmpsb
xor
add
loop
mov
xlat
out
mov
mov
loop
movsb
jg
sbb
xlat
add
cld
fbstp
fldl
lret
cmp
jae
mov
mov
inc
int3
insl
xor
inc
sbb
sub
mov
shr
sbb
mov
jns
cmp
mov
dec
mov
dec
loope
mov
lds
lock
popf
jge
out
jmp
xchg
sbb
jecxz
mov
jb
cmpsl
jns
lcall
inc
jo
cmc
arpl
sub
and
cli
inc
and
in
dec
xor
sbb
and
les
sub
rcll
add
push
fisttps
jg
out
enter
adc
rcrb
add
dec
or
mov
add
shlb
pop
push
out
mov
test
push
out
shlb
pushf
shrb
movsl
lret
sub
mov
negb
lahf
xchg
dec
push
pop
add
xchg
sub
lods
mov
out
outsb
jg
cmp
sbb
pop
dec
push
pop
xor
push
into
test
mov
pop
pop
sti
mov
pop
gs
sbb
pop
popa
insl
rcl
mov
jns
sbb
dec
push
repnz
mov
jle
inc
mov
and
jno
call
jae
inc
mov
pop
add
loope
int
dec
pop
cld
add
xor
push
test
mov
cltd
cmp
cltd
or
insl
out
stos
jns
ljmp
arpl
xor
pop
cmp
test
mov
inc
xchg
das
jge
sub
rolb
mov
cmp
and
sub
subb
inc
mov
add
iret
mov
inc
jp
adc
imul
cmp
and
dec
xchg
push
sub
data16
inc
aad
push
movsb
sub
cmc
inc
sbb
movsl
inc
lds
insb
cmp
das
inc
sbb
mov
xchg
mov
mov
in
mov
mov
push
pop
ds
or
loope
mov
shrl
stos
jmp
jg
xchg
rcrl
rorb
jno
aam
mov
sbb
push
inc
xchg
jge
stos
add
jp
int
ret
in
jne
js
out
pop
es
mov
xchg
ficompl
rorl
jno
xor
addr16
sbbb
push
xor
sub
adc
lahf
jb
test
jg
dec
incb
dec
and
sarb
or
inc
xchg
sbb
sbb
dec
cltd
xchg
cli
aas
repz
rcrl
push
daa
je
inc
aad
adc
sub
or
xchg
xchg
and
push
iret
lcall
pop
arpl
dec
rclb
mov
pushl
idivl
imul
sub
xor
jp
stos
push
sbbl
xchg
pop
and
arpl
sub
mov
jns
test
pop
add
loopne
xor
dec
les
jnp
pop
cmp
pop
jecxz
arpl
sub
adc
jnp
mov
fldt
mov
aas
out
fbstp
pushf
test
scas
test
push
mov
cmp
jg
cld
add
sahf
add
not
cmp
movsb
inc
movsl
rclb
mov
push
inc
loop
js
jl
sub
pushf
sub
push
loop
cmp
in
es
jl
push
lret
pop
and
psubw
mov
add
pop
nop
sub
xchg
test
in
movsl
pop
push
xor
push
js
xchg
out
mov
fmuls
jbe
mov
ja
jno
repnz
dec
pop
adc
jmp
fwait
xchg
andb
and
jae
jb
push
aad
dec
outsl
fcomi
inc
int
in
push
pop
icebp
xlat
inc
jo
scas
iret
inc
mov
scas
xor
mov
test
ss
movsl
pop
test
mov
mov
in
fwait
xchg
and
sbb
mov
cmp
into
mov
cmp
imul
sti
aam
sbb
leave
adc
test
push
xchg
fisubs
js
ja
add
fwait
mov
jne
cmp
jecxz
aad
pop
dec
movsb
je
xor
cmp
push
cs
mov
push
xor
imul
daa
ja
dec
popa
jne
mov
dec
push
xor
insl
mov
sbb
jl
js
xor
cmp
and
lock
std
iret
jbe
lret
cmc
mov
into
xchg
fldlg2
test
fsubrp
inc
andb
sbb
insb
adc
xchg
inc
adc
add
mov
ss
fnstenv
mov
xchg
aaa
adc
inc
imul
mov
lds
inc
mov
and
andb
insl
fidivs
mov
mov
test
jmp
repz
out
push
lods
mov
sbb
cmp
xor
addr16
idiv
shl
test
and
bnd
dec
icebp
inc
xchg
test
adc
cltd
sub
jb
aas
mov
dec
movsb
mov
mov
sti
mull
cmp
mov
lcall
btr
jg
mov
fwait
dec
in
xchg
test
adc
lods
mov
jmp
mov
popa
test
jg
pusha
jae
cld
outsl
imul
pop
sbbb
add
pop
fidivl
mov
dec
or
sarl
stos
daa
mov
pusha
into
push
xchg
mov
popf
sbb
jae
push
mov
in
insl
fbstp
jge
add
or
enter
and
push
mov
shl
pop
mov
and
pop
icebp
pop
shl
aaa
mov
mov
call
push
enter
push
and
push
xor
mov
lods
xchg
in
and
mov
dec
lret
loopne
fsubr
xchg
sti
ret
pushf
mov
push
jmp
mov
add
xor
jns
sub
xchg
pop
es
movsl
in
lret
pop
or
xor
and
push
mov
mov
adc
jne
data16
repnz
push
mov
rorl
aas
add
loope
mov
lds
ret
aas
cld
lret
sub
std
lret
imul
lea
arpl
sarl
mov
iret
push
mov
aaa
and
fbld
sti
pushfw
xchg
cmpsl
repz
xchg
inc
fisubs
test
xchg
shll
jge
aad
cmp
insl
fs
xor
nop
xor
and
scas
fbstp
dec
imul
add
dec
sbb
sbb
das
mov
xor
jno
inc
je
sti
xchg
lock
sbb
enter
cmpsl
test
sbb
daa
out
popf
std
rol
sbb
addr16
mov
jo
stc
fwait
lods
inc
test
adc
xchg
adc
ret
in
xlat
jmp
aaa
out
push
mov
fs
mov
xchg
lds
leave
shlb
add
js
and
sub
arpl
jne
jo
mov
mov
lods
lea
test
in
mov
jge
mov
inc
in
daa
arpl
cld
lret
push
enter
in
xorb
int3
pop
sub
adc
xchg
subl
pop
sbb
add
loop
pop
fisttps
xchg
or
aad
xor
pusha
fadd
push
sub
arpl
and
fadds
jb
sub
mov
xor
jmp
xorl
nop
movsb
mov
fs
jns
mov
jbe
ljmp
sub
push
cmp
mov
jle
xlat
es
inc
dec
dec
dec
pusha
rcll
push
lahf
inc
sub
sti
fsts
orl
bound
cmpsb
pop
mov
sub
adc
shrl
xor
leave
inc
aas
stos
int
pop
or
xchg
push
sub
xlat
scas
and
mov
sub
sub
cwtl
mov
testl
gs
mov
push
mov
popa
imul
adc
adc
adc
ret
jne
cmp
jo
fiadds
movsl
hlt
and
pop
ds
popf
inc
mov
leave
sub
add
sub
xor
jge
imul
or
mov
xor
xchg
xor
aaa
int
adc
adc
mov
into
or
pusha
add
shrl
in
in
jl
xchg
imul
test
addr16
outsl
repnz
and
loopne
pop
aam
jecxz
jle
xor
ret
adc
add
mov
outsb
cmp
dec
and
les
add
fistps
or
pop
cwtl
add
push
push
ss
lret
adc
sub
jp
inc
sbbb
and
xchg
push
xchg
add
rcrl
mov
jmp
je
dec
in
xchg
push
xchg
cmc
mov
cmp
popa
and
add
push
pop
in
jnp
shlb
js
pop
repz
sahf
jns
mov
cmp
insb
aaa
cvttps2pi
and
cli
cmc
jbe
xor
adc
sbb
fstpt
clc
sbb
in
xor
pusha
loopne
adc
daa
jns
sub
jmp
call
adc
je
push
xchg
ss
loope
adc
icebp
stos
popf
jg
and
jge
pop
into
jp
in
xor
insl
mov
sub
inc
and
pushf
fwait
insb
xor
icebp
pop
or
andl
mov
push
sub
es
sbb
int3
mov
xchg
inc
xchg
jle
xchg
pop
lret
and
adc
es
xchg
decb
popl
bound
ds
cli
jecxz
and
and
ljmp
sub
fadds
dec
and
loope
or
adc
stos
xor
aad
push
mov
pop
ja
mov
push
push
xor
pop
push
push
mov
fidivl
cmp
fildl
push
pop
mov
cmp
adc
sbb
mov
xlat
ljmp
orb
ror
fwait
sub
fcoms
mov
popf
fs
nop
xor
xchg
outsl
mov
loop
sbb
xchg
sub
push
loope
cmc
push
ljmp
and
xor
dec
add
insl
inc
sub
call
dec
stos
push
pop
xchg
xor
pop
add
push
xor
incl
ret
push
and
mov
repz
inc
pop
or
xchg
sbb
sahf
pushf
adc
icebp
pop
dec
adc
xor
mov
adc
clc
stos
push
xchg
je
fstl
test
mov
cmc
int3
lock
jnp
cmc
sbb
divl
sbb
sbb
xchg
push
mov
gs
add
adcl
fs
inc
popf
xchg
sbb
adc
or
sub
mov
push
ss
jne
push
daa
loope
adc
push
ret
in
jp
idiv
push
cs
jno
xlat
scas
test
mov
inc
mov
jl
imul
cmpsl
add
mov
jno
test
insb
push
bound
sub
addr16
mov
sti
scas
cmp
jge
out
fwait
cmp
ret
ljmp
mov
stos
inc
jle
mov
or
cmp
push
imul
xchg
jbe
vmwrite
add
lods
sbbb
adc
cmp
test
in
lcall
idivb
movsb
jnp
or
mov
sbb
inc
aad
and
xor
pushf
sbb
aam
or
cwtl
icebp
jmp
push
lcall
aaa
push
dec
push
aad
pop
sahf
mov
mov
daa
lret
push
cltd
shlb
add
arpl
out
outsl
in
stos
ret
test
das
mov
js
and
mov
rcrb
mov
xchg
dec
jno
sub
ret
push
mov
push
lds
sub
arpl
sti
in
les
sbb
cmp
out
aad
xorb
cltd
out
mov
or
outsl
dec
imul
pop
enter
sub
mov
insb
push
jle
scas
xchg
add
dec
mov
cwtl
in
jae
mov
push
jge
pop
pop
sbb
add
andb
test
cwtl
jne
mov
pushl
loopne
mov
lahf
imul
insl
mov
fmuls
aad
call
outsl
out
test
xchg
jae
push
mov
movsl
out
je
mov
push
lock
mov
fwait
inc
repz
iret
xor
cmp
or
mov
notl
mov
enter
or
ja
dec
xchg
pop
or
std
outsl
xchg
out
dec
and
xor
mov
push
jo
roll
stos
sub
test
hlt
fldt
icebp
mov
jns
lock
push
jae
rcrb
clc
leave
mov
iret
ds
push
scas
leave
mov
and
or
repz
loopne
push
cmp
add
mov
adc
pushl
cmc
bound
sub
aam
ffree
repnz
dec
or
sbb
daa
cmovl
dec
sub
inc
dec
out
in
scas
add
inc
pop
loopne
or
fs
xchg
push
push
cmpsb
cld
mov
add
repz
inc
cmp
add
cmp
sahf
or
mov
cmp
push
push
sbb
pop
adc
push
inc
sub
xchg
shr
mov
test
sbbl
adc
and
xor
cwtl
push
mov
test
jge
ret
jecxz
stc
mov
sub
cs
lea
inc
jne
dec
lea
and
xchg
push
pop
add
and
xorl
loop
jecxz
pop
inc
or
imul
rclb
movsl
mov
xor
ljmp
mov
mov
sub
jo
imul
pop
and
sti
or
cld
or
inc
out
sbb
popa
jae
fcmovnbe
mov
ja
mov
inc
ss
in
imul
sub
jmp
mov
jmp
shlb
stos
or
xchg
test
xchg
mov
dec
movsl
ljmp
nop
push
test
cltd
clc
shll
inc
sbb
pop
and
adc
fsubrs
fcmovu
clc
xchg
sub
fdivr
mov
divb
stos
jle
insl
sbb
push
adc
rcr
sub
mov
dec
xchg
mov
in
arpl
outsl
lods
loope
aam
push
or
mov
ret
mov
lcall
loop
icebp
ja
repnz
addr16
shll
test
lods
sub
cli
mov
andb
sub
adc
jg
and
mov
roll
pop
mov
sub
and
int
mov
pop
test
loope
sahf
in
push
cmp
adcl
out
cmpsl
fadd
xchg
xor
data16
push
mov
mov
pop
mov
inc
pop
stc
aam
cwtl
inc
stos
shlb
jecxz
mov
mov
dec
jl
mov
fdivrs
daa
push
pop
pop
sub
les
dec
fidivrl
pop
or
cmp
jo
fcmovnb
jbe
test
push
sub
pop
push
mov
push
shll
pop
dec
jbe
das
xchg
xchg
lea
sub
jne
sbbb
movsl
xchg
jp
add
ljmp
out
mov
and
jae
add
in
adc
shlb
into
pop
out
stc
pop
fwait
mov
mov
sbb
inc
in
mov
rclb
fwait
xchg
jo
sub
ss
xchg
inc
out
in
aad
jge
push
jle
dec
pop
push
aas
sbb
popf
push
and
mov
test
mov
pop
and
mov
mov
sahf
loop
clc
push
mov
adc
aam
mov
xchg
movsl
cmp
pushf
lcall
insb
out
aas
adc
cmp
mov
fmull
shll
add
sbb
pop
xlat
idivl
cmp
sti
jno
ret
pushf
inc
dec
mov
and
ds
or
lods
mov
fisubrl
xor
pusha
pop
addb
xchg
and
xor
mov
es
add
push
mov
mov
mov
scas
ret
hlt
lods
cltd
loopne
and
and
in
fdivrl
adc
dec
lret
sbb
cmp
xor
mov
bound
aam
repnz
rcrb
mov
cmp
in
mov
cmp
insl
pop
call
int
jae
ret
jp
mov
imul
loopnew
in
lea
fcmovne
or
insb
inc
stos
lock
in
xchg
cli
popf
inc
push
test
and
and
mov
mov
push
and
stc
mov
sub
sti
pop
inc
je
or
jle
daa
cmp
ja
mov
aam
xchg
add
xor
or
shrb
sbb
inc
popf
std
leave
dec
rorb
xchg
sub
mov
stos
cmp
mov
lret
nop
out
in
jo
add
dec
gs
pop
adc
addb
mov
loop
push
shl
inc
loopne
dec
nopl
fstpl
and
imul
outsb
dec
jp
xchg
xlat
jbe
add
ss
mov
inc
push
jo
adc
push
or
in
jb
xor
xor
ljmp
repnz
movsb
inc
lret
ljmp
into
loope
xchg
test
xchg
mov
imul
orb
and
push
das
or
ret
cmp
cmpsl
dec
xor
repnz
sbb
inc
daa
repnz
sahf
pop
test
clc
call
daa
insb
cwtl
shlb
sbb
cmpb
mov
aam
inc
enter
dec
add
inc
test
cmp
xchg
xor
insl
out
inc
mov
dec
lock
sbb
push
dec
push
mov
and
mov
test
daa
mov
repz
ja
sahf
pop
jle
subb
mov
je
add
xor
xchg
int
push
jl
xchg
dec
sub
sarb
xor
xor
out
aad
push
mov
lahf
and
sub
shrb
sub
xchg
mov
mov
sub
jmp
xchg
push
into
popf
or
add
push
jecxz
dec
je
ret
cmp
inc
push
pushf
mul
test
js
test
jb
bound
sub
clc
or
mov
pop
or
cmp
adc
xchg
xor
push
mov
dec
ds
shrl
mov
pop
mov
jo
cli
and
aaa
or
cmp
stos
jb
popl
sub
mov
dec
adc
cmpsb
pop
popa
dec
out
pop
push
sbb
cwtl
ret
push
lcall
sub
fsubrs
push
cmp
and
out
adc
repz
dec
dec
incl
mov
dec
sbb
jbe
jp
sbb
push
rolb
in
cmp
or
mov
lret
stos
and
mov
sub
xchg
fsts
lret
cmp
add
leave
add
ja
or
aam
cwtl
mov
mov
je
int
shll
ljmp
jnp
lret
clc
dec
sub
hlt
dec
loope
jge
add
and
add
mov
mov
sbbl
xorl
xchg
sbb
cld
cmp
pop
jnp
or
sub
ret
mov
ficompl
enter
in
loope
loop
push
pop
fwait
outsb
jne
push
mov
mov
ja
je
xor
add
hlt
fcoml
or
popf
lock
cwtl
cmc
pop
js
jnp
push
inc
je
mov
sub
fdivs
adc
jge
dec
clc
cmp
popa
sbb
mov
mov
inc
or
testb
mov
add
cmp
mov
aad
dec
popa
fstps
sub
pop
pop
push
push
xor
sahf
int3
xchg
insl
mov
sbb
push
jbe
lock
jp
mov
push
insb
inc
xchg
ja
pop
adc
fists
mull
mov
out
sub
insb
jg
jo
inc
repz
push
xor
pop
ja
aaa
es
push
ffree
mov
sbb
jmp
sub
fisttpll
aad
fisubs
fidivs
lods
pop
dec
and
das
mov
mov
or
mov
pop
sub
pusha
push
dec
icebp
add
lret
xchg
sub
or
lds
push
insb
popf
add
lods
cmp
dec
sbb
outsl
adc
fwait
inc
and
outsb
lds
shll
test
stos
xor
scas
cli
xor
fcmovb
popa
lea
lahf
adc
jg
clc
cmc
loop
outsl
cs
aad
push
xchg
xchg
nop
add
in
addr16
rcll
jle
inc
int
movsb
dec
ss
pop
xchg
xor
xor
call
pop
jns
incl
fdivl
jmp
mov
pop
cli
xlat
adc
cmp
add
xchg
push
lret
enter
rorb
dec
adc
pop
loopne
enter
sub
ljmp
popf
movsb
popa
imul
les
test
adc
inc
mov
dec
xor
sbbl
xlat
movsl
mov
data16
inc
repz
rcrb
xlat
cs
mov
jne
sub
in
xchg
push
mov
popa
cmpsb
jne
insb
cmp
leave
iret
jl
cmpsb
movsb
aaa
in
mov
push
je
push
adc
lea
sar
sub
test
into
je
je
sub
jae
jno
push
jmp
mov
jno
adc
gs
and
test
mov
or
lods
or
or
mov
ror
jae
xchg
xchg
mov
cltd
int3
scas
jl
gs
adc
sub
ds
lret
push
jbe
lock
pushf
movsb
dec
test
xor
int
or
mov
jl
or
pop
xchg
out
or
adc
sbb
das
cmp
fs
or
out
and
and
and
gs
and
into
int3
ficoml
test
pop
fchs
test
jl
les
aad
pop
insl
repnz
jo
xchg
fildll
add
cmp
test
inc
mov
mov
ja
in
lret
sub
cmp
jno
adc
out
add
mov
js
push
out
xor
sbb
add
jmp
mov
cmp
dec
je
mov
xor
and
lea
pop
xlat
cld
out
stos
ss
add
jns
mov
int3
xor
vmread
inc
outsb
jl
lret
aaa
mov
stc
insl
xchg
outsb
xchg
int
mov
xor
movsl
fidivrs
xchg
lods
push
lock
sar
jle
or
dec
lcall
icebp
pop
rorb
dec
or
add
loopne
inc
data16
jne
cmpsb
cmp
jg
pushf
or
fdivrs
sub
sub
sbb
lock
movsb
or
roll
sbb
cmp
sub
aas
cmpsb
dec
jbe
xchg
lret
into
stos
xchg
jne
repz
addb
arpl
and
daa
push
mov
pop
imul
mov
adc
xchg
push
decb
popf
or
insb
lea
icebp
push
dec
jae
add
fstpt
fisubrl
sbb
inc
lods
xchg
out
test
bound
out
pop
movhps
xor
adc
add
sub
mov
inc
add
addr16
arpl
pop
cli
and
aaa
loope
mov
adc
lcall
lret
outsl
adc
pop
xor
stos
sub
lds
scas
cli
adc
hlt
lds
repnz
jl
jp
pushf
rcl
push
mov
icebp
xchg
js
and
adc
push
ss
sbb
push
add
test
das
in
or
pop
xchg
imul
movb
out
push
lock
or
jo
mov
aas
add
int
out
mov
out
xor
fsubrs
enter
and
icebp
or
out
push
add
in
or
mov
movsl
add
xor
sbb
es
or
std
loope
inc
ret
insl
sbb
lcall
insb
subl
into
inc
andb
pop
loopne
outsl
mov
jecxz
or
aam
mov
sbb
fidivs
repz
outsl
xor
insl
sub
mov
imul
add
movb
add
int
push
sti
int3
push
push
int
mov
fldt
pop
xchg
push
mov
mov
adc
sbb
jle
push
pushf
mov
push
outsb
xor
lahf
fwait
into
jmp
sbb
push
adc
adc
mov
cld
pop
adc
sbb
xor
xor
data16
jg
imul
jp
sbb
mov
leave
xor
or
jno
fnstcw
add
xor
rcrb
stc
stos
pop
push
mov
sub
enter
cwtl
jmp
pop
mov
pusha
fwait
sub
cmc
adc
cmp
xor
adc
adc
movsb
or
ds
inc
jae
xchg
inc
sub
clc
lods
aad
push
push
pop
int
xchg
fdivr
and
add
jmp
fwait
imul
adc
dec
test
mov
repz
add
dec
adc
and
mov
xchg
push
and
xchg
pop
jae
scas
dec
cltd
inc
mov
ret
repnz
std
sar
xor
mov
out
out
ss
fs
mov
sub
rcr
enter
jecxz
dec
pop
or
out
sahf
loop
leave
mov
pusha
cmp
call
lock
or
notb
mov
sbb
jo
pop
shll
call
lods
xchg
out
shrl
inc
imul
dec
das
cli
es
int3
and
pop
int3
cmp
adc
pushf
jp
cmp
rclb
mov
add
and
out
repnz
cli
cltd
jle
out
fisubrl
imul
adc
call
xchg
dec
jo
flds
test
mov
jb
loope
mov
int3
adc
gs
adc
dec
sbb
hlt
mov
fcomp
rorl
cmpb
test
stos
mov
cmp
dec
add
jnp
push
jmp
dec
insl
inc
sarb
sbb
loop
dec
mov
pop
xchg
ds
das
test
jle
adc
dec
sbb
outsb
dec
ss
inc
loope
aaa
and
sub
jne
imul
push
sarl
out
sbb
mov
mov
repnz
ss
xor
xchg
xor
test
fmul
popa
out
outsb
outsl
jecxz
dec
push
ret
outsl
lahf
loop
mov
push
fistps
lea
mov
mov
and
lret
xchg
in
inc
stos
nop
mov
fs
sar
and
sbb
dec
mov
shll
or
pop
xlat
jno
push
leave
add
fildll
sbb
push
cmpsb
mov
xchg
sbb
in
xchg
pushw
shrl
shlb
cld
out
roll
and
dec
inc
sbb
or
das
sub
test
push
xor
push
in
xor
arpl
movsl
lock
test
sti
divl
or
int3
pop
idiv
repnz
in
adc
or
adc
xchg
lds
adc
and
insb
or
jp
push
sub
pop
popf
stos
jecxz
mov
lods
lret
mov
dec
jns
sbb
add
push
loope
sub
and
daa
cmc
mov
jae
into
inc
fimull
fmull
push
hlt
out
jne
add
sub
push
adc
adc
fcoms
or
mov
out
jp
call
lret
leave
fistpll
lods
test
adc
insl
xor
jl
loope
adc
lret
sub
xor
mov
xchg
xor
xchg
xor
loopne
inc
push
test
and
adc
out
inc
dec
push
add
loop
dec
std
cmpsb
mov
idivb
bound
mov
adc
imul
in
jle
movntq
addl
push
ss
mov
pop
and
pop
jbe
scas
mov
jnp
jg
out
sub
dec
mov
std
inc
cld
cmp
sahf
clc
pop
cmpl
add
out
cmc
data16
movb
lahf
enter
shrb
push
mov
jnp
push
stc
scas
mov
and
xlat
insb
and
pop
xchg
and
mov
push
jp
add
pop
jb
mov
inc
cmc
jo
es
js
push
jo
or
mov
sahf
sub
mov
lcall
and
xlat
cmp
dec
push
cmp
ret
xchg
adc
push
and
stos
clc
popa
ja
pop
in
add
or
dec
shll
push
mov
enter
sub
mov
or
add
scas
inc
mov
fstl
movsl
iret
or
mov
psubb
std
jecxz
bound
push
pop
fmull
add
js
mov
jle
jb
jmp
repz
sbb
add
xor
xor
pop
xor
call
aad
jecxz
inc
stos
xchg
lods
out
out
push
imul
in
jge
xchg
add
mov
sbb
scas
or
pop
cmp
dec
pop
pop
adc
push
lea
out
jo
and
cmp
lods
out
cmc
pop
jns
subb
pop
cmpsl
pop
call
mov
sbb
adc
add
or
adc
aas
xchg
mov
dec
jbe
pop
xchg
mov
inc
divb
jbe
cmpl
xor
gs
cmp
repnz
ss
das
sub
xchg
repz
mov
sbb
scas
bound
fistl
ficoms
cmp
gs
and
ljmp
sahf
push
xor
dec
lcall
addr16
mov
inc
fs
loope
shlb
rorb
std
aam
cmpsl
add
adc
xchg
inc
scas
pop
ja
sub
mov
andl
push
sub
adcb
mov
and
loop
dec
adc
int
xchg
rolb
adcb
lods
xchg
leave
sub
jl
in
test
inc
and
cld
push
mov
test
sub
sbb
and
and
daa
popa
dec
mov
cwtl
pop
out
sub
pop
sbb
rolb
lods
xor
popf
call
adc
mov
jle
out
scas
mov
jecxz
scas
dec
movsb
xchg
cmpsb
leave
xlat
cmpsb
out
in
shll
mov
sahf
pop
mov
and
test
pop
push
gs
gs
loopne
dec
aam
loopne
and
inc
jmp
fs
es
icebp
pop
bswap
lods
cmc
and
incl
cltd
jo
dec
mov
mov
dec
roll
sub
orl
add
mov
fs
lret
int3
cmp
cmp
lahf
insb
daa
mov
pop
pop
cmp
dec
ja
or
lret
insl
mov
sub
shrb
jne
xlat
stos
lds
iret
mov
fbstp
jmp
mov
lea
fidivrs
push
ss
scas
cld
roll
xchg
icebp
pusha
push
movb
push
jae
cs
add
test
ret
inc
imul
pop
mov
xchg
std
mov
dec
scas
dec
mov
jne
dec
nop
adc
fsts
notb
mov
mov
call
outsl
adc
add
shr
add
lods
scas
and
add
test
int
mov
das
jl
jecxz
jg
iret
das
xchg
cmp
pop
mov
inc
lcall
or
fimuls
ljmp
rcr
mov
sarb
jnp
xchg
pop
jnp
xchg
movsl
push
jle
mov
mov
and
mov
mov
scas
insl
add
outsl
sbb
mov
mov
outsl
xchg
add
sub
pop
or
iret
movsb
pop
dec
sbb
fs
jmp
mov
dec
and
test
xor
ret
mov
mov
cmc
movsl
jno
lods
or
jg
loopne
inc
jnp
add
sbb
pop
in
add
scas
mov
daa
int3
insb
lahf
mov
jb
or
int3
adc
pop
jns
addr16
xchg
in
repz
xchg
std
adc
sbb
dec
push
push
divl
push
rcll
imul
clc
and
movsl
stc
ret
and
and
ja
inc
xlat
test
aaa
aaa
adc
test
push
mov
into
es
push
inc
ret
ss
sbb
lahf
ret
inc
push
aas
add
les
add
testb
push
dec
sub
jecxz
pusha
cmp
inc
add
dec
and
dec
lret
pop
mov
call
push
mov
adc
pushf
icebp
fwait
rcl
das
dec
scas
xor
push
push
jmp
js
ljmp
mov
outsl
inc
mov
push
cmp
js
nop
push
sarl
sbb
sub
jo
mov
jg
push
sbb
addr16
cmpsl
mov
push
rclb
xor
jnp
lods
addr16
pop
dec
push
imul
jecxz
ja
imulb
sahf
xchg
insb
and
xchg
nop
mov
xor
pop
popa
pushf
mov
jmp
orb
cmp
lods
cmp
ja
push
mov
fwait
and
popl
dec
into
mov
shlb
and
add
sbb
mov
jbe
mov
pop
in
jns
mov
cmpsl
jl
mov
cmp
sbb
fs
movlhps
popf
cmp
cltd
repz
ds
mov
or
lret
sbb
cmc
ss
pushf
add
into
aam
push
xchg
push
mov
jg
jp
add
dec
xchg
dec
rolb
mov
dec
pushf
sbb
arpl
out
int3
jecxz
filds
jo
or
gs
pop
or
pop
sarl
mov
jle
pushf
lods
daa
stos
sub
movsb
fnstenv
movsl
or
cmc
movsl
aam
arpl
movsl
xor
aas
insl
mov
inc
mov
xor
cmp
lret
and
pop
mov
dec
cmp
jg
filds
rcl
jmp
popf
push
xor
std
inc
orb
out
adc
int
jmp
imul
add
movsb
dec
push
aam
sub
rorb
mov
bound
int
les
mov
in
adc
inc
ficoms
xchg
cli
out
mov
fcmovnbe
dec
pushf
shll
aas
push
xchg
leave
fidivrs
testb
mov
imul
jl
mov
or
mov
es
sub
or
bndstx
mov
xchg
pop
es
mov
mov
jbe
in
pop
fdiv
lds
mov
pop
lock
ljmp
dec
sahf
insl
ja
int3
and
call
and
stc
dec
jle
das
jl
lods
sub
iret
xor
xchg
pusha
jb
push
jmp
fdivs
inc
and
mov
sbb
cmp
mov
fwait
out
into
push
sub
add
nop
mov
sbb
inc
jp
int3
pop
jg
pop
and
repnz
adc
inc
dec
push
cmp
fs
pop
scas
lods
addr16
dec
aad
iret
xor
inc
mov
jae
jbe
dec
mov
popf
inc
sbbl
or
push
jne,pn
shrb
pop
or
stos
out
add
scas
sbb
leave
push
and
xchg
mov
sahf
not
test
pop
iret
lcall
pop
movsb
addr16
pushf
push
jmp
mov
addr16
mov
mov
cli
mov
mov
test
nop
faddl
sub
dec
sbb
movsb
adc
aaa
addr16
pop
aad
sub
pop
cmpsl
fisttpl
call
and
add
bound
adc
cmp
vsqrtpd
imul
arpl
lea
rolb
sbb
out
mov
rcrb
call
lahf
icebp
jns
cmpsl
mov
nop
mov
aad
nop
xor
enter
imul
ds
test
int3
leave
fdivs
and
sub
mov
enter
mov
sbb
daa
jmp
pop
adc
sub
ljmp
pop
fs
sbb
lret
clc
mov
pop
aas
inc
mov
xor
fs
je
shll
mov
adc
jns
xchg
aam
mov
leave
xor
loopne
xor
and
cmp
imul
test
bound
inc
bsr
mov
out
icebp
mov
mov
jne
jg
imul
xor
out
pop
out
cmp
pushf
push
rorl
jle
push
shrb
in
bnd
lahf
mov
mov
outsl
sahf
sbb
loop
jne
repnz
daa
data16
cmp
sub
call
movsb
repz
test
mov
push
sub
sbb
lock
xchg
arpl
adc
mov
push
xchg
int
pushl
fists
fnstenv
stos
sbb
stc
xor
lods
fcomps
sbb
outsl
das
int
mov
push
shl
mov
mov
lret
das
push
lret
test
and
iret
test
stos
loope
aas
sbb
mov
and
jmp
ljmp
inc
jae
clc
mov
jl
jbe
outsl
es
or
jae
psrlq
int3
adc
out
es
mov
sub
enter
fimuls
insb
notl
test
jns
lahf
dec
inc
insb
push
mov
clc
jnp
lds
cli
or
add
sbb
mov
mov
fisubrs
pop
pop
xor
cmp
add
ret
fstpt
push
popl
pop
jbe
stc
std
dec
jge
inc
ds
or
das
inc
in
xlat
sbb
hlt
loopne
or
int3
icebp
adc
pop
pop
sub
movb
mov
xchg
iret
mov
cli
inc
sub
mov
sarl
insl
push
xor
out
aam
and
sub
fisubs
dec
xor
adcb
push
icebp
pop
sub
clc
add
cmp
jae
add
pop
cli
add
aam
mov
pop
pop
add
cmpsb
lock
xchg
lods
mov
push
ficoms
mov
ja
xlat
push
cmp
xor
mov
ja
push
fwait
ljmp
inc
jae
loop
push
ss
cs
movsl
dec
mov
sub
pop
cmpsb
cmp
pop
xchg
jg
hlt
popa
mov
loopne
cltd
cmp
jbe
fdivl
cltd
fs
cmovbe
mov
in
mov
cmc
mov
in
xor
lods
ret
xchg
filds
test
rcrb
cltd
mov
ljmp
es
sub
or
int3
in
repnz
push
std
daa
lcall
outsb
sbb
fistps
adc
addl
sub
orb
xchg
inc
movsb
sahf
daa
not
pop
add
fsubl
pop
mov
lahf
xor
lods
dec
movsl
jno
jae
sahf
scas
mov
nop
out
fs
dec
add
mov
leave
test
jle
and
ljmp
leave
jp
mov
mov
inc
lock
lock
jle
mov
cmpsb
jo
jmp
lret
ja
adc
pop
add
insl
stc
fimull
test
jo
pop
aaa
cmp
push
xor
in
loop
fstps
mov
inc
daa
sbb
aam
fdivrs
lods
shrl
adc
movsb
testl
enter
in
push
xorl
mov
mov
sub
sub
adc
or
mov
mov
mov
lahf
cmp
pushf
pop
mov
sub
in
out
pop
int
xchg
mov
mov
ret
pop
dec
sbb
adc
or
lds
scas
jbe
xchg
mov
les
gs
pop
inc
jge
mov
add
push
push
clc
fisubrl
fmuls
push
popa
jecxz
in
int3
mov
adc
dec
dec
popf
das
lret
aaa
jns
xor
pop
mov
cmp
iret
xchg
xor
xor
sbb
and
sbb
cwtl
cli
aaa
pop
jle
dec
aam
dec
jbe
lret
adc
mov
xchg
or
test
mov
fs
pop
mov
in
insb
stc
std
in
inc
cmp
cmpsb
adc
push
pop
lds
xor
lods
mov
lret
adc
idivb
jecxz
jo
xor
mov
mov
in
cmpsb
jns
xor
dec
std
jmp
sbb
fnstcw
push
pop
inc
sbb
mov
xor
rcr
ficompl
xchg
dec
and
out
mov
cmp
push
push
jp
add
and
jne
add
jmp
pop
popf
jb
es
jp
xor
mov
adcl
addl
clc
test
test
xchg
fimull
dec
pcmpgtb
test
mov
stos
xchg
jmp
and
mov
or
sbbb
push
mov
mov
xor
imull
int3
xchg
dec
inc
sbb
scas
sub
adc
gs
iret
pop
fs
push
sbbl
ret
divb
mov
dec
clc
and
push
pop
mov
aam
and
mov
aam
lods
out
mov
incl
dec
lahf
inc
popa
addr16
jl
mov
neg
xchg
push
mov
es
pop
pop
pop
sub
scas
ja
inc
or
inc
and
movsl
popa
adc
mov
test
insl
lret
mov
cltd
and
ss
adc
pop
sbb
pop
push
mov
mov
aaa
ficomps
mov
ret
gs
dec
aaa
out
test
in
in
sarb
pop
inc
movsb
and
pop
cli
lock
lea
and
test
loop
sub
jecxz
dec
dec
pop
nop
iret
loop
in
push
je
nop
xor
jns
js
aad
in
jle
or
imul
or
imulb
push
cmp
jne
cmpsl
mov
test
jg
push
jle
scas
mov
les
jno
sti
xor
jae
pop
stc
ljmp
push
lds
mov
or
mov
mov
jmp
cmp
cli
xchg
ds
adc
loop
jle
cmp
loop
adc
jmp
out
xchg
push
insl
push
and
rcll
std
add
xor
cmpsb
fs
xchg
loope
sbb
andb
or
jmp
out
sbb
out
adcl
add
mov
xchg
mov
movsb
inc
jo
pop
and
mov
mov
das
and
cmp
fs
lret
es
or
fwait
pop
stos
into
jae
add
xor
mov
push
fst
sbb
test
push
or
mov
and
cs
aaa
aaa
pop
sub
cltd
jp
aaa
fidivs
jl
push
mov
lock
sarb
mov
push
push
pop
cli
fimuls
outsb
cmc
mov
adc
imul
xchg
das
push
dec
mov
ret
fistps
das
mov
lret
lea
push
scas
cmp
orb
cmp
lods
mov
mov
jbe
imul
enter
add
jle
mov
test
aam
es
bnd
jae
in
mov
loope
int
adc
cli
jb
push
mov
ja
and
dec
lock
fs
mov
or
insl
xchg
jmp
std
cmp
int3
fmull
int3
push
fwait
in
imul
movl
jb
push
int3
inc
shl
stos
je
loop
fdivrs
loope
xchg
adc
xchg
popf
or
outsl
sub
popf
mov
mov
mov
add
lret
ds
adc
imulb
lds
sub
imul
inc
sub
xchg
jnp
jo
xchg
ret
pop
xchg
mov
loop
subl
aaa
lret
sarb
push
add
push
inc
sub
lods
push
pop
andb
arpl
mov
sub
dec
xchg
leave
aam
sbb
mov
xor
inc
test
adc
mov
xchg
sbb
lcall
lret
and
inc
xchg
fadds
adc
movsb
fldt
mov
loop
enter
jnp
sbb
and
sbb
xor
mov
test
or
test
mov
je
xchg
inc
shlb
mov
bound
adc
jg
push
out
enter
hlt
jmp
daa
cmp
sbb
stos
hlt
fcmovne
pop
aam
cs
out
jp
sub
imul
in
sbb
inc
xchg
lock
dec
js
int3
and
pop
adc
fsubs
callw
lods
cs
or
jmp
adc
sarl
jae
shll
loope
jno
pop
test
push
mov
popa
adc
dec
notb
inc
push
jp
mov
out
pop
ja
sahf
dec
jl
fidivs
push
mov
cmc
and
sub
aas
clc
adc
mov
jno
je
scas
cmp
aas
dec
lret
orl
fsubl
or
xchg
popf
call
xchg
pusha
pop
xchg
add
sbb
and
rolb
pop
add
test
sbb
iret
mov
add
add
sbb
leave
cmp
push
cld
dec
dec
pusha
mov
gs
lock
arpl
push
fidivs
in
add
and
xchg
aad
lods
cmpsb
out
xor
add
ss
int
adc
jnp
pop
out
jbe
cmp
pop
mov
out
push
rcrl
push
jno
mov
inc
cwtl
pop
pop
adc
cld
movsl
and
jae
mov
or
adc
mov
inc
out
sbb
stos
lahf
pop
inc
pop
xchg
or
mov
cs
jb
and
js
fmull
or
pop
cmp
jno
jg
add
pop
lret
test
and
subl
inc
out
jg
xor
dec
sbb
sahf
push
cmpsl
lahf
mov
call
inc
sub
and
and
pop
out
push
or
aaa
dec
xor
stos
or
dec
adc
repnz
shl
test
imul
ret
shlb
std
xchg
xchg
gs
add
sbb
stos
lcall
dec
in
imul
cli
add
cmp
mov
and
call
popf
pop
in
lock
mov
ljmp
ss
inc
and
sbb
hlt
leave
push
xor
and
loop
mov
sahf
pop
xor
addr16
fwait
rolb
in
aaa
adc
loope
xchg
insl
push
test
rclb
ror
push
push
insl
fnstsw
cwtl
inc
mov
fdivp
mov
jg
fld
jo
jo
stos
xlat
xchg
sub
inc
xchg
mov
or
test
push
stos
dec
adc
xor
das
fwait
test
add
xchg
cmp
shrb
adc
das
jbe
push
push
pushf
xor
bound
add
mov
dec
fmuls
aad
jp
cmp
je
out
es
push
lahf
adc
aam
in
scas
test
cmp
mov
xchg
sub
in
insb
rolb
test
mov
dec
jnp
mov
mov
cli
ja
sub
insb
mov
movl
fadds
daa
mov
adc
mov
ljmp
aad
js
andb
jnp
movsl
mov
test
inc
sub
jns
mov
jge
loop
mov
jne
sub
in
cmp
mov
outsb
mov
or
inc
insb
mov
test
add
int3
popa
jns
mov
mov
divb
lods
or
dec
jnp
gs
xor
lds
push
lods
test
bound
xchg
xchg
mov
and
or
in
dec
addr16
hlt
mov
fcoml
xlat
lret
dec
add
outsb
fidivs
mov
and
into
jge
test
xor
or
mov
sti
push
rcll
loopne
pcmpeqb
xchg
pop
or
xchg
cs
push
sbb
call
inc
aad
adc
imul
and
push
fisttps
or
cmc
mov
push
inc
push
movsb
bnd
out
adcb
fimull
loope
pop
adc
call
pop
std
icebp
pop
push
faddl
dec
mov
dec
lock
int
mov
sub
xchg
push
mov
xor
cld
mov
scas
add
adc
fwait
lcall
sar
shrb
pop
movsl
mov
repz
xchg
test
movsl
fstpl
sub
rcl
pop
aam
out
push
sbb
push
aaa
inc
mov
movsb
in
mov
daa
cmp
mov
movsb
ret
rorl
subl
mov
xor
mov
add
lcall
movsb
or
or
scas
std
mov
push
xor
scas
mov
imul
sub
xchg
imul
mov
aas
fs
cwtl
mov
mov
jnp
cmp
iret
or
shll
adc
es
cmpsl
pop
daa
push
or
addb
xorl
adc
popa
mov
aad
push
pop
pop
int
mov
add
sbb
pop
dec
rcr
push
testb
dec
inc
loope
loope
repnz
xor
jo
out
xor
cmp
into
rcl
out
pop
mov
jg
add
mov
lds
movsb
jno
movsb
std
pop
fidivs
clc
and
sbb
movsl
insb
cmpsb
jg
jle
xchg
out
mov
leave
dec
or
xchg
repz
xorl
test
and
or
in
popf
test
shlb
fcoms
inc
and
mov
jo
pop
and
inc
das
out
imul
xchg
push
mov
dec
addr16
jb
nop
mov
push
mov
int
clc
push
test
scas
outsb
mov
sbb
mov
pushl
jecxz
into
arpl
xor
call
movsb
pop
inc
movsl
fcmove
fnsave
mov
mov
fucomip
loopne
sbb
scas
sub
loopne
pop
fisttps
iret
insl
ja
nop
test
xor
xor
push
xchg
mov
dec
dec
insb
mov
or
mov
xchg
aas
popa
bound
push
dec
ljmp
lret
mov
cmp
lods
nop
sub
ret
cld
jecxz
pusha
sub
pushf
cwtl
jnp
mov
into
jb,pt
inc
div
rcrb
aas
in
div
and
nop
xor
jp
xchg
sub
and
mov
sti
int
or
orl
xor
fildll
leave
push
outsb
mov
repz
xor
scas
inc
pusha
je
movsl
call
add
scas
push
in
xor
jb
push
andb
jp
mov
bnd
xor
jge
mov
into
sub
mov
dec
ss
arpl
pop
push
or
pop
pop
les
inc
imul
subl
stc
dec
mov
movsl
movsb
arpl
xchg
repz
in
xchg
test
and
sbb
aas
rorl
xchg
xchg
xorb
add
sbb
bound
fcompl
adcb
in
fnsave
dec
push
xchg
push
and
out
xor
add
mov
push
push
and
aaa
pop
cmp
cmp
and
adc
adc
or
fs
insb
xor
outsl
fcoms
mov
lret
xor
into
aas
sub
adc
out
cmp
fs
mov
out
roll
mov
inc
icebp
sti
sbb
jb
insb
or
arpl
cli
andl
xor
adc
add
outsl
lods
lds
xlat
out
pop
dec
popf
insb
pop
jmp
flds
fisubs
in
or
shrb
test
mov
lahf
nop
push
jecxz
loopne
xchg
push
js
test
dec
daa
xor
leave
imul
cld
or
imulb
lahf
daa
xor
popf
call
cmp
or
mov
mov
adcl
inc
mov
loop
popf
lret
insl
and
out
insl
data16
dec
imul
xchg
je
imul
andb
sub
mov
fstl
jae
jge
sahf
pop
fcoms
push
or
xchg
jnp
or
test
xchg
jmp
popa
pop
scas
pop
das
shll
lods
xor
mov
mov
stos
bound
xor
adc
push
mov
adc
outsl
pop
sub
pop
sub
mov
insb
pop
outsb
add
loop
mov
push
test
push
xor
sti
cmp
loope
mov
mov
loopne
xchg
scas
push
pop
inc
pop
sbb
pop
daa
fadds
aas
cli
loope
push
lods
cli
cmp
pop
mov
shlb
or
jecxz
cmp
fildll
and
xchg
pop
cltd
xchg
scas
lea
aad
xchg
gs
jecxz
add
mov
cmp
adc
cli
pop
cmp
sahf
std
in
mov
mov
cmp
inc
dec
shl
fstpt
inc
ret
call
or
sbb
mov
mov
mov
out
std
cli
mov
and
scas
adc
into
push
subb
hlt
cli
mov
inc
repz
jp
cmpsb
mov
insl
sub
rcll
add
mov
pop
sahf
stc
cs
push
xchg
mov
xor
push
jecxz
pop
inc
addr16
sahf
les
add
mov
xchg
icebp
xchg
into
pushf
in
mov
mov
sbb
testl
ret
mov
icebp
sub
sbb
and
rcll
mov
sub
dec
push
imul
std
stos
pop
or
clc
popf
lods
push
mov
cmp
sub
fidivl
out
les
je
add
adc
divl
rcr
mov
push
push
cld
test
stos
add
fnsave
jb
add
lcall
and
mulb
bound
mov
cwtl
add
aad
in
punpcklbw
loope
js
mov
mov
mov
hlt
or
mov
dec
cmp
add
jo
frstpm(287
push
dec
jno
call
push
jecxz
nop
jecxz
and
cmp
sbb
pop
stos
mov
in
insb
les
cmp
popf
dec
cmp
push
out
sub
pop
jmp
cmp
jl
inc
inc
xor
adc
adc
sbb
and
pop
rcr
inc
dec
jle
mov
movb
clc
leave
pop
mov
aaa
fsubl
pop
scas
sub
jbe
ds
fmulp
popa
sti
xchg
mov
in
dec
push
lods
pop
xor
aaa
repnz
inc
enter
insl
and
call
enter
pop
jne
mov
inc
or
mov
loop
imul
fcoml
loope
jbe
lret
dec
inc
push
test
test
push
popf
sbb
inc
imull
mov
call
or
nop
ds
or
inc
imul
push
not
mov
mov
cmp
mov
test
lret
out
aam
fs
push
xchg
sbb
ss
shr
shlb
dec
loop
jbe
dec
push
iret
sub
loop
aaa
andl
les
or
cmp
xor
xchg
fcompl
lret
pmuludq
call
jb
lret
push
aam
adc
pop
mull
jb
mov
test
sbb
push
add
gs
jne
sub
hlt
fs
jnp
or
inc
mov
or
or
xchg
push
loopne
push
mov
cmp
pop
lods
cli
decl
dec
mov
mov
push
rorl
lret
cmp
insl
mov
pusha
jno
jecxz
lret
mov
xchg
or
loope
cmpsb
repnz
add
cmc
imul
xchg
movsb
mov
andb
ror
pop
mov
test
xchg
repz
imul
mov
xchg
jl
cmp
mov
mov
dec
shll
push
out
rep
push
jl
cs
xchg
pop
cmpsb
sub
sub
adc
push
sub
xchg
and
adc
jp
inc
and
mov
mov
mov
lods
sub
jecxz
add
pop
dec
xchg
inc
add
jg
xchg
jbe
fists
xchg
push
imul
adc
jb
dec
shll
push
push
pop
mov
cmpsb
add
inc
push
in
cltd
sarb
leavew
fwait
mov
orb
inc
popa
fdivl
mov
cltd
inc
mov
lods
or
lret
scas
sbb
scas
aas
and
into
mov
cmp
cmpsb
inc
cmp
jp
xor
je
sub
and
outsl
and
leave
mov
and
add
adc
push
or
jns
xchg
push
sbb
sub
test
adc
dec
adc
mov
lock
inc
fucomi
gs
xchg
lahf
mov
add
jbe
orl
jae
pop
lods
das
aaa
int
xchg
cmp
test
mov
lock
out
into
jno
xor
popf
test
testl
fbstp
pushl
jno
and
daa
push
mov
sar
cwtl
leave
lea
popf
ror
out
xor
mov
out
mov
lahf
push
fsubs
and
imul
lret
movsl
inc
lret
adc
cwtl
lret
sbb
pop
movsl
stos
mov
sub
cmp
fadds
sub
jns
fmull
mov
dec
insb
or
sbb
cs
aad
test
adc
mov
mov
dec
xchg
sub
loop
cs
pop
inc
mov
add
repnz
push
xchg
outsb
addr16
mov
mov
dec
movsl
call
addr16
fwait
in
sbb
arpl
repnz
dec
aad
ret
imul
xor
cmpsl
inc
mov
repnz
outsb
xor
ja
sbb
pop
clc
imul
movsb
shl
pop
xor
testb
daa
push
fmul
mov
inc
add
push
mov
xchg
jecxz
in
xor
xor
stc
fdivrl
test
lahf
inc
ror
jmp
int
clc
mov
pop
push
inc
inc
jge
out
jnp
jge
aad
and
mov
lret
inc
xor
loope
push
xor
or
aas
push
xor
jbe
cmp
add
int
sbb
xchg
add
outsl
push
adc
adc
and
mov
cmp
pop
pop
cwtl
inc
bnd
sbb
or
cmp
aam
xchg
mov
sbb
daa
mov
aas
jmp
mov
sahf
sbb
cmp
in
cmp
or
andl
jo
jle
sub
push
mov
jae
inc
out
mov
jmp
or
rclb
into
jl
add
xchg
jp
enter
xor
das
push
mov
lcall
inc
mov
pop
dec
mov
notb
gs
jbe
xor
lret
add
push
cmpb
es
mov
sub
adc
and
push
inc
sub
push
push
cli
mov
or
out
mov
xchg
std
sahf
movsb
inc
mov
dec
xor
push
js
fs
mov
aam
jbe
fiaddl
fdivrs
sbb
pop
outsb
mov
scas
push
or
mov
mov
push
mov
cmc
xchg
fsincos
insl
imul
mov
adc
stos
push
jp
or
rclb
cmpsb
scas
ret
jns
fwait
insb
sarb
and
jne
aaa
sbb
jno
mov
nop
rorl
cmpsb
xchg
xor
loop
adc
cli
push
xchg
jbe
mov
mov
adcl
mov
inc
mov
test
and
nop
sub
enter
pop
mov
in
out
scas
bound
adc
roll
push
cmpsl
ror
sub
mov
nop
sti
cltd
inc
repz
not
jne
icebp
push
or
dec
adc
pop
cmp
loop
lock
sbb
icebp
mov
std
sub
xchg
fwait
mov
lea
jl
out
idivb
xor
inc
movsl
push
xchg
mov
sub
pop
scas
mov
rorb
cmp
fwait
dec
mov
lret
add
int
mov
pushf
cmp
out
or
addb
imul
dec
push
mov
fcmovnbe
sbb
mov
jns
std
fmull
xchg
mov
sbb
rol
test
inc
stc
mov
stos
mov
les
outsl
ljmp
inc
and
nop
pop
sbb
imul
scas
lods
pop
dec
outsb
xor
push
sbb
sbb
insb
out
and
inc
cmp
pushf
dec
pop
push
mov
dec
pop
add
dec
cmp
orb
cs
std
push
stos
rolb
lret
loopne
js
jno
insl
inc
dec
mov
jno
or
jnp
xor
cmpsl
std
lods
scas
stc
sarb
inc
data16
sbb
xchg
sbb
xor
rcr
sti
sbb
jl
adc
mov
mov
in
inc
pusha
xchg
pop
pop
and
jge
inc
insl
fnstcw
push
inc
mov
test
pop
jo
test
jae
or
adc
or
call
xor
pop
rcll
inc
mov
mov
scas
or
jle
inc
loope
pushf
cmpps
cli
sbb
movl
rclb
adc
mov
int3
push
mov
out
inc
mov
jnp
or
and
lcall
mov
icebp
aaa
bound
inc
into
out
cld
cmp
lock
shrl
in
xchg
cmp
and
sbb
fmul
pop
mull
inc
mov
inc
sub
arpl
jle
xor
roll
push
sbb
stos
mov
and
enter
bound
sub
push
and
cmpl
fsubrp
dec
push
pop
dec
mov
sti
cmpsb
jae
fsubrl
inc
movsl
pusha
loopne
push
addr16
cld
popf
xchg
dec
fucomp
sar
addr16
incl
sub
pushf
in
dec
stc
inc
inc
sub
sbb
out
push
icebp
fs
push
jb
sarl
pop
test
adc
bound
out
adc
and
call
popf
sub
adcl
outsb
ret
or
or
dec
or
cmp
dec
in
adc
pop
dec
popf
pop
xor
and
mov
jbe
loop
jmp
sbb
pop
jp
push
sbb
mov
shll
mov
mov
xlat
pop
jp
or
shl
sti
stos
clc
fsubr
sub
dec
sbb
lds
ret
mov
mov
xchg
xor
adc
mulb
cwtl
bound
dec
jne
call
arpl
pop
lret
dec
shrl
sbb
lret
sub
imul
mov
movsb
xor
je
cmp
jl
addr16
imul
jnp
jp
pop
jmp
push
pop
out
mov
mov
shrb
orl
pop
jb
jne
aad
fstl
mov
xchg
add
mov
addr16
xor
dec
mov
repz
mov
push
jge
insl
insb
xchg
sub
mov
arpl
adc
inc
cmpsb
inc
xorb
subb
dec
xor
adc
cmpl
push
mov
push
and
adc
hlt
fsubrl
loop
inc
push
fnstsw
sub
jbe
test
push
adc
sbb
sub
bound
pop
aam
bound
pop
xor
inc
jo
in
icebp
xor
mov
mov
xor
fwait
imul
lret
mov
dec
jae
stc
hlt
xor
nop
xchg
mov
push
aaa
fwait
xchg
dec
in
cmp
popl
mov
jle
mov
rolb
inc
dec
and
sti
sbb
inc
bound
arpl
outsl
popf
in
roll
jne
inc
push
pop
lods
xor
out
jb
push
outsb
fists
roll
adc
mov
stos
pop
cmpsl
or
loopne
jbe
loopne
sti
bound
mov
xor
popf
pop
and
mov
fdiv
add
mov
jle
add
dec
lret
ja
fstl
mov
call
push
push
sti
loop
dec
pop
out
es
cmp
dec
mov
clc
sub
repnz
nop
xor
sbb
or
addr16
mov
mov
xor
sub
arpl
adc
pop
pop
out
ret
addb
pop
push
mov
push
movsl
push
inc
mov
cmp
sbb
pusha
outsl
mov
cmp
add
aaa
mov
sbb
sbb
mov
mov
ljmp
pop
mov
mov
cmp
and
adc
pushf
jne
clc
or
fnstsw
push
sbb
xor
sbb
imulb
mov
push
test
mov
std
jno
fs
daa
leave
sbb
or
or
hlt
xor
popa
mov
mov
pusha
int3
ds
adcb
enter
outsl
clc
lods
xchg
push
cmp
insl
or
dec
stc
sbb
sbb
push
mov
mov
cmp
push
aaa
sub
add
clc
add
loope
pushf
inc
xchg
aam
stos
jg
jo
dec
fisubs
cltd
pop
popf
out
dec
test
not
mov
push
cli
jmp
mov
std
sub
mov
dec
pop
mov
xchg
fisubrl
sbb
push
out
xchg
je
xchg
insl
mov
bound
adc
mov
lss
es
cmpsl
adc
fxch
popa
popf
cmc
js
cld
pop
xchg
mov
ljmp
mov
rcr
jl
stos
pop
cwtl
xor
shrb
push
cmp
outsb
mov
loope
jbe
test
or
pop
test
imul
mov
mov
jle
outsb
aad
sub
or
incl
inc
clc
movsb
rcl
or
jmp
adc
pop
inc
jecxz
pushf
fbstp
xchg
mov
sub
cwtl
jmp
inc
pusha
and
mov
and
sbb
fisubrs
cmp
popa
stos
loopne
fists
jg
xchg
jae
dec
push
cld
cltd
xchg
cmp
scas
push
hlt
cmc
insl
adc
inc
adc
int
call
movb
and
sub
popa
out
stos
sub
xchg
adc
cmpsl
jb
dec
loopne
fcmovne
dec
orb
testb
fstl
das
out
sti
out
mov
in
mov
scas
push
sub
mov
nop
inc
je
add
mov
aad
les
jecxz
jecxz
stos
icebp
imul
pop
in
xchg
jecxz
call
hlt
mov
in
stc
mov
insl
es
les
movsb
add
jl
adc
xor
pmaxsw
rcrl
rcrl
cmp
cli
or
subl
adc
pop
mov
xchg
mov
imul
roll
aam
insl
hlt
push
stc
ficomps
jmp
lahf
dec
xor
inc
fmuls
test
or
fsubrp
sbb
bound
or
lods
test
mov
fisubl
insb
adc
xchg
mov
ret
into
adc
pop
sbb
push
and
call
pop
rolb
xchg
fimuls
sbb
cltd
sub
jle
dec
gs
pop
lret
xchg
mov
fstps
in
xchg
mov
dec
outsl
cmpsb
mov
push
jecxz
cmp
sahf
loop
std
call
or
das
or
xor
stos
mov
jo
incl
adc
fstps
cs
loopne
fisttpll
or
test
fstl
inc
mov
jne
insb
mov
inc
mov
scas
push
leave
nop
mov
or
insl
enter
adc
jg
jae
repz
cmp
xchg
ret
and
fs
mov
test
out
rcr
cmp
xor
bound
icebp
call
outsl
xor
and
int3
xchg
fbstp
cmp
xchg
inc
jo
es
jecxz
divb
imul
scas
outsb
jmp
jne
test
mov
xchg
add
push
jge
push
arpl
cs
roll
in
sbbb
in
inc
jmp
jmp
jp
jmp
inc
pop
push
cmp
xor
ficoms
cli
mov
nop
pop
sub
cmpsl
mov
and
mov
rorb
ficoml
pusha
pop
push
int
rolb
aad
mov
jnp
sbb
icebp
out
mov
mov
dec
ljmp
bnd
push
mov
clc
sub
rolb
xor
dec
adc
jne
addr16
fwait
mov
ljmp
ja
aas
testl
aas
addr16
xchg
or
outsb
or
add
movsb
or
add
ljmp
jnp
arpl
test
rcrl
outsb
mov
idivl
jmp
in
sub
push
icebp
inc
mov
cmp
sub
xor
ret
dec
repz
hlt
cmpl
cmp
hlt
sahf
push
sbb
jl
mov
outsb
mov
jecxz
int3
in
adc
pop
mov
test
stos
jg
fstpt
ds
mov
or
popa
sbb
stos
mov
push
xchg
movsb
adc
pusha
fmul
pop
push
divb
aas
pusha
cmc
test
xor
jo
pop
ss
mov
pop
xchg
and
add
rorl
xchg
and
cmp
ds
loope
adc
lret
or
or
cmp
push
mov
push
cmp
push
sbb
ficompl
cli
jnp
jb
pop
xchg
lea
stc
repz
add
dec
int3
jecxz
mov
lcall
fistpll
cmp
xor
in
lret
push
insl
push
jb
push
js
pushl
lahf
jno
xchg
fisubrs
and
or
push
test
loop
leave
aad
jno
adc
xor
push
inc
mov
jae
stc
xchg
lods
jae
mov
mov
push
mov
push
in
and
xchg
pop
mov
fnstsw
leave
rcrb
add
loope
lahf
clc
pop
and
mov
pop
adc
jnp
ret
sub
jg
pop
nop
mov
jge
imul
enter
inc
loopne
hlt
pop
jmp
call
outsb
in
mov
rcrb
or
mov
pusha
cli
xchg
test
loope
adc
cltd
es
cmpsb
fimuls
adc
test
inc
out
adc
stc
dec
addr16
daa
mov
icebp
dec
add
adc
sub
xor
mov
jns
ret
out
cwtl
aam
movsb
dec
xor
push
rorb
stos
or
add
jno
jb
or
dec
mov
dec
data16
lret
pop
or
sbb
mov
fwait
insl
fwait
test
add
out
inc
shl
outsb
iret
shll
cld
out
in
lock
push
nop
test
loop
jmp
mov
and
into
cmp
int3
pushf
jl
sub
leave
push
rep
or
mov
and
xchg
pop
mov
jno
inc
popa
lds
fiaddl
and
xchg
xchg
ljmp
jae
push
pop
ret
mov
fnstcw
xchg
enter
out
popf
dec
fldl
cmp
test
rorl
js
cltd
test
add
mov
cmp
inc
add
arpl
fs
xor
mov
loopne
enter
ficoms
std
scas
xchg
insb
out
pop
fadds
cmc
dec
push
ja
aas
loopne
outsl
pusha
stos
dec
cmpsl
inc
mov
adc
subb
std
xlat
out
or
repz
loop
addb
pop
leave
insb
into
push
pop
clc
leave
fs
sbb
repnz
cmp
call
pop
mov
sbb
ret
fbstp
std
cmp
mov
jle
int3
dec
aaa
fs
dec
inc
fildll
pop
sub
and
in
into
icebp
adc
jg
imul
cmpsb
add
adc
shrb
push
adc
xchg
ljmp
push
mov
fwait
shll
addb
das
cwtl
mov
push
mov
rol
sub
fldenv
xlat
aam
fwait
andb
dec
test
mov
es
inc
in
push
inc
cwtl
imul
in
lods
and
lods
int3
mov
ja
mov
mov
xchg
pop
ljmp
cli
shl
les
in
add
mov
xor
inc
fsubs
xlat
test
jb
addr16
ret
fmul
or
cmp
jns
add
pop
lret
dec
fnstcw
inc
outsb
sahf
xchg
aam
rclb
gs
sbb
cmp
add
adc
pop
pop
and
jo
jl
fcmovu
ja
inc
jbe
or
aad
dec
jge
rolb
aam
xor
daa
mov
add
mov
jg
adc
mov
movsl
inc
out
or
push
das
int
jns
jo
sub
mov
fsubs
mov
leave
ds
push
jle
fsubrl
add
sub
nop
cmpsl
sub
push
mov
repz
dec
fcoms
pop
or
adc
out
mov
xchg
mov
add
push
hlt
xor
cwtl
pop
sub
outsl
leave
jle
cmpsb
leave
roll
mov
arpl
inc
gs
sub
sub
xor
fsub
les
dec
seta
xor
mov
ret
je
and
clc
xchg
xor
es
pop
nop
xchg
cwtl
lret
lods
stos
jle
sub
and
sub
out
shrb
mov
mov
mov
andl
mov
lret
mov
and
mov
add
and
inc
sbb
pop
leave
mov
idivb
scas
push
cmp
or
mov
into
push
jp
out
jge
in
sbb
stc
xor
dec
movsl
shl
imul
addr16
jp
adc
sbb
mov
jg
add
lods
mov
adc
loop
dec
fucom
mov
mov
pop
loope
push
sbb
out
fldt
ret
inc
ss
test
xchg
xor
sbbl
jnp
push
mov
outsb
mov
ja
jno
ja
daa
mov
pop
cmpsl
push
add
xchg
xor
pop
popf
sub
in
mov
js
cmpb
or
xchg
dec
mov
inc
adcb
push
mov
ljmp
cld
jns
push
mov
xchg
fidivl
scas
movb
sub
fnstsw
or
test
sbb
xchg
mov
aas
js
ds
jne
push
js
pop
shll
shlb
push
pop
add
movsl
in
sbb
dec
ret
cmc
or
ret
enter
popf
lods
lock
test
jg
adc
ret
mov
jno
push
test
dec
test
mov
xlat
arpl
mov
add
xchg
jecxz
pusha
jbe
fbld
pop
mov
jbe
mov
cmp
out
ss
in
inc
xchg
mov
sbb
cwtl
ljmp
cmpsl
out
sub
and
add
adc
push
cmp
add
jg
pop
jecxz
xchg
jno
adc
add
sbb
adc
mov
push
xor
pop
or
sahf
into
add
jmp
fs
mov
mov
ja
push
mov
out
bound
sub
sbb
mov
fcmovbe
inc
cwtl
cmp
into
jge
fdivl
mov
movb
sub
cmp
mov
mov
mov
mov
ret
movsb
push
xchg
fmul
pop
dec
or
pop
cmp
inc
or
lods
test
dec
jno
jno
cs
mov
je
pop
stc
test
les
out
sti
shlb
inc
imul
imul
dec
mov
test
es
out
pop
xor
shl
xor
inc
cmc
or
aaa
xchg
mov
jg
adc
iret
insb
js
mov
or
cmpsl
jecxz
in
mov
push
hlt
scas
mov
push
inc
sbb
and
cmp
pop
and
xchg
inc
ror
jae
jno
jmp
rol
cltd
mov
cmp
and
push
sbb
jg
xchg
add
pop
xchg
add
arpl
hlt
iret
out
add
ret
push
adc
sahf
push
push
aaa
add
mov
add
inc
add
adc
cmovo
sub
mov
jnp
mov
aaa
and
fistl
fimuls
pop
and
pop
cmp
push
inc
imul
jl
xchg
pop
test
xchg
jecxz
push
sbb
movsb
mov
mov
cmp
xchg
and
dec
xor
sbb
jmp
cmp
lret
sbb
test
sub
ljmp
and
imul
sub
loop
sbb
sub
arpl
repnz
pushf
or
pusha
pusha
fmull
jecxz
jge
inc
push
jno
jae
insl
jl
jae
push
and
fldl
fsubp
and
inc
and
add
push
xchg
iret
idivl
jmp
mov
bound
lea
mov
loopne
and
mov
xchg
aam
aas
arpl
inc
lock
in
rcrl
jp
jo
out
popa
notl
mov
js
mov
pusha
movsb
hlt
cmp
in
jle
cwtl
scas
push
test
add
fs
lahf
and
jmp
pop
lock
pushf
jae
sbb
movhps
int3
push
adc
sbb
jp
hlt
pusha
ds
ret
mov
and
xor
arpl
mov
cmp
inc
fsubl
mov
or
addl
int
cmp
es
hlt
cld
sbb
cmpsb
aam
cli
loop
repz
and
jl
lret
sub
mov
pop
in
int
pop
jg
in
mov
in
fwait
aam
mulb
and
pop
outsl
lret
mov
sub
xlat
lret
fbld
ja
add
pop
xchg
jns
xchg
ljmp
outsl
out
push
fnstcw
mov
scas
mov
bound
orl
jbe
les
addb
jp
inc
push
sbb
es
inc
les
test
inc
inc
xor
xor
xchg
pop
or
subb
xor
loopne
imul
adc
aas
jge
add
mov
scas
xchg
popl
iret
out
into
hlt
mov
cltd
out
shlb
cmpsb
lea
pop
divl
push
icebp
das
lahf
rol
lcall
and
mov
mov
aad
addb
fidivs
add
mov
popa
lcall
lock
inc
sahf
fnsave
adc
arpl
mov
mov
stc
xchg
idivb
aas
and
cld
popa
sbb
mov
in
pushf
mov
sub
idivl
and
jecxz
mov
mov
outsb
aam
mov
loop
mov
lret
adc
movsb
cwtl
adc
dec
outsb
lea
loopne
int3
out
gs
pop
xchg
push
adc
xor
xchg
aad
xchg
sahf
dec
sub
sbb
cld
loop
loopne
mov
sti
sbb
out
pop
call
test
inc
mov
lret
cmp
xchg
pop
mov
or
ret
dec
jae
xor
and
addr16
or
into
jle
ret
sti
add
addr16
xor
das
shll
push
imul
jnp
adc
adc
pop
movsb
mov
mov
outsl
mov
xchg
imull
jo
loopne
push
jne
gs
jb
hlt
insb
movsl
lret
fwait
pop
lods
outsl
les
daa
pop
mov
lret
and
push
jmp
push
sahf
mov
and
fld
pop
inc
dec
push
enter
mov
and
mov
jae
repnz
mul
or
inc
or
in
ss
mov
in
pop
xchg
bound
cmp
or
dec
icebp
adc
les
sub
pusha
rclb
loope
cmp
out
out
push
cwtl
sub
out
insl
popa
add
inc
cld
sbb
fwait
jnp
addr16
bound
iret
adc
insb
mov
mov
cmp
std
sub
outsb
mov
adc
add
push
lret
xchg
outsb
pop
icebp
sti
repz
shlb
sbb
jbe
add
mov
add
mov
int
out
mov
push
push
jp
dec
add
movsl
adc
adc
push
pop
sub
aam
dec
push
addl
mov
push
dec
sub
insb
addr16
xchg
cltd
sbbl
clc
xchg
sbb
loope
enter
pop
dec
xor
fmul
or
imul
or
sarl
stos
pop
pushf
inc
mov
mov
cmpsl
out
negl
xor
add
mov
pop
in
je
pop
push
or
movsl
adc
sub
ljmp
adc
imul
xor
push
aaa
loope
cmp
cmp
jl
in
fnstenv
ret
dec
enter
mov
data16
popf
popf
ss
dec
int
leave
cmc
xlat
insl
addl
pop
cmpsb
mov
xor
mov
fldt
ret
pop
adc
sub
pop
test
cmp
pop
fldl
lahf
test
imulb
pop
jne
cmpsl
and
mov
or
mov
adc
sti
movsb
sbb
mov
stc
push
adc
fs
mov
adc
and
les
dec
sub
movsb
jecxz
insb
aam
jl
xchg
xchg
dec
dec
adc
cld
cltd
push
xchg
fs
ja
cmp
add
jmp
ja
stos
sbb
and
jmp
fwait
lock
jns
pushf
sbb
ret
pop
and
mov
sbb
fwait
sti
inc
ret
iret
and
aad
es
fdivrl
xchg
push
enter
pop
adc
and
xchg
fstp
mov
arpl
jne
inc
clc
pop
insb
test
cmp
pop
and
stos
adc
mov
mov
je
push
cmp
inc
mov
cld
dec
mov
mov
or
aam
pop
gs
ret
arpl
movsb
push
sbb
or
push
in
insb
push
mov
idivl
outsl
hlt
data16
mov
rcrb
in
cld
push
insb
or
into
aaa
pop
out
add
mov
jg
adc
shrb
dec
lahf
sub
mov
movsb
mov
inc
in
stc
ja
mov
lods
push
xor
mov
xor
jbe
outsl
xchg
rcll
mov
aas
push
leave
inc
dec
aas
cmp
fdiv
mov
push
pop
scas
xor
adcl
mov
out
mov
pusha
je
int
lods
xchg
mov
jl
outsb
add
mov
xor
fsincos
add
mov
jl
pushf
or
loopne
jno
push
bound
adc
outsb
mov
fs
sbb
jmp
jo
hlt
in
lods
jmp
dec
mov
dec
lock
in
add
mov
jl
xor
addl
jnp
xor
sbb
cmp
in
or
mov
dec
aaa
ja
lods
mov
mov
inc
insb
xchg
sub
add
insb
js
fs
pmullw
fisttpll
and
xchg
test
sub
shl
xor
dec
aas
or
in
push
sbb
mov
mov
push
fisttps
push
xor
out
enter
push
mov
nop
mov
mov
inc
bnd
push
jecxz
in
pop
push
out
cmp
or
out
dec
cmp
arpl
ljmp
xor
xchg
test
and
jg
aad
in
sbb
fmul
sbbl
sub
cmp
sbb
dec
ja
bound
cmpsl
arpl
fbld
out
dec
test
xor
imul
dec
jmp
std
mov
stos
enter
imul
out
pop
lds
jg
int3
sub
popa
pop
pop
dec
flds
xor
pop
je
push
hlt
sti
jns
cmp
pop
stos
popa
push
mov
xchg
xchg
mov
jae
sub
and
xchg
xchg
sub
sarl
sbb
and
test
stos
adc
ja
cmp
inc
and
cltd
fmuls
fimull
stos
pop
push
in
enter
push
xlat
xchg
add
sbb
cs
dec
or
cwtl
nop
add
out
mov
cmpl
cmp
scas
addr16
jecxz
loopne
jb
aad
lock
lret
int3
jecxz
arpl
or
fldenv
mov
dec
das
xor
mov
xchg
xchg
jae
data16
or
in
ljmp
dec
push
call
xchg
enter
mov
mov
rol
cmp
mov
or
add
nop
scas
cld
popa
outsl
movsl
aad
test
repnz
or
test
xchg
jmp
bts
xchg
sbb
aam
dec
orb
and
repz
int
push
pop
push
mov
sbb
inc
xor
rolb
inc
mov
popf
andl
movsb
inc
divb
add
and
lods
cmp
mov
pop
sub
fs
addr16
inc
inc
push
fimuls
imul
loope
cld
mov
or
mov
ret
and
push
rcl
sti
data16
icebp
sbb
dec
jne
icebp
jo
sub
dec
adc
pop
xor
shrb
mov
add
xor
xchg
xlat
add
cmp
inc
and
jb
jne
mov
sub
mov
sahf
mov
dec
or
mov
test
mov
mov
sahf
out
push
rcll
aaa
add
inc
mov
cmc
es
sub
xchg
adc
or
popf
and
add
mov
mov
aaa
xchg
inc
jl
cmpsl
xor
add
fldl
nop
loopne
add
xor
mov
data16
aam
pusha
fdiv
out
sahf
insb
sbb
call
inc
incl
jnp
sub
jp
and
dec
test
cli
cmp
pop
inc
push
mov
not
jge
inc
stos
pop
outsl
mov
xlat
pop
shlb
dec
sub
jl
add
xor
mov
test
xor
pop
in
jb
pusha
fwait
movsl
add
int3
dec
jmp
rcrb
data16
sbb
sub
pop
cmpsl
dec
adc
andl
in
and
and
or
ficoml
loop
ret
ds
push
inc
cltd
xor
test
mov
mov
pop
std
sbb
inc
pushf
mov
jl
dec
rorl
or
add
insb
or
fwait
out
cmp
testb
jmp
pusha
sub
inc
xchg
nop
into
fsts
rol
fsubp
and
sub
jo
sbb
sbb
mov
lret
test
jns
in
mov
mov
mov
fs
mov
mov
ret
cmpsl
adc
lds
push
js
inc
mov
pop
xor
sub
sub
lcall
dec
and
push
sub
mov
add
pushf
jnp
xchg
mov
arpl
cmc
les
pop
in
les
sub
in
sub
cld
jmp
push
pop
cmpl
sub
add
inc
loope
js
mov
xor
int3
mov
aam
stos
and
xor
iret
iret
aad
mov
jl
or
xor
pushfw
rcll
les
mov
dec
and
shll
stc
push
clc
pop
test
mov
inc
xchg
mov
xor
mov
and
mov
gs
rorb
jle
insb
sar
faddl
sbb
push
jnp
aaa
lret
pop
adc
pop
repnz
jne
les
filds
add
dec
stos
sbb
mov
mov
stc
dec
pop
add
push
lret
fisubl
lods
dec
dec
mov
jno
shll
fimuls
xor
cwtl
out
test
mov
inc
mov
jbe
xor
movsl
cmp
cs
fdiv
push
aaa
push
push
jp
xchg
jmp
sbb
ret
add
imul
and
push
nop
lcall
inc
and
out
jo
popa
int3
sub
nop
int3
and
cmp
xor
dec
test
inc
dec
cli
cmp
int3
cwtl
cltd
push
outsl
xlat
popf
outsb
inc
pop
fisttps
pop
add
js
xchg
mov
mov
in
sub
ljmp
cmpsb
jae
aas
push
sahf
ss
test
roll
mov
shll
jns
rorb
xchg
mov
testl
test
mov
scas
xor
xchg
repz
xor
xchg
xor
add
dec
test
iret
push
jne
push
int
arpl
mov
xchg
jno
rorb
push
sub
or
adc
lock
scas
jbe
iret
movsb
sub
dec
jge
lds
lock
aad
lods
jno,pn
sub
loopne
nop
inc
stos
add
gs
lcall
test
inc
sbb
dec
xchg
jno
jae
stos
jo
jbe
lret
inc
sub
add
jmp
scas
adc
clc
lea
sub
cmp
adc
aam
mov
ret
popf
mov
mov
js
shll
fwait
sti
loope
jg
out
leave
addr16
inc
add
xchg
cmp
xorb
jmp
or
pusha
aad
fmull
mov
mov
jmp
add
inc
cltd
imul
pop
cmp
mov
mov
shlb
xor
and
cli
shll
movsb
jl
loopne
aas
in
loope
in
add
cmpsb
inc
push
into
jg
dec
cmp
shrl
andl
rolb
push
int3
mov
data16
movsl
into
es
jnp
in
mov
fcomps
in
mov
lock
adc
in
stos
mov
in
dec
xchg
dec
push
inc
mov
jae
test
test
aas
in
arpl
test
adc
dec
imul
dec
pop
mov
fwait
int
xchg
clc
int3
cmovo
ss
lahf
andl
pop
into
or
ds
sub
pushf
add
lds
repnz
mov
cltd
fstpl
or
jge
sbbl
data16
popf
pop
movsl
pop
adc
mov
shrb
lret
shufps
je
jbe
jns
cmp
loope
mov
add
into
dec
mov
insl
jmp
loope
call
adc
into
cmp
data16
stos
or
xor
adc
mov
dec
xlat
jg
and
rcrb
sbb
xchg
ret
sarb
cmp
fists
inc
and
jge
gs
dec
push
xlat
fbstp
pushf
jle
mov
cs
adc
scas
out
xchg
std
jecxz
jo
mov
out
lret
aam
std
aas
xor
push
cmp
mov
or
mov
dec
jnp
sbb
mov
dec
jbe
push
hlt
push
cmp
xor
in
jecxz
repnz
pop
cmp
mov
out
jo
call
inc
sarb
dec
scas
incl
sub
jae
mov
jl
sbb
lods
int3
popa
mul
mov
cmp
xlat
sub
push
in
scas
repz
inc
and
mov
outsb
je
iret
jno
jnp
scas
jno
call
nop
push
jle
xor
pop
ljmp
mov
jnp
xor
adc
cld
mov
mov
call
adc
jg
push
push
enter
push
or
mov
xchg
rorb
xchg
imul
loope
push
mov
sub
movb
push
aaa
inc
addl
lock
lret
inc
popa
mov
inc
jg
outsl
ret
mov
stos
or
ficompl
pop
mov
push
fwait
xor
mov
cmp
ds
adc
pop
pop
popa
movsl
jne
xor
jecxz
inc
mov
push
in
enter
and
rorb
scas
leave
loope
add
cld
xchg
mov
mov
xchg
sub
cmp
js
xlat
fwait
pop
fwait
out
push
int3
shll
ljmp
jecxz
mov
push
push
rorb
jl
roll
pop
lahf
insb
pop
imul
sti
loop
jb
addr16
fsub
mov
mov
iret
or
adc
rorb
dec
idivl
popa
ja
add
cs
xchg
pusha
adc
scas
cmp
test
push
mov
sub
popf
jl
mov
cmp
xchg
inc
aam
pop
mov
jmp
lods
jl
or
sahf
xor
dec
cmp
lret
jbe
fmuls
jb
xchg
and
xchg
mov
loope
rcrb
ficompl
pop
repnz
mov
jb
jmp
test
je
pop
xchg
imul
jns
cwtl
xchg
mov
outsb
jg
push
addps
out
push
sti
shr
into
pop
dec
mov
xchg
dec
pop
or
or
dec
mov
pmaxub
xor
add
stos
push
fistl
and
xor
or
ljmp
add
test
mov
adc
mov
sub
insl
xchg
pop
or
in
ret
fwait
adc
mov
sahf
divl
sbb
repz
sbb
sti
outsl
mov
test
int3
mov
addb
fucomip
xor
data16
dec
repz
data16
bound
mov
lret
dec
in
fidivl
je
loopne
sbb
mov
push
sub
hlt
push
rep
jo
dec
outsb
mov
jp
jne
pop
js
inc
xchg
out
outsb
dec
push
push
cs
push
xchg
xorb
push
dec
stc
xchg
mov
in
sub
push
mov
or
mov
dec
lea
add
mov
mov
push
lock
or
pushf
test
jge
imul
dec
fisttpl
stos
xchg
std
popa
icebp
inc
and
cmp
les
je
jle
adc
ja
lea
dec
cmp
pop
mov
inc
xchg
cmc
inc
loop
stos
mov
jno
rorl
push
push
lods
mov
out
movsb
test
jge
ja
mov
mov
sbb
jbe
lcall
jecxz
std
jne
out
repz
shlb
push
repz
iret
jne
sbb
inc
mov
repnz
push
push
test
cltd
dec
divl
and
cmpsl
cli
inc
pop
loope
hlt
stc
fwait
jne
mov
xor
xor
hlt
or
xchg
test
icebp
adc
test
pop
sahf
dec
or
sbb
dec
xchg
popa
sbb
shlb
in
les
mov
jb
and
sbb
jns
mov
addr16
cmp
pminsw
shl
movsl
hlt
cmp
sbb
loope
and
dec
lds
mov
sar
or
aad
pop
repnz
cmp
jne
pop
test
cmc
daa
mov
jae
lret
and
icebp
inc
inc
lock
loopne
cmpsl
out
arpl
and
dec
lds
sub
or
ret
sub
cmp
ret
hlt
int
cld
jg
mov
sbb
sbb
jmp
mov
jno
rcll
xor
dec
rcrb
add
and
jo
pop
clc
inc
fwait
sub
inc
inc
xorl
inc
inc
out
jmp
dec
mov
fnsave
mov
jecxz
adc
xchg
push
leave
std
call
test
test
inc
loopne
sar
icebp
sbb
lods
and
jle
fdivs
mov
cmp
stc
repnz
lcall
lods
repnz
mov
bnd
fcmovnbe
in
fisttpl
push
inc
pop
adc
into
ljmp
ret
sbb
stos
jne
pop
add
sub
jae
push
imul
sar
lods
ficomps
lret
mov
sar
ss
xchg
jae
outsb
aaa
inc
mov
mov
xchg
cld
or
ja
push
stos
and
dec
into
insb
test
stos
xchg
mov
xchg
je
and
scas
adcl
mov
scas
and
or
mov
mov
cmc
daa
mov
stos
cs
jo
loope
pop
inc
dec
sbb
inc
inc
cmp
mov
add
adc
shll
rclb
sbb
pop
daa
mov
mov
jb
in
fstl
xchg
xlat
es
mov
pop
mov
call
es
sbb
mov
ficompl
cmp
stos
mov
push
add
jl
xchg
push
push
or
dec
dec
lods
movsb
pop
in
and
add
mov
mov
in
sub
leave
cmpsl
cmc
test
cs
jmp
lods
xchg
sar
mov
mov
push
rcrb
pop
cmpsl
add
bndstx
adc
daa
cmpsb
shrl
fmull
xor
cmp
repnz
mov
fbld
push
in
push
xchg
mov
or
cltd
sub
addb
jne
push
roll
jg
rorl
ljmp
jns
add
push
lcall
sub
mov
pushf
pop
sahf
cmp
mov
loope
lea
loope
int3
mov
jge
shll
mov
adc
mov
jge
mov
lods
adc
push
adc
subl
sbb
dec
jp
std
es
test
xchg
dec
cmp
xchg
lahf
lret
sub
jge
vpaddb
pop
mov
les
pop
in
xchg
rcrb
in
pop
mov
test
cmpsb
xor
popa
sbb
das
out
ret
pop
push
inc
adc
xchg
shll
xlat
stos
adc
sti
cltd
jg
fwait
adc
dec
or
sbb
ds
mov
push
nop
cs
add
xor
leave
or
imul
sub
out
inc
fwait
idivl
jne
or
int3
jnp
inc
lods
xlat
xchg
mov
mov
test
pop
in
and
pop
mov
stc
rorl
jmp
push
and
mov
jb
push
daa
orl
mov
mov
lahf
cmp
ret
xor
sbb
mov
sti
addr16
jb
inc
cmp
lds
scas
push
xchg
popa
inc
lret
shlb
idivl
out
test
lods
aad
add
sub
outsl
or
adc
stos
mov
out
sub
test
andb
xchg
jbe
mov
jecxz
lds
dec
ds
imul
mulb
sub
aas
sbb
sub
call
sub
push
lahf
sbb
dec
jmp
add
mov
cmp
aaa
cmp
or
mov
aad
arpl
stc
lret
or
dec
mov
imul
lcall
jge
fstpt
loop
pop
pop
roll
push
dec
inc
andb
subb
sbb
add
pop
jmp
iret
cld
jae
stos
clc
cld
ljmp
cld
lock
lret
cmp
popa
dec
and
and
add
sub
les
adc
lods
and
dec
nop
sub
subl
in
push
jnp
adc
and
shll
addr16
dec
jae
xchg
cld
xor
pop
movl
mov
mov
in
pop
dec
push
in
jnp
out
mov
pop
pop
mov
jb
out
sbbb
add
pop
imulb
ds
xor
subl
jne
adc
push
xchg
idivl
stc
or
add
out
jl
ret
xchg
aad
lahf
dec
lds
push
adc
push
ja
pop
lret
xchg
or
cmp
mov
push
sub
nop
lret
xchg
mov
mov
cmp
xchg
out
xor
sub
in
add
pop
in
sahf
sub
aas
mov
adc
jb
int
or
stc
dec
sub
in
insb
cld
insb
movsl
testl
jmp
or
scas
dec
or
outsb
movsl
mov
mov
scas
test
outsl
mov
dec
shlb
add
sub
ljmp
or
push
cmp
sub
imul
out
mov
stos
push
push
hlt
sbb
insl
cltd
jbe
in
sub
sub
jecxz
cmp
inc
push
adc
scas
mov
sub
mov
push
adc
shl
mov
pop
sbbl
cmp
pop
adc
test
shl
call
jecxz
mov
jbe
push
mov
std
or
add
sti
icebp
jle
pushf
jge
movsb
sbb
jmp
inc
cli
sub
mov
fdivs
and
popa
mov
fwait
add
das
pop
fcomps
xor
jno
mov
push
lods
ja
jg
je
mov
inc
sub
xor
int3
in
or
fbld
out
sbb
out
dec
mov
jg
ljmp
test
add
sbb
mov
jp
pop
outsl
icebp
pushf
dec
mov
or
and
clc
adc
inc
dec
mov
xchg
mov
mov
insb
push
cltd
sub
filds
cwtl
push
cld
push
xor
cmp
scas
mov
jg
insb
lcall
hlt
xchg
push
xlat
in
pop
sbbl
sbb
daa
lods
mov
sub
out
sub
xchg
push
mov
pop
fcompl
mov
pusha
rclb
icebp
es
call
jmp
cld
mov
push
push
ret
jp
lahf
jne
aaa
and
inc
jb
lret
fsubrs
test
icebp
add
rclb
mov
clc
push
and
xor
fs
jae
xor
pop
add
mov
dec
sbb
xchg
mov
sub
je
mov
mov
inc
push
xchg
cwtl
out
cmpb
in
in
daa
lahf
test
and
cmc
bound
movsl
popa
lea
out
xchg
xor
cmp
in
bound
mov
xchg
xchg
jnp
fstp
adc
pop
loopne
sti
test
addr16
dec
mov
pop
mov
into
lret
leave
inc
dec
mov
arpl
adc
enter
push
out
outsb
dec
xor
mov
push
stos
mov
icebp
pushf
nop
or
test
jo
in
ret
out
jle
push
pop
loop
adc
fwait
add
adc
shll
lcall
pop
xor
shll
repz
test
mov
leave
mov
sbb
jno
cld
lods
sbb
sub
jnp
mov
enter
sbb
les
fst
mov
mov
dec
xor
add
sub
imul
xor
push
sahf
inc
mov
xchg
push
sbb
lds
int
aas
les
xor
testb
mov
insl
mov
dec
popf
mov
cmp
scas
leave
ret
fs
sbb
leave
imul
ss
mov
jl
push
dec
sub
inc
sub
mov
lds
push
fimuls
dec
cmp
or
loop
dec
pushf
in
mov
ds
fwait
nop
mov
cmpsl
sbb
ljmp
repnz
ss
call
in
xor
movsl
xor
or
inc
aam
roll
mov
mov
dec
mov
xor
ljmp
mov
pushf
dec
xchg
dec
test
outsl
xchg
mov
cld
xchg
ds
push
shlb
pop
rcr
mov
cmp
jmp
pop
mov
iret
cmpb
inc
in
or
pop
push
rolb
mov
aad
xchg
icebp
or
pop
cmp
adc
fwait
js
or
leave
sub
aas
push
push
pop
xchg
scas
or
dec
xchg
pop
cmpsb
outsl
aas
gs
gs
mov
sbb
jno
dec
cmp
loop
idivl
xchg
gs
mov
adc
rcrb
loopne
jl
sbb
add
clc
and
lahf
ljmp
fists
notl
cmpsl
push
cmp
lret
out
out
dec
movsb
mov
mov
ds
test
cli
mov
lods
cli
dec
out
push
or
dec
inc
xor
push
test
mov
ror
inc
rcll
ja
mov
sbb
lret
fwait
jge
pop
test
cmp
mov
pop
inc
pushf
loopne
lea
pop
jne
jle
fstpt
sub
sub
fs
popf
or
cmpsl
xlat
test
mov
hlt
sbb
push
and
add
pop
sub
push
sbb
lock
icebp
sti
rclb
sub
jl
out
pop
out
lahf
stc
arpl
fisubl
mov
fcmovnb
and
stos
cmpb
stc
jae
xchg
daa
sub
mov
sahf
inc
adc
adc
push
cmp
shrl
xchg
push
das
negb
xchg
jno
dec
mov
fs
pop
out
addb
ja
int3
arpl
mov
adc
outsl
jns
arpl
adc
pop
push
or
mov
fists
std
cmp
arpl
add
loopne
loop
fisubl
mov
fnsave
xchg
ja
idivl
add
fimull
sti
push
sub
lods
hlt
int3
add
dec
push
adc
pop
dec
mov
rcll
jecxz
ret
je
fldenv
xor
xor
push
mov
insl
cmp
jno
test
ror
enter
dec
leave
pop
jno
sbb
mov
cmp
jge
mulb
daa
aaa
rcl
mov
vmread
mov
enter
sbb
cld
mov
outsl
push
adc
adc
xlat
xchg
sub
test
or
pop
stc
es
jge
imul
dec
outsb
sub
ret
jbe
jle
sub
rcrb
clc
adcb
daa
in
stc
out
inc
leave
in
ficompl
ds
iret
push
cmpsl
mov
cmp
add
daa
and
aas
popf
dec
pop
sbb
jmp
dec
sub
push
outsb
fadd
push
fmulp
xor
fs
xlat
enter
adc
sub
stos
fcomps
and
mov
lret
inc
in
dec
dec
jnp
faddl
ret
fsubrl
lret
mov
cmpsb
ret
sbb
mov
mov
int
pop
arpl
and
cld
jne
popf
jmp
fstps
stos
adc
sahf
ret
cmp
add
pop
push
sti
ret
xchg
daa
iret
and
pop
outsb
mov
pop
nop
daa
push
lcall
sub
faddl
add
test
out
mov
jno
subb
xchg
jb
jb
xchg
adc
mov
mov
jecxz
les
decl
inc
into
jb
dec
xor
xchg
and
sbb
mov
cmp
jg
cltd
cmc
in
test
push
sbb
jae
sbb
popa
adc
inc
jns
es
push
pop
dec
or
pop
push
and
and
nop
es
icebp
ror
leave
cs
add
loop
jnp
icebp
inc
lock
or
mov
test
push
ret
mov
ljmp
js
cli
stos
stos
dec
in
pusha
add
xor
xchg
test
into
adc
ret
hlt
das
jmp
call
fs
inc
cmp
adc
sbb
arpl
test
jecxz
repnz
pop
jmp
inc
cwtl
pusha
cltd
in
fs
xchg
mov
sub
lret
xchg
inc
add
pop
add
das
shl
leave
out
pop
insb
xchg
scas
stc
mov
jno
push
xor
mov
outsb
push
pop
insb
or
or
adcb
push
sbb
xchg
fldlg2
iret
stos
test
adc
pop
xor
cmp
mov
mov
lods
lret
xchg
jno
daa
xchg
ret
popf
sarl
mov
push
or
stos
cmp
xchg
xor
mov
sub
jecxz
fwait
addr16
ljmp
sbb
popa
jbe
mov
inc
push
dec
sub
int
jle
cld
mov
imul
sub
out
loope
mov
ss
pop
lcall
xchg
test
push
xchg
dec
cmpl
cltd
mov
aam
out
inc
rorl
lods
dec
adc
ret
das
mov
xchg
jl
repz
xor
fdivs
jecxz
fidivrl
ja
sar
jo
mov
sbb
dec
sub
scas
and
popf
fadds
adc
push
repnz
push
push
or
adc
jne
lret
xchg
and
pop
mov
jnp
das
inc
cmpsb
xor
in
fmulp
add
test
adc
sti
pop
or
sahf
test
pop
push
and
or
jl
mov
mov
pushf
arpl
xor
push
mov
xchg
inc
fsubrs
lds
int3
push
push
test
iret
pop
std
xchg
lea
mov
scas
jmp
es
sarl
push
xlat
daa
stos
sub
push
call
sub
push
push
add
pop
cmp
jge
sub
ja
xlat
jnp
add
mov
jbe
gs
movsb
imul
hlt
sbb
inc
std
hlt
jmp
mov
and
xchg
add
scas
pop
push
lods
scas
jle
jl
aas
nop
sbb
cmp
ds
mov
cmpsb
andl
call
icebp
or
leave
xchg
mov
mov
mov
dec
stos
jp
lret
pop
outsb
inc
outsl
sbbb
jnp
popa
inc
xchg
repz
xor
jne
pusha
mov
mov
nop
or
pop
push
xor
xor
jae
push
std
enter
and
dec
cltd
jge
test
fldcw
sub
orl
mov
insl
lock
fsubrp
ds
xchg
inc
sub
dec
iret
pop
aam
lahf
mov
cmp
cmpsb
mov
in
loop
in
xchg
sbb
push
inc
fsubs
or
push
cmp
nopl
ret
mov
add
enter
pop
pop
jg
cmp
sarb
xor
pop
mov
ljmp
push
js
jns
mov
iret
lcall
mov
xor
xchg
mov
das
mov
out
dec
je
sahf
fs
sub
cmpsl
inc
mov
lds
shr
and
data16
es
das
cmp
repz
or
lcall
enter
jne
cmp
or
repnz
scas
or
and
or
fwait
dec
dec
loope
xchg
or
add
mov
and
addr16
insb
mov
sub
and
add
pushf
dec
popf
arpl
xlat
xchg
incl
pop
fxch
or
out
pop
and
nop
daa
or
cmp
ss
leave
push
mov
into
xor
inc
scas
push
cmc
pop
dec
xor
xchg
sub
icebp
ficoms
sub
dec
ss
adc
xchg
push
cmc
rcrb
add
adc
in
orl
aas
jl
in
adc
sbb
loop
ret
ret
cmpsb
mov
cmc
dec
gs
cmp
jge
xchg
cmp
test
push
mov
cmp
mov
push
push
lahf
clc
inc
inc
fsts
in
popf
mov
adc
sahf
nop
and
test
sub
test
aam
or
cwtl
orb
and
adcl
movsb
xchg
xchg
mov
inc
adc
add
jne
idiv
sub
sbbl
shlb
std
cwtl
sarb
or
ret
mov
jp
ja
les
movsb
sub
xorb
lcall
je
call
fstpl
cmp
ja
lock
mov
repz
dec
dec
push
inc
dec
add
dec
pop
cld
add
mov
dec
ficomps
dec
ret
outsb
out
sbb
bound
add
out
lret
rol
popa
jle
xchg
movsb
jne
pop
loop
orb
hlt
mov
add
lods
fists
mov
push
ja
leave
adc
add
or
cmp
and
xchg
add
add
cmp
or
xor
or
or
ret
clc
lcall
stc
enter
inc
std
jecxz
inc
call
lahf
mov
ja
das
loop
scas
andb
jnp
push
add
ret
or
ljmp
lods
jo
ret
aam
test
pop
pop
mov
mov
xchg
sub
out
stos
out
lods
pusha
cwtl
xor
sub
lcall
das
hlt
pop
dec
mov
shlb
sbb
xlat
loop
mov
arpl
icebp
int3
mov
xchg
lock
mov
out
mov
adcb
ja
iret
cld
test
lock
and
jno
int
lcall
sahf
les
nop
jmp
ds
stos
pop
fcoms
clc
push
mov
sbb
and
out
push
mov
xor
add
addl
imul
xchg
cld
out
js
push
push
dec
cli
pop
loop
cld
arpl
mov
sbb
mov
push
jmp
fcmovnbe
xor
mov
fwait
xchg
fdecstp
pop
add
loopne
fisttpll
add
mov
jne
jl
inc
fucomi
mov
lds
pop
add
adc
pop
shlb
jle
sub
daa
mov
sahf
mov
data16
lock
add
insl
inc
xor
leave
sub
bound
jns
pop
lock
mov
shlb
sbb
arpl
or
xchg
out
pop
pop
fucomp
lods
xchg
test
test
sub
sub
repnz
int
cmpl
ds
and
xor
test
dec
xor
adc
stos
in
jp
bound
sub
outsb
add
sbb
xchg
mov
xor
rcl
inc
sub
cmp
je
rolb
iret
push
jmp
inc
jb
sub
pop
cli
dec
inc
cmpsb
xor
ret
mov
jae,pn
leave
cmp
push
and
sahf
or
fisubl
push
cld
std
imul
daa
xor
sbbl
inc
xor
jle
clc
std
lahf
or
mov
mov
insb
int
fnstenv
lods
mov
sbb
sarl
xor
shll
mov
xor
ss
sahf
aaa
push
in
dec
or
andl
cwtl
sub
jmp
insl
cmpsb
mov
inc
sbb
sbb
add
push
inc
or
dec
int
shrb
mov
int3
push
push
jno
xchg
cmc
jns
aaa
cmp
adc
fs
sbb
dec
dec
adc
add
cwtl
repnz
adc
xor
fistps
jg
and
nop
or
aad
pusha
movl
jecxz
lahf
mov
shl
jecxz
outsb
rol
pushf
test
ja
cmpsb
or
scas
mov
jecxz
inc
or
mov
lea
adc
test
ret
rorl
hlt
xchg
or
mov
cmp
inc
popf
inc
add
inc
sbb
push
sbb
cmpsb
stos
rcll
ljmp
stos
lods
xchg
repnz
and
clc
cmp
xchg
fmulp
je
jno
faddl
push
loopne
jle
or
pop
xlat
dec
out
out
lahf
shll
scas
jo
jnp
js
jcxz
js
add
jg
movsb
xchg
xlat
xor
cli
addr16
mov
mov
les
sbb
out
mov
inc
mov
push
pop
mov
js
sub
jmp
mov
mov
adc
jbe
adc
mov
dec
aam
xor
test
inc
sbb
and
or
sbbb
cmp
xchg
bound
test
cli
sub
fwait
test
loope
cld
sbb
jns
mov
aad
outsb
fldt
and
and
in
sub
mov
xchg
in
loop
dec
cltd
fcmovne
push
dec
imul
scas
mov
adc
cmp
sbb
cmp
out
fstps
jp
cmpsl
scas
sub
sbb
adc
jno
shll
xchg
aaa
in
push
push
adc
ja
push
insl
jno
adc
add
sbb
inc
out
mov
inc
or
push
jecxz
mov
mov
xchg
pop
dec
nop
sub
lock
pop
pop
mov
push
stc
enter
mov
cmpl
div
in
sbb
loopne
rcrb
push
mov
cmpsl
jo
mul
rcll
inc
clc
popa
out
and
ja
test
jne
add
mov
mov
call
lcall
inc
cld
incl
cltd
dec
movsb
xchg
in
push
push
inc
scas
into
add
insb
jmp
pop
stos
or
pop
jmp
insb
popl
inc
mov
jo
fcmovu
push
pop
sub
xchg
pop
mov
cmpsb
jns
mul
pop
int
jecxz
sbb
xchg
push
inc
push
adc
subl
jbe
sbb
int3
jnp
ficoms
xlat
mov
pop
cmc
lds
push
add
cli
leavew
sbb
stos
xor
jl
mov
dec
adc
lds
daa
imul
adc
ret
sbb
push
push
js
fsubrl
les
push
int3
cmpsl
shll
pusha
cli
cltd
add
dec
stos
push
pop
pop
cmp
mov
dec
mov
sub
dec
sub
jnp
sub
outsl
cld
sbbb
or
inc
xchg
into
fcoms
sarb
popa
xlat
inc
mov
sbb
cs
aad
mov
jg
loopne
push
cmp
mov
faddl
and
aad
dec
and
and
jbe
adc
jb
es
xor
pop
mov
pop
mov
inc
arpl
int3
cmp
jo
ljmp
xchg
inc
push
loopne
push
mov
and
dec
mov
push
and
or
mov
icebp
je
push
call
fidivrl
rorb
fwait
inc
inc
pop
mov
fimuls
mov
add
sub
imul
pop
outsb
and
sbb
push
jo
mov
test
pop
cltd
enter
xor
je
popf
sub
cwtl
adc
sbbl
ret
filds
lret
mov
push
mov
ljmp
cmpsb
hlt
outsl
ret
jne
stos
jle
ljmp
cmpsb
mov
lahf
shrb
aad
and
or
jbe
xchg
lret
into
in
mov
sti
call
jg
push
hlt
dec
push
mov
dec
outsl
loop
pop
sarl
mov
rorb
xor
sbb
movsl
push
lahf
call
push
iret
push
mov
jmp
ljmp
add
cmp
clc
and
je
cmp
jg
jp
jmp
lret
mov
ja
pop
test
dec
ja
lret
sbbb
and
fisubrs
pusha
hlt
ret
test
sub
lidtl
stos
sbb
loopne
push
push
cmc
xorl
cmpsb
adc
add
mov
dec
jae
mov
addr16
add
inc
jmp
scas
sbb
sbb
mov
mov
movsl
rcrl
jb
mov
push
out
push
fstl
xor
dec
sbb
popf
inc
adc
or
fwait
lahf
fs
mov
xchg
mov
push
inc
push
pop
inc
xor
and
adc
fisubrl
pop
mov
sti
notb
stc
push
enter
inc
jno
xor
push
into
popa
out
jecxz
test
aam
push
sbb
cmp
jns
je
nop
pop
lds
divb
mov
cmp
add
jmp
jae
movsb
loope
leave
or
sbb
repnz
or
xor
sbb
mov
xchg
mov
xor
jbe
jbe
in
aad
jb
pop
popf
mov
and
imul
in
jecxz
sub
hlt
cmp
or
push
or
js
jo
loope
stos
cwtl
jno
pop
xor
xlat
sahf
je
addr16
and
pop
popf
loope
in
fdivrp
cmp
jle
adc
aad
xchg
mov
jge
movsb
sub
xlat
push
xchg
jp
mov
and
roll
jb
mov
in
cli
insb
mov
ret
mov
inc
fdivrs
fbstp
sbb
sbb
or
js
add
out
out
xchg
mov
cld
push
mov
lods
sti
inc
movsb
stos
add
sbb
add
cmc
aaa
mov
aam
aad
stos
mov
cltd
cmpl
xchg
xor
faddp
dec
fldl
fisubrs
pop
rcl
in
jbe
mov
sbb
and
xor
addl
dec
daa
shlb
and
enter
adc
out
push
jo
nop
rol
sbb
or
jecxz
cmp
xchg
xchg
in
push
xchg
popa
sbb
cmc
push
int
test
fidivs
xchg
outsb
loopne
call
outsb
cli
inc
mov
mov
and
js
sbb
cltd
repnz
pop
xor
xchg
fnsave
test
dec
shl
cltd
insb
iret
sub
lods
pop
cld
xor
fcoml
xchg
mov
push
shll
subl
mov
push
in
imul
rclb
mov
xor
xor
mov
fs
cld
jle
outsl
sub
lods
insb
ljmp
dec
aad
mov
test
int
sbb
repnz
fnstsw
push
and
xor
das
mov
xor
add
out
xchg
add
cmc
and
inc
pop
fcmove
mov
in
in
iret
je
cmp
dec
stos
shlb
jmp
mov
cltd
push
sub
jle
insl
ret
xor
pop
mov
pop
icebp
xor
dec
mov
ficoms
std
mov
inc
insl
je
shlb
cmp
std
scas
cmp
add
out
pop
test
mov
ja
rolb
jnp
adc
mov
fists
adc
aaa
repnz
sbb
int
mov
pop
rcll
arpl
mov
jg
add
push
fldcw
std
mov
lock
or
iret
mov
insl
scas
ret
orb
aas
jmp
sbb
push
push
fsubrs
addr16
sahf
loopne
sub
push
pushf
sbb
mov
pop
xchg
inc
sbb
shl
xor
inc
lret
dec
xor
jle
lahf
jb
xchg
adc
jbe
pop
or
pop
cmc
fsubrs
sub
mov
stc
jg
es
xor
adc
cmp
cmp
loopne
sbb
add
xchg
enter
or
into
xchg
in
cmp
jp
jno
lahf
test
addl
cli
add
add
pop
fstps
pop
scas
cwtl
mov
aad
aam
stos
aad
lds
jbe
inc
dec
inc
push
pop
daa
sahf
movsl
cltd
lret
cwtl
stos
pop
xor
stos
xchg
xor
cmpsb
push
cmp
xor
add
jae
sbb
xor
sbb
inc
or
mov
inc
xchg
adc
cmpl
into
pop
inc
sub
fisubrl
xor
in
cmp
stos
js
sbb
jo
add
clc
cltd
add
shl
xor
push
mov
std
movl
fcomps
xorb
sub
pop
pop
push
sub
adc
mov
pop
pushf
cmp
pop
pop
inc
mov
push
lea
paddd
and
push
jbe
pop
dec
fldl
sti
test
sbb
lods
and
xor
and
xchg
into
in
and
pop
dec
gs
in
es
xchg
scas
sti
and
xchg
fldln2
mov
jb
jb
pop
and
into
mov
mov
or
mov
xor
jl
or
mov
cmp
test
jbe
push
aad
mov
cmpsl
rcl
mov
cld
cmc
add
jo
ss
adc
sarl
mov
iret
sub
in
sbbb
or
push
scas
push
xchg
and
push
lret
add
mov
jnp
or
jo
aad
dec
sbb
es
movsb
rcll
es
rep
xlat
lea
mov
repnz
add
leave
adc
movsb
aam
dec
sarl
fucom
sbbb
mov
pop
ret
cmp
iret
pusha
push
cltd
lcall
cld
lea
push
and
xor
or
fnsave
sub
cli
lret
insb
cld
outsb
nop
push
xchg
pop
inc
rcll
add
sub
rcrl
mov
and
jo
xor
dec
inc
pop
cmp
xchg
out
nop
ss
cmp
lds
mov
inc
xor
shlb
fyl2xp1
imul
lock
mov
loop
ja
and
mov
push
aas
xor
in
fdivrl
ror
lods
mov
out
sub
sbb
mov
andb
cmp
push
pop
dec
add
add
adc
insl
andb
sbb
je
loope
pushf
add
xchg
or
lods
dec
aam
test
push
xchg
cmp
insl
ret
lea
fdivl
mov
xchg
cwtl
insl
dec
test
add
pop
add
fnstenv
push
pop
jbe
arpl
add
cmp
adc
lret
shrl
dec
cmp
scas
inc
sbb
xchg
sub
pushf
nop
inc
fadds
out
xor
inc
daa
push
cmp
pop
and
cli
xor
xchg
ljmp
pusha
adc
inc
jecxz
xchg
mov
mov
icebp
sub
in
jbe
pop
xchg
clc
jl
pop
xchg
adc
out
ds
roll
adc
xchg
stos
mov
movsl
daa
mov
std
add
xor
in
jne
and
subb
xor
xorb
or
and
ss
fsubs
jae
les
pop
aad
xor
xor
sub
clc
mov
xchg
xlat
xchg
or
fucomip
sbb
orb
lods
push
mov
psadbw
call
sbb
addr16
popa
or
fdivrl
jmp
scas
sub
add
iret
xchg
mov
mov
or
and
push
lods
sbb
or
mov
stos
adc
inc
jb
sub
loope
outsb
pop
movsb
mov
push
dec
clc
mov
inc
stos
push
and
es
sub
lret
push
mov
xchg
sub
clc
jnp
pop
gs
scas
scas
push
aad
jecxz
jne
fisttpl
mov
pop
push
pop
cmp
lock
jle
and
sbb
pusha
jge
sbb
hlt
xchg
dec
je
cmp
lret
xchg
inc
xorb
jne
or
lret
sti
inc
movl
or
cmp
movsl
or
mov
movsl
pop
xlat
sub
and
roll
fldl
or
lahf
push
das
sub
cli
xor
or
imul
test
movsb
insl
mov
xchg
outsl
lahf
adc
insl
push
sbb
xchg
sbb
lcall
movsl
mov
cwtl
mov
cmc
cs
leave
inc
xchg
sub
mov
nop
and
mov
sbb
mov
and
and
subb
lret
popf
mov
mov
js
push
sbb
in
and
sahf
mov
pop
cmp
ss
rclb
push
and
sbb
or
outsl
jae
pop
int3
add
jmp
aam
or
outsb
xchg
pop
sub
or
inc
imull
popa
push
mov
push
inc
scas
loop
mov
xchg
scas
int3
scas
loop
inc
movsl
in
jae
cld
sbb
mov
push
into
dec
loope
mov
cwtl
sbb
dec
and
mov
add
mov
and
mov
sahf
fnstenv
int3
sub
mov
insb
inc
sbb
dec
icebp
out
decb
insl
loopne
xor
xor
jbe
nop
inc
mov
or
loop
movsb
xchg
add
and
or
popa
xchg
addl
outsl
test
loopne
or
push
mov
leave
fisttpll
shr
sbb
xor
cwtl
aas
pop
int
jge
std
sarl
adc
into
dec
xchg
jp
add
add
aas
lcall
insl
loope
imul
shl
jge
sbb
jp
gs
pop
add
pcmpeqb
mov
std
adc
dec
cmp
adc
mov
mov
push
insl
inc
mov
jecxz
inc
push
sub
xor
mov
cmpsb
aaa
test
inc
pop
int3
addr16
add
nop
xchg
xchg
test
sbb
and
fwait
mov
jmp
lcall
mov
push
adc
push
inc
imul
and
iret
sub
mov
dec
out
jge
jnp
fwait
jcxz
shlb
out
fisubrs
mov
leave
inc
scas
adc
cltd
pop
jno
enter
sub
movsl
xchg
jecxz
add
push
daa
or
popa
mov
jb
bound
mov
loop
pop
cmp
repz
add
inc
xchg
or
dec
push
dec
rol
hlt
mov
xor
jns
push
dec
xor
aaa
outsl
aam
subb
daa
daa
bnd
je
add
inc
nop
out
jecxz
test
xor
jge
xor
push
aam
out
mov
sub
mov
dec
adc
jg
push
adc
adc
sub
push
xchg
arpl
add
or
enter
pop
mov
add
cmp
movsb
inc
imul
out
adc
jae
dec
sti
fistps
inc
push
add
mov
mov
xlat
addb
int
hlt
adc
cs
shrb
mov
mov
add
mov
jmp
jge
inc
inc
test
pop
xchg
cmpsl
daa
lea
int3
add
inc
and
xchg
jp
mov
test
sub
cwtl
adc
in
orb
repnz
loopne
mov
adc
mov
or
cmp
mulb
loope
dec
repnz
popf
mov
xchg
sub
jmp
inc
fisubrl
pop
cmp
add
pop
fimull
and
jne
push
push
rol
scas
in
or
adcb
pop
fadd
sbb
inc
jno
fwait
jno
xorl
decl
test
mov
mov
jae
pushf
fsubp
jle
sub
cld
pop
add
inc
addr16
out
add
mov
aad
inc
addl
push
jns
push
push
add
stc
std
adc
push
outsl
mov
lock
out
jns
daa
inc
hlt
xchg
ss
mov
outsl
or
out
lock
dec
shlb
mov
aam
incb
add
sbb
leave
sub
jae
or
or
iret
jo
xor
cli
fidivrs
mov
mov
sbb
stc
mov
stc
in
mov
fdiv
ret
pop
mov
mov
cmp
fwait
lret
gs
add
pop
mov
jae
outsb
xchg
inc
fimull
pop
clc
rcl
cmp
pop
mov
es
fsubr
sahf
mov
jp
and
pop
cmp
lcall
shll
mov
cli
or
push
and
sbb
test
push
data16
pcmpgtb
cmpb
clc
push
ljmp
sbbb
push
scas
push
jnp
jae
or
mov
xor
out
xchg
cmpsl
js
sub
int
cs
cbtw
adc
and
xchg
pop
xchg
sti
add
mov
sti
hlt
mov
repnz
fnstenv
and
jns
leave
push
jb
inc
lea
push
and
cwtl
pop
fs
movsl
dec
add
out
test
xor
test
inc
mov
fcmovb
mov
aad
sub
inc
stos
cmp
mov
fistl
jbe
push
stc
inc
sbb
inc
adcb
xor
xchg
jle
daa
jp
iret
ds
jmp
jmp
clc
xor
cmc
loope
popf
ficompl
data16
arpl
pop
mov
push
push
and
and
addr16
jg
sub
dec
lock
xchg
roll
dec
adc
xchg
dec
xchg
add
xchg
mov
sbb
xor
mov
push
rorl
sub
mov
cmc
dec
testb
iret
js
xchg
xor
xor
adc
addb
fbstp
fnsave
sbb
outsb
cmp
sbb
test
je
decb
cs
nop
or
nop
mov
xor
aas
mov
sbb
js
jbe
stc
movsl
jne
data16
cmp
outsb
cmp
pop
mov
lods
cmpsl
aam
cmp
sub
sbb
test
mov
push
xchg
aam
xchg
adc
cmp
es
and
fxam
cwtl
in
mov
jns
sbb
in
insl
movsb
xchg
ret
push
ret
mov
cli
jno
fdivrl
mov
push
andb
bound
adc
dec
push
mov
imul
xor
inc
hlt
call
aad
in
scas
push
mov
icebp
adc
mov
bound
rcll
shl
push
xchg
shl
sub
xor
movsl
out
movsl
mov
mov
lret
and
push
lret
and
sahf
jecxz
into
sub
mov
fstl
cmc
adc
addr16
ja
out
push
sub
cli
push
mov
dec
inc
mov
sbb
addr16
lods
das
inc
jmp
push
mov
mov
in
repnz
mov
addr16
mov
dec
into
mov
sub
jmp
fstpt
sbb
ret
outsl
inc
adc
xorl
cmp
mov
mov
shlb
divb
scas
stos
mov
fadds
push
jmp
push
mov
in
es
push
xchg
inc
cmpsb
clc
adc
test
data16
loopne
inc
in
pop
or
sub
and
cmpsl
cwtl
and
and
iret
mov
in
movsl
scas
mov
xchg
inc
out
sbb
jb
inc
adc
mov
dec
aad
pop
cwtl
dec
add
jge
das
mov
mov
push
cli
fwait
jne
imul
dec
adc
pop
or
xor
mov
jge
call
sub
arpl
arpl
xor
mov
aaa
push
lds
arpl
sbb
xlat
jno
mov
test
mov
movsl
pop
mov
imul
mov
cmp
mov
popf
fimuls
jo
and
outsl
sbb
pop
lds
leave
pop
mov
les
mov
fisttpll
ja
mov
add
xlat
idiv
mov
adc
xor
leave
repnz
mov
or
aam
shrl
test
add
in
mov
sub
mov
pop
das
sbb
out
or
cmp
ss
push
dec
je
divb
mov
or
cmc
push
cli
jle
jne
push
adc
dec
sahf
fsubr
cmp
pop
adc
xlat
loop
sub
fsubrp
andb
test
mov
outsb
lret
cmp
rcrl
cmp
jbe
xchg
flds
and
in
iret
aad
mov
lods
xchg
ss
lret
insl
pop
addr16
lock
ficompl
in
cmp
push
fistpl
sbb
add
cmpsb
xor
imul
and
adc
dec
scas
jmp
add
pusha
and
addr16
bound
cwtl
lods
push
and
cs
jo
pop
lods
cli
jne
in
dec
fsubr
xor
int
sar
mov
iret
in
ret
jg
xor
jle
in
sub
popl
hlt
jbe
lahf
inc
jo
leave
pop
mov
inc
int3
stos
sub
jl
lcall
js
imul
subb
push
xchg
jl
jb
mov
mov
scas
movsl
mov
xor
xor
jl
xchg
xchg
imul
xor
mov
cld
push
inc
or
repz
jmp
repnz
mov
dec
es
dec
imul
mov
jecxz
cmp
cli
inc
sbb
push
push
mov
pop
jmp
jno
cli
frstor
sti
aad
inc
xchg
sub
pop
fadd
sub
xchg
jl
les
ds
sarb
lock
adc
mov
dec
rcrl
adc
std
aas
xchg
mov
rcl
insl
cli
fldcw
dec
popa
inc
int3
fcomip
leave
adc
fisttpl
orb
mov
test
adc
loop
push
dec
pop
cld
adc
in
jge
mov
imul
movsb
pop
xchg
sub
sti
pop
mov
add
outsb
lret
mov
pop
pop
xchg
aas
xor
jl
fbld
clc
lret
push
xchg
lret
push
add
mov
int3
and
repz
jle
loopne
sbb
push
cmp
imul
jns
mov
push
sbb
enter
ljmp
push
outsb
mov
mov
into
cmpsl
push
sahf
dec
and
mov
mov
mov
mov
dec
repnz
push
or
mov
sbb
das
in
dec
lds
mov
mov
ror
pop
outsl
jg
mov
jecxz
mov
rorb
cmp
jl
inc
testb
fsubr
adc
adc
cmp
cmp
movsb
stos
pop
mov
clc
sub
cmp
nop
sub
push
jp
repz
add
mov
sbb
mov
mov
mov
lcall
inc
and
lods
push
test
and
push
adc
push
sub
aam
in
cmp
cmp
jns
xor
call
scas
xchg
mov
dec
clc
dec
push
movsb
dec
xor
dec
sub
aas
roll
aam
mov
shlb
rcl
jo
hlt
lods
dec
cmp
mov
lods
or
pop
loop
dec
into
lods
pop
fnstcw
xchg
mov
xor
xor
dec
mov
in
sbb
xlat
ret
inc
pop
add
mov
in
imull
pop
xchg
jmp
or
push
jae
xchg
mov
mov
jne
lahf
insb
imul
rorl
xor
lcall
inc
imul
pusha
repz
sub
or
push
sbb
ffree
dec
fcoml
dec
lds
mov
arpl
push
dec
or
inc
sbb
in
and
enter
inc
jg
and
pushf
jbe
inc
ret
inc
jae
cmpsb
sbb
daa
js
pop
or
out
cld
popf
xchg
repz
outsl
mov
cld
push
jl
fdivr
cmp
or
clc
dec
int3
mov
or
lds
mov
ds
mov
pop
jns
mov
in
shll
shl
fdivp
and
in
and
inc
lds
loopne
popa
cmpsl
mov
lods
mov
rclb
aam
mov
dec
outsb
test
xchg
dec
mov
push
push
inc
mov
mov
je
inc
mov
ds
lret
pop
xchg
jb
cmc
jg
and
mov
in
and
outsl
out
push
cs
or
fisttpl
cmp
lds
rol
push
cmp
jns
pop
xchg
or
loopne
mov
stc
fiadds
cmc
pop
shl
cmp
sbb
lock
leave
mov
dec
sbb
mov
sub
decb
aaa
inc
mov
imul
pop
sub
clc
cmp
shll
xchg
inc
in
testb
pop
ds
or
and
stos
push
cwtl
mov
ret
adc
xchg
inc
or
adc
in
mov
pop
pop
inc
bound
test
dec
daa
adc
pop
cmp
lods
stc
adc
add
push
or
loope
mov
lcall
test
jae
in
jns
aad
mov
ja
int3
iret
inc
fwait
add
inc
xor
inc
ret
adcl
mov
ret
shrb
dec
je
cmp
sbb
aam
jg
fwait
xchg
pop
inc
imul
ljmp
cltd
or
call
add
xchg
loop
cmc
xchg
xchg
lea
enter
dec
jmp
ljmp
push
pop
inc
test
add
stc
test
xchg
cli
jb
jne
scas
inc
dec
fiadds
mov
pop
push
icebp
dec
arpl
faddl
cmp
cmc
enter
outsb
test
xchg
jecxz
fsubl
jle
orl
or
push
jne
iret
push
popa
sub
icebp
push
mov
sub
pop
or
and
lcall
insl
add
incl
jns
lret
fnstcw
loope
mov
cltd
int
test
adc
jb
xchg
fstpl
pushf
mov
aas
jmp
pop
push
or
sub
pop
mov
cli
jb
lret
cmpsl
addr16
mov
sub
push
xchg
mov
mov
sti
adc
adc
aas
dec
mov
mov
push
imul
mov
aaa
sub
mov
fcmovne
jge
dec
lds
xor
fisubrl
lcall
push
outsl
jl
test
clc
insl
mov
inc
fsubp
xlat
adc
enter
stos
pop
imul
popa
les
xchg
hlt
clc
xchg
or
inc
out
cmpsl
mov
mov
push
add
jg
pop
les
out
mov
out
int
les
std
rclb
in
sahf
xchg
jmp
dec
or
sbb
push
insb
rcr
adc
cmp
addr16
mov
test
dec
or
in
fs
mov
iret
dec
xchg
inc
cmpl
insl
mov
ljmp
pop
bnd
jp
cmpsb
pushf
out
add
out
shll
popa
xchg
lods
jns
mov
testl
loopne
pusha
stos
mov
cs
out
fidivl
mov
and
add
movsb
loope
dec
dec
clc
lock
daa
pop
test
fdivl
xchg
inc
inc
inc
jb
int3
fildll
inc
and
jns
xchg
xor
incl
test
push
and
adc
lahf
sbb
lahf
cmp
jmp
es
dec
call
ret
xlat
jne
and
popfw
cmp
and
mov
and
sbb
sahf
jg
inc
dec
sub
jno
je
cli
aam
dec
jno
int3
push
cli
add
xor
and
mov
insl
call
dec
je
les
mov
jmp
cmp
jmp
orb
fmull
pusha
mov
mov
cmp
ds
jns
lar
dec
dec
out
adc
aaa
bound
ss
push
xor
lods
mov
or
out
and
iret
push
test
fwait
pop
mov
gs
lock
rorb
scas
daa
mov
cvtps2pd
stc
dec
insl
cli
stos
and
pop
xor
dec
xchg
dec
in
mov
cltd
or
cli
pop
mov
mov
je
fbld
push
sbb
mov
mov
cmp
ljmp
cmpsl
push
inc
push
add
and
inc
inc
fldl
insl
mov
mov
in
and
xchg
mov
sbb
es
jo
jae
pop
jno
je
xor
lock
jge
sub
faddp
push
test
mov
imul
push
adc
cli
pop
mov
pop
pop
fimull
stc
enter
lods
mov
stos
xchg
lds
cmp
stos
loopne
jge
nop
dec
mov
pop
dec
inc
and
jne
outsl
pop
xchg
mov
fs
fcomip
push
sbb
xchg
addb
sub
hlt
call
push
pop
lahf
rcrl
mov
cli
dec
adc
out
jbe
mov
lcall
push
into
mov
dec
sbb
dec
xchg
out
insb
mov
cmpsl
fs
cwtl
inc
jle
testl
cmpsl
add
sbb
inc
imul
dec
xor
xor
cmp
sbb
mov
divb
subl
add
loop
icebp
call
insl
imul
lret
xchg
push
in
mov
xchg
xchg
in
bound
enter
mov
dec
mov
testl
xchg
arpl
rorb
and
test
jnp
jnp
loope
or
sbb
cmp
lret
mov
subb
fcomi
outsl
fmul
xor
scas
loope
pusha
inc
or
lret
ss
jae
ljmp
jg
pop
xchg
outsb
push
adc
repnz
lods
dec
imul
or
xchg
dec
mov
aaa
ficoml
movsl
iret
push
shr
push
dec
cltd
addl
fidivs
dec
dec
lock
xsha1
cmpsb
or
test
imul
lahf
adc
repz
cltd
and
fsts
pop
insb
xchg
int
lcall
pop
std
mov
rorb
pop
xor
pop
pop
fistpll
dec
sub
mov
into
lret
dec
fwait
rclb
or
inc
inc
fs
icebp
add
neg
lods
iret
outsl
test
xor
adc
ret
mov
sbb
test
dec
xlat
jbe
scas
mov
pop
or
cld
add
mov
cmp
in
loop
push
das
mov
or
movsb
loope
and
cmp
call
das
sti
sub
rcl
lret
cld
mov
mull
xchg
push
mov
jne
inc
mov
mov
mov
push
scas
gs
add
cmp
ds
test
mov
aaa
xor
sbb
pop
cli
pop
inc
das
nop
std
add
aam
jns
ja
mov
pop
into
dec
hlt
in
sbb
xchg
pusha
sub
jl
lds
xchg
jae
fisubrl
mov
or
enter
rcrl
lods
icebp
pop
lods
aad
xchg
cmp
or
cmpl
inc
data16
test
andl
or
ds
jge
in
mov
push
sub
cmp
lret
lds
jno
fadd
das
repnz
mul
inc
insb
push
pop
xchg
or
mov
fs
sarb
inc
xor
lods
inc
lods
out
int
inc
stos
xlat
outsb
pop
cmpsl
or
es
outsb
gs
dec
pop
fdivr
inc
ret
sbb
dec
andb
cmp
push
es
pop
cmp
cmp
sbb
imul
dec
stos
stos
or
loope
sub
repnz
mov
lods
mov
push
popa
stos
sbb
outsb
fnstcw
outsl
mov
imul
mov
add
hlt
out
dec
enter
jae
repnz
fidivrl
in
sbb
sti
or
inc
inc
dec
je
cmpsb
mov
inc
add
pop
and
fistpl
or
pop
mov
shll
push
mov
xor
inc
push
xchg
pushf
hlt
jp
dec
adc
ds
int
xor
push
inc
add
rep
roll
in
and
sbb
inc
or
sahf
ds
cs
bound
sbb
mov
sub
xchg
std
stos
cmp
or
fistpl
adc
test
adc
rorb
pop
fs
sub
dec
in
lret
in
push
jns
lock
pop
xor
xor
xchg
inc
sub
in
push
mov
and
enter
mov
imul
mov
fs
add
insl
andl
and
mov
int3
imul
inc
sub
lods
mov
scas
mov
pop
int3
dec
daa
xor
and
rclb
loop
aad
mov
out
inc
xchg
in
jle
inc
cmpsb
jecxz
push
mov
xor
xchg
dec
pop
aad
push
dec
push
sbb
out
jne
xchg
jmp
fs
sbb
mov
mov
negl
fistpll
imul
fwait
je
dec
enter
mov
xor
fbstp
push
mov
mov
inc
add
adc
loope
mov
mov
lock
dec
cltd
movsb
subb
sub
stos
adc
movsb
inc
mov
sahf
es
push
lods
out
popl
add
or
test
outsb
mov
push
pop
or
push
mov
mov
cs
repz
repz
stos
dec
je
aam
pop
sbb
sub
fmulp
mov
sbb
repnz
pop
cltd
orb
lods
inc
ja
mov
sar
les
mov
sti
pop
mov
xchg
addb
jmp
cld
xor
jnp
enter
add
fidivl
into
cmp
scas
xor
pop
xchg
loop
adc
or
and
jnp
movsl
lock
movsl
jne
xor
lea
add
adc
das
adc
inc
push
lahf
test
lods
insl
pop
dec
je
mov
xor
aas
push
or
mov
mov
or
sbb
jae
mov
jbe
testb
sti
outsl
fs
lcall
ss
adc
loop
cwtl
mov
shll
in
pop
fsts
scas
loope
xchg
sbbb
imull
cmp
dec
mov
inc
loope
xchg
test
push
lcall
and
pop
outsl
xor
fwait
hlt
adc
add
inc
ljmp
add
inc
lods
pop
dec
addr16
cmp
mov
xorb
xchg
cmp
fcompl
aas
dec
cmp
repnz
cltd
adc
cmp
add
leave
ljmp
add
mov
cmpsb
fimuls
xor
cs
das
rcrb
jbe
popa
lock
pop
divb
adc
fadd
int
lds
les
fisttpll
outsb
lock
mov
insl
pop
add
xor
pop
leave
push
pop
bound
push
ret
mov
mov
hlt
dec
sub
in
inc
out
cmp
inc
mov
in
cmp
pop
sub
dec
xor
jnp
or
scas
add
aad
inc
pop
dec
lods
cmp
push
sub
dec
cld
jne
test
mov
cmp
xchg
pop
xchg
jmp
lea
movsl
add
pop
lock
and
aam
mull
test
xchg
fnstenv
jl
push
enter
inc
and
pop
jg
sbb
leave
sbb
in
adc
mov
stc
adc
sahf
mov
xchg
xor
sub
cmp
jns
sub
pop
test
mov
pop
test
clc
divb
iret
in
sub
into
jl
inc
dec
adc
call
sbb
sub
fsubs
cmp
push
inc
dec
call
cmc
inc
ror
js
xor
mov
mov
xlat
pop
xor
jle
mov
ss
or
data16
cli
mov
imul
test
jge
cli
jmp
shrb
dec
cltd
jbe
aad
mov
clc
shrl
inc
mov
xor
inc
stos
jmp
adc
add
lret
xchg
dec
add
adc
push
outsl
jge
test
or
sub
fwait
rcll
jl
mov
jge
pop
stc
jge
xchg
xor
std
rcll
jno
test
mov
cltd
cs
testb
enter
je
or
ret
push
pop
add
movsl
jns
xchg
aas
xchg
xor
dec
je
push
mov
adc
cmp
add
fisttpl
xor
adcl
mov
and
outsl
push
jecxz
cs
repnz
stc
jge
icebp
repnz
inc
dec
dec
cmp
lods
and
xchg
sub
lods
inc
xor
iret
loopne
lods
imul
notl
mov
sub
push
add
pop
xchg
insb
push
adc
pop
add
push
cmp
clc
xchg
and
sbb
call
sub
cld
aaa
jns
insl
adc
push
xor
or
mov
sub
sub
into
xchg
pop
push
cmp
arpl
test
pop
push
sub
jne
ficomps
imul
mov
add
push
loopne
fnstenv
mov
jne
mov
int
sbb
in
dec
mov
mov
divb
test
enter
pop
lods
cmp
or
dec
pop
or
or
xchg
scas
aam
pushf
jne
push
add
je
pushl
push
push
jmp
nop
pop
jnp
scas
push
inc
inc
xor
xor
pop
in
fcmovb
push
into
neg
adc
or
fcmovne
iret
mov
in
jecxz
push
or
adc
xlat
push
sahf
fdivl
cmc
in
push
add
fistpl
sbb
movsl
and
into
test
aaa
and
and
mov
in
sbb
adc
or
pop
test
les
add
xchg
jnp
mov
insl
and
mov
call
or
pop
pop
ljmp
popl
es
cmp
int
push
sub
cld
pop
std
pop
mov
cmc
mov
out
repz
cld
adc
ljmp
push
imul
dec
std
mov
dec
loop
fistpll
clc
int3
pop
xor
andl
cmp
push
sahf
mov
enter
outsl
push
adc
xor
xlat
outsl
lods
jle
jge
mulb
xchg
fstpl
inc
push
pop
jb
xchg
xor
pop
gs
add
ljmp
lret
sub
xlat
adc
mov
add
jno
daa
jno
mov
add
sbb
mov
push
je
bound
push
cmp
std
roll
lods
dec
sbb
push
subb
add
dec
xchg
mov
jge
icebp
cs
outsl
mov
sti
and
inc
add
push
xor
ja
in
dec
pusha
dec
and
push
mov
and
stos
jae
loopne
pop
fsubrs
mov
sub
push
push
ljmp
test
dec
and
cmpsl
mov
sbb
adc
mov
dec
mov
add
xor
mov
loopne
pop
movsb
sub
pop
sub
test
insl
dec
sbb
jno
iret
gs
loope
mov
loopne
cmp
icebp
mov
jb
pop
insl
xchg
mov
div
inc
jnp
lds
add
xchg
mov
xlat
stos
add
inc
mov
popa
jp
pop
mov
mov
fwait
repnz
sub
dec
adc
icebp
push
lds
pop
repnz
sahf
mov
push
movsb
outsl
je
imul
adc
cwtl
xchg
jmp
cmp
hlt
push
xchg
cmp
push
add
aad
pop
nop
sub
sti
cmp
inc
rcrl
test
mov
xchg
add
mov
loop
out
sub
pop
cmc
hlt
outsb
sub
push
fbstp
sti
mov
lea
popa
mov
xchg
imul
jl
test
cmp
lds
inc
icebp
lcall
push
fcmovnbe
jle
fidivl
adcb
push
xor
mov
jp
mov
aad
jge
in
push
or
jne
aam
fildl
iret
adc
dec
mov
lcall
push
dec
int
xor
mov
xchg
lea
push
imul
imul
inc
fsts
dec
gs
mov
sub
fadds
popf
adc
push
sbb
adc
or
adc
and
bound
leave
push
cli
call
int
gs
out
jp
pop
jae
or
jns
or
mov
adc
mov
mov
pop
mov
scas
notl
jo
dec
cmp
dec
xchg
mov
adc
cmp
cld
mov
add
push
xchg
lods
popl
dec
gs
xchg
jecxz
push
inc
mov
testl
mov
jns
js
aad
mov
mov
dec
outsl
mov
lcall
xchg
inc
xchg
rcl
paddusw
push
fwait
and
nop
mov
push
push
jo
cwtl
sub
daa
stc
push
pushf
ss
push
inc
pusha
dec
movsb
mov
mov
xchg
xchg
and
sbb
add
jns
jge
sub
out
out
andb
mov
addr16
sub
dec
xchg
push
cmp
ret
xor
negl
out
sbb
daa
or
lahf
push
and
aas
xchg
push
mov
es
jae
jno
cwtl
jnp
int
mov
sbb
and
xor
and
inc
jp
jecxz
cmpsl
and
aas
cs
dec
mov
xchg
and
inc
pop
loopne
std
mov
lock
xor
cwtl
add
and
push
mov
dec
add
mov
xlat
jns
inc
pop
cs
mov
js
cs
fcmovbe
sbb
jbe
cmp
rorl
sbb
mov
mov
in
arpl
adc
jbe
std
xchg
stc
int3
fcmovu
mov
cmp
ja
andb
pop
stos
sub
jge
pop
loopne
mov
inc
xchg
dec
push
mov
test
icebp
ja
loop
into
xor
push
es
xchg
xlat
inc
ljmp
scas
out
cmp
add
lahf
divb
dec
aam
add
aas
hlt
mov
bound
loopne
inc
or
push
mov
add
mov
dec
cmp
xchg
js
mov
inc
in
ljmp
add
insl
jno
mov
je
test
lods
inc
push
xor
inc
and
fs
inc
sbb
out
testb
push
mov
popf
iret
sub
lcall
or
ljmp
fsubr
push
sub
mov
scas
push
mov
push
nop
lods
js
add
adcb
mov
inc
movsb
cmpsb
add
adc
pop
insl
pop
xchg
in
in
out
xchg
dec
nop
or
and
pop
inc
push
dec
xor
jp
or
cmp
ficompl
mov
ffree
cmc
cmp
or
in
pop
fisttps
dec
test
movb
repz
jmp
mov
repnz
dec
ss
outsl
les
xchg
xchg
dec
repz
in
lret
call
push
lret
cmp
sbb
insl
ljmp
xorl
stos
or
add
cmpsl
pop
fstl
dec
test
add
fldl
nop
test
shrb
fidivl
mov
and
and
jns
xchg
movsl
fnsave
outsl
int3
inc
fsubrl
push
fidivrl
xor
or
xorb
pop
pop
in
mov
or
or
add
sahf
jp
pop
mov
cmp
and
mov
and
fidivrl
xor
lret
test
dec
in
popa
cmp
or
lahf
aam
and
repnz
into
adc
pushf
jno
movsl
push
outsl
cmpsl
loop
test
rcrb
cmp
stos
imul
icebp
ret
pop
mov
mov
mov
test
mov
push
cs
mov
dec
cltd
fnstsw
inc
sub
into
hlt
cmc
cmp
pushf
rorl
bound
jecxz
icebp
and
mov
mov
adc
pop
pop
push
cs
dec
cmc
xor
or
jae
outsb
shl
mov
xchg
fiadds
loop
jns
push
or
sahf
jmp
in
leave
add
jnp
pop
dec
mov
into
nop
xchg
nop
mov
push
jae
icebp
mov
cs
in
inc
fxch
cli
std
std
cwtl
xchg
test
daa
and
out
dec
adc
push
shr
mov
pushf
xchg
dec
and
ret
mov
dec
inc
cld
clc
repz
cmp
mov
adcl
cmp
idivb
xchg
xchg
add
mov
xor
out
fcoml
pop
add
sub
pop
pop
leave
inc
mov
inc
xchg
imul
mov
sub
push
and
cmp
call
pop
nop
pop
mov
mov
popa
xor
out
popf
pop
jmp
jb
sbb
stc
lcall
fwait
adc
lret
mul
loope
cmp
aas
fdivrs
push
and
and
xor
lea
mov
pop
rol
xor
add
je
pop
mov
aad
pop
and
shlb
xor
addr16
std
loopne
pop
cld
adc
pop
sbb
inc
mov
pop
push
or
std
xchg
filds
std
mov
bound
or
adcl
push
imul
mov
aas
int
mov
movsl
sub
scas
jnp
sub
add
lret
ret
and
push
repnz
push
jae
cmpsb
push
mov
jb
out
xor
xchg
jp
or
ljmp
sbb
dec
fwait
and
int
and
cmp
sahf
addr16
adc
sub
pop
mov
push
pop
xchg
add
ds
pop
subb
add
cld
mov
loope
scas
ficoml
xchg
mov
pop
outsb
in
pop
pop
imul
mov
lods
sub
xchg
mov
pusha
dec
loopne
jne
test
rcll
hlt
or
jmp
lcall
push
mov
sub
insb
lahf
arpl
mov
outsl
mov
addr16
ja
jl
rep
sub
push
js
xorl
ret
in
or
cmp
inc
das
lds
lds
or
adc
xchg
push
lods
and
dec
icebp
hlt
jmp
outsl
adc
movsl
aad
sub
sub
inc
ss
mov
pop
fwait
mov
dec
in
imul
push
ljmp
addr16
ret
jne
inc
testl
das
outsl
jge
es
outsl
pop
inc
mov
pop
xchg
jg
pop
jle
rcrl
push
ror
popa
adc
je
in
in
out
add
loopne
cmp
xchg
adc
outsl
pop
adc
inc
std
in
pop
repz
int3
inc
subb
in
mov
cmp
in
cmp
sbb
lahf
outsl
repnz
adc
out
ljmp
mov
dec
mov
mov
mov
and
jecxz
add
inc
mov
mov
add
aad
inc
pop
fbstp
mov
sahf
mov
mov
cld
pop
push
lret
mov
mov
dec
rol
es
sub
mov
fsubp
or
lock
dec
mov
mov
stc
lods
stos
test
xchg
sbb
negl
loope
das
pop
into
in
or
shlb
sub
addl
imul
push
mov
fldcw
outsl
rolb
adcl
cs
jne
pop
inc
loope
lea
ret
xchg
in
adc
xchg
jp
sub
mov
out
sbb
pop
sti
add
dec
xlat
xchg
push
inc
jmp
xchg
jmp
std
ficoms
push
jmp
rcl
jns
ljmp
mov
sbbb
fwait
inc
mov
loope
push
ljmp
sub
imul
mov
shr
sub
imul
mov
icebp
lock
je
or
add
fsts
and
scas
dec
mov
lret
cs
sub
out
popf
loopew
push
sti
add
rorl
adc
out
out
rorl
add
add
push
mov
xor
cmp
jne
mov
push
imul
mov
ror
lahf
pop
js
scas
inc
cmpsl
pushf
xor
mov
xor
push
insb
push
push
xchg
add
or
mov
or
call
sub
out
mov
push
hlt
ss
stos
fninit
sub
js
cmpsb
dec
mov
divl
jmp
jo
dec
bound
pop
movsl
add
push
push
insl
fdiv
and
mov
mov
into
mov
ds
stc
lock
adc
scas
pop
cli
arpl
or
mov
mov
fcomi
aad
lods
negl
mov
outsb
mov
xchg
bound
imulb
mov
sub
adc
sbb
add
gs
xor
adc
mov
xor
roll
lret
nop
push
cmp
mov
or
repnz
cmp
or
aas
es
or
mov
repz
imulb
push
dec
inc
fwait
in
movsb
dec
pop
inc
fstl
xchg
inc
xchg
popa
cltd
pop
mov
daa
dec
mov
fsubp
cli
pop
js
jmp
sub
xor
cld
and
adcl
push
cwtl
test
lret
pop
mov
adc
je
test
and
sbb
add
mulb
xor
add
dec
in
icebp
data16
sarl
inc
dec
add
mov
fstpt
ds
jns
jle
fimuls
mov
lret
test
stos
test
fstpl
jge
cld
dec
pop
nop
xchg
dec
xchg
add
dec
sbb
lcall
or
mov
or
mov
cmp
push
iret
cmc
out
icebp
mov
mov
je
in
hlt
mov
imul
lods
jne
data16
cltd
sub
test
out
into
inc
incb
loop
mov
xchg
xchg
xchg
cld
add
mov
std
mov
test
scas
or
loopne
pop
push
cmp
imul
fnstsw
dec
adc
inc
jecxz
in
push
ja
xchg
outsl
enter
les
or
sbbl
enter
and
hlt
or
jecxz
cmp
dec
in
sti
je
add
rclb
testb
xor
idivb
cmp
push
dec
and
mov
stos
fistpl
leave
mov
shlb
es
xchg
aas
jo
xchg
pop
aas
or
aaa
or
fcmovbe
sub
xor
push
inc
mov
mov
mov
outsb
push
in
cmp
ffreep
adc
inc
sti
out
mov
cld
imul
jmp
insb
lret
adcb
mov
std
inc
mov
push
xchg
cmp
daa
or
ja
jge
and
mov
or
xor
jno
int3
mov
pop
mov
sbb
fnstcw
pop
decl
jno
pop
add
jg
test
and
stos
fistps
pop
paddb
cmpsl
or
sub
lods
jnp
cmp
jno
scas
pop
add
and
dec
aad
mov
push
loope
pop
sub
and
lahf
mov
cwtl
xchg
xchg
cmp
mov
sub
mov
loope
int
push
icebp
xchg
or
pop
push
icebp
or
daa
xchg
aas
fcomip
roll
jg
loope
stos
adc
adc
dec
in
jmp
jnp
adc
and
es
sbb
xor
iret
gs
adc
adc
arpl
xor
ds
aas
xor
mov
sar
cmp
sti
mov
mov
in
or
insl
push
jbe
sub
xor
shlb
repz
pop
into
and
sub
gs
push
and
incb
xlat
inc
mov
adc
mov
push
imul
or
clc
dec
inc
outsl
negb
xor
add
pop
pop
mov
not
and
out
pushf
sbb
xchg
pop
aas
pop
arpl
add
jne
sub
add
add
bound
or
sub
xchg
lret
loopne
add
loopne
push
arpl
test
ss
rclb
or
ja
js
xlat
iret
pop
lcall
mov
shrl
add
fwait
outsb
das
dec
dec
stos
mov
test
xchg
mov
push
push
les
push
jbe
sbb
mov
push
or
dec
cld
cmp
cmp
das
jmp
and
or
stc
push
movsb
mov
mov
jne
jbe
addr16
sbb
mov
adc
cwtl
sbb
sub
clc
rcr
scas
mov
adc
inc
cmp
in
dec
mov
mov
fwait
dec
xlat
in
daa
and
sbb
test
in
jbe
sub
jge
mov
cmp
push
faddp
sti
insl
xor
orb
loope
push
pop
and
fcoml
add
mov
insl
insb
dec
xor
xor
dec
dec
xlat
adc
or
aaa
adc
push
js
jno
jg
imul
bound
xchg
push
aad
xlat
sarb
mov
int3
add
shll
inc
sbb
and
aaa
jmp
js
or
clc
addl
dec
test
fidivrl
inc
xor
lods
xchg
scas
hlt
out
lods
add
inc
test
pop
repz
psubw
jnp
or
adc
ja
cltd
mov
lahf
add
ja
add
data16
lods
filds
xchg
test
push
adc
jp
xchg
sub
mov
incb
xlat
xchg
pop
outsb
inc
push
mov
push
xchg
fmuls
sahf
lahf
ds
in
daa
dec
test
repnz
add
clc
xor
orl
push
mov
sub
or
and
push
sbb
ja
cmp
cmp
das
aas
add
cli
sbb
scas
adcl
movsl
pop
mov
cmpl
jns
xor
or
popf
mov
popa
jne
jp
dec
sub
dec
push
and
xchg
jne
negb
fisttpl
stc
mov
or
push
or
ja
clc
cmpsb
fs
stos
in
push
push
adc
outsl
and
std
into
pop
dec
popa
repz
push
inc
lods
loop
lcall
fimuls
int
mov
mov
jnp
jl
orb
pushf
cs
inc
int
mov
mov
iret
lods
mov
je
jnp
hlt
push
divps
and
ret
inc
push
mov
mov
cli
push
jae
xor
push
dec
out
arpl
sub
andl
sahf
pop
mov
xor
mov
pop
and
cmp
shlb
pop
sbb
and
test
adc
and
adc
movsl
or
lahf
adc
sar
xor
mov
ja
ret
mov
sbbl
inc
test
addl
push
jle
and
sbb
pop
cmc
push
mov
xor
mov
fisttps
dec
add
cmp
cmp
call
popf
push
in
leave
jns
cmp
ret
pop
cmp
xor
frstor
dec
dec
pop
inc
fimuls
xchg
sub
pop
imul
or
push
fcmovbe
iret
and
push
add
inc
ja
mov
jne
sbb
aaa
jmp
jle
rclb
loope
or
and
lds
dec
sub
push
hlt
stos
imul
mov
adc
mov
add
sbb
jge
pop
repnz
jnp
cmp
and
inc
scas
add
mov
ds
dec
sahf
aas
sbb
out
insl
in
sahf
push
repnz
cmp
jns
lcall
out
aam
fbld
add
pop
les
adc
fmul
cmp
fisttpl
fisubs
xor
xchg
xor
push
imul
push
scas
push
or
xor
iret
xor
in
out
jecxz
mov
movsb
insb
sub
jmp
addr16
inc
xor
test
scas
mov
adc
movsl
pushf
popa
and
mov
icebp
pop
lahf
stc
cmp
push
and
push
push
out
push
stos
xchg
into
cmp
rorl
sub
mov
hlt
stc
mov
divl
hlt
faddp
rolb
out
dec
mov
ffree
out
call
aam
test
or
fldl
xchg
popf
dec
orl
adc
add
mov
test
xlat
loopne
cwtl
adc
push
lods
inc
inc
sub
xchg
pop
add
mov
mov
mov
cmp
pop
pop
stos
fistpll
jb
mov
pop
cmp
jecxz
sub
out
jne
xor
cmp
sub
notb
fstps
dec
lret
or
push
mov
stos
mov
lds
lock
test
or
adc
lods
icebp
lahf
shlb
mov
test
sub
xorb
sbb
dec
xchg
cmp
cmp
or
dec
jl
cs
adc
push
pminsw
aaa
adc
jmp
xchg
push
pop
fidivl
jg
andl
nop
xchg
int
les
and
jne
adc
pop
ret
clc
mov
and
cmpsl
push
incb
sahf
pushf
push
add
dec
outsl
jae
imul
in
and
addr16
and
out
stos
mov
pop
lock
sti
pop
jp
and
es
test
std
xchg
mov
icebp
cmp
jle
dec
jne
fwait
bound
fwait
xor
and
loopne,pt
in
mov
mov
push
test
lods
into
dec
pushf
sbb
pop
js
sub
lea
rclb
cmc
iret
and
nop
outsb
xor
iret
add
mov
mov
ljmp
ret
imul
push
repnz
popl
adc
push
cmp
mov
out
fcompl
std
adc
ljmp
mov
sahf
or
in
jl
push
add
mov
adc
pop
ja
jnp
sarb
pop
xchg
cwtl
std
jbe
repz
cs
das
push
mov
lcall
movsl
mov
out
mov
ljmp
daa
lret
outsb
rcrl
popf
ja
std
add
mov
push
test
push
int3
rolb
test
or
es
xor
nop
cmp
jne
pop
xor
fsub
xchg
dec
cmp
push
inc
loopne
int3
imul
push
push
sti
sbb
andb
fidivl
nop
inc
ror
ss
xor
push
movsl
inc
ret
testb
push
adc
lahf
rolb
or
pushf
cmp
sbb
scas
out
sub
inc
adc
adc
int
loop
sti
in
sbb
insb
adc
stos
ss
xor
dec
sub
mov
sub
dec
repz
orl
dec
mov
imul
push
pop
loope
and
adc
fnstsw
cmp
loop
clc
imul
push
popa
je
sub
aam
push
stos
adc
pop
in
add
icebp
xorb
xchg
in
ja
outsb
jne
mov
pop
cmp
orl
sbb
call
inc
clc
and
xlat
js
xlat
mov
bound
lret
pop
icebp
cltd
out
push
cmp
sub
enter
pushf
push
mov
jecxz
lcall
pop
aaa
stos
mov
and
jbe
ja
xchg
push
jge
dec
mov
push
lret
stos
xor
fldenv
xchg
dec
ja
sbb
mov
mov
cmp
jl
ss
daa
out
or
andb
test
dec
inc
lcall
inc
xchg
fnstsw
popf
sbb
fidivrs
ficoms
xor
mov
mov
cli
leave
xchg
xchg
mov
loope
cltd
leave
inc
dec
loopne
adc
fstpt
sub
cld
in
mov
fbld
fs
adc
inc
fidivs
inc
daa
je
shll
insl
mov
int3
xor
out
je
shr
aas
out
xor
fnstenv
aas
mov
fiaddl
mov
sbb
aad
movsb
fwait
je
cmp
jp
xor
rolb
jp
cs
push
dec
xlat
jge
ljmp
push
cmp
cmpsb
js
scas
arpl
pop
imul
adc
mov
fwait
pop
mov
mov
lret
loopne
dec
mov
clc
jg
je
test
outsl
fsubl
popa
xorl
lcall
inc
daa
outsl
out
xlat
das
jns
pop
int
sarl
cs
sub
daa
and
cmp
loopne
lea
aad
add
into
addr16
or
xor
ds
jle
push
xchg
mov
sbb
xchg
sub
data16
push
pop
scas
popf
xchg
mov
lock
inc
pop
adcl
ja
mov
xor
inc
into
cmp
inc
sbb
arpl
clc
lods
xchg
daa
mov
ret
dec
cmp
sbbb
push
mov
or
jmp
ret
mov
mov
cmp
int
dec
mov
fildl
fistps
inc
dec
jns
sub
pop
insl
aam
in
test
push
shl
js
or
jmp
jns
jl
imul
notl
pop
push
push
xor
or
inc
std
pusha
mov
insl
mov
and
dec
test
pop
add
subb
cli
pop
mov
sub
mul
adc
fcmove
out
mov
cld
std
xor
scas
dec
arpl
cmp
into
adc
xchg
repz
mov
mov
push
mov
jne
add
fwait
orl
mov
fsubrp
pop
in
jecxz
xor
sbb
add
loope
dec
xchg
jnp
sti
rorl
jmp
xchg
loop
inc
mov
pop
leave
xchg
pop
xchg
xchg
sbb
sbb
lret
rorl
push
es
xor
or
jbe
push
sbb
mov
xor
ret
jo
pop
cli
mov
out
or
cld
mov
mov
jge
int3
roll
inc
lahf
jmp
aam
call
jne
pop
dec
mov
xor
add
roll
sbb
mov
test
aad
adc
lret
jns
xor
hlt
outsl
testl
pop
ds
ja
leave
jg
sbbl
jne
and
push
push
push
leave
std
mov
and
sub
push
or
mov
leavew
aam
cmc
cmc
push
in
daa
adc
adc
mov
call
push
xor
notl
cmp
daa
mov
divl
inc
or
adc
mov
lods
adc
test
pop
mov
pusha
das
dec
aaa
dec
test
cmp
in
push
jp
sbb
pushf
adc
jnp
jp
adcl
jae
xorl
push
stos
nop
add
sbbl
sbb
icebp
jge
push
pop
mov
ds
push
add
jmp
or
mov
sarb
ljmp
adc
mov
jl
insl
repnz
movsl
sub
mov
or
repz
cmp
or
lds
les
movsl
call
mov
test
dec
lea
pop
xchg
mov
mov
and
sbb
push
les
fistl
sub
mov
adc
notl
pop
push
add
inc
flds
call
push
test
cmp
ja
pop
push
jno
loopne
sahf
pop
adc
in
fwait
xchg
popf
cmp
xor
mov
in
jne
dec
imul
mov
ficoms
push
pop
sbb
add
js
fistpl
sbb
xor
mov
in
mov
sbb
test
mov
ret
clc
xchg
into
pushf
and
sub
in
in
xchg
or
scas
lods
addl
sbb
adc
lcall
into
ss
push
push
fbstp
inc
mov
mov
shll
mov
mov
xor
cmp
fwait
repz
jnp
mov
leave
push
outsb
jp
loopne
fs
xorl
aad
jns
cmc
and
int3
lock
cmp
pop
aad
pop
ljmp
cmc
jl
xchg
adcl
pop
cli
imul
cmp
lcall
pop
xor
push
lea
repz
push
mov
jns
jnp
insb
into
invd
sub
xchg
inc
test
and
jo
fisubrs
adc
push
jb
lea
adc
mov
mov
mov
sbb
movsb
fists
mov
dec
dec
aad
jge
push
xor
scas
sarb
outsl
std
mov
jno
adc
aas
lods
jl
xor
imul
fwait
sbb
nop
and
cld
aaa
fcoms
decl
xchg
cs
jbe
std
mov
jae
or
adc
inc
push
dec
pop
sub
clc
into
and
jl
pushl
inc
lea
aad
sti
lea
add
aad
outsb
sarb
xor
push
mov
mov
scas
aam
fildl
add
lods
call
lahf
push
mov
or
in
stos
adc
adc
into
jbe
ljmp
data16
jl
je
out
sbb
xchg
arpl
pop
test
push
inc
xchg
lcall
xor
ljmp
sub
inc
int
and
gs
mov
sbb
xchg
sti
push
repnz
mov
mov
pop
dec
popa
mov
add
fiaddl
adc
inc
sub
scas
mov
and
jge
imul
xchg
mov
fimuls
adc
test
mov
std
into
idivl
lods
and
cs
int
and
pop
shlb
shld
mov
flds
push
xorb
shlb
sub
xchg
mov
dec
ds
testb
lret
xchg
add
mov
pop
pop
or
jne
test
jp
lahf
jb
xlat
enter
pop
and
dec
pop
jp
loope
enter
outsb
sub
data16
in
lret
rorl
jp
xchg
sbb
and
enter
inc
push
add
stos
jbe
and
cmp
ljmp
mov
sbb
imul
icebp
pop
cli
jmp
dec
shlb
mov
inc
int
pop
push
push
dec
xor
pop
test
push
fdivrs
cmc
pop
nop
cmp
push
scas
insl
test
aas
mov
push
cs
push
inc
jecxz
cmc
dec
cltd
adc
nop
movsb
out
jbe
dec
xlat
mov
ja
ret
incl
rcrl
andl
ret
and
inc
inc
dec
inc
jnp
int
ljmp
ds
jbe
pop
push
lods
mov
dec
notl
por
das
fwait
out
dec
adc
inc
sbb
xchg
push
add
js
sbb
xchg
pop
or
mov
movsb
add
and
lock
sbb
movsl
mov
daa
push
sbb
push
adc
lret
mov
dec
inc
lret
enter
jo
and
push
xlat
sbbl
inc
loope
movsl
call
jns
xchg
cmp
pop
imul
mov
fs
mov
gs
xchg
and
movsl
sbb
mov
rcrl
rclb
jae
mov
xchg
test
aam
mov
std
movsl
push
cs
mov
and
bound
hlt
cltd
in
negb
das
jae
xchg
pop
jnp
jecxz
lods
jmp
mov
jg
pop
dec
push
jge
jle
call
or
jae
pop
mov
cwtl
cli
mov
mov
arpl
popl
lahf
xor
mov
push
fst
jge
ret
int3
add
mov
std
leave
dec
mov
ljmp
mov
mov
push
shrb
push
int
dec
cmovg
xchg
mov
lock
mov
rorb
cmp
subl
mov
bound
pop
adc
shll
vorps
mov
jb
bound
subl
add
sbb
xchg
xor
clc
ds
add
ja
push
repnz
ds
dec
test
mov
jo
mov
xor
xchg
add
outsb
mov
jno
push
jl
out
dec
and
adc
test
push
jae
out
lods
xor
and
sbb
dec
pop
scas
lret
in
lret
sub
add
sub
cmp
xchg
lods
lret
mov
push
inc
aad
aad
push
adc
inc
jp
pop
sub
push
das
xchg
xchg
inc
cmpsb
or
stos
cmpb
lods
imul
sahf
xchg
push
mov
jge
dec
mov
adc
mov
lds
aas
test
mov
sub
test
fldenv
cmp
aam
mov
iret
imul
add
gs
mov
jg
test
iret
or
rep
sbb
push
and
cmpsb
decl
call
jl
js
in
jl
add
cmpsb
sbb
push
inc
sbb
lcall
mov
cli
ffreep
cmpsl
push
pop
sbb
out
loopne
data16
pop
xchg
in
mov
sub
imul
cmpsb
mov
and
fildll
repnz
mov
add
ret
sub
fdivl
sbb
inc
pop
or
mov
in
push
in
push
ret
mov
pop
cmpsl
popf
loop
sti
pmulhuw
mov
ljmp
mov
shl
cltd
xor
pop
sub
lods
xlat
mov
mov
repnz
mov
test
faddl
insl
jle
addr16
mov
adc
mov
jne
fidivl
insb
dec
dec
test
in
xor
pop
pop
fisttpl
insb
testb
fdivrs
pop
xchg
bound
hlt
mov
and
sub
lahf
sub
fmuls
adcb
dec
inc
jo
sbb
or
fisubrl
testl
jbe
cmp
test
jl
mov
xor
adc
xchg
mov
fsubrl
pop
lret
fisubl
jge
insl
pop
das
push
push
test
cmp
insb
popa
cmp
xor
xchg
push
mov
push
and
std
mov
pop
movq
xor
scas
xor
test
xor
mov
jmp
dec
mov
cmpsl
mov
stos
push
enter
add
sub
inc
divb
lock
sub
aad
movsb
sahf
and
test
lret
das
xorl
nop
out
dec
lret
jecxz
or
jp
mov
pop
xlat
das
cwtl
test
fisttpl
js
cli
ljmp
mov
inc
pop
test
xlat
xchg
inc
bound
aas
sub
add
popl
insb
idiv
dec
jmp
sub
popa
mulb
pop
movsb
sub
ds
mov
notl
add
pop
push
push
inc
sub
pushf
mov
inc
ret
and
pushf
cmc
jns
ret
bound
jae
scas
cmp
push
fcoml
sbb
out
in
push
inc
test
cmpsl
sbb
dec
inc
mov
pop
inc
daa
inc
mov
push
aad
shrb
out
push
dec
repz
push
xor
mov
mov
lcall
pop
jg
xchg
aaa
mov
push
cmp
pusha
negb
out
adc
cmp
inc
jns
shll
mov
lods
shr
xchg
fisubrs
fistpl
add
pop
push
jne
cmp
push
inc
rcr
dec
and
sarl
imul
cld
into
pop
adc
and
mov
xchg
jp
mov
inc
jge
jo
test
pushl
mov
aas
faddl
fimuls
jo
icebp
mov
push
mov
arpl
es
inc
lock
pop
popa
daa
cwtl
je
or
ds
sub
cmp
roll
in
push
cmp
mov
std
jecxz
mov
sub
lcall
push
push
fstps
pop
out
flds
outsl
dec
shr
dec
push
stc
lret
mov
xlat
icebp
pusha
arpl
roll
in
adcl
outsl
int
sbb
ja
scas
adc
and
inc
push
adc
mov
mov
lret
and
mov
cmp
int
inc
and
xchg
test
out
add
mov
aaa
insb
shll
cmp
mov
xchg
inc
xchg
cmp
rcrb
xchg
adc
dec
loop
aam
xor
fsts
ja
fs
stos
lock
sub
or
inc
xchg
clc
sbb
cmp
es
inc
clc
int3
cmp
insl
hlt
cmp
inc
dec
or
lock
loop
aam
or
inc
fcmovb
jns
loop
adc
das
lds
orl
enter
cld
nop
push
mov
aas
add
sbb
lea
popf
rclb
in
mov
inc
adc
rcrb
jp
popf
scas
mov
mov
push
mov
jbe
sub
inc
mov
iret
push
mov
hlt
dec
fldenv
push
cmp
push
pop
and
out
dec
leave
cmp
mov
into
pop
pop
xchg
inc
idivl
push
inc
imul
mov
fxrstor
dec
add
pop
push
adc
jmp
cmp
add
ss
leave
sar
cmp
dec
or
inc
aaa
xchg
or
dec
and
daa
frstor
dec
mov
mov
std
aas
jns
cmpl
push
mov
mov
rcll
in
add
push
sbb
test
ja
int
xchg
xchg
pop
mov
nop
mov
cmpsl
pop
jno
cmp
adc
outsb
fwait
js
xchg
push
mov
xor
mov
push
add
fadds
cmp
mov
lods
imul
jns
push
dec
jae
mov
repnz
pop
sub
dec
dec
dec
cmp
mov
in
adc
les
mov
scas
outsb
das
jge
xor
jne
sub
in
test
push
or
mov
ss
sbb
daa
fidivl
mov
push
lcall
jecxz
mov
ja
dec
or
push
bound
leave
jmp
rcrb
inc
jecxz
push
add
sbb
scas
dec
retw
ljmp
cld
outsl
mov
in
mov
push
jecxz
out
aam
std
mov
stos
mov
mov
push
mov
pushf
lods
and
sahf
loop
in
fs
in
lods
sahf
jge
imul
mov
cld
stos
fistpl
mov
push
loop
adc
mov
and
stc
mov
daa
xchg
hlt
out
push
sub
xchg
aam
jge
stc
mov
pop
mov
arpl
or
pop
sbb
out
js
hlt
or
loop
icebp
add
call
lea
rcr
sbb
call
mov
jecxz
xor
sbb
shlb
int3
pop
jge
fsub
mov
and
add
cli
or
shl
inc
pop
insl
add
inc
out
mov
mov
cmp
stos
nopl
push
sub
xor
sbb
inc
sub
ret
int
add
pop
sbb
pop
cmp
stos
std
in
int
loope
xor
add
mov
mov
fsubs
pop
je
adc
mov
loopne
into
cli
es
fnstsw
xchg
addb
dec
pop
pop
dec
sub
nop
out
fwait
cmp
xor
jl
mov
xchg
mov
into
xchg
push
es
pop
push
xchg
xor
ljmp
sbb
and
push
push
lret
dec
mov
and
add
sar
lds
mov
or
insl
fiadds
jl
add
hlt
imul
je
mov
push
in
fstl
outsb
loope
shrl
shll
test
jne
dec
aad
sbb
mov
ljmp
clc
dec
and
push
xlat
push
call
add
fwait
iret
js
push
rcrb
insl
mov
add
sub
into
inc
fidivrs
inc
cmp
je
and
and
mov
lret
cwtl
std
les
jns
jl
sbb
lahf
jbe
add
add
cmp
leave
pop
aam
repz
popa
cli
sub
mov
call
fld
dec
aad
mov
mov
es
inc
xchg
mov
mov
inc
bound
or
dec
lods
cmpsl
cmp
shl
push
cmc
in
sti
in
ret
xchg
clc
hlt
mov
stos
lea
js
shlb
jmp
insb
push
ljmp
mov
fisubl
push
repz
cmp
sbb
sbb
dec
sbb
mov
aad
and
mov
ds
mov
je
or
dec
notl
push
out
ficomps
mov
mov
sahf
nop
and
shrb
out
aaa
add
hlt
lret
scas
mov
lea
ds
adc
fstpl
mov
adc
aas
sub
mov
sub
xor
pop
xor
cmc
sub
and
outsl
add
mov
mov
fmulp
dec
mov
cmp
es
test
loopne
rcr
fisubrl
xor
inc
out
jmp
mov
imul
inc
mov
stos
mov
add
clc
ret
adc
popf
jg
repnz
addr16
dec
inc
jmp
ret
hlt
cmpsl
cmp
fisubs
push
xor
xlat
ljmp
and
sahf
adc
push
lock
push
inc
sbb
outsb
or
ror
in
adc
ljmp
test
divb
insl
popf
or
and
adc
jl
loope
inc
xchg
ja
add
ss
pop
loop
inc
dec
ret
fisttpl
mov
mov
fistl
mov
outsb
dec
test
mov
mov
adc
leave
mov
mov
imul
sbb
shlb
cmpsb
xor
jl
jns
addb
stos
shl
imul
in
add
jp
mov
xchg
sub
leave
and
insb
test
sbb
es
outsb
xchg
inc
inc
xor
xchg
mov
jae
push
lock
notb
xchg
faddp
and
loop
mov
fs
mov
scas
adc
xor
sub
mov
ss
dec
adc
mov
mov
cs
jae
out
gs
gs
in
or
sub
dec
popa
ljmp
fadds
insl
pop
es
lcall
out
sub
jl
mov
pop
or
icebp
xor
icebp
mov
leave
scas
stos
cmpsb
xor
mov
and
shrb
lret
mov
ret
dec
lahf
jecxz
cmp
popa
insl
test
pop
adc
addr16
lods
movsl
mov
in
loope
fnstsw
push
inc
shrb
xchg
dec
mov
add
outsl
movsb
cmp
xchg
mov
movsl
adc
in
out
and
cltd
mov
jae
mov
push
repz
cmpsb
jo
jo
in
icebp
shrl
xor
out
cld
out
xchg
cmc
icebp
rcrb
cmp
adc
ss
jnp
jbe
and
xchg
lds
jo
outsb
mov
shlb
lds
sub
xchg
xorl
repz
sub
mov
push
sbb
jae
cmpb
stc
and
clts
or
stos
inc
out
inc
stc
xor
loopne
sar
push
rorb
shlb
ret
inc
addr16
lret
xor
data16
cmp
ja
ja
test
pop
loop
push
or
in
add
mov
mov
pop
jmp
push
data16
mov
bound
les
push
jno
je
sahf
ficomps
cmp
pop
push
and
clc
cmp
and
sbbb
jge
lahf
mov
mov
ss
or
dec
ss
cmp
cmpsb
hlt
loop
mov
lea
or
xchg
inc
test
xlat
mov
enter
es
push
xor
or
xchg
hlt
out
insb
cmp
lock
jmp
lock
jmp
sub
je
xchg
xor
mov
dec
xchg
incl
push
lock
lahf
sbb
cltd
jecxz
inc
iret
mov
sbb
out
push
xor
xchg
outsb
add
pop
jp
mov
lcall
sub
out
fnsave
push
dec
lcall
stos
pusha
dec
cmpsl
xchg
mov
js
aad
adc
mov
mov
mov
push
in
cmp
test
or
lds
pop
push
xchg
idiv
and
movsl
push
fstl
inc
sti
shrl
int3
xchg
cmp
pop
or
cmp
gs
dec
cmc
sbb
cwtl
fwait
push
in
aad
das
in
push
or
and
ds
int3
sbb
sbb
jg
xchg
push
push
xor
and
add
ds
xlat
popf
xchg
xchg
in
and
stos
scas
pop
sbb
int
xchg
test
andb
mov
adc
inc
cmp
arpl
ds
shll
clc
iret
arpl
xchg
gs
into
lock
imul
popf
xor
rcl
dec
pop
add
int3
scas
push
lds
je
jns
inc
push
fsubr
sbb
lock
dec
cmp
push
std
push
stos
outsb
je
and
hlt
sbb
outsl
inc
dec
add
lods
fistps
icebp
andb
shll
mov
loop
mov
arpl
repnz
pop
scas
mov
loopne
out
arpl
jmp
push
xchg
dec
mov
mov
mov
lock
sbb
pusha
cld
testb
leave
sub
dec
pop
dec
aaa
int
loope
test
imul
or
or
push
mov
test
mov
daa
leave
push
inc
mov
cmp
jg
mov
das
fidivrs
push
jne
or
divb
cmpsb
pusha
push
sbb
jg
mov
inc
inc
sbb
subl
test
xor
mov
sbb
and
dec
jbe
ret
add
jle
mov
test
xor
and
jae
push
call
cmp
jno
lret
sbb
mov
shll
sbb
outsb
dec
and
fdivp
pop
push
jo
lods
inc
inc
lcall
rolb
or
mov
fnstcw
pusha
pop
cmp
cmp
fsubr
add
inc
push
push
mov
insl
icebp
xor
stc
stos
fildl
dec
inc
xor
insb
sub
xchg
out
jbe
cmp
dec
sub
sbb
xchg
and
hlt
imul
dec
ret
cmc
mov
xchg
adc
imul
lret
ret
xor
jmp
je
and
into
mov
and
insb
push
mov
test
mov
pop
lods
out
pop
inc
test
repz
mov
imul
xchg
shr
idiv
cmp
cmp
jae
adc
inc
and
jbe
add
movsl
add
pop
test
orl
dec
js
or
outsl
popa
pop
in
ja
cmp
cwtl
sub
cmp
aam
ret
adc
mov
pop
jge
pop
jmp
pop
pushf
sbb
ret
jne
rclb
sbb
sub
xchg
in
in
jmp
or
cmc
rcrb
data16
mov
into
test
push
push
cli
dec
xchg
out
add
out
adc
jmp
pop
dec
in
inc
sbb
and
repz
dec
addb
sbb
or
adc
arpl
xlat
cmp
xor
test
frstor
data16
add
xor
pop
andl
mov
jbe
cmc
or
mov
mov
xor
scas
pop
jge
lcall
pushf
inc
xchg
gs
or
mov
inc
jae
sbb
aas
and
jp
cmp
insl
lods
fldl
adc
outsb
jmp
mov
repnz
adc
shl
ficompl
inc
adcb
mov
pop
test
sbb
mov
rcr
jbe
sarb
xor
or
out
and
lcall
xor
xchg
ret
mov
jl
sti
rcrl
jp
dec
icebp
adc
shll
push
inc
sub
fistl
jmp
mov
cmc
push
adc
lds
ret
mov
js
sub
xor
cmpsl
pop
adc
dec
hlt
jle
call
icebp
rcrb
xchg
jb
bound
pop
mov
cltd
mov
popl
xchg
lods
rclb
mov
ljmp
sbb
mov
or
outsl
push
push
add
sbbl
xchg
mov
outsb
test
push
insl
ss
mov
lods
sahf
and
xor
cmpsl
insl
ja
movsl
test
inc
or
push
push
mov
pop
and
movsb
xlat
sbb
jae
cli
jle
sub
add
inc
call
dec
adc
mov
insb
or
testb
dec
inc
sub
addr16
xor
call
cmp
mov
sbb
outsl
fdiv
add
scas
aad
xor
lods
test
sbb
out
faddl
mov
and
or
repz
out
mov
lea
loop
mov
xchg
jle
xor
xor
pop
dec
or
and
cmpsl
add
mov
sbb
xor
or
sti
xorb
adc
dec
or
sbb
sbb
cmp
add
insb
or
pop
aas
movsl
iret
and
addr16
out
jno
push
jp
std
js
mov
or
sahf
js
push
pop
scas
xchg
cwtl
xor
loopne
jno
ss
xchg
jp
in
stos
loope
aad
xchg
paddw
ljmp
mov
cmpsl
xchg
inc
inc
xor
lock
mov
xorb
mov
aas
xlat
cmpsl
leave
push
ret
gs
xor
and
imul
jbe
xlat
pop
cld
xor
movsb
loop
xor
shrb
adc
add
addl
inc
testl
mov
push
mov
jmp
xchg
ja
cld
push
movsl
lods
xchg
lds
fcomi
xor
sbb
in
roll
inc
push
lret
mov
push
movsl
cmp
popa
lahf
addr16
push
icebp
push
mov
mov
push
test
sarl
push
loop
jmp
sbb
fwait
inc
loopne
test
mov
and
mov
mov
adc
xchg
cmp
dec
adc
stos
jecxz
mov
rcr
stos
jno
mov
adc
sbb
cmc
gs
sti
inc
xchg
jo
daa
sbb
popa
sbbl
cld
iret
arpl
cmp
es
and
and
xor
std
fisttpll
lret
xchg
adc
jmp
xchg
stc
aaa
addr16
dec
add
idivl
outsb
movsl
loopne
xchg
mov
and
xchg
int
cltd
mov
hlt
clc
mov
xlat
enter
bound
xor
sahf
sbb
popf
test
insb
or
xor
sub
jecxz
mov
sbb
jle
aad
mov
jnp
cmp
movsb
popl
and
addr16
roll
and
push
shll
xchg
lods
jnp
gs
outsl
orb
cwtl
jo
xlat
movsl
ffree
pop
push
mov
pop
mov
fstl
leave
mov
stos
popa
pop
pop
cltd
std
in
pop
nop
jge
sbb
push
out
or
sbb
push
fimull
in
stos
fwait
mov
cmp
cmp
mov
jg
sub
ds
dec
jns
fwait
loopne
push
cmpl
mov
into
popl
cld
lea
fmull
cltd
lods
popf
stos
dec
inc
jbe
push
add
dec
popa
orb
aas
sti
xor
mov
mov
bound
dec
xlat
sub
add
aad
xchg
nop
pop
clc
std
push
fbld
jmp
leave
mov
inc
adc
movsl
sub
mov
js
adc
lcall
inc
js
sbb
pop
cld
push
fnsave
xor
sbb
icebp
jns
popf
ret
mov
push
jbe
test
pop
sbbl
sub
lods
or
pop
jp
inc
sbb
push
shlb
sahf
adc
out
stos
loopne
cmp
stc
and
push
push
fldt
xor
sub
add
gs
dec
mov
sub
push
xchg
mov
mov
hlt
mov
adc
clc
push
or
fsts
pushf
cld
inc
and
pop
inc
int3
ret
inc
mov
cmp
xor
inc
divl
dec
jne
into
pop
or
jle
jae
ficomps
fildll
xor
movsb
popf
pop
lret
push
arpl
inc
pop
add
jle
shll
cli
inc
into
mov
cmpsl
outsl
xor
ss
icebp
pop
aaa
loope
int
lods
pop
jecxz
scas
aas
pushf
sub
jo
push
pop
pop
je
or
movsb
xchg
xlat
cs
add
xchg
mov
add
xor
shl
and
frstor
fs
leave
mov
imul
sub
cmp
mov
push
mov
mov
popf
pusha
cmc
loop
mov
pop
ljmp
inc
es
or
cmpb
mov
pusha
or
sub
push
stc
pop
push
dec
jle
js
das
and
cwtl
inc
inc
jae
sahf
out
pop
cmpsb
sbb
adc
lcall
add
sti
scas
jns
cltd
pop
out
inc
add
pop
inc
fidivl
rol
lret
cld
test
jne
shll
add
push
sbb
xorl
jae
scas
dec
jae
into
mov
dec
pop
popf
jbe
arpl
push
xor
lock
mov
std
nop
into
bound
loope
mov
push
dec
hlt
mov
pop
sub
out
xchg
fildl
icebp
sub
mov
rolb
xor
cld
ds
sti
mov
aaa
add
push
ss
lret
imul
dec
mov
sarb
outsl
mov
fidivrs
int3
cs
ret
xchg
inc
push
loope
inc
std
loope
inc
mov
sub
sub
dec
jge
cmp
scas
xchg
testl
sub
cmp
ret
sbb
imul
cmp
jne
or
hlt
out
cmp
lods
lods
and
inc
add
mov
mov
pop
mov
sub
mov
sti
adc
inc
jp
icebp
add
and
cmpsl
mov
divb
idivl
xor
inc
cmp
push
bound
les
jp
sbb
add
test
mov
adc
lretw
fstl
pop
dec
and
push
jmp
jno
push
pop
jmp
jnp
jecxz
mov
fiadds
mov
shl
xchg
mov
inc
xchg
or
shll
push
in
mov
jp
mov
or
and
add
inc
das
sub
pop
shl
clc
imul
and
aas
jp
sbb
cld
xchg
repz
xchg
cmp
or
add
jg
pop
fidivl
shll
jae
fdiv
mov
cmp
sbb
test
in
xor
mov
enter
push
inc
fwait
outsl
shrl
mov
fnsetpm(287
sub
sub
adc
mov
addr16
repz
jmp
loopnew
pop
scas
fwait
cmp
test
mov
sti
je
lcall
push
popa
jl
loope
into
jl
sub
shll
popa
pusha
cmc
dec
push
adc
cmp
hlt
jmp
add
mov
xor
xchg
imul
dec
cli
lret
jl
dec
xor
movl
and
out
jecxz
movsb
loop
gs
movsl
adc
sub
xor
jo
int
fmul
repz
fildll
pop
iret
push
sbb
and
pop
sahf
add
fsubrl
insl
lea
pop
sbb
fs
cmp
repnz
or
inc
xor
jmp
mov
cmpsl
movsb
mov
and
repz
inc
or
xchg
jbe
fs
or
jle
nop
jnp
addr16
ss
out
jb
jg
repz
shlb
fmull
lds
push
repz
mov
adc
push
xchg
jno
dec
stos
xlat
bswap
pop
push
rolb
xchg
or
xor
and
mov
shl
and
dec
data16
jle
imul
cld
dec
jbe
xor
mov
pop
mov
xchg
sbb
push
xchg
imul
imul
out
mov
aas
xchg
push
shlb
pop
sub
ds
push
xor
push
jo
sahf
inc
mov
xor
jl
dec
push
sub
xchg
test
shr
and
cmp
or
or
or
adc
pusha
into
mov
pop
shll
jle
mov
rcll
cmp
fs
bound
xchg
xchg
lods
push
cmp
divl
fadds
lea
xchg
inc
js
pop
test
inc
mov
jecxz
shll
test
dec
aas
ss
push
inc
and
hlt
cli
addl
shrl
ss
loopne
jnp
xor
iret
popa
mov
gs
cmpsl
into
mov
aad
iret
nop
jle
push
push
iret
mov
add
cltd
cmpsl
sbb
ljmp
push
mov
in
into
xor
push
es
cmp
aad
push
mov
popa
pop
or
mov
jbe
nop
pop
mov
inc
sub
out
fisttpl
xchg
cmp
dec
loop
lds
mov
or
fimull
test
fldenv
adc
pop
cs
mov
xlat
adc
push
pop
fimull
sar
out
and
ss
mov
js
adc
pop
fs
pop
lods
pop
hlt
mov
fiadds
jns
fmul
pushf
push
adc
pop
push
imul
ss
xor
jp
push
mov
sbb
push
sub
inc
rcll
lods
movsl
mov
mov
test
jl
cmc
lds
sbbb
into
lcall
lock
mov
pop
mov
push
imull
out
clc
sub
mov
sub
pop
cmpsl
or
pop
push
mov
ret
push
aas
and
arpl
scas
dec
hlt
lods
loop
jne
jb
insl
push
int
fbld
and
je
addl
mov
mov
dec
inc
out
ret
push
cmp
mov
fimuls
adc
sub
insb
push
dec
adc
outsb
adc
test
xchg
xor
cmp
pop
test
inc
push
and
popa
imul
je
cmp
imul
pop
inc
mov
fldl
out
test
mov
mov
mov
mov
lahf
mov
push
outsb
int3
dec
dec
icebp
sti
xor
dec
nop
repnz
mov
syscall
fwait
mov
fs
sti
addr16
insb
jae
jg
fisttpll
je
js
or
je
cli
cmp
push
cmpb
lret
pop
jbe
enter
xchg
sahf
push
enter
push
pop
nop
popa
inc
movl
or
push
clc
out
or
inc
ret
push
pop
dec
jns
inc
dec
imul
std
xchg
fstpt
add
mov
xchg
sti
push
iret
xchg
lods
out
adc
fwait
lret
enter
int
or
pushf
push
sub
lea
fstps
xchg
test
jo
dec
movsl
jp
fdivrl
or
jge
mov
cmp
in
mov
dec
daa
push
mov
aam
jbe
mov
pusha
jo
mov
ds
push
repz
mov
and
lret
movsb
lods
fldl
mov
stos
pushf
ljmp
insl
push
into
push
bound
cmp
pop
add
mov
ss
and
data16
xchg
adc
ficoms
sub
sbb
inc
sub
cltd
sub
stos
sub
push
sub
xor
pop
mov
push
sub
pushf
rcrb
cmp
negl
shrl
popa
jg
jne
mov
dec
es
rcll
mov
jmp
jle
sub
sbb
std
mov
repnz
jp
mov
or
or
jmp
aad
gs
cmp
mov
adc
iret
ret
lcall
adc
dec
and
loopne
sbb
xor
xchg
aas
xchg
sub
push
or
fldl
outsl
mov
icebp
shl
sahf
mov
jecxz
jg
test
out
pop
out
add
stc
sbb
movsb
int3
sarb
test
in
call
outsl
xor
ret
adc
out
and
loopne
popa
in
pop
cmpsl
imul
test
mov
cmp
sub
nop
ss
jne
popf
lcall
ljmp
sub
outsb
push
test
inc
xor
lods
or
scas
popa
push
xchg
push
ds
ds
movsb
sahf
fdiv
mov
mov
xor
loop
jb
nop
pop
pop
addb
inc
test
aas
mov
sahf
jne
lods
inc
jge
fstl
mov
mov
mov
mov
insb
insb
jne
inc
outsb
sahf
test
sbb
lods
out
xor
inc
cwtl
ds
nop
jbe
aas
scas
daa
xor
loop
jecxz
cmp
push
hlt
add
sahf
jns
cmpsl
or
fstl
sbb
mov
lea
and
mov
pop
add
std
jle
pop
add
and
sub
rcr
and
mov
repz
mov
cmp
dec
jle
and
mov
ficoms
lret
sbb
das
cwtd
stos
mov
out
mov
into
rolb
sub
mov
lret
add
hlt
pushf
sarb
inc
pop
notl
stc
inc
mov
sbb
loope
cmp
cmp
jb
inc
cmp
gs
out
mov
lahf
popa
in
gs
mov
sti
mov
rcll
xchg
sub
shrb
lret
loope
arpl
cmc
enter
and
xchg
xor
push
mov
in
sbb
inc
push
or
and
add
cld
jo
pop
cmc
xor
ja
int
jne
sbb
insl
inc
xchg
xor
add
xchg
pop
xor
cmp
movsb
popa
cld
mov
stos
sub
or
mov
pop
sub
jbe
mov
pop
jmp
iret
loopne
ja
icebp
scas
dec
loop
mov
add
mov
pop
xchg
push
cmpl
daa
cli
shlb
dec
cmp
dec
pop
mov
jnp
xlat
sbb
iret
pop
es
xor
addr16
add
mov
pusha
les
pop
pop
cmp
xor
pop
rorl
fcmovne
jmp
inc
lahf
dec
push
push
clc
clc
das
into
sub
dec
rcrl
adc
insl
fcomi
into
inc
push
cmpsb
aad
imul
push
mov
mov
and
movsl
pop
mov
mov
lret
push
popa
mov
push
lock
cmp
adc
outsb
and
xchg
sbb
jne
pop
xlat
push
rclb
sbb
mov
cmp
loopne
rcrb
sti
mov
scas
loope
outsb
sub
mov
out
daa
lret
test
neg
fcmove
xchg
mov
add
popf
xor
inc
call
xor
mov
sub
mov
and
xchg
jne
xor
shl
sbb
out
test
les
aaa
int3
call
mov
add
pop
insb
dec
lds
mov
jle
std
mov
inc
inc
cwtl
loope
dec
push
std
xor
push
xchg
jb
pop
rorl
leave
jbe
insl
mov
pop
adc
mov
inc
jge
inc
jno
mov
jg
pop
push
bound
mov
pop
xchg
pusha
adc
xor
into
lea
dec
test
mov
inc
clc
dec
push
mov
xchg
sub
dec
add
cmp
aam
insb
outsl
mov
notb
loopne
mov
pop
in
jge
test
mov
mov
mov
mov
out
inc
adc
out
jge
add
outsb
lahf
lods
sbb
and
jge
cld
stc
jb
mov
sub
out
imul
mov
jb
dec
cmp
and
xchg
mov
inc
leave
push
adc
test
push
ret
xor
push
sub
xlat
nop
lods
push
scas
ret
clc
cld
push
and
inc
pop
out
out
jg
xlat
enter
adc
ss
daa
in
xor
stos
pop
bound
fcoms
pop
xchg
cmp
mov
jo
ljmp
loopne
dec
movsb
cld
gs
rcl
div
inc
xchg
mov
jo
fnstcw
lods
scas
in
cmp
into
xchg
outsb
jo
or
js
movsl
jmp
xchg
mov
jle
cmpsl
popa
nop
std
jbe
jns
pop
mov
cmp
ret
pop
ret
sub
ret
pop
test
icebp
mov
into
push
xchg
adc
mov
dec
pop
cld
inc
dec
ja
nop
add
dec
mov
in
dec
or
inc
repz
xchg
sbb
push
je
andl
lcall
daa
loop
cld
push
out
sbb
xchg
adc
mov
mov
es
std
mov
pop
and
sahf
repz
push
icebp
jl
sti
js
out
dec
scas
inc
mov
mov
in
mov
mov
aam
outsl
test
dec
mov
mov
xchg
xchg
push
sub
divb
shlb
test
add
mov
xchg
or
push
push
jle
pop
add
cmp
ret
mov
adc
pusha
adc
mov
mov
daa
cmp
adc
pop
mov
and
push
jecxz
loope
lret
loopne
pop
movsb
clc
pop
iret
fidivrl
pushf
imul
mov
in
rolb
xor
cwtl
test
mov
in
xor
cvttps2pi
in
add
jg
into
jecxz
dec
rcrb
aaa
and
aas
in
enter
ret
mov
mov
movsl
push
lret
ja
in
ljmp
dec
jb
push
mov
inc
lahf
scas
inc
out
cmpl
lret
or
or
xor
int3
mov
rolb
adc
insb
imul
addb
jbe
and
out
adc
sbb
test
clc
xchg
push
push
dec
in
adc
xor
push
sub
pop
push
mov
lods
dec
jno
push
int
mull
daa
js
int3
dec
test
pop
jno
mov
dec
and
jno
cmp
push
std
pop
and
push
dec
jl
or
jns
add
jbe
popf
mov
mov
push
xchg
sub
push
dec
sarl
into
das
gs
sub
scas
pop
push
ljmp
fcoml
add
mov
xchg
daa
add
sti
cmp
sbb
sbb
jo
shl
in
popa
push
fsubr
fisubrs
push
cmp
ljmp
mov
sbb
xchg
std
jns
jno
leave
test
repnz
in
mov
and
cmpsl
stc
andb
cmp
test
test
sbb
dec
repnz
arpl
jnp
aaa
enter
popf
push
pop
mov
pop
push
lods
imul
das
cmp
pop
push
push
mov
outsb
cmp
cmp
and
push
pushf
mov
jecxz
ja
addr16
cltd
divb
ret
fidivrl
lds
shrb
fildl
or
std
mov
sub
sbb
inc
fsts
add
pop
arpl
out
and
mov
dec
sub
mov
mov
mov
and
in
mov
movsl
fisttps
jecxz
in
jl
enter
imul
push
ret
pushf
dec
cld
lock
fcmovb
cmp
inc
adc
enter
jge
add
xchg
fstpt
repz
mov
fcmovb
lods
iret
push
inc
pusha
mov
inc
ljmp
xchg
push
clc
mov
jecxz
and
sbb
xorb
cmp
sub
outsl
shlb
mov
sbb
and
loop
iret
mov
add
aas
dec
movsl
or
or
or
aam
std
lock
add
inc
push
xchg
xor
jo
inc
in
push
mov
pop
dec
push
int
lret
out
xor
mov
sbbl
stc
lods
inc
leave
jecxz
repz
mov
arpl
stos
int3
jp
lods
mov
mov
shlb
sub
push
sub
and
sub
cwtl
xchg
mov
fidivrs
push
push
adc
cmp
shll
nop
mov
pop
sbb
stos
imul
push
inc
cmpsl
cld
push
iret
sub
rol
in
mov
in
xchg
sub
aas
mov
xchg
push
inc
insb
push
add
cmp
xorl
and
jne
mov
dec
sbb
mov
aad
arpl
cmpsb
mov
loopne
mov
xchg
cwtl
in
fstl
aaa
and
add
jne
xor
xchg
or
xor
test
mov
sub
andl
cmp
cmp
cmp
mul
or
mov
xchg
pop
mov
adc
pop
ret
test
clc
sub
stos
movsb
pop
vmwrite
cmpsl
mov
loopne
jns
movsl
adc
lods
popa
int
mov
jns
push
xor
inc
ja
xchg
jno
push
idivl
jbe
adc
test
ret
push
jmp
int
cmp
popa
jnp
leave
test
jnp
aas
scas
sbb
sub
xor
mov
into
add
rorl
mov
push
movsl
xchg
and
repnz
and
adc
arpl
mov
sub
cwtl
xlat
faddl
das
andb
or
cmp
cmp
adc
mov
adc
jae
pop
inc
out
sbb
shlb
lods
fwait
andb
pop
xchg
call
out
test
into
xchg
add
mov
xchg
jle
add
cmp
scas
and
dec
sete
jge
test
and
ljmp
sub
mov
xchg
shll
or
out
mov
rorb
adc
aaa
fcom
call
stos
fistl
ja
inc
mov
stos
movsl
call
inc
cwtl
sti
mov
in
jge
ret
cmpsl
loop
jecxz
jo
pushf
pop
mov
inc
dec
mov
stos
dec
and
add
ss
fists
push
enter
mov
or
movsb
mov
loopne
mov
hlt
mov
pop
repnz
movsb
xor
cltd
imul
cmpsb
push
mov
lcall
mov
das
sub
out
int
in
aas
xchg
loopne
fidivl
lret
sbb
pop
cmpsb
inc
nop
jb
mov
mov
test
pop
inc
sub
cli
xor
xchg
repz
push
jl
adc
loop
or
and
mov
loopne
lods
arpl
inc
gs
popa
mov
lds
lahf
mov
in
mov
dec
adc
insb
fsubrs
ret
add
push
fidivrl
test
fisttpl
lods
loop
cmpb
faddl
mov
inc
loope
mov
pop
call
stos
inc
in
clc
lea
insb
dec
stos
nop
rorl
adc
pop
jmp
sbb
lds
fcmovnb
push
cmp
xor
dec
dec
pop
adc
int3
rorl
fnstcw
and
or
adc
push
js
aaa
xor
ja
xchg
sbbb
pusha
push
scas
add
inc
jp
xchg
xchg
cld
fucomi
xchg
lret
stos
bnd
and
out
lods
lds
rolb
xor
fdivs
mov
or
insb
push
roll
cwtl
loope
into
mov
roll
sbb
daa
testl
and
movsl
lcall
push
sbb
sti
repnz
or
lods
cli
jg
int
outsb
pop
stc
rol
enter
xor
or
inc
aam
cltd
or
clc
sti
push
pushf
cmc
lods
pop
fwait
popl
mov
dec
jae
jge
pop
scas
aam
shl
iret
data16
rcr
xor
test
movsb
hlt
dec
jge
push
insl
sub
gs
fsubrs
lcall
mov
sub
test
aad
ss
cmp
mov
sbb
ret
out
jge
call
pop
and
arpl
addr16
gs
movsl
movsl
adc
clc
addr16
cmp
jae
loope
repnz
scas
jb
insl
inc
in
fs
fisttpl
imul
inc
mov
push
jae
add
mov
push
int3
jge
push
test
ss
xchg
xor
sti
add
das
sbb
and
mov
xchg
outsl
mov
sbb
stc
push
arpl
pop
out
mov
adc
in
rorb
xor
jge
mov
stos
push
ja
dec
clc
clc
stos
jbe
test
mov
arpl
jp
rcrb
inc
ss
adc
stos
rcl
clc
add
stos
ret
and
js
nop
jecxz
jle
mov
add
push
das
xchg
pop
add
sbb
daa
cld
cmp
or
add
popf
ja
xor
aaa
pop
push
vmaxps
xchg
mov
cmp
les
lret
ror
testb
aam
cmp
imul
gs
mov
inc
add
stos
push
jmp
mov
pop
jg
movsl
inc
adc
mov
sub
cmp
mov
popf
pop
sub
das
xchg
lods
mov
arpl
mov
fstps
shl
lea
repnz
jo
enter
rorl
xor
dec
aam
dec
jl
adc
or
icebp
dec
popa
bound
stc
or
push
int
cmc
and
outsl
mov
fcoml
add
jno
sub
sar
aam
in
add
or
pushf
sbb
popa
dec
push
fsubl
mov
xchg
jmp
into
and
cmc
lcall
stos
dec
sahf
mov
std
push
arpl
lock
loop
ret
and
xchg
stos
jno
test
add
xor
xchg
jo
mov
jecxz
sbb
cmp
addr16
das
mov
into
sbb
push
cli
add
pop
jno
cs
fsubs
das
sbb
scas
dec
mov
push
and
iret
out
sti
andl
inc
data16
pop
pop
pop
outsb
xchg
jecxz
jno
daa
les
lock
cmp
mov
xchg
adc
xchg
add
mov
xor
sbb
ds
xchg
aad
pushf
fwait
dec
fcoms
into
cmp
addb
insb
cli
push
or
xor
ss
cwtl
fwait
push
insw
int3
mov
test
aaa
out
nop
or
inc
fnstsw
sti
clc
ror
jp
pushf
in
aad
fnstsw
lock
push
in
stc
and
aad
sub
add
sub
nop
arpl
inc
and
aad
xchg
repz
pop
or
dec
mov
mov
dec
in
push
loope
xchg
xlat
mov
jno
sti
nop
decb
vmread
dec
lock
jl
lahf
fdivrs
movsb
inc
jmp
add
cmp
lods
fistpl
push
scas
adc
out
inc
push
mov
sub
sbb
xor
adc
jecxz
lock
lret
fs
subl
movsb
jnp
sub
mov
or
cmp
lret
mov
in
cld
addb
stos
xchg
adc
push
lock
jg
test
in
test
jle
aad
les
and
inc
pop
mov
repz
sbb
es
pop
ljmp
iret
mov
stos
pop
inc
xorb
inc
jnp
scas
cmp
call
xchg
fistpl
inc
pop
jl
out
int
and
lret
aam
sub
add
jbe
mov
movsl
xor
sbb
xorb
mov
or
sbb
stos
push
sti
xor
mov
imul
adc
dec
lock
enter
inc
jmp
cmp
xor
popa
loope
mov
rcr
sbb
xor
rorl
mov
xor
fwait
dec
popf
hlt
aad
inc
inc
pop
nop
jne
add
std
push
es
jmp
xor
jne
pushf
xchg
lock
mov
imul
mov
push
pop
int
adc
cs
loope
imul
dec
pop
cli
stos
inc
addl
aad
add
pop
iret
shrb
or
outsb
notl
jecxz
xchg
int
loop
mov
movsl
mov
xor
sbb
push
clc
push
mov
adc
mov
xchg
mov
rclb
mov
mov
std
popa
sub
sti
outsl
cmp
lods
aam
shlb
push
out
jnp
push
into
sub
pop
fisttpl
daa
xor
loop
movsb
sbb
inc
cmp
int
mov
mov
push
out
jg
add
loopne
xor
daa
push
subl
fs
mov
test
sarl
out
lret
dec
cmp
xchg
lea
popa
sbb
mov
push
ret
add
aas
and
sahf
test
and
cli
data16
xchg
aaa
insb
mov
repnz
add
mov
push
cmp
loopne
xchg
mov
out
stc
int3
mov
test
fldcw
call
shll
repnz
into
insb
pop
aam
mov
div
dec
clc
dec
jae
push
int3
lcall
jmp
mov
hlt
xchg
and
incb
fisttpll
into
cmp
lea
jmp
pop
push
sahf
ret
imul
je
mov
scas
pop
jle
jno
add
xchg
mov
xor
inc
sub
into
add
outsb
iret
lock
xor
and
xchg
rclb
lock
cld
fwait
or
xchg
addb
push
push
xor
into
cmpsb
xchg
fstps
out
dec
in
aam
rcrl
inc
dec
xchg
push
and
ret
jg
xlat
daa
out
iret
xchg
in
sbb
push
pop
xor
fdivr
ljmp
movsb
xor
cmp
dec
hlt
outsb
rorl
dec
js
fcmovbe
call
in
sbb
xchg
xchg
ja
sti
stos
out
in
push
hlt
mov
pop
pop
dec
jae
push
and
scas
cmp
and
push
imul
insb
adc
or
pop
lock
aas
jmp
push
inc
adc
mov
inc
sub
lods
movsb
lods
add
mov
cmp
nopl
test
jb
add
pop
int
lret
xor
mov
pop
stos
ljmp
xchg
lahf
xor
iret
cmp
das
call
push
mov
lods
pop
fists
in
mov
xchg
push
iret
mov
or
int3
lahf
xlat
repz
sahf
mov
add
inc
mov
sahf
in
insl
cmp
jl
pop
mov
pop
repnz
lods
pop
dec
xchg
je
pandn
xor
mov
pop
test
sti
adcl
jmp
and
lods
adc
fwait
push
or
mov
das
and
adc
jmp
ret
lahf
mov
or
in
cmp
in
xchg
xchg
outsl
ja
adc
fsts
push
pop
cmp
push
add
out
js
mov
repnz
insl
cltd
push
add
jl
test
testb
adc
imul
fldcw
arpl
rol
and
pushf
rorl
inc
fidivs
fildll
xchg
add
mov
xor
cmpsb
xchg
fimuls
scas
push
push
test
pop
fildll
fs
cmp
lods
sbb
cmp
xor
and
push
xor
sbb
and
sub
mov
pop
shlb
int3
loop
pop
dec
push
mov
jg
cmp
jne
xchg
out
pop
jnp
sub
and
inc
dec
enter
repz
mov
cmpsl
sbb
dec
lods
and
xchg
jp
test
inc
jbe
jno
inc
mov
dec
movsb
jmp
les
icebp
xor
les
mov
cli
push
repz
pusha
pop
ret
in
lea
xchg
mov
enter
mov
iret
inc
push
pushf
push
mov
inc
fsubrl
divb
loope
mov
jbe
sbb
pop
mov
adc
out
push
iret
adc
icebp
in
jmp
or
sub
ja
or
cli
in
ficomps
mov
scas
xlat
mov
xchg
out
insb
ss
aad
scas
cli
add
jp
inc
les
mov
out
xor
xchg
jg
mov
adc
addb
sub
loope
push
sbb
lods
das
dec
xor
jno
push
inc
rcrb
addb
mov
adc
out
test
cmp
jmp
adc
out
add
loopne
fmulp
je
cwtl
pop
int3
jne
rcll
jo
ret
idivb
pushf
add
jbe
fstpl
enter
push
test
dec
scas
push
xor
sti
cmp
movsb
idivl
rclb
inc
fmuls
pminsw
push
push
es
addr16
push
leave
mov
dec
jb
jmp
popa
xchg
lods
stc
jg
xor
cmp
sbb
sub
xor
imul
data16
mov
outsb
insb
sub
loopne
sub
test
inc
add
movsl
mov
arpl
mov
bound
test
hlt
inc
int3
out
gs
mov
mov
into
out
stos
inc
dec
movsl
int3
push
negb
xchg
dec
sbb
dec
ljmp
cli
or
stos
xchg
mov
and
pop
push
leave
in
cmpsl
jl
push
jns
mul
jmp
cs
mov
mov
mov
pusha
aad
out
sbb
add
movsl
cltd
outsl
insb
mov
xor
jg
sub
xchg
dec
test
popa
out
pop
add
dec
cmp
iret
in
mov
push
push
gs
add
int
dec
adc
mov
in
push
ja
imull
jp
mov
test
repz
popa
stc
out
add
sbb
mov
jns
mov
test
orb
cmp
mov
lods
inc
cmp
mov
test
cmpsb
push
push
pop
cli
shrl
loopne
test
or
sbb
push
out
mov
xchg
push
js
adcb
bound
adc
int
int3
aas
cwtl
and
add
fsubrl
pop
mov
mov
inc
cld
xchg
lods
sub
fldt
pop
enter
ss
iret
xchg
inc
test
sub
hlt
sbb
aam
xchg
xor
jecxz
sbb
ljmp
ljmp
leave
loope
cmp
or
out
mov
push
dec
sub
jo
jl
xchg
inc
into
int
sbb
stos
push
or
ret
out
into
pop
push
inc
data16
mov
arpl
fldt
mov
arpl
mov
dec
inc
fisubrl
hlt
xor
mov
dec
data16
and
incl
in
or
clc
in
mov
loopne
pop
inc
cmp
mov
ss
adc
daa
xchg
je
mov
aas
cmp
dec
pop
xchg
sub
stos
or
pop
jns
jo
mov
or
push
or
mov
pop
or
jne
inc
rolb
ret
sub
dec
leave
add
leave
pop
cmp
out
pause
popf
cmp
mov
cltd
inc
in
cmp
dec
sbbl
test
or
fisttpl
fbld
cmp
mov
dec
push
cmp
xchg
scas
mov
pop
cmp
in
cs
adc
mov
adc
lret
mov
stos
fcom
pushf
dec
repz
rorb
loopne
adc
data16
sub
xor
test
mov
or
int3
movsb
jge
insb
xchg
pop
xor
mov
mov
push
nop
lcall
or
je
addl
sahf
das
sbb
dec
or
mov
pop
inc
pop
ja
in
pusha
pop
mov
out
dec
dec
icebp
icebp
mov
sbb
dec
sub
mov
xor
mov
cmp
pop
bound
xor
in
mov
aam
cmpsl
and
jmp
in
jno
out
jbe
sub
and
and
mov
out
sbb
das
mov
rcrl
push
rcrl
in
inc
mov
push
mov
adc
and
push
cmpsb
iret
das
sarb
cmp
cmp
sub
stc
mov
push
adc
add
inc
outsl
lcall
outsl
arpl
je
call
shll
ret
notl
out
dec
cmp
xchg
fs
xor
pop
fdivs
jl
mov
pop
ret
into
movsb
or
sbb
inc
or
adc
scas
jae
jno
lock
cwtl
push
push
cmp
js
xor
imul
ret
pop
dec
into
rolb
jl
dec
jb
aas
sub
lods
cmpsl
pop
add
sub
mov
jae
dec
jb
mov
xchg
sub
dec
mov
mov
inc
int
popa
cld
sub
iret
push
pushl
xor
dec
sub
cmp
cwtl
cmp
inc
lret
rcrl
mov
mov
rcr
cld
popa
or
test
dec
add
rcl
shll
cmp
or
jecxz
lret
lds
add
adc
call
ds
cmpsb
sbb
movsb
sti
add
sbb
xor
pushf
call
inc
test
daa
cli
inc
xor
out
rcl
mov
lahf
clc
sub
push
xchg
inc
jmp
test
lds
ljmp
xchg
in
sub
cmpsb
test
cld
pop
sbb
aam
insl
adc
mov
cmp
xchg
dec
bound
mov
icebp
mov
and
cmp
jo
xchg
sub
shlb
mov
fstps
inc
dec
in
jle
out
ja
adc
dec
jne
es
lds
int3
nop
insl
mov
insb
jb
cltd
mov
or
pop
mov
lcall
jle
pop
scas
aas
aad
sub
in
xchg
sbb
fsubrs
ds
subb
sahf
add
and
lcall
push
jmp
cmp
outsb
mov
loopne
test
movsb
hlt
mov
subb
lahf
mov
push
adc
and
push
out
test
ljmp
orb
xchg
dec
xor
test
pushf
xor
mov
mov
in
das
jbe
cs
dec
outsl
add
pop
out
aas
icebp
xor
add
fistpll
xchg
adc
pop
mov
mov
and
loop
movl
dec
xchg
js
in
add
push
sbb
fisubs
mov
movsb
sti
aam
in
lods
ss
arpl
lds
rcll
push
and
sti
push
or
out
and
inc
push
nop
repnz
sbb
dec
std
pop
mov
leave
add
and
sbb
and
pop
ret
jecxz
shl
sub
pop
xor
or
shlb
pop
int3
sub
sbb
push
movsl
mov
sbb
fistpll
adc
sbb
cld
cmp
icebp
rorb
xor
push
loopne
mul
sbb
fistpl
cmpsl
out
test
out
or
mov
and
mov
hlt
jno
dec
sbb
cmp
jmp
jno
js
pop
loopne
fstpl
ljmp
lcall
sbb
mov
out
out
test
insl
popa
cmpsb
or
repz
data16
lcall
sub
mov
xchg
in
sub
ret
sub
xchg
mov
mov
mov
insl
call
repz
push
xchg
nop
jg
pop
jns
mov
lret
mov
aam
xlat
lea
xchg
outsb
dec
ret
aaa
xchg
jp
and
out
gs
xor
pop
arpl
jmp
xor
jp
dec
and
js
or
ss
lock
push
xchg
sarl
or
adc
repz
pop
lret
adc
pop
notl
fisttpll
inc
or
pop
scas
je
jecxz
mov
jb
xchg
bound
scas
inc
gs
loope
inc
add
call
mov
sete
gs
lock
inc
push
mov
idivl
insl
andl
jnp
leave
scas
ds
push
xchg
pop
fistps
lahf
sbb
jo
call
dec
and
xchg
push
mov
insl
add
divb
add
xchg
add
fdivr
xor
out
lcall
dec
imul
dec
sti
push
xchg
push
push
roll
push
nop
jge
add
push
lock
sub
jg
push
and
sbb
push
rcrb
jecxz
inc
mov
inc
jne
pop
push
pop
fs
mov
or
xor
rcrb
inc
neg
jmp
loopne
bound
sbb
into
xchg
pop
shlb
add
xchg
cmp
or
loop
incl
popa
fstpl
push
sub
lea
repz
fnsave
cmova
pop
dec
sub
jle
lcall
prefetch
or
rolb
xchg
fcompl
pop
inc
movsb
sub
jmp
bound
push
push
aas
xchg
int
mov
xor
loope
test
mov
mov
fwait
sbb
push
iret
in
mov
test
adc
dec
adc
pop
sbb
daa
in
shlb
add
nop
mov
push
cmpsl
mov
add
pop
xor
aam
xchg
mov
jbe
stos
mov
loop
push
inc
cmp
pop
out
ds
ja
daa
pop
add
dec
stos
mov
lea
jno
out
addr16
call
and
fcoml
insl
leave
push
ja
ljmp
subl
outsl
inc
pop
adcl
xlat
dec
test
mov
cmp
in
xchg
mov
add
cld
mov
rcrl
sbb
jmp
fdivrs
inc
cmpb
jp
cmp
mov
jbe
push
mov
adc
lods
sbb
mov
mov
xor
mov
xchg
xchg
mov
ljmp
fwait
icebp
fwait
mov
xchg
add
mov
push
push
mov
cmpsb
mov
xchg
dec
aaa
mov
cmp
lcall
lret
movsl
enter
pop
je
jge
jns
clc
nop
adc
sbbb
xor
or
xor
push
or
cltd
sub
inc
out
cmp
xorb
mov
dec
loop
in
rcl
ss
in
dec
das
imul
adc
lret
adc
in
les
loope
jg
pop
stos
divb
cmpl
mov
push
jecxz
jne
stos
pushf
les
cmp
testb
sbb
into
addr16
jo
neg
je
imul
fwait
jle
push
ret
sub
mov
mov
cmp
aas
lea
loop
in
sarb
ljmp
mov
cmp
call
into
mov
pop
in
mov
fs
dec
aad
cmp
xchg
xor
sub
movsl
lea
arpl
int
rcrl
int
loop
push
xorb
testb
mov
xor
ds
xchg
ret
mov
or
fxtract
subb
jb
jl
cmp
cli
jle
mov
push
add
add
mov
sahf
jbe
jnp
rcl
mov
add
clc
push
mov
or
inc
rol
data16
hlt
xor
lds
cmp
xor
jbe
fisttpl
push
int3
inc
push
call
leave
push
mov
sbb
mov
in
cmp
adc
add
sub
push
popf
sidtl
aas
movaps
int
insb
push
fisttpll
mov
mov
scas
cmp
pop
dec
orl
sub
dec
out
sbb
aad
ljmp
shrl
pop
pop
fs
aam
push
push
dec
pop
mov
cmc
stos
inc
fdivl
sbb
mov
or
jb
xor
or
xor
hlt
popf
insl
addl
xchg
popa
push
push
jge
mov
inc
in
popf
lods
jl
and
shrb
loope
rcll
sub
test
mov
mov
dec
jecxz
ja
gs
push
mov
sub
cmp
mov
nop
mov
mov
dec
ss
mov
push
cmpsl
cld
sbb
pop
mov
dec
sbbl
jmp
ret
inc
or
push
cwtl
or
aas
sub
push
pop
push
mov
iret
dec
aaa
movsl
mov
outsl
jmp
sub
fs
in
dec
loop
mov
mov
push
movsb
loopne
mov
comiss
sub
nop
bswap
mov
mov
outsb
cmp
sub
lret
lret
fistpl
lods
addb
ss
insb
cli
mov
xchg
inc
adc
jg
test
xor
nop
or
cs
mov
sti
lds
xchg
insl
cltd
and
jp
push
mov
ljmp
iret
push
push
inc
mov
mov
xchg
andl
loope
push
addr16
frstor
jne
xchg
cmp
js
xor
pop
pop
rclb
bound
outsl
and
jecxz
in
stc
sub
pop
test
adc
jns
js
movsl
imulb
inc
inc
mov
sbb
fwait
or
notb
cmp
jle
mov
repnz
jae
inc
adc
push
movsl
mov
rol
lock
fsub
daa
add
ja
pop
xchg
das
adc
sti
addr16
icebp
mov
and
pop
call
mov
je
xor
and
cmp
andl
pusha
or
or
gs
rorb
sbb
aaa
imul
lahf
xor
inc
mov
aad
shrl
inc
mov
xchg
cmp
fidivrl
lods
push
adc
popa
inc
sub
js
je
fidivs
mov
negb
fistpl
popf
inc
mov
icebp
jmp
aaa
or
pop
cmc
ljmp
inc
inc
in
dec
int3
imul
mov
mov
dec
into
add
cmp
pop
lret
cmpsl
add
add
or
xchg
mov
lret
lret
push
xor
out
lret
push
mov
add
aam
or
xor
stos
scas
cwtl
push
hlt
xor
adc
adc
dec
xchg
idivl
inc
dec
or
sbb
fbld
rclb
or
jns
adc
jne
cmp
dec
xchg
loope
test
sub
lods
in
and
sbb
mov
inc
sbb
adc
lock
nop
sub
insl
push
icebp
cmp
mov
sub
push
jbe
into
jp
scas
into
adc
dec
es
mov
nop
sti
pop
push
mov
lret
bound
mov
xlat
enter
push
xor
pop
xchg
arpl
popa
dec
or
test
bound
leave
mov
shll
popf
iret
push
dec
adc
cmp
fldcw
and
scas
push
xchg
jg
cmp
out
stos
or
adc
cld
dec
xchg
or
repnz
cmp
and
push
in
cs
lds
nop
jmp
sbb
inc
adc
push
scas
mov
int3
fs
xor
jns
outsb
xchg
mov
fbstp
mov
or
or
loopne
scas
xor
test
popa
xor
loopne
pop
jle
fbstp
and
pop
mov
jno
dec
fwait
adc
lods
loopne
daa
push
dec
or
and
inc
jne
cmpsb
pop
clc
aas
mov
add
les
imul
xor
out
subl
sbb
out
pop
mov
arpl
mov
or
jno
shr
pop
push
fcmovb
fnstsw
pop
insl
call
shr
das
out
movsl
rcr
shlb
outsl
mov
out
in
or
or
pop
pusha
cmp
imul
xor
data16
jp
or
scas
xchg
or
adc
and
jg
movsb
negb
in
fnsave
add
stos
repnz
aad
addb
lret
out
mov
jnp
enter
cli
inc
push
insb
mov
call
cwtl
and
sub
push
lret
xchg
test
pop
pop
mov
sbb
sbb
pusha
inc
iret
fimuls
and
pop
sub
dec
popf
or
push
test
push
out
cltd
imul
cmp
fisttps
int
adcl
repz
push
cmp
repnz
rcr
dec
inc
fmulp
lods
sahf
icebp
xchg
and
xchg
stos
out
inc
push
stos
lahf
lahf
xchg
xorl
andl
mov
sbb
xchg
cs
and
cmp
sbb
ja
out
scas
stc
cmp
cmp
mov
in
or
arpl
mov
xlat
lods
mov
jl
sub
clc
mov
push
add
jbe
mov
into
xchg
add
pusha
out
shrl
fsubs
sbb
ret
into
push
nop
fmul
mov
jbe
outsl
xchg
jno
cmp
adc
sarb
push
xlat
lahf
cs
cwtl
adc
and
cs
sub
xchg
mov
push
ljmp
jne
pop
ss
call
push
js
lods
in
stos
cmp
and
ljmp
xchg
jp
fisubrl
ficoms
leave
xchg
jae
jmp
lods
mov
pop
sti
push
sbbl
mov
sbb
xorb
insl
jo
cld
cmc
adc
jmp
pop
aam
adc
mov
out
dec
bound
fs
mov
iret
pop
in
outsb
daa
jnp
outsl
dec
pop
cwtl
leave
mov
xchg
pop
mov
or
push
lock
stos
sbb
cmpsb
daa
mov
lea
std
or
leave
dec
sbb
popf
repnz
out
xchg
fildl
scas
pop
dec
out
aaa
jnp
inc
ror
adc
mov
pop
push
loope
jge
es
inc
mov
jnp
mov
jae
mov
je
dec
add
int
loope
mov
int3
aas
bound
dec
sarb
jmp
aas
fbstp
add
sbb
cmp
jecxz
adc
ds
push
pusha
cld
mov
pop
push
inc
pop
mov
ja
loope
push
inc
loop
mov
pop
popa
mov
test
jo
xchg
and
dec
mov
cmp
cmp
cmpsl
xor
push
pop
xlat
das
fbstp
jns
jnp
popf
int3
xchg
or
sbb
mov
push
sarb
xlat
mov
mov
cmp
pushf
mov
flds
mov
sub
pmuludq
adc
ljmp
or
xor
cmpsl
pop
adc
jae
mov
rorl
or
or
sub
shlb
andb
inc
lock
and
ret
ror
dec
sub
xor
xor
adc
xchg
add
jl
nop
fisttps
xor
mov
sub
push
sub
stos
sub
add
fldenv
inc
adc
lret
mov
xchg
ds
sbb
hlt
adc
pop
add
sbb
add
out
adc
add
out
mov
in
sbb
sti
and
lea
das
cmp
inc
jmp
fildl
outsl
imul
add
mov
cmc
jge
ret
shll
pop
aam
sbbb
and
movb
and
stc
lods
dec
fldenv
dec
mov
cmpsl
mov
rcrl
les
imul
sub
sahf
dec
incl
sub
mov
scas
mov
jnp
or
xchg
jbe
cmp
mov
xchg
rorb
inc
call
xlat
lea
popf
dec
mov
loope
lods
ds
mov
test
loop
cmp
inc
sarl
xchg
out
mov
into
pusha
les
fdivs
inc
pusha
test
lret
add
xor
add
xor
imul
sub
les
aam
push
or
push
orb
push
std
repz
jo
mov
rclb
pop
sub
repz
push
jge
jecxz
scas
shll
sub
int3
aaa
adc
loopne
jns
cmc
mov
or
inc
lock
xchg
les
frstor
mov
cmp
add
xor
loope
dec
jb
mov
repnz
add
int
imul
cltd
sub
in
nop
or
xorl
xchg
leave
clc
stos
sbb
jle
adc
out
pop
cld
push
ret
push
xor
dec
jb
int
imul
cmpsl
xchg
outsb
inc
cmp
jecxz
lea
or
pop
out
sahf
fisubrs
pop
jnp
push
push
add
hlt
push
cmp
and
push
xchg
shl
iret
rcll
push
and
cmp
sbb
cmp
fisubs
xchg
in
out
and
jae
mov
test
fcompl
and
mov
insb
jb
mov
ljmp
push
add
insb
mov
into
adcb
and
mov
push
jle
clc
jae
xchg
mov
xor
enter
xor
jl
xor
test
inc
loope
cmp
test
pop
or
call
in
sub
cmp
dec
fnsetpm(287
test
push
adc
lret
repz
add
mov
in
movsl
loopew
rcrb
fldcw
bnd
std
out
push
les
aam
pop
insb
addr16
push
sbbl
mov
bound
or
fdivrl
jecxz
adcb
aaa
lock
ljmp
pop
or
pop
push
add
add
adc
adc
mov
jnp
ret
mov
ds
aad
clc
sysenter
hlt
sub
cmp
add
mov
clc
mov
into
and
or
lods
imul
lcall
scas
jno
add
cli
test
ljmp
push
cld
testl
push
push
adc
movsl
and
adc
lea
cmp
in
fidivrs
lods
inc
fbld
add
mov
jbe
pop
xchg
jecxz
inc
arpl
xchg
cmpl
cmc
inc
repnz
dec
inc
jb
andb
hlt
jmp
daa
push
ret
insl
andl
mov
into
imul
pop
rorl
mov
hlt
fsubr
lahf
es
cli
lods
mov
pop
push
and
fsubrp
inc
fmuls
cmp
and
in
fcmove
mov
stc
jbe
mov
lret
lds
fldcw
shrb
je
ds
cmp
cmp
out
or
jnp
test
pop
jge
jae
out
sarb
or
xor
sub
aaa
aad
push
mov
push
std
fidivl
iret
stos
sub
inc
cld
jl
not
test
call
dec
scas
adcb
loope
in
ret
enter
pop
mov
popa
into
popw
add
pop
int3
add
stos
mov
in
imul
sbb
push
pop
imul
in
jae
dec
adc
sbb
ss
jnp
and
sbb
dec
cmp
nop
or
insl
bound
bound
ljmp
out
daa
test
mov
out
jno
add
mov
or
pop
jb
jl
clc
mov
and
pop
dec
repz
test
mov
jge
mov
adc
push
in
outsl
lods
shrl
lcall
push
outsb
push
stc
jg
lods
mov
fdivs
mov
pushf
jmp
lea
jne
pop
stos
loope
push
mov
sub
adc
iret
insl
jae
adc
cmpsl
aas
stc
dec
enter
loop
cmc
std
out
fsubl
and
and
movl
dec
stos
sti
mov
inc
cmp
popf
hlt
pusha
jbe
fwait
sbb
adc
enter
push
fists
into
or
sbb
cmpsb
mov
mov
mov
adc
das
not
adc
leave
inc
out
cmp
sbb
fbld
cmc
lods
subb
jg
cwtl
sbb
in
xor
dec
cld
adc
push
mov
and
cmpsb
sbb
add
cs
aam
jno
or
jbe,pt
sahf
inc
ljmp
les
inc
dec
pushf
mov
xchg
jg
sub
daa
pop
loop
mov
xchg
inc
mov
inc
iret
jle
xchg
cmpsl
call
jg
popa
fs
sub
lods
scas
jl
pop
and
xor
scas
sub
test
test
lea
jecxz
mov
pop
in
adc
sub
fldenv
clc
xor
cli
lret
in
testb
xchg
pusha
das
xchg
inc
mov
call
pop
cld
mov
sarl
sbb
test
cmp
idivb
lods
push
fsubl
sbb
popf
push
nop
cmp
fisubl
xor
mov
pop
push
adc
mov
sub
adcb
test
inc
out
ds
push
pop
repnz
adc
push
insl
data16
popa
pop
sbb
xor
mov
out
js
fisubl
mov
stc
sbb
out
loop
sub
mov
fwait
sub
mov
mov
out
xchg
mov
in
sub
lcall
inc
and
mov
sahf
push
data16
shlb
xor
pop
enter
cmpsb
inc
loope
jae
inc
je
xor
sbb
imul
cltd
mov
pop
push
jle
add
lcall
jae
fwait
aaa
jecxz
mov
fstpl
dec
daa
dec
mov
mov
mov
stos
cmc
dec
arpl
je
leave
xor
iret
adc
arpl
clc
xchg
xchg
lock
iret
and
rorb
lcall
cs
sub
lret
loope
ret
add
inc
adc
loope
std
inc
in
xorb
mov
icebp
movsl
fisttpl
fidivs
pop
pop
jns
jl
dec
push
addr16
pusha
loop
fwait
inc
imul
stc
mov
push
xchg
push
movb
add
xchg
pop
adc
cmpsl
aas
mov
fstpl
add
jns
aam
fidivs
stos
fnstsw
add
and
shll
inc
loopne
xchg
cmp
dec
adc
sbb
pop
flds
or
push
dec
test
xchg
lret
stos
lock
lods
cmp
jno
mov
loop
jbe
inc
mov
icebp
lea
ljmp
pop
fists
adc
sub
add
lock
xchg
push
cli
mov
mov
jno
into
xor
xchg
fucomip
or
bound
and
insb
cwtl
inc
pop
and
pop
nop
add
pop
daa
jno
inc
sbb
jmp
or
add
jne
out
mov
paddb
pop
movsb
test
dec
xchg
andb
mov
negl
int3
hlt
scas
nop
xor
jo
and
and
inc
pop
movsb
or
sbb
call
psubusw
cmpsb
jg
out
int3
xor
pmaxsw
xor
stos
sti
bound
bound
dec
cmp
jge
in
leave
xchg
adc
pop
imul
loope
or
scas
mov
test
add
shll
in
push
xor
out
mov
cmp
pusha
push
shld
in
mov
jnp
jle
sti
fiaddl
std
sub
inc
jg
lret
inc
test
mov
jns
mov
xchg
sub
int3
in
lds
pop
cmp
scas
push
push
sbb
repnz
addr16
shl
mov
mov
lea
arpl
cs
aas
repnz
daa
jns
scas
inc
xchg
fisubl
push
daa
inc
jmp
ja
std
jp
dec
or
adc
jl
mov
cld
insl
xchg
fidivs
call
or
dec
push
nop
lock
pop
mov
add
and
mov
mov
bound
push
outsl
inc
aad
rcll
lods
cvtpi2ps
movsl
lds
fdivr
enter
iret
pushf
xchg
dec
add
faddp
dec
cli
push
xor
std
mov
loopne
ss
loopne
dec
aad
push
mov
mov
sub
jmp
sbb
cmpsb
jb
inc
jo
mov
sub
xchg
or
ljmp
xchg
ljmp
repz
jle
sub
inc
xchg
xchg
gs
push
repnz
push
cmpb
clc
or
lea
lds
mov
dec
sbb
mov
repnz
leave
add
xchg
dec
int3
jge
and
and
lods
jge
xchg
cmp
clc
mov
push
jg
add
sbb
pop
negb
xor
out
pop
dec
insl
gs
jl
jnp
cmp
push
movsb
mov
fcmovbe
inc
xchg
imul
push
stc
mov
std
in
insb
lret
incb
lds
add
gs
add
xchg
xchg
cmp
icebp
int
sub
push
inc
pop
mov
or
push
fiadds
es
xlat
sub
dec
das
inc
dec
loop
sub
jcxz
fisubs
cmp
mov
xor
test
ret
mov
ljmp
mov
fs
lcall
cmpsl
inc
and
push
test
and
xlat
std
jecxz
aam
and
sbb
daa
setne
mov
fistps
and
imul
cmp
cmc
sbb
sti
mov
out
lea
and
ljmp
repz
fs
jge
pop
inc
mov
enter
adc
ret
int
bound
jl
push
mov
mov
stos
mov
mov
adc
add
cld
movsb
loopne
cmp
cmp
fsubp
gs
mov
daa
lock
lea
mov
xor
test
mov
xor
jl
inc
jp
xchg
pop
stos
and
out
inc
jns
sbb
ret
lea
push
pushl
imul
mov
cmp
dec
pop
call
andb
mov
sub
cmp
mov
dec
insw
in
int
stos
xor
movsb
dec
cmp
pop
xchg
inc
pop
popf
dec
call
das
or
inc
mov
stos
jle
pop
pop
rcrb
cld
stos
pop
jg
cmc
stos
cmp
pop
xchg
ret
mov
push
and
sub
inc
or
ds
cmp
shr
push
div
or
loope
sbb
add
push
mov
sub
nop
pop
xor
and
jo
enter
insl
scas
adc
mov
arpl
fs
sbb
inc
pusha
movsb
mov
nop
aam
mov
mov
mov
adc
pushf
cmc
mov
rcrl
lock
dec
push
fstpl
mov
push
movsl
pop
push
std
enter
jo
into
repnz
jg
push
cmp
jp
aam
jns
mov
cmp
and
stos
das
pop
mov
mov
fdiv
outsl
pop
or
push
pop
leave
adc
xorl
xor
sbb
pop
jmp
jp
mov
insl
enter
test
push
jge
cmp
sti
cmpsl
loop
scas
add
xor
inc
fs
movsl
fldcw
xchg
enter
stos
mov
sub
and
xchg
or
adc
repz
or
jl
jmp
cmp
addb
push
jne
fdivp
popf
mov
loope
fsub
fstpl
pop
mov
lds
mov
pop
lret
pusha
push
loopne
repz
push
dec
ljmp
xchg
adc
sub
lret
pop
sbb
mov
dec
fneni(8087
scas
stos
dec
mov
push
clc
nop
repnz
std
ret
aad
or
or
pop
adc
sub
push
or
sbb
sub
lahf
rorl
xor
movsb
add
sub
add
push
xor
push
inc
popa
fsubrs
iret
cmp
rcll
xchg
lea
mov
into
mov
fcmovb
imul
pop
ret
jp
mov
cwtl
rolb
or
mov
push
icebp
pop
cwtl
cld
pop
insl
sarl
data16
pusha
pop
pop
mov
jmp
add
mov
adc
test
adc
cmpl
xchg
sub
sub
jno
std
sbb
mov
add
jmp
inc
xchg
pop
push
call
push
daa
mov
clc
jae
and
mov
or
mov
shl
dec
ds
mov
mov
pop
cmp
fwait
popa
out
and
je
and
cmpb
push
lahf
jno,pn
iret
push
fimull
dec
xchg
addr16
lds
ljmp
cmp
test
lock
rcrl
js
addr16
mov
mov
fildl
icebp
sbb
cmp
repnz
add
sbb
pop
and
cmp
push
fsubrl
inc
arpl
fcoms
cld
jb
mov
inc
int3
dec
fimuls
fsubrs
sbb
push
es
je
icebp
addb
mov
loopne
bound
sbb
add
fistpll
pusha
xchg
cmp
mov
adc
lods
and
add
in
sbb
sub
or
mov
pop
mov
scas
arpl
daa
out
lcall
add
xchg
push
loope
daa
pop
jp
add
scas
ret
fidivl
cmpsb
add
and
cmc
js
pop
mov
inc
push
push
stos
aas
pop
jns
inc
mov
out
mov
lds
scas
push
movsl
pop
out
mov
cmp
ret
sarl
stos
aaa
imull
daa
addr16
jnp
sub
scas
and
xor
xchg
mov
push
push
stos
insl
adc
mov
movsb
inc
jp
push
push
inc
sbb
xchg
inc
je
fcmovnbe
pop
jae
mov
in
stos
mov
cld
es
loop
mov
icebp
sbb
pop
test
std
lret
or
stc
movsl
mov
out
jae
pop
into
xor
stos
mov
enter
dec
inc
xchg
mov
popf
xchg
jne
xchg
lret
stos
xor
lahf
out
adc
sub
int
ljmp
dec
imul
mov
popa
sti
xchg
inc
cmp
inc
push
jp
dec
lret
inc
mov
repz
aad
shrl
add
mov
jns
pop
add
movsl
leave
fsubrl
sub
jne
jnp
or
pop
popf
jp
jge
insl
dec
jne,pt
addr16
insl
inc
jg
mov
scas
fs
sbb
lods
inc
es
in
mov
enter
je
dec
pop
dec
and
loope
test
and
popf
cmpl
mov
cwtl
mov
mov
aaa
sahf
xor
jae
or
rol
daa
or
adc
cs
mov
ja
clc
cmpsl
mov
test
movsb
ds
sbb
into
jns
cmp
xchg
xchg
lret
adc
or
fnsave
push
cmp
xchg
sub
ds
orl
dec
jno
into
ret
dec
sub
add
dec
add
xchg
xchg
cli
test
and
fisubs
dec
lret
mov
imull
inc
cmp
lds
hlt
dec
outsl
ret
into
repnz
jo
ds
insb
mov
pop
mov
es
fstl
sbb
dec
push
push
testb
shlb
sahf
cmp
or
pop
pushf
fsubl
cltd
hlt
mov
pop
pop
adc
lret
add
cs
ret
jno
mov
add
ja
push
jb
mov
xor
iret
xor
stos
mov
push
movb
rcrb
or
xchg
or
pop
sbb
sbb
mov
js
pushf
lea
cld
stc
in
int
xchg
fs
or
jne
push
push
std
pop
leave
mov
sbb
ret
mov
nop
mov
gs
shrb
jae
scas
fildll
loopne
xchg
xor
idiv
mov
push
gs
push
cmpb
or
jb
add
call
jo
orl
mov
mov
or
arpl
rcll
pop
repnz
jnp
ja
loopne
addr16
xlat
iret
pop
mov
pop
jnp
inc
stc
mov
jne
mov
leave
mov
xchg
mov
mov
push
ja
dec
pcmpgtb
fs
es
jno
mov
out
mov
leave
sbbl
mov
sbb
xchg
cltd
shl
cld
push
ds
xchg
cmpsb
dec
mov
cli
pop
mov
dec
cmc
cmp
cmp
shlb
jae
addps
adc
push
jge
push
xor
mov
mov
jp
xchg
or
or
loop
xchg
scas
mov
jmp
pop
mov
jge
jne
cltd
jno
add
push
mov
sbb
iret
xchg
repnz
in
sbb
outsl
jmp
mov
ja
pop
mov
sbb
dec
cmp
cmc
data16
add
xlat
xchg
loop
ret
insb
arpl
inc
into
mov
popf
shrb
jmp
aaa
clc
inc
push
sbb
adc
jg
mov
aad
jecxz
lock
out
jmp
outsb
in
cmp
jbe
mov
add
mov
addl
push
test
popl
rcll
lret
xchg
adc
stos
adc
jno
xorb
aas
and
fcmovu
push
add
pusha
and
mov
pop
js
jbe
rcrb
lods
mov
test
lahf
and
xchg
xor
cs
jmp
add
cmp
xchg
rolb
js
and
shlb
es
arpl
imul
inc
and
into
xchg
dec
cmp
or
imul
insl
out
push
icebp
fs
cwtl
add
and
cltd
shl
fildll
cmp
xor
shlb
loop
or
int3
movl
loopne
stos
js
or
mov
adc
inc
aam
fcomps
add
mov
or
addb
mov
js
out
dec
or
pop
jmp
cmp
mov
xor
mov
lea
aam
lret
ficoml
inc
hlt
into
fsubp
and
xchg
lods
imul
add
cs
xchg
out
lcall
cltd
cmc
ficoms
adc
mov
mov
test
jp
sub
jl
sahf
nop
popa
inc
idivl
mov
adc
mov
je
dec
rol
jne
push
std
mov
into
or
in
add
jg
mov
lret
or
jmp
inc
push
in
jl
out
and
xor
xor
sub
jecxz
inc
xor
jmp
sar
in
fildl
fsubrl
push
mov
fstpl
jne
jnp
idivl
cmp
ficoml
and
insl
out
scas
xchg
jge
mov
sahf
inc
pop
mov
inc
inc
pop
shll
cmpsb
aam
ljmp
daa
inc
or
aam
nop
test
push
in
dec
pop
loope
mov
mov
aad
movsl
mov
int3
out
xchg
addr16
xchg
out
das
cmpsb
fcoml
call
in
xchg
test
inc
cmpsl
sbb
inc
enter
lahf
in
mov
dec
outsb
outsl
daa
stc
in
popa
aad
sbb
jp
gs
jnp
out
mov
ja
arpl
icebp
xor
push
add
mov
or
nop
jo
jl
jp
jbe
xchg
cmp
jge
repnz
rorb
ret
pop
mov
in
mov
xchg
jne
leave
adc
mull
movsb
fiaddl
lea
out
rorb
bound
flds
add
fwait
in
fs
inc
mov
inc
punpcklwd
aad
test
xchg
bound
dec
fs
add
sbb
inc
lods
sbb
bound
scas
rolb
xchg
dec
sbb
gs
inc
mov
cmp
mov
shll
push
aas
aam
mov
insl
hlt
ret
dec
in
dec
mov
scas
pop
mov
scas
xor
dec
fwait
mov
stc
xchg
or
stc
sub
jno
or
mov
add
pushl
fistpl
add
mov
fdivs
sbb
mov
scas
shrl
icebp
dec
mov
sbb
adc
add
pop
in
outsb
jnp
cmpsb
sub
add
or
movsl
idivb
cmpsb
push
stos
fisubrl
cwtl
jns
lret
jne
ss
cwtl
xchg
loope,pt
je
fdivl
jns
ss
lds
repz
add
lods
dec
and
mov
es
adc
pop
lret
jecxz
dec
lcall
mov
dec
mov
dec
in
daa
push
xchg
jle
sbb
mov
lret
clc
sbb
cltd
stos
xlat
jb
ret
mov
push
sti
es
or
adc
inc
sub
addb
addr16
jb
leave
pop
dec
icebp
rol
cmp
lock
rcrl
mov
xchg
jg
bound
xchg
cmp
or
mov
rcr
xchg
cmp
out
subl
jle
push
jb
addr16
movsl
jb
or
lret
mov
stos
xchg
aaa
mov
adc
adc
xor
xor
mov
cmpsb
push
repnz
sub
or
insb
aaa
rcrb
fdivrs
in
mov
fsub
jl
inc
loopne
addr16
cmpsb
enter
pop
out
fistpll
jp
push
cwtl
jne
mov
adc
adc
mov
repnz
scas
and
fnstenv
cmp
xchg
mov
mov
cli
lea
les
or
pusha
sbb
and
dec
gs
jo
pop
jle
inc
mov
gs
dec
xor
test
in
mov
xchg
add
aam
mov
in
inc
xchg
daa
mov
femms
std
xor
arpl
jns
jg
imul
rcrl
ret
lcall
jg
ret
inc
mov
lods
pop
sti
dec
cmc
jl
fistl
mov
pop
xchg
xchg
stos
mov
push
xor
cmp
pop
adc
add
mov
call
mov
mov
aas
cmp
outsl
add
ret
loop
add
faddp
rorb
sub
idiv
imul
jno
jl
push
out
adc
xchg
push
mov
jbe
in
loope
lea
or
mov
data16
jl
inc
xchg
xchg
roll
sti
sbb
xchg
xor
and
pusha
imul
pop
out
int
dec
daa
push
mov
fstpt
mov
fisubrs
test
addr16
aas
mov
movsb
sbb
sub
lcall
stos
push
sbb
adc
scas
into
adc
or
pand
lock
mov
stc
push
lea
fwait
shlb
pop
out
ja
test
mov
jns
jae
loope
test
add
mov
decb
sarb
mov
mov
lahf
fbstp
push
mov
scas
repnz
fsubl
xor
xchg
lock
push
movsb
dec
loope
fwait
mov
jo
cmpsb
aam
push
sub
loop
mov
ret
int
mov
repnz
sbb
inc
lea
xorb
dec
insb
in
popa
pop
out
push
cs
and
cmp
dec
enter
ret
lret
mov
pop
int3
fwait
sub
testl
in
mov
ljmp
sbb
jecxz
cmp
pop
fsts
mov
add
sub
cmc
jno
leave
insl
xor
mov
insb
push
pop
sbb
pushf
lret
lret
in
mov
movsl
mov
aad
cld
pop
push
icebp
sbb
aas
push
cwtl
in
out
xor
dec
mov
fiadds
mov
in
scas
ljmp
inc
xchg
cwtl
fs
or
pop
sbb
adc
cmp
push
mov
stos
pop
or
mov
or
mov
sbb
push
jo
mov
add
cli
aad
cmp
mov
ja
mov
push
jbe
std
faddl
or
jne
push
bound
adc
test
in
xor
and
outsl
arpl
lret
jmp
sti
fsubl
out
mov
sbb
adc
jmp
outsb
ss
and
or
adc
inc
mov
into
pop
jbe
mov
outsb
rclb
cmp
jle
je
pushf
fldl
xchg
sbb
lods
mov
cli
out
xchg
movb
addr16
mov
jb
inc
pop
push
jle
push
mov
xor
daa
cmpsb
sbb
call
or
jno
push
xlat
and
jecxz
test
shld
std
gs
mov
fdivl
test
sbb
or
mov
push
lods
int3
lret
loopne
arpl
xchg
testb
cmpsb
lods
movsb
inc
es
sbb
xor
iret
and
adc
clc
int3
inc
scas
adc
sbb
xchg
nop
pusha
lock
ret
sbbl
stos
xchg
xor
es
aad
dec
push
aas
or
rclb
sti
fwait
mov
mov
mov
adc
hlt
inc
lcall
sub
aad
add
test
fstpl
mov
jl
icebp
and
ja
dec
insb
call
call
xlat
lret
pop
mov
fcoml
outsl
xchg
daa
and
add
mov
mov
push
pusha
mov
pop
push
stc
fdiv
mov
insl
push
enter
or
mov
pop
or
jns
and
mov
dec
mov
ds
jne
rorb
ret
mov
inc
sbb
xchg
mov
push
insl
jecxz
xor
int3
leave
stc
cmp
out
pusha
inc
sub
jae
mov
aad
mov
sbb
jns
fdivrp
bound
sbbl
ret
insl
sbb
test
add
cmp
aam
jle
hlt
sbbl
xchg
inc
vmovntpd
sbb
add
idivb
fdivs
sub
adc
push
dec
sub
mov
mov
call
add
pop
pop
mov
das
inc
pop
push
and
sti
rolb
or
inc
push
inc
mov
or
cltd
sarl
mov
cmp
mov
int
scas
adc
leave
mov
push
shlb
aaa
push
xchg
ret
pusha
fcompl
dec
xchg
jge
sbb
insl
shlb
mov
inc
or
xchg
inc
sbb
sbb
push
cwtl
popf
mov
fdivs
mov
xor
mov
pop
das
mov
bound
xchg
shrl
int3
lret
jp
stos
fcomi
pop
or
dec
add
mov
fnstsw
js
or
mov
adc
int3
xchg
sub
imul
stos
inc
push
lods
insb
xor
lret
xchg
fsubl
lret
fidivl
xor
insb
subl
loopne
data16
and
xchg
jecxz
sub
aas
lea
aas
rorl
adc
xchg
test
pop
push
ret
testb
jle
mov
adc
pushf
movsl
jo
adc
sbbl
fstpl
dec
mov
fxch
xor
test
mov
in
add
test
sbb
and
dec
ret
insb
outsb
pop
ljmp
pushf
negb
adc
stos
fptan
imul
ss
jbe
jle
dec
std
mov
cltd
nop
mov
mov
cmpsb
popf
sbb
sub
cwtl
test
jns
fnstenv
shrl
xor
mov
leave
mov
dec
push
incl
clc
and
jno
sti
lods
sbb
mov
out
inc
sub
xor
nop
jo
insl
and
bound
pusha
or
and
fstl
out
test
add
rol
jg
js
and
jecxz
mov
xor
out
cmp
aad
ljmp
movsl
cltd
mov
cmp
inc
roll
xor
xchg
mov
in
out
mov
mov
xor
addr16
rclb
sub
cwtl
xor
xor
and
mov
xor
push
mov
test
sahf
mov
loop
fwait
lret
outsl
bound
jmp
fwait
and
sub
inc
xchg
lahf
jp
add
ret
or
popf
inc
pop
inc
movsl
negb
inc
lret
arpl
xor
cmpsl
xor
inc
dec
mov
jecxz
jp
xor
cmp
iret
sub
loop
add
cmp
push
imul
ret
imul
push
daa
jle
mov
mov
xor
loop
mov
xchg
loope
mov
push
sti
and
adc
stos
or
lods
push
sub
jnp
test
aas
aad
fldt
leave
je
fisubl
or
adc
xor
xchg
pop
xchg
loopne
pusha
int3
mov
dec
inc
lret
insl
out
scas
ret
adc
int3
xchg
cmp
lret
push
fdivrs
movsb
sbb
jb
xchg
or
or
pop
dec
sbb
push
cmpsb
jbe
gs
dec
sbb
push
ss
idivb
mov
es
cs
sub
jo
adc
dec
jno
sar
imulb
jg
subb
fbld
arpl
xchg
shll
mov
mov
sahf
mov
hlt
and
jnp
enter
pop
inc
aaa
mov
mov
jl
push
sti
daa
jne
aas
pop
pop
cmp
fildll
inc
mov
loop
and
pop
out
adc
int3
pop
scas
insl
xor
pop
lret
testl
scas
lret
aam
stc
testb
out
and
stc
cmp
lods
jl
insl
push
dec
push
jg
mov
push
and
addr16
fdivl
idivb
pop
push
fnstcw
xor
outsb
std
test
jmp
sub
fsubrs
sub
fnstenv
aam
jns
cltd
push
js
fstpt
insl
add
add
cmp
stos
shlb
in
sbbb
mov
mov
xchg
jg
or
mov
push
ror
cmp
mov
xor
mov
lea
sbb
mov
push
xor
xchg
aas
push
repz
sbb
sbb
pop
lret
cld
jbe
pushf
pop
les
xchg
fistpl
mov
dec
shlb
data16
popf
int
aaa
cmpsb
inc
pop
pop
dec
jo
iret
sub
subb
sub
sub
mov
adc
and
adc
mov
out
ret
mov
jecxz
mov
sub
subb
mov
push
pushl
stc
jmp
inc
add
mov
insl
xorb
repz
adc
xchg
out
cli
cmc
jmp
mov
and
jne
fistl
ret
out
or
push
cmp
inc
add
scas
xor
call
push
jnp
test
xor
addr16
es
sub
arpl
cmp
sahf
cmpsb
scas
test
ud1
lods
add
fwait
pop
stos
fldenv
mov
iret
or
sub
nop
fcompl
mov
cmp
or
rolb
sarb
jnp
rolb
test
jae
xchg
cld
mov
pop
lcall
add
test
jns
pop
lcall
cli
pop
sbb
testl
adc
ljmp
cmp
mov
lock
inc
fwait
test
mov
aad
out
push
xlat
add
pusha
cld
aam
mov
hlt
lret
int
pop
movsb
mov
xor
jg
lahf
iret
add
xor
imul
add
dec
lcall
fcmovbe
lds
jmp
pushf
aas
nop
adc
xor
pop
dec
or
fnsave
add
jb
andb
cltd
push
popa
or
fidivs
dec
inc
jmp
inc
sbb
out
xchg
in
mov
in
clc
sub
mov
popa
add
icebp
std
pop
faddl
jle
jecxz
jae
push
mov
jno
popf
cmpsb
leave
mov
xor
adc
ret
push
add
and
xchg
sub
stc
insb
lahf
sbb
mov
daa
ret
xor
xchg
inc
scas
hlt
movsb
test
dec
nop
inc
cmp
jo
repz
inc
idiv
jae
or
adc
mov
ret
ljmp
rorl
adc
adc
mov
push
lret
push
fmul
roll
movsl
scas
dec
hlt
push
test
mov
jb
test
insb
mov
inc
popa
lods
mov
inc
jle
addl
and
inc
mov
pushf
and
mov
ljmp
lcall
andl
ss
dec
in
lret
mov
divb
mov
cmpsl
inc
shlb
test
dec
pushf
inc
xchg
mov
dec
icebp
jnp
mov
jae
aad
inc
cmp
dec
aam
sub
rcrl
add
or
imul
inc
bound
arpl
das
xchg
and
in
sub
les
inc
push
stos
or
sbb
mov
js
loope
js
xor
cli
xor
lods
movsl
das
xor
frstor
in
out
cmp
push
or
notl
sar
xchg
mov
cmp
inc
cmp
jne
imul
test
xchg
lea
mov
mov
sub
sub
sub
sub
lds
push
popf
mov
sahf
cmc
push
cld
dec
cmp
out
push
or
rolb
es
xchg
shl
and
jnp
mov
xor
rorl
test
divl
dec
je
inc
pop
fstl
adc
out
jo
fimull
ds
mov
fs
jmp
cwtl
adc
cmp
jg
bound
jae
cltd
mov
mov
andl
mov
fsub
jnp
lea
inc
adc
or
mov
and
dec
fwait
or
insl
add
shrb
xor
sub
xchg
push
and
in
mov
fnstsw
cmc
aaa
dec
xchg
lea
mov
or
lds
out
std
jo
jbe
test
in
jge
leave
jo
sbb
inc
leave
test
xor
mov
sub
mov
jne
loop
sub
rcrl
je
fs
dec
aam
or
out
mov
enter
mov
jnp
mov
sub
dec
lods
daa
mov
aaa
nop
in
pop
orb
push
sahf
mov
and
and
jecxz
mov
fwait
dec
aad
fsubrs
and
sti
sub
push
pop
shrl
ss
push
mov
int3
int3
cmpsb
std
inc
push
dec
sub
test
pop
repnz
dec
into
xor
loope,pn
fdivl
jns
lcall
aas
lds
add
ficomps
shrb
adc
mov
cmp
jp
scas
cmc
adc
mov
pop
push
repz
stos
enter
test
push
mov
and
out
jnp
xchg
jp
mov
imul
dec
sbb
and
and
sub
jae
ja
sub
pop
or
mov
sub
aaa
xchg
mov
hlt
xor
sbb
mov
insl
lahf
sbb
or
sub
push
adc
xchg
xor
cltd
xchg
adc
or
js
cmovle
jae
sbb
add
jnp
xor
lret
mov
call
jg
push
ds
xchg
mov
pushf
mov
out
gs
insl
adc
vmovntps
cmpsb
xor
and
decb
jmp
std
pop
stc
xor
mov
push
pop
adc
aad
xor
mov
jmp
adc
clc
in
pop
ljmp
popl
pop
inc
into
xchg
daa
dec
mov
sbb
dec
add
sub
lret
or
or
data16
std
dec
movl
dec
mov
addr16
or
test
loopne
mov
js
or
nop
nop
adc
jno
jns
jp
cmpsl
sub
ljmp
mov
cltd
inc
mov
and
incl
daa
or
xchg
popf
inc
mov
mov
mov
push
dec
or
sub
adc
pushf
lcall
jle
aas
lods
add
sbb
xor
test
mov
and
test
ja
iret
movsb
insb
mov
pop
pop
push
dec
lods
jg
sbb
jge
adc
leave
test
sbb
and
cwtl
add
jbe
xchg
inc
je
in
fiadds
or
push
stc
push
scas
sbb
test
bound
cmpsb
mov
pop
mov
mov
jmp
pushf
std
or
or
cmp
push
push
xchg
test
push
jnp
jb
xchg
push
mov
inc
and
repnz
adc
gs
testl
jle
jns
jnp
addr16
xor
jp
in
or
lcall
adc
lret
sbb
inc
insl
pushf
xor
and
adc
inc
push
call
test
les
jbe
mov
dec
leave
div
xlat
mov
and
icebp
cmpl
test
lds
fldt
pop
pusha
test
mov
inc
sbb
add
dec
mov
dec
inc
iret
movsl
clc
out
aaa
push
mov
xchg
sub
dec
mov
sub
jmp
jp
popa
xor
xchg
mov
and
jmp
push
or
sti
sti
js
xor
adc
or
je
lock
xchg
lcall
sub
push
mov
dec
insl
jmp
jle
jno
add
push
sub
movsb
in
ss
outsl
test
int
mov
push
mov
pop
shlb
inc
mov
ret
jl
lods
divb
sub
enter
test
cltd
xchg
pop
cmpl
adc
rorl
push
lret
adc
pop
jae
cmpsb
xchg
shlb
xchg
jge
gs
fsubp
push
idivb
dec
dec
cmp
test
ss
in
push
inc
test
insb
push
stos
add
push
in
dec
int
popa
and
add
fstpl
push
sub
out
adc
shld
out
push
dec
mov
cmp
xchg
jb
adcl
and
mov
imul
cmp
mov
sar
pushf
sbb
inc
jg
jae
xor
push
ficomps
cmp
cli
dec
pop
pop
cmp
pop
pop
rol
and
cwtl
push
jle
lret
pop
fbstp
jp
fs
mov
enter
neg
or
aas
jecxz
out
dec
icebp
stos
xchg
pusha
out
pop
jg
adc
dec
jne
pop
or
xchg
int3
push
dec
mov
cs
loope
jle
fmul
xchg
mov
jmp
aaa
into
sub
cwtl
arpl
gs
scas
mov
stc
xor
add
gs
and
sub
push
xor
lea
hlt
cmp
rcrl
ljmp
sub
mov
xlat
mov
stos
mov
test
sbb
sbb
push
mov
jnp
rol
test
dec
cmp
divl
fstpt
or
fwait
dec
in
add
es
inc
jecxz
xchg
adc
iret
mov
arpl
sbb
push
std
push
lcall
lahf
shlb
push
xchg
jbe
bnd
in
popa
xchg
int
inc
push
mov
lahf
mov
push
aad
popa
pop
jb
in
mov
jle
dec
cltd
subb
test
mov
mov
xchg
fwait
mov
mov
lret
jp
mov
inc
mov
lret
pop
cwtl
lret
repz
mov
in
sub
xchg
sub
mov
mov
in
mov
addl
xlat
xor
nop
mov
test
cmp
popf
cmpsl
jmp
pop
out
aad
sbb
pop
cld
sub
add
pop
fisttpl
pop
daa
push
push
xchg
cwtl
bound
mov
ficomps
rcl
push
fcomps
mov
orl
jae
icebp
mov
push
pusha
pop
sbb
cld
push
jb
test
cmp
bound
aas
stc
popa
xchg
xor
mov
adc
mov
adc
dec
scas
idiv
mov
xor
sub
jne
outsb
push
dec
push
pushf
add
movb
das
xorb
fimull
sub
pop
pop
jmp
or
out
xchg
jp
mov
xchg
in
lea
mov
bound
push
fs
gs
out
mov
or
in
mov
dec
jl
jae
cmp
decb
dec
pusha
cmp
pop
sahf
les
in
fld
mov
sub
scas
add
clc
loop
and
pop
fwait
lods
cmp
stc
pop
or
jo
popa
dec
jae
dec
movsb
call
and
inc
xor
jo
cs
dec
jae
movsb
mov
mov
xchg
adc
adc
sub
dec
add
dec
dec
mov
rcll
xchg
jno
insb
adc
clc
ds
in
cmc
arpl
push
js
dec
or
jnp
insl
roll
and
ljmp
push
je
xor
in
dec
xchg
jnp
call
adc
inc
pop
dec
jecxz
loope
adc
and
and
jne
out
push
aad
cmc
aaa
test
pop
fcomip
test
les
andl
mov
ret
std
scas
or
dec
xchg
shrl
or
out
lret
popf
bound
lods
dec
jns
fldenv
mov
cmc
mov
dec
pusha
pop
dec
cmpsl
add
mov
and
lret
push
out
push
scas
push
aad
add
mov
ja
cmpsb
aad
lret
inc
lret
lea
dec
sbb
sub
cli
pop
int3
cmpsl
pusha
push
pop
pop
and
subb
aas
pushf
lea
fs
cs
dec
pop
adc
push
xchg
mov
insb
add
and
shll
mov
cli
cmp
inc
icebp
lcall
in
sub
cmp
pushf
mov
stos
repnz
and
pop
cli
dec
xor
adc
push
sub
xlat
sub
stos
lahf
jecxz
outsl
movsl
sbb
inc
adc
int3
imul
jnp
pop
inc
jb
push
fisubrl
inc
sub
xchg
jecxz
or
adc
dec
shrb
xor
sbb
daa
fdivl
xor
pop
into
stc
jbe
dec
fwait
sub
adcl
mov
mov
sbb
ds
scas
test
pop
popf
sub
fbld
mov
mov
es
mov
into
push
mov
and
pushf
dec
fwait
lds
repz
int3
jp
in
sub
fists
loope
loope
and
mov
mov
inc
inc
lea
jmp
mov
test
add
sub
mov
insl
cmp
or
xchg
cld
pop
mov
mov
push
dec
mov
push
xor
mov
and
dec
fnsave
push
pop
xlat
inc
lahf
addl
fs
icebp
mov
pop
mov
and
hlt
pop
pop
pop
nop
sub
rcrb
mov
cmpsb
dec
sti
inc
fistpl
stos
addr16
cmp
pushf
add
push
loop
shrb
mov
inc
inc
imul
insl
push
or
mov
push
cmp
loope
mov
ret
cmc
es
hlt
lcall
pop
xlat
mov
test
inc
ja
mov
lea
or
push
xor
inc
jecxz
in
shrl
enter
fsubs
mov
cld
add
outsl
adc
aaa
mov
xlat
mov
and
and
dec
std
hlt
daa
inc
pop
jb
fwait
mov
flds
push
ss
scas
ret
shrb
mov
mov
loopne
and
notb
cmpsb
insb
push
sbb
jmp
mov
adc
lcall
test
lret
and
jo
arpl
and
xchg
leave
add
cmc
mov
loop
aad
adc
lods
mov
jnp
insl
gs
mov
sub
lret
push
test
in
cwtl
adc
xor
jge
daa
mov
adcb
push
in
xor
inc
aas
nop
inc
out
cmpsb
jg
and
mov
call
sahf
movsb
adc
inc
cmp
mov
sub
push
rorl
mov
pop
xor
or
insb
or
loop
pop
xchg
xchg
cmc
stos
test
shrb
inc
push
pop
cld
pop
xchg
add
xor
dec
mov
jge
mov
mov
fsubr
loop
jmp
jnp
jnp
movsb
mov
or
jecxz
cmp
aam
inc
push
shl
jnp
clts
pop
ds
push
push
cmp
mov
and
fwait
add
sbb
mov
xchg
stos
mov
pop
sub
mov
inc
sub
mov
in
fisttpl
push
aas
or
js
push
push
pop
xchg
mov
and
cmp
xchg
jecxz
cmc
enter
movsl
in
test
cmp
fldt
stos
idivb
mov
xor
xchg
fmull
and
and
add
mov
outsl
add
int
test
xchg
mov
subl
cmp
and
in
lea
dec
cmc
or
into
repz
loope
std
xchg
or
inc
and
sbb
iret
test
xchg
test
push
jmp
stos
movb
loop
fistpll
sub
xlat
in
in
out
mov
xchg
mov
imul
add
sbb
add
and
pusha
or
xchg
adc
and
pop
inc
jo
cs
pop
sbb
lock
dec
insb
push
jns
push
std
ss
mov
mov
mov
int
mov
push
ja
push
mov
and
xchg
sub
cltd
loop
iret
push
dec
shll
sbb
xor
mov
and
enter
ret
xchg
outsl
cmpsb
gs
add
or
or
mov
mov
jbe
outsb
dec
popf
mov
loop
fmull
xlat
jmp
outsb
mov
or
dec
lods
pop
or
mov
jmp
pop
sub
push
jnp
mov
inc
xor
popa
fisttps
xor
jbe
or
push
nop
ljmp
idiv
or
shlb
into
cmp
aas
sbb
mov
mov
cmp
arpl
sbb
add
out
mov
inc
adc
iret
push
cwtl
push
repz
push
and
gs
or
inc
js
xchg
sbb
mov
inc
rorb
pop
push
insb
in
hlt
pop
xorb
pop
xor
aad
pop
sbb
jl
enter
test
mov
loop
ja
leave
xchg
dec
mov
popl
cmp
or
push
or
or
pop
inc
dec
push
sbb
sub
imul
jge
push
popa
xlat
shrb
pop
testb
insb
jle
cmp
testl
inc
inc
xor
stos
sbb
cmc
or
pop
adc
ficomps
jae
sbb
setnp
mov
fstpt
and
adc
cmpsl
outsl
imul
les
insb
or
add
clc
add
loope
fdivrl
adc
out
addl
inc
xor
fwait
jbe
loope
andl
mov
jl
cs
cld
push
push
mov
xor
xor
mov
fstl
pushf
jns
and
jmp
mov
mov
lock
mov
or
fcmovb
xlat
xor
cmp
cmc
cli
fst
data16
cmp
push
icebp
mov
popf
adc
pop
push
imul
dec
xchg
push
test
stos
je
dec
mov
rorl
subb
jae
pop
les
or
lods
aas
je
jnp
xchg
push
mov
jmp
std
call
aam
decl
adc
adc
push
jno
pop
mov
aaa
pusha
lea
add
pop
mov
in
mov
loop
leave
inc
mov
movsl
subb
mov
sub
daa
sub
xchg
lock
test
dec
jb
mov
cmp
mov
xchg
lcall
mov
jbe
test
cmp
std
mov
stos
sbb
inc
pop
add
iret
dec
gs
adc
ficoml
push
lahf
inc
add
aas
or
movsl
and
dec
xor
rclb
mov
sbbb
sar
jno
inc
sbb
sub
loopne
pop
loop
gs
sub
push
pop
dec
into
xorl
xchg
pop
int
rcrb
pushf
jge
push
inc
mov
or
sub
pop
iret
sarl
addr16
cmpsl
mov
cmpsb
js
lcall
dec
mov
std
and
mov
sub
add
add
jmp
mov
faddl
daa
loope
mov
mov
jp
orl
adc
jne
jno
cmpsl
cmp
dec
jb
nop
test
jo
mov
lret
pusha
inc
xor
data16
push
ljmp
adc
cld
pop
call
mov
xchg
xor
jnp
das
push
pop
lds
loop
lds
rcl
push
gs
pop
aas
mov
push
inc
pop
fimuls
test
push
xchg
sbb
jl
or
pop
pop
and
cmpsb
fisubs
mov
cmp
xchg
mov
lods
rcll
shll
xor
or
fsub
mov
sub
fadds
push
push
xor
nop
clc
or
int3
sahf
repnz
rolb
mov
roll
xchg
nop
dec
pop
mov
add
fcompl
repnz
ss
lret
out
hlt
aam
sbb
sub
dec
or
or
ficoms
push
inc
or
fistps
jp
pop
test
int3
push
popaw
and
adc
mov
jecxz
jne
enter
dec
pop
push
lds
xchg
stos
dec
cmp
mov
scas
sub
sub
jp
mov
xchg
fwait
pop
ja
dec
jns
in
or
xor
jbe
push
adc
movsb
mov
dec
fistpll
daa
sub
sub
scas
orb
push
movsl
ret
cmp
sbb
sbb
and
inc
jbe
stos
inc
jg
fiaddl
imul
sbb
xchg
jo
out
adc
adc
inc
in
cmpb
jnp
mov
into
jb
dec
push
into
adc
aas
push
in
out
mov
pusha
inc
lret
xor
nop
or
or
xchg
push
call
es
in
adc
xchg
inc
mov
addr16
subl
inc
dec
mov
sahf
lds
sbb
jge
inc
aaa
orl
add
lods
icebp
jmp
les
adc
mov
insb
inc
mov
rol
and
fwait
pop
add
sbb
adc
inc
jbe
jno
imul
pop
jp
decb
push
arpl
inc
shl
ja
mov
pop
scas
jecxz
std
adc
mov
cmpsb
xor
imul
ss
loop
dec
cmp
mov
orl
call
mov
xor
sbb
aas
imul
mov
push
mov
sub
xchg
ret
pop
insl
jge
pop
out
xchg
xorl
jb
mov
int
ret
je
fsts
cmp
add
lods
add
add
push
clc
mov
jnp
sub
cld
xchg
fdivs
mov
pop
pusha
lds
jno
cwtl
int3
pop
fs
test
jno
imulb
push
cmpl
insl
in
imul
sub
mov
add
fmull
repnz
mov
aad
out
and
leave
add
push
mov
sub
in
scas
in
fiadds
or
sbb
in
fs
push
in
in
sahf
push
add
inc
xchg
out
adc
add
ret
int
add
repz
xchg
xchg
aas
ret
ds
xchg
and
dec
or
rolb
cmp
rcrb
or
jnp
into
add
rclb
sbb
mov
in
or
stos
cmp
jle
mov
lcall
xchg
jle
andl
cmp
enter
ljmp
cld
jo
pop
test
or
pusha
outsl
outsb
pop
test
sub
mov
test
or
adc
fnstenv
pop
int3
je
jnp
mov
stos
xor
sbb
je
hlt
xor
push
ds
sbb
loop
mov
add
adc
add
cwtl
leave
cmp
or
cmp
jecxz
arpl
push
add
repz
icebp
sbb
clc
pop
dec
sbb
and
inc
jecxz
push
and
jge
sarb
cs
cmp
sbb
add
or
repnz
lods
js
inc
adc
sti
xor
daa
mov
out
sub
pop
fidivrl
xor
scas
lods
xchg
cwtl
sar
adc
cwtl
xor
filds
lock
ljmp
dec
adc
push
dec
sub
leave
fimull
aam
in
cmp
inc
inc
fmull
xchg
lods
movsl
sub
lds
sbb
adc
dec
nop
loopne
popf
jns
inc
test
xchg
mov
shrb
arpl
stos
ljmp
mov
add
in
pop
fnstenv
mov
fimull
mov
int
sub
sbb
pushl
jns
adc
adc
mov
je
lahf
ss
movsl
or
add
inc
dec
push
cmp
push
adc
clc
push
mov
mov
xor
sub
ret
add
pushf
loop
mov
shlb
test
jns
in
test
add
mov
lret
cmp
and
ja
cltd
sub
cmp
jno
push
dec
xchg
mov
inc
ljmp
loopne
mov
and
cmpsl
bound
fucom
pop
inc
sub
mov
bound
push
test
mov
sub
divb
mov
test
jecxz
mov
or
in
inc
mov
fisttpll
push
pop
mov
mov
clc
dec
and
ss
dec
mov
addr16
in
sahf
dec
pop
cld
sbb
fisttpll
mov
xchg
pavgw
sbb
cmp
bound
adc
stc
stos
shr
inc
mov
xchg
mov
sbb
shl
mov
mov
and
stos
mov
es
negb
ja
sbb
xchg
stc
push
add
cmpsl
add
xchg
insb
jp
sti
clc
adc
subb
cmp
cmp
fcoms
scas
and
repz
mov
push
dec
fiaddl
jg
adc
jg
sbb
ljmp
out
mov
pop
sar
push
popf
or
xchg
mov
rcl
dec
xchg
inc
dec
jmp
cmp
xchg
leave
or
mov
mov
push
mov
das
and
mov
lds
mov
call
push
cmpsb
mov
and
push
jle
jnp
loope
bound
shll
testb
jmp
xchg
hlt
cmp
gs
add
fcom
or
xor
cwtl
int
insb
test
cmp
cmp
cmp
loope
dec
mov
pop
dec
cmpl
dec
mov
or
in
sub
imul
aas
ret
push
or
in
in
loopne
xchg
inc
push
in
sbb
lret
and
and
or
push
jg
add
popa
scas
inc
fs
sahf
rcr
adc
mov
mov
pop
ljmp
jmp
daa
sub
hlt
addb
cltd
icebp
cmp
fldt
add
inc
xchg
push
mov
push
xor
pop
rcrb
cmpsl
out
inc
mov
cli
mov
push
push
aas
ja
pop
fdivp
cs
sbb
mov
cmpsl
clc
push
mov
or
push
push
jl
jmp
shll
sub
hlt
and
mov
shl
jne
jle
subb
jl
mov
aam
and
push
lret
std
jo
and
in
xor
sub
outsl
pop
push
cmpsb
adc
out
and
inc
cmc
inc
loop
ret
mov
ljmp
cld
insl
jle
int
scas
cld
mov
fwait
xchg
add
or
inc
dec
push
rcrl
jp
sub
add
jge
push
popf
jo
pop
out
push
pop
mov
xor
cli
js
setne
cli
pop
mov
jb
adcl
sarb
or
push
repnz
stos
sbb
pop
jge
mov
mov
xchg
xor
test
movsl
orps
repnz
aas
popa
ja
jnp
cltd
adc
mov
je
js
imul
or
rcrl
sbb
mov
cmp
and
add
cmp
mov
xor
dec
xchg
repz
subl
cld
jnp
fdivr
iret
add
test
ret
xchg
shl
sbb
pushf
add
iret
ret
stc
pop
fwait
rcll
test
jl
insl
scas
sub
sub
xchg
pop
xchg
jl
pop
fcomi
loope
mov
jmp
fldcw
insl
mov
pop
and
loopne
faddl
mov
mov
imul
mov
cli
mov
mov
cs
pop
addr16
push
imul
mov
js
mov
push
cwtl
pop
jp
sti
jl
pop
aaa
add
test
pop
lret
mov
and
mov
sti
push
or
dec
inc
pop
scas
jbe
mov
mov
dec
xor
sarb
push
roll
sbb
ja
fwait
outsb
idivb
mov
ds
xor
sbb
les
sbb
les
cmp
xchg
add
out
aas
int3
out
test
rcr
jo
fstpl
test
add
jl
mov
mov
dec
call
cmpsb
aas
mov
loope
xchg
cwtl
mov
shr
xchg
sub
inc
cmp
or
sbb
out
notb
data16
mov
icebp
data16
out
push
frstor
push
aaa
into
add
test
fists
sub
testb
cmp
ljmp
xor
cmp
in
pushf
addb
fildll
cmp
mov
mov
cmp
xchg
mov
mov
add
and
sub
rolb
mov
bound
adc
lods
push
orb
sub
ret
sbbb
pop
ret
add
mov
es
inc
out
imul
inc
add
cmpsb
cs
aam
rcrb
sub
pop
mov
in
aad
cmpsb
rcll
sbb
and
fisubrs
adc
ficompl
aaa
mov
jo
into
dec
aas
sbb
adc
cltd
sub
adc
repnz
sbb
push
bound
in
mov
push
mov
rdpmc
lea
pop
inc
mov
nop
stc
jb
sarl
hlt
dec
inc
xor
push
xchg
xchg
and
scas
outsb
and
sti
mov
jb
imul
lret
mov
cmpb
rorl
inc
faddl
inc
adc
loopne
mov
rcrb
xor
shlb
mov
ja
inc
cmp
jnp
inc
dec
sbb
inc
xor
data16
cmpl
mov
sahf
dec
dec
subl
cld
dec
lods
mov
push
pop
les
pop
out
scas
aam
sbbb
call
push
scas
mov
shrl
jecxz
sahf
inc
cmp
fnsave
lds
and
cmpsl
cs
mov
pop
add
pop
sub
mov
mov
lods
sub
xchg
shlb
mov
insb
fisubs
leave
and
in
out
repnz
sbb
sbb
nop
lret
stc
std
xchg
sub
loope
lret
outsl
jg
xor
lods
xchg
pop
fs
cmc
adc
mov
xorb
sbb
dec
ror
movsb
mov
dec
out
lahf
iret
out
scas
sbb
push
test
or
jle
jg
je
adc
cs
pop
in
fsubrl
inc
call
or
sub
or
sbb
enter
or
in
lret
sub
std
imul
aad
ja
lock
inc
leave
pushf
adc
popl
imul
add
fs
xchg
push
mov
inc
repnz
ds
mov
les
into
mov
push
push
inc
bnd
inc
outsb
adc
test
pushf
mull
in
call
or
cmc
xor
aam
add
ret
call
adc
jl
lods
xor
or
push
mul
sti
pushf
push
sbb
xchg
mov
jno
adc
cmpl
pop
outsb
xor
jns
pop
sub
add
scas
mov
ret
mov
repnz
andb
loope
push
sbb
movsb
fsubrp
xchg
sbb
out
mov
stos
bnd
loop
aas
lret
imul
adc
out
or
sbb
xchg
inc
adc
add
inc
imulb
out
jae
sub
aaa
out
mov
cli
lret
dec
rolb
scas
fdivrl
xor
int3
pop
jl
notb
inc
inc
pop
or
mov
stos
icebp
pop
gs
roll
roll
sbbb
or
ret
aad
out
sub
inc
jns
and
jp
jne
stc
mov
int3
mov
xor
sar
push
push
pusha
in
andl
sub
dec
rcll
das
cmpsl
jb
jmp
test
push
adc
mov
js
mov
cmp
out
add
ret
jbe
pop
mov
arpl
mov
xchg
pop
jns
sbb
pop
popf
dec
es
and
cmp
daa
das
clc
fildll
lds
repz
pop
mov
lods
pushl
bound
pop
xchg
in
lret
rcll
std
pusha
in
push
repnz
adc
xor
pushf
cmp
adc
negl
mov
mov
cmp
in
jecxz
mov
ss
adc
inc
push
lcall
mov
fsubrl
cwtl
sub
aaa
pop
push
mov
rcrb
mov
lret
add
mov
add
ficompl
sahf
hlt
mov
addr16
loopne
cmp
aas
sub
mov
je
out
sbb
xchg
jmp
mov
out
icebp
push
push
mov
psubusw
mov
sub
cld
sub
mov
mov
clc
and
and
sub
mov
cld
and
cmp
test
xchg
lcall
out
dec
or
call
mov
shrb
pusha
cld
pop
adc
imul
cwtl
sub
jo
or
std
mov
mov
movsb
stc
push
fidivrs
cmc
mov
and
iret
mov
cmp
and
and
mov
xchg
shll
and
pcmpgtw
loopne
inc
pop
insl
ficoml
inc
stos
push
cmp
and
repz
ds
push
cmp
cmp
pop
insl
test
add
mov
repz
adc
mov
fidivrl
and
mov
popa
mov
fwait
js
arpl
bound
and
xor
dec
mov
leave
dec
push
inc
xchg
dec
imul
jno
adcb
addr16
jne
inc
sarb
loop
cmpsb
data16
gs
jmp
jo
sbb
js
jmp
push
outsb
enter
jp
call
add
sub
imul
jge
aas
or
leave
test
cmp
cltd
sub
xor
jno
sub
sbb
lock
jae
imul
mov
rclb
cwtl
jg
repnz
movsb
pop
inc
mov
sbb
push
lret
add
cmpsb
nop
sbb
jns
mov
adc
in
std
aas
xor
decl
mov
or
cld
pop
cli
and
mov
outsb
scas
sbb
cmc
in
in
pop
adc
add
jl
xor
insb
or
jne
jl
jb
idivb
in
pop
push
std
in
cmc
inc
arpl
js
xchg
insb
xchg
fidivrl
outsb
test
inc
or
push
movsb
mov
das
mul
arpl
adc
adc
stc
lock
jbe
sahf
sub
mov
inc
or
add
out
and
dec
mov
rcll
dec
aas
les
cld
adc
ljmp
jns
repz
push
pop
jno
sbb
js
xor
xor
add
imul
dec
psllw
adc
test
and
aaa
mov
stos
lods
jo
pop
in
xchg
sbb
push
arpl
divl
testb
add
pop
lods
cli
and
iret
fcoms
push
ljmp
push
sbb
inc
jne
add
fildll
insl
mov
imul
cmpsl
lods
jg
push
mov
pop
cmpsl
cmc
add
mov
test
call
in
outsb
jmp
pushf
lods
in
cld
fidivs
push
les
add
aaa
fstpl
sub
lea
push
outsl
imul
cwtl
mov
imul
bound
and
lret
popf
add
dec
push
xor
out
sub
pop
inc
jbe
sbb
jmp
fldt
in
sub
or
lock
loope
mov
fsubs
lcall
stc
jae
pop
mov
and
fsubrl
jae
cmpsb
repz
lods
adcb
loop
jae
jmp
iret
lea
cmp
cs
add
cs
lret
stc
mov
das
sub
lcall
nop
and
jno
mov
inc
movsb
xor
das
mov
popa
pop
jo
pop
inc
mov
add
fdiv
gs
sahf
pusha
inc
mov
mov
jmp
jae
clc
xchg
rcll
in
xchg
in
cwtl
scas
jmp
jge
or
xchg
jno
clc
or
insl
je
sahf
push
and
xlat
jbe
call
mov
push
ja
hlt
add
xchg
xchg
push
sahf
mov
outsb
cmp
test
aaa
mov
imul
push
cmp
into
sti
push
cmp
cld
push
pop
fnstcw
imul
lea
push
pop
imul
test
inc
sbb
icebp
sbb
fisttps
ret
fimull
dec
jp
aam
adc
int3
pop
sbb
jg
pop
mov
fists
fnstsw
push
stos
and
adc
lea
in
mov
sarl
sub
jno
mov
push
cmp
cli
sbb
repz
fsubl
xchg
fsubrs
data16
mov
and
shrb
ret
fwait
in
pusha
push
andb
xor
movsb
mov
shrl
pushf
mov
shll
mov
xchg
ss
out
inc
shrl
xorb
push
repnz
test
sti
mov
lods
push
or
dec
mov
mov
and
mov
test
add
fidivs
inc
cmpsl
jg
jb
repz
lock
outsb
inc
push
cmpl
pop
sti
out
clc
out
aad
dec
sbb
insl
shll
mov
sbb
push
out
lds
dec
mov
lret
add
jle
dec
iret
mov
fcomip
imul
cmc
jo
and
mov
or
or
fistps
ja
mov
inc
idivb
xchg
frstor
xor
or
xchg
mov
loope
addr16
movsl
jb
dec
enter
bnd
ja
or
jl
ss
pop
loopne
cli
sbb
in
testb
push
ret
stos
mov
and
cwtl
sbb
add
lock
pop
inc
int3
mov
popf
int
xlat
inc
in
push
and
out
nop
shrb
aas
fcoms
xor
xchg
stc
push
dec
jae
jns
scas
dec
lock
cmp
lods
loop
iret
xor
cmpsb
rorb
ss
shrl
add
pop
aam
fisttpl
add
or
loope
mov
mov
cld
jmp
sub
mov
je
loopne
aam
inc
mov
test
mov
xchg
sub
add
daa
movsb
mov
sub
mov
dec
mov
or
push
push
adc
iret
popf
daa
fsubr
les
mov
fwait
or
in
mov
xchg
mov
mov
push
mov
pop
mov
std
adc
test
rorb
lea
xchg
mov
push
insb
fwait
stos
into
xchg
outsb
sbb
fsubp
adc
pop
fiadds
ljmp
sti
or
jae
mov
pop
jbe
fadds
fsts
mov
fmuls
outsl
push
test
adcl
pusha
out
or
mov
pop
xor
pop
sahf
dec
ret
out
gs
sahf
xor
push
fcoml
dec
lds
ffreep
int
xchg
xor
data16
pop
out
dec
or
imul
je
pop
pop
movsl
mov
sbb
dec
push
lods
adc
sbb
jle
lock
outsb
mov
sub
cmp
cmpb
mov
push
mov
jl
bnd
jle
sub
or
lcall
das
cvtps2pd
mov
mov
stos
cmp
fists
push
mov
sub
leave
mov
xchg
sub
ljmp
cmc
xchg
mov
mov
jmp
idivb
fsubrl
pop
xchg
in
jo
inc
xor
xchg
xchg
rcrb
push
or
inc
lret
gs
popf
xchg
inc
pop
cmp
in
sbb
jl
cmp
testb
dec
xor
dec
aas
mov
dec
out
dec
push
xchg
and
mov
fistpl
mov
rcrb
pop
and
pushf
cmpsl
dec
es
test
add
test
mov
data16
adc
rcrl
xchg
cli
or
std
inc
and
dec
lahf
int
mov
js
roll
dec
xor
daa
push
mul
into
xchg
cmp
xchg
scas
leave
nop
mov
mov
pop
and
mov
fsubrs
mov
adc
iret
push
adc
jb
cmpsl
dec
xchg
scas
lods
adc
mov
mov
pusha
jg
repnz
shrb
push
jp
clc
adc
xchg
test
mov
mov
fistpll
mov
mov
ror
bound
adcl
xor
mov
dec
popf
mov
aaa
mov
pop
cli
push
inc
gs
call
cmp
lods
js
cmc
pop
xor
adc
pop
stos
jmp
cwtl
sub
je
mov
sub
ljmp
mov
shlb
adc
movsl
jle
incb
xlat
jmp
mov
xchg
cmp
mov
popf
scas
fs
loope
or
popa
adc
into
push
inc
outsb
sbb
inc
push
xor
pop
cld
sbb
incb
