add
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
add
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
pop
ret
mov
sub
cmp
ja
push
call
add
test
je
add
ret
mov
mov
push
call
ret
pushl
call
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movzwl
cmp
jle
lea
mov
mov
lea
push
movl
mov
push
push
mov
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
fiadds
ds
pop
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pop
leave
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
lea
jmp
int3
mov
cmpl
push
mov
push
jge
mov
push
mov
push
call
mov
add
test
je
mov
mov
push
call
push
call
add
test
mov
pop
je
mov
mov
mov
push
push
push
call
cmp
je
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
mov
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
pop
pop
ret
cmp
jne
mov
pop
pop
ret
cmp
je
push
lea
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
nop
mov
add
push
cmp
push
movl
mov
mov
push
push
call
mov
movl
mov
mov
push
mov
call
test
je
push
mov
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
inc
add
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
lcall
fldt
add
in
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
push
mov
clc
call
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
call
push
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
int
add
test
add
add
test
add
or
test
add
add
push
and
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
xlat
into
inc
add
mov
add
add
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
add
push
call
add
add
push
add
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
inc
add
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
add
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
inc
add
add
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
add
rorb
lret
jne
lea
cmp
jb
add
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
push
fadds
sbb
inc
and
adc
add
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
add
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
add
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pusha
push
call
mov
add
add
mov
add
fldl
nop
movsb
add
lret
mov
in
push
mov
add
lahf
add
pop
add
shr
add
add
hlt
fdivs
mov
xchg
jo
js
rolb
sub
push
mov
add
push
push
push
push
lea
push
push
push
push
push
push
call
mov
mov
mov
mov
icebp
pop
jne
loop
int
mov
leave
movsl
xchg
pop
mov
rcr
xchg
sbbb
sub
pop
popl
push
push
push
push
push
push
push
lea
push
push
call
adcb
in
cwtl
push
pushf
jnp
add
pop
mov
rorl
add
rcr
int
add
push
hlt
adcb
add
movsl
leave
add
sti
add
push
push
push
push
push
push
call
test
add
push
push
add
add
add
add
movsl
cwtd
add
je
xchg
add
cwtl
add
add
cld
xchg
rorb
shr
scas
stc
stc
in
cmpsb
push
mov
addr16
push
add
jo
mov
mov
in
push
mov
push
push
push
push
push
push
push
call
pop
mov
cmc
xlat
jecxz
add
push
nop
test
mov
add
rolb
add
add
add
ret
add
add
add
add
int
jne
add
add
add
arpl
add
add
add
bound
lcall
cmp
add
push
push
push
push
push
call
nop
xchg
enter
add
add
incb
mov
add
cld
ret
add
add
test
add
shrl
mov
add
add
je
mov
rol
call
out
rcll
orl
add
mov
pop
call
push
push
call
xchg
xchg
call
xchg
call
add
push
jb
xchg
add
add
push
arpl
shl
test
shll
call
add
add
jl
add
cmpsl
add
add
mov
add
jb
mov
mov
jno
jmp
jge
add
in
clc
lcall
pop
add
add
dec
push
push
lea
push
call
fwait
rcr
add
ficoml
add
add
mov
mov
add
add
mov
mov
cmpsb
loopne
cmpl
iret
add
add
sub
pop
ret
mov
push
push
push
call
mov
in
int3
shll
add
cmpsb
add
movl
add
push
xchg
add
add
nop
mov
push
push
sub
pop
mov
push
push
push
push
push
push
lea
push
call
mov
lret
add
scas
add
popf
mov
iret
in
orb
test
mov
in
add
jbe
add
add
add
push
push
push
push
lea
push
push
push
call
std
pop
out
addr16
fiaddl
add
stos
add
add
jbe
add
in
push
add
leave
add
add
mov
aam
add
pop
add
add
ret
cmp
add
sbb
mov
sqrtps
repz
call
jne
insb
add
add
add
imul
push
add
ficomps
loop
add
bound
push
mov
mov
scas
add
push
add
add
add
data16
loopne
test
push
add
arpl
fildl
fiadds
add
mov
push
push
push
push
push
call
mov
in
mov
add
add
loop
add
add
testb
call
fs
pop
ljmp
add
fsubr
int
add
cmpb
jmp
pop
outsl
xchg
rolb
sub
pop
xor
push
lea
push
push
lea
push
push
push
push
call
iret
nop
add
mov
mov
loope
add
mov
add
add
add
add
movl
add
aad
pop
xchg
add
add
add
add
add
add
roll
mov
in
in
add
push
push
ror
add
shl
push
push
pop
add
xor
shr
shl
sub
add
pop
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
pop
ja
leave
jns
cli
mov
add
add
fstps
add
add
ljmp
imul
push
iret
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
call
fcmovnb
mov
add
add
lret
lret
add
push
leave
xchg
xchg
fildl
stc
mov
lret
add
add
add
add
cld
add
add
fimuls
rol
aam
add
inc
lock
push
push
push
call
cwtl
add
mov
stc
in
add
pop
jge
push
add
push
mov
jae
mov
add
add
mov
xchg
add
gs
jne
addl
pushf
add
mov
xchg
fidivl
lcall
inc
call
lea
push
lea
push
lea
push
lea
push
push
call
add
add
lods
add
jmp
add
pushf
movl
add
leave
push
add
jge
xlat
add
add
mov
insb
xchg
add
xchg
jp
mov
in
jmp
pop
add
mov
xchg
cmpsb
ficoml
add
add
in
pop
push
pushl
push
push
lea
push
lea
push
push
push
push
call
jo
orl
loop
add
fistpl
add
add
add
add
add
movsl
jo
in
jl
jo
into
je
add
sti
add
add
rolb
loop
add
mov
xchg
add
xchg
add
xchg
add
insb
mov
mov
jmp
mov
mov
lcall
jne
call
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
iret
fiaddl
add
call
xchg
add
add
hlt
add
add
sti
ljmp
enter
in
xchg
add
jle
add
into
faddl
pop
andl
mov
sahf
add
add
add
out
jo
add
add
scas
aad
add
sub
pop
pushl
push
push
lea
push
push
lea
push
call
scas
pop
add
push
add
add
rolb
mov
faddp
hlt
add
add
lods
lahf
mov
add
add
add
loopnew
add
add
in
pop
pushl
push
lea
push
call
mov
push
push
xchg
add
lcall
add
popl
add
aam
fs
imul
arpl
outsb
cmp
add
mov
cs
inc
push
push
pop
add
not
dec
sub
xor
pop
dec
xor
sub
xor
pop
push
push
push
lea
push
push
push
call
fildl
push
add
add
add
add
add
add
add
lret
jmp
push
mov
add
add
jle
add
add
add
sub
pop
pushl
push
push
push
push
push
push
call
mov
add
xchg
mov
xchg
jmp
cltd
xchg
add
jp
add
add
add
cwtl
add
call
push
vmulpd
add
jo
add
xchg
add
in
call
call
push
push
push
call
lret
data16
int3
mov
add
lret
add
int
loop
mov
add
loope
data16
fsubl
lret
push
add
mov
fwait
leave
sub
pop
push
push
push
ror
push
or
not
add
inc
sub
lea
pop
lea
shl
pop
push
push
push
call
add
mov
js
xchg
add
rcrb
in
jae
cwtl
mov
add
add
add
add
jmp
pop
add
fbld
pop
stos
xchg
pop
mov
hlt
lcall
push
push
lea
push
push
push
push
call
cmpsl
add
add
add
movsl
outsl
int
movsl
mov
add
jns
leave
add
mov
rorb
lods
hlt
sub
pop
push
push
push
push
call
add
pop
push
into
add
add
std
add
add
add
add
or
imul
out
fsubs
add
pusha
jge
cmc
sub
pop
call
push
push
push
call
cli
jecxz
stos
add
shl
iret
push
mov
add
or
add
jbe
add
add
add
add
icebp
jb
add
clc
push
push
call
add
add
mov
add
mov
aam
loop
nop
cmc
fstl
cltd
xchg
add
in
ljmp
add
lcall
add
add
push
leave
add
ljmp
add
ret
pop
rolb
mov
add
loopne
in
add
test
clc
pop
push
push
push
call
aam
mov
fincstp
scas
xlat
add
add
jno
sub
push
add
fadd
xchg
mov
xchg
gs
jns
add
fldl
xlat
add
mov
faddl
mov
add
xchg
cmpsb
push
push
add
lods
popf
int
in
mov
in
clc
pop
push
push
push
lea
push
push
push
call
mov
add
add
pop
add
pop
hlt
fwait
lret
add
add
add
add
lret
aad
fiadds
mov
lock
add
fistpll
lcall
xchg
add
int3
add
testl
in
pop
mov
push
push
lea
push
push
call
leave
add
sub
mov
push
int3
mov
add
fiadds
jp
mov
add
push
pop
add
add
mov
push
enter
rcl
pop
roll
add
mov
mov
jp
in
lock
lcall
pop
in
add
push
push
lea
push
call
add
icebp
jecxz
add
jno
out
imul
sti
hlt
mov
stos
std
pop
scas
test
fwait
add
ret
cmp
add
je
add
call
les
popa
add
leave
fmul
loop
fs
mov
add
add
add
je
xchg
clc
nop
add
xchg
int3
outsl
add
lret
add
insb
add
fwait
xchg
mov
rcrb
jecxz
movl
add
mov
add
cltd
faddl
sub
pop
mov
xor
push
push
call
imul
mov
outsl
rolb
jecxz
fwait
jb
add
add
add
push
rcrl
mov
addl
clc
js
xlat
jb
rcrl
add
mov
mov
in
clc
pop
add
push
push
lea
push
push
push
push
call
fstps
add
mov
add
add
jmp
push
add
xchg
jb
lcall
fstpl
add
inc
or
mov
lea
push
lea
push
push
lea
push
call
push
add
pop
arpl
xchg
enter
nop
mov
add
fadds
js
mov
shr
popa
js
add
add
cmpsl
xchg
add
jecxz
in
in
lcall
lock
push
lea
push
call
jae
jecxz
mov
jnp
push
scas
in
add
mov
mov
xchg
push
push
add
movsl
fwait
int3
push
popa
add
loopne
add
add
add
add
add
fidivrs
add
subl
add
lcall
push
lea
push
push
push
push
push
push
push
push
call
clc
add
lock
push
lahf
push
pop
add
int
add
add
add
cld
add
iret
add
add
icebp
add
lcall
dec
add
icebp
cmp
push
lea
push
lea
push
push
push
call
test
ficoml
fists
mov
add
add
mov
add
jmp
add
test
jl
subl
add
add
lock
add
lods
add
faddl
fnstcw
call
push
mov
push
push
lea
push
push
push
push
push
push
push
call
add
cld
mov
add
in
int3
pop
xchg
nop
push
nop
push
popf
jge
jecxz
add
add
push
add
mov
xchg
je
jl
jp
mov
add
mov
add
add
nop
icebp
roll
pop
jae
add
add
push
pusha
je
in
loopne
xor
push
push
push
lea
push
push
push
lea
push
call
mov
add
mov
add
add
add
add
int3
add
mov
nop
add
in
andb
xlat
xchg
add
add
pop
add
push
push
lea
push
call
add
mov
icebp
add
cwtl
add
add
add
add
add
addr16
pop
add
xchg
add
pop
out
cmpsl
ror
imul
mov
mov
add
add
ror
lea
mov
jnp
mov
jmp
add
add
enter
push
push
push
push
call
mov
add
loop
xchg
add
je
add
xchg
mov
jbe
add
add
into
bound
add
add
cld
jne
add
mov
xchg
imul
add
mov
add
sub
pop
pop
push
push
lea
push
call
xchg
je
add
add
mull
push
fs
lret
push
add
pop
lret
in
jb
pop
push
add
stos
add
mov
add
lcall
movsb
pop
push
push
lea
push
lea
push
push
push
call
test
add
clc
add
bound
mov
add
movsl
add
cwtl
xorb
fwait
push
add
mov
xchg
out
les
add
cltd
test
in
call
mov
push
push
push
push
call
mov
add
add
lahf
mov
fiadds
popa
mov
mov
add
add
push
rcrl
xchg
iret
pop
shl
add
mov
add
movsl
roll
movsl
xchg
add
pop
push
cmpsl
push
mov
mov
add
add
xorl
enter
ljmp
mov
lock
lcall
pop
in
push
push
push
push
call
add
jnp
ficomps
add
add
les
add
pop
hlt
test
add
jbe
addb
les
add
pusha
push
add
ret
test
add
push
push
push
push
push
call
clc
add
add
add
out
jbe
add
into
push
enter
addb
add
movsb
add
jne
mov
adc
add
push
pop
divb
les
xchg
rolb
add
jmp
mov
std
xchg
in
xchg
add
add
add
lds
add
add
std
add
in
pop
add
push
push
lea
push
push
call
int
addr16
pop
add
imul
lea
sar
jge
mov
lods
xchg
mov
jp
pop
sahf
add
add
mov
stos
insb
mov
add
push
push
add
add
add
je
mov
xchg
rolb
add
add
mov
mov
mov
add
lcall
inc
and
or
or
push
push
push
push
lea
push
lea
push
push
push
call
push
std
push
mov
mov
test
dec
add
mov
add
mov
fcmovne
fadds
jne
gs
popa
add
fs
lret
add
imulb
mov
pusha
loopne
pop
sti
xlat
add
lcall
add
push
push
push
push
call
pop
popf
jmp
add
add
data16
add
xlat
add
jae
add
add
add
xchg
fadds
add
add
add
jecxz
pusha
add
jae
jbe
lock
sub
pop
add
push
push
push
push
call
mov
ja
add
call
push
movsb
bound
add
add
addb
mov
add
fidivrs
fsubrs
add
notl
mov
xor
push
lea
push
push
push
push
lea
push
call
int
add
fwait
jns
shll
pop
into
mov
scas
mov
push
sar
int
shr
add
negl
mov
xchg
rclb
add
test
cwtl
mov
jns
lods
add
fst
imul
int
add
loope
neg
movsb
add
xlat
fcompl
test
lcall
dec
sub
or
sbb
add
outsl
enter
push
xorb
sti
add
cmpsl
call
fucomip
add
add
mov
movsb
add
cmc
loop
enter
movl
and
lea
push
push
push
lea
push
push
push
lea
push
push
call
ror
mov
in
jb
add
add
jl
push
sahf
pop
add
mov
add
pop
je
add
nop
mov
stc
stc
push
jnp
push
push
add
mov
xchg
imul
add
lea
push
lea
push
push
push
call
add
add
add
add
xlat
add
pop
add
jae
clc
add
add
mov
mov
lcall
movsl
add
imul
in
in
pop
add
push
push
push
push
push
call
add
add
add
add
mov
jne
movb
add
add
int3
add
clc
add
cmpsl
xchg
add
rcll
push
call
add
jecxz
hlt
mov
add
jbe
add
add
sti
add
stc
test
xorl
jge
cwtl
xchg
clc
lods
xchg
hlt
addr16
add
add
add
faddl
lcall
fsubrs
loopne
stos
push
shr
push
or
inc
add
sub
ror
sub
sub
pop
sub
pop
push
push
lea
push
push
call
stos
in
add
fs
out
add
add
fiaddl
ljmp
cli
add
popa
in
jecxz
add
cmpsb
add
in
jle
add
add
mov
lret
hlt
jb
cltd
jle
mov
addr16
add
mov
add
cmp
cwtl
mov
add
mov
lcall
jne
call
push
push
push
lea
push
push
call
testb
icebp
aam
add
mov
pop
add
add
iret
fists
pop
add
mov
call
add
negl
jno
jge
add
stc
mov
push
icebp
popa
loope
addb
js
mov
lods
push
xchg
add
incb
add
lcall
add
dec
test
lea
push
or
not
add
add
sub
lea
lea
pop
shr
pop
push
shr
inc
lea
add
pop
push
push
sub
xor
pop
push
push
rol
shl
pop
call
mov
push
lea
push
call
add
hlt
add
add
mov
arpl
hlt
add
add
add
add
fiadds
fists
add
outsl
add
add
test
add
xchg
add
pop
add
in
pop
add
cmpsl
add
jmp
lds
in
add
add
lcall
push
shr
pop
push
push
not
sub
lea
pop
mov
push
push
push
push
lea
push
call
arpl
add
add
xlat
add
add
pop
add
mov
add
add
add
pop
cmc
add
fcomi
std
test
add
lock
mov
add
add
xchg
mov
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
in
iret
mov
add
mov
frstor
add
mov
add
pop
ja
push
sti
push
cli
hlt
jb
mov
add
jmp
loope
cmc
push
xchg
stos
add
fiadds
add
xchg
in
mov
push
add
fisttpl
in
fcomps
ret
add
add
push
push
call
xchg
aad
add
add
in
add
roll
mov
int
stos
add
add
add
push
js
in
clc
pop
add
mov
xor
push
lea
push
push
lea
push
call
add
add
loopne
add
add
pop
test
add
add
xchg
add
mov
pop
add
jno
mov
add
faddl
jne
push
shr
inc
sub
shl
pop
push
push
push
push
push
lea
push
push
push
push
call
test
add
mov
push
filds
loope
jmp
int
add
clc
add
ljmp
mov
xchg
lock
xchg
aad
test
cmc
out
pop
add
push
lret
jle
add
push
add
loopne
mov
xor
push
push
push
push
push
lea
push
push
push
call
js
add
lret
add
je
push
fldenv
rorb
add
add
scas
into
mov
jne
xorl
xchg
mov
lds
movsb
out
add
fdivrs
mov
add
icebp
addr16
faddl
lock
push
lea
pop
mov
xor
push
xor
shl
pop
rep
push
sub
dec
pop
mov
push
push
push
push
push
call
mov
add
mov
cwtl
cmc
push
add
pushf
mov
jbe
add
add
popa
sahf
add
add
xchg
add
add
mov
test
jae
jge
in
lods
fimuls
add
add
cmpsb
add
or
push
push
push
call
lea
xchg
fwait
iret
add
add
popf
imul
iret
nop
xchg
add
nop
insb
add
outsl
add
add
add
movsb
mov
mov
lcall
les
add
push
lea
push
push
lea
push
call
movsl
add
add
add
add
add
movsb
add
add
pusha
shl
push
add
test
gs
addr16
xchg
out
mov
popf
mov
fmul
rcrb
cwtl
lea
add
sub
pop
or
je
mov
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
push
add
add
mov
js
jge
add
add
pop
xchg
add
sbbw
add
push
add
cmpsb
into
add
add
mov
in
fdivr
lcall
xor
push
push
push
push
lea
push
push
push
call
add
sahf
test
add
mov
add
add
add
push
add
shr
mov
mov
jns
mov
add
rolb
in
cmpsl
pushf
popf
add
add
stc
clc
aad
add
jbe
mov
lcall
les
rol
rol
add
rol
pop
mov
xor
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
cmc
stos
add
add
add
add
add
cmc
add
aad
fldenv
add
jno
add
add
mov
out
cld
push
xchg
sahf
pop
cmpsl
icebp
out
fadds
push
movsb
add
add
push
add
push
add
jbe
scas
add
sub
pop
add
push
lea
sub
ror
pop
add
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
incb
add
add
add
movsb
add
lcall
fistps
movsb
add
add
cmpsl
jmp
add
add
add
add
pusha
add
add
sub
pop
push
push
push
push
lea
push
call
jae
scas
xchg
scas
jmp
mov
push
mov
add
xchg
les
icebp
addr16
mov
add
add
lret
add
imul
add
add
shr
enter
mov
add
mov
add
inc
or
mov
lea
pop
add
push
shl
pop
pop
rep
push
push
lea
push
lea
push
push
call
ljmp
mov
add
test
roll
add
add
mov
mov
divb
int3
add
loopne
lods
mov
out
add
add
lret
test
add
lods
add
jl
add
add
add
add
sub
pop
mov
push
push
lea
push
call
add
fs
pop
stos
add
mov
cmc
nop
jmp
fidivrl
add
cli
push
add
add
mov
in
add
jecxz
test
imul
loope
add
push
into
in
int
sub
jmp
mov
add
out
std
push
arpl
add
add
add
sahf
add
sub
pop
xor
push
lea
push
call
gs
mov
add
add
ret
add
add
mov
xchg
fildll
cld
add
add
test
out
mov
cmc
scas
add
rolb
push
push
add
rolb
xlat
add
xchg
insb
mov
push
notb
xchg
icebp
mov
add
mov
add
test
in
clc
lcall
les
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
stos
rcrb
add
mov
insb
fiadds
iret
cmpl
arpl
rolb
stc
add
loop
jnp
add
mov
fs
add
stc
roll
lods
roll
outsl
push
add
push
sub
mov
in
fcomps
leave
je
push
xor
sub
ror
xor
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
pusha
add
std
mov
add
add
clc
add
mov
mov
stos
jmp
leave
mov
out
add
shll
popl
je
fildl
mov
jl
add
add
jp
popa
xlat
scas
fildl
cli
add
subl
loopne
add
add
push
push
push
lea
push
call
xchg
add
add
add
add
add
add
mov
stos
lcall
in
add
sahf
rolb
cwtl
add
or
push
lret
sub
pop
rep
push
sub
pop
pop
push
push
sub
add
not
push
and
add
xor
sub
add
pop
shr
pop
push
push
push
lea
push
push
call
js
out
add
add
add
cmpsl
add
lds
add
add
add
lods
scas
clc
add
add
call
fs
add
push
lea
rol
pop
mov
push
xor
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
les
mov
jo
pop
add
add
add
mov
add
add
lds
add
idiv
jecxz
pop
xlat
add
cld
mov
in
fdivr
lcall
inc
and
push
push
push
lea
push
lea
push
push
push
push
call
jp
mov
test
mov
pop
fcompl
fst
pushf
push
ret
movsl
xchg
add
sahf
jb
xchg
add
add
in
add
add
aam
add
mov
add
add
add
movsb
stos
cld
rolb
les
loop
cltd
jne
add
jmp
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
out
add
fs
lcall
enter
add
add
lret
cltd
add
fbld
mov
add
fimuls
add
add
in
fcompl
mov
push
shr
pop
add
push
xor
lea
add
pop
push
push
push
shl
inc
rol
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
insb
out
push
cmc
add
mov
add
add
jne
lds
lea
add
add
add
add
push
pop
add
add
enter
add
out
add
mov
add
mov
add
fdivl
push
in
ret
fdivr
lcall
mov
push
sub
pop
pop
pop
push
xor
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
jmp
add
lock
jmp
add
add
add
jns
add
add
mov
loope
add
popl
pop
add
ror
fdivl
push
add
aam
out
mov
aam
stc
lret
insb
jmp
mov
addl
sub
pop
pop
push
push
push
push
call
out
in
test
pushf
pop
cmpsb
add
add
addr16
add
mov
add
jmp
adc
add
add
lcall
push
lea
push
push
call
cmc
add
in
add
test
out
mov
lea
jmp
add
add
mov
cli
add
ret
pop
add
pop
adcb
add
stc
add
mov
pop
loope
add
lcall
push
pusha
add
ja
sti
pop
add
sub
pop
ret
push
lea
push
push
push
push
push
push
lea
push
push
push
call
jne
add
add
mov
lds
leave
add
shr
mov
ljmp
add
gs
xchg
sti
add
jo
mov
in
int
enter
mov
mov
xchg
add
add
out
cmc
pop
add
xchg
std
jmp
add
add
cld
popa
jge
iret
jns
add
xchg
push
mov
push
inc
pop
add
push
sub
add
inc
ror
pop
push
push
push
push
push
push
push
lea
push
call
push
push
imul
mov
add
mov
jns
mov
jne
add
test
andl
add
push
add
xchg
movsl
jnp
add
test
mov
add
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
xchg
add
lock
imul
push
scas
add
call
add
int
mov
into
nop
add
add
cwtl
sarl
add
sahf
mov
add
iret
fadds
push
cwtl
lea
add
mov
test
add
push
loope
fstps
lcall
inc
cld
add
add
push
push
push
push
lea
push
call
jmp
addr16
addr16
xchg
cld
stos
add
add
fnstenv
add
lods
lods
rolb
arpl
inc
clc
incl
add
add
lock
pop
mov
push
push
push
push
lea
push
push
push
call
add
ja
ljmp
push
pop
add
add
add
add
popf
add
add
fdivrl
add
lea
add
test
lds
sahf
stos
addb
add
add
mov
aam
in
aam
cld
add
hlt
pop
jl
xchg
ja
sub
pop
pop
push
sub
lea
pop
pop
push
lea
push
call
add
hlt
repnz
push
mov
add
add
mov
add
add
cli
add
bound
out
lea
in
xchg
add
hlt
incb
pop
add
add
xchg
mov
add
add
sub
pop
pop
push
pop
pop
push
add
pop
leave
push
sub
inc
ror
pop
ret
push
sub
pop
push
mov
push
ror
lea
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
lock
xchg
out
out
add
jo
add
jb
add
add
ljmp
push
add
xchg
ret
add
loop
imul
add
mov
int3
xchg
mov
test
push
add
in
mov
pop
jl
add
in
fcompl
push
push
lea
push
push
push
push
push
push
lea
push
push
call
ljmp
pop
add
mov
jne
add
in
popf
out
add
add
cmpsl
leave
add
scas
add
into
add
je
add
testl
push
lea
push
push
push
push
push
push
push
call
sahf
movsl
jp
cmpsl
add
mov
add
jo
mov
add
jne
push
clc
add
add
ret
add
jl
sub
pop
addl
push
push
push
push
push
push
push
push
push
push
call
add
pop
xchg
add
movsl
add
xchg
fstpt
bound
add
repnz
add
lock
bound
stc
shrl
fwait
jge
enter
flds
lcall
add
or
add
inc
pop
mov
pushl
push
push
push
push
push
lea
push
lea
push
lea
push
call
in
movsl
add
add
scas
loope
pushf
add
add
mov
add
add
add
xchg
out
loopne
xchg
mov
add
add
jno
add
xchg
jl
add
std
outsl
push
aad
jb
into
jns
fiaddl
fwait
sarl
cld
add
push
jmp
shl
jb
add
in
loopne
push
push
lea
push
push
push
lea
push
call
popa
add
add
mov
lcall
movl
int3
orb
add
clc
add
add
add
add
call
push
lea
push
push
lea
push
lea
push
call
xchg
add
add
mov
add
add
sarl
xlat
imul
movl
pop
add
out
add
pop
imul
add
jge
add
test
call
aam
arpl
dec
dec
or
xchg
mov
inc
add
add
je
mov
pop
xchg
add
out
pop
sahf
add
mov
mov
stos
addl
add
add
add
jl
push
out
jmp
add
add
add
lock
ficompl
sub
pop
pop
push
push
push
call
jecxz
pop
add
rclb
xor
clc
add
insb
sti
mov
lods
je
push
add
lea
sub
pop
pop
push
push
call
add
add
push
pop
fs
bound
repnz
add
add
add
add
mov
in
clc
lcall
push
push
push
lea
push
push
push
push
push
call
xchg
hlt
jp
mov
int
pop
add
cmc
add
in
pushf
in
add
mov
jp
sti
in
add
add
loopne
lcall
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
fsubl
add
pushf
cmc
add
add
xlat
add
roll
mov
push
add
pop
jge
test
insb
sarl
add
add
in
add
add
movb
add
xchg
sub
pop
leave
push
lea
push
call
mov
jae
mov
outsl
ja
xlat
add
mov
imul
popa
movb
push
mov
add
mov
add
mov
fdivrs
in
clc
pop
ret
push
push
push
push
push
push
push
lea
push
lea
push
call
test
add
loope
test
addr16
add
add
add
in
jo
lret
leave
cltd
mov
add
sub
pop
push
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
in
in
push
mov
pop
add
subl
xchg
cli
jne
add
movsl
jb
ja
pop
add
lret
scas
add
addl
mov
add
add
add
xchg
add
js
fcomps
enter
pop
add
push
rol
xor
lea
pop
push
push
lea
lea
shl
pop
push
push
inc
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
cmc
add
add
add
add
mov
add
mov
xchg
fadds
add
sahf
mov
xchg
add
int
add
add
loopne
add
inc
cld
or
add
push
push
push
push
lea
push
call
add
add
add
pop
cmpsb
add
int3
out
add
push
add
ja
add
add
pop
add
sub
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
test
add
xchg
aad
int
in
push
scas
stc
add
pop
les
roll
xchg
add
add
roll
bound
add
add
insb
flds
cwtl
mov
ljmp
mov
jmp
jae
repnz
cmpsb
rcll
pop
call
push
push
push
push
push
call
add
add
pop
add
rclb
add
sbbl
mov
mov
imul
loop
js
movb
add
test
jnp
test
add
lahf
out
mov
test
xchg
add
imul
push
ja
add
imul
fstpt
add
xlat
stos
add
scas
mov
fildl
sub
pop
subl
cmpl
jne
push
push
push
push
push
push
push
call
push
ja
xchg
add
roll
ljmp
add
add
xchg
push
scas
out
pop
out
out
add
cmpsl
add
mov
add
movsl
add
push
push
imul
sti
pop
lret
fildll
add
loop
add
mov
push
jb
fsubrs
out
mov
mov
pop
push
inc
not
sub
dec
pop
pop
push
push
push
push
push
push
push
push
call
add
add
scas
add
pusha
ffreep
jp
add
add
movsl
add
add
mul
incb
leave
add
add
fiadds
pop
sub
pop
pop
push
ror
dec
pop
pop
leave
push
shl
sub
add
pop
ret
push
not
xor
add
pop
push
push
push
call
add
mov
loopne
jge
mov
add
rorl
pusha
orb
push
pop
negl
mov
cmc
pop
add
pop
add
pop
mov
ljmp
popl
filds
fadds
sub
pop
mov
push
not
pop
add
push
push
push
push
lea
push
push
call
in
call
push
xchg
mov
pushf
rcll
add
add
lahf
cmpsb
add
in
cmc
xchg
stos
add
add
add
mov
add
test
add
fidivrl
mov
cltd
fdivp
filds
lods
je
add
xorl
sub
pop
push
push
pop
push
push
lea
pop
push
push
push
push
push
lea
push
push
push
call
add
out
add
pop
add
test
imul
add
add
js
add
aam
stc
push
addl
in
in
push
push
push
xor
push
push
pop
add
rol
sub
sub
pop
shr
shr
dec
lea
pop
push
dec
pop
pushl
call
push
lea
push
push
push
lea
push
call
add
mov
test
xchg
jle
les
add
test
add
mov
movsl
clc
add
add
mov
pop
mov
sti
icebp
add
add
jno
jnp
add
xchg
into
scas
add
lods
sti
out
add
lcall
shrb
mov
cmp
ffreep
lret
xchg
add
inc
push
push
pop
add
rol
shl
shr
sub
sub
not
rol
pop
inc
xor
pop
push
push
push
push
lea
push
push
push
push
push
call
xchg
add
mov
hlt
add
mov
push
mov
enter
push
out
add
mov
add
lret
cmpsb
cld
scas
mov
sahf
add
repnz
pop
pushl
push
push
push
call
lods
cltd
ja
xchg
add
add
add
roll
add
rolb
not
addl
mov
mov
mov
mov
sti
movb
lcall
or
add
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
xchg
add
add
outsl
push
add
sarb
pop
jl
out
mov
add
push
cld
into
add
mov
pusha
mov
add
lock
aad
push
scas
pop
add
add
sub
pop
call
mov
push
push
push
push
call
add
jmp
out
jmp
scas
add
add
popa
test
add
add
roll
mov
pop
add
add
add
icebp
add
loopne
addl
imul
out
push
sub
pop
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
pop
add
andb
add
mov
add
repnz
out
push
add
add
add
add
call
xor
dec
shl
pop
mov
shr
push
rol
shl
pop
add
mov
push
push
push
call
add
add
cltd
add
push
loope
add
add
insb
stc
aad
add
add
add
mov
add
mov
add
lcall
andb
or
rol
lea
pop
add
mov
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
xlat
push
test
fisubs
add
add
jp
lret
add
lret
mov
mov
ror
mov
add
add
add
std
sub
pop
mov
cmp
jne
push
lea
push
push
push
lea
push
push
call
js
pop
add
data16
add
lea
add
jne
add
add
jo
mov
add
push
je
push
hlt
pop
add
push
mov
mov
add
jmp
in
call
add
add
test
add
push
sub
inc
lea
pop
mov
movl
push
not
xor
pop
jmp
mov
push
add
dec
add
pop
mov
push
add
pop
sub
jne
push
shr
shl
pop
mov
push
lea
push
push
push
push
call
loope
add
in
add
scas
pop
add
add
out
push
add
add
push
add
add
out
jbe
shlb
mov
add
out
cli
popf
add
add
add
pop
mov
shlb
sub
pop
movl
jmp
push
push
lea
push
push
call
add
add
add
add
movsl
scas
jno
lods
rcl
add
call
add
pop
mov
mov
push
push
push
call
add
shr
add
pop
add
mov
mov
idivl
add
add
add
add
in
add
xchg
pushf
add
sarb
push
adc
add
add
add
rcrb
loop
mov
jecxz
incb
add
lcall
cli
add
test
rol
rol
xor
pop
mov
push
lea
lea
pop
movl
push
push
call
mulb
add
xchg
cmpsb
shl
lret
add
int3
add
lock
cld
lds
jge
xchg
add
jno
pop
jae
add
lcall
test
idivl
xchg
pop
xlat
movsl
add
mov
insb
add
fldl
add
out
sub
pop
jmp
push
add
dec
pop
mov
push
add
pop
cmpw
jne
push
xor
rol
pop
mov
movl
push
push
push
push
push
push
call
orl
add
mov
add
mov
sti
add
add
cld
add
pop
add
add
je
mov
sub
pop
jmp
push
lea
push
push
push
push
lea
push
push
push
call
in
loope
jno
in
roll
add
fdivl
mov
cmpsb
add
pop
add
xchg
add
movsb
push
popf
add
pop
mov
scas
push
mov
adcl
add
add
fisubl
add
sub
pop
pushl
push
push
lea
push
push
push
push
call
add
add
hlt
rolb
add
jle
add
lea
cld
add
add
in
pop
add
add
add
xchg
pop
stc
mov
xchg
push
imul
add
add
cltd
push
fstl
pop
testb
add
add
loop
clc
xchg
lock
sub
pop
pop
push
shr
rol
pop
mov
mov
push
push
push
push
push
push
push
push
push
call
add
lret
cmpsb
add
add
lret
mov
pop
test
add
call
add
ret
jne
movsl
aam
outsl
add
mov
aad
shl
lods
leave
add
add
cmpsb
andb
xchg
cmc
pop
cli
add
outsl
add
sub
pop
mov
push
push
ror
push
push
pop
add
xor
dec
sub
sub
dec
pop
lea
inc
not
pop
push
dec
dec
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
imul
in
add
add
ja
push
loope
mov
fldl
add
mov
add
cli
pop
bnd
test
add
loop
xchg
std
cli
pop
add
mov
add
jmp
push
mov
add
add
movsb
add
jle
lds
aam
jns
cmc
movsl
add
cld
xor
add
rcrl
cmpl
je
push
push
xor
xor
push
sub
add
lea
ror
inc
sub
sub
add
pop
pop
push
add
pop
push
push
dec
not
ror
pop
call
push
push
lea
push
push
lea
push
push
push
push
push
call
test
xchg
add
fiadds
push
add
nop
add
add
add
add
fists
cmpsb
lods
mov
loop
cltd
mov
stc
popf
popa
ret
sub
pop
cmpl
je
push
push
not
xor
sub
push
and
add
sub
shl
inc
add
pop
rol
sub
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
lea
mov
add
mov
mov
jmp
add
add
aad
out
push
loopne
idivl
mov
push
call
pop
push
scas
lea
sub
pop
push
push
dec
ror
add
pop
call
push
push
push
lea
push
push
push
push
call
js
aad
add
idiv
pop
sti
add
add
xchg
jecxz
add
add
addr16
xchg
je
add
mov
mov
add
sarl
outsl
roll
mov
add
lods
clc
add
xchg
incb
add
rolb
add
add
loop
mov
push
mov
in
cmpl
je
push
push
add
push
sub
add
ror
rol
sub
add
pop
rol
rol
pop
push
shl
pop
push
push
lea
not
not
pop
call
push
lea
push
push
lea
push
call
push
movsb
xor
scas
arpl
lret
add
add
addb
test
mov
add
add
add
aam
int
sbb
xchg
add
je
add
roll
add
stc
push
push
push
pop
rorb
fsubs
add
add
jecxz
pushf
add
push
testb
sub
pop
cmpl
je
push
push
add
push
or
inc
add
lea
sub
lea
inc
shl
pop
lea
xor
pop
push
push
call
add
add
jbe
lods
add
pop
add
loope
rolb
jp
add
in
enter
jmp
add
scas
bound
add
cmpsl
andl
lcall
push
lea
sub
pop
call
push
shl
xor
xor
pop
cmpl
je
push
push
add
push
and
add
shr
sub
add
pop
sub
pop
push
push
push
push
call
shrl
iret
fiaddl
fdiv
push
ja
push
hlt
lods
add
test
add
xchg
push
js
add
not
add
push
call
push
inc
pop
cmpl
je
push
push
lea
rol
push
sub
add
sub
rol
sub
rol
inc
pop
dec
add
inc
pop
push
ror
lea
pop
push
push
push
lea
push
call
clc
ror
fisubrl
add
add
loop
mov
imul
repnz
add
imul
aam
shlb
jb
loope
leave
push
ficoml
add
in
add
cwtl
ljmp
js
sahf
add
add
scas
add
repnz
jle
mov
jl
in
hlt
pop
call
push
push
push
push
call
addl
jo
add
jp
add
jno
add
mov
add
aam
ja
jnp
add
add
add
loopne
mov
nop
mov
jp
add
xchg
mov
add
pop
fimuls
lret
add
add
orb
in
add
lcall
cmp
or
int3
je
push
push
shr
xor
push
and
add
sub
shr
pop
shr
pop
push
inc
pop
push
push
inc
ror
pop
call
cmpl
je
push
push
push
and
add
dec
ror
shl
sub
dec
lea
pop
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
mov
jecxz
add
mov
mov
movsl
stos
testb
mov
jecxz
push
add
mov
mov
out
stos
jbe
add
add
add
jecxz
xlat
in
arpl
lret
ljmp
addb
je
incb
iret
fimuls
sub
pop
push
call
push
pop
cmpl
je
push
push
inc
sub
sub
not
push
and
add
sub
sub
add
sub
pop
lea
not
pop
push
lea
push
push
push
push
push
lea
push
call
add
add
jne
lods
add
add
push
shlb
mov
fdivrs
fiaddl
lahf
add
add
add
call
push
push
push
lea
push
push
push
lea
push
push
push
call
add
testb
scas
cmc
add
add
push
in
xchg
add
add
js
jmp
movsl
jns
js
xchg
add
add
add
icebp
gs
add
addb
sub
pop
cmpl
je
push
push
sub
push
and
add
shl
not
shl
sub
add
inc
sub
pop
sub
lea
pop
push
lea
push
call
stc
add
enter
movsl
add
add
add
add
jno
add
mov
into
pop
add
push
add
mov
add
mov
xchg
fisubs
add
clc
lcall
push
sub
pop
call
push
lea
add
pop
cmpl
je
push
push
xor
push
or
inc
add
xor
rol
sub
shr
sub
rol
pop
add
pop
push
shr
lea
pop
push
call
push
dec
add
xor
pop
cmpl
je
push
push
not
shl
push
and
add
rol
sub
xor
pop
rol
add
pop
push
not
xor
pop
push
push
ror
shl
pop
call
cmpl
jne
push
lea
pop
mov
push
sub
add
pop
movl
push
not
not
pop
jmp
push
push
lea
push
push
push
push
push
push
lea
push
call
lcall
add
mov
add
add
xchg
pop
xchg
push
jbe
add
outsl
pushf
jl
popl
movsb
movl
mov
scas
xchg
add
insb
cwtl
add
fists
xchg
int
mov
add
add
add
mov
fistpl
negl
pop
xor
push
add
ror
pop
pop
push
ror
lea
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
call
lahf
int3
add
mov
add
add
hlt
add
mov
fiaddl
push
ljmp
add
mov
mov
add
aam
pop
add
add
jns
faddl
stc
mov
cli
lahf
xchg
add
sti
loop
add
add
jns
add
jle
add
jmp
mov
in
sub
pop
pop
push
push
push
call
add
xchg
leave
add
out
mov
data16
add
add
fcompl
cli
xchg
xchg
add
add
bound
add
mov
jmp
jge
lret
fstpl
cmp
mov
add
mov
add
shl
mov
in
hlt
pop
pop
push
sub
shr
pop
leave
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
mov
add
add
add
add
movsl
add
je
cmpsl
xchg
popf
mov
add
push
add
nop
jae
popl
mov
pop
sub
pop
ret
push
push
push
push
lea
push
push
call
add
hlt
lret
jl
add
nop
mov
out
add
pop
mov
add
enter
xchg
loope
lds
pop
sub
pop
mov
push
xor
rol
pop
add
push
push
push
push
call
add
je
iret
add
mov
mov
in
testl
jecxz
mov
out
mov
out
movsl
mov
js
scas
mov
test
mov
xlat
mov
rolb
push
jge
in
lock
cmpl
jne
push
push
sub
shr
add
rol
push
or
not
add
xor
xor
dec
sub
sub
shr
dec
sub
pop
pop
push
push
push
push
push
push
call
out
add
fisttpl
add
jb
ja
jmp
arpl
mov
pop
add
pusha
mov
arpl
jno
mov
add
mov
mov
pusha
lret
fadds
push
add
add
lcall
jne
push
push
push
call
mov
loop
add
lret
cmpsl
jnp
int
xchg
add
mov
test
push
add
into
add
data16
cli
aam
add
lods
mov
add
testb
pop
add
call
push
add
add
pop
push
push
lea
push
push
lea
push
push
call
add
push
add
push
sahf
add
imul
shll
add
add
leave
add
fisubl
xchg
enter
fucompp
mov
test
add
add
add
subl
add
mov
lds
add
xchg
fwait
sub
pop
call
push
lea
shl
pop
jmp
push
sub
shl
lea
pop
cmpl
jne
push
rol
add
inc
pop
mov
push
xor
add
pop
call
ret
push
sub
not
pop
jmp
push
sub
ror
shl
shr
pop
cmpl
jne
push
push
dec
shr
push
or
not
add
xor
rol
sub
rol
sub
shl
shl
add
pop
shr
pop
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
xchg
cltd
insb
mov
add
fisttps
add
aam
call
stos
mov
mov
add
add
pop
mov
mov
add
sti
mov
pushl
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
add
add
movb
mov
cld
jae
add
js
add
mov
add
add
add
roll
mov
rolb
stc
pop
add
add
pop
push
mov
stos
test
mov
pop
add
sub
pop
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
pop
je
add
push
add
cmc
add
add
add
mov
roll
ja
add
sbbb
add
icebp
in
jmp
mov
sarb
add
test
add
mov
ja
into
add
mov
addr16
xchg
add
add
cmc
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
jp
cmc
sarl
add
add
add
push
out
lahf
add
fstp
fidivrs
add
add
fwait
incb
jle
sub
pop
call
push
sub
pop
jmp
push
push
push
call
add
jge
call
add
loope
xchg
stos
add
lods
add
xchg
add
cli
cwtl
mov
cmpl
je
push
sub
xor
dec
xor
pop
cmpl
jne
push
add
pop
mov
mov
push
push
lea
push
push
push
lea
push
push
call
add
sar
add
add
imul
add
add
xchg
mov
scas
faddl
add
add
push
add
add
add
pop
add
mov
int
jle
add
mov
push
push
add
leave
stc
push
add
fbld
fildl
movsl
out
pop
mov
mov
in
in
lcall
push
add
pop
call
push
push
lea
push
xor
add
dec
shr
shl
sub
shl
pop
lea
not
pop
push
push
push
push
push
push
push
push
push
push
call
cld
add
add
add
add
xchg
add
add
add
aam
ficomps
flds
stc
insb
xchg
xchg
bound
cld
fwait
mov
scas
add
pop
movsb
div
in
jl
push
mov
xchg
shll
aam
pop
fistl
in
xchg
vfrczsd
fcomps
jne
push
rol
pop
call
push
push
push
push
lea
push
call
add
fcoms
add
std
mov
add
pusha
add
imul
add
add
xlat
add
shrb
ror
cmp
test
mov
into
push
push
pop
add
sub
not
sub
add
rol
pop
rol
add
not
pop
push
lea
push
push
push
lea
push
lea
push
call
fcmove
mov
add
jmp
add
jbe
movsl
add
add
out
mov
lret
mov
ret
lds
add
push
add
add
add
je
loop
mov
int
add
jne
call
push
lea
push
push
push
push
push
push
push
call
jecxz
lock
ret
add
add
cli
popa
faddp
add
add
add
stc
jae
jle
cmc
add
jl
add
ja
notl
xchg
jecxz
push
add
xchg
add
cwtl
out
jle
add
mov
lret
pushf
sub
pop
call
push
push
sub
push
xor
add
not
dec
sub
rol
shl
dec
sub
pop
add
rol
xor
rol
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
jns
popf
add
add
add
add
add
jl
mov
pop
sbbb
ret
jl
add
add
jecxz
add
sub
pop
pushl
push
dec
dec
add
pop
call
push
lea
pop
call
push
push
dec
dec
lea
dec
push
or
not
add
shr
sub
lea
sub
pop
not
shl
pop
push
push
push
lea
push
push
push
push
call
addr16
jmp
add
lahf
mov
xchg
jns
add
loop
add
jle
mov
add
leave
sub
pop
pushl
push
push
push
push
push
push
push
push
lea
push
push
call
iret
push
test
pop
cmpsl
pop
iret
add
mov
jns
call
nop
add
out
out
stc
scas
mov
add
add
jge
jmp
add
add
add
add
shrl
mov
add
lret
cmc
fldt
mov
add
add
add
in
fdivr
lcall
lds
add
push
push
call
mov
lret
mov
mov
jne
add
addb
add
in
icebp
add
cld
imul
pusha
mov
jbe
add
add
xchg
jno
jnp
jle
jp
out
addr16
jne
jb
sti
add
int
ljmp
rcrb
add
add
add
shrb
add
cwtl
push
shl
sub
shr
push
push
pop
add
add
sub
shl
add
shl
pop
sub
inc
pop
push
inc
dec
add
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
push
call
arpl
jp
add
jle
mov
add
fsubp
add
fldl
add
add
add
mov
in
fdivr
lcall
sbb
lret
and
jecxz
pop
call
push
push
add
ror
push
or
not
add
add
xor
sub
sub
pop
sub
add
shl
shl
pop
push
push
push
push
push
lea
push
push
call
loop
mov
xchg
mov
jmp
add
clc
add
add
add
mov
add
push
mov
scas
lods
add
sub
pop
pushl
push
inc
pop
call
push
pop
call
push
push
not
add
push
sub
add
sub
add
sub
dec
add
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
mov
xchg
add
jp
filds
aad
imul
add
lcall
add
arpl
add
pop
test
add
mov
add
pop
cltd
add
popl
loopne
add
insb
jmp
add
add
in
pop
add
add
lcall
jne
push
pop
call
call
push
push
rol
add
push
xor
add
not
inc
xor
sub
sub
xor
pop
inc
sub
pop
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
mov
add
mov
add
jl
leave
add
cli
idivb
out
add
in
stc
add
fwait
jge
bound
stos
std
mov
push
push
mov
add
xchg
add
nop
mov
add
lcall
jne
call
push
push
push
push
lea
push
push
lea
push
lea
push
call
shlb
add
add
add
outsl
out
add
mov
in
add
add
jecxz
add
stc
xchg
testb
test
add
mov
push
test
add
shlb
ja
add
jbe
push
jle
in
loopne
call
push
push
dec
add
add
push
or
not
add
rol
dec
sub
rol
inc
add
pop
add
shl
pop
push
push
push
push
push
lea
push
push
call
add
add
add
add
mov
add
jle
loop
add
push
add
add
in
add
jmp
push
pop
add
jnp
jl
test
shrb
jge
cmpsl
in
add
lcall
jne
push
push
call
leave
add
mov
mov
ret
add
icebp
lods
xchg
sti
fcomi
addb
add
add
into
xchg
add
into
jecxz
nop
rolb
add
cld
mov
add
add
add
cwtl
push
jle
pop
add
lcall
dec
sbb
add
mov
and
push
push
push
push
call
push
sti
xchg
mov
jb
xchg
jmp
arpl
add
xchg
add
add
add
push
add
rclb
add
add
lea
add
lcall
shrb
mov
mov
dec
shr
lea
rol
push
and
add
shl
sub
ror
dec
inc
pop
not
pop
push
dec
pop
pushl
push
rol
pop
call
lea
push
push
push
push
call
ja
call
lds
add
pop
push
push
add
mov
mov
add
out
mov
add
add
push
pop
addl
scas
mov
add
add
lcall
call
push
push
shr
push
push
pop
add
rol
add
sub
add
dec
lea
pop
shr
add
ror
lea
pop
push
push
lea
push
push
push
push
lea
push
push
call
push
imul
add
add
add
aad
add
roll
cwtl
mov
add
mov
push
cmpsl
add
pusha
in
je
add
leave
cli
imul
rolb
aam
ret
add
in
loopne
pushl
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
xchg
fnstenv
sahf
add
stc
add
push
add
cmc
sti
gs
scas
add
insb
lret
pop
add
gs
in
aad
add
in
add
add
add
add
jne
faddl
faddl
pusha
sbb
add
shrb
test
dec
ror
push
or
not
add
add
sub
shl
sub
rol
pop
not
pop
push
pop
pushl
call
push
shr
shr
pop
call
push
push
not
add
add
push
or
not
add
add
lea
xor
sub
add
add
pop
inc
add
pop
push
not
rol
rol
pop
pushl
push
inc
rol
pop
call
call
push
push
not
push
or
inc
add
not
xor
sub
dec
xor
add
pop
lea
inc
add
pop
push
sub
pop
pushl
call
push
push
inc
rol
rol
push
or
inc
add
ror
rol
sub
pop
ror
add
add
pop
push
push
shr
add
push
and
add
add
dec
sub
lea
pop
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
lcall
cmpsb
xchg
loope
mov
add
call
jnp
pushf
mov
loop
addr16
jbe
push
stos
add
movsb
pop
add
push
add
xchg
pop
rorb
mov
mov
jp
rolb
in
add
add
push
add
rcrb
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
fs
add
add
add
add
mov
stos
outsl
jle
mov
add
rol
sub
pop
dec
jne
call
push
dec
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
movsl
fnstcw
add
add
xchg
add
fiaddl
pop
flds
jae
add
neg
add
ja
add
pusha
jno
ljmp
push
cld
rolb
movsb
add
addb
rolb
xchg
xchg
mov
xchg
add
sub
pop
int
push
push
push
push
call
out
jge
mov
cli
shlb
push
mov
mov
add
lret
mov
pop
pop
add
lahf
stos
pushf
in
fs
add
mov
stos
pop
add
fdivrl
add
mov
lea
push
push
inc
xor
inc
push
push
pop
add
sub
ror
sub
dec
inc
rol
pop
xor
lea
pop
push
add
shr
pop
pushl
push
not
add
pop
call
push
push
xor
pop
call
push
push
sub
push
or
not
add
ror
rol
shl
sub
shl
pop
sub
add
pop
push
add
add
dec
pop
pushl
call
push
sub
rol
pop
call
push
lea
push
push
call
add
pop
stos
add
add
add
push
rolb
scas
add
add
test
mov
xchg
push
cmpsl
add
add
iret
add
mov
mov
lea
push
push
add
rol
xor
push
or
not
add
ror
dec
lea
sub
shr
lea
dec
pop
add
pop
push
pop
pushl
push
sub
pop
call
push
push
call
add
in
test
cmpsl
jp
lods
mov
call
add
jbe
mov
add
iret
add
addl
nop
cmpsb
add
ja
add
add
add
add
add
cmpsl
mov
lea
push
ror
add
shl
pop
push
push
push
push
push
lea
push
push
call
add
jo
add
pop
insb
jmp
add
outsl
ja
pop
add
add
mov
test
cli
out
jle
out
pop
test
pop
add
jno
int
add
add
in
lea
push
push
push
push
push
call
jecxz
mov
mov
mov
cld
bound
add
data16
lcall
add
mov
add
add
arpl
xchg
in
jo
add
add
add
add
roll
mov
add
in
lcall
add
and
sub
lea
push
push
push
push
push
lea
push
call
cmpsl
add
mov
loope
pushf
repnz
pop
add
push
nop
test
sahf
iret
in
arpl
add
imul
popa
push
loop
aam
nop
filds
add
mov
lods
out
jb
addb
in
loopne
pushl
push
push
sub
push
and
add
sub
sub
not
shl
pop
rol
xor
add
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
add
add
add
jecxz
mov
lods
aam
add
add
jp
lahf
jge
in
mov
mov
add
add
mov
rorl
mov
popf
fistpl
add
add
jl
add
fiaddl
fwait
incb
fisubrl
add
add
stos
js
push
lcall
push
inc
pop
call
push
push
lea
inc
push
xor
add
sub
lea
not
sub
shr
shr
pop
add
pop
push
ror
lea
pop
pushl
push
shr
sub
pop
call
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
lret
add
lods
fstl
add
push
cmc
jbe
add
cmpsb
lods
add
popa
mov
in
out
mov
xchg
shlb
push
add
add
add
ljmp
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
push
repnz
cwtl
call
add
int
mov
movsl
fsubrl
add
add
add
jecxz
mov
mov
add
add
mov
in
shrb
push
sub
pop
call
push
push
push
sub
add
inc
sub
sub
ror
pop
not
ror
shr
pop
push
not
pop
pushl
push
lea
push
lea
push
push
push
call
jae
aam
ja
add
pop
test
add
lock
add
pop
pop
out
add
mov
add
push
stc
add
mov
jp
add
insb
cltd
fwait
add
sti
xchg
cmpsb
stos
add
mov
push
add
add
jecxz
divl
add
insb
add
jae
sub
pop
call
call
push
dec
shr
pop
pushl
push
pop
mov
push
push
lea
push
push
call
subb
add
leave
mov
mov
add
in
rcr
mov
jb
lods
pop
cmc
mov
testb
add
arpl
fdivp
add
xchg
mov
add
mov
mov
mov
mov
jb
repnz
in
lock
lcall
insl
stc
ljmp
push
lret
mov
inc
push
or
not
add
ror
shr
sub
shl
dec
ror
pop
shr
shl
add
pop
push
push
lea
push
call
enter
mov
add
add
add
add
add
jne
addb
pop
in
add
ret
add
push
add
jbe
mov
add
test
cltd
fiaddl
test
pop
push
push
push
pushl
call
push
pop
push
push
push
push
call
mov
add
jp
lock
add
add
add
mov
add
mov
loopne
add
push
add
add
imul
mov
add
les
imull
xlat
add
push
add
push
mov
add
cli
add
add
sub
pop
call
push
push
inc
sub
rol
push
or
not
add
add
sub
dec
add
shl
pop
lea
pop
push
push
push
call
jo
add
jmp
mov
cld
add
lahf
cmpsb
add
cmpsl
add
add
clc
pop
out
add
add
repnz
push
add
mov
mov
add
fmulp
jle
in
movsb
imul
mov
aad
mov
cltd
int
jo
add
jp
frstor
hlt
pop
pushl
push
inc
ror
pop
call
push
lea
xor
xor
pop
push
push
xor
sub
xor
pop
call
push
push
push
push
push
push
push
push
call
jge
test
rolb
jne
jbe
add
add
pop
in
jbe
test
push
add
addb
mov
fdivrl
loope
les
aad
push
add
add
push
xor
rol
shr
pop
add
push
shl
add
inc
pop
pop
push
xor
pop
pop
push
not
inc
sub
pop
pop
push
rol
sub
ror
pop
xor
inc
push
dec
not
xor
rol
pop
ret
leave
push
push
push
lea
push
lea
push
push
push
lea
push
call
andb
pop
pop
aad
jns
mov
testl
sahf
add
mov
xchg
add
andl
add
add
loopne
ret
push
sub
pop
push
mov
push
ror
lea
shr
ror
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
lea
push
call
fcmovb
mov
pop
repnz
stc
xchg
xlat
pop
add
add
pop
jne
add
js
push
add
add
jmp
rol
mov
mov
test
add
mov
filds
add
add
cwtl
je
movb
add
iret
add
add
sub
pop
mov
jmp
push
inc
shl
pop
mov
push
rol
inc
xor
pop
and
xor
push
lea
push
lea
push
push
push
push
push
call
imul
je
jmp
mov
fcmovnbe
mov
jne
jo
fistpll
imul
lcall
push
adc
stos
push
push
push
lea
push
call
add
iret
add
js
mov
aam
divb
sbbb
add
add
xlat
mov
jp
lcall
push
lock
add
fildl
fs
in
add
mov
add
scas
add
add
add
rolb
lea
push
push
lea
push
push
push
lea
push
push
call
add
imul
addl
add
add
std
movb
pop
xchg
movsb
add
test
cli
pop
add
add
sahf
add
lret
add
in
loopne
xor
dec
push
dec
not
rol
ror
pop
sub
push
push
push
call
jl
push
out
jae
push
addb
popl
test
pop
add
add
not
jb
test
lcall
mov
push
lahf
sub
pop
jmp
push
lea
push
lea
push
push
lea
push
push
push
push
call
cld
cwtl
add
add
add
jle
add
add
xlat
push
mov
add
test
add
out
jmp
jbe
mov
push
mov
scas
ret
mov
add
jp
stos
add
pop
sub
push
add
dec
pop
pushl
pop
push
shl
shr
shr
pop
sub
push
push
call
push
mov
call
ret
add
out
jne
mov
sahf
test
testb
bound
push
add
test
add
in
lret
add
add
push
js
add
mov
jp
cmpsl
rcrb
cmp
jne
push
push
call
push
add
add
les
loope
add
xlat
add
add
add
add
add
add
rolb
mov
mov
jge
xchg
lods
ja
xchg
cltd
push
add
add
add
lcall
enter
lea
push
push
push
push
push
lea
push
push
call
pop
add
add
pop
fbstp
roll
push
add
add
add
add
imul
pop
push
lret
xchg
pop
add
addl
add
add
fcmovu
sub
pop
lea
push
shl
rol
add
pop
sub
push
ror
inc
pop
mov
shr
push
add
pop
add
sub
push
push
push
call
not
add
add
cmpl
lahf
scas
add
loop
movb
pop
lods
mov
add
push
imul
add
add
add
mov
xchg
pop
add
testb
lods
add
pop
add
add
out
push
add
add
lcall
xor
ret
ror
lea
ror
pop
pop
push
add
xor
sub
pop
shr
push
dec
sub
pop
and
push
push
push
lea
push
push
push
push
push
push
push
call
push
push
movsl
lret
pushf
ret
cwtl
lahf
cmpsl
mov
push
lahf
add
add
popa
out
loop
add
lock
fistl
out
mov
xchg
enter
lea
stos
mov
test
lcall
jmp
cmp
jne
push
shl
dec
pop
leave
ret
push
not
rol
pop
push
mov
push
lea
rol
lea
pop
add
push
push
push
push
push
push
lea
push
call
out
xchg
add
bound
mov
mov
int3
std
mov
add
jo
mov
mov
push
push
push
push
push
call
mov
mov
add
cld
add
add
divb
push
gs
add
add
add
add
mov
pusha
out
int
add
add
add
in
lock
push
push
sub
add
pop
push
push
shr
ror
sub
pop
push
push
pop
push
push
ror
shr
pop
mov
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
mov
add
hlt
lahf
pop
add
jae
add
mov
jge
repnz
add
add
cmpsb
add
jnp
add
imul
addl
mov
add
add
push
add
int
test
addb
aad
sub
pop
sub
push
xor
pop
mov
push
shr
sub
not
pop
shr
push
add
pop
add
push
push
push
lea
push
push
lea
push
lea
push
call
jne
add
popa
jbe
cli
std
push
rol
lret
add
cwtl
add
push
add
scas
mov
add
add
bound
add
add
add
add
add
jnp
enter
roll
leave
xchg
aad
testb
fwait
addb
add
pop
or
call
add
add
jne
add
jl
push
arpl
xchg
add
lahf
lret
add
out
add
add
cmc
cmpsl
sub
pop
mov
push
ror
sub
pop
add
push
push
push
push
push
push
lea
push
push
push
call
cwtl
movl
test
pop
add
fadds
nop
add
leave
pop
mov
add
add
add
mov
lds
jp
add
sahf
repnz
xor
push
sub
pop
mov
and
push
rol
pop
rol
push
sub
shr
pop
rol
xor
push
push
push
push
push
call
add
mov
popf
push
add
in
popf
add
add
add
pop
test
call
add
sar
add
cmc
add
repnz
add
test
aad
sbb
jns
add
in
sti
xchg
mov
jbe
outsl
in
out
shrl
shlb
lcall
push
inc
sub
pop
cmpb
jne
add
push
push
push
call
out
add
stos
in
jl
add
jns
fwait
out
add
loop
stos
add
add
add
mov
add
fs
xchg
push
int3
pop
test
fiadds
imul
in
nop
mov
add
mov
add
roll
add
push
add
arpl
mov
stos
fs
xchg
in
hlt
lcall
inc
or
test
add
add
mov
mov
dec
cmovae
push
push
call
ret
xchg
add
add
bound
add
add
sti
rolb
add
in
popa
outsl
pop
jae
rolb
lock
adc
shl
pop
cmpl
jne
xor
push
push
lea
push
lea
push
push
call
add
in
mov
in
clc
xchg
add
fsubs
mov
add
mov
jmp
add
addb
lcall
add
add
add
push
add
aad
push
add
movl
lcall
push
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
pop
add
lods
repnz
add
fcompl
adc
std
add
add
je
add
mov
leave
add
add
rcrb
xorl
push
add
jecxz
jns
cld
add
cmc
add
add
add
add
add
pop
fsub
sub
pop
pop
pop
push
lea
push
call
popf
mov
add
imul
test
add
adc
add
pop
add
out
add
pop
add
jp
mov
add
add
add
out
mov
test
sahf
test
out
add
jno
sub
pop
pop
push
push
lea
push
call
les
mov
mov
icebp
add
out
add
xchg
mov
jb
movsl
add
fldlg2
add
loope
fiaddl
out
call
pop
xchg
pop
add
add
js
pop
xchg
leave
jmp
je
xchg
mov
lods
mov
add
sub
pop
pop
push
push
push
push
push
push
call
xchg
jb
add
mov
xchg
jl
mov
mov
pop
cmpsb
mov
add
add
pop
imul
in
add
add
add
loop
sub
pop
leave
ret
push
dec
xor
lea
pop
mov
push
lea
dec
pop
add
mov
push
lea
xor
pop
push
push
not
sub
pop
mull
push
lea
push
push
push
push
push
call
lock
scas
add
jo
mov
add
pop
std
pop
add
sar
mov
out
add
lahf
add
addr16
add
mov
xchg
shlb
mov
popa
stos
out
mov
mov
add
lcall
push
sub
add
dec
pop
call
push
push
inc
pop
call
push
push
push
push
push
push
push
push
lea
push
call
add
lock
add
insb
cmpsb
pop
push
xchg
mov
mov
clc
add
ret
add
cli
scas
add
add
xchg
pop
loope
popa
add
lret
mov
pop
pop
mov
in
fcompl
xor
push
push
call
add
pop
add
push
add
enter
lcall
clc
pop
leave
add
mov
add
add
xchg
xchg
mov
jle
mov
push
push
test
jns
aam
lcall
mov
iret
add
sub
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
call
clc
fstpt
add
add
xor
add
cwtl
add
xorb
push
add
ljmp
add
ja
jne
add
rolb
push
add
je
add
mov
mov
add
hlt
add
mov
add
add
push
ror
pop
pop
push
xor
sub
add
sub
pop
pop
push
sub
pop
pop
push
rol
add
pop
leave
ret
push
push
push
push
push
push
push
lea
push
push
lea
push
call
movl
outsl
pop
add
add
bound
popa
jp
pop
add
icebp
add
mov
add
mov
jge
add
add
add
hlt
mov
lods
jnp
add
je
add
lcall
push
push
lea
push
call
mov
repnz
mov
fwait
add
add
out
xchg
out
out
vcmpeqss
mov
ret
add
fs
mov
add
add
add
push
pop
add
mov
add
push
add
fildll
pop
cmc
sub
pop
mov
push
rol
not
pop
add
push
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
jb
add
mov
addb
mov
roll
add
pop
mov
movsl
add
mov
les
add
mov
add
mov
add
add
add
add
lcall
push
add
pop
push
mov
push
push
push
lea
push
push
lea
push
push
call
add
leave
roll
out
mov
add
je
add
mov
jo
mov
jle
scas
mov
fwait
movsb
mov
fmul
iret
add
mov
data16
flds
lods
popa
cltd
mov
rolb
faddl
mov
stos
mov
add
into
loope
cwtl
jecxz
sti
add
test
cwtl
pop
pop
cli
add
out
xchg
sub
pop
push
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
in
mov
mov
add
jge
cli
add
add
add
add
mov
sub
pop
lea
push
lea
xor
add
lea
pop
sub
push
xor
inc
not
shl
pop
mov
push
push
push
push
call
add
add
mov
mov
add
cmpsb
pop
outsl
add
add
push
add
mov
add
in
in
lock
shr
add
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
add
add
xchg
add
mov
add
add
in
pop
pop
push
mov
arpl
add
xchg
filds
loop
add
add
in
add
add
vcmpsd
loopne
leave
bound
mov
add
add
add
fadds
lcall
pop
js
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
mov
push
add
add
shl
filds
les
add
mov
out
add
movsb
js
enter
add
pop
add
movsl
mov
xlat
mov
jne
sub
pop
add
push
dec
pop
pushl
push
push
push
call
add
add
in
ror
add
add
lahf
lods
negb
add
ret
pop
xchg
mov
fcmovb
cmc
jl
add
pop
popl
push
push
lea
push
call
out
add
sti
outsl
add
push
ficoms
add
push
out
jb
add
add
data16
cmpsl
cld
in
add
scas
ret
add
add
mov
lods
sub
pop
mov
push
add
not
inc
pop
add
xor
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
adcl
add
add
add
lds
jae
jle
add
pop
add
add
lds
test
mov
xchg
out
roll
sub
pop
lea
mov
push
push
lea
push
push
push
push
push
push
push
call
int3
into
stc
push
mov
in
add
add
mov
notl
aad
enter
add
in
jecxz
mov
jbe
add
std
add
cli
jle
data16
lcall
shll
rclb
push
push
push
lea
push
push
push
call
add
add
add
add
jbe
xchg
add
add
aad
imul
jecxz
fsub
jmp
jne
mov
add
add
add
hlt
lret
add
in
fiaddl
imul
lcall
rolb
xor
sub
xor
pop
nop
nop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
int3
icebp
add
jmp
ret
rcll
add
movsb
add
jo
std
sti
add
xchg
sti
in
mov
in
add
les
adcl
add
jne
scas
add
flds
in
add
add
sarb
in
fdivr
lcall
add
ret
ljmp
xlat
pop
nop
push
push
push
lea
push
lea
push
lea
push
push
push
call
in
add
add
mov
pop
add
add
lods
xlat
add
add
add
mov
xchg
incb
add
push
ror
add
inc
pop
inc
push
shr
inc
pop
nop
nop
push
push
push
call
push
clc
add
cmpsb
xchg
out
xchg
pop
rol
sti
xchg
add
add
pop
add
mov
data16
add
mov
pop
push
add
add
insb
pop
xchg
fdivrl
pop
jl
add
scas
add
add
add
incb
add
outsl
clc
push
js
jb
push
add
add
pop
cmpb
jne
push
add
add
pop
add
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
add
jle
outsl
jnp
add
addl
jb
icebp
add
add
movsb
addl
push
pusha
jmp
insb
pop
testb
into
add
xchg
add
scas
push
cmc
stc
cmpsl
add
add
out
out
add
mov
iret
sub
pop
nop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
push
jbe
add
test
add
flds
lcall
add
out
add
std
out
add
data16
out
ja
add
popa
loope
rcrb
add
lcall
mov
add
add
mov
mov
xchg
add
in
andl
add
xchg
mov
add
sub
pop
nop
push
sub
lea
pop
cmp
je
push
push
push
lea
push
push
push
push
lea
push
call
add
xorb
leave
add
add
push
add
out
add
add
call
idiv
add
lret
add
movsl
add
mov
sub
pop
nop
push
lea
push
push
push
push
push
lea
push
call
addb
add
add
add
add
add
out
add
mov
add
sahf
add
add
add
pusha
add
mov
add
imul
shl
add
test
jecxz
repnz
inc
push
push
push
call
xchg
movb
add
xchg
add
pop
pop
add
add
add
add
iret
test
jle
fwait
add
mov
add
rol
sub
pop
nop
push
add
not
ror
pop
nop
push
pop
cmp
jb
xor
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
test
add
sahf
jbe
add
out
add
add
add
roll
add
add
adcb
add
mov
add
add
fdivr
lcall
cmp
add
push
lea
pop
mov
push
add
pop
add
movzwl
push
dec
inc
pop
mov
add
push
push
push
call
add
xlat
rolb
stos
mov
push
fsubp
add
add
js
stc
lea
add
push
test
add
add
jns
add
add
sar
popa
sti
xchg
ljmp
pop
mov
push
push
call
add
in
pop
push
push
add
lcall
movsb
fs
repnz
jne
add
scas
xchg
jo
push
test
mov
jl
jno
sti
out
mov
mov
pop
int
add
xchg
push
fldt
jo
jb
add
add
lcall
leave
xor
push
sub
pop
shl
xor
push
ror
sub
pop
shl
push
push
lea
push
push
push
call
add
hlt
mov
les
add
rcrb
pop
add
add
pop
add
add
mov
cli
mov
add
add
add
add
push
add
out
pop
mov
pop
xchg
js
mov
add
cli
ljmp
pushf
imul
mov
xchg
push
xchg
add
dec
nop
add
loope
push
lea
push
push
call
mov
jb
mov
mov
sti
lock
mov
add
mov
aam
push
add
mov
loope
mov
lcall
or
push
lea
push
push
lea
push
push
push
push
push
call
add
push
out
add
add
push
xchg
test
add
lret
add
cltd
lds
add
aad
add
int3
add
add
mov
addr16
add
call
add
aam
js
mov
pop
sarl
xchg
sub
pop
mov
push
lea
xor
shr
sub
pop
add
push
lea
xor
inc
pop
pop
pop
push
dec
sub
lea
pop
pop
push
sub
pop
pop
leave
push
push
push
lea
push
push
push
push
push
push
push
call
insb
movsl
add
int
add
roll
add
add
add
jge
mov
std
jge
popl
movl
add
fcomps
or
push
rol
pop
push
mov
push
dec
xor
shl
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
movsb
mov
push
add
lods
scas
pusha
xchg
testb
test
fdivr
add
add
pop
imul
mov
movsl
adc
add
mov
jp
cmpsb
mov
imull
add
pop
add
mov
push
mov
out
add
add
mov
pop
pop
add
pop
add
add
add
add
lcall
push
push
shr
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
out
jae
fadds
add
fldenv
add
add
jmp
stc
cmc
push
pushf
add
add
add
int
ja
add
fldl
pushf
out
add
add
add
pop
add
add
fldcw
out
add
add
xchg
add
ja
in
fdivr
lcall
adc
pushf
icebp
das
sub
mov
dec
push
call
mov
push
xchg
not
add
mov
add
add
in
loop
add
add
add
add
jb
xchg
clc
add
add
add
add
add
mov
xchg
data16
add
addb
roll
push
jb
add
incb
rorb
test
shr
add
ror
pop
mov
push
push
push
call
xchg
roll
popa
add
mov
pop
push
add
fwait
add
hlt
xchg
add
jae
out
cmpsl
repnz
xlat
add
cmpsl
in
ljmp
test
ret
hlt
pop
test
je
push
add
add
xor
pop
mov
push
pop
mov
push
rol
shl
inc
shr
pop
mov
push
push
push
push
push
call
add
pop
xchg
lods
nop
add
mov
rol
add
jno
add
add
test
pushf
jns
add
xchg
cli
out
mov
test
push
jnp
mov
jmp
add
add
js
aad
pop
push
ret
lods
flds
in
mov
sub
pop
inc
cmp
je
push
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
xchg
mov
call
mov
mov
cmpsb
mov
add
mov
mov
add
pop
test
je
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
scas
pusha
outsl
add
lcall
add
stos
test
add
add
mov
add
add
cli
add
gs
xchg
fisubs
jnp
fsub
test
add
lret
ficoml
mov
xchg
sub
pop
inc
push
xor
ror
lea
shr
pop
cmp
je
push
push
push
lea
push
call
jecxz
mov
add
add
rcr
addl
xchg
clc
add
jecxz
add
add
movsl
cmpsb
add
xchg
out
add
jne
stos
add
add
lret
add
push
add
mov
xchg
pop
test
jne
push
push
push
push
call
lcall
mov
mov
pop
mov
add
add
add
jno
bound
add
hlt
add
cld
push
add
add
loopne
jae
add
fldl
cmc
add
fsubrp
lods
lret
je
int3
add
out
lods
outsl
fsubrs
mov
add
lret
lock
xor
push
xor
xor
pop
pop
push
lea
push
lea
push
push
lea
push
push
call
fcmovnbe
add
jp
pop
add
aad
add
lds
lods
jl
add
lds
pop
add
add
lds
pushf
add
call
add
sti
aam
mov
ljmp
notl
mov
movsl
xchg
add
test
lods
add
add
scas
add
test
push
mov
lcall
pop
push
push
push
push
lea
push
push
push
push
call
mov
push
rorl
xorb
mov
mov
loope
jb
cli
add
rolb
add
add
add
mov
mov
pushf
data16
xchg
add
loopne
pop
push
xor
add
lea
pop
leave
ret
push
push
push
call
ljmp
xchg
add
add
fdivrs
add
push
leave
xchg
imul
movsb
hlt
cmp
int3
int
fnstcw
imul
lock
add
mov
cwtl
scas
cmc
loop
movl
fcmovb
mov
add
lcall
push
inc
push
push
push
lea
push
push
call
xchg
add
aad
add
cmc
push
roll
jnp
add
mov
xchg
add
lds
add
in
insb
push
addr16
add
add
aad
mov
add
fcmovnu
add
lahf
add
pusha
mov
in
pop
cmp
jne
lea
push
xor
xor
pop
mov
push
lea
push
push
call
jne
ror
add
cltd
add
add
add
lcall
pushf
push
add
out
add
add
stc
add
movl
push
incb
add
cwtl
add
in
hlt
lcall
in
test
add
push
lea
push
push
lea
push
call
cmpsl
test
fstpt
fucomp
cld
jle
mov
add
lcall
icebp
scas
bound
pusha
add
add
xchg
int
add
add
popa
add
stos
add
insb
add
pusha
movsb
ficoml
push
out
add
mov
je
imul
stc
xchg
push
stc
sub
pop
mov
add
push
push
call
add
loop
xchg
add
movl
mov
rolb
je
xchg
xchg
leave
mov
xchg
add
push
pop
add
in
jbe
ja
movsl
pop
lds
scas
sub
pop
cmp
jne
mov
push
add
shl
pop
test
je
push
shl
xor
shl
pop
mov
push
shr
shr
shr
shl
pop
add
push
push
push
push
push
push
push
push
push
call
lds
jns
jnp
add
add
add
sahf
arpl
push
rcl
add
mov
lea
add
add
subb
jecxz
fcomp
in
jnp
add
add
test
mov
add
loop
jmp
data16
add
hlt
push
add
lcall
loopne
test
call
roll
jmp
xor
push
lea
push
call
fiaddl
cli
add
in
addb
pushf
add
add
not
mov
cmc
add
add
add
fadds
lods
pop
add
add
sar
mov
add
jp
add
lcall
push
inc
pop
pop
pop
push
sub
pop
pop
leave
push
push
push
call
mov
add
add
cmpsb
xchg
ret
movsl
add
mov
add
add
fprem
push
flds
jno
add
sub
pop
ret
push
push
push
push
push
push
push
push
call
js
add
pop
repnz
push
inc
add
stc
in
add
mov
add
ja
jne
adcb
add
mov
sub
pop
lea
pop
push
ror
pop
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
lock
call
les
pop
out
test
mov
add
jmp
test
pop
mov
mov
out
add
add
js
jns
add
add
jnp
add
pop
popa
jmp
in
mov
add
std
int
add
mov
add
lahf
xchg
add
push
add
sub
pop
pop
push
inc
sub
pop
leave
ret
push
push
push
push
push
push
call
lods
add
in
jmp
jl
rclb
add
mov
mov
pop
lds
add
scas
jl
add
incb
add
mov
add
sub
pop
mov
pop
push
lea
push
push
lea
push
push
push
push
call
add
cmp
jb
add
out
pusha
add
add
add
xchg
add
mov
jae
mov
add
movl
add
add
jbe
mov
push
enter
in
lcall
push
shl
xor
sub
lea
pop
pop
push
inc
ror
add
pop
pop
push
inc
not
add
pop
leave
ret
cmp
leave
mov
xor
mov
mov
mov
loope
mov
ror
mov
mov
mov
icebp
lret
add
mov
xchg
lret
or
jno
enter
add
imul
cltd
andl
jnp
loopne
mov
pushf
adc
aas
inc
xlat
cmp
mov
fmuls
imul
mov
jne
push
pop
lods
sub
push
enter
outsb
repz
or
fisubrs
fwait
inc
ret
push
and
aaa
icebp
mov
inc
pop
cmp
fsubl
lods
inc
add
dec
data16
jg
aad
dec
inc
inc
sub
ss
xchg
shrl
movsb
lahf
push
lods
loope
or
mov
leave
mov
bound
les
and
adc
push
mov
push
out
cwtl
cmpb
xor
jbe
jg
nop
or
mov
or
dec
mov
push
fdivr
cwtl
cmp
stos
xchg
mov
or
in
mov
test
inc
aas
rcrl
xchg
inc
inc
xor
sbb
dec
mov
or
push
push
decl
lds
insb
xor
or
out
test
scas
stos
cmp
sbb
mov
ss
jmp
bound
add
sti
lods
and
lods
lahf
sub
inc
dec
mov
popa
add
push
dec
inc
mov
pop
or
scas
sbb
dec
pop
or
rcrl
cmp
loop
int
dec
bts
inc
inc
popa
or
fistpll
in
popf
xchg
xchg
scas
mov
repz
mov
adc
pop
sub
pop
lret
arpl
xchg
cmpsb
add
jmp
pop
mov
psrlw
add
das
imul
test
mov
cltd
ret
ret
gs
mov
xlat
pop
mov
nop
mov
xchg
sub
or
cmpb
ljmp
or
call
add
xchg
das
mov
cld
push
int3
stc
jp
cmp
adc
jp
jo
and
and
sbb
jno
mov
jns
jne
test
xlat
push
cltd
pop
ds
cs
cmp
addl
pop
in
inc
mov
or
jb
mov
shlb
fs
mov
pop
mov
testl
xchg
cmp
xchg
cmp
decb
jp
adc
enter
les
fwait
and
fidivrl
sahf
sarb
lods
insb
push
into
mov
jns
mov
xor
insl
cmp
pop
aam
iret
ja
and
dec
call
sub
movl
in
aas
jg
aas
pusha
dec
test
pop
inc
push
scas
jle
add
sbbb
mov
push
inc
rcr
sub
jmp
xchg
or
mov
mov
shlb
adc
jae
cli
out
push
adc
sbb
mov
push
jecxz
lea
jnp
rcll
xchg
inc
inc
inc
imul
sub
mov
jns
shlb
or
or
sti
push
sar
inc
stos
jle
sub
mov
lock
ret
add
cmp
bound
mov
adc
xchg
inc
push
push
push
loope
add
inc
sbb
mov
loopne
lods
jo
cmc
and
inc
popf
jmp
dec
mov
pusha
or
cmp
inc
aam
ljmp
out
sbb
enter
stos
xchg
dec
sbb
mov
mov
lret
jne
pop
push
fbstp
int
lret
sbb
push
into
cmp
mov
xorl
out
mov
mov
jne
out
jp
inc
mov
int
dec
mov
sub
pop
push
outsb
lret
jns
scas
and
add
shrl
xchg
mov
repz
jo
push
xor
xor
jnp
sub
das
das
jp
je
jae
jne
test
rcrb
into
insl
pop
lret
and
and
pusha
les
es
add
std
hlt
addr16
stc
sub
aas
rcr
repnz
rorl
pop
ljmp
pop
xor
mov
pop
jg
and
mov
mov
and
cmp
xor
pop
je
sbb
test
fstpl
lahf
adc
outsl
in
mov
mov
das
lahf
sub
add
outsl
xor
jb
inc
sbb
ss
xorb
jne,pt
add
jnp
fs
jns
outsb
push
ds
sub
es
sub
lods
lock
mov
hlt
dec
stc
or
insl
imul
test
adc
adc
cli
dec
mov
mov
testb
jne
pop
insl
mov
andb
repnz
in
lret
pop
filds
pushf
adc
and
in
lret
push
fisubrl
adc
jns
mov
movhps
xor
or
sbb
adc
mov
stos
fnstsw
ret
mov
outsl
add
in
je
ficompl
push
dec
push
dec
or
sub
in
sub
ror
sbb
aam
test
and
mov
jg
inc
ss
mov
pusha
stc
adc
repz
jle
sbbb
pop
lcall
jno
jle
stos
cmc
mov
mov
lcall
in
data16
dec
fiadds
or
fwait
hlt
xchg
fcom
and
negl
idivb
arpl
insb
in
ljmp
loope
pop
add
in
std
rdtsc
and
jbe
mov
call
mov
out
adc
loope
cltd
sti
testl
jne
mov
push
xor
push
ror
shlb
mov
nop
adc
frstor
ss
add
inc
out
inc
out
xchg
add
fmull
pop
cmpsb
insl
stos
jo
insl
push
addr16
cltd
push
divl
or
push
movsl
adc
ficoms
jo
cmp
and
pop
in
gs
mov
mov
mov
out
cltd
sbb
ret
inc
jle
sub
mov
loopne
cli
xor
sbb
xchg
xchg
xchg
arpl
pop
loopne
add
pusha
and
leave
imul
add
ret
outsb
xor
pop
jno
sbb
adc
mov
divb
in
push
adc
add
shlb
sub
pop
and
arpl
xchg
or
pop
ficoms
ss
int
pop
dec
adc
inc
int3
cmpsl
pop
pop
and
lsl
inc
ss
jb
inc
icebp
xchg
andl
jle
loopne
dec
aam
mov
cmp
inc
pop
movb
adc
fstpt
jb
inc
jmp
aaa
mov
mov
xor
cmp
adc
stos
je
pushf
push
mov
into
fstps
cmpsb
inc
xchg
daa
mov
add
sbb
push
adc
fcomps
movsl
out
pushf
mov
xchg
mov
jg
lret
or
inc
push
daa
inc
push
div
and
scas
jbe
fsubrs
xchg
lret
idivl
das
mov
push
mov
test
cmpl
ljmp
insb
loope
cltd
sub
jo
cmpl
or
stos
push
sub
hlt
mov
mov
in
stc
dec
fdivrs
shll
lahf
out
loopne
xlat
jb
push
xchg
nop
cmpsl
test
mov
mov
jbe
pushf
sbb
mov
mov
sbb
stos
inc
push
and
das
cli
dec
call
pusha
and
inc
incb
mov
fcoml
sbbb
leave
cmp
add
stc
addr16
cmp
pop
push
or
lds
xchg
push
gs
jle
dec
ds
rorl
cltd
icebp
push
xchg
mov
inc
mov
sarb
xor
push
mov
out
ret
fistl
lock
xchg
mov
xchg
lea
cmc
out
mov
xchg
out
insb
xor
mov
cmc
rorb
es
js
jg
pushf
inc
inc
cmp
sbb
aad
popf
loop
push
pushf
cmp
call
jmp
cmp
pop
push
imul
add
pop
imul
je
lods
cs
loopne
outsl
popf
and
fistpl
mov
insl
or
gs
mov
mov
or
hlt
mov
adc
aas
mov
or
cmp
pushf
mov
addr16
rcrl
pop
cmc
sub
add
mov
add
add
cwtl
add
mov
jnp
mov
mov
shl
mov
jns
nop
push
in
fisubrs
adc
mov
cltd
mov
add
imul
daa
outsl
les
mov
stos
into
sti
fmull
and
mov
cld
or
outsl
aaa
mov
outsb
jbe
mov
jmp
jge
enter
js
sbb
lds
insl
pop
adc
and
hlt
scas
dec
les
and
pop
icebp
mov
xor
mov
movsb
pmulhuw
stos
push
xor
filds
lods
pushf
mov
jo
inc
adc
cltd
mov
lret
pop
dec
lods
imul
mov
pop
subl
rcl
jne
sbb
sbb
mov
push
sbb
xor
test
pop
in
adc
mov
mov
mov
pop
mov
sbb
cmpsb
mov
inc
adc
jo
adc
out
in
jmp
shll
lds
cld
sbb
push
mov
movsb
ret
subl
pop
enter
fcompl
pop
out
enter
shlb
mov
rcll
in
adc
movsb
in
pushf
adc
pop
cmp
aaa
imul
dec
jns
sub
mov
push
clc
dec
aam
xchg
cmpsl
fcmove
rclb
xchg
fs
push
xchg
scas
rcll
pop
sub
and
repz
sahf
dec
or
lods
mov
out
loop
add
pop
jge
mov
popf
scas
push
addr16
adcl
pop
sub
out
call
jle
xor
or
pop
fs
mov
dec
push
out
jns
sbb
fs
in
xchg
lea
push
call
sarb
mov
hlt
ja
xchg
test
std
push
mov
push
mov
sub
loopne
xchg
arpl
scas
mov
sbb
cwtl
mov
jge
cld
inc
negb
xchg
pushf
mov
cmc
enter
sbb
push
popa
add
jno
lds
push
scas
inc
push
cli
push
testl
stos
push
bswap
andb
mov
ss
loop
fmul
inc
fidivrs
push
cmp
fldcw
jnp
nop
fs
and
sbb
data16
adc
or
stos
call
movaps
pop
movsb
xchg
pusha
lret
outsl
and
push
ficomps
and
xchg
fcoml
mov
cmp
mov
push
jg
jbe
pop
and
cltd
adc
mov
inc
in
fiaddl
cmpl
mov
dec
push
xchg
add
push
or
xor
and
or
ret
ret
push
not
mov
cmovge
add
jne
jle
or
rorb
daa
mov
lahf
push
inc
cwtl
jmp
test
jb
mov
adc
cmp
push
jp
scas
mov
pusha
mov
jno
imul
popf
data16
mov
push
lds
xchg
repnz
testl
scas
scas
shrb
sub
dec
jp
jmp
cwtl
or
negb
outsl
sub
inc
jae
mov
into
leave
mov
jge
fdivl
mov
or
xor
push
test
addb
mov
pop
mov
jo
daa
ficoml
jb
int
rolb
fwait
movsl
mov
aad
loopne
lods
pop
jle
sub
xchg
pushf
adc
ret
sbb
into
sbb
and
pusha
push
loope
mov
dec
roll
push
enter
push
or
negl
jns
fcom
dec
js
mov
and
es
inc
cmp
and
jle
movsl
mov
xlat
ljmp
fidivs
subb
adc
pop
ss
ljmp
movsl
pop
leave
js
push
stos
loopne
push
repnz
add
push
mov
test
lea
push
out
out
jns
ljmp
mov
add
xor
xor
add
ret
sub
cmpsl
jne
loope
mov
add
xor
cmp
arpl
imul
mov
inc
mov
mov
jmp
ja
in
xchg
inc
inc
outsl
sub
push
sbb
sub
fisubs
xchg
hlt
jg
fwait
push
fidivrs
or
lcall
sbb
dec
jns
rcl
call
ja
in
fstpt
push
mov
scas
ss
movsb
inc
push
lods
insl
call
imul
xchg
xlat
aam
lret
jg
and
icebp
mov
stos
jno
or
clc
ja
out
push
fcmovu
movb
jnp
insl
add
aam
mov
mov
int3
pop
cmp
repnz
addb
cmp
xchg
jmp
or
hlt
test
cmc
dec
xor
cmp
add
push
mov
xor
fstps
stos
aaa
pop
lods
bound
movsb
out
cwtl
test
in
cwtl
or
jmp
jge
out
aam
inc
push
test
int
repz
push
dec
pop
ss
imulb
stos
jmp
cmp
or
dec
push
aad
add
cmpsb
call
clc
mov
insl
mov
fs
xchg
mov
popf
adc
stos
mov
in
mov
cli
sbb
std
inc
mov
sub
bound
add
in
inc
iret
bound
insb
xchg
add
ret
stc
adc
repz
iret
roll
shrb
mov
sub
mov
dec
pushf
clc
scas
sub
movsl
in
popa
pop
jbe
mov
push
push
dec
or
sub
mov
xor
into
ljmp
sbb
std
push
mov
or
mov
shrb
insl
xchg
lret
mov
mov
push
push
push
enter
mov
inc
mov
movb
xor
fcmove
or
js
xchg
bound
xor
test
pusha
inc
sbb
pop
sahf
mov
mov
cld
sbb
popa
ds
shl
dec
jno
xchg
aam
fwait
xchg
out
movsb
dec
xchg
frstor
ret
xchg
mov
or
xchg
sti
in
ja
or
push
fcomip
jmp
pushf
push
cmp
mov
stos
in
and
jno
subl
test
call
stos
addr16
mov
bound
sub
adc
fsubrs
mov
popf
dec
divb
out
adc
fwait
lret
lret
lret
mov
cmpsl
adc
aaa
imul
fstpt
inc
xchg
sub
leave
int3
dec
push
movsb
push
outsl
das
fnstsw
or
nop
pop
cmp
mov
adc
aaa
les
cmp
fisttps
jo
je
xchg
icebp
cmc
jae
int3
cmp
pop
jno
fs
popa
mov
mov
or
inc
hlt
test
mov
inc
xchg
ja
add
adc
inc
mov
cmp
aad
aas
sub
cmpsb
cmpsl
dec
push
sti
pop
dec
push
test
and
mov
subl
loope
repnz
pop
adc
fistl
inc
xchg
mov
xorb
fists
xor
arpl
movsl
sahf
cmpps
sti
fwait
cmp
stos
fsubrs
mov
pop
jle
ret
sahf
out
adc
sarl
ljmp
xor
and
sub
sbb
pop
push
pop
xchg
mov
fmul
sub
xchg
out
jp
xor
jo
jle
ret
into
adc
sub
mov
mov
adc
insb
stc
jg
mov
and
cmpsb
mov
out
lret
sub
aad
int
xlat
pushf
xlat
add
push
push
es
stos
xchg
das
aaa
cmc
dec
xlat
sub
push
sub
pop
hlt
fdivs
addr16
mov
xor
xor
mov
lods
aas
push
ljmp
inc
fimull
test
pop
sub
jmp
sub
movsl
cs
test
bound
push
cs
adc
rolb
stc
aaa
clc
js
stos
sbb
xchg
dec
mov
mov
jno
testl
jge
xor
scas
movsb
jae
cwtl
mov
mov
push
cli
mov
jmp
fisubrl
and
adc
pop
jle
lea
inc
ja
in
andnps
cmp
rolb
xor
jo
shll
int
add
pop
adc
test
add
arpl
pop
xlat
gs
fiadds
mov
loopne
or
mov
push
mov
ljmp
repnz
subb
fisttps
mov
sub
pop
xchg
mov
fwait
mov
jecxz
out
jg
xorb
dec
cld
mov
jp
jp
xor
cs
sbb
dec
js
cs
imulb
adc
dec
add
cwtl
fstps
rcrl
adc
sub
lcall
sahf
add
jae
fldenv
jle
addr16
mov
in
stos
test
cwtl
out
xchg
and
jle
push
sti
fldt
add
mov
popa
pop
adc
int
cmp
movsb
cwtl
mov
or
iret
lds
jae
leave
mov
lods
xchg
inc
inc
aam
mov
add
jecxz
test
mov
lret
mov
sub
shl
sbb
faddl
xor
xchg
sbb
rcrb
xor
inc
les
push
pushf
xchg
lahf
ret
nop
dec
xor
mov
iret
dec
pop
sub
sub
decb
adc
cs
negb
lock
dec
xchg
xchg
movsl
xchg
mov
mov
lcall
popa
jecxz
fcoms
cmp
ret
xor
mov
fwait
out
sbb
pop
mov
cmpsb
fidivl
dec
jae
fistpll
mov
outsb
jmp
pop
mov
daa
call
sbb
mov
dec
add
mov
push
mov
push
and
decb
xchg
dec
push
xchg
pop
or
mov
jbe
mov
cmp
cmc
shrl
mov
inc
icebp
mov
test
fsincos
push
xchg
mov
fcmovnbe
in
inc
mov
xchg
cmp
mov
or
les
cmpsl
mov
mov
dec
mov
les
xor
xlat
inc
sahf
lret
loop
outsb
out
outsw
jp
pop
jae
sub
pusha
hlt
push
mov
and
stos
add
cmp
push
jne
xor
nop
cmp
test
push
cwtl
mov
inc
ret
sbb
adcl
aaa
inc
adc
push
mov
xchg
sub
xchg
icebp
xor
jae
das
insb
inc
jl
inc
or
pushf
or
cmpsl
repz
movsl
mov
in
sbb
iret
and
sub
in
roll
jns
outsb
lods
jb
mov
insl
mov
dec
fsubrl
int
bound
mov
jo
aam
ss
shrl
in
shl
pusha
jecxz
inc
loope
lahf
daa
mov
bound
cmpsb
pushf
mov
movsl
sub
cli
popf
into
repz
lahf
lods
push
cwtl
movsb
sbb
mov
xchg
sti
sbb
push
dec
or
push
and
xor
loopnew
jno
cmc
sub
xchg
sbb
push
frstor
mov
lret
mov
push
pop
sbb
mov
and
inc
mov
adc
mov
mov
aaa
or
icebp
pop
pop
js
cmpb
sbb
jbe
imul
aad
push
lret
push
pop
das
cmp
or
jno
out
mov
mov
nop
jno
addr16
sarl
fidivs
outsb
jb
push
in
das
test
aas
or
outsb
sub
call
lea
icebp
xchg
mov
jbe
xchg
addr16
jecxz
sub
pop
pop
movq
popl
lret
jo
sub
test
push
repnz
lcall
insl
push
add
or
xchg
dec
mov
or
pop
divb
cmpsb
jge
test
jno
cwtl
cmpsl
gs
lret
in
mov
xchg
cltd
fimull
les
pop
jns
decb
inc
xor
add
jne
pop
stc
xor
jp
in
mov
aas
stos
cltd
push
test
xor
popf
arpl
pop
daa
or
sar
jo
dec
data16
or
mov
int
inc
mov
out
addr16
outsl
xchg
fwait
icebp
int
int3
xchg
or
push
jbe
out
or
je
aas
stc
ror
ds
cmp
jne
lahf
push
sti
dec
enter
rcrb
mov
or
das
jbe
ja
pop
inc
pop
dec
pop
inc
pop
fnstcw
cmp
std
push
add
cmp
mov
push
jg
enter
jecxz
out
insl
pop
lea
jmp
jp
mov
sub
cltd
in
xor
jg
scas
data16
pop
mov
cs
jle
clc
stc
fwait
insb
add
mov
xchg
mov
scas
and
cmc
inc
add
movsb
push
pop
mov
or
xchg
jge
enter
sbb
fstps
daa
jo
mov
sbb
lods
icebp
adc
lods
dec
add
jne
sub
inc
dec
cmp
xchg
add
xor
jae
jmp
jno
je
iret
dec
adc
fnsave
dec
push
mov
pop
pop
dec
jbe
sub
pop
out
in
sahf
push
xchg
pop
adc
mov
sbb
xchg
pop
adc
mov
insl
call
jns
mov
andl
mov
and
mov
ret
xchg
pusha
ja
nop
fwait
movups
sub
insb
lds
mov
fbstp
inc
scas
push
xchg
int3
aam
aaa
add
dec
adc
in
adc
shl
ja
stos
dec
add
pushf
aam
shlb
and
mov
scas
adc
mov
lret
jmp
out
pushl
xor
movsb
lret
lea
sub
leave
adc
xor
push
call
js
xchg
gs
cld
or
daa
gs
insb
sub
mov
clc
sub
pushf
mov
or
add
mov
lea
xchg
sti
popf
aas
cltd
push
push
adc
inc
pusha
out
sbb
cmp
lods
sbb
lcall
iret
js
aad
dec
xlat
adc
jg
mov
sbb
fst
fcompl
jns
pop
test
into
roll
lahf
xor
lret
outsb
pop
test
jns
pushl
ds
imul
pop
jmp
stos
ret
rcr
leave
ljmp
cwtl
push
stos
popa
inc
testb
sbb
arpl
mov
js
sbb
xor
pop
repz
pushf
jb
jne,pt
mov
in
imul
sbb
sub
xor
cmp
pop
dec
repz
sarb
or
cmp
pushf
enter
imul
subl
outsb
scas
cmp
jmp
mov
and
xor
jecxz
mov
cmp
andl
cmp
nop
xor
inc
mov
and
call
sub
js
cmpsb
xor
aad
dec
jl
xchg
xor
sub
mov
out
add
repz
xchg
aam
cmp
xlat
je
fmul
loope
jg
mov
inc
xchg
and
pop
and
int
pop
xor
pop
mov
xchg
ss
cld
cmp
movsb
xchg
mov
push
sub
mov
sub
pop
sarb
sbb
ljmp
imul
xchg
aam
push
aad
xchg
jecxz
mov
enter
dec
insb
xchg
mov
lcall
ja
adc
mov
xor
outsb
mov
cld
adc
out
js
rorb
lods
insb
call
pop
sub
jecxz
and
jb
sbb
addb
out
jae
xor
xor
fwait
jbe
dec
dec
inc
imul
mov
sbb
mov
std
jmp
dec
test
fstpt
xchg
mov
cmp
and
je
add
jb
xchg
jmp
bound
fisttps
stc
push
in
int
pop
mov
imul
shrl
push
enter
rclb
cltd
sbb
mov
sti
inc
outsb
inc
fdivp
jmp
mull
mov
xchg
dec
mov
cltd
xchg
lea
addb
inc
clc
scas
shlb
mov
jge
nop
mov
push
js
imul
mov
fdivrl
call
das
pop
fbld
inc
sbb
mov
packssdw
inc
jo
xor
inc
shlb
cmpsb
cmp
xchg
addr16
jecxz
push
pop
fadd
bound
dec
jno
jp
dec
inc
inc
xchg
push
in
xchg
fld
push
mov
adc
daa
push
dec
dec
pmaxub
xchg
andb
fdivs
push
mov
bound
lret
inc
popf
or
and
insb
ss
or
incl
xor
repz
cli
cmp
jle
cmp
jne
mov
adc
push
fwait
push
in
jnp
lret
cmp
push
or
cs
imul
lcall
sahf
adc
mov
sahf
mov
sbb
cmpsb
stos
sbb
cmp
mov
dec
xor
push
and
xchg
sub
and
push
jl
mov
sbb
jecxz
or
fwait
jbe
cmp
imul
push
or
pop
xor
imul
or
jg
push
inc
sbb
xor
mov
adc
sbb
inc
mov
popa
scas
and
push
scas
fdivrl
push
jge
adc
jge
jns
shlb
cmpsl
adc
hlt
push
roll
ss
lcall
mov
sti
inc
lret
loope
stc
jmp
nop
aas
jo
movsb
unpcklps
jmp
mov
jnp
scas
aam
push
mov
pop
test
sti
nop
stc
cmc
inc
dec
mov
out
pop
and
stc
movsl
cmp
iret
push
nop
xchg
frstor
jge
sbb
push
mov
and
pop
dec
xor
fcmovbe
cli
fbld
jb
in
xor
mov
jg
pop
add
into
cmpsl
into
mov
sub
ret
ja
pop
dec
mov
lock
imul
lock
rcl
mov
dec
mov
subb
enter
cwtl
xchg
cmp
cmpsl
sbb
mov
jge
jno
out
cwtl
mov
cmp
lods
mov
dec
push
or
out
ret
enter
or
les
mov
popf
mov
and
outsb
cld
adc
cld
shl
je
adc
mov
test
and
dec
gs
cmpsb
sub
add
cwtl
mov
mov
js
testl
lea
dec
push
ss
call
cmp
and
stos
push
out
push
push
or
sar
dec
mov
push
mov
das
in
hlt
icebp
ss
mov
lods
mov
cli
call
insl
arpl
nop
rcll
push
icebp
mov
cmp
cmp
and
jnp
push
or
mov
sbb
popa
adc
xchg
pop
cmpsb
lret
loope
lods
es
mov
adc
inc
iret
into
loopne
jns
daa
and
push
add
je
sbb
inc
repz
jg
rcll
das
adc
xor
dec
cltd
out
xor
fcompp
push
sub
aaa
repz
mov
mov
subl
wbinvd
fwait
cli
dec
mov
jbe
insl
stos
aam
inc
sub
or
mov
ljmp
sub
sbb
xchg
sbb
mov
push
jmp
leave
push
adc
mov
cmp
add
cmpsl
pop
std
ret
int
test
and
adc
aas
mov
xor
js
out
ffree
or
pop
sbb
mov
sarl
enter
xlat
mov
xchg
int
call
or
mov
push
outsb
mov
sbb
adc
imul
adc
or
mulb
ror
and
pop
aas
xor
lahf
sub
add
fistpll
in
pop
push
and
inc
dec
xchg
jg
out
out
jnp
pop
adc
adc
cltd
push
adc
cmovp
out
jne
hlt
xchg
dec
jb
fisubrl
push
das
pop
ss
xor
jbe
xor
in
cmpsl
inc
repnz
xor
inc
xchg
inc
aas
add
insb
cltd
mov
arpl
pop
sub
mov
lea
ds
push
andb
enter
faddl
sub
adc
sbb
insb
rorl
dec
sub
mov
or
push
pop
mov
out
lods
push
fisubs
stos
xor
adc
inc
scas
outsb
clc
jae
sbb
cmp
fisubrs
inc
lret
sarl
xchg
sub
jno,pt
rorl
mov
or
in
arpl
push
push
leave
mov
scas
dec
pop
adc
sub
ret
test
mov
pop
out
out
mov
adc
xchg
dec
test
sbb
lods
in
xchg
cmp
fwait
loope
sti
cmpsb
jg
sub
outsl
xor
aam
andw
add
fdivr
and
repnz
out
add
or
add
shll
pop
sbb
jb
cmp
iret
jae
andl
adc
dec
dec
out
lcall
inc
out
xor
inc
nop
pop
inc
das
jmp
mov
push
pushw
loop
rol
jp
inc
sahf
push
xchg
dec
aam
and
push
xlat
push
sbb
cs
aas
fsubrs
ss
xor
int
fisubl
pop
adc
sub
xor
lods
cli
popf
add
jmp
mov
fsubrs
add
rorb
pop
ljmp
mov
pop
cltd
and
pushf
adcl
out
and
jg
ret
sbb
jl
sbb
dec
xor
xchg
mov
lret
in
inc
jnp
shrl
ja
dec
mov
mov
pop
in
dec
pop
mov
sahf
add
fcmovnb
lret
into
faddp
aad
push
pop
xchg
data16
jns
add
imul
sub
fbstp
inc
int3
shrb
dec
cltd
stos
or
cmp
adc
pop
outsl
or
dec
push
or
cmp
sti
rorb
dec
je
add
fs
ret
popa
pop
mov
cmp
mov
lods
dec
cmp
mov
mov
jecxz
ret
add
and
sub
pop
xorb
and
adc
push
jo
inc
adc
jecxz
out
xchg
rcr
testb
sbb
push
add
aam
add
aad
out
in
mov
sbb
dec
pop
mov
mov
push
pop
xchg
fwait
nop
pop
push
jmp
rcll
js
rclb
inc
jecxz
pop
xchg
enter
push
mov
xor
scas
push
xchg
imul
jbe
add
jg
rcr
andb
lods
outsl
inc
dec
mov
mov
call
sub
jmp
hlt
enter
jne
mov
gs
inc
push
fnstcw
mov
or
mov
and
xor
dec
xor
sbb
ds
sarb
push
scas
addr16
dec
scas
push
cmp
xchg
xchg
mov
jno
dec
lods
sar
into
jg
imul
mov
fidivrl
in
aam
pop
je
push
push
call
ja
int
pushf
sbb
ss
mov
lea
into
sbb
jg
cmp
fnstsw
mov
rcpps
dec
xor
xor
icebp
test
jmp
lods
daa
mov
push
add
loop
sbb
lahf
push
pop
ljmp
fisubs
sub
fdivs
in
call
jns
and
mov
in
xchg
test
jmp
pop
dec
pop
aad
jp
aaa
mov
sbb
rcrb
cmp
inc
inc
pusha
add
sbb
ljmp
mov
hlt
es
lret
xor
test
adc
ja
xor
pop
fs
mov
test
inc
popf
jno
insb
dec
lret
adc
lods
push
loopne
std
call
dec
dec
test
push
sbb
push
inc
ljmp
insb
push
hlt
pop
push
add
push
inc
lahf
cwtl
jo
cmp
cmp
xchg
dec
inc
push
ljmp
lods
sahf
out
pop
lahf
pop
in
out
mov
test
out
cmp
jecxz
push
loope
addl
adc
jns
cmovae
mov
les
test
in
sbb
fwait
in
aaa
push
mov
or
out
dec
jge
je
lds
cmp
sub
sbbl
lret
mov
jbe
int3
and
das
dec
and
mov
pushf
sbb
add
out
and
jmp
push
and
scas
sbb
arpl
cmp
dec
mov
mov
fcoml
cmp
repz
jecxz
pop
cld
adc
cwtl
pop
je
dec
movsb
sub
mov
xchg
daa
inc
in
lods
fistps
insl
mov
adc
mov
repnz
cwtl
add
inc
pop
xchg
or
sub
fisubrl
in
fldenv
scas
std
mov
iret
xchg
pop
fldenv
and
mov
ja
sub
mov
loopne
xchg
add
jnp
sub
les
jo
popa
test
jg
aad
or
mov
fcoml
push
xchg
pop
mov
xor
jno
js
fwait
stos
inc
cs
dec
pop
sub
sbb
fnsave
ffreep
rol
rcrl
cmp
mov
hlt
push
pop
movsb
setge
gs
mov
aad
sub
jp
jmp
repz
push
rcll
je
mov
sub
pop
xchg
sbb
jp
xor
sub
in
stos
inc
iret
xchg
fwait
dec
mov
adc
jne
cld
cmp
cltd
lds
ljmp
pop
icebp
lds
fmull
sti
jmp
lea
mov
mov
ljmp
lcall
mov
fistl
sub
fimuls
mov
ja
or
rcl
hlt
mov
pop
cmc
sti
xchg
or
rorb
dec
dec
test
popf
jge
xlat
sub
xlat
movsl
test
pop
andb
loop
out
leave
dec
outsb
mov
pop
push
or
xor
cmp
inc
lods
jmp
jg
testb
sbb
ds
mov
sti
mov
cmpsb
jecxz
out
jp
sar
addr16
orb
in
fidivrs
faddl
fsubrl
clc
xchg
fdivrs
pop
repnz
aaa
stc
ret
inc
addr16
mov
add
stos
jge
pop
and
mov
cmp
jg
cmpsl
enter
dec
push
lds
xchg
into
sti
outsl
xchg
lahf
int3
out
loopne
xchg
lock
aad
emms
mov
aad
dec
adc
jbe
cmpsb
mov
movsl
das
mov
fstl
clc
dec
sbb
mov
adc
fmuls
test
aaa
push
test
jl
or
inc
mov
xchg
mov
pop
push
call
inc
iret
mov
std
dec
loopne
lahf
or
dec
pop
xchg
int
outsl
push
lret
cwtl
mov
cli
pop
jp
rcr
es
data16
mov
ret
repz
addl
jno
jge
mov
cmp
and
xchg
fnsave
xchg
jnp
icebp
mov
pop
sbb
ss
pop
pop
xor
mov
xor
jnp
into
mov
mov
rcll
daa
jp
loopne
jp
jl
sarb
cmc
out
inc
daa
sbb
jns
call
sbb
into
movsl
sbb
add
add
nop
push
idivl
int3
inc
or
inc
add
xor
jbe
insl
aam
inc
lods
jno
scas
test
jl
add
and
lea
mov
cld
add
nop
call
pop
add
pusha
aaa
adc
pop
pop
pop
xchg
inc
xorb
xor
jo
xchg
repz
out
les
sub
rorl
jecxz
jae
jecxz
jge
sub
decl
iret
sbb
les
sbb
and
inc
outsl
loop
mov
pop
cmpsb
mov
and
xchg
add
es
xor
xchg
mov
pop
enter
jle
jns
mov
aas
loop
jns
push
mov
lea
adc
cltd
jbe
insl
push
jo
sub
pop
push
int3
pop
jmp
leave
jp
add
mov
push
sub
or
jg
cli
push
pushf
or
add
jl
pop
add
mov
bound
jae
test
and
insl
dec
dec
orb
xchg
call
stc
std
lock
jnp
mov
call
jbe
push
pusha
clc
cmp
sbb
mov
push
xchg
jbe
hlt
jmp
add
mov
out
xchg
lret
dec
mov
sbb
jb
pop
add
or
outsb
out
test
lcall
pop
inc
pushf
int
jg
push
add
jle
mov
mov
dec
mov
fdivs
mov
sub
jecxz
xorb
out
je
and
sub
lret
fmul
jb
fistpll
push
mov
lods
mov
adc
cmp
add
cmpsl
dec
mov
scas
push
sahf
xchg
push
out
ret
lahf
dec
xor
cmp
imul
pop
add
jle
adc
sbb
adc
inc
loopne,pn
jmp
add
cmp
aad
xor
scas
sub
shr
outsb
pop
push
push
cld
sarl
push
or
mov
push
and
sub
shll
push
nop
dec
inc
adc
push
mov
push
pop
fmulp
sub
dec
jno
mov
in
lods
pushf
add
test
sbb
inc
dec
popa
ss
mov
and
cmpsl
cmp
out
sbb
daa
or
ljmp
sbb
jecxz
push
and
pop
cmp
pushf
push
cmpb
into
out
adc
mov
subb
or
and
xchg
aaa
out
nop
je
mov
fdivr
aam
clc
inc
pop
out
ret
stc
pushf
adc
sti
and
sub
sub
movsl
mov
call
push
sub
mov
xchg
xchg
sbb
push
mov
push
testl
dec
stos
adc
jmp
cwtl
sub
dec
push
cltd
dec
jge
pop
rol
xor
pop
aam
push
adc
addr16
jb
std
dec
and
xchg
pop
orl
mov
data16
fstpl
xor
xchg
lds
es
imul
mov
jg
fstpl
arpl
push
mov
dec
int3
cmp
aaa
lcall
sbb
daa
int3
mov
daa
or
subl
or
fisttpll
pop
push
push
call
mov
mov
or
sbb
les
aaa
sbb
dec
sub
jno
in
xchg
das
sub
jmp
mov
fmuls
push
push
fsubrl
ret
arpl
mov
rorb
xchg
gs
or
or
fs
xor
hlt
bound
repnz
icebp
outsl
xchg
xor
nop
xor
mov
mull
sbbl
imul
push
aam
inc
sbb
das
sbb
ret
sti
adc
or
vsqrtsd
cld
cmp
cmp
hlt
fwait
mov
cmpsb
aaa
mov
mov
loope
cwtl
mov
jbe
aad
cmpsb
adc
xchg
ret
sub
mov
sub
in
imulb
sti
test
jl
lcall
mov
mov
mov
lds
popf
pop
pop
inc
cwtl
jb
adc
test
mov
gs
mov
out
add
jo
sub
cmp
lret
std
sub
in
fstpt
inc
in
mov
int
mov
sub
test
sub
sbb
xorl
jne
in
sahf
mov
dec
sarb
in
lea
sbb
lret
mov
lret
dec
mov
pop
popa
movsb
call
or
outsl
push
inc
repnz
inc
or
leave
enter
imul
ljmp
mov
lods
inc
or
sbb
popf
sbb
push
lea
or
cmpl
dec
loop
loopne
icebp
xlat
pop
cmp
lcall
dec
lahf
jno
cltd
and
loopne
arpl
dec
pusha
sbb
in
sbbl
pop
push
aam
push
lret
jecxz
fisttps
stc
mov
leave
movl
int3
push
lods
cli
fiadds
push
pop
out
push
push
push
outsl
push
or
loop
fdivp
mov
sub
push
inc
nop
cs
test
adc
dec
aad
and
inc
xchg
push
out
iret
es
or
ffree
and
lods
mov
xchg
ja
bound
and
jmp
mov
in
xor
dec
xor
pop
cmp
mov
jecxz
or
sub
test
mov
xor
out
icebp
imul
pop
adc
hlt
in
in
and
inc
add
jle
mov
mov
mov
mov
adc
leavew
test
jns
lret
shlb
inc
mov
lret
dec
cmpsb
cmp
rol
inc
jle
adc
cmp
lock
sub
and
pcmpgtw
cmp
xor
es
jbe
out
sub
dec
mov
xchg
mov
xchg
ud2
xchg
out
inc
push
add
xor
iret
testb
inc
dec
mov
movsb
add
cltd
sysenter
lahf
inc
mov
adc
xchg
mov
push
add
cmp
and
cmc
push
icebp
imul
or
jne
incl
ljmp
or
add
dec
dec
pop
les
aad
sbb
adc
mov
and
xor
cmp
ja
adc
mov
fs
addr16
fcompl
xchg
or
push
adc
dec
adc
fs
test
cmp
jecxz
mov
inc
inc
test
inc
add
inc
fnstcw
ret
mov
pop
ja
dec
into
out
faddl
mov
push
out
in
inc
xchg
mov
in
pop
and
lahf
xchg
push
sub
insb
es
mov
stos
movsl
adc
insl
lahf
imulb
test
outsb
lahf
pushf
jg
jo
sbb
cmp
ret
or
push
addr16
push
shl
mov
mov
outsl
ljmp
cmp
mov
mov
adc
test
push
push
fimull
fmuls
or
sbb
mov
leave
jmp
repz
dec
mov
mov
stc
xchg
imul
int3
imul
pop
lods
push
nop
in
fdivl
push
fnstsw
or
xor
bound
enter
add
pushf
jne
and
outsb
arpl
add
cld
inc
adc
pop
mov
push
dec
cmp
push
lahf
push
push
xchg
xchg
xlat
xor
mov
and
divl
mov
cld
mov
stos
mov
les
pop
shrb
mov
sbb
sub
in
sbb
inc
cltd
icebp
add
pop
xchg
ror
mov
lahf
dec
push
jecxz
inc
daa
cld
enter
ret
rcrl
std
lret
xchg
xlat
movsl
dec
pop
adc
aas
push
stos
xchg
dec
movsb
xor
dec
and
in
and
aas
adc
in
pop
nop
or
std
fildll
pop
in
imull
dec
int
lahf
and
push
cs
cmpsb
imul
lret
and
mov
sub
notb
inc
add
test
mov
lret
xchg
iret
stc
scas
sub
xor
scas
xchg
repnz
inc
cmp
scas
inc
push
or
std
jg
or
add
outsb
mov
and
iret
pop
mov
and
add
dec
mov
and
pop
clc
cli
xchg
inc
cmp
push
stos
lret
add
arpl
sti
jnp
cltd
ficoml
dec
shll
cmp
sbb
cltd
sbbl
jg
push
into
dec
adc
movsb
sbb
push
cli
pop
jmp
adc
xlat
add
and
mov
mov
adc
and
fisubrl
mov
pop
pop
dec
mov
loopne
add
cwtl
jg
ds
inc
push
push
fbstp
in
jbe
or
int3
sub
adc
xchg
and
rcrl
lea
push
xchg
lea
scas
and
pop
dec
hlt
fadds
rolb
sbb
or
call
dec
jb
xor
rorb
xor
test
popf
pop
mov
cmpsl
outsl
out
les
fmull
and
adc
scas
xchg
push
pop
push
movsl
or
fimull
add
fistpl
fildl
pop
lahf
repnz
subl
inc
mov
mov
pop
pshufw
out
enter
scas
ficoms
ss
dec
push
aam
stos
mov
test
jge
les
dec
push
stos
cwtl
mov
sti
out
jmp
int
cmp
daa
jle
push
icebp
dec
sub
jo
fadds
addr16
stos
repz
gs
andb
dec
sbb
add
cs
jne
and
test
js
xchg
inc
adc
push
or
sbb
ss
mov
mov
test
imul
push
into
cwtl
or
test
lods
jmp
xchg
or
or
jecxz
push
loop
cmp
xor
rcll
or
mov
jae
dec
xchg
add
shlb
clc
mov
dec
ficomps
in
cs
inc
in
jno
ror
cli
daa
push
mov
add
aaa
rclb
outsl
jbe
xchg
sub
mov
mov
or
divb
mov
aaa
jge
insb
sub
mov
clc
add
mov
addr16
push
outsl
cs
cmp
mov
scas
faddl
test
loop
lret
inc
jmp
lds
pop
pop
mov
test
or
aad
test
imul
out
or
cld
or
inc
test
jl
fwait
adc
sub
bound
aam
cld
sub
cmp
sbb
adcl
std
scas
xchg
mov
and
js
std
dec
negb
mov
sbb
pop
jg
mov
mov
mov
insb
fwait
push
js
out
jmp
loope
jecxz
mov
cmp
mov
mov
dec
shrl
dec
test
cmpsl
add
inc
inc
into
in
test
mov
lods
nop
popf
sub
int3
popa
sbb
jecxz
xor
jmp
sbb
pushf
mov
call
ds
leave
mov
dec
mov
out
in
ljmp
jp
sbb
adc
cmpsl
notl
loop
insb
data16
aam
mov
push
add
arpl
inc
int
sub
jmp
in
lds
aad
mov
popf
or
sbb
push
adc
push
push
fcompl
stos
jae
jmp
adc
iret
test
fucom
mov
xor
add
test
cmp
xchg
aas
les
and
lock
push
test
rcll
test
imul
inc
mov
mov
mov
jne
inc
loop
in
movsb
sahf
popf
inc
push
mov
in
lock
or
and
push
xorl
fldl
imul
mov
and
xor
call
jle
add
dec
adc
dec
cmc
lret
xor
leave
cmp
mov
adc
test
rolb
or
pop
stos
lahf
fldl
add
mov
and
or
dec
stc
mov
mov
insb
pop
iret
out
std
push
sbb
or
les
dec
inc
jg
add
inc
and
pop
stc
mov
jecxz
scas
je
test
jns
icebp
fs
aam
xchg
es
fxch
jae
and
out
ljmp
ds
lret
andl
out
jo
pop
stos
pop
mov
adc
cmp
sub
push
int3
pop
shlb
insb
mov
fidivrl
xor
jae
cld
repnz
push
mov
pop
andl
sahf
jmp
iret
inc
pushf
inc
jbe
jb
adc
adc
pop
ret
push
push
xchg
cmp
jbe
lods
loope
pop
call
jge
pushf
imul
movsb
lcall
add
aad
push
push
inc
adc
ja
xor
pop
mov
mov
push
addb
fdivl
int3
jae
jmp
inc
and
pop
inc
fidivl
repz
popa
xor
pop
pop
dec
cmp
out
sub
fwait
xchg
test
or
aas
cwtl
and
in
data16
aam
loopne
stos
shl
add
push
sub
sub
dec
jecxz
dec
popa
insb
sbb
sbb
xor
mov
adc
jb
mov
cmp
leave
mov
dec
sahf
cld
mov
aas
icebp
mov
fs
test
jbe
or
push
icebp
xor
inc
stos
fcoms
cwtl
loopne
ret
xchg
in
fcomps
cmp
mov
add
xchg
mov
inc
inc
or
mov
push
scas
cmp
outsl
add
xchg
or
mov
jmp
adc
inc
mov
dec
mov
cmpsb
add
sbb
insb
mov
fnstsw
and
mov
dec
cmp
cmp
lcall
sbb
inc
mov
lahf
push
cmpsb
cmc
sub
bound
sub
or
popa
daa
pop
cmp
pop
fwait
mov
inc
cmp
push
fistpl
xor
push
push
pop
xor
mov
pusha
cwtl
mov
sti
adc
in
test
pop
dec
pusha
mov
popf
push
sarb
dec
pop
cmp
cs
dec
xchg
iret
push
mov
outsl
aad
mov
dec
adc
pushf
movsl
mov
movsb
sbbb
mov
cmc
jp
xchg
shr
cli
push
pop
jnp
pop
fs
lock
shrl
mov
sbb
out
js
pop
mov
lahf
rcl
movsb
inc
je
repz
mov
imul
add
leave
test
pop
in
push
js
lea
out
xor
mov
xchg
xor
push
xchg
stos
fs
cmp
cmpsb
xchg
xor
lods
mov
mov
leave
xor
inc
sbb
and
int3
xchg
pushf
sub
cmp
xor
repz
xchg
dec
xlat
push
and
out
cmp
in
push
js
lods
jge
fs
push
dec
mov
lahf
fsub
dec
push
lahf
les
fdivrl
aam
out
mov
dec
xchg
dec
or
or
ljmp
filds
xor
mov
push
mov
add
in
mov
push
or
mov
jg
xlat
lea
cld
inc
cmp
and
lret
int3
pop
clc
or
int3
mov
sub
push
pop
in
sahf
cmpsb
out
lds
neg
mov
pop
lret
cmp
jne
or
cmpsl
push
icebp
jg
mov
pop
ja
xchg
popa
mov
sub
stc
rcrl
sub
aas
mov
aas
fistl
repz
je
pusha
cmp
push
mov
ja
mov
dec
scas
push
stos
mov
and
mov
push
arpl
sub
push
xchg
and
mov
mov
pusha
leave
push
aas
inc
push
add
dec
clc
push
sti
les
pop
stc
jle
into
jmp
pop
and
popa
in
cmpsb
xchg
push
push
fcmovb
push
sti
mov
vmptrld
mov
les
int3
and
pop
int
iret
hlt
sub
into
pop
repz
int
inc
stc
fstp
dec
pop
adc
sub
inc
adc
je
mov
mov
dec
lahf
sar
jb
mov
stos
push
loop
notl
test
lods
add
movsb
in
push
jmp
pop
pop
je
xor
adc
or
loop
shrb
addr16
out
mov
mov
mov
je
push
pop
ljmp
sub
movsb
inc
xchg
mov
ficoms
mov
sti
mov
and
fs
stos
icebp
int
mov
or
mov
loope
dec
dec
jle
mov
sbb
cli
das
adcl
rcl
mov
or
pushf
stos
xchg
aad
jg
add
mov
cltd
xchg
mov
sbb
loopne
mov
lods
movntps
in
aam
add
rcll
popf
idiv
xor
dec
or
xor
enter
bound
dec
push
dec
inc
push
les
insl
repz
mov
inc
clc
aad
cmpsb
pop
lret
rclb
mov
repz
enter
fdivrl
addr16
cmp
inc
or
lods
sbb
xor
add
sbb
or
adc
int
cltd
lods
jbe
mov
add
push
mov
call
or
push
loopne
cwtl
xchg
rcr
or
push
dec
xor
ret
das
push
push
fnstenv
sahf
aad
aas
xchg
mov
mov
or
jecxz
das
nop
cmp
adc
sub
mov
inc
cwtl
out
cli
int3
and
lds
popl
jmp
ficoml
or
call
xor
jmp
mov
push
inc
sbb
jbe
xorl
sbb
in
and
add
dec
cmp
push
add
sub
cwtl
loope
xchg
insb
cmp
pop
add
adc
mov
cmc
xlat
xor
push
repnz
inc
sbb
push
mov
subl
stc
jne
push
pop
adc
mov
mov
cmpsl
inc
roll
dec
mov
xor
xchg
push
movl
or
push
loopne
push
and
into
popf
mov
fstps
addb
out
into
hlt
dec
and
or
mov
and
hlt
pop
insb
decb
popa
inc
scas
or
sub
mov
xorl
rcl
out
xchg
push
pop
cltd
jmp
pop
mov
loop
xor
addr16
mov
adc
and
mov
in
mov
adc
xchg
mov
lods
lret
mov
popa
movl
out
jae
xrelease
dec
or
mov
inc
fildll
inc
sbb
iret
test
xor
jnp
mov
loope
dec
dec
lock
cmp
and
lock
mov
cs
sbb
mov
push
icebp
stc
xlat
adcl
popa
pop
jo
data16
loopne
pop
adc
mov
sbb
mov
cli
xor
or
sbb
push
lock
push
test
mov
fnstcw
dec
iret
mov
and
inc
mov
stc
aam
std
cmp
mov
outsb
xchg
xchg
enter
cmpsb
inc
jns
mov
js
insb
mov
push
xchg
cmp
loope
int3
sbb
mov
jnp
lcall
push
movsl
jg
mov
fldt
arpl
cmp
mov
subl
dec
fnstsw
sahf
xchg
push
jne
aam
mov
imul
lods
sub
movsb
fisttps
icebp
and
xchg
xchg
jno
mov
outsb
cwtl
pop
dec
std
inc
aas
mov
xor
cmp
iret
lcall
scas
sbb
xchg
sub
icebp
mov
xchg
push
lods
jbe
out
shll
lock
in
pop
mov
cli
or
pop
notb
pop
ss
repz
jb
sbb
xor
xchg
cld
cltd
outsl
jge
aas
mov
mov
ret
cs
icebp
iret
mov
ja
mov
lcall
xor
fisubl
shlb
xchg
sub
les
sbb
lea
sbb
mov
iret
inc
mov
ja
daa
cmp
pop
mov
fs
fwait
pop
mov
ret
lods
jg
cld
repnz
mov
lods
jge
ds
inc
out
das
in
xchg
test
in
mov
or
loopne
mov
outsl
nop
addr16
ret
cmpsl
sbb
or
push
jne
stos
sbb
fisubrl
lret
sub
push
out
in
adc
pop
insb
lock
jp
lret
out
adc
pop
add
inc
dec
aaa
stos
loopne
cmp
loope
dec
cmpsb
inc
mov
adc
jns
insl
xor
repz
cli
fiadds
mov
xchg
and
test
mov
adc
mov
and
clc
movsl
and
add
je
push
lret
cmpsb
or
adc
cmc
nopl
pop
clc
inc
pushf
mov
or
jae
ficoml
sahf
jmp
push
out
je
insb
mov
dec
aaa
nop
in
aas
jns
push
xchg
andb
out
pop
andl
out
mov
and
push
ret
insl
loopne
jp
mov
jno
xchg
push
pushf
stos
cwtl
cmp
outsl
push
mov
dec
rcll
xchg
dec
inc
pop
sahf
dec
movsb
enter
movsl
mov
mov
adcb
xchg
ja
cmpsl
xchg
jge
adc
les
test
outsb
das
cmc
xchg
mov
inc
push
push
pop
jmp
shlb
pop
jg
xor
cmp
andb
inc
adc
inc
sub
mov
ret
movsl
cmpl
cli
mov
inc
dec
and
xor
xor
dec
push
sti
add
cld
mov
inc
xor
sub
les
push
mov
fnsetpm(287
arpl
inc
aad
jl
int3
push
and
repz
jno
in
dec
lods
fsubrl
repz
jmp
decb
out
lods
jns
push
enter
ret
sbb
out
pushf
or
xchg
push
xor
fldcw
sahf
sbb
scas
out
dec
jg
popa
sub
out
jns
ljmp
add
repnz
mov
scas
loope
inc
sbb
iret
sub
iret
aaa
pop
or
mov
fildll
das
test
jnp
test
test
xor
sbb
in
sub
inc
dec
cmp
jge
in
push
jo
push
adc
roll
push
arpl
adc
leave
cmp
out
pop
xchg
push
add
cld
sbb
inc
push
inc
flds
mov
adc
or
mov
mov
lret
cmp
imul
jae
sbb
mov
out
cmp
jbe
mov
pop
fwait
jnp
dec
enter
adc
jecxz
add
inc
xchg
xchg
data16
shrl
inc
xchg
push
xchg
out
push
rclb
or
pop
sub
cltd
and
pusha
lret
lds
adc
inc
lahf
xchg
gs
cltd
repz
call
dec
dec
xchg
popf
push
sahf
cmp
ret
js
lds
mov
int
xlat
mov
lret
loop
in
and
fcmovnb
cli
pop
popl
inc
push
jne
pop
lcall
repnz
push
inc
inc
mov
int3
loope
lret
inc
nop
ja
add
adc
mov
and
and
leave
call
sahf
jb
daa
test
cmp
addr16
daa
sbb
xor
fsts
mov
ret
or
and
test
cltd
inc
xor
mov
cmp
mov
pushf
adc
loope
test
sub
add
sete
jo
pop
repnz
cmp
iret
xor
popa
aas
pushf
dec
jno
lret
sar
cmp
into
enter
jecxz
inc
dec
aad
xchg
and
insb
mov
or
jno
inc
sbb
inc
push
mov
sub
mov
mov
xchg
cs
out
pop
loop
mov
xchg
xor
mov
enter
mov
imul
mov
in
cmp
xchg
sahf
ljmp
cld
pop
mov
sbb
jns
xchg
push
fistpll
mov
mov
mov
hlt
jo
jecxz
lret
mov
add
ss
jmp
inc
pop
roll
ret
sti
sbb
or
out
push
dec
adc
sub
sbb
int
sub
popl
cmp
inc
fdivrs
push
imul
jnp
sti
popa
ret
sub
mov
fisubrs
dec
mov
sub
inc
icebp
loopne
xor
add
fadd
dec
fwait
jge
dec
psrad
jg
add
jae
push
test
pop
jp
xor
cmp
pop
outsb
jb
dec
nop
add
inc
js
out
aas
ljmp
ja
pop
movsb
cmp
jg
out
mov
gs
sub
inc
in
inc
inc
mov
jne
and
jl
lods
jae
aaa
dec
and
xchg
insb
adc
push
adc
sarb
or
ljmp
lods
inc
psubsb
lcall
rcrb
testl
lret
jl
mov
add
jno
mov
xchg
inc
insl
add
sbb
add
inc
jns
mov
les
mov
cs
add
push
cmp
and
adcb
xchg
iret
fisttps
insb
repz
cmp
inc
push
push
xor
repnz
cld
shlb
add
adc
ja
sbb
fldt
pusha
add
sbb
push
and
adc
lret
mov
jecxz
push
dec
push
cmpsb
dec
movsl
add
pop
int3
mov
mov
lahf
mov
xchg
mov
testl
xor
lret
push
pop
arpl
add
jmp
insb
xor
lds
jne
pop
inc
dec
mov
mov
shlb
add
in
ret
jbe
test
lret
iret
pushf
cmpsb
dec
push
mov
fsubrl
mov
xor
dec
jne
cwtl
lret
out
out
mov
in
ja
data16
xchg
mov
mov
arpl
ljmp
jnp
inc
dec
xor
inc
mov
or
pop
into
or
jle
std
mov
dec
stc
aam
mov
fisubs
sahf
cs
cltd
or
pop
push
add
inc
in
mov
cmp
inc
mov
inc
pop
dec
cmpsb
and
cwtl
mov
mov
push
addr16
mov
fiaddl
sub
fadds
push
lret
or
loope
xchg
hlt
int3
pop
mov
mov
sbb
sub
mov
jmp
lahf
mov
scas
cli
repnz
inc
int
in
dec
xlat
and
jl
mov
sahf
addl
xchg
sub
xchg
clc
stc
stc
add
mov
das
loop
lock
push
stc
cli
in
push
mov
mov
bswap
orb
loopne
jge
dec
cmp
jl
test
pop
clc
jmp
outsb
push
fs
nop
fildl
xchg
testl
cltd
out
mov
add
or
cwtl
movsb
test
add
xchg
add
push
jmp
and
loopne
xchg
xor
iret
cmp
inc
mov
add
popf
jae
test
jbe
or
cmc
loop
iret
adcb
dec
test
sub
or
xchg
jns
add
jo
aam
jl
cmp
jl
cmpsb
insb
cli
jge
mov
cmp
add
and
mov
fwait
pop
cli
jno
fistpll
or
or
lds
sub
ja
fiadds
push
rcr
adc
sahf
mov
xor
xor
movl
popf
mov
adc
cmp
repz
mov
sub
and
gs
sbb
aad
xor
in
mov
aas
pop
aas
xorb
or
dec
cmpsb
push
cmpsl
stc
aas
cmp
push
mov
or
dec
xor
fcmovne
fstl
lahf
mov
cmp
sbb
aaa
jne
shll
dec
test
leave
cli
cmpsl
jecxz
ds
adc
pop
sbb
lds
xor
aas
pop
int
fcmovnb
je
mov
stos
dec
je
push
sub
call
pop
mov
ret
aaa
or
adc
rcll
sub
xchg
shl
ret
mov
cmpsl
fistpl
mov
dec
cmpsb
aad
cmp
inc
in
push
lret
push
mov
aad
and
call
testb
or
pop
mov
cs
mov
push
lret
dec
push
js
cmc
or
and
mov
mov
xor
cltd
cmpsb
insb
fs
mov
mov
repnz
or
scas
outsl
dec
adc
pushf
xor
sub
push
aaa
mov
sbbb
or
mov
insl
decl
call
call
es
add
int3
adcl
or
xor
jmp
es
lret
in
xchg
adc
fs
and
mov
icebp
fildl
pop
dec
mov
enter
cmc
bound
cmpsb
push
repnz
mov
shr
in
push
repz
add
xor
das
sti
test
pushl
in
sbb
ja
shll
jne
add
iret
popf
pushf
in
pop
xchg
shrl
adc
cwtl
arpl
leave
testb
dec
sbb
sub
mov
adc
ljmp
insb
int
pop
dec
cmp
mov
xor
dec
pop
test
xchg
frstor
sbb
xchg
les
mov
jbe
xchg
dec
cwtl
lahf
push
sbb
mov
mov
in
insb
xchg
add
mov
outsb
fisttpl
mov
add
lods
xchg
mov
dec
fwait
xchg
lods
cmp
xor
sti
push
mov
orl
pop
mov
loop
xchg
dec
adc
sub
int3
repnz
test
push
mov
push
cwtl
xchg
dec
or
mov
add
cmp
loopne
and
das
ljmp
je
mov
lret
js
movsb
add
mov
rcrb
popf
pusha
jae
xchg
inc
inc
mov
push
je
jb
lock
cmp
bound
pushf
aam
popf
dec
imul
imul
push
cmpl
call
or
ret
rcll
xor
mov
adcl
cmpsb
fnstenv
idivb
gs
cmp
xor
ret
jns
jb
cmpsb
daa
sarb
stos
fwait
cmpsb
cwtl
pop
xor
xchg
imul
outsb
and
inc
lock
je
mov
dec
xor
xchg
mov
push
jb
cwtl
mov
mov
cmp
mov
sbb
scas
aas
int3
pop
inc
push
loope
jb
lcall
fmul
sahf
push
lods
dec
jmp
inc
dec
mov
push
jo
pop
fldcw
jge
subb
popf
aam
popf
sub
out
xor
sbb
jecxz
rcrl
mov
jbe
sbb
mov
addr16
mov
and
and
and
shll
jle
cld
outsb
call
mov
jp
aam
cwtl
sbb
sbb
fcmovnbe
jmp
neg
and
mov
xor
adc
je
or
adc
test
jno
cltd
adc
push
outsl
mov
ret
lods
fcmovbe
scas
pop
jne
pop
adc
or
nop
or
adc
out
jmp
loope
loop
daa
sarl
jmp
fldcw
ds
mov
popa
cmp
in
iret
pop
push
push
das
xchg
shl
adc
imul
testb
mov
or
push
call
cltd
or
lods
xchg
add
jno
ja
xchg
fstl
mov
les
pop
fadd
cmp
sub
mov
idivl
hlt
pop
aad
mov
cmc
jmp
cmpsl
outsb
cmpsl
add
xlat
or
and
pop
mov
pop
test
fisttps
and
or
int3
loop
ja
inc
shll
es
pop
or
lds
pop
mov
je
push
inc
stos
push
mov
in
mov
jnp
xor
popa
or
shll
mov
or
mov
adc
push
sbbb
dec
scas
mov
push
add
jns
sbb
loope
pop
dec
dec
cmp
je
jo
sbb
outsl
mov
cld
mov
test
insl
xlat
enter
jbe
mov
cli
sbb
dec
das
fdivs
jl
lods
stos
mov
sub
sub
cmp
mov
iret
dec
mov
inc
addr16
fists
cmp
push
pop
lahf
fistl
xor
pushf
add
pop
repz
hlt
fisubl
cmp
mov
repnz
xchg
pusha
stc
negb
out
xchg
xor
jle
xor
mov
mov
and
mov
pop
icebp
rorb
sti
enter
or
mov
mov
in
jo
push
in
mov
mov
mov
inc
mov
bound
cmpsl
rcll
cmpsl
jg
test
jno
or
shrl
jg
and
popa
xor
xor
xchg
mov
sub
add
test
inc
shlb
scas
cmp
fucom
aad
mov
pop
mov
mov
iret
cld
or
jb
sti
cmp
push
and
dec
bswap
outsb
pop
cltd
pop
add
leave
inc
mov
xchg
ljmp
mov
xchg
inc
scas
loop
sub
inc
push
sbb
sbb
aas
addr16
aaa
pop
sub
inc
or
mov
dec
loope
pop
cmp
fs
fsubrs
repz
push
mov
mov
ss
sbbb
sbb
sub
sbb
insb
xchg
jnp
lds
ljmp
xor
jns
pop
cltd
push
mov
fwait
clc
and
lret
and
sti
lods
outsb
and
sahf
xchg
sahf
xchg
jecxz
rcr
jg
pop
adc
lea
mov
and
imul
movsl
sub
inc
int
fwait
inc
inc
jmp
inc
loop
mov
shlb
sub
sub
xchg
push
loopne
sar
pop
aaa
push
addr16
insb
mov
jge
rorl
sub
mov
outsb
rcrl
mov
xor
xchg
mov
js
fcoms
xor
add
cmp
loopne
mov
in
inc
push
add
sub
adc
aam
cs
cmpsb
fldt
add
push
in
pop
pop
pop
daa
inc
shrb
dec
popa
cwtl
scas
add
inc
mov
insb
loope
xchg
pop
test
mov
es
popf
and
or
popf
mov
rclb
cmc
flds
dec
outsb
sbb
xor
movsb
xchg
sbb
je
ficoml
adc
fs
jmp
lds
jo
call
and
xchg
dec
imulb
inc
test
mov
bound
pusha
mov
mov
pusha
sub
jo
addr16
cltd
jmp
cmp
mov
sub
sub
mov
or
ficomps
add
mov
push
addl
in
sub
sbb
sar
or
pushl
mov
adcb
pop
repnz
or
sbb
enter
inc
mov
nop
dec
mov
xorb
sbb
jmp
jmp
iret
pop
sub
push
std
jmp
mov
notb
xor
jg
jb
pop
mov
jae
and
fnstenv
in
mov
mov
loopne
push
push
in
into
dec
push
inc
out
cmp
movsb
popf
jb
sub
sbb
fmull
or
test
sbb
in
mov
jns
xchg
lds
fs
pop
pop
int
ljmp
es
rcr
mov
out
inc
and
repnz
xchg
pop
sbbl
add
cltd
jo
xor
push
scas
arpl
ficoml
aad
adc
in
je
add
xchg
mov
sbbl
adc
inc
rorl
das
insl
push
push
mov
sub
mov
jae
popl
or
adc
out
fwait
xchg
out
stos
cli
jne
jmp
nop
xchg
push
stc
mov
rorb
adc
and
popf
ds
pop
xlat
aam
test
lret
out
mov
test
fs
sti
clc
mov
xchg
out
and
mov
jmp
mov
jne
cwtl
inc
dec
rcrb
xchg
pop
aam
jmp
out
aam
int3
inc
test
mov
rclb
outsb
int
mov
mov
and
cld
or
sti
shll
repnz
mov
dec
adc
lods
dec
xor
add
adc
aam
scas
daa
dec
test
xchg
mov
or
jl
mov
and
stc
pop
or
mov
inc
pusha
movsb
sub
mov
mov
imul
lahf
stos
loopne
lods
sbb
mov
push
cmpsl
add
fwait
insb
sbb
sub
xor
xchg
lock
lds
addr16
xchg
cmpsl
and
adc
pop
arpl
stc
mov
stc
test
lret
fcmovnbe
mov
mov
mov
sub
dec
sarb
inc
add
xor
lods
or
or
imul
jns
and
jno
inc
dec
clc
xor
fidivrs
xor
mov
sbb
lods
das
cmc
cmp
dec
nop
cltd
mov
insl
lock
inc
out
push
int3
ja
adcl
js
push
stos
mov
jecxz
jecxz
sbb
popl
sub
insb
cltd
cmp
in
movsb
mov
sbb
repnz
push
pop
pop
sbb
add
aad
int3
sub
out
pusha
mov
jg
push
xchg
lea
punpckhwd
lcall
pusha
repnz
sub
rorb
mov
and
mov
notl
rclb
daa
loope
in
mov
sub
jmp
or
fildl
dec
mov
adc
leave
jmp
xchg
and
or
lret
fnsave
scas
rcrb
out
jnp
push
add
int3
js
lods
cmp
or
popl
mov
push
outsb
js
sbb
les
fcom
xchg
and
xchg
mov
mov
addr16
daa
movb
pop
dec
adc
adc
dec
lds
imul
enter
stc
push
mov
jns
cmpb
sbb
cld
jge
in
and
jmp
or
and
inc
ret
xlat
fs
cmp
popa
and
rcrl
pop
lret
popl
outsl
inc
push
inc
mov
jp
test
jns
das
xlat
aam
jg
pop
shll
sbb
jo
insb
adcl
js
loope
mov
lret
lret
pop
add
inc
mov
jns
je
adc
push
test
dec
sub
mov
test
cmpb
ret
stos
xor
or
push
cli
push
push
in
sub
cmpsb
pop
dec
lea
mov
icebp
xor
xchg
xor
jg
insb
daa
cli
int
movsb
jmp
pusha
pop
push
lahf
in
jmp
ret
xchg
push
mov
rcrb
mov
pop
adc
push
ljmp
mov
adc
mov
aas
and
outsb
adc
adc
cmpsl
xor
xchg
cmpsb
pop
and
pop
jg
mov
sub
cld
sahf
sbb
and
add
xchg
push
aam
shr
inc
pop
shrb
repnz
js
mov
rorb
nop
push
and
push
js
jge
jmp
jo
xchg
sub
stos
xchg
es
mov
sbb
sbb
stos
cmp
cmpsb
pop
aaa
jnp
fsubrl
in
adc
fdivp
jae
sbb
push
icebp
adc
or
jo
aas
push
out
cwtl
push
dec
outsb
leave
cli
mov
add
sahf
adc
sbb
xchg
fisubl
lret
xchg
xorb
les
xchg
fldenv
lret
pushf
push
std
xor
clc
add
push
sbb
ja
xchg
lods
dec
icebp
sbb
cmp
dec
stc
enter
loopne
repz
in
mov
pop
push
cmp
jp
adc
push
mov
add
ja
lods
sub
jbe
das
mov
sbb
ds
or
cmpsb
or
xor
outsb
cmp
mov
cltd
inc
mov
ja
push
icebp
or
les
popf
push
lock
inc
je
jo
push
orl
imul
movsb
ljmp
sbb
mov
in
xchg
shl
loope
push
popa
lret
lods
out
push
add
test
push
pop
pop
popf
ljmp
fs
sub
mov
sbb
mov
int3
nop
xchg
cmc
sub
sub
and
stos
loopne
je
mov
iret
imulb
lods
add
loop
test
cmp
lods
add
fbstp
mov
fdivr
scas
pop
loope
lds
repz
inc
les
test
pop
mov
jb
mov
mov
push
int3
add
mov
sbb
add
inc
pop
xchg
dec
gs
push
jmp
push
shr
pmaddwd
pop
push
nop
sbb
cli
jno
add
lret
and
mov
cmp
and
cmp
lock
cmc
mov
sbb
cli
cmp
xchg
ss
pop
enter
insb
push
mov
xor
loopne
cmp
insl
push
xchg
jle
jg
insb
sub
in
nop
dec
mov
pop
out
cmp
adc
and
jb
arpl
fwait
loop
clc
sbb
nop
and
aam
xlat
jns
fidivrl
movsb
gs
push
inc
pop
in
cmpsb
loop
mov
dec
xchg
mov
add
fstps
pop
jmp
xchg
pusha
pop
cmc
hlt
inc
orl
push
imul
pop
mov
out
cmc
test
adc
in
sub
and
pop
jge
rcrl
in
and
fnstcw
clc
clc
mov
push
shl
clc
out
add
arpl
cmp
mov
inc
rcl
ficompl
xchg
pusha
loopne
dec
push
jnp
stos
ret
xor
and
orl
jns
gs
sub
loop
test
add
pop
lock
sbb
jl
addr16
add
jae
adc
mov
mov
sub
sarl
sahf
movsb
enter
xor
loop
push
or
imul
jmp
cwtl
mov
xchg
mov
popa
cld
scas
add
pop
mov
or
xchg
test
xor
inc
inc
jmp
dec
dec
fsubrs
push
js
mov
jg
pop
cmpl
jae
cmp
lahf
stos
xchg
arpl
out
fcom
dec
and
and
cwtl
imul
mov
fwait
xchg
into
pop
enter
mov
push
data16
dec
mov
pop
ret
pushl
dec
adc
insb
dec
xchg
and
pop
cmp
mov
pop
pusha
push
mov
fcmovnb
sub
and
icebp
int
pusha
adc
sbb
mov
loop
jecxz
sub
rcrb
and
xor
adc
data16
mov
mov
pusha
ljmp
sub
out
inc
or
jo
shr
movsl
inc
adc
xor
cwtl
aaa
xor
jns
lods
sbb
sbb
pushl
std
jmp
and
mov
jp
loop
push
cld
fldcw
scas
xchg
faddl
in
xchg
lds
rolb
fs
add
inc
mov
ljmp
ss
and
mov
subl
xchg
leave
cmp
das
xor
inc
insl
pop
dec
xor
sbb
jnp
cli
push
push
adc
dec
aad
mov
or
out
decl
xchg
lds
inc
jmp
ds
pop
insb
jbe
push
pop
inc
imul
and
jo
and
jle
xchg
jle
push
xchg
outsl
ja
mov
setne
loopne
lock
jg
xchg
enter
xor
sti
ret
pop
pusha
sub
arpl
push
imull
repz
add
pusha
iret
fs
test
inc
cmp
mov
ljmp
imul
adc
dec
jle
jmp
xchg
arpl
fisttpll
xorb
xchg
sbb
xchg
pop
pop
nop
out
push
lea
daa
fdivl
fmuls
xchg
xor
aam
in
add
mov
jbe
icebp
jecxz
outsl
pop
sub
sarb
add
ss
push
sbb
dec
stc
add
enter
cld
js
add
lods
fxch
add
dec
pushf
aad
es
cs
ss
and
fstl
dec
or
jle
pop
xor
xchg
jb
dec
fildll
ljmp
jb
scas
xchg
imul
sbb
push
cmp
dec
cwtl
and
sbb
mov
push
aas
jno
mov
mov
jns
push
mov
movsl
xor
jb
add
push
dec
dec
sti
inc
mov
push
pop
daa
xchg
or
mov
movsb
inc
jnp
xchg
xchg
mov
fldln2
jle
clc
xchg
or
add
hlt
or
das
arpl
push
cli
aad
add
sbb
in
sub
fldcw
mov
cmp
ret
dec
insl
fiadds
ljmp
mov
or
xchg
bound
adc
adc
jecxz
filds
push
aad
mov
nop
pop
dec
sbb
cmp
adc
loop
adc
pop
inc
std
or
dec
xchg
mov
fwait
mov
subb
aas
aaa
imul
cmp
add
inc
and
inc
lods
outsl
mov
fcoml
aam
mov
lock
xchg
and
inc
push
push
cmc
mov
pop
mov
push
insb
push
movsl
push
out
std
mov
popf
cld
or
jne
jecxz
and
mov
lods
dec
jg
and
mov
in
or
mov
push
and
and
pop
sub
cltd
inc
mov
add
cli
mov
jno
std
cld
add
andl
sbb
scas
punpcklbw
incb
imul
adc
pop
sahf
lods
push
rorb
outsl
ffree
fsubrs
addl
mov
adc
lods
std
data16
push
fmuls
lahf
jns
pop
pop
ffree
pop
scas
xchg
aas
lds
xchg
xor
push
cmp
push
nop
push
in
and
jbe
inc
cmc
sahf
sub
cmpsl
mov
push
mov
fidivrl
lahf
jmp
insl
cmp
pusha
ss
fcmovne
lcall
js
xchg
and
cmpb
fsubrl
jo
dec
int3
repnz
cmpsl
adc
jp
outsl
mov
pop
cs
push
xchg
daa
cld
cmp
xor
mov
adc
fmull
push
jmp
fs
call
jmp
jle
sub
push
popa
mov
push
sub
pop
sbb
jne
call
mov
cwtl
and
xchg
cmp
cmc
dec
in
mov
les
xchg
dec
jecxz
rcrb
jnp
out
xchg
movsb
mov
xchg
repz
scas
lret
jns
mov
cmp
lds
cmpl
rolb
lock
sbb
jg
mov
int3
pop
ljmp
or
push
fstps
cmpsl
pop
jmp
adc
mov
xor
es
dec
jmp
popf
aaa
push
les
fbld
sbb
shlb
jo
dec
icebp
fsubr
fiaddl
fisubrl
int
out
std
sub
ljmp
add
mov
mov
mov
xchg
adc
icebp
ror
cmpsb
pop
push
push
stos
sub
cmp
push
mov
jle
lret
test
shrb
cmpsb
push
xor
mov
movsl
sub
out
in
sub
or
dec
in
cmp
push
push
adc
cwtl
xor
out
fistpll
fmuls
lods
test
ret
add
jg
repnz
sub
jo
cmpsb
mov
sarb
pop
in
cltd
pop
inc
pop
dec
aas
mov
sarb
push
xchg
ret
or
adc
sub
in
push
cmpsl
rol
mov
push
divb
fstpt
cmp
jo
loope
cs
loop
daa
shll
cs
iret
pushf
lret
cs
push
or
mov
xor
rorb
xchg
inc
pop
dec
adc
in
popa
or
mov
push
push
shl
and
aas
lret
lret
out
jbe
mov
icebp
or
hlt
or
push
scas
std
or
mov
inc
in
fcoms
loopne
pop
in
in
mov
in
jg
pop
std
or
stc
test
xor
xor
dec
mov
cmp
cld
mov
add
cmp
int3
or
hlt
int3
arpl
xchg
into
or
sbb
not
je
cmp
in
push
xchg
notl
sbb
pop
sub
fiadds
and
mov
in
popa
add
dec
lahf
jbe
pop
clc
movsb
pop
mov
test
jl
iret
sub
lods
movsb
jbe
or
sbb
mov
mov
dec
stos
movl
and
add
jo
jge
xor
and
cmp
mov
popa
jo
mov
out
push
jg
sbb
fwait
xchg
sub
xor
pop
je
xchg
in
mov
inc
mov
std
mov
fsubs
mov
or
xchg
aam
gs
add
movsl
ljmp
data16
aas
mov
fs
mov
cmp
lods
popf
js
stos
adc
mov
add
pop
insl
sarl
and
movb
and
mov
rcll
push
sbb
pop
in
adc
js
js
or
jle
or
lods
out
rcl
inc
in
sbb
adc
fwait
jae
mov
adc
push
es
mov
and
jbe
icebp
xchg
ret
mov
sahf
lds
mov
call
dec
push
lock
and
sub
add
push
jp
sbb
pusha
ja
adc
pop
ljmp
add
pop
sbb
mov
push
sbbl
aam
enter
imul
mov
push
add
adc
push
push
or
rorl
fcoml
les
sahf
dec
and
in
adc
dec
arpl
add
mov
push
cld
or
inc
mov
pusha
push
cmpsb
push
repz
bound
out
lods
popa
inc
sub
and
pushf
mov
add
sub
inc
xchg
dec
push
inc
iret
push
shl
adc
inc
test
fwait
and
cmpb
cmp
popf
pop
add
push
sti
pop
movsl
icebp
inc
inc
lcall
sbb
scas
dec
in
and
sbb
and
sub
fbstp
pop
mov
dec
xchg
orb
push
xchg
movzbl
ljmp
jno
pop
sbb
jno
addr16
movsb
push
stc
adc
xor
add
cmc
sbb
les
jb
xchg
adc
xchg
hlt
arpl
out
inc
leave
dec
idivl
adc
push
and
sar
xor
lea
fwait
mov
inc
sub
test
scas
es
into
mov
into
aad
enter
imull
xchg
mov
sbb
imul
jg
jecxz
adc
ljmp
xor
rclb
adc
lahf
stos
sub
scas
jnp
roll
inc
mov
or
sbb
or
call
nop
pop
insl
pop
sbb
dec
sub
sub
xchg
pop
out
mov
addr16
pop
ja
pop
xchg
cmp
data16
divb
and
movsl
in
daa
repnz
rorl
sub
xchg
int
or
test
orl
push
adc
outsl
cwtl
dec
gs
ja
mov
or
imul
add
push
jae
stos
dec
lock
and
lods
clc
lock
es
movsb
fsubs
or
jle
cmp
cmp
call
ror
push
les
stos
scas
cmc
std
movsl
in
mov
adc
loop
lods
add
data16
icebp
cltd
sub
xor
loop
out
imul
std
andl
mov
xchg
xlat
adc
sub
xchg
adc
or
lods
jg
and
jmp
adc
testl
stc
mov
gs
loope
xchg
pop
ljmp
push
test
popa
jg
icebp
mov
loope
pop
lods
xor
cli
clc
dec
cmp
sub
push
stc
sahf
inc
pop
into
push
cmc
faddl
mov
negb
inc
add
ret
jo
mov
xor
jl
addr16
sub
add
add
int3
and
mov
imul
iret
out
jge
sub
scas
and
popa
aaa
dec
aas
jg
push
hlt
jle
nop
push
enter
xor
out
sbb
lret
inc
pcmpeqw
jle
or
imul
pop
int3
outsb
daa
sub
pop
adc
push
rorl
mov
sub
xchg
test
sub
jmp
or
jecxz
pop
pop
push
jnp
int
xchg
mov
ljmp
pusha
scas
pop
inc
mov
xchg
movsb
nop
fimuls
pop
ja
insb
jae
pop
xor
pop
bound
dec
lods
stos
cltd
mov
jecxz
sbb
mov
test
xchg
jb
jge
pop
lods
sub
aaa
mov
sub
imul
push
and
or
and
mov
aad
or
mov
xor
imul
sbb
push
js
mov
sub
sub
aas
dec
cmp
js
jbe
dec
lods
jge
mov
mov
les
mov
sub
jmp
dec
cmp
lcall
ret
outsb
rol
mov
jnp
lea
cmp
pop
addb
fstp
inc
jle
xchg
jmp
sub
jle
test
xchg
cmp
scas
lret
dec
jbe
jo
xor
or
jns
cmp
cwtl
ret
xchg
xor
jl
mov
ja
inc
sub
stos
data16
andl
push
test
mov
shlb
ret
jge
and
loope
xchg
stc
xchg
in
insb
mov
mov
or
negb
mov
pop
mov
leave
aas
xchg
ret
cli
lock
mov
loop
xor
pop
or
fdivs
inc
stc
push
pop
jl
fidivl
jno
xor
test
or
movsb
mov
pop
xchg
lds
out
aas
jnp
mov
dec
sbb
mov
fadd
inc
scas
sub
cmp
ret
aaa
adc
movsl
ljmp
dec
inc
inc
mov
in
leave
cmpl
lret
cmp
cld
fdivrl
push
cmp
mov
push
je
test
push
pop
mov
inc
push
adc
push
cmpsb
adc
or
mov
stos
jne
mov
pop
dec
in
sbb
sti
push
mov
stos
cs
push
xor
sub
xchg
jge
dec
or
dec
cmp
aas
inc
mov
pusha
adc
movsl
cmpsb
and
mov
jo
stos
dec
sbb
stc
or
mov
push
ds
dec
sub
imul
repz
jmp
mov
add
push
inc
and
pop
mov
mov
xor
jo
push
imul
clc
pushf
movsl
jge
lret
pop
jmp
add
xorb
clc
cli
insl
pop
insb
popa
dec
or
dec
jg
sbb
lds
and
ljmp
xor
dec
sub
rcpps
js
mov
push
cmp
and
popf
popa
mov
ret
daa
jno
fiaddl
lahf
lods
roll
jbe
nop
popa
fimuls
sbb
pop
rolb
bound
pop
cwtl
and
push
xorb
in
std
idivl
out
lahf
int
lea
push
mov
inc
and
aad
das
lea
inc
push
scas
pop
clc
mov
insb
js
jb
or
xchg
inc
mov
idivl
cmp
lds
or
add
popf
enter
or
push
cmp
jnp
xor
dec
mov
jg
xchg
push
push
mov
mov
cltd
xor
and
fwait
pop
rcll
hlt
imul
out
repnz
leave
xchg
sbb
jg
fisubl
rcr
jns,pt
fistpll
xchg
nop
insl
repz
loope
pop
push
dec
pop
and
sbb
mov
stos
mov
int3
fwait
mov
cmp
adc
enter
js
push
pop
ds
sbb
scas
loopne
repnz
jp
shl
loopne
push
dec
shrb
push
mov
outsl
or
jnp
sbb
inc
xchg
sbbl
jno
out
test
cwtl
or
cmp
lahf
pop
xchg
leave
or
xor
pop
sbb
sub
pop
aad
adc
dec
sub
ret
cwtl
adc
inc
insb
sbbb
mov
orl
jge
add
cwtl
pushf
jmp
cltd
dec
aas
sbb
adc
inc
jno,pt
loope
inc
pop
xchg
fs
fs
cmp
imul
scas
into
jnp
dec
adc
mov
or
mov
mov
mov
inc
pusha
adc
xchg
inc
cs
lahf
push
hlt
lcall
les
sahf
adc
inc
jmp
mov
cmpsl
pop
out
fisubrs
jle
mov
push
xor
clc
test
pop
mov
rcrb
frstor
push
mov
mov
xchg
jecxz
test
jg
push
in
pop
adc
jne
out
pop
adc
mov
hlt
rol
and
pop
mov
xor
jns
fsubrs
fidivrl
jae
dec
sti
insb
inc
insl
in
insb
shl
add
push
pop
mov
inc
rorl
ljmp
sarb
adc
cld
lahf
repz
mov
hlt
mov
test
cmp
xchg
pushf
rorb
cmpb
ret
in
add
rclb
xorl
aam
cwtl
clc
inc
loope
out
jb
cmpsb
xchg
jne
scas
xor
xchg
andl
mov
sub
mov
jle
les
mov
sub
int3
mov
int
mov
test
mov
dec
js
loope
dec
rcll
adc
mov
push
push
popa
adc
fisubrl
mov
dec
push
sbb
xchg
roll
bnd
mov
ss
in
mov
pop
mov
mov
sub
test
add
rclb
mov
fs
mov
jb
in
bound
mov
lret
inc
ds
lcall
xchg
int3
dec
cwtl
xor
xor
es
loope
ja
pop
adc
pop
cld
jo
in
jbe
and
mov
xchg
jg
scas
orb
out
repz
scas
inc
adc
scas
fmuls
testb
jo
outsl
scas
jns
adc
hlt
push
fcompl
adc
into
int
xor
or
pusha
lods
add
fsub
sbb
out
xor
push
jb
inc
pop
dec
mov
inc
int3
xchg
pop
out
daa
push
push
mov
push
cmc
outsl
jl
mov
ret
jne
mov
sbb
sbb
xlat
sti
mov
ljmp
iret
sub
addr16
pop
dec
shrb
or
rclb
pop
mov
mov
arpl
push
stc
add
push
pop
jb
jl
push
rcl
cmp
cltd
push
xchg
push
pop
shlb
dec
jno
pusha
mov
jbe
lock
mov
popf
cli
shll
ret
adc
mov
jmp
cli
sbb
les
jge
mov
jnp
lret
bound
test
hlt
xchg
dec
dec
arpl
mov
es
xchg
loopne
xorl
cmc
ss
push
cmp
mov
imul
es
in
and
cmp
sahf
std
std
xchg
jecxz
fwait
xchg
cltd
dec
fiaddl
lret
test
shrl
call
movsl
popf
push
mov
scas
cmp
fcoms
sub
je
bound
jmp
frstor
lea
fwait
jmp
xchg
ss
cwtl
mov
pop
cltd
mov
in
rorb
dec
dec
lea
outsb
hlt
aaa
or
lods
mov
pop
jecxz
jno
jo
jns
jbe
jae
out
fcoms
pop
pop
cmp
fistpl
mov
imul
sub
pop
popa
push
adc
in
push
mov
rcl
inc
movsl
out
fsts
sub
mov
sbb
out
or
ja
dec
shrl
dec
ljmp
sub
repnz
or
jl
sahf
mov
inc
sub
xchg
lret
aaa
dec
movsb
subb
stos
jb
movsl
in
dec
cwtl
or
cmc
and
xchg
sbb
adc
sub
hlt
add
inc
mov
dec
clc
scas
inc
cmpsl
xor
xchg
xchg
cwtl
lock
cld
inc
rcrb
fs
pop
mov
xor
lret
xchg
dec
stos
lds
push
dec
xchg
cmp
stos
lahf
dec
add
sub
lods
inc
push
popa
imul
sbb
arpl
inc
cmp
sub
andl
lods
xchg
aas
loopne
jg
das
fscale
cmp
jecxz
dec
ja
lds
std
loopne
sbb
ja
andb
leave
add
xor
push
push
ret
pop
mov
mov
push
arpl
cmp
lret
jge
lret
out
push
sarb
sbb
and
outsl
xchg
mov
pop
nopl
pushf
imul
movsl
pop
sub
inc
cmc
insl
pop
or
repz
jmp
ret
pop
ja
add
pop
sbb
imul
cmp
repnz
rorl
out
mov
mov
rcrb
jecxz
mov
rcrb
scas
push
xor
mov
adc
add
loop
xor
test
xor
icebp
lahf
es
dec
adcb
out
callw
cld
xor
xchg
pop
movsb
aam
and
in
xor
loopne
pop
into
ljmp
mov
mov
repz
xor
pop
shl
movsl
xor
arpl
bound
mov
push
mov
ficoml
test
rorl
test
call
mov
aam
and
mov
out
pop
mov
or
inc
push
xlat
aam
inc
push
gs
mov
inc
pop
push
or
cmpsb
out
inc
push
fists
add
pop
hlt
fldt
stc
mov
popf
or
mov
dec
jb
xor
dec
push
mov
inc
push
insb
enter
push
pushf
popf
ret
fstpl
loop
movb
lods
scas
leave
add
push
daa
dec
les
sbb
push
xchg
mov
or
cmp
movsl
cmp
jle
loop
or
jecxz
test
ds
outsb
mov
xor
cli
adc
add
fadds
test
cmpsb
xor
outsl
mov
lock
cld
jae
jo
stc
add
sarb
mov
out
jbe
pop
incl
cmp
or
sbb
cltd
pop
jns
lods
es
mov
jle
pop
inc
jo
jmp
sbb
cmpsb
cmc
std
mov
jo
push
movsb
jns
test
add
push
mov
cmp
inc
nop
mov
pop
fdivl
push
dec
xor
arpl
inc
push
add
pop
ds
jl
jb
hlt
js
xchg
inc
leave
lret
jns
jecxz
inc
rorl
lds
cld
dec
les
inc
sbb
or
hlt
fisttps
jecxz
das
cmpsl
xorb
imul
dec
setg
sbb
in
adc
push
dec
inc
stos
push
mov
loope
out
mov
and
pop
jmp
sbb
sarl
or
push
addr16
popa
jo
mov
mov
and
enter
adc
sub
mov
imul
call
sarb
sarl
xor
adc
ja
sti
sbb
rclb
cmp
in
std
fcomps
pop
and
sbb
stos
add
push
shrl
inc
dec
cmp
fs
ret
je
lahf
cwtl
ret
mov
outsl
scas
xchg
in
xchg
psubw
cmp
xchg
inc
inc
push
loop
jo
clc
scas
push
cltd
inc
ror
add
loope
jno
mov
adc
mov
and
nop
xchg
mov
mov
int
lea
fs
ret
rolb
pop
adcb
add
adc
mov
leave
jg
ja
inc
jmp
inc
dec
xchg
and
dec
mov
clc
in
xlat
mov
pop
dec
popf
data16
addr16
xlat
out
and
or
mov
fidivl
mov
fstl
or
and
xor
mov
push
outsb
fsts
mov
rclb
inc
in
xor
xchg
push
or
mov
cld
sub
add
jg
mov
add
pop
popf
pop
cld
and
repz
lods
push
push
xor
fmull
inc
sub
mov
xchg
mov
or
sub
cmp
or
test
xor
lock
push
push
jle
push
scas
data16
sbb
and
mov
leave
in
gs
fstl
fsubrs
outsb
out
cld
mov
mov
and
mov
inc
jge
cld
jb
pop
hlt
iret
fdiv
loop
push
cmpb
shrb
lods
sub
leave
mov
or
fadds
pop
mov
in
fistps
outsb
xchg
xchg
daa
mov
and
int
mov
mov
dec
sbb
mov
mov
sarl
dec
adc
sub
mov
xchg
and
inc
fxch
insl
rcrl
cmp
adc
sbb
int
jns
loopne
xor
mov
sbb
sub
mov
pop
in
mov
lds
cmp
pop
and
ret
setg
xchg
data16
jmp
std
cwtl
sub
andb
mov
sub
pop
xor
and
cmp
dec
subl
aam
push
ret
inc
sub
mov
or
fisubs
sbb
jae
cmp
dec
repz
cwtl
repnz
lock
push
mov
inc
fs
int
ficoml
jecxz
xchg
pop
or
gs
enter
xor
icebp
fists
imul
and
push
mov
adc
inc
dec
push
iret
lcall
sub
mov
sbb
cmpl
dec
cmpsb
cmp
xor
daa
adc
mov
lcall
xchg
and
adc
cmp
sar
movsb
fistpl
mov
lea
adc
mov
dec
js
in
pop
xchg
imul
pop
imul
pop
sub
mov
fiadds
mov
dec
mov
repnz
jae
add
pusha
jne
pushf
sbb
and
imul
in
and
xor
addb
xchg
fcoms
mov
das
int
mov
pusha
sahf
scas
sbb
cmp
fcoml
sbb
insl
pop
imul
xor
ss
or
jb
lods
mov
dec
mov
mov
push
or
int3
jnp
adc
stos
ja
mov
mov
cli
fbld
xchg
mov
jge
out
or
ss
dec
push
lret
pop
and
lret
sub
mov
xor
mov
mov
xor
adc
mov
rorb
jne
sbb
mov
testb
xchg
daa
roll
lods
lds
popa
mov
sbb
popf
add
mov
sar
xchg
outsb
pop
and
les
repz
xchg
cltd
hlt
jae
lds
aad
inc
jp
popa
mov
pop
cmpsb
gs
lods
sub
mov
jecxz
mov
mov
mov
mov
fstl
push
scas
pusha
mov
test
add
fwait
pusha
rcr
cltd
lcall
lds
std
out
jp
inc
lods
jne
outsl
mov
ljmp
mov
dec
imul
and
dec
stos
cmpl
lock
sbb
xor
imul
leave
addl
mov
mov
xchg
movsb
jp
xchg
cmp
fnsave
adc
lret
lret
and
call
and
dec
push
idivb
jmp
cmp
ret
divl
xchg
decl
xlat
add
inc
xchg
push
xor
lock
in
jmp
xchg
xchg
push
mov
cltd
pop
add
jl
fcmovnu
pop
cli
xchg
mov
add
jo
testl
jne
jecxz
imul
sub
pop
push
sti
dec
sbb
mov
ja
xchg
jnp
push
fcomps
lods
adc
jnp
test
push
inc
xor
shl
ret
insb
testl
loope
add
in
adc
lea
inc
dec
push
inc
mov
and
mov
ljmp
out
arpl
dec
jmp
repz
outsl
mov
pusha
pop
cwtl
icebp
hlt
cli
cmpl
push
mov
or
mov
stc
dec
int
insb
pop
outsl
in
mov
pop
mov
int
mov
mov
ret
insb
mov
filds
orb
cmp
icebp
cs
mov
sbb
in
inc
push
movsl
clc
sbb
mov
push
lods
add
cmp
cs
pop
sahf
pop
cmp
or
rcrl
add
cld
and
cld
cltd
rcrb
outsl
fwait
pop
outsb
cmc
cmp
jb,pn
adc
xchg
pop
sbb
mov
and
push
sbb
mov
leave
test
mov
xchg
add
and
xlat
cld
or
ja
mov
pop
aad
loope
shlb
fcoms
add
xor
nop
dec
cmp
mov
aas
adc
sbb
jns
mov
mov
into
inc
loopne
xor
pusha
mov
mov
les
lcall
cmp
ret
ds
cmp
imul
lods
mov
cmc
iret
in
int3
cltd
mov
jne
jb
add
imulb
outsb
mov
sti
aaa
mov
jne
and
stos
shll
cmp
mov
out
in
mov
jle
cmp
mov
jmp
and
js
and
in
add
outsl
mov
add
cmpsb
mov
cmp
or
adc
mov
pop
pop
dec
lret
mov
cmp
fwait
jns
dec
inc
or
dec
les
test
jae
xchg
mov
aaa
inc
fwait
sub
setle
ds
cmc
lret
scas
add
nop
ds
movsl
imul
mov
push
jae
aas
bound
jp
push
ljmp
mov
xor
notl
xchg
add
rorb
and
mov
push
dec
dec
repz
mov
sahf
xor
sbb
lods
es
mov
or
ret
xchg
je
mov
pop
cmpsb
daa
pop
add
in
mov
lock
in
fdivl
sbb
repnz
loop
stos
mov
cmp
or
xlat
xchg
sub
mov
repz
clc
insb
mov
mov
mov
in
sub
movsb
cli
dec
icebp
jns
lods
ret
pop
dec
scas
ficomps
xchg
repz
lcall
dec
sub
pop
movsl
fs
add
mov
insb
sub
mov
movsl
xor
fs
mov
sahf
fiaddl
jae
cld
adc
and
test
lods
hlt
push
in
ret
mulb
or
dec
dec
dec
inc
ja
test
dec
push
shr
xchg
into
ljmp
popa
sarb
icebp
in
mov
jg
fcoms
cmc
outsl
jecxz
jecxz
cmp
pop
pop
ror
out
out
add
xorl
adc
ficompl
cmc
scas
mov
push
cmp
out
xchg
test
cmpsl
out
leave
pop
adc
test
cbtw
shl
sbb
ljmp
iret
shrl
add
pop
xor
xchg
scas
dec
iret
scas
sbb
xchg
mov
push
outsb
out
jbe
std
push
push
sub
dec
adc
adc
dec
push
leave
imul
cli
popa
or
push
xor
jecxz
mov
mov
cmc
mov
sub
imul
cwtl
mov
fwait
or
dec
outsl
xor
push
rcl
mov
xchg
loopne
inc
in
leave
out
in
adc
out
or
out
jle
adc
js
jbe
les
inc
in
fistpl
in
jb
out
fnstsw
andl
xchg
xor
stos
imul
xchg
xor
or
mov
loope
push
insl
rcll
mov
xor
mov
jle
daa
adc
add
imulb
ds
movsl
cltd
enter
in
shll
pop
bound
ds
in
jne
stos
call
cs
xchg
sub
jg
enter
lcall
dec
addl
mov
and
enter
xchg
sarb
dec
pop
jae
jge
movsb
pushl
lods
push
push
jmp
push
push
adc
xor
xchg
fistpl
cmc
call
testl
lret
dec
inc
stos
dec
ds
outsl
cmpsb
arpl
shl
adc
add
xchg
inc
out
stos
cmp
mov
fbstp
jns
sbb
add
rcrb
lea
jg
mov
sub
fs
test
aam
lds
cmp
or
push
cmp
ja
adc
adc
add
shrl
xlat
xchg
lea
ds
mov
test
cltd
or
jns
les
pop
inc
iret
or
pop
les
aad
add
popa
mov
out
mov
xor
mov
mov
xlat
jg
lds
jb
dec
data16
int3
inc
sbb
inc
repz
call
push
imul
pop
mov
mov
and
push
mov
pusha
add
hlt
mov
mov
add
fsubrl
in
xchg
cmp
xor
fsubs
cmp
mov
push
or
mov
scas
popa
xchg
pusha
lcall
das
mov
jbe
lods
mov
fwait
push
and
lret
push
gs
icebp
or
cmpsb
repz
gs
pop
into
cmp
add
je
cs
roll
push
test
out
sbb
cmp
sbb
add
cmp
fmuls
je
or
or
pop
in
cmp
fwait
mov
jbe
mov
iret
sbb
pop
jb
negb
orb
cmc
cmp
insl
jno
insl
jecxz
fs
sarl
scas
decl
cli
fstl
popf
rolb
cmp
loop
jp
mov
push
jnp
jns
add
ja
or
nop
cmp
add
or
mov
mov
jnp
shll
fstps
idivl
arpl
pop
xchg
cmp
mov
in
stc
push
jp
bound
mov
out
add
sbb
sar
jbe
xchg
movsl
jp
mov
mov
add
daa
out
push
mov
jae
push
ret
adc
stos
shrl
xchg
jno
cmpsl
je
mov
jbe
xchg
xchg
daa
iret
dec
ljmp
push
imul
test
cmpsb
jle
fcmovnbe
push
mov
cmpb
mov
repnz
or
mov
cwtd
adc
stos
pop
stc
sub
fsubl
xlat
lcall
pop
iret
out
dec
popa
imull
cmp
adc
dec
das
iret
jbe
jmp
push
sub
pop
aam
bound
ja
pop
rolb
test
ret
out
pop
dec
and
sub
fiadds
adc
in
lahf
mov
sub
cmp
adc
mov
jae
mov
mov
dec
outsl
arpl
or
jns
mov
inc
aam
cmp
adc
pop
xchg
mov
out
fisubrs
pop
test
xchg
std
dec
in
cmc
dec
mov
mov
shlb
sbb
in
or
push
xchg
cmp
adc
jnp
out
mov
mov
xlat
das
adc
or
add
push
cmc
jp
in
pop
and
out
or
or
mov
lret
xchg
mov
out
stos
notb
movsl
in
in
fimull
data16
adc
pop
dec
enter
loope
adc
cltd
and
rcll
aam
fidivl
inc
test
adc
jno
adc
int
imul
mov
cs
pop
dec
ja
push
mov
outsl
inc
jnp
inc
inc
jp
or
sbb
fimull
jo
pop
ss
dec
sbb
push
je
dec
lea
xchg
in
push
loop
push
ret
adc
mov
jg
or
lock
dec
sub
cmp
mov
jecxz
insb
add
or
mov
or
mov
jb
sub
sub
mov
repnz
add
bound
test
lret
mov
in
mov
dec
dec
repz
lock
pop
xchg
repnz
lret
loope
push
mov
xchg
pop
xor
xchg
or
lcall
lds
jae
mov
les
ljmp
xor
pushf
cmp
fs
movsl
out
lret
jmp
mov
push
jle
movsb
fisubs
lock
mov
cmp
enter
push
cltd
push
pop
movsl
mov
out
out
leave
or
inc
fs
ds
out
std
lods
xchg
out
add
inc
movsb
aas
out
scas
push
loopne
jle
arpl
mov
cli
and
or
add
sbb
or
sti
cs
fidivrl
in
fwait
inc
shll
loope
adc
cltd
jmp
jo
push
sbb
xchg
jns
and
pushf
cmpsl
lods
das
fwait
cmp
cwtl
fwait
push
xchg
stos
mov
push
add
mov
test
mov
xchg
enter
inc
pop
inc
stos
pop
pop
ljmp
mov
sbb
iret
gs
imul
daa
sbb
xchg
addr16
cmpsl
test
xchg
aam
mov
fisubs
gs
inc
adc
dec
out
push
int3
mov
je
lahf
mov
addb
mov
cmp
inc
add
icebp
aaa
data16
jmp
sbb
xchg
sbb
push
mov
and
push
or
in
inc
jo
imul
or
leave
push
faddl
aas
sahf
xor
add
push
mov
or
xchg
jb
data16
andl
test
xlat
inc
ljmp
mov
imul
aaa
push
lods
or
lcall
pop
loop
push
adc
sbb
jg
fcompl
jg,pn
mov
jmp
xchg
xlat
push
push
mov
jecxz
dec
pop
cs
enter
add
scas
xor
scas
pop
ds
xorl
cmp
pop
nop
xor
lcall
push
adc
and
jbe
cmpsl
outsb
push
in
add
add
or
push
jo
push
xor
fs
mov
fs
dec
jp
lds
sbb
iret
jo
push
mov
sahf
jge
nop
std
fstpt
das
js
popf
mov
push
rolb
inc
lahf
fistpll
movsb
lods
lods
mov
gs
popa
push
lahf
push
aas
xchg
mov
loopne
pop
xchg
cmp
fsubp
andl
xchg
lcall
hlt
sti
mov
sbb
fldt
ret
outsb
xchg
mov
mov
fsubs
dec
scas
dec
mov
movsl
xlat
cwtl
cld
iret
jg
cmp
or
int3
mov
les
rdmsr
add
es
ficoml
xor
lods
mov
sti
insb
divl
push
int3
lds
xor
xchg
push
xorl
stos
pop
icebp
in
adc
dec
in
add
mov
xorb
cmp
inc
adc
sbb
cmp
xor
pop
add
aaa
mov
out
xchg
fildll
or
mov
mov
pop
fcompl
mov
sub
icebp
fwait
mov
mov
mov
out
mov
dec
jle
repz
pusha
mov
pop
add
loope
out
xor
dec
cmp
aad
mov
sbb
or
jae
xchg
pop
xor
ljmp
test
jmp
xchg
repnz
push
mov
or
xchg
and
cmpsb
inc
xor
nop
lock
nop
dec
movsb
xchg
push
cmpsl
adc
test
iret
mov
push
jns
xor
bound
andl
hlt
pop
lods
pop
cli
into
sbb
fsubr
je
call
movsl
sahf
insl
pop
test
push
scas
xor
mov
lret
cmp
out
xchg
jne
xor
rcl
inc
sbb
mov
lock
out
pusha
cmp
nop
and
and
jmp
fwait
call
pushf
ret
push
push
ret
jp
incl
stos
and
inc
sub
add
ficomps
movsl
jnp
pop
pushf
sbb
jl
lcall
stos
mov
and
mov
xor
jne
cmpb
insb
sub
lods
jecxz
sbb
rol
inc
enter
jg
cmpsl
push
mov
jle
or
mov
sbb
and
call
dec
add
sub
aaa
mov
xchg
push
movhps
in
je
leave
lods
cmp
xlat
loopne
in
repz
pusha
adc
loope
pop
and
stos
pop
xchg
cltd
xchg
mov
in
pop
add
and
movsb
bound
dec
ljmp
fisttpl
les
xchg
sti
dec
stos
or
add
js
push
inc
cmp
or
fistl
add
sbb
jae
mov
cli
push
ror
ss
in
gs
mov
cmp
sti
lcall
in
movsl
int
xchg
das
lret
mov
push
int3
fisubrs
xchg
or
mov
lods
cmp
std
jno
inc
mov
mov
enter
cmpsl
cmp
cmp
cmp
add
sbb
mov
lea
jno
out
xlat
ljmp
mov
ret
cmp
jb
jmp
xor
and
testl
mov
jns
or
xchg
mov
out
sub
lea
dec
les
or
test
gs
push
shrl
stos
enter
add
xchg
into
mov
test
fmull
or
mov
cmp
inc
stc
stos
mov
jge
scas
outsl
enter
roll
dec
stos
loop
jecxz
clc
push
in
pop
pushl
call
cli
cmp
push
jbe
ret
mov
cmpsl
imul
and
xor
and
push
adc
lahf
xor
xchg
or
and
cmp
cmpsb
popa
xorb
ljmp
scas
mull
lds
jp
pop
add
xor
test
push
std
inc
xor
mov
dec
insl
mov
movsl
and
lcall
popf
pop
imul
dec
inc
cmpsb
cwtl
or
xor
xchg
mov
mov
mov
pop
or
int3
sub
mov
add
std
xorl
imul
ret
jg
movb
loope
jl
jo
rcll
jmp
sub
cli
mov
push
pusha
imulb
imull
add
stos
cmp
pop
and
stc
or
enter
push
inc
nop
std
mov
or
data16
fbld
shlb
xor
and
loope
fcomp
push
jge
pushf
and
mov
leave
xchg
aas
int
xchg
sahf
gs
sub
jp
xor
test
scas
jg
shlb
sbb
jbe
jns
sbb
stos
jno
pop
stc
fcmovnbe
dec
cmp
dec
roll
xchg
cmp
imul
movsb
sub
fwait
shl
into
jle
mov
lret
cs
iret
mov
sub
ja
xchg
insl
sahf
jo
pusha
sub
jecxz
fisubl
pop
push
ja
add
mov
cmp
push
sbb
mov
pop
aas
xchg
xor
mov
mov
push
xabort
push
push
push
and
sbb
mov
inc
jns
mov
jns
and
push
imul
cmpsb
leave
sub
aas
sbb
mov
add
and
and
out
add
scas
mull
bound
cmpsb
imul
lds
fnstenv
sub
xor
jl
add
aas
xchg
ja
inc
push
or
scas
mov
iret
push
xchg
add
popl
xchg
sbb
aaa
push
mov
mov
jge
add
in
fucomi
mov
iret
cmp
clc
lahf
pop
pop
add
and
jb
xchg
jge
inc
or
jbe
xor
jnp
cmp
shlb
pop
fs
in
xor
nop
pop
mov
xchg
lea
mov
scas
imul
cld
add
popa
jge
mov
mov
pop
mov
sub
cmc
mov
adc
aad
push
into
in
test
loop
addr16
adcl
out
pushf
push
jo
sti
xchg
fs
inc
ja
sbb
xor
jo
sbb
push
dec
xor
pop
jecxz
lahf
add
lock
sub
cmp
xor
adc
stos
aaa
bnd
call
fmulp
pop
shll
aaa
imul
dec
mov
in
inc
loop
pusha
lar
xor
in
jo
jae
lods
jg
sbb
shl
int
sub
nop
icebp
cmp
jle
data16
out
add
mov
mov
add
iret
orb
leave
bound
or
add
or
mov
mov
int
jno
mov
mov
pushf
xor
and
xchg
xchg
les
shlb
sbbl
lret
and
out
push
dec
fisubs
dec
dec
push
lods
out
jl
outsl
pop
icebp
mov
stos
jge
lea
scas
jns
loope
dec
pop
adc
mov
fstpl
or
cld
jae
nop
mov
hlt
sbb
lahf
push
mov
fs
mov
clc
ja
pop
cmp
dec
xchg
xor
xchg
jge
cs
das
adc
call
pop
test
fcmovu
adc
mov
push
pop
jo
sbb
ficoml
out
ficoms
fistps
sub
imul
pop
enter
jp
pop
ljmp
push
mov
pop
cmpsb
popf
fwait
cwtl
jno
and
sub
in
enter
xor
or
hlt
loope
addr16
shl
pop
cld
clc
in
jbe
test
dec
cmpsl
andb
movsl
cmp
cs
mov
loop
fcmovnu
push
decl
fwait
inc
mov
pop
mov
or
rcrl
data16
xchg
mov
xchg
cs
jle
iret
xchg
fwait
repnz
lea
mov
mov
pop
xchg
ficoml
loopne
pop
inc
sub
sub
push
and
pop
pop
call
cmp
nop
in
cmpsb
movsb
cltd
sbb
out
mov
pop
out
fbld
dec
xchg
push
lods
out
lods
cs
pop
mov
lret
push
mov
outsl
js
jnp
and
fildll
cmp
fwait
imul
fbstp
repz
out
test
dec
jp
sbb
cwtl
jne
jno
and
mov
pop
and
mov
popa
xchg
xor
outsl
jbe
cmpsb
and
add
pop
jg
outsb
adc
sub
mov
cmp
xchg
adc
pop
test
cmp
fimull
movsl
mov
test
jb
xor
test
nop
mov
push
jle
pop
xor
scas
orl
aad
cmp
xor
out
leave
fstl
push
push
inc
push
dec
pop
shll
add
pop
xchg
dec
jecxz
stos
jl
or
outsb
incb
lahf
and
cli
sub
scas
das
in
jne
xchg
and
push
hlt
inc
adc
sbb
lods
xor
fs
out
rorb
test
stc
pop
inc
sbb
out
into
adc
repnz
xchg
sub
aam
mov
push
pop
adc
jp
arpl
jmp
aas
cli
jl
stc
into
cmpsl
repz
xchg
dec
cmpsb
jb
das
out
jo
sub
test
xchg
test
pop
cmp
sub
in
ss
in
add
test
hlt
std
push
mov
aaa
pop
int3
inc
jo
sub
dec
dec
roll
mov
and
ds
divb
and
mov
inc
sbb
out
test
mov
adc
inc
mov
popa
sub
mov
scas
pop
mov
xor
mov
adc
xor
bnd
outsb
icebp
std
xchg
mov
push
pop
sahf
out
jmp
push
mov
stos
fs
dec
fstl
lret
dec
fildl
mov
pusha
scas
dec
mov
xchg
cmp
hlt
movsb
lds
repz
jo
pop
fistps
mov
xchg
iret
test
xchg
cld
popf
loopne
add
mov
push
paddw
mov
mov
mov
insb
add
inc
pop
jnp
dec
mov
and
jne
add
test
in
and
or
pop
mov
pusha
ja
xchg
in
addb
imul
mov
mov
rcrl
shl
fdivrp
lods
xor
iret
ja
lahf
lret
shrl
aam
hlt
xchg
mov
jg
popf
clc
daa
adc
jno
lea
daa
sar
xor
jbe
inc
push
inc
pop
dec
fs
cmp
jle
daa
xchg
aaa
push
mov
mov
in
mov
sbb
in
clc
cmp
mov
stc
ljmp
dec
fistps
outsb
mov
mov
inc
adc
mov
insb
jge
bound
leave
xchg
insb
shlb
xchg
test
ds
imul
fsubrs
jecxz
mov
mov
mov
fisttpl
lods
add
ljmp
xchg
jb
aad
je
mov
leave
outsb
adc
out
in
mov
fstl
jge
aad
cmp
xor
jno
sub
jnp
lea
call
mov
mov
nop
jge
fidivrs
pop
pop
test
dec
jmp
push
movsl
pop
es
mov
inc
insb
clc
push
and
xchg
adc
add
enter
imul
jg
in
fistpll
into
scas
clc
xor
test
mov
cmp
sbb
stc
dec
cmp
loop
lods
xchg
mov
aad
add
aaa
repnz
faddl
inc
mov
sbb
imul
hlt
mov
test
push
fldt
ret
adc
pop
push
in
adc
daa
or
aas
movsl
ja
xor
fsubl
dec
mov
cmp
inc
cmpsl
xchg
push
je
cltd
inc
repz
fldl
adc
sub
out
out
mov
mov
mov
cmpsb
push
sar
mov
fcomp
pop
stos
pop
jo
outsl
and
mov
xor
push
out
sbb
and
jecxz
imul
mov
sub
lahf
or
outsl
fwait
push
jle
sbb
xchg
add
push
outsb
arpl
push
or
pop
enter
and
imul
jg
lods
xchg
cmpsl
sbb
jg
stc
dec
movsb
scas
jnp
or
pop
dec
add
fstpt
leave
or
mov
mov
add
inc
enter
xor
or
inc
cmpsb
pop
fs
pop
test
or
cltd
and
mov
int3
cmpsl
shrb
cmp
push
adc
xchg
add
add
pushl
xor
daa
push
jg,pt
and
cld
mov
lcall
push
negb
jne
inc
or
lods
sbb
sub
jmp
xor
imulb
or
mov
mov
aas
std
add
jns
adc
pusha
dec
jno
xlat
cmp
je
sahf
adc
sub
mov
dec
cmp
mov
test
cmp
ds
jae
fadds
push
imul
mov
mov
je
xchg
fmulp
ss
xchg
fwait
pop
out
nop
inc
push
mov
dec
cmp
inc
test
scas
clc
imul
cmp
lcall
repnz
cs
dec
adc
xchg
popf
nop
add
cmp
cmp
cld
or
call
adcl
add
pop
or
sub
divb
int
and
pop
pop
inc
mov
pushl
loopne
int3
xchg
in
add
push
mov
and
jo
sub
xor
int
mov
cmpsb
out
ss
rorb
push
lcall
lods
mov
jo
push
lret
cld
scas
stos
fucomi
jecxz
ficomps
sbb
and
iret
pusha
sarb
adc
mov
inc
jne
mov
outsb
and
pop
add
outsl
jmp
sub
mov
mov
xchg
pop
xor
mov
sbb
popa
movl
shrl
and
decb
fistl
xlat
rcll
outsl
loopne
jne
jns
dec
popf
mov
out
ljmp
or
movsl
popl
mov
push
shrl
fisubrl
mov
inc
dec
test
dec
ret
xor
cmpsb
mov
dec
dec
push
inc
push
sbb
in
mov
sbb
andl
mov
popa
les
stos
jecxz
mov
sbb
mov
jb
fld1
xor
inc
lahf
push
test
aaa
std
xchg
push
add
or
adcb
inc
and
clc
cld
iret
mov
mov
cmpsb
cmp
cld
xlat
xchg
jmp
add
adc
jp
and
mov
out
cmpsb
leave
pop
fcmovnu
stos
pushf
gs
and
push
jl
sub
sbb
clc
es
xchg
in
mov
adc
mov
add
xchg
shrb
out
cmpsb
call
xchg
into
sub
cmc
rol
movsb
push
dec
mov
cmp
out
xchg
pop
cli
das
dec
js
nop
sub
call
lcall
sub
sbb
push
sub
push
jbe
add
inc
scas
xchg
or
jo
sub
aam
jne
cmc
inc
or
loop
pop
mov
sbb
mov
dec
daa
mov
xchg
cmp
add
imul
jne
inc
stc
aam
insl
jo
inc
dec
test
int
xor
sahf
and
data16
mov
mov
aaa
mov
and
adc
dec
xor
fimuls
int3
push
mov
push
jb
pop
add
and
dec
mov
inc
rcll
cmp
jmp
push
xchg
das
push
mov
in
lret
xchg
cmp
pushf
dec
dec
mov
nop
jge
nop
mov
vpcmpgtd
addl
ret
and
jg
test
xor
cld
arpl
add
js
jmp
testb
pop
cmp
add
ljmp
add
mov
stos
sbb
shll
jl
sbb
loopne
jecxz
sti
xlat
movsb
xchg
push
fmuls
test
insb
push
xor
or
rorl
or
popf
mov
mov
mov
outsl
inc
jns
add
mulb
aas
mov
push
mov
mov
pop
mov
imul
notb
lret
mov
dec
add
xor
adc
das
imul
mov
push
xchg
sbb
jo
test
xchg
aas
cs
es
insb
mov
add
shr
push
xor
int3
lahf
mov
mov
sub
push
out
xor
lds
lahf
mov
in
jmp
xchg
sub
pop
roll
insl
mov
sbb
lds
testl
push
fdivrl
fldenv
dec
push
lock
mov
pop
adc
test
jo
push
sbb
mov
in
mov
jae
sbb
inc
scas
aaa
ja
lcall
mov
inc
push
fiaddl
insl
push
jmp
cmp
lds
push
mov
mov
or
repz
cmp
jo
ljmp
outsb
mov
inc
inc
fldl
jb
ret
imul
jns
stc
push
sbbl
push
inc
and
push
mov
pop
pop
push
pop
movsl
jmp
dec
or
push
xor
xchg
mov
xor
mov
sub
xchg
aas
popf
pop
push
push
adc
push
mov
pop
sti
bnd
pop
mov
clc
es
movhps
add
jecxz
add
pushf
clc
fsubrs
xor
sbb
sub
and
pop
into
sub
inc
and
xor
or
scas
lods
out
pop
dec
fistl
xchg
cwtl
mov
sub
movsl
jmp
push
fs
cld
dec
hlt
out
sbb
xor
leave
pop
xchg
or
cmpsb
sub
fbld
popa
js
pop
imul
lahf
inc
mov
mov
lods
enter
xor
es
add
sub
mov
jecxz
out
mov
iret
sub
push
add
jl
jg
jmp
popa
ss
mov
inc
shlb
pusha
loopne
mov
lcall
aad
call
inc
in
aaa
cmpsl
nop
iret
into
xor
into
outsb
shrb
xchg
mov
pop
cwtl
divb
xchg
dec
pop
jecxz
jb
aas
js
or
icebp
movsb
bound
pop
mov
ss
fisttps
addb
lds
xor
cmpsb
out
sbb
dec
add
xchg
iret
pushl
and
xor
les
pop
insl
jb
mov
popa
push
sbb
pop
jg
xchg
or
mov
lcall
jl
add
cmp
loop
stos
bnd
push
shl
mov
cmp
cs
mov
cmp
sbb
pop
bound
mov
pop
mov
andb
mov
dec
addr16
or
or
add
sub
pop
or
sub
insl
test
inc
popa
movl
pop
out
xor
fisubl
iret
dec
xchg
out
pushf
sub
mov
mov
outsl
je
mov
lock
movsb
mov
and
mov
shll
xlat
popa
rclb
fs
jnp
pop
fistps
es
out
mov
sbb
dec
les
jge
cmp
int
xor
sbbb
rcll
xchg
loopne
rcr
popa
sti
push
or
xchg
inc
lea
push
jne
jne
popf
xchg
stc
in
jb
pop
push
xchg
mov
fcmovu
mov
adc
jp
mov
sbb
loope
arpl
mov
or
int3
lods
mov
inc
xchg
mov
sbb
adc
lret
mov
aad
push
daa
pusha
test
stc
xor
sti
xor
ljmp
pop
rclb
dec
sub
lods
or
mov
addr16
lds
f2xm1
icebp
pop
push
stos
pop
cmc
stos
stos
cmp
push
sbb
and
xor
imul
jbe
imul
ss
add
push
jmp
pop
and
jbe
es
xchg
fsubrs
or
scas
ljmp
jno
lcall
in
inc
or
hlt
stos
test
pushf
test
iret
pop
movsb
ljmp
dec
movsb
addr16
jp
or
mov
fwait
inc
pop
daa
xchg
rorl
pop
and
xchg
into
std
das
sbb
addr16
or
loop
sub
fisubrs
xor
jmp
stc
mov
sbb
pop
mov
pushf
pop
xlat
inc
xor
add
enter
or
and
jbe
mov
xor
inc
mov
in
inc
add
jle
mov
insl
mov
mov
cmp
mov
cs
jl
xchg
pusha
ficompl
add
and
daa
xchg
cs
adc
push
in
dec
push
test
mov
movsl
popa
aaa
and
cs
sub
push
arpl
mov
aaa
out
sbb
pop
lret
or
and
mov
cs
sub
sarb
in
xchg
pop
lcall
and
daa
sbb
mov
cmc
push
and
dec
jecxz
fisubs
jns
jb
lods
inc
or
adc
jne
sbb
sub
sub
shl
cmpsl
adcb
xchg
inc
xchg
shll
loope
add
xchg
add
cmp
xor
cltd
adc
xor
outsb
sbb
pop
loop
dec
lahf
pop
test
push
arpl
ljmp
push
jp
std
cld
push
test
xor
mov
lcall
inc
js
icebp
aaa
add
shl
aas
sub
shll
jno
push
jmp
cmpsl
adc
add
test
cwtl
mov
mov
xchg
rolb
enter
jmp
addl
mov
xorl
stc
add
call
push
lock
push
outsb
jge
fldcw
add
adc
xchg
test
lds
mov
ss
pop
test
andnps
nop
jae
fs
inc
mov
inc
dec
insb
add
test
mov
mov
les
dec
xor
xchg
mov
cs
outsl
sbb
stc
shll
hlt
pop
enter
push
push
adc
jg
xor
mov
or
xchg
mov
insb
sub
dec
lret
sub
out
pusha
inc
pop
cs
mov
in
sbb
mov
inc
rcrb
into
in
add
mov
inc
and
or
xor
or
lcall
jae
int
fbld
gs
std
jbe
xlat
pusha
adcl
out
push
xchg
adc
mov
addr16
das
or
xor
lahf
cmp
push
dec
rolb
inc
ss
inc
out
cmp
mov
inc
cmp
add
push
jno
sub
inc
scas
or
popa
in
fmul
movsl
push
ret
dec
lock
add
mov
or
adc
inc
leave
mov
adc
jge
mov
add
mov
je
scas
mov
push
adc
aaa
jnp
ja
call
inc
hlt
dec
add
jnp
bound
mov
lock
pop
stos
stos
push
cltd
mov
mov
and
or
sbb
mov
mov
xlat
xchg
into
mov
jo
fildl
je
push
in
mov
cld
movsl
fstps
in
test
sub
adc
nop
data16
push
nop
test
in
mov
out
push
stc
dec
ss
adc
cli
ss
sub
sub
and
push
inc
sahf
cmp
adc
popf
mov
loopne
inc
push
sbb
imul
mov
fmuls
in
lahf
cmp
sahf
or
jbe
lods
ja
and
imul
pushf
inc
cmp
adc
jg
sbb
mov
mov
sub
mov
adc
nop
xor
roll
sub
mov
iret
in
nop
pop
pushfw
dec
mov
add
push
add
scas
lea
pusha
jnp
popa
or
add
sbb
mov
or
mov
movsb
scas
imul
ret
adc
xor
popa
sub
test
es
sub
pop
sahf
mov
test
shl
pop
shll
xchg
leave
sbb
mov
aaa
push
mov
inc
aaa
push
sbbb
or
jmp
daa
mov
dec
rorb
cmp
test
popa
aam
lcall
loope
cmp
xchg
pop
push
mov
fdivrl
mov
mov
inc
fistpll
xor
ljmp
pop
leave
testb
jge
inc
cmc
sahf
and
testl
jl
ss
inc
lahf
call
aas
dec
loopne
xchg
or
adc
mov
add
test
int
into
pop
jb
or
cmp
jno
push
stc
aad
dec
ja
in
repnz
loop
push
jne
mov
add
jge
mov
hlt
push
mov
ja
pop
outsb
call
dec
stc
jle
lret
call
xchg
out
mov
and
xchg
in
mov
xor
out
fnstcw
adc
imul
lcall
out
outsl
cli
cs
sub
mov
cmp
pop
insl
popl
fwait
mov
or
lock
data16
bnd
test
jb
cmpsl
add
insl
fcoml
inc
add
in
ds
fisubl
sbb
or
xchg
int
pop
xchg
into
outsb
cmp
push
imul
test
sbb
clc
mov
add
addr16
cwtl
xchg
int
out
in
push
mov
loopne
leave
call
jp
aas
lcall
fstpt
lods
mov
push
addr16
dec
cmp
fs
lret
adc
pop
jl
stos
and
lret
ljmp
mov
ficompl
jecxz
pop
mov
push
incb
add
test
adc
xor
std
or
or
popa
mov
in
and
jb
dec
in
mov
cmp
fwait
imul
stc
and
sarl
and
cmp
scas
and
loop
sub
pop
in
lds
leave
jge
add
mov
mov
inc
cmp
in
scas
or
imul
cwtl
incl
push
push
dec
jg
test
repnz
test
cmp
data16
aam
and
enter
xor
iret
movsb
iret
mov
into
cmp
cwtl
jge
xchg
pusha
sarb
out
cmp
add
pusha
mov
sbb
das
add
cmp
fistpll
xchg
cmp
rclb
lret
or
int
and
sub
jno
sbb
rcrb
pusha
xchg
xor
shlb
clc
out
push
jle
gs
test
xor
cmp
nop
lea
es
test
add
jmp
cmp
add
xchg
pop
push
cwtl
sbb
jp
popa
cmp
pop
and
add
call
dec
fwait
push
jmp
mov
movsl
adc
std
jecxz
xchg
jmp
iret
sbb
xchg
lea
pop
scas
in
mov
int
or
xchg
push
dec
dec
sub
lahf
sti
push
mov
movzbl
lret
icebp
jmp
adc
push
or
jg
es
gs
popl
and
popf
push
sbb
mov
cmp
mov
cmp
nop
scas
dec
adc
aas
in
repnz
aas
in
adc
or
fadd
lods
add
add
bound
fcoms
inc
jnp
adc
aaa
jge
lcall
shlb
daa
in
mov
jae
mov
loopne
dec
fstps
aas
testb
repz
dec
repnz
fisubs
jb
pop
movsb
in
mov
sbb
jo
sahf
sub
lock
push
mov
cli
js
in
xor
mov
fsubrp
loope
sub
pushf
cmpsb
xor
loope
sub
dec
sub
add
add
pop
lret
mov
mov
and
orl
stos
xchg
scas
ja
in
lods
movsl
mov
sbb
fwait
aam
inc
je
fidivrs
shl
aaa
add
pop
enter
pop
mov
mov
mov
mov
jnp
pop
adc
sub
je
movsl
lcall
sbb
and
popa
jp
cmp
mov
imul
add
xchg
in
mov
lret
fcomps
stos
pushf
out
cmp
mov
add
pop
jo
jg
jbe
test
daa
loopne
mov
sub
dec
outsl
out
in
shl
aad
and
adc
dec
cmpsb
xor
jno
sbb
xchg
and
push
push
cmpsb
ret
addb
je
outsl
popa
arpl
pop
fldcw
test
in
bound
js
out
dec
outsl
insl
rorb
and
cmp
and
rolb
jne
repnz
inc
ds
inc
cmovle
int3
mov
cmpsl
arpl
negl
dec
jmp
mov
mov
or
cmp
movsb
in
loopne
cld
sarb
enter
leave
push
lds
test
shl
lret
fbstp
je
push
sub
or
xor
scas
push
aaa
pop
sahf
js
rcl
dec
mov
cmp
lock
hlt
cli
sub
mov
and
ret
pop
insl
filds
mov
in
jg
sub
out
out
push
add
xor
fildl
add
push
lea
and
xlat
std
jbe
nop
inc
add
enter
xor
fmuls
jbe
test
push
push
shlb
push
add
popf
scas
jmp
or
icebp
js
lcall
mov
imulb
jno
insb
int3
pop
jo
and
fwait
aaa
sbb
enter
orl
dec
sahf
lea
test
pop
sbb
cmp
mov
jl
int3
jae
je
or
pop
sub
jecxz
fs
add
dec
and
lret
push
sti
test
pop
pusha
rcrl
dec
icebp
mov
in
addl
and
fcmovu
cmp
or
add
xchg
xor
push
in
sbb
scas
pusha
hlt
jmp
xor
sahf
movsb
push
jnp
xchg
sti
xlat
mov
jae
mov
test
das
push
adc
enter
pop
push
stos
and
test
jno
pop
lds
decb
xchg
sub
jno
cmp
xchg
lret
mov
xor
fadd
mov
xchg
ret
es
data16
add
nop
inc
jmp
pop
sub
jns
aad
test
sub
mov
test
sti
loope
gs
xchg
xchg
repz
arpl
or
inc
push
shl
mov
fwait
sub
clc
mov
ret
mov
xchg
cmpsl
mov
push
dec
out
jbe
imul
and
inc
ss
push
mov
scas
push
inc
stos
movsl
mov
mov
xchg
pop
push
pop
insb
pushl
cld
scas
mov
add
inc
push
cmpsb
fisubs
das
jo
fs
jle
les
sbb
pop
or
iret
rcrb
js
xchg
shrb
daa
adc
and
test
inc
mov
push
movb
mov
cli
or
push
push
fimuls
nop
aaa
es
pop
and
mov
dec
repz
jp
jno
jno
and
out
cmp
test
mov
les
jmp
sub
mov
aam
sub
inc
loope
lret
sbb
outsb
sbb
ja
pop
xor
fcompl
cmp
push
in
cmp
xlat
sub
fs
mov
testl
push
mov
xchg
pop
and
jne
and
frstor
mov
orl
xchg
push
fwait
mov
mov
and
fadd
sub
ret
repnz
adc
adc
cld
cmp
movsb
xchg
mov
shrb
sahf
aaa
push
sub
fwait
pop
movsl
xor
aaa
in
or
sbb
lret
cmp
and
test
scas
loop
out
mov
push
dec
inc
vmread
mov
sub
lods
cli
orb
or
int
push
push
jb
mov
aad
pop
jg
and
test
jae
push
jae
ljmp
cmp
repz
in
loop
xor
enter
pop
xchg
sbb
insl
arpl
cli
xchg
subb
add
mov
mov
xchg
mov
push
jns
in
add
ljmp
inc
adc
xchg
push
les
and
xchg
adc
pop
subl
outsb
or
mov
and
out
ret
enter
push
leave
ficomps
stos
scas
push
jecxz
cmpsl
popa
sarb
jne
fisttps
pop
jno
ret
les
out
sub
call
mov
lret
frstpm(287
pop
cmp
push
arpl
jge
mov
in
sbb
ret
inc
push
push
xor
das
bound
repnz
xchg
push
fstpt
jle
int3
pop
dec
clc
fsub
rorb
je
cmp
incb
pop
loop
mov
ret
das
mov
dec
cmp
aas
lcall
lcall
xor
lret
or
sbb
inc
sbb
ds
sti
inc
cltd
mov
xchg
or
test
adc
xor
xor
fs
int
or
cmp
daa
lcall
leave
sub
data16
push
sarl
jge
jne
lock
inc
and
add
xor
fs
sbb
lods
movsl
xor
ss
mov
outsb
push
stos
les
int
xor
in
sbb
cwtl
call
ret
adc
cwtl
scas
adc
aad
std
add
dec
dec
repnz
pop
mov
jle
adc
and
jns
adc
jne
nop
and
xchg
bound
jno
mov
outsl
or
popl
pop
jbe
xor
xor
xchg
repz
cmp
mov
pop
dec
lea
test
out
icebp
inc
dec
mov
mov
mov
jge
imull
cltd
or
add
sbb
push
sarb
iret
add
lds
popf
in
adc
push
sbb
outsl
out
inc
add
add
sub
pop
pop
push
mov
inc
insb
mov
repz
inc
scas
sub
pop
adc
ljmp
lock
insb
mov
mov
imul
mov
pop
mov
popa
pop
scas
mov
or
outsl
dec
jnp
push
outsl
adc
lock
mov
sbb
cmp
arpl
out
sub
fdivs
sub
jbe
stos
sbb
push
push
inc
xor
insl
mov
aad
mov
stos
jmp
lret
loope
out
xor
ja
xor
mulb
dec
fisubl
jmp
lds
add
mov
int
mov
divl
insb
aam
inc
es
aaa
and
rorl
ljmp
cmc
mov
shll
lahf
movsb
cmpsb
in
lock
fdivrl
push
sarl
dec
jecxz
pop
mov
cmp
mov
sub
iret
js
out
cmp
dec
dec
inc
push
mov
inc
mov
lods
les
sbb
jecxz
les
inc
leave
mov
test
stos
xor
lods
pop
int3
stc
addl
lret
lds
sahf
jb
sub
fidivrl
call
mov
and
mov
iret
inc
pop
sub
mov
scas
out
test
push
test
cwtl
scas
dec
xor
test
mov
lahf
daa
cwtl
int
add
xchg
fidivrl
icebp
xchg
or
mov
xchg
hlt
fucomp
jae
mov
enter
add
pop
xchg
ret
aad
sbb
das
lret
std
pop
mov
xor
dec
jne
cs
mov
xchg
pushf
xchg
mov
orb
hlt
in
mov
div
cmpsl
incl
iret
dec
dec
add
sbb
xor
push
lret
repz
pushf
sbb
insb
mov
mov
dec
xchg
push
lods
mov
ljmp
in
and
xchg
pop
cmp
inc
jg
shlb
push
jp
mov
sub
xchg
xor
inc
cmpsl
int3
je
int3
movsl
lret
fsubp
pop
mov
xchg
mov
outsb
fidivrs
sbb
ror
cltd
cmpsb
mov
mov
pop
add
roll
pop
imul
add
sti
dec
out
outsb
dec
sub
das
push
jp
sub
mov
xchg
sarl
nop
add
mov
popf
aad
cmpsl
mov
outsl
jb
mov
aas
or
lret
fistl
push
add
and
loop
test
orl
and
adc
push
dec
rcrl
sub
leave
xchg
aad
push
push
icebp
icebp
rcr
test
cmp
xchg
imul
inc
mov
shrb
fidivrs
std
scas
add
fiaddl
sub
add
loopne
out
je
clc
dec
lods
xchg
xchg
dec
xor
dec
test
xor
sub
push
xchg
push
dec
out
push
inc
loope
mov
pop
push
fidivs
or
subl
mov
sub
mov
add
add
repz
push
mov
notl
movsb
inc
lds
and
mov
aad
out
cld
adc
ja
add
movl
cs
or
lods
gs
leave
aam
mov
popl
aam
add
pushf
lds
push
push
mov
adc
das
gs
mov
hlt
popa
rcl
outsl
aaa
push
dec
lret
pop
push
dec
int
repz
mov
mov
jge
popa
loop
addr16
pop
outsl
push
mov
mov
ret
cwtl
nop
adc
subl
adc
sarl
mov
popf
inc
repz
hlt
subl
dec
int3
fbstp
pop
pop
mov
sbb
pop
adc
add
pop
ret
mov
je
fsubrs
dec
push
pusha
push
loop
sub
mov
adc
sbb
mov
add
mov
adc
pop
in
xor
xor
inc
cmp
cmp
add
ret
push
cmp
mov
xchg
xchg
jmp
sahf
fstl
xchg
in
pop
push
icebp
test
dec
je
push
mov
cmp
mov
xchg
push
hlt
xchg
inc
mov
movsb
mov
xchg
out
push
xor
jg
mov
lcall
xor
sub
jge
insl
xor
lods
push
ret
pop
cmp
std
ret
xor
ss
lock
xor
add
cmpsb
in
repz
push
lea
pop
inc
stc
jns
add
sti
cwtl
inc
mov
xor
movb
adc
xchg
pushw
xchg
shll
or
mulb
sub
scas
cld
icebp
mov
push
mov
pop
add
xor
clc
and
sub
arpl
jo
pop
adc
jl
pushf
test
das
lahf
cs
sbb
lea
jae
mov
mov
mov
shl
jecxz
aad
pop
lahf
mov
test
out
dec
add
xor
adc
popfw
into
sub
sar
shlb
out
dec
in
mov
int
repnz
mov
and
fisubl
adc
mov
subl
xchg
sub
adc
rolb
dec
aad
ljmp
mov
ja
insb
cltd
orl
xlat
mov
std
int
ljmp
pop
loop
or
movsb
inc
xchg
ficoml
imul
lret
sub
jns
mov
mov
inc
cmp
mov
mov
jnp
sub
xlat
je
push
push
jno
cli
mov
or
push
les
test
insl
xchg
imul
adc
inc
call
push
dec
add
mov
mov
test
sub
sub
pop
out
cmc
xor
lea
adc
mov
push
out
lods
sub
call
dec
xchg
pop
xchg
sub
std
ds
xor
cmp
repz
shrb
and
popf
cmp
add
sbb
aad
mov
sbb
iret
or
pop
jecxz
cmpl
aas
adc
jg
mov
inc
cmp
jge
lds
add
shl
mov
and
inc
fdivrl
loope
stos
sbb
es
sub
cmp
sbb
dec
test
or
sub
cmp
inc
dec
sbb
call
sarb
subb
scas
pop
pusha
mov
decb
xor
mul
mulb
sub
leave
add
in
mov
jg
pop
idivl
fsubrs
mov
out
or
sbb
push
pop
test
add
inc
aaa
dec
or
rcr
push
mov
jecxz
je
sti
and
add
sbb
push
scas
push
mov
push
icebp
les
movsb
test
inc
pop
fistl
mov
cmovno
mov
and
sbb
arpl
jae
xchg
pusha
push
xchg
and
pop
nop
push
jge
sti
cmp
cwtl
shrl
and
sbb
call
mov
push
xor
sbb
mov
sub
xchg
xchg
mov
jb
jne
jno
mov
add
adc
sti
adc
adc
lea
lock
xor
repz
pop
push
adc
and
xlat
and
dec
repz
lcall
std
in
aam
inc
mov
lcall
adc
xchg
andb
or
push
icebp
lods
movsl
xchg
mov
jge
fildll
subb
add
data16
cli
mov
or
add
dec
nop
mov
cli
shll
cs
into
and
lcall
mov
xlat
cld
mov
mov
push
aad
inc
add
push
pop
xor
xor
cmpsl
andl
cwtl
sbb
insl
repnz
aam
mov
inc
hlt
inc
adc
lods
loopne,pt
icebp
imul
daa
jns
jno
testl
loopne
add
mov
xchg
cmc
add
pop
push
or
dec
xlat
or
fdivs
out
sbb
fs
aam
sub
sub
inc
vcvttsd2si
push
xor
loope
mov
imul
repnz
fwait
mov
sub
test
movsb
in
out
subl
aam
and
fsubrl
and
popa
int
jo
pop
loop
add
push
jg
mov
jmp
fs
pop
jb
pop
popf
mov
adc
jp
test
mov
pop
pop
loopne
and
outsb
ret
arpl
mov
imul
cmpsb
xor
push
pop
pop
enter
mov
jl
xlat
imul
int
cmp
in
repz
xor
scas
scas
mov
cmc
lock
mov
aas
jl
pop
cmp
jo
clc
dec
xchg
je
mov
mov
ljmp
pop
pop
lahf
sub
adc
mov
xchg
out
sbbl
add
nop
push
add
or
pop
xchg
or
in
imul
jge
nop
scas
add
sub
jnp
cmpsb
and
scas
out
push
mov
or
mov
cwtl
pushf
shlb
jle
add
int3
adc
addl
scas
pop
movsl
stos
arpl
xor
out
int3
test
ficoms
sbb
mov
add
add
cltd
mov
adc
push
rcl
shlb
mov
xor
cmp
loopne
jecxz
into
jno
mov
loope
sti
mov
inc
stos
in
cmpsl
and
int3
inc
mov
fs
test
pop
pop
jns
cld
lods
sub
or
push
mov
sahf
out
sbb
sbb
fistpl
roll
sbb
mov
movsl
ljmp
xor
sbb
lcall
cmpsb
add
sbb
cs
mov
daa
fidivrs
xor
push
shlb
or
xorl
dec
cmp
push
dec
push
mov
sub
ljmp
stos
and
ret
lea
test
out
cmpsl
int
int3
xor
jmp
movsb
push
insb
stos
add
js
loopne
rclb
push
addr16
out
add
mov
in
xchg
inc
fnsave
sbb
adc
scas
andl
dec
sub
push
inc
insl
adc
imul
fsubp
int3
or
push
outsb
jne
add
sahf
add
add
jnp
inc
rclb
ss
cmpsl
cld
add
imul
push
lods
cmc
push
xlat
or
mov
cmp
xor
xchg
movsb
mov
mov
xchg
and
mov
call
mov
push
jnp
popf
and
repz
popa
dec
sub
mov
jp
insb
and
push
dec
out
cmpsl
pusha
push
mov
push
dec
push
fildll
stos
cmp
or
icebp
out
xchg
ss
mov
leave
in
or
sbb
cmp
pop
jae
mov
mov
pusha
mov
pop
popa
int3
mov
push
sub
aas
cmp
push
aam
xchg
stos
and
fwait
std
push
mov
pop
inc
adc
pop
test
mov
jle
xor
out
adc
push
adc
fwait
jmp
jg
stos
xor
lods
into
hlt
int
lods
mov
pop
cmp
mov
dec
pop
lahf
sub
mov
adc
cmp
cmpsb
mov
nop
sbb
decl
jmp
inc
jnp
outsb
push
es
dec
mov
in
jg
sbb
sbb
lret
xchg
pop
pusha
mov
push
lahf
pop
pop
jp
das
insl
cmp
lahf
mov
loopne
ljmp
pusha
loop
test
mov
push
and
dec
arpl
cwtl
popa
jmp
push
xor
nop
cmp
das
scas
cltd
in
arpl
je
pusha
pop
push
xchg
or
dec
stos
aad
pop
vminsd
jg
cmp
sahf
ret
push
rcrl
adc
aad
fdivp
sbb
movsl
std
subb
dec
fs
leave
push
mov
loop
adc
pop
mov
mov
cmp
imul
and
sub
sbb
jb
fld
js
enter
repz
das
fdivrs
xchg
adc
jmp
mov
jle
loope
pusha
push
cltd
out
sbb
ficoml
jl
jae
and
mov
lds
pop
rcll
pusha
nop
push
add
sub
lahf
cmp
jecxz
sti
mov
pop
js
jp
test
daa
adc
leave
stc
fwait
iret
fistpll
lods
xor
mov
int
and
pop
divl
mov
arpl
loope
js
push
imul
loop
mov
in
or
addr16
adc
movsl
pop
stos
jge
call
adc
dec
push
cltd
sbb
repnz
push
fdivr
lods
pop
fisubrs
pop
cmc
in
push
clc
out
in
sbb
int3
mov
lock
or
and
pop
int3
mov
xchg
dec
xchg
push
jl
cwtl
dec
push
pop
mov
orl
test
out
je
es
sub
aaa
pop
push
stos
jmp
jbe
sbb
pop
sub
xchg
pop
pop
ss
ss
adc
inc
pop
iret
dec
mov
clc
and
add
test
cmp
testb
sub
ljmp
stos
push
mov
mov
das
nop
pop
xchg
loop
adc
mov
pop
mov
push
imulb
mov
rol
mov
mov
stc
daa
sbb
jae
pop
jne
or
cs
jns
add
sub
mov
aad
int3
icebp
aam
int3
pop
shl
mov
adc
sahf
add
fsubrl
enter
pop
dec
rolb
shl
divb
push
iret
bndldx
rorl
push
fcom
mov
clc
mov
loop
dec
inc
sbb
push
inc
mov
sbb
dec
stc
dec
nop
and
stos
outsl
arpl
ss
pop
repnz
pop
cmp
test
repz
scas
xchg
xchg
push
xchg
rcrb
push
xchg
cmpsb
dec
cmpsl
pop
pop
mov
push
lds
in
imul
sbb
insl
jg
ss
arpl
pop
clc
mov
inc
fnstenv
clc
movsl
dec
xlat
mov
push
cmp
scas
fisubrl
jl
push
jmp
mov
xor
inc
push
mov
pop
iret
bnd
pop
mov
les
jns
nop
jg
xchg
sbbb
xchg
arpl
dec
xchg
movsl
fidivrs
cmp
adc
jg
int3
xchg
xchg
lahf
rorb
popa
addr16
pusha
jle
mul
push
dec
fcmove
push
into
xchg
jl
push
cmp
sub
aam
popl
pop
push
int3
inc
or
jp
es
cmp
push
sbb
pop
push
mov
push
add
cmp
jmp
es
sbb
xchg
or
lret
shr
icebp
rcr
inc
adc
jg
sub
inc
loopne
test
ss
inc
xchg
xchg
repnz
loope
pushf
fs
sbb
adc
mov
sub
ljmp
fistl
adc
add
mov
gs
or
sub
and
fs
and
addr16
leavew
insl
dec
pop
pop
cmp
decb
and
or
lock
stos
ds
ss
cmp
aam
xchg
mov
scas
js
add
fs
mov
add
mov
mov
xchg
in
lock
mov
nop
mov
add
repnz
mov
arpl
cmp
rcrb
loopne
jae
or
fdivrl
aaa
jbe
jb
mov
cmc
movsb
sub
mov
xchg
ret
daa
dec
movsb
fidivrl
and
arpl
pop
push
mov
cmpsl
ret
fs
mov
xlat
arpl
leave
sahf
pop
xchg
and
shlb
repz
xor
mov
and
in
push
inc
in
jns
or
inc
pop
loopne
fucomip
add
aaa
mov
loope
mov
dec
lahf
push
mov
xor
aam
notl
loop
push
adc
sub
pop
out
or
fwait
ds
pushl
lock
fadd
sub
fildll
jmp
mov
mov
out
je
mov
std
cmp
and
mov
add
fstpt
ret
add
or
xor
xor
inc
jp
addb
in
inc
fwait
jmp
xchg
popf
insl
cmpl
fidivs
sbb
push
mov
push
sahf
sub
scas
sub
mov
ss
imul
js
push
mov
out
sbb
push
xlat
jne
loopne
adc
out
add
cmp
pop
xchg
inc
mov
mov
arpl
iret
jmp
out
mov
and
pop
cld
mov
popa
push
mov
add
imul
subb
cmp
jno
enter
clc
mov
jp
jecxz
pop
pop
cmpsb
aas
out
into
pushf
jl
inc
iret
push
addr16
dec
pop
call
das
jne
mov
adc
inc
inc
mov
cmp
and
out
add
fdivl
xor
mov
jmp
out
xchg
dec
stc
sbb
rorl
xor
js
stc
cmp
jge
lahf
xor
call
ja
aad
aad
push
lock
push
cmc
lods
les
pusha
push
out
inc
mov
aam
hlt
xor
push
mov
out
push
rclb
imul
mov
lret
out
xor
ljmp
cmp
test
mov
lret
cmp
sbb
inc
stos
loope
adcl
or
push
fsubrl
dec
xor
sub
push
nop
sbb
jg
mov
mov
dec
and
ret
cs
shlb
int
xchg
dec
inc
mov
jl
ds
xor
adc
loopne
lods
mov
push
movsl
and
jne
xchg
jle
js
xor
jo
dec
dec
inc
or
adc
ljmp
jbe
out
sarb
cli
jp
mov
pop
pusha
aam
lahf
jg
fistl
mov
icebp
add
aas
pop
xlat
int3
add
dec
pop
out
adc
sbb
rorb
sti
data16
sub
adc
inc
aam
ss
add
out
inc
fimuls
inc
call
push
lock
mov
and
jns
adc
pop
shrb
andb
fdivrs
dec
jge
adc
mov
dec
xor
jl
pop
sub
jbe
or
xor
scas
call
insb
push
mov
inc
pop
and
add
ret
ja
inc
mov
js
adc
imul
mov
sbb
inc
std
or
push
movsl
loop
cmp
dec
cli
lods
sbb
mov
mov
sbbb
or
lcall
xchg
push
adc
fwait
sub
sbb
ret
pop
int
push
pop
pop
sub
aas
push
xor
or
mov
es
pop
or
add
mov
jle
sub
popf
fdivrl
sbb
mov
adc
jl
fistpll
mov
stos
mov
inc
mov
dec
js
insl
jecxz
mov
call
and
xchg
xchg
dec
and
xchg
jge
lea
scas
rcl
xor
push
sarb
sub
cwtl
test
lea
add
inc
cmp
mov
push
pusha
pop
ret
pop
sti
cmp
mov
int
mov
jns
inc
fwait
cmp
xchg
xchg
mov
xchg
shll
testl
daa
add
inc
mov
mov
scas
fcmovne
mov
in
int3
mov
ds
je
sahf
fmuls
sbb
lods
sbb
adcl
icebp
pop
push
test
add
rolb
std
pop
cld
mov
and
xor
adc
xor
sbb
movsl
scas
add
scas
cmc
rcr
xlat
aam
pop
push
xor
push
push
adc
xchg
cmp
fistpl
in
sub
inc
shll
lods
stc
out
hlt
in
test
cltd
push
mov
xchg
cmp
fmuls
aaa
pop
cld
push
shrl
push
cld
adcb
bound
mov
pop
scas
aad
in
push
xchg
sub
andb
cmp
pop
mov
dec
add
pusha
push
cmp
jge
add
jecxz
cld
adc
and
das
pop
push
dec
inc
push
or
pop
out
lret
or
das
inc
addl
mov
mov
addr16
mov
adc
stos
jo
add
inc
aaa
lds
cmp
push
mov
cmpsb
adc
test
out
out
imul
dec
jmp
add
push
add
daa
sub
sub
jns
shrb
mov
dec
mov
mov
add
inc
cmpsb
loop
ficomps
lcall
rol
mov
adc
mov
inc
cmpl
movb
mov
dec
outsb
sbb
and
inc
inc
push
and
add
xchg
lret
and
fsubl
push
push
cltd
pop
sbb
jne
stos
xchg
add
xchg
rorb
scas
pop
iret
add
dec
aas
lods
leave
cmp
in
sbb
inc
icebp
adc
push
repz
ret
add
shl
jecxz
dec
push
fnsetpm(287
cmp
movsl
pop
int
jno
xchg
mov
add
in
data16
add
lods
pop
pop
sub
add
inc
fwait
add
loopne
cmpsb
sub
inc
inc
lods
or
das
imul
aas
cmpsl
sub
or
mov
jmp
mov
cmpsb
pop
xchg
adc
sbb
lret
scas
push
xchg
ja
pusha
out
orl
jge
sub
inc
bound
or
icebp
or
outsb
rolb
pushf
ret
jne
sbb
addr16
jnp
stos
xchg
mov
jbe
mov
fcoms
push
push
pmuludq
push
adc
jno
in
ret
lahf
jmp
addr16
dec
jle
push
iret
daa
add
stc
pop
mov
aam
mov
push
cmp
sub
outsl
xlat
mov
outsb
loopne
sub
jbe
idivb
iret
and
push
stos
pushl
test
or
loop
push
fldt
aaa
fldt
int3
fwait
lds
cmpsl
rclb
out
xchg
cltd
adc
mov
pop
jmp
mul
inc
sbb
push
adc
cmc
cmp
add
shl
sub
pop
and
adc
ret
ror
jmp
dec
push
test
lock
imul
sbb
out
int
rcll
cmpsl
mov
inc
pusha
addr16
out
scas
lret
movsl
enter
int
ja
pop
jge
sbbl
in
fisttpl
rcr
cmpsl
adc
lcall
leave
gs
mov
cmp
mov
idiv
lods
fisubrs
and
stc
pop
cmc
scas
clc
inc
pop
pop
lret
mov
into
add
push
mov
call
into
out
add
adc
test
subb
sahf
sti
xchg
bound
insb
xchg
or
sub
mov
bound
mov
push
fld
xor
pop
push
push
test
add
inc
lret
test
and
inc
mov
fidivrs
scas
add
push
push
mov
pop
test
push
adc
sub
push
in
shll
rcrb
add
xchg
xchg
and
dec
push
aas
test
mov
jp
dec
mov
popa
bound
js
xchg
jb
pop
out
shrl
roll
ja
inc
sub
and
gs
lahf
cmpsl
loopne
push
dec
ffree
sub
mov
jnp
nop
shl
mov
xchg
pop
fwait
test
adc
int
arpl
clc
mov
pop
mov
repnz
dec
adcl
xchg
dec
adc
mov
cld
add
leave
sbb
outsb
ret
loopne
xchg
mov
cld
int3
mov
es
insl
and
jmp
imul
leave
fstpl
cmp
mov
fs
psllw
push
movsl
pop
ja
pop
mov
outsl
arpl
cmp
dec
stc
dec
jae
mov
mov
out
xor
ljmp
mov
pop
inc
pushf
clc
xor
pop
je
lds
aaa
in
inc
jb
inc
xor
icebp
jne
mov
jno
inc
or
cltd
sahf
test
sbb
cmp
sub
mov
sub
adc
inc
fs
loope
sub
fldl
jecxz
jo
gs
call
andb
sub
jne
fdivrs
pop
or
outsb
sbb
mov
push
add
daa
aam
jne
outsb
sub
or
jg
xlat
lret
ja
cld
jmp
push
pop
inc
out
pop
aam
je
mov
adc
inc
xchg
inc
inc
add
pop
pop
dec
repz
addr16
mov
out
or
test
mov
cmpsb
lods
dec
push
push
pusha
pusha
jmp
sbb
ljmp
out
fsubs
cld
seta
mov
in
jnp
dec
jg
cmp
jge
or
ret
outsb
into
enter
inc
mov
ret
imul
out
aam
popf
mov
jnp
imul
xchg
sbb
xchg
movb
std
push
xor
ud0
lea
roll
inc
and
repz
fs
data16
cli
and
jns
loop
into
cmc
pop
mov
xor
movsb
out
aam
inc
cld
ret
mov
stos
popw
and
cmpsl
jecxz
mov
sub
inc
and
or
clc
clc
add
les
sub
fnstcw
insb
add
push
stos
mov
sbb
arpl
sahf
ja
mov
mov
and
add
rorl
pushf
or
and
mov
das
into
fwait
push
rcrb
mov
xor
std
imul
stos
pop
clc
ficoml
repz
sbbb
lcall
xchg
jnp
lods
jl
scas
mov
test
push
lcall
jle
pop
aam
xor
in
aam
inc
xor
mov
sub
outsb
js
ret
out
dec
mov
mov
inc
and
iret
dec
test
aaa
add
sub
cmp
in
ljmp
sbb
je
jge
cmpsl
mov
or
movsb
push
and
mov
dec
xchg
test
repz
mov
sbb
rclb
push
inc
and
xor
cmovo
cmp
pop
jl
sarl
shl
inc
cmpsb
outsb
and
mov
imul
jno
in
gs
pushf
pop
popl
aad
pop
push
fmull
daa
xchg
add
adc
insb
rcl
les
ljmp
inc
dec
mov
cmp
adc
fcoml
dec
outsb
add
push
or
mov
dec
cli
or
xchg
push
scas
mov
cmp
clc
lods
lret
in
jbe
addr16
or
and
pop
and
pushl
insl
jle
sbb
fistpl
lods
dec
and
insl
movl
jge
jae
les
xor
sub
cmp
fisubs
jbe
jg
in
mov
mov
add
or
clc
sbb
pop
inc
into
xchg
hlt
jmp
and
mov
push
jnp
push
addr16
scas
adc
int
inc
call
jns
mov
mov
jle
repnz
xor
iret
mov
repz
ret
mov
xchg
mov
sarl
imul
dec
call
jae
or
sub
in
arpl
sub
sahf
insl
movlps
pop
push
jb
lcall
movsb
lods
je
daa
add
icebp
push
inc
push
popa
das
ds
aas
push
xchg
ret
or
iret
jg
pop
jmp
or
hlt
adc
cmc
mov
cmc
out
pusha
push
lcall
push
add
pop
out
add
push
push
clc
inc
mov
ret
jle
jg
push
enter
jecxz
fnstenv
rcl
in
and
ja
int3
sub
jb
mov
jbe
mov
cmpsb
pop
dec
mov
ljmp
jp
jns
mov
mov
std
cmp
push
sarb
adc
push
int
jb
pop
cmp
pop
sub
rcll
dec
cmp
into
fldenv
hlt
sti
fcomps
adc
jno
or
pushf
icebp
movsl
push
ret
lahf
xchg
and
push
cmpsl
je
pop
push
fsubr
scas
lret
pop
mov
aaa
mov
adcl
aas
addr16
cmp
mov
add
and
jecxz
stc
cmp
adc
mov
inc
mov
mov
popf
mov
add
ja
jcxz
mov
iret
and
shl
loopne
fwait
push
xchg
mov
push
ljmp
adc
mov
fldl
fimuls
xchg
roll
mov
mov
mov
into
call
insb
jmp
xor
push
in
pushf
push
jae
push
divb
pop
scas
push
out
repnz
and
adc
pop
popf
sub
mov
sti
mov
mov
mov
mov
xor
sub
loope
fs
push
ret
jecxz
mov
inc
enter
ficoms
lock
pop
call
mov
mov
lret
mov
imul
xor
jecxz
push
dec
jns
popf
xchg
inc
mov
push
fwait
xchg
dec
cmp
mov
hlt
dec
lcall
xor
cli
andl
xchg
fwait
jns
mov
cmp
je
popf
idivb
test
dec
test
sti
test
sub
je
and
jl
and
mov
sub
jecxz
lret
fs
test
sbbb
loopne
or
push
mov
sub
pop
add
xchg
or
add
xchg
adc
or
aam
inc
push
shll
imul
xlat
test
pushf
sub
xor
mov
mov
repnz
gs
sub
mov
in
mov
xor
stc
dec
ljmp
push
in
add
shl
das
fcomi
lods
mov
fists
xchg
push
inc
mov
mov
shll
mov
xchg
cmpsl
popa
sub
mov
add
das
out
adc
out
dec
in
or
subb
imul
insl
cmp
xor
sub
fadd
xor
sub
push
sbb
popa
fildll
andb
dec
sbb
mov
fdivrl
popa
lret
data16
or
dec
cmp
pop
fcomi
inc
faddl
movsb
cli
pop
sub
mov
cmp
jmp
aaa
inc
fmull
jno
dec
leave
adc
mov
cmp
mov
pop
out
or
lret
dec
popf
mov
loopne
or
movsl
xchg
xchg
push
sub
test
rsqrtps
mov
inc
mov
test
cmp
mov
ljmp
jno
xchg
xchg
cli
mov
scas
xchg
cmp
pop
xchg
cmp
test
cwtl
fisttpll
aam
xor
iret
xchg
mov
fcomp
and
loopne
lods
enter
cli
and
pop
sbb
xchg
cmp
dec
jg
ret
xchg
xor
icebp
js
mov
out
inc
xchg
jle
pop
dec
lds
cmpsl
jg
daa
jg
jne
lock
sub
mov
and
aaa
lock
jecxz
push
scas
mov
pop
jno
or
arpl
pushf
xlat
dec
fwait
outsb
xor
negl
loop
imul
cmp
scas
out
jb
push
je
sbb
mov
neg
and
es
cltd
jns
leave
repz
jmp
dec
xchg
jo
sbb
popa
ljmp
and
out
xlat
lods
and
push
daa
mov
mov
jp
jne
fidivs
sub
push
pusha
xor
push
fdivl
clc
push
sub
pop
jmp
outsb
pop
or
push
leave
movsl
pop
cmp
mov
shrl
sbb
mov
lds
inc
notl
sbb
fs
js
gs
mov
jo
insb
int
into
jmp
and
mov
mov
daa
pop
out
jns
push
cmp
outsl
adc
push
loopne
ret
sbb
push
pop
dec
sbbl
mov
sbb
pop
daa
jg
test
enter
stos
stos
jnp
cmp
mov
dec
test
clc
cmp
and
adc
adc
sbbl
mov
xchg
cmp
jo
lcall
cmpsl
mov
or
pop
jl
outsl
pusha
sbbl
je
repz
jb
and
aas
mov
inc
mov
push
cmp
mov
cld
leave
jp
clc
push
mov
ret
js
push
jl
or
adc
pop
xor
jge
insl
sub
icebp
sti
jo
jnp
mov
into
jbe
imul
imul
arpl
xor
push
xchg
into
cltd
xorl
fs
mov
andl
andl
xor
ret
bound
dec
jbe
xchg
add
cltd
and
rol
adc
daa
xchg
xor
je
fs
in
dec
and
int3
pop
inc
jle
push
dec
daa
jbe
test
add
fsubrl
lret
push
ja
fists
mov
mov
rolb
sbb
ja
cli
test
cli
mov
pushf
sub
add
negl
imul
sbb
adc
cmp
mov
mov
lea
shr
and
aas
bound
cs
test
jnp
lods
ljmp
or
xor
inc
packsswb
fcompl
jg
bound
cltd
out
adc
pop
adc
sbb
in
test
adc
aas
adc
shll
sbbb
call
filds
jecxz
ja
xor
not
mov
es
roll
addl
cli
push
stos
cmp
jle
movsl
mov
out
and
sti
arpl
jecxz
sbb
or
xchg
popf
sbb
mov
andl
mov
mov
push
push
call
in
in
scas
ss
cmp
fnsave
hlt
stos
orb
loope
les
adc
or
pop
push
call
into
and
rsm
test
xlat
into
loopne
dec
or
clc
jge
add
fadds
mov
lea
icebp
insb
xchg
inc
jl
xchg
mov
mov
cmpsb
cmpsl
int
jmp
inc
in
or
fdivp
ror
mov
lret
aas
pop
loop
pop
jp
scas
adc
outsb
es
enter
xchg
and
in
pop
push
jg
xor
jg
or
mov
stos
push
outsb
adc
loop
cs
testl
leave
adc
mov
jg
fidivs
inc
popa
adc
jmp
or
mov
loope
fs
idivl
adcb
dec
xlat
test
mov
or
mov
add
outsl
sub
loope
mov
push
negb
inc
iret
xchg
scas
cmp
jns
adc
inc
mov
and
arpl
push
adc
sub
mov
push
outsl
xchg
je
loop
pop
scas
outsb
mov
jmp
dec
aam
mov
sarb
mov
mov
cmpsl
test
sub
out
ret
mov
xor
enter
jae
xchg
leave
mov
adc
dec
push
or
cmpsb
out
or
mov
xchg
call
icebp
sti
mov
mov
loop
cwtl
push
push
jl,pn
cmp
xchg
cmp
inc
sarb
jp
movsb
and
jp
mov
mov
xchg
add
call
adcl
xor
js
cld
sub
outsl
out
mov
adc
pop
dec
mov
clc
and
lahf
leave
mov
pusha
sbb
jp
leave
inc
aam
cmpsl
jb
xor
dec
andb
arpl
rcrl
ds
mov
enter
in
or
fldt
les
push
cmp
push
adc
mov
mov
filds
inc
xor
pop
add
sarb
into
xchg
lcall
or
rep
in
adc
fs
adc
scas
mov
jge
dec
icebp
xchg
movsl
lds
pop
filds
mov
pop
xor
aam
xor
dec
pop
pop
in
test
stos
jnp
sub
cmpsb
scas
pusha
mov
gs
jecxz
gs
or
loopne
and
push
popa
jo
int
stos
lds
sti
aam
sarl
das
sub
cmpsb
shr
xor
bound
jmp
loope
int3
mull
cmp
pusha
scas
jp
sbb
inc
fisubrs
mov
inc
jle
jl
push
je
sub
push
ret
inc
out
mov
or
mov
stos
shl
rorb
mov
inc
loop
jbe
push
jmp
jp
push
mov
and
stc
sub
push
aad
ret
in
int3
cli
mov
xor
lret
adc
arpl
pusha
jae
jl
or
es
xchg
loopne
shr
iret
mov
mov
test
jns
sub
jno
aam
inc
arpl
gs
push
popa
jae
insb
mov
pusha
pusha
data16
xchg
sub
lcall
add
jp
xchg
mov
mov
je
cmpsb
fucomi
test
sbb
pusha
sub
loopne
cmp
add
cmpsb
push
movsb
sbb
sbb
stos
lret
sbb
lds
in
push
sahf
xchg
ss
pusha
dec
repz
in
cmp
jne
sub
sbbb
xchg
mov
movb
mov
jecxz
hlt
add
xchg
jmp
push
test
jmp
push
dec
push
pop
cmc
dec
movsb
sbb
adc
sti
inc
imul
das
insb
xchg
mov
lds
xlat
pop
mov
arpl
pop
cmpsb
aas
xor
fisubrl
inc
jno
in
add
pop
pop
not
lods
rorb
sbb
pop
dec
xchg
imulb
enter
popf
test
in
pop
cmp
arpl
jb
xchg
mov
daa
jmp
jmp
int
xor
mov
sti
add
sar
inc
fnstenv
dec
loopne
xchg
sahf
out
sldt
xchg
loope
push
cmpsl
aad
dec
add
dec
mov
in
sub
adc
aam
jge
in
add
xor
das
jp
mov
div
adc
ja
nop
xchg
mov
mov
or
into
xchg
push
or
ret
sahf
outsl
shll
je
mov
movsl
sub
pop
sar
mov
sub
into
push
mov
les
ret
xlat
pop
adc
xor
in
xor
lods
inc
jg
adc
movsl
xor
cmpsb
enter
sub
dec
push
loope
aas
insl
pusha
add
jl
jl
ljmp
insl
out
sbb
adc
xchg
repnz
sbb
push
and
bound
pop
xchg
sub
lahf
data16
stos
xor
movsb
lret
out
daa
call
sbb
rcrl
outsb
out
outsl
pop
movsb
mov
aam
repnz
mov
push
inc
cli
jnp
adc
nop
push
mov
shll
dec
lea
push
xchg
add
addr16
pop
pop
jnp
mov
pop
xor
add
inc
push
mov
cs
sub
jns
cmp
xor
mov
ret
rorl
xchg
adcb
movsl
mov
hlt
pop
ds
cmp
loop
test
xlat
daa
and
adc
sub
jecxz
notl
inc
rclb
dec
repz
movsl
lret
ljmp
or
pop
sahf
shll
popf
daa
test
dec
aas
dec
add
push
sbb
or
push
bound
xchg
cmp
push
mov
sbb
xor
inc
pop
mov
lds
je
add
xchg
xor
notb
mov
inc
mov
adc
stc
xchg
loope
les
fdivs
jns
push
aad
inc
loopne
out
fstp
sub
or
pusha
pop
mov
in
ja
gs
push
sbb
mov
fldenv
jl
lods
xor
push
mov
pusha
pop
mov
cmpsl
xor
lods
test
mov
fucomip
loopne
mov
data16
push
sarb
ss
jae
pop
lea
and
sbb
cld
loopne
mov
ds
rcll
add
pop
add
mov
jp
out
mov
and
push
loopne
xchg
push
ljmp
cmc
mov
dec
outsb
insl
icebp
push
pop
js
scas
cmpsb
scas
outsb
das
xchg
sbbb
xchg
jo
roll
mov
mov
xchg
fucom
inc
loope
fldt
cltd
dec
lret
rorb
jle
loopne
xor
subb
cmp
outsl
mov
hlt
outsb
lea
fistpl
out
xor
or
subb
and
jo
mov
push
les
sbb
arpl
loop
sbb
adc
scas
imul
mov
pop
stos
dec
imul
xchg
outsl
cmc
xor
ret
ret
jge
lods
repnz
push
cmp
fcomip
push
lods
popa
shll
enter
outsb
cltd
sbb
dec
cld
adc
pop
mov
sub
inc
push
mov
mov
out
cmp
push
outsl
orb
dec
or
je
bound
fcmovu
and
out
push
sub
push
cmp
mov
cmp
and
and
xchg
pop
daa
outsl
sub
jnp
insb
push
dec
sub
pop
out
push
sbb
cmp
mov
shrl
xlat
push
mov
adc
dec
or
test
sbb
sub
nop
out
out
fdivl
lret
mov
hlt
ds
aad
sbb
sbb
push
xor
add
xor
inc
int3
ds
mov
ror
mov
sbbb
push
xchg
xor
xor
xor
add
aas
gs
pusha
sti
daa
add
xchg
or
in
cld
mov
mov
xor
push
imulb
aas
mov
fs
push
inc
shll
mov
fs
xor
mov
xchg
push
xor
push
cmpsb
cmc
dec
jle
movsb
sub
mov
mov
test
push
mov
sub
ds
loope
xor
fxch
mov
dec
das
pop
in
shrb
mov
lret
sub
mov
pusha
sub
push
in
clc
sar
adc
pop
int3
stos
mov
scas
pop
push
popa
ljmp
adc
and
pop
repz
fldenv
pusha
scas
sbb
enter
pushf
filds
mov
fcoms
xor
aad
pushf
jmp
out
movsb
cwtl
sub
sub
bound
mov
test
loopne
cli
xor
add
pop
dec
mov
ss
inc
and
jmp
lds
es
xchg
aad
sahf
add
mov
pop
aaa
inc
fldenv
xchg
repnz
cs
jae
dec
in
add
rcll
pop
cmp
sub
out
leave
imul
lahf
ss
rolb
push
stos
les
repz
and
xchg
mov
mov
lea
inc
ja
mov
testb
mov
mov
pop
lcall
jb
lods
hlt
mov
sub
jp
xor
ficomps
cmpsl
xchg
add
aaa
es
adc
push
mov
push
subl
movsl
fisubl
pusha
or
flds
mov
xchg
pop
mov
rorb
inc
scas
pusha
sbb
rcrb
inc
xor
aad
inc
mov
and
cmpsl
clc
mov
cld
iret
pop
call
sbbl
ret
pop
out
out
xchg
pop
push
pop
and
inc
mov
cmpsl
jnp
mov
sti
mov
fsubrl
xor
aaa
jle
xor
in
pusha
add
mov
jns
mov
mov
cld
push
add
movsb
pusha
outsb
testl
jmp
icebp
cltd
aad
imul
cmc
fcmovbe
jmp
sub
sub
andb
mov
nop
adc
mov
push
push
cmpb
inc
xor
jnp
std
out
sti
xchg
in
cmc
mov
hlt
imul
push
je
out
pop
jno
bound
mov
inc
out
xor
jno
je
push
fs
inc
jp
sub
xor
cmpsb
hlt
fbld
mov
outsb
mov
xor
jg
xor
jo
mov
ja
mov
popf
in
inc
push
loopne
loop
push
ret
aas
notl
or
mov
jns
xor
cmp
shrl
inc
push
out
out
mov
sub
add
inc
ficomps
or
inc
jo
sbb
jle
pop
popa
arpl
jo
in
iret
repnz
stc
add
sub
lea
cmp
mov
in
sti
push
rorb
ss
push
stos
int3
std
adc
aad
xor
mov
sub
mov
mull
sti
inc
movsl
lods
loope
in
into
jg
mov
and
adc
repz
cmp
jg
faddl
push
inc
into
ret
jnp
add
rolb
sbb
cmpsl
subb
testl
mov
mov
push
add
hlt
in
sarl
mov
sahf
pop
mov
jno
dec
mov
mov
mov
or
add
push
xor
adc
add
cmp
fcoms
ja
repz
or
xchg
cmpb
lahf
mov
enter
ja
cs
jle
lods
jne
sahf
cli
inc
in
jo
gs
dec
stos
icebp
mov
fnstenv
jmp
and
push
imul
mov
fnstenv
dec
or
pushf
pop
mov
adc
jns
cwtl
bound
fsubrp
push
and
xchg
gs
testl
leave
inc
sbb
aad
lahf
shrl
dec
jmp
pop
shrl
pop
rcr
adc
push
xchg
pop
dec
push
or
jmp
aad
add
aad
pop
sbb
mov
xchg
pop
mov
or
movsl
outsl
push
pusha
jo
inc
adc
cmpb
je
gs
loope
lods
movsl
hlt
push
sar
cmpsl
and
jp
jcxz
popf
fisubl
loope
or
test
imul
add
ja
stos
and
stos
scas
sub
aad
push
add
add
cmp
sbb
fimuls
daa
sbb
push
dec
jle
hlt
adc
ret
outsb
into
test
clc
adc
and
cmpsb
and
lods
mov
loope
push
subl
out
repz
rcll
xchg
movsb
jg
jnp
outsb
mov
jns
inc
out
data16
fdiv
mov
std
mov
xlat
aam
cmp
dec
int
aam
pusha
sbb
lds
mov
pop
xchg
pop
ret
mov
leave
sti
insl
in
popf
js
xor
gs
pop
xlat
ficoms
loop
pop
xchg
pop
or
cli
mov
lods
out
adc
or
and
mov
dec
negl
in
sahf
jg
scas
push
inc
mov
and
mov
je
and
cld
movsl
pop
repnz
mov
xchg
std
sbb
mov
fnsave
xor
lret
inc
sub
scas
push
mulb
sub
add
mov
add
push
mov
loop
mov
adcl
sbb
sbb
push
push
push
jns
lea
sbb
test
xor
fists
loop
mov
inc
inc
xor
scas
cld
inc
addb
sub
hlt
inc
aam
fdivr
fs
sub
outsb
jge
lea
insb
dec
fadd
insl
jo
mull
mov
xchg
in
mov
inc
aad
add
out
mov
sahf
adc
lods
movsb
sti
add
mov
dec
fmull
mov
inc
pop
jmp
fs
mov
and
pop
dec
sub
cli
mov
mov
push
mov
aas
xchg
in
je
out
pop
mov
movb
mov
mov
mov
sbb
adc
mov
push
in
ficomps
in
jno
add
cmp
pop
rorl
pop
imul
push
xchg
cltd
sbb
cltd
xor
or
pop
push
mov
dec
xchg
mov
sub
fistps
xchg
in
sub
cltd
rclb
cmpsl
mov
pop
insb
mov
fwait
icebp
adc
aas
dec
push
mov
mov
addr16
aam
mov
xchg
ror
movsb
popa
ljmp
xor
je
or
xchg
lock
fdivp
adc
pusha
sub
dec
fdivrl
adc
fs
dec
notb
dec
add
or
sbb
xchg
jmp
mov
cmpsl
in
cmp
inc
mov
test
stc
jp
mov
lahf
or
repnz
cmp
in
xchg
test
push
push
shll
sahf
fwait
scas
bnd
jnp
sub
jecxz
call
dec
push
jp
inc
mov
jg
aam
stc
fisubl
sub
cmp
push
dec
outsl
jge
loop
mov
ret
in
push
pop
rol
mov
xchg
cwtl
xor
mov
and
dec
out
push
jle
xor
push
out
jbe
jbe
mov
sub
add
insl
mov
xor
mov
call
addr16
lea
and
std
cmpsb
cmpsb
xor
movsb
orl
ficomps
lret
push
jo
pop
mov
push
cmp
cmpb
lahf
test
xchg
or
lcall
push
hlt
inc
jecxz
add
popf
sbb
sbb
mov
out
pusha
fists
insb
jge
mov
loop
mov
adc
popf
out
dec
mov
scas
jp
sbb
cmp
js
cmpsl
iret
jbe
rcrl
cmp
call
shrb
js
fnsave
push
or
mov
xchg
push
sub
and
mov
lret
mov
stc
fldlg2
jecxz
cmpsb
lret
into
orl
pop
sahf
pop
or
std
daa
mov
and
out
ljmp
cli
and
into
lcall
rcrl
cwtl
xchg
call
das
enter
and
fucomp
jno
test
pusha
jo
sbb
push
movsl
sub
daa
push
ja
cld
pop
xor
xor
fbstp
inc
add
adc
mov
cli
cmpsb
pmaddwd
pop
cmpsb
add
add
xchg
mov
mov
pop
imul
pusha
bound
xchg
or
add
fdivs
fwait
idiv
icebp
xchg
xchg
ja
out
push
xor
sti
popf
add
push
jae
pop
sub
js
add
shrb
into
push
pop
cld
jns
sbb
mov
ljmp
gs
pop
iret
enter
mov
jbe
sbb
xchg
aam
scas
or
fwait
sub
add
cli
mov
cmp
loopne
xor
dec
sub
cmp
add
out
sbb
mov
ret
jp
test
jge
push
mov
push
mov
test
rcll
push
mov
fstps
sbb
sub
sub
sub
mov
ljmp
out
sub
sti
sub
xchg
ss
add
pop
adc
lds
xor
push
sahf
out
lcall
movl
inc
dec
aaa
dec
and
pop
or
add
cmpsb
iret
inc
rcrl
std
outsb
imul
cld
inc
lahf
push
lret
or
inc
inc
addr16
out
test
adc
fisttps
std
inc
and
cmp
mov
cli
and
xlat
cmp
xor
pop
mov
clc
test
jns
pusha
mov
xchg
cli
push
pop
jb
dec
nop
insb
xchg
popa
adc
jge
sub
rcrl
mov
push
inc
rcrb
mov
cli
cs
rcrl
movsl
lret
push
das
cli
push
inc
test
aas
xor
clc
inc
enter
dec
repz
in
aaa
notb
cld
lcall
outsl
call
push
aas
sbb
lea
mov
insl
sub
negl
movsb
xchg
pop
rcrl
test
das
mov
xor
sbb
xchg
jne
ret
pop
or
dec
fldt
inc
test
lods
adc
add
jl
imul
popa
push
iret
movsb
sahf
test
pop
add
lret
arpl
xchg
sbb
and
test
and
push
aam
mov
push
cmp
jg
jb
inc
mov
xchg
mov
pop
or
dec
cmpsb
popl
addr16
xor
mov
xchg
xchg
mov
out
call
bound
sbb
mov
cs
cmp
jge
test
loopne
pop
push
notb
jae
out
sbb
pop
cmpsb
repnz
mov
jecxz
push
std
fsubs
das
les
xchg
andb
test
mov
jg
lahf
inc
sbb
stos
push
cmp
push
sub
xor
pop
ror
xor
jg
es
xor
mov
stc
push
movb
iret
push
jb
movsb
data16
xchg
xchg
cmp
push
push
cmp
pop
sbb
cmp
jl
and
jge
into
and
adc
pop
and
and
imul
stos
sbb
pop
dec
sbb
jno
lcall
mov
sub
jl
and
and
out
xchg
lds
jae
or
mov
movsl
mov
xlat
jp
cmp
adc
jns
jl
and
xchg
mov
jg
gs
shll
data16
jg
sbb
push
shll
add
xchg
push
mov
clc
ficomps
push
sbb
fcoms
xor
xchg
and
adcl
inc
out
fldenv
sub
iret
sub
leave
ja
mov
jbe
mov
addr16
scas
cmc
sbb
push
add
jge
rorb
jg
push
pop
xor
add
dec
idivb
cwtl
sub
jmp
or
xor
aas
xor
or
add
mov
call
test
leave
mull
inc
add
out
stos
jmp
add
out
xchg
jnp
pop
mov
cltd
jle
in
xchg
test
fstps
sbb
in
lcall
jle
cmpb
lahf
sysenter
inc
sbb
and
pusha
xchg
jl
sbb
jne
pop
imul
sbb
shll
or
push
out
inc
inc
loop
or
das
sarl
fiadds
fldt
bound
arpl
enter
jecxz
cld
lret
adc
inc
inc
push
in
or
lret
add
daa
jmp
pusha
ficoml
repnz
roll
ljmp
jl
fimull
les
or
lret
push
dec
pop
nop
movsb
sbb
sbb
int
add
sub
or
int3
fstl
scas
cmpsl
sub
jecxz
sahf
cwtl
mov
pop
gs
jns
pop
out
movb
adcb
test
fisubs
mov
fiadds
in
imul
ret
and
daa
and
inc
mov
add
cmp
jae
xorl
mov
push
pop
pop
into
xchg
scas
sbb
push
rolb
pop
jnp
es
insl
push
and
cmc
dec
and
jp
xor
pop
les
jmp
xchg
adc
add
pop
mov
and
fldt
bound
sbb
mov
out
out
lcall
sti
scas
shrb
stos
mov
jl
subb
popa
sub
push
inc
xlat
mov
add
cwtl
aaa
lret
fsubrs
mov
sub
sbb
pop
ds
push
in
ljmp
mov
jge
mov
and
fldcw
mov
stos
insl
frstor
sbb
ret
div
insb
popf
nop
mov
repnz
into
and
or
cld
sahf
or
sbb
jb
sbb
ja
mov
imul
sbb
or
or
fmull
je
dec
stc
add
sub
sbb
out
out
cltd
movl
fsubrs
adc
cld
ficoms
shrd
and
add
scas
scas
loop
pop
in
mov
pop
loope
adc
or
aaa
mov
lods
sbb
lds
addl
mov
outsl
movsb
inc
push
mov
std
call
xchg
nop
outsb
cld
push
inc
or
fsts
dec
jns
xor
jns
add
fmuls
js
stos
les
pop
leave
mov
hlt
xchg
cs
fwait
xchg
outsb
or
jp
lods
stos
cmc
push
inc
aad
adc
addr16
outsl
add
push
loopne
imul
movsb
mov
adc
and
enter
and
das
call
repnz
cwtl
inc
gs
sub
xlat
sub
push
push
insb
xchg
mov
jg
add
or
imul
add
cmp
mov
inc
dec
sbb
leave
addr16
insl
fnstcw
sbb
or
mov
lahf
loopne
popa
shl
mov
or
test
sub
or
stos
or
sub
jnp
or
ljmp
cltd
enter
push
add
mov
in
sub
xor
dec
adcb
inc
adc
ss
mov
xchg
pop
fcompl
pop
in
or
xchg
mov
sbb
sbb
outsl
sarl
xor
xchg
or
xchg
btr
popf
dec
and
sti
test
mov
inc
jmp
pusha
and
sarl
jle
outsb
test
add
inc
bnd
mov
cld
push
mov
bound
dec
xor
adc
sub
dec
outsl
mov
adc
jmp
pop
adc
fidivrl
xchg
adc
pop
fldt
mov
inc
push
imull
adc
mov
inc
push
inc
sbb
jg
pushf
frstpm(287
bound
fwait
cmpsl
mov
mov
dec
or
sbb
mov
mov
push
inc
fidivl
inc
scas
push
inc
or
dec
icebp
addr16
scas
fidivrs
fwait
out
adc
xlat
or
inc
lods
fmuls
mov
incl
cld
jo
in
sub
jno
inc
push
into
lods
gs
out
roll
push
sahf
pop
ds
or
lea
dec
jge
add
dec
cmp
popa
cmp
jg
fdivl
and
lock
test
test
pushf
push
dec
mov
fistpll
mull
xor
ljmp
xchg
xor
ret
jno
adc
leave
sbb
or
call
repz
frstor
sbb
in
sub
xchg
into
sub
jne
sbb
sar
hlt
xchg
in
sarb
scas
sbb
inc
jne
inc
test
jno
cmp
aas
ja
test
sbb
cli
addr16
test
jl
movsl
outsl
movsb
popf
pop
mov
xor
ds
fldt
cmpsb
psubw
movsl
das
test
test
call
rcl
call
xor
jcxz
test
sahf
jmp
xchg
push
add
stc
xor
in
fidivl
mov
out
lock
jns
mov
sbb
mov
test
in
add
jge
or
dec
sub
lret
popw
fists
xlat
test
push
xchg
js
jb
pop
push
ret
std
sub
aad
mov
fistpl
add
or
hlt
lods
mov
pop
lret
or
fldenv
jno
icebp
dec
in
sbb
dec
gs
add
adc
or
push
jns
or
mov
lock
sbb
arpl
push
mov
push
pop
test
adc
test
mov
push
or
pop
xchg
into
or
cmp
movswl
test
dec
fs
add
test
cmp
dec
cld
sub
jo
insb
add
shlb
testl
add
hlt
pop
loop
popf
mov
ss
add
pop
xor
cld
cli
shll
stc
fdivs
scas
add
jnp
jle
ss
add
dec
mov
cmp
mov
aas
inc
mov
repz
xor
xor
mov
loopne
jae
push
in
jns
sub
push
jge
lds
pop
mov
dec
cltd
cmp
cmp
std
shlb
imul
jo
int
das
mov
out
imul
xor
xchg
aaa
test
or
xor
pop
hlt
loop
inc
test
sbb
punpcklbw
xor
sbb
ja
and
repz
dec
xor
imul
cltd
xor
push
jmp
add
dec
jmp
loope
lret
hlt
mov
in
jbe
or
push
mov
and
shlb
and
lcall
ret
push
push
adcl
fcmove
add
and
fsubrl
cmpsb
scas
pop
pusha
add
outsb
std
insl
addl
pop
sub
pop
pop
sbb
scas
adc
cltd
hlt
push
nop
cmpsl
ret
rolb
rcll
and
push
mov
hlt
jle
pop
dec
test
popa
xchg
jecxz
mov
inc
or
jbe
jl
into
outsb
and
mov
mov
jo
test
cmp
sub
pushf
lods
fildl
int
add
or
sbb
ja
xor
add
mov
gs
cmp
mov
mov
or
pop
lcall
or
push
mov
arpl
push
push
stc
sbb
mov
test
pop
mov
cli
stos
xchg
daa
or
mov
imul
lods
hlt
xchg
cmpl
lahf
cmp
or
je
push
jno
push
xchg
push
aas
test
push
clc
add
sbb
out
sbb
push
jg
or
or
fwait
xchg
imul
pop
stc
fistps
ljmp
or
dec
xchg
js
ljmp
enter
mov
out
pop
adc
jne
dec
pop
push
mov
mov
outsl
pop
hlt
add
sbb
test
jnp
xchg
push
movsl
mov
sbb
les
cmpxchg
mov
pop
or
stc
sbb
or
sub
fistps
mov
addr16
out
push
aas
push
pop
pop
ljmp
sti
xchg
mov
iret
cmpsl
mov
sbb
pop
fs
mov
mov
cmp
xchg
sub
dec
outsb
rorb
iret
push
gs
arpl
daa
xchg
sarl
or
bound
das
jp
or
jmp
add
sub
adc
mov
push
xchg
andl
mov
cmpsl
fcmovnu
fptan
dec
cli
cld
dec
adc
fdivrl
aad
lret
inc
mov
push
fmul
mulb
out
push
icebp
jno
lock
sub
pop
stos
push
daa
or
mov
jae
mov
sub
into
repnz
flds
divl
jge
scas
loope
xchg
inc
pop
stc
scas
iret
fildl
dec
cli
subl
dec
sbb
incb
pop
xchg
add
test
inc
push
mov
jmp
stos
rolb
pop
add
clc
aad
int
into
sbb
mov
lock
test
push
sub
mov
fsub
sbb
mov
mov
lock
movsb
add
ficoml
mov
jnp
push
sbb
pop
xchg
lock
push
pop
dec
push
lea
sbb
imul
inc
xor
out
pushf
sbb
clc
bound
popa
in
xchg
jne
inc
jp
or
outsl
xchg
ret
lcall
aas
mov
mov
mov
fwait
in
pop
mov
sub
push
fbstp
xor
mov
mov
inc
inc
push
jb
sbb
pop
or
mov
loopne
lods
xrelease
pop
inc
je
das
mov
adc
adc
mov
cs
xchg
mov
imul
dec
add
fdiv
jp
add
cmp
mov
xchg
cmpsl
fdivrs
out
aas
popf
es
iret
rorl
push
push
mov
mov
xor
jmp
jmp
cmc
sti
push
mov
cmpb
xor
int3
aas
stc
lods
jbe
cmc
inc
inc
pop
xchg
gs
mov
push
xchg
hlt
sub
in
imul
in
jbe
cmp
sbb
mov
cmp
pop
sub
jo
cli
cmp
movsb
xchg
gs
daa
or
aaa
mov
aad
sbb
insb
xor
ss
adc
push
movsl
cs
push
lcall
mov
jle
xchg
adc
cmp
add
scas
push
test
fidivrl
mov
xchg
cmp
mov
mov
fbld
mov
mov
jnp
test
jl
out
fiadds
arpl
aaa
sahf
cltd
sbb
outsb
push
dec
inc
pop
dec
insb
sub
dec
push
inc
mov
mov
mov
xchg
xchg
daa
jno
lock
mov
push
sbb
push
mov
adc
pop
out
jns
inc
dec
mov
adc
mov
leave
adc
in
outsb
mov
cmp
cmc
push
loop
lea
adc
cli
dec
push
mov
mov
mov
fnsave
and
fiaddl
jbe
enter
push
and
mov
out
push
pmulhuw
dec
mov
ja
dec
sbb
mov
repnz
int
xchg
dec
lcallw
jecxz
pop
fstl
in
test
and
cmc
xor
repnz
popf
out
pop
pop
scas
bound
inc
xchg
sub
sarl
xchg
loopne
xor
stc
movsl
xor
jl
inc
out
push
dec
and
fwait
lds
cmp
or
dec
imul
leave
dec
inc
fstpt
xor
insb
popa
data16
icebp
mov
repnz
sbb
aas
in
sbb
mov
jb
sub
stc
add
sub
add
pop
xor
rcll
lock
test
fwait
lea
xor
xlat
sbb
js
pop
aam
mov
xchg
xorb
cmc
fldlg2
push
mov
stc
mov
lods
xchg
jns
shll
rclb
sbb
mov
push
xor
sub
test
sbb
add
inc
sub
imull
in
mov
cmpsl
jge
mov
fiadds
jo
cmp
inc
xchg
out
pop
lds
call
int
push
sbb
push
push
or
and
dec
or
xchg
loop
xchg
xor
shll
push
push
mov
jno
negl
xchg
js
sbb
jae
cmp
clc
sbb
shrb
push
jle
xchg
pushf
outsl
in
mov
jecxz
or
outsl
mov
sub
mov
inc
repnz
jns
cmp
clc
cmp
aad
jnp
loope
aam
jnp
rcrl
lds
dec
jne
adc
int
ds
movsb
mov
sbb
js
shlb
cmpsl
adc
les
mov
adc
rorb
shlb
pop
or
push
push
mov
dec
aad
cmp
xchg
fxtract
add
cmp
cmp
out
jl
popl
pop
dec
lea
ret
mov
or
cmp
cmp
insb
mov
cld
jbe
lcall
cld
pop
xchg
jl
jge
ret
test
icebp
push
xchg
jnp
xchg
cwtl
mov
jl
xchg
jp
sti
inc
loop
sub
mov
repnz
addr16
shlb
dec
mov
enter
adc
xchg
and
popf
inc
add
int
and
add
adc
imul
xchg
xchg
sub
dec
sub
mov
mov
sub
cmc
xor
and
sarl
ja
mov
add
jne
adc
sbb
mov
pop
inc
in
mov
adc
pop
cmpsb
cmp
imul
xor
movsb
cmpsl
cli
addr16
adc
jle
push
loop
movsb
push
addr16
mov
fwait
jle
add
gs
mov
jp
jge
out
inc
in
subb
je
sbb
push
fwait
jle
push
push
mov
fildll
sar
adcl
stos
cmp
test
ret
out
ret
insl
cltd
insl
and
insb
movsb
fcmovbe
cmp
dec
or
in
jp
jns
je
loopne
fsubrp
sbb
aam
shrb
xchg
mov
ljmp
clc
xchg
fidivs
test
fwait
xchg
push
shlb
test
ljmp
mov
out
cmc
icebp
outsl
aam
inc
popa
or
orl
int3
data16
daa
gs
ret
adc
xadd
inc
dec
roll
cmp
push
gs
mov
or
sarl
mov
or
cmp
jg
jo
stos
xchg
sbb
xchg
or
inc
lods
push
jne
xchg
sbb
xchg
and
insb
cld
mov
call
xor
addl
dec
in
aaa
or
pop
inc
outsl
sub
xor
mov
mov
pop
pop
lock
mov
or
mov
adc
xchg
mov
sbb
lods
cmp
lds
and
int
cmc
scas
das
sub
int3
dec
mov
add
mov
dec
imul
pop
cs
ret
and
int
roll
sub
pop
push
pusha
cmpsb
movsl
test
fcomps
nop
adc
arpl
adc
adc
cmpsb
subl
shr
mov
jp
adc
sub
or
pop
inc
int
dec
mov
jge
pop
pop
xchg
and
aam
xchg
inc
inc
ret
jb
popf
xchg
fstpt
aam
and
daa
xchg
mov
scas
out
mov
lods
dec
mov
jnp
sub
dec
imul
loop
xchg
sub
adc
popa
mov
les
int3
jmp
imul
add
inc
or
sbb
cmp
shr
xor
ffree
jg
dec
push
mov
xor
ljmp
xchg
movsl
rclb
mov
push
xor
xchg
scas
xchg
sbb
pop
fucomp
jne
and
push
stos
jno
xchg
cmpsb
xor
mov
cmp
jecxz
jmp
lret
add
inc
pop
sub
pop
call
pop
dec
lock
xchg
xchg
xor
mov
pop
add
mov
aaa
pop
jns
adc
and
dec
testl
shrl
dec
shr
aad
clc
pop
aaa
in
lods
outsb
int3
pop
dec
lcall
movsl
movsb
inc
mov
popf
xor
adc
mov
dec
stos
cmp
push
xchg
jo
jle
pop
outsb
jg
aaa
subb
mov
les
les
cmp
push
sbb
daa
in
xchg
add
adc
jl
mov
test
das
sub
adc
imul
jne
fadd
push
or
lock
cld
dec
in
push
mov
cmp
mov
test
test
into
xor
jge
mov
push
mov
jnp
or
push
xchg
cs
repz
inc
jge
mov
inc
dec
repz
jno
push
xchg
inc
popa
mov
addl
xor
test
pop
adc
jae
int
lret
push
jae
into
ja
sbb
aam
lcall
iret
outsb
imul
fdivr
shrb
dec
push
xchg
adc
xchg
repz
mov
rolb
scas
pop
fldcw
add
adc
aas
jle
cli
adc
or
mov
loopne
loopne
in
xor
inc
sbb
cmp
xchg
mov
adc
cld
hlt
mov
and
sub
js
popa
lret
xor
std
cli
aad
loopne
fistpll
cmp
xor
jo
push
mov
xor
sbb
scas
lea
mov
sbb
jge
cs
aam
jno
cmp
cmp
test
sub
pop
shlb
dec
sbb
inc
test
pop
sbb
adc
aas
xchg
int
pop
mov
xchg
test
push
inc
mov
out
add
mov
mov
cmp
inc
mov
stos
push
pop
mov
push
jmp
stc
xchg
adc
stos
iret
lcall
inc
xor
cs
test
loopne
fwait
push
pop
jno
sahf
imul
pushf
std
fldl
or
fsubs
inc
mov
shl
out
sarb
cltd
jb
xor
cmp
incl
stos
lds
idivb
jb
cmp
and
loop
pushf
mov
and
adc
shlb
lea
push
xor
mov
add
xchg
aaa
out
in
mov
shlb
mov
xchg
and
pop
or
mov
add
inc
mov
icebp
sahf
mov
orb
movsb
sbb
mov
inc
or
lret
pmuludq
gs
jl
jp
mov
cld
xchg
or
sbb
loopne
das
les
test
and
and
mov
push
xchg
cmp
cmp
sahf
pop
sbb
mov
dec
sub
outsb
sub
sbb
dec
mov
js
stos
popf
jmp
clc
js
mov
ret
push
aaa
sbb
and
adc
mov
sub
shll
sub
push
or
add
out
inc
cmp
clc
imulb
or
shlb
lea
adc
add
imulb
jg
gs
cmpsl
pop
rorl
mov
imul
lret
pop
in
es
xlat
mov
adc
test
sub
sub
roll
and
daa
aaa
insb
push
mov
fnsave
inc
test
and
pop
adc
fnstcw
mulb
and
mov
aaa
cmp
cld
aas
sbb
aad
aad
mov
jae
inc
aaa
xchg
mov
ffree
movups
xor
sbb
and
enter
js
fldenv
sbb
ror
enter
lret
sub
add
ljmp
jge
pop
int
xor
inc
mov
incb
jle
xchg
lcall
fcoms
mov
push
into
dec
mov
dec
pop
add
sub
xchg
xor
dec
addr16
jb
pop
dec
test
jmp
test
insb
dec
in
push
sub
cmpl
loopne
cmp
push
pop
push
ljmp
dec
push
test
or
outsl
arpl
addb
cmpsb
adc
fwait
mov
sbb
movb
lcall
repnz
mov
nop
xor
inc
pop
mov
sub
movsl
cmp
mov
sub
roll
outsl
cmp
sbb
imul
pop
movsb
dec
pop
lock
arpl
xchg
sbb
push
fisttpll
xchg
das
roll
push
xchg
out
lods
bound
pop
adc
inc
test
fisubs
pop
pop
sbb
fisubrs
xchg
jbe
jb
mov
jae
ljmp
popf
mov
adc
popa
outsb
mov
shll
test
sub
aam
mov
sub
mov
xchg
sbb
nop
push
adc
add
call
dec
clc
xor
mov
imul
mov
pop
leave
sub
add
notb
mov
sti
sub
mov
jle
int
mov
loopw
adc
pop
mov
hlt
sbb
add
xor
repnz
stc
adcb
cmc
adc
insb
push
xorl
cltd
imul
aam
iret
dec
pop
aaa
jno
scas
or
push
stos
xor
lcall
fstpl
mov
xchg
and
mov
mov
cltd
cmp
imul
add
ficomps
cld
xor
cmp
hlt
mov
jmp
push
push
mov
dec
add
jno
popf
stc
fbstp
adc
dec
sbb
mov
fsubl
jo
inc
sbb
pusha
leave
push
enter
iret
add
add
movl
xchg
sub
push
dec
pop
out
pop
dec
aaa
rorl
pop
lcall
aad
mov
adc
popa
out
or
shufps
popf
dec
js
repz
xor
mov
xchg
imul
and
shlb
inc
popa
call
dec
mov
enter
ljmp
cltd
movsb
pop
sbb
jne
cmp
push
aam
or
repz
shrl
stos
rorb
lret
inc
jae
xor
imul
xor
icebp
mov
fbstp
aam
add
xor
adc
xlat
xchg
jns
dec
and
xchg
sub
icebp
xchg
cmpsl
xchg
shrl
aas
xchg
outsl
mov
cmp
je
iret
popa
mov
cs
jge
inc
std
sbb
adc
or
jg
xor
fisubl
pop
das
fildll
or
es
test
or
xor
fsts
loopne
dec
ja
dec
mov
das
subb
push
call
fsubp
aas
fiaddl
pop
lret
push
xor
movl
xchg
mov
inc
mov
loopne
jl
adc
bound
dec
xor
cwtl
cmp
out
bound
lds
sbb
bound
mov
xabort
call
pop
mov
test
pop
pop
scas
je
add
adc
pusha
xchg
pop
das
inc
sub
pop
xchg
fisubrl
push
mov
xchg
js
test
fs
adc
data16
out
daa
aaa
xor
repnz
xor
pop
pop
or
and
scas
mov
sub
sahf
xchg
mov
pop
or
hlt
xchg
or
mov
les
pop
dec
lds
mov
mov
cmpsl
fisubrs
dec
aaa
fstl
xorb
rclb
cmp
pop
lcall
sbbl
push
mov
call
and
inc
jle
mov
into
lret
jne
and
ljmp
jbe
sub
xor
fucomip
popl
cmpsl
js
mov
lret
stos
lcall
jne
xchg
dec
test
inc
mov
mov
addb
inc
lret
nop
int
lods
flds
xor
push
inc
lds
call
fcmovu
xchg
mov
je
xor
dec
xor
push
pop
outsb
jle
movsb
scas
or
cmp
cld
inc
in
adc
clc
push
mov
mov
push
ss
rorl
mov
call
call
cmp
mov
cmp
mov
pop
jmp
cwtl
lret
xor
mov
sbb
out
add
pop
mov
jo
sbb
loope
mov
jge
jnp
imul
dec
ror
iret
fcomps
or
mov
jge
idivl
push
push
fcomi
sbb
push
movsb
mov
jg
xchg
test
sub
jmp
mov
mov
cmp
inc
loope
lret
and
xchg
mov
dec
loop
sbb
mov
popf
inc
loopne
test
arpl
or
sub
dec
in
add
int
mov
cmpb
mov
loope
cmp
xchg
sub
loope
add
iret
mov
imul
fcomps
popf
cwtl
outsb
popa
outsl
scas
mov
or
jle
sarb
sub
mov
cli
xor
and
jb
push
addl
shl
cli
and
enter
push
dec
sbb
inc
add
push
fs
je
es
out
sub
sub
pop
lds
repz
or
int
daa
hlt
xchg
imul
cltd
cltd
dec
jnp
lock
sbb
outsb
inc
add
add
loope
adc
clc
adc
mov
ljmp
lea
les
je
jmp
push
mov
sarl
xor
mov
pusha
shl
rcrb
fiaddl
cmpsb
es
lock
into
enterw
hlt
outsl
xlat
stos
mov
pop
out
cmp
imul
scas
xchg
jno
inc
or
sbb
inc
push
lods
shlb
mov
xlat
pushf
popa
loope
fadds
inc
xor
shll
cli
cmp
jge
sub
push
inc
ss
into
sbb
loope
aam
sub
push
push
lods
pop
push
rclb
push
cltd
aaa
xlat
test
outsb
repnz
imulb
xchg
or
lcall
xchg
adc
pop
cmc
lods
adc
sub
xor
test
inc
mov
mov
or
sarb
scas
fsubp
inc
out
or
push
out
mov
sbb
inc
pop
cwtl
mov
push
jns
inc
popf
cmp
cmp
js
xchg
icebp
xchg
js
testl
add
pushf
enter
jecxz
push
dec
cmp
mov
mov
out
jl
mov
mov
xor
out
sbb
lcall
mov
out
and
xchg
leave
sub
mov
jb
shl
mov
or
xchg
and
cwtl
pop
pop
lods
sbb
nop
inc
jle
cmp
mov
test
adc
xor
arpl
xor
mov
jb
mov
in
adc
dec
dec
jecxz
lods
push
aaa
xchg
mov
push
popf
push
inc
add
ds
enter
ret
sar
iret
repz
mov
dec
frstor
dec
movsb
jmp
lret
mov
imul
ja
xchg
dec
dec
imul
scas
mov
sub
outsl
push
cmc
inc
mov
cmpsl
inc
push
addl
or
adc
int
fstl
ss
inc
mov
cmpsb
or
mov
push
pop
mov
jbe
rorl
and
sbb
xlat
pop
nop
dec
mov
xor
push
out
or
cmp
aad
mov
and
pushl
addr16
or
dec
mov
adc
in
dec
sahf
call
imul
lds
pop
xlat
dec
js
mov
movsb
pop
pop
xor
ret
add
test
xchg
push
xchg
lods
int
xchg
mov
test
stos
mov
xchg
xor
lret
push
xchg
mov
ss
sub
ret
mov
and
inc
sbb
lret
pop
dec
imul
sub
ljmp
ficoms
stos
add
insl
shrl
jmp
jnp
mov
iret
addr16
scas
and
sub
shlb
xchg
inc
ret
gs
push
jae
mov
call
inc
cmp
std
xchg
mov
push
xor
aad
iret
mov
in
inc
test
fisubrl
add
jge
mov
mov
add
and
sbb
pusha
push
push
sti
xchg
mov
pusha
xor
or
mov
out
in
enter
mov
adc
jo
adc
stos
sub
mov
js
or
pop
xor
fdivs
aad
stos
mov
in
enter
roll
out
lods
loop
es
adc
pushf
sarl
push
sbb
iret
xchg
cli
mov
sub
pop
loope
inc
popf
bnd
insb
les
jns
scas
sub
lcall
mov
dec
inc
push
add
jp
and
pop
xchg
jp
sbb
xor
or
mov
and
enter
leave
sbb
dec
cmc
cmpsb
push
repnz
sbb
and
cs
mov
mov
mov
sub
pop
pop
das
stos
push
jo
lcall
clc
xor
ljmp
test
add
les
push
mov
dec
lds
jno
es
inc
xchg
inc
ret
icebp
ret
out
pop
ds
mov
xchg
mov
in
ja
lods
lret
xor
and
lods
or
aaa
jns
fmull
hlt
xchg
or
stos
pop
pop
jbe
fildl
pusha
stos
mov
inc
movsb
adc
cmp
aas
pop
loopne
mov
adc
adc
pop
jle
cs
aaa
push
pop
cmp
addr16
mov
push
rcrb
je
in
lret
arpl
mov
aad
outsb
int
outsb
adc
repz
shlb
stos
pop
add
xorb
dec
and
int3
mov
call
into
mov
xor
ja
add
aas
xlat
clc
pop
jae
or
sub
fs
pop
loop
fmul
add
inc
mov
sub
shrb
iret
cli
out
into
jno
mov
push
dec
enter
and
sub
lea
or
in
call
jmp
mov
jle
xchg
xchg
popf
cs
jne
sub
sub
adc
dec
cmp
mov
mov
aaa
sbb
rolb
push
lods
idivb
rcr
shlb
mov
jmp
or
pushf
push
mov
jle
mov
les
mov
xor
and
jo
mov
insb
add
fimull
mov
adc
mov
xor
push
nop
ret
loopne
scas
or
in
sub
mov
add
cld
jge
jb
movlps
or
hlt
bound
inc
lods
ljmp
invd
inc
or
ror
dec
cmp
push
mov
addr16
shrl
cmc
pop
inc
xchg
enter
sbb
cmp
pslld
sbb
inc
cmpsb
jecxz
add
or
xor
ja
cli
mov
add
hlt
andl
bnd
mov
jmp
pusha
out
push
out
ljmp
ds
dec
mov
adc
fs
and
xchg
jp
das
or
aad
fwait
iret
xchg
test
jb
push
pusha
les
shrl
gs
sub
inc
mov
lods
subb
or
push
in
or
repz
frstor
daa
sbb
in
cs
mov
push
sub
fdivp
jo
pop
pop
mov
adc
push
jmp
sub
fisubs
push
movsb
mov
and
xor
mov
test
cmp
sbb
jp
mov
leave
rcrb
xor
rcll
adc
pop
xchg
xchg
cmpsl
xor
stc
int
sbb
daa
fcomip
sbb
or
jae
gs
scas
js
loope
cld
push
mov
or
mov
or
xor
xor
xchg
or
jmp
out
in
cwtl
out
or
mov
decl
inc
mov
std
cmc
xor
ret
add
in
mov
mov
cwtl
xor
fwait
in
dec
xchg
mov
mov
stos
inc
push
push
test
adc
and
sti
cmpsb
andl
icebp
sti
movsl
push
xchg
repz
pop
fdivrs
push
mov
repnz
mov
adc
lods
jnp
cmp
shrl
fdiv
xor
mov
in
sbb
idivl
inc
lcall
out
jns
movsl
add
lret
xchg
jle
mov
lret
cs
mov
ffree
push
pop
lock
pop
adc
lods
test
push
sar
shrl
out
cbtw
xchg
jmp
mov
jb
in
mov
sbb
jmp
loopne
xchg
jb
dec
out
sbb
add
and
pop
jbe,pn
stos
sub
mov
lahf
testl
sbb
ss
sub
xchg
mov
test
lcall
cmpsl
lock
push
loop
int3
sub
daa
pusha
fdivr
push
and
lock
and
adc
xchg
add
xchg
int
add
cli
mov
lock
test
test
cmpsl
maxps
mov
xchg
stc
lahf
dec
cld
lds
in
cld
sub
hlt
xchg
jl
cld
mov
in
ds
sbb
jo
sub
icebp
aam
push
mov
stos
in
mov
test
pop
mov
mov
mov
mov
fmul
sahf
es
mov
jb
in
pusha
data16
out
insl
mov
jge
dec
repnz
pop
mov
push
mov
ret
outsb
and
mov
push
or
pop
jge
jmp
pop
adc
or
push
adc
and
ja
fdivrl
mov
in
xchg
jnp
jne
and
out
cmc
scas
clc
stos
pop
pop
push
mov
stos
mov
jo
iret
jne
in
in
jae
insb
sti
adc
movsb
sbb
test
dec
daa
stos
xor
pusha
insb
cmp
loope
xor
and
bnd
dec
cmp
pop
mov
imul
cmc
lods
xor
mov
movsl
cmp
pop
mov
inc
lea
movsl
popa
add
cmpb
stos
jle
sub
jp
mov
dec
notb
xchg
fcomi
or
xchg
enter
repnz
lcall
outsl
push
push
leave
sbb
xchg
int3
daa
pop
rorb
push
subl
add
sub
cmp
rorb
fisttpl
dec
loope
ret
xor
das
je
lds
in
jge
ds
mov
xor
dec
enter
pop
rcr
test
cmc
lea
cmp
sbb
add
test
int
pop
shrb
in
int
fcoml
mov
es
mov
fiaddl
mov
dec
scas
int3
mov
outsb
sub
fs
adc
sub
movsb
out
xorl
test
test
dec
xor
or
in
xchg
pop
ja
sbb
jne
mov
loop
jecxz
pop
fsubp
aam
cmp
ljmp
and
popa
lock
scas
leave
jp
pop
add
sub
mov
leave
mul
sub
inc
pop
jge
jnp
push
sahf
lea
dec
xchg
repnz
addr16
dec
push
mov
jge
pop
pop
aas
movsb
das
add
adc
clc
sbbl
sbb
std
mov
sbb
repnz
int
ss
inc
push
outsb
ret
call
lahf
or
stos
push
cmpsl
mov
sub
stc
inc
roll
imul
hlt
je
out
mov
jns
adc
dec
jle
cwtl
add
sti
jg
jmp
sbb
scas
sbb
fisttpl
mov
or
out
lahf
cwtl
aam
mov
mov
int3
jno
or
mov
dec
sub
movsb
fnsave
outsb
ja
pop
je
xchg
push
loopne
jno
dec
mov
sub
out
in
divl
sbb
fs
or
fisttpl
sub
lds
mov
sub
or
scas
xor
fwait
andb
jge
imul
daa
pop
mov
rcrl
push
mov
incl
rorl
or
mov
mov
xchg
outsb
inc
cld
cmc
out
stos
adc
test
ficompl
movq
mov
push
out
and
popa
add
int
sbb
inc
inc
inc
add
data16
aam
lret
adcl
adcl
scas
out
mov
xchg
mov
jecxz
repnz
adc
sbb
mov
mov
rcll
loopne
nop
ds
sbb
mov
test
jmp
clc
jne
mov
jae
pusha
sub
lahf
adc
jmp
push
out
roll
mov
scas
int3
mov
lock
xchg
ror
xchg
xor
xchg
xchg
nop
mov
mov
mov
push
enter
das
jmp
iret
xor
mov
mov
int3
mov
pop
mov
imulb
iret
and
dec
lahf
xlat
mov
pop
lahf
repz
daa
fwait
aas
sub
sub
inc
je
add
push
insl
inc
and
push
int
ljmp
js
pop
mov
or
jmp
sub
mov
sbb
push
xchg
out
loopne
push
sbb
ja
lea
cmovle
scas
ja
rcrb
push
dec
ljmp
push
xlat
cwtl
fucomp
dec
icebp
in
sarb
dec
mov
jg
mov
sahf
cld
adc
sub
dec
inc
test
inc
xchg
mov
xchg
cltd
cmp
or
push
or
icebp
test
cs
mov
push
test
lcall
push
or
lcall
xchg
sub
jmp
adcb
push
add
sbb
mov
subl
test
imul
add
mov
mov
leave
mov
cmpsb
mov
test
jle
call
notb
lea
cs
int
dec
dec
sub
adc
or
add
and
out
ljmp
sbb
int3
xor
mov
test
aam
push
jnp
pop
fs
jecxz
inc
nop
jg
cmp
popa
jo
cld
xor
pop
repnz
pusha
addl
dec
cli
adc
xchg
or
dec
mov
adc
ds
mov
sub
call
cld
jnp
ret
lock
jmp
sbb
scas
xor
and
loope
inc
push
mov
inc
add
mov
mov
shll
lret
hlt
mov
xchg
ja
cld
roll
imul
and
mov
subb
out
and
loopne
sbb
mov
sub
xchg
sti
leave
ret
insb
fiadds
outsb
insl
xchg
je
mov
idivl
loop
push
iret
mov
add
inc
enter
fbstp
leave
cmp
or
add
mov
add
xchg
nop
jns
xor
mov
mov
popa
bound
xchg
shrb
jmp
pop
ret
out
fmul
sbb
insb
aad
jb
pop
push
cli
sbb
push
push
inc
insl
adc
adc
or
out
adc
cmp
jae
jnp
sbb
add
shl
xor
adc
pop
sahf
dec
mov
and
push
and
mov
push
cwtl
clc
adcb
fildl
xor
push
jmp
cmp
mov
cmpsl
insb
push
fcompl
test
call
clc
mov
je
mov
jg
add
xor
scas
in
addr16
pop
add
es
cmp
cld
jl
cmp
int
insb
sbb
jl
cmc
insb
mov
clc
in
pop
cld
call
lods
iret
cwtl
push
lods
fs
mov
lods
fstpl
push
sub
insl
hlt
loope
sub
push
sbb
in
adc
cmp
lret
jl
dec
xchg
fchs
xchg
mulb
test
dec
ret
in
lcall
in
addl
hlt
pop
arpl
leave
adc
enter
cmp
addl
pop
repz
pop
scas
dec
scas
repz
sbb
cmp
cltd
test
xchg
shrb
inc
iret
or
push
mov
aam
es
inc
push
test
outsb
lret
dec
fcmovbe
clc
addr16
sarl
aad
cmp
pop
push
sbb
movb
aam
andl
dec
sub
rol
out
or
lds
loope
sbb
add
stc
loop
loop
fs
dec
ret
or
xchg
ret
or
in
adc
leave
lock
cld
bound
mov
xchg
dec
test
mov
data16
push
push
cmpsl
dec
xchg
inc
jno
enter
xchg
sub
mov
mov
mov
add
movsl
imul
les
andb
ss
pop
leave
mov
insl
xor
scas
push
arpl
sub
adc
cmp
cmc
xor
mov
adc
cmp
xchg
pop
cltd
adc
fdivp
lds
scas
mov
jb
in
ljmp
cmc
pop
fisttps
adc
adc
adc
inc
iret
pop
negb
inc
popa
adc
cmp
in
xor
ds
lods
xor
filds
cmp
fs
cwtl
and
in
nop
sub
bound
cltd
mov
sbb
xor
popf
stos
inc
adc
dec
xor
repz
pusha
std
sub
mov
outsl
sub
inc
mov
lret
shl
sahf
rcl
cmp
test
clc
lods
cmp
arpl
and
and
faddl
pusha
das
and
xor
push
add
cltd
add
pop
jecxz
dec
sub
and
jmp
leave
inc
test
push
xchg
daa
iret
mov
sti
mov
add
inc
ret
outsl
insl
outsb
insb
mov
inc
test
inc
out
and
iret
orl
xlat
cmpsb
jmp
jne
gs
pushf
jp
cmc
hlt
mov
mov
das
jo
push
pushf
out
scas
jno
add
xchg
mov
mov
insb
in
dec
inc
imul
push
shll
xor
adc
stos
imul
and
pop
pop
mov
add
cs
jne
js
lret
cmp
mov
xchg
test
mov
imul
shr
out
inc
inc
mov
insl
adc
leave
and
imulb
adc
add
inc
dec
fnstsw
decl
push
dec
and
add
cmpxchg
pop
mov
bound
inc
fdivrl
sti
lcall
mov
leave
mov
push
mov
std
rolb
lcall
mov
jo
inc
dec
mov
dec
cmp
test
dec
mov
inc
les
mov
xchg
mov
adc
mov
xchg
fistps
and
or
mov
pop
in
jecxz
adc
xor
cld
xor
or
test
xchg
jecxz
and
push
mov
loopne
jmp
mov
lods
inc
insb
or
push
aam
mov
or
sti
sarl
orl
and
dec
aas
xchg
pop
mov
jmp
cmp
xor
movb
jl
mov
insb
pop
and
outsl
in
push
xor
icebp
xor
mov
fdivr
repnz
cmpsb
push
cli
test
bound
addr16
sbb
add
pop
cmp
xchg
dec
arpl
cs
mov
bsf
rol
hlt
jbe
aaa
aaa
jl
test
fwait
xlat
cli
pop
imul
insl
pusha
fwait
cltd
push
fwait
cmp
push
mov
lods
movsb
jae
jne
scas
call
adc
hlt
dec
mov
je
adc
js
push
lea
push
push
repz
in
jo
cwtl
mov
and
push
mov
sbb
gs
clc
int3
mov
pop
xchg
xchg
call
add
outsl
mov
cltd
jg
rcll
cmp
imul
movsl
cmc
mov
fs
in
pop
sbb
shlb
inc
push
inc
mov
hlt
mov
xchg
or
xor
stos
mov
xchg
mov
std
fistpl
dec
mov
xorl
jle
vpaddusw
sbb
mov
orl
sub
or
ja
jo
inc
adc
dec
dec
in
and
outsl
sub
mov
pop
push
or
ret
jnp
int
mov
sbb
shll
mov
out
insb
cmpsb
and
mov
stos
mov
repz
ljmp
dec
jp
fidivl
pop
mov
add
hlt
jnp
fsubr
pop
movsb
xchg
cmp
push
outsl
mov
out
xor
adc
jp
adc
stos
mov
cmp
stos
mov
cmp
mov
jg
jle
fs
rclb
dec
push
aas
mov
mov
outsb
clc
push
decb
test
pop
and
jbe
add
out
popl
mov
mov
movsl
mov
xchg
dec
loope
cs
popa
loopne
cmpsl
popa
inc
addr16
cli
and
cmpsl
adc
jmp
push
adc
sbb
and
dec
insl
or
and
cmc
aad
push
sbb
pop
and
adc
xchg
icebp
cmp
inc
and
gs
pushf
mov
mov
jno
notb
lahf
adc
pushf
pushf
or
scas
dec
cs
adc
mov
lret
push
repz
push
and
push
scas
jecxz
gs
sbb
pshufw
shlb
pushf
jae
fldl
in
leave
ret
cmc
inc
shr
pop
scas
pop
xchg
add
sbb
xor
and
cmc
inc
andl
fstl
stos
lahf
movsl
and
test
cmp
pop
cmpsb
pop
jno
xchg
mov
push
js
rcll
pop
test
filds
mov
cli
ljmp
sbb
inc
lahf
ljmp
stos
add
mov
pop
jb
sti
pop
xchg
xor
fsub
sysenter
sarl
fisttps
cmp
and
daa
loop
push
nop
leave
xchg
xor
sub
xchg
mov
arpl
psrld
jle
pop
std
imul
and
cltd
cmp
fists
adc
arpl
pushf
xchg
es
sbb
loope
popa
mov
hlt
mov
add
sbb
scas
divl
xchg
mov
push
lahf
flds
pop
mov
in
jnp
movsl
fs
push
fisttpll
xchg
imul
dec
ds
js
pop
mov
loopne
sub
xor
cmc
fdivrs
inc
loope
xchg
lret
shll
cmp
cmp
xor
negl
adc
xor
popa
js
mov
lds
lret
iret
rcr
push
vcmppd
and
jp
lcall
push
cmp
rolb
mov
push
cmpsl
in
and
loop
mov
cmp
dec
repnz
stc
push
rcrb
rcrb
loopne
lock
call
aas
lea
push
jne
or
imul
ret
out
mov
adc
dec
mov
mov
orb
pop
in
mov
cmp
clc
int
jno
fisttps
sbb
cmp
orb
mov
lret
pop
iret
roll
jmp
and
movsb
cli
add
sbb
sarl
lods
aad
mov
and
lock
test
mov
sub
dec
jmp
cmpl
shll
repnz
cltd
and
push
out
cmp
xchg
or
fisttpl
push
in
xor
in
add
xchg
or
gs
imul
pop
and
xchg
push
lret
xchg
sbb
ss
sub
sub
dec
imul
dec
ud2
aad
dec
mov
inc
hlt
jns
xlat
lcall
add
push
stos
iret
pop
push
cmp
pop
mov
pop
sti
in
or
std
test
hlt
xor
sub
gs
lahf
mov
fcomip
call
mov
pop
dec
loop
inc
subl
arpl
and
jb
loope
push
cmpsb
jg
jg
enter
jb
dec
in
stos
cs
add
std
push
inc
sbb
xorb
lcall
movups
cld
lret
or
sbb
ret
mov
insb
imul
dec
dec
fildll
rcl
sbb
pop
inc
insl
mov
sbb
jg
popa
xor
adc
cmpsl
nop
mov
int3
pop
add
in
cs
pop
andl
gs
imul
mov
mov
ja
divb
insb
stos
fsubr
and
es
mov
sbb
test
je
ficoms
loopne
sti
push
popf
ljmp
in
adc
cld
dec
jo
push
addr16
add
imul
divb
lcall
addl
or
popa
cmp
jge
inc
push
push
rorb
test
pop
fidivrl
popa
jns
jmp
push
xor
js
jle
or
and
push
adc
xchg
aad
cld
push
js
andb
addr16
mov
test
mov
xchg
lcall
ljmp
xor
jg
add
out
and
mov
int
add
sbb
mov
sti
mov
dec
push
push
push
out
movsl
xor
les
jmp
test
or
cmp
sub
jae
sub
imul
dec
lcall
movsl
push
hlt
pusha
push
cwtl
xchg
shrl
push
cmp
mov
mov
shrb
movsl
adc
jg
imul
test
mov
jecxz
and
pop
scas
add
mov
addr16
stc
rolb
pop
cwtl
sbb
test
sub
lahf
mov
out
jl
or
sub
mov
push
mov
jo
xchg
sti
enter
push
xchg
test
pushw
dec
or
lock
scas
and
ret
into
sbb
lds
xchg
sbb
int
int3
into
mov
icebp
jo
push
mov
add
inc
movsb
add
test
inc
push
lods
pop
add
xchg
lds
add
lret
dec
jmp
sub
fldt
aad
jnp
jmp
sbb
fldt
mov
dec
nop
or
mov
addr16
inc
dec
pop
dec
xor
pop
pop
dec
push
out
lret
rclb
inc
pop
xchg
cmc
bound
xchg
sub
icebp
sbb
xchg
les
or
daa
adc
mov
bound
xor
push
jge
lea
xchg
dec
sbb
sub
popa
int
repz
or
lcall
ret
sbb
ja
mov
xchg
loope
mov
fdivs
cs
dec
add
adc
push
inc
dec
jb
push
mov
rcl
aaa
dec
orb
popa
dec
fisubrs
or
and
pop
jb
adc
adc
add
pop
cs
sbb
int3
insl
xorb
dec
pusha
rclb
aas
arpl
push
in
scas
xor
gs
js
push
mov
mov
loopne
aam
jecxz
popa
imul
mov
cmp
sar
add
cmpsl
jle
imul
push
imul
lods
std
ror
movb
mov
dec
or
ja
fstpl
scas
outsb
fcoml
pop
jo
mov
lods
jp
in
or
hlt
es
add
sbb
adcl
mov
insb
mov
mov
ret
sbb
inc
inc
lea
lods
mov
sbb
repnz
mov
pop
daa
ja
sub
push
cmp
cltd
das
aas
test
jns
lods
mov
insb
inc
test
int3
cs
fwait
push
or
imul
in
push
hlt
jg
call
pop
xchg
inc
or
push
daa
adc
or
jle
mov
adcb
clc
xlat
das
and
mov
adc
addr16
cmp
push
adc
fs
xchg
jae
fs
imul
xchg
fnsave
call
imul
pusha
add
fisubs
adc
pop
out
les
lahf
pop
sub
ja
cltd
fcomi
mov
outsl
negl
clc
xchg
lods
and
or
jl
inc
loope
dec
or
sub
test
les
nop
xchg
aad
sarl
int3
les
call
pop
pop
loopne
mov
adc
lds
mov
fcompl
jno
adc
pushf
imul
cmp
test
push
ret
jmp
cld
shrl
or
push
clc
dec
lock
movsl
addr16
leave
mov
mov
jl
sub
cld
shl
fcoml
dec
inc
push
ja
mov
and
add
dec
xor
push
subl
add
ja
xchg
lcall
jo
mov
adc
inc
aad
imul
and
pop
ss
cmpsb
inc
outsb
xchg
jge
in
fwait
cmc
out
enter
ja
jge
push
rcrb
pop
xchg
gs
fbstp
cld
cmp
push
clc
mov
insl
push
inc
fs
scas
add
xor
ss
cmp
push
xor
cmp
mov
fs
mov
scas
mov
insb
dec
es
and
enter
jne
add
adc
pop
and
fsubrl
aaa
loopne
xchg
adc
inc
jg
je
sbb
xchg
repz
cwtl
dec
wbinvd
subl
push
mov
jne
sub
stc
mov
mov
jcxz
jne
jb
xchg
test
lahf
sbb
and
or
loopne
adc
xchg
scas
pop
jbe
sub
arpl
add
mov
add
pop
xor
jecxz
sub
sbb
stos
push
add
inc
sub
loope
xchg
xlat
dec
pop
out
dec
mov
aas
lret
mov
push
subb
dec
push
cmp
enter
jnp
inc
int3
pop
xchg
aam
out
test
mov
inc
nop
xchg
jmp
mov
xor
jg
cmp
gs
dec
push
xor
in
sub
out
sub
push
jno
sub
fwait
clc
cmp
jno
ret
mul
sub
into
mov
inc
jo
gs
iret
dec
adc
sub
std
pop
popf
and
adc
stos
clc
int3
push
pusha
ret
cmp
sbb
arpl
dec
and
std
lock
jg
fadd
xchg
xor
icebp
rorb
stc
adc
arpl
pusha
pop
xchg
cwtl
mov
sbb
dec
popf
xor
xor
jne
cmp
cmp
jne
clc
sbb
xor
xorl
gs
xorb
addb
add
cld
jo
sub
pop
lcall
adc
adc
sbbb
idivb
jae
adc
dec
cmp
sbb
jb
stos
mov
and
test
dec
jo
rcrl
jne
movb
sbb
inc
leave
bound
push
daa
add
pop
xchg
jp
cmpl
test
pusha
sti
mov
pop
cltd
sub
jns
push
fsubs
or
jl
js
adc
sub
stc
pushf
dec
repz
mov
arpl
push
pop
jns
stos
pushf
jmp
add
xchg
xor
je
stc
pop
add
pop
mov
jbe
add
clc
std
cmp
ficomps
sub
jb
xor
push
psubusb
in
shlb
jb
inc
or
pop
push
jmp
push
add
dec
rcll
sbb
inc
imul
add
dec
loop
lahf
pusha
lret
orl
sbb
jle
or
pop
nop
dec
sbb
and
lods
iret
mov
sub
mov
rcr
adc
outsl
rcl
and
adc
loop
jo
ss
xor
ds
push
xor
mov
or
cmp
xchg
scas
les
inc
ds
call
xchg
sub
bound
and
pop
dec
jb
dec
insl
movsl
and
mov
push
xor
orb
pop
loope
dec
clc
mov
dec
dec
pop
push
lds
push
jecxz
lea
jmp
push
xchg
pop
imul
cmp
add
fldenv
xor
pushf
call
xor
repz
and
push
test
fldln2
lcall
mov
mov
fidivrl
in
inc
imul
in
jo
cmc
push
psraw
arpl
jl
add
mov
jne
fidivrs
lods
nop
push
loope
jb
cld
lock
leave
sub
gs
pop
scas
lret
xchg
add
add
pop
aaa
jmp
push
mov
loope
adc
iret
enter
xchg
lock
es
out
lock
mov
in
rorb
push
imul
enter
aad
mov
inc
xor
out
jne
mov
push
jnp
addr16
fcomi
and
add
push
xchg
pusha
or
push
fcmove
xor
xchg
call
adc
rcrl
fwait
adc
mov
mov
sub
adc
dec
xchg
or
aaa
dec
fnsave
test
pop
lds
lret
stos
xchg
xchg
and
adc
mov
mov
sub
push
loopne
loop
lock
pop
fists
clc
sub
pop
std
xchg
fsubr
dec
es
jno
inc
fwait
jge
adc
mov
test
lret
push
xor
divb
xor
jae
sbb
jno
push
fiaddl
stos
adc
adc
mov
popf
stc
jns
and
ja
or
mov
or
cmpsl
push
cld
fwait
add
ds
popf
pop
dec
fprem1
adc
leave
test
and
jae
pop
mov
cmpsl
fdivrs
cltd
mov
lds
add
fstps
xchg
pop
inc
push
testl
add
aad
adc
out
sahf
ds
iret
popf
and
mov
mov
fwait
push
fcomps
and
inc
outsb
mov
and
pop
mov
addl
fwait
loop
sbb
ljmp
or
add
cmp
mov
add
leave
ret
movsl
addl
ljmp
test
mov
push
ljmp
push
push
cmpsl
pop
push
mov
mov
sbbl
dec
sub
lahf
or
cmp
push
add
jb
mov
cmp
shlb
jg
sbb
push
ss
and
jg
dec
mov
adc
xchg
arpl
repnz
or
adc
fs
mov
pusha
dec
pop
and
in
or
out
outsb
mov
pusha
es
inc
fcoml
cmp
mov
and
aas
pop
lea
cld
sub
sbb
lcall
xor
xorb
xorl
sub
scas
adc
push
lret
ja
jmp
in
or
jl
sahf
test
xor
mov
repnz
movsb
push
inc
repnz
push
cmp
or
and
enter
or
sub
lahf
jb
inc
jge
scas
in
cmpsl
clc
fisubs
push
push
adc
mov
mov
push
cltd
inc
jl
out
shlb
pop
jp
stos
lds
aad
push
cmp
sbb
cli
cmpsb
lea
cltd
fldt
ds
adc
dec
call
in
dec
data16
gs
bswap
jnp
add
repz
xor
sahf
xor
push
int
in
popa
sbb
pop
xor
bound
stc
insl
out
mov
outsb
jmp
adc
es
mov
adc
push
orl
movsl
push
or
sub
aaa
into
dec
fldenv
sbb
scas
daa
inc
mov
popa
test
and
pusha
push
hlt
add
mov
stc
mov
sbb
out
and
push
hlt
fdivs
ss
dec
push
pushf
jnp
je
je
jecxz
idivb
popf
inc
test
xchg
dec
or
sbb
int3
dec
adc
incl
insb
inc
mov
repz
aad
test
jg
lea
xor
loope
adc
adc
pusha
call
scas
ficoml
mov
cltd
hlt
scas
cmp
in
lahf
or
pop
or
mov
mov
insl
xchg
test
push
repnz
lea
push
cmp
mov
cmpsb
out
jg
xor
repnz
sub
xchg
mov
push
ds
xchg
push
js
or
xor
and
xor
leave
lret
adc
hlt
cwtl
test
mov
mov
int
push
outsl
mov
adc
dec
adc
mov
dec
and
jle
jge
bound
xor
popa
adc
lods
leave
push
and
push
xor
xchg
pop
lds
jno
cs
loop
lret
dec
cmpl
xchg
and
pop
movsl
pop
push
mov
outsb
or
or
xchg
popa
in
icebp
jnp
frstor
sub
nop
std
cmc
fidivl
ffree
pop
jle
out
scas
ds
negb
scas
aas
ss
mov
push
jp
lock
xor
or
push
hlt
sbb
mov
mov
cltd
int3
pop
mov
aaa
and
aas
cs
roll
push
popf
or
dec
ljmp
out
daa
sbb
ficoml
outsl
iret
cltd
mov
mov
in
mov
adcb
lahf
cmp
mov
add
adc
pop
mov
jecxz
std
data16
dec
dec
dec
push
inc
dec
pushf
sbb
xchg
xchg
dec
inc
pop
popf
pop
icebp
sub
or
loop
mov
test
pop
cltd
lret
mov
cmp
js
push
insl
mov
mov
xor
push
xor
das
nop
mov
push
xor
xor
jbe
push
xchg
mov
repnz
xchg
pop
cli
popa
sbb
test
loope
dec
dec
mov
mov
xchg
into
inc
lcall
sarb
into
fwait
push
sub
test
in
push
pop
std
pop
in
pop
shlb
imul
jnp
mov
xchg
pop
ret
mov
std
pop
pop
gs
jb
insb
cmp
ljmp
ret
add
push
hlt
aam
pop
inc
jmp
inc
mov
adc
mov
jle
dec
pop
mov
and
movsb
out
push
push
cmp
add
addl
jmp
pop
sub
out
lods
cmpsl
test
fwait
in
cwtl
push
cs
js
xlat
mov
cwtl
sub
scas
sub
cmp
xchg
ljmp
xchg
xchg
mov
mov
adc
pop
pop
icebp
int
shr
leave
clc
outsl
enter
adc
xor
repz
lcall
add
xor
hlt
cli
cmpsb
rcll
adc
xchg
icebp
gs
das
inc
cmc
pop
fs
jbe
xor
loopne
sub
int
in
jne
cmpl
push
mov
fists
pop
shlb
xorb
imulb
mov
dec
in
in
std
xor
sarb
dec
mov
jne
push
sub
or
popa
mov
add
fsts
rolb
ja
xchg
test
inc
xor
xor
xchg
mov
mov
push
popf
cmp
rol
and
mov
pop
push
lahf
scas
aam
dec
rcll
dec
pop
outsb
sub
add
fwait
jne
xchg
or
sbb
mov
popa
fmuls
inc
add
out
insl
inc
rorl
adc
into
push
cmp
shll
imul
push
rclb
std
jg
daa
and
je
xor
xor
arpl
push
inc
push
out
adc
repnz
cmp
mov
push
xor
mov
dec
rol
popa
test
mov
push
adc
jle
rolb
mov
scas
and
test
imul
scas
jg
cmp
stc
jns
push
fnsave
xor
or
mov
cltd
pop
xchg
jmp
fsubrs
ja
xchg
sahf
jle
jo
add
hlt
mov
rclb
jp
cmp
dec
xchg
mov
adc
ret
jle
or
sub
loope
push
add
cmp
or
add
jle
jno
iret
xchg
xchg
adc
out
pop
rclb
popa
pop
cli
and
pushf
shrb
push
inc
mov
mov
jecxz
pop
mov
sarl
add
cmc
push
add
fdivl
ficoms
mov
and
pop
test
jnp
or
shl
ja
lods
aam
xor
mov
lea
daa
sbb
inc
je
xchg
aas
fsts
mov
scas
sbb
movsl
jnp
in
mov
adc
decb
xchg
inc
clc
and
jbe
insl
dec
movsb
push
insb
pushf
repz
adc
cld
cli
push
icebp
xchg
ret
ret
sub
and
pop
pop
push
add
loope
ds
jnp
in
cmp
mov
xchg
push
rcl
call
mov
pop
jbe
xor
mov
out
mov
push
clc
lret
xchg
std
mov
repnz
mov
and
cld
sbb
nop/reserved
das
clc
push
add
push
mov
xchg
mov
push
pushf
sbb
shrb
cmpsb
cmp
rclb
dec
lcall
inc
insb
adc
aam
or
or
adc
in
sbb
mov
lcall
icebp
cs
cmp
xchg
push
xlat
dec
movsl
jmp
fnsave
fwait
fs
push
jno
xchg
pushf
push
ljmp
mov
imul
dec
leave
test
fcomi
into
sti
jb
addr16
inc
imulb
addr16
nop
daa
mov
cmp
or
enter
jns
or
loope
add
fdivl
lret
mov
xchg
sbb
mov
cli
ds
mov
and
jno
cmp
cmp
mov
inc
cltd
adc
push
sbb
aad
aas
add
cli
xchg
sbb
es
lcall
mov
adc
mov
lea
mov
xor
repnz
cmp
lcall
das
sub
aad
xor
mov
das
push
testb
push
in
pop
or
mov
jg
clc
cwtl
inc
jae
jns
inc
shlb
push
push
sbb
xor
mov
insb
jg
lret
xchg
jb
adc
adc
mov
jecxz
loop
xchg
lret
dec
repz
mov
ss
push
addr16
lret
scas
push
mov
loope
pop
adc
roll
push
sbb
cli
sahf
and
in
notb
das
scas
and
mov
rcll
pop
je
and
pusha
push
sbbb
imul
lds
fstps
ja
add
cmp
idivl
cmp
adc
sub
cs
or
cmpsb
movb
cmpsl
cmpsl
mov
jb
add
cmpsb
dec
loopne
adc
outsb
adc
xor
lds
test
str
fmull
dec
mov
jns,pt
lds
jbe
jge
test
stos
add
push
jl
pushf
or
loop
sbb
lods
ja
mov
cmp
sbb
fmuls
adc
mov
sub
pop
add
cmc
addr16
push
mov
cmp
mov
hlt
data16
loop
insl
pop
lods
shll
out
int
dec
push
mov
int3
push
mov
mov
xlat
cmp
push
outsl
shl
dec
dec
xchg
sbb
ret
dec
adcl
or
cs
cmp
cs
jnp
jnp
ds
inc
pop
adc
nop
sub
sub
cmp
mov
iret
xor
dec
enter
cmp
faddl
pop
lods
fldz
mov
jg
adc
cmpsl
xor
out
cmp
imul
mov
dec
cld
push
dec
push
popf
incb
or
dec
mov
sahf
mov
cmpsb
sti
xchg
out
je
jae
sahf
fstpl
ja
imul
lea
adc
inc
mov
adc
lock
stos
pop
push
and
mov
sbb
rcr
aad
jl
cwtl
negl
movsb
nop
fidivrl
sti
int3
jp
stos
jle
nop
jnp
xchg
pop
push
idivl
fimull
mov
ss
arpl
adc
push
loopne
cld
jp
fmull
mov
jae
rorb
fidivs
mov
jle
sub
data16
repz
mov
inc
inc
xlat
int3
push
fldl
cmpsb
mov
inc
xor
inc
pop
mov
cmp
mov
inc
movsl
xor
xor
adc
adc
add
or
std
add
shll
mov
push
pop
xor
lret
adcl
jb
jmp
push
push
loop
push
push
cmp
xor
aaa
repz
xor
inc
imul
jle
jmp
xchg
mov
stc
notl
loopne
int3
xchg
dec
xchg
xor
sbb
xchg
test
int3
jp
ret
push
frstor
push
mov
and
cmc
jg
mov
cmp
mov
or
and
lock
fnstcw
roll
mov
rcll
adc
and
pushf
xchg
jnp
mov
sbb
stos
pop
adc
lahf
xor
cmp
add
mov
imul
bound
enter
aas
xchg
movsb
lcall
push
sar
mov
mov
lock
lods
jmp
ret
imul
xchg
sub
ss
xlat
push
dec
mov
rcrl
push
loopne
mov
data16
xor
and
add
icebp
aad
popf
in
xor
sub
pop
xchg
inc
or
repz
sbb
push
jb
inc
pop
outsl
testl
fmul
push
mov
gs
xor
xor
dec
and
mov
sbb
mov
and
and
jb
mov
or
dec
negb
xchg
lret
mov
mov
cmp
and
fimull
cmc
js
push
mov
add
outsb
loop
xor
sbb
fldl
mov
push
lcall
out
sbb
flds
sbb
insl
frstors
sub
and
nop
mov
repz
sub
inc
test
popl
ret
jnp
push
mov
stos
andb
in
lahf
mov
xor
mov
leave
xchg
cli
lcall
scas
sub
test
sahf
sti
or
xor
cmpsb
test
xchg
pop
enter
mov
and
jmp
jns
cmp
pushf
in
push
adc
xor
inc
mov
xlat
call
push
cmp
imul
data16
inc
scas
sbb
push
mov
sarl
mov
lds
popf
mov
and
mov
adc
pop
inc
xchg
insl
adc
add
nop
scas
and
sub
ret
test
jg
inc
insl
xlat
daa
popf
dec
or
pop
fs
cltd
pop
data16
pop
outsl
mov
repz
fistpl
aad
aad
subl
cmp
icebp
push
cmp
mov
dec
test
mov
popf
mov
pop
and
movb
adc
js
and
loopne
pusha
cmp
mov
loop
fcoms
aas
ja
mov
shrl
push
jbe
sub
je
dec
aaa
aam
mov
lock
cmp
bound
cmpsb
cmpsb
and
jbe
cltd
add
push
and
mov
les
imul
dec
push
fsubrp
xchg
es
cmp
xchg
cld
push
subl
cld
and
jge
pop
dec
lret
sub
fsubrs
test
mov
dec
and
hlt
mov
push
adc
lods
mov
daa
jmp
sarl
inc
lret
out
jle
in
adc
xchg
pop
imul
loopne,pn
or
fcomps
sub
imul
xchg
jl
add
lock
and
cmc
pop
push
movsb
and
in
mov
push
rol
les
fildll
das
sub
inc
sbb
outsl
dec
pop
fimuls
rcrb
push
inc
cmp
inc
add
pop
jne
xchg
daa
xchg
js
inc
mov
inc
push
dec
mov
movsb
fisubrl
and
subb
sbb
pop
mov
inc
stos
dec
push
inc
out
fs
add
inc
push
xlat
imull
jnp
sbb
mov
add
lock
cmp
mov
movsb
out
pop
shlb
ljmp
mov
xor
stc
sahf
pop
ret
mov
or
inc
xor
push
sub
adc
sbbl
xlat
or
fyl2x
jo
faddp
jno
jecxz
jno
and
dec
hlt
pop
bound
add
jns
in
jmp
jp
cmp
and
fwait
inc
sbb
test
rcrl
sbb
pop
xor
ds
popa
jge
push
mov
mov
sbb
lret
xchg
enter
add
and
je
sub
push
fldt
pop
mov
inc
fldt
insb
mov
sar
push
xor
mov
out
out
lea
jae
dec
mov
push
jnp
cmpb
enter
or
scas
ljmp
or
xor
mov
notb
popw
xor
add
cli
mov
or
xchg
dec
int3
bound
cmc
cwtl
cmc
shlb
xchg
sbb
movsl
sbb
mov
inc
insl
in
mov
or
leave
jno
negb
xor
jg
xchg
lcall
jmp
jo
or
jmp
leave
jp
aaa
sub
push
hlt
fldenv
sbb
aaa
jb
popf
dec
faddl
adc
sub
dec
jns
lret
imul
and
int3
std
sbb
mov
lods
sbb
dec
lret
scas
cmp
cli
outsl
add
xlat
pop
add
sbb
or
mov
test
mov
je
xchg
pop
sbb
shrb
cmp
lods
mov
je
subb
and
or
ljmp
xchg
xchg
push
int
sub
cmp
sbb
movsb
xchg
test
jp
std
pop
fists
dec
and
or
adc
or
sbb
shlb
std
adcb
dec
mov
or
in
cmp
dec
fnstsw
call
ret
or
sub
add
adc
mov
outsb
loope
test
sbb
insb
jge
in
sbb
cmpsb
and
leave
fistpl
in
cmp
in
sub
sub
rclb
cmp
cmp
lcall
mov
mov
in
fadds
push
pop
cmp
add
mov
inc
cmpsb
stos
test
int
xlat
cli
xchg
clc
xchg
notl
push
xor
shlb
push
outsl
cli
inc
je
addl
dec
popa
sbb
pop
sub
jle
jg
mov
jno
jmp
jecxz
aas
leave
aas
shrl
test
fistps
cmpsl
mov
lods
push
xlat
add
subl
push
aas
and
cmpsb
jg
adc
pop
fadd
cltd
xchg
jb
insb
and
or
rcl
ljmp
icebp
js
mov
xor
mov
xor
jg
ja
or
or
mov
dec
inc
mov
mov
xchg
jno
out
call
insb
setp
cmovbe
jns
sbb
mov
sti
fucomp
out
dec
jl
cmpb
sub
sub
and
push
inc
inc
addb
mov
mov
mov
imul
inc
lret
div
add
rclb
push
cltd
ja
leave
push
lea
xorb
cmp
mov
xchg
adc
mov
in
mov
arpl
leave
sub
mov
lret
jae
jb
mov
jmp
scas
xchg
xchg
inc
popa
lcall
enter
inc
add
mov
iret
mov
loope
daa
mov
in
aad
ss
out
mov
in
scas
shrb
lcall
pop
test
push
push
inc
and
xor
insl
pop
out
insl
hlt
lods
cmp
scas
into
mov
jmp
mov
adc
xor
pop
cld
pop
mov
aad
mov
out
insl
inc
pop
add
dec
or
cmp
das
clc
in
negl
pop
scas
and
test
and
int3
cs
push
mov
scas
sub
sub
lahf
int3
imul
ljmp
jmp
mov
outsl
cltd
mov
iret
push
xchg
jg
or
idivl
push
mov
or
add
add
jb
std
cmp
add
addr16
scas
xchg
push
int3
mov
popf
sub
cmpsb
outsb
jge
js
in
test
pop
push
jae
and
out
int
cmp
mov
out
aaa
cmpsb
hlt
les
cltd
popf
add
add
jbe
into
fistl
rcll
stc
fcomp
out
into
pminsw
xor
inc
and
push
sbb
push
cmc
loope
movl
mov
pop
scas
es
cmp
enter
rolb
movsl
add
imul
pop
mov
jle
lods
sbb
flds
inc
lcall
pop
mov
lods
testl
mov
sub
jb
and
loope
pop
imul
lret
into
cmpsb
pop
mov
clc
insl
js
mov
out
cmpsb
out
mov
xor
call
xchg
push
sub
dec
jle
in
push
mov
scas
notl
fisttps
sti
push
stc
outsb
xor
xchg
pop
push
jbe
xor
int3
mov
loop
pop
add
and
mulb
fdivrs
sbb
jmp
enter
mov
mov
push
mov
xchg
mov
jnp
inc
adc
push
out
push
movsl
test
mov
dec
mov
sbb
jae
push
xchg
not
into
add
nop
adc
inc
test
ss
sub
dec
cmp
pop
or
stc
jmp
and
xor
adc
fdivs
movsl
jg
xchg
sub
push
shll
push
mov
daa
inc
ljmp
sbb
mov
mov
jmp
sbbb
aaa
mov
mov
das
or
add
or
pop
lret
mov
lret
inc
mov
and
in
lahf
sbb
xchg
adc
push
negb
lret
mov
mov
lods
xchg
addl
and
inc
mov
and
push
push
pop
into
xchg
pop
int
daa
jge
mov
xor
scas
push
cmc
scas
dec
push
mov
add
pop
xchg
xchg
sub
subl
mov
mov
xchg
push
imul
movsl
data16
aam
lret
je
cmp
xchg
pop
add
out
je
adcb
imul
add
inc
mov
push
aaa
inc
movsl
inc
data16
aad
loop
add
or
jns
leave
cmpsl
in
lret
pop
push
cmp
imul
jecxz
and
mov
push
or
xlat
fcoms
scas
rol
mov
ljmp
test
sarb
xor
stos
adc
adcl
std
cmp
fidivs
pop
ds
mov
adc
push
mov
or
and
cmp
loop
lds
insb
shrl
rcrb
int
add
les
dec
cmpb
or
pop
add
inc
push
xchg
adc
mov
or
push
imul
mov
adc
loopne
jae
xchg
je
repz
add
fdivr
adc
mov
nop
cmpsl
test
push
adcb
daa
pushf
mov
push
xchg
je
xchg
and
in
lock
pop
adcb
in
sti
pop
mov
cltd
adc
sub
pop
in
xchg
xchg
fnstenv
sarb
or
xchg
and
dec
jnp
lds
fs
mov
jecxz
mov
adc
pop
and
daa
lcall
icebp
das
es
or
jo
sub
xlat
jne
jnp
jle
js
xor
pop
insb
sbb
andb
xchg
ljmp
lods
cmp
scas
push
fdivp
adc
xchg
inc
cwtl
adc
push
cmc
jl
sbb
fucomp
addr16
daa
mov
xor
rol
jecxz
cmp
xchg
xor
imul
aas
test
in
mov
xor
xlat
adc
ret
das
sub
mov
pop
call
xor
outsb
movsl
or
gs
cmpsl
mov
cmp
jnp
adc
sub
pop
mov
dec
mov
inc
in
fs
xchg
stos
lcall
and
into
jae
jl
pop
mov
icebp
and
mov
addb
int3
sub
in
xor
push
aam
fisubs
adc
jbe
sub
out
push
pop
scas
jnp
mov
dec
cmp
jecxz
or
adc
movl
push
fidivrl
pop
and
sub
push
pop
pop
jle
push
pop
cmp
iret
lret
mov
into
jl
pop
fistl
jns
loope
mov
mov
and
gs
and
nop
dec
out
pop
jp
into
idivb
jmp
mov
call
and
lods
in
jp
add
mov
and
data16
ret
push
sub
les
jns
cmp
cmp
xor
xchg
aas
sbb
mov
pop
rcl
imul
xorb
add
fsubrl
popa
mov
jno
pop
aad
or
decb
pop
enter
dec
cli
push
lret
or
adc
sbb
xchg
hlt
movsl
adc
cmp
imul
mov
fstps
jbe
loop
or
int
mov
nop
xor
imul
adc
js
mov
cli
imul
sti
xchg
cmp
popf
dec
cmc
dec
loopne
pop
pop
inc
mov
lods
std
call
inc
pop
xor
sbb
fnstsw
cmp
sub
mov
inc
and
ret
push
sub
and
sub
lcall
imul
in
popf
addr16
arpl
in
ret
shrb
pop
pop
pop
jb
inc
or
and
sbb
jb
int3
xchg
pushf
rclb
adc
mov
pop
nop
gs
sbb
sbb
push
cmp
iret
mov
mov
stc
mov
cltd
push
inc
pushf
stos
dec
popf
add
imul
and
cmpsl
test
jbe
clc
iret
inc
stos
outsb
xchg
sub
lcall
rolb
add
xor
fwait
mov
int3
dec
les
mov
pop
loopne
icebp
jno
pop
es
add
mov
lods
in
in
es
call
hlt
mov
xchg
data16
inc
xchg
fistpll
mov
add
xor
push
imul
in
pop
and
and
add
fisubrl
jmp
inc
inc
movsl
aaa
mov
adc
fcomps
es
pop
fsts
lret
push
icebp
popf
adc
or
std
jb
xor
cmp
das
insb
test
pop
std
das
sub
fs
add
jbe
pop
inc
xlat
aam
loope
nop
cli
push
stos
jg
dec
adc
scas
ljmp
arpl
test
jmp
and
cmp
mov
or
flds
imul
inc
fimull
in
adc
push
repnz
into
mov
sub
pop
test
popa
inc
leave
add
jbe
and
ljmp
sub
inc
cmp
out
lods
mov
cwtl
vpmacsswd
mov
and
adc
push
add
adc
add
xchg
dec
fcomp
xor
fldt
mov
and
repz
shlb
jmp
and
push
or
sbb
sbb
mov
inc
xchg
enter
nop
lcall
cli
jbe
or
loop
sub
mov
mov
dec
xchg
ds
addb
sub
outsl
inc
cmp
mov
ljmp
and
add
scas
arpl
std
imull
aas
aaa
add
add
sti
in
jo
es
push
xchg
push
mov
cmc
and
nop
push
or
lret
xlat
push
outsb
mov
imul
fcomp
sub
inc
pop
cmp
sbb
pop
test
movsb
sbb
fs
sbb
inc
in
fisttpll
outsb
mov
sbb
cmp
hlt
movsl
fdiv
stos
inc
and
cmpsl
mov
movsb
stos
inc
insb
ret
cmpsl
dec
jae
neg
dec
mov
not
sarl
or
sbb
in
cmp
xor
push
ja
push
xchg
or
fwait
jne
mov
test
adc
call
in
or
std
aaa
push
pop
dec
cltd
inc
lret
xor
mov
cmp
or
scas
dec
inc
pushf
shr
call
dec
lahf
sbb
cltd
cmp
dec
sub
mov
aad
adc
scas
imulb
pop
lret
dec
ss
repnz
pop
popf
dec
jg
xlat
jne
cmp
push
dec
into
es
test
cwtl
leave
xchg
es
mov
jge
ds
mov
out
jecxz
cmpsl
inc
xor
fbstp
iret
or
faddl
shr
jnp
dec
std
stos
xor
ret
gs
xchg
gs
pop
xor
aas
inc
dec
mov
and
aas
fs
sti
mov
sti
add
gs
mull
inc
orb
subb
cmp
lods
and
fstps
movsb
adc
and
movsb
mov
fsubrl
repnz
xchg
push
inc
sti
mov
adc
imul
aad
inc
outsl
icebp
push
scas
push
lcall
ja
push
gs
push
or
sbb
outsl
pushf
jae
call
ja
pop
hlt
sub
and
ds
lods
xor
sub
sbbb
xor
lds
pop
ret
scas
int
nop
sbb
xor
enter
push
push
pop
repnz
stos
pop
dec
ds
in
dec
sub
inc
sub
mov
jns
or
sbb
sbb
arpl
cmc
sub
xor
insb
lods
xchg
lcall
add
nop
ret
ljmp
or
mov
push
mov
pop
fisttps
inc
pop
in
sub
lods
pop
or
push
sbb
pushf
push
xchg
mov
in
mov
xor
pusha
mov
xor
fucomi
fcoms
insb
loope
adc
andb
or
ret
jo
pop
xchg
cmp
popa
mov
sarl
jp
sub
jae
cli
or
es
lods
jb
repnz
mov
lea
dec
jl
pop
stc
dec
xchg
jb
mov
lret
sti
cli
ret
push
je
lea
lret
xchg
in
popf
mov
out
mov
incl
lods
inc
xor
nop
mov
add
popa
sbb
aam
jle
cs
inc
pushf
push
and
push
mov
inc
mov
icebp
pop
lock
or
xchg
mov
or
pusha
pop
lret
sub
imul
outsb
loope
scas
scas
lahf
jecxz
sbb
inc
clc
adc
sbb
or
dec
fwait
cmp
xchg
pusha
xchg
jnp
sbb
sub
push
int
jo
stos
lahf
push
dec
int3
mov
int3
cmp
mov
loopew
orl
and
insb
shrl
mov
xor
fistpll
jb
sbb
lods
mov
sbb
in
mov
push
cmp
xor
dec
xchg
leave
xchg
jbe
cld
ret
or
mov
mov
test
xor
js
sbb
fidivrs
inc
inc
mov
and
dec
xor
insl
aam
hlt
mov
jl
ss
and
aaa
stc
push
cmp
dec
jp
jnp
out
lds
aam
out
fisubs
jp
inc
outsb
stos
cltd
add
fwait
popf
movsb
jge
pop
sbb
adcl
outsl
and
xchg
nop
fucom
push
test
xchg
pop
jne
adc
push
mov
push
scas
mov
pushf
leave
je
enter
mov
jb
popa
incl
push
hlt
aam
jb
push
push
xlat
jp
xchg
mov
popa
pop
in
outsb
aas
jg
hlt
outsb
daa
push
xor
loope
xor
sub
mov
sahf
jecxz
xor
sbb
inc
in
scas
pop
jb
pushl
and
add
xchg
and
mov
fwait
sub
mov
test
xchg
shrb
push
fmull
roll
mov
and
ret
push
pop
mov
test
xor
add
stc
lret
int
mov
pop
stos
or
sbb
aas
sbb
pop
mov
xchg
int3
in
add
sub
push
repz
jo
pusha
in
mov
jo
scas
mov
and
lcall
mov
dec
repnz
fwait
cmpsl
cli
cs
cmp
push
loopne
fwait
jmp
mov
testb
push
pop
sbb
push
ss
addl
lods
insl
jecxz
loopne
pusha
movsb
aaa
nop
add
cs
add
cmp
pushf
pop
aaa
mov
lret
mov
push
sub
push
or
push
adc
and
popf
add
or
push
in
daa
pop
inc
dec
stos
adc
lds
push
xchg
out
push
jle
leave
pop
and
or
jmp
cmp
lcall
repnz
mov
bound
sub
xor
pop
sbb
xchg
mov
jg
frstor
loopnew
pop
cli
adc
sarb
cli
fsts
rcrl
mov
addb
pop
sbb
clc
pop
add
iret
fildl
xor
dec
cwtl
movsb
icebp
xor
lea
shl
xor
imul
inc
inc
inc
sub
mov
jge
jge
outsl
jb
cmc
mov
negl
lcall
adc
shrl
or
add
sub
cmp
inc
add
sar
into
jb
iret
inc
mov
dec
mov
repnz
xor
loopne
orb
rorl
jl
out
out
fs
pop
push
jl
xor
cmp
and
loopne
cmp
mulb
or
or
adc
inc
scas
in
sbbb
pop
fdivrs
adc
and
inc
sbb
or
mov
push
adc
lea
rcr
mov
in
fwait
or
adc
xchg
jge
add
daa
pop
xchg
int
out
js
jb
xchg
dec
mov
test
mov
push
adc
adc
lcall
cmp
je
and
adc
pop
arpl
in
xchg
movsl
add
pop
movb
xchg
hlt
and
jmp
movsl
je
sub
dec
pop
and
arpl
test
cwtl
fimull
shl
scas
push
mov
mov
pusha
fldenv
and
gs
lock
das
push
push
sub
outsb
in
test
push
and
out
mov
xor
xchg
dec
sbb
cli
xor
adc
mov
cwtl
inc
adc
add
xor
mov
shll
test
fisubrs
and
rcrl
dec
rclb
xchg
dec
mov
sub
int
jecxz
dec
mov
loopne
je
xor
cld
in
in
push
in
ret
cmpsl
jl
in
xchg
pushf
push
sbb
pop
mov
fwait
mov
not
aaa
pop
es
mov
shr
mov
mov
addr16
cld
sub
push
push
sub
sbb
dec
pushf
outsb
cmp
sbb
lahf
lods
scas
stos
enter
ss
jae
icebp
outsb
adc
cmpl
jge
mov
jle
cmc
sub
xchg
jmp
adc
jle
mov
cmp
push
jp
cmp
aam
dec
inc
addl
lret
stos
outsb
lahf
jmp
into
xchg
and
int
stc
icebp
and
pusha
hlt
push
cmpsb
jbe
sbb
inc
xchg
cmpsb
fldl
mov
dec
mov
mov
cs
and
mov
sbb
pop
stos
jl
push
jae
pop
inc
sub
xchg
daa
aad
inc
fmull
pop
pop
fsubrp
addr16
repz
or
lret
rorl
sbb
je
mov
lods
dec
sti
loope
ljmp
je
sar
xor
cld
stos
daa
in
pushf
jnp
pop
lock
jo
or
mov
lods
sbb
dec
mov
mov
addl
mov
cmp
lods
adc
es
out
inc
ficomps
cmp
jno
int
pop
out
push
xor
pusha
push
xchg
inc
dec
loop
inc
fisttpl
scas
cmp
cmp
mov
pop
mov
jb
or
push
pop
mov
leave
mov
sub
or
movsl
pop
fs
movsl
iret
inc
sbb
push
mov
fwait
cmp
lret
scas
repnz
js
mov
cmpsb
or
nop
imul
add
or
push
lods
fldpi
push
ret
mov
stc
or
sbb
lret
nop
mov
inc
lret
inc
orl
in
cli
fs
xchg
pusha
enter
or
push
pushf
lahf
test
mov
clc
xor
pop
outsl
sbb
popa
fisubl
movsl
lods
shlb
mov
mov
push
pushf
subb
shlb
pop
mov
sub
mov
testl
loopne
push
inc
pop
loopne
movsl
imul
movsb
loop
cli
xchg
mov
add
cmpsb
shrl
push
sub
jb
jmp
jns
mov
leave
xor
in
mov
xchg
xor
out
push
ja,pn
mov
inc
pop
inc
loope
loop
and
iret
dec
mov
push
test
push
inc
mov
sbb
call
mov
adc
sarb
lods
xor
cmp
cmpsb
sbb
daa
xlat
mov
insl
outsb
shlb
movl
or
sbb
jecxz
dec
aam
imul
enter
jbe
jle
ljmp
xchg
rcrl
testl
cmc
js
test
imul
push
cmp
ss
sbbb
inc
dec
shl
sbb
inc
lods
push
rorb
inc
push
ror
ffreep
jmp
pop
into
push
out
or
lea
push
outsl
mov
scas
fnstcw
or
add
stos
call
insl
cmpsl
icebp
scas
imull
xor
fidivrs
mov
push
inc
pop
lcall
mov
stos
xchg
mov
jns
cwtl
lcall
in
mov
movsb
xor
inc
mov
stos
mov
aad
scas
pop
pusha
push
add
and
adc
lea
push
push
adc
push
fisttpll
mov
mov
frstor
xchg
pushf
or
cs
sbb
cmp
in
ficomps
pminsw
loopne
add
sub
jp
pop
mov
aad
xchg
imul
aaa
push
sbb
out
and
in
popf
push
pop
push
or
push
hlt
pop
andl
cs
test
into
lahf
mul
into
cmp
roll
pop
sbb
push
hlt
pop
sbb
mov
inc
aam
aas
ja
shrb
or
mov
lcall
mov
shr
pop
int
gs
sahf
rorb
mov
jl
jb
mov
fs
sub
or
pushf
lret
icebp
xchg
and
packuswb
testl
dec
and
mov
mov
pop
xchg
cmpsl
xchg
dec
aam
dec
mov
mov
enter
adc
shll
pop
push
sub
movsb
popf
imul
jecxz
push
push
adc
and
movsl
cwtl
mov
test
into
dec
push
push
aas
ret
aam
xor
in
mov
inc
pusha
dec
push
dec
jg
mov
cmpsl
inc
push
cs
fstpl
loop
jmp
adc
insl
jno
pop
test
mov
pop
or
xlat
adc
lock
popf
mov
dec
je
or
test
mov
mov
mov
jmp
xchg
or
insb
adc
je
cmpsl
sub
sahf
mov
ror
and
or
je
aas
and
pop
or
xchg
or
lret
or
lea
push
mov
dec
rorl
xchg
rclb
jne
inc
mov
or
scas
push
lahf
pop
mov
add
mov
fcomip
in
imul
je
add
cmpsl
call
mov
cmp
sub
inc
push
mov
mov
daa
je
ja
in
and
pop
jl
xlat
mov
test
pushf
in
loopne
mov
lcall
mul
mov
mov
sbb
and
push
sti
pop
ret
sub
push
cmp
lds
jb
push
cld
out
or
mov
add
test
mov
and
repz
sbb
cmp
ret
rorb
add
jg
xor
dec
test
push
jg
pop
outsl
iret
xlat
outsb
xchg
mov
jle
lods
jg
das
out
aas
or
jns
pop
ds
sub
cltd
adc
add
loopne
out
push
movsl
sub
inc
lock
flds
int3
or
fdivrl
cmp
test
jge
mov
push
xor
es
scas
mov
rclb
outsl
out
lret
test
nop
sub
into
xchg
sbb
in
je
imulb
push
test
adc
int3
std
xchg
incb
mov
adc
iret
adc
aaa
adc
mov
dec
mov
mov
lds
adc
push
je
loopne
mul
xchg
xchg
pop
test
lea
cltd
lock
xor
jl
push
cli
mov
sub
inc
mov
mov
pop
bound
dec
aam
push
jno
mov
mov
and
jg
or
pop
aaa
and
pop
out
mov
shlb
lods
and
lahf
scas
fisubrl
cmpsl
xorb
push
xchg
mov
mov
and
and
adcl
in
es
dec
push
pushf
ret
mov
mov
cli
xchg
xchg
dec
arpl
into
lret
mov
or
fnstsw
pavgb
lods
shl
adc
add
push
mov
jg
lcall
fnsave
inc
stos
jbe
push
xor
hlt
pop
pop
nop
int3
jmp
aas
pop
jb
je
repz
das
push
daa
addl
cld
nop
mov
in
bound
and
cmpsl
sub
mov
enter
xchg
cld
andb
or
jge
inc
push
shlb
lods
push
and
adc
test
cmp
lods
popf
xor
add
outsl
test
loop
shlb
scas
arpl
jo
dec
cmp
inc
sbb
sub
push
movb
enter
fnstenv
ja
loopne
add
mov
fistpll
shll
pop
repnz
jbe
dec
mov
lret
jecxz
jmp
adcb
dec
cmp
ss
jne
out
xchg
out
jbe
or
and
push
enter
xchg
popf
and
addr16
dec
loop
lods
sub
mov
rcrl
nop
dec
xor
cmp
push
dec
jae
imul
xlat
cld
mov
aaa
adcl
xchg
cwtl
enter
pop
mov
lret
out
arpl
xchg
sub
mov
das
outsb
adc
pop
imul
lcall
sarb
push
dec
add
lods
push
or
out
mov
xchg
fiaddl
cmp
and
mov
pop
xchg
push
xchg
sbb
lret
adc
fidivl
cwtl
mov
test
fists
cmp
push
jno
mov
dec
pop
loope
push
push
mov
in
iret
cltd
subl
add
jmp
jae
dec
sbb
jae
imul
and
sbb
aam
leave
pop
pop
int3
cmp
leave
lret
xchg
adc
jno
fmuls
movb
adc
push
lods
mov
hlt
and
jmp
add
int3
mov
shl
xchg
cwtl
iret
push
sub
mov
sub
lods
xor
xor
mov
mov
cmp
mov
imul
and
repnz
aaa
movsb
popf
and
cld
pop
movsb
xchg
push
dec
inc
sbb
stos
mov
insl
sbb
push
imul
xchg
xchg
mov
repnz
jo
pushf
fistl
pop
mov
scas
ret
add
xchg
sub
bound
mov
movsb
stos
fs
js
xor
fisubrl
pop
or
fwait
inc
and
ljmp
xor
fbstp
arpl
inc
filds
sub
fstp
int
cmpsl
daa
std
cmc
push
enter
xchg
sub
arpl
ficoml
push
sbb
outsl
jbe
xor
lock
mov
scas
sub
mov
xchg
mov
adc
leave
mov
lret
jmp
cld
popa
fistpll
aad
xchg
adc
movsl
dec
adc
mov
subl
stos
jecxz
add
push
dec
es
xchg
daa
loop
cmp
push
mov
insb
xchg
popa
lcall
aas
xchg
cli
xchg
lcall
and
lods
mov
js
es
cmovle
xchg
gs
xor
push
adc
lods
ljmp
into
xor
push
nop
push
scas
mov
aaa
adc
mov
pusha
cltd
push
into
shll
in
lret
dec
xchg
dec
loopne
cmp
push
add
les
add
lods
jns
and
mov
das
outsb
imul
cmp
xorl
inc
testb
lret
inc
pop
sbb
fisubrs
aam
fcmovnu
push
data16
sbb
xchg
mov
pop
mov
add
fimull
adc
xchg
leave
insl
es
stc
fadds
std
shrl
mov
pop
daa
in
xchg
or
dec
cld
cmc
lret
fistpl
jo
out
jo
popf
inc
and
jle
mov
fsubp
lods
fimull
fldl
icebp
and
in
xchg
and
pop
filds
stos
enter
cmp
call
fcmovnb
mov
mov
pop
sbb
push
push
cmp
insl
insl
sbb
in
sub
mov
je
mov
mov
dec
add
cli
jbe
adc
pop
jo
sub
cmp
xlat
leave
pop
inc
mov
lock
pop
rcrb
lret
or
movsl
inc
lahf
push
test
repnz
jbe
inc
les
insb
stc
ja
mov
sti
loopne
sahf
stos
bound
or
fldt
aaa
movsl
das
pop
adc
inc
out
mov
and
call
jg
jle
mov
jecxz
sbb
xchg
int3
rsm
and
jmp
sub
add
mov
cmpsl
xchg
xchg
jp
sti
rorb
cmc
aad
push
fst
das
mov
mov
loopne
daa
sub
popa
dec
iret
decb
pop
fisttpll
push
add
jg
jg
add
pop
fcmovu
and
jg
dec
lods
pop
mov
ret
xchg
shlb
xchg
xchg
and
pop
jae
xor
xchg
cmp
xchg
sti
jo
mov
imul
inc
push
mov
adc
jo
xor
rcl
mov
xchg
adc
inc
adc
xchg
das
dec
stos
mov
mov
cmp
xchg
pop
cli
test
fstl
scas
repz
adc
dec
adc
divl
mov
daa
mov
psllq
das
cmp
mov
in
test
lods
and
and
sti
mov
lcall
lds
sub
push
push
test
or
cmp
lea
push
imul
test
aad
iret
sub
testb
inc
ret
mov
out
in
dec
or
inc
xchg
jnp
xchg
mov
sub
fwait
jbe
lock
or
loopne
jns
movsl
in
sbb
pop
movsl
sbb
hlt
in
int3
mov
xchg
inc
popa
add
cmp
in
pop
pop
imul
pop
divl
sub
pop
nop
xchg
cltd
mov
std
pop
je
pop
test
and
inc
pop
test
inc
das
mov
sar
inc
mov
mov
sub
pop
in
addr16
pop
pusha
jg
push
jae
dec
lods
inc
mov
jbe
inc
orb
xchg
cmp
push
loop,pn
mov
push
icebp
fnstenv
aas
push
cmp
cli
enter
pop
call
xchg
arpl
daa
test
pop
dec
xchg
push
push
int
push
mov
std
sti
and
shll
dec
cmpb
test
xlat
lods
cld
inc
fildl
jmp
add
inc
mov
aas
daa
dec
pop
cmp
and
pop
xor
xlat
pop
sub
jge
fs
ret
cltd
add
jg
mov
cwtl
rcrl
push
sahf
scas
jle
pop
into
mov
enter
mov
xor
std
inc
or
les
mov
shrb
divb
js
cld
xchg
sub
jp
fwait
xor
xchg
rcrl
sub
test
push
cmp
xor
add
in
and
jno
ret
jbe
inc
adc
dec
adc
cmp
test
mov
gs
push
divl
push
and
outsb
mov
stos
fucom
pop
and
push
into
xor
add
mov
int
add
dec
into
lret
sub
push
fstpt
hlt
xor
inc
adc
add
lret
add
mov
lods
mov
lods
dec
sub
daa
jmp
mov
push
inc
shlb
add
lea
pop
xchg
faddp
aas
outsl
std
adc
or
lds
inc
gs
pop
dec
or
jecxz
data16
jb
test
test
roll
add
sub
test
jbe
mov
fisubrl
cmp
movl
push
mov
dec
xor
xor
leave
int
push
inc
stc
ds
lret
insb
and
orl
and
jmp
cmp
inc
mov
pmaxsw
push
pop
pop
stos
xor
xor
gs
sub
je
mov
ja
xor
insl
jge
push
xchg
mov
push
outsb
pop
jl
jp
enter
add
lret
lds
xchg
sub
shll
or
sahf
dec
sub
jg
or
jmp
ja
fists
dec
fisubs
ja
jmp
mov
popl
and
das
jne
or
fsubs
xchg
cmpsl
add
xor
subl
std
lods
mov
and
mov
pusha
int
out
pop
mov
shlb
sti
pop
xchg
cwtl
jg
scas
aad
cmp
repz
and
mov
or
xchg
stc
sub
or
or
inc
mov
mov
or
sahf
outsl
add
or
ficompl
mov
test
jmp
aam
iret
inc
jl
mov
push
clc
fisttpl
scas
divl
movsl
cmp
sub
sub
notl
dec
fisttpl
pop
pop
dec
inc
fwait
popf
imul
test
cmp
and
xor
mov
dec
hlt
xor
adc
inc
xchg
lret
and
xor
add
jns
cmpsl
shrb
mov
in
inc
lock
sub
adc
ljmp
lock
dec
stos
lret
das
jne
mov
xchg
jl
clc
push
jp
or
cmp
sar
xchg
push
gs
mov
adc
xor
xchg
mov
lahf
dec
cmovnp
mov
sbb
fwait
daa
jno
stos
add
mov
jb
lods
jle
insl
cmp
in
and
xor
mov
cmp
mov
or
and
scas
or
inc
arpl
dec
xor
and
mov
inc
inc
in
adc
loopne
test
fidivrs
cwtl
shll
dec
sbb
cli
icebp
cmp
test
cmpb
cld
and
inc
xor
pop
clc
imul
inc
xor
stos
outsb
or
ds
inc
mov
js
dec
jge
xchg
mov
adc
dec
ficoms
cld
add
push
mov
mov
mov
sbb
adc
push
push
sbb
test
push
xor
lods
and
loopne
mov
adc
cmp
clc
rorb
das
loopne
jno
xlat
add
xor
or
add
ss
add
mov
les
pusha
shl
lods
test
roll
mov
insl
push
cmp
dec
pushf
arpl
add
iret
xlat
rorl
lcall
and
push
pop
adc
sbb
mov
push
adc
inc
repnz
fsubrl
or
inc
and
xchg
loop
or
rcrl
js
inc
sub
mov
dec
mov
mov
mov
jno
insb
inc
bound
jle
addl
lods
jle
xlat
mov
ja
mov
in
inc
cwtl
add
sub
push
xchg
sub
leave
sti
data16
jg
and
push
lock
icebp
inc
mov
loope
out
jmp
mov
add
mov
pop
call
ficoms
sbb
sub
cmp
fcoml
insb
push
fwait
fs
stos
adc
lret
fadds
mov
add
divl
ficoml
cwtl
mov
mov
cmpl
lret
lahf
jo
adc
cmp
sarl
ret
add
mov
shlb
mov
mov
lods
js
sbb
and
sub
imul
test
fcoms
sbb
insb
mov
cmp
jnp
sbb
dec
aas
mov
cltd
push
rcll
sub
xor
xchg
shll
adc
dec
dec
cmpsl
mov
fistl
imul
daa
out
aad
aaa
popf
mov
jno
fistpll
test
mov
mov
push
sub
jae
mov
mov
cltd
das
sbb
or
jecxz
sub
lcall
sbb
mov
out
xor
xchg
lea
dec
test
xchg
adc
call
sbb
mov
lret
xchg
stos
stos
xor
rcr
or
dec
add
and
adc
xchg
adc
cmp
orb
lea
jecxz
mov
scas
outsb
mov
inc
vandnpd
cmc
fists
pop
in
xorl
lahf
mov
sbb
cmp
scas
push
pop
cmc
jne
pop
sbb
dec
inc
cmp
es
push
cmp
mov
lahf
orl
or
xor
aas
jno
dec
or
out
adc
cmp
adc
inc
cld
mov
cmpsb
shll
sub
popf
push
out
and
or
mov
ljmp
adc
push
dec
and
cmc
or
pop
xchg
cmp
mov
repnz
sub
xor
cltd
sub
or
ds
test
out
xchg
dec
loope
push
insl
mov
and
and
add
cli
sbb
movsb
xchg
les
mov
aaa
xlat
xlat
dec
jb
aam
add
fs
mov
jp
rcrl
push
dec
push
addb
cld
push
nop
inc
lahf
push
out
std
movsl
jge
cmpsb
daa
jle
insl
outsl
dec
mov
popf
xchg
stos
jae
xor
xchg
sub
lret
hlt
data16
jle
cltd
sub
mov
je
mov
inc
cli
mov
dec
mov
cmpsl
xchg
mov
inc
inc
pop
imul
pop
sbb
and
pop
lods
jge
scas
xor
jns
movsl
insl
jne
cmp
cmp
xchg
add
bound
repz
or
and
inc
inc
sarb
inc
pop
movb
data16
add
sbb
pusha
in
mov
lahf
sub
xchg
xorl
fsubrs
wrmsr
sbb
mov
xor
lock
mov
inc
pop
mov
sahf
loopne
sub
mov
sub
push
jecxz
lods
mov
xchg
lock
or
inc
jp
int3
mov
or
mov
dec
cmp
call
stos
shll
add
enter
cmc
test
xchg
jmp
insb
cwtl
mov
jns
mov
add
jmp
lret
inc
jmp
pusha
cli
jg
or
xchg
ficoms
and
int
push
stos
and
jb
sbb
jno
lods
lock
pop
cmpsl
pop
fidivrs
add
push
mov
arpl
imul
out
fadds
aas
and
push
fimull
push
lea
sbb
push
mov
push
push
adc
repz
mov
xchg
jl
mov
push
rclb
mov
fwait
pop
jmp
movsl
xchg
jecxz
dec
xchg
dec
dec
sbb
insl
dec
dec
or
cmp
mov
mov
mov
jnp
in
xorl
jg
sbb
jb
cs
mov
push
dec
out
xor
adc
jle
je
dec
sub
mov
lods
mov
lock
adc
cltd
sub
inc
jmp
das
lock
add
rclb
test
rorl
lret
push
shlb
sbbl
scas
mov
cmp
adc
mov
adc
jp
jg
les
fldcw
rcll
xchg
fiadds
xor
aaa
push
stos
arpl
ljmp
push
dec
loopne
jo
lds
adc
push
mov
cmp
cmp
fstp
insb
mov
sub
movsl
shll
cmp
inc
mov
and
int3
stos
xlat
iret
inc
and
jnp
imul
int3
repz
aam
sbb
rorb
push
sahf
sarb
sub
ja
pop
fdiv
sub
adc
jle
pop
mov
call
imul
test
mov
cli
in
sub
pop
ljmp
lcall
push
out
gs
ret
call
xchg
shlb
sbb
lods
fld
stos
test
mov
das
mov
lret
jmp
test
add
out
mov
ljmp
rcll
cmp
fsubrp
jge
out
movlps
dec
sarl
cmc
leave
and
pop
ljmp
push
jnp
dec
out
aam
sub
imul
fadd
sub
inc
cmpsl
push
and
mov
jno
mov
sub
fistps
pop
mov
outsb
add
dec
sbb
mov
in
pushf
mov
lret
in
jno
and
sbb
cmpsb
add
push
lahf
loop
push
stos
and
shr
mov
and
shll
mov
mov
mov
fldt
or
daa
jecxz
lcall
fimuls
aad
into
ficomps
lret
sub
xchg
dec
mov
lock
mov
imul
ficoml
pop
das
movsl
mov
sub
stos
inc
mov
adc
dec
lock
div
clc
dec
sarb
mov
ljmp
pop
popf
dec
je
or
pop
jne
dec
push
adc
jecxz
rclb
cs
test
cmp
dec
fprem
aad
scas
lock
out
xchg
ja
pop
cmp
stos
jo
fstl
xchg
jns
cmp
dec
int
sub
fisttpl
loop
jle
nop
mov
adc
cmp
xor
mov
fadds
std
ret
les
mov
test
lret
jle
cwtl
sub
pop
test
loopne
sbb
jg
loop
je
jmp
pop
lods
or
pop
jle
xor
mov
mov
repnz
popf
aad
mov
repnz
dec
and
fwait
dec
ljmp
mov
stos
adc
rep
stc
lret
lea
cmp
ret
in
scas
es
sub
out
mov
dec
leave
jno
xchg
push
inc
pop
mov
cli
dec
mull
int
leave
adc
push
jns
in
ljmp
inc
xchg
lods
and
add
test
repz
pop
je
mov
xor
jmp
fsts
das
fiadds
pop
lods
xchg
outsb
mov
xor
lcall
outsb
lods
out
mov
clc
inc
fiadds
cld
push
adcb
adc
fimull
std
sbb
mov
popf
test
and
int
mov
pop
push
lret
rorb
and
xchg
xchg
lret
adc
aas
jp
das
js
push
pop
das
test
sub
stos
inc
in
idivb
and
lock
ret
dec
sub
es
icebp
cmpsb
lods
jle
es
dec
mov
lds
pop
addl
jp
lret
inc
cld
push
shll
cmpsb
loop
shll
cmp
sub
inc
jns
cmp
mov
in
mov
lods
cmp
and
xor
sti
clc
push
xor
mov
imul
rorb
es
sub
inc
outsb
jl
or
notl
shlb
jecxz
xor
xor
sbb
inc
add
xor
lea
dec
lcall
and
dec
pop
cmp
sub
mov
lcall
testl
aas
aam
xchg
cmp
ret
leave
aaa
push
add
cmp
dec
xchg
fmull
xor
inc
xorb
or
aaa
decl
pop
mov
mov
xchg
mov
pop
dec
mov
test
rorb
pop
push
sbb
and
iretw
fst
or
insl
jg
movsl
into
mov
sub
es
pop
sub
in
insb
and
and
orb
and
mov
addr16
sti
negb
cmp
xor
out
mov
jno
aaa
dec
mov
adc
orb
subl
lahf
pop
sub
inc
push
imul
repnz
dec
adc
and
repnz
ds
lahf
pop
ror
mov
xor
mov
loope
xchg
xor
fnstsw
dec
cli
je
jecxz
out
mov
pop
iret
sbb
mov
and
int
mov
xchg
enter
and
es
scas
test
int
dec
test
pop
adc
inc
movsb
mov
dec
test
aaa
data16
sbb
jnp
insb
cmp
in
fstl
jae
pusha
std
inc
pusha
mov
cs
aaa
mov
lea
cmp
jns
arpl
fcomps
adc
gs
imul
sarb
nop
pop
jns
repz
daa
jge
dec
loope
sbb
push
lret
xchg
pop
jge
rorl
stc
fprem1
inc
inc
dec
lods
dec
gs
es
cmp
cmp
or
das
cmp
sub
adc
sub
mov
add
xor
dec
bound
mov
jo
and
push
adc
inc
add
and
test
xor
fstl
or
cmc
add
int3
into
in
inc
fstp
add
in
pop
jle
cmp
divl
fisubrs
jge
adc
fwait
push
daa
stc
roll
xor
lret
lret
out
aad
mov
mov
out
xor
mov
xchg
and
arpl
xor
or
insb
shl
dec
mov
cld
mov
sbb
loopne
lods
push
jb
data16
outsl
les
sahf
fs
call
lods
cmp
xor
fldcw
jle
pop
je
mov
pop
sub
add
stos
cmpb
andb
cld
cmp
movsl
pop
xor
pop
mov
aam
pop
pop
mov
cli
call
mov
add
adc
jmp
pcmpeqb
cmp
cli
lods
popf
cltd
imul
jp
mov
push
enter
mov
mov
ss
sbb
inc
divl
xchg
rorb
and
adc
push
outsl
pop
je
push
add
xor
mov
bound
gs
in
xchg
xchg
dec
lahf
and
hlt
les
jl
pop
and
xchg
pusha
lods
into
lret
fcmovnu
sbb
mov
aaa
aaa
dec
fisubrs
jno
test
cmp
cwtl
cli
fistpl
sbb
shl
lret
popa
xor
fwait
lcall
ror
repnz
loope
adc
imul
push
dec
mov
sub
sub
xchg
inc
idiv
fucompp
pushf
hlt
xchg
push
pop
and
push
or
pop
push
roll
dec
jbe
in
lock
dec
sub
push
dec
fs
subb
negl
shll
jb
pop
cwtl
xchg
addr16
cmp
ret
or
push
push
call
xor
pop
shrl
ljmp
pop
mov
mov
or
jns
cmp
mov
stos
movsb
pushf
iret
push
negl
push
out
sub
repz
adc
push
js
sbb
xchg
cmpl
ficompl
xor
mov
cli
gs
cmpl
inc
scas
cli
test
ret
adc
add
scas
test
mov
shrl
jl
pop
cs
je
xchg
subb
stos
fisubrl
or
sbb
mov
sub
ljmp
push
adc
shlb
std
js
rcl
pop
dec
mov
imul
lds
xchg
sbb
mov
add
push
xor
jle
test
push
add
adc
loop
lret
adc
jns
pop
adc
aaa
cmc
inc
or
lods
pop
call
add
mov
ja
cmp
xor
stc
loop
inc
jb
jl
stos
push
add
mov
add
jbe
jne
xchg
mov
sub
hlt
out
inc
xor
pusha
mov
jl
dec
cld
add
ror
xchg
push
nop
arpl
push
gs
add
cmp
inc
and
test
inc
iret
aaa
xor
xorl
pop
sbb
adc
adc
xchg
test
xchg
adc
movsl
push
ja
nop
and
sbb
pop
fistpl
loope
push
ret
lret
mov
sbb
int3
stos
dec
out
leave
push
daa
int
push
push
imul
fcompl
mov
inc
adc
mov
push
fcompl
icebp
fsubr
in
xor
stos
lds
in
cld
les
movsl
mov
sub
daa
das
xchg
call
repnz
adc
or
add
inc
aam
fnstsw
inc
jecxz
cltd
mov
xchg
xchg
das
inc
cmp
orl
sbb
out
fwait
lds
push
loope
ja
adc
or
gs
sbb
lret
add
lods
stc
cmpsb
inc
test
push
sbb
xchg
pusha
and
mov
sub
xor
movsb
dec
push
fmulp
dec
jle
sbb
outsb
cmpsb
shlb
mov
xor
pop
dec
inc
in
mov
xchg
or
jmp
jnp
ret
hlt
nop
jmp
sarl
mov
mov
daa
mov
imul
mov
lock
jle
push
cmp
pop
xor
push
ficoms
test
mov
call
les
pop
sbb
add
mov
sahf
xor
inc
push
pushf
lahf
jbe
mov
movsl
ljmp
js
pop
mov
sbb
sbb
jno
inc
and
mov
push
pop
sub
fstps
int3
fisubrs
mov
pushf
jmp
data16
sub
pop
sbb
movsb
xor
jl
push
ret
loope
xor
aad
into
imul
or
sbb
jae
push
pop
mov
inc
fdiv
adc
xor
sub
shrl
xchg
inc
lods
and
adc
popf
loop
lret
rcrb
imul
adc
scas
cli
cmp
jmp
xor
gs
std
mov
ret
sbb
rclb
sub
add
adc
adc
and
jp
sub
loop
pop
mov
nop
add
add
mov
inc
outsb
lock
jbe
pusha
xchg
fsubs
mov
sbb
cmp
cmp
lahf
or
push
push
sti
push
out
jbe
leave
pushf
jns
aaa
jmp
pop
xchg
pop
lds
iret
cmp
xchg
fistps
mov
mov
cmpsb
mov
jae
sarb
pop
outsb
and
sbb
cmpsb
sbb
jb
add
xchg
mov
inc
cmc
mov
ljmp
mov
ret
lods
repz
sti
filds
cmc
daa
xchg
cli
jecxz
fadds
mov
notb
mov
jno
sub
push
cmp
roll
or
cmp
add
push
sahf
stos
jno
cld
ret
sub
movsb
dec
daa
insb
mov
pop
inc
push
sub
dec
stos
xlat
adc
in
sbb
mov
gs
enter
shrl
pop
and
sub
dec
or
ljmp
xchg
xchg
imulb
ret
out
sbb
mov
and
pop
add
pop
rol
imul
fisubrl
mov
add
pusha
and
out
fiadds
inc
dec
addr16
adc
mov
mov
and
fsubrl
nop
cmpl
push
out
js
jle
rcll
andb
scas
clc
xor
lret
out
scas
mov
jl
xor
inc
loop
outsl
dec
fdivl
cli
pop
push
or
test
ficomps
mov
aam
movsb
dec
out
adcl
fsubp
xchg
mov
out
sub
loop
inc
shrb
ret
dec
xor
shlb
fsubrs
pop
jbe,pn
rcll
rclb
push
pop
xor
mov
cmp
inc
mov
lahf
scas
sbb
jne
mov
xor
mov
xchg
sub
adc
adc
xchg
shr
dec
aaa
cmpsl
sbb
cld
rcll
pop
push
fiaddl
fsubp
inc
leave
lods
cs
xchg
mov
sti
movb
rcrb
or
jae
lods
dec
inc
imull
stc
xor
mov
fisttps
pop
int3
mov
insb
jb
or
ret
mov
es
and
scas
xchg
jl
cmp
das
xor
ds
pop
mov
pop
dec
jmp
push
dec
cli
lea
adc
or
jecxz
stc
add
sub
loop
mov
xchg
push
stos
jb
cmpsl
int
imul
xlat
sub
jae
inc
jb
push
mov
imul
mov
sbbl
mov
int
ret
int
stos
push
icebp
mov
mov
mov
fwait
and
sbb
push
xchg
ret
dec
lods
call
add
jb
test
cmp
aad
shr
adc
push
stos
jge
insl
xchg
jns
dec
ja
jecxz
daa
fnstsw
imul
mov
push
hlt
lret
data16
jg
push
mov
negl
jp
rcrl
cmpsb
sub
mov
mov
int
aas
jecxz
dec
and
sub
mov
les
cmp
test
push
pop
jns,pt
mov
ffreep
lods
out
mov
lea
add
je
xor
sbb
aad
jnp
loopne
cmp
jmp
or
imul
cmp
cmp
ret
mov
lea
sbb
sti
ljmp
dec
pop
add
mov
ds
ljmp
sub
adcl
les
inc
clc
xchg
cmp
imul
xchg
sti
int3
xor
pop
mov
aam
bound
rcll
out
movsl
enter
mov
stc
out
ror
inc
fucomp
or
jne
aas
fldz
add
inc
or
lods
insb
jl
dec
xor
lret
and
ret
lret
stc
jle
pusha
iret
mov
pop
or
cmc
cmp
lods
jae
pop
jge
sarl
push
flds
dec
js
or
mov
popf
pop
stos
xor
lret
push
scas
addr16
inc
xlat
cltd
or
ss
daa
es
add
xchg
icebp
add
fchs
lret
js
ljmp
in
sub
das
adc
jl
xchg
cmpsb
cmp
imul
xchg
xchg
sbb
scas
or
ds
xor
mov
imul
pop
mov
mov
in
decl
movl
dec
or
cs
xchg
lret
stc
mov
xor
sub
loopne
cmp
lahf
mov
out
stos
out
xchg
faddl
stos
push
mov
add
pop
icebp
sbb
scas
and
mov
mov
mov
jne
rcrb
sbb
cli
push
jecxz
loope
fwait
repnz
mov
push
int
dec
inc
pop
jg
sub
mov
jbe
ljmp
out
lds
ficoms
mov
adc
xchg
lds
mov
xorb
daa
push
insl
pushf
cmp
mov
in
ret
jg
ljmp
mov
ljmp
lret
push
lret
ds
mov
jmp
ror
repnz
sub
loop
pop
xchg
jns
jmp
push
mov
jmp
mov
mov
adc
cmp
jge
nop
jmp
lcall
xchg
addr16
shl
mov
inc
ljmp
mov
inc
aad
push
and
fidivrs
jb
mov
aas
cld
movsl
ficoml
mov
push
push
je
jmp
jo
sbb
push
out
and
mov
push
xor
xlat
fsubrl
ljmp
pop
aas
sub
stos
and
sahf
push
inc
inc
mov
and
test
cmp
mov
or
imul
xlat
xor
loope
sbb
mov
test
arpl
sbb
out
leave
inc
sti
adc
lahf
jge
mov
xchg
test
out
sub
in
les
xchg
xor
adc
push
movsl
fidivrs
dec
inc
insb
out
push
lret
jnp
imull
jnp
pop
out
enter
into
in
scas
or
xorl
cmp
jl
jnp
cmpsl
leave
push
add
int3
inc
xor
mov
andb
add
sti
jb
mov
xor
rcl
nop
mov
or
aad
rolb
clc
test
scas
test
sbb
loope
dec
sti
jl
pop
out
sti
sub
fdivs
add
mov
or
ret
pminub
ja
cmc
cmpsl
imul
jl
cld
xor
cmc
mov
test
mov
out
dec
pushf
mov
fs
mov
or
addr16
cmp
xchg
pop
jo
jmp
mov
jge
dec
enter
push
jbe
int3
ret
enter
jp
mov
loop
popf
mov
repnz
inc
add
pop
pop
ret
out
mov
pop
inc
call
enter
sbb
mov
push
nop
iret
lret
xchg
adc
insl
pop
sub
push
fnstcw
cmp
loopne
add
sbb
es
cmc
pusha
cmp
sbb
xchg
cmp
test
mov
dec
loope
ss
fimuls
adc
insl
gs
scas
mov
xor
mov
iret
icebp
insb
dec
out
movsl
jg
dec
loop
cmp
xor
dec
push
jae
mov
xor
lahf
je
iret
sub
push
scas
divl
mov
push
mov
mov
and
loopne
inc
mov
push
int
add
into
add
clc
rcr
add
jecxz
lods
sub
cmp
sbb
notb
into
es
push
lcall
mov
xorb
les
push
lock
imul
sbb
adc
sbbl
push
jl
xor
cmp
push
je
adc
jno
jnp
rcl
add
push
mov
jmp
mov
inc
inc
jmp
in
pop
cmp
daa
fnstsw
xorb
pop
push
xchg
lds
fdivs
xor
xchg
jl
fs
pop
lahf
rorl
dec
and
sbb
loope
fldl
push
cli
out
xchg
pop
sahf
jmp
sbb
int
adcb
xorb
rcr
fsubs
in
int3
je
jle
mov
scas
and
jb
dec
mov
mov
jle
sbb
push
mov
and
push
add
pop
fistl
add
inc
iret
dec
in
jl
fstpl
loop
adc
mov
fcoml
jnp
push
pop
jecxz
adc
into
jp
sbb
add
outsb
sahf
mov
xor
jle
stc
frstor
push
xlat
lods
popa
data16
cmp
xchg
push
pop
test
cs
notl
out
xor
inc
cmp
pushf
loop
jl
mov
and
int
iret
aad
faddp
ja
push
jno
xchg
fisubrl
mov
aaa
dec
and
scas
mov
push
push
mov
sbb
icebp
mov
test
sub
dec
xchg
mov
cmp
mov
pop
pop
push
or
mov
cmp
lret
sub
or
stc
test
xor
es
pop
mov
dec
andb
addb
outsb
mov
cmp
mov
cmp
mov
fiadds
inc
jl
imul
leave
adcb
mov
xchg
pushf
fstps
jg
mov
fsubl
push
adc
test
sub
pop
sub
cmp
lds
dec
fbstp
stos
add
inc
add
mov
scas
mov
xchg
outsl
sbb
push
and
push
sbb
pop
ret
repz
je
inc
out
jmp
xchg
jns
jbe
in
mov
ja
cmp
jnp
adc
and
imul
icebp
xchg
and
and
push
xor
insb
shrl
adc
cmp
push
inc
insl
nop
mov
add
dec
mov
sub
mov
icebp
dec
mov
dec
mov
sahf
adc
mov
add
lods
add
mov
mov
repnz
loop
loope
sbb
nop
pop
dec
fiaddl
das
ss
clc
insb
inc
mov
jne
test
and
xlat
addr16
iret
jne
cmc
xlat
data16
fistpll
ljmp
and
decl
jno
shll
rcrb
add
insl
lods
mov
and
mov
adc
loopne
mov
in
negb
add
fisubs
pop
ss
fisubrs
xchg
mov
add
icebp
sbb
mov
out
nop
or
sub
adc
hlt
pop
xor
mov
in
cmp
inc
add
pushf
mov
or
push
cmpsb
enter
push
lret
mov
mov
sbb
push
jno
or
imul
mov
cli
test
lods
add
jl
stos
sarb
or
pop
sbb
sub
sarb
test
and
jmp
movsb
cwtl
icebp
int3
je
xchg
scas
mov
fimuls
aas
rcll
add
enter
and
cmp
mov
fcom
cmp
jb
pop
pop
insl
ljmp
ret
push
test
add
xchg
push
stc
xor
push
enter
xchg
cmp
loopne
sbb
stos
les
mov
dec
cld
jnp
jb
mov
add
jae
push
sub
cmpsb
push
mov
data16
sub
inc
jno
cli
add
pop
gs
mov
push
hlt
xor
fbstp
sub
imul
inc
inc
push
jge
xor
mov
in
outsl
dec
mov
pop
xlat
add
dec
xchg
add
xchg
pop
scas
div
rcrl
pop
lock
insb
inc
or
dec
push
bswap
cmp
fwait
mov
mov
addl
and
add
xor
adc
mov
cmp
fmuls
out
rorb
mov
imul
add
lcall
hlt
popa
into
negb
and
loopne
push
pushf
dec
add
mov
xor
movsl
and
pextrw
jmp
xor
add
jge
push
add
sarl
push
xchg
mov
sarb
dec
scas
je
push
add
clc
push
inc
push
xchg
cltd
xchg
mov
hlt
add
xchg
jmp
fisttpl
daa
jle
jbe
jge
jle
sbb
mov
adc
pusha
xchg
test
mov
pop
outsl
addr16
jmp
pop
adc
and
pop
fsin
sbb
stos
adc
mov
add
mov
pop
jae
sbb
out
fsts
push
xchg
mov
push
ret
jle
pop
lcall
inc
add
pop
mov
cmpsl
adc
fimuls
ret
lret
stc
fwait
mov
adc
call
jmp
pop
push
dec
inc
inc
mov
jecxz
sbb
or
or
outsl
xchg
adc
cs
fldcw
xor
cmp
pop
mov
cs
jae
fwait
jno
jl
jbe
pop
mov
sub
test
test
scas
cmpsb
jnp
mov
dec
int
push
mov
repz
push
imul
pop
or
xor
sti
xchg
imul
stc
les
lret
pop
in
xchg
insl
popa
mov
idivb
push
clc
loope
rorl
ja
cs
push
div
adc
les
xchg
jbe
xor
cs
inc
int
mov
int3
ds
cmp
xor
test
into
lret
xlat
lods
push
mov
test
adc
int3
xor
and
sahf
sub
loop
bound
sti
fcompl
fldl
pop
ljmp
and
inc
out
xchg
hlt
lods
or
xorb
leave
insl
lods
lea
jo
dec
sbb
push
scas
push
cltd
jno
or
fadd
xchg
mov
sahf
push
xchg
in
fidivs
rorb
mov
loopne
dec
out
push
mov
mov
push
sahf
push
iret
out
mov
xchg
pop
jbe
mov
mov
lcall
scas
pop
jmp
mov
jnp
adc
fcmovb
inc
and
fsts
pop
pop
dec
shrb
ret
adc
and
fisubl
pusha
repz
test
pop
or
push
imul
out
sub
add
adcb
push
adc
inc
dec
mov
imul
mov
jb
or
cmp
bound
test
aas
das
push
pushw
cwtl
xchg
cld
mov
movsl
scas
inc
stos
xchg
pushf
int
mov
pop
lods
gs
jne
pop
es
rcrl
xor
into
fsubr
cmp
loope
pop
gs
jl
and
dec
les
stos
pusha
dec
vrsqrtps
sbb
xchg
pop
dec
icebp
jg
imul
pop
leave
mov
add
cs
sub
xchg
lea
daa
xchg
mov
and
cli
jns
incl
pop
ret
and
rorb
movsb
adc
pop
mov
cmp
stc
mov
lock
xor
mov
imul
adc
xchg
pop
fsubp
dec
lods
push
xchg
push
lods
mov
push
xchg
int
jns
divl
pop
orb
loope
or
mov
stc
dec
push
pop
jl
adc
rcll
neg
and
shlb
mov
jne
loopne
jge
inc
mov
loope
decl
and
mov
in
cmp
das
rol
aam
xchg
sub
mov
dec
daa
and
nop
fstl
pop
and
jle
push
jb
dec
push
xor
xrelease
pop
inc
dec
iret
inc
lahf
cwtl
push
sub
outsb
dec
xor
lahf
lods
aas
adc
xor
mov
mov
mov
icebp
xor
movsb
pop
mov
mov
loopne
mov
outsl
sahf
andl
dec
inc
test
cwtl
adc
test
inc
fwait
pop
and
call
icebp
xchg
push
xchg
push
sbb
std
xor
in
mov
dec
aad
in
idivb
xchg
pop
mul
push
jns
call
adc
xchg
outsb
mov
mov
mov
in
push
imul
or
test
adcb
pushf
fstps
jmp
adc
ljmp
push
enter
imul
test
xor
dec
cmc
in
add
fcompl
xor
mov
leave
xchg
xchg
inc
cmp
pushf
fwait
xor
ret
cmc
sbb
andb
aas
fsts
test
mov
in
mov
push
clc
repnz
mov
sbb
xor
gs
ss
mov
cmp
dec
addr16
pop
je
in
faddl
dec
xchg
aad
xchg
mov
lcall
dec
and
popa
adc
sbb
les
or
sub
jmp
dec
cli
inc
movsb
cmp
dec
add
mov
int3
iret
scas
pushf
loope,pt
push
in
or
sbb
inc
push
mov
incl
lret
mov
xor
jmp
orl
jg,pn
add
xor
and
nop
add
mov
xchg
imull
addl
gs
in
or
sarl
imul
icebp
cli
add
mov
cmc
jbe
lahf
addr16
mov
dec
mov
stos
add
dec
cs
adc
jecxz
inc
mov
stos
imul
xchg
stos
xadd
popa
adc
lock
dec
in
pop
jae
push
mov
add
sarb
adc
or
mov
jb
movsb
ret
lea
fnsave
sub
popf
mov
repz
and
ja
hlt
rolb
arpl
xchg
pop
mov
jne
repnz
mov
cmpsl
dec
jecxz
mov
push
mov
xchg
mov
out
xor
repnz
mov
sbb
popa
jecxz
pop
cli
jb
test
dec
fmul
cmp
fwait
scas
rcll
enter
sbb
jae
test
mov
pop
sub
enter
push
dec
daa
sti
add
jmp
lods
mov
sti
icebp
mov
add
cli
dec
movsl
mov
sbb
sub
push
mov
aad
push
test
add
pop
push
call
or
jno
xor
lock
dec
xchg
test
imul
add
mov
test
or
cwtl
jne
ss
les
das
add
xchg
stos
fmulp
out
inc
fidivl
sbb
in
pop
mov
ss
in
jae
xchg
pop
adc
pusha
xchg
idivb
ds
mov
loopne
in
shl
mov
jl
sbb
add
lock
mov
in
push
in
jae
adc
dec
sub
pop
xor
shrb
push
loop
mov
aaa
and
push
push
cmp
inc
pushf
gs
lahf
popf
in
imul
mov
inc
fnstcw
pop
js
mov
addr16
shrl
mov
bound
inc
outsb
xchg
xchg
pop
lret
mov
sub
cmp
fisttps
xchg
pushf
push
enter
out
lods
mov
int
pop
in
addr16
iret
xchg
out
push
xchg
dec
inc
jo
jns
inc
int
out
or
mov
sahf
xchg
lock
call
int3
dec
in
mov
fdivs
test
ljmp
scas
add
les
int3
add
in
in
xor
movsl
nop
in
pop
gs
mov
pop
inc
and
xchg
cltd
mov
pushf
movsb
jp
roll
push
cmpsb
sbb
and
push
lock
jge
rol
lahf
push
push
mov
mov
mov
adcl
and
mov
lods
and
xchg
shlb
push
mov
ret
aas
jp
int
dec
jne
lods
add
cmpsb
shlb
loopne
sbb
sbb
int3
loope
dec
ffreep
push
add
mov
cmpsb
rcrl
rcrl
jecxz
add
lds
in
mov
inc
in
fwait
das
notb
lret
ds
pop
dec
sub
jle
and
mov
insl
add
push
adc
loopne
push
xlat
sbb
or
dec
cmp
jg
loopne
rorl
enter
es
es
mov
lret
and
dec
insb
in
pop
and
add
cli
lods
imul
jp,pn
cmpsb
sbb
jne
sub
repnz
aaa
into
sub
pop
push
push
loopne
mov
inc
sub
cmp
add
add
pop
cmp
sbb
insb
add
inc
call
mov
lods
es
add
add
sbbl
pop
sbbb
push
push
les
ret
sbb
je
sub
js
mov
or
dec
lea
lahf
xchg
repz
or
and
hlt
orb
loope
loope
push
cs
inc
or
lock
popf
shl
movsl
bound
inc
and
dec
ja
dec
cmp
sbb
jae
pop
sub
mov
mov
ljmp
mov
add
sahf
push
jp
add
mov
testl
push
cmp
testl
pop
add
lock
enter
xchg
cli
lahf
and
lret
xor
pop
cmc
and
loop
xchg
and
ret
pushl
mov
repnz
inc
or
mov
cmpsb
dec
mov
and
sbb
cmovg
sub
es
sub
sti
mov
popa
sub
out
aas
mov
inc
sub
int
cmp
fcoml
movsb
inc
xor
leave
inc
push
aaa
mov
inc
and
cmp
mov
popa
sbb
fsubs
mov
pop
adc
pop
push
stos
nop
in
mov
cli
arpl
mov
jp
pop
jae
sub
clc
test
lret
or
xlat
sbb
scas
popw
mov
dec
out
push
pop
jo
test
mov
stc
fistps
pop
adc
imul
mov
outsl
rcl
jo
mov
orl
mov
and
cmp
call
mov
mov
bound
adc
cs
inc
inc
aad
sahf
jl
je
xchg
push
xchg
or
or
sbb
ja
decb
shlw
dec
sahf
scas
pop
ret
sbb
mov
scas
aaa
xlat
push
cltd
add
mov
loope
sub
or
sbb
and
cmc
movlps
pushf
dec
repz
gs
jg
inc
cmpsl
scas
pop
adc
mov
in
scas
icebp
insl
loop
push
push
xchg
repz
push
inc
xchg
gs
add
bound
adc
stos
fsubrl
lock
movsl
icebp
fcoms
mov
xchg
sahf
xchg
daa
pop
push
outsl
mov
mov
xchg
test
jb
movsl
outsl
jmp
jnp
mov
pop
jg
cs
jle
xchg
jg
pop
frstor
sub
js
ret
mov
or
cmpsl
js
js
push
adc
xchg
loopne
adc
mov
lea
mov
cs
mov
dec
add
shlb
arpl
stc
int3
mov
add
call
lahf
mov
cmpsl
sahf
mov
jno
pop
mov
lods
lret
lods
mov
test
mov
gs
stc
push
push
inc
scas
fmull
loopne
bound
inc
ds
lahf
loope
cmp
aam
mov
aaa
sti
imul
jnp
movsl
adc
add
jl
mov
and
sbb
testl
ret
out
lock
gs
xor
xchg
int3
mov
sar
stos
cmpl
adc
fidivrs
cld
sbb
popa
xor
sbb
dec
testb
push
fildl
fs
hlt
fmuls
xchg
dec
int3
outsb
fnstenv
add
std
jge
xlat
movups
sbb
ljmp
clc
repnz
dec
xor
stc
pop
pop
sbb
cmp
js
pop
pushf
outsb
xchg
jmp
aam
int
test
jb
ss
or
loope
mov
sub
sub
or
out
insl
rcr
jo
test
cmp
xor
nop
sti
or
mov
ret
loop
aad
mov
test
pop
bound
shll
mov
in
inc
stos
movsl
jmp
xor
xchg
dec
cwtl
xchg
orb
popf
aaa
leave
scas
cmpsl
in
ficoml
push
ja
inc
push
aad
ds
mov
jnp
orl
xchg
dec
in
out
pop
mov
pusha
jns
hlt
jle
lock
push
xor
std
aas
adc
lods
ficoms
hlt
mov
jb
xchg
loop
mov
jae
je
rcrl
mov
sub
mov
enter
push
fnstcw
jae
neg
movsl
jl
add
push
jbe
std
xor
call
mov
dec
out
pop
add
jmp
sbb
push
int3
xor
xor
push
gs
aaa
lret
mov
in
inc
pop
pushf
fbld
xchg
add
mov
sarl
add
movsb
fucom
lahf
push
mov
fwait
rcll
mov
jl
loope
outsb
add
xor
mov
aaa
ss
mov
mov
test
or
int3
into
adc
test
cwtl
cmpsb
xor
push
imull
push
jb
mov
jno
jne
inc
lahf
das
std
push
push
icebp
push
inc
sbb
or
add
je
cmp
push
sahf
mov
sbb
fildl
mov
adc
testb
fstps
iret
fsubs
jl
push
aas
inc
bound
xchg
xor
xor
decl
pop
mov
or
pushl
jmp
inc
into
mov
mov
ret
ss
mov
dec
sbb
jmp
lock
mov
ud2
add
pushf
sti
fsts
in
aam
lcall
pop
add
mov
jle
aam
xchg
add
jnp
stos
or
popf
xchg
out
or
xchg
mov
push
jb
jbe
shrb
ret
out
ljmp
push
out
mov
cmpsl
and
in
inc
fisttpll
outsb
ret
cmp
mov
mov
lret
rol
inc
test
stos
in
loope
add
dec
push
mov
scas
xchg
push
pop
test
sarb
pop
add
pop
ljmp
cmc
push
js
icebp
push
mov
mov
dec
sub
add
cmp
or
out
sar
dec
add
xchg
pop
add
sarb
rolb
test
repnz
rcrl
xchg
push
shrl
adc
loop
lcall
mov
push
inc
rcl
xchg
add
or
cmp
mov
icebp
or
fcomps
pop
xor
jge
hlt
dec
dec
cld
sub
jle
call
cmp
lock
andb
xchg
cmpsb
inc
push
imul
jmp
aas
fiadds
aas
test
sub
fdiv
lcall
xchg
mov
adc
pop
clc
push
inc
cmp
scas
add
out
mov
cld
je
cmpsb
sbb
leave
xchg
xlat
fs
cmp
in
sub
dec
jge
clc
dec
iret
mov
sub
fisubrl
mov
jge
shll
negb
xor
push
fs
pop
pop
add
jmp
test
adc
in
mov
pop
imul
es
jo
mov
xchg
fstpl
sub
xlat
mov
aaa
sub
xchg
or
xor
lahf
mov
ljmp
push
sbb
push
subl
mov
xchg
push
ds
rorl
mov
sbb
insb
test
fbstp
out
xor
scas
fmuls
dec
int
xchg
adc
jmp
int3
dec
push
fiaddl
stos
and
mov
ret
mov
jae
inc
jecxz
in
ss
out
inc
sub
sbb
frndint
mov
cmpb
mov
mov
push
mov
cli
int
jae
es
outsl
dec
pop
mull
cmp
loop
test
lock
mov
daa
xchg
jno
arpl
xchg
loopne
jl
jmp
outsl
popf
popf
sub
mov
cltd
je
in
insl
sarb
dec
jmp
dec
push
fistps
imul
lods
pop
movsb
cmp
jge
cmp
fcmovnb
sbb
sbb
push
std
mov
std
fs
out
repz
pusha
pop
cmpsb
stos
xchg
ror
repz
jo
xlat
xor
mov
and
mov
and
icebp
pop
neg
jp
or
mov
jne
int
fimuls
movsb
jnp
enter
inc
xor
sub
adc
fists
xchg
nop
pop
mov
pop
pop
jl
dec
rclb
test
dec
cld
loop
cs
mov
pusha
adc
mov
subb
insb
adc
push
dec
aas
pop
xor
xchg
rcr
jp
testb
insl
cmc
and
data16
ds
roll
dec
out
push
jbe
mov
icebp
and
fcompl
pop
mov
ficompl
loopne
or
int
jmp
popf
es
inc
sbbl
dec
jmp
jge,pn
fs
jp
popa
stc
and
inc
adc
inc
jle
lret
push
jge
mov
dec
fiadds
ljmp
lahf
jbe
push
dec
push
cld
xchg
mov
div
enter
xchg
nop
xorb
push
orl
add
sti
push
jno
mov
dec
popfw
lret
data16
pop
pop
in
je
jno
ds
les
addl
cmp
adc
mov
sarb
movsb
adc
pop
or
cmp
scas
xchg
xchg
mov
push
cmpb
and
aaa
pop
int
dec
push
mov
ss
out
nop
pop
mov
incl
dec
lahf
int3
mov
clc
imul
out
inc
cmc
lcall
inc
je
xchg
inc
daa
cmpsl
test
sub
xchg
lods
fnsave
iret
imul
inc
or
cmc
mov
cmpsl
rcrb
sub
sbb
mov
ds
lret
dec
or
stc
stc
repnz
lods
xchg
in
inc
es
pop
adc
xchg
sub
sbb
xchg
dec
into
cld
out
xchg
lret
cld
into
ret
adc
ficoms
rcl
or
stc
xchg
dec
xlat
xor
sbb
adc
incl
xchg
sub
lcall
push
out
xor
std
jl
pop
divb
or
outsl
mov
and
andl
mov
pushl
cmp
add
lock
out
xchg
or
popa
mov
xlat
out
jle
push
xchg
sub
mov
or
add
mov
rorb
insl
jbe
mov
into
rol
cltd
shl
inc
inc
mov
movsl
outsb
or
insl
xchg
outsb
sbb
xchg
xor
push
or
xchg
jno
das
xchg
mov
add
in
cmc
pop
in
jo
mov
sub
mov
ds
pop
das
jg
fisubl
loop
icebp
mov
repnz
out
incb
mov
sub
xchg
pushf
mov
rorl
pushf
inc
repz
fs
adc
ss
and
gs
xchg
test
jle
daa
xor
pop
into
push
jecxz
outsl
dec
les
aad
int3
xchg
inc
into
pop
stos
fldcw
iret
and
mov
push
imul
movsl
mov
into
sub
iret
xlat
das
les
insl
js
mov
inc
fsubs
xchg
sbb
pop
cmc
pop
movsl
divl
jl
mov
cmp
into
xlat
mov
add
cmp
sub
mov
fmull
pushf
add
mov
dec
stc
xchg
jle
adc
sti
xchg
loop
cmpsb
sub
push
mov
adc
dec
pushf
call
setb
jp
lahf
mov
rcll
imul
loop
pusha
outsb
push
fisttps
icebp
ret
outsb
push
sbb
mov
inc
push
sub
insb
push
jmp
mov
test
ret
aas
or
test
out
cmpsl
seto
sahf
cmc
mov
sub
pop
insb
push
pop
loope
xor
js
std
into
xor
mov
sub
or
xchg
mov
cmp
sub
leave
jle
pop
fsubrs
xor
nop
push
cmp
jmp
ffreep
aam
xchg
mov
xor
dec
push
dec
sbb
fdivrl
add
mov
xor
cmpsb
pop
or
out
jl
adc
movsl
xchg
insb
sbb
xchg
pop
loop
out
nop
and
insl
test
int3
xchg
xor
jl
push
adc
add
pusha
inc
cmp
mov
std
or
inc
lds
aad
daa
mov
add
jno
push
nop
cs
xor
lahf
cmc
cmc
mov
xor
push
icebp
iret
pop
sahf
mov
lods
pop
insl
xor
sub
xchg
in
std
mov
fdivr
lcall
ds
and
scas
sti
cmpsb
mov
in
push
sti
fidivrl
cmp
test
sub
stos
cmp
sti
pop
sbb
je
xchg
sbb
les
mov
mov
jle
hlt
rsm
xchg
ficoms
jno
mov
insl
mov
mov
out
dec
add
jbe
and
mov
ss
cmp
rcll
fcmovnb
mov
xor
stos
repz
xchg
lea
jl
lret
dec
lods
xor
xor
mov
cwtl
pop
xchg
sbb
iret
icebp
inc
out
divl
xor
adc
mov
pop
sbb
fists
js
fwait
push
scas
mov
or
mov
mov
and
test
data16
push
mov
push
xchg
ljmp
pop
popf
daa
and
rclb
inc
sub
mov
and
pushf
cmp
idivl
jb
jnp
and
je
icebp
stc
fimull
mov
loope
sbb
xchg
outsl
sub
push
cmp
and
mov
xchg
or
mov
jae
add
cltd
loope
int
nop
jl
cmpsl
ret
pop
aas
push
test
loopne
xchg
stc
sbb
out
sub
cmp
pop
cs
lcall
mov
cli
mov
ss
xchg
jmp
lods
mov
clc
xor
outsl
push
pop
or
jbe
test
mov
notb
jne
or
cmpsb
mov
popf
pop
into
scas
stos
jmp
aad
dec
ljmp
aaa
mov
pop
dec
jnp
push
adc
mov
out
jbe
popf
dec
test
mov
repnz
aam
adc
lcall
mov
cltd
into
test
inc
jae
inc
aam
xchg
enter
cmp
popa
filds
mov
movsl
lahf
ss
pushf
fildll
fadd
repnz
mov
lock
push
mov
adc
push
mov
fidivrl
mov
fidivl
rorl
xchg
das
pop
add
push
inc
cli
pop
roll
fadd
in
bound
fld
out
add
mov
jbe
dec
cmpsl
inc
jne
cmp
xchg
xor
and
inc
sub
cmc
mov
xor
mov
popa
andb
test
cmp
mov
cmp
cmpsb
subb
jl
jbe
das
je
negb
jmp
loope
sbb
inc
mov
pop
mov
cmp
leave
call
ja
mov
lods
out
and
jmp
aaa
fs
jo
imul
jae
push
jg
sbbl
lcall
xor
aas
scas
add
inc
inc
sbb
inc
ja
mov
test
jmp
push
or
sbb
out
repnz
sbb
sahf
fists
pushf
or
jp
add
xchg
cwtl
push
push
cltd
clc
or
jl
or
mov
add
and
das
aaa
test
outsb
cmpsb
in
jbe
inc
add
cmp
cld
mov
les
popf
jno
lea
or
sbb
insl
cltd
test
aad
rcll
xchg
add
jg
dec
mov
cmp
inc
popa
jne
pushf
inc
das
nop
cli
nop
rorl
cmp
icebp
xchg
dec
divl
scas
jb
cmp
std
mov
pushf
shr
mov
push
dec
testb
mov
in
jno
mov
imul
js
nop
mov
insl
scas
fistl
test
pop
jp
jmp
sahf
push
ret
shrb
xchg
subb
jg
ret
xchg
and
nop
hlt
xchg
mov
or
imulb
int
rcrb
push
xchg
mov
ljmp
rclb
nop
bnd
movsb
inc
xchg
cmpsl
lcall
inc
rclb
jg
xorl
or
ljmp
call
test
out
xchg
mov
ss
dec
push
adc
imul
jle
mov
loop
inc
xor
mov
cli
popf
sub
or
xchg
shlb
outsl
sbb
clc
ret
or
js
mov
sarl
and
lret
xlat
lcall
iret
mov
dec
pop
aaa
out
sbb
adc
pop
xor
pop
stc
and
fbstp
push
push
jo
add
jb
or
mov
and
add
das
test
dec
jg
mov
rcl
pop
pop
jge
aad
adc
jns
dec
enter
cwtl
push
dec
shl
scas
and
add
pop
lock
hlt
inc
jmp
dec
shll
into
addb
lods
addr16
out
pop
jmp
lock
popa
mov
push
cmp
jo
xchg
sbb
or
stc
xor
aam
gs
mov
push
mov
arpl
mov
hlt
andb
in
std
adc
addr16
js
mov
fs
loop
mov
and
mov
scas
xlat
dec
jl
mov
xor
jo
xor
xchg
and
lahf
mov
pushf
ret
filds
das
mov
shr
in
pop
add
mov
pop
cmpsb
sub
adc
pop
call
inc
push
and
pop
jbe
cwtl
rorl
sbb
mov
lock
xchg
lret
fstpt
mov
hlt
icebp
inc
add
jb
aaa
ja
and
mov
imul
sbb
or
xorb
jne
sti
pop
arpl
pop
mov
cs
adc
in
and
mov
pop
imul
mov
or
rorl
les
pop
test
cmp
rclb
cmpsb
movsl
inc
sub
dec
adc
jns
inc
mov
scas
call
fistps
aam
xchg
mov
out
sbb
xchg
xor
xchg
divb
inc
loop
mov
sub
idivl
xor
test
push
popf
sub
je
fldl
fs
mov
jge
xchg
mov
clc
jmp
out
mov
push
push
lds
out
aaa
sub
xchg
lret
mov
test
pop
jge
cmp
mov
aad
push
fmull
cs
ret
or
sbb
mulb
lea
jbe
cli
mov
jmp
mov
outsb
sbb
lds
outsb
dec
sbb
mov
test
int3
pushf
lods
push
decb
enter
test
pop
cltd
or
test
push
clc
bound
adc
lcall
add
lahf
lock
je
xchg
sar
or
lds
stos
xchg
jb
pushf
cmpsl
lock
in
dec
mov
push
adc
sbb
leave
fnsave
cmpsb
push
nop
jecxz
inc
imul
mov
aad
divl
loopne
inc
sub
push
fisubs
ror
mov
insb
mov
mov
jb
xchg
pop
jns
jb
rorl
and
movl
adc
fimull
sbb
pushf
pop
inc
adc
out
mov
xlat
push
lret
fbld
lods
sub
xor
std
mov
stos
frstor
pop
mov
loop
jl
imulb
fcmovne
icebp
imul
in
xchg
sub
dec
mul
mov
add
je
into
ss
mov
xchg
xor
and
test
hlt
jg
mov
sbb
lahf
aas
or
pop
xor
cmp
daa
out
mov
mov
addb
or
dec
cmp
out
fst
popf
cli
mov
test
ja
lock
insl
dec
inc
sbb
lods
jg
pop
xchg
fstps
mov
push
cmp
mov
xor
and
jg
pop
cmp
xchg
push
sbb
push
pop
sbb
ljmp
mov
lock
icebp
int3
lcall
mov
fs
call
push
xchg
insb
jl
jp
dec
icebp
sbb
rcrb
js
sahf
xor
popf
inc
pop
leave
clc
lret
nop
js
loopne
rorb
aas
or
test
cmpsl
add
dec
lcall
aad
mov
fwait
ja
add
or
outsb
leave
repnz
in
mov
pop
out
xchg
in
mov
dec
xchg
sub
cld
push
je
out
xor
cmp
pop
inc
add
pop
sub
jb
and
jnp
pop
mov
pusha
pop
lret
leave
testl
inc
push
sbb
rcrb
repnz
fldenv
loopne
int3
xchg
or
or
inc
jns
jb
std
mov
enter
or
adc
adc
push
movsb
mov
cli
aad
push
pusha
std
out
outsl
inc
add
bound
loop
rclb
sbb
adc
pushf
or
and
test
sub
cmpsb
ja
test
push
lret
jns
nop
cmpsb
and
std
setae
fbstp
shlb
stos
adc
movsb
cs
aaa
scas
mov
movsb
mov
fisubrs
xor
fnstsw
cmp
gs
jne
sub
jae
pop
into
dec
cmp
filds
add
inc
mov
jb
xor
mov
out
outsl
adc
ds
fwait
xor
sub
outsl
fwait
add
mov
fstl
mov
popa
mov
popf
sub
pop
sbb
in
jnp
aaa
mov
aaa
inc
fcmovb
out
lock
mov
imul
mov
cmpsb
imul
mov
dec
dec
movsl
inc
ss
in
pop
sub
fs
fistl
add
dec
adc
insl
les
xor
cltd
je
lcall
test
add
mov
iret
bound
push
jle
push
mov
jae
add
lock
and
addr16
sbbl
sahf
dec
sahf
mov
xor
cmpl
mov
push
mov
lahf
xor
xchg
loopne
jg
rcrb
dec
add
sbb
and
insb
xchg
adc
out
xchg
addr16
cmp
rclb
adc
push
sahf
cs
out
in
mov
xchg
cmp
mov
aam
adc
adc
sbb
sbb
or
mov
call
mov
or
mov
mov
push
mov
sti
fdiv
push
jb
mov
in
sbb
or
cmp
test
ds
xchg
loope
gs
sbb
jo
dec
loope
and
adc
pop
mov
adc
out
addr16
pop
hlt
mov
addr16
rcll
stc
cmpb
lret
mul
inc
sbb
shlb
mov
adc
aad
sbb
sbb
outsl
jb
pop
jmp
add
data16
and
add
imul
mov
ja
aad
dec
movsb
sahf
mov
and
mov
shrl
popf
daa
mov
fwait
aam
pop
sbb
xor
push
stc
insb
xor
or
fdivrl
sbb
pop
ss
push
call
sub
push
je
shll
call
dec
pusha
jecxz
or
xchg
repnz
mov
shrl
faddl
sti
mov
cmpsl
mov
cmp
aam
xchg
mov
xor
add
jmp
lods
add
and
test
shl
jl
clc
inc
xchg
cs
gs
aad
or
ljmp
push
push
push
and
insl
popa
nop
popf
shr
adc
xchg
daa
push
or
or
or
jle
mov
pop
push
adcb
pop
mov
pop
cmc
mov
jae
cwtl
mov
dec
sbb
aam
jns
dec
mov
or
pop
mov
or
in
dec
inc
lret
jmp
cs
xor
add
inc
xchg
cld
xchg
fwait
test
leave
out
adc
loop
hlt
adc
mov
aas
lods
dec
addr16
lods
dec
jns
mov
pop
xchg
mov
xchg
pop
or
mov
es
jns
jno
and
test
lock
stos
mov
mov
rcrl
mov
inc
cmpsl
jl
or
and
imulb
pushf
fsubl
mov
popf
add
add
loop
add
push
in
mov
mov
lea
jg
in
loope
mov
and
dec
ss
fldl
sbb
and
sbb
jno
pop
fldl
ds
test
xchg
inc
push
adc
adc
sbb
xchg
mov
clc
jle
pop
lret
adc
std
pusha
sahf
jecxz
mov
inc
pop
ds
pop
sbb
xchg
js
ja
sub
jg
jecxz
push
mov
cmp
clc
adc
mov
inc
rcl
clc
inc
inc
fneni(8087
add
iret
fmull
pop
pop
sar
iret
xor
decl
dec
or
pop
and
in
shr
aas
xor
addr16
outsl
push
mov
adc
insb
cltd
movsb
inc
adc
pop
inc
mov
pop
xchg
xchg
andb
mov
call
xor
hlt
mov
inc
lea
addr16
into
adc
mov
popa
cmp
jno
cmp
mov
shl
rcll
fstl
arpl
jge
arpl
iret
ja
fs
ret
sti
mov
jg
or
sbb
xor
cmp
shll
adc
aas
idiv
test
mov
and
test
shr
int
mov
mov
cmpsl
test
ret
xchg
je
pop
nop
mov
fmull
mov
jecxz
sub
push
sbb
fs
popa
out
xor
loop
sub
mov
xchg
push
pop
mov
outsl
mov
push
daa
rcrl
out
gs
dec
mov
pop
dec
sub
setno
inc
repz
xchg
in
out
sbb
jb
xor
daa
cli
adc
aad
adc
fsubs
add
data16
mov
mov
add
inc
add
aam
test
xor
loopne
data16
insb
and
jp
test
mov
inc
stc
pusha
fcmovnb
pushf
xor
sbbb
ficoms
outsl
test
mov
fidivs
xchg
mov
inc
inc
xchg
add
pop
add
or
dec
out
mov
jge
or
shll
inc
outsl
inc
inc
imul
push
xchg
or
cmc
jle
jo
pop
adc
inc
xchg
out
frstor
arpl
cmp
cmpsb
arpl
fnsave
push
mov
cmp
push
repz
sub
mov
jns
gs
aaa
pop
jp
ss
cld
cld
and
push
jp
push
jae
shrb
outsb
push
shl
popf
imul
clc
jl
cwtl
scas
push
rorb
idivb
jge
adc
popa
scas
pop
mov
fiadds
sub
mov
out
fsub
movsl
dec
lock
pop
and
sbb
sub
add
or
cmp
mov
pushf
aad
xor
or
call
fs
shlb
push
into
sbb
cmp
jecxz
adc
inc
movsb
call
push
popa
dec
sub
mov
mov
mov
push
adc
clc
nop
lea
stos
dec
lds
inc
scas
ss
scas
adc
jle
push
lea
sbb
ret
jecxz
test
and
movsb
test
xor
xor
ja
lahf
adc
fisubrl
cli
inc
into
mov
mov
es
clc
and
sub
push
stos
add
fimuls
loop
sub
push
mov
jne
mov
inc
dec
push
mov
scas
pop
xchg
loope
pop
mull
cli
not
push
cmpsb
mov
push
mov
js
mov
inc
popf
stos
mov
mov
jecxz
pusha
clc
clc
leave
pop
xor
adc
cmpsl
push
out
call
jle
roll
out
push
inc
xchg
and
mov
les
sahf
xor
pushf
mov
mov
mov
mov
lret
ret
pop
sahf
clc
sub
cmp
xchg
stos
inc
fcmove
push
sub
xchg
test
cmpsl
dec
fimuls
mov
push
daa
data16
xor
mov
mov
jmp
int3
push
nop
sbb
sub
adc
jecxz
sub
mov
xchg
add
into
inc
in
repz
mov
mov
movsb
mov
sbb
les
mov
repz
adc
shrl
jmp
insb
shl
push
cmp
mov
cmp
mov
sub
nop
pop
icebp
out
xor
xchg
fsubrl
or
push
imul
mov
jl
int3
lea
xchg
cmp
outsb
jo
mov
mov
gs
sub
in
inc
pop
mov
out
fwait
cwtl
shrl
lock
adc
and
dec
mov
or
adc
dec
lret
push
mov
xchg
xor
cmp
cmp
aas
mov
jecxz
cmpsl
sub
mov
in
jnp
sbb
push
mov
and
js
mov
adc
jno
sbb
gs
movsl
mov
std
and
sahf
push
push
xor
test
es
and
cmp
insb
adcl
jno
pop
push
test
fwait
daa
add
jge
fldt
aam
dec
lock
fdivrl
and
orb
mov
sub
jp
sbb
jle
ror
mov
add
add
push
fnstenv
aaa
mov
in
sarb
jne
insl
outsl
mov
adc
mov
int
cmc
lret
frstor
icebp
fldl
xlat
cmpl
add
jl
cwtl
mov
stc
repnz
loop
mov
cmp
push
outsb
adc
sub
shrl
push
cwtl
test
repnz
mov
iret
daa
lret
imul
jno
out
popa
xchg
sub
andb
xchg
mov
cwtl
mov
stos
insb
xor
adc
jno
xor
cld
scas
mov
test
jp
sbb
sbb
das
leave
lds
jg
lea
dec
mov
mov
insb
movsl
add
cs
push
aad
sahf
sbb
lods
or
in
rcrl
je
mov
addr16
aas
or
es
and
shlb
sub
and
mov
scas
adcl
cmpsl
pop
loope
lds
inc
mov
loope
aas
and
push
mov
imul
adcb
adc
sub
lret
movsl
fildl
lret
mov
xor
jo
adc
pop
or
dec
stos
pop
enter
inc
pop
stos
test
mov
dec
xlat
lcall
lock
outsb
shl
adc
dec
xchg
leave
sbb
fnsave
nop
mov
dec
in
jle
mov
jbe
and
das
mov
pop
mov
jo
pushf
add
or
lods
dec
lods
stos
shlb
lock
call
fcmovnbe
lret
lret
ljmp
push
lahf
mov
or
out
inc
out
xor
jl
out
jecxz
jl
cmc
gs
sub
xor
add
call
inc
cltd
mov
mov
sub
sarb
dec
mov
inc
mov
jns
xor
adc
cs
shlb
sub
loop
mov
ret
or
je
and
push
jae
or
mov
nop
jmp
add
loope
mov
jmp
int3
pop
insl
dec
mov
movsb
fisubl
shlb
int3
insb
icebp
ficomps
pusha
cltd
in
sbb
cmpsl
sbb
cwtl
mov
pop
xor
sbb
ss
in
lret
add
divl
mov
jle
in
or
in
loop
enter
repz
mov
xor
pop
xchg
jns
fucomi
fidivs
push
xlat
pop
out
call
lds
jae
dec
test
repnz
push
neg
and
insl
frstor
test
mov
mov
dec
dec
call
imul
shl
jle
xchg
test
dec
cmpsb
jle
insl
mov
int
into
loope
and
lods
add
mov
test
sbb
bound
aad
aad
cwtl
xor
lock
push
jns
aad
jl
lcall
clc
addr16
icebp
daa
sbb
cltd
xor
pop
adc
cmp
or
adc
mov
sub
fstp
jl
mov
ds
js
or
push
push
mov
sub
push
insl
subb
lea
push
mov
roll
add
rcl
aaa
dec
add
sub
jnp
aad
cmpsb
in
es
mov
loop,pt
inc
and
pushl
push
adc
pushl
push
icebp
add
nop
pushf
jg
push
aam
pop
aam
rcl
adc
leave
xor
popf
arpl
out
pop
movsb
xchg
aas
fcmovb
jno
jb
cwtl
adc
ffree
out
inc
inc
xchg
inc
jnp
faddp
inc
jae
fucomip
leave
ss
fisubrl
sub
outsb
adc
out
int
xlat
in
jo
dec
or
orb
popf
popa
cmp
gs
outsl
rcl
mov
test
jge
pop
pop
push
aad
rcrb
inc
pop
and
xor
out
mov
xor
cmp
sbbb
clc
push
lds
pop
cmpb
inc
adc
inc
and
je
and
enter
mov
outsl
mov
mov
push
gs
leave
aad
mov
adc
sbb
adc
insl
xchg
lods
pop
repz
jmp
idivb
pop
pop
nop
loopne
out
pop
pextrw
sarl
xchg
jecxz
pop
psubusb
mov
das
push
add
negl
fadds
test
jns
and
out
test
cmp
cltd
dec
adc
daa
mov
xchg
sub
mov
mov
stos
shll
dec
push
xor
gs
ret
rclb
std
mov
push
out
xchg
sbb
nop
lcall
mov
adcl
sub
mov
dec
insl
push
call
enter
cs
ret
add
xor
sbb
aaa
test
pop
je
je
sbb
imul
loop
jnp
movl
clc
loope
dec
out
xor
mov
mov
or
mov
in
and
mov
and
dec
clc
enter
fwait
mov
xor
test
sbb
add
sbbb
cld
mov
xor
mov
jno
xchg
cmp
stos
xchg
inc
imul
int3
inc
sbb
cmpsl
pop
lahf
in
shll
mov
pop
aad
mov
lret
lea
xchg
gs
adc
ds
in
dec
out
popf
mov
push
xchg
xchg
add
scas
mov
fimuls
add
fstpl
cmpsb
sbb
cmp
insb
jnp
sub
outsl
sarb
add
repnz
inc
popa
out
push
icebp
mov
mov
test
sahf
jne
aas
pop
stos
cmpsb
call
mov
stos
punpcklwd
jecxz
push
jge
jmp
dec
add
stc
mov
push
in
mov
xlat
xorb
jg
lahf
dec
pop
das
xor
jg
pusha
into
popa
cmp
loopne
test
int
adc
cli
lods
xor
push
mov
mov
add
out
pop
cs
cld
fadds
push
add
sbb
leave
loopne
pop
movsl
inc
stc
dec
shll
mov
jns
pusha
cs
in
push
dec
movsl
mov
movsb
mov
adc
add
cmc
mov
dec
je
sbbb
fcmovnb
push
fs
and
pop
inc
inc
insb
lcall
clc
call
cmp
lds
add
mov
repnz
rolb
lret
push
jg
jle
daa
push
dec
decl
scas
mov
lret
cltd
movsl
pushf
mov
push
repnz
insl
push
mov
sub
loope
fisubrs
pop
mov
mov
lcall
xchg
pusha
test
push
jle
mulb
sub
xchg
add
pop
cmc
add
lret
rolb
xchg
sbb
push
inc
jo
cmp
ret
sbb
imul
in
into
jns
jg
mov
xchg
or
mov
fbstp
shl
or
movsb
pop
xlat
push
jle
push
aaa
cltd
jl
fucompp
xlat
cmpsl
adc
enter
nop
lret
or
dec
push
lahf
fildll
in
add
adc
aaa
mov
lods
icebp
add
mov
pop
mov
mov
or
xchg
mov
popa
xchg
mov
in
mov
mov
pop
jae
inc
mov
push
adc
mov
xchg
fsubs
sti
nop
jb
adc
shrb
int
and
dec
jb
ret
imul
jno
mov
mov
fwait
pushf
mov
adc
fdivrp
fisttps
add
fcomps
mov
sub
and
and
sub
mov
or
das
xor
xchg
cli
sub
jo
out
mov
sbb
add
fs
inc
jns
mov
sub
cmp
sbb
ret
jae
fcomi
xor
xchg
mov
and
imul
out
icebp
xchg
movsb
pop
inc
or
push
es
out
push
mov
in
sub
shlb
xchg
cmp
enter
jmp
clc
mov
stos
xlat
mov
into
icebp
ficomps
icebp
lcall
mov
xor
movsl
shll
push
inc
roll
aas
mov
les
in
push
push
shll
push
xlat
inc
and
jge
movsb
dec
push
push
dec
push
jmp
lock
fsave
lret
sbb
cmp
cmc
pop
cmp
adc
mov
pop
bnd
xchg
dec
adc
stc
into
pop
xor
xchg
mov
pop
insl
gs
stos
jns
nop
cmp
mov
pop
inc
or
pop
loope
jl
aaa
nop
shr
xlat
test
mov
xchg
jne
xor
hlt
imul
lods
test
stc
xchg
scas
xchg
cmpsl
incb
jg
int
push
jbe
idiv
pop
push
push
sahf
fldenv
bound
dec
imul
mov
roll
jle
inc
inc
cmp
xlat
push
mov
andb
loopne,pn
sbbb
imull
mov
pop
push
and
mov
lock
xor
shll
js
push
fdivl
mov
mov
aad
xlat
ljmp
icebp
mov
out
aad
dec
jg
fidivrs
pop
xor
mov
ss
ficomps
mov
roll
aas
dec
jmp
inc
insl
sbb
jl
jae
push
pop
shl
jb
dec
pop
adc
out
lods
sti
test
jecxz
xor
nop
sub
fcoml
aaa
inc
or
xor
js
jge
cmp
or
jbe
sub
pop
repz
push
xchg
imul
roll
push
lcall
dec
hlt
ficompl
mov
outsb
pop
and
pop
icebp
and
mov
inc
mov
push
sbb
cmp
out
inc
mov
ljmp
lock
clc
cmp
cltd
sbb
lods
mov
adc
into
lret
sbb
adc
popf
xor
or
add
xor
push
jae
sub
mov
mov
scas
pop
insl
pop
das
adc
or
mov
or
lcall
movsb
jp
rcl
jne
sub
shrl
aaa
int3
pop
fldl
rorb
rcr
sbb
js
cli
xor
add
pop
jmp
push
mov
add
je
insl
out
sti
shll
movsl
jo
sbb
xchg
fs
push
mov
stc
fxch
lea
push
nop
xchg
cwtl
push
dec
push
out
dec
mov
stos
dec
xchg
int
cmpb
cmpsl
shl
jae
pop
rorb
aad
and
sub
out
out
xchg
sub
sub
and
xchg
cs
and
loop
mov
inc
in
fcompl
add
sbb
cld
mov
sub
fldt
inc
push
xchg
cmc
hlt
xchg
mov
and
push
ret
sub
loopne
cmpsb
xor
out
adc
mov
andb
mov
pop
xchg
stos
call
lret
out
jne
mov
xchg
mov
or
xlat
inc
jle
shr
es
fidivs
std
ror
cmpsl
cmp
jnp
xchg
mov
mov
push
clc
outsl
test
push
mov
test
leave
repz
add
or
mov
scas
sahf
pop
stos
xchg
cli
inc
stos
inc
jmp
clc
and
or
movsb
mov
test
or
mov
adc
popa
rcrb
aaa
ds
xor
aam
idivb
rcrb
jo
jae
pop
mov
mov
in
popa
cmc
das
aas
js
add
ja
xor
jo
hlt
movsl
or
pop
xchg
push
inc
adc
sbb
retw
test
sub
bound
cmpsl
fmull
aad
fists
mov
js
pop
imul
ret
xchg
and
pop
or
push
cmp
movsl
add
imul
rorb
or
into
outsb
and
jmp
dec
cmp
iret
push
add
mov
xchg
outsb
in
enter
push
adc
jmp
adc
cmp
xchg
dec
test
mov
pop
fdivrs
testl
cmp
jbe
jle
cmovns
mov
mov
out
xchg
cmp
mov
jno
xor
out
cmp
and
pop
mov
sarb
inc
outsb
pop
sub
adc
cmp
std
or
mov
mov
mov
pop
mov
adc
repz
pop
movsl
xchg
in
cs
enter
push
mov
adcb
pusha
mov
adc
cld
aad
inc
frstor
and
lcall
inc
xchg
and
pusha
push
add
jb
out
aam
stos
inc
iret
das
jnp
mov
mov
jb
xchg
xlat
jns
hlt
add
addr16
enter
cmp
add
in
imul
ja
sub
adc
inc
pop
sub
jp
jae
div
iret
aad
push
filds
xchg
and
xor
jmp
push
inc
outsl
dec
dec
roll
or
adc
pop
sub
dec
lods
mov
push
arpl
rep
aad
inc
out
repz
inc
lcall
addps
je
push
xchg
mov
and
push
insb
sub
xchg
out
in
and
aas
int
pop
mov
in
out
xlat
xchg
test
mov
jb
fcomps
fsubrl
outsl
mov
daa
clc
in
and
pop
out
les
aaa
sub
popa
mov
repz
mov
lds
dec
popa
xchg
dec
in
or
arpl
fbstp
cmpsb
adcb
jb
pop
les
adc
cmpsl
leave
jmp
rclb
std
inc
xchg
int
add
je
cmp
sbbb
pop
pextrw
pop
ja
mov
std
cmp
mov
mov
sbb
or
aaa
xchg
pop
imul
push
insl
dec
test
negl
dec
cmp
repnz
pop
inc
xchg
test
das
mov
fstl
pop
repnz
pop
sub
pop
scas
adc
ljmp
push
popf
jns
dec
adc
fcmovbe
fcmovb
sarl
ja
xor
imul
dec
jne
xor
in
xlat
xor
add
cmp
add
add
push
dec
stos
mov
jg
dec
testl
mov
cmp
sub
and
fcmovnbe
pop
push
lods
lret
sub
and
mov
loop
mov
cmpsb
dec
movl
je
pop
cmpsl
push
out
pusha
push
and
in
ss
lea
inc
int3
jle
jae
rcrl
mov
dec
in
sub
add
xor
insb
stc
xor
hlt
sbb
xchg
xchg
js
popf
inc
les
lahf
fdivl
out
in
les
aad
in
xchg
aaa
shrb
pop
pop
inc
test
addl
adc
push
loop
mov
aam
xor
sahf
jmp
sub
call
loop
jbe
sbb
enter
fbstp
pop
lods
adc
lahf
and
cmp
jp
and
mov
pop
or
arpl
hlt
rorl
pop
push
pop
cmp
jg,pn
push
rcl
fwait
jnp
push
or
outsb
sbb
pop
push
nop
add
push
lods
xor
hlt
cmp
fmull
daa
mov
sub
and
push
cmpl
dec
lock
pop
mov
scas
icebp
js
and
sub
ds
push
mov
jbe
pushf
mov
add
inc
cwtl
and
int
subl
inc
addl
aam
stos
push
outsb
add
xchg
gs
jmp
cmp
pop
sbb
mov
inc
mov
mov
add
mov
adc
cmp
fistps
loopne
mov
popf
jns
lret
cs
sbb
xchg
jo
and
scas
push
fyl2x
adc
mov
mov
jae
andb
stc
aad
mov
mov
inc
mov
sbb
xchg
xchg
in
lea
push
insl
inc
gs
mov
imul
inc
dec
mov
inc
rorl
lcall
jne
push
sbb
in
push
pop
sbb
mov
repnz
sub
shrb
mov
or
dec
mov
inc
cmp
jmp
pop
or
lds
or
mov
lds
sub
add
movsb
fsubrl
push
aas
dec
add
cmpsl
cmp
mov
fsub
sbb
rcl
xlat
xor
sbb
sbb
or
imul
xchg
ret
mov
into
les
jmp
test
ljmp
or
lods
push
nop
sub
popa
xchg
cs
mov
mov
inc
and
ret
bound
mov
adc
iret
hlt
and
jge
aam
scas
icebp
scas
adc
push
outsl
and
mov
bound
mov
mov
inc
jecxz
and
cltd
lds
mov
pop
inc
pop
ret
xchg
scas
je
pop
jg
daa
dec
push
add
mov
adc
jnp
andl
pop
mov
pop
test
scas
cs
dec
dec
fcoms
into
push
cwtl
arpl
mov
mov
sbb
pop
adc
sti
cmp
and
sub
fs
inc
and
test
push
cmpsb
adc
les
add
inc
push
jmp
mov
and
cmpl
pop
add
out
ret
scas
out
adc
push
mov
jg
jp
cmp
ss
mov
dec
int
mov
cmc
sub
add
cmpsb
push
scas
ja
je
test
pushf
pop
dec
mov
or
add
dec
or
mov
inc
repnz
out
cld
movlps
jle
pop
icebp
imul
mov
jne
ljmp
cwtl
sub
push
mov
mov
fwait
inc
push
push
jbe
sbb
das
cmp
cmp
fwait
fwait
sub
cmp
adc
sbb
mov
jae
xor
aas
xor
cmp
add
je,pt
arpl
test
fnstenv
mov
xchg
lods
iret
pop
lcall
add
cmpsb
subb
jo
or
mov
cmp
subl
adc
out
ja
dec
jmp
sbb
fisttpll
xorl
daa
or
clc
jno
dec
cmc
es
enter
mov
xor
dec
xchg
lea
xchg
jns
jecxz
jo
xor
imul
add
cmp
lock
cmp
cmp
cmpsb
cmpsb
sub
fnstcw
jl
lahf
in
inc
scas
adc
insl
xlat
sahf
mov
je
jae
fs
loopne
push
lahf
inc
shll
lret
cld
out
fcomp
adc
push
lcall
roll
lret
aam
push
lahf
pop
shll
xlat
scas
dec
shl
inc
shrl
aas
jle
xchg
lock
inc
mov
mov
adc
and
jno
sbb
mov
sbb
imul
mov
push
push
fidivs
mov
push
cmp
subl
fsubl
ja
int
cmp
dec
sbb
sbb
xor
aaa
imul
sbb
rclb
pop
pushf
inc
movsl
or
test
loopne
cmpsb
fsubs
leave
nop
adc
xchg
jmp
outsb
mov
jo
imul
loop
insb
mov
cwtl
rorb
test
cltd
fcmovbe
fiaddl
dec
cmpsl
xchg
pop
or
mov
js
shll
mov
mov
cmp
inc
dec
pop
push
adc
inc
rclb
mov
fistpl
sbb
xchg
pop
loopne
adc
loope
mov
inc
adcl
lcallw
xchg
dec
outsb
xlat
pop
rorb
out
fists
cmpsl
pop
std
dec
or
mov
jge
rcrb
data16
je
jbe
pusha
push
pop
decb
mov
shrb
or
jno
add
out
int3
mov
int3
adc
and
inc
out
mov
pop
or
icebp
shll
fcoms
les
pusha
fldenv
fwait
lahf
in
xchg
mov
stos
sub
into
mov
push
jg
jne
add
fidivs
mov
out
jl
in
inc
and
daa
push
hlt
inc
mov
adc
stos
scas
mov
bound
mov
xchg
jbe,pn
xor
push
hlt
push
cld
fmulp
sbb
jmp
test
sub
sahf
pop
jno
xchg
rcrb
inc
mov
cmp
pop
repnz
shr
addr16
outsb
into
fdiv
jp
cmp
int3
push
iret
jg
xchg
xor
ret
or
cmpsl
xor
lret
add
jb
jp
and
mov
aas
xchg
cmc
xchg
add
pop
rclb
dec
add
mov
mov
mov
push
daa
iret
jl
out
sar
jmp
imul
jge
push
dec
lret
daa
xlat
mov
gs
push
sub
insl
mov
stos
add
icebp
push
rcr
add
lods
repz
lods
cld
je
lods
inc
fstp
xchg
dec
xor
shrb
cmpsl
call
stc
fistpl
hlt
pop
aam
jmp
dec
ljmp
inc
sub
rclb
nop
aas
js
push
pop
lcall
fstl
das
mov
mov
scas
jno
in
pop
leave
xchg
pop
stc
inc
insl
fdivrs
mov
pop
cld
adc
rcl
xchg
adc
cltd
jae
add
cmp
adc
les
pop
mov
ret
into
les
xor
cmp
mov
insl
cmp
movsl
mov
add
mov
outsb
clc
push
sub
jbe
or
mov
pop
insl
hlt
iret
cmp
test
pop
xor
pop
xchg
mov
or
mov
mov
stos
sbb
or
fisubs
imul
push
push
sbb
ljmp
cvtps2pi
lods
into
mov
add
xor
dec
in
sahf
mov
xor
test
lods
push
out
stos
mov
jge
insl
push
stos
cmc
or
cld
mov
or
jnp
call
negb
adc
pop
out
jge
lcall
xchg
iret
ret
aam
mov
xchg
pop
inc
lods
sbbb
es
xchg
lret
shrl
xor
lahf
xchg
shrb
negl
test
ret
sub
or
cmp
in
jo
xchg
or
jecxz
and
das
hlt
inc
adc
jae
clc
push
sbb
or
pop
das
pop
push
into
dec
jmp
mov
inc
xor
mov
aad
test
fdivs
rcll
sub
fstpt
sub
xchg
ret
push
jp
scas
js
pushf
out
mov
cmc
push
mov
aas
jp
jnp
xchg
sbbl
and
scas
mov
mov
in
xchg
and
pop
daa
stos
sub
loopne
pop
push
addb
push
icebp
xchg
bound
outsl
nop
lret
bound
inc
daa
add
pop
or
sahf
push
dec
inc
jo
sub
ss
mov
jl
rol
mov
add
bound
stos
outsb
dec
std
xchg
out
test
sub
enter
cmp
or
andb
push
or
and
stos
ss
lods
xor
and
mov
imul
cmpsl
int
fsubrs
pop
inc
push
ret
xchg
cmc
push
cmp
lods
mov
and
jae
das
mov
inc
cmp
scas
xchg
andb
mov
sbb
or
adc
fcmovnb
ret
out
int3
xor
sahf
shlb
jo
pop
sub
test
iret
xor
out
mov
push
jne
enter
dec
fs
enter
mov
ret
xchg
int
mov
les
jecxz
out
push
mov
mov
xchg
inc
xchg
inc
enter
push
push
popf
insl
jno
lahf
cmp
repnz
and
sysenter
lret
sub
pop
push
xchg
cs
jecxz
imul
jb
jle
shrb
mov
clc
jnp
fdiv
mov
inc
mov
pop
les
adc
add
add
xchg
repnz
add
out
lcall
or
mov
and
sub
xchg
div
int
xor
popf
adc
add
push
dec
mov
iret
xor
pop
dec
mov
inc
mov
ljmp
sbb
cmc
push
push
and
mov
cmp
testl
fiaddl
sarb
sub
mov
or
dec
aad
ss
sub
adc
shrb
jb
and
mov
mov
lcall
xor
mov
mov
pop
es
rcll
lret
xchg
mov
mov
stos
adc
jno
cwtl
jecxz
addb
rclb
xchg
movsb
pop
loope
mov
cmpsb
or
lock
sbb
sahf
icebp
sub
inc
in
ss
js
imull
loop
xchg
and
mov
outsb
push
int
mov
gs
mov
dec
push
cwtl
int
repnz
not
clc
ret
lock
cltd
test
pop
incl
mov
js
mov
cwtl
test
clc
and
lods
in
in
arpl
ja
push
hlt
jne
div
dec
pop
int3
pop
jl
adc
lahf
out
pop
stc
or
iret
loopne
cli
mov
or
mov
pop
and
lret
jmp
cmp
jl
and
sarb
dec
test
dec
add
cmp
lret
scas
and
mov
xor
xchg
dec
or
cld
jge
repz
mov
pusha
dec
mov
rcr
sbb
and
mov
sub
nop
sub
out
ja
cmc
insb
xor
jp
pop
pop
and
subb
cmpsb
pop
jne
sbb
fcomps
sti
pusha
sub
xor
adc
sub
xchg
cmpsb
or
sbb
fwait
push
in
jno
into
jp
in
icebp
icebp
fdivp
xadd
ret
mov
fwait
int
cmp
shrb
mov
pop
pop
and
sub
mov
xchg
cmpb
test
out
or
sbb
mov
sub
aam
test
shlb
jae
pop
outsl
push
mov
adc
loopne
cltd
adc
inc
push
or
xchg
pop
fcmovnb
lods
jle
mulb
sti
add
scas
sub
jns
das
mov
jle
xchg
xchg
addr16
pop
fnstenv
leave
lcall
xchg
jl
and
rcrl
push
push
mov
das
jecxz
mov
or
testb
sbb
into
xchg
mov
pop
inc
andl
ds
sahf
imul
mov
jmp
arpl
pop
scas
pop
jg
mov
mov
mov
cmp
xchg
mov
lds
pop
pop
pop
pop
jge
add
out
jp
cli
fisubrs
dec
mov
or
pusha
test
andl
mov
sub
xchg
in
mov
sbb
pop
xchg
mov
out
repnz
into
push
adc
jno
lds
push
shrb
js
mov
xor
repz
mov
push
call
jge
mov
dec
xchg
inc
sub
sahf
cmp
mov
sub
mov
and
out
mov
add
adc
jbe
call
inc
xor
sbb
jge
pop
dec
and
or
jle
jl
out
dec
outsl
lahf
mov
scas
call
insl
cmp
jecxz
popa
cmpl
adc
jecxz
pop
orb
cmc
mov
xor
aas
in
lods
add
daa
dec
jae
xorb
sbb
into
dec
repnz
xchg
es
xor
xchg
outsl
out
and
addl
adc
inc
xchg
sbb
jge
push
cmp
testl
pop
xchg
lods
pushf
pop
or
jg
cmpsl
fdivl
mov
testb
cltd
mov
imul
push
xchg
shlb
adcb
push
in
cmp
ljmp
adc
call
leave
dec
out
mov
loopne
add
sub
aas
adc
push
inc
idivl
xor
out
xchg
mov
lahf
imul
xchg
es
arpl
out
std
mov
pushf
ss
sbb
repnz
iret
push
pop
movsb
adc
mov
xchg
sbbl
push
adc
or
lods
iret
ret
inc
mov
pop
js
xchg
push
lea
ret
test
jbe
push
dec
into
nop
jmp
sub
test
addr16
mov
jo
add
dec
in
out
ret
inc
insb
out
push
inc
pop
xchg
push
clc
mov
xor
mov
out
ffree
xchg
push
mov
cmpsb
push
lahf
enter
or
jnp
dec
loopne
imul
inc
sub
sti
cwtl
cmp
xchg
push
mov
push
clc
aam
adc
sti
mov
jno
push
outsl
inc
inc
xor
pushf
mov
xor
orl
mov
mov
lcall
repnz
dec
or
ret
sub
data16
adc
mov
out
push
stc
repnz
jl
in
inc
sub
push
and
mov
xor
int3
sbb
imul
rcll
fsubrs
inc
popa
pop
bound
or
mov
popa
ds
pop
scas
repz
daa
inc
and
popf
pop
out
addl
add
xor
pusha
in
mov
dec
rclb
adc
out
mov
push
or
fwait
jnp
mov
pop
sbb
faddl
rol
jp
js
xlat
cmp
jg
push
int3
ss
pop
scas
or
ret
shll
mov
and
cmp
jno
cmpsb
jno
sub
lods
and
push
cmp
mov
negl
jle
jge
das
inc
ds
in
ljmp
lret
cltd
inc
fs
sbb
cmp
or
sbb
cmpb
dec
mov
fnstsw
xchg
out
mov
add
loope
sahf
jnp
sbb
and
fs
adc
fcompl
lret
xchg
daa
rol
roll
ret
jbe
push
repnz
ljmp
adc
pop
fwait
push
ss
fldl
dec
lds
fsubs
imul
shl
xchg
jno
fstpt
jbe
xor
lea
mov
pop
xchg
imul
loop
enter
jge
mov
inc
lea
xchg
lea
test
lods
add
fs
rorl
dec
push
adc
sarl
adc
mov
mov
in
ljmp
sbb
stos
inc
push
leave
cmp
testb
jo
jbe
lret
mov
das
push
adc
jae
dec
mov
out
sub
pop
mov
xor
mov
mov
xor
inc
mov
inc
mov
fidivrl
mov
mov
movsb
jns
add
push
jb
int
int3
loope
fidivrs
je
aad
js
mov
sbb
add
pop
pop
js
sub
outsl
push
mov
cli
loop
add
sahf
and
stos
sbb
pop
mov
sbb
rcll
mov
or
sub
movsb
fnsave
inc
scas
inc
inc
mov
loop
je
pop
das
test
pop
or
mov
mov
xor
pop
outsl
jp
cltd
pcmpeqw
clc
insl
mov
je
cmpl
mov
movsb
out
out
out
test
scas
cmp
add
iret
lea
sub
stos
dec
fldl2t
cli
cld
sarb
dec
sbb
sbb
imul
or
scas
cwtl
mov
xchg
add
inc
mov
cmp
mov
mov
dec
jmp
in
lock
fs
out
fcoms
lcall
dec
mov
dec
mov
icebp
pop
imul
adc
mov
lret
ret
addb
fs
test
loopne
pop
loopne
std
popf
mov
pusha
int
lret
movsb
int
mov
or
or
imul
cli
shl
js
mov
jge
xor
cmp
int
xchg
mov
stos
aad
xchg
adcl
xchg
jnp
in
lock
xchg
push
jge
adc
xchg
test
mov
cld
lock
inc
fnstenv
fsubrp
inc
sub
cltd
sbb
jecxz
sbb
sub
test
xchg
je
shl
frstpm(287
mov
pop
in
call
push
mov
adc
inc
push
jle
shrd
xchg
push
add
imul
cld
mov
inc
inc
hlt
test
dec
mov
das
xchg
cmp
jg
shll
mov
int
stc
in
pop
icebp
lds
loope
sub
xchg
sti
orl
je
cmp
lea
push
inc
lret
push
rol
popf
cmpsl
loopne
dec
xor
xchg
adc
xchg
popf
mov
lret
pushf
push
sbb
clc
mov
out
mov
pop
cmp
xchg
inc
jbe
xchg
ret
rolb
cmp
jmp
or
cmc
jo
insb
rclb
rorl
call
aaa
shrl
or
dec
repnz
jo
fs
aas
add
xchg
jb
push
jl
lahf
sub
add
xchg
mov
lea
jno
test
jmp
pop
push
cmp
fisttps
cmpsb
dec
popf
inc
repz
xor
subb
lahf
and
test
pop
lock
jno
push
fs
cmp
xor
push
and
or
faddl
in
cmp
mov
or
addr16
or
sbb
add
lret
add
mov
mov
mov
sub
and
imul
push
mov
test
xchg
jle
add
sbb
cmp
mov
xor
inc
sub
aad
jge
outsl
pop
push
pop
out
mov
rorb
repz
xchg
jg
add
rsqrtps
dec
fs
adc
cmp
cmp
adc
xor
outsb
push
insb
mov
int3
mov
fbstp
js
xchg
sbb
pop
shlb
jns
mov
cltd
je
push
sub
mov
dec
push
stos
rcrl
push
cmp
clc
jns
push
shrb
es
sbb
in
pop
mov
inc
push
xchg
xchg
icebp
mov
scas
fwait
mov
fcomp
loope
cmp
inc
lahf
test
repnz
cmp
mov
xchg
adc
shr
outsb
arpl
imul
ds
lods
mov
xchg
out
and
add
adc
jp
ret
imul
ret
mov
mov
push
mov
dec
icebp
sub
mov
iret
mov
push
jbe
aaa
pop
push
je
cmp
add
push
jnp
scas
ja
jbe
adcb
jo
mov
lods
push
test
push
xor
pop
test
stos
rcr
fisubs
icebp
gs
leave
outsl
ja
pop
loope
das
js
adc
push
decb
and
xchg
push
xchg
ja
adc
xchg
cmpsl
add
andb
mov
cmp
cwtl
jp
mov
xlat
loope
dec
sub
into
scas
push
mov
mov
cmp
mov
xchg
add
int
jne
cltd
test
loop
or
add
outsl
pushf
loop
notb
fidivrl
stos
bound
push
repnz
or
mov
sub
or
out
adc
call
jl
fwait
loopne
gs
je
adc
sbb
clc
push
dec
jb
xchg
pop
mov
sahf
leave
mov
mov
pop
lock
movsb
sub
arpl
aaa
insl
mov
imul
jle
testb
sbb
int3
scas
sub
pop
cmpsl
push
inc
xchg
les
mov
cmp
xchg
test
lods
xor
es
stos
arpl
sahf
inc
inc
lahf
lock
or
push
dec
adcl
in
mov
sub
pop
test
imul
push
out
cli
fdiv
sub
popa
add
jl
sbbb
mov
mov
lods
inc
fmull
jo
popf
in
jae
clc
or
jb
dec
mov
xor
cmc
std
mov
dec
adc
cmpsb
sbb
fildll
dec
sub
and
fstps
outsl
push
jg
push
jbe
sahf
or
in
imul
xor
jb
xchg
stos
mov
lcall
xchg
sub
lahf
pop
sbbl
rorb
or
ljmp
or
inc
pslld
jbe
int
jmp
rcll
stos
sub
pop
outsl
cmp
int3
pop
push
sti
jle
add
ds
adc
adc
inc
or
pop
xor
mov
daa
jmp
inc
cmp
push
jne
pushf
out
ret
imul
lds
sub
clc
imul
mov
sbb
jb
dec
fbstp
js
sarl
mov
mov
mov
mov
leave
cs
idivl
mov
cmp
test
loope
fxsave
aad
outsb
add
leave
lea
fmulp
lret
push
cmp
pop
sbb
pop
repz
jp
push
fisubs
adc
push
mov
das
js
std
ljmp
dec
xchg
call
mov
adc
mov
rolb
jg
leave
lcall
push
sub
aad
lcall
bound
sbb
or
mov
mov
fsub
outsl
inc
bound
ja
ds
adc
popa
lahf
daa
mov
xlat
pop
adc
jge
inc
stos
fistpl
lods
repnz
adc
sub
shrl
in
jecxz
xor
cld
aaa
das
leave
pushf
mov
cltd
hlt
cmp
decb
dec
adc
xchg
jmp
gs
cmp
adc
xchg
dec
scas
fucomip
jmp
pop
sti
add
or
rcl
cli
sub
jbe
jp
dec
add
push
mov
or
out
inc
dec
cltd
cmpsb
or
ret
push
insl
dec
add
pop
movsb
fcom
jecxz
jo
jge
add
jle
adc
mov
xchg
or
mov
insb
sahf
xor
jnp
add
push
xor
scas
or
jl
mov
push
dec
ds
add
xchg
je
loopne
mov
dec
mov
push
sbb
xchg
aad
or
push
jbe
xchg
shlb
cltd
push
icebp
pop
and
push
mov
inc
in
cld
daa
repz
mov
popa
outsb
mov
jecxz
pop
movsl
jl
jae
jecxz
insl
and
mov
or
sub
repnz
lods
cs
out
dec
fiaddl
das
dec
outsl
adc
adc
inc
or
loope
cmp
lock
xor
jecxz
pusha
cli
xor
and
push
xor
loope
lret
add
and
mov
lods
sub
cmp
add
mov
divl
inc
jg
push
add
xchg
fstpl
pop
out
pop
xor
inc
mov
jl
xor
adc
movsb
subb
addr16
adc
shlb
daa
xchg
stc
xor
stos
jge
cmc
mov
ja
rol
andb
test
icebp
jnp
xchg
xchg
cli
jge,pt
outsl
jp
pushf
sarl
dec
call
pusha
push
stos
and
mov
push
push
je
mov
lds
cs
bound
sbb
push
pop
mulb
int3
shl
and
dec
pop
ret
xchg
xor
lahf
sbb
xchg
mov
outsl
pop
inc
push
lret
loopne
jle
and
dec
xor
stc
add
imulb
mov
xor
fwait
cld
mov
mov
inc
mov
push
fwait
into
lock
or
sub
jnp
call
leave
ret
xchg
rorb
inc
ficomps
cwtl
int3
xor
leave
ret
subl
mov
aad
and
jne
ss
push
dec
es
xor
or
mov
inc
test
xorb
mov
push
jnp
dec
and
pop
and
push
test
or
xlat
jne
or
leave
lods
add
scas
jp
adc
push
cmpsl
popf
pop
sub
or
lods
lahf
sbb
pop
pop
mov
cmp
mov
xor
out
cli
test
ljmp
mov
arpl
sbb
mov
test
in
pop
int3
iret
xor
push
in
jecxz
push
mov
test
pop
cltd
rorl
sbb
lret
addb
xchg
sarl
sub
push
xor
jnp
jae
push
lods
lret
xor
or
daa
rcrb
xlat
inc
aas
shl
jbe
fbld
rclb
insl
nop
dec
cltd
cmpsl
dec
outsb
lea
rcll
gs
sbb
and
cmpsl
cmp
push
inc
xchg
fldcw
pop
mov
jg
jg
sbb
scas
cmpsl
outsb
mov
mov
js
push
cli
imul
gs
call
sbb
push
xchg
sub
sahf
mov
pop
test
jo
cmp
repnz
cmp
popl
add
rcrb
mov
sub
pop
xor
inc
test
pop
xor
into
and
loop
iret
jne
inc
icebp
stos
mov
xor
icebp
pushf
mov
nop
movsb
ficomps
je
jmp
rcrl
stc
ret
fsubr
nop
mov
stos
and
fucom
call
adc
das
fildll
movsl
pushl
lods
mov
push
jbe
fsubrp
push
and
mov
xor
int3
orl
jno
sub
inc
xchg
mov
add
mov
in
mov
nop
cwtl
cmc
mov
pop
rclb
cld
mov
xchg
sarl
or
loopne
lods
push
roll
inc
inc
mov
sbb
xor
clc
outsb
push
out
mov
sub
sbb
aad
mov
cmpsl
and
ds
pop
sbb
pop
cmpsb
and
into
sub
in
clc
insb
jae
out
push
sbb
push
andb
sbb
xchg
xor
jmp
sbb
loopne
push
in
loopne
mov
sub
cmp
es
sub
mov
xor
adc
ljmp
dec
nop
mov
ret
les
inc
xchg
jge
stos
movsl
daa
sbb
mov
fldcw
sarl
pop
jo
inc
movsl
bound
inc
insb
rorb
sti
xchg
fistps
adc
pushf
out
mov
mov
inc
sbb
mov
aas
movsb
push
inc
mov
lods
lock
dec
call
sbb
adc
adc
fcomps
or
loopne
pop
xchg
les
mov
cmp
insb
shll
push
jo
bound
xchg
in
lds
out
in
sti
shl
mov
and
lds
mov
sbb
push
js
xchg
int3
xlat
jbe
push
stos
cli
stc
mov
lock
fists
mov
add
nop
scas
lods
mov
mov
int
mov
ljmp
ljmp
fcoms
cmp
adc
mov
or
dec
push
or
mov
fdiv
pop
std
lahf
out
push
pop
pop
cmp
push
iret
push
mov
aad
lock
mov
aad
cltd
repnz
dec
aas
xchg
xor
fidivrs
xlat
in
mov
aaa
out
adc
jae
dec
repnz
addr16
mov
lods
rorb
pop
cmp
xchg
ds
gs
jmp
cmpsl
sub
inc
in
cmp
ret
and
and
mov
or
mov
cmp
ret
incb
scas
xor
cmp
xor
xchg
inc
enter
addr16
iret
lods
xchg
push
insb
cmp
sub
sbb
bound
insl
mov
lahf
popa
sbb
push
sahf
rorb
jns
hlt
inc
add
pop
mov
and
cmp
xchg
mov
mulb
sub
cmpsb
sbb
test
push
insl
lcall
mov
out
xchg
jnp
push
push
loop
add
imul
jno
aaa
jo
and
pop
lcall
gs
or
cwtl
push
movsb
add
xchg
aaa
push
push
add
dec
cltd
inc
cmp
nop
adc
mov
fcmove
call
scas
sarb
loope
das
jne
rcrl
repnz
sub
push
pop
xor
in
pop
pop
icebp
gs
push
addl
inc
xchg
ja
fldl2t
loopne
xchg
xchg
inc
mov
rcrl
bswap
call
inc
push
test
movsl
rcll
xchg
movsl
cmp
pop
cmp
repnz
scas
jl
push
sarl
mov
sub
out
mov
call
data16
test
leave
add
jp
mov
xor
mov
fwait
xor
xchg
outsl
pop
mov
loop
push
xor
jmpw
outsl
xor
inc
adc
cld
fwait
mov
mov
adc
jecxz
mov
in
pusha
in
cvtps2pd
test
pop
pop
imulb
mov
push
in
mov
lret
or
mov
in
shl
sbb
cmp
mov
arpl
jle
rcll
mov
div
lds
jb
jo
idivl
xchg
push
lock
xchg
lock
fs
jb
cwtl
fcoms
mov
add
ficoms
jle
xlat
pop
and
icebp
roll
inc
mov
clc
sub
movsb
ja
sub
or
mov
push
and
push
inc
cmp
out
pop
in
loopne
test
call
stos
push
push
cmpsb
bound
hlt
cld
push
push
inc
mov
sbb
mov
mov
jp
test
jae
xor
rcll
xchg
rcrl
out
fs
push
add
mull
call
call
lcall
test
ja
dec
stos
int
mov
pushf
add
push
inc
lahf
xchg
movsb
push
or
aad
daa
pop
fisubl
adc
push
jp
push
mov
or
adc
lods
xchg
and
jae
ss
pop
iret
xchg
jne
inc
orl
outsb
int3
enter
xchg
push
add
into
arpl
clc
outsl
mov
mov
out
push
lret
sub
imul
sub
sub
add
ds
push
sarl
loop
or
and
lahf
cld
das
mov
xchg
out
pop
cmp
or
and
cmp
pushf
mov
es
mov
enter
fidivrs
sti
jge
fisttpll
je
cmp
repnz
mov
cwtl
jnp
mov
dec
data16
lods
popf
jbe
add
xor
jp
lret
jle
sahf
mov
ret
ret
push
and
mov
mov
std
inc
mov
fstl
dec
xor
pop
fwait
js
idivb
mov
push
repz
jb
or
jecxz
sbbb
inc
or
daa
cltd
cmp
mov
dec
lea
fwait
repnz
mov
idivl
jl
jl
movb
lcall
jno
or
push
cmp
out
pop
xchg
cli
sarl
pop
push
nop
push
jo
repz
les
lret
push
add
jo
jle
div
jg
inc
loope
jne
in
pushf
outsb
cld
pop
test
jne
mov
push
addr16
jae
orb
pop
es
mov
sub
add
cmp
in
dec
stos
lcall
mull
rolb
aaa
or
jbe
scas
jl
dec
pop
push
sbb
dec
int
enter
out
jno
or
xchg
push
sub
xor
mov
test
movsb
fisubs
push
mov
and
push
sbb
ficompl
dec
in
imul
mov
lcall
sub
repz
dec
sub
lcall
in
outsb
xlat
addr16
inc
jl
rol
int
or
pop
int
and
xor
mov
add
rolb
push
shll
pop
test
mov
inc
stos
xchg
ss
test
movsl
orl
mov
shrl
les
das
sub
in
lret
adc
lock
cmp
fptan
ret
addr16
repz
cwtl
adc
adc
adc
mov
daa
xchg
into
xorb
sahf
sbb
ss
shl
fs
aad
xor
push
ljmp
sub
adc
jge
out
push
sbbb
pop
cmpsl
mov
jmp
shrl
ja
rcr
adc
add
in
xchg
push
mov
addb
dec
inc
ljmp
lahf
xor
je
lods
or
jge
pusha
or
mov
push
mov
ja
scas
cld
mov
lock
mov
sbb
push
ds
xor
cmp
cmc
sub
push
dec
ljmp
stos
xor
inc
inc
lcall
xlat
stc
in
imul
mov
and
push
jo
dec
mov
stos
mov
mov
add
andb
cltd
in
mov
scas
movsb
jns
and
jp
add
imul
leave
out
mov
mov
mov
in
mov
cmpsl
lret
imul
lcall
loop
push
jo
test
mov
and
inc
std
mov
pop
test
scas
test
xchg
test
push
or
test
inc
les
inc
leave
sub
frndint
ja
lret
dec
ja
sub
sub
loope
popl
mull
push
push
jg
cmpsb
sahf
or
xchg
xlat
jmp
jmp
jl
sbb
xchg
fisttpll
lcall
movsl
pushf
pushf
loopne
xchg
in
sarl
pop
cli
xor
jecxz
jle
scas
pop
int
repz
mov
stc
jecxz
into
and
push
mov
int3
cli
daa
sub
sub
hlt
rorb
and
pop
jno
or
cmp
pop
shrl
std
pop
add
iret
scas
pusha
adc
nop
sbb
xor
fsubrs
cmpsl
sub
mov
ja
cmpsb
jecxz
sbb
adc
insl
and
jge
pop
sti
cmp
sbb
inc
inc
xor
aas
test
fimull
sbbb
stos
fldl
lss
jmp
xor
les
nop
dec
mov
fdivrl
pushf
data16
or
mov
mov
lret
jl
popa
pop
xchg
mov
fs
fisubrl
enter
sbb
lret
or
push
inc
sbb
imul
je
ss
stc
jg
rorl
ds
fwait
mov
les
pop
cmp
push
jbe
ss
jne
jp
pop
xchg
nop
ja
cmp
das
adc
push
mov
cmp
ficoms
dec
dec
int
out
add
mov
add
or
fucomip
scas
or
add
test
pop
inc
mov
sbb
pusha
movsl
movsb
in
fiadds
mov
adc
or
cmc
test
cmp
xlat
cmc
mov
dec
mov
in
mov
mov
jne
hlt
cmp
iret
shll
inc
cwtl
daa
mov
add
movsb
jo
mov
cmp
or
adc
in
cwtl
outsb
ret
cmp
or
int
mov
adc
add
shlb
or
and
add
fstps
stos
ret
insb
xor
cli
sub
test
std
jl
mov
fldcw
mov
dec
sbb
repz
xor
dec
xor
sub
fsubrl
xor
dec
cmp
enter
roll
adc
pop
xor
dec
or
lahf
adc
loopne
aad
rcll
cmpl
pop
hlt
sbb
stos
xor
andb
jb
sub
or
cmp
or
jmp
push
lcall
negl
imul
mulb
jae
mov
xchg
cld
and
daa
ret
rol
adc
shl
sub
sub
push
xadd
xor
popa
inc
faddl
scas
stos
mov
inc
push
push
xor
inc
and
dec
popf
push
xor
into
mov
jbe
fcmovb
out
cmp
cmp
sbbl
adc
lods
cwtl
inc
jne
jnp
mov
dec
lahf
shrl
outsb
mov
jno
pop
fsubr
lcall
mov
inc
xchg
add
push
xor
aam
sahf
rclb
into
movsl
sarl
stos
sar
les
movsb
es
scas
ret
stos
cmp
test
or
test
xlat
sub
pop
aas
test
fst
or
std
test
ss
cli
jns
test
dec
pop
lret
push
xor
testl
push
mov
pop
ret
in
xor
mov
sub
fldl
movsb
shl
subb
repnz
and
lret
in
mov
popf
cmp
jge
sbb
lea
enter
stc
jge
mov
insl
ds
jns
popf
mov
jne
add
xchg
sbb
lret
shrl
inc
mov
movsb
std
or
roll
rorl
dec
out
out
add
mov
jmp
jnp
dec
jecxz
and
and
ja
adc
push
arpl
mov
aas
jne
cmp
not
shrl
cmp
jae
fstps
or
stos
movaps
js
idivb
pop
aaa
cltd
clc
push
push
dec
popf
ljmp
mov
xchg
jo
aam
mov
test
push
xchg
and
inc
sbbl
jge
xor
jge
pop
cmp
imul
mov
mov
jno
xor
mov
movsl
or
pop
dec
xor
jge
jo
movsb
sub
pop
cli
pop
dec
dec
mov
in
push
stos
lret
test
es
aad
sub
inc
cmp
pop
fbld
mov
addr16
rorb
lods
int
scas
cmp
cmp
test
adc
ds
cmp
pusha
pusha
mov
mov
shlb
sub
pusha
jae
xchg
jmp
and
dec
jp
xbegin
lods
pop
hlt
mov
imul
mov
mov
fwait
xlat
or
int3
cld
movsb
repz
mov
and
jo
xor
orl
rcr
sub
sbb
hlt
mov
pxor
int
cld
or
xchg
in
lods
jbe
jge
dec
mov
popf
lahf
shlb
cmp
faddl
cmp
ss
push
iret
jns
cmp
push
not
inc
mov
iret
dec
decl
sbb
adc
jmp
cmc
cltd
mov
add
fsubrs
jae
push
mov
xchg
pop
insl
pusha
mov
shll
jl
add
and
push
dec
adc
mov
fwait
dec
jae
or
les
ret
mov
mov
ja
test
mov
fisttps
xor
jnp
inc
sub
fsubr
out
pop
ljmp
lret
int
xchg
xchg
orb
fwait
xor
je
push
push
pop
jg
add
icebp
adc
cmpsb
inc
mov
rcll
jecxz
rcrb
subb
fadds
insb
xor
rorb
lods
cmpsl
ret
jno
out
dec
xor
shlb
or
call
push
mov
jb
push
sbb
nop
xor
xlat
inc
sbb
mov
loope
dec
lods
mov
mov
dec
cli
pop
sbb
aad
cltd
mov
es
jae
xor
negb
int
mov
icebp
inc
push
imull
cmp
push
fbstp
jmp
sbb
ret
cmp
adc
out
adc
mov
sbb
jno
inc
fnstenv
lret
pop
cmp
push
out
jmp
mov
inc
incl
pop
cli
sbb
adc
rorb
sti
jo
inc
outsl
add
pop
push
loop
add
mov
xor
ja
popa
mov
mov
std
ficoms
les
movsl
out
pop
sbb
out
std
cli
lret
cld
xor
sub
arpl
dec
jns
mov
sti
sbb
jae
jne
jbe
xchg
cmc
jne
cmpsl
scas
mov
lret
in
aaa
jl
dec
adc
inc
or
pop
in
fisubrl
sub
hlt
inc
insb
mov
pop
mov
shrl
add
add
not
xlat
andl
cmp
sbbl
pop
dec
and
cs
mov
outsl
xor
add
or
pop
popa
xchg
mov
leave
imul
in
jnp
mov
jp
cmc
inc
mov
in
push
mov
cmpsb
jl
sbb
call
dec
stos
enter
or
fsubl
jmp
int
push
mov
aaa
notl
adc
xor
dec
scas
aas
scas
fidivrl
mov
fistl
ss
jge
inc
cwtd
ja
jo
rcll
mov
outsl
in
loop
push
mov
enter
scas
sub
xor
adc
push
push
test
sub
add
shll
xchg
adc
fwait
shll
cmp
xor
imul
shll
dec
mov
mov
shrl
flds
push
shlb
inc
mov
ja
pop
test
imul
idivb
push
daa
cmpb
stos
notl
fwait
ret
sbb
iret
sub
pop
cmp
push
and
dec
dec
xchg
sbb
push
push
pop
pop
push
pop
jmp
inc
mov
jno
sbb
xchg
inc
mov
jmp
in
and
fimull
js
insb
mov
sbb
mov
inc
xchg
inc
xchg
divl
xchg
jg
inc
stos
mov
mov
dec
imul
jge
cmpsb
add
inc
lods
jg
das
scas
lret
pmaxsw
mov
mov
testl
xchg
jge
xchg
repnz
cmp
out
movsl
clc
sub
dec
lea
nop
loopne
xor
cmpsl
stos
xlat
sbb
jne
sbb
push
int
out
test
in
mov
add
out
mov
cmp
cmpsl
sub
sti
ljmp
clc
dec
jno
push
or
aaa
inc
mov
add
in
int3
out
mov
pop
xor
lds
aas
pusha
dec
xor
inc
xor
xchg
cmp
mov
mov
push
daa
jg
clc
mov
mov
push
dec
cmp
jg
imul
dec
aam
adcl
in
ficomps
and
popa
or
dec
pop
xchg
lods
shlb
scas
jle
lret
xchg
cs
and
icebp
lods
test
icebp
mov
xlat
jge
sub
push
mov
cmpsb
imul
fwait
je
add
inc
xorb
hlt
loope
cli
int
into
mov
lret
or
xor
cmp
leave
cmpsb
mov
shll
inc
adc
aad
pop
lock
shlb
adc
pop
bound
stos
lcall
dec
xchg
jg
fcoms
gs
jne
shl
xlat
repz
xlat
push
outsb
rorl
cmovge
int
shrl
fsubrs
sub
lahf
daa
mov
inc
shr
dec
pop
xchg
mov
dec
push
mov
mov
das
lock
cmc
cmp
sub
test
aam
sub
push
and
mov
scas
paddsb
inc
enter
icebp
xchg
rcrb
pop
jmp
jmp
jne
cmc
add
adc
jo
jbe
pop
mov
cmp
dec
test
insl
push
cmp
xchg
cmp
outsb
stc
jbe
imul
test
push
rcr
push
cwtl
jle
push
or
or
cmp
pop
mov
es
pop
cmp
shll
cmc
push
ficompl
shl
xor
dec
sbbl
fnstcw
and
pop
stos
into
in
sub
dec
push
test
scas
inc
sahf
push
sub
jno
xor
nop
mov
aam
or
lahf
xor
pop
out
jle
lock
mov
ficompl
push
mov
lods
imul
das
in
cmp
mov
and
jp
dec
mov
mov
pusha
out
xchg
sub
sti
or
push
aaa
dec
cli
lods
sarl
lea
and
pop
xor
sbb
daa
and
sbb
or
push
push
hlt
add
in
and
icebp
sbb
fwait
or
nop
mov
sub
rcl
adc
pop
ss
push
mov
add
clc
in
inc
or
int3
subl
mov
dec
pop
mov
push
dec
mov
inc
add
enter
mov
cmpsb
push
mov
mov
ror
dec
out
inc
jnp
inc
data16
push
repz
lods
mov
loop
jns
adc
add
ret
insl
out
aaa
dec
sbb
cwtl
push
and
cmp
pop
dec
scas
mov
inc
push
inc
and
sbbl
inc
add
mov
xchg
xchg
mov
dec
or
inc
mov
or
dec
bound
add
jno
sbb
jmp
xorl
pop
mov
xchg
inc
xchg
pop
adc
ds
mov
xlat
or
cmp
xchg
jnp
outsl
stos
cltd
sub
negl
push
ror
inc
pop
test
mov
and
xorl
add
addr16
lods
mov
pop
das
or
test
pushf
inc
mov
add
jmp
loop
movsb
inc
push
pusha
and
xor
sarb
movsb
cld
add
arpl
cmp
mov
repz
aaa
rorb
xor
in
inc
sbb
pop
fisubl
lock
andb
ja
cmp
dec
fidivl
repnz
cld
je
sub
dec
out
sbb
pop
cmp
popl
addr16
andb
inc
lock
dec
fisubrs
push
xor
pusha
jmp
sbb
mov
or
pushf
and
cmp
into
out
pop
mov
or
dec
cltd
mov
add
cmc
mov
fucom
out
stc
mov
dec
in
jnp
dec
sbb
mov
shll
outsl
pop
jo
rcll
test
rcl
divb
popf
xor
or
adcb
sub
jl
xor
pop
loope
sub
or
pop
push
jl
fimuls
xchg
jg
mov
push
or
or
in
jmp
push
lods
cmp
xlat
aaa
int3
popf
pop
lret
cli
gs
lahf
in
mov
shll
shl
and
call
lahf
push
mov
scas
shll
mov
iret
mov
xor
leave
imul
iret
and
pop
fs
fbstp
push
jne
adc
add
sbb
testb
pop
mov
sarb
hlt
dec
out
adc
sbb
sti
mov
sbb
sub
icebp
frstor
cld
fmuls
mov
test
dec
popa
jnp
orl
in
int
push
fdivrl
insl
mov
out
push
idiv
or
outsl
icebp
mov
lret
int
in
dec
std
pop
addr16
andl
push
shlb
movsl
xchg
cmp
mov
fadds
aam
mov
inc
test
fucom
sbb
out
int
fdivs
nop
loop
add
out
and
stc
jmp
inc
sti
movsb
divl
dec
pop
jge
mov
out
sbb
push
fdivp
jno
pop
dec
aad
add
call
push
or
add
pop
push
sbb
clc
jmp
int3
or
insb
cmp
test
sub
jo
outsb
dec
popf
xor
jne
cmp
fcoml
pusha
mov
fiadds
sub
lea
inc
imul
and
seta
bound
lds
push
xchg
inc
or
jp
cmp
dec
sub
sbb
rorl
movsl
dec
mov
out
dec
jmp
xchg
xor
shrl
xchg
fldenv
mov
sarl
and
clc
sub
cmc
xorb
sub
addr16
outsb
dec
xor
loop
rol
dec
ret
sbb
xchg
cli
add
lret
hlt
popa
test
or
leave
ror
fisttpll
jl
inc
inc
pop
cli
loopne
sub
clc
cmpsb
pop
das
or
mov
sub
shr
xor
xchg
mov
lods
sbb
inc
dec
inc
mov
push
repnz
cmpsb
adc
lods
nop
xor
mov
pop
roll
jle
mov
clc
fs
dec
cld
xor
sub
fdivr
jge
add
fsubs
scas
ds
add
stc
mov
in
cmpsb
insb
in
arpl
add
mov
jnp
dec
pop
std
xlat
outsl
sbb
gs
inc
cli
pop
lods
push
dec
xchg
add
pop
shll
fsubrs
dec
jns
add
inc
jb
mov
insb
xor
or
adc
xchg
jle
adcl
adc
adc
xchg
lret
lods
pusha
arpl
rcrb
pop
jl
bound
fidivs
in
movaps
cmp
inc
in
mov
aaa
aas
dec
loop
cmp
lods
in
pop
outsb
cmp
fs
dec
push
cmp
pop
jbe
sbb
notb
push
push
pushf
clc
push
mov
add
push
push
insb
sbb
xor
sti
mov
sbb
movsl
subl
popf
sbb
mov
pop
bound
mov
jp
pusha
gs
sub
mov
jge
sbb
push
mov
and
loopne
and
sbb
xchg
dec
mov
insb
in
pusha
xor
sti
jne
xor
lds
fidivrs
pop
mov
pop
push
jmp
dec
adc
xchg
arpl
or
sbb
ds
lods
push
push
pop
xchg
stos
loope
cmp
cmp
lods
fwait
xchg
adc
sti
inc
inc
sbb
lds
mov
jb
and
repz
jle
ljmp
and
mov
pushf
es
sar
mov
dec
inc
dec
std
repnz
mov
out
and
test
push
xor
xchg
and
ficoml
or
insl
cmp
add
dec
or
sbb
xchg
sub
mov
dec
mov
testb
and
mov
out
dec
add
lret
mov
xor
adc
pushf
cs
fwait
jno
fisttps
push
test
mov
lea
jmp
push
sub
nop
stos
notb
into
aaa
xor
aaa
mov
gs
lock
repnz
stc
mov
add
fdivrl
adc
jo
dec
jmp
jno
mov
jno
loope
xlat
repz
or
ljmp
dec
push
adc
sarl
jl
jmp
fwait
jmp
lock
adcl
add
pop
aad
or
lret
adc
cmp
mov
test
roll
xor
ds
fiaddl
cmp
xor
subb
loop
sti
dec
mov
stc
mov
in
ret
xor
mov
sbb
lock
push
or
mov
fsubrp
rcrl
xor
negl
scas
jbe
or
test
push
jnp
mov
cli
in
add
aam
add
push
adc
jbe
stos
xchg
jb
dec
push
jno
jge
cmpsb
addr16
dec
lcall
fidivs
loope
lods
fidivrl
das
popa
mov
sahf
idiv
inc
mov
mull
lret
lock
mov
push
xchg
xchg
les
dec
lods
adc
mov
push
mov
mov
fs
push
xor
aad
aam
into
sarb
popf
jl
out
aas
les
or
mov
add
dec
or
xchg
push
dec
bound
inc
das
insb
in
inc
sarl
fstl
pop
loop
sti
std
pop
dec
jae
into
jo
inc
lds
cmp
or
fsubp
sti
sbb
in
insb
jno
and
pop
xor
inc
xchg
sbb
subl
push
xchg
stos
sub
xchg
xchg
aas
mov
fnstcw
rcrl
dec
pop
cmp
mov
mov
call
mov
sub
test
nop
punpckldq
sbb
cltd
jle,pn
iret
sub
shl
lock
or
inc
das
movsb
jnp
xor
mov
add
and
mov
mov
mov
sbb
hlt
xchg
mov
push
int
fmull
fs
ss
pop
jl
dec
test
bound
lods
clc
mov
mov
sub
leave
push
js
in
dec
mov
popa
pop
sbb
nop
jne
sbb
fmuls
cwtl
cmp
ss
cmp
xor
nop
or
loopne
fst
or
aad
ret
mov
loope
dec
rcrl
dec
inc
outsl
cmpsb
xor
mov
xor
bound
sti
test
jle
push
sub
rcl
pop
or
sbb
mov
xchg
sbbl
popf
pusha
push
jmp
ljmp
hlt
add
jecxz
pop
jmp
jecxz
insl
cltd
add
lret
jo
mov
or
andb
mov
cltd
cmpsb
xchg
adcb
jmp
ja
mov
data16
adc
std
out
std
pop
cmpsl
sti
sbb
mov
add
cli
mov
sbb
orl
loope
cmp
insl
xchg
flds
scas
mov
vpackssdw
scas
mov
fnstsw
ja
inc
sub
jp
pushf
or
jo
jle
mov
shr
mov
or
ret
and
gs
iret
rcrb
sahf
ja
pusha
cmp
push
xor
nop
movsb
adc
xor
loop
inc
dec
and
testl
cmp
xchg
pop
mov
and
int
mov
aad
dec
das
jb
cmc
mov
lods
mov
fcoms
sbb
xlat
xchg
mov
and
jmp
std
fsts
mov
ja
mov
mov
push
push
aaa
movsb
mov
ja
cmc
cmp
inc
cld
inc
sbb
icebp
clc
cld
xor
insb
jl
mov
addr16
imul
sbb
dec
negl
xchg
cmp
push
loope
pop
sub
sbb
add
cmp
mov
xor
notb
jmp
or
mov
jno
cltd
outsb
dec
mov
enter
mov
jno
push
popf
repz
cli
repnz
inc
nop
xchg
in
scas
cltd
and
sar
add
insb
xor
xor
addb
in
mov
les
mov
jge
ljmp
in
mov
or
or
mov
pushf
mov
and
mov
adc
ja
push
mov
add
cli
jbe
lret
pop
fbstp
or
test
add
bnd
add
cmp
scas
scas
or
cli
mov
or
add
fsubrl
cld
pop
pushf
test
cmp
out
icebp
pushf
push
inc
outsl
push
aad
cltd
jbe
icebp
leave
pop
sub
mov
lods
xlat
mov
scas
sbb
cltd
shl
mov
ds
clc
aad
lock
pop
ret
adc
cmp
fs
into
ss
push
and
lea
ret
sti
sbb
imul
aaa
test
or
and
mov
push
std
es
jp
scas
mov
hlt
and
mov
add
daa
cmp
popa
insl
test
fcmovnb
cmc
cmc
fldenv
adc
adc
jmp
icebp
in
fdivs
push
cmpsl
imul
rclb
lcall
std
adc
mov
sti
dec
aas
ljmp
ss
iret
scas
push
popa
iret
je
xchg
ret
xchg
iret
jae
mov
mov
sub
scas
mov
je
adc
aad
pop
xchg
xlat
gs
loopne
mov
add
test
mov
cwtl
push
in
jbe
out
push
shrl
out
lret
add
mov
sahf
cwtl
shlb
dec
out
jne
jbe
leave
add
jns
shll
dec
cmp
fs
add
adc
pop
scas
flds
test
pop
push
ds
push
xchg
mov
sbb
cmp
dec
scas
mov
sbb
mov
nop
stos
insb
mov
aam
test
loope
scas
xor
sbb
rol
adc
in
icebp
lods
adc
xchg
sub
pextrw
push
xor
mov
popf
lods
test
cmp
jp
adc
ret
sbb
call
adc
cmpsl
xchg
or
incb
push
data16
movnti
add
pusha
inc
jge
sub
jb
rcrl
shrb
stos
inc
push
xorl
xchg
gs
lods
outsl
fwait
icebp
sbb
mov
push
mov
lea
xor
jecxz
push
test
xor
lods
rclb
cli
add
sbb
and
push
arpl
sub
dec
dec
inc
lea
inc
mov
ljmp
mov
xchg
pop
mov
lret
cmp
mov
add
lea
mov
cmpsb
outsl
xchg
push
mov
icebp
ljmp
scas
dec
ret
xchg
mov
out
mov
sbbb
outsl
ret
jo
xor
or
mov
and
or
aad
xor
xor
mov
dec
iret
mov
cli
adc
sbb
xchg
push
lock
xor
push
jnp
leave
push
pop
cmpb
cwtl
shlb
test
sbbl
test
jecxz
jl
xchg
leave
ljmp
andb
std
es
mov
jle
sub
add
mov
pop
ljmp
jg
ja
cli
or
mov
addl
mov
movsb
les
les
bound
adc
push
xchg
push
cwtl
xor
aam
xchg
bound
lock
fildl
push
add
outsl
les
and
roll
enter
mov
jle
jne
mov
xor
mov
mov
xor
mov
pop
lods
mov
gs
frstor
fisttpll
icebp
add
hlt
call
es
xor
ja
ficoml
out
std
out
adc
das
jge
test
mov
test
cli
ret
dec
pop
ljmp
mov
inc
repnz
mov
je
dec
loopne
loop
loope
sti
pop
cmp
loopne
jmp
icebp
jbe
imul
adc
push
test
ret
les
shrl
movsl
sub
or
inc
jnp
out
cmp
push
lret
mov
push
adc
inc
dec
ljmp
inc
mov
pop
push
push
lret
aam
xorb
mov
fdivrl
lock
out
hlt
subl
mov
cs
jp
or
inc
mov
xor
fnsave
repz
icebp
ret
mov
aaa
sub
fbstp
sbb
xor
repz
data16
xor
out
movsl
stos
lds
xchg
dec
dec
xor
mov
lea
and
shlb
add
faddl
and
stos
mov
fcomps
mov
or
repnz
call
scas
ljmp
jecxz
in
and
ret
xor
dec
ret
and
push
test
call
in
in
inc
push
mov
mov
testb
cmpb
mov
mov
mov
cwtl
xor
dec
insl
cld
xchg
xchg
lret
es
arpl
xchg
aas
push
and
nop
sub
xchg
ret
push
sub
roll
mov
shl
mov
jnp
jmp
out
mov
outsl
push
faddp
pop
sti
test
aam
sahf
imul
cs
ror
ds
dec
invd
mov
adc
sbb
jbe
cmp
adc
daa
adc
adc
in
insb
xchg
decb
push
inc
xor
test
sub
inc
mov
bound
push
test
fldcw
mov
call
lds
loop
bound
in
push
xchg
ret
call
or
je
lahf
dec
ss
pop
ret
xor
or
in
xor
ficompl
clc
inc
inc
mov
rorl
add
jmp
or
inc
popf
push
daa
mov
cmp
jmp
jns
mov
jl
mov
pop
jge
cld
mov
dec
pusha
push
nop
and
mov
movsb
out
dec
clc
lret
xorb
bound
arpl
and
xlat
dec
cmp
add
psllw
push
sub
mov
xchg
std
pop
dec
cbtw
add
inc
ds
in
shrb
add
jecxz,pt
fwait
jb
mov
stc
bound
mov
adc
lcall
out
loop
or
or
mov
je
out
add
cs
sbb
loopne
insl
fmuls
dec
xor
adc
mov
inc
push
icebp
enter
adc
push
jbe
mov
cmp
xchg
dec
xchg
iret
mov
cmc
mov
sub
repnz
scas
daa
mulb
sahf
fnsave
lds
cmpsb
push
push
ljmp
inc
test
dec
rclb
sub
repz
mov
repz
adc
mov
arpl
imul
das
jg
jecxz
fsubl
xchg
icebp
fsubrl
faddl
inc
ret
rcl
push
lret
cmp
mov
jl
test
pop
dec
push
xchg
sub
sub
pushf
call
imul
cmpsb
xchg
enter
cmpsl
cmpsb
push
mov
push
push
les
xchg
add
ljmp
fwait
gs
sbb
imul
iret
sub
sbbl
aas
add
mov
out
mov
jmp
xchg
hlt
push
aas
xchg
xchg
and
mov
aam
mov
inc
mov
push
sahf
push
mov
andl
xchg
mov
mov
or
mov
adc
aad
cmpsb
xlat
pop
cmp
rclb
pop
fcmovnu
insl
ss
mov
fstps
outsb
jl
jnp
cmp
mov
xchg
and
cwtl
cmp
dec
sub
dec
repnz
cmc
inc
mov
aad
adc
jno
movl
fmuls
lods
lds
cmp
xchg
js
jnp
jne
mov
inc
repnz
xor
jle
xchg
lods
dec
jecxz
cmp
ljmp
in
adc
shll
adc
aas
fwait
sub
mov
pop
mov
push
stc
mov
push
inc
lcall
sbb
sbb
mov
mov
sub
insb
test
daa
pop
adc
xchg
sub
pop
ljmp
jg
hlt
push
fldl
dec
es
push
icebp
mov
pop
rcll
or
in
add
pop
pop
roll
test
sub
imul
test
negb
out
scas
into
cmp
inc
fldcw
push
push
ss
sbb
aam
xor
shrl
scas
in
insb
push
mov
adc
in
push
sti
lret
xchg
lea
cmp
es
or
inc
lret
icebp
push
daa
data16
sahf
pop
pop
scas
dec
or
or
into
inc
lcall
cmp
add
and
mov
jle
ss
or
xchg
xchg
aad
jne
std
scas
or
leave
cmp
mov
insb
fdiv
jmp
push
loop
mov
cmp
dec
scas
int
or
fisttps
fcmovnbe
xchg
lahf
cmc
push
push
adc
fsub
enter
pop
out
mov
sbb
stos
mov
and
cmp
aad
add
fists
add
sarl
insb
mov
gs
outsl
repnz
imul
shrb
cli
ds
pop
stos
int3
lods
mov
xchg
stc
or
jmp
xor
cltd
mov
popf
imul
sbb
pop
pop
xchg
push
imul
sbb
cwtl
dec
out
cmpsb
addl
jp
frstor
pop
cli
jle
adc
outsb
cmp
repz
dec
mov
cli
mull
add
stc
xchg
bound
pop
aad
lahf
pop
inc
fildl
inc
jo
int
fiadds
pushfw
add
sbb
jle
mov
xchg
push
cs
add
mov
add
les
cli
adc
ror
pop
cmpsl
fisttps
dec
rcll
test
mov
add
cmpsl
push
ret
and
sub
fcomps
jmp
sbbl
icebp
mov
in
add
inc
or
fwait
repnz
lods
mov
push
push
add
inc
jle
push
fsubl
dec
lods
orl
and
fiaddl
or
mov
ljmp
dec
adc
mov
and
mov
shl
xchg
xorl
or
fcomp
daa
xor
outsb
in
add
cmpsl
xchg
loop
mov
adcl
pop
divb
cmp
xchg
test
stos
test
aam
addl
pusha
dec
icebp
cmp
sub
jg
aad
outsb
sbb
mov
lret
ja
sahf
adc
push
push
adc
xor
pop
fcomi
cwtl
fdivrl
sbb
fnstsw
xor
jne
mov
pop
dec
cmpb
fwait
lret
or
jmp
popf
mov
sub
dec
cmp
es
out
mov
jo
sbb
cmp
int3
cmp
scas
or
jecxz
mov
add
mov
push
cmp
add
testl
movsb
aam
ljmp
pop
imull
out
cmp
insl
dec
dec
ret
in
sbb
add
dec
addr16
imul
add
dec
jle
cltd
push
jo
inc
push
dec
rcl
ret
cmp
aad
or
ss
pop
mov
and
mov
lea
fimuls
cmc
mov
add
mov
mov
cmp
cwtl
mov
lock
call
sbb
ret
mov
leave
hlt
mov
jnp
in
js
inc
andb
and
int
fadd
and
cmp
jecxz
mov
out
or
in
dec
add
pop
add
xchg
or
jge
xor
mov
ds
add
and
pushf
xor
ja
dec
add
in
cltd
push
mov
dec
mov
mov
aam
push
loop
cld
mov
pushf
loop
inc
adc
pop
addb
push
push
nop
daa
jle
sub
mov
push
lret
cmc
movb
cmpsb
dec
je
scas
sub
pop
push
add
shrl
add
push
aam
arpl
mov
sbb
pushf
and
mov
rclb
mov
sbb
cmpsb
push
lods
out
pop
arpl
adc
daa
sub
outsl
stc
in
jmp
add
cmp
mov
push
xor
push
aad
push
xor
cli
idivl
mov
dec
arpl
or
repz
adc
rcl
decl
ljmp
in
in
mov
dec
fs
push
jnp
out
call
jno
sub
jae
outsb
mov
mov
push
mov
push
in
sbb
inc
cld
add
xorb
out
push
je
or
ret
mov
out
xor
in
xor
xchg
sub
add
call
sarl
jl
ja
rcr
cltd
repnz
adc
pop
icebp
mov
pop
and
aas
cmc
cmp
sbb
stos
dec
adc
rcl
and
fwait
pop
fisubs
inc
add
jp
xchg
jg
add
aaa
jae
insl
push
mov
idivb
dec
sub
mov
lods
jne
ret
test
mov
nop
js
cmp
push
popa
cmpsl
push
add
push
pop
jmp
ds
xlat
hlt
clc
mov
lret
xor
mov
pop
fstl
xor
cli
test
and
outsb
test
stc
lahf
icebp
push
stc
into
insl
add
mov
mov
or
and
outsl
jnp
subb
sub
ret
lret
push
push
dec
pop
sbbl
or
in
dec
cmpb
inc
jl
sub
mov
jno
xor
push
fisubs
cmc
push
jle
and
inc
sub
out
les
lods
in
jbe
rcrb
js
in
cmp
mull
in
rorb
popa
mov
pushf
arpl
and
jnp
jb
daa
sub
mov
nop
loope
jne
es
pop
hlt
lret
jle
test
adc
sub
dec
xchg
xchg
inc
jmp
int
mov
pop
jae
mov
jo
imul
cwtl
arpl
cmc
pop
mov
push
mov
ja
sub
cmp
xor
jno
sub
inc
call
push
aad
mov
mov
mov
and
lret
pop
jb
fsts
mov
pop
test
incb
testb
add
pop
lahf
dec
movsl
mov
or
pop
fwait
sarb
testb
outsl
or
test
mov
dec
cmp
imul
iret
mov
rep
imul
fisttps
int
cmc
mov
insl
lea
sub
enter
test
sub
int
dec
adc
or
jp
jo
jg
addr16
test
addl
sub
in
lcall
sub
add
sbb
int
mov
sahf
inc
cmp
mov
testl
mov
mov
xor
jne
rcrl
aas
ret
push
ds
pusha
out
ds
bound
add
push
fcomp
sbb
loopne
cmp
inc
inc
adcl
loopne
push
outsl
lahf
pop
mov
adc
inc
jmpw
jge
fnsave
loopne
adc
cs
sti
clc
push
faddl
cltd
push
aam
lahf
mov
in
dec
dec
mov
and
or
test
jb
jnp
mov
es
xor
xchg
mov
add
fcmove
ret
fnstenv
pop
xor
xlat
or
ret
xchg
xchg
inc
jne
cmpsb
mov
lods
jo
test
lcall
subl
push
into
faddp
cltd
add
je
cmpsb
pop
sbb
jg
xor
cmp
push
and
aam
arpl
rcll
pop
mov
gs
and
sub
xchg
sbb
add
ja
or
int
or
cmp
or
pusha
xchg
inc
ficompl
sub
jno
hlt
stos
aaa
jbe
adc
cmc
cmpsl
or
hlt
test
insb
mul
stos
addr16
out
cltd
loopne
xor
xorl
shl
push
mov
in
mov
or
xchg
inc
gs
fcompl
xor
mov
stos
loopne
imul
push
mov
cmp
mov
leave
pop
fsubs
pop
test
cmp
adc
mov
sti
mov
aam
fstpt
ja
popf
jno
cmp
mov
sub
pop
xchg
popf
fnsave
sub
ljmp
clc
cmp
or
int3
add
movsb
xchg
mov
movsb
js
cmp
push
test
jg
icebp
pop
in
cmpsl
ljmp
aaa
dec
leave
jle
fsub
xchg
sbb
sahf
push
xor
cmpsb
cs
mov
int
add
pop
cmp
loope
push
mov
rclb
rcrb
mov
inc
mov
ss
in
flds
sbb
sbb
sub
and
cli
mov
int3
sub
jae
setbe
and
js
mov
test
cmp
pop
cltd
jmp
arpl
movsl
lock
test
lock
hlt
pushf
xchg
xchg
bound
add
dec
cmpsl
cmp
or
loopne
inc
add
repnz
jecxz
mov
das
ss
mov
cmp
mov
les
faddl
fsubrl
jns
mov
sahf
xchg
ljmp
xlat
pushf
pop
xchg
mov
add
cmp
scas
jb
inc
xor
ja
int3
scas
mov
rcrl
push
sub
dec
xor
xchg
shr
mov
cmpsb
push
xchg
loope
rorl
and
and
or
ret
mov
cmc
xlat
push
jl
repz
cmp
cmpsl
mov
test
mov
scas
cmpb
lcall
pop
add
mov
push
jp
loop
insl
or
jbe
sub
xor
addr16
dec
cmp
lds
fwait
std
outsl
enter
loop
lods
mov
and
jg
sbb
or
and
test
and
xor
lods
mov
in
xchg
pusha
fadd
aas
jae
pushf
mov
mov
push
mulb
daa
stos
mov
jno
mov
lods
aaa
sub
fisttps
mov
push
sub
adc
sub
leave
push
loop
mov
sbbl
inc
inc
add
and
inc
xor
cltd
mov
test
pusha
scas
xchg
jp
shlb
jge
xchg
icebp
mov
orb
aas
push
cli
scas
outsb
addb
xor
xchg
std
jp
lods
inc
mov
outsb
and
jns
jmp
hlt
lods
xor
push
ret
call
mov
bound
and
mov
adc
or
mov
lock
jnp
lock
sub
clc
pop
mov
pop
ljmp
ret
adc
jp
stc
xchg
stos
push
and
dec
arpl
out
or
fistpll
test
imul
jecxz
pop
dec
mov
mov
mov
pop
or
push
andb
lods
iret
pop
dec
mov
dec
xor
lea
jmp
add
gs
cmpsb
mov
jno
data16
pop
adc
movsb
in
and
outsb
movsl
fldl
push
mov
daa
pop
out
popf
xor
dec
jo
shlb
int3
testl
xchg
push
sar
insb
addl
xlat
fisubs
daa
cmp
daa
adc
pop
hlt
push
mov
and
xor
mov
or
push
xor
adc
sub
or
outsl
mov
scas
jecxz
jb
mov
cmp
loopne
dec
sub
nop
adc
lret
cmp
fists
cmp
out
scas
outsl
insb
lahf
cs
js
dec
stos
repnz
das
inc
jmp
adc
xlat
cmp
clc
lea
sahf
sub
inc
jmp
sbb
push
add
jecxz
scas
sbb
das
lods
mov
les
jne
cs
ljmp
outsl
or
pop
dec
push
dec
add
stc
or
push
insb
sbb
lret
icebp
mov
call
jl
scas
cmc
push
out
xor
fildll
aaa
testb
jns
jne
fists
int3
inc
mov
out
fimull
test
add
loope,pt
jnp
mov
jge
inc
pop
out
push
sbb
filds
dec
dec
fadds
pop
stos
mov
mov
js
inc
ds
adc
ja
xor
or
cs
mov
cmpsb
xchg
leave
dec
movsl
int3
movsb
mov
outsb
test
movsl
adc
mov
dec
in
dec
aas
ret
mull
into
dec
push
jge
inc
cmp
sub
popa
cli
popf
mov
xchg
push
movaps
das
xchg
xchg
mov
jmp
test
xchg
es
or
ljmp
dec
lahf
sub
stc
das
dec
cli
dec
push
stc
pushf
mov
das
mov
fcmovne
mov
inc
push
sbb
pushf
sbb
nop
in
aaa
arpl
and
pop
sub
out
lock
xchg
imul
daa
cld
arpl
mov
fwait
int
xor
into
sbb
xchg
je
lods
push
dec
sbb
adc
cli
adc
cs
popa
sbb
outsl
cmpsl
fmuls
jne
adc
xlat
push
inc
cmp
sbb
xchg
cmp
arpl
inc
imul
in
fistps
wbinvd
idivb
inc
imul
and
outsl
jbe
insb
loopne
ss
xor
push
mov
or
in
addl
mov
or
lahf
pop
pop
xchg
and
js
push
sbb
xchg
lcall
sbb
mov
jl
in
popa
mull
pop
js
lods
fwait
xlat
loop
andb
shrl
and
inc
push
popf
pop
ljmp
cmp
fiaddl
loope
clc
add
inc
daa
in
mov
lock
inc
adc
enter
pop
imul
icebp
jecxz
mov
aam
mov
mov
xchg
icebp
sbb
pop
xor
mov
mov
loopne
or
push
sub
xor
xchg
and
mov
xchg
inc
scas
add
push
mov
jp
scas
pop
add
leave
xchg
mov
testb
loop
mov
imul
pop
or
cmp
ss
mov
fstps
pop
and
pop
mov
mov
mov
or
mov
push
mov
xor
lret
sub
cmp
push
mov
jae
das
dec
dec
and
pop
stc
mov
test
add
push
xchg
xor
fwait
and
mov
mov
sub
push
rol
add
inc
add
int3
es
mov
repnz
xlat
in
sub
push
shll
mov
jmp
lock
aad
notl
int
stos
je
sbb
iret
mov
mov
popa
and
or
into
add
push
or
and
jbe
push
mov
loop
or
sti
inc
lock
aam
pushf
ret
or
and
mov
sbb
push
push
inc
jl
imul
loope
inc
fdivl
inc
test
sbb
fchs
leave
mov
aaa
popf
cs
jmp
jmp
cli
xchg
and
in
adc
mov
mov
loope
callw
loope
pop
mov
incl
shrb
push
fwait
push
pop
and
insb
add
cwtl
rcrb
fists
inc
push
xchg
push
mov
push
dec
nop
notb
jge
inc
or
mov
outsb
pop
gs
lret
fbld
mov
sbbb
jp
mov
push
mov
arpl
pop
shrb
add
push
call
mov
data16
je
fs
mov
dec
push
pop
sub
push
mov
and
pop
stos
xor
xchg
fbld
mov
cwtl
mov
push
jge
es
mov
add
shll
sub
mov
fsubl
shr
out
fisubrl
mov
xor
push
cmc
roll
divl
dec
in
rol
int3
in
dec
insb
in
xlat
mov
xchg
push
pop
jl
mov
rcl
mov
and
ds
sbb
mov
or
xlat
out
mov
cltd
das
or
subb
push
sbb
mov
sbb
lret
loope
adc
add
and
sub
int3
ret
xchg
sbb
fs
inc
push
nop
dec
dec
inc
loopne
cli
js
dec
mov
loope
sub
cltd
leave
mov
out
pop
sbb
and
enter
call
add
inc
dec
stc
hlt
adc
xchg
sub
pop
push
sub
adc
inc
cli
push
rorb
addr16
pop
mov
adc
mov
push
roll
scas
inc
cmp
xor
inc
int
imul
xor
xor
jnp
loopne
roll
outsb
add
and
jnp
pop
jl
push
mov
stos
sahf
push
fwait
pop
cmp
add
icebp
push
sbb
mov
inc
push
lret
daa
push
fisttpl
mov
adc
add
cwtl
xchg
mov
xchg
jp
jo
add
inc
mov
inc
sarl
mov
imul
mov
inc
and
or
cmp
fcomip
or
sar
add
out
lahf
test
lds
xchg
push
cmp
xchg
xchg
and
push
pop
pop
sub
testb
mov
das
push
or
adc
daa
ljmp
stc
in
cmp
pop
sbb
xchg
and
loopne
leave
push
dec
pushf
pusha
dec
pop
rclb
aas
loop
popa
xor
test
xor
add
sub
and
or
imul
mov
and
inc
inc
xor
mov
sub
js
insb
pop
das
bnd
cmpsb
std
shll
push
in
or
add
pop
mov
push
add
adc
lds
call
decb
xchg
pop
xor
mov
out
mov
add
shrl
jge
cmp
js
mov
push
imul
gs
mov
lds
arpl
andb
cmpsb
scas
sbb
das
inc
cmpsb
adc
ja
sub
fucomip
xor
xor
test
push
andl
add
lods
mull
cmpsb
cltd
pop
out
pop
cwtl
jg
dec
xchg
or
addr16
pop
cli
mov
test
and
fisttpl
pop
ficompl
in
push
sub
cmp
les
fsts
loope
dec
inc
push
rcrl
inc
das
jnp
mov
scas
rclb
cli
pusha
stc
popf
dec
sub
dec
inc
dec
cmpl
ret
les
adc
movsb
lea
push
test
leave
mov
fidivrl
adc
repz
sbb
cmp
in
and
insl
call
aaa
in
repnz
mov
ds
gs
int3
add
xor
add
mov
pop
cli
push
sbb
mov
popf
out
popf
or
inc
or
inc
or
or
outsl
repnz
inc
and
mov
insl
gs
adc
mov
inc
js
scas
cld
or
fiadds
xor
and
jp
cmp
cmpsl
pop
ss
shr
cli
imul
jg
sti
jp
mov
xchg
das
cs
fsubr
cltd
sbb
or
ss
daa
aam
mov
sbb
mov
scas
lcall
lret
adc
dec
mov
lahf
xorl
mov
xor
stos
sbbl
ss
sti
scas
inc
push
xchg
arpl
inc
mov
push
or
mov
sti
dec
les
pop
stos
push
insb
xor
in
fidivs
loopew
xor
test
push
xor
sbb
cmp
push
leave
mov
pop
jg
xorl
cmp
shrl
cs
ret
imul
sbb
dec
outsb
push
lea
push
add
xor
sbb
sub
push
jbe
int3
dec
ret
xchg
bswap
pushf
cli
adc
pop
dec
stos
pop
jecxz
xchg
insl
dec
pop
into
out
popf
or
enter
add
push
rcrb
out
dec
adc
loopne
xchg
lcall
data16
mov
jmp
jg
fs
add
mov
mov
hlt
stos
lock
enter
add
adc
test
inc
jmp
orb
adc
in
out
jmp
inc
out
stc
gs
stos
push
addr16
xor
mov
inc
cli
loopne
adc
subl
test
mov
mov
lock
xlat
xor
push
icebp
jae
dec
mov
stos
xlat
cli
mov
frstor
leave
sub
and
imul
in
cltd
cmp
repnz
imul
dec
mov
jl
dec
outsl
push
and
dec
fwait
mov
in
fwait
popf
aaa
mov
stos
mov
jp
mov
mov
clc
and
mov
mov
xor
mov
es
int
adc
inc
aam
push
push
cmpsb
cmp
cmp
fsubl
loopne
adc
jae
shll
push
cmp
adc
sbb
cmp
cltd
xchg
inc
add
pusha
cmp
aas
xorb
sub
push
insb
add
push
lret
mov
xchg
sbbl
adc
add
int
add
mov
lods
xchg
iret
popf
cmpsl
add
or
add
fidivs
iret
aas
mov
out
ss
mov
out
jae
shll
hlt
sbb
ss
push
call
jae
shrl
out
cmp
inc
popf
insl
dec
or
push
inc
test
cltd
push
mov
and
daa
iret
pop
cmp
lods
sbb
enter
pop
in
iret
clc
pop
inc
xor
jns
push
xor
scas
popa
sub
cwtl
stc
and
pop
in
adc
cmp
and
testb
cmp
sbb
mov
mov
pop
iret
sbb
pop
pushf
mov
shrl
dec
xchg
jo,pt
jmp
cltd
lahf
cmp
clc
in
cs
mov
dec
xchg
fwait
pop
vsqrtps
cmp
rcrb
cwtl
test
nop
add
mov
sub
jns
aam
jnp
lret
lahf
xchg
popa
push
sbb
xchg
xchg
arpl
xchg
out
dec
aad
andl
das
add
cs
addb
lods
xchg
jbe
xchg
outsl
adc
push
mov
mov
in
inc
in
cmpsl
ja
xchg
std
xchg
lahf
jmp
push
cli
adc
dec
stc
xor
cld
push
fdivl
add
fldenv
ss
xor
xchg
fs
out
xlat
push
dec
iret
cmpsb
or
jns
mov
xor
enter
xchg
jecxz
mov
outsl
adc
leave
mov
sub
inc
ficoml
dec
xchg
xchg
mov
pop
in
inc
pop
fstpt
imul
pusha
loop
mov
jecxz
and
ja
pinsrw
xchg
pop
fwait
sub
mov
pop
dec
insb
es
mov
jmp
movsl
jecxz
add
popf
call
imul
fidivs
lcall
pop
stos
shlb
xchg
and
repnz
gs
addr16
jg
hlt
popl
cmp
sahf
lret
jl
xchg
add
mov
or
add
inc
sbb
mov
repz
push
jb
shlb
adcb
mov
xor
stos
xchg
enter
out
ret
scas
adc
imul
cmpsl
leave
pop
or
lret
cld
jmp
or
mov
mov
fxam
xchg
test
jbe
and
dec
adc
xchg
scas
test
scas
mov
lods
cmp
mov
jns
std
psubd
pop
and
cmp
fnsave
cmp
adc
leave
and
xchg
int
or
dec
aad
out
bound
sub
add
jnp
jecxz
and
cmpl
pop
xchg
imul
push
mov
ficomps
pop
cmc
inc
sbbb
sub
or
sub
mov
insl
xor
dec
lock
or
rcr
negl
inc
popa
sub
cmp
mov
aas
je
cmpsb
dec
inc
cmpsl
or
popa
shll
xlat
inc
hlt
pushf
add
jnp
cwtl
mov
rol
cmc
fwait
mov
lcall
mov
lret
pushf
idivl
addr16
cmp
pop
xchg
daa
and
push
add
insl
das
imul
dec
mov
xchg
pusha
and
into
dec
xchg
xchg
mov
push
fst
sar
sti
mov
push
lcall
mov
xchg
shl
arpl
rorb
mov
orl
jl
es
outsb
xor
jecxz
cmpsb
sti
pop
xlat
pop
mov
aas
ss
mov
and
inc
movsl
pop
cmpb
outsb
add
fs
xchg
add
movsb
data16
xchg
into
cmp
movb
cmpsb
mov
clc
pop
cmp
sub
popa
pop
shlb
sub
stos
jmp
dec
subb
push
outsl
or
inc
gs
and
pop
pop
sub
jl
sub
cmp
add
sbb
jo
pop
xchg
imul
pusha
rcrl
pop
cmpsb
cmc
add
lock
jecxz
dec
dec
out
cltd
scas
fildl
mov
inc
js
jmp
iret
inc
loop
stos
lret
or
mov
pop
mov
ja
xchg
mov
adc
adc
xor
sbb
pop
mov
test
add
inc
add
and
xchg
cs
clc
xchg
pop
sbb
outsl
dec
or
push
pushf
jle
mull
movsb
lds
in
fstps
rep
and
aaa
add
mov
jmp
ds
cld
rorb
or
icebp
add
fisttpll
dec
jno
mov
and
adc
or
aam
dec
test
jle
jg
in
out
fists
fwait
xchg
pusha
and
cli
je
test
inc
jle
or
andb
push
fdivs
add
cli
xchg
sub
push
jmp
adcb
dec
lcall
inc
and
hlt
lods
fs
test
arpl
or
test
push
add
lea
push
dec
sub
mov
das
clc
sub
jecxz
fldenv
inc
mov
out
push
inc
ljmp
xor
cli
cmp
imul
gs
or
or
pop
mov
adc
dec
pusha
or
addr16
mov
test
push
push
mov
test
cmp
xlat
pop
loop
add
les
jne
push
mull
cmp
fidivrl
rcrb
push
shlb
les
pop
mov
mov
icebp
int3
or
jbe
outsb
mov
cmp
cmp
cmc
dec
movsl
mov
add
addr16
mov
cltd
mov
stos
and
ljmp
or
clc
fdivrs
adc
sbb
pop
mov
aam
push
mov
outsl
hlt
cmc
fistps
adc
mov
sbb
push
mov
lcall
movsb
imul
fadd
inc
das
icebp
mov
xor
xchg
xor
iret
and
mov
xchg
and
jg
adc
jg
mov
pushf
xchg
mov
xchg
push
jns
cltd
clc
adc
dec
or
xchg
pop
sub
popf
aaa
das
inc
aaa
pop
pop
ja
push
add
sbb
push
fs
pushf
ljmp
lret
sub
or
outsl
jns
icebp
pop
imul
iret
test
clc
test
sahf
hlt
aad
jcxz
pop
ljmp
lret
in
inc
pop
test
lea
dec
xor
push
mov
jbe
ret
lds
sub
adc
test
push
mov
arpl
mov
imul
sbbl
jecxz
arpl
inc
inc
lret
and
sti
xlat
repz
push
fs
lods
pop
sub
push
jae
pop
push
loop
into
jne
or
lds
arpl
out
and
dec
lea
lahf
int
push
xchg
mov
fcomp
xchg
add
fidivrs
mov
jo
aaa
push
push
ret
jno
cmp
arpl
mov
cmpsl
xor
mov
pushf
push
cmp
ret
dec
xlat
clc
aaa
das
stos
mov
aam
aad
jbe
cmpsb
push
cmpsl
lods
sbb
arpl
and
aas
cmp
shr
xchg
popa
cmp
imul
std
pop
and
and
js
rclb
inc
sbb
mov
mov
rcl
inc
in
jge
hlt
cltd
enter
push
pop
call
dec
adc
cmpsl
jecxz
push
lcall
xor
inc
gs
cwtl
push
in
pop
mov
xor
cli
sbb
inc
or
push
ficoms
insb
cltd
stos
xor
mov
aaa
mov
fmuls
inc
and
dec
jle
xor
stos
repz
xchg
lea
sbb
into
jne
add
cmp
xor
mov
vpcmpgtd
aaa
jge
xchg
fdivr
outsb
out
out
int
inc
adc
dec
stos
or
add
je
icebp
ss
int3
aam
lret
shr
stos
add
mov
adcb
jecxz
insl
or
popf
lcall
fsubs
cmp
pop
aam
shrl
xchg
repz
and
add
outsl
adc
sub
mov
shl
sti
jo
push
adc
in
fwait
push
push
cmp
aas
mov
or
pusha
jbe
int3
sub
jno
push
pop
fdivs
lahf
sub
pop
jns
mov
jle
bound
mov
mov
sbb
movsb
push
loopne
dec
scas
adcb
into
hlt
in
mov
mov
fldenv
push
cmpsl
call
xchg
in
rcrl
or
sub
inc
push
movsl
sub
cmp
incl
popf
mov
pushw
inc
cmpsb
ss
dec
lock
inc
mov
pop
fiadds
xchg
jle
xchg
pop
ja
test
adc
repz
push
xor
int3
divl
mov
push
aas
fcmovbe
rorl
sbb
cmpsl
test
cmp
sbb
addr16
rol
das
mov
jo
rorl
dec
test
out
in
push
test
push
push
push
test
scas
lahf
aad
ds
out
pop
movsl
and
jbe
stos
cltd
cmp
mov
fstps
leave
mov
push
xlat
push
adc
xchg
cmp
jnp
pop
ja
mov
and
xor
rclb
pop
push
and
mov
mov
or
jo
cmp
stc
stos
push
hlt
mov
cmp
xchg
mov
fdivrp
jl
in
mov
lret
or
mov
cwtl
add
cwtl
lret
inc
jns
mov
xchg
adcb
dec
jmp
xlat
or
enter
fcoms
mov
adcb
shlb
jb
imul
lods
test
aas
mov
test
rorb
daa
lds
cli
clc
dec
adc
mov
sub
sahf
xchg
hlt
hlt
fpatan
mov
jno
lods
adc
jae
sub
push
sbb
jl
or
mov
in
lods
dec
or
and
lods
xor
jnp
movsl
pop
xor
cld
xor
hlt
jp
in
mov
dec
sqrtps
inc
xchg
clc
cmc
andb
jne
cs
int
out
add
dec
mov
push
imul
mov
in
scas
shll
add
xchg
sub
jnp
xchg
outsb
mov
fsubrl
out
and
cwtl
mov
shll
pop
int3
add
sbb
data16
ljmp
push
lods
push
mov
mov
mov
xor
gs
mov
mov
push
pop
sbb
imul
imull
mov
test
shl
sub
or
ljmp
mov
mov
in
fimull
add
out
imul
mov
in
inc
clc
or
add
test
sbb
lods
mov
cmpsl
sbb
ds
movsb
ljmp
mov
sbb
add
jbe
mov
andl
dec
lcall
xor
inc
loope
enter
out
cmp
cmp
aad
jo
ds
in
push
loopne
out
adc
push
cmp
sbb
test
and
cltd
jno
lahf
push
dec
cmp
fdivr
adc
sbbl
adc
out
xchg
xlat
inc
jl
inc
ss
mov
jle
shll
add
pop
inc
lea
popf
mov
jle
push
add
cli
ds
mov
aam
cmp
nop
adc
mov
xor
lods
aad
popf
into
jecxz
pop
popa
pop
popf
mov
loope
adc
orb
bound
mov
movsb
sub
in
inc
jg
fstl
jp
inc
mov
subb
movsl
in
sub
lret
cs
push
call
mov
cmp
shll
in
mov
movsl
ljmp
push
dec
mov
mov
lds
aam
cmc
jle
jo
jp
out
push
mov
mov
push
je
xchg
mov
lds
push
xchg
fsts
xchg
mov
int3
cli
into
inc
icebp
popf
jno
xor
jmp
ss
push
xchg
and
vorps
sbb
dec
js
movsl
cmpb
mov
cli
mov
and
adc
sahf
push
daa
sbb
inc
dec
mov
push
and
popa
and
dec
sub
arpl
pop
js
xlat
int
xchg
outsb
sbb
movsl
lret
dec
ffreep
push
icebp
sahf
inc
or
cmpsb
insl
je
cmp
mov
das
push
iret
test
pusha
movsb
cmpsl
filds
and
lret
in
and
ss
adc
fdiv
idivb
dec
cmpsb
movsb
cs
lret
adc
pop
imul
jecxz
sub
in
mov
adcb
dec
ret
sahf
or
jnp
sbb
bound
fiaddl
insl
sbb
icebp
ja
mov
xchg
in
sahf
test
movsb
inc
fs
mov
push
rep
sub
or
push
lea
call
mov
negb
mov
into
jge
das
push
add
push
fistl
hlt
out
cmp
rol
sbb
popa
inc
mov
cmp
stos
fwait
andb
loop
stos
cmp
pop
jmp
incl
fnstenv
sbb
sub
push
push
sbb
xor
shrb
xor
test
jmp
leave
sbb
mov
scas
pop
mov
and
inc
rcrl
sahf
movsb
lds
scas
divb
dec
lods
or
clc
test
sub
popa
cmp
or
mov
lret
xchg
iret
mov
and
cmp
jno
pushf
cltd
mov
arpl
inc
outsl
fnstenv
data16
bound
push
insb
gs
popf
cld
dec
sahf
xor
insl
or
shll
dec
repz
push
cmc
ljmp
sub
lea
jnp
fisttpll
and
sbb
inc
push
out
iret
adc
ljmp
sbb
mov
push
or
sbb
mov
ljmp
lds
dec
rorb
sbb
xlat
pop
lcall
adc
aam
lahf
aam
jo
stos
pop
pushf
push
push
or
cmc
repz
xorl
adc
push
cmp
mov
call
shrl
je
mov
pop
stos
out
arpl
in
lret
jl
fisubs
dec
sbb
loope
and
push
aad
movsl
pushf
inc
in
mov
insb
lods
stos
sahf
out
scas
out
pop
sub
jp
testb
imul
inc
pop
sbb
iret
mov
out
es
shlb
repz
push
stos
xor
aam
int3
pop
and
and
mov
mov
and
inc
adc
arpl
and
xchg
daa
pop
inc
hlt
into
pop
sub
out
cwtl
sti
add
cld
xor
sub
or
mov
sarb
mov
cmp
and
pop
lock
outsb
fadds
imull
icebp
jbe
adc
or
dec
daa
mov
pop
push
pop
scas
scas
xchg
lret
xchg
imul
lcall
cmp
loop
inc
insb
inc
adc
into
mov
inc
ret
cmp
out
popa
xchg
push
xor
adc
and
adc
in
scas
sub
mov
ror
lret
rcrb
sub
out
push
movsl
inc
loop
imul
imul
pop
ret
adc
movsb
and
cld
jecxz
icebp
pop
mov
aam
into
sub
cmp
cli
cmp
mov
inc
fimull
pushf
fists
inc
jae
loopne
xchg
sub
sbb
loop
xchg
out
adc
dec
inc
ss
jle
leave
imul
aas
aaa
lret
pop
add
jnp
js
jo
jae
insb
and
adc
mov
push
sarl
xchg
push
rcrl
sbb
nop
xor
dec
cmp
and
xor
xchg
pop
aaa
jbe
ret
int
push
fcoms
cmpsb
mov
mov
push
cmp
adc
inc
cmpsl
and
or
ljmp
inc
call
inc
add
mov
sbbb
cmp
out
shll
out
lods
sbb
je
mov
std
sub
test
jl
xchg
jp
push
mov
inc
int3
adc
dec
xor
mov
xchg
es
mov
mov
lods
dec
push
repz
and
inc
add
push
mov
pop
icebp
or
cmp
hlt
int3
stos
xchg
insb
pusha
pop
out
mov
in
orb
push
faddl
movsl
xor
jle
add
repnz
std
loop
xorb
push
popf
pcmpeqw
rclb
push
popa
push
push
push
inc
lret
cmp
cli
pop
pop
inc
stc
out
mov
sub
fcoml
lock
js
push
mov
jg
sub
aaa
cli
push
jp
or
sub
imul
pusha
xorb
cmpsl
or
mov
mov
ljmp
inc
rcrl
adc
lds
mov
int3
cmp
aas
mov
cmc
hlt
push
push
inc
inc
imul
in
jg
push
adc
mov
add
sbbb
or
mov
subl
jmp
call
js
xor
jle
adc
push
push
push
out
push
mov
and
into
rolb
push
cmp
int3
lret
sub
add
dec
add
xchg
sbb
dec
mov
in
dec
repz
test
xchg
ja
push
inc
int3
es
stc
popf
mov
sub
js
add
pop
fimull
cmp
xorb
lcall
mov
leave
xor
mov
cmpb
out
in
dec
add
push
mov
push
and
or
push
sbb
pop
in
mov
pop
popf
imul
mov
sbb
or
mov
test
scas
add
add
outsb
loopne
inc
mov
mov
adc
iret
xchg
mov
push
add
push
inc
push
mov
pop
mov
repnz
insl
lock
pop
cltd
fld
or
cmp
push
js
and
sub
dec
cmp
inc
xchg
daa
stos
mov
addr16
jne
imul
pop
in
outsl
lods
jge
mov
enter
push
jns
inc
roll
cmpsl
push
test
ret
inc
into
sbb
mov
adc
and
jmp
pop
das
sub
inc
push
scas
iret
enter
mov
jmp
into
inc
inc
xchg
pusha
jl
xchg
cmpsl
push
sub
stos
in
jl
out
orl
shll
jno
mov
aaa
inc
dec
adc
iret
fnstsw
insl
loopne
cli
bound
int3
mov
cwtl
rorl
in
in
add
out
divb
mov
mov
aaa
xchg
fmuls
mov
or
ficoms
and
int
mov
sti
dec
rcrb
lods
jge
inc
inc
sti
mov
cmpsb
sbb
bound
jo
out
test
add
or
loop
sbb
aas
out
fidivrl
ss
push
add
lds
divb
cmpps
sub
xor
daa
popf
out
sbb
insl
jae
mov
out
and
mov
ja
inc
adc
or
cmp
fistpll
dec
pop
mov
jns
popf
xorl
sbb
repnz
and
lret
and
adc
jne
jmp
jge
ficompl
pop
sbb
movsb
shl
or
enter
mov
or
jle
add
imul
addr16
jle
outsl
cmp
packuswb
lahf
cmp
outsb
push
imul
lahf
popa
idivl
push
xor
or
mov
and
movsb
dec
xor
and
mov
addl
dec
inc
addr16
lods
jl
aam
mov
in
sahf
shrb
mov
gs
jo
adc
jle
mov
jge
or
jg
scas
mov
xor
jno
cltd
inc
mov
xor
dec
ret
sub
pop
sbb
and
mov
jecxz
popa
pusha
xor
mov
mov
insl
arpl
jns
int
in
cmp
aas
shll
pop
fs
xchg
std
loope
inc
inc
add
cs
or
mov
out
cltd
dec
dec
or
shlb
aad
mov
out
cmp
outsb
cmpsl
fdivrl
mov
jp
int
cltd
divl
sub
fwait
adcb
cmp
mov
pop
jb
inc
lret
mov
lock
out
mov
pop
fcomip
cmp
popf
cmp
popf
xor
addr16
pushf
fbstp
imul
out
sbb
inc
adc
outsb
imul
adc
xchg
loopew
xor
scas
scas
scas
scas
mov
out
inc
xor
gs
outsl
xchg
or
mov
mov
jne
cvtdq2ps
cmp
cmp
cmpsb
aad
enter
leave
imul
gs
sbb
mov
rorb
xlat
ja
jno
fdiv
xchg
mov
loope
cmp
sbb
push
pop
mov
push
lods
icebp
or
sbb
cmpsl
mov
mov
int
sub
or
mov
pop
mov
lret
adc
mov
test
ja
add
fwait
pushf
ficompl
cs
jns
dec
inc
arpl
std
inc
aam
sub
mov
iret
dec
adc
lret
dec
subl
stos
push
adc
or
out
dec
imul
jl
jb
dec
hlt
icebp
cmp
fiaddl
dec
dec
and
ljmp
mov
jle
inc
sbb
mov
out
inc
mov
push
lods
mov
lretw
push
test
and
out
aas
clc
or
fs
mov
cld
stc
pop
push
ljmp
add
xchg
les
cmp
cmpsb
es
nop
out
sbb
cmp
sbb
movsb
aad
xor
adc
out
fsubrs
sbb
mov
addr16
dec
or
mov
ret
xchg
xchg
mov
dec
mov
jl
mov
dec
rorl
iret
out
xor
mov
cmc
pop
cli
or
lcall
jae
xor
xchg
add
call
pusha
or
add
in
out
adc
int
mov
notb
imul
xchg
lea
mov
jmp
adc
es
adc
mov
in
test
dec
fidivs
add
sub
mov
push
mov
add
jo
in
pop
out
push
mov
call
loopne
xchg
or
movsl
xor
in
cmpsl
leave
add
mov
pop
sub
and
pop
ds
ficompl
sbb
pusha
sub
mov
cmp
jecxz
or
and
outsl
adc
xchg
push
cmp
inc
jb
subb
ja
cld
repz
int
fisubrl
icebp
pop
cmp
lods
dec
aam
xor
and
ljmp
mov
std
push
pop
jb
enter
test
sub
testl
mov
jne
dec
mov
jae
pop
outsl
fadds
mov
inc
cmp
outsb
pop
bound
dec
ret
pop
ficoms
call
loop
adc
imul
dec
cmp
mov
mov
jmp
scas
ja
out
push
out
and
mov
mov
mov
xchg
fistpll
mov
in
xchg
push
add
stc
push
inc
mov
daa
int
movsl
scas
bnd
adc
or
imul
mov
push
sub
addr16
add
aas
lret
lret
loope
rcll
dec
add
lds
xor
out
dec
out
mov
mov
lods
in
das
adc
cltd
mov
jnp
popf
loopne
xchg
pop
mov
jo
sahf
fdivs
cmp
leave
mov
mov
push
mov
mov
or
dec
mov
cmp
loopne
sbb
lods
enter
sbb
orb
dec
popa
xchg
test
xor
sub
pop
push
call
pop
inc
and
jg
out
and
pop
sub
adc
jmp
and
dec
ret
xorl
loope
inc
testb
adc
and
xor
mov
push
push
mov
lcall
cmp
adc
icebp
jle
inc
jle
call
jb
in
push
stos
inc
adc
lret
lock
es
cmc
ss
cli
int
mov
mov
fidivrl
je
mov
cltd
shl
sub
in
mov
cmp
test
lcall
add
out
stc
ret
fisubs
jge
or
ljmp
pop
jmp
inc
jne
movsb
adc
sahf
mov
ja
push
inc
shrb
xor
mov
in
push
cmp
xor
xchg
movsl
sub
mov
test
lret
in
cmpsl
test
and
jnp
pusha
mov
out
pushf
test
dec
pop
ljmp
icebp
std
std
into
jo
arpl
stos
adc
mov
jae
pusha
mov
stc
sbb
pop
xchg
jae
orl
arpl
vfnmadd213ps
rclb
xchg
adc
xor
cmp
fmuls
rol
cmp
out
imul
jno
cmpsl
cmpsl
and
stc
dec
rolb
xlat
push
xlat
and
or
pop
adc
or
test
mov
jae
lea
jge
fmull
jo
gs
inc
mov
dec
cmp
push
pusha
movb
mov
outsb
scas
jae
idiv
std
shlb
or
pop
icebp
adc
cltd
mov
xchg
rclb
add
rolb
sub
fdivrl
dec
aas
aaa
aam
or
jmp
cmp
xchg
addr16
loopne
cmp
out
and
lret
or
orb
sub
cmp
mov
mov
popa
loope
sub
or
jl
fildll
push
jbe
inc
adc
imul
jecxz
test
aad
enter
ja
lret
repnz
nop
xchg
icebp
insb
mov
fucomp
push
jnp
pop
hlt
or
jle
aas
dec
iret
mov
jge
mov
sub
loopne
jno
je
aas
pop
add
repnz
jne
lret
mov
push
insb
ljmp
jg
mov
xlat
fcomps
mov
mov
sub
mov
addr16
inc
mov
fxch
aas
adc
cmp
pop
ret
cmp
mov
loop
hlt
imul
into
jl
cmp
pop
loopne
imulb
in
movsl
xchg
xchg
insl
out
pop
mov
jmp
mov
mov
mov
ja
stc
aad
fnstenv
sub
dec
daa
fwait
mov
sti
xchg
dec
out
shlb
mulb
adc
jg
bound
gs
jl
cmpsl
out
jle
or
popa
mov
and
sub
nop
jl
mov
or
sbb
test
dec
pop
stos
int3
test
repz
call
and
or
aas
mov
inc
mov
adc
jge
push
fdivrl
mov
push
dec
mov
pop
ret
iret
in
inc
jnp
daa
mov
jmp
sbb
inc
sub
mov
xchg
mov
subl
and
pop
stos
xchg
sub
sbbb
cmp
mov
loop
ja
pop
or
mov
mov
outsb
push
and
outsl
jb
sti
sub
add
pop
stos
nop
dec
outsb
sbb
xor
outsl
xchg
or
jmp
cmc
into
add
xchg
push
adc
and
xchg
movsl
popf
cmpsl
mov
sub
jo
movsb
dec
insb
adcl
movsb
rorl
cwtl
stos
and
repnz
in
jmp
cmpsl
mov
pop
dec
adc
inc
popa
and
push
in
sub
movsb
mov
xor
movsb
movsb
add
imul
fs
or
in
in
xor
scas
adc
dec
sub
sti
jns
mov
sub
mov
or
mov
lea
test
mov
adc
jl
dec
sahf
push
xchg
push
imul
pop
data16
and
cmp
insb
out
int3
int
mov
add
inc
pop
dec
xchg
pop
pop
pop
nop
shrb
test
and
mov
jmp
mov
sbb
rcll
addr16
pop
in
push
xchg
mov
pop
inc
popa
mov
sbb
adcb
test
dec
fwait
scas
std
inc
in
fwait
sbb
jo
loopne
pop
sub
sub
shl
lods
add
xchg
stc
cmp
mov
xchg
push
xchg
aad
inc
xchg
movsb
xchg
loop
adc
std
fwait
xlat
sbb
xchg
dec
pop
sub
idiv
cltd
jg
xchg
repz
fsincos
jge
mov
sti
dec
repz
cltd
mov
mov
mov
in
inc
arpl
inc
lds
nop
sbb
push
and
push
movsb
lock
xchg
sbb
push
icebp
and
xor
adc
cmp
inc
and
jg
xor
mov
je
fcomps
mov
or
jg
inc
js
popf
stc
add
dec
xchg
inc
into
rorl
jp
out
dec
int
and
imul
and
cwtl
js
mov
movsl
repz
ret
test
popf
xchg
repz
sbb
dec
es
cwtl
mov
outsb
cwtl
push
sub
rcr
out
jnp
adc
out
data16
mov
pop
inc
repnz
jns
xor
inc
jmp
mov
or
shll
mov
repnz
add
jne
xchg
lcall
jmp
incb
loope
mov
sub
or
mov
dec
pushf
stos
sbb
push
dec
js
mov
icebp
lea
xchg
sub
jg
lcall
sti
add
icebp
cmp
add
dec
xchg
cmpsl
fnstenv
adcl
inc
test
aas
dec
call
dec
xor
cmp
jp
test
rorb
mov
pop
xor
mov
push
outsb
arpl
fildll
sbb
xlat
loop
inc
sub
leave
shl
or
and
shrl
add
leave
xchg
fistpll
daa
jp
sub
or
in
mov
mov
sub
scas
push
xchg
mov
or
jmp
rcrl
out
cmc
pop
adc
loopne
mov
dec
lret
into
movsb
ljmp
aad
pop
sub
in
mov
into
scas
test
subl
push
out
jg
adc
cmp
into
sbbb
mov
add
mov
mov
mov
xchg
and
mov
xchg
xchg
int3
xchg
sbb
scas
mov
inc
pop
mov
sarl
rcrl
lds
xor
jbe
push
scas
cmp
and
ret
iret
out
add
das
pop
add
cmc
mov
mov
push
cmp
aam
inc
adc
fisttpll
or
pop
into
ret
lcall
repz
sbb
jns
aas
scas
fdivr
int3
pusha
cs
cmp
ss
jne
xor
cmp
loope
jecxz
mov
roll
out
push
ja
jp,pt
xchg
hlt
xchg
stos
les
cmp
cmp
movsb
mov
loop
in
push
mov
sbb
in
mov
aas
mov
xor
or
lahf
mov
shrb
cld
cmp
jge
movsl
inc
jl
ss
stos
and
cmpsb
out
ss
xchg
push
xchg
popa
and
fcomps
mov
jg
push
fidivrl
push
fldcw
cmp
call
jmp
js
repz
ret
aam
in
pop
mov
lods
inc
cwtl
lcall
das
jbe
push
in
jge
push
xor
or
dec
and
and
repnz
sbb
sahf
call
mov
sti
dec
xor
sub
fadd
cmpl
mov
leave
mov
mov
rorb
or
test
call
jbe
adc
adc
dec
cmp
dec
pusha
jp
popf
in
xchg
lock
add
pop
or
add
fldcw
sti
xchg
in
aad
dec
in
lock
enter
mov
call
out
push
aad
loopne
rorl
cmpsb
mov
push
cwtl
mov
cmpsb
sub
inc
mov
push
out
mov
add
mov
jl
xchg
cmpsb
or
xorl
and
jecxz
rcr
and
lods
clc
pop
mov
mov
dec
repnz
mov
pop
ljmp
jmp
enter
shll
insb
aas
jecxz
mov
mov
pushf
std
dec
adc
fdivp
stos
cwtl
in
stos
mov
pop
sbb
and
or
lods
xor
xchg
lahf
je
adc
fiaddl
dec
aad
adc
push
outsl
movsb
sbb
ret
push
adc
fidivrl
addr16
sbb
mov
mov
jnp
out
repnz
sub
in
mov
add
cltd
int
add
std
xchg
inc
xor
push
push
cmovnp
test
fst
inc
mov
into
inc
imulb
jb
bound
sbb
scas
jo
jle
jp
shr
mov
cwtl
and
fnsave
jecxz
pop
cld
inc
lea
roll
xor
imul
mov
shl
addr16
fsubl
sbb
inc
icebp
adc
push
out
push
adc
push
mov
mov
xor
jbe
jae
mov
outsb
adc
dec
test
subb
imul
sub
stos
mov
repnz
mov
roll
in
mov
push
test
aam
cmp
cmpsb
jo
dec
or
cmp
fildll
push
icebp
push
mov
jb
inc
mov
cwtl
xchg
repnz
int
jne
mov
aaa
idivl
dec
jbe
dec
mov
arpl
rorl
mov
loopne
aam
mov
call
sbb
dec
xchg
imul
repnz
mov
and
xchg
outsb
lret
dec
and
into
push
mov
cli
and
sub
mov
fstpl
pop
aaa
inc
nop
add
push
in
pop
jns
dec
adc
cmpsb
jge
loopne
aad
mov
dec
scas
add
jecxz
and
jmp
adc
test
rol
xor
mov
mov
dec
sub
and
lret
scas
cmpsl
sahf
scas
push
mov
mov
ret
imul
test
cltd
hlt
sbb
dec
comiss
arpl
enter
out
mov
divl
xor
jp
jp
in
push
push
jle
in
jo
sbb
scas
shrb
scas
movsb
xchg
jno
pop
ja
cmpsl
hlt
mov
and
dec
shlb
and
or
outsl
je,pn
roll
mov
pop
ret
movsb
lods
call
cmpsb
or
das
mov
mov
cld
inc
rorb
lcall
xchg
push
test
jno
aam
mov
addr16
insl
lret
outsb
push
out
aad
das
sub
ljmp
shll
adc
div
loope
out
jne
jg
xchg
xchg
add
shll
push
gs
mov
int
add
sbb
push
cwtl
push
mov
imul
pushf
ds
loop
pop
lret
xor
xchg
icebp
scas
dec
test
push
add
jecxz
cwtl
push
xchg
outsb
add
jge
mov
xchg
int
sti
mov
das
cmp
mov
or
xor
fsubp
out
iret
je
clc
adc
inc
mov
jb
mov
mov
jle
in
xor
lods
mov
out
xchg
push
out
and
jae
adc
cmpl
jmp
sahf
mov
xchg
mov
mov
jge
pop
mov
stc
sbb
mov
in
es
scas
sub
ja
xchg
pop
add
push
mov
and
push
nop
xor
inc
js
test
je
mov
ret
repz
push
data16
mov
and
xchg
jno
pop
outsb
mov
jbe
aad
mov
fmull
push
test
xor
push
pop
insb
and
jo
pop
cmp
cmp
or
cmpsb
icebp
inc
lock
les
out
pop
popf
out
fmuls
rclb
out
cmp
stos
lods
adc
pop
inc
sbb
or
pop
pop
jl
fstpt
in
pop
adc
mov
aas
push
mov
xchg
nop
imull
into
iret
mulb
push
add
repz
push
insb
cmpsl
mov
sbb
adc
mov
rcrl
out
mov
pusha
xor
dec
cmp
inc
xor
in
inc
push
cli
lds
xchg
nop
or
popa
in
cwtl
sbb
mov
cld
mov
push
mov
or
cwtl
add
mov
out
ret
inc
mov
adcl
xchg
mov
clc
inc
ljmp
mov
shlb
push
adc
daa
movsl
mov
mov
inc
cltd
pop
add
int3
lods
bound
and
paddusb
lods
sar
ljmp
push
jb
push
addr16
mov
lea
jo
xchg
stc
sbb
loopne
push
outsl
int3
jbe
out
sti
ds
into
sbb
out
add
inc
sbb
fwait
push
out
push
jbe
pop
popf
xor
dec
xchg
add
loop
pushf
xor
and
divl
adc
dec
int
shll
js
push
mov
ret
push
dec
xchg
sbb
adc
ret
jp
inc
loopne
out
inc
rcrl
icebp
cmp
xlat
jmp
mov
mov
and
cmpsb
test
or
push
int3
push
int
fsubl
mov
test
ret
sbb
lret
pop
push
cmp
push
xchg
out
push
adc
dec
cmpsb
add
xchg
pop
stos
stc
push
mov
stos
insl
cli
scas
ret
daa
rcl
xlat
add
js
cmp
xor
fsubs
jno
ret
mov
cld
mov
addr16
add
ret
mov
pop
sbb
sub
stos
jecxz
cli
inc
lahf
cmovb
rclb
or
repnz
repnz
out
xchg
adc
scas
iret
sub
inc
addl
add
stos
add
xchg
add
pop
aaa
lahf
iret
push
data16
les
into
mov
mov
mov
aas
xchg
mov
pop
dec
pop
mov
dec
sti
xorb
cltd
add
data16
fdivrl
pop
or
lods
push
stos
outsl
pushf
adc
pop
pop
mov
mov
mov
ret
mov
rcll
stos
or
bound
sar
js
sbb
dec
add
sbb
jnp
mov
cmc
sbb
hlt
int3
cli
dec
xor
idiv
add
xor
out
jo
mov
in
rcrb
adc
rclb
pop
push
sar
mov
movsl
movb
scas
and
sbbl
cmp
enter
ret
imul
les
pushf
cmc
vcvttsd2si
pop
cmp
sub
and
lret
cmpsl
in
aas
int
push
dec
xchg
cmp
dec
daa
pop
add
cld
incl
mov
stos
aaa
mov
mov
outsl
cld
inc
mov
adc
push
fwait
out
sti
pop
xor
lret
jecxz
out
push
lods
out
cld
mov
jb
xchg
push
push
shrb
mov
mov
decl
shrb
xchg
mov
xor
mov
imul
push
mov
xor
cmp
ljmp
sbb
mov
popf
sbb
inc
sarl
inc
pushf
lcall
js
pop
js
cmpl
pop
inc
aaa
xchg
cmp
mov
out
sub
or
jle
jecxz
cmp
pop
pop
inc
imul
sbb
outsl
add
lock
sbb
jmp
xor
jg
cmc
cmc
gs
jae
push
xor
in
add
popa
mov
jmp
jo
cmp
and
fsub
fnstcw
movsl
jae
push
mov
daa
and
loope
mov
xchg
pop
sbb
dec
enter
flds
inc
ds
xor
sbb
cltd
pushf
mov
jmp
lds
xor
insb
jp
js
jmp
cmpsb
inc
popf
sbb
loop
scas
sbb
add
mov
aam
mov
popf
pusha
fistpl
aam
in
sbb
cmp
cltd
push
lret
aad
aaa
pop
sbb
add
jle
inc
arpl
int
mov
aam
es
inc
lods
and
loopne
imul
cmpsb
sahf
movsl
les
jecxz
xchg
cltd
fmulp
add
dec
mov
test
imul
pushf
lods
stc
push
lret
jb
rcrb
insl
mov
bound
icebp
xlat
pop
fwait
mov
mov
add
jecxz
dec
sub
cmp
icebp
mov
add
pop
push
out
imul
das
add
lret
test
loop
mov
std
std
out
xlat
data16
or
jg
aaa
adc
xchg
addb
fstpt
out
pop
jnp
cmp
scas
in
mov
js
jmp
imul
lods
adc
inc
mull
push
loope
fwait
dec
jl
xor
dec
fiadds
in
arpl
inc
cmp
cmpsl
xchg
dec
xchg
jmp
push
mov
insl
xchg
not
cmc
mov
mov
ret
out
fdivl
fld
mov
push
sub
pop
xchg
jnp
lret
xor
das
mov
scas
xchg
sub
flds
nop
pusha
fs
ret
mov
push
or
sti
cmc
adc
arpl
mov
mov
dec
cltd
in
push
add
jle
dec
fmulp
jp
adc
sbb
push
push
mov
adc
sarl
ret
cwtl
jmp
les
call
jae
jbe
dec
inc
lods
jne
js
push
or
xchg
iret
dec
and
sbb
test
mov
je
xchg
loope
xchg
test
sub
test
pop
cltd
repnz
lret
call
mov
sbb
mov
push
ds
imul
mov
xchg
sbb
and
pusha
inc
popa
loop
in
xchg
mov
jg
mov
stos
out
jnp
shll
mov
das
ljmp
cmpsb
add
mov
cmp
jo
push
add
aas
push
cs
stos
aaa
fdiv
iret
sarl
or
in
xor
aaa
xchg
arpl
inc
or
gs
lock
repnz
out
push
cmp
shll
lods
dec
pop
jmp
jo
xchg
mov
mov
inc
add
dec
adc
sbbl
jb
and
pop
int3
pop
jbe
clc
push
mov
in
mov
mov
in
push
js
roll
repz
mov
mov
lret
jnp
dec
and
or
dec
xor
shll
jecxz
lcall
mov
xchg
inc
aas
dec
js
adc
xchg
and
jnp
dec
loop
add
pusha
lds
test
out
dec
cltd
pop
xorl
in
jmp
mov
xchg
cli
aam
ret
add
add
xchg
les
jp
lea
xor
pusha
repz
imull
test
lret
xchg
sbb
dec
pop
and
clc
ljmp
xchg
in
imul
gs
xchg
es
outsb
ja
cltd
rorl
dec
dec
popf
push
lods
jmp
addr16
test
pushf
pusha
out
mov
dec
fldcw
pop
pop
repnz
int
mov
mov
stos
cld
cmp
inc
jo
popf
divl
addr16
sub
stos
mov
cmp
xor
mov
nop
inc
arpl
pushf
xchg
xchg
std
rol
mov
jae
daa
mov
jle
cmp
fucomp
andb
imul
aas
mov
xor
ljmp
popa
fcom
pop
fs
movsl
adc
and
out
and
int
xor
inc
cs
xchg
cmpsl
lock
cli
ss
cli
je
inc
fistl
jne
fistpl
fnstcw
or
out
push
pusha
sarl
insb
pop
je
xor
push
out
mov
pop
dec
lea
dec
xor
sub
inc
bound
aaa
iret
add
mov
dec
out
push
testb
sub
pop
mov
xlat
mov
loopne
repnz
add
fcmovu
push
dec
cmpsl
cltd
dec
repnz
subl
push
sbb
xchg
push
rcr
mov
ret
enter
out
sahf
loope
jl
adc
js
or
sbb
shl
push
loope
push
nop
inc
int
ror
adcb
mov
pop
psllq
jg
inc
mov
jmp
push
nop
xchg
jne
or
mov
xor
sti
out
push
mov
ret
mov
negl
aas
or
push
mov
sbb
sbb
mov
lahf
shlb
pop
cmp
jnp
cmc
imul
int
dec
stos
sbb
jg
sbb
xor
xchg
mov
hlt
add
ss
pop
cmp
cs
icebp
or
sub
mov
or
mov
xchg
aaa
stos
test
push
adc
mov
sarb
inc
or
cmp
jae
cmc
cli
out
testb
or
icebp
push
pop
mov
rcrl
fldcw
adcl
adc
sub
lea
fisttpl
push
push
mov
sbb
js
mov
sub
xchg
je
in
push
mov
jp
lds
call
add
call
enter
leave
pop
pop
pop
jmp
dec
xor
scas
add
jmp
shrb
mov
lods
incl
cmp
mov
insb
mov
sbb
or
mov
inc
cwtl
mov
lcall
mov
cmp
ret
or
lds
rcr
adc
cmc
push
aas
or
enter
std
xor
push
mov
int
bound
xchg
aaa
mov
pop
sub
push
or
sub
aad
pop
call
xor
jo
clc
mov
das
repnz
das
add
xor
dec
in
rcr
call
outsb
jnp
dec
sub
jle
rcl
jns
rorl
imul
pushf
push
repz
ja
cmp
xor
ret
mov
cmc
ds
stc
and
jb
pop
mov
xor
js
aaa
mov
mov
inc
jae
push
jmp
arpl
loopne
ficoms
in
out
cmc
pop
mov
lods
adc
add
subl
mov
xchg
incl
ret
push
jae
mov
repnz
add
je
mov
and
std
sub
lds
sub
xchg
xor
mov
ret
jl
repnz
push
jl
fdivr
or
xchg
iret
es
ljmp
sub
fcmove
push
fisttpl
fistl
adc
mov
into
out
int
mov
mov
xchg
pop
insb
xlat
loopne
popa
lock
divb
dec
pop
pushf
fistpl
icebp
add
cltd
cmp
jb
pop
mov
mov
pop
xchg
test
cwtl
and
mov
jl
xchg
push
icebp
or
add
inc
sbb
enter
stc
xchg
popf
cmc
shlb
fwait
xchg
lods
push
jns
sbb
adc
js
cmp
lcall
aam
adc
xchg
insl
jmp
add
inc
jbe
dec
push
cmp
imul
adc
inc
cmpsl
clts
push
jg
xlat
jnp
sbbl
clc
nop
jb
fstpt
and
inc
xorl
jl
adc
faddl
push
push
inc
lea
add
add
nop
cmpsl
mov
mov
cmp
push
ja
mov
leave
push
pop
inc
loope
xchg
adc
and
subl
jno
push
cltd
aad
lahf
xor
or
mov
sbb
es
out
push
xchg
scas
lods
loope
adc
mov
pushf
or
or
inc
pop
pop
rcrb
or
pmulhw
xchg
sti
sbb
xor
aam
sbb
movsb
mov
mov
jns
loop
cwtl
aas
adc
js
outsb
and
xor
mov
clc
sub
or
add
mov
clc
dec
mov
push
int
outsl
dec
jmp
xchg
mov
xor
pop
inc
es
add
aas
sbb
insl
mov
insb
ret
rol
pop
mov
jp
hlt
or
mov
lahf
or
pop
call
pop
or
lods
je
mov
das
mov
inc
inc
dec
sbb
int3
sub
out
int3
xchg
jne
push
fdiv
lds
flds
popf
and
xor
or
scas
rclb
shlb
shll
cmp
pusha
insl
mov
pop
xchg
int3
bound
dec
xor
add
lcall
jmp
pushfw
mov
out
lret
outsl
enter
subl
mov
mov
lea
jge
ss
movsl
ljmp
dec
lcall
cmc
add
aas
add
fstps
jne
jns
xchg
cmp
lcall
and
stos
nop
xor
scas
inc
mov
inc
mov
cmpsb
clc
mov
dec
push
push
popf
fwait
sti
ja
std
lods
repnz
push
mov
out
xchg
mov
push
loope
adc
test
push
mov
fnop
pop
test
loop
shll
rcrl
xchg
leave
add
jle
aaa
aaa
push
push
pop
push
jl
stos
ret
mov
arpl
jle
add
jmp
sub
jo
repz
xor
sub
clc
call
sub
and
stc
xchg
cmp
repnz
fbstp
add
es
roll
xchg
pop
dec
pop
cltd
mov
inc
and
lret
lds
sbb
mov
xor
jno
pop
in
dec
outsb
stos
out
fstpl
call
test
sbb
mov
insb
mov
dec
sbbb
shlb
push
mov
lods
add
adc
leave
lahf
idivb
add
ja
and
cltd
gs
cld
add
les
xchg
mov
scas
test
adc
or
add
jns
les
sbbb
ja
push
jg
lds
mov
jns
stc
dec
fldcw
or
scas
out
inc
int3
xchg
xchg
mov
fisubrs
pop
sbb
pop
stos
xchg
jno
roll
daa
cld
in
stc
arpl
stc
lcall
les
mov
sarb
repz
fistl
adc
mov
jb
dec
dec
dec
push
in
add
sub
add
push
pop
aad
fistpll
in
in
jg
imulb
mov
cmc
jne
mov
xchg
ljmp
mov
mov
adc
and
push
push
ss
push
fcmovb
add
adc
nop
test
cmp
mov
xchg
shl
and
ret
into
xchg
push
shlb
sbb
add
sahf
je
leave
test
push
aam
dec
nop
pop
and
shl
mov
mov
lcall
push
push
in
and
mov
mov
adc
jl
adc
or
xchg
or
dec
loope
addb
pop
jne
icebp
jbe
std
push
xor
lret
arpl
xchg
fnsave
cli
rorb
in
sahf
sbb
pop
dec
and
jmp
icebp
mov
in
xor
dec
mov
add
xor
outsl
stc
push
shl
call
in
jg
push
inc
addr16
in
lock
fnsave
jae
xor
push
add
std
sbb
mov
repz
jbe
adc
sar
mov
enter
inc
inc
ficoml
out
mov
fmul
sbbl
sbb
cld
fstps
sbbl
call
pop
pop
movsb
rcrb
cmp
mov
mov
and
test
stos
and
pop
fbld
inc
inc
cmp
stc
dec
inc
test
rorb
inc
imul
loope
mov
mov
or
int3
jmp
sarl
mov
fistpl
js
aad
cld
enter
data16
testb
add
pop
popa
push
icebp
out
mov
xchg
cmp
cmp
pop
add
add
cmpsl
aad
mov
sbb
mov
lds
dec
dec
add
repz
mov
fnstcw
mov
xchg
pop
inc
testl
or
jb
sbb
cmp
mov
or
ljmp
dec
es
pop
cmp
andb
lret
mov
fs
mov
or
pusha
das
or
dec
mov
jge
dec
jbe
jae
adc
xlat
and
cld
add
outsl
sbbb
push
xor
repz
outsb
xchg
js
sbbb
andnps
cwtl
jge
pop
push
rcl
cmpsb
cmp
cmpsl
jl
inc
push
inc
xchg
das
aaa
mov
lods
jne
cs
shl
fildl
and
inc
cmp
in
int
shll
ret
mov
fs
mov
mov
cmc
pop
or
jnp
scas
adc
testl
int
cld
xchg
ficomps
popaw
mov
sbb
lods
js
lret
enter
addr16
repnz
xchg
addl
jge
pusha
cld
cmp
push
orb
sti
xchg
xchg
cli
mov
movsl
sbbb
es
rcr
repz
mov
xor
out
lds
xchg
jo
add
jne
enter
xor
mov
mov
and
sti
push
cmpsb
inc
mov
push
sub
nop
sub
mov
adc
cmc
mov
mov
repnz
sbb
mov
and
leave
lds
mov
or
icebp
daa
andb
sbb
movsb
add
push
lahf
fwait
out
fnstsw
pop
adc
idiv
into
jbe
outsb
pusha
fs
outsb
inc
fwait
xchg
les
nop
test
or
lcall
and
or
dec
cli
mov
rcrb
sub
add
mov
mov
cmp
push
cmp
mov
and
ficoml
rclb
les
bound
xor
or
mov
add
jle
in
das
imul
out
mov
mov
stc
cmpsl
lods
pop
inc
shll
add
mov
loopne
mov
arpl
addl
dec
data16
xor
push
cmp
xor
adc
jno
xlat
cwtl
mov
sbb
mov
jge
out
es
mov
mov
pushf
scas
popl
and
push
movsb
js
pop
dec
cwtl
jo
fisubs
xchg
jns
jnp
cli
sbb
push
jmp
sbb
jbe
gs
mov
push
sbb
cmp
enter
cmp
fisubl
dec
sbb
lods
cmp
ljmp
roll
and
mov
es
shll
mov
test
in
add
or
call
and
mov
dec
jns
jo
lahf
fwait
sbb
popf
mov
inc
fstl
sbbl
movsl
sub
lods
call
xchg
mov
lahf
adc
cld
jmp
or
pop
into
imul
sbb
inc
add
jbe,pt
test
dec
sub
cmpsb
pushf
mov
out
cwtl
gs
out
mov
lret
jmp
push
pop
or
mov
push
adc
push
dec
out
sbb
push
mov
aas
popf
pop
inc
push
jp
lret
lods
cmp
lret
sbb
rcr
movsl
subb
mov
mov
int3
adc
xorb
add
jl
subb
cmc
repnz
lock
in
movsl
jecxz
orb
sub
inc
aaa
mov
inc
lret
add
sbb
xchg
mov
sbb
iret
inc
push
and
sbb
sub
jne
push
in
push
into
daa
lock
mov
scas
mov
jo
pusha
cmp
lea
jno
int3
flds
cmpsb
out
rcrb
cmpl
addr16
stc
inc
xor
cmp
mov
inc
push
leave
cmc
jle
push
cli
insl
loop
cwtl
rcl
clc
nop
cwtl
daa
or
lock
dec
inc
pop
and
adc
or
fsubl
stos
xchg
lahf
negb
mov
push
scas
loop
xchg
in
jp
or
into
lock
sub
aad
push
into
jae
cli
cmc
cli
pop
pop
loopne
fcmovb
or
xchg
out
cli
dec
cmp
xor
ds
jae
pop
je
xchg
pop
inc
fistpll
insl
and
xor
aad
mov
sahf
pop
and
lret
xor
adc
adc
cli
fwait
jnp
pop
pop
cld
mov
push
jmp
incl
fldenv
add
in
cmp
pushf
stc
notl
pop
test
cmp
mov
out
push
cmp
xchg
mov
cmc
rcrl
divb
xchg
cmp
add
mov
ret
loope
dec
xor
pop
push
or
lea
mov
or
cld
and
aaa
push
pop
push
das
push
pop
data16
inc
and
xlat
add
sub
xchg
in
cli
fcoml
mov
rclb
and
addl
sahf
mov
mov
fdivl
sbb
fnstcw
in
mov
pusha
and
pushf
fidivrl
xchg
xor
dec
cmp
fsubl
jle
sub
jle
repz
lcall
mov
sbb
hlt
mov
xor
jmp
dec
cs
test
stos
imul
push
mov
js
imul
divb
push
mov
or
hlt
add
mov
mov
hlt
jp
movsb
adc
and
cmc
mov
nop
popa
clc
fdivr
in
sti
sbb
jmp
adc
push
mov
popl
pop
mov
pop
dec
ss
cwtl
jge
jno
jg
adc
int
xor
push
jle
shrl
pop
mov
aam
aam
repz
fistl
dec
dec
lds
add
into
lret
dec
lcall
xchg
xor
cwtl
cmp
dec
test
push
hlt
lret
out
cltd
lea
xchg
or
dec
sarb
repnz
push
mov
xlat
arpl
shll
hlt
ljmp
daa
mov
sub
bound
test
xorb
jecxz
test
dec
cmpsl
pop
pop
xchg
mov
out
in
das
pop
test
fsubl
pusha
out
adc
rcrb
hlt
aaa
fsubrs
push
cmp
out
push
shll
xor
out
test
daa
aam
ret
js
arpl
lret
jmp
or
sub
mov
aam
cwtl
test
inc
pusha
mov
inc
adc
xchg
cltd
sbb
fwait
in
xorb
dec
stos
mov
mov
jge
mov
mov
sub
movsb
pop
adc
ja
mov
gs
aad
dec
sub
out
aas
mov
and
rolb
jecxz
adc
mov
pop
cmp
movsl
mov
js
int3
push
inc
lahf
es
cmc
dec
xor
mov
stos
orb
cs
mov
ja
pop
mov
repz
adcl
mov
xlat
fs
jecxz
jge
ret
sub
es
mov
arpl
pop
ja
js
or
out
sbb
ret
shl
enter
outsl
push
leave
mov
and
movb
jge
xor
rorb
mov
mov
xor
aaa
and
aad
add
sub
push
stc
mov
cmp
jg
out
jnp
addr16
cmp
or
mov
es
push
sarl
push
jecxz
sti
push
addl
add
or
imul
dec
mov
mov
cmp
jnp
cmpsl
xchg
stc
pop
ja
fstpl
inc
stos
out
pop
in
decl
dec
call
xchg
cmc
lcall
xor
mov
cmp
ss
repz
add
mov
jle
ljmp
jmp
arpl
sub
xchg
rcr
pop
lea
push
mov
sub
aad
lahf
call
xor
jg
clc
je
mov
ljmp
stos
adc
out
and
in
push
xor
cmp
push
sarb
xor
cwtl
or
push
adc
icebp
insb
notb
enter
int3
ss
jmp
pop
testb
hlt
cmp
mov
fcompl
hlt
xor
and
in
aaa
arpl
mov
or
hlt
inc
cmp
sub
push
push
push
mov
mov
loopne
nop
xchg
js
clc
mov
mov
out
pop
scas
push
cmpsl
jnp,pn
pop
cmp
sbb
push
or
lahf
rcrl
dec
mov
inc
inc
jl
sahf
dec
sbb
mov
xchg
nop
aad
adc
in
pop
jb
imul
xor
insl
das
dec
daa
call
out
inc
mov
enter
jg
lock
cwtl
hlt
xlat
sub
dec
push
pop
sbb
dec
xlat
push
mov
fsubp
inc
sbb
rcrl
imul
push
cld
pop
out
pop
xchg
and
daa
insb
cld
fisttpl
bsf
push
cli
aad
xchg
and
inc
scas
ss
sbb
adc
out
add
mov
cmp
inc
mov
mov
fdiv
xchg
out
rclb
jns
push
jnp
xchg
popa
lahf
or
xor
jmp
and
lcall
jl
iret
mov
pop
shll
push
sti
pop
sbb
roll
fucomip
xchg
and
xor
mov
cmp
mov
imul
add
push
or
dec
aad
push
mov
fsub
sub
push
xchg
sbbl
push
out
sub
fstl
adc
stos
shl
jmp
jge
mov
adc
or
shll
stos
jno
sub
xchg
insb
loop
and
fstpl
loope
je
sub
mov
push
cmp
pop
aam
aas
rorb
inc
add
pusha
test
ja
mov
shrl
add
adc
enter
dec
sti
out
sbb
fwait
test
xchg
jge
xor
or
shlb
xor
test
in
arpl
push
xchg
ljmp
je
xor
jbe
out
repnz
cmp
ret
fs
sbb
mov
add
jecxz
loop
inc
xorb
cmc
bound
cmp
enter
pushf
cmp
int
inc
jmp
testl
xchg
sub
mov
inc
test
mov
sti
cmp
ja
rorb
stos
aas
push
and
xor
cltd
mov
push
outsl
mov
adc
push
lods
cmp
fdivrl
fwait
xor
mov
out
xchg
repnz
fstps
dec
repz
rcll
xor
ret
cmp
aam
mov
mov
adc
in
inc
int
add
or
add
dec
cmpsl
gs
shlb
dec
fadds
sbb
xchg
cmpsb
cmp
enter
cli
cmp
cmp
cwtl
jbe
cmc
lret
jns
fbstp
or
add
push
sbb
daa
clc
test
push
sahf
imul
or
std
dec
mov
mov
cs
mov
sub
cli
les
stos
xor
fwait
dec
movsl
pop
mov
and
mov
pop
pop
fdivl
pop
fisubrs
das
outsb
outsl
xchg
jecxz
push
das
in
pop
mov
push
dec
sbb
dec
lcall
sub
mov
inc
jmp
ss
mov
repnz
jo
dec
loope
mov
cltd
and
dec
cmp
out
fucomip
pop
jnp
nop
repnz
test
fbstp
shll
inc
and
xchg
dec
jecxz
xor
sbb
sahf
jnp
add
and
xchg
sub
jle
imul
inc
mov
daa
mov
push
mov
or
cltd
or
sub
and
das
push
lret
popa
sub
mov
sub
or
adc
rclb
mov
adc
sti
sub
mov
dec
jno
sbb
int3
or
sbb
ja
pop
push
inc
mov
inc
outsb
adc
push
lcall
or
pop
in
inc
daa
dec
jno
cmp
jnp
rolb
clc
les
imul
in
jo
add
pop
mov
xor
lods
imul
pop
mov
pop
insb
xchg
jge
cwtl
outsb
or
nop
add
xchg
mov
mov
jbe
inc
add
pop
pop
cltd
xor
mov
ja
ja
dec
out
cmc
lret
pop
repnz
add
popf
or
mov
ret
mov
jge
push
jmp
das
push
lods
jl
shl
sbb
daa
xchg
mov
roll
rclb
test
lds
dec
jmp
xchg
cmpsb
out
sbb
and
or
mov
fcmovu
inc
xchg
xchg
jne
mov
lret
aam
cmp
and
or
lock
adc
xor
jae
lcall
push
leave
jmp
push
fcomps
mov
mov
insl
pop
sbb
imul
imul
test
mov
stos
int3
cltd
cmp
sbb
test
cli
jle
icebp
aas
cwtl
cmpsl
data16
int3
cmp
and
mov
scas
sbb
rclb
add
lret
js
aaa
add
sbb
mov
sahf
push
jns
xor
dec
call
pop
stos
add
xor
adc
out
add
ret
cli
pop
mov
jmp
mov
inc
xchg
in
addr16
mov
mov
dec
add
jmp
aaa
insl
cmp
push
mov
or
lahf
mov
xchg
daa
and
mov
not
daa
into
test
push
shll
outsl
hlt
push
lea
shlb
js
jmp
push
test
jl
in
lods
push
sbb
in
loop
or
jecxz
dec
dec
mov
neg
stos
xchg
jo
into
int
jl
pop
jg
sbbl
jge
aas
mov
push
adc
lods
jno
xchg
pop
add
mov
dec
and
cmp
shll
fbld
and
mov
cltd
mov
cmp
pusha
inc
add
mov
mov
test
sub
stos
clc
inc
push
xor
xor
scas
nop
test
adc
jge
cmp
cmpsb
mov
jno
cmp
das
nop
or
nop
sbb
jnp
push
and
xchg
mov
push
push
mov
test
or
dec
mov
fmuls
ss
loop
imul
in
jne
or
jmp
std
xor
lods
pushw
mov
imul
mov
sub
cmpsb
pop
cmovl
mov
les
or
mov
test
imul
call
xor
mov
lret
pop
push
ja
push
jo
sbb
jecxz
testl
shlb
fwait
push
cwtl
loopne
fisubs
xor
les
lar
xchg
push
test
inc
mov
cmpsb
xor
shlb
or
pop
and
mov
push
sub
out
cmp
test
xor
loopne
lods
fs
mov
push
lahf
ss
cld
adc
mov
push
mov
sbb
xchg
push
mov
stos
mov
clc
sub
cmpsb
jno
cmpb
ret
push
call
adc
sahf
sti
inc
out
push
pop
sbb
pop
mov
in
xchg
aam
cmp
dec
mov
fwait
stos
add
add
jne
leave
js
mov
or
loop
mov
movsl
xlat
xchg
sub
rcrl
movsb
fbld
push
cmp
das
mov
dec
xchg
xchg
inc
and
in
cltd
mov
test
leave
out
push
sub
pusha
mov
shll
xor
rorb
or
cmp
mov
mov
ficompl
push
ja
or
pop
aad
cmpsb
push
inc
and
scas
mov
xor
das
push
or
inc
js
jmp
inc
and
cwtl
sub
lods
cmp
push
or
sub
icebp
in
bound
xchg
mul
pop
lea
add
xchg
out
jb
aad
aad
iret
xchg
stos
test
lcall
aad
lods
aaa
mov
mov
jo
out
pop
xchg
jae
and
dec
push
mov
cs
addb
out
gs
pop
dec
stc
and
test
or
loop
repz
outsb
sub
cmp
sarb
iret
in
test
mov
insb
sub
rclb
mov
addl
imul
lds
pop
inc
imul
es
lret
mov
mov
aad
imul
std
cmp
xor
cld
iret
jb
sbb
fucomi
mov
stc
mov
andb
lock
xchg
js
lahf
sbb
and
lods
rorl
mov
nop
ffreep
mov
dec
fs
adc
jo
test
jmp
arpl
or
lods
jns
sub
inc
cmpb
ja
dec
sbb
and
js
scas
cmp
pop
sarl
fsubl
pop
ds
xchg
divb
sbb
test
into
repnz
xor
push
mov
adc
das
ret
mov
push
xor
in
into
in
rorl
lds
xor
repnz
sti
pop
roll
push
jp
adc
push
and
and
rcll
pop
pop
int3
ja
repz
inc
add
sub
push
imulb
cmp
fisttpll
jge
jno
sub
int
sahf
xor
jmp
pop
sub
xorb
jne
mov
mov
outsl
outsb
scas
pop
mov
cmp
mov
jp
xor
xor
out
jno
cmp
jbe
and
push
mov
sahf
mov
cmpl
cmp
jg
das
repz
loopne
mov
mov
ja
dec
mov
mov
jne
clc
fs
lcall
inc
jg
shrl
push
mov
dec
xchg
fisttpll
xor
jae
dec
pop
fwait
out
push
aas
sbbl
stc
dec
pop
aaa
mov
push
ficomps
clc
jns
mov
xor
icebp
stos
mov
mov
and
pop
xchg
inc
test
mov
lret
int
or
xchg
mov
sub
push
faddl
dec
int3
mov
add
cmpsl
xchg
xchg
mov
test
into
xchg
push
aas
fcmove
xor
cmp
flds
push
lea
shlb
or
repz
mov
test
lret
cltd
and
sarl
cmpsb
ja
addr16
lahf
ljmp
imul
cmp
adc
arpl
pop
mov
mov
gs
out
std
xchg
or
push
aad
xchg
push
loopne
pop
cmp
andl
in
mov
icebp
mov
mov
inc
mov
push
bswap
push
pop
mov
lret
mov
or
cmp
mov
cmp
fwait
stos
mov
adc
xchg
mov
mov
xchg
mov
xchg
ss
mov
and
dec
ret
jne
jmp
mov
push
icebp
push
jle
lea
fwait
es
xchg
ret
repnz
cli
hlt
xchg
cmpsb
cmp
imul
add
or
mov
inc
adc
xor
pop
sbb
and
push
adc
jnp
imul
notb
push
scas
idivl
cmpsl
xor
in
comiss
popf
dec
mov
stos
inc
add
je
sbb
cmpsl
loopne
or
xchg
mov
xchg
shll
jno
aaa
out
add
jl
jb
jno
gs
bound
test
add
adc
test
shll
jns
and
push
mov
fmull
mov
jp
xor
jle
mov
out
jne
bound
push
dec
xor
hlt
xchg
cmpsb
pop
jmp
inc
cmpsl
sahf
jmp
fidivrl
popf
pusha
iret
cmc
xchg
pop
rorb
fimull
aam
dec
into
and
jp
push
mov
insb
fmull
sbb
jne
aas
js
mov
mov
test
fcmovb
je
push
into
outsl
xchg
push
aam
sti
mov
pushf
sbb
and
int3
hlt
xchg
cmp
mov
sti
cli
push
insl
bound
test
aad
rcl
adc
mov
push
andb
xor
inc
dec
hlt
aam
inc
shl
orl
cld
mov
cwtl
pop
mov
popa
gs
daa
sbb
sbb
cld
insb
pop
push
ret
mov
mov
cmp
out
scas
xlat
enter
js
dec
adc
xor
mov
lea
je
stos
hlt
repnz
mov
es
out
mov
lcall
cwtl
xorl
popa
lret
hlt
out
cwtl
xchg
dec
and
mov
jb
test
lea
mov
ret
or
cmp
into
mov
aaa
xchg
push
push
imul
sbbl
dec
es
dec
iret
in
mov
mov
xchg
mov
xor
push
sub
xchg
jl
loopne
fs
mov
mov
push
mov
xchg
or
ficomps
loope
or
jg
outsl
js
fildl
ret
hlt
adc
loopne
cli
mov
sbbl
sti
and
sbb
push
popf
outsb
add
sbb
out
lcall
jnp
adc
inc
mov
mov
int
mov
xlat
fwait
mov
rcr
enter
hlt
fnsave
test
dec
xor
and
and
push
add
in
loop
les
xor
jne
std
xchg
sarl
aas
jle
sti
cmp
negl
mov
cltd
repz
mov
inc
test
int
xor
xor
mov
mov
sub
fistpl
dec
xchg
lret
cmp
adc
loop
add
js
icebp
add
cli
push
out
lds
inc
and
in
into
fsubrl
test
adc
xchg
repz
into
pushl
jns
pop
scas
mov
adcl
out
mov
pop
subb
and
and
enter
aaa
pop
cmp
push
addr16
cwtl
mov
arpl
lea
or
adc
and
data16
cwtl
pushl
or
aad
stos
inc
push
jl
shl
inc
mov
int3
jmp
movsb
dec
aam
dec
scas
and
mov
push
jmp
out
int3
inc
mov
jno
ret
cmp
cwtl
mov
pushf
jecxz,pt
sarl
mov
dec
inc
cld
outsl
push
mov
test
push
mov
fadds
jecxz
adc
cmpsb
jae
cli
jp
mov
pop
cld
insb
sub
scas
call
fldt
sub
cmp
ret
push
shlb
pop
sub
ss
or
pop
scas
mov
push
sbb
push
mov
and
ret
bound
les
in
pop
xchg
mov
in
and
jle
or
push
xchg
jnp
pop
aaa
inc
std
rcl
cmp
xorl
inc
cmc
push
jb
rclb
pop
mov
mov
push
out
dec
add
fdivl
push
fldenv
jmp
test
fildll
stos
fisubrl
or
cmp
cmp
sti
xlat
fwait
jb
aam
shl
dec
xchg
hlt
addb
sub
movsl
xchg
add
add
clc
or
xor
fwait
jle
data16
lahf
sbb
adc
cmp
outsb
push
fdivrl
hlt
jg
pop
cmp
pushf
jbe
mov
inc
repz
in
fsqrt
outsl
sti
or
and
push
adcl
jbe
add
fnstenv
cs
std
imul
je
jns
ss
cmp
pop
dec
sub
testb
imul
sbb
inc
loope
jl
out
inc
push
imul
std
mov
rorb
adc
jb
pop
andl
push
js
pop
sbb
mov
rclb
fstpl
insl
fs
mov
ss
push
sub
pop
or
mov
faddl
fs
mov
pop
xchg
jno
mov
adc
push
cmpsb
pop
dec
sbb
stc
vandpd
cwtl
xchg
out
icebp
pop
rcll
aad
cmp
fcomi
mov
sbb
ja
das
popa
scas
cmp
inc
je
xchg
dec
cmp
jecxz
imul
sub
adc
sti
int3
sub
push
xor
pushf
xor
or
mov
mov
mov
iret
push
lea
sahf
scas
test
inc
rcrb
or
sbb
push
xor
daa
lea
in
subb
in
aaa
aad
jb
jecxz
and
sbb
movsb
inc
pop
mov
push
pop
mov
xchg
push
dec
push
cmpsl
or
dec
test
test
cmp
or
dec
sbb
cmp
mov
mov
leave
xchg
and
mov
jns
rcr
sbb
xor
pop
in
dec
mov
lock
or
push
or
cmp
mov
pop
xchg
or
adc
gs
push
xchg
mov
xor
jecxz
icebp
pop
or
outsb
push
mov
mov
loopne
popf
sbbb
sbb
aad
jge
add
test
insl
fisubrl
gs
jne
jp
das
xchg
jmp
dec
inc
shrl
pop
fisubl
pop
ficompl
neg
pop
mov
test
pop
and
iret
ficoml
dec
adc
cmpb
xchg
bound
push
nop
adc
mov
and
rcll
sub
ret
cmc
add
xchg
lret
shll
sbb
mov
ficoms
cmp
stos
cmp
imul
repz
dec
push
orl
sbb
add
sub
push
cmp
mov
sbb
out
mov
xchg
aam
cmp
das
out
push
rorb
sub
mov
or
stos
movsb
stc
pop
pop
xchg
lds
enter
test
outsl
ret
rcr
push
pop
loop
adc
fwait
ss
mov
es
andb
cmp
cmpb
into
inc
sti
xor
testl
or
ret
mov
neg
mov
inc
mov
mov
ficomps
insb
cld
jmp
xchg
ret
insl
imul
ret
cmpsb
pusha
out
pop
adc
insb
sbb
je
and
cmpsl
sub
rorb
sub
adc
push
andl
sbb
inc
fwait
jge
xor
cmpsl
bound
mov
mov
mov
rorb
test
test
loope
in
inc
cmp
sbb
xchg
out
push
pop
scas
jp
xchg
pushf
push
pop
and
xor
mov
cmp
xor
cmp
and
and
jp
dec
adc
inc
add
fnstcw
ret
or
mov
mov
pop
cmpsl
fbstp
outsb
sbb
imul
jbe
adc
mov
mov
iret
adc
stc
adc
sub
loope
mov
xor
in
mov
imul
std
outsl
push
adc
fs
sbb
mov
xor
scas
mov
pushf
inc
xchg
aaa
rcr
mov
sub
dec
and
jno
adc
lods
popf
jns
adc
mov
mov
sbb
jmp
stos
mov
sub
mov
aam
xchg
push
aad
cmpsb
xor
push
shl
push
shufps
inc
fcmovbe
outsb
cmp
add
lds
mov
jecxz
pushf
jae
out
cmp
lahf
movsb
mov
je
movsb
popa
jecxz
mov
leave
out
test
es
inc
add
mov
mov
xorb
dec
ss
sub
inc
lea
push
mov
add
fdivs
pop
dec
test
addb
mov
rol
int3
movsb
mov
mov
xchg
data16
mov
test
nop
inc
daa
sbb
movb
popw
jns
js
xchg
inc
js
enter
lods
stos
mov
addb
rolb
sub
xchg
pop
push
push
daa
pop
xchg
pop
nop
push
inc
popf
push
test
or
loopne
cmpsb
ja
popa
adc
and
inc
fidivrl
nop
mov
mov
in
mov
xor
adc
in
andl
cmpsl
lahf
mov
mov
mov
push
std
cwtl
push
xchg
sub
out
bound
mov
notb
inc
dec
lret
mov
lock
sbb
push
fnstsw
xlat
push
and
ljmp
aad
movsl
filds
add
sub
outsl
ret
cltd
leave
jb
das
aaa
or
mov
lods
lahf
jae
pop
hlt
mov
test
dec
dec
sub
scas
cmp
cmc
sub
mov
lret
addr16
adc
add
xchg
mov
mov
mov
mov
xlat
dec
sbb
mov
in
shll
jne
dec
dec
dec
mov
jns
pop
xor
mov
fwait
adc
push
mov
ret
push
jno
int
ja
jno
xchg
or
adc
sbb
cmp
xchg
sti
incb
mov
inc
push
out
sub
fdivr
sar
dec
test
loopne
push
pop
mov
in
xchg
mov
add
sbb
cmpsl
pop
in
insb
inc
xlat
sbb
mov
sti
lret
mov
ds
push
insl
sub
mov
sbb
outsb
loop
sbb
sub
xchg
pop
cs
push
shl
dec
pushf
add
pop
mov
aas
lock
sub
sbb
bound
and
out
dec
jmp
call
jp
xchg
xchg
lret
xor
adc
mov
cmpsl
ret
mov
mov
gs
fdivrl
xor
lea
ret
test
dec
cmp
pop
push
sbb
mov
loop
fwait
rcrl
stos
iret
xor
pop
pop
mov
inc
push
repz
repz
call
and
dec
test
icebp
jne
in
fcompl
movsl
sti
mov
cmp
sub
adc
mov
or
sub
xor
pop
push
xchg
ret
addb
xchg
stc
mov
xchg
and
xor
jno
push
mov
mov
fldt
and
fsubl
sub
andl
int
inc
aaa
jp,pt
lahf
movsl
sub
in
sbb
pushf
lods
cmp
mov
das
jno
sahf
xchg
sub
mov
push
xor
sbb
enter
fdivr
mov
into
sahf
fwait
push
jmp
iret
pop
test
ret
cwtl
lock
mov
cmpl
jbe
aaa
int
pop
scas
inc
imul
imul
add
sub
push
push
decl
loopne
sahf
push
test
lods
outsb
cmpsb
mov
adc
insl
mov
cmc
mov
mov
data16
mulb
add
adc
xchg
into
add
mov
test
jno
es
mov
mov
stos
push
push
pop
outsl
inc
rcr
movsl
xor
adc
les
mov
or
pop
es
ficomps
ljmp
es
mov
cmp
ljmp
cs
sbb
or
mov
out
adc
js
faddl
dec
or
stos
dec
dec
test
ss
mov
rcrl
jae
mov
hlt
nop
jp
lds
pop
out
cmp
push
pop
arpl
je
mov
xor
ljmp
adc
jle
jno
add
jno
pushf
test
ret
cld
or
adc
fnstcw
cli
jb
cltd
cmc
mov
xor
hlt
repnz
iret
pop
cmc
mov
test
or
das
add
bound
gs
popf
mov
out
lea
and
fisubs
imul
cmpsb
xchg
dec
push
cmp
mov
jg
scas
mov
cli
dec
mov
inc
enter
adc
fbld
out
ss
pop
xor
les
sarl
sbb
sbb
push
xor
iret
cmp
adc
sbb
inc
add
testl
and
daa
pushf
mov
xor
fwait
repz
or
mov
leave
inc
mov
sub
add
mov
int
mov
rcrb
xlat
leave
cmp
ret
or
out
jae
pop
xor
daa
jmp
mov
lcall
sar
add
icebp
ret
scas
inc
pop
jmp
jae
mov
adc
mov
in
and
mov
or
jb
fdivl
gs
notl
sub
cmp
jg
lds
and
cmp
xchg
jmp
xor
mov
jno
sub
mov
ret
inc
inc
pop
inc
ds
iret
pop
daa
mov
xchg
sub
std
pop
cmc
icebp
ja
sub
aad
dec
or
and
push
notb
dec
pop
fstp
jb
jne
hlt
mov
outsb
int3
sarl
cmpsl
fdecstp
mov
addr16
cmpsl
or
aad
sub
push
ret
xchg
clc
stos
roll
sti
pop
ds
scas
push
adc
jno
inc
mov
adc
lret
psrlq
sbb
xchg
mov
inc
sbb
lea
scas
push
and
call
jae
out
cmp
jno
js
pop
fcmovne
lret
add
mov
sub
inc
loopne
mov
clc
mov
push
mov
daa
ja
add
movsb
push
adc
fs
and
jno
mov
mov
repz
lods
inc
cmpb
dec
cmp
icebp
mov
sar
cmpsb
adc
jb
cs
adc
movsb
pop
mov
inc
leave
mov
sbb
movsb
test
movhps
sahf
lods
aaa
out
gs
and
inc
out
or
push
pop
jbe
inc
adc
shrb
imul
repz
mov
xchg
xor
lcall
iret
subb
push
cld
mov
fnsave
mov
and
sbb
insl
and
mov
mov
rcr
shr
xor
dec
pop
push
sbb
fdivrs
mov
jne
scas
sub
jns
adc
add
add
fsubrs
leavew
pusha
pop
push
arpl
movsl
enter
aaa
in
xorl
push
ror
in
mov
cmp
xor
mov
movsl
push
or
pop
push
pop
or
fsub
cmp
and
mov
xorl
xchg
mov
dec
dec
popf
insb
inc
inc
mov
push
loope
cmp
mov
add
xchg
mov
arpl
sbb
out
cmc
sahf
and
mov
std
mov
xchg
js
cwtl
mov
imul
mov
scas
int3
stc
icebp
sahf
out
out
arpl
icebp
dec
das
nop
scas
xchg
cmp
add
push
mov
inc
adc
scas
and
fninit
movd
in
xchg
imul
jae
dec
add
movsb
pop
pop
lock
pop
std
sbb
push
sbb
push
stos
popa
lahf
bound
mov
mov
cwtl
movsb
daa
xchg
xchg
incl
mov
cmp
mov
int3
mov
mov
add
push
dec
aas
jge
loopne
ret
in
or
ds
out
mov
mov
sbb
inc
aaa
jnp
pcmpeqd
and
mov
repnz
pop
mov
aad
cli
jle
mov
outsb
push
mov
xor
ret
pushf
shll
idivb
scas
xor
push
insl
sub
pushf
ljmp
shll
or
jp
cmpsl
rorl
jnp
inc
push
cmp
sarl
in
and
mov
mov
in
movsl
daa
popf
xchg
sub
call
rcrb
xor
cmc
stc
fstl
pop
test
pushw
push
mov
mov
ret
in
pop
sub
cmp
ljmp
mov
out
mov
xchg
cmp
arpl
or
push
sbb
jae
ficoms
rcrb
aam
out
jp
cld
add
adc
cmpsl
push
mov
ret
out
sbb
das
cmp
adc
fcompl
fadds
mov
mov
sbb
in
arpl
cmp
pop
scas
imul
rorl
movsb
and
mov
pop
adc
scas
xchg
xchg
and
and
dec
ja
xchg
dec
shlb
pop
jmp
ret
leave
ret
cs
cmp
bound
push
xchg
jle
sti
adc
xchg
or
ret
cmpsb
xor
gs
inc
or
jl
movsl
dec
insb
call
out
dec
insb
popf
push
mov
imul
jg
xor
jg
sbb
out
adc
dec
xchg
lea
push
add
mov
xchg
cwtl
aam
fwait
out
cmp
cld
sub
mov
repz
xchg
andb
cmc
jb,pt
loopne
mov
add
and
loopne
jp
cmc
or
loopne
pop
jmp
lcall
jecxz
or
movsl
mov
xlat
js
inc
outsl
addr16
jecxz
cmp
fcomps
and
ljmp
cmp
rcll
push
inc
insb
mov
mov
xor
sub
sub
shlb
dec
aaa
mov
aaa
jge
mov
aad
mov
outsl
outsl
pop
dec
xorl
int3
mov
stc
cmp
je
and
ja
int3
sbb
fldenv
mov
int3
inc
push
lds
pushf
sub
xor
ljmp
xor
jge
out
jns
add
cmp
and
pop
xchg
add
and
imul
jg
loop
scas
mov
xchg
xchg
pop
in
pop
je
mov
jbe
mov
bound
stos
inc
int
xorl
fwait
lret
vpsllq
das
xor
ljmp
adc
mov
dec
sbb
mov
or
bnd
inc
mov
mov
adc
popf
xchg
jg
sub
dec
xchg
inc
sub
cwtl
cltd
stc
mov
mov
ret
xor
xlat
jp
xchg
xorl
mov
sbb
inc
cmp
std
or
push
push
mov
jle
outsb
rcll
adc
adc
push
mov
loop
inc
out
cmc
subb
inc
daa
jle
das
in
mov
rcrb
sub
and
insb
pushf
xchg
ret
push
xchg
jbe
push
pop
dec
or
cmp
xor
das
ror
aad
cld
mov
rclb
in
js
scas
pop
ficompl
adc
imul
jae
test
jnp
int
ds
pop
lahf
daa
in
cmpsb
mov
and
int
push
arpl
xorb
aad
cmp
dec
fisubl
mov
and
stos
cmp
arpl
ss
adc
jno
mov
sbb
cmp
jecxz
fcoms
call
jg
xchg
lcall
and
bound
lds
movsb
xchg
pop
out
stos
jmp
nop
cmp
fadds
mov
sub
sarl
leave
mov
lock
cmpsl
sarb
shrb
aas
sub
push
mov
sbb
mov
add
popf
mov
gs
movsl
faddl
enter
pushf
pushf
sub
stc
cmp
lcall
fs
shrl
popa
insb
sub
lret
mov
dec
shrl
in
aad
js
adc
fwait
idiv
xor
clc
cltd
xor
cmpsl
xchg
pusha
popa
sbb
mov
inc
arpl
adc
fstl
mov
loopne
jp
and
mov
mov
das
lahf
push
aas
mov
push
test
adc
or
dec
jne
mov
jp
mov
jp
cmp
les
pushf
mov
jp
mov
push
jl
dec
bound
jne
movzbl
sbb
cld
sahf
jmp
cld
loopne
std
inc
out
push
outsb
ret
pop
into
xchg
dec
repz
imul
sbb
sbb
dec
imul
ds
xorl
sbb
mov
mov
cwtl
cmp
add
fisubrs
negb
jno
jg
sub
cmp
jae
les
nop
push
mov
loopne
push
inc
or
pop
jecxz
fnsave
mov
add
cmpb
adc
pop
add
jno
cmp
inc
daa
arpl
jle
xchg
call
fisubrs
or
test
sbb
sbb
ret
push
sbb
adc
push
lahf
pop
jecxz
sahf
push
lcall
lock
pop
and
xchg
fmul
cmpsl
jg
or
mov
rolb
test
and
js
emms
jp
cmp
out
addl
nop
scas
shrl
and
rcrl
mov
out
mov
and
lcall
fisubl
jo
pop
aam
pop
arpl
xchg
pop
add
fcmovb
inc
sahf
das
cmp
xorl
sub
mov
and
es
dec
les
cmp
pop
jbe
roll
mov
shl
mov
iret
cmc
jp
incl
lea
ret
shrb
jbe
movsl
aam
mov
pop
and
push
push
pop
mov
sub
and
xchg
and
dec
push
jecxz
mov
or
push
lfs
aas
aaa
mov
cmpsl
jmp
pop
shrl
lcall
into
in
out
cltd
jge
enter
lds
clc
mov
adc
fisttpll
xchg
jmp
mov
into
enter
or
cld
sub
cwtl
outsb
in
loopne
mov
cs
xchg
pushf
push
es
fisubrl
enterw
rorb
adc
pop
pop
cld
lods
out
test
jnp
rcrb
sub
scas
jb
cwtl
movsb
jmp
xchg
subl
cmp
push
add
in
pop
mov
out
mov
and
jo
iret
mov
insl
adc
sub
jae
sub
xor
mov
divb
pusha
mov
sub
or
cwtl
adc
pop
jne
inc
xchg
leave
add
xor
outsb
imulb
xor
gs
and
adc
dec
lcall
xchg
pop
movsl
or
daa
insb
add
jp
sub
insb
add
sub
xor
mov
xor
mov
rcll
mov
mov
outsb
lods
adc
pusha
or
mov
popf
lahf
fcoms
sbb
test
nop
popf
daa
jg
aad
xor
mov
arpl
cvtps2pi
scas
mov
xchg
insl
push
jl
mov
stc
js
pusha
stos
or
xlat
jnp
fwait
sbb
jo
out
and
cmp
std
or
mov
loopne
add
fdivrs
fistpl
mov
gs
cmpb
pop
out
lods
add
jmp
xchg
jl
leave
es
xchg
pop
mov
mov
jecxz
mov
out
add
movsb
xor
bound
aaa
dec
jo
mov
sbb
mov
roll
in
out
sbb
jle
cmp
orb
iret
fldt
pop
mov
jmp
nop
push
or
jg
roll
js
or
outsb
mov
mov
les
in
add
ljmp
sub
and
mov
xor
dec
or
out
push
pop
push
dec
jmp
mov
inc
pop
xor
pop
pop
addr16
adc
out
jbe
mov
mov
aam
sbb
mov
adc
mov
mov
mov
fwait
ja
sbb
mov
fcompl
dec
daa
xchg
push
mov
andl
pop
cmpsl
fwait
scas
cs
cwtl
int3
inc
mov
mov
xchg
inc
loop
out
testb
cwtl
fs
pop
int3
rol
dec
xor
les
pop
jo
push
nop
pop
or
int3
pop
xchg
mov
mov
addr16
pusha
dec
or
cmpb
and
lahf
rolb
dec
bound
subl
dec
cli
cmc
mov
dec
mov
or
lahf
lock
fiadds
loop
cs
pop
or
loopne
in
addb
sbb
cmpb
push
cmp
and
or
xor
fidivl
das
inc
push
fwait
ret
and
push
dec
mov
fnstsw
lret
add
mov
lret
sub
adc
jecxz
rcl
jns
push
mov
pop
or
ja
add
mov
pop
xchg
and
incl
sahf
out
mov
cwtl
loop
sbb
or
sbb
inc
icebp
sbbb
mov
mov
inc
jle
enter
or
cmpsb
es
sbb
in
iret
gs
sub
addr16
xchg
sbb
mov
sub
rcrb
pushf
mov
push
mov
mov
adc
cmp
or
mov
mov
arpl
outsb
inc
lods
out
icebp
sub
push
lods
pop
dec
js
xchg
lea
cmp
xchg
add
test
sbb
out
pushf
dec
mov
daa
mov
push
mov
push
std
push
aaa
jns
xchg
or
dec
jns
cmp
or
cmpsb
inc
jecxz
daa
out
mov
lds
in
fsts
adc
leave
mov
sub
xor
fdivrs
sarb
cmp
push
fbld
out
xor
add
or
push
push
push
adc
in
mov
fwait
scas
mov
inc
push
addr16
jl
jge
add
or
mov
loop
js
aas
in
pop
popf
ret
add
in
repnz
sarb
mov
cmp
jnp
mov
addr16
mov
imul
adc
bswap
stos
push
out
or
mov
pop
mov
loop
cld
push
xor
or
jbe
data16
sbb
add
cmp
jecxz
sub
movsl
sub
shlb
jns
hlt
jns
xchg
xlat
loopne
dec
imul
jae
mov
jl
mov
xchg
mov
mov
mov
sbb
mov
fs
mov
orb
push
push
xchg
dec
ja
mov
xchg
push
xor
mov
lret
ljmp
push
subl
mov
jmp
sbb
fdivrl
iret
inc
xorl
int
stos
loopne
enter
iret
into
push
inc
jecxz
ljmp
push
mov
pop
aad
jae
clc
pop
push
bound
ja
add
cmp
xor
sub
inc
dec
aaa
out
gs
xchg
jmp
pop
xchg
inc
fadd
pushf
outsl
xchg
pop
aam
cwtl
jnp
daa
push
cmpsl
mov
xchg
or
dec
clc
ss
add
jne
jg
push
leave
std
test
shrb
mov
cmp
mov
int3
inc
lcall
out
mov
adc
fiadds
jae
stos
lcall
shl
lret
pop
xor
das
sbb
push
fildl
or
xchg
push
shll
js
out
shld
daa
push
sbb
in
aas
data16
jb
pop
sbb
pop
cmp
and
mov
jb
sub
sub
jb
popf
lods
mov
xor
push
push
jb
mov
hlt
orl
jmp
dec
and
mov
cmp
out
lea
dec
and
stc
jp
push
push
aas
lods
popf
cmpsb
xchg
lods
outsl
fs
mov
add
mov
pusha
sbb
mov
dec
fisttpl
jno
imul
adc
nop
test
mov
xchg
shlb
lock
rcll
mov
movsl
es
repnz
test
mov
cmpb
add
mov
ljmp
push
mov
jbe
inc
inc
pop
lods
es
cmpsb
inc
test
sub
les
xorb
inc
cmp
sub
cmp
mov
fsubrl
js
pop
insl
call
mov
les
fsub
cmp
pop
pusha
lcall
call
popa
inc
popf
jae
fnstsw
or
inc
negl
je
adcl
lcall
movsb
inc
outsl
jno
mov
push
pop
mov
xchg
int3
xchg
jp
mov
mov
lret
ja
sbb
call
pop
xchg
jne
cmpl
inc
push
addl
xor
movsl
ret
aad
out
inc
mov
ss
adc
fcmovb
mov
int
and
testl
jmp
in
pop
xor
mov
inc
ss
sub
pop
inc
fcmovnb
imul
in
adc
inc
sbb
inc
pop
pop
push
cmpb
das
push
or
or
push
and
mov
or
push
and
imul
xor
loop
add
stos
movb
sbbl
loop
inc
sbb
jp
dec
je
mov
lock
adc
cmp
pop
adc
or
push
push
outsb
cs
push
jnp
imul
shll
mov
popf
inc
addr16
push
adc
enter
nop
daa
lock
cld
int3
leave
mov
shlb
adc
fxtract
adc
pop
lret
mov
clc
sub
pop
mov
jae
jg
or
iret
orb
pop
in
movsl
cmpsl
imul
ljmp
add
mov
jl
ja
or
inc
subl
push
scas
cmpl
nop
dec
cmp
jge
rolb
nop
das
fistpll
inc
imulb
inc
gs
test
mov
fistps
xchg
fstp
adcl
icebp
xlat
inc
inc
inc
sbb
inc
imul
xor
push
inc
aad
das
mov
sub
and
bnd
mov
cmpsb
push
or
notl
ret
lea
inc
fdiv
jmp
lods
fs
shlb
sbb
inc
jnp
int
dec
sub
mov
mov
push
push
fimull
pusha
jne
sub
jb
lods
push
cmc
inc
test
hlt
xchg
repnz
je
aam
mov
dec
arpl
and
push
pop
or
xchg
ja
iret
mov
out
dec
loope
xchg
jle
test
cmp
pop
add
or
sub
mulb
push
fiadds
movsb
mov
jecxz
jb
jb
icebp
test
fistps
and
jp
jae
cmpsl
daa
mov
and
arpl
cmp
icebp
aaa
jle
pop
call
lds
jo
fmuls
out
cld
into
sbb
call
arpl
aas
aaa
bound
xor
dec
xchg
stc
imulb
xchg
xchg
addr16
dec
cwtl
mov
dec
xchg
daa
mov
pusha
inc
fisubl
rorl
dec
and
pop
mov
mov
clc
sbb
jecxz
push
pop
push
xorl
inc
fptan
sub
fistpl
scas
ret
cmp
inc
pusha
xchg
xchg
int
push
sub
popf
insl
xor
jge
inc
jmp
xchg
pop
cmp
icebp
sub
mov
adc
loop
aaa
into
sarl
dec
pop
pop
jmp
into
scas
mov
jne
jge
mov
mov
mov
adc
test
insl
repz
addl
adcl
test
in
jns
das
cld
pop
std
aas
or
cs
ret
sbb
jmp
mov
leave
daa
fidivl
sub
fists
mov
call
lock
movsb
ficoml
call
repz
ret
jp
rol
jp
mov
jne
mov
or
out
stc
inc
add
aaa
add
sarb
fiadds
mov
mov
out
test
dec
mov
clc
in
mov
dec
pminsw
jbe
stc
ljmp
dec
mov
xlat
xor
inc
push
imul
push
arpl
dec
repnz
stos
sbb
cwtl
int3
cmp
in
in
lods
cli
inc
test
mov
jbe
mov
mov
sbb
mov
shl
adc
pusha
push
lret
cmp
dec
les
dec
fwait
mov
xchg
ss
inc
dec
sahf
sbb
and
ret
and
or
xchg
cli
push
lret
icebp
cmp
andb
fnstsw
in
xchg
mov
int
stc
sub
jnp
cmp
or
push
dec
mov
in
dec
insb
sub
and
les
arpl
in
je
xchg
in
out
in
into
stc
sub
jnp
pop
mov
sub
in
pusha
xor
and
bound
in
cmpsl
sahf
ret
shr
sub
popf
inc
pop
add
stc
sub
mov
sub
movl
mov
in
jle
push
sbb
push
call
scas
cmp
repz
xor
rorb
pushf
xchg
mov
xchg
adc
push
ss
cmp
adc
fsubrl
mov
sti
xorl
push
xchg
pop
pop
pop
leave
sbb
xor
mov
lods
in
rcl
xchg
add
roll
stc
daa
or
dec
dec
lds
push
jno
xchg
ret
pop
mov
mov
mov
rorb
jns
mov
cltd
fisubrs
mov
mov
mov
dec
stc
xor
scas
add
mull
scas
mov
jg
in
sbb
cmc
cmc
sahf
push
negl
leave
insl
and
ds
xor
mov
inc
std
cmpsl
aas
mov
dec
sub
lods
rcrl
push
mov
in
pop
jne
repz
pop
or
cmp
pop
in
jl
aad
dec
test
fists
neg
insb
and
add
adc
mov
mov
cltd
mov
cmpsb
movsl
push
cmp
out
xor
fdiv
ljmp
popa
sbb
loopne
adc
scas
jb
fs
jl
sub
sub
push
ret
mov
lret
and
pop
or
mov
and
fnsave
mov
ret
cld
cmpsb
add
sub
popf
ds
test
cwtl
outsl
jae
mov
dec
mov
ds
bound
push
pop
cmpsl
std
jecxz
out
in
rcrb
scas
fs
inc
mov
add
stos
neg
mov
sub
pushf
push
fbld
loop
xor
movsb
outsb
lcall
into
test
aad
outsb
insl
mov
das
mov
bound
dec
pop
daa
dec
icebp
jo
dec
lods
sbb
push
in
ja
cmp
adc
test
fbstp
mov
shll
pop
cmp
jns
push
fwait
int3
fldt
fsubl
int3
in
xchg
test
sub
outsl
cmp
nop
enter
cmpsl
sub
or
jbe
adc
mov
cmpb
lahf
xor
xlat
fs
push
out
sub
mov
mov
mov
sub
cmp
or
cmc
mov
sub
addr16
sbb
addr16
sub
mov
fsts
movsb
and
or
ret
mov
push
dec
cmp
jl
scas
push
sbb
add
idivb
cmp
cmpsb
js
loope
jnp
inc
xor
ret
loope
mov
out
bound
jmp
and
mov
cmpsb
bound
mov
mov
cmp
repnz
xor
add
popf
outsl
loopne
in
or
mov
adc
fmuls
and
outsb
arpl
adc
pop
add
aaa
lcall
push
mov
dec
and
xor
cmpsl
mov
mov
stos
fld
add
out
mov
shl
push
push
lods
hlt
and
dec
push
pop
negb
dec
pop
pop
xchg
sub
into
fdivl
xlat
shl
fs
sbb
mov
add
insl
ret
jmp
rcrb
fwait
add
stos
adc
push
test
pop
pop
add
jae
sbb
mov
stc
ss
sbb
mov
jae
imul
and
fstl
sub
sbb
jae
sbb
mov
mov
jno
inc
or
xor
and
adc
push
pop
pop
mov
xor
call
dec
xchg
xlat
xchg
dec
inc
rcl
sub
sti
sub
mov
cmpsb
mov
fistl
sbb
jae
mov
fimuls
pop
in
repz
add
pop
lcall
das
cmp
cli
or
popf
push
push
adc
push
mov
scas
gs
repz
sbb
ja
in
movl
out
push
and
fsubrl
mov
mov
cmpsl
hlt
pop
inc
outsb
mov
js
mov
ss
cmp
adc
sti
xlat
int
add
rcll
mov
jl
outsl
pusha
inc
dec
mov
sbb
repz
mov
gs
mov
aaa
mov
aaa
sub
and
pop
pushf
icebp
addb
pop
test
out
adc
scas
push
sbb
xchg
cmp
mov
shlb
aam
stc
shrl
loop,pt
xchg
or
cmp
out
aam
out
cwtl
test
xchg
ljmp
xor
inc
scas
dec
pop
imul
lock
cmp
je
sahf
jno
std
sbb
xchg
adc
push
push
jl
in
call
sub
cs
lds
imul
mov
jb
mov
xchg
int
pop
dec
imul
and
sahf
pop
scas
inc
push
stos
lahf
pop
xchg
jecxz
sbb
testb
pop
nop
mov
xchg
pop
pushf
mov
xchg
popa
and
popf
testl
or
add
sahf
jae
push
pusha
mov
adc
ja
stc
fwait
mov
ljmp
scas
xchg
outsl
insb
xchg
js
sub
pop
xor
xlat
imul
mov
fwait
push
test
inc
stc
xor
jecxz
xrelease
push
pop
ss
push
adc
adc
inc
out
xchg
xor
sti
lcall
push
aam
loop
stc
repnz
pop
je
enter
pop
dec
test
jnp
imulb
clc
lret
fs
movsl
movsb
sub
inc
out
pop
sub
jmp
scas
mov
jne
adc
shlb
mov
pop
jae
lcall
in
pop
lret
std
test
cmpsl
mov
add
iret
cli
dec
mov
je
leave
pop
cld
test
lahf
mov
lahf
mov
aas
and
push
clc
loope
sbb
out
inc
mov
adc
les
lret
in
mov
or
test
xor
add
cmp
stos
mov
or
mov
pop
in
jle
shll
es
push
push
jb
fwait
leave
add
insl
dec
insb
mov
adc
clc
sbb
test
pop
cmp
jp
stos
jns
sti
aam
sub
cmp
mov
mov
pop
scas
pop
xchg
leave
add
test
inc
or
into
pop
jbe
sub
mov
mov
push
ret
dec
fs
fistps
iret
pop
cmpsl
cmp
pop
loopne
cs
mov
lods
arpl
or
movsb
loope
rcrb
pop
push
jne
repnz
jle
add
and
push
jge
cwtl
mov
push
jl
mulb
sahf
ss
pop
iret
ja
aad
cld
mov
push
adc
mov
jmp
adc
scas
cld
xor
push
sub
pop
movsb
add
sti
sbbl
rep
popa
push
xchg
repnz
pop
xchg
and
hlt
mov
shlb
fdivrs
push
adc
mov
call
gs
js
fiaddl
fnsave
cmpsl
out
movsb
lds
push
fimuls
mov
push
jge
loop
imul
ds
mov
xchg
std
pop
dec
push
jl
lds
pop
loop
adc
stc
sbb
cmpsb
out
inc
mov
loop
lahf
mov
test
scas
scas
iret
or
fwait
push
cs
and
cmc
scas
push
lcall
mov
in
in
push
jg
shrb
push
mov
test
out
xor
dec
or
inc
es
ljmp
push
fcmovnu
push
outsb
adc
imul
jmp
jno
mov
scas
inc
sbb
mov
jmp
int3
out
insb
jae
lret
dec
pop
clc
lods
mov
push
paddsw
jo
xchg
sub
fwait
ja
lods
dec
push
pop
jbe
xchg
push
sbb
dec
lcall
out
xor
jo
push
inc
daa
test
cmpsb
stc
fidivrl
push
pop
in
pop
cmp
aam
imul
test
fbstp
jo
subl
pop
jnp
pop
shr
lcall
out
mov
jge
rol
dec
and
xor
dec
test
outsl
xchg
mov
imul
adc
repz
cmp
iret
mov
push
rclb
and
mov
or
dec
lret
pop
fidivrs
xlat
out
jnp
imul
jmp
fldl
sbb
repz
add
or
jecxz
call
ss
jmp
xchg
sti
add
push
mov
cs
xchg
inc
push
push
aas
inc
je
scas
mov
mov
pop
and
mov
adc
ja,pn
pop
xor
xchg
xor
lret
out
or
aaa
loope
xor
hlt
jo
data16
sahf
dec
mov
mov
jge
les
outsl
pop
add
jb
mov
shlb
xor
inc
out
ja
call
xor
rclb
xor
cs
add
xorb
fucomip
or
in
and
inc
jg
aad
das
out
in
jbe
das
xorl
push
fcom
data16
aas
rep
pushf
in
cmpsl
ja
sub
addr16
clc
into
push
into
addb
sub
xor
mov
mov
insl
loopne
mov
or
movsl
xor
in
fsts
cmpsb
loopne
lods
js
pop
cs
movsl
or
iret
mov
xlat
ficoms
movsb
fistl
aad
call
mov
sbb
mov
inc
shlb
shrl
lods
lods
testb
add
ds
rcr
push
mov
js
repz
out
lea
jbe
sub
add
dec
mov
xchg
out
sbb
lods
inc
icebp
pop
ds
cs
outsb
push
fcmovnbe
add
push
pop
mov
dec
rcrl
cwtl
out
sbb
cmpsl
sbb
cmp
test
xchg
mov
iret
or
clc
push
fwait
jns
inc
cmp
xor
repnz
outsb
add
lods
test
xchg
xor
loopne
xchg
adc
xor
adc
sbb
xor
jns
pushf
shl
divl
xor
jno
fimull
stos
lds
mov
inc
inc
jnp
pop
jmp
mov
pop
sbb
lahf
fcoml
inc
fcompl
inc
push
sti
mov
les
int3
dec
aas
and
and
loop
inc
mov
pop
cmp
loopne
cmp
mov
jp
pop
loop
scas
mov
lds
mov
in
les
scas
sub
jne
les
jl
fmuls
mov
and
jno
push
divl
outsb
cmc
push
jne
test
inc
insb
out
fwait
sbb
in
loope
xchg
ret
inc
jl
rorb
jne
cmpl
pop
fadds
popa
mov
mov
out
xchg
call
es
jns
mov
sbb
jmp
mov
test
mov
test
inc
and
mov
mov
pushf
das
push
in
mov
mov
ds
fistl
fsubp
int
push
mov
dec
mov
push
loop
xorl
jns
mov
and
xlat
sbb
mov
adc
jecxz
xchg
dec
inc
push
xor
xchg
int3
aam
xchg
imul
xchg
shrl
push
ljmp
cmp
mov
and
mov
fs
mov
scas
decl
xchg
push
js
sub
push
test
andb
fildll
nop
icebp
jo
sti
jmp
dec
fs
ljmp
rorb
xor
or
xchg
mov
in
aad
cmpsb
add
aas
out
adc
mov
cmp
add
mov
repnz
clc
push
cmp
mov
pusha
mov
mov
pop
or
or
mov
add
loopne
and
inc
mov
psadbw
mov
stos
jno
xchg
fstl
xor
and
cltd
sub
or
mov
leave
mov
inc
xor
xor
adc
sbb
icebp
shl
mov
push
in
or
mov
pop
push
mov
mov
roll
mov
dec
out
xor
sbb
mov
sbb
and
mov
mov
dec
jp
out
rolb
mov
loop
mov
and
and
js
cli
outsl
cmp
pop
cld
adc
cmpsl
cmp
jns
rol
addr16
fmuls
fwait
stc
test
dec
add
gs
outsb
mov
fstpt
inc
cmp
lock
mov
hlt
jae
pop
add
inc
rorb
pop
lea
ret
dec
xor
push
sub
stc
arpl
cmc
mov
lcall
mov
dec
test
xchg
mov
test
mov
cwtl
arpl
lret
inc
repz
add
push
gs
imul
or
push
fisttps
int3
and
cmp
js
fs
push
fnstcw
mov
lcall
xor
xchg
dec
jns
jge
jmp
and
adc
and
das
mov
cwtl
xor
daa
xor
js
loopne
repnz
add
repnz
jge
dec
and
loope
mov
dec
jns
sahf
loope
and
push
mov
cli
popf
scas
sbb
mov
lahf
fisubl
adc
lahf
sbb
andl
mov
out
pop
adc
pop
divl
stos
clc
inc
xlat
xchg
into
clc
cmpsl
sahf
frstor
clc
out
frstor
jle
in
rcr
ss
push
mov
mov
icebp
adc
mov
adc
and
fwait
imul
pop
mov
jno
jbe
inc
adc
mov
push
stos
rclb
fwait
jl
lret
mov
and
pop
scas
je
iret
inc
jmp
out
std
inc
xor
jno
scas
mov
xchg
mov
xlat
les
xchg
dec
or
jmp
aas
dec
insl
fdiv
pop
fmuls
mov
mov
int3
stc
in
pop
dec
lret
inc
mov
mov
push
out
add
dec
cltd
adc
repz
mov
xor
leave
sarb
pop
lahf
and
mov
jl
push
clc
clc
lods
or
xor
cmp
icebp
fwait
mov
int3
push
daa
cmp
movsl
sub
mov
push
or
cmp
or
or
test
call
mov
daa
insb
das
xor
dec
imul
sub
cmp
pop
rcl
clc
push
pop
imul
jae
lods
push
test
push
insb
dec
xor
lods
leave
mov
jle
nop
js,pt
jnp
jmp
cmp
scas
idivb
or
push
mov
insb
or
sub
repz
sub
out
mov
fldt
xchg
pop
lidtl
mov
out
and
aas
je
dec
or
sbb
add
fnstenv
sti
inc
std
in
sbb
push
fadds
loope
xor
inc
xchg
xchg
dec
ds
ja
mov
adc
pop
jns
fcoms
xchg
jne
inc
push
inc
mov
popl
popf
jo
popa
js
sub
mov
sub
cmp
sarb
push
dec
outsb
adc
mov
push
cmp
push
in
sbb
xchg
pop
aas
pop
push
jbe
call
es
neg
push
push
movsl
enter
cli
mov
daa
pop
push
out
inc
push
or
dec
push
pop
jo
push
mov
pop
stos
lret
stc
mov
into
sti
mov
fs
aaa
std
cmp
or
jecxz
mov
xchg
mov
subl
fwait
push
or
adc
shrl
mov
push
mov
jbe
mov
or
mov
mov
lahf
jecxz
cld
int
rol
inc
js
xchg
jne
or
imul
ds
inc
xchg
icebp
mull
mov
cmp
pop
mov
sub
sahf
cmp
popf
pop
test
push
cmp
xchg
inc
addr16
sbb
cmc
xchg
sarl
arpl
in
jno
dec
add
pop
les
cmovp
jle
and
fs
jb
xchg
mov
mov
stos
into
shlb
xchg
add
cmp
sub
loop
jmp
mov
lods
ret
xchg
lret
mov
xor
xchg
push
adc
shrb
sbb
lods
sub
icebp
dec
cmp
mov
inc
xchg
xchg
in
stc
ret
test
xchg
mov
in
jnp
add
fs
test
cs
outsb
and
ljmp
jo
sub
mov
mov
sub
pop
mov
xlat
or
dec
aad
nopl
insb
fistpll
test
or
lds
je
sbb
inc
test
fmul
xor
movsb
push
add
or
fdiv
stos
iretw
popa
imul
repz
push
mov
and
mov
push
or
jmp
pop
movsb
cmpsb
push
jns
ficompl
incb
mov
dec
jno
insb
js
pop
ss
inc
dec
in
int3
xchg
bound
mov
lods
repz
pop
adc
popf
dec
cmp
and
fmuls
aas
les
cmp
or
dec
int3
inc
mov
sub
or
lods
jo
call
xchg
or
push
mov
mov
imul
add
jp
lea
add
shl
xchg
mov
mov
lret
jns
data16
jae
adc
fs
mov
mov
pop
pop
jns
enter
iret
es
in
sub
ret
mov
movsl
sub
in
add
push
adc
pop
add
lea
inc
arpl
inc
out
lahf
dec
fidivrl
xchg
insb
scas
ja
inc
pop
pop
iret
insb
dec
les
add
mov
sbb
jmp
fnstcw
inc
cltd
or
hlt
addb
and
xor
and
into
cmpl
sbb
push
lret
xchg
mov
lret
andl
mov
jo
cmpsb
insb
and
out
adc
sub
fwait
in
xchg
cmp
xchg
in
mov
sbb
mov
fwait
das
inc
test
andb
sahf
jo
inc
jl
call
push
xor
push
ds
dec
mov
dec
sub
xlat
pop
repz
stos
mov
js
out
jge
jb
sub
insb
mov
sbb
popa
repnz
push
das
and
xchg
ljmp
ljmp
mov
sub
testb
sahf
scas
jbe
add
xchg
push
push
mov
daa
sbb
adc
xchg
imul
jp
mov
cltd
push
pop
push
mov
xchg
jmp
test
cmp
inc
sbb
pop
ret
inc
inc
push
mov
dec
xchg
stos
clc
mov
hlt
xor
insl
jbe
int
addr16
xchg
femms
push
movsl
and
jnp
fwait
ds
or
lret
mov
ficompl
push
stc
add
adc
fstl
mov
negl
js
or
ret
sub
sti
pop
mov
mov
imul
loope
mov
dec
jl
dec
push
fs
ret
xor
push
xchg
scas
addr16
out
jns
paddb
sahf
es
sbb
jb
repz
sub
shlb
stos
outsb
push
pop
lret
test
push
lods
cwtl
pop
cmpsb
mov
cwtl
mov
jne
and
pop
pop
xchg
shll
sbb
xchg
les
jle
inc
inc
popf
cmp
pop
adc
cmp
add
pop
dec
mov
js
dec
or
push
js
inc
mov
sbb
jg
clc
mov
push
dec
fistl
mov
fs
mov
aas
xlat
imul
pop
arpl
sti
in
mov
push
push
out
lods
and
mov
into
and
jge
sub
cli
loop
cmc
lahf
movsl
f2xm1
mov
add
sub
inc
push
scas
cmpsl
cmp
std
pop
ljmp
xor
lock
lds
sbb
and
rolb
fcomps
xor
pop
inc
add
sbb
gs
lods
xchg
mov
xchg
das
enter
cmp
sbb
sbb
mov
cmp
push
xor
mov
lret
das
cmp
jo
xchg
lods
lea
mov
jnp
lret
sub
repz
sub
js
fs
popf
outsl
xor
imulb
cmp
mov
clc
inc
lea
scas
cs
lret
imul
stos
pop
jl
sub
outsb
xor
mov
mov
je
pop
push
or
mov
into
push
jge
in
testl
mov
jns
cmp
and
fimull
push
mov
push
cwtl
lea
loopne
shlb
mov
in
lcall
pop
sti
sti
pop
sub
mov
cmc
adcl
add
jle
add
cmpsb
pop
into
adc
sti
jg
pop
std
cmp
in
sarl
shl
idivl
int
pop
addl
and
outsb
sbb
in
int
fldcw
outsl
mov
mov
std
jmp
in
repnz
cmp
push
jb
out
push
xlat
jno
add
test
sub
dec
xor
mov
xchg
iret
stos
cmp
jo
pop
cltd
jae
ss
mov
xor
jge
lods
hlt
pop
mov
xchg
and
xor
dec
mov
lock
test
sbb
ds
mov
lods
jecxz
ret
dec
mov
sti
jne
mov
and
scas
cmp
sysret
jle
inc
repnz
mov
mov
mov
mov
insl
imul
jno
loope
in
add
or
or
push
pop
mov
ret
insl
ret
hlt
jmp
bts
mov
aas
xor
lea
mov
movsl
push
mov
and
xchg
jp
mov
lcall
pusha
imul
jle
jno
pushf
xor
in
mov
stos
pop
fwait
ret
and
aad
cmp
mov
shrl
mov
ja
fldl
mov
push
cmp
icebp
movsl
negl
notl
sub
cs
aas
lret
mov
xchg
leave
mov
or
bound
adcb
push
cmpsb
jne
adc
jae
lret
mov
and
repnz
pop
insl
jns
inc
cmp
imul
call
or
je
adc
sub
jns
mov
out
push
dec
mov
cli
in
xor
xor
popl
jge
cmpsl
and
push
fdivrp
push
xchg
jno
in
xor
lret
push
mov
mov
xchg
push
movsl
lret
pop
add
xor
sub
push
xlat
or
adc
push
inc
aam
ljmp
xchg
scas
cmc
cmc
push
jl
dec
aam
rolb
popa
lahf
ja
std
dec
out
lret
int
adc
fdivl
rclb
cmc
jbe
repz
mov
pop
or
dec
xchg
xchg
add
push
or
sarb
mov
sbb
ret
or
leave
cmp
clc
and
in
mov
dec
sbb
into
bswap
je
mov
mov
mov
lock
sbb
xchg
loop
jmp
push
stos
push
sbb
sbb
fwait
xor
xchg
mov
sub
into
rolb
add
xchg
daa
clc
inc
jae
cmp
out
dec
lock
stc
dec
popa
lock
xchg
js
adc
in
sub
xchg
lret
enter
pop
les
and
sarb
mov
mov
push
pop
or
adc
sub
adc
pop
jns
fwait
pop
adc
fistps
push
inc
adcl
ds
pusha
clc
sti
mov
aam
lret
inc
cmp
cld
dec
jle
loopne
mov
xchg
in
pop
lods
fwait
ljmp
loopne
add
scas
sbb
std
rcr
mov
mov
rcl
jno
stos
lock
sti
bound
movups
xor
mov
xor
repnz
dec
mov
sbb
repnz
lods
adc
mov
inc
dec
repnz
mov
jne
mov
mov
add
jne
aas
jbe
hlt
push
dec
mov
xchg
mov
dec
or
inc
in
pop
sub
sbb
movsb
fistpl
in
std
pop
clc
mov
mov
xor
call
mov
stos
jb
roll
xor
jle
cmp
push
insb
dec
not
cwtl
outsl
jge
and
icebp
add
loop
sarb
sbb
mov
or
xor
aaa
mov
add
sarb
sub
movsl
cld
out
daa
sub
xchg
dec
je
cmpb
lock
fldenv
fidivs
lods
call
push
hlt
inc
mov
mov
sbb
or
lods
lods
pop
imul
stc
std
push
xorl
dec
mov
add
jl
sbb
sbb
pop
xchg
mov
jecxz
mov
mov
arpl
xor
cmp
and
testl
xor
sub
sahf
xchg
push
inc
or
js
lods
push
mov
pop
out
push
adc
pop
or
add
jecxz
int3
data16
loopne
mov
fldt
xor
xchg
hlt
pop
cmpb
out
insl
and
xchg
inc
call
jne
sub
xchg
cmp
pop
pop
and
ds
sahf
mov
pop
jb
xchg
fmuls
fiadds
ret
pop
in
push
pop
xor
pop
lret
xorb
mov
sahf
or
mull
sbb
cmp
rol
xchg
imul
idivb
cmp
pop
cmp
lods
cwtl
push
leave
xor
xor
jg
mov
dec
cmp
in
mov
mov
mov
cli
sbb
cld
faddl
cwtl
pop
shl
push
or
fnstcw
pop
test
data16
mov
pushf
ss
mov
inc
or
pop
out
lods
rolb
push
mull
push
mov
scas
aam
in
test
into
test
setle
xor
or
jo
out
aam
mov
dec
mov
push
cmpsl
mov
mov
sbb
xchg
push
jns
je
shll
mov
mov
lods
les
dec
inc
mov
inc
or
push
addl
std
test
inc
lahf
xchg
pop
cld
cmp
test
fiaddl
idivb
stos
mov
cmp
sahf
nop
inc
icebp
mov
int3
aas
push
add
scas
sbb
fsubrl
movsb
outsb
stos
cmp
or
add
shrb
cli
ljmp
push
jb
sub
ret
mov
sahf
inc
test
fnstcw
mov
je
cs
pushf
jo
adc
ds
sahf
aaa
test
pop
rcll
fstp
out
jmp
mov
data16
jle
int3
imulb
push
jnp
notl
mov
hlt
push
sbbb
lods
mov
push
mov
sahf
aad
jl
cs
mov
xchg
cltd
cwtl
decl
loope
and
outsb
xor
sbb
inc
or
dec
bound
fsubs
mov
stc
pop
outsl
lret
les
adc
or
inc
jle
in
cmp
mov
into
or
dec
fcoml
pop
or
xchg
out
push
ret
repz
mov
pushf
cld
jo
inc
dec
mov
add
cli
out
jmp
enter
imulb
insl
minps
lcall
ficomps
mov
mov
shlb
cltd
cmc
push
sarl
stc
daa
push
jge
ret
mov
lret
add
sub
adc
jo
cmp
push
mov
jnp
jne
push
cmpsb
out
mov
xor
xor
dec
jecxz
adc
dec
ret
popf
jg
fs
jp
cmp
rorb
adc
dec
xchg
xor
adc
cmp
or
pusha
cltd
js
mov
inc
stc
sub
ret
addr16
push
xor
mov
mov
mov
sub
push
pop
insl
incl
mov
or
sub
mov
aam
xor
and
xchg
push
mov
lods
sub
or
fidivrl
push
shll
ss
test
fistpll
std
mov
fmull
iret
xchg
sti
dec
mov
loopne
mov
sbb
fsts
dec
lret
loop
ja
popf
cld
sbb
ret
mov
aas
jae
pop
mov
scas
add
jle
mov
xchg
shrb
xchg
ret
jae
inc
adc
pusha
mov
sti
dec
cmp
mov
fs
sub
cmp
rolb
cmp
add
and
mov
mov
pusha
and
pop
lahf
aas
and
int3
cmp
daa
dec
notb
das
in
mov
or
dec
or
repz
andl
push
dec
jb
daa
inc
repz
pushf
fistpl
std
ljmp
push
stos
inc
jo
repz
and
rorb
les
cmc
aam
xchg
sub
loop
push
ret
add
cld
daa
test
lcall
push
scas
outsl
aaa
xchg
fsubrl
jb
sbbb
lret
inc
dec
fstl
mov
lahf
cmp
ret
or
sub
mov
add
add
fstpt
push
cmp
in
or
nop
push
xor
stos
mov
loopne
rorl
push
ja
fldt
stos
dec
inc
sbb
push
mov
imul
sbb
les
insb
pop
mov
jp
mov
ret
test
in
xlat
outsb
hlt
test
das
movsb
out
lods
inc
cwtl
test
xchg
push
ret
xlat
push
ds
int3
or
std
outsl
cmp
test
inc
dec
nop
mov
sub
inc
lret
in
rorb
movsb
mov
mov
add
sar
push
mov
adc
cwtl
aas
push
mov
stos
xor
lods
adc
sub
cs
pop
nop
push
push
shrl
xchg
fistpll
scas
cmc
iret
or
fwait
cmp
shll
xor
in
pop
lods
inc
lret
rcrl
jecxz
push
aad
inc
rcll
ljmp
pop
jno
sub
leave
enter
pop
sub
rcrb
aaa
stc
loope
ja
lret
les
pop
js
outsl
jecxz
mov
adc
int3
js
cmp
mov
fisttpl
xor
addr16
inc
sbb
or
mov
jle
enter
adc
imul
jne
mov
adc
dec
fidivrl
or
aaa
xor
jbe
cwtl
mov
push
enter
mov
adc
push
mov
shl
shrb
dec
int
mov
push
out
adc
loopne
into
push
mov
rcl
dec
mov
or
in
popa
movsl
loopne
pop
leave
push
sbb
popa
pop
addr16
fstl
int
and
mov
test
js
lods
fstpt
in
scas
xor
int
pop
imul
add
int
rcll
imul
test
outsl
inc
loope
cmp
sbb
out
movsl
mov
inc
outsl
dec
fwait
or
inc
xor
roll
and
jecxz
loopne
movsb
push
inc
fs
xchg
fwait
in
or
push
dec
sahf
les
pop
adc
sub
js
dec
mov
push
mov
inc
ror
ss
pop
add
mov
iret
dec
mov
sub
ret
adc
push
or
popf
and
sarl
scas
cmp
addl
inc
add
pop
into
pop
loope
fmulp
mov
cli
lret
sbb
arpl
jns
jne
es
aam
dec
clc
cmpsb
add
sbb
popa
xlat
rorb
aas
outsl
xor
mov
aam
ret
xlat
out
arpl
push
pop
add
test
mov
int3
xchg
out
fs
test
xchg
dec
es
and
lock
inc
dec
jno
push
sub
push
sub
fmuls
movsl
std
fdivl
jle
jmp
and
stos
sti
pop
pop
insl
cmpsl
cmpl
outsb
andb
or
pop
sub
pop
dec
sub
and
xor
adc
outsl
jns
mov
push
in
test
negb
mov
test
ss
push
test
and
push
gs
out
push
ss
add
cmp
movl
push
sbb
inc
mov
orl
adc
jo
fs
lret
aas
aaa
sti
fcomp
insb
sbb
cmpsl
or
jge
ss
sahf
sbb
adc
fimull
xor
mov
jg
jno
xchg
out
push
lret
xchg
add
sub
pop
aas
rclb
scas
dec
inc
outsl
cmp
into
push
fsts
sub
pop
fwait
cmp
std
cmpsb
gs
or
repz
es
or
push
testl
mov
inc
mov
aas
shrl
shrb
xchg
mov
int
pop
ds
test
and
mov
imul
inc
xchg
sub
xor
adc
or
xchg
jo
sub
jmp
sbb
loope
shl
jb
repnz
lcall
inc
test
sub
inc
jg
mov
jno
outsl
stos
dec
repz
jmp
popa
subl
mov
add
gs
push
or
add
test
mov
add
icebp
pushf
scas
aam
push
mov
lock
jecxz
mov
push
loope
dec
cwtl
in
or
mov
push
pop
add
test
pop
js
cltd
cmp
icebp
repnz
push
bound
or
and
outsb
xchg
aaa
ficoms
test
adc
sub
jmp
mov
in
test
pop
aaa
inc
and
test
cmp
movsb
xor
clc
jle
loope
and
sbbb
xchg
in
jo
mov
and
push
fstl
mov
addl
xor
pop
aam
pusha
mov
clc
jne
xor
xchg
jl
arpl
and
push
fsts
inc
xchg
ja
xor
out
sbb
in
sbb
xchg
sbb
clc
ffree
pop
lods
mov
fdivrs
sub
jmp
xor
ja
push
and
inc
pop
fcoml
popf
jmp
jno
cltd
jge
mov
or
mov
lret
cwtl
and
xchg
xorb
push
les
daa
lcall
ss
in
mov
fistpl
je
hlt
and
daa
adc
push
mov
int3
mov
mov
fists
movb
inc
outsb
jbe
stc
pop
aad
sbb
sbb
cmp
sbb
ret
rorl
fidivs
xchg
cmp
sbb
cmpsl
push
push
or
cmpsb
imul
and
ret
inc
xchg
roll
adc
lahf
push
cmp
push
mov
cmp
int3
push
fsubp
xchg
jns
adc
dec
rolb
mov
inc
imul
pop
pop
push
es
jmp
loopne
adc
push
jg
pop
push
inc
dec
popf
jg
sub
adc
inc
mov
sbbl
mov
insl
call
mov
jo
imul
lods
jae
sub
xchg
scas
push
and
dec
je
jg
ss
cmp
pushf
pop
jae
inc
mov
daa
inc
ret
sub
in
jle
xor
or
stos
insb
stc
mulb
stos
aad
cld
notb
sbb
cmp
enter
fnsave
es
js
enter
cwtl
insl
stos
push
pusha
adc
cmp
xor
in
mov
inc
mov
addr16
lods
xor
sarb
adc
xor
jmp
cmc
lods
daa
push
into
rol
adc
es
rcl
push
jp
in
int3
cmc
sub
cmpb
shr
fnstcw
sti
push
fnstsw
popa
and
sti
sbb
ret
cltd
or
lods
xchg
adc
cmc
cmpsl
pop
mov
sub
mov
fildl
dec
lds
or
pop
shlb
and
fs
insb
jne
push
cmc
ret
dec
mov
cmpsl
dec
inc
sahf
test
das
fbstp
stos
pop
repnz
pushf
test
movsl
xlat
jbe
jmp
clc
push
push
jmp
stos
mov
js
xchg
inc
imul
int
cmp
ss
dec
cmpsb
test
out
fwait
insl
or
push
mov
pop
jnp
sbb
pop
adc
lret
rcrl
xor
push
imul
cmp
jl
lret
pushf
xorl
arpl
orl
add
add
loop
in
inc
lock
in
rcll
loop
scas
fs
mov
jo
in
into
repz
repz
dec
stos
pop
xor
jne
sbb
lock
out
mov
in
loopne
imul
fdivr
outsl
or
add
sub
jle
xor
or
les
test
std
cmp
out
fwait
das
inc
enter
dec
scas
outsl
mov
pushl
sbb
test
dec
xor
std
fnstenv
or
gs
or
cmp
aas
fwait
notl
fsts
sbb
sarl
adc
and
mov
in
stos
lock
add
and
lea
pop
or
push
mov
adc
cs
js
push
in
push
imul
rcrb
and
shll
es
dec
pop
mov
ret
js
cld
mov
pop
pop
pop
inc
fucom
stc
adc
add
ret
add
adc
pop
mov
lock
jg
dec
stc
arpl
add
filds
mov
nop
cmp
add
jno
repnz
xchg
fdivrp
fidivs
pop
pop
jnp
sbb
cmc
jb
or
mov
or
mov
sub
pop
add
movsl
mov
push
adc
test
ret
mov
nop
push
lods
or
pop
mov
mov
mov
jg
hlt
or
std
add
jle
jg
lods
pop
mov
pop
pcmpeqd
mov
test
or
adc
aam
jg
out
xchg
push
repz
cld
test
sub
js
jne
xchg
or
inc
test
mov
insb
xchg
fwait
push
and
xchg
movsb
scas
ss
lods
mov
stos
mov
loope
pushf
imul
test
sub
dec
sub
lret
xchg
push
aas
mov
mov
add
lcall
push
movsl
shr
cwtl
jae
mov
sub
lds
jmp
movsb
fists
je
inc
adc
popa
and
lods
adc
sub
test
roll
mov
push
rep
movd
popa
fcmove
xor
fsubs
sub
hlt
push
mov
sub
jns
fiaddl
inc
jo
mov
shll
and
mov
popf
cmp
mov
add
lret
rolb
and
xlat
jg
jp
dec
xor
leave
xor
ret
jo
fistl
add
imul
and
in
jp
cmp
int3
pop
xor
cmc
xor
aad
push
lods
shl
push
jmp
xlat
out
js
andb
jne
ljmp
loopne
adc
int
aam
push
pop
sub
mov
inc
out
jnp
pusha
mov
adc
in
mov
in
mov
jo
mov
addr16
inc
lock
adc
xchg
fldt
movl
sbb
and
iret
pop
add
sbb
jecxz
or
shlb
jo
imul
inc
stc
aad
mov
or
enter
adc
add
fs
inc
dec
repz
arpl
hlt
dec
loopne
call
je
add
xchg
sbb
jmp
mov
stos
or
jns
or
cmc
mov
ja
dec
mov
stos
ja
and
mov
rcll
fsts
mov
fimuls
add
add
jns
sbb
test
fwait
pop
mov
sbb
or
repz
hlt
cli
adc
jmp
ss
arpl
xor
daa
push
dec
or
lea
cmp
or
jbe
addr16
popf
sti
je
cmpsl
xorl
or
lds
dec
jne
insb
mov
sbb
icebp
mov
or
dec
jecxz
cmp
jb
in
mov
fs
and
xor
stos
imulb
mov
shl
stc
ret
adc
ja
fiaddl
add
inc
mov
xchg
lea
adc
add
aam
mov
lods
push
insl
fwait
pop
lods
rorl
push
je
push
cltd
pop
xchg
inc
mov
iret
aad
aam
sbb
push
lahf
pop
aam
fidivl
xor
ss
imul
add
mov
pop
push
hlt
int3
psubusb
stos
push
pop
mov
imul
sbb
out
in
repz
neg
pushf
lods
dec
jmp
cltd
sbbb
fsts
push
mov
dec
enter
and
popf
push
cs
js
jl
xchg
cmp
xor
sbb
mov
sub
add
ss
adc
push
jp
or
and
fwait
pop
ficomps
sub
xchg
mov
jno
sarl
push
inc
arpl
xchg
dec
or
bound
in
cli
shll
clc
fidivl
cld
jmp
ret
mov
mov
leave
adc
rorb
inc
jnp
int3
movsl
jae
lock
dec
push
jb
xchg
xor
mov
add
popf
adc
stos
icebp
inc
mov
shlb
xor
xlat
into
sti
cltd
push
in
jae
sub
dec
mov
or
pusha
jb
jecxz
test
pop
jl
aas
int
ja
fdivs
data16
mov
bound
mov
add
rcrl
and
outsb
and
lret
add
stos
add
pop
sub
movsl
xchg
xlat
jne
insl
aaa
jmp
or
gs
mov
movsb
ffree
inc
add
add
ljmp
adc
pop
divb
std
xchg
push
pusha
push
push
fwait
dec
or
mov
or
push
outsl
orl
xlat
mov
sbb
jecxz
jg
adc
paddb
inc
aad
popa
cmp
jb
pop
push
out
pop
jle
popf
jbe
loop
lret
mov
addb
jae
call
repz
addr16
leave
jb
aad
sub
pmulhw
gs
inc
xchg
neg
ret
cs
out
test
mov
xchg
dec
addr16
xchg
ficoml
cmp
adc
nop
fadds
repz
jne
push
mov
sub
cmpsl
cmpsb
xchg
mov
shll
xchg
shlb
xor
sahf
and
lods
mov
add
push
scas
clc
mov
cmp
xchg
popa
inc
movsb
sub
scas
fstl
pop
sbb
pop
cmp
dec
sbb
into
rcrb
jg
push
outsb
pop
jnp
jae
pop
add
cmpsl
shrb
insb
lea
bound
lahf
shl
sub
dec
pop
std
jns
popa
shlb
in
push
adc
into
inc
inc
push
imul
xor
xor
mov
jmp
neg
clc
loopne
push
sub
xor
dec
dec
movsb
add
les
popa
inc
push
jmp
push
shl
adc
and
push
aas
mov
dec
xorl
cmp
cmp
ret
push
mov
test
out
mov
popf
pusha
in
rorb
int
cmp
movsl
and
cmp
pop
mov
shll
xor
cli
jno
xor
es
jns
loope
test
adc
dec
sbbb
adc
aam
data16
xor
lea
scas
xchg
or
fnstcw
push
xor
dec
loopne
into
int3
sbb
sbb
push
xchg
pusha
das
das
int
mov
mov
and
jb
popf
xchg
push
shll
adc
inc
cmpsl
mov
pop
in
jg
mov
arpl
adc
adc
fmulp
or
pop
icebp
test
out
mov
shlb
repnz
in
push
xchg
xor
jmp
rcrb
sahf
add
pushf
xchg
out
call
jae
xor
sbb
jle
sub
mov
xor
pop
iret
fsubs
addr16
sbb
js
gs
mov
pop
jle
lods
sahf
lods
inc
xchg
push
mov
add
mov
mov
scas
loop
es
dec
test
inc
pusha
jp
push
out
roll
mov
push
repz
pop
sbb
pop
outsb
into
adc
xlat
push
jmp
pushf
enter
std
outsl
push
xchg
ss
int
loop
or
add
movsl
nop
push
mov
inc
xchg
jno
inc
ja
or
add
js
pusha
mov
mov
pop
cmp
mov
add
hlt
mov
lock
sbb
lret
mov
and
mov
outsb
dec
ret
mov
jmp
cmpl
inc
movsl
pop
imul
dec
aad
out
loop
and
orb
adc
sub
cmp
mov
lahf
cmc
sbb
lret
pop
sti
imul
mov
and
xor
dec
aad
adcl
std
stos
and
