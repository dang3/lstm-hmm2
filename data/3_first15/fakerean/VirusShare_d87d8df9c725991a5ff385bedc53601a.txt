insl
push
add
insl
push
add
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
loope
inc
add
add
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
enter
push
mov
push
call
test
mov
mov
mov
mov
mov
jne
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
repz
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
xlat
inc
add
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
mov
inc
and
je
mov
mov
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
add
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
add
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
inc
add
fimuls
add
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
add
js
mov
add
add
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
add
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
add
lea
push
push
mov
mov
movl
movl
mov
movb
int3
inc
add
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
pop
ret
push
test
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
add
xor
adc
ret
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
repnz
add
push
call
add
test
jne
push
call
add
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
call
lea
call
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
test
movl
jne
add
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
mov
lea
push
call
lea
call
fldl
call
fldl
mov
call
fldl
mov
call
fldl
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
ret
andl
mov
dec
mov
movl
mov
mov
andw
ret
push
mov
sub
push
push
mov
push
xor
mov
push
lea
lea
mov
mov
mov
mov
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
lea
push
pushl
mov
mov
push
call
cmp
jne
lea
call
push
call
cmp
pop
je
pushl
mov
mov
mov
mov
call
mov
xor
cmp
mov
je
mov
push
call
cmp
je
push
lea
lea
mov
mov
mov
mov
call
cmp
mov
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
jne
mov
pushl
mov
push
call
mov
mov
mov
lea
mov
push
lea
lea
mov
call
test
jne
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
mov
lea
call
pop
mov
pop
pop
leave
ret
test
je
mov
push
call
mov
push
pushl
call
test
jne
ret
mov
push
call
xor
inc
jmp
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
push
andl
push
push
mov
push
call
test
je
andl
push
lea
call
mov
mov
lea
push
pushl
push
call
mov
test
js
mov
test
je
mov
push
push
call
mov
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
xor
mov
mov
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
push
push
push
call
mov
lea
push
mov
call
mov
add
cmp
jbe
xor
mov
cmp
je
add
add
cmp
jb
jmp
lea
lea
cmp
je
mov
mov
xor
cmp
setne
lea
push
mov
call
mov
cmp
jne
mov
add
mov
je
cmp
mov
add
and
int
dec
and
cmp
jne
mov
mov
call
cmp
je
mov
mov
cmp
lea
je
mov
cmp
je
add
mov
call
mov
test
lea
je
testl
jne
cmpb
jne
mov
mov
mov
push
add
call
mov
xor
test
js
mov
mov
mov
xor
mov
call
lea
call
mov
pop
pop
pop
pop
add
ret
pushl
call
pop
lea
call
lea
call
lea
call
cmpl
je
cmpl
je
ret
decl
cmpl
jne
push
movl
call
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
mov
test
je
add
mov
push
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
push
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
testl
je
cmp
je
cmp
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
cmp
mov
mov
je
cmp
je
add
mov
cmp
lea
mov
jne
cmp
je
jmp
lea
push
lea
call
test
je
jmp
push
mov
mov
mov
push
xor
inc
cmp
movl
mov
mov
mov
movw
jae
andl
mov
pop
pop
ret
mov
mov
push
lea
push
push
push
push
call
add
test
je
xor
mov
jmp
push
mov
mov
push
mov
mov
shr
and
push
push
call
test
js
pushl
mov
push
call
test
js
pushl
mov
push
call
test
js
pushl
call
test
pop
js
lea
push
call
test
js
lea
push
call
add
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
enter
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
add
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
and
inc
add
add
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
mov
pop
pop
pop
pop
xor
call
add
add
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
test
inc
add
or
xorb
mov
lea
push
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
movl
movl
mov
je
movzwl
push
push
push
lea
call
pop
pop
push
pushl
mov
call
testb
mov
jne
testb
jne
test
jne
lea
mov
xor
cmpb
jne
cmp
mov
jne
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
cmpb
push
je
mov
push
push
call
movzwl
push
push
mov
push
push
lea
movl
movl
mov
movl
mov
mov
call
mov
lea
mov
lea
add
mov
lea
lea
mov
mov
push
lea
xor
mov
push
lea
push
mov
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
cmp
je
mov
mov
cmp
jbe
xor
mov
jmp
jmp
lea
mov
add
mov
mov
test
lea
mov
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
movl
movl
mov
call
push
mov
mov
mov
movl
movl
mov
call
lea
mov
mov
xor
lea
mov
add
mov
lea
mov
lea
mov
mov
lea
mov
mov
push
lea
mov
push
lea
push
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
sub
jne
pop
pop
pop
pop
add
ret
mov
push
push
jmp
movsbl
and
ret
mov
test
jne
test
je
mov
ret
xor
inc
ret
xor
ret
mov
call
cmp
jae
mov
call
ret
mov
test
jne
mov
ret
and
ret
add
push
xor
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jne
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
lea
mov
call
fildl
mov
sub
fstps
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
flds
mov
fld
fdivrp
fxch
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
fidivrl
mov
sub
mov
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
mov
fdivs
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
mov
imul
mov
imul
pop
mov
mov
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jg
xor
xor
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
inc
roll
fs
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xchg
mov
add
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
pusha
push
call
mov
outsl
add
test
in
xchg
push
les
mov
call
add
jbe
fs
add
jge
mov
in
cmpb
push
mov
xchg
pop
push
xchg
add
xchg
add
mov
call
in
in
sbb
addl
push
push
call
pop
xlat
mov
add
cli
cltd
add
pop
test
add
in
add
int
fcmovnb
add
in
add
mov
cwtl
add
js
add
je
add
xorb
int3
insb
add
fldl
mov
outsl
pop
add
lods
flds
push
rolb
inc
in
push
push
lea
push
push
lea
push
call
imul
lock
cwtl
mov
arpl
pop
leave
add
add
lods
add
pop
icebp
add
call
mov
add
lcall
push
push
lea
push
push
push
push
push
push
call
aad
add
test
add
testb
std
movb
andb
push
add
mov
add
lds
push
cli
loop
int3
int
add
fstps
lods
push
loop
scas
test
pop
mov
ja
add
jl
icebp
imul
in
loopne
push
push
push
push
lea
push
call
add
mov
addb
ljmp
jnp
jnp
xchg
sar
cld
testl
mov
add
add
push
push
lea
push
push
push
push
push
call
add
mov
fwait
add
fldl
iret
add
add
add
loope
shrl
loop
jno
iret
xchg
lret
adcl
add
add
stos
add
mov
add
add
sahf
popf
lret
in
in
call
push
push
push
push
lea
push
push
push
push
push
call
jle
cmp
leave
hlt
add
add
out
incb
mov
add
mov
add
out
add
xchg
jge
sub
pop
push
call
push
push
push
push
push
push
push
push
lea
push
call
push
cltd
mov
popf
push
mov
add
bound
push
out
add
je
mov
add
add
xlat
add
cltd
mov
sub
pop
jmp
push
push
push
lea
push
lea
push
push
call
xlat
out
add
add
clc
rcrb
cwtl
jae
hlt
cmpsb
and
stc
jp
add
add
mov
jle
std
loopne
jbe
add
sub
pop
ret
mov
push
lea
push
lea
push
call
mov
add
lea
bound
lods
pop
add
pop
fsubrs
add
add
in
test
mov
xchg
add
jbe
add
test
add
add
xchg
add
in
hlt
lcall
pop
hlt
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
jge
add
add
push
xchg
call
repnz
fidivrl
repnz
test
mov
add
in
icebp
push
add
add
loopne
pop
rcl
aam
add
aad
stos
add
ret
add
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
mov
lock
lret
pop
add
mov
insb
mov
addr16
add
add
loope
add
push
fwait
aad
mov
rcll
xchg
add
ret
movb
push
push
push
call
lret
mov
incb
add
add
push
add
jecxz
out
add
jge
clc
jp
bound
cmpsb
clc
ret
add
add
popf
add
in
add
faddp
mov
lock
ja
fidivrs
add
fwait
std
mov
mov
add
push
movsb
mov
mov
push
push
push
push
push
lea
push
push
push
call
jns
jnp
jnp
add
add
addl
aam
addb
mov
fisubrl
add
into
hlt
filds
add
push
add
xchg
mov
lods
add
bound
add
lcall
sbb
push
lea
push
push
push
lea
push
push
lea
push
call
addl
mov
push
sbbb
pop
add
xchg
xchg
add
add
popf
out
repnz
les
add
push
push
rol
push
and
add
add
add
sub
sub
sub
shr
pop
lea
sub
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
test
pop
repnz
in
cmpsl
add
add
mov
pop
add
add
jb
nop
add
fistpl
arpl
add
scas
in
les
fcompl
jne
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
push
scas
cld
add
add
add
addl
or
std
rcll
mov
add
fwait
xchg
addb
mov
add
add
add
lret
add
push
addb
xchg
rcl
sub
pop
call
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
add
add
xchg
add
lret
jno
mov
add
pop
leave
add
push
lret
test
stos
jo
movb
pop
mov
fucomip
add
cmpsb
mov
pop
add
lcall
inc
lock
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
add
add
add
int3
add
mov
icebp
add
testb
popf
mov
add
push
cltd
lods
xchg
leave
add
add
int3
add
add
pop
add
fdivr
lcall
inc
call
push
lea
push
push
push
push
push
push
call
add
add
hlt
add
add
push
fildll
add
mov
movl
add
add
int3
add
add
imul
in
lcall
inc
call
lea
push
call
xorb
add
mov
xchg
add
cli
sahf
shr
xlat
arpl
mov
mov
add
mov
mov
shll
pop
pop
add
pop
add
out
mov
add
nop
sahf
add
mov
push
add
lcall
pushl
push
push
push
push
push
push
push
push
push
push
call
push
add
jae
xchg
stos
add
adcb
pop
lods
cmpsl
int3
add
addl
int3
pop
add
add
add
clc
add
add
add
jnp
jl
pop
enter
orl
add
add
add
mov
out
add
les
jle
fiadds
jl
in
fcomps
jne
push
push
lea
push
push
push
lea
push
push
call
lahf
not
push
testl
aad
push
add
mov
rcl
add
roll
pop
movsb
add
mov
add
xchg
push
movsb
push
add
add
repnz
arpl
fisubl
add
jb
stos
add
add
add
push
shlb
add
add
in
in
lcall
pop
daa
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
test
mov
jecxz
add
add
arpl
pop
add
add
push
add
add
scas
mov
fcompl
jne
push
push
push
push
lea
push
push
lea
push
push
call
mov
mov
add
icebp
mov
mov
cli
movsb
roll
js
leave
mov
xchg
call
int
push
roll
add
jns
clc
fldl2t
add
lret
fucomip
add
cld
mov
mov
int
add
push
fwait
sub
pop
pushl
call
push
push
inc
inc
dec
push
or
inc
add
lea
sub
pop
shl
shl
not
xor
pop
push
push
push
push
push
call
loope
add
imul
add
loope
add
cmpsl
movsb
push
pop
add
push
lods
mov
cli
xchg
add
add
incb
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
fld
mov
add
add
mov
add
testl
add
hlt
jo
mov
add
add
faddl
loop
add
jmp
add
mov
call
push
push
push
push
lea
push
call
add
neg
xchg
mov
jae
add
mov
mov
mov
les
push
add
mov
jae
jb
add
add
rcrl
ljmp
add
add
repnz
add
pop
add
sahf
aad
mov
lahf
jns
lahf
pop
loopne
cwtl
sub
pop
push
push
push
rol
inc
sub
push
or
not
add
sub
add
sub
sub
add
sub
pop
shl
pop
push
push
lea
push
push
push
push
push
call
leave
int3
lock
negl
lds
add
test
xchg
add
xchg
push
test
cmpl
xlat
int
add
add
lcall
push
push
push
lea
push
push
push
push
push
push
push
call
mov
stos
sahf
outsl
icebp
push
add
jns
movsl
add
add
loope
add
add
add
add
push
lods
mov
add
rorb
aaa
add
add
cmpsb
cltd
add
add
add
add
test
jle
in
fiadds
add
add
in
fucomi
cld
add
mov
add
add
lock
enter
loop
add
push
push
lea
push
push
call
add
jge
testb
add
lds
scas
aad
add
scas
xchg
rolb
mov
hlt
lea
fwait
testl
add
test
test
mov
decb
mov
clc
jb
add
mov
bound
fs
scas
ficoms
in
hlt
lcall
pop
hlt
add
push
push
lea
push
push
push
push
push
call
add
jae
jb
add
add
lods
movsb
cli
add
add
mov
pop
xchg
shrb
add
add
jl
add
stc
icebp
flds
add
mov
add
test
mov
pop
add
add
repnz
add
xchg
mov
add
in
in
add
add
push
push
push
push
push
push
call
add
push
add
ficompl
jo
out
nop
nop
add
add
mov
rcl
jbe
add
lret
add
push
add
in
pushf
lahf
add
popa
add
push
movsb
pusha
fiadds
add
jl
faddl
add
add
add
xchg
mov
sub
pop
mov
xor
push
push
push
lea
push
call
scas
pop
mov
scas
add
xchg
mov
add
push
add
mov
mov
add
bound
mov
mov
movsl
add
add
sub
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
call
fcmove
fstpt
mov
add
jns
lock
add
push
push
add
add
ret
add
sub
pop
push
mov
push
push
push
call
cmc
push
std
xchg
pushf
jb
lcall
scas
scas
in
ljmp
add
flds
xchg
add
xorb
bound
adcl
mov
iret
add
sub
pop
xor
push
push
push
push
push
lea
push
push
push
push
push
call
mov
jle
add
add
jo
add
rol
je
mov
jmp
stos
add
add
faddp
add
add
jmp
fwait
hlt
shll
je
ret
lcall
in
mov
lcall
les
add
push
push
push
call
out
js
in
add
cltd
ljmp
mov
add
jns
fcmovb
fnstsw
mov
in
xchg
int3
xchg
lcall
add
jmp
ret
push
add
add
pop
add
fcmovnb
add
add
add
push
xchg
mov
cld
add
add
in
hlt
lcall
lock
push
push
push
push
push
push
lea
push
call
add
add
xlat
icebp
push
xchg
add
add
add
add
jge
adcb
push
in
lds
mov
add
jb
mov
mov
bound
mov
out
xchg
ret
add
les
pop
out
arpl
push
nop
add
pop
push
push
push
push
push
lea
push
push
push
push
push
call
neg
push
add
std
mov
rcr
std
std
add
pushf
add
sbbl
add
clc
mov
jo
add
add
xchg
repnz
sub
insb
icebp
mov
add
add
out
scas
popf
std
jecxz
stos
add
add
lcall
dec
add
icebp
cmp
pop
xchg
push
push
push
push
call
add
add
add
icebp
scas
jns
mov
add
add
test
add
loopne
shl
pop
add
fstpl
je
sub
pop
push
push
push
push
lea
push
push
lea
push
push
call
aam
loop
pop
push
add
cwtl
add
mov
add
test
add
loop
js
jp
pop
add
xchg
inc
or
or
aaa
push
push
call
loop
lods
xchg
add
js
icebp
pushf
add
nop
in
insb
ret
add
xchg
jecxz
add
add
mov
add
add
mov
fldl
add
add
add
cmc
add
cmc
add
add
test
in
pop
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
fadds
lock
lret
fists
arpl
add
add
push
movsl
mov
ret
xchg
add
mov
jle
std
int
jbe
out
push
out
jne
in
jp
add
mov
rol
xchg
jbe
add
roll
mov
mov
lcall
les
add
push
push
push
push
push
call
add
jp
movsb
xchg
pop
gs
addr16
rcl
add
push
mov
add
icebp
add
fsubs
add
stc
movsb
add
push
add
mov
add
roll
add
in
in
pop
sub
pop
push
push
push
lea
push
push
push
call
mov
stos
lahf
add
testb
fcmovbe
shll
pop
loop
movsl
fiaddl
add
add
add
fildl
add
arpl
out
out
movb
sarl
add
sarb
add
jbe
add
add
add
pop
add
rep
push
push
push
push
push
call
loope
add
add
cmc
add
add
out
add
add
jbe
push
mov
add
add
jmp
pop
lods
add
fiaddl
mov
mov
nop
add
loope
sub
pop
pop
mov
push
push
push
push
push
push
call
jb
icebp
add
xchg
add
jbe
cltd
out
cmpb
mov
jbe
cmpsb
fistl
pop
popf
fwait
add
enter
mov
jl
outsl
add
add
push
add
pop
lcall
in
push
push
push
lea
push
push
call
add
mov
add
pop
mov
test
jp
leave
cmpsl
mov
cwtl
cli
add
add
arpl
scas
in
pop
add
bound
jmp
gs
andb
fwait
lcall
lret
add
ficoms
add
fistpl
xchg
add
scas
lcall
add
sub
pop
add
add
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
loope
add
popf
add
cld
mov
add
int3
pop
repnz
popa
test
push
fldl
bound
icebp
jo
jmp
test
sbb
sub
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
cmc
add
mov
add
mov
add
add
mov
add
mov
add
movl
nop
mov
add
cmpsb
mov
add
add
mov
jo
sarl
sahf
add
add
movsb
in
add
add
xlat
add
mov
pop
sub
pop
mov
push
push
push
call
lahf
xchg
ja
jl
movsb
int
std
pop
push
xchg
sarl
repnz
test
cmpsl
mov
pop
not
fstpl
jae
pop
add
leave
add
add
add
push
pop
jae
jb
add
add
icebp
cmpsl
bound
add
faddp
clc
sub
pop
xor
push
push
push
push
push
push
call
mov
add
jge
fwait
add
add
jae
in
add
add
scas
add
lret
pop
fwait
bound
in
call
add
push
push
push
push
lea
push
call
outsl
nop
add
add
add
add
in
into
scas
xchg
add
add
add
loope
add
fidivl
add
pop
mov
add
jb
xchg
lods
mov
loope
mov
stos
mov
add
push
add
add
mov
add
push
insb
add
add
lcall
dec
sub
or
push
push
push
lea
push
call
shrl
add
add
add
popa
fisttpl
mov
jb
add
xlat
test
js
add
ljmp
add
std
add
aam
flds
mov
cmpsb
add
sub
pop
xor
push
push
lea
push
push
call
ja
add
outsl
add
jmp
mov
lds
ljmp
push
jp
loope
rcrb
jge
add
add
into
push
add
stos
lret
add
addb
add
loopne
into
add
cmpsl
add
out
mov
add
lcall
les
push
push
push
push
push
push
call
pusha
add
add
mov
jl
les
add
lods
add
roll
add
ret
jl
add
call
mov
lcall
ret
push
push
push
push
push
lea
push
push
lea
push
call
mov
js
pop
addl
test
add
push
cmpl
add
call
add
add
add
loope
in
add
add
add
jns
sub
pop
mov
push
push
sub
push
or
inc
add
dec
shl
sub
shl
inc
pop
lea
xor
add
pop
push
push
push
push
push
lea
push
call
jge
in
testb
pushf
add
icebp
add
add
add
xchg
mov
add
add
fs
addl
add
add
lret
add
mov
test
outsl
fsub
jnp
add
add
push
in
add
cmc
add
sahf
push
into
add
pop
add
call
call
push
lea
push
lea
push
push
push
call
lds
cltd
add
mov
pop
jae
fs
stos
add
nop
mov
add
popf
pop
push
add
lcall
add
dec
jbe
add
push
push
pop
add
inc
sub
lea
sub
dec
not
pop
add
xor
pop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
pop
add
imul
cltd
add
mov
add
call
test
add
xchg
test
flds
mov
pop
push
push
push
lea
push
push
push
push
call
fiaddl
add
add
aad
add
add
loop
add
jnp
loopne
ljmp
in
push
js
ljmp
test
std
add
bnd
add
add
add
loop
stos
jmp
xchg
add
push
push
push
push
lea
push
call
testb
add
pop
add
cmpsl
add
leave
nop
lret
addb
data16
jge
add
cmpsl
add
add
lock
mov
add
mov
add
je
leave
add
icebp
out
int3
xchg
push
jne
jge
ja
pop
mov
add
jmp
sub
pop
call
push
push
push
push
lea
push
call
addr16
push
mov
int
mov
int
aad
ljmp
add
mov
sti
xchg
mov
jmp
add
aad
data16
int
add
movsl
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
pop
add
mov
stos
mov
popf
cmpsl
pop
popf
add
add
mov
add
cwtl
in
ja
add
pop
add
jno
add
add
into
rolb
add
sub
pop
push
push
push
call
mov
add
pop
stos
in
add
int3
add
ret
rolb
add
add
add
add
sti
add
movsl
jns
mov
add
add
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
add
add
add
testb
jl
add
add
add
fimuls
add
mov
xchg
add
add
cmpb
leave
outsl
mov
push
jge
add
add
imul
lcall
fcompl
pop
hlt
add
push
lea
push
push
call
jp
lock
xchg
cltd
in
std
frstor
add
add
mov
jmp
add
add
sti
add
lods
pop
addr16
pusha
in
xorb
push
stc
push
add
add
jle
add
shl
sub
pop
add
add
push
push
push
lea
push
lea
push
push
push
call
push
add
loopne
in
add
imul
pop
subb
add
add
icebp
lock
cld
test
out
mov
in
in
lcall
jae
xor
push
push
lea
push
push
call
add
ret
add
add
in
add
in
repnz
mov
lock
pop
add
cmpsb
jmp
add
fimull
add
jl
add
jmp
add
cmpsb
add
mov
push
add
in
lock
lcall
jne
push
ror
ror
pop
push
push
shl
sub
sub
ror
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
lea
mov
shl
data16
push
lods
add
data16
into
add
mov
add
push
push
push
push
push
push
lea
push
push
push
push
call
rolb
jl
test
add
push
fisubrl
add
jne
popf
jecxz
cltd
rcr
add
jno
add
xchg
int
jge
imul
mov
push
out
add
add
fdivrl
add
add
testb
icebp
leave
filds
repnz
aam
add
add
xchg
lahf
add
aam
loopne
in
fcomps
les
add
push
xor
pop
add
pop
push
push
push
push
lea
push
push
call
je
icebp
add
imul
mov
push
roll
pop
addr16
add
pusha
js
jo
add
add
add
lret
add
add
pusha
faddl
xchg
mov
data16
sahf
pop
xchg
data16
push
pop
iret
add
sub
pop
mov
push
push
lea
push
lea
push
push
call
test
add
aad
add
rolb
add
nop
mov
add
add
popf
shll
lahf
add
add
out
pop
xchg
ja
add
add
mov
add
add
add
cmpsl
add
sub
pop
xor
push
push
push
lea
push
lea
push
call
mov
mov
mov
add
popa
mov
lds
test
add
add
popf
add
lods
add
cld
lock
pop
add
jno
add
add
push
les
xchg
pop
add
push
cld
add
testl
add
mov
les
lea
push
call
xchg
push
push
popl
clc
mov
add
mov
add
add
movsl
movsb
add
imul
mov
xchg
add
xchg
roll
push
push
push
push
push
call
add
add
pusha
push
in
jl
shr
sti
stos
add
pop
jp
add
stos
add
lcall
in
test
add
add
pop
jae
add
add
ja
add
jb
add
in
in
pop
mov
push
push
push
push
lea
push
push
lea
push
push
call
add
add
fwait
mov
ljmp
ret
add
jmp
pop
popf
scas
test
int
mov
mov
out
out
add
loope
xchg
test
lds
push
jo
jp
add
push
stc
fnstenv
add
mov
lret
add
add
out
les
add
or
push
lea
push
lea
push
push
lea
push
push
push
call
push
add
hlt
mov
in
add
mov
loop
add
mov
mov
imul
add
lret
enter
faddl
jmp
xchg
add
jnp
add
imul
in
lcall
les
add
push
shr
dec
pop
or
je
push
rol
pop
mov
xor
push
shr
lea
pop
mov
xor
push
add
pop
add
push
xor
pop
add
push
inc
lea
pop
push
push
lea
sub
shl
pop
mov
push
push
push
push
call
push
pop
lods
fisubrl
push
int
andl
add
mov
jge
add
les
int3
lods
add
mov
xlat
xchg
add
push
lods
out
leave
push
out
addl
popa
cld
mov
add
add
lcall
add
push
lea
push
push
lea
push
push
push
push
call
add
add
stos
insb
add
stc
add
add
jbe
mov
add
add
add
add
mov
push
hlt
scas
test
jmp
add
add
lahf
mov
add
ret
jb
sub
pop
add
push
xor
pop
add
pop
push
shr
rol
sub
pop
rep
push
push
lea
push
push
lea
push
push
call
bound
call
iret
pusha
cld
mov
push
push
add
add
mov
outsl
stos
add
idivl
faddl
add
hlt
call
add
add
add
pop
iret
iret
sahf
jmp
xlat
add
sahf
lods
bound
outsl
pushf
xchg
sub
pop
mov
push
push
lea
push
push
call
add
rorb
fchs
fcompl
add
add
add
in
test
add
add
imul
fists
into
cwtl
popf
push
add
pop
xchg
add
add
add
add
add
call
add
mov
addr16
jmp
popa
sub
pop
xor
push
push
push
push
push
lea
push
push
push
push
lea
push
call
roll
aad
add
add
add
testl
sahf
jno
add
add
std
fwait
add
pop
push
add
mov
mov
push
add
testl
int3
rolb
cwtl
testl
jle
xlat
mov
mov
add
mov
lock
sub
pop
add
push
not
pop
or
je
mov
push
sub
inc
inc
pop
add
push
lea
shl
not
add
pop
add
push
push
push
push
push
push
push
call
mov
xchg
add
add
lret
movsl
add
ljmp
in
lcall
cmc
int3
push
lods
add
push
pop
rep
pop
push
push
shl
push
sub
add
rol
sub
xor
not
shr
shr
pop
dec
pop
push
shl
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
add
movsb
add
pop
xchg
fadds
add
jmp
mov
mov
rolb
lea
bound
add
lds
fs
pop
mov
push
not
pop
mov
mov
push
push
push
push
push
call
data16
add
stos
jmp
jb
hlt
add
rolb
mov
jns
mov
arpl
add
leave
stos
rolb
add
add
out
testl
mov
add
rolb
push
addr16
in
add
mov
add
sub
pop
jmp
push
inc
rol
pop
push
push
add
add
dec
pop
mov
push
lea
push
push
push
push
push
push
call
add
add
div
test
movsl
add
popl
add
mov
add
add
rcll
add
loope
add
call
ret
mov
test
roll
xchg
add
pop
cli
pop
add
add
jne
add
cld
push
not
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
cwtl
add
fadds
into
mov
addb
add
mov
into
fadds
loopne
rcrb
jmp
add
mov
out
add
xchg
add
addl
fs
scas
pop
ret
repnz
push
iret
mov
flds
not
pusha
add
push
xchg
in
add
movb
sahf
sub
pop
push
push
add
lea
pop
push
push
push
sub
shl
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
mov
arpl
add
push
clc
bound
mov
add
add
xlat
mov
fisubrl
test
fcmovnu
add
imul
in
rolb
in
roll
mov
in
fcomps
push
push
call
data16
add
pop
lods
xchg
add
jmp
icebp
mov
mov
push
mul
add
rcr
add
add
add
add
stc
add
rolb
xchg
stc
imul
add
add
add
add
add
scas
sub
pop
pop
pop
push
rol
pop
pop
push
lea
push
push
lea
push
lea
push
call
lods
add
shl
add
test
idivb
add
pop
add
mov
add
add
add
jbe
filds
add
add
lock
les
add
add
roll
add
add
add
lock
sub
pop
leave
ret
push
add
lea
pop
push
push
push
lea
push
call
lret
mov
add
add
cli
imul
fiaddl
add
add
subl
xchg
testl
scas
pop
mov
add
in
hlt
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
xlat
into
fistl
add
mov
add
scas
add
mov
pop
add
insb
mov
incb
add
lcall
clc
push
push
inc
pop
push
push
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
jp
add
stc
mov
xchg
add
jnp
add
std
add
add
int
mov
add
push
jmp
add
add
add
add
mov
add
cmc
cltd
mov
add
add
stos
cwtl
add
xlat
rcll
sub
pop
movl
push
push
push
push
call
mov
test
push
mov
std
add
add
js
add
sbb
add
mov
mov
nop
test
lcall
add
add
mov
out
add
add
lds
pop
movsb
cld
lods
lret
in
lock
addl
push
xor
add
pop
test
je
push
lea
shr
add
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
xlat
clc
push
xchg
add
mull
ror
add
add
add
sti
stos
outsl
mov
jle
pop
in
push
mov
push
rol
xor
pop
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
call
test
push
addr16
nop
in
add
imul
out
imul
add
add
add
addr16
leave
jmp
add
in
in
lcall
leave
push
lea
push
call
lret
test
mov
sarl
add
mov
mov
lods
lret
add
mov
jbe
jbe
jecxz
outsl
mov
add
add
lahf
test
mov
popa
add
jae
add
scas
add
scas
jmp
xchg
cmpsb
mov
add
lock
xchg
imul
lcall
add
push
push
push
lea
push
lea
push
call
mov
jmp
nop
add
js
add
add
test
add
push
cli
cwtl
pop
add
jne
xchg
add
add
mov
movsl
add
add
mov
mov
in
lock
lcall
in
add
push
push
lea
push
push
push
push
push
push
call
int
insb
add
add
loopne
mov
mov
add
add
mov
roll
add
add
lods
add
mov
roll
addb
lcall
movsl
mov
sub
pop
push
push
not
shr
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
lcall
in
stos
mov
push
lock
movsb
add
add
push
ljmp
subb
in
fcompl
push
shr
add
inc
dec
pop
push
push
rol
add
ror
sub
pop
testl
addl
push
push
push
push
push
lea
push
lea
push
push
push
push
call
lret
add
mov
add
roll
lret
popl
push
pop
push
mov
pop
xchg
faddl
mov
mov
add
leave
add
add
mov
add
lea
mov
mov
add
add
push
fistl
jnp
sub
pop
push
call
push
push
push
push
push
push
lea
push
push
lea
push
call
data16
add
call
add
xchg
add
outsl
pop
roll
bound
aad
fldl
gs
add
push
jle
jae
sub
pop
mov
push
sub
sub
add
pop
pushl
push
lea
pop
push
push
shl
shl
pop
push
push
lea
push
push
push
push
push
call
mov
add
add
add
in
push
lcall
add
xchg
outsl
insb
add
aam
add
test
add
add
and
jge
add
test
add
rol
pop
pop
push
push
push
push
push
push
push
call
jnp
rclb
add
addl
flds
in
add
add
loope
addr16
jmp
aam
out
add
add
add
movsl
push
jmp
pop
push
push
push
push
push
push
call
mov
add
std
add
add
aam
roll
push
outsl
movsb
add
lock
jne
sahf
and
lock
add
add
leave
add
add
ret
sub
pop
pop
push
inc
xor
sub
pop
pop
push
push
call
jbe
rclb
mov
mov
fldt
hlt
mov
add
cmc
out
test
add
add
add
add
jns
add
push
addr16
add
mov
add
add
add
add
std
add
add
lcall
ret
push
rol
add
pop
push
push
not
add
pop
mov
add
push
sub
ror
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
jb
call
pusha
movsl
addr16
add
xchg
xchg
mov
scas
mov
scas
out
add
cmc
add
cld
mov
add
add
in
jno
jmp
mov
in
fcmovnb
mov
add
nop
mull
xchg
mov
add
jnp
pop
pop
xchg
add
lcall
push
not
pop
push
push
push
call
clc
jns
add
test
test
add
add
jo
add
in
imul
je
push
add
clc
pop
lods
lahf
add
sarl
in
jnp
enter
fadds
inc
cld
or
add
push
add
pop
push
call
push
lea
push
call
jns
add
add
mov
fwait
add
lcall
add
fwait
jecxz
add
fsts
mov
add
xchg
mov
add
add
incb
jne
fidivrs
mov
xchg
add
cltd
bound
fildl
jns
mov
imul
in
clc
pop
push
push
xor
ror
pop
call
push
push
push
push
push
push
push
push
lea
push
call
rcrl
shlb
int3
add
aad
add
pop
add
mov
rolb
fildll
mov
add
fwait
add
fdivrl
ret
jmp
icebp
add
add
pop
xchg
addb
add
add
cmp
add
add
pop
add
insl
cld
add
std
pop
cmpl
jne
push
pop
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
test
add
jnp
add
xchg
bound
add
scas
repnz
xlat
add
mov
xchg
out
add
in
add
loopne
push
push
bound
sub
pop
pop
push
inc
sub
pop
pop
push
dec
pop
pop
leave
push
xor
pop
ret
push
rol
add
pop
push
mov
push
sub
pop
add
push
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
lods
outsl
xchg
mov
add
in
add
jnp
mov
xchg
hlt
add
sar
add
data16
add
jmp
ljmp
jne
add
lahf
push
lret
add
add
add
add
add
add
sub
pop
push
push
ror
shr
add
pop
push
push
pop
push
push
push
dec
not
push
or
inc
add
rol
add
shr
sub
sub
not
sub
shr
pop
dec
pop
push
lea
push
lea
push
push
call
into
in
jb
add
into
add
add
pop
add
loopne
push
add
enter
mov
not
push
out
mov
mov
add
xchg
sti
notb
fldl
jne
add
pop
lret
jmp
mov
fcomip
add
ror
out
pushf
in
scas
cld
sub
pop
pushl
push
push
lea
push
push
push
call
je
jge
jecxz
xchg
cwtl
push
cmpsb
mov
add
iret
lea
mov
pop
add
imul
mov
jecxz
add
jns
roll
add
add
add
in
add
pop
push
add
fsubrs
icebp
lret
insb
adcb
add
int3
push
arpl
in
in
lcall
or
add
push
push
push
push
push
call
add
add
pop
out
ficoml
add
cli
fwait
add
add
movsl
stc
add
pop
mov
add
rcrb
add
sub
pop
call
push
push
xor
push
sub
add
sub
shl
add
sub
add
sub
add
add
pop
sub
inc
sub
add
pop
push
push
push
push
call
add
add
mull
add
stos
add
out
fldl
std
cltd
fmul
ljmp
fiadds
mov
fcompl
add
repnz
push
test
add
add
add
add
mov
push
jge
mov
jle
loopne
fsts
lock
pushl
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
test
add
add
shlb
cmpsl
add
jns
xchg
popaw
add
lcall
mov
add
add
rolb
movsb
sub
pop
call
push
shl
sub
lea
pop
mov
push
lea
push
push
push
push
call
stos
test
add
iret
aam
add
add
jne
int3
js
add
rclb
add
push
add
add
push
add
add
lcall
inc
cmp
push
call
xlat
add
add
add
add
add
push
fwait
lock
add
stc
add
jmp
jbe
add
pop
popf
push
loope
xchg
add
lods
call
add
icebp
mov
in
clc
lcall
call
mov
mov
push
not
add
pop
shr
push
lea
push
lea
push
push
push
call
ljmp
into
jne
mov
add
popf
add
mov
add
stc
mull
jmp
xchg
movsl
cli
imul
add
rolb
rol
stc
aam
xchg
pop
add
add
mov
lcall
inc
or
push
push
push
push
push
push
lea
push
push
push
call
add
mov
add
jns
jb
add
jo
push
loopne
add
mov
add
jmp
movb
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
cld
data16
jne
add
rorb
mov
cli
add
in
fnstsw
xchg
fstl
add
data16
mov
hlt
cltd
ficoml
repnz
out
js
in
fdivr
lcall
andb
or
push
push
lea
push
call
mov
add
movl
add
shrb
mov
xlat
add
hlt
xchg
repnz
imul
clc
int3
scas
add
add
add
add
add
add
fs
stos
in
leave
mov
loop
in
jge
filds
ljmp
popf
jae
fdivp
add
sub
pop
add
push
lea
push
lea
push
push
push
push
push
push
call
imul
sti
add
push
add
pop
rolb
add
icebp
pop
addr16
lock
add
add
add
fdivl
push
pop
nop
add
push
add
sub
pop
mov
mov
push
push
push
push
push
lea
push
call
add
gs
add
fincstp
xlat
mov
add
rolb
sarl
cli
js
rcll
out
hlt
add
roll
xchg
fstpl
jmp
mov
add
xchg
add
nop
add
add
les
add
mov
add
in
ljmp
pushf
add
push
add
add
call
cmp
jne
push
xor
pop
cmp
jne
push
push
push
push
push
push
push
push
push
call
jmp
mov
xchg
add
add
lahf
add
in
add
add
out
lods
scas
fldl
incb
inc
adc
add
add
add
push
push
push
lea
push
lea
push
push
push
lea
push
call
sti
fisubrl
xlat
mov
movl
aad
add
in
jb
mov
stc
jnp
add
fwait
lret
add
mov
lds
test
imul
add
shll
add
jl
in
fcomps
popf
push
add
mov
push
rol
dec
pop
mov
push
lea
push
push
call
add
add
mov
movsb
fsubs
add
xchg
fxch
aam
mov
xchg
mov
loop
xchg
pop
sub
pop
sub
jne
mov
push
push
push
call
popa
add
add
add
add
lods
add
arpl
jmp
add
sub
pop
movl
push
inc
pop
jmp
push
push
push
call
mul
add
add
xlat
jl
push
in
cld
out
scas
jl
popa
mov
add
fiaddl
add
pop
mov
scas
add
add
add
lock
cltd
cmpsb
push
add
je
add
hlt
pop
mov
mov
push
push
push
push
call
add
push
push
xchg
add
add
mov
fdivrl
aam
xchg
xchg
pop
add
xchg
into
roll
addb
add
in
add
add
les
add
sub
add
jno
add
data16
out
ret
mov
xorb
cmpsb
out
add
add
jo
rcll
xchg
les
sub
pop
cmp
jne
push
push
push
push
lea
push
push
push
call
stos
lea
ret
add
add
push
xchg
rolb
mov
add
cld
add
add
add
lahf
fdiv
add
add
add
mov
movsb
fwait
roll
out
mov
mov
addr16
jae
arpl
mov
in
in
mov
push
push
push
push
call
out
add
add
std
ljmp
add
add
add
add
jmp
out
stos
fistl
mov
mov
push
movsl
jecxz
add
add
add
pop
mov
test
add
add
fcmovbe
add
jno
in
xchg
add
in
lock
lcall
add
add
add
inc
call
scas
jns
in
fnstcw
add
xchg
jmp
pop
jb
add
lcall
add
imul
cmpsb
add
pop
fadds
lahf
int3
mov
jecxz
loopne
lcall
lcall
add
testb
add
js
push
push
push
push
push
lea
push
call
adcl
mov
je
push
xchg
add
rolb
stos
out
pop
jecxz
ret
push
aam
add
add
mov
push
insb
in
add
push
iret
add
pop
test
int
out
addr16
into
mov
jle
add
jp
add
lock
leave
stos
jo
add
push
add
xchg
out
add
sub
pop
cmpw
jne
push
xor
add
lea
pop
mov
movl
push
add
sub
dec
pop
jmp
push
lea
push
push
push
push
lea
push
call
add
lahf
ljmp
in
arpl
loopne
je
mov
add
roll
fdiv
fs
add
add
mov
add
test
loopne
add
pop
pushl
pop
push
push
push
call
add
add
loop
lcall
add
add
fiaddl
add
testb
mov
out
iret
push
xchg
pop
add
inc
jno
clc
mov
in
pop
push
lret
in
in
stos
add
out
sub
pop
mov
mov
push
push
lea
push
call
add
mov
lock
add
add
add
lea
add
leave
add
mov
add
movsl
xchg
shll
jmp
add
pop
add
addl
or
ret
push
sub
push
sub
add
add
shr
xor
sub
not
lea
pop
ror
pop
push
shl
sub
pop
push
push
sub
pop
call
push
dec
sub
shl
pop
cmpl
je
push
push
sub
push
xor
add
shr
shr
sub
shr
not
pop
lea
add
shr
pop
push
sub
pop
push
call
push
shr
ror
pop
cmpl
je
push
push
sub
dec
push
and
add
add
dec
sub
shl
add
pop
shr
add
pop
push
lea
push
push
push
lea
push
push
push
push
call
ljmp
movsw
mov
popf
not
mov
lret
add
add
push
add
add
ljmp
mov
rcr
lcall
int3
add
pop
add
mov
add
add
lock
xchg
jmp
jnp
sti
add
enter
add
add
lcall
push
inc
pop
call
push
add
shl
rol
pop
cmpl
je
push
push
ror
sub
not
push
push
pop
add
not
sub
sub
not
pop
inc
sub
shl
pop
push
ror
dec
pop
push
push
lea
xor
add
not
pop
call
push
push
push
push
push
push
lea
push
push
call
in
call
add
add
push
js
add
lret
add
add
add
mov
jmp
push
add
sahf
add
add
xchg
into
push
roll
std
add
add
add
push
push
in
mov
lods
fisttpll
cwtl
xchg
add
faddl
add
add
arpl
cmp
rol
je
push
push
shl
shr
push
and
add
add
shl
shl
sub
rol
xor
pop
pop
push
shl
sub
pop
push
call
push
lea
push
push
push
push
push
push
call
test
add
lret
sahf
xchg
sbbl
out
filds
jnp
pushf
jne
mov
jo
bound
add
pop
arpl
push
test
add
mov
ret
mov
in
jnp
fnsave
push
add
fildll
add
out
imul
add
add
roll
add
lcall
cmp
rol
je
push
push
push
push
pop
add
sub
dec
sub
add
shr
pop
shr
sub
pop
push
add
add
shl
pop
push
call
push
pop
cmpl
je
push
push
inc
sub
push
xor
add
sub
add
sub
not
sub
xor
pop
dec
add
pop
push
rol
inc
add
pop
push
push
add
shl
xor
pop
call
cmpl
je
push
push
inc
ror
sub
shl
push
or
inc
add
ror
shl
ror
lea
sub
add
pop
xor
pop
push
shr
lea
dec
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
lds
add
add
movsb
add
push
add
push
loopne
lahf
out
in
add
pop
arpl
mov
ja
add
add
add
lods
add
out
pusha
in
add
ljmp
hlt
mov
call
push
push
lea
push
push
push
push
push
lea
push
push
push
call
pop
xchg
add
jae
fsts
jnp
rolb
in
jnp
je
rorb
ja
movl
mov
pop
fiaddl
into
push
add
lods
mov
in
fdivr
lcall
js
int3
fldz
ret
jge
add
push
push
inc
shr
push
or
inc
add
sub
add
shr
shr
add
pop
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
add
add
push
cmpsl
add
addl
mov
nop
imul
add
enter
in
scas
mov
push
push
inc
not
pop
call
push
push
call
add
je
mov
icebp
test
fnsave
add
mov
shlb
mov
popf
add
mov
add
enter
cmpsl
cli
cmpsb
jmp
stc
int3
add
pop
stos
sub
pop
cmpl
je
push
push
ror
add
push
sub
add
sub
sub
dec
sub
pop
ror
xor
shr
pop
push
push
push
call
std
add
loope
mov
push
add
test
jo
mov
xchg
pop
push
mov
clc
xchg
push
mov
xchg
add
roll
insb
mov
add
lds
fs
loopne
pop
loop
rolb
jmp
out
pushf
cmc
push
bound
addb
xlat
add
add
lcall
push
push
lea
push
push
push
push
lea
push
lea
push
call
lahf
add
in
in
xchg
mull
add
add
add
mov
xchg
add
hlt
add
cld
push
jbe
mov
lret
loop
add
jl
fs
ficoms
testb
jne
push
add
jmp
popf
jo
add
pop
call
cmpl
je
push
push
add
add
add
shr
push
push
pop
add
add
sub
dec
xor
shr
shl
pop
ror
add
pop
push
push
lea
push
push
push
call
add
stc
lea
add
stos
fdiv
jle
flds
push
add
sahf
mov
pop
lahf
add
add
jecxz
test
mov
mov
add
add
jp
in
add
cli
bound
add
cmpsb
movsl
pop
add
mov
arpl
lcall
push
pop
call
cmpl
je
push
push
rol
sub
push
push
pop
add
sub
xor
sub
not
add
sub
rol
pop
shl
pop
push
push
push
call
add
mov
push
xlat
add
add
mov
subb
add
add
aam
add
lods
add
fstpt
add
add
popf
fiaddl
movsl
imull
add
add
sub
pop
push
push
lea
ror
not
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
call
add
testl
mov
jns
push
imul
add
lock
add
mov
mov
push
pop
fcomps
sahf
mov
rclb
add
out
mov
sahf
add
mov
add
add
js
jmp
les
je
push
push
not
shl
push
xor
add
ror
sub
shl
add
dec
pop
shl
dec
dec
not
pop
push
dec
pop
push
call
push
push
push
call
add
push
add
jns
mov
add
add
add
add
xchg
imul
scas
movsl
add
pusha
ja
xchg
mov
add
add
out
add
test
add
lods
aam
pop
xchg
movsb
jle
add
lcall
pop
cmpl
jne
push
sub
sub
pop
mov
push
push
push
lea
push
push
push
push
push
call
push
add
loope
out
aam
add
jp
addr16
add
add
mov
lcall
leave
roll
out
mov
add
in
add
imul
add
sub
pop
movl
push
push
push
push
call
stc
add
add
add
mov
in
mov
add
jle
ja
xchg
add
addl
iret
add
fnstenv
lock
jmp
xor
push
lea
push
call
jnp
add
out
add
lods
in
mov
loopne
add
aam
lret
add
mov
clc
add
pop
add
add
lahf
iret
push
add
add
add
mov
test
jl
sti
loope
jle
roll
add
mov
clc
add
xchg
test
add
xchg
xchg
add
add
lcall
push
lea
push
call
aad
add
in
add
add
cltd
scas
test
mov
xor
cmpsl
mov
cld
imulb
fstpt
add
add
gs
lahf
add
add
in
jl
jl
add
rclb
sub
pop
pop
push
push
push
call
xchg
into
jb
add
popa
add
ljmp
mov
mov
add
out
lcall
add
add
jp
add
add
mov
add
addr16
push
add
shr
add
add
add
lcall
pop
push
add
add
pop
leave
push
ror
sub
add
pop
ret
push
push
rol
pop
mov
push
ror
pop
add
push
sub
inc
pop
cmpl
jne
push
push
sub
shr
inc
sub
push
sub
add
dec
sub
pop
ror
rol
ror
pop
push
ror
add
pop
pushl
push
push
push
lea
push
push
push
lea
push
lea
push
call
or
add
xchg
movl
out
add
pop
add
add
shlb
aam
mov
xchg
add
ljmp
mov
cmpsb
mov
stos
notb
lcall
mov
add
push
push
push
push
push
push
push
call
addb
add
fdivrl
loope
add
pop
add
hlt
mov
out
add
scas
add
mov
jae
scas
add
pop
mov
mov
mov
jo
mov
pop
mov
add
sub
pop
call
push
push
push
call
mov
fsubl
add
fadds
add
add
add
xchg
idivb
mov
cwtl
jne
mov
lret
add
cwtl
out
ret
addl
add
add
add
push
test
add
lcall
enter
cmpl
jne
push
not
pop
mov
push
push
push
push
push
lea
push
push
lea
push
call
xchg
repnz
mov
add
std
mov
add
nop
add
add
pusha
icebp
push
add
mov
in
add
add
icebp
js
add
jns
xchg
popl
add
add
push
sub
pop
call
push
push
lea
push
lea
push
lea
push
call
int3
add
jo
adcb
add
add
mov
push
add
stos
jp
lret
jbe
loop
scas
add
lret
add
add
add
imul
add
int3
mov
aad
add
add
add
data16
push
jl
in
in
lcall
jmp
push
inc
add
inc
add
pop
cmpl
jne
push
push
add
lea
ror
push
sub
add
sub
sub
pop
add
pop
push
push
push
push
lea
push
lea
push
call
out
in
xchg
mov
add
xchg
lock
mov
add
add
add
cmpsl
insb
ja
jns
scas
lock
jnp
mov
js
mov
mov
add
cmpl
add
mov
add
pusha
add
test
iret
xchg
cwtl
add
push
pop
mov
jecxz
sub
pop
pushl
call
push
push
push
push
push
push
push
lea
push
call
lret
enter
lret
add
hlt
cwtl
add
add
push
sti
add
gs
add
shll
lds
jno
mov
cli
xlat
pop
movsb
pusha
add
mov
mov
lcall
add
out
pop
call
push
push
push
push
call
add
pop
add
jecxz
loop
add
push
fdivr
add
add
add
mov
add
in
add
add
push
jecxz
xchg
add
les
add
filds
inc
adc
cmpl
je
push
lea
push
push
lea
push
call
lea
faddl
mov
pusha
test
cmc
mov
les
popf
add
test
scas
loopne
add
sub
pop
cmpl
jne
push
push
push
push
call
mov
loope
rolb
iret
stos
add
in
mov
push
icebp
in
addl
in
add
push
add
out
push
add
mov
jne
pop
add
push
lcall
add
add
push
push
push
push
push
push
push
lea
push
lea
push
call
out
add
push
mov
fucomip
fiadds
mov
add
push
mov
lock
jo
add
andb
jbe
add
rolb
add
ja
add
bound
xchg
lods
lcall
add
xchg
add
call
fcompl
or
add
push
push
push
push
push
call
add
out
faddp
add
add
stc
add
fabs
add
mov
add
add
push
add
movl
jecxz
add
add
add
out
cld
fidivrs
in
lock
lcall
push
add
push
push
not
push
sub
add
sub
add
pop
ror
pop
push
sub
shr
inc
pop
pushl
push
sub
pop
call
push
dec
add
sub
dec
pop
call
push
push
dec
lea
push
or
inc
add
lea
shl
sub
not
not
pop
add
add
xor
lea
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
lock
mov
loope
add
add
leave
add
insb
out
add
xchg
lods
jl
pop
mov
mov
popa
mov
add
filds
stos
scas
xchg
add
add
push
js
jle
jae
mov
jns
add
scas
add
mov
add
add
add
loopne
pushl
call
push
push
push
push
push
push
push
lea
push
push
call
scas
xchg
add
aad
add
fiadds
push
mov
cltd
add
cltd
mov
add
in
jne
add
shrb
out
imul
cwtl
add
pop
add
add
mov
add
add
add
add
bound
sub
pop
call
push
push
dec
ror
push
and
add
xor
add
add
sub
sub
pop
not
pop
push
add
ror
pop
pushl
push
not
shr
sub
dec
pop
call
push
push
lea
push
push
lea
push
push
call
xchg
loope
xchg
jbe
fiaddl
testl
add
add
mov
add
pop
shl
push
leave
jle
xchg
mov
sub
pop
call
push
push
dec
push
push
pop
add
sub
sub
inc
lea
pop
dec
not
ror
pop
push
add
inc
lea
sub
pop
pushl
call
push
shr
lea
pop
call
push
push
inc
inc
not
push
push
pop
add
ror
xor
sub
pop
lea
rol
sub
pop
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
mov
mov
jmp
fcomip
fistpll
xchg
add
add
rolb
into
pop
add
push
popl
xchg
ret
jl
pop
imul
add
fdivrl
xchg
sub
pop
pushl
call
push
add
shr
inc
pop
call
push
push
sub
push
or
not
add
inc
rol
dec
sub
lea
pop
sub
shl
add
lea
pop
push
add
sub
ror
shl
pop
pushl
push
inc
add
pop
call
push
shr
sub
ror
rol
pop
call
push
push
xor
sub
shl
shl
push
push
pop
add
add
ror
sub
sub
sub
pop
shr
sub
not
pop
push
not
lea
pop
pushl
push
push
lea
push
push
call
js
std
cld
xchg
xchg
mov
jbe
add
add
pop
pop
add
push
add
mov
mov
movsl
out
popl
stos
cltd
add
add
call
jns
add
add
add
out
call
add
pop
add
sub
pop
call
push
lea
push
push
lea
push
push
push
call
push
pop
fildl
icebp
test
arpl
stos
pop
arpl
int
pop
movsb
rolb
iret
mov
insb
add
push
jle
xchg
add
add
aam
mov
add
cmc
call
test
add
lea
lods
push
add
add
add
add
fidivrs
jecxz
gs
pop
call
push
push
shl
push
or
not
add
add
sub
shl
rol
ror
ror
pop
pop
push
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
in
testb
xchg
add
mov
add
mov
pop
fcomip
lock
cli
add
pusha
out
xchg
faddl
xchg
imul
push
jns
add
aam
add
stos
rorb
jo
les
xchg
sub
pop
call
push
shl
shr
add
add
pop
call
push
push
inc
lea
rol
lea
push
xor
add
rol
sub
shl
not
pop
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
test
jmp
add
cwtl
data16
add
loop
mov
add
sti
push
push
pop
mov
stos
cmc
jmp
into
fadds
add
add
add
add
add
lret
add
mov
pop
in
sahf
movsl
add
clc
test
add
xchg
data16
in
fcomps
jne
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
arpl
roll
add
cmc
add
fucomp
add
add
jnp
in
aad
scas
add
filds
jl
add
rolb
into
add
add
pop
imul
mov
mov
mov
push
add
rol
in
push
cmp
data16
xchg
sub
pop
call
push
add
pop
call
push
push
sub
shl
push
or
not
add
shr
sub
shr
rol
xor
pop
shr
xor
pop
push
lea
pop
pushl
push
not
rol
lea
inc
pop
call
push
inc
sub
pop
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
out
jno
test
xchg
add
imul
add
xchg
ljmp
add
mov
mov
pop
enter
add
jne
push
outsl
cmp
pop
lret
sub
pop
push
call
push
push
push
or
inc
add
not
sub
sub
lea
lea
sub
pop
ror
add
shl
sub
pop
push
push
call
cwtl
add
push
shr
insb
lahf
test
add
out
add
mov
add
add
sbbl
mov
add
add
add
add
jo
popf
sub
pop
pushl
push
ror
add
pop
call
push
rol
ror
lea
pop
call
push
push
rol
add
push
or
inc
add
inc
xor
sub
shl
shr
pop
sub
pop
push
push
push
push
push
call
add
add
add
push
gs
add
lds
add
push
mov
into
mov
in
in
lcall
jne
push
push
push
lea
push
push
call
add
add
add
test
lock
add
add
je
cwtl
xchg
fiaddl
add
add
add
mov
imul
xor
imul
fdivl
loope
add
sub
pop
call
push
lea
push
push
push
push
lea
push
call
add
movsb
pushf
pop
jp
out
add
xchg
call
push
loop
add
loop
outsl
jnp
jnp
add
imulb
mov
gs
jnp
call
lcall
ja
add
mov
add
add
icebp
add
xchg
sub
pop
call
push
push
xor
push
sub
add
sub
sub
xor
sub
not
pop
ror
pop
push
shl
rol
pop
pushl
call
push
add
pop
call
push
push
not
dec
dec
push
sub
add
add
sub
add
add
pop
lea
add
ror
inc
pop
push
push
lea
push
push
call
stc
in
add
add
fdivrl
lods
fadd
jmp
fildl
arpl
scas
cmpsl
add
faddl
ja
pop
add
mov
pop
scas
leave
add
lahf
jnp
pusha
sub
pop
pushl
call
push
push
inc
push
sub
add
inc
sub
sub
sub
shr
rol
sub
pop
add
pop
push
push
lea
push
push
pop
add
lea
sub
sub
rol
lea
pop
inc
xor
not
pop
push
lea
dec
ror
xor
pop
call
push
push
push
push
push
call
jno
add
fwait
add
rolb
insb
add
std
add
add
add
add
add
stos
pop
add
repnz
add
ja
out
push
pop
pop
push
push
push
push
push
call
jne
add
leave
add
cmpl
fwait
push
out
roll
mov
add
cli
fs
movsb
addr16
xchg
gs
add
add
add
mov
movsb
add
bound
jbe
jnp
add
add
add
ror
mov
jns
add
add
add
add
lcall
jne
push
push
push
push
lea
push
push
call
lods
icebp
jl
lcall
mov
mov
call
mov
jmp
add
jecxz
jae
add
push
pop
add
arpl
movsb
cwtl
lahf
iret
aam
add
xchg
js
mov
add
in
mov
mov
pusha
add
add
jp
add
add
add
add
add
sar
in
call
add
mov
push
push
push
call
add
add
add
je
je
mov
mov
fisttpl
mov
mov
nop
push
xchg
cmpsb
add
popa
mov
xchg
add
sahf
popf
add
add
add
add
add
pop
lea
push
push
dec
lea
add
sub
push
and
add
shr
sub
shl
shr
pop
pop
push
push
push
call
movsb
jbe
jmp
fistpll
shrl
int3
add
aam
add
roll
pop
add
add
cwtl
icebp
push
add
mov
movb
add
fs
sahf
add
add
add
add
add
pop
mov
in
hlt
lcall
jne
push
dec
shr
not
pop
call
push
pop
push
call
push
push
shr
not
lea
shr
push
or
inc
add
sub
add
sub
add
pop
sub
add
pop
push
shr
shl
pop
pushl
call
push
push
call
jns
mov
scas
rcr
mov
add
in
push
add
fisubrs
shll
jnp
jae
sub
pop
call
mov
push
rol
inc
dec
shr
pop
lea
push
push
add
rol
add
push
or
inc
add
add
sub
sub
ror
pop
dec
not
pop
push
push
push
push
lea
push
push
call
test
roll
lods
call
pop
add
add
in
push
mov
sahf
push
cltd
add
mov
cld
pusha
lds
sub
pop
pushl
push
shr
ror
dec
add
pop
call
lea
push
push
push
lea
push
push
call
add
pop
fcmovnb
fisubrs
jmp
add
jmp
add
jmp
addr16
rol
sahf
push
mov
add
nop
out
fldl
add
add
add
jno
add
add
rolb
add
add
xchg
in
popf
mov
mov
push
fiaddl
sub
pop
push
push
lea
push
lea
push
push
call
mov
add
hlt
aam
je
hlt
aad
fdivrs
stc
fistpl
push
add
add
xchg
lods
out
pop
int
div
jne
cld
push
add
lcall
add
test
mov
push
push
push
call
mov
repnz
add
test
cwtl
mov
flds
add
mov
add
xlat
pushf
jecxz
arpl
add
add
push
popf
incb
jecxz
stos
pop
add
sti
lea
jecxz
testl
push
add
sub
pop
push
push
push
call
add
add
add
mov
mov
add
not
add
add
xlat
sahf
iret
bound
add
cmpsb
xorl
lahf
add
int3
fidivs
sahf
outsl
xchg
add
clc
lcall
jne
push
push
ror
ror
push
and
add
lea
sub
sub
inc
sub
pop
add
shl
pop
push
sub
lea
pop
push
push
push
push
push
push
lea
push
call
shlb
add
stos
leave
out
gs
flds
add
lods
sbbl
jmp
add
push
add
jl
mov
add
stos
lret
sub
pop
call
push
push
inc
dec
push
or
not
add
shr
shr
sub
add
sub
pop
add
dec
inc
add
pop
push
sub
shr
ror
pop
pushl
push
lea
lea
pop
call
push
xor
lea
pop
push
call
push
push
add
sub
push
or
not
add
xor
sub
not
pop
xor
lea
pop
push
inc
pop
pushl
push
lea
rol
pop
call
call
push
add
sub
xor
pop
pushl
push
sub
shl
add
sub
pop
mov
push
shr
lea
pop
jmp
push
push
xor
push
xor
add
sub
shr
sub
shr
add
xor
lea
pop
shr
pop
push
not
pop
pushl
push
sub
shl
not
pop
call
push
dec
not
pop
push
call
push
push
push
xor
add
sub
sub
add
pop
add
rol
pop
push
lea
push
push
push
push
push
push
push
push
call
loop
cwtl
jnp
lods
pop
out
xchg
add
cwtl
jmp
mov
lahf
add
push
add
fst
add
add
xchg
mov
jo
add
arpl
mov
add
pusha
xchg
fnsave
fildll
mov
add
add
in
fcompl
jne
push
push
push
push
push
push
lea
push
push
push
push
call
ja
test
popf
mov
pop
add
cmp
loope
stos
add
cld
outsl
mov
xorb
add
add
add
add
gs
pop
add
add
mov
xchg
push
data16
jecxz
aam
into
add
jl
push
popa
sub
pop
call
push
push
push
push
call
push
in
add
add
add
cmpl
cwtl
loope
gs
mov
add
in
add
add
lods
enter
add
xchg
pop
roll
imul
lods
add
add
push
jbe
loope
add
lock
outsl
add
ret
pop
add
sub
pop
push
push
lea
push
push
push
push
call
enter
push
jne
arpl
mov
add
push
add
push
jno
jle
add
add
test
jae
pop
imul
jnp
add
rclb
lea
push
push
push
push
call
add
push
test
in
add
add
add
js
mov
mulb
add
add
add
les
xlat
mov
jge
aad
push
add
add
sub
pop
leave
add
push
dec
pop
pop
push
dec
xor
lea
pop
pop
push
push
call
add
jne
nop
mov
je
add
mov
push
mov
leave
mov
data16
cmpsb
add
ret
jb
gs
sub
pop
pop
xor
push
push
push
push
lea
push
call
aad
add
scas
pop
popa
cmc
xchg
jnp
mov
aam
stos
subb
loope
jbe
add
lret
push
pop
add
iret
add
pusha
add
fisttpl
hlt
mov
in
sub
pop
inc
push
lea
pop
ret
leave
push
inc
dec
pop
ret
push
sub
dec
pop
push
mov
push
push
push
push
lea
push
push
lea
push
call
popl
cwtl
fldl
add
lret
add
testl
mov
add
push
add
int3
add
fiaddl
mov
add
test
lahf
mov
fildl
mov
imul
mov
jl
fidivs
test
sahf
jl
in
in
lcall
jge
add
test
add
sub
rol
pop
jmp
push
push
push
push
push
lea
push
call
add
add
loope
add
xchg
testl
std
add
stos
add
add
in
add
in
add
imul
jo
in
iret
add
cmc
aam
add
add
aam
loope
add
add
call
and
push
dec
pop
xor
push
sub
pop
xor
add
push
shl
add
dec
pop
xor
dec
push
add
xor
pop
sub
push
pop
jmp
push
push
push
push
push
lea
push
push
push
call
mov
pop
fwait
add
icebp
add
add
imul
xchg
mov
add
pushf
add
ror
jmp
test
add
lcall
add
add
push
push
push
push
push
push
push
push
lea
push
call
out
lods
mov
je
movsl
push
add
add
ja
mov
add
pop
add
nop
test
add
mov
test
add
fdivl
mov
ffree
add
add
add
rcl
into
outsl
jno
out
sub
pop
pushl
push
shl
pop
pop
push
lea
push
call
sahf
add
add
jb
mov
add
lcall
movsl
pop
testb
nop
pop
into
andb
jb
divl
add
movsl
xchg
gs
lcall
add
loop
lods
push
cltd
add
filds
lock
mov
add
mov
jbe
push
sub
pop
sub
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
add
add
push
insb
jge
add
add
loope
xchg
mov
test
pop
rcrl
add
add
lcall
cmp
xchg
call
inc
repz
pop
xchg
push
push
push
push
push
push
push
call
aam
ja
cwtl
popl
add
add
add
add
add
add
add
les
test
add
push
sub
pop
mov
lea
push
lea
push
push
push
push
lea
push
push
call
aad
xchg
std
add
movsb
lock
flds
stos
test
cltd
mov
lea
add
in
add
lds
xchg
push
mov
add
xchg
enter
add
add
jle
add
add
loope
gs
add
pop
add
add
enter
addr16
stos
mov
in
in
sub
push
sub
not
xor
pop
mov
push
rol
inc
add
shl
pop
shr
add
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
add
loope
add
ret
filds
add
fsubl
add
push
add
leave
sub
pop
sub
pushl
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
add
jl
loope
out
iret
popa
fldt
add
add
add
add
mov
jb
shll
mov
mov
add
mov
int
add
xchg
mov
stos
xchg
jecxz
mov
add
add
aad
roll
in
fdivr
lcall
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
sti
add
pop
add
lods
sti
add
add
lods
testb
add
addr16
add
pop
adcb
fcomps
jmp
lea
ror
pop
and
sub
push
lea
add
sub
rol
pop
cmp
jne
leave
push
push
push
push
push
call
std
add
pusha
mov
cmpsl
ljmp
pop
loop
out
mov
add
mov
hlt
add
jns
add
pop
out
in
aam
sub
pop
ret
push
push
push
call
jp
pusha
mov
add
add
push
add
ret
push
scas
test
fincstp
test
hlt
and
pop
loop
lds
add
outsl
add
mov
add
lcall
mov
push
pop
add
push
push
push
call
add
popa
add
add
jno
cmpsl
cmc
add
clc
loop
call
add
add
movl
divl
scas
add
mov
add
repnz
jae
incb
xchg
jecxz
mov
add
in
hlt
pop
push
push
push
push
lea
push
call
gs
mov
data16
add
mov
lds
mov
mov
shll
add
cmpsl
sahf
aad
repnz
add
shl
add
loope
lret
sbbl
add
icebp
mov
add
add
add
pushf
xchg
add
mov
sub
pop
push
push
ror
xor
lea
pop
push
push
push
call
add
shrl
add
into
jb
fiadds
lock
mov
filds
shlb
add
xchg
jbe
xchg
cli
fcom
in
add
jle
hlt
add
add
bound
pop
std
xchg
add
cmc
add
add
add
push
push
push
push
lea
push
lea
push
call
xchg
cld
mov
shl
lea
add
fsubr
mov
mov
int3
add
in
ret
add
add
add
subl
arpl
aam
sub
pop
mov
lea
push
lea
dec
pop
sub
push
push
push
lea
push
push
push
call
incb
enter
mov
mov
add
test
add
in
shr
cltd
add
jecxz
add
add
jmp
lret
add
add
add
cld
add
test
jge
in
call
mov
shr
push
shl
inc
pop
add
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
rolb
imul
push
add
mov
add
push
add
mov
add
loopne
mov
add
cmpsb
data16
push
lcall
fwait
addb
add
lea
push
lea
push
push
push
push
push
lea
push
push
call
push
mov
xchg
add
enter
jb
mov
shl
xchg
add
mov
add
fstps
mov
mov
mov
xlat
filds
arpl
cltd
push
jmp
mov
notb
imul
sub
pop
add
mov
push
add
shl
pop
add
push
dec
sub
lea
rol
pop
xor
mov
push
push
call
hlt
add
jle
add
add
stos
pop
push
lea
add
add
test
popa
add
add
add
movsb
mov
pop
and
push
push
push
lea
push
push
call
add
loope
add
rolb
lcall
sbbb
pop
ret
loop
xchg
pop
ja
add
imul
mov
sub
pop
rol
push
rol
add
add
pop
rol
xor
push
add
rol
pop
inc
cmpb
jne
push
rol
pop
add
push
inc
lea
rol
add
pop
cmp
je
add
push
push
push
push
call
add
add
xchg
mov
cld
fdivr
jmp
fildl
ljmp
ja
add
mov
mov
add
jo
add
xchg
jae
aam
sahf
jecxz
in
push
rcll
lock
cmpl
jne
push
push
push
push
push
push
call
bound
fildl
add
filds
add
pop
add
icebp
add
bound
loopne
jns
loope
add
in
js
call
andl
test
test
lock
icebp
mov
add
call
xor
pop
push
push
push
call
mov
leave
mov
imul
mov
lcall
pop
add
add
lcall
push
not
pop
pop
push
rol
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
pop
add
iret
add
add
out
stos
add
hlt
push
push
mov
mov
add
cld
jecxz
add
xlat
out
ja
lret
out
add
mov
mov
add
add
test
bound
scas
fsubr
lret
je
pop
int
imulb
mov
in
loopne
lcall
leave
push
dec
add
sub
pop
ret
push
push
call
xor
add
pop
add
add
add
xorb
arpl
add
push
add
mov
iret
xchg
push
clc
jbe
out
enter
mov
arpl
jno
shr
mov
add
iret
add
gs
add
add
loopne
mov
xchg
add
add
bound
stos
fldl
pop
push
fwait
cmpsl
sub
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
call
shlb
scas
mov
add
mov
add
mov
xchg
push
movsl
mov
add
add
cmc
mov
jo
imul
add
jo
mov
add
add
leave
add
mov
cwtl
mov
ja
test
lea
lcall
push
or
call
out
add
int
add
imul
jae
add
out
add
add
mov
add
add
fiaddl
test
push
add
add
shlb
mov
add
add
lahf
add
sub
pop
mov
push
add
pop
cmpb
push
add
lea
add
pop
call
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
pushf
xchg
push
mov
fst
stc
out
mov
movsb
fiadds
cld
mov
cmc
add
add
jo
int3
add
sti
add
mov
idiv
test
sub
pop
push
push
lea
push
call
cmc
add
in
adcb
aam
ljmp
fstpl
add
pop
push
add
add
add
add
pop
add
mov
pushf
popf
enter
jno
add
add
loopne
mov
int3
jno
push
add
subl
clc
lcall
mov
xor
push
lea
push
push
push
push
push
push
lea
push
call
push
nop
sti
pop
pop
test
jae
aad
pop
add
testl
pop
push
mov
add
add
add
ja
in
loopne
pop
push
xor
pop
pop
pop
push
push
push
push
call
addb
fwait
pop
add
add
add
pushf
lods
add
jmp
add
push
loop
pop
call
addr16
insb
add
in
add
mov
pop
fcmovnu
pop
lds
divb
sub
pop
pop
push
push
push
push
push
call
enter
push
lds
add
movb
mov
mov
mov
mov
add
add
xor
imul
sahf
add
xchg
xchg
add
jge
jno
loop
add
add
add
add
add
add
clc
add
jp
add
enter
in
in
pop
pop
leave
push
sub
pop
ret
push
push
push
call
add
add
add
add
mov
add
fadds
ficompl
add
add
addb
jb
out
jl
add
add
mov
add
add
pop
add
nop
fsubr
add
std
add
imul
push
ror
pop
mov
push
lea
push
push
push
lea
push
lea
push
lea
push
call
cmpb
arpl
mov
loope
pop
jns
iret
out
iret
push
add
mov
xchg
add
add
fcmovbe
fwait
cltd
xlat
sub
pop
add
push
push
pop
push
push
push
lea
push
push
lea
push
push
push
call
js
add
add
movsl
cmpsl
sti
xchg
clc
add
add
add
add
add
sti
add
add
add
mov
add
sub
pop
push
push
push
lea
push
call
out
add
mov
mov
mov
add
add
push
xchg
add
add
add
repnz
loopne
add
andl
add
mov
add
add
lret
movsl
pop
mov
mov
add
add
fadds
lcall
pop
or
push
push
push
push
push
call
add
xchg
pop
data16
mov
add
add
add
add
mov
fildl
add
rorl
shlb
fisubs
in
test
shr
fiaddl
mov
pop
push
aam
popf
add
pop
mov
jnp
add
lock
fwait
add
xchg
add
push
push
push
push
lea
push
push
push
call
leave
add
leave
add
in
add
mov
mov
push
jmp
cld
add
add
jge
add
add
add
mov
xlat
andb
add
add
test
add
mov
add
add
out
mov
sub
pop
lea
push
xor
pop
sub
push
push
push
lea
push
push
push
push
push
call
add
add
add
cld
mov
fadds
add
out
roll
negl
jp
in
add
add
mov
add
shlb
xchg
cmpsl
int
add
repnz
mov
bnd
jnp
loopne
lahf
add
sub
pop
mov
push
lea
push
push
lea
push
push
call
int3
andb
fiaddl
lds
add
push
cld
push
cltd
jp
jo
jbe
add
imul
shrl
add
sub
pop
shr
push
lea
push
call
cmc
test
mov
mov
bound
add
fcmovb
aam
pop
mov
add
ja
ret
jo
jmp
in
clc
lcall
fimull
push
xor
int
or
push
cwtl
xchg
push
push
push
lea
push
call
xchg
add
icebp
add
popa
lock
add
add
add
rolb
add
mov
sti
jge
loop
mov
in
add
hlt
add
sahf
out
lret
mov
jbe
add
sub
pop
add
push
lea
pop
pushl
popl
push
sub
pop
mov
push
push
push
push
call
pusha
jp
add
add
xchg
add
insb
mov
loopne
add
je
rolb
add
jl
lock
add
mov
jmp
fucomp
cli
add
add
pushf
sarb
add
xor
push
push
push
push
push
lea
push
lea
push
push
push
call
test
hlt
add
add
cmc
in
pop
xchg
mov
pop
pop
int
add
cwtl
mov
add
pop
add
gs
cltd
add
rolb
nop
add
pop
repnz
add
add
in
fdivr
lcall
adc
mov
push
push
push
lea
push
call
jo
push
cltd
cmc
jns
jecxz
add
filds
add
add
push
add
push
jnp
out
xchg
add
add
pushf
add
mov
lods
jo
jge
in
lock
add
push
dec
add
inc
xor
pop
xor
rol
push
add
shl
shr
pop
nop
push
dec
pop
nop
xor
push
ror
sub
dec
rol
pop
nop
nop
push
ror
pop
inc
push
add
lea
pop
nop
nop
push
lea
push
call
mov
add
add
movsl
pop
shl
add
add
sahf
fstps
add
add
mov
push
add
test
add
sub
pop
cmpb
jne
push
push
push
lea
push
push
push
call
add
fstpl
stos
add
mov
add
aam
stc
add
loope
jne
add
sub
pop
add
nop
push
pop
nop
cmp
je
push
add
add
pop
nop
push
push
push
push
push
lea
push
call
lods
add
add
popf
add
in
fs
add
add
xchg
add
add
add
add
mov
lds
add
lcall
push
sub
shl
pop
inc
push
ror
rol
pop
nop
push
push
lea
push
push
push
lea
push
call
jl
mov
xchg
pop
push
mov
add
xchg
cmpsb
add
add
jp
out
add
jb
jno
outsl
mov
std
ret
add
add
add
add
mov
inc
call
test
add
push
mov
cltd
test
push
js
jno
add
int
add
push
add
pop
cmp
jb
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
mov
ret
add
add
lea
add
add
jbe
add
add
xchg
add
add
testl
sbb
sub
pop
xor
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
jmp
aad
add
add
pushf
jecxz
cmpsl
push
jge
into
and
add
aad
pop
sahf
xchg
mov
jmp
push
shr
pop
mov
push
lea
inc
pop
add
movzwl
push
inc
ror
not
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
lods
cwtl
push
add
ja
out
pop
add
cltd
flds
xchg
add
add
xchg
add
add
add
cli
mov
iret
add
push
cli
jnp
mov
pop
xchg
cld
add
roll
mov
mov
imul
flds
fdivs
mov
add
les
stc
outsl
test
add
lcall
rorl
lea
push
push
push
call
jne
add
add
add
popa
xlat
fs
mov
mov
cmpsb
int3
add
add
jo
add
sbbl
in
pop
xor
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
xchg
popa
outsl
scas
cmpsl
add
add
popa
add
mov
in
stos
add
mov
add
repnz
call
stos
add
push
push
add
xchg
addr16
rclb
incb
add
mov
add
fildl
add
add
and
add
add
pop
xchg
mov
add
sub
pop
xor
push
push
push
push
push
push
push
push
call
xchg
push
push
mov
cmpsl
mov
add
add
lahf
lock
add
arpl
add
scas
pusha
add
mov
add
fs
insb
add
pushf
out
ljmp
stos
les
add
add
mov
pop
shl
push
shr
pop
xor
shl
push
push
push
push
push
push
push
push
call
mov
add
pop
pop
into
into
jle
add
add
mov
xchg
xchg
add
rorl
add
mov
add
mov
pop
pusha
mov
aam
pop
push
sub
pop
xor
push
inc
sub
sub
xor
pop
shl
push
push
lea
push
push
push
call
addb
add
mov
add
mov
add
test
in
lods
add
mov
add
push
addl
cmc
jp
mov
add
into
add
push
jle
test
sub
pop
xor
push
ror
shr
pop
mov
push
lea
pop
add
push
add
shr
pop
pop
pop
push
xor
add
pop
pop
push
shr
shl
pop
pop
push
pop
leave
push
push
push
push
push
call
add
add
out
xchg
add
out
mov
add
pop
push
push
xchg
out
add
add
cmpsl
add
mov
push
add
add
add
or
push
add
sub
add
inc
pop
push
push
rol
add
pop
mov
push
push
push
push
push
call
in
mov
mov
add
test
test
add
jno
stc
mov
lret
icebp
fmul
rorb
mov
idivb
mov
add
add
leave
jge
sahf
add
add
out
add
jbe
add
sub
pop
push
push
push
call
add
fdivrs
frstor
add
mov
popa
jge
mov
pop
xchg
add
lcall
add
sub
fwait
add
jo
add
add
pusha
cltd
add
pop
add
sub
pop
push
push
shl
not
pop
push
push
not
pop
mov
push
push
lea
push
push
push
push
push
lea
push
call
add
add
into
aam
addl
out
icebp
add
mov
ja
into
add
mov
rclb
add
add
mov
andb
test
mov
mov
jb
add
aad
jecxz
ljmp
movsb
into
add
lcall
adc
ret
loopne
fwait
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
scas
add
icebp
add
loopne
add
mov
clc
add
add
into
into
mov
pop
add
lret
lcall
sub
pop
test
je
mov
push
pop
test
je
push
lea
push
push
call
scas
loope
add
pushf
xchg
sti
mov
pop
test
add
add
lea
add
ret
lret
rolb
xchg
je
ja
add
add
add
add
mov
test
add
enter
add
add
pop
addr16
enter
in
hlt
pop
mov
mov
push
inc
inc
dec
pop
mov
push
push
push
push
push
push
call
add
pop
add
pop
add
push
stc
mov
in
lcall
outsl
xlat
jnp
add
jecxz
add
add
push
add
add
lcall
cmp
je
push
sub
pop
test
je
mov
push
push
push
push
push
push
lea
push
push
call
mov
sahf
mov
sti
mov
shrl
xchg
push
jns
add
pushf
fsubs
add
mov
sub
pop
inc
cmp
je
push
lea
add
shr
pop
test
jne
xor
push
push
push
call
mov
add
shl
add
pop
push
push
add
sahf
out
add
into
mov
leave
jecxz
subl
mov
rorb
push
jle
add
filds
add
or
lcall
lcall
push
push
push
push
push
push
push
call
int3
test
push
add
add
outsl
xchg
hlt
pop
add
into
add
movb
mov
rolb
add
mov
add
out
add
mov
add
jnp
lds
out
aad
add
les
push
ror
rol
sub
rol
pop
pop
push
add
pop
pop
leave
push
push
push
call
add
jp
add
gs
pop
cmc
cwtl
roll
in
stc
jae
push
iret
add
add
mov
add
add
add
add
idivb
movsl
mov
sub
pop
ret
push
inc
xor
rol
pop
mov
push
inc
not
add
rol
pop
inc
push
push
call
mov
popf
add
add
add
iret
enter
mov
in
mov
add
out
xchg
add
add
add
jns
scas
jne
add
sub
pop
cmp
jne
lea
push
sub
ror
pop
mov
push
not
ror
add
pop
test
je
push
rol
pop
mov
add
push
sub
lea
pop
cmp
jne
mov
push
shl
pop
test
je
push
push
lea
push
push
lea
push
push
push
call
iret
pushf
add
add
in
pop
add
add
test
mov
aam
movsl
fistpl
pop
lret
mov
pusha
ja
add
pop
lret
sti
loop
bound
mov
cmpsb
add
out
mov
add
fisubrl
sub
lcall
callw
ljmp
pop
pop
add
cmp
je
push
push
push
lea
push
push
push
lea
push
call
out
in
in
add
add
call
push
add
mov
pop
mov
lahf
pop
aad
mov
add
add
jge
movsb
add
add
sub
pop
jmp
push
lea
shl
pop
xor
push
push
push
call
jno
xchg
pop
add
fcoml
xchg
aad
nop
lret
add
push
mov
addb
add
mov
mov
in
hlt
lcall
push
ror
xor
pop
pop
push
not
dec
pop
pop
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
filds
xchg
mov
add
add
add
cltd
xchg
add
add
mov
add
jecxz
xchg
cld
in
mov
jae
mov
ja
add
leave
add
mov
jae
add
lea
sub
pop
leave
push
sub
add
add
rol
pop
ret
push
lea
push
push
push
push
push
push
push
push
call
add
pusha
add
push
jo
add
movsl
add
add
add
add
add
roll
mov
add
mov
cld
add
repnz
add
movsl
incb
add
mov
lea
lret
nop
add
add
je
fsts
push
add
add
add
inc
call
dec
rol
pop
pop
pop
push
ror
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
loope
xchg
loope
cmpl
add
add
add
add
add
jno
out
add
add
add
jb
add
push
je
add
jp
add
imul
mov
je
mov
lret
add
mov
lcall
push
push
lea
push
push
push
push
call
shrb
xchg
pop
jle
add
jnp
popa
movsb
add
push
push
rolb
scas
shrb
add
add
add
add
push
in
mov
add
add
mov
shrl
push
sub
pop
leave
push
push
push
call
xchg
pop
sbbb
xchg
jl
add
lcall
aam
add
into
std
jns
les
mov
sbbb
jns
pop
scas
mov
out
add
test
add
sahf
repnz
into
mov
add
add
or
mov
push
lea
push
lea
push
push
push
call
into
add
roll
add
xchg
lea
mov
add
add
test
int
add
add
xchg
faddl
mov
add
mov
mov
mov
jecxz
add
add
in
add
add
pushf
sub
pop
pop
push
not
pop
pop
push
shr
shl
inc
xor
pop
pop
push
shl
pop
pop
push
rol
inc
pop
leave
push
push
push
push
lea
push
lea
push
push
push
call
leave
scas
add
xlat
add
nop
add
pusha
rolb
jns
add
stos
mov
xchg
add
not
add
stc
subl
cwtl
push
fildll
add
add
add
lea
fisttps
into
mov
mov
lock
jno
xchg
add
add
in
jb
add
in
loopne
ret
cmp
leave
mov
xor
mov
mov
into
mov
ror
mov
mov
mov
icebp
lret
add
mov
xchg
lret
or
xor
mov
add
add
push
push
div
imul
fdivrl
or
mov
sarl
push
jnp
mov
push
push
mov
lods
movsb
push
cwtl
dec
inc
xchg
roll
jnp
pop
iret
add
ret
fmulp
adc
pop
iret
dec
cmp
push
leave
pop
rcpps
lcall
add
add
lods
dec
push
push
mov
jl
bound
inc
cmp
jo
pop
jns
popa
adc
iret
mov
lods
or
jmp
lods
lock
xor
adc
aam
jae
push
and
or
xor
add
fdivp
and
jnp
mov
jo
cs
or
and
sbb
push
in
iret
popf
and
mov
dec
ret
in
push
test
mov
jno
adc
jne
inc
cmp
in
call
sbb
mov
movsl
int
int3
dec
rcrl
mov
mov
test
loope
sti
pop
fstl
and
in
clc
imull
fcoml
cmp
js
mov
rcr
sbb
push
mov
mov
fs
notl
add
mov
out
pop
cmpxchg
adc
orb
nop
sbbb
sbb
ret
xchg
outsl
jmp
lods
test
dec
mov
lods
pop
shll
xchg
jae
insl
cmp
in
or
adc
scas
ljmp
pop
repnz
shl
dec
lock
fildll
jno
dec
ds
jmp
lock
lea
mov
jle
lret
enter
jge
out
xchg
or
jbe
imul
int3
cld
mov
inc
je
xor
lcall
out
sbb
and
fwait
aaa
inc
sub
loop
pop
xchg
divb
xor
jg
imul
repz
dec
dec
es
pusha
scas
mov
cmp
mov
gs
lahf
jo
ss
sbb
or
dec
mov
cmp
jb
sub
int3
fildl
int
dec
xor
mov
push
cltd
outsl
xorl
dec
xchg
ljmp
or
loopne
pop
add
rorl
out
fwait
xchg
sahf
sub
outsl
xchg
out
in
mov
add
xchg
or
add
call
aas
fldl
jae
xor
loop
in
jg
xor
lret
sahf
in
xor
insl
adc
push
ret
sahf
sahf
imul
data16
stos
mov
les
fsubl
flds
mov
repz
sbb
lock
aad
ds
in
stos
sar
pushf
inc
stos
add
and
bound
push
pushf
lret
and
jne
out
jge
push
inc
adc
push
inc
aad
les
push
pop
xchg
push
mov
outsb
dec
push
xchg
push
mov
rcr
dec
adc
idivl
nop
mov
jg
sub
mov
stos
mov
movsl
jo
mov
adcb
sub
loope
testl
sti
mov
out
add
sbb
call
es
clc
into
jne
dec
cli
jmp
insb
adc
in
xchg
out
dec
loop
rcr
std
insl
sub
fsubp
lcall
scas
outsl
jno
dec
pop
cmp
adc
inc
sbb
xor
shll
andb
or
mov
data16
fldt
adc
leave
imul
in
sbb
sbb
adc
pop
out
in
insb
shrb
enter
xor
push
push
sub
movsl
dec
std
sbb
sbb
imul
lea
sub
call
xchg
fwait
sub
mov
dec
fisubl
incl
mov
push
xor
and
lcall
int
mov
sbb
mov
ss
sahf
iret
sbb
out
test
mov
and
cltd
sbb
test
nop
repz
adc
in
lods
cmpsl
adc
in
sbb
gs
es
or
mov
dec
cwtl
cmp
aaa
mov
outsb
lods
or
imull
xor
cmp
mov
test
or
cmp
pop
aas
cwtl
lods
xor
mov
and
ljmp
and
and
imul
push
or
jb
mov
lods
mov
lods
push
and
xor
sti
nop
inc
sub
adc
fidivs
adc
outsb
xchg
xor
leave
jle
xor
cmp
fwait
push
pop
mov
in
icebp
mov
repnz
cld
daa
xor
out
les
inc
dec
dec
shr
add
fnstcw
mov
xlat
insb
ja
lea
ljmp
lret
inc
pop
mov
ss
xor
loopne
push
dec
pop
loope
outsb
mov
sub
jno
xorb
aad
fisubs
fwait
hlt
out
lods
lahf
and
fs
push
movl
sub
mov
loopne
push
insb
outsl
arpl
pop
pop
cmpsb
mov
test
es
neg
xor
jae
pop
adc
jno
in
push
add
lods
add
into
aad
ja
jno
xlat
leave
loopne
sub
xor
dec
push
push
insb
lcall
gs
add
sub
and
mov
jno,pt
jg
shlb
enter
or
insl
mov
pop
add
stos
push
sub
mov
inc
sbb
stos
mov
xchg
jmp
ds
gs
popa
sub
mov
push
and
popa
mov
and
sub
sbb
inc
xchg
lahf
xor
cmc
adc
loope
int3
sub
inc
xorb
mov
pop
dec
add
push
cmp
lock
mov
push
out
loop
mov
dec
js
inc
mov
test
jae
mov
lods
insb
aam
fiaddl
inc
sbb
or
bound
cltd
mov
adc
shlb
sbb
mov
jne
loop
cld
repnz
xchg
inc
sbb
sub
popa
sbb
lock
add
inc
ret
pop
pop
xor
les
daa
call
imul
int
ret
or
inc
cmc
and
movsl
cmpsl
mov
xchg
sub
mov
icebp
mov
inc
out
push
fsubs
jg
pop
mov
aas
cmp
mov
sahf
xchg
jmp
cmp
cmp
not
out
pop
mov
shrb
cmp
fmuls
roll
test
iret
scas
icebp
push
or
repz
ds
jecxz
dec
inc
lcall
push
mov
or
andnps
shl
iret
and
out
aad
push
add
sarl
jno
pop
lods
cmc
jp
xor
jge
mov
sahf
push
mov
fcmovnbe
scas
and
shlb
jge
adc
outsb
xorb
jno
les
xor
dec
pop
out
mov
lea
jb
mov
sbbl
adc
in
lods
outsb
cvtdq2ps
add
ljmp
clc
stos
lods
xor
add
mov
xchg
xor
push
imul
repnz
cmp
lea
wbinvd
jns
lock
lds
jg
out
mov
or
cmpl
daa
call
mov
inc
cs
inc
mov
xchg
mov
mov
add
addb
xor
pushf
inc
push
jns
or
fldt
lret
mov
or
sbb
mov
cld
test
fcompl
mov
inc
popa
push
xchg
pop
adc
sub
pop
jmp
sub
push
mov
xor
decb
lret
out
and
lret
and
dec
push
pop
dec
idivb
xchg
cmpsb
push
mov
popa
enter
or
decb
insl
into
mov
dec
mov
ljmp
inc
push
or
fstps
lods
dec
push
xor
push
aad
sbb
lods
testb
ljmp
mov
or
or
adc
ljmp
xchg
fldcw
sbb
cmp
xor
lds
fldpi
mov
pop
mov
arpl
popf
cmp
jne
lds
push
test
mov
push
xor
popf
sar
or
mov
hlt
jp
cmp
cli
inc
sub
mov
js
rorb
xchg
lods
xor
pop
cltd
nop
jmp
inc
in
mov
mov
add
ja
aam
es
inc
imul
fabs
lock
or
popf
sbb
mov
pop
movsb
mov
inc
cld
cmp
xchg
and
lock
mov
in
sub
mov
xor
stos
int3
rcrb
outsb
not
lret
pop
les
adc
push
out
imul
leave
iret
xor
xlat
int3
aam
cs
outsl
repnz
aas
in
fwait
push
lds
inc
xchg
mov
scas
and
sub
mov
jl
pop
ja
iret
ficompl
aad
fmulp
adc
xchg
inc
repz
add
sub
enter
jmp
adc
pop
push
lret
ds
sbb
mov
dec
or
js
inc
dec
iret
fsts
mov
sub
add
in
cs
test
lret
jno
imul
and
mov
pop
clc
dec
pop
enter
int
ret
mov
or
push
and
roll
jns
jmp
jmp
xchg
in
movsb
xchg
push
pop
mov
je
cmp
out
aam
lods
cmp
inc
jg
mov
xchg
dec
shl
sub
pop
mov
jmp
pop
movsb
mov
mov
out
div
inc
or
loopne
jg
cmp
add
jo
inc
sbb
xchg
lahf
add
mov
jno
push
xchg
aam
push
and
insl
xchg
insb
das
mov
hlt
hlt
mov
cmp
rcrl
rcll
fstl
stc
imul
outsl
fwait
mov
adc
inc
inc
cmp
jno
add
lods
cmp
in
dec
add
mov
xchg
and
shlb
daa
ffree
dec
lret
lcall
pop
pushw
mov
jle
cltd
push
sti
outsb
cld
add
ret
or
scas
fucomp
jmp
inc
xchg
cwtl
arpl
or
jne
ja
mov
and
pop
xor
ja
movsb
cmp
xor
lods
mov
pop
jmp
push
cmc
lods
shl
cmp
lods
xchg
ret
push
pushf
push
lock
enter
pop
add
popf
std
mov
and
mov
and
xor
and
push
mov
xchg
jmp
xor
xor
sbb
pop
sbb
sub
mov
jmp
lret
iret
movsb
jl
stc
cli
cld
dec
jecxz
adc
cmpsl
repz
lods
aas
sbb
pop
rorl
jmp
into
mov
add
pusha
out
leave
mov
or
add
insb
iret
add
xor
or
xchg
and
xor
outsl
pop
lods
pop
fwait
push
xchg
adc
adc
mov
or
add
scas
cmp
js
out
jbe
jno
mov
insl
mov
sub
lods
dec
mov
cld
jl
push
push
jge
mov
xor
insl
mov
jne
repnz
stc
or
imul
mov
shrb
pop
pop
mov
cwtl
out
mov
xchg
pop
stc
and
stc
sbb
push
adc
das
clc
cmp
es
push
pop
fstp
mov
adc
scas
xor
mov
adc
cmp
test
in
mov
sbb
out
js
sbb
jae
gs
ja
mov
pop
inc
in
imul
xchg
repz
icebp
insb
sbb
mov
decb
and
inc
popf
push
xchg
push
dec
cmpsb
jg
popa
dec
dec
popf
mov
mov
cli
jge
adc
mov
std
dec
out
cmp
jl
and
movsl
aas
mov
xchg
cmp
add
xchg
bnd
lret
or
icebp
rorb
and
or
sbb
mov
and
out
push
xlat
das
aam
jmp
test
pushf
out
iret
or
cmp
leave
out
mov
clc
xor
inc
push
fwait
insb
repz
push
cmpsl
add
sbb
leave
inc
ret
mov
nop
pop
sbb
dec
xor
out
or
add
inc
popa
hlt
pushf
mov
cmp
imul
push
adc
fcoml
imul
fcompl
and
dec
repnz
sub
mov
xchg
jns
lret
popa
faddl
cli
hlt
je
dec
std
pop
sub
scas
fiadds
and
movsl
mov
std
and
adc
xor
out
or
dec
js,pt
mov
jbe
xchg
or
xor
popf
int3
cmc
mov
xor
mov
in
shrl
imul
fmull
daa
aam
xor
or
daa
or
sbbl
hlt
jecxz
out
xor
mov
ljmp
dec
aad
or
jg
fiaddl
loopne
cmpsb
push
ds
add
cmp
mov
aam
addr16
arpl
mov
scas
imul
cmp
loop
sbbb
std
insb
pop
dec
aaa
inc
ja
aad
lret
cmp
xor
dec
lods
rcrl
out
sbb
pushf
addr16
cmp
loope
mov
pushl
jb
xlat
and
jg
scas
cmpsb
fcmovb
outsl
sbb
sbb
xor
lcall
dec
jl
xchg
test
mov
jno
ficomps
outsb
mov
cmp
fmull
dec
mov
ficoms
insb
outsb
aas
pop
lret
ret
xchg
cmp
and
into
and
jl
lret
xchg
jg
adc
lret
ja
inc
test
pop
inc
jbe
xlat
rorb
or
and
jnp
cmpsl
fmuls
jbe
adc
sub
push
sbb
leave
test
lods
lret
pusha
mov
adc
or
aad
and
ljmp
push
inc
popf
push
add
js
outsb
mov
push
ds
repnz
push
lcall
js
and
shll
mov
das
loopne
mov
das
push
adc
mov
test
lahf
fsubrl
sbb
stos
add
adcl
xorb
subb
sub
mov
gs
inc
rclb
ljmp
pushf
addb
lret
fstps
push
add
dec
dec
adc
push
sub
or
or
fistpl
xchg
pushf
and
pop
jecxz
dec
mov
ljmp
ret
insb
dec
es
mov
xorb
pop
into
sub
out
iret
jle
mov
lret
fidivrs
pushf
lahf
scas
mov
repnz
push
lds
or
xor
data16
dec
stc
dec
mov
lock
xchg
jmp
aam
mov
imul
inc
push
mov
sub
lcall
pop
dec
push
jne
push
mov
into
sub
push
adc
movsl
call
mov
push
push
push
clc
dec
icebp
aaa
lcall
jb
call
jno
xchg
ror
cmpl
je
in
stos
stc
or
pushf
loopne
add
xor
test
cld
dec
int
je
fdivrs
push
addl
pop
insb
push
sti
mov
jle
or
insb
daa
insl
adcl
cmpb
and
scas
mov
push
lret
pop
out
sub
sbb
push
inc
push
call
sahf
and
pop
jns
xchg
aam
xchg
jmp
pand
ss
andb
mov
loopne
iret
xor
imul
test
arpl
sarl
xor
mov
cmp
aad
mov
mov
mov
add
lret
sbb
cmpsb
in
sbb
into
jo
mov
pop
aad
mov
push
ss
jge
pop
jae
mov
xchg
dec
out
imul
ficomps
js
in
sbb
xor
xor
icebp
push
mov
push
mov
les
add
cmpsl
mov
adc
jge
clc
inc
lea
lock
dec
sub
ss
add
push
fwait
jo
mov
test
leave
das
push
inc
dec
or
add
inc
push
out
test
jne
ds
dec
bound
jno
popa
sbb
pop
and
jge
les
int3
mov
test
cbtw
call
nop
popf
mov
or
mov
push
or
adc
cmp
ljmp
dec
out
decl
inc
lea
andb
daa
lods
cmp
mov
movsb
popa
xchg
pop
loop
out
repnz
adc
xor
inc
push
xor
mov
popf
mov
aam
outsb
dec
push
pop
cmp
sub
mov
sub
rol
iret
pop
ja
in
jo
dec
jbe
insl
cwtl
push
add
ds
sub
xor
xorb
aas
sub
dec
or
in
or
or
mov
jo
sbb
and
dec
cwtl
mov
adc
mov
xchg
adc
andl
gs
jecxz
repnz
xor
xchg
sub
mov
ret
std
outsb
or
adc
sub
lds
loopne
and
aad
out
cli
out
out
push
mov
stos
testl
std
xchg
fisttpl
ficoml
push
call
lcall
mov
and
divl
popf
push
sti
pop
test
mov
lea
fisttps
insl
add
xchg
cs
cld
popf
shrb
dec
xchg
in
mov
jge
mov
fidivrs
inc
sbb
xor
outsl
js
push
jg
mov
movsb
mov
daa
std
push
pop
fcoml
dec
pop
test
or
clc
fs
add
or
add
into
cmp
test
insb
push
ljmp
rcrl
les
adc
stc
daa
scas
mov
sub
cwtl
and
jp
gs
fstl
mov
stos
loop
cmp
cld
les
cmp
or
testl
pop
dec
test
add
sub
mov
popf
bound
nop
fwait
xchg
xor
fdivrs
and
pop
std
lcall
dec
push
cmpsl
iret
jge
ficomps
mov
jne
ss
jbe
std
adc
sbb
mov
mov
in
int3
in
mov
xor
add
jne
addr16
jne
leave
pop
dec
fiadds
jno
add
or
jg
dec
loope
orb
lea
arpl
out
push
imul
jge
aaa
inc
mov
test
dec
sbb
cmp
fildll
dec
cwtl
mov
arpl
pmaxsw
sbb
ret
pop
ficomps
loope
cmp
jmp
into
push
fsubrs
pop
dec
nop
int
push
cmp
jnp
jnp
push
jmp
jo
dec
and
int3
iret
pop
movsl
scas
arpl
test
inc
dec
ljmp
out
in
lret
adc
icebp
repz
iret
in
and
mov
cmpsb
mov
inc
cltd
js
leave
pop
unpckhps
sahf
test
loope
lea
lcall
stos
divb
or
and
cmp
mov
lea
or
sahf
adc
movsl
and
or
mov
xchg
popw
dec
push
push
jp
jl
sbb
cwtl
fs
lret
pop
into
cmp
add
jmp
fists
sub
adc
outsl
xor
popf
repnz
xchg
divb
lcall
test
mov
fmul
int
test
fildll
add
fisttpl
push
xor
icebp
push
jbe
pop
movb
pop
icebp
inc
sahf
jecxz
imul
push
fdivr
xchg
fistl
cmp
pop
int3
test
in
rorb
lret
daa
sti
repnz
sub
outsl
bound
mov
dec
sbb
mov
pusha
hlt
fsubrl
dec
jle
stos
jne
inc
shld
hlt
dec
insb
clc
fs
pop
inc
stos
arpl
lahf
push
mov
xor
lea
push
add
mov
push
xlat
fwait
stc
testl
push
das
test
mov
cli
adc
pop
mov
sbb
in
sub
xchg
stc
or
das
push
insl
insb
sbb
arpl
mov
jecxz
xchg
ja
adc
les
or
jb
pop
test
sbb
fimull
pop
cmp
push
pop
or
inc
cs
mulb
jno
rorb
ds
fstp
movsb
pop
mov
xchg
push
and
pop
inc
push
xor
aam
and
sbb
ror
sahf
add
loop
cmpsl
gs
cmp
or
les
sub
bound
out
es
adc
mov
cli
mov
hlt
adc
sbb
cmp
mov
xor
add
and
adc
out
stos
test
movlps
dec
mov
xor
int
enter
add
xchg
dec
mov
inc
push
dec
out
mov
add
mov
mov
cmp
dec
xchg
jbe
scas
fldenv
sub
pop
lods
nop
and
mov
dec
dec
jbe
pop
or
lret
ret
or
mov
enter
loope
jns
or
dec
fwait
lock
dec
push
aaa
fwait
sub
shll
sub
mov
sbb
arpl
rcr
jp
iret
js
push
inc
sub
shll
sub
push
mov
jb
xchg
adc
mov
lds
mov
push
push
jno
push
sub
pop
add
loop
in
inc
daa
popa
xchg
test
push
add
dec
jns
mov
xchg
jno
mov
mov
ja
and
ror
mov
inc
shll
jl
fdivl
ja
in
mov
jmp
rorl
leave
pop
or
iret
out
fisttps
adc
push
into
popf
scas
mov
rol
dec
or
lods
pop
cwtl
mov
bound
jne
ss
xchg
add
jecxz
cmp
jecxz
cli
sbb
imul
cltd
call
jp
cmp
ja
sbb
xchg
inc
jbe
push
xchg
add
repz
cmp
cmp
sub
ja
out
roll
dec
insl
adc
outsl
insl
jne
sub
sbb
mov
adc
and
mull
xor
jecxz
and
test
add
ss
cmp
out
xchg
push
push
inc
cltd
pop
adc
std
clc
add
mov
pop
test
sub
add
out
mov
or
adc
fs
outsl
add
leave
xor
sbb
push
lahf
push
ja
dec
mov
test
mov
hlt
test
sar
rol
jne
push
push
mov
inc
in
inc
es
fnsave
push
insb
test
andb
les
jge
inc
mov
xor
push
pop
fnsave
mov
test
in
iret
cltd
pop
dec
insb
loopne
test
daa
ret
in
or
mov
cmp
dec
pop
or
xchg
loopne
ficoml
add
popf
inc
pop
arpl
adc
out
cs
push
loope
mov
adc
mov
jl
gs
add
cmp
test
xchg
mov
adc
mov
sbb
sub
sub
into
add
ss
pop
sub
pop
jg
aad
test
jp
cmpsb
cmp
push
add
ret
push
or
scas
loop
fs
and
dec
pop
cmpsl
fisubrs
dec
push
cld
xor
mov
in
dec
lock
shrb
icebp
repnz
mov
push
scas
lret
add
outsl
ror
lret
push
and
icebp
pop
push
push
movsb
pop
dec
inc
scas
mov
scas
mov
fnstenv
xor
ret
cmp
xlat
mov
js
sbb
push
addr16
out
mov
fstl
mov
push
cld
hlt
xor
or
aam
jns
pop
mov
push
cmp
push
add
dec
andl
lahf
and
dec
pop
das
or
fnstcw
sti
es
xchg
dec
fcoml
cld
ds
xchg
enter
pushf
and
cld
mov
popf
cmp
enter
mov
xchg
push
lahf
jb
add
gs
test
ss
jo
push
sub
pusha
push
cli
adc
cmp
inc
and
and
rcrb
xor
or
lock
jecxz
xchg
data16
cmp
mov
sar
dec
mov
arpl
movsl
adc
push
lret
pop
xor
stos
jb
in
icebp
pop
push
fcomps
rclb
out
call
mov
int
adc
jge
mov
fmull
add
ret
mov
fiadds
imul
mov
inc
pop
cmp
sbb
je
movsb
into
lret
push
or
pop
and
sbb
mov
shrl
jle
mov
test
sub
or
push
cmpb
cmpsl
lods
je
scas
lock
cmpsl
cwtl
loopne
mov
call
push
int3
or
mov
stc
into
and
out
lret
lret
mov
cmc
cmpsb
scas
loope
xor
mov
and
jbe
mov
fildl
cmpsl
mov
repnz
or
sbb
and
sub
popf
dec
adc
int3
cmp
ja
addr16
jnp
mov
sbb
aad
jge
mov
inc
fldln2
test
shrb
repz
je
test
push
pop
dec
ss
aad
dec
scas
fmuls
cmpsb
mov
sbb
sahf
jmp
and
pop
push
repnz
mov
push
mov
arpl
out
sbb
roll
mov
clc
test
sbb
sub
push
cli
adc
mov
movsl
xor
add
xor
shrb
notb
jle
adc
dec
imull
aaa
inc
adc
add
das
repnz
xor
movsl
das
add
jns
cmp
add
mov
sbb
std
add
das
inc
mov
xlat
inc
loop
xor
pop
lret
stc
push
fdivrs
push
xor
jo
adc
dec
test
or
sub
or
adc
jp
test
adc
dec
cmpsl
ljmp
inc
loop
scas
mov
nop
xchg
loopne
test
jmp
cs
mov
ljmp
mov
mov
push
fwait
push
mov
pop
out
mov
test
push
mov
mov
xor
sub
dec
pusha
es
sahf
mov
das
pusha
pop
out
sub
aas
pop
jb
push
push
xor
cltd
fdivr
ds
push
pop
or
stos
nop
cmp
sarb
push
mov
sbb
push
jp
pop
std
leave
bound
gs
mov
les
shlb
aaa
adc
cmp
jno
pop
in
movsl
cs
and
dec
sbb
dec
out
pusha
pushf
push
adc
push
mov
push
pusha
jbe
mov
movl
mov
mov
sub
jne
inc
cwtl
cmp
pop
mov
fisttpl
rcrb
push
xorb
cmpsb
xchg
pop
in
or
mov
inc
sub
in
fildl
and
arpl
lods
inc
popf
cld
push
sbb
cmpsb
scas
add
fsubrs
push
sbb
sub
mov
jne
adc
fdivrl
dec
pop
out
mov
xor
jmp
int
je
ss
push
sbb
sbb
jo
movsl
test
lcall
pop
es
ss
and
and
popf
and
pop
jb
push
pop
mov
adc
leave
wrmsr
pop
sbb
fs
sbb
nop
scas
popa
push
popf
test
cmp
sbb
mov
fimull
aad
dec
bound
repnz
mov
or
mov
dec
aas
push
xor
and
sub
sbb
add
repz
fistl
lret
mov
div
push
sub
lahf
lock
push
outsb
leave
in
cmpsl
hlt
sub
push
dec
jmp
cli
mov
mov
ret
clc
adc
mov
push
xchg
ja
and
add
dec
jg
fsubs
insb
jle
icebp
mov
and
mov
push
pshufw
mov
in
arpl
lods
mov
add
loop
cwtl
stos
lea
dec
je
mov
and
arpl
cli
lods
test
in
mov
and
and
outsb
hlt
testl
rolb
sti
shl
repnz
sub
mov
adc
ljmp
in
pop
pop
jo
or
call
inc
mov
xlat
fimuls
mov
lret
fildl
adc
mov
fistpl
mov
and
xor
jo
jp
cmc
push
movsb
jne
push
or
adc
andl
pushl
lea
or
stos
push
push
sahf
insb
or
jne
pop
fildl
bound
int3
ficoml
js
sbb
icebp
cs
push
leave
xor
scas
repnz
xrelease
jns
rol
push
fucomip
add
and
mov
int
scas
lcall
jp
lock
das
stos
outsb
popa
sbb
inc
addb
nop
enter
jo
ja
clc
mov
mov
js
xor
das
mov
jae
xor
test
push
dec
mov
aas
stc
popf
xchg
jge
std
pop
out
bound
dec
dec
imul
dec
nop
xor
outsb
pop
pop
popf
and
imul
pushf
mov
adc
and
and
push
mov
daa
or
pop
pop
cmpsl
add
nop
aas
sti
sar
and
sbb
negb
jnp
lcall
dec
sub
lods
xchg
decb
jbe
cmpb
testb
loopne
xchg
xorl
mov
testb
xorb
adc
outsb
push
ss
mov
je
jae
adc
fsubrs
adcb
mov
fstl
mov
andb
fwait
aam
and
xchg
loop
jg
xchg
std
popa
out
or
cli
xor
test
lret
shrl
bound
leave
add
mov
es
es
xchg
cmc
xchg
push
sub
adc
and
sub
xor
inc
jmp
loope
pop
sarb
mov
and
inc
push
sub
lods
outsb
and
das
jae
cmp
mov
dec
das
xchg
movsl
sahf
inc
adc
pop
push
and
pop
mov
xchg
arpl
and
mov
push
insb
gs
loope
dec
gs
jle
jmp
lods
xor
cmp
mov
loopne
cmp
arpl
jmp
dec
xor
mov
in
xor
pop
inc
inc
rcrl
xorl
jecxz
push
js
add
inc
lods
js
lds
jp
flds
mov
mov
cmc
xor
inc
loop
scas
or
inc
pushf
xchg
imul
pop
mov
and
dec
xor
out
cs
xlat
aad
insl
movsl
xor
jo
shr
and
push
push
pop
sahf
adc
dec
and
and
mov
lds
cmpsl
faddl
movsb
mov
in
fidivl
and
outsl
stc
rcl
sub
in
out
xchg
dec
lcall
sahf
popa
mov
or
mov
fs
rorl
aam
xchg
not
popf
inc
fisttps
xchg
jo
loop
push
in
ret
inc
mov
xchg
inc
dec
test
leave
clc
jge
push
stos
rcrl
fists
cmp
xor
pop
dec
cli
mov
faddl
xor
or
inc
nopl
jmp
pop
pop
clc
in
xchg
add
cmpb
inc
jne
add
cmp
or
lcall
jns
push
fs
insb
cltd
add
test
cwtl
push
mov
outsb
add
outsl
fwait
stos
mov
in
aam
push
inc
lods
push
ja
jo
lds
push
jecxz
mov
in
xor
xor
fdivrl
int3
pop
xchg
xchg
mov
mov
rolb
xchg
push
ja
dec
inc
xchg
mov
mov
ret
int3
clc
movsb
mov
ret
rorl
mov
ljmp
sub
jp
jns
inc
lret
adc
outsb
loope
push
call
sub
movd
add
or
mov
mov
push
ljmp
sub
jp
mov
xorl
inc
sbbl
jmp
or
pop
xchg
add
xchg
pop
das
jo
pop
jg
push
das
and
jg
rcrl
add
shll
fadds
je
push
js
lret
pop
lea
or
jl
fcom
test
pop
xor
xchg
mov
xchg
push
mov
enter
jmp
jmp
lret
icebp
sbb
iret
outsl
sub
add
adc
and
cmpsl
movsb
popf
jecxz
incl
sub
dec
mov
xchg
pop
dec
xchg
lods
mov
mov
push
outsb
loopne
xor
leave
sub
xor
xchg
pop
rol
sub
add
test
loope
dec
div
mov
jge
add
push
call
sbb
insb
in
insb
fsub
jmp
or
jne
dec
repz
mov
mov
jne
xor
mov
add
mov
push
test
jp
pushf
mov
cli
xlat
daa
pop
mov
notl
add
cmp
xchg
or
repz
cmp
cmpsb
scas
test
mov
pop
mov
mov
ret
pop
ds
fldl
lret
adc
mov
jl
movsb
jle
shlb
aas
test
icebp
mov
jecxz
ret
adc
push
jae
xchg
xor
into
or
sti
pop
or
inc
adcl
sub
cmp
sub
jmp
jno
cwtl
jl
push
repnz
test
lods
sbb
dec
jns
cmp
cs
sub
sub
push
xor
push
dec
stos
fs
inc
and
adcb
xchg
sbb
cmp
je
addl
stc
xor
jo
aaa
add
data16
mov
lcall
push
push
shrb
dec
sbb
xchg
jmp
cmp
mov
int3
clc
loopne
inc
mov
xorl
addl
pop
mov
sar
arpl
sub
dec
xor
add
jecxz
cmp
shlb
into
mov
push
inc
pop
xchg
push
fists
ret
imul
fcomps
pop
lods
shl
and
inc
and
push
jle
fmul
sahf
shll
xor
cmp
adcl
rcrl
xchg
insb
inc
fistps
mov
adc
sub
xchg
adc
nop
xorb
dec
push
xor
push
inc
hlt
jno
out
sub
adc
scas
inc
adc
scas
adc
and
insl
pop
or
rcrl
dec
mov
roll
dec
mov
mov
mov
daa
mov
or
sbb
jb
push
sbb
stc
popf
sub
les
push
out
in
dec
xchg
pop
or
jnp
das
mov
or
xchg
cmp
mov
xor
sub
roll
inc
fs
daa
cmp
mov
icebp
jo
loop
add
sub
ss
sbb
fwait
or
rolb
ljmp
push
jp
js
mov
fidivrs
out
or
jecxz
dec
fisubrs
push
je
xor
mov
test
fnstenv
mov
dec
jle
inc
popf
cmc
pop
sbb
shrl
sahf
inc
sahf
xchg
dec
lret
imul
pop
sbb
loopne
add
dec
popa
push
clc
mov
mov
decb
inc
lods
call
sbb
sti
mov
add
pop
mov
stos
jns
pop
mov
mov
aam
insl
pop
inc
mov
ja
cmpsb
nop
inc
xchg
xchg
jmp
sti
mov
gs
xchg
out
in
push
or
cmp
leave
es
bound
push
mov
jb
test
add
cmp
out
dec
pop
mov
cli
ja
loop
in
aaa
repz
xchg
dec
fdivrl
add
ret
test
mov
fwait
sub
xchg
scas
pop
cwtl
adc
xchg
stos
rcrb
sub
fcoms
mov
popa
cmp
inc
test
sbb
pop
int3
push
mov
xor
ud1
mov
cmc
sbb
or
lret
mull
sarb
mov
sub
mov
sbb
xchg
sbb
push
add
ljmp
cwtl
dec
push
cmpsb
add
popf
shll
std
ja
les
or
hlt
push
jmp
imul
and
inc
inc
add
push
lcall
ud1
jl
pop
xchg
adc
mov
dec
cmp
repnz
dec
mov
outsl
shrl
lods
pop
inc
test
movsb
sub
push
inc
ds
mov
inc
adc
in
push
mov
ds
aam
inc
dec
scas
cmp
popa
mov
aam
pop
shlb
popa
cmp
movsl
cwtl
adc
or
jg
lcall
fwait
sub
jmp
xor
cmpsb
cmp
pop
sahf
ret
call
imul
andl
mov
inc
ljmp
sbb
aas
mov
adc
or
jb
jne
jbe
dec
das
adc
push
enter
stc
and
inc
shlb
test
inc
mov
mov
inc
adc
mov
xchg
mov
lret
cwtl
xor
adc
xchg
sbb
loop
dec
adc
aam
inc
sub
add
aad
in
add
sub
cmc
pop
insl
lea
mov
iret
jnp
cmp
sbbl
addb
cmp
data16
mov
cmc
cmp
xchg
loope
xchg
jle
inc
stc
insl
adcl
lahf
sbb
mov
cld
jg
xchg
decb
dec
aam
fildl
cs
sub
enter
popf
loop
sub
xchg
cmpsl
out
sub
int3
dec
mov
cmp
push
pop
out
cwtl
movsb
shl
iret
lea
pop
movsb
in
stos
dec
adc
mov
mov
sti
fsts
inc
mov
xlat
mov
xchg
jge
movsl
test
mov
and
push
jmp
fcoms
out
mov
push
xor
mov
cld
andb
ja
or
mov
les
test
jns
es
jmp
sbb
inc
adc
xor
xchg
pop
mov
pop
xchg
pop
push
lods
aaa
xchg
loopne
hlt
cmpsl
sti
incb
jbe
mov
mov
in
cmp
xor
shll
jg
and
shrl
xchg
hlt
rcr
cltd
enter
fdivrl
add
cmp
jno
insl
lods
cmp
pop
sbbb
rcl
call
mov
push
push
mov
dec
add
dec
sub
fstl
push
mov
sbb
and
rclb
dec
mov
sbb
cmp
cli
adc
pop
pop
push
test
loop
dec
lea
xor
aaa
mov
xor
xorl
aas
sub
jns
add
cmc
mov
or
arpl
rcrl
cwtl
aad
xchg
fdivrp
lock
orl
inc
cmp
xorb
inc
fldl2e
call
lea
or
mov
arpl
pop
xor
jae
popf
mov
in
adcb
stc
mov
insb
stos
push
dec
fisubl
lds
mov
mov
leave
pop
fistl
mov
nop
sbb
jae
dec
push
inc
popf
cltd
push
xchg
iret
sub
or
ret
lock
jg
jo
xchg
fsts
or
sbb
decb
sbb
loope
or
mov
xor
cmp
insl
mov
lret
les
test
aad
xor
shll
into
add
mov
sahf
lss
jae
sbb
addb
pop
popa
pop
pusha
lds
sbb
adc
adc
mov
push
mov
pop
cmc
sbb
lcall
sarb
cmp
ljmp
cmp
mov
stc
das
inc
jp
iret
dec
fmull
jae
mov
es
stos
inc
mov
mov
dec
jns
stc
leave
xchg
out
lds
insb
push
sub
push
and
mov
jl
fsts
jmp
inc
mov
sbb
pop
xlat
jmp
fildl
xorb
insl
fs
push
cmp
mov
add
xchg
push
rorl
stos
jnp
dec
scas
pop
mov
dec
push
push
out
cs
divl
sub
pop
inc
imul
stos
push
jb
mov
sub
push
arpl
lret
mov
or
ss
into
sub
jae
mov
push
lock
mov
adcb
imul
aam
push
popl
add
pop
push
test
dec
std
dec
repnz
les
xlat
sbb
dec
sti
lretw
mov
push
add
push
add
out
pop
or
or
jbe
loope
into
aam
cmc
enter
mov
or
cli
addb
sub
dec
cltd
xchg
xchg
sbb
mov
and
lcall
pop
mov
mov
jecxz
stos
test
inc
jge
jae
xor
lret
les
ja
cmp
pop
clc
push
shlb
sub
push
pop
insb
out
pop
les
addb
pop
fnsave
push
adc
inc
mov
push
mov
scas
leave
mov
fwait
aad
cmp
xor
or
fiaddl
clc
cmp
inc
xor
mov
inc
outsl
cmp
jecxz
add
mov
sbb
adc
les
shll
xor
loopne
inc
sbb
sbb
push
arpl
sub
mov
sbb
mov
xchg
pushf
test
addr16
xchg
mov
mov
jne
stc
in
cmpsl
cli
out
inc
xor
adcl
rep
sbbb
dec
push
hlt
iret
scas
pop
add
jmp
sub
add
push
int
lret
out
lret
ljmp
outsb
fstpt
out
in
add
cs
out
adc
jmp
push
jl
jp
jnp
mov
ss
into
icebp
adc
mov
jne
fistpll
in
sarl
jnp
add
pop
sarb
ja
out
notl
cmp
push
jno
ret
push
adc
fwait
mov
dec
cmp
add
cmpl
jp
fildll
cs
or
movsb
add
push
mov
pop
mov
xor
test
aad
inc
dec
lcall
stos
xor
shl
movsl
mov
mov
sbb
lods
pop
jmp
lret
fistps
stc
test
out
cmp
out
lea
mov
imul
jle
mov
xchg
dec
ss
js
and
pushf
in
jmp
lea
jno
add
pop
hlt
dec
insl
add
xor
sub
ficoms
fs
scas
mov
push
or
arpl
enter
popf
xlat
sbb
push
xor
bswap
push
and
xchg
sarl
pop
icebp
sbb
cmp
sbb
or
push
push
or
dec
scas
jle
in
sub
cwtl
push
leave
pop
mov
cld
pop
popf
jg
xor
mov
cmpb
push
mov
add
cmpl
cmp
imul
add
mov
mov
mov
jns
fiaddl
pop
das
sub
push
cmpsb
sti
mov
mov
movsb
mov
les
arpl
jecxz
adc
lahf
jg
stos
popl
rorl
pusha
mov
pop
mov
adc
cmpsb
jmp
pop
test
fiadds
sbb
dec
bound
movsl
dec
subl
sub
mov
sbb
jl
sbb
xchg
out
cli
rolb
int3
inc
cmp
fbstp
push
push
cmpsl
xor
mov
push
data16
pop
pop
push
push
push
push
push
int3
aas
fiadds
popf
xlat
je
cmp
das
nop
mov
lret
mov
mov
jo
les
and
dec
cmc
jb
je
movsb
into
add
ficompl
ss
mov
add
outsl
shll
mov
and
leave
sbb
mov
pop
fmul
andl
push
adc
sbb
ret
jnp
add
andb
cwtl
and
ror
and
add
divl
ficoms
add
push
push
ljmp
jp
rcrb
lods
mov
pusha
xchg
filds
add
push
fidivrs
addl
xor
and
add
fwait
xor
jecxz
lret
loopne
add
cmp
sbb
std
xchg
sbb
pusha
fwait
add
add
scas
ret
stos
push
mov
ja
or
scas
test
outsl
or
das
dec
xchg
loope
mov
popa
cmp
aas
sbb
sti
dec
jle
outsl
and
xor
loopne
in
sbb
or
pop
mov
sbb
ja
jle
ret
test
loop
xlat
fldl
loope
adcb
repnz
gs
inc
rcr
mov
xchg
pop
push
xor
fwait
cwtl
inc
mov
mov
fimuls
fwait
add
cmp
mov
mov
sub
fwait
add
stos
shrb
cld
and
shl
orl
and
dec
dec
insb
mov
aas
dec
fsub
movsb
inc
out
nop
pusha
arpl
ds
into
and
lret
mov
jp
cmp
sub
pop
ror
push
sti
ljmp
aaa
movsb
rorl
ss
in
rcll
push
cli
mov
sbb
or
and
filds
and
pushf
or
popf
pop
pop
lds
js
sbb
mov
xchg
test
pmuludq
aam
mov
xlat
or
jns
aam
or
adc
mov
es
mov
mov
leave
mov
dec
ja
clc
icebp
push
je
push
sub
call
push
sbb
shll
xor
and
and
xchg
imul
xor
mov
xchg
int3
test
pop
mov
dec
add
jmp
sti
enter
jnp
push
cmp
mov
push
pop
pop
mov
push
aad
mov
mov
lods
ja
jmp
mov
pop
adc
hlt
pushf
outsl
mov
aad
xor
sub
fimull
xchg
sub
xchg
aad
pop
in
cli
js
push
lahf
sbb
jl
popf
pop
cmp
dec
cmp
mov
push
push
repz
sub
sti
pop
pop
lcall
mov
push
adc
out
or
mov
xor
lcall
cmpb
mov
cli
arpl
nop
js
mov
sub
fsubs
aas
lcall
insl
xor
sub
test
mov
pushf
sahf
aad
lahf
call
mov
popa
into
sbb
lds
inc
fcoml
mov
sub
or
pop
push
das
jbe
mov
inc
pop
icebp
and
insb
std
aas
xor
icebp
arpl
das
inc
aad
aam
xor
movsb
cmp
daa
pop
aam
xchg
push
inc
pop
and
pcmpgtw
ja
iret
xor
sahf
mov
mov
imul
out
in
xor
fwait
orb
fsubrp
pop
loop
cmp
xor
jno
cmp
sbb
or
jb
ret
sahf
popa
cmp
rclb
outsl
adc
lret
psllq
enter
repz
cmp
jns
mov
push
sahf
push
or
mov
sub
testb
and
jl
sub
iret
dec
dec
sub
std
hlt
jge
dec
xchg
cmp
or
add
in
mov
fidivs
xchg
cmp
push
cmp
xor
idivb
test
push
or
into
add
mov
fcoml
mov
sub
adc
jg
mov
aaa
jmp
jo
mov
outsb
repz
aaa
sub
dec
dec
sti
mov
int
es
xor
popa
sti
imul
cmp
sub
int
loope
sub
cmp
leave
or
aad
cmp
mov
adcl
xor
mov
rcrb
int3
sbb
jnp
sbb
pushf
imul
adc
addr16
divl
mov
in
fisttps
addb
loopne
pusha
lea
vfrczps
dec
in
cmp
xchg
out
in
jl
mov
into
cld
scas
jg
into
push
lea
test
rol
dec
sub
push
add
mov
jp
fisubrs
mov
ss
aaa
push
lock
in
adc
or
sbb
pop
xor
jp
add
xor
jnp
cmp
and
sbb
cmpsl
pop
dec
dec
jg
xorb
lock
enter
in
ja
out
or
jp
jmp
jmp
test
jmp
jecxz
outsb
lea
cs
mov
mov
mov
insb
not
xor
and
inc
sub
pop
lock
iret
sbb
sbb
std
scas
arpl
push
xchg
xchg
xchg
aad
add
push
imul
inc
push
pop
test
inc
adc
lods
and
mov
mov
out
cmp
out
xchg
fbstp
xlat
push
xchg
fs
insl
scas
xchg
mov
xor
stos
loope
inc
jbe
in
jo
cld
ja
push
jge
fcoms
dec
and
rclb
loop
nop
aas
jecxz
mov
mov
std
outsb
push
cmp
inc
dec
xor
or
call
faddp
push
gs
jle
xor
fwait
js
mov
push
shll
mov
jo
out
pop
ss
mov
cli
cwtl
sbb
cmpsb
addr16
ljmp
or
cmc
mov
outsb
push
mov
iret
rorb
out
inc
mov
and
push
sub
sbb
dec
cmp
sub
xchg
lods
or
mov
fcomps
stos
icebp
popf
cmp
sub
imulb
cwtl
jp
xchg
in
inc
dec
popf
xchg
push
out
mov
dec
out
and
rcrb
sub
popf
add
es
mov
xrelease
xchg
dec
push
add
loope
cmpsl
xlat
in
gs
sbb
mov
push
cwtl
xchg
mov
in
xchg
sahf
dec
das
or
sbb
and
testl
xchg
out
es
aad
adc
xor
hlt
adc
std
ret
fwait
outsl
push
imul
jno
loopne
adc
sti
stos
addl
mov
daa
andl
outsb
dec
jno
scas
decl
and
pushf
mov
xchg
je
fcompl
lahf
jecxz
popa
fsubr
and
fwait
mov
pop
test
aaa
push
push
or
cmp
aam
xlat
or
and
dec
std
sub
dec
in
pop
jae
pop
xchg
stc
outsb
shl
sbb
pop
or
or
mov
loop
jmp
jnp
jno
out
inc
fdiv
stc
data16
mov
mov
jmp
out
loopne
push
cwtl
jp
jb
nop
add
add
ja
fwait
mov
or
xlat
jnp
sub
in
xor
dec
xchg
adc
cmc
pop
icebp
repnz
lret
sbb
out
lods
sti
ss
sbb
enter
inc
cld
shll
aas
call
cld
sbb
add
jno
clc
in
mov
lret
mov
pop
xchg
movsl
jle
dec
ret
leave
inc
orb
mov
push
mov
adc
into
out
pop
fsubs
dec
int
push
mov
lcall
mov
cwtl
dec
sbb
aas
fdivrl
test
cld
loop
fcoml
stos
xor
sub
je
cld
and
mov
shl
mov
test
jl
cmp
jmp
pop
push
xor
repnz
sbb
mov
rclb
cwtl
xor
or
iret
and
cmp
inc
enter
out
xchg
mov
sarb
fs
pop
fucom
call
add
cld
outsb
cli
sbb
sbb
loope
mov
stos
stos
jle
fistl
adc
aad
mov
cmpsb
add
mov
stos
ret
mov
sub
cmp
inc
mov
loop
and
pop
mov
in
pop
mov
sub
and
fwait
jge
sub
cmp
add
adc
and
jg
mov
movsb
adc
ljmp
jns
jecxz
fadds
jmp
mov
pushf
fnstsw
xchg
loopne
insb
ficoms
cwtl
sbb
inc
fnsave
popf
cs
jae
repnz
or
dec
popf
mov
pop
out
incl
in
pushf
rcr
cmpsb
int3
mov
jg
mov
cltd
ret
pop
cmpsl
clc
imul
test
pop
adc
loopne
jge
insb
push
xor
mov
test
int
outsl
pop
mov
xor
mov
repnz
jmp
mov
xlat
dec
and
icebp
push
icebp
insb
andb
xor
sub
jno
cltd
or
mov
jne
les
xchg
lock
push
daa
ret
xchg
jo
xlat
adc
ret
cli
xchg
enter
leave
loopne
dec
and
stc
mov
pop
dec
push
js
mov
mov
fsubs
mov
mov
xchg
jno
xchg
or
ljmp
cwtl
rclb
shll
xorl
xor
push
inc
mov
ret
sbb
insb
sub
push
pushf
inc
sbb
and
cwtl
xchg
ds
pop
pop
xlat
jle
into
pop
sub
sbb
xchg
or
inc
xchg
sti
dec
cvtps2pd
fdivrl
fsub
sbb
add
dec
daa
in
shll
inc
enter
lds
lcall
mov
jo
mov
adc
nop
jp
pop
fldl
loop
ds
push
jo
push
scas
sub
popa
dec
inc
xor
push
dec
test
les
test
aas
cmp
xchg
pop
fdiv
into
mov
inc
ja
xor
call
pop
popa
pop
dec
xchg
jae
addr16
lock
pop
push
mov
addl
push
cmpsl
cmp
mov
or
xchg
into
or
add
push
dec
push
inc
in
mov
and
leave
jno
adc
cltd
jmp
jg
inc
lods
cmp
stos
mov
push
sbb
gs
cmc
cwtl
add
loopne
mov
jae
lea
jns
hlt
inc
xchg
xor
negl
jle
dec
adc
xchg
sub
cmp
push
dec
inc
cmp
cs
mov
ds
cmp
rolb
push
ja
sub
daa
add
lods
rcl
mov
mov
mov
pushf
mov
es
sub
lret
sbbb
mov
test
xor
les
stc
xor
shlb
aad
ja
or
test
cmc
data16
push
outsb
add
xor
repz
aas
inc
daa
stc
mov
mov
and
and
jo
lret
add
jo
scas
outsb
add
push
mov
jmp
arpl
pushf
lods
jns
inc
push
loopne
or
gs
xchg
lret
push
scas
subb
adc
lcall
xchg
jl
movsb
outsl
pushf
in
fstps
popaw
mov
push
or
pop
loope
aaa
sarl
mov
xchg
cmpsb
add
xchg
push
data16
shrb
in
aam
ret
add
out
in
inc
ja
sahf
int3
in
add
push
xor
cmp
notl
shlb
push
imul
data16
out
adc
push
push
xchg
mov
pushf
push
add
sbb
mov
mov
fcomps
sar
fbstp
cld
jo
mov
sub
mov
fiadds
xchg
lcall
sbb
mov
jge
sub
int3
inc
nop
lahf
push
fdivrs
std
add
icebp
sbb
mov
cmp
pop
popf
add
fucom
repnz
testl
mov
mov
push
pusha
dec
xchg
dec
mov
bound
scas
loopne
mov
jmp
cmpsl
int
jecxz
lods
sub
pop
or
jns
les
sbb
xor
or
push
mov
js
mov
xlat
push
int3
jge
pop
insl
aam
fmuls
mov
hlt
or
clc
dec
jae
push
fwait
aam
sar
cltd
ror
sub
mov
imulb
in
jnp
daa
sti
loopne
and
add
dec
adc
ds
ljmp
jno
jae
shlb
outsl
cmp
lods
js
ds
mov
out
movsl
mov
jno
mov
nop
sub
in
and
aaa
out
cmpl
jmp
dec
inc
mov
adc
sbb
cmc
lds
mov
mov
add
jecxz
daa
mov
push
xor
inc
rclb
pop
xor
iret
cmp
pusha
imul
sahf
lahf
cmc
inc
xchg
leave
lcall
cltd
dec
mov
jp
or
pop
outsl
aaa
adc
dec
nop
cli
cmp
or
cli
repnz
hlt
mov
push
cltd
mov
inc
mov
or
in
int3
mov
loop
idiv
ficomps
sbb
test
nop
inc
add
inc
jae
or
pop
push
fs
or
cmc
aad
inc
mov
cmpsl
ss
add
sahf
movsl
pop
pop
mov
in
xchg
xchg
je
rclb
fs
and
xchg
popa
imulb
nop
pop
ret
dec
cmpsl
mov
dec
testb
mov
mov
sub
lcall
mov
sbb
ret
les
in
sbb
scas
mov
in
ret
and
xchg
out
xor
addr16
sbb
loope
fdivl
mov
push
pusha
cmp
fistpll
cmp
push
jmp
adc
push
shll
mov
mov
dec
mov
xor
in
fcoml
dec
xchg
daa
push
mov
or
add
daa
out
fsubrl
adc
xchg
cld
andl
cltd
push
sbb
inc
popa
sbb
clc
lods
movsb
push
popa
test
fnstenv
push
ss
dec
aas
inc
jmp
mov
fisttpll
mov
sub
mov
imul
lret
les
dec
mov
push
inc
jle
xchg
sbb
pop
mov
xchg
rclb
pop
ja
cmp
sbb
cs
push
insl
movsl
sub
cmp
inc
test
bound
jl
fwait
jle
enter
cmp
push
mov
mov
insb
aad
clc
pop
jg
inc
adc
or
flds
arpl
mov
das
in
imul
xor
data16
add
add
test
ljmp
mov
and
pop
imul
in
mov
cmp
xchg
int
sahf
out
xor
and
push
leave
add
mov
fdivl
mov
es
mov
das
or
jns
jecxz
push
sbb
cmp
lcall
scas
jmp
stos
sub
jno
or
inc
fs
jno
lods
jnp
popf
mov
fisubrl
mov
js
sub
lcall
addb
clc
test
xchg
test
js
lret
xor
sahf
jo
loope
int
push
xor
pop
sahf
repz
push
lods
mov
sarb
mov
jp
mov
mov
imul
pusha
imul
xor
ret
jo
adc
ljmp
data16
movsb
mov
add
or
sbb
cmova
ljmp
xchg
inc
dec
into
leave
pop
cli
mov
push
ror
je
mov
mov
mov
aam
shl
cmpsl
xlat
xchg
jne
push
test
scas
pop
cs
mov
fmulp
mov
and
jae
pop
dec
adc
pop
jnp
or
insl
pop
testb
popf
out
cld
outsb
insb
xor
mov
and
mov
xor
stos
js
out
add
dec
inc
sbb
and
das
lahf
int
and
xor
mov
outsb
pop
sub
ljmp
mov
or
stos
sub
repnz
in
mov
nop
sub
cmp
inc
cld
cmp
cld
repnz
mov
jg
subl
xlat
call
and
xlat
jl
push
addr16
dec
jg
adc
add
cwtl
cmpsb
testl
mov
push
xchg
mov
xor
fs
jo
adc
inc
jp
lock
pop
and
cmp
sbb
xor
sbb
pushl
or
mov
push
push
fnstcw
mov
ret
jo
in
shll
sub
loope
pop
mov
xor
fnsave
ds
cmp
inc
add
clc
loop
negb
ss
sub
into
in
aaa
sbb
cltd
inc
mov
ret
sahf
cmp
test
inc
adc
test
sub
jo
jge
addr16
jge
push
jg
jne
push
mov
mov
in
xchg
shlb
push
cmp
aaa
lods
mov
lcall
push
push
test
rcrb
adc
rorl
idivl
lahf
stos
pop
scas
test
fsubl
mov
push
cmp
mov
and
mov
pop
ds
ret
hlt
addl
mov
push
or
cmp
int3
jnp
mov
pusha
mov
mov
and
scas
test
hlt
inc
pop
lods
jae
xor
inc
add
loop
push
xlat
pop
fistps
jge
lcall
cmp
or
xchg
cld
jbe
roll
loop
iret
test
out
lahf
jge
push
sbb
in
cmpsl
stc
ljmp
repnz
lea
jae
push
stc
fistps
mov
adc
xor
fwait
sub
ljmp
notb
add
push
xchg
lret
jmp
or
mov
jl
pop
sbb
xor
push
cmpsb
loop
and
add
push
es
insl
out
call
les
data16
gs
push
and
aad
ja
cmpsb
test
cli
pop
adc
mov
jb
out
mov
int
das
lods
aaa
mov
loop
sub
lock
popa
add
in
movsl
mov
pop
jb
mov
jecxz
fidivs
add
sub
fsubrl
or
dec
xchg
jmp
jns
setae
sbb
inc
out
fisubs
inc
cli
test
and
push
outsb
inc
int3
xchg
jo
xor
stos
xor
add
xor
je
mov
clc
aaa
outsb
sbb
cmpsl
add
xchg
mov
outsb
in
xor
mov
ficompl
mov
push
push
xchg
xchg
push
sub
sub
adc
mov
std
arpl
dec
adc
mov
cmp
xchg
pop
ljmp
mov
inc
add
xchg
jo
add
or
add
mov
jmp
pushf
jl
and
or
fistpll
scas
and
pop
popf
xor
xchg
sub
imul
mov
inc
test
je
fcmovbe
dec
cmpsl
shll
push
jge
cmp
push
cld
cli
retw
ds
pop
icebp
int3
mov
lret
and
into
mov
jl
sahf
mov
leave
inc
cwtl
pop
sub
cmpb
sti
mov
push
push
jne
mov
mov
gs
dec
mov
cli
int
lret
stc
dec
mov
into
fldcw
inc
hlt
jp
xchg
jbe
arpl
push
jge
adc
ret
sbb
jne
out
in
or
stc
xchg
in
fsubrl
push
cld
xchg
xor
test
lods
std
cmp
fidivrs
push
mov
imul
rcrl
mov
mov
inc
out
or
je
push
or
pop
mov
or
sub
dec
jg
push
fisttps
pushf
jne
jbe
andl
jp
mov
mov
and
std
dec
push
jmp
sub
test
jo
pop
orw
mov
mov
inc
push
aam
mov
adc
adcb
inc
jae
jge
in
dec
aam
rclb
inc
sbb
ret
xchg
sub
sbb
fidivrl
dec
pop
fcoms
pop
or
jns
add
in
dec
push
pusha
mov
imul
sub
fisttpll
push
mov
addr16
or
jae
dec
movaps
xor
orb
mov
inc
lock
cmpb
mov
aas
jp
leave
inc
dec
xchg
pop
sbb
xor
mov
out
add
mov
cli
test
lods
sub
and
ss
scas
lods
jp
xchg
dec
ja
push
jge
xchg
les
fwait
shll
loopne
cmp
cmp
cmpsl
aam
and
sub
xchg
push
cmpsl
pop
sbbl
hlt
mov
call
xor
sub
mov
jne
cs
mov
cmpsb
orl
mov
add
leave
dec
cmp
fildl
push
xchg
fdiv
pop
push
aas
aaa
jl
test
nop
mov
movsb
sbb
sub
push
jp
jecxz
lods
pmuludq
pop
stos
dec
mov
cli
inc
fsubp
mov
lret
or
enter
dec
sbb
mov
xor
fstpl
jecxz
shll
fs
cmp
sar
or
mov
fsubrs
mov
add
inc
pop
data16
pushf
add
and
pop
cmp
jno
xchg
cmc
cmp
lahf
cmp
dec
popf
add
mov
or
pop
xor
cmp
aaa
jle
sarb
int3
fldt
xchg
popa
test
rcr
gs
mov
pusha
hlt
and
dec
in
out
popf
pop
cmp
push
push
das
mov
out
or
sub
pop
dec
push
push
sbb
cltd
leave
test
movsb
cmc
imul
add
pop
inc
mov
jne
cmp
movb
sbb
shll
jp
mov
and
jo
dec
and
ficompl
xchg
xchg
test
mov
mov
in
xchg
pop
test
pop
sub
jne
and
xor
push
push
insb
and
jno
sub
ficoms
mov
jno
sbb
dec
notb
mov
xor
dec
jg
sbb
inc
mov
loop
pop
popa
and
insl
lea
mov
jne
and
stc
xchg
repz
andb
add
mov
or
decl
inc
or
es
push
pop
arpl
iret
mov
adc
jns
clc
cld
test
rcrb
dec
cmp
cmp
sti
movsb
int3
call
pop
dec
mov
movsb
or
movsl
and
or
jmp
pop
sbb
mov
xor
add
adc
das
fdivl
movsl
jmp
xchg
dec
xor
sbb
test
pop
dec
jne
lea
push
imul
xchg
rcll
lcall
push
push
aaa
pop
sarl
adc
lret
rcrl
xchg
mov
andl
inc
adc
fmuls
lea
cwtl
sbb
cli
aam
or
mov
fisttps
sbb
aad
mov
add
push
out
pop
add
fwait
add
push
lods
or
and
aam
jbe
lret
pop
inc
jno
mov
cld
mov
shlb
ror
movsl
mov
das
sbb
out
repnz
cmp
and
cli
jl
daa
fimuls
aas
adcl
das
lcall
push
daa
dec
enter
add
jno
imul
in
pop
sub
sti
loopne
cmp
sub
add
mov
push
pop
cmp
pusha
or
out
push
filds
lahf
sbb
in
dec
les
cmpsb
aas
inc
jne
xor
nop
and
mov
gs
ror
add
cmp
xor
sbb
outsl
lods
out
pushf
rorl
scas
sub
push
ja
movsb
test
dec
aas
jne
pop
mov
bound
push
mov
pop
sub
sbb
add
mov
pop
xor
test
aaa
mov
popa
daa
adc
insb
js
out
sar
data16
sub
pushf
or
stos
pop
popl
movl
icebp
sbb
outsb
push
test
mov
inc
cld
fsubl
out
jae
cvtps2pd
inc
cs
mov
mov
popf
ss
daa
jo
jne
lods
xor
fisttpl
or
inc
jno
sub
stos
inc
jp
nop
arpl
mov
sti
enter
adc
jmp
daa
inc
movsb
mov
add
int
int3
mov
aam
mov
cld
lods
push
push
sub
xor
das
or
cwtl
fs
imul
movsl
mov
pop
insb
int3
lods
lea
aas
or
push
add
sub
jo
fcomps
cmp
adc
and
sbb
push
adc
jecxz
dec
ret
add
das
ret
adc
xchg
cmc
mov
adc
mov
mov
dec
mov
adc
inc
and
xor
jno
push
mov
and
orl
cmp
lahf
inc
mov
sub
aas
dec
or
inc
leave
cli
repz
xchg
fists
test
iret
aaa
adc
mov
inc
or
fwait
jbe
and
outsl
imul
movsb
or
push
cld
subb
mov
pop
jmp
jae
rcr
adc
jmp
insb
xchg
and
fucomi
jae
xchg
in
pop
jns
pop
sbb
push
nop
and
orb
data16
xorb
movsl
out
int
adc
xor
popf
cld
repz
adc
mov
push
dec
add
xor
lcall
adc
dec
xchg
push
or
xchg
sahf
dec
dec
call
add
cli
in
movsb
je
mov
ljmp
inc
xchg
aam
pop
aaa
sbb
bound
jno
fdivs
jae
test
mov
notb
ret
and
cltd
iret
and
push
push
or
mov
jne
xor
std
out
xor
xchg
ljmp
pusha
mov
cmp
es
cld
js
dec
sub
dec
jae
je
cmp
in
cmp
pop
xchg
leave
push
leave
mov
daa
push
scas
outsl
lret
pop
sti
dec
dec
bound
add
add
cli
add
and
push
cmpsb
insl
loopne
inc
lret
mov
jae
lret
lods
add
lea
jmp
lcall
adc
adc
testl
aas
inc
cmp
loope
mov
out
ficoml
push
rclb
in
xchg
jo
lods
jmp
and
ja
insb
xlat
push
insb
jmp
je
sbb
push
mov
xchg
mov
pop
adc
es
das
addb
adc
pop
push
inc
jns
inc
inc
pushf
cmp
movsb
push
test
pushf
pop
mov
push
jnp
call
out
and
cmpsb
test
addr16
jb
push
out
pop
jle
movsb
pop
push
dec
sub
jne
mov
dec
sbb
pusha
xchg
imul
fnsave
xchg
sub
jbe
and
add
shlb
cmpsl
cmp
fmul
rorb
and
cmpsb
sub
std
mov
and
mov
les
mov
sbbb
jge
jecxz
in
sbb
js
xor
adc
or
cwtl
fbld
stc
sub
negb
insb
xchg
ret
aam
aad
loope
aam
inc
mov
stc
pushl
add
daa
lcall
leave
dec
xchg
imul
jnp
sbb
scas
loope
sbb
pop
adc
repz
stc
imul
jge
mov
mov
loopne
inc
add
push
jae
mov
lods
test
mov
and
test
push
imul
inc
sbb
jp
mov
sub
div
mov
xor
mov
aaa
push
or
sub
mov
mov
fbld
int3
sbbl
mov
xor
aam
in
push
insb
jo
add
mov
bt
jb
fadds
sbb
les
fiaddl
les
fisubl
lahf
stos
jp
sti
sbb
mov
dec
call
ret
xor
dec
je
rorb
ficoml
jle
punpckhdq
pop
inc
jbe
mov
cwtl
push
cmpsl
fdivs
xchg
ss
push
data16
outsb
or
hlt
adc
push
xchg
ret
pop
mov
pop
sub
lret
mov
push
xchg
sub
push
adc
jae
aaa
icebp
inc
adc
leave
adc
inc
jge
cmp
dec
lret
jae
stos
sub
loope
fcoml
jecxz
and
sub
and
repnz
mov
jl
jle
jnp
xchg
arpl
cmpsl
mov
loop
sahf
dec
fcomip
sub
mov
cmp
jno
inc
data16
cmp
lcall
test
sub
mov
mov
pop
mov
aad
test
popf
and
xchg
ficompl
pop
cmpb
mov
int3
rcrb
fdiv
adc
orl
jl
repnz
outsl
jbe
ljmp
popf
cmpsl
test
mov
adc
or
mov
sub
xchg
insb
sbb
int3
add
shrb
es
mov
xchg
sbb
ja
popf
sub
lahf
fistl
push
sub
or
push
mov
ljmp
mov
ficoms
lahf
nop
mov
push
fisttps
sub
dec
leave
cmc
bound
scas
and
dec
xchg
pop
mov
pushf
or
out
xchg
mov
sub
inc
hlt
mov
sbb
mov
mov
sbb
adc
xchg
in
push
push
lock
popa
add
je
push
mov
es
ljmp
movsb
mov
js
and
or
stc
sbbl
idiv
movnti
jge
insb
xchg
inc
pop
dec
lock
pushf
and
enter
lcall
mov
cmc
inc
jne
push
lret
mov
push
lea
cmp
dec
pop
dec
sahf
jnp
sti
mov
xor
out
int
sub
loopne
mov
iret
js
shlb
cmpsb
xor
repnz
int3
mov
pop
adc
xchg
aas
xchg
jl
mov
inc
mov
sahf
jge
jle
test
mov
add
popa
inc
sbb
jbe
stos
mov
lret
pop
dec
dec
testb
cwtl
mov
mov
enter
inc
cld
inc
aam
std
in
imul
or
mov
add
xchg
insl
dec
cmc
addl
jne,pt
xor
int
shlb
stos
push
fcoml
fnstenv
pop
cli
xor
and
push
sbb
cli
mov
fimuls
les
out
or
jne
lock
xlat
add
out
xlat
xor
bnd
data16
sub
setl
mov
mov
xor
push
sahf
roll
repz
push
loop
sbb
sbb
mov
push
inc
sbb
mov
or
insl
mov
shll
add
dec
push
dec
xchg
xchg
outsl
or
dec
sbb
popa
imul
aam
xchg
dec
loope
js
xor
lret
stos
pop
and
jle
xchg
shrb
inc
les
les
sbb
scas
jne
int
and
push
imul
pop
clc
popa
fdivp
lcall
mov
pop
lret
lret
hlt
imul
call
in
in
sahf
sub
jg
clc
pop
lea
xor
dec
stos
sbb
xor
sub
and
inc
push
jle
je
data16
dec
push
push
inc
jae
std
mov
dec
in
outsl
in
ret
negb
or
outsb
xor
jae
jge
pop
xchg
xlat
and
jae
push
cs
lods
inc
es
lahf
cltd
mov
dec
xor
xchg
imul
xchg
lahf
mov
cmp
inc
mov
fxch
fcmovnb
sar
mov
jne
inc
mov
aaa
push
fistpl
loopne
xlat
jb
stos
jecxz
loop
out
pop
pop
xor
push
ss
outsb
jb
add
mov
pop
je
cltd
inc
xor
and
mov
lret
mov
and
call
cmp
mov
data16
xor
adc
outsb
out
add
into
mov
pushf
sbb
out
lock
sbb
daa
pop
dec
or
shl
sub
and
xchg
sbb
cli
or
push
lahf
or
xchg
insl
xlat
sub
push
imul
sub
pop
and
cltd
inc
subb
sub
lcall
lods
pop
mov
push
push
imul
mov
insb
mov
xorl
loope
iret
clc
mov
push
inc
cmp
push
ds
sbbl
test
mov
cltd
add
push
sbb
icebp
stos
sbb
cmp
pusha
pop
xchg
push
pop
sub
into
jb
fidivs
gs
mov
pop
push
outsl
rcrb
mov
movsl
test
dec
test
nop
mov
mov
or
hlt
fs
cmpsl
pop
sbb
mov
mov
shlb
push
rclb
test
je
xchg
xchg
push
xor
mov
and
xor
jns
add
jmp
xchg
mov
jo
xchg
int
xlat
xor
mov
jecxz
pop
aam
sahf
jmp
rolb
jge
mov
xor
mov
nop
stc
inc
add
mov
insl
push
imul
sub
or
in
fadds
js
and
and
xchg
das
shlb
xchg
imul
leave
in
pop
dec
xchg
dec
push
inc
lcall
ffreep
daa
cmp
cld
push
mov
in
and
jae
ret
add
or
jecxz
ret
or
sub
inc
es
js
shll
ljmp
xchg
sarl
shll
aad
sub
xchg
aad
outsb
repnz
jns
jno
es
or
dec
test
and
inc
jo
outsl
fsubrl
ja
mov
mov
mov
fldcw
mov
inc
jno
sahf
repnz
mov
jmp
pop
mov
jbe
mov
in
or
test
sub
insb
inc
sbb
or
or
js
fsubs
pop
jo
add
insb
mov
fbstp
enter
sub
sbb
mov
inc
cltd
rolb
test
sbb
cmp
xchg
nop
or
lret
dec
lea
sub
lcall
fs
sub
sub
cld
cwtl
test
jecxz
dec
push
jne
xchg
push
fisubl
xchg
cli
sub
push
jns
scas
pop
jns
or
icebp
mov
mov
add
inc
push
and
les
in
push
push
cld
addr16
xor
mov
out
push
dec
inc
sbb
mov
inc
xlat
into
sti
xchg
mov
mov
adc
iret
sbb
jb
jl
add
icebp
add
sub
fbld
scas
lods
mov
push
xor
sbb
add
sbb
outsl
rcll
lret
cmp
push
out
or
je
sub
test
and
psubq
push
and
inc
dec
dec
movsb
or
movsl
or
std
inc
hlt
push
aam
in
jl
pop
sarb
test
iret
outsw
fbld
shll
enter
jo
push
stos
sbb
out
das
and
push
jno
data16
lods
and
hlt
jbe
cli
jge
cmp
add
test
dec
mov
jmp
shll
sub
addr16
push
daa
mov
cmc
push
add
cmp
pop
adcl
xor
cmp
or
negb
enter
dec
fsubl
cmc
dec
xchg
adc
add
cld
jecxz
loopne
or
out
testl
jmp
je
nop
es
lret
scas
leave
rorl
dec
ds
jnp
adc
js
mov
shll
loop
and
lret
sub
lea
ljmp
push
nop
lret
dec
ds
or
cmc
movsl
fs
inc
pop
push
inc
int3
push
fisttpl
dec
stc
or
pop
mov
cmpsb
rcl
ja
adcl
mov
mov
imul
push
jp
stc
leave
movsb
sbb
call
xor
mov
nop
lods
fs
dec
call
jp
xor
sbb
fnstenv
adc
cmp
fnsetpm(287
xchg
sub
add
dec
sub
insb
lods
cltd
in
insl
mov
sbb
inc
stos
lods
jae
dec
test
dec
mov
mov
cld
dec
lock
cli
xchg
ret
sub
or
daa
rcrb
jmp
pop
ja
imul
aad
lret
cmp
aam
pop
or
jb
out
and
icebp
adc
mov
inc
inc
loope
subb
movsb
pop
sbb
sub
iret
int3
mov
xor
imul
cld
add
cld
sbb
mov
mov
loope
sbb
subb
push
in
cmc
dec
push
loope
rcll
gs
stos
cmc
fildll
aam
cwtl
xorl
in
aam
xchg
aaa
insb
arpl
test
mov
add
pop
adc
jb
cld
outsb
pusha
enter
dec
in
xor
dec
bsf
lcall
lods
iret
adc
lods
push
xor
adcb
xor
adc
mov
xor
lcall
push
mov
cmpsb
fmull
xchg
cltd
pop
pop
pop
and
in
cmp
adc
js
jmp
ljmp
lret
andl
jae
fwait
stos
lea
cmp
call
add
in
dec
in
pop
jge
shlb
pop
push
add
sbb
fimuls
mov
push
push
inc
outsb
xchg
stc
daa
lahf
bound
inc
imul
in
cmp
ret
xor
fcomi
orb
lods
pop
jae
xor
pop
aad
int
cld
test
fs
inc
push
mov
popl
or
in
les
dec
jno
xchg
xchg
shll
push
iret
adc
push
ret
cwtl
scas
loopne
mov
sub
call
lods
dec
test
sti
out
push
xchg
push
jno
or
aas
mov
rorb
insl
jne
mov
fsub
cwtl
imul
loope
out
mov
sub
jb
clc
int3
mov
mov
push
faddl
or
daa
cmp
mov
out
push
push
jbe
lods
mov
outsl
imul
mov
pop
cmpsb
jg
scas
adc
daa
repnz
push
jp
mov
mov
int3
mov
sbb
xchg
arpl
push
xor
data16
add
inc
decb
arpl
cs
fisttps
xlat
test
pop
lods
sbb
inc
popa
fisttpll
cli
arpl
dec
jecxz
xchg
cmp
push
mov
push
xchg
sub
ljmp
jnp
mov
test
lret
rcr
cmp
sub
or
fcoml
sub
mov
mov
add
fmuls
aaa
jg
es
pop
mov
repz
jmp
test
out
test
ja
dec
lods
outsb
jo
data16
dec
mov
cmpsb
cmpsb
cld
push
and
sbb
mov
mov
xor
xchg
test
es
cmp
push
aad
int3
xor
int
jmp
mov
mov
je
rcrl
inc
mov
jb,pt
sub
add
fildl
leave
lods
adc
fisttps
lcall
push
mov
out
pop
or
sub
and
and
adc
andb
enter
xchg
rcr
aas
sbb
mov
out
fildl
pop
sub
gs
jb
xchg
jl
and
mov
xchg
xchg
fldl
loop
sahf
iret
jne
dec
int
push
adc
in
imul
imul
dec
sub
mov
test
add
jl
movsb
sbb
stos
xchg
push
outsl
arpl
or
jbe
xor
cmp
lret
out
stos
cmc
jle
rclb
jmp
insl
into
les
daa
sub
popa
add
lea
movsb
inc
xchg
adc
push
add
and
fstps
movsb
out
mov
pusha
hlt
mov
sub
aam
sbb
cmpsl
and
xor
ret
cmp
bound
fs
test
out
fldl
xchg
in
imull
in
mov
insb
xor
lret
fnstsw
xor
fnstsw
lds
lahf
xor
adc
jmp
das
cmp
add
xchg
ja
push
mov
sub
dec
and
dec
lock
dec
mov
rorl
jbe
sbb
clc
xchg
pop
push
push
lods
pop
fidivrl
sbb
in
or
dec
mov
mov
add
shrb
xchg
data16
jnp
push
out
xchg
xchg
cmpsb
cmp
jmp
divl
loopne
push
xchg
inc
sarb
jp
imul
sub
das
cltd
dec
push
out
rcrl
sbb
shl
xchg
aaa
pop
push
arpl
out
mov
add
inc
popa
adc
adc
lock
adc
das
mov
xchg
cs
aad
cmpl
pop
push
lds
xchg
mov
adc
push
movsb
loopne
push
mov
mov
lods
aad
xchg
ds
bound
adc
dec
push
mov
ja
std
mov
push
cld
or
test
stos
mov
stc
inc
fwait
sub
xor
out
stos
mov
out
cld
jo
inc
lds
gs
sbb
pusha
dec
jmp
xor
movsb
insb
fidivrs
xchg
lods
imul
cmp
dec
cmc
inc
and
xchg
xchg
mov
inc
push
push
jne
or
pop
add
out
out
sbb
push
xor
sbb
int3
jno
pop
jne
movsl
leave
loope
mov
push
imul
jnp
add
lcall
jnp
push
clc
popf
xchg
into
push
popa
mov
ret
mov
fildll
dec
mov
jge
mov
fucomip
clc
adc
sub
push
stc
xor
add
imul
cli
xchg
and
lret
rolb
lds
roll
push
cmc
xor
sbb
sarl
sti
sbb
xchg
outsl
mov
popa
aas
insl
lea
lods
sarl
adc
push
and
inc
incb
js
dec
pop
xchg
cmp
outsb
add
call
outsb
sbb
jle
or
inc
dec
push
pop
pop
andb
pop
cmp
out
testb
mov
ds
push
aaa
cmpb
sbb
mov
lds
pop
aaa
out
loopne
mov
dec
add
test
sub
mov
xlat
out
inc
mov
xchg
push
lret
jo
leave
fs
xchg
mov
mov
test
test
js
jb
add
jmp
dec
jb
sub
mov
and
test
or
xchg
and
jle
adc
sahf
lea
mov
mov
scas
addb
dec
cmp
sub
les
mov
mov
xchg
dec
and
repnz
sbb
push
pop
cli
or
movsb
cs
add
pop
pop
leave
les
push
mov
repnz
cmp
mov
add
jno
in
movsb
sbb
shlb
push
push
xchg
cmp
fsubrl
sub
test
adc
leave
fimuls
push
push
jmp
adc
cmpb
jno
inc
and
adc
push
inc
sbb
mov
pop
test
inc
lret
popa
dec
call
out
adc
fbstp
lret
stos
mov
cltd
push
or
xor
sbb
cmpsb
int3
in
cmp
sub
or
stos
mov
jnp
push
pop
and
xor
cwtl
mov
pop
aad
pop
or
mov
sub
push
sbb
outsl
mov
fisttpl
loop
xorl
xor
xchg
or
pop
repz
fdivs
insb
mov
sub
mov
neg
mov
pushf
adc
inc
inc
arpl
insb
fdivr
jns
insl
xor
into
je
adc
mov
call
push
movsl
cld
push
lock
je
lahf
ss
xor
pop
fucomp
stos
push
sbb
scas
push
jmp
pop
loope
outsb
xabort
test
inc
jno
dec
add
pop
adc
clc
leave
xchg
data16
insb
icebp
adc
das
lds
cmpsb
fyl2xp1
imul
push
add
push
jnp
aaa
or
into
jb
sahf
jns
jle
bound
push
cmp
or
push
nop
arpl
dec
push
sub
and
jns
repnz
sbb
push
mov
jecxz
push
push
sub
sub
xlat
ja
dec
notl
int3
sbb
call
push
fdiv
cmc
xchg
jmp
push
mov
call
or
and
mov
inc
nop
push
cmp
lcall
adc
cli
icebp
mov
loope
xchg
aas
adc
adc
in
loopne
iret
pop
popa
xchg
adc
repz
mov
pop
mov
imul
inc
std
dec
inc
pop
sti
cld
orl
inc
pop
adc
stc
lcall
jo
xchg
or
loop
mov
dec
mov
mov
in
and
lcall
movsl
and
adc
imul
fsubrl
inc
test
insl
pop
or
out
xchg
mov
cltd
sbb
pop
loope
shrl
inc
cmc
mov
mov
inc
fcmovnb
out
xor
lea
xor
and
mov
xor
push
xchg
nop
sahf
mov
enter
or
call
sbb
cmp
cmp
scas
ss
stos
dec
dec
shrl
xchg
inc
loop
lods
inc
or
mov
sub
bound
mov
cmpsl
xchg
mov
adc
pop
inc
jno
lea
testl
push
ds
dec
jo
pusha
sub
shrl
les
outsl
sbb
enter
std
xor
xor
xor
xor
adc
outsl
in
test
cmp
mov
push
or
jg
jne
cmp
pop
popf
mov
lahf
outsb
loopne
fmul
mov
mov
sbb
cmpsb
gs
stos
icebp
scas
pop
inc
xor
nop
cmpsl
sub
iret
xor
fisttps
cmp
jl
fs
cwtl
or
pop
jle
inc
sub
addr16
and
sub
cld
xchg
mov
xor
lcall
mov
rolb
push
ja
mov
pop
jge
jne
in
leave
push
subl
or
and
mov
adc
and
xchg
adc
sahf
or
mov
cmp
mov
push
adc
pop
pop
dec
pop
fisubrs
add
push
jp
insb
jp
jl
icebp
adc
jb
aam
cmp
mov
push
mov
adc
add
mov
daa
and
cmp
pop
mov
scas
popa
jmp
sub
inc
int
mov
dec
jle
insb
or
add
aad
push
sbbb
loopne
mov
mov
cld
int
lds
mov
mov
shrb
aam
sbb
cli
jg
repz
xor
out
test
ret
cmp
push
pop
pop
ret
pushf
clc
movhps
mov
ss
cmp
in
cmp
leave
xchg
testl
mov
xchg
lret
dec
inc
dec
rolb
inc
aaa
cmp
js
outsl
xor
and
fimull
or
xchg
adc
cli
lahf
insb
lcall
mov
pop
rcrb
xchg
mov
mov
pushf
in
sub
pop
int
fucomp
sub
push
cmpsb
out
xchg
lret
inc
push
and
iret
call
push
ja
inc
loope
and
inc
clc
shll
loop
cmp
pop
insl
ja
xor
popa
ja
int
pop
push
lret
std
insl
mov
shrl
ja
xchg
push
lods
frstor
jp
push
pushf
or
sub
mov
mov
sub
jbe
push
adc
in
cmpsb
sbb
adc
lods
popf
lahf
fcmovbe
or
fsts
cld
add
testl
adc
adc
mov
mov
sbb
icebp
inc
jl
push
pop
rcr
test
add
rorb
negl
dec
mov
rcrl
leave
out
mov
test
cmp
push
les
jnp
out
call
in
out
push
lods
jae
pop
popa
xor
sti
jb
lcall
jno
fwait
xchg
in
xor
repnz
cli
addr16
xchg
mov
adc
roll
mov
or
sbb
leave
scas
jl
out
mov
and
stos
pop
adc
push
xchg
mov
mov
in
aam
in
mov
insl
cltd
mov
sbb
pop
pop
daa
pop
outsb
jmp
jnp
jbe
or
sub
mov
push
les
xor
or
outsb
push
out
in
inc
cmp
mov
clc
loopne
pop
pop
fcomps
js
jmp
pop
mov
iret
mov
mov
mov
mov
mov
insl
push
mov
and
push
jg
xor
ja
scas
and
dec
rcrl
ficoms
xchg
movsb
sbb
out
push
push
vunpcklps
in
in
adc
out
mov
dec
xlat
in
cwtl
hlt
scas
xor
push
and
xchg
pop
mov
in
popa
movsl
pop
push
mov
data16
jle
adcb
test
icebp
adc
in
sub
std
sub
and
jl
popa
sub
xlat
testb
jo
sarl
sub
repz
push
flds
mov
jns
jns
xchg
mov
pop
outsl
test
xor
and
mov
inc
iret
or
push
jb
call
lret
jo
pusha
push
aas
aas
aam
lahf
xchg
aam
dec
add
das
lcall
insb
mov
add
xor
aas
lods
cwtl
int3
adc
inc
test
nop
jle
fs
pop
ss
decb
add
mov
cmc
sbb
push
icebp
pop
and
jecxz
aas
pop
in
inc
stc
mov
pop
inc
inc
mov
mov
xor
aaa
jg
xchg
dec
push
and
cs
jge
pop
or
jne
adc
scas
lahf
sarb
std
adc
nop
and
loope
stos
pop
mov
outsb
scas
pop
jb
test
cmpsb
iret
push
inc
shrd
push
adc
aas
js
and
shrb
inc
leave
dec
cld
insl
addl
or
push
adc
pusha
xorb
in
mov
fs
imulb
mov
fisttps
xlat
pop
in
testl
inc
mov
mov
or
dec
adc
iret
pusha
cwtl
adc
nop
in
inc
ret
es
xor
nop
int
xor
lods
adcb
or
cmp
movsb
scas
and
lods
loop
xlat
pop
jg
inc
popf
aas
loope
sub
xorb
cmp
iret
pop
in
jge
outsl
pusha
sbb
mov
push
scas
dec
mov
mov
sub
in
fistps
outsb
cmp
sbb
ja
sbb
jne
cli
jns
ret
add
loopne
adc
jnp
inc
repz
inc
iret
push
xor
or
push
cli
out
cwtl
mov
push
xchg
in
push
xchg
add
in
bound
mov
je
fstps
mov
inc
in
sbb
add
iret
sbb
add
dec
scas
push
mov
cmp
loopne
fsts
lcall
scas
xor
jmp
aas
pop
aaa
adc
nop/reserved
push
mov
sbb
add
xchg
push
inc
mov
dec
mov
xchg
es
dec
and
push
jl,pt
sub
pop
mov
rorl
sub
push
aam
imul
outsb
test
ret
cld
jo
fisttpl
add
roll
insb
test
sbb
jg
inc
mov
pop
sti
int
jno
pop
or
mov
jmp
mov
adc
fldt
in
mov
and
pushf
mov
imul
xor
scas
cmp
test
es
sub
nop
arpl
jecxz
faddl
push
hlt
repnz
in
loopne
in
test
bound
xchg
out
pop
insb
aad
dec
xor
push
rcrb
pop
adc
sbb
mov
xlat
das
mov
fldenv
sbb
pop
hlt
xchg
cmp
mov
xor
sub
das
hlt
pop
les
jnp
leave
out
xor
add
push
adc
pop
adc
mov
xchg
sub
imul
inc
aaa
mov
in
out
in
in
ss
jge
aad
pusha
into
push
cmpsb
inc
lahf
pop
mov
test
dec
fiaddl
fwait
iret
push
hlt
sbb
and
add
divb
mov
lods
fwait
jg
xor
push
aad
movsl
xor
adc
jnp
sbb
aas
pop
stos
xchg
xor
mov
xlat
mov
lcall
negl
in
sbb
xchg
stos
or
sub
sahf
dec
push
inc
push
sub
jl
adc
xchg
push
lods
scas
mov
xor
sub
insl
mov
mov
call
push
xchg
sub
adc
into
cmp
fcmovnu
lock
cs
int3
xlat
dec
outsb
rcrb
push
test
mov
jmp
dec
push
sti
add
pushw
sub
xlat
sub
push
mov
movsl
idivl
dec
aaa
cmp
jnp
or
insl
xor
inc
sub
pop
and
dec
or
dec
or
inc
cs
push
je
lahf
loopne
xor
fs
test
cpuid
jge
or
and
xlat
cli
sar
mov
cmc
cmp
clc
js
stc
sub
push
sub
add
inc
out
sarl
enter
lods
inc
push
xor
cmp
mov
aaa
mov
push
mov
divl
xor
js
scas
int
fmulp
imul
xchg
into
fwait
in
clc
divb
xor
mov
and
mov
push
inc
hlt
stos
cmpsb
jecxz
cmp
mov
push
shr
mov
xchg
sbb
inc
pop
loop
mov
les
repnz
cld
cmp
add
fnstsw
push
gs
sbb
hlt
fistpll
dec
outsl
adc
or
mov
fistpl
xchg
imul
fdivl
adc
adc
daa
cmpsl
shrb
fwait
repz
roll
xorl
jno
or
insl
cli
mov
inc
jae
flds
cs
adc
loop
bound
push
dec
xchg
enter
push
mov
jge
sahf
jge
cwtl
jge
adc
outsb
dec
popa
fdiv
dec
jne
test
shrl
scas
lret
fmull
or
repz
push
out
add
leave
mov
jg
sub
sbb
adc
jo
cmc
aam
adc
xchg
sub
sub
leave
adc
cmpl
mov
sbb
ffree
loope
or
xor
push
addb
jmp
popf
push
sub
inc
adc
addr16
or
xor
xor
and
dec
aad
pop
ljmp
pop
js
cmp
pop
or
clc
fdiv
cli
add
sbb
xchg
push
sub
xor
add
out
mov
cmpsb
add
xor
idivb
xchg
xchg
cs
test
inc
cmp
inc
and
mov
xor
stos
jecxz
cmp
add
repz
push
pop
xor
jmp
out
jp
nop
adc
mov
out
and
cwtl
xlat
cmp
sti
lds
in
mov
fidivrs
inc
push
scas
push
movsl
imul
sbb
mov
dec
movsb
ljmp
lods
jo
pop
test
movsl
stos
aam
cmpsb
pop
in
or
pushl
insb
mov
fidivs
data16
fildl
mov
cmpsl
fwait
mov
or
lret
sahf
adc
arpl
and
inc
test
cmc
lods
cs
cmp
sbb
and
ficoms
xchg
rcll
sbb
andl
dec
xchg
xchg
lret
mov
stos
cmpsl
mov
ljmp
pop
aad
bound
pop
loopne
insl
ja
mov
add
fdivrl
or
jl
or
mov
shll
out
sub
adc
movl
insl
movsb
inc
jo
adc
loope
add
cld
sub
gs
mov
stos
jle
setle
mov
jno
pop
popf
movmskps
and
dec
sti
push
dec
inc
adc
sub
push
sub
out
lock
push
mov
sub
aad
xchg
mov
ret
jne
and
adc
out
movsl
and
push
outsl
cltd
sub
add
dec
pop
cmpsb
in
mov
movsl
in
fcompl
popf
mov
jo
inc
or
mov
sbb
aam
lahf
icebp
jl
icebp
push
sti
push
shl
cmp
shll
jae
outsb
sbb
pusha
sub
inc
outsb
adc
xchg
dec
dec
sbb
adc
jg
sbb
push
push
mov
or
into
aas
mov
imul
rcrb
insl
sub
sub
ret
movsb
cmc
rcrl
push
shr
ficoml
icebp
shlb
jl
push
stc
push
movsl
dec
je
ret
adc
andl
lds
imul
jecxz
mov
xlat
pop
adc
sub
enter
vpunpckhdq
fsubrs
mov
mov
mov
fcmovnb
mov
int
jg
pop
rolb
or
push
mov
add
sub
shrb
xchg
fadds
push
adc
add
in
inc
mov
lcall
jns
mov
into
iret
adc
shll
cmpsl
ret
cwtl
push
popf
repnz
push
xor
fisttpll
pop
inc
test
movsl
fildl
insl
cmpsb
add
mov
xchg
jns
xlat
sub
push
sbb
cmp
mov
mov
mov
push
mov
loopne
cwtl
or
sbb
sub
das
dec
mov
fsubl
arpl
xlat
push
pop
inc
xchg
cmp
pop
sbbb
dec
popf
mov
jmp
mov
test
pcmpeqb
or
xor
add
call
pushf
rolb
stos
icebp
and
cmp
shll
test
loope
add
and
mov
mov
out
bound
xchg
fwait
cmc
xor
inc
pop
scas
mov
or
jne
sub
mov
js
jmp
gs
add
imul
pop
ficompl
push
movsb
icebp
loop
sub
push
in
ja
mov
or
mov
cmp
and
mov
sahf
loopne
ljmp
adc
stc
push
dec
mov
rolb
repz
rcrb
sbb
shlb
shrb
push
dec
adcl
out
enter
in
push
pop
and
enter
out
lds
test
push
negl
insb
push
dec
adc
push
in
ds
not
xchg
push
outsb
sbb
into
pop
push
mov
jns
loope
pop
std
xorb
bound
and
lea
inc
xchg
mov
jecxz
push
nop
sbb
mov
or
call
dec
shll
test
adc
inc
jecxz
into
inc
lcall
in
stc
push
out
mov
add
adc
and
sbb
push
in
add
pop
mov
jo
jo
bnd
in
icebp
imul
cmp
push
fmulp
dec
sbbb
icebp
les
mov
mov
xchg
push
ss
sbb
jno
xor
stos
pop
ror
cld
or
push
sbb
push
or
jae
inc
addr16
fdivl
inc
sahf
push
in
fisttpl
retw
inc
adc
mov
add
repnz
and
scas
call
cmp
cli
imul
scas
sub
mov
and
loopne
jno
cmc
das
lret
scas
push
mov
lods
out
mov
shl
jae
pop
ja
cli
mov
sub
add
xor
dec
out
mov
movsl
das
out
mov
rcrl
enter
scas
push
pop
add
xor
mov
daa
push
mov
cli
inc
push
mov
pop
aas
mov
fidivrs
mov
inc
jmp
lock
por
outsl
add
in
jne
cltd
addb
call
and
sarl
shl
mov
mov
mov
ja
dec
bound
mov
fistpl
pop
mov
sbb
push
jmp
jnp
mov
or
fcoml
cs
lcall
lret
and
jge
lds
xor
lahf
das
popf
push
in
sub
push
pop
mov
lret
adc
mov
outsb
push
cwtl
adc
pop
lds
xor
decb
sub
loopne
in
cmc
jns
lea
dec
inc
adc
jae
nop
shlb
push
push
dec
int3
ret
data16
std
cmp
inc
sbb
iret
add
pop
add
repz
dec
and
sbb
jno
sub
cwtl
in
test
adc
or
sti
dec
aaa
xlat
decl
pushw
mov
int
mov
or
mov
mov
pop
add
or
arpl
aam
and
sub
imul
cmp
xor
pop
inc
andl
cmp
in
mov
jns
sub
adc
stos
mov
popa
negl
jmp
int3
mov
scas
dec
hlt
cmpsl
push
adcl
sbb
xor
sub
aad
push
fimuls
ffreep
insl
or
movsb
data16
sti
xor
jnp
or
adc
jmp
dec
test
cmp
push
xchg
insb
xchg
push
mov
sbb
jecxz
nop
sub
sub
xor
and
fnstenv
xchg
cmp
mov
fwait
xchg
movsl
jmp
inc
adc
pop
sarl
cmpsb
inc
and
fldlg2
jae
pop
xlat
rorb
int3
jecxz
out
jge
sbb
hlt
jle
pop
jnp
repz
adc
pop
sti
adc
cwtl
mov
and
mov
aaa
cmpsl
push
mov
out
jle
mov
ret
pop
test
clc
inc
or
push
js
push
cmp
ss
out
or
shr
test
lds
mov
cmp
insb
pusha
sahf
stos
mov
dec
hlt
push
and
es
sub
jbe
and
ret
call
push
inc
add
daa
or
push
push
xor
fs
mov
shll
popa
push
addl
inc
jp
loopne
popa
mov
push
cmp
inc
outsb
popa
movsb
popf
scas
shl
filds
fmulp
pop
loopne
scas
cmpsb
push
repz
aam
cld
xchg
mov
mov
bound
stc
sti
mov
stos
fwait
pop
scas
xchg
lcall
push
fcomps
adc
lret
jp
push
cwtl
push
fwait
dec
or
xchg
adc
inc
idivl
sbbb
jecxz
add
xor
push
dec
sub
mov
xchg
cmp
out
adc
push
outsb
add
mov
sbb
popa
cmp
ret
addb
inc
xchg
xor
enter
and
cwtl
lock
std
ret
pop
add
pop
insl
mov
nop
inc
lcall
rcll
fbstp
add
jecxz
lea
in
push
cmp
xchg
in
push
cmp
jl
cmp
jbe
sahf
mov
sarl
cli
push
add
sub
das
mov
adc
in
loopne
mov
pop
sbb
sti
repz
add
adc
loope
hlt
sub
xchg
fwait
cmp
mov
test
shlb
pop
jmp
jne
imul
push
movsl
sub
inc
sub
xchg
dec
mov
out
dec
and
loopne
stos
dec
xor
and
adc
cmc
leave
jno
xor
sti
push
mov
rcll
xchg
dec
movq
xchg
sbb
xor
cmp
sbb
mov
push
nop
mov
mov
sub
mov
cmp
outsb
movsb
shr
push
cmp
or
mov
je
or
sub
push
mov
sub
out
sarl
mov
and
pop
jle
lock
xor
insl
jnp
mov
imul
mov
loope
dec
mov
adc
shrl
mov
sub
xor
mov
xlat
inc
inc
push
adc
sbb
fcomip
lret
pop
inc
add
lret
aas
fnstenv
in
lods
inc
xor
mov
insb
mov
push
addr16
push
pop
inc
lea
idiv
sbb
ret
aaa
pop
dec
scas
cmp
bound
jb
push
scas
aaa
lcall
xor
lds
cmc
negb
stos
pop
dec
mov
push
mov
push
repz
dec
pusha
sbb
mov
or
int
mov
sahf
jge
mov
or
jnp
sti
pcmpgtb
cli
pushf
das
pop
dec
inc
out
insb
pop
fldl
int
xchg
sub
mov
inc
les
cmc
ffree
inc
sub
mov
cmp
jb
shll
and
sub
inc
dec
loopne
jb
addb
jl
mov
push
call
mov
mov
lret
sbb
divl
sub
lea
or
lods
inc
or
mov
dec
push
sbb
xor
sbb
je
sbb
in
add
mov
dec
das
std
mov
push
ss
sbb
inc
sbb
sbbl
jge
dec
das
dec
subb
daa
jle
xor
icebp
mov
mov
inc
aam
push
ficoml
fcmovb
in
inc
adc
cmp
gs
mov
dec
andb
add
add
sub
popa
mov
outsb
sbb
out
loopne
mov
jb
psrad
int
rol
push
imul
jae
mov
cmp
pop
bound
pop
sbb
push
and
test
adc
mov
popf
jle
sbb
add
sub
je
loopne
loope
pop
rorb
mov
outsl
jp
addb
loope
xchg
adc
fbld
inc
inc
jns
daa
fisttps
jge
out
adc
shlb
daa
mov
pop
sub
lods
inc
in
push
repz
cmpsb
dec
sahf
xchg
sub
xchg
xlat
cmc
out
addl
lahf
or
enter
inc
sbb
jp
shlb
adc
arpl
xchg
inc
inc
stos
negl
pop
ds
sti
add
repnz
hlt
push
or
aas
stc
test
inc
test
ljmpw
mov
mov
pop
xchg
mov
and
iret
add
dec
popa
ret
pop
cld
xlat
in
shlb
ret
mov
mov
mov
mul
push
shrb
push
pop
popf
or
add
imul
push
pushf
imul
fdivrl
mov
cli
movsb
push
xor
push
xor
insl
out
inc
jp
aam
shlb
mov
jl
or
push
lahf
cmc
std
fmulp
inc
pop
xabort
scas
setns
lock
sub
pop
in
cmc
xchg
gs
xorb
out
jl
mov
jmp
cld
adc
in
mov
push
xor
push
xor
lret
xor
inc
incb
insl
xor
xlat
push
lock
jne
nop
sub
jae
out
movsb
xor
mov
and
xor
dec
xchg
xchg
shll
ret
jnp
outsb
pop
xor
sbbl
cld
cli
jge
enter
push
sub
inc
or
or
xchg
jo
and
pop
test
lret
arpl
shll
jl
pop
clc
fwait
mov
adcl
clc
pop
mov
repnz
gs
js
std
repnz
popl
add
and
ret
stc
xchg
add
pushf
imul
sbb
int
mov
fwait
jmp
dec
push
jl
aaa
out
in
pop
lret
idivb
xor
sub
in
lods
subl
mov
fwait
mov
pop
popf
pop
mov
ret
sbb
or
cmp
inc
shl
mov
add
std
inc
sbb
pop
adc
add
test
and
in
leave
adc
push
fisttpll
cmpsb
adc
and
dec
inc
jns
aad
inc
movb
movsb
je
sub
sahf
inc
add
push
mov
cs
pushf
sub
xchg
fsubs
mov
lods
pop
stos
jge
jle
push
lahf
jmp
iret
fs
sub
push
pop
mov
jno
xchg
add
stos
push
dec
mov
lods
push
les
sbb
gs
jecxz
ja
fsubrs
test
mov
fstl
inc
popf
mov
xchg
idivl
sbb
mov
aas
insb
add
mov
stc
test
ljmp
push
jnp
pop
dec
push
push
sub
jle
fimull
jne
pop
mov
das
dec
fwait
mov
je
test
xchg
push
mov
cmpsb
ljmp
and
cmp
jb
shl
xchg
cmpsl
cli
add
xor
mov
sbb
ror
lcall
ret
in
xor
push
dec
sub
out
and
std
cmp
xor
loope
push
ucomiss
or
dec
mov
jns
xor
pop
pop
test
movsb
push
sbb
xchg
pop
mov
loopne
es
mov
or
xor
push
fidivl
dec
out
pop
push
insb
pop
movsb
cmc
div
hlt
mov
pop
mov
push
imul
data16
aam
outsl
mov
mov
sub
push
lcall
mov
add
fcoml
pop
or
test
arpl
sub
sbb
mov
sbb
sarb
cmpsl
lret
pop
in
and
gs
jae
out
mov
and
ret
jb
pop
sbb
into
push
mov
xor
lock
ja
pop
jecxz
mov
cmp
inc
es
pop
loop
xchg
sbb
inc
int
mov
xchg
or
xor
les
push
dec
movsb
mov
cmp
scas
xchg
mov
stc
sub
dec
pop
clc
scas
sub
cli
sahf
xor
xchg
in
jns
xchg
push
mov
mov
mov
pop
popf
push
ret
dec
xchg
jnp
jge
mov
test
or
mov
xchg
add
fwait
insl
cmc
in
jne
xchg
inc
lret
mov
retw
xchg
inc
imul
in
pop
mov
lods
lcall
fwait
push
test
sub
mov
jbe
stos
ret
sub
mov
sti
lahf
jae
movb
sbb
push
pusha
mov
iret
jb
sbb
testl
sub
push
ret
test
lret
or
xor
stc
push
mov
lods
insb
sahf
mov
pop
push
jge
and
pop
xor
pop
mov
aas
out
psrad
pop
pop
xchg
adc
sbb
jne,pn
fidivrs
adcb
jle
outsb
mov
outsb
and
mov
out
mov
cmp
movsb
idivl
leave
xchg
inc
movsl
inc
loopne
xchg
sub
and
inc
cs
int3
jl
mov
cli
push
lcall
arpl
aam
inc
aad
popf
cmp
das
mov
add
popa
inc
idiv
daa
mov
adc
sbb
xchg
rcrl
xchg
pop
mov
adc
pop
push
out
push
push
push
push
sarl
enter
pop
rcrl
gs
in
jo
push
mov
clc
lock
adc
popa
out
xor
mov
mov
cmp
btc
shlb
push
cmp
repz
imul
roll
adc
sarl
push
popa
push
xchg
repnz
mov
sub
mov
adc
jnp
outsb
mov
adc
out
xchg
daa
popa
push
sub
mov
xchg
mov
test
jmp
add
sar
fisubs
mov
push
adc
popf
movsl
in
and
xchg
cs
rcr
fwait
sub
lods
fldcw
and
ret
push
cmpsb
xorb
inc
mov
jno
jb
push
mov
push
fstpt
pop
pusha
mov
sahf
mov
scas
je
sub
xchg
shlb
incb
es
rclb
test
push
popf
pop
dec
fwait
dec
aad
mov
mov
jno
pop
jp
mov
mov
push
adc
pop
cmp
sub
mov
bound
lret
add
sti
or
test
push
mov
push
das
cli
and
leave
xor
out
mov
pop
scas
adc
insl
iret
test
into
jbe
add
pop
in
or
cltd
cs
inc
rclb
xor
sarb
shr
cmp
sahf
jne
sub
or
ret
jge
test
bnd
pushf
push
enter
inc
subl
aas
mov
add
mov
inc
fisttpll
add
xchg
pop
add
cmp
jo
dec
in
insb
lcall
or
lret
adc
lods
cmpsb
or
cmp
sbb
loopne
adc
insl
stc
and
gs
mov
pop
mov
xor
or
aaa
fsubrl
xor
clc
jne
or
inc
fildll
stc
pop
push
add
cmpsb
cmpsb
in
inc
inc
ds
pop
and
mov
pop
xchg
inc
cmc
enter
mov
push
out
pop
add
dec
int3
cmp
pop
mull
mov
xorb
outsb
ret
pop
pop
bound
xchg
loope
mov
jns
subb
push
push
out
sub
pop
std
add
sbb
loope
jo
mov
adc
mov
mov
in
sub
cld
or
push
push
int3
out
lret
sub
ret
mov
xchg
or
sbb
sahf
in
sub
testl
fcomip
clc
pop
xchg
sarb
pop
sbb
out
sar
jecxz
clc
add
fadd
push
jle
mov
push
mov
mov
pop
in
into
mov
imul
popf
push
push
jecxz
rcl
and
sbb
lcall
add
xor
xchg
ror
loope
test
outsl
lret
cmp
xor
cmp
add
cltd
inc
cmp
mov
sti
push
pop
pusha
fisttpl
push
mov
cmp
lods
lock
jp
ja
addb
popf
push
orl
rsqrtps
mov
test
subb
pop
dec
jecxz
test
mov
lahf
and
xorb
sbb
popa
out
push
pop
aad
ficoms
xchg
inc
addb
sbb
xchg
jg
shll
in
sti
aam
shrb
mov
inc
fmull
into
popa
mov
xorl
fucom
dec
jmp
adc
loope
xor
lcall
jg
mov
es
jp
push
rcrl
mov
test
int3
pop
pushf
cld
sbb
and
inc
clc
jns
insb
push
add
std
data16
loope
inc
xchg
lcall
jecxz
xor
xchg
cs
icebp
sub
test
idivb
aaa
stos
aam
loope
push
hlt
push
push
xchg
repz
jle
lds
rorl
and
lcall
push
scas
aaa
out
int
fidivl
sub
pusha
sbb
call
neg
mov
cltd
jg
es
add
pop
outsb
sti
dec
sub
popf
mov
jbe
pop
or
das
mov
insl
outsl
push
sub
outsl
xlat
lret
mov
daa
data16
mov
out
and
loopne
mov
sub
or
xchg
into
gs
dec
in
xchg
arpl
les
sbb
sbb
push
ljmp
xchg
pusha
push
sbbb
inc
jb
push
xchg
mov
mov
out
mov
push
xlat
pop
jb
jno
pop
in
cmc
mov
in
insb
cli
push
js
add
push
lds
gs
adc
xor
ss
mov
addr16
call
lcall
daa
push
mov
test
pop
sub
loope
loop
and
sbb
xor
lret
out
or
mov
xchg
mov
and
pop
mov
bswap
and
mov
aaa
xchg
mov
sbb
aaa
inc
cmp
push
xchg
sub
aaa
movsb
mov
cmpsl
shlb
lret
push
add
jg
adc
lahf
subb
xor
push
jl
repz
add
adc
sbb
push
add
stos
fnstenv
xor
pop
movsl
insl
ret
and
push
shl
push
call
in
js
aaa
xchg
jbe
mov
ret
gs
sub
adc
scas
sbb
push
xor
mov
test
cmp
jns
mov
mov
out
dec
cmc
cmc
cmp
daa
add
ret
mov
jne
sub
popa
dec
inc
imul
int3
mov
lods
xchg
repnz
mov
pushf
jp
icebp
rclb
addr16
push
xchg
lret
pop
movsb
cld
jns
ret
leave
sbb
ret
aaa
or
js
adcl
jae
out
mov
insb
dec
add
in
mov
xchg
cld
clc
bound
js
jo
in
xlat
outsb
mov
int
mov
xchg
sub
xchg
aad
push
sahf
je
inc
arpl
mov
cmp
mov
lahf
inc
xchg
out
pop
sub
ret
pop
icebp
movsb
push
shlb
and
sti
insl
mov
ret
pusha
cmp
and
adc
cltd
mov
out
mov
cwtl
push
xor
in
or
mov
arpl
loop
and
sbb
je
dec
lods
int3
and
aam
stos
jae
cld
and
roll
mov
icebp
sarl
xchg
fistpll
call
shl
jl
aam
mov
and
dec
popa
hlt
cmp
ss
dec
push
sbb
add
js
jmp
and
cmp
fstl
popa
jg
movsb
jns
and
ret
push
and
cmp
fisubs
in
cmp
idivl
adc
imul
or
clc
mov
ret
int
push
imul
dec
push
and
stos
xor
data16
cmp
sbb
in
adc
ds
mov
adc
adc
mov
stos
ret
jge
in
daa
dec
inc
fdivr
scas
mov
cmpb
jl
mov
orl
adc
insl
pushf
xor
or
ds
arpl
out
loope
dec
popf
imul
cmp
je
rcrb
mov
sahf
xchg
mov
cmp
and
adc
dec
je
lea
in
mov
xchg
jecxz
aas
xlat
adc
xchg
mov
sbb
incb
jp
loopne
cmpsl
push
ss
hlt
dec
fstpl
stc
stos
popa
and
mull
dec
daa
in
fwait
adcl
dec
dec
jecxz
fisubl
or
adc
pop
ja
push
sub
mov
jp
mov
clc
pop
adc
dec
and
addb
adc
add
rcrl
sub
aas
push
aam
ffreep
sub
xor
ret
mov
cs
cld
pop
push
push
mov
loopne
jl
adc
add
das
ljmp
test
fisttpl
lcall
fildl
cmp
xchg
fwait
cltd
add
decl
add
jecxz
fimull
pop
adc
dec
pop
cld
add
cmp
xchg
fadd
cltd
jg
xor
cmp
clc
jb
je
and
in
ds
pop
outsb
mov
push
cs
jl
push
jbe
lahf
or
outsl
sbb
xor
mov
pop
or
ja
pop
iret
mov
push
lcall
add
lea
or
adc
aaa
hlt
sub
sbb
push
cs
mov
sub
or
xchg
pushf
shrl
sarb
js
adc
or
pop
add
fdivrl
adc
add
jnp
sub
imul
rcrb
add
or
mov
push
jge
push
aad
xchg
dec
fists
ret
push
mov
stc
mov
lcall
xor
leave
sbb
fcoms
pushf
mov
idivb
dec
sbb
sbb
pop
lea
pop
and
add
pushl
stos
std
cli
popa
fildll
push
rcrb
iret
jmp
adc
repz
test
mov
xchg
push
test
sub
pusha
jne
dec
mov
adc
inc
and
push
push
pop
orb
mov
lods
and
jno
mov
push
sbb
dec
dec
pop
xor
or
inc
add
and
pop
inc
je
repz
jmp
orl
idiv
ret
xorb
es
xchg
cmp
push
jle
jae
push
test
dec
shll
cltd
mov
lahf
fists
adc
lds
pop
mov
pop
pushf
push
fcmovnu
and
outsb
div
and
adc
jns
nop
mov
sub
mov
mov
mov
or
fs
jg
fists
loope
dec
xchg
dec
out
or
add
mov
push
mov
mov
cmpsb
sbb
mov
sarb
push
mov
mov
fwait
jae
fadd
xlat
jmp
sbb
jne
ror
pop
xchg
iret
xor
scas
mov
je
mov
bound
adc
test
push
inc
es
mov
and
insb
sbb
mov
mov
and
lods
pusha
or
enter
and
push
in
in
jmp
mov
cs
arpl
jle
push
sbb
lods
test
imul
jae
push
js
pop
ss
jo
jae
cmpl
je
ljmp
xor
shlb
mov
xchg
stos
dec
and
cmp
xor
sbb
jnp
adc
push
and
mov
inc
cmp
aaa
xchg
xor
mov
push
pop
or
dec
add
pop
sub
aas
ret
lock
adc
test
daa
repnz
adcl
lahf
pop
adc
mov
xor
cmc
dec
sbb
sbb
cltd
in
ss
push
mov
adc
js
jbe
jo
cmp
ret
or
pop
lea
das
jo
jne
sbb
in
mov
hlt
insb
and
into
andb
inc
fisttps
lds
jle
xchg
xor
fst
jo
mov
loopne
pop
pop
xor
icebp
lcall
inc
movsb
arpl
dec
outsl
out
movsl
jo
out
adc
mov
mov
mov
add
and
cld
push
lcall
jge
push
pop
fxch
cli
ja
out
and
or
mov
addr16
roll
fisttpll
test
cmc
push
push
test
imull
mov
pop
sbb
rcl
test
aaa
daa
mov
or
inc
and
pop
jle
mov
mov
pop
imul
iret
jb
and
pop
stos
ja
shl
jno
fmuls
stc
aad
pusha
jae
out
inc
inc
hlt
sbb
pop
mov
std
ljmp
shll
loope
sub
inc
lods
popa
jp
mov
sub
cmc
push
adc
mov
es
jo
in
scas
das
push
cltd
imul
movsl
aaa
pushl
sub
mov
inc
inc
decb
add
mov
movsb
mov
test
stos
cmpl
xchg
sub
inc
scas
jno
jecxz
xchg
test
mov
pop
mov
daa
loope
decb
push
add
xor
cmp
outsb
and
or
not
andb
das
jl
mov
testb
xor
je
xchg
mov
int3
sbb
fstps
sbb
mov
ret
sbb
mov
jp
cmpsb
mov
int
sbb
dec
xchg
jbe
adc
das
leave
and
jmp
sbb
and
mov
jne
mov
push
mov
mov
push
pop
sub
cmp
mov
and
repnz
add
inc
pop
fisttpl
mov
mov
das
shlb
dec
sub
cmp
mov
mov
ljmp
lret
test
iret
jnp
dec
and
insb
pop
imul
test
pop
insl
inc
loope
xchg
pop
xchg
fldl
jb
mov
js
mov
jbe
loope
jne
jnp
in
mov
cltd
mov
jge
mov
adc
xchg
repz
fsts
mov
xchg
mov
cmp
mov
ret
rcrb
sbb
scas
fsubrs
movsb
xchg
inc
shrl
fwait
xor
cmpsb
or
jo,pn
push
in
mov
shll
out
lahf
popf
mov
xor
scas
inc
adc
jp
mov
popa
cltd
xchg
mov
pusha
test
ficoml
xor
test
add
inc
dec
in
in
fstpl
mul
push
xor
adc
popf
or
fstpt
push
mov
fcompl
bound
xchg
inc
dec
dec
in
mov
inc
sti
lea
xor
aaa
mov
std
lods
repnz
push
pop
pop
stc
add
or
inc
js
mov
mov
add
adc
dec
pop
inc
xchg
adc
cmpsl
ds
fnstsw
cmp
xor
popf
adc
aam
lret
and
pop
add
push
dec
push
jns
pop
vmwrite
jno
mov
lea
jnp
sbb
adc
jmp
push
jle
sets
push
mov
lods
scas
xor
dec
mov
xchg
mov
lods
test
fnstenv
add
iret
adc
test
in
cld
push
rcll
stos
jae
pusha
pop
or
inc
in
adc
or
adc
mov
mov
pop
inc
testl
sbb
sbb
xchg
mov
or
int3
and
rcrl
mov
xor
stos
pop
mov
xor
or
aad
ds
mov
fdivs
pop
sub
pop
in
push
jmp
xor
fsubrs
inc
xchg
mov
jo
jnp
sub
mov
mov
mov
insl
mov
mov
fildll
adc
push
jae
fldenv
movsl
cld
in
ljmp
out
mov
outsl
xchg
shrl
cmp
jns
add
test
mov
push
sub
bnd
xor
test
adcb
or
int3
jl
sub
add
cmpsb
inc
inc
mov
push
fbld
mov
ljmp
fyl2xp1
mov
mov
in
push
fcoms
dec
stos
rcl
inc
xchg
mov
aas
fadds
sub
cwtl
xorb
sbb
lock
je
add
push
psllq
sarb
jnp
jae
mov
data16
jno
mov
test
xlat
jp
xor
iret
aas
push
sbb
jecxz
cmpsb
gs
into
out
cwtl
stos
call
rol
imul
sbb
adc
enter
sub
dec
ftst
imul
je
dec
jmp
cltd
adc
imul
cli
sbb
sub
lock
repnz
jmp
push
inc
cltd
imul
xchg
je
stos
out
dec
jmp
xor
jp
fdivr
insb
out
mov
jp
push
call
fs
xlat
lods
ljmp
into
aam
xchg
enter
or
mov
cmpsl
pop
jne
mov
ficomps
sbb
and
xchg
push
imul
fstp
inc
cmp
rorb
jno
mov
add
repz
in
sbb
aas
fwait
mov
push
mov
pop
or
mov
inc
stos
xorl
xchg
shll
outsl
test
pop
test
mov
push
rorl
add
ret
out
out
rolb
fwait
cmp
pop
cmp
mov
repnz
cmpsl
popf
into
cmp
sahf
xor
pusha
rorb
inc
stc
mov
jecxz
xchg
lret
cld
pushl
les
cs
cmp
and
adc
xor
arpl
pop
inc
pop
je
sbb
sbb
push
lds
fdivrl
or
pop
dec
fdivr
ret
adc
mov
inc
pop
push
mov
adc
mov
in
pop
push
iret
pop
sub
out
mov
out
sti
xchg
adc
and
jg
mov
and
sbb
ds
out
mov
cmp
push
mov
shlb
xchg
push
mov
rol
mov
in
call
pushf
and
rcl
daa
rol
lahf
je
fcomps
push
aaa
insb
shrb
jns,pn
mov
or
movsb
nop
ret
fcoms
jecxz
aas
ljmp
daa
aas
imul
adc
add
ds
mov
out
sub
outsb
inc
lods
insb
xor
mov
sbb
dec
dec
push
mov
xchg
clc
fisubs
push
lods
bound
call
push
out
mov
jne
out
insl
aam
fldl2e
jno
ljmp
mov
inc
dec
cld
fdivrs
mov
icebp
mov
mov
int
orl
add
pop
dec
add
push
out
outsl
hlt
add
insl
fstl
ficoms
jno,pt
jl
decl
sub
cmp
mov
imul
xor
int
inc
pop
stos
mov
js
jl
addr16
in
test
ret
dec
inc
pop
and
mov
xchg
inc
das
mov
or
neg
mov
jecxz
mov
push
or
mov
mov
pop
inc
adc
adc
cmp
loope
xchg
out
fistl
pushf
shrl
lea
xor
jecxz
stc
jecxz
xlat
int
add
loopne
fstps
jl
push
mov
lods
sbb
xchg
cld
or
out
add
fistpll
sub
insl
jb
mov
cmp
int3
xor
xchg
movsb
cmp
sub
mov
ret
out
add
mov
push
cmp
dec
xchg
mov
pop
pop
pop
push
insb
push
mov
fbstp
insb
std
xor
cmpsl
cs
add
or
xchg
push
cmp
xor
lods
adc
outsl
dec
shrb
mov
cmp
push
fucomp
mov
or
arpl
xor
insl
cmp
rcr
sub
add
push
xchg
sbb
push
cmp
sbb
mov
sub
in
cmpsl
mov
push
push
lret
pop
das
dec
push
jnp
iret
out
cld
fisttpll
mov
cmp
jge
rorl
dec
ret
cli
movsl
xchg
xchg
mov
cld
pop
cs
dec
lods
mov
jmp
jge
fwait
cmc
daa
pop
push
xorl
push
lret
jns
inc
enter
mov
sbb
icebp
mov
in
sub
testb
pop
out
jno
jecxz
xor
out
pop
iret
arpl
sub
mov
pop
inc
repnz
mov
pop
dec
jno
xor
sbb
mov
aas
das
aaa
mov
dec
andb
adc
in
mov
sbb
data16
sets
jl
push
mov
fwait
leave
scas
xchg
cld
mov
lret
hlt
jle
add
iret
xchg
jb
ret
push
xchg
and
sbb
sub
dec
dec
jmp
in
pop
xchg
and
mov
fcompl
cmp
jb
push
sub
push
add
pop
cmp
pushf
mov
jl
pop
mov
fdiv
call
sbb
and
adc
mov
fstl
mov
shrb
inc
jl
mov
jno
add
pop
clc
xor
xor
into
cmp
push
push
das
jecxz
test
cmc
xchg
shll
adc
sbb
hlt
pop
jmp
pop
xchg
mov
mov
push
cmpsl
movsl
pusha
stc
xlat
mov
lahf
and
invd
cmp
nop
bound
and
mov
aam
add
ja
push
cmp
mov
adc
xor
rol
sub
fs
jl
loopne
data16
and
push
dec
mov
fs
jp
adc
outsl
jge
xchg
inc
push
push
dec
sti
mov
repnz
and
dec
sti
xor
and
test
mov
gs
lock
and
sbbb
adc
push
inc
push
insl
js
mov
hlt
out
pop
lret
lds
addr16
xor
mov
lds
xchg
out
xlat
pop
rorb
sub
jmp
mov
sti
iret
mov
xor
in
or
push
pop
xchg
addr16
mov
or
call
inc
cmp
shr
in
sub
sub
mov
xchg
dec
andl
pushf
jl
sub
xchg
test
push
inc
nop
fadd
jmp
iret
xor
push
outsb
ljmp
cmp
add
ja
rclb
mov
jbe
xchg
mov
mov
nop
mov
xchg
sbb
mov
and
adc
add
xor
add
sub
je
add
dec
stc
mov
sbb
pop
mov
pop
pop
outsl
cli
cmp
inc
or
sbb
mov
sub
or
xchg
out
push
push
or
push
out
cmp
mov
adc
sti
pop
sarb
pop
pop
fsubl
sbb
push
cli
sbb
mov
pop
mov
in
addr16
inc
pusha
scas
fwait
push
inc
rcll
xchg
rorb
sub
push
in
add
jecxz
popf
cmp
lods
mov
idiv
jbe
shl
sub
cmpsl
inc
aaa
scas
xor
int3
pop
mov
mov
scas
call
mov
data16
pop
icebp
lea
or
or
arpl
in
clc
jmp
dec
fucomi
or
js
cltd
push
pop
lea
or
andl
xor
ljmp
negb
jmp
sbb
in
stos
xlat
push
jo
bound
xor
or
mov
dec
cmp
sbb
pop
nop
pop
xchg
sub
ret
inc
daa
arpl
lods
jnp
outsb
inc
pop
sbb
cmp
push
lods
push
bound
mov
push
add
popf
inc
ret
pop
popa
add
mov
dec
jp
pop
loope
add
loope
adc
lcall
jb
mov
mov
pmaxsw
xor
mov
cltd
mov
mov
cmp
shrl
push
icebp
adc
je
fadds
movsl
loope
sbb
in
sbb
scas
es
xor
push
xchg
pusha
sbb
adc
inc
int
rcrl
je
repz
mov
adc
mov
fsubrs
pop
in
ret
gs
mov
mov
das
xchg
push
jb
push
stos
mov
pop
stc
xor
jge
xchg
and
push
hlt
leave
out
stc
imul
repnz
in
dec
jg
and
ret
dec
pop
xchg
mov
in
subl
mov
roll
and
mov
clc
negl
dec
inc
add
pop
das
and
shr
jbe
push
shll
add
out
add
popa
insb
sbb
shll
shrb
xor
xorb
mov
repnz
ss
fwait
pop
test
xchg
ja
lock
arpl
test
mov
push
push
inc
rclb
pop
jecxz
popa
xchg
dec
or
aad
pop
ds
sbb
or
cmp
cmp
jge
xor
popf
daa
popa
mov
fwait
mov
push
ret
int3
lret
sbb
hlt
push
jb
xchg
push
mov
insb
insb
fdivrl
pop
rclb
xchg
mov
lret
stc
push
shll
test
jns
in
mulb
data16
test
sub
fisttps
cmp
mov
sti
sbb
sbbl
jg
pop
inc
movups
test
mov
jb
in
mov
cmc
lods
shrb
add
jne
jo
inc
mov
mov
arpl
mov
inc
nop
paddusb
idivl
xlat
xor
xor
push
int3
sbb
xchg
test
pop
mov
pop
xchg
jecxz
test
pop
fidivrs
inc
lods
and
lcall
push
enter
scas
test
adc
into
push
and
idiv
xor
ret
outsl
and
pop
adcl
xor
lods
icebp
loope
fists
adc
ss
insb
jne
pop
dec
popa
pop
jge
insb
push
inc
mov
push
adc
or
and
test
push
jl
cld
jns
lahf
lahf
pop
push
aaa
mov
xor
arpl
adc
rcl
lret
dec
imul
sti
sbb
adc
mov
adc
out
mov
xor
rorl
repz
dec
sub
popa
lcall
mov
jns
inc
inc
pop
mov
sarb
jne
stos
or
pop
ja
clc
stos
call
cmp
adc
ds
lea
movb
add
mull
sbb
lods
imul
jle
aas
aad
cmp
mov
pop
fadd
iret
addr16
mov
jo
fiaddl
fs
mov
icebp
mov
in
cltd
jne
adc
mov
jecxz
pop
aam
iret
xor
or
nop
cmc
sbb
xor
sub
sahf
xor
mov
sti
les
int
jp
clc
call
adc
or
mov
or
cwtl
push
xchg
test
sub
arpl
lods
add
mov
pusha
xchg
pushf
sub
and
jne
fwait
and
add
cmp
lock
leave
jbe
mov
add
or
sub
sub
pop
in
push
push
iret
sbb
mov
sbb
add
movsb
mov
push
jecxz
jge
jno
into
jmp
lea
imul
mov
push
imul
xlat
xchg
mov
test
cmp
js
xlat
cmp
fstpl
add
jecxz
cmp
fsts
jbe
sbb
out
dec
mov
push
mov
negb
shll
sti
add
mov
or
pop
lcall
imul
popa
add
push
xchg
push
xor
lahf
add
aad
pop
dec
fdivrl
push
leave
mov
jo
ja
push
jl
in
jbe
cmp
cmp
in
insb
mov
orl
xchg
pop
inc
sub
xchg
pusha
arpl
out
xchg
sub
mov
mov
in
fldcw
pop
in
arpl
dec
cmpsl
mov
lea
into
and
dec
sub
push
push
add
ljmp
incb
add
ret
dec
mov
dec
cmp
add
in
lret
fcoml
xor
mov
fnstcw
cmp
push
adc
or
cmp
push
fmull
cmp
push
test
xchg
sbb
xor
rol
xor
dec
adc
js
pop
es
movsl
movsl
stc
nop
lea
ficomps
push
out
cld
xchg
inc
add
ja,pt
and
sub
fwait
dec
inc
fistps
xor
int
jb
negb
push
ficoml
push
sbb
xor
inc
adc
enter
mov
jmp
stos
lds
xchg
mov
loope
or
test
xchg
dec
out
in
pop
and
or
push
popf
repz
mov
sbb
popa
jno
lret
cmp
stos
lret
pop
out
imul
rclb
nop
mov
outsl
jge
xorl
cltd
adc
fwait
insl
scas
das
or
lea
es
adc
cld
add
xor
xor
stos
mov
inc
bnd
pushf
adc
std
sbbl
std
pop
rsm
inc
lret
pop
push
xchg
xchg
data16
jmp
scas
adc
push
mov
bound
sbb
sub
push
ljmp
inc
pop
imul
jmp
out
arpl
add
pop
jbe
shrl
xchg
xlat
popa
sti
sbb
dec
aas
aas
mov
std
xchg
pusha
mov
push
in
or
mov
fucomi
push
mov
or
dec
xchg
cwtl
pop
pop
mov
cwtl
push
xchg
add
dec
in
imul
xchg
repz
xchg
das
and
daa
dec
mov
movsb
xlat
cmp
loop
fiadds
or
hlt
sub
lcall
push
loop
add
fdivrl
inc
iret
jne
sbb
mov
or
fsubl
mov
sub
out
dec
dec
fdivrs
mov
jmp
mov
lret
adc
or
mov
cwtl
fs
add
fidivrs
cmpsb
jmp
cwtl
mov
adc
movsl
call
ja
add
jnp
push
pusha
or
test
es
or
pop
lcall
cmpsl
das
xchg
icebp
shrd
movsb
mov
out
rorb
xor
test
divl
jnp
out
jecxz
lods
xor
fwait
sub
xchg
divl
pushf
sub
clc
adc
push
cmpsb
push
push
pop
push
add
dec
test
loopne
pop
loopne
xchg
add
arpl
cmc
jecxz
mov
xlat
sbb
cmp
movsb
outsl
pop
and
fistps
xor
and
clc
shlb
push
xchg
sub
ss
cmp
or
xor
jnp
arpl
sbb
sbb
mov
cli
cltd
pusha
xor
dec
push
sbb
imul
orl
sbb
in
sbb
into
or
xchg
aaa
out
fnstcw
mov
mulb
sbb
iret
sub
sub
jne
xor
xchg
dec
xor
divl
popa
fldl
cmc
dec
je
rcr
pop
lea
hlt
push
sbb
push
inc
idivb
rcr
enter
pop
call
cmpsl
jbe
shlb
addr16
dec
outsb
mov
in
loop
psllw
jno
xchg
gs
mov
daa
fdivs
pop
hlt
mov
into
lea
push
pop
ret
cltd
or
adc
lods
and
lea
or
gs
ret
mov
scas
popf
popf
mov
insb
inc
and
sub
jmp
sahf
std
mov
jae
dec
xchg
enter
push
or
sbb
scas
lcall
xlat
cmp
idivb
or
icebp
negl
jb
in
mov
cwtl
call
sub
add
hlt
mov
mov
pop
dec
imul
movl
inc
adc
rcrb
jae
notb
xchg
or
cltd
sbb
inc
pop
pop
int
and
and
fnstsw
xchg
orb
and
push
push
jl
cmp
in
or
sub
xor
jp
inc
out
xchg
cmp
lods
aam
lret
adc
add
out
mov
jmp
les
push
out
xsavec
lods
ret
test
or
je
daa
or
jge
push
jl
data16
stos
movsl
xchg
aas
enter
or
push
jne
popf
ffreep
clc
add
fiaddl
dec
mov
inc
jb,pt
push
xchg
xor
add
rolb
sub
sti
push
adc
jne
les
popa
out
and
jnp
clc
cmpsl
adc
inc
out
mov
mov
adc
xchg
pop
mov
out
cmc
lcall
out
aad
jae
sbb
addr16
das
xchg
and
pop
test
mov
dec
or
cld
movsl
jo
cmp
push
push
dec
xor
xlat
push
cmp
pop
imul
add
jp
ljmp
dec
rolb
sub
cld
xlat
jb
sbb
int
push
pop
inc
add
sbb
dec
jae
mull
sub
ret
out
mov
push
mov
addb
cmp
fcmovbe
xchg
mov
xchg
or
cmp
fsubrs
add
daa
dec
pushf
in
insb
xor
cli
dec
adc
scas
and
aam
cmpsb
pop
into
stos
jnp
outsl
rorb
shlb
fdivrl
inc
shl
xor
add
xchg
cli
test
xchg
fnstsw
mov
jne
lods
jb
dec
test
push
gs
filds
push
sbb
movsl
jnp
mov
jg
cmp
sbb
push
mov
and
in
and
test
lcall
mov
push
out
idivl
incb
adc
xlat
insb
in
mov
adc
clc
insb
push
out
stos
fadd
repnz
and
andb
xlat
and
int3
fdivr
int
mov
je
loop
and
xor
cltd
xchg
js
jmp
push
inc
fs
andb
or
cmc
cwtl
insb
inc
rcrb
push
sub
in
cmc
subb
adc
xor
add
addl
fcomps
std
int3
nop
fnstsw
in
bound
sbb
subl
inc
mov
lods
pop
shrb
jle
les
mov
push
xor
inc
or
sbb
sub
sbb
dec
pop
mov
cltd
xorl
test
loope
dec
pop
pop
push
or
sub
in
cmp
add
add
dec
rcpps
test
adc
stos
je
adc
xchg
sub
push
cwtl
clc
mov
pop
sub
je
loope
hlt
mov
rclb
mov
imul
aad
in
inc
bnd
dec
dec
test
in
cs
mov
xor
push
pop
push
push
sbb
push
jp
test
push
cmp
lret
mov
push
push
jge
ja
jp
fistpll
movsl
dec
test
rcl
inc
popa
mov
addb
ss
cmp
or
sbb
scas
ret
lea
or
xchg
test
cmc
aaa
insb
movsl
and
mov
xor
loopne
push
jg
mov
cmp
pop
daa
jp
mov
inc
mov
jmp
and
xchg
ljmp
cwtl
outsb
xor
mov
or
add
push
dec
outsb
vmwrite
jge
sub
lea
loop
sbb
addr16
imul
stos
pminub
push
dec
fs
adc
xor
sbb
jb
mov
out
stc
or
jl
mov
mov
pop
daa
mov
jne
lods
cmpsb
mov
jl
leave
mov
rcrb
stos
shlb
dec
xchg
imul
hlt
cld
lret
leave
popa
not
int3
sbb
addl
sbb
call
out
ret
push
adc
and
mov
imul
mov
xor
cmpsb
cld
shl
jb
mov
dec
adc
test
jl
mov
push
jg
scas
add
sub
stos
pop
test
pop
gs
mulb
ret
mov
repnz
hlt
cmp
xchg
lret
sahf
inc
mov
pop
mov
pop
push
cltd
rcll
insl
lret
clc
bound
sbb
fcmovbe
adc
mov
mov
pop
push
lods
das
inc
in
loop
xor
or
out
outsb
imul
and
dec
lods
pop
cld
stos
mov
pop
shl
es
pop
shll
sub
push
and
repnz
adc
sbb
gs
repnz
shlb
jge
lods
push
gs
cltd
push
insb
enter
aad
loope
inc
cmpb
jmp
popa
xor
es
push
cli
xchg
fisubl
out
inc
sti
xor
jbe
iret
int3
lahf
mov
mov
dec
stos
add
push
lret
cmp
jmp
sahf
mov
mov
pop
mov
mov
push
fdivrl
aad
xor
jae
call
xchg
add
push
mov
xor
lds
adc
aas
xor
pause
sbb
sbb
call
imul
mov
adc
jno
xchg
inc
inc
mov
loope
sti
or
mov
insb
xchg
add
or
sbb
mov
int3
andl
sub
pop
xchg
mov
sbb
imul
xor
pushf
xchg
mov
cmp
je
push
pop
loopne
push
leave
sti
or
pop
ss
adc
addr16
jle
mov
in
pop
ret
xor
mov
push
cltd
inc
ret
pop
scas
rorb
aaa
jbe
rol
sub
fwait
xchg
lea
add
xchg
fnstsw
jo
add
loop
sub
xor
xor
cmpsb
push
mov
decl
aaa
add
fimuls
xchg
rorb
xchg
dec
fisubrs
out
or
push
push
cmpsl
hlt
pop
cltd
fs
fwait
outsl
push
fiaddl
pop
adc
lret
ret
icebp
scas
pop
pop
mov
adc
sbb
or
in
inc
mov
xlat
pop
add
push
sub
xor
or
push
cmp
outsb
enter
cmp
in
pcmpeqw
cli
sub
sbb
jmp
xchg
mov
inc
cmpsb
loop
cmp
mov
xor
mov
mov
aaa
add
adc
cli
imul
movsl
es
addr16
mov
adc
cld
sub
inc
mov
data16
xor
cwtl
mov
jge
jno
test
cmc
aad
in
or
roll
mov
repz
out
xor
dec
and
jo
cmp
js
mov
sbb
mov
sub
je
xlat
fmull
add
mov
aas
icebp
imul
mov
or
cmp
mov
cs
pcmpgtw
mov
push
cmpl
adcb
push
mov
mov
sbb
std
outsl
call
mov
sub
es
lret
jnp
stc
inc
sub
adc
jmp
xorl
out
mov
mov
stos
xor
jbe
cmp
add
xor
pop
orb
fidivs
jl
pop
call
push
add
lods
stc
mov
fld
sbb
outsl
sub
xchg
ss
cmp
mov
sarl
jg
rorl
roll
enter
std
cmp
subb
pop
add
call
xchg
xor
cmpsb
mov
bts
add
or
jmp
push
ss
push
mov
cmpsl
sub
dec
xchg
push
js
cmp
pop
sub
nop
inc
aaa
xor
outsl
push
push
loop
sbb
mov
dec
mov
mov
loopne
xchg
jecxz
icebp
xor
add
jb
fldcw
xor
mov
ja
inc
xchg
cld
mov
pop
test
sub
aaa
rcrb
pop
in
sbb
inc
gs
jecxz
cwtl
aaa
lcall
sbb
cmpsl
out
sahf
adc
xlat
cltd
ljmp
push
data16
push
aad
and
mov
or
xlat
jle
cmp
or
or
sti
bnd
jg
cmp
xor
jmp
cs
add
pop
clc
cmc
sub
sbb
mov
jns
and
mov
or
mov
orb
pop
sbb
push
pop
or
ret
orl
in
and
out
jns
je
sahf
pop
aas
lods
pop
pop
inc
mov
cmc
pushf
dec
inc
jl
push
mov
out
pop
cli
into
push
test
stos
pop
mov
mov
mov
mov
addl
jge
je
and
stos
aas
mov
xor
lock
in
push
inc
pop
lods
sbb
aam
add
sbb
mov
sbb
hlt
add
test
add
dec
push
mov
dec
jle
out
lahf
mov
shll
mov
pushf
inc
sbb
rcll
popa
jecxz
xchg
call
popa
sbb
push
lahf
sti
sbb
test
jp
lret
jge
mov
cmp
jp
and
sahf
adc
lret
dec
stos
adc
outsb
and
pop
cli
jg
fdivs
add
popf
pushf
ficomps
xchg
cmp
pop
xor
xchg
xchg
mov
int3
ja
mov
mov
arpl
sbb
pop
mov
into
pop
mov
out
mov
call
cmc
pop
inc
fwait
mov
xchg
outsl
sbb
enter
outsl
fcomip
jmp
dec
cmp
and
xchg
pushf
mov
fnstenv
xor
movsb
sti
out
sub
outsb
mov
nop
cmp
fneni(8087
mov
jecxz
and
xor
sarl
test
int3
cld
jl
addr16
jge
and
lcall
frstor
fstpt
in
ret
cmp
shlb
xchg
pop
adc
loope
cli
mov
xor
lret
pop
test
sub
pop
lcall
lahf
sti
inc
pop
lahf
push
out
sbbl
aaa
cmc
sarw
xor
clc
lret
adc
gs
jnp
inc
sahf
sbb
outsl
add
roll
cmp
int3
pop
and
mov
xchg
xor
cltd
mov
fstps
lret
gs
adc
adc
push
dec
add
and
inc
rolb
xchg
data16
lret
stos
lds
mov
dec
cmpsl
dec
push
pop
or
movsl
and
jl
fistl
xor
pop
adc
mov
mov
lahf
xchg
rorb
int3
xchg
mov
mov
das
jae
imul
jmp
dec
mov
adc
sahf
sbb
iret
out
adc
ds
loopne
push
in
dec
inc
xchg
es
push
mov
jg
stc
stos
inc
adc
cmpxchg
aas
ficoml
lret
xor
or
xchg
insb
addb
adc
aas
xchg
and
jg
lret
sarl
ret
pop
jb
clc
lret
mov
mov
push
mov
pushf
aaa
pop
xor
into
or
pop
leave
ja
idivb
fistpll
in
adc
stos
xchg
testb
dec
movsb
loopne
inc
pop
out
lea
cmp
inc
je,pt
and
loopne
mov
lcall
xchg
pop
lods
mov
pop
test
push
push
les
inc
jae
xchg
or
lods
cwtl
xor
dec
ret
popf
cs
sub
leave
ljmp
push
pop
arpl
pop
sub
cmc
std
fldl
mov
idiv
outsl
mov
lret
xorb
lods
pop
jp
xchg
xchg
cmp
shlb
pop
int
or
add
ret
mov
mov
pop
mov
and
cwtl
sbb
cmpb
ds
scas
mov
and
jmp
shlb
push
pop
enter
out
push
sbb
xor
jo
xor
fst
es
loop
xchg
stos
or
out
xor
mov
sbb
in
mov
push
adc
pop
fs
rcrb
push
dec
sbb
mov
adc
or
dec
cmp
imul
shll
pop
out
sti
xorb
insl
jno
fnsave
push
pushf
test
xlat
sub
shl
dec
add
icebp
cmp
push
push
sub
aaa
les
pop
in
aad
jns
adc
bound
pop
xor
mov
ds
cs
or
push
pop
cmp
adc
data16
and
cmpsb
xorl
enter
nop
cmp
stos
call
sub
mov
or
fnstsw
dec
outsl
and
jne
int
mov
das
mov
movsl
out
rcl
pop
mov
pop
andb
mov
push
add
dec
jnp
and
iret
icebp
or
in
jae
pop
cmp
subl
inc
and
ds
scas
mov
shlb
stc
mov
ret
mov
cmpb
scas
mov
das
out
fdiv
rol
movsb
mov
sahf
inc
out
ds
push
or
xchg
push
jne
inc
and
jmp
push
fisubrl
nop
push
stos
mov
push
mov
or
mov
mov
and
fildl
mov
jno
out
cmpsl
cli
es
add
fsts
mov
aam
sub
mov
dec
adc
jge
aam
test
and
jnp
add
imul
xor
rorl
rcrl
mov
loopne
jae
fs
hlt
jl
xchg
adc
sub
test
aaa
sbb
xchg
jmp
rcr
inc
cs
pop
sub
sbb
stc
cmpsb
push
ljmp
jns
pushf
cmp
cmc
mov
leave
adc
or
cmp
ret
test
outsl
mov
out
jbe
inc
mov
shll
xchg
scas
pop
aas
ror
stc
js
mov
mov
repz
push
or
sbbl
mov
fiadds
loop
xor
pop
add
clc
mov
aam
dec
xchg
cli
sub
dec
scas
addb
xchg
inc
fmuls
mov
inc
into
sub
jns
out
jb
xor
sub
mov
mov
xlat
ljmp
inc
je
fcmovbe
xchg
mov
test
sbbl
mov
cwtl
das
rorb
call
pop
jge
outsb
mov
pop
cli
xor
insl
jg
dec
loope
mov
jp
fldenv
xchg
mov
add
xor
sub
adc
xchg
xor
sbb
enter
dec
push
test
xchg
mov
xor
mov
popl
jne
jp
sub
adc
cmp
outsb
jno
ljmp
les
cmp
jge
scas
dec
sub
mov
pop
bound
imul
push
movsb
push
aas
cmp
lock
fists
sbb
mov
cmpsl
aaa
pop
dec
fisttpll
fiadds
dec
nop
arpl
ret
insl
and
pop
lock
data16
out
les
xor
shl
out
mov
dec
int3
test
adc
cmpl
lret
out
pop
xor
inc
mov
in
mov
outsl
mov
inc
and
scas
inc
jle
xchg
mov
xchg
push
out
ds
out
xor
out
popf
adc
inc
cmp
ret
xchg
aad
aad
neg
lods
push
xor
arpl
es
imul
cmpsb
dec
cwtl
daa
adc
js
ds
daa
cli
jg
pop
fimull
dec
add
addl
out
jle
movsb
adc
sub
sbbb
rcl
push
icebp
mov
xor
and
pop
jne
mov
in
ds
es
mov
dec
out
mov
scas
outsl
jno
stos
orb
negl
or
dec
call
or
repnz
push
inc
pushl
mov
mov
cld
enter
adc
scas
pop
outsb
das
adc
xchg
mov
sub
push
into
bound
into
outsb
test
ror
imul
ret
and
cmc
add
jno
movsb
and
jl
dec
test
in
inc
or
in
mov
sbb
sbb
mov
jae
addr16
push
fdivs
test
and
fildl
jmp
cmp
xor
xorl
dec
lret
mov
in
xor
daa
setb
adcb
leave
addr16
add
test
sbb
lds
loopne
and
xchg
or
cmp
jns
and
cmp
lods
cmp
add
cmc
outsl
lods
outsb
std
lods
xchg
sub
fldcw
sub
mov
mov
mov
js
inc
pop
pop
add
xor
mov
push
call
pop
inc
mov
push
xchg
xchg
or
aas
add
out
sbb
ja
inc
aas
sti
jp
mov
fisubrs
insb
ljmp
dec
int3
or
mov
repnz
cli
addl
mov
cwtl
in
mov
loopne
or
mov
or
daa
cwtl
sbb
test
xlat
lock
aam
dec
sbb
shr
cmp
mov
or
out
movsl
fnsave
and
outsl
idivw
inc
data16
dec
sub
ffree
jno
and
test
xor
xchg
aad
pop
add
or
popa
xchg
add
push
xchg
arpl
das
clc
ret
cmpl
iret
popa
xchg
jnp
add
nop
popf
jl
dec
adcl
popa
loopne
jle
repnz
add
mov
jg
jnp
jb
cmc
insl
mov
dec
dec
neg
sti
ds
sbb
jecxz
inc
xorb
push
and
fs
lods
outsb
xchg
xchg
jae
pop
mov
adcb
sbb
scas
mov
in
sar
pushf
mov
ror
jo
outsb
mov
je
clc
push
aad
xchg
push
dec
add
adc
das
ret
mov
enter
cmpsb
cld
mov
mov
sub
mov
mov
in
inc
stc
cltd
clc
xchg
ret
nop
sub
scas
cwtl
push
sub
dec
in
push
pushf
jo
stos
add
xchg
fnstcw
out
or
in
xchg
clc
fs
and
jbe
mov
std
movsb
jg
int3
hlt
out
sbb
repz
outsb
sub
push
repnz
push
jnp
ficoml
push
es
imul
pop
xchg
inc
xor
xchg
lds
cmc
lahf
scas
out
nop
mov
xor
and
out
gs
daa
xor
and
inc
ret
push
mov
or
sarl
mov
cmpsb
add
jl
xchg
jle
sti
adc
ret
movsl
addr16
addr16
xor
std
pop
cmp
fwait
or
push
add
cli
icebp
and
fisttpll
push
iret
cld
pusha
les
cmp
jecxz
in
mov
out
cld
insb
push
pop
sub
cmpsb
stos
inc
daa
push
outsb
mov
andb
fnsave
ffreep
je
out
shll
lret
fs
push
mov
push
in
aaa
xor
push
xchg
int
cmp
mov
sbb
daa
imul
xchg
in
leave
mov
mov
dec
push
dec
dec
gs
mov
fnsave
enter
mov
xchg
jmp
mov
jge
xor
mov
fsubrp
mov
faddl
sbb
sub
loop
jl
es
ret
lret
jns
lods
push
push
push
loopne
clc
pop
pop
xchg
or
out
out
sub
rorb
xchg
lret
cld
pop
push
js
in
into
pop
test
imul
mov
test
push
inc
cmp
sbb
shrb
ret
xchg
dec
adc
push
sbbl
js
pusha
rcrb
push
jmp
cmp
test
xor
and
dec
mov
pushf
sub
insl
sbb
mov
mov
icebp
adc
dec
js
pushf
mov
sub
mov
sbb
mov
popf
stos
pusha
out
jnp
adc
mov
jne
das
push
outsl
mov
cmpl
jp
mov
dec
scas
aam
dec
imulb
adc
je
xchg
shlb
std
mov
shrb
mov
sbb
add
xchg
sub
lods
mov
outsb
lcall
movsb
sarl
adc
clc
sbbb
mov
cmpsb
mulb
push
cmpsb
ficomps
js
scas
mov
repnz
addr16
pop
neg
or
push
mov
cwtl
sti
insb
rclb
imul
sub
out
fs
mov
xchg
xor
jle
aam
add
rolb
mov
dec
adc
addr16
sub
xchg
fcmovb
out
outsb
inc
and
sbb
pop
fwait
jl
mov
xchg
cmp
cmpsl
loop
mov
xchg
and
out
aas
adc
popa
lea
jmp
lret
mov
xchg
xlat
movsl
jns
pop
add
push
inc
in
cmpsl
cwtl
mov
adc
outsb
lret
aad
cli
push
mov
mov
jl
out
cmpsb
movsb
jle
out
push
sub
xchg
cld
lds
add
lcall
hlt
lock
pop
or
pop
mov
jp
stos
iret
nop
mov
fisubl
insb
xchg
xor
and
pop
rcrl
pop
inc
imul
jbe
add
pusha
aad
adc
iret
inc
push
inc
sti
addl
movsl
ja
sbb
add
imul
fs
fisttps
mov
push
xor
aaa
mov
mov
or
mov
xchg
pusha
fsubrl
in
and
pop
dec
aas
add
rclb
xchg
test
sti
jge
mov
adc
xchg
call
push
and
adc
faddl
and
jnp
nop
aam
cs
mov
sbb
testl
out
push
dec
add
jecxz
in
pop
push
lcall
pushf
lahf
pop
outsl
ss
dec
flds
mov
and
mov
aas
je
sbb
mov
dec
rclb
iret
inc
mov
test
mov
data16
or
aaa
pop
in
dec
into
push
daa
cmp
cmp
fwait
sbb
leave
mov
sub
in
push
mov
dec
lret
xchg
adcl
or
ret
sbb
xor
imul
sbb
cld
scas
or
movsb
ret
or
pop
jmp
movsb
repz
roll
jo
lock
imul
or
out
xor
insb
iret
or
add
mov
imul
cli
ds
movsb
mov
shrb
stos
dec
add
fs
dec
mov
xor
enter
xor
mov
or
shrl
popf
movsb
in
push
adc
fcmovu
bound
daa
or
ret
pop
xchg
mov
fwait
xor
mulw
outsl
inc
pop
push
das
cmp
out
and
jl
int
scas
cmpsb
dec
mov
cmp
mov
inc
mov
push
aam
sbb
outsl
jnp,pn
xchg
mov
scas
loope
or
cltd
jnp
cld
out
jae
mov
and
mov
dec
and
add
scas
jbe
shlb
add
out
lea
xor
std
fcomi
ret
cmp
fsubs
test
lock
imul
cmp
sbb
push
in
inc
lods
ss
stc
xlat
jbe
mov
and
call
fdiv
popf
xor
sub
stos
out
cmp
out
adc
and
push
jmp
repz
cs
xor
pop
sub
mov
jmp
or
cmp
in
inc
lock
jnp
xchg
rclb
lock
lods
cwtl
fildll
jnp
sbb
xchg
test
imul
xchg
pop
push
mov
push
push
int3
or
push
test
xor
mov
push
test
je
mov
lahf
mov
dec
mov
lods
add
je
xor
iret
lods
push
loop
push
sbb
scas
inc
xchg
sub
xorl
xchg
lea
orb
dec
adc
shlb
nop
cmp
test
scas
roll
and
jle
movsb
xchg
inc
pop
mov
into
jg
dec
or
fildll
ljmp
insl
out
fldcw
or
sbb
cmp
mov
arpl
stos
and
cs
mov
cli
pusha
jo
xchg
xor
cmpsl
mov
pushfw
add
mov
leave
dec
scas
cli
stos
addr16
ss
in
adc
repnz
pop
sbb
mov
sbb
jp
xchg
dec
fidivrl
mov
pop
and
mov
mov
jge
dec
mov
or
rol
andb
xchg
cmp
sub
add
pop
jle
rcrb
mov
mov
movsl
lds
xchg
in
les
pop
lcall
cmp
mov
push
ss
out
sub
andl
mov
push
cmp
mov
pop
add
outsb
jp
pop
ret
sbb
xor
repz
push
mov
mov
sbb
add
sbb
mov
sub
and
out
jmp
jne
popa
push
aad
adc
jno
shlb
jecxz
and
or
pop
jne
adc
rolb
add
loop
sbb
push
or
sub
cmp
pop
mov
mov
sbbb
xchg
jmp
out
sub
sahf
adc
jg
add
dec
mov
adcl
jle
and
inc
xchg
movsl
shrb
imul
or
mov
shll
inc
gs
and
pop
add
out
jb
push
shrb
inc
lahf
cmc
dec
sbb
dec
ljmp
cmp
dec
inc
insb
cli
sti
cmp
dec
out
mov
mov
out
ret
jg
fiaddl
loope
push
lods
jg
xlat
fidivrl
lods
nop
or
movsb
cmp
leave
push
xor
ds
cli
addr16
jns
movsb
and
jl
push
test
xchg
lret
int
in
in
push
lea
xchg
or
dec
daa
fdivr
mov
cmpb
xorb
imul
sbb
xchg
cmpsb
mov
lcall
jge
add
stos
iret
xchg
adc
pop
pop
inc
jg
jmp
and
xlat
in
fisubs
out
push
rol
int
push
mov
adc
jle
xchg
out
sbbb
and
sub
sbb
testl
and
lret
sbb
arpl
sarb
gs
test
mov
shll
and
cwtl
insb
imul
mov
adc
call
fists
aaa
mov
in
fdivrp
repz
jp
notl
fists
stos
sbb
sar
je
lds
in
lock
fcomps
loope
sbb
adc
mov
adc
lea
sbb
mov
je
lret
sbb
mov
mov
int
mov
aam
icebp
out
xchg
add
or
icebp
lods
dec
adc
fdivs
sub
adc
cwtl
loop
mov
mov
add
or
daa
jnp
movsl
cmpsl
cwtl
sub
jmp
insb
sbb
xchg
mov
and
icebp
sub
enter
push
mov
imul
repnz
jle
or
jns
stos
push
sbb
rcrb
fmull
rdtsc
pop
fwait
inc
adc
mov
lahf
xchg
je
jns
dec
dec
xchg
in
inc
jnp
mov
pop
cmp
sbb
repnz
cmp
movsb
ss
inc
cli
push
sub
cmp
mov
mov
ja
mov
push
outsb
std
xchg
jmp
loope
jns
stos
aad
push
jno
jno
or
cmp
or
sub
stos
push
mov
xchg
add
mov
les
sbb
loop
lahf
sbb
push
and
dec
add
cmp
cmp
or
loopne
and
jge
mov
add
scas
sarl
add
rcr
mov
pop
mov
push
mov
pop
inc
cmpsb
push
and
adc
fucom
sbb
sbb
ret
jb
stos
sub
shrl
pop
jbe
jl
test
pop
aas
xor
pop
xchg
mov
sbb
test
test
lahf
adc
xor
pop
add
sbb
rcrb
sahf
jge
cmp
add
mov
in
adc
dec
insl
movsb
imul
fwait
mov
cltd
fcompl
jns
mov
xor
mov
ljmp
xor
lods
mov
xor
push
mov
insb
sbb
and
jle
dec
push
xchg
pop
popa
xchg
dec
stos
xchg
scas
cwtl
xor
aas
stos
push
sbb
sub
cmpsl
cli
mov
ja
ret
pop
adc
leave
adc
push
xchg
inc
sbb
cltd
fwait
fxch
repnz
mov
pop
fmul
xchg
rclb
sbb
lds
xor
push
outsl
rorl
mov
xor
test
xor
push
in
daa
xchg
lock
int
cmpsl
xchg
push
adc
push
fdivr
mov
adc
ja
add
fldt
rorl
sub
fucomp
mov
jge
out
cmpsl
cmp
or
rcll
inc
popa
cmpsb
mov
es
jp
inc
ret
jg
cmpsb
fcmovbe
cs
xor
test
inc
lds
clc
mov
aas
xchg
jae
ficompl
or
inc
add
out
fldz
xlat
inc
jecxz
adc
inc
rorb
rcrb
nop
cmp
pop
js,pt
mov
add
jl
aam
push
mov
mov
push
adc
test
sub
test
xchg
pop
mov
ja
pop
fcmovu
inc
in
and
sbb
dec
mov
nop
or
jb
jno
sub
out
aam
dec
test
aam
mov
jo
out
adc
inc
push
movsl
test
sbb
sbb
push
cmp
mov
push
rorl
stos
stos
out
add
inc
je
sbb
mov
xor
call
push
imul
imull
pushf
push
fs
jns
push
mov
mov
pop
jl
test
aas
outsl
mov
jge
or
lahf
dec
xchg
bound
jb
je
xor
push
fsubl
mov
mov
call
dec
pop
and
inc
xchg
cwtl
or
fidivl
movb
shll
insb
cs
sub
inc
adc
adc
enter
inc
rcr
xchg
call
cwtl
insl
xchg
icebp
cmp
push
js
in
xchg
cltd
adc
mov
cmp
and
lret
jno
mov
js
test
ret
mov
push
mov
out
rcl
adc
movsl
jns
cmp
and
cmpl
movsb
int3
xchg
rcl
negl
arpl
test
mov
inc
lods
mov
test
xorb
idivl
lods
cmp
test
dec
test
ja
stc
int
scas
roll
leave
mov
push
movsl
cmp
add
lods
adc
addl
lret
dec
xor
clc
je
cltd
pop
xchg
test
sub
out
shl
sbb
call
popa
or
push
out
cs
fsubrs
mov
loopne
or
lcall
test
mov
inc
xorb
mov
cmp
movsl
arpl
fsubs
pop
push
stos
xchg
pop
jmp
mov
fmuls
repnz
stc
xchg
stos
fwait
mov
pop
push
scas
sub
mov
lods
scas
test
sbb
jns,pn
stc
pop
cltd
negb
sti
dec
mov
inc
sub
pop
fdivl
pop
inc
sbb
dec
mov
movsb
fldenv
lret
movb
pop
cld
xor
pusha
or
fsubl
repz
js
sbb
mov
stc
dec
ja
loop
xor
jnp
rcrl
imul
imul
iret
sub
jb
imul
mov
mov
adc
out
mov
lcall
pop
test
adc
clc
test
jb
mov
push
mov
jb
push
mov
dec
out
lret
imul
ret
or
sbb
xor
push
std
test
mov
fdivrs
mov
xor
sub
std
sti
jns
imul
mov
xor
daa
inc
jmp
mov
insl
lret
inc
push
dec
pop
ds
insb
mov
dec
jne
int
pop
or
fdivp
pop
pop
xchg
loope
adc
sbbl
mov
fcomi
cmp
push
pop
add
mov
cmpsl
add
pop
ret
jle
adc
cmp
in
jmp
xchg
xchg
adc
lahf
bound
or
push
cmc
movsl
dec
lahf
insl
push
movsl
ds
adc
adc
daa
mov
lcall
push
push
cli
je
inc
cmp
imul
add
add
adc
fldenv
lret
and
sbb
mov
push
stos
sub
fadd
jl,pt
cltd
es
ja
es
jo
xchg
or
in
jle
dec
pop
adc
idivl
fnclex
push
push
lea
shrb
inc
adc
fwait
loope
ret
jne
push
shlb
lods
sub
jne
fcoms
lods
jbe
lret
xor
testb
cwtl
cmpsl
call
sbb
cmpsb
sub
pop
cwtl
dec
push
fistps
je
jmp
cmp
sbb
fisttpl
scas
scas
ljmp
dec
jbe
inc
mov
outsl
push
xchg
pop
or
pusha
cmp
cmp
cld
jbe
and
out
xor
mov
mov
mov
decb
cwtl
sbb
sub
ret
mov
pop
fbstp
fnsave
adc
dec
movsb
mov
add
pop
aam
push
lock
inc
xlat
cmc
pusha
pop
xchg
mov
dec
nop
xchg
mov
ss
pusha
xchg
and
loopne
xchg
loop
iret
inc
inc
andb
into
call
jnp
test
dec
xor
in
jo
shr
and
ficoml
xchg
inc
sbbl
lods
and
stos
int
les
dec
inc
sbb
pop
or
incb
aad
cld
push
cmpsb
xor
gs
loopne
scas
adc
js
pop
xchg
jnp
das
in
jge
ds
xor
mov
pusha
sbb
sbb
jo
fs
jmp
mov
mov
xchg
xlat
and
into
pop
js
test
in
cmc
aam
ficoml
in
scas
lock
and
cmp
add
mov
pop
lcall
xchg
sbb
pop
addr16
mov
pop
add
xor
cwtl
cmpsl
dec
push
dec
faddl
dec
push
sbb
lret
inc
jge
xor
sub
in
and
push
loope
lods
fisttpl
inc
cwtl
leave
std
mov
or
sbb
loope
lcall
scas
xor
xchg
scas
popf
push
cmpsl
xchg
loop
or
mov
adc
dec
xchg
or
xor
or
into
popa
jecxz
mov
das
in
ret
xchg
fstps
outsl
or
inc
add
add
ljmp
dec
push
sahf
popf
fldcw
cmpsl
sbb
out
cmp
inc
push
notb
mov
sub
subl
out
push
and
ds
push
fs
xchg
jmp
xchg
inc
mov
mov
leave
sub
jmp
cmp
aas
push
sbb
enter
push
das
dec
dec
les
call
das
jns
lock
xchg
mov
loope
mov
es
popa
pop
sub
jmp
adc
dec
aad
mov
scas
add
jne
and
rorl
cs
leave
jno
and
in
movl
inc
inc
movsb
daa
cmp
xor
cmp
xchg
push
sub
ret
and
out
imul
rcrb
stos
movb
scas
xchg
mov
leave
push
ret
push
xchg
xchg
nop
lcall
leave
pop
gs
xor
fisubrs
or
test
movsb
push
mov
insl
test
add
fimull
sti
xchg
insb
push
mov
mov
jae
and
xlat
mov
ds
mov
push
xchg
clc
in
fcmovnbe
sbb
cwtl
push
dec
inc
in
in
imulb
cmp
nop
mov
mov
into
xchg
jg
push
push
pop
and
rcll
daa
adc
lds
adc
cmp
lret
into
xchg
rolb
cmc
push
jo
and
int3
les
mov
shrl
or
inc
mov
lods
aad
cmp
xlat
repnz
xor
mov
fs
mov
sbb
xchg
or
stos
sub
mov
mov
dec
dec
mov
push
scas
push
mov
ret
jae
dec
add
movsb
mov
scas
xlat
xchg
cmp
cli
call
leave
inc
push
adc
repnz
out
pop
call
dec
int
psubd
jns
mov
dec
lds
mov
lret
lret
xchg
inc
cld
lahf
scas
test
test
nop
ja
popa
pushf
mov
cmp
add
add
mov
jne
js
div
jp
test
aaa
push
push
mov
popf
subb
cld
xchg
or
imul
js
in
test
aad
xchg
jp
jmp
jae
jp
in
dec
lods
mov
je
add
sbb
mov
jge
add
loop
flds
mov
or
hlt
cmpsb
and
fisttps
pop
scas
out
out
push
xor
pop
aaa
fiaddl
sub
pushf
sub
push
test
xor
les
pop
jle
lods
xlat
xchg
adcb
std
ficomps
imul
aam
rclb
rorl
mov
xchg
dec
mov
popf
or
leave
pop
enter
mov
dec
cli
mov
cmpsb
mov
mov
lcall
test
gs
clc
xchg
fsub
xchg
mov
jp
push
std
add
push
push
sub
dec
sti
cmp
out
mov
hlt
rol
andl
push
or
and
shll
jl
lcall
mov
es
sbb
cmp
cmp
xor
loopne
gs
sub
aam
out
add
mov
adc
or
xchg
adc
push
je
cwtl
adc
or
fcmovnu
iret
mov
mov
out
insl
mov
cmp
jae
leave
push
xchg
bound
loopne
xor
push
shlb
xor
out
mov
mov
xor
addb
jg
repnz
jecxz
leave
cmpsb
arpl
sahf
and
pushf
arpl
push
cmp
movl
int3
adc
pop
aam
fsubl
popa
mov
repnz
cmp
pop
dec
movsb
pop
cmpsl
mov
mov
aaa
lds
shlb
or
shll
push
clc
cmp
jo
icebp
call
or
add
int
scas
xchg
insl
mov
rcl
js
or
test
mov
in
xchg
mov
mov
pushf
scas
je
fisubs
xchg
or
adc
xchg
iret
std
leave
cmp
push
lret
mov
sub
dec
lods
int
sub
mov
jnp
outsw
xchg
cmp
dec
xchg
scas
xchg
stos
inc
xor
push
xchg
cmp
xchg
cmp
inc
dec
in
push
jmp
xor
push
and
mov
cmp
sbb
cwtl
xchg
dec
imul
adc
imul
mov
fistpl
test
fildl
mov
jb
cmc
push
sub
cltd
icebp
cmpsb
sbb
or
inc
fwait
call
in
pop
xchg
rorl
pop
scas
pop
lock
pop
fistpl
dec
das
push
fs
inc
es
imul
inc
or
iret
mov
lret
xchg
add
in
pop
pop
fs
lock
add
test
cmp
xchg
xor
xchg
js
sub
jb
jg
mov
pop
sbb
dec
push
adc
cld
push
push
pop
lock
push
adc
hlt
mov
int3
xor
or
adc
ss
xchg
xchg
dec
jg
inc
call
or
xor
push
mov
shrb
movsl
sub
dec
mov
mov
jbe
pop
push
ss
xchg
fisubrs
mov
jp
ljmp
or
je
mov
jecxz
rorl
subb
daa
popa
leave
movsb
shlb
fisttpll
testl
mov
imul
js
mov
lret
pop
cli
xorb
out
std
jae
iret
mov
mov
iret
mov
js
shlb
leave
out
test
ret
jp
or
mov
iret
scas
jbe
stc
repz
mov
dec
insl
fsubrl
cltd
in
outsb
push
mov
sub
scas
xchg
push
hlt
lock
call
cmp
popf
ljmp
push
cltd
rcll
int3
hlt
lcall
scas
lret
mov
push
ficompl
dec
mov
inc
test
out
mov
fisubrs
push
mov
bound
lret
or
dec
xchg
add
outsl
les
pop
push
push
cwtl
rorb
add
movsl
mov
ds
scas
in
mov
scas
jle
ja
daa
std
push
movsb
ljmp
movsl
mov
push
dec
cmpsb
adc
mov
jb
dec
xchg
pop
lcall
mov
in
xor
sbb
or
mov
ja
mov
push
outsb
lods
hlt
lret
sarb
push
and
jae
in
shlb
movsb
repnz
mov
mov
or
inc
repnz
sub
pop
arpl
add
sub
pop
call
sarl
pop
mov
ja
int3
pop
in
push
push
out
push
adc
aas
jne
xchg
pop
xchg
push
call
test
adc
xchg
sub
and
add
xchg
xchg
jmp
xchg
fimull
gs
mov
jl
es
ss
mov
aaa
in
push
dec
push
aad
scas
lahf
int
dec
dec
sahf
pop
pop
cmpsl
mov
cmp
mov
dec
pop
shrb
push
jne
cltd
scas
addr16
cmp
jmp
xor
sub
ds
test
loope
mov
ljmp
adc
mov
and
xlat
inc
fnsave
scas
mov
loope
mov
and
daa
or
cmpl
fwait
xchg
pop
and
popf
test
xor
call
push
leave
mov
inc
sbb
jnp
jmp
xchg
and
mov
sbb
jmp
mov
add
cmp
cmpsl
sbb
push
lds
adc
fildll
outsl
sbb
in
test
cmc
test
pushf
imul
push
xchg
mov
cmp
adc
pop
xchg
jae
dec
lds
stc
test
ret
mov
mov
mov
test
jl
inc
je
repz
pop
testb
out
mov
dec
push
add
or
jae
ret
dec
dec
aaa
pop
test
stc
pop
pop
scas
push
pop
pop
xchg
sti
gs
pop
cmp
scas
push
jb
mov
lcall
fldlg2
push
or
insb
addr16
shll
cli
icebp
in
dec
inc
and
in
repnz
insl
sbb
push
dec
inc
out
cwtl
cli
ret
push
cmp
jo
cmp
dec
sbb
sarl
jne
pushf
jl
xor
push
int
imulb
and
and
add
ret
inc
sbb
mulb
inc
enter
push
mov
jecxz
jne
aas
packssdw
add
frstor
aaa
add
mov
cmpsl
xchg
pop
cmp
lods
repnz
lods
and
imul
out
inc
mov
mov
cld
movsl
bound
repnz
xor
dec
mov
pop
cmp
sub
stos
outsl
pop
movsl
in
xchg
sub
arpl
and
cvtps2pd
ss
xchg
lret
push
xor
mov
or
jg
and
xor
mov
mov
inc
dec
neg
push
outsl
cmp
adc
mov
and
aam
in
pop
push
lret
test
sbb
cmpl
jb
jne
cld
daa
ss
jbe
cmp
ret
sbb
jp
fstps
xchg
add
out
ret
jbe
cs
sbb
pop
dec
adc
sub
and
inc
xlat
inc
pushl
jns
cmpsl
popf
sub
inc
lods
out
dec
and
sub
stos
mov
gs
loope
cltd
push
inc
push
cmp
push
cmp
leave
cmp
hlt
sub
flds
and
ljmp
loopne
push
cmc
adcb
xor
xchg
cltd
aam
push
out
repz
shld
xchg
data16
xchg
inc
in
add
and
sub
pop
in
adc
in
repnz
mov
mov
ds
fdivr
and
sub
mov
mov
mov
dec
xchg
cmp
inc
out
sti
fcmovbe
jmp
inc
stos
jmp
pop
stos
jb
scas
adc
lret
inc
ds
push
sub
push
fidivrs
jg
add
lea
call
push
scas
in
movsb
cmp
mov
divb
push
sbb
or
mov
add
out
decb
aas
push
inc
pop
adc
insb
out
and
popa
mov
icebp
inc
cmp
mov
jne
mov
and
pop
adc
xor
and
xor
xchg
dec
test
add
xchg
lahf
jns
sub
pusha
imul
aad
je
out
pop
aas
cmp
cmpsl
mov
shr
push
xchg
pop
je
xor
add
mov
cmpb
nop
icebp
loopne
push
in
jne
les
out
sub
lds
mov
es
jns
and
mov
or
pusha
jecxz
into
loope
xchg
out
loope
push
clc
call
mov
mov
adc
inc
and
cli
mov
xor
insb
dec
pop
cwtl
sti
jae
stos
jns
xor
cmpsb
frstor
fucomp
sbb
popa
lods
or
hlt
inc
loop
jo
add
xchg
lock
hlt
inc
or
notb
push
mov
je
in
push
fs
mov
and
and
repnz
dec
int
push
cld
insl
xchg
sbb
add
aas
mov
in
push
sub
nop
repnz
movsl
je
and
pusha
mov
sub
sti
and
rcrb
testl
push
add
stc
loop
js
and
ss
mov
mov
jae
ja
fwait
arpl
push
jae
pop
xchg
mov
idivb
jmp
xchg
mov
push
idiv
jo
fdivs
mov
idivl
jnp
and
xchg
imul
xlat
cmp
outsl
cmpb
testb
movsb
sbb
and
popa
push
push
jnp
pop
dec
fisubrl
jmp
xchg
adc
stos
wbinvd
inc
into
xor
mov
adc
shll
inc
push
cmp
cmpl
lods
jle
test
shrb
adc
lcall
orb
cltd
mov
jbe
sarl
lcall
sahf
inc
insl
mov
or
or
cltd
dec
mov
ficoml
inc
pop
jns
mov
lods
jnp
or
arpl
and
fdivrl
adc
jno
popa
adc
pop
cmp
mov
add
int
ja
mov
nop
xchg
jp
inc
fidivl
loope
out
pop
xor
daa
test
push
xchg
int3
or
imul
clc
cld
dec
scas
fwait
cmpsb
mov
adc
or
bnd
mov
jmp
and
insb
stos
popf
push
imulb
lret
and
xchg
dec
faddl
in
int3
cmc
stc
push
lret
insb
push
push
imul
rorb
stos
std
xchg
sub
push
mov
add
lea
lods
sbb
arpl
pop
shll
mov
fsts
adc
and
test
add
dec
mov
daa
insl
mov
aad
mov
ljmp
pop
aad
push
inc
ret
pop
pop
or
and
xchg
or
xchg
mov
out
sub
push
or
push
cmp
push
mov
xchg
mov
filds
pusha
loop
movsb
dec
mov
pop
test
pop
out
mov
pusha
mov
sbb
in
mov
leave
mov
pop
jo
sahf
inc
cmp
ss
lea
gs
mov
js
jne
sbb
inc
sbb
stc
out
shr
add
pop
cltd
xchg
insl
mov
push
push
mov
mov
lea
cmpl
xchg
cs
addb
movsb
xor
adc
cli
sub
sbb
js
ret
ja
out
mov
js
cmp
mov
arpl
push
xchg
mov
xchg
vmulss
pop
adc
sar
mov
sti
push
mov
mov
push
into
ljmp
jge
push
push
xchg
pop
mov
out
xchg
xor
scas
push
adc
fidivrs
leave
mov
neg
pop
or
aam
inc
and
out
cli
adc
pop
hlt
jmp
xchg
repnz
and
sub
pushf
insl
mov
outsl
iret
push
dec
sbb
pusha
test
push
subb
cmpsb
pop
mov
or
test
mov
mov
dec
pop
int
in
push
xor
xor
sahf
andb
aad
and
sub
sbb
clc
dec
test
adcb
and
inc
add
in
cmp
inc
aam
notb
mov
stos
xchg
adc
lcall
xor
inc
outsl
xchg
fstps
jle
add
and
stc
dec
notl
je
hlt
add
fnstcw
cmp
dec
aas
mov
movsb
dec
movsb
lahf
adcb
loope
lods
xchg
int
lods
xor
add
push
pop
ret
push
rclb
jmp
sbb
push
lock
pop
pusha
xchg
push
dec
dec
jae
cmp
scas
cwtl
stos
mov
shlb
cmp
fbld
mov
pop
pop
cmp
push
loop
fs
daa
and
sub
inc
cmp
push
and
es
pop
sbb
test
ja
mov
mov
popa
sub
cmp
pop
xor
fs
aad
in
cmp
cmp
add
sbb
bound
xlat
jg
sti
mov
and
xchg
sub
sbb
imul
fildll
lcall
xor
in
jle
or
adc
push
fdivl
flds
push
popa
out
dec
pop
xchg
repnz
pop
xor
add
dec
push
jns
test
fisubrs
dec
push
pop
in
jge
xor
pop
inc
mov
scas
out
dec
icebp
push
jp
cmp
mov
cld
adc
addl
mov
insb
lock
xchg
loop
pop
sar
frstor
mov
scas
dec
mov
mov
orl
dec
andb
out
jae
add
aam
jg
ret
jg
aam
rolb
add
jmp
push
subb
in
inc
gs
in
repnz
xlat
lret
push
or
jg
xor
je
nop
pusha
bound
xlat
out
filds
dec
test
xor
movsl
negl
xor
pop
add
sbb
cld
push
addr16
or
add
sub
or
add
jp
stos
aaa
jg
xor
fnstenv
cltd
ja
leave
mov
jp
lret
mulb
int
xor
jo
rorl
popf
cmpsl
xor
mov
or
dec
sbbb
and
push
fnstcw
xlat
out
pop
fsubs
lods
adc
push
cmp
push
je
into
add
aas
sub
mov
mov
or
inc
xchg
shrl
loope
negb
sahf
inc
jne
push
xchg
movsb
cmpxchg
or
faddl
shll
sti
jae
outsl
push
fcmove
mov
mov
mov
shlb
js
adc
xor
rolb
out
outsb
inc
mov
lock
jbe
push
mov
inc
push
push
mov
in
or
add
xor
faddl
cmpsb
dec
push
mov
rcr
lods
dec
and
inc
xor
push
sbb
mov
repnz
pop
pop
in
xlat
inc
gs
daa
fs
mov
mov
idivb
mov
outsl
inc
call
ror
jmp
push
xchg
push
std
cmc
jns
nop
insl
insb
ret
add
push
into
mov
jge
bound
xchg
mov
dec
xchg
orl
push
inc
xchg
ficoml
lret
inc
adc
stos
push
mov
xchg
adc
pop
test
inc
xchg
testb
mov
pop
lret
in
jl
mov
mov
dec
cmp
movsl
dec
mov
push
movsw
jge
data16
aaa
dec
jp
mov
frstor
dec
jnp
xor
lcall
loop
jecxz
pop
loop
push
or
mov
mov
mov
sub
insb
mov
movsl
push
arpl
inc
mov
xlat
adc
mov
push
jbe
dec
inc
or
pop
push
pop
aaa
xor
gs
hlt
mov
dec
jg
adc
mov
jne
lahf
adc
je
dec
cmp
fbld
aaa
int
in
sub
jge
stos
lds
out
nop
lock
adc
bound
iret
cli
pop
pop
push
sub
mov
fst
and
fmuls
jae
ljmp
imul
mov
or
loope
clc
pop
ds
sbb
jp
jmp
mov
inc
scas
cmp
call
lret
ret
mov
push
jno
inc
cmp
fcmovb
or
je
inc
add
mov
out
push
add
cmp
mov
pop
outsb
adc
fsubl
push
in
jmp
stc
cld
int3
pop
xchg
daa
xchg
inc
add
mov
out
mov
dec
jae
mov
xchg
dec
jns
ja
mov
js
pop
and
lea
jbe
into
inc
xchg
ss
jnp
loope
jns
mov
es
in
outsl
loopne
iret
gs
ror
insl
xor
bound
fmull
add
mov
in
adc
cmp
insl
xor
ljmp
xor
adc
or
clc
lcall
sbb
jmp
cmp
in
popf
pop
sahf
vmwrite
mov
mov
mov
add
scas
jnp
lcall
or
xchg
jnp
sbb
addr16
push
inc
movsb
mov
das
mov
leave
xor
notb
mov
std
bound
sub
data16
inc
jno
push
movsb
inc
xor
loope
test
mov
pop
xchg
in
add
ret
enter
inc
sbb
movsl
idivb
adc
pop
psrlw
les
mov
xchg
mov
stos
aam
dec
mov
ljmp
sbb
loopne
jb
jmp
jge
xor
mov
mov
pop
dec
cmp
dec
xchg
lahf
movsb
mov
sbb
lods
ret
sarl
call
pop
lock
dec
fwait
mov
and
mov
std
push
inc
inc
jbe
popf
pop
xchg
notl
jmp
insb
add
lods
xor
dec
xor
sub
jo
in
pop
orl
and
imul
and
jbe
rcll
jecxz
xor
xchg
sub
or
and
sub
scas
mov
mov
and
mov
leave
cmp
sub
mov
sub
je
out
mov
xchg
fwait
adc
nop
arpl
inc
jno
add
cltd
outsb
iret
in
mov
dec
inc
xchg
jg
insl
fadd
dec
lret
lret
push
rcll
data16
xor
leave
je
mov
adc
or
addr16
cmp
jns
xchg
repnz
bnd
pop
jmp
push
add
jl
stos
rolb
xor
sub
jo
push
cwtl
jbe
mov
in
shll
and
addr16
dec
jno
shrb
sub
adc
loopne
dec
push
repnz
and
nop
mov
mov
fwait
add
mov
cli
test
add
push
dec
dec
sbb
pop
pop
push
test
arpl
pop
out
das
sub
push
pop
push
jae
inc
mov
in
fisubrl
loop
sahf
pop
xchg
subb
mov
jl
fcmovnb
xchg
jg
mov
lock
xchg
addb
mov
mov
adc
and
jmp
outsl
sbb
dec
xchg
lea
pop
mov
stos
mov
sub
adc
add
push
sbb
or
push
xorl
test
lret
or
xchg
out
sbb
or
out
push
ss
aam
ja
popa
sbbl
mull
push
mov
aas
rclb
mov
inc
sbb
cmpsb
and
inc
scas
arpl
xor
or
imul
inc
adc
jp
leave
ret
sbb
aas
ret
push
xchg
in
or
test
cli
dec
sub
ficoms
iret
add
push
push
xchg
fildll
and
adc
and
adc
sub
popa
mov
mov
ljmp
inc
adc
data16
pop
jle
in
adc
loopne
out
and
push
ret
jl
andb
addr16
movsb
dec
jp
jle
xchg
jg
pop
shrb
in
jns
mov
adc
jmp
jno
mov
or
xchg
sub
scas
test
adc
je
and
rol
ror
add
ss
cmpsl
inc
push
popf
lcall
popf
iret
sbb
inc
fists
fdivrl
pop
out
fwait
sti
das
mov
xchg
push
cmp
jmp
icebp
pop
shrb
bound
lret
jge
xor
pop
mov
lock
mov
or
stos
int3
pop
jbe
xor
mov
inc
jge
insb
add
adc
iret
sbb
nop
adc
jbe
add
lock
cmp
add
push
push
jae
xchg
js
test
mov
mov
or
xor
sarl
dec
not
scas
jecxz
adc
dec
pop
mov
jb
sarl
mov
xchg
push
dec
pop
xchg
stc
movsl
addr16
mov
or
sub
cltd
adc
xchg
fistps
lret
lea
in
xor
adc
imul
mov
jb
aas
es
pop
pop
mov
cmp
std
or
int3
cmpsl
cmpsb
dec
xchg
lea
pusha
lcall
push
xor
cmp
cmpsl
xor
lcall
insb
cmpsl
jmp
stos
pop
repz
cli
add
arpl
push
ljmp
mov
das
ljmp
aaa
sti
cmpsl
cmc
lahf
push
aas
mov
mov
ret
les
flds
mov
out
sbb
out
mov
xchg
fstpt
mov
mov
stos
movsb
push
mov
lods
lods
lcall
mov
cmp
mov
adc
mov
cmp
dec
repz
stc
sub
aad
int3
shl
bound
sbb
in
jle
scas
mov
cmpsb
cmp
inc
lret
mov
xor
cmp
mov
inc
rol
pmaddwd
or
call
add
mov
outsb
sbb
pop
or
loop
loop
mov
or
outsl
dec
pop
mov
push
mov
leave
and
mov
leave
out
push
dec
idivb
imul
insb
insb
xchg
mov
jecxz
fldl
xor
xchg
jp
nop
orb
mov
fs
mov
adc
sub
clc
push
jge
cwtl
inc
sahf
mov
bound
subl
or
aas
and
push
imul
jo
cltd
xchg
mov
and
ds
aam
mov
in
fidivrl
cmp
mov
jne
sbb
rclb
repz
popa
repz
insb
push
ljmp
jno
iret
xor
cmc
mov
dec
frstor
sahf
test
cmp
js
jmp
sub
jnp
dec
call
sbb
ja
filds
jo
into
mov
in
sbb
add
lods
outsb
je
mov
adc
shll
sub
cmpsb
fbstp
loop
popf
sub
xchg
dec
mov
push
add
scas
aam
mov
cmp
mov
imul
sub
jne
stc
dec
sti
ja
lahf
rol
inc
jb
mov
out
fdivrp
dec
add
ljmp
push
les
insb
inc
jno
adc
icebp
push
jne
outsl
xor
add
xor
fnsave
fistps
mov
push
dec
mov
adc
sbb
rol
and
or
dec
enter
outsl
jmp
cmp
mov
inc
jmp
outsb
jl
mov
push
std
add
test
int3
das
daa
push
outsb
cmp
mov
inc
push
addr16
cli
mulb
push
sub
out
jge
imul
xor
push
lods
dec
pusha
mov
es
mov
push
or
xor
mov
push
xchg
pop
popf
lods
jbe
mov
sub
out
clc
jmp
stos
lea
fisubrs
jle
pop
pop
sbb
jbe
mov
mov
shlb
sub
icebp
outsb
dec
xor
test
sti
bound
lret
aaa
mov
pop
loope
mov
arpl
cs
pop
or
iret
push
jno
mov
iret
pop
xchg
cmp
push
jmp
aaa
fisttps
inc
or
nop
or
fnstcw
sbb
fld
xchg
or
je
out
stos
jmp
jge
insl
mov
push
cmp
hlt
push
in
push
outsl
fbld
cmp
and
sarl
fcmovnb
pop
push
daa
call
dec
dec
inc
mov
push
pop
cmp
frstor
push
test
jmp
jno
fistps
aad
testl
jb
lds
sahf
jecxz
sub
int3
lret
ja
in
mov
andps
cmp
push
fcomp
aas
imul
sbb
mov
std
push
sub
adc
enter
movsb
test
jae
inc
pop
push
sbb
test
imulb
inc
out
dec
in
push
fcoms
loop
sbb
cmp
dec
in
lods
and
ja
jno
mov
mov
add
cmp
mov
jp
cmpsl
xlat
pcmpeqd
daa
add
sub
data16
repz
push
pusha
mov
jno
pop
leave
push
pop
push
mov
idivl
push
in
insb
sar
imul
sbb
add
push
imul
out
dec
out
mov
push
not
mov
mov
adc
mov
sub
pop
pop
and
rcll
push
jns
in
cs
pop
add
mov
mov
ljmp
pushf
aaa
outsb
or
cmp
cmc
lahf
pop
movsb
mov
jle
prefetch
leave
inc
ljmp
jnp
and
std
xor
test
cmp
daa
mov
in
ds
and
out
cmp
test
in
mov
jnp
lods
stc
pop
cltd
in
push
lea
in
fldl
mov
aas
mov
scas
pop
xchg
addr16
sub
aaa
lds
dec
inc
mov
aam
add
dec
lcall
xlat
inc
xor
cs
lret
xchg
ret
aaa
jns
fnstcw
rclb
outsb
xor
or
xchg
inc
fsubrs
push
sbb
inc
sbb
out
mov
and
xchg
jle
imul
test
and
sarl
sbbb
outsb
outsb
inc
xchg
imul
repz
sbb
xchg
or
cwtl
xor
inc
add
mov
adc
adc
or
xchg
push
push
cmp
sub
bound
mov
inc
pop
push
lods
cmp
mov
mov
cmp
cmp
cmp
gs
in
test
push
xchg
popf
div
push
aas
pushf
mov
std
repnz
shr
jae
pop
hlt
int3
xor
mov
mov
sbb
xchg
sbb
into
xchg
das
ljmp
outsl
daa
sbb
lcall
adc
ret
inc
inc
jle
inc
pop
mov
mov
dec
jns
push
shl
xchg
cmp
inc
dec
inc
ficompl
sbb
inc
stc
jg
test
sbb
mov
sub
shll
sub
dec
sbb
add
fistpl
xchg
sbb
jae
ja
sbb
out
jmp
ja
mov
inc
and
xchg
or
ljmp
les
xchg
scas
in
xlat
lahf
xor
outsb
add
repnz
popf
ret
pusha
out
repnz
and
push
pop
in
add
mov
cmpsl
je
outsl
xchg
out
or
loope
loope
inc
push
dec
cltd
iret
pop
in
ja
aaa
loopne
iret
jl
lea
dec
and
jae
add
ja
call
lock
bsr
jmp
js
sbb
iret
sub
loop
and
inc
push
or
mov
sahf
out
in
lahf
popw
xor
xchg
xor
dec
adc
roll
sub
sub
lret
int3
outsl
outsl
adc
or
cmp
inc
adc
jecxz
rcrl
or
xchg
add
pop
stc
rclb
jae
adc
jo
sbb
xor
in
add
add
xchg
fildll
mov
lcall
dec
push
mov
inc
shlb
pop
ret
fcomi
mov
daa
mov
add
cmp
dec
add
scas
ret
mov
dec
test
cltd
clc
add
adc
lock
jmp
fcomps
and
inc
pop
nop
push
mov
jmp
add
loop
into
fiaddl
mov
push
into
loop
ja
add
nop
test
sti
icebp
popa
outsb
xchg
adc
int
fwait
xlat
ja
mov
cmp
test
cmp
sub
fstp
push
xchg
movsb
pop
add
imul
pop
jae
add
fs
aas
stos
negb
idiv
or
ljmp
xor
dec
ficoml
roll
mov
push
add
fcoms
cli
leave
jecxz
cmpl
test
iret
imul
and
movsl
xor
push
mov
pop
sbb
mov
dec
faddl
push
fsubp
jmp
in
stos
shll
scas
pop
adc
xchg
pop
dec
sub
xchg
insl
mov
dec
jo
imul
inc
fisttps
sbbl
idiv
xor
sbbl
aam
sub
cmp
and
pop
scas
or
aas
push
in
sbb
adcb
mov
movsb
aad
arpl
xchg
loope
imul
jecxz
lcall
sub
jmp
xchg
fs
cmpb
cmp
lock
and
sti
sub
xor
sub
push
push
inc
fstps
rcl
hlt
xor
test
mov
sub
push
sbb
arpl
inc
mov
add
cmc
pop
ds
add
xchg
rcr
rclb
mov
sub
and
loopne
fcomi
xchg
add
popf
test
xchg
cmp
sub
and
inc
popf
add
lret
mov
sbb
jmp
sbb
xchg
enter
lret
loop
aas
fistl
jmp
into
popf
sbb
mov
mov
mov
mov
sub
pop
sub
mov
mov
loop
sbb
data16
lea
sub
or
dec
jae
mov
pushf
cltd
jnp
push
stc
lods
inc
mov
into
es
dec
cmp
bound
cmp
jns
mov
pop
rcrl
inc
jno
adc
loop
inc
pop
and
pusha
repz
fimull
gs
decl
sbbb
shll
notl
pop
fldcw
outsb
int3
sahf
ret
movsb
xorb
jmp
or
add
mulb
xor
dec
push
scas
mov
mov
hlt
xorl
fdiv
outsl
and
jge
and
lds
pusha
adc
pop
std
ds
pop
iret
cmp
dec
cmovb
mov
cmp
dec
out
nop
pusha
repnz
stos
and
mov
fldcw
clc
jge
mov
mov
jbe
xchg
cmp
xchg
mov
mov
push
subl
dec
cld
push
sbb
stos
mov
mov
rcr
cmp
push
adc
movsb
jg
xchg
add
push
cmp
outsb
popf
inc
xchg
loope
xabort
ja
ja
add
xor
jbe
or
sbb
dec
mov
add
fistpll
test
test
pop
xchg
xchg
and
push
or
xor
loope
out
add
pop
adc
xchg
ds
daa
aam
push
clc
outsb
pop
bound
mov
out
jecxz
dec
bnd
ja
shrb
mov
adc
insb
sub
mov
push
in
adc
xchg
pushf
fwait
enter
xor
rcrl
or
xchg
sbb
pushf
sbb
mov
mov
aam
decl
push
ficomps
popa
jmp
int
pop
add
mov
jmp
mov
daa
jb
lds
mov
and
movsb
jae
sub
inc
sub
mov
xchg
sbb
inc
adc
inc
insb
dec
jnp
fcom
loope
adc
and
loopne
cmp
lea
outsl
inc
adc
mull
sub
ja
dec
pusha
fsubs
xor
fdivr
adc
mov
stos
xor
and
push
pop
xchg
pop
lods
mulb
push
jne
aas
xchg
clc
insb
sbb
jge
inc
push
out
cmp
inc
filds
mov
pop
daa
pop
je
sbb
xchg
pop
sub
adc
xchg
js
inc
mov
lds
fnstcw
or
and
mov
pop
add
dec
das
imul
daa
push
movsl
xchg
pop
pushf
mov
and
xchg
xor
cld
cmp
data16
xchg
mov
xchg
mov
pop
pop
ja
lods
xor
shrl
push
iret
outsl
jmp
sbb
into
pop
outsb
push
jae
sub
cli
sub
mov
jl
scas
pop
cld
pop
cmp
mov
lret
add
dec
mov
sub
inc
and
sbb
xchg
jp
pop
adc
es
popa
mov
mov
sub
das
adc
cmpsb
jge
pushf
mov
mov
vandnps
ss
into
int
cmp
xchg
xor
jge
add
idivl
jecxz
cmp
mov
jecxz
cmp
jnp
in
jge
pop
pusha
subl
and
addb
or
cmpb
pop
ret
cmp
or
out
js
pop
cmpl
inc
shr
xchg
fwait
mov
sub
add
fwait
or
leave
out
mov
mov
push
lea
inc
push
sub
cs
push
inc
add
clc
popa
sbb
mov
lds
outsb
mov
stc
push
cmovle
mov
pop
daa
pushf
jns
rcrb
das
ja
cmp
jle
mov
out
and
fiadds
pushf
mov
adc
fsubr
mov
mov
repz
dec
jmp
addr16
adc
clc
idiv
fwait
lds
sti
xor
das
adcb
mov
jle
push
jnp
bound
dec
xlat
pop
aad
mov
push
push
adc
xlat
pmuludq
pop
stos
mov
call
cmpsl
lcall
inc
and
push
in
jo
push
inc
jl
pop
cmpsl
out
sub
inc
ficoml
aaa
sar
push
pop
fwait
shll
mov
rolb
lret
test
pop
pop
outsl
xor
ficoms
adc
mov
push
jo
rorl
cli
cmp
jmp
sub
mov
mov
push
pop
jmp
jl
xchg
out
ja
xlat
arpl
test
mov
lock
mov
push
sti
mov
xor
jnp
mov
lock
add
sbb
mov
or
sbb
add
and
call
scas
in
aam
mov
sub
aam
hlt
cmpsl
sbb
jae
mov
in
adc
icebp
jo
mov
or
xchg
repnz
jb
into
mov
pop
cmc
movsl
pop
rorb
sbb
cld
dec
pop
mov
adc
aam
cmp
and
movsl
shl
mov
jg
cmp
push
mov
or
pop
loope
mov
test
arpl
and
cmpsb
and
shlb
aad
pminub
fs
aaa
test
add
sub
fwait
dec
mov
in
mov
inc
fsts
add
jmp
xchg
or
mov
and
xor
out
xchg
cld
cwtl
push
imul
loop
inc
cs
nop
jbe
xor
sub
and
sbb
sub
addr16
scas
or
sbb
push
dec
sbb
into
out
sarl
add
xchg
in
lret
cmpsl
jp
js
sub
add
aad
mov
fs
test
shlb
pop
jb
movsb
scas
jmp
xor
stos
mov
push
mov
out
cmp
mov
mov
cwtl
push
sub
and
lock
repnz
jmp
dec
cltd
mov
push
mov
xchg
sbb
lock
jne
push
adc
dec
sbb
je
or
ret
movsb
outsl
movsb
push
xchg
cmp
push
pusha
xorl
test
push
lds
add
pop
push
mov
shrb
and
and
mov
cmp
xorb
mov
ret
ss
addl
pushf
test
idiv
add
or
nop
ljmp
out
lea
popf
pop
int3
sarl
cmc
gs
pop
outsl
int3
fdivr
adc
xor
or
sub
push
push
mov
adc
mov
sub
iret
clc
pop
adc
fldl
xchg
push
pop
dec
cmp
and
xor
cld
mov
movsb
dec
jnp
repnz
jecxz
cmp
jg
xchg
je
adc
dec
xor
fildll
add
mov
and
cwtl
adc
out
mov
mov
mov
sub
jbe
mov
shr
cmp
add
sbb
push
pop
push
pop
out
int3
fmul
int
add
adc
daa
lret
rorl
arpl
mov
nop
push
xor
pop
jle
adc
sarl
loop
rorl
int
out
mov
xchg
sbb
in
pop
es
aad
test
mov
push
subl
jae
pop
mov
jp
outsl
jmp
add
cld
sub
les
iret
mov
shrb
xor
push
sub
stos
pop
rcll
leave
adc
jae
push
fstl
mov
xchg
jno
mov
inc
dec
adc
inc
sub
out
jp
or
addr16
jno
push
mov
mov
daa
std
sub
cmp
outsl
test
les
jne
imul
add
dec
dec
push
shl
int
push
add
shrb
push
outsl
js
ss
or
xor
movsl
fnstenv
inc
aad
jnp
sar
out
inc
cltd
push
in
data16
sub
mov
pop
aad
out
mov
in
clc
popf
lea
mov
jp
es
cmp
mov
jecxz
jle
int
lods
jmp
xchg
imul
xor
inc
in
sti
je
dec
jo
imul
lds
push
xlat
fucom
aaa
cli
cmp
ficoms
test
mov
pop
sub
fcmovbe
or
mov
add
sub
jne
fists
lods
aad
xchg
and
pushf
ja
int
xorb
mov
insb
popa
out
popa
test
lret
mov
popf
jo
pop
mov
mov
inc
dec
test
mov
mov
repnz
cmp
pop
int3
mov
cmp
dec
aas
inc
pop
mov
cmp
lret
adc
mov
mov
and
or
loope
mov
cmp
or
cmpsb
mov
jno
das
loop
inc
mov
xchg
xorl
jno
data16
fst
ss
adc
push
cwtl
and
aaa
shrb
dec
insl
mov
dec
xchg
sti
ret
rcl
mov
loope
stos
mov
push
into
mov
in
mov
imul
xlat
add
mov
mov
cmpsl
stos
mov
faddp
push
imul
jns
inc
jae
sub
or
outsl
leave
jmp
loopne
pop
add
dec
dec
push
pop
pop
movsl
outsl
lea
js
into
popa
or
cmovp
cli
xor
rorl
dec
je
stos
add
decb
jp
dec
dec
rorb
into
add
jl
push
int3
pop
in
and
mov
and
xchg
ljmp
stos
fldl
movsl
push
mov
sbb
ljmp
jne
bound
xchg
push
out
adc
push
imul
inc
out
mov
in
jo
cmc
cmp
push
cltd
or
mov
stos
neg
mov
sbb
inc
lock
lods
cmp
inc
movsl
mov
fstps
out
outsl
or
push
cmp
or
mov
mov
insl
daa
mov
push
loop
xchg
push
scas
sub
jecxz
pop
push
push
jl
cmpl
sub
lods
mov
xchg
add
jecxz
lret
jne
lret
sub
push
test
enter
push
xchg
not
cmp
lods
or
daa
push
ret
pop
mov
test
xor
pop
dec
jl
pop
movsb
and
pop
lcall
cmp
inc
iret
lea
orb
addr16
lock
clc
pop
xlat
dec
sbb
fdivrs
call
and
popa
lret
icebp
push
dec
lahf
dec
lret
xchg
mov
mov
shr
ds
jecxz
sbb
xchg
xor
xor
cmp
iret
fnstcw
mov
icebp
mov
mov
mov
pop
mov
repz
push
rclb
les
lock
cmp
mov
aad
cli
add
fildll
aaa
out
mov
sbb
popa
imul
sub
push
loopne
fstpt
and
ss
push
mov
test
mov
aam
out
adc
cmp
add
aaa
push
aaa
lods
dec
jmp
das
in
cltd
mov
lahf
cwtl
sti
jo
fsub
or
pushf
cli
or
fisttpll
jge
ret
mov
popf
test
les
jg
orb
push
mov
js
sub
push
fxch
jo
xchg
xor
mov
repz
lret
je
scas
fnsave
stc
jb
imul
cmp
fsubrl
xchg
loopne
lds
mov
sbb
daa
mov
cmpsb
adc
push
inc
cmpsl
lret
adc
push
jns
test
call
pusha
push
mov
add
push
xchg
xor
jl
imul
mov
dec
orb
jno
shrb
xchg
adc
jnp
mov
mov
fstpt
lds
faddp
add
push
iret
insb
mov
shrb
mov
lods
xchg
push
sbb
or
insb
xor
mov
ss
inc
js
xor
fs
popf
cltd
mov
bound
fnstsw
xchg
mov
subl
data16
imul
subb
int
xchg
adc
or
fsts
or
inc
xorb
push
frstor
jae
insb
fsubs
xor
inc
or
loopne
mov
dec
jb
mov
in
adc
std
scas
mov
into
pop
rclb
push
inc
test
mov
and
jbe
dec
fimull
pop
pop
adc
fmul
xor
jecxz
ja
jns
clc
jg
ljmp
adc
push
fidivs
cmp
loope
fistpl
nop
lods
push
jge
imul
mov
test
inc
int3
pusha
lock
std
inc
scas
mov
push
inc
push
ret
adc
xchg
xor
pop
fstpt
test
dec
xchg
dec
xor
repz
das
add
inc
arpl
cmp
call
fildll
int
push
pusha
push
call
inc
xchg
pop
ficoml
push
cmp
mov
sbb
insb
cli
add
jp
ss
xchg
loop
push
push
enter
and
stos
pop
scas
adc
jmp
sbb
and
lret
lock
dec
push
jne
repz
adc
imul
loope
xchg
in
cwtl
or
and
dec
and
out
scas
or
out
mov
fcmovu
xlat
and
mov
push
mov
das
jne
sub
or
icebp
cld
xor
and
jo
out
add
arpl
into
push
ret
lds
and
hlt
test
rorl
mov
mov
push
xchg
and
or
cmpsl
adc
stc
mov
repz
xor
lods
jne
repz
add
mov
pop
imul
in
jnp
fdiv
shr
loope
xchg
sbb
mov
cmp
insl
push
adc
jne
idivl
add
mov
inc
adc
gs
arpl
or
popa
lret
mov
jne
mov
jne
cmpsb
outsb
mov
lret
sub
sbb
mov
js
sbb
aad
push
xor
add
dec
fidivs
adc
mov
fucomi
mov
dec
xchg
testb
push
test
cmp
jnp
xchg
aas
jle
in
fcoms
loop
aad
leave
popa
pop
pop
inc
xor
bound
lods
push
jg
adc
sub
pusha
add
lret
js
aam
rorb
js
push
pusha
mov
das
lds
jo
and
ja
mov
lds
jo,pn
cmp
lret
jno
fwait
or
xor
mov
lods
inc
stos
dec
ljmp
adc
sub
rorb
pusha
cmp
jmp
inc
cld
imul
fwait
imul
enterw
xchg
hlt
push
inc
out
push
or
dec
mov
out
lock
sete
in
add
insl
jns
pop
enter
mov
cs
dec
mov
cmp
sbb
popa
out
iret
pusha
xchg
inc
es
mov
movsb
jae
pop
mov
fidivs
loopne
ljmp
notl
jmp
fcoms
xor
mov
sbb
outsb
push
add
js
fsubrp
sbb
adcb
pop
das
clc
or
sub
clc
dec
mov
test
fisubrl
dec
adcl
sub
dec
jbe
addr16
mov
dec
in
inc
cmp
test
jecxz
xchg
in
outsl
lds
mov
pop
adc
cltd
push
sub
sti
jge
xlat
or
inc
subl
pop
push
mov
ljmp
mov
mov
or
fmuls
mov
adc
xchg
pop
cmc
add
mov
addr16
lret
stc
mov
fldl
out
fiadds
dec
jns
add
jmp
movsb
inc
jecxz
scas
or
subl
int
std
outsl
push
jae
leave
xchg
mov
test
nop
enter
out
rcrl
xorb
push
adc
outsl
adc
add
and
testl
cmpsb
jmp
testl
lret
sbb
inc
pop
fsubrs
arpl
cmp
push
adc
test
xchg
mov
negb
dec
jle
push
pop
fwait
jb
pop
ss
cmp
xor
push
mov
push
mov
call
pop
xor
fisubrl
inc
pop
lret
std
cmp
cs
andl
clc
inc
inc
fbld
push
adc
fwait
aaa
inc
hlt
das
adc
mov
ss
push
pop
pusha
popa
or
adcl
scas
cmp
mov
loopne
mov
jnp
or
or
or
add
dec
and
mov
negb
sbb
lret
cs
enter
in
mov
jnp
xchg
testl
dec
push
das
aaa
scas
jae
mov
push
ret
cmp
jbe
inc
jecxz
inc
jnp
cld
inc
addr16
add
daa
xchg
in
cmpl
jg
gs
sti
xor
cmpsl
aas
loopne
sbb
mov
mov
xchg
popa
jp
mov
jge
and
mov
lods
sbb
mov
inc
popa
pop
cmp
mov
or
jmp
hlt
inc
jae
cmp
rorl
addr16
mov
mov
movsb
push
sti
cltd
jg
int
mov
cmp
je
nop
js
insb
loopne
mov
dec
mov
xchg
lcall
ljmp
lahf
insb
sub
or
xor
jb
jo
jge
mov
pop
sar
push
jo
insl
or
sahf
adc
inc
fildl
inc
xchg
mov
fs
xchg
ds
jecxz
xchg
ljmp
or
cld
lods
xchg
jns
inc
jg
jg
cmp
popl
pop
add
out
xlat
rcrb
jne
mov
mov
roll
cmpsb
and
dec
fstl
xor
jne
push
js
movsl
jo
and
cmp
sbb
and
subb
fmuls
sbb
sbb
std
pop
and
cmp
xor
test
xchg
mov
push
inc
sti
mov
jb
jmp
mov
xchg
sub
repnz
test
push
dec
cmp
jg
mov
test
fcompl
xchg
in
int
xchg
out
lea
imul
xchg
clc
mov
lds
sbb
mov
dec
add
das
push
xor
into
mov
sub
sub
and
shl
push
and
push
nop
pop
add
dec
or
dec
xchg
mov
aas
xor
lds
add
lcall
outsl
decb
or
mov
cmp
mov
mov
or
sti
or
xor
lcall
nop
push
gs
cmp
fcomps
mov
cli
mov
insb
dec
xchg
fxch
lock
xchg
or
push
mov
ret
xchg
sbb
lods
jge
dec
loop
xchg
mov
pop
xor
xor
ficoms
inc
jecxz
xor
aaa
sbb
sub
inc
in
ss
arpl
sub
fcompl
jg
add
fdivrs
push
dec
mov
or
mov
pop
cmp
movsl
inc
mov
pop
test
nop
dec
inc
or
or
pop
jb
cs
mov
repnz
sti
psubusb
imul
mov
push
sbb
mov
mov
mov
jle
mov
mov
arpl
test
decb
sbb
gs
mov
pop
push
packsswb
dec
mov
pop
xor
insb
stos
pop
aas
pop
add
add
push
mov
push
pop
inc
lret
cs
int
mov
les
lods
call
in
rcrb
xchg
xchg
adc
xchg
push
aaa
jo
and
pop
jns
nop
stos
pop
mov
sbbb
inc
pushf
mov
add
in
sahf
jb
or
ret
pop
add
jg
std
pop
test
nop
clc
test
pop
lea
out
aas
and
push
aaa
pop
fdivrl
cmpsb
iret
push
mov
lret
cmp
mov
jecxz
sbb
shl
int
mov
aam
test
fwait
imul
ss
jbe
push
sub
mov
xchg
cmpsl
data16
insl
mov
sub
loope
jo
int3
cld
sbb
lahf
aam
and
mov
mov
les
inc
lods
pop
xor
lcall
out
sahf
fs
mov
jo
mov
dec
pop
subb
data16
ljmp
pop
lcall
pop
jle
ret
rcl
and
lock
mov
inc
mov
pop
divl
xchg
xor
or
test
sub
and
int3
jge
mov
ds
adc
movsb
flds
sbb
jge
mov
lcall
subl
xchg
push
mov
cmpsb
inc
filds
orb
in
and
es
div
out
add
push
mov
push
sub
loopne
sub
push
push
adc
cmp
mov
adc
or
loop
pop
cmp
hlt
jb
aad
imul
adc
dec
pop
fldt
lret
sbb
jbe
add
or
stos
repz
int3
cld
ret
pop
decb
insl
xor
test
add
imulb
sarb
adc
add
inc
push
sbb
sbb
in
aam
jmp
outsl
std
add
sahf
insb
je
fwait
loope
das
loope
pop
push
inc
sbb
dec
or
adc
adcl
lret
movsl
jb
lret
pop
dec
pushf
fstps
es
sbb
xchg
push
mov
dec
ds
mov
mov
xor
xchg
jl
xchg
iret
push
add
ret
mov
lcall
or
movsl
dec
inc
mov
xchg
push
mov
xor
pop
scas
jo
sub
dec
inc
xor
mov
pop
clc
jne
sti
xchg
fdivrl
xchg
xchg
inc
es
jno
mov
mov
fistpll
lcall
push
sub
pop
mov
dec
add
adc
lret
leave
sub
push
call
out
js
mov
or
loope
js
push
jle
push
xchg
loop
mov
inc
cld
xor
rep
repz
dec
push
js
cmp
mov
aas
adc
xchg
pop
pushf
iret
mov
sub
mov
daa
cvtpi2ps
sub
pop
inc
out
test
or
daa
in
lods
jae
inc
dec
aas
dec
call
xor
fcoms
ja
push
add
cmp
push
mov
jae
stos
sub
jnp
call
in
pusha
rclb
lret
clc
data16
push
jns
das
cmp
lret
push
lods
mov
inc
mov
fiaddl
and
cmp
jno
mov
xchg
add
jne
das
fistpl
xchg
test
mov
push
cltd
or
cmp
mov
adc
push
popa
cltd
lahf
jecxz
dec
mov
cs
mov
test
pop
cltd
xchg
cmp
cmp
cmp
xchg
add
xor
and
cmp
sub
or
sbb
jl
lcall
pop
cmp
les
xor
leave
pop
ret
stc
inc
or
fwait
ja
mov
dec
mov
add
das
jmp
mov
fnstcw
cld
stos
sub
repz
mov
jbe
test
stc
movsl
sub
cmp
repz
mov
cmc
pop
test
sbb
inc
ljmp
int3
xor
adc
test
pusha
cmp
inc
push
mov
mov
dec
lret
push
jnp
dec
repz
mov
jg
xor
out
out
pop
mov
gs
pusha
mov
cwtl
mov
scas
lods
shrb
and
inc
and
dec
pop
cmp
imul
loope
sbb
int
dec
ds
push
in
aaa
jge
aam
jg
ljmp
jle
xchg
inc
mov
dec
aaa
fsubrs
test
mov
mov
repz
pop
inc
mov
fsts
shl
scas
dec
inc
ja
adc
divb
pop
jne
test
movl
aam
pusha
xchg
adc
stos
mov
subl
cmpsb
adc
test
loopne
stos
push
mov
sub
bswap
rcr
insb
stc
fstpt
inc
sbb
sbbl
xor
pop
or
mov
flds
cmpsb
add
and
and
pusha
imul
jecxz
mov
sbb
out
aad
mov
jbe
loope
sbb
mov
call
cmp
clc
popf
cmp
or
pushf
pushf
sub
xor
arpl
bound
add
jg
add
test
hlt
add
sarl
into
pop
popf
push
imul
mov
mov
jl
pop
in
in
mov
test
dec
and
sbb
mov
mov
insb
pushf
xorl
push
pop
xchg
popf
cmpsl
movsl
dec
jae
fwait
dec
add
sub
inc
and
lret
jnp
hlt
xlat
dec
scas
jecxz
adc
lock
repz
and
pop
mov
sbb
adc
stos
xchg
loopne
pop
movsl
lods
mov
xor
hlt
xor
xor
nop
mov
pusha
jmp
icebp
ret
imul
adc
pop
fistps
fidivl
add
clc
jl
and
add
rcll
mov
cmp
pop
pop
mov
hlt
sahf
push
pop
dec
inc
rcrb
data16
mov
mov
fldl
push
inc
insb
mov
mov
leave
mov
gs
mov
arpl
aas
sub
aas
push
mov
lret
imul
sbb
sti
lcall
test
lret
outsb
jmp
pop
adc
fs
jp
xchg
sbb
xchg
sbb
test
scas
mov
pop
fwait
call
fisubrs
ja
mov
dec
inc
les
xchg
dec
test
stos
jge
in
mov
loopne
fnstsw
push
rolb
fcmovnu
xchg
or
pusha
mov
imul
mov
and
pop
or
scas
push
int3
outsl
sub
sbb
push
je
outsl
adc
cmp
insb
aaa
jo
bound
gs
mov
sahf
mov
cmpsb
inc
in
and
lcall
xor
add
cmpsb
inc
adc
in
jne
sub
pop
jmp
out
inc
push
sub
xor
icebp
add
mov
in
shr
outsl
push
pop
loope
xor
shlb
and
jbe
cmp
lret
ja
out
pop
mov
lds
or
and
push
dec
and
cmp
js
and
push
mov
stos
jp
and
js
vsqrtps
test
lods
adc
cwtl
xor
mov
xchg
pop
fsts
jl
push
push
push
mov
mov
sti
xor
out
in
adc
adc
cmp
icebp
into
lock
outsb
fiadds
fcmovu
testl
xchg
mov
into
data16
jp
pop
jg
mov
pop
call
loope
pop
and
or
int
loope
mov
or
cmp
popa
inc
add
hlt
pop
mov
enter
push
ja
aam
sub
inc
xor
aam
jecxz
cmp
in
rolb
add
xchg
bound
test
test
scas
xor
das
add
add
sahf
movsl
loopne
inc
daa
in
sub
push
sbb
add
addr16
fists
stc
aas
cmp
fldt
pusha
jnp
push
lret
inc
orb
pop
or
sbb
inc
mov
push
or
mov
inc
ljmp
in
ljmp
sarb
ret
stos
daa
into
mov
lret
mov
ficomps
inc
dec
add
punpcklwd
pop
fcompl
pcmpeqd
xor
fiaddl
idiv
pop
pop
xchg
push
jge
sub
push
mov
dec
int
ss
imull
dec
xchg
cmp
pop
push
scas
dec
and
mov
lret
xlat
jo
ja
clc
negl
dec
xchg
int3
or
outsl
jo
push
test
movsb
sarb
xor
mov
lcall
sti
sbb
fmuls
lret
mov
or
push
bound
icebp
enter
js
add
pop
or
xor
dec
push
or
fld
jecxz
testb
and
out
pusha
sbb
rorl
fstl
dec
sbb
lret
jl
not
loope
xchg
lret
lds
pop
pop
sbb
rcl
push
dec
adc
add
movsl
push
xor
cmc
mov
pop
jmp
inc
jno
inc
fcmove
sub
push
pop
lret
dec
aaa
test
pop
dec
push
cld
sbb
hlt
addr16
lret
sar
and
sarb
outsl
mov
test
mov
mov
add
repnz
mov
dec
inc
pop
fsubs
jp
aad
lret
xorl
test
pop
push
xor
push
mov
push
pop
stos
push
push
outsl
and
rorb
shrb
or
loopne
jo
adc
jle
lea
jmp
or
rorl
scas
add
sbbb
sbb
cmp
sbb
jbe
subb
inc
ja
outsl
mov
xor
inc
jno
and
push
push
ss
or
lret
jl
test
push
clc
xchg
mov
fwait
aam
cltd
push
negl
es
cmpsb
push
loope
cmpsl
xlat
stc
mov
loop
aam
adc
jle
nop
bound
push
or
push
sub
sahf
cmpl
mov
add
dec
inc
pop
cmp
mov
popa
xchg
jl
divb
aad
cmp
repnz
and
push
sub
jecxz
ss
pop
or
lds
fstps
cmp
jecxz
andl
inc
ret
push
cli
scas
or
add
mov
lods
loopne
xlat
push
in
imul
pshufw
push
enter
inc
add
bound
scas
jge
shrl
fcoml
pop
xchg
repz
ret
sub
in
das
mov
mov
out
adc
and
imul
cmp
ljmp
inc
mov
xchg
arpl
int3
nopl
adc
dec
jp
inc
out
inc
cwtl
nop
sub
and
and
cmpsb
popa
dec
and
adc
popf
cwtl
cmp
sub
and
or
les
popf
and
out
outsl
nop
jno
cli
xlat
sahf
jg
sbb
mov
pop
adc
mov
xchg
jb
ret
icebp
pop
std
push
sbb
out
out
cmp
or
int3
lahf
cwtl
mov
fcomip
sub
mov
cmp
jae
and
jo
pop
dec
dec
sahf
jl
xchg
inc
mov
cmp
es
xchg
in
imul
fwait
sub
test
mov
xchg
int
daa
dec
ret
push
xor
inc
add
mov
sub
jle
fisubs
add
cmpsl
push
mov
cmp
ret
fwait
jecxz
sbb
dec
inc
sbb
cmpsl
mov
xor
mov
inc
mov
into
dec
cs
inc
jp
xor
mov
xor
cmp
pop
stos
inc
shll
or
cmp
sub
pop
or
push
push
xchg
fs
lods
jne
add
inc
ds
pop
fistl
cltd
inc
sbb
mulb
test
lods
jmp
fmull
xor
mov
fisubrs
jmp
loopne
fsts
clc
sub
dec
mov
xor
lcall
and
daa
aad
pop
inc
addr16
dec
xor
lret
xchg
fcmove
and
jecxz
or
pop
scas
stos
mov
jno
pushf
pop
and
enter
mov
or
jl
bswap
add
hlt
mov
mov
push
push
cmp
jle
mov
rcrb
mov
mov
mov
and
pop
and
push
cmp
or
mov
mov
push
dec
xchg
cmpsb
mov
movsl
movl
add
stc
test
jne
int
sahf
stc
imul
jmp
loope
mov
incl
adc
ds
pop
loope
bound
test
lods
loopne
jnp
int
rclb
mov
dec
loope
xchg
icebp
jnp
idivb
cmp
mov
and
ja
and
daa
push
and
icebp
jmp
stos
mov
lods
imul
out
mov
mov
cmp
icebp
adcl
pusha
subb
mov
jecxz
sbb
push
andb
fnsave
je
or
push
aam
je
out
bound
in
mov
jp
and
nop
pop
mov
loope
fcomip
jge
in
add
lret
int3
add
fisttpll
add
lcall
lods
pop
leave
cs
mov
pop
push
adc
push
js
and
push
cmp
in
cmpsl
fwait
push
lret
mov
push
mov
test
repz
out
stc
out
sub
sti
cmpl
ss
push
pop
popf
nop
jge
popf
imul
inc
sahf
fisttpl
insb
mov
outsl
xchg
pop
leave
shlb
xchg
repz
cmpsb
pop
push
dec
ds
rcr
aam
mov
std
or
or
push
mov
out
fnsave
sbb
jmp
or
out
fs
jns
stc
cmp
lea
push
shr
fcom
in
loopne
jae
mov
imul
push
pop
notb
enter
jmp
dec
sub
mov
cmp
jno
ret
add
push
dec
push
daa
cmp
adc
adcl
jne
ss
sbb
ficompl
repz
out
and
push
sbb
lea
and
add
cmp
push
lret
ret
cmp
xor
fcompl
xchg
mov
lea
push
pop
lds
mov
mov
xor
push
pop
fstps
lcall
cmp
xchg
xchg
push
aas
scas
xchg
orl
repz
fisubrs
jl
fbld
stc
xlat
stos
aad
js
xlat
jecxz
in
xor
inc
mov
jns
scas
test
mov
push
mov
iret
adc
or
cmp
lret
xor
pop
adc
cmpsb
jge
inc
cwtl
ret
push
addl
adc
sbb
lods
gs
stos
inc
clc
cmp
inc
ret
push
lret
inc
pop
decb
lcall
scas
mov
xchg
pusha
lahf
cwtl
aas
jge
sahf
or
jl
xchg
movsl
lds
and
insl
sub
pop
hlt
leave
aad
enter
call
push
jecxz
test
xor
sub
mov
jp
xchg
fiadds
push
mov
add
jp
test
sbb
lret
daa
testb
and
mov
lds
movsb
bound
roll
xchg
test
cltd
pop
xor
lret
scas
inc
jne
aam
and
lods
or
insl
inc
stos
call
std
xor
add
sahf
movsb
ficomps
inc
cmp
cmp
int
or
sub
inc
pop
pusha
pop
xor
pop
and
imul
jb
pushf
push
in
int
jp
pop
dec
xchg
xchg
adc
pop
daa
into
jecxz
btr
fldcw
and
xor
xor
sbbb
rcrl
sahf
shlb
sbb
sbb
bound
scas
and
lock
mov
pushf
mov
js
cli
inc
mov
cmp
jp
ljmp
push
xlat
mov
add
outsl
dec
fisubl
inc
adc
insl
adcl
sarb
add
add
rorb
out
mov
test
sbb
push
out
pushl
rorl
sub
or
xor
mov
rcrl
test
pop
xchg
stos
decl
xor
aad
scas
xchg
mov
pop
jns
clc
pop
lds
jno
xlat
daa
scas
inc
and
push
or
and
out
push
jmp
scas
sbb
inc
jno
xchg
jecxz
ret
shlb
push
sahf
fisubrl
shll
cmp
test
and
addb
pushf
jae
jo
ret
sbb
pop
dec
add
popa
mov
out
xlat
ret
mov
jnp
jb
shrb
lock
cmc
adc
imulb
mov
mov
mov
ss
adc
imul
clc
sub
test
sahf
cmp
in
es
pop
jmp
insl
push
inc
mov
lss
aam
rol
pop
sub
scas
scas
in
dec
cwtl
jns
pop
lock
test
cmc
dec
jbe
icebp
out
mov
cmp
add
jbe
andb
repz
shrl
into
ret
cmp
imul
ljmp
xchg
bnd
dec
in
cs
testb
lods
das
jbe
std
rcl
dec
fwait
lcall
jo
popa
mov
ljmp
push
sahf
and
in
aam
scas
popf
mov
pop
ret
out
dec
pop
daa
mov
fbld
cmpsl
mov
bound
dec
cmp
dec
int
lret
xchg
or
ret
insl
inc
mov
lds
push
push
adc
loopne
pop
gs
inc
cwtl
push
sahf
andl
lods
mov
outsb
outsl
or
aas
jb
out
test
mov
movsb
or
push
or
shlb
mov
inc
dec
sub
or
ret
dec
mov
sahf
neg
repnz
pop
jl
shr
int3
hlt
push
push
subl
dec
xor
and
mov
negb
mov
jo
loop
jnp
mov
sub
adc
xchg
fildll
iret
pop
stos
int
adc
mov
lods
mov
push
or
repz
into
or
jb
into
adc
lds
pop
mov
das
sub
adc
xor
cmp
jg
inc
das
mov
cld
jns
xor
jg
pop
jae
or
int3
sub
out
movsb
orl
dec
int
fmuls
sub
or
push
rorb
jle
lods
addr16
xchg
dec
arpl
and
cld
mov
shlb
loope
arpl
jb
mov
ljmp
out
add
mov
push
inc
enter
popa
xchg
jg
mov
cmp
sub
jns
mov
lret
or
lret
iret
fmul
mov
mov
std
scas
adc
loope
test
inc
xchg
mov
in
jl
out
or
test
sub
je
lahf
xchg
sub
pop
xchg
mov
xchg
pop
push
fimull
jmp
mov
andl
loop
or
sarl
jno
sti
and
lret
mov
iret
clc
push
outsl
adc
jl
sbb
mov
ja
stc
rol
lods
push
cli
hlt
in
cld
sbb
icebp
imul
xor
nop
push
bound
xor
addr16
pusha
adc
jbe
sti
dec
sbb
lcall
in
xchg
pusha
loope
movsl
push
add
aaa
std
icebp
push
mov
push
cmp
iret
sbb
jl
shll
and
mov
shll
scas
dec
in
out
adc
dec
or
aam
push
xchg
pop
mov
pop
mov
pop
add
test
out
incb
xor
push
mov
cs
jne
push
scas
sub
cmc
push
jno
insl
outsb
push
or
inc
cs
je
jle
setge
pop
adcb
sub
mov
add
in
cwtl
add
sub
ja
pop
cvtdq2ps
mov
stos
jg
mov
packsswb
mov
and
mov
cwtl
push
out
test
or
icebp
fsubrs
iret
js
aam
cwtl
jmp
or
xchg
mov
xchg
aaa
xor
and
imul
push
adc
lods
pop
push
cmp
call
adc
inc
xchg
ret
inc
movsb
lock
lods
adc
icebp
cmp
movsb
js
in
push
mov
and
dec
fcomip
mov
pop
scas
sahf
pop
into
jne
xchg
lods
rorl
dec
and
mov
jg
cltd
sti
push
mov
and
sbb
shll
jle,pt
and
xchg
inc
rep
out
fldenv
aad
stc
xchg
fwait
leave
ret
ret
xchg
sub
call
jns
enter
pop
inc
insb
shl
in
mov
xchg
rolb
aas
sbb
ss
shr
push
xor
inc
ds
daa
lods
fimull
leave
inc
sarb
daa
arpl
icebp
int3
cmp
adc
lea
test
fdivs
or
mov
daa
jle
lret
jp
add
mov
xor
sbb
sub
or
sub
mov
int3
subb
pusha
push
inc
ud2
es
or
sti
mov
inc
sub
imul
xchg
imull
sarl
rol
jmp
cmp
or
adc
adc
cs
out
jne
xor
nop
scas
push
jmp
inc
cmpsl
shll
int
inc
repnz
loopne
cmp
add
mov
rcrl
mov
pop
xor
fisubrl
and
cli
cmp
mov
pop
cmp
into
and
xchg
and
cmp
sbb
xchg
data16
call
mov
inc
aaa
daa
pop
pop
jge
pop
ret
cmp
into
push
rorl
pop
sbb
push
mov
out
sub
es
adc
repz
or
jb
test
mov
imul
iret
mov
jnp
inc
xchg
xor
or
addr16
mov
fisubl
mul
cmp
xchg
cs
test
cmpl
inc
bound
ja
push
fimuls
insb
and
sub
sbb
adc
ja
cmp
add
adc
and
into
dec
pop
mov
pop
insb
fdivp
pop
jle
vmovaps
xlat
rorb
mov
std
or
pop
call
pop
fs
sub
jae
jo
mov
mov
lds
push
cmp
sbbb
in
add
mov
inc
xor
addr16
mov
jle
pop
imul
mov
xchg
mov
add
dec
mov
xchg
jae
pop
sub
xchg
pop
loopne
sti
adc
dec
push
outsb
pop
clc
xchg
adc
mov
mov
movsl
sub
xor
xchg
mov
cmc
mov
push
mov
jno
je
aam
popa
adc
fildl
and
daa
push
or
xor
cmp
push
pop
mov
dec
movsb
mov
pop
xchg
fs
sub
je
mov
push
cli
push
ds
filds
addb
mov
dec
and
out
jp
add
xor
sahf
fmul
dec
call
shrb
xchg
sub
outsb
nop
sub
fisttps
frstor
nop
cld
mov
add
lods
adc
push
pop
int3
sub
cmp
add
and
lcall
push
loop
bound
inc
jg
out
push
std
pop
jne
fisubrs
add
mov
push
pop
pushf
sub
data16
sbb
xor
adc
lods
xchg
loop
fcmove
das
mov
js
mov
aam
aas
je
mov
inc
dec
inc
push
and
leave
scas
push
dec
dec
lret
mov
psrad
movsl
mov
lds
sbb
inc
fwait
dec
xor
jnp
adc
cmp
cmp
xorb
imul
mov
in
mov
push
xor
in
pop
in
fcmovu
xor
and
ljmp
push
jg
cmpsl
jns
stos
jno
mov
mov
sub
inc
cs
adc
pop
mov
cmp
inc
cmp
or
sbb
aad
adc
sti
in
and
cltd
jge
mov
test
dec
aas
xchg
xchg
sbb
add
lret
aam
jno
sbb
repz
jmp
or
inc
sbb
cltd
stc
push
inc
mov
aam
mov
nop
mov
movsb
push
inc
cmpsb
jnp
popf
scas
add
mov
mov
in
jg
sbb
fisttpll
sahf
inc
insb
jne
xlat
or
icebp
out
and
sbb
daa
fs
push
xor
imul
xor
addr16
je
jp
fdivrl
movsl
add
out
lock
jl
ret
call
lahf
stos
sar
adc
into
testb
add
xor
or
pop
test
mov
aad
dec
jnp
enter
movsl
cmp
nop
dec
sub
stos
inc
dec
cmc
xor
into
mov
rcl
nop
in
repz
outsb
xchg
cltd
add
or
push
xor
pop
sub
sbb
lds
mov
sahf
add
mov
rcrb
pusha
push
mov
loope
jl
xchg
std
in
sub
mov
stos
imul
add
das
imull
out
je
inc
fmul
jge
pushf
jp
jge
push
out
jne
mov
mov
test
sbb
fnsave
pop
ds
mov
mov
adc
inc
mull
dec
pop
lods
mov
jns
push
cltd
jge
je
push
addl
cwtl
mov
repz
adc
test
xor
jae
pop
int
call
faddl
sahf
cmp
clc
imul
push
iret
xlat
add
and
jle
cli
sbb
inc
dec
movsb
out
out
push
inc
enter
jle
push
das
xchg
add
pop
pushw
call
mov
aaa
xor
add
lods
sbb
or
and
movsb
test
adc
leave
ja
mov
push
mov
frndint
fldenv
jle
in
in
gs
mov
loop
flds
in
mov
xor
and
lods
xchg
jbe
add
paddusb
xchg
lock
mov
jno
mov
mov
mov
pop
inc
jp
cltd
jmp
cmpsb
popf
and
fidivl
pop
push
fildll
sbb
int3
roll
mov
repnz
mov
jbe
mov
ret
pop
adc
lods
icebp
add
adc
loopne
cltd
xchg
cs
mov
cmp
daa
mov
int
mov
je
xchg
insl
mov
inc
iret
lds
data16
aam
js
pop
cltd
dec
inc
mov
jecxz
rcll
xor
and
cmp
mov
sbb
dec
gs
ljmp
mov
outsb
lods
and
inc
jmp
dec
aaa
and
mov
imul
loop
xlat
inc
sub
or
cmpsl
mov
ror
lods
xchg
sbb
scas
and
test
subl
cmp
loop
cmp
add
and
stc
or
pop
pop
sbb
hlt
fistpll
mov
ret
rolb
mov
push
push
push
dec
sbbb
cwtl
jp
jmp
imul
push
inc
inc
es
das
mov
int3
aaa
add
mov
sbb
in
out
mov
push
mov
sub
dec
cmp
addr16
push
and
fst
icebp
add
cld
dec
je
out
xor
out
adc
ja
rcll
sarl
push
je
mov
icebp
xchg
inc
add
sbb
xlat
call
in
scas
add
xchg
enter
mov
mov
and
stc
cld
xchg
jg
fnstsw
xlat
cs
test
push
ret
mov
add
sub
inc
push
jne
and
mov
xor
pop
int3
popa
and
loopne
adc
leave
mov
mov
pop
inc
sbb
bound
mov
jne
adc
mov
lahf
scas
cmp
xor
sub
cli
mov
and
loop
rcrl
mov
push
rorl
ja
dec
jo
pop
add
cli
inc
dec
fnstsw
cmpsl
pop
adc
lret
mov
mov
test
insl
push
lahf
ret
push
js,pt
dec
jge
jne,pt
nop
push
or
push
icebp
dec
sahf
ds
jmp
cmpsl
mov
dec
mov
loope
and
scas
stc
pop
ljmp
leave
shrl
xor
div
push
xor
out
aaa
clc
pusha
lea
icebp
je
sub
dec
or
xchg
into
scas
fadds
mov
jne
dec
push
dec
dec
cld
insb
jbe
cmp
dec
hlt
pop
ret
sub
and
pop
out
and
inc
xchg
scas
cli
lret
pop
xor
repz
xchg
xchg
ljmp
pop
jle
imul
mov
scas
data16
cmpsl
out
outsl
out
fsubr
mov
xor
lods
sub
jno
data16
xchg
mov
xlat
sti
or
mov
and
or
test
sbb
js
scas
daa
mov
clc
hlt
cltd
push
mov
mov
cmpb
pop
dec
mov
cmp
popf
fs
adc
dec
arpl
lret
out
aas
fs
xchg
leave
sbb
sbb
xor
mov
das
push
xchg
xchg
outsl
dec
cmc
pop
mov
inc
pop
push
jg
bound
mov
clc
inc
nop
stc
push
adc
cmp
mov
shll
push
lcall
stos
push
ss
push
add
push
fstp
xchg
pop
in
and
jno
mov
fistps
xor
xor
xor
ret
jmp
xchg
sbb
in
scas
leave
jnp
lcall
ret
sarb
dec
cli
test
insb
out
sub
push
mov
push
inc
mov
or
pop
jo
cmp
aad
ja
jb
mov
xor
lods
mov
lds
mov
fucomp
cmp
cli
out
sti
je
pop
cmp
mov
aad
xor
rolb
jle
aad
aas
mov
dec
popf
cmp
sbb
std
aaa
sbb
sbb
push
sub
loopne
push
in
adc
fsubl
fldt
jb
inc
pop
jns
fs
mov
mov
push
adc
mov
adc
and
inc
and
sbb
movsl
mov
scas
cli
jg
orl
cmp
lds
fldl
into
jecxz
add
mov
pop
and
ds
add
xchg
xchg
sarb
xchg
dec
fisttps
dec
mov
push
insb
out
fldl
imul
jns
lods
jae
mov
sub
mov
mov
add
pop
shrl
add
nop
xor
xchg
dec
in
sub
inc
stos
mov
int
rcll
test
mov
sbb
adc
lcall
lea
mov
aaa
adc
dec
sub
das
jp
imull
call
or
lods
sub
stos
and
xor
or
imul
jb
xor
or
repz
cwtl
push
xchg
popf
cmp
sbb
cmp
inc
mov
or
ret
lods
into
lahf
lock
loop
fbstp
adc
stc
pop
addr16
pop
cmc
pop
dec
mov
sbb
imul
mov
leave
mov
in
sbb
or
sbb
push
mov
das
dec
imul
mov
ret
dec
inc
loopne
push
xor
mov
or
push
and
push
cmp
adcb
xor
aam
stos
add
adc
jbe
dec
cmp
addr16
jo
cltd
inc
xchg
hlt
fcmovbe
push
inc
mov
pop
outsl
xor
and
dec
out
mov
pop
mov
xor
and
dec
sub
mov
int
push
clc
xor
jo
sarl
in
inc
mov
adc
in
push
lods
out
inc
mov
sbb
mov
push
xor
dec
aaa
popf
mov
xchg
ss
mov
test
mov
mov
sahf
lock
ret
test
adc
std
insl
cmp
xor
add
lahf
dec
and
adc
jb
jbe
lret
dec
adc
popa
mov
pop
pop
xchg
pushf
mov
cmp
sbb
je
fdivs
mov
fistpll
sar
sahf
insl
push
bound
pop
push
or
pop
dec
je
mov
and
lcall
outsl
adc
data16
or
nop
stc
sub
pop
dec
je
fbld
push
shlb
arpl
inc
arpl
adc
add
mov
and
jns
and
mov
sub
ja
adc
push
sahf
mov
jmp
push
lret
sub
pop
sahf
or
dec
stos
adc
leave
xchg
jae
or
pop
arpl
stc
out
add
add
js
inc
mov
fsts
cmpsb
jle
mov
fwait
cmpsl
scas
add
pop
sbb
cwtl
cltd
sarl
cs
imul
xchg
pop
ds
lret
lret
adc
add
jle
cmp
arpl
adc
xchg
aaa
jns
xchg
mov
andl
mov
adc
mov
clc
outsb
addr16
pop
cmp
aaa
popf
loop
and
sub
inc
cli
ss
mov
flds
sub
jl
cmp
outsb
call
and
leave
lea
gs
cwtl
pop
test
popa
lods
push
sub
shl
jge
enter
add
les
mov
in
aam
cld
mov
cmp
xchg
cmp
pop
scas
adc
xor
add
test
out
lahf
xor
subl
pusha
call
mov
fildll
cld
mov
pop
jae
sti
xor
pmovmskb
push
movsl
adc
dec
ljmp
out
gs
cli
sbb
cmp
xchg
add
xchg
popa
ljmp
adc
bnd
xor
dec
sbb
js
xchg
pop
cmp
int3
cmpsb
sbb
cwtl
nop
jno
xorb
adc
add
push
fstpt
les
sbb
addr16
lret
lcall
or
xchg
push
jns
xchg
adc
daa
mov
mov
xor
adc
imul
lods
dec
pop
pushf
push
dec
mov
adc
or
mov
xchg
adc
mov
dec
lods
aad
jle
test
jecxz
mov
mov
pop
xchg
jge
inc
adc
in
inc
dec
les
roll
xchg
insb
add
repnz
mov
imul
testb
jb
adcl
ja
nop
xchg
out
jns
hlt
fistl
adc
push
push
mov
dec
scas
sub
sbb
or
iret
shl
rol
mov
mov
leave
stos
and
loop
xchg
add
pushl
dec
scas
pop
xor
icebp
xchg
or
mov
inc
dec
inc
ret
push
leave
cmp
jbe
adc
dec
mov
inc
lock
idivl
cs
cmp
mov
sub
add
arpl
jmp
scas
xor
cmp
mov
xchg
dec
std
jb
aam
add
dec
cli
in
sbb
dec
out
mov
mov
fistpll
lahf
movsb
adc
and
push
lret
jmp
mov
push
test
pop
jno
mov
mov
jns
dec
jne
mov
push
js
pop
jb
movsb
jg
shll
xor
push
jl
rolb
movsl
cli
pop
jmp
jmp
mov
popa
pop
imul
jbe
std
pop
aam
jg
sahf
into
cmp
aas
and
mov
adc
ds
xor
dec
data16
sub
xchg
loop
cmpsl
mov
and
out
leave
neg
out
push
imul
sbb
adc
or
stc
es
fcomip
mov
inc
xor
cs
fwait
rcll
imul
sub
mov
xlat
inc
nop
pop
xchg
or
or
jne
push
adc
enter
xchg
push
ret
mov
sbb
xlat
xchg
jns
insb
outsl
pop
xchg
mov
push
in
dec
adc
cli
jle
mov
fwait
push
das
or
cmpsl
sub
xor
pushf
fisttpll
push
push
mov
adc
cmp
and
lret
xchg
xchg
bound
fildll
mov
addr16
clc
addr16
out
or
stos
xlat
jns
xor
ret
adc
lods
xchg
mov
push
and
popa
xchg
dec
outsb
adc
mov
in
rcl
call
sbb
arpl
dec
ret
dec
sbb
mov
test
ja
cmp
aam
mov
sub
cmp
stos
test
rcrb
hlt
mov
popa
popa
ret
int
cld
xchg
movsb
es
mov
imul
pop
jge
xchg
loope
lods
addl
fs
and
mov
std
or
mov
fcompl
loope
pop
mov
ficompl
push
jmp
std
fbld
outsb
cltd
loop
cmp
inc
cmp
les
rclb
loop
fimull
sub
pop
xor
push
xchg
notb
jb
ja
lret
xchg
jnp
loope
sbb
jmp
cmpsb
aam
sbb
mov
sbb
mov
scas
adc
xchg
jg
addb
sub
jp
mov
mov
dec
das
outsb
cld
andb
rol
repnz
xchg
nop
cmp
dec
test
std
sbb
movsl
into
sbb
sbb
mov
mov
mov
mov
cmp
sbb
lods
xchg
lret
into
lods
add
cmp
cld
or
rorb
test
dec
adc
nop
pop
jns
das
push
dec
add
aad
push
stos
icebp
xchg
std
mov
sbb
jge
jnp
mov
pusha
popl
xchg
mov
enter
mov
movsl
int3
mull
mov
iret
xor
sbb
inc
xor
lret
je
cmp
shll
cmpl
call
mov
cmp
sub
movsb
cmpsl
clc
mov
xchg
xor
cmp
cmpsb
lods
inc
cmc
sti
dec
inc
data16
add
repnz
fwait
roll
mov
lods
add
pop
fnstcw
xchg
xchg
ret
test
ret
xor
sahf
inc
sbb
mov
iret
lds
pand
sbb
push
dec
or
outsb
push
out
pop
sbbb
imul
inc
pop
pop
loop
adc
sbb
push
sbb
outsb
mov
mov
sbb
sbb
popa
and
pushf
xor
cmpsl
or
dec
jmp
lcall
ljmp
mov
jae
pusha
push
mul
push
pop
or
mov
xchg
ficoml
mov
loopne
repnz
sbb
jge
hlt
mov
das
or
add
shll
mov
xor
xchg
adc
cmp
sbb
jb
push
xor
scas
lods
add
scas
jns
pop
ljmp
dec
rolb
js
jo
mull
and
idiv
push
leave
jmp
jnp
add
jmp
mov
mov
inc
inc
lret
adc
and
ljmp
cmp
lods
xorl
jge
iret
mov
pusha
fstp
outsl
sbb
and
jg
mov
lcall
jle
loopne
inc
gs
add
push
or
outsl
sbb
shlb
lret
pop
jns
xor
mov
dec
and
mov
sub
lret
lods
dec
cwtl
dec
pushf
cmp
out
push
in
sub
pop
pop
xchg
mov
mov
dec
add
or
jae
daa
mov
push
adc
xchg
xchg
stc
sub
jl
hlt
out
mov
or
adc
mov
pop
xor
adc
imul
push
insb
push
aas
jg
xor
xorb
adc
imul
daa
add
and
xchg
add
cld
pop
cli
jne
xor
jl
mov
jmp
pop
push
nop
pop
cwtl
inc
pop
sarb
lds
push
testl
mov
jecxz
xchg
dec
pop
int
adc
pop
je
dec
aam
ret
add
cli
xor
mov
adc
stc
nop
lock
lea
sub
dec
rorl
cmpl
sbb
rcr
ljmp
mov
adc
cmpsb
dec
loopne
jns
mov
stos
test
sbb
push
imulb
je
push
or
mov
pop
std
xchg
mov
jnp
mov
pop
pop
stos
pop
mov
addr16
xchg
test
mov
mov
xor
lds
lahf
outsl
xor
iret
mov
fimuls
stos
dec
push
pushf
pop
jge
inc
lret
mov
lods
jne
mov
add
mov
jno
lods
or
pop
addr16
stos
mov
jmp
inc
std
jns
xor
imul
or
lret
sti
sbb
sbb
jl
dec
push
mov
xchg
orl
mov
jnp
cmp
xorl
lods
dec
push
ss
int3
scas
cwtl
sub
lods
push
mov
lods
movsb
pop
ja,pt
or
cmpsl
vpunpcklqdq
jmp
push
or
add
xlat
xor
pop
and
imul
addl
sub
outsb
mov
lods
pop
inc
outsl
jne
add
and
pop
or
jne
add
cmp
hlt
lret
daa
cmp
and
adc
popf
lods
jg
xor
cwtl
push
fs
push
jnp
repz
rcrb
fistl
push
pop
inc
jg
lret
pop
out
mov
xchg
pop
mov
ret
sbb
in
shrl
xchg
and
cmp
popa
out
pop
fdivrs
bound
dec
les
fcoms
insl
leave
cmp
in
or
sub
or
cmpsl
push
cmpb
push
adc
sub
cwtl
cmp
jnp
or
repnz
dec
sub
pop
mov
insb
jb
cmp
imul
xor
mov
pop
mov
cmc
test
and
arpl
push
adc
cmp
mov
dec
push
int
and
in
mov
sub
mov
addl
insl
cmc
jae
pop
add
loop
clc
adc
das
mull
ja
push
loopne
adc
lods
mov
cs
loope
imul
mov
jno
test
pop
enter
movsb
and
pop
sarb
xchg
movsl
push
movsl
push
or
ljmp
adc
push
sub
jmpw
push
cmpb
jnp
pusha
daa
push
shlb
das
ja
mov
mov
sbb
ss
pushf
outsl
mov
mov
and
add
fs
push
mov
mov
lds
sub
test
bound
or
movsb
mov
push
hlt
jb
jp
or
mov
out
add
sbb
pop
aad
push
mov
xchg
andb
add
shll
push
sahf
lock
repnz
jbe
mov
les
cmp
movsl
lds
push
xor
push
xchg
idivb
jp
lret
dec
xchg
xor
dec
mov
xor
and
je
xor
adc
arpl
sbb
das
mov
ja
add
xchg
aas
psrld
sahf
and
pushf
cvttps2pi
push
mov
cmp
jns
mov
sbb
fbld
in
mov
mov
js
mov
add
shlb
sbb
shl
pop
jb
loopne
ret
repz
jmp
mov
roll
int
fs
dec
ja
pop
push
repz
stos
jns
xor
sbb
cmp
xchg
lret
aam
xor
test
xor
mov
jge
je
insl
push
ret
adc
test
int3
test
pop
mov
adc
mov
adc
and
xchg
and
add
aaa
lahf
test
add
pop
out
je
rorl
movsl
mov
icebp
jae
jb
fs
out
sbbl
sbb
cltd
lock
test
mov
popl
mov
bound
and
pop
xor
insl
shlb
in
add
xchg
les
idiv
sarl
pusha
inc
scas
ror
mov
inc
fmuls
loop
mov
out
mov
jmp
dec
dec
fnstcw
outsl
or
and
fiaddl
jmp
xor
xor
fucomip
push
add
insb
push
lods
jl
xchg
fcoms
jl
adc
cmp
fdivl
lret
mov
xor
cmpsb
xchg
or
es
or
dec
pop
push
test
adc
adc
sub
dec
pop
sti
loope
adc
leave
or
rol
xchg
fdivrl
pop
mov
rclb
in
fcomps
sub
ss
xor
sub
or
ficomps
xchg
adc
stc
stos
shl
in
push
aam
stos
dec
inc
enter
jg
js
cmp
scas
test
imul
lret
pop
or
adc
in
mov
pushl
lret
add
fwait
cltd
sub
push
adc
call
les
mov
insl
sub
sahf
lock
push
sub
stos
rorl
xchg
lds
mov
and
xchg
loopne
sub
test
or
imul
cmc
mov
cmp
stos
outsl
sbb
mov
pop
pop
rorl
jb
insl
mov
imul
int
push
test
inc
je
inc
out
mov
aaa
mov
dec
movsl
ret
fsts
jb
rorb
jns
sbb
lock
into
sar
or
xchg
lods
cmpsb
fsubp
lret
insl
pushf
das
xchg
out
rcrl
add
adc
cmp
cmpl
jnp
data16
sbb
mov
mov
fidivl
fcompl
pusha
sbb
enter
mov
cmc
pop
into
sub
push
mov
lahf
jb
fadd
jno
add
jecxz
xchg
mov
sub
sbb
ds
xchg
push
sti
lods
aas
ljmp
scas
outsl
push
shr
cmp
outsb
pop
jle
sub
not
jecxz
out
sbb
pop
icebp
sti
mov
popa
add
inc
dec
pop
mov
push
adc
repnz
popf
sbb
in
sarb
adcl
pop
xchg
nop
aam
xor
mov
int
in
mov
in
jae
and
sbb
jle
add
repnz
pop
aad
sub
add
cmpsb
cmp
jg
jecxz
or
sub
sbb
jmp
lods
in
sub
push
mov
aam
test
mov
stos
or
dec
pop
sub
mov
or
cmp
jno
iret
icebp
sbb
cmp
pop
lock
aas
xor
outsl
in
scas
jo
xchg
push
sub
and
subb
loope
xchg
jle
mov
sahf
ljmp
xchg
pop
inc
xor
push
int3
imul
test
push
into
mov
lea
cwtl
mov
fnstenv
insl
mov
mov
xchg
jo
mov
movsl
sub
addr16
in
pop
repnz
jae
add
jmp
fmul
dec
notl
stc
push
inc
jmp
sarb
jecxz
sbb
in
mov
aas
jo
and
xchg
sub
mov
addr16
sbb
dec
stos
pop
and
in
xor
inc
movsl
lret
insb
outsl
or
clc
in
popf
inc
inc
notl
jp
inc
cmc
insl
gs
sub
and
xchg
sbb
aaa
rcrl
es
imul
mov
fcmovbe
in
shrb
jge,pn
popf
sub
ror
out
cmp
xchg
jmp
cmpb
mov
enter
shrl
imul
dec
lret
xchg
inc
sub
pop
js
cs
xchg
popa
sub
inc
mov
rclb
enter
imul
aam
mov
movsl
iret
jge
aad
mov
dec
xchg
lods
in
addb
lock
cltd
push
lods
lods
mov
sbb
in
test
dec
xchg
mov
jle
in
das
es
pusha
sbb
pop
add
loop
inc
mov
cmp
fisubrl
popf
dec
xchg
in
lcall
push
inc
jns
mov
mov
xchg
pusha
lcall
in
mov
jge
cmp
icebp
pop
xor
imull
xchg
xor
cwtl
mov
jns
mov
shll
sub
lods
mov
negl
jns
xchg
xor
xor
jecxz
fmulp
mov
cmp
je
unpcklps
push
push
and
inc
cmp
pop
repnz
add
pusha
test
adc
sti
pop
xor
vpavgw
pop
sbb
xor
pop
xchg
es
hlt
ss
lods
int
xchg
push
add
ficompl
aad
cs
orl
jns
pop
and
bound
clc
popf
mov
cmpsl
loope
adc
xchg
cmpb
ret
jl
sbb
adc
lret
mov
inc
xchg
into
jns
sahf
pushf
mov
add
sub
cmpsb
pop
stos
out
testl
data16
fsubp
shrl
mov
lea
mov
dec
aad
pop
inc
or
add
iret
push
repnz
fisttpll
mov
sti
jg
pop
dec
fwait
cmpsb
sbb
gs
xor
pop
pop
xchg
push
push
adc
or
sub
fstl
rolb
and
mov
dec
scas
sbb
out
popf
push
sub
adc
lods
cld
push
add
fisubs
fidivrs
mov
and
add
daa
es
cmp
xlat
decb
adc
dec
dec
int3
sbb
mov
out
inc
jne
aad
jg
nop
movsb
ds
adc
popa
pop
mov
xor
jecxz
stc
popf
hlt
sti
out
out
mov
shl
idivb
push
es
jecxz
scas
fsubs
mov
stc
add
call
aaa
sub
bound
dec
cli
mov
xchg
cmpsl
lods
enter
lret
inc
iret
cmp
nop
andb
mov
jb
ret
sbb
dec
outsb
push
loope
jae
fistl
sub
inc
fyl2xp1
adc
add
inc
fcomps
adc
cld
out
jg
test
out
dec
std
or
lods
cmc
pop
xchg
insl
or
or
add
enter
push
push
add
addl
adc
pop
rolb
adc
or
xor
movsb
out
cwtl
fisttpl
cli
and
push
add
xor
mov
and
mov
pop
ja
into
out
jge
rcrb
mov
cmc
push
push
and
mov
scas
addr16
inc
data16
scas
frstor
mov
hlt
push
mov
pushf
add
lret
inc
dec
cwtl
jnp
sbb
cmpsb
ret
cmp
jp
shrl
in
cmp
inc
xor
test
out
lret
mov
stos
sarb
mov
and
mov
aas
and
jb
push
cmp
mov
scas
out
dec
pop
out
scas
rorb
das
gs
mov
test
pusha
pop
test
notl
pop
jbe
xchg
cmp
stc
popf
andl
repnz
cmp
ds
mov
pop
shrl
push
push
jne
mov
and
call
add
xchg
cmp
add
ror
sbb
dec
inc
xchg
stos
cmpsb
outsb
adc
negl
ljmp
jmp
orb
cld
add
enter
mov
sbb
xor
stos
sbb
xorb
aaa
cmp
jmp
repnz
aaa
iret
add
add
into
nop
pop
sbb
addb
mov
or
jg
adc
aad
xor
pop
into
xor
shl
mov
icebp
add
or
stc
and
add
push
and
cmpsb
lret
sahf
pop
mov
pop
scas
cs
pop
imul
shll
aad
push
jp,pt
lahf
jp
bound
imul
aad
cmp
fucomp
ficompl
inc
mov
or
inc
cmp
jmp
pop
mov
lcall
sbb
jbe
jne
push
inc
test
cwtl
xchg
cli
cli
pop
mov
loop
and
mov
dec
sbb
lahf
mov
or
popf
and
push
incl
xchg
out
sub
mov
lds
inc
pop
xchg
aam
rorb
mov
mov
push
cmp
rolb
insb
sub
mov
xchg
mov
cld
sbb
jle
pop
outsl
inc
test
pop
jns
in
pop
lcall
pushf
or
cmp
inc
outsl
xchg
lods
and
int
shr
mov
and
insb
cmp
dec
stos
push
data16
jnp
push
fwait
das
fsubs
nop
fmull
mov
jae
out
sub
test
and
add
pop
andnps
xchg
imul
pop
cmp
sub
call
xchg
enter
sbb
dec
mov
stos
out
subb
mov
add
cmpsb
rcrb
dec
dec
jecxz
jns
jb
sub
mov
mov
out
out
sub
sarb
add
in
xor
or
mov
scas
xchg
and
adc
inc
nop
sar
push
shrl
or
fdivl
pop
add
mov
negb
clc
jnp
mov
in
push
xor
cld
dec
cmp
pop
std
and
or
xor
mov
fdivrl
push
mov
out
jp
mov
push
fs
arpl
loope
xchg
jb
pop
nop
pop
scas
and
cmp
ds
pop
lock
jae
pop
movl
sub
repz
sbb
cmpsl
lock
loopne
mov
sahf
add
fiaddl
aam
push
jo
mov
push
ljmp
push
mov
outsl
jge
daa
mov
aad
sbb
pusha
sbb
cld
in
js
aas
lock
push
lock
out
js
std
divl
das
xchg
inc
mov
dec
xchg
lret
adc
or
aam
xchg
sub
xor
out
loop
aad
pop
adc
mov
popa
dec
pop
fucomip
jmp
sidtl
add
sub
cmp
lods
lds
cmp
lret
dec
cmpsl
sub
sbb
rcr
je
fwait
adc
mov
out
ljmp
mov
mov
cmp
imul
xchg
lcall
dec
push
cwtl
aad
outsl
sbb
push
push
cld
or
mov
test
dec
pop
ja
xchg
push
sbb
or
sub
out
jno
sbb
push
fprem
gs
aaa
lahf
mov
call
jnp
cmp
insw
scas
inc
mov
aad
imul
sbb
lret
inc
ret
mov
adc
inc
out
and
mov
mov
loope
insl
adc
cmp
pop
adc
mov
push
imulb
xor
divb
call
incb
ret
insb
ror
xchg
stc
stc
mov
repz
cmpsb
ficoms
rorl
fisubs
pop
xor
les
das
lret
dec
jae
in
mov
fbstp
sbb
mov
popa
nop
es
lret
cmp
jb
insl
mov
mov
cmp
mov
mov
jecxz
or
mov
xorb
and
daa
imul
sti
xlat
jmp
push
fldt
out
dec
dec
mov
cmp
xchg
cmp
out
jbe
jns
xlat
nop
jo
xchg
mov
or
pop
sub
inc
mov
aad
push
push
aam
gs
sub
jnp
mov
pop
mul
push
cmpsb
mov
cmp
inc
jno
aas
inc
stos
mov
aad
jl
adc
inc
out
in
pop
nop
outsl
ret
fldl
dec
lock
imul
sbb
scas
inc
ret
sbb
xlat
mov
test
jg
es
je
sbb
xor
mov
pop
cmp
push
xchg
cs
aas
and
aam
pop
pushw
push
cmp
into
mov
dec
lea
push
aas
icebp
cmpl
ret
push
stos
pop
ret
cld
jno
jno
xor
int3
push
push
and
lock
and
push
mov
int
mov
pop
decl
jno
stc
das
test
popf
xor
inc
pop
sub
add
scas
adc
dec
cld
xchg
jne
or
stos
pop
mov
xchg
addl
push
lret
scas
push
inc
pop
lods
pop
dec
mov
inc
stos
fbld
loopne
lret
adc
sahf
sbb
rorb
add
xchg
pop
stos
repnz
pusha
stos
fwait
hlt
mov
shll
enter
aaa
mov
dec
sti
push
push
xor
repz
das
loopne
cmp
ljmp
cltd
cmp
xchg
mov
adc
mov
jnp
das
std
add
mov
mov
add
cld
pop
movsl
jle
jns
je
imul
jle
insb
xor
or
and
add
push
and
push
pop
ret
outsb
icebp
aad
out
in
mov
mov
inc
jae
cmp
sub
jne
inc
imul
out
mov
pop
push
rcrb
mov
add
les
loop
inc
out
rorl
dec
js
cmp
pop
sti
or
jne
jge
js
lret
icebp
mov
adcb
add
shrl
lds
scas
add
mov
xchg
cmp
push
dec
push
or
sbb
clc
sbb
repz
xchg
cmp
inc
popf
aam
mov
xchg
scas
imul
aaa
stc
or
adc
pop
and
or
cmpsl
mov
sbb
push
shlb
jmp
sbb
mov
es
cmp
les
push
xchg
std
mov
fmul
fadds
jl
addr16
lcall
and
mov
test
cmp
add
xor
or
xor
test
xchg
out
cmp
addr16
push
push
cmp
outsl
cmp
addb
cmp
cwtl
arpl
ljmp
or
ficomps
mov
and
into
aam
pop
dec
roll
xchg
xchg
daa
bound
adc
test
cmpsb
pushl
loopne
call
mov
jne
jne
xchg
pop
popa
sti
mov
rorl
aad
or
int3
pusha
jo
pusha
jmp
jb
cs
push
mov
shrb
and
lret
mov
lret
aas
out
push
iret
addr16
add
push
and
add
xchg
and
inc
pop
loopne
pop
add
jl
or
mov
mov
jb
xor
add
dec
ljmp
jmpw
aaa
lahf
xchg
stos
pop
fcomp
lds
fidivrl
fstpl
imul
mov
xchg
es
adc
add
test
pop
ret
lock
xchg
jp
xchg
aaa
lcall
xchg
pushf
mov
jecxz
ret
cmp
dec
sbb
jb
and
cmp
sub
sarb
fisubs
mov
mov
aam
inc
mul
test
movsb
dec
xchg
sub
fcomp
dec
add
test
popf
clc
bound
xor
outsl
xchg
push
cld
cwtl
dec
loopne
and
push
add
test
pop
gs
cmpsl
loop
dec
mov
pop
lret
add
stc
mov
repnz
adc
pop
and
leave
pop
xchg
push
pop
dec
aas
inc
out
jmp
mov
loope
jmp
mov
add
outsl
xor
jmp
or
jnp
inc
in
cmp
fcompl
mov
jecxz
popf
dec
pushf
ss
test
sub
fisttps
pusha
mov
sub
sarl
int3
orl
xorl
into
xchg
cmp
cs
outsl
jns
fnstenv
pushf
int
imul
rcl
clc
mov
imul
cs
outsb
mov
leave
mov
mov
mov
sbb
push
xchg
stos
scas
js
inc
sbb
dec
adc
push
sub
inc
in
stos
xor
or
cmpl
iret
outsl
push
mov
das
fbstp
scas
jne
sar
pop
mov
pop
out
dec
push
cmpsb
cmp
jne
loopne
repz
xchg
or
mov
fimull
fcoms
test
lcall
adc
add
push
fldt
movsb
lret
and
mov
push
mov
push
jbe
or
lods
mov
inc
lcall
pop
inc
scas
dec
xor
int3
add
aam
lret
inc
inc
or
adc
sub
cmp
mov
dec
mov
andl
outsb
cmp
adc
mov
test
sbb
xor
xor
jmp
sbb
adc
and
pop
sub
nop
pop
in
les
aad
adc
sbb
leave
mov
mov
pop
addl
cmp
out
xor
jnp
cmp
lret
dec
jg
lret
sbb
xchg
movsl
cmp
xor
mov
mov
roll
push
cmp
rol
and
sti
popf
cmp
jo
mov
lds
mov
add
arpl
movsl
adcb
pop
inc
rol
mov
mov
sbbb
mov
clc
push
sbb
pop
mov
test
repz
pop
mov
lock
iret
arpl
mov
sbb
test
mov
jge
data16
add
pop
aaa
mov
mov
popa
iret
or
cs
push
dec
popa
ja
maskmovq
negl
and
aas
pop
mov
adc
and
popf
mov
jns
stos
sub
in
inc
mov
popa
inc
insl
mov
dec
addl
dec
adc
fcomps
push
lahf
pop
lret
lahf
push
xorl
dec
pop
fnsave
mov
inc
fmul
icebp
lods
jecxz
daa
xor
cltd
sbb
jecxz
inc
push
stos
and
fucomi
scas
cmc
in
xor
popa
aas
orb
mov
sbb
dec
ret
loopne
cltd
insb
mov
mov
mov
bound
mov
mov
loopne
leave
xchg
jecxz
out
in
xor
mov
fwait
mov
cld
sbbb
cmp
and
sbb
sarl
ss
clc
sbbb
rcr
outsl
add
mov
pop
push
and
cmp
or
or
jbe,pn
cs
pop
push
fisubl
sub
and
daa
ficompl
cmpps
mov
insl
idivl
shr
and
mov
repnz
fistl
cli
sub
incb
jmp
call
fistps
jae
xchg
push
fwait
and
push
pusha
test
lcall
cmc
xchg
leave
push
adc
addr16
fidivrs
fcoml
lods
adc
aad
fsubs
push
pop
or
mov
push
dec
test
xchg
push
cmovge
xlat
jecxz
jnp
xchg
xor
or
xchg
or
inc
xchg
push
nop
xchg
mov
xchg
add
dec
sub
test
push
js
f2xm1
or
cmp
and
xchg
bound
rcrl
outsb
fmuls
movsl
mov
cltd
test
pop
mov
xor
and
mov
or
adc
cmc
sub
push
dec
jnp
data16
xor
or
int3
mov
fs
push
shr
push
enter
adc
xchg
cmp
sbb
mov
lock
int
inc
add
sub
push
adc
fidivrs
enter
pop
addb
add
cmc
fst
push
jmp
cli
add
mov
sbb
ja
push
bnd
mov
push
jb
sbb
jl
mov
adc
les
mov
gs
add
or
mov
aas
push
mov
and
xor
divb
repz
push
ljmp
jnp
in
xor
rorl
mov
cmpsb
dec
out
mov
sbb
shrl
sub
jg
and
sarl
cltd
inc
hlt
test
roll
sbbl
xor
mov
cmc
adc
rcr
add
out
mov
pop
add
ja
pop
cld
lea
movlps
test
pusha
or
cmpsl
adc
pushf
jp
pop
js
popf
mov
sbb
call
cmpsl
call
popa
lcall
adc
push
xor
loope
sbb
jbe
xchg
icebp
dec
mov
push
jnp
push
sbb
dec
mov
mov
jge
out
adcl
sbb
pop
lods
jmp
xor
in
or
dec
ret
fs
dec
adc
mov
outsb
mov
ret
imul
push
shlb
xor
sub
mov
lds
inc
xchg
int
mov
push
dec
adc
xchg
movsb
jb
call
pop
test
lcall
nop
cmp
add
and
mov
lods
mov
cmp
out
into
cli
adc
cmpsb
test
daa
jno
nop
push
out
dec
pop
jne
stos
inc
repz
push
mov
pop
mov
push
inc
bound
push
mov
pusha
lods
and
fidivs
ror
jae
xchg
std
loopne
imul
lock
leave
std
push
xlat
sti
dec
sub
adc
fwait
and
xor
or
mov
insl
mov
lea
push
sbb
push
lock
std
mov
dec
test
xor
rolb
test
sub
push
sahf
cmp
or
ss
aaa
insb
dec
xor
fiadds
cmpsb
ja
stc
out
pop
std
sbb
es
jo
out
mov
or
fcoms
xor
rol
je
lcall
cmp
mov
cld
fwait
pop
jle
or
fs
ljmp
mov
adc
addr16
insl
outsb
cmp
jnp
lahf
xor
stos
stc
mov
fcomip
xor
dec
fldl
test
mov
and
imul
xlat
cmp
xor
dec
push
mov
push
ret
movb
adc
in
sbb
mov
int3
xchg
jae
pop
cwtl
insl
mov
aaa
or
mov
sti
xchg
test
jb
or
push
inc
and
in
sbb
cmp
jbe
cs
repz
cmp
fisubrl
rcrb
clc
fcompl
push
mov
cmp
lahf
xchg
out
pop
jecxz
loope
orb
dec
int
incl
sub
fadd
mov
leave
mov
push
xchg
and
ror
lret
out
jecxz
popa
rcl
sub
adc
int3
fnstsw
into
hlt
sahf
jge
daa
jne
jmp
cmpsl
add
imul
mov
push
orl
mov
scas
nop
xor
sub
jnp
shl
popf
icebp
cli
sbb
cmc
sbb
cmp
inc
mov
mov
jb
ret
jecxz
je
xor
bound
pop
lahf
mov
out
and
mov
lock
cmp
sarl
xchg
xchg
bound
aam
jae
sbb
jno
add
jne
mov
addb
out
and
push
push
cs
pop
sub
inc
aad
adc
push
sbb
xor
and
sbb
mov
imul
jmp
xor
jge
mov
int
insb
or
es
test
incl
or
es
xlat
stos
out
dec
mov
lods
add
int
fcomps
jl
ret
ret
add
iret
fisubrs
or
ret
aaa
mov
fildl
cmp
dec
push
cmpsb
dec
xchg
push
mov
addb
cs
sbb
stos
inc
mov
out
shrl
mov
clc
push
push
xchg
push
das
std
pop
or
jae
pop
cmpsb
dec
pop
push
jge
inc
into
xor
fwait
mov
or
and
pop
das
jmp
gs
jle
fisubrl
clc
fdivrl
and
adc
mov
loopne
sub
jae
movsb
addr16
xlat
daa
or
sbbb
xor
add
and
leave
movq
adc
bnd
shrb
mov
clc
mov
cmpsb
jmp
stc
mov
lock
popa
notl
clc
xsave
or
and
arpl
sub
bound
stos
pop
push
adc
and
aas
sbb
lahf
adc
mov
cmpsl
and
in
xor
dec
imul
pop
mov
fxch
dec
nop
mov
jnp
xchg
mov
adc
add
xor
mov
add
and
adc
aam
fimuls
mov
testl
loop
jo
mov
shl
bound
sub
fs
repz
mov
jecxz
jmp
enter
sbb
push
aas
and
jl
mov
bound
in
lret
and
imul
pop
jb
mov
lock
mov
test
test
lds
mov
aas
pop
cmpsb
dec
clc
ret
int3
xchg
pusha
fsts
mov
mov
cmpsl
int3
out
into
pop
jbe
or
jp
mov
mov
dec
jns
cmp
fstl
lds
cwtl
push
gs
cmp
in
and
cmpsl
je
push
cs
inc
inc
xchg
das
push
push
das
sbb
mov
jmp
lods
sbb
xchg
loope
jns
insb
mov
dec
ljmp
sti
sub
mov
movsb
insb
sbb
or
fcomp
xchg
dec
stc
dec
pusha
iret
loop
push
in
leave
add
mov
mov
and
sbb
dec
aas
repz
lret
hlt
test
add
xor
and
out
adc
sub
lea
mov
aas
aam
popf
pop
addl
repnz
mov
add
dec
cmp
sub
pop
dec
into
sahf
ds
push
or
rcrb
jle
and
into
icebp
insl
jecxz
dec
test
loop
lea
cmp
stos
movsl
mov
and
mov
add
pop
pop
pcmpgtd
adc
leave
leave
test
popf
into
js
adc
jl
ret
mov
sar
inc
ss
or
shlb
loopne
xchg
les
and
jbe
sub
xchg
addr16
icebp
int3
loop
gs
icebp
xor
cltd
stc
or
fcoms
imul
sbb
loope
sti
aas
hlt
push
loop
dec
cld
movsb
push
xor
xor
dec
addr16
outsb
sbb
shlb
mov
pop
and
push
pop
push
insb
push
sti
mov
cmp
and
pop
push
enter
insb
aaa
movsl
inc
and
adc
test
int3
dec
test
incb
cmpsb
mov
fs
into
out
or
negb
fidivl
mov
inc
xor
pop
shrb
cmp
pusha
and
arpl
das
clc
and
das
sbb
pop
pop
xchg
rclb
mulb
xor
sbb
sbb
push
xlat
cld
inc
mov
in
lret
pop
sbb
mov
in
inc
shrl
cmpsl
mov
fcmovnu
adc
daa
inc
jbe
jno
cltd
mov
into
sbb
aad
or
sahf
movsb
mov
jo
xor
cltd
lods
and
loop
inc
fisubs
fs
cmp
and
fwait
ret
mov
or
jle
mov
cmp
sub
fstl
in
adc
ss
mov
popl
pop
adc
bnd
or
inc
xchg
ljmp
adc
mov
pop
stos
roll
addr16
mov
mov
xchg
jno
add
cltd
lcall
and
mov
inc
mov
pop
syscall
and
nop
imul
xchg
imul
lock
jo
int3
adc
push
cs
jno
mov
cld
xchg
in
xor
pop
loop
shlb
dec
mov
pop
es
xchg
inc
sub
xor
test
xchg
jno
out
andb
jne
inc
jae
fsubrs
fmull
inc
and
cmp
bswap
clc
lcall
sbb
clc
jb
dec
sub
sbb
and
mov
inc
in
aaa
sub
xlat
pop
incl
out
aam
movsl
scas
scas
pop
jl
stc
or
in
gs
push
and
sub
fidivs
jo
fiadds
sbb
dec
stos
mov
test
xchg
adc
pop
daa
jmp
nop
xor
pop
dec
inc
movsb
sbb
push
add
nop
xchg
dec
std
arpl
sub
mov
jae
jo
sahf
inc
js
adc
mov
jle
subl
or
push
mov
xor
mov
fiaddl
push
shr
inc
mov
lods
addr16
pop
pop
lea
ret
dec
imul
stos
pusha
mov
ljmp
or
sub
andl
jp
nop
jns
out
mov
cmc
jno
mov
repnz
ljmp
add
iret
lea
push
cmp
lret
stc
repnz
call
dec
sub
push
cmp
cwtl
sub
hlt
daa
out
adc
je
rolb
rclb
xchg
mov
adc
cmove
fldenv
and
lret
mov
mov
push
ret
in
add
mov
fwait
sub
jg
cmp
adc
loopne
rcrb
push
pop
jle
pop
push
sub
iret
imul
insl
das
lret
repnz
icebp
jp
xor
adc
insb
fcmovnbe
addb
icebp
sti
shlb
lcall
es
scas
sbb
jne
negb
cmp
jmp
sub
xchg
ds
jb
and
lock
repz
in
jns
sarb
negb
and
loop
add
push
lds
dec
sub
fildll
test
aad
mov
jo
outsb
dec
and
dec
dec
dec
jne
mov
aad
loop
and
sarb
mov
pushf
fdivrs
leave
mov
add
bound
sahf
jmp
stc
stos
das
adc
add
mov
cltd
mov
fnstenv
rolb
cmp
mov
xlat
or
jbe
aaa
pop
sub
pop
inc
adc
cmp
jecxz
mov
xor
mov
divb
test
jmp
call
cmpsb
xchg
mov
pop
stc
lahf
addl
sub
sahf
adcb
aas
stos
ja
sub
xor
or
push
lods
addl
ljmp
cmp
repnz
mov
or
popf
mov
push
xchg
shll
adc
fwait
cld
popa
inc
sahf
and
inc
ret
mov
cld
push
data16
lcall
sub
add
cmpb
mov
jmp
inc
aad
stos
out
mov
je
popa
mov
arpl
les
cmc
stos
cmp
rcr
push
cmc
data16
imul
lea
mov
and
shrl
jge
or
mov
jnp
lods
lcall
mov
adc
mov
mov
pushf
ss
cmpl
jle
out
mov
fwait
jns
mov
inc
cmc
mov
lods
inc
mov
sarb
call
ret
pushf
mov
mov
xor
sub
test
aaa
bound
jle
lea
sbb
or
pushf
sub
stos
sahf
push
push
and
mov
xchg
in
loopne
imul
jecxz
jmp
shlb
mov
adc
mov
and
out
clc
adc
lret
out
sub
or
ret
jb
mov
shl
lcall
fwait
mov
daa
leave
inc
inc
inc
mov
mov
inc
or
jl
cld
repnz
lret
add
rcrb
test
push
pop
icebp
jge
leave
add
cmp
outsl
push
jg
popa
mov
xchg
cs
mov
sbb
adc
lahf
popa
sbb
int
dec
lcall
out
ja
lret
icebp
push
ss
or
movsb
add
mov
push
test
inc
mov
mov
dec
iret
jnp
adc
lds
fwait
pop
xlat
rcll
lcall
sub
je
mov
cwtl
mov
mov
cmp
push
mov
add
out
add
test
pop
imul
dec
lahf
leave
flds
cmpsl
mov
leave
push
ret
adc
adc
and
fs
mov
imul
jp
sahf
and
dec
rcll
jmp
hlt
xor
scas
fdivrl
mov
in
cmp
fwait
ds
outsl
mov
subb
popa
mov
dec
arpl
jns
test
dec
sbb
int3
sbb
push
dec
add
ret
clc
fistps
cmp
sbb
nop
mov
xchg
add
negb
add
rorl
add
sbb
lods
lret
aaa
pop
and
sub
xorl
mov
rolb
rorb
lods
mov
or
sahf
out
push
inc
mov
fcomps
push
cmpsl
push
xor
xchg
and
jmp
push
cmp
adc
daa
idivb
xchg
mov
imul
adc
and
cltd
lcall
mov
iret
mov
cmp
pop
enter
dec
mov
js
or
fmulp
add
inc
sbb
adc
inc
popf
sub
cli
cmp
rcll
mov
cmc
rcl
mov
popf
imull
lcall
lea
pop
xchg
cmp
movsb
add
je
ss
ret
sbbl
mov
dec
adc
cld
or
jge
hlt
adc
or
adc
in
lahf
loop
cmp
pop
and
dec
jge
xchg
sub
inc
andl
dec
mov
pop
push
mov
inc
nop
push
clc
cmp
mov
jo
popf
jb
fsubrl
out
lret
mov
push
test
call
sub
inc
add
in
mov
lods
sub
lahf
cmp
insl
xchg
imul
or
mov
adc
pop
and
insb
in
les
xchg
push
jl
rcrb
push
push
loope
pop
loop
subb
jae
insb
stos
in
out
sahf
inc
add
cmpl
push
or
imul
pop
in
loopne
aam
sub
nop
shll
outsl
xchg
cmpsb
push
sbb
inc
pop
and
fcmovbe
hlt
pop
xchg
insl
jg
sbb
add
repz
mov
adcl
insl
jle
push
out
add
decb
add
sti
sub
xchg
sub
hlt
data16
mov
lea
push
stos
add
daa
shrl
mulb
stos
ficoml
mov
sub
in
stos
sbb
mov
sub
clc
sarl
xor
sub
or
push
rcl
push
call
dec
daa
jns
sbb
mov
pop
leave
jl
and
jne
dec
stc
inc
jns
push
pop
fdivr
hlt
insl
xchg
jge
mov
out
xlat
loopne
mull
ficoms
sbb
scas
lods
not
in
mov
pop
fs
movb
hlt
sbb
ss
enter
xor
mov
cmp
lahf
mov
jnp
in
aaa
mov
cmp
mov
inc
add
jle
add
lahf
iret
jae
mov
mov
xchg
add
xchg
std
adc
mov
fsubrl
jl
inc
in
ss
inc
int
outsb
fs
lret
pop
and
fdivs
int3
sub
test
mov
nop
je
and
mov
push
push
mov
add
int
pop
or
sub
fwait
out
pusha
iret
lcall
sub
outsl
dec
jmp
jle
xor
xlat
lods
pusha
imul
pop
mov
loope
fsubs
xchg
lds
jae
out
leave
mov
adc
enter
cmpsl
imul
add
data16
pop
ljmp
push
movsb
inc
fcmovbe
jl
xor
sub
je
fimuls
pop
fwait
xchg
and
jecxz
fdivs
or
iret
jno
test
cmc
shlb
add
adc
mov
pop
lea
push
sub
stc
ja
outsl
std
sbb
neg
jg
xchg
into
pushf
xchg
stos
jae
jl
cmpb
scas
mov
bound
or
fldt
xchg
movsb
rolb
or
cmpsl
pop
lods
cmp
or
and
mov
ds
sub
ljmp
icebp
mov
test
cmp
xchg
dec
pop
jns
xor
adc
insl
sub
cli
sub
mov
push
push
mov
jmp
cmp
lds
xchg
js
dec
icebp
sarb
pop
pop
mov
push
jo
mov
ljmp
mov
push
repnz
in
add
cmp
lea
pop
sub
cs
fwait
jno
inc
mov
ret
jg
adc
cmp
cmpl
pop
xchg
insb
lret
inc
js
inc
push
dec
addr16
fmul
ja
mov
mov
mov
rcl
into
iret
push
ret
decb
in
cmp
test
push
jp
out
xchg
test
xor
shlb
ret
cltd
push
mov
imul
adc
jb
dec
adc
iret
pushf
sub
mov
out
mov
pop
jne
jno
aas
movl
xor
lods
loop
movsw
lods
fwait
ret
cmpsb
popf
mov
fdivrs
ljmp
packsswb
es
cmc
je
incb
aam
dec
sub
or
mov
imul
and
mov
push
ljmp
jno
icebp
imul
jecxz
or
adcl
inc
pop
jge
jns
add
push
outsb
and
sub
sub
push
mov
out
lea
mov
jae
xor
sbb
cmp
aam
cmp
mov
out
inc
xor
pop
adc
inc
popa
faddp
mov
jle
stos
or
aam
adc
sub
fwait
cltd
js
pop
in
loope
xor
jg
es
insb
dec
dec
scas
sub
add
cmp
rcll
sub
add
inc
fwait
xor
mov
into
mov
xchg
sbb
cmp
cmp
fsubl
add
clc
fadds
jmp
pop
imull
inc
mov
or
pop
pop
pop
sub
cmp
lods
mov
and
out
sarl
and
test
mov
mov
es
sub
jmp
xchg
pop
int3
repz
pop
xchg
loop
mov
pop
jb
pop
sub
pop
dec
lods
ret
test
fdivrp
adc
fcmovb
cld
lock
jns
rorb
xchg
mov
inc
pop
inc
ret
jbe
sti
jmp
and
sub
dec
pusha
popf
mov
cs
add
xor
or
mov
ljmp
inc
or
push
mov
inc
or
movsb
ret
jb
test
stos
add
mov
push
dec
leave
lahf
pop
xchg
stos
dec
jno
lods
push
daa
popa
jo
mov
cmp
nop
adc
mov
stos
insl
aad
inc
push
add
das
cmp
ret
fsubrp
mov
push
orl
test
inc
popa
dec
lret
iret
fsubrl
cmpsl
mov
dec
push
mov
loope
lea
dec
sti
int
dec
dec
xlat
add
sub
loope
enter
inc
movsb
mov
mov
xchg
mov
xchg
mov
xchg
popf
nop
and
fsqrt
jo
xor
xor
sbbl
mov
out
idivl
popf
jo
lret
sbb
jae
xor
sbb
or
popf
iret
push
bndldx
cmpsl
fisttpl
idivb
les
xchg
lret
shrb
test
fwait
xchg
fwait
jne
test
xlat
jo
and
lock
or
mov
cwtl
pop
or
test
and
jbe
fstpt
pop
in
xlat
mov
call
and
mov
add
sbb
pop
mov
insl
or
and
sti
rcll
and
loope
out
jl
xlat
jl
sub
add
neg
leave
idivb
fwait
outsl
fsts
adc
dec
mov
push
scas
das
dec
dec
in
sbb
jle
add
test
jmp
popf
ja
push
inc
outsb
adc
in
sub
and
inc
xchg
jle
mov
xchg
cmpl
xchg
mov
into
jne
popa
movsl
push
xor
push
sub
jg
fcomps
pop
sub
shll
push
or
xor
arpl
test
loope
xlat
xchg
xchg
mov
int3
jge
scas
imul
mov
mov
jl
in
mov
adc
mov
rorl
xchg
mov
enter
sub
adc
jne
jne
clc
xchg
imul
mov
mov
adc
mov
sarb
fwait
dec
test
mov
mov
into
repnz
xchg
xor
adc
outsl
ficomps
push
mov
test
fs
roll
mov
out
pop
popf
aaa
outsb
cmp
sbb
loopne
jno
sub
stos
insb
inc
je
addb
std
push
xlat
icebp
sarb
shll
mov
in
addb
push
div
and
stos
push
loopne
xor
and
add
int
test
aaa
mov
adc
jle
mov
repz
icebp
push
xchg
mov
insb
xchg
mov
xor
cld
jne
lret
mov
scas
shrl
movsb
test
cmp
outsb
imul
cld
es
dec
sub
mov
or
adcb
sub
mov
xor
and
push
cmp
or
pusha
push
and
jo
sbb
xor
xor
lods
imul
out
mov
ret
je
push
movmskps
aas
adc
mov
lds
js
pushf
loope
xor
push
notl
add
lcall
pop
popf
pop
fcompl
jne
pop
hlt
loop
mov
push
movsb
test
push
aaa
xchg
insb
push
xorb
jecxz
repz
push
add
clc
in
mov
add
sub
and
adc
popa
dec
push
cmp
mov
cli
add
mov
rcrb
sbb
popa
mov
add
sub
in
icebp
cmp
mov
mov
movsb
mov
clc
sbbl
pop
icebp
add
lret
popa
movsb
jns
mov
insl
mov
and
js
xor
ljmp
aad
and
pop
imul
jne
imul
xchg
int
aad
fs
jo
fmuls
push
mov
test
dec
popa
xchg
sub
sub
mov
jno
enter
je
sti
test
sbb
mov
clc
xor
fsubrl
popf
or
cmp
inc
jo
sub
jmp
arpl
nop
lret
call
mov
fwait
stos
cmpsl
or
push
stos
jae
loope
mov
out
fsubs
aam
je
dec
mov
addl
outsl
ds
into
test
or
rol
push
dec
mov
mov
test
sti
xchg
mov
les
dec
dec
rol
dec
cmp
jp
aaa
jne
sbb
cmpsb
sbb
ror
adc
lret
out
jae
mov
add
shl
outsb
cmp
lock
mov
jb
leave
mov
cmpsb
inc
and
xor
test
repnz
out
outsl
leave
xlat
cmc
loop
movsl
cmc
fs
cmpsl
xor
inc
inc
jl
fldz
mov
jp
ja
in
xchg
cmp
aam
data16
ja
cltd
scas
pop
pop
adc
pop
popa
sub
add
cs
inc
das
fs
xor
rcl
pop
cli
test
ja
not
pop
mov
and
daa
aas
xor
movsl
rcr
subl
inc
pop
movsb
mov
pop
push
into
adc
pop
pop
push
mov
enter
sub
scas
fistpl
imul
adc
add
push
mov
mov
xor
sub
fwait
and
outsb
add
push
xchg
sbb
orl
pusha
fs
fdivp
xorb
cld
ja
sarl
inc
or
xchg
loop
mov
xor
test
or
jne
push
mov
shl
push
jbe
lods
mov
dec
sbb
adc
scas
jl
pop
xor
adc
inc
fstps
adc
cmpl
hlt
sub
out
xor
cmp
in
push
push
lds
out
dec
sbb
int3
notl
mull
rorb
mov
pop
out
inc
push
jno
rcl
adc
pop
ljmp
mov
loop
into
dec
inc
add
dec
sbb
inc
dec
into
mov
fcmovne
in
or
push
das
xchg
sub
cmp
xor
les
sarl
xor
hlt
mov
mov
jg
xchg
jle
fistps
mov
adc
adcb
xor
sub
cmp
leave
jge
insb
jnp
mov
mov
test
lret
pop
testl
inc
sbb
push
mov
or
mov
loopne
sub
lds
addr16
pop
push
pop
insb
mov
shl
shlb
fistpl
insb
or
shl
aaa
push
sarb
repz
xchg
int
shll
pop
pop
sbb
dec
jns
push
dec
test
push
cld
inc
data16
repnz
inc
lds
bnd
outsl
push
push
frstor
push
inc
invd
dec
mov
xor
test
stos
cs
mov
lds
cmp
pop
outsb
mov
les
pop
xor
lods
repnz
in
call
add
test
push
icebp
sub
and
pop
add
xor
adc
pushf
ret
xchg
insb
insl
sub
notb
add
xchg
loop
push
sbb
das
and
add
dec
sbb
rclb
lcall
fs
push
mov
pusha
or
scas
into
mov
imul
enter
pop
xchg
into
pop
push
sub
imul
iret
xor
sbb
push
push
add
xlat
adc
sbb
int3
iret
in
inc
stos
add
or
push
mov
enter
mov
icebp
and
int3
fcmovu
cmp
pop
dec
inc
loopne
mov
pop
mov
rcr
lods
pop
mov
and
cmp
cmp
jae
jne
out
insb
aad
fistl
add
mov
mov
shlb
cmpsl
fisttpl
and
stc
jb
enter
incl
jge
add
jne
fiaddl
fucomip
imul
movsb
adc
stos
add
xchg
arpl
js
pop
int3
aam
nop
lock
and
rcrl
jg
andb
xor
mov
pop
lret
mov
sub
jbe
stc
push
mov
shll
leave
and
popa
pop
xor
push
lock
icebp
jns
sahf
and
push
mov
mov
push
imul
push
dec
xchg
xor
xlat
add
ljmp
push
jne
fistps
cmpsl
add
popa
jge
data16
mov
aam
in
xor
fisubs
xor
sub
daa
push
jne
stos
xor
jns
cmpsl
fidivrl
pop
insl
dec
in
cmp
jns
test
mov
fnstsw
shl
icebp
inc
pop
mov
fldenv
into
scas
mov
ret
jno
sub
inc
sbbb
or
adc
mul
sahf
data16
cmp
mov
sub
xor
pop
xchg
jecxz
orl
mov
cmpsb
fdivl
push
bswap
mov
aaa
bsf
and
aas
jecxz
xchg
jmp
nop
cmp
and
sub
adc
xchg
mov
inc
jbe
scas
mov
pop
cli
cmp
sarl
mov
jne
popa
dec
filds
in
das
aam
inc
dec
not
mov
sti
roll
fs
mov
cmp
jecxz
push
fstpl
cmpl
dec
dec
push
inc
cmp
js
cmp
pusha
rorl
xchg
mov
add
adc
cmp
mov
push
scas
inc
pusha
sarl
add
leave
ss
in
mov
nop
push
stc
mov
mov
inc
pop
out
sub
and
push
lock
mov
icebp
js
sub
mov
push
and
mov
add
xor
cmp
xlat
mov
stc
movsb
cmpl
or
int
outsl
and
int3
adc
cmp
mov
popa
in
xor
shll
pop
pushf
bound
xchg
shlb
and
pushf
in
lcall
popf
std
sub
mov
or
mov
in
insb
ds
dec
fs
cltd
in
xchg
das
mov
out
aad
xchg
push
xchg
add
mov
mov
cmp
push
add
inc
xorb
cmp
push
mov
ljmp
cmp
dec
in
sbb
test
xor
testb
jle
and
ss
es
rorl
xchg
sub
mov
sub
test
sti
fs
gs
pop
push
ss
movsl
mov
jnp
pop
ja
adc
jb
push
sbb
xchg
xor
lds
and
lret
fdivl
and
in
mov
ljmp
cmpsb
add
cmp
sbb
and
jno
jae
push
scas
ret
mov
push
in
xchg
fiaddl
or
pop
gs
sub
lds
mov
cs
add
scas
fwait
xor
cmpb
and
out
jns
out
adc
bnd
jmp
xchg
push
sub
imul
test
sarl
mov
mov
push
dec
les
aam
aas
gs
jne
push
scas
add
out
push
enter
mov
add
pop
shlb
mov
jo
ljmp
pop
mov
shll
and
pop
lods
in
cmp
inc
pop
mov
fsubrp
and
and
loope
mov
pop
jne
mov
dec
sti
adc
js
aaa
divb
lods
nop
inc
ret
push
xchg
inc
pop
mov
mov
adc
into
push
pop
sub
das
pushl
inc
mov
push
mov
mov
pop
sbb
mov
ficoml
mov
jae
faddl
push
mov
pop
sbb
sub
mov
std
lret
xchg
cltd
roll
lds
xor
in
push
ss
scas
jo
or
push
push
aad
call
adc
sbb
outsl
out
jnp
push
pusha
xor
frstor
mov
in
and
ja
movsl
idivb
aaa
cmp
xchg
xor
or
cmp
mov
sub
cwtl
arpl
jae
add
jg
repnz
ret
nop
adc
mov
shr
in
in
pop
jge
rcrb
sub
imul
inc
cmp
xor
jb
sti
and
jg
pop
les
imul
adc
sub
mov
data16
mov
sbb
leave
daa
sub
inc
xchg
jno
mov
cltd
sub
clc
inc
popa
popf
sbb
enter
js
cmp
les
or
test
aas
adc
dec
adc
push
xchg
dec
aad
ja
push
imul
aam
imul
jmp
dec
add
adc
sbb
and
jmp
inc
dec
inc
test
fimuls
pushl
xchg
xchg
nop
cld
cmp
push
mov
jecxz
inc
dec
stos
stc
or
push
add
lcall
movsb
cs
inc
jecxz
push
mov
dec
shll
and
dec
loop
loope
mov
xor
mov
mov
and
repz
push
mov
popa
out
sbb
fimuls
imul
jl
xchg
sbb
jmp
jb
imul
pop
mov
inc
data16
push
xor
stos
inc
jae
aad
xchg
lods
pop
imul
sbb
cli
bnd
scas
lcall
xchg
mov
cs
loope
sbb
fs
fisubrs
xor
or
fisubrl
sub
movsb
fwait
xor
mov
jb
shl
push
cmpsl
xor
test
daa
mov
push
xchg
stc
add
stc
imul
je
xchg
mov
stc
add
sub
mov
gs
sbb
inc
test
daa
inc
aad
xor
sbb
outsb
add
push
cltd
or
scas
cmp
sarb
ja
in
int3
inc
scas
xor
xor
loop
insb
in
aad
cmp
dec
adc
mov
xchg
imul
mov
mov
in
data16
sbb
push
or
bound
rcll
push
std
int3
adc
stos
pop
push
cmpsl
dec
pop
popa
cmp
je
cwtl
scas
testb
dec
sahf
xchg
adc
lret
bound
adc
loope
mov
lea
mov
stos
or
pusha
adc
mov
sti
mov
data16
pop
test
mov
mov
test
xchg
inc
push
aaa
dec
dec
xchg
xchg
movsl
inc
movsl
cwtl
push
add
sub
cmp
cltd
std
dec
daa
pop
je
out
cmp
add
movsl
lret
test
pop
shlb
rol
imul
jb
sub
sub
mov
mov
test
aam
mov
in
adc
mov
testb
adc
add
mov
cmp
std
xchg
sub
hlt
negb
jo
mov
add
adc
pop
pushf
call
xchg
and
je
push
xor
rcrl
or
imul
leave
fbld
iret
and
mov
mov
fwait
in
xor
or
xchg
adc
xchg
mov
jmp
pop
mov
repnz
lods
dec
in
sarl
lret
daa
pusha
push
out
ficoms
fcmovnb
or
cmpsl
lods
and
cmpsl
xchg
arpl
sbb
xchg
pop
adc
rcll
pop
and
fsubr
push
outsb
pop
sub
insl
sbb
pop
test
cmp
adc
push
jp
and
sub
push
ljmp
sub
cmpsl
rclb
pop
pop
int
mov
pop
push
arpl
mov
sub
adc
leave
nop
pop
outsb
iret
jbe
int
adc
mov
loopne
fcoms
push
jg
shufps
leave
push
adc
inc
movsb
pop
pop
cmovb
lea
aas
data16
fiadds
jbe
jae
sub
sarl
adc
push
sbb
enter
dec
mov
xor
popa
cltd
mov
jbe
push
push
and
jne
pop
add
xchg
mov
pop
pop
std
mov
ret
or
lret
xchg
repz
lahf
mov
xor
pusha
into
xchg
mov
mov
int
mov
syscall
mov
loope
jb
in
mov
jo
das
push
and
dec
repnz
mov
negl
cmpsb
mov
or
adc
test
gs
xlat
jo
push
mov
int
xchg
int
jo
repnz
sub
insl
push
pop
or
dec
test
lock
icebp
and
out
sti
mov
mov
push
in
mov
jg
mov
out
mov
movsl
gs
lods
nop
ret
loope
mov
call
fcoms
aad
cmp
mov
push
in
xchg
sub
pop
outsb
xor
test
adc
in
push
pop
push
add
and
or
mov
jle
lods
mov
ja
movsb
dec
das
rorb
sbb
inc
cmc
and
lcall
int
mov
lcall
andb
cmp
and
int
xorl
jp
jmp
imull
movsb
mov
jae
pop
xor
sub
ds
cmpsb
sbb
cld
or
rcrl
cltd
sub
sahf
xchg
ss
orl
push
lret
leave
cmpsl
outsl
xchg
mov
int3
sub
mov
ja
and
xlat
aam
sbb
lds
pusha
xor
mov
sbb
shrb
adc
aad
sub
inc
dec
xchg
adc
ret
lret
jp
adc
aaa
sbb
pop
mov
adc
and
pop
add
or
decl
sbb
mov
int
mov
stos
jmp
push
jb
xor
jo
lods
xchg
cmp
std
xor
xor
pop
lcall
mov
cmpsb
push
add
jo
pop
cmp
sub
mov
xor
in
daa
jmp
mov
push
sbb
fdivrl
das
jns
sub
out
arpl
lcall
test
and
cmp
in
outsb
call
jl
pop
sbb
mov
inc
push
aas
xchg
aad
lea
leave
int3
jb
and
es
jns
fbld
cmp
cmp
outsb
ss
iret
push
sbb
or
inc
enter
lret
insb
mov
ss
jno
cs
lahf
add
or
sbb
sub
popf
imul
test
sbb
pop
xchg
adc
cmpsb
push
sub
inc
adc
rcl
lret
push
and
iret
fadds
add
jnp
dec
test
add
mov
add
inc
mov
or
repnz
stc
adc
loop
sti
ljmp
sbb
ljmp
jecxz
iret
dec
cmpsl
fimull
mov
fstl
clc
cs
movsl
andl
movsl
jmp
sbb
or
mov
aam
pop
push
pop
cmpsl
jmp
cmpsl
fwait
out
dec
or
mov
scas
push
inc
dec
push
jb
pop
mov
testb
lahf
pop
dec
add
mov
mov
add
adc
adc
repz
das
loop
int3
jo
imul
lret
mov
xchg
xor
mov
andl
xor
and
add
push
add
movsb
test
jmp
fistps
mov
mov
loope
push
jno
push
xor
sbbb
mov
xchg
xor
add
mov
xchg
leave
push
sbb
adc
and
mov
push
scas
fst
inc
inc
mov
dec
dec
aas
adc
pop
xchg
movsl
push
inc
lahf
bound
sbb
lcall
mov
inc
popa
dec
dec
decl
sub
lea
out
call
gs
ljmp
jge
pop
loope
or
jecxz
pop
insb
adcb
dec
mull
jl
in
nop
mov
repnz
cli
fistpll
sbb
sub
out
add
or
cmp
mov
out
add
mov
jmp
pushf
outsl
xor
add
xchg
xor
cmp
out
je
daa
xchg
insb
pop
and
mov
jns
push
mov
jns
inc
lock
and
or
mov
dec
orl
push
add
ret
in
in
fsts
inc
mov
jns
int3
lret
arpl
ds
adcl
data16
js
sub
insl
repz
lods
dec
jb
popa
or
fdivl
mov
aam
push
pushl
std
outsb
fsubrs
ficomps
mov
or
sbb
ss
add
sub
sbbb
ret
mov
fisubrl
jl
push
loopne
imulb
aas
mov
pop
mov
xor
fcompl
cmp
shll
lea
daa
push
inc
aaa
jg
out
out
or
dec
xchg
dec
pop
enter
decb
and
sbb
cmp
dec
push
sbb
loopne
xor
shr
sub
dec
and
mov
outsl
lds
cmp
test
mov
data16
inc
mov
lds
imul
std
jne
add
lods
xchg
fwait
xchg
cmpsb
outsl
outsb
cwtl
sbb
or
shlb
ja
push
mov
hlt
fst
clc
dec
sbb
lcall
sti
shrl
in
fsts
pop
inc
dec
ret
scas
or
test
movsb
add
cmp
scas
scas
int
pop
in
mov
xchg
stos
das
cmpsb
add
inc
pop
xor
sbb
out
ret
dec
add
je
xchg
jnp
pop
dec
rorb
inc
les
mov
xchg
dec
ljmp
sti
mov
aas
lock
int
out
sub
mov
popf
push
sti
xlat
aad
add
cmp
data16
sub
push
add
xlat
cld
ds
cmpb
clc
es
aaa
int3
mov
jae
in
js
fidivrl
xor
lret
add
sub
jae
movsl
sbb
nopl
jl
rorb
pop
popf
mov
push
imull
addb
xchg
sbb
movsl
jns
inc
jne
add
xor
loope
loop
mov
cmpsb
pop
or
dec
hlt
in
in
scas
xor
fwait
call
pcmpeqd
dec
out
mov
dec
fnsave
repnz
inc
sbb
popa
into
adc
cmp
rol
lcall
lret
and
out
rorw
push
adc
add
rcrb
pop
cli
aam
jnp
ljmp
push
dec
insb
xor
repz
int3
mov
inc
std
roll
mov
repz
stos
pushf
jp
outsb
dec
push
fsubs
xchg
imul
test
sbb
cld
xchg
cmp
xor
and
out
loop
adc
jns
cwtl
inc
aaa
pop
pop
popf
in
lds
iret
pop
mov
cltd
inc
inc
je
sub
mov
stos
cmc
inc
jmp
jb
push
int
fdivl
repnz
sub
sbb
mov
fistpl
ret
cmp
popa
inc
xchg
add
out
adcl
lret
data16
fwait
insb
pop
mov
scas
into
xchg
outsl
shll
jmp
movsb
testl
dec
jg
add
xchg
out
push
int3
inc
jbe
aas
sbb
in
xor
mov
nop
fcmovnb
sbb
pop
or
loopne
xor
out
lret
sti
mov
in
movsb
pop
dec
test
movsl
fucomp
std
push
or
fsubl
push
sbb
fidivrl
movsl
or
sbb
subl
js
pushf
shlb
ucomiss
push
aad
jecxz
sub
mov
add
pop
inc
jo,pt
jne
inc
cld
inc
neg
push
push
xor
push
cli
pop
xchg
leave
aad
cmp
pcmpeqd
cmp
shlb
je
xor
xchg
mov
sti
push
scas
cmp
dec
jo
or
scas
jecxz
hlt
pushf
adc
loopne,pt
jmp
push
push
dec
cld
or
jbe
adc
shll
es
sub
add
xor
adc
dec
ja
ss
stos
push
mov
and
fisubrs
dec
sti
jae
and
aas
push
and
mov
repz
mov
lret
xor
push
mov
lret
cwtl
mov
dec
jp
in
xor
xchg
scas
add
icebp
sbb
lock
mov
out
ljmp
les
rorl
lret
aam
out
and
adc
rorb
jo
sub
inc
push
rolb
dec
lds
ret
xchg
scas
js
xor
pop
push
adc
push
cltd
xchg
jne
data16
cld
stos
add
mov
or
ret
data16
hlt
jne
in
jle
arpl
push
mov
in
repnz
sub
mov
or
add
fldl
and
and
xchg
and
mov
ja
ficoms
stos
pop
addb
shrb
enter
inc
jno
cmc
dec
push
in
jns
sbb
cmp
adc
mov
shlb
arpl
scas
and
jge
inc
fwait
xchg
loope
pop
push
push
ljmp
xchg
jae
rol
mov
xchg
lahf
sbb
cmp
xchg
dec
xchg
cmp
js
cmp
in
cld
ljmp
out
loop
push
stc
imul
pop
mov
and
cmp
ficompl
dec
add
xchg
adc
xchg
lcall
icebp
cmp
js
mov
mov
loope
jo
aas
movsb
outsb
add
xor
scas
or
mov
movsl
int
negl
loope
sub
mov
popf
inc
nop
xor
enter
mov
fdivl
or
lds
xlat
test
pop
adc
push
mov
jbe
adc
cmp
push
mov
mulb
call
pop
or
xor
loope
xorl
mov
cld
fadds
call
stc
dec
mov
cmpsl
mov
fs
push
dec
push
cmp
lcall
push
std
fisttpll
loope
mov
arpl
repnz
push
push
mov
push
or
xchg
jge
mov
add
push
fwait
shll
push
jno
or
cmp
jo
movsb
out
push
cmc
sbb
fistps
mov
pop
lret
fdiv
insb
imul
mov
call
sbb
arpl
xor
test
scas
and
dec
jge
outsb
xor
enter
fidivrl
repnz
jge
pusha
jnp
mov
mov
xor
ja
out
pusha
roll
cmp
ret
pushf
cmc
lea
jne
push
or
cmp
hlt
mov
pop
xchg
sahf
pusha
rcr
inc
cli
movb
in
sub
sbb
jns
mov
arpl
add
aad
dec
inc
cmp
add
or
push
cli
enter
add
cmp
inc
xchg
shlb
jb
xchg
push
and
jp
insb
adcb
sti
imul
ficoml
movsl
das
lds
mov
jb
nop
clc
cmpb
add
das
jge
sbb
pop
mov
cmc
loop
test
mov
push
sbb
mov
test
js
inc
rcl
fneni(8087
inc
mov
stos
add
mov
xchg
lcall
sbb
xor
inc
test
xchg
pop
add
daa
fimull
repnz
test
push
adc
or
pushf
in
outsb
inc
and
xchg
xchg
mov
and
cmpl
mov
adc
mov
push
ret
mov
adc
mov
mov
jmp
cli
pop
mov
repnz
inc
and
test
add
jecxz
add
lock
icebp
loope
jge
call
dec
sbb
sub
mov
lret
xor
sbb
mov
mov
or
jno
out
stc
movsb
add
sbb
jb
mov
dec
xchg
hlt
inc
into
mov
mov
cmp
scas
push
icebp
fstps
mov
nop
incb
imul
ss
icebp
xor
out
xor
pop
jo
push
cmp
out
and
addr16
mov
cmp
imul
mov
inc
push
pusha
adc
mov
jo
fcom
jp
orb
push
jno
dec
xor
or
mov
and
out
lahf
addr16
push
mov
sub
mov
je
shl
lcall
inc
ja,pt
push
fsts
pop
es
call
clc
mov
push
mov
int
out
mov
xchg
or
or
or
add
cld
mov
xchg
outsl
nop
push
mov
outsl
call
arpl
cmp
mov
inc
xor
xchg
and
xchg
scas
sub
shll
pop
lret
dec
xor
pop
or
add
mov
adc
arpl
add
pop
ret
xchg
xor
into
icebp
jg
mov
cmp
sbb
and
pop
sbb
into
and
mov
sub
popf
inc
mov
in
fxtract
or
shlb
adc
shl
mov
ret
scas
cmp
mov
sbb
add
cmc
mov
loop
jno
inc
inc
nop
pop
dec
sub
jp
inc
movsb
fcompl
insl
jnp
xchg
mov
popf
pop
cmovae
xor
in
stos
sub
fsubrl
fwait
cmp
out
and
or
jbe
repz
fistl
cli
icebp
leave
fisttpll
cmp
stos
sub
pop
mov
mov
fstl
cmp
js
lea
xor
dec
pop
sub
dec
std
sub
fsub
xor
mov
inc
fdivs
cmp
out
sahf
and
jmp
aas
out
and
dec
pop
les
mov
sahf
push
cltd
aaa
jg
inc
inc
clc
je
je
lods
imul
leave
jo
cli
mov
sti
jne
rcll
inc
jo
in
or
pop
adc
lock
xor
outsb
test
sbb
dec
lret
sbb
out
cmp
cmpsl
pop
repz
mov
jae
xchg
jl
pop
out
sbb
pop
sbb
pop
jb
in
jb
cmp
sub
je
imul
shr
sbb
mov
mov
std
or
sbb
loope
loop
and
adc
sbb
addr16
lods
in
sarl
adc
orl
xchg
adc
repnz
pop
push
jle
movswl
in
push
sub
mov
push
ds
loope
ret
lods
xchg
sub
mov
or
test
sbb
xchg
mov
scas
jnp
bound
popa
lock
cmp
xor
jo
mov
pop
cmpsl
popf
push
mov
adc
and
add
adc
jno
push
test
nop
icebp
gs
nop
outsl
inc
push
fidivrl
jge
xchg
push
cmp
adc
cwtl
mov
nop
inc
lahf
lds
and
popf
adc
cmp
lcall
xlat
adc
cltd
sub
pop
cmp
xor
add
neg
adc
andl
lahf
js
popf
xchg
shll
xchg
add
push
or
jle
or
rorb
aad
outsl
push
rol
dec
loop
pushf
insb
adc
mov
sub
inc
in
test
movsl
frstor
lcall
popa
out
loopne
xor
push
lcall
sub
jl
int
leave
lret
push
add
movb
and
lahf
lret
xor
cmpsb
sahf
outsb
add
imul
jl
cmp
fcmovbe
imul
jmp
repz
adc
lret
mov
add
cltd
push
fwait
icebp
scas
inc
cmp
int
int
lcall
or
rolb
cmp
and
loop
xlat
jno
add
ljmp
bound
jle
mov
sub
xchg
aad
inc
push
repz
lret
ljmp
xchg
and
insb
inc
out
aad
fistpl
adc
sbb
adcl
or
stc
adc
testl
iret
lea
inc
out
cmp
loop
adc
nop
rorb
insb
jle
mov
movsb
sub
pop
dec
mov
clc
lock
or
mov
imul
push
jb
fwait
and
es
adcl
inc
pop
nop
fsub
xchg
inc
imul
js
push
xor
pop
add
pop
notl
or
jns
movl
lret
or
or
jnp
and
repnz
test
mov
or
imul
mov
and
in
push
sub
int
in
push
xchg
mov
inc
sbb
add
movb
inc
pop
int3
sbb
push
stos
cwtl
mov
ret
gs
aaa
ss
mov
cmpsl
mov
adc
xchg
mov
les
ss
ljmp
dec
mov
mov
mov
ffreep
inc
push
lods
adc
js
js
xor
dec
jo
mov
fldt
popf
repnz
rcrb
jle
xchg
push
add
bound
inc
or
call
outsl
scas
xchg
mov
cmp
out
dec
add
out
dec
outsb
xchg
mov
scas
jge
loopne
push
inc
loop
loop
adc
xor
adc
subb
mov
cld
inc
lock
lahf
sbb
addb
sarl
jae
ret
push
adc
mov
sbb
movsl
or
xchg
cli
call
in
or
test
adc
scas
cld
leave
jle
inc
sbb
daa
loop
mov
mov
pop
mov
or
mov
xchg
mov
pop
cltd
push
xor
lret
insb
xor
mov
jae
addr16
repnz
push
pop
lahf
fwait
cmp
add
rorb
jg
stos
decl
xchg
xor
scas
int
xchg
push
lock
adc
cld
cld
sbb
idivb
les
push
cmp
imul
loopne
pop
mov
pop
aad
and
adc
jg
out
mov
sbb
fwait
mov
push
mov
dec
lds
add
out
sbb
popl
add
lret
out
jns
jl
pop
dec
out
adc
push
xorl
arpl
out
add
int3
sbb
cmp
mov
scas
mov
addr16
and
inc
out
sub
adc
or
dec
test
loopne
mov
adc
xorb
out
adc
aam
cmp
push
xor
xchg
mov
pusha
or
xor
test
pop
stos
movsl
add
dec
out
jne
cmpsl
mov
popa
fimuls
dec
mov
in
es
jnp
mov
inc
xor
and
scas
popf
jecxz
add
popa
cmp
in
push
sti
mov
pushf
or
lret
pop
test
lret
pop
xor
insb
xor
mov
xor
mov
cmp
xor
cmp
xchg
ja
sbb
shrl
push
push
dec
adc
add
add
pop
mov
lods
movsb
rorb
push
sarb
push
mov
loopne
fisttpll
push
sbb
out
pushf
out
mov
add
jl
adc
mov
jp
ja
std
inc
push
add
adc
cmpsl
rorl
cmp
push
lods
inc
or
mov
adc
jge
scas
outsb
sub
scas
push
mov
pushf
pusha
insl
nop
data16
cmp
jp
fimull
popl
dec
inc
inc
loope
dec
xor
and
mov
mov
out
mov
add
mov
jns
jns
pop
pop
push
xor
fs
inc
sub
js
stc
inc
andl
test
pop
arpl
loopne
jbe
rol
mov
mov
mov
inc
ja
pop
dec
mov
pushf
cmpl
adc
adcb
jnp
mov
lcall
fmuls
clc
ds
ds
loope
adc
jo
mov
popa
mov
loop
scas
in
and
mov
mov
out
jecxz
frstor
data16
shrb
push
test
dec
out
cmp
sahf
out
imul
push
push
sbb
iret
xor
jle
cs
sbb
bound
and
xor
movsb
xor
mov
dec
aam
mov
fwait
and
cmp
sub
mov
out
subb
add
pusha
andb
insl
outsl
cwtl
aad
nop
pop
bound
pop
cli
shl
pop
into
andb
or
fstpt
sub
in
inc
jg
pusha
pop
sbb
mov
dec
lds
xchg
cmpsl
sub
adc
and
cli
jecxz
xor
lahf
in
mov
xchg
pop
and
add
push
jl
or
add
addr16
xor
hlt
mov
xor
push
roll
into
daa
repnz
mov
inc
jg
jge
jnp
mov
sbb
or
xchg
mov
nop
popf
jge
decb
dec
or
call
test
hlt
jne
mov
push
push
jnp
ret
xor
movsl
pop
ljmp
inc
aam
inc
lods
dec
jbe
stc
lds
cmp
sbb
mov
jge
insl
sbb
incb
int
push
mov
shlb
ret
cmp
sub
sarl
addb
out
hlt
in
jbe
inc
int
call
jbe
movsl
fwait
orb
mov
out
inc
sub
pop
stc
mov
divb
int3
cmp
mov
xchg
pop
dec
xchg
ret
sbb
pop
xchg
jb
jo
pop
sub
mov
xchg
out
push
int3
iret
or
arpl
inc
insl
jbe
stc
mov
push
cmp
jb
xor
and
pop
dec
filds
xor
mov
gs
mov
in
fld
idivl
mov
je
int
mov
int3
cld
and
fwait
mov
in
inc
jp
fistpll
ret
orl
mov
push
loopne
inc
pop
fildl
out
mov
mov
add
push
sub
movsb
jmp
xor
or
scas
fisttps
pop
subl
cmp
fldt
cmpsl
mov
mov
outsl
test
xchg
nop
cli
test
popf
lods
addr16
pop
mov
mov
stos
jne
dec
jle
ret
push
js
pop
adc
mov
xchg
inc
mov
stc
call
xchg
sub
mov
das
mov
push
mov
jne,pt
and
push
cmp
enter
pop
sbb
sub
xchg
sub
shlb
mov
push
call
or
sub
xchg
push
sub
sbb
in
xor
sbb
out
pop
xor
test
rcll
adc
mov
pushf
aas
lea
ja
out
cli
pusha
jno
push
xchg
adc
jnp
or
xor
xchg
push
mov
clc
sbb
cmc
scas
test
sti
in
mov
flds
dec
lods
xorl
xorps
sbb
out
inc
out
fcomps
inc
aaa
add
and
out
cwtl
fistl
daa
mov
pop
fdivr
push
pop
adc
pop
scas
jbe
and
inc
repnz
and
test
ret
es
fisttps
scas
push
xlat
ret
fists
sbb
dec
cwtl
xor
push
mov
bound
sbb
xor
mov
and
jns
inc
aas
dec
mov
jnp
fidivrs
lods
push
lcall
xchg
sub
das
pop
sahf
dec
jns
mov
insl
jmp
mov
and
mov
lds
outsb
movsb
xchg
movsb
and
mov
dec
inc
outsb
push
dec
scas
imulb
popf
rcl
mov
xchg
add
jmp
xchg
and
iret
sub
ret
fwait
pop
dec
mov
cli
imul
mov
fsubr
stc
repz
popf
push
mov
jb
sub
xor
mov
push
and
ficoms
popf
nop
mov
pop
pop
insb
in
in
ds
ja
test
fmuls
les
ds
scas
popa
pushf
int
imul
cmp
call
out
cmp
dec
loop
test
mov
mov
jmp
push
inc
pop
mov
sbb
jle
in
or
cltd
push
add
mov
ljmp
outsl
nop
loop
mov
fcomps
aad
mov
fs
ror
xor
movsb
cmp
mov
xchg
xchg
cwtl
adc
dec
sub
faddl
test
cmpsl
mov
lock
xchg
bnd
insb
sub
cmp
jl
fildll
pop
cmpsb
mov
fstps
pop
test
cmp
mov
cli
pusha
and
repnz
cltd
mov
leave
out
inc
aas
jp
xor
aad
and
push
jecxz,pt
mov
in
jmp
xchg
js
hlt
inc
dec
fidivrl
in
xlat
bnd
out
enter
xchg
pusha
insb
pusha
int
and
pushf
int3
test
filds
mov
add
dec
push
sub
fnsetpm(287
das
mov
pop
movsl
cmpsl
mov
inc
mov
fisubrs
xchg
ret
popa
imul
sub
stos
jns
push
dec
roll
out
mov
loop
add
cwtl
push
scas
inc
or
jbe
xorl
fisubl
fistl
lock
sbb
int
shl
jecxz
adc
test
or
add
jns
xchg
mov
jmp
dec
jecxz
lods
or
dec
xchg
xor
ret
in
rcr
test
aaa
and
outsb
cmpsl
xor
dec
push
xor
inc
sbb
sbb
mov
imul
test
lret
inc
mov
mov
jecxz
icebp
fidivl
pop
addr16
push
int3
js
nop
stc
jns
mov
or
out
pop
and
jnp
arpl
adcl
int
sbb
xchg
adc
sbb
insb
cmp
rolb
xorb
jb
mov
dec
ljmp
sti
mov
adc
int
pusha
xchg
inc
xchg
sbb
mov
popa
sbb
stos
xor
fdivr
push
loope
and
adc
pop
out
pop
cli
aaa
inc
pop
lret
mov
xorl
sub
mov
test
shll
loopne
and
cmp
ljmp
ljmp
mov
fbld
shll
lret
fs
xor
cmc
fisttpl
inc
jns
sub
jmp
pop
imul
leave
mov
push
cld
mov
rolb
jb
frstor
sbb
adc
push
mov
int
pop
in
hlt
mov
popa
jl
enter
mov
shlb
dec
cmp
cmp
mov
pop
pop
mov
fists
pop
sahf
call
insl
fdivr
es
mov
ficoml
push
test
push
leave
bound
jecxz
and
adc
insl
fstp
fwait
ret
pushf
ljmp
orl
loop
xor
pop
push
xchg
or
adc
icebp
out
lea
enter
out
pop
xchg
mov
add
fistps
mov
mov
or
and
and
imul
jb
mov
xor
push
mov
vcvttpd2dqx
data16
nop
pop
jle
pop
or
adc
pop
adc
pop
stc
lods
xor
into
inc
mov
and
mov
cld
cli
mov
push
cmp
loop
test
stc
adc
xor
mov
xor
sbb
test
addr16
xchg
jno
clc
lods
lcall
iret
push
pop
out
cld
jecxz
scas
mov
outsl
and
sub
xadd
push
xchg
jecxz
bound
inc
jo
lods
or
mov
imul
mov
and
out
aas
pop
mov
ficoms
dec
mov
stc
pop
push
aas
and
mov
inc
lds
sub
pop
leave
mov
inc
leave
pop
push
cmp
dec
cmp
pop
arpl
pop
or
fistpll
push
add
sub
dec
ret
jecxz
sbb
sub
std
cwtl
xchg
add
pop
inc
cmp
and
mov
lret
pop
ds
imul
hlt
push
xchg
push
data16
sbb
xchg
adc
mov
repnz
sahf
mov
imul
push
mov
mov
aas
les
mov
sti
inc
push
xchg
inc
repnz
ret
pushfw
in
sbb
inc
fnstenv
cmp
scas
fs
or
xor
mov
mov
mov
dec
movsb
mov
aad
inc
adc
pop
insl
ss
in
or
jle
and
jne
sub
push
mov
add
decb
pop
pop
test
lods
xor
cli
jns
sahf
lods
cwtl
cli
shrb
mov
in
popa
je
stc
gs
in
in
xchg
popf
test
cmp
mov
faddl
push
or
pop
jne
mov
xchg
push
rcr
popa
add
addr16
cmp
fsubrs
dec
jb
push
addr16
push
es
sbb
out
outsl
je
push
loop
and
push
je
push
push
cmp
leave
les
ret
sbb
stc
fwait
mov
cs
das
jecxz
push
decb
test
and
xchg
inc
sub
test
lock
jle
movb
loop
dec
lret
and
add
es
cmp
out
sbb
jne
or
sub
mov
std
sub
idivl
adc
shrl
repz
sbb
stos
inc
xor
or
push
push
mov
es
cmp
loopne
aam
or
jp
cmpsl
loop
add
cmc
aaa
jmp
fs
push
out
cmp
xlat
or
dec
int
pushf
or
stc
lcall
inc
dec
ds
mov
xlat
es
imul
imul
add
incb
rorb
cs
ja
das
in
stc
cmp
dec
test
testl
repz
jb
mov
ljmp
sub
cmp
dec
dec
push
push
clc
mov
movsb
sbb
nop
repz
rcrl
add
inc
jp
test
popf
lock
and
test
dec
adc
mov
lret
sub
adc
xchg
inc
daa
bnd
cmp
push
mov
mov
outsb
add
mov
jne
or
mov
dec
aaa
xor
mov
jb
adc
or
sti
pop
mov
nop
call
adc
rcrl
in
pushf
dec
xor
scas
jle
fcoml
clc
xor
sbb
bnd
sbbb
sbb
inc
mov
fildll
pop
inc
scas
push
jmp
lahf
das
pop
sbb
mov
lahf
push
enter
in
and
out
nop
mov
mul
std
mov
mov
aaa
cmp
lahf
aam
xor
daa
test
inc
gs
pop
mov
repnz
sahf
dec
nop
pop
jae
push
push
arpl
aaa
jg
lods
adc
daa
cmpsb
outsl
sub
and
arpl
push
int
gs
cmp
negb
mov
pop
pop
inc
lahf
mov
push
xchg
lcall
popf
cmp
mov
mov
pop
pop
jle
orb
ljmp
adc
and
imul
scas
enter
ljmp
imul
adc
call
mov
jecxz
insb
pop
aas
aam
jl
xchg
inc
fsubl
jbe
int
dec
push
ret
in
adc
sub
mov
push
adc
movsb
pop
mov
jge,pn
or
fld
mov
pop
jmp
or
xor
les
sbb
mov
and
pusha
insb
divb
sti
mov
mov
mov
addr16
xchg
mov
stos
fadds
mov
sti
outsb
mov
dec
xchg
dec
and
jb
sub
push
pop
aad
in
test
cmpsb
aam
sbb
pusha
xchg
repnz
pop
aas
xor
jecxz
lcall
push
and
pop
pop
lods
icebp
jo
push
xchg
mov
inc
pop
ss
call
push
imul
lret
sarb
xchg
dec
cmpsb
cmc
ret
mov
pop
or
sub
cmp
cmp
dec
cmp
ror
in
mov
ss
jnp
je
dec
js
sbb
and
xor
lahf
xchg
dec
inc
xorl
ja
mov
and
fdivs
mov
jo
testl
or
fstpt
cmp
sub
xor
hlt
push
out
pop
decb
dec
cwtl
rol
aas
jno
clc
inc
dec
mov
jbe
nop
fmul
jbe
es
pop
in
ljmp
mov
in
mov
dec
xorl
out
dec
dec
and
mov
icebp
cmp
mov
pop
push
lahf
out
fwait
icebp
cmp
sbb
xchg
decb
xchg
imul
jns
lret
ficoml
or
int
jno
or
pop
idivl
cmpsl
mov
dec
movsl
loopne
dec
test
ss
push
cwtl
cmc
shrl
mov
cmpsb
and
nop
les
ret
sbb
loop
movsl
jmp
call
addr16
scas
and
mov
icebp
mov
bound
inc
loopne
xor
mov
push
or
adc
add
lock
mov
popf
xlat
pop
movsl
and
pusha
jl
aam
xchg
sahf
and
sub
insb
pop
pusha
push
mov
ljmp
sbb
push
mov
pop
xor
pop
mov
cmpsb
popf
sbb
push
dec
or
add
arpl
imul
das
lret
pop
cwtl
mov
cs
mov
lahf
in
jb
fstp
cltd
or
and
insl
rorl
ja
stc
or
add
jmp
pushf
or
imul
cmp
roll
push
cmp
add
mov
int3
ds
shl
adc
jae
repnz
pop
or
popa
mov
lret
mov
jne
pop
push
xor
xchg
xchg
add
das
loope
jo
inc
push
push
subl
mov
adc
mov
pop
or
cmp
mov
ficomps
or
ror
ret
pop
ja
fdivs
mov
sbb
lahf
pop
jno
push
mov
and
out
xor
pop
xchg
jp
loopne
aam
xchg
inc
pushf
clc
and
repz
int3
fcompl
les
pushf
mov
dec
add
shrl
repz
jmp
rorl
inc
into
loope
jo
clc
aam
push
mov
int3
sahf
imul
xor
xor
dec
movsl
lcall
lods
call
into
mov
or
push
mov
push
mov
jne
lods
ss
repz
pushl
mov
xor
outsl
sub
xchg
repnz
outsl
clc
jecxz
jne
popa
in
shr
ret
mov
mull
dec
mov
sbb
roll
ljmp
int3
cmp
cmp
inc
aas
jno
push
push
and
pop
fisttpl
sbb
movsb
mov
minps
outsl
insl
push
sbb
xor
loop
inc
cltd
xchg
mov
adc
mov
inc
push
mov
js
mov
xchg
inc
lods
xchg
adc
jnp
pop
xchg
bound
mov
pop
or
push
sbb
and
cmp
xlat
sub
sarb
or
int
int
and
je
in
push
adc
rcll
lea
sub
movb
cmp
xchg
rorl
int3
xchg
aas
sub
cmpl
lcall
xchg
aad
adc
std
xlat
scas
push
sbb
jb
inc
sbb
dec
repnz
adc
xchg
push
sbb
mov
pop
test
mov
xchg
sub
out
dec
in
pop
fidivs
mov
cmp
lods
add
cmp
or
js
std
outsl
inc
sbb
mov
lret
inc
xor
lea
les
and
jne
test
aam
loop
jbe
sti
dec
jb
and
dec
stos
test
int
push
fs
xchg
aam
sahf
sar
rcrl
loopne
dec
mov
test
outsw
fnstenv
lods
mov
jnp
popf
inc
imulb
repz
push
xchg
mov
sub
inc
push
in
in
mov
imul
inc
pop
popa
lods
jl
xchg
idivl
divl
data16
out
sti
mov
les
aaa
movsl
cmp
cli
ds
rcrb
ret
scas
mov
cmpsl
faddl
test
cltd
aaa
jb
loop
outsl
mov
ljmp
add
pop
adc
cli
shr
data16
or
or
jge
jae
out
cli
pop
ret
cli
mov
mov
mov
lods
or
mov
lret
dec
cmp
leave
inc
sti
pop
scas
movb
ficomps
jp
push
sti
in
mov
xchg
arpl
pop
jno
jle
iret
ljmp
int3
cmp
stc
push
mov
inc
jg
sbb
jecxz
fs
mov
or
mov
xchg
push
pop
mov
push
xchg
clc
cmp
jge
outsb
mov
mov
in
xchg
sub
fistpl
push
sbb
jno
mov
mov
sub
icebp
test
sub
xchg
mov
dec
push
mov
sbb
inc
jne
sub
and
push
sbb
cmc
push
test
mov
xchg
and
leave
test
icebp
adc
add
shrl
mov
cmp
dec
pop
and
lock
pop
sbb
sbb
lcall
fucomp
push
lds
sub
jo
arpl
xchg
stos
push
xchg
popa
repnz
cmp
mov
ljmp
and
hlt
mov
push
repz
ljmp
mov
lock
pop
ret
ljmp
fisubrl
push
mov
adc
adc
pop
sti
push
insb
sub
mov
push
daa
arpl
hlt
sub
cmp
pop
fdivr
fnstenv
push
loope
mov
pusha
cmpsb
adc
sbb
pop
int3
enter
jo
mov
scas
cmp
xchg
mov
gs
mov
rcrl
sub
xchg
pop
rorb
inc
fildl
xchg
push
sub
xchg
push
pmullw
fcmovu
mov
adc
lock
push
lds
mov
sub
lods
sub
mov
or
fiadds
jns
sbb
xor
repnz
pop
xor
jbe
pushf
jp
xor
subb
or
stc
mov
aaa
push
add
out
dec
xor
cpuid
pop
push
or
sub
cmpsb
ja
fneni(8087
jg
and
insl
jbe
push
in
mov
fbstp
xchg
cmc
in
mov
push
scas
fidivs
add
pop
adc
mov
add
add
adc
fucomip
sub
aam
ja
bound
xchg
lea
cmp
sub
into
in
inc
push
loopne
jge
xchg
inc
xchg
inc
out
mov
cmp
pop
movsl
lahf
addr16
arpl
mov
xor
push
push
sub
lods
sahf
pop
pop
scas
rcll
push
lods
push
fildl
jle
mov
sbb
mov
dec
in
mov
aas
inc
fistpll
cmp
fldcw
cli
int3
inc
loopne,pn
mov
daa
push
push
sahf
repz
out
test
and
cmp
icebp
mov
sbb
shrb
add
mov
leave
mov
xor
pop
pop
mov
in
shlb
sbb
lods
daa
in
lea
repnz
hlt
jae
sti
andb
femms
push
incb
cmpsl
sub
mov
popa
push
insl
in
push
xchg
movsb
imul
test
mov
mov
pop
add
insl
push
sub
out
sbb
fst
jecxz
sbb
mov
sub
mov
in
mov
aaa
or
lahf
lret
test
clc
addb
icebp
xor
pop
ss
popf
adcb
xchg
and
nop
mov
aam
cmp
js
fwait
add
mov
lds
rolb
jp
int3
or
or
mov
jae
shll
ja
jno
sahf
sub
aad
adc
lods
test
lods
dec
adc
push
shlb
jmp
mov
in
fwait
dec
push
or
mov
outsl
decb
out
sub
scas
inc
xchg
jp
call
sub
ss
jp
sub
fsubrl
loopne
pop
sub
adc
jl
push
shll
or
std
mov
cltd
mov
lock
stos
in
icebp
cmp
les
test
repz
adc
das
loope
std
push
rcll
test
dec
push
popf
push
xchg
sub
fldcw
in
inc
cs
and
es
test
lods
insb
jl
add
subb
sahf
neg
in
cwtl
push
xor
loop
add
add
push
sub
js
sahf
lret
mov
jnp
incl
sarl
xchg
inc
fstpl
fimull
mov
testl
and
fcmovb
or
cli
xchg
in
scas
fdivrs
sub
mov
adc
jne
pop
shll
aaa
add
ja
mov
sbb
pop
pcmpgtw
addr16
adc
fildll
and
sub
adc
sbb
ljmp
stos
push
lret
sbb
lods
pop
andl
icebp
mov
jne
jmp
in
xor
in
xor
ss
icebp
push
mov
mov
outsl
js
cs
dec
ja
into
ret
rcrl
stos
pop
sub
insl
arpl
jns
xchg
imul
out
subl
xor
sbb
xchg
pop
out
push
fsubl
fsubs
push
add
test
dec
int3
fwait
negb
lcall
lock
xchg
rcll
push
mov
lock
imul
add
sbb
sbb
loope
popf
test
mov
in
mov
insb
xchg
jle
lea
push
mov
dec
hlt
outsb
and
sbb
daa
sbb
adc
cmp
loope
lds
fdiv
jb
push
sub
lods
mov
adc
popf
jo
jp
mov
mov
mov
stos
sbb
jo
and
movl
filds
xor
and
in
outsb
sub
call
int
nop
cmc
imul
testl
or
and
mov
mov
fdivl
scas
ret
fwait
xchg
out
xor
pop
dec
mov
dec
mov
fprem1
lods
bound
sahf
sub
xchg
mov
xchg
stc
fwait
roll
add
push
leave
or
cmp
jnp
or
add
jb
and
ljmp
fidivs
out
fstl
test
xchg
xchg
daa
jo
into
xchg
or
push
pop
repz
lds
push
stos
xchg
xor
sbb
gs
inc
mov
mov
lcall
jp
dec
test
jge
stc
cwtl
loope
cli
cmc
cmp
add
fsubs
mov
lahf
cmc
sbb
pushf
cmp
xchg
cmp
inc
jae
mov
jb
jne
iret
add
iret
pop
add
push
cwtl
push
lock
ret
mov
push
pop
std
fnstsw
shrb
pop
daa
ljmp
ss
xchg
jbe
and
and
push
sbbb
rcrb
outsb
jecxz
popa
scas
ret
jmp
stos
nop
int3
add
mov
in
dec
pop
cmp
roll
jmp
xor
inc
rorl
xor
fisubrl
inc
je
jge
fldenv
lods
jno
sub
xchg
cmp
cs
fcoms
je
mov
rclb
mov
mov
pop
mov
into
int3
push
xchg
rorl
addl
cmp
out
and
movsl
sbb
fs
sahf
fists
rcrl
push
clc
lcall
sbb
cmpsl
into
loopne
xor
imul
pop
pop
shlb
repz
xor
stos
jno
call
push
lods
inc
mov
add
int
cmp
in
push
mov
adc
loope
cmpsl
mov
das
push
out
std
rolb
and
pop
clc
insl
mov
lret
fisttps
or
es
icebp
fs
cli
es
xchg
ja
pushf
sbb
aas
dec
cld
movsb
mov
loop
lds
jmp
sub
lret
sti
sahf
cmp
jne
imul
movsb
mov
lcall
mov
popf
js
cmp
cmc
movsb
mov
mov
test
inc
adc
shrl
xchg
push
pop
jne
jbe
push
or
in
pop
push
test
ds
or
mov
loop
mov
and
xchg
psrlq
ret
fwait
sti
ljmp
pop
mov
gs
mov
in
and
xchg
in
xchg
iret
dec
jne
mov
sub
push
pop
lret
popf
fst
popf
dec
xchg
mov
stos
test
xchg
adcl
xchg
xor
fldenv
inc
call
mov
mov
inc
sub
cwtl
cmp
push
cmp
or
data16
fisubrs
repz
shl
cli
orl
mull
fsts
roll
ds
shrl
adc
insl
lds
ja
mov
mov
movsl
push
aam
lds
es
adcl
arpl
pop
mov
je
roll
dec
popa
icebp
add
jmp
fdivrs
insb
lcall
pop
mov
test
clc
push
mulb
das
push
mov
cmp
mov
inc
loop
fcmovnbe
push
aad
xchg
mov
outsl
jle
out
in
jmp
ret
ss
push
mov
mov
fadd
outsb
mov
mov
adcb
or
data16
pop
push
fstpt
sub
pop
pop
xchg
push
test
xlat
cmc
insl
test
adc
psrlq
pop
sub
pop
leave
xchg
mov
jne
cmp
sub
sub
xchg
in
xchg
inc
lods
pop
push
xchg
mov
imul
pop
add
insb
jb
mov
adc
lock
mov
jl
pop
xchg
daa
cs
fbstp
jp
push
dec
jecxz
lret
xchg
mov
and
sbb
in
dec
data16
dec
test
mov
dec
mov
add
arpl
lods
scas
mov
adc
ja
or
fwait
jbe
xchg
and
jg
mov
aaa
enter
lods
mov
addr16
addb
mov
int3
push
mov
cmp
je
jp
pop
adc
mov
andb
mov
mov
jle
lret
test
loop
inc
mov
imul
or
adc
inc
and
lret
std
cmpb
roll
mov
sbb
ljmp
add
inc
popf
mov
push
pop
cmc
push
outsl
add
xchg
mov
out
mov
cmp
enter
test
pop
xor
mov
insl
xor
push
sub
movsb
push
push
lcall
aad
dec
lahf
sub
xchg
insl
cmp
insb
xchg
or
stc
mov
fsubrs
xor
gs
xchg
enter
repnz
ds
xor
aam
fs
lea
cmp
out
pop
add
test
jmp
aad
xor
mov
xor
imul
lret
ss
arpl
push
cltd
sub
jge
cmp
aad
jp
pop
insl
xor
add
fs
ret
sbb
sbb
xor
pop
paddusw
jecxz
loope
imul
test
push
rcrl
aaa
dec
movsb
pop
mov
and
arpl
add
pop
mov
push
mov
hlt
fstpl
dec
jmp
add
mov
sbb
dec
and
xor
cli
add
and
sub
add
xor
jne
adc
andb
sbb
pop
xchg
adc
lret
stc
and
cmpsl
push
xor
jle
out
jb
sub
int3
ljmp
lahf
daa
mov
nop
mov
in
out
adc
xor
dec
lahf
loope
adc
dec
js
icebp
sbb
and
jle
icebp
fiaddl
push
lret
push
cmp
movsb
push
add
sbb
lock
std
xor
jns
mov
shlb
icebp
notl
das
xchg
outsb
fstpt
insl
sbb
sub
xor
push
jnp
dec
mov
jb
je
add
push
cmpsl
push
test
push
jl
adc
test
xor
stos
pusha
xorl
shrb
scas
in
add
lds
mov
mov
cltd
sbb
fxch
mov
test
loope
xor
aam
sub
int
flds
scas
sbb
inc
dec
mov
out
shl
adc
cli
dec
mov
add
mov
mov
scas
adc
mov
test
pop
mov
cmpsl
xor
add
clc
mov
xor
leave
lcall
mov
lret
lcall
sub
and
into
iret
in
in
lock
and
pop
inc
sahf
sti
les
in
pop
sub
stos
xor
or
out
fs
pop
xchg
cmc
xor
je
aas
adc
jle
mov
jnp
xchg
jo
loope
pop
xchg
ss
ljmp
in
inc
repnz
cmpsl
loopne
int3
dec
sahf
jl
adc
or
arpl
ja
stos
dec
cltd
and
inc
jl
add
mov
jo
jns
sahf
dec
jle
pop
mov
icebp
pop
xchg
outsl
push
mov
cs
sub
enter
xor
das
push
sub
fs
xor
cli
cmpsl
popa
push
pushl
xlat
inc
je
call
mov
mov
pop
sbb
mov
and
fldenv
lret
mov
sub
loopne
cmpb
jne
cmpsl
adc
lods
hlt
dec
jmp
mov
ljmp
jo
jno
popa
mov
jp
ss
mov
mov
lds
xor
push
aad
cli
jl
dec
xchg
adc
in
outsl
arpl
jmp
es
out
cmp
mov
in
xor
daa
mov
popf
push
sbb
loopne
stos
repnz
xchg
pop
dec
mov
int
push
cli
xchg
orb
mov
fcomi
insb
mov
in
mov
push
and
cmp
and
testb
das
mov
mov
mov
dec
lret
mov
pop
xchg
add
lds
ds
jg
xchg
shll
push
pop
imul
mov
jno
dec
push
test
mov
push
pop
std
sub
arpl
and
cmp
or
mov
fcmovbe
lahf
add
mov
aad
mov
cwtl
mov
icebp
jl
leave
imul
gs
fcmove
adc
add
push
sub
jns
jb
dec
and
nop
mov
sbb
push
icebp
dec
cli
mov
cmp
push
popa
sub
test
sub
mov
sbb
stos
gs
sti
popf
cmpsl
pop
or
rcrb
mov
iret
aam
stc
fsub
lcall
lahf
scas
inc
in
fs
xchg
loope
push
mov
ljmp
int3
and
orb
lock
int3
insl
pop
adc
xchg
call
movsl
push
cmpb
dec
cmpsl
stos
rorl
push
ss
cmp
pop
push
test
test
mov
pop
add
cmova
dec
pop
push
lret
cmpsl
loope
and
dec
sub
popa
adc
or
popa
inc
lahf
shll
push
jne
push
jl
fdivr
inc
jb
imul
outsb
sub
mov
notl
clc
mov
movsl
in
bound
je
inc
push
call
adc
fs
inc
dec
lahf
jb
push
dec
arpl
out
bound
jns
aaa
mov
push
inc
inc
push
roll
mov
repnz
pop
aaa
xchg
pop
jecxz
gs
call
in
jns
scas
outsl
jmp
and
loop
das
cmp
stos
pop
lret
icebp
loopne
dec
outsw
jle
stc
mov
nop
lahf
loope
sbb
aam
push
or
fisttps
aad
sysret
frstor
lcall
inc
js
ljmp
mov
jns
fsub
xor
fsubrl
cmp
dec
add
fs
rcrl
pushf
mov
aas
repz
and
xchg
mov
mov
xor
aaa
jge
pop
stos
inc
call
adc
and
je
or
lcall
sub
ficompl
dec
ficompl
outsb
sbb
mov
lods
push
lahf
xor
mov
mov
dec
add
nop
cmp
fucomp
xchg
fldt
cmpsb
lds
inc
pop
shlb
popa
loopne
inc
xchg
xchg
sub
and
push
xchg
jns
imul
jae
mov
int3
xor
lcall
stos
push
cmp
in
xchg
xchg
mov
push
push
cmp
xor
push
or
cmpsl
push
loop
loop
xor
push
lcall
inc
mov
shlb
dec
xchg
pusha
data16
adc
movsb
in
pop
mov
fadds
fs
xchg
push
aas
lock
inc
lods
add
mov
repz
sbb
mov
iret
xchg
push
lock
xchg
push
int
mov
lret
shl
popa
xchg
inc
jp
push
jns
nop
pop
mov
fwait
mov
imul
add
adc
dec
and
sub
inc
sbb
and
shll
push
xorl
xchg
xor
pop
and
xchg
cli
call
push
popf
ds
dec
es
lea
mov
sub
divb
leave
pop
and
mov
xorl
pop
dec
lea
cmpsb
push
icebp
lret
pushw
mov
insl
pop
in
xor
dec
xlat
and
xchg
call
mov
cwtl
sti
jge
jle
and
push
push
pop
cmp
xchg
jae
cmc
es
call
mov
out
pop
imul
pop
xchg
out
loop
mov
into
cmp
adc
test
add
fiaddl
scas
jmp
xchg
sbbb
fcoml
dec
jmp
sub
fstps
cmp
movsl
sti
cmpsb
test
es
and
add
pop
pop
out
fcoml
mov
sbb
and
add
ss
jne
movsl
sbb
sbb
in
int3
gs
mov
sub
arpl
lahf
jl
jl
rclb
pop
std
or
mov
out
push
scas
nop
dec
sti
int3
mov
xor
add
fdivl
sbb
push
dec
rolb
call
inc
dec
and
push
pop
xor
jo
add
add
jnp
roll
cmp
fisttpl
jns
scas
dec
and
popa
xchg
dec
cmp
xor
mov
mov
sub
xor
ja
sbbb
pop
sub
rcr
test
sub
fidivl
mov
cmpl
inc
inc
dec
hlt
xor
pop
cmpsb
dec
push
jns
pushf
addr16
cwtl
adc
pop
lahf
jle
fiaddl
mov
fisubs
ja
neg
sbbl
cwtl
cmp
nop
in
mov
lock
jl
scas
scas
enter
inc
jl
orl
nop
push
loop
sub
das
sbb
outsb
xchg
cmpsl
aaa
jb
mov
mov
dec
xor
xchg
faddl
xor
lds
lret
jo
inc
ss
loope
jl
xchg
popf
mov
shll
arpl
sbb
movsl
jne
fsubrs
inc
jmp
ret
hlt
cwtl
jae
push
je
add
int
mov
or
xchg
in
iret
and
xlat
or
sub
or
lods
jg
cmp
mov
sub
push
pushf
rcr
popf
stos
test
mov
push
mov
jge
jge
movsl
mov
test
xchg
shll
lret
mov
mov
mov
adc
sbb
xor
xchg
push
lret
dec
adc
jmp
sbbb
fstl
cli
insb
int3
std
push
decb
dec
mov
pop
pop
call
mov
mov
inc
add
mov
dec
jb
dec
jb
dec
inc
pop
dec
sub
daa
popf
or
xchg
inc
push
stc
jg
sbb
sbb
cmp
mov
adc
cmp
clc
std
daa
xchg
xchg
add
nop
into
in
test
inc
add
sub
adc
jae
pop
sbb
mov
or
cmp
stos
xchg
into
mov
inc
es
lods
xor
mov
scas
inc
loop
repnz
ret
lods
xchg
out
rcr
sub
xchg
js
cltd
cwtl
sub
push
das
xor
imulb
imul
movhlps
mov
xlat
xchg
or
and
add
testl
jmp
inc
ljmp
jae
div
or
add
fldt
dec
sbb
test
pop
jl
xchg
sub
sub
xchg
ret
xor
mov
mov
adcb
mov
rolb
daa
out
jp
jno
test
ror
out
adc
xchg
add
inc
test
movsb
mov
sub
dec
addr16
mov
cli
adc
das
xor
sarb
jae
ja
push
iret
out
imul
pop
mov
in
mov
add
mov
push
mov
in
pop
dec
sub
fists
aam
push
lock
pop
pop
add
das
and
adcb
inc
pshufw
push
push
fdivrs
jae
fs
test
push
cwtl
mov
and
imul
lahf
xchg
imull
hlt
cmp
jae
inc
out
or
dec
xchg
ret
push
mov
rorb
sub
and
push
push
mov
sub
xor
adc
insl
adc
fsubl
xchg
or
sbb
fnsave
jmp
shll
dec
fs
push
outsl
outsl
dec
in
push
xor
aad
jns
enter
sub
pop
dec
mov
jg
out
pop
cltd
ffreep
clc
xchg
leave
xor
cltd
je
xor
lods
jne
pushf
pop
hlt
sbb
inc
fbld
leave
outsb
jp
sbbb
stc
jne
jne
push
sub
pop
popf
cmp
adc
mov
scas
mov
push
adc
adcb
xchg
jae
cmpsl
push
out
hlt
ja
jle
cmpsb
or
cmp
mov
push
mov
in
adc
inc
jne
mov
mov
jmp
lcall
pushf
dec
or
push
fnstcw
add
orl
dec
aam
pop
jns
enter
stc
cmovbe
lds
jb
rolb
or
ljmp
repz
add
sub
jo
sti
cmp
or
xchg
push
or
stc
jo
mov
repz
std
clc
pushf
mov
repnz
cmp
out
dec
cltd
pop
movsl
jl
sbb
sbb
jae
inc
sbb
add
or
lcall
cltd
mov
pop
push
in
push
movsl
jae
sbb
xor
fimuls
sti
and
pop
sub
test
mov
inc
jne
sbb
cltd
cmp
xlat
ret
inc
inc
aas
push
jbe
push
repnz
das
or
int
lds
pop
mov
mov
pop
mul
aas
ds
and
movsl
or
insl
out
dec
out
popf
icebp
jmp
mov
sub
fsubrs
push
add
dec
int
insb
sub
add
ret
push
pop
mov
mov
adcl
dec
rcrl
adc
and
push
adc
adc
imul
sub
sub
push
mov
out
cmpsl
hlt
mov
sub
push
push
sbb
xchg
push
and
adcl
and
pop
fabs
pop
push
bound
int3
ljmp
and
mov
cmp
mov
add
clc
call
insl
mov
push
cld
repnz
and
mov
adcl
mov
xor
mov
mov
inc
hlt
mov
and
xor
or
pop
data16
rcrl
dec
adcb
adc
jb
andl
cli
and
and
xor
testl
mov
aaa
sti
imul
xchg
daa
adc
roll
sbb
cmc
out
rcll
cs
adc
fwait
inc
mov
add
leave
int3
xor
xchg
inc
inc
stos
adc
roll
ret
das
mull
mov
ret
popf
aad
cmc
add
pop
mov
scas
std
fidivl
inc
mov
mov
cmp
imul
or
iret
mov
cmp
mov
test
pop
pop
mov
fwait
testb
add
mov
push
nop
loop
mov
aaa
int
push
sub
jb
cmp
sbb
dec
push
adc
mov
mov
out
andb
lcall
sbb
mov
sub
in
jecxz
sub
push
loopne
decl
adc
lret
fmuls
dec
hlt
inc
lcall
sub
aaa
xchg
push
mov
sbb
mov
mov
fucomp
add
adcb
jmp
mov
ja
jno
mov
mov
mov
repz
test
jle
sti
inc
and
pop
xor
inc
push
ljmp
sub
add
mov
adc
dec
out
daa
mov
movsb
and
mov
mov
jp
inc
hlt
mov
sub
xor
fcoms
fs
hlt
pop
jb
add
icebp
sbb
sbb
cmp
mov
sub
mov
call
jne
int3
mov
add
mov
push
dec
fwait
and
or
mov
cmpsb
fcom
push
out
xor
testb
xor
shl
jge
lods
inc
ljmp
sub
sbb
dec
sub
push
ja
mov
fcomi
je
and
or
inc
iret
push
lret
outsb
scas
mov
mov
xor
movsl
jecxz
pop
mov
ret
pop
mov
fsts
mov
loop
pop
jg
scas
xor
aad
dec
fwait
out
push
or
adc
jo
jg
push
int
rcll
jbe
xchg
pop
adc
or
push
fcompl
sub
int
jle
stc
stos
push
sbb
push
nop
dec
pop
cmpsb
lahf
mov
ret
xchg
pop
jmp
jg
xchg
test
cmp
stos
sub
imul
call
das
out
rolb
test
scas
in
cs
mov
add
fbstp
ret
outsl
dec
sub
fs
repz
pop
dec
add
andb
push
jo
mov
je
fbstp
dec
hlt
fiaddl
bnd
pop
int3
mov
and
pop
into
push
out
add
in
jnp
inc
adc
scas
lcall
mov
and
andb
add
lea
clc
add
add
jmp
adc
cmp
and
cmp
iret
scas
prefetch
frstpm(287
adc
insl
adc
xchg
mov
dec
and
mov
daa
mov
call
and
std
push
pop
icebp
add
mov
loopne
push
and
mov
mov
mov
jo
or
cli
fmull
xchg
adc
fidivrs
xchg
pushf
dec
jge
movsb
mov
repnz
clc
xchg
inc
or
push
lods
add
sbb
jmp
push
adc
dec
sahf
push
sbb
orb
insb
ficoml
or
dec
push
ljmp
lret
and
popf
dec
dec
xchg
xchg
icebp
add
dec
sub
icebp
rep
scas
jl
test
jb
ds
out
mov
mov
sub
add
add
adc
repz
dec
ss
lret
xlat
orb
rcr
cld
cmpsb
call
xchg
dec
aaa
push
loopne
push
inc
push
nop
mov
imul
ss
scas
xchg
and
xor
lret
cmpsb
dec
mov
mov
mov
mov
mov
sbb
or
loopne
scas
jno
imul
pop
push
dec
inc
cmpsb
cmc
jecxz
int
pop
jne
lret
test
mov
jae
inc
adc
call
sub
push
sub
push
js
xchg
fidivrl
jmp
push
sti
fcoml
xchg
test
xor
lock
test
or
jae
and
push
cmc
imul
push
aas
arpl
inc
lcall
mov
insl
push
pushl
push
mov
pop
test
dec
scas
mov
loop
fwait
into
ret
stos
push
mov
push
out
in
inc
mov
pop
pop
inc
test
adc
mov
xchg
ds
pop
dec
out
pushf
inc
push
lods
shrl
in
jmp
cmpsl
ficoml
inc
imul
and
insb
inc
sbb
xrelease
adc
pushl
mov
xchg
add
in
jbe
out
test
push
dec
cltd
clc
inc
add
pop
sbbl
add
dec
mov
push
xor
xor
inc
mov
xchg
mov
cmp
xlat
push
pushl
cmp
ret
mov
rcrb
inc
inc
mov
sub
sub
cmp
iret
inc
xchg
push
push
xor
mov
xchg
in
push
lret
hlt
test
push
les
addb
jne
adc
jbe
jl
xchg
popf
push
pusha
push
pop
inc
loopne
aas
xlat
xchg
imul
aam
sti
iret
push
psubsb
mov
cs
lea
aam
jno
lods
popa
nop
sub
push
mov
pop
cmp
add
das
push
pop
dec
fisttpll
dec
insl
test
mov
dec
sub
testb
inc
push
shlb
jae
adc
xor
out
push
sub
xchg
mov
ror
pop
inc
imul
push
mov
call
xchg
xchg
mov
es
and
sub
inc
or
jno
notb
aad
mov
inc
js
xlat
cmpsl
pop
pop
and
cmpsl
aam
pop
orb
aas
xchg
testl
xchg
sbb
into
out
jle
mov
cmpsb
push
pop
mov
int
int
outsb
test
enter
addl
inc
outsb
pop
in
or
imul
and
scas
aad
sub
cmc
nop
sub
push
xor
xchg
in
and
rorb
fdivs
lods
sbb
sub
pushf
sub
pop
ja
shll
and
dec
inc
xchg
jmp
data16
scas
sub
xor
loop
sub
or
lahf
inc
add
cmp
sub
pop
inc
pushf
or
ret
jg
dec
mov
mov
in
mov
jg
adc
dec
jp
sub
pop
xor
jle
aas
adc
mov
xchg
xorb
dec
mov
and
in
outsb
data16
hlt
mov
fwait
clc
mov
xchg
jmp
add
sbb
insb
jnp
cmpsb
in
sub
loop
fisttpll
aaa
pop
cmpsb
insl
mov
std
inc
cmpsl
jno
dec
imul
or
mov
push
lahf
sub
call
adc
and
or
sub
popf
adc
adc
mov
lods
pop
push
mov
add
out
in
outsl
mov
int3
out
lret
xorb
out
add
test
cmp
sub
in
or
push
xchg
pop
subb
jmp
test
movsl
outsb
aaa
adc
ffree
in
out
xor
test
test
and
ret
xchg
dec
jge
push
cmp
aaa
aas
mov
lcall
faddp
leave
mov
imul
cs
push
inc
adc
xor
arpl
ss
jno
jno
adc
jno
arpl
jge
xchg
mov
sub
mov
add
mov
fwait
push
into
jbe
lahf
cmp
int
sbbb
mov
pushf
jecxz
adc
sub
and
cmc
adc
nop
pop
lods
dec
orl
dec
les
cmp
shll
cltd
or
sbb
fmulp
pop
in
xchg
popf
clc
push
imul
arpl
ja
xchg
call
mov
subb
fwait
enter
pop
xchg
cli
test
pop
repnz
jge
xchg
mov
psubw
push
fidivl
jb
insl
sbb
xor
in
loop
loopne
ds
repnz
int3
push
xchg
addb
lret
aam
ficoml
ljmp
mov
cs
mov
mov
ss
inc
mov
call
fimuls
test
loopne
fstpl
xor
inc
jge
std
mov
outsb
push
adc
xchg
scas
mov
movb
mov
sub
jg
xor
sub
stos
dec
repz
dec
hlt
or
stos
adc
add
inc
xor
adc
sbb
imul
xor
outsl
fbld
pop
outsb
lods
mov
jbe
jge
popf
dec
xchg
mov
sahf
sahf
fnstsw
xor
nop
filds
mov
xor
pop
pushf
lret
iret
xchg
xor
push
or
lods
sub
fistl
jecxz
fimull
or
cltd
pop
rcll
popf
lods
ljmp
pop
hlt
fildll
jge
jg
pusha
out
pop
out
jge
in
cmp
imul
dec
stc
imul
jle
sbb
into
xchg
xchg
insl
push
sbb
aam
call
cmp
bound
mov
lahf
loopne
popf
inc
pop
es
add
pop
pop
mov
iret
xchg
cmp
push
mov
inc
xchg
xor
or
and
xor
dec
stos
mov
fidivs
xchg
cmpsl
sbb
sub
mov
jb
in
lahf
shll
xchg
mov
xlat
pop
inc
push
xchg
dec
xor
insb
or
xor
xchg
mov
ja
or
pop
insl
mov
icebp
mov
cmp
inc
or
fstpl
inc
and
lahf
fsubl
inc
shrb
push
dec
stc
shl
arpl
mov
xchg
popf
lea
or
fs
stos
addr16
push
jge
lds
fnstenv
cmpsb
sub
push
jae
and
jmp
inc
cmp
leave
and
incb
ss
test
push
and
cwtl
pop
or
add
lret
idivl
cmpb
push
movsb
and
jle
cwtl
enter
test
sbb
cmp
and
das
lahf
rolb
int3
push
fptan
in
inc
mov
das
cmp
jbe
pop
test
ds
int3
dec
rcrb
mov
into
adc
aad
push
push
add
mov
pop
add
jge
mov
loop
cmp
out
dec
jno
push
cmp
xchg
sub
or
jbe
sti
jg
es
xor
shrb
mov
push
and
push
sbb
test
push
adc
lock
cmpsl
insb
iret
enter
fisttpll
fwait
mov
or
xor
push
and
xchg
or
mov
and
jo
push
cmp
adc
sub
sbbl
mov
cmp
pop
adcl
lods
shl
lods
mov
push
mov
aam
and
daa
cmpsb
mov
ret
push
jnp
xor
fiadds
dec
xor
xchg
fwait
mov
ficoms
adcl
mov
sub
sarb
adc
cmpsb
or
xchg
dec
push
push
movaps
xor
adc
xor
pop
sbb
pop
gs
mov
mov
outsl
mov
int
out
xchg
or
mov
cmc
ja
fstpt
loop
cmpsl
int3
xor
outsb
in
adcl
out
and
or
fdecstp
dec
mov
push
enter
mov
arpl
inc
xor
test
add
adcl
lea
cmpsb
inc
sub
cmp
and
es
mov
jle
pop
mov
cld
inc
inc
inc
xor
xchg
add
repnz
nop
fsubl
mov
and
inc
aaa
cmp
mov
mov
idiv
mov
add
dec
cltd
ljmp
push
push
xor
hlt
lea
mov
add
xor
mov
ret
sbb
outsb
xchg
pusha
push
shll
inc
inc
cli
jae
push
nop
add
es
ret
push
out
mov
pop
fisubl
push
sbb
mov
dec
rcrb
dec
aas
jcxz
jno
mov
jl,pn
add
clc
mov
pop
cmp
mov
mov
mov
cmpsl
shlb
cmp
pop
das
or
push
add
or
outsl
xchg
xlat
test
inc
movsl
mov
out
addr16
xchg
es
and
sbb
xor
lea
test
push
mov
jns
loop
push
xor
and
in
popa
dec
sbb
sti
push
std
out
and
add
sbb
test
inc
pop
adc
cmp
push
sub
out
pop
xchg
cmpsb
fwait
subl
add
ret
dec
aas
nop
iret
loopne
cmpsl
int3
mov
cli
out
andl
or
hlt
loop
je
fcompl
out
sbb
daa
inc
ds
in
imul
mov
inc
out
mov
adc
jmp
fisubl
imul
and
sbb
in
fbstp
out
push
dec
outsb
icebp
stos
insb
jnp
lds
fwait
cltd
push
sub
test
shll
repz
mov
xchg
imul
jns
and
lods
pop
call
push
xor
aad
gs
cli
mov
pop
mov
mov
mov
stos
in
inc
sbb
inc
xlat
mov
lock
insl
or
push
and
test
pop
in
cmpsl
fstpl
ljmp
mov
mov
adcl
repnz
adc
cmp
cmc
mov
rclb
pusha
mov
adc
cmp
mov
xchg
push
adc
jns
pop
mov
lods
inc
jne
xchg
addr16
and
das
enter
mov
xor
sub
mov
mov
inc
mov
notb
incb
jle
xchg
cs
mov
fcompl
adcb
xchg
and
lret
sub
xor
mov
lock
pop
and
stos
mov
mov
cmp
mov
add
mov
pop
push
xlat
imul
add
xchg
movsl
push
aas
mov
jecxz
mov
mov
divl
aas
push
lea
sub
add
fnsave
and
add
fadd
scas
pushf
fidivrl
popf
addr16
fs
in
cld
cmp
sub
mov
sahf
aaa
fldl
insb
aad
mov
inc
aam
setle
jp
rsqrtps
cmp
cli
push
mov
cltd
adc
cltd
mov
mov
rsqrtps
inc
ja
aad
pop
movsl
pop
loopne
ret
mov
scas
mov
lods
pushf
cli
icebp
fcomps
xlat
int3
rorb
pushf
int
or
push
loop
dec
inc
addr16
inc
pop
aam
enter
push
sub
loopne
les
cltd
daa
enter
push
mov
and
dec
icebp
iret
bound
test
lret
xchg
or
jmp
nop
or
test
daa
cld
loope
pop
sbb
inc
adcl
aad
pop
movl
and
or
or
sub
insb
test
add
dec
mov
adc
xor
or
insb
fisubl
sbb
adc
iret
add
clc
sub
pop
push
or
lahf
jle
and
dec
cmp
mov
fadds
jmp
in
mov
adc
add
pop
cmp
lds
rolb
push
enter
sub
fsubr
cmp
push
push
lock
dec
movsl
xlat
mov
rclb
fistpll
cmpsl
rcll
xchg
inc
inc
add
and
jbe
cwtl
xor
ret
mov
vunpckhpd
dec
adcb
insl
mov
jle
jg
mov
pop
xchg
testl
sti
sub
jae
mov
xor
in
daa
je
lds
aas
or
cmp
in
ss
xchg
add
mov
or
call
mov
mov
jne
into
lea
rclb
cmp
clc
or
ja
xchg
lret
adc
xorl
hlt
pop
mov
dec
adc
and
sbb
movsb
aaa
xchg
in
or
mov
pop
xchg
add
testb
mov
pop
outsb
loopne
shll
adc
fwait
rcrb
js
mul
lret
js
enter
dec
and
mov
inc
jge
ja
cltd
adc
xor
hlt
adc
sub
shll
insb
dec
push
cmp
push
stos
stos
mov
popf
mov
fsubrp
sub
inc
mov
sbb
jnp
stos
cmp
in
lods
or
xchg
pcmpgtw
inc
movsl
rcrl
jo
inc
leave
adc
jbe
mov
dec
movsl
xchg
adc
out
rcrb
sbb
outsb
cwtl
mov
in
test
mov
shll
inc
mov
into
fimull
dec
push
ss
out
pop
daa
xchg
jecxz
cmp
adcl
popf
adc
loope
leave
xchg
aaa
dec
mov
inc
xor
cli
dec
ds
xchg
fstl
out
loop
sarl
enter
scas
lods
adc
clc
int3
notb
std
adcb
pop
xchg
loopne
xorl
enter
cwtl
jp
cli
out
mov
dec
int3
mov
insl
or
sub
adc
cmp
or
cwtl
int3
sbbl
mov
aaa
loop
mov
nop
push
test
hlt
scas
les
test
subl
push
aas
ja
and
insb
orb
in
mov
pop
incl
mov
int3
stos
call
add
mov
mov
inc
in
lret
or
push
cmpsl
and
or
cmp
int
jmp
ret
stc
push
mov
hlt
push
or
and
cs
icebp
dec
mov
sub
xchg
push
out
push
push
sbb
mov
pusha
test
dec
shrl
xchg
std
dec
into
add
push
jge
out
mov
das
stos
les
push
outsb
and
push
insl
or
in
push
push
lods
and
mov
push
shl
dec
mov
or
pop
mov
mov
jle
dec
xor
repz
pop
adc
sub
push
sarb
lahf
pusha
outsb
int
mov
jle
mulb
mov
jae
cmc
or
jae
sub
fs
xchg
or
dec
das
mov
addr16
ljmp
push
adc
shrb
push
adc
icebp
rorl
xchg
ficompl
inc
pop
lcall
daa
inc
sahf
jb
dec
push
ds
mov
mov
enter
sarl
cltd
cmp
or
cmp
mov
dec
scas
sub
test
jmp
cvttps2pi
arpl
mov
ret
ds
pop
mov
push
adc
mov
lock
fwait
push
jo
dec
fwait
xchg
ds
in
rcll
bound
adc
pop
and
jnp
sbb
sbb
shrl
outsb
add
xor
pop
cwtl
and
vcvtsd2ss
push
dec
fstpt
fxch
lds
mov
sbb
inc
dec
imul
push
xor
add
ret
mov
dec
cmpsl
xchg
test
movsb
sbb
mov
popa
or
cltd
add
jge
mov
mov
rolb
ret
push
mov
adc
sbb
push
pop
cltd
cmp
push
dec
cmp
and
je
inc
sbb
dec
lret
or
ret
add
iret
test
mov
insl
rorl
inc
int3
jmp
out
int3
mov
lods
mov
nop
dec
comiss
push
leave
fcomps
data16
out
inc
mov
mov
rclb
mov
pop
mov
outsb
and
les
xchg
cmc
or
dec
lods
jp
fcoml
fnsave
cmp
mov
mov
jl
cmc
and
xchg
add
jl
insb
in
adc
pop
insb
in
ss
lahf
jl
mov
insl
inc
cltd
roll
cltd
mov
xchg
int3
lods
and
cmc
mov
cmp
sbb
sub
sbb
inc
mov
push
bswap
jno
faddp
inc
xor
or
test
in
push
push
dec
pop
push
dec
xor
imul
pushf
das
sub
sub
orb
loope
ret
xor
pop
sbb
cmp
mov
jge
adc
divl
adc
stos
add
repz
ja
xor
call
loopne
ja
inc
add
or
sti
dec
ds
sub
or
jo
dec
or
cli
cmp
aad
into
push
sub
push
push
inc
xchg
or
adc
jbe
jne
cmc
leave
fcompl
and
imul
adc
inc
pop
cwtl
push
lea
dec
stos
pop
xorl
aas
xor
xchg
mov
subb
push
lods
das
scas
ljmp
push
stos
xor
cmpsb
xchg
sub
aaa
inc
xor
push
xor
sub
lock
iret
jns
icebp
loope
add
xchg
repnz
push
add
mov
inc
scas
notl
les
imul
add
lcall
out
xchg
adc
dec
jae
arpl
inc
sarl
or
fwait
pop
and
sti
mov
add
pop
xor
test
pop
fidivl
sbb
ret
jne
adc
ds
mov
in
fistpll
or
movsl
dec
dec
lahf
aas
call
cwtl
repz
insl
jae
loopne
push
jo
orl
xor
ret
cmp
or
fwait
or
hlt
ds
xchg
data16
xchg
mov
or
outsl
pop
out
es
out
xor
push
sahf
xchg
ss
fcoms
mov
mov
inc
nop
xchg
loope
test
fsubrs
xchg
xor
stos
les
pop
fdivs
insb
pushf
mov
cmc
mov
mov
lret
adc
out
repnz
pop
sbb
xchg
mov
lods
insb
inc
dec
adc
int3
mov
or
mov
jnp
out
jo
mov
lds
mov
dec
xchg
cmpsl
fmul
enter
lahf
ret
repnz
jg
mov
xor
mov
xlat
adc
inc
adcl
jg
inc
out
mov
dec
mov
andl
icebp
lret
lock
cmc
and
outsb
cli
mov
push
aas
pop
dec
add
adc
popf
sbb
xlat
mov
stos
icebp
fildll
fists
pop
mov
neg
into
sbb
call
ljmp
loope
push
xchg
loop
imul
push
loope
out
mov
ficompl
mov
push
fiadds
stos
and
cld
add
xchg
push
cs
test
das
sarb
mov
cmp
movsb
xchg
jp
push
bound
out
popf
imul
ret
jbe
ds
cmp
dec
es
xchg
mov
dec
add
daa
stc
lcall
pop
icebp
ds
les
fs
and
cmp
adc
dec
daa
xor
mov
and
adc
ljmp
scas
pushl
lock
xchg
pop
call
add
sbb
enter
and
push
fists
dec
sti
test
cmc
adc
dec
cmp
xchg
and
loope
nop
sub
jmp
and
add
pop
mov
int3
pop
loop
jge
in
out
jecxz
xchg
mov
jecxz
roll
jb
pop
icebp
lea
stos
cmp
mov
cs
movsl
shrb
jecxz
jno
dec
adc
cmpsl
movsl
or
or
inc
scas
aas
and
and
rcll
add
jns
pop
xchg
enter
add
add
jns
into
bound
stos
jmp
pushf
fmull
xchg
std
cmp
cmp
xor
mov
push
mov
rcrb
in
out
pop
repz
cmp
test
movl
insb
pop
xchg
pop
popa
dec
rorb
mov
fisubl
adc
mov
aad
mov
push
adc
add
inc
sti
lcall
aas
testl
cli
sub
sub
xor
les
jb
sti
or
bound
xlat
push
leave
xchg
fwait
daa
fwait
or
push
pop
int3
cmp
imull
sub
into
dec
or
jo
negl
rclb
mov
xchg
pop
gs
and
sbb
dec
push
adc
fcomps
incl
xor
xchg
lahf
addr16
cmp
push
call
cmc
pop
add
push
xor
addr16
testb
cmp
adc
pop
add
mov
adc
pop
mov
adc
and
pop
sub
rorl
sti
and
sbb
out
aaa
inc
pop
rorb
stc
sbb
mov
inc
popa
adc
inc
xchg
lret
sub
xchg
jecxz
repnz
pop
cmp
cmpsl
aam
idivb
dec
inc
jp
pop
hlt
adc
and
in
in
dec
xchg
mov
xor
test
mov
xor
dec
mov
cmp
ret
repnz
dec
gs
cli
and
nop
mov
jle
mov
and
out
push
cmpsl
xchg
push
flds
jae
adc
cmp
insb
js
repz
jge
jbe
push
ret
rcr
or
cltd
mov
loopne
adc
movsb
xchg
int
daa
fs
sub
mov
mov
push
popf
push
inc
sub
mov
add
orl
lock
stos
xor
mov
ja
mov
ljmp
xlat
rcr
loopne
aas
notb
push
xor
mov
pop
mov
cmp
cmp
and
rcrl
cmc
or
sub
lahf
movsb
push
push
mov
popa
push
xorb
popa
xchg
mov
inc
lret
push
sub
cmp
jl
in
aas
inc
sub
pop
mov
and
shlb
adc
pop
andb
js
push
xchg
or
jg
xchg
and
data16
add
push
test
stos
in
mov
xchg
std
js
cli
mov
std
xchg
lods
ljmp
jge
in
dec
xchg
dec
mov
into
mov
popf
push
add
xchg
in
push
sub
jge
out
sbb
stos
cmpsl
mov
mov
sub
jo
cmp
and
cmc
in
shr
inc
test
xchg
data16
fsubs
sub
xchg
sti
sbb
fnstcw
adc
rorl
pop
ficoml
out
inc
cmp
add
push
int3
add
add
xchg
jp
sub
rol
sub
insl
cwtl
lahf
push
sbb
inc
mov
xchg
scas
xor
mov
sbb
xchg
fnstenv
pop
mov
mov
stos
fbstp
jno
adc
stos
outsb
xchg
aam
loope
icebp
int
xchg
jp
into
mov
xchg
sbb
xchg
stos
cmp
mov
lock
inc
movsb
loop
dec
movsl
and
lock
scas
pop
imul
jmp
sbb
loopne
cmc
sub
fcmovne
fldl2e
mov
int3
sbb
out
out
insl
call
sub
test
iret
add
cltd
leave
or
or
stos
push
xor
pop
sub
sbb
out
sahf
dec
dec
shlb
sub
imul
inc
or
xchg
clc
iret
rorb
push
sahf
sarb
scas
or
and
jo
mov
lock
jg
imul
loopne
mov
jnp
xchg
int3
sub
rep
cmp
pop
pop
xchg
pop
arpl
pop
aas
adc
imul
pop
push
pop
inc
je
mov
mov
push
jne
xor
and
add
xchg
js
rcll
nop
imul
ljmp
out
push
jnp
arpl
fsubr
jbe
lods
mov
adc
nop
add
xor
sbb
je
loope
stc
sti
mov
loope
nop
out
xchg
loopne
and
push
xor
lea
data16
push
out
clc
push
out
fidivl
stos
and
sub
add
mov
pop
std
mov
dec
je
add
inc
dec
lods
jnp
xchg
cld
jae
dec
mov
jns
add
pop
jl
sbb
xchg
scas
scas
sub
lods
cwtl
cmpsb
mov
push
sub
sti
jae
insb
cli
enter
xchg
scas
test
xor
fmuls
mov
inc
xchg
mov
rcll
fs
xchg
add
popa
aad
inc
xor
in
fwait
mov
in
mov
repnz
sub
pop
cli
inc
or
xchg
xchg
and
int3
add
and
xor
outsl
mov
ret
icebp
push
xchg
lcall
imul
push
gs
mov
lret
loopne
sub
pop
repnz
ret
cld
repz
adc
xor
icebp
mov
inc
ret
pusha
fsubr
outsl
std
popa
call
paddw
mov
mov
mov
jno
dec
or
adc
or
dec
jmp
cmp
jbe
xorb
mov
scas
pop
xchg
scas
xor
mov
mov
push
outsb
push
outsb
cmp
pop
cmp
loopne
insb
xor
lock
ret
mov
out
cmp
push
mov
test
sbb
dec
nop
imulb
sbb
mov
lret
add
xor
inc
jge
negl
xchg
xor
clc
lret
bnd
mulb
ret
stc
int
jo
lds
add
clc
push
cmpl
sbb
enter
int
jnp
or
cmp
adc
dec
and
push
cltd
add
outsb
jecxz
out
push
aad
push
in
dec
das
insb
les
mov
dec
mov
roll
mov
cli
pushf
jno
jge
out
rclb
cmc
imul
smsw
sub
loopne
orl
pop
jle
std
enter
push
push
mov
mov
xchg
xor
jno
fisubrs
fildl
add
ret
shl
bound
and
dec
mov
repz
insl
loope
adc
insl
mov
addr16
xorb
loope,pn
pop
mov
xchg
gs
stos
test
roll
xchg
enter
sbb
sub
push
jnp
nop
xor
xor
adc
xchg
fstl
mov
cmpsb
aas
in
icebp
adc
mov
jmp
xchg
pop
lods
fdivs
lods
jp
and
xchg
xor
cmp
xchg
lahf
les
cmpsl
mov
fwait
sbb
aas
lret
xor
or
pop
fdivrp
test
mov
inc
call
addr16
mov
sub
fnstenv
test
in
cwtl
rcrb
popa
pop
out
push
negl
xor
fisubrl
mov
xchg
ficomps
hlt
js
cli
push
xchg
xor
aad
enter
inc
xor
pop
dec
xor
push
push
data16
clc
andb
lahf
xchg
or
jge
stc
pop
add
into
lret
sub
insb
cmp
enter
xor
adc
std
dec
popa
mov
dec
sbb
ss
jnp
mov
cmp
mov
xor
je
scas
mov
cmp
pop
pop
inc
jle
ds
popa
ret
mov
jae
lods
je
out
fisttpll
sub
aaa
push
push
int
mov
sarl
aaa
in
notb
rep
jl
push
xor
hlt
push
fcompl
fs
jnp
pop
bound
sub
out
lock
xorl
push
cmc
out
sarb
dec
out
into
rcrb
lock
jb
lcall
out
xchg
cmp
rorl
das
sarl
iret
les
adc
xchg
leave
sahf
mov
out
xchg
mov
fsubrs
jp
fcmovnbe
aas
add
dec
pop
test
add
ljmpw
scas
jb
imul
and
movsb
stc
clc
cmpl
stos
cmp
mov
and
inc
or
jp
push
pop
adc
addr16
int3
ds
inc
jno
lcall
xor
mov
bound
je
imul
inc
sti
inc
sahf
mov
adc
mov
jle
stos
jns
jl
jno
nop
push
adc
call
mov
or
test
stc
mov
test
push
ficoml
rcl
push
cmp
hlt
lds
loope
mov
pop
js
pop
sbb
pop
xlat
jno
push
lret
pop
xchg
mov
pop
sub
or
mov
cmp
inc
or
out
in
movsl
movaps
sbb
or
int3
decb
pushl
imulb
dec
ss
add
xchg
mov
mov
outsb
clc
mov
cmc
xor
mov
sbb
push
movsl
inc
ss
push
mov
lods
jbe
push
out
mov
sbb
jmp
daa
dec
sub
icebp
sbb
sub
sbb
sbb
ficoms
dec
inc
sbb
stos
int
int3
mov
jmp
jno,pn
imul
rcll
hlt
shrb
mov
push
fs
test
arpl
mov
bound
inc
mov
or
mov
stc
xchg
pop
xlat
mov
fadds
cmp
cs
xor
shlb
orl
enter
cmp
push
xlat
jg
cmp
testb
push
filds
jmp
insb
and
enter
push
shll
adcl
mov
dec
js
push
jae
jnp
outsl
mov
fiaddl
ret
xor
xor
or
leave
fiadds
pop
or
ss
dec
mov
imul
es
or
stos
fdivs
and
and
cmpl
imul
xor
jge
add
dec
in
mull
cwtl
fcomp
and
out
jno
sti
nop
pop
out
dec
inc
mov
je
stos
dec
gs
lods
sbb
sub
mov
subl
gs
js
mov
sub
loope
fs
and
inc
outsl
les
insb
cmpsb
jg
inc
mov
call
movsl
sub
xlat
lods
adc
dec
cs
sbbl
sar
movb
arpl
pop
int
jns
xchg
fidivrl
cmp
and
add
push
ss
xchg
pop
inc
sub
dec
sahf
lret
icebp
hlt
loope
push
js
push
mov
arpl
add
mov
cmp
pop
leave
pop
add
fs
push
scas
pop
sarl
jmp
mov
xchg
jbe
sbb
and
lds
ss
in
mov
mov
rcrb
or
sbb
add
outsl
mov
or
stc
mov
pop
imul
cwtl
aas
adcb
imul
jmp
sarl
movsl
mov
call
push
sbb
cwtl
test
mov
inc
mov
imul
mov
push
rcll
mov
testl
inc
jbe
push
pop
inc
call
inc
xchg
cmp
movsl
mov
movsb
mov
adc
pop
jbe
or
fwait
test
out
fcoms
and
lret
sbb
es
loope
sub
call
rolb
ja
and
test
aad
cmc
add
test
lcall
add
clc
cmpl
inc
aad
repz
pop
rol
out
and
leave
sbb
push
rcrb
and
jns
inc
addr16
xor
mov
rcrb
cmp
stos
push
out
jns
sbb
jo
test
lds
sti
inc
pushf
sti
xor
lea
imul
mov
cmpsl
enter
or
push
test
mov
sbb
inc
shlb
inc
addl
sbb
xlat
mov
add
in
mov
jae
stos
and
push
or
pop
out
fwait
stc
add
dec
pop
mov
or
lods
push
aas
pop
in
sub
aad
rclb
mov
sbb
jmp
test
notl
cmp
add
xlat
cli
cmp
mov
xor
test
aad
gs
xlat
sbb
sbb
cmpsl
push
ret
and
fbstp
movsl
adcb
shl
cmp
xor
pop
test
loop
rcll
shl
fstpl
shlb
dec
push
ficoml
sbb
loop
out
adc
es
mov
aad
or
sahf
scas
jb
mov
jne
inc
jnp
pushf
mov
sbb
xchg
iret
orl
dec
mov
cmp
insb
mov
push
mov
iret
cs
hlt
popa
repnz
rol
push
pop
cmc
nop
lea
lcall
sub
jnp
dec
ss
loopne
mov
lods
push
les
push
xor
sbb
in
test
fs
mov
mov
mov
sub
or
or
cmp
in
push
shr
addb
pop
pop
stc
inc
xchg
in
xor
les
loopne
rcll
jg
add
and
pop
sbb
pop
pop
xor
repz
sbb
ss
js
dec
int
ljmp
cmp
jge
aad
dec
test
xchg
fwait
add
sbb
sbb
inc
cmp
pop
or
adc
sti
dec
xor
fnstsw
xchg
or
outsl
cmp
lea
mov
xorb
jne
jge
jnp
mov
sub
sbb
sub
jb
mov
mov
xor
aad
outsl
mov
sub
pop
std
fbstp
mov
pushf
pop
fsubr
push
mov
sub
add
loopne
jmp
push
fstpl
and
int
jno
hlt
mov
and
sub
rorb
add
sti
mov
and
movsl
mov
sbb
lahf
dec
aas
shll
test
mov
scas
cwtl
and
insl
rorl
push
jbe
sbb
idivl
cltd
mov
sub
cmp
movsb
dec
das
dec
jns
jae
inc
cmc
les
mov
stos
mov
out
or
addr16
xchg
cmc
mov
insb
testl
hlt
fidivrl
push
cs
popa
jmp
cmp
mov
icebp
add
test
sub
fcomip
xchg
inc
shlb
add
xor
mov
aaa
or
pop
pop
in
dec
cmpsb
adc
or
mov
fmull
cli
loope,pn
stos
gs
sub
out
mov
int
mov
cld
pop
and
mov
sbb
cmc
adc
fnsave
stos
add
cmp
faddl
add
mov
pop
mov
add
mov
pop
jo
cld
xor
lds
pop
std
xchg
mov
sbb
push
mov
mov
loop
inc
cmc
movsb
fistps
rorl
add
arpl
nop
add
dec
sbb
daa
dec
subb
fdivrl
out
in
enter
sub
jp
pushf
mov
std
mov
inc
inc
imul
ljmp
cs
orl
clc
or
jae
push
push
jp
loopne
push
xor
sti
lock
xchg
sbb
push
mov
jmp
xlat
test
iret
jne
cwtl
arpl
gs
mov
mov
lock
fidivs
cmp
dec
pop
ss
jne
sbb
adc
mov
movsb
rcrb
inc
dec
fldl
and
xor
subl
or
mov
sub
popf
and
mov
xchg
test
jge
push
popa
or
mov
inc
fwait
cmp
cmp
cmp
inc
dec
call
adc
pop
stc
subb
leave
repz
adc
into
dec
xchg
pop
shld
fwait
cwtl
xchg
mov
scas
popa
mov
pop
pushf
and
inc
xor
dec
mov
mov
push
daa
gs
push
lea
dec
enter
ret
cmpb
clc
pop
mov
in
pop
fs
imul
push
js
and
add
sbb
mov
movsb
add
pop
xor
popf
outsl
mov
mov
ret
jmp
daa
mov
pop
mov
fwait
mov
fwait
lret
jl
stc
aas
test
mov
jp
loope
push
shl
or
xchg
adcl
push
xor
in
jno
pop
popf
sub
or
je
stos
inc
sarl
sarl
xchg
cs
dec
dec
cmp
push
imul
sarl
mov
adc
dec
mov
add
sub
enter
inc
inc
adc
jg
push
mov
les
inc
pop
xchg
cld
pop
sbb
xor
jmp
xor
or
and
pusha
pop
outsb
mov
sahf
add
push
fisubrs
pop
mov
or
push
cmp
aam
sti
incb
push
int3
test
xchg
jb,pt
aam
mov
cwtl
mov
fsubr
lods
sub
mov
lahf
mov
push
pop
cmp
inc
inc
movsb
jnp
rcrb
mov
push
lret
enter
push
pop
fidivs
jne
ret
jno
or
sub
jmp
sbb
mov
add
xchg
sub
and
and
or
shlb
cltd
imul
outsb
arpl
sahf
pushf
jecxz
push
outsl
inc
sbb
lcall
lret
shll
cmp
push
jmp
es
inc
cmp
sub
mov
cmp
or
push
jns
negl
ja
pop
add
inc
popa
loope
inc
jbe
enter
mov
jl
sbb
arpl
mov
lahf
mov
jl
pusha
movzwl
inc
xchg
sbb
mov
adc
push
push
syscall
cwtl
sbb
movsl
loop
fcmovu
fcomps
xor
adc
cmp
or
xlat
cmpsb
movsb
test
jle
inc
rcll
mov
test
xchg
daa
int
fs
in
hlt
sub
das
dec
xchg
ds
aaa
xor
jbe
push
out
stos
js
dec
adc
sbb
shrl
mov
fdivl
jge
fnstenv
inc
mov
pop
pop
sub
jl
sbb
inc
xlat
call
movsl
scas
das
je
xor
mov
ret
dec
shrl
cmp
clc
mov
inc
fimull
aas
and
jl
mov
stos
inc
pusha
adc
or
pop
push
int
gs
jmp
push
cmp
aam
leave
inc
xor
cmp
stos
lea
xchg
jne
mov
and
xor
push
push
adc
rorl
clc
dec
pop
and
xchg
icebp
cmp
lds
loope
adc
jecxz
outsb
outsb
aas
push
aaa
mov
test
pop
aad
pop
imul
add
rcr
out
or
mov
jle
inc
ljmp
clc
xchg
mov
pop
pop
mov
iret
mov
pusha
ss
pop
cmp
call
sbb
xchg
pop
add
in
pusha
out
je
adc
sbb
xchg
push
jb
pop
xorb
daa
cmp
pop
mov
lods
mov
or
xor
test
push
pop
xchg
testb
nop
imul
jmp
jecxz
inc
sub
push
testl
insl
faddp
imul
js
imul
cwtl
add
cmpsb
addr16
ds
loop
ljmp
xchg
jae
sbb
mov
jnp
dec
push
fbstp
imul
scas
pop
jno
sahf
hlt
push
cli
and
adc
sti
dec
popl
leave
sarl
xor
adc
and
jmp
in
sbb
dec
push
in
dec
nop
pop
test
xor
in
inc
subl
xchg
addr16
inc
mov
fwait
mov
mov
in
js
ret
fstps
fistpl
jg
jecxz
push
fsubrp
sti
lret
push
pop
jecxz
pop
jo
push
xchg
test
arpl
xchg
and
dec
cld
mov
push
sbb
mov
inc
sti
je
mov
lock
rorl
aad
inc
mov
jle
push
mov
cmpsb
jne
jns
mov
dec
and
jno
lods
ret
insl
ljmp
jmp
fdivl
jle
cmp
cli
int3
imul
jne
adc
sub
int
or
mov
dec
mov
jno
sub
lods
outsb
int3
lods
mov
xchg
pop
xorb
outsb
js
rol
std
jo
push
adc
outsb
pop
das
and
mov
mov
out
testb
sbb
xchg
xchg
adc
jbe
sbb
aaa
cli
dec
leave
xchg
outsl
pop
lcall
sbb
mov
inc
adc
xor
shll
nop
imul
test
repnz
int3
ret
push
xchg
xor
mov
sub
idivb
insb
in
aas
repnz
sbb
pop
jmp
out
pop
jp
into
rol
push
lea
sti
jo
mov
mov
cld
ja
mov
imul
sti
fstpl
xor
sbb
cmp
push
test
stc
insl
lea
lds
outsl
pop
pop
je
and
dec
sarl
push
ja
mov
or
sarl
rcr
int3
cld
pop
jnp
in
mov
in
push
sti
or
push
aaa
cmp
sti
xchg
mov
movsl
outsl
mov
inc
fldl
je
dec
pop
jbe
mov
mov
dec
inc
pop
lock
mov
push
ja
outsb
add
int3
sub
faddp
aas
push
in
mov
jbe
push
cmp
adcl
mov
add
sub
push
xchg
pop
and
lahf
mov
jb
inc
je
adc
aaa
pusha
xor
or
clc
inc
mov
aam
testl
jp
mov
inc
je
push
ret
icebp
lea
jp
js
sub
lcall
scas
mov
js
mov
jl
adc
mov
adc
mov
test
lret
adc
pop
push
inc
jl
add
add
cltd
sbb
pop
clc
aaa
pop
add
dec
fs
xor
mov
lea
ljmp
cmp
or
adc
pop
mov
cmp
icebp
mov
mov
jmp
fs
dec
dec
mov
cwtl
sbb
cld
mov
or
pop
lret
sbb
ret
xor
jnp
or
xor
orb
in
scas
ret
xchg
adc
fists
xchg
flds
and
jl
cli
adc
mov
dec
cmp
fldt
push
or
pop
pop
ja
out
pop
es
add
pop
fadd
sti
sbbb
jl
mov
lret
xchg
loopne
enter
outsl
cmpsl
or
push
fldt
xchg
jge
mov
inc
je
xchg
jnp
xchg
out
jg
cmp
add
xchg
jg
add
call
add
imul
mov
shlw
push
xchg
jmp
push
or
sbb
loop
inc
ror
xchg
loop
push
pushf
imul
das
subb
inc
ss
push
cmovno
lods
inc
mov
sahf
inc
mov
mov
sub
es
push
adc
push
popa
xchg
sub
mov
sbb
pop
das
or
andl
mov
sbb
cmp
push
push
std
ss
mov
cmp
adc
jmp
test
xor
add
out
ljmp
xchg
fs
testb
push
and
fimuls
push
pop
push
dec
push
push
sbb
adc
mov
pminub
sbb
leave
imul
repz
push
popa
imul
mov
inc
imulb
int
inc
mov
cwtl
ss
dec
mov
adc
sbb
std
inc
in
pop
dec
jbe
sbb
inc
test
cmp
cld
lahf
outsb
sub
pop
mov
aam
or
mov
pop
sub
ffree
jp
dec
inc
lcall
mov
loopne
mov
lcall
into
inc
xchg
cwtl
mov
inc
or
xor
sub
add
or
sbbl
out
adcl
mov
in
adc
inc
sbb
sub
in
pushf
sti
mov
push
inc
into
lcall
push
jmp
push
repz
dec
fwait
mov
pop
lahf
pop
popa
mov
mov
data16
jo
ret
mov
cwtl
mov
mov
stos
lods
shlb
jp
mov
sub
mov
mov
inc
cltd
insl
shll
jmp
push
mov
stos
ja
add
xchg
inc
cmp
pop
repnz
in
das
lcall
in
xchg
jg
out
scas
mov
das
adc
jnp
cmp
xchg
sbb
ret
divl
mov
pop
and
imul
movsl
dec
addr16
aam
mov
aas
sbb
adc
jp
jne,pt
lcall
push
pushf
in
add
icebp
xchg
test
jmp
mov
and
lcall
sub
pop
cmp
and
cmp
arpl
inc
inc
sbb
or
enter
fdivs
insl
call
mov
jo
add
insb
pop
pop
test
dec
adc
outsl
not
cmpsb
into
ds
mov
cmpsl
jne
loope
out
xorl
xor
jno
pop
fdivr
jae
shl
bound
cmp
inc
loop
orb
cld
pusha
jns
cmpsb
xchg
cmc
push
shlb
xlat
fwait
lret
into
sbb
cltd
pusha
lret
dec
sbb
or
pop
ret
dec
push
and
orl
cmp
and
cmc
insb
addr16
mov
lea
cmp
stos
push
movsb
cld
pop
push
in
sbb
dec
loop
std
or
xchg
mov
bound
in
in
mov
fisubl
es
in
and
call
fwait
stos
cmpsl
xchg
jae
hlt
out
dec
aam
pushf
xchg
mov
insl
xchg
testb
push
loopne
fwait
cmp
cmp
or
popa
inc
ret
sub
mov
jo
push
pusha
pop
and
inc
inc
lock
xchg
popf
cmpsb
scas
lret
inc
test
repz
sub
test
push
stos
xor
and
jp
insb
xor
xchg
js
dec
lods
loop
lods
lods
mov
sbb
sub
int3
mov
out
pop
adc
xchg
jo
lcall
sub
mov
lock
lcall
jae
fidivs
or
popa
pop
lods
cs
aam
push
ret
xor
jae
rol
mov
add
pop
xchg
xchg
pop
xor
gs
push
outsb
lcall
subb
mov
sbb
push
mov
mov
cld
idivb
in
dec
ds
ret
mov
jg
add
out
les
xchg
mov
out
movsb
mov
and
popf
sub
mov
subl
adc
mov
jns
xchg
jecxz
pushf
push
pop
mov
sub
mov
cmpsl
mov
sarl
imul
sub
jmp
out
lret
inc
enter
and
and
sbb
jp
inc
xchg
and
jp
xor
xchg
lods
xor
inc
xchg
shll
xchg
test
mov
incb
shlb
mov
xor
mov
xchg
bound
cwtl
or
or
inc
aaa
jl
sub
test
mov
leave
mov
sub
ds
mov
scas
xor
xor
fdivs
jmp
aad
shl
push
lret
mov
pop
bound
add
les
loop
mov
xchg
scas
outsl
js
mov
gs
pop
sub
xchg
and
xchg
stos
lock
test
sbb
ljmp
mov
and
inc
mov
sub
ss
addr16
dec
lret
sub
cmp
push
mov
dec
add
jnp
movsl
sbb
movsb
clc
enter
jg
dec
loope
xchg
shlb
aaa
nop
pop
aas
data16
jbe
dec
push
mov
pop
andb
fldl
or
or
jecxz
jbe
dec
ret
push
push
jle
fdivrl
jl
sahf
cmp
jns
out
push
mov
or
into
mov
out
mov
push
cmp
pop
ss
hlt
fdivrl
mov
sub
in
dec
stos
xor
xor
mov
pop
add
fisubl
add
popa
sti
popf
nop
cmpsl
rcl
repz
pop
jmp
mov
popa
mov
mov
fidivl
nop
lods
mov
jae
mov
int3
sbb
mov
sub
inc
leave
outsb
data16
loop
lahf
push
jbe
cmp
ret
xchg
jnp
bound
push
dec
cmp
push
push
dec
testb
mov
imul
dec
stc
inc
test
into
mov
cs
cmpl
std
xor
aad
pop
test
push
addl
adc
pushf
push
loope
or
jb
sub
in
insb
in
subl
test
in
iret
bound
std
mov
fxch
ret
mov
xor
scas
dec
sbb
not
mov
imul
lahf
push
repz
xchg
jg
mov
pop
stc
xor
push
cs
cmp
scas
xchg
mov
xor
test
dec
xor
sub
jl
repz
cld
out
dec
pop
aas
sub
loop
push
jg
ja
int
xchg
int
out
popf
mov
pop
jl
into
add
jbe
popf
ss
inc
dec
cmc
aas
pop
bound
leave
outsb
push
or
mov
ficoml
lods
ds
lock
loop
add
popf
or
xchg
jle
xorb
cwtl
sbbl
pop
aas
enter
dec
push
xor
int3
sarl
inc
add
sbb
fiaddl
pop
push
lods
adc
lahf
jp
and
mov
sub
lods
int3
sub
out
cmp
mov
pop
mov
or
hlt
movsb
push
mov
mov
dec
orb
cmp
dec
sarb
mov
test
cltd
test
xorb
jno
pop
xlat
test
jb
shrb
int
fsubs
or
adc
scas
lods
mov
xchg
mov
pop
cwtl
or
jge
cmp
lret
pop
testl
jl
push
xor
jl
fstpt
rcrb
mov
mov
mov
cmc
in
dec
pcmpeqw
mov
sbb
adc
or
mov
lock
addl
les
mov
mov
cmp
iret
push
mov
jne
sub
dec
push
into
dec
jb
mov
dec
popf
pop
jmp
es
or
js
andl
mov
stos
inc
arpl
andl
jmp
or
lret
sub
mov
stos
push
mov
xlat
mov
fldenv
sbb
dec
dec
lahf
sub
inc
gs
jno
enter
cmp
into
sbbl
fcoml
push
mov
xor
popf
or
repnz
in
loopne
inc
ret
cmc
jns
mov
jl
push
lahf
cmp
lea
push
hlt
mov
iret
mov
lahf
sub
jne
push
jge
inc
cmpl
lods
dec
lret
or
bound
or
push
xor
inc
mov
dec
mov
jne
lret
pop
cmp
pop
leave
or
nop
mov
mov
movsb
out
cmp
xchg
mov
fcompl
dec
lds
mov
sub
or
lret
aas
mov
mov
pop
mov
jae
icebp
sbb
pop
out
cs
and
insl
xchg
push
adc
cmc
repnz
dec
push
fiadds
pop
xor
ljmp
xlat
sbb
xor
mov
sbb
fwait
sub
pushf
pop
sbb
rcll
xchg
dec
ret
out
xchg
dec
aas
repz
dec
sahf
sbb
insl
arpl
pushl
cmp
int3
xchg
fisttpll
fisubrl
fsubrl
jg
data16
lret
fimuls
jne
adc
loope
mov
test
sbb
sub
pop
jl
into
cmp
inc
lahf
cli
addr16
add
jle
xchg
sub
mov
into
cmpsl
inc
aam
jp
mov
stc
add
jne
pop
insl
and
int3
xchg
mov
jb
loopne
into
ret
test
sbb
je
mov
mov
fs
jns
dec
fwait
and
fisubl
push
repnz
mov
dec
dec
jmp
in
iret
aaa
js
add
mov
mov
das
bound
sbb
int
push
lret
ss
xor
sub
dec
aam
jno
dec
pop
mov
mov
ljmp
xor
jns
cltd
sub
loopne
addb
out
clc
insb
mov
ja
iret
and
ret
lahf
ret
out
fstpt
js
out
fisttpll
pop
cld
sbb
das
fdivr
popa
sbb
or
push
lea
xchg
pusha
add
shrb
je
ret
cmp
push
adc
pop
mov
loop
mov
push
mov
and
mov
out
xchg
dec
sub
cmp
ret
fwait
and
loopne
stc
lods
shl
mov
in
push
popf
xchg
sbb
call
pop
push
mov
andl
jecxz
outsl
into
enter
jle
scas
cltd
push
dec
dec
jno
imul
stos
aam
inc
add
mov
add
xor
loop,pn
rolb
adc
add
fcomi
fildll
xor
jno
es
enter
hlt
mov
dec
mov
adc
xor
pop
data16
mov
fmul
in
out
int
into
call
out
xchg
xor
lods
mov
ret
pusha
stc
lahf
loop
pop
pusha
add
loope
mov
mov
cmp
add
sti
pop
call
push
xchg
movsb
push
insl
movsl
pop
mov
pushf
dec
push
lods
jae
mov
and
out
ja
sbb
test
jne
xor
in
popf
and
ret
xor
sahf
mov
push
sub
push
pop
lock
xor
cmp
jno
xor
arpl
jo
je
sahf
push
mov
mov
xor
mov
jmp
xchg
ja
mov
add
pop
in
cmp
or
loop
add
nop
pop
cs
push
inc
and
mov
add
pushf
xchg
jnp
mov
lret
test
jge
fisubs
pop
or
pop
cmp
mov
mov
add
xchg
mov
mov
and
fcomps
sbb
pop
stos
fwait
adc
pushf
mov
rcrb
fstpl
mov
imul
jb
sbb
lret
fninit
das
imul
pop
adc
ja
mov
and
xor
xchg
ret
scas
test
pop
add
xchg
add
cwtl
push
adc
sbb
cmp
movsb
int
push
xchg
mov
movsb
push
sbb
movsb
push
sahf
and
fdivrs
mov
mov
mov
jg
sbbl
pop
repz
push
or
and
shrb
lds
and
test
lds
or
mov
dec
cmp
cmp
pop
fdivr
scas
push
push
sub
in
jp
dec
and
ljmp
and
jnp
and
in
std
clc
das
test
pop
xor
mov
arpl
dec
sarb
outsl
rol
fs
and
mov
or
popf
add
mov
mov
jae
sub
loopne
fcmovnbe
or
dec
mov
dec
inc
or
jecxz
xchg
xchg
cltd
je
flds
pop
xchg
mov
cmp
pop
and
loopne
jg
push
jae
in
pop
pushf
and
push
lock
mov
rorl
pop
sbb
adc
dec
popf
popa
vmaxss
loope
push
movb
cmp
pop
imul
xor
sub
sbb
pop
arpl
jns
popf
mov
loop
mov
movsl
push
cmpsb
rcrl
aas
stc
mov
mov
xadd
lret
lods
xor
dec
mov
shlb
pop
fmull
inc
push
and
add
pop
mov
jbe
sub
mov
shlb
dec
test
mov
sahf
rolb
in
outsl
sub
rolb
or
je
pop
std
shl
test
sub
cmp
and
inc
ficompl
fucom
sahf
xor
and
xchg
push
inc
mov
xor
jl
and
add
mov
push
test
lret
xchg
outsb
mov
stos
imul
in
outsb
mov
shrb
mov
scas
rcl
cmp
sub
je
sbb
inc
rorb
cmp
push
fs
fldlg2
xchg
nop
mov
lods
xlat
jmp
xchg
mov
out
push
icebp
jne
add
sub
cltd
push
or
pop
lods
and
cmp
sti
aaa
fldenv
inc
sahf
pushf
push
jg
es
aam
ljmp
je
addr16
and
cmp
insl
in
push
les
or
std
fsubp
xor
inc
and
inc
mov
mov
ret
and
mov
inc
shlb
lea
bnd
or
movsl
mov
mov
cltd
fldcw
xchg
mov
xchg
cmp
jb
bound
sbb
push
ret
shlb
ret
sbb
ja
pop
mov
sbb
out
fnstcw
push
mov
jnp
faddl
shlb
push
call
push
mov
stos
and
jmp
scas
out
inc
out
shl
cltd
lds
addr16
mov
fcoml
hlt
inc
cld
stc
les
fcoml
arpl
int3
dec
popa
clc
insl
jne
nop
mov
inc
out
add
push
cmp
lret
sub
mov
cld
cwtl
xchg
mov
test
clc
pop
pop
fwait
xor
or
loop
mov
cmp
jb
ret
jge
sbb
push
xchg
ss
lods
js
in
arpl
jp
in
or
cmp
rorl
add
loop
and
aaa
in
hlt
or
insl
imul
pop
pop
lea
pop
sub
mov
std
jno
fisubs
leave
jp
inc
stos
xchg
testl
stos
sti
out
pop
or
add
aad
and
inc
clc
mov
outsb
out
cmpsl
xor
sarl
ret
xchg
into
pop
xchg
push
ret
sbb
jmp
mov
test
push
ret
ljmp
mov
in
jmp
shlb
and
in
add
mov
lahf
ss
inc
inc
add
pop
pop
push
idivl
into
iret
std
dec
push
aad
mov
cltd
daa
add
and
cmp
cmp
sbb
mov
out
je
pop
call
ret
pop
xor
aad
jge
std
xchg
insb
lahf
lret
sbb
mov
pop
push
js
adc
cmpb
sbb
mov
mov
xlat
lods
repnz
rorb
add
mov
mov
xchg
mov
pusha
xchg
setne
out
lock
xor
mov
das
or
dec
test
pop
adc
sbb
das
and
xor
arpl
pop
les
inc
mov
sbb
outsb
sbb
inc
mov
jbe
dec
leave
fisttpl
mov
xor
fisttps
lock
fildll
mov
cmp
mov
sbb
das
pop
inc
add
jl
stos
add
adc
cmp
ret
cmovns
dec
cld
cld
int3
cmp
mov
mov
inc
sub
push
xor
sti
daa
in
pop
pop
cmp
sbb
testb
inc
jnp
inc
out
fimull
bound
ficomps
xchg
movsb
cld
fadds
cmp
or
cmc
xor
adc
xor
adc
aad
cmpsb
sub
arpl
mov
pop
sahf
and
insl
sub
xchg
add
int3
adc
adc
push
push
jno
loop
aam
test
insl
mov
aam
lret
adc
mov
cld
insb
inc
loop
out
jne
push
inc
add
test
out
test
push
pop
fs
and
push
sbb
add
xor
jge
mov
mov
rolb
daa
in
inc
lret
bound
jg
hlt
sub
jp
add
sti
and
or
pop
sahf
loopne
push
aad
and
xchg
mov
cmc
xor
pop
and
inc
jb
pop
imul
push
sahf
cmp
clc
ja
xchg
xchg
dec
jae
xor
fs
fs
fcomi
int3
dec
inc
pop
mov
dec
testl
stos
mov
and
rolb
in
pushf
leave
lods
shrl
cmp
and
xor
inc
es
pop
ret
movsl
pop
in
addl
in
enter
fistpll
pop
call
mov
jae
popf
mov
sahf
jmp
popa
pop
shrl
jp
test
jmp
fs
xor
jg
insl
sti
bound
cmpsl
xchg
lods
sahf
dec
mov
pop
lahf
fwait
dec
pop
and
popf
cmp
sbb
in
mov
xlat
out
mov
push
sbb
inc
cmc
xchg
sbb
inc
arpl
cltd
imul
movsl
cmpsb
scas
inc
hlt
ja
jne
pop
dec
adc
and
inc
jle
xor
je
mov
xor
push
sbb
xor
mov
js
push
adc
scas
lods
jns
mov
les
into
sub
or
fldenv
mov
call
popf
xor
pop
icebp
or
outsb
aad
fwait
aad
push
xchg
sbb
cmp
sar
pop
mov
out
scas
lds
inc
push
js
push
inc
lds
and
xor
sub
push
cs
inc
mov
scas
inc
jg
jne
fnstcw
pop
js
popa
or
jge
out
test
jg
mov
loope
lea
je
cltd
outsb
popa
inc
ljmp
mov
xor
mov
nop
arpl
add
int
movsb
addl
mov
jae
daa
mov
jmp
push
cmp
adc
arpl
addr16
add
push
sub
inc
push
js
jbe
inc
xlat
and
push
lret
inc
mov
mov
mov
jle
out
push
adc
sub
sahf
adc
lret
imul
adc
adc
sub
mov
pushl
scas
cmp
iret
testl
mov
aas
push
rcl
and
ret
outsl
cmp
pop
lret
push
imul
mov
and
aaa
bound
sbb
das
int3
hlt
lret
jae
mov
xor
push
or
inc
dec
or
mulb
je
inc
pusha
mov
cmp
pushf
add
sbb
cmp
pop
jl
cld
inc
xor
test
incl
dec
loopne
pop
dec
in
pusha
inc
in
mov
pop
jge
inc
dec
xchg
jo
push
push
divb
sub
mov
lods
scas
adc
aam
pop
add
sub
fidivrs
mov
pop
mov
test
cmp
arpl
jle
ljmp
cmp
bound
inc
bound
cli
fcompl
push
cmovg
jbe
das
xor
and
jno
scas
xor
push
or
shlb
test
movsl
mov
xchg
jg
and
pop
call
data16
leave
sbb
into
sahf
pop
lretw
sub
insb
mov
out
and
movsb
rcl
addl
aad
mov
andps
cltd
pop
iret
movsb
sbb
ss
dec
jle
and
fidivrs
xchg
add
inc
ss
aas
xchg
movsl
insl
mov
inc
sub
mov
adc
pop
mov
iret
fidivl
xchg
enter
call
mov
sbb
ja
pop
mov
loope
sub
test
cs
xchg
inc
pop
jbe
jg
mov
add
mov
sbb
scas
scas
inc
xchg
gs
jne
imulb
test
sub
jp,pn
es
insb
push
rcll
add
add
fisttpl
sar
mov
mov
sarl
adc
xor
dec
icebp
sub
cmc
daa
push
outsb
aad
pusha
jnp
mov
adc
cmp
je
push
stc
idivl
lret
pop
outsl
sbb
push
dec
inc
data16
loopne
xor
dec
inc
cmp
mov
inc
lock
test
cmp
mov
fcmovne
mull
in
pop
fisttps
inc
push
rcrl
xor
cltd
fnstsw
mov
mov
xor
cwtl
es
rcrb
insb
idivl
data16
cmpsl
ret
shr
mov
push
jp
mov
aaa
push
sbb
outsl
cmp
jmp
adc
rsm
ret
stos
and
leave
into
jae
or
fucomp
mov
xor
jne
cs
fldenv
xchg
inc
movsb
test
xorl
les
add
aam
pop
loope
ret
xor
aad
test
mov
mov
lahf
out
stc
sub
add
mov
imul
push
and
sbb
popa
mov
out
or
adc
leave
pushf
jo
xchg
or
cmp
jge
add
fstp
mov
or
cmp
jecxz
jno
mov
pop
out
repz
lods
xlat
jg
idivl
lahf
inc
xor
cmp
fnstsw
out
shr
test
jnp
test
test
aam
sbb
jle
cltd
cli
xchg
cmp
lret
mov
mov
push
xor
mov
inc
stos
mov
add
popf
rolb
aaa
sbb
arpl
int3
lret
sbb
pop
movb
lock
cwtl
jmp
sti
xor
out
das
sbb
inc
fwait
pop
outsl
movsl
jecxz
out
push
sahf
cmc
pop
decl
push
jle
push
sbb
mov
mov
out
adc
lret
inc
pop
mov
dec
es
js
out
cltd
inc
scas
icebp
xor
out
out
or
and
rorb
add
add
jecxz
push
ja
enter
add
lcall
lret
fdivrp
mov
nop
in
gs
xlat
xchg
jnp
ffreep
dec
push
lcall
or
leave
adc
mov
mov
imul
into
repnz
fldenv
lods
lret
ret
imulb
rorl
xchg
test
cmp
int3
loop
aas
add
pop
push
sarl
leave
xor
jo
push
jno
mov
or
daa
scas
sub
xchg
adc
push
xchg
lock
adc
push
out
gs
jno
push
jmp
inc
dec
jecxz
ret
push
pop
sahf
icebp
cmpsb
mov
frstor
mov
jb
sub
lret
insb
mov
cmp
subb
sub
inc
jecxz
mov
add
clc
lods
pop
and
mov
jne
mov
mov
pop
mov
push
mov
movsl
andl
jp
jne
ja
sbbl
add
xchg
pop
aad
std
push
jno
or
adc
in
push
mov
pcmpgtw
popa
jg
call
mov
dec
mov
pop
cmpsb
add
cmpsb
in
dec
cmp
fs
lahf
dec
imul
js
insl
in
push
movsl
jl
mov
fcoms
sub
dec
cmp
jecxz
jns
xor
js
cmp
es
testb
test
fisubrl
add
xchg
lahf
cmp
sbb
outsb
add
pop
test
iret
loopne
push
jl
cmp
cld
pop
fbstp
out
sub
sbb
push
pop
mov
inc
insl
pop
xchg
mov
sub
mov
mov
sbb
aam
out
test
mov
imul
cmp
sub
lds
cmp
stc
jmp
loope
mov
outsl
xlat
cld
fnstcw
stc
sbb
adc
cmp
ja
push
sub
adcb
repz
int3
hlt
loopne
dec
lahf
sub
xchg
mov
shlb
jns
mov
sub
push
leave
sub
cmp
mov
out
arpl
xchg
test
fbld
std
xchg
test
lods
jno
cwtl
add
cmp
out
or
fs
jmp
fbld
jecxz
ffreep
mov
cmc
jns
ljmp
jne
cmpsl
ja
cmpsl
adc
mov
imul
cmpl
mov
divb
out
sbb
stos
or
es
addr16
popa
cmc
pop
nop
js
pusha
jae
jle
loopne
fmul
lock
xor
sub
sarl
and
iret
and
sub
xor
clc
int
jle
add
mov
enter
in
bound
stc
pop
fists
cmp
xchg
jge
sbb
shl
inc
out
jmp
xchg
and
adc
adc
and
xchg
aad
insb
bound
pop
cmp
push
insl
inc
mov
ss
jnp
xchg
xchg
lcall
and
movsl
push
sbb
adc
adc
jne
shr
push
jae
jno
or
jmp
out
or
xchg
push
push
loope
lret
stc
ss
dec
push
out
rcrb
in
aad
cmc
sbb
sbb
outsl
push
cmc
shll
ficoms
sub
or
pop
mov
fwait
dec
jg
bound
in
mov
inc
sbb
data16
mov
ffreep
add
nop
sbb
adc
loop
aad
ret
mov
xchg
out
sub
and
int3
xor
mov
addr16
push
sti
pushf
popa
les
push
out
addl
pushl
push
shrb
dec
ss
shl
pop
mov
in
jl
repnz
fstp
stc
shl
sbb
add
xchg
mov
adc
pop
dec
int3
xor
in
stc
mov
xchg
jecxz
jbe
push
push
inc
lock
sub
xor
sub
jae
dec
pop
js
add
popa
inc
push
pop
cmpsl
dec
in
dec
stos
push
jmp
add
sbb
xchg
insb
sbb
pop
adc
cmp
cmc
fistl
iret
mov
sbb
fldt
jg
pop
jb
outsl
jle
repnz
sbb
pop
dec
cld
or
ljmp
lea
insl
inc
jge
adc
pop
movsb
or
idiv
addr16
aaa
lock
add
stos
cld
rcrl
sbb
mov
test
pop
xor
shll
sub
or
cmp
lods
pop
and
mov
int3
mov
fistl
add
cli
push
in
nop
das
mov
rcll
pop
push
dec
int
add
xchg
cld
jbe
stos
mov
adc
sbb
shll
test
mov
dec
xor
push
into
xor
or
in
inc
or
call
andb
adc
mov
out
outsl
push
fwait
pop
cli
xchg
mov
lret
add
jns
jecxz
or
mov
and
pop
notb
outsb
pop
push
je
fcmovu
insb
or
fiaddl
es
test
lods
in
cmpsl
fstl
and
shll
sahf
sbb
xor
inc
ret
xor
push
call
test
push
arpl
push
notl
xchg
test
aam
push
fwait
addr16
sbb
inc
and
es
addr16
nop
and
repnz
cli
inc
lods
pop
enter
inc
mov
push
in
daa
leave
shr
sti
cmp
in
sbb
repnz
sbb
sahf
cmp
pop
and
loopne
testl
in
cmp
adc
je
jae
stos
add
test
xchg
rolb
mov
adc
jb
push
jle
aas
jmp
or
mov
or
mov
imul
stc
in
pop
rcrl
adc
cmp
xchg
mov
pop
pop
ret
jae
push
test
inc
and
dec
movsl
hlt
push
hlt
mov
fwait
inc
fisubrl
fcoms
loope
mov
jecxz
sbb
xchg
int3
int
aad
mov
jge
jno
xchg
add
aam
push
ret
cmp
mul
mov
and
or
sub
into
push
cmp
stos
jecxz
popa
push
dec
cli
or
es
inc
cs
fsubl
enter
push
inc
mov
mov
fcompl
cmpsb
mov
nop
icebp
jae
xor
mov
xor
aad
std
lret
mov
mov
incb
sti
adc
movsb
rorb
fwait
ljmp
fcompl
push
xlat
dec
xor
push
dec
loop
mov
fsts
enter
push
sub
ret
mov
inc
cltd
sbb
pop
add
fistpll
jb
push
hlt
sbb
cmpsb
sahf
in
loopne
xor
lds
cwtl
adc
adc
mov
xor
ret
jl
add
fiaddl
shlb
dec
xor
iret
inc
test
pop
xor
jecxz
sahf
mov
rcrb
cmp
clc
inc
and
fadd
lods
add
pusha
jg
xchg
jns
xchg
scas
or
enter
dec
push
xchg
sub
inc
ja
popf
jmp
and
into
dec
mov
ret
int3
xor
outsl
and
sti
mov
test
jne
xchg
mov
ss
or
out
subl
iret
mov
jae
clc
lds
lret
mov
out
out
sub
dec
mov
jmp
in
sete
enter
and
cmpsb
loop
xorb
pop
sbb
jge
and
cltd
arpl
add
push
sub
cltd
mov
mov
jno
arpl
fs
sahf
rorb
ret
pop
data16
out
imul
cltd
pop
mov
loope
mov
incl
je
pop
push
sbb
fwait
xlat
and
or
push
mov
jl
bswap
adc
mov
inc
add
test
hlt
movsl
stos
fcmove
sbb
xor
in
and
dec
dec
movsb
and
icebp
mov
test
mov
in
or
stos
add
sub
mov
cmp
jecxz
enter
or
loop
gs
mov
xor
jno
dec
scas
xor
fs
adc
mov
iret
addr16
test
mov
or
lcall
lcall
jecxz
cli
fisubrs
cmp
mov
add
push
out
xor
fidivrl
rcrb
les
adc
xchg
and
adc
scas
xchg
rolb
shrb
pop
or
cli
or
call
daa
nop
push
dec
xor
mov
dec
test
xchg
in
pusha
and
dec
or
cmp
in
sub
pop
pusha
lods
stc
or
mov
in
out
or
ret
cmp
js
or
iret
cmpsl
icebp
and
mov
lcall
aam
pop
mov
lock
push
mov
jbe
xor
cltd
push
in
xorl
jne
and
push
loope
mov
mov
gs
add
cld
sbb
adc
outsl
cmc
mov
sbb
xchg
loop
adc
cld
aad
jl
add
mov
in
adc
fstps
add
mov
int3
loope
cmp
add
push
lret
aas
loop
jnp
mov
push
and
or
cmpsb
xrelease
mov
inc
rol
cltd
lret
mov
pop
jmp
add
js
xor
dec
aas
orb
ja
std
scas
arpl
pop
sub
shl
sti
adc
adc
mov
push
jmp
sub
cmp
daa
mov
iret
scas
push
outsl
shll
dec
lret
inc
cld
les
mov
or
cmp
jp
call
mov
cmp
cmc
clc
cmp
aam
gs
inc
mov
push
lfs
sbb
mov
xchg
fists
push
shll
mov
lods
pop
sub
xor
fisubrl
loopne
pop
jl
arpl
loope
mov
mov
popf
and
lods
movsb
rcrb
push
stos
cwtl
xchg
push
adc
arpl
inc
mov
loopne
adc
adc
mov
imul
out
cmpsb
stc
xor
mov
hlt
mov
out
in
lods
pop
cmp
adc
cwtl
push
add
lods
lods
add
rorb
nop
mov
addr16
cmp
das
dec
pop
loop
lds
data16
iret
stos
lahf
sbb
push
xchg
lods
xchg
out
xchg
mov
in
jb
mov
fmul
mov
test
pop
mov
xchg
stos
insb
hlt
cbtw
cmpsl
sub
je
popf
pop
out
incl
faddl
dec
or
das
xor
and
daa
xchg
xchg
pop
push
addr16
movsbl
cmp
mov
inc
xchg
test
add
fdiv
jo
pop
insl
adc
mov
add
mov
repz
jns
test
movsb
outsl
fisubrs
lcall
mov
std
pause
jae
inc
aam
pop
inc
lahf
lret
pop
cld
cwtl
movsl
jmp
xchg
or
push
xor
jb
adc
mov
push
adc
repnz
push
pop
and
movq
pop
xchg
pop
dec
dec
and
add
dec
xor
loop
mov
and
xchg
cltd
addr16
pusha
push
std
ret
stos
xor
loopne
mov
pop
dec
xchg
push
cmpsb
shr
jmp
mov
inc
add
add
adc
jge
loop
jmp
push
adc
rorl
push
or
and
jg
mov
out
or
dec
mov
mov
cmpsl
pushf
cmpsl
jp
dec
inc
add
jae
in
mov
loope
int3
push
or
mov
pusha
aad
ljmp
lahf
aas
xor
xchg
mov
or
mov
mov
mov
sub
in
stos
inc
add
xchg
add
mull
test
cli
icebp
pop
hlt
out
out
rcrl
notb
inc
xchg
xor
mov
ds
add
lods
jbe
ja
lds
lea
notl
mov
lahf
fists
scas
jo
sbb
xor
jle
xor
insb
sbbl
push
inc
ret
icebp
pop
or
insl
adc
cmp
cmp
push
lea
cmp
cmpsl
mov
ljmp
mov
lea
xor
push
stc
pop
push
scas
clc
pop
sbb
xchg
loope
adc
adc
xor
xchg
sbb
jo
adc
sbb
xchg
xlat
jecxz
fsubs
dec
lret
je
std
mov
mov
pusha
in
clc
sub
push
dec
test
jb
dec
sub
stc
jl
test
push
inc
popa
jns
sub
ljmp
sbb
dec
pop
mov
mov
mov
orb
inc
das
out
mov
xchg
cmpsl
adc
push
mov
mov
xchg
xchg
std
xchg
push
mov
addr16
addr16
push
cmp
xchg
bnd
dec
push
or
lea
lea
movb
scas
or
js
push
mov
dec
jbe
push
inc
jl
push
inc
adc
incl
loope
insl
loopne
movsb
rcll
bound
dec
mov
data16
aaa
cmp
push
or
in
cmp
lret
push
inc
outsb
f2xm1
add
cld
xor
mov
je
insl
sub
imul
js
dec
ljmp
and
rcl
lret
jns
inc
sbb
js
fld
add
stos
cmp
sbb
mov
jb
aaa
sbb
or
dec
lds
xchg
fdivrs
andb
push
inc
insl
bound
nop
cmp
jecxz
in
outsl
loopne
inc
cmp
sahf
mov
add
int
cmp
int
inc
xlat
push
sub
mov
nop
jnp
pop
fs
lods
insb
xchg
mov
jp
adc
cmp
sbb
imul
jnp
cltd
repnz
bound
pop
mov
lods
push
push
push
dec
inc
push
mov
cld
adc
or
xor
je
mov
push
xchg
rclb
mov
add
icebp
insl
dec
mov
mov
mov
adc
adc
bound
pop
and
shll
push
in
lahf
fmuls
pop
loop
mov
cmovl
mov
dec
loop
imul
test
add
dec
cmp
jmp
adc
xchg
xchg
xchg
push
inc
pop
iret
int3
decb
sub
cmp
cmp
aad
xor
repnz
out
lret
lahf
rolb
sub
xchg
arpl
roll
jno
movsb
iret
adc
fstpl
pushf
mov
pop
cs
enter
adc
loop
stos
aad
push
mov
sbb
bound
sahf
movsb
xchg
lods
cmp
add
addr16
cli
or
mov
std
clc
cmpsb
adc
adc
sub
ss
lmsw
cmp
sub
fsqrt
or
push
mov
mov
in
cmp
rcl
shlb
stos
and
stos
xchg
pop
jge
push
rcl
xlat
in
xchg
enter
jmp
nopl
ja
pop
imul
out
ds
adc
jp
sarl
jae
insl
cltd
cmp
cmpsl
dec
mov
cs
push
out
and
inc
enter
xchg
lcall
adc
fcoml
loop
jae
in
mov
out
sbb
or
pop
pusha
movsl
ss
push
rcrb
xchg
pusha
pop
sbb
xchg
cmc
xor
xor
pop
loopne
and
and
mov
fcmovb
mov
xchg
cmp
cld
sub
imul
aam
lcall
push
add
mov
movsl
lret
mov
scas
jne
stos
jp
imul
xlat
imul
xchg
sbb
fmuls
push
mov
ror
cmp
in
insl
ret
aam
sub
popa
pusha
mov
mov
shrl
mov
es
or
and
dec
shll
imul
add
imul
and
adc
pop
adc
out
xchg
mov
jecxz
pop
sbb
mov
lahf
fistps
lahf
adc
aam
mov
cmp
cld
aam
xchg
fmul
jb
into
inc
xchg
mov
test
inc
lea
mov
cmp
cmp
cmp
inc
std
mov
inc
fisubrs
mov
rorb
outsb
subl
int3
lock
pop
jno
xor
mov
jmp
sub
push
push
fnsave
mov
push
fsts
pop
adcb
fisttps
jmp
sti
jmp
and
inc
adc
mov
xor
mov
arpl
or
addr16
fucomip
sub
cli
xor
mov
outsb
int
push
rorl
xchg
and
xor
incl
test
jbe
push
mov
push
outsb
sbb
sbb
cmp
loope
popf
in
mov
jle
mov
pop
pop
jmp
jb
cld
rcrb
mov
jnp
sbb
add
call
xchg
lcall
jg
test
push
push
arpl
mov
pusha
cld
movsl
xchg
xor
mov
add
ret
out
ds
jae
dec
adc
inc
and
rolb
pop
dec
rcrl
push
popf
scas
insb
mov
jecxz
mov
popa
add
stos
push
pop
dec
subb
or
lds
push
stc
cld
stc
and
dec
pop
cltd
icebp
push
pushf
das
mov
inc
mul
outsl
out
ds
ds
xchg
push
loop
and
subl
mov
mov
jle
iret
mov
adc
xor
ljmp
add
shrd
cmp
mov
mov
popf
push
lcall
test
outsb
cwtl
arpl
rcl
push
cmp
jno
inc
shll
jl
add
jp
mov
jne
aam
lahf
int
jbe
popf
sub
sub
out
es
enter
loop
test
dec
cli
push
or
stc
sub
xor
mov
movsl
adc
fbld
push
ljmp
mov
adc
pop
sbb
fistl
dec
test
sbb
icebp
fcmovu
cld
xchg
sahf
jno
enter
inc
aaa
add
mov
inc
insb
aaa
xchg
fcomps
ja
push
dec
mov
dec
xor
xor
mov
shrl
or
push
sar
rolb
push
add
dec
test
loope
cmp
insb
ja
mov
int
ljmp
jnp
xchg
aas
jnp
dec
in
push
pop
ljmp
xchg
gs
dec
int3
xor
or
int3
subl
ret
scas
clc
or
popl
xlat
push
scas
stos
sahf
mov
rcrl
inc
or
cltd
pushf
test
scas
xor
xchg
movsb
inc
outsb
sub
mov
imul
inc
aad
dec
stc
stos
jnp
cltd
pop
and
xlat
fdivl
add
lods
pop
sub
xchg
mov
mov
mov
aaa
pop
xchg
mov
repz
test
rcl
jo
leave
cmc
les
popl
mov
lahf
test
add
mov
repz
or
std
imulb
aam
pushf
mov
scas
std
push
lret
adc
fildll
jb
lock
xor
jb
jle
sbb
ljmp
repnz
push
sbb
les
enter
mov
shlb
pop
xchg
cld
sbb
lahf
jle
xchg
dec
lea
insl
lods
int3
adc
sbb
xchg
dec
add
pop
mov
xlat
xchg
popa
fcoms
mov
daa
lds
jmp
sbb
out
jb
dec
sbb
sub
andl
ficoms
mov
fsubr
push
lret
std
adc
sti
adc
leave
aad
mov
jle
mov
pop
loopne
test
ja
call
popf
daa
repnz
loop
rcrb
insl
mov
dec
adc
sub
gs
dec
mov
and
insb
or
sbbl
scas
or
jge
rorl
push
pushf
inc
jns
fnsave
out
into
les
aaa
xchg
cld
ss
fldenv
push
push
cmp
jno
or
jle
lret
push
and
in
fisubrl
pusha
loopne
cwtl
imul
cs
ja
mov
pop
push
out
sub
sar
movsb
cli
xlat
adcl
mov
sahf
lods
mov
ffreep
push
or
push
add
sbb
jbe
scas
sub
sub
subl
and
into
nop
sub
cltd
sbb
sub
aam
mov
and
sbbb
das
pop
imul
inc
push
sub
int
and
out
addr16
fs
and
jne
xor
mov
das
sub
push
call
jnp
jp
jle
mov
aaa
mov
dec
imul
cld
or
ret
mov
test
out
jg
in
loope
mov
xchg
popf
divb
ljmp
dec
and
mov
push
pop
pushf
fidivrl
or
cmp
nop
sub
inc
mov
push
mov
cmc
jo
fcom
sbb
loop
lret
adc
outsl
in
pop
or
push
movsb
mov
lahf
adc
mull
loope
cmp
lret
out
shl
or
sub
or
push
data16
in
imul
cmc
push
push
mov
cmp
sbb
cmp
pop
add
outsl
arpl
jge
daa
sub
add
sbb
pop
mulb
cld
jg
ljmp
jb
shrl
scas
sub
sub
clc
arpl
mov
pusha
jns
push
addl
clc
jnp
add
pop
inc
insb
xchg
and
cmpl
or
mov
dec
or
es
out
dec
fsubs
test
mov
dec
pop
aas
cmp
inc
push
sub
shlb
push
push
cltd
enter
jbe
shlb
test
cmp
adc
out
into
push
push
in
and
rcll
sbb
ret
adc
jg
mov
sbb
xor
lret
pop
sbb
icebp
insb
pop
enter
xchg
lods
loope
fdivl
rorb
and
scas
aam
push
and
mov
pop
fcmovu
in
xor
inc
popf
je
push
lods
xchg
add
lret
pop
mov
xorl
adcl
mov
je
xchg
daa
shlb
and
adc
shl
das
and
aad
sub
or
sbb
sub
test
xor
sub
sahf
xchg
and
lock
xlat
mov
movsb
cmpl
movsb
call
add
mov
push
cmc
jp
mov
xchg
test
push
movsl
es
jp
xchg
popa
decl
jg
pop
push
ja
and
rol
pop
pop
js
dec
mov
int
pop
mov
mov
scas
push
jle
pop
addr16
xchg
ss
dec
lret
add
ret
outsl
ja
lahf
cli
mov
jno
cmpsl
cmpl
jbe
xchg
dec
cmp
mov
and
fs
jb
push
adc
movsl
inc
loope
mov
xchg
mov
xor
lfs
scas
pop
mov
xchg
dec
cmp
fisttpl
cmp
data16
cmp
lods
in
aam
into
pop
push
sbb
movsb
push
or
fisubs
mov
mov
xor
adc
or
in
pushf
scas
xchg
or
stos
arpl
repz
in
mov
jle
scas
mov
loop
inc
mov
cmp
xorb
inc
sub
xchg
inc
psubw
data16
lret
push
mov
xchg
mov
cmc
test
and
mov
lods
adc
push
pop
arpl
in
dec
rcrl
add
add
fdivrs
mov
xlat
sub
push
repnz
xchg
mov
jb
cmp
mov
inc
push
cmovns
dec
aas
jl
ss
mov
push
jb
inc
mov
test
sbb
sbb
xchg
inc
adc
add
fstps
mull
pop
mov
stos
jge
andl
push
fbstp
add
out
loop
pop
xor
loope
push
out
loopne
cli
dec
cmp
imul
gs
loopne
testl
sub
adc
mov
in
fisubs
loope
in
es
xchg
mov
adc
mov
dec
daa
sahf
jo
loope
xlat
inc
ja
cld
jg
pop
shll
data16
addl
or
push
mov
enter
mov
pop
jbe
push
mov
nop
rol
mov
cmpsb
fucomip
pop
pusha
jp
and
adc
cmp
enter
stc
fwait
out
jge
out
shrb
stos
adc
aas
sub
aas
lret
sti
ja
mov
enter
int
scas
push
loopne
or
out
insb
sub
push
loope
pop
stos
mov
mov
xor
pop
and
inc
ljmp
in
inc
mov
cmp
push
push
jbe
jle
and
ljmp
jnp
sub
test
xorb
mov
jecxz
push
lods
testl
divb
ficoms
sbb
dec
testb
cld
pop
add
inc
xchg
xchg
cmpl
dec
sti
pushf
inc
pop
sub
mov
loop
jne
jl
in
hlt
call
popa
fldt
push
adc
repz
rorb
and
dec
movsb
int3
jo
fwait
scas
in
xchg
or
mov
push
mov
fildl
add
push
pop
add
mov
pushf
xchg
inc
jno
popa
push
push
incb
xor
mov
dec
dec
cmc
inc
jns
nop
and
add
rep
fidivl
pop
jmp
inc
std
mov
aas
adc
aad
lcall
fmuls
cmpsl
push
out
outsl
dec
mov
das
stc
lret
das
mov
adc
and
das
lds
ror
test
sbb
mov
pusha
push
imul
lea
mov
xchg
lahf
ds
cmc
in
test
es
or
cmp
int3
jbe
mov
xor
out
dec
shll
mov
sbb
mov
cmp
mov
cmp
jmp
cmpl
cmp
arpl
adc
std
jbe
cmp
and
and
mov
jp
mov
mov
aaa
int
fwait
out
cs
imul
popf
jno
lock
lock
and
cmp
inc
cmp
ret
lcall
lds
or
jmp
daa
xor
mov
std
outsb
sub
loopne
scas
outsb
in
addr16
dec
adc
mov
adc
rcrb
mov
stc
or
pop
aas
jmp
das
push
js
lds
push
movsl
mov
popa
fdivrl
push
pop
sub
andb
sahf
out
iret
sbb
inc
pop
mov
in
jne
rorl
pop
push
sub
ffree
sbbb
xchg
daa
pop
jb
push
cmp
mov
xor
addb
out
arpl
jg
mov
mov
and
pop
xchg
jmp
stc
imul
andb
push
shll
addr16
outsb
inc
mov
daa
xor
lret
sar
add
in
lea
sahf
mov
call
out
in
and
movsl
pop
xlat
pop
fisttps
or
xor
sub
inc
inc
push
int
frstor
test
push
adc
adc
and
fstps
mov
mov
dec
xchg
mov
jmp
fadd
cld
mov
jns
xlat
pop
std
sub
stos
push
push
mov
dec
nop
scas
xor
or
testl
sub
add
bound
fnstcw
stos
fs
test
xchg
test
pop
ss
pop
mov
fsubl
fs
fnstsw
shl
out
sub
cmp
cmpsb
nop
xchg
and
loope
dec
mov
lcall
mov
loope
sbb
and
fsubrl
nop
adc
lea
imul
mov
dec
sbb
sbb
fistps
xchg
cmovo
mov
xchg
insl
xchg
clc
sbb
aad
les
xchg
sub
gs
push
loop
xchg
fistpll
fidivl
adc
inc
inc
jo
test
sub
jecxz
and
pop
addl
in
xor
cwtl
adc
jmp
std
sbb
xor
xchg
adcl
pop
push
popf
and
jno
lods
xchg
iret
jecxz
sub
stos
sub
push
mov
push
inc
dec
jl
in
xadd
fsubr
cmc
push
push
frstor
stos
in
dec
jl
lock
mov
jmp
stos
push
cmp
push
dec
js
or
sbb
push
lcall
and
scas
mov
and
mov
adc
mov
mov
xchg
xchg
aaa
lods
and
aas
mov
push
in
loopne
cmp
add
nop
xchg
fisubrl
ja
fiaddl
fistps
jbe
xor
xor
insb
imul
lret
das
inc
pop
mov
adc
push
out
loope
push
and
mov
dec
and
jns
pop
dec
fcompl
jg
push
fnstenv
mov
decb
leave
pusha
js
les
xor
movl
mov
inc
cli
fcoms
mov
cmp
mov
pop
enter
add
dec
and
pushf
scas
int
inc
pop
jl
and
loope
fs
mov
jne
adc
ficomps
jb
inc
push
and
pop
out
fcomps
or
add
jmp
stos
popf
outsb
insl
shll
ss
xor
jns
fmull
popf
dec
shrb
push
sub
cwtl
pop
daa
iret
dec
mov
lods
adc
popf
sub
popf
or
sub
rorb
mov
fdivp
cmp
aad
inc
pop
sub
mov
inc
mov
add
das
add
gs
popa
aaa
outsl
jp
notl
jnp
add
jb
mov
stos
jb
int3
gs
push
sub
or
dec
or
push
das
gs
fdivr
jno
fstpt
cmpb
fsubp
jb
inc
fidivs
mov
pop
cmp
dec
jp
jl
imul
adc
add
je
pop
cld
sub
xlat
jl
scas
sbb
pop
ret
push
mov
cmpsl
scas
xor
out
call
pop
mov
popa
cmp
and
nop
mov
pusha
xchg
int3
fstl
jno
mov
mov
fimuls
cmpsb
adc
mov
int3
sahf
enter
push
mov
fsubl
mov
sbb
cmpl
add
out
mov
inc
das
dec
shll
jbe
addr16
jbe
insb
sub
add
push
mov
enter
repnz
pushf
cld
push
movsl
adc
add
sahf
sbb
cmovnp
sbb
fcomip
cmp
insl
ljmp
das
inc
gs
jbe
inc
sbb
das
add
mov
in
sbb
jne
insl
mov
jp
cmp
iret
out
mov
mov
add
repz
mov
adc
push
outsb
out
cmpsb
loope
pop
roll
sbb
sbb
shl
movsl
push
add
fistl
std
sti
rcr
subl
xor
pusha
outsl
pop
cltd
add
out
movb
cmp
jg
mov
push
or
cmp
sub
andb
mov
ret
lahf
leave
dec
rcrl
and
fdivrl
aaa
subb
sub
pop
jmp
cmp
or
icebp
cmp
icebp
ss
adc
loopne
test
jp
mov
bnd
stos
dec
cmp
mov
movsl
mov
popa
fdiv
in
loop
fwait
ja,pt
jae
mov
les
inc
sbb
cmc
sti
or
roll
xchg
jp
bound
movsb
in
in
add
pop
or
rorl
adc
out
and
jb
popf
int
bound
xchg
or
outsl
jne
cmp
jp
dec
adcb
sarl
inc
mov
bound
add
stos
sbb
in
movsl
adcb
mov
xor
xlat
fcomps
add
stc
in
mov
imul
mov
inc
jno
rclb
xor
dec
negl
xchg
or
es
rol
es
xchg
or
jo
sbb
fdivs
mov
sbb
cmpsl
cmp
adc
cmp
je
idivb
adc
imul
xor
into
inc
loop
adc
sbb
cmpb
cmpsl
jmp
dec
add
pop
push
cmpsl
fcmovnu
nop
loop
negl
cmc
sbbb
push
dec
cli
fwait
test
fwait
sarl
or
int3
mov
mov
je
mov
clc
mov
add
out
or
fistpll
mov
mov
dec
adc
and
mov
getsec
or
data16
sub
lods
adc
or
inc
or
sub
push
jb
dec
xor
jns
push
mov
lret
jnp
push
push
mov
mov
push
cmp
jae
jl
orl
mov
cmpsb
jne
inc
dec
push
jle
sti
movsl
mov
cmp
xchg
insl
or
mov
orb
test
jne
pop
jecxz
sub
imul
cmp
adc
jle
ljmp
xchg
loop
fs
adc
dec
ds
add
fxam
fld1
nop
imul
aas
outsl
aas
inc
xchg
mov
ret
ja
or
and
std
lods
xchg
das
xor
inc
xchg
inc
lods
cmp
enter
mov
mov
add
push
imul
cltd
aaa
lret
push
lock
mov
cmp
cld
inc
cmpsb
sti
inc
ret
sbb
idiv
inc
std
nop
insb
push
push
xchg
mov
add
push
out
jb
arpl
cwtl
mov
xor
and
mov
pop
stos
or
dec
jl
xor
ja
adc
dec
lds
in
jbe
mov
fisttps
lret
mov
dec
adc
sub
cmpsl
push
xor
arpl
mov
xor
push
gs
and
test
adc
int3
sarb
jecxz
mov
gs
cmpsb
xchg
lods
jge
cmc
movsl
hlt
mov
cmp
ficoml
lds
mov
dec
pop
js
pop
mov
movsb
mov
push
test
pop
jb
push
dec
rclb
sbb
push
adc
cmp
add
and
mov
or
mov
insl
push
cwtl
sbb
adc
push
ret
or
xchg
mov
dec
shl
mov
xchg
jl
in
jb
aam
out
pop
add
cmp
xchg
gs
xor
inc
cmpsb
and
mov
cmp
mov
jnp
add
or
pop
sub
and
into
bound
cli
cltd
dec
ja
stos
fcoms
push
xchg
in
cmp
cmp
and
imul
mul
dec
cmc
jmp
mov
adc
add
add
stos
xchg
shll
scas
inc
mov
pop
pop
mov
repz
nop
or
sbb
cmp
movsb
nop
xchg
mov
popf
mov
cmp
inc
xor
xor
mov
adc
fdiv
out
adc
shll
and
sub
push
into
mov
shr
add
out
loop
and
mov
jo
mov
ds
call
adc
and
mov
lcall
xchg
cmpsl
sti
or
ds
mov
shrb
pop
fwait
int
lods
fcoml
lea
mov
pusha
add
jno
push
rorl
loop
cwtl
inc
push
jmp
fldlg2
rorb
xor
mov
divl
sub
and
sub
and
lods
iret
lcall
pavgw
xor
pop
sub
lods
add
aas
xchg
sub
lea
enter
mov
test
fists
fisubl
xor
je
imul
in
mov
jle
pop
out
sarb
xor
pop
jg
cmpl
mov
loope
out
push
mov
dec
outsl
arpl
mov
arpl
inc
sub
xchg
or
push
jae,pn
loop
inc
pushf
in
push
fs
dec
pop
adc
or
pushf
sahf
mov
mov
popf
adc
mov
std
pop
cmp
xchg
fdivrl
sbb
jle
xor
add
xor
cmc
rcrb
push
in
add
pop
mov
bound
xchg
xchg
test
sub
adc
int
add
or
js
push
sub
test
mov
inc
mov
xchg
or
lds
xchg
fcoms
arpl
mov
inc
mov
arpl
rol
lea
mov
mov
jno
mov
inc
jno
cmc
or
out
aaa
mov
sub
push
loopne
popa
xchg
fmull
scas
filds
subb
jecxz
jle
scas
cs
rcll
icebp
xchg
cmp
aad
mov
inc
push
sti
jbe
mov
push
adc
nop
mov
loop
negb
xchg
mov
xor
add
cltd
cmp
das
jmp
loope
push
test
cmpsb
xlat
data16
out
ficompl
sbb
aas
pop
mov
insl
mov
test
xor
mov
mov
gs
xchg
jae
mov
cmp
dec
push
push
jno
outsb
and
repnz
jo
or
cs
adc
inc
fistpll
cmpsb
int
int
sbb
xor
inc
push
add
movsl
jb
mov
lods
cmp
test
rcll
jbe
bound
push
das
mov
push
or
xor
repnz
repnz
pop
cmp
rorb
jb
sbb
std
scas
inc
adc
popf
mov
testb
sarl
repz
xchg
xchg
cmp
ja
jno
xor
lret
sbb
push
std
dec
roll
sbb
in
adc
les
push
dec
mov
cmp
xor
mov
sub
mov
add
adc
adc
insl
fcomp
hlt
add
es
xchg
mov
shll
cmpsl
jecxz
popa
cli
jg
cmp
adc
xchg
lret
outsl
xchg
push
test
dec
mov
pusha
push
xor
stc
enter
xchg
pop
cltd
fisubrl
dec
shrb
aas
jg
mov
mov
pusha
ret
enter
mov
frstor
andb
cmp
and
imul
sbb
jp
inc
mov
pusha
fbld
adc
stc
sahf
js
xchg
sbb
push
or
cli
push
cmpsb
stos
mov
sbb
in
fstpl
mov
cmc
out
insl
in
jnp
inc
mov
leave
pushl
push
mov
lret
add
push
fisttpl
adc
sarb
adc
int
aam
int
push
add
int3
pop
xchg
icebp
loopne
repnz
imul
loope
sub
fwait
sar
out
insl
out
outsb
and
and
call
cmp
call
ja
in
xor
jae
test
in
out
cs
insl
ljmp
push
call
int3
mov
cmc
imul
lods
xchg
and
cmp
repnz
jb
xor
mov
adc
xchg
fstpt
cmp
and
xlat
push
mov
adc
insb
incb
jmp
jg
xchg
mov
cmc
sahf
push
leave
mov
xor
jnp
jbe
or
ds
out
jns
test
jecxz
imul
xor
push
imul
push
inc
cwtl
loopne
mov
jmp
popf
pop
nop
pop
pop
mov
jnp
in
test
insb
push
or
and
lret
and
cmc
imul
jg
xchg
xchg
pop
push
lret
out
orl
or
stc
int3
cmc
into
int
mov
dec
cmpsl
jbe
jl
sti
adc
push
addr16
dec
mov
pop
js
sub
xor
test
jns
lods
lea
loop
mov
push
repnz
popf
movl
jecxz
dec
pop
inc
and
iret
cmc
pop
dec
sub
fnstenv
inc
outsl
jae
repnz
dec
jb
stos
ljmp
cltd
outsl
mov
xorb
notb
lahf
jp
sub
das
dec
dec
ljmp
test
xor
dec
dec
lcall
cwtl
sub
push
shrl
jg
jae
inc
mov
outsb
fstpt
mov
xchg
pop
push
fcoml
mov
adc
xchg
jle
or
out
adc
xor
dec
sub
xor
inc
jge
cmp
xchg
push
outsl
testb
sub
xchg
jge
aad
push
sbb
test
jmp
mov
sub
push
outsl
mov
iret
repz
es
mov
imul
jge
movsl
xor
je
add
insb
sub
mov
std
push
push
int
andl
test
mov
adc
inc
ds
inc
sbb
mov
jge
fs
mov
add
sbb
in
add
and
jno
insl
push
ds
inc
sbb
mov
and
or
mov
lods
xchg
sub
enter
dec
insl
loopne
jmp
pop
push
dec
inc
sub
jnp
int3
stos
cld
leave
inc
push
xlat
insb
mov
pop
push
lods
xchg
jno
sbbb
mov
outsl
jne
adc
mov
mov
push
jmp
sbb
sbb
call
cwtl
out
mov
pop
push
loope
rorl
xchg
jnp
fmuls
jno
lea
imul
and
cmp
repnz
out
mov
insb
mov
mov
out
sub
xor
inc
mov
ja
xchg
dec
inc
mov
rclb
jne
add
dec
pop
xchg
lahf
popf
leave
cmc
adc
xchg
fsubs
in
cmpsl
les
addr16
push
mov
testb
fwait
inc
aaa
mov
out
ljmp
mov
ret
int3
or
popa
and
pop
cwtl
mov
inc
int
inc
hlt
push
dec
mov
adc
mov
out
cmp
insl
jecxz
arpl
sub
and
popf
inc
icebp
out
into
in
or
movsl
mov
mov
pop
or
xchg
and
dec
push
dec
mov
cwtl
incl
pusha
push
jle
mov
pushf
jbe
xor
xchg
add
mov
and
xchg
pop
dec
int3
test
jbe
fwait
addb
jp
and
sub
jp
xlat
sub
bound
jno
add
lea
inc
test
lods
lahf
xchg
dec
and
mov
ja
push
push
jo
clc
mov
sub
pusha
jbe
scas
cwtl
jb
pop
xor
cwtl
jp
fisttps
lods
add
arpl
dec
shll
icebp
mov
rolb
mov
sahf
sbb
mov
call
add
stos
idivb
mov
fnstcw
dec
push
stos
sarb
sub
cltd
shrl
and
dec
push
stc
pop
cltd
mov
mov
icebp
pop
aad
div
in
mov
repz
jmp
imull
mov
std
testl
dec
pop
int3
dec
jp
xor
ljmp
jmp
mov
cmp
mov
iret
adc
sbb
jge
sub
fldenv
mov
cmpsb
fsubp
jns
sub
in
jae
mov
inc
loop
daa
xchg
rorl
repz
xchg
cmp
jns
std
in
sub
mov
shrb
jae
sub
xchg
addr16
push
outsb
push
xchg
es
cmp
ficoml
out
pop
shlb
mov
jae,pt
loope
mov
push
movsl
cwtl
and
test
cmp
and
stos
nop
scas
add
dec
sub
push
add
sub
out
pop
or
mov
test
gs
insb
repnz
cmp
mov
dec
dec
call
push
jecxz
mov
dec
jg
push
jp
leave
cwtl
test
imul
xor
imul
shl
jl
fsubrs
inc
cwtl
and
ss
mov
pop
cli
cmpsl
leave
outsl
sub
and
scas
sub
sub
sti
push
cli
adc
aaa
pushf
inc
ljmp
cs
jns
jo
js
inc
mov
sub
addb
lock
aad
dec
into
xchg
hlt
in
and
out
xor
out
push
inc
shl
push
sub
sub
push
aam
mov
push
adc
xchg
pop
in
js
push
loope
jae
adc
lea
fisttpll
popf
mov
mov
insl
lret
fstps
fdivrs
jae
jnp
jg
dec
pop
aad
dec
outsb
inc
mov
pop
sub
mov
movsl
or
je
sarb
into
push
lods
lcall
xchg
jb
js
data16
cmp
mov
inc
dec
icebp
daa
iret
mov
repnz
gs
xor
jmp
cltd
call
inc
sbb
cwtl
testl
inc
cmpsb
movsl
sub
loopne
lcall
mov
pop
adc
adc
roll
test
mov
arpl
les
arpl
stc
pop
fildll
test
loopne
or
or
jnp
cli
and
popa
mov
ret
xchg
aad
scas
insb
loop
ss
jae
inc
loop
pusha
jge
jno
sarb
sarl
test
mov
scas
fistpll
dec
xor
lods
paddq
push
cs
lods
lahf
repnz
js
arpl
jmp
in
push
push
or
xchg
pop
ljmp
std
push
and
nop
arpl
cmpb
sbb
mov
int
jle
xor
inc
mov
xchg
shlb
mov
adcl
call
fcmovne
hlt
mov
aaa
outsb
je
adc
daa
aam
jae
mov
cmp
cmp
and
inc
sbb
leave
popf
lret
imul
leave
ds
xor
jmp
out
mov
clc
xchg
xchg
add
push
lcall
sub
out
daa
gs
lods
sbb
cmc
mov
pop
jno
rcl
push
inc
dec
bound
mov
fists
cmpb
and
loope
add
jmp
pop
ficomps
inc
repz
rcr
adc
dec
or
add
mov
add
mov
mov
test
aaa
ds
scas
and
scas
and
mov
std
and
ss
xor
fs
fidivrs
std
or
jl
pop
aam
out
dec
inc
jecxz
sbb
shrl
lock
loop
stc
rcrb
cmpb
or
adc
repnz
dec
push
mov
pop
hlt
rclb
adc
adc
int3
jmp
mov
clc
pop
jo
in
xchg
out
pop
pop
negb
rcll
mov
push
loope
das
iret
sti
lock
pop
cmp
test
or
ret
movsb
jp
dec
fldt
dec
pop
pop
jns
hlt
subb
test
sub
push
and
mov
cmp
movsl
and
cmpsl
pop
rol
and
push
in
popf
rorb
fcom
outsb
dec
jp
jg
push
leave
seto
scas
cmc
jne
adc
xor
push
jne
idivl
ja
cli
mov
mov
add
inc
jmp
sub
or
fwait
mov
rcrl
pushf
dec
mov
cmpsb
xchg
pop
sti
adc
mov
push
xchg
or
and
mov
cmpsl
out
xor
mov
push
aas
repz
adc
mov
pop
imul
enter
cmp
sbb
jnp
out
pop
pop
ficoml
lret
cmp
aaa
in
sbb
nop
xor
js
pop
pop
in
and
cmp
in
rcll
mov
cmc
mov
and
mov
incl
inc
xchg
dec
xor
adc
roll
xchg
imul
in
push
es
inc
xchg
sbb
ds
clc
and
jbe
jns
lret
pop
pop
dec
leave
popa
ficoms
xchg
cmpl
setge
push
cs
hlt
mov
sbb
lea
test
sbb
outsl
pushf
dec
sub
cmp
pop
cltd
jg
shll
xchg
dec
mov
pusha
scas
adc
jge
xor
push
leave
insb
out
sti
add
cltd
fs
mov
into
lea
lahf
je
pop
push
jge
sub
sub
and
mov
dec
cmp
sbb
aad
lea
mov
dec
push
push
mov
xor
aas
jge
or
mov
push
push
mov
mov
idivb
jge
dec
arpl
mov
pushl
inc
fwait
neg
add
ss
fistpl
add
dec
add
and
mov
imull
iret
lods
sub
dec
jl
ljmp
push
cli
push
pop
inc
lods
sub
push
xchg
popa
xor
incl
aad
jge
repz
rorl
fadds
inc
lea
adc
dec
push
rcl
in
pusha
lcall
aad
stos
fwait
inc
adc
lret
ret
hlt
sbb
in
in
and
xor
das
nop
ja
inc
fcmovu
push
mov
fucomi
pop
je
popa
repz
es
mov
mov
xchg
mov
push
jnp
mov
or
jle
mov
pop
cmp
daa
cmpsb
jo
xchg
repz
loope
imulb
jmp
nop
ds
in
push
mov
dec
xchg
mov
pop
test
pop
jbe
sahf
bound
cli
fs
push
dec
sahf
xchg
movsl
mov
js
xchg
outsb
xchg
xchg
pop
rclb
dec
jae
push
mov
mov
inc
dec
imul
inc
adc
mov
ss
inc
and
pusha
or
jg
xor
out
add
jne
mov
aas
xchg
ja
push
jne
std
loop
aas
in
mov
and
xchg
xor
inc
andb
sarl
scas
test
leave
movsb
lahf
jae
orb
and
pop
daa
pushf
mov
pusha
and
push
mov
mov
or
aad
cwtl
push
mov
jmp
jo
xchg
push
hlt
or
fstpl
lcall
pusha
fldt
mov
call
sbb
sub
cmp
arpl
xor
shlb
sbb
mov
dec
or
aas
xor
push
sub
shll
in
aaa
enter
dec
push
lret
sub
pop
mov
dec
jbe
stc
xor
imul
push
int
push
lea
inc
cmpsl
push
jmp
aaa
add
jle
mov
mov
cli
xchg
adc
add
scas
sbb
inc
jp
mov
xchg
fldcw
mov
jae
jge
dec
push
or
test
mov
push
or
mov
in
dec
fs
sbb
push
popf
verw
dec
gs
in
pop
mov
jl
and
mov
mov
cmpsb
mov
jne
mov
fwait
idiv
cmp
iret
enter
jp
xchg
xchg
pop
rcrl
stc
testl
pop
push
aaa
mov
cmpsl
mov
fisubl
xlat
pop
jns
lods
push
mov
daa
fs
scas
cli
lcall
xchg
dec
outsb
pusha
jb
mov
iret
hlt
jecxz
pop
dec
or
sub
xchg
cmp
add
mov
test
pop
pop
and
lock
ret
jae
les
cmpsl
popf
or
subl
js
adc
ljmp
decl
gs
addr16
cmp
cmp
adc
loop
aaa
int3
sti
inc
jecxz
mov
mov
scas
shl
mov
cmpsl
cmp
xor
push
std
fcompl
jecxz
adc
ljmp
shll
cmp
mov
test
add
ror
mov
fistpll
es
sahf
repz
sbb
xchg
call
cmpsl
lods
enter
inc
insl
lods
popf
daa
jno
push
test
outsb
pop
add
pop
pop
out
ret
push
filds
jb
sarb
or
cmp
adc
push
sbb
mov
xchg
push
popaw
movb
sarb
pop
fucomip
stos
lds
hlt
xorl
adc
cmpsl
xchg
enter
push
push
cmpsb
int3
and
pop
popf
xchg
fnsave
jl
cltd
xchg
xor
jb
dec
mov
jnp
lock
mov
in
fwait
cmpsb
fnstcw
es
jnp
and
fisubrl
mov
stc
mov
test
testb
sarb
jae
jno
mov
mov
jle
dec
mov
push
push
pop
xchg
push
push
aas
add
dec
call
pop
cs
inc
pop
inc
je
inc
lods
xchg
movsb
mov
jno
xchg
xchg
dec
dec
call
int
pop
imul
and
rolb
ret
mov
iret
iret
mov
add
cwtl
jne
int3
lods
lret
ss
jae
lea
jns
sub
sub
dec
adc
popa
dec
push
mov
gs
xchg
cmp
pop
imul
pop
pusha
rorl
cmpb
xchg
inc
cmc
fwait
xlat
cmp
add
rcl
les
xlat
sti
push
mov
adc
dec
jbe
mov
aam
pop
mov
aam
jl
sub
daa
mov
stos
sbb
add
sbb
jmp
push
xchg
jnp
ljmp
pusha
push
prefetch
add
push
mov
roll
cmp
pusha
jecxz
insb
xchg
fdivrs
mov
sub
shll
xor
stc
pop
mov
adc
inc
cmpb
sbb
mov
cmp
stos
scas
sti
jl
pop
sbb
xor
inc
add
jmp
sub
push
inc
or
sbb
cmpsl
push
cmp
jecxz
lea
pop
mov
mov
mov
aas
push
add
xor
mov
mov
adc
jne
out
push
pop
jecxz,pn
lds
movsl
es
mov
xchg
ljmp
in
mov
mov
stos
push
xchg
leave
cwtl
mov
aas
das
in
sbb
orl
and
sub
and
pop
xor
add
addr16
jbe
add
mov
or
mov
push
test
xor
lock
lahf
sbb
mov
mov
jg
push
data16
dec
mov
movsb
in
jmp
fstpl
inc
push
test
mov
testb
mov
dec
xchg
inc
imul
jne
lods
inc
roll
imul
nop
loop
aas
fsubs
movsl
out
lcall
cmpsb
mov
fadd
leave
mov
and
and
aas
aad
es
xor
repz
popa
daa
or
shlb
mov
std
or
xchg
icebp
push
jb
add
and
sub
sub
mov
cmpl
add
dec
adc
jg
scas
pop
fisubrs
push
inc
testl
in
ss
sbb
add
mov
aas
test
sbb
cwtl
ret
lcall
stc
test
mov
lock
loopne
mov
iret
movsl
sbb
loope
or
mov
mov
lods
rorb
jns
cmp
int
lods
mov
sbb
int3
adc
out
adc
xor
xchg
pop
out
stc
pop
push
pop
stos
pop
fistpl
lret
inc
jbe
inc
pop
scas
jl
shlb
adc
pop
das
and
repnz
push
or
adc
out
jl
mov
mov
adc
and
fidivl
jbe
insl
gs
sub
lock
fwait
dec
sti
xor
xchg
iret
mov
daa
sahf
lret
mov
mov
out
sbb
cmp
rcrb
pushl
sbb
icebp
sub
mov
inc
or
dec
pop
jmp
ret
scas
lds
push
std
adc
int3
push
dec
xor
imul
aaa
enter
fdivrl
pop
call
xchg
into
add
sub
or
cmpsb
xchg
in
or
add
mov
jmp
inc
pop
pushf
sub
cmpsb
aaa
sbb
movsb
imul
arpl
lods
inc
xchg
cwtl
sub
add
std
stos
fwait
aas
sahf
jl
fmulp
ds
or
mov
inc
test
repnz
int3
test
sub
call
xor
push
arpl
fmuls
jle
mov
push
mov
pop
ljmp
scas
fidivs
push
nop
jae
insl
xchg
sbb
sub
loope
add
xchg
js
loop
mov
sub
sbb
sbb
add
ljmp
inc
mov
sahf
outsl
cld
xchg
out
inc
or
xor
insb
pop
pop
popa
mov
iret
cmc
inc
out
pop
adc
sti
into
shll
int
push
xchg
icebp
pop
fwait
push
lods
out
clc
or
mov
inc
or
popa
pop
cmp
xchg
fidivrl
mov
in
sub
dec
adc
mov
ds
push
mov
mov
js
push
int
rorb
ror
xchg
mov
call
add
mov
sub
neg
stc
pushf
shl
cmpsl
loopne
stos
jo
mov
cmp
mov
out
add
sbbb
mov
dec
cmp
addb
pop
adc
xor
inc
cmpsl
loop
inc
fidivs
cmp
test
jb
mov
mov
rorl
push
dec
dec
stc
cwtl
or
fidivl
lock
inc
jg
push
jno
sbb
jg
or
ja
add
in
fnstsw
shl
add
pop
into
mov
mov
insl
insl
mov
sub
cli
jecxz
idivl
test
mov
out
lods
sub
mov
aam
push
xchg
movsl
push
pusha
push
mov
pop
loopne
jle
movsl
stos
nop
sbb
test
mov
mov
dec
idivb
jne
rcrb
addr16
push
pop
testb
hlt
mov
push
mov
pop
shll
cmp
aad
out
push
cmp
inc
shl
adc
loope
shrb
mov
cmc
pushf
cld
std
out
es
jl
inc
lods
fs
sub
rcrl
cmp
fucomip
test
inc
lods
in
xchg
movsl
xchg
fwait
inc
jns
push
int
test
movsb
jp
fldcw
dec
sbb
sbb
add
xchg
ds
bsr
pop
mov
sub
out
clc
xor
jno
sub
xor
sti
lea
aad
in
jae
fcomps
cmpsl
mov
push
ljmp
dec
outsb
das
adc
cs
sbb
push
lcall
mov
inc
imulb
cmpb
jb
pop
jns
in
insb
ljmp
les
jb
ljmp
xchg
jns
dec
out
fwait
addl
je
jp
movsl
test
rcl
sbb
jae
adc
fadds
mov
aas
xor
bound
inc
inc
xor
cltd
cltd
or
dec
mov
out
lds
mov
push
pop
mov
scas
push
scas
pop
xor
cmpb
outsl
fimull
movsb
adc
mov
sub
mov
cli
call
push
mov
lahf
cmp
testl
xor
scas
outsl
and
stc
fs
scas
nop
ljmp
lods
adc
mov
xchg
and
and
test
pop
leave
mov
sbb
mov
out
sub
test
adc
push
test
adc
mov
or
cmp
sub
pop
into
pop
xchg
into
mov
mov
jg
xchg
ret
pop
push
adc
sbb
les
stc
hlt
jno
into
fcoms
sub
inc
nop
mov
mov
inc
push
push
mov
daa
inc
repnz
stos
cmp
and
popa
imul
add
xor
repz
inc
shrb
lret
sub
ds
adc
cmp
add
dec
pop
jno
test
stos
sub
and
add
jns
test
add
nop
push
rol
frstors
les
dec
out
xor
sub
sbbl
dec
testb
loopne
sub
mov
sub
pop
scas
out
add
lret
cmp
or
and
push
sbb
mov
xor
mov
xchg
lahf
js
movsl
mov
rep
jle
es
push
sub
mov
clc
int
pop
xor
inc
scas
test
arpl
sub
paddsb
ja
imul
push
xor
mov
sti
test
repnz
mov
jbe
or
out
cmp
shrl
push
mov
jnp
sbb
mov
mov
insb
jne
lea
or
lds
sbb
mov
dec
lods
aad
pop
pop
pmovmskb
stc
adc
negb
das
xor
sbbl
xorb
sbb
xchg
xorl
icebp
out
sbb
jne
jo
clc
test
mov
outsb
fdivrs
cmp
das
mov
cmp
or
mov
adc
or
js
mov
sbb
les
pop
daa
in
pop
ss
push
jne
mov
add
out
add
add
inc
and
and
push
out
sti
ds
xor
lea
inc
outsl
mov
in
jp
dec
sbb
movsl
mov
dec
xchg
xchg
xor
dec
rcrb
imul
dec
xchg
and
dec
dec
repz
fiaddl
pop
add
adc
test
cmc
jbe
inc
shrl
mov
clc
cs
mov
xorl
push
push
cmpsl
lods
inc
mov
adc
sahf
jne
addb
sbb
lods
pusha
shll
lret
pop
arpl
push
cld
add
das
dec
cmp
inc
loopne
icebp
xchg
ret
add
mov
movsl
jbe
testl
cmc
lcall
xor
out
shl
cmpsb
lcall
and
push
mov
jecxz
out
test
in
and
flds
xchg
mov
dec
test
fistl
aas
dec
dec
daa
jmp
dec
dec
adc
push
and
inc
imul
idivl
jg
xlat
fdivrs
daa
xor
call
mov
push
idivb
and
mov
addb
inc
adc
ja
popf
bound
or
xor
sbb
shll
xlat
dec
sahf
sbb
mov
push
test
cwtl
or
cmp
and
cmpsb
push
std
nop
mov
sub
xchg
push
testb
mov
ds
cmp
pop
stos
cmp
imul
ficomps
insl
mov
adc
cmc
sub
and
cwtl
add
pop
push
inc
ds
jmp
call
push
sahf
jnp
das
mov
cltd
mov
inc
jae
aaa
aad
or
es
push
mov
sbb
cmp
pop
mov
mov
mov
ljmp
mov
jbe
mov
jge
jbe
cli
sbb
outsl
mov
mov
or
add
and
pop
rsm
sbb
les
js
cmp
add
mov
add
cmpsl
dec
cmovge
pop
adcl
addl
test
je
inc
sbb
mov
xor
cmovae
xlat
pop
sti
adc
js
iret
mov
test
add
loopne
xor
pop
repnz
bound
in
pop
pop
dec
in
lea
mov
fidivl
fildll
leave
nop
pop
cmp
lahf
out
cld
mov
shrb
xorb
jnp
ja
lcall
sub
out
add
popa
sub
mov
inc
jbe
scas
testl
xlat
cltd
cli
aaa
lea
divl
jecxz
dec
cmp
sub
jne
inc
mov
pop
aad
int
cltd
in
iret
imul
lcall
xor
movsb
sub
jmp
and
sbb
mov
jns
aas
xor
and
inc
icebp
ljmp
shll
lret
out
mov
cmp
mov
dec
cli
cli
fistps
fbld
popa
mov
cltd
mov
jnp
andl
cmove
loopne
cmp
subl
rcr
imul
into
inc
or
nop
xchg
push
adc
sahf
ds
hlt
xchg
lret
inc
bound
jp
or
xor
cmpsl
cltd
and
movsl
or
icebp
pop
dec
repnz
sub
cwtl
xlat
cmpsb
cmpsb
clc
adc
loope
mov
jl
cmp
outsl
xchg
pop
outsl
pop
fwait
repnz
hlt
test
std
sub
stos
inc
inc
ret
mov
scas
data16
fxch
adc
lret
inc
jns
int
ret
jg
mov
jmp
or
icebp
pop
into
call
jp
addr16
ret
mov
addl
push
iret
push
mov
daa
adc
out
inc
mov
pop
mov
push
xor
sbb
jecxz
lock
mov
jb
ret
push
jbe
xor
sbbl
xchg
and
out
loop
or
cmp
sahf
mov
bound
mov
ja
mov
sbb
stos
fldl
mov
push
in
dec
jnp
cmpsl
mov
loope
add
fdivl
xchg
jne
xchg
mov
sub
dec
xor
mov
sub
rolb
pop
cmp
stc
loop
loopne
pop
jmp
mov
in
mov
idivb
jb
xchg
inc
xchg
mov
jmp
pop
stos
xor
loop
rcrl
js
pop
inc
push
push
test
or
dec
popa
pop
or
or
cmpb
add
imul
push
fucomp
mov
mov
xchg
js
adc
in
sahf
stc
jns
and
jle
ret
cmpsl
ljmp
stos
jb
lahf
repnz
add
insl
cwtl
cltd
inc
pop
and
sahf
cmc
test
inc
mov
sbb
cmc
cwtl
bound
scas
aad
dec
aas
shll
xor
insb
add
and
cmp
jbe
add
mov
nop
out
stos
xchg
dec
cli
fdivrs
cmp
xchg
andl
jp
loope
pop
push
inc
adc
mov
icebp
dec
mov
decb
ret
sub
sub
inc
inc
inc
or
and
add
movsl
por
mov
sbb
sbbl
fbstp
lods
xchg
notl
xlat
mov
arpl
int
sbb
sahf
mov
pop
aas
mov
xor
in
bswap
orl
repz
cltd
add
and
ljmp
test
push
sahf
sub
xor
add
or
repnz
jne
lcall
cmp
out
loope
scas
xchg
lods
inc
adc
push
xor
dec
sub
mov
or
insl
ja
sub
and
arpl
leave
and
fs
loope
inc
xchg
adc
jmp
into
rolb
js
push
mov
push
mov
int
fisubrl
or
movsl
xor
fdivs
push
jg
call
cli
mov
dec
ror
jg
fimull
mov
inc
imul
cmc
cmp
adc
imul
mov
mov
mov
mov
fstpl
mov
cmc
scas
adc
push
adcb
js
xor
mov
shr
loope
push
imulb
inc
jo
push
add
push
nop
ret
aaa
popl
rorb
fcmove
daa
lahf
out
popf
in
mov
lock
pop
sub
enter
xor
movsb
addr16
aam
popf
pop
imul
outsb
xchg
pop
dec
mov
mov
sub
mov
push
lock
icebp
mov
inc
inc
aad
test
in
cs
dec
test
mov
leave
fwait
mov
fs
add
aaa
sbb
push
fs
mov
aaa
insb
fadds
push
ret
rorb
rcll
jge
pop
bound
fdivr
jg
push
adcb
xchg
ja
int3
repnz
push
jge
movsb
mov
jbe
sub
pushf
js
cld
fs
jb
cmpb
add
mov
inc
mov
push
in
subb
imul
push
in
sbb
push
ret
jge
ds
xchg
jb
and
and
push
jne
sub
pop
mov
and
jmp
jo
mov
xor
in
pushf
mov
cmp
popa
adc
jns
sbb
imul
imul
mov
inc
mov
jmp
jb
sahf
daa
into
aas
mov
test
dec
pop
jne
subb
mov
mov
xor
or
gs
popf
and
lods
sti
mov
rclb
shll
add
nop
or
stos
xchg
loopne
aam
sbb
into
out
jle
jbe
sbb
mov
pop
dec
push
insl
cmp
faddp
bound
repnz
inc
xor
cmp
mov
and
jae
in
sbb
int3
sbb
ret
cmp
jecxz
xchg
insb
fwait
xchg
dec
adc
mov
mov
roll
enter
sbb
push
lahf
push
shlb
push
cli
je
in
mov
repz
out
ret
jno
test
xchg
add
inc
out
xchg
mov
or
adc
std
mov
sbb
dec
dec
dec
sbb
mov
mov
jp,pn
xchg
or
dec
negl
pop
pop
int3
pop
inc
or
out
call
dec
xor
dec
mov
sub
sub
push
mov
lahf
ss
sarb
out
in
and
add
add
cmp
aad
repz
lcall
pop
pop
shrb
sub
xchg
xchg
push
nop
sbb
insb
pop
movsl
cmp
push
cmp
shl
mov
mov
adc
js
pusha
mov
lahf
repnz
or
xor
imul
push
sbb
cmp
sbb
cmp
cwtl
dec
es
cmpsb
mov
orb
ret
adc
cltd
lcall
xchg
push
add
rclb
cs
jp
frstor
dec
or
xchg
jmp
jbe
push
mov
enter
cmpsl
sahf
pop
aam
adc
and
xchg
xor
insl
aam
fistl
test
and
mov
add
mov
pop
rol
shl
sub
out
lcall
mov
fldt
orl
insl
mov
loope
dec
dec
enter
loop
aas
lret
cmpsb
mov
xor
adc
sbb
clc
inc
je
or
xchg
ss
mov
rorl
int
cmp
or
pusha
jno
mulb
sbb
sub
rcll
xor
sbb
cli
mov
jmp
cmc
sub
jp
mov
inc
or
test
daa
xor
xchg
sbb
sub
mov
or
inc
outsb
loope
icebp
cld
lds
xchg
sub
sbb
pop
jb
ret
mov
xchg
dec
arpl
fmul
aam
and
mov
lret
leave
shlb
sub
sub
inc
popa
xor
add
aaa
mov
pop
and
xchg
pushf
or
ret
push
or
inc
les
jp
inc
daa
loope
or
or
push
jle
push
mov
jp
or
stos
push
leave
xlat
dec
mov
mov
inc
xor
xchg
dec
mov
mov
cmp
xor
adc
jbe
or
push
jae
xchg
inc
imul
lods
ja
sarl
in
cwtl
jge
cmp
lods
jb
cli
dec
rcr
pop
int3
arpl
and
decb
mov
lods
les
out
rorl
out
insb
xlat
fldt
adc
cwtl
dec
cmp
lds
jb
jne
outsl
ficoml
arpl
jl
xor
or
dec
xor
loop
jo
cs
pop
mov
pop
xchg
xlat
out
or
push
loope
mov
pop
adc
inc
push
int3
sub
aad
popf
flds
push
clc
test
push
adc
adc
and
jb
jno
push
xchg
inc
sub
pusha
mov
cmp
int
movsb
xchg
dec
adc
pop
lock
jne
adc
cmc
decl
popf
xchg
ljmp
cmp
push
or
add
out
int3
add
aas
dec
mov
outsb
andl
push
rolb
cmp
and
ss
mov
data16
imul
outsb
lea
movsb
les
jp
push
lds
xchg
mov
mov
sti
inc
stos
rcrl
repz
sub
push
mov
mov
sbb
add
cmp
test
mov
pushf
and
or
adc
mov
adc
xchg
and
xchg
repnz
sbb
movsb
and
xlat
ljmp
mov
scas
call
add
jge
pop
inc
enter
std
stos
sub
lock
fstl
mov
iret
cltd
lea
in
in
jae
mov
push
cmp
push
pop
adc
ljmp
push
int
inc
mov
push
cmpb
stos
mov
xor
xor
add
or
adc
xor
rolb
cli
repz
into
and
int
nop
xchg
out
inc
stos
insb
dec
lds
adc
mov
int3
inc
xchg
das
jl
repz
mov
test
fstpl
xchg
add
gs
mov
pop
lcall
nop
inc
mov
je
aam
les
shlb
push
inc
inc
adc
jmp
pop
jbe
or
into
sbb
pop
orl
push
adc
pop
lret
and
stc
mov
dec
or
mov
add
pusha
cmpsl
rcll
pop
pop
das
inc
out
repnz
test
icebp
negl
sub
mov
cld
mov
push
push
dec
push
outsl
push
jb
adc
sbb
inc
lods
adc
fwait
dec
fstpl
dec
cmpsl
movsb
sub
call
mov
jp
clc
mov
out
lock
es
jmp
push
fcoms
les
mov
cmp
pusha
jne
mov
sub
jecxz
repnz
mov
ficompl
jmp
or
iret
adcl
mov
decb
imull
lock
dec
ss
add
out
dec
sbb
ljmp
sbb
jns
cmc
out
out
pop
movsbl
rclb
test
push
aad
inc
xor
push
loopne
out
xchg
addr16
cltd
pop
outsl
loopne
addl
or
rcrl
xor
outsl
cmpsl
repnz
fisttpl
cmpl
andb
xchg
cmp
or
test
push
xlat
lret
imul
out
addr16
pop
adc
mov
icebp
mov
mov
and
js
sarb
in
push
lods
sti
aad
data16
clc
cmp
xchg
and
cmpsl
clc
clc
dec
inc
mov
mov
xchg
fs
jmp
jne
push
mov
addr16
ret
test
sbb
mov
fdivrs
pop
fwait
sbb
jne
dec
loope
xchg
jnp
jg
mov
data16
sbb
xchg
adcb
mov
dec
in
xor
sub
icebp
adc
or
mov
cwtl
lret
cmc
xchg
cmp
mov
sbb
mov
xchg
mov
ficoml
test
push
sbb
ja
into
add
pop
ret
pop
jb
push
lock
dec
lock
push
fisubrs
sar
fisubl
lcall
xor
jns
sbb
dec
ret
sub
push
aaa
sti
xor
test
lds
pop
ss
scas
div
in
cmp
xor
jecxz
arpl
les
aas
push
pop
sti
xor
addb
jns
loop
fsts
xchg
fistpll
sub
push
pop
test
mov
jno
xor
xor
push
mov
mov
xchg
data16
pop
and
or
jne
testb
sti
mov
add
aas
daa
mov
sub
faddl
push
adc
inc
xchg
mov
and
es
cmp
mov
pop
push
push
lea
js
rorl
pusha
mov
imul
adc
stc
or
lds
pusha
and
pop
mov
mov
dec
roll
outsl
push
sub
lds
pop
push
arpl
inc
ljmp
insl
mov
pusha
iret
std
test
inc
loop
sbb
xchg
mov
jmp
clc
out
mov
cmp
subl
xor
jmp
jmp
out
enter
dec
movsl
addl
xchg
push
sub
xlat
push
imul
xor
movsb
nop
mov
es
adc
bound
cmc
mov
call
cmpsb
add
sbb
xor
xchg
lds
sahf
int
das
mov
inc
dec
rol
loop
push
std
sarl
imul
jae
test
xor
cmpsl
test
pop
push
jb
arpl
jb
imul
loope
xor
add
jno
xor
push
push
orb
mov
mov
jp
mov
jno
push
dec
test
sti
jp
fsub
es
dec
cmp
mov
les
push
fsub
or
dec
push
ret
adc
and
bound
inc
jns
sub
add
call
decb
sti
into
inc
xchg
lret
das
mov
mov
mov
sub
in
cmp
sbb
push
lods
jg
pushf
outsl
or
jnp
or
jbe
or
iret
cmc
imul
loopne
cli
xchg
lods
dec
and
cmc
ss
cmp
inc
mov
and
call
xchg
mov
jno
mov
sbb
or
ret
fwait
xchg
addr16
dec
or
aaa
mov
std
sbb
pop
in
sub
test
sarb
inc
dec
loope
or
sub
dec
stc
stc
insb
add
inc
push
lea
lret
rorl
mov
mov
repnz
add
nop
sub
mov
lahf
xlat
mov
paddusb
cmp
movsb
adc
mov
and
sbb
int3
push
icebp
mov
cmp
mov
cmpsl
push
mov
in
pop
cmp
and
scas
push
push
xchg
mov
int3
xor
out
sarb
out
lods
shlb
mov
lods
push
sti
pop
add
test
adc
cmp
ret
repz
jo
orb
in
into
fadds
and
jo,pn
push
aad
push
cltd
out
outsb
or
add
nop
stos
sbb
dec
outsl
lods
dec
mov
mov
inc
inc
into
sbb
nop
mov
mov
sbb
pop
xor
pop
lret
rcrl
jno
sub
sbb
icebp
xor
mulb
mov
cld
cmpsl
add
mov
outsb
loopne
test
fcoms
test
adc
cmpsb
shll
popf
mull
fsubl
and
pop
inc
or
pop
and
add
hlt
jg
push
mov
push
insb
lods
jle
scas
sar
aas
daa
mov
adc
mov
cs
cmp
jecxz
pop
testl
clc
lea
or
jo
mov
mov
xchg
test
or
cmp
andb
adc
ss
testl
or
insl
and
pop
cmp
movsb
add
mov
jne
pop
fldt
int3
lahf
mov
jecxz
push
dec
test
mov
mov
jno
dec
mov
push
lea
jle
dec
loopne
cwtl
jno
pop
stc
or
or
jle
mov
mov
sbb
jl
out
push
jecxz
sub
mov
stc
cmpsl
fidivrs
ficomps
fsub
lret
push
adc
out
jbe
push
jbe
stos
jmp
inc
imul
sbbb
xor
mov
sahf
lea
js
sbb
push
mov
inc
and
mov
mov
and
movsb
mov
xor
popf
stos
adc
pop
popl
cmp
popa
adc
aad
push
cld
out
pop
pop
cmpsb
lret
jp
sbb
and
das
leave
xchg
lret
sti
test
js
hlt
jmp
mov
add
and
or
adc
or
and
mulb
das
movsb
decb
push
mov
nop
fs
mov
sbb
sub
rcrb
cld
sbb
ret
sub
xchg
adc
xor
xchg
mov
imul
in
shlb
mov
xchg
sbb
inc
mov
test
cvtps2pi
rcll
int
and
das
push
lahf
roll
aas
xor
daa
fildll
cmp
dec
cmp
into
arpl
inc
scas
or
pusha
jne
fldt
pusha
jg
clc
mov
testb
in
dec
out
mov
xor
pop
lret
cmp
test
fsubrl
insb
cs
in
mov
sbb
cltd
out
pusha
mov
sbb
stc
sub
int
or
sub
shr
out
push
cmp
cli
push
testl
cmp
pop
push
aad
or
iret
cmp
out
adc
nop
pop
add
clc
clc
loopne
xor
sbb
push
adc
sbb
add
dec
enter
dec
mov
lock
sbb
dec
and
mov
xchg
shlb
push
jns
jge
xchg
xor
fs
pop
jns
cmp
je
pop
sbb
bound
fs
fstl
cmpsb
cmp
xchg
mov
sub
xor
mov
dec
add
mov
push
and
movsl
dec
shl
adc
sbb
xor
popf
mov
ds
mov
loope
add
leave
lret
push
dec
es
jns
push
jo
out
add
mov
lea
roll
inc
andl
je
push
shll
arpl
inc
ret
ja
lahf
jecxz
inc
pop
ljmp
int
xorb
and
repnz
pop
out
aam
dec
xchg
xor
loopne
imul
or
adc
insb
shlb
pop
xchg
iret
int
pop
sbb
mov
push
mov
cli
dec
test
mov
pop
call
pop
shll
or
cmc
cmp
adc
leave
out
fwait
jp
xchg
jnp
notb
adc
mov
jg
inc
loope
mov
fldl
hlt
xchg
xor
loop
mov
cltd
sbb
mov
cmpl
jno
rcll
mov
push
xlat
stos
movsb
sarb
fldenv
nop
mov
add
popl
xor
add
outsl
jno
mov
mov
bound
aaa
mov
pop
jp
nop
data16
pop
shrl
lds
loope
iret
inc
idivl
scas
fsubrl
pop
xor
inc
mov
jne
mov
cmp
inc
js
cmc
or
pushf
and
jae
mov
xor
mov
sbb
cltd
in
pop
xchg
insl
push
decb
jmp
and
jg
cmp
shlb
inc
or
jns
inc
insb
mov
or
mov
inc
lods
aas
dec
and
inc
fsts
pop
hlt
scas
mov
das
add
mov
jle
or
inc
lcall
sbb
mov
push
xchg
xlat
stos
stos
jecxz
lods
or
ljmp
mov
insl
adc
xchg
jge
add
mov
xor
and
xchg
xor
mov
push
popf
adc
lea
jae
xor
lret
fsubs
adc
or
cmp
movsb
jg
in
loop
and
testb
add
cmc
sarb
lock
fstps
loop
notb
fwait
inc
mov
sub
loop,pn
aaa
mov
inc
je
or
cmp
lcall
push
rcl
fistps
je
pop
adc
repnz
clts
sub
xorb
sub
in
lea
dec
or
sub
test
out
ja
or
pop
add
bound
outsb
jnp
lahf
or
in
cmp
popf
in
jo
icebp
jmp
test
sbb
das
inc
xchg
rcl
lock
pop
dec
loopne
xor
or
jno
lret
dec
and
sbb
and
iret
into
loopne
test
xchg
shl
adc
dec
xor
popf
adc
nop
xchg
inc
or
xor
add
pop
jge
jg
clc
cmp
cli
mov
xor
or
mov
jae
or
sub
jnp
imul
and
loopne
dec
fwait
mov
add
lock
cmp
sbb
push
fisubrs
test
sub
add
xor
push
xor
cmp
sbb
mov
dec
ljmp
xchg
icebp
xor
int3
add
jmp
out
jle
push
jecxz
fildll
mov
fmul
sbb
xor
fdivrs
pusha
adc
int3
and
jae
dec
xchg
mov
mov
je
cs
jb
xchg
push
pop
cmp
xor
frstor
pop
cmp
in
fucomip
dec
dec
repnz
jnp
ret
or
out
mov
dec
movsb
stos
or
lret
loop
pop
inc
mov
cs
stos
mov
xchg
pop
cmp
popl
push
cli
sbb
pop
sbb
les
mov
pop
dec
mov
push
es
ret
jbe
xchg
in
leave
xor
push
sti
les
lds
imul
cli
cmp
jno
jge
xchg
stc
sub
imul
out
jl
sbb
adc
mov
dec
mov
cltd
pop
loopne
dec
xchg
mov
dec
pushf
jo
jg
ret
nop
repnz
dec
sub
mov
mov
pop
in
jns
dec
ss
mov
mov
cmp
rcrb
or
xchg
daa
inc
xchg
cmp
loop
xchg
mov
gs
in
into
xchg
loopne
mov
ja
lock
bound
mov
mov
cmpsb
inc
xchg
and
sub
clc
out
call
adcb
idivl
cmpsb
xchg
sbb
mov
mov
xor
int3
dec
jge
mov
xor
fildll
pusha
jecxz
mov
jge
xchg
push
jne
pop
hlt
enter
lret
lods
fsub
adc
mov
jnp
sbbl
mov
inc
imul
xchg
jae
or
stos
dec
test
or
inc
inc
lods
inc
xchg
sub
jl
cmc
push
sub
in
xor
pusha
fimuls
pop
pop
jb
inc
inc
inc
in
mov
xchg
jno
cmp
mov
stos
insw
je
cmp
jp
jmp
xchg
loope
call
lgs
jmp
push
jne
xchg
in
xchg
mov
jle
dec
cld
jne
in
sbb
es
pop
negl
les
insl
cmp
mov
call
dec
fisubl
nop
pop
inc
aam
pop
add
inc
inc
insb
leave
stos
mov
add
push
mov
sbb
sub
mov
jnp
test
or
mov
pop
add
xor
sbb
lock
xor
cmpsl
mov
push
int
mov
inc
inc
lret
sahf
mov
cmp
sub
and
std
fs
data16
pop
enter
xchg
lock
lods
jg
mov
cmp
cmpsl
add
pop
test
mov
insl
pop
pop
jns
std
stc
push
push
mov
add
jns
mov
ret
add
jge
mov
inc
mov
shl
std
sbb
call
int
cmp
pusha
rcll
lods
push
inc
push
push
push
cld
mov
mov
mov
in
adc
jne
pop
dec
fninit
adc
hlt
sarl
mov
jb
cli
cmp
nop
fwait
loop
scas
adc
roll
test
mov
pop
mov
enter
xor
and
nop
mov
fs
adc
test
push
add
stc
mov
xchg
add
sub
es
xorl
xchg
dec
push
dec
xor
pop
ljmp
sub
cmc
mov
fwait
jle
ds
pop
mov
loope
mov
out
aas
and
pop
xchg
mov
sub
mov
fldenv
outsb
or
pop
pop
cmp
out
sub
loope
loopne
mov
out
mov
push
pop
cmp
sub
pop
dec
fistpl
mov
cmc
ss
in
sbb
dec
pop
out
js
xor
add
nop
stos
lods
cld
lahf
out
dec
inc
loopne
sti
mov
sbb
test
add
adc
mov
adc
movsb
sub
or
aas
inc
push
fcmove
push
mov
mov
outsl
xchg
or
xchg
flds
bound
lret
pusha
xor
jno
test
int
stos
pop
inc
sbb
inc
ljmp
pop
cmpsl
jmp
jnp
lahf
pop
ja
cmp
inc
adc
inc
add
pop
out
mov
lods
adc
pop
pop
pop
jo
xor
jg
sbb
lcall
fwait
pushf
dec
mov
roll
sbb
dec
loop
dec
repz
cmp
add
scas
mov
xchg
std
xchg
aaa
mov
mov
popf
jo
cmp
jno
inc
sbb
imulb
dec
out
push
test
jb
rcl
scas
and
sahf
jne
xor
cmp
jb
mov
mov
xor
sub
pop
ret
mov
sahf
sbb
add
pop
and
popa
daa
mov
ja
addb
loope
stos
mov
sbb
xor
mov
adc
fldcw
cmc
push
inc
jbe
rorl
mov
dec
and
mov
jo
and
js
icebp
jnp
cmp
push
cmpsl
cmp
repz
ja
jge
xchg
or
cltd
divb
cmp
jno
xor
and
add
dec
or
push
jle,pt
add
in
inc
mov
and
jle
xor
cld
mov
ljmp
push
shl
adc
add
fsub
adc
jb
mov
push
dec
loope
and
push
cmp
test
mov
fistpll
dec
bound
fsubrl
cmp
push
in
xchg
enter
inc
pop
in
pop
mov
xor
and
adc
enter
les
jno
xor
iret
loope
xor
cmp
dec
sbb
int
push
in
push
nop
xchg
addb
jmp
in
cmp
dec
ret
leave
adc
push
test
movsb
xchg
push
jle
enter
xchg
pusha
xchg
inc
outsl
les
mov
sbb
xchg
jmp
dec
cld
scas
inc
iret
dec
stc
push
sbb
dec
or
mov
mov
ret
addr16
jecxz
ss
push
lea
push
jbe
inc
pop
xor
push
add
add
imul
mov
subl
xor
ljmp
dec
sarb
inc
loope
push
push
pop
xchg
cmpsl
push
sub
ret
push
pop
popa
dec
pop
jne
sbb
sub
repz
or
leave
and
add
push
inc
pop
push
inc
mov
jmp
or
and
xchg
inc
cld
test
pop
add
and
fwait
inc
imul
sub
sub
in
ja
xchg
ret
fnstcw
rclb
pop
mov
arpl
or
inc
scas
out
or
test
enter
push
mov
ss
mov
jp
ret
pop
xor
mov
mov
lods
loop
jne
lahf
push
popa
pop
xor
cmp
in
mov
inc
jno
cld
arpl
or
push
adc
cmp
scas
add
fisubrl
and
pop
push
inc
xchg
sti
andb
and
adc
scas
rclw
nop
jp
mov
fwait
nop
insb
lret
mov
pop
mov
dec
pop
push
shlb
or
pop
cmp
dec
inc
jae
clc
and
inc
add
sbb
mov
mov
leave
mov
push
sub
jae
sub
mov
and
imul
add
push
pop
mov
xchg
clc
fbstp
icebp
out
jb
push
fidivrs
cltd
xchg
sbb
fcmovnb
inc
and
add
insl
iret
add
sti
lods
outsl
xchg
adc
cwtl
out
dec
in
rcll
enter
cmp
fisubrs
adc
jns
mov
testl
inc
or
inc
test
jp
jg
cmp
les
fucom
and
cmp
lea
add
mov
mov
xchg
sbb
adc
test
adc
sbbl
and
push
add
mov
fsubrs
imul
jle
sub
sahf
mov
bound
mov
jne
xchg
mov
jmp
mov
sbb
outsb
imul
push
mov
sahf
lods
pop
inc
pop
mov
bound
xlat
or
data16
pusha
gs
or
out
into
sbb
sbb
insb
imul
clc
push
add
cmc
test
or
push
out
add
mov
xchg
mov
sbb
outsb
xor
mov
push
test
push
ds
movsb
sub
dec
push
leave
loopne
sub
pop
dec
xchg
repz
lds
jl
pusha
pushf
xchg
xchg
mov
sub
pusha
push
iret
movsl
or
dec
push
inc
nop
add
push
jae
sbb
xor
int
in
std
and
xlat
mov
mov
cmp
es
rolb
bound
mov
or
inc
add
lret
adc
jnp
outsl
push
sbb
mov
insl
test
lods
push
push
mov
sbb
test
imul
xchg
cltd
pop
movsb
add
adc
in
or
into
ljmp
int3
ret
cmpsl
and
outsl
std
push
test
sbb
adcl
pop
addl
inc
rol
mov
adc
insb
stos
sti
sub
xchg
cmpsb
pop
and
add
adc
outsl
iret
cmp
movl
rorb
sub
adc
and
ret
loopne
rcrb
inc
hlt
inc
xor
fsubrp
fucom
adc
mov
inc
mov
gs
divb
adc
test
add
push
cli
out
add
mov
mov
jns
imul
es
dec
add
lods
mov
push
push
pop
gs
push
push
outsl
cmc
scas
jecxz
cmp
push
dec
cmp
jbe
leave
pop
xlat
out
test
shrl
cmp
mov
shl
hlt
std
jb
dec
sarb
popa
xchg
and
sub
jne
mov
push
icebp
imul
shrl
outsb
les
mov
add
aaa
ret
mov
sarb
mov
lds
pop
mov
mov
mov
test
insl
jne
orl
pusha
pop
fadd
leave
dec
or
or
push
pop
cli
repnz
jmp
cmp
xor
shlb
stc
aad
test
or
call
xor
xor
adc
pop
pop
add
ret
jmp
popf
aaa
xor
cmp
pop
or
mov
pop
push
mov
mov
and
int
or
sbb
sbb
cmp
movsl
cmp
or
add
popa
andl
rcrb
imul
and
xchg
sahf
hlt
push
xchg
mov
ljmp
adc
imulb
fs
gs
sbb
xchg
dec
scas
and
test
divl
je
test
sbb
imul
jne
cld
fnsave
pop
mov
out
lret
outsl
or
push
push
push
or
jge
push
mov
push
mov
pop
inc
add
lret
jmp
dec
and
subw
inc
pop
mov
ss
adc
stos
jnp
jp
cmp
les
push
sahf
mov
pop
jmp
gs
pop
mov
sti
vpackssdw
mov
xor
fsubrp
sbb
outsb
push
ficompl
pop
push
or
sarl
adc
test
xor
scas
and
jmp
sbb
xchg
lock
and
mov
popl
repz
jp
push
scas
sbb
dec
add
iret
jb
jbe
pop
push
cmp
adc
mov
xchg
lods
mov
movsb
insl
outsl
mov
cld
jecxz
insb
push
setge
pop
adc
inc
or
push
mov
sub
int
jne
add
sbb
or
mov
sbb
xchg
mov
pushf
out
and
rcl
aam
cmpsl
jnp
sub
pop
pop
bound
jbe
pop
xor
add
jmp
or
test
or
std
jl
mov
xor
insl
rorl
add
fstps
shlb
xchg
movsl
fbld
ret
std
mov
mov
jne
or
mov
add
and
xor
in
js
add
imul
rcrb
mov
leave
push
add
jmp
pop
and
neg
popf
lock
and
xor
push
stos
bnd
adc
int3
ja
cmp
mul
mov
xchg
xchg
fidivs
mov
loopne
fisubrs
mov
mov
xor
and
push
loop
mov
dec
sbb
into
scas
dec
arpl
lret
lcall
arpl
lahf
cmpsl
sbb
push
sbb
inc
fisubl
xchg
insl
fadds
loope
nop
push
lods
or
mov
fucom
jmp
cmpsl
cmp
filds
inc
and
stc
push
cs
inc
xor
jge
jno
xchg
mov
shll
lods
out
dec
loope
jb
sub
add
sbb
pop
repnz
cmpsl
clc
add
mov
dec
push
adc
inc
and
dec
in
jl
out
and
jb
and
sbb
flds
rcl
lret
test
jge
shr
or
mov
pop
jge
pop
push
jmp
movsb
jb
sub
and
mov
and
sub
ljmp
mov
sbb
movsl
outsl
add
push
orb
sub
pusha
fisttps
cld
in
cmp
je
loope
aas
int3
xor
adc
xchg
pop
push
in
das
fadds
xor
imul
leave
insl
cmp
mov
xchg
add
cmp
push
daa
xor
idivl
lods
xchg
cs
mov
cmpsb
cs
fs
std
mov
testb
xchg
gs
stc
addr16
mov
scas
adc
jl
lods
jbe
push
fwait
insl
inc
lds
inc
test
ja
jmp
cld
push
jne
sub
sbb
push
xor
push
scas
iret
pop
pop
sbb
push
mov
arpl
std
cltd
inc
cld
lea
mov
pop
xlat
std
xchg
pop
fists
bound
push
inc
repz
dec
aam
pop
fcoms
int
icebp
lret
dec
out
adc
out
int3
ss
aaa
xchg
mov
sbb
stos
add
mov
add
mov
dec
mov
xor
das
jecxz
sub
out
inc
adc
das
arpl
jne
xchg
add
outsl
inc
popa
stc
mov
in
mov
jbe
in
sarl
sub
hlt
or
xor
push
xor
pop
push
xor
xchg
sbbl
popa
sti
stos
sub
mov
mov
add
sbb
popf
mov
fsub
mov
mov
loopne
mov
insb
int
das
dec
shr
push
xchg
lahf
sub
mov
loop
dec
pop
jno
mov
jmp
sbb
ja
mov
loop
stc
xchg
popa
and
mov
nop
pop
push
mov
in
mov
pop
xchg
add
sub
xchg
mov
leave
push
cli
sbb
mov
mov
lcall
es
jne
cmpsl
cmpsb
je
mov
sub
push
inc
xchg
test
enter
lea
jecxz
sbb
dec
or
ret
sar
imulb
jo
sarb
lcall
inc
lret
out
add
cmp
lret
rsqrtps
dec
int3
pop
test
into
mov
mov
xchg
insl
or
and
insb
das
jg
mov
inc
or
stos
in
push
addb
es
push
imul
aad
test
xor
jp
add
xchg
mov
jne
or
mov
mov
subl
stc
scas
and
adc
xor
mov
jb
in
ds
out
push
xor
and
sahf
push
jne
int
scas
add
lret
addr16
add
outsl
les
or
jmp
xorl
and
jl
xor
jg
test
insb
stos
test
adc
inc
icebp
jne
add
pop
xchg
xchg
cltd
ret
push
aam
nop
mov
push
lret
ljmp
out
ss
and
lock
sub
push
negl
jp
adc
or
adcb
popa
inc
mov
jbe
in
pop
adc
rcll
rcrl
notl
and
inc
cmp
rclb
arpl
mov
shll
cmp
add
out
push
iret
ret
mov
inc
sub
lea
mov
sti
es
sahf
scas
xchg
sbb
ret
xchg
mov
andb
test
pop
jbe
jecxz
jmp
xchg
sub
mov
popa
dec
push
stos
addr16
sub
pop
leave
dec
jp
mov
shll
sbb
push
pop
movb
and
pop
orb
inc
pop
dec
bound
jge
iret
insb
in
into
push
xchg
and
outsb
ret
push
jns
or
arpl
in
jo
in
add
stos
xor
pushf
push
sub
pop
das
ret
adc
aaa
mov
mov
mov
dec
aam
jno
lods
jbe
mov
pop
loop
leave
arpl
sub
in
pop
adc
das
xorb
insl
adc
inc
mov
mov
lcall
and
dec
jnp
mov
sub
aas
mov
pop
lea
add
jnp
pop
dec
imul
int3
imul
push
sub
sbb
pop
testb
xchg
cmpsl
jbe
sbb
stos
in
int3
es
cltd
cs
enter
adc
mov
outsb
icebp
pop
and
push
pop
sbb
push
lds
enter
cltd
dec
clc
sub
rolb
jae
push
dec
and
pop
sub
test
mov
ficomps
mov
insl
dec
filds
iret
cli
xor
pop
xor
rcrb
inc
je
pop
imul
mov
popf
pop
add
or
xchg
scas
nop
daa
xor
jg
std
leave
xchg
out
xchg
pop
aam
mov
popa
inc
or
test
nop
pop
mov
and
jno
out
fmuls
add
jmp
jo
xlat
arpl
mov
xor
sub
add
les
cmp
xchg
inc
and
jp
daa
nop
fisubrs
stos
outsl
adc
sub
ret
fcoms
jl
fidivrs
jmp
fdivs
cld
out
mov
imul
or
jae
into
test
mov
ret
pop
mov
pop
data16
fistl
ja
addl
cs
mov
cmp
dec
idivl
imul
adc
jp
call
pop
cmp
sbb
mov
sbbb
mov
fidivs
adc
push
cli
int3
mov
sbb
adc
push
iret
repz
or
push
aad
and
dec
adc
dec
daa
fcmove
mov
or
fwait
sbb
cwtl
sarb
lcall
ja
push
setnp
push
pop
scas
popf
ficompl
scas
test
insb
cmpsl
xchg
and
mov
fucom
lret
daa
mov
in
or
clc
push
cs
rcl
arpl
dec
mov
adc
aaa
sti
negb
adc
jl
stc
lea
cmc
aad
lcall
lock
cmova
xchg
add
and
cmp
sub
iret
jnp
bndldx
ret
cmp
xchg
sub
stos
xchg
mov
xor
sub
pusha
inc
shrb
mov
sti
call
jo
ret
sub
push
clc
cli
jp
testb
inc
fld
adc
inc
pop
cmc
mov
xchg
popf
inc
mov
addb
add
mov
shll
dec
pop
pop
xchg
jl
insl
ljmp
sbbb
fildl
push
xor
cmp
mov
cltd
lahf
and
jns
push
fmuls
xor
sarl
ret
mov
xchg
out
inc
ret
and
lock
mov
add
or
and
jmp
push
in
dec
das
ja
dec
jge
popf
mov
arpl
pop
adc
mov
ret
imul
sub
insb
jmp
jp
lock
xor
cli
jbe
movsl
outsl
ja
cmp
sbb
pop
pusha
mov
shll
les
cmp
mov
lahf
and
jmp
pop
pop
mov
mov
inc
add
adc
cli
and
mov
test
dec
sub
cmp
stos
mov
enter
mov
sbb
and
fwait
mov
lcall
sub
sub
js
sbb
sub
ret
and
and
aam
mov
rclb
push
or
pop
fst
push
lret
insb
mov
xchg
scas
repz
es
push
pop
and
adc
jae
fnstcw
cmp
cmp
mov
ret
lea
mov
fwait
int
xchg
adc
xchg
or
dec
mov
and
test
push
les
add
dec
mov
jp
popa
data16
pop
in
mov
lods
fimull
mov
inc
jle
cmpsb
xchg
test
rcll
paddsb
mov
lock
les
stos
dec
gs
jb
and
out
pusha
js
mov
test
jo
out
mov
mov
inc
push
inc
xchg
mov
arpl
push
inc
cmpsb
pop
push
adc
and
int3
ss
andl
xchg
cmp
shll
aas
mov
pop
push
mov
loop
stos
test
jmp
decl
bound
and
fwait
jns
inc
lods
inc
loope
ds
data16
repnz
add
int
xor
sbb
mov
mov
sub
jge
and
mov
and
pop
adc
scas
scas
xor
test
shlb
dec
dec
push
fisubrs
mov
pop
stos
sbb
xchg
aas
repz
repnz
pop
push
xchg
fisttps
mov
mov
iret
fsubl
fiadds
mov
xchg
jmp
fsubp
mov
and
push
and
cmpsl
or
mov
aad
ds
sbb
mov
negb
arpl
mov
in
xchg
jae
test
cmpsl
add
and
clc
bound
push
pop
inc
push
push
jno
addb
jecxz
sbb
add
lock
into
dec
xor
mov
xchg
decb
mov
out
in
loopne
xor
rol
je
add
addb
ret
cmp
loop
mov
arpl
inc
push
out
push
mov
fwait
bound
mov
les
add
add
cmpb
jbe
adc
dec
fyl2xp1
rolb
or
arpl
ds
add
stos
lahf
lods
sub
fstps
aaa
stos
fs
mov
mov
dec
dec
xlat
es
punpckldq
push
add
movsb
addr16
push
xchg
dec
mov
ret
sbb
jle
sti
into
pop
mov
movsl
jg
jae
cmp
dec
outsl
aaa
icebp
cltd
mov
rclb
adc
push
lea
and
dec
shrb
fs
in
rolb
push
stos
and
dec
addr16
cltd
dec
or
mov
fimuls
insb
jge
bound
leave
push
imul
cmp
inc
aas
pusha
in
push
adc
add
mov
fs
mov
xchg
or
jle
or
sub
je
int3
inc
dec
xchg
jl
and
add
test
ljmpw
adc
adc
out
sbb
lods
or
int
xlat
jno
test
xchg
loope
pusha
lret
ja
loopne
pop
inc
mov
pop
stos
stos
xor
sbb
sub
mov
pushf
sti
sub
push
pushl
inc
push
push
mov
mov
lds
repz
mov
outsl
rorb
pop
cltd
push
clc
fdivrl
push
mov
sub
mov
ss
sarl
push
lea
push
mov
inc
xchg
push
ss
push
mov
jp
inc
mov
loop
in
test
rcrl
xchg
aaa
mov
inc
out
insl
xor
repz
fsubp
call
faddl
mov
mov
lahf
shrl
sti
xchg
sub
mov
test
lock
sub
pop
out
mov
rcr
ficoml
push
xchg
mov
fwait
cmc
sahf
popf
mov
bt
or
adc
mov
pushf
adc
test
jnp
dec
jne
xor
add
pushf
jecxz
hlt
mov
rcrl
and
and
int3
and
mov
je
out
stc
dec
cmpsb
mov
sahf
xlat
sub
mov
outsb
xor
xor
dec
aas
test
mov
call
pushf
ret
test
stos
loop
mov
sub
sub
or
insb
mov
dec
fcmovbe
xor
les
xchg
jae
imul
cmc
sub
add
push
add
inc
push
js
jp
stos
xorb
test
hlt
pop
addr16
xor
fiaddl
subb
out
xlat
fxch
sub
inc
dec
icebp
push
cs
mov
outsl
fstpl
cmpsb
xchg
insb
aam
jg
cmp
sbbb
sub
add
fisubrs
sbb
cmp
pop
add
and
je,pt
pop
or
cwtl
nop
in
and
add
pusha
xlat
jo
shrl
add
lock
ret
sbb
pop
dec
pop
dec
mov
imul
out
cmovne
dec
inc
movsl
das
lea
int
addr16
lds
mov
shl
xchg
sarl
scas
mov
lock
stc
popf
icebp
or
jl
push
loopne
mov
outsb
pop
inc
push
movsl
mov
mov
lret
rolb
add
cmp
pop
mov
add
in
ret
scas
push
mov
mov
push
xlat
pop
pop
imul
fstl
mov
arpl
add
xor
sahf
cmp
es
jmp
mov
jle
inc
sub
ret
jae
lds
fisubl
sub
out
sbb
inc
inc
pop
inc
sahf
jl
int
clc
movb
lret
adc
mov
dec
adc
push
mov
jge
in
or
sub
shrl
js
out
or
daa
aad
call
es
stc
inc
pop
dec
jbe
xchg
ret
xchg
mov
cmpsl
out
ss
repz
call
xor
mov
xchg
dec
clc
fidivs
inc
push
movsb
test
push
mov
andl
insb
pop
and
inc
xchg
adc
cs
push
ljmp
cmc
pop
call
inc
test
lds
jnp
popa
call
push
inc
out
mov
test
hlt
aad
decb
sbb
ret
push
jno
and
push
add
pop
pop
or
out
jns
pop
inc
jnp
pop
xor
shr
mov
ret
dec
dec
jb
mov
dec
cmp
push
mov
ficoml
rcl
adc
into
imul
out
mov
push
lret
rcrl
dec
sbb
repz
test
fistpl
lret
leave
xor
or
adc
push
and
ss
and
dec
xor
adc
sbb
cmp
ja
lcall
lret
adc
sub
icebp
cmp
xor
pushf
mov
cmpsl
inc
pusha
aaa
loopne
in
push
test
shll
add
in
inc
aaa
faddp
sub
xor
test
sbb
sbb
pop
mov
scas
dec
mov
lods
mov
imul
cmpsl
pop
mov
outsb
sahf
or
icebp
cs
adc
dec
test
repnz
int3
fst
popa
sbb
lods
push
pop
scas
xor
divl
mov
repnz
movups
test
dec
sti
or
mov
fisubrl
and
cwtl
dec
in
inc
rcr
xchg
popf
mov
dec
divb
imul
push
jp
popa
popa
sub
test
out
push
and
imul
jmp
sub
inc
mov
cvtpi2ps
xchg
incl
mov
fs
mov
adc
adcl
icebp
cs
rcrb
jg
ficomps
popa
in
fimuls
inc
adc
test
mov
or
jg
cmp
test
adc
mov
dec
dec
xchg
insl
fistps
pop
leave
fiaddl
cmpsb
arpl
ror
mov
fidivrl
push
adc
push
das
inc
mov
mov
pop
lods
dec
inc
mov
in
nop
es
xchg
add
inc
int3
xchg
stc
cmp
jge
pop
pop
test
lods
dec
and
mov
xorl
jecxz
gs
movsb
lcall
mov
xor
lcall
inc
out
dec
cmpsb
fsubs
cwtl
or
sahf
inc
ret
mov
mov
ja
sub
inc
or
cmpsl
shl
mov
aad
scas
xchg
shlb
std
jl
hlt
in
fwait
sub
shrl
mov
lods
and
ret
cmp
fmull
rcrl
ljmp
lret
insb
scas
cmp
test
sbb
push
push
ds
fisttpll
stos
call
loopne
test
xor
lcall
cmp
fsubl
ret
jbe
xchg
aas
cwtl
arpl
mov
pop
dec
pop
rcrl
jb
popl
mov
imul
ss
sub
into
loopne,pt
flds
in
sub
pop
stos
lahf
mov
xchg
ror
mov
adc
lock
mov
dec
and
push
dec
aaa
mov
int
mov
pop
cmp
in
adcl
daa
mov
or
lea
push
pop
xor
mov
dec
mov
negl
push
imul
mov
adc
repnz
sbb
pusha
imul
js
lret
test
aaa
in
mov
xor
shr
lret
loop
dec
sbb
dec
pop
mov
push
or
and
sti
lea
outsl
xchg
iret
xchg
stos
or
je
iret
bound
loopne
inc
dec
jmp
movsl
mov
adc
js
xor
div
xor
nop
add
movsb
sub
inc
ret
jl
stos
inc
imul
or
jnp
ror
mov
adc
dec
cmpsl
inc
out
cmp
inc
mov
insb
call
jg
mov
cmp
je
je
insb
pop
addb
dec
sbb
sbb
mov
rcrl
and
xor
sar
sbb
daa
add
out
mov
imul
push
add
lock
fnstsw
dec
movl
sbb
mov
jecxz
jno
xor
xor
shl
adc
inc
and
int3
cwtl
outsl
shlb
andb
ret
aad
or
cmp
xchg
mov
mov
inc
mov
in
pop
sub
lret
in
enter
jp
lahf
jl
movsl
mov
sub
mov
mov
imul
push
inc
stos
sub
sahf
outsl
dec
fdivl
mov
int3
jl
add
pop
ja
sbb
fwait
mov
dec
xor
push
hlt
insb
and
mov
fisubrs
push
fistpl
push
push
movsb
cmp
fwait
pop
sbb
push
mov
push
sahf
xchg
imul
cld
cmp
lea
loope
add
adc
mov
jae
stos
xchg
push
rcrb
mov
mov
push
in
pop
les
dec
gs
js
aad
mov
mov
cmc
adc
shl
pop
in
push
sahf
xchg
push
sbb
not
push
ss
cmc
cmp
cld
cmpsl
js
lcall
sub
and
pushf
ja
pop
aam
sub
rcrb
xchg
cs
pop
ljmp
out
mov
daa
jnp
out
pop
fdivrs
aad
xchg
xor
aas
inc
lret
and
cmpsl
fs
mov
out
sbb
mov
xchg
mov
das
add
inc
dec
imul
setns
test
inc
lahf
insl
jmp
mov
idivl
and
inc
inc
sbb
jmp
cwtl
sbb
fisttpl
das
push
adc
addl
and
add
int
js
clc
mov
ret
adc
xchg
sbb
sub
sub
lcall
sbbl
and
pop
inc
mov
inc
sbb
jg
dec
sub
leave
jp
sahf
sbb
shrb
mov
sub
into
jle
movsl
xchg
mov
mov
jmp
cld
cmpsb
cld
fisttps
adc
nop
call
mov
sub
sbb
pop
cmp
into
addr16
insl
loop
mov
pop
cmc
cs
mov
je
mov
pop
pop
sub
data16
rcrl
shl
imul
insb
adc
movsl
lret
adc
and
repz
out
popf
sub
hlt
push
adc
idivb
gs
sub
imull
invd
int3
dec
call
fimuls
mov
jne
push
rcrl
cld
mov
and
pop
sub
outsb
icebp
jmp
cmp
mov
mov
int
push
test
push
xor
add
inc
and
movsl
fnsave
and
mov
add
aaa
or
ss
mov
xchg
add
dec
test
push
movsb
push
push
loopne
stos
test
add
sbbl
xchg
xchg
jb
dec
adc
je
jae
jle
outsb
push
cmp
pushf
lods
test
ss
out
push
sbb
jno
and
rorl
ja
pop
rorb
push
cltd
ret
rcll
lods
ljmp
or
push
pop
lahf
call
mul
jmp
imul
popa
es
push
push
push
decl
test
mov
mov
std
into
test
call
push
lahf
imul
mov
icebp
into
bound
xor
movsb
cli
jae
inc
or
xor
popa
mov
pop
pop
cmc
in
inc
les
into
adc
cld
gs
push
dec
data16
test
mov
mov
outsb
xchg
pop
fidivrl
jmp
lods
xor
pop
ss
dec
lcall
xor
pop
mov
clc
mov
xchg
add
or
lret
std
lahf
insb
int3
out
jno
inc
out
repnz
mov
imul
mov
out
popa
push
mov
cmp
lods
cmc
xor
in
mov
xlat
stos
scas
push
aaa
jb
adc
jae
psubsw
rorl
andl
dec
icebp
rorl
popf
rorb
push
fdivrs
lcall
jnp
pop
xchg
or
xlat
mov
jl
das
nop
ljmp
imul
test
xchg
xchg
clc
xor
mov
xchg
and
fmull
jmp
mov
lea
xor
outsl
mov
pop
sbb
fsincos
sub
push
stc
add
aam
mov
out
and
cli
negb
stos
clc
pushf
outsb
cmp
mov
pop
outsb
jne
popa
insl
packssdw
mov
pop
push
pop
shlb
jne
adc
sub
loope
xor
les
mov
rcr
test
jnp
test
xor
sbbl
shrl
xchg
lods
leave
loop
in
cmp
popa
pop
ret
xchg
mov
push
push
sub
mov
pop
fisubl
jno
arpl
mov
inc
jge
sub
or
scas
sbb
aaa
mov
pop
xor
adc
mov
jecxz
leave
popa
lar
xor
dec
sub
in
mov
ficompl
imul
es
aad
jge
mov
ret
inc
inc
xchg
test
inc
cltd
dec
mov
inc
xor
jle
popa
fcmove
addl
mov
mov
test
fcoml
sub
mov
out
hlt
add
sbb
dec
or
xchg
mov
call
pop
push
mov
mov
adc
daa
sub
pop
lock
mov
lods
inc
ss
mov
imul
jg
push
push
jl
hlt
shlb
push
ret
leave
in
loope
test
cmp
mov
stos
loop
inc
mov
sahf
adc
mov
scas
cmc
sahf
mov
dec
fistpl
adc
lcall
imull
jno
sbbb
push
push
push
hlt
nop
scas
stos
xchg
sti
xchg
inc
out
leave
adc
xchg
push
das
cmp
and
lds
add
popa
cmp
inc
inc
and
push
arpl
lahf
rcrb
jmp
shr
jns
adc
out
aaa
adc
mov
ja
sar
mulb
xbegin
icebp
adc
adc
out
out
xor
outsb
pop
cmovne
lock
lret
cmp
or
inc
push
into
fs
int
mulb
fidivl
mov
or
cmp
dec
push
cltd
sub
movsl
arpl
add
mov
jge
loopne
sub
sbb
and
mov
and
test
dec
in
xor
add
mov
push
jo
daa
mov
sbb
mov
popa
push
xor
rdtsc
add
les
loop
xchg
xlat
mov
sbb
inc
xor
cmp
jnp
leave
sbb
in
pop
repz
push
mov
mov
jmp
jle
ss
stc
loop
mov
das
xchg
std
mov
sahf
loop
faddl
push
les
mov
jns
fimull
and
imulb
xchg
icebp
sub
sbb
mov
cld
adc
inc
fisubs
mov
push
xorl
leave
rcrl
cmp
mov
xor
popf
sub
clc
xchg
es
xor
jmp
cwtl
mov
add
add
xor
orl
jge
in
std
jo
clc
jbe
ret
jecxz
lds
outsl
outsb
push
js
ficoml
lods
js
sub
dec
lods
mov
jmp
xchg
push
adc
andl
shrb
push
xchg
mov
mov
ret
ret
push
jl
hlt
shrb
sbb
jecxz
jns
and
jg
gs
cmp
jnp
jno
mov
out
js
inc
and
and
push
sbb
pop
push
dec
inc
pop
outsl
out
fsts
repz
pushf
iret
leave
jecxz
inc
dec
dec
adc
cmp
cli
dec
mov
roll
inc
test
fwait
hlt
pop
xchg
in
aam
pop
inc
shl
aad
fwait
mov
push
mov
jb
es
cmp
cld
mov
test
mov
xchg
xor
xor
xor
add
pushf
inc
mov
out
in
sahf
pop
into
or
sub
jns
mov
ret
xor
inc
adc
pop
mov
sbb
jg
mov
xor
fidivrs
jmp
mov
clc
int
outsl
adc
sub
les
stc
arpl
jb
mov
pop
sahf
pop
push
cmp
push
xor
lret
xchg
jb
xor
sbb
nop
iret
aad
leave
stos
add
shlb
adc
push
mov
jge
xchg
les
in
mov
bound
push
std
test
loopne
jno
popl
push
mov
sub
xchg
dec
gs
mov
mov
nop
cmc
dec
xchg
xlat
in
filds
cltd
sahf
xor
shl
cmp
xchg
pop
stos
addr16
xchg
xor
fwait
mov
lcall
dec
out
idivb
sub
nop
daa
ja
mov
lcall
pop
push
or
bound
std
adc
jg
adc
in
fwait
jge
cld
insl
and
mov
hlt
push
jae
xor
and
jmp
add
aaa
cmp
jns
dec
fisttpl
mov
out
and
aaa
js
add
mov
scas
mov
cwtl
je
sbb
adc
loop
sub
fs
sbb
outsb
lret
mov
rorb
adc
out
and
movsb
sbb
addb
lea
xor
shll
std
je
cli
dec
mov
mov
sub
arpl
jne
popa
xor
lock
movsb
pushl
addb
jo
stos
aam
pop
in
fs
cld
sbb
sub
cli
jl
mov
xlat
cmpsb
gs
orl
cmp
adc
imul
out
cmp
mov
jno
je
cmpsb
repz
aaa
lcall
test
js
cmpsb
int3
jnp
fildl
dec
adc
push
push
je
scas
insb
and
push
repnz
jg
and
sub
adc
outsl
test
mov
mov
mov
dec
int3
iret
lods
pop
jb
test
addl
mov
cmp
pop
ss
or
jge
out
push
lock
dec
jae
sbb
pop
rolb
jge
fsubs
inc
mov
jne
pop
xlat
fstps
sub
jo
into
inc
mov
leave
sub
adc
mov
shr
movsl
cmp
dec
outsl
jb
xorl
mov
jne
out
push
pop
mov
adc
or
push
mov
sub
fs
mov
mov
mov
add
adc
mov
into
cmc
lcall
jno
pop
lods
mov
fildll
sbb
mov
insl
dec
push
and
jne
outsl
enter
inc
aas
shll
dec
jns
rorb
cli
cmpsb
mull
int3
ret
cmp
dec
dec
or
sarl
loop
fldt
cmp
scas
stc
in
inc
xor
loop
enter
cmp
inc
insl
lahf
xchg
xor
mov
leave
inc
cmp
jno
jnp
and
mov
push
scas
shl
sub
negb
mov
pop
fstps
sti
lds
xlat
enter
inc
addl
sub
movsb
inc
insb
mov
mov
hlt
lcall
insl
mov
xor
movsb
sti
mov
adc
popa
out
sub
into
sbb
js
mov
mov
out
adc
xchg
jp
push
xchg
insb
cmp
in
arpl
xchg
pop
rcl
std
in
pop
jecxz
mov
rclb
sahf
shl
lahf
adc
cmp
and
in
scas
nop
mov
in
jns
outsb
stos
and
test
xor
daa
sbb
push
test
imul
loope
loopne
fcmovu
icebp
das
push
xchg
jb
loopne
test
dec
loopne
fsubrl
jge
imul
arpl
mov
lea
repz
pop
and
dec
or
sbb
add
inc
add
negl
movsb
mov
stc
sub
loope
and
pop
loopne
lods
loopne
dec
in
push
icebp
or
xchg
aaa
xchg
add
test
jecxz
lock
xchg
lock
subl
iret
or
xor
out
add
sbb
and
jbe
dec
inc
subl
movsl
jbe
int3
pop
aam
mov
jmp
push
mov
inc
loopne
cmp
mov
adc
mov
enter
mov
sbbl
push
pop
dec
add
jbe
xchg
xchg
inc
xchg
mov
shr
xchg
add
dec
push
sti
pop
mov
mov
std
jo
jg
outsl
xchg
loop
aaa
mov
inc
pop
pminub
fwait
dec
mov
incb
push
fcomps
xchg
rol
sbb
repz
push
loope
mov
mov
sbb
mov
add
mov
pop
js
icebp
ds
sub
sbb
inc
stos
popf
pop
outsl
jnp
sahf
in
sub
mov
int
mov
jb
mull
push
in
or
xor
imul
add
xchg
jmp
ja
adc
inc
adc
dec
cmp
addl
or
sbb
xor
cmp
mov
adc
shl
test
pop
mov
stc
pop
mov
addr16
and
sbb
aad
int3
pushf
testb
push
hlt
aad
sub
xchg
cmp
out
and
xlat
jno
push
mov
sbb
xor
push
fcomps
mov
aas
cmp
mov
stos
bound
push
shlb
lcall
adc
enter
fs
jbe
repnz
jo
xor
stos
outsb
xor
xor
mov
imul
add
add
mov
out
sbbb
dec
pop
sarb
push
adc
scas
into
jno
jne
mov
loopne
and
sbbl
test
repnz
movsb
inc
enter
pop
sbb
mov
xchg
ja
dec
mov
sti
adc
dec
movsb
sti
addl
push
xor
icebp
push
ja
xor
push
mov
cmc
in
loop
jg
dec
push
mov
cmpsb
xchg
sub
sub
jmp
xchg
fists
lret
add
xlat
notb
mov
sbb
je
aam
mov
jp
in
fidivrl
int3
sub
xchg
sub
dec
add
mov
sub
mov
inc
outsb
mov
sub
adcb
or
sbb
jmp
insb
loop
ret
sbb
inc
in
mov
pop
mov
mov
pop
push
je
test
push
sub
ds
sub
jno
outsl
pop
add
pop
xor
xchg
add
movsl
pop
cmp
adc
ret
xchg
jne
mov
push
imul
pop
jp
mov
inc
out
in
loopne
mov
push
or
xchg
adc
inc
enter
int3
or
in
inc
andl
dec
rclb
scas
push
cmp
dec
das
sahf
test
int
mov
push
mov
adc
rcl
pop
pop
nop
mov
mov
sub
mov
jo
in
mov
push
push
adc
sub
cmp
inc
jno
add
out
push
mov
sub
sbb
movsl
lret
mov
dec
xchg
daa
mov
jg
push
test
or
sti
sbb
push
push
dec
xor
or
testb
mov
loopne
mov
cmpsl
jmp
mov
jns
test
fiadds
ds
sbb
xchg
lahf
iret
xchg
shrb
cmovl
fimuls
hlt
imul
shll
add
lods
or
shll
pop
cmp
sbb
mov
adc
dec
dec
lea
pop
nop
pop
pop
pop
movsb
lock
shrl
mov
jo
or
cmc
mov
jg
cli
ficoml
jge,pn
por
int
int3
mov
sbb
mov
lcall
xchg
sub
xchg
sub
inc
mov
push
push
daa
cmpsl
and
push
fbld
xchg
addl
cmp
lea
addl
inc
add
cmc
and
or
mov
cmp
add
inc
mov
lds
jae
lock
lods
int3
sub
movsl
iret
pop
inc
inc
xchg
div
in
xor
dec
push
dec
cmpsb
ret
fs
fcmovu
xlat
adc
iret
ret
pcmpgtw
xor
int
mov
add
es
cmpsb
add
mov
sub
push
push
lret
popf
mov
divl
imul
pop
stos
lock
cmp
or
adc
lcall
popf
inc
data16
sub
mov
aaa
enter
sar
mov
adc
rol
cmp
pop
sub
fwait
inc
js
sbb
mov
out
js
loopne
jmp
pop
call
mov
jb
fstpt
pushf
test
dec
jp
out
aas
in
add
fwait
lds
cmp
lods
fsubrl
mov
or
mov
push
lods
int3
mov
out
bound
push
cmpsl
jg
das
dec
and
jle
adc
push
pop
fwait
pop
xchg
lret
push
sarl
sti
adc
mov
mov
pop
sub
inc
lock
shrb
push
sbb
adc
sahf
xchg
js
shlb
push
hlt
inc
jle
or
inc
hlt
ja
mov
pop
nop
push
xchg
add
test
pop
out
xchg
and
inc
sub
gs
xor
pop
and
mov
cmpsb
sub
cmp
and
add
popf
fmuls
dec
addr16
popf
into
inc
fst
cld
loopne
fninit
xor
and
lahf
stc
stos
push
aam
lcall
push
mov
mov
cmp
mov
push
mov
fisubrs
daa
mov
dec
mov
xor
nop
sub
dec
rorb
add
add
dec
mov
repz
sub
push
outsl
aad
cltd
inc
std
add
loop
push
jo
imul
dec
mov
rcrl
out
mov
mov
leave
sbb
ret
push
sub
dec
add
mov
test
pop
ja
ja
insl
adc
dec
sbb
mov
std
pop
sbb
mov
jecxz
loopne
test
fcoml
scas
sti
inc
pop
mov
icebp
addr16
movb
jb
or
jecxz
stos
sbb
stos
and
add
xor
cmp
xor
cmpb
std
scas
jae
cmpsl
mov
jmp
lods
pop
test
pop
mov
mov
cltd
movsbl
fdivs
repz
inc
push
sbb
fucomp
inc
movsb
popf
js
sub
mov
fcomip
inc
jno
mov
mov
jnp
sbb
enter
jno
lahf
xchg
cmp
mov
push
and
in
xchg
mov
faddl
in
cmp
or
xor
push
dec
nop
rcrb
mov
in
push
jne
mull
mov
mov
int3
mov
sub
add
mov
ret
pop
loop
sub
or
mov
mov
neg
fmuls
mov
add
out
lret
sbb
cmp
rol
jmp
pop
sbb
lds
jmp
sub
test
dec
das
sbb
inc
mov
dec
push
sbb
cmp
es
pop
xchg
mov
sub
xchg
jl,pn
lock
aad
push
movsl
je
jns
mov
fiadds
in
ljmp
xchg
fs
cmc
xchg
jge
es
lea
push
orb
call
adc
lea
mov
test
lahf
je
push
jns
or
lahf
pop
sub
pop
sbb
pop
lcall
int
xor
inc
cmpsb
jns
cld
dec
bound
idivl
sbb
rol
jg
mov
out
jl
inc
dec
mov
cli
add
dec
int
scas
xorb
add
jmp
fcomp
out
enter
cs
popa
popa
pop
into
icebp
enter
push
int3
mov
in
or
fisttpl
pop
pop
addr16
icebp
push
lret
push
adcb
frstor
adcl
mov
fnstcw
int
sub
cmp
mov
aam
xchg
or
fidivl
scas
mov
mov
or
sahf
jp
jo
mov
in
jmp
aaa
mov
push
push
out
mov
cmpsl
pop
bound
mov
xor
adc
inc
and
stc
jnp
pop
je
filds
pusha
jl
test
ret
jl
int
inc
mov
mov
sub
ss
fstpt
fsts
mov
push
xlat
ret
xor
xchg
cmp
jb
adc
adc
inc
jbe
jecxz
lods
inc
sti
or
dec
sub
add
push
cmpsb
in
mov
inc
js
xchg
add
jae
ret
and
enter
cld
mov
dec
push
sbb
adc
ret
test
pop
cltd
dec
jae
insb
jge
dec
mov
inc
push
dec
shlb
cmpsl
push
dec
lret
xor
jle
add
mov
mov
test
mov
pop
fisubl
mov
int3
daa
rcl
repnz
das
insl
push
sbb
out
sub
jmp
lea
adc
lahf
jmp
mov
jns
dec
or
dec
sahf
shll
dec
push
add
loope
xchg
jge
sub
mov
js
or
cmc
rep
jne
xchg
repz
jb
fisttps
mov
in
minps
clc
data16
scas
and
pop
out
loopne
scas
pop
adcl
repz
inc
in
insb
dec
mov
inc
lea
lret
aam
dec
add
jb
icebp
adc
cwtl
iret
cmp
pop
push
jle
adc
dec
sub
hlt
addr16
and
mov
repnz
or
inc
ljmp
into
or
pop
add
pushf
add
lds
ret
pop
push
mov
mov
daa
iret
in
fs
dec
mov
jae
fcomi
pop
push
ret
inc
jo
stos
movsb
sbb
mov
shlb
jnp
pushf
adc
xor
lds
jecxz
push
out
js
out
rcrb
ja
xorb
cs
mov
push
push
loop
outsl
imul
outsl
in
test
inc
int3
mov
in
sti
xchg
jo
jno
fldt
lods
lock
test
lods
sti
lret
pusha
ja
lods
fisttpll
mov
gs
mov
insb
fucomi
push
scas
pop
sbb
lret
push
cmp
push
nop
adc
adc
dec
gs
sarb
push
cmp
popf
jno
movsl
cmp
je
push
int
inc
sub
cmp
adc
lds
ret
or
mov
in
mov
iret
leave
sub
pop
dec
pop
int
dec
or
aas
fdivs
ret
pop
pop
hlt
jp
outsl
out
or
mov
iret
test
shrl
xchg
dec
mov
repnz
mov
ret
lcall
hlt
push
mov
push
push
out
iret
addr16
add
sub
or
outsl
stos
lods
and
std
dec
pop
pop
jnp
dec
aam
jnp
pop
pop
addr16
inc
imul
sti
push
push
pop
cmpl
xchg
rorl
push
mov
jb
sti
push
dec
inc
sub
movsb
cmpl
clc
lahf
and
pushf
jne
cwtl
and
or
in
sub
mov
icebp
cld
lahf
lret
xchg
xor
xor
mov
mov
cmc
add
cmc
adc
xchg
push
dec
jns
add
int3
jae
out
push
loopne
sub
or
cli
push
sbb
ss
ja
jmp
sbb
lds
pop
loopne
and
and
mov
inc
sub
into
jo
or
pushf
testb
pop
imul
pop
call
in
add
in
sub
popf
xchg
fs
and
mov
jge,pt
add
jmp
xchg
pop
and
mov
xor
inc
scas
pop
jmp
cmp
cltd
mov
lods
mov
and
das
sub
sub
jbe
test
push
and
or
push
xor
mov
test
int
or
shlb
aam
xor
add
cmp
pop
iret
outsl
cmp
dec
pop
jne
push
mov
in
sub
xlat
fistl
mov
gs
pushf
daa
sub
cmp
push
scas
and
dec
imul
push
add
shll
fwait
ret
adc
sbb
jp
adc
pushf
repnz
pop
aam
imul
aam
ss
mov
jle
sbb
stc
jmp
inc
push
sub
imul
pop
pop
pop
or
jg
nop
cmc
cmpsb
imul
aas
pop
lcall
mov
sbbb
xchg
pop
xadd
mov
add
ja
sub
call
jne
xor
test
aam
pop
adcl
push
mov
cmpsb
mov
jge
outsl
mov
stc
push
cs
fisubrl
or
sbb
pushf
mov
dec
jle
rcr
push
daa
leave
in
jp
mov
cmp
in
ja
sti
mov
xchg
rol
cld
mov
jecxz
pop
hlt
aad
loopne
movsb
adc
and
mov
xchg
sbb
jge
repnz
xor
push
or
imul
inc
fsubs
aam
and
inc
mov
insl
loopne
dec
nop
add
outsl
add
lret
outsb
std
mov
inc
imul
sbb
mov
or
cmpsb
fistl
inc
add
leave
cmc
popf
sahf
adc
test
jo
jae
mov
and
pop
mov
inc
mov
inc
pop
test
sub
stc
jns
inc
lret
jo
data16
iret
test
inc
xchg
xor
mov
int3
fcomps
pop
loopne
sbb
aam
inc
pop
push
xchg
mov
pop
icebp
xchg
sti
leave
test
adc
rorb
pop
pop
or
enter
mov
mov
xchg
xchg
pushf
stos
push
sub
insl
xchg
sub
mov
int
dec
jle
aam
leave
fwait
dec
jmp
mov
jae
or
icebp
xchg
adc
lret
sub
test
dec
sub
push
in
xchg
add
ds
shll
xor
test
cmp
dec
incb
sub
aad
ret
dec
push
stos
daa
ja
icebp
subl
aaa
adc
ss
ss
js
lods
lret
adc
movsl
ret
push
leave
int3
mov
imul
das
adc
sbb
sub
pop
sahf
enter
push
inc
iret
and
loopne
push
mov
test
std
mov
dec
shrb
outsl
mov
pop
hlt
xor
jne,pn
sub
divb
push
sbb
ret
es
mov
cmpsl
xchg
fmuls
lahf
or
add
negl
sarb
adc
movsl
daa
rcl
adc
pop
cmpsl
sub
push
loope
imul
int
outsb
sub
pop
adc
fwait
cld
mov
mov
inc
cmp
sub
dec
cmpsl
sti
ror
and
lahf
lds
orb
jmp
mov
sub
sbb
cmp
pop
jnp
jno
jno
mov
mov
xchg
dec
test
cltd
sub
cmpsb
push
push
cmpsl
loop
xchg
jno
mov
fidivs
aam
orb
mov
xchg
bound
push
fistpl
movsl
divps
mov
and
cld
jnp
jb
push
jge
mov
sbb
jg
sbb
push
xor
inc
scas
push
fistps
push
mov
jno
pusha
js
mov
ret
repnz
outsb
mov
out
dec
repz
loopne
lret
cmp
test
stos
mov
add
call
test
pop
mov
xor
cltd
lcall
jae
mov
xchg
fucomip
adc
mov
popa
notl
jb
inc
loope
out
scas
xchg
js
stc
icebp
leave
xchg
fildll
mov
pop
sbb
pusha
fdivl
add
sbb
popa
out
lds
sbb
in
cmp
stc
xchg
aas
insl
in
insb
fidivl
mov
xchg
clc
popa
lret
mov
leave
push
sbb
adc
sbbb
jo
pop
js
inc
ss
out
jnp
icebp
push
loopne
sahf
out
enter
lds
cmpsb
mov
or
jbe
mov
pushf
or
jbe
sub
nop
sub
cmp
test
xor
cli
sub
pop
sbb
or
adcl
push
push
div
adc
scas
and
cmp
dec
ljmp
pop
out
aaa
shr
sbbl
sti
in
ret
sbb
mov
out
stc
ss
lods
jns
mov
jae
enter
dec
add
mov
mov
or
test
shr
popa
leave
add
out
jb
divl
mov
sbb
xchg
xchg
xchg
cli
sarl
cmp
mov
shll
rcrb
xchg
push
dec
mov
cmp
pop
ret
push
inc
xchg
lcall
mov
clc
shll
jns
jg
pop
pop
mov
out
cmp
in
into
dec
stc
push
mov
stos
push
ror
cmp
or
rorl
cmp
cmp
in
fs
and
notb
cmp
xchg
pop
mov
test
enter
imul
fs
stc
mov
mov
outsl
sbb
fstpl
cmp
jle
sar
popf
fisttpll
push
jnp
lea
inc
cmp
mov
repnz
pop
cmp
add
mov
in
push
subb
cmc
ret
push
out
xchg
test
decb
xchg
mov
js
or
popf
jmp
stos
jp
aad
out
int3
xchg
adc
xor
call
cmpsl
mov
push
int3
fsts
jnp
xchg
das
imulb
adc
mov
jno
xor
or
mov
outsb
jecxz
call
leave
jo
xchg
test
push
inc
dec
push
dec
pop
in
adc
incl
pop
push
mov
repz
out
mov
dec
js
lret
jbe
inc
mov
xchg
dec
cmpsb
ret
xchg
push
and
imul
repnz
mov
fdivl
not
and
movsl
lret
adc
stc
inc
daa
fistpll
pop
dec
adc
mov
sub
repnz
jns
and
xchg
clc
es
and
sarb
xchg
or
mov
push
cmp
mov
insl
mov
pop
ja
clc
outsb
or
mov
adc
mov
jb
das
aas
stc
hlt
sub
cmp
push
sub
les
gs
xor
fists
cld
mov
inc
xor
insl
xor
jo
mov
cmp
and
and
mov
insb
and
pushf
lods
mov
pop
cmp
mov
push
popf
sbb
xor
mov
dec
fisttpl
sarb
in
or
sbb
call
adc
shrl
pop
cmp
cmp
pop
sub
mov
xor
sbb
xchg
dec
fwait
dec
cmpsl
test
mov
or
sbb
cltd
add
inc
sub
lret
sbb
pop
dec
mov
aam
xlat
aam
notl
mov
mov
cmc
mov
sub
xor
js
xor
xor
fwait
adc
push
jmp
sbb
and
and
or
bound
ljmp
mov
cmp
data16
std
or
ret
int3
and
add
xor
jg
les
mov
lcall
enter
mov
push
stos
or
mov
mov
punpcklwd
loop
mov
test
adc
and
scas
fwait
gs
ret
cmp
and
adc
dec
mov
mov
loope
test
or
sbb
sub
and
xor
in
notb
cmp
and
es
mov
leave
loop
xchg
dec
ret
mov
ss
outsb
aad
shl
mov
xchg
jle
pop
subl
pop
push
inc
pop
pop
jns
lcall
out
push
aad
out
in
stc
xchg
daa
dec
dec
mov
mov
add
jae
icebp
dec
mov
lahf
xlat
jns
loop
sub
xorl
mov
xor
sbb
ds
push
mov
inc
xchg
inc
adc
cmp
dec
data16
mov
push
scas
xchg
xchg
aam
xchg
aad
push
fsubr
lds
data16
adc
lea
cmp
test
pushf
push
mov
cmp
dec
test
mov
mov
ficoms
pushf
pop
fimuls
scas
push
ds
xchg
dec
cmp
sbb
push
mov
push
cltd
test
into
out
js
mov
push
cmpsb
out
popf
mov
popl
in
stos
stos
loope
mov
jae
jg
out
mov
ret
outsl
in
adc
push
adc
fidivs
inc
xchg
dec
imul
adc
cmpsb
jo
xor
outsb
js
adc
icebp
xchg
lea
lret
test
ret
loop
test
testb
mov
mov
inc
movsb
push
stos
icebp
adc
xor
gs
adc
adc
dec
inc
mov
xchg
push
mov
lock
adc
nop
hlt
xchg
es
dec
dec
loop
or
add
mov
je
cmpsb
push
mov
jns
sar
cmpsb
mov
mov
ss
fidivl
pop
adc
jp
test
and
cmp
loop
js
imul
mov
call
pop
sub
mov
mov
mov
sti
jb
outsl
adc
popa
mov
cmpl
xor
insl
push
xchg
aas
rcrl
cmp
cmp
mov
mov
stc
aad
xchg
jb
ljmp
fnstsw
mov
int
stc
push
call
decl
insl
pop
mov
pop
and
fsubrp
jge
out
fsub
repnz
xchg
aas
cmpsl
cmpb
xlat
and
or
int
mov
dec
sbb
add
jne
aaa
adc
shll
lods
adc
add
mov
cmp
stos
call
mov
lods
add
fisubrl
cmp
xchg
bound
lods
mov
or
jmp
lcall
or
popa
pop
or
jg
insl
mov
rolb
sti
pusha
cmp
xchg
jp
jae
out
push
andl
cmp
call
lea
sahf
adc
lock
pusha
repz
inc
negl
mov
xchg
sub
lock
test
push
jno
sub
push
dec
bound
lret
out
cmp
ficoms
mov
add
call
or
sub
sbb
mov
icebp
shl
mov
xchg
mov
hlt
outsl
xlat
xchg
inc
les
add
xor
in
ja
cmp
sub
in
out
xorb
adc
sub
fwait
mov
js
dec
mov
cltd
add
aaa
ret
mov
xlat
mov
insl
pop
sub
fs
std
sub
or
and
daa
adc
hlt
mov
dec
shll
or
xchg
mov
mov
shlb
test
popa
aaa
lea
sarb
fistl
xchg
cld
push
jae
cmp
jecxz
add
lds
and
mov
sub
daa
sbb
or
and
dec
and
pop
rolb
gs
mov
mov
xor
cltd
inc
movsb
ret
sub
repnz
lods
or
cmpsb
and
imul
adc
cltd
outsl
pop
cmp
sti
cmp
data16
or
fcmovnb
or
sbb
call
lods
pop
imul
out
hlt
mov
mov
and
pop
inc
stc
shlb
pop
push
insl
sarb
mov
cs
sub
test
xchg
aad
scas
test
cld
xor
insl
mov
fwait
lret
xor
xor
fstpt
add
inc
fdivrs
xchg
push
cltd
cmp
dec
and
mov
cmp
nop
sub
cmp
and
adcl
mov
addb
push
and
out
divb
adc
xor
inc
je
add
out
mov
in
inc
dec
and
fsubrs
push
lock
test
frstor
jl
sub
sub
clc
mov
mov
push
or
test
ds
stc
sahf
je
cmpl
lock
pop
pop
inc
std
sbb
repz
sub
neg
push
je
movsb
aad
mov
cld
fs
clc
repnz
pop
fneni(8087
nop
pop
lahf
mov
dec
jmp
ud2
mov
xor
inc
xchg
test
sub
lret
cli
dec
fldl
sub
fldt
lock
mov
aaa
sbb
cmpb
fldt
imul
cmp
shrb
xor
inc
insl
sub
xor
pop
fidivl
add
add
or
or
push
pop
adcl
clc
dec
hlt
jo
cpuid
sarl
cwtl
roll
add
ds
or
mov
xor
loopne
sub
xchg
push
fnstenv
nop
ffree
bnd
js
xor
pop
mov
push
mov
pop
aad
dec
insb
dec
fmul
and
push
jb
lahf
sub
pop
pop
fs
addb
cmpsl
outsb
out
stos
out
std
add
inc
push
cmp
mov
inc
jmp
test
idiv
jo
pop
loope
xor
into
sub
cld
pop
out
mov
les
insb
mov
stos
mov
lret
sub
fsub
icebp
add
xor
sub
adc
xchg
mov
les
in
or
test
jnp
aam
in
or
imul
mov
lods
add
insl
in
add
loope
test
sbb
shll
push
loopne
pushw
test
addr16
sub
dec
into
mov
cltd
pop
xor
push
mov
out
sti
push
pop
leave
test
sti
mov
jmp
push
jle
popa
mov
push
mov
pop
mov
and
inc
je
xor
ret
cmp
mov
and
repz
lea
test
and
adc
pop
vpmaddwd
jns
int3
stos
pusha
fiadds
and
ja
pop
movsl
mov
push
add
call
and
xchg
pushf
int3
pop
sub
sti
cwtl
cltd
add
loope
rcl
push
xor
xchg
fistl
dec
xor
outsl
xchg
or
jge
loop
stos
mov
add
pop
sbb
sub
xchg
scas
add
shll
push
sub
pop
jne
aaa
ss
push
cmp
add
mov
test
push
test
loop
adc
sub
mov
test
imul
and
dec
popf
negb
sub
gs
adcb
pop
mov
adc
mov
dec
push
cli
cmc
adc
jmp
ja
add
mov
inc
inc
jmp
cs
adc
fs
and
inc
pop
insb
cmp
inc
mov
into
in
add
addr16
negb
mov
inc
mov
jle
ja
out
jg
pop
xor
ror
ficompl
xor
test
mov
cld
and
sbb
mov
mov
lret
mov
pop
xor
pop
sbb
lds
add
cmpsl
int
mov
cmp
aaa
in
jge
shr
nop
fisubrs
mov
in
inc
lret
mov
dec
xchg
xor
pop
std
aaa
and
pop
xor
in
jbe
adc
lret
inc
xor
sub
clc
inc
shl
and
jl
mov
test
inc
jl
outsb
or
mov
xor
push
je
dec
rcll
int
or
or
or
jge
and
sub
out
add
sbb
pop
loope
xchg
fmuls
sbb
lret
bound
ss
cwtl
and
scas
stos
xor
mov
sub
icebp
cmpsb
icebp
jmp
jnp
jp
fnstsw
das
cmp
xor
mov
add
push
and
dec
sbb
mov
pop
cmp
imul
popa
mov
mov
or
mov
inc
es
loope
aad
fwait
sub
mov
adc
aas
adcl
pop
mov
mov
jae
jbe
push
push
repz
nop
cmp
jge
das
fdivs
mov
push
enter
outsb
das
mov
lds
pop
pusha
adc
cmp
push
ljmp
ret
mov
cltd
adc
inc
insb
popa
les
popa
xlat
pop
dec
ret
fsubr
mov
jle
insb
fimull
jg
mov
int3
adc
fnstenv
mov
xlat
xlat
lahf
xor
outsb
mov
je
insl
pop
or
mov
and
mov
lods
idivb
add
adc
imul
jmp
jns,pt
and
in
sbb
imul
mov
dec
sbb
out
add
cmpsl
js
push
push
pushf
sub
push
xor
jno
sbb
cmp
and
or
push
pop
jns
ficomps
lods
aaa
pop
or
pop
es
xchg
add
push
push
jns
xchg
adc
addl
push
out
pop
imul
pop
out
cmpsb
out
inc
and
cmp
fs
rolb
scas
std
or
into
mov
jmp
xchg
xor
out
jecxz
imul
out
xchg
sub
pop
sbb
outsb
lods
in
fwait
popa
call
mov
insb
hlt
aaa
jo
or
and
pop
mov
cltd
push
or
adc
es
mov
or
sbb
aaa
xchg
sbb
jmp
pop
mov
dec
mov
dec
sub
mov
push
movsl
shrb
shll
dec
jns
es
stos
dec
cmp
dec
jl
cs
sub
jno
pop
dec
rcrb
in
arpl
xchg
cmp
in
jecxz
pop
enter
outsb
dec
ds
sbb
ljmp
push
jo
mov
test
xor
mov
in
shrl
rcll
iret
notl
pop
inc
xchg
push
in
hlt
test
jno
xor
lahf
sbb
xchg
push
les
fistpll
test
movsl
cmp
out
les
sahf
aam
pop
or
xor
cmp
xor
jle
mov
or
arpl
sbb
mov
mov
jecxz
fabs
inc
push
pop
test
mov
xor
inc
out
pop
lock
mov
push
popf
xor
push
pop
enter
mov
push
push
and
lds
lret
push
lock
scas
jbe
outsl
lods
pop
jmp
mov
mov
push
pop
xor
leave
lret
cmp
insl
pop
in
inc
mov
les
aaa
sahf
push
hlt
dec
push
adc
popf
push
mov
pop
pop
sahf
rcrl
call
sti
mov
push
dec
xchg
xor
dec
les
push
or
stos
jns
imul
fs
pop
mov
or
push
scas
xchg
mov
dec
jge
adc
clc
pop
mov
ss
mov
sbb
jns
mov
push
outsl
gs
mov
cltd
push
mov
and
and
push
jle
pop
push
push
mov
gs
cmpsl
iret
cmp
imul
and
aaa
jmp
push
inc
push
lods
adc
mov
insb
and
add
pop
xchg
fiaddl
jbe
shl
mov
push
insb
sti
aaa
inc
arpl
pop
adc
mov
adc
je
aas
scas
cmp
and
testb
dec
rclb
fdiv
push
dec
jne
pop
test
sahf
test
mov
adc
jle
psraw
dec
ss
or
sbb
rcrb
jl
pop
mov
push
jge
dec
mov
stos
jno
cmp
jmp
int
or
mov
cmp
es
pop
addr16
pop
pop
jbe
aas
mov
pusha
mov
lea
cmp
std
inc
cmp
mov
mov
push
cli
cwtl
xor
adcl
lods
in
or
push
call
aaa
cli
add
cmc
out
loope
test
popf
lea
fimull
sbb
jge
jmp
nop
bound
cmp
cmpl
pop
imul
mov
adc
lea
movl
mov
pop
pushf
jne
or
imul
frstor
je
fisttpl
adc
dec
shrb
xchg
ds
stc
incl
mov
pop
insb
scas
frstor
cld
xchg
xor
sub
sahf
or
fs
in
popf
or
das
or
inc
test
push
pop
ja
xlat
pop
lret
sahf
push
in
sti
movsl
popf
push
lret
pop
mov
pop
sbb
mov
jmp
sahf
je
out
add
imul
pop
adcl
insb
inc
add
fninit
mov
outsl
lea
push
mov
aad
push
jl
jl
mov
test
adc
dec
xchg
movsl
cmp
push
dec
mov
in
cwtl
push
in
adcb
les
push
or
sbb
stos
orl
pop
cs
pop
xchg
mov
xchg
and
fdivrl
