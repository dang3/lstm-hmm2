jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
xor
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
jns
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
popf
or
push
push
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
adc
mov
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
sbb
add
addb
pop
inc
add
add
or
lea
mov
add
mov
add
cs
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
addr16
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
pushl
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
ret
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
adc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
js
inc
add
cmp
je
mov
cld
xor
pusha
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
cmpsl
or
add
ds
rolb
add
jg
inc
sub
add
je
and
and
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
outsl
add
add
inc
and
push
inc
and
clc
cmp
sbb
pop
and
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
pop
add
add
add
push
push
call
test
js
lea
lea
inc
and
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
push
add
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
pop
inc
add
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
sub
call
pop
lea
cmp
xor
add
cmp
or
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
and
dec
and
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
push
push
call
mov
cwtl
pop
add
add
outsl
outsl
pop
jl
arpl
add
pop
add
in
add
add
stos
mov
faddl
add
ret
add
add
fnsave
mov
roll
scas
mov
repnz
add
lret
add
nop
mov
mov
add
in
add
push
push
push
call
jno
add
pusha
popa
fldcw
add
add
add
out
add
mov
mov
add
jb
add
jbe
add
add
jle
add
inc
in
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
data16
xorl
loop
mov
add
add
add
add
cmpsl
add
icebp
imul
mov
mov
mov
lea
push
ficomps
jecxz
out
mov
xchg
jp
iret
xchg
add
add
clc
shlb
aam
ja
add
add
add
lock
fdivr
lcall
push
lea
push
push
call
add
mov
sti
mov
add
mov
js
js
repnz
xchg
cltd
pushf
xchg
add
pusha
cltd
add
add
mov
add
add
add
add
in
in
add
fiaddl
std
movl
jo
les
lcall
push
lea
push
push
push
push
call
cmpsb
out
mov
test
pusha
fiadds
jge
addr16
scas
jmp
in
into
push
fwait
mov
add
add
mov
add
push
push
lea
push
lea
push
push
call
cmpsb
add
addl
loope
push
add
mov
ficompl
mov
popl
add
addr16
add
lret
add
mov
sub
pop
push
call
push
push
call
test
add
add
add
jl
mov
mov
add
add
add
mov
mov
add
mov
mov
aad
je
scas
insb
mov
icebp
sub
pop
call
push
push
lea
push
lea
push
push
lea
push
push
call
iret
add
sbbb
scas
add
lret
add
add
scas
in
jge
add
add
add
add
add
add
xchg
mov
loopne
sub
pop
push
push
lea
push
lea
push
push
push
push
call
lods
in
imul
add
jnp
add
in
icebp
jmp
andl
jo
enter
mov
call
call
push
push
push
lea
push
push
push
push
push
lea
push
push
call
lods
add
test
pop
mov
pop
jns
popf
add
add
add
add
add
scas
imul
in
fdivr
lcall
cmp
push
call
scas
out
repnz
mov
push
jle
mov
add
cld
mov
push
ret
stos
add
in
add
testb
in
clc
pop
ret
mov
push
lea
push
push
push
lea
push
push
call
pop
data16
push
pushf
je
add
xchg
aad
loope
pop
add
mov
fwait
in
add
add
add
add
add
add
add
xchg
add
lcall
pop
hlt
add
push
push
call
add
push
add
add
std
fs
movsb
add
mov
add
fdivs
int
outsl
std
add
jo
add
add
mov
add
ret
cmpsb
test
test
cmpsl
fisubrl
push
lock
in
add
popa
xlat
add
ljmp
mov
add
ret
add
add
add
push
push
lea
push
push
push
call
aad
test
add
add
lods
add
xchg
add
add
jecxz
cld
cmpsb
jmp
addl
pop
faddl
push
aad
arpl
push
add
out
add
outsl
xchg
add
jnp
jmp
lret
add
in
in
pop
mov
xor
push
push
add
sub
ror
push
sub
add
lea
not
xor
sub
sub
ror
not
lea
not
pop
lea
rol
pop
push
push
push
push
push
push
push
call
fdivs
add
add
add
jmp
push
aad
stos
popf
jecxz
add
add
cmc
add
jbe
sarl
pushf
pop
mov
neg
add
add
ror
add
add
pop
ja
movsl
sub
pop
pushl
push
lea
push
call
ljmp
test
loope
clc
add
add
fbstp
add
add
add
add
push
arpl
mov
xchg
add
add
mov
pop
call
mov
push
push
lea
push
push
push
push
call
mov
mov
cld
pop
jle
add
add
xchg
add
add
cltd
incb
ljmp
mov
lret
stos
idivl
sub
pop
movl
lea
push
push
push
push
push
push
push
push
call
add
les
outsl
add
ficompl
lea
jl
loope
call
add
add
push
pushf
add
ja
in
loopne
push
push
lea
push
push
call
push
add
add
add
xchg
add
mov
fwait
add
leave
lret
add
xchg
iret
add
add
nop
testb
add
push
movsl
add
add
movsl
pop
mov
in
hlt
lcall
jne
push
push
lea
push
push
push
push
push
push
call
mov
fsubrs
bound
stc
int3
push
pop
addl
cmc
bound
add
roll
add
roll
loope
add
jecxz
add
add
add
add
add
out
scas
add
scas
add
in
loopne
lcall
jne
push
push
call
shll
push
shll
add
add
fstpt
pop
aam
add
mov
add
mov
fyl2xp1
insb
mov
shll
out
mov
in
add
add
add
gs
pop
call
push
push
push
lea
push
push
call
add
add
add
in
lods
add
fcomps
lret
pop
test
push
push
cltd
push
mov
jge
jo
add
add
xchg
lret
pop
fildl
jne
push
lea
push
push
lea
push
push
call
lods
mov
add
jne
movsb
add
test
jb
jns
mov
into
test
add
add
in
push
pop
mov
add
fmuls
into
lret
mov
loopne
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
add
movsb
mov
add
mov
in
add
add
add
add
bound
add
mov
cmp
mov
push
shl
push
or
inc
add
sub
not
sub
inc
sub
not
xor
rol
pop
xor
pop
push
lea
push
call
jo
lea
in
out
fcompl
ret
mov
pop
xchg
ror
pop
addr16
xlat
je
je
jns
data16
lds
sub
pop
pushl
push
lea
push
push
push
push
call
add
fldl
flds
test
add
jmp
add
add
mov
add
loop
mov
pop
add
sti
add
add
add
loope
add
add
sti
iret
add
adc
add
push
push
not
inc
push
sub
add
inc
ror
ror
sub
rol
pop
shr
xor
shr
pop
push
push
lea
push
call
mov
mov
int
jo
iret
add
cwtl
mov
lods
les
mov
fadds
bnd
mov
cltd
add
loop
in
leave
add
pop
mov
faddl
jle
add
je
add
add
add
in
add
add
pop
cli
pop
into
enter
les
push
push
push
lea
push
lea
push
push
push
push
push
call
popf
add
add
cmc
push
add
mov
add
add
jl
add
add
add
add
add
add
push
push
lea
push
push
push
push
call
add
add
stos
ljmp
hlt
fbstp
ljmp
in
js
mov
cltd
mov
add
add
xor
in
loopne
call
push
push
push
push
push
push
lea
push
call
loope
mov
push
add
add
add
movsb
add
mov
fldenv
mov
mov
js
jns
imul
cmpsb
fwait
add
xchg
add
jne
in
in
lcall
clc
push
push
push
push
push
push
push
push
lea
push
call
scas
xchg
add
add
movsb
cmc
mov
mov
add
lcall
add
mov
mov
in
popa
fucomip
add
sub
pop
push
mov
push
lea
push
lea
push
push
push
push
call
add
scas
jmp
add
add
add
mov
mov
insb
push
cwtl
add
jb
mov
pop
add
xchg
add
test
fldl
pop
in
push
lea
push
call
fisttpl
jns
add
mov
rolb
cli
add
aam
hlt
stos
in
mov
push
lods
xchg
xchg
in
push
ficompl
mov
loopne
mov
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
call
int
out
mov
mov
in
mov
mov
add
add
notb
mov
push
add
sbbb
clc
nop
add
mov
sub
pop
add
push
push
call
add
jle
add
adcb
out
test
sbbl
ljmp
jmp
jae
add
call
mov
xchg
mov
pop
movsb
lea
add
push
add
add
scas
jmp
lcall
xor
push
push
push
push
lea
push
push
call
add
mov
sahf
lods
jns
pushf
add
enter
mov
add
push
aad
pop
add
add
jl
add
pop
jb
add
pop
jl
jb
lods
cwtl
ror
insb
cwtl
add
xchg
mov
add
add
pop
addl
add
jae
test
fcoml
sub
pop
add
push
push
push
push
push
push
push
lea
push
call
notb
int
les
add
add
jecxz
add
add
add
jnp
rcrl
push
pop
push
add
add
mov
add
add
add
add
add
push
mull
add
push
add
in
sbbb
into
js
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
lods
add
in
test
push
addr16
test
add
mov
add
add
js
xchg
mov
add
out
pop
push
mov
in
nop
adcb
js
call
pop
add
mov
sti
cmpsl
lds
sahf
mov
jbe
add
inc
or
pop
jae
push
push
push
push
push
push
push
call
hlt
fildl
filds
add
jne
pop
add
aam
add
data16
je
xlat
out
jge
add
add
pusha
insb
out
mov
jno
bnd
loopne
pop
mov
mov
add
add
mov
lcall
add
push
lea
push
call
fcompl
lea
add
add
jne
jmp
push
lea
add
add
push
add
mov
add
add
add
les
cli
add
mov
add
idivb
negl
je
jo
mov
add
add
fiaddl
adcl
lcall
les
add
push
push
push
lea
push
call
cmc
in
jnp
cmpsl
add
xchg
cli
out
add
movl
add
push
xchg
add
stc
mov
mov
rolb
mov
lcall
lock
push
push
push
push
call
add
jmp
push
ficoms
fldl
in
pushf
add
add
add
mov
add
arpl
add
add
add
add
add
add
fildl
stos
sub
pop
pop
mov
push
push
push
push
lea
push
call
add
pop
fadds
mov
std
add
test
add
test
add
arpl
add
into
add
add
stc
shll
mov
mov
clc
mov
ljmp
jge
in
lock
xor
push
push
lea
push
push
push
push
lea
push
push
push
push
call
imul
pusha
jnp
leave
jo
add
pop
je
add
add
pusha
out
jecxz
add
hlt
add
mov
jo
mov
lock
cld
add
add
mov
fdivr
lcall
les
push
push
push
push
push
push
call
add
sahf
add
pop
flds
std
add
push
std
into
js
aad
jle
rcrl
add
mov
jecxz
mov
xchg
push
add
add
push
sar
push
xchg
add
add
fistpl
add
add
jno
pop
add
mov
jno
add
add
add
enter
in
in
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
stc
fwait
cld
lahf
pop
push
cmpsl
insb
jbe
add
jbe
add
mov
rolb
int3
add
loope
loop
shr
outsl
int
sti
aam
mov
add
nop
fsub
int
xchg
scas
mov
add
pop
mov
add
repnz
hlt
add
repnz
movsb
mov
add
push
add
push
add
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
insb
jecxz
add
add
add
sahf
data16
lods
ror
pop
push
ljmp
mov
add
les
imul
addl
xlat
add
lcall
add
push
push
push
push
call
mov
add
loope
xchg
pop
mov
mov
mov
add
lahf
mov
xchg
add
call
add
push
add
nop
icebp
lcall
xlat
add
popf
sub
pop
add
push
push
push
push
lea
push
call
add
jne
jle
cli
clc
nop
add
subl
mov
add
add
iret
ret
sahf
loope
add
mov
push
sub
pop
sub
push
push
push
push
call
into
hlt
clc
add
add
shlb
cmpsb
mov
jcxz
add
add
add
loope
mov
add
cld
mov
fldt
add
pop
rep
push
ror
sub
not
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
mov
add
add
jb
flds
add
add
mov
mov
add
clc
add
add
jmp
mull
cwtl
pushf
add
add
add
mov
imul
js
pop
add
movsl
in
add
xchg
add
cmpsb
mov
std
out
mov
add
leave
add
in
loopne
lcall
pop
hlt
push
push
call
pop
icebp
add
add
test
jno
std
add
in
xchg
add
add
in
add
add
jnp
jnp
popl
fldl
add
flds
data16
enter
xchg
xchg
outsl
xlat
add
add
outsl
stos
mov
add
gs
add
add
js
in
clc
pop
add
push
push
push
push
push
lea
push
push
call
pop
mov
pop
add
add
ret
mov
mov
cmpb
add
jmp
jge
xlat
add
jge
jge
add
add
add
add
mov
add
in
add
add
mov
jb
nop
xchg
fildl
mov
add
ret
add
add
push
pop
add
push
dec
xor
xor
pop
mov
push
push
push
push
lea
push
push
push
call
idivb
add
add
add
add
add
push
ja
mov
push
add
loopne
int
in
call
push
push
push
call
add
add
add
jecxz
add
add
add
push
add
nop
add
push
add
out
add
cld
jae
add
imul
les
add
pop
outsl
fiadds
mov
lcall
les
dec
ror
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
movsb
jbe
repnz
stos
add
add
mov
cmpsb
addl
rolb
push
int3
jbe
add
add
rolb
stos
adc
add
mov
pop
cwtl
add
pop
add
jnp
cwtl
sarb
in
fcompl
adc
push
lea
push
push
push
push
lea
push
push
push
push
push
call
mov
add
jb
pop
jmp
add
mov
add
mov
mov
add
fdivrs
add
fmul
scas
int
loop
imul
add
addb
addb
jecxz
add
add
add
add
add
popf
add
add
fs
in
fcomps
les
inc
sub
pop
mov
xor
push
add
pop
add
push
lea
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
add
sti
add
jmp
pushf
add
add
mov
mov
add
imulb
cld
stos
std
add
lcall
fsubrs
push
mov
push
not
rol
push
or
inc
add
sub
shr
rol
sub
pop
sub
rol
pop
push
not
pop
pushl
push
inc
xor
pop
call
push
push
call
xchg
sahf
add
xchg
mov
mov
xchg
out
add
add
imul
lods
add
jno
add
push
pop
add
iret
cmpsl
add
push
mov
jne
mov
add
add
sub
popl
clc
cmc
add
add
jecxz
jp
in
clc
pop
push
push
push
xor
dec
push
push
pop
add
lea
shl
sub
inc
rol
inc
pop
rol
add
pop
push
inc
xor
pop
push
push
inc
pop
push
call
push
lea
push
push
push
lea
push
push
call
mov
loop
add
add
test
popf
add
mov
add
add
imul
add
aam
jp
add
std
movsl
imul
xchg
outsl
mov
mov
push
add
roll
rorb
pop
mov
push
add
xor
inc
pop
push
push
xor
pop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
in
add
imul
cli
fs
mov
popl
add
cltd
add
shl
jecxz
add
add
mov
add
lret
cmc
leave
add
xchg
rcll
add
xchg
test
add
sub
pop
mov
push
inc
pop
add
add
push
push
push
push
call
push
lods
add
jmp
aam
add
add
add
jno
fwait
mov
add
data16
jns
push
add
xchg
clc
bound
in
lock
lcall
ret
mov
lea
push
lea
push
push
push
push
call
jns
js
add
mov
mov
add
subb
jle
mov
test
add
hlt
cli
cli
xchg
add
add
add
add
xchg
fwait
std
add
xchg
add
xchg
arpl
adcl
add
in
fiadds
ffree
add
add
add
sub
pop
mov
xor
push
add
inc
pop
add
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
pop
shlb
mov
xchg
jno
add
add
add
pop
add
out
scas
out
add
pop
mov
mov
xor
push
shr
dec
pop
add
pop
push
lea
push
lea
push
call
icebp
movb
push
add
pop
add
movsl
cwtl
add
add
add
add
add
mov
stc
add
add
jp
testb
add
sahf
fiadds
push
add
add
pushf
incb
add
stc
jmp
jne
sub
pop
mov
push
push
push
call
filds
add
movsb
mov
add
mov
popa
cltd
mov
add
add
add
movsb
sub
pop
xor
push
push
lea
push
call
add
add
outsl
movsb
add
sbb
add
mov
add
filds
imul
test
mov
add
add
mov
in
push
jnp
clc
int
xchg
add
ret
add
mov
fnstenv
add
arpl
mov
pop
add
push
push
call
push
add
mov
imul
js
imul
jge
add
stos
xchg
int3
push
add
flds
push
cmpsb
jl
add
cmpsb
nop
stos
lods
add
gs
xchg
push
addl
sti
data16
push
insb
stos
add
add
mov
popa
add
mov
int
ja
test
in
clc
lcall
movsb
push
shr
sub
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
jp
push
call
lods
lea
add
add
lods
add
add
flds
add
xchg
std
xchg
int
mov
push
stos
arpl
lea
mov
loopne
push
jns
shrl
fidivs
out
lahf
jo
sub
pop
xor
push
push
call
add
lods
mov
pop
xchg
mov
add
add
add
iret
add
add
jle
mov
fiaddl
lock
jp
mov
jbe
add
jb
xchg
add
sub
pop
add
push
ror
sub
inc
pop
or
je
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
add
pop
xchg
push
add
add
add
mov
std
pop
jo
scas
rcl
pop
jmp
add
add
xor
push
push
push
push
push
push
call
xchg
les
add
fadds
add
push
add
mov
mov
mov
data16
movsl
cld
mov
add
mov
cltd
push
in
add
add
add
mov
fst
mov
lcall
les
push
push
call
jne
mov
out
add
add
movb
add
mov
faddl
mov
shl
mov
mov
pop
mov
movsb
add
jecxz
out
outsl
js
add
add
mov
in
xorb
sub
lcall
push
sbb
pop
jae
push
lea
push
push
push
push
push
push
push
push
call
add
addb
add
jge
jne
fwait
movb
add
add
add
jmp
add
xor
out
cwtl
mov
lret
mov
fcompl
adc
push
push
push
push
push
push
lea
push
push
lea
push
push
call
scas
mov
add
lds
mov
int
add
cli
add
xchg
push
jno
filds
pop
add
add
add
add
mov
add
mov
xchg
add
fcomps
les
shr
dec
add
rol
pop
add
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
iret
mov
sti
xlat
test
add
add
add
jmp
mov
mov
cmpsl
xchg
xchg
mov
test
leave
mov
add
addb
add
jne
push
push
push
lea
push
call
add
jns
sti
add
pop
shll
add
call
add
add
add
rcr
add
scas
add
add
movsl
jecxz
add
add
add
jl
mov
add
jl
jb
add
xchg
out
push
lahf
add
cli
aad
fildl
jo
add
add
xchg
scas
add
inc
or
pop
jae
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
addl
pushf
fisubrs
jns
xchg
mov
mov
divb
mov
sti
add
in
add
notl
xlat
add
add
push
push
push
push
push
push
push
push
call
pop
add
add
fs
push
les
add
add
lcall
add
add
pusha
mov
push
popa
add
je
clc
add
fwait
add
add
add
pop
lods
addr16
jno
add
mov
pop
add
push
add
add
pop
add
pop
push
lea
push
push
lea
push
lea
push
lea
push
call
scas
add
push
mov
lock
popf
movb
add
xchg
arpl
jns
mov
lret
add
mov
mov
popa
lcall
fisubrl
test
js
rolb
add
mov
out
add
testl
cmc
jle
js
jno
add
in
call
shr
xor
xor
sub
pop
mov
push
push
push
push
push
push
push
call
pop
jo
push
mov
roll
add
rcrb
add
mov
add
add
pusha
stos
add
test
add
sub
pop
xor
push
lea
push
push
call
iret
add
jle
roll
xchg
add
int3
jno
pop
aad
add
loop
add
sar
add
mov
add
mov
add
loope
add
mov
push
sti
js
out
add
push
xchg
add
into
add
test
mov
ret
add
in
hlt
pop
add
push
ror
ror
rol
pop
or
je
push
push
call
mov
test
push
add
add
mov
add
lods
sarb
pop
add
xchg
std
mov
jb
add
add
jecxz
fiaddl
xchg
pop
add
lcall
int
jmp
call
clc
pop
mov
push
push
call
mov
add
addl
push
sahf
fadds
pop
xchg
add
add
addb
test
add
cmc
jne
add
imul
out
cltd
add
add
add
mov
in
clc
lcall
sub
push
lea
push
call
add
jb
add
lods
testb
repnz
add
jle
add
add
add
lret
push
clc
mov
outsl
jnp
add
movb
add
push
push
call
out
pusha
add
mov
add
add
add
lret
mov
add
add
xchg
cwtl
jnp
add
add
and
add
loope
js
mov
add
add
ljmp
add
lret
add
xchg
add
mov
mov
pop
rep
push
push
lea
push
push
push
push
push
push
push
call
je
add
pop
add
mov
push
mov
mov
add
add
add
sahf
add
jl
in
fdivr
lcall
push
push
sub
push
push
pop
add
shl
xor
not
sub
sub
not
not
sub
pop
not
ror
shr
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
popa
add
filds
cld
stc
enter
push
add
add
mov
add
add
add
jnp
imul
mov
sti
int3
add
jge
add
insb
fmulp
add
xchg
add
fscale
jno
enter
cmpsb
mov
lods
add
add
shlb
lcall
push
shr
shr
lea
ror
pop
mov
push
not
sub
shr
pop
mov
push
shr
lea
rol
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
jno
add
pusha
out
add
fs
add
xchg
add
add
add
arpl
ja
add
add
add
jb
test
add
movl
jae
movsl
loope
icebp
mov
pop
mov
add
arpl
xchg
add
sub
pop
jmp
push
sub
pop
push
mov
push
rol
pop
add
push
inc
pop
push
push
add
add
rol
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
push
addl
movsb
jnp
ffreep
outsl
add
add
add
add
jle
jae
add
add
add
fwait
mov
add
mov
test
popf
in
add
add
mov
add
lret
add
fxch
iret
out
loop
lret
add
add
sub
pop
push
mov
push
lea
push
lea
push
push
push
lea
push
push
call
push
add
add
add
add
jmp
test
add
add
add
mov
add
scas
add
mov
nop
add
jo
roll
icebp
add
add
mov
int3
hlt
add
in
movb
jecxz
pop
add
sub
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
add
add
add
ficoms
ror
cmpsb
stos
rcr
shrb
add
add
aam
fiadds
in
mov
add
add
fwait
outsl
icebp
cwtl
in
add
xchg
shrl
pop
push
outsl
add
lods
sub
pop
pop
push
push
push
push
push
lea
push
call
jecxz
add
scas
xchg
add
add
add
push
movsl
cmc
stos
add
add
mov
add
pop
add
pop
cwtl
cmpsl
fiadds
add
add
roll
mov
addb
lret
les
jp
add
int3
mov
fsubr
jle
add
ljmp
mov
incb
sub
pop
pop
push
lea
push
lea
push
push
push
call
push
add
xchg
test
scas
jns
data16
lock
mov
add
add
xchg
add
mov
add
int
xchg
add
add
ja
mov
add
leave
push
push
push
push
push
push
push
push
push
push
call
add
rcl
add
in
testl
add
pop
add
std
out
sahf
pop
add
out
std
add
xchg
mov
add
mov
clc
je
insb
jo
add
pop
add
jae
mov
add
mov
pop
lods
cltd
mov
add
data16
cmpsl
mov
add
mov
sub
pop
ret
push
push
pop
mov
push
push
push
push
lea
push
call
mov
roll
lea
add
cmc
mov
aam
test
add
add
add
add
out
add
add
add
add
ljmp
clc
push
sub
pop
push
push
push
push
push
push
lea
push
push
call
add
out
ficomps
imul
pop
jns
jl
add
fstl
fiaddl
jae
jmp
out
mov
fs
cltd
adc
arpl
add
into
add
scas
addl
shl
pop
push
push
push
lea
push
push
call
pop
add
insb
ljmp
add
xchg
mov
mov
sahf
cli
sbbb
pusha
add
add
add
fists
jo
push
add
into
stos
out
push
push
jno
add
std
repnz
add
push
mov
mov
incb
lcall
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
pop
xchg
jl
add
leave
cld
jno
add
fs
jecxz
add
add
testl
add
out
lds
addr16
jne
add
add
sub
pop
movl
push
sub
pop
addl
test
je
push
sub
shr
xor
add
pop
mov
pop
push
ror
add
pop
pop
pop
push
push
push
push
lea
push
call
xchg
hlt
add
add
add
add
add
frndint
add
lcall
push
fiaddl
add
sarb
fldt
add
jmp
add
add
push
addb
aam
mov
add
mov
lret
in
in
lcall
leave
push
push
push
push
push
push
push
push
lea
push
push
call
jl
mov
add
add
shrb
mov
stc
hlt
add
add
addr16
add
add
sub
pop
ret
push
push
lea
push
push
call
into
push
add
pushf
subb
add
cmpsl
sbb
push
cmc
add
add
int3
pop
pop
add
test
mov
pushf
add
xchg
out
add
addl
xchg
xchg
add
add
push
mov
add
add
add
add
sub
pop
mov
push
push
push
push
push
push
call
jnp
add
call
add
xchg
add
bound
mov
js
add
jno
fiaddl
cltd
movb
add
loope
lret
scas
pop
movsl
roll
jae
shlb
je
add
scas
push
ficoml
hlt
out
add
add
scas
add
in
call
add
push
push
lea
push
lea
push
call
mov
add
pop
xchg
outsl
aad
push
pop
xlat
push
xlat
xchg
lret
add
scas
add
add
ffree
add
add
mov
outsl
jecxz
add
into
cltd
add
andl
pop
push
push
pop
push
push
rol
dec
sub
pop
push
push
push
push
push
call
aam
hlt
mov
add
push
test
add
jb
add
rol
ja
lea
mov
int
pusha
imul
pop
push
push
push
call
add
add
mov
out
add
mov
mov
stos
pop
outsl
lods
js
add
xchg
jae
enter
push
mov
add
xchg
repnz
add
add
fs
scas
imull
int
add
xchg
sbbb
in
clc
pop
testl
push
push
push
lea
push
lea
push
push
push
call
testb
mov
pop
add
mov
add
add
loopne
mov
push
jmp
add
lcall
jno
lods
lods
jo
mov
aad
negb
test
lcall
inc
or
push
pop
push
push
inc
shl
pop
call
push
lea
sub
shr
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
add
add
jnp
les
add
test
add
pusha
add
push
rcll
mov
add
js
stos
add
add
addb
gs
push
data16
imul
push
add
stos
stos
cli
xchg
jne
jmp
mov
mov
insb
sub
pop
pushl
push
sub
lea
pop
push
push
push
add
pop
call
push
shl
rol
pop
cmpl
jne
push
sub
add
pop
pop
pop
push
dec
sub
shr
pop
pop
push
add
pop
pop
push
sub
pop
leave
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
jne
loopne
andl
scas
mov
std
add
add
popf
add
add
xchg
loope
ficoms
add
add
mov
test
add
jle
in
in
lret
mov
gs
into
pop
add
iret
add
add
mov
cmc
add
lds
test
add
pop
scas
movsb
rolb
lcall
add
push
push
push
push
push
push
push
push
push
call
stos
add
sti
test
add
add
repnz
lret
add
fwait
outsl
popf
mov
add
mov
add
pop
mov
add
jno
in
loopne
lcall
in
add
push
push
lea
push
push
push
lea
push
push
push
push
call
shr
test
push
mov
add
int3
jo
leave
clc
lds
mov
add
mov
push
add
add
pusha
xchg
pop
lods
mov
ja
add
fcompl
push
rol
rol
add
pop
push
push
push
call
add
pusha
add
add
mov
xchg
clc
shrb
jae
cltd
add
jmp
in
clc
lcall
push
lea
push
push
push
push
call
push
mov
add
repnz
add
add
into
add
add
enter
stc
add
jo
mov
leave
add
testl
out
add
jo
add
add
fadds
les
mov
add
nop
mov
push
movsb
in
jns
mov
add
push
shr
lea
add
dec
pop
movl
push
push
shr
shr
pop
call
push
rol
rol
sub
pop
push
push
push
push
lea
push
push
push
call
add
push
add
xchg
je
lods
mov
xchg
les
adc
mov
add
push
add
popf
gs
nop
rcrl
scas
repnz
shlb
sar
add
add
add
mov
fwait
sub
pop
call
subl
push
shl
pop
cmpl
jne
push
push
call
push
roll
adcb
pop
xchg
add
add
jge
add
jne
xchg
jno
mov
mov
movsl
add
jne
lahf
mov
add
sub
pop
pop
push
inc
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
pop
mov
mov
add
xchg
mov
pop
push
xchg
lock
loop
roll
lods
mov
mov
mov
shl
push
out
addb
in
fcompl
push
add
xor
shl
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
test
add
lret
add
mov
int
iret
pop
add
test
add
push
xchg
call
lds
js
mov
addr16
int3
bound
add
rolb
mov
in
fdivr
lcall
ret
push
shl
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
cmpsl
cltd
add
add
add
add
pushf
test
fsts
xchg
jbe
gs
mov
jb
test
bound
lcall
lock
add
testl
mov
push
sub
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
call
popa
add
stos
push
add
add
testl
cwtl
sar
add
lea
filds
cli
mov
pop
add
mov
loope
add
subl
fbstp
add
in
loopne
lcall
push
push
push
lea
push
call
test
addl
scas
add
mov
mov
popl
aad
scas
stos
jb
pop
xlat
sti
add
jp
cmc
mov
pop
popa
cmc
out
lcall
add
lahf
add
movsl
nop
push
clc
add
jbe
add
add
scas
push
xchg
stos
sub
pop
push
push
shl
inc
shl
pop
push
push
sub
rol
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
sbbb
push
add
add
mov
add
add
cmpsb
add
add
loopne
cmpsb
fiadds
add
add
add
add
ja
rorb
mov
fcompl
inc
cmp
rol
sub
pop
sub
push
push
push
push
call
mov
in
pop
add
addb
incb
push
push
add
inc
jb
add
add
mov
bound
jle
push
pop
rorb
add
pop
add
movsl
xchg
add
aad
add
mov
add
imul
add
in
lock
mov
shr
push
sub
sub
pop
add
push
lea
sub
pop
mov
mov
push
push
lea
push
push
push
push
lea
push
push
call
pop
mov
mov
mov
add
add
mov
out
add
add
add
add
fs
add
add
push
add
pop
add
test
shll
add
in
loopne
lcall
inc
or
add
add
xor
pop
add
push
inc
pop
mov
push
pop
mov
push
rol
pop
cmp
jne
cmp
jne
push
shl
not
pop
mov
push
shr
ror
pop
movl
push
add
pop
jmp
mov
push
lea
push
push
push
push
push
push
call
mov
mov
add
movsl
add
pop
add
add
add
pusha
add
push
add
repnz
sbbb
add
add
sub
pop
mov
push
lea
push
call
add
stos
add
xchg
int3
movsl
add
add
je
stos
pop
add
add
fsts
leave
mov
aam
testl
add
lret
add
clc
lret
add
add
sarb
mov
stc
test
cmc
loop
add
add
ljmp
js
sub
pop
sub
jne
push
add
sub
shr
pop
mov
push
push
push
push
call
push
loope
mov
mov
add
mov
add
call
add
add
out
add
push
aam
add
add
add
cmc
add
jecxz
add
movsb
mov
mov
push
aam
mov
jne
in
lock
lcall
add
add
push
push
push
call
pop
mov
out
add
cld
mov
add
fstps
mov
cltd
call
mov
push
out
add
sub
pop
jmp
push
push
push
push
push
push
push
push
push
push
call
add
jl
loopnew
add
add
add
add
add
add
add
add
mov
add
add
icebp
cmc
mov
into
add
add
xchg
jecxz
in
imul
add
push
add
pop
leave
gs
ret
add
mov
add
je
sub
pop
mov
push
push
push
push
push
call
je
jl
add
jmp
mov
mov
mov
movsb
test
add
add
add
jne
negb
add
jp
add
add
add
pop
fsubrl
test
iret
test
add
add
out
add
fiadds
nop
mov
add
cmp
jne
push
lea
push
push
push
push
call
xchg
add
add
add
add
add
fmul
add
add
add
ljmp
add
mov
loop
sti
les
add
jl
add
push
add
jo
cld
int3
pusha
pushf
pop
pop
sti
add
add
add
inc
adc
add
add
add
push
push
push
lea
push
push
call
cwtl
jne
out
mov
jecxz
xchg
movb
add
mov
add
add
pop
std
add
add
hlt
sahf
add
add
ljmp
mov
add
sub
pop
jmp
push
push
lea
push
push
push
lea
push
call
fdiv
xlat
rclb
cld
add
ja
sahf
rolb
add
add
add
add
add
push
pop
add
testb
fcmovu
mov
leave
leave
rolb
add
cmp
add
iret
xchg
pushf
in
add
movsl
add
shll
arpl
add
push
sti
lods
add
xchg
add
inc
cld
push
push
push
lea
push
lea
push
push
lea
push
call
fwait
into
jno
out
add
call
add
data16
add
mov
add
add
add
fiaddl
mov
add
xchg
ja
cmpl
in
in
cmpw
jne
mov
push
dec
shr
xor
pop
movl
push
lea
push
lea
push
lea
push
push
push
call
rcrl
mov
out
enter
out
mov
xchg
add
add
add
mov
test
lock
cbtw
add
mov
fsub
add
fisttps
mov
push
ret
in
call
add
pushl
push
sub
sub
pop
pop
mov
push
lea
ror
shr
pop
mov
mov
push
push
add
sub
rol
xor
push
and
add
rol
sub
xor
add
add
pop
not
xor
pop
push
xor
inc
xor
shr
pop
push
push
not
dec
shr
pop
call
push
push
push
push
push
call
jp
test
jle
add
fiadds
add
icebp
pop
mov
add
add
push
test
sahf
test
mov
outsl
add
loopne
add
aam
test
lock
add
popl
push
rolb
add
mov
fstpl
int
add
js
int3
fldz
ret
and
add
push
push
add
sub
push
and
add
rol
sub
rol
lea
pop
add
sub
sub
pop
push
dec
lea
dec
pop
push
push
add
not
pop
call
push
push
call
push
xchg
add
add
add
test
xchg
xchg
add
mov
std
lahf
add
mov
add
add
pop
add
call
mov
add
add
lods
add
fs
imul
addl
push
cmpsb
cmc
mov
lcall
js
int3
fldz
ret
jns
add
push
push
shl
push
or
not
add
not
sub
rol
sub
sub
rol
ror
pop
shl
not
inc
shr
pop
push
push
push
call
add
mov
add
add
ja
push
test
stc
add
test
xchg
add
add
fcompl
push
add
add
add
lcall
push
dec
pop
call
cmpl
je
push
push
shl
lea
xor
push
or
inc
add
not
xor
sub
inc
shr
inc
not
pop
xor
pop
push
lea
dec
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
movsl
add
mov
add
push
xchg
int
jb
in
ja
rclb
cmc
mov
add
mov
test
fiaddl
xorb
sub
pop
call
push
push
call
mov
add
mov
jne
mov
in
add
add
flds
stc
mov
add
lock
pop
cmpl
je
push
push
shl
push
or
inc
add
sub
shr
add
shr
sub
sub
pop
xor
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
jle
je
mov
mull
cltd
mov
cmpsb
movsb
mov
add
adc
sahf
outsl
pop
add
add
add
add
in
add
xchg
cmp
repnz
add
pop
xchg
in
add
mov
imul
pop
push
push
push
lea
push
call
add
mov
int3
mov
mov
add
add
test
add
arpl
pop
xchg
add
scas
popa
jnp
cmc
pop
add
int
mov
cmpsb
add
add
mov
add
pusha
cmp
add
or
test
push
add
push
push
ror
dec
sub
inc
push
xor
add
rol
sub
ror
pop
add
sub
pop
push
push
push
push
call
push
aam
xchg
cmc
add
cmpsb
pop
clc
les
add
loop
iret
imul
xchg
xchg
xchg
jns
pop
add
fildl
mov
add
mov
popf
pop
out
push
les
leave
xchg
mov
pushf
sub
pop
push
call
push
push
push
push
push
lea
push
call
add
cmpsl
pop
add
add
lret
jae
add
mov
push
push
add
add
out
out
cmpsb
add
xchg
addb
add
clc
push
repnz
mov
add
pop
add
sub
pop
cmpl
je
push
push
dec
shr
dec
add
push
sub
add
dec
rol
sub
sub
sub
xor
rol
sub
pop
ror
lea
shr
pop
push
push
push
push
push
push
push
push
push
call
add
js
add
add
je
mov
add
les
add
add
cltd
add
pop
hlt
mov
add
leave
add
add
add
cmpsl
push
jmp
mov
jle
lret
movsl
add
pop
add
jecxz
add
add
fdivrs
sub
pop
push
call
push
not
pop
cmpl
je
push
push
lea
push
push
pop
add
lea
sub
sub
pop
add
add
pop
push
rol
dec
pop
push
push
push
push
push
push
push
lea
push
call
fiadds
cmpsb
scas
add
jecxz
push
mov
popf
add
std
icebp
movsl
out
push
add
fwait
add
je
mov
add
add
pop
add
pop
mov
push
sahf
fwait
add
mov
add
aad
loope
add
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
test
add
xlat
pop
jo
ja
jmp
jae
add
mov
push
mov
add
pop
add
add
stc
loopne
ja
add
into
shll
iret
mov
add
add
fildl
icebp
add
add
cmp
or
int3
je
push
push
lea
rol
push
or
not
add
add
add
sub
sub
lea
add
rol
add
pop
ror
pop
push
shr
sub
pop
push
call
push
xor
sub
pop
cmpl
je
push
push
rol
push
xor
add
lea
add
sub
lea
rol
shl
add
pop
shr
pop
push
xor
not
not
pop
push
push
lea
push
push
push
push
push
push
call
mull
test
pop
enter
jp
pop
int3
add
leave
xchg
mov
flds
add
jo
add
add
sub
pop
call
cmpl
je
push
push
dec
dec
rol
push
push
pop
add
lea
ror
sub
sub
pop
dec
pop
push
lea
push
push
lea
push
call
jge
in
loope
sbbb
xchg
outsl
rol
xchg
pop
jne
jmp
add
add
int
pop
ljmp
push
add
add
jns
fldenv
add
add
push
jle
test
pop
push
push
add
rol
pop
call
push
push
push
push
push
call
cli
ljmp
add
testl
fldcw
stos
add
idivb
mov
add
xchg
out
lahf
iret
int3
add
jl
add
add
rcrl
add
add
lcall
cmpl
je
push
push
dec
push
or
inc
add
ror
dec
xor
add
sub
sub
shl
pop
inc
pop
push
dec
lea
pop
push
call
push
rol
add
pop
cmpl
je
push
push
shl
rol
push
xor
add
ror
sub
shl
sub
pop
sub
xor
shr
pop
push
lea
push
call
mov
imul
mov
add
mov
add
repnz
test
arpl
xlat
mov
xchg
scas
push
pop
push
enter
in
clc
lcall
call
push
push
lea
push
push
push
push
push
push
lea
push
call
lods
pop
add
nop
fiadds
mov
add
shl
add
mov
popf
pop
cltd
cwtl
outsl
add
xchg
mov
add
sub
pop
cmpl
jne
push
shr
pop
mov
movl
push
ror
pop
jmp
push
lea
push
push
push
push
push
lea
push
push
push
push
call
int
call
mov
add
push
jbe
movsb
add
add
push
fcmovu
icebp
popa
add
jbe
outsl
in
fdivr
lcall
rclb
or
iret
ds
pop
push
push
lea
push
push
call
mov
addr16
push
rorl
add
add
lods
mov
add
lcall
iret
jbe
xchg
sub
pop
pop
push
sub
rol
xor
inc
pop
pop
push
lea
push
push
push
push
push
push
call
test
pusha
add
push
stc
loopne
jmpw
xchg
add
xchg
add
add
add
push
push
mov
loopne
mov
add
add
into
call
enter
cltd
add
add
gs
ljmp
mov
xchg
xchg
leave
push
push
push
push
push
push
call
in
enter
add
mov
cmpsl
pusha
insb
icebp
add
imul
add
add
push
stos
add
jb
xchg
jnp
add
ja
sti
add
add
lods
add
mov
mov
ret
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
shl
xchg
pop
out
shlb
std
jbe
fimull
mov
add
add
int3
mov
fldl
add
mov
pushf
fst
lret
jl
lea
add
in
mov
add
push
push
xchg
add
add
xchg
jo
add
lcall
mov
push
shl
sub
inc
pop
add
cmpl
jne
push
push
dec
shl
push
sub
add
dec
xor
sub
ror
shl
pop
ror
pop
push
ror
add
shr
pop
pushl
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
iret
andb
pop
in
arpl
mov
jle
sub
mov
insb
mov
test
push
pushf
mov
fcomi
cld
test
add
imulb
out
out
jo
xchg
xchg
fs
add
add
std
mov
pop
call
push
push
call
lock
movsl
test
cltd
rol
add
rclb
fildl
lods
test
jb
fadds
mov
add
add
shlb
aad
add
outsl
add
add
add
add
hlt
add
add
hlt
pop
in
add
add
call
push
inc
shr
ror
pop
jmp
push
shr
ror
pop
cmpl
je
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
insb
pop
sahf
add
add
cmpsb
mov
bound
in
pop
cltd
pop
ja
je
add
push
add
icebp
imul
add
rolb
jge
add
add
push
push
lea
push
push
call
scas
add
add
mov
rcll
add
imul
add
add
pop
stc
xchg
fcomip
aam
add
ljmp
xchg
cmpsb
movb
les
mov
add
pop
add
lods
in
add
insb
fsubl
jl
rolb
add
pop
fidivl
in
lock
lcall
add
push
lea
push
lea
push
push
push
call
js
scas
add
add
add
add
faddl
out
movsl
pop
push
cmpsl
push
mov
add
loopne
jl
mov
rcl
sti
add
add
mov
loop
add
sub
pop
pop
pop
push
not
shr
dec
pop
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
call
int3
xchg
cmpsb
add
add
pop
xchg
mov
lods
filds
add
lods
jnp
popf
push
push
xchg
jo
mov
int3
add
add
add
add
add
stos
add
mov
add
popa
scas
aad
mov
rcrb
push
mov
adc
cld
add
aad
sub
pop
pop
leave
push
ror
pop
add
ret
push
push
push
push
call
mov
add
jne
cltd
into
add
mov
xor
add
add
mov
in
add
add
add
jbe
add
add
add
lcall
lret
add
test
add
add
xchg
xlat
push
sub
shr
push
or
inc
add
shl
sub
ror
dec
lea
pop
shr
pop
push
push
push
call
call
add
gs
mov
add
add
lret
jae
add
add
add
lret
imul
add
loop
xchg
data16
add
scas
add
in
jmp
add
popf
mov
add
test
add
leave
add
xchg
add
add
sub
pop
pushl
push
dec
pop
call
push
push
push
lea
push
push
push
push
push
push
call
into
add
jae
stc
subb
add
push
imul
add
add
rolb
pop
jmp
xchg
scas
out
mov
add
arpl
mov
lahf
push
add
add
flds
add
add
lret
lock
add
lds
jnp
in
loopne
call
push
lea
push
call
add
out
add
push
out
cli
xchg
mov
mov
lret
add
mov
add
jp
add
xchg
testb
insb
lea
test
fsubrl
jne
mov
mov
add
mov
pop
aad
pop
mov
jns
leave
loopne
pop
xchg
pop
add
add
add
cld
sub
pop
jmp
push
push
push
push
lea
push
lea
push
push
push
push
push
call
cli
add
xchg
fldl
add
jns
add
les
add
xchg
jns
pop
xlat
mov
testl
cmpsl
test
add
mov
int
mov
in
pop
xlat
mov
cld
add
lcall
jge
add
test
pop
add
push
sub
add
add
pop
mov
push
shl
pop
mov
push
push
lea
push
call
ja
add
leave
add
add
loope
xlat
divb
fadds
add
xchg
cltd
mov
add
mov
out
add
popf
movsl
lods
cwtl
xchg
add
add
add
popf
add
loop
xchg
add
jp
add
scas
addr16
add
mov
add
add
sub
pop
jmp
push
push
push
shr
rol
sub
push
and
add
shr
sub
shl
pop
sub
add
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
jns
lret
lret
add
aad
add
add
loop
mov
push
ret
add
aam
faddl
add
stc
repnz
add
iret
aad
lods
add
sub
pop
pushl
call
push
pop
call
push
push
add
push
or
not
add
ror
sub
sub
lea
pop
not
xor
pop
push
shr
ror
shl
pop
pushl
push
dec
add
ror
shl
pop
call
push
push
lea
push
push
push
push
push
call
add
add
dec
mov
add
xchg
pusha
gs
or
add
out
jp
add
scas
add
call
rolb
int3
add
lcall
shrb
add
ret
add
add
ret
push
add
mov
push
and
dec
lea
add
pop
dec
add
dec
inc
pop
push
lea
push
push
push
lea
push
lea
push
call
add
loopne
fldl
xchg
add
rol
add
test
mov
popa
add
test
add
xchg
cld
fsubs
add
les
fnop
add
add
mov
add
jge
add
pop
pushl
push
push
push
push
lea
push
push
call
out
in
add
cli
out
hlt
mov
add
test
in
jb
test
sarb
shlb
mov
xchg
add
add
add
sub
pop
call
push
lea
push
push
push
call
popa
add
add
std
add
add
add
pop
iret
push
add
add
xchg
pop
jp
stc
stc
add
add
popa
leave
cwtl
mov
test
add
aad
insb
add
add
mov
mov
in
pop
mov
add
add
add
movsb
out
jl
sub
pop
call
push
push
inc
ror
push
push
pop
add
not
add
sub
not
pop
add
pop
push
push
call
xchg
add
ja
add
adcb
iret
add
mov
add
add
push
add
std
lcall
lcall
jne
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
in
outsl
out
mov
add
fsubrl
add
jge
ficoms
add
mov
add
mov
mov
mov
cltd
add
in
in
push
movsl
mov
add
scas
popf
add
in
sti
add
mov
in
fdivr
lcall
fldcw
add
push
push
push
push
push
lea
push
call
fidivs
test
cwtl
add
lahf
mov
fistpl
xchg
rcrb
xchg
add
lods
jmp
in
call
call
push
push
dec
push
or
inc
add
lea
add
sub
pop
pop
push
push
push
lea
push
push
push
call
add
add
fbld
fnstenv
cli
out
add
test
add
add
les
add
shrb
test
fwait
xchg
add
add
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
in
mov
add
cmc
add
in
mov
jmp
add
stos
xchg
add
add
add
loopne
out
aad
arpl
imul
add
shlb
add
push
lea
push
push
push
lea
push
push
call
add
shll
mov
mov
test
add
add
cmpl
xchg
add
test
mov
in
lcall
scas
add
mov
lret
addl
xchg
add
push
add
lcall
shrb
push
fwait
mov
ror
push
and
add
xor
add
not
sub
xor
pop
add
sub
inc
pop
push
xor
lea
not
pop
pushl
call
push
lea
push
push
call
in
add
imul
mov
fidivl
loop
cmc
in
add
stc
ja
stos
fst
shl
jecxz
add
pop
add
in
lahf
int
add
iret
lahf
push
add
jmp
add
outsl
jno
popa
jl
add
add
sub
pop
call
push
push
ror
shr
rol
rol
push
or
inc
add
rol
sub
inc
add
sub
pop
inc
xor
pop
push
lea
pop
pushl
push
add
pop
call
push
sub
dec
xor
pop
call
push
push
rol
push
sub
add
add
sub
not
shr
xor
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
fs
mov
scas
std
add
add
xorb
add
hlt
add
add
filds
xchg
jecxz
gs
add
shl
jecxz
mov
add
add
add
add
add
lcall
jne
push
lea
push
push
push
push
call
add
xchg
movsl
mov
add
xchg
addr16
ret
mov
add
call
call
add
mov
add
imul
add
push
push
push
lea
push
push
push
push
push
call
test
add
test
addb
add
mov
out
iret
add
add
fs
push
add
lret
add
jl
add
test
repnz
add
stos
lret
push
in
add
test
lret
fistpll
add
test
lods
add
add
jbe
add
lcall
shrb
jns
or
push
sub
add
sub
rol
sub
sub
pop
sub
pop
push
push
push
push
push
lea
push
call
pop
roll
add
fnstsw
add
cmpsb
add
add
push
arpl
iret
stos
xchg
mul
cmc
lds
add
sub
pop
pushl
call
push
not
sub
pop
call
push
push
shl
push
or
inc
add
not
rol
sub
inc
sub
pop
add
pop
push
inc
pop
pushl
call
push
xor
pop
lea
push
push
rol
ror
dec
rol
pop
call
push
push
sub
push
or
inc
add
add
dec
lea
sub
dec
not
pop
add
shr
ror
ror
pop
push
lea
push
lea
push
call
les
push
sahf
mov
movsl
bound
add
add
push
add
enter
mov
icebp
add
add
pusha
add
bound
aad
add
test
add
in
hlt
lcall
jne
push
push
push
push
push
push
push
push
lea
push
push
call
js
add
add
add
ret
mov
std
mov
mov
mov
fcomps
mov
add
mov
pushf
xchg
add
rolb
sub
pop
call
push
lea
shr
pop
call
push
push
sub
xor
dec
push
or
not
add
xor
sub
xor
pop
rol
inc
sub
pop
push
dec
pop
pushl
push
add
pop
call
call
push
push
rol
ror
push
xor
add
inc
not
sub
dec
shr
pop
ror
shr
pop
push
push
call
add
add
add
cmpsl
rolb
push
ljmp
pop
ljmp
fcmovbe
add
jae
mov
mov
push
jge
cmc
int
add
test
xchg
add
add
add
push
cld
lret
xchg
add
push
add
repnz
add
add
add
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
sahf
lretw
add
sahf
add
add
lods
add
mov
add
add
jne
ja
popa
push
xchg
stos
mov
add
add
xchg
gs
rolb
add
add
add
add
add
add
enter
push
pop
add
add
or
in
in
lcall
int
add
push
dec
lea
inc
pop
call
push
push
push
call
stos
js
xchg
add
fsts
mov
ja
add
rorb
xchg
iret
cmpsl
jo
sar
add
test
add
mov
add
mov
xor
add
lods
push
test
add
mov
add
add
in
hlt
pop
lea
push
push
push
or
not
add
inc
sub
add
dec
inc
pop
sub
lea
ror
pop
push
push
push
lea
push
lea
push
call
cli
pushf
mov
add
mov
rolb
add
add
lods
iret
lahf
jge
adcl
in
movb
add
xchg
lds
jne
push
push
call
add
mov
shll
test
jne
add
int
add
add
pop
add
loopne
add
lret
bound
lcall
mov
push
push
push
lea
push
push
push
push
call
gs
mov
scas
push
add
in
bound
xchg
add
add
add
add
int
cltd
add
jae
add
mov
pop
add
lcall
push
push
call
jmp
cltd
loop
add
jne
add
out
add
xchg
pop
add
mov
clc
cli
jecxz
jne
clc
add
xchg
aam
mov
scas
add
mov
xchg
mov
call
push
push
shr
dec
push
and
add
not
not
not
sub
dec
add
xor
ror
pop
lea
pop
push
push
push
lea
push
push
push
push
push
call
add
fldl
addl
fiaddl
lcall
loop
add
mov
mov
sarb
add
add
scas
icebp
add
rol
add
jnp
pop
test
aam
rcll
xchg
mov
fistps
mov
add
mov
stc
aam
sub
pop
pushl
call
push
push
lea
push
push
call
add
ljmp
loop
push
add
pop
cld
icebp
add
jae
add
fwait
lcall
mov
idivb
call
push
sub
pop
mov
push
push
not
rol
push
or
inc
add
ror
sub
sub
rol
dec
sub
pop
not
shr
pop
push
push
push
push
push
push
push
push
push
push
call
fildl
add
add
leave
add
add
pushf
rolb
cmc
add
pop
xchg
add
in
mov
pop
mov
mov
mov
mov
add
mov
add
lahf
add
lret
jae
mov
add
add
jae
sub
pop
pushl
push
dec
pop
call
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
addb
add
add
jl
add
add
test
add
mov
ret
lods
testb
popa
in
arpl
mov
jp
add
sub
pop
push
pushl
push
shr
rol
dec
pop
call
push
push
lea
shl
sub
push
xor
add
lea
sub
ror
xor
pop
ror
pop
push
push
push
push
push
push
push
push
call
mov
add
jae
outsl
and
push
addr16
add
jne
add
add
add
hlt
subb
lods
lret
roll
mov
leave
movsb
sub
pop
pushl
push
push
push
push
push
push
call
xchg
push
ljmp
incb
loope
pop
add
fmul
idivl
add
test
add
les
addb
pop
xlat
mov
mov
in
add
add
add
xchg
test
add
add
lahf
add
add
add
add
sbb
or
flds
outsb
push
or
not
add
add
sub
shr
lea
shr
pop
not
pop
push
push
push
or
inc
add
rol
sub
ror
sub
pop
pop
push
xor
not
dec
inc
pop
call
push
push
rol
dec
ror
push
or
not
add
xor
sub
rol
lea
xor
pop
shl
sub
sub
lea
pop
push
sub
pop
pushl
push
lea
pop
call
mov
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
mov
add
arpl
jnp
addl
add
iret
js
stos
mov
scas
testl
xchg
fiadds
add
incb
lcall
pushf
and
decl
call
lea
push
lea
push
push
push
call
push
fnsave
add
add
cli
test
push
faddp
lods
add
ficoms
faddl
add
xchg
add
add
rolb
add
pusha
xlat
add
int3
in
aad
stc
add
add
add
jp
fadds
add
sti
mov
mov
push
push
call
add
add
add
add
jo
cwtl
xlat
add
add
lea
in
add
shlb
mov
std
xlat
jns
in
clc
lcall
push
push
shr
not
add
ror
pop
push
push
ror
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
scas
add
push
test
add
add
add
push
in
add
jmp
jp
in
add
pop
mov
test
test
add
mov
jbe
mov
mov
add
add
ja
mov
mov
xchg
out
call
add
sub
pop
push
push
not
shr
ror
pop
push
push
xor
xor
pop
push
pushl
push
not
rol
pop
push
call
push
push
sub
push
and
add
xor
sub
sub
add
sub
sub
pop
shr
xor
pop
push
shr
not
xor
sub
pop
pushl
push
sub
rol
not
pop
call
push
ror
shl
ror
add
pop
call
push
push
push
push
lea
push
push
call
add
leave
shrb
add
test
in
jne
stos
add
pop
mov
add
mov
mov
mov
jl
stos
add
push
testb
mov
lahf
xchg
mov
cli
lret
add
mov
flds
stos
lret
movsb
insb
jecxz
mov
mov
mov
cli
mov
in
call
mov
push
add
pop
pop
push
push
push
lea
push
lea
push
call
clc
movsl
push
mov
mov
add
xorl
mov
add
add
fsub
jae
js
mov
mov
mov
addl
pushf
nop
jb
add
mov
add
iret
pop
mov
add
add
out
jne
mov
js
add
add
add
mov
sub
pop
dec
jne
call
push
push
sub
push
sub
add
inc
sub
shr
dec
xor
pop
shl
pop
push
push
push
push
push
lea
push
call
int3
add
push
lcall
add
ret
mov
add
add
lock
jnp
movsl
mov
xchg
xchg
mov
add
xchg
test
mov
add
gs
add
cltd
jmp
js
mov
fwait
add
imul
loopne
imul
rcrl
cwtl
sbb
add
aad
push
push
shl
pop
call
push
push
lea
push
push
push
push
push
call
movsl
jl
add
add
add
cmc
add
add
jp
add
add
cltd
addl
addb
add
lock
mov
add
mov
add
add
nop
cwtl
js
mov
add
add
stc
lret
adc
add
add
add
js
hlt
and
sub
pop
mov
push
push
push
push
push
push
push
lea
push
call
mov
cltd
add
add
xchg
mov
lock
test
add
jae
mov
fiaddl
mov
outsl
mov
jns
movsb
lret
xchg
add
ja
mov
sti
lret
jle
push
add
insb
ja
jmp
add
push
push
add
jae
filds
mov
pop
push
out
adcb
loopne
lcall
pushf
and
ljmp
aaa
mov
and
ret
or
not
add
sub
sub
dec
pop
ror
shl
pop
push
sub
dec
inc
pop
pushl
call
push
rol
dec
pop
push
call
push
push
shl
rol
push
xor
add
sub
sub
sub
dec
shr
pop
shl
lea
pop
push
add
dec
pop
pushl
push
inc
add
pop
call
call
push
push
lea
push
lea
push
call
popa
add
add
fildl
add
add
cwtl
add
add
xchg
add
mov
fsubr
add
add
mov
stc
into
add
mov
pop
mov
push
sub
sub
sub
pop
lea
push
push
add
ror
dec
add
push
or
inc
add
xor
rol
add
sub
xor
xor
dec
pop
shl
sub
pop
push
lea
push
call
mov
mov
jecxz
add
mov
testb
xchg
hlt
add
in
push
frstor
xchg
add
fwait
lea
add
add
xchg
imul
xchg
add
fwait
mov
add
add
test
push
add
sub
pop
pushl
call
push
add
add
pop
lea
push
pop
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
jae
add
mov
add
iret
jbe
mov
fiaddl
add
add
ja
data16
test
out
add
out
fsubr
add
loop
add
add
jne
push
push
ror
dec
push
xor
add
lea
sub
sub
lea
pop
add
sub
pop
push
rol
pop
push
push
rol
sub
sub
pop
call
push
push
rol
ror
push
sub
add
sub
xor
sub
dec
rol
pop
lea
rol
pop
push
lea
push
push
push
push
push
push
push
push
call
add
std
mov
add
add
jno
add
add
add
aad
mov
pop
add
sahf
sarb
add
add
push
mov
jne
push
lea
push
call
leave
pushf
les
faddl
add
cmc
mov
add
add
ror
mov
add
stos
add
lcall
add
add
add
sti
add
push
mov
pop
addl
lret
popl
sahf
add
insb
into
add
arpl
pop
adc
add
js
push
add
add
add
xchg
mov
test
ficomps
sar
mov
lock
add
push
stos
add
jae
cmc
add
add
in
add
pop
add
add
add
add
mov
pusha
out
jno
aad
insb
fcoml
add
mov
mov
add
jl
test
call
push
push
dec
push
or
not
add
add
sub
add
add
ror
pop
not
dec
ror
pop
push
pop
pushl
push
push
push
push
lea
push
push
push
call
add
add
pushf
nop
shrl
sarb
add
loopne
add
add
add
mov
fildl
je
mov
sub
pop
sub
pop
call
push
lea
push
push
call
cli
add
mov
loope
pop
xchg
add
lods
push
add
pop
sub
mov
add
test
test
out
add
push
out
addb
cmpb
mov
jns
add
push
mov
mov
lock
sub
pop
call
push
sub
ror
pop
jmp
push
push
push
push
push
push
call
add
loop
add
leave
add
fs
push
add
ficoml
movb
add
cmpsl
mov
shr
jne
add
mov
movl
pop
pushl
push
push
lea
push
lea
push
push
push
push
call
add
fs
mov
add
add
add
stos
mov
cmc
pushf
add
jae
fsubs
test
add
add
cmpsl
call
roll
xchg
in
fadds
add
mov
in
lcall
mov
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
into
test
lods
jecxz
xchg
in
add
sahf
hlt
add
add
int3
jne
pushf
fwait
pop
mov
mov
ljmp
add
rolb
add
fucomp
push
add
test
cmpsl
add
add
add
add
add
add
add
add
add
add
add
jp
sub
pop
jmp
push
push
xor
not
push
xor
add
inc
sub
rol
pop
add
pop
push
sub
sub
add
add
pop
pushl
push
push
push
lea
push
push
push
call
mov
ret
mov
add
out
add
jecxz
add
out
add
popf
add
add
pop
jp
add
add
add
xchg
add
outsl
xchg
add
add
add
sub
pop
call
push
shr
add
pop
push
push
add
lea
pop
call
push
push
rol
add
push
and
add
shr
add
shr
sub
sub
add
inc
pop
xor
pop
push
add
sub
sub
not
pop
pushl
push
push
push
push
push
lea
push
push
call
add
aam
stc
fwait
pop
pop
loopne
add
in
add
add
mov
popa
add
add
lret
mov
jp
insb
add
add
add
add
add
bnd
sub
pop
call
push
push
push
push
push
push
call
add
adcl
lret
out
add
shrl
xchg
ret
add
into
pop
add
cltd
add
add
aam
add
mov
icebp
shl
mov
aam
add
add
mov
in
add
lcall
rclb
inc
ret
push
push
push
push
push
push
push
push
call
add
mov
mov
add
rorl
xchg
add
add
mov
mov
fdivrs
mov
add
add
add
repnz
sahf
xchg
xchg
mov
push
fwait
add
xchg
jle
out
outsl
scas
loop
mov
add
mov
in
fcomps
push
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
gs
stos
add
add
shll
outsl
add
cltd
add
scas
ljmp
push
lea
aad
add
lcall
les
pop
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
pop
pop
outsl
add
add
enter
int
cmc
lahf
mov
jb
addr16
cld
add
add
mov
in
jmp
mov
popf
mov
add
fadds
shrb
pop
add
pop
push
test
jns
test
sarl
add
in
sub
pop
pop
push
push
push
call
mov
add
out
les
mov
aad
add
xchg
lods
add
testl
fisubrl
shlb
mov
xchg
xchg
jmp
add
add
add
in
hlt
lcall
pop
push
ror
pop
leave
push
lea
push
push
push
push
push
call
add
out
pop
fsubr
sahf
mov
xchg
add
add
mov
push
mov
cli
add
fs
add
mov
lahf
jne
mov
jbe
mov
push
in
out
jnp
add
mov
add
addr16
pop
add
push
lea
push
call
jno
rolb
sti
push
mov
add
mov
lret
add
xchg
loopne
add
mov
xchg
add
out
jp
in
clc
lcall
push
push
call
mov
add
add
add
jl
jns
jle
cmpsb
mov
xchg
int3
ljmp
lret
fs
movb
add
movsb
mov
pop
incb
mov
ret
push
add
dec
shl
pop
push
push
lea
push
push
push
push
call
push
nop
add
pop
pop
insb
add
add
stos
jnp
add
mov
in
add
test
push
add
lods
add
nop
rcrb
rolb
add
xacquire
leave
call
leave
lea
pop
fs
hlt
roll
add
sub
pop
mov
push
not
pop
cmpl
jne
push
push
call
add
call
int3
jnp
add
mov
push
jmp
mov
add
repnz
les
mov
mov
mov
lods
push
jle
jae
sub
pop
mov
jmp
push
sub
lea
add
inc
pop
mov
push
push
lea
push
push
call
lds
add
in
add
xchg
hlt
mov
add
lret
add
add
add
push
popa
filds
mov
add
add
add
into
rcrl
fiaddl
add
add
add
add
stos
fwait
add
nop
mov
mov
xchg
pusha
jae
add
jmp
lock
and
push
push
push
call
add
mov
mov
add
add
out
mov
add
lcall
xchg
xchg
add
xchg
add
add
mov
sarl
sub
pop
xor
push
sub
add
rol
pop
xor
push
xor
xor
pop
add
xor
push
sub
pop
dec
push
push
push
call
add
fildl
scas
add
test
add
rolb
add
outsl
mov
add
pusha
add
pop
push
mov
add
jmp
jmp
push
rol
pop
sub
push
sub
dec
pop
pushl
push
rol
dec
pop
pop
push
push
lea
push
call
ljmp
add
mov
add
add
lds
add
add
add
loopne
jle
add
pop
add
lcall
jmp
push
rol
inc
pop
cmp
jne
push
rol
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
outsl
iret
add
cli
movsl
add
add
imul
pop
add
add
add
shrb
pop
lea
push
inc
xor
inc
pop
sub
push
push
push
push
call
add
insb
lret
add
subl
hlt
add
sti
add
xchg
add
push
add
loop
mov
jno
icebp
add
loop
add
movb
jae
data16
xchg
add
add
add
rorl
jp
xchg
mov
or
jmp
mov
xor
inc
add
add
add
push
movb
test
add
xchg
mov
scas
add
xchg
add
out
out
loop
add
push
xchg
jle
ret
xchg
jae
mov
push
xchg
jge
add
movb
add
int
ljmp
pop
add
sub
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
jb
add
add
add
add
add
mov
addr16
add
xorb
xchg
enter
cltd
add
xor
icebp
shr
rol
pop
pop
push
sub
add
pop
shr
and
push
add
shr
shl
sub
pop
sub
push
not
pop
cmp
jne
leave
push
add
add
pop
ret
push
push
not
shl
lea
ror
pop
mov
add
push
ror
add
shr
add
pop
push
push
push
ror
ror
shr
not
pop
push
push
add
pop
push
push
add
add
add
add
pop
push
push
push
push
push
push
push
call
add
ficomps
add
add
add
loop
jno
add
cltd
fldl
push
add
sar
push
pop
out
fildll
sub
pop
mov
push
push
push
push
call
add
mov
add
loopne
jmp
add
add
in
push
add
jb
add
mov
clc
jl
add
add
add
add
imul
filds
push
add
lcall
push
cmp
push
lea
push
push
push
push
push
push
push
call
xlat
loop
add
add
add
test
xchg
lds
roll
add
fstps
mov
jns
jb
mov
test
add
add
add
mov
add
sub
pop
sub
push
pop
mov
push
lea
push
call
cli
add
mov
mov
mov
mov
in
mov
lds
push
add
int
add
push
lods
add
mov
add
sub
pop
shr
add
push
shr
sub
shl
pop
mov
push
ror
sub
pop
add
push
xor
shl
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
call
aam
cli
int
cltd
add
add
roll
movsl
jns
push
add
pop
jecxz
movl
int
neg
imul
add
push
push
push
push
call
loope
add
stc
add
jnp
push
js
les
lahf
add
lea
jge
movsl
fistpl
add
add
cwtl
xchg
bound
addb
icebp
faddl
sbb
push
popa
jmp
movl
in
lock
xor
push
push
lea
push
push
call
cli
shll
mov
filds
pop
xchg
lret
add
iret
clc
add
lods
fstpt
add
in
lock
mov
and
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
test
mov
sti
int3
add
ret
push
shl
icebp
fcomi
mov
cmp
leave
ja
add
add
add
nop
xchg
add
sti
pusha
add
add
fadds
add
push
add
pop
sub
pop
rol
push
lea
push
push
call
add
add
stos
les
mov
pushf
out
add
mov
add
jp
mov
push
fstp
lods
pop
js
clc
push
pop
push
add
pop
add
addr16
lds
mov
in
stos
xchg
mov
sub
pop
rol
push
shl
pop
xor
push
dec
add
xor
dec
pop
inc
push
inc
pop
cmpb
jne
push
not
xor
pop
add
cmp
je
push
push
push
push
push
call
mov
bound
jae
add
jno
vpsubq
add
cmpsl
ret
int3
add
mov
mov
add
add
push
jne
jo
jbe
mov
call
mov
imul
xchg
push
add
in
pop
call
add
rolb
jb
fwait
movl
in
pop
add
push
shl
add
add
pop
cmpl
jne
xor
push
rol
lea
sub
lea
pop
pop
pop
push
lea
add
shr
inc
pop
pop
pop
push
push
push
push
push
lea
push
push
call
add
outsl
icebp
fldl
xchg
xchg
add
add
add
add
add
add
add
push
add
jge
add
mov
mov
leave
push
push
push
push
push
call
movsb
jle
add
add
rolb
test
movsb
mov
add
add
loopne
add
mov
add
add
add
data16
pop
add
lock
out
sub
pop
ret
mov
push
lea
pop
add
push
push
push
lea
push
call
add
clc
jne
mov
mov
arpl
ja
pop
mov
push
bnd
push
add
add
mov
add
imul
imul
add
push
aam
add
add
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
leave
out
xchg
bnd
add
xchg
add
add
test
mov
push
roll
mov
scas
xlat
add
add
pop
jl
jp
int3
add
add
pop
add
mov
loopne
lods
add
popf
add
xchg
test
js
sahf
lds
sar
pop
sub
pop
push
push
push
push
push
lea
push
push
call
iret
mov
add
fcmovu
cwtl
je
lea
add
push
add
cld
pop
add
cmpb
bound
lret
jecxz
cld
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
call
add
add
rorb
add
mov
lret
add
push
data16
data16
add
aad
push
add
add
add
jb
add
add
push
fiaddl
add
pop
push
call
lods
add
add
add
mov
mov
rolb
movsb
arpl
imul
xchg
add
ja
sti
scas
mov
sub
xchg
scas
add
add
mov
lcall
testl
std
shr
pop
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
scas
mov
cmpsb
add
add
idivb
nop
add
pop
add
cltd
lods
xchg
test
push
rcl
add
push
repnz
mov
lcall
mov
push
add
shr
pop
push
push
pop
call
xor
push
push
push
lea
push
push
lea
push
lea
push
push
call
cld
mov
add
add
add
mov
mov
add
lods
push
pusha
out
test
lret
cmpsl
xchg
xchg
add
out
add
mov
loopne
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
cltd
add
out
aam
xlat
pop
add
std
xchg
cli
mov
add
add
add
add
add
aam
add
add
xorl
repnz
imul
add
movb
add
add
add
push
rol
pop
pop
push
lea
push
push
push
call
add
shlb
in
mov
int
mov
fisttpl
add
fiadds
ja
mov
callw
mov
movb
in
lock
pop
leave
push
lea
push
push
lea
push
push
push
call
test
jge
insb
pop
in
add
les
mov
movsb
pop
movsb
out
jecxz
add
jno
jbe
je
add
fistpll
mov
add
mov
add
cmc
pusha
mov
add
ret
push
push
sub
pop
mov
add
push
push
push
push
call
iret
xchg
add
jecxz
rolb
add
lret
add
add
add
pop
cmc
nop
lds
pop
add
jge
xlat
push
push
push
xchg
int
add
add
mov
xchg
add
aam
in
fiaddl
jae
add
add
mov
in
lock
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
fcomi
xchg
mov
jae
testl
xchg
incb
xchg
add
test
pushf
loopne
add
cmc
popl
bound
add
into
movsl
testl
add
pushf
mov
add
roll
jp
xchg
nop
cmpsl
mov
add
add
loope
loopne
icebp
mov
popf
call
imul
pop
push
push
push
dec
not
add
not
pop
push
push
push
call
jle
mov
movl
jecxz
add
add
add
add
rcr
jne
xchg
add
add
add
add
rolb
add
std
popf
clc
out
mov
add
loopne
add
add
jne
add
pop
fildl
iret
xchg
jl
lret
mov
clc
lcall
pop
or
lea
push
push
lea
push
push
push
push
push
call
push
lret
add
aad
fadds
rolb
mov
lock
ljmp
mov
add
out
sti
xchg
jmp
ret
add
insb
fs
pop
pop
push
not
inc
dec
pop
lea
push
add
pop
sub
push
dec
inc
pop
mov
push
push
call
scas
shll
add
pop
add
les
addr16
add
add
stc
out
add
push
add
mov
fldcw
push
lret
add
imul
jl
scas
add
sub
pop
shr
add
push
inc
inc
shr
pop
mov
push
inc
not
pop
add
push
push
push
lea
push
push
push
call
mov
rorb
add
add
outsl
imul
leave
mov
add
jl
add
add
add
add
mov
jb
add
in
call
pushl
push
dec
pop
popl
push
sub
pop
mov
push
rol
lea
dec
sub
pop
add
xor
push
push
push
call
js
push
add
add
add
int
add
add
clc
xchg
add
pop
add
add
data16
xlat
xchg
rolb
add
add
pop
sti
jecxz
int
arpl
jb
stc
pop
filds
iret
mov
lahf
addr16
push
std
lret
loope
xchg
push
pop
lea
push
push
push
push
push
push
push
call
fmul
fidivrl
out
add
sti
imul
iret
add
pop
jb
fistpl
aam
add
sti
jo
ror
aam
jp
add
add
add
fistl
jmp
andb
add
clc
stos
add
jge
cwtl
mov
out
add
in
in
lcall
adc
rcll
xor
push
lea
push
push
push
call
mov
add
rorb
add
add
add
add
add
data16
scas
add
mov
add
fsubp
mov
add
pusha
mov
add
sti
add
cltd
cwtl
add
jbe
add
add
add
add
test
jp
add
ljmp
rol
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
out
testl
ret
test
jno
pop
pop
arpl
pop
add
testb
mov
add
fldl
jge
mov
filds
pop
ja
mov
in
icebp
push
push
loop
loopne
add
cmpsl
add
add
add
add
mov
pop
nop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
jge
xlat
add
add
add
cmpsl
add
pop
les
aad
mov
mov
fs
pop
lods
hlt
add
add
add
in
add
push
add
rcl
mov
add
add
add
push
rolw
repnz
add
add
xchg
mov
jbe
add
add
fdivr
lcall
push
add
shr
add
pop
xor
push
lea
push
call
fiaddl
mov
add
add
add
add
add
push
add
add
mov
jne
std
mov
cmp
add
add
incb
add
fldenv
stc
loope
push
pop
lods
addl
mov
lahf
add
add
cmpsl
add
jmp
add
add
sub
pop
nop
push
lea
push
push
call
pop
testb
jle
ljmp
mov
loop
mov
addb
jns
data16
mov
add
add
ret
pop
jmp
rclb
pop
add
add
sub
pop
nop
push
sub
rol
pop
inc
push
push
lea
push
push
lea
push
push
push
push
push
call
movl
add
leave
aam
mov
add
push
add
insb
add
add
lret
mov
pop
call
mov
add
push
in
mov
pop
leave
add
add
jl
sub
pop
nop
push
push
push
lea
push
push
push
push
push
push
push
call
add
xchg
pushf
insb
add
add
aad
test
scas
pop
in
cmpsb
add
add
add
mov
push
lds
in
fdivr
lcall
cmpb
jne
push
shl
not
inc
pop
add
push
add
pop
nop
push
shl
rol
shl
pop
nop
cmp
je
push
inc
ror
add
pop
nop
nop
push
sub
pop
inc
nop
push
shr
xor
ror
pop
nop
cmp
jb
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
incb
add
adcl
icebp
add
push
jnp
out
insb
out
int3
jge
jnp
lret
mov
xchg
add
addr16
jb
add
mov
out
add
mov
add
ja
jbe
mov
stos
add
add
shl
add
rclb
dec
mov
lea
push
push
push
push
push
push
push
push
call
add
pop
add
loope
add
add
add
jmp
imul
add
loopne
push
in
jle
add
sub
pop
jmp
mov
push
push
call
jnp
add
mov
add
add
out
add
push
in
add
shlb
add
add
jle
andl
add
out
add
movsl
iret
lahf
xchg
mov
insb
jl
lahf
add
push
test
mov
add
add
fldl
add
fiaddl
xchg
mov
lcall
rorl
mov
jb
push
push
push
push
call
add
add
add
bound
mov
add
jne
mov
negl
lods
roll
pop
add
add
add
in
pop
mov
add
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
outsl
ja
fsubs
mov
add
leave
enter
mov
arpl
cmpsb
push
add
xchg
xchg
mov
xchg
add
pushf
pop
outsl
xlat
icebp
add
xchg
lods
xlat
andb
add
out
add
pop
add
xor
push
add
add
add
dec
hlt
xor
push
sub
add
rol
pop
xor
push
dec
sub
rol
pop
shl
push
add
shr
pop
xor
push
push
push
lea
push
push
call
sahf
add
clc
add
add
add
add
loop
add
mov
add
mov
in
lcall
loope
push
push
push
call
jb
jns
add
jl
add
outsl
mov
add
data16
pop
push
test
add
add
pop
push
add
faddl
pop
add
lcall
dec
nop
add
mov
xlat
pop
inc
push
push
call
xchg
bound
add
xchg
push
pop
addb
xchg
addr16
filds
ja
add
loop
bound
add
jnp
fmull
mov
add
add
in
out
add
mov
add
add
add
in
add
mov
fadds
add
shl
push
lea
push
push
lea
push
push
push
lea
push
call
add
mov
movsb
jns
add
add
stos
add
mov
xchg
add
lods
add
int3
add
add
fadds
sub
pop
xor
mov
push
sub
dec
shr
not
pop
add
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
fcmovb
add
mov
mov
jbe
lahf
add
loop
add
xchg
jo
movsb
add
fldl
add
mov
add
add
pop
mov
add
add
add
add
mov
mov
sar
jecxz
mov
stos
fstp
adc
fldz
add
mov
pop
pop
push
push
push
push
push
lea
push
push
call
add
add
in
add
jno
out
mov
leave
stc
out
add
add
xchg
cli
pop
jbe
roll
fadds
imull
add
mov
add
add
stos
push
mov
pop
jb
outsl
add
push
icebp
mov
out
pop
add
push
push
push
call
mov
add
notb
cmpb
cmpsl
mov
in
lea
fsubl
add
sbbb
add
jno
mov
aam
xchg
out
mov
sub
pop
pop
push
rol
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
cld
mov
mov
fmulp
add
add
test
jo
mov
jb
add
add
fs
cld
add
ret
fcomps
push
push
push
push
lea
push
push
lea
push
call
jmp
mov
push
xchg
insb
add
loop
lea
jnp
add
add
lods
sti
pop
add
add
fadds
imul
add
stos
sub
pop
ret
push
push
push
call
out
pop
repnz
add
add
add
lds
mov
mov
stos
mov
mov
add
add
xchg
add
xacquire
add
rcll
hlt
pop
push
push
shl
xor
ror
pop
mov
push
sub
shr
pop
push
push
dec
sub
ror
pop
push
push
not
sub
pop
push
push
xor
add
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
enter
aad
fildll
add
push
mov
mov
add
test
add
add
imul
xlat
add
jae
fiaddl
add
add
repnz
fidivl
pusha
lahf
insb
mov
in
fcomps
dec
or
sub
dec
rol
pop
mov
mov
push
lea
push
call
mov
add
shrb
add
andl
add
add
iret
out
fwait
mov
imul
in
add
clc
pop
test
je
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
ja
add
push
ljmp
add
arpl
add
imul
add
push
pop
notb
add
repnz
loopne
push
add
in
fcomps
testb
and
add
mov
push
sub
sub
pop
mov
mov
push
add
ror
sub
pop
inc
cmp
je
push
shl
pop
test
je
push
pop
mov
push
push
push
lea
push
push
lea
push
push
call
add
out
add
mov
add
xchg
add
imul
cltd
add
add
add
add
add
jnp
cmpl
add
mov
add
add
je
mov
mov
xchg
add
add
jnp
add
add
out
add
lret
fbld
mov
add
add
lcall
cmp
je
push
push
push
call
in
add
popf
pushf
add
insb
push
aad
in
filds
add
mov
jl
add
add
jno
xorl
rolb
lret
mov
add
add
add
add
pop
add
sub
pop
test
jne
xor
push
add
inc
pop
pop
push
ror
pop
pop
push
dec
sub
add
pop
pop
pop
push
lea
add
pop
leave
push
push
call
test
xchg
out
sbbb
add
notb
pop
add
mov
ja
bound
xchg
add
add
mov
jnp
ljmp
add
mov
les
push
add
add
add
add
add
fiadds
add
add
popl
add
or
mov
push
lea
push
push
lea
push
call
sahf
out
imul
lea
add
add
insb
add
add
mov
lods
xchg
mov
out
test
mov
add
add
jo
test
mov
add
ljmp
pop
inc
push
ror
pop
cmp
jne
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
add
scas
add
push
mov
add
pop
loope
jno
out
in
movsb
rcrl
enter
imul
roll
fs
aad
sti
mov
sub
pop
lea
push
ror
pop
mov
push
dec
sub
inc
add
pop
test
je
mov
push
push
push
push
push
lea
push
push
push
push
call
add
add
jle
mov
addb
in
lret
mov
add
stos
mov
jb
fs
add
add
pop
add
aad
jl
scas
sub
pop
add
push
shl
pop
cmp
jne
push
sub
lea
shl
dec
pop
mov
push
push
call
add
out
repnz
mov
push
add
mov
aam
cmpsl
movsb
mov
add
data16
mov
xchg
sti
jns
add
add
shll
imul
add
add
sti
add
add
loopne
call
test
je
push
lea
push
call
cwtl
jle
cld
add
add
leave
mov
add
add
je
cmpb
add
out
mov
mov
add
adcb
rcll
add
push
add
mov
sub
pop
mov
push
shr
pop
add
cmp
je
push
push
push
push
push
call
subl
loope
scas
nop
add
test
icebp
jae
fs
movsl
jne
cli
lea
movsl
mov
mov
mov
add
add
pop
mov
add
add
int
movsl
lods
add
sub
pop
jmp
xor
push
shl
inc
pop
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
fcomi
add
je
iret
xchg
js
add
movsb
add
cli
movl
test
add
add
mov
movb
jl
adcb
add
add
int3
movsb
add
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
sti
add
pushf
popa
add
mov
add
add
faddl
add
data16
mov
lahf
out
mov
test
add
mov
add
add
add
jae
add
jecxz
add
mov
fcompl
push
push
push
call
add
add
jbe
add
movsb
push
stos
add
test
nop
add
clc
add
mov
jle
jbe
mov
mov
add
xchg
xchg
add
mov
pushf
jmp
test
add
push
sti
lods
mov
mov
filds
push
push
push
push
lea
push
call
add
in
add
add
add
nop
jecxz
cmpsl
test
add
mov
call
pop
pop
test
add
lock
sub
pop
ret
push
shl
pop
lea
push
push
push
push
call
in
pop
je
ret
lret
add
pop
add
push
sarb
fiaddl
jle
add
add
scas
mov
push
cmc
add
incb
lret
mov
call
add
repnz
iret
push
push
sub
pop
pop
pop
push
lea
push
push
push
push
push
push
push
call
pop
shrb
add
hlt
mov
add
add
add
add
add
fiaddl
add
roll
lds
add
add
lcall
push
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
add
addl
xchg
in
loopne
mov
addb
mov
lds
add
add
add
add
leave
add
add
cwtl
jge
lea
add
add
push
mov
in
fdivr
lcall
push
shl
pop
ret
mov
push
sub
pop
pop
push
push
push
push
push
lea
push
push
call
scas
repnz
ret
cli
mov
jmp
add
xchg
rolb
cli
pop
imul
jp
xlat
add
add
faddl
add
int3
cli
add
add
out
aam
push
add
loope
jmp
frstor
sub
pop
pop
push
ror
not
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
xchg
xchg
add
stos
mov
add
int3
enter
arpl
pop
xchg
stos
xchg
jbe
add
add
cmc
lods
mov
cmpsl
lret
mov
xchg
shrb
pop
jae
jnp
add
jbe
add
pop
push
push
call
movsb
add
xchg
stc
mov
ljmp
add
clc
pop
insb
stos
test
pop
add
loopne
fcoml
xchg
je
add
in
clc
pop
leave
ret
test
push
test
jae
mov
jmp
push
test
jb
insb
sbb
pushl
jae
test
jae
xor
jb
mov
mov
idivl
jno
xorl
and
movsl
pop
sbb
mov
inc
hlt
xchg
and
lock
adc
loope
sub
xchg
in
cs
adc
pop
xor
in
dec
push
mov
adc
lock
daa
daa
sub
cmp
sbb
pop
mov
addb
je
pusha
mov
sbb
orb
movsb
dec
lcall
gs
mov
sub
push
cwtl
outsl
hlt
rcl
fidivl
aad
pop
cmpl
test
int3
ja
sub
mov
repz
int
inc
mov
sbb
xor
cmpsl
scas
dec
jmp
jle
rcrl
fistpll
jmp
mov
ss
mov
ds
cs
mov
sub
jne
cmpb
and
jecxz
nop
fidivs
daa
push
cmp
push
rcrl
gs
imul
scas
push
movsl
push
movsb
sbb
jno
mov
sbb
testl
jmp
outsb
popf
insl
cmp
cs
hlt
nop
loope
mov
int
mov
adc
dec
and
js
cmp
inc
mov
les
icebp
sub
neg
lods
adc
pusha
aaa
pop
xor
lods
gs
cwtl
and
mov
ss
movsl
subb
xchg
pop
mov
dec
shufps
push
cmpsb
stos
pop
inc
into
push
dec
repnz
outsb
sbb
jg
adc
ja
aad
sbb
add
push
fidivs
sbb
push
sub
sarl
and
cld
popa
mov
add
frstor
inc
mov
mov
rorl
jp
mov
pop
mov
rcrb
inc
rclb
in
lock
cmc
ljmp
mov
in
flds
jbe
pop
andl
xchg
lcall
pop
fsubrs
pop
cmc
sub
sub
and
push
fs
fs
xchg
cmpsl
add
and
or
rorb
add
flds
jno
aad
movb
cmp
data16
incb
in
inc
out
xor
inc
pop
cld
iret
adc
cmp
das
lret
das
hlt
cld
xchg
add
pop
mov
inc
cld
fnstsw
push
dec
and
xchg
sub
shlb
mov
push
jbe
xor
addb
xchg
lret
stos
mov
mov
jg
mov
test
scas
push
xorl
mov
cmp
mov
push
iret
lahf
data16
pop
xchg
out
jne
xchg
add
mov
sbb
fisubs
pop
pop
inc
sahf
mov
push
cmp
ud2
jbe
shrl
mov
mov
inc
loope
insl
jb
cmp
sarb
hlt
or
jbe
adc
movsb
sbb
test
pusha
xor
nop
cmpsb
xchg
imul
fwait
add
scas
push
push
pop
nop
mov
and
in
adc
insl
movsl
jne
adc
enter
push
add
inc
xor
xlat
into
int3
gs
dec
sbb
aas
cmpsl
jge
xchg
sub
out
adc
fmuls
jecxz
add
sub
and
or
push
in
xchg
sti
add
loope
xor
aam
in
inc
enter
fidivl
arpl
adc
out
adc
mov
loop
leave
inc
mov
mov
loopne
iret
js
adc
fs
mov
loop
dec
sub
gs
and
pop
adc
jno
mov
scas
mov
xor
stc
gs
mov
pushf
push
jnp
arpl
push
pop
mov
add
lret
mov
je
ficomps
adc
push
pop
nop
cmpsl
mov
flds
repz
cmp
test
jno
and
xchg
mov
adcb
cmpsl
in
out
mov
lahf
lcall
cmc
insl
add
mov
out
jne
loopne
jns
jns
pushf
lahf
cmp
jmp
jbe
cmp
and
dec
or
cmp
pushf
sub
jp
and
xchg
push
out
xchg
je
and
push
lods
pop
outsl
out
enter
int3
out
pop
dec
sbb
xor
lds
sbb
push
xchg
cmp
sbb
popf
cmp
pop
xchg
mov
ss
and
subb
out
shrb
xchg
test
sbb
xor
scas
std
xorl
xor
sbb
imul
xchg
in
add
dec
cmpsl
mov
clc
push
gs
and
das
xchg
cmc
fstpt
sbb
push
lods
loop
push
jb
scas
or
lods
ficoms
test
test
and
lock
arpl
sar
popf
fidivl
mov
mov
mov
dec
mov
sub
xor
adc
sti
aam
clc
adc
pop
pusha
add
in
stc
lods
inc
add
cmpsl
je
popaw
sub
out
in
aam
imul
lds
jbe
in
jno
shll
cmp
test
sub
push
outsb
mov
and
cmp
jl
xchg
dec
rolb
stos
mov
sbb
push
xchg
lds
ss
jae
scas
fldl2e
pop
sbb
mov
xchg
adc
fdiv
cltd
rorl
out
hlt
mov
js
mull
repnz
mov
pop
add
inc
iret
xlat
pusha
or
rcrb
in
sub
mov
push
jnp
add
mov
pop
push
mov
lds
lea
sub
mov
push
mov
sbb
or
pusha
andb
lret
dec
and
loope
lods
add
dec
scas
pop
call
jbe
push
adcl
xor
int3
ret
fisubl
insl
push
fcmove
pop
es
loope
and
out
lahf
add
call
mov
pop
and
sbb
mov
test
inc
pop
dec
fprem
mov
popf
dec
clc
sti
jnp
out
and
sbb
jns
ss
popa
in
pop
je
aaa
sbb
lods
clc
iret
xchg
cs
xor
mov
pop
das
pop
movsb
ja
iret
ret
pop
lock
out
cmp
mov
add
mov
notl
arpl
sub
sub
arpl
test
jno
pop
movsl
dec
pushf
les
fnsave
sbb
sub
adc
mov
dec
cmp
bound
cmp
jno
and
inc
mov
jge
lock
mov
ja
into
leave
out
rol
pop
mov
roll
call
loopne
in
aaa
dec
pusha
imul
lret
ret
test
jne
loopne
jb
fucomp
inc
ret
jne
hlt
ss
cmp
lcall
sbb
push
das
or
lcall
rolb
xchg
lds
cmp
add
mov
cmp
pushl
add
dec
cmp
cwtl
call
or
ljmp
add
jp
or
push
stos
or
push
sub
adc
stos
jp
mov
jmp
pop
adc
fbld
repz
stos
rcr
mov
mov
dec
imul
leave
adc
vpmacssdql
test
mov
outsb
add
fcomi
pop
xchg
push
push
cmp
pop
pop
outsl
cmpsl
int
mov
lock
mov
icebp
cld
or
xor
add
mov
aas
shlb
cmp
pop
iret
sarb
xchg
lea
cs
jns
je
call
or
sub
and
sbb
pop
xor
pop
and
dec
sahf
cmp
adc
cmp
loope
clc
mov
xchg
or
pop
call
push
cmp
xchg
cmpsb
jne
jmp
add
xchg
sbb
lods
inc
sub
or
repz
sub
js
leave
mov
pop
dec
je
push
fsubl
sahf
mov
mov
pop
xchg
das
stos
popf
xor
xchg
das
out
in
repz
add
pop
ss
aam
test
fidivrl
test
nop
out
mov
mov
jmp
mov
popa
nop
sbb
aam
pop
jecxz
pop
inc
and
bound
pusha
insb
clc
stos
xchg
pop
pop
repz
sbb
adc
out
pop
jo
pop
xchg
cmc
outsl
sbb
sti
leave
leave
out
cmp
out
lret
imul
adc
lcall
fwait
adc
xor
insb
jmp
sarl
mov
ds
add
inc
stos
fwait
jecxz
int
stos
or
std
adc
sub
imul
pop
loope
jecxz
jbe
sbb
push
add
cmp
mov
sbbb
sti
in
ret
lods
cmp
sub
int
mov
sbb
sub
xchg
xlat
leave
adcb
test
mov
insl
xor
pop
fstl
inc
sub
rcll
mov
add
cli
xchg
add
inc
cmp
jg
push
mov
fnstcw
jnp
mov
rcr
mov
gs
daa
arpl
fs
insb
push
icebp
gs
lods
mov
sbb
add
xchg
mov
cmp
test
scas
cwtl
aad
nop
adc
popf
out
cld
inc
sub
insb
pop
mov
test
outsb
pop
or
or
sti
aam
call
jno
sub
popa
into
and
enter
test
outsb
cmp
int3
test
sbb
aas
sub
stc
xchg
loope
cmp
fsubrs
out
es
sub
and
xchg
mov
dec
xlat
jmp
cmc
outsl
fidivrs
push
ljmp
into
enter
inc
ljmp
pop
dec
into
aas
adc
mov
orb
adc
sub
mov
inc
popa
inc
lret
out
movsl
xor
jecxz
aaa
mov
mov
pop
push
push
nop
mov
in
or
subb
dec
cmp
cltd
push
in
aaa
filds
sub
mov
pop
cmc
xchg
mov
mov
lret
or
test
mov
popf
pop
jbe
in
jo
fdivrp
imul
mov
mov
push
adc
cltd
pop
clc
ljmp
jb
jno
jb
pop
and
and
mov
or
sub
out
mov
es
mov
mov
adc
or
jg
shlb
sbb
outsb
rcrl
scas
loope
bound
cs
pop
imul
addr16
lahf
ret
pop
pop
xor
add
or
je
mov
mov
out
add
jp
mov
outsb
int
pop
xchg
mov
push
pop
pop
out
sub
add
cwtl
cmpsb
mov
jbe
mov
add
inc
bound
mov
pop
outsl
and
movsl
ret
cmpsl
shlb
sub
adc
icebp
ds
lret
call
mov
outsl
pop
xor
sbb
outsb
sub
sahf
and
stc
xchg
rol
or
adc
mov
sub
inc
fstpl
sahf
bound
in
dec
inc
or
push
enter
loope
or
pusha
jo
lea
push
mov
outsl
inc
popa
sbb
xor
jno
pop
out
lds
xchg
out
cli
mov
loopne
sbb
pop
aas
aam
inc
in
lcall
scas
sbb
or
les
xor
inc
mov
inc
mov
fisttpll
cmpsl
js
sarl
call
stos
test
push
es
add
inc
mov
cmpsl
sub
or
aam
mov
jl
int3
adc
mov
mov
std
xor
orl
sahf
mov
movsl
movsl
cmp
das
cmpb
inc
jnp
cmp
inc
pop
dec
push
jbe
add
jl
inc
lods
es
in
pushf
jo
cmc
sub
fwait
cld
jae
cmpsb
leave
subl
jge
testb
push
push
sahf
jecxz
mov
je
xchg
ss
cmp
rcrl
pop
dec
popf
push
cmp
ficoml
mov
dec
push
arpl
mov
mov
sbb
mov
shl
test
cli
fsubrl
sub
rcll
mov
rcll
inc
sub
into
ret
mov
pushaw
xchg
jo
pop
aad
adc
out
mov
mov
dec
imul
push
pop
scas
push
daa
xchg
cmp
jne
and
fimuls
shll
repz
inc
lods
push
and
sbb
mov
mov
je
rcrl
rol
adc
test
fisubs
insb
out
xor
mov
loop
aaa
adcb
repnz
pop
cmc
sub
inc
jmp
jecxz
lcall
add
imul
cmp
addr16
das
mov
fsubrs
das
push
fadd
cmp
ja
or
pop
mov
jle
adc
test
mov
repz
dec
mov
mov
rorl
shrl
xor
cmpsl
adc
and
fbstp
dec
jo
mov
sbb
jge
xchg
jmp
add
and
popf
add
iret
mov
roll
fnstenv
shlb
arpl
xor
pop
fbld
sbb
adc
add
or
jle
fcoms
push
or
adc
ja
jae
fdivrp
movlps
sbb
lcall
jmp
dec
cs
out
adc
sbb
mov
fldcw
and
out
mov
pop
stos
and
pop
mov
popa
sub
ljmp
mov
pop
push
insb
imul
andl
or
adc
and
fistps
sub
call
sbb
cmp
into
ljmp
clc
adc
cmpsl
fs
xor
nop
test
xor
sbb
add
cmp
lock
out
loope
scas
ret
inc
sbb
mov
shll
dec
ret
jnp
mov
scas
das
sbb
pop
add
and
fcmove
mov
clc
stos
dec
push
add
cltd
repnz
cld
push
xor
pop
mov
jp,pn
std
pop
loopne
jl
lret
cmpsl
push
std
jmp
out
mov
push
insl
xchg
push
stc
jmp
insl
jnp
aaa
cmp
pop
cmp
repnz
out
dec
push
loopne
mov
cmpsb
fwait
stc
orb
insl
mov
stc
movsb
aam
ret
pop
orl
frstor
test
sub
in
add
jecxz
xchg
enter
and
pop
mov
inc
xor
lock
lods
loopne
dec
lahf
ljmp
and
push
push
xlat
pop
out
inc
sbb
pop
jle
stc
add
mov
lcall
ja
dec
dec
shrl
and
jge
addr16
mov
shrb
gs
popf
mov
arpl
lret
or
pop
fwait
fs
lea
mov
mov
cs
sub
lods
inc
aaa
addr16
repz
xorps
addb
adc
inc
clc
mov
jge
and
inc
inc
fstpt
outsl
sub
out
mov
je
fcoms
or
inc
jo
sub
mov
jle
push
mov
push
dec
and
sbb
sbb
stc
stos
sti
insl
nop
adc
jg
out
fimuls
dec
pop
inc
andb
lahf
sub
mov
mov
ds
loop
jno
adc
xlat
out
out
mov
sub
ss
out
mov
inc
push
out
mov
or
das
jnp
adcl
cld
sub
in
or
rsqrtps
jne
pop
add
push
ja
mov
daa
daa
popf
pop
aaa
jle
pop
iret
pop
mov
jp
mov
out
pop
mov
add
lods
movsl
add
push
shrl
adc
out
lcall
jl
xor
fsts
insb
mov
call
mov
jae
inc
add
rorb
ss
dec
jae
sbb
jne
xor
lret
scas
jno
sbb
test
loope
xchg
rcr
jno
cli
or
iret
jnp
je
lds
push
xchg
ficoms
nop
or
stc
js
dec
jb
lods
shll
and
in
xor
ljmp
cltd
pop
iret
bound
push
mov
or
mov
add
and
xchg
cmp
mov
aas
jns
lods
icebp
push
ficomps
pop
inc
or
aaa
adc
out
incb
pop
insb
add
inc
mov
icebp
dec
pop
arpl
addr16
leave
or
inc
clc
mov
cmp
xchg
push
int3
fildl
mov
push
out
mov
std
out
dec
sahf
in
mov
add
and
dec
inc
je
fstps
fcmovbe
outsb
pop
out
xchg
mov
push
stos
dec
dec
jmp
lods
add
xchg
xor
inc
ret
aaa
mov
xlat
mov
push
sbb
icebp
push
les
add
push
push
jne
mov
cmc
ds
jae
pushf
xlat
addl
pop
int
rorb
inc
pop
mov
sbb
call
jne
mov
jmp
jmp
or
sbb
subl
mulb
mov
add
cli
mov
insb
add
loopne
clc
cmp
sbb
cmp
arpl
lods
cld
sti
pop
fadd
sub
lea
loope
push
mov
lock
pop
xor
cmpsl
arpl
adc
imul
lret
dec
cmpb
sbb
imul
mov
inc
cwtl
jno
cwtl
std
cmp
sub
jne
scas
adc
push
in
and
jne
jmp
xchg
jmp
testb
dec
testl
sub
loope
fists
xorb
mov
sbb
fldt
adc
add
shrb
push
icebp
push
cmpsb
lds
dec
cwtl
xchg
or
pop
fimull
dec
js
fsubrs
std
outsb
add
rcr
jmp
mov
mov
push
mov
or
jne
ror
adc
icebp
insl
push
cmpsb
das
in
imul
mov
out
sti
rorb
arpl
nop
in
jo
iret
pop
xchg
insl
xor
xchg
or
add
adc
dec
std
push
ja
and
test
jnp
pop
out
pop
mov
sub
cmp
pushf
mov
in
push
push
sbb
repz
cmp
cmp
in
sub
pop
iret
add
jp
and
sahf
cwtl
jg,pn
jae
push
mov
fcoml
notl
or
xor
xlat
or
lods
sbbl
cld
cmp
notl
jmp
or
leave
scas
push
adc
or
dec
mov
jecxz
mov
xchg
xchg
pop
ljmp
loop
push
cmc
add
loop
insl
mull
or
adc
jecxz
packssdw
test
aam
pusha
jge
push
and
sub
or
xor
sbb
nop
movsl
aad
outsb
jns
xchg
xchg
xor
lods
aam
inc
idivl
or
jle
mov
addb
add
adc
and
test
dec
test
cli
test
push
sbb
sub
in
mov
ret
add
and
add
cld
adc
ds
push
sub
xchg
int
cmp
cs
add
mov
dec
push
adc
gs
outsw
insb
jmp
jb
mov
pop
sub
aaa
hlt
movsb
arpl
sbb
add
test
inc
mov
xchg
clc
out
xor
pop
mov
rorl
xor
and
pop
aad
out
jbe
xor
mov
stc
jbe
fdivs
push
sub
clc
insl
arpl
inc
fistpl
pop
and
pop
inc
and
fucomip
rcl
fldl
sub
jecxz
aad
xchg
test
and
jmp
and
mov
or
xrelease
inc
pop
test
into
cld
inc
adc
scas
jmp
jge
xchg
push
js
dec
xor
cwtl
jne
sbb
jbe
jno
pop
cld
xor
mov
es
push
pop
sti
insl
jecxz
cli
rorl
xchg
negl
cli
push
jno
insl
lcall
dec
je,pt
notb
inc
cld
mov
pop
or
mov
jno
mov
mov
push
or
mov
stos
mov
shl
mov
arpl
es
aas
fst
jns
or
movsb
cmc
push
shlb
fxch
movsb
idivb
test
call
xchg
loop
pop
dec
dec
cmpsl
jmp
lret
push
test
shll
push
jbe
pop
aam
cmp
dec
incb
dec
scas
and
or
pushf
in
mov
insb
dec
add
clc
jle
stos
lea
rclb
roll
sub
das
lock
popa
mov
inc
cmc
fcmovnbe
imul
pop
or
jno
aam
hlt
adc
sub
push
setp
arpl
push
lds
fidivrs
mov
pop
and
jge
int3
inc
push
sub
popa
imul
cmpl
notl
lahf
leave
mov
fwait
imul
cmp
gs
faddl
js
mov
faddp
adc
movsb
mov
lret
rolb
xor
mov
int3
or
jl
int
popa
insb
stc
repnz
cmp
imul
enter
mov
fiadds
mov
inc
push
mov
in
fisubrl
add
stos
loopne
sbb
xor
mov
xchg
rcll
pop
and
dec
cmp
fimull
pop
dec
fsubs
leave
mov
jnp
mov
mov
aas
subb
das
mov
movsb
imul
jo
mov
insb
pop
cmc
out
or
data16
sub
popf
dec
inc
mov
mov
add
imul
call
in
mov
cmpsl
or
mov
std
push
je
and
test
push
push
lds
push
sbb
xor
cli
or
daa
xlat
mov
pop
push
xlat
js
mov
cmp
sub
sub
xor
cmp
test
push
pop
mov
popa
out
cvttps2pi
xor
mov
addr16
jmp
repnz
jnp
pop
test
cwtl
lods
pop
jecxz
out
lret
ja
xchg
shlb
inc
je
sbb
lock
jp
xor
clc
push
das
stc
jp
mov
mov
jae
fstpt
fcmovbe
mov
jp
mov
xor
es
lods
movsl
popa
mov
xchg
notb
lods
loopne
cmpsl
cmpb
xor
pop
je
add
cli
bound
fs
fsts
mov
sub
in
jle
add
pop
xor
cmc
jnp
xor
stos
mov
xchg
xchg
cli
mov
push
mov
mov
push
mov
and
scas
sub
scas
cmpsb
fldcw
xchg
mov
cmc
aam
xor
mov
incl
push
cmpsb
jl
gs
test
jo
inc
add
push
xor
inc
out
mov
ficoml
mov
shrl
daa
ljmp
mov
mov
adc
mov
stos
das
pusha
xchg
scas
inc
fdivrs
inc
inc
jne
mov
cltd
scas
adc
sub
js
jl
insl
loopne
cwtl
imul
out
bound
aad
in
mov
push
xor
push
xor
pop
jg
sysret
jl
sbb
fmul
xchg
outsb
cltd
fmull
jmp
das
aad
lcall
mov
ljmpw
cltd
adc
xchg
or
and
xor
push
lret
mov
jbe
push
mov
inc
mov
xchg
add
sub
lock
cs
add
hlt
mov
popa
sub
mov
es
jno
mov
les
jmp
push
mov
rep
ja
cmovl
js
in
push
inc
pop
arpl
add
cs
imul
cwtl
les
cmp
outsb
pop
aaa
lds
lds
pop
xor
je
inc
sahf
add
jg
jecxz
jp
add
outsb
inc
dec
movsb
std
dec
dec
inc
push
mov
or
js
std
dec
pop
sub
inc
mov
ret
test
and
aas
int3
or
push
fcomip
jecxz
mov
push
sbb
push
pop
mov
xchg
mov
jecxz
inc
push
and
aas
mov
mov
loop
shlb
sbbl
test
jb
pushl
pop
mov
sbb
imull
stos
lcall
stos
gs
into
fcoml
pop
icebp
jae
stos
iret
mov
xor
xchg
stos
xor
pop
adc
mov
stc
imul
sbb
push
in
roll
cmp
jg
jl
mov
int3
mov
sar
test
mov
adc
stos
mov
dec
imul
and
mov
push
pop
push
out
dec
icebp
or
out
outsb
scas
stos
and
fistps
les
cld
mov
iret
adc
cmpsb
fstps
xor
inc
out
stc
and
fmulp
pop
es
push
dec
push
sbb
jb
sub
inc
cmp
mov
add
in
mov
cld
insb
xlat
and
mov
lret
pusha
fstps
xchg
mov
sub
aad
jns
aam
xchg
rol
pop
sbb
mov
rolb
mov
inc
jae
cmpsb
int3
cmp
inc
mov
leave
incb
arpl
stc
adc
fwait
cmp
pop
mov
stc
psubq
lret
and
inc
cmpsb
in
jle
pop
lret
xor
js
movsl
ss
adc
or
stos
loop
or
dec
lcall
inc
ljmp
cmp
pop
and
xchg
test
shrl
aaa
xchg
mov
ficompl
sbb
adc
loopne
and
aas
sub
daa
sbb
cld
int
enter
jge
das
cld
add
stos
lret
out
rcll
pop
or
out
cmp
sbb
xchg
cltd
dec
les
cwtl
lds
subb
and
subl
fs
cmpsb
sub
pop
push
lcall
mov
fucomip
stc
pop
mov
cmpsb
lea
scas
lds
mov
adc
xchg
xor
xor
addl
gs
mov
push
fildll
call
cs
lcall
mov
ror
pusha
mov
xor
stos
pop
xchg
loopne
xor
xor
mov
stos
in
sti
repz
incl
hlt
mov
sub
mov
pusha
rorl
jle
rcrl
mov
xchg
jne
dec
ret
ds
gs
lods
pop
fdiv
push
imul
aaa
repnz
cltd
ficoms
loopne
pop
fwait
aaa
icebp
xor
rcr
daa
or
adc
add
push
ret
sar
or
or
pop
cmpsl
inc
xchg
movsl
jl
lods
jno
push
push
insb
rclb
cltd
in
dec
adc
inc
push
or
call
adc
int3
push
bound
sub
push
rorl
xchg
cmp
cmpsb
pop
cs
std
xchg
lods
cmpb
and
push
bswap
shll
mov
sub
repnz
push
or
cs
pop
jge
imul
arpl
pop
mov
lret
aaa
rcrb
aam
popf
add
pop
cmp
xor
aas
push
and
scas
sarl
repz
mov
rclb
mov
jbe
lret
jg
lret
push
iret
clc
xchg
inc
lods
insl
sarl
cmp
sub
pop
mov
xchg
outsl
mov
data16
add
test
add
cwtl
aad
pop
mov
frstor
fwait
std
mov
dec
dec
and
outsl
pop
fdivr
push
inc
push
sub
sbb
clc
jae
rorl
mov
adc
hlt
les
insb
adc
lcall
inc
test
es
ja
test
add
cld
or
cmp
pop
pop
mov
int3
jne
cltd
pop
add
lds
fsubrl
leave
cmp
sub
mov
int
jbe
notl
dec
and
cld
cmp
aaa
ja
add
ss
lea
int
xchg
mov
in
jno
movsb
jae
cli
js
mov
loopne
xor
in
int
cs
or
and
ficompl
dec
ficoml
and
sbb
mov
lret
sarl
loopne
adc
stac
test
mov
dec
mov
mov
and
jne
pop
ficomps
xchg
jne
sti
sub
mov
xchg
rcll
xchg
jne
outsb
nop
dec
or
pop
mov
inc
aam
cmc
nop
js
in
dec
gs
insl
cs
mov
lret
int3
jno
sub
dec
adc
push
push
pop
jl
ds
addr16
iret
rorb
lret
mov
mov
and
mov
sbb
loopne
in
jl
in
jp
sbbb
jp
cmp
outsl
xor
mov
gs
push
ror
dec
insl
adc
fisttpl
pushf
inc
addr16
bnd
sbb
bound
insb
jbe
pop
jmp
movsl
ds
out
jg
hlt
popa
xorl
pop
add
and
outsb
jle
mov
int3
sbb
cmp
xchg
pop
lods
lret
xchg
push
fstpt
jae
adc
xchg
or
mov
mov
movsl
movl
data16
int3
jecxz
push
adc
mov
test
cmp
imul
xchg
insb
test
or
push
psubb
pop
xchg
push
jbe
fwait
clc
xor
pusha
or
jle
or
popa
or
lods
jle
lret
and
out
sbb
jge
xlat
add
out
adc
mov
test
ljmp
cmp
fsts
jb
ret
inc
les
ds
scas
pop
js
ffreep
pusha
jl
in
xchg
cmp
out
fwait
inc
sub
mov
inc
xor
jp
jle
mov
adc
pusha
addr16
nop
call
cmc
rdpmc
mov
mov
fisubs
flds
imul
repz
jecxz
movsb
test
filds
outsb
lahf
inc
and
mov
pop
in
sahf
sbb
xor
mov
pop
stos
sub
mov
nop
push
enter
and
imul
flds
mov
push
insb
add
loope
mov
dec
aaa
mov
xchg
stc
ljmp
movsb
push
dec
jb
jp
cmp
imulb
and
sbb
lret
ret
les
fiaddl
xchg
scas
push
fs
repnz
es
loopne
mov
fcmovne
xchg
mov
and
sbb
aaa
shrl
pop
test
mov
cmp
dec
popf
jg
cltd
adc
loop
push
fsts
inc
or
iret
dec
lock
and
mov
xchg
xchg
push
pop
mov
outsb
adc
stos
cwtl
add
xchg
jns
mov
daa
push
aad
iret
push
adc
pop
stc
and
popa
push
mov
xor
mov
xchg
lds
sbb
cld
or
lea
bound
lea
rcrl
pop
xor
loop
or
scas
xor
data16
xor
push
push
or
sub
hlt
sti
add
and
js
cmp
jmp
mov
mov
push
mov
imul
insb
xor
mov
xchg
fwait
inc
mov
int
loope
leave
xchg
sub
sbb
or
pop
out
jmp
dec
movsl
repnz
jecxz
aad
push
mov
jl
pop
scas
mov
fistl
pop
fcmovnbe
mov
outsb
in
push
push
icebp
push
pop
rcrl
mov
cs
ss
test
insl
mov
imul
push
and
fadds
lahf
loopne
adc
shrb
sub
pop
insl
add
mov
imul
sbb
adc
in
sbb
sub
mov
xchg
xchg
sub
loopne
lcall
mov
mov
in
pop
mov
mov
mov
adc
into
jb
fsubrp
pop
ret
lock
decl
xor
mov
xor
pop
xchg
popf
xchg
push
or
hlt
xchg
sbb
and
pop
repnz
xlat
gs
imul
push
add
sub
cmpsl
fsubs
shrl
mov
aad
xchg
xchg
mov
mov
fistps
sub
pushf
je
mov
fsubr
ss
aad
adc
dec
xor
fsts
jle
ja
inc
mov
sbb
fs
cmp
shll
jns
sahf
add
jecxz
pop
xor
sub
adc
mov
jge
nop
jl
les
jge
inc
jle
mov
cmc
test
scas
push
sbb
sub
jno
push
or
and
shl
sub
movsl
jbe
mov
in
js
in
sub
pop
pop
insl
cmp
mov
push
loope
adc
sbb
test
std
mov
mov
push
mov
aam
adc
test
rclb
inc
push
daa
add
mov
adcl
cmp
popa
popl
pop
xor
rclb
pop
xlat
aaa
sub
jns
mov
js
add
jno
lret
sbb
cmp
out
and
sbb
pushf
dec
pop
xor
ret
push
shl
pop
stc
mov
mov
inc
clc
roll
fistpl
sti
push
std
jg
mov
negl
shrb
xchg
xchg
hlt
gs
aam
js
lahf
cmpsl
mov
test
int3
dec
div
or
pop
test
fdivl
imul
std
sahf
aad
pop
add
jle
imul
test
lret
repnz
add
add
mov
inc
nop
or
inc
add
mov
push
xor
pop
adc
dec
dec
or
mov
xor
pop
jmp
imul
sbb
pop
cltd
orb
pop
mov
lahf
test
stc
push
lods
push
dec
jmp
mov
jns
gs
out
mov
add
xchg
xor
dec
mov
push
jo
ficoms
mov
pop
jae
mov
pop
in
xchg
stc
xor
das
fldenv
mov
mov
inc
dec
repz
lret
and
mov
sbb
in
mov
imulb
dec
insb
repz
adc
sahf
fldpi
sub
hlt
aas
out
mov
lock
jnp
cmp
fstpt
lret
xchg
xchg
add
paddsw
into
mov
iret
les
stc
mov
setnp
sub
mov
js
aam
ret
scas
in
loope
gs
arpl
push
or
ss
add
xchg
fidivs
adc
movsb
dec
mov
dec
sti
ljmp
cmp
popf
cltd
rol
mov
shrl
test
inc
or
add
in
stc
out
ficomps
push
orb
into
push
imul
cmp
pop
dec
adc
pusha
gs
pop
mov
dec
inc
jb
sar
stos
shll
ret
xor
lock
ret
cli
and
push
in
leave
stos
outsl
ja
cs
push
loop
sbb
push
cmc
pushf
dec
jmp
ss
out
or
in
es
mov
jb
dec
adc
xchg
adc
test
in
jle
xlat
push
inc
mov
aam
jg
jle
push
clc
sbb
test
sub
mov
fwait
aad
mov
mov
int3
iret
sbb
add
mov
sub
jnp
add
pop
test
das
dec
cmpsb
neg
xchg
aam
fsubl
sub
push
into
inc
sbb
and
pop
push
cwtl
loope
cwtl
sbb
int
adc
hlt
enter
js
xchg
jecxz
in
cmp
in
xchg
mov
inc
ret
mov
testb
inc
cltd
rcl
cmp
push
ret
ss
or
and
movsl
jp
cmc
pop
xchg
mov
and
xchg
popa
cmp
vmread
mov
sbb
sub
mov
mov
inc
imul
fisttpl
mov
es
push
adc
fisubl
cmp
sbbb
lods
sbb
shrb
mov
insb
push
lds
mov
xchg
sbb
pop
outsb
fistpll
add
xchg
test
sarl
mov
sub
sub
rorl
out
lock
mov
je
and
jns
stos
mov
push
mov
xor
push
inc
push
fidivrl
sbb
daa
scas
cld
movb
dec
test
aam
bound
mov
push
stos
adc
cmc
mov
xchg
fcmovnu
scas
int3
add
divb
outsl
pop
jecxz
cmp
cmpsl
cmp
pop
cmp
or
loope
lds
fiaddl
push
jns
shll
insl
adc
and
fwait
push
dec
or
mov
pushf
cmp
cli
addb
jno
loopne
lods
dec
aaa
adc
or
xor
pop
mov
push
inc
xor
ret
xor
ljmp
push
cwtl
inc
int3
inc
add
mov
sub
jne
push
cmp
mov
inc
cld
jmp
cmpsl
xchg
sbb
notb
out
cmpsb
inc
adc
sub
dec
shr
cld
ljmp
inc
dec
adc
inc
testb
xor
pop
inc
mov
push
jle
decl
test
cld
popa
int
inc
loop
sahf
mov
in
jbe
jae
xor
bound
inc
jno
jmp
es
lock
push
fbld
repz
movsb
dec
scas
jne
dec
es
mov
in
sub
or
xchg
sbb
enter
sub
lret
rcrb
movsl
and
gs
push
in
jnp
pop
sbbl
and
jg
into
enter
int
jmp
and
ret
adc
xor
add
mov
enter
mov
mov
inc
push
xor
push
jno
stc
lods
incb
cmp
sub
cltd
loop
and
pusha
ficomps
test
mov
outsl
scas
es
outsb
test
repz
pop
mov
inc
incl
aad
xchg
daa
pusha
pop
cmp
fwait
sysenter
mov
inc
push
outsb
pop
xor
fsubr
cmp
sbb
cmp
nop
aam
fs
cmp
nop
int3
lret
sbbb
pop
in
mov
sar
movsb
sbb
mov
pushf
call
pop
sahf
lcall
dec
imul
stos
mov
jl
pop
cmpsb
push
push
dec
and
data16
enter
into
je
dec
adc
mov
push
mov
mov
inc
pushf
xchg
jbe
cmp
mov
cmpsb
mov
pop
or
aaa
and
ret
sub
sbb
adc
imul
clc
mov
aad
sbb
push
push
insb
hlt
xchg
loope
outsl
sbb
pop
out
cmp
pop
iret
aaa
inc
cmp
aaa
mov
inc
xor
add
push
fnstcw
int
xor
jl
mov
pop
insb
stos
fs
js
push
mov
jo
and
stc
js
scas
cs
pop
mov
in
adc
dec
loope
push
add
loope
psrlw
repz
sub
lahf
lahf
mov
cmc
jb
mov
dec
jae
not
call
leave
aam
xchg
test
push
out
and
mov
xchg
mov
inc
xchg
sub
jns
ror
xchg
popf
mov
pushf
cwtl
adc
movsb
stos
gs
mov
jns
and
sti
xor
out
mov
add
movl
xchg
fildl
and
or
idivb
addr16
pop
popa
stos
adc
shl
popa
imul
or
fisttpl
xchg
jl
es
push
arpl
sbb
add
fcoml
cmc
cmp
mov
cltd
dec
xlat
pop
xchg
adc
ds
int3
sysexit
lods
xor
mov
jbe
into
pop
frstor
mov
mov
sub
or
mov
out
fists
enter
fwait
adc
dec
mov
test
push
outsl
pop
mov
mov
jbe
lock
ss
loop
sub
clc
sub
and
outsl
les
mov
outsl
hlt
pop
insl
push
das
shl
sahf
add
fcmovbe
push
inc
fnsave
or
mov
fcmovne
xchg
es
aad
cmc
dec
add
iret
iret
push
push
dec
in
add
adc
mov
jle
andb
push
inc
pop
xchg
sbb
ds
cli
mov
and
repz
pop
movsl
cmpsl
push
test
pushf
iret
fisubrl
add
xchg
push
lea
and
rorb
xlat
lds
push
mov
fwait
sbb
sub
xorb
shlb
xchg
jg
aad
xor
std
enter
mov
ljmp
ja
insl
std
lods
pop
ja
sbb
push
stos
jno
mov
and
out
mov
mov
popf
leave
xor
stc
sub
cltd
rcll
push
sub
ss
into
mov
mov
ss
aas
sbb
sarl
and
mov
push
inc
jo
adc
out
jb
mov
add
fwait
pand
add
jmp
mov
lahf
mov
jae
mov
pop
cmp
std
es
mov
mov
imul
push
repnz
add
pop
mov
pushf
out
fnstenv
or
out
mov
mov
dec
lret
in
push
sub
call
les
pusha
or
out
dec
pop
test
inc
aas
pop
jge
xchg
ret
iret
andb
inc
in
les
sub
lret
dec
lds
mov
call
inc
xor
shl
test
jae
add
aam
or
xchg
jmp
in
pop
add
aaa
inc
stc
sbb
mov
ljmp
ds
in
data16
into
rcrb
test
ljmp
mov
pop
stos
test
xchg
or
lock
mov
shl
pop
or
lahf
sub
int
mov
xchg
push
mov
cmp
mov
sbb
add
adc
sbb
out
fwait
int3
dec
in
scas
addl
add
fsubs
ss
sub
dec
adc
clc
fistpl
and
ror
dec
cmp
lds
xchg
inc
cs
mov
and
lret
mov
dec
xchg
sbb
cli
pop
ret
cmp
scas
mov
iret
pop
mov
cmp
inc
je
mov
mov
mov
ss
sarb
pop
mov
pop
lods
xlat
int3
pop
ret
in
ljmp
test
mov
adc
push
xor
bound
ljmp
je
inc
aad
pushf
cs
lock
cmp
out
scas
jl
sar
xchg
into
loopne
mov
xor
dec
mov
sub
mov
sub
nop
insl
sbb
dec
add
push
pushf
lock
cmpsb
mov
andb
int3
or
sbb
ljmp
pop
jp
inc
add
sub
push
movsb
mov
mov
mov
jmp
test
mov
int
push
sbbl
arpl
bound
iret
ss
lahf
decb
mov
adc
sbbb
clc
iret
push
push
push
jno
lret
addr16
nop
roll
hlt
and
aas
push
dec
mov
lret
adc
jp
enter
adcb
sub
iret
pop
pop
fadd
rcrb
sub
imul
add
xor
int3
clc
sub
movsl
lods
in
mov
pop
cmp
or
xor
test
call
repz
push
mov
pop
cmc
fisttpll
xor
cmp
ljmp
mov
mov
ja
lds
insl
bound
std
nop
popa
cmpsl
xchg
adc
xchg
and
dec
jmp
add
mov
aam
test
out
push
lds
and
lods
sub
jo
mov
sbb
push
ss
mov
sbbb
push
dec
xchg
cmp
loope
lods
std
jo
jb
bound
inc
xchg
mov
xchg
mov
cwtl
and
add
push
leave
jmp
add
lods
dec
add
repnz
lods
mov
das
jbe
jl
addl
out
popa
push
sub
mov
test
pushf
loop
pop
out
ret
xchg
into
lcall
stc
sub
cmc
mov
push
dec
xchg
jl
inc
mov
adc
xchg
mov
stos
mov
aad
mov
and
sub
imul
sbb
mov
dec
push
cmc
sahf
xor
hlt
mov
inc
cmc
aas
xor
and
sbb
stc
test
int3
mov
or
shlb
mov
imul
dec
jecxz
out
push
lods
fs
sahf
sti
push
pop
cmp
dec
fdivrl
cmpsb
xlat
pop
rorb
inc
and
pusha
sbb
cmp
xchg
lahf
cmovns
sub
push
pop
inc
andl
jno
arpl
push
out
cmp
push
mov
mov
aam
xchg
out
dec
dec
sbb
sub
repz
cld
adc
sbb
in
adc
mov
push
xchg
aad
repnz
mov
mov
pop
lds
cmp
icebp
sub
sbb
mov
sti
push
jno
push
movsb
fiaddl
xor
push
pushf
lods
pop
mov
adc
sbb
add
pop
jg
push
stc
stc
xchg
add
adc
xor
or
sbb
cmp
test
imul
dec
mov
adc
fmulp
inc
cli
pop
jae
add
or
fdivrs
movsl
fildll
jbe
jp
andb
mov
mov
jns
jae
ss
push
sub
pop
sbbl
orl
and
std
pand
xchg
mov
cli
out
push
scas
xchg
loopne
adc
fwait
xchg
push
mov
lret
clc
pop
int3
sti
push
fwait
lods
cmp
lret
inc
push
push
pop
xchg
je
pop
sub
in
or
mov
into
inc
es
xchg
cmp
icebp
idivb
cmc
xor
xor
adc
mov
or
cld
enter
movsb
lea
jmp
iret
xchg
movsl
fsubrl
jns
cmpsb
lahf
sub
adc
decl
or
jmp
sub
dec
mov
jge
or
cmpsb
scas
add
jno
rorb
jl
dec
vunpckhps
iret
sub
or
popa
notb
xchg
ds
les
pop
int
cmp
into
mov
push
popf
inc
push
mov
fdivp
fwait
xor
add
cwtl
imul
test
in
add
stc
fwait
orl
popa
mov
pushf
sub
lods
in
pop
ret
sbbl
adc
xor
inc
mov
xchg
daa
or
mov
sbb
or
or
leave
jb
jae
mov
std
cmpsb
fcomps
inc
mov
mov
pop
mov
lret
jmp
sbb
pop
and
sub
inc
jmp
leave
divl
jb
pop
lock
scas
mov
or
loopne
xor
and
xchg
stos
jp
fisttpl
popa
pop
test
sbb
inc
js
pop
pop
jg
mov
dec
mov
sub
enter
jp
sbb
movsl
jecxz
bound
fstp
daa
scas
mov
sub
lods
movsl
pop
and
data16
push
mov
adc
and
loope
scas
mov
mov
out
cwtl
inc
lret
pop
dec
jmp
sti
lds
sbb
mov
cmp
insl
mov
mov
andl
xchg
sub
adc
stos
pop
pushf
aam
cld
adc
mov
fwait
mov
lods
popa
faddl
enter
std
mul
loopne
cmpsb
aam
push
inc
push
xchg
jnp
sub
sbb
sarl
sbb
or
bnd
sbb
dec
loop
hlt
mov
imul
mov
jae
stos
mov
repz
out
push
xchg
movsl
movsl
rcrl
xchg
xchg
pushl
xchg
add
fnstenv
add
mov
test
pop
inc
xchg
shlb
movsb
cmpb
lret
push
testl
mov
and
cld
sub
jecxz
push
xor
xchg
int3
xor
loope
stc
dec
sub
mov
fwait
and
cmp
loop
aas
decb
aam
iret
daa
push
cmpsl
or
pop
xchg
jge
sub
shrb
shrb
aam
data16
lods
push
mov
mov
hlt
in
mov
and
mov
aaa
cmp
xchg
imul
out
mov
ud2
mov
xor
ds
icebp
std
cltd
das
out
test
in
loopne
cmp
mov
pop
jae
pop
and
daa
jge
mov
js
movsb
hlt
xor
lea
pushf
fmull
push
dec
bound
or
mov
pusha
ss
pop
jg
into
test
out
push
push
fadds
outsl
mov
xlat
jno
jbe
outsb
fcom
mov
stc
fnsave
mov
and
push
popf
mov
push
inc
xor
jns
push
aas
push
fdivr
jbe
fs
mov
pop
psubusw
rorb
xlat
push
inc
test
outsl
mov
orb
bnd
jg
xchg
jb
vpsadbw
testb
int
loopne
testl
or
jns
inc
dec
lea
icebp
cmp
ljmp
enter
cmp
and
push
data16
mov
jmp
mov
daa
sub
iret
add
xchg
cwtl
pusha
lret
repnz
in
or
addl
out
inc
cmp
stc
nop
inc
imul
loope
loope
pause
les
or
xor
sahf
and
xchg
xor
xchg
push
outsl
pop
out
mov
cld
pop
xor
sbb
sub
mov
test
jo
out
xor
dec
lds
lea
mov
jno
pusha
loope
jge
push
cld
or
cmp
fdivrl
fildll
or
xchg
sub
in
cmp
stos
jnp
dec
hlt
fistpl
test
mov
dec
ss
pop
shlb
push
push
or
int3
nop
fcoms
push
scas
jmp
outsb
ja
and
or
mov
xor
out
sarb
aas
jmp
sub
push
adc
dec
lcall
cmpsb
pop
out
adc
je
enter
sub
hlt
or
sub
inc
adc
lret
shll
xlat
sahf
sahf
das
bound
data16
dec
das
add
outsb
cmp
mov
roll
add
dec
outsb
push
dec
je
pop
sbb
sbb
dec
repz
call
inc
push
adc
adcb
xchg
imul
je
xor
testl
stos
mov
push
es
adc
sti
add
je
jl
dec
inc
sub
dec
sbb
add
mov
sbb
inc
mov
xchg
pushf
and
rcrb
ret
jmp
mov
outsl
mov
sub
fs
addr16
sbb
push
out
imul
imul
cmp
ret
jge
cli
pop
mov
jp
jno
jp
or
jg
mov
sbb
outsl
mov
xor
jl
in
test
sbbl
pop
pop
xorl
pop
fdivl
adc
shlb
push
rolb
push
mov
test
bound
push
lret
xchg
sub
loopne
js
pop
mov
xor
jno
aad
add
mov
loop
mov
push
sbb
adc
lods
orl
dec
cltd
adc
mov
popa
push
mov
insb
cmp
fldenv
push
test
movsl
inc
or
in
int
ret
jo
pop
xchg
mov
dec
mov
cmc
pop
lods
in
lock
incl
sub
daa
and
sub
pop
scas
icebp
push
js
sbb
add
stos
add
xor
ret
xor
pop
xchg
arpl
or
xor
shlb
xchg
push
test
inc
sahf
mov
les
out
je
gs
sbbb
add
rcr
sbb
enter
inc
fwait
aad
lock
ret
jp
push
into
mov
and
sbb
les
xor
pusha
imul
add
or
or
adc
and
notb
lds
mov
and
add
les
les
adc
cltd
or
mov
sbb
xchg
movsb
xchg
sbb
and
insl
mov
adc
fwait
scas
mov
lods
xor
loope
xlat
push
in
data16
icebp
ljmp
inc
or
or
pushf
mov
sbb
int3
push
xor
adc
test
sbb
arpl
loop
jge
popl
add
mov
sbb
pop
into
cmp
jo
pop
out
sbb
cs
pop
cmp
stos
jmp
mov
xchg
rol
daa
mov
xchg
call
sub
mov
inc
lods
add
xor
add
add
sti
ljmp
inc
outsl
imul
sbb
ret
daa
iret
adc
enter
dec
or
inc
fucomi
xchg
push
cld
dec
popf
dec
and
mov
fs
fdivs
iret
int3
jbe
jl
dec
sbb
movsl
xchg
jp
fnsave
pushw
xchg
sub
xchg
jecxz
jno
into
ficomps
and
lods
mov
das
mov
loop
in
mov
clts
outsb
mov
adc
test
cmp
mov
imul
jne
iret
or
and
pusha
insl
sub
mov
ja
shlb
xor
sbbb
lea
scas
mov
sbb
xchg
or
aad
cmp
rcrl
cs
lea
pop
dec
ret
sub
lock
cld
pusha
int
xchg
fcmovne
arpl
sbb
dec
mov
jmp
jbe
pop
in
pusha
loop
or
fsubrp
hlt
mov
lret
test
mov
fsubl
dec
jo
pop
inc
mov
pop
lea
enter
ljmp
or
add
stos
push
in
and
lret
fwait
popa
aam
mov
in
push
out
push
sub
cli
data16
out
int3
or
pop
sub
mov
push
mov
out
pop
in
jno
fisubl
jnp
cmp
mov
push
mov
sti
push
fcom
pop
cld
sub
insb
dec
add
repnz
out
stc
and
lahf
add
dec
or
add
mov
popa
xor
adc
mov
jge
add
and
fdivl
push
and
loope
cmp
into
in
xchg
lds
push
jmp
pop
bound
jnp
clc
gs
lcall
in
jbe
jb
cmp
test
dec
lcall
cmpsl
pop
jge
lcall
mov
popa
fnclex
cmc
sahf
and
and
sbb
sub
out
mov
shlb
rorb
rol
xchg
nop
mov
cli
psubsw
cmp
sbb
mov
jecxz
test
int
xchg
pmulhuw
loope
iret
cmp
cmp
and
xchg
push
sbb
xor
push
xchg
addr16
inc
in
je
pop
pop
outsl
jno
dec
pop
call
cwtl
rolb
fsubrs
sbb
pop
add
sbb
inc
decl
mov
es
cmc
push
inc
arpl
fxch
es
jnp
out
pushf
pop
outsl
push
xor
cld
cli
fstps
inc
or
mov
or
dec
ljmp
mov
out
ja
lods
jnp
fdivl
stos
pop
mov
cmc
int3
mov
in
lcall
inc
mov
and
jnp
mov
dec
add
add
pop
out
enter
imul
mov
add
fcomps
push
decl
mov
pop
fcomps
cmp
test
imul
cs
cld
mov
dec
dec
cmp
pop
or
cmp
pop
outsl
mov
adc
leave
and
ljmp
inc
lods
lahf
cmp
adc
push
pushf
and
loope
or
inc
or
jg
stos
add
lods
out
xlat
dec
test
adc
in
fcompl
adcw
insl
clc
cs
mov
mov
gs
dec
dec
lcall
adc
lea
mov
loope
pop
pusha
scas
scas
mov
pop
xor
dec
inc
fiadds
in
loopne
lret
gs
mov
or
lock
add
dec
sbb
dec
pop
std
in
cmp
sbb
test
loop
jge
mov
or
out
stos
addr16
in
jns
shrl
dec
fsub
fs
xchg
dec
lss
xor
cmpsb
shll
dec
jo
insl
mov
call
sbb
in
bound
mov
out
sbb
imul
or
repnz
into
pop
shrb
sbb
xor
out
adc
mov
out
bound
add
inc
divl
ret
test
push
int3
scas
inc
popf
mov
shll
shlb
xor
mov
cs
divl
mov
mov
hlt
push
jo
xor
dec
inc
rcrl
pop
inc
xor
in
test
popa
div
push
pop
orl
push
jecxz
xor
int
jl
je
cld
mov
mov
shl
and
adc
insb
and
pop
fcmovnbe
scas
gs
mov
ds
rorl
test
rcrl
repz
shll
push
mov
lret
push
mov
imul
sbb
dec
fsubrl
sbb
arpl
loope
add
adc
push
adc
scas
add
sahf
pop
sbb
addl
mov
in
fildl
daa
push
in
data16
cli
cli
out
mov
ds
adc
pop
stos
ds
xor
std
pop
push
jge
bound
test
mov
push
dec
enter
stos
dec
faddl
popa
and
leave
fnstenv
xlat
ja
cli
lret
push
pop
popf
fiadds
movsl
ret
push
jno
mov
sbb
lods
ret
in
add
cmp
vmread
mov
xor
sub
sbb
in
cmpsl
aaa
ljmp
andb
es
push
dec
cli
lea
stos
push
lods
cwtl
xor
add
inc
in
repnz
lret
mov
das
movl
sahf
movsl
mov
daa
es
hlt
mov
xchg
jp
mov
jno
mov
dec
jl
inc
scas
jecxz
add
shll
jnp
pop
xor
dec
mov
pusha
mov
pop
adc
imul
sbb
test
mov
sahf
fsts
push
sbb
xchg
jge
mov
hlt
pop
cli
mov
sbb
pop
pop
inc
push
cmovle
mov
sub
jecxz
scas
dec
fistpl
adc
ss
mov
je
fcomps
mov
xchg
fcoml
into
jmp
adc
mov
lret
scas
or
mov
push
sub
shl
mov
pop
add
jl
xor
push
dec
dec
sbb
mov
and
xchg
push
pop
mov
lret
xchg
mov
cmp
mov
nop
popa
mov
jbe
and
fdivs
out
rolb
push
or
pushf
mov
pop
push
movsb
pushf
sub
sti
dec
ja
xchg
jl
fld
dec
in
push
aas
loop
jle
in
fcompl
and
sbb
into
out
push
cmp
mov
dec
mov
pop
adc
cmp
cmpsl
inc
mov
pop
mov
or
out
imul
push
ficompl
clc
fwait
cmp
adc
and
test
addl
or
or
xchg
pop
sub
or
push
mov
add
xor
arpl
mov
mov
rorb
out
mov
loopne
cld
mov
cmp
xor
jg
push
jae
mov
aaa
out
push
pop
jo
std
jl
adc
jl
add
inc
das
dec
mov
mov
test
idivb
mov
mov
sti
cltd
insb
mov
ret
nop
mov
xor
outsb
cmp
pushf
mov
test
call
push
push
ret
popf
xor
dec
cmp
cmp
adc
imul
mov
push
mov
sbb
popa
ffree
xchg
repnz
aas
es
mov
rcll
faddl
jl
ja
dec
adc
cwtl
popa
pop
mov
mov
sar
add
ret
aas
cmp
int
out
std
or
xchg
dec
push
int
cmc
jle
sbbb
dec
les
mov
out
jge
ds
jle
test
sub
cmp
cli
rolb
aaa
jp
notb
mov
cmpsl
std
add
shrb
cs
movsl
jp
push
out
xchg
fstpt
cmp
ljmp
shr
fidivrl
and
or
mov
xchg
push
test
jns
out
addr16
jb
adc
sbb
lcall
pushf
jns
cmp
ret
add
mov
pop
ffreep
add
mov
jmp
and
std
dec
in
lods
add
lds
bound
xchg
scas
pop
stc
pop
icebp
popa
fimuls
lahf
sub
jg
adc
xchg
adc
cmpsl
hlt
xchg
pusha
call
cmpsl
cmp
aas
xor
repz
test
xchg
scas
test
inc
lcall
in
mov
addr16
outsl
push
sbb
adc
ljmp
lret
cmp
ja
out
ret
test
fwait
adc
jo
stos
sbb
inc
sbb
clc
nop
xchg
add
push
pop
std
pop
xchg
sub
enter
adcl
je
cli
sbb
and
inc
cmp
cmc
cli
pushf
push
dec
push
cli
mov
sbb
push
sub
mov
add
push
adcl
sbb
imul
dec
rolb
jae
xchg
fbld
or
inc
inc
icebp
pop
into
enter
push
mov
les
push
mov
rol
mov
dec
cmp
jp
lret
lea
cmp
add
or
mov
subl
sbb
mov
clc
int
cli
inc
jg
mov
sarb
test
sub
ja
dec
xchg
xchg
jecxz
mov
rcrb
rol
in
mov
insb
faddl
test
clc
fidivrl
hlt
pop
cmpsl
sbb
xchg
movsl
neg
inc
dec
inc
pop
fidivrl
bound
and
dec
xor
adc
mov
jae
aad
iret
pop
js
add
repnz
xor
jecxz
fists
mov
dec
cmp
data16
ljmp
insb
int3
sub
mov
push
lods
mov
std
xchg
or
mov
outsb
sahf
call
dec
mov
xchg
divb
aas
lret
sub
push
push
push
imul
fnstenv
pop
xor
shrb
sbb
inc
dec
faddl
add
movl
and
jno
fcoms
mov
cmpsl
mov
pop
stos
jge
or
fbld
loopne
cmpsb
ds
or
xor
pusha
push
clc
mov
mov
mov
mov
js
mov
xchg
fdiv
sarl
mov
sbb
es
movsb
mov
lcall
jbe
call
pop
adc
push
mov
fsubp
push
pop
jb
mov
mov
in
movsl
sbb
mov
rclb
push
jae
sub
andl
and
cmp
sarb
add
push
daa
iret
jmp
mov
aam
push
cmp
test
sub
call
cld
mov
cs
enter
divl
sbb
dec
in
neg
inc
je
mov
popl
mov
jo
push
fstpl
inc
dec
push
fadd
stc
nop
mov
push
dec
add
push
add
ror
inc
adc
adc
mov
jns
mov
adc
and
mov
das
dec
aam
mov
add
jo
jle
loop
sbb
gs
ret
and
aam
fistpl
cld
aaa
and
pop
xchg
jp
ficompl
fcoml
mov
xor
sub
scas
or
shlb
or
xlat
ficoms
xchg
add
mov
hlt
pusha
xchg
insb
dec
push
add
cmpsl
das
jns
mov
dec
and
cmp
fldenv
and
ret
push
call
andb
mov
gs
fs
sub
sbb
decl
add
stos
not
and
push
rorl
xlat
bound
lds
dec
xor
adc
sub
movl
nop
pop
mov
pop
rcr
inc
xor
pop
out
stos
imul
xchg
or
adc
mov
push
inc
dec
repz
cltd
daa
push
mov
gs
iret
scas
sti
mov
mov
fxch
mov
inc
push
pushf
dec
and
xchg
inc
scas
mov
stos
or
jle
jnp
fst
adc
mov
pop
test
jo
imul
test
adc
repz
pop
jge
jmp
ds
repnz
testl
xor
out
and
and
cmpb
adc
xchg
daa
int3
aaa
push
xchg
add
or
ss
call
addr16
jnp
push
jle
push
dec
dec
data16
or
insl
stos
jmp
mov
ret
mov
push
out
push
pop
cmp
clc
mov
and
enter
pop
and
movsl
dec
xor
push
repz
sbb
out
js
jecxz
push
sub
xchg
jp
jae
aaa
pop
mov
inc
xor
loopne
iret
jbe
xchg
push
cld
test
lret
push
stos
cmpsb
xchg
mov
fisttpl
pop
mov
and
lcall
fadds
pop
aaa
pop
std
and
cmp
and
ljmp
ljmp
pop
stos
adc
test
mov
nop
bound
jecxz
mov
dec
pushf
test
lds
push
sbb
ret
add
push
add
inc
adc
xor
pusha
adc
jecxz
imul
dec
dec
dec
fmull
das
fisubrs
aaa
in
jno
lret
popa
repz
push
jmp
in
inc
repz
je
call
jmp
test
lcall
cld
cmpsl
xor
repz
jo
rcr
mov
lret
sub
inc
jnp
sbb
aaa
ret
dec
xorl
xchg
pop
pop
insb
js
cmp
test
addr16
std
lods
sbb
mov
notl
pop
icebp
and
repnz
or
sti
psubb
fcmovbe
or
movsb
movsl
pop
lea
or
jo
jle
das
icebp
adc
pop
lock
shlb
fcmovb
adc
ja
or
sbb
loop
mov
or
xchg
mov
jno
lahf
in
add
mov
cmp
fisubrs
mov
inc
sbb
pop
xorl
jno
push
adc
xchg
in
cmc
adc
es
adc
xor
fdivrp
adc
movsb
xchg
push
add
shl
pop
or
rcrl
mov
sbb
cld
aad
dec
mov
fdivp
cmc
jp
xchg
xlat
pop
iret
and
push
aad
daa
mov
repnz
pop
add
push
sub
xchg
or
mov
and
jmp
iret
fistpll
mov
pop
stc
cmp
pop
dec
mov
sbbb
lock
pop
scas
icebp
pop
add
insb
mov
call
aam
sub
jge
dec
xchg
adc
outsl
frstor
clc
push
adc
sbb
aaa
outsl
ret
rorl
cmpsb
fbstp
cmpb
nop
push
int3
add
add
fsubrl
mov
jb
es
add
xchg
shr
dec
sbb
cmp
sub
xchg
dec
or
mov
aad
mov
push
fdivl
jo
dec
std
jp
stos
imul
lods
add
xchg
mov
or
inc
imul
or
xchg
adc
lret
inc
cmp
and
loopne
pop
fs
inc
enter
mov
inc
lret
sbb
repz
or
call
je
sub
loope
dec
mov
cmp
xchg
pusha
jge
push
fstpt
aaa
xchg
or
aad
fildll
jp
xor
xor
outsb
sub
decb
adc
loop
mov
push
jmp
lret
orb
jmp
aad
push
mov
push
jl
cmp
adc
dec
divb
in
ds
jae,pt
ret
les
add
add
orps
sub
je
dec
jb
icebp
xor
stos
cmp
fmuls
outsl
vhsubpd
frstor
dec
inc
push
mov
ret
and
sub
xchg
aam
int3
xchg
sub
je
dec
sub
jp
es
int
and
xchg
ja
sub
mov
cmp
mov
insb
mov
jl
push
mov
inc
mov
jge
ficoml
jmp
inc
xchg
lock
mov
push
cmp
repnz
mov
xchg
dec
subb
cwtl
cmp
adc
je
mov
insb
cld
cmp
mov
add
xor
xchg
mov
push
fbld
dec
pop
test
adc
cmc
cld
push
sub
incb
push
mov
mov
cmp
sahf
mov
xchg
stos
xchg
cmpsb
mov
in
pusha
arpl
dec
iret
fsubs
fnsave
add
mov
jl
addr16
loop
inc
outsb
sub
jne
outsb
orl
push
jmp
imul
mov
adc
sbb
adc
and
add
or
add
mov
xchg
sahf
cmpsl
or
int3
decb
mov
jmp
add
cmp
ret
sub
cmp
push
xchg
bt
das
add
mov
lahf
pop
xchg
fs
pop
sub
xchg
cmpsl
lret
push
adc
lcall
lret
xlat
dec
lahf
push
lahf
mov
rolb
pop
adc
jl
jae
sub
or
mov
mov
test
loope
xor
jg
fistpll
mov
fsubrs
insb
das
ds
rcrl
mov
sub
sahf
sbb
inc
jb
jo
pop
sbb
popf
cmp
mov
cmpsl
jl
add
mov
incl
lcall
bound
lret
sti
cmp
hlt
cmp
jo
adc
repnz
nop
jae
pusha
add
xchg
pop
lea
jbe
pop
call
je
jecxz
stos
xchg
std
enter
jne
pop
dec
stos
sub
mov
pop
addl
inc
jecxz
cmp
inc
out
aaa
add
pop
ret
mov
loope
mov
cmp
ds
stos
in
filds
mov
bound
std
test
scas
xor
cltd
lods
jl
leave
inc
sti
ret
outsb
pop
xchg
nop
push
repz
cmp
push
leave
xor
ficoms
negb
pop
fadds
pop
hlt
in
mov
jmp
xor
xchg
clc
lods
pop
iret
add
fimuls
loop
sbb
or
inc
mov
pop
mov
sub
and
addb
dec
ds
lahf
dec
mov
arpl
push
sbb
push
ret
pop
mov
ret
ja
lret
push
gs
or
pop
jp
add
aaa
test
loope
dec
lcall
out
sysret
mov
mov
adc
jns
push
hlt
call
sub
mov
iret
addr16
xor
fsubl
gs
jge
mov
sbb
pusha
mov
inc
out
fisubrl
mov
inc
andl
sbb
jmp
inc
xchg
insb
or
xchg
dec
pop
push
aaa
inc
pop
sti
add
icebp
rcr
and
jmp
push
mov
stos
push
sub
js
outsl
mov
les
and
cmpb
pop
cld
loopne
sub
testl
ljmp
dec
pusha
and
je
adc
fists
scas
in
in
stc
popa
jmp
cli
aam
xor
icebp
repz
pop
int
pushf
js
mov
jp
out
ret
mov
stc
mov
in
lods
aaa
outsl
test
add
and
or
cmc
inc
aad
inc
xchg
inc
popf
dec
jge
test
stos
sub
insb
sub
ret
das
adc
push
out
mov
enter
jg
pop
xchg
movl
hlt
sbb
mov
xchg
dec
out
or
add
xor
in
rcrb
ljmp
mov
cmpsb
inc
xchg
adc
mov
jl
lahf
out
pop
mov
mov
test
add
push
fxch
jmp
rcrb
push
fisubrs
dec
rorl
dec
add
push
mov
mov
hlt
into
mov
xchg
pop
and
in
xchg
mov
and
sub
scas
dec
fwait
into
cwtl
cmp
pop
icebp
jb
fs
inc
push
jbe
add
fidivrs
enter
or
mov
leave
pusha
or
sarl
jecxz
inc
pop
add
sti
jbe
divb
cmp
fisubrs
clc
lock
xchg
cmp
mov
pop
adc
or
movsb
dec
xchg
mov
cltd
push
xchg
push
inc
xor
fidivs
dec
stos
scas
repnz
cmp
clc
aad
mov
cmp
sbb
jl
dec
xchg
fcmovnb
ljmp
sub
pop
cmp
mov
sbb
mov
mov
sub
ficomps
or
movsb
lret
mov
inc
mov
xor
or
add
stos
adc
or
adc
mov
js
cmp
sbb
mov
loopne
inc
popf
pop
clc
add
sar
lds
mov
adcl
fmuls
xchg
lret
adcl
loopne
inc
dec
jns
inc
push
mov
enter
mov
das
movsl
leave
movsb
sarl
inc
das
in
sahf
mov
movsl
mov
sub
dec
test
or
xor
hlt
sahf
mov
les
adc
push
or
jge
sub
in
xchg
lret
xchg
loop
inc
cmp
xor
pop
stos
adc
mov
cmpsl
cmp
sti
mov
jg
std
adc
lds
sub
idivb
dec
jbe
cmp
jecxz
mov
bound
mov
outsb
cmp
jae
movsl
sbb
bound
add
xor
mov
shlb
pop
jge
mov
sbb
add
sbb
sub
add
popa
pop
pop
je
out
aad
mov
mov
sub
cs
cmp
fistpl
fsubrl
jecxz
lret
dec
lock
sub
adc
ja
ret
jg
mov
or
sub
hlt
scas
cmpsb
lret
jbe
lods
dec
aad
ds
jecxz
std
mov
lret
or
sub
imul
enter
aaa
xor
lret
int3
and
inc
fcomps
jne
stos
add
aam
jbe
scas
mov
xchg
fsub
or
pop
and
add
jge
std
jmp
mov
mov
dec
js
pushf
mov
repnz
imul
in
repnz
popf
cmp
or
pop
rcr
mov
adc
xchg
cld
dec
xchg
mov
mov
aaa
das
dec
adc
push
mov
or
fisubs
iret
adc
imul
jo
popl
xchg
gs
movsb
sbb
out
clc
dec
push
mov
cmp
and
xor
aam
push
sub
jg
lock
jnp
sbb
test
mov
stos
js
dec
nop
icebp
mov
sbb
out
and
xchg
shrl
or
sbb
push
mov
inc
sbb
adc
pop
frstor
inc
les
repz
pop
lea
mov
popa
xor
dec
dec
mov
jno
shlb
push
daa
gs
lret
or
mov
adc
jae
jbe
push
pop
hlt
sbb
das
pop
data16
ds
cmpsb
pop
xchg
out
or
test
out
adc
pop
mov
jecxz
test
test
loop
and
call
mov
add
mov
dec
in
cmp
push
adcl
ss
pop
add
mov
call
int
mov
sahf
mov
dec
pop
imul
cmc
adc
mov
ss
loopne
icebp
lret
inc
ds
clc
clc
sbb
dec
hlt
jno
dec
movsl
sbb
das
daa
jge
and
sub
stc
rol
inc
shlb
jbe
ljmp
mov
add
dec
bound
leave
xor
dec
adc
in
popf
push
int
push
pop
mov
inc
leave
push
pop
add
jo
lds
das
rclb
mov
pop
roll
sbb
or
adc
test
xchg
cli
inc
xchg
data16
pusha
jns
insb
sub
mov
in
fcoms
sahf
pop
cs
mov
pop
mov
fnsave
popa
adc
sub
dec
loop
ret
mov
out
cmp
aaa
adc
cmp
out
push
fmuls
mov
fnstcw
insl
fimull
fs
and
mov
lret
xchg
push
lret
cltd
js
cmovle
adcl
sbb
out
aaa
xor
insl
loope
mov
cmp
in
inc
add
test
pop
pop
xchg
pop
xor
aad
sbb
push
mov
pop
inc
jmp
lds
shlb
out
xchg
and
lret
xchg
lds
ffreep
stos
popa
aaa
imul
mov
jbe
clc
pop
sbb
sbb
aad
shrb
push
xchg
ret
idiv
xchg
clc
fs
xor
pop
shl
add
shll
out
cmp
xlat
dec
int3
push
inc
cmp
fwait
insb
mov
xchg
hlt
orb
jecxz
lcall
jge
mov
xchg
add
pop
sbb
fdivl
mov
aad
push
push
in
je
xchg
push
fwait
test
mov
jo
negb
in
fs
xchg
sbb
pushw
cmp
pop
adc
int3
and
outsb
adc
iret
rorb
add
loope
cld
jns
jo
shll
mov
loop
nop
in
dec
pop
lret
stos
sub
lods
scas
or
lods
mov
xchg
cld
rcll
loopne
out
lahf
fistl
outsb
int3
mov
xlat
cmp
sbb
ret
test
rcl
push
inc
in
rcll
push
in
mov
fs
loope
inc
ljmp
cmp
rol
push
xchg
bound
pop
adc
out
out
mov
adc
ret
jb
add
addb
insb
adc
lcall
inc
fsubrs
sti
cmp
inc
pop
popw
fwait
rcr
mov
adc
movsb
pop
xchg
pop
ljmp
mov
adc
movsb
aad
jle
add
loop
clc
or
sub
hlt
sub
jne
in
xchg
pop
leave
lahf
add
mov
push
shrb
jno
push
fiadds
pop
les
pop
adc
and
test
imul
enter
in
int
stc
jo
sbbb
add
lock
jns
mov
push
jg
scas
std
mov
inc
xchg
icebp
fdivs
xchg
inc
inc
cwtl
push
push
lock
sub
mov
mov
lds
loop
loop
test
imul
inc
scas
arpl
out
les
stos
pop
mov
stos
lahf
jnp
ja
lock
cld
cli
addr16
insl
les
rcrl
pop
jno
aam
gs
movsb
outsb
addb
inc
dec
jne
outsl
push
faddl
cmp
add
jo
push
ss
push
mov
lea
push
mov
dec
popf
testb
dec
push
xor
jnp
xor
lcall
ljmp
and
mov
jge
out
push
in
sahf
fiaddl
xchg
mov
adc
in
into
das
and
mov
jb
xchg
mov
cmp
xchg
daa
mov
cs
js
push
arpl
in
fistpll
mov
jo
ds
push
scas
cmp
test
inc
rcl
pop
and
sbb
sti
std
push
pop
dec
in
inc
aas
das
push
roll
jle
popa
fwait
imul
jl
push
add
icebp
insl
scas
and
mov
popl
mov
clc
adc
mov
sub
inc
sub
cltd
inc
xor
jb
jle
scas
aas
inc
out
frstor
inc
cmpsb
mov
cltd
lds
push
jae
pushf
mov
mov
and
call
or
mov
out
xor
enter
mov
hlt
gs
mov
inc
cmp
mov
xchg
xorl
mov
cmpl
popf
leave
je
lcall
rcl
addr16
cs
ds
ret
sbb
xor
jmp
push
cs
in
in
and
sbb
hlt
jns
jmp
stos
outsl
mov
push
cs
xchg
stos
lods
adc
adc
mov
test
adc
addb
popa
fstl
add
lods
jb
mov
aad
imul
or
lods
int
iret
sbb
sub
mov
lret
in
xchg
jl
test
jnp
fwait
repnz
xchg
ds
in
pop
pop
dec
mov
jge
scas
dec
in
mov
div
repz
iret
cmp
push
fwait
std
in
xor
hlt
sahf
adc
clc
sbb
rclb
push
mov
mov
pop
insb
xchg
cmpsl
xchg
lock
fldl
inc
mov
mov
xchg
jge
mov
mov
and
xchg
lock
mov
jmp
pop
mov
aad
inc
sti
dec
mov
jb
popa
fadd
push
adc
cld
push
or
cmp
aam
mov
xchg
imul
repnz
fidivrl
sbb
repz
push
add
jb
mov
repnz
out
vdivpd
pop
xchg
loope
dec
enter
testb
addl
aam
pop
fcmovb
int
and
push
jmp
and
aas
add
xor
jo
mov
cmc
leave
xchg
mov
jne
ret
adc
shlb
in
jbe
sbb
ret
fcomi
subl
cmpsb
jnp
mov
cmp
lods
sbb
fildl
mov
pop
cwtl
xchg
lea
mov
add
mov
cmpl
add
fwait
add
xchg
fsubs
outsb
push
push
mov
out
or
int
fidivrl
mov
push
popa
sar
cmp
push
sbb
and
lahf
imul
sub
jne
movsl
mov
imul
pusha
push
rcrb
or
adc
xor
sub
inc
outsb
mov
in
setns
push
add
add
pop
cmp
mov
add
scas
enter
inc
ret
mov
or
in
mov
sti
and
ret
iret
rol
or
cltd
push
rcll
lods
and
sbb
lcall
enter
in
sub
test
in
mov
enter
pop
adc
cmc
pop
scas
push
dec
mov
lret
xchg
or
mov
pop
adc
jecxz
mov
aas
leave
mov
mov
js
out
mov
rcr
add
dec
ljmp
cld
add
adc
add
push
jno
and
lock
dec
fistpl
jl
testl
lret
dec
push
ret
inc
xchg
mov
and
cmp
fprem
xchg
add
iret
adc
das
cmp
das
push
fcmovnbe
sbb
add
xchg
mov
enter
cmp
mov
addr16
mov
pop
mov
lcall
jae
xchg
stos
pop
aam
in
bound
jmp
shll
mov
lods
mov
or
pop
lret
cld
mov
subb
mov
out
add
cmp
in
jp
pop
mov
mov
push
mov
xchg
jmp
pop
push
es
mov
pop
cs
je
stc
cltd
jno
outsl
sbb
mov
jns
in
xlat
inc
cmp
loop
stos
movsb
stos
roll
mov
lret
add
popf
sbb
cli
fnstcw
jb
jo
sarb
leave
mov
daa
fdivl
xor
push
test
clc
frstor
jnp
scas
jnp
popf
fbstp
lret
ss
jnp
jle
lock
aaa
push
fistpl
push
xchg
xchg
add
ljmp
loopne
lods
es
ret
mov
jmp
dec
shl
test
stc
outsb
cmp
sub
dec
pop
arpl
out
out
movsb
inc
jbe
dec
inc
dec
lods
ljmp
sbb
jno
jnp
jne
stos
in
out
cmp
outsb
and
mov
outsb
neg
pop
pop
scas
fbstp
mov
clc
xor
pop
push
mov
sbb
iret
jns
sbb
out
or
jo
lods
mov
test
fnstsw
fsts
sbb
mov
sub
cmpsl
xor
xlat
sbb
sbb
cmp
clc
mov
cmpsw
insl
mov
jnp
cmp
lret
xorb
bound
cli
jne
scas
lods
or
mov
imul
shll
add
movl
lret
dec
int3
les
fisttpll
leave
test
adc
pop
js
es
adc
xchg
fnstcw
add
std
sub
add
aam
mov
adc
push
or
shl
fisttpll
nop
adc
into
popa
bound
and
and
fscale
sub
jl
jp
mov
mov
cmp
je
imulb
sahf
icebp
add
pop
daa
in
addl
js
jno
pop
dec
jl
xchg
xchg
cwtl
cltd
lcall
imul
call
ljmp
sub
push
push
xchg
push
push
test
ds
jecxz
push
out
popf
icebp
jae
adc
repz
cmc
mov
adc
inc
sub
fadd
jl
xchg
aam
lea
push
dec
sahf
mov
sbb
leave
mov
xor
sbb
addr16
mov
push
loop
dec
outsb
mov
lret
or
lds
int3
or
mov
aaa
lret
frstor
mov
jb
shl
insl
icebp
movsl
xchg
push
test
sbb
or
xchg
incb
jp
add
stos
mov
pop
fisttpll
inc
xor
movntps
out
or
fwait
pop
adc
jmp
dec
movsl
cld
test
push
push
jbe
daa
dec
push
adc
ljmp
jecxz
push
mov
pushf
dec
sbb
jge
cs
xor
push
aas
outsl
fists
das
pop
iret
iret
fcomps
push
push
cmpsb
in
mov
add
mov
test
mov
and
imul
add
jae
adc
scas
push
ror
imul
int
cmpsb
pop
subb
je
popf
data16
mov
inc
call
imul
ret
push
push
mov
imul
push
mov
js
xadd
movsb
addr16
cmp
insl
mov
daa
rcrl
andl
aam
pop
clc
jp
adc
adc
jo
in
adc
out
test
or
cmp
int3
jo
out
icebp
mov
jo
mov
ss
js
ljmp
push
xchg
push
add
loopne
lock
sub
add
cltd
lock
orl
nop
insb
jae
pop
cmp
es
pop
mov
jmp
mov
imul
xlat
repz
xchg
fisttpll
popa
leave
je
lahf
leave
rep
repz
cmc
push
and
mov
inc
cli
ljmp
dec
lods
outsl
ret
aaa
and
pop
lcall
pop
jmp
xchg
test
push
push
filds
mov
mov
xchg
cli
sbb
or
mov
bound
mov
pop
call
or
pop
push
fbstp
push
jno
add
inc
or
mov
push
mov
jb
push
mov
imul
xchg
je
sbb
xor
int3
sub
pop
stos
ret
dec
dec
enter
stc
aas
in
rolb
cmp
sbb
ficomps
cli
lods
incb
and
dec
addr16
out
in
dec
pop
inc
jmp
ret
int
jnp
fimuls
pop
mov
ret
or
bound
and
push
pop
clc
jmp
sbb
inc
jb
mov
rol
test
popf
and
stos
inc
xor
scas
dec
inc
mov
pop
fildll
inc
adc
pop
push
jae
xchg
or
and
sub
outsl
ficoms
inc
jo
test
mov
stos
leave
hlt
testl
add
mov
push
sti
shll
sub
pop
push
arpl
add
cmpb
mov
pop
mov
xchg
loop
push
sahf
ljmp
dec
in
clc
inc
xchg
inc
push
push
insb
xorl
xchg
out
dec
outsl
mov
mov
mov
pop
lds
cmc
sub
icebp
imul
pop
fnstenv
xor
lfence
mov
ret
and
push
aam
mov
test
sub
ss
jge
clc
into
ljmp
aad
sbb
jecxz
or
clc
div
cmpb
sbb
jns
push
imul
pop
in
mov
inc
repnz
stos
jmp
int3
jns
cli
in
out
cmpsl
loopne
mov
add
dec
mov
nop
pusha
xlat
sub
jle
cmp
lahf
sbb
pop
popf
fstl
ja
ds
and
pop
cmp
xchg
addr16
sbb
sub
mov
push
mov
imul
imul
lock
ds
hlt
jp
repz
adc
xor
call
cmp
lds
popf
jbe
mov
mov
addr16
mov
fidivrl
out
outsl
inc
mov
das
push
inc
sub
xchg
cmp
sub
push
inc
lods
mov
loop
cmp
outsl
push
push
sub
insl
int
es
repnz
mov
les
jmp
cmp
sbb
test
and
add
and
fstpt
loopne
and
inc
lods
jp
arpl
xor
pop
ja
adc
dec
jo
outsb
addb
lods
repz
pop
pusha
mov
mov
mov
mov
lahf
fwait
aaa
loopne
cli
ret
call
xchg
add
pusha
icebp
je
sub
sub
dec
popa
inc
or
mov
and
test
int3
xor
pop
mov
sub
sahf
mov
push
loope
mov
aas
scas
stc
test
fs
inc
cmp
xorl
stos
sbb
out
mov
jb
jl
push
imul
test
inc
loope
cmpsl
jmp
les
and
push
sub
es
mov
fwait
jge
adc
add
push
filds
adc
cmpsl
xor
out
push
aaa
jns
inc
push
xlat
sahf
iret
jbe
fwait
push
into
adc
insb
xchg
outsb
loop
adcb
mov
movsb
sbb
adc
scas
mov
movsl
cmpsb
icebp
pop
in
mov
sub
dec
ret
shrb
loopne
jne
pop
mov
nop
mov
pop
sbbb
and
aas
adc
jl,pn
xchg
or
xor
shl
or
sbb
lods
jo
mov
fnsave
insb
insb
push
pushl
loop
mov
push
mov
testl
insb
and
fs
fwait
xor
jg
xchg
hlt
in
xor
mov
xor
jp
mov
or
cmp
lods
adc
jne
mov
jp
or
jmp
mov
scas
mov
sbb
mov
add
jbe
xchg
inc
mov
pop
adcl
iret
add
outsb
daa
fisttpll
mov
inc
xchg
cltd
fists
mov
push
cmp
bndldx
cmpsb
mov
ret
test
mov
sahf
std
pop
insb
call
ror
fldenv
mov
lods
and
lret
pop
xchg
es
das
stos
adc
xor
fcomps
mov
shlb
push
fmul
and
and
mov
or
push
xor
repnz
push
jae
mov
adcl
out
cmc
xor
adc
scas
xchg
mov
xchg
mov
xorl
shl
test
leave
inc
lret
outsl
push
adc
lcall
cltd
sahf
dec
pop
dec
lds
dec
jmp
imull
mov
push
movzbl
mov
pop
push
adc
je
jb
std
or
push
cmc
xchg
rcrl
mov
cld
inc
mov
cwtl
mov
mov
mov
inc
and
push
hlt
push
fmuls
sbb
imul
mov
mov
jbe
std
mov
mov
stos
repz
and
loop
inc
pop
xchg
je
sbb
and
and
cmp
push
xor
imul
cmp
pop
xor
lds
fmuls
js
pop
inc
imul
push
lea
rep
xchg
lret
mov
add
sub
loopne
xchg
sub
pop
or
inc
push
fsub
movups
scas
out
xchg
je
mov
je
js
sbb
iret
inc
adc
out
mov
dec
subb
dec
xor
cs
iret
daa
aaa
popf
or
mov
lods
xchg
leave
mov
push
daa
xchg
sahf
inc
xchg
out
out
dec
cmc
mov
gs
addl
decl
push
scas
aad
repnz
std
nop
arpl
mov
inc
inc
pop
sbb
pusha
sub
cwtl
and
jns
cmp
fwait
scas
push
fwait
jge
popf
add
ret
leave
adc
sub
sbb
lods
and
pop
fldcw
in
jne
movl
mov
bnd
inc
mov
and
sbb
xchg
jg
mov
push
lea
int3
cmp
daa
push
shlb
jmp
pushf
xchg
xchg
push
arpl
mov
gs
sub
pushf
mov
push
pop
mov
into
les
xor
je
call
jg
loop
or
stc
dec
mov
movsb
je
mov
gs
mov
sarb
adc
inc
cmp
adc
sub
pop
add
jno
stos
sub
jb
jo
loope
xchg
pop
sbb
xor
push
ja
aad
ljmp
aad
cmp
xor
lcall
lods
cmpsl
and
mov
or
and
push
add
mov
cmp
loope
xchg
lods
push
cwtl
mulb
test
sub
mov
dec
jle
mov
adc
jl
mov
hlt
movsb
pop
nop
out
and
xchg
sarb
xor
push
pop
add
push
and
call
fbstp
push
decl
std
in
sub
out
jmp
orb
xchg
adcb
push
lods
adc
cmp
inc
subl
dec
jmp
mov
xor
fs
lret
cwtl
and
ljmp
rorl
imul
xor
push
repz
sub
xor
jmp
pop
mov
jge
ret
dec
sub
sub
dec
out
insl
pop
add
test
push
aam
lcall
mov
jmp
push
pop
test
jns
test
push
mov
jecxz
and
cld
shl
pushf
xchg
dec
add
cmp
or
fisubs
push
or
and
push
pop
cmp
pop
jne
and
sub
jle
add
sbb
test
testb
xor
xorb
pop
popa
adc
mov
fnstsw
enter
inc
sub
sbb
sub
push
mov
add
dec
push
jecxz
mov
sub
jbe
dec
in
scas
jns
push
pop
mov
xorb
push
ret
lret
mov
aad
pop
xor
inc
jae
popf
vpunpckhqdq
icebp
sbbl
inc
fstp
adc
les
sub
mull
cmp
stos
cwtl
mov
or
sbb
xchg
sti
cmpsl
rclb
mov
jno
pop
cmp
jmp
push
dec
cs
jne
mov
mov
xchg
ror
das
xor
stc
push
addr16
repnz
and
cmp
movsl
cmpsb
pop
cmpsl
mov
adc
push
dec
in
xor
sub
mov
ror
xor
mov
inc
aas
js
data16
test
lods
push
dec
inc
jge
test
cmp
dec
mov
lds
inc
cmp
ficompl
test
sbb
inc
cmp
adc
jb
mov
pop
int3
or
cmp
iret
xlat
loopne
add
mov
test
movsb
push
fmull
xchg
out
subb
int3
test
cli
add
in
sbb
sbb
bound
adc
and
out
push
inc
xor
xor
test
sarl
outsl
loop
add
xchg
jmp
pop
mov
cmp
lcall
xor
out
dec
adc
dec
andl
sbb
icebp
dec
xor
dec
rcrl
lods
inc
out
mov
iret
into
lahf
push
pushl
push
fmul
dec
or
lock
cltd
xorl
mov
test
scas
push
stc
fisubrl
and
hlt
jp
lret
pop
cmc
popa
or
loopne
les
lods
push
std
and
repz
fcoms
test
sub
dec
sarl
dec
mov
pop
pop
xchg
imul
xchg
into
scas
cmp
xchg
mov
lea
in
rorl
xchg
mov
rcr
ret
std
repnz
dec
aaa
xor
or
add
mov
ljmp
stos
sbb
mov
dec
sbb
jg
sbb
push
and
xchg
arpl
loopne
sbb
adc
push
cmp
rcl
int
jecxz
mov
lds
or
addr16
inc
fiadds
push
dec
repz
pop
lods
jmp
fisubl
test
pushf
pop
loopne
xlat
push
cmpsl
mov
clc
push
mov
cmp
sub
mov
aaa
xchg
int3
mov
cmovnp
and
cmp
icebp
adc
in
mov
insl
pop
mov
sub
jb
in
mov
cmpsb
fs
adc
cs
pop
dec
jne
aaa
repnz
enter
jbe
outsb
add
jne
dec
popa
shld
aaa
fcmovnu
mov
push
loope
rcrb
sarl
inc
lods
in
sub
ljmp
stc
add
in
scas
mov
push
fs
inc
aaa
mov
cmp
in
adc
mov
jmp
sbb
jb
leave
mov
int3
dec
fsubs
inc
shlb
xchg
rcll
mov
mov
jae
fldcw
in
cld
and
imul
lret
push
fbld
insl
shll
in
mov
and
pop
jae
adc
movsl
mov
jbe
test
stos
pop
sub
in
mov
dec
out
inc
or
mov
into
popf
scas
lahf
movsb
jno
cmp
es
mov
movsl
jno
addr16
fstpl
fstpt
mov
bound
mov
jmp
mov
rol
jge
sub
jb
add
jecxz
mov
adc
ret
add
sbb
fs
mov
or
lahf
movd
jmp
push
fwait
jae
inc
scas
sarb
shl
ljmp
add
call
sub
lods
lahf
jo
mov
inc
popa
mov
scas
fmull
iret
jmp
in
cwtl
pop
push
push
ja
wbinvd
test
push
rcrb
jno
bound
stc
pop
sbb
pop
adc
jne
jmp
js
pusha
push
and
dec
stos
adc
mov
lock
xor
ljmp
mov
sbb
test
or
mov
pop
ret
xor
dec
dec
shll
ret
insb
pop
add
lock
push
outsl
daa
or
popa
stc
push
shll
fisubrs
mov
insb
xchg
dec
xor
in
xchg
xor
icebp
ret
cmp
mov
pop
xchg
dec
clc
imul
lock
push
popf
into
aam
inc
xor
sahf
push
inc
mov
cmc
sub
aam
xchg
mov
mov
dec
cmp
mov
sbb
add
mov
adc
jmp
push
aas
sub
add
shlb
cmpl
xchg
jle
mov
leave
ss
aad
imulb
pop
or
sub
push
leave
das
mov
stos
cwtl
adc
divb
dec
adc
pop
aam
mov
js
jmp
int3
subl
adc
ret
xor
pop
insl
cmp
iret
push
sub
add
imul
pop
sub
enter
cltd
push
lahf
scas
inc
in
sub
jne
je
jle
icebp
icebp
jg
fdivr
lret
pop
jne
ss
fsubs
cmp
out
add
pop
andl
js
cmp
xor
jno
unpcklps
sahf
xchg
push
pop
stc
mov
aas
inc
dec
inc
lcall
das
sbb
jo
pushf
sub
clc
adc
cmc
mov
stos
divb
lret
sbb
pop
xchg
adc
jmp
dec
push
fstps
cmpsb
mov
fwait
mov
jle
out
lahf
mov
cmpsl
gs
and
sub
rorl
xchg
cmp
imul
ja
mov
bound
sub
test
push
xchg
inc
sub
or
push
cli
cltd
adc
fs
and
mov
idivl
adc
jg
ds
jae
cmp
outsl
or
push
sbb
pop
sahf
or
pop
ds
inc
sti
lret
scas
scas
fmull
sti
dec
add
pop
bnd
ret
popf
jbe
outsl
jg
pop
sbbb
or
sub
aas
push
das
xchg
mov
stos
je
dec
jb
das
xchg
jnp
mov
ljmp
xor
mov
fstpt
sti
decb
in
insb
lods
inc
leave
jmp
and
or
adc
es
jge
xor
mov
and
js
sbb
and
scas
or
mov
cwtl
enter
movsl
pop
sbb
sub
clc
jae
js
mov
jnp
cmp
int
ja
pop
push
ja
mov
lock
xchg
orl
sub
mov
inc
jmp
mov
fiadds
clc
insb
dec
sub
xlat
jns
repnz
xor
mov
lret
inc
loop
mov
sub
xor
mov
ficomps
std
lods
push
ret
xchg
add
pop
jno
jb
bound
push
test
sbb
sub
fcmovnu
and
pop
js
lock
push
into
fsubs
mov
mov
mov
into
loop
fstpl
aaa
movsb
mov
dec
shlb
imul
imulb
arpl
xchg
mov
dec
outsl
fsubrs
imul
enter
fisttpl
pop
pop
out
xchg
mov
jg
mov
cmp
ficomps
push
adc
mov
mov
shll
sbb
fistl
hlt
mov
push
sub
je
push
lea
insb
stos
mov
lret
add
jle
xchg
jbe
mul
or
outsl
mov
rcr
sbb
dec
ret
pusha
stos
xchg
lahf
or
lahf
or
inc
mul
movsb
adc
mov
clc
add
test
pop
out
fidivrl
dec
outsb
gs
push
pop
jl
xor
bound
inc
jmp
adc
mov
outsl
xchg
mov
inc
mov
rclb
pop
mov
arpl
mov
lahf
repnz
movb
sbbl
enter
fs
mov
ljmp
push
dec
insl
incl
add
std
repnz
mov
or
popl
in
mov
inc
cmp
fst
ja
das
xor
scas
lahf
in
sub
stos
lods
shll
adc
gs
andl
pop
ljmp
inc
mov
ds
mov
or
mov
adc
into
fs
xchg
lcall
inc
test
clc
push
mov
out
outsb
adc
inc
cltd
jecxz
dec
inc
ss
loopne
inc
add
daa
jecxz
xor
insb
mov
aas
addl
pop
sub
rcll
dec
xor
jo
scas
repnz
aad
lahf
sbbl
push
push
cmpsl
lret
push
daa
mov
negl
hlt
out
push
pop
out
insl
sbb
cmp
fldl
sahf
mov
xchg
mov
xchg
lret
lret
fnstcw
sbb
outsb
arpl
ffree
fwait
or
sbb
daa
pop
cmp
mov
cmp
xchg
je
test
push
jp
mov
leave
cmp
add
popf
notl
cmp
jno
popl
test
call
add
mov
cld
mov
call
xchg
test
bound
mov
add
fsubr
pop
jne
arpl
icebp
outsl
loopne
push
pop
rcrl
roll
in
pop
scas
jo
pop
adc
out
pop
mov
fwait
sub
sahf
xchg
jo
xor
cmp
fwait
sub
mov
and
rolb
das
popf
or
jnp
push
out
fsubrs
mov
insl
aaa
mov
cltd
addr16
mulb
push
add
leave
fstl
adc
pop
mov
and
sbb
push
cmp
pop
arpl
insl
adc
test
iret
xchg
leave
mov
push
push
add
inc
pop
sbb
out
inc
xor
mov
inc
nop
icebp
or
mov
mov
scas
pop
add
pop
inc
lds
push
loop
jbe
imul
into
mov
pop
push
dec
pop
cs
mov
cmp
dec
lcall
push
adcl
add
cmp
nop
push
frstor
sbb
inc
ja
xchg
jmp
inc
push
and
test
in
in
insb
inc
adc
sub
loopne
sbbb
xchg
mov
in
sub
dec
addr16
sub
dec
mov
mov
mov
jne
or
jnp
dec
fstps
cmc
jb
pop
mov
push
push
jbe
xchg
test
stos
dec
stos
dec
pop
and
cmpsl
adc
ret
dec
jae
in
pushf
iret
mov
imul
mov
cmp
cmpsl
jmp
or
hlt
lcall
mov
inc
xor
rcrb
outsb
pop
lock
testb
dec
push
shll
xchg
iret
in
xor
inc
mov
fistpl
movsl
pop
out
cltd
mov
or
ret
aaa
pop
dec
cmp
mov
push
movsl
adc
mov
aad
adc
in
and
mov
stos
mov
arpl
mov
cmpl
imul
hlt
movsl
dec
xchg
jmp
addb
clc
clc
cwtl
mov
popa
pop
add
outsl
xor
jo
xchg
imul
sahf
insb
neg
fcoms
filds
sbbl
loop
popf
and
daa
sbb
aam
jp
xor
mov
lds
pop
dec
xchg
aaa
and
cmp
jno
mov
in
jae
cmpsb
vpunpckhqdq
push
jl
or
scas
popa
sbb
mov
xchg
mov
call
stos
arpl
inc
cmp
and
fildl
mov
mov
jnp
incb
test
mov
xchg
pushf
cmp
lret
imul
cli
add
adc
mov
test
sti
push
jp
adc
insl
call
push
push
iret
cmp
xor
pop
repz
ret
rorl
push
mov
mov
cmp
xor
hlt
cmp
xchg
mov
jecxz
sti
loope
xor
fadd
jmp
loopne
xchg
fiaddl
pushf
mov
mov
mov
das
jg
mov
imul
cmp
push
lret
mov
xor
call
push
ficompl
pop
xchg
mov
fisttpl
sbb
pusha
inc
iret
imul
test
jnp
or
pusha
sub
sahf
mov
enter
dec
outsb
push
push
repnz
loope
sahf
sbb
fchs
add
cmpsb
jne
adc
push
lcall
js
insl
adc
mov
scas
cmp
lods
jge
outsb
cmp
xor
inc
and
je,pn
rolb
push
fcomip
add
fwait
and
mov
shrl
lods
inc
xor
inc
sbb
aas
and
push
fwait
xchg
iret
or
fs
xchg
jne
cli
and
and
test
xor
xor
popa
xor
mov
cmp
xchg
lcall
sub
lea
movl
mov
rcrl
lahf
repnz
sbb
hlt
dec
dec
jp
ja
mov
push
dec
add
clc
sahf
pop
xor
stos
into
subl
cmp
in
push
jb
in
and
sub
sub
pop
jbe
mov
outsb
xchg
mov
rclb
add
sub
fwait
inc
pop
mov
es
jno
lcall
test
add
aam
mov
divl
or
xlat
push
or
pop
aad
testb
dec
cs
adc
or
fwait
inc
adc
jp
xchg
push
mov
cltd
sbb
mov
cmp
imul
add
mov
dec
jp
or
in
pop
pop
sub
xchg
stc
rolb
aaa
xor
rorb
adc
push
sub
mov
out
mov
cmc
stc
movsb
pop
out
aam
sbb
pop
adc
dec
push
mov
lea
pop
out
add
cmp
xor
add
sub
daa
add
loopne
jge
and
jp
mov
add
rcr
sbb
test
xchg
fwait
addl
fisubrl
ret
out
out
and
fcoml
pop
push
push
sub
inc
sbb
ss
mov
jle
std
icebp
pusha
sarl
sbb
mov
test
mov
xor
dec
stos
stos
mov
jnp
shrl
mov
sarb
xchg
and
repz
fdivrl
dec
out
std
mov
inc
insb
cmp
push
je
popa
ss
test
mov
jp
and
xchg
lret
adc
pop
xor
add
iret
jne
jo
jge
cmp
mov
test
aas
or
add
mov
dec
mov
inc
xor
out
and
dec
pop
mov
cmp
push
jge
add
loopne
insb
aam
xchg
repnz
dec
movb
or
xor
mov
cwtl
or
movsl
shlb
aaa
subl
cmp
aad
jmp
add
popf
pop
cmc
lea
insb
bound
xchg
popa
stos
dec
divl
pop
adc
mulb
mulb
sbb
jg
dec
stos
fildl
jbe
movsb
dec
icebp
jg
std
jb
dec
cmp
mov
mov
rcrb
jnp
aaa
loopne
push
cmp
enter
dec
xchg
jb
xor
sbb
inc
pop
mov
or
jns
push
or
push
fldt
or
jno
sub
pop
adc
notb
sub
cltd
das
add
cmpsl
push
aad
stc
fndisi(8087
sub
and
lcall
ret
cmp
inc
fstpt
pop
mov
and
or
dec
mov
shr
mov
pop
push
sbb
cltd
ret
sub
jl
pop
sub
xor
cmc
jg
push
mov
lahf
int
lods
popa
mov
xchg
mov
insb
or
repz
push
xor
cmpsb
sbb
rcrb
xor
ja
repz
jl
dec
sti
test
adc
mov
lds
jns
sbb
pop
jmp
out
cmp
imul
mov
or
mov
pop
mov
adc
mov
and
cmp
jg
jmp
mov
sbb
lahf
out
out
lods
jp
push
cmp
sbb
adc
inc
add
sbb
xor
mulb
mov
pushf
mov
mov
adc
loop
int
push
arpl
out
stc
rcl
jnp
add
subb
and
lds
push
xor
mov
lods
std
sbb
and
in
sbb
sbb
into
dec
pop
insl
pop
lret
push
and
loop
aad
leave
out
jae
jns
cmp
lret
and
jb
add
aam
add
mov
mov
in
mov
nop
ds
xchg
add
aad
push
imul
shll
incb
dec
adc
xchg
shlb
mov
cmpsl
and
inc
ss
mov
data16
cmc
fidivl
iret
int3
lods
loopne
filds
repnz
and
ds
nop
mov
dec
jp
sub
sbb
ret
lds
jne
add
pop
mov
xchg
sub
mov
or
inc
arpl
lret
xor
insb
mov
jb
xchg
jl
int
outsl
ds
mov
push
xchg
pop
rcrl
movsl
cs
sbb
sub
mov
lea
in
mov
sahf
pushf
nop
andb
cmp
dec
push
nop
sbb
stos
or
pop
mov
and
sbb
rclb
lcall
jb
or
ja
or
sub
cmp
adc
fidivrl
lcall
push
xchg
leave
lret
push
adc
in
dec
xor
xchg
jmp
mov
jbe
dec
fld
pop
lock
jmp
xchg
fiadds
stos
xchg
pop
cld
fsubs
jno
roll
xchg
push
jge
pop
jno
out
iret
clc
movsl
inc
stos
enter
mov
cmpsl
and
scas
aas
negl
sbb
cmpsl
jp
data16
xchg
adc
jmp
lret
pop
dec
in
in
pop
push
add
nop
adc
out
xor
jno
add
xlat
pop
xorl
xchg
cmp
loope
sahf
push
cmp
mov
jb
imul
ret
pop
fcmovnbe
cmp
arpl
mov
and
dec
cmpsb
outsb
jne
or
out
inc
cmp
add
jo
lret
pop
fldl
dec
mov
jne
xlat
adc
mov
mov
addr16
pop
in
decb
fcmovne
js
leave
testb
insl
in
mov
adc
push
sbb
jo
imul
xor
repnz
fidivrl
mov
jecxz
mov
incb
loope
std
lret
pop
inc
adc
xor
lret
test
push
loopne
sub
xor
or
mov
lock
mov
push
insb
mov
pop
push
lods
sbb
mov
sub
jne
inc
test
pop
icebp
jp
les
repz
push
lret
or
stos
or
cmp
add
aaa
mov
repz
into
lds
fidivrl
fdivr
icebp
and
out
xchg
lods
leave
sbb
and
jmp
jmp
xchg
push
aam
jg
mov
xchg
rcrb
jmp
push
mov
mov
mov
cmpsb
adc
xchg
mov
pop
cld
inc
pushf
mov
out
inc
out
out
mov
rcrb
lahf
mov
jae
jmp
dec
cs
fmull
leave
pop
and
dec
ja
dec
xor
clc
adc
movsl
pop
mov
lcall
test
out
sahf
push
das
popa
enter
xor
mov
rclb
out
mov
je
mov
out
fwait
cld
outsb
xchg
sub
ret
mov
cmp
sub
cmc
or
pusha
loop
mov
jp
xchg
sahf
imul
std
push
adc
inc
pop
in
mov
lret
out
inc
push
lods
push
mov
adc
in
mov
jae
pushl
or
jno
inc
les
jl
imul
cwtl
jb
inc
pop
shll
mov
addl
mov
imul
int
imul
push
out
dec
arpl
loop
xorb
int3
and
fld
enter
inc
inc
push
stos
ljmp
mov
xor
add
push
enter
inc
movsl
arpl
push
out
aas
lret
lods
xchg
lret
inc
sbb
and
push
int
mov
jae
pop
in
push
and
lods
jbe
cmp
jecxz
sbb
sub
loope
lds
stos
jecxz
and
mov
xchg
inc
xchg
push
xchg
lds
jo
mov
out
mov
cmp
inc
pop
or
mov
push
xchg
sahf
dec
jb
jb
pop
clc
out
rcr
jecxz
outsl
dec
jns
sbb
adc
inc
jp
jge
cwtl
outsb
mov
inc
fldl
std
sbb
imul
jg
lcall
sbb
test
int3
sub
adc
pop
add
mov
scas
inc
sub
adc
in
inc
mov
in
jp
add
sub
sub
aam
push
cwtl
loopne
mov
dec
in
in
cmp
push
mov
incl
push
add
and
xchg
xlat
xchg
sbb
popf
jg
pop
push
xchg
out
adc
adc
cltd
mov
dec
xchg
cmp
mov
addr16
inc
gs
xor
add
push
cmpl
bound
aas
xchg
adc
jnp
leave
cwtl
lock
shlb
cld
inc
and
jp
or
dec
ret
leave
sbb
or
icebp
stos
aas
xorl
adc
adc
adc
add
hlt
jmp
pop
jp
rclb
mov
stc
ljmp
adc
ja
fwait
cmp
rorb
adc
xchg
out
mov
test
xor
add
push
js
out
pop
jle
fmul
cmpsb
dec
das
mov
aaa
addl
inc
inc
lea
iret
mov
rorl
or
fsubrl
push
loop
pop
sbb
xchg
int
cmp
mov
sbb
ret
push
sub
or
xchg
and
xlat
leave
cmp
add
lret
mov
cmp
cmpsb
and
lock
pop
push
pop
fcmovnu
ja
xchg
sub
stos
das
es
sbb
xchg
test
shl
mov
add
or
mov
sub
call
pop
ret
roll
std
in
mov
test
xchg
iret
push
mov
daa
in
pop
mov
mov
nop
push
sti
push
mov
mov
incb
sbb
dec
dec
cmpsl
mov
and
xor
movsb
pop
mov
das
xor
xchg
mov
test
inc
aad
mov
adc
adc
cmp
jmp
mov
std
xor
and
bound
pop
and
iret
dec
add
sbb
pop
aas
bound
jo
xor
fcmove
mov
or
push
cld
mov
xor
adcl
inc
mov
shrl
lods
adc
mov
faddl
repz
sbb
and
shll
nop
in
xchg
cmc
decl
dec
int
movsb
jmp
mov
push
cmp
xchg
fnsave
pop
jg
jae
cmpsl
or
pusha
mov
xor
xor
arpl
lock
pop
jbe
cmp
je
jg
add
xlat
lods
jbe
cmpsb
push
loopne
cmp
push
lahf
xor
jle
push
fs
ljmp
insb
dec
mov
mov
and
cld
sahf
dec
pop
xchg
test
push
mov
shlb
mov
insb
aad
loop
and
pop
add
stos
mov
or
lds
loop
cwtl
mov
dec
inc
xor
repnz
mov
jae
mov
add
std
sub
loopne
add
scas
lods
insb
inc
pop
imul
jge
cmp
pop
mov
mov
pusha
dec
movsl
pop
jno
imul
mov
xchg
nop
mov
shll
sarl
outsb
add
test
mov
mov
js
hlt
out
sub
xchg
stc
int
leave
inc
cli
test
movsl
mov
pushf
stc
mov
mov
ret
lret
mov
or
not
push
icebp
iret
inc
invd
inc
or
imul
cmp
rolb
sbb
movl
shlb
fldt
cmpsb
dec
iret
inc
movsb
push
adc
fs
pusha
push
xchg
mov
test
inc
es
inc
mov
pushf
cltd
jo
shr
and
push
fldenv
mov
push
hlt
pop
enter
fisttpll
arpl
and
dec
jnp
lret
imul
inc
popf
dec
cld
add
movsl
std
es
add
out
aam
loopne
cltd
mov
leave
add
ret
test
cmp
pop
and
scas
pushf
mov
fdivp
adc
add
imulb
je
mov
repnz
xchg
mov
pusha
push
test
mov
sbb
ja
jmp
shrb
mov
push
in
repz
andb
cmp
loopne
pop
add
in
leave
lret
je
call
jle
inc
out
jnp
dec
dec
push
dec
repz
fstpt
mov
inc
mov
or
out
inc
fistpll
inc
inc
adc
les
mov
adc
mov
das
sub
iret
cmp
test
or
out
cs
ffree
ss
fwait
or
jmp
lcall
adc
stos
or
inc
testb
or
push
inc
stos
leave
lahf
cmpsl
adc
xor
aad
ret
scas
mov
cmpsw
mov
dec
out
bound
and
outsl
ds
lret
ret
test
ror
mov
xchg
lods
cli
xchg
sbb
pop
or
lahf
dec
aaa
pushf
adc
push
fwait
loopne
jno
addr16
mov
adc
lahf
popf
das
xor
jle
repnz
addr16
jg
ret
loopne
int3
lret
data16
test
and
and
dec
mov
fsubrs
sub
jg
inc
test
inc
pushf
add
mov
movl
lcall
mov
rol
mov
and
dec
xchg
insb
nop
and
push
lcall
or
and
frstor
pusha
inc
insl
xchg
lret
arpl
das
fldenv
mov
stc
nop
test
int
std
imul
add
dec
cmp
flds
mov
add
and
mov
push
and
mov
dec
imul
test
jecxz
jne
test
mov
mov
repnz
add
inc
repnz
mov
shll
mov
mov
inc
es
mov
adc
inc
shll
imul
pop
mov
aad
leave
into
test
in
jae
addr16
mov
imul
in
into
imul
call
cwtl
sahf
subb
lods
mov
sarb
add
or
aaa
addr16
dec
mov
icebp
push
and
add
or
dec
enter
jo
fwait
cmc
stos
push
mov
or
sub
push
mov
adc
mov
cwtl
std
test
dec
push
sub
mov
iret
mov
subl
xor
jp
xchg
ret
pop
jecxz
cmpsb
or
jle
jae
push
add
dec
adc
xchg
mov
mov
jnp
xchg
mov
fsubs
push
xchg
in
pop
testl
mov
sub
cli
sbb
lock
shrb
fwait
add
xchg
sbbl
inc
cmpl
jg
pushf
push
icebp
inc
leave
xchg
add
test
into
cmp
sbb
add
xor
popa
mov
dec
stc
or
dec
in
daa
nop
cmp
sub
aas
iret
xchg
cmp
jmp
flds
dec
icebp
fimull
push
dec
mov
push
cltd
cmp
lods
in
or
test
adc
cs
sbbb
sub
inc
fimull
sbb
imul
lds
cld
hlt
inc
sbb
lahf
mov
daa
insb
xor
std
mov
adc
cmp
xor
sbb
out
sub
sub
in
sub
inc
cmp
fmuls
in
sub
xchg
lret
jge
and
mov
xchg
jno
addl
loop
sub
lods
leave
dec
fidivrs
popa
sti
or
pop
insl
aas
and
lock
add
xchg
gs
push
aaa
in
sub
adc
pop
xor
mov
call
std
scas
push
add
xor
movsb
out
fbstp
repz
les
push
gs
ds
aas
or
enter
scas
push
rorb
xor
test
int
incl
frstor
dec
aad
push
jl
sbb
stc
loopne
out
mov
int3
xor
in
jp
aad
les
sbb
or
sub
orl
int
jmp
pop
cmp
dec
add
sub
dec
test
sti
push
int
xor
xchg
pop
sub
fstpl
pop
movsl
or
pushf
movsl
test
pop
jg
and
data16
ficompl
add
loope
mov
jp
sub
pop
cmp
and
or
data16
je
test
add
cmpsb
loop
xchg
insl
bound
paddsb
jp
test
rclb
call
das
pop
mov
lcall
and
dec
lods
dec
cmp
out
xchg
mov
das
cld
shl
sbb
pusha
jmp
daa
dec
jecxz
aad
lahf
mov
cmp
xor
repz
mov
addr16
jns
cmp
sbb
dec
xchg
mov
push
std
and
loopne
notb
xchg
cmp
dec
mov
scas
jmp
ret
dec
mov
bound
cmp
outsb
cmp
sbb
das
cmp
lds
mov
movsl
loopne
cli
pop
sub
lret
insl
and
jae
add
test
notl
xchg
fildl
imul
mov
jmp
cmp
pushf
clc
and
mov
lds
cmpsb
mov
inc
xor
push
pop
out
or
cmp
outsl
aaa
cmp
gs
insl
call
pop
inc
popa
and
fcomps
pop
push
xlat
sbb
mov
mov
add
shrb
cwtl
dec
pop
stos
ret
add
movsl
in
lods
sbb
mov
pusha
ja
mov
mov
mov
adc
jns
cwtl
arpl
inc
in
add
jns
mov
cmp
mov
leave
out
xchg
adc
addl
fldenv
cld
clc
rorl
jg
cmp
aam
adc
cmp
mov
pushf
cmp
add
push
fstp
cli
pop
idivl
outsl
cmpsl
or
push
fprem
pop
repz
xchg
and
push
xor
int3
xchg
cmc
out
fwait
mov
xor
cs
ds
out
jnp
data16
jle
jb
test
lahf
pop
xchg
pop
push
push
clc
pop
nop
dec
loop
int
push
cmpsb
dec
daa
jle
xchg
mov
fdivl
orl
inc
fimuls
lret
movsl
test
in
pop
loop
xchg
out
cmp
push
ficomps
movsl
sbb
add
inc
dec
cmpsl
bound
inc
daa
pop
iret
lcall
fwait
adcb
incl
inc
inc
add
adc
rcl
cmp
pavgb
push
pop
mov
rolb
xchg
add
push
jns
in
cmp
sbb
dec
cmp
sbb
ds
xor
mov
mov
inc
xchg
xor
lock
test
or
mov
xor
adc
xchg
les
sbb
aas
es
cmp
popf
sbb
lods
sub
lahf
ja
push
push
aaa
out
int
xchg
sub
xchg
jle
mov
jg
movsl
mul
sub
lock
jle
dec
or
mov
cmpsl
test
into
fcomp
fdivs
in
and
ja
jl
stos
ret
mov
add
cltd
hlt
lods
jge
add
fisubrl
fdivrp
pop
adc
outsb
int
mov
lods
mov
mov
mov
lock
xchg
inc
imul
in
rcll
daa
loop
out
add
mov
movsb
out
sahf
lds
outsl
repnz
jg
mov
dec
cmpsl
pop
push
push
or
or
dec
jp
mov
mov
pop
int3
lret
mov
idivl
jge
push
sbb
mov
pop
cld
or
fnstenv
push
cmpsl
arpl
sbb
xchg
nop
mov
iret
decl
data16
xchg
scas
jo
inc
sbb
jle
out
inc
or
adc
xor
push
xchg
andps
push
cwtl
inc
sbb
xor
pop
pop
js
out
insl
lret
mov
repnz
dec
mov
in
int
out
xchg
pop
mov
ret
jnp
xor
xchg
xchg
or
js
dec
sub
and
mov
sub
nop
stos
in
arpl
imul
out
mov
stc
out
inc
fld
bound
out
push
add
xchg
jg
jno
inc
insb
xor
mov
mov
mov
ljmp
addr16
aam
sbb
data16
jge
pcmpeqb
ret
cmp
mov
push
lahf
pop
jbe
pop
adc
mov
mulb
int
notb
jnp
inc
sub
cmpsl
arpl
and
sub
sbb
mov
fistpl
pop
out
dec
sub
idivl
imul
mov
xchg
jae
leave
mov
inc
je
repnz
idivb
daa
std
fs
arpl
in
inc
out
leave
xchg
and
add
pop
ja
push
and
out
in
or
sub
mov
or
or
or
rclb
and
loope
repz
movsb
loopne
in
insb
test
jbe
arpl
movsl
dec
orl
scas
pop
call
fwait
jl
aaa
jg
icebp
jp
dec
movsl
push
pop
cmp
dec
cmp
jl
lea
ljmp
jl
mov
js
inc
js
cs
mov
add
pop
loop
sbb
push
cmp
out
xor
push
xor
add
aad
cld
imul
jne
sub
or
inc
jo
fsubl
fisttpl
or
inc
lahf
test
insb
cmp
shll
mov
addr16
jl
and
int3
ss
sub
cld
inc
or
fldl
lahf
xchg
adc
sar
arpl
push
push
sub
fs
push
push
mov
icebp
push
aad
mov
cwtl
jecxz
pushf
mov
mov
hlt
insb
int3
je
adc
out
mov
inc
sti
pop
cmpsl
movsl
lods
js
mov
pusha
cmp
mov
mov
jne
shlb
out
jno
loop
jmp
aad
sahf
xchg
mov
pop
sbb
insb
and
mov
sub
cmc
dec
pop
pop
rol
push
imul
mov
inc
jnp
push
cmp
pop
jb
mov
in
loopne
fstl
and
mov
push
pop
pushf
xchg
mov
rcrb
cld
or
shrl
push
dec
in
mov
mov
xchg
negl
add
mov
test
js
insb
sbb
push
sar
pop
xor
sbb
hlt
scas
xor
adc
mov
ja
ret
jno
in
mov
and
inc
adc
sahf
jp
cwtl
or
mov
add
popf
push
cmpsb
or
into
and
call
sub
lds
mov
fiadds
pusha
sti
ftst
mov
enterw
dec
in
mov
insl
mov
inc
ret
repnz
push
add
inc
std
insl
repz
lcall
sbb
outsb
dec
imul
insb
cmp
les
addl
mov
js
movsb
xchg
pop
dec
rcl
cmpl
cmp
or
mov
mov
hlt
dec
cmpsl
jo
adc
repz
gs
xor
add
sti
rcrl
mov
mov
test
jnp
add
stos
jb
fsub
mov
push
les
xchg
loopne
and
and
pop
sbb
cmp
add
mov
movsb
mov
cmpsl
mov
flds
xchg
es
pop
mov
and
mov
lret
outsb
mov
dec
mov
adc
jnp
stc
ret
and
lahf
pop
mov
and
popf
aad
xchg
aam
outsb
cli
pop
xchg
xor
aad
repz
sbb
test
int
std
outsl
jnp
and
sub
ja
pop
es
inc
cmc
js
cmc
cwtl
lcall
das
or
cmpsb
pminsw
ret
lret
cmp
xchg
leave
xor
xor
adc
push
mov
xchg
add
adc
dec
ficoms
insl
dec
rorb
sbbl
sub
sub
xchg
enter
mov
jne
pop
psubq
xchg
or
xlat
int3
dec
lcall
fisttps
mov
or
orl
loope
xchg
insl
pop
inc
and
xor
jecxz
clc
ss
inc
out
lcall
cli
es
ret
pop
cmp
sub
out
jl
add
icebp
mov
pop
sub
je
add
int3
adc
insb
cli
lods
loope
cld
fcmove
xchg
addr16
test
shll
in
xor
imul
jne
dec
loopne
sub
or
jg
or
sub
push
jl
mov
cmpsb
adcb
pop
xor
clc
or
imul
nop
jle
clc
stos
leave
mov
dec
and
ja
scas
repz
xlat
negb
fwait
out
fisttps
mov
xchg
clc
loope
dec
fbstp
push
xchg
mov
dec
lods
cmp
rcrl
cli
mov
pop
nop
iret
jl
or
push
inc
xor
jno
jl
pop
pop
inc
sub
xchg
imul
xchg
movsb
pop
mov
jmp
xchg
adc
dec
mov
mov
mov
es
add
int
ss
push
cltd
shr
mov
and
mov
cwtl
cmp
repnz
dec
push
mov
cmp
jo
xchg
xorl
repz
aas
push
loopne
arpl
andl
addr16
mov
push
sbb
orb
fistl
fdivl
out
mov
push
shrl
ds
jo
pop
test
fsubp
sbb
sub
ja
cmp
hlt
jecxz
sub
addb
sub
mov
mov
incl
jno
jl
jbe
jb
in
cmp
test
imul
lret
outsb
xchg
into
push
in
es
mov
lahf
arpl
push
fdivrs
add
dec
mov
mov
cmpsb
in
jnp
mov
shl
testl
fsubrl
pop
push
fs
sub
pop
jb
lods
add
lcall
mov
popf
inc
jle
push
aaa
mov
int3
loopne
xlat
jge
mov
sbbl
shl
sbb
jmp
mov
fists
inc
pushf
dec
mov
inc
in
movsl
fnsave
add
test
fadds
sub
imulb
xor
inc
cmp
test
loop
in
and
inc
sbb
xchg
jb
pop
sub
fcoms
xor
xchg
push
jne
stos
dec
dec
sbb
cmp
sbb
dec
dec
adc
adc
mov
inc
sub
js
mov
push
push
stos
jns
fcomps
push
add
sub
dec
ret
je
fisubs
dec
loope
movsl
addr16
in
jo
pop
sub
and
aam
test
fpatan
out
fwait
imul
mov
xorl
xor
mov
repnz
das
mov
or
pusha
cmp
lock
inc
sub
movsl
sbb
pop
jns
push
arpl
mov
fisttpll
mov
mov
mov
fcmove
adc
inc
sub
int
repnz
cmp
jbe
pop
ds
cmpsl
or
icebp
in
sub
mov
sahf
shrb
scas
shl
xchg
mov
orb
dec
mov
push
xor
das
mov
clc
mov
dec
push
fs
pop
data16
lahf
subb
sti
and
sub
test
mov
das
test
jo
cli
adc
cmp
lahf
ficompl
dec
gs
fnsave
push
stos
loop
mov
imul
and
aaa
and
shr
dec
aam
mov
mov
mov
repz
mov
test
mov
nop
aam
mov
shrb
add
and
loope
cwtl
xchg
inc
test
adc
jae
xor
cwtl
and
shrl
inc
daa
push
xchg
and
loope
shrb
pushf
inc
aad
add
stos
mov
inc
inc
sub
mov
cmpsb
push
fsts
loopne
int
cmp
mov
lock
stos
xchg
mov
dec
push
mov
xor
xor
cmpsl
adc
cwtl
insl
jb
add
xchg
mov
sub
dec
shrl
stos
popa
xchg
jmp
and
fcoms
dec
daa
mov
mov
or
lods
mov
imul
rol
loop
cmc
mov
lods
fcompl
fistpll
stos
inc
mov
repz
jb
and
mov
push
out
push
cmp
mov
test
loope
fcmovne
ja
jle
sarb
ljmp
xchg
push
xchg
scas
loope
repz
inc
sub
aad
arpl
ljmp
jle
shlb
sti
jmp
or
bound
mov
xor
loop
lret
pop
pop
imul
loopne
in
mov
cmp
sbb
xchg
outsb
imul
mov
sti
jbe
leave
ss
lahf
jmp
xor
rorl
sbb
mov
push
push
xchg
cmp
stc
mov
in
inc
jne
bound
xor
shlb
pop
in
add
mov
mov
sub
js
mov
fdivrs
hlt
pop
inc
scas
aaa
sub
out
xor
movsb
cli
and
xchg
mov
out
dec
mov
ja
adc
push
inc
cmp
jmp
stos
pop
and
push
das
add
stc
mov
adc
leave
dec
in
or
add
addr16
dec
ljmp
push
jae
mov
inc
sub
xchg
mov
push
pusha
bound
out
pop
push
inc
jae
hlt
or
mov
mov
push
fs
nop
xchg
cli
xchg
mov
pop
push
dec
mov
add
xor
lds
mov
cltd
std
xor
cmp
cli
pop
das
xchg
mov
movsb
adc
int3
mov
nop
mov
imul
stc
fdivs
xchg
cmp
in
shll
inc
sbb
dec
mov
or
lds
sahf
les
adc
mov
test
test
mov
cwtl
outsb
mov
lods
inc
outsl
xchg
add
data16
test
clc
loope
xor
stos
pop
pop
int
out
jg
adc
xor
sub
jmp
enter
rcl
adc
nop
aas
push
sbb
pop
int3
nop
mov
dec
in
inc
pop
addl
dec
fucompp
mov
jbe
decb
cmp
xchg
pushf
adc
push
addl
mov
push
push
idiv
outsl
mov
add
jmp
jbe
mov
roll
cmp
call
jnp
shr
xor
pushf
sbb
sbb
cmc
xor
and
or
jp
jmp
testl
pop
mov
sub
daa
ret
dec
push
adc
jge
and
adc
dec
daa
jae
xchg
inc
jnp
in
sub
inc
ja
aaa
out
and
jae
andl
and
enter
mov
hlt
mov
fisubrs
jg
pop
fcomip
and
out
mov
jle
divb
xor
clc
pop
xor
fwait
popf
sbb
cmc
cs
lock
dec
outsb
dec
test
cwtl
or
jns
cmpsl
ss
inc
jmp
jae
sub
lahf
fsubp
sbb
mov
sbb
lods
inc
insb
xchg
fwait
mov
mov
push
shrl
fimull
movsl
dec
cwtl
cwtl
cmpsb
jmp
jns
addr16
inc
push
fsts
repnz
inc
daa
mov
shlb
or
rolb
sbb
add
mov
sarb
out
ret
loop
test
dec
xor
insb
pop
xchg
xchg
sub
ds
xchg
push
test
fdivrs
into
aad
std
push
mov
adc
into
xchg
movsb
jnp,pn
rcrb
sbbl
jb
call
clc
mov
sbb
cmc
imul
fcmovb
js
xor
push
js
sbb
les
mov
loop
pop
add
dec
loop
or
and
fwait
sub
mov
jge
adc
stos
sbb
dec
adc
and
inc
push
fldt
adc
std
and
and
pop
sbb
rol
repz
out
test
rorb
mov
or
jl
sbb
scas
fs
movsl
movsb
fucom
inc
arpl
fnstenv
push
xchg
cli
and
in
and
jl
pop
movsl
ret
lock
inc
jecxz
cmp
rcrl
dec
lea
xchg
outsb
sbb
sub
pop
movsl
scas
jno,pt
pop
jle
or
enter
cmp
push
imul
fs
icebp
sbb
lock
adc
rcrb
or
dec
inc
icebp
pop
mov
scas
lods
jp
repnz
pop
daa
cmp
lea
cs
jecxz
lret
repnz
loopne
int3
jmp
and
daa
jne
xchg
or
ljmp
mov
xchg
pop
xor
mov
adc
xchg
cmp
aad
jno
sbb
sub
mov
repz
cmp
pop
mov
pop
int3
sbb
jb
rcr
jae
push
ds
sti
fistpll
cmp
jb
xor
xor
pusha
dec
out
jg
int3
xor
jae
decb
lcall
repnz
into
jge
jle
mov
mov
incl
rcrw
xchg
bound
or
fsubrl
rolb
int
inc
stos
dec
mov
es
dec
clc
daa
and
push
and
iret
outsb
add
and
test
mov
dec
push
lahf
out
or
sbbb
mov
in
lods
cltd
xchg
dec
mov
jp
scas
loop
add
out
test
cs
loopne
cs
mov
xor
xchg
pusha
pop
scas
adc
pop
mov
adc
js
push
sbb
jmp
sbb
in
adc
dec
cmp
pop
xchg
loope
jecxz
stc
hlt
inc
in
adc
push
scas
imul
fs
test
sti
ficoml
out
or
in
rcll
jg
or
and
adc
adc
dec
das
jns
ficoml
mov
cmp
xchg
adc
subb
outsl
sub
mov
in
pop
sahf
ds
movsb
dec
das
mov
xchg
jle
mov
push
pop
sub
add
and
push
xchg
add
dec
shlb
inc
aam
mov
mov
js
adc
inc
xor
xchg
xchg
cwtl
ret
addr16
lock
imul
aad
icebp
pop
mov
bt
in
push
add
cwtl
ror
dec
mov
sub
adc
mov
rcr
mov
xor
ret
cmc
jb
xor
sbb
mov
scas
cld
push
mov
adc
out
out
shrb
pop
cmpsb
jae
ds
push
dec
jg
xchg
sbb
mov
xchg
sbb
lret
lret
sub
test
jmp
pop
iret
xor
popf
sub
jg
xchg
sbb
push
mov
inc
les
mov
lds
out
ret
jp
cltd
insb
daa
fldl
into
outsl
or
sarb
test
fbld
dec
sub
push
repz
adc
clc
fists
insl
dec
lahf
outsl
lods
insl
xchg
in
mov
and
lds
ja
xchg
or
mov
outsl
rclb
imul
ds
cmc
shrb
xchg
icebp
jno
push
xor
lahf
xor
outsl
hlt
dec
iret
fists
scas
rorb
fistpll
scas
cltd
mov
loope
push
mov
add
push
fbstp
sub
movsb
xchg
adc
subl
jmp
aas
leave
pop
push
push
imul
mov
sub
hlt
cs
pop
mov
lfs
icebp
xor
cs
mov
inc
daa
mov
lret
jge
cmp
adc
cmc
mov
xchg
repnz
divb
idiv
sahf
out
and
testl
mov
fistl
pop
mov
movsb
mov
push
fucompp
xor
push
iret
mov
pop
sub
jle
mov
mov
mov
adc
add
and
icebp
cmp
pop
mov
mov
pop
xchg
xor
fidivs
xchg
imul
push
pop
je
sbb
out
mov
push
inc
cs
sub
jnp
je
das
pop
lods
pop
addr16
fstl
dec
imul
rcrb
lds
repnz
push
lea
lods
sub
jnp
loopne
mov
bound
std
in
add
jmp
stos
cmp
push
stos
mov
or
sbb
rclb
adc
push
mov
sbb
outsb
adc
mov
jne
push
sub
mov
ror
pop
or
sub
push
ljmp
sub
cmp
scas
add
aas
js
ret
ds
xchg
mov
je
cmpsl
repz
aam
imul
cmp
pop
mov
inc
fsubl
ljmp
add
cmp
leave
mov
mov
stc
mov
inc
subb
enter
filds
pushf
pop
jnp
push
add
mov
bound
pop
dec
mov
ss
or
and
icebp
lods
jg
adc
adc
mov
push
dec
or
mov
or
sbb
push
clc
xor
getsec
sbb
insb
jle
in
sub
lods
mov
adc
addr16
call
mov
popf
aas
or
cli
sub
into
lods
dec
std
cmp
xor
jp
xchg
sub
or
mov
ret
adc
testb
movsl
jp
pop
cmc
iret
jp
xchg
pmuludq
mov
loop
inc
mov
in
cmp
push
addb
pop
push
and
push
ljmp
data16
test
aad
cmp
jae
cmp
xchg
int
fldln2
cwtl
push
pushf
outsl
cli
sub
cmp
aam
call
lds
add
lods
test
pop
int
pop
or
and
cltd
ds
insb
loope
ds
adc
cld
adc
xor
loopne
lret
jns
pop
mov
inc
scas
add
jle
int3
sbb
jae
mov
cmp
scas
jmpw
int
ret
sub
adc
sbb
nop
pop
aas
rclb
data16
subb
je
js
adc
sbb
arpl
xchg
sub
inc
mov
dec
add
mov
pop
xchg
dec
and
cltd
pop
jbe
adc
push
jg
mov
movsl
add
sahf
in
xor
and
js
and
pop
sub
jle
sbb
lahf
xchg
or
imul
sub
rcll
dec
int3
shl
arpl
fistl
imul
sub
popf
es
push
push
mov
sub
cmp
push
xor
shr
mov
andb
inc
dec
dec
movsl
mov
push
shrl
arpl
arpl
sbb
sub
mov
repnz
mov
nop
repnz
sti
rcl
aaa
stos
add
outsl
aad
lods
add
in
test
xor
sub
ljmp
lock
aam
dec
testb
inc
jmp
leave
push
dec
mov
pop
mov
pop
jne
push
add
sbb
int3
hlt
jle
sub
sub
fidivl
popa
jns
lahf
mov
pop
fdiv
mov
inc
sub
xchg
ret
mov
sub
xor
adc
and
dec
mov
mov
or
icebp
mov
cmc
mov
jae
imul
je
imul
leave
add
aaa
insl
xor
sub
mov
mov
push
out
jo
call
stos
push
dec
lret
dec
cmp
sbb
mov
js
fcoms
or
loope
cmp
jge
add
test
sarb
push
enter
loop
sbb
out
add
out
jb
add
pop
jo
sub
fcmovne
rolb
jne
popa
sti
jecxz
and
out
pop
mov
dec
loop
cmp
xchg
repnz
dec
mov
and
or
int3
dec
nop
fisttps
push
js
add
xchg
movsb
fisubrs
jge
mov
jnp
enter
push
lods
arpl
cmp
lods
pop
dec
push
add
mov
xchg
mov
lret
test
or
bnd
cwtl
pop
roll
add
push
pop
cmp
push
inc
das
mov
jb
dec
jecxz
or
mov
ret
jcxz
popa
xor
jmp
bound
js
gs
in
fildl
stc
and
arpl
jnp
push
or
push
xchg
mov
mov
sbb
adc
sbb
xor
mov
test
jno
mov
pop
fwait
mov
fcoms
mov
das
repnz
sbb
bound
out
imul
inc
jnp
mov
sbb
lock
and
insb
bound
add
movsl
mov
loopne
sbb
mov
fnstsw
mov
daa
push
fsubrl
andb
jl
cmc
ss
mov
aad
add
cmpl
cmp
and
movsl
aas
scas
daa
mov
fiaddl
dec
jb
dec
xchg
ja
mov
xor
xchg
pop
sbb
outsb
mov
jp
arpl
xor
cld
cmp
subl
loope
mov
jns
out
push
dec
gs
jp
into
test
les
lods
cmc
pop
mov
mov
cltd
pop
jg
aad
mov
jns
lret
cmp
out
mov
out
jbe
mov
cli
or
lds
mov
jb
lahf
jg
push
ficoms
hlt
out
in
add
shl
cltd
push
test
xor
fisttps
arpl
lcall
lcall
fiadds
xor
adc
jmp
mov
scas
arpl
inc
repz
adc
or
sbb
roll
inc
add
dec
push
push
or
ret
xchg
jo
sbbb
insl
xchg
mov
push
jb
jge
mov
cmp
dec
mov
enter
ljmp
pop
iret
loop
xlat
ds
aam
imul
fstl
sbb
inc
add
push
out
dec
or
outsl
adc
das
xor
inc
inc
int3
gs
jbe
test
jnp
fmul
xlat
inc
cli
inc
mov
scas
mov
pusha
jg
mov
fsts
mov
sbb
imul
orl
std
imul
out
lock
out
mov
lock
lock
sbbl
dec
mov
pop
inc
fs
sbb
jecxz
nop
sbb
push
jl
ljmp
inc
xchg
fcoms
adc
push
xor
ss
xchg
outsl
xchg
push
inc
mov
push
xorl
xchg
or
and
dec
push
jbe
jns
leave
ret
test
push
and
and
xor
push
pop
xchg
mov
push
jne
mov
push
add
aad
mov
stc
sub
mov
push
gs
into
cmp
in
neg
sbb
inc
jno
hlt
cmp
movsb
sub
xchg
xor
and
adc
and
xlat
aam
mov
mov
dec
cld
cmc
jmp
in
imul
lds
push
inc
jmp
mov
add
sub
lods
pop
loopne
les
lds
pusha
or
xchg
aas
xchg
fcmovne
aas
add
imul
movsl
cwtl
push
add
leave
testb
adc
lret
and
dec
cmc
sub
mov
lret
sub
loop
inc
fimuls
fisttps
dec
aas
sub
or
testl
jp
jle
gs
adc
mov
cmpsl
ja
cli
dec
jg
sbb
mov
in
loopne
int
fmull
inc
inc
cmp
push
lret
push
xor
popa
jbe
sub
push
mov
pop
push
dec
fisttpl
mov
pop
inc
cltd
sbb
mov
sub
in
push
out
push
push
xchg
shl
push
idivb
mov
aad
lret
ret
sbb
pop
add
push
fbld
mov
imul
xor
xchg
mov
fldl
js
push
jae
pusha
push
cmpsb
and
inc
inc
sbb
jle
mov
adc
dec
fwait
cmc
or
shlb
jae
sub
or
xchg
mov
and
cltd
mov
mov
sub
jge
pop
pop
adc
sub
jg
mov
jg
and
or
in
mov
test
out
cmp
push
or
sub
stos
and
cmp
sbbl
std
mov
add
xor
sub
pop
leave
sbb
call
jp
sbb
ljmp
cld
pop
fwait
cmp
dec
dec
cmp
and
mov
push
dec
fcomps
push
jl
pop
add
pop
cs
aam
inc
arpl
xor
dec
sub
ja
fidivl
push
fsubs
ss
es
rclb
mov
add
cld
push
call
cmp
lds
xor
inc
cmp
xchg
mov
sub
outsl
js
xchg
mov
pop
sbb
bound
pop
pushf
or
enter
and
into
lds
xor
pop
xchg
xchg
std
jo
ret
inc
push
mov
loopne
popf
jle
mov
inc
push
xor
repz
hlt
cwtl
fwait
jmp
lcall
pop
sub
add
jl
adc
mov
punpckhdq
adc
lcall
xchg
lcall
push
cmp
test
data16
mov
sti
dec
cmp
outsl
adc
das
xchg
subl
and
lods
push
mov
bound
test
mov
adc
inc
lock
test
outsl
cmp
movsb
xorb
aaa
xchg
test
dec
xchg
sub
xor
inc
test
loopne
fwait
test
scas
pop
ss
fisubl
leave
sbb
sub
stc
cmp
add
leave
cltd
fisubrs
mov
lods
push
inc
shr
lods
in
outsb
scas
jle
or
and
ficoml
aaa
adc
push
mov
aaa
jae
lret
lahf
scas
push
pop
fadds
mov
cli
dec
dec
ja
or
and
and
pusha
outsl
fdivl
or
daa
push
ficoml
dec
cs
popa
dec
xor
out
sbb
push
mov
js
mov
xlat
cld
jle
int
out
cmpsb
mov
lods
mov
cmc
xorl
out
sar
cld
imul
repz
movsb
fadds
popf
out
lods
clc
mov
rolb
jl
jge
mov
xchg
jne
mov
out
mov
xchg
or
shll
add
ljmp
adc
test
jl
pop
in
mov
jmp
pusha
sub
test
insl
mov
divb
mov
push
sub
mov
inc
or
popf
cmp
fiaddl
insb
dec
cmp
pop
mov
mov
scas
out
add
bnd
out
movsl
sub
adc
jb
or
aas
or
xchg
hlt
out
popa
out
pop
lcall
stos
jle
loope
leave
cmp
push
jne
icebp
arpl
xchg
mov
xchg
flds
stos
adc
inc
inc
pop
rcrb
shrl
mov
scas
repnz
sub
cs
mov
popa
add
add
cmc
fucomip
xchg
inc
pusha
loop
je
je
aad
pushf
repz
es
inc
fnstsw
lcall
sub
je
push
jnp
call
dec
jno
test
mov
rorb
jmp
insl
gs
mov
jo
stos
mov
sbb
in
xchg
leave
ss
pop
stc
popa
sub
in
test
xchg
jge
pop
rcll
test
add
int3
dec
push
test
add
je
mov
loop
cmc
xchg
jae
cmpsb
lcall
inc
sub
xchg
inc
fyl2xp1
movsb
les
xchg
push
stc
nop
push
jne
popa
scas
push
inc
cmp
into
in
cmpsb
push
mov
inc
lea
sahf
incb
xor
and
iret
fistpll
xchg
cmp
cmovns
cmc
test
cltd
dec
cmp
outsl
xorl
add
lret
insb
mov
aas
pop
mov
fstpt
xor
xor
jbe
fstps
adc
scas
jp
cli
add
or
clc
adc
fucom
incb
xchg
sbb
pop
inc
cmpsl
nop
push
das
pop
mov
xchg
push
lea
stos
ss
jb
xor
movsl
mov
aad
int
xchg
nop
jae
ljmp
add
jp
ja
xlat
loop
inc
dec
and
repnz
cmp
jecxz
xchg
jmp
jnp
ja
mov
mov
fidivl
insb
andl
adc
and
push
pop
mov
sub
push
mov
movsl
xlat
push
xor
popa
sub
mov
push
jp
mov
dec
pop
call
mov
mov
sbb
jns
mov
ljmp
cltd
xchg
or
shl
jae
inc
es
fnstsw
inc
fnstenv
push
pushf
or
mov
fwait
ljmp
adc
cmc
rcll
loopne
dec
cmp
lds
sar
mov
and
xchg
cwtl
mov
xlat
xlat
cwtl
pop
das
rclb
je
aas
fidivrl
shlb
rorb
mov
sbb
pop
cmpsl
sbb
aas
push
xchg
jbe
xchg
or
cwtl
jns
pop
stos
ret
xchg
not
adc
mov
pop
jp
adc
mov
daa
aam
jle
pop
sub
arpl
pop
inc
jae
mull
enter
addb
dec
and
xor
cs
out
insb
mov
lea
and
mov
push
sahf
xor
xchg
fistpll
mov
ret
sbb
arpl
mov
or
sahf
les
and
clc
mov
dec
cmp
dec
rcrl
mov
xor
scas
xchg
andl
andl
sbb
test
xchg
xor
cmp
sbb
repnz
imulb
movsl
mov
fwait
push
decb
sbb
cmp
rol
cmpsb
mov
cmp
subb
sub
fldt
jmp
ret
cli
sbb
jb
pushf
jmp
orl
sub
cmc
clc
dec
push
std
and
shll
movsl
int
sbbl
or
mov
mulps
and
adc
mov
xor
nop
inc
and
std
std
inc
cmp
mov
jge
jmp
xor
aaa
dec
int
ret
scas
push
mov
loope
dec
sbb
mov
jbe
fwait
sub
daa
popa
stos
mov
cli
scas
cmp
mov
loopne
sahf
out
mov
cltd
lret
lahf
fcomps
mov
ds
dec
lods
test
mov
mov
cmpsl
jle
lcall
add
lea
hlt
sbb
sub
pop
nop
jno
fisubl
push
or
scas
sbb
fbstp
mov
push
ds
lcall
ja
in
outsl
je
in
in
push
dec
test
lods
sti
jmp
adc
pop
dec
test
xchg
ss
lock
lods
sahf
fwait
test
testl
inc
mov
cmp
xor
test
push
push
shrb
or
insl
mov
jnp
int3
stos
in
dec
inc
push
mov
push
imul
xchg
jo
fnstenv
addr16
es
inc
jne
jno
cmp
bound
leave
push
sbb
out
jecxz
xchg
sub
or
inc
lret
mov
hlt
lods
cmp
cmp
shll
jmp
lds
lock
xor
jle
xlat
es
imul
jg
mov
daa
ret
inc
icebp
xchg
rcr
sbb
inc
pop
je
mov
jp
jmp
lods
pop
inc
pop
repz
insb
push
divl
push
cmp
int3
leave
sub
dec
inc
les
sbb
jg
cmp
cmp
cmp
xchg
ljmp
xor
shl
xor
pop
mov
mov
lret
push
sub
mov
nop
subb
imul
pop
and
or
repz
dec
mov
xor
jecxz
mov
sbbl
push
shl
adc
cli
adc
jne
fists
fidivrs
jae
adc
jns,pn
cmovo
sub
out
inc
inc
std
out
or
sbb
sub
push
xchg
movnti
jmp
mov
and
gs
iret
pop
mov
push
stc
test
jl
push
inc
lea
lcall
pop
pusha
adc
jne
jnp
pop
enter
daa
xlat
xor
push
addr16
andps
aaa
stos
pushf
and
push
mov
add
jae
mov
push
orl
sbb
jecxz
dec
mov
rclb
mov
inc
jle
repnz
jecxz
cltd
dec
repz
dec
push
out
je
mov
pop
test
inc
inc
in
div
mov
sbb
scas
jae
hlt
dec
pop
dec
aaa
sub
es
jg
or
mov
jmp
jge
pushf
pop
mov
ljmp
out
out
jl
xor
mov
bound
xchg
nop
in
add
iret
jp
and
negb
or
mov
lea
sbbb
imul
cwtl
ja
les
scas
scas
sbb
add
pop
stos
stos
daa
das
jge
sub
add
jl
fbld
inc
pusha
lret
shr
rclb
pop
cmp
jb
push
mov
sub
outsb
xor
nop
es
inc
dec
ljmp
je
jns
out
enter
fdiv
add
sub
adc
std
jg
fucom
pop
shll
iret
inc
jle
stos
out
xchg
call
push
addb
xchg
js
and
dec
xor
jne,pn
mov
mov
nop
stos
fdivrs
or
popa
loopne
es
dec
subl
push
or
arpl
scas
inc
addr16
in
fdivrl
arpl
loopne
adc
push
mov
cmp
jg
daa
ss
out
jbe
pop
xor
stos
or
cmp
ret
je
fadds
hlt
scas
pop
and
adc
sbb
test
push
adc
push
adcl
lods
aaa
xor
add
lds
fistpll
jne
dec
jg
es
mov
xchg
cmp
add
dec
mov
mov
test
dec
icebp
dec
push
ljmp
imul
mov
fsub
mov
in
iret
add
xor
or
inc
js
jb
test
lcall
cld
xchg
xchg
inc
mov
cmp
in
mov
inc
xchg
not
cmp
dec
shll
pop
aad
mov
je
mov
inc
shlb
adc
mov
and
test
loopne
adc
sbb
push
outsl
dec
into
in
into
inc
push
add
mov
lods
aaa
or
in
mov
inc
lock
test
pop
ds
push
mov
out
mov
into
mov
repz
aas
push
xchg
sbb
andb
mov
mov
adc
inc
pop
inc
add
dec
negl
ret
push
std
xchg
aam
loope
inc
cmpsb
ss
shlb
and
or
and
notl
pushf
cmp
data16
dec
inc
push
and
stc
inc
loope
dec
mov
pushf
and
hlt
dec
rcrl
test
cmpsb
mov
das
in
pop
push
xchg
xchg
sub
cmp
jmp
popf
rcrb
fsubrp
or
rcrl
dec
pop
push
stc
xchg
mov
and
xchg
cltd
enter
pop
lods
loopne
scas
and
imul
out
inc
divl
jns
lahf
fcoms
jmp
cmp
inc
incl
aad
push
inc
bound
loopne
icebp
inc
xor
inc
aam
dec
mov
das
adcl
sub
sub
in
lcall
vmread
ja
iret
inc
int
push
test
cmc
pop
sub
fchs
mov
in
imul
loopne
jno
cmpsb
sbb
out
cmp
inc
push
pop
or
test
lahf
cmp
mov
nop
rorb
pop
xor
popa
mov
adc
mov
cwtl
clc
dec
sbb
cli
cmp
jmp
add
cmp
inc
mov
jmp
in
cs
hlt
icebp
jae
inc
push
inc
in
xor
arpl
lcall
and
sbb
add
sahf
mov
ja
fnstsw
sbb
xchg
push
push
pop
sbb
stc
out
fs
call
nop
daa
iret
adc
imul
popf
out
mov
and
jnp
imul
std
sub
lret
mov
jp
add
mov
decb
popa
subb
push
push
inc
gs
and
push
sub
push
push
sahf
or
push
inc
add
sahf
add
pop
pop
or
adc
sbbb
fwait
in
mov
out
and
jae
arpl
jns
and
jne
dec
mov
lret
adc
ret
sbb
cmpsb
pushf
jl
fndisi(8087
push
cwtl
pop
mov
pop
pop
jb
scas
rolb
sti
mov
and
cmp
sbb
fdivrs
mov
pop
mov
add
cmp
xor
mov
test
test
fstl
inc
out
sbbl
sahf
mov
enter
pop
push
nop
dec
fidivrs
sbb
add
pop
lds
inc
mov
xor
lret
daa
mov
cmp
xchg
aaa
cs
jge
push
loopne
adc
adc
gs
mov
jmp
cmp
cmp
jg
xchg
int
jp
cld
std
mov
dec
dec
jo
out
in
cltd
lock
mov
jmp
pop
aas
mov
or
movsl
cmp
inc
xchg
push
fcomps
and
lret
jge
pop
popf
fstps
sbb
mov
stos
inc
mov
popf
test
sbb
push
xor
gs
dec
scas
addr16
push
inc
bound
sub
repnz
ret
cmc
mov
divl
xor
daa
vpunpckhbw
cli
repnz
sahf
andl
mov
pop
sahf
daa
in
in
mov
inc
push
test
cmpsl
add
pop
insl
ror
outsb
or
fcomi
xchg
or
rcl
repz
adc
out
sbb
adc
push
fsubr
mov
lods
lret
sbb
mov
and
scas
les
mov
cltd
and
arpl
inc
push
jb
xor
int
lock
adc
inc
test
fwait
shlb
mov
xchg
rolb
outsl
adcb
popa
pop
decl
and
cld
andl
gs
cmp
sub
mov
enter
lcall
insl
xlat
add
fisubrs
or
pop
jno
mov
cmp
cmp
shlb
mov
ds
inc
rcll
icebp
addr16
mov
xor
jge
repz
divb
adc
push
sbb
pop
fistpll
js
dec
imul
je
lds
dec
adc
pop
les
xlat
jbe
ljmp
adc
sbb
repz
ficoms
fisubrl
add
pop
xchg
and
dec
xchg
lods
sub
add
sub
mov
lret
jb
jbe
or
ret
ret
lret
cmp
add
pop
sub
icebp
xchg
xchg
pop
push
insl
add
inc
cmp
jo
frstor
push
fistpl
adc
add
mov
out
pop
mov
mov
sarl
and
mov
mov
mov
cmp
xchg
mov
daa
push
scas
hlt
fwait
and
adc
cli
roll
mov
test
cmc
xchg
loopne
scas
or
lods
test
inc
cmc
and
lock
ret
leave
shll
pop
dec
push
push
push
repnz
inc
mov
movsb
or
cmp
or
test
mov
and
sub
jle
jge
sub
inc
mov
pop
pop
out
mov
icebp
xchg
sahf
jbe
mov
test
xchg
sbb
mov
pop
push
aad
push
inc
or
adcl
jne
push
or
mov
sub
sarb
sti
in
inc
leave
je
lret
xor
or
sub
push
sub
push
int
jecxz
jbe
push
movsl
ja
adc
xchg
iret
pop
aaa
inc
and
cmc
pop
psllq
sahf
mov
out
and
mov
inc
dec
xchg
jl
pop
out
das
sahf
mov
mov
add
lahf
pop
mov
inc
les
cmpsb
int
test
in
adc
lods
dec
in
cmp
xor
xorl
lods
aad
mov
inc
adc
adc
add
ja
je
dec
fstpl
inc
jo
dec
dec
data16
sub
ret
out
dec
dec
mov
adc
dec
mov
sbbl
or
or
lcall
or
mov
ret
ja
lcall
outsb
pop
pusha
xlat
iret
add
sub
sub
and
xor
je
push
mov
sub
sbb
add
xchg
fmul
adc
cwtl
int
das
adc
lret
pusha
pop
jns
push
pop
and
push
into
aas
loopne
mov
jp
shrb
xor
sub
dec
add
push
aas
sub
push
xor
add
lcall
test
leave
iret
sbb
xchg
jp
sub
xchg
in
data16
loope
push
daa
push
mov
int
or
fs
nop
into
dec
dec
jno
bound
clc
xorb
adc
sarl
and
cmp
test
and
push
mov
inc
push
fistpl
ss
stos
mov
dec
loope
das
push
kmovb
add
int
mov
pop
mov
test
mov
rep
mov
rclb
sbb
cld
or
jbe
mov
imul
adc
push
mov
adc
stos
xchg
int3
out
rorl
imul
pusha
jae
aam
stos
shl
xchg
fsubrl
clc
sub
mov
dec
xchg
fwait
sbbl
cltd
pop
pop
pop
inc
inc
aaa
cmc
xchg
push
data16
popf
pusha
mov
pushf
outsl
mov
shrl
sbb
push
adc
in
dec
test
data16
addr16
addr16
outsb
mov
lret
gs
jb
jae
shrl
mov
je
std
fnstenv
loope
jns
ffreep
andl
fs
stos
popf
add
dec
xor
push
jle
xchg
out
lcall
mov
mov
and
lcallw
loopne
sub
movsb
clc
push
and
mov
or
rcl
in
add
je
pop
jb
adc
mov
push
and
and
arpl
fldlg2
or
insb
fwait
jno
rcll
bound
roll
loopne
fldt
cmp
outsl
sahf
or
shlb
std
pushl
pop
dec
sbb
pop
sti
sbb
popf
jo
movsb
mov
push
jmp
lret
dec
mov
fbstp
mov
leave
out
or
and
xchg
xchg
fucomip
sbb
inc
pop
pop
stos
inc
pop
out
sub
mov
and
cmp
fildll
lret
sub
lods
add
xchg
cmp
xor
imul
adc
lahf
push
pushf
mov
out
mov
mov
mov
divb
sub
sbb
add
outsl
mov
xchg
and
dec
mov
dec
mov
rcrl
jl
rcrb
sbb
rcll
mov
cmpl
dec
lsl
add
inc
imull
pop
jle
push
inc
xchg
mov
out
leave
dec
pop
lahf
call
es
sbb
inc
bound
dec
je
out
mov
cmpsb
or
out
iret
lock
dec
or
cmp
or
mov
inc
push
outsl
xchg
xlat
mov
stos
push
lock
sbb
out
test
cmp
nopl
rcr
out
lret
imull
ficoml
je
mov
inc
aad
sahf
mov
cwtl
cmc
inc
xor
xor
insb
ret
addr16
sbb
ss
out
ljmp
and
xchg
aam
es
test
cmpps
push
adc
xor
xchg
insl
in
mov
adc
cmp
add
mov
andb
sub
and
jno
mov
cmp
stos
les
or
repnz
rolb
lock
jae
imul
rorl
push
xor
icebp
push
sbb
aam
sub
push
std
call
push
cltd
xchg
scas
xchg
or
test
pushf
loopne
iret
addl
iret
pop
fbstp
xor
aaa
xorl
adc
repz
mov
popf
dec
pushf
adc
or
pop
movsb
popa
pusha
inc
xor
lods
push
xorl
mov
fstpl
jp
mov
std
ret
stos
xchg
xor
dec
mov
pmulhuw
inc
fdivrl
push
xor
or
shlb
ja
jae
pop
fbld
mov
cmp
lds
pop
lahf
mov
arpl
out
xchg
insl
shll
les
mov
out
aaa
es
jo
mov
imul
lods
fcmovbe
push
mov
pop
insl
lahf
std
jp
xchg
icebp
dec
ja
clc
clc
sbb
xor
lods
sub
call
pop
mov
test
fildll
xlat
sub
mov
sub
xlat
lcall
or
inc
mov
sbb
xchg
insb
mov
sbb
lds
inc
pushf
idivl
lds
inc
leave
test
jl
pop
test
fwait
and
arpl
xchg
pop
sbb
mov
jo
gs
rcrb
mov
cmp
mov
pop
add
ljmp
roll
loope
xor
and
jne
hlt
mov
repz
loop
mov
int3
push
rorb
pop
push
or
subl
dec
test
repz
pop
in
cmc
lods
xlat
mov
pop
fldenv
xor
ffreep
out
lret
es
sbb
pop
rcrl
fwait
es
jnp
pusha
jecxz
test
push
jnp
sbb
adc
stc
inc
or
fwait
mov
adc
lcall
arpl
adc
xchg
sbb
and
movsb
fdivrl
push
jge
xchg
icebp
xor
pop
out
clc
mov
add
stos
inc
pop
loop
xchg
push
arpl
repz
jg
sub
test
and
aaa
mov
mov
aad
daa
sub
std
ljmp
adc
repz
loope
push
test
leave
mov
sub
cltd
and
xchg
mov
xchg
inc
dec
sbb
test
lret
cmp
and
pop
je
xchg
mov
test
cmp
inc
jne
icebp
jnp
mov
lods
xchg
xchg
adc
test
pop
xor
aaa
adc
push
out
aas
icebp
lock
push
jmp
dec
push
xchg
dec
icebp
lcall
cmp
arpl
xor
add
sbb
mov
inc
pop
jne
push
aaa
arpl
shlb
dec
cmp
xchg
arpl
push
jmp
add
xchg
aas
lahf
aad
inc
sbb
out
sub
or
xor
stc
push
pop
sbb
int
iret
leave
stc
sub
dec
lcall
pop
bound
shrb
popa
sub
mov
shll
ja
inc
xor
fs
xor
movsb
sbbl
add
xor
xor
enter
xor
rcll
nop
dec
gs
mov
in
sbb
pop
rcll
ja
mov
addr16
push
test
xorb
lcall
push
pop
ss
jo
dec
arpl
push
aas
lret
cwtl
out
ljmp
call
sahf
xchg
mov
xor
mov
daa
mov
in
in
lahf
cmc
rep
mov
lods
or
fldl
pop
inc
jae
das
sahf
popf
cmp
inc
dec
das
scas
or
xor
js
sbb
popf
and
test
and
or
xchg
mov
mov
clc
icebp
push
add
mov
push
adc
bound
sbb
mov
jmp
fs
sub
jmp
cmc
or
pop
popa
jne
jne
fisubrs
inc
xchg
inc
add
imul
cs
sub
pop
add
push
jmp
ret
hlt
pop
lcall
loopne
in
ficoml
jl
outsb
rorl
in
xchg
jmp
push
sti
sbb
xor
push
pop
addr16
pusha
cltd
mov
mov
fstl
dec
ja
ja
or
push
mov
mov
dec
xchg
es
sub
in
push
stos
and
push
mov
sub
inc
inc
xchg
repz
je
xchg
push
pop
add
push
dec
hlt
sub
stc
outsl
or
sub
jns
adc
cmp
and
xchg
jae
lcall
std
jnp
clc
enter
lcall
cld
fidivs
or
dec
sbb
movsl
mov
pop
aas
movsb
push
out
xor
mov
test
sti
cmp
in
test
jo
in
stos
insl
addb
mov
sbb
ret
ret
sbb
push
mov
test
mov
jl
mov
xor
dec
mov
es
xchg
cmp
inc
adcl
pop
pop
xor
fimuls
jne
or
or
nop
and
xchg
loop
int
jns
jnp
aaa
pop
jns
jne
testl
adc
jp
ss
movl
bound
mov
jno
fwait
addl
xorl
push
dec
and
dec
xor
test
je
div
push
fadds
hlt
scas
fsts
dec
sub
int
outsl
nop
dec
pop
xchg
sarl
in
xor
inc
out
push
gs
movsl
jge
xchg
add
ficoml
mov
dec
roll
fcos
sbb
push
cmp
inc
push
jmp
xor
pop
sbb
fldl
add
inc
enter
xchg
arpl
sub
shlb
push
pop
cmpsb
popf
push
inc
xchg
pop
out
aas
gs
sub
insl
stos
js
sbb
mov
stos
mov
fucomip
push
mov
es
or
ljmp
or
mov
or
je
shrl
mov
js
fldenv
xor
lret
in
adc
or
push
cmp
adc
loop
pop
dec
js
cld
mov
adcb
dec
cmp
jp
or
jne
sahf
xchg
lock
mov
jg
fdivl
fisubl
sub
adc
arpl
xchg
sbb
in
imul
mov
sub
daa
push
and
out
sbb
xchg
incb
es
mov
inc
daa
dec
pop
inc
pop
push
sti
and
notb
dec
fwait
push
push
push
push
into
data16
fsubs
xchg
xchg
pop
mov
test
sbb
and
sub
std
out
ss
adc
movsb
rep
mov
sbb
in
aaa
mov
les
push
lods
sub
ret
insl
arpl
sbb
imul
xchg
push
jp
xchg
add
or
into
dec
xchg
cmc
cmpsl
adc
gs
aam
add
and
mov
pop
mov
or
loope
arpl
mov
movl
add
pop
lock
xor
clc
add
cmpb
js
popa
xchg
test
xor
or
and
jns
push
ljmp
test
movsl
pushl
in
test
mov
dec
cmc
jnp
les
imul
pop
inc
stc
dec
popf
mov
icebp
lock
stc
popf
orl
fbld
jle
test
nop
test
xor
mov
loop
out
xchg
xor
inc
jbe
in
gs
inc
inc
or
or
movsb
push
movl
test
add
insb
inc
mov
lret
in
pushf
mov
mov
dec
cmp
cmpsl
insl
cmc
fs
cltd
insb
fisubrl
scas
or
loop
orl
int
xor
fidivrl
push
scas
mov
bound
leave
xchg
push
das
cmpsl
mov
fdivrl
jb
mov
ficoml
out
jne
lcall
push
pop
nop
test
mov
jg
js
mov
add
and
sbb
pop
lock
pusha
xlat
sar
inc
push
das
adc
push
add
movsl
mov
dec
inc
in
jp
inc
add
lea
sub
dec
in
and
cmp
and
in
insl
cs
inc
shlb
std
push
lds
cltd
imul
jle
iret
fcompl
xchg
sbb
push
sub
xchg
popa
cs
xchg
mov
xchg
ljmp
add
aad
inc
gs
mov
ds
add
gs
ja
ss
lock
nopl
repz
dec
mov
orb
rsm
sbb
push
cmc
cmp
xor
sbb
dec
lret
ja
cmp
cmpsl
cs
xor
rcrl
add
and
daa
mov
aam
add
jecxz
cmpsl
cli
sub
cmpsb
or
test
mov
fdivrp
mov
sarl
cwtl
dec
xchg
lahf
movsl
mov
fs
cwtl
add
les
fs
loop
frstor
xchg
pop
jbe
test
rorb
inc
arpl
iret
mov
mov
and
flds
and
jmp
int3
and
pop
cld
cmc
mov
pusha
cmp
sbb
fcmovnu
push
pop
rorb
xchg
xchg
ficoms
ljmp
idivb
mov
mov
push
dec
cmp
jl
movsb
enter
imul
fmul
pop
push
shl
add
push
lods
xor
std
jl
mov
sbbl
loop
dec
inc
cmp
mov
dec
mov
cmp
add
sahf
mov
jmp
mov
scas
push
push
in
aad
cmp
cltd
and
adc
push
shlb
jecxz
fwait
xlat
lahf
sbb
jecxz
int3
rep
stos
pop
popf
jp
orl
adc
push
lcall
and
pusha
call
push
lret
xchg
pop
dec
jl
sbb
lcall
movsb
mov
sbb
or
push
pusha
add
sarl
lcall
call
nop
icebp
cmp
xor
ds
mov
push
jle
inc
xchg
clc
dec
popf
mov
jl
movsl
stc
push
ljmp
xorb
push
dec
ss
mov
dec
pop
les
stos
jge
in
push
pop
add
scas
pop
cmpsb
dec
xchg
dec
mov
scas
fldt
imul
sub
sub
repz
into
cld
cs
lods
add
ficompl
mov
and
dec
leave
mov
dec
push
xchg
and
cld
int
mov
cld
sbb
mov
cmp
push
cmp
jmp
mov
push
sbb
adc
int3
rcrl
add
mov
add
push
cmp
push
test
mov
mov
cmc
pop
clc
data16
lods
fucomi
sahf
push
js
pop
adc
mov
into
xchg
es
pushf
add
adc
jge
jg
call
sbb
jae
inc
scas
dec
inc
repz
xor
mov
lock
push
push
xor
cmpsl
push
rclb
adc
stos
loop
xlat
mov
add
pop
xor
dec
push
gs
jne
sub
push
jnp
div
lahf
cwtl
jmp
mov
push
psubusb
xor
loop
stos
aaa
xchg
xchg
cmp
repz
repz
sub
popa
adc
test
lahf
pushf
inc
mov
push
mov
inc
arpl
cs
mov
dec
push
cmp
cwtl
and
test
jge
add
xchg
sub
xchg
out
cmpb
iret
jmp
mov
pusha
clc
aam
xchg
popf
pop
mov
ficoms
into
fnstenv
jecxz
adc
jno
jne
inc
xor
mov
int
ss
sbb
inc
mov
repnz
cmp
xor
inc
xchg
and
jo
cld
fs
jbe
cwtl
sahf
jp
out
xchg
int3
loopne
lcall
cmpsb
sub
cwtl
push
dec
loop
pop
mov
cli
imul
or
insl
or
mov
scas
cltd
lds
push
push
jns
call
aaa
mulb
fistl
and
test
mov
cmp
jbe
or
pop
jns
pop
mov
pop
pushf
and
stos
shrb
mov
push
outsb
test
gs
and
pop
fstpt
call
loop
mov
imul
push
insl
mov
gs
lahf
lods
sub
mov
loop
mov
mov
fidivrs
sbb
mov
insb
addr16
lock
push
addr16
mov
xchg
lret
stos
and
in
aaa
sbb
mov
push
mov
sub
js
add
mov
mov
call
dec
or
add
jecxz
push
mov
inc
xor
mov
dec
xchg
call
inc
ja
jno
jo
fsubrs
mov
lret
or
lret
loop
and
lcall
aam
inc
lret
arpl
or
outsb
adc
add
ret
push
dec
inc
push
inc
cmp
xor
iret
jo
in
out
push
clc
setge
or
sub
sbb
jbe
dec
push
je
subl
frstor
add
xchg
or
rcll
jno
cmp
add
mov
sub
andb
push
mov
push
sahf
or
pop
jp
clc
ds
jle
adc
popl
lods
sub
jno
repz
sbb
jbe
or
mov
xchg
jle
pop
xchg
sbb
imul
ljmp
mov
or
pop
lds
movsb
push
out
das
and
adc
xor
popf
rcrl
sub
cmp
push
loope
out
rcrl
push
mov
dec
mov
pop
ror
test
cwtl
ja
inc
lret
das
inc
hlt
sbb
ja
movsb
cmp
or
sahf
xchg
sarb
das
lcall
loopne
sbbb
test
jge
add
jae
shll
js
cmc
xchg
test
sbb
fisttpll
inc
inc
popa
pusha
out
add
dec
fmull
sub
or
and
add
or
imul
mov
pushf
xchg
adc
add
lods
mov
xorl
arpl
mov
push
inc
add
add
adc
pop
test
pop
push
jl
add
xchg
inc
jp
jo
flds
cwtl
add
jge
add
arpl
int
sub
jo
dec
adc
out
xor
add
sub
pop
jo
arpl
iret
jb
xchg
inc
dec
pop
cmp
gs
in
cld
add
inc
insb
xchg
repz
push
das
loopne
cmp
dec
sbb
mul
mov
ret
sub
jns
mov
push
jmp
sbb
imul
cld
adc
cld
test
addr16
xor
insb
cmovp
mov
sub
scas
int
add
in
cmp
sbb
fdivs
negl
mov
outsb
movsl
ds
int
iret
in
bound
mov
popf
pop
das
test
aad
outsl
mov
push
jp
call
push
mov
xchg
mov
stos
or
pop
add
xor
push
push
push
stc
adc
fadds
iret
cmpsb
push
fldcw
jmp
aaa
flds
cmpsb
mov
mov
cli
popf
sbb
lahf
cmp
sbb
loopne
add
push
xchg
adc
xor
xchg
adc
js
mov
lods
dec
mov
mov
jae
xor
out
xchg
push
jle
xor
movsl
xor
mov
roll
daa
lret
add
rorl
popf
loop
stc
sbb
aaa
xchg
test
jmp
inc
inc
adc
mov
lret
mov
inc
xchg
or
xor
pop
data16
inc
sarb
das
cwtl
inc
test
pop
das
inc
stos
cmpsb
in
pop
icebp
push
repnz
add
imul
and
fadds
jb
rorb
xor
mov
lods
repz
xchg
testb
mov
jg
mov
out
jmp
add
mov
addr16
jge
xor
sub
push
sub
int
inc
jp
push
sub
stos
scas
clc
aad
jmp
int
pushf
sbb
pop
inc
fwait
lret
pop
mov
bound
mov
fs
int
arpl
mov
and
arpl
test
pop
cwtl
sub
in
add
push
pop
jnp
and
in
cmp
adc
cld
jnp
pop
mov
sbb
insb
test
out
pusha
pop
fisubrs
ss
sarb
in
data16
and
adc
jg
xchg
les
xchg
negb
sub
icebp
arpl
xchg
xchg
sahf
fwait
mov
dec
orb
inc
mov
inc
lahf
imul
stos
mov
call
dec
jl
sahf
mov
push
adc
shll
movsb
xchg
bound
mov
bound
imul
icebp
xchg
icebp
add
fs
lods
lods
xchg
ja
jmp
xor
add
test
test
push
xchg
fsubs
mov
sti
push
dec
rorb
push
pop
adc
xchg
test
xchg
fwait
mov
xchg
sbb
and
xchg
add
mov
insl
inc
adc
sbb
jae
aam
pop
mov
and
je
and
movsl
sub
movsl
mov
cmp
pop
xchg
add
mov
inc
fisubl
sahf
pop
lods
imulb
out
in
ret
fmull
lock
ret
pusha
mov
les
mov
jno
sub
int
inc
in
xor
or
sti
cli
hlt
pop
push
shlb
adc
test
ss
jg
loope
lret
loopne
jecxz
jno
pushf
cmc
jg
movsl
or
mov
mov
mov
add
dec
xlat
mov
aas
aaa
popa
cmpsb
int3
or
pop
stc
dec
inc
je
xlat
xor
arpl
pop
fsubs
enter
push
fisubl
adc
into
idivl
les
pop
in
in
ss
dec
sub
push
jg
mov
pop
out
cmp
push
out
pop
lea
mov
movsb
jne
push
xchg
lcall
mov
dec
and
push
loop
pushf
nop
mov
mov
xorb
lods
mov
ja
sbb
les
pop
arpl
lret
inc
addr16
mov
push
stos
jne
jno
cmp
lcall
fisttpll
dec
push
in
int3
lock
dec
xor
fidivs
push
aas
cmp
pop
rcrl
lock
sahf
add
decb
mov
and
and
scas
sbb
mul
xlat
sub
ljmp
popf
pop
lds
mov
mov
leave
sbb
fimull
cmpsb
bound
pop
inc
mov
loop
xor
loope
and
pop
push
xchg
jp
xlat
sub
and
in
push
jecxz
adc
push
iret
mov
movsl
mov
arpl
jle
jb
mov
add
repz
movl
sub
mov
lretw
cmp
andb
push
jp
pop
sbb
daa
sbb
cmpsl
out
movsl
in
jmp
pop
push
enter
addr16
cmp
addr16
lock
repz
add
mov
jp
daa
inc
out
jmp
fidivrs
xchg
cmp
dec
inc
cmp
push
xchg
loop
cmpl
rcrb
lods
cmpsb
inc
push
lds
cmp
sysenter
jmp
adc
inc
add
aam
enter
mov
inc
sub
daa
movsl
pop
sub
push
pop
mov
sbb
bound
aam
outsl
push
xchg
xchg
cld
int3
lods
mov
bound
shrb
mov
pop
sbb
pop
jg
xchg
mov
testl
bound
aam
xchg
ffree
and
call
das
sbb
pop
pusha
and
xchg
cmp
dec
push
jmp
rcll
out
jecxz
mov
push
mov
cs
enter
xchg
sbb
fsubs
and
xor
or
add
test
sbb
sub
mov
in
int
and
lcall
ja
aam
js
ds
jb
loopne
iret
mov
xor
inc
int3
scas
repz
call
hlt
cmp
pop
and
pop
pop
xor
fistpll
adc
pop
fmul
adc
cmp
outsb
xchg
add
icebp
dec
je
popf
fstpt
pusha
xchg
sub
push
push
imul
sti
xchg
out
out
ja
hlt
mov
cli
add
pop
shlb
push
arpl
insl
stc
push
push
inc
xor
arpl
fs
mov
bound
pop
dec
mov
cmpsl
push
cmp
scas
scas
ljmp
sarb
out
lods
ljmp
insb
lds
imul
pushl
dec
jg
mov
hlt
stos
mov
mov
mov
push
mov
cli
mov
and
jbe
jbe
enter
pop
ss
adc
test
or
insb
xor
mov
mov
ss
adcl
fstl
cmp
clc
cwtl
adc
push
out
cltd
pusha
mov
out
or
push
pop
push
adc
imul
xchg
maxps
mov
add
ss
stos
pop
or
mov
insl
mov
jl
jle
decb
data16
shlb
aad
dec
mov
nop
mov
pushf
pop
fstps
vpsubq
pop
push
popf
les
sub
and
push
out
stos
lahf
add
cmpsl
sti
add
lea
outsl
lcall
jbe
cmpsb
fxtract
pop
push
ds
push
sub
and
lret
pop
in
xchg
dec
popa
jge
dec
js
call
sub
test
divb
fwait
popa
lock
testl
decb
and
pop
mov
repnz
dec
pop
fs
arpl
js
mov
fs
daa
jne
pop
sub
push
cmpsl
sar
cmp
lcall
pop
xchg
add
push
dec
ljmp
int
cmp
mov
mov
stc
mov
das
sub
mov
add
sub
test
xor
int3
mov
jge
push
inc
stos
rol
imul
fidivrl
xchg
jp
lods
in
mov
call
stos
xor
in
mov
and
out
mov
mov
adc
sbb
divps
scas
enter
jle
sbb
arpl
addr16
jne
insb
or
scas
jp
sbb
rcl
scas
addb
pop
outsl
adc
xchg
push
cld
mov
pop
fcmovne
test
push
cmp
adc
and
mov
es
fisttpll
loop
cltd
and
loop
insb
les
or
gs
or
lods
pop
rep
je
mov
repnz
fldenv
out
sub
out
mov
push
aam
das
xor
mov
jge
jge
fistps
mov
mov
xorl
push
xchg
mov
push
or
sub
pop
mov
adc
sarb
std
mov
insl
cmp
outsb
insl
mov
or
jge
sarl
cmpsb
add
cmp
mov
pop
inc
pop
or
mov
jmp
mov
jnp
jbe
fisubrs
inc
xlat
dec
fwait
xor
sti
xor
icebp
xchg
outsb
push
add
aas
scas
mov
cltd
jb
push
fnstenv
xchg
cltd
and
js
lock
lods
mov
mov
leave
cmp
cld
pop
imul
ds
add
or
and
aaa
jns
push
or
dec
and
repz
adcl
mov
sub
gs
out
and
push
sbb
and
xchg
icebp
xchg
lret
jne
sbbl
aad
dec
sahf
stos
inc
or
pop
cmpb
xchg
lret
xchg
shll
loope
mov
mov
push
ds
mov
or
lods
sarb
push
mov
add
push
sub
les
jbe
cli
orb
jae
push
dec
mov
out
pop
sub
mov
push
jns
inc
enter
addr16
and
jl
ret
xor
jns
dec
pop
rolb
inc
jns
xor
adc
popa
mov
daa
adc
xor
test
mov
cmpsb
lea
push
out
mov
stc
movsl
sub
xor
rcrl
stc
xor
xor
aas
adc
scas
add
push
jle
jno
inc
int3
repz
bswap
push
bound
mov
cmp
pop
cmp
jae
push
enter
in
mov
pop
and
mov
lea
inc
inc
jge
mov
cld
subb
sbb
mov
movsb
add
dec
lcall
lock
jnp
sbb
cli
jnp
into
cwtl
cmp
cld
sbb
dec
jns
mov
test
in
cwtl
jb
cmp
cmp
inc
out
testl
in
fcmovnu
jmp
jp
xchg
push
stos
and
sbb
xor
push
cmp
mov
jp
mov
mov
stc
jle
sbb
imul
mov
fstpl
lods
test
pop
fcompl
outsl
loop
sub
divl
inc
out
jmp
lahf
xchg
sub
rcl
jbe
inc
addr16
aas
or
add
daa
aaa
andl
xchg
mov
dec
mov
ss
adc
dec
jnp
lock
pop
mov
add
pop
aaa
gs
nop
pop
test
pop
lahf
loope
rcll
cwtl
mov
shlb
or
xor
dec
xchg
adc
pop
fimull
jno
lret
lea
repz
lea
xor
dec
mov
sub
xchg
push
lods
out
pusha
inc
fwait
jecxz
inc
arpl
ja
cmpsb
push
adc
mov
rorl
add
les
jno
pop
gs
dec
and
pop
xorb
jge
pusha
mov
imul
inc
jmp
pop
in
lds
cmp
and
movsl
addr16
xchg
into
icebp
or
xor
sub
ljmp
inc
nop
inc
mov
andl
loop
push
fcomi
out
movsb
xlat
fstpt
pop
les
jae
jp
pop
pop
popl
fcoml
fcmovb
cmp
popf
add
cmpsb
idivb
cltd
xchg
cmp
andl
pop
dec
xlat
or
or
xor
lds
cmpsl
fcoms
xchg
and
sub
orb
mov
cld
jns
cmp
add
mov
and
sti
cmc
and
push
pop
out
inc
fdivp
cs
jb
popa
xchg
imull
clc
cld
mov
lods
out
sahf
fists
imul
pop
sbb
aas
jno
out
and
add
stos
jnp
inc
in
cwtl
and
cmpsb
fs
or
and
sub
adc
dec
movsb
roll
push
xchg
pop
loope
inc
in
sub
das
adc
int3
push
mov
rcrl
std
lret
cmpsb
xor
btl
xor
add
das
insl
mov
mov
addb
cmp
mov
lea
divps
int
or
pop
in
js
jne
fstpt
lods
imulb
shrl
xchg
stos
ss
out
push
test
jle
pop
jg
fstpt
mov
call
fs
sbb
mov
pop
jmp
sbb
mov
adc
scas
jecxz
test
enter
sbb
pop
aad
std
pusha
lock
mov
adcb
inc
sub
stos
stos
jne
add
ret
mull
js
das
pop
shlb
loopne
lret
das
push
add
lret
sub
sahf
pushf
mov
adcb
test
lods
xchg
jl
test
in
sub
cmp
jmp
xor
adc
dec
cmp
jne
push
loop
or
out
jae
lret
xor
sti
push
jg
mov
push
out
test
lea
fldenv
mov
adc
cmp
cmp
jge
sbb
in
fisttps
xor
or
fstps
sar
xor
push
sub
notl
or
xchg
mov
cmpsl
push
scas
sbb
das
push
dec
ljmp
in
mov
inc
and
cmp
xchg
movb
fimull
mov
mov
mov
push
mov
mov
iret
outsb
fs
fimuls
sahf
sbb
adc
add
cli
jae
mov
out
scas
stos
jnp
shll
pop
xor
dec
add
lret
test
push
rorb
insl
daa
ror
test
test
mov
test
xlat
sbb
jge
dec
adc
scas
mov
or
imul
dec
ja
jp
mov
xchg
sti
pop
dec
loop
outsb
pop
xchg
add
push
mov
clc
push
push
inc
andb
mov
test
roll
je
addl
mov
mov
call
les
pop
or
push
aaa
sub
or
pop
lahf
lret
call
notb
sub
push
push
mov
out
or
and
jb
dec
dec
in
or
cld
sub
push
add
fwait
pop
mov
xchg
adcb
mov
push
ja
sbb
cli
std
or
pop
xor
icebp
inc
in
mov
sub
insl
lock
out
repnz
mov
cld
shll
cmp
ljmp
dec
xor
lds
push
rorb
sti
loope
daa
mov
aad
sbb
mov
mov
xchg
mov
cmc
jo
xchg
movsb
pop
imul
loop
in
loope
cld
cmpsb
outsl
icebp
lcall
arpl
psubsw
push
fistps
aas
scas
ss
xor
mov
pop
pop
std
leave
dec
inc
lret
fimull
jmp
rcrb
arpl
bound
add
out
loop
mov
dec
sub
cwtl
push
pop
sub
sbb
sbb
shll
iret
into
mov
nop
jnp
bound
testl
aam
cmc
stos
xor
push
pop
and
in
and
lds
lods
fldl
sbb
inc
or
mov
mov
insl
in
cmc
xor
popf
xchg
dec
test
sub
ss
sbb
cmp
orb
bound
fidivl
jp
mov
lcall
mov
in
xor
push
dec
dec
mov
cmp
jae
shr
pop
push
and
lea
dec
movsb
or
rcr
ljmp
xchg
scas
mov
shl
movsb
mov
aam
inc
addr16
jbe
push
mov
xchg
mov
mov
out
inc
test
or
call
jecxz
and
sar
ret
and
inc
or
hlt
out
lds
hlt
mov
lahf
jbe
sti
xchg
or
dec
ror
sub
std
mov
lock
jp
push
or
dec
push
jmp
divb
jae
mov
adc
test
dec
stos
sbb
sbb
fcoml
je
sahf
movsl
nop
aaa
jno
imulb
fdiv
jo
test
mov
fldl
cmpsl
adcl
and
movsb
stos
pop
sti
stc
cmpsl
and
int3
fisttpl
sub
movsb
std
lods
fldl
pop
mov
lret
cmp
insb
insl
add
sbb
add
outsl
adc
hlt
xchg
push
sub
popa
popa
xchg
adc
mov
mov
stos
mov
in
or
mov
jnp
and
xchg
fdivs
imul
iret
dec
mov
adc
sbb
fnstcw
mov
jo
push
jle
and
pop
ret
jle
lds
add
or
xor
adc
push
fs
push
cmpsl
stos
pop
nop
and
out
scas
clc
aas
sahf
fisubrs
xor
out
aad
lret
sbb
int3
add
fstps
clc
lds
insl
pop
xor
test
int
insl
cld
and
push
inc
int3
xor
mov
jb
lods
insb
ret
sub
int3
popa
or
rcr
mov
pop
mov
push
loop
jecxz
push
or
push
dec
dec
rorb
jmp
mov
addl
mov
movsb
add
jo
sub
aaa
test
add
inc
cmp
dec
sbb
popf
pop
pop
xchg
cwtl
je
push
mov
ss
pop
mov
cmpsb
dec
or
dec
inc
push
sahf
mov
popf
fnstcw
int3
jno
adc
fisttpl
add
jp
cmp
out
repnz
popf
adc
sub
xor
push
mov
test
sub
add
test
loope
and
lret
scas
adc
aam
inc
sbbl
fiadds
xor
pop
cmp
jo
or
mov
or
mov
dec
nop
jae
jle
xchg
dec
clc
push
push
mov
popa
mov
popf
sbb
cmpsl
dec
push
mov
mov
mov
lahf
inc
adc
in
test
mov
push
daa
mov
or
xlat
inc
repz
imul
lret
aaa
sub
dec
cmpsl
gs
das
aas
mov
inc
mov
push
mov
daa
lock
jb
lock
push
movsb
jge
mov
pop
movsb
mov
sub
shrl
je
or
xchg
loop
rcrl
mov
jle
lea
bound
or
fsubr
pop
insb
dec
stos
xchg
adc
pop
add
cmpsl
out
xchg
xchg
push
loope
decb
pop
pop
repnz
in
lds
imull
pop
inc
sbb
push
cli
inc
xchg
prefetcht2
add
mov
leave
test
cmpsb
inc
pop
fadds
cmp
mov
mul
xorl
cmp
dec
mov
adc
xchg
out
push
std
lods
mov
into
push
pop
loope
frstor
pop
fsubrl
int
imul
inc
arpl
fnsave
cli
jns
inc
lret
pop
fnstcw
pop
and
icebp
sbb
push
sub
sub
adc
dec
add
and
xlat
dec
or
xor
cltd
push
xchg
dec
sbbl
sub
jns
cmp
mov
cmp
stos
jns
push
js
add
rcrb
in
test
or
ret
add
push
icebp
fstpl
xchg
test
mov
adcb
arpl
mov
mov
or
daa
mov
mov
ss
cli
push
push
mov
push
into
inc
jb
jecxz
cmp
adc
inc
push
or
mov
outsl
scas
sbb
push
test
sbb
fs
jmp
shlb
shr
push
push
into
mov
ja
inc
int
cs
mov
std
dec
xchg
mov
dec
in
pop
ret
pop
xchg
mov
rorl
negl
jg
and
and
pop
imul
inc
cmp
dec
loopne
cmp
mov
dec
fwait
out
movsb
mull
pop
jno
cmp
in
sub
mov
lods
or
jg
daa
mov
das
iret
stc
aam
dec
push
fwait
out
xchg
push
data16
inc
popf
pop
cmp
mov
push
pop
push
pop
loop
add
test
xchg
test
dec
aas
popa
or
jb
int
mov
dec
outsl
mov
scas
aad
andb
add
mov
xchg
dec
push
popf
cmp
mov
outsl
stos
scas
cmp
das
dec
test
movsb
lds
shll
fucomi
enter
dec
arpl
fidivrs
adc
lahf
fnstcw
mov
fnstenv
push
popl
lcall
sub
push
jb
shr
xchg
popl
daa
jns
pushf
mov
or
andb
fs
mov
cmpsb
jecxz
stc
fs
cli
and
mov
leave
adc
and
lahf
xchg
push
or
mov
fimuls
fsubrl
or
adc
repz
xor
or
jae
mov
xchg
js
jg
pop
movsl
cmp
push
js
shlb
cs
dec
orl
cmpsl
fwait
dec
rorl
lods
ljmp
jae
jo
sbbl
and
mov
mov
adc
jl
in
xor
adc
outsl
ret
gs
sub
mov
mov
pop
sbb
cmp
jecxz
xchg
cmpsb
es
movsl
jnp
movsl
mov
dec
rorl
jns
or
xchg
movsl
repnz
dec
popa
mov
push
or
inc
xor
inc
push
test
mov
jns
cld
gs
xor
loopne
enter
or
push
lea
lahf
push
inc
out
pop
adc
xchg
cs
mov
cs
and
sbb
xchg
jbe
aam
jo
inc
pop
lahf
and
mov
push
outsl
sub
or
ja
xchg
fldcw
imul
xor
loopne
dec
xor
mov
enter
sbb
push
and
je
stos
loope
or
push
inc
mov
cld
lock
and
test
pop
cltd
repz
jae
push
stos
mov
xor
shrb
fstl
pop
movsl
in
mov
lcall
stos
bound
out
scas
and
mov
dec
or
xor
jae
mov
loop
xorb
iret
insl
les
icebp
scas
in
repz
mov
aaa
repnz
mov
adc
sahf
jg
mov
sarl
mov
clc
push
cmpsb
arpl
adc
jnp
and
mov
sbb
add
or
nop
push
sarl
ret
popf
pusha
mov
sbb
outsb
lret
pusha
gs
repnz
or
or
fs
dec
out
out
fldl
das
cmp
xor
jg
pop
pop
mov
push
sbb
push
test
xchg
inc
pop
sbb
aam
adc
xor
les
push
jno
les
pusha
mov
loope
xor
ds
xchg
pop
imul
jmp
loopne
arpl
fwait
mov
mov
icebp
pop
out
sbb
jle
adc
cmp
dec
jp
call
xor
repnz
das
bound
loope
jae
inc
pop
jnp
push
inc
xor
mov
and
xchg
cwtl
dec
and
pop
aaa
push
jne
add
out
ds
cmp
jb
xor
test
adc
mov
bound
sbb
mov
loope
jg
clc
call
mov
xor
jge
jo
mov
or
jae
pop
mov
cs
pop
mov
push
sub
sub
out
aam
jecxz
jl
inc
or
addl
jp
pop
les
and
sub
lcall
add
push
mov
xor
lahf
dec
mov
and
test
enter
adc
fistpl
jae
test
inc
movsb
fwait
repz
jecxz
mov
add
push
lock
outsl
mov
scas
fidivl
cmp
push
clc
sbb
popa
push
insl
sarl
push
jecxz
popf
xchg
jmp
hlt
inc
jmp
push
in
pop
xor
fcmovu
pop
push
jbe
rcr
das
xchg
popf
imul
insb
pop
mov
mov
xchg
lods
nop
mov
mov
cmp
ja
sti
jmp
push
mov
cmp
ret
xchg
shll
jae
fcom
mov
std
ret
xor
jle
je
int3
stos
xorb
xor
leave
mov
cli
cmpsl
sar
ja
fnsave
pop
mov
mov
mov
push
out
test
pop
cmp
es
jmp
mov
rcl
nopl
jg
jp
sahf
cmp
in
or
repz
push
pop
dec
pop
subb
xor
cmp
xchg
hlt
jns
les
jb
aam
int
xor
or
push
fs
test
push
cli
mov
popf
pmovmskb
or
push
jae
xor
adcb
int3
dec
mov
test
xor
xor
or
pop
cld
mov
pop
push
push
xchg
lret
movsb
cmpsb
mov
pop
rcrb
adc
cwtl
cmp
sub
lock
scas
push
pop
push
cmp
in
fs
dec
lret
adc
cmp
jae
insb
xchg
test
in
inc
pop
pop
sub
decl
mov
mov
push
mov
pop
or
daa
in
push
pop
xchg
stos
sub
addr16
clc
adc
scas
stos
lahf
mov
sbb
hlt
data16
ret
pushf
je
scas
inc
sub
pop
xchg
mov
out
loop
fwait
and
into
push
das
lcall
and
push
or
add
out
mov
les
mov
xchg
mov
cmp
inc
in
mov
clc
mov
lcall
xor
mov
jbe
jmp
pop
shll
daa
cmpsb
outsl
cmp
push
xchg
adc
and
and
lahf
loopne
out
jae
popa
fmulp
in
dec
movsl
inc
xchg
lods
push
pop
lret
push
pop
inc
into
pop
sbb
shr
rcrb
xor
inc
outsb
xorl
rcrb
insl
or
mov
lods
aam
loopne
pop
mov
add
or
je
mov
inc
cmp
imul
sbb
jge
adc
push
adc
jle
and
xor
imul
mov
or
fistpl
inc
mov
aad
lahf
mov
adc
sarl
insb
or
ficompl
pop
sub
stos
jecxz
jnp
pop
mov
mov
inc
jl
imul
mov
aaa
notb
or
dec
cwtl
rorb
es
decl
sbb
mov
pop
jge
sbb
orb
and
and
lods
lahf
mov
cltd
and
lock
cmp
xor
and
jne
mov
outsb
jns
dec
add
test
xchg
loop
jle
adc
push
mov
fdivrl
repnz
adc
xchg
andl
bound
jmp
mov
das
pop
out
fldcw
aas
push
rcll
push
sbb
mov
push
jp
fs
bound
cmp
ljmp
leave
cmp
add
adc
pop
jb
xchg
ss
aaa
push
mov
pop
pop
cmp
inc
cltd
test
mov
or
mov
add
sti
jae
pusha
leave
mov
pop
fstp
cwtl
sub
repnz
and
lret
mov
fs
dec
inc
popf
leave
repz
es
sub
jno
pop
daa
std
dec
mov
or
mov
je
mov
xor
sbb
inc
dec
cmp
pop
mov
mov
rol
pop
cli
inc
data16
adc
shl
ret
xchg
sbb
adc
mov
rorl
fst
xchg
xor
or
dec
stos
mov
or
xchg
call
cs
repz
rcrb
pop
sub
or
and
loop
jae
push
inc
clc
ret
leave
xor
mov
mov
dec
sbb
cmp
or
mov
mov
test
pusha
sar
div
dec
testb
xchg
scas
ror
jne
mov
repnz
mov
insl
gs
pop
mov
or
and
mov
scas
pop
mov
sub
mov
es
insb
push
cmpsb
xchg
mov
lret
imul
xor
push
xor
fisttpll
lcall
popa
add
aad
arpl
neg
in
js
lea
shrb
outsb
xchg
nop
sti
push
lods
and
adc
pushf
aam
gs
push
lods
pop
mov
add
xor
sbb
stos
push
push
add
out
push
mov
bound
xchg
adc
cmc
mov
inc
inc
ret
mov
popf
js
adc
jle
imul
mov
rcll
and
cmp
push
jecxz
pshufw
mov
dec
dec
sbb
dec
test
push
add
hlt
ljmp
push
mov
add
xor
loop
cmp
inc
xchg
jb
cmp
xchg
mov
push
ss
fisttpll
dec
outsl
mov
and
push
xor
mov
mov
dec
in
fnsave
jecxz
xor
fwait
add
lods
sbb
les
insl
dec
jp
out
aaa
cli
into
push
icebp
ds
xor
sti
adc
fiaddl
push
mov
rorb
push
imul
sbb
mov
icebp
or
test
les
dec
jg
adc
ds
mov
pop
sub
mov
mov
sub
push
insl
icebp
lret
ljmp
add
stos
push
imul
inc
sbb
adc
movsl
mov
cmp
loope
addr16
fbstp
loop
xchg
sub
gs
les
in
and
popf
push
aas
dec
xchg
je
adc
insl
aaa
xchg
lea
ret
jp
punpcklbw
xor
xchg
or
mov
or
bound
arpl
ret
mov
lds
mov
cmp
push
sbb
xchg
cli
push
ljmp
stos
test
or
push
pusha
sti
push
test
cmc
ret
push
xchg
mov
xchg
cmp
pop
cmp
xchg
mov
mov
cmpsl
movsl
or
out
or
clc
imul
or
dec
xlat
imul
inc
and
cmp
push
stc
in
sbb
rorb
fisttps
int
int3
cmp
pop
pop
push
popl
popa
or
pop
xor
cwtl
sarb
jo
data16
dec
out
mov
out
mov
push
out
cmp
push
pop
cli
inc
loop
xchg
jo
push
mov
insl
aad
xchg
aaa
sbb
jno
pop
jb
mov
pop
push
gs
imul
xchg
dec
js
insb
fldenv
add
sti
xchg
mov
jo
xchg
outsl
adc
aaa
pop
ror
pusha
aas
lea
data16
cmp
lock
loopne
xor
jmp
sbb
incb
mov
jnp
popl
mov
or
xchg
int
cs
inc
adc
pusha
xchg
out
aas
xor
push
jge
dec
xchg
sbb
lods
inc
mov
out
inc
xor
or
stos
lock
stos
cmp
pop
xor
aad
jmp
mov
mov
lea
adc
in
xor
pop
pushf
icebp
pop
enter
mov
cmp
nop
add
in
or
je
mov
mov
adc
loopne
or
scas
in
mov
loopne
loope
daa
fidivrs
cmp
mov
rorb
mov
cmpsb
add
into
add
cmovno
mov
bound
fcomps
adc
mov
add
into
sti
fldl
das
out
pop
sub
push
jae
or
dec
xchg
push
addr16
xchg
ret
inc
mov
sysexit
stc
cli
fwait
mov
push
mov
lcall
inc
sub
inc
cld
icebp
das
decb
dec
dec
jg
xchg
adc
mov
push
lret
test
xchg
pop
sub
insb
out
js
sbb
mov
loopne
pop
rcrb
leave
nop
mov
lods
es
dec
or
adc
sbb
adc
mov
leave
das
test
subb
loop
aaa
stc
lahf
out
repz
arpl
in
scas
xchg
cmc
or
jae
mov
mov
cmpsl
mov
pop
nop
mov
xor
dec
or
cmp
loopne
pop
pop
sbb
jle
push
ds
stos
in
lods
pop
mov
xor
pop
es
mov
cmp
xor
icebp
into
rorb
inc
out
das
loopne
xchg
pop
aad
lret
cmp
imul
lahf
inc
add
inc
adc
sbb
repz
stos
sbb
enter
inc
sub
pop
xor
jecxz
and
xchg
or
loop
sbb
repz
mov
aaa
hlt
jg
dec
out
loopne
cld
dec
dec
std
insl
hlt
cmp
ja
lea
int
or
stos
and
inc
or
add
mov
int
test
pop
test
addr16
dec
inc
push
lahf
mov
fisubl
jnp
add
ljmp
sub
push
loope
ljmp
out
int3
mov
and
cmpsl
je
fbld
cltd
cmp
inc
jl
aas
dec
adc
cmpsl
or
xchg
insb
cmpb
mov
sub
outsl
pop
clc
cmp
jmp
push
mov
mov
push
cmp
sbb
push
mov
mov
xchg
and
out
adc
push
shll
bound
adc
lods
fwait
push
int
ficompl
dec
push
in
xor
push
sub
inc
mov
loope
jge
test
loopne
enter
mov
lcall
sahf
lret
push
mov
ficoms
mov
add
pop
cmpsl
inc
and
dec
rcll
xchg
loopne
fadd
dec
push
mov
movsl
mov
jns
lret
in
mov
cld
push
lods
jmp
fldl
fldcw
push
push
ficompl
inc
sub
shrl
popa
sbb
sbb
xchg
aad
fmull
pop
rcrl
fwait
and
mov
in
add
sbbb
dec
jle
push
sub
cmp
push
fidivs
pusha
shl
adc
add
mov
out
push
or
push
dec
adc
cmp
inc
scas
inc
ror
nop
cmp
scas
cmp
mov
aas
sbb
je
test
imul
adc
out
add
adc
inc
dec
fcompl
pop
cwtl
mov
or
ret
lret
outsb
sub
std
xor
cli
cmp
call
into
aad
fcoms
jne
test
cmp
jo
jge
xor
into
jg
mov
arpl
inc
sbb
mov
stc
xchg
sti
push
scas
cltd
cli
imul
xchg
movsb
out
xor
cmp
scas
or
std
mov
dec
jns
cmp
jmp
sub
sbb
mov
or
adc
insl
scas
mov
enter
int
scas
movsl
test
mov
jp
mov
adcb
adc
sbb
mov
orl
fnstenv
repz
jp
les
sahf
test
pop
aad
aaa
mov
inc
shr
adc
jbe
pop
cmp
push
cmc
cwtl
pop
and
xor
stos
outsl
cli
xor
rolb
inc
add
test
iret
xchg
inc
cmpl
movsb
sarl
jg
js
jge
and
xor
out
jno
and
pop
cmp
xchg
push
xor
mov
repnz
popa
ja
testl
or
scas
xchg
cmp
push
ja
inc
adc
and
and
pusha
push
pop
ds
das
mov
cs
mov
push
loopne
cmc
pop
mov
ja
mov
bound
xchg
cmp
xor
sbb
sub
xor
mov
jmp
mov
aad
scas
out
push
out
sub
arpl
jp
inc
repnz
es
cmc
or
popf
shlb
cmpsb
xchg
cli
push
jo
sub
jp
out
or
inc
movsl
pop
pop
test
scas
sub
or
mov
cwtl
jle
mov
jb
inc
je
mov
and
out
cmc
pop
push
xchg
mov
mov
loopne
push
stc
aam
negl
jne
cmp
pop
xchg
mov
mov
scas
lds
ja
lea
xchg
xor
cwtl
rorb
aad
push
xchg
aaa
shlb
test
imul
stos
pop
rorl
xlat
aaa
iret
adc
sub
or
pop
inc
sub
arpl
pop
push
arpl
neg
mov
or
pop
popf
and
xchg
push
stc
mov
aas
jo
pop
mov
add
ljmp
jnp
jle
cmp
jle
cli
xor
xchg
push
repz
mov
int
inc
lret
das
cs
and
inc
lcall
cmp
dec
jle
rcll
xchg
mov
add
int
in
sti
push
mov
out
mov
and
and
repnz
add
repz
sub
das
jns
ljmp
jo
das
and
ja
rol
mov
jns
inc
jp
in
jl
fs
iret
shrl
addr16
or
in
mov
mov
minps
dec
xor
mov
addr16
mov
cmp
insb
mov
push
cmp
mov
bndstx
or
bound
lds
dec
pusha
sub
shlb
pusha
mov
stc
mov
cli
imul
subl
cmp
not
lock
mov
std
out
pushf
ss
out
and
and
dec
loop
xchg
pop
movsb
inc
or
mov
cmc
shr
rcrl
negl
fstp
icebp
or
push
mov
lahf
mov
repnz
inc
mov
test
pop
inc
ljmp
lea
jg
push
mov
xchg
clc
cli
jmp
mov
test
cmpsb
cmp
sbbl
jnp
iret
mov
mov
pop
mov
loope
jl
adc
cmp
pushf
pushf
mov
xchg
push
mov
repz
xchg
inc
sub
mov
xchg
push
cmp
pop
das
iret
xchg
shlb
sbb
shrl
sbb
aad
fildl
addr16
xor
lcall
dec
ror
sbb
sub
cmc
adc
mov
aas
js
test
std
add
pop
fbstp
cmp
lods
or
xchg
bound
mov
fwait
loop
test
imulb
mov
popa
insb
dec
cmp
mov
rcrb
jle
or
add
sbb
inc
jno
gs
clc
movsl
adc
add
mov
nopl
adc
sub
cmpsl
ja
ss
call
roll
imul
enter
jge
call
xchg
or
cmp
pushf
std
sub
push
push
push
jp
in
push
xchg
mov
push
es
push
jo
dec
adcl
mov
sub
pop
cmp
pop
adc
repnz
xchg
sbb
icebp
xor
pushf
jns
idivl
stc
xchg
push
inc
int
xchg
inc
ljmp
mov
aad
andb
insl
or
sbb
sti
mov
and
or
imul
add
loop
in
ds
aaa
pusha
movsb
add
xchg
push
dec
jmp
int
jae
sbb
movsl
in
fidivs
je
or
xor
xchg
mov
andb
or
cmpb
scas
add
les
inc
fadd
cli
lds
or
addr16
ror
in
lcall
fmul
out
mov
jb
lds
mov
add
and
ss
xchg
out
flds
in
stos
or
cmpsl
xor
xchg
out
mov
jns
dec
sbb
hlt
lods
sub
subl
ficoml
cmp
sub
mov
fistpl
lods
sub
cmpsb
pop
fwait
mov
shlb
jnp
xlat
aaa
cmp
outsl
xchg
insl
mov
movsb
dec
inc
push
pushf
je
push
ror
jb
xchg
inc
xor
mov
cmp
repz
inc
iret
mov
and
pop
pusha
out
xor
and
jge
and
and
aad
adc
insl
mov
jo
and
and
fstpl
inc
jg
rolb
adc
dec
insl
inc
enter
mul
xor
xor
jne
pop
xor
fimull
test
jp
cmp
fcmovb
bound
pop
xchg
imul
loope
xor
jg
iret
add
xchg
adc
adc
mov
push
sarb
mov
dec
dec
add
dec
sbb
popa
scas
push
mov
insb
xor
jmp
cmovge
xchg
decl
fwait
in
and
mov
adc
mov
or
xor
cmp
dec
sbb
jge
lret
insb
in
cs
adc
cmp
sub
dec
dec
mov
push
repz
lods
and
push
sbb
out
sbb
inc
bound
mov
add
mov
sub
cltd
rcr
push
xchg
scas
cmpsl
cltd
jmp
fstps
out
test
adc
mov
mov
sub
lcall
mov
mov
scas
out
lods
xor
xchg
and
addr16
or
ja
ja
repnz
cmpb
int3
jecxz
add
jmp
push
ret
and
or
sbb
xor
mov
lods
stos
mov
outsb
pushf
cs
ja
xchg
arpl
imull
cmp
mov
pusha
dec
movsl
inc
out
xor
ja
stc
inc
push
jbe
adc
loope
and
mov
insl
xchg
mov
dec
sti
mov
xchg
out
sub
jne
xchg
scas
xchg
test
mov
and
in
xchg
pop
imul
mul
sub
loop
ja
nop
cmp
and
cs
pusha
repnz
add
push
jo
into
adc
mov
rep
pop
gs
fstpl
xchg
sub
push
xchg
xchg
push
sbb
pop
or
dec
ljmp
mov
dec
lock
sbb
jge
adc
lret
addr16
scas
sub
ret
mov
addr16
mov
ret
push
loopne
jo
fsubr
pusha
and
mov
mov
nop
sub
push
test
sbb
fadds
xor
xor
add
xchg
sub
mov
nop
and
aaa
xor
adc
pop
loop
mov
xor
xchg
and
test
in
incb
dec
push
push
jbe
test
or
mov
jecxz
xchg
dec
sbb
sahf
inc
push
push
stos
mov
nop
cmp
pop
call
mov
xor
jb
movsl
lock
push
dec
pushfw
leave
adc
xchg
sub
lock
aaa
push
mov
xor
dec
lods
fisubs
xor
xchg
xchg
sub
addb
fdivl
fs
out
inc
out
xchg
cmp
movsl
clc
scas
jno
popl
scas
or
or
sbbb
cltd
and
xor
rol
sbb
mov
cwtl
syscall
aad
push
jle
sahf
imul
pop
and
sbb
dec
cwtl
mov
pop
inc
jb
ss
leave
xchg
pop
lock
test
mov
jo
imul
aaa
jl
jae
aad
pop
sbb
ror
mov
dec
jbe
xor
les
add
xor
dec
aas
mov
push
jne
adc
rcll
adc
xchg
lock
jns
cmp
pop
jge
xor
pop
mov
jge
adc
in
xchg
fsts
shll
fwait
ds
sbb
clc
add
stc
in
pmulhw
pop
hlt
in
mov
pop
loopne
fldenv
cmp
cltd
adc
std
pushf
stos
sbb
xchg
sub
push
jae
movsb
cli
push
call
in
jns
mov
sub
mov
xor
sbb
dec
sbb
ret
jge
xor
hlt
mov
cmpsb
rolb
subl
mov
cld
and
jns
mov
push
fdivl
scas
sub
sti
daa
and
repnz
mov
jae
or
mov
rcrl
in
ret
pusha
inc
xchg
dec
xchg
push
negl
jnp
and
fildl
and
xor
cld
mov
ljmp
inc
mov
xchg
add
jae
and
cmc
push
sub
and
and
test
ror
xchg
mov
js
jmp
mov
cmp
sti
es
stos
prefetch
lahf
mov
mov
aaa
outsl
and
lret
pusha
fstpt
push
cmp
jns
test
or
xchg
pop
sti
mov
roll
scas
xchg
mov
add
add
aaa
xchg
xchg
out
and
mov
dec
dec
pop
xchg
into
rcl
xchg
mov
lahf
push
xor
negb
push
stc
icebp
sub
jo
fbld
or
lods
inc
ret
dec
mov
test
mov
rorb
inc
dec
repz
loopne
imul
xor
ljmp
push
aaa
adc
add
adc
insl
cli
sahf
jbe
xor
scas
imulb
sbb
pop
and
mov
mov
pop
cwtl
sbb
pop
sub
and
fildl
sbb
ss
aas
cmpsl
or
push
repz
sti
push
jns
or
push
add
or
sub
cmp
xchg
or
add
jmp
jbe
lsl
pop
pop
xchg
pop
popf
xchg
cld
adc
and
mov
jmp
test
jae
notl
and
fwait
imul
add
mov
add
scas
movsb
int
insb
insb
xchg
cmp
mov
test
pop
pop
mov
mov
or
cmp
sub
stc
daa
xor
xchg
shl
fcoml
mov
mov
xchg
and
cmpsb
rcll
jnp
enter
je
stos
stos
fsubl
fnstcw
outsl
sbb
stos
daa
push
mov
ljmp
sub
pushf
push
add
and
aaa
push
sarl
aad
cmp
jmp
testb
jnp
outsb
push
ficoml
add
inc
and
push
cmp
pop
test
cli
rcl
fists
bound
adc
sbb
mov
and
xorb
insl
sub
pop
lea
mov
int3
fbld
aad
ja
push
in
cmp
data16
mov
adc
shll
cmp
loopne
sbb
mov
mov
movl
mov
movsb
cmp
cmpb
out
cmp
das
pop
add
enter
pop
sub
add
xor
mov
cmc
adc
hlt
mov
push
dec
fstl
outsb
cmp
sbb
aad
lcall
fidivl
fs
jge
repnz
dec
jns
pop
incb
pop
fs
aas
ljmp
sbb
mov
push
mov
mov
pop
lret
inc
mov
js
mov
mov
lds
inc
mov
mov
sti
loop
popf
jo
jnp
lods
jo
mov
sbb
sub
mov
js
popa
sti
xchg
mov
add
testl
cmp
mov
jp
ret
dec
dec
push
fcmovnb
pusha
mov
inc
pop
bound
mov
insl
fwait
xchg
add
pop
imul
add
adc
mov
pushf
in
and
ret
push
mov
xor
push
les
xchg
add
or
or
xorl
daa
cmpsl
cmp
repz
xchg
dec
mov
adc
cli
fsubrs
sbb
sahf
popf
cmpsl
pop
int3
mov
imul
pop
mov
sbbb
ret
pop
add
jb
clc
daa
or
lahf
idivl
fwait
test
shlb
adc
mov
mov
les
shrb
xchg
sub
aaa
jle
pusha
jns
sbb
jl
aad
jno
fsubl
mov
mov
loopne
in
sub
cmpsl
pushf
dec
jg
pop
push
add
testl
inc
aad
lea
loop
iret
sub
xchg
inc
and
jmp
adc
xor
push
daa
mov
loop
dec
lock
or
fsubl
in
or
inc
shl
mov
pop
fs
xchg
dec
mov
pop
nop
sarl
xchg
arpl
mov
sub
lret
or
xor
mov
test
jecxz
mov
pop
jmp
movsl
adc
bound
aad
sub
cmp
and
push
sbb
cmc
hlt
jmp
call
push
cwtl
inc
mov
out
ja
cmp
leave
lods
xchg
push
mov
pop
sub
jle
adc
cmp
inc
add
cli
outsb
dec
in
dec
std
inc
out
push
mov
cmc
pop
cld
xchg
or
sub
into
xchg
push
in
mov
pop
push
dec
movb
insl
aam
cwtl
mov
add
imul
int3
loop
dec
mov
mov
push
or
pop
mov
jne
sub
leave
inc
xor
pop
outsl
fmull
out
lahf
xor
jo
push
in
ret
out
xor
repz
jle
stos
pop
sub
adc
push
jno
and
mov
push
sub
mov
es
xchg
dec
jae
fistpl
lea
jg
imul
push
add
push
mov
int3
push
jb
dec
lret
xchg
aaa
iret
stos
nop
iret
push
sbb
sahf
adc
lahf
imul
lret
push
xor
or
insl
test
movsb
jno
inc
bound
jno
icebp
push
subl
rorb
sbb
sbb
test
sahf
and
jbe
out
push
fsubs
xchg
mov
push
test
pop
das
push
lahf
fwait
test
das
adc
adc
push
lds
arpl
inc
mov
test
sbb
icebp
pop
pop
out
push
xchg
mov
jne
sub
fisubs
sub
test
xor
mov
loopne
adc
stc
stos
int
cltd
imull
les
insb
sahf
cli
pop
test
sbb
cmp
bound
push
adc
cwtl
sub
fcmovbe
mov
stc
and
pusha
hlt
cmpsl
sahf
or
aaa
xchg
or
sbb
and
mov
fwait
into
sbb
fldt
outsb
lds
mov
xchg
push
mov
inc
mov
jmp
cltd
and
inc
shrl
sbb
xchg
test
xchg
jg
mov
xor
rcrb
cmp
daa
add
lds
jl
sarl
mov
and
dec
dec
jg
cmp
jbe
movsl
sbb
icebp
fistpl
dec
add
dec
push
or
std
js
aas
stc
insb
inc
cmc
lock
fcomp
xor
repz
jmp
xchg
add
dec
or
sbb
das
mov
insl
and
dec
imul
ss
jns
xor
out
lock
push
mov
inc
gs
ds
lds
inc
pop
pop
mov
int3
mov
xlat
sub
jecxz
aam
jbe
xor
jns
xor
or
lock
popf
in
xchg
sub
adc
mov
adc
sub
xchg
pop
fsubs
daa
and
aas
adc
imul
mov
lret
mov
mov
jb
cmp
shll
scas
or
jae
jae,pn
inc
sub
add
mov
jmp
cmp
pop
insl
mov
adc
jae
fists
sub
rcrl
dec
mov
pop
push
mov
fwait
jbe
jae
bound
push
mov
dec
pop
fmul
cmp
popf
cmpsl
mov
mov
insb
pop
pusha
call
icebp
jnp
cmp
nop
jae
scas
jle
mov
pop
mov
out
imul
rorl
mov
pop
scas
or
sti
je
mov
fnstcw
push
nop
mov
scas
dec
and
mov
xor
xchg
adc
out
dec
xchg
pop
out
sbb
xchg
stos
mov
lods
jmp
bound
movsb
add
inc
lea
sbb
cmp
mov
xchg
pusha
xor
pop
jmp
adc
cmp
fwait
pop
fdiv
mov
sti
aas
push
jae
mov
mov
stos
les
mov
div
sahf
subl
adc
push
xchg
push
sub
data16
pop
push
hlt
test
stos
fbld
sbb
cltd
icebp
adc
sahf
pop
jmp
sbb
push
cmp
movsl
mov
andl
not
adc
xlat
jmp
mov
fnsave
mov
call
outsb
jl
add
cs
test
nop
or
movsl
call
daa
daa
sbb
ds
aaa
inc
jno
fcompl
aaa
fwait
dec
ficompl
dec
xor
jnp
mov
fadds
xor
jns
add
test
and
pop
xor
mov
hlt
in
or
adcb
orb
outsl
cmp
std
fdivs
insb
imul
and
jb
xor
jae
pop
or
out
mov
ds
das
add
inc
pop
add
jle
shr
pop
push
insl
add
das
outsl
mov
mov
sbb
xchg
xor
push
add
xor
xchg
repz
mov
test
mov
push
jge
cmp
call
arpl
lds
jb
lcall
lods
sub
xchg
outsb
push
sbb
scas
and
sbb
and
fmulp
jns
arpl
xchg
jo,pt
pop
iret
dec
mov
out
scas
xchg
jge
dec
out
xchg
sti
or
adc
popa
bound
sbb
pusha
pop
insl
xchg
movsl
aad
jbe
mov
test
pop
inc
jecxz
cwtl
lock
shll
pop
aad
mov
in
int3
cmp
push
incb
adc
inc
sahf
sbb
mov
xchg
jo
insb
cld
enter
xor
into
out
cmp
popa
ss
sbb
pop
jo
dec
push
xchg
ret
mov
jno
xchg
stc
inc
and
jnp
sub
xor
cmp
pusha
jo
sahf
or
xchg
and
pop
xchg
push
int3
outsb
sahf
lcall
fs
inc
mov
pop
shll
push
dec
js
push
and
mov
jae
push
rolb
shlb
out
stos
loope
bound
jl
rcll
push
jp
scas
xchg
repnz
cwtl
xchg
dec
adc
sub
xchg
mov
cmp
repz
dec
pushf
cmpsb
inc
xchg
jae
or
push
and
rclb
cmpsl
adc
add
xlat
test
mov
fisubrl
jmp
lcall
mov
sub
mov
cmpsb
es
xorl
pop
nop
sarl
mov
loopne
mov
xor
pushf
gs
lods
push
sbb
movsb
inc
adc
sbb
pop
test
mov
sub
mov
mov
outsb
inc
xchg
scas
dec
movsl
xchg
test
lods
shr
fsubrs
insb
dec
out
mov
iret
or
test
les
je
fdivr
xor
mov
mov
pop
xchg
sahf
mov
jno
mov
popf
mov
jo
pop
xor
stos
popf
xor
scas
push
jae
xor
xchg
sub
sub
mov
push
push
dec
mov
pushf
test
xchg
and
adc
sub
imul
adc
std
sbb
adc
push
xchg
pop
or
les
in
mov
mov
or
ret
movsl
fucomp
xor
lods
mulb
ss
lahf
push
jle
popf
xor
mov
cmc
push
call
mov
lahf
iret
call
push
mov
push
push
pop
aad
sbb
sahf
adc
mov
sub
xchg
sub
inc
cmp
dec
mov
in
push
jg
mov
lret
dec
movsb
daa
mov
and
aaa
jmp
jns
push
in
nop
mov
fwait
mov
pop
sub
aad
adc
push
repnz
sub
adc
sbb
cld
sub
mov
push
mov
add
outsl
push
sub
mov
inc
or
fmulp
daa
loopne
cli
popf
pop
sbbl
aaa
add
sbb
outsb
fldl
mov
dec
and
out
sbb
sarb
out
push
fwait
lahf
lcall
inc
xchg
pop
sbb
ret
mov
add
mov
stos
call
lret
fcoml
mov
imul
dec
lcall
ds
aam
mov
aaa
movsb
icebp
mov
nop
and
outsb
test
pop
xchg
arpl
xchg
and
cs
ds
in
push
lods
cmp
dec
gs
sbb
xorl
daa
add
dec
or
sbb
pushf
pusha
push
fnstenv
out
gs
or
repz
mov
push
fs
or
jnp
xchg
cmp
test
mov
push
or
jbe
cli
dec
push
popa
iret
aaa
jo,pt
scas
jbe,pn
xchg
mov
push
orl
aaa
and
push
push
sti
cmc
out
sbb
aaa
movl
push
lret
ja
or
jbe
inc
mov
jae
jp
and
inc
mov
add
mov
sahf
mov
orb
bound
adc
cmpsb
mov
sbb
lret
xor
loop
push
btcl
je
xor
jne
push
mov
mov
int
aas
int
mov
dec
in
divl
in
out
imul
mov
xor
sbb
pop
fldt
cmc
sbb
test
stos
addb
fistps
arpl
push
cmp
mov
mov
xchg
repz
sub
cmp
cwtl
push
into
pop
inc
mov
inc
pop
lock
test
adc
and
pop
and
push
mov
mov
out
sbb
lret
sbb
dec
inc
lods
js
shll
xlat
mov
mov
adc
mov
arpl
div
fldenv
js
ss
in
or
rcll
sarl
rcrb
pushf
push
cli
inc
stos
out
mov
ret
les
sub
dec
jmp
in
pop
js
mov
fnstenv
js
popf
mov
add
pop
pop
xor
loop
pop
add
mov
sbb
cmp
mov
sbb
and
je
push
cmpb
and
es
mov
or
mov
jb
push
lods
and
cmpl
add
repz
pop
cmp
mov
pop
psadbw
push
nop
pushf
and
mov
incb
outsb
mov
push
loop
and
aaa
lahf
mov
cltd
dec
jge
xchg
aaa
in
sbb
jge
cmc
daa
insl
dec
inc
incl
insl
popa
xor
inc
aas
push
test
in
xor
je
nop
push
mov
das
daa
gs
push
or
adc
jne
sti
daa
fst
xchg
mov
ljmp
ja
push
movsl
xchg
jmp
mov
fsts
push
jg
xchg
sub
gs
add
test
xlat
pop
or
mov
push
fildl
xor
mov
or
jmp
scas
arpl
add
xchg
push
and
mov
cmc
dec
inc
mov
inc
sarb
mov
pusha
cmp
mov
loop
mov
mov
clc
fdivrs
addr16
mov
nop
lea
ror
lss
insl
dec
ljmp
adc
idiv
mov
push
lcall
inc
adc
gs
add
aaa
int3
adc
jae
jge
sub
mov
xor
bound
dec
or
test
cmp
hlt
imul
std
dec
pop
push
loopne
push
ret
xchg
xor
aaa
ret
bound
test
rolb
cmc
inc
jle
daa
xor
inc
jnp
mov
jns
mov
dec
jnp
sbb
sahf
je
sbb
xchg
dec
pushf
subps
adc
push
js
push
cld
cmp
jns
add
inc
xor
adc
inc
inc
out
push
push
sub
add
cmp
test
dec
movsl
in
push
push
test
pop
xchg
cmp
pop
mulb
xor
xor
jb
push
testb
mov
jle
adc
adc
gs
lahf
test
movsl
push
test
cli
enter
jne
rolb
cwtl
sbb
inc
and
dec
mov
inc
push
loop
push
dec
repz
and
testl
rcr
inc
pop
sbb
pop
mov
cmp
jle
fs
lahf
dec
sub
mov
je
sbb
lods
mov
insl
lods
pusha
sub
jmp
insb
enter
sti
push
imul
popf
pop
pusha
lods
add
mov
popf
int
jle
sarb
ljmp
or
lds
rol
addr16
jge
mov
lds
enter
xchg
andl
sub
jmp
inc
cld
pop
jne
jmp
fnstenv
cli
sbb
mov
fs
stc
ss
xchg
sub
add
into
test
xlat
into
mov
pop
inc
xchg
mov
ds
and
fnstcw
xor
mov
push
sahf
jb
cmp
add
popl
js
jo
stos
andl
outsl
call
repnz
mov
mov
sub
out
jmp
lods
mov
dec
icebp
cltd
cli
lea
and
and
add
mov
int3
jns
pop
adc
inc
mov
mov
add
mov
es
in
outsb
out
cmp
fldenv
pop
repz
ljmp
lret
repz
addb
in
cmpsl
repnz
ret
mov
and
cld
test
mov
add
mov
dec
and
push
xchg
ret
adc
jp
xchg
jo
dec
ret
sub
push
aas
fcom
inc
aas
or
cmp
add
notb
fiadds
bound
or
mov
popf
lods
fisubrs
dec
jle
xchg
jbe
clc
roll
cltd
lahf
push
pop
ficomps
loopne
cld
push
inc
adc
js
inc
cs
mov
mov
repnz
fiadds
aad
test
push
cmp
ret
bnd
imul
mov
cmp
cmpsl
sub
or
push
mov
mov
ja
fdivr
push
xlat
sti
std
loope
pop
or
adc
loope
arpl
lret
xchg
mov
dec
inc
in
sahf
and
jecxz
xchg
mov
jle
fwait
xlat
adc
icebp
jg
xchg
mov
jle
jp
imul
clc
es
popf
adc
loop
mov
lock
sahf
jnp
mov
and
pop
adcb
pop
add
rclb
mov
add
in
inc
je
arpl
mov
or
pop
loope,pn
shll
xchg
or
push
mov
je
jl
or
lahf
imul
mov
jecxz
ret
imul
std
xchg
inc
mov
pop
iret
inc
and
cmpsl
inc
xchg
rorb
adc
and
stc
cltd
int
cmpsb
fcomp
lcall
popa
and
rorb
push
repnz
add
roll
lret
test
adc
pop
xchg
cmp
cltd
ja
xor
out
stos
in
push
mov
int3
pop
aam
cltd
ds
push
jb
cmpb
ret
cmp
pop
push
and
add
xchg
adc
je
sbb
aaa
leave
add
cmp
push
or
outsb
pop
jo
push
mov
sub
aam
std
sbb
mov
cmp
mov
lods
sbb
icebp
mov
xor
lret
mov
add
push
rorl
jbe
cmpsb
lods
lret
scas
dec
ss
xchg
mov
mov
nop
and
xchg
movsb
cli
jb
and
xchg
pop
pop
jp
enter
cmc
or
sub
lret
out
mov
ss
or
fwait
call
dec
js
ret
cmp
scas
sbb
in
cmp
dec
ljmp
mov
sbb
push
paddusw
sub
add
inc
pop
xor
ja
sub
call
push
lret
lods
xor
icebp
pop
sbb
jge
out
int
outsb
adc
fcmovnu
pop
cwtl
pop
testl
and
roll
pop
repnz
xchg
sbbb
in
mov
movb
test
fs
push
push
aaa
shll
or
mov
int
daa
add
rcl
int3
add
xchg
sbb
or
int3
mov
arpl
and
jns
ja
aaa
or
shrb
add
jle
dec
mov
ss
test
xor
xchg
xchg
scas
adc
xor
test
insl
cmp
pop
ficomps
sub
mov
clc
aam
add
bound
outsl
syscall
adc
aas
rcll
jo
push
pop
inc
mov
scas
mov
sti
add
mov
inc
fimuls
leave
and
pushf
cmp
push
fimull
cltd
jno
aad
xchg
out
push
push
push
ret
insb
cmp
inc
jl
rcl
push
out
jle
outsb
mov
push
out
push
cmp
lods
bound
pop
in
lret
and
test
xor
inc
shlb
sbb
sbb
pop
dec
int
movsb
fbld
frstor
mov
jbe
adc
adc
adc
imul
push
push
and
jmp
pop
add
lcall
mov
dec
into
pop
dec
ss
jmp
sbb
pop
pop
int3
lds
dec
clc
hlt
xchg
out
ss
jmp
lds
and
and
adc
lods
inc
std
mov
repz
lods
fmul
xchg
or
das
cs
xchg
inc
lcall
mov
fs
and
xor
arpl
jecxz
mov
out
leave
rcr
fwait
push
in
mov
bswap
xor
leave
ss
insl
xlat
mov
push
mov
dec
push
aam
repz
pushf
jnp
cwtl
ret
push
js
jae
pop
sbb
add
and
inc
pop
cmp
movsb
jg
mov
rcl
mov
mov
jp
es
pop
jbe
add
les
out
andl
lods
test
mov
les
roll
jl
lea
mov
mov
mov
inc
xor
testb
in
push
mov
mov
xchg
insl
test
cs
or
ds
fsubrs
es
pop
inc
lods
mov
ret
jbe
mov
test
rorb
stos
fs
dec
outsb
pop
jbe
std
pop
mov
cmp
mov
pop
inc
push
mov
inc
fiadds
xchg
lds
inc
push
xor
outsb
and
xor
lea
fimull
dec
push
inc
sub
in
aaa
dec
and
je
movl
es
adc
xchg
in
mov
inc
inc
adc
xchg
fdiv
xchg
mov
dec
sub
addr16
scas
adc
xlat
outsb
mov
push
or
repnz
andb
cmpsb
dec
sub
inc
jge
xchg
push
movsl
gs
cltd
sub
cmc
repz
cmc
mov
cmpsb
adc
mov
pop
mov
dec
dec
orl
test
rol
inc
mov
loope
enter
lahf
push
idiv
xlat
jmp
cs
out
mov
ja
shlb
es
test
mov
pop
cmpsl
xchg
aas
and
add
lea
into
out
xor
lds
aad
mov
push
push
out
push
test
xchg
into
inc
sbb
daa
add
push
and
xchg
and
add
xlat
mov
fs
lahf
loope
sub
outsb
or
cli
jcxz
pop
sbb
mov
xchg
xor
xchg
adc
in
movsb
adc
outsb
pop
add
test
mov
xor
inc
xlat
sbb
sub
mov
fldcw
lods
stc
das
sub
pop
repnz
es
lahf
adc
inc
insb
jp
mov
mov
push
aas
mov
ss
pop
test
jg
xchg
mov
jne
pop
inc
repz
pop
cmpsb
repz
jb
and
lods
out
lea
add
mov
jno
fidivrs
das
bound
fisubrl
adc
dec
xchg
or
pop
xchg
or
out
cmp
lods
pop
adc
add
cld
add
out
jno
jo
mov
inc
fisubl
mov
hlt
int
shlb
dec
jg
loope
cmpsb
pop
xchg
push
mov
sub
lret
dec
dec
sbb
cmc
push
insb
push
aas
push
dec
mov
adc
std
ljmp
adc
ljmp
xchg
mov
push
pushf
mov
xchg
mov
pop
mov
rolb
out
cmp
stos
test
int3
andb
fidivrs
cmp
inc
mov
sbb
cmp
sbb
mov
xchg
enter
fistpl
out
stos
push
mov
xchg
int
dec
xor
mov
std
jmp
dec
push
call
out
xchg
sub
and
fcoms
cmc
pusha
mov
shlb
xor
jnp
popa
lahf
jae
in
arpl
fwait
test
cwtl
mov
add
das
test
inc
push
sbb
jo
mov
test
add
cli
cltd
out
movnti
push
cmp
jp
cwtl
push
add
daa
pusha
out
arpl
xchg
xchg
pop
dec
sti
or
push
cli
cmp
push
dec
inc
xor
int
mov
push
loope
stos
push
push
mov
xor
lods
pop
in
mov
pop
lret
aam
in
icebp
iret
sbb
mov
aaa
xor
jb
and
lods
or
xchg
sbb
sahf
mov
xlat
mov
shlb
xor
or
jne
loop
shlb
clc
push
xchg
jge
pushf
in
pop
test
test
daa
or
mov
insb
inc
mov
sbb
shl
in
or
pop
dec
int3
stc
nop
sahf
cmp
lahf
out
sub
mov
fimuls
add
mov
jo
idiv
scas
insb
sbb
pop
ret
mov
cmp
mov
lret
push
sub
insb
lods
adc
rorl
inc
push
lock
pop
dec
cmpsb
push
in
loop
jp
out
int3
jns
mov
jg
xchg
in
adc
aas
lock
das
mov
arpl
sbb
sub
mov
outsb
push
xor
aas
outsl
and
ljmp
arpl
ds
stos
andl
mov
out
dec
mull
shr
or
mov
mov
jnp
das
mov
iret
adc
outsb
bound
jo
cmpsb
sub
sti
sti
or
inc
nop
mov
jg
je
jbe
addr16
xlat
movsb
pop
add
popa
mov
jae
inc
popf
inc
stos
push
out
mov
adc
sbb
xor
pop
jmp
cmp
data16
loop
mov
js
in
jecxz
xchg
sub
sub
jbe
or
mov
jne
hlt
inc
lret
xchg
lret
lret
cld
rclb
mov
cmp
or
rcrl
movsl
int3
mov
dec
xchg
xchg
mov
into
mov
cmp
xchg
jne
sub
hlt
inc
and
cmpsb
rcll
gs
outsl
xor
lahf
mov
mov
andl
mov
addr16
not
inc
outsl
bound
in
mov
dec
mov
cmc
push
and
dec
or
dec
inc
jmp
mov
push
jnp
mov
fstpl
mov
mov
cmp
xchg
and
mov
jge
and
jno
mov
jl
movb
cmpsl
cli
jl
lods
pop
xor
cmp
xchg
cmpl
ss
mov
cmp
xchg
dec
in
or
sbb
mov
loopne
mov
mov
mov
add
pop
xchg
outsl
sahf
out
and
xchg
icebp
iret
pop
jno
mov
sub
pusha
inc
mov
loopne
xchg
mov
mov
into
mov
adc
arpl
inc
lea
and
lcall
sub
inc
inc
xchg
faddp
cmpsb
mov
push
movsl
adc
rol
test
mov
sub
pop
xchg
pusha
sub
sub
dec
inc
enter
repz
shlb
xor
cmp
pop
mov
mov
push
cltd
gs
jg
add
inc
in
ret
inc
pop
inc
inc
dec
mov
jg
pop
loop
and
lret
addb
pushf
xor
add
adc
inc
cmpsl
lret
out
out
lock
scas
xchg
cmpl
mov
jecxz
cwtl
cmp
out
mov
or
mov
dec
dec
fcoml
xchg
arpl
pop
sub
push
jmp
fiadds
int3
sarl
fcmovnu
outsb
or
loop
repz
cmp
imul
shr
xchg
add
xchg
jge
push
lcall
fldl
inc
lods
mov
mov
ret
ss
imul
test
push
fadds
jle
fsts
fdivl
dec
push
rcrl
sub
scas
sbb
test
pop
push
jmp
ret
cmpsb
outsb
into
fnstcw
dec
sub
or
dec
aaa
stos
mov
jmp
adc
mov
sub
xchg
int3
and
xor
pop
cmp
inc
add
jne
cmp
ret
jne
sarl
shl
in
sub
or
inc
mov
inc
call
popa
jecxz
out
mov
ds
or
mov
pop
ds
mov
test
fwait
jge
dec
sbb
das
push
push
repnz
sbb
lahf
add
mov
sub
or
dec
and
gs
pxor
fwait
sub
mov
jle
jle
mov
jmp
inc
sub
or
mov
push
cmp
xchg
jns
dec
cwtl
fiaddl
xchg
pop
add
add
ljmp
hlt
inc
mov
ror
mov
jle
sti
pavgb
mov
xor
and
jecxz
lret
pusha
aad
arpl
popa
mov
xor
gs
push
mov
push
lret
dec
scas
popa
sbb
dec
stos
insl
mov
es
xchg
sbb
sub
xchg
sbb
ret
inc
out
ss
cmp
cmpsb
push
jne
orb
das
in
mov
xchg
adc
adc
inc
sahf
push
adc
xor
dec
mov
push
mov
adc
imul
popf
mov
cmp
mov
lcall
movsb
pop
scas
sbb
in
xor
sub
aam
mov
subl
and
sbb
mov
outsl
xchg
adc
sub
mov
pop
sbb
in
scas
push
dec
ja
jmp
arpl
movsb
out
test
es
mov
push
adc
scas
nop
aad
mov
push
fcmovbe
rolb
mov
aam
insl
jle
or
dec
jmp
mov
or
je
lahf
ja
sbb
cmpl
xchg
mov
shrb
lods
inc
push
leave
aaa
mov
cmp
ja
std
adc
dec
mov
cmc
adc
dec
lock
mov
xchg
jle
adc
arpl
sub
mov
and
das
dec
mov
pop
xorb
or
call
inc
xor
or
aaa
in
cmpsl
and
pop
scas
push
call
movsb
sub
fisttpll
mov
or
mov
or
and
sbb
mov
ret
pop
adc
and
les
mov
or
or
and
push
outsl
out
cld
push
in
sub
nop
mov
ror
lea
xchg
mov
xchg
sbb
inc
loopne
dec
lea
inc
mov
push
pop
sbb
fildll
cwtl
aad
iret
add
daa
jecxz
inc
push
insb
subb
mov
mov
das
fisubrl
jmp
mov
stos
testl
sbb
cmpsl
cmp
inc
inc
jo
lock
flds
push
mov
and
sbb
shll
js
xchg
and
add
cmp
sbb
test
das
fcompl
lods
ja
sarl
add
mov
cmp
xlat
lret
cmp
fldenv
pop
push
and
imulb
repnz
loopne
push
testb
outsl
lcall
add
mov
fcompl
lret
mov
addr16
cmp
dec
cmp
mov
mov
push
inc
clc
inc
push
cwtl
int
fistps
cltd
leave
add
loopne
loop
in
xchg
out
cltd
ret
mov
test
hlt
cmp
or
cmpsl
mov
test
sti
add
call
out
js
sub
cli
push
jnp
lods
imul
arpl
jl
add
scas
fdivs
nop
push
or
mov
push
cmp
loope
jl
sarl
mov
sti
adc
mov
and
sbb
push
scas
cmp
cmpsl
fyl2xp1
add
cmp
mov
jb
pop
les
jnp
imulb
ds
xchg
mov
mov
inc
mov
add
addw
aam
pop
lret
jp
int3
mov
mov
insl
dec
adc
loope
scas
repnz
popa
gs
mov
pop
mov
sub
fcoms
xor
mov
sbb
mov
lods
in
push
sti
test
dec
fld
jmp
mov
rcrl
fistps
shlb
push
ret
sbb
icebp
xchg
sub
fwait
push
dec
xchg
aam
cltd
je
xor
rcrl
mov
sub
add
in
and
nop
adc
sbb
sub
fucomip
jns
mov
push
cli
cli
push
push
push
mov
or
ljmp
loop
adc
push
push
inc
test
add
jbe
outsb
jp
xchg
loopne
out
sahf
and
pop
sub
or
xor
out
out
lea
cmp
nop
xor
cmp
sub
andb
inc
sbb
inc
sti
aaa
aaa
sub
fsubrl
cmp
or
lods
xor
pop
rolb
rcrl
inc
ficompl
repnz
sub
jmp
and
xchg
iret
adc
or
iret
jno
sub
movsl
ss
xor
test
push
sub
xchg
ret
xchg
mov
inc
jle
cmpsb
xor
inc
xor
pop
xor
add
push
mov
fs
or
aam
fs
sbb
push
push
cli
rorl
push
xchg
clc
add
sub
mov
cs
xchg
jp
pushf
mov
push
push
and
fmul
and
clc
lret
add
add
fstl
sarl
shlb
and
icebp
in
mov
push
mov
xor
das
mov
js
out
cmpsl
nop
pop
push
inc
insw
push
xchg
ja
lcall
cmp
repz
roll
xchg
fisttps
flds
adc
adc
out
scas
bound
mov
cmc
aam
rolb
aaa
fsubp
sbb
jae
or
mov
mov
sarl
xor
adcl
mov
jp
xchg
mov
inc
sbb
mov
inc
and
inc
jg
pop
sbb
mov
in
repnz
mov
out
js
inc
sbb
dec
fistpll
cmp
mov
pop
nop
arpl
lahf
sub
add
sbb
and
hlt
mov
xchg
inc
mov
loopne
mov
cmpsb
xor
dec
mov
rolb
clc
cmpsl
mov
je
outsb
pushf
enterw
loopne
mov
add
sbb
pop
jp
ljmp
or
or
inc
aaa
gs
xchg
fbld
arpl
or
mov
addb
inc
outsb
cmp
pop
and
pusha
inc
aam
cmp
lea
iret
sbb
push
out
hlt
adc
ds
in
lahf
cs
js
clc
xor
jnp
adc
rcrb
mov
fmull
mov
ficomps
jnp
test
cmp
loope
andb
in
fcom
cltd
lret
mov
sbb
xchg
divl
mov
mov
pop
cmpsl
dec
jmp
ret
insb
mov
mov
test
ss
arpl
dec
mov
shlb
and
dec
nop
insl
out
cmp
mov
fs
into
or
push
mov
nop
push
add
mov
into
fdivrl
push
push
out
lret
push
pop
xlat
jmp
shl
in
mov
not
es
testb
stos
aad
les
cmc
into
mov
ja
xchg
iret
sub
fiadds
addr16
jl
inc
jns
leave
pop
inc
xor
mov
push
xlat
inc
sub
xor
cmpsb
pop
sbb
out
cmp
mov
rcrl
inc
and
repnz
stc
mov
and
fsubrp
add
adc
in
fildll
dec
jmp
sub
lods
test
jns,pn
push
mov
mov
dec
jb
lods
imul
mov
ficomps
push
notl
data16
and
xor
inc
lret
push
insl
add
fstpl
ficompl
arpl
inc
xor
cmpsl
in
jmp
dec
in
mov
std
adc
sub
or
xlat
ja
mov
xchg
mov
lock
loop
sbb
jo
jecxz
xchg
jne
jge
ljmp
mov
test
sahf
div
fldcw
dec
dec
or
call
sbb
and
fsubs
cmpsl
sbbb
xchg
arpl
xor
xorl
jle
imul
adcb
aaa
scas
in
fsubs
lret
fstpt
fldt
mov
notl
mov
std
add
daa
adc
pop
sbb
fucomi
fwait
roll
ja
mov
sub
push
or
sarb
push
imul
sub
or
out
loopne
mov
outsl
push
loope
in
sub
movsl
pop
addb
pop
mov
xor
movsl
gs
aam
xchg
shr
iret
jne
sub
popa
dec
xchg
gs
dec
insl
mov
add
adc
and
jo
les
repz
enter
adc
dec
rcl
ds
push
pop
mov
xchg
jnp
sub
bound
ds
xor
test
negb
adc
stos
push
inc
mov
pop
jmp
dec
push
sub
pop
push
xchg
in
fldenv
mov
dec
mov
xchg
pop
sub
popf
in
int
push
xchg
sub
sti
mov
push
enter
rorl
mov
repz
sahf
ret
icebp
vpmaddwd
jle
mov
xchg
mov
dec
mov
or
popa
outsb
addr16
xchg
cmp
mov
sbb
cmpsb
hlt
fwait
enter
inc
lods
stos
mov
lods
jg
xlat
cmpsb
dec
and
sub
lock
es
ficoms
and
and
movsl
fs
dec
repnz
sub
and
xor
sub
rolb
dec
pop
das
add
ja
sub
stos
adc
movsl
lret
mov
sub
sbb
insb
repz
and
sub
scas
add
aas
rclb
shrl
sub
imul
fisttpl
pop
xor
int
xor
je
test
or
xchg
xor
inc
mov
lds
inc
out
xor
pop
cmp
popa
mov
sahf
ljmp
call
aad
mov
ja
jmp
in
mov
and
cmp
lock
jmp
add
xchg
loop
int3
push
sbb
cwtl
rol
jecxz
out
shll
jne
jno
scas
xchg
inc
das
aaa
clc
dec
daa
jl
scas
mov
lret
xor
cmp
or
jge
xchg
cwtl
mov
dec
les
ret
imul
push
mov
inc
in
jno
mov
call
mov
xchg
cli
push
mov
jno
sbb
sbb
test
push
sub
jge
not
fcoms
adc
and
int
add
jle
sub
in
xor
lock
jo
mov
xchg
push
adc
jp
dec
das
je
ss
mov
mov
push
push
dec
subb
out
xor
xchg
jno
jb
fcos
fcmovb
adc
loope
call
push
cld
pusha
and
push
or
out
bound
add
mov
pusha
sarb
add
adc
stc
inc
ret
lods
leave
lret
iret
dec
cmpsb
sbb
or
scas
sbbb
mov
jne
and
pop
inc
popf
out
adc
push
mov
sbb
cmp
out
inc
fwait
lcall
pop
ss
lret
test
stos
int
or
fcmove
sbb
sub
inc
arpl
rclb
and
jg
adc
mov
negb
mov
xchg
mov
es
leave
push
fnstenv
jo
in
cld
repnz
stc
daa
cmpsl
orl
test
loopne
jb
sub
mov
mov
jl
mov
mov
mov
test
in
sub
int
sbb
pop
insb
ret
inc
pop
or
jno
sbb
pop
push
frstor
mov
fisttpll
sarl
sarb
dec
mov
or
aad
or
xchg
mov
cmp
adc
loopne
aaa
push
stc
jne
je
int3
loope
adc
fidivrs
fnstcw
fcoms
orl
pop
leave
in
push
pushf
aaa
aad
cmp
test
and
fucomip
lea
adc
add
loopne
add
inc
pop
addr16
arpl
mov
fisubrs
leave
mov
call
xor
fwait
inc
inc
enter
cltd
jg
in
outsb
jo
out
xchg
jbe
gs
jle
ljmp
ljmp
repz
or
xor
add
ret
inc
jl
std
aas
lcall
out
jp
rcrb
mov
ja
xor
cs
idivl
ret
xchg
push
aad
inc
sub
sbb
call
xlat
inc
push
test
xchg
push
mov
insl
mov
ret
outsb
sub
shlb
xor
aam
jecxz
decl
mov
in
lock
nop
fbld
jnp
imul
aam
add
and
negl
ss
push
mov
inc
movsb
jne
insl
loopne
call
mov
fwait
enter
push
xchg
shl
daa
mov
enter
jnp
cmp
adc
into
scas
dec
sbb
loope
push
cli
push
mov
lock
xchg
shl
mov
xchg
pop
pop
into
pop
sub
lret
and
mov
stc
dec
inc
sbb
inc
pop
push
sub
pushl
stos
sub
mov
push
inc
adc
imul
mov
push
jmp
push
pop
cmpsb
cmp
outsl
in
adcl
iret
jecxz
mov
or
mov
pop
mov
mov
fisubl
ret
lds
sbb
jne
push
cmpsl
and
cs
aas
jmp
insl
test
jbe
and
pop
test
shrl
inc
outsb
lods
loop
out
push
sub
shll
outsl
hlt
mov
push
imul
fsubl
lret
cmc
xor
frstor
icebp
inc
mov
outsl
out
fsubl
call
adc
jecxz
movb
mov
cli
and
es
popa
test
int3
jb
sahf
mov
sbb
loopne
push
ficompl
repz
pusha
lcall
mulb
test
mov
mov
ret
xchg
lods
mov
cmc
jo
hlt
xchg
sti
cmc
dec
pop
lcall
xor
or
cmpsb
xor
cmc
adc
iret
imul
js
fidivl
and
insl
sub
mov
pop
nop
push
jo
inc
and
xor
push
xchg
cmc
jnp
sbbb
mul
dec
daa
lahf
cmp
jecxz
sarb
lahf
add
fldl
adc
mov
push
das
adc
div
imulb
clc
cmc
pop
add
add
cli
ss
cmp
inc
sbb
ffree
cmp
jns
test
cmp
inc
iret
pop
sbb
dec
out
dec
cmp
jmp
les
das
push
sbb
fbstp
xchg
mov
jnp
clc
push
aas
push
inc
sarb
cmp
pop
dec
dec
mov
roll
mov
fs
xchg
add
dec
iret
jbe
out
aaa
es
dec
out
aaa
sti
mov
pushf
pop
sarb
clc
ja
push
mov
cmpsb
sub
rol
cmp
loop
dec
adc
lea
aaa
sbb
fcos
rcrb
fsub
shll
cmpsb
arpl
out
and
or
jbe
and
shlb
sahf
sti
out
inc
in
mov
lcall
sub
jbe
xor
sbb
das
jg
dec
arpl
cmp
jge
mov
movsl
push
loop
imul
or
sub
pop
mov
test
popa
pop
inc
mov
push
scas
es
mov
add
roll
test
fldenv
cmp
mov
pop
daa
fcoml
mov
roll
mov
cmpsl
repz
mov
inc
in
mov
pop
out
or
jne
adc
pop
and
xor
xor
aam
and
cmpsl
out
ss
lods
std
lods
xor
int3
mov
or
add
xchg
jl
sub
adc
and
mov
std
in
clc
test
sub
test
rcrb
int3
sub
push
cli
dec
or
push
data16
les
cmpb
gs
mov
or
ret
cmp
movsl
fwait
jecxz
cmp
inc
xorl
jg
xchg
fimull
push
pop
and
xchg
push
mov
cmp
ljmp
lods
xor
push
lock
pop
loop
add
mov
cmp
shl
cmc
push
fbstp
adc
or
add
ljmp
adc
dec
gs
rclb
and
pushf
xor
je
outsb
xchg
outsb
cmp
jle
cmp
and
cmp
and
jge
push
jl
adc
test
mov
pop
pop
stos
repz
cli
ljmp
ljmp
mov
cld
jp
and
mov
ds
popl
mul
push
push
mov
xchg
mov
pop
ja
cli
mov
mov
ret
leave
xor
lahf
fnstsw
sahf
movsl
pop
pop
and
and
jns
lock
test
andl
add
sti
mov
sub
test
add
sub
mov
sbb
xor
push
hlt
sahf
sub
xor
pushf
dec
imul
and
mov
or
loop
ss
movsl
jp
ja
and
dec
mov
clc
jmp
loope
iret
pop
ficoms
pushl
push
dec
xchg
enter
jnp
fcmovbe
sbb
and
push
and
int
or
jp
outsl
mov
out
add
jmp
and
mov
and
int3
shll
lods
popf
mov
outsl
jbe
cmpsl
jo
pop
or
jp
or
test
push
sar
lahf
stos
out
hlt
xchg
push
push
jne
push
js
test
fsubs
mov
push
cmc
sub
repz
cltd
aad
or
rcll
add
nop
pop
xor
enter
jo
adc
out
fnstsw
gs
fs
inc
jnp
jp
pushf
mov
inc
es
outsb
pop
xor
outsl
lcall
inc
repnz
lret
into
out
sub
repz
xor
sub
sub
and
push
movsl
frstor
stc
cmp
sti
lret
inc
in
repz
add
popf
inc
or
sbb
dec
mov
push
mov
mov
in
insl
cld
fimull
and
add
lods
mov
clc
push
movsl
sub
orb
and
cld
ret
dec
fmulp
cmpsb
mov
out
les
in
xor
pop
push
adc
add
cmc
mov
test
dec
adc
mov
cmp
sbb
push
daa
nop
mov
xor
pop
and
mov
gs
mov
mov
or
ffree
out
clc
loope
imull
sub
fwait
ja
push
jp
popf
pop
loop
pop
aas
fists
xchg
cmp
mov
into
test
jne
and
adc
pop
test
jle
dec
imul
pop
dec
dec
pop
pop
scas
sub
mov
std
fldl
pop
rcll
imul
mov
mov
cld
or
dec
mov
fucomi
sti
inc
jae
and
push
sbb
fwait
add
jb
out
subl
xor
enter
scas
and
mov
adc
in
cwtl
cmp
xor
xor
mov
cmc
aaa
push
sub
dec
dec
insl
or
add
repz
mov
cmp
push
rep
dec
xor
into
out
cmpsb
mov
sub
xchg
and
inc
out
mov
cmp
inc
jmp
inc
test
cmp
jle
pop
outsb
cmp
clc
xchg
cli
fnstenv
ror
inc
dec
mov
add
clc
shl
ret
add
sbb
adc
aad
add
pop
test
rclb
xor
push
sub
push
movsl
cwtl
fcmove
and
lcall
out
jbe
mov
jae
test
dec
call
sbb
sahf
punpckldq
push
cmc
add
push
int3
xchg
dec
shrb
sbb
in
ficompl
out
out
icebp
xor
mov
icebp
mov
cmp
mov
sti
or
xchg
mov
cmpsb
fdivrl
inc
push
lcall
adc
hlt
ds
jb
xor
cli
xchg
xchg
addr16
inc
cmp
fwait
sbb
movsb
rorl
dec
icebp
mov
shrl
and
out
out
bound
push
dec
int
stos
std
dec
mov
dec
push
out
cmc
xchg
stos
pop
stc
imul
push
mov
cwtl
and
jmp
fiadds
xor
repz
jns
inc
cs
andl
scas
adc
add
xor
pop
out
inc
ja
cmp
cmp
mov
cli
pop
or
adc
xchg
sbb
pop
xchg
filds
add
adc
jns
sarb
cmp
jle
jb
push
dec
stc
dec
jmp
cmp
ret
dec
shr
stos
fimuls
and
movsl
sbb
int
mov
push
mov
int
mov
mov
cmp
dec
and
dec
or
stos
stos
jae
cmpsb
sbb
sbb
sbb
and
fldlg2
jbe
sbb
mov
lcall
out
lahf
sarb
push
xchg
bound
adc
mov
dec
lea
mov
adcl
loope
out
bound
mov
adc
out
fidivrl
mov
xchg
rclb
or
xchg
sbb
les
arpl
xorl
dec
arpl
jnp
mov
sub
pop
or
fcom
out
pusha
mov
aad
mov
fldl
aam
cmp
add
sahf
inc
clc
out
popf
sahf
js
imul
dec
nop
xor
fisubrl
mov
insb
add
bound
and
sbb
cmp
mov
jbe
scas
stos
cmp
push
es
or
cmpsl
mov
je
scas
push
xchg
and
add
movsl
fwait
push
pop
or
sbbb
mov
outsl
scas
cs
sar
dec
scas
dec
arpl
xchg
repnz
inc
movsb
ljmp
adc
mov
push
adc
mov
shrb
cmpsb
sub
cld
loop
flds
imul
mov
int3
sar
stos
push
test
out
int
aad
insb
in
inc
jge
dec
mov
jmp
mov
adc
inc
fwait
xorl
rcl
pop
movsl
mov
sbb
sub
test
addr16
call
mov
inc
add
xor
ficoms
jge
rol
xor
test
call
arpl
and
sbb
notb
push
or
inc
in
outsl
mov
and
push
adc
pop
mov
dec
mov
scas
adc
mov
xchg
cbtw
dec
inc
cmc
jecxz
cld
jno
mov
test
jmp
call
test
ret
addb
jne
adc
sub
add
arpl
pop
cmpsb
std
cli
xor
pushl
and
add
push
jbe
ret
cmpsl
dec
movsl
movzbl
push
dec
mov
fisttps
and
mov
lret
vpmuludq
mov
xor
mov
hlt
mov
jl
pushf
jno
cs
dec
out
in
sub
jne
lcall
fstps
mov
mov
clc
pop
inc
xor
inc
lahf
sub
xchg
test
int3
lea
ss
iret
inc
gs
fcoml
jge
xor
insl
negl
inc
adc
pop
arpl
adcl
jb
mov
je
mov
das
std
sahf
adc
out
xor
xor
pop
movsb
cs
or
sahf
push
xor
out
push
pop
int3
mov
xchg
iret
adc
je
iret
mov
cltd
das
cld
push
movsl
in
xor
jle
sub
je
cltd
mov
pop
rcr
fisubs
testl
cmp
scas
inc
lds
es
mov
xorb
push
int
insb
sub
imul
shl
xchg
fnstenv
xchg
cmc
sub
xor
dec
mov
outsl
mov
aas
sub
add
mov
sub
in
adc
jnp
fs
jae
imul
sbb
mov
xchg
cld
fstps
dec
sbb
jmp
shrl
sub
pushf
mov
fbld
mov
enter
ret
nop
rcr
sbb
bound
in
pop
ret
or
repnz
stos
lahf
cmpsb
adc
push
xor
sbb
push
sub
imul
mov
or
js
add
cmpsb
jecxz
stos
mov
pop
push
mov
mov
or
in
push
inc
dec
mov
push
jp
mov
jg
xchg
inc
mov
andl
ret
jp
sbb
sbb
ljmp
jns
jl
sub
lock
push
inc
int
je
push
cs
cwtl
mov
mov
jl
scas
ds
and
cmp
xchg
pushf
pop
stos
xchg
nop
mov
pop
inc
das
push
sti
pushf
dec
imul
pop
popa
out
es
fistpl
jmp
dec
push
mulb
jle
cmp
ret
cmp
lock
cmpsb
inc
xor
cmovbe
adc
push
sub
cwtl
into
mov
jns
ja
push
lods
mov
and
fisttps
add
lret
cmpsb
test
push
add
dec
add
aaa
mov
icebp
dec
push
fldcw
je
je
mov
inc
push
xor
sbb
addb
sub
inc
cmp
mov
icebp
negb
jle
cld
iret
in
xchg
fidivs
adc
xchg
outsl
jle
mov
adc
adc
scas
and
sub
scas
push
sbbb
push
pop
dec
pop
push
in
pop
les
bound
ret
push
push
ljmp
shlb
fldcw
and
dec
xchg
dec
faddl
sub
inc
push
mov
jmp
sahf
sbb
or
xor
lahf
push
loopne
ja
fstl
addr16
pushf
inc
xchg
pop
jnp
sub
and
sub
and
pop
loope
sti
mov
and
ror
outsl
add
cmp
sub
add
pushf
popf
test
cld
adc
stc
mov
faddl
push
xlat
loop
inc
pusha
cmp
stos
cmp
cmpsl
sbb
add
xor
xor
push
xor
jmp
lods
sti
xchg
mov
mov
stos
xor
lret
dec
ret
shl
outsl
pop
pop
call
jo
or
mov
dec
inc
les
mov
aam
lahf
push
push
in
add
sub
call
dec
jnp
mov
ja
int
cmpsb
mov
outsl
mov
shrl
mov
loope
push
xchg
xchg
inc
adc
xchg
idivl
pop
push
pop
ret
xchg
imul
daa
push
in
pusha
stos
pop
sbb
mov
mov
xchg
enter
sub
mov
lcall
sbb
test
adc
jae
sbb
sbb
jb
cmp
sub
add
ret
rcl
add
repz
es
in
popf
sbb
es
mov
cmc
pop
inc
call
jbe
pop
lret
movsb
bound
nop
addr16
xchg
or
ljmp
xchg
cmc
or
hlt
idivl
inc
xchg
leave
clc
idivb
fbstp
fxch
cld
mov
mov
pop
jg
adc
fcmovne
mov
mov
push
cmp
xor
fxch
negl
or
fiadds
mov
das
inc
scas
jne
or
mov
test
cmp
scas
jo
gs
in
imull
les
in
jmp
adc
cmc
or
or
pop
pop
mov
inc
pop
les
jno
push
stos
pop
popf
call
jne
mov
xchg
cwtl
mov
push
dec
xor
adc
fnstcw
push
sbb
lret
mov
pop
push
jmp
push
roll
rcl
cmp
cltd
sub
mov
gs
sbb
cli
sbb
aaa
xchg
cmp
pop
orb
xor
or
mov
pop
inc
leave
xchg
cld
cwtl
dec
ficompl
scas
dec
and
sub
sbb
adc
movsb
aad
mov
or
push
add
pop
movb
cmpsb
cld
orl
out
loop
loope
push
sbb
mov
jecxz
inc
jo
sbb
insb
jmp
inc
popa
testl
scas
and
mov
clc
dec
rcll
sbb
xor
out
mov
es
sub
adc
jbe
movsl
xorb
jbe
inc
rorl
mov
cmp
jmp
sub
jecxz
xlat
adc
push
jl
packsswb
sti
sbb
mov
push
sahf
push
inc
out
insl
jp
sub
out
pushf
and
jg
mov
xor
adc
dec
paddq
fdivr
addb
pop
pop
call
repz
out
jno
pop
movsl
mov
xchg
ud0
loop
cmc
dec
or
mov
scas
ja
inc
arpl
push
adc
cmpsb
xor
lods
rcll
dec
pop
pop
inc
inc
movl
xchg
dec
loopne
push
inc
adc
jl
sub
xchg
iret
or
popa
and
dec
test
lret
mov
pop
xchg
in
mov
pop
and
jo
into
icebp
movsl
cltd
jp
shll
dec
and
mov
fisubl
pusha
jbe
push
and
loopne
sbb
inc
call
out
call
les
adc
xchg
dec
int3
arpl
dec
popl
pop
add
daa
fisttpll
or
cmp
fldl
roll
je
rorb
mov
dec
inc
out
adc
addr16
xor
clc
imul
in
adc
addr16
adc
sub
mov
xor
xchg
xchg
and
xor
or
and
ror
mov
sbb
jle
push
leave
insb
jne
ja
or
sbb
fisubs
daa
adcl
in
mov
jmp
mov
lret
stos
sbb
add
sub
jns
xor
outsl
lock
les
xchg
clc
fimuls
jns
sahf
pushl
mov
fsubrs
clc
xchg
scas
push
jecxz
dec
clc
fnstsw
adc
pop
or
fdivrs
push
repz
xchg
fucomi
in
add
pop
mov
inc
mov
scas
mov
lcall
lods
mov
pop
mov
mull
push
cmp
popf
cmp
arpl
jp
adc
rolb
sbb
jo
lods
dec
sub
sarb
fwait
adc
mov
sbb
jns
rcll
push
xor
loope
mov
jp
in
stos
sub
fnstenv
shll
adc
sbb
push
jns
xchg
mov
sub
shll
stc
lea
cmp
popf
dec
shll
sbb
dec
mov
push
lret
lea
je
cmpsb
out
xor
xor
ret
icebp
popa
sarb
cmp
mov
inc
push
dec
lods
jnp
cmp
bnd
pop
push
jne
mov
jae
aad
movb
imul
add
xor
pop
adc
xlat
insl
mov
lea
ds
daa
sbb
test
daa
jle
sub
insb
cmpsb
fdivrl
lcall
jge
xchg
mov
cmp
ret
or
aam
cltd
cmp
lock
ss
push
negl
mov
dec
int
jnp
ds
into
stc
cltd
cmp
nop
testl
push
jb
or
pop
push
cmc
and
xchg
jne
adc
mov
lods
push
je
cmp
int3
loopne
loop
out
out
rcrb
xchg
jae
in
jnp
orl
jmp
xchg
inc
nop
push
lret
cmpb
push
orb
insb
xchg
mov
sahf
std
mov
or
cwtd
push
mov
sub
out
pop
jecxz
sub
inc
push
nop
out
pop
jbe
andb
les
xchg
fstpt
inc
push
call
mov
adc
jecxz
outsb
adc
dec
mov
adc
push
pop
or
rcl
mov
or
or
sub
jg
imul
push
dec
dec
jmp
in
fidivs
inc
dec
cmpsl
mov
mov
xor
pop
mov
ljmp
adc
pop
mov
stos
lods
fs
cmp
mull
xchg
mov
mov
imul
inc
push
sbb
inc
mov
cmp
out
cmp
sbb
fs
loop
hlt
and
data16
dec
lahf
roll
push
mov
dec
arpl
jne
jle
pop
fldt
test
xor
sbb
mov
pop
and
pop
int
add
lea
test
icebp
mov
dec
rol
sub
js
in
cmp
sbb
test
fs
jl
fucomip
out
mov
push
mov
repnz
pop
rcrl
aam
fistps
push
das
mov
stos
movsl
stos
mov
push
out
cld
cmp
push
dec
stos
add
mov
push
inc
pop
sbb
inc
ficoms
cmc
aad
cltd
or
lds
mov
aaa
add
fucomp
insb
fwait
mov
je
iret
mov
pop
cltd
cmp
les
xchg
cli
icebp
clc
ja
xor
scas
ds
mov
sub
xchg
pop
sbb
xchg
cltd
jnp
scas
enter
pop
movsl
inc
adc
lea
inc
pushf
push
popf
xor
push
sub
jecxz
addb
mov
sub
xlat
cmpsb
repnz
mov
xor
in
out
dec
dec
xchg
sbb
dec
mov
push
or
jl
insl
inc
imul
inc
loopne
rcrb
mov
pop
mov
jg
scas
cmpsl
add
add
adc
push
pop
adc
mov
adc
pop
lods
adc
push
scas
xor
loope
xor
dec
insb
in
jmp
loop
ret
push
adc
call
sahf
push
sub
mov
push
sub
jg
js
int
clc
inc
xchg
loope
int
aam
sar
sbb
fmull
insl
inc
dec
cmp
adc
mov
mov
aaa
add
xchg
mov
xchg
cli
mov
fmull
mov
xchg
sub
jge
jle
sub
scas
inc
test
sbb
inc
xchg
pop
xchg
dec
jne
stos
mov
idivb
sahf
dec
mov
pop
pushl
sbbl
mov
dec
or
inc
mov
and
and
out
repnz
outsl
js
fimuls
push
fwait
pop
adc
lcall
aad
dec
mov
inc
std
insb
pop
mov
inc
mov
mov
addr16
pop
pop
test
rorl
jle
mov
jae
jg
jmp
xchg
loope
push
xor
fwait
in
aam
inc
push
xor
ja
cmp
xor
adc
das
and
in
test
movsb
lods
repz
cmpsl
mov
addr16
add
cmpsb
mov
jmp
fld
sbb
sti
mov
cmp
xchg
mov
es
and
shlb
jae
fiadds
jg
push
mov
jge
outsb
mov
rorl
aas
xchg
pop
push
jge
fsubr
addr16
inc
rorb
mov
stos
jp
dec
sar
insl
out
push
jg
jnp
out
and
shll
push
nop
mov
and
popf
lret
js
push
sub
fsubrl
aad
hlt
sbb
sub
push
or
test
push
frstor
xor
fmuls
cmp
stc
cmc
pop
sub
add
push
out
idiv
and
cs
inc
jl
and
movsl
leave
aad
nopl
mov
inc
stos
cmp
leave
fwait
or
aam
pop
jb
pop
loopne
call
mov
jno
test
push
dec
js
sbb
xchg
mov
inc
lock
jo
pushf
popa
mov
push
push
jg
inc
push
xor
or
mov
movsl
cli
loope
mov
cli
sahf
inc
iret
pop
lret
notl
jecxz
adc
js
add
mov
and
loop
in
psllq
jne
xlat
in
ret
addr16
pop
mov
sub
inc
pushf
iret
pop
sbb
push
bound
inc
sbb
int
call
mov
stc
sahf
mov
rol
xor
cmp
adc
daa
das
dec
sbb
sti
sahf
mov
xor
jp
sbb
lcall
push
aad
fldcw
das
ds
lea
xlat
fsubrl
movsb
or
stc
mov
xor
sbb
pop
iret
ficomps
dec
push
mov
stc
dec
inc
and
inc
add
fcompl
mov
ds
inc
pop
cmp
pop
les
push
add
fisttpll
dec
mov
rorb
cmp
and
cwtl
rcll
push
mov
xchg
loop
mov
std
stos
les
pop
pop
and
inc
scas
sub
mov
mov
int3
cld
iret
popa
pop
sbb
dec
out
dec
pop
xchg
mov
testb
lea
daa
jp
cmpl
out
enter
inc
iret
test
bnd
xchg
pop
shlb
adc
aam
js
rcl
mov
roll
in
adc
pop
add
js
push
mov
and
push
stos
or
push
sub
outsl
xorw
unpckhps
add
leave
add
add
ret
mov
push
add
cltd
rcl
adc
sub
in
inc
jmp
movsl
cmp
scas
roll
pusha
sub
pusha
movsl
fisubrl
aaa
int
test
insb
xor
nop
enter
nop
or
outsl
jo
movsl
dec
lock
sbb
mov
stc
add
call
ret
push
adc
dec
mov
lods
push
mov
inc
test
add
push
xchg
mov
jle
pop
and
add
jae
fs
daa
inc
dec
imul
jle
jbe
inc
in
test
fs
mov
jbe,pn
xorl
rcrb
cmp
pop
adc
sub
mov
js
mov
test
idivl
mov
and
and
hlt
stos
push
cmp
stos
pop
mov
sub
not
push
mov
stc
dec
and
mov
enter
sub
arpl
imul
adc
mov
pushf
push
push
icebp
shll
fadds
pop
push
movsb
sti
das
mov
add
cmp
enter
lahf
mov
or
outsl
out
loope
inc
imul
or
pop
dec
ss
and
inc
sbb
and
dec
cmp
lods
clc
add
xor
mov
test
inc
and
mov
into
xchg
inc
and
fwait
xchg
xchg
xrelease
sub
mov
push
enter
imul
ficoml
pop
cwtl
idivl
jno
jne
adc
sbb
push
notb
cmpsb
leave
adcb
and
fisubrs
scas
dec
sbb
add
sti
push
push
sub
mov
mov
daa
inc
sbb
imul
adc
stc
lret
les
ljmp
jno
xor
hlt
hlt
mov
add
movsl
pop
mov
insl
jmp
mov
stc
orb
cmp
cmpsl
scas
nop
add
or
or
sub
jg
ss
out
jnp
pusha
sub
insl
scas
iret
mov
mov
add
mov
mov
cmp
xor
push
jl
push
sub
leave
ja
xor
cmpsl
jo
icebp
roll
test
pop
fcoml
jae
imul
out
xchg
outsl
inc
and
xor
rcrb
rorb
arpl
out
fwait
adc
mov
xchg
pop
jecxz
sub
fwait
lods
ljmp
das
js
sub
mov
out
fs
jo,pn
mov
dec
push
dec
mov
fsubs
shrb
shlb
and
dec
or
adc
jg
sbb
jecxz
clc
cmc
lahf
sub
mov
sub
fwait
push
pop
xchg
and
insl
cmp
mov
push
xchg
je
mov
leave
inc
add
test
xchg
jle
xchg
bound
shrb
mov
mov
pop
in
fwait
sbb
ss
dec
xchg
sbb
mov
lret
hlt
dec
push
sub
pop
mov
add
cmp
fistps
mov
xor
mov
bound
jg
adc
pop
sbb
mov
mov
push
or
lahf
xchg
xlat
dec
push
mov
pop
imul
lock
sbb
mov
add
lret
mov
iret
mov
push
cmpsb
ljmp
jb
sbb
and
sahf
arpl
ficompl
pushf
dec
test
jbe
out
inc
scas
add
dec
push
mov
and
fcomps
insb
fistpll
jae
mov
xor
leave
dec
test
xchg
sub
pop
add
add
xchg
and
push
mov
dec
imul
iret
mov
adc
aas
add
js
cmp
mov
dec
add
sbb
in
pop
inc
cli
xchg
pop
out
pop
stc
or
lahf
scas
jp
mov
stos
inc
mov
shlb
data16
popf
sub
xor
mov
loopne
arpl
adc
ja
mov
pop
fmuls
es
pop
jno
ljmp
lods
mov
or
ja
jnp
cmp
sbb
mov
adc
mov
push
mov
xchg
pushf
pop
hlt
lret
adc
pop
aas
jb
jecxz
or
add
mov
inc
inc
sti
mov
push
or
push
adc
stos
scas
imul
imul
test
test
pop
jno
pop
or
adc
cmc
xchg
hlt
jnp
pop
dec
mov
jne
std
test
rclb
outsb
imul
mov
je
fwait
in
out
sarb
push
dec
inc
lea
dec
mov
filds
and
imul
les
cmc
pop
ja
lret
jne
xor
les
push
cmpsl
scas
jmp
add
add
mov
push
and
mov
xchg
bound
jg
dec
int
jmp
idivb
adc
push
fstpl
push
repz
or
mov
aas
nop
xchg
cwtl
dec
shrl
aam
jne
and
push
pop
push
mov
shl
popa
jo
mov
jmp
cwtl
push
jge
xchg
mov
cs
fwait
adc
and
jg
out
push
mov
pop
icebp
add
or
push
out
mov
dec
jnp
cmp
sbb
in
jg
sub
in
mov
insb
pushf
jg
push
mov
add
xchg
fmulp
fistps
movl
push
mov
jb
xchg
xchg
mov
imul
pop
and
movsl
test
jecxz
scas
test
sub
push
xor
xchg
daa
xor
jae
cld
jbe
xor
fisttps
dec
cmpsb
jbe
push
loopne
gs
adc
fdivrl
mov
xor
nop
push
rcr
je
inc
mov
psubusw
shll
fcom
pop
rcr
inc
aam
testb
sbb
nop
add
pop
out
jle
adc
in
lods
decb
pop
sbb
push
xorb
adc
fucomip
fstl
sti
sub
lods
arpl
and
push
es
xor
mov
out
ds
ss
mov
addb
aad
int3
std
push
and
jg
pop
test
repz
mov
lcall
out
or
adc
out
loope
sbb
mov
inc
mov
das
outsb
scas
sahf
push
mov
outsl
addr16
gs
fldcw
outsb
jne
popf
insb
pop
cltd
sbb
jg
js
rcrb
xchg
xor
popf
jno
sub
dec
leave
fldenv
and
and
add
out
or
sub
inc
dec
sbb
dec
neg
aam
and
inc
fidivrl
mov
loope
xlat
stc
enter
jbe
mov
int
cs
pusha
lods
push
push
shll
pop
adc
dec
xchg
fstl
out
jae
or
sub
pop
sahf
test
into
add
inc
lret
and
jg
lret
xlat
xor
mov
mov
mov
in
outsb
mov
push
pop
push
lcall
adc
cmpl
outsl
mov
or
jle
fisttps
test
add
push
loop
xchg
cltd
mov
dec
jecxz
in
andl
inc
pop
adc
jmp
test
outsl
mov
mov
sub
mov
fcmovbe
loopne
lods
adc
mov
cmp
sarb
pop
dec
sbb
dec
iret
mov
test
dec
ljmp
and
mov
sbb
adc
cmc
out
mov
popf
xor
mov
pop
pop
mov
or
arpl
lcall
mov
pop
js
in
fstpt
int
xorl
mov
pop
xor
loope
sub
imul
and
cltd
fcmovnbe
in
aas
sbb
iret
adc
aad
cmp
loopne
and
sub
shll
cwtl
repz
out
stc
push
xor
pop
jae
push
jmp
pop
and
mov
xchg
daa
lock
push
insl
mov
cmp
loope
mov
adc
addr16
insb
lock
mov
cwtl
xor
stos
add
loope
mov
sahf
iret
dec
push
enter
add
cmp
popa
cwtl
lock
jnp
aad
leave
pop
clc
lcall
in
xchg
cmp
dec
xor
adc
stc
jl
mov
mov
iret
mov
loope
ja
pop
stc
pop
ffreep
mov
fld1
xchg
mov
mov
push
or
lock
dec
pusha
push
int
cwtl
out
add
xchg
dec
jne
cs
adc
js
mov
jns
in
pop
lock
inc
inc
sub
add
mov
pop
jl
sbb
das
sbb
cltd
sti
lea
popaw
mov
mov
cmp
in
dec
push
mov
fs
js
scas
in
push
iret
sbb
jecxz
mov
adc
pop
add
xor
pop
inc
fistl
adc
fcoms
mov
call
ds
into
arpl
xchg
cmp
mov
xchg
fadd
mov
and
popf
in
push
adc
push
fdivrs
mov
int3
popa
and
stc
inc
mov
pop
jbe
mov
mov
push
sub
inc
sub
lea
enter
nop
jle
pop
xlat
add
xchg
fstpl
outsl
sbb
add
ljmp
hlt
into
rolb
adcl
dec
and
jno
aaa
mov
inc
jle
sub
adc
inc
pop
decb
xor
xchg
lds
lea
and
icebp
inc
lcall
cmp
in
dec
sbb
dec
fs
cltd
push
out
ret
mov
sub
fildll
pop
sub
pop
andb
adc
mov
repz
and
cmp
jne
jp
adc
dec
xor
dec
and
call
adc
sbb
jmp
fcmovnu
imul
ja
jl
sbb
stos
cmp
mov
cmpsl
cmc
xor
adc
aam
mov
jno
loopne
lods
incb
sbb
stc
lcall
sahf
in
xor
cltd
push
pop
test
shl
clc
sub
pop
mov
loope
dec
jb
aas
jmp
rolb
pusha
or
xchg
daa
xor
js
lock
xor
popa
jge
mov
mov
inc
adc
das
inc
movsb
fwait
clc
cltd
das
push
pop
mov
fs
es
daa
inc
inc
push
outsb
mov
or
inc
lds
shll
dec
sahf
sar
or
lret
push
pop
insb
aaa
lds
pop
mov
std
sub
pop
sets
outsb
xlat
xchg
mov
jnp
jno
test
adc
pop
ds
xchg
adc
push
mov
lahf
push
push
outsl
idivl
popf
jl
leave
stc
arpl
sub
scas
lahf
aad
ja
inc
mov
fiaddl
pop
or
shl
sbb
mov
out
fildll
dec
rcr
and
mov
pusha
scas
pushf
or
sub
mov
sub
sbb
dec
pop
lea
cmp
js
int
in
xchg
and
ljmp
out
pushf
rorb
xor
push
add
or
sub
sub
ret
es
insb
repnz
outsb
xchg
mov
and
cmpsl
inc
scas
mov
loope
out
sbb
lcall
fwait
negb
push
push
push
fisttpll
or
xchg
dec
arpl
scas
push
cmpsl
jecxz
jg
pop
jb
pop
xor
gs
dec
in
xchg
push
icebp
cmp
mov
inc
xchg
into
cmp
push
mov
mov
adc
dec
sti
fcoml
jnp
sub
dec
jle
pop
pop
arpl
mov
dec
xor
jecxz
inc
mov
dec
bt
int3
push
lods
mov
mov
fisttpl
iret
mov
pop
push
inc
aad
cwtl
add
fidivs
fisubl
lcall
lahf
icebp
stos
nop
sub
xchg
xchg
test
repz
jb
mov
sbb
mov
fs
mov
lret
mov
pop
xchg
adcb
and
xchg
mov
cmp
xor
mov
mov
xor
dec
push
fldenv
cmp
cmpsl
xchg
sahf
aam
lea
int3
pop
out
ja
xlat
js
fwait
mov
notb
mov
sub
or
dec
testb
rcr
rclb
sbb
scas
scas
stos
sbb
mov
mov
iret
xor
out
popa
xor
or
in
and
lods
mov
fiadds
outsl
stos
push
repz
mov
mov
sub
sbb
mov
pop
loopne
mov
lds
movsl
les
dec
fs
pop
xchg
xchg
cmp
out
pop
pop
inc
movsl
xchg
inc
sub
inc
xchg
imul
fs
in
add
icebp
push
loope
pop
sbb
imul
aas
mov
add
xchg
dec
and
xor
lret
aaa
imul
in
rol
int
mov
lds
int3
stos
sub
in
mov
test
lds
ffree
cmp
lock
jno
inc
subl
sbb
cs
xor
imul
or
sub
push
add
push
mov
inc
in
into
xchg
test
rclb
mov
stos
aaa
xchg
bound
xchg
pop
dec
xor
mov
push
adc
aas
push
es
jne
mov
pop
pop
sbb
lret
push
je
fst
sbb
leave
scas
xchg
incb
gs
les
stos
adc
jge
lret
lods
inc
jne
fistl
xchg
ds
cwtl
cmpb
sahf
aaa
dec
pusha
jp
dec
push
xchg
pop
dec
and
repnz
cltd
jecxz
in
xchg
xlat
lds
mov
or
add
out
or
push
iret
cmp
or
fstps
sub
ja
jns
test
loopne
inc
call
add
popf
daa
sbb
sub
inc
mov
or
scas
lods
push
ja
test
mov
xchg
xchg
or
mov
xor
shlb
scas
or
lds
aas
cmpb
cmp
int
jne
add
lds
les
push
pop
cmpsl
sahf
mov
xor
sti
xlat
jp
in
jo
in
add
sub
lea
and
mov
mov
jecxz
icebp
scas
test
inc
push
repnz
mov
aas
push
sbb
jo
aad
cmp
pop
jae
movl
pop
xor
sti
loope
es
jmp
pop
pop
sub
incb
lods
dec
mov
and
loopne
push
test
add
and
sbbl
add
mov
mov
add
ret
or
xchg
and
pop
push
inc
push
or
call
lret
xchg
mov
mov
xchg
cmp
sbb
push
xchg
dec
push
sbb
cli
arpl
fstps
push
mov
sbbb
mov
int
xor
inc
daa
xchg
cmc
pop
adc
mov
mov
daa
stc
pop
dec
pop
inc
pushl
repz
sbb
popf
movsb
iret
pop
je
into
push
movsl
mov
cltd
lods
dec
cmp
fs
adc
imul
xchg
sub
cld
arpl
ljmp
out
pop
push
js
dec
adc
xor
loopne
pop
repz
xchg
jb
inc
hlt
cltd
negl
or
es
pop
js
mov
and
imulb
cmc
push
mov
lea
cltd
lea
mov
or
in
pushf
xor
out
push
xchg
pop
or
cmp
sub
jl
mull
outsl
mov
mov
add
sbb
or
sub
or
and
and
lods
push
add
fdivrs
in
leave
lahf
push
mov
ss
sbb
sub
mov
and
loopne
fistpll
clc
mov
cwtl
or
test
pop
ss
push
push
cmp
incb
fs
add
call
and
xchg
int3
and
inc
fimull
jle
push
lahf
mov
bound
fmuls
cltd
adc
enter
push
aad
adc
add
test
inc
jno
fisttps
or
les
cmp
jp
xchg
pop
lcall
jns
push
sahf
xor
jg
cmpsb
mov
xor
jb
loopne
mov
push
cld
and
cmp
or
in
jo
adc
inc
dec
rclb
movsl
sub
lret
lea
adc
dec
mov
cltd
fisttpl
sbb
xlat
scas
jg
fadd
pop
dec
jne
imul
adc
jl
ret
lret
leave
adc
or
in
enter
mov
and
negb
cwtl
sbb
pusha
xchg
stc
push
jmp
ret
rorb
aaa
imul
and
pop
nop
mov
data16
dec
pop
jmp
cmp
dec
or
ds
iret
mov
fcmovnb
imul
imul
cmc
das
push
mov
inc
and
cmp
adcb
mov
mov
or
fs
jne
and
add
stos
outsb
mov
xor
aaa
mov
movsl
xchg
pushf
movsb
mov
fld
pop
cwtl
mov
les
mov
test
outsl
mov
jge
into
adc
cmp
ss
xchg
cmpsl
faddl
lea
sub
in
out
push
aam
sbb
pop
push
mov
add
mov
mov
xor
jne
adc
fdivp
jbe
xor
repz
inc
mov
inc
mov
dec
mov
clc
cmpsl
and
or
mov
mov
repnz
cmc
jg
rorb
push
mov
mov
rcr
mov
xor
jmp
mov
outsb
ljmp
adc
ret
data16
ret
addr16
xor
mov
xlat
and
dec
jae
loope
ds
popl
aaa
gs
sbb
and
push
lds
push
fmull
sbb
addb
loopne
test
fdiv
jle
add
xchg
jne
in
stos
andl
movsb
scas
stos
sbb
punpckldq
ret
lock
mov
mov
ds
adc
mov
pushf
cmp
ss
add
xchg
lock
js
push
inc
aam
mov
mov
sti
cli
cs
push
jmp
adc
lret
aad
push
push
mov
stc
sub
cmpsb
sti
scas
cmpsl
xchg
add
aad
aam
out
je
ds
aas
mov
cli
dec
clc
and
gs
adc
inc
hlt
pop
addl
jae
mov
sbb
rorb
dec
dec
sbb
and
ret
adc
lcall
popa
or
out
mov
or
cmp
jns
sbb
mov
aas
lcall
lret
dec
or
mov
sub
cmc
xor
push
xchg
inc
inc
inc
in
pushf
jge
ret
jle
mov
inc
cmp
int3
dec
push
dec
shll
repnz
add
pusha
pop
xchg
push
push
testl
push
xlat
push
enter
insl
stos
xchg
imul
xchg
inc
idivl
enter
daa
cmp
pop
sahf
mov
mov
sub
pusha
jo
sbb
xorl
inc
mov
push
push
mov
jecxz
or
cld
clc
xchg
mov
out
lods
sbb
testb
inc
movsl
push
mov
pop
loopne
scas
aad
repnz
lcall
push
dec
mov
mov
mov
push
pop
jmp
jge
mov
lcall
mov
sbb
testb
and
adc
stc
dec
or
loope
inc
out
sub
push
rolb
arpl
xor
pop
movsl
dec
cmp
aam
and
std
stos
lret
sbb
neg
ficoms
push
add
mov
sub
gs
imul
int3
data16
stos
xchg
mov
stos
xlat
test
add
inc
lds
popl
mov
sbb
in
lret
add
fcoml
and
aam
insb
fwait
lret
popf
inc
cmpsb
mov
inc
pusha
add
sbb
jmp
adc
sbb
scas
jnp
sub
insl
loope
dec
inc
push
mov
dec
inc
xchg
mov
pop
clc
es
push
jle
mov
add
or
mov
inc
push
call
push
test
push
dec
add
les
inc
out
mov
lahf
mov
into
lret
or
cmpl
push
adc
xchg
dec
adc
add
rorl
imul
mov
out
add
andl
popa
rorl
mov
adc
cltd
adcl
addr16
pop
cmp
loope
bound
cmp
pop
ja
loopne
pusha
roll
mov
repz
repnz
add
lret
cltd
dec
pop
mov
ret
arpl
lods
shlb
clc
xor
scas
mov
push
addr16
cmp
mov
sub
jo
xchg
xor
xor
push
cmp
test
lods
inc
mov
cwtl
cmpsb
pop
pop
sub
iret
bnd
push
pop
or
out
fldenv
mov
ljmp
mov
adc
pop
dec
les
cmp
jmp
sub
call
pop
push
lods
sbb
lock
mov
lret
movsb
icebp
mov
jae
int
mov
push
jg
sub
test
mov
ret
dec
fstpl
rcr
sub
mov
and
jnp
inc
push
mov
lret
lcall
dec
jo
jge
dec
add
jge
ret
lods
pop
dec
inc
in
test
xchg
dec
sub
jmp
lods
fsubl
adcb
inc
lock
xchg
pushl
adc
cmp
sbb
hlt
repz
and
dec
jge
jo
pop
int
cmp
jb
jl
push
int3
out
stos
daa
cmpl
mov
jl
sub
incl
xchg
xchg
sahf
repz
dec
push
jg
div
lret
repz
push
stos
sub
jl
cmp
dec
out
out
bound
test
test
shlb
fimuls
cmpsb
lods
repz
inc
jecxz
lods
icebp
dec
adc
rcl
jge
fwait
adc
or
scas
cmp
pop
insl
test
imul
pop
fucomip
pop
mov
mov
and
adc
lret
and
xchg
jae
sub
cltd
test
test
call
imul
add
inc
xchg
icebp
mov
or
sahf
das
jl
push
xlat
mov
mov
cwtl
aad
or
dec
dec
xlat
push
sarb
cltd
test
mov
jp
cmp
outsl
ficomps
or
pop
dec
push
mov
adc
xlat
and
push
lcall
js
ja
roll
leave
cmp
icebp
adc
scas
pop
mov
mov
divb
ret
mov
std
or
orb
test
icebp
dec
lods
ret
sub
dec
pusha
not
pop
in
cli
pushf
ret
ja
mov
pop
mov
insl
adc
clc
mov
fdivs
push
inc
mov
ja
adc
dec
sqrtps
sbb
adc
jl
and
mov
add
push
adc
stos
mov
pop
in
mov
pop
dec
scas
ljmp
mov
movsl
lock
dec
iret
loope
adc
rorb
inc
adc
xchg
les
shll
xchg
rcrl
fsubl
add
out
xchg
jmp
jp
sub
fld1
sub
dec
loop
jb
js
int3
sbb
push
in
mov
movsb
lods
mov
pop
sti
into
out
jp
inc
pop
mov
mov
in
mov
int
and
bound
js
mov
ss
push
cmp
sub
outsl
jmp
inc
or
xchg
bound
adc
ret
lds
out
inc
rclb
pop
cmp
addr16
loop
xor
loopne
cld
xchg
repnz
pop
testl
ljmp
bound
inc
pop
test
notl
insl
and
incb
test
jecxz
xor
mov
movsl
or
sub
mov
jbe
ss
aad
sti
jns
les
sbb
dec
push
jecxz
mov
inc
sbb
pop
mov
sbb
bound
and
add
mov
dec
push
dec
mov
xlat
rclb
sti
push
aaa
lods
cli
adc
xchg
gs
sarl
ja
inc
xor
and
data16
mov
cld
iret
lds
mov
sub
sbb
add
testl
idivb
sti
frstor
jg
jbe
ja
aaa
xchg
ds
push
std
xor
sub
push
jecxz
mov
je
pop
cmpsl
sbb
xchg
push
xchg
shl
movsb
or
pop
pop
xchg
loop
xor
push
cmpsl
xor
mov
inc
mov
xchg
and
mov
mov
push
push
xor
mov
push
push
mov
pop
pop
shll
outsb
aas
es
push
xor
loopne
cli
imul
outsl
frstor
mov
adc
mov
push
insl
or
jl
iret
adc
xor
push
jmp
out
cmp
sbb
in
lret
dec
or
cltd
mov
outsl
cmpsb
xchg
loopne
add
mov
mov
nop
cmpsb
cmp
inc
clc
hlt
mov
movb
push
sub
sti
xor
jp
mov
pop
mov
outsb
xchg
mov
js
das
fmul
or
fsubrl
push
or
push
sub
mov
ja
or
jne
fs
push
ror
mov
pop
mov
jae
dec
inc
cmp
jl
adc
pop
mov
sub
sbb
out
push
sbb
repnz
je
push
pushf
cltd
add
data16
repz
popf
inc
jb
dec
push
mov
insl
mov
jbe
stos
jae
sbb
out
fsubrs
ret
aaa
leave
pop
dec
push
pop
cmp
mov
mov
mov
inc
dec
pusha
jb
fildll
je,pt
shr
cwtl
fld
js
cmpsl
jge
mov
scas
insb
subb
or
sahf
bound
sub
mov
lods
iret
and
sti
ja
adc
jmp
ficoml
insb
xor
adc
or
fs
pop
aam
testb
cmp
data16
push
enter
lcall
cmc
push
out
inc
jl
ffree
bound
cwtl
pop
mov
pop
mov
sbb
inc
add
and
cli
lock
sbb
vmovhpd
mov
jmp
mov
rcrl
cmp
pop
fisttps
lret
push
aad
cmp
scas
dec
aad
fsubs
lret
mov
sahf
pop
sbb
fdivrl
xor
cmp
mov
push
jp
imul
pop
iret
xchg
popf
xor
ficompl
inc
pop
shl
xchg
jle
addr16
adc
cmp
push
xchg
sbb
lea
pop
mov
mov
loope
je
mov
into
pop
dec
in
shll
sub
ficoms
ja
mov
divb
mov
js
pop
imulb
pop
dec
sub
flds
in
sbb
gs
int
and
movsb
leave
lcall
stos
pop
push
gs
in
loop
imul
nop
and
testl
add
repz
loopne
dec
aas
push
xchg
sub
cmp
dec
cld
xor
mov
cli
gs
cmp
add
sbb
pop
sub
hlt
mov
mov
test
aam
dec
jmp
push
xlat
cmc
sbb
xchg
jne
test
decb
xchg
repnz
xchg
pop
ss
mov
xchg
or
imul
sub
out
adc
sti
adc
out
lock
push
jns
stos
cwtl
cmpb
cli
hlt
add
xchg
imul
repz
jecxz
fisttpl
lret
xchg
cmp
fxch
mov
and
orl
aam
mov
mov
sarb
xchg
pop
std
sti
or
push
ss
test
cmp
mov
ss
arpl
push
fistpll
mov
and
pop
notb
cli
ret
jno
faddl
mov
mov
jmp
dec
aas
scas
cmpb
cli
push
xor
pop
stos
dec
or
cltd
in
je
sbb
fmuls
mov
xchg
stos
push
inc
mov
sbb
imul
push
addr16
out
in
cs
inc
dec
icebp
rcrb
cltd
bound
clc
sti
aas
inc
mov
out
add
loop
mov
scas
xchg
mov
mov
cwtl
adc
cwtl
daa
pop
aaa
fs
out
or
aam
sbb
inc
mov
mov
push
mov
sbb
fistl
imul
inc
insl
iret
repz
pop
jbe
aas
adc
data16
in
pop
pop
mov
push
and
or
jno
fcmovnbe
shlb
dec
and
jb
dec
fistpl
mov
jnp
out
xor
aaa
sub
aaa
or
arpl
cmpl
push
rcrb
cmp
jno
mul
scas
dec
xchg
arpl
push
in
push
loope
aas
std
out
movsb
ljmp
dec
mov
jmp
jle
js
sbb
fsubl
mov
mov
dec
inc
lret
fld1
and
pusha
pop
pop
data16
test
ret
cmp
dec
jmp
cmp
insl
lret
push
add
push
lret
arpl
imul
push
sbb
stos
test
inc
popa
inc
pop
adc
outsl
dec
idivb
imul
rcl
jp
outsl
cmp
mov
sub
out
ds
sahf
std
xchg
adc
or
adc
mov
icebp
movsl
mov
repz
jno
loope
stc
xchg
pop
sub
add
data16
icebp
or
pop
push
xchg
mov
daa
sub
sarl
inc
xlat
sub
rcr
stos
into
push
cmp
xchg
push
push
out
inc
mov
subb
or
into
dec
call
push
mov
xchg
das
inc
xchg
sbb
shlb
dec
cmpsb
test
add
pop
or
addps
push
push
out
repz
les
and
xlat
xchg
mov
jns
xchg
lcall
sbb
add
add
dec
sub
jae
xor
pop
sbb
xchg
jecxz
ficompl
out
fsubrl
mov
sbb
scas
jle
out
stc
addl
jge
sub
add
and
out
arpl
fcomp
sub
mov
sub
jb
daa
popf
dec
repnz
sub
and
xlat
in
pop
out
fwait
lods
aam
int
add
scas
outsl
dec
mov
sub
stos
jnp
xchg
push
vcmpps
add
inc
cmp
xchg
in
push
sbb
dec
cltd
xor
push
sbb
adc
push
or
fmull
mov
pop
mov
das
inc
mov
inc
rcr
mov
popf
loopne
xchg
xlat
cmpsl
leave
inc
jle
adc
jmp
jae
mov
int
cmp
in
adc
jne
ljmp
enter
push
and
imul
pop
ja
outsb
adc
pop
xor
sbb
gs
and
xchg
data16
jmp
imul
subb
or
or
add
fstpl
fldl
frstor
es
cmp
or
or
faddl
mov
bound
jg
sbb
test
cmp
cltd
and
add
test
inc
and
cmp
push
aaa
in
push
iret
push
xchg
iret
cmpsl
inc
sub
cmp
dec
std
repnz
mov
cmpsb
in
mov
adc
sti
dec
or
sub
js
jns
cmpsb
or
fstps
rcrb
fnstcw
icebp
adc
ljmp
push
test
out
jl
xor
iret
jns
or
out
je
pushf
sar
loopne
mov
sbb
jle
adc
int3
cltd
add
in
push
out
jno
into
jg
in
notl
xor
xor
data16
outsl
xchg
mov
pop
or
cmpsb
movsl
sarb
insl
jns
cmp
aad
sbb
push
pop
fimull
data16
fsts
lcall
ret
and
inc
add
xchg
xchg
fsub
jno
movsl
loopne
mov
sub
mov
sbb
sbb
cmpb
mov
sub
and
adc
and
mov
aaa
xchg
imul
adc
das
rcrb
int3
lods
mov
insb
dec
scas
scas
les
and
in
pusha
mov
push
push
test
out
inc
mov
pop
loopne
push
ja
jb
cmp
movb
sbb
push
int
ret
mov
fs
cs
cwtl
jns
pop
rcrl
xchg
and
xor
pop
lods
push
jbe
dec
mov
or
or
ret
lds
sbb
cwtl
sti
arpl
mov
adc
cmp
cmc
lods
aas
fdivl
push
popf
clc
clc
add
and
sarl
sbb
sbb
sub
in
cmp
xor
lret
or
jg
or
push
jg
aam
rorb
and
xchg
lcall
test
inc
aam
adc
in
fcompl
sub
popa
jb
data16
fwait
cmpsb
rolb
call
cmc
outsb
push
es
test
xchg
dec
int3
test
lret
dec
rcrl
pop
loope
inc
pop
out
ficomps
pop
mov
mov
lsl
adc
jno
xchg
inc
mov
adc
pop
cmc
xor
dec
dec
mov
adc
mov
loopne
cld
fdiv
std
shll
sbb
or
lret
rcrb
fdivs
xchg
imul
xor
jne
push
cld
test
xor
xor
xor
and
idiv
sub
out
jo
dec
pushf
jge
xchg
pop
in
ret
adc
pop
scas
dec
ret
aaa
arpl
xchg
ret
cmp
dec
lret
mov
mov
icebp
daa
rolb
into
ret
cwtl
mov
outsl
orl
jb
cmpsl
pop
sub
fsubrs
loope
repnz
jae
gs
stc
xchg
dec
pop
mov
cmpl
cwtl
fs
cmp
into
mov
add
lock
test
es
lcall
jb
jmp
jecxz
inc
dec
mov
push
cmpsb
sub
pusha
jbe
orl
pop
inc
push
enter
sub
cld
mov
adc
aaa
and
ret
push
out
xchg
sahf
sub
decl
pusha
push
jg
add
and
fnsave
scas
jae
inc
int3
add
hlt
cmpsl
jmp
inc
lcall
and
insb
sbb
mov
mov
outsb
jle
lock
lea
sbb
aam
and
adc
fcoms
pushw
push
push
iret
and
and
repz
repnz
cmp
push
xor
pop
pop
pop
push
std
cmp
or
jno
pop
pop
stos
push
and
sub
or
sbb
pop
pop
push
stos
pop
and
cmp
fidivl
ret
stos
lret
test
cmp
adc
mov
cmp
push
vmovhpd
xorb
test
orb
out
insb
lds
mov
and
or
adc
add
xchg
repnz
adc
mov
sbb
daa
ret
in
mov
out
gs
sub
fwait
sub
aaa
fiadds
adc
lahf
push
ds
push
add
mov
movsb
subb
xchg
pop
inc
in
lods
dec
outsb
addr16
bound
push
dec
iret
ficoml
mov
enter
les
orl
sub
sub
lock
push
mov
les
mov
iret
out
add
lock
iret
lret
pushf
mov
mov
stos
fwait
insl
sub
xchg
movsb
cmp
loop
sar
add
or
loopne
xor
aaa
enter
push
js
pop
rcrb
gs
cmpsl
cmc
clc
pop
daa
clc
mov
sbb
add
jmp
clc
jb
pop
ret
or
adc
dec
cmp
addb
sbb
cltd
mov
mov
fs
inc
jg
mov
sbb
xchg
adcb
cmpsl
pop
clc
cs
adc
fbld
ljmp
mov
jecxz
jbe
gs
mov
mov
cld
in
jg
jbe
mov
insl
cwtl
and
sbb
and
idivl
mov
push
xchg
mov
mov
push
repz
xor
mov
cld
mov
jnp
lret
cltd
test
or
mov
push
js
lcall
negb
mov
jns
pop
push
xchg
lcall
ss
mov
cmp
ds
les
mov
sbb
cmp
xchg
adc
adc
fdivl
sbb
adc
shl
out
cs
mov
pushf
shll
jns
mov
mov
fstl
mov
imul
mov
push
push
fs
into
jge
xchg
mov
jbe
and
insb
and
shl
pop
addb
divb
sbb
push
cmp
mov
movsb
aam
je
test
pushf
pop
jg
stos
lods
ret
int3
loope
mov
lahf
hlt
in
push
xchg
push
roll
cmc
add
insb
shrb
dec
arpl
test
jns
loope
xchg
mov
nop
jmp
add
cld
cmpsb
dec
loope
jae
cmc
loop
sub
adcb
int
cmp
mov
aad
or
push
loope
iret
mov
add
fcomip
test
cmpsl
daa
filds
addr16
cmp
cmp
ss
lret
xchg
iret
movsl
int
mov
loopne
or
xlat
in
or
cmp
daa
into
xor
adcl
insl
cs
scas
mov
mov
ss
in
dec
sbb
push
add
xchg
mov
add
fs
jnp
pop
xchg
xchg
adc
pop
out
ljmp
sbb
in
ds
xchg
mov
sub
cmp
imul
mov
fisubl
hlt
and
icebp
ljmp
outsb
lods
out
xlat
xor
inc
push
imul
jl
push
aas
adc
ficomps
pop
and
in
adc
or
cli
out
stos
jp
ja
jae
xor
into
jecxz
adc
inc
mov
xor
xor
out
xor
ljmp
inc
mov
mov
push
cmpsb
roll
enter
stos
insl
jl
fstl
cmp
xchg
jle
scas
cmp
cmp
mov
xor
mov
xlat
mov
xor
jmp
xor
movsl
jne
test
push
in
inc
or
bound
mov
stos
xlat
jecxz
mov
jbe
std
and
test
cmp
mov
jle
addr16
cwtl
es
ja
aad
jl
push
insb
push
push
adc
in
imul
xor
jae
mov
push
movsl
clc
push
aaa
mov
aad
stos
jecxz
and
push
xchg
divb
adc
cmp
movntq
out
jns
ficompl
jne
jns
push
fwait
jl
adc
and
push
pusha
test
push
icebp
sbb
cld
or
dec
mov
lea
pushl
and
adc
std
lret
inc
lds
adc
inc
rclb
mov
mov
sbb
mov
xor
xor
lods
pop
subb
stos
in
sub
loopne
js
fimull
mov
jecxz
push
sti
stos
ja
pop
push
fbstp
xchg
xchg
loope
pop
stos
in
xor
ret
jmp
leave
or
sub
add
xchg
and
xchg
or
sti
lds
mov
xor
adcl
lret
jnp
clc
xchg
dec
xor
cmp
movsl
add
clc
repz
mov
loope
insb
jb
cmpsl
movsb
lock
and
ja
jo
adc
movsb
mov
test
in
push
inc
cli
shlb
or
je
inc
ffreep
jp
adc
cmpsb
int3
aam
daa
shrb
jg
pushf
and
cwtl
adcl
fwait
xchg
xchg
and
aaa
and
mov
call
fldt
add
ss
mov
cmp
or
xchg
js
daa
insl
daa
push
cmp
or
in
push
jns
lret
shll
data16
mov
cmpsl
and
push
mov
or
xchg
xchg
lcall
inc
in
imul
stos
mov
or
call
out
xor
icebp
orb
mov
mov
repnz
insb
xorb
loopne
add
nop
movsb
adc
ficomps
inc
testb
mov
sbb
cmp
loope
or
dec
or
and
add
pop
and
push
ds
jbe
mov
jp
rorl
sti
or
jp
push
jno
sub
mov
mov
clc
pop
xor
ds
scas
outsl
sbb
in
jecxz
cmpsl
xor
out
aaa
dec
jp
cld
jns
fiaddl
cmpsb
mov
out
mov
mov
ss
gs
or
pusha
rcrb
aas
daa
or
movsl
or
xchg
jae
add
mov
push
rorb
and
std
popf
sbb
lcall
jbe
sub
adc
mov
imulb
or
cmp
and
mov
data16
scas
stos
or
dec
mov
jecxz
fwait
xchg
sub
push
push
add
inc
out
loopne
mov
js
aad
sbb
sbb
mov
xchg
repnz
cmp
shrb
push
sub
mov
push
mov
lods
sbb
out
jbe
mov
scas
popf
hlt
clc
test
nop
adc
mov
xor
pop
sub
pop
loopne
cltd
jae
sar
cmp
dec
or
clc
cmc
pop
hlt
inc
es
jb
inc
lods
push
dec
jp
rorb
inc
or
jbe
xor
jae
addr16
shrl
clc
cmp
aas
lret
and
mov
and
lahf
or
sub
cmp
mov
leave
add
xchg
mov
mov
ljmp
and
mov
push
lea
fwait
dec
jmp
sub
jl
jle
jo
pushf
cmpsb
jl
add
movsl
jmp
xchg
inc
fwait
sub
xlat
pop
pop
mov
sub
mov
outsl
leave
into
adc
shl
das
adc
ret
jo
lods
aam
ja
in
ds
in
call
dec
mov
cmpsb
sbb
jmp
mov
sbb
sbb
aam
mov
lahf
sub
xchg
xchg
into
push
popf
push
fimull
imul
xchg
ja
adc
les
loop
push
pop
fwait
push
mov
mov
cwtl
fsts
push
ds
insb
jo
mov
jle
xor
mov
lods
adc
loop
scas
push
rcr
dec
mov
dec
or
aas
stos
adc
xor
jmp
ret
stos
popf
or
jbe
ja
outsb
adc
pop
scas
in
xchg
cmp
sub
inc
inc
movsb
mov
jo
imul
mov
and
dec
xlat
jne
jne
pop
jno
sub
inc
popa
repz
roll
out
pop
mull
inc
pop
jle
or
int3
pop
xchg
mov
dec
test
xchg
jae
sbb
mov
bound
pop
repz
mov
push
or
repz
mov
cmp
mov
frstor
dec
dec
nop
lcall
mov
leave
shr
mov
sub
movaps
jl
push
mov
ss
in
inc
js
mov
loope
lock
nop
xchg
jmp
cli
pusha
lea
push
ja
sbb
lea
add
stc
les
arpl
adc
dec
xchg
xor
mov
sub
or
or
push
cs
sbb
sub
aad
popf
stc
int
cmpsl
imul
sbb
ss
adc
pop
mov
rorb
lds
dec
lock
cmp
rcll
adc
pop
inc
xchg
xor
cmp
push
pushf
faddl
push
push
push
in
mov
inc
test
fs
lods
jge
jno
ja
xchg
es
push
psubsw
aam
popa
mov
xchg
cs
lea
mov
push
push
out
out
dec
test
scas
scas
into
and
push
jecxz
add
mov
adc
xchg
mov
sub
bound
nop
js
sub
adc
outsb
adc
in
ret
jo
jo
faddl
cmp
mov
dec
xor
mov
inc
movsl
add
pushf
dec
insl
data16
and
mov
cmp
pop
orb
jne
push
pop
ljmp
inc
repz
fs
in
and
clc
adc
or
jnp
pushf
add
sub
add
push
jge
pop
push
cmc
out
xchg
loop
movsb
ret
testb
scas
push
sbb
nop
shr
cli
add
sbb
aad
cmp
jnp
daa
adc
lahf
sub
mov
lcall
mov
adc
push
cmp
lea
mov
nop
std
xchg
inc
sarb
test
lret
push
movb
sbb
xchg
jl
pop
push
mov
rol
xor
sbb
inc
mov
les
sahf
sti
movsb
xor
pop
stos
fmuls
lcall
jle
sbb
divb
movsb
push
int
loope
sbb
and
fbld
add
call
push
or
dec
inc
pop
pop
out
rcrb
jae
mov
pop
add
push
hlt
push
in
jns
jmp
push
xor
push
nop
fisttpll
pop
test
movsb
outsb
push
jns
scas
sub
xor
xor
jl
stc
dec
inc
movsl
jg
fwait
jge
xor
add
cmpb
in
mov
add
xor
cmp
stc
dec
pop
movsb
xor
add
fcoml
insl
int
jne
es
mov
test
pop
adc
and
adc
xor
xor
es
xchg
lret
push
fisttpl
add
push
add
int
mov
int
mov
cli
insl
es
popa
cmpsl
or
clc
pop
inc
mov
cmp
cmp
cmpsl
mov
pop
jne
imul
xchg
mov
cmp
aam
push
mov
aas
pop
aaa
and
jmp
xchg
test
nop
rcrb
pop
pushf
xor
add
push
cmp
scas
sbbl
jnp
mov
out
sub
cmc
nop
test
inc
and
iret
mov
mov
or
pusha
stos
and
testb
dec
lock
sub
cmc
add
dec
jnp
test
pop
in
mov
cld
xchg
add
mov
jg
repnz
and
mov
in
das
das
movsl
pop
mov
pop
pop
push
sti
push
cmp
pop
sbb
test
adc
lcall
adc
rorl
ficomps
sbb
or
sub
mov
addl
cli
scas
or
pop
pop
popf
sbbb
pop
test
shrb
pusha
pushf
test
std
mov
data16
ljmp
mov
fnstsw
int3
fiaddl
cmpb
pop
aad
shll
loop
icebp
inc
jnp,pt
or
adc
lret
roll
add
ljmp
out
bnd
jle
lcall
pop
jo
call
fidivs
je
mov
dec
pop
mov
out
dec
push
and
mov
idivb
loop
dec
or
addl
xchg
inc
mov
inc
outsb
scas
sub
fwait
gs
push
cmp
cmp
jne
mov
xchg
dec
jle
aam
cmp
cmc
out
mov
sbb
cs
cs
xchg
dec
push
cli
xor
loope
fs
sub
jp
cltd
insl
pushf
push
or
in
sbb
in
les
loope
movsl
xor
es
pop
sub
bound
mov
popa
decl
movsb
sub
xchg
loop
sub
adc
addr16
mov
out
jp
int3
loopne
pop
into
mov
cmp
xchg
adc
not
or
dec
push
and
roll
inc
test
jmp
pusha
popf
test
pop
mov
sti
add
jmp
dec
not
mov
xchg
lret
stc
es
and
insl
fdivl
xchg
dec
and
movsb
sbb
cld
jae
mov
cmc
aaa
jge
push
shll
push
push
adc
in
rcrl
xchg
and
push
add
jno
repnz
fiadds
adc
pushf
mov
add
adc
lods
aam
mov
xor
pop
loope
push
sbb
cmp
insl
lahf
mov
dec
test
sub
push
mov
pop
pushl
shll
inc
lods
scas
cli
pop
adc
shll
ds
xor
push
dec
mov
mov
push
push
jns
pop
push
bndstx
ss
out
push
cli
mov
cld
jne
xor
adc
cmp
jle
and
push
and
mov
cmpb
or
jns
cwtl
aas
out
setp
mov
lcall
pop
shrl
add
or
je
xchg
rcrb
or
cmpsl
stos
cmc
sahf
outsb
orl
outsl
icebp
in
das
aaa
mov
fs
int
adc
fstl
stos
mov
cwtl
dec
xchg
leave
cs
and
aad
xor
scas
jle
inc
sti
leave
leave
pop
xor
jmp
cmpsb
out
xchg
xor
push
cwtl
fisubrl
inc
cmc
int3
and
movsb
mov
pop
mov
pusha
leave
xor
faddl
jmp
arpl
rorl
jne
stos
notb
adc
shlb
xchg
lcall
mov
xchg
pmaddwd
movsb
dec
sub
in
add
shll
add
lret
into
or
xchg
fs
pop
pop
jo
daa
inc
cmpsb
std
or
mov
loop
mov
jp
fiaddl
xor
adcl
ja
or
push
sub
cli
fnstcw
jle
in
dec
cmp
outsb
push
pop
push
loopne
popf
or
lea
popa
pop
je
out
sub
inc
mov
dec
cmp
push
in
cmp
xchg
popa
push
ss
jg
addr16
pushf
xor
dec
flds
js
in
mov
subl
cmp
cld
cmp
ljmp
push
out
mov
popf
cmc
into
shrb
outsl
and
cmp
lods
test
cmpsl
jl
add
jp
xor
icebp
js
cmp
aad
pusha
addb
mov
es
xor
xor
inc
jp
mov
mov
rcrl
xor
mov
insb
push
pusha
out
sahf
sub
adc
addb
push
enter
mov
popf
pop
jp
add
pop
iret
data16
inc
leave
jl
in
jnp
add
sub
fcomps
std
sub
stos
popa
xchg
push
pop
ljmp
push
add
cli
into
fsubl
push
out
mov
cmp
pop
lock
mov
ja
pop
test
shll
adc
lret
adc
lcall
in
inc
fs
lea
mov
cld
push
add
aad
sahf
cltd
incl
call
es
mov
ret
pop
outsl
sahf
sub
mov
xchg
loopne
cmpsl
test
hlt
mov
stos
loope
push
mov
fucom
sub
cmpsb
or
mov
out
cli
xor
adc
push
out
push
mov
mov
xor
mov
jge
insb
pop
or
scas
leave
jecxz
mov
and
subb
cwtl
enter
xor
mov
out
jbe
inc
insl
movsl
add
cld
xor
icebp
mov
xor
popa
arpl
push
mov
sbb
movsl
add
inc
shll
nop
pop
mov
mov
movsl
scas
push
mov
dec
addr16
jnp
or
inc
paddb
testb
scas
add
out
dec
mov
dec
jnp
sarl
dec
and
sub
js
sub
cmp
mov
xor
stc
xor
into
push
pop
dec
push
cmc
cmp
mov
dec
sbb
sub
inc
push
je
mov
mulb
cmp
out
and
push
or
mov
pusha
and
pop
xchg
in
sub
cli
rorl
cmp
push
pop
push
rorl
sarb
jne
loope
mov
ja
sbb
cwtl
lret
xchg
minps
mov
cwtl
daa
pop
mov
cmp
fsubrl
shlb
ret
xchg
xchg
testb
cmp
dec
adc
fidivs
lcall
sub
out
aam
mov
rcll
mov
insl
repnz
mov
jbe
in
movsb
outsb
sbb
pop
into
mov
cltd
mov
push
mov
or
aam
cmpl
or
dec
lahf
ljmp
adc
lock
and
stos
xchg
xor
pop
aaa
mulb
imul
ljmp
and
fildl
xor
pop
push
xchg
adc
frstor
push
add
adc
pop
sub
aas
or
jl
jge
or
and
push
hlt
sbb
sub
pop
jnp
enter
push
inc
push
les
jecxz
jnp
lock
adc
mov
aad
or
gs
xor
sub
sub
add
popa
cmp
lcall
jp
or
sahf
jno
mov
int3
into
jne
fildll
lcall
sub
lcall
lods
mov
rolb
stc
mov
xor
je
jnp
pop
push
ljmp
add
or
or
adc
pop
pop
in
dec
hlt
stos
adc
cmp
pushf
pop
push
pop
mulb
sub
inc
pop
push
fidivrl
outsb
in
call
jno
imul
adc
mov
or
out
cmp
pop
aam
push
mov
inc
mov
in
fnstcw
rclb
pusha
inc
loopne
xor
sub
adc
jle
xlat
ss
dec
and
sub
dec
sub
ret
insl
mov
sbb
outsl
cli
and
adc
inc
cmpsl
repz
push
loope
js
cmp
sbb
outsb
test
push
jno
test
test
mov
jp
mov
or
push
jecxz
sbb
std
mov
movsb
pusha
test
xlat
fs
fadds
inc
inc
xchg
inc
mov
jns
jp
fisubs
gs
pop
push
outsb
sahf
fstl
or
sub
imulb
pop
lock
testb
bswap
pop
fstpl
adc
daa
lods
xchg
sub
fdivl
daa
add
loopne
div
lods
ret
add
dec
cmpsb
push
in
xchg
jo
jo
stos
fsub
imul
in
scas
sbb
jnp
jmp
stos
or
sbb
sbb
jno
adc
push
in
and
test
fldcw
int
sub
dec
mov
lahf
adc
daa
add
push
sbb
push
repz
imul
jle
cmp
test
sub
lahf
andl
jae
cmp
stc
outsb
sbb
add
jne
lock
dec
xchg
clc
push
enter
rorl
inc
fwait
das
mov
xor
mov
stc
xchg
and
pop
mov
push
xchg
push
xchg
scas
test
cmp
xchg
or
or
imul
xor
loopne
lds
lahf
in
lret
fistpl
aaa
xchg
and
add
inc
mov
lea
cmp
loopne
sub
pop
repnz
pop
andl
cltd
xchg
inc
sub
mov
sub
mov
in
ret
sub
loopne
sub
and
dec
push
jbe
orl
mov
or
outsl
add
sub
xchg
or
outsl
sbb
push
jg
add
sub
aaa
outsl
dec
jmp
and
or
lds
pop
xchg
mov
ljmp
sbb
sub
adc
pop
jecxz
lahf
xchg
popf
sub
scas
mov
push
cmpsb
movsb
inc
lahf
dec
add
out
fwait
in
insb
cmc
jns
push
arpl
xchg
push
dec
sti
roll
push
lods
data16
fisubl
test
xor
or
loopne
mov
sub
shll
shll
loopne
outsb
into
jge
mov
stc
in
mul
iret
pusha
pop
inc
cli
inc
adc
add
loop
int
out
cmp
lods
movsb
test
stos
jno
mov
rolb
sub
jae
pop
fsubrs
cmp
cmc
jp
shrl
jns
mov
data16
je
in
das
pop
mov
aad
hlt
rcll
xor
test
aas
stos
stos
daa
push
imul
ss
sti
jg
push
dec
mov
paddusw
sahf
push
in
adc
out
shll
mov
repz
jecxz
loope
pop
imul
ret
popa
add
mov
popf
fs
stos
sbbb
and
ds
scas
lock
pushf
jnp
push
inc
mov
imul
aam
jo
fwait
leave
test
leave
pop
jne
jmp
sub
sub
jge
je
mov
cs
push
xlat
inc
mov
xor
fadds
pushf
cltd
add
push
std
leave
sbb
xchg
fwait
jo
hlt
jno
cs
cmp
inc
pushf
inc
aas
adc
and
iret
fdivr
pop
sub
lahf
pusha
pop
or
sub
xchg
dec
dec
sti
sbb
orl
mov
push
pushf
xor
jae
jmp
ret
bnd
ret
cmp
ret
sub
stos
repz
scas
aas
xor
xchg
rdpmc
mov
insb
mov
dec
rorb
mov
add
mov
xor
addr16
jne
adc
sub
push
ljmp
lret
stc
out
cmpb
les
mov
sub
adc
fdivrl
loope
rcrl
add
cmpsl
sub
call
inc
cld
test
jl
in
fdivrl
cs
add
adc
ret
in
cs
scas
js
adc
mov
xchg
popf
pop
sahf
push
push
xchg
mov
jnp
repnz
ljmp
jb
push
lret
jl
ss
cs
leave
imull
lods
call
insb
aad
out
jg
and
dec
sti
int
mov
loop
lret
sub
popf
lahf
or
in
or
pushl
or
xchg
sub
xor
push
add
sub
fsubrl
and
pop
lock
add
inc
push
cmp
jmp
xchg
adc
adc
mov
bound
xchg
stos
fstpt
jno
mov
inc
scas
jnp
jae
enter
movsb
sbb
nopl
and
xor
sub
sub
push
jnp
pop
push
daa
jmp
ljmp
mov
ret
pop
pop
mov
cwtl
cmc
xchg
pushf
imul
fisttpll
inc
icebp
mov
xchg
fwait
insb
mov
xchg
shrl
cld
inc
mov
call
pop
loop
int3
inc
sub
xor
push
shll
inc
notl
push
or
jecxz
mov
ret
push
loopne,pn
jne
xchg
ss
les
mov
mov
xlat
xor
loop
pop
pop
add
sub
xor
push
cmp
pop
stc
push
lret
and
aad
cmpb
mov
mov
test
insl
stos
jns
jl
push
movsb
in
adc
mov
jnp
pop
lds
fstl
aad
popf
daa
dec
stos
and
pop
xor
cmp
inc
loop
xor
jbe
jae
adc
loop
pop
cltd
or
mov
cs
mov
pusha
or
xchg
adc
sbb
repnz
dec
mov
sbb
sbb
jl
or
cmc
or
das
or
sub
ljmp
xchg
xchg
mov
sbb
push
push
inc
inc
and
add
and
adc
push
mov
xchg
enter
jp
xchg
pop
add
rcll
mov
or
add
test
enter
leave
icebp
in
call
adc
or
stos
cmc
jge
jg
or
test
mov
adc
bound
dec
xchg
loope
and
pop
cltd
pop
xchg
mov
mov
add
enter
leave
xchg
mov
pusha
jle
js
mov
inc
rorb
sar
xlat
negb
lahf
mov
ss
push
fdivrs
jmp
idivl
fstps
ret
xchg
adc
cmp
sbb
push
sbb
ret
or
and
mov
add
xchg
push
imul
in
insb
cmpsb
inc
adc
lock
inc
cmp
cmp
mov
movsl
nop
in
xchg
and
fucomip
and
in
pop
les
aam
daa
and
push
fadd
adc
push
xchg
mov
inc
aam
adc
jbe
pop
cmp
inc
lea
or
mov
sub
xor
clc
mov
aad
pop
insb
pop
mov
cmp
lret
jl
dec
ds
xor
add
xchg
lea
repz
outsb
mov
stos
inc
repz
cld
aaa
push
or
mov
daa
jp
scas
add
gs
sub
ret
xor
pushf
xor
sahf
icebp
mov
jae
call
push
hlt
addb
jle
popf
sahf
push
add
stc
cli
cmp
clc
cmp
and
sbb
fiadds
scas
cld
mov
dec
imul
dec
xchg
enter
mov
mov
mov
shlb
jae
bound
adcb
add
jecxz
mov
xchg
or
xorl
scas
pop
dec
mov
fdivrl
push
std
inc
sub
pop
outsb
lret
out
or
adc
add
cli
in
xchg
lret
pop
jb
and
mov
stos
inc
outsl
sub
sbb
add
cmpsl
jl
setbe
pop
std
scas
ss
sarb
ret
jecxz
fcmovb
cwtl
not
xchg
je
clc
loop
adc
shll
test
fwait
imul
cmpsl
xor
fwait
xchg
pushf
push
mov
in
dec
push
and
aad
clc
pushf
out
push
cmpsb
dec
mov
inc
add
dec
and
push
or
fldl
and
jl
jnp
cmpsl
and
js
sbb
and
sbb
daa
pusha
xor
jp
xlat
fdivrp
jns
shlb
sahf
xchg
xchg
jmp
or
int3
pop
in
jmp
repz
insl
add
add
test
sbb
mov
into
and
push
addr16
add
xchg
jne
mov
jle
xorl
jnp
jnp
sub
xor
fcmovb
push
jb
fstp
cmp
mov
insb
int
shrl
test
iret
inc
call
sbbb
mov
cwtl
sub
dec
fcoml
mov
push
cmc
shlb
dec
xor
cmp
fs
fistl
mov
add
cmpsl
xor
fistl
and
mov
inc
lea
add
cld
in
sbb
or
call
jbe
out
out
sahf
into
fbstp
or
fidivrl
pop
add
cmpsb
mov
push
movsb
es
jle
inc
xor
pop
mov
mov
adc
xorl
push
xchg
das
mov
outsl
pop
movsb
loopne
pop
mov
xchg
out
jmp
jmp
jnp
loopne
lods
repz
call
xchg
rorb
aaa
mov
imul
and
addb
mov
jns
xchg
dec
jecxz
xor
imul
pop
in
xchg
push
fdivs
xchg
pop
pop
inc
inc
lods
fdivr
xor
in
sbb
dec
mull
xlat
loop
aad
dec
fistps
mov
int3
outsb
xor
mov
int
shlb
xor
pop
ja
jno
pushf
xor
shrb
cmp
dec
mov
lock
push
mov
ret
jg
popf
into
and
fs
inc
mov
ljmp
popf
sub
popf
ss
aam
leave
mov
add
test
nop
inc
iret
push
test
icebp
xor
int
xor
ror
cwtl
xchg
rorb
fistpl
mov
xor
andl
mov
mov
shll
push
mov
sbb
inc
ja
mov
xor
adc
push
sbb
rcr
movsl
in
bound
and
push
mov
popa
test
push
sti
push
jle
dec
in
lret
sub
mov
dec
xchg
sub
xor
push
pop
stos
dec
sub
jp
and
jnp
cmpsb
push
lds
push
mov
push
add
mov
loop
xchg
fwait
mov
sbb
sbb
dec
push
xchg
cld
or
sub
jge
mov
orl
cmp
inc
pop
push
mov
xor
jne
fisttpl
pop
clc
and
cs
rolb
es
arpl
add
cmpsb
dec
add
or
push
gs
dec
rclb
sbb
jecxz
daa
push
jg
xlat
into
inc
mov
repnz
jae
add
test
nopl
mov
jbe
push
mov
ds
push
call
pop
adc
mov
jae
dec
mov
xorl
repz
data16
xor
sbb
sti
out
mov
cmpsl
or
out
xchg
rclb
pop
cli
sbb
sti
inc
inc
jns
cwtl
and
scas
mov
pop
adc
pop
push
xchg
and
dec
mov
xor
xor
inc
push
jecxz
lret
mov
lcall
push
mov
dec
int3
push
in
jb
and
fdivr
inc
filds
xchg
das
xchg
push
xorps
out
call
leave
push
in
stc
xor
pinsrw
jg
fdivrl
mov
jge
out
inc
imul
das
fcmovu
ss
xor
cs
sub
notb
pop
rcr
pop
add
fldt
xor
lcall
xchg
pop
repz
testl
jb
sub
mov
xor
jp
xchg
ffree
in
subb
dec
lcall
add
out
loope
mov
mov
mov
test
mov
nop
mov
aad
pop
jns
and
aad
sub
lcall
sti
inc
cmpsl
dec
fwait
xchg
xchg
arpl
pop
fwait
loop
add
stc
add
pop
test
dec
mov
sub
out
fidivrl
inc
sbb
fiaddl
dec
test
fists
rclb
mov
adc
fbld
sub
jge
pop
sbb
push
jmp
add
xchg
mov
int
mov
imul
cmp
mov
sub
les
daa
mov
xchg
add
aam
insl
adc
fwait
lock
fs
sbb
js
jp
cltd
jl
stos
mov
lods
xchg
xor
sbb
dec
mov
in
fwait
mov
insl
lcall
fwait
roll
sub
mov
movl
mov
add
lahf
faddl
xchg
push
stc
jmp
adc
into
cld
sbbb
push
test
push
psrlq
sub
pop
sub
test
imul
pop
repz
popa
repnz
sub
les
xor
pushf
add
enter
cmpsl
cmpsb
aaa
xchg
and
adcb
popf
sub
cmpsb
int3
xchg
shlb
call
lods
xor
add
sbb
out
push
add
ficoms
faddp
adc
lret
sbb
les
pop
das
pop
sbb
test
and
mov
mov
jbe
xchg
adc
test
hlt
mov
enter
or
stos
fsubs
lahf
push
pushf
outsb
push
in
sub
lret
push
sbb
jecxz
mov
jmp
shlb
jns
fsub
bound
xchg
insl
mov
mov
es
cwtl
push
adc
mov
rorb
fdivs
cwtl
insb
push
dec
frstor
pop
xchg
jecxz
outsb
sahf
cmp
push
add
scas
ja
inc
faddl
mov
cli
push
mov
int3
loope
iret
jnp
mov
mov
mov
daa
and
fldt
stos
arpl
lret
or
stc
adc
sar
setb
cmp
cs
or
ds
add
fdivp
mov
jecxz
iret
adc
repnz
je
loop
pop
pop
les
jnp
adc
adc
mov
push
sahf
movsl
sbb
mov
jne
add
cmpsb
roll
fnstcw
xchg
mov
dec
xor
jmp
lea
mov
out
push
aaa
add
jmp
adc
mov
cmpl
mov
mov
or
fs
lahf
sbb
fldt
sarl
inc
stos
add
testl
mov
xchg
ret
out
iret
das
add
push
push
xlat
mov
dec
dec
push
and
imul
je
repnz
or
xor
mov
jns
pop
ss
and
pop
outsb
icebp
sub
lahf
mov
mov
scas
push
insl
xchg
pusha
mov
mov
fwait
test
fsubrs
aam
xchg
xor
xchg
dec
cltd
leave
sahf
lcall
stc
mov
push
imul
cld
in
in
mov
push
xor
push
mov
push
lods
imul
enter
pop
test
imul
movsl
lds
daa
aaa
lods
aaa
mov
mov
add
sub
out
cmp
pop
adc
push
xchg
jle
dec
sbb
outsl
jo
leave
sbb
push
dec
jno
lods
xchg
lock
test
xchg
adc
ret
test
jno
das
and
ret
push
aad
or
ljmp
ja
movsl
xor
out
sbb
jbe
sarl
add
adc
sub
and
outsl
cmp
adc
in
dec
mov
lock
int
push
orl
stos
sbb
les
hlt
sub
add
add
inc
sub
shlb
jp
fsts
cltd
push
jmp
sub
mov
jmp
sbb
jle
sub
xchg
lcall
in
dec
stc
pop
xor
testb
out
push
movsl
sub
inc
dec
push
mov
daa
repz
add
filds
data16
add
sbb
add
iret
mov
imull
imul
shrl
jae
mov
rclb
push
mov
sbb
test
out
jnp
xlat
sbb
mov
jb
mulb
lcall
xor
push
mov
insb
xorl
and
and
fdivr
dec
inc
icebp
and
pop
fildl
pop
add
sti
inc
int3
pop
stc
xor
add
in
imul
mov
and
js
int
push
sbbl
idiv
add
subl
rorb
push
shr
lret
xorb
push
adc
push
mov
cld
add
cmpsb
in
push
xchg
pushf
sarl
push
mov
mov
in
sub
das
je
add
das
xor
fwait
xchg
stos
sub
xchg
mov
mov
ss
call
cmp
insl
movb
add
push
mov
fld
cmp
pop
xlat
jae
dec
xor
nop
test
cmp
dec
dec
int3
fiadds
mov
jp
insb
mov
jno
aam
repz
ds
add
inc
or
mov
lahf
fdivrs
aaa
fmul
test
test
mov
inc
sbb
loopne
xchg
inc
xchg
shrl
jne
push
into
pop
fs
pop
sbbb
je
dec
roll
jecxz
in
mov
jnp
jg
cli
aam
push
mov
clc
push
xchg
mov
push
xlat
lret
xchg
sahf
push
ljmp
jnp
adc
cmp
ret
sub
jmp
fsubl
mov
or
test
xor
jg
push
pop
aad
mov
adc
or
in
sub
inc
loope
push
sub
sbb
imul
jns
sbb
lret
cmpsb
pusha
push
popa
lahf
rcr
mov
xchg
cs
cmp
dec
mov
mov
mov
dec
inc
or
xor
cmp
clc
arpl
xor
loop
inc
xchg
in
adcb
std
sarb
ret
push
mov
inc
lcall
aam
mov
push
sbb
loopne
shrl
and
popf
mov
iret
adc
iret
aas
js
mov
mov
out
call
and
and
xorb
xor
xor
pop
adc
aaa
int
adc
pop
leave
push
sbbl
push
cmp
fwait
sub
pop
in
push
sub
fstpl
bnd
and
dec
or
push
pop
xchg
inc
push
add
aas
bound
jne
sbb
push
stc
clc
out
int3
shrb
mov
xchg
test
fsubs
mov
out
xor
fcmovu
inc
and
inc
repz
sbb
fwait
cmp
pop
pop
lahf
mov
inc
dec
xor
shl
jmp
cltd
push
cmp
pop
mov
insl
fcomp
sub
sub
mov
cli
mov
xchg
js
inc
xor
jmp
clc
sahf
mov
lods
pop
jmp
ret
iret
dec
push
les
add
test
rcl
push
add
ficoml
lret
xchg
mov
sub
aaa
leave
mov
nop
loope
and
mov
lahf
sbb
in
push
mov
lea
dec
mov
test
scas
ljmp
lahf
inc
and
nop
imul
fiadds
push
pusha
push
sti
dec
lock
inc
test
push
sbb
insb
out
lcall
dec
pop
dec
into
push
xchg
dec
aad
and
inc
push
mov
sbb
pmaxsw
pop
ficompl
or
out
imul
clc
dec
or
lret
xchg
jbe
jecxz
mov
popa
pop
out
insb
mov
pusha
jl
add
push
jae
inc
mov
mov
bound
mov
rorb
roll
cltd
mov
enter
or
and
push
pop
cmp
mov
les
mov
cli
cltd
pop
push
jle
cli
jle
jbe
sahf
fildll
jp
cwtl
decl
lcall
fisubrl
xchg
cmp
mov
and
sti
sub
test
sub
sbb
sub
pushf
mov
lret
insl
lahf
cmpsl
sub
push
out
sbb
lret
movsb
dec
mov
xchg
sbb
into
and
push
sbbl
mov
aam
jg
cld
inc
cmp
xchg
jae
repz
loope
xor
ds
in
inc
xor
jae
push
sub
xchg
arpl
pop
mov
cmpsl
mov
adcb
cld
stos
daa
in
jmp
mov
scas
mov
clc
aad
jno
je
jg
call
stos
adc
jecxz
into
imul
adcb
mov
mov
inc
aas
bound
push
inc
lret
sub
jae
shrl
sbb
mov
cmp
mov
das
ficompl
xor
jecxz
or
shrb
ret
stc
fcomi
imull
push
out
movsb
pop
lea
jae
mov
pop
lcall
xchg
fs
push
cmp
push
jns
push
inc
inc
jnp,pn
nop
xor
leave
push
lret
mov
jne
enter
jecxz
leave
stos
add
jae
sbb
mov
jmp
pop
push
cmp
cmp
jl
lret
jb
ret
sbb
fdivrs
ficoms
cmp
or
lahf
and
pop
sub
scas
xchg
loop
mov
mov
lea
loop
jno
ret
xchg
jmp
popa
or
push
and
sbb
jae
sub
xchg
rclb
fiadds
xchg
cmpsl
lods
imul
xchg
push
push
rcrb
sub
mov
imul
mov
fcoml
movsb
outsb
sarb
sahf
sbb
xor
jle
cld
in
or
adc
addl
inc
ljmp
and
inc
inc
jp
repnz
out
rol
mov
xor
mov
gs
xor
pop
leave
inc
dec
lock
repz
or
inc
call
nop
dec
mov
mov
loope
pop
into
adc
adc
jb
sbb
mov
lock
mov
lahf
ljmp
cmpl
adc
lods
push
jb
ljmp
and
push
fimuls
xchg
dec
ja
cmp
pusha
pop
xchg
inc
adc
mov
xor
or
sbb
cmpsl
imul
jecxz
adc
repnz
sbb
repnz
mov
daa
ret
into
cmp
addb
lods
out
test
test
inc
leave
loop
add
inc
inc
pop
xor
jecxz
mov
fisubrs
push
iret
push
vpandn
out
mov
ret
cmp
outsb
mov
mov
xor
xor
and
dec
or
push
jns
adc
mul
jmp
in
cmp
repz
mov
lret
sbb
add
pop
pushf
xchg
pop
pop
lea
cwtl
jecxz
je
dec
mov
mov
popa
xchg
adc
or
popl
insb
call
notl
stc
dec
dec
and
out
fsub
mov
lods
push
xchg
je
push
fiadds
pop
sbb
adc
pop
xor
mov
into
fwait
pop
ss
mov
mov
ficoml
xchg
cmp
mov
mov
xchg
push
push
mov
pop
or
push
jle
addr16
dec
push
rclb
mov
pop
rolb
xchg
mov
mov
sbb
loopne
mov
cmp
pop
in
inc
lods
mov
test
push
or
inc
jb
subl
cs
scas
scas
gs
scas
dec
push
mov
jo
jbe
jecxz
data16
add
aaa
add
out
ret
stos
jo
icebp
movsl
xor
dec
mov
test
rcrl
mov
pop
leave
lods
or
lods
test
repnz
push
call
mov
sbb
scas
incl
outsl
jmp
push
mov
outsl
lcall
jmp
xor
dec
popf
xchg
push
test
mov
push
cmp
sub
cltd
mov
dec
jp
iret
cmp
dec
and
push
push
pop
int
adc
push
out
mov
jle
xchg
mov
mov
lret
aad
shlb
iret
repnz
mov
jecxz
das
sbb
mov
mov
sub
inc
enter
jns
fisubl
out
loopne
jecxz
sarl
mov
movsb
adc
insb
aaa
push
add
mov
mov
jg
aad
in
pop
sub
movsl
cmp
fwait
lea
or
push
mov
lea
popa
xor
ret
cmp
push
or
mov
xchg
inc
jmp
clc
xchg
lods
jecxz
into
std
loope
sbb
stc
fmul
insb
push
jno
push
es
mov
and
mov
xor
pop
mov
sub
pushf
mov
lds
add
cmpsl
dec
test
mov
les
loop
clc
xor
mov
icebp
cmc
das
inc
fbld
lret
rol
or
fcmovnb
lret
gs
dec
inc
and
hlt
xchg
sub
fldenv
pop
mov
int3
mov
mov
mov
cmp
lods
cltd
clc
jae
mov
jl
movsb
cmc
outsw
cli
aas
int3
inc
popf
cmpsb
dec
sub
pop
push
cld
push
add
ds
add
pushf
test
rcll
mov
sbb
int
in
pop
cltd
lea
rorl
stos
xor
popf
inc
les
hlt
sahf
andb
rcrl
add
xor
sub
fcmovnb
inc
lret
jp
pushf
xlat
sub
flds
aam
int3
xor
or
xchg
push
dec
enter
dec
sub
cmpb
sub
movsb
jecxz
mov
jle
add
jae
sub
je
push
out
mov
push
dec
pushf
mov
push
shr
inc
aad
addb
cmp
lret
jbe
cmpsl
ds
push
stc
pop
push
inc
fcmovu
xor
jp
jnp
sub
flds
sub
add
pop
xchg
sub
push
cmc
out
cwtl
inc
xor
push
xchg
movsb
jnp
movsb
pop
daa
dec
jp
hlt
ret
jge
movsb
inc
push
pushf
dec
or
jo
adc
cwtl
mov
cwtl
fiaddl
leave
push
je
int3
pop
aam
lods
xchg
inc
jp
mov
sub
out
js
dec
lret
fisttpll
mov
orb
imulb
sub
and
sub
dec
inc
xor
push
shll
in
adc
dec
int
inc
nop
icebp
add
aas
dec
fsubr
lahf
iret
xchg
pop
popf
xchg
test
lods
aad
push
adc
push
mov
fwait
nop
mov
lock
idivb
jl
clc
test
ja
in
lea
inc
adcl
mov
cwtl
and
jmp
mov
ds
nop
pop
add
and
pop
mov
jmp
leave
jbe
das
jbe
cmp
adc
mov
jnp
icebp
test
xchg
enter
rorb
fcomip
mov
sbbl
inc
movsl
sub
dec
sub
rolb
mov
inc
add
dec
jmp
push
or
das
mov
idivl
inc
push
mov
cli
leave
jmp
add
int3
mov
pop
ljmp
fsubp
outsb
dec
dec
and
xchg
jge
push
loop
lret
jmp
pop
mov
inc
sub
je
cmpsb
mov
sbb
inc
xor
arpl
gs
push
gs
pop
mov
jbe
hlt
leave
dec
sub
xchg
mov
ja
xchg
adc
aaa
mov
bound
mov
lea
aam
dec
dec
jbe
hlt
jl
roll
or
daa
sub
jg
mov
scas
and
mov
test
imul
inc
std
and
push
cwtl
out
mov
pop
rorl
add
lahf
jbe
fsubrp
sub
pop
xor
pop
xor
ds
sub
popf
cmc
mov
or
shll
mov
inc
sbb
xor
fwait
insb
fldt
std
cmp
sub
cmp
sti
gs
nop
cmpsl
push
cmpb
inc
fmuls
negb
adc
shlb
pop
xor
call
ret
out
pop
fs
xchg
cmp
lret
mov
xor
data16
lock
icebp
mov
jmp
mov
xchg
lea
jmp
sub
xor
push
push
cmp
rcpps
in
addr16
out
or
popa
jae
ja
cmp
cmp
add
and
out
push
pop
fs
dec
mov
orb
jge
xlat
xchg
mov
dec
add
fwait
xchg
lds
mov
dec
setp
loop
lods
outsl
or
mov
sbb
sbb
out
inc
repz
mov
lods
and
insl
ret
xor
jl
icebp
out
aad
push
imul
or
popl
int3
ret
pop
push
daa
xor
mov
adc
int3
mov
mov
xchg
outsb
nop
mov
sub
xor
fimull
cmp
pop
push
dec
push
pop
pop
sub
idivl
adc
fidivl
jle
jmp
mov
arpl
data16
fwait
push
int
ljmp
push
xor
xor
les
jae
mov
cmpb
cwtl
pop
call
ljmp
iret
pop
add
arpl
add
push
mov
jne
jp
xor
mov
in
shr
fs
in
sbb
cmp
push
cmp
pop
cmpsb
stos
repnz
mov
sbb
xor
sbb
stos
mov
in
add
pop
xchg
sub
out
push
lcall
bound
negb
xchg
or
push
sbb
jp
adc
adc
xchg
shrb
mov
fmull
cmp
pop
jmp
mov
jle
push
pusha
lea
sbb
push
out
repz
xchg
je
imul
xor
mov
or
faddl
mov
fcoms
fadds
mov
xor
push
push
sub
pop
cmpsl
iret
add
rcl
hlt
xor
jp
in
imul
andb
cld
scas
sub
lret
daa
mov
push
dec
scas
mov
inc
mov
push
push
xchg
ljmp
mov
cs
pop
push
je
call
xchg
lcall
add
insl
imull
or
sbb
js
xchg
or
dec
mov
push
pop
jno
test
xchg
sub
mov
out
orl
sbb
push
push
aam
inc
mov
and
mov
sub
or
dec
dec
iret
adcb
cmpsl
add
icebp
fmuls
dec
xchg
xor
pop
xchg
daa
ss
ret
add
push
adcb
out
stos
enter
dec
imul
invd
mov
xor
jb
enter
fs
mov
es
fwait
in
and
addb
adc
fisubrl
and
and
stc
mov
icebp
js
cwtl
aad
jne
in
adc
sbb
xor
repnz
ret
scas
xor
pop
xchg
mov
mov
pop
sahf
xor
and
in
jmp
mov
jmp
adc
repz
aam
inc
mov
push
fwait
jb
call
pop
fwait
aam
ret
jle
clc
mov
adc
inc
and
scas
sbb
cmp
bound
jge
xor
inc
xor
mov
leave
sahf
andb
or
out
inc
divb
adcl
jb
in
mov
incl
cld
sti
rcrl
and
fisttps
mov
hlt
jl
outsl
in
push
jle
pop
xor
cmpsl
add
clc
push
adc
adc
mov
cmpsl
or
filds
bndldx
lea
xor
lret
lods
test
movsb
push
sarb
mov
sbb
adc
incb
adc
jp
adc
repnz
xchg
gs
mov
pop
into
xchg
push
add
in
pop
subb
fldlg2
sbb
push
out
fnstcw
pop
push
mov
ret
imul
mov
test
int3
stc
adc
cwtl
js
jmp
mov
test
out
adc
adc
mov
enter
inc
pushf
sbb
and
adc
inc
clc
mulb
fs
lods
daa
push
cmpsl
test
lock
es
int
repz
push
mov
mov
dec
xchg
ja
cmpsl
in
adc
sub
loopne
inc
stos
inc
lock
pop
mov
mov
xor
fnsave
jbe
test
int
insb
jb
xor
test
je
insb
lahf
xor
loopne
ja
xchg
test
adc
cmp
sbb
xor
je
dec
loop
sub
lds
mov
cli
lret
repz
adc
pop
dec
pop
scas
mov
rcrl
dec
call
xchg
push
dec
jb
mov
xlat
or
mov
jnp
pop
mov
and
into
leave
mov
repnz
jmp
jns
lcall
outsb
push
cli
test
cld
push
inc
mov
mov
inc
mov
icebp
cmp
jae
xor
sub
testb
cmp
lock
mov
outsb
mov
or
ss
mov
jl
lcall
outsl
scas
out
push
popl
inc
cmp
bound
dec
jl
pusha
jbe
and
mov
jae
bound
sti
push
add
in
fucom
fidivl
mov
push
lret
pop
and
rolb
or
xor
cmp
xor
cmp
scas
mov
push
std
outsb
sub
lods
cld
es
aaa
cld
inc
rcrl
xor
xchg
adc
xor
sbb
xor
mov
xchg
xchg
adc
inc
dec
fsubrl
repnz
arpl
shll
loop
pusha
inc
mov
mov
or
mov
hlt
lahf
jne
sbbl
int3
test
loope
popa
xor
adc
sub
and
push
dec
movb
lcall
mov
cli
in
adc
xchg
pop
mov
push
jnp
pop
stos
push
xor
jbe
mov
and
je
push
insb
fdivr
lods
pop
sbb
testb
out
ret
syscall
decb
and
iret
inc
jl
idivb
adc
sbb
das
mov
pop
loop
aas
sub
mov
add
adc
fcompl
mov
jo
cmc
inc
xchg
and
loopne
xor
shll
in
jns
pop
push
andl
pop
push
iret
imul
mov
pop
and
subl
push
mov
shr
or
std
mov
fsubr
mov
notb
push
lods
adc
cmc
ljmp
mov
cmpsl
jle
mov
push
add
enter
rcrb
push
ret
scas
pop
mov
add
outsb
fisttpl
cmp
xchg
push
cmp
sbb
dec
fyl2x
lcall
lahf
push
les
and
xor
xchg
mov
cmc
lock
mov
push
xchg
dec
movl
push
loop
sbb
enter
xchg
scas
icebp
or
cmp
js
rcrl
call
lock
sahf
or
xchg
push
jmp
mov
cmpsb
gs
sub
or
pop
jno
into
ljmp
scas
test
pusha
stos
stos
push
and
cmc
add
out
aad
inc
leave
add
cmp
fsubrs
xchg
adc
push
mov
and
lea
or
enter
loope
pop
test
shlb
mov
je
insl
add
mov
jae
pushf
dec
dec
inc
and
gs
and
pop
inc
insl
jmp
scas
sub
xor
enter
mov
lcall
out
ja
sti
xor
fstl
int
mov
inc
sti
lods
sbb
ret
ja
pop
or
lods
mov
outsl
or
mov
rcr
pop
cld
inc
and
fiadds
ret
mov
mov
aam
shlb
jbe
insb
dec
mov
testl
fwait
test
or
jne
sbb
mulb
shlb
cld
push
mov
test
or
and
cmp
gs
daa
xor
pusha
clc
push
in
sahf
in
jb
call
adc
fldcw
inc
add
mov
mov
es
cs
int3
inc
fwait
out
call
shrl
jns
xor
or
div
dec
xor
mov
lods
imul
sbb
leave
test
sbb
test
nop
test
std
lret
call
adc
test
cmp
arpl
cmp
xchg
popf
test
inc
push
repnz
cmp
jnp
jg
stc
scas
in
cli
shlb
fists
test
push
xchg
mov
mov
fiaddl
jno
shrl
sbb
hlt
mov
insl
cmc
or
stc
mov
sub
int
xor
scas
bound
int3
jge
jnp
ja
pop
cmp
xchg
mov
cmpb
or
xor
inc
xor
stc
pop
ljmp
cwtl
icebp
cmp
mov
jl
test
add
and
shrl
jb
mov
nop
add
push
in
add
dec
daa
cmp
adc
jp
ljmp
pop
lock
mov
loop
insb
fwait
or
test
sarl
stc
daa
stos
cltd
daa
mov
faddp
movsl
pop
xchg
xchg
cwtl
xor
sahf
mov
mov
scas
cmc
mov
xchg
adc
popf
mov
push
mov
out
ret
rolb
pop
dec
or
je
mov
mov
jae
push
cmp
push
inc
mov
icebp
sti
stos
sahf
push
cmp
ffree
dec
push
enter
jnp
adc
out
lret
cwtl
mov
push
or
gs
dec
jo
mov
xchg
out
sbb
imul
dec
dec
and
ljmp
pop
pop
xor
push
inc
and
cmp
mov
out
cli
xchg
add
cmp
cwtl
sarb
cltd
jae
or
adc
xchg
repz
pop
mov
push
sbb
cmp
inc
stc
jae
jp
xorl
pop
adc
pop
in
pusha
in
cld
ret
jnp
cmp
add
icebp
and
sub
inc
jge
xchg
cmpsl
test
jne
mov
sub
in
dec
cmp
rcrl
xchg
push
and
mov
ss
pop
fsubp
repz
jmp
sarb
insl
ja
xor
jp
ret
scas
ror
xor
movsb
ja
es
or
mov
pop
push
mov
cmpsb
sbb
jl
out
mov
inc
xor
daa
inc
fwait
movsl
repz
test
les
dec
adc
or
push
pop
lret
mov
xchg
cmp
mov
jle
test
mov
data16
in
lcall
jp
pop
mov
mov
xor
xlat
mov
adc
call
inc
cmp
rclb
pop
pop
jbe
and
movb
push
es
adc
ds
mov
in
cld
scas
and
sbbb
movsb
push
mov
pushf
dec
jmp
pop
xor
into
adc
cmp
xchg
aam
add
xchg
pushf
pop
insl
fcompl
iret
or
xor
popfw
dec
or
int
mov
shl
fsubl
pop
and
mov
bound
outsl
lret
xor
sar
mov
test
jl
adc
xlat
insl
lea
xlat
mov
push
jecxz
jecxz
push
hlt
mov
inc
adc
fnstcw
pop
push
scas
lods
push
add
xchg
sbb
push
enter
xor
test
cli
lret
addr16
and
lcall
mov
iret
ds
jg
inc
bound
fimull
scas
and
sub
lahf
add
stc
xor
xor
mov
pop
ss
aas
mov
sub
sarl
xor
xchg
std
jns
fwait
mov
add
push
mov
ret
dec
mov
flds
xor
push
nop
xor
xlat
jp
jecxz
mov
test
scas
mov
inc
mov
xorl
rolb
je
movsl
mov
inc
jne
xor
std
lcall
test
into
shl
gs
dec
pushf
rcrb
adc
enter
xchg
call
jns
movsl
mov
pop
or
jecxz
inc
inc
lds
xor
jmp
sub
adc
cmp
mov
sbb
jmp
xchg
pop
cmpsl
and
mov
cmc
stos
jle
popl
sbb
cmpl
test
xchg
jno
lret
decl
or
and
mov
xor
add
iret
dec
jge
sub
mov
jb
nop
pop
or
sub
fidivrl
or
jne
in
dec
pop
hlt
cmp
mov
test
mov
testb
xchg
pop
or
rcrb
lcall
sahf
dec
lods
mov
sbb
in
push
lret
push
adc
mov
mov
mov
add
movsl
gs
sub
adc
jne
in
imul
shrb
sbb
push
daa
pop
lret
shlb
xor
shll
dec
jno
xchg
in
les
sbb
loopne
push
mov
cmp
inc
jle
dec
mov
out
repz
sar
jae
push
fs
shl
andb
sti
cmp
jno
push
push
ljmp
and
lea
outsb
xlat
and
add
lahf
shrl
adcb
testl
dec
mov
pop
pop
fprem
xor
jp
in
lret
mov
fsts
pop
sbb
out
add
push
fwait
ret
insb
stos
adc
cmp
adc
add
xchg
sbb
cld
inc
xor
cmpsl
mov
push
jle
rorb
ljmp
fadds
mov
stc
xor
mov
mov
test
js
or
pop
sahf
fisttpl
add
icebp
ret
sbb
jno
in
stos
jns
ret
jo
test
out
jne
add
fwait
int
mov
divl
jb
dec
push
lcall
addr16
fs
andl
orb
test
adc
lods
scas
pop
cmp
mov
fnstcw
sbb
mov
fs
data16
gs
and
jae
mov
jne
sub
xchg
cmp
ret
out
pop
int3
push
add
scas
lods
cmp
xchg
js
add
inc
js
xchg
lcall
loopne
lret
mov
gs
inc
push
mov
push
mov
inc
jecxz
push
shr
mov
lret
sbb
lahf
sahf
jno
pop
inc
cwtl
aad
pop
test
loop
addr16
faddl
xchg
fidivs
shlb
mov
or
fisubrs
call
gs
and
je
je
inc
insb
mov
or
out
in
jg
fnsetpm(287
fldcw
mov
mov
jge
daa
divb
push
in
sbb
lds
add
dec
outsl
loopne
mov
jns
rcrb
mov
xchg
ss
dec
xchg
push
add
movsl
add
push
xor
sbb
push
cmp
jp
das
scas
mov
pop
dec
lcall
aad
mov
lock
into
outsl
fmuls
push
in
xor
lret
sub
idivb
movsb
sbb
sti
mov
xor
xlat
fsubrs
and
dec
ds
sahf
int3
xor
inc
cmp
imul
sub
jns
mov
sti
add
and
xchg
push
add
flds
jle
mov
fxam
and
lahf
mov
insb
lret
jo
movsb
test
in
pop
adc
cs
cmp
xor
roll
dec
and
in
adc
add
sub
sub
dec
add
ljmp
cmp
and
mov
mov
dec
cmc
push
xchg
popf
sahf
stos
test
push
xchg
mov
mov
andb
mov
mov
lcall
jbe
aad
push
mov
mov
imul
and
ljmp
add
sbb
pop
jb
xchg
imul
cmpsl
jmp
stos
cmp
push
push
inc
jae
jnp
xor
les
mov
cmpsb
mov
ss
inc
in
mov
pop
or
mov
ficoms
mov
xchg
ds
daa
movsl
or
sbbb
shll
in
out
popa
cli
fwait
pop
pop
idivb
js
stc
or
inc
xor
les
int
mov
fnsave
mov
push
inc
push
sbb
fisubs
ja
lods
fdivp
mov
or
mov
ret
stos
aam
pop
or
push
bound
pop
test
push
das
movaps
xchg
loop
pop
xor
std
in
lods
movsb
add
addl
xchg
add
mov
xlat
movsl
push
mov
out
cmp
lock
fildll
lahf
add
dec
pop
sbb
movsl
adc
adc
xorl
jmp
hlt
adc
mov
pop
ss
mov
test
aaa
sbb
mov
arpl
js
push
xlat
pop
jg
sarl
dec
loopne
loopne
jg
das
aas
or
xlat
push
jp
pop
xchg
xor
ret
in
das
je
fcoml
mov
mov
push
js
pop
mov
out
ret
mov
mov
test
sbb
xchg
popf
pop
dec
jo
or
fimuls
xchg
xor
cmpsl
insl
aam
cmp
fdivl
jae
shlb
pop
insl
imul
jmp
xor
mov
inc
jmp
inc
dec
and
or
mov
xchg
pop
daa
ss
ja
aaa
in
mov
push
ror
cmpsb
cmp
or
shl
and
in
scas
mov
push
push
das
gs
xchg
in
mov
loopne
inc
lds
into
daa
jne
or
xlat
cmp
mov
add
xchg
jae
in
popa
sbb
ljmp
es
dec
cmp
dec
inc
adc
mov
sbb
mov
and
daa
cs
and
add
mov
mov
inc
pop
sub
dec
hlt
mov
movsl
and
push
or
mov
add
fistl
imul
pop
stc
inc
push
int
fistpll
outsb
and
in
fisttpll
inc
or
in
mov
mov
fsubrs
loopne
stc
jbe
cmp
les
push
out
jbe
in
xchg
fisubl
frstor
mov
aad
test
gs
jbe
inc
sbbl
sbb
pop
mov
jle
adc
mov
xchg
rcr
jp
ds
or
hlt
xchg
pop
scas
imul
out
mov
mov
out
dec
mov
ror
scas
mov
mov
xchg
nop
adc
lods
or
sbb
ret
push
call
push
cwtl
mov
mov
cltd
fcmovu
fiadds
mov
xchg
jae
imul
jnp
int3
imul
xchg
jl
push
or
mov
adc
lea
arpl
loop
movsb
xchg
pop
ret
jne
mov
pop
lods
cmpsl
push
xor
daa
add
push
xchg
sbb
push
push
into
push
ljmp
repz
divb
ret
lret
int
mov
scas
mov
mov
inc
jno
inc
dec
mov
into
leave
mov
xor
xchg
outsb
lea
and
mov
add
or
or
pop
mov
push
rolb
add
push
mov
pop
push
push
pop
cmpsl
sub
adc
cmp
mov
jmp
rcl
mov
cmpsl
sub
loopne
js
ret
test
je
cmp
orb
cwtl
iret
mov
jg
push
mov
int3
pop
xchg
lahf
adc
int3
push
aad
incl
push
rclb
pop
stos
dec
hlt
imul
fcomps
in
pop
sarb
push
dec
lcall
sarl
leave
fsubl
or
shlb
adc
aam
cmc
pop
or
adc
mov
jle
pop
pop
adc
xchg
push
mov
in
add
sub
pusha
mov
and
and
mov
xchg
push
and
pop
push
rorb
push
mov
jne
test
outsb
xchg
mov
sub
std
jle
or
test
jb
pop
repz
xchg
or
subb
pop
push
daa
push
popf
mov
push
insb
stos
or
ret
movsb
and
inc
inc
clc
push
sar
mov
mov
popf
arpl
or
jnp
cwtl
xchg
arpl
cmp
adc
insb
xchg
cmp
loop
enter
and
in
fidivrs
jl
mov
iret
in
push
int
shlb
xchg
test
sub
js
mov
mov
jl
xor
pop
cmpsb
mov
jmp
xchg
mov
sbb
nop
xchg
and
aaa
andb
clc
dec
lcall
int
sbb
push
xchg
cwtl
xlat
cmpsb
enter
cli
lret
sbb
dec
test
fistpll
adcb
in
or
sbb
ja
mov
clc
mov
js
xor
mov
or
orb
lea
xchg
sub
clc
in
mov
notb
ret
aad
ja
lcall
cmpsb
adc
cld
movsb
das
ss
scas
es
cmp
pop
add
or
sub
gs
pop
sbb
imul
fisubrl
xchg
pop
fwait
arpl
xchg
aad
sbb
das
sbb
inc
mov
test
sarl
push
or
jp
stc
push
je
push
aas
test
xchg
jg
sub
gs
loop
loope
pop
inc
pusha
mov
nop
scas
in
call
lcall
fisubrs
push
adc
adc
pushf
cwtl
mov
std
jl
pop
and
sbb
cmc
dec
idivl
ficomps
mov
adc
xor
arpl
mov
xchg
xor
loopne
sbb
and
clc
xchg
lock
or
sbb
inc
adc
int3
jae
lods
aas
mov
mov
aaa
mov
fs
sub
push
in
mov
inc
scas
ljmp
outsl
cltd
popa
call
pop
arpl
cmp
dec
subl
neg
enter
int3
mov
add
jp
out
jae
rcrl
or
push
cmp
sbb
dec
loope
xchg
jg
std
mov
sub
and
mov
or
mov
inc
cmp
test
pop
or
es
push
lock
push
jl
lahf
xchg
xlat
mov
push
push
mov
dec
pop
popa
mov
dec
cmp
or
push
in
inc
sub
pop
cmp
xlat
dec
xor
xlat
mov
ficoml
mov
push
jb
rolb
jns
leave
lret
dec
mov
push
test
out
xchg
inc
mov
cltd
cmp
gs
xchg
out
rcrb
cld
aaa
dec
imulb
rorl
lods
insl
mov
adc
xor
inc
mov
nop
js
jp
mov
jbe
ret
insl
clc
push
xlat
jg
movsb
out
xor
inc
add
xchg
cli
lock
daa
push
xorb
rorb
cwtl
mov
addr16
aas
lea
aam
sub
ret
aas
fld
lcall
mov
xchg
popf
pop
dec
lret
sub
popf
test
cltd
adc
mov
lret
nop
loop
orb
sub
jp
test
mov
push
rolb
imul
add
fincstp
xor
mov
test
js
test
adc
mov
addr16
jecxz
insl
inc
push
sbb
push
inc
dec
mov
jno
jns
mov
sbb
ret
push
push
stc
sbb
dec
mul
sahf
testl
dec
mov
mov
iret
popa
mov
arpl
rol
pop
jne
mov
push
cld
sub
sub
mov
enter
dec
xchg
js
scas
aam
test
jmp
mov
daa
lea
aam
fdivrl
sub
adc
dec
jbe
cmpb
ss
adc
mov
dec
sub
ret
daa
movb
out
mov
lret
jg
dec
xchg
out
xchg
sti
push
outsl
push
push
jg
xchg
add
jg
cmp
and
jo
je
insb
xor
aad
fcompl
sbb
jecxz
xchg
xchg
jl
aas
int3
lret
dec
notl
lea
dec
mov
fmul
out
adc
ss
inc
loopne
cmpsb
ds
push
fistps
cmpsb
rcll
lock
outsl
xchg
ss
pop
push
push
cwtl
adc
nop
inc
cmc
and
push
mov
sub
mov
jg
out
jg
lahf
sbb
fwait
lea
mov
or
dec
jnp
lods
popa
push
and
cmp
pop
loopne
nop
test
sub
and
jns
xchg
repz
fwait
test
xlat
out
loope
mov
jecxz
mov
add
xchg
pop
or
inc
mov
aas
pop
jns
or
inc
dec
imul
aaa
sub
pop
test
xchg
or
xchg
xor
mov
sbb
sub
mov
mov
dec
push
lods
mov
sub
pop
aam
adc
or
insl
or
arpl
xor
push
or
js
sahf
int
stc
mov
add
mov
mov
cli
scas
roll
out
sar
xchg
cs
push
bound
pop
mov
push
test
je
jg
xchg
mov
add
imul
mov
out
xchg
es
xchg
sub
push
push
ljmp
popa
xchg
out
sub
rcr
stc
xchg
inc
ds
gs
mov
insb
out
adc
jecxz
negb
adc
cld
xchg
in
xchg
test
test
repz
mov
aas
or
dec
addr16
mov
stc
rcrl
das
mov
dec
out
leave
mov
pop
pop
mov
mov
sahf
cmp
add
sbb
push
pusha
fisubrl
push
aas
sub
movl
je
cmp
mov
hlt
shl
ret
loope
ja
outsb
jne
jge
cmpl
mov
test
adc
sub
and
pushf
ds
fwait
sub
cmc
lahf
fsubrl
or
loope
dec
ljmp
leave
stos
lods
xlat
in
int
std
bound
out
mov
or
lock
je
test
pcmpgtb
sub
je
mov
loop
aad
mov
mov
aas
ret
roll
mov
xlat
subl
movsl
insl
shll
xchg
pusha
inc
mov
sar
sbb
mov
sbb
pop
jl
mov
leave
repz
dec
adc
cmp
notb
jno
idivb
add
shll
add
pop
xchg
cmc
push
fisttps
xor
jmp
push
mov
addr16
int3
pop
and
ror
ds
std
cmc
lods
std
stos
imul
loop
dec
pop
test
adc
inc
push
mov
sbb
add
insl
aam
mov
jle
in
popa
and
popf
sub
mov
fs
sub
inc
xor
pop
dec
cmp
inc
pop
cmpb
sbb
ret
xor
aaa
insb
or
mov
lods
fcomps
nop
add
movsb
je
lss
cli
das
jbe
inc
int
dec
jno
or
leave
mov
sbb
push
pop
sub
jmp
mov
jo
cld
loopne
insl
icebp
jle
sub
sbb
movsb
pop
sub
pop
scas
sub
fwait
imul
xchg
mov
inc
sbb
std
sub
insb
adc
mov
stos
scas
adc
fildl
inc
dec
push
xchg
push
or
mov
cmp
out
mov
jnp
fidivs
push
mov
pop
inc
push
insb
dec
fs
outsl
in
inc
mov
cmpb
ret
mov
and
jne
push
ss
insb
imul
and
repnz
xchg
nop
inc
mov
mov
xchg
and
addr16
jnp
aaa
imul
push
mov
xchg
in
xor
xor
dec
push
or
jbe
sbb
stos
and
mov
xchg
rcrl
mov
and
xchg
outsl
push
loopne
bnd
das
lcall
mov
push
xchg
push
push
mov
ljmp
aaa
lcall
cmpsb
xchg
ljmp
test
stc
sar
cvtpi2ps
pop
mov
add
cmp
adc
dec
pop
jg
out
dec
mov
enter
pop
mov
fistl
insl
push
cmpsl
fucomip
lret
sbb
leave
sbb
mov
jb
push
dec
xor
stos
dec
push
inc
test
cs
fwait
sbb
pop
ficomps
cltd
ror
fwait
add
inc
sub
dec
adc
fwait
mov
js
adc
dec
xchg
fcompl
sbb
loope
mov
lock
adc
out
orb
and
jmp
xor
stos
dec
cltd
sbb
mov
adc
cs
fiadds
mov
sarb
idiv
repnz
fwait
cmpsl
shr
nop
fisttps
jno
jnp
cwtl
in
lahf
rep
cltd
inc
test
pusha
mov
stos
in
push
or
shrb
mov
xchg
les
sarb
icebp
movsb
mov
ljmp
mov
rorb
inc
add
out
push
repz
je
js
in
mov
xor
jmp
lods
call
fstpt
mov
in
lcall
loope
cwtl
add
mov
mov
pop
loope
mov
cmp
mov
xor
insl
jo
aad
mov
pushf
enter
bound
lods
ret
push
pop
fmull
adc
or
xorb
repnz
xlat
push
mov
inc
mov
jbe
dec
jp
dec
ret
cmpsb
jo
cmp
outsb
and
leave
lret
mov
lahf
je
arpl
and
pop
or
cmp
mov
out
mov
outsb
in
rcrl
andl
cmp
jg
adc
popa
jae
mov
sbb
or
popa
loope,pn
pushf
mov
rorb
cmpsb
jmp
sbb
movsb
add
jecxz
adc
jne
lea
jmp
iret
xor
in
movsb
pop
or
addr16
pextrw
mov
pop
xor
cmp
xchg
call
pop
inc
mov
pop
pop
cmp
in
dec
mov
adc
pop
xchg
jns
sub
pop
jno
shl
inc
rcr
xor
xchg
mov
repnz
mov
mov
xor
jnp
jae
ror
xor
sub
pop
sub
cmpsl
mov
pop
pop
dec
scas
out
iret
imul
jl
pop
scas
adc
imul
sbb
fcomps
or
mov
lods
push
or
dec
sub
mov
inc
iret
pop
data16
mov
xchg
cmp
mov
ss
inc
xorb
js
add
mov
out
push
jne
out
dec
scas
push
jp
loopne
ffree
xlat
mov
mov
fldl
mov
stc
out
std
je
jo
inc
mov
push
les
lock
repnz
or
and
pop
push
push
push
mov
xor
lods
stos
hlt
cmp
enter
adc
jae
daa
jl
clc
fstpt
rclb
test
rcrb
ds
jl
push
sub
nop
hlt
gs
or
add
push
dec
jb
push
sbb
lret
test
xchg
pop
jns
push
inc
cltd
mov
in
or
xor
js
mov
add
stos
fiadds
and
or
xlat
jbe
dec
test
dec
outsb
mov
push
push
pop
jnp
push
imul
adc
scas
or
fimuls
ret
out
lods
rcll
mov
mov
pop
push
mov
je
push
je
fsts
push
cmpsl
mov
enter
rcrb
pop
xchg
fistpl
jae
into
ret
inc
inc
cmp
mov
fldt
mov
fidivs
and
lods
in
mov
popl
repnz
repz
mov
fistps
pop
add
mov
into
cs
inc
push
movsl
sbb
adc
pushf
dec
test
subl
je
fwait
mov
lea
pop
adc
inc
popa
mov
ss
jmp
dec
scas
mov
cli
pop
hlt
lock
fwait
es
inc
mov
cmp
add
xor
mov
jg
aaa
cmpsl
cwtl
push
mov
xchg
or
adc
js
insb
mov
sbb
es
lods
dec
sbb
int
jecxz
loop
out
outsb
into
push
mov
mov
push
adc
xor
lea
lods
pop
cmp
scas
decb
adc
ljmp
xchg
xchg
inc
lds
and
mov
das
push
pusha
out
xchg
das
or
jnp
in
lock
lods
mov
pop
sbbb
mov
add
ficoml
stos
out
fcmovb
rclb
sbb
xacquire
mov
fdivrl
push
xchg
popa
or
push
sti
cs
andl
jae
mov
pop
adc
jge
mov
fs
repz
inc
jns
jne
lret
ds
mov
shll
cltd
imul
sub
adc
mov
addb
mov
popa
test
dec
cli
xor
inc
xor
popa
jne
push
movsl
jl
dec
jle
std
xchg
jo
adc
lea
sahf
fnstsw
sub
bound
shl
fs
loopne
inc
mov
pushl
test
repnz
mov
add
test
xlat
cmp
scas
sbbl
sub
fwait
aad
sbb
arpl
lahf
into
and
sub
sbb
adc
loop
push
and
inc
add
scas
cmc
mov
hlt
lahf
cmp
mov
sub
imul
sar
out
movsb
push
xor
in
push
adc
fsubrl
or
mov
in
andl
push
inc
inc
or
mov
push
push
push
rcl
pop
cmp
in
in
jns
add
and
fimull
mov
outsb
adc
sarb
fstps
jae
stos
xor
push
jns
bound
icebp
imul
in
xchg
xor
xchg
xor
push
fwait
popa
xchg
xor
adc
imul
jmp
fdivr
shrl
popa
aaa
rorb
mov
sarl
popa
mov
cld
test
subl
and
or
icebp
jb
movsb
out
nop
out
cmp
in
and
in
cs
int3
loope
or
pop
loope
bound
push
push
push
xchg
in
cmp
js
lock
jmp
add
inc
pop
ja
into
std
jge
cmc
test
add
xor
add
ljmp
jge
roll
or
add
or
dec
movb
and
xor
xchg
sbb
call
and
push
mov
iret
aam
add
stc
add
sarb
jne
leave
sub
push
push
in
mov
sub
idivl
aam
sbb
xor
std
add
cmpsl
fwait
mov
push
jmp
mov
mov
repnz
scas
push
test
mov
imul
test
push
popf
and
inc
rol
xchg
arpl
test
sti
leave
mov
mov
mov
int
rorl
sub
push
psadbw
das
jle
sbb
pop
popf
outsl
add
jmp
add
inc
push
push
and
imul
lret
adc
push
fwait
fstl
or
push
sarb
mov
dec
or
add
sti
xchg
int
inc
jb
movsb
pop
pop
pop
test
sub
pushf
stos
es
dec
jne
scas
cs
xor
daa
pop
add
ja
push
cwtl
lret
push
sbb
icebp
les
push
mov
pop
clc
sbb
aaa
fsubs
mul
iret
out
inc
into
mov
in
rcrl
sbb
pusha
pushf
cmp
mov
sub
in
clc
ljmp
cwtl
xor
add
lds
in
cltd
pop
dec
cli
lahf
cmp
push
inc
xorl
inc
std
mov
sarb
mov
adc
je
mov
xor
dec
cwtl
psllq
sbb
lahf
add
stos
mov
loop
jno
pushf
into
dec
inc
jmp
cmpsb
in
adc
punpcklbw
test
adc
movsl
and
je
ss
jecxz
push
pop
or
lret
jbe
mov
sub
pop
xchg
stos
scas
test
daa
dec
cmp
xor
aam
cmp
cmp
dec
sub
mov
add
movsl
mov
jecxz
mov
dec
outsb
sbb
and
ds
xor
jl
sbb
lock
insb
in
dec
fcomps
fildl
add
flds
push
xrelease
cli
mov
loope
xchg
pop
ja
fdivs
jg
shll
nop
add
es
inc
add
mov
mov
fsubrs
std
out
sbb
imul
sub
and
idiv
sbb
pop
call
xchg
pop
sub
or
sub
and
in
xor
inc
mov
cwtl
mov
xor
ss
fst
xor
jno
and
push
or
cmp
or
stos
mov
push
int3
pop
add
ret
aad
jecxz
fstpt
movsb
loop
mov
dec
inc
aas
jae
int
jne
sub
insl
jne
inc
fwait
gs
mov
fdivrl
inc
sub
xchg
ss
lcall
jp
pop
push
pushf
loope
insl
jmp
out
jmp
jmp
cmp
mov
les
inc
lock
sti
cmp
cmp
push
insb
shll
int3
push
into
mov
das
or
sbb
out
sub
divl
sbb
xchg
fcomi
aas
cmp
sub
roll
imul
mov
mov
push
add
dec
mov
out
js
aas
adc
iret
fcmovnu
data16
mov
mov
sub
scas
mov
lret
sbb
movsb
test
addr16
inc
add
cwtl
aas
xchg
xor
pop
cmp
dec
imul
cmpsb
adc
clc
fsub
popa
repz
call
lock
sub
movsb
xor
add
lahf
jl
push
pushf
or
fs
pop
pop
jmp
in
insb
sti
mov
mov
inc
lret
lcall
inc
inc
mov
dec
sbb
insb
gs
jle
outsl
xchg
xor
mov
add
jo
fs
dec
stc
stos
ljmp
xchg
adc
stos
cmp
jb
xchg
test
xchg
pop
mov
and
sub
cmc
jns,pn
push
ret
rcrb
testl
aam
pop
xchg
lods
psllw
ds
lock
dec
adc
jo
jnp
addr16
dec
lret
and
pop
jo
mov
pop
mov
sahf
mov
adc
insl
pop
in
mov
shrb
icebp
push
test
mov
lods
ljmp
jle
jne
lcall
or
mov
cmp
sub
mov
sub
fidivrl
push
jae
repz
add
xchg
hlt
iret
jae
inc
adc
