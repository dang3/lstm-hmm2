add
add
add
add
mov
add
shlb
into
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
inc
add
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
movsb
fadds
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
mov
dec
clc
call
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
add
test
jne
add
add
test
jne
add
or
test
jne
add
add
push
and
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
fldl
jne
mov
fadds
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
movl
mov
add
add
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
add
push
call
add
add
push
add
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
inc
add
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
add
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
inc
add
add
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
add
rorb
lret
jne
lea
cmp
jb
add
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
jns
inc
add
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
add
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
add
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
jecxz,pn
add
add
inc
add
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
cmp
test
ja
add
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
push
push
call
mov
lock
mov
notb
pop
add
js
enter
js
mov
push
add
scas
add
mov
int3
xchg
add
imul
sarb
divb
stos
push
push
sub
push
mov
sub
push
push
push
lea
push
push
push
call
out
mov
add
mov
in
xchg
mov
jnp
add
add
aad
pop
push
fidivrl
test
add
ret
add
gs
mov
test
add
xchg
sub
pop
popl
push
push
push
push
lea
push
push
lea
push
call
add
fidivl
je
add
xchg
add
jmp
test
add
add
addb
loop
add
scas
push
sub
pop
push
push
push
lea
push
push
call
add
add
add
add
ret
scas
pop
add
add
mov
mov
add
add
add
add
add
in
test
int
push
scas
push
shrb
xchg
out
int3
add
cmpsb
mov
add
in
hlt
lcall
push
push
push
push
push
push
push
push
push
lea
push
call
test
add
mov
call
xchg
cld
into
testl
add
popl
jp
mov
lcall
lcall
mov
push
lea
push
push
call
gs
add
pop
add
jno
movsb
add
mov
lods
mov
cmpsb
cmc
add
fiadds
add
add
pop
add
add
add
add
mov
mov
lea
lods
fiadds
lcall
add
arpl
addr16
call
iret
scas
mov
add
mov
cmc
add
push
lret
test
fsubr
clc
or
sahf
add
push
add
add
push
loope
add
jnp
hlt
gs
add
add
add
add
mov
nop
mov
add
add
imul
sbb
push
push
push
lea
push
push
lea
push
call
add
add
xchg
add
xchg
pop
fists
pop
stc
add
add
add
add
add
add
xchg
bnd
add
lahf
add
add
test
add
popa
add
add
and
jae
idivb
inc
pop
pop
push
push
push
lea
push
push
push
call
faddl
add
push
fildl
movsl
add
add
add
call
subb
add
add
add
push
add
test
mov
mov
add
in
fcompl
mov
push
lea
push
push
call
push
add
add
call
add
add
add
jle
add
jnp
add
in
add
lret
add
push
lcall
pop
hlt
push
lea
push
lea
push
push
lea
push
call
ljmp
mov
test
out
add
add
add
jmp
out
loope
add
add
add
jb
cwtl
add
add
add
in
pop
add
push
test
test
add
mov
xchg
mov
add
add
mov
in
in
pop
add
push
push
push
lea
push
push
call
test
shll
movsb
push
add
movsl
pop
fwait
hlt
cli
add
fistpl
lods
add
add
fiaddl
mov
add
mov
xchg
testb
aad
nop
jecxz
add
ljmp
sub
pop
add
push
push
push
lea
push
lea
push
call
mov
jmp
add
hlt
jno
nop
into
add
add
stos
jne
add
mov
pop
loop
add
add
jns
sub
pop
add
push
push
push
call
mov
pop
add
iret
addl
scas
fiaddl
cld
mov
add
xchg
je
fisubs
mov
pop
data16
scas
add
add
lds
cwtl
add
fiadds
in
je
jae
add
push
imul
in
hlt
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
rolb
add
add
mov
add
cwtl
add
pop
test
mov
add
scas
jge
xlat
ja
lods
repnz
ljmp
lock
pop
add
add
lcall
add
jp
into
loop
jle
add
sbb
push
lea
push
push
push
push
push
call
add
xchg
push
aam
lods
add
add
fimuls
add
je
in
lret
mov
add
jp
add
repnz
loope
lds
add
rol
ljmp
orb
popa
add
add
movsl
add
mov
sar
popa
in
add
add
stos
add
les
xor
lcall
push
or
not
add
dec
sub
sub
pop
not
pop
push
push
call
stos
add
pop
rcrb
fwait
aam
add
leave
mov
arpl
xchg
add
mov
out
std
filds
add
sub
pop
pushl
push
push
push
push
call
gs
add
shll
stos
add
lahf
add
xchg
loope
scas
add
loop
jl
add
add
jns
xchg
hlt
xchg
in
in
roll
add
lods
add
add
jne
out
jae
hlt
add
sub
pop
call
push
push
call
in
je
fwait
add
mov
add
lock
add
jl
stos
cmpsl
mov
les
jl
xchg
add
jp
add
movsb
add
lock
push
stc
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
data16
jp
add
movsl
add
sarl
mov
ljmp
add
add
sahf
lods
add
add
clc
add
xchg
add
add
nop
add
add
add
orb
jecxz
add
add
xchg
fdivl
add
sub
pop
movl
push
push
push
push
call
pop
lahf
lret
add
pop
fiadds
mov
out
add
add
filds
cmpsb
add
push
cltd
add
add
jb
mov
jmp
rcrl
add
mov
add
cmc
mov
rolb
data16
shr
je
outsl
add
mov
add
add
sub
pop
lea
push
push
push
call
add
jle
push
add
sahf
insb
add
add
jbe
sahf
jbe
vpmaxsw
mov
sahf
add
add
add
add
xchg
cmpb
mov
jns
push
clc
xchg
pop
mov
pop
outsl
add
gs
rolb
aad
jae
nop
icebp
test
sub
pop
push
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
push
shll
mov
mov
mov
add
js
mov
add
push
xchg
jo
xchg
ret
insb
add
out
clc
mov
pop
repnz
xchg
add
add
loope
andl
add
in
fcomps
jne
push
lea
push
push
lea
push
push
push
call
int
add
add
add
nop
rolb
mov
jne
lods
jle
xchg
add
test
hlt
scas
jnp
movsb
mov
add
mov
xchg
mov
add
xorl
add
cli
lds
add
add
xchg
mov
in
call
add
pushl
push
push
lea
push
push
lea
push
call
std
stos
add
add
into
add
jo
mov
mov
add
add
mov
jecxz
push
mov
out
test
repnz
fadds
test
out
jge
sti
stos
add
add
add
sub
pop
pushl
push
push
call
pop
mov
add
cmpsl
enter
testb
aam
add
mov
iret
mov
je
add
mov
pop
add
add
lcall
push
cmp
add
and
xor
add
shr
dec
sub
lea
pop
lea
pop
push
push
lea
push
call
fstps
pop
add
rcl
mov
add
add
xchg
add
std
push
cmpsl
add
filds
lock
add
add
add
nop
lods
je
insb
ljmp
push
mov
add
xchg
add
add
in
jge
std
sti
lea
sub
pop
pushl
push
push
push
push
push
push
push
push
call
fadds
mov
test
add
jecxz
mov
pop
xchg
add
add
add
stos
mov
add
mov
mov
out
add
subb
cmpsl
add
add
data16
call
push
push
lea
push
call
mov
add
cmc
outsl
mov
nop
add
add
add
sti
lret
jns
addb
jp
jp
add
std
in
cli
sub
pop
push
push
push
sub
sub
rol
push
sub
add
not
sub
ror
rol
pop
pop
push
push
lea
push
push
push
push
push
call
xchg
pushf
add
jge
fcmove
rolb
add
add
mov
add
add
sahf
jle
add
add
mov
pop
mov
add
add
test
mov
out
add
lds
jae
add
aam
mov
sub
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
xchg
jno
std
pusha
pop
add
movsl
nop
jnp
add
rcrl
mov
push
xchg
add
add
fldl
je
add
adcb
lahf
cwtl
add
add
add
add
aam
xorl
pop
popf
cli
jb
ljmp
add
sub
pop
push
call
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
cmpsl
fptan
add
sahf
jmp
add
xchg
push
in
loope
test
je
xchg
nop
add
xchg
xchg
shl
add
mov
int
push
pop
add
bound
loop
fisttpl
jne
sarb
mov
lcall
clc
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
test
rolb
mov
pushw
pop
jl
test
xorb
add
add
add
mov
add
mov
pop
add
jne
mov
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
addl
add
add
mov
push
mov
add
add
jbe
imul
add
add
push
push
add
add
cltd
lods
cld
add
cli
movsl
push
lds
add
je
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
jmp
mov
jbe
stos
add
aam
sti
add
add
negb
add
aam
add
flds
add
insb
jo
mov
enter
add
add
in
in
in
loopne
lcall
pop
hlt
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
movsl
nop
fldl
cld
add
add
shll
out
mov
add
in
add
add
xor
data16
add
add
jl
add
iret
add
add
add
pop
cli
add
call
mov
sub
pop
add
push
push
push
push
push
push
push
push
call
movsl
pop
add
xchg
mov
int3
stos
jo
fldcw
cwtl
loopne
add
add
add
add
add
out
add
add
add
mov
fstl
jae
add
rorb
mov
xchg
cmpsb
cltd
add
push
fsubrl
add
ret
add
add
push
push
call
mov
add
add
add
jno
add
add
pusha
add
aad
add
mov
add
pop
jmp
pop
notl
add
clc
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
call
add
faddp
mov
jnp
add
mov
cwtl
addb
mov
add
mov
shll
pop
add
add
add
in
mov
sub
pop
mov
push
push
push
push
lea
push
push
call
mov
mov
jmp
test
add
xchg
add
add
lods
lcall
shrl
add
lea
add
xchg
out
xchg
add
icebp
movsl
test
add
out
add
add
jge
out
add
add
mov
pop
add
add
xor
push
lea
push
push
push
lea
push
push
call
add
mov
add
mov
add
lea
jne
mov
mov
outsl
loopne
mov
add
in
call
add
push
push
push
call
iret
add
jmp
add
add
add
addb
add
addr16
roll
scas
data16
imul
movsb
pop
lods
mov
cmpb
loop
add
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
add
mov
in
popf
lcall
add
lcall
call
fwait
int
int
jae
add
cmpb
add
cmpsl
stos
add
push
add
cmpb
xchg
add
enter
push
cmpsl
fiadds
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
je
add
data16
lods
add
add
cwtl
faddl
add
mov
sahf
lcall
jo
ja
xchg
add
test
mov
push
jl
addb
aad
in
fdivr
lcall
inc
or
or
cld
push
push
lea
push
call
cmpsb
jne
sbbl
add
push
mov
add
mov
mov
fldl
add
cld
insb
mov
add
xchg
into
push
add
add
add
add
jnp
cmpsl
fwait
mov
add
out
lcall
xor
push
lea
push
push
push
lea
push
push
push
push
call
pop
add
out
add
mov
pop
icebp
outsl
scas
lahf
int
add
add
lea
lret
gs
out
in
add
add
xchg
add
shlb
nop
imul
add
les
push
push
push
call
arpl
add
ja
mov
add
lahf
pop
shll
rolb
add
leave
xchg
data16
xlat
call
jo
xchg
jge
jae
into
push
add
rolb
lock
push
call
add
mov
aam
cmc
add
jecxz
add
cmc
loopew
in
add
add
loop
in
push
gs
out
pop
pop
flds
nop
add
add
loope
lods
std
add
add
lock
sub
pop
pop
push
push
push
push
call
shrb
mov
into
mov
add
push
mov
jb
mov
jno
add
lock
add
jmp
add
add
add
lcall
add
jl
add
lcall
jbe
lds
add
mov
cmpsb
shl
enter
in
lock
mov
xor
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
testl
add
add
rorl
push
jl
add
add
loope
push
fisubrs
add
in
fdivr
lcall
push
push
lea
push
lea
push
push
push
push
push
call
jbe
sti
add
add
add
jno
fwait
xchg
add
mov
int
icebp
add
add
mov
out
pusha
push
fdivs
add
cmc
pop
add
js
add
add
add
pop
ret
xchg
jo
add
pop
xchg
add
stc
sub
pop
mov
push
push
push
push
push
push
push
call
pop
call
push
jne
add
jo
fs
add
add
addb
lret
add
out
add
add
rcr
add
scas
add
sub
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
jno
jl
stc
add
add
lods
add
add
add
add
add
add
add
add
jmp
jno
mov
xlat
add
gs
add
pop
add
pop
add
lcall
add
add
add
pop
add
mov
jb
imul
add
add
push
lea
push
lea
push
lea
push
push
call
jle
aam
lret
stos
pop
popl
addb
jp
jmp
sti
add
add
rcll
mov
add
add
push
lahf
cmpb
add
mov
in
lcall
enter
addr16
push
push
push
push
push
push
call
loop
add
cmpsb
enter
fs
in
add
add
jno
add
roll
scas
loope
add
add
rcl
add
add
mov
scas
add
add
jns
fcoms
jecxz
scas
imul
test
add
icebp
addb
test
test
add
xchg
add
andb
lcall
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
in
cmpsl
add
mov
add
faddl
ret
scas
add
mov
add
out
fnstcw
push
pop
add
pusha
mov
add
add
test
add
add
push
push
data16
out
add
hlt
add
into
jo
sahf
xchg
pusha
arpl
add
add
incb
add
movsb
push
add
lea
pop
pop
push
lea
push
lea
push
push
call
test
in
add
add
xchg
add
add
add
add
add
mov
add
add
mov
xchg
add
cwtl
add
pop
xlat
add
add
mov
imul
add
flds
xchg
add
add
add
push
sub
pop
mov
push
push
call
mov
add
add
andb
add
mov
leave
movsl
clc
push
add
iret
add
ret
add
jo
aad
mov
fwait
sti
ljmp
add
mov
loop
roll
sub
pop
add
push
lea
push
push
call
insb
cwtl
shll
add
add
mov
lahf
pop
jmp
add
xchg
add
push
add
jnp
xchg
add
mov
shl
int3
add
add
mov
push
insb
clc
lods
push
mov
add
aad
out
sub
pop
add
push
shr
inc
lea
shr
pop
add
push
ror
pop
mov
push
push
push
push
push
push
push
call
faddl
push
fisubs
add
xchg
popa
add
mov
add
mov
add
add
add
add
add
add
int3
test
push
pop
fsts
add
add
push
cltd
flds
add
push
push
push
push
call
mov
add
subb
cwtl
imul
jo
js
mov
movsl
addr16
pop
lock
scas
jno
fisubrl
xlat
jns
add
insb
sub
pop
add
push
pop
mov
xor
push
push
call
pushf
add
test
mov
pop
andb
iret
add
mov
iret
mov
stc
cwtl
data16
rolb
jge
mov
loop
xchg
popl
add
add
mov
lods
pop
add
jno
pushf
je
lods
push
add
shrb
add
std
mov
add
loope
in
clc
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
call
mov
mov
cwtl
scas
lds
test
add
add
clc
add
lret
aam
cmpsl
add
out
sub
pop
add
push
push
call
add
mov
add
popf
lods
mov
movsl
add
push
rcrl
add
push
repnz
xlat
lock
mov
add
add
xchg
pop
add
add
pop
in
gs
pop
out
in
call
leave
push
mov
xchg
xchg
add
ja
stc
add
pop
add
xchg
add
rcll
pop
mov
push
push
sub
add
push
xor
add
rol
sub
lea
sub
sub
shl
pop
sub
shr
pop
push
inc
shl
pop
pushl
push
shr
pop
call
push
add
add
pop
push
push
push
add
shr
push
or
inc
add
dec
dec
shl
shr
sub
sub
add
not
pop
xor
pop
push
shl
add
ror
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
sarl
cld
add
mov
add
jo
add
mov
in
add
enter
jne
stos
mov
mov
sub
add
push
mov
jmp
add
add
test
in
fdivr
lcall
add
rclb
push
push
push
push
push
call
in
add
add
cmpsl
int3
bound
push
add
add
ljmp
test
add
add
push
add
rolb
cld
mov
xchg
mov
pop
mov
push
push
lea
shl
not
ror
pop
push
push
push
call
add
ljmp
add
shl
jno
add
pusha
hlt
aad
lds
pusha
add
sti
int
add
test
faddp
loope
jbe
mov
add
mov
add
push
add
add
add
add
add
add
imul
add
clc
add
mov
pop
hlt
add
push
push
push
lea
push
push
push
push
push
call
int3
out
test
pusha
pusha
loopne
aam
js
push
add
mov
leave
lret
add
add
add
pop
testb
add
repnz
add
incb
sub
pop
add
push
dec
shr
lea
pop
add
mov
xor
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
mov
arpl
lods
pushf
roll
xchg
aam
into
jmp
xlat
fadds
in
add
int3
add
popa
data16
jnp
add
add
push
add
fdiv
lret
fcomps
jne
push
shr
add
add
rol
pop
push
mov
push
push
lea
push
push
call
add
mov
mov
add
int3
add
add
add
pop
cbtw
int3
add
pop
add
imul
cmc
pushf
outsl
add
shr
iret
iret
fs
leave
add
pusha
add
sub
pop
xor
push
lea
push
push
call
add
add
add
loope
add
cmpsl
add
add
adcl
stc
in
roll
jle
ljmp
fdivs
test
add
hlt
add
mov
hlt
pop
add
push
push
lea
push
push
push
call
pop
pusha
add
add
imul
xchg
add
add
add
mov
les
add
iret
add
js
ret
add
mov
aam
add
add
add
ja
test
mov
xchg
mov
xchg
mov
push
add
movsb
add
mov
lcall
lock
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
fmuls
fwait
jmp
add
cmc
add
add
jbe
add
add
jae
mov
jmp
add
mov
jne
add
add
add
lcall
dec
and
mov
push
lea
push
push
push
call
icebp
int3
add
add
add
aad
int
mov
adc
add
lods
xchg
add
addr16
pop
add
mov
mov
cwtl
add
rep
mov
push
push
push
push
lea
push
lea
push
push
push
call
addb
add
add
data16
push
add
lods
mov
outsl
lahf
add
fcompl
add
jnp
repnz
xchg
out
mov
jae
in
in
lcall
or
push
push
push
call
nop
movsb
popl
push
in
xchg
cmpl
out
mov
ljmp
add
sahf
scas
add
add
mov
add
push
push
push
push
call
notl
out
mov
add
push
add
add
push
fldl
push
add
addb
lock
flds
lcall
leave
je
mov
push
push
lea
push
call
add
add
testb
add
add
add
add
add
mov
jnp
arpl
test
fnstcw
hlt
add
pop
add
in
clc
pop
xor
push
push
push
push
push
call
lahf
loope
jbe
add
rorl
add
pop
add
add
iret
add
xchg
push
add
sahf
jae
pop
iret
aad
lods
add
add
add
jecxz
add
cld
add
push
mov
stos
add
add
add
push
push
push
push
lea
push
lea
push
call
out
lahf
add
xchg
pop
imul
ja
addr16
mov
add
xchg
add
add
xchg
lahf
add
mov
in
call
mov
xor
push
dec
shl
pop
add
add
push
push
push
call
add
jbe
add
add
jmp
repnz
add
mov
jle
lea
add
add
add
push
mov
pop
mov
add
add
add
add
test
cld
push
xchg
shl
add
xchg
add
add
js
pop
scas
sub
pop
push
mov
push
push
push
call
in
jbe
ret
jge
jne
add
enter
pop
pop
cmpsl
pop
int3
clc
std
push
add
lds
int3
pop
outsl
xchg
movb
insb
sarl
jo
lret
mov
add
add
add
lock
iret
mov
rolb
lcall
add
push
push
push
push
lea
push
push
push
push
call
insb
add
add
add
out
movsb
cli
jo
out
cwtl
int
add
cli
mov
add
mov
ljmp
add
sub
pop
add
push
push
push
push
push
push
call
jmp
shlb
add
rolb
mov
lret
mov
add
add
stos
out
add
add
nop
gs
xchg
add
in
xchg
shll
les
in
call
add
pop
push
dec
add
not
pop
rep
mov
xor
push
not
lea
sub
dec
pop
or
je
push
inc
pop
mov
push
sub
lea
pop
add
add
push
xor
pop
rep
push
lea
push
push
push
lea
push
push
push
push
push
push
call
bound
data16
add
add
mov
add
incb
add
popf
mov
nop
fs
cli
repnz
xchg
add
add
jmp
mov
add
add
jge
cmpsl
add
add
pop
push
push
dec
lea
lea
push
sub
add
add
sub
dec
pop
sub
sub
pop
push
rol
pop
pop
mov
push
sub
pop
mov
mov
push
push
push
push
push
lea
push
push
push
push
call
add
lea
add
incb
outsl
add
popl
add
mov
shr
js
jecxz
call
mov
add
push
lods
sub
pop
jmp
push
shr
pop
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
add
add
lods
test
add
pop
mov
add
ljmp
icebp
add
jno
add
add
lcall
in
push
add
pop
add
push
inc
pop
push
push
push
call
xchg
int3
addb
test
add
cld
push
test
mov
add
sarb
xchg
out
in
mov
jp
add
add
flds
add
pop
stc
out
ficoms
sahf
add
lods
mov
add
imul
test
movsb
xorl
push
push
push
push
push
push
push
push
push
push
push
call
scas
add
adcl
add
add
pop
stc
subl
add
add
add
jns
js
ljmp
pop
push
push
rol
pop
mov
push
push
push
push
push
call
cmc
incb
add
fildl
add
rolb
add
add
mov
aam
ret
mulb
add
pushf
add
leave
add
icebp
add
sbbl
in
pop
pop
push
add
pop
pop
pop
push
push
push
call
jmp
ret
add
mov
shl
mov
add
xchg
addl
test
jecxz
jmp
mov
add
aad
add
xchg
cltd
clc
out
jns
add
incb
jnp
incb
icebp
add
add
arpl
xchg
sub
pop
pop
leave
push
push
push
call
int3
cmpsl
add
jne
add
add
add
rolb
out
add
cmpsl
cld
push
in
rcr
jle
test
aam
lods
mov
jecxz
add
add
aam
in
test
cld
pop
add
or
push
push
shr
pop
mov
push
push
lea
push
push
push
lea
push
push
push
call
imul
cli
stc
add
add
add
xlat
hlt
add
add
add
cmc
int
ret
call
jnp
add
in
add
add
shl
mov
jl
xchg
fiaddl
faddl
stos
sub
pop
add
push
push
lea
push
lea
push
push
call
add
add
add
add
mov
add
mov
add
xchg
add
gs
lret
add
add
ljmp
add
scas
xchg
test
add
add
xchg
add
ret
test
mov
imul
adcb
fwait
add
in
in
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
scas
add
xchg
push
mov
mov
jl
test
add
add
add
add
add
add
fldl
fisubs
add
add
add
mov
in
mov
fldl
pop
add
movb
pop
push
push
pop
push
push
push
lea
push
lea
push
push
call
jmp
sti
out
add
mov
mov
jmp
xchg
add
add
in
add
lods
add
cltd
lret
add
jne
faddl
popa
arpl
out
add
movl
leave
add
shlb
jne
add
roll
lods
movl
mov
add
in
in
pop
push
push
lea
pop
movl
push
sub
pop
addl
push
add
pop
test
je
push
lea
push
call
shll
arpl
add
clc
add
scas
add
xorl
mov
loopne
add
clc
add
addr16
out
mov
pop
mov
lret
add
jae
add
jle
add
xchg
in
loope
mov
into
lods
cwtl
cli
pop
fsubrs
add
lcall
inc
or
test
pop
push
push
lea
push
push
push
push
lea
push
push
call
push
add
push
loopne
lods
jecxz
add
pop
shll
mov
add
mov
cmpsl
jnp
cmc
pusha
add
pop
pop
mov
pop
push
dec
pop
pop
push
dec
shl
inc
pop
pop
push
push
push
lea
push
push
push
push
call
add
add
popf
test
add
add
ljmp
mov
add
add
sub
pop
leave
ret
push
push
push
push
lea
push
push
call
add
add
scas
pop
mov
add
mov
push
repnz
xchg
add
add
add
add
add
push
push
push
lea
push
push
call
rclb
mov
pop
imul
fildl
mov
mov
add
in
pusha
test
test
into
int
add
cwtl
int
add
add
outsl
je
fbstp
add
add
xchg
cmpsb
add
fstpt
addb
add
lcall
in
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
ror
push
add
jge
add
mov
mov
scas
testb
add
add
cmp
iret
add
add
insb
mov
outsl
imul
add
push
push
inc
pop
push
push
inc
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
mov
in
add
jne
add
push
lods
jno
add
push
lahf
add
add
test
add
testl
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
ficompl
add
xchg
scas
rcrl
add
outsl
mov
in
add
sub
mov
test
push
call
jecxz
add
pusha
add
xchg
loop
icebp
add
shr
add
push
add
fadds
add
cwtl
test
sub
pop
addl
push
push
dec
dec
pop
call
push
push
push
push
push
call
add
test
add
js
mov
add
adcb
cmc
add
cwtl
fstpt
add
xchg
out
clc
imul
lods
add
add
fmuls
add
push
lret
in
lcall
inc
cld
push
push
push
lea
push
push
push
push
push
push
call
push
test
add
out
push
pop
add
add
lea
aad
out
mov
adcl
add
add
cli
add
cli
add
cli
add
add
test
in
popf
sahf
sahf
loope
rolb
push
iret
into
jo
add
popa
cwtl
leave
add
in
fcompl
jne
push
lea
push
push
call
add
cmpsl
pop
aam
test
add
add
add
mov
add
add
add
cmc
mov
add
clc
loop
push
in
les
call
fwait
push
push
lea
push
push
call
add
fbld
rcl
add
cmpsb
add
add
add
add
insb
add
pusha
mov
add
add
xchg
cltd
add
add
add
add
popf
jns
scas
push
pop
push
add
push
sahf
cmpsb
stos
add
lds
add
add
in
call
ror
pop
call
push
lea
not
add
pop
cmpl
jne
pop
push
lea
pop
pop
pop
push
lea
push
lea
push
call
add
add
lods
in
fadds
add
shrb
cmpsl
pop
add
mov
xchg
jbe
add
in
loopne
std
mov
add
loopne
int
sub
pop
pop
leave
push
push
push
push
push
push
call
xchg
add
cltd
add
rolb
lret
push
insb
clc
je
mov
xlat
mov
xchg
mov
add
add
lcall
add
push
push
not
pop
mov
add
push
dec
rol
pop
push
push
push
push
call
mov
add
add
pop
add
lret
add
mov
lods
add
sahf
mov
mov
faddl
add
loopne
aam
mov
add
add
lcall
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
push
mov
add
add
lcall
push
mov
pop
add
add
mov
add
ret
push
in
fdivr
lcall
push
push
push
push
push
push
call
insb
jge
xchg
push
jecxz
add
add
add
faddl
mov
add
mov
add
xchg
test
add
add
scas
lods
cltd
jecxz
add
mulb
mov
add
pop
lods
mov
xchg
popa
add
xchg
add
add
inc
cld
or
add
push
lea
push
push
push
lea
push
push
push
push
push
call
add
fldl
add
add
add
add
out
add
mov
pusha
rolb
add
jl
add
mov
add
add
add
push
call
push
push
call
mov
out
add
add
xchg
imul
cmpsl
int3
add
add
mov
decb
add
add
clc
lcall
adc
call
subl
push
sub
inc
lea
pop
cmpl
jne
pop
push
xor
pop
pop
push
dec
pop
pop
push
shr
not
sub
pop
pop
push
push
call
add
xchg
lea
jns
pop
cmc
add
xchg
add
add
ja
mov
add
mov
push
mov
mov
out
mov
imul
add
add
in
mov
mov
add
push
add
mov
clc
lcall
push
push
push
push
push
push
push
push
push
call
add
aam
faddl
mov
bnd
add
add
fnsave
stos
mov
addr16
add
add
jae
in
add
add
lcall
pop
movsl
ret
xchg
add
add
sahf
jge
add
jns
add
add
add
mov
add
add
rolb
ljmp
add
leave
in
cmpsb
movsb
sub
pop
ret
push
push
push
lea
push
lea
push
push
push
push
push
push
call
testb
add
pop
push
enter
jecxz
mov
add
call
jo
add
jae
mov
add
add
test
push
mov
mov
mov
bound
mov
mov
in
fdivr
lcall
mov
push
lea
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
lock
sti
ret
addl
outsl
add
add
add
push
add
fs
add
popf
add
cli
mov
add
rolb
jmp
out
popf
loop
add
roll
push
add
add
jmp
mul
scas
sub
pop
push
push
lea
dec
pop
push
push
push
push
push
lea
push
push
push
push
push
call
popf
pusha
add
gs
fbstp
lret
add
add
jns
xchg
mov
add
jp
mov
xchg
hlt
pop
add
fs
rcl
jae
add
sti
mov
add
in
pop
add
movsb
loop
lahf
mov
in
fcompl
push
push
push
push
lea
push
push
push
call
mov
call
add
sti
add
mov
add
add
add
ret
add
fistpll
pop
pop
push
ret
fiaddl
add
xchg
add
jge
add
add
in
in
push
push
push
sub
sub
add
sub
push
sub
add
add
dec
sub
not
pop
xor
dec
pop
push
push
push
lea
push
call
cmpsl
iret
add
iret
mov
jecxz
bound
add
sahf
add
cwtl
mov
out
add
ljmp
push
jae
add
add
mov
add
data16
add
popl
xchg
mov
leave
fiadds
sub
pop
pushl
call
push
lea
lea
sub
inc
pop
call
push
push
add
not
push
sub
add
dec
sub
sub
pop
lea
pop
push
push
lea
push
push
push
call
mov
add
add
stos
jl
jl
add
test
nop
mov
into
sbbb
mov
add
jne
les
add
rolb
lcall
jne
push
lea
push
push
call
add
add
mov
add
outsl
repnz
faddl
push
in
imul
int3
cltd
aad
clc
push
cwtl
mov
push
push
mov
jle
add
add
rclb
jns
imul
shll
add
fdivl
popf
add
lcall
insl
cmp
add
rclb
push
lea
push
call
add
add
pop
xchg
mov
add
mov
mov
sti
add
add
int3
std
in
jb
add
popa
fwait
add
lahf
rolb
push
in
leave
add
sub
pop
mov
push
push
lea
push
push
push
call
add
leave
flds
stos
popa
mov
loope
cmpsb
sahf
icebp
add
jbe
jnp
push
mov
push
jae
incb
add
fwait
add
add
sub
pop
lea
sub
push
push
lea
push
push
push
push
push
lea
push
push
call
pop
test
add
jmp
mov
pop
jl
push
mov
mov
add
add
bound
loopne
add
fsts
pop
cmpsl
add
nop
in
add
add
jecxz
add
stc
add
jb
add
jnp
add
cmpsl
add
roll
push
add
xchg
mov
fwait
lds
sub
pop
mov
push
push
lea
push
push
push
push
push
call
std
xchg
add
addb
int
lds
add
push
add
clc
xchg
rolb
add
add
je
cld
push
add
mov
add
int3
cwtl
les
add
into
mov
imul
test
add
ljmp
push
jecxz
xchg
leave
into
cmc
add
jmp
pop
shr
add
push
shl
pop
mov
push
lea
add
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
lea
add
pop
add
add
mov
mov
xchg
mov
pop
add
and
add
add
add
je
lret
movsl
in
ljmp
add
add
add
rolb
add
sub
pop
add
push
rol
ror
pop
add
push
lea
push
push
push
push
lea
push
lea
push
push
call
pop
xchg
iret
add
add
arpl
add
jle
fcmove
mov
add
leave
test
ljmp
test
add
add
sub
pop
mov
push
add
rol
pop
mov
cmp
jne
push
sub
xor
xor
add
pop
cmp
jne
push
push
push
push
push
push
push
call
insb
xchg
fidivrl
mov
stos
add
jmp
add
gs
mov
movsl
stos
pop
pop
loop
test
add
mov
incb
add
pop
add
add
xchg
roll
stos
ljmp
jle
loopne
add
movsb
add
add
cli
mov
faddl
lcall
inc
adc
add
add
add
jmp
mov
push
push
push
lea
push
push
lea
push
lea
push
call
jle
les
add
scas
mov
adcl
in
add
out
testb
add
add
data16
loopne
mov
mov
out
fadds
lock
jns
stos
add
lcall
push
or
rol
sub
jne
push
add
add
sub
xor
pop
mov
push
sub
ror
sub
pop
movl
jmp
push
sub
pop
mov
mov
push
sub
pop
cmp
jne
mov
push
rol
pop
movl
push
not
add
pop
jmp
push
shr
pop
mov
push
lea
push
lea
push
push
call
cmpsl
add
lea
add
fnstcw
pop
add
xlat
sbbb
add
add
add
add
jecxz
mov
popf
faddl
xchg
testl
aad
mov
add
lcall
cmpl
jne
push
lea
push
push
lea
push
call
loopne
add
jae
mov
add
mov
add
popa
add
stos
sahf
mov
mov
add
subl
lcall
inc
adc
jp
add
add
xchg
iret
scas
mov
add
shll
mov
mov
lret
add
add
addr16
add
lcall
add
push
push
push
call
add
add
add
add
test
cmpsl
clc
mov
int
add
add
add
ljmp
out
gs
repnz
add
xchg
fldenv
lock
jmp
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
cld
add
out
les
mov
sbbb
cmp
rcl
mov
add
in
test
jge
fwait
xchg
sub
pop
pushl
push
shl
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
call
push
out
add
fmul
out
add
imul
in
add
cltd
enter
jae
arpl
add
fnstcw
test
xchg
sti
lds
pop
clc
sahf
mov
xchg
add
enter
in
in
mov
push
ror
rol
pop
mov
mov
push
push
add
push
xor
add
sub
shr
add
pop
add
pop
push
sub
xor
pop
push
push
push
push
push
call
test
stos
mov
add
xchg
add
mov
mov
mov
hlt
add
add
add
jns
in
add
outsl
jl
add
lcall
in
lock
lcall
jp
add
cmpl
je
push
push
not
ror
xor
push
and
add
lea
sub
ror
add
pop
sub
inc
pop
push
lea
push
call
add
mov
lods
add
add
lahf
add
add
mov
rclb
aam
add
add
jp
js
add
mov
add
add
add
add
mov
add
add
add
sub
pop
push
call
push
push
push
push
push
push
push
push
push
call
mov
add
add
in
movsb
jo
add
negb
pop
jmp
aam
int3
lcall
mov
loope
add
jbe
add
add
jnp
fmul
arpl
xchg
pop
xchg
add
add
shll
sub
pop
cmpl
je
push
push
shl
dec
add
push
or
inc
add
shr
sub
xor
sub
xor
lea
pop
not
lea
pop
push
rol
dec
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
mov
add
add
push
jl
add
in
imul
add
mov
add
add
xlat
mov
add
lods
add
add
add
xchg
loope
add
pop
mov
jns
out
push
idivb
push
int3
add
add
in
fcompl
lcall
arpl
iret
lea
shl
pop
cmpl
je
push
push
xor
shl
shl
push
push
pop
add
rol
ror
add
sub
add
add
inc
pop
add
add
add
pop
push
sub
pop
push
push
inc
xor
pop
call
cmpl
je
push
push
add
xor
push
and
add
add
sub
add
not
rol
sub
pop
dec
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
mov
pop
in
imul
pop
hlt
add
add
add
add
add
scas
in
fiaddl
mov
xchg
add
stos
add
in
xlat
popf
sub
pop
push
push
pop
call
push
shr
rol
pop
cmpl
je
push
push
ror
push
or
not
add
xor
sub
pop
lea
pop
push
push
push
call
xchg
add
mov
push
nop
add
loopne
enter
add
lret
out
jl
mov
movsl
lret
in
mov
xchg
jle
mov
add
add
add
add
movsl
stos
add
add
add
add
add
add
add
add
add
mov
in
hlt
pop
push
push
shl
pop
call
push
xor
add
sub
pop
cmpl
je
push
push
ror
push
or
not
add
shr
sub
sub
sub
pop
xor
add
sub
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
mov
cltd
pop
cmpsl
add
mov
add
call
add
pusha
aam
imul
stos
test
cltd
popa
jbe
clc
add
lcall
call
push
add
pop
cmpl
je
push
push
xor
shr
push
push
pop
add
shr
sub
dec
xor
inc
pop
shl
shr
pop
push
push
push
lea
push
lea
push
call
mov
mov
mov
fiaddl
test
bound
pop
xchg
add
sahf
add
add
add
sti
add
add
sub
pop
push
call
push
xor
sub
pop
cmpl
je
push
push
sub
shr
lea
add
push
or
not
add
add
add
inc
sub
xor
lea
shr
pop
sub
dec
pop
push
push
lea
push
push
push
push
push
push
call
lock
repnz
hlt
jge
cmpsb
push
add
add
popl
mov
cwtl
xchg
add
add
lcall
mov
add
jle
aad
cli
add
cmpsl
addb
bound
mov
call
push
push
lea
push
lea
push
push
push
push
push
push
push
call
fadds
add
in
add
add
imul
nop
scas
add
add
mov
ffreep
lcall
mov
push
add
add
add
sub
pop
cmpl
je
push
push
inc
ror
rol
push
sub
add
sub
xor
dec
pop
rol
pop
push
ror
rol
pop
push
push
push
push
push
lea
push
call
xchg
popa
mov
scas
out
ficompl
jle
add
jge
rorb
out
mov
rolb
call
in
in
lcall
pop
add
cmpl
je
push
push
lea
sub
sub
push
push
pop
add
add
sub
not
shr
rol
pop
inc
shl
add
pop
push
push
push
push
push
call
outsl
mov
loopne
rolb
shrb
add
add
add
out
fwait
add
add
add
add
add
add
add
add
add
stc
flds
clc
add
insb
add
add
xorl
fiaddl
lcall
push
push
call
lds
add
cmpsb
rclb
pushf
mov
add
int3
add
add
lret
add
jl
push
fldpi
mov
add
add
cli
enter
jmp
sub
pop
call
cmpl
je
push
push
lea
inc
dec
shr
push
xor
add
ror
sub
dec
inc
pop
shr
ror
add
inc
pop
push
inc
pop
push
push
sub
add
pop
call
cmpl
je
push
push
inc
push
push
pop
add
rol
lea
shr
sub
add
lea
shl
pop
lea
pop
push
pop
push
call
push
dec
pop
cmpl
jne
mov
push
push
push
lea
push
lea
push
push
call
mov
iret
rolb
add
add
jmp
jle
mov
ficompl
hlt
enter
mov
icebp
fstpl
fwait
lea
in
call
add
add
addb
add
fistpl
rclb
mov
push
push
lea
push
push
call
out
add
add
js
loopne
lods
add
hlt
add
add
add
push
add
cld
mov
ja
jo
rolb
icebp
push
pop
popl
add
xchg
add
mov
jbe
hlt
add
imul
add
mov
xchg
add
add
out
fadds
lcall
push
not
pop
pop
push
pop
pop
push
rol
xor
shr
pop
pop
push
not
sub
shr
sub
pop
leave
ret
push
push
push
call
fbstp
mov
add
add
mov
add
cli
mov
jle
mov
add
repnz
add
mov
in
hlt
pop
push
push
sub
pop
mov
add
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
pop
add
incb
add
add
add
out
jecxz
mov
mov
fstp
jge
rolb
cwtl
add
mov
jae
add
add
popa
mov
mov
add
add
xchg
add
stc
in
pusha
add
loope
into
iret
cltd
add
push
add
jl
add
sub
pop
cmpl
jne
push
push
xor
add
push
sub
add
sub
sub
shl
pop
inc
not
add
pop
push
push
push
lea
push
push
push
call
add
push
into
jne
ja
in
aad
add
lock
lds
mov
xchg
jecxz
cli
add
add
sbb
add
xor
fimull
in
call
call
push
push
push
push
lea
push
push
call
add
std
add
fs
mov
add
fsts
mov
mov
add
repnz
mov
add
add
adc
cli
roll
mov
lea
pop
test
mov
cmc
mov
add
add
jno
addb
add
sub
pop
push
call
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
scas
add
add
addl
add
push
add
add
add
add
fs
push
add
icebp
jge
jge
add
add
jmp
push
dec
sub
pop
cmpl
jne
mov
push
push
push
push
lea
push
push
call
add
sti
popf
int3
push
ror
mov
sti
fwait
add
add
pop
rcl
mov
pop
jecxz
xchg
std
jb
pop
out
add
add
out
ret
pushf
add
out
mov
add
add
add
out
mov
jge
add
mov
lods
loop
test
ror
sub
pop
call
push
inc
pop
ret
push
sub
inc
pop
jmp
cmpl
jne
push
push
lea
lea
push
sub
add
xor
sub
shr
pop
rol
ror
pop
push
push
push
lea
push
lea
push
push
push
push
call
push
add
popf
mov
add
sub
add
rolb
stos
add
jbe
push
icebp
lea
add
add
cltd
add
add
test
add
lahf
les
add
arpl
jne
fldl
add
mov
jl
cmpsb
mov
loope
xchg
push
lcall
sub
pop
pushl
call
push
push
push
push
push
push
call
add
insb
lret
add
push
addb
push
imul
xchg
lods
add
mov
add
jecxz
add
lods
add
movl
add
out
imul
add
xorb
arpl
add
scas
jecxz
add
les
add
add
add
add
mov
pop
aam
in
call
push
push
lea
push
push
lea
push
push
push
lea
push
call
lret
pop
xchg
add
jge
add
enter
mov
lock
push
add
pop
xchg
ror
mov
lock
rcrl
add
jo
add
add
add
loope
add
xchg
fisubs
add
add
lcall
rclb
inc
add
add
add
mov
jb
add
out
rcr
add
mov
add
loope
mov
test
pushf
hlt
add
arpl
loope
mov
addb
mov
add
push
add
mov
push
stc
add
lcall
cltd
push
add
cmpl
je
push
push
call
add
lret
test
lahf
negl
in
add
loopne
add
jnp
cmpsl
out
mov
jno
add
jmp
add
ja
add
nop
add
add
lock
les
xlat
add
push
add
add
add
movsl
add
sub
pop
cmpl
jne
mov
push
shr
lea
pop
mov
push
push
sub
shr
pop
call
push
push
inc
dec
push
xor
add
add
not
add
sub
add
sub
pop
ror
not
inc
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
sbbl
pop
je
add
add
ja
jne
sahf
mov
add
add
add
add
add
add
addl
add
testl
fcomps
jne
push
inc
pop
call
push
push
push
push
push
lea
push
lea
push
push
push
call
jle
test
pop
add
mov
add
leave
clc
jb
add
out
jnp
roll
pop
xchg
push
out
out
add
add
add
lds
test
xlat
std
add
add
loop
in
fcompl
shrb
pop
int
push
not
inc
shl
xor
push
push
pop
add
dec
add
sub
dec
shl
sub
add
pop
shr
sub
shr
pop
push
push
call
xchg
add
xchg
addl
add
add
loop
test
rclb
cwtl
mov
mov
cmpsl
add
mov
mov
out
push
add
arpl
add
stc
pop
add
ret
fwait
add
add
ja
push
mov
lcall
jne
push
push
lea
push
push
push
push
call
jns
stos
xchg
add
test
xchg
gs
add
aad
aam
addb
jmp
add
add
sub
pop
call
push
lea
inc
dec
pop
call
push
push
sub
not
ror
not
push
or
not
add
dec
add
sub
ror
add
shr
pop
shl
add
pop
push
inc
xor
add
shr
pop
pushl
push
lea
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
xchg
add
rolb
add
movsb
add
testl
add
add
mov
xchg
pop
call
call
push
push
inc
rol
sub
push
xor
add
ror
add
sub
add
sub
inc
pop
shr
not
dec
pop
push
ror
lea
dec
ror
pop
pushl
call
push
dec
lea
inc
pop
call
push
push
shr
rol
push
xor
add
lea
sub
sub
add
pop
shl
shl
pop
push
push
push
push
push
push
push
push
lea
push
push
call
in
jge
incb
out
ret
faddl
fs
movsb
mov
mov
add
add
add
in
add
in
add
add
fildll
cwtl
stc
add
ja
add
in
push
add
mov
add
in
fcomps
jne
push
inc
add
shl
pop
call
push
lea
push
lea
push
push
push
push
push
call
jmp
add
aam
pop
add
mov
add
shlb
test
add
repnz
repnz
add
lcall
shrb
outsb
cwtl
mov
shr
add
push
sub
add
ror
ror
ror
sub
sub
lea
pop
xor
pop
push
lea
shr
pop
pushl
call
push
shr
not
ror
pop
call
push
push
dec
sub
sub
push
and
add
rol
dec
sub
add
xor
not
pop
xor
shl
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
jo
mov
add
cmc
stc
add
add
out
jo
enter
addb
push
fsubrl
push
int
add
add
add
add
repnz
in
add
lcall
jne
call
push
push
push
call
add
mov
roll
mov
add
mov
fwait
xor
lahf
mov
jae
stos
ficompl
stos
add
add
fmul
add
stos
push
je
add
popa
jbe
mov
add
add
push
pop
pop
xchg
ror
add
data16
subb
pop
call
push
push
sub
shr
sub
add
push
or
not
add
sub
sub
shr
pop
shr
sub
sub
pop
push
push
push
push
push
push
call
in
aam
shlb
test
add
loop
push
outsl
cmpsl
add
in
sti
outsl
jle
add
add
cld
int
cltd
lods
push
insb
add
jo
add
mov
add
add
call
shr
jecxz
into
add
in
add
popf
mov
aam
add
fildl
mov
pop
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
sti
rcrb
jl
push
add
addl
roll
add
aam
pop
add
out
arpl
add
rolb
in
jbe
test
add
addl
lea
add
addr16
pop
call
push
shr
pop
call
push
push
add
push
or
not
add
xor
dec
ror
sub
inc
shr
pop
shr
shl
pop
push
lea
push
push
push
call
add
mov
popa
data16
add
add
lods
add
add
sbbl
scas
test
add
rcrl
shlb
cmc
stc
stc
ficoms
in
lock
lcall
jne
push
not
pop
call
push
push
push
lea
push
lea
push
push
push
call
add
add
add
mov
hlt
in
int3
add
pop
add
flds
loopne
in
in
call
push
push
add
push
xor
add
add
sub
add
add
sub
inc
rol
pop
add
pop
push
dec
rol
add
sub
pop
pushl
push
push
push
push
lea
push
push
push
call
roll
xlat
add
sti
sarl
into
shl
icebp
pushf
add
add
in
add
ljmp
flds
add
lcall
dec
push
add
push
push
push
push
push
push
call
movsb
mov
stc
add
mov
add
cmp
push
in
add
add
call
lea
push
push
push
lea
push
call
iret
dec
add
mov
imul
push
scas
ljmp
clc
add
add
icebp
jge
jl
outsl
aad
add
jns
add
add
add
add
loope
ja
mov
lock
push
call
push
push
inc
push
push
pop
add
shl
add
ror
add
sub
shr
pop
lea
inc
not
dec
pop
push
push
push
push
push
call
scas
test
add
sahf
xorl
add
popa
add
test
mov
pop
add
add
mov
pushf
in
mov
add
movb
add
jne
ja
out
pop
add
add
add
add
in
in
pop
pushl
push
lea
shr
pop
call
push
lea
push
lea
push
push
push
call
fistpll
pop
adcb
add
mov
fiaddl
add
add
imul
add
add
lcall
shrb
in
xchg
out
not
dec
shl
rol
push
and
add
inc
sub
ror
ror
not
pop
rol
inc
pop
push
pop
pushl
push
pop
call
push
push
push
lea
push
push
push
push
push
call
add
push
popa
xchg
add
shl
in
add
add
cmpsb
mov
add
push
add
add
push
add
jnp
lret
add
out
sahf
lret
add
add
lds
jb
pop
movsb
movl
lcall
shrb
fbld
push
xor
add
xor
sub
sub
sub
dec
shl
pop
shr
add
pop
push
push
lea
push
push
push
lea
push
call
movsl
add
add
int3
add
add
mov
mov
movsb
mov
add
rolb
jp
js
ret
add
add
stos
mov
add
int3
scas
mov
mov
cmc
add
jne
pop
add
loop
imul
std
add
pop
add
loopne
fsubrl
add
jne
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
add
add
jge
add
repnz
scas
push
add
fsubl
loope
xchg
add
mov
stos
ljmp
add
lret
add
mov
testb
testb
xlat
loope
je
mov
add
call
call
push
push
add
push
or
not
add
add
sub
sub
ror
pop
ror
sub
rol
pop
push
sub
pop
pushl
push
xor
not
ror
sub
pop
call
push
push
ror
push
or
inc
add
lea
sub
rol
dec
sub
sub
dec
add
pop
not
pop
push
push
add
not
push
sub
add
shr
rol
sub
lea
shr
pop
shl
shl
pop
push
push
push
push
lea
push
push
call
loop
out
add
add
popf
call
add
test
js
out
add
jp
out
push
sar
add
lcall
rclb
call
mov
jmp
push
lea
push
call
jmp
add
test
add
mov
add
push
add
in
push
lret
sub
pop
pop
push
lea
push
lea
push
lea
push
push
call
add
in
lds
add
add
add
add
shl
movsl
rcrl
rolb
scas
fildll
loopne
add
add
add
filds
add
call
add
lcall
jne
call
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
int
push
xchg
add
add
add
add
add
mov
data16
mov
jbe
fs
add
loopne
mov
push
subb
lcall
add
add
push
push
push
push
push
push
call
mov
testl
mov
add
jp
gs
ljmp
push
rcrb
add
fwait
fcomps
movb
mov
jge
xchg
popf
add
mov
addr16
mov
call
lea
push
push
push
push
push
call
int
idivl
leave
iret
add
ret
mov
popf
clc
rolb
add
cmpsb
add
xchg
jno
test
xchg
testl
ljmp
cmpb
shl
push
and
add
not
sub
sub
lea
pop
sub
shr
dec
dec
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
lds
mov
pop
pop
add
add
add
add
add
pusha
mov
xchg
add
add
mov
add
add
fwait
in
mov
xchg
add
ret
add
loop
in
fdivr
lcall
jne
push
push
push
push
push
push
push
push
lea
push
call
rcrb
add
hlt
add
add
add
push
in
xchg
xlat
add
add
ljmp
add
push
in
mov
je
stos
scas
add
ja
pop
add
nop
add
mov
add
ret
pusha
addb
pop
call
push
push
push
push
push
lea
push
call
fsubs
jge
roll
mov
scas
mov
add
lods
idivl
popf
xchg
add
mov
js
add
enter
jbe
ret
pop
add
into
nop
add
mov
add
add
cmpsb
out
mov
fisubs
add
data16
mov
in
call
sub
pop
call
push
push
push
xor
add
rol
sub
rol
pop
add
sub
add
shr
pop
push
add
not
pop
pushl
call
push
lea
push
push
lea
push
lea
push
push
push
call
leave
mov
mov
add
pop
loop
in
cmc
pop
mov
add
icebp
scas
out
ret
xchg
cmc
mov
mov
add
aad
js
push
lret
add
out
add
push
add
jno
add
stos
mov
rolb
mov
rcrl
imul
in
call
push
add
sub
pop
mov
push
lea
push
push
push
call
imul
add
add
add
aam
add
add
cmpsb
jl
add
add
mov
mov
lcall
pushf
and
ljmp
inc
cmc
mov
not
lea
push
push
pop
add
sub
xor
add
sub
ror
rol
pop
sub
pop
push
lea
push
push
push
lea
push
push
call
add
pop
mov
aam
jnp
mov
pop
add
addb
sar
aad
jp
jle
add
lcall
jne
call
push
push
push
lea
push
push
push
push
push
push
call
mov
mov
int
pushf
aad
and
add
ffreep
add
mov
ljmp
pop
mov
addl
fcompl
add
push
push
push
push
push
call
out
mov
add
ffree
add
add
lret
fadds
add
add
mov
xchg
xchg
mov
cwtl
push
sahf
add
add
push
gs
sub
pop
push
push
push
rol
xor
pop
push
pushl
push
push
add
not
not
push
or
inc
add
dec
add
sub
sub
pop
add
sub
inc
shl
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
jb
pop
add
push
rol
out
jmp
add
lret
out
add
mov
pushf
imul
insb
add
mov
js
mov
add
clc
add
pop
add
xchg
add
xchg
add
add
xchg
jnp
add
stos
sub
pop
push
push
not
pop
call
push
push
add
xor
inc
push
or
not
add
sub
sub
inc
pop
dec
pop
push
add
dec
pop
pushl
call
push
add
shr
shl
shl
pop
push
call
push
push
shr
sub
shl
push
push
pop
add
sub
not
inc
sub
shl
pop
add
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
push
add
leave
cld
jne
popl
add
xchg
jnp
add
cli
add
mov
std
jno
jbe
ja
add
add
add
add
je
add
jbe
add
add
pop
push
gs
pop
out
xchg
add
out
add
sub
pop
pushl
push
dec
pop
call
call
push
sub
sub
xor
pop
pushl
push
shr
add
sub
pop
mov
push
push
push
push
call
jno
movsb
jno
std
add
pop
icebp
add
add
addr16
fwait
test
mov
add
rolb
lret
sti
sub
pop
jmp
push
push
shr
push
and
add
not
sub
inc
add
pop
add
inc
not
shl
pop
push
pop
pushl
push
dec
inc
dec
sub
pop
call
push
push
not
dec
pop
call
push
push
rol
sub
not
push
sub
add
sub
lea
add
sub
shl
pop
inc
pop
push
add
pop
pushl
push
lea
push
push
push
call
add
out
je
testb
add
xchg
arpl
fldl
mov
fidivl
test
jno
gs
pop
call
push
push
lea
push
lea
push
push
call
add
fcomps
add
add
jns
mov
add
movl
scas
add
lcall
rclb
into
loopne
imull
cmc
pop
leave
push
ror
pop
add
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
decb
xchg
add
stc
add
add
add
add
xchg
ret
add
sahf
fisubs
pop
test
loopne
lcall
push
add
ror
pop
pop
push
shr
lea
ror
add
pop
pop
xor
push
shr
pop
inc
push
push
push
call
addb
add
test
pop
hlt
int3
lcall
mov
sarb
outsl
add
add
push
cltd
add
add
add
add
shlb
loop
test
add
jl
cwtl
les
add
add
add
popl
push
test
add
in
hlt
lcall
or
push
push
push
push
call
in
call
mov
scas
add
add
jbe
add
popf
pop
mov
jno
add
pushf
add
mov
add
add
add
mov
into
add
aad
add
jo
gs
pusha
pop
stc
movsb
popf
add
out
cmpsb
push
xchg
leave
push
mov
add
add
sub
pop
leave
push
shl
pop
ret
push
push
push
lea
push
push
push
push
push
call
clc
pop
mov
xchg
mov
mov
cli
pushf
add
aam
rolb
roll
add
sti
xchg
add
pop
pop
fldenv
outsl
add
mov
add
test
add
add
mov
popa
out
add
pop
imul
pop
pop
faddl
sub
pop
mov
push
push
push
push
push
call
add
add
add
add
lds
subb
jecxz
add
add
add
sti
push
xchg
xchg
add
out
push
xchg
add
add
add
aad
popa
jbe
pop
add
scas
add
fcmovb
add
mov
jns
add
int
cmpsb
sub
pop
cmpl
jne
push
push
push
push
push
call
xchg
add
add
testl
jle
add
leave
ljmp
mov
xchg
add
push
aam
outsl
arpl
add
add
enter
mov
lret
add
cld
add
cltd
add
pop
js
call
pop
jno
jne
jo
xchg
xchg
add
add
inc
and
jmp
push
inc
add
ror
sub
pop
mov
push
push
push
push
call
loopne
push
add
popl
add
rcll
roll
xchg
ret
lods
pop
out
add
jo
frstor
mov
add
insb
add
bound
sar
add
add
add
leave
add
fs
add
addb
add
mov
add
xchg
lock
and
push
add
shr
sub
pop
xor
xor
push
sub
pop
add
xor
push
push
lea
push
lea
push
lea
push
call
loopne
xchg
add
push
pop
add
add
xchg
add
sahf
add
incb
fstps
add
faddp
add
push
rol
pop
sub
jmp
push
add
add
rol
pop
sub
push
push
lea
push
push
push
push
push
push
push
call
cmpsb
cltd
add
jb
cli
add
mov
enter
add
push
jb
mov
filds
add
add
out
add
fldl
add
add
add
xchg
outsl
mov
rorb
add
lcall
xor
push
push
lea
push
call
iret
push
clc
add
add
stos
jb
out
into
mov
mov
xchg
add
nop
add
add
fstpt
loop
cli
mov
cli
add
pop
add
add
sub
pop
sub
cmp
jne
push
push
push
lea
push
push
call
add
lds
cmc
add
add
mov
add
fists
leave
mov
add
mov
call
add
xchg
cld
xchg
out
mov
add
pusha
xlat
add
bound
out
scas
sub
pop
mov
push
add
sub
shr
pop
lea
push
push
push
push
push
lea
push
call
jne
add
add
cli
cltd
nop
scas
iret
add
add
mov
add
add
divl
add
add
push
lcall
out
enter
add
xchg
fsubrp
add
mov
sti
mov
mov
add
add
cltd
add
add
sub
pop
sub
push
push
push
push
push
push
push
call
mov
stc
add
out
add
nop
add
xchg
int3
mov
rolb
addr16
add
roll
stos
fucomi
mov
push
movsl
test
faddl
add
xchg
add
or
jmp
pop
add
push
push
push
push
push
call
repnz
mov
add
add
pop
ja
xchg
add
xchg
clc
add
icebp
jl
fcmove
leave
mov
add
mov
add
shll
out
cli
fists
add
add
mov
fwait
add
gs
js
test
mov
pusha
push
add
jmp
push
push
call
xchg
add
nop
jmp
lods
jp
jge
pop
jecxz
pop
add
scas
mov
xchg
add
add
stc
pop
mov
add
xchg
mov
add
sahf
call
mov
add
mov
add
pushf
rolb
outsl
push
push
sub
pop
pushl
pop
push
rol
pop
shr
push
push
push
call
lret
push
cwtl
mov
add
add
lock
xchg
add
push
push
add
mov
mov
jl
in
hlt
pop
and
sub
push
shr
shl
ror
pop
cmp
jne
push
lea
push
lea
push
push
push
call
pushf
addr16
ljmp
ret
int3
jp
add
faddl
into
jl
mov
pop
add
add
add
push
loop
mov
push
mov
rolb
test
add
fldl
testb
add
mov
pop
fadds
add
sahf
test
pop
xorb
outsl
mov
lcall
push
lea
push
push
push
lea
push
push
push
call
jb
add
je
add
out
mov
xchg
int
pop
add
js
add
sahf
mov
add
xchg
add
add
add
jle
jo
clc
add
add
subb
in
in
ret
push
dec
shl
inc
pop
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
push
add
add
js
roll
add
push
popa
addb
add
mov
insb
add
scas
sub
pop
mov
push
ror
inc
pop
add
push
push
push
push
call
xchg
jns
push
add
lock
cmpsb
icebp
add
sahf
jb
add
cld
add
jno
mov
mov
push
add
push
fiaddl
add
mov
pushf
add
push
addl
add
lret
add
lock
push
push
sub
lea
not
pop
push
push
push
lea
push
push
push
push
push
call
test
xchg
subb
int
movsb
mulb
call
andl
in
pushf
jno
add
pushf
add
movsl
add
push
rol
add
lea
pop
push
push
push
lea
push
call
data16
cltd
add
hlt
enter
icebp
cltd
push
add
test
xchg
add
jb
mov
push
add
add
cmpsl
pop
add
incb
mov
xchg
pop
sub
pop
push
push
rol
not
shl
pop
mov
push
rol
pop
lea
push
sub
pop
sub
mov
push
dec
not
pop
shr
push
push
lea
push
lea
push
lea
push
push
push
push
call
lods
add
xchg
add
add
pop
test
add
add
add
add
pop
add
lds
add
add
xchg
cwtl
popa
out
add
add
add
roll
add
sub
mov
addl
incb
in
pop
add
in
loopne
add
mov
push
push
push
push
push
lea
push
push
lea
push
call
popf
add
mov
push
push
add
add
iret
mov
add
movsl
add
mov
int
test
add
mov
add
add
add
xchg
add
sahf
add
jecxz
push
add
lcall
pop
or
out
pop
mov
add
push
lea
push
push
push
push
push
call
test
jnp
data16
pop
jne
add
add
imul
add
outsl
js
jb
leave
loope
mov
cmpsb
add
xlat
stos
in
add
in
mov
sub
pop
xor
push
sub
pop
mov
and
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
pop
add
in
pop
iret
push
add
add
repnz
add
pop
add
rolb
push
out
jbe
out
mov
add
fisubs
jb
add
lcall
rolb
movsl
sub
pop
rol
push
push
push
push
push
push
push
push
call
je
ljmp
pop
add
add
in
xchg
loopne
add
jge
jmp
cmc
mov
in
lods
add
add
fnstenv
add
ret
cwtl
sahf
leave
add
add
add
add
shlb
pop
xor
push
lea
push
push
push
call
mov
icebp
out
add
stc
int3
sbbl
add
add
ja
add
imul
add
stc
jo
jb
add
mov
pop
sub
pop
inc
cmpb
jne
push
push
push
push
push
push
push
push
push
push
call
jae
jp
movsl
add
add
faddl
add
add
add
push
add
add
add
in
out
add
mov
add
add
xchg
test
ljmp
outsl
add
add
add
stc
add
inc
pop
ss
push
lea
push
push
push
push
push
push
call
xchg
mov
pop
pop
add
add
push
add
add
in
into
ljmp
ljmp
ret
orl
add
addr16
mov
add
cmc
add
add
mov
add
add
fnsave
in
in
cmp
je
push
not
shl
not
dec
pop
add
push
sub
dec
pop
cmpl
jne
xor
push
push
push
push
push
call
add
out
lahf
add
add
ret
add
jne
add
iret
add
push
add
add
in
lcall
pop
push
lea
push
push
push
push
lea
push
call
add
add
repnz
mov
stos
fistps
mov
add
flds
add
faddl
add
imul
add
cmpsb
add
add
pop
add
mov
mov
mov
add
add
add
add
orl
mov
push
push
push
push
call
arpl
into
add
add
add
jmp
cmpsl
hlt
scas
aad
pop
imul
pop
add
add
mov
cmp
add
popa
cmc
add
add
stos
std
add
add
add
mov
sub
pop
pop
pop
push
push
lea
push
push
push
push
call
fwait
mov
push
add
loop
push
add
add
mov
xchg
add
add
add
fucomp
ja
add
hlt
std
pop
sub
xchg
add
outsl
fldl
add
cwtl
nop
add
add
mov
mov
lcall
cmc
add
pusha
xchg
sub
pop
leave
push
sub
dec
pop
ret
push
lea
push
call
add
addb
mov
mov
jge
flds
add
add
add
add
loope
add
loop
add
testl
sub
pop
mov
add
push
push
push
push
lea
push
call
add
add
pop
add
jle
add
push
pop
xchg
add
push
cltd
stc
mov
add
add
bound
add
add
mov
out
nop
add
xchg
scas
fs
mov
add
mov
add
cmc
movsl
add
cmp
mov
add
lcall
add
add
push
inc
pop
call
push
xor
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
jne
out
popa
pop
add
add
roll
imul
pop
add
xchg
andl
roll
lods
add
lahf
roll
add
add
add
add
call
mov
add
faddl
ja
mov
lcall
push
icebp
call
bound
mov
movsl
push
push
push
push
call
add
jo
fcmove
fsubr
add
jb
out
add
icebp
jecxz
out
mov
mov
filds
data16
xorl
add
fucom
add
mov
push
add
in
in
xor
push
xor
dec
not
dec
pop
pop
pop
push
push
call
add
add
add
push
ret
enter
mov
add
add
add
add
clc
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
push
les
add
jnp
add
imul
add
pop
jecxz
pushf
mov
ret
add
mov
sub
pop
pop
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
mov
push
add
add
add
mov
pop
xchg
push
lahf
push
hlt
add
push
loop
xchg
jge
add
add
in
loopne
leave
ret
push
not
add
ror
sub
pop
push
push
shr
rol
sub
pop
mov
push
push
push
call
int
std
sarb
add
stos
add
clc
arpl
jle
testl
loop
mov
add
push
lcall
add
cmpsl
add
pop
mov
loopne
xchg
add
lods
fildll
jne
in
lods
cwtl
out
gs
add
les
scas
clc
jge
sub
pop
add
push
push
push
push
push
push
push
call
xchg
add
add
jecxz
lcall
je
add
add
fsubs
add
scas
xchg
push
iret
add
add
xchg
push
flds
add
mov
mov
add
arpl
jae
test
mov
roll
xchg
data16
add
addb
in
call
push
push
push
push
push
call
scas
addb
add
incb
cltd
fwait
mov
cmpsb
add
add
xchg
add
fadds
imul
add
add
lods
cwtl
fs
add
cli
aad
jmp
lcall
add
add
xlat
mov
add
add
lock
lcall
push
push
push
lea
push
push
push
call
add
stc
outsl
lret
add
cmpsl
add
addr16
add
jno
add
jmp
pop
add
out
enter
idiv
mov
bound
in
test
add
add
add
xchg
test
cmc
mov
mov
add
pop
mov
mov
pop
push
push
add
sub
xor
inc
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
nop
add
enter
add
add
add
scas
imul
add
mov
add
lods
out
push
xchg
add
fiadds
add
jo
sti
call
test
out
add
jmp
add
mov
xorb
fcomps
push
sub
not
dec
pop
pop
push
inc
sub
inc
pop
lea
push
push
push
push
push
push
push
push
call
add
xchg
add
test
add
add
add
mov
sbbl
xchg
xchg
add
into
testb
pop
in
xchg
les
mov
add
hlt
mov
add
flds
add
sub
pop
sub
push
push
push
call
add
push
out
jb
jle
add
mov
add
add
jnp
add
jecxz
add
filds
outsl
andw
add
lods
add
jo
sub
pop
mov
shr
push
push
push
lea
push
push
call
out
xchg
add
cltd
add
add
add
in
add
rcrb
add
shll
add
test
popa
mov
movsl
add
cmc
cmc
add
push
add
int
sti
bound
fwait
add
add
add
add
xchg
pushf
pop
add
add
in
sti
sahf
sub
pop
add
mov
push
push
push
lea
push
push
push
call
nop
cld
addb
pop
add
add
add
push
mov
add
add
scas
cmp
imul
test
pop
mov
jp
add
mov
call
jae
push
rol
dec
pop
popl
mov
push
push
call
xchg
xchg
add
in
add
add
cwtl
in
add
mov
pop
add
outsl
add
add
out
add
mov
add
add
add
add
add
pop
add
cld
loopne
add
sub
pop
add
push
push
lea
push
push
push
push
push
call
add
push
loopne
add
mov
out
cwtl
add
jp
add
movsl
add
les
add
jmp
mov
add
xor
lea
push
dec
add
add
pop
mov
push
dec
pop
add
push
shl
not
shr
pop
xor
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
add
push
add
mov
add
push
mov
jecxz
add
lea
lock
lcall
add
pop
mov
movb
add
add
mov
fwait
add
add
add
jl
pusha
sub
pop
rol
push
lea
sub
pop
nop
push
push
push
lea
push
push
push
call
pop
mov
add
add
clc
fsubl
add
jmp
shlb
lret
nop
rolb
add
add
jge
sub
pop
nop
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
popf
add
mov
bnd
testl
add
test
add
out
cli
arpl
shlb
mov
mov
pop
add
lcall
add
testl
pop
nop
nop
push
rol
ror
add
add
pop
inc
nop
push
lea
push
push
call
add
add
lret
mov
mov
add
add
fidivl
push
add
add
cmpsb
add
ljmp
push
add
addl
add
add
mov
pop
add
add
popa
push
pop
push
mov
xlat
jecxz
xchg
add
xchg
add
push
pop
push
mov
cld
arpl
sub
pop
nop
push
dec
ror
inc
not
pop
cmpb
jne
push
push
push
lea
push
push
push
call
add
xorl
fldl
add
mov
add
pop
add
mov
mov
mov
enter
add
mov
add
add
in
call
add
push
push
push
push
push
push
push
push
push
call
mov
mov
add
push
add
add
add
add
mov
mov
shll
ljmp
in
add
add
xchg
ljmp
jb
pop
mov
add
nop
push
pop
cmp
je
push
push
push
push
push
push
push
push
call
add
je
int3
leave
nop
mov
sti
mov
jbe
add
stc
mov
add
je
push
fists
jno
add
pop
jnp
add
mov
icebp
add
mov
sub
pop
nop
push
inc
pop
nop
push
shl
ror
not
pop
inc
nop
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
mov
add
pop
test
add
pop
add
add
mov
call
add
mov
xchg
add
gs
add
imul
push
add
add
stos
add
add
push
fidivl
popf
in
data16
add
add
lods
pop
in
adc
in
loopne
lcall
push
push
push
push
call
sub
add
insb
gs
out
mov
xorb
pop
add
add
jno
push
mov
movl
loopne
call
or
pop
cmp
push
push
push
push
call
in
pop
imul
add
xchg
out
mov
add
ret
add
add
fs
mov
mov
mov
lret
bound
jmp
icebp
popf
pop
add
add
mov
add
js
addl
add
in
loopne
lcall
shr
add
add
mov
mov
jl
call
mov
add
mov
add
add
cld
test
add
add
addr16
in
ljmp
pop
xchg
fadds
mov
clc
sub
add
jae
test
add
adcb
pop
xchg
addb
pop
nop
sub
pop
mov
add
push
dec
inc
ror
pop
movzwl
mov
push
push
call
out
iret
add
add
mov
mov
fcomp
loop
add
mov
mov
in
enter
add
testb
out
mov
pop
movsl
rolb
jecxz
add
ja
mov
xchg
loopne
fiaddl
rcll
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
push
mov
add
jle
xlat
lahf
mov
faddl
add
xchg
jbe
popf
ret
add
int
add
cmpsl
lret
aam
in
fcomps
dec
hlt
push
lea
push
push
push
push
push
call
popa
pop
add
add
push
stos
lret
popa
cwtl
addr16
imul
add
rolb
add
jecxz
nop
loop
add
leave
add
andl
add
fcomps
push
mov
call
xor
push
push
lea
push
lea
push
push
call
int3
add
add
add
add
push
arpl
add
add
add
cwtl
mov
aam
add
scas
mov
add
xchg
sti
fwait
bound
aam
fdivr
loopne
mov
movsb
mov
add
add
mov
scas
mov
out
jge
add
sub
pop
xor
shl
push
lea
push
push
lea
push
push
push
call
add
add
add
add
test
xchg
testb
mov
in
add
cltd
addr16
xchg
add
push
js
jne
lods
add
mov
add
in
test
add
int
add
dec
nop
add
lea
push
lea
push
lea
push
push
push
call
pop
iret
gs
cli
outsl
mov
add
add
add
push
jo
mov
xchg
cld
add
push
push
add
lods
add
xorb
add
add
mov
push
jle
add
test
cwtl
jne
add
add
sub
pop
shl
xor
push
lea
push
push
push
push
push
call
add
cmpb
in
addl
stc
add
push
add
jle
popa
mov
mov
add
rorl
add
ljmp
add
add
add
jle
test
out
add
jne
push
add
cld
mov
popa
add
test
lcall
loope
push
sub
inc
ror
pop
xor
push
push
push
lea
push
call
add
mov
pop
mov
subl
xchg
sti
lret
roll
fldl
push
cmpb
in
lock
mov
push
sub
pop
add
pop
push
pop
pop
pop
push
not
pop
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
add
addb
add
add
push
add
add
add
push
fadds
stos
popf
add
lock
cmpsb
add
add
mov
hlt
mov
testb
add
nop
cli
fbstp
add
pop
leave
push
sub
ror
rol
pop
ret
push
push
rol
pop
mov
push
push
pop
push
push
add
pop
push
push
push
add
sub
dec
xor
pop
mov
mov
push
not
sub
ror
sub
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
call
testl
add
jle
add
xchg
loop
mov
add
add
add
sarb
data16
pop
add
test
add
mov
fwait
add
add
mov
testl
in
lcall
rorb
test
add
push
pop
mov
push
sub
pop
test
je
push
lea
pop
mov
push
sub
add
rol
pop
mov
push
lea
push
push
push
push
push
call
add
in
add
add
add
add
add
mul
enter
xchg
cmc
add
je
roll
movsl
add
imulb
fwait
add
loope
xchg
add
mov
add
add
add
add
pop
inc
push
push
push
lea
push
push
push
push
push
call
add
mov
add
add
fiaddl
lahf
add
les
push
mov
mov
add
cmc
add
rolb
add
repnz
les
add
nop
push
add
in
sub
pop
cmp
je
push
pop
test
je
push
push
push
push
push
push
push
push
push
push
call
jbe
add
aad
add
add
js
add
xchg
out
jb
outsl
add
pop
mov
rorb
mov
jecxz
sub
pop
mov
inc
push
lea
push
push
call
pop
addb
push
add
pop
scas
in
add
lahf
add
faddl
add
les
add
pop
add
aad
xchg
nop
add
add
stc
lock
add
sub
pop
cmp
je
push
inc
ror
pop
test
jne
push
push
lea
push
lea
push
push
push
lea
push
push
call
std
add
xchg
mov
add
add
mov
cmp
add
add
xchg
mov
lret
aad
in
add
jb
push
add
sub
pop
xor
push
push
lea
push
lea
push
lea
push
call
add
aam
lds
jp
jo
cltd
loope
loope
enter
add
mov
cld
xchg
out
add
add
movsb
movsb
shrb
push
cli
gs
add
sarb
mov
mov
in
lcall
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
lcall
add
add
arpl
data16
stos
add
push
add
push
push
add
push
lods
ret
stc
add
fxch
jns
add
jae
cltd
add
push
test
push
pop
xorl
lcall
pop
push
shr
pop
leave
ret
push
push
push
push
push
push
push
push
call
mov
add
jne
push
je
mov
in
pop
roll
add
add
scas
out
stos
add
push
add
jecxz
add
mov
push
movsb
fisubrs
mov
jb
adcl
add
flds
roll
add
aam
add
lcall
push
inc
push
lea
push
call
jge
rcll
add
cli
add
add
fsts
imul
pop
incb
aam
add
add
add
icebp
jae
int
add
add
outsl
add
clc
pop
cmp
jne
push
rol
lea
pop
lea
push
sub
shr
shl
pop
mov
push
ror
pop
test
je
push
inc
xor
lea
sub
pop
mov
add
push
push
push
push
push
push
lea
push
lea
push
call
lock
in
int3
arpl
add
mov
jae
add
stc
enter
ljmp
in
add
add
xlat
add
add
add
sub
pop
cmp
jne
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
enter
lods
test
add
out
cwtl
in
bound
aam
mov
call
int3
add
add
cwtl
mov
mov
pushf
add
int
incb
movsl
std
mov
sbbb
jne
sub
pop
test
je
push
push
push
push
push
push
call
movb
out
ja
add
mov
push
mov
mov
add
mov
leave
add
add
fwait
add
add
mov
callw
cld
pop
add
push
lea
not
add
pop
cmp
je
jmp
push
add
pop
xor
push
dec
pop
pop
push
lea
push
push
push
lea
push
call
lods
add
add
movsb
add
into
lds
add
mov
add
pop
popl
mov
in
add
je
add
add
in
mov
add
in
pop
pop
push
add
add
sub
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
add
loope
push
mov
fdivr
add
add
mov
add
mov
lahf
mov
mov
jne
xchg
adcb
in
fdivr
lcall
leave
push
push
call
not
add
xchg
cwtl
movsb
mov
push
add
les
add
jo
pop
lods
xchg
scas
mov
imul
add
roll
sub
pop
ret
lea
push
not
pop
pop
push
shl
add
pop
pop
push
inc
ror
rol
shl
pop
pop
push
push
call
pop
jge
in
mov
push
test
ljmp
jno
push
rcr
fcmovne
mov
add
jge
add
jno
mov
add
push
add
push
add
add
mov
pop
add
outsl
add
pop
iret
xchg
ljmp
add
cmc
add
jecxz
sub
pop
pop
leave
push
push
push
push
call
mov
add
cmpsb
add
push
add
addl
lcall
add
mov
int
int3
fiaddl
mov
ret
jge
jne
add
lods
rolb
add
mov
sub
pop
ret
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
jbe
mov
pop
jb
add
add
add
add
add
mov
stos
clc
mov
add
add
outsl
fwait
hlt
insb
add
add
cmpsb
cli
stos
fmul
nop
add
pop
add
hlt
add
test
add
add
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
mov
flds
add
add
aam
jle
mov
mov
mov
call
add
pop
imul
add
stos
pop
add
cmpl
in
andl
mov
mov
add
jae
jge
outsl
lcall
in
loopne
lcall
push
add
pop
pop
push
lea
push
push
push
push
call
xchg
fiadds
mov
imul
pop
add
add
add
add
bound
add
add
pop
in
add
rcl
add
int
xchg
jmp
xchg
add
add
add
aad
add
add
loope
popa
fcompl
movsl
jno
lds
in
in
lcall
ret
cmp
leave
mov
xor
mov
mov
mov
loope
mov
ror
mov
mov
lret
add
mov
xchg
lret
or
jmp
add
add
int3
push
xchg
pop
inc
sub
clc
mov
mov
inc
movsl
repnz
dec
adc
push
outsb
minps
jmp
pmaxsw
cmc
dec
or
and
aaa
repz
jmp
mov
push
mov
and
lds
sbb
sbb
mov
ret
ss
arpl
or
outsb
adc
and
mov
test
imul
add
push
and
add
mov
shl
add
je
fidivrs
and
mulb
inc
mov
dec
mov
imul
test
repnz
mov
xchg
xchg
push
fimull
mov
mov
popf
or
jle
das
xchg
rcr
push
mov
push
pop
inc
clc
mov
xchg
lds
sub
xchg
sub
mov
jle
sbb
inc
idivb
icebp
cltd
add
and
cmpsb
mov
or
mov
lock
sbb
adc
push
mov
xor
jne
lret
fiaddl
jno
lahf
movsb
push
call
cld
call
sub
stos
addr16
xchg
out
jb
lea
and
pusha
xchg
mov
and
sbb
or
imul
das
sarl
push
pop
push
xchg
xor
lods
fmul
pop
mov
or
sbb
in
cs
cld
pusha
push
ret
push
arpl
dec
add
cmp
mov
jle
out
dec
sbb
imul
fs
and
rcrb
sub
or
mov
xchg
filds
aas
mov
adcl
or
test
repz
xchg
mov
push
cld
mov
mov
add
or
shll
mov
inc
icebp
and
popf
sbb
mov
movsb
mov
cmpsb
je
mov
imul
and
testl
popf
scas
push
jno
dec
sbb
fnstcw
dec
popa
add
test
loope
push
mov
jo
scas
mov
mov
and
leave
les
mov
and
in
jg
loopne
clc
jge
mov
sub
push
lods
inc
out
push
or
dec
push
cmp
jbe
bnd
mov
and
or
test
pop
mov
cmp
or
pop
imul
out
imulb
cmp
mov
pop
mov
mov
pop
mov
sbb
fistpll
jg
stc
push
pop
stc
outsb
sub
nop
inc
in
cmc
xchg
jmp
lcall
xchg
imul
fldenv
clc
pusha
cmpsb
push
jmp
adc
popa
jb
loopnew
loope
jl
xor
enter
xor
mov
jl
rol
decl
xchg
adc
xchg
inc
test
fbstp
mov
mov
call
aaa
pop
sbb
jns
mov
xchg
or
aad
lahf
and
or
jb
stos
xor
fs
loope
loopne
scas
dec
jns
popa
jns
out
fcompl
and
adc
lcall
test
call
add
inc
out
pcmpgtw
loop
mov
sbb
scas
add
es
int
sbb
aad
mov
shrb
data16
lock
into
ss
push
push
mov
and
mov
jp
dec
cmp
mov
jno
scas
push
xor
push
jnp
fldl
mov
loopne
xchg
loop,pt
push
dec
loope
jne
lock
lcall
inc
outsl
mov
ficompl
sub
lcall
or
dec
or
mov
dec
shll
xor
xor
mov
xchg
popa
cld
add
jge
fnstenv
cmp
jne
lock
push
andl
sti
lahf
sub
pop
add
stos
std
xrelease
cmp
mov
outsl
sub
dec
into
add
adcl
jae
adc
push
imul
cmp
js
dec
sbb
xchg
mov
aad
stos
jo
and
dec
divb
into
add
outsb
push
xchg
mov
mov
jno
movsb
popa
xor
out
in
pop
insb
gs
aad
les
cmp
add
sbbb
push
popa
mov
popf
in
cmc
mov
dec
popa
rcl
clc
xchg
dec
sbb
out
mov
push
out
or
out
cld
jae
xchg
data16
mov
inc
jge
cmpsl
adcl
fiaddl
push
outsl
scas
lds
fnstcw
orl
test
pop
aas
mov
neg
repz
faddl
out
ffree
cmpsl
pop
push
call
test
leave
pop
outsb
mov
popa
addl
xchg
mov
mov
inc
xchg
jne
xchg
outsb
mov
xchg
cmp
push
jne
repnz
fwait
lods
cmp
lret
xchg
fdivl
mov
cli
dec
push
push
and
in
mov
lods
nop
pop
adc
test
cltd
dec
jbe
lret
dec
mov
xchg
into
and
xchg
add
inc
dec
inc
out
mov
fcoml
fimull
pop
xor
loope
mov
add
jl
sub
add
jecxz
cmp
lods
sahf
stos
pop
add
insb
sbb
daa
jae
fcomps
ds
mov
xor
lock
jmp
cmp
outsb
test
std
push
fwait
add
lods
test
mov
and
pop
push
mov
cmc
nop
notb
les
and
push
sahf
cltd
in
add
mov
push
repz
hlt
shrl
aam
lcall
pop
xor
fsts
xor
push
push
add
loop
mov
repz
xor
pop
bound
cmpsb
cs
adc
movsl
loop
repnz
mov
adc
add
std
nop
cli
leave
and
xor
mov
bound
push
imul
aam
jb
cld
cmp
cltd
mov
lock
xlat
dec
or
mov
push
mov
push
pop
sbb
inc
xorl
les
outsl
jb
xchg
pop
add
add
test
loope
cmpsl
testl
adc
mov
fstp
fmulp
decb
mov
bound
scas
fstpl
pop
ljmp
aad
stos
cmc
dec
imul
das
mov
jnp
or
lret
ljmp
into
ficoml
daa
daa
in
mov
pusha
pop
loopne
aad
adc
test
push
les
mov
addb
xor
mov
fld1
xor
in
rcll
lds
lcall
push
xchg
sub
mov
sbb
cmpsb
mov
sahf
in
inc
add
lret
sub
in
loop
scas
vpshld
repz
xchg
mov
push
mov
cmp
loope
in
enter
in
call
insl
stos
xchg
mov
and
push
movsb
inc
jle
iret
pop
fnstenv
leave
xchg
and
fisubs
mov
mov
fdivrs
sarl
iret
sbb
sub
lcall
pop
cs
out
movsl
iret
pop
jo
xchg
push
add
adc
xchg
hlt
jge
call
int
mov
pop
mov
pop
sbb
shrl
sbb
repnz
mov
inc
pop
out
sbb
jg
lock
orb
jmp
push
sub
iret
fwait
sbb
jle
xor
das
lods
jbe
push
arpl
sbbb
insb
in
mov
sub
addr16
cmp
inc
loopne
xor
push
sbb
enter
xchg
inc
ret
dec
lea
lock
jb
lea
jno
les
dec
inc
xor
jge
mov
add
imul
sub
sub
scas
ja
xlat
fiadds
ret
fcomip
aam
stos
push
jp
fldcw
sahf
pop
mov
loope
push
sub
out
insb
or
and
mov
mov
cld
sub
rcr
inc
push
mov
sbb
fsubrl
push
jmp
mov
fsubs
stc
mov
testb
jae
sub
xchg
pop
into
out
sbb
mov
push
jo
movsb
arpl
enter
aas
dec
mov
dec
xor
or
imulb
enter
jne
in
dec
xchg
es
ds
ja
cmp
out
fmul
adc
dec
inc
movsb
sbb
jnp
push
or
mov
aaa
jle
mull
mov
add
mov
pop
dec
out
leave
clc
daa
pushf
frstpm(287
xor
fwait
or
popf
sarl
add
lcall
mov
dec
jg
jg
pop
leave
xchg
idiv
pop
push
outsl
aam
imul
push
pop
testl
cmp
lock
jmp
les
inc
pop
cmpl
jo
lret
or
sbb
aam
nop
xchg
subl
movsl
mov
cmp
sbbb
lea
and
out
xchg
pop
adc
inc
xlat
ljmp
pop
das
xor
loop
rcr
jnp
xor
leave
push
frstor
jno
iret
inc
imul
dec
rcll
sti
sub
cmp
mov
add
ss
in
push
inc
shrb
sub
or
push
leave
sti
mov
xor
fdivrl
push
repz
lock
cmp
mov
lods
mov
addr16
out
daa
popf
mov
sbb
movsb
daa
push
jle
loopne
into
add
adc
xor
pop
lret
test
hlt
sbb
dec
jle
lret
sbb
ror
pop
or
ficoms
int3
lock
xchg
outsl
and
ffreep
mov
xlat
aam
popf
mov
mov
out
enter
andl
dec
inc
xlat
push
sub
call
add
sahf
arpl
mov
mov
pop
xorb
shlb
lea
mov
imul
int3
fildl
popf
jb
and
aad
xchg
mov
lock
scas
add
jp
cmp
aam
pop
rcr
xlat
leave
leave
adcl
fsts
rcrl
enter
inc
dec
push
sub
cli
and
fcmovbe
inc
and
add
fldcw
fcomps
pop
ss
add
popf
xchg
pop
ds
or
pop
lahf
cmp
mov
ds
leave
sbb
jle
push
mov
push
xchg
insl
add
iret
addl
ja
mov
insb
xchg
mov
inc
fyl2xp1
lcall
fidivrl
fldenv
pop
cmp
jne
xor
cmp
in
xchg
adc
jno
lret
pusha
mov
stos
sar
inc
leave
cmp
mov
fs
mov
testl
les
lods
loop
sahf
dec
arpl
arpl
aad
or
sbb
adc
loopne
pop
sbb
insl
into
int
outsl
adc
pop
sahf
ljmp
adc
inc
ret
test
inc
loopne
test
cmpsl
xchg
push
sub
xor
mov
pop
lds
movsb
outsb
cltd
out
xchg
lret
int3
pop
movsl
out
jne
add
je
cld
popf
fs
ja
sbb
jbe
mov
shll
add
sub
mov
jge
add
cmpl
dec
cld
xlat
dec
xchg
daa
inc
sub
test
gs
push
lret
cwtl
jae
xor
mov
jl
outsl
jne
idiv
mov
stos
pushf
iret
pushf
push
ja
push
mov
xchg
mov
jae
das
ret
adc
mov
sub
xor
cltd
pusha
mov
or
push
repz
call
cmpsl
lea
hlt
ficomps
daa
and
add
lahf
pcmpgtw
jge
repz
pushf
lcall
xchg
adc
pop
sub
fbld
adc
push
cmp
negb
ja
sbb
cmpsl
pop
dec
mov
call
lods
push
push
mov
int
pop
testb
popf
repnz
pop
movsl
push
fisubrs
xchg
inc
jle
out
pop
cs
call
mov
xor
aas
ljmp
xlat
testb
pop
mov
mov
lock
xlat
cmp
push
rcl
add
stos
xorl
cmpsl
push
rcrb
jne
imul
fstpl
inc
iret
sub
mov
adc
jnp
push
cmc
jno
mov
sbb
std
addr16
repz
jb
xor
push
jne
adc
push
push
sbb
daa
loopne,pt
pop
in
shll
mov
mov
in
and
idivl
sbb
test
sahf
sub
fwait
mov
in
jae
jne
les
dec
ds
xchg
enter
std
call
stos
ss
out
jl
pop
push
sbb
mov
ljmp
add
mov
mov
jecxz
in
push
mov
mov
jl
jae
inc
inc
jl
out
out
adc
xchg
test
sbb
popf
je
jb
jmp
in
pop
sbb
xchg
scas
scas
mov
stc
mov
push
jae
jae
push
fs
and
sbb
cwtl
mov
in
push
cmpsl
sub
ret
cltd
popf
pop
push
or
xchg
outsb
out
psubb
cli
pop
aas
bound
mov
dec
in
jno
cmp
fcmovu
inc
mov
inc
mov
dec
ds
mov
iret
out
or
pop
rcrb
mov
jns
sub
test
sub
stos
push
and
inc
cmp
lret
clc
imul
cltd
clc
fmull
loope
movsb
out
jns
test
ljmp
inc
push
pop
mov
pop
cmp
int3
inc
pop
cld
and
sub
mov
add
mov
arpl
mov
mov
push
inc
mov
dec
and
jo
out
dec
cmp
mov
mov
dec
fiadds
mov
je
adc
add
in
test
addb
sahf
popa
push
jbe
movsb
push
jg
scas
paddw
pop
outsl
push
push
push
sub
add
ds
xchg
scas
jo
push
jge
ret
call
aam
xchg
fucomp
pop
mov
jg
icebp
movsb
jae
lock
push
push
pop
fidivs
push
das
push
mov
popf
addl
fsub
inc
lea
addr16
jb
xor
lea
js
dec
rcrl
mov
loop
sbb
xchg
fdivrl
add
rcll
jne
xor
test
adc
pop
jg
pop
push
jae
pop
arpl
or
fldenv
add
fs
sbb
mov
xor
out
dec
faddp
notl
sbb
jno
jmp
push
add
lret
jl
push
hlt
jne
jns
xlat
test
mov
push
mov
jge
mov
stos
test
scas
mov
dec
sub
shrb
les
mov
sub
sbb
lods
insb
and
mov
mov
icebp
push
lods
lahf
mov
cmpl
fdivrl
push
sahf
mov
lods
cmp
xchg
rcrl
mov
cmpsb
leave
add
mov
pop
push
jae
lcall
pop
testl
in
enter
lds
xchg
jge
adc
decl
insb
xor
jae
rol
bound
mov
pop
nop
xor
push
hlt
negb
sub
mov
popa
adc
data16
add
bound
xlat
dec
test
mov
ret
and
push
ror
out
clc
rcrb
ret
pop
push
sbb
push
insl
pop
insb
cwtl
mov
mov
sub
push
es
or
fmuls
adc
cmp
jno
popa
adc
or
mov
or
aas
std
iret
inc
dec
ret
jne
in
push
and
hlt
pop
mov
cmp
cwtl
cli
mov
sbb
ret
push
repnz
cld
cmpl
lods
push
or
popa
idivl
pop
rol
ret
movsl
addr16
imul
repnz
xor
sbb
ljmp
xlat
into
call
imul
test
negb
pop
dec
test
jmp
sbb
xchg
mov
das
inc
mov
fwait
aaa
mov
imul
cmpsb
jmp
xchg
add
into
jl
enter
dec
cmp
mov
ss
sub
ds
hlt
mov
pop
arpl
mov
stc
stc
imul
jae
mov
in
mov
in
mov
lds
xor
lret
pop
jp
test
push
repz
mov
push
xchg
fbld
xchg
xchg
cmc
push
push
or
cmp
pusha
sbb
fistps
pop
add
scas
xor
ret
stos
sub
into
test
mov
add
dec
jns
cmpsl
dec
jnp
inc
cmc
ret
out
jnp
cmp
stc
call
xchg
lret
pop
push
add
add
stos
mov
test
adc
jg
aaa
xchg
mov
pop
pop
lock
rcrl
mov
and
data16
lods
cmp
jae
push
popf
push
mov
adc
out
insb
mov
push
pop
test
loop
xchg
xchg
cmp
aas
imul
bound
or
push
xchg
mov
addr16
cmc
inc
loope
jecxz
ja
pushl
pop
int3
push
cwtl
mov
movsl
lock
mov
lods
sbb
sub
jne
or
pusha
push
pusha
dec
outsb
xchg
pop
jno
push
jl,pn
sub
pushf
jno
rcr
scas
popa
sbb
sub
aam
push
or
fldl
test
mov
cs
ret
add
push
or
pop
xchg
inc
inc
jp
cmpsl
dec
fldcw
pop
adc
xchg
bound
pop
cmc
into
jmp
inc
jecxz
cmc
ja
ljmp
fildll
sbb
pop
pop
xchg
gs
shlb
scas
cmp
enter
mov
shrl
icebp
cmp
inc
xor
mov
daa
dec
lock
decl
mov
cmova
mov
inc
sub
and
mov
mov
mov
inc
mov
stos
sbb
dec
out
insb
dec
push
xor
in
xchg
and
and
xor
fsubr
das
aam
movsb
faddl
push
js
push
mov
dec
xchg
pop
pop
and
inc
je
sub
mov
push
fadds
arpl
add
push
js
insb
add
jno
outsb
insb
xorb
push
loope
ds
mov
mov
dec
in
jmp
adc
or
pop
xchg
daa
xchg
mov
in
in
fwait
test
push
sahf
dec
adc
jb
popf
and
dec
push
lods
cmp
cwtl
pushf
mov
cld
pop
loop
rorb
cs
sub
shll
cmp
out
lods
cs
pop
pop
dec
push
pop
pushf
leave
jo
and
shrl
jl
int3
test
lods
push
gs
flds
pop
cmp
mov
loop
jge
mov
into
mov
shr
insl
sub
cmpsl
mov
jns
inc
and
dec
xlat
movsb
pop
outsb
jg
loopne
lret
dec
out
int
xlat
jle
arpl
pmullw
jmp
adc
lcall
lock
dec
mov
sbb
dec
or
cli
pop
gs
cltd
iret
ds
add
pop
mov
sub
ret
sbb
aam
dec
out
push
and
push
inc
sbb
xchg
sbb
mov
mov
hlt
mov
inc
or
test
cltd
inc
add
js
inc
inc
push
jnp
pop
xor
jb
repnz
fidivrs
inc
movsl
ficompl
stos
push
aam
in
lahf
and
das
addr16
jbe
std
stos
pop
jmp
cmp
cli
lods
movsl
pop
jno
test
jne
mov
add
pop
call
enter
push
outsl
dec
xorl
insl
sbb
sarl
sub
mov
cmpsl
sub
add
addb
ss
pop
bound
push
cwtl
pop
mov
cmp
jp
incb
icebp
les
mov
out
or
add
push
test
cmp
lods
jbe
lea
loopne
cli
add
ss
aas
and
dec
movsb
pop
xchg
fwait
or
mov
popf
pop
adc
sub
nop
scas
out
jo
movsb
repz
mov
xor
sarb
mov
push
test
pusha
cmp
mov
outsb
sub
stos
mov
fcomps
dec
mov
dec
mov
out
ret
dec
pop
add
or
fcmovbe
inc
fstps
mov
sub
in
dec
add
inc
sub
push
sub
repz
mov
ljmp
aas
bound
in
mov
cltd
pop
and
out
xor
in
push
mov
cld
xor
jecxz
jl
adc
or
and
inc
aam
xchg
xchg
insb
xchg
xlat
pop
cmp
dec
test
lret
adc
into
and
pop
mov
cwtl
mov
sbb
push
inc
xchg
push
xchg
jg
lods
nop
mov
mov
stc
mov
jmp
pop
push
mov
dec
cmp
sbb
inc
testb
arpl
movsb
loop
cmp
movsl
in
cli
mov
sub
fwait
mov
out
cs
das
call
or
loope
cwtl
out
fs
inc
and
cmc
in
inc
shrl
sahf
hlt
mov
xlat
scas
rcll
pop
adc
lret
fwait
mov
and
bound
pop
xchg
jg
fcom
fs
out
pop
jne
jg
into
lock
aam
popl
scas
les
fisubrs
adc
aas
adc
add
in
push
cmp
jg
jae
mov
les
test
cltd
lret
or
add
xor
adc
xchg
cmc
add
dec
mov
out
pop
cld
outsb
ret
push
insb
or
data16
lds
scas
mov
and
push
int3
in
jp
pop
and
cmpb
and
fmull
mov
outsl
test
out
test
push
fildl
sbbl
mov
or
in
mov
or
add
hlt
dec
data16
adc
outsl
int
xchg
dec
std
mov
les
in
pop
push
outsb
int3
pusha
xor
and
adc
cmpsb
sahf
test
push
push
das
sbb
mov
imul
rclb
lods
sub
lds
xor
inc
stc
mov
push
lea
mov
dec
xchg
sbb
mov
cli
xchg
test
pusha
shll
shlb
movaps
inc
lock
and
or
jmp
or
xchg
enter
pop
cli
lahf
and
or
mov
mov
fdiv
cli
es
scas
mov
xlat
mov
stc
test
mov
push
inc
cmc
jmp
dec
mov
bound
cmp
mov
ss
iret
mulb
out
mov
push
fdivrs
aad
sarl
stc
xchg
lock
icebp
dec
xchg
xor
xor
dec
mov
fiaddl
push
cmp
repnz
push
imul
cwtl
xchg
aaa
and
rcrl
cltd
imulb
sti
insb
mov
std
or
cmp
aas
and
push
adc
push
xor
mov
pusha
sub
xchg
imul
hlt
pop
sub
jge
jnp
xor
and
rcl
sub
mov
jne
sub
mov
out
movsb
sbb
push
inc
in
movsb
loopne
aaa
movaps
mov
loopne
xchg
mov
push
pop
jbe
mov
movsl
pop
mov
test
pop
sub
or
mov
fcmove
mov
fisubl
mov
and
jecxz
lds
mov
pop
dec
fs
sub
enter
mov
ljmp
lea
jae
cwtl
jns
jecxz
xchg
aas
inc
and
or
mov
movsl
stc
lahf
xorb
call
sub
aad
popf
rolb
test
cmp
rcl
outsl
idivl
loope
popf
dec
sub
fmul
dec
mov
add
add
push
mov
mov
and
dec
jb
pop
in
lret
pushf
clc
fwait
iret
xor
adc
jmp
fsubr
outsl
dec
push
xor
clc
or
popa
hlt
pop
inc
dec
mov
mov
xor
cmpsb
fistpl
or
test
les
pop
fisubrl
dec
jp
sbb
rcll
sub
push
inc
jp
cmp
cmpsl
hlt
mov
fildll
or
dec
pushf
xor
inc
or
mov
jge
jecxz
lods
mov
subb
and
out
jmp
and
fsubl
add
jo
sub
cmp
out
push
add
movsb
mov
into
sets
adc
mov
mov
dec
inc
mov
dec
add
test
movsb
shll
jecxz
aam
daa
jbe
sarb
subl
push
adc
sbb
cmp
in
fwait
push
mov
in
add
sub
aam
pop
cmp
sbb
jne
sub
inc
insb
movsb
repz
xchg
insb
fdivrl
imul
xchg
ret
call
mov
call
fidivl
mov
pop
pop
mov
or
mov
adc
push
jle
or
pop
mov
aam
imul
into
cmp
mov
or
xchg
int3
hlt
pusha
add
inc
mov
xor
and
xchg
repz
mov
cwtl
mov
cmp
push
xor
mov
fnstcw
scas
sub
mov
js
jno
sub
inc
pop
test
cmp
ja
xchg
je
in
nop
mov
mov
ljmp
lds
aaa
adc
mov
mov
mov
adc
pop
sub
cltd
je
rorl
inc
aam
mov
cmpsl
ficoms
enter
sbb
cmp
and
inc
js
fcmovbe
inc
pop
scas
mov
decb
aas
push
loop
cmpb
push
repz
mov
dec
push
pushf
sub
test
adc
call
and
jo
sahf
iret
xor
orb
mov
mov
jp
cmp
mov
mov
std
xchg
cmp
inc
loopne
lods
cmpsb
pop
jle
mul
out
ss
inc
inc
push
cmc
outsl
push
and
adc
popa
xlat
lock
push
dec
xchg
cltd
push
mov
sbbb
lahf
insb
negl
fisubs
hlt
inc
adc
lods
xchg
lock
rol
ss
xchg
pop
loope
and
into
aaa
xchg
scas
jp
rcrl
addr16
adc
mov
ret
out
xchg
pop
add
lods
mov
mov
pop
xchg
hlt
sbb
fwait
cmp
ss
jns
cmp
cld
and
add
mov
or
jge
outsl
cmc
in
aas
inc
mov
out
push
nop
scas
cli
xchg
scas
adc
xor
push
dec
cmp
mov
les
sbb
mov
hlt
decb
pop
popf
sub
add
jbe
push
dec
lea
pop
dec
push
and
arpl
subb
test
jne
loop
pop
fs
data16
std
sub
shrl
gs
sbbb
xchg
in
inc
sub
mov
mov
stos
and
or
jle
mov
lea
mov
test
stos
in
shlb
jno
push
xor
lods
cwtl
push
test
imul
les
mov
xor
test
cmp
jnp
lock
pop
jne
jp
xorb
or
and
pop
pop
sbb
inc
xchg
sub
in
in
xchg
or
les
pop
adc
mov
sbb
sti
pop
cltd
dec
jecxz
add
cmp
das
mov
lret
enter
adcl
sbb
repnz
cmp
mov
push
addr16
aad
mov
mov
or
sbb
loope
xor
inc
xchg
in
sbb
shr
mov
roll
inc
cltd
fists
dec
adc
add
sbbl
cmp
scas
push
pusha
sub
sbb
outsb
adc
cli
push
mov
pop
mov
sbb
push
or
mov
xchg
hlt
xor
xor
cmc
push
cmp
int3
jle
inc
loop
popf
in
hlt
std
xchg
jo
daa
loope
pop
cmp
incb
jecxz
mov
cwtl
xchg
pushf
call
cli
jp
pop
sti
jmp
xor
cli
negl
sbb
mov
test
mov
jle
jo
fisttpl
gs
faddp
aam
sub
pop
outsb
jg
jl,pn
popf
mov
pop
arpl
cs
pushl
orl
test
cwtl
insb
sbb
inc
aam
iret
mov
cmovp
jae
inc
mov
sti
scas
add
cmp
and
dec
fcompl
daa
jl
push
nop
mov
jns
out
push
inc
loop
jno
decl
add
sub
fcoml
insb
mov
cwtl
shl
add
ja
adc
cmp
or
lret
xchg
jl
xor
sub
pop
push
and
sarb
repz
mov
movsl
pop
mov
test
sar
nop
push
jnp
aam
mov
orb
inc
jmp
lahf
add
ficomps
jns
icebp
pop
and
add
inc
js
xchg
xor
fdivr
ss
push
enter
mov
push
mov
popl
inc
leave
sarb
gs
es
pop
jae
cmp
dec
cmp
fbld
add
flds
jle
inc
jg
sub
mov
push
jl
fstpt
test
mov
js
mov
mov
popa
pushf
call
leave
pop
xchg
push
mov
mov
frstor
loopne
mov
jmp
jg
call
pop
pop
add
xlat
adc
pop
stos
jmp
addr16
jge
push
ja
inc
mov
mov
mov
dec
jmp
adc
adc
cmpsb
pop
dec
lcall
inc
lock
sbb
rcrb
sub
in
andnps
pop
dec
setns
stos
mov
and
jbe
add
jns
ret
push
cltd
hlt
push
jbe
sbb
xchg
xchg
arpl
cmp
out
pop
fldl
wbinvd
iret
xor
je
mov
ljmp
fmull
mov
ret
scas
lods
jns
jg
mov
cmp
rorb
loope
cmp
adc
inc
cwtl
rorl
sub
inc
inc
movsl
movl
or
into
mov
dec
repz
lods
mov
popf
or
roll
push
fs
push
mov
cmpsl
mov
mov
pop
pop
or
cmc
lods
xchg
shlb
add
popa
in
push
lea
out
pop
add
inc
jl
dec
lahf
mov
dec
adc
push
or
pushf
or
popf
lods
jge
add
cltd
in
push
inc
dec
push
sahf
call
sbb
icebp
ret
push
ljmp
rolb
dec
test
stc
iret
inc
nop
lret
testl
jbe
lret
popf
push
aas
insl
ja
dec
loope
push
cmp
mov
stc
push
std
sbb
outsl
xchg
aas
test
dec
and
rcrb
xchg
imul
jae
adcb
sti
cmpsb
outsb
push
fiadds
jmp
dec
mov
shll
out
cmc
mov
mov
sub
pop
or
popa
hlt
fstps
data16
xlat
loop
in
leave
iret
sbb
dec
jl
fnstenv
data16
aaa
aam
and
in
ret
mov
add
mov
push
scas
in
mov
inc
xchg
or
xchg
add
inc
call
inc
lret
sub
decl
sub
mov
xchg
adc
dec
loope
mov
nop
loopne
fcomi
add
icebp
jns
fwait
test
ret
cwtl
add
adc
lcall
mov
push
inc
push
repz
lods
sub
stos
mov
sub
push
ret
test
test
push
and
sbb
enter
repnz
sbb
lcall
lret
xchg
cld
cmp
jo
inc
int
js
fists
mov
sub
in
mov
jnp
jb
xchg
ja
arpl
sub
cld
cmp
test
sbb
push
xor
test
clc
cmp
or
mov
add
pop
inc
jb
in
addb
in
add
ds
pop
lods
mov
xchg
jmp
and
jno
pop
loope
nop
push
cmp
mov
or
repnz
lret
inc
cmp
cmc
inc
fbstp
movsb
jo
sub
sub
add
stc
jbe
mov
js
lds
sbb
xchg
xor
arpl
mov
aas
fistps
pop
push
aad
xchg
scas
fucomp
pop
lods
shrl
or
aam
xor
xchg
pop
pusha
add
lods
test
data16
gs
jae
imul
mov
test
xor
mov
mov
add
mov
js
push
repnz
mov
mov
leave
jb
mov
aam
jo
or
outsl
jno
leave
icebp
test
repnz
or
popa
or
rorl
cld
clc
dec
jo
jnp
insb
cmp
inc
sbb
mov
pslld
les
inc
pop
adc
mov
xor
lds
andb
xor
pop
inc
lods
dec
sub
lds
lcall
je
jbe
sbb
sub
xchg
sub
lds
or
hlt
adc
dec
imul
std
fiadds
rcrb
mov
ds
imul
fldl
lock
sarb
nop
push
daa
xchg
clc
lods
out
fucom
ss
lock
fstps
push
repnz
incb
jl
in
push
xchg
and
push
mov
fidivrs
jb
push
aam
loopne
xchg
iret
adc
pop
stc
mov
gs
sbb
mov
push
add
cs
jg
movsb
cmpsb
jb
fs
movsb
push
iret
loope
adc
adc
push
jge
loopne
rep
dec
pop
call
mov
pop
jge
or
fs
adc
inc
sub
outsb
mov
xchg
insb
pop
jo
jl
call
scas
and
insb
sarl
stc
push
aas
loop
hlt
ret
mov
cmpsb
pop
stos
xchg
mov
sbb
xchg
ss
test
mov
cltd
pop
dec
outsl
xchg
or
cmpsb
mov
ja
leave
lods
movsb
jecxz
adcb
sarb
xorl
dec
mov
stos
or
cwtl
outsl
cmp
xchg
les
pusha
mov
and
push
sbb
mov
and
xchg
popa
int3
mov
jns
dec
sub
lods
neg
cmp
lods
pop
sub
imul
loopne
test
and
arpl
ljmp
stos
pop
loope
sbb
enter
mov
fidivl
repz
vpunpckhwd
filds
lock
lods
je
push
mov
aam
pop
hlt
pop
inc
xorb
adc
nop
out
cmc
imul
dec
xor
dec
gs
add
fistpll
lods
incb
mov
mov
xor
adcb
or
xor
test
incl
dec
leave
icebp
lret
dec
xor
and
stos
add
ljmp
icebp
out
add
out
mov
push
lock
in
or
mov
sbb
cmp
lahf
push
mov
bound
iret
adc
push
popf
sbb
jno
adc
cmc
sbb
dec
and
repz
sahf
imul
pop
iret
test
dec
insb
les
cld
and
movsl
mov
xchg
push
cwtl
sub
xchg
mov
sbb
sbb
mov
fisttpll
or
call
mov
push
cmp
rcl
in
xchg
xchg
sub
gs
pop
imul
repz
fsts
pop
sbb
cmp
shr
push
xchg
dec
clc
cld
addl
push
jle
ret
pop
mov
aaa
adc
nop
and
dec
dec
test
mov
aad
sub
add
mov
jmp
xchg
sahf
dec
xchg
jno
in
das
mov
ret
xor
adc
out
int
cmp
add
test
jg
push
out
out
out
rcr
mov
daa
shl
mov
adc
sbb
clc
push
push
ficoml
vpor
arpl
hlt
cwtl
push
int
dec
sub
shll
cwtl
js
cmp
popa
and
or
dec
mov
sbb
sbb
mov
scas
scas
add
mov
sub
outsl
mov
mov
ja
inc
and
notb
outsl
pop
stos
mov
lahf
jne
jmp
clc
lcall
pop
jno
inc
pop
data16
ret
ret
fisubs
mov
mov
mov
ss
xchg
or
jmp
shrl
inc
fisubs
movsl
jo
or
test
mov
xchg
or
out
ss
repnz
pop
jb
leave
bound
ss
es
adc
xchg
repz
dec
pushf
adc
lret
push
dec
mov
aas
sbb
inc
jno
mov
mov
je
sbb
gs
inc
jne
sti
cmp
in
jecxz
int3
pop
pop
std
push
idivb
xchg
dec
and
add
nop
arpl
dec
push
ja
dec
int
push
cmpsb
out
aad
inc
cmp
lret
fisubl
pop
cmpsl
and
aaa
jae
loope
bound
lock
popf
and
dec
or
mov
arpl
mov
mov
xchg
leave
icebp
cli
lock
xor
scas
xor
add
pop
data16
movsb
push
xor
rol
push
cmc
xorb
xor
mov
test
jns
mov
pop
lods
cwtl
add
mov
sub
shrb
sbb
jne
adc
jae
movsb
out
cs
push
cmp
mov
repnz
push
and
adc
fisttpll
imul
stos
jns
inc
popf
icebp
data16
fwait
lock
lock
sbb
jmp
popa
imul
sbb
push
jbe
mov
ret
adc
mov
pusha
lods
pop
xchg
xchg
mov
jecxz
aaa
mov
pop
sbb
or
test
and
and
ja
rolb
mov
iret
mov
push
xchg
cmpsl
out
addb
add
mov
shll
mov
or
jmp
or
test
push
outsl
pop
push
iret
clc
outsb
in
fs
push
aaa
jo
shrb
lods
rcr
fdivs
loopne
aas
ja
or
pop
xchg
push
sbb
pop
mov
test
push
cmp
push
sbb
jg
loop
sub
xor
mov
jnp
dec
ds
lret
jb
mov
arpl
sbb
inc
pop
or
xor
or
adcb
mov
aaa
data16
inc
movsb
push
xor
push
aaa
les
imul
cmpsl
sub
mov
imull
cmpsb
movsl
cmp
pop
fistpl
stos
int
pop
mov
inc
cld
mov
pop
fnstcw
jge
bswap
out
insl
popa
rcrw
imul
leave
loope
lcall
leave
lods
sub
shll
push
dec
cbtw
xor
xchg
jbe
xor
in
sbb
inc
jne
and
jo
push
dec
bound
dec
mov
inc
test
and
inc
jmp
les
andb
adc
clc
loope,pn
dec
push
mov
jbe
push
adc
jno
scas
mov
dec
xlat
cmc
xor
out
push
xor
inc
add
pop
xchg
jo
rclb
pushf
test
push
jbe
dec
dec
in
out
cmpsb
rcll
dec
push
xor
mov
jo
dec
ljmp
jbe
lock
mov
pop
and
enter
jns
addr16
inc
imul
and
inc
jnp
mov
jmp
shll
mov
xchg
stc
cltd
inc
test
imulb
adc
sbb
mov
or
leave
jb
sbb
pop
sub
pop
insl
xor
decb
or
nop
mov
inc
cwtl
cmp
xchg
xchg
pop
subl
pop
xor
sti
sub
ret
lfs
aas
shl
insb
aas
mov
dec
int
push
xchg
inc
jbe
xchg
mov
inc
mov
insb
mov
add
dec
fcmovu
sub
xchg
fisttpl
mov
and
mov
add
adc
dec
fdecstp
add
add
call
cmp
test
cmp
mov
lret
xlat
dec
mov
adc
mov
xchg
or
jecxz
mov
xchg
cmp
pop
fdivrl
loop
sbb
jl
push
sub
sbb
and
lret
sbb
inc
mov
cmpsb
imulw
aam
scas
or
hlt
mov
jb
cmp
adc
inc
cmp
mov
push
xor
sarb
aas
arpl
sub
sbb
sub
or
roll
cmpb
xchg
add
leave
fsubs
sbb
call
and
cmpsl
insl
mov
mov
adcb
stos
shr
int
leave
mov
fsts
ret
and
sarb
jo
addb
jns
or
sbb
stc
out
mov
xchg
add
pusha
lods
bound
pop
jg
jb
shrb
sub
int3
push
test
mov
mov
push
mov
sbb
stc
insb
cmpl
cmp
or
call
mov
scas
jb
inc
inc
gs
push
jle
sbbl
push
clc
inc
daa
jbe
cmpsb
call
jnp
aad
fidivs
and
int
mov
mov
add
or
ss
add
lahf
jle
fcmovb
jb
or
outsl
mov
cltd
clc
rol
clc
pop
shll
lods
sbb
les
cmp
push
sbb
hlt
xchg
sub
inc
repnz
cmp
inc
cmp
push
jmp
sbb
movsb
jnp
sub
ficoml
int
test
das
xor
sti
xchg
sbb
popf
popa
cli
mov
lret
inc
pop
mov
pusha
sub
xor
sbb
enter
rcll
cmp
add
sbb
xor
pusha
jmp
cld
into
or
dec
sbb
add
clc
int
in
push
push
ror
and
mov
enter
cmc
xor
sub
sub
push
movsl
cmc
xchg
push
mov
outsb
mov
pop
dec
pop
outsb
mov
lods
xchg
inc
ret
bound
dec
fmul
std
xchg
imul
jl
mov
sbb
mov
popa
cmc
push
pop
scas
js
int3
stc
test
fidivrl
fcomi
ljmp
xchg
mov
sbb
mov
and
pop
dec
mov
push
cmp
or
arpl
and
xchg
and
test
stos
jo
bound
ja
push
ljmp
mov
cmp
mov
pop
xorl
loopne
stos
dec
xor
enter
outsl
adc
push
call
leave
aad
out
pop
and
cmp
mov
pop
mov
cmpsb
mov
jecxz
movsl
addb
adc
ss
out
adc
pop
jle
dec
sub
jp
ret
icebp
int
jo
lcall
cmp
in
xchg
sbb
mov
imul
stos
mov
jo
xchg
xchg
pushf
xchg
shr
popf
loope
push
in
xchg
cmpl
mov
xchg
mov
icebp
stos
push
aas
mov
xlat
mov
jns
mov
aad
jns
xor
mov
add
push
jnp
push
jne
sub
fs
or
stos
mov
jnp
int3
cmp
sub
mov
insl
mov
xor
dec
push
xor
out
jb
xchg
in
or
es
mov
cmp
shll
loopne
and
push
cmpsb
notl
sar
out
insl
jb
mov
xchg
push
push
in
out
std
negl
bound
fwait
mov
pop
dec
sti
enter
sbb
adc
mov
fnstenv
pop
push
mov
mov
out
sub
add
add
add
std
sbb
test
lcall
jbe
xor
fnstsw
or
inc
ret
cwtl
fstl
divl
xchg
sahf
or
scas
lcall
jo
mov
pop
sbb
add
cs
int3
fnsave
sub
lock
inc
clc
aad
insb
mov
mov
mov
int
xor
stc
popf
ja
negl
sub
fld1
add
repnz
std
enter
jae
cli
adc
cmp
pop
fcoms
cwtl
sbb
push
push
fs
mov
ret
sbb
dec
seta
cltd
inc
cmc
fbstp
lret
mov
out
ja
cmp
and
push
lret
stos
shrl
mov
aad
iret
push
mov
movsb
out
pop
add
and
rcrl
vunpcklps
xor
xchg
dec
jmp
lret
push
inc
test
inc
jp
or
xchg
popa
or
xchg
sbb
push
sub
daa
xor
mov
iret
cltd
xchg
add
bound
mov
pop
inc
in
jnp
push
in
jb
dec
sahf
cltd
gs
lods
ret
and
adc
ds
jbe
and
jg
mov
das
call
nopl
scas
sub
jmp
arpl
mov
mov
scas
dec
sbb
cmpsl
icebp
fisubrs
rcr
jmp
fdivrs
pusha
pop
mov
xorl
outsl
pop
je
aad
lods
push
flds
push
std
sub
pop
sub
je
xchg
jmp
xchg
mov
je
mov
push
adc
fiadds
jo
and
xchg
cmp
cmpsl
cmpl
fmuls
sub
mov
or
cld
jno
add
adcl
setae
xor
mov
in
clc
mov
xor
adc
sbb
pop
popa
mov
imul
jg
test
in
jmp
lds
mov
jb
stos
jecxz
ja
add
push
test
mov
sub
mov
out
loop
mov
cmp
cmp
jno
jecxz
mov
inc
sbb
dec
dec
pop
repnz
mov
mov
call
jg
sub
pop
and
jmp
and
insl
jecxz
sbb
sbb
mov
cwtl
movsb
dec
cmc
pop
in
jne
stos
cmpl
test
and
cmp
fstps
cmp
xchg
jbe
inc
sub
inc
add
sub
aad
lret
ds
inc
sub
in
cmp
xchg
leave
lock
and
push
xlat
movsb
je
inc
xchg
repz
push
and
pop
xor
aaa
sar
mov
mov
jb
push
xor
cmc
stos
xchg
jae
jns
dec
xchg
clc
mov
cld
or
xor
push
push
push
pop
push
imul
add
rcl
sub
insl
rcl
xchg
rcrl
pop
sbb
add
sbb
mov
insb
or
repnz
arpl
fwait
in
cmc
inc
test
leave
mov
add
xchg
je
int3
test
icebp
leave
sbb
cmp
in
sbb
fiaddl
lret
xor
fildll
addr16
inc
cmp
mov
xor
aaa
and
icebp
mov
fsubrp
fnclex
jp
sbb
lock
mov
and
mov
stos
sub
std
xchg
outsl
pop
cli
add
fnsetpm(287
int3
xorb
or
data16
or
sbb
popa
xor
push
hlt
in
pushf
addr16
mov
aam
cwtl
sbb
adc
gs
cmpsb
mov
cs
scas
push
dec
sub
fbld
in
daa
icebp
xlat
into
xor
into
sbb
cli
pop
mov
jecxz
inc
jb
lret
lret
adc
mov
daa
insl
cli
outsb
test
xchg
inc
pusha
stos
adc
and
inc
pushf
int
sbb
pusha
cmpsl
add
inc
pmullw
ret
rcr
xchg
mov
addl
hlt
fdivr
mov
rcr
inc
dec
repnz
test
imul
lret
popa
inc
mov
jl
xor
pop
jge
lahf
dec
out
push
pop
xor
push
adc
cli
cld
xchg
data16
and
push
xchg
popf
std
js
push
jb,pn
jl
unpcklps
cmp
es
stc
or
sbb
repz
cmpsl
push
adc
add
sub
sahf
jns
inc
push
inc
sbb
clc
pop
xchg
add
dec
dec
mov
call
jmp
dec
add
adc
cmp
aas
and
xor
sarb
pushf
mov
inc
stos
mov
or
xchg
sbb
xchg
mov
add
lds
mov
inc
das
cmc
je
jl
jg
adc
out
out
ret
mov
into
mov
and
sbb
cmp
inc
cmc
add
push
adc
mov
mov
fwait
push
adc
divl
xchg
inc
lcall
push
push
xchg
repz
in
dec
mov
test
xor
xchg
pop
test
adc
data16
into
scas
stc
jmp
pop
scas
pop
jns
lods
dec
inc
jl
mov
in
cmc
aas
pushf
pushf
push
or
dec
mov
mov
add
aas
or
das
es
js
pop
stc
mov
push
int
add
roll
lret
inc
pop
push
ljmp
inc
dec
orl
aad
scas
loop
loopne
stc
out
test
push
mov
loope
add
xchg
add
jge
xlat
cli
lods
inc
mov
cmp
data16
andb
out
push
stc
je
sub
and
in
dec
insb
mov
les
shl
fldcw
push
or
add
and
adc
outsl
cmc
imul
adc
jbe
jnp
insb
int
fidivrs
push
push
cmp
cmp
mov
cld
cmp
js
dec
test
adc
mov
outsb
mov
lea
pop
ja
jmp
fldt
rol
data16
lahf
pop
jb
push
push
enter
mov
pop
in
das
fwait
lock
add
add
push
and
jns
dec
push
je
mov
mov
bnd
mov
std
push
dec
dec
cmpsb
or
push
icebp
jle
add
out
or
add
push
mov
std
xor
scas
sti
dec
pop
repnz
lcall
mov
icebp
mov
jp
sub
out
int3
lret
jmp
pushf
and
imul
pop
jo
in
or
mov
cmp
push
nop
or
xchg
mov
push
dec
push
mov
pop
mov
cmpsb
lods
leave
mov
and
jb
lea
fsubs
mov
jge
mov
adc
pop
jecxz
xchg
call
dec
cld
cmp
jae
mov
xor
loop
fnstsw
add
orb
vpshab
stc
mov
push
insl
inc
jl
xchg
mov
shll
or
testl
popl
mov
test
cmp
sub
xchg
lret
hlt
push
addr16
dec
adc
imul
popl
cltd
cmp
aas
or
lret
ds
cmp
addr16
dec
stc
out
cltd
mov
and
lock
jnp
mov
addl
cli
sub
jmp
popa
hlt
and
aam
dec
xor
stos
mov
outsb
shlb
test
pop
pop
or
pop
pop
fsts
xor
pop
cmp
call
pusha
sbb
arpl
jae
or
movb
inc
cmp
outsl
jnp
and
popf
push
mov
jle
or
je
adc
pop
cmc
sbb
push
loopne
push
loopne
shl
in
push
xchg
jp
jae
push
pop
fldcw
sub
adc
xchg
push
pop
test
xchg
xchg
and
mov
ret
pop
mov
rcll
icebp
fstpt
sbb
adc
imul
add
ja
cmp
and
push
sub
push
ret
daa
lods
pop
je
cmp
jb
fisubrs
mov
dec
mov
lods
sub
sbb
imul
cmpsb
subl
lahf
cwtl
add
mov
dec
sbb
lods
mov
lods
pop
add
sbb
xlat
xchg
orb
sub
add
mov
sarb
sub
xor
cmc
sbb
in
popf
inc
add
xor
pop
jge
ror
inc
notl
mov
cmp
and
and
pop
les
jp
lcall
clc
repnz
notw
aaa
rcrl
fwait
mov
ret
pushf
mov
js,pn
out
movsb
dec
mov
jb
rorb
cmp
jno
sbb
sbb
stos
add
push
lret
ret
jl
xchg
pop
sub
jg
dec
or
dec
cmp
mov
ret
bound
and
insl
shrl
and
push
daa
jl
dec
cmp
xchg
or
test
mov
or
push
hlt
pop
jae
dec
lea
mov
je
jge
sub
xor
xor
push
outsb
inc
inc
add
cmp
inc
fsts
std
xchg
jl
xchg
inc
inc
in
pop
into
mov
rcrb
in
jo
xlat
ret
cmpsl
outsl
pusha
dec
add
dec
pop
mov
mov
add
sub
fs
jne
jbe
xchg
sti
out
sub
nop
add
addb
xchg
mov
gs
mov
arpl
cli
in
in
movsb
lcall
mov
jmp
stos
dec
sbb
adc
fwait
outsl
bound
mov
sub
jns
fidivrs
imul
cs
add
cld
or
mov
sbb
add
dec
pop
movsl
or
push
xchg
xchg
mov
xlat
adc
xchg
fcmovnbe
leave
dec
aad
lods
jo
fwait
dec
scas
push
xchg
and
enter
popl
sub
out
xchg
bnd
int3
pop
sub
or
das
lret
sbb
xor
xchg
mov
pop
sub
xchg
sub
cmp
and
fs
pop
negl
pushf
adc
fildl
adc
dec
or
cmp
sbb
seto
dec
lods
jmp
insl
sub
faddp
ja
xchg
addr16
out
pop
es
push
idiv
push
fsts
push
mov
mov
not
fbld
fisubrl
loop
cmp
popa
sub
mov
into
jb
dec
and
pinsrw
test
rorb
enter
fwait
jno
repz
adc
xchg
pop
mov
cmc
stos
lret
cmp
lods
xor
add
dec
inc
dec
aam
cmpsl
out
add
inc
addr16
add
popa
repnz
sub
add
jg
xadd
cmp
xlat
icebp
cmc
cmp
int
mov
mov
inc
lods
jne
mov
dec
sbb
incb
ss
and
rorb
int3
imul
out
jmp
dec
sahf
sub
push
shr
pop
std
ja
push
xor
shll
fiaddl
pop
loopne
testl
or
xor
xchg
mov
insl
out
jle
shlb
cs
push
outsb
lret
lock
and
xchg
imul
cld
xchg
sbb
iret
jmp
xor
inc
pop
pushf
dec
xor
loop
mov
cs
mov
sahf
add
aaa
and
mov
fstpt
aad
ja
sarl
cltd
cmp
push
sub
pusha
ds
int3
adc
orb
xchg
loope
lcall
and
jbe
push
mov
in
fs
jb
mov
xor
xor
leave
add
push
mov
insl
jg
adc
mov
arpl
mov
xchg
and
jae
mov
cmc
ja
fidivrs
jmp
in
add
clc
cwtl
retw
sbb
or
aad
sub
xor
fcoms
in
imul
mov
loopne
xchg
cli
shrb
sub
loop
rolb
inc
sbb
and
add
fwait
je
mov
iret
push
int
dec
mov
lods
out
xor
lods
cmp
xor
mov
movsb
test
push
cld
mov
pop
push
xor
sbb
push
loope
lods
adc
push
clc
xor
fsubrp
push
in
in
out
mov
dec
push
popf
out
iret
fildll
nop
sub
dec
pop
mov
popa
mov
pop
rorl
mov
xlat
pop
push
cmpb
cs
push
push
ret
jns
jle
push
mov
in
sub
jle
lcall
dec
ds
das
imulb
adc
mov
jp
rol
xor
xor
adc
push
stos
mov
inc
inc
push
mov
test
stos
dec
ss
sbb
inc
and
xor
outsl
test
dec
xor
jle
jo
mov
test
pop
adc
or
test
xlat
call
das
push
xor
jmp
insb
rcrl
popa
pop
mov
push
push
or
fwait
inc
inc
fyl2xp1
mov
inc
cmpsb
or
ljmp
test
inc
shrb
iret
divb
push
mov
imul
lret
mov
ja
jae
push
mov
cmp
out
mov
ret
in
dec
jp
sbb
cltd
sarb
mov
stos
or
insl
inc
addr16
xchg
xor
movsb
pusha
out
ret
loopne
and
ja
add
std
ja
sarb
mov
ljmp
jecxz
sbb
pop
mov
push
push
les
add
mov
popa
cs
icebp
push
sub
orb
ds
or
cli
icebp
or
cmc
dec
or
in
js
inc
inc
push
fwait
adc
cmpsl
or
loope
mov
jmp
push
cmp
enter
addr16
cs
shlb
int
adc
das
addb
inc
je
imul
pop
aas
cmpsl
js,pn
imul
jnp
inc
mov
cmpb
aaa
mov
cmp
sbb
mov
xorl
xor
fucomi
push
cmp
jo
sar
cwtl
mov
ja
push
add
pop
xor
cmpsb
lea
ret
push
bound
lret
je
or
imul
inc
fiadds
in
inc
jmp
inc
xor
insb
arpl
das
ret
mov
dec
adc
sahf
and
sbb
je
jne
idivb
mov
into
arpl
lods
popf
mov
out
push
int3
sub
outsb
pop
jl
aad
push
and
fs
into
in
call
xchg
pop
or
mov
jbe
cmpsb
push
inc
popa
mov
shll
js
cmpsb
mov
repz
adc
out
jno
insb
stos
and
sbb
mov
jno
mov
jmp
xchg
mov
jecxz
jnp
pop
inc
mov
xor
xor
lcall
insb
mov
imul
mulb
add
sub
and
inc
aam
mov
scas
push
xor
xchg
shll
popa
shlb
cli
inc
sbbl
or
xchg
sti
mov
push
cld
loopne
in
mov
and
enter
jno
ja
inc
mov
test
pop
repz
inc
pop
or
mov
lcall
lret
lret
imul
xchg
push
addr16
icebp
icebp
in
add
adc
mov
cmp
mov
les
inc
adc
mov
orb
lret
jmp
or
clc
xchg
push
lods
dec
dec
xor
sbb
sahf
rcrl
clc
es
fdivrs
mov
aad
xor
pop
cmp
or
mov
mov
inc
push
fisttps
test
push
push
jge
inc
iret
push
mov
mov
aaa
and
and
int3
sbb
mov
ss
out
inc
xchg
and
insl
inc
scas
pop
in
lods
pop
jmp
in
add
inc
push
daa
push
xchg
xor
pop
sahf
call
pop
mov
or
scas
ds
lods
pop
sbb
insl
popf
push
sub
sbb
jp
or
mov
xchg
cs
pop
aas
stc
and
call
mov
int3
lds
or
sbb
in
call
jae
push
int3
fimull
notb
add
out
xor
mov
nop
cmp
push
or
mov
adc
in
inc
xchg
sti
adc
and
rcll
add
dec
gs
in
mov
cmp
mov
mov
jae
out
ljmp
dec
aam
inc
imul
xor
lea
popf
jbe
pop
dec
and
mov
stos
fsubrs
xchg
scas
jns
lods
inc
das
in
inc
cmp
mov
jnp
mov
divb
xchg
fiadds
movhps
outsb
into
or
xor
jne
push
cld
sahf
dec
adc
jo
push
push
movsb
lahf
ljmp
add
lods
and
cmp
jb
repnz
push
adc
je
cmp
rcr
xor
hlt
aad
cmp
cld
cltd
mov
mov
pop
inc
mov
cmp
mov
push
ja
gs
sbb
rcrl
dec
fildl
dec
in
push
pop
jg
in
addr16
push
push
dec
and
or
cmc
push
repnz
les
rorl
xchg
mov
cli
nop
iret
lret
mov
mov
jle
js
add
sahf
push
adc
mov
addr16
or
sbb
mov
in
lahf
push
adc
inc
out
mov
nop
dec
jge
jo
jg
loope
sbb
sahf
pop
sbb
adc
stos
sbb
lahf
dec
inc
inc
pop
ret
mov
mov
mov
rol
fs
inc
cpuid
loope
add
loope
xchg
mov
add
out
cwtl
jp
sti
cmp
mov
shrl
cmc
mov
sbb
or
stos
sbb
mov
leave
scas
out
dec
pop
sbb
or
push
call
movsb
stc
pop
aas
add
dec
lcall
xlat
mov
mov
jns
aam
mov
xchg
pop
sub
xchg
js
pop
popa
mov
mov
ret
movsl
mov
inc
dec
xor
add
mov
lock
outsb
or
pop
mov
xchg
leave
mov
xchg
mov
cltd
push
jmp
mov
ljmp
xchg
mov
in
in
push
xchg
push
loopne
lds
mov
shll
or
dec
xchg
rol
push
inc
jb
jge
mov
mov
js
daa
xchg
add
loop
or
mov
in
ret
adc
dec
popf
out
sti
xor
repnz
lret
mov
test
jae
mov
movsb
or
je
pop
mov
cmp
adc
dec
inc
or
rcl
stos
sub
push
movsl
xchg
inc
inc
jnp
xor
lods
cmp
in
mov
sahf
and
addr16
in
outsl
dec
mov
pop
inc
cli
sti
dec
xchg
pop
aad
mov
jge
cmp
sbb
add
das
mov
mov
ljmp
idivb
ret
mov
add
sub
hlt
in
test
stc
sbb
or
rol
adc
add
outsl
iret
enter
mov
insb
push
jp
jle
fistpll
cmp
sub
mov
insl
xlat
mov
imul
inc
mov
or
aam
cmpsl
icebp
inc
pop
pop
stos
outsl
sahf
daa
pop
lock
fisttpll
jl
push
dec
test
rol
fstpt
inc
ret
jne
cmc
push
mov
jno
pusha
pop
and
pop
and
mov
shlb
adc
repnz
fwait
stc
mov
ficoml
iret
jp
aam
xchg
dec
jnp
out
push
scas
lock
daa
sub
add
add
push
inc
aam
xor
in
ficoml
xor
test
into
pop
cli
dec
outsl
sahf
mov
fildl
cmp
xlat
je
jo
mov
js
jns
mov
mov
mov
jnp
and
lock
push
xchg
cmp
test
xchg
insl
lcall
test
mov
test
insl
out
jne
enter
enter
outsb
mov
in
ds
add
lret
xchg
pop
dec
dec
out
je
aam
dec
lret
dec
adc
mov
movsb
add
fimull
cmp
subb
or
clc
scas
enter
shll
shl
pop
adc
mov
pop
insl
sahf
jo
fwait
sbb
sbb
cmpsl
xchg
push
test
mov
dec
pusha
push
jne
mov
cli
inc
sti
pushf
bound
cwtl
pop
push
push
les
ret
sahf
cltd
xchg
inc
push
jo
jmp
xor
mov
sub
std
mov
mov
mov
mov
cmpsl
aaa
mov
mov
sahf
mov
cmpsb
jno
push
fisttpll
xlat
add
ljmp
sub
ja
shlb
imul
cmp
pop
jnp
daa
mov
jo
shr
pusha
pop
mov
aam
fs
push
ja
cwtl
cmp
ret
push
mov
push
in
aas
dec
mov
std
lcall
out
xor
pop
pop
push
cmpsl
cmp
pop
dec
or
mov
jns
sbb
movsl
int
sysexit
fbld
sti
mov
in
jne
bnd
addl
push
and
outsl
push
clc
adc
arpl
nop
cmpsl
jmp
adc
loopne
add
dec
mov
out
mov
pop
mov
popf
push
push
xchg
or
or
jne
ss
sub
inc
in
xchg
aam
scas
dec
leave
outsl
push
mov
daa
fimuls
xor
pop
shrl
mov
and
jecxz
jge
ret
cli
hlt
movsb
xor
loopew
pop
xchg
rolb
dec
xchg
xchg
dec
sub
rclb
out
iret
inc
test
pop
adc
or
loopne
in
insl
jbe,pt
inc
mov
das
out
xor
xchg
and
fwait
or
jle
push
cmp
xchg
push
mov
pop
cmp
jecxz
xlat
mulb
cmp
pop
inc
ja
cmc
inc
lea
lcall
rcrb
push
jg
pop
xor
inc
inc
loope
mov
sbb
ss
fisttpll
data16
cwtl
rcrb
dec
sub
cmp
push
jnp
mov
test
inc
dec
or
addr16
jmp
sub
pop
test
scas
fsubr
les
adc
js
cli
and
add
leave
mov
fiadds
lds
fcomps
divl
inc
dec
test
fst
xchg
call
or
adc
jle
ret
xor
push
lea
insb
sbb
mov
les
xor
mov
and
loopne
orb
jbe
adc
pop
jmp
xor
daa
je
inc
pop
sub
push
sbb
loop
xchg
pop
xor
out
mov
aaa
cmp
aam
push
insl
jnp
jnp
into
add
icebp
adc
imul
push
add
mov
sti
dec
imul
fdivrl
pop
popa
xchg
sbb
jecxz
add
dec
fildl
xchg
xor
sahf
aam
or
jnp
inc
inc
or
add
rcl
rcll
push
push
mov
sub
jo
add
orl
pop
ljmp
loopne
dec
popa
xor
int
and
jl
jne
scas
ss
pop
sub
push
mov
xchg
das
or
xor
ret
push
mov
das
leave
xchg
push
shlb
mov
fisttpl
mov
or
adc
jns
ja
cmp
into
cltd
xchg
jge
mov
orl
lea
leave
iret
pop
add
cmp
sub
xor
stc
ror
repnz
sahf
push
in
cli
mov
sbb
aas
inc
ret
cmpsl
stos
mov
xchg
cli
shr
cmpl
dec
stos
insb
push
imul
push
lcall
orl
pop
pop
notl
cltd
rolb
mov
dec
dec
mov
pop
or
shll
xchg
aam
jmp
jns
xchg
push
imul
out
mov
adc
mov
sub
xor
imul
test
iret
icebp
jbe
scas
dec
cmp
repnz
into
inc
loop
mov
setbe
mov
mov
loop
push
mov
lock
scas
fs
sti
inc
adc
sub
divb
sub
jmp
repnz
insl
pop
imulb
push
outsl
fwait
mov
pop
cs
rcrb
mov
testl
cld
jle
int3
movsb
pop
aad
jmp
icebp
mov
clc
out
and
pop
in
outsl
xor
cmp
into
mov
mov
or
addr16
in
inc
pop
push
inc
pop
or
xchg
xlat
sarb
pop
pop
add
inc
std
fimuls
imul
mov
loop
or
cli
and
push
sub
adc
ljmp
nop
insl
adc
imul
cmp
xchg
lcall
jb
lret
mov
lods
mov
add
outsl
outsb
xor
xor
lcall
ja
cmp
cli
mov
fimuls
icebp
cmpsb
sti
dec
dec
bound
rep
inc
sbb
and
push
lahf
scas
cwtl
add
js
dec
cmp
jle
bound
dec
mov
jne
jmp
adc
sub
jne
enter
push
mov
stc
icebp
jl
mov
mov
arpl
mov
prefetcht1
inc
inc
xor
xchg
pop
into
jmp
aam
orb
orb
sbb
sbb
pop
fists
sti
dec
sub
mov
movsl
mov
pop
enter
jg
push
fwait
add
adc
aam
adc
stc
ret
f2xm1
inc
or
and
iret
std
les
xor
dec
mov
out
push
shlb
dec
aam
out
lahf
nop
xchg
mov
mov
data16
add
xchg
jnp
cmc
les
mov
icebp
out
repz
xor
pop
pop
enter
inc
sub
mov
dec
es
punpcklwd
jns
cmp
cld
push
xor
cltd
outsl
adc
lock
dec
dec
movsl
adc
icebp
lea
xor
mov
inc
fucomip
repnz
mov
inc
outsb
dec
or
fstps
stos
clc
in
jmp
adc
in
aad
ret
push
ljmp
scas
push
cmpsl
sbb
nop
cmp
inc
push
and
adc
jns
sub
or
insb
scas
stos
cmpsl
sahf
cmp
iret
das
and
rclb
xchg
movsb
mov
jl
adc
das
xchg
mov
out
sbb
lods
je
jle
imul
inc
fwait
add
adc
jno
adc
and
push
cmpsb
imul
adc
in
and
into
cmc
aam
cmpb
sub
imul
aaa
icebp
in
loop
push
stos
cmpsb
cld
push
enter
aas
mov
movb
xchg
into
jae
movsl
mov
popf
psrld
mov
gs
jno
sub
xor
dec
ljmp
popa
and
push
sahf
aaa
xor
mov
push
sbb
jle
outsl
xor
mov
pop
test
iret
sub
out
mov
es
ja
fbstp
lret
inc
lret
fcom
adc
or
dec
dec
jnp
or
cmpsb
fdivp
xor
adc
pop
xchg
sahf
enter
mov
ljmp
outsl
xor
push
xlat
add
mov
jmp
jmp
cmc
cmp
or
xor
cs
cltd
cwtl
es
ljmp
scas
xor
or
or
add
ljmp
les
sbb
and
or
jnp
fs
repz
lds
jp
lock
std
data16
pop
fs
adc
mov
jmp
es
loope
fiadds
ljmp
cmp
adc
popa
xor
movsl
rorl
je
mov
push
sub
movsl
adc
pop
fucomp
stc
sbb
mov
scas
xor
addr16
jns
jb,pt
mov
aas
jbe
mov
call
cmp
mov
jle
insb
push
push
xlat
xchg
daa
fwait
outsb
sub
push
aad
dec
sbb
sbb
xchg
jg
sub
jmp
faddl
ljmp
popf
pop
fwait
loop
dec
mov
dec
lret
icebp
out
xchg
adc
ljmp
stos
iret
adc
icebp
mov
pop
jb
mov
lods
dec
xor
testb
loope
jns
lock
lahf
rcl
lea
cld
outsl
lods
lcall
out
bound
sbb
clc
data16
clc
sbbl
push
test
lcall
jb
sbb
jmp
sub
and
sub
outsb
sbb
xor
sbb
shlb
dec
xlat
leave
pushf
andb
rorb
scas
sub
aaa
cs
popf
mov
xchg
inc
mov
rclb
movsl
lahf
push
cmpsb
pop
imul
mov
push
xchg
iret
icebp
lea
push
rorb
push
sbb
jbe
xchg
jle
dec
insl
cvtpi2ps
xchg
jmp
iret
mov
int
jle
dec
add
sub
inc
add
mov
inc
xchg
cmp
inc
dec
push
push
push
cmp
repnz
mov
iret
jp
cmp
mov
pop
inc
mov
adc
into
push
outsb
cmpsb
push
popf
mov
icebp
aas
mov
je
jmp
add
cld
orl
arpl
adc
stos
lahf
jns
insl
mov
sub
sub
xchg
adcb
sub
push
mov
mov
movsb
fiaddl
jno
lods
jmp
jle
push
jecxz
mov
mov
push
sub
xchg
rorb
jb
pop
cmpsb
xor
test
or
mov
in
pop
pop
fwait
cmp
sti
pop
subl
jmp
dec
and
pop
imul
push
lahf
push
add
jno
ror
out
sub
shlb
jge
pushf
mov
loop
repnz
mov
cmp
cs
pop
addl
adc
xchg
dec
pop
mov
sahf
repz
dec
add
cli
cmp
pop
jp
aam
push
push
and
adc
xor
adc
inc
rclb
and
mov
push
sbb
jl
push
mov
outsb
aam
xlat
mov
andl
notb
fdivrl
sti
sub
aam
mov
imul
jle
clc
in
test
gs
mov
es
addl
test
stos
fcmove
push
xlat
je
stc
std
inc
call
xor
add
adc
add
mov
clc
push
xchg
nop
inc
jmp
imul
fwait
dec
dec
adc
mov
fcomp
and
sub
xor
insb
lret
clc
std
push
lcall
push
lea
adc
adc
xchg
lret
outsb
aam
repz
jae
orb
jns
lret
mov
lret
std
pop
xlat
push
adc
push
ret
stos
pop
ds
icebp
rol
push
cmp
push
iret
insl
mov
imul
jbe
sarl
mov
out
das
jecxz
fildll
adc
adc
sub
add
decl
xchg
and
xchg
adcl
push
das
outsb
and
dec
aam
out
inc
outsl
pop
jbe
jae
nop
mov
jne
sub
lcall
inc
mov
jb
adc
loopne
fs
and
push
in
in
xor
rcr
add
dec
pop
inc
dec
clc
outsl
xchg
lea
hlt
and
add
movsb
mov
shlb
or
loopne
add
or
out
cmc
ds
dec
negb
xlat
lcall
inc
mov
pop
notb
inc
push
mov
pusha
xchg
push
out
or
mov
and
pop
jmp
sbb
sbb
and
mov
xchg
add
outsb
cs
les
iret
pop
jp
repnz
cmp
mov
stos
sub
inc
mov
sbb
fptan
gs
int3
in
imul
cwtl
sub
insl
es
cmp
mov
orl
data16
cmc
dec
sbb
sahf
adc
lods
scas
lods
adc
shll
int3
loop
lahf
aas
jge
daa
and
aam
push
xor
in
js
mov
mov
xchg
in
jmp
jbe
sbb
xchg
jno,pt
xchg
mov
in
ljmp
add
addr16
jno
pop
js
pusha
mov
fisttps
fwait
and
cmp
popf
out
xor
mov
pop
lret
loope
aad
cwtl
mov
cmp
inc
es
cmp
shlb
push
xor
mov
sub
out
test
mov
mov
and
leave
sti
add
inc
lahf
jg
ss
aam
cmp
fmull
movl
arpl
push
and
cmp
push
mov
pop
ret
loop
mov
mov
fnstenv
jns
add
lods
mov
leave
adc
add
cld
xor
sub
in
cli
cmpsl
mov
iret
or
mov
loop
lods
or
xchg
popa
dec
inc
xor
movsb
loopne
sbb
mov
cmp
inc
ret
clc
sbb
pop
xchg
pop
ret
mov
cmp
xchg
push
and
mov
cmp
repz
add
xor
cmpsl
lahf
xor
jmp
mov
xlat
pop
xor
xchg
cs
add
gs
js
push
loope
movsb
xchg
rcl
pop
ljmp
cmp
xchg
mov
push
mov
lock
lret
std
hlt
jecxz
outsb
data16
jbe
xor
adc
jo
bound
and
push
in
push
test
xlat
push
pop
jne
lcall
lret
ret
adc
mov
jmp
mov
out
jl
cltd
add
lea
xchg
sub
add
jmp
pusha
push
mov
and
push
add
add
aad
mov
outsl
xchg
movb
add
stc
jg
aad
out
mov
mov
inc
lea
cld
xchg
scas
repnz
xchg
in
push
leave
sti
into
out
push
lea
push
mov
fwait
pop
mov
sbb
filds
pop
movsl
jle
ja
neg
jo
xchg
jae
out
fwait
imul
aas
in
push
add
sbb
cli
test
inc
xchg
cmc
and
mov
subl
mov
stc
adc
icebp
cmp
sbb
cwtl
aad
pop
into
jo
sahf
or
dec
inc
leave
divb
push
outsb
xchg
gs
fstpt
fcoml
ret
leave
push
insb
and
daa
mov
adc
mov
xor
pop
mov
xchg
push
testb
leave
or
outsb
in
movl
mov
popa
adc
loope
xchg
jp
mov
insb
mov
int3
stc
mov
mov
adc
shl
shll
push
xchg
push
imul
rorb
fwait
mov
mov
fimull
xchg
cmp
mov
into
dec
xor
pop
ss
sub
imul
into
and
fs
pushf
pop
jns
mov
cld
push
dec
push
out
sub
sbb
loop
es
push
jmp
xor
sub
shrl
adc
in
iret
cmp
jmp
rolb
jp
jne
dec
xor
out
sbbb
mov
push
cmpsl
ret
push
sub
shl
xor
dec
cmp
out
jg
popa
rorb
repz
adc
push
out
and
insl
jmp
push
sub
jnp
push
xor
mov
shlb
cltd
cmp
filds
sbb
push
insl
push
enter
sub
inc
mov
sar
xchg
rcrl
out
in
fs
out
and
mov
push
out
sub
xchg
lods
cmp
mov
push
int3
sbb
call
lods
mov
mov
pop
aad
or
mov
sub
push
dec
call
add
stos
sbb
stos
xchg
ret
xchg
subb
data16
dec
aad
sbb
sub
pushl
mov
xor
cmp
cmp
in
mov
scas
add
rorb
scas
pop
cmp
stos
inc
or
imul
mov
dec
movsl
cltd
mov
mov
fucomip
pop
cmp
lods
push
lds
mov
out
add
dec
mov
inc
cs
mov
daa
movsb
jmp
cmp
push
in
outsl
addl
cmp
jbe
sahf
add
inc
outsl
push
push
iret
jmp
gs
test
fdivl
jae
clc
decl
movsb
push
mov
pop
push
outsb
pop
gs
sub
push
movsl
sub
pop
cmp
sub
nop
mov
mov
imul
fs
jmp
movsl
jae
xchg
fmuls
mov
sub
stos
gs
scas
sti
pop
or
loop
icebp
xor
xchg
xor
sbb
mov
sbb
test
mov
jae
inc
shl
mov
cltd
fwait
dec
add
shll
push
sahf
loopne
mov
jbe
pop
je
lret
repnz
cmovb
popa
ret
das
leave
dec
mov
in
test
jmp
fisubs
clc
pop
xor
outsb
or
scas
xor
sub
pop
inc
jno
push
jp
ds
je
in
xor
divl
xor
aam
xor
gs
push
dec
lock
jno
dec
sub
pop
mov
pop
outsb
mov
fsubp
or
mov
leave
popf
lcall
cltd
xor
add
adc
add
sbb
mov
repnz
and
jne
jo
lret
clc
add
addr16
imul
adc
pop
dec
adc
lock
stos
sti
popf
imul
stos
adc
sbb
or
bound
inc
adc
adc
mov
or
test
cmp
push
sbb
aam
arpl
adc
mov
pushf
xor
adc
mov
mov
sbb
ret
inc
jmp
pop
cld
lds
bound
cmpsl
ja
mov
xlat
adc
cmp
inc
movsl
mov
stos
jbe
pop
daa
mov
or
or
push
movsl
lret
or
jl
out
out
test
mov
cmpsb
cmpsl
shlb
sbb
dec
dec
jne
inc
ljmp
push
sub
out
add
lds
nop
dec
das
dec
push
push
test
test
aam
lds
jmp
stos
inc
jecxz
cwtl
pop
out
sub
lods
popl
cmp
pop
xchg
addl
jle
jle
js
xchg
cmp
out
stc
fstpl
int
mov
xlat
aam
shrl
xchg
and
push
mov
mov
xchg
loope
sub
cmp
dec
add
rcrl
hlt
and
pusha
addr16
add
mov
cltd
pop
sub
dec
jmp
adc
xchg
push
ljmp
xchg
je
jecxz
ljmp
pop
sbb
push
mov
push
enter
pop
out
hlt
jnp
les
add
mov
dec
pop
push
dec
pop
cvttps2pi
sbb
in
test
bound
cmp
pop
pop
mov
cwtl
cs
pop
test
test
sbb
mov
xchg
data16
dec
aaa
lret
lea
loope
cmc
int3
sbb
xor
cmpsl
pop
sub
mov
dec
or
adc
outsb
mov
cmpb
sti
sbb
in
xchg
test
inc
mov
mov
mov
pop
cmpb
mov
push
imul
xor
mov
xor
xor
mov
add
std
mov
pop
inc
and
sti
jmp
repz
pop
jno
xor
mov
xlat
scas
pop
xor
fisubs
xor
enter
int
xchg
inc
jae
jge
fs
add
cmp
or
stos
cli
dec
sub
fadd
pop
mov
icebp
jbe
ja
push
js
xor
sub
adc
fisttpl
fnstcw
dec
dec
and
xor
daa
mov
lock
adc
imul
mov
test
pop
aas
xchg
fsts
inc
sbb
andl
mov
aaa
sbb
lods
inc
pop
loop
inc
std
add
xchg
pop
dec
lahf
icebp
outsl
dec
jnp
icebp
daa
add
push
pop
or
nop
dec
shlb
ret
in
clc
pop
jge
inc
fsubrs
inc
xchg
mov
cmc
push
fiadds
mov
push
xor
mov
sahf
jnp
xor
dec
ds
sti
dec
inc
add
jecxz
pusha
pop
xchg
roll
xchg
cld
jle
push
outsl
sbb
inc
jg
xlat
cmp
jp
sahf
scas
add
cmp
rcr
add
sub
xor
scas
sbb
add
jle
xchg
sarl
ja
sbb
scas
cwtl
jl
cli
pushf
fcmovnu
sbb
pop
push
dec
mov
fwait
cmp
adc
lea
cli
mov
cmpsl
lret
or
inc
std
les
mov
add
movsb
mov
sub
cmp
hlt
mov
mov
pop
dec
sbb
ret
adc
jle
scas
lds
lcall
xchg
add
outsl
and
loop
outsl
adc
inc
hlt
dec
mov
or
mov
jno
dec
int
xchg
aas
shlb
lods
mov
ljmp
shll
movl
shlb
je
adc
cltd
sub
mov
inc
cld
mov
dec
adc
insb
cli
ficoms
test
imul
fimull
xchg
jns
cmp
add
sub
stc
inc
in
xchg
mov
cmp
xchg
cmp
adc
outsl
add
fmul
fmull
addl
sub
adc
addr16
lea
xchg
loop
mov
scas
movsb
pop
dec
mov
sbb
daa
xchg
aaa
sahf
lock
mov
mov
rcrb
xor
scas
mov
fcomps
adc
xchg
xor
lock
mov
and
addl
mov
inc
xchg
stc
adc
dec
cmp
add
or
test
cli
or
pop
fcompl
shrl
insb
xor
movsb
popl
sahf
mov
xlat
sub
pop
xchg
insl
mov
push
in
push
xchg
shl
jbe
jns
cmc
fs
cmc
ss
push
jno
enter
xor
xchg
xchg
mov
jp
adc
inc
xor
or
in
js
mov
and
jl
mov
jbe
jmp
stc
ret
inc
mov
mov
cs
jl
loop
nop
xchg
out
ret
mov
sahf
pusha
push
mov
clc
in
sub
scas
in
cmc
loop
cmp
out
cltd
dec
cwtl
mov
push
pop
test
inc
pop
es
xor
xor
lret
xchg
and
adc
fs
out
repnz
repz
and
leave
mov
pop
les
in
popa
movsb
aam
in
and
mov
test
mov
mov
push
jnp
mov
push
mov
fdivr
and
xor
cwtl
cmpsb
inc
sub
pop
out
adc
test
mov
pop
push
ljmp
mov
fs
jnp
out
dec
shl
int
das
adc
add
xchg
sub
mov
shlb
test
mov
add
push
cld
mov
mov
jbe
sti
mov
jb
call
jne
icebp
dec
mov
shlb
add
xchg
addl
push
hlt
popf
insl
clc
in
insb
mov
andb
jo
sbb
mov
jb
push
mov
sbb
jecxz
lret
sub
orl
dec
mov
cmc
loopne
fldcw
lcall
xor
sahf
popa
fcomip
jmp
push
pushf
addr16
mov
mov
xchg
mov
xchg
stos
jns
lcall
pop
mov
out
jp
adc
or
movsl
pop
pop
dec
push
hlt
mov
frstor
aam
repz
cmp
shrl
mov
ds
xor
out
pop
xchg
cmp
adc
outsb
outsb
test
pop
xor
xor
jle
loopne
or
add
xchg
pop
insb
adc
xchg
shlb
jecxz
and
lods
fdivrs
mov
lods
sbb
cwtl
int
adc
pop
push
int3
push
into
xor
pop
incl
mov
test
inc
adc
mov
cmp
pop
adc
jmp
stos
pop
aad
push
inc
mov
push
fcom
jecxz
mov
fwait
pop
nop
inc
stos
hlt
xchg
and
push
fwait
jo
cs
xchg
adc
adc
jne
sbb
mov
xchg
push
repnz
mov
dec
aad
out
fwait
lods
push
jg
and
dec
cmp
fldl
or
or
sarb
add
mov
shll
fidivrs
aam
stos
push
push
nop
fcoml
iret
pushl
shrb
xchg
pushl
dec
sbb
add
adc
idivb
lods
pusha
rolb
xor
inc
inc
pop
jge
mov
jl
pusha
cmpsl
ret
push
pop
pop
mov
cmc
push
mov
aas
cmp
mov
and
mov
inc
test
leave
jno
rcll
imul
stos
cmp
std
cmp
int3
pop
pop
cmp
lods
jmp
js
cmp
lea
xor
ret
and
push
out
push
mov
les
fidivrl
aam
ret
lahf
push
pop
xor
cltd
mov
pop
jnp
out
pop
mov
mov
jle
loope
and
and
out
pop
dec
pop
jbe
mov
cmp
xchg
xor
pop
fwait
rclb
das
gs
enter
jg
mov
hlt
cmpl
and
jecxz
loope
mov
and
or
mov
loope
int3
sbb
push
mov
xchg
sub
out
jno
lret
pop
adc
fs
jne
imul
pop
or
mov
lahf
cwtl
rcrb
and
push
xchg
cmp
inc
or
pop
add
dec
sub
mov
dec
imul
mov
sbb
mov
or
sbb
fs
jge
outsb
push
push
jns
or
enter
mov
addb
mov
and
pop
fldenv
test
lret
int3
mov
sbb
push
pop
pop
mov
pop
jae
cmpsb
mov
mov
cs
inc
sti
and
mov
push
add
das
pop
repnz
sbb
push
ds
jge
sub
push
inc
jge
stos
jmp
cmc
jmp
loop
and
adc
push
call
insl
out
or
sti
mov
ss
je
fs
or
pop
es
repz
sub
xor
in
add
mov
cmp
inc
sbb
mov
hlt
loope
popf
sub
jge
cli
lret
sub
jg
push
stos
ljmp
jl
push
sub
jp
ja
adc
or
jmp
jb
cmp
jp
and
das
lods
jo
jecxz
nop
xor
cmpsl
xchg
insl
xchg
shll
pop
ret
sti
mov
adc
les
and
cmp
adc
loop
xchg
dec
cmc
pop
subl
adc
xchg
mov
mov
xchg
sbb
push
repz
shll
xchg
lods
addr16
mov
outsb
mov
into
pop
lcall
pop
lahf
mov
cmp
test
lds
fprem1
jnp
dec
or
loop
clc
push
sar
xor
push
xor
inc
inc
into
mov
js
lahf
add
mov
and
leave
psrad
out
popf
inc
xlat
mov
fs
popa
inc
and
arpl
sub
inc
test
data16
out
lds
mov
add
cld
stc
dec
out
cmpsb
push
sbb
inc
mov
xor
cmp
ljmp
testb
lods
rcr
sbb
test
sarl
iret
or
insl
xor
or
mov
inc
movq
add
mov
cmp
add
push
lea
mov
inc
ss
push
pop
fildl
cmpsl
cs
push
ret
lock
lods
cmp
xchg
cmpsb
xchg
dec
mov
push
jle
cmc
mov
aas
sbb
das
add
jnp
dec
fimuls
mov
cvtpd2dq
repz
jae
nop
fadds
jp
ja
fstps
push
fs
jo
shl
fnstsw
push
dec
jo
or
cmovl
dec
adc
leave
xor
cmpsl
aaa
jno
mov
in
scas
test
sub
xor
push
mov
sub
inc
push
dec
test
out
int
call
sbb
push
cwtl
xchg
idivl
xor
ljmp
jo
push
jg
mov
jne
lock
jge
in
lds
ja
mov
adc
and
out
pop
pop
inc
mov
jmp
or
xchg
imul
out
cmp
aam
pop
xlat
mov
shrl
sbb
popa
mov
xchg
pop
test
outsl
lret
sub
jmp
dec
adc
in
push
sub
fcom
cli
mov
enter
jbe
mov
inc
adc
xchg
fildll
xchg
ja
sub
out
xchg
je
push
ffree
cmp
popf
mov
jp
shl
cmpsl
inc
ds
push
addr16
repnz
inc
jle
adc
rcrl
shrl
test
test
in
dec
dec
xor
xchg
hlt
movsb
outsl
jne
sub
sti
jp
negb
sarl
rep
in
mov
and
mov
jns
pop
jecxz
daa
ffreep
int3
popf
fs
loop
jns
push
loopne
jp
repnz
dec
push
inc
mov
repz
ret
inc
push
cmc
sbb
jle
cmpsb
cmpsl
mov
ror
jp
shrb
add
jp
movsb
je
mov
cmp
and
leave
sub
rclb
inc
in
leave
adc
mov
jmp
jbe
jno
push
and
ja
push
pushf
pop
lods
xchg
fidivrl
jle
popa
sub
lcall
into
shll
mov
cmp
add
or
popf
cmp
and
stc
xchg
adc
xor
out
nop
xor
and
stc
dec
jae
popf
repnz
fdivp
add
enter
shlb
mov
jns
add
push
dec
jmp
push
aaa
in
jmp
xchg
inc
xchg
dec
int3
sub
test
jge
adc
cld
mov
flds
loopne
ljmp
bound
psllq
jmp
mov
sarb
sbb
xor
hlt
push
add
lods
es
cmp
adc
js
int
sub
adc
insl
int3
mov
cmpsb
call
scas
popf
adc
fcomps
jbe
sahf
jne
cmp
sbb
test
push
out
xor
test
or
ret
mov
push
mov
clc
xor
les
adc
out
push
repz
sbb
lods
xchg
imul
in
add
fcompl
sub
xchg
adc
and
sub
xor
in
mov
lea
iret
shrb
adc
int3
inc
jg
sbb
das
mov
or
push
mov
shr
test
pop
jns
sub
aad
dec
or
insb
adc
mov
jecxz
or
int
cmp
addr16
dec
movsb
adc
mov
or
jmp
push
popa
mov
mov
mov
int
and
lods
mov
cld
cli
out
test
xchg
sbb
sbb
data16
fsubr
add
mov
aaa
xor
outsl
xchg
or
stos
xchg
rcr
add
sub
cltd
pop
loopne
mov
cmp
in
mov
dec
ds
cmp
fwait
loop
out
and
das
jge
inc
pop
clc
mov
xor
ss
outsb
jns
pop
mull
rol
ret
adc
mov
in
pop
cmp
and
mov
jne
push
in
imul
cltd
cld
cmp
incl
adc
cmpsb
pusha
ds
or
mov
or
adc
lea
jnp
jae
mov
das
orl
repz
pop
or
int
sbb
sub
cmpsl
and
int
ljmp
adc
jae
lods
repz
inc
out
xchg
or
cmc
xchg
sbb
push
in
sti
cli
test
mov
jmp
pop
je
sbb
sub
outsb
cmp
push
add
daa
or
outsb
loop
xchg
shrb
les
mov
jbe
adc
sahf
inc
aaa
or
inc
fsubs
pop
sbb
stc
pslld
popa
dec
shlb
mov
sub
andl
sbb
pop
pop
cwtl
push
mov
leave
arpl
cmp
jecxz
leave
imul
xor
add
pop
sub
loope
pop
rolb
pop
jo
mov
sbb
daa
mov
sub
roll
mov
lods
mov
mov
ficoml
xchg
jle
sub
xchg
daa
sbb
data16
enter
in
gs
stos
rolb
jmp
add
add
adc
in
notb
stos
mov
lods
adc
imul
and
mov
jne
dec
add
stc
mov
xchg
sti
cmp
aad
in
sarl
rorl
sbb
adc
es
pusha
divl
and
repnz
pop
push
mov
lock
loop
in
cmp
inc
sbb
mov
shrb
rorb
cmp
std
inc
add
pop
test
data16
cmp
out
ljmp
adc
xor
fcoms
fisttpl
pop
les
pop
mov
cmpxchg
lock
out
push
and
add
mov
dec
fbstp
xor
fs
adc
xor
jle
xchg
mov
adc
adc
jp
mov
fdivs
sarl
inc
inc
fisttpll
jge
sbb
or
loop
add
sub
cltd
int3
test
adc
mov
scas
sbb
sub
xor
mov
push
gs
jge
divl
mov
in
ret
imulb
and
sahf
mov
maxps
inc
add
jmp
cltd
aas
mov
mov
cs
pop
in
xor
inc
sbb
sbb
sub
faddl
aam
xchg
inc
std
stos
add
sarb
adc
mov
stos
inc
cmp
out
push
xchg
mov
bound
cmpsb
addr16
fwait
sub
pusha
push
mov
xchg
jbe
push
push
ds
hlt
or
cmpsb
ds
cmp
decl
inc
pop
adc
jmp
add
and
cs
sub
xor
mov
inc
mov
lcall
iret
cmp
mov
hlt
scas
rolb
sub
jb
rep
xchg
push
mov
mov
inc
mov
adc
enter
add
js
mov
or
sub
pop
ljmp
xchg
pop
adc
jecxz
ljmp
add
sub
mov
lret
bound
cmc
cmc
inc
cmp
adc
lret
insb
call
inc
imul
cmp
sub
cmpsb
lret
or
rolb
aas
sbb
xchg
dec
gs
fisttpll
jno
test
imul
test
addr16
aam
push
gs
aam
push
outsb
rolb
ret
lods
sahf
adc
jp
daa
lods
xlat
sahf
pop
pop
hlt
add
std
rolb
bound
dec
mov
js
rol
das
mov
sub
subl
pop
inc
in
out
fcoml
in
inc
loope
jge
fnstenv
adc
dec
sub
ror
push
push
sub
repnz
and
rcll
ja
mov
daa
lods
rcl
mov
cmp
mov
inc
sbb
shlb
rolb
push
xlat
push
mov
and
xchg
pusha
call
push
mov
push
add
xchg
lahf
mov
outsb
adc
loopne
xchg
and
in
or
hlt
ret
in
cmp
xlat
sarb
cmp
or
and
lahf
sbb
out
dec
cltd
xor
push
jo
lods
ret
mov
cmp
push
xchg
into
sub
test
aaa
sbb
in
popaw
jmp
adc
bound
outsl
adc
scas
mov
add
imul
xor
flds
movsb
std
in
add
repz
dec
dec
xor
ds
addb
mov
push
jbe
sbb
jb
adc
out
xor
icebp
loopne
outsl
sub
xor
ljmp
pushl
pop
sahf
iret
xchg
mov
sbbl
mov
bound
cs
push
xor
jle
idiv
fwait
aas
push
mov
call
cmp
mov
dec
xchg
repnz
sahf
jnp
pop
xchg
inc
xchg
pop
fs
sub
sbb
adc
ret
jno
stc
jmp
clc
inc
or
sub
cmp
out
mov
in
sub
jns
int
push
push
cld
adc
xor
sub
lods
and
test
adc
jno
test
movl
pop
cmp
cwtl
popa
and
fs
lcall
fwait
pushf
lahf
loop
das
in
push
push
aaa
sbb
mov
in
mov
jp
mov
ret
cwtl
mov
mov
sub
ljmp
add
stos
stos
jbe
xor
pop
sub
scas
push
mov
imul
in
sub
loope
adc
imul
dec
mov
mov
and
jle
inc
xchg
add
nop
mov
int3
pop
xlat
mov
shlb
iret
xchg
jno
cli
push
daa
popa
mov
xlat
xor
repz
ss
add
ds
adcl
xor
stc
addb
pop
fmuls
jbe
mov
shrb
xor
jb
sbb
dec
jp
fistpll
out
pop
and
pop
cmpl
imul
jb
xlat
xorl
mov
inc
ficoms
jo
xlat
fstpl
mov
xlat
jmp
sub
imul
nop
idiv
dec
daa
fcmove
testl
push
shll
enter
js
repz
pop
fnstsw
es
pop
stos
push
xchg
int
and
push
imul
mov
jb
jbe
pop
out
mov
sbb
lret
mov
in
imul
inc
mov
repz
jae
mov
pop
ficoms
movsl
dec
data16
ljmp
aas
add
or
pop
jne
dec
adc
mov
int3
xchg
fs
in
adc
or
popf
add
xlat
xchg
fucomp
pusha
cmp
imul
repz
inc
movsb
popf
jns
cmp
or
cltd
sbb
sbb
out
rol
lock
add
pushf
bound
sbb
pop
dec
mov
sub
subb
xor
inc
mov
lcall
sti
push
enter
shl
insb
cmpb
sub
push
cmp
inc
mov
in
push
outsl
pushf
iret
insb
pop
xchg
push
mov
hlt
ret
xchg
fwait
dec
hlt
mov
xchg
mov
in
stos
das
pushf
andb
icebp
pop
add
roll
mov
pop
and
sub
dec
mov
pop
fistl
jge
sub
lret
sarb
rcrb
jle
xchg
or
fucom
and
scas
cli
movb
rcrl
dec
push
jnp
lds
fmull
sti
jno
mov
jge
adc
std
mov
inc
fisubs
mov
jb
push
cwtl
cld
adc
add
sub
icebp
cmp
or
jmp
ret
filds
mov
loope
aaa
add
jg
hlt
jmp
mov
or
lods
or
leave
jg
cmpsl
jge
jo
lcall
nop
sbb
inc
setg
xchg
scas
cmp
fstl
and
mov
popf
repnz
movsl
rcll
inc
adc
arpl
adc
test
pop
inc
cltd
mov
xchg
push
jne
push
das
aam
xchg
outsl
jle
cmp
jle
hlt
ret
adc
addr16
mov
es
push
je
scas
sub
sub
in
ret
inc
inc
ljmp
icebp
push
stos
xlat
mov
js
push
inc
imul
jbe
aas
cmp
fnsave
pop
xchg
cltd
dec
fisubrs
int
or
loope
cmp
push
inc
or
cld
fcom
xchg
sub
dec
fildl
int
scas
lock
xor
ss
xchg
dec
imul
push
xchg
pop
xor
jnp
insb
cld
fwait
inc
push
pop
addr16
call
mov
xchg
mov
adcb
xchg
inc
adc
bound
in
push
sarl
sub
xchg
movsb
pop
pop
mov
call
xchg
mov
int3
mov
shrl
pop
pop
sbb
pop
test
jbe
or
and
pop
loope
adc
inc
loope
in
xor
or
pop
or
dec
mov
mov
add
icebp
and
sbb
aad
scas
xor
pop
cmp
mov
repz
push
add
std
les
mov
gs
xor
das
xor
inc
dec
jmp
push
mov
and
or
inc
leave
or
ror
aad
adc
movsb
fisttpl
jg
push
sbb
and
std
mov
jp
xor
pusha
loope
xor
push
xchg
mov
out
xchg
cmp
jne
add
mov
in
sub
sbb
adc
inc
mov
push
arpl
in
ja
push
rcrb
lret
dec
mov
pop
dec
inc
sbb
and
ss
aas
in
and
fmull
pop
ja
push
cs
test
push
gs
imul
pop
lods
jg
push
mov
dec
mov
pop
mov
mov
and
outsb
ret
sti
not
fdivrl
fldt
mov
or
jle
pop
idiv
cltd
jle
sti
jp
cmp
int3
or
ja
nop
or
roll
push
cmp
dec
out
insb
push
and
sbb
xchg
inc
mov
and
ror
or
gs
jnp
dec
test
fsubrs
aaa
popf
add
ret
int3
push
int
adc
sahf
xor
mov
inc
sbb
adc
pusha
jecxz
ljmp
mov
mov
test
idivl
aas
int
pop
cli
mov
xchg
gs
in
push
fldcw
push
adc
outsl
cmc
push
inc
bound
mov
sahf
jne
popa
sub
cld
rolb
pop
push
xor
dec
xchg
aam
add
rorb
mov
and
dec
cltd
jmp
xor
sub
leave
pop
aad
lret
cmpsl
push
sar
dec
xchg
imul
jno
and
push
sub
lcall
cmpb
je
sahf
or
or
addr16
pop
xchg
mov
clc
push
or
leave
add
xchg
sbb
js
sbb
adc
sub
test
push
out
scas
jmp
bound
push
into
pop
cmp
insb
lret
bound
and
push
push
into
mov
inc
incb
inc
scas
pop
cld
mov
pushf
enter
xchg
mov
adc
fadds
xor
cmpsb
out
xor
inc
push
insb
fistps
mov
sti
xchg
test
lea
loopne
cmpsb
outsb
ret
jne
mov
inc
pushf
mov
inc
mov
dec
xor
and
inc
cmp
dec
shlb
out
punpckldq
pop
lods
mov
mov
aam
rolb
out
push
stos
push
in
sti
inc
imul
into
and
adcl
movsl
sbb
aam
lock
fstpl
mov
cmp
or
inc
ret
add
out
test
mov
push
sbb
or
stos
lods
jnp
fwait
mov
push
sarb
loope
mov
in
jns
mov
aad
and
mov
pop
sti
xor
testb
dec
and
sar
pop
or
sbb
mov
adc
shll
adc
sub
mov
pop
xchg
stos
enter
inc
or
test
and
adc
clc
mov
dec
shlb
mov
mov
loopne
cmpsb
mov
push
add
mov
cmc
les
inc
dec
lods
jns
int3
pop
xchg
cmpsl
push
cwtl
pushf
test
pop
ljmp
dec
sahf
fdivr
movlps
lahf
add
scas
xchg
rcrb
and
and
vpsubsw
adc
cmpsb
mov
insl
pop
mov
push
lods
out
sbb
push
mov
in
cmc
jl
arpl
insl
pop
pop
sbb
mov
daa
sbb
mov
nopl
dec
scas
ljmp
xorl
mov
call
inc
adc
and
jecxz
dec
mov
mov
cmp
pop
adc
push
or
dec
repz
inc
cmpl
push
cmp
addr16
fisttpl
aas
movl
sti
add
aas
fistpll
inc
in
lahf
enter
xchg
bound
mov
in
xchg
pop
dec
aad
pushf
sub
lcall
repz
mov
push
adc
scas
out
jle
and
xchg
pop
and
dec
cmc
clc
cmc
inc
in
mov
jecxz
sub
aam
jo
cmp
and
cwtl
mov
sbb
cmp
push
inc
lahf
cmova
popf
je
cmpb
sbb
xchg
popa
mov
mov
lahf
and
or
push
fsubl
xor
iret
jle
inc
sub
ds
ja
iret
aaa
pop
cmp
xor
jge
sub
jne
sbb
ficoml
xchg
jo
scas
push
leave
mov
out
fistpl
push
mov
xchg
ror
xchg
mov
dec
sub
test
stos
pusha
cmp
pop
adc
inc
xchg
sub
incl
or
ljmp
sbb
push
fstl
mov
push
movsb
push
xchg
mov
push
arpl
xor
pop
fidivl
cmpl
adc
ret
inc
pop
mov
out
xchg
icebp
inc
lahf
inc
xor
inc
sub
mov
mov
and
or
jb
sub
pop
inc
movsl
outsl
pop
cmc
pop
imul
sbb
es
mov
mov
mov
xchg
addr16
aad
inc
xchg
movsb
roll
xchg
and
jbe
adc
push
fsubs
cmp
mov
or
test
and
loop
cmpsl
pop
test
lds
iret
loopne
je
mov
sub
test
sti
xor
mov
mov
pop
inc
flds
in
lahf
add
out
add
jb
cmpl
mov
leave
popa
stos
lock
push
push
daa
inc
lret
call
pop
xchg
mov
rorb
inc
outsl
fstpt
mov
mov
and
push
sub
mov
fwait
mov
pop
pop
cmp
pushf
fwait
sub
and
int3
stc
jge
pusha
fnstsw
pop
xchg
pop
cs
out
fisubrs
jg
cmp
xor
pop
xchg
roll
mov
stos
nop
cmp
pop
js
test
xor
mov
sub
cmp
and
cld
pushf
jno
jle
mov
scas
xchg
out
cmp
push
pop
rorl
jnp
push
fbstp
stc
sbb
hlt
insb
push
sarl
sar
js
lds
add
dec
and
movsl
inc
bound
cwtl
shll
mov
fldt
movsl
mov
and
jmp
adc
in
sbb
xchg
out
or
mov
pop
js
push
ds
ret
jecxz
dec
pop
and
in
mov
ds
inc
dec
jg
aaa
push
sahf
or
fcomps
xchg
pop
mov
pop
mov
cmp
scas
lahf
iret
inc
std
aaa
mov
movsb
cwtl
xchg
sbb
jns
push
nop
or
lods
mov
adc
jbe
mov
mulb
repz
cmpsb
xor
push
insl
inc
imul
stos
and
push
xchg
roll
and
pop
pop
mov
loope
add
jb
sub
push
lret
int3
push
jecxz
or
inc
jmp
jg
popa
add
imul
shlb
repz
sbb
mov
pop
mov
mov
in
pop
fmull
rcr
shrl
fnsave
enter
adc
dec
jbe
in
adc
push
enter
call
sub
lahf
icebp
pop
push
movsl
je
iret
cmpsl
pop
hlt
cmp
sbbb
lea
mov
jp
mov
add
inc
add
repnz
das
push
stos
and
or
push
cmp
push
lret
dec
jmp
lock
ficomps
mov
rol
inc
repnz
aad
sahf
xorb
xchg
jle
in
lret
loope
cmp
insb
sar
pop
cmp
shll
add
xchg
test
pop
mov
clc
xchg
cmpsl
fiadds
mov
std
arpl
inc
add
mov
stc
adc
std
and
add
sub
and
push
and
xchg
int3
ljmp
aam
push
jmp
push
push
shlb
aas
aas
loop
dec
fbld
jl
repnz
or
cli
inc
jo
dec
mov
mov
cmpsl
fxch
mov
loop
and
pop
xor
jle
sti
push
stos
xchg
push
sbbb
ljmp
shlb
divl
and
mov
adc
push
pop
xchg
ror
arpl
cli
loope
add
mov
xorb
insb
imul
jecxz
jge
and
sahf
enter
ret
pop
sub
and
or
push
pop
sbb
fs
stc
stos
and
mov
call
test
add
sub
repz
jb
scas
iret
stos
in
fcoms
cwtl
loop
jp
cli
or
jnp
insb
inc
dec
or
ss
pop
movb
dec
out
ljmp
shrb
lcall
test
test
out
mov
xchg
pop
bound
out
mov
xchg
dec
cmpsb
sbb
xor
inc
test
lret
lock
lcall
mov
lret
xchg
repnz
jmp
cmp
arpl
mov
lods
sbb
dec
inc
in
sbb
mov
repnz
loope
sbb
daa
idivb
ss
ret
and
pop
je
mov
pop
xor
jge
enter
insb
insl
lahf
jo
adcb
push
popa
aad
xor
roll
mov
lock
rolb
jo
sub
repz
or
xchg
cmp
xchg
std
movsb
daa
je
es
dec
lret
xor
loopne
sbb
scas
mov
ja
push
js
insl
pop
xor
pop
cmp
cmp
into
cld
ret
lret
jb
sub
dec
je
loopne
punpckldq
inc
inc
jg
jo
jnp
and
test
test
aaa
and
mov
aaa
or
dec
and
negb
testb
mov
or
push
xchg
push
insl
mov
pop
lock
xchg
test
out
int
xchg
sub
sahf
adc
cmp
repnz
push
js
daa
jae
subl
jb
call
repnz
jecxz
leave
inc
jne
dec
sbb
sub
pop
or
stc
scas
stc
and
mov
and
jo
adc
sub
ret
dec
js
andl
xor
in
jge
test
mov
push
mov
push
mov
js
adc
mov
ds
or
cmp
rol
fs
cmc
and
sahf
insl
scas
bound
push
xor
xor
push
xlat
cmp
sbb
pop
mov
push
leave
out
mov
aam
push
pop
jecxz
pushf
sbb
mov
into
popf
in
mov
std
arpl
loopne
out
ljmp
ret
dec
adc
stc
mov
jmp
pushf
in
testl
lock
inc
or
mov
cwtl
sub
xor
push
clc
dec
ret
cmp
or
push
add
jns
sub
cmp
scas
and
mov
adc
and
cmc
rcll
xchg
dec
add
je
cmpb
nop
mov
cmp
jmp
dec
in
pop
outsb
arpl
push
mov
aad
inc
testl
inc
cmp
loop
dec
loopne
cmpsb
clc
sbb
cmpsb
cmp
cmpsl
mov
cmp
sub
push
sbb
je
ja
mov
in
icebp
dec
mov
hlt
and
sti
cmp
aaa
pop
outsb
lahf
lods
adc
push
scas
push
jle
sahf
jge
mov
jp
aam
xchg
in
shr
cmpsb
cmp
xchg
or
ljmp
into
mov
or
inc
dec
pop
sti
lret
icebp
adcl
int3
sbb
out
push
clc
sbb
ljmp
xchg
int3
dec
xchg
cmp
jmp
jne
popf
stos
sbb
and
loop
loop
lock
daa
inc
pop
inc
sub
rdtsc
and
jbe
enter
or
lahf
ds
jmp
pop
pop
or
popf
scas
xlat
add
inc
jp
inc
je
cmp
jg
mov
sbbb
mov
jne
adc
sub
jbe
rcll
mov
sub
add
push
mov
mov
lock
push
inc
jecxz
pop
aas
lcall
lea
iret
mov
pop
jne
xor
or
mov
xor
mov
or
ficoml
pop
int
aam
test
sub
imul
dec
add
pop
pmaddwd
outsb
cmc
mov
sub
add
aad
inc
pop
cmp
mov
mov
shll
aas
push
es
rcrb
sub
divl
arpl
aaa
lret
fs
in
inc
test
and
or
sahf
mov
inc
xchg
add
jle
stos
sbb
dec
mov
sub
and
cmpsb
xlat
fcmove
nop
sbb
jne
jecxz
iret
or
pop
cmp
fistpll
jbe
pop
inc
mov
aad
pop
pop
add
in
inc
jmp
decl
mov
sarl
andl
jne
clc
lds
jle
int3
or
fsubl
lods
jns
xor
mov
pop
movsb
adc
xorb
add
jnp
lcall
mov
cwtl
movb
cmp
mov
inc
lret
jle
stc
jns
jecxz
adc
pop
add
xchg
mov
pop
es
inc
xchg
adc
mov
inc
movsl
divb
or
mov
mov
out
and
cli
rcrb
jle
das
pushf
add
or
andl
xor
and
xchg
rorb
or
stos
push
cmp
ret
mov
add
lahf
jae
mov
lret
sbb
xlat
fstps
push
dec
fmul
pusha
xchg
lahf
sbbb
mov
fcompl
shlb
push
jmp
sub
cmp
and
das
push
push
push
jp
mov
push
lods
xor
sub
inc
inc
pop
sub
enter
lock
fimull
xchg
lea
mov
mov
add
nop
movsb
lret
iret
xchg
orl
or
and
mov
add
mov
push
lock
push
jp
add
mov
inc
add
cltd
outsl
push
mov
fdivr
sti
xchg
inc
fistps
imul
lret
into
jno
test
imul
mov
pop
das
mov
fistps
ficompl
jbe
push
jle
in
ja
pusha
push
add
aaa
in
pop
and
inc
add
shlb
jns
cld
pusha
sbb
xchg
in
cmpsl
dec
xchg
cld
cld
lret
ds
out
aaa
stos
imul
jp
mov
aad
cld
pop
in
hlt
aad
shll
out
insl
gs
jg
dec
mov
pop
inc
popa
dec
jae
jno
sahf
cmp
xchg
call
mov
adc
scas
arpl
std
not
iret
jbe
cld
adc
pop
jg
mov
cwtl
push
sahf
sahf
out
add
mov
mov
andb
xor
gs
push
sti
shlb
test
xchg
and
jge
icebp
inc
cmp
pop
xchg
xchg
leave
leave
mov
stos
dec
xor
dec
or
jae
xchg
push
jae
jge
test
test
movsb
inc
ja
push
mov
pop
mov
out
fistps
and
addr16
pop
inc
mov
push
push
loopne
mov
push
icebp
out
mov
xor
mov
lock
imul
leave
sti
push
cmp
or
xchg
cld
cs
xor
jbe
lods
nop
xchg
jns
mov
lds
sti
sbb
stc
fdivr
inc
adc
ret
in
xchg
adc
and
mov
imul
data16
jecxz
int
push
jnp
and
add
incb
dec
push
dec
add
daa
int3
cld
jge
jnp
and
add
data16
jbe
xor
dec
xlat
aas
cmpsl
or
add
scas
push
sub
jb
pop
inc
fists
mov
cmpsl
mov
and
xchg
test
xchg
sti
sbb
in
sbb
and
pop
jl
lea
pop
push
cmp
int
mov
cmc
pop
xchg
les
pop
mov
mov
insl
lods
pop
bound
addb
arpl
push
stos
gs
iret
iret
ret
test
sub
jle
lock
lods
and
repz
xchg
add
pop
fisubrs
xchg
jmp
pusha
xlat
es
cmc
mov
out
idivl
insb
lock
jnp
in
dec
jo
pusha
rcll
push
fcoml
insl
stos
add
mov
xchg
jg
or
pop
aad
push
xchg
es
je
mov
movsl
test
sub
pusha
jg
cmp
and
add
add
inc
insl
rcll
push
inc
mov
mov
or
jp
add
push
out
incb
fstp
les
rol
lods
ret
ret
lods
ds
cmp
dec
dec
clc
or
fwait
lret
push
push
jno
dec
out
mov
jmp
xor
aaa
out
and
cmp
call
sbb
int
out
add
adc
xchg
mov
jmp
lahf
sti
or
mov
xor
pop
cmpl
call
mov
es
push
cwtl
fstpl
shll
movsl
nop
push
ljmp
pop
pop
jle
mov
jnp
arpl
sub
jg
enter
cs
mov
pop
cmp
cli
mov
cmpsl
das
jle
push
iret
mov
xchg
ficomps
loope
dec
es
xchg
pop
inc
fadds
fnstsw
jmp
jmp
jecxz
mov
shrb
jecxz
mov
lahf
jg
push
mov
xchg
xchg
and
in
pushf
jo
add
pop
lods
xchg
or
aas
fcompl
mov
sbb
mov
into
fxch
push
xchg
add
push
sbb
sahf
aam
repz
repz
xor
jnp
int
or
and
mov
lods
dec
sub
jecxz
jbe
lds
test
popl
cmp
fdivl
loop
clc
mov
jne
pop
cmp
add
leave
jbe
adc
fistpl
and
into
or
es
xchg
push
in
fistps
jae
mov
jno
mov
inc
mov
xor
xchg
mov
sub
lret
jmp
daa
in
arpl
iret
roll
push
shlb
and
pusha
dec
cmp
dec
cmp
or
test
insl
sub
mov
mov
mov
mov
adc
adc
ja
repnz
dec
sub
mov
or
or
push
mov
and
cmpb
sbbl
push
outsl
mov
xor
imul
and
and
aam
xchg
repnz
and
out
clc
aaa
outsl
and
mov
pop
js
dec
fucom
push
adc
mov
lea
mov
call
push
movb
stos
lods
testb
je
or
cltd
out
xchg
cmp
cmc
sub
dec
pushf
repnz
out
test
repnz
dec
sub
add
sti
jle
sub
dec
lret
pop
je
iret
inc
popf
mov
sbb
sbb
cmp
lods
enter
mov
mov
and
xchg
ss
sub
push
add
imul
push
adc
pop
mov
and
nop
icebp
jae
cmpsl
xchg
cmp
in
adc
pop
into
push
les
sub
sub
loopne
hlt
push
and
or
aas
add
push
lahf
xchg
das
call
mov
pop
push
out
cmp
fwait
out
gs
sub
xchg
bound
cmovb
aaa
daa
push
mov
or
or
lock
data16
or
xlat
out
xorb
rolb
les
sub
push
sarl
icebp
popa
cmpsb
outsl
xchg
loope
sub
data16
sahf
cld
sbb
push
inc
lods
xchg
rorb
lock
cmp
scas
jae
in
xchg
add
stc
jl
cmp
out
repnz
sbb
inc
jnp
gs
or
int3
cli
lcall
out
and
outsb
movsl
or
movsb
out
dec
jecxz
test
push
idivb
sahf
dec
add
imul
frstor
add
mov
pop
dec
jnp
scas
pop
and
mov
lret
xor
imul
lret
pop
sub
push
pop
or
add
pop
jge
cmp
sub
popf
movb
bnd
inc
movsl
push
dec
cmpb
push
add
pop
push
xchg
push
adc
xor
mov
cmpl
popa
in
mov
push
jae
and
in
outsl
sbb
decl
push
xor
jle
inc
in
mov
lds
inc
popf
pop
and
push
cmp
lret
mov
add
decb
push
out
mov
push
cmp
cmp
mov
popa
inc
mov
lcall
loopne
dec
xchg
pop
mov
mov
fabs
add
mov
fs
mov
negb
adc
sbb
sarb
jnp
pop
xor
sub
push
pop
xor
adc
insb
add
packssdw
dec
pop
xchg
or
test
inc
mov
pcmpeqd
pop
xchg
mov
xor
sub
nop
mov
jae
adc
dec
inc
sub
fs
scas
jmp
and
adcl
ficoms
push
pusha
rcr
es
or
stc
xchg
adc
cmpb
enter
dec
push
addr16
jge
pop
cs
push
jbe
ljmp
call
pop
push
jnp
add
xchg
int3
in
mov
xchg
outsl
out
and
hlt
sbb
hlt
rcl
push
test
stc
das
aam
xchg
jle
test
repnz
sbb
xor
mov
sbbb
jmp
push
or
push
rcll
enter
popa
insl
mov
or
mov
push
mov
les
jecxz
rcr
add
mov
fucom
repz
cmc
aam
pop
mov
aad
xchg
arpl
dec
mov
xlat
out
je
mov
adc
adc
lds
add
das
nop
das
rol
xchg
cmp
fstpl
arpl
jmp
add
sub
jle
gs
popf
push
je
out
mov
pop
jbe
xchg
xor
or
xor
inc
or
pushf
sbb
bound
pop
ss
or
mov
int3
scas
sub
xchg
fs
dec
dec
push
scas
jl
lahf
jle
add
cmp
push
sbb
adc
pushf
fcomps
mov
inc
jae
or
push
mov
cmp
loop
mov
out
push
jbe
fnsave
cmp
shr
add
adc
mov
imul
call
mov
sbb
int
fnstsw
int3
repz
pop
add
je
out
enter
dec
movsl
lret
dec
aad
jge
mov
loopne
and
dec
lods
pop
out
sub
sbb
and
bound
jle
aam
sub
stos
mov
das
orl
sub
cwtl
dec
mov
xchg
scas
xchg
push
mov
sub
pusha
aad
pop
into
mov
sub
sub
int
pop
in
dec
leave
outsl
imul
add
pop
out
lea
out
mov
mov
cwtl
and
pushf
ficoml
mov
add
nop
icebp
xchg
mov
scas
cmp
pop
xchg
stc
fstps
test
shlb
dec
pop
add
test
js
jno
jns
pop
adc
mov
pop
and
adc
add
adc
cmp
imull
rcrl
popa
pop
adc
jne
inc
mov
in
mov
cmpsl
jl
and
adc
test
mov
inc
mov
scas
xor
lea
xchg
ret
lahf
das
adc
and
and
popa
lret
mov
lds
ljmp
and
pop
repz
sbb
push
lds
xchg
jp
fidivs
daa
inc
test
push
push
jge
adc
in
arpl
sbb
vmread
cmp
jg
cmp
insb
addr16
pop
lcall
cwtl
popa
fcmovnb
cmp
sarb
dec
xor
sbb
and
outsb
or
lock
add
js
pop
cmpl
lock
cli
mov
cmp
jmp
jb
lahf
pop
hlt
jg
loop
push
stc
xor
cmp
cmp
cmpsl
negl
outsb
scas
rolb
shl
inc
or
rcll
cltd
add
rorb
xchg
and
adc
jg
rcrb
cmp
pop
or
pop
das
daa
or
loope
pop
pop
orb
push
push
inc
hlt
jp
inc
mov
out
stos
xchg
adc
sbb
cltd
or
jl
out
push
inc
repnz
pop
test
icebp
pop
nop
lea
sub
mov
imul
add
or
push
jns
xchg
push
test
cmp
sbb
test
pop
je
sub
sbb
popf
push
out
cli
add
loop
and
xorl
jnp
pop
sub
mov
inc
clc
gs
inc
mov
mov
mov
insb
jmp
mov
jp
mov
cmp
into
daa
and
xlat
pop
mov
xchg
imul
imul
jae
xchg
pop
inc
sti
js
lds
mov
xorb
rorl
in
or
aas
mov
les
shrl
sub
or
jmp
mov
mov
cmp
dec
xchg
out
xchg
rcrb
xchg
push
adc
icebp
jno
test
lods
faddl
pandn
cmp
mov
and
xor
in
push
icebp
imul
in
adc
shlb
mov
sbbb
mov
add
rolb
dec
leave
repz
aaa
cltd
inc
js
int
fwait
cmp
adc
xlat
insb
mov
stos
jmp
add
ja
in
or
testb
and
in
or
mov
jns
inc
cmp
and
xchg
dec
jp
push
mov
testb
mov
mov
call
push
sbb
out
lock
movsb
addr16
imull
sub
addb
adc
testl
xchg
xchg
fs
repnz
xchg
cltd
push
ja
sbb
and
or
push
lds
dec
jmp
lcall
inc
push
testb
sub
ret
sbbb
cli
sbb
ret
push
fcomps
popf
into
cld
mov
pop
orl
cmp
push
out
loope
and
iret
add
sub
fs
fsubs
sub
jmp
inc
pushf
data16
sbb
aad
mov
sub
idivl
cltd
jmp
nop
jmp
mov
adc
data16
clc
pop
shrb
mov
inc
int3
je
mov
enter
jmp
imul
fstps
xchg
rclb
pusha
jl
xchg
cmp
jg
mov
test
movsb
add
mov
aad
roll
inc
or
call
inc
lret
sbb
fadds
pop
les
jge
popl
cmpsb
out
pop
out
loope
mov
test
mov
les
add
jmp
lea
das
in
inc
adc
stos
jno
into
sub
sbb
push
cmp
ljmp
int
lret
inc
jbe
mov
mov
ror
mov
aas
cmpsl
popa
inc
sub
adc
mov
and
mov
dec
in
dec
rorb
shll
rorl
fwait
mov
out
xor
mov
stos
or
es
dec
out
adc
jmp
das
test
mov
add
imul
xchg
jno
mov
cmpsl
lods
sub
mov
push
mov
dec
sub
mov
pop
shl
lret
fcoms
mov
int
add
inc
daa
cmpsl
lea
dec
xor
push
mov
out
stos
or
mov
test
jbe
sub
fisubrl
in
incb
loopne
dec
jb
sbb
sub
fs
sahf
les
pusha
xor
jb
popf
cmc
repz
jno
add
lods
inc
sub
adcl
push
mov
rorl
sbb
xor
loopne
jbe
dec
xlat
dec
jno
jns
xchg
xchg
fsubrl
and
inc
ret
sbb
adc
jae
and
or
incl
not
mov
adc
loope
fwait
popa
mov
mov
jae
addr16
inc
dec
mov
mov
add
and
sbb
movsl
test
adc
jno
jbe
sbb
and
lret
add
mov
cmp
mov
jbe
call
push
imul
dec
fiaddl
sbb
push
xchg
or
test
aas
add
xchg
daa
pop
sbb
adc
mov
pop
jg
je
out
mov
je
test
hlt
xchg
push
scas
mov
jp
jecxz
push
or
cmp
push
xchg
pop
sahf
les
adc
pusha
jno
inc
dec
mov
repnz
mov
out
pop
adc
int3
cmc
dec
outsb
push
add
addr16
and
addb
mov
push
mov
inc
pop
dec
push
add
dec
xlat
adc
clc
rcll
outsb
addr16
stos
sbb
xor
push
sub
sbb
mov
lea
pop
adc
add
jp
stos
out
pop
jl
repz
faddl
scas
ljmp
push
sub
adc
inc
push
mov
shl
xchg
jge
sub
add
add
add
ja
jl
cmp
mov
adc
fsubs
mov
inc
jg
xor
in
pop
mov
sbb
fcomp
jmp
mov
out
push
cmp
nop
cmp
jl
idivb
jnp
push
fistps
push
jp
pop
jae
mov
in
push
sbb
and
arpl
jg
and
leave
dec
out
mov
test
xor
xlat
insb
cwtl
xchg
inc
out
xchg
jne
mov
fnstsw
and
fiadds
ds
mov
or
jg
pop
lret
jbe
sub
mov
ds
mov
fs
pushf
mov
addr16
pushf
sbb
jns
fbld
pop
aaa
aad
inc
add
scas
pop
mul
mov
test
cltd
in
sbb
fistpl
mov
xchg
negb
js
inc
cli
adc
jg
pop
adc
repz
mov
mov
jl
dec
jmp
add
call
lret
or
sahf
arpl
sahf
pop
cmp
and
sub
push
add
xchg
mov
inc
cli
inc
jg
aad
int3
cmp
add
jae
jne
xchg
xor
enter
cmp
adc
add
arpl
ja
jnp
inc
push
pop
xchg
mov
push
ror
mov
inc
dec
sbb
adc
mov
push
or
js
or
cmp
fcoml
outsb
pop
imul
sbb
push
lea
and
cmp
int
jns
pop
insl
add
lret
sub
sbb
cli
adc
and
movsl
sub
add
pop
add
or
push
sbb
pop
cmp
cmc
jno
cmpsl
mov
sub
and
xchg
lods
shl
je
loopne
mov
sub
jno
int
jae
arpl
push
aad
imul
into
xor
lcall
lds
xchg
ds
sub
adc
cmp
gs
inc
jo
add
loopne
fnstcw
xchg
cmp
pusha
dec
mov
add
outsl
jg
mov
fdivs
icebp
push
loope
mov
jp
dec
insl
andb
mov
push
leave
add
ds
test
jo
xor
in
inc
incl
or
icebp
adc
pop
icebp
cld
add
dec
mov
mov
addr16
shrw
push
icebp
mov
cs
sti
cli
jmp
mov
jecxz
out
mov
add
lods
insl
loope
pusha
or
test
push
cmp
rclb
inc
mov
cwtl
into
imul
fisttpll
sahf
cltd
jno
incl
pop
popl
add
adc
sub
test
idiv
dec
divb
adc
sub
jbe
xchg
cmp
jg
pop
pop
cmpl
ret
xor
call
vunpckhpd
negb
clc
xor
ljmp
pop
ret
rcl
repz
ss
push
ror
fmuls
or
sbb
cmp
ret
inc
jecxz
xor
xchg
add
cltd
sti
fisubs
cs
jo
pushf
jmp
ja
jmp
fbld
insl
scas
int3
outsl
dec
aad
inc
bound
enter
push
in
outsb
mov
loop
cs
xchg
out
cmp
or
icebp
stos
jb
je
insl
mov
mov
fcos
xchg
scas
mov
cltd
test
call
call
dec
shrl
inc
iret
jl
shr
mov
in
je
repnz
mov
lcall
bound
xchg
outsl
push
jb
xchg
in
xchg
fsts
mov
cmp
in
xchg
sahf
sub
xchg
mov
repz
scas
lds
mov
pusha
jp
testl
nop
sbb
fld
add
inc
popf
lss
dec
jl
or
push
aas
inc
jo
sub
cmp
xorl
xchg
add
sbb
cli
add
ja
in
filds
jge
pop
test
add
dec
add
in
xchg
add
fidivl
pop
jno
out
push
ds
aaa
fcoml
push
push
dec
pop
mov
addr16
cmp
or
cmp
pop
mov
clc
rcrb
cmp
jl
dec
cmc
adc
icebp
sbb
xchg
jmp
xchg
push
cmc
push
or
push
sbb
test
xchg
mov
sub
and
test
and
in
popf
cmp
jno
sbb
orl
adc
sub
test
mov
out
add
stc
jl
lds
jnp
jle
lcall
lahf
pop
lret
inc
inc
fsubs
mov
jne
lods
or
movsbl
pop
mov
aas
and
test
jns
jp
mov
xlat
pop
cmc
fldenv
and
xor
cmpsb
xchg
or
div
push
and
lahf
int
testl
cmpb
sub
ljmp
dec
mov
xchg
jecxz
dec
sub
in
rcll
inc
push
pop
hlt
scas
pop
mov
pop
pusha
stc
ds
aad
imul
loop
pushf
mov
lea
push
mov
sbb
and
xchg
pop
push
imul
icebp
adc
dec
imul
cmp
sub
jle
push
or
outsb
sub
insl
push
aad
xchg
ljmp
jecxz
ret
out
dec
das
aaa
dec
hlt
xlat
cmp
hlt
xchg
mov
cmp
jge
pop
and
out
repnz
inc
pop
lods
xor
cmp
test
out
push
pop
out
shrb
sbb
xor
negl
out
test
out
xchg
ret
repz
lcall
jmp
cltd
dec
mov
mov
adc
jp
fbld
icebp
push
xor
push
jp
sub
cwtl
push
mov
push
cmpsb
sarb
jns
xor
add
rdtsc
mov
arpl
mov
add
out
xor
cmp
popa
xchg
stos
les
xor
ja
in
or
dec
sbb
insl
fbld
lock
mov
mov
pusha
loopne
cld
std
push
mov
mov
test
out
mov
add
sahf
adc
add
xor
sub
xor
xchg
mov
pop
inc
sbb
out
adc
out
cltd
mov
push
mov
sahf
mov
enter
cmp
push
or
xchg
lods
sahf
pusha
add
mov
push
into
or
pop
mov
rclb
test
daa
lock
mov
jecxz
jo
ss
mov
mov
jno
push
out
mov
call
push
mov
repnz
negb
jmp
aam
push
scas
sbb
sub
cmp
std
fwait
sub
in
out
add
jns
mov
push
lds
mov
push
mov
shrl
dec
cld
das
sahf
push
aaa
fildl
xor
in
xchg
sbb
xchg
inc
fcompl
out
push
xor
pop
shrl
scas
mov
mov
jecxz
xor
sbb
dec
dec
out
aaa
outsl
cmc
and
leave
arpl
jl
cmp
out
xchg
hlt
aas
mov
pop
xlat
repz
iret
mov
aaa
mov
cmpb
addb
dec
cmp
mov
xchg
lahf
and
xchg
cmp
test
test
mov
mov
sar
fldenv
pushf
mov
fmul
add
aad
mov
sbb
inc
push
mov
sub
call
aam
dec
mulb
add
or
aad
xchg
jmp
sub
dec
mov
mov
push
cld
movsl
loop
fisubrl
xchg
lahf
call
or
pop
xor
mov
add
je
add
enter
push
mov
push
sub
pop
out
adc
outsl
xchg
pop
das
cmpsb
pusha
pop
mov
pop
inc
lods
fucom
xchg
clc
das
sbb
add
sub
aam
and
lods
dec
lcall
ljmp
movsb
jb
movsb
cwtl
aad
into
aaa
add
or
or
sub
push
aas
int3
inc
test
jle
fmuls
jno
popa
fwait
xchg
add
lods
pop
pop
push
mov
shrl
std
test
fsts
ss
std
mov
push
jb
sub
or
ljmp
pop
sub
xor
mov
cmp
adc
add
out
popa
xlat
pop
inc
pop
adc
cmp
jb
out
ret
mov
mov
and
fmulp
sti
fists
jno
test
xlat
jbe
push
pop
ds
sub
into
xchg
or
jg
hlt
ss
repnz
dec
mov
xchg
xchg
hlt
mov
jno
adc
and
bound
xor
fsubp
pop
testl
push
scas
sub
pop
pop
sub
jmp
cmpsl
ljmp
and
pop
or
mov
lret
xor
jmp
inc
ss
cmc
adc
in
ffreep
mov
mov
adcb
scas
push
or
adc
dec
pop
aas
sub
stc
xlat
mov
mov
sub
dec
xlat
imul
pop
ds
int3
xchg
pop
movsl
jmp
aad
scas
push
xor
or
xor
adc
sub
and
rcll
loope
mull
stc
mov
pushf
inc
jmp
and
add
jno
out
add
mov
add
dec
ret
xchg
adc
mov
mov
cmp
fs
cwtl
mov
push
sbb
roll
icebp
iret
loop
fiadds
jo
xchg
adc
cmpsl
mov
xchg
push
mov
xchg
loopne
mov
inc
add
loope
scas
push
jne
ja
out
and
jb
std
push
test
cmp
in
xchg
add
jp
mov
cmpsb
dec
push
sbb
loope
mov
insl
popa
jbe
sbb
mov
cwtl
add
ljmp
ret
stos
in
dec
pop
mov
and
imul
decb
popa
sahf
outsb
sub
mov
mov
iret
mov
ret
sbb
mov
daa
mov
int
sbbb
shlb
in
les
sbbl
jae
xchg
sbb
movsl
cltd
ss
pop
cs
sbb
in
xor
out
add
lahf
fldcw
mov
lahf
pop
sbb
dec
sub
push
sbb
aad
jmp
sub
sbb
test
and
pop
push
leave
inc
cmp
enter
fs
sub
inc
pop
loop
sub
out
xchg
int3
pop
das
int
out
lret
lret
push
mov
movsb
or
cld
sti
dec
push
push
and
cmp
xorl
popf
out
icebp
cli
std
pop
adc
push
mull
mov
popa
fcmovne
mov
imul
sbb
ret
sbb
rcll
mov
mov
dec
jae
jecxz
cmp
mov
sub
jb
movsl
stos
jnp
xchg
movsl
mov
inc
add
jl
xchg
push
jg
enter
lods
dec
jg
ljmp
arpl
out
dec
sub
jnp
adc
push
push
cwtl
call
cmp
out
jle
push
insl
jge
out
sti
mov
jp
jne
mov
sahf
jbe
loopne
je
fstl
mov
xchg
mov
shrl
mov
cmc
jns
sbb
imulb
daa
mov
enter
icebp
xchg
cltd
xlat
pop
lret
jns
inc
mov
call
repz
lods
arpl
roll
xchg
mov
jnp
punpckhdq
int
adc
scas
and
xchg
ret
xchg
mov
inc
jmp
add
jae
cmpsl
repnz
insl
mov
popf
add
jo
mov
iret
je
fistps
insb
xchg
or
xlat
and
push
lret
xchg
xchg
mov
mov
inc
xchg
mul
stos
inc
fsqrt
add
push
jecxz
lea
js
mov
jp
data16
pop
jecxz
or
and
addr16
dec
jae
lcall
adc
xor
aaa
push
iret
test
sbb
xchg
adc
jge
cmp
push
inc
cwtl
cmp
hlt
bound
mov
cmpsl
cmp
xchg
push
push
out
cltd
or
mov
outsb
dec
mov
mov
push
cmpsb
sub
mov
push
pop
fs
js
imul
add
testl
sahf
push
mov
paddsw
jmp
fwait
out
mov
mov
shlb
in
in
testb
ljmp
or
push
push
and
mov
jmp
cmp
or
fadds
mov
in
sbb
mov
pop
pop
jnp
das
js
inc
push
out
sbb
sarb
mov
cmpb
sbb
scas
arpl
je
xchg
dec
movsb
je
push
jnp
scas
jns
sub
pushf
xchg
jo
inc
scas
xor
xchg
shlb
adc
faddl
mov
inc
in
jmp
fisubrs
mov
mov
jle
or
add
fucom
addr16
dec
adc
sub
jle
pop
clc
xchg
cmpsb
divl
fadd
ret
gs
and
lods
mov
cmp
dec
jb
mov
mov
leave
pop
pop
loopne
cmpb
pop
jg
aad
cmp
fwait
inc
cmp
jae
mov
lret
mov
sbb
int3
push
mov
test
ret
lcall
insb
and
xor
call
shll
xchg
addl
xor
cmpsl
scas
lcall
jo
or
sub
rcr
call
push
pushf
js
push
jae
add
pop
mov
hlt
in
popa
mov
mov
stos
cltd
int3
push
jb
xchg
fwait
push
cmpsl
or
testl
int3
xchg
ret
adc
push
imul
ret
fwait
sub
xchg
je
sub
dec
mov
ds
xchg
outsl
ja
jmp
aad
and
mov
sbb
movq
mov
xchg
push
push
adc
mov
cs
ret
int3
es
ss
aas
push
push
into
outsl
xor
inc
daa
sbb
adcb
aad
jp
inc
daa
mov
add
adc
ret
aam
inc
fdivp
jecxz
sub
jle
lods
jb
ds
cmp
addr16
sbb
xlat
adcl
xor
js
push
adc
ss
lret
xchg
push
and
jp
rclb
jne
hlt
cli
bound
mov
pop
in
add
cs
fld
pop
inc
pop
push
push
dec
repnz
pushf
stos
shrb
movsb
icebp
adc
mov
sbb
mov
sbb
das
cli
adc
push
sbb
dec
cmpsl
clc
fcompl
mov
mov
xchg
cli
repnz
lock
pop
jp
add
call
xchg
pusha
mov
mov
xor
adc
sbb
mov
lahf
bound
test
dec
lret
in
xor
mov
fisubl
mov
jo
mov
mov
xchg
xchg
movsb
movsb
push
mov
leave
mov
mov
inc
in
jno
out
pushf
dec
jne
cmc
cmpb
adc
cmp
xchg
jmp
pop
rcr
in
jp
sahf
jnp
js
xor
dec
sbb
push
outsb
fildl
sub
outsl
adc
inc
and
push
mov
shl
add
jnp
push
push
int3
inc
shlb
cs
mov
mov
xchg
scas
mov
test
hlt
sub
sub
lock
filds
lret
les
sbbl
lret
loop
dec
mov
pop
incl
xchg
dec
xor
sbb
das
mov
jo
aad
std
cmc
adc
int
in
mov
imul
ss
mov
pop
pusha
fsubl
mov
sub
mov
push
inc
cli
cwtl
out
mov
ds
lds
or
subl
mov
adc
icebp
stc
mov
sbb
inc
and
xchg
jb
mov
ret
fisubrs
push
fcmovne
sbb
xlat
pop
out
jo
sti
jl
mov
cmpsl
cmpsb
push
cmc
lcall
add
stc
movsb
pop
mov
mov
fstl
dec
push
mov
pop
inc
je,pn
xor
push
cmp
inc
icebp
cmp
sbb
lret
fs
lcall
cmp
lock
xchg
push
scas
inc
pop
std
xchg
cmpsb
lahf
add
xchg
sysenter
notb
dec
add
mov
xchg
sti
inc
lret
test
lods
xchg
jmp
shll
or
scas
aad
out
inc
mov
xor
add
aaa
sub
shll
or
mov
mov
xor
lret
adc
rorl
mov
push
int
cmp
push
jnp
add
ret
dec
inc
lods
push
push
adc
outsl
mov
insl
or
test
inc
lods
mov
add
mov
insl
int3
test
or
add
fwait
push
loope
mov
pop
daa
xchg
rcl
aad
ss
pop
jl
cmpsb
loopne
in
jp
loop
aaa
cmpsl
cmp
xchg
xor
cmp
lcall
cmp
mov
scas
jp
jle
and
dec
lahf
push
mov
ja
inc
pop
ss
xor
push
in
push
sub
push
dec
xchg
mov
cwtl
subb
push
faddp
in
aas
icebp
pop
cmp
cmp
jge
arpl
sub
jne
xchg
clc
aas
push
sub
daa
std
arpl
subl
leave
js
aas
enter
insb
mov
scas
xor
addr16
xor
lods
mov
movsl
jg
mov
sbbl
ret
sbb
inc
mov
shr
aam
jl
test
mov
fcmovbe
loopne
xchg
sub
jle
movsl
aas
mov
cli
sbb
lret
add
outsl
addr16
ret
testb
sub
lret
push
inc
stos
les
mov
jg
popf
and
mov
inc
nop
pop
mov
dec
dec
xchg
stos
jo
sti
sub
out
stc
pushf
pop
shr
hlt
lahf
pop
jae
fs
adc
adc
sub
fdivrs
or
or
mov
mov
xchg
lahf
test
loop
adc
aam
stc
cmp
int3
sbb
jl
ffree
ret
pushf
push
add
add
pushf
inc
xor
sbb
in
xor
out
cmpsl
repz
jns
mov
mov
into
insb
adc
hlt
std
int3
or
les
andl
sub
cmp
inc
dec
mov
int
push
fsubrl
ss
bnd
in
mov
enter
pushfw
mov
jb
das
cmp
add
mov
mov
sti
dec
adc
mov
cwtl
xor
das
ss
aaa
sbb
mov
movsb
sbb
int3
add
jae
inc
jp
cmp
ljmp
sbb
outsb
lret
das
fstps
leave
cmp
nop
inc
ror
mov
test
rorb
inc
das
mov
add
outsb
adc
gs
sbb
mov
stos
or
adc
aas
aaa
cmp
sub
pop
lea
idivl
jp
dec
add
pop
jg
lea
sub
inc
stos
sti
ss
jb
push
fistps
push
outsb
test
stos
xlat
orl
loope
in
add
jae
std
pop
xlat
add
aad
dec
push
mov
cmpsb
add
pusha
cli
xor
sbb
adc
xchg
mov
lds
test
pop
out
push
mov
pop
cmovg
push
mov
int
cli
dec
mov
call
mov
jno
testb
ss
mov
pop
out
pop
andb
adc
sarl
inc
cmp
and
jl
adc
or
mov
stos
sti
or
fldenv
mov
hlt
lahf
cmp
xor
cmp
stc
sarl
leave
rorb
out
push
mov
xchg
xchg
push
cli
test
sub
xchg
hlt
aas
sub
lea
or
and
in
push
sbb
sbb
roll
je
jl
inc
sahf
into
out
cli
pushl
lret
imul
sub
ret
adc
repz
rorl
add
gs
rclb
cld
jns
dec
lret
adc
insb
jl
out
push
sub
mov
dec
xor
mov
dec
push
inc
stos
jle
rcrb
ror
ret
cltd
ljmp
test
add
negl
inc
imul
es
mov
inc
mov
xor
inc
shlb
pop
jo
lret
push
call
pop
or
aam
sarb
in
pop
or
enter
adc
ss
xchg
lods
repz
mov
sub
push
sbb
jmp
xor
outsb
inc
inc
push
mov
xchg
sub
popf
dec
jge
sbb
in
jg
lahf
scas
mov
scas
mov
sbb
out
lahf
mov
lret
jl
notb
std
cmp
cmpsl
rorl
and
and
sbb
push
xchg
or
scas
mov
mov
int
sbb
inc
pushf
mov
push
mov
and
push
in
mov
jge
xchg
or
push
and
mov
adc
push
imul
cmp
imul
movsb
loopne
xchg
jle
push
push
aad
pop
sbb
or
mov
mov
lods
in
adc
clc
jae
enter
jno
int3
mov
mov
inc
push
in
push
mov
cli
shlb
pop
fnstcw
mov
push
add
shlb
sub
and
adc
dec
cli
or
adc
leave
mov
mov
gs
in
out
repnz
test
mov
out
dec
or
adc
pop
add
sar
push
adcb
in
mov
fwait
jns
xlat
mov
xor
xchg
xor
pop
sub
clc
ljmp
cmp
nop
inc
push
inc
hlt
cs
fsts
negl
push
jae
lea
sub
inc
outsb
test
flds
hlt
sub
and
xor
or
outsl
nop
fstl
mov
cmp
lods
mov
push
inc
das
sub
stos
push
mov
xchg
cmpsl
stos
sbb
mov
add
xchg
fwait
stos
shll
push
pop
insb
mov
icebp
test
and
in
push
xlat
xchg
adc
mov
mov
inc
jns
xor
mov
gs
mov
lea
aam
jle
je
test
hlt
mov
aas
dec
mov
adc
pushf
inc
sbb
mov
movsl
inc
inc
bound
cltd
pop
xor
push
mov
out
and
lret
adc
push
stos
sahf
sub
mov
std
sbb
mov
adc
je
lea
into
xor
xchg
mov
test
cmp
sbb
xor
outsb
out
rcrb
jp
cld
lret
pop
iret
add
sbb
xchg
leave
stc
xor
hlt
xor
sbb
jo
push
dec
pushl
sysenter
xor
mov
in
test
xchg
mov
pop
or
ds
dec
mov
test
fisttpll
pop
clc
lods
andb
fistpl
jbe
mov
fstpl
dec
push
jecxz
inc
or
mov
cld
push
inc
push
movsl
mov
clc
or
lea
out
push
icebp
out
inc
addr16
push
aad
ret
loope
push
fsts
test
je
mov
aas
xchg
pop
mov
lcall
xor
sbb
ss
xchg
pop
bound
dec
cmpl
adc
sbb
push
lcall
hlt
aad
ds
jnp
sarb
cmpsl
mov
ljmp
mov
aas
and
mov
scas
pop
mov
std
lock
dec
loope
pop
cli
sbb
and
cmp
cs
or
cmpsl
in
icebp
push
xchg
xchg
xor
dec
lret
out
cmp
leave
push
push
dec
cmp
cs
add
jl
push
bswap
mov
fdivrs
shl
jle
arpl
jmp
fwait
xchg
sbb
adc
cltd
mov
subl
cmp
jl
pop
cmp
call
jno
push
pop
or
ja
sbb
enter
cmp
lret
je
movsb
jmp
mov
cmp
mov
mov
arpl
pop
fisubrs
shr
adc
daa
out
rolb
add
cmpl
sub
sub
sbb
xor
cmpsb
or
les
bound
scas
pusha
pop
in
and
jb
cmp
lret
std
mov
pop
shrb
adc
xor
add
or
aas
int
imul
pop
arpl
adc
in
hlt
dec
xchg
std
mov
push
outsl
add
jo
dec
push
ja
push
add
int
ljmp
loopne
stos
sub
xor
inc
lcall
jge
push
xchg
outsl
inc
dec
inc
dec
inc
shll
scas
add
std
pop
xor
xchg
bound
mov
test
mov
cmp
mov
adc
daa
lea
xor
mov
fnstcw
imul
hlt
ja
aas
add
inc
mov
repz
mov
in
mov
in
mov
pop
lea
pushl
fisubl
mov
sbb
dec
dec
orl
subb
rorl
mov
mov
or
scas
mov
nop/reserved
cs
pop
out
push
pop
jnp
push
jecxz
push
outsl
sub
movsl
push
pop
sbb
add
insl
loope
push
add
sbb
cli
leave
sti
pop
repz
pop
outsb
xchg
mov
xor
mov
subl
cld
mov
xchg
mov
push
inc
and
and
adc
int3
lret
and
adcl
xor
testb
cltd
jb
test
and
adc
inc
or
mov
mov
clc
adc
push
imul
jmp
mov
fwait
fwait
pop
push
mov
icebp
add
loop
or
mov
push
in
jge
dec
pop
loope
test
xchg
cs
mov
jle
mov
pop
push
jle
lods
sub
cmpsl
dec
int
pop
gs
stos
cmp
ja
int3
xchg
push
movsl
stc
push
loope
mov
pop
jnp
sub
rorb
jl
test
xor
xchg
pop
adc
jp
das
imul
aam
ljmp
stc
jns
mov
gs
mov
clc
test
sub
mov
xor
jge
movsb
rcrl
dec
lock
xor
xchg
fdivp
arpl
sarl
cmp
xchg
lret
jo
or
mov
setnp
into
xor
iret
add
pop
divl
stc
adc
pop
adcl
rclb
xchg
dec
orl
dec
or
js
sub
mov
pop
xor
aam
mov
and
out
faddl
jne
lcall
imulb
cmp
add
dec
pop
rclb
fidivrl
xchg
push
gs
xchg
pop
and
xor
mov
fstpt
xlat
insl
cmp
mov
inc
lcall
mov
xor
icebp
jecxz
adc
fs
push
pop
mov
pop
mov
popf
inc
jecxz
push
aad
repz
ss
add
imull
std
sub
into
xor
jge
jge
or
push
stos
add
pop
jl
push
gs
rorl
inc
or
mov
and
icebp
in
xor
outsb
add
in
daa
jp
in
xor
movsl
test
jbe
in
out
xlat
push
mov
xor
jp
jle
int
test
push
lock
test
fstl
addl
xchg
mov
int3
xlat
pop
pop
cli
in
push
pop
scas
xchg
xchg
imul
fadd
popf
add
jne
adc
jb
dec
bnd
sbb
inc
subl
aaa
dec
gs
mov
mov
nop
dec
mov
add
sahf
insb
scas
imul
jp
rcrb
mov
std
rorb
jge
pop
mov
jb
hlt
out
movsb
lahf
sti
psadbw
fdivl
cmp
in
inc
cltd
push
fbstp
xlat
mov
sbb
in
sub
mov
pop
inc
dec
adcl
and
sbb
aad
add
popf
jo
aaa
gs
pop
sarb
rolb
dec
fsts
rorb
push
and
push
mov
gs
call
cmp
push
dec
mov
dec
std
out
in
cmp
nop
pusha
std
imul
ffree
inc
nop
addr16
mov
cmp
inc
cwtl
inc
inc
arpl
pop
cmp
mov
mov
xlat
bound
mov
arpl
or
out
or
xchg
jle
repz
pushf
push
inc
sbb
mov
test
xchg
pop
sbb
add
pop
punpcklwd
enter
shrb
dec
inc
add
pop
cmova
sbb
outsw
pushf
add
cltd
jecxz
mov
jnp
pop
adc
dec
or
mov
xorl
into
lret
in
or
lret
cmpsl
push
pusha
jbe
je
hlt
mov
inc
jbe
and
and
out
inc
or
mov
lcall
cwtl
sbb
mov
in
ret
sbbb
fdivl
or
pop
jne
mov
movsl
hlt
dec
push
mov
push
movsl
les
in
test
and
sbb
out
stos
stc
dec
cmp
xchg
push
sbb
xchg
cmp
sub
pop
cmp
das
and
int3
jbe
test
bswap
enter
das
mov
xor
inc
add
push
scas
add
push
xchg
lds
leave
cwtl
imul
into
xor
fisttps
out
shlb
pushf
popl
inc
leave
jmp
shrb
fistps
repz
cltd
jge
daa
jp
scas
ss
ret
jae
insl
pop
lock
and
mov
adc
jne
lods
repnz
cltd
xor
movsb
in
jns
inc
sub
lret
hlt
xor
ss
push
lock
add
movsb
enter
jno
test
lods
sbb
or
push
and
mov
ds
daa
ret
cmpsl
add
mov
sbb
orb
cmp
in
sub
lcall
jne
cld
jb
jbe
fstp
out
mov
mov
push
dec
pop
and
sbb
cmc
outsl
stc
sbb
sbb
jle
dec
cs
leave
sub
jle
mov
mov
mov
xchg
jmp
pop
js
insl
push
push
push
adc
in
inc
mov
push
rol
and
xchg
gs
pusha
xchg
out
xchg
in
push
sbb
dec
fiadds
cmp
dec
xchg
push
loope
push
sahf
push
pop
out
lea
fisttpll
mov
xchg
push
out
dec
inc
rcll
data16
and
insl
sbb
xlat
jl
jo
movsb
mov
sbb
sarb
jecxz
dec
xor
adc
imul
adc
cmp
add
xor
mov
outsl
inc
ret
insl
jecxz
xchg
adc
in
dec
je
add
out
adc
nop
daa
rcrb
insb
push
pop
scas
xchg
xchg
inc
fisubrl
xchg
and
cmpb
rclb
test
xor
orb
lods
negb
bound
fwait
adcb
xor
andl
push
pop
push
xor
pushf
xor
ret
jne
dec
cmp
dec
sbb
daa
mov
adc
scas
outsb
movsb
lfs
dec
test
lret
jmp
jge
pop
fmul
sub
aas
outsb
clc
lahf
cmpxchg
push
and
sbb
movsl
iret
js
fbld
sub
xor
aad
sbb
push
mov
clc
jns
stos
xchg
lcall
popf
sbbl
jbe
mov
jnp
dec
add
std
mov
mov
loopne
ret
mov
jge
cltd
xlat
cmp
and
xchg
into
enter
fistl
roll
fnstenv
sti
fbld
xlat
pop
shll
scas
es
inc
ret
xchg
push
lahf
xchg
jae
cmpsb
cmp
insb
pusha
rcrl
outsb
dec
push
jp
inc
fwait
adc
or
jmp
enter
mov
pop
push
iret
data16
mov
rcll
xor
sbb
test
mov
icebp
mov
mov
cmp
sbb
xor
dec
shrb
mov
push
mov
sarl
les
sub
int
pmullw
out
lods
js
popf
xchg
ja
cmp
cmc
hlt
push
cmpsb
out
sahf
inc
int
sbb
push
mov
cmc
xchg
movsl
push
add
xchg
mulb
int3
dec
fnstenv
add
arpl
les
xchg
mov
pop
xor
sbb
jns
dec
mov
xor
dec
inc
cli
lret
gs
inc
mov
or
mov
push
xlat
lret
mov
leave
inc
jno
sub
shlb
push
pop
xchg
mov
jg
xor
ss
jp
add
or
mov
mov
add
pop
loope
add
sbb
xchg
jb
mov
ja
enter
mov
mov
popa
jge
jge
sub
ret
pushf
fwait
mov
std
push
cwtl
pop
inc
push
test
leave
xchg
jno
fwait
sbb
adc
pop
fcmove
fistpll
rcrb
fwait
push
mov
and
push
and
iret
orb
andb
cwtl
out
cmp
cmpl
stc
jae
inc
sahf
jns
repnz
xchg
leave
xchg
ffree
fs
insl
dec
cmc
push
int3
cmp
push
pop
mov
shlb
push
and
jnp
mov
enter
cmc
adc
sbb
popa
sub
je
cmpsb
idivb
jns
and
stos
mov
lds
sub
sbb
les
hlt
inc
and
addr16
sub
pop
ja
rcrl
mov
mov
push
sti
mov
cmpsb
lcall
dec
and
test
bound
dec
ret
inc
fwait
adc
lret
pop
pop
loope
jmp
sub
jae
test
gs
adc
fldl
add
pop
mov
out
shlb
xchg
xorl
lret
stos
insb
fsubrs
mov
inc
xchg
mov
ljmp
cli
pop
mov
or
ljmp
stc
push
fwait
pop
mov
sbb
xchg
inc
and
push
mov
xor
out
cmp
addr16
scas
adc
arpl
jbe
addl
pusha
enter
push
dec
push
and
insl
fistpl
inc
ficoms
es
std
bound
push
fimull
cmpsb
dec
js
in
stos
fwait
out
loopne
or
mov
outsb
aam
cmp
dec
insb
xor
xor
cmp
call
jmp
rol
fidivrl
xchg
inc
jns
dec
out
imul
sbb
scas
gs
xchg
jg
imul
cmpsb
test
cwtl
or
dec
lahf
rcl
fstps
cmp
std
orl
outsl
aad
fcomip
xchg
inc
popf
adc
addr16
je
in
cmpsb
clc
andb
push
jge
add
iret
not
call
adc
subb
jmp
lcall
dec
add
out
rcl
js
stos
mov
dec
fisubrl
cltd
outsb
xchg
fnstenv
into
push
dec
xorb
push
pushf
lods
push
jecxz
sbb
repnz
daa
jae
imul
or
jbe
pop
pushf
mov
hlt
xchg
xchg
push
and
js
xchg
or
aas
sub
add
test
mov
jmp
shlb
and
enter
call
mov
mov
nop
dec
mov
sub
sbb
xchg
jl
cmp
mov
jle
lods
or
mov
and
add
lret
mov
popf
adc
jl
xor
sub
les
in
sub
mov
pop
stos
arpl
xor
addr16
xorb
std
push
std
or
sbb
cli
push
add
adc
test
scas
imul
and
dec
mov
mov
lds
add
dec
in
sbb
cwtl
push
stos
clc
daa
ljmp
add
iret
fstps
add
outsl
lea
popa
jae
xlat
add
loopne
cli
in
adc
dec
lods
imul
mov
mov
insb
fwait
std
data16
pop
push
and
pusha
enter
outsb
mov
xchg
repnz
cmp
push
popa
hlt
push
xor
in
sub
pushf
dec
jb
aam
gs
das
sbb
js
loopne
mov
dec
sub
jmp
bound
xlat
cs
sbb
jae
jnp
add
cli
cmc
sub
loop
popa
outsl
mov
or
jle
ja
jo
sahf
les
fistl
sbb
gs
dec
les
aam
jo
pop
or
xchg
sar
push
movsl
pop
stos
add
mov
lods
es
jns
and
jae
sub
mov
inc
jecxz
inc
in
repz
insb
movsb
into
pop
enter
mov
cwtl
clc
clc
cmp
push
fs
in
push
pop
inc
hlt
mov
jp
sub
cli
push
je
cmp
fwait
push
push
push
shll
xchg
dec
cltd
cmc
lods
jnp
aas
gs
loop
fldt
sbb
dec
and
xchg
or
mov
insb
xchg
pop
cmpsl
xor
ds
cbtw
jo
mov
scas
pop
cmpl
sti
xor
scas
int3
sti
or
mov
jl
aam
sub
xorb
xlat
and
xor
dec
into
push
pusha
sarb
cmpsb
inc
shlb
add
jl
dec
std
mov
loope
aam
sarl
fstl
cmp
gs
cmp
mov
sub
push
cmc
jge
push
roll
xchg
std
cmp
xchg
and
jae
loopne
mov
xor
pop
inc
ficomps
rcr
sub
sbb
xchg
mov
insl
or
dec
leave
cmp
mov
xchg
or
mov
jnp
arpl
mov
pop
jbe
xchg
jecxz
or
enter
mov
repz
test
mov
dec
mov
enter
lea
lods
jg
push
test
out
mov
jbe
lock
adc
insl
pop
xor
cmc
imul
push
mov
movsb
dec
das
fs
sub
rolb
mov
jg
pop
mov
fwait
sbb
inc
pop
jg
xlat
pop
out
dec
out
jg
pop
shlb
loopne
fidivs
add
clc
add
nop
sbb
inc
ja
pop
push
push
ds
sbb
int3
or
lds
xchg
ret
sbb
or
dec
xor
pop
fs
mov
insl
sbbl
xchg
loop
popl
push
xchg
mov
jb
mov
insl
ret
or
sub
in
cwtl
shl
int
and
jecxz
mov
mov
xor
jle
push
je
inc
icebp
cmc
jnp
lahf
and
mov
or
test
inc
pop
insb
sbb
call
sub
and
sbb
add
ss
jl
xchg
imul
and
cmp
cmp
pop
xchg
mov
or
aas
xchg
divl
mov
outsl
sub
pop
sti
xchg
adc
clc
lock
xor
idivl
mov
pop
jbe
outsb
sbb
xor
fcomps
push
lock
jne
mov
add
or
dec
and
dec
push
in
cmp
jmp
int3
repnz
mov
dec
imul
aas
arpl
bound
sbbl
sub
sbb
add
or
pop
dec
inc
fwait
add
xor
cwtl
aaa
negl
loop
inc
xchg
push
lret
call
xor
into
shlb
dec
jmp
out
dec
mov
add
loope
lcall
rcll
mov
cli
hlt
cltd
popa
sub
dec
or
or
sar
add
push
test
xchg
pop
jge
int3
pop
ret
dec
test
and
js
jecxz
jl
dec
in
xchg
lods
shlb
push
je
dec
sbb
mov
push
lea
pop
sbb
cmp
aad
xor
push
and
into
insb
mov
dec
in
loope
dec
cmp
push
orb
jl
fwait
pop
pushf
shlb
mov
es
fstpt
test
inc
ret
cmp
lahf
push
shlb
aam
lret
xorb
inc
gs
lea
movsb
jle
xchg
mov
push
add
int
sub
aad
xor
cmp
mov
fadd
jne
shrb
lods
or
mov
or
jg
jge
and
lcall
outsb
fs
mov
jno,pt
jl
mov
dec
xchg
dec
call
loopne
cmp
jmp
pop
in
pushw
enter
mov
cmovae
dec
xchg
add
movsb
cld
sbb
cmpsb
push
fsubrs
pushf
mov
into
test
jp
insl
mov
popa
and
cmp
sub
jp
lcall
push
ficompl
pop
mov
inc
ret
add
mov
popf
and
cmc
outsb
and
js
cmp
sub
insb
ficoms
add
inc
rorl
jb
lcall
push
pushf
pop
test
push
nop
std
xor
sti
int3
xchg
pop
clc
insb
movsb
iret
adc
loope
orl
pop
xor
xchg
add
pushf
ljmp
xchg
dec
and
mov
and
or
pmaxsw
jb
in
mov
adc
xor
cmp
aam
out
sbb
movsb
cmpsl
xchg
adc
imul
fidivrs
xchg
cs
shlb
lret
in
popf
pop
cmp
outsl
fdivrs
stos
adc
xchg
mov
xor
jne
aad
cmpsl
dec
adc
ret
popf
add
cmp
dec
cld
mov
jo
pop
add
inc
xchg
push
mov
shlb
ret
jmp
fwait
push
dec
sub
lret
cmp
push
dec
xchg
add
icebp
mov
or
fcom
mov
or
pop
hlt
dec
and
fdivrl
vphaddbw
loopne
jge
mov
fdivrl
leave
adc
scas
stos
inc
loopne
aaa
push
sbb
mov
jl
add
lods
jp
adc
inc
or
popa
jns
jne
scas
cmp
dec
push
jle
out
xchg
xchg
cltd
shrl
and
ret
ds
or
pop
jns
and
xchg
pop
cwtl
fdivrs
decl
and
or
jo
stos
fistl
cmp
pop
adc
or
push
stos
or
or
cmp
sbb
jge
dec
aaa
push
xchg
or
adc
xor
pop
outsb
xlat
pop
mov
jecxz
test
mov
fildll
cmp
cmp
ret
jo
icebp
xor
fstl
jle
mov
fcomps
fs
add
push
jge
mov
jmp
mov
fcomps
das
cmp
jg
jnp
je
jg
cmp
shlb
inc
fdiv
add
into
pop
shrl
aam
sti
sub
adc
dec
and
lods
cmp
rcrb
jbe
daa
mov
inc
mov
adcb
sbb
movsb
push
push
inc
push
sub
jbe
push
aad
data16
xor
into
dec
inc
adc
jo
stos
xchg
mov
xchg
hlt
sarl
pop
or
mov
gs
cmpsb
and
pop
out
and
je
aam
out
adc
mov
and
dec
cmp
push
outsb
negb
mov
or
push
push
xchg
in
push
or
outsl
pop
adc
lods
mov
and
sbb
xchg
ret
subb
inc
outsb
jmp
xchg
adc
ficomps
push
test
movsb
jg
xchg
std
add
mov
imul
jmp
mov
out
sbb
push
int3
jge
andl
dec
out
jl
push
mov
sub
sbb
sbb
mov
push
mov
scas
push
xor
dec
mov
adc
pop
adc
pop
xchg
inc
fisubl
xchg
je
mov
pop
inc
push
test
push
xchg
dec
push
lods
sbb
inc
rol
inc
mov
mov
mov
sub
or
inc
cltd
jmp
stc
test
inc
xchg
or
aas
cmp
cmp
dec
inc
adc
mov
leave
mov
clc
dec
mulb
addb
loop
xor
dec
mov
push
clc
dec
xor
dec
imul
mov
inc
mov
popf
sub
sub
sahf
and
sub
xchg
out
rcll
jp
repnz
imul
sbb
or
in
out
jns
lods
sti
movsb
shlb
fsubrl
fldl2t
ret
scas
scas
mov
in
and
or
mov
mov
data16
fisubs
in
jmp
icebp
xchg
pusha
add
add
lock
xlat
lahf
fwait
enter
adc
in
insb
mov
cmp
outsb
outsl
pop
pop
xor
push
jp
mov
add
adc
fists
jl
andb
inc
pushf
xchg
sub
push
das
sbb
cmp
inc
mov
push
pop
jo
push
test
insl
fmull
inc
sbbb
movsb
xlat
loope
mov
fs
mov
jmp
xor
jl
jecxz
fs
imul
repz
add
into
cld
in
mov
gs
popa
push
adc
adc
jle
jbe
inc
xor
cmc
xchg
fnstcw
sub
adc
mov
pop
push
or
push
xchg
push
call
jns
lods
mov
insb
pop
dec
into
in
xchg
mulb
mov
sbb
mov
push
mov
mov
fiaddl
cs
bound
outsl
sbb
sub
scas
ja
lahf
dec
gs
mov
sahf
mov
xchg
xor
sub
outsb
bound
mov
call
jle
xchg
inc
add
popl
xchg
jae
mov
call
adc
das
test
daa
xchg
lods
lods
fsubrp
bound
mov
aaa
mov
xchg
xor
push
les
xor
outsb
add
jno
xchg
subb
repz
jmp
and
push
out
mov
mov
inc
xlat
ror
xchg
mulb
jns
mov
aaa
lcall
ja
sahf
push
pop
dec
leave
movsb
hlt
and
mov
mov
push
pusha
fs
dec
jns
push
les
inc
test
xor
mov
loop
out
sub
mov
sahf
mov
lea
mov
fdivrl
lret
pop
push
sbb
test
lahf
insb
xchg
adc
sub
rcll
mov
xchg
pop
and
inc
sarl
dec
cwtl
sbb
fisubrs
in
mov
fsubrs
add
cmp
lahf
xor
bound
aam
ret
js
pusha
ret
inc
sbb
mov
in
xor
push
icebp
xor
pop
adc
pop
sbb
femms
std
lods
dec
sub
sti
dec
mov
punpckldq
rcrb
or
aad
stos
xchg
xchg
dec
repnz
dec
enter
rolb
xchg
and
add
stc
mov
adc
push
ss
ljmp
pop
sub
mov
ds
dec
or
mov
mov
mov
xchg
repnz
mov
mov
movsl
loope
pop
jns
dec
add
loopne
out
dec
jae
cli
outsb
insl
adc
push
xchg
stos
movsb
cmp
pop
xor
and
imul
hlt
mov
xor
mov
lcall
mov
add
sbb
jp
xchg
pop
and
fs
aad
push
mov
adc
bound
fdiv
imul
xor
sub
or
lahf
aam
mov
or
cmp
mov
adc
fcoms
cmp
xchg
pop
fadds
fwait
repnz
adc
pop
pop
mov
mov
add
stos
inc
cmp
xor
ret
cld
jns
push
in
sahf
in
sahf
cmp
adc
sbb
mov
cld
mov
movsb
rorl
cmp
adc
arpl
subb
inc
jno
jnp
jle
add
xor
mov
and
mov
mov
lret
das
stos
and
dec
mov
and
loopne
dec
sub
jns
dec
movsl
imulb
leave
test
ds
inc
int
and
pusha
loop
push
or
mov
pop
inc
dec
cmp
ja
push
rorl
stos
cltd
cmp
popf
mov
sub
mov
repz
jnp
pop
jle
mov
mov
jmp
and
test
mov
test
add
pushf
xor
movsl
adc
push
push
jmp
imul
ret
jns
data16
cltd
pop
addr16
jmp
cmp
mov
add
xchg
in
lock
sbb
cmp
in
je
pop
jge
in
push
pop
adc
js
and
and
dec
scas
xor
and
push
and
vhsubpd
pop
inc
fistl
or
inc
popa
es
sahf
mov
mov
sahf
inc
xor
enter
into
lcall
and
test
stos
adc
cmp
adc
sbb
ucomiss
jne,pt
lock
dec
inc
imul
ret
cmpsl
sub
sbb
and
jne
mov
or
fldl
stos
pop
dec
inc
inc
push
nop
not
dec
inc
xchg
xchg
add
mov
popa
repz
inc
inc
lods
lret
in
mov
pop
sahf
enter
pop
aas
pop
jae
inc
mov
push
xor
jno
inc
pop
arpl
jae
and
push
decb
cwtl
shll
cli
xchg
imul
lret
lcall
xor
and
add
mov
movsl
pop
inc
aam
dec
loope
cmpsb
inc
mov
dec
andb
mov
sbb
dec
mov
inc
inc
subl
lcall
jo
test
cltd
out
xchg
insl
push
movsl
cmpsb
daa
pop
sub
icebp
loopne
fwait
sbb
jne
jo
ljmp
and
mov
jb
pop
arpl
icebp
call
enter
jae
push
movsl
mov
push
pop
dec
cmp
jl
int3
dec
stos
add
sti
xor
notb
and
add
loop
mov
mov
insb
jecxz
or
jmp
ljmp
and
daa
jae
stos
out
xchg
pop
xchg
jecxz
or
and
cld
dec
mov
mov
sub
mov
jbe
fbstp
sbb
dec
xchg
fwait
lock
push
lods
push
push
lahf
jno
and
mov
jae
in
shlb
imul
lcall
popa
cs
and
xor
adc
dec
in
cmpb
sbb
gs
mov
xchg
pop
andl
lret
xchg
out
test
jbe
jecxz
mov
pop
fcoms
cmpsl
adcl
cmp
mov
lods
mov
call
xchg
rolb
xchg
cmpsl
jno
je
mov
hlt
or
sbb
mov
sbb
or
ljmp
jo
inc
xorl
inc
movsl
aas
arpl
imul
insb
sar
test
sbb
push
xchg
sbb
mov
xchg
adc
in
and
adc
push
xchg
jb
dec
jb
stos
stos
loopne
sub
int3
dec
push
shrl
in
pop
es
shll
addr16
xchg
jge
jmp
add
shlb
insl
mov
test
mov
mov
mov
sti
out
je
pop
push
imul
mov
add
icebp
je
cmc
fucomip
cmp
test
mov
mov
addr16
and
pop
iret
ja
jns
andl
mov
jnp
jle
push
lds
and
test
push
dec
clc
fwait
cmpsl
dec
sbbl
flds
fldl
pop
or
aad
jmp
xchg
loop
movsb
sbb
or
dec
scas
and
lahf
push
cmp
adc
lahf
nop
or
or
dec
push
les
add
jbe
mov
lahf
lods
popa
jecxz
test
sub
ret
ret
jo
in
out
push
jl
push
sub
into
sub
fisubs
xor
xchg
cmp
clc
int3
sti
or
xor
cmp
cmc
sub
xchg
jae
filds
mov
push
es
scas
sbb
xchg
icebp
imul
movsb
int3
in
ficomps
aas
push
icebp
sub
js
cli
mov
dec
xchg
arpl
nop
sbb
in
cmp
repz
pop
mov
inc
insl
adc
dec
je
fwait
jne
inc
xchg
incb
adc
stos
or
lret
jle
mov
add
popa
pop
ss
lock
loopne
sub
sbbb
sub
movsb
sti
push
xor
sbb
pop
mov
push
jecxz
test
incl
and
loopne
pop
push
or
insl
and
call
jae
add
out
jp
mov
scas
daa
jle
mov
ret
or
scas
mov
or
pop
and
jecxz
and
clc
push
push
inc
out
add
bound
pop
xor
mov
shr
dec
cmp
cmc
mov
cmpsb
xchg
cmp
mov
push
push
outsl
jbe
repnz
and
add
out
pop
lods
mov
or
sub
mull
mov
fists
inc
daa
mov
into
cmp
jae
imul
fs
pop
push
xor
out
or
xchg
sub
and
in
and
insl
adc
inc
lret
jo
or
push
cmp
sub
sti
cmp
mov
mov
xchg
dec
cmpsb
dec
add
sbb
adc
std
sub
or
and
mov
scas
insb
mov
out
add
push
das
outsl
fisttpl
mov
out
pop
out
fstpt
scas
adc
and
pusha
loopne
adc
out
movsl
loope
sub
xchg
stc
mov
xchg
mov
push
repz
cmp
push
add
cmp
lcall
mov
sbb
lock
ja
mov
dec
loopne
in
movsb
sahf
dec
popf
xchg
pop
js
adc
aas
test
dec
mov
repz
dec
or
xchg
scas
push
es
adc
shrl
sti
lea
bound
mov
fwait
pop
xchg
sub
inc
out
ljmp
xchg
cli
aaa
outsb
mov
pop
ss
cs
divl
jle
mov
into
adc
push
jbe
mov
and
mov
xor
push
sbb
lea
jnp
sti
cmp
test
aam
pushf
push
xchg
pop
dec
xchg
pop
pushf
sbb
mov
sub
dec
frstor
jmp
add
push
mov
icebp
lret
push
call
hlt
sub
rcll
jge
cmp
inc
pop
ss
cltd
in
push
faddl
add
ficoml
test
hlt
das
or
clc
rolb
add
mov
or
sti
fidivs
loop
test
pop
sbb
ror
lods
sub
cmp
outsb
leave
loopne
movsl
jl
loope
lods
xor
jg
ret
sbb
or
mov
xor
inc
xchg
shll
ret
add
lods
ret
dec
pop
jne
pop
clc
lret
les
add
and
sub
nop
pop
mov
jnp
push
xor
ss
stc
sarl
add
and
gs
inc
ffreep
dec
inc
push
pop
aas
and
outsb
xchg
ljmp
sbb
adc
mov
std
adc
ljmp
add
fwait
mov
daa
ret
movsb
mov
jne,pt
add
adc
add
mov
lock
aam
inc
cmp
test
jnp
dec
and
in
fmull
push
cltd
iret
xchg
andb
push
or
mov
out
jle
mov
xor
xchg
shrb
or
sub
repnz
adc
fwait
test
pop
ja
mov
pop
adc
mov
mov
std
shr
enter
fnsave
dec
jno
and
inc
insb
sub
sub
fwait
ret
adc
movsl
xchg
movb
insl
dec
push
xor
test
push
or
outsl
xchg
cwtl
sub
jle
sbb
shld
mov
outsl
stos
mov
and
inc
mov
arpl
mov
sbb
add
lods
ret
les
jbe
push
mov
lods
outsb
loop
mov
sbb
mov
jle
jl
and
cmpsl
push
call
inc
dec
mov
mov
inc
mov
in
imull
cmp
or
mov
cmp
fstpt
jmp
scas
shlb
pop
into
dec
and
adc
mov
xor
aaa
push
xchg
shlb
repnz
les
and
cmp
cli
stc
aam
adc
cld
inc
pusha
dec
pop
adc
mov
out
gs
inc
sahf
push
xchg
push
std
xor
pop
leave
test
push
dec
or
mov
popa
fsubr
aaa
hlt
cmpsb
adc
inc
sbb
ret
das
sbb
mov
clc
push
fistps
arpl
loopne
jl
repnz
xchg
pop
pop
test
sbb
jge
in
pop
push
fsubs
sbb
adcb
xor
shrl
loope
mov
push
clc
jmp
adc
push
lods
mov
xor
scas
movsb
test
out
add
arpl
fbld
add
fucomi
mov
das
ds
and
stos
xchg
lcall
push
xor
orb
data16
cli
push
scas
xlat
cmp
xchg
add
dec
outsl
int
lea
repnz
int3
add
add
in
popf
or
xor
out
ficompl
or
xchg
jb
adc
jb
mov
push
sub
scas
dec
cld
test
and
sahf
push
jmp
mov
pop
rorl
mov
lds
and
roll
jecxz
or
mov
fcompl
lods
fwait
adc
negb
jge
test
in
xchg
lea
fucomip
pop
xchg
sbb
add
dec
icebp
popa
out
xor
out
push
into
dec
or
nop
scas
dec
xchg
test
cmc
aas
iret
mov
mov
xor
inc
lret
aad
lea
insb
stos
into
cmpb
cwtl
insl
inc
xlat
mov
popa
jl
mov
daa
addl
stos
sub
aas
cld
mov
xchg
xchg
or
in
inc
cmp
fisubl
test
push
lcall
add
cmp
insb
in
rcrb
imul
lods
les
pop
aad
inc
cmpsl
sub
arpl
orb
xor
dec
xor
push
xchg
xchg
fcomi
mov
mov
test
outsb
mov
cmpsb
insb
ret
fnstcw
popa
out
test
loopne
addr16
jg
jge
jle
xchg
mov
and
loope
cli
inc
mov
xor
test
sbb
inc
je
mov
xor
mov
push
sahf
add
aas
and
xlat
xchg
jp
repz
mov
pop
arpl
inc
jb
inc
stc
push
mov
mov
negb
xor
arpl
adc
stc
push
mov
cmp
in
mov
cmp
jg
push
mov
nop
sub
jb
add
sub
and
pop
dec
je
js
xchg
arpl
jmp
sub
insb
xor
inc
loopne
inc
or
movsw
rorl
push
xor
daa
mov
xor
xor
into
sbb
sub
and
inc
mov
add
aaa
je
jno
ds
inc
or
mov
push
and
sub
cs
and
js
repnz
add
pop
roll
add
std
sbb
flds
jl
inc
xor
adc
adc
ja
rclb
test
xchg
mov
lret
mov
mov
nop
outsb
leave
sbb
mov
xor
fs
rorl
cltd
sbb
sub
cld
sub
jecxz
imul
ljmp
fnstenv
cpuid
cld
pop
and
loopne
loopne
lret
data16
add
add
ret
cmc
daa
fcoml
fldt
gs
lcall
inc
or
aas
dec
movsb
and
mov
push
and
movsb
push
xchg
add
cmc
pop
inc
xchg
jp
add
jnp
jo
das
xchg
outsb
inc
je
mov
mov
mov
lods
add
fsts
mov
dec
cmp
sbb
jecxz
jno
insl
sti
mov
adc
jbe
sti
mov
add
ds
and
mov
cmp
aam
loope
pop
leave
jmp
xlat
outsb
imul
clc
loopne
cmc
or
aam
mov
adc
scas
mov
rol
lea
xorb
cli
ds
inc
push
cmp
mov
dec
inc
xchg
mov
test
int3
mov
pop
jbe,pt
sbb
xor
hlt
enter
and
xor
scas
push
insb
sarl
sbb
and
stc
mov
or
in
adc
out
mov
dec
xor
sub
xor
push
mov
aaa
dec
mov
daa
push
fdivrp
mov
sti
pop
adc
mov
cmc
aam
sub
popf
sahf
scas
adc
sbb
andb
jl
jp
lea
mov
adcb
xor
jb
mov
push
imul
jmp
cmp
xor
xor
pop
or
inc
addr16
std
xchg
int3
cmp
fs
and
test
mov
repnz
mov
pop
inc
leave
cmp
xor
test
lods
mov
scas
or
lahf
lcall
jbe
xlat
cmp
sbb
cmc
xor
cltd
cmp
aas
popf
stos
cmp
test
and
icebp
push
sbb
popa
sub
inc
lahf
jbe
jl
mov
sub
push
das
mov
fisttpl
enter
jns
lods
decb
out
out
dec
popa
out
cmc
or
fisubl
leave
lock
lds
icebp
cs
ror
jmp
bts
inc
xchg
mov
das
cwtl
cltd
pop
out
ret
xor
add
mov
or
xchg
iret
xchg
stc
or
pop
scas
enter
repz
lcall
orl
fmul
hlt
jne
mov
aam
bound
adc
sarb
xchg
jmp
jp
cld
jge
loop
xor
xlat
sbb
mov
mov
pushf
mov
sbb
cmc
movsl
arpl
inc
mov
inc
cmp
mov
xchg
adc
popa
jecxz
pusha
xchg
shlb
negl
or
push
xchg
mov
push
cmp
lods
lock
imul
popf
sbb
rcrb
movsb
out
adc
pop
nop
shlb
enter
xor
cmp
xor
ret
clc
and
outsb
prefetch
or
and
scas
outsb
cli
mull
jnp
mov
je
jmp
sub
lock
movsb
insl
pop
xor
cld
adc
mov
fisubrs
xor
dec
jmp
nopl
and
push
repz
lret
xlat
call
imul
fwait
sti
add
mov
js
adc
jge
aaa
dec
js
addl
push
popa
ret
add
mov
outsb
dec
imul
dec
sbb
cmp
int
sahf
jp
sub
push
xor
xorl
xchg
and
insl
dec
sbb
iret
lods
rclb
int3
inc
mov
xor
in
mov
or
stos
dec
sub
out
lcall
push
adc
out
sbb
outsb
dec
mov
ret
cmp
aad
inc
addr16
in
jg
add
mov
outsl
push
dec
dec
enter
dec
sub
lea
push
ja
bound
fs
lods
dec
mov
test
out
ficompl
lahf
sub
je
lods
addr16
aad
xlat
in
ljmp
sub
mov
div
outsb
push
loope
xchg
int3
in
imul
outsb
ret
aam
test
pushf
enter
fdivrs
inc
outsb
jg
push
inc
les
cltd
adc
jmp
andb
shlb
sahf
in
or
mov
mov
or
pop
jmp
dec
test
xor
mov
push
lea
xchg
jno
es
js
inc
shrb
stos
inc
int3
inc
xlat
repz
pop
or
popa
imul
or
loop
cmp
repnz
lock
add
shll
scas
add
xlat
idiv
lods
inc
test
sbb
clc
xchg
push
ficoms
mov
cli
push
dec
imul
fnstcw
mov
negb
and
lods
testl
and
pusha
mov
adc
mov
adc
pop
je
orps
or
ficoms
push
jmp
push
dec
inc
xorl
ficompl
faddl
sub
jb
dec
inc
and
adc
cwtl
jle
xchg
xchg
pop
subl
xor
add
inc
mov
dec
and
cmpsl
js
iret
in
es
or
stos
leave
es
mov
pop
mov
and
inc
inc
int
xor
jle
or
pusha
pop
pop
mov
rcl
loopne
iret
xor
pop
inc
rclb
js,pt
mov
roll
push
cmp
lret
sub
cmp
hlt
test
mov
dec
testb
mov
fdivrl
les
vcvtdq2pd
xchg
xchg
imul
insb
pushf
pop
dec
inc
mov
in
imul
mov
mov
dec
jle
xlat
cmp
rorb
repnz
and
and
insb
repz
arpl
jp
mov
stc
fadds
js
inc
jnp
cs
fldl
scas
dec
leave
and
les
sub
mov
sahf
mov
mov
fnstcw
xor
insb
add
enter
mov
sbb
push
xor
push
adc
std
mov
movsl
mov
cmp
and
divb
mov
and
int3
outsl
mov
or
push
popa
xchg
sbb
add
jo
out
jno
fcmovnbe
push
or
dec
lret
pop
enter
sbb
out
aad
pushf
add
fimuls
loopne
adc
mov
aad
jl
jp
mov
xchg
aad
loopne
lds
mul
and
sbbl
push
cmp
pop
or
pop
push
and
push
mov
push
sahf
adc
cmpsb
mov
push
lahf
or
out
stc
andb
in
pop
sahf
sahf
mov
push
loop
je
push
mov
mul
lods
sub
inc
mov
jle
out
cmp
xchg
rclb
sub
mov
in
pop
mov
daa
push
sbb
pop
mov
sahf
lret
inc
fistpl
push
push
mov
test
mov
adc
out
out
faddl
cltd
inc
in
stc
xor
xor
pop
jecxz
push
nop
mov
mov
sub
cmp
push
lahf
call
pusha
mov
insl
push
movsb
sub
or
sti
lods
mov
mov
sahf
std
dec
loopne
cmp
in
inc
rorb
pop
mov
push
add
lock
dec
dec
sarb
xchg
mov
mov
pusha
stc
add
das
jno
push
mov
mov
shld
cwtl
xor
jg
icebp
pushf
leave
mov
movsl
cld
push
data16
inc
mov
imul
aas
pusha
mov
or
cmp
xchg
cmp
inc
push
mov
cmp
repnz
push
jno
mov
push
hlt
cltd
outsl
ja
popa
jecxz
dec
xchg
xlat
lahf
jns
les
cld
flds
xchg
inc
push
add
push
movsl
add
dec
cmpb
inc
dec
out
xchg
ret
mov
dec
jne
push
and
inc
popa
lea
sub
call
or
sbb
out
gs
cmp
cmp
fbld
cltd
popl
mov
adc
cmp
pop
jo
push
adc
adc
and
mov
fmuls
jecxz
mov
std
ja
stos
jp
jo
cmc
pop
cmp
pop
mov
xchg
xchg
dec
rclb
rolb
ret
or
jecxz
inc
or
aas
xchg
xchg
xchg
xor
add
int3
mov
ret
pop
mov
loope
mov
dec
repz
jle
push
mov
sti
insb
push
mov
pop
add
add
addr16
movsb
push
loop
cmp
ret
jecxz
arpl
pop
call
scas
jb
andb
out
daa
arpl
ss
pop
je
iret
pop
mov
popl
xorb
xchg
lea
lahf
aad
and
jns
cmp
push
in
mov
imul
pop
cmp
dec
jae
xor
dec
pop
or
xchg
stos
xchg
inc
jl
xchg
rcr
pushf
mov
subb
cmpsb
ret
push
mov
or
shll
push
inc
mov
lretw
rcll
subl
pop
cmc
aam
jge
in
les
cmpsb
adc
jmp
stos
testb
sub
push
pop
lea
sbb
int3
mov
leave
sahf
sbb
adc
mov
xor
shrb
mov
push
jb
out
inc
jp
and
push
repnz
in
xchg
shlb
shl
mov
aam
into
dec
sbbl
adc
rol
gs
mov
sbbb
cmc
jmp
pop
movsl
sub
xor
in
aad
sarb
push
jnp
divb
rcrb
dec
push
sub
or
sbb
inc
sub
xor
mov
push
test
dec
inc
pop
inc
fcmovu
insb
xchg
ret
mov
loopne
dec
dec
pushf
sbb
add
outsl
pusha
loopne
jmp
mov
out
sub
repz
fidivrs
xor
add
je
mov
inc
push
push
out
sub
repz
push
sub
pop
in
ret
out
aaa
mov
aam
stos
je
int
pushf
addr16
jmp
cltd
pop
xlat
mov
jmp
ret
cmp
in
push
shrb
cs
loopne
mov
sti
addb
pop
xchg
popa
clc
sahf
imul
sbb
hlt
pop
adc
inc
pop
push
scas
stos
adc
push
roll
cmp
js
cmp
adc
xor
andl
outsb
jae
cmp
es
dec
ffree
stos
and
dec
mov
jo
jge
push
xchg
ret
cmp
inc
filds
xor
jns
fidivrl
in
cmc
or
test
pop
fistpl
push
jae
mov
frstor
aad
notb
ss
and
ficomps
fmulp
sbb
ficompl
mov
xchg
push
mov
out
mov
stos
push
mov
cmp
test
xchg
or
jne
pop
dec
jo
push
stc
push
sbb
mov
ds
jge
and
jmp
jmp
push
xor
out
lds
repz
fnstcw
add
jbe
lret
inc
lahf
jecxz
xor
ficomps
push
xchg
mov
ss
or
call
call
jne
stos
in
sahf
sub
pop
inc
jle
mov
sbb
repnz
and
ja
dec
mov
and
sub
add
orb
inc
jecxz
inc
in
mov
jle
sbb
fldenv
xchg
pop
das
sub
outsb
cli
fwait
pop
or
or
cmc
add
dec
shlb
outsb
dec
inc
xor
popf
or
fisttps
jnp
cltd
dec
std
shr
sub
mov
xchg
movsb
mov
das
int3
push
daa
jmp
inc
lret
mov
or
cmpsl
loop
xchg
js
mov
mov
repz
and
iret
sub
and
int3
jo
inc
or
dec
mov
jne
iret
lock
lds
sti
icebp
not
das
jns
add
mov
pop
sub
xor
in
sbb
lret
sub
daa
lods
pop
mov
cmpsb
lret
add
mov
lret
in
jmp
lret
pop
pop
out
and
repnz
cs
push
push
jl
jp
out
inc
push
rcrl
mov
xlat
cmpsb
test
pop
xchg
sbbl
pop
jo
push
and
les
repz
sub
cmpl
aas
inc
cmp
xorl
inc
jns
out
xor
shrl
outsb
arpl
lret
popf
je
push
push
dec
sbb
pusha
repz
and
in
mov
hlt
jl
push
aam
scas
ss
xor
addb
jecxz
andb
mov
push
call
mov
outsl
outsl
ficomps
cmpsb
mov
fsub
insl
loop
mov
lods
es
jne
adc
int
xchg
mul
inc
sbb
orl
stos
ror
fmul
test
shl
sub
mov
insl
int3
rcrl
jo
mov
inc
loop
mov
dec
inc
shl
cmp
in
inc
hlt
test
rclb
push
xor
dec
xchg
adc
aaa
in
sarl
push
scas
or
pop
inc
pop
adc
mov
ja
mov
aas
sarb
hlt
roll
scas
icebp
fnstcw
sbb
fstpt
xlat
jo
out
lcall
push
notb
mov
insl
cmp
pop
mov
sbb
xor
inc
popf
dec
and
mov
mov
mov
push
aad
adc
dec
inc
xor
mov
adc
std
js
pop
std
clc
stos
sub
jmp
sbb
and
in
sti
pop
jnp
or
mov
adc
lret
mov
sub
int3
sbb
fsubl
xor
push
loope
mov
jge
xchg
lcall
adc
mov
mov
add
ja
inc
adc
ficoml
sbb
insl
add
fwait
mov
mov
nop
cwtl
dec
or
ss
shl
push
xchg
es
mov
iret
sahf
outsb
loop
mov
add
push
mov
fdivp
outsl
pop
mov
add
movsb
jo
push
adc
pop
int
sub
cwtl
enter
jge
xacquire
push
sub
popa
xchg
cmpsb
xchg
in
rcrb
shll
in
add
sbb
insl
ljmp
xchg
sub
pop
mov
in
les
jno
sub
ret
mov
push
sbb
sahf
in
add
das
inc
sub
movsb
mov
out
xchg
inc
daa
dec
pop
pop
inc
jg
xor
mov
dec
iret
lcall
pop
sti
cltd
mov
mov
scas
movsb
mov
jne
leave
sti
adc
ret
pushl
dec
dec
sub
jae
stos
cmc
hlt
jbe
rep
mov
aas
sub
stos
jmp
jb
aam
aad
sti
and
pop
rcrl
loopne
dec
das
push
cmp
push
sbb
xchg
cmp
mov
jnp
inc
mov
pop
in
fiaddl
nop
sub
inc
xchg
sub
ljmp
ret
sbb
xchg
xchg
fcmovu
jne
test
stos
fsts
cs
and
repnz
adc
ret
icebp
in
push
repnz
cmp
sub
out
add
je
movsl
shrl
xchg
jg
fsubrl
mov
test
lods
sub
popa
sub
sbb
repz
lret
mov
pop
cmp
cmpsl
xchg
arpl
push
pushf
add
dec
xchg
or
cmp
push
mov
xchg
mov
mov
mov
ljmp
mov
dec
sbb
sbb
inc
fistpll
shrl
fs
mov
loop
mov
mov
mov
sub
aaa
out
insb
pop
mov
aaa
outsb
lea
mov
les
add
pop
sbb
in
xchg
std
stos
inc
mov
or
cmp
xchg
lock
std
pop
enter
push
out
add
test
cli
mov
xchg
fs
pop
pop
adc
fildll
bnd
in
sub
mov
ss
sub
test
sbb
js
movsb
mov
pop
les
loope
in
push
mov
mov
lock
inc
sub
add
imul
imul
insb
jb
jge
push
fimuls
dec
sub
pop
fistpll
lret
cmp
clc
mov
jge
sub
loope
in
mov
push
ficomps
lds
in
adc
shll
mov
jge
bound
jb
inc
cmp
inc
or
shlb
mov
mov
je
add
pop
or
fwait
jns
sbb
dec
scas
cmp
mov
scas
inc
xor
enter
cwtl
mov
mov
and
mov
xor
sahf
das
mov
mov
jns
and
mov
mov
sbb
sub
push
nop
adc
rcrl
cmp
daa
aad
pop
sub
push
add
aaa
or
jbe
rcr
mov
sub
insb
xchg
pop
mov
push
mov
cmp
pop
mov
bound
fnsave
rcr
stos
sbb
inc
loopne
rcl
dec
ds
xchg
popf
xor
ud2
fstpt
or
imul
push
or
arpl
js
sti
test
fdivrs
push
cmp
xor
call
jo
push
pop
gs
imul
and
xchg
fwait
inc
adc
test
test
call
mov
addb
sarl
leave
mov
cmp
or
or
push
scas
vpshufd
add
mov
push
inc
sbb
pushf
mov
inc
sbb
in
das
or
xchg
mov
push
nop
mov
mov
sub
shrl
jbe
cmp
fists
xor
sbb
dec
xor
in
bound
dec
push
add
pop
mov
and
push
mov
and
xchg
into
stc
stos
mov
cmp
mov
add
inc
out
loop
mov
and
mov
ja
std
mov
repz
xchg
dec
mov
test
and
into
sbb
pop
movsb
int
je
ljmp
xchg
clc
mov
imul
push
push
pmulhw
jne
and
mov
and
or
stc
xor
dec
mov
mov
movsl
pop
mov
lret
aaa
inc
push
mov
add
daa
clc
cwtl
test
clc
out
cmp
lock
push
push
or
xchg
aad
xacquire
es
adc
arpl
leave
aam
push
outsb
fistpll
fisttps
xor
gs
movsb
and
mov
adcl
dec
cmp
jnp
xchg
dec
in
das
push
cmp
xor
sarb
enter
adc
add
cmp
negl
out
int
pop
dec
rclb
xchg
in
pop
add
aas
xor
outsb
mul
jecxz
cmpsl
pop
jb
xchg
xor
leave
and
sub
push
xor
stos
pop
aad
cmp
outsb
out
mov
add
test
js
inc
sbb
xor
add
outsb
inc
in
mov
insl
dec
xchg
mov
je
xchg
cli
pop
inc
cmc
cmpsb
out
or
dec
adc
inc
jns
fimull
mov
lret
fistl
int3
push
addr16
out
ret
xchg
mov
lret
inc
add
sbb
or
iret
in
sbb
cmp
mov
dec
mov
in
das
dec
movsb
add
or
cs
mov
jb
cmpsb
inc
sbb
mov
sbb
lea
icebp
aad
and
je
or
cld
clc
dec
pop
loope
lods
loop
in
arpl
adc
dec
pop
dec
pop
hlt
xor
inc
xorl
insl
dec
mov
push
sti
sbb
pop
push
push
xchg
and
mov
sub
xchg
scas
ficompl
mov
mov
or
jnp
and
aaa
repz
bound
aas
fnsave
fsubs
add
cmp
pop
loopne
dec
push
mov
pop
leave
rcl
pop
icebp
imul
clc
mov
pop
cmp
or
pop
and
jl
out
test
loop
insl
arpl
mov
lahf
jo
popa
cmpsb
jp
push
dec
mov
not
xchg
jb
gs
sub
sub
sbb
ljmp
adc
pop
stc
push
addb
sbb
les
sub
xchg
loopne
mov
and
sahf
sbb
pop
and
pop
sbb
movsb
movsl
or
daa
push
mov
push
inc
lds
adc
cli
adc
mov
lret
outsb
xchg
pop
adc
ja
cmpsb
sti
push
mov
xor
int3
add
jl
push
jmp
lods
cmc
lret
inc
pop
cmp
mov
stos
cmovge
lahf
inc
dec
cmp
cmp
add
add
out
shll
in
cmp
adc
jnp
fimuls
add
and
ds
iret
jbe
loopne
in
scas
and
js
jle
mov
or
or
cmp
push
pop
imul
add
xorb
movsl
pop
clc
pop
add
sub
iret
pop
mov
ljmp
mov
mov
adc
lock
xor
das
cli
inc
cmpsl
sbb
orl
ss
hlt
je
popf
mov
inc
sarl
jp
leave
sub
add
gs
pusha
movsb
shlb
ljmp
jo
xor
sbb
in
sub
adc
imul
push
rcl
xchg
jae
or
pop
in
adc
sub
adc
jmp
pop
notb
sbb
push
jle
sbb
ds
push
push
adc
ljmp
jmp
pop
push
add
stc
dec
push
mov
dec
out
add
outsb
xor
out
sbb
addb
jle
xor
mov
andl
or
mov
leave
pop
sbb
aaa
out
push
push
xor
or
adcb
sahf
sbb
xor
bswap
cmp
sahf
pop
int3
aam
cwtl
pop
cmp
je
lds
out
in
xlat
mov
sti
push
add
shlb
or
mov
push
push
or
nop
pop
sub
in
or
loop
xchg
stos
testb
int
xor
push
xor
mov
gs
das
push
mov
jbe
adc
mov
fsubrs
cltd
sub
aas
fstpt
and
shrl
pusha
push
dec
inc
fisttpl
bound
stos
inc
cld
sbb
aam
push
loopne
mov
push
mov
dec
sti
out
xlat
iret
jo
mov
inc
push
and
dec
xchg
lcall
jnp
scas
loopne
add
and
lret
jbe
lods
cwtl
sbb
and
aaa
mov
aad
ds
pop
or
and
repnz
ror
push
out
jae
test
and
test
jl
pop
sbb
pushf
pusha
mov
popa
xchg
mov
mov
or
fsubl
push
sbb
adc
loop
or
adc
push
lods
xchg
xchg
xchg
or
fdivrl
jg
and
lods
pushf
notb
mov
stc
push
pop
jbe
gs
push
sbb
xchg
fsubrl
jle
aaa
mov
mov
or
jl
cs
sub
mov
inc
jge
and
add
jl
test
mov
adc
lcall
lock
lods
mov
adc
daa
push
mov
adc
cmp
fstpl
cmp
push
loopne
lea
in
scas
cmp
push
push
loop
jmp
jns
push
xor
jns
jle
pop
out
pop
fmuls
repnz
sub
stos
cmp
iret
mov
mov
inc
mov
mov
cmp
outsb
xor
mov
add
add
fstpl
inc
out
mov
adc
sub
or
or
inc
dec
dec
or
orl
push
and
xor
dec
dec
mov
xchg
call
pminub
add
push
aam
push
call
aam
jmp
stc
dec
sbb
shlb
ss
outsl
ja
adc
std
add
insb
out
mov
jo
repnz
cmpb
icebp
out
rorl
pusha
inc
imul
push
test
incl
inc
sub
dec
add
xlat
cmpsb
mov
mov
push
and
xor
sarl
sbb
repz
jp
aam
ret
jle
jecxz
inc
out
dec
ds
mov
sbb
jno
jl
and
cmp
xor
ret
xor
xor
sbb
fnstenv
xor
inc
cmpsl
mov
inc
xor
push
fidivs
pop
mov
inc
mov
push
outsl
mov
loop
sbb
and
mull
sbb
arpl
fmuls
popf
cli
xchg
rol
inc
lret
icebp
cmpsb
push
and
jae
mov
daa
ljmp
mov
ja
popa
or
fsubl
pop
in
cmp
mov
cmovae
hlt
lds
sbb
psrad
sub
add
xlat
cwtl
shrl
or
jg
out
lret
data16
push
mov
sub
cltd
push
dec
dec
or
push
lret
test
dec
sbb
scas
dec
inc
mov
cmp
lret
loopne
inc
fchs
shrl
xor
cmp
mov
repz
sahf
fisttpl
cmp
xlat
jmp
or
cmp
aad
and
xor
xor
and
jp
daa
sti
pop
jmp
in
add
mov
pop
sahf
les
insb
sub
test
nop
stos
inc
jp
insl
les
fistpl
mov
out
adc
fimull
inc
sbb
movsb
loop
pop
push
and
cmp
arpl
and
mov
xchg
cli
sbb
mulps
jl
int3
xchg
addr16
inc
pop
out
rcl
outsl
bound
mov
adcl
mov
test
std
fwait
shrb
sub
dec
mov
ficoml
loopne
mov
xlat
or
pop
add
sahf
ja
popl
loope
jne
sub
aaa
rcl
xor
pop
mov
jno
enter
xchg
sbb
hlt
jge
inc
add
pop
ja
and
mov
jmp
mov
out
cmp
push
mov
push
insl
or
jbe
addr16
sub
ret
adc
dec
mov
fisubs
rcll
jge
mov
lret
sahf
out
add
ljmp
aam
lret
out
mov
repz
mov
daa
push
jle
jbe
push
cmpsb
filds
loop
inc
into
sbb
mov
xchg
xchg
es
fldt
rolb
sbb
push
das
or
inc
add
pop
mov
in
jo
loope
pop
dec
ret
cli
sub
leave
daa
shll
iret
ja
add
loop
pop
ljmp
insl
pop
les
pop
out
add
or
jmp
bound
fidivl
pop
pop
loope
mov
cli
cmp
mov
andl
notb
iret
push
mov
js
leave
cltd
inc
jbe
loopne
inc
call
fcomp
jl
bound
stos
mov
cmp
push
ja
push
repnz
dec
jmp
push
popf
mov
mov
add
inc
std
pushf
xchg
jns
jle
rcrb
inc
jbe
push
add
sub
push
sbb
test
fucomip
icebp
clc
mov
shll
and
sub
cli
ror
or
das
frstor
push
stc
xchg
xchg
loope
cmp
sub
adc
mov
mov
jae
arpl
pop
jae
push
inc
hlt
mov
inc
cli
jbe
imul
and
popf
int
pop
adc
aaa
mov
out
or
xor
mov
xor
sbb
jp
inc
mov
or
xchg
mov
popf
and
pop
xchg
adc
int
adc
dec
add
inc
xchg
pop
push
stc
pop
popa
mov
lds
std
jnp
ficoml
subb
std
mov
dec
daa
out
inc
dec
inc
lea
cltd
sub
cltd
aas
pop
repz
and
mov
or
jo
jbe
int3
and
and
and
sti
xor
pop
mov
xchg
movsl
pop
and
inc
dec
ja
pop
lahf
lea
aam
icebp
test
mov
pop
xchg
inc
ret
cmp
fstpt
mov
fidivs
dec
and
stc
xchg
mov
push
faddl
imul
pop
push
fidivrl
cltd
sbb
xor
pop
out
gs
jecxz
cli
jbe
mov
negl
call
fcmovne
call
mov
jne
jno
xor
sub
fcoml
dec
jle
fisttpll
and
cmp
xchg
sar
iret
push
adc
loope
mull
push
clc
lds
scas
lret
pop
sbb
pop
popf
mov
cmpl
int3
sbb
dec
lods
ficoms
mov
pop
rcl
adc
in
lods
cs
movsb
cmp
insb
popa
test
lods
push
xchg
adc
xchg
and
loop
in
imul
xchg
xor
sub
push
ret
lahf
mov
cmp
mov
mov
ret
adc
jl
push
sub
xor
inc
pop
mov
and
sub
pusha
xchg
mov
pusha
and
stos
fildl
xor
dec
push
cmpsb
imul
aam
cmc
sub
adc
push
sbbb
arpl
pop
mov
repz
mov
popf
sub
cmp
xchg
lea
cmp
cmp
popa
jmp
int
je
je
fnstcw
aas
and
repnz
cmp
dec
lods
mov
das
pop
test
fidivl
ds
ret
imul
inc
lcall
pop
adc
popa
or
mov
fcoml
jne
test
lcall
fnstenv
repz
cmpsb
rcrl
outsl
mov
xchg
in
mov
cmp
push
add
inc
cmpsl
movsb
pop
out
stc
ds
pusha
jle
adc
mov
adc
js
dec
stos
xchg
inc
aaa
mov
xchg
sbb
sti
das
add
mov
out
dec
sub
xlat
push
stos
daa
mov
sub
mov
and
pop
sub
jp
in
xlat
inc
mov
xor
or
adc
dec
cld
and
xor
mov
andl
cmp
inc
xchg
mov
inc
rcll
stc
add
pop
lods
fists
aam
aaa
inc
outsb
adc
repz
mov
stos
add
test
imul
jno
xor
cmp
es
int
pop
inc
jbe
xchg
push
sbb
fwait
mov
cltd
push
add
pop
int
outsb
je
lahf
jle
lock
adc
and
dec
sbb
sahf
jmp
mov
in
cmpsb
ljmp
imul
xchg
mov
pop
leave
or
leave
and
test
mov
push
push
mov
inc
call
lods
jnp
inc
outsb
aam
push
pusha
jp
aam
sbb
scas
jno
or
xchg
push
lods
cmp
jno
add
pop
xchg
lock
inc
rcrb
fisttpl
mov
xchg
nop
clc
enter
xlat
stc
fs
imul
mov
out
mov
fstpt
mov
lcall
lods
mov
inc
sub
fdivs
js
rcr
cmp
mov
jle
stos
outsl
subl
mov
lret
inc
cmp
and
xchg
cli
dec
popf
ds
lods
scas
fsubs
icebp
pop
repnz
add
push
stos
test
inc
cmp
sbb
pusha
ret
lods
sub
sub
mov
mov
movsl
test
or
cmp
jns
cwtl
mov
jae
xor
push
in
imul
adc
arpl
cmpsl
sarb
fwait
out
ret
mov
shr
fisubl
fwait
sbb
daa
icebp
and
pushl
inc
mov
scas
iret
sbb
hlt
cmpsl
pop
pushf
xchg
aam
add
mov
or
cs
add
cmc
lock
pop
nop
das
add
sbb
clc
pop
ficoml
popf
or
adc
mov
or
dec
jns
pop
sbb
mov
je
das
popa
or
fcomps
shr
stc
mov
data16
jmp
aad
js
jmp
test
xor
inc
lret
icebp
or
push
xchg
aas
ss
mov
ret
mov
add
scas
cmpsl
adc
cmp
mov
push
fs
leave
mov
sbb
data16
or
jae
test
idivb
into
repnz
xchg
dec
xor
aaa
mov
push
push
aas
jns
add
and
xor
out
sbb
jb
std
jl
mov
outsb
fdivr
dec
or
loop
mov
pop
mov
jns
dec
out
int3
pop
jno
sub
mov
cltd
inc
xor
lock
mov
mov
push
ret
cltd
pop
pusha
fwait
inc
pushf
sbb
and
sub
leave
mov
cmpsb
stos
xchg
fisttps
js
sub
push
or
loopne
jl
repz
push
shrb
lahf
mov
enter
pop
repz
and
and
rolb
mov
in
nop
popf
jo
ljmp
add
push
xchg
or
out
shrb
xchg
mov
or
mov
jnp
sub
shl
pop
lods
dec
or
enter
loope
stc
incb
mov
cli
xchg
push
lods
or
mov
xchg
cmp
sbb
test
rol
sbbb
call
push
sub
pop
push
inc
dec
jecxz
int
xor
sbb
xchg
movsl
pop
lcall
test
mov
iret
lcall
decl
stos
fcoms
arpl
pop
cmp
sub
lcall
aad
loopne
scas
pop
or
enter
aaa
mov
xchg
push
div
jne
fwait
cmp
adc
inc
in
loop
subb
dec
shlb
xchg
ja
mov
out
xchg
sub
inc
fdivrs
movsl
mov
pusha
rsm
es
mov
sub
dec
outsb
shlb
push
cmp
js
iret
jb
test
add
stos
pop
adc
idivb
inc
adc
sub
sbb
and
pop
sub
mov
jmp
fdivrs
push
orl
cltd
hlt
add
frstor
pop
adc
leave
pusha
or
cmpsl
test
ja
bound
movsl
mov
cltd
inc
push
or
dec
movsl
inc
inc
test
cwtl
loopne
mov
ja
and
cmpsb
cwtl
movsl
ror
stos
jno
pop
sub
ffreep
lods
jmp
adc
cmp
in
mov
xchg
xchg
adc
orl
es
or
pusha
and
mov
pop
mov
jmp
clc
or
in
imul
icebp
or
jle
dec
outsb
aas
inc
push
in
mov
je
fcomps
test
xchg
xlat
loop
adc
stc
xchg
lcall
aad
cli
leave
inc
pop
push
mov
insl
xchg
mov
push
add
in
push
mov
cmp
loop
adc
and
frstor
mov
scas
push
add
or
xor
lds
ja
pusha
mov
push
and
pop
push
and
repz
mov
fstpt
and
mov
mov
jle
or
mov
add
cld
jge
repz
cwtl
push
lret
add
xchg
fbstp
sbb
bound
inc
jno
and
push
jns
xor
or
lcall
xlat
or
or
xchg
test
outsl
lods
mov
dec
int
mov
sub
sub
mov
pusha
add
repz
cmpsb
inc
sbb
jle
rorb
mov
aad
push
dec
das
adc
xor
xchg
not
sbb
mov
mov
jnp
scas
movsl
push
mov
cli
and
pop
add
icebp
mov
imul
inc
cs
sub
jns
adc
pop
sub
ljmp
jecxz
sbb
mov
dec
xchg
cmp
sub
enter
mov
lret
inc
pop
inc
ret
enter
jne
divb
ds
jbe
lret
sarl
add
push
lods
or
mov
aam
add
cmc
pushf
push
in
mov
int3
shrb
pop
icebp
mov
pusha
sub
or
iret
ficoms
mov
push
dec
mov
xchg
sbb
push
push
fisubrs
leave
or
xor
scas
mov
lret
jle
jb
mov
enter
push
in
dec
dec
scas
xor
shlb
cli
xchg
ds
jno
icebp
push
int
pop
cs
jns
pop
dec
idivl
sbb
or
dec
jge
xor
push
jnp
clc
jbe
and
int
ss
ljmp
jb
push
lds
jno
cltd
jns
sarb
sub
adc
mov
adc
lcall
popa
sbb
jbe
and
stc
fcoml
out
andb
sbb
ret
xor
inc
fcoms
inc
outsb
cmp
mov
inc
jle
negl
mov
lcall
testl
and
clc
or
or
hlt
or
std
sbb
sahf
pop
sbb
data16
inc
lahf
les
cli
subb
or
nop
mov
push
sarl
or
push
shll
or
xchg
mov
inc
std
and
out
imul
adc
mov
push
cwtl
xor
cmp
pop
es
insb
push
and
xchg
in
push
sub
pop
mov
iret
test
lea
sar
jbe
cmp
xchg
pop
je
pop
sbbl
jno
dec
fdivrs
ljmp
stc
cmpsl
inc
add
ret
gs
fadds
arpl
in
or
mov
insb
lret
fucomp
hlt
sub
xchg
pop
adc
cld
push
fdivr
push
xor
sub
push
xchg
lret
jnp
mov
aad
mov
pop
fimull
adc
aam
dec
adc
das
lods
xchg
inc
sub
and
pushf
xchg
movsl
js
add
nop
pop
popf
cmc
xchg
rclb
clc
out
inc
cli
and
js
shlb
in
icebp
enter
xchg
xchg
sub
sbb
mov
sbb
jne
scas
jnp
in
cmc
cmp
pop
outsl
xlat
xchg
loopne
add
cmp
fadd
jnp
movsb
pop
cmpsb
out
pusha
push
rcll
shrl
push
xor
lea
jno
es
stos
push
lods
sub
push
jno
sbb
inc
imul
lret
roll
cwtl
mov
mov
andl
mov
outsl
aas
or
or
scas
mov
stos
push
daa
test
int
test
cmpsb
es
mov
mov
adc
sbb
sbb
add
sub
loope
pop
es
inc
dec
inc
or
adc
xchg
daa
stos
inc
test
lods
dec
inc
lods
adc
int3
scas
pushf
or
popa
mov
daa
scas
inc
aaa
mov
xchg
xchg
adcl
lcall
add
aam
xlat
insl
mov
and
pop
mov
je
adc
movsl
push
mov
jo
jge
and
sbb
repz
pop
std
xor
pop
aam
cld
push
das
das
mov
jno
insb
jne
ret
adc
movsb
cmpsl
and
aam
movsl
mov
aaa
xor
iret
add
scas
dec
imul
clc
pcmpeqb
test
dec
xchg
add
mov
push
loopne
icebp
ficoms
ret
inc
cld
mov
sbb
jns
sbb
mov
pop
imul
std
scas
push
push
mov
fidivrs
jns
test
subb
or
les
and
xor
jmp
out
or
mov
outsb
stos
cs
adc
cli
sbb
sbb
dec
push
sbb
mov
lret
dec
xchg
test
push
cmpsl
inc
mulb
pop
xchg
shll
icebp
jl
jns
scas
xor
outsb
sub
xor
and
fiadds
cmp
movsb
movb
test
push
sbb
and
sbb
mov
and
xchg
ja
jb
mov
ret
push
das
int
fsubr
enter
pop
mov
inc
les
sbbb
jle
sti
or
mov
dec
ror
and
rorb
cmpsb
add
xchg
lahf
lods
cmpsl
gs
adcb
push
fadd
dec
add
jmp
fcomps
mov
mov
fidivrs
and
ret
pop
icebp
jge
or
xchg
xchg
lret
inc
cmp
rcrl
fs
dec
mov
add
lret
cli
push
push
in
rorl
xor
jns
in
out
ljmp
lods
movsb
notb
movsb
inc
sahf
cmp
or
push
push
lret
pop
mov
pop
test
mov
xchg
push
repz
pop
divl
fdivrl
fs
shrb
pop
daa
jp
fildl
hlt
leave
pop
jg
out
xor
popa
add
pop
and
add
xor
ficomps
push
mov
lock
data16
adc
lea
or
mov
notl
xchg
sub
stc
inc
add
pop
pop
cmp
cmpsb
push
sahf
out
pop
dec
or
mov
push
imul
xchg
sarl
pop
push
pusha
push
sub
adc
pop
mov
lods
sbb
pop
add
aaa
push
in
push
dec
or
adc
cmp
and
and
sarb
test
iret
ja
jecxz
in
jl
rorl
mov
mov
cmp
mov
call
mov
xchg
das
test
dec
jno
sbb
mov
push
cmc
sbb
cltd
push
cmp
xor
mov
pop
mov
pop
jp
xor
ja
fwait
jbe
int3
out
push
cmp
sahf
cmp
loope
clc
lret
out
ret
stos
xchg
sub
sub
aas
jns
cmp
cmp
cli
cld
mov
xlat
scas
movsb
cmp
mov
fwait
jmp
hlt
dec
gs
jge
inc
call
adcb
cmp
iret
push
out
ss
es
and
pushf
mov
cmpsb
lahf
mov
rcrl
lret
imul
push
adc
xor
push
sub
push
into
dec
xchg
adc
psrlq
test
pop
es
popf
push
je
jbe
xchg
push
sbbl
jb
stos
lcall
rcrl
pop
push
in
pop
inc
adc
orb
sub
pop
mov
nop
mov
fldlg2
cmp
or
adc
jnp
push
imul
aas
mov
insb
sti
xchg
and
xchg
fistpl
pushf
xchg
mov
cmp
loop
lcall
jl
bound
cmp
xchg
cmpsl
jbe
push
les
dec
orl
sahf
in
das
mov
gs
test
inc
push
movsb
cli
scas
xchg
cmp
inc
les
stos
fsubl
icebp
mov
ret
ja
inc
dec
inc
mov
aas
shld
push
mov
push
xchg
pop
cmp
lret
pusha
and
jmp
pop
sub
sbb
cmp
pusha
mov
mov
aad
in
arpl
sbb
test
loopne
mull
pushf
std
mov
xchg
cmp
adc
and
call
outsl
testl
icebp
lret
int3
loope
jmp
lahf
mov
xchg
outsb
icebp
adc
je
mov
dec
cltd
push
inc
rcll
popf
and
cltd
inc
adc
jno
loope
pop
jmp
imul
shll
movsl
xor
xor
cs
and
lahf
orl
mov
cmp
into
ljmp
loop
jb
jmp
out
dec
xor
push
xlat
outsl
xor
and
dec
addl
inc
ss
jo
push
cli
xor
inc
mov
aad
jp
mov
cli
shld
jno
in
dec
div
insb
lfs
fsubs
stc
push
mov
xor
cmp
push
arpl
xor
pop
ja
imul
xchg
dec
mov
or
orl
hlt
sub
nop
aas
cmpsl
and
popl
hlt
mov
test
and
and
sub
sub
lcall
or
mov
sbb
adc
add
sub
clc
push
scas
jns
mov
mov
shlb
imull
notl
jge
xor
test
mov
dec
jg
jb
jmp
xor
or
sbb
mov
ficoms
and
fistpll
cld
adc
je
add
xor
mov
mov
shr
lods
push
add
add
add
push
add
and
push
lret
ss
xchg
mov
jge
sbb
push
lahf
push
daa
in
xor
mov
mov
scas
lahf
int3
xchg
and
ss
shl
sbb
sub
add
mov
inc
jbe
xchg
cmp
bound
insl
add
addr16
dec
and
je
mov
add
sub
call
jb
mov
or
add
xchg
lcall
ret
out
mov
or
mov
mov
loope
mov
xchg
not
int
sub
or
inc
pop
ljmp
mov
xchg
jge
repz
inc
add
xor
lock
test
and
cmpsl
cmc
ret
mov
adc
lods
sar
rorb
cwtl
jmp
ja
dec
and
ret
hlt
pop
push
clc
pop
dec
sahf
or
in
mov
lret
cmp
push
andb
mov
and
sbb
jnp
mov
add
filds
jecxz
mov
pop
jmp
aam
sti
pop
jo
and
xor
pusha
lods
icebp
lock
mov
jbe
outsl
xor
mov
jo
cmp
sti
enter
frstor
add
xor
dec
dec
mov
les
cmpsb
mov
pop
dec
sub
popl
bound
jne
add
push
mov
push
jl
xor
inc
ds
pushf
repnz
out
add
lea
adc
ret
adc
or
hlt
jns
andl
pop
dec
mov
imul
add
pusha
mov
sbb
int
mov
stc
sahf
xor
mov
mov
push
stc
outsb
sbb
es
sbb
inc
std
lcall
jecxz
aam
in
mov
add
sbb
cs
lcall
out
push
inc
push
shlb
xchg
ja
aaa
movsl
pop
bound
jb
dec
xor
pushf
clc
pop
repz
insl
jl
xor
pop
dec
divb
mov
dec
dec
push
add
pop
rorl
dec
out
or
dec
push
mov
or
lock
cmp
pop
cwtl
jae
or
lcall
pop
push
adc
rcrl
adc
jae
xchg
into
inc
and
test
mov
add
mov
mov
iret
xchg
sub
mov
dec
jge
push
dec
push
mull
pop
lahf
das
adc
popa
sbb
adc
mov
jne
mov
sub
cmp
ss
and
mov
lret
mov
pop
mov
pusha
scas
cmp
insl
gs
movsb
mov
shl
fcomps
ficoml
jecxz
loop
imul
out
push
movb
cli
sbb
add
aad
out
shrl
mov
pushf
sbb
jmp
cli
mov
lret
xor
int3
repnz
add
int3
jmp
sub
pusha
dec
cld
xlat
fwait
cmp
push
jae
sub
inc
jge
stos
scas
call
fdivp
clc
adcb
mov
gs
je
mov
mov
add
xchg
mov
cmp
push
xorl
or
les
fldl
out
push
adc
cmpsl
subb
aam
xor
and
out
fcomi
rcrl
push
rol
jae
lcall
testl
ret
pop
sbb
adc
fbld
ss
xchg
fcoml
sub
xchg
dec
mov
fstl
cmp
xor
loop
sub
decb
addb
cmp
ja
test
add
inc
xchg
jg
sub
and
cmp
cmp
jecxz
loop
pop
rcll
rorb
push
pop
mov
addr16
sbbl
clc
or
rcrl
dec
adc
fistpl
test
adc
xchg
test
xchg
mov
xchg
mov
lods
mov
xor
jecxz
out
lea
movsb
idiv
stos
lret
mov
xor
xchg
fimuls
xor
dec
rep
mov
and
int
adc
push
xchg
outsb
push
inc
cwtl
dec
cmp
xor
or
fcmovu
ja
orl
adc
in
mov
cmp
push
xchg
call
adc
adc
icebp
jnp
pusha
mov
mov
ds
enter
xchg
inc
jne
push
loop
mov
add
xchg
rolb
pop
pushf
push
hlt
add
cmpsl
mov
data16
inc
xor
dec
push
xor
in
cwtl
popa
and
icebp
repnz
addr16
dec
inc
fdivs
mov
sbb
xor
hlt
sarl
aam
fidivs
dec
mov
jnp
insl
out
cld
cmpsb
mov
dec
jp
mov
pushf
xlat
push
mov
ds
push
insb
in
push
xor
fwait
jnp
and
mov
ret
cli
mov
enter
loopne
mov
fs
mov
test
pop
std
dec
xchg
aad
adc
jae
ss
cmp
lea
js
ss
addr16
mov
movsb
or
jne
sbb
cmp
addr16
dec
mov
inc
jb
dec
pushf
pop
filds
imul
add
lret
dec
cmp
mov
jnp
push
arpl
out
pop
mov
aaa
ffree
gs
xor
fmul
mov
lea
inc
aam
cmp
movsl
xor
mov
pop
push
jb
outsl
test
mov
dec
daa
add
bswap
and
test
cmp
fwait
pop
stos
stos
imul
xor
jb
xor
lahf
or
stos
mov
sub
insl
sbb
dec
add
add
pop
je
test
dec
add
xchg
push
mov
xchg
lcall
lret
lret
dec
xchg
jecxz
xchg
ljmp
fnstsw
andl
inc
push
mov
cld
add
fisttps
mov
inc
mov
add
dec
pop
insb
ljmp
outsb
test
pop
mov
dec
sub
int
xchg
push
movsl
es
mov
mov
lret
jge
hlt
pop
jmp
sbbl
mov
es
mov
push
pop
cltd
cmpsl
jmp
adc
in
sbb
add
ds
cwtl
inc
jnp
or
aaa
or
xchg
shrl
sbb
pop
mov
sbb
push
pushf
leave
popa
mov
jbe
jns
sbb
jnp
insl
jp
dec
lods
cmp
cmp
int
imul
or
pop
cmp
pop
inc
cli
leave
pop
test
xchg
cld
push
fidivrl
push
cmp
mov
cmp
jmp
jno
lea
loop
icebp
in
icebp
stos
push
push
shl
aaa
out
or
pop
jecxz
fmulp
xchg
push
xchg
dec
aas
lea
pop
dec
cs
pop
out
jne
push
loope
pusha
or
xor
adc
iret
dec
inc
jnp
nop
mov
rcl
ds
mov
std
in
out
fdivl
aam
mov
mov
fadds
jge
cld
push
and
in
sbb
or
daa
dec
ret
enterw
rolb
pop
xorb
mov
mov
fmuls
mov
jbe
cmpsb
nop
fs
pusha
push
imul
pop
push
pop
jl
rcrb
sbbl
mov
lcall
mov
jmp
ret
pop
dec
cli
cmp
or
ds
mov
pop
xchg
movsb
test
mov
data16
jne
mov
mov
in
lcall
loop
cmpsb
stc
adc
adc
push
push
cmpsl
les
dec
icebp
xchg
in
mov
aad
mov
ffreep
jns
aas
or
cmp
mov
push
cmpsl
mov
adc
imul
jo
sub
insb
jmp
scas
test
repz
jo
sub
out
mov
popa
xchg
je
add
pop
and
xchg
xor
add
xchg
xchg
adc
sbb
js
in
inc
or
sub
and
push
pop
das
fucom
dec
call
les
enter
imul
lret
aaa
mov
pop
and
test
fwait
jmp
cli
ja
mov
es
bound
fnstenv
cmp
shrl
push
fadd
xchg
push
jno
popa
addb
mov
adcl
fsts
enter
and
hlt
lret
dec
popf
ds
push
lret
jno
adc
jb
es
repz
addl
xchg
sub
xchg
pop
int3
lret
and
inc
jg
xchg
xchg
pop
pop
jns
int
ds
mov
repnz
rorb
les
inc
or
mov
xchg
mov
lods
bound
xchg
pop
addl
scas
mov
imul
lret
scas
adc
loope
je
arpl
dec
out
sbb
aam
ret
fsubs
mov
inc
push
lahf
into
inc
push
rcrb
subl
mov
push
nop
mov
test
lahf
lahf
into
dec
sbb
imul
push
push
aas
bswap
je
pusha
arpl
and
add
xlat
add
ja
ljmp
or
lock
mov
test
int3
mov
decb
push
cmp
mov
in
xor
mov
xchg
test
push
ljmp
mov
out
push
imul
int3
xlat
mov
add
inc
ss
push
pop
or
or
and
aad
mov
int
std
pop
in
and
or
int
dec
test
sbb
lcall
aas
adc
aaa
add
aam
shll
icebp
sbb
mov
daa
xchg
subb
pusha
in
shlb
orl
pop
xchg
mov
out
pusha
cmp
or
les
push
inc
roll
push
adc
mov
int
xchg
pop
std
mov
dec
aas
mov
xchg
sub
and
lcall
je
dec
xchg
xor
test
sbb
ljmp
add
inc
rcr
pop
mov
daa
in
xchg
mov
sub
mov
int
adc
mov
sahf
push
push
aaa
ja
mov
daa
xor
sbb
test
sbb
xlat
pop
push
out
adc
in
repnz
gs
psubw
mov
xor
movsl
stc
xor
mov
push
sbb
push
cwtl
fildll
rolb
adc
push
sub
aam
xchg
inc
dec
into
es
pop
test
push
sub
dec
pop
jno
inc
pop
pop
mov
adc
lret
sbb
sbb
les
dec
mov
adc
mov
imul
cmp
stos
int3
inc
repz
and
dec
psubb
jl
mov
pop
mov
outsb
cmpl
add
ljmp
jg
push
lods
cmpb
sub
inc
push
fs
ret
jp
sub
push
add
adc
and
popl
inc
mull
je
aas
dec
insl
sub
ds
nop
std
rclb
inc
addr16
idivb
mov
scas
sbb
mov
push
fadds
xor
loopne
lret
jecxz
mov
or
sub
push
das
mov
dec
push
push
std
pop
nop
out
push
fisubl
and
icebp
mov
addr16
lods
pop
dec
test
pop
cmp
fwait
fs
cltd
leave
inc
scas
sbb
push
imul
rol
sarb
lahf
mov
fcompl
mov
shll
iret
adc
ficompl
pushf
jno
fidivs
lret
cwtl
jge
adcl
insl
sbb
insb
push
gs
xor
xor
mov
add
and
dec
cli
std
cmp
insl
mov
jno
fisubl
nop
and
xor
inc
mov
sub
call
call
rcrl
jl
adc
sbb
or
jecxz
mov
mov
push
pop
xor
inc
pusha
xchg
mov
adc
mov
ret
shl
sbb
idivb
hlt
mov
push
push
dec
bound
repz
jo
subb
cs
inc
aad
lea
jnp
jecxz
jno
adc
push
mov
add
and
mov
out
cltd
pusha
cmpsl
xchg
lock
cmp
add
pop
xchg
xchg
push
xlat
xchg
clc
lcall
dec
outsl
push
mov
and
xchg
popf
and
dec
aaa
ss
jno
ficompl
outsl
xchg
icebp
dec
cmc
dec
cltd
jb
pop
daa
pop
mov
xchg
add
andl
mov
std
rcl
dec
sti
jo
int
inc
test
test
and
add
and
sub
call
sahf
aas
sbb
es
sub
mov
cmp
mov
or
lods
fs
adc
inc
add
pop
int3
test
fisttpl
and
jns
in
adc
mov
sub
pop
sub
push
and
ret
pop
or
inc
mov
jg
mov
mov
jo
test
or
outsb
inc
push
in
push
inc
and
test
and
lret
jl
or
push
mov
sub
pop
in
xchg
xchg
mov
std
and
lds
adc
pop
add
dec
fcomi
pushf
inc
fwait
test
jae
pop
lock
les
cmp
dec
addr16
dec
sub
mov
mov
dec
loop
mov
imul
subb
dec
and
jae,pt
scas
mov
repz
jb
mov
sub
xor
pop
rorb
add
sub
std
ja
jge
sub
xchg
pop
jge
arpl
pusha
fisttpl
sbb
sbb
mov
clc
mov
push
sti
adc
js
adc
nop
dec
xor
subb
mov
int
ret
mov
insl
dec
adc
lea
test
jmp
cld
xor
mov
lahf
or
cli
in
in
insl
pop
lea
or
cmp
mov
repz
mov
mov
incb
das
jnp
aad
adc
fiadds
cmp
stc
and
xchg
adc
gs
popf
jbe
mov
mov
enter
iret
inc
push
xor
dec
out
outsb
lea
lods
movsl
xor
into
adc
ret
push
jmp
pop
movsl
mov
sub
rclb
repz
rcrl
sub
test
lcall
mov
jle
xchg
xchg
mov
inc
test
pop
pop
cmpsl
add
jo
mov
mov
cmpb
sub
mov
ja
pushf
cli
inc
loopne
jns
test
insl
cld
mov
insb
loope
cwtl
jg
outsl
pop
jne
repz
lcall
sbb
call
je
andb
jns
and
xor
rorl
sbb
dec
dec
push
aas
dec
mov
hlt
xchg
addr16
mov
cmp
and
pushf
leave
out
pop
and
cld
jmp
inc
pop
lea
lds
push
hlt
fnstcw
dec
xor
adc
cmp
xor
xlat
jnp
rorb
lahf
mov
inc
dec
jmp
in
nop
xchg
test
sub
jb
js
cmp
enter
out
xor
insb
aaa
push
add
or
shrb
xchg
mov
xor
mov
jo
stc
mov
lds
pop
mov
outsb
loop
push
iret
aaa
jg
dec
cmp
shrb
das
nop
push
popaw
adc
cmp
mov
cld
or
sbb
pop
pusha
adc
test
sub
cmp
mov
pop
lock
iret
sbb
sbb
or
or
mov
mov
mov
xchg
scas
mov
xor
mov
test
push
out
jno
dec
push
movsb
and
lea
js
cmp
jnp
outsb
inc
push
and
mov
lea
xchg
hlt
mov
imul
adc
sti
and
test
cmc
dec
push
out
sbb
jmp
dec
jo
jmp
fidivs
add
mov
call
filds
jno
in
inc
shrl
popl
jmp
inc
adc
lds
mov
mov
ret
arpl
sub
icebp
mov
xor
dec
mov
xchg
sub
pop
clc
jp
push
aaa
adcb
sub
ret
adc
les
addr16
stos
loope
push
decb
push
mov
sbb
pop
dec
jno
mov
outsb
out
call
xrelease
pop
test
xor
test
pop
sbb
mov
lret
adc
sbb
push
xor
xchg
inc
lds
fnstenv
divb
pop
jmp
sub
or
jae
and
dec
cmp
lods
stc
aam
mov
gs
xchg
jle
ds
push
pop
frstor
xchg
int
lods
cli
in
cmp
bound
scas
xchg
add
xor
cli
mov
xchg
aad
push
dec
push
je
xchg
push
push
enter
mov
jle
cltd
fsubrp
stos
int3
jge
pop
adc
mov
push
xchg
mov
or
jns
leave
xchg
fcomps
insl
fidivrs
out
push
lods
pop
xor
mov
ss
sbb
and
mov
xor
xor
mov
dec
int3
in
mov
leave
xchg
int
and
andb
cmc
inc
pop
aam
xor
sub
stos
adc
daa
in
cmp
pop
stos
jge
data16
test
xor
lcall
aam
sbb
cmp
test
xor
pushf
push
xchg
cmpsl
das
shll
outsl
pop
stc
pop
repz
gs
xchg
mov
xchg
rolb
adc
push
push
cmpsb
and
cmp
add
jns
mov
push
adc
loope
dec
or
fbld
push
jns
xor
fwait
inc
mov
movsb
cmp
mov
or
stos
arpl
inc
mov
xor
pop
inc
lea
mov
movsl
mov
js
mov
xchg
es
in
out
insb
jp
call
and
bound
and
pop
scas
stos
xchg
sbb
mov
addr16
sub
add
add
inc
mov
scas
mov
pop
push
mov
add
inc
add
mov
mov
lds
push
roll
sbb
xchg
xchg
fcoms
sbb
push
rorb
test
das
insl
inc
mov
pushl
cmp
push
js
dec
cmp
rcl
jbe
mov
test
dec
dec
shlb
lock
sbbl
lea
cmp
in
int3
inc
sbb
push
xchg
jge,pn
fistpl
andl
aaa
xor
mov
mov
xchg
mov
adc
fsubl
insl
rcrb
scas
dec
cli
popa
inc
push
dec
lahf
xchg
neg
cmpsb
xor
jl
cs
jmp
inc
push
sbb
int
push
jmp
gs
cmpsl
mov
mov
inc
or
fstpl
xchg
pop
mov
inc
jne
jmp
xor
mov
cmp
lds
jl
fdiv
xor
mov
fisttpll
adcl
xor
mov
pop
cmpsl
pop
js
sub
sarl
mov
mov
sahf
ja
and
cmp
test
js
push
outsl
pop
mov
xchg
add
add
lods
sti
cmpsb
adc
fldl
mov
or
cmp
mul
jo
mov
fisubl
sbb
xor
jl
mov
ds
mov
lahf
push
cmpsl
aaa
cmp
mov
pusha
lcall
lahf
adc
call
sub
lea
or
pop
sub
outsb
jmp
inc
mov
in
mov
scas
int
or
test
cmp
dec
jp
jmp
sub
push
pop
fidivl
shlb
cwtl
insl
mov
test
xor
xchg
add
and
popf
lds
push
scas
jbe
jb
add
cmpsb
dec
fisubrl
lret
dec
imul
lahf
add
jbe
mov
pop
shlb
call
jecxz
ja
enter
and
xchg
popf
lock
and
testl
xchg
cli
ret
mov
and
push
lock
cmp
xchg
insb
sti
andb
mov
sti
imul
insb
enter
test
loopne
fcoml
xchg
pop
push
icebp
pop
add
mov
push
push
and
rcl
inc
jnp
dec
dec
cmp
pop
xor
push
aas
add
xchg
sbb
push
jb
leave
mov
xor
xchg
xchg
imul
in
jg
push
pop
psrlq
shlb
cmp
jle
test
inc
cmc
adc
dec
pop
cmp
and
adc
xor
pusha
jb
in
rcl
xchg
mov
stos
inc
sub
cmp
jge
jae
and
xchg
andb
sbb
sbb
lret
sbb
jge
xlat
in
sarb
or
loop
or
push
push
jo
les
out
shlb
mov
mov
inc
cli
or
test
aad
gs
xor
mov
out
xor
scas
sbbb
cwtl
inc
test
outsl
sub
dec
lahf
out
push
xchg
pop
sbb
fs
cwtl
xchg
out
cmc
xlat
sahf
add
sbb
enter
ss
cmp
cmpsl
and
push
sub
sbb
xor
dec
das
test
dec
std
aaa
push
push
arpl
xlat
out
xchg
pop
mov
or
subb
or
sub
cld
xchg
adc
inc
ret
push
mov
pop
insb
dec
dec
xor
pop
lods
xor
repnz
push
and
aad
lock
pop
nop
push
stos
sbb
mov
ja
daa
ret
sar
aam
notl
out
ds
cld
out
jg
xchg
inc
std
in
fwait
cmp
and
cwtl
pop
xchg
dec
insl
test
pop
jmp
add
rcr
lock
loopne
sub
aad
into
jge
mov
arpl
sbb
cmp
je
xor
jbe
lock
push
loope
lahf
mov
adc
xor
jl
inc
mov
cmpsl
js
xor
hlt
insl
push
adc
les
lods
ret
xor
adc
stos
fdivrs
xchg
or
imul
cmc
call
lea
push
cltd
jp
xchg
lcall
cmp
sub
xor
pop
fcos
stos
push
int3
add
pop
cmpsl
mov
sbb
imulb
arpl
sub
jo
fmuls
adc
cmp
sub
loopne
mov
mov
outsb
outsb
and
ljmp
loopne
fwait
int3
inc
mov
fs
stc
clc
push
inc
loop
sti
arpl
in
ret
in
push
fdivl
adc
dec
inc
dec
in
push
dec
iret
sbb
mov
push
hlt
pop
mov
add
fstpl
in
mov
mov
mov
ja
cmp
lea
into
xchg
fnstcw
pop
outsb
cmp
pop
and
xchg
enter
aam
movsl
push
mov
push
outsl
mov
sub
jns
and
mov
adcl
pop
sbb
xchg
jmp
inc
dec
push
adc
movsb
inc
dec
stos
stos
mov
dec
fildl
pop
xchg
sub
repnz
xor
xchg
inc
dec
push
sbb
orl
fnstenv
push
dec
pop
adc
sbb
int3
adc
add
jnp
cmpsl
call
or
ret
pop
xchg
cli
fldt
push
pop
insl
mov
push
xlat
adcb
int
pop
pop
adc
jmp
mov
insl
sbb
mov
das
pushf
shll
fs
fimull
inc
or
arpl
aaa
mov
cltd
dec
cmpsb
mov
out
les
and
cmpb
ja
adc
push
cmp
andb
jnp,pn
out
inc
insl
mov
xchg
sbb
sub
push
sub
imul
xor
mov
lock
jp
lock
pop
push
sub
sub
add
div
imul
mov
sub
add
or
test
hlt
repnz
gs
insb
mov
push
std
cmp
jmp
js
jne
rcr
in
add
in
rcll
dec
dec
jmp
push
xchg
shll
mov
sbb
lcall
pop
shlb
fwait
push
imul
outsb
sub
mov
add
mov
inc
outsb
rorb
data16
mov
xchg
js
rcrl
repz
in
test
add
outsb
inc
jl
push
cs
hlt
mov
mov
mov
in
cmp
dec
addr16
and
fstps
lock
jmp
call
mov
xor
aas
sub
aas
scas
or
rcrl
xchg
arpl
add
mov
mov
cmpl
inc
movsb
push
lock
and
mov
mov
mov
cld
push
jp
stc
pop
aaa
jecxz
xor
dec
jle
clc
sbb
push
sarl
scas
icebp
add
test
pop
pop
sbb
sbb
inc
sub
pop
and
mov
sbb
adc
nop
repnz
outsb
lds
mov
dec
xchg
call
call
jle
shl
sub
shl
mov
outsl
inc
iret
repnz
add
sti
arpl
hlt
mov
cli
inc
lods
ja
push
sti
arpl
insl
dec
js
or
int3
jg
fdivl
cmpsb
jnp,pn
aad
push
out
inc
iret
mov
stc
lahf
inc
jg
pop
movsb
inc
lret
pushf
xchg
shl
insb
add
pop
sbb
mov
shll
cmc
push
pop
xor
ret
inc
inc
lret
loop
sbb
jp
shlb
scas
mov
mov
dec
fs
inc
cli
dec
cmp
mov
jecxz
adc
jns
and
je
cld
ret
clc
cmp
ljmp
test
xchg
push
test
inc
lcall
jo
call
xchg
jl
dec
ret
xchg
xlat
popa
mov
out
int3
sub
cwtl
aas
pop
mov
push
repz
mov
out
inc
xlat
or
mov
pop
and
jbe
mov
jmp
xchg
or
lret
icebp
pop
andw
jle
add
jns
mov
dec
lock
and
jge
inc
xorl
sbb
add
push
ja
cmpsb
test
das
push
test
repnz
and
jl
dec
testb
lods
lock
jg
popf
icebp
orb
in
fmul
xchg
sahf
aad
testl
and
pop
cmp
pop
out
inc
and
add
xor
aas
pop
mov
push
fwait
cmp
or
js
xor
clc
roll
or
idivl
addr16
loop
decl
jbe
shlb
shr
jl
push
inc
dec
jecxz
pop
lods
dec
sub
lds
pop
jbe
aad
cmpsl
adc
in
pop
in
xchg
inc
das
and
inc
lock
jp
push
cmp
cmp
dec
fmull
test
out
xor
outsb
inc
loope
cmp
dec
repz
popf
sbb
cmp
dec
adc
dec
xchg
sbb
jg
pushf
xor
repz
jl
stc
test
mov
lcall
std
enter
inc
shrb
mov
loop
nop
xchg
sbb
test
lret
push
sbb
orb
dec
hlt
sbb
lret
mov
popa
gs
mov
out
lods
sbb
pop
aaa
loope
sbb
jp
into
lret
sub
mov
cmp
mov
pop
add
cmp
test
cmp
xor
sbb
jmp
lea
push
and
sub
add
pop
inc
adc
mov
dec
xor
movsl
mov
sbbl
jne
jecxz
pop
sub
mov
and
and
cmp
fs
js
fldl
xchg
xchg
popf
add
and
decb
cmovs
add
lock
outsb
mov
cmc
xchg
mov
adc
int
cmpsb
inc
push
stos
dec
push
cmp
pop
bound
sbb
jns
enter
pushf
cmp
in
loopne
fs
pop
mov
ljmp
roll
dec
cmp
lahf
push
dec
mov
rorb
xchg
nop
mov
je
outsb
sbb
mov
sbb
orl
mov
lret
xchg
xchg
push
fisttpl
repnz
in
and
sub
inc
pop
nop
inc
adc
and
fnstenv
mov
lods
in
mov
cmp
inc
mov
xchg
fstps
inc
push
dec
inc
push
mov
aad
into
ss
sbb
fsubl
cld
inc
mov
pop
mov
sub
lahf
push
enter
out
in
loop
divl
outsb
mov
cld
mov
or
loopne
stos
adc
push
popa
lods
sub
test
daa
mov
adc
push
repz
push
enter
out
lcall
jg
push
dec
adc
iret
imull
or
out
push
mov
pop
mov
enter
mov
fcoml
sbb
jo
sti
add
es
mov
pop
fimuls
loopne
adc
and
xchg
fs
mov
mov
cwtl
jnp
imul
xchg
xchg
xor
adc
push
mov
lret
cmp
les
movsb
mov
addb
stos
filds
add
push
pop
add
mov
fmuls
rorl
push
push
mov
cmp
int3
ds
dec
fstl
jns
xor
inc
mulb
mov
push
dec
repnz
mov
jae
gs
and
dec
jb
movsb
insl
pusha
data16
dec
cmp
aaa
or
lcall
mov
mov
mov
clc
roll
sbb
xor
inc
xlat
pop
cmpsl
repz
xor
loope
jb
popa
fwait
add
inc
loop
xorl
dec
inc
ret
pop
mov
in
jle
sbb
and
fnstenv
sti
xor
test
mov
add
jle
cmpsl
inc
xor
cs
jae
ret
sub
andb
leave
daa
adcl
les
mov
inc
in
mov
cmovno
fwait
xchg
push
jns
insb
fs
incl
mov
out
jne
mov
jmp
call
mov
test
sbb
cmp
sbb
xor
shl
rcrb
adc
mov
dec
jge
inc
aam
xor
xchg
jg
push
hlt
add
cld
pop
or
test
lds
mov
leave
jb
fwait
dec
jge
test
mov
dec
mov
dec
inc
pop
stos
cmpsb
stos
xor
bound
or
mov
pop
out
push
or
mov
jl
rcrb
or
in
daa
push
push
lods
pusha
xchg
sub
repnz
and
nop
jno
movsb
leave
jne
pop
adc
mov
mov
add
push
mov
add
and
cwtl
fdivrl
pop
fnstsw
and
mov
test
lahf
popl
das
out
mov
adc
jb
das
adc
lret
xor
nop
lods
decl
ror
pop
inc
fcomp
dec
or
push
xor
test
adc
cmpsb
jg
mov
mov
pop
popf
push
sbb
mov
add
fdivl
das
sbb
fcomps
cmpsl
xchg
mov
stc
jno
pop
sub
fwait
lea
pop
mov
jb
xchg
incl
pop
cmp
mov
ds
xchg
in
mov
pop
stc
sbb
mov
lcall
pop
arpl
mov
pushf
cld
push
jmp
sub
icebp
js
test
xchg
ja
lds
rcrl
xlat
or
cmp
jle
xchg
subl
adc
mov
sar
test
and
or
stos
jbe
jns
imul
jg
insl
mov
fs
pop
add
fcom
mov
sbb
notl
sahf
pop
ficoms
sbb
push
mov
xor
sar
lea
cmp
dec
mov
or
mov
sar
cli
jne
addr16
inc
hlt
out
imul
cmc
dec
popf
movsb
pop
lods
xchg
out
cs
dec
shrl
push
adc
xchg
xchg
mov
mov
mov
popf
cmpsl
sbb
icebp
push
inc
test
dec
notb
dec
inc
mov
stos
ljmp
or
and
arpl
push
lcall
adc
push
jle
mov
je
or
int
popf
xchg
inc
ljmp
and
lret
pop
jmp
sbb
leave
popl
push
mov
sbb
les
aaa
cli
pop
enter
cmc
inc
jmp
aaa
xchg
adc
dec
addr16
push
int3
scas
loope
fisubrl
je
pop
popa
scas
xor
push
pop
js
mov
push
out
sbbl
sbb
test
daa
clc
dec
cltd
sub
mov
in
dec
and
testb
cwtl
psrlq
sarb
cmp
dec
sub
testb
stos
sub
int3
cmp
xchg
in
jne
inc
orl
shl
or
sbb
mov
subl
sbb
push
aaa
mov
push
jbe
pop
inc
add
repnz
icebp
push
movsl
lret
sub
and
cmp
xor
je
into
gs
pop
cmpb
lret
and
daa
out
sbb
movsl
out
dec
and
and
jae
sub
aas
outsb
iret
aaa
lds
jno
xor
shl
aas
ljmp
insl
cmp
test
int
cmp
stc
aad
bswap
fiadds
lcall
push
push
outsb
adc
enter
sbb
jb
lods
adc
jmp
loope
cmp
std
sbb
or
lcall
adc
mov
ja
adc
test
les
push
movsl
mov
popa
xor
xor
cmp
clc
imul
and
outsl
xor
outsl
push
sbb
lods
fwait
adc
push
lods
call
fmuls
ljmp
fnstcw
fisubl
lea
repnz
mov
xchg
jb
pop
gs
mov
testb
std
push
mov
sbbl
add
addr16
or
and
jl
mov
fisubs
push
sub
and
mov
lods
fisubs
jo
inc
inc
cmpsb
cltd
xchg
jae
leave
ret
pusha
push
xchg
insl
xor
mov
rorl
push
mov
xchg
xlat
push
jno
int3
inc
test
scas
dec
shl
mulb
mov
mov
jmp
xor
rolb
cs
in
addr16
sbb
xchg
jo
and
rclb
jg
cmc
add
movsb
pop
lcall
and
pop
dec
outsb
dec
in
jp
push
loop
inc
xor
nop
cltd
xor
and
js
push
push
scas
pusha
cmp
sub
insl
dec
cmpsb
in
mov
mov
adc
cmp
lea
sbb
loop
jns
mov
dec
mov
mov
in
test
or
xchg
mov
movsl
jnp
adc
sbb
xor
and
insl
lods
push
jbe
dec
adcb
shlb
cltd
xchg
popf
lcall
inc
fldl
mov
xchg
insb
sub
les
cmc
pop
jle
test
loop
stos
pop
or
insb
xchg
out
outsl
dec
and
xchg
dec
mov
mov
ja
pushf
int3
mov
icebp
cmp
adc
fidivs
out
cmp
jmp
dec
push
rcll
cmp
cmp
in
or
sbb
adc
xchg
inc
mov
arpl
hlt
jmp
push
sbb
std
lret
lret
pusha
loop
push
mov
cld
xchg
mov
sbb
xchg
pop
pushf
addr16
or
imul
xchg
in
dec
je
sub
push
pushf
notl
inc
xlat
rclb
shlb
ret
jp
ja
je
mulb
fs
push
repz
nop
dec
xchg
push
outsb
xchg
mov
sub
test
cltd
js
mov
in
lock
shlb
xor
movsl
aad
pop
outsb
dec
pop
ret
inc
xchg
mov
rclb
cmc
xchg
xchg
mov
fsubrs
and
jg
sysenter
or
mov
mov
mov
adc
push
inc
adc
dec
add
arpl
sub
pop
sbb
sbb
add
xchg
push
outsb
lea
cmp
aaa
int
cmp
mov
dec
popf
mov
and
push
pop
mov
repnz
push
popf
adc
stos
enter
shrl
xchg
cltd
lds
out
mov
mov
test
aam
ds
xchg
stos
pushf
dec
mov
xchg
mov
aas
xor
imul
orb
inc
xor
push
or
jge
mov
mov
xor
and
int
adc
mov
mov
inc
push
insb
mov
mov
inc
movsb
leave
nop
jo
pushf
bound
add
stc
adcb
mov
aas
aas
ss
lcall
lods
mov
xor
test
add
cli
shll
add
roll
aaa
mov
jno
in
push
cmp
je
pop
pusha
and
lock
and
mov
adc
daa
outsl
stc
out
iret
insb
xchg
int3
add
cmp
jne
fucom
stos
pop
dec
jecxz
fs
out
push
sub
rcr
dec
dec
mov
and
aaa
push
adcb
icebp
dec
jo
es
jns
push
repnz
cmp
pop
ficoms
in
or
jle
cmp
stos
outsl
jle
shll
xchg
dec
movsl
sbb
xchg
insl
cmp
shlb
xor
dec
outsb
stos
dec
dec
jg
mov
sbb
cmp
les
dec
push
mov
ljmp
push
std
stos
loopne
lock
fildl
dec
xchg
into
stc
or
jne
fcmovnu
loope
bound
outsb
sub
cmp
std
fsubl
sbb
push
jb
mov
sbb
add
fwait
mov
xchg
addr16
lds
adc
imull
mov
imul
push
cs
push
and
xor
nop
xchg
push
movsl
sbbb
insb
lahf
inc
pop
adc
xchg
xchg
mov
push
arpl
or
outsl
sub
add
and
or
fisubl
cmpsl
out
pop
adc
repnz
or
sub
out
pop
subl
popa
cmp
jno
inc
cmp
repz
popl
aaa
fmul
sub
out
cwtl
sub
bound
pop
sbb
jp
out
xchg
lret
cmp
fidivrs
xchg
push
cltd
movhps
mov
int3
lret
pop
pop
or
sub
push
xorb
movsl
dec
test
loop
pop
jl
mov
push
cli
bound
cmpsl
movsb
inc
cmc
addr16
xchg
pop
dec
mov
sub
ds
rolb
or
mov
pop
xchg
popa
or
and
neg
into
loopne
mov
mov
shrl
mov
lods
fcmove
xchg
lods
push
in
test
sbb
out
jmp
xchg
jge
mov
jne
int
cltd
rorb
add
mov
adc
push
scas
cs
or
arpl
shl
sbb
sbb
jo
or
jl
jne
lret
test
daa
call
inc
sub
call
in
push
adc
bound
add
mov
or
push
push
mov
cmp
scas
cvtpi2ps
out
rclb
cli
or
add
pop
je
pop
add
ljmp
mov
adcl
cmp
loope
pop
inc
sub
sub
std
lds
adc
fxch
daa
push
lds
fimuls
xchg
add
sbb
loop
imul
and
clc
pop
pop
cmp
dec
xchg
ret
sbb
fwait
scas
adc
int3
fnsave
pop
imul
pop
sbb
mov
in
add
mov
inc
sbb
shlb
adc
inc
cmp
mov
push
fisubs
jecxz
test
and
xchg
int
xor
xchg
xchg
sub
ret
add
inc
mov
test
les
adc
sbb
aad
mulb
mov
decb
xchg
xchg
out
in
fwait
and
adc
rcrl
adc
or
pusha
cltd
adc
dec
or
inc
addr16
testb
repnz
adc
mov
mov
je
sub
push
hlt
js
pop
sbb
fldl
clc
aaa
sub
ret
js
cmpsb
roll
inc
xchg
lret
out
xchg
in
push
gs
pop
or
scas
add
mov
sahf
sbb
mov
dec
sub
add
sbb
mov
cld
aad
lcall
gs
scas
sbb
mov
sbb
inc
xor
jb
std
in
cmp
bound
fstpl
mov
scas
jbe
in
pop
adc
inc
popa
test
lock
idiv
cmp
cmc
add
lcall
adc
fwait
out
jnp
pop
imul
adc
leave
int
sarb
mov
and
and
test
pop
adc
pop
or
lret
pop
je
mov
lods
jmp
cmp
sub
movsl
jl
pop
mov
imul
jl
pushf
jmp
mov
and
sub
inc
ficoml
pop
mov
pop
mov
jno
cmpsb
stos
xor
sub
push
dec
adc
popl
cwtl
xlat
cmpsb
lret
rcrl
sub
mov
aaa
cwtl
ss
fcmovb
jl
or
scas
cmp
in
rcll
cmp
es
mov
or
jne
lret
cwtl
repz
dec
popa
adc
mov
in
push
jge
jb
setns
cwtl
outsl
cli
adc
mov
lcall
jb
daa
xchg
mov
inc
push
dec
inc
inc
ret
clc
imul
jg
sbb
fcmovnu
jg
sti
mov
pop
or
repnz
mov
pop
test
add
les
push
ficompl
rcl
xor
cli
adc
sbb
int3
push
mov
cmp
jns
mov
mov
jnp
sub
push
xlat
sub
clc
cmpsl
mov
pop
ds
fistl
dec
mov
aas
push
pop
add
mov
cli
addr16
xor
in
adc
cli
dec
mov
push
js
jl
int3
aas
push
test
loop
xchg
jg
lahf
lds
int3
popa
sbb
outsl
push
push
inc
sub
pusha
mov
cmpsl
pop
mov
jbe
sbb
stos
and
iret
sub
lods
shlb
add
in
mov
mov
mov
rorl
add
sub
jle
push
cmp
addr16
mov
push
or
sub
mov
dec
xor
mov
cli
leave
cli
jne
in
stos
inc
dec
sbb
mov
movsb
cltd
inc
mov
sub
psraw
inc
pop
insb
into
into
jge
push
mov
out
adc
push
fnop
cli
push
sbb
ret
ret
push
mov
inc
xchg
insl
inc
push
test
or
push
enter
mov
cltd
sahf
sub
outsw
jecxz
aaa
jp
jge
xchg
adcb
push
test
aam
out
xlat
and
mov
lods
fwait
in
lcall
dec
push
adc
mov
xchg
sbb
add
push
and
test
dec
jmp
adc
les
scas
outsb
lods
mov
jmp
jnp
aad
dec
pusha
sub
nop
jge
xor
inc
cli
int3
mov
jno
jecxz
out
jmp
movsb
mov
jae
aam
cmp
lcall
test
int
sub
leave
nop
psubsw
mov
addb
lods
lods
addb
fwait
sub
stos
insl
call
inc
jbe
aad
and
xor
mov
mov
push
mov
push
jle
lods
xchg
pop
mov
imul
popa
mov
dec
fidivs
pop
int
ljmp
xor
mov
lods
pushf
mov
lcall
jae
mov
push
jle
cld
test
daa
sub
mov
roll
mov
faddl
or
cli
popf
sub
xor
pop
shl
push
loop
enter
data16
or
cmp
aaa
mov
insb
test
push
out
scas
mov
xchg
test
mov
int
aam
or
inc
jmp
int3
aas
out
imul
popf
sub
aad
ljmp
cmc
hlt
fwait
cmpsb
ret
and
movsb
loop
inc
mov
shll
jecxz
jge
pop
mov
fdivl
sbb
sbb
xchg
pop
inc
jmp
ljmp
daa
jle
mov
gs
mov
inc
cltd
push
mov
or
dec
test
and
dec
iret
add
jl
aaa
jecxz
xchg
ds
mov
shll
jb
cmc
dec
inc
mov
ljmp
fbld
xchg
stc
shll
call
outsl
aaa
jns
out
push
cs
cmpsl
or
lods
test
aad
pop
imul
adc
outsb
xchg
arpl
js
mov
fistpl
iret
adc
pop
sub
ds
push
and
cmp
adcb
pusha
lock
xor
aas
mov
xor
push
int3
outsb
push
repnz
sbb
nop
xchg
inc
push
jle
and
dec
repz
mov
push
mov
adc
fimull
mov
fsubs
mov
pop
clc
and
jmp
sahf
dec
add
xlat
mov
cs
mov
adc
adc
inc
cmp
insb
mov
xor
jmp
dec
pcmpeqb
cwtl
stc
loope
push
cltd
pop
into
adc
inc
adc
movsb
icebp
test
call
push
add
sbb
out
ljmp
sbb
push
jp
pushf
loope
fs
lods
data16
push
mov
sbb
jbe
je
push
mov
inc
stos
fistps
adc
or
mov
and
xor
incl
mov
mov
add
mov
mov
aad
sub
out
xchg
into
psubusb
push
jbe
popa
or
das
out
fidivs
pop
mov
cmp
jecxz
cmp
out
test
fstpt
sbb
add
aas
sub
and
xchg
iret
out
add
or
imul
stos
sbb
dec
mov
testl
aad
into
push
stos
push
out
push
shl
lea
out
dec
jg
jmp
push
push
sbb
sub
int
xchg
jb
mov
adc
sub
adc
fs
mov
xlat
cmpsb
fisubs
and
pop
mov
adcl
mov
call
inc
enter
test
mov
inc
arpl
insb
dec
sbb
dec
inc
insl
idivl
jp
fwait
push
dec
jge
jmp
outsl
nop
test
stos
sub
imul
push
mov
ja
mov
jp
icebp
test
or
mov
addr16
scas
xor
and
jns
push
and
add
stc
pop
sbb
shll
xor
ss
sahf
sbbb
mov
pop
mov
mov
mov
xabort
xor
xor
push
shrl
push
mov
inc
sti
add
ror
dec
enter
pop
inc
xchg
or
xchg
jno
lret
fcomip
push
jl
push
xchg
or
ficompl
jecxz
sbb
push
outsb
cmp
mov
adc
mov
lret
fbld
jl
pop
mov
into
lcall
xchg
bound
push
mov
push
sbb
mov
mov
dec
and
mov
sbb
pop
inc
test
ret
fcomps
stos
mov
rolb
mov
shlb
or
or
lgs
dec
or
push
shlb
inc
cmp
cmp
in
and
push
out
inc
movsl
pop
jb
stos
clc
xchg
loop
sbb
jb
sub
lds
aaa
lret
repz
add
addl
call
je
dec
data16
in
out
dec
mov
mov
xchg
pop
mov
inc
ljmp
ja
fstl
xor
mov
push
and
dec
adc
mov
sub
sbb
sbb
mov
push
xchg
imul
and
out
jg
neg
mov
push
inc
in
shlb
sti
mov
cmpsl
inc
repnz
ror
pusha
mov
push
sbb
push
mov
jecxz
test
imulb
aad
mov
fcoms
add
xchg
xorl
add
mov
jp
in
xor
xor
sarb
push
enter
inc
inc
inc
es
dec
add
mov
in
fildl
fdivp
mov
int
cmpsb
stos
jle
imul
inc
std
xchg
je
out
stos
repz
stc
pop
sub
fs
pop
jmp
inc
loopne
cmpsb
sbb
addr16
prefetchw
or
cmp
xor
aaa
mov
inc
xchg
pop
and
and
mov
mov
cld
jg
xchg
inc
shrb
sub
cld
shl
notb
mov
hlt
pop
and
pop
add
mov
xor
jecxz
shlb
cmp
jbe
shlb
popf
sbb
ds
sarl
push
adc
jle
add
dec
in
mov
into
pop
ljmp
xchg
movsb
sbb
xchg
dec
out
or
int
icebp
xor
jae
push
xchg
jg
mov
shrl
test
xor
dec
jne
add
sub
enter
mov
imul
push
pop
rolb
pop
mov
jb
dec
sahf
add
dec
pop
or
push
xor
nop
push
and
fcoms
add
insb
int
std
negb
outsl
repnz
pop
pop
shlb
cld
int
andb
mov
sub
movsb
rolb
mov
fs
in
jo
dec
sbb
push
aam
out
divl
sub
and
lods
loop
mov
adc
sbb
sub
add
lahf
mov
frstor
sbbl
repz
cli
xchg
subb
ret
or
int3
jb
test
lret
inc
add
push
pop
pop
dec
jl
fidivrl
ror
xchg
hlt
ret
lods
cld
fidivl
jg
sbb
xchg
xchg
xchg
adc
jnp
adc
insl
pop
in
cmpsl
jg
sbb
inc
jno
xchg
jecxz
ds
or
cli
mov
aam
sbb
loopne
and
cmpsl
stc
cmp
iret
into
aam
js
mov
lods
je
in
adc
push
pop
loope
lret
loop
and
fistps
lods
add
and
mov
roll
pop
sarl
jmp
mov
test
mov
stc
aam
lret
dec
aam
push
dec
jecxz
lock
and
in
and
jnp
dec
js
push
loope
dec
stc
push
sbb
out
in
push
bound
sti
out
mov
push
movsb
stos
dec
cmpb
mov
pop
jb
dec
sti
jnp
sub
push
arpl
shld
pop
cmp
sub
cmp
sbb
cwtl
push
and
cld
and
rorb
aaa
std
fsubrl
fcompl
xchg
mov
lods
pop
icebp
repnz
sbb
adc
sub
adc
in
lock
scas
out
stc
and
mov
aad
mov
or
sub
xlat
pop
popl
mov
ljmp
xchg
movsl
fcoml
xor
mov
dec
and
dec
andb
jl
fsubr
xchg
insb
dec
bound
test
push
iret
xchg
lods
mov
shll
or
insl
pop
xchg
clc
out
add
sbb
mov
in
pop
je
ljmp
xchg
jne
leave
xor
adc
adc
or
mov
lea
cld
xchg
hlt
loop
inc
ljmp
pop
xor
mov
sysret
mov
mov
pop
cmc
pop
mov
je
adc
push
add
mov
in
sub
mov
xchg
ja
dec
dec
loope
call
minps
movq
xchg
inc
fwait
pop
cmp
test
push
fs
push
sub
mov
add
roll
mov
push
mov
adc
stc
arpl
aaa
jo
inc
ss
ret
nop
pop
push
out
lods
inc
and
movsl
mov
iret
js
push
sub
es
cmp
push
xor
scas
jo
cmp
jmp
add
stos
xlat
push
in
mov
push
in
pop
mov
mov
scas
sahf
clc
jo
pop
and
inc
mov
hlt
int3
inc
rolb
push
gs
movsb
and
dec
fisubrs
and
pop
out
das
and
repz
mov
insl
fistpll
outsl
icebp
and
cmpsb
fnstsw
push
sti
add
mov
daa
out
or
aad
sbb
pushf
test
cmp
nop
jno
xchg
pop
je
jo
mov
or
xchg
loopne
push
scas
ret
jg
fs
adc
inc
pusha
cmp
inc
pusha
int3
loop
inc
iret
movsl
sti
mov
cld
sub
inc
aaa
test
pop
mov
pushf
loopne
add
dec
xlat
push
jne
repnz
scas
cmc
mov
fs
and
xchg
xlat
adcl
fwait
shll
pop
cmc
aaa
mov
ljmp
insl
mov
scas
or
out
pop
int
movsb
cld
es
push
sbbl
push
sbb
ret
adc
xor
sub
cmpsl
xor
ljmp
imul
les
mov
repz
jmp
sub
pushf
sbb
pop
jne
push
sbb
ret
mov
mov
add
out
xchg
xor
inc
in
pop
repnz
fcompl
out
mov
lock
dec
or
ret
popa
pop
cli
out
push
gs
shrl
outsl
lahf
and
pop
jmp
sti
outsl
sqrtps
xor
ja
push
fisttps
leave
dec
cmpsl
mov
int3
push
fisttps
fldcw
icebp
xlat
adc
jg
cmc
push
jns
insb
js
in
xor
je
fsubrs
sti
push
movsl
sti
aam
mov
cmp
movsb
pusha
cmp
inc
je
mov
xchg
mov
test
fdivrs
mov
and
test
sahf
mov
or
dec
rcrb
aas
and
cltd
stos
adc
inc
dec
push
push
and
push
add
ds
fsubl
shlb
mov
adc
jb
adc
out
sub
jbe
notl
xchg
jg
mov
mov
rcrb
cmovle
inc
dec
xor
sbb
lods
jno
in
cs
iret
ret
jmp
inc
push
das
scas
dec
enter
sbb
jne
ljmp
nop
inc
out
cmp
fists
hlt
addr16
xor
call
push
enter
mov
fcoml
fs
rclb
mov
jg
mov
mov
xchg
mov
push
outsl
je
dec
test
add
mull
push
sub
stos
mov
or
add
mov
inc
insb
enter
fwait
in
cmc
jnp
mov
fsubrl
and
inc
loopne
hlt
xchg
jmp
enter
aad
test
xlat
xchg
scas
push
leave
mov
pop
inc
xchg
jp
jge
test
cwtl
xor
sub
xchg
out
and
pop
arpl
sub
lods
clc
cmp
lods
cli
rolb
jle
iret
loope
loope
mov
js
cmp
popa
in
jno
out
xchg
popf
icebp
popa
add
sbb
xchg
pop
icebp
fists
jmp
insb
adc
mov
jae
jne
lcall
jns
or
inc
pop
dec
cmove
out
or
mov
mov
es
mov
dec
fs
or
and
bt
pop
push
andb
adc
adc
mov
add
aad
stos
popa
jecxz
nop
repz
gs
nop
sub
xor
dec
xor
mov
mov
adc
ss
pop
std
add
xorb
adc
cmp
mov
test
xor
mov
add
ss
rorl
imul
pop
inc
lock
dec
push
test
cmp
in
mov
push
push
rolb
imul
fwait
dec
mov
es
getsec
or
mov
jb
inc
ja
push
fstps
sbb
mov
int
outsl
inc
mov
push
call
insl
fistpll
xchg
mov
inc
push
or
sub
mov
jle
pop
adc
jb
lods
in
in
int3
add
xchg
addr16
ja
lea
dec
mov
incl
sub
and
mov
xor
sub
ret
sbb
cmp
clc
jmp
push
pop
fists
jb
jmp
mov
sarl
sub
inc
in
push
push
inc
sbb
jbe
xchg
jbe
sub
and
xor
je
add
out
ss
mov
pop
pop
or
aaa
insb
jnp
inc
shrb
outsl
dec
aas
mov
mov
jmp
and
dec
sbb
xchg
adc
mov
sbb
sub
mov
ss
imul
nop
inc
stos
lods
sbb
mov
mov
data16
insb
aas
pop
push
mov
and
mov
mov
pop
sti
iret
push
iret
ds
pop
mov
inc
insb
add
xor
cltd
xchg
lods
popf
addr16
inc
test
push
mov
rcrb
cmp
ret
leave
loopne
sub
fwait
pop
xor
sbb
testl
and
in
cmp
fdiv
pop
mov
cmp
rcrl
or
sub
mov
pop
cltd
xor
lcall
jle
cmp
xor
sub
and
testb
sbb
outsl
mov
or
idivb
push
mov
push
insl
xchg
movsb
add
mov
jno
scas
rcrl
mov
mov
aaa
push
mov
mov
jno
push
xchg
es
fbld
sbb
mov
and
ljmp
jns
fstl
sbb
testl
rorl
nop
cmpsl
loope
adc
mov
adc
jge
push
ficoms
shrl
rorl
es
das
mov
lret
mov
xchg
adc
cmp
or
cltd
mov
mov
mov
ficoms
and
rorl
adc
inc
inc
inc
jp
mov
mov
adc
or
mov
cmpsl
mov
stc
dec
inc
inc
leave
adc
add
jmp
xor
cmp
in
dec
mov
loop
jbe
cmp
test
xchg
and
sbb
add
xor
fisubl
ret
pop
int
repz
hlt
lods
fdivrl
inc
movsl
ja
mov
mov
cmp
nop
and
add
scas
sub
pop
enter
fadd
mov
shlb
add
inc
hlt
pop
lea
cli
and
sbb
mov
out
insl
outsl
sbb
dec
mov
cltd
mov
scas
and
das
idivl
xchg
xchg
or
mov
mov
lcall
setle
mov
in
mov
scas
xor
cltd
std
mov
fldenv
enter
xor
daa
call
sub
push
enter
xchg
imul
sub
cmp
arpl
sbb
xor
and
loopne
je
fdivrl
in
pop
adc
inc
push
dec
push
jne
bound
mov
dec
sub
bound
inc
ss
xchg
push
xor
cmp
shrl
xor
pop
push
and
dec
jns
mov
mov
pusha
stos
je
lds
adc
push
adc
out
cltd
les
cwtl
cmpl
clc
test
mov
loop
or
test
sub
fmulp
add
jmp
and
xchg
stos
nop
mov
aaa
adc
fwait
dec
stc
xlat
lods
dec
xchg
mov
add
jns
push
out
jl
mov
ret
xchg
jle
in
jb
ljmp
negb
sbb
dec
mov
xor
xchg
lods
hlt
xor
mov
cmc
xorl
mov
adc
push
inc
push
ret
fld
jnp
nop
mov
and
jg
bound
dec
mov
jge
sub
jmp
les
sbb
mov
adc
mov
pop
add
mov
push
iret
push
or
push
cmpsl
or
stos
popf
inc
notb
mov
daa
cmp
movsb
mov
dec
loop
adc
sub
sub
sahf
add
xor
pop
sbb
xchg
jnp
es
cmp
out
pop
or
mov
mov
jo
js
repnz
lods
lea
pushf
xor
aad
sbb
cmc
fnstcw
mov
mov
jo
lret
jmp
inc
inc
inc
dec
lret
cld
fnstenv
sub
mov
inc
lret
jb
mov
leave
fsubr
rcr
movsl
xchg
ret
mov
and
sub
movsb
mov
imul
jl
pop
inc
add
and
sub
fs
sub
mov
rcr
popa
push
or
pop
lret
wbinvd
mov
xchg
sbbl
mov
xchg
add
lods
mov
push
lods
jge
popf
int
pop
fcomi
sub
out
xlat
sbb
xchg
sahf
add
and
cmc
and
repnz
mov
and
or
pop
mov
xchg
dec
xor
pop
sub
test
jae
jno
or
push
pop
push
sub
ret
sbb
inc
imul
adc
aas
mov
sbb
outsl
outsl
pushf
sub
sbb
mov
cmp
enter
ret
cmpsl
add
or
out
and
mov
loop
pop
mov
mov
sbb
inc
sahf
fcoml
lret
arpl
xchg
rcll
idivl
xchg
mov
std
push
jmp
add
ret
test
jno
popa
or
xor
and
cmp
lock
cmpsl
push
imul
jmp
push
imul
cli
stos
or
mov
cmp
xor
xchg
push
sbb
jns
cmpsb
push
cwtl
cmpsl
pop
adc
sbb
lds
test
mov
stc
cmp
sub
lret
int3
or
filds
adc
xchg
mov
pop
imul
call
fisttpl
dec
jb
out
int3
or
stc
cmpsl
jmp
scas
pushf
sbb
outsb
pop
sub
ja
insl
pop
aam
xlat
push
pop
cmp
cmpsl
xchg
test
xchg
fstpt
mov
subl
mov
std
sub
repz
push
cmc
and
jne
movsl
lds
fistps
in
cmp
cmc
adc
jl
push
lods
in
xchg
arpl
xchg
pop
out
and
dec
jp
mov
mov
popf
mov
shlb
mov
inc
out
xor
add
xchg
pop
xor
inc
in
pop
xor
pushf
out
pop
out
sbb
iret
movsb
mov
clc
nop
xchg
divl
adc
arpl
cmpb
outsb
sub
repz
jl
aaa
cmp
jns
lods
incl
scas
adc
dec
fs
xor
xchg
add
lods
jmp
and
add
jg
push
push
std
xchg
mov
test
and
xchg
mov
lahf
mov
inc
daa
data16
shrb
inc
mov
into
sub
mov
fbstp
gs
test
add
mov
pop
xor
ds
and
les
xor
sub
ja
rorb
sbb
push
stos
inc
pusha
jle
fistpll
and
xor
lods
in
adc
cmp
shll
cmp
pop
jecxz
dec
jmp
jecxz
fucom
daa
testb
xchg
dec
xchg
fcomps
mov
jl
sub
out
add
leave
jp
out
out
mov
sub
mov
clc
mul
test
cmp
loopne
je
out
add
mov
cmc
les
pop
ror
int
cld
imulb
jns
cmp
popa
in
mov
add
ljmp
xor
inc
stos
stos
sub
in
lods
inc
mov
xor
push
cmpsb
hlt
adc
add
inc
bound
cltd
or
std
daa
stc
cmp
movsl
out
stos
xor
lock
xorb
fidivrs
rcrl
pop
cmovb
fistl
mov
and
jg
movsb
mov
push
cmp
fwait
xchg
int
aam
in
push
in
mov
mul
cmp
push
int3
mov
testb
popa
stos
imul
test
lods
dec
jge
shrl
mov
scas
xchg
sahf
outsl
mov
push
and
cmp
ficompl
xlat
lods
xor
dec
xchg
pop
cmp
loopne
and
in
cmp
or
push
in
popf
aas
scas
nop
mov
inc
mov
mov
dec
cmp
fldenv
rcr
adcl
fisttps
pop
test
inc
jo
xor
sub
cmp
xchg
push
test
arpl
sub
dec
xlat
xchg
mov
cmp
and
insb
pop
pop
sbb
dec
jnp
rorb
insl
leave
and
filds
xchg
pop
inc
sbb
inc
movl
sbb
gs
sarb
lea
fiaddl
arpl
lods
cmp
ret
scas
rclb
jp
aas
push
clc
lret
jnp
mov
shlb
in
scas
pop
mov
sahf
mov
test
adc
push
jne
cmp
fiaddl
cwtl
leave
adc
adc
mov
xlat
jnp
aad
and
push
and
mov
nop
scas
inc
cmc
inc
lea
mov
popf
fadds
loope
test
mov
adc
lock
dec
and
cmpsb
ds
js
sbb
fstl
pop
push
mov
push
je
jle
rcrb
cwtl
scas
inc
out
inc
pop
aam
mov
dec
insb
push
rcrl
mov
cmp
mov
cltd
pop
nop
pop
mov
mov
and
mov
nop
pop
pushf
inc
negb
dec
bound
jns
pop
xor
jb
sub
mov
sahf
pop
dec
push
adc
mov
bound
sub
xchg
popl
push
arpl
out
adc
cmp
popf
imul
push
ljmp
ret
jle
aaa
test
jmp
mov
pop
dec
add
test
lock
divl
push
mov
scas
outsb
ds
repz
test
mov
int
sub
shlb
mov
jb
pop
fcmovnb
xchg
push
leave
gs
or
fsubl
insb
mov
shll
movsb
data16
pusha
cmp
arpl
sub
lds
cmp
sub
outsb
lcall
adcl
insl
ffreep
xor
push
test
inc
lds
and
jecxz
hlt
sub
sbb
push
dec
or
arpl
pop
leave
mov
aam
mov
ds
sub
aad
aad
cmp
pop
call
or
mov
xchg
sbb
inc
fcmovnu
inc
ja
mov
pop
jbe
shl
mov
ljmp
mov
stc
jp
xorb
xchg
or
int
ret
and
repnz
dec
pop
into
sbb
sbbl
imul
jp
push
fwait
rol
mov
mov
sub
mov
shrb
or
and
pop
popa
pop
xchg
cli
push
fst
adc
inc
cld
jnp
push
lret
mov
mov
lcall
jno
leave
mov
mov
decb
mov
jne
outsl
loop
or
test
pop
dec
inc
add
add
dec
or
pop
lretw
jg
sub
outsl
jno
cmp
int3
stos
jb
inc
bound
cmp
inc
lret
lock
mov
xchg
add
mov
repz
in
aam
test
cwtl
xchg
push
iret
pop
xor
sub
sbb
mov
aad
popl
adcl
jnp
lret
and
inc
outsb
testb
jbe
pop
xchg
cmpsb
inc
xchg
jle
fcoms
jbe
sti
movsl
mov
stc
fdivl
scas
mov
testl
stos
popa
push
jns
shl
add
les
sbb
es
cmpsb
adc
lret
or
fsubr
or
add
push
push
xlat
movsb
add
and
repz
inc
dec
ds
out
test
lret
in
lret
add
jmp
jne
mov
pop
jnp
pop
jecxz
dec
shll
cmc
and
xchg
pop
repz
ret
aad
addb
push
add
sbb
ud0
mov
gs
cld
popa
sti
dec
sbb
mov
push
sbb
test
xchg
stos
ret
pushf
xor
jne
xchg
cmc
fildll
mov
out
xchg
jecxz
mov
shll
cmc
xchg
pop
stos
iret
lret
pop
out
outsb
push
enter
gs
cld
jmp
or
push
add
fildll
adc
inc
inc
icebp
or
outsl
in
fwait
ds
mov
shl
dec
push
dec
fcomps
jb
jnp
negl
push
imul
popf
ljmp
cmpsl
mov
hlt
into
add
fadd
xchg
cs
aas
mov
int
fstps
jge
pop
popa
js
cmp
add
nop
xor
mov
orps
popf
pop
dec
popa
inc
pop
test
pop
loop
inc
mov
mov
call
jecxz
xchg
fiadds
frstor
inc
mov
rcll
aaa
lret
js
sub
pop
pop
repz
pushf
sbb
ljmp
push
pushf
movsl
cmp
pop
lea
ja
movsb
cmp
scas
cwtl
fsubr
mov
xchg
adc
aas
cmp
shr
cmp
into
xchg
pushf
jle
call
xor
aam
ljmp
test
sub
hlt
fimuls
push
or
mov
or
popf
sbb
rclb
fwait
and
in
mov
sbb
xorb
xchg
popf
sbb
add
stc
or
sbb
adc
dec
add
mov
adc
icebp
cmp
arpl
xor
addr16
xlat
jle
test
dec
aas
data16
dec
scas
ss
pusha
ljmp
mov
out
lds
cwtl
clc
cs
mov
fsubs
push
mov
xchg
mov
and
incl
je
mov
inc
lea
and
and
pusha
dec
nop
inc
and
int3
aam
and
sbb
mov
je
xor
jbe
idiv
mov
push
jg
pop
mov
and
adc
or
call
hlt
jl
push
xchg
jl
and
sbb
shll
xchg
aad
ljmp
out
and
xchg
fsubrl
push
jmp
and
jp
fucomi
push
stos
xor
sbb
int
push
add
push
push
and
clc
roll
sbb
test
or
aam
into
sub
and
test
xlat
aam
xor
sarb
lcall
shlb
scas
push
addr16
jne
jg
sbb
int
fidivl
and
mov
jne
jmp
jnp
push
enter
aaa
sub
je
jo
inc
mov
inc
push
dec
les
adc
push
push
or
ljmp
std
stc
fsubl
push
jmp
std
pushf
into
mov
jns
mov
dec
subb
mov
inc
lret
jge
dec
or
mov
rorb
je
cltd
adc
push
mov
js
pop
mov
dec
inc
xor
test
and
test
sub
aam
jbe
in
sbb
lods
psadbw
lods
repnz
inc
mov
popfw
dec
add
mov
sarl
mov
pusha
outsl
stos
jl
mov
loop
repnz
bt
stc
loop
mov
fld
in
xchg
sbb
dec
out
addb
test
outsl
enter
xchg
xor
jns
mov
xchg
pop
fcmovnb
mov
cmp
loopne
mov
push
mov
cmp
fistl
cmp
sub
lds
jbe
rolb
shrb
jbe
xchg
aad
mov
jl
lret
mov
bound
shll
pop
imul
and
shrb
cmpsl
cmp
lret
sbb
push
jae
les
lret
mov
jle
imul
push
xor
sbb
and
lock
stos
push
in
into
repz
cmpsl
jle
sub
xchg
mov
ret
test
cs
push
pusha
lock
sub
rcrb
in
inc
rep
repnz
cmp
movl
mov
add
mov
push
mov
inc
mov
sbb
insl
mov
jg
add
jecxz
cmp
mov
or
stos
cli
flds
push
mov
nop
popf
sbb
enter
testb
nop
pop
imul
hlt
pop
imul
mov
push
test
fisubrl
fs
xchg
aas
mov
sbb
sbb
pushf
in
inc
lods
sub
je
add
icebp
ljmp
jae
mov
fldenv
rsm
xchg
fists
call
xor
lea
scas
pop
inc
xor
enter
ret
mov
insl
jae
ds
in
adc
adc
pop
and
mov
cmpsb
loopne
push
pop
shrb
outsb
pop
cmp
pop
cmp
orb
add
cmp
adc
fldcw
insb
xchg
sbb
add
in
dec
mov
dec
les
sbb
jp
dec
xchg
data16
mov
xchg
insl
add
fcmovnbe
sbb
adc
adc
xchg
mov
and
mov
cltd
dec
xlat
push
mov
mov
les
xchg
repz
stos
lret
aam
lret
add
mov
mov
rorl
sbb
jno
inc
push
lds
out
cld
lods
daa
shrl
mov
inc
or
cmpsl
mov
loope
movsb
xchg
mov
sbb
rclb
sbb
jae,pt
lea
pop
ss
in
adc
inc
mov
adc
jg
pusha
inc
in
addr16
mov
inc
lock
xchg
and
sub
xchg
repz
dec
dec
popf
dec
jl
sub
lds
mov
mov
stos
xchg
mov
ljmp
shrl
cld
or
mov
adc
jnp
and
inc
sbb
xor
lock
mov
int
data16
dec
add
push
repnz
je
jle
pop
mov
mov
push
cmpb
dec
jnp
cmc
sbb
dec
push
cld
pushl
dec
mov
mov
jecxz
mov
hlt
xchg
aad
jle
out
or
hlt
cltd
or
push
cmpps
data16
jns
or
iret
clc
adc
mov
xchg
bound
popa
lret
cmp
jb
jae
adc
mov
into
movsl
cld
scas
xchg
std
out
cmp
mov
movsl
in
daa
fistl
or
test
xchg
movsb
fcomps
xchg
ss
and
shrb
das
cmp
shrb
enter
or
arpl
xchg
mov
ss
gs
pusha
int
jnp
mov
subl
add
test
and
lahf
push
mov
push
sub
imul
dec
int
inc
test
jl
cmp
imul
xchg
mov
sub
cmp
out
aad
out
mov
sub
cmp
push
aas
mov
xchg
mov
out
mov
dec
inc
sbb
das
dec
leave
mov
cmp
movsb
bound
test
mov
ja
shrl
push
sub
cmp
push
dec
imul
add
or
or
and
aas
xchg
fcmovu
mov
leave
test
fisttps
jg
andb
xchg
enter
mov
in
pop
sub
cld
mov
jge
dec
push
jle
xchg
xor
roll
adc
mov
testb
lahf
jle
inc
sub
icebp
or
das
pop
pop
and
add
stos
cmpl
jmp
dec
popf
vunpcklps
sbb
loope
inc
imul
and
adc
xor
es
lcall
jp
add
test
call
inc
cmpl
popf
inc
loop
fwait
sub
arpl
add
adc
inc
xor
sub
movsl
rol
or
dec
sbb
mov
cltd
rcr
fsubr
adc
xorl
xor
xor
in
ss
aaa
and
add
cs
mov
bound
xchg
ds
fucomi
data16
add
xor
adc
shr
pop
inc
mov
testl
mov
stos
es
inc
cmpsb
jnp
add
lret
sub
icebp
or
mov
sub
aad
lcall
or
cmpsb
push
sub
es
jl
xchg
stc
es
cli
push
and
fucom
xchg
lcall
cltd
lods
or
jo
pop
outsl
xor
mov
aam
into
aam
lcall
push
and
rol
int
mov
sbb
cmpl
push
out
insb
push
and
push
inc
mov
and
out
bound
and
cltd
out
call
out
out
mov
insl
outsb
shl
push
loop
push
cltd
mov
mov
lret
shr
dec
adc
pop
mov
pop
xor
sbb
fistpll
inc
push
pusha
scas
pop
pop
or
rep
lcall
aad
fidivs
add
jns
movsb
fisttpll
sub
outsl
inc
in
shrb
divl
xchg
fistpll
mov
lea
add
pop
cmpsb
iret
cmp
cmp
data16
jo
push
clc
dec
scas
dec
lret
jge
dec
fucomp
push
xor
inc
lock
insb
or
mov
les
mov
sti
orb
push
ds
cwtl
punpckhbw
adc
jb
ljmp
ret
shlb
test
insl
fidivs
fadds
ljmp
lahf
and
xchg
mov
mov
aam
push
or
pushf
je
xchg
sbb
cs
mov
push
bound
pop
xchg
mov
jno
lds
cmpsl
dec
xchg
jo
sbb
xchg
jl
dec
dec
inc
pop
sub
jecxz
adc
and
add
daa
jecxz
psrld
decl
and
or
lods
leave
call
fwait
sub
xor
and
mov
aad
clc
jns
inc
cltd
stos
idiv
xchg
sahf
sub
xchg
mov
jno
dec
and
std
xchg
cld
dec
cmp
sbb
jo
adc
xchg
dec
dec
nop
pop
push
jmp
js
icebp
or
fwait
mov
adc
ds
and
leave
add
sbb
xchg
fnstcw
in
pop
rorl
outsl
jmp
out
pop
stos
pop
or
int
dec
addl
not
push
pop
loopne
testl
lods
orb
mov
mov
fdivrs
dec
xchg
fimull
imul
fwait
ds
aad
inc
pop
dec
mov
repnz
fdivl
pop
dec
je
rolb
cs
std
call
mov
test
or
xor
xor
push
mov
add
pop
xchg
or
push
inc
adc
mov
out
mov
cmc
cmp
pop
xor
ror
push
inc
mov
mov
not
adc
enter
or
mov
mov
xor
stos
shll
std
xor
mov
jecxz
dec
lcall
mov
out
outsl
add
mov
pushf
bound
leave
cmpsb
sbb
cmp
test
pop
jne
stc
sub
xor
push
test
es
imul
pop
ljmp
mov
outsl
adc
ljmp
dec
shr
addr16
insb
movsb
and
mov
out
call
in
enter
mov
xchg
push
cmpsl
sub
das
mov
mov
aad
cmpl
xchg
lcall
outsl
iret
ja
js
ficompl
push
icebp
sub
fisubs
lods
cmp
subb
adc
into
inc
imul
mov
push
cmpsb
jle
push
faddl
aaa
and
mov
inc
xor
jbe
jecxz
mov
pusha
xchg
push
cli
cmp
inc
test
mov
scas
jae
lret
mov
fisubs
std
pop
pop
inc
sbb
jb
jb
xor
mov
cmp
and
sub
inc
cli
pushf
mov
std
andl
or
lret
test
call
mov
mov
aaa
jmp
mov
jns
imull
xor
add
insl
jg
mov
pushf
and
lods
jmp
fwait
cmpl
dec
sbb
jns
inc
imul
out
mov
aad
sbb
addr16
hlt
pop
into
add
inc
mov
scas
sbb
xor
or
adc
fisttpll
xchg
lret
scas
mov
movsl
cmp
jo
xor
and
sbb
jl
addr16
push
bound
scas
cs
lods
ljmp
movsl
pushf
ret
cmpb
adc
addr16
adc
icebp
add
pop
dec
ret
and
pop
in
sub
movsb
adc
mov
outsl
mov
fwait
rcr
and
jns
xor
ja
fiaddl
fidivl
push
fs
ffreep
xor
stos
cmpsl
add
and
fwait
fwait
rcll
or
jno
in
scas
mov
and
aad
mov
lret
cltd
dec
sbb
push
jg
push
mov
jnp,pt
nop
and
fistpll
movsb
or
inc
mov
and
or
inc
xor
xchg
mov
std
fidivs
or
adc
test
popf
push
adc
js
push
jge
lret
inc
gs
or
xchg
fnsave
out
addb
shlb
mov
cli
dec
pop
jo
xor
xchg
mov
and
or
fbld
xchg
les
cli
nop
add
jmp
push
sbb
testl
hlt
out
movsb
xchg
sub
inc
or
arpl
jg
pop
insl
in
cwtl
push
add
inc
imul
cmpsl
mov
addb
jg
mov
mov
jg
out
repz
mov
imul
xchg
sbb
or
mov
test
mov
shrb
mov
cmpsb
pop
mov
add
mov
mov
xor
sbb
jno
pop
and
movsl
xchg
gs
fbld
sub
jae
shrl
or
dec
jb
or
xorb
xchg
push
fld
sub
push
dec
pop
push
xchg
loop
cmp
jmp
movb
test
fs
dec
mov
mov
xchg
xchg
jno
cli
lds
out
pop
mov
das
push
xor
aam
mov
icebp
int
jnp
jbe
iret
cltd
pushf
and
pusha
mov
and
bound
cmp
mov
fsubp
fwait
xchg
sbb
sub
pop
pop
sahf
pop
xor
fmul
dec
mov
or
and
arpl
arpl
jnp
mov
icebp
pop
out
xor
lock
mov
arpl
and
in
loop
xor
imul
fistpll
iret
loopne
out
lock
pop
dec
pop
fisttpl
test
inc
sub
dec
push
dec
shrl
xchg
lock
mov
push
add
xchg
mov
out
je
inc
ss
dec
cmp
icebp
mov
xchg
dec
into
push
dec
into
or
in
mov
pusha
dec
sar
dec
cli
or
movsb
bound
lret
xchg
mov
in
dec
andb
sbb
pop
or
xor
lahf
inc
scas
lods
cltd
mov
xlat
jb
jno
and
cltd
xchg
dec
movsl
iret
pushf
xchg
pop
mov
dec
xor
push
push
pop
or
cmpsb
add
mov
pop
mov
loope
dec
je
mov
test
lret
popf
xor
clc
insb
xchg
adc
mov
jo
mov
push
inc
lcall
cs
xchg
cmp
or
mov
fwait
push
data16
mov
xchg
sub
repnz
lea
mov
mov
shll
mov
or
out
inc
stos
xor
or
lahf
into
adc
lods
es
mov
fstpt
push
out
cmp
ficoml
and
iret
pop
mov
out
out
dec
repnz
xor
lret
gs
mov
add
loop
data16
outsb
and
and
mov
popa
jecxz
fldl
adc
repnz
push
xor
popl
fcmovnbe
outsl
xor
jns
jae
pop
outsl
xor
push
dec
push
leave
jle
xchg
xor
subb
out
mov
adc
xlat
push
ss
adc
test
add
add
bound
xchg
mov
push
nop
rcrl
xor
inc
sub
shrl
mov
psraw
jmp
int3
fidivs
pop
imul
push
loop
test
stos
mov
loop
inc
pop
imul
sahf
adcb
pop
loope
mov
pop
push
in
call
or
dec
outsl
lret
pop
cmpsl
sbbb
mov
fdiv
or
sub
xchg
ds
or
lock
jmp
stos
pushf
leave
pusha
xor
nop
mov
scas
ljmp
sbb
and
les
popl
jmp
rclb
jg
mov
bound
add
inc
popa
test
pusha
pmaxsw
ljmp
lcall
xor
or
pop
cs
les
add
sbb
jo
lahf
xor
cmp
jecxz
ret
adc
test
jge
int
mov
cmp
dec
adc
call
dec
lahf
push
dec
ja
sub
sub
dec
cltd
or
jge
insl
push
xchg
mov
dec
mov
mov
xchg
cmp
pop
rorb
cmc
cmp
xchg
nop
inc
add
fsubrs
jae
jmp
orl
jb
shrl
xchg
cmp
loopne
adc
mov
mov
test
mov
adc
xorb
jno
negl
mov
sarl
clc
pop
or
inc
pop
pop
ljmp
cld
bound
in
je
hlt
jp
mov
xchg
sbb
xchg
push
adc
inc
pushf
gs
pop
lret
pop
sbb
rcll
dec
lea
dec
inc
add
adc
movsl
add
repz
pusha
mov
out
je
fstpt
mov
and
jns
or
aaa
mov
bound
lret
pop
mov
test
loopne
pop
ror
add
pop
leave
movsl
lahf
push
push
jge
movsb
scas
pusha
fmuls
mov
mov
fcmove
pushf
loope
dec
mov
xchg
mov
xor
xchg
dec
mov
lahf
push
push
cli
in
mov
push
and
pop
outsb
test
xchg
nop
fldt
xor
imul
sti
cs
adc
aad
sbb
stos
dec
fdivrs
inc
test
mov
jns
pop
xor
jb
or
mulb
gs
inc
jno
dec
call
in
test
lret
cwtl
clc
setb
std
fs
push
sub
arpl
ja
lods
xchg
mov
dec
cmp
add
int
ret
lea
aaa
jecxz
adc
xor
jecxz
push
jnp
scas
xchg
and
fidivrl
lods
std
pop
mov
adc
cmp
sar
in
insl
or
mov
out
adc
jp
rcrl
cvtps2pd
in
sbb
divl
sub
and
mov
cmc
mov
addr16
movsl
rcl
inc
nop
push
lret
xor
aaa
fisttpll
lea
mov
mov
jno
rclb
push
mov
and
test
jo
mov
ficoml
stc
mov
mov
rorb
cmp
int3
fwait
xor
mov
gs
mov
arpl
clc
xchg
xor
lret
push
pop
mov
jge
outsb
js
mov
lret
es
leave
dec
std
sub
pusha
cmp
je
add
push
mov
mov
mov
loope
popf
sbb
cmp
shr
pop
test
xor
aam
in
lea
and
mov
dec
push
ret
ret
and
push
jae
divb
rorb
dec
sbb
je
inc
mov
es
push
and
cltd
test
mov
pop
mov
add
test
je
adc
iret
jo
into
add
inc
mov
pusha
push
mov
scas
adc
or
add
test
filds
mov
sub
and
xor
bound
push
dec
and
inc
cmp
pop
into
dec
cld
sbb
sub
jmp
cmovg
popf
jbe
shrl
lea
cmpsl
aad
mov
pop
pop
notl
pop
mov
lret
cmp
inc
aad
test
xchg
sub
out
frstor
inc
sbb
repnz
sbb
into
into
xor
push
cltd
out
sbb
jle
dec
mov
xor
cmp
mov
inc
fildl
xor
movsb
ljmp
pop
sub
pop
inc
add
xchg
add
adc
mov
inc
xchg
imull
mov
or
popa
or
dec
pop
and
loope
or
pusha
or
test
push
push
sub
xchg
sti
push
dec
scas
sbb
cmp
adc
jae
xchg
out
jle
adc
xchg
xchg
imul
sbb
jns
aam
fdivl
push
out
inc
movsb
popf
add
sarl
pop
jl
mov
fidivs
mov
dec
lcall
test
pusha
mov
and
xor
or
lods
insb
xchg
cs
cmpsb
inc
loopne
roll
push
std
hlt
cmp
sub
mov
sbb
fstl
pop
push
fdivl
cmp
sti
mov
clc
pop
xchg
fadds
jo
hlt
inc
push
pop
sbb
mov
insb
push
daa
and
adc
mov
dec
test
cmp
in
sbb
rcl
xlat
lock
adc
sbb
es
cmp
pop
popf
push
pop
inc
jns
hlt
dec
fiaddl
cmpl
std
loopne
jp
mov
sti
rorb
and
inc
add
pusha
inc
les
in
repnz
cmp
jge
cli
sarb
sub
lcall
cld
mov
adc
xor
xchg
in
fisttpl
sbb
inc
sbb
inc
dec
call
lahf
push
mov
mov
sbb
push
mov
es
adc
pop
dec
setbe
mov
mov
popa
add
xor
or
rolb
test
inc
sub
add
jno
xchg
xchg
or
sub
rcrb
test
sub
test
mov
sbb
fs
les
mov
sub
inc
mov
mov
mulb
imul
fcmovbe
jb
roll
cmp
add
cwtl
jmp
or
jmp
out
mov
insb
fadds
nop
int
aad
es
clc
push
test
testb
xchg
mov
icebp
mov
insl
or
in
or
add
std
jae
les
cmpsl
addr16
ret
inc
movsl
fsub
mov
dec
pusha
jnp
jmp
int
jge
jmp
ja
aam
jg
in
arpl
popf
or
push
cmp
push
insl
divb
and
sbb
pop
sbb
jl
jecxz
les
pop
pop
movsb
inc
fucomp
sti
push
and
stos
jp
jmp
adc
mov
mov
sti
xor
or
xchg
and
addr16
aam
aam
int
ss
jl
in
cmp
lods
push
lcall
dec
sarb
cmp
jbe
call
sbb
lcall
mov
divl
rcrl
and
test
test
cmp
jl
ficoms
insb
mov
sub
mov
push
pop
test
jecxz
imul
test
loopne
hlt
nop
lea
add
pusha
cmp
inc
inc
mov
or
mov
mov
push
cmp
shr
xchg
dec
shl
cmp
cmc
sbb
jbe
insl
lret
add
sbb
mov
jb
mov
mov
push
mov
pop
mov
popf
xor
push
mov
pusha
add
dec
add
xchg
movsb
shrl
xor
rorl
mov
popa
mov
mov
popa
sti
xchg
sti
cmpsl
or
int
add
aaa
or
sub
adc
test
xchg
or
sbb
popf
cmp
jecxz
jnp
push
cmpsl
enter
mov
mov
add
jb
sbb
add
mov
insl
lret
mov
lret
mov
std
js
pop
je
xchg
bound
dec
icebp
sahf
lea
xor
or
adc
out
jo
mov
aas
arpl
mov
and
ja
scas
leave
cmp
ret
xchg
scas
pop
jle
pop
es
jo
es
push
notb
pushf
and
or
dec
cmp
and
subb
aam
add
test
hlt
leave
movl
xchg
dec
xchg
cs
mov
xchg
not
pop
add
xor
sbb
jnp
popf
xor
addr16
cmpsb
int
and
in
sbb
lea
std
push
rclb
das
push
xor
sbb
sbb
push
sbb
push
repnz
mov
push
jge
mov
int
jl
ja
and
and
jg
xchg
sahf
push
shr
out
adc
das
and
sub
mov
cwtl
adcb
xchg
cli
pop
sub
repz
cmpsb
jb
xor
js
jne
insl
mov
cwtl
into
xlat
addr16
int
ret
loope
jae
into
nop
inc
imulb
out
repz
cwtl
sbb
mov
pop
pusha
xlat
inc
in
loope
push
pop
adc
dec
sbb
nop
push
enter
daa
out
push
cld
loop
js
sbb
dec
jmp
rcrl
or
cltd
pop
leave
push
xor
in
les
shrl
and
sub
outsb
ud0
rorl
test
or
inc
mov
adc
stos
jecxz
sbb
movsl
cmc
mov
push
or
xchg
fidivrl
mov
test
cmp
mov
and
mov
mov
daa
cmpsl
pop
mov
cmpsl
and
shll
outsl
and
adc
inc
lahf
shl
imul
pop
fbstp
jns
sbb
xor
call
jp
mov
rclb
pop
mov
add
mov
out
jmp
xchg
cmp
stos
xor
xchg
and
scas
rcrb
add
inc
pop
imul
imul
xor
push
sub
aaa
fbstp
sub
int3
lock
lods
sub
or
std
insb
cmp
push
adcl
jb
popa
shr
mov
int
pop
mov
jns
or
or
adc
sbb
in
jo
mov
int3
movsl
jecxz
add
roll
xchg
adc
dec
ror
imul
std
nop
mov
mov
jae
adc
lret
add
xchg
int
pop
add
shlb
adc
lods
mov
and
jbe
push
xchg
stos
cs
xchg
inc
imul
and
adc
jnp
lret
bndldx
addr16
addl
mov
jl
lret
into
out
insb
xor
mov
test
push
dec
aad
dec
sub
stc
mov
inc
or
scas
push
shrb
in
sar
leave
mov
xor
xor
inc
mov
xchg
pop
lds
mov
cltd
push
mov
js
int
xor
push
inc
push
test
and
mov
test
push
push
xor
loope
insb
pusha
leave
aaa
scas
js
loope
subb
scas
pop
mov
aam
lahf
lods
insb
push
push
add
fistpll
cmc
fisttps
mov
cltd
pop
push
mov
sub
bound
xor
cmc
stc
xorb
ja
mov
push
mov
int3
xchg
jb
xorl
test
pop
and
mov
xchg
mov
into
and
pop
xchg
lea
inc
addr16
jmp
dec
cmc
adc
jmp
lock
enter
cld
pop
leave
pop
test
out
xchg
mov
mov
icebp
insl
sahf
cli
mul
mov
stos
jnp
push
inc
lret
fadd
movsb
je
jl
add
jbe
adc
jmp
hlt
mov
aam
icebp
mov
lahf
stos
cwtl
in
adc
inc
fnstenv
mov
xchg
push
or
xor
or
push
lock
popf
or
jns
mov
or
sub
xchg
sbb
roll
sbb
out
jle
mov
mov
cld
push
dec
xor
mov
lods
pop
push
movsl
insl
sbb
fimuls
or
lock
in
add
arpl
jns
cwtl
cmp
xorb
push
push
cltd
aam
es
iret
dec
push
andl
add
and
mov
icebp
mov
cmp
cmp
sbb
stc
in
xor
or
sarl
aam
lods
inc
shll
lods
adc
and
fdivp
out
or
aas
push
adc
xor
rcrb
iret
js
fsubrs
cmpsl
jne
xchg
pop
add
sub
adc
pop
mov
dec
loope
insb
or
aam
and
pushf
fdivrl
imull
pop
test
leave
neg
jmp
popw
ret
xor
or
aam
ljmp
mov
jbe
inc
push
inc
pop
mov
lcall
push
dec
pop
mov
cmp
aaa
aad
fildll
jecxz
xchg
enter
mov
sbb
js
call
into
sub
sub
push
aad
enter
add
jns
daa
jg
cmpsb
mov
xchg
push
xor
dec
and
xor
call
pop
push
pop
ljmp
mov
mov
shll
lea
in
das
cli
push
xchg
mov
std
pop
mov
adc
imul
mov
les
mov
xchg
clc
fsub
addr16
test
dec
jbe
xor
xchg
push
ret
jne
sbb
dec
mov
mov
imul
mov
cmc
es
mov
dec
jmp
loopne
mov
pop
call
cmp
lret
xlat
cld
push
dec
and
pop
mov
pop
add
jnp
pop
and
scas
xorl
cld
or
addb
adc
movsl
pop
cwtl
cmp
mov
out
add
inc
jmp
xchg
enter
lret
pop
cld
outsl
mov
out
adc
mov
sub
jecxz
js
shl
shrb
sahf
add
lods
or
pushf
daa
ret
cmp
aam
jmp
sub
pop
mov
hlt
push
imul
mov
cmp
mov
out
lods
stos
or
test
clc
mov
mov
movsl
xor
cmp
imul
mov
mov
repz
sbb
shrb
jmp
push
mov
or
je
push
fiaddl
sub
cmp
dec
push
add
scas
xorb
and
xor
lcall
aad
pop
popf
rolb
cmp
into
sbb
pop
imul
add
hlt
lds
insb
nop
imul
mov
mov
pop
mov
or
scas
inc
sbb
xor
aaa
roll
xor
or
adc
popa
fldl2e
add
and
pop
cltd
sub
cltd
pop
adc
adc
push
imul
push
lock
out
xchg
int
dec
cwtl
or
fadd
and
cmp
sbb
xor
test
inc
push
mov
or
pusha
cmc
decl
outsl
fcompl
clc
and
cs
push
inc
sub
fwait
data16
movsl
test
adc
sbb
xor
leave
dec
bound
outsl
xchg
js
pop
or
xor
ja
into
outsl
pop
sti
or
dec
hlt
xchg
cmp
sbb
cmp
jmp
insb
cwtl
push
daa
rclb
stos
outsl
or
data16
fnstsw
sub
imul
imul
imul
add
shrl
push
into
adc
ss
fs
rcr
fiaddl
jecxz
inc
ja
ja
or
and
into
fs
ljmp
outsl
movsb
mov
mov
adcl
mov
lret
out
std
pop
xor
push
cmp
data16
fisubrs
cmc
mov
sahf
xchg
pusha
xchg
mov
dec
xchg
push
popa
push
es
mov
adc
bound
dec
jo
xor
cmc
xchg
jne
xchg
sub
into
hlt
lds
mov
push
orb
repnz
stos
cld
inc
shr
cli
adc
mov
sub
mov
jns
fsubrl
add
dec
push
arpl
and
icebp
or
cmp
call
enter
dec
cmpsl
mov
pop
sub
les
dec
pop
and
xlat
push
sub
lahf
das
pminub
xchg
cmp
insb
int
adc
nop
inc
faddp
add
lock
xchg
arpl
sub
std
jae
xchg
push
stc
fcomps
mov
sti
int
lahf
loop
jg
jp
imul
add
lds
push
sub
inc
ds
je
sti
add
test
adc
jge
movsl
cmc
lock
sarb
mov
lret
push
pop
sahf
xlat
pop
mov
cli
lods
sar
mov
xchg
or
xchg
movsl
nop
imulb
pusha
xor
pop
lcall
fnstsw
dec
or
dec
testb
cli
jbe
fnstenv
fcoms
mov
and
sbb
push
adcl
mov
inc
mov
xchg
inc
mov
loopne
bound
pop
jno
dec
aaa
or
ds
inc
jns
xchg
icebp
push
jno
rclb
in
test
jb
pop
jne
adc
movl
nop
dec
jnp
inc
jle
jp
adc
out
ss
insl
sahf
pop
je
movsl
mov
xor
pop
lret
pop
cmpsb
push
fadds
sbb
ret
mov
out
or
and
mov
lods
lret
lea
inc
loop
orb
nop
mov
jae
pop
outsb
ret
in
push
punpckhwd
in
mov
dec
cmp
cltd
nop
scas
or
js
sub
mov
call
in
adcb
inc
scas
pop
iret
xor
lret
and
dec
clc
stos
test
mov
loop
idiv
push
pop
or
push
sub
pop
shlb
in
lret
cld
sub
pusha
inc
fnstenv
or
arpl
cmc
xlat
push
push
inc
inc
xlat
pop
dec
negl
xor
mov
dec
cld
gs
mov
sahf
mov
mov
jge
xor
push
call
hlt
lret
stos
mov
out
push
call
lds
or
push
cmp
loopne
outsl
orl
mov
pop
jno
cmp
js
and
insl
imul
pop
xor
dec
jmp
in
mov
dec
cmp
fucomi
lahf
daa
mov
push
mov
sbb
outsl
adcb
divb
andb
push
push
inc
mov
pushf
dec
loopne
inc
stos
mov
insl
fadds
sbb
dec
mov
pop
jbe
mov
jne
scas
not
jae
ds
dec
in
pushf
jns
stos
xlat
test
std
pushf
sub
call
adc
sbb
jge
in
andl
hlt
mov
inc
out
sbb
out
sub
adc
mov
inc
addb
or
xchg
bound
xchg
adc
popa
ss
sub
insb
fs
and
repnz
xlat
cmp
or
cmpsl
push
in
sahf
lret
sub
cld
add
sub
xchg
inc
jne
mov
push
and
jmp
sti
pop
shrl
mov
fisubs
cmpsl
push
sub
xchg
jp
jo
cmpsl
sub
push
pop
imul
rol
xchg
movsl
out
fistpl
outsb
adc
out
push
in
std
hlt
idiv
dec
sbb
std
and
push
cmc
xor
in
jle
dec
push
fstpt
push
subl
in
push
int3
sbb
bound
aas
frstor
mov
adc
pop
imul
int3
stc
inc
imul
jo
sub
jb
fidivrs
or
dec
fcomps
out
fisttpl
push
or
inc
roll
mov
xor
shl
stos
mov
daa
cmpsl
sar
inc
push
mov
sub
dec
ret
add
add
mov
pop
or
inc
pop
out
test
mov
push
xor
and
imul
outsl
inc
popf
xor
arpl
ret
mov
addr16
adc
jns
in
stos
enter
jle
inc
popa
lret
mov
pop
push
scas
or
cltd
das
rorl
js
lahf
mov
negb
jmp
shll
sub
mov
jnp
add
pop
cmp
hlt
sbb
add
adc
and
pop
orl
xchg
pop
fsub
push
push
or
jl
mov
sub
sti
push
into
push
iret
arpl
mov
xchg
xor
scas
xor
adc
jnp
or
xor
sbb
mov
arpl
or
inc
fildl
cld
xor
pushf
cmpsb
into
and
daa
jmp
mov
inc
mov
data16
pop
arpl
sbb
lahf
hlt
sub
and
xlat
add
call
adc
sbb
aad
sbb
xor
pop
into
loope
dec
xchg
cmp
inc
aaa
push
cld
pop
xor
cmp
pop
and
out
orb
and
and
inc
out
subb
inc
fcomi
cmp
inc
or
sbb
scas
inc
sbbl
adc
mov
push
stos
fnstsw
inc
mov
push
pusha
and
add
jl
lock
add
ljmp
xchg
bound
cwtl
into
lock
das
call
test
mov
pop
dec
pop
shrl
in
std
xor
or
cs
arpl
mov
mov
rcl
push
push
mov
sti
je
inc
inc
insb
xor
cltd
loop
movsl
fucomip
push
jmp
jp
mov
dec
aad
pop
fldenv
add
xchg
clc
mov
mov
xchg
imul
cmp
fsubs
dec
cltd
inc
inc
divb
mov
mov
aaa
cwtl
mov
into
cmp
je
or
repnz
adc
imul
jle
out
lcall
inc
cmp
sbb
mov
pusha
or
icebp
enter
stos
shl
jne
enter
cmpsb
and
jle
sub
cmpsb
repz
cmc
sub
or
sub
inc
dec
jae
test
insb
adc
jp
in
mov
insb
jle
lahf
sahf
jle
mov
scas
arpl
add
xor
into
sbb
lods
push
int
leave
mov
and
dec
add
std
jle
les
mov
into
pop
xchg
out
inc
inc
mov
call
repz
lea
push
mov
sbb
dec
adc
rolb
cmpsl
mov
dec
and
cmp
iret
and
nop
mov
lcall
jl
jbe
xor
add
lret
push
jnp
jmp
mov
fcoms
add
ljmp
dec
test
mov
add
rcr
or
jno
int
lret
popf
inc
mov
loopne
mov
xor
push
clc
cmp
mov
and
imul
fimuls
enter
and
lods
cmc
push
les
ficomps
or
addl
cwtl
nop
cmp
test
int
lock
fisubl
ror
xor
dec
int
imul
or
mov
push
ss
pusha
push
inc
test
outsl
sti
stos
cli
cwtl
jno
add
push
das
adc
xchg
pop
repz
mov
jg
stos
sbb
scas
mov
stc
xor
insl
stc
ret
test
cltd
cli
or
das
lret
dec
insl
imul
sub
lock
mov
adc
mov
loope
or
jle
mov
cmp
push
dec
mov
gs
out
movsl
popa
insl
icebp
sub
dec
inc
lret
mov
xor
push
fadd
sub
push
mov
push
mov
jl
sti
lret
xchg
fs
dec
stos
push
and
cwtl
outsb
dec
xor
and
imul
jge
dec
mov
std
push
outsl
and
cmc
cmp
mov
outsl
inc
mov
jg
into
dec
fnsave
jmp
adc
sub
xchg
repnz
pop
sbb
ret
das
adc
push
jae
and
adc
insb
std
fsubrs
push
push
ljmp
add
ja
xor
jne
push
xchg
test
xchg
popf
icebp
sbb
add
loope
ss
dec
xchg
push
push
xor
cmp
xlat
ja
fdivl
cmpsl
jp
fwait
jge
mov
xor
jo
jle
adc
jnp
hlt
es
inc
push
in
rcr
scas
mov
clc
inc
xadd
xlat
ljmp
arpl
xchg
shll
adc
add
push
dec
xchg
pop
sub
sbb
sub
xor
bound
jp
scas
jb
inc
inc
mov
inc
pop
imul
out
outsl
dec
mov
xchg
shl
dec
rorl
xorl
dec
dec
shrl
es
sti
sbb
cs
loope
add
jl
push
mov
adc
cmp
xor
lock
in
sbb
pop
jne
ret
jmp
mov
jmp
pop
pop
mov
jmp
mov
push
xor
pop
cld
push
xchg
je
mov
fldcw
movsl
data16
notl
push
cmp
mov
mov
sub
push
xchg
mov
or
int3
mov
out
in
cwtl
aad
lds
xorb
fldl
sbb
subl
push
xchg
cmpsl
scas
xlat
sbb
mov
push
push
jnp
jb
int
sub
insb
dec
sub
xor
sub
and
rorb
mov
xor
mov
rcrl
add
dec
repz
ljmp
ret
xchg
int3
and
fbld
ljmp
sub
dec
xchg
daa
cli
xor
pop
xor
int3
addr16
mov
inc
jne,pn
out
pushf
xor
sbb
incb
fwait
stc
and
lea
jno
xchg
popa
loopne
cli
xchg
sbb
loope
int
mov
loope
cmp
call
pop
xchg
inc
or
repnz
or
and
loopne
lock
lods
mov
push
es
dec
inc
adcl
ss
pop
jg
and
arpl
sub
arpl
insl
cmp
and
cmp
jne
mov
lods
das
cs
fcmovne
xor
xlat
mov
push
imul
inc
stos
inc
add
jmp
les
imul
jl
sub
scas
and
dec
inc
int
iret
push
push
mov
popa
sub
mov
test
xchg
out
cmp
and
mov
cmp
pop
popl
jmp
xchg
in
xchg
fidivs
pop
popf
mov
cmp
cltd
ds
fcoms
inc
aam
pand
mov
out
arpl
jo
shll
fstpl
scas
cmp
es
adc
adc
icebp
out
in
add
fildll
mov
lahf
mov
lock
ljmp
gs
out
xor
mov
and
add
xchg
hlt
sub
ret
mul
cmp
xlat
add
test
xor
pusha
mov
or
or
lock
inc
xchg
adc
inc
cbtw
jg
xlat
cmovbe
xor
xchg
not
xchg
loopne
scas
out
xchg
sub
xchg
xchg
mov
add
std
ljmp
sub
mov
pop
cwtl
pop
cli
test
lahf
mov
or
call
lock
jge
lea
sarl
dec
nop
test
test
and
je
ret
ljmp
xor
jge
jmp
imul
bound
lds
rcr
incl
stos
xchg
pushf
sarl
sub
lahf
fs
xor
lcall
cmp
loop
push
mov
xchg
adc
sub
inc
xchg
out
mov
in
subl
pop
icebp
mov
hlt
in
cltd
sub
scas
jnp
in
into
les
jnp
pop
lcall
pop
repz
inc
cmc
arpl
xchg
inc
aam
lcall
push
sbb
dec
lret
popa
out
mov
int
xor
fwait
dec
push
out
jne
stos
mov
pop
addl
mov
nop
mov
adc
pop
mov
cmp
into
call
jmp
jp
jns
cmp
cmp
ficompl
push
fsts
ret
jae
push
test
mov
sti
inc
sub
xchg
add
out
sbb
cmpsl
cld
sbb
push
popa
mov
int
ljmp
inc
inc
addr16
std
cs
adc
fistpl
ds
push
pop
inc
xor
fdivs
aas
add
xlat
sub
aaa
out
pop
fcmove
push
ja
daa
daa
pop
mov
mov
mov
xor
test
xor
xchg
fistpl
add
es
xchg
cmp
inc
test
js
and
sbb
adc
xchg
movsb
push
and
insb
jle
jns,pn
call
mov
imul
rcl
dec
jbe
pop
push
cmpsb
out
hlt
dec
repz
push
sub
inc
push
mov
inc
sbb
cld
dec
mov
shll
pop
fs
mov
mov
int3
xor
push
mov
cmp
in
inc
sbb
jno
adcb
ficomps
insl
fstps
into
inc
mov
incl
mov
loope
xor
leave
mov
push
les
and
xchg
addr16
or
loope
and
pop
cwtl
dec
cmpsl
scas
pop
push
cmp
cmp
xchg
enter
adc
int3
into
mov
lods
test
cmc
xor
mov
or
sti
pop
cld
ja
repz
sbb
and
xor
ss
ljmp
xchg
mov
jne
loope
xchg
out
or
add
lahf
xor
add
scas
outsl
add
jne
add
sahf
xchg
sbb
adc
jecxz
push
xor
call
clc
xor
std
jb
pop
mov
dec
dec
dec
sarb
cmp
mov
adc
test
xor
out
sbb
mov
pop
or
repz
add
fnstsw
mov
test
mov
sbb
mov
test
add
xlat
out
fwait
lea
or
pop
cmp
imul
ds
xor
gs
sarb
cmp
fxch
iretw
mov
dec
ror
xchg
and
nop
fidivl
xlat
sbb
int
movsb
dec
pop
orb
ret
mov
fs
outsb
or
pop
popa
sub
lret
fldl
aaa
shll
mov
arpl
or
repnz
lea
inc
add
loop
and
fmull
jo
cs
sbb
sub
movaps
idiv
xchg
xchg
sti
andl
pushf
cld
sbb
push
xchg
cmc
dec
mov
xchg
xchg
out
shrl
lods
jp
adc
movsb
xchg
fidivs
push
mov
pop
aas
jp
jmp
push
cmpl
pop
lahf
rcrb
inc
cmp
subb
mov
hlt
rcr
inc
notl
subl
mov
cmp
and
daa
imul
cmp
stc
popa
jno
jb
dec
imul
jmp
xchg
and
mov
ljmp
push
adc
rorb
in
mov
rcl
test
and
fidivl
sbb
xchg
es
push
push
mov
lcall
mov
enter
insb
push
push
cmp
cmpsl
stc
les
fisubl
mov
clc
or
mov
fsubl
mov
mov
xchg
xor
ret
iret
mov
sub
pop
lcall
push
pop
pop
cmpsl
mov
cmp
mov
pop
ds
or
imul
stos
fisubrs
shll
mov
pop
or
test
xchg
xchg
movsl
fcomps
insl
addr16
sti
xor
filds
jne
cmp
xor
mov
mov
cmp
jecxz
test
aas
imul
xor
push
pop
dec
pop
or
gs
jg
dec
cmp
jl
mov
sbb
xchg
test
xor
adc
adc
jp
pop
int3
nop
mov
sbb
inc
imul
popa
jmp
jb
movsl
jl
pop
enter
dec
out
int3
out
inc
pop
lods
adc
mov
mov
pop
mov
cs
data16
out
pop
repz
rcll
test
push
data16
dec
adc
xchg
stos
sbb
cwtl
js
call
push
pop
call
xor
fs
jo
mov
je
divl
daa
xor
jmp
orb
popf
add
inc
jl
arpl
pop
repz
cmp
bound
pop
xchg
mov
fmul
dec
push
fcoms
lret
fisubs
xchg
inc
inc
push
out
pop
jp
cmpsl
test
jmp
lds
lahf
ljmp
inc
enter
outsb
sarb
das
mov
cmc
xor
rorb
sub
in
mov
push
cmc
pop
std
jp
in
dec
xchg
dec
js
pop
jno
and
fistpl
incl
test
jge
mov
stc
rol
mov
jle
inc
cmp
testl
pop
dec
lods
pop
xchg
adc
loope
push
or
nop
hlt
in
pop
mov
ret
add
inc
gs
adc
jecxz
sub
es
cli
movb
ja
movsl
jle
cmp
push
in
stos
mov
and
jo
inc
cmc
lcall
movl
xor
xor
add
jnp
repz
decb
test
dec
adc
int
int3
orl
sub
push
pop
divl
ror
jno
mov
loop
push
and
testb
mov
jmp
sbb
dec
mov
cs
inc
out
pop
xor
xchg
out
inc
sub
pop
std
xchg
stos
pop
sti
sub
into
mov
movsb
xor
mov
lcall
cli
mov
subl
mov
ret
into
xor
inc
nop
pop
ret
sarb
xor
hlt
mov
dec
mov
mov
das
xchg
int
mov
lret
cmpsb
xor
adc
sbb
jl
sub
mov
into
imul
movsl
test
imul
aas
icebp
addb
mov
sahf
popl
cmp
mov
hlt
subb
xor
mov
das
int3
test
jle
jle
mov
sbb
cld
mov
gs
sub
in
rclb
lret
xlat
mov
insl
cmpsl
xchg
jge
scas
mov
cmp
adc
daa
mov
jmp
adc
mov
imul
mov
jo
cmpsl
test
mov
scas
mov
cmp
lahf
jns
icebp
xchg
bound
lret
aad
mov
push
lret
shlb
mov
scas
mov
xchg
mov
add
addr16
pop
push
xchg
test
fldenv
test
repz
pop
pusha
mov
xchg
leave
int3
hlt
mov
and
xor
aam
sub
mov
sbb
adc
cs
xchg
fstl
dec
xchg
in
jmp
fwait
stos
lds
adc
xchg
cmp
nop
lret
es
mov
pop
xchg
inc
sar
outsb
loop
loope
pop
sbb
fwait
mov
push
les
mov
subl
jae
dec
add
pop
cmpsl
sub
cmp
neg
inc
call
xchg
repz
and
std
aas
fcmovb
stos
stc
or
daa
adc
pop
inc
mov
into
cmp
call
test
push
scas
sbb
outsl
push
and
in
cmp
ja
int
in
mov
sahf
insl
loop
scas
push
pop
stos
outsb
lret
sub
repnz
sarb
or
push
fimuls
inc
add
sub
push
sbb
adc
or
push
and
cmp
mov
enter
shl
or
or
out
in
jmp
shlb
rorb
fs
fprem
fstps
sub
int
test
jle
pop
pop
fistps
mov
dec
roll
cmc
dec
push
das
jmp
add
pop
out
je
sub
mov
lea
mov
aas
enter
and
icebp
xlat
rcrb
cmp
xchg
dec
cwtl
fs
xchg
sarb
prefetchw
mov
pop
fdivs
xchg
je
nop
sub
inc
ljmp
rcll
push
cmp
ret
adc
mov
xchg
lods
cli
sbb
data16
mov
sbb
mov
ss
dec
rcll
ja
fcompl
push
cmc
cmp
cmc
inc
lods
lcall
lret
mov
xor
pop
pop
or
fisttpll
fstpt
inc
or
mov
mov
loope
xor
test
add
ja
dec
dec
jne
inc
sub
int3
cmpsl
aaa
mov
bound
lods
andb
cli
mov
pop
ja
idivl
jo
mov
ds
cli
mov
adc
xchg
movsl
jns
add
out
mov
xchg
push
ret
lahf
outsb
daa
lds
xor
test
inc
mov
int
cltd
popf
jae
imulb
pop
add
mov
outsb
jno
jae
jb
jecxz
sbb
cmp
mov
gs
addr16
adc
adc
cmp
cmp
pop
repz
jb
dec
mov
jge
ja
xor
mov
stos
mov
mov
int
mov
jae
pushf
sbb
mull
xchg
stos
insl
adc
lds
pop
mov
loopne
leave
test
movsb
sub
stos
arpl
adc
cwtl
mov
adc
jp
sbb
rcrl
scas
popf
rolb
scas
in
pop
xchg
fwait
jo
mov
push
adc
add
push
jg
lock
mov
mov
xchg
aaa
ret
mov
test
enter
in
dec
fldl
add
sbb
dec
dec
cmpsb
add
test
sub
scas
or
xchg
ror
ss
pop
fcmovnbe
leave
lods
in
and
or
idivl
push
dec
insl
pop
pop
in
fucomip
dec
jecxz
sahf
xchg
xchg
es
pop
push
imul
dec
push
xor
cmc
outsl
out
cli
jnp
shlb
cmp
movsb
sarl
call
and
mov
in
or
xchg
gs
xchg
mov
cmp
mov
call
xchg
jg
dec
xor
lds
jno
sbb
or
xchg
scas
les
pop
cmp
xlat
sub
daa
xchg
xchg
inc
sub
mov
je
jae
add
fwait
arpl
pop
cwtl
and
fisttpll
xor
movsb
sti
or
push
sub
insb
rcll
mov
and
push
and
xor
pop
mov
hlt
arpl
mov
arpl
and
inc
fs
jne
pop
out
ljmp
or
push
cmpsl
hlt
ljmp
lcall
insl
stos
lret
cmp
push
dec
ss
pushf
xchg
fwait
add
outsl
aam
xor
fwait
cwtl
in
stc
mov
dec
std
sub
jo
xchg
out
outsb
and
jecxz
pop
mov
aad
lock
lret
add
idiv
add
sub
or
movsl
int
mov
dec
jo
je
add
and
xchg
xor
movsl
pop
push
inc
andb
xor
dec
aad
xchg
mov
dec
imul
scas
adc
pop
imul
popf
outsb
outsb
inc
sub
dec
insb
addl
cltd
pop
pop
or
icebp
adc
pop
imul
xor
push
ja
test
imul
or
xchg
push
adc
sub
mov
mov
pop
inc
sub
shll
adc
jnp
or
ja
sbb
mov
cmp
cmc
pop
dec
cmpb
lret
or
dec
pop
scas
push
mov
sbb
push
mov
inc
xchg
pop
scas
jge
rolb
imul
or
fadd
dec
lret
loop
pop
roll
push
orb
adc
cli
xlat
in
or
xchg
and
sbb
les
test
pop
push
dec
mov
ret
inc
pop
leave
loopne
sarl
mov
add
push
push
bound
mov
jnp
xchg
inc
in
push
or
call
cltd
xlat
add
lret
into
and
fiaddl
inc
mov
imul
dec
jo
sbb
arpl
js
add
jl
mov
fsts
and
mov
jnp
sub
cmp
inc
pop
cmp
jno
push
test
negb
cmc
cmp
aaa
mov
decb
mov
push
mov
cli
sahf
add
stc
xor
daa
leave
std
push
cld
rol
push
mov
push
sub
mov
mov
dec
add
mov
adc
push
or
fmuls
pop
jo
stos
jo
iret
call
adc
pop
dec
sbb
pop
jno
pushl
add
mov
fstpl
ja
cwtl
and
call
dec
repz
cwtl
sbb
mov
fcoml
into
les
mov
adcb
xchg
push
xor
lahf
sbb
aad
lods
dec
push
xchg
add
imul
fs
sbb
jno
sub
jle
and
add
mov
sbb
lahf
inc
cmp
stc
imul
sbb
inc
scas
dec
jno
jo
jge
test
lock
aas
push
adc
add
cld
push
mov
pop
wbinvd
dec
jmp
lods
push
in
xchg
stc
push
fldl
sbb
mov
xchg
xchg
xlat
xor
mov
in
mov
pop
add
std
lcall
sub
lock
lea
hlt
push
fnstsw
out
sub
cmp
pusha
push
test
mov
les
lcall
loope
cli
inc
inc
idivb
or
scas
pop
clc
cmp
mov
aaa
mov
loope
add
shll
xchg
es
in
lods
ss
lcall
ffree
pusha
or
in
dec
xchg
mov
or
pop
mov
pushf
fistps
cmp
cmp
mull
add
sub
popf
in
mov
loop
call
xchg
jbe
mov
mov
adc
je
arpl
js
das
rcl
cs
sbb
dec
cmpsb
pop
out
int
aam
movsl
mov
ret
xor
fldcw
ss
stos
pop
lret
push
xchg
jecxz
push
lods
ss
and
sbb
mov
daa
sub
daa
in
hlt
xchg
pop
ja
and
sub
inc
inc
sub
shl
data16
aam
jne
outsl
repnz
ja
xchg
sbb
add
xchg
adc
jl
push
lock
add
jno
xchg
lock
hlt
int3
clc
icebp
and
add
sub
xchg
addr16
imul
test
sub
xor
movsl
mov
jns
stc
mov
mov
fisubrs
orl
ds
sahf
aas
in
je
fimuls
mov
out
in
or
ds
jno
jg
aaa
mov
mov
xchg
push
jbe
outsb
jg
and
push
cwtl
fwait
sub
and
insb
xchg
sbb
frstor
pushf
pop
push
and
mov
inc
mov
cmp
mov
inc
ficoms
mov
ds
lcall
cltd
repnz
in
push
loope
int3
xchg
mov
mov
leave
pop
xor
or
clc
inc
jnp
lret
adc
add
pusha
mov
sar
xchg
mov
aam
and
shlb
rcll
fwait
mov
repnz
fs
cmpsl
add
add
jae
jl
xchg
jo
pusha
xchg
test
in
mov
movsb
pop
xor
test
ret
ficoms
sbbb
popa
xchg
imul
das
lcall
mov
xchg
push
inc
cmp
mov
in
fcmovnu
push
inc
jo
or
or
add
jno
insb
or
cmp
xchg
xor
pop
xchg
sbbl
loopne
cmp
out
sub
gs
stc
mov
in
mov
insb
inc
sub
gs
mov
pop
dec
leave
scas
cmp
ja
scas
loopne
sub
pop
divb
je
rcll
out
or
in
xor
dec
lock
xchg
insb
jbe
adc
mov
shll
loopne
mov
outsl
jno
pop
cmp
sbb
mov
sbb
cmp
jae
aaa
repnz
push
repz
adc
stos
dec
std
lods
jle
adc
fisubrl
push
sbb
repz
fs
ret
roll
push
adc
int3
add
out
mov
sub
int
flds
lods
mov
notl
mov
pop
xchg
subb
adc
cs
mov
mov
and
movsb
xchg
mov
andb
mov
mov
test
ret
sti
xchg
mov
jge
mov
fidivrs
push
popf
sbb
repnz
xchg
mov
jb
push
mov
jne
pop
imul
adc
mov
pop
jg
sub
and
pop
sbb
xor
cld
jecxz
mov
mov
mov
push
jge
cmp
and
lock
adc
xor
xchg
idiv
cmp
xor
jo
or
es
pop
xor
fstpt
push
pushf
xchg
mov
stc
push
dec
movsl
ljmp
dec
out
ja
mov
sahf
sbb
push
movsb
std
add
outsl
lods
pushl
cld
inc
fnstsw
fisubl
sbb
push
mov
xchg
xlat
arpl
mov
fs
repz
test
jmp
shrb
inc
cmp
fadd
lcall
mov
into
xchg
adc
out
adc
xchg
int
popa
jg
ljmp
cmp
sahf
popa
scas
push
stos
push
loopne
sbb
std
pop
das
shrb
jno
dec
rcrb
adc
mov
cmpb
stos
adc
lret
push
pop
out
mov
lcall
lcall
mov
ljmp
outsl
inc
icebp
xor
add
iret
xor
push
pop
inc
stc
outsb
pop
es
es
nop
cmp
adc
jnp
aaa
ret
pop
fsub
xor
jb
mov
sub
in
xor
arpl
and
adc
imul
pop
out
sbb
ret
add
js
mov
push
jne
popf
rorb
jo
int3
or
sbb
in
imul
jl
jmp
cmpsl
test
inc
das
daa
push
aad
sbb
cmpsb
les
push
or
pop
fcomp
lea
pushf
cmp
fwait
jg
pop
out
movsb
in
fadd
mov
imul
push
push
pop
xchg
je
adc
bound
je
pushf
xor
inc
jcxz
je
dec
or
pop
ds
adc
sbb
mov
dec
push
movsl
ss
outsb
aas
and
popw
stos
cmp
cmp
mov
mov
mov
std
aaa
and
call
notl
adc
lcall
sub
stos
into
bound
pop
pop
enter
stos
pop
mov
es
or
dec
jae
pop
lret
jmp
lods
fsts
rol
test
loope
mov
in
rcrl
gs
sbb
push
xor
jbe
dec
push
stc
sub
jae
rol
enter
call
mov
mov
mov
out
daa
cltd
test
imul
mov
adc
inc
std
cmp
xor
xchg
mov
aaa
andb
sub
adc
fs
inc
or
mov
stc
dec
xlat
dec
cmp
mov
and
jl
inc
sub
pop
inc
cmp
lods
push
pop
xor
lret
mov
mov
jns
mov
cli
movb
insl
jne
pusha
movsl
ja
jge
lods
cltd
test
in
jbe
lcall
jne
std
push
lods
adc
push
test
lret
mov
fcmovu
push
lcall
jl
movsb
mov
mov
xor
xchg
pop
sub
mov
je
inc
imul
push
subl
aad
imul
mov
pop
pop
mov
sbb
add
test
mov
xchg
fidivrl
or
loope
mov
xor
hlt
fadds
adc
add
jb
fcomip
push
test
sub
add
daa
mov
out
push
iret
xchg
jl
imul
cli
mov
stos
and
js
push
push
cmp
stos
call
mov
aad
dec
jne
popa
ljmp
test
add
mov
sbb
jb
sarl
setnp
loope
stos
jbe
mov
bnd
xchg
add
pop
cld
mov
xor
xor
icebp
mov
outsb
sahf
mov
cmp
jno
inc
and
inc
gs
mov
add
int3
jge
or
add
mov
jmp
inc
push
push
jnp
lahf
addr16
jg
push
xor
jmp
cmp
jecxz
xchg
into
gs
dec
mov
dec
sbb
mov
fidivrs
pop
pushf
and
sbb
test
nop
push
and
push
pop
int
xor
and
test
sarb
mov
out
or
dec
scas
insl
jmp
das
jmp
repz
bound
cmp
cmc
sbb
sbb
xchg
dec
cmp
std
mov
pop
and
mov
sub
adc
sbb
mov
mov
xchg
pop
imul
inc
sbb
pop
movb
jge
test
push
sbb
push
or
test
sub
mov
ss
mov
loop
mov
js
add
shl
cmpsb
inc
lret
lret
inc
mov
dec
jmp
adc
out
icebp
xchg
test
cmp
adc
mov
push
movsl
adc
je
sbb
dec
jp
cmp
sub
add
outsb
scas
adc
sub
push
jbe
push
cmp
and
clc
xor
push
mov
insl
push
push
ffreep
dec
cmp
pop
push
push
dec
sub
lds
push
data16
jp
jge
pop
pop
cltd
call
xchg
xor
fnsave
push
movsb
test
mov
daa
lret
lea
rcr
subb
pop
jns
mov
movsl
adc
dec
cmp
and
out
mov
xchg
sti
lods
cmpsl
mov
and
adc
loope
fcoml
add
cld
xchg
daa
insb
arpl
mov
mov
sysenter
clc
cmc
in
adc
and
dec
lods
es
dec
xchg
inc
stos
das
std
and
movb
jecxz
xor
dec
push
idivb
stc
out
out
stos
popf
enter
and
jmp
pop
jne
jecxz
lret
inc
popa
mov
mov
sahf
or
jno
jb
leave
icebp
mov
ret
jae
cmpsb
subb
test
in
mov
adc
call
or
inc
or
in
fidivrs
sbb
lds
mov
dec
inc
in
push
jb
and
cmpl
stos
rolb
iret
arpl
pop
aaa
pushf
sarb
jbe
xor
push
jbe
dec
std
push
outsl
pushf
scas
xchg
insb
sbb
sti
ret
jle
sar
dec
subl
mov
rcrb
push
mov
stos
mov
addl
pusha
pop
mov
mov
add
adc
adc
sbb
std
lods
sbb
in
xchg
push
test
pop
je
iret
mov
mov
xor
cs
dec
add
mov
fxch
cmpsb
mov
cld
lcall
cmc
or
mov
dec
lock
xor
ss
in
outsb
sbb
stos
add
jg
repz
jle
leave
inc
jnp
ljmp
fisubrs
fimull
mov
int
imul
ret
stc
es
pavgw
lret
cli
jmp
pop
popa
clc
adc
fucomp
sti
lcall
lahf
insl
and
in
jl,pn
movsb
out
or
push
fwait
incb
cld
push
mov
lret
outsb
push
movsl
jge
outsb
icebp
push
ljmp
dec
test
les
in
das
inc
push
aaa
fldenv
mov
out
pop
sbb
inc
adc
push
dec
xor
or
jecxz
mov
jmp
outsb
cmc
les
iret
repnz
mov
mov
mov
out
leave
popa
dec
out
push
leave
mov
push
adc
scas
or
mov
movsb
movsb
mov
xchg
shrb
push
clc
movsb
mov
lahf
sbb
jle
adc
pop
fbld
dec
sub
aam
fldcw
aas
or
ljmp
mov
sub
sar
in
addb
or
cld
sub
push
movsl
in
xlat
cmp
leave
fsubr
mov
xchg
aad
call
jecxz
stos
out
xor
mov
push
std
test
jmp
push
inc
xchg
call
cmp
sub
inc
push
or
pop
mov
test
push
cs
in
adc
int
sbb
xor
test
shl
aas
inc
and
icebp
dec
cmp
aad
lds
es
add
push
cmp
xchg
and
rclb
stos
xchg
sbb
mov
inc
mov
or
arpl
outsb
icebp
cltd
icebp
push
xchg
cmc
ljmp
addr16
scas
jle
mov
cmpsb
xor
mov
mov
mov
dec
or
add
dec
mov
sub
dec
ljmp
lcall
fsubrs
cli
sarl
mov
jg
or
xchg
fcoml
inc
cmc
mov
ljmp
cwtl
icebp
adc
add
cmp
dec
cwtl
out
ss
pop
sub
mov
mov
pop
movsb
and
xchg
ljmp
push
xor
je
ret
dec
cmpl
fwait
mov
and
in
fcoml
enter
shll
and
rcll
push
js
movsb
data16
orl
add
outsb
test
clc
mov
cmp
pop
mov
jg
add
inc
xchg
and
pusha
mov
fbstp
fcmovbe
pop
addr16
mov
dec
xor
pop
inc
insb
add
imul
pop
mov
mov
inc
add
jno
add
and
mov
sbb
in
xor
sar
stos
inc
sbb
lock
pop
enter
into
sub
leave
andl
lods
jnp
in
pushf
mov
pop
dec
xchg
jae
bound
inc
jb
lahf
adc
scas
adc
mov
mov
aam
insb
mov
xlat
xchg
push
imul
sbb
leave
jnp
jg
inc
outsb
jmp
adc
jnp
cmp
hlt
sub
int
fcomi
outsb
xchg
loopne
inc
push
sbb
push
insl
and
xor
out
outsb
xor
ljmp
ret
add
ljmp
push
jne
dec
enter
mov
stos
fnstsw
and
ret
fadds
and
inc
jno
jne
cltd
ret
mov
inc
dec
mov
mov
ljmp
in
mov
ja
je
test
and
mov
cmp
les
iret
pop
or
cmp
xor
lea
scas
pushf
imul
aas
lcall
and
mov
xor
and
xchg
sbb
push
dec
out
fdivl
xchg
shl
pop
mov
pop
and
call
jo
aaa
sub
lahf
xor
add
mov
mov
adcl
sahf
mov
andb
jb
push
mov
inc
pop
adc
sti
outsl
incl
test
mov
add
sub
inc
stc
xor
out
sub
xor
dec
lock
fcmove
pop
fnsave
in
daa
aaa
mov
pop
inc
fistl
das
inc
and
pop
insb
sbb
and
add
scas
push
and
jno
add
jnp
iret
jg
adc
xchg
out
or
clc
mov
outsl
test
xor
popf
shl
mov
pop
mov
sbb
faddp
jae
aas
fimull
jecxz
adc
sub
jo
dec
gs
inc
outsl
fisubs
popa
test
cmp
je
inc
aaa
sarb
out
pop
fwait
xchg
ret
and
push
test
push
xchg
sbb
xchg
dec
stos
push
or
loope
loope
mov
sahf
enter
jl
scas
cmp
inc
xor
mov
subb
xchg
cld
mov
mov
push
and
pusha
mov
ffree
rol
test
cmp
pop
inc
mov
mov
inc
andb
sub
stos
xor
xchg
mov
pop
cltd
test
in
cli
dec
pushf
lods
cmpsl
inc
jns
mov
dec
aam
pop
dec
mov
inc
test
arpl
lock
pop
sbb
fwait
jnp
sahf
fadds
push
add
inc
jns
lret
push
insl
bound
in
dec
mov
xchg
test
xlat
fxch
and
notl
mov
mov
push
dec
mov
jmp
pop
push
cmc
shl
int3
pop
imul
sub
cmpsb
rcl
xor
mov
pop
loopne
cmpsl
cltd
inc
cwtl
sahf
fstps
es
mov
jecxz
cmc
sub
fdivr
pushf
or
mov
mov
jge,pn
xchg
inc
mov
sahf
jg
int3
pop
jnp
adc
clc
mov
aam
mov
sbb
adc
jmp
push
adcl
cmp
sbbb
fisttpl
dec
movb
pushf
mov
cmp
dec
sub
mov
insb
cmpb
cmpsb
rclb
pop
adc
bound
push
adc
fnstenv
xlat
and
pop
aad
scas
jne
in
test
xchg
inc
mov
or
fmull
mov
xchg
sahf
fs
mov
ljmp
cmp
sub
mov
js
arpl
aaa
in
adc
inc
ret
movsl
xchg
push
mov
out
jle
shl
fwait
xchg
vrcpss
dec
and
icebp
ja
pop
xchg
lea
inc
ss
xchg
inc
dec
push
outsl
pushf
jns
jns
sbb
cltd
cmp
call
sub
lods
subl
mov
into
jns
sub
sbb
in
popf
xor
mov
cli
push
divl
mov
fdivrl
sbb
and
lods
addl
adc
mov
inc
ffreep
adc
mov
push
adc
push
leave
pop
cwtl
nop
test
mov
loopne
outsb
sar
mov
add
test
outsb
rcl
sub
movsb
push
test
mov
dec
addr16
adc
cmp
stc
jb
aas
lret
sbb
outsb
add
pop
or
insl
pop
test
adc
ret
sahf
adc
addr16
xor
jl
pop
in
add
insb
mov
iret
jns
loope
scas
js
mov
jb
jge
pop
xchg
mov
out
cmpsl
inc
mov
inc
sahf
inc
cmc
je
xchg
cmp
push
mov
shrl
out
cvtps2pd
mov
nop
mov
inc
push
sti
repz
pop
stc
add
jne
mov
adc
xchg
ds
sub
inc
sub
bound
cmp
icebp
push
test
mov
xchg
into
ljmp
ds
scas
mov
dec
push
adc
pop
push
ds
testl
iret
inc
push
fstps
jg
mov
xchg
rol
pop
stos
dec
scas
popf
cmp
lcall
and
rorb
and
push
sbb
dec
pop
mov
xor
jno
repz
pop
lock
insl
stos
jmp
ljmp
push
call
insl
insb
fsubrl
cmp
mov
gs
fiadds
push
pop
adc
imul
std
xchg
outsl
push
cs
not
or
xor
cmp
fnsave
cmpsb
shll
pop
enter
adcb
add
dec
stos
aam
dec
repz
or
xor
dec
repz
out
sbb
add
sbb
push
mov
movsb
test
xchg
add
rorb
cmp
jle
lcall
cmp
jecxz
fimull
mov
lret
xor
fidivrs
mov
adc
clc
push
sbb
loop
xor
push
jnp
cmp
adc
sub
adc
ss
rcll
mov
jo
scas
cld
lret
jno
mov
mov
push
nop
popf
lds
cmpsb
mov
add
lods
xchg
sub
insl
add
fidivrl
lock
pop
call
mov
cmp
push
push
xor
stos
std
fwait
ror
push
jo
cli
out
aam
push
add
mov
idivl
mov
imul
pop
push
ss
push
cmc
cwtl
jp
xor
jge
inc
pop
fwait
jmp
and
or
popa
dec
add
adc
jecxz
jle
xor
sbb
insb
xchg
aam
int
mov
push
out
repnz
jp
pop
mov
rcll
inc
aas
aas
pop
loope
loope
sub
cld
popw
sub
test
cmp
mov
fldcw
imul
adc
inc
popf
pop
stc
or
mov
sbb
bound
or
stc
add
adc
xadd
movsb
aaa
push
mov
push
ljmp
mov
int
mov
or
dec
in
push
sarb
pop
sbb
mov
cs
fucomp
stos
icebp
inc
xchg
xlat
pop
cmp
leave
mov
push
in
in
dec
cmp
ds
mov
in
fucom
inc
out
cs
adc
mov
shll
outsl
out
fmul
jns
inc
jae
add
push
sub
into
push
les
add
dec
and
fisttps
icebp
pusha
loop
dec
sbb
pop
fsub
sbb
push
push
test
stos
sbb
dec
or
mov
push
pop
stos
jcxz
jmp
roll
addl
mov
lcall
sbbl
dec
gs
or
xchg
ret
xchg
clc
mov
sbb
dec
jne
mov
inc
rcrb
test
add
loopne
loop
fnstsw
jne
cmp
mov
jns
imull
pop
mov
xchg
ds
pusha
or
mov
or
xchg
out
fsts
sub
dec
imul
jb
or
add
xor
dec
nop
xor
lcall
leave
cmp
inc
sahf
js
sub
fldl
divb
popl
cmp
arpl
ds
xlat
xor
xchg
lods
jp
mov
mov
xor
and
add
mov
imul
add
test
mov
dec
push
sbb
das
ljmp
rclb
xchg
mov
dec
in
das
or
test
cltd
push
xorl
out
insb
loop
push
jle
rcrl
sti
test
lods
dec
push
ss
jno
daa
sbb
sbb
shl
sti
inc
and
or
pop
testl
es
fcomi
mov
in
jecxz
out
xchg
sbb
pop
sbb
and
out
adc
loopne
jno
mov
mov
mov
push
push
jmp
jbe
ds
cli
adc
mov
pop
mov
stc
or
mov
insl
mov
jle
inc
in
aaa
pop
jnp
fwait
mov
jo
mov
adc
imul
inc
cmp
stos
xchg
add
xchg
mov
mov
rcrl
or
push
push
push
jae
sbb
jne
adc
scas
dec
mov
hlt
pushf
add
rol
mov
mov
jne
fsubr
aad
add
mov
js
xor
jmp
in
push
jmp
jne
mov
adc
dec
push
dec
bound
js
push
jns
push
or
mov
jge
pop
in
mov
out
mov
mov
adc
lcall
xor
mov
enter
lret
xchg
mov
dec
add
ljmp
sub
dec
mov
jns
jl
push
xor
xchg
stos
dec
int
loope
and
insl
lea
dec
mov
xor
out
call
je
mov
rcr
mov
or
push
push
pop
fiadds
fmulp
pop
scas
pop
push
xor
insb
dec
int
mov
sub
mov
push
sbb
dec
cld
imul
out
out
stos
sub
adc
and
mov
dec
mov
dec
sub
es
fwait
cmc
push
or
movsl
xchg
aas
jecxz
clc
idivl
lcall
inc
jne
dec
mov
rcrb
inc
dec
test
xlat
mov
xor
inc
cs
xchg
mov
or
lock
out
jbe
addr16
andl
push
inc
sub
or
cmc
cmp
das
loope
pushf
ficomps
divl
xchg
in
jb
es
push
inc
out
fsubs
imul
jecxz
add
xor
xorps
mov
ljmp
popa
pushf
and
dec
gs
adc
imul
lea
add
mov
jg
out
out
sbb
in
push
subl
enter
push
add
cmp
clc
and
sbb
adc
iret
mov
mov
mov
jbe
cli
jge
imul
jae
xor
and
xor
adc
bound
rolb
mull
dec
outsl
ljmp
jb
repnz
mov
push
int
imul
push
das
mov
loopne
lret
cmp
pusha
std
dec
add
push
jge
out
sbb
loope
outsb
test
dec
pushf
pop
cli
or
lcall
inc
pop
in
jnp
or
es
pop
cmp
outsb
scas
add
rcrl
sbb
push
lahf
cmpsb
in
pop
fldl
aam
xor
ffreep
mov
out
mov
dec
and
jnp
ja
loopne
sub
ljmp
push
fs
push
sub
jecxz
jae
lds
test
nop
dec
and
popf
test
ja
bound
and
rorl
mov
xchg
cmp
mov
addr16
inc
bound
sub
xor
insb
popf
dec
push
jge
adc
mov
jl
push
aas
pop
lcall
push
jne
adc
mov
outsb
sti
push
push
inc
jo
in
test
pop
insl
popf
addl
push
sub
std
push
icebp
xor
shl
jns
int3
test
or
cmp
mov
cltd
mov
xchg
insl
mov
xchg
stos
xlat
jno
and
dec
popf
dec
arpl
jg
loopne
sub
mov
jno
mov
rorb
mov
out
pop
hlt
push
mov
out
jns
aad
arpl
divb
dec
adc
stos
movl
add
inc
xchg
jo
and
adc
adc
movsb
int
pop
loop
and
cmp
stc
mov
out
cmp
lea
scas
addr16
addr16
lcall
enter
mov
sbb
push
mov
mov
mov
imul
imulb
cmpsb
pop
notb
pop
mov
pop
and
stc
loope
dec
sbb
enter
cmpsl
test
inc
xchg
and
sbb
pop
pop
sub
xchg
in
xchg
adc
andl
xor
scas
dec
mov
int3
jb
daa
es
icebp
mov
imul
push
repnz
jno
or
and
jne
xor
push
mov
into
aad
orl
mov
and
pop
test
xor
xor
push
das
pop
js
cmp
psadbw
cmp
jne
jmp
adc
fwait
xchg
xchg
adc
sbb
mov
mov
lock
cmpb
xrelease
jo
mov
fildl
push
pusha
in
mov
jns
mov
mov
push
lea
mov
mov
jmp
insl
out
cmpsl
jne
inc
and
mov
xchg
xchg
in
lock
ljmp
mov
aaa
ss
cli
or
sti
pop
enter
pop
cltd
subb
leave
jno
out
mov
sub
mov
filds
insb
cmp
or
push
mov
ss
jle
fwait
pop
sbb
mov
dec
fisubrs
inc
or
xchg
cli
cmp
mov
push
push
sub
pop
popf
adc
mov
out
cwtl
or
xchg
subb
add
xor
jmp
pop
xchg
xchg
or
add
jmp
fs
scas
xchg
imul
push
mov
jmp
popa
pop
mov
jnp
mov
outsb
stos
nop
scas
jp
je
mov
jl
orl
cmp
mov
cmp
inc
jae
pushf
or
mov
xor
leave
cs
push
insb
insl
xor
xchg
add
sub
jbe
dec
out
insb
jle
iret
enter
dec
gs
lahf
daa
das
out
mov
xor
adc
imul
lea
popa
xchg
xlat
add
fcmovnb
cmpsl
mov
jg
pusha
mov
repnz
rorb
lods
test
aam
mov
aas
mov
repnz
sahf
movsb
movsb
outsb
mov
mov
rcrb
sbb
fmuls
jmp
jnp
fs
movsl
jecxz
dec
sub
iret
adc
sub
pop
jle
test
dec
enter
sbb
das
cmp
sar
imul
int3
fwait
std
push
ds
jge
cmp
add
popf
lcall
push
mov
and
into
fidivs
rolw
aaa
addr16
js
sti
fs
or
imul
popf
xchg
xor
sub
jle
mov
inc
leave
add
test
bound
pop
sti
sarb
ret
and
inc
xchg
lods
push
clc
lds
pop
lcall
sti
jne
out
mov
gs
jo
xor
loopne
mov
xor
mov
sbb
xchg
mov
mov
mov
cmc
cwtl
sbb
push
leave
xchg
enter
cmp
ja
scas
insl
jp
movhps
loopne
pop
inc
sahf
mov
and
mov
lds
mov
mov
jne
jne
xor
add
cmc
test
jle
nop
fdivs
lods
fisubl
pop
loopne
je
clc
leave
sub
push
xor
sti
pop
xor
pop
cmp
sub
and
sub
loop,pt
or
jno
fldcw
cmpl
sti
push
movsb
call
push
or
or
pop
into
ret
mov
mov
movsl
pop
or
sbb
xchg
add
flds
js
sub
fstps
loope
adc
push
push
mov
stos
rcr
loop
xchg
cmp
cmpsb
push
lods
xor
push
mov
ds
test
test
and
pusha
inc
addr16
mov
into
popl
fmull
dec
mov
lock
repnz
arpl
push
and
and
cmp
jno
adc
rcll
in
or
cmc
jmp
add
and
hlt
jecxz
push
jge
test
lods
adc
cmpl
out
sub
mov
out
adc
aad
lock
mov
pop
xchg
add
inc
dec
jbe
das
rcr
loopne
push
inc
xchg
sbb
pop
test
mov
jecxz
sbb
push
adc
inc
cmp
mov
push
daa
lret
or
int3
ret
insb
dec
add
out
mov
pop
jl
jae
lret
and
adc
arpl
call
mov
popf
test
dec
xor
add
enter
push
fcmovne
xchg
cld
xchg
repz
jmp
fwait
xor
jmp
inc
inc
lret
imul
sti
jge
xor
dec
and
lock
mov
dec
aam
jge
ljmp
xor
jp
and
pushf
daa
inc
jp
jle
sbb
dec
fadds
xchg
dec
stc
lods
lds
into
push
and
xchg
jl
stc
divb
ficoms
test
insb
sbb
mov
ds
jmp
out
stc
mov
mov
inc
xor
sbb
push
shll
lret
out
push
lea
or
adc
push
inc
bt
xchg
test
in
jmp
sub
negb
adc
lock
ljmp
push
mov
or
cwtl
sahf
sub
repnz
or
std
mov
or
loop
mov
inc
sbb
mov
jl
lcall
rcll
mov
frstor
and
test
inc
fdivrp
cmp
lods
mov
shll
lods
into
xchg
jge
out
mov
pop
call
into
adc
and
mov
mov
pop
fiadds
sbb
xor
jns
or
or
sbb
gs
in
das
or
lea
jno
cmpsl
xlat
jl
and
xchg
push
insb
in
sbb
mov
and
out
lret
sahf
rolb
cmp
fdivrl
ficomps
dec
fisttps
addl
and
inc
loopne
fcmovb
loop
jb
jne
repnz
sbb
subb
rclb
mov
lret
mov
fwait
mov
push
add
mov
lahf
add
ret
rorl
xor
mov
and
fistpl
andb
push
inc
mov
jge
cld
xchg
push
and
cmpsb
movsl
xchg
clc
inc
jae
xchg
add
dec
inc
enter
mov
mov
xchg
jmp
int3
mov
push
and
dec
test
out
mov
pop
pop
sbb
leave
mov
aas
push
loop
sub
jecxz
fwait
inc
cmpsl
int
cld
and
daa
cltd
add
daa
lcall
jne
xor
les
adcl
bound
fnstcw
aad
scas
fcompl
pop
aas
cmp
or
adc
bound
add
mov
mov
imul
mov
sarl
repz
pop
jb
shl
loope
xchg
mov
lahf
push
inc
lock
jbe
leave
enter
mov
and
mov
sub
lret
pushf
sbbb
out
mov
testl
or
ja
in
mov
jbe
decb
dec
fstl
cmp
cmp
and
sbb
loopne
inc
adc
xchg
test
cli
xchg
fstps
cmpsb
sub
dec
addl
inc
or
xchg
out
int
add
fiadds
adc
sahf
jecxz
mov
lock
das
jbe
push
jg
sahf
stc
adc
insl
adc
jmp
push
arpl
sarb
push
fbstp
xchg
add
and
int
pusha
sub
aaa
loopne
out
enter
cwtl
jmp
mov
xchg
frstor
adc
lods
sub
dec
stc
aam
js
or
sar
sub
and
sub
faddp
mov
adc
ds
mov
sub
jle
fldcw
arpl
xchg
fwait
sbb
pop
inc
les
xchg
ss
das
and
mov
inc
push
dec
adc
iret
sub
scas
xchg
jmp
or
mov
add
mov
jle
sub
cmp
pop
ror
jge
call
dec
push
fsubrl
shll
cs
pop
push
pop
xchg
popf
cmc
in
es
xchg
ss
test
adc
rcl
lcall
es
loope
scas
divl
pop
mov
pop
call
push
scas
or
push
test
pop
movsb
dec
aam
xchg
out
inc
mov
push
nop
in
sub
adc
mov
inc
xor
xor
lahf
or
sbb
sub
dec
cmp
xchg
popf
sbb
es
stc
push
aaa
mov
mov
mov
inc
sbb
push
sbb
and
ret
jp
fcomp
iret
in
js
aaa
les
pop
ss
subb
jecxz
dec
insb
dec
inc
sti
jmp
and
lods
mov
and
scas
xor
fnstenv
inc
sub
clc
push
pop
push
mov
push
aaa
mov
ja
adc
add
lock
aaa
mov
push
cmc
outsb
mov
fninit
jae
inc
mov
pop
add
and
mov
out
stc
cltd
inc
push
scas
mov
cmpsb
xchg
mov
out
jp
ret
iret
icebp
test
mov
mov
loopne
xor
jne
mov
lahf
mov
popf
cmpl
mov
and
fsts
xchg
sub
dec
sub
xchg
xor
dec
lcall
jmp
cmpl
sbb
sbb
test
sbb
shrb
cwtl
push
xchg
js
xor
repnz
jge
inc
sbbb
cmp
push
cmp
push
mov
mov
stos
shlb
aad
pop
sbb
sbb
out
or
pop
push
aaa
cwtl
xor
xchg
mov
insl
push
mov
rcl
movsl
lret
jb
push
mov
push
xchg
jg
cmp
fst
cmpsl
pop
notb
pop
scas
shll
xor
in
mov
pop
scas
push
ss
mov
mov
arpl
js
cwtl
jge
movsb
mov
cmp
jle
jp
mov
inc
test
les
sbb
mov
sub
cmp
mov
jle
jp
mov
xchg
dec
flds
add
popf
addr16
cwtl
popf
mov
dec
ret
or
mov
mulb
sbb
xor
pop
sarb
mov
and
loope
addr16
repz
xchg
mov
das
push
mov
dec
ret
popa
adc
loopw
xlat
pop
xchg
dec
insb
pop
int3
inc
test
lcall
xor
hlt
nop/reserved
roll
aaa
jno
cltd
push
mov
adc
xsaveopt
lret
gs
pop
arpl
push
test
repz
cmpsl
xchg
fs
add
dec
jb
adc
pop
pop
aam
dec
or
inc
lods
popa
repz
icebp
popf
mov
in
loop
cli
lahf
xchg
icebp
xchg
aam
es
inc
fcmovnbe
mov
xchg
pop
imul
mov
sahf
iret
cld
test
push
fmul
test
jle
inc
pop
divb
sarl
mov
pusha
sub
push
clc
test
rorb
mov
pop
outsb
rorb
mov
shrl
adc
push
fwait
cs
outsb
and
imul
adc
rclb
inc
dec
arpl
ret
pop
adc
mov
nop
lcall
icebp
jg
mov
mov
outsb
inc
push
inc
push
in
loop
fidivrl
addr16
addr16
or
jmp
mov
shrb
add
mov
cs
pop
xchg
cmp
test
adc
out
and
mov
idivb
push
sarl
cmp
inc
pop
movsb
ret
inc
hlt
xchg
push
mov
ret
std
dec
mov
mov
enter
bound
mov
cltd
push
addr16
jl
in
push
or
into
inc
popa
or
xorb
mov
push
pop
jb
mov
fwait
je
xlat
push
jp
out
rorl
xchg
or
int3
pop
hlt
stc
data16
pop
int
push
dec
ljmp
aaa
push
jb
mov
or
push
mov
xchg
push
inc
push
xchg
out
movsl
sahf
aam
xchg
mov
das
call
mov
stos
scas
inc
cmc
into
es
pop
xor
repz
nop
mov
pop
imul
inc
xor
mov
nop
lret
std
sub
sahf
in
loop
mov
inc
xchg
add
lea
rcrl
push
enter
mov
in
out
jmp
mov
mov
pop
cmp
std
push
loope
lods
imul
mov
icebp
fs
gs
aaa
dec
jge
and
or
imul
or
loop
lock
bound
dec
xchg
adc
scas
fs
sub
outsl
add
or
cltd
inc
imul
jno
adc
and
xchg
les
shlb
jno
lret
pop
pop
inc
and
iret
cmpsl
sti
out
stc
sub
lret
mov
bound
pushf
sbb
stc
addl
mov
subb
cmp
flds
test
lods
mov
insl
das
and
test
sbb
orl
repnz
cltd
out
enter
aam
adc
fs
aas
sbb
cmp
cmc
inc
lea
fcoml
jns
addr16
push
mov
out
loop
sbb
arpl
mov
das
test
aam
inc
dec
add
insl
lret
iret
mov
out
cmp
inc
pop
clc
in
pop
xor
adc
jne
pop
enter
sub
mov
mov
jno
mov
push
aas
cmpsb
pop
push
out
mov
shlb
xor
inc
movb
cmp
sub
jae
xchg
adc
fnstenv
insb
mov
pop
or
xor
jmp
fdivp
push
cmp
dec
mov
mov
addr16
adc
stos
aaa
into
pusha
lret
lahf
outsl
pop
xor
in
pop
fwait
adc
daa
xchg
jp
cmp
pop
lods
cmp
in
mov
imul
daa
int3
ljmp
fs
addb
jo
pop
lods
xchg
pop
shlb
js
mov
pusha
dec
lea
es
xlat
aas
push
xchg
jbe
sbb
push
testl
xchg
pop
aas
lahf
jg
push
mov
js
push
lret
fisttps
add
out
jns
arpl
rolb
cli
std
ja
mov
rcrl
push
and
adc
inc
push
in
mov
or
les
pop
loope
jae
lahf
xor
loopne
test
pop
pop
jmp
inc
ret
insl
jae
jno
jne
push
cmp
pop
je
add
sti
sbb
in
sub
pop
daa
testl
popl
jbe
movsl
test
and
pop
addr16
pushf
sbb
lods
and
mov
mov
in
push
aaa
sub
insl
inc
stc
lahf
repz
sub
dec
out
daa
test
pop
fxch
inc
cmp
inc
je
jge
ja
mov
dec
in
stos
and
xchg
aam
in
cli
test
cmp
outsb
pop
mov
xchg
ss
in
fs
push
inc
xchg
add
add
mov
test
cmp
adc
push
sbb
xchg
or
aaa
push
pop
xor
xlat
in
testb
or
movb
pushf
mov
movsb
push
cli
lods
dec
cmp
iret
xor
sub
fdivrs
xor
sbb
shll
pop
sbb
push
sub
jns
push
jge
test
aas
loope
daa
sar
mov
test
pushf
fbstp
subb
jg
nop
stos
inc
cmpsl
lret
in
push
xchg
cmp
mov
inc
inc
ret
jns
xor
jmp
mov
jg
mov
mov
sti
dec
ja
mov
sub
jns
inc
lret
stos
insl
lea
and
movsl
mov
pop
xchg
in
ficoml
sub
inc
xor
pop
aaa
pop
in
popf
aas
loop
push
jmp
cwtl
std
mov
sub
ljmp
add
mov
mov
inc
in
lret
rcll
xchg
mov
sbb
or
pop
pop
sub
xor
addr16
int
dec
mov
sub
or
in
outsl
stos
or
movsb
cmpsl
roll
and
enter
add
addr16
xor
and
lcall
push
mov
pushf
arpl
xor
ljmp
aaa
adc
mov
inc
jns
pop
jno
out
or
popa
sub
adc
aaa
or
xlat
rcl
lods
mov
mov
aam
and
int
sahf
sahf
std
mov
sbb
cmpsb
cmpsl
or
xchg
mov
lds
lret
scas
inc
sub
push
sub
dec
and
xchg
push
arpl
add
cli
shrb
pop
aaa
cmp
jmp
mov
cmp
sub
pop
sbb
mov
pop
push
out
das
push
pop
insl
mov
in
mov
jb
pushf
scas
ds
test
or
mov
or
stc
mov
mov
lods
out
sbb
push
fisubrs
pop
data16
cs
les
and
add
pop
in
and
adc
sbb
or
pop
fwait
ja
push
mov
jl
jmp
lods
cmpsl
and
filds
mov
mov
sbb
ja
xchg
push
psubusw
aaa
xchg
mov
cmovne
xorl
out
or
lods
fwait
rcrl
mov
fidivs
outsb
push
or
movsb
mov
dec
adc
fstpt
mov
xchg
jmp
mov
pop
test
pop
rorl
and
fimuls
repnz
je
cmp
pop
sbb
movsb
mov
push
fsubrp
les
sbbb
jl
mov
pop
out
sbb
add
xor
or
jl
inc
add
inc
imul
lea
or
jle
dec
jl
jle
repz
push
mov
cmp
movsb
xor
test
mov
das
fwait
out
ja
jns
lret
jbe
push
pop
or
lods
ja
mov
fwait
dec
test
jle
mov
paddsb
cwtl
aaa
pop
jnp
pop
dec
mov
mov
aam
sbb
aaa
das
arpl
lcall
mov
pop
add
mov
cmp
lret
xchg
and
xchg
sub
fcmovnu
or
cld
sub
xor
push
inc
xchg
sub
insb
mov
xlat
out
ja
ret
popa
or
sbb
mov
and
test
mov
popa
movsb
cli
decl
xchg
adc
and
inc
push
popa
ret
out
sbb
fsubrs
fisttpl
adc
dec
sub
stos
les
popa
call
test
jmp
xor
fsubs
push
stos
xorl
dec
jne
fbstp
out
add
pushf
add
loop
or
xchg
lahf
dec
mov
jmp
inc
xchg
shr
ss
movsl
or
repnz
ficoml
fnstenv
loope
gs
dec
mov
fs
fsubrp
xchg
mov
rep
out
call
xor
cmp
cmpsl
adc
xchg
cld
add
adc
jmp
jno
or
lret
test
adc
adc
add
jge
ja
vphsubdq
call
ljmp
pop
aam
dec
pop
stos
and
lods
icebp
js
cmp
leave
sbb
jns
ret
dec
pop
add
int3
push
mov
popa
hlt
xor
mov
in
mov
leave
lahf
cmp
push
ljmp
pushf
mov
pop
fwait
into
mov
xchg
bound
shld
mov
cwtl
in
into
outsb
movsb
ficoms
xor
ds
test
add
loope
in
hlt
std
inc
dec
in
orb
sbb
sar
insl
adc
lcall
cmp
cltd
sbb
xchg
je
test
imul
arpl
loopne
jg
lock
pusha
cli
stos
dec
push
stc
js
jmp
dec
andb
neg
test
sub
call
lods
adc
loopne
xchg
push
push
cmp
or
fwait
mov
push
xchg
ret
mov
andb
cmpb
repnz
cmpsb
mov
add
in
or
lods
push
cmp
mull
push
lds
cs
cld
pop
jns
mov
pusha
or
push
cmp
and
ds
aaa
add
add
push
xor
iret
imul
jge
or
int3
cs
xchg
out
popf
inc
ret
mov
xchg
xchg
and
cmpsl
sub
or
adc
and
mov
outsl
push
xor
xchg
imul
dec
jmp
jnp
ss
dec
mov
pop
popa
and
dec
push
outsl
dec
daa
mov
mov
pop
sbb
std
dec
adc
mov
hlt
repnz
xorb
mov
or
push
pop
inc
shlb
mov
xor
outsl
inc
clc
movsl
jge
mov
cs
sahf
push
mov
pusha
les
dec
cli
cmp
loope
stc
int
ja
sbbl
jbe
outsb
adc
or
inc
test
call
pop
cmpsl
adc
or
fisttpl
jno
pop
repnz
call
mov
jno
lahf
in
push
push
pop
je
addl
movsb
inc
mov
int3
sbb
sti
adc
movsl
cmpsb
inc
jno
ds
and
movsb
mov
pop
mov
das
push
sbb
in
jnp
loope
xchg
sarb
out
fmuls
inc
cmp
lock
nop
mov
mov
out
std
clc
gs
out
sub
inc
inc
sbb
mulb
sbb
jge
mov
jne
mov
pop
xchg
push
cmp
and
inc
cwtl
xorl
and
add
xchg
bswap
sub
mov
mov
mov
pop
xchg
jno
fucomip
std
adc
dec
and
les
xor
lock
push
ret
sbb
or
addr16
or
cwtl
data16
xchg
sbb
jl
mov
sbb
stos
cmp
adcb
mov
loope
xor
dec
arpl
xor
out
adc
lods
stos
pop
mov
rcll
dec
ljmp
fldt
mov
daa
bound
push
inc
mov
push
pop
loop
dec
fldcw
pop
int3
jecxz
cld
and
xchg
cmp
sub
or
test
lret
or
pop
ror
cmp
loopne
call
or
add
test
adc
nop
mov
cmp
push
lcall
inc
ds
xor
pop
push
adc
shll
arpl
xor
mov
pusha
fcomi
scas
fistpll
into
dec
popf
jae
mov
ss
adc
cmp
fwait
test
lods
inc
sbb
or
ss
in
and
xchg
call
xor
sbb
into
adc
js
sub
into
fadds
mov
in
xchg
mov
cmpsb
push
scas
scas
daa
xor
cmpsl
jp
sbb
dec
mov
sbb
outsb
and
jp
pusha
xchg
iret
addl
xrelease
hlt
and
fists
test
mov
repnz
clc
scas
jno
and
leave
push
dec
loopne
cmp
and
stos
jl
dec
and
lahf
pop
fstpt
inc
addb
xor
jecxz
outsl
dec
imul
test
cwtl
aad
test
mull
clc
push
enter
add
add
cmp
pop
sbb
dec
imull
push
fldt
pushf
inc
jg
mov
adc
jl
ds
aam
call
push
xor
xlat
aad
cmp
mov
pop
mov
insl
lods
pop
popa
mov
fcoml
int
xlat
in
dec
loopne
insb
arpl
mov
das
jecxz
and
out
cli
shll
inc
xchg
in
mov
ret
shlb
ret
and
cmpsl
fs
testb
in
add
negl
enter
call
mov
aad
ret
mov
pop
mov
pop
ja
lea
lahf
rol
mov
pop
notl
stos
cmc
sbb
dec
xlat
scas
inc
dec
jle
xor
mov
jbe
or
and
loopnew
xor
xor
loopne
xchg
add
push
aam
clc
sbb
mov
cmp
ds
jne
mov
mov
mov
pushf
sbbb
add
sbb
scas
sub
out
mov
ret
pusha
daa
lcall
daa
sbb
sub
pop
jge
in
jp
shrb
dec
loope
sbb
sub
fs
mov
dec
movsb
sbb
shrb
stos
add
cmp
jmp
push
or
data16
pop
mov
mov
jmp
enter
xchg
neg
imul
inc
negl
xchg
push
movsl
repz
in
nop
push
shll
addb
xor
pop
push
sbb
inc
lcall
bound
push
adc
icebp
arpl
fs
mov
std
out
mov
jns
ficoms
add
divb
movsl
inc
pop
jl
loop
sub
loopne
sbb
mov
inc
inc
mov
jo
sbb
mov
shll
pop
arpl
push
sub
rcrl
icebp
fwait
testl
add
dec
lods
pusha
aas
mov
bound
mov
add
xchg
mov
push
adc
sub
popf
jl
jno
decb
je
pop
test
and
sub
stc
mov
jae
dec
pop
pop
outsb
xchg
clc
repz
pop
pop
dec
lods
cmp
push
jns
xlat
sahf
ds
mov
mov
gs
outsb
xchg
insb
inc
call
mov
scas
push
and
dec
pushf
in
clc
inc
test
jnp
cli
sahf
add
test
xchg
test
fwait
sarb
pop
jbe
je
sbb
lods
call
mov
sub
dec
push
outsb
mov
dec
data16
les
inc
iret
sti
or
lret
lret
mov
dec
inc
mov
js
sbb
pop
mov
or
repnz
mov
ret
stos
jne
push
xor
call
and
jnp
jne
jp
mov
and
aaa
negl
jle
sbb
lea
dec
jbe
dec
outsb
add
popf
fs
add
outsl
inc
cltd
nop
mov
sub
or
jmp
xlat
jae
cltd
mov
decl
mov
sbbb
jp
sub
mov
loopne
mov
arpl
adc
fsts
push
xchg
test
cmc
mov
jns
negb
cmc
jne
pop
icebp
dec
mov
mov
inc
jecxz
lret
cwtl
and
dec
fs
add
cli
xchg
sub
jno
clc
cmp
cmp
push
filds
mov
sub
push
mov
fldenv
in
int3
sbb
mov
adc
ja
and
mov
push
stc
out
das
int3
out
das
shll
mov
into
adc
jno
cmp
pop
sbb
sbb
nop
mov
pop
and
fcmovnb
sahf
xlat
xorb
xchg
pop
sub
into
sub
adc
pop
mov
xor
fadds
daa
aam
notb
std
int
add
imul
jmp
lret
das
mov
loope
pop
ss
insb
mov
jo
es
fiaddl
scas
loopne
sarl
cs
pop
cmp
lret
iret
clc
mov
pop
pop
sarl
ja
shrl
mov
incb
pop
insb
repz
mov
pop
inc
sbb
xchg
or
fidivrs
stos
imul
dec
rcrb
xchg
xlat
fiaddl
test
dec
lea
push
jmp
imul
xchg
fisubrs
jb
test
icebp
xchg
xlat
xor
pop
or
or
mov
mov
sub
cwtl
scas
pop
scas
addb
fxch
outsb
sub
bound
pushf
add
icebp
ror
rorl
dec
xor
inc
enter
xor
aaa
lods
subb
test
addr16
cmp
inc
std
add
add
test
pop
mov
push
dec
inc
mov
jg
call
sbb
or
fdivs
mov
inc
adc
sahf
pop
or
inc
mov
xor
dec
shrb
ret
inc
iret
xor
notb
imul
sbb
sbb
out
pop
test
cmp
popa
shrl
js
or
mov
push
sub
pop
testb
insb
subb
pop
outsb
push
pop
fidivrl
push
mov
lcall
cmp
push
fmull
popf
jo
ret
out
jle
mov
push
jb
xchg
loope
inc
adc
fnstsw
dec
pushf
rolb
cmp
push
fists
int3
or
adc
sbb
mov
sbb
sub
pop
cmc
cmc
or
addr16
push
mov
xchg
out
sub
faddp
sbb
add
jp
lds
cmp
jp
aam
popa
cltd
cmp
sbb
dec
sub
cld
aas
mov
pop
ljmp
xchg
pop
pop
dec
mov
pop
int3
and
jo
pop
pop
dec
cmp
fistl
fsubrs
jp
pop
sbb
sbb
stc
fldl
or
in
jp
dec
mov
and
popf
cmc
shrb
mov
sbb
cmpsb
repnz
dec
dec
push
sub
mov
and
sahf
out
jle
sbb
testb
pop
mov
pop
or
lahf
jb
popa
inc
rorl
lahf
mov
push
lcall
mov
mov
data16
xchg
out
rol
cmp
jne
add
mov
movsl
insl
pop
mov
dec
rclb
push
push
mov
ss
xor
add
mov
int
leave
jl
out
xchg
sbb
xchg
and
mov
test
xchg
push
adc
mov
push
add
dec
lea
pop
add
int3
fwait
jno
jg
int
fisubl
das
push
pusha
ficompl
mull
xor
bound
mov
inc
adc
iret
ret
xchg
push
pop
lahf
xchg
and
cwtl
in
cmp
scas
xor
mov
outsl
loop
adc
ljmp
subb
test
sti
imul
mov
jge
sub
push
out
mov
rdmsr
jno
push
call
adcl
stc
lea
mov
mov
test
xor
cli
int
xchg
pop
inc
mov
or
cmc
imulb
js
push
lret
nop
sarb
push
add
or
cmp
lock
jb
xorl
movsl
push
dec
insb
das
scas
inc
push
mov
or
movsl
das
push
dec
mulb
and
push
pop
cmc
cmp
dec
xchg
add
mov
mov
lahf
jecxz
mov
jns
js
popa
sub
mov
sub
add
jns
addb
sub
les
pop
mov
mov
jg
or
pop
push
push
outsl
mov
std
xchg
fisubrl
movsl
mov
call
jg
mov
ja
or
out
mov
es
cmpsb
pop
inc
nop
lcall
mov
test
and
test
and
cwtl
xchg
aas
enter
into
ficoml
mov
or
push
shlb
mov
inc
jo
inc
popa
jne
fs
int3
cld
in
shrl
inc
dec
and
jno
das
mov
cmp
mov
popa
mov
xor
lahf
cld
ja
adc
in
mov
popa
cmp
shl
ret
insl
mov
rcrl
rclb
or
push
xchg
dec
jo
insb
xorl
push
and
xchg
mov
dec
push
jmp
lret
dec
xchg
add
xor
adcl
out
fwait
jmp
and
jge
mov
arpl
arpl
inc
imul
mov
inc
mov
xor
add
jno
test
jp
fists
cmpsb
xchg
js
in
sub
movsb
into
mov
sbb
cmpsb
mov
and
push
adc
xlat
inc
cli
fs
aaa
stos
push
xlat
sbb
inc
jo
push
fwait
lret
sbb
loope
rorl
pop
leave
mov
cmp
loop
int3
xchg
sub
es
mov
mov
push
jae
xchg
std
daa
xlat
icebp
mov
test
scas
mov
das
xchg
sbb
sub
jmp
jne
ss
arpl
pop
or
mov
ficoml
add
cmp
imul
xchg
and
les
insl
es
daa
mov
mov
js
ret
or
scas
shll
cld
subl
push
mov
dec
push
sbb
int3
push
sub
dec
inc
hlt
jbe
add
dec
xlat
mov
repz
pusha
insl
out
pop
lret
nop
push
ss
lret
mov
cmp
call
hlt
popa
xchg
push
pop
sub
icebp
loop
push
es
rep
inc
add
insl
ss
xor
push
fists
sub
mov
fsubs
jp
sbb
aaa
das
loop
das
cmp
xlat
pop
cmp
bound
jp
mov
adc
jmp
jmp
dec
dec
es
push
sti
mov
shr
jl
and
ret
sbb
or
xchg
inc
cmpsb
jecxz
sbb
xlat
jp
sub
inc
pop
fildll
or
loopne
cmp
or
sti
js
stos
dec
xor
sub
pushf
in
pop
add
flds
inc
addr16
jnp
mov
mov
cmp
fnstenv
add
lret
nop
and
mov
cmp
leave
movsl
cld
xchg
xchg
dec
in
cmpsb
jle
bnd
adc
rorb
adc
mov
push
jp
fisubrs
into
sbb
imulb
mov
pop
mov
mov
xchg
xchg
shll
mov
lahf
repnz
in
sti
outsb
dec
sub
mov
jg
adc
mov
mov
push
sub
mov
pop
mov
dec
jbe
frndint
mov
sbb
lods
loope
js
jmp
je
das
inc
and
cmp
or
xchg
lea
imul
xor
mov
add
movsl
mul
xor
and
andb
test
outsl
push
jge,pn
fiaddl
mov
or
sbb
push
mov
loop
out
sbbl
mov
jg
xchg
inc
push
sub
insb
sbb
mov
and
mov
jge
jg
shll
cmp
cmpsb
or
mov
cmp
add
std
sub
jge
test
fsubrl
add
xor
mov
mov
ljmp
popf
sbb
push
inc
or
jae
sbb
push
aas
in
daa
mov
jl
stc
or
jecxz
inc
lret
imul
pop
xlat
pop
adc
sub
xor
pop
jle
fldl
jle
in
ror
add
fucomi
sub
push
xlat
into
test
cwtl
mov
sbb
add
xor
and
or
in
pop
xchg
jo
pop
and
pop
mov
cmpsl
push
xchg
add
imul
sub
aas
mov
cs
dec
cld
andb
jns
jno
loope
pop
test
lcall
cmp
aaa
inc
xchg
data16
and
mov
mov
add
fistl
jl
sbb
cltd
loop
add
fdivrl
pop
xchg
pop
mov
rcrb
lock
sarb
std
mov
test
xchg
clc
jmp
and
mov
lret
or
fsubrs
in
inc
adc
sbb
jg
and
inc
xor
stc
inc
cmc
fsts
cli
fsubs
in
ret
insb
sub
sarb
cld
dec
mov
stc
inc
loope
hlt
pop
sub
add
lahf
and
xchg
popa
fs
jae
push
cmp
pop
arpl
test
cld
dec
outsb
fisttps
and
data16
aad
push
mov
xchg
and
enter
add
cli
adcb
mov
or
out
std
pop
push
adc
fists
cmp
fmuls
xchg
stos
es
imull
cmc
dec
jp
lods
inc
add
jne
mov
mov
dec
arpl
pop
out
adc
cltd
roll
hlt
lret
xorl
xor
push
fisttpll
sub
out
dec
fadds
xor
popa
jecxz
fldt
xor
es
aad
scas
dec
lcall
ss
cwtl
popa
pop
ret
insl
xchg
fmuls
ret
mov
adc
jg
out
shlb
js
leave
push
jl
mov
iret
test
stc
push
mov
inc
jbe
clc
bts
add
mov
push
or
xor
inc
jge
add
movsb
fnsave
dec
inc
fildl
out
sub
mov
fcomps
and
cmc
adc
and
jns
jecxz
xchg
add
insl
push
hlt
pop
dec
push
mov
or
enter
sub
dec
mov
inc
sbb
pop
mov
or
iret
cltd
xor
movsb
mov
sub
add
jno
mov
mov
fstps
mov
fcmovb
jo
test
mov
out
stc
push
lcall
inc
push
stos
ret
mov
je
iret
dec
mov
pop
cwtl
pop
jge
push
xchg
shl
ficoms
sbb
mov
mov
sub
push
scas
jb
je
mov
jne
cmpsb
cmpl
fiaddl
inc
sbb
mov
lcall
mov
inc
sub
out
xchg
mov
mov
sti
cmp
jo
sbb
rorb
int3
xchg
pop
sahf
push
jecxz
pop
pushf
mov
mov
jnp
pop
push
imul
mov
xchg
cld
adc
xchg
add
mov
mov
cmp
jo
lods
or
loop
scas
js
or
push
sbb
sbb
clc
pop
pop
dec
inc
mov
orb
fildl
mov
bound
cli
mov
scas
inc
addr16
sub
push
aas
adc
jbe
xchg
pop
lds
inc
dec
pop
push
and
fsubrs
lds
out
int3
mov
out
sbb
sbb
jmp
fistl
mov
pop
lock
push
jle
xor
scas
push
orl
xor
pushf
push
sub
xor
scas
cmp
test
mov
pop
push
adc
sbb
xchg
and
nop
pop
xor
rcrb
in
hlt
stc
dec
pop
jp
mov
test
das
adc
sahf
scas
mov
or
dec
test
lret
xchg
cli
out
jnp
adc
sub
fs
ret
lock
jno
insb
jbe
sbbb
cltd
mov
cs
ret
sbb
add
sbb
mov
adc
push
dec
in
faddl
inc
lea
and
test
mov
or
cmp
mov
sbb
jl
stos
outsl
sbb
adc
push
hlt
rcll
push
inc
aas
inc
pop
je
and
xor
mov
xor
adc
ret
or
clc
adc
dec
push
push
iret
clc
pop
lahf
lds
clc
or
jb
lret
sarl
testb
fdivrl
jae
ss
jecxz
cmp
nop
mov
test
fwait
mov
inc
iret
js
push
jecxz
mov
call
add
jecxz
mov
leave
and
sub
or
les
jge
in
jecxz
inc
mov
push
pop
pop
xor
dec
ss
ds
out
call
or
aad
adc
dec
loope
ljmp
push
roll
movb
ja
inc
mov
xor
mov
mov
int
jecxz
inc
xchg
mov
xchg
mov
ss
movsl
rcl
lea
jb
inc
lret
shll
xor
xbegin
insb
mov
add
pop
sti
xchg
outsb
rcr
adc
mov
dec
or
lret
sbb
push
push
mov
add
xor
pop
mov
movsb
sbb
adc
xlat
inc
in
in
cmp
das
pop
mov
lret
fs
scas
sbb
pop
jbe
mov
dec
adc
cwtl
inc
cmp
jo
push
xchg
fwait
mov
push
mov
inc
pop
ficompl
aad
test
sub
fmul
xor
inc
imul
andb
mov
hlt
out
jno
cmp
mov
aas
adc
push
inc
pusha
pop
cs
and
rorl
daa
in
orl
scas
mov
loopne
idivl
clc
dec
insb
adc
dec
pop
fcoms
scas
sahf
ret
or
rclb
xchg
jns
jl
mov
es
cltd
pop
int3
das
scas
cmp
out
mov
test
stos
add
ret
fstps
mov
movb
fwait
into
aas
add
sbbl
xchg
fidivrs
pop
shl
ja
pop
lcall
in
clts
jp
movl
xor
loope
sub
aas
xor
iret
cli
cmpsl
inc
xor
aas
std
je
lock
or
adc
sub
adc
adc
cltd
or
das
push
or
push
fisttps
fmuls
add
nop
xchg
cmpsl
lods
js
xor
or
out
or
aas
in
mov
sub
mov
pop
adc
mov
mov
pop
mov
cmpsl
shl
cmp
mov
push
push
lret
addr16
cmp
lods
cmp
adc
ljmp
add
mov
ror
outsl
mov
dec
jo
and
into
push
movsb
push
lahf
mov
push
mov
cmp
sbb
and
xor
mov
and
gs
sbb
pop
push
fdivrs
out
jle
xor
out
outsl
mov
iret
nop
adc
mov
hlt
icebp
mov
mov
pop
dec
mov
into
inc
and
sbb
lock
mov
int3
adc
jne
sti
cmc
bound
out
sarb
fisttpl
js
inc
cmp
sub
pop
inc
cmpl
popa
fistps
jge
pop
idivb
xchg
mov
ret
test
cli
xchg
push
lods
adc
and
into
jmp
outsl
inc
mov
mov
ja
aaa
loop
fsubr
push
push
pop
dec
add
push
xchg
jg
arpl
xor
jb
lret
pop
mov
xor
push
imul
imul
jp
xchg
pop
repnz
add
xchg
adc
sti
cmc
mov
les
sahf
add
sbb
es
sti
mov
cld
jge
xchg
fsubrl
cmpsl
cld
in
pop
push
adc
push
addr16
push
mov
rcl
je
mov
repz
fwait
mov
movsl
mov
push
adc
xor
jecxz
cmp
inc
xchg
adc
mov
stos
or
add
pusha
push
dec
enter
mov
mov
rorb
shl
int
jg
sub
adc
fs
pop
rclb
pusha
xor
xor
cmpsl
int
and
mov
insl
adc
jb
xchg
push
pop
jne
sbb
fs
and
cs
push
out
mov
pop
popf
leave
dec
daa
mov
adc
pop
mov
inc
call
jno
lods
push
mov
lret
xor
pop
add
out
dec
dec
mov
jae
cmpsb
addb
push
mov
mov
jne,pn
ret
mov
addr16
stos
and
in
testl
cmp
inc
sbb
mov
xor
xor
int3
sti
lods
movsl
sbb
mov
or
mov
insl
xor
lcall
in
dec
leave
mov
insb
cmp
adc
xchg
push
mov
test
pop
sub
xor
stos
nop
xor
lahf
cmpl
jg
stc
inc
jo
or
lods
fs
adc
pop
out
jl
jp
sub
pusha
xchg
xorb
xlat
xor
dec
faddl
test
cmc
inc
daa
lret
or
jae
cli
insl
and
and
add
arpl
inc
sub
inc
das
shll
daa
popf
mov
jno
imul
ljmp
movsl
jno
mov
adc
sub
aas
idiv
nop
and
cmpsl
stos
xchg
add
sahf
dec
outsl
mov
mov
sub
xor
je
out
xor
or
insl
ret
mov
pushaw
sahf
idivl
pop
leave
iret
mov
pop
nop
mov
insb
jb
lcall
sbb
and
pop
mov
aaa
pop
cmp
jo
addr16
sbb
scas
daa
int
pop
dec
insl
add
xor
cmp
cmp
mov
push
and
shlb
ret
jmp
aad
in
sarw
loop
or
xchg
ret
lods
cli
inc
or
scas
jmp
cmp
in
pop
sbb
sti
inc
cli
cmp
fcmovne
jb
adc
mov
das
mov
in
mov
or
movswl
fiaddl
mov
pop
std
mov
sub
push
sbb
adc
mov
dec
xchg
scas
adc
scas
loopne
out
bound
cmpl
and
mov
jae
loopne
std
pop
imul
pop
push
cmpsl
push
cmp
test
aas
sbb
fdivl
aam
lahf
stc
cmp
pusha
stos
popf
aam
outsl
das
addr16
add
std
jo
dec
mov
sub
insb
jl
loope
shl
inc
mov
cmpsl
nop
push
sbb
daa
push
dec
xchg
ror
xorl
mov
aad
mov
inc
mov
arpl
mov
adcl
lods
pusha
sub
sbb
cmp
push
mov
sbb
fnsave
insl
xchg
inc
jl
pop
push
jbe
fwait
icebp
jge
cmp
mov
stc
ror
and
clc
adc
ja
mov
mov
insl
push
xchg
out
sti
out
ss
lret
jnp
pop
popa
mov
dec
inc
outsb
fistpl
inc
lods
jo
adc
cmc
jecxz
sub
fwait
inc
add
sti
mov
pop
mov
loop
rolb
ds
into
cmp
and
imul
ret
or
jmp
jmp
orb
sub
or
mov
les
pushf
imul
sbb
fistps
test
or
fs
sub
or
mov
mov
jns
push
imull
cmp
adc
jo
mov
enter
or
aaa
in
inc
leave
gs
les
insl
sub
movsl
clc
notl
popf
jae
inc
xor
xor
or
adc
outsl
push
shlb
in
adc
jmp
int
scas
xor
pop
je
stos
and
xchg
add
inc
imul
sub
push
mov
outsb
push
popf
outsb
movsl
cmp
mov
adc
pop
rorl
rolb
es
pop
cmpsl
in
sub
and
gs
sub
outsb
or
push
cmp
or
mov
les
frstor
in
mov
jp
dec
aam
insb
jns
dec
decb
jne
icebp
pop
stc
ret
cmp
xchg
xchg
out
pop
ret
push
xor
jmp
ja
scas
xchg
in
lock
bound
or
mov
lret
mov
fisubrs
rcr
and
dec
xchg
ds
and
ds
out
in
jge
mov
lcall
mov
and
or
sbb
or
xchg
inc
pop
dec
rolb
push
adc
loop
stos
cli
rorb
pop
ficoms
mov
mov
outsb
hlt
sbbb
test
fidivrs
fcmovne
nop
fdivrp
jge
pop
sti
stos
jns
ret
out
and
ja
fwait
test
or
xor
pusha
fadds
mov
cmp
jg
push
js
insb
cmc
jl
dec
lret
xchg
cmp
stos
xchg
lahf
push
adc
jl
jp
push
lahf
mov
bound
jmp
test
test
in
roll
repz
sbb
push
adc
mov
jno
pop
inc
popa
in
or
lock
je
imul
mov
ss
incb
gs
dec
cmp
filds
mov
sarl
add
lds
arpl
es
nopl
adc
cld
fisttps
idivl
mov
and
xor
mov
testb
or
sub
in
shl
adc
clc
hlt
adc
movsl
mull
inc
icebp
cmp
jmp
hlt
test
or
insl
cld
shr
std
dec
iret
cmc
fdivs
add
inc
bound
mov
sbb
inc
ss
les
mov
lea
push
mov
jbe
or
mov
lock
pusha
mov
cmc
gs
iret
jo
mov
pop
dec
loop
xor
cmpb
xchg
jg
stc
mov
fxtract
dec
inc
clc
rol
div
push
dec
push
xchg
xor
shrb
pop
xor
mov
cmpsl
jne
int
xlat
inc
fistpl
cwtl
mov
sbb
lcall
cwtl
cltd
jb
punpckhdq
xchg
scas
hlt
dec
sbb
loope
push
or
imul
in
dec
mov
push
cltd
mov
fmuls
add
mov
add
jp
lods
mov
popa
cmp
mov
in
ret
sbb
mov
aam
xlat
or
push
test
mov
test
daa
pop
pop
and
jmp
insl
daa
aam
inc
repz
inc
lea
adc
cmc
aam
jp
xchg
dec
repnz
lds
dec
gs
xchg
daa
ret
push
adc
or
test
popf
mov
jp
jmp
jle
xchg
cmpsl
mov
push
clc
cvttps2pi
lret
fwait
sbb
loope
or
pop
cltd
jg
xchg
out
inc
fxch
jmp
pushf
lahf
leave
rclb
fs
push
mov
cmpsl
enter
adc
or
pop
movnti
or
mov
add
push
add
fdiv
movl
loop
xlat
pop
push
mov
push
adc
lahf
repnz
sbb
or
mov
mov
test
inc
xchg
pop
and
movsb
fs
xchg
roll
push
inc
sub
les
xor
mov
xchg
inc
xchg
scas
sbb
push
mov
add
add
jl
es
loop
shrb
sti
mov
fists
jmp
push
loop
sub
or
mov
aad
hlt
jecxz
popf
aaa
sarl
mov
jnp
in
in
adc
inc
aaa
cmp
test
jle
enter
test
push
cwtl
icebp
cmp
mov
pop
sub
cmp
add
xchg
subl
xor
lock
or
test
mov
insb
fnstenv
jmp
dec
pop
push
jl
add
insl
jae
cmc
mov
jmp
mov
jl
push
ja
fmuls
pusha
xchg
inc
add
dec
jmp
inc
lods
cld
mov
mov
dec
pop
cmp
xchg
jl
lods
test
mov
jo
and
rclb
mov
add
cmpsl
sub
cmpsl
push
xor
fwait
aaa
cmp
adc
and
or
xchg
ljmp
int
js
movsl
and
cwtl
cmc
lods
and
pop
and
ret
pop
cmpsb
leave
add
xor
mov
push
add
into
decl
ja
mov
xlat
subb
shll
mov
popf
test
cmp
mov
outsl
jo
mov
xchg
push
in
jp
jmp
and
xor
loopne
pop
test
inc
lea
cmp
add
jl
adc
imul
mov
jae
cltd
test
loope
rcrl
jne
mov
mul
fistl
rolb
and
imul
mov
bound
mov
jb
rorb
push
int
dec
mov
sub
rcll
and
lret
jg
stos
dec
mov
insb
loop
hlt
xor
dec
mov
dec
dec
insl
cmp
jnp
outsl
daa
inc
add
adc
ljmp
fldcw
int3
shl
cltd
cmp
xchg
dec
pop
dec
and
adc
stc
cltd
mov
test
hlt
sub
mov
cmp
or
dec
push
xlat
dec
in
out
and
sbb
addr16
mov
xor
push
ret
sbb
fucomip
sbb
cld
icebp
in
rol
pop
push
cltd
sti
xorps
sub
insl
mov
addr16
fcmovnb
outsb
fcmovnbe
sti
dec
jae
sahf
sbb
decb
mov
mov
ret
mov
push
lret
jbe
pop
jle
jb
adc
daa
sbbb
loopne
sbb
aas
mov
xchg
sbb
pop
lods
add
fst
aaa
mov
sbb
sbbb
movsl
test
leave
iret
pop
in
jg
mov
push
test
xchg
leave
mov
dec
mov
add
dec
xor
inc
lods
ds
add
fs
dec
sub
mov
stc
scas
bound
ljmp
jmp
pop
or
dec
test
lret
or
outsl
testb
mov
add
xchg
sub
or
movsl
bound
nop
cmp
outsl
dec
fsubp
ret
push
xlat
in
pushfw
adc
sub
jmp
hlt
jg
and
test
mov
jp
adc
je
ss
fmulp
aad
jb
pop
jne
mov
rcrl
bound
movl
outsl
push
mov
data16
roll
popa
push
cmpb
fsubl
loop
push
cmp
xchg
adc
inc
mov
pop
mov
jb
pusha
cmp
stos
jg
fwait
adc
inc
push
push
xchg
pop
bound
cwtl
xchg
lods
hlt
mov
call
sbb
loopne
loopne
lock
sbb
rcll
loop
cwtl
das
aaa
fs
push
inc
cmp
loope
xchg
jnp
pop
jbe
fwait
mov
jns
bound
pop
je
call
cwtl
outsl
mov
cmpsb
jmp
scas
rorb
or
and
iret
js
dec
mov
sbb
lcall
pop
int3
xchg
mov
outsl
hlt
adc
popa
pop
ss
cltd
ds
mov
xchg
in
fldenv
mov
imul
pop
lock
or
jle
sbb
xchg
pop
in
lret
pop
xlat
cli
cmc
cli
shl
shll
sub
sahf
cmp
push
jnp
arpl
sub
push
popf
inc
sahf
fidivl
sbb
inc
in
xor
dec
es
pop
jo
ja
sbbl
rclb
imul
jae
add
mov
cmp
and
mov
ror
pushl
mov
rcrl
push
ljmp
xchg
and
out
push
or
xor
inc
lock
dec
pop
jmp
push
jg
pop
dec
roll
fcoml
push
sti
sbb
sub
jp
mov
movsb
movsl
cmp
aam
outsl
xor
push
sbb
sub
xorl
popa
pusha
jo
cmp
aam
andb
lods
xor
movsl
push
or
jns
mov
sub
sbb
mov
mov
out
inc
mov
enter
imul
sbb
es
arpl
inc
add
mov
fwait
das
cmp
xor
and
or
lcall
cmc
fldenv
mov
or
ret
popa
cwtl
jb
jl
iret
or
jecxz
or
push
popa
dec
cmpsb
negb
popf
cmp
jg
mov
dec
pop
mov
xchg
cld
pop
pop
inc
add
mov
mov
cld
rcl
int
xchg
dec
sub
lock
rclb
lods
data16
push
js
pushf
or
cli
fwait
xchg
frstor
lods
push
lods
ljmp
push
in
cmpb
add
add
ror
imul
dec
jne
add
scas
xchg
sbb
sub
push
ret
rcll
inc
push
xor
jns
negb
fidivrs
sub
sbb
or
inc
sub
push
push
sub
and
mov
inc
loopne
pusha
pusha
inc
test
or
imul
cmpsb
dec
push
in
ret
xchg
out
mov
imul
aas
mov
lret
jl
jne
pop
outsb
xor
imulb
sub
sarl
ret
xchg
lret
lret
inc
jl
aaa
xor
sbb
sub
cltd
movsb
xor
cmp
add
inc
popf
mov
movsl
loopne
add
xor
mov
fisttpl
lret
inc
lcall
arpl
cmp
xchg
sub
ja
jge
pushf
fdivrs
inc
push
inc
xchg
push
xchg
dec
enter
ljmp
add
jmp
dec
nop
jmp
push
adcb
sbb
xchg
dec
inc
insb
sbb
cli
incl
ljmp
stc
jne
cmpsb
gs
in
sbb
mov
jb
pop
inc
test
mov
mov
shl
sub
ret
gs
mov
mov
cmp
adc
lcall
stos
adc
sub
xchg
rolb
mov
cmp
sbb
push
jns
imul
lret
cs
and
shll
cltd
call
and
repz
movsb
into
fsubrp
jo
fwait
xchg
inc
out
sub
mov
push
dec
cltd
pop
mov
cltd
sbb
into
enter
jns
cs
push
in
xor
or
icebp
jo
mov
xor
lods
mov
popf
fisubl
inc
lret
mov
xorb
sub
push
mov
xor
xchg
scas
lods
xorl
add
dec
sub
mov
jo
pusha
add
dec
cli
mov
fpatan
or
jge
and
add
ret
pop
movb
jle
mov
es
das
and
loop
push
fisttps
pop
loope
push
sbb
cli
sub
lods
lods
xor
jge
fwait
inc
aad
ljmp
adc
arpl
add
jge
cmp
pop
hlt
sub
pop
push
loop
sub
jle
ret
cld
mov
idivb
or
popa
add
aad
jb
jl
sub
xorb
xlat
and
popa
pop
rcr
popf
popf
in
mov
data16
decl
push
cmc
jno
fwait
pop
inc
push
addr16
repz
inc
mov
daa
fwait
popl
jo
and
pop
add
rolb
addr16
cmp
dec
push
hlt
dec
inc
call
mov
cwtl
test
push
loope
icebp
push
es
add
cltd
pop
pushf
shll
push
cli
jnp
ret
add
xor
xchg
scas
xchg
push
loope
jge
or
test
dec
aaa
dec
dec
sbb
mov
imul
mov
sahf
mov
fwait
cwtl
xchg
sbb
push
mov
cmp
lea
pop
lcall
test
pop
mov
sbb
dec
jae
pop
repz
or
cmp
mov
jge
imul
lds
dec
xor
lcall
mov
sbb
jmp
out
fistl
xor
pusha
lahf
ljmp
pop
push
sbb
sub
dec
test
call
sysexit
xchg
imul
jb
jbe
jl
lcall
mov
mull
xchg
inc
popf
in
faddp
dec
gs
orl
fucom
sub
imul
sub
adc
mov
aad
push
jg
pop
sahf
in
jne,pn
mov
imul
and
pop
adcl
sub
sahf
arpl
adc
jle
test
lcall
adc
scas
jne
ss
adc
or
sbb
cli
pushf
test
pusha
mov
je
aam
cmp
jb
in
loopne
sti
sub
ss
and
lds
lods
fucom
push
add
cli
or
test
and
fimuls
mov
dec
pop
mov
xchg
cmpsl
icebp
dec
into
sub
test
mov
xchg
mov
mov
lods
out
xchg
inc
out
outsb
push
cmpsb
pop
push
mov
out
cmp
loope
xlat
ret
in
mulb
and
in
loop
cmc
je
mov
shll
push
sbb
fdivr
cli
xchg
insb
xchg
jno
dec
insl
push
xor
add
bound
inc
adc
pusha
add
ret
fucomip
movsl
mov
aas
dec
or
mov
addr16
dec
sub
jmp
mov
xor
mov
add
xchg
fsubs
gs
dec
xchg
shrl
adc
jbe
imul
xlat
mov
mov
test
xor
ret
xchg
imul
ljmp
stos
push
mov
call
adc
add
stc
and
inc
testl
mov
inc
mov
jecxz
es
shll
cmp
pop
cmpsb
cmpb
dec
dec
pop
mov
or
fwait
mov
cli
push
aad
addr16
push
push
jnp
xor
pusha
inc
arpl
pop
and
or
aas
outsb
xorl
popa
and
test
cmpsb
lds
gs
xor
mov
xchg
push
fwait
test
or
inc
xchg
inc
or
jnp
repnz
addr16
jbe
mov
sbb
adc
in
stc
iret
xchg
in
test
test
or
jle
ret
sbb
lcall
jg
push
jp
inc
mov
scas
fcoml
ja
hlt
sarl
cmovb
ds
push
and
sbb
das
sbb
cmpsb
test
mov
test
xor
jbe
pop
mov
lcall
or
jle
scas
imul
fisubs
push
xchg
hlt
gs
push
sub
sarb
pop
mov
or
dec
pop
jecxz
jmp
xchg
enter
cwtl
add
hlt
inc
pop
sbbl
lock
mov
imul
sub
popf
popa
aaa
cmp
jle
cmpsl
nop
xchg
cmc
repz
sbb
ret
iret
inc
adc
adc
adc
and
lret
rcl
testb
enter
pushf
jl
inc
insl
adc
cmc
lds
cmc
dec
scas
adc
add
repz
cmc
add
inc
or
fcompl
mov
fldl2t
push
insl
xchg
imulb
insb
inc
dec
inc
cmp
cmp
inc
pushf
mov
cld
and
cmpsb
push
es
pop
daa
mov
aas
daa
inc
daa
adc
ret
ficompl
std
sub
cmp
lret
pop
inc
mov
iret
sbb
dec
jp
cli
fdiv
call
les
in
mov
pushf
jns
out
pop
pushf
stos
mov
mov
mov
enter
xor
out
popa
mov
push
ret
cmp
sbb
pushf
ds
loope
push
sbb
mov
jecxz
sbb
cli
add
aam
lea
mov
mov
adc
out
push
mov
enter
add
mov
mov
rcr
je
int
mov
iret
cld
scas
enter
jns
and
adc
mov
inc
cmc
shll
sbb
gs
in
loop
mov
notl
sarl
leave
mov
das
sbb
ret
xchg
and
pop
xor
in
sbb
aad
cld
mov
xor
sub
in
repz
mov
dec
xchg
jns
loop
lds
pop
outsl
mov
lods
icebp
pushf
mov
hlt
mov
lcall
shr
cmp
outsl
xorb
mov
loop
xor
sub
iret
pop
inc
lock
cmp
add
mov
ds
mov
dec
ret
das
cmpsl
xchg
cs
add
mov
sbb
sub
pop
sub
mov
sarl
dec
adc
mull
sbb
adc
pop
lahf
orb
mov
movb
add
mov
addr16
dec
and
jbe
out
stc
fwait
in
inc
sahf
xchg
inc
scas
cmpsl
jmp
into
in
cmp
xchg
inc
xchg
repz
pop
fdivrp
ja
test
int3
fildll
xchg
shrb
cmp
jno
xchg
cmp
sub
xchg
mov
xchg
test
mov
mov
gs
test
pusha
adc
in
mov
in
push
negl
outsl
fwait
dec
ficompl
das
push
ds
and
std
jmp
test
ret
jno
push
push
aaa
add
mov
outsl
cltd
and
sar
sahf
imul
in
mov
and
flds
out
call
shrb
daa
mov
xor
or
jmp
mov
adc
movzwl
mov
jle
dec
or
ret
hlt
jge
adc
enter
fsub
loope
in
dec
mov
pop
xchg
pop
mov
and
xor
xchg
jle
mulb
xchg
ja
pop
pop
lret
dec
mov
mov
mov
ds
or
gs
pop
jae
jae
inc
mov
lcall
sahf
mov
std
or
daa
jbe
fisubrl
mov
in
push
repnz
aad
mov
subl
and
cmp
mov
das
xlat
or
pop
fs
dec
roll
test
cmpb
dec
hlt
fidivl
pop
call
imul
pushf
movl
ljmp
cmp
das
gs
cmp
pop
clc
add
cld
sbb
call
loop
repz
xor
icebp
int
inc
cmp
jo
fldz
jg
xor
sbb
jl
stc
xor
jns
js
call
add
cmp
and
js
or
mov
inc
add
dec
jo
lods
and
xor
xchg
sub
push
arpl
lret
xor
lahf
jo
xor
in
xor
sahf
jne
inc
in
adc
jno
cltd
inc
aas
out
icebp
inc
sbb
ret
xlat
add
je
sbb
and
jmp
lea
pop
js
xor
std
dec
cmp
ret
xor
mov
or
sahf
int
and
mov
or
stos
push
dec
orb
dec
push
sti
mov
lea
mov
enter
mov
push
addr16
sbb
mov
repnz
iret
iret
hlt
pusha
mov
dec
mov
push
ljmp
push
out
ss
bt
or
mov
sbb
xchg
pop
dec
push
mov
test
jl,pn
push
sbb
xchg
shlb
add
xor
and
in
scas
push
xchg
xchg
inc
scas
rcrb
mov
xchg
sahf
adc
das
aas
and
aaa
popa
int
ror
jp
cwtl
jp
mov
scas
ds
cmp
add
push
fwait
sub
stos
jmp
cs
lret
fstl
icebp
mov
sbb
in
mov
std
cmpb
mov
sub
ja
mov
cmpsl
sub
shll
push
cmp
ret
vrcp14pd
mov
outsb
mov
xor
add
add
fxch
subb
insb
mov
fldcw
cmc
shlb
ds
dec
inc
jecxz
mov
push
sub
xor
cltd
pop
xlat
cmpsl
jns
mov
rorb
in
aaa
and
cmp
fsub
push
mov
xchg
nop
in
xchg
scas
or
push
push
xor
notb
lds
pop
inc
mov
jne
jne
dec
fwait
sub
out
lahf
in
insl
bound
adc
and
lock
mov
jecxz
mov
push
in
add
and
mov
inc
test
frstor
sbb
jb
call
mov
jae
dec
jmp
jp
mov
dec
mov
pop
dec
jecxz
fists
jnp
xor
insl
cwtl
sbb
es
xor
cmc
and
pop
push
adc
sbb
push
cmpsl
mov
mov
cmp
out
int3
ret
dec
inc
jo
push
jle
loopne
sub
pushf
dec
daa
jnp
cmc
inc
inc
lret
mov
fcomp
dec
mov
ficompl
rclb
int
pop
gs
lds
test
add
imul
jbe
fiaddl
movl
in
iret
add
rcrl
jns
pop
js
lret
add
dec
add
jmp
or
mov
jne
lret
inc
pusha
mov
rorl
rdtsc
adc
sbb
cltd
rorl
and
hlt
daa
js
mov
loopne
xchg
pop
mov
jnp
aas
dec
add
mov
stc
jg
mov
ljmp
pop
cmp
inc
xchg
and
sub
xlat
gs
pop
pop
popa
cmp
and
dec
mov
and
aas
shll
cmp
mov
rorb
ds
sub
icebp
xor
inc
add
fldcw
fwait
insb
xchg
adc
sar
mov
push
addr16
outsb
push
cwtl
jge
fstps
mov
lods
scas
push
arpl
ds
insb
sbb
sarl
mov
xchg
sub
fwait
sub
mov
rclb
sbb
cltd
push
mov
jle
add
data16
xchg
or
mov
xchg
out
leave
ret
and
scas
xchg
or
sub
fnsave
push
shll
xchg
lods
test
cltd
sub
gs
mov
xchg
add
push
mov
pop
or
xchg
and
aam
xor
icebp
or
mov
xchg
das
jle
and
pusha
jge
in
nop
clc
ficomps
pushf
iret
add
loopne
xor
xchg
divl
xor
push
push
sbb
xor
lods
icebp
dec
mov
push
mov
push
int
mov
pop
jge
xor
cmp
aad
push
jae
and
xchg
fs
popf
loop
test
icebp
push
std
adc
xchg
xchg
aad
lcall
sbb
push
mov
mov
mov
popf
mov
cltd
adc
mov
mov
add
mov
and
push
ret
mov
xor
mov
pusha
adc
mov
loopne
inc
jbe
jae
mov
xchg
mov
cmp
inc
adc
mov
sub
movsl
pop
fwait
jae
push
sub
sbb
mov
mov
xchg
sbb
call
adcl
add
leave
dec
ljmp
sahf
and
adc
std
xor
ffree
add
jns
adc
sti
mov
int3
and
ss
mov
mov
jmp
in
sbb
or
xchg
les
push
inc
movsb
ds
cmp
frstor
mov
pusha
mov
jmp
stos
jne
aaa
aaa
fistps
scas
inc
fbstp
repz
jo
dec
insb
mov
push
xor
enter
pusha
loopne
outsl
mov
jge
cmc
lret
outsl
test
insl
bound
push
ficomps
jg
pop
jo
dec
popf
aaa
push
std
push
mov
push
imul
sbb
mov
sbb
adc
les
repnz
lea
jae
dec
sub
xlat
mov
lcall
xchg
pusha
cld
jmp
cli
or
popf
xor
push
and
pushf
lock
add
addl
xchg
sbb
insb
xchg
mov
jnp
test
jnp
insl
dec
pushf
add
jns
jmp
dec
lds
div
mov
adc
scas
inc
sbb
add
push
iret
add
in
in
jno
push
mov
pushw
sti
push
pop
push
pop
and
push
jb
add
push
das
cmc
adcl
aam
scas
or
ss
cmp
pop
repz
andb
ja
jge
mov
lods
sahf
mov
in
sbb
mov
xor
loopne
mov
rcrb
jle,pn
cwtl
into
mov
inc
in
mov
mov
rorb
inc
rolb
cmp
xor
jp
push
std
int3
push
imul
aas
and
and
sbb
add
cmp
push
push
and
aad
int3
test
das
bound
inc
test
popa
mov
mov
push
xchg
xchg
dec
mov
mov
xor
or
pusha
or
mov
lds
pop
cwtl
sbb
add
mov
mov
inc
shll
jns
daa
icebp
mov
jne
lret
mov
jno
sbb
or
arpl
mov
inc
bound
push
inc
lahf
outsb
mov
sub
jno
repz
mov
mov
inc
test
rolb
arpl
jno
icebp
gs
das
ret
lods
pushf
adc
dec
daa
xor
int3
in
mov
pushf
mov
fsubrl
xlat
enter
pop
mov
pop
scas
mov
or
scas
adc
jnp
pop
ja
xor
pop
push
inc
loopne
neg
jnp
test
scas
int
in
leave
push
imul
in
mov
sub
mov
test
xor
adc
cmp
lret
ds
xor
movsl
insb
xor
cmp
andl
push
gs
xor
fcompl
mov
inc
dec
sbb
ss
mulb
popa
test
xchg
jmp
pop
int
fiadds
cwtl
lds
aas
cmp
add
pusha
pusha
mov
pop
fsubrl
push
push
jge,pt
pop
mov
int3
xchg
mov
dec
dec
add
and
mov
push
repnz
push
loop
cmp
movsb
std
sbb
lret
and
or
xchg
scas
mov
andl
cli
cltd
mov
repz
fildll
fdivrl
nop
inc
mov
inc
aaa
repz
mov
fcoml
je
cmp
jecxz
arpl
cmp
mov
inc
pop
add
mov
aaa
in
pop
test
xchg
es
xchg
data16
call
loopne
xor
les
xchg
gs
out
out
in
and
addl
lahf
in
out
jg
push
xor
psrad
and
jecxz
mov
repz
sub
inc
test
mov
cmp
pop
mov
push
push
cli
push
inc
jle
push
xchg
push
fimuls
pop
cs
addl
pop
xlat
das
rcrl
sar
orb
and
mov
movsb
insl
jnp
dec
or
dec
dec
cmp
mov
repz
addr16
daa
cwtl
pop
stos
or
call
push
jg
mov
andb
out
push
imul
mov
xor
dec
or
lret
mov
ficoms
in
movsl
jle
test
out
int
mov
ss
and
in
test
cmp
jge
jne
shlb
dec
xorb
or
mov
xchg
insb
cmp
dec
fadds
xor
pop
cmc
in
inc
mov
pop
and
enter
adc
dec
pop
add
push
roll
cs
adc
popf
mull
insl
out
sbb
fwait
mov
out
lds
rcrb
cmc
popa
sub
into
pop
cmp
xchg
pusha
loop
jno
mov
cmp
ja
pop
xchg
lret
adc
cmp
mov
adc
cmpsb
dec
or
daa
orb
cld
push
pop
xor
in
jge
inc
adc
cwtl
movsb
dec
mov
adc
jle
aam
fucompp
inc
push
aam
sbb
cmp
imul
inc
lds
xchg
iret
mov
mov
xor
and
idivb
orl
push
jp
into
int3
jb
sbb
xchg
imul
out
mov
imul
adc
addr16
test
jnp
adc
pop
jae
fldenv
lods
lret
icebp
lahf
aam
add
xorb
sahf
and
dec
mov
mov
or
xchg
push
mov
push
pop
scas
pop
push
cmp
insl
mov
push
test
fsubp
in
xchg
sbb
xchg
sbb
and
aaa
sub
inc
mov
rorb
add
pop
adc
and
mov
bound
shl
ja
sub
xchg
pop
push
lods
mov
jne,pn
adc
rclb
mov
mov
fistps
jae
inc
insl
leave
xchg
ds
ljmp
sti
rcll
cmp
xor
push
bound
int
lcall
nop
jno
stos
stc
xor
gs
gs
pop
jns
or
adc
pushf
ss
add
cwtl
sahf
xchg
mov
scas
or
ljmp
pop
mov
dec
cmp
in
pop
add
insl
dec
mov
js
loope
out
mov
in
roll
and
cltd
ljmp
jl
cmpsl
data16
mov
sub
jne
and
mov
mov
add
inc
mov
sub
xchg
pop
scas
addl
mov
cwtl
shll
mov
inc
aad
or
push
pop
or
xchg
icebp
add
mov
pop
ret
mov
pusha
pop
pop
into
div
mov
lea
sahf
xlat
cli
mov
repz
jae
lods
iret
jp
jo
into
icebp
dec
ret
sub
rorb
mov
out
mov
xor
lahf
jle
outsl
and
inc
loope
dec
inc
mulb
iret
pop
pop
dec
je
addr16
cmp
iret
call
adc
lods
mov
inc
adc
jecxz
mov
lods
ja
dec
stos
xor
sbb
lret
out
xor
repnz
add
bound
xorb
mov
shrl
mov
sub
out
sbb
cmp
or
ret
lret
push
cmp
sub
push
lret
cld
loopne
push
in
sub
shll
ficompl
xor
mov
xor
gs
push
cmp
lods
fisttpl
and
mov
mov
mov
or
outsb
dec
dec
dec
data16
jle
ljmp
movl
push
outsb
fsubp
mov
sub
inc
sbb
in
sbb
cmpsl
mov
cld
or
js
loop
push
test
or
test
xor
jmp
ret
sub
add
or
dec
and
stos
lock
fwait
sarb
and
int3
jne
inc
roll
jle
sbbb
lods
push
addl
jl
mov
loopne
push
xor
lds
fisubl
rcrb
xchg
jl
rorl
pop
xor
mov
and
insb
adc
scas
and
mov
loope
jbe
push
pop
cmpsl
cmpsl
punpckhbw
setp
cmp
enter
scas
cmp
xor
adc
fisttpl
sub
dec
sti
sbb
cmpsl
mov
dec
ljmp
mov
mov
adc
and
out
push
ret
icebp
xchg
pop
mov
stos
js
cmp
mov
dec
cmc
mov
insl
jle
mov
xor
xor
insb
cltd
andb
daa
or
rclb
cmp
out
mov
fmuls
sbb
cli
jecxz
sbb
sbb
mov
push
enter
jo
mov
daa
cmp
xchg
lcall
stos
inc
and
fcoms
adc
jecxz
pop
xlat
fisubrl
lods
mov
mov
xor
push
lods
loopne
mov
push
inc
push
lret
inc
test
mov
insl
push
mov
sbb
data16
fbstp
fst
adc
cmpsb
bswap
out
ret
push
sub
push
test
fs
test
mov
int3
pop
and
dec
mov
add
lret
fwait
in
fdiv
mov
pop
sbb
sub
das
shl
cwtl
aas
fbstp
mov
test
mov
fsubr
dec
rorl
movsl
xadd
jg
xor
lea
jp
and
mov
clc
jno
pop
cmp
vsqrtps
cli
js
mov
ds
iret
mov
cmp
sbb
sarl
shrb
notl
jae
xchg
pop
stos
mov
lahf
insb
cwtl
sub
dec
cmp
call
stos
lock
xor
std
jmp
mov
sub
addl
jecxz
cs
sti
jl
mov
sub
and
pop
movsb
pusha
ud2
cmc
jecxz
xchg
jno
and
jle
inc
sbb
or
xor
cmc
popf
sub
xchg
fwait
xchg
fbld
repz
imul
adcb
mov
loopne
loop
addr16
fcoml
shrl
xchg
inc
push
ss
hlt
inc
lcall
or
iret
and
xchg
insb
sbb
adc
mov
sar
cmpsb
pop
clc
subl
push
repnz
push
and
aad
jle
repz
out
cld
xchg
pop
mov
push
lods
mov
ret
xchg
popf
sbb
shrb
push
jl,pn
ffree
stc
cmpsl
dec
fmul
scas
mov
or
add
mov
fwait
stos
je
lea
cwtl
addr16
xlat
inc
icebp
mov
lcall
or
sbb
scas
jge
shl
jle
dec
mov
mov
adc
mov
jl
aas
push
lods
out
mov
inc
cmp
cmp
imul
cmpsb
sarb
sbb
or
jmp
popa
add
int
jns
aas
andb
pop
jns
inc
lahf
xchg
aad
dec
jg
xchg
pop
push
iret
push
or
adc
sbb
cli
push
sbbl
popa
insl
inc
ljmp
fstpt
lods
lds
inc
sarb
mov
push
xor
push
popa
inc
jle
lret
and
jle
fld
jne
jno
adc
lcall
jge
adc
push
pop
insb
enter
sub
inc
cmp
hlt
in
test
gs
inc
enter
test
dec
adc
push
js
mov
rorl
push
jo
pop
cmp
cmc
or
xor
xchg
ss
fistpl
cwtl
fwait
sub
rol
and
sbb
int3
inc
push
add
jl
stos
data16
dec
out
xchg
andb
nop
mov
push
cmp
push
test
dec
mov
sbb
and
inc
shll
jne
dec
repz
xorb
mov
mov
cbtw
and
xchg
loope
repz
push
mov
pop
dec
mov
push
pusha
shlb
dec
jns
sbb
clc
rclb
daa
sub
aam
xor
insl
xchg
mov
mov
mov
imul
push
or
je
cld
aaa
mov
fistps
pop
xchg
push
gs
scas
lock
push
xor
inc
ret
daa
add
xchg
inc
rcrb
aad
add
mov
xchg
jae
mov
adc
mov
mov
mov
mov
gs
mov
jbe
les
data16
xchg
jae
mov
jecxz
add
aas
mov
pusha
imul
jnp
mov
pushf
mov
sub
mov
ret
sub
mov
addl
stc
loope
ffree
sahf
or
mov
jo
adcb
gs
cltd
lret
push
pop
pop
mov
mov
jb
subl
rorb
mov
mov
shrb
mov
or
stos
inc
fistpl
jbe
imul
cwtl
push
lds
sub
and
les
cwtl
pop
fildll
mov
jp
cmp
adc
lahf
cmc
dec
rclb
clc
mov
test
loop
test
or
les
cmpsl
or
xor
jo
test
ret
repz
insl
pop
mov
mov
jo
loope
add
subb
out
icebp
pop
xor
sbb
pop
mov
stos
push
call
sti
add
movsl
dec
jne
lods
cltd
inc
subb
aad
pop
sub
clc
aaa
outsl
sbb
pop
aas
adc
ds
inc
out
push
xchg
roll
xchg
xor
xor
insb
nop
popa
adc
enterw
fsub
jl
stos
adc
btcl
jp
xor
shr
or
cmp
scas
push
sbb
mov
sub
popa
into
std
orl
sbb
inc
outsl
mov
or
jecxz
fs
cvtdq2ps
adc
pop
adc
scas
lods
cmpsl
jecxz
orb
sbb
xor
dec
add
push
in
repz
jae
std
sub
sbb
mov
or
dec
icebp
sbb
xchg
fldenv
fiadds
mov
mov
pop
je
xor
pop
sub
lock
sub
ss
sbb
gs
mov
push
repz
lds
inc
fldl
cmp
cmp
in
mov
int3
xor
cmp
shrl
xchg
arpl
cmp
ja
mov
fwait
js
stos
ss
mov
in
jg
mov
aas
mov
mov
pop
add
and
push
fwait
mov
or
dec
and
xor
or
js
lea
jo
loope
or
nop
fwait
cmpl
xor
das
into
mov
cs
fdivp
jmp
xchg
adc
cld
lar
lock
or
test
mov
or
xor
dec
arpl
stc
in
int
ret
cli
jl
cwtl
adc
dec
nop
mov
in
mov
and
sub
fwait
stos
ja
movsb
stos
pop
pushf
in
pop
inc
and
jmp
stos
mov
push
push
push
rolb
and
fsts
dec
frstor
sbb
ficoms
rolb
jl
cmp
lea
cli
loop
mov
and
mov
mov
push
add
insl
inc
stos
cmp
jmp
add
in
or
push
sbb
stc
adc
aam
adc
push
fdiv
sbb
xchg
mov
decl
mov
inc
cwtl
mov
ss
jnp
loope
rorb
or
lea
fildl
jmp
jecxz
sbb
sbb
pop
and
jmp
pusha
sbb
push
adc
aad
inc
into
enter
cld
subb
outsb
idivl
and
test
xchg
mov
or
dec
stos
cmp
imul
das
pop
scas
out
xchg
repnz
push
xchg
icebp
mov
mov
ret
cmp
int3
loopne
cmc
int
notb
jge
sub
adc
lds
inc
loop
adc
outsb
in
dec
jle
je
loop
add
lds
shlb
imul
xchg
sub
add
mov
gs
add
loop
ret
andps
xchg
das
fsubrl
mov
push
movsb
cmc
xchg
sbb
loopne
jne
loop
xchg
orb
xor
adc
xor
fdivl
cs
test
jl
rol
jl
pop
data16
push
push
inc
jbe
and
or
and
mov
pop
out
mov
mov
dec
jae
xor
fidivl
xchg
mov
cmp
fdivs
and
arpl
imul
push
jg
and
xchg
inc
out
inc
jbe
cmc
pop
cs
out
fdivrl
outsl
cli
push
clc
xorb
cmp
pop
aam
cmp
sbb
aas
lgs
or
cmp
jne
js
cltd
int
pop
push
mov
lea
sub
les
push
fscale
or
dec
mov
push
repz
sbb
pop
xor
mov
xchg
mov
popa
push
push
icebp
add
imul
mov
cmp
cmp
or
push
push
jmp
dec
pop
push
and
xlat
sbb
sub
adc
out
cmpsl
or
mov
pusha
mov
xchg
repnz
mov
or
lods
aas
shlb
add
lcall
fisubl
xchg
test
cltd
mov
cwtl
mov
lret
pop
push
xchg
and
push
mov
les
or
xchg
hlt
push
jae
popa
and
dec
shll
and
cld
iret
jp
push
or
jl
sbb
cmp
in
sub
inc
pop
mov
jb
movsl
loope
shlb
cltd
and
adc
dec
adc
push
dec
test
sub
add
push
pusha
cmc
sub
inc
popa
inc
outsb
popf
push
sbb
cmp
dec
or
mov
jp
mov
sbb
adc
inc
pop
mov
jmp
push
dec
fnstsw
jbe
outsb
push
test
inc
jge
ret
add
nop
xor
sti
rclb
pusha
rsqrtps
ja
push
sub
or
jle
popf
mov
dec
imul
sahf
test
sahf
pushf
mov
test
inc
outsb
mov
adc
sub
test
adc
mov
mov
mov
int
jnp
insl
add
mov
std
test
add
loope
daa
cltd
test
or
int3
xchg
cmpb
sbb
cmp
pop
jge
es
fld
sub
mov
cltd
and
mov
mov
lahf
pop
in
sbb
ret
mov
lcall
stc
movsl
cld
stc
scas
push
out
js
icebp
cmc
stos
cwtl
popa
lods
cmp
jns
insb
mov
xlat
aad
movsl
inc
les
adc
dec
rcrb
add
sub
clc
popa
loop
outsl
sub
pop
aaa
and
mov
push
jno
inc
mov
bound
inc
pop
xchg
push
mov
insb
jnp
adc
icebp
in
jg
repz
in
sbb
test
add
bound
inc
cli
jbe
popf
aad
push
push
dec
and
lret
jnp
and
jl
mov
leave
sub
in
jle
pushf
push
loop
cwtl
ret
mov
mov
jmp
mov
mov
in
xchg
pop
outsl
xor
sbb
popa
test
mov
sbb
push
pop
mov
jb
jns
jmp
jmp
and
repz
loope
fnstenv
and
xchg
mov
push
mov
dec
rcrl
or
pop
sbb
jmp
xchg
stos
inc
pop
pusha
xchg
dec
popa
dec
scas
test
in
pop
pop
mov
ret
jo
inc
xchg
loope
sbb
pop
add
sti
mov
pop
stos
addl
divb
into
dec
inc
mov
sti
sbb
push
das
mov
inc
loope
lret
sub
sahf
xchg
ljmp
sbb
cmp
cs
mov
jmp
pop
jge
inc
pushf
lea
mov
pop
test
std
pop
stc
or
fisubrl
mov
push
lea
sbb
adc
adc
aam
cmpsb
jae
test
int
mov
inc
insb
pop
stc
mov
push
jecxz
sti
and
inc
mov
gs
sub
inc
pop
or
pop
mov
ror
mov
sbb
adc
mov
fs
fs
sub
scas
stos
mov
ficompl
add
lret
and
and
mov
lahf
or
xorl
mov
and
pop
outsl
jmp
jne
adc
pop
jg
xor
bnd
lret
sahf
or
out
js
out
cs
mov
push
push
xlat
pop
out
pop
mov
xor
mov
adc
pop
jp
push
lahf
loopne
pusha
xor
push
or
push
jne
icebp
jecxz
xor
inc
mov
push
cwtl
add
pop
mov
fst
jle
paddq
into
mov
jne
cmp
inc
jl
icebp
mov
inc
xchg
iret
mov
lahf
inc
inc
pop
or
jge
repz
popf
into
arpl
popf
int3
xchg
mov
cmp
mov
imul
call
pop
mov
xchg
sbb
pop
ljmp
push
cli
mov
or
out
or
js,pn
push
lock
xchg
mov
sub
and
jns
and
mov
shlb
aas
scas
jne
loopne
outsb
push
gs
je
pop
push
hlt
lcall
lods
fwait
adc
cmp
test
add
ret
call
sub
mov
popf
xor
or
xchg
add
and
and
inc
mov
fisubl
nop
ficomps
and
xchg
sahf
sub
call
sub
dec
mov
mov
in
cmpsb
bound
cmpsl
inc
inc
add
jle
movsb
xchg
jne
mov
or
inc
inc
sub
es
mov
push
sbb
loope
lds
cmp
test
nop
fs
call
xchg
xor
add
and
adcb
adc
outsl
push
mov
test
hlt
fnsave
fisubrs
dec
inc
cmp
dec
arpl
mov
mov
repz
pmaddwd
fidivs
aaa
sub
mov
mov
jo
cmp
bound
cmp
or
inc
paddsb
pop
sbb
and
push
dec
mov
mov
jns
mov
pushf
das
call
dec
jnp
repz
sub
jno
xor
sbbl
sbb
mov
push
insb
and
rorl
add
cmp
int
cld
cltd
insw
adc
or
inc
dec
mov
scas
and
nop
outsl
rcr
sub
stos
sub
cmpsl
mov
jge
ds
stos
jecxz
inc
sub
int3
push
pop
mov
ds
ljmp
ss
jb
mov
aas
push
xor
sahf
loop
or
cwtl
aad
add
mov
leave
add
popf
das
mov
pop
and
mov
aas
popf
sti
or
dec
adc
enter
int
and
aad
popa
xor
aam
add
jecxz
sbb
add
fistl
add
inc
push
sar
adc
stc
adc
stos
xor
add
jge
mov
scas
sub
stos
popl
dec
mov
mov
rolb
xchg
mov
shlb
cmp
mov
dec
sbb
push
fs
test
adc
add
xchg
and
add
scas
or
inc
add
dec
jp
mov
mov
push
gs
pop
pop
popf
xor
mov
mov
cmpsb
ret
mov
xor
fwait
inc
or
push
and
jl
or
add
pop
fbstp
cmp
jb
sub
pop
jg
mov
stos
test
popf
jno
jae
xchg
pop
push
xor
stc
ficomps
or
inc
inc
mov
clc
sarl
adcl
cmp
ja
outsl
pop
or
and
data16
jb
data16
mov
cmp
mov
test
iret
ljmp
add
ficoms
push
mov
stos
add
jg
mov
pop
mul
shr
inc
xor
outsb
and
mov
push
dec
es
into
stos
loopne
cs
xor
mov
pop
mull
scas
loop
insb
xchg
inc
mov
jl
lods
stos
subl
data16
mov
cmp
jp
mov
push
shlb
xor
push
jp
dec
pop
cs
jp
inc
ror
mov
sbb
cmpsl
imul
int3
jnp
aam
cmp
lahf
mov
mov
ja
aad
and
ja
adc
iret
out
pop
ljmp
or
mov
adc
test
fs
pop
sbb
hlt
dec
dec
incl
arpl
mov
lret
cmp
cmp
je
jmp
mov
inc
or
sbb
test
cmp
xchg
mov
lods
jle
ja
shl
xor
rolb
lcall
clc
aas
in
int3
icebp
push
ficoml
das
xor
lahf
aaa
cld
push
into
inc
push
add
call
cwtl
sti
sub
into
rcrb
sahf
cmc
sbb
fs
dec
add
into
outsb
fwait
cmp
adc
call
mov
adc
mov
in
cltd
lcall
fs
filds
repnz
mull
jns
packsswb
xchg
mov
pop
sarl
scas
icebp
push
mov
call
dec
mov
loope
pop
mov
sub
pusha
adc
cld
pop
inc
cmp
aaa
dec
and
stos
lea
xor
add
inc
sbb
into
jl
cwtl
call
jge
cli
mov
sbb
cmp
dec
push
push
addr16
das
call
aas
adc
cmova
shll
push
rcll
js
dec
mov
mov
xchg
push
lods
sbb
dec
or
add
pop
mov
out
mov
adc
lds
pop
in
push
sub
nop
les
xor
xchg
jmp
lods
xlat
cmp
inc
arpl
cwtl
mov
inc
fbld
xor
mov
movsb
inc
in
push
fsubrs
adc
xchg
rorl
popa
mov
outsl
popf
push
je
or
xlat
cmp
mov
jae
sbbb
out
in
mov
mov
sub
cmpsb
pop
pop
sbb
fbld
pop
push
lods
adc
push
xor
xorb
mov
push
rclb
cwtl
mov
call
pushf
xor
mov
or
lret
add
cmp
mov
fldcw
test
cmc
add
pop
jle
inc
pushf
outsl
inc
outsl
das
xlat
dec
cli
xchg
sub
adc
lods
nop
sbb
adc
adc
dec
mov
orb
notl
xchg
addps
or
push
int
add
test
and
loopne
mov
pop
je
repz
test
mov
ret
adc
test
lahf
fdivp
fisubl
inc
js
jle
test
lods
push
sub
mov
lea
sub
sbb
jg
addr16
xchg
arpl
daa
in
cs
ja
jnp
aas
iret
xchg
and
int
popa
jne
lahf
mov
mov
push
pop
sarl
dec
add
aam
cs
push
std
test
enter
out
cs
sub
icebp
inc
pop
cmpsb
les
jno
jns
mov
dec
mov
mov
pop
xchg
inc
lea
mov
mov
addl
lcall
mov
mov
add
bound
jmp
jnp
movsb
insl
jp
push
jae
add
jle
mov
movsl
mov
lcall
in
xchg
cwtl
add
and
sbb
sub
inc
pop
sarl
imul
push
in
jo
loope
shr
or
dec
gs
imul
pop
mov
pop
and
jae
out
adc
xor
push
pop
mov
loop
push
jg
pop
mov
cld
cmp
pop
add
push
call
pushf
gs
pavgw
xor
fstpt
mov
sub
inc
shlb
mov
ret
aam
repnz
xchg
jge
dec
add
clc
es
sbb
shrl
dec
or
sbb
adc
xor
mov
dec
jge
shl
cmpsb
cmc
add
jo
call
pop
test
pop
pop
repnz
push
or
dec
and
lea
push
std
in
jbe
daa
aaa
icebp
repz
dec
lret
xchg
sbb
in
cmp
mov
stos
rcrb
mov
out
fimuls
or
nop
fnstsw
xchg
mov
or
xchg
sar
ss
negl
mov
fs
jp
leave
in
inc
and
test
repz
push
pop
pop
or
test
dec
xchg
xchg
pop
xor
repz
shl
xchg
stc
int3
sarl
stc
std
and
sbb
pop
pushf
lea
test
mov
popa
loope
mulb
ret
push
mov
mov
inc
sub
pusha
loope
icebp
stc
test
and
add
loope
les
xor
jne
cmp
pop
pop
sbbb
sub
inc
and
mov
addl
rcr
sub
bound
popf
pop
fdivrp
mov
push
in
mov
hlt
sti
les
mov
out
pop
loop
pop
push
adcl
int
je
mov
xor
movsl
jb
out
stc
and
daa
into
add
add
and
ficompl
dec
test
push
mov
jge
vpmacssdd
xchg
mov
mov
mov
adc
dec
adc
stc
mov
adc
push
scas
jmp
mov
inc
dec
inc
push
xchg
push
test
jne
jae
hlt
jl
sbb
arpl
rol
inc
mov
jp
cli
cmp
xchg
sbb
push
xor
or
mov
sub
xlat
int3
repz
scas
ja
scas
cld
sahf
mov
mov
jno
add
dec
and
adc
in
mov
push
lcall
inc
adc
rcrl
sub
ficompl
sahf
add
nop
pop
loop
jle
clc
add
movsb
je,pn
iret
xor
call
xor
xchg
inc
daa
mov
pop
inc
in
shlb
jle
and
popa
ds
std
call
jne
stc
dec
out
xlat
repz
pop
cmp
inc
xchg
sub
ds
dec
stos
inc
icebp
pop
enter
pusha
pop
push
or
sbb
ror
sub
sbbl
leave
lods
int3
mov
les
add
adc
sahf
or
xor
addr16
fucom
hlt
dec
and
sub
out
add
test
push
arpl
leave
or
cmp
mov
int3
add
sub
xor
sti
mov
arpl
outsl
dec
add
out
cs
shll
add
insw
data16
pop
test
sbb
std
jbe
pop
gs
les
rcl
and
daa
aas
daa
std
outsl
jae
cmp
fwait
xlat
sbb
pop
dec
movsl
pop
push
fldt
or
icebp
fiadds
test
scas
sbb
test
nop
pushf
mov
add
dec
jle
inc
sub
mov
idivb
repnz
lcall
mov
out
push
xchg
fcmovnbe
in
inc
das
rol
and
rorl
mov
out
push
imul
or
mov
jb
cmpsb
movsl
lret
std
cmpsl
dec
push
jg
jecxz
or
mov
lock
mov
insl
fs
xor
xor
pop
push
jge
das
fcoml
imul
mov
mov
test
lock
mov
jmp
mov
sarb
push
arpl
sbb
add
xchg
adc
xchg
mov
xchg
adc
jge
lock
leave
xchg
jno
jb
gs
inc
add
and
popa
xchg
push
data16
and
push
testl
jno
lea
cmp
stos
mov
in
and
mov
shrl
out
aad
daa
cmc
aaa
gs
adc
mov
sub
stos
ja
cmp
sbb
pop
xlat
mov
jge
pop
mov
scas
add
mov
dec
insb
push
mov
xlat
or
mov
add
jg
mov
push
xlat
lret
and
pop
xor
adcb
shll
ret
inc
test
pop
inc
jl
cltd
imul
mov
add
clc
add
cmp
sbb
lods
inc
testl
lods
mov
push
xchg
mov
ljmp
int3
inc
inc
addr16
sbb
lea
jecxz
inc
jmp
push
stos
repz
repz
enter
pop
mov
out
cmpsb
pop
sbb
cmp
shlb
inc
sbb
in
mov
leave
mov
mov
adc
idivb
cmpsb
icebp
shlb
xchg
mov
dec
cs
ss
outsb
jge
outsl
lods
mov
in
adc
stos
push
pushf
xor
mov
mov
out
inc
inc
outsl
xchg
mov
and
insl
push
xor
push
mov
inc
cwtl
lahf
sub
popa
inc
aam
sub
bnd
fistl
mov
hlt
cmc
jmp
and
xor
pop
push
xchg
cwtl
outsl
xorl
push
hlt
xor
cli
out
fidivrl
mov
adc
add
pop
xchg
mov
insl
jnp
or
bound
pcmpeqd
xchg
cltd
clc
iret
xor
or
pop
ret
cs
shll
xchg
cs
montmul
cmpsb
inc
xchg
leave
inc
mov
push
sub
jns
in
sbb
sub
lcall
mov
out
sub
xchg
call
daa
mov
sub
pop
jae
mov
lods
add
mov
cmp
cmp
fildll
movsb
test
call
mov
mov
jb
dec
movsb
jecxz
pop
gs
testb
or
scas
dec
cmpsl
mov
push
call
and
pop
mov
adc
mov
insb
call
out
sarl
push
pop
adc
push
xor
pop
mov
cli
out
mov
sub
pushf
or
inc
mov
cli
xchg
cmpb
xor
stos
adc
gs
int3
shrb
scas
xor
insb
push
movsb
sarl
fwait
pop
jb
dec
cmpsl
fstps
stos
iret
xor
loop
lea
sub
cmp
adc
lods
or
xchg
testl
jbe
push
push
mov
out
or
ret
jne
lods
adc
cmpsb
push
fistpl
fistpll
cmp
xchg
test
lret
mov
adc
pop
push
aaa
pop
bound
dec
xor
sbb
pop
fs
mov
in
negl
inc
sub
dec
shlb
js
add
or
xchg
or
xchg
mov
mov
cld
inc
dec
shll
out
pop
push
add
leave
sub
in
inc
mov
movswl
add
movb
test
sbb
sbb
push
jno
lock
sti
cmp
js
test
adc
push
mov
sub
mov
mov
cmpsb
mov
fwait
pop
shrb
mov
push
shrb
rolb
dec
cmp
aam
xchg
ds
push
dec
sbb
gs
shrb
xor
insb
popf
call
mov
in
sbb
xor
arpl
nop
frstor
mov
xorl
mull
and
adcl
int
inc
dec
subl
xchg
add
lods
cld
shlb
dec
add
xor
clc
jbe
mov
sub
and
lods
mov
dec
stos
dec
pop
enter
scas
aaa
jns
jne
lret
mov
cwtl
push
jno
outsl
shlb
jne
dec
gs
aas
pop
mov
fidivrs
mov
movsb
mov
push
pop
movsb
xchg
ret
add
inc
mov
gs
xor
shl
movsl
sahf
cli
inc
es
arpl
add
je
ffreep
xchg
pop
lods
gs
jle
test
push
add
xchg
shll
jbe
or
push
daa
adc
cmc
jg
pop
pop
mov
push
dec
sbb
mov
xchg
jnp
push
or
sub
jb
sahf
sarb
js
loope
inc
jle
mov
loop
iret
clc
mov
pop
jb
pop
lret
cmc
and
daa
mov
jmp
fs
jo
or
sub
xchg
adcb
fiadds
aas
loope
shrl
repnz
dec
mov
mov
jmp
push
xchg
pop
mul
adc
mov
stos
out
mov
dec
test
sbbb
mov
sub
or
fbstp
mov
jg
mov
jbe
mov
dec
jb
in
cmp
inc
ja
fidivs
jp
sbb
xor
popf
or
xchg
fldl
mov
mov
inc
shl
mov
call
fsubl
fninit
insl
nop
push
mov
jl
fadd
add
and
stos
mov
sti
and
mov
call
pop
pop
adc
pushf
adc
cmp
mov
cmp
test
mov
cmp
pop
adc
repnz
jg
cmp
cmp
ret
out
popa
jmp
add
cmp
or
jmp
fdivr
pop
push
dec
mov
test
sti
aad
xor
sti
jle
cwtl
shrb
add
xchg
js
into
add
xor
sbb
arpl
cmp
push
mov
xor
adc
mov
mov
cmp
stc
jno
popl
cmp
cmp
sahf
sbb
pushf
jae
xlat
push
xchg
pop
jmp
mov
add
jle
pop
out
sub
movl
xorl
add
or
cltd
adc
repnz
add
or
cmc
sbb
sbb
call
rcrb
shlb
lods
and
fwait
mov
mov
jns
jg
adc
mov
pusha
push
mov
lea
das
cmp
movb
data16
push
inc
std
or
or
sbb
cmp
mov
or
call
in
inc
add
cld
push
push
shl
mov
pop
mov
or
pop
std
pop
cld
xor
push
incl
or
into
pop
mov
push
xlat
add
ret
fs
xchg
les
outsl
inc
dec
scas
popa
push
in
mov
mov
stos
mov
stc
jle
subb
sub
lods
xor
inc
int
fnstenv
stos
and
bound
loopne
sub
clc
mov
mov
fisttpll
or
loopne
in
sbb
pop
push
out
popa
in
pop
notl
shrl
push
xor
inc
sarb
nop
dec
adc
mov
jno
mov
adc
imul
xchg
cmpsb
fs
sbb
shll
cmpsl
or
mov
enter
xor
std
aaa
fcoml
lret
scas
dec
mov
jae
in
cmp
pop
xchg
dec
in
or
adc
inc
xor
push
mov
adc
sub
fistpl
xchg
out
cmpsl
ss
out
xchg
rclb
push
adc
cmp
test
fldcw
fcoml
adc
test
shl
ror
pop
fsubrl
out
mov
pop
gs
cmpsb
repnz
xchg
stos
movsb
jnp
push
xchg
pushf
insb
fwait
mov
mulb
jp
fildl
sub
lahf
and
mov
xchg
pop
xlat
stos
sub
push
jns
test
adc
push
ss
mov
out
adc
sqrtps
ljmp
xor
lret
imul
ja
outsb
cmpsb
mov
jno
je
sub
loopne
repnz
cmp
and
adcb
cwtl
addr16
inc
jg
arpl
jns
addr16
and
jne
or
scas
or
adc
arpl
mov
or
mov
xor
inc
jmp
insl
clc
and
pop
pop
mov
pop
adc
dec
in
test
jo
les
test
sub
ss
mov
dec
sub
subb
add
aam
pushf
mov
bound
sub
xor
mov
push
lods
and
in
in
hlt
mov
lret
xchg
and
jns
inc
xchg
xor
mov
mov
in
jmp
clc
loopne
xchg
adc
and
ljmp
mov
mov
pushf
push
ss
dec
pop
mov
addr16
or
sbb
cmpsb
xorl
dec
pop
dec
mov
cmp
ret
in
inc
mov
imul
lods
xor
push
ds
jbe
rolb
push
jb
enter
push
jne
adc
sbb
aas
repnz
jmp
in
stos
cld
mov
dec
clc
lcall
rep
fmuls
fdivp
cmp
and
xor
cmp
ss
and
rclb
xor
mov
loop
adc
faddl
adc
in
shl
or
cmp
sarl
and
flds
stos
xchg
adc
mov
and
adc
push
xor
repz
cli
push
out
in
fstpt
neg
int3
or
in
mov
push
loop
or
add
les
shr
repnz
stos
gs
int3
push
pop
lret
fisttpll
sub
xchg
std
mov
push
dec
push
into
pop
loop
std
pusha
pop
mov
mov
test
adc
pop
inc
cwtl
enter
push
mov
sti
cmp
aad
add
add
adc
fnstsw
push
mov
stos
dec
adc
pop
shl
rcrb
adc
jnp
inc
pop
call
lods
xor
in
fildll
sbb
ficoml
jle
out
mov
pusha
nop
imul
arpl
call
shll
mov
call
and
cmc
arpl
adc
outsb
test
nop
in
fwait
inc
sbbl
paddsb
xchg
dec
cld
jnp
or
xchg
fdivs
sub
les
mov
je
mov
pop
arpl
cwtl
aaa
loop
int3
pushf
mov
and
and
xor
mov
dec
dec
sbb
inc
fcomps
push
cmpsl
leave
pop
dec
sbb
movl
iret
push
mov
mov
jo
stc
in
and
test
aam
insb
or
cld
call
push
test
movsb
movsb
lods
cld
mov
xchg
clc
stos
insl
pushf
and
jo
sub
inc
into
outsb
pusha
sub
xchg
fyl2x
call
inc
xor
pushl
inc
in
mov
mov
rorl
rolb
mov
roll
adc
cmp
testb
xor
mov
cs
inc
in
and
pop
outsl
mov
pop
icebp
pop
test
enter
pop
adc
and
out
in
out
lahf
and
mov
fildll
in
sub
adcb
les
or
leave
ss
test
stc
adc
xor
push
xchg
cmp
pop
loop
call
or
je
cmp
test
or
into
out
pop
icebp
cmp
and
lahf
jg
das
lcall
cwtl
mov
push
ja
push
push
push
xor
mov
pminub
nop
push
lea
lcall
mov
xchg
xchg
adc
gs
rorl
ss
and
sbb
dec
dec
dec
mov
add
daa
sbb
cmp
andps
jne
out
test
testl
mov
sub
dec
inc
xchg
lret
pop
push
popa
push
adc
xchg
shlb
mov
enter
ficoms
sbb
mov
jg
xor
dec
add
xchg
out
cli
mov
out
cmp
dec
loope
out
mov
or
mov
sahf
icebp
repz
fldl
in
loop
and
mov
add
aam
aad
in
xchg
mov
stos
mov
ljmp
inc
mov
inc
jbe
cltd
push
fnstsw
negb
popa
mov
inc
in
aaa
fiadds
and
pushf
inc
imul
rcll
mov
iret
mov
test
and
jle
std
insb
out
jle
ficomps
and
dec
int3
fistpll
js
mov
test
sbb
sbb
inc
data16
jge
cli
mov
mov
mov
sbb
xor
loope
push
movsl
ljmp
xchg
fildl
dec
test
nop
adc
push
dec
fisttpl
test
outsb
mov
in
pop
jno
lock
jae
int
ja
test
icebp
push
inc
cwtl
sbb
adc
out
popl
test
dec
pop
leave
cs
fistpll
push
sbb
pop
adc
xor
loop
jmp
fbld
test
jno
pop
add
pop
lret
mov
inc
jg
das
push
out
arpl
int3
pop
popl
jnp
inc
ficompl
mov
lods
lret
out
sbb
xchg
sbb
add
inc
sbb
in
adc
sub
dec
push
ds
lret
and
or
loop
hlt
cmp
clc
mov
or
mov
mov
jecxz
fnstsw
dec
adc
sub
data16
fwait
rcll
xchg
mov
lea
rolb
cld
loope
inc
dec
fcoms
sbb
rclb
mov
addr16
inc
cmp
jns
stos
jl
xor
cwtl
rclb
adc
mov
and
xor
lods
dec
adc
pop
sbbl
mov
cwtl
imul
out
mov
vpmaxsw
fwait
cltd
stos
sbb
ds
xchg
adc
add
mov
sarl
cltd
ficompl
cmp
inc
jae
mov
lds
mov
fidivs
adc
int3
jp
psubusb
mov
out
jmp
dec
push
cld
mov
add
sar
call
aas
in
xchg
push
cmpsb
or
in
fisubl
in
mov
push
je
lds
sub
push
in
pushf
sub
scas
mov
mov
jmp
jmp
inc
mov
mov
pop
lahf
mov
mov
sub
hlt
in
andl
mov
in
adc
sti
cmp
mov
test
and
cwtl
jge
pop
xchg
sarb
xchg
push
dec
filds
xor
loop
sahf
cwtl
addb
or
mov
ret
je
jmp
or
pop
push
dec
sarl
rcl
rclb
mov
add
in
stc
int
pop
xlat
int3
push
inc
jge
mov
roll
loop
inc
loope
pop
shlb
ret
jbe
addr16
push
jge
fsts
mov
mov
jmp
or
jmp
and
bound
pop
push
adc
jb
sub
ds
dec
adc
pop
fcmovnu
leave
jge
sbb
and
mov
jge
xchg
imul
mov
and
xchg
shlb
xor
jecxz
xchg
jno
sbb
outsb
jo
xorl
jp
cmc
mov
ljmp
outsb
mov
xor
cmp
imul
pop
xchg
ret
mov
push
ret
add
or
and
bound
stc
popf
cmp
out
ljmp
ffreep
inc
sbb
mov
movsb
dec
lods
shl
jl
aad
dec
push
lcall
test
ret
in
ljmp
shl
push
lret
lods
push
les
lods
sub
lds
sarl
test
dec
or
push
ficompl
stos
insb
popa
lods
into
aam
xor
jle
pusha
in
mov
cmp
movsb
movsl
ss
and
jg
rol
jb
mov
push
pop
lods
ret
add
mov
jbe
mov
pop
test
lea
cmp
xchg
lea
sub
and
dec
pop
inc
mov
fistl
xchg
popa
xchg
mov
mov
rorb
pop
int3
mov
cmp
or
push
es
mov
add
inc
scas
daa
inc
xchg
loop
cmp
fwait
or
dec
fwait
mov
in
add
cmc
decb
aaa
aaa
push
sarl
xchg
out
stos
psadbw
pusha
mov
inc
jne
mov
hlt
mov
mov
mov
leave
sub
dec
xchg
mov
adc
mov
jmp
pop
adc
cs
rcll
jmp
or
xchg
inc
cmpsl
cmpsb
xlat
daa
je
and
and
inc
mov
and
jnp
or
lods
push
aam
mov
fisubrl
addr16
sahf
stc
sbb
sbb
mov
repnz
rcll
lods
imul
aaa
daa
aas
into
lds
mov
or
stc
inc
call
mov
int3
add
mov
cltd
inc
mov
popa
out
push
push
or
push
fstpt
movsb
pop
sub
lds
lahf
xor
cs
pop
repz
inc
mov
rcrb
jge
cs
call
ds
jmp
adc
or
sbb
int
imul
inc
or
imul
xlat
movl
adc
or
mov
hlt
xchg
out
imul
sbb
xchg
imul
lds
scas
mov
dec
jnp
ja
bnd
mov
pop
in
loope
les
mov
into
test
xor
add
pusha
sbb
lds
call
fs
adc
jo
xchg
add
mov
clc
arpl
sub
outsl
jbe
jge
xor
fsubrp
mov
mov
mov
and
mov
sti
push
cmp
fcoml
sub
mov
loope
mov
call
data16
cmc
iret
cltd
cmpsl
cltd
shl
test
xchg
push
jae
push
sbb
sbb
add
add
push
pop
imull
jge
jecxz
mov
icebp
sbb
sbb
flds
sub
push
imul
fsubrl
pusha
mov
cmp
add
and
push
push
dec
and
in
fs
sbb
mov
sub
ficompl
mov
sub
pop
fwait
addb
aas
adc
inc
mov
xchg
jg
js
je
aam
pop
add
pop
popa
mov
mov
sti
sahf
pop
out
or
push
insb
jmp
fmull
insb
mov
jge
pop
aaa
add
push
outsl
test
mov
jecxz
std
pop
enter
stos
inc
lahf
cmp
fisubrs
stos
subl
xor
add
sbb
pop
jns
sub
xchg
sub
scas
xchg
scas
not
out
dec
push
push
push
and
push
xor
adc
cmp
loop
imul
psraw
inc
js
repnz
cmp
mov
outsb
insb
xchg
fidivl
lock
add
xor
adc
mov
js
out
je
sbb
lret
aas
cs
push
add
dec
push
scas
mov
enter
or
jle
test
icebp
outsl
stos
mov
pop
fnstsw
call
xor
ljmp
cmc
fcompl
inc
ljmp
ficoms
bound
test
shll
sbb
clc
movsb
pop
inc
sbb
aam
or
xchg
mov
cwtl
mov
gs
fs
fmuls
xbegin
push
and
jl
hlt
push
loop
mov
push
ja
sub
mov
mov
dec
sub
in
sbb
mov
xchg
mov
inc
in
add
out
enter
fdivrs
es
rcr
insl
enter
pop
aaa
push
push
bnd
out
sub
test
test
and
xor
orb
mov
test
jmp
roll
and
xchg
add
test
stc
stc
mov
push
mov
repz
pop
xchg
stos
movsb
push
lock
mov
pusha
jo
daa
pop
mov
dec
dec
sub
sbb
into
push
dec
mov
into
lods
sbb
lahf
fldl
adc
test
bswap
out
lock
inc
xchg
repz
jl
ja
sbb
push
das
addr16
ja
push
fcmovbe
cmpsw
dec
inc
dec
and
fwait
loopne
or
adc
or
xchg
mov
rcrb
dec
jmp
repz
jo
in
pop
mov
cmpb
xor
lods
add
xor
mov
pop
add
lcall
jge
sub
loope
mov
popf
lahf
sbb
hlt
xor
js
sub
out
andl
test
lods
add
mov
int3
and
repnz
and
inc
sub
stc
lret
xchg
fimull
repnz
test
pop
push
iret
inc
repz
cs
ja
push
adc
test
lds
lock
adc
fstps
add
andl
and
aam
xchg
mov
cmp
adc
jb
push
les
cmp
dec
mov
popf
loope
es
out
or
jnp
stos
mov
rorl
aad
imul
push
adc
xor
loope,pt
pop
fldenv
xor
mov
xor
adc
das
xor
imul
addl
outsb
js
shll
pop
addr16
ds
push
sbb
inc
and
test
push
cmc
sti
push
mov
roll
es
aas
ja
push
sub
push
sbb
subb
js
js
lahf
aad
imul
stc
inc
xlat
pop
push
adc
fnstsw
stos
add
lret
cmp
ja
clc
xchg
sbb
test
cwtl
mov
lods
fisttpll
cmc
sbb
addr16
and
call
dec
or
mov
les
xlat
dec
inc
or
dec
filds
ret
loop
adc
int
enter
hlt
inc
xchg
sbb
data16
sub
pop
jle
lea
and
pop
pop
cmpsb
pop
std
adc
sbb
pop
pop
call
imul
pop
enter
das
cli
shll
lock
and
movzbl
add
and
dec
mov
adc
add
lret
dec
inc
sbb
jo
lock
loopne
fwait
cmp
xchg
mov
jnp
aam
xchg
cmp
or
scas
push
test
dec
aam
inc
add
int3
sbb
xor
cmp
ljmp
or
push
or
mov
push
fisttpll
aas
mov
sub
sub
insl
xor
outsl
add
and
dec
and
push
pushf
leave
lods
cli
add
out
jbe
cmc
xor
subb
bound
push
call
sbbl
jae
cmpsl
pop
inc
pop
sub
inc
loopne
fmull
nop
sub
addb
mov
and
push
loope
adc
leave
jbe
test
stc
xor
call
loope
sub
sbb
and
mov
dec
call
xor
fmul
ret
cwtl
dec
rcll
inc
inc
fst
xor
pop
xchg
pushf
jle
cwtl
mov
mov
into
xchg
mov
es
inc
mov
imul
mov
or
in
ljmp
dec
shll
lret
test
orl
je,pn
mov
adc
pop
xor
popa
repz
lock
push
aas
iret
out
mov
push
cmp
aas
hlt
jo
aad
repz
cmp
ret
sub
add
push
ds
outsl
adc
sub
popa
lcall
insb
jbe
ret
jle
mov
je
mov
inc
addr16
or
test
add
je
adc
in
mov
xlat
cs
dec
ds
pop
imul
mov
push
and
out
xor
inc
jl
adc
mov
popf
inc
cmp
mov
pop
sahf
inc
ret
jge
enter
sti
imul
adc
in
sbb
movsb
mov
adc
jge
mov
aam
stos
xchg
pop
ds
in
fisubrl
dec
aas
and
ud1
jecxz
mov
adc
jne
inc
lss
jo
dec
outsb
les
into
flds
outsb
xor
sarl
imul
mov
mov
mov
or
mov
jmp
dec
push
lcall
xor
mov
or
inc
mov
pop
imul
pop
sbb
or
rorl
xor
stc
push
adc
push
jns
or
mov
jg
adc
mov
jp
insl
mov
mov
mov
jg
nop
lahf
cmpsb
adc
mov
jg
into
adc
xchg
pop
loop
xor
ljmp
and
and
out
adc
mov
popa
out
or
push
outsb
aam
jp
mov
mov
and
adc
mov
push
js
dec
pop
or
jne
insb
sub
and
sbb
xchg
jmp
push
push
repnz
lret
add
cmp
js
aam
out
or
stos
mov
mov
repnz
jp
aam
movsb
ret
popf
hlt
push
dec
ret
outsl
xchg
clc
push
ss
xor
iret
daa
pushf
cmp
mov
cmc
daa
or
mov
pop
add
fsubs
or
mov
ljmp
inc
push
xchg
pop
xchg
xchg
or
rcr
out
dec
std
xchg
shrl
inc
xchg
leave
xchg
aad
dec
dec
hlt
cltd
outsl
fistps
adc
nop
mov
fldl
scas
jae
inc
lock
fdivl
add
insb
movsb
xchg
mov
fldl
insb
shlb
fbld
std
push
sbb
notl
mov
imulb
sbb
imul
jp
sub
pop
ficoms
xor
xor
mov
jmp
jo
icebp
lret
dec
or
jecxz
pushf
pop
dec
mov
sbb
sub
mov
daa
mov
rclb
into
sub
bound
push
inc
fisubrs
jp
jp
push
fnstcw
mov
pop
push
sbb
inc
inc
ja
popa
aas
aaa
ds
add
sbb
cli
pop
aaa
xlat
push
sarb
sbb
popa
pop
cwtl
inc
out
adc
pop
add
test
jbe
push
cmpsb
fwait
icebp
sub
fsubrl
push
das
adc
movsb
and
divb
test
jns
adc
adc
adc
sti
pop
pop
rolb
xor
rcrb
cmp
inc
cmp
loope
rcr
xchg
xchg
adc
mov
dec
cli
xlat
das
cld
scas
jecxz
das
test
lods
filds
mov
inc
pop
ret
mov
lahf
push
shl
inc
shrl
sahf
das
scas
frstor
cs
mov
jae
sbb
aas
call
int
sub
mov
lods
mov
dec
mov
lods
mov
scas
and
insb
jns
or
test
xchg
addr16
sub
dec
int
cltd
xor
and
push
rolb
and
pusha
xor
push
lods
mov
mov
iret
xor
ja
dec
insb
movsb
wbinvd
cmp
addr16
add
bound
shll
dec
or
lea
cwtl
mov
push
int3
sahf
sub
movsl
xchg
adc
outsb
popa
outsl
xlat
in
std
test
xchg
push
popf
push
sbb
cmp
and
sbb
pop
sbb
cmp
es
cmp
cmp
or
push
outsl
aas
xchg
clc
outsb
in
xor
data16
jb
shrb
enter
add
lods
mov
xor
test
lods
mov
mov
popa
mov
inc
out
arpl
push
sbb
in
mov
ret
stc
ljmp
sub
dec
outsl
int3
adc
xor
in
cltd
cwtl
xchg
int3
jmp
pop
mov
sbb
cli
popa
fld
sbbl
add
ds
popf
push
mov
daa
insl
dec
mov
add
jp
cmc
mov
loop
packssdw
test
and
jg
mov
sbb
or
cmpsl
lock
test
imul
mov
or
call
push
adc
xorb
sbb
clc
test
sub
test
sbb
mov
push
ds
aaa
xchg
rclb
sbb
sbb
ret
push
popa
pop
clc
adc
fistl
cmp
and
outsb
jne
mov
call
or
mov
push
sub
adc
xor
mov
stos
pushl
push
mov
lcall
ficompl
jae
cli
movsl
ret
hlt
nop
imul
dec
xlat
bound
imull
pop
movl
sti
mov
mov
fmuls
loop
push
lcall
cltd
rcr
mov
cmp
aam
cmp
fsubs
shlb
aam
adc
xor
xor
arpl
cltd
xor
lcall
int
bound
pop
or
insl
cli
xlat
cmp
in
inc
cmp
ja
adc
or
out
jns
lods
mov
rorl
jno
inc
pop
jl
cmp
notl
jg
test
bswap
push
mov
imul
loop
sbb
add
lea
mov
outsl
dec
popa
add
xor
cmp
mov
cmp
or
pop
lret
adc
test
data16
ds
cwtl
inc
in
cmp
and
pop
sub
pushl
mov
dec
sbb
lods
push
aaa
xor
ror
lcall
xor
push
xor
sbb
arpl
fdivr
sbb
in
mov
stos
pop
daa
fwait
push
out
pop
mov
fstl
push
jl
repnz
mov
xor
test
ror
xor
adc
iret
inc
push
push
mov
mov
hlt
ljmp
fsubl
ds
scas
lret
je
bound
nop
push
push
lea
in
sub
loope
ja
jp
subb
fsub
push
aas
or
mov
pushl
pop
jmp
les
paddusb
xchg
outsb
mov
mov
adc
adc
arpl
pop
pop
push
cmp
roll
test
mov
cmp
and
dec
out
mov
loope
hlt
aad
enter
iret
push
sti
sub
sbb
push
and
gs
inc
push
add
fmuls
arpl
add
repz
pop
pushf
test
push
imul
clc
add
or
sahf
fdivs
repnz
std
ss
out
xor
std
hlt
cld
sbb
inc
clc
cmp
jmp
aas
es
popf
jo
int3
jb
or
sub
ss
lret
mov
dec
inc
lods
xchg
cmp
sub
push
xchg
sub
outsl
mov
lahf
dec
rcr
out
pop
jp
push
or
mov
add
jne
addl
pop
mov
fstps
sbb
int3
mov
or
stos
sbb
shll
int
cmpsb
divl
mov
xchg
push
lret
adc
fstpl
stos
ja
in
xchg
mov
sub
notb
xchg
das
insl
pop
jge
in
mov
pop
jp
mov
rorl
lret
aaa
sbbl
popl
cmp
pushf
adc
mov
pusha
jb
fcoms
adc
shll
xchg
test
lods
pop
leave
mov
roll
movsb
dec
adc
je
pushf
bound
inc
sbb
and
out
xchg
sub
or
outsb
xchg
cmp
fwait
decl
cmpsb
pop
mov
jne
push
jle
add
mov
sbb
mov
out
jg
outsl
pop
ret
push
fnsave
in
xor
jbe
dec
and
int3
mull
inc
push
out
into
mov
dec
inc
and
cmp
cmp
out
shlb
lret
leave
repz
jns
cmp
sarl
mov
sar
xchg
xchg
scas
sbb
sub
orb
dec
dec
aad
cli
inc
insl
mov
mov
jae
mov
sbb
cmp
outsl
loope
int
sub
pushfw
cmpsl
into
in
jecxz
push
test
cmpb
sbb
pop
jo
lret
xchg
sbb
jno
outsb
adcl
sub
adc
push
daa
jne
and
pop
push
enter
ror
pusha
aaa
arpl
fcmovb
insl
aad
pop
fildl
or
mov
push
in
mov
fs
arpl
movsb
add
inc
pop
shrb
and
mov
xchg
xchg
mov
clc
push
push
arpl
sub
repz
inc
and
ret
mov
aas
sub
test
inc
lahf
add
ret
clc
loopne
jp
mov
ret
mov
cmp
dec
mov
and
mov
sub
xlat
inc
pop
jo
loope
mov
gs
outsb
fwait
sub
int
addr16
mov
pop
pop
xor
push
cmp
jmp
fistps
cmp
mov
push
xchg
and
sarb
scas
in
sbb
cmp
repnz
and
dec
insl
out
dec
outsl
dec
sbb
add
fnstsw
inc
fmuls
fbld
frstor
std
xchg
rol
js
in
andl
mov
bound
fisubl
mov
push
pop
in
xor
adc
pusha
dec
add
sbb
movsb
loope
cli
call
ja
or
lds
leave
jecxz
test
pop
and
mov
mov
out
data16
jnp
and
shl
bound
cmpsl
inc
in
lea
dec
cld
ret
in
or
mov
pop
test
aad
ss
push
stos
fdiv
addl
sub
jg
mov
cmp
cmp
add
dec
std
data16
clc
add
popf
jae
cltd
add
loopne
sub
mov
jnp
cld
jecxz
xlat
test
and
adc
scas
insl
gs
cmp
les
sbb
leave
and
pop
clc
pop
insl
mov
leave
sbb
push
sub
sbb
adc
rolb
or
push
subl
xchg
push
lock
lcall
or
dec
cmpsb
aaa
in
add
std
ss
icebp
xchg
sub
ficompl
lret
inc
or
stc
mov
int
add
movsl
cs
mov
sub
mov
imul
jnp
hlt
and
es
dec
icebp
mov
cmp
inc
mov
outsl
int3
in
inc
xchg
stos
add
xor
mov
lods
popa
cmpsl
or
in
ds
jge
xchg
inc
mov
imulb
xchg
fdivs
sti
adc
cmpsb
push
inc
rolb
inc
outsb
adc
fstl
push
sbb
test
test
sub
inc
lock
pop
mov
push
ds
push
fwait
sahf
fwait
xor
jecxz
fnstsw
inc
jne
fsubl
mov
sub
sbbb
or
mov
aad
xchg
xchg
add
or
jl
sahf
scas
sbb
jge
ret
dec
aas
add
lret
adc
ds
lock
xor
ror
add
jmp
insl
stos
lahf
je
sub
sbb
jle
adc
mov
test
or
into
or
test
std
push
mov
sub
xor
dec
outsl
insl
inc
lgs
and
mov
and
cwtl
mov
xor
rorl
sbb
xchg
mov
sub
insb
xor
adc
fadd
lret
mov
fdivrs
int
dec
icebp
push
mov
dec
mov
loopne
jecxz
dec
imul
mov
lea
scas
pop
addr16
mov
pusha
or
std
xchg
mul
lods
xchg
jle
mov
mov
insl
inc
cltd
adc
pop
mov
out
add
jmp
hlt
push
insb
jb
inc
popf
mov
imul
mov
rorl
xchg
jbe
xchg
pop
jne
test
inc
les
xchg
push
sbb
add
mov
push
int3
mov
mov
repz
inc
movsl
in
cs
adc
xor
movsl
pop
cltd
adc
sarb
sti
fiaddl
mov
loope
mov
rorl
mov
lahf
push
test
faddp
xor
roll
outsb
xchg
aaa
rolb
ja
testl
sub
mov
add
inc
das
cmp
in
in
mov
pop
in
stc
shlb
or
add
mov
repnz
mov
jge
push
cmp
pop
mov
xchg
cs
stos
in
fwait
cmp
push
mov
cwtl
cs
neg
cmp
dec
push
pop
int
dec
adc
xlat
push
imul
addr16
cmpsb
inc
ja
mov
xchg
aaa
jno
outsb
xlat
xor
jo
cmp
add
in
mulb
xchg
fimull
in
xchg
mov
mov
mov
roll
lcall
cmpsb
mov
sbb
jp
addl
xchg
mov
sbb
je
divb
xor
addr16
mov
mov
mov
out
push
insb
repz
les
jae
inc
and
movb
xor
aaa
repz
jl
mov
sbb
in
dec
push
shll
sub
cli
bound
data16
test
imul
mov
sbb
lods
nop
adc
fcomp
jp
lret
ret
dec
sub
push
push
push
pop
scas
scas
cmc
cmpxchg
lods
xor
aad
adc
shll
add
mov
sbb
xor
mov
xor
cmpsb
sbb
daa
inc
mov
sbb
xlat
mov
insb
xchg
test
xchg
xchg
push
mov
ret
popa
inc
mov
dec
push
pop
ds
pop
xchg
mov
jno
scas
sbb
test
ss
imul
jae
sub
orl
dec
xor
je
xchg
cmpsl
out
cmp
push
adc
dec
jecxz
mov
jmp
shlb
and
xchg
mov
pop
push
into
jmp
mov
arpl
imul
pop
arpl
cwtl
inc
or
loopne
mov
pusha
jl
mov
cwtl
mov
xchg
cmpsb
lds
jae
push
repnz
mov
pop
popf
into
sub
push
mov
cwtl
mov
test
add
xchg
cmp
arpl
pop
inc
pushf
outsl
push
mov
cmp
in
jmp
aas
mov
pushf
sti
and
orl
xor
dec
xchg
out
jmp
inc
pop
mov
adc
imul
xchg
jne
fs
add
inc
and
mov
loopne
call
jecxz
enter
dec
xchg
sbb
jne
mov
push
inc
pop
scas
and
stos
cmp
stos
das
mov
cmp
jnp
jg
ljmp
pop
adc
mov
or
out
jl
inc
mov
in
int3
test
dec
cmpsb
jns
test
push
aas
into
push
ret
xchg
ret
std
or
cld
pop
cmp
scas
mov
add
push
stc
jle
fwait
xor
mov
pop
adc
xchg
test
iret
mov
push
adc
jb
sbb
sbb
xor
dec
xchg
loop
test
mov
ds
sub
or
data16
adc
mov
xor
pop
aad
test
pop
mov
adc
inc
iret
pop
inc
dec
add
fs
inc
test
rclb
stos
lock
jb
lret
inc
xor
and
sub
sub
lock
cmp
xchg
negb
ficomps
icebp
sub
inc
leave
cwtl
in
mov
je
adc
es
sarb
pop
stos
pop
xor
sbbl
mov
xchg
xor
dec
jecxz
adc
push
cmp
add
insl
mov
pop
insb
ss
or
ja
outsb
bound
aad
test
inc
cmpsl
sub
jno
xor
pop
rcl
push
mov
push
daa
inc
inc
pop
cli
frstor
xchg
mov
aas
data16
cmp
stos
jg
adc
jp
jmp
rol
lock
enter
pop
ds
mov
adc
cli
jae
mov
add
or
mov
ret
fildl
inc
or
sub
xchg
insb
fisubl
xor
mov
mov
cmp
decb
jmp
jmp
insl
movsl
add
sub
cmp
sub
mov
pop
std
sub
inc
push
add
push
cmc
jno
jl
push
cmp
xchg
mov
sysexit
sbb
mov
cli
xlat
mov
in
pop
xor
ljmp
enter
jg
mov
das
aam
loop
adc
mov
push
call
test
inc
std
inc
and
or
arpl
cld
jns
aaa
xchg
shlb
pop
outsl
in
xchg
push
cmp
xchg
cli
imul
test
jecxz
sbb
dec
xor
mulb
outsl
fldl
repz
and
pop
jg
xor
mov
test
mov
mov
mov
cs
jnp
pop
xchg
orl
shlb
sub
sub
pop
mov
pop
scas
mov
in
ret
adc
ja
add
in
sahf
rcr
rorb
test
jb
mov
pop
adc
daa
pop
mov
cli
add
fcomps
push
loopne
pop
cmp
xor
dec
int3
or
xchg
dec
or
mov
adc
sub
sub
and
dec
sbb
cmp
mov
shll
popf
imulb
mov
cmc
adc
stc
movl
xor
xorl
push
mov
aam
mov
sbb
push
or
cmc
aaa
mov
repnz
cltd
scas
sti
adc
mov
jb
mov
or
rol
mov
outsb
nop
sub
ficoms
inc
outsb
scas
roll
inc
pushf
jns
shll
push
shll
sub
and
mov
sbb
push
loop
jge
jb
stc
jle
dec
dec
fadds
mov
dec
fwait
xchg
mov
orb
in
das
movsl
pop
mov
xchg
dec
sbb
mov
int3
push
mov
sub
out
out
push
xchg
adc
mov
jne
and
cmc
fisubrs
outsl
in
xchg
and
xlat
lock
sbb
xchg
or
xor
subl
adc
and
jae
sbb
mov
pushf
push
repz
jno
movsb
insb
push
push
fidivs
sub
scas
xchg
xchg
add
mov
inc
aaa
jb
lcall
negl
popa
jbe
cmp
xchg
push
push
lret
cmp
fs
scas
dec
imul
mov
mov
dec
bound
enter
jmp
inc
gs
mov
ficoml
add
shll
lcall
test
push
cmp
add
cmp
mov
mov
jecxz
popa
movsl
fdiv
addr16
add
les
mov
lret
jnp
mov
cld
outsb
stos
mov
test
push
add
orb
roll
lret
mov
cmp
test
mov
jmp
jecxz
jecxz
jne
loope
loop
repnz
sbbl
popa
add
cltd
dec
xchg
cmp
cwtl
mov
out
mov
rcr
js
xlat
or
mov
aas
faddl
jo
cltd
cmp
push
sub
rclb
adc
inc
pop
pop
or
inc
movsl
push
mov
test
rcrl
in
add
push
xchg
xor
repz
fisubl
mov
imul
push
dec
xchg
dec
cmp
testl
cmpsl
mov
add
pop
pop
icebp
push
lahf
mov
cmp
pop
sbb
push
cmp
ljmp
add
push
popa
mov
pop
orl
jnp
add
fnstcw
iret
int3
pushf
minps
mov
inc
fnstcw
push
lds
sbb
sbbb
lods
push
mov
stos
xchg
mov
fcoml
jge
cltd
lret
aam
cmp
xor
cmp
subb
das
ja
jmp
lret
rorl
add
sub
jbe
add
cmc
rcrl
sbbl
stos
push
js
adc
dec
mov
stos
imul
sbb
jae
in
sbb
aas
push
pop
or
push
cmp
adc
int3
repz
out
xchg
mov
and
dec
jle
push
mov
mov
test
fistps
mov
setbe
mov
pop
fistpll
aas
inc
int
or
inc
push
cltd
inc
adc
fstpt
ds
cmpsb
mov
fdivl
out
testb
mov
add
mov
dec
push
aam
decl
lods
pop
push
xchg
ss
mov
es
xchg
arpl
fdivs
push
popf
cli
inc
stos
stos
movsl
mov
pop
or
xor
idivb
pop
mov
cli
mov
jne
cwtl
loope
mov
mov
decl
cmp
sbb
jl
addl
dec
nop
ss
and
jle
mull
xchg
push
out
mov
pushf
movsb
cltd
pop
in
mov
fucomip
outsb
and
mov
cwtl
inc
fldl
xchg
testb
inc
aaa
mov
outsl
test
stos
cwtl
stc
and
pop
and
cwtl
outsb
sbb
xor
lods
aam
xchg
and
sbb
jle
or
aad
jle
imul
fsts
das
xor
add
mov
add
test
test
adc
fcmovu
in
stc
jl
inc
xlat
std
and
les
or
pop
aaa
jb
cld
ret
sbb
xchg
sbb
inc
and
ljmp
or
jns
add
push
push
or
add
ficoms
in
push
roll
fwait
add
push
sub
lret
ficoms
jg
or
push
and
mov
pushf
scas
inc
imulb
or
xchg
and
int3
sub
mov
js
adc
test
stos
jle
pop
icebp
insb
or
mov
cld
push
jle
push
outsl
imul
push
cmp
add
inc
lds
daa
mov
lret
jae
test
sub
adc
rcrb
lret
jnp
popa
in
scas
mov
fstl
mov
jbe
or
lds
aaa
stc
js
push
xchg
repnz
shrl
imul
lahf
insl
rolb
inc
in
movsl
or
sbb
scas
das
sbb
mov
ljmp
mov
psubd
jb
xor
data16
xchg
addr16
jmp
inc
adcb
push
mov
inc
add
mov
mov
mul
lea
inc
sbb
push
or
mov
and
cltd
cld
ljmp
push
xchg
or
inc
pop
mov
mov
cld
mov
lods
cmp
aam
add
add
sti
stos
fwait
cmpb
cltd
scas
jb
sub
add
in
dec
jmp
gs
ret
addl
hlt
fisttpl
clc
mov
jmp
push
dec
arpl
adc
enter
xchg
xchg
pop
mov
movl
daa
sbb
push
loopne
push
xor
mov
cli
push
push
lock
push
jge
imul
and
es
test
int
and
leave
aas
sbb
aas
push
pop
push
ljmp
lret
lahf
jge
insl
cmp
cmc
jb
push
daa
enter
in
shll
stc
push
pushf
dec
scas
pop
sub
insb
dec
addl
jae
stos
test
inc
jbe
add
divl
clc
pop
enter
add
inc
in
adc
mull
and
push
scas
cwtl
lds
insb
pop
bound
fcomps
fisubl
pop
pop
clc
mov
stos
sub
in
into
roll
xor
ljmp
jecxz
andb
mov
and
cs
gs
sub
jns
lds
xor
inc
xor
sahf
cli
sub
stc
jno
dec
xchg
movsl
loop
dec
sub
adc
rol
insb
fs
popa
aam
out
out
inc
lret
out
out
ret
sbb
adc
jecxz
pushf
es
je
dec
mov
hlt
cmp
dec
add
jnp
imul
inc
mov
push
inc
jl
mov
ret
pop
int3
sbb
add
out
in
stos
mov
mov
or
lock
imul
pusha
jbe
jbe
mov
lcall
sar
stc
pop
pop
sqrtps
out
sub
mov
cmp
lock
jb
push
pop
out
pop
out
icebp
push
outsb
mov
ss
fucomi
repz
push
xor
movsb
pop
xor
pop
iret
ret
cltd
adcl
fs
xor
loope
ljmp
add
sbb
loope
adc
pop
fnsave
push
or
or
out
aas
dec
fstpt
aad
pop
inc
in
lret
movb
cwtl
mov
mov
jp
jns
rolb
sbb
rcr
leave
pop
rcrl
or
ret
and
negl
lods
ljmp
or
fcoms
sar
scas
sahf
dec
adc
jg
sub
push
push
inc
arpl
adc
cmp
mov
int
jl
adc
dec
and
inc
push
jmp
fstl
sti
pop
int3
or
adc
leave
ret
push
pop
fisubs
mov
cmc
fiadds
jl
js
ja
mov
jnp
icebp
lcall
dec
inc
movsb
cmpsb
mov
inc
sahf
inc
jb
out
loope
adc
inc
es
into
js
push
mov
pop
outsb
jmp
pop
andb
mov
nop
cmpsb
and
les
xchg
xchg
popa
cmp
adc
push
int3
mov
bnd
stc
sbb
dec
scas
sbb
insl
insb
lret
loopne
mov
mov
mov
and
add
xchg
sbb
pop
dec
push
or
shl
sub
lea
xor
out
sub
and
jb
jecxz
mov
iret
fmulp
mov
aas
mov
push
popl
pop
cmp
loope
fimuls
out
addr16
lcall
dec
lret
sbb
ljmp
into
test
jle
dec
out
adc
mov
shl
rolb
adc
lret
xchg
loop
pop
jbe
xchg
ficompl
dec
fidivrs
mov
je
lret
inc
adc
push
test
cmp
cmp
cwtl
dec
push
or
or
fidivrl
movsb
adc
xchg
and
or
rcl
mov
jg
jno
pop
ja
imul
add
shll
and
mov
mov
push
jmp
push
add
cwtl
mov
call
sub
and
jo
aad
in
lds
hlt
pop
mov
loopne
xchg
mov
and
jbe
add
xchg
jne
in
mov
ja
cld
in
dec
dec
push
mov
test
out
aad
insl
jne
es
or
ja
cmp
mov
mov
pushf
ljmp
lcall
aad
inc
jmp
lds
mov
mov
cs
jle
outsb
fwait
shlb
incb
lret
ret
sbb
sti
xor
sub
sbb
pop
pop
pop
sub
push
xchg
loop
push
addr16
ja
jb
xor
and
mov
test
xor
pop
repnz
cwtl
sub
inc
xchg
movsl
movsl
sbb
push
arpl
inc
insl
and
sbb
xor
les
pop
sar
pop
mov
sbb
jecxz
cmpsl
in
icebp
imul
add
sti
push
popf
les
jge
out
scas
mov
idivb
mov
icebp
push
push
jo
sbb
leave
jecxz
xor
fimuls
leave
pop
pop
es
dec
roll
cmp
int
mov
push
repnz
add
jg
mov
jp
xor
int3
addr16
mov
push
in
fcoml
pop
xchg
sbb
std
stos
fabs
push
cld
jns
push
cwtl
aaa
and
xchg
push
or
jns
dec
add
push
xchg
movsl
cmpsb
fnstcw
xchg
sub
daa
mov
sbb
in
mov
repz
cmp
fnstenv
test
mov
or
add
cmp
xchg
push
sbb
nop
aas
test
jnp
and
mov
lahf
mov
lods
in
push
fdivl
hlt
rcl
sbb
and
frstor
jns
pop
loope
bound
daa
jp
mov
add
addr16
cwtl
ja
cli
outsl
leave
inc
les
rclb
inc
fmul
jae
lods
push
lcall
test
out
nop
cmp
out
push
xchg
lock
pushf
mov
pop
mov
jge
popa
adc
mov
push
jno
push
leave
mov
jl
fildl
mov
leave
jp
subb
ljmp
das
add
jecxz
rorb
push
push
mov
adc
xchg
bound
xchg
and
out
adc
mov
add
add
fs
jecxz
sub
mov
arpl
out
int3
push
movsb
in
xchg
or
dec
lds
mov
call
jb
mov
pop
insb
pop
and
add
push
mov
into
and
mov
or
stos
jmp
mov
inc
push
mov
fnsave
shrl
sub
dec
inc
fbld
ja
cwtl
mov
fildll
push
int
ss
inc
or
cld
les
call
fimull
stos
or
cmp
mov
repz
sbb
shrl
aaa
jnp
pop
sbb
and
adc
sub
lea
pushl
imul
xor
sbb
mov
repnz
jmp
loopne
out
mov
pop
pop
enter
insb
sub
mov
aad
cltd
clc
jo
loopne
push
pop
std
xchg
fsubp
sahf
cmc
and
cmpsb
pop
xor
cli
push
xchg
sub
adc
xchg
out
and
repnz
stos
or
inc
shr
mov
mov
js
jl
xchg
ljmp
sub
frstor
fistl
cwtl
arpl
pop
stos
push
lahf
xor
mov
cmc
mov
mov
hlt
fisubs
test
or
jne
pushf
sub
ja
pushf
and
add
jnp
les
jb
lret
in
xchg
sbb
outsb
mov
push
iret
dec
fidivs
push
mov
sti
sub
mov
cmpsl
xchg
into
xchg
cmp
xchg
inc
sbb
jge
lret
fimuls
mov
loopne
mov
fs
and
xchg
mov
xlat
or
push
std
out
rcl
push
pop
repnz
mov
iret
cmpsb
mov
pop
and
test
dec
inc
hlt
adcl
lret
inc
jo
les
out
repz
fcmovnu
insb
pop
cwtl
pusha
lods
lcall
sar
xchg
xchg
stc
ret
lods
jmp
push
mov
mov
sbb
sbb
cmpsb
movups
dec
jmp
inc
jb
lock
push
lds
in
sbb
icebp
js
sbb
dec
sti
adc
dec
sub
ss
cmpsb
mov
add
inc
pop
add
mov
sbb
inc
add
inc
jne
lds
fwait
addr16
sub
push
lahf
lahf
xor
jb
inc
stos
cmp
dec
add
mov
bound
add
mov
sti
lock
pop
pushf
and
fldcw
sub
in
add
aad
outsb
sar
pushf
dec
mov
sarb
cmp
sbb
mov
je
arpl
test
lea
sbb
movsl
cmp
lods
fwait
imul
adc
repz
mov
shlb
jbe
inc
ret
and
je
mov
mov
daa
mov
xchg
cli
outsb
mov
pop
mov
repz
pop
orl
jnp
push
xor
dec
mov
cmp
bound
mov
push
rcl
add
sbb
in
add
js
sarb
loope
jns
pop
inc
push
stc
shll
in
or
adc
inc
std
sub
mov
aam
rcrb
shll
jle
dec
or
add
stc
mov
test
sub
add
xchg
pop
pop
mov
scas
stc
out
in
xor
add
fidivrl
cmp
lea
cmp
iret
repz
hlt
fs
push
mov
xor
ds
repnz
fiaddl
cld
inc
js
sbbl
cmp
and
lahf
or
ss
cmp
cmp
cld
mov
push
stc
sub
ljmp
movsl
daa
push
repz
fists
xchg
ljmp
test
mov
push
lret
popf
test
lock
cwtl
insb
pop
cmp
jnp
jo
dec
das
jb
push
shl
dec
jge
popa
sarl
pushf
jb
div
popf
shl
arpl
mov
xor
jp
stc
mov
pop
rorb
jae
inc
and
or
or
enter
iret
sub
mov
call
pop
sub
jno
ljmp
adc
push
pop
inc
imul
mov
lea
into
dec
je
sub
mov
lret
jno
sub
mov
sarl
lock
push
ffreep
mov
test
cmp
fldt
fsts
inc
out
sbb
xchg
xor
sub
repz
mov
lahf
push
repnz
in
stos
int3
jnp
push
jnp
jmp
test
lcall
adc
daa
inc
jle
xchg
add
push
mov
jne
lahf
rep
dec
push
mov
jns
inc
and
scas
aam
pop
cmp
fimull
movsl
xchg
cmpb
icebp
arpl
or
dec
jp
jmp
mov
jo
ss
and
movsl
das
cmp
scas
mov
dec
test
mov
xchg
pop
js
fmull
fdivs
xchg
fidivl
dec
or
lea
sub
loope
ljmp
xchg
enter
sub
es
icebp
push
pop
inc
cld
shlb
sub
inc
into
pop
cmp
in
cmpsb
aaa
pop
pop
shlb
adc
loopne,pn
stos
es
notb
push
mov
shll
das
repnz
pop
xchg
mov
mov
cmp
mov
test
jle
mov
testb
jbe
mov
xor
test
lods
mov
adc
lret
out
int3
sub
sub
sbb
outsl
aam
clc
mov
sbb
jle
movb
js
xchg
enter
mov
dec
mov
xor
pop
in
fisubrl
lock
pop
cwtl
rdmsr
into
fnstcw
dec
mov
sub
scas
dec
xchg
ret
fists
aad
ds
adcl
xchg
push
dec
xor
cmc
inc
sahf
mov
clc
scas
cmpsb
sahf
cltd
movsl
xor
mov
mov
gs
add
xchg
mov
pop
mov
ljmp
adc
xchg
lock
pop
out
les
lcall
cli
popa
jae
mov
pop
xor
xchg
xor
sbb
sub
adc
lret
lock
push
int
push
push
pop
push
pop
in
dec
pop
cmp
or
insl
shrb
xchg
sub
sbb
loop
inc
aad
pop
leave
faddl
dec
lods
outsl
mov
inc
sub
adc
insl
imul
adc
xor
aam
bound
mov
fcompl
repz
adc
mov
aaa
add
loope
loop
jno
ret
lock
and
and
dec
cmc
std
enter
inc
mov
lds
cltd
ljmp
scas
lcall
pop
fsubrs
aad
ss
xor
out
add
hlt
call
in
dec
mov
pop
add
cmpsb
loop
and
mov
aad
into
popa
cwtl
cmp
xor
adc
mov
mov
aaa
gs
scas
pop
ljmp
call
cmp
xchg
hlt
add
js
or
add
cmpl
pop
and
jno
or
inc
subl
int3
push
addl
stos
rorb
xor
lcall
or
xchg
nop
fs
xor
and
test
xchg
aaa
icebp
pop
mov
shrl
xlat
add
test
shrb
sbb
xor
outsb
test
cltd
add
leave
loop
xchg
test
dec
clc
je
outsl
int
jle
fucomp
pop
and
ds
mov
movl
push
dec
sbb
call
dec
aas
mov
push
add
repnz
jecxz
sub
lret
jecxz
out
xor
push
xchg
jmp
push
mov
push
sbb
xchg
sbb
add
push
jp
loopne
mov
aam
inc
dec
jbe
push
scas
jo
pushf
mov
dec
loope
jle
aad
jne
jnp
jge
fldt
push
pop
and
int
pop
mov
push
mov
sti
sbb
stc
je
lcall
mov
sub
cmp
adc
roll
xchg
mov
in
sbb
lahf
fwait
mov
das
cmpsb
test
push
or
add
cmp
je
and
scas
or
outsw
adc
lock
repz
adc
cmp
repnz
cmc
push
outsb
test
lret
cld
je
cwtl
inc
jp
pop
dec
xor
sahf
mov
push
rclb
je
jb
xor
mov
sub
jmp
sub
cmc
jle
neg
mov
movsl
outsb
gs
mov
mov
imul
mov
stc
cmp
jl
sarl
mov
in
mov
into
cmp
leave
inc
out
mov
vpcmpeqb
int3
leave
shld
and
add
sub
dec
mov
mov
aam
test
repnz
inc
jl
popf
out
pop
push
in
aaa
sbb
fs
adc
jmp
jle
aad
push
and
sub
jnp,pn
mov
push
add
mov
addr16
mov
cmpsl
jbe
ljmp
leave
jbe
and
out
stos
cmpb
loopne
adc
jb
inc
push
pop
stos
or
scas
xor
jmp
movsl
or
jge
jle
jg
aas
cmpsl
fsubrl
xor
std
xchg
test
or
scas
or
lds
add
fdivl
test
es
push
sbb
leave
fnclex
andb
mov
outsb
fbld
js
cmp
push
push
push
push
movsl
dec
shl
cmp
mov
cmp
clc
out
jns
bnd
pop
ljmp
out
cmp
ret
cmp
mulb
cli
fwait
mov
dec
clc
xchg
push
sub
adc
aam
cmp
adc
test
call
insb
ds
loop
ss
cmp
das
fildl
mov
xorb
es
rcll
add
ljmp
gs
shl
rcl
inc
js
fidivrl
add
imul
xchg
push
xor
fs
ss
jne
inc
rorb
jb
ljmp
outsb
mov
xor
cwtl
sahf
cmp
push
pushf
fstps
xchg
and
mov
or
data16
fdivs
out
jecxz
je
adc
cmp
inc
stc
and
out
pop
mov
mov
or
adc
dec
cmc
sub
jo
dec
inc
movl
add
add
ljmp
int3
inc
cli
pop
push
popf
sbb
cmp
cmp
addr16
test
popa
xchg
out
lods
lret
jno
jge
std
sub
adc
or
out
mov
sahf
mov
iret
push
or
mov
in
adc
cltd
adc
imul
push
xchg
cld
sbb
lock
jg
in
out
pusha
mov
les
mov
push
sub
inc
jle
adc
push
xor
or
or
inc
xchg
cmp
jp
clc
jb
sub
shr
push
jg
pop
push
cmc
dec
bound
mov
jne
addr16
pop
insl
lock
xor
lret
or
iret
jecxz
lods
stos
mov
cmpsl
sahf
inc
popa
sub
push
into
stos
dec
call
movsb
testb
xor
xchg
fisttpl
mov
rcrb
adc
je
pop
ret
data16
or
decb
add
jno
inc
mov
sti
xchg
test
xor
lcall
pop
jb
fdivrl
mov
inc
jo
mov
mov
aam
in
js
mov
mov
pop
test
sub
xchg
ss
cmp
mov
adc
and
cmpsb
push
adc
cltd
pusha
dec
movsb
jg
cltd
fidivrl
cli
pop
add
mov
push
in
xchg
or
fsubrs
cwtl
fcmovnbe
or
lods
test
xor
testl
dec
xor
cltd
add
into
inc
mov
aaa
daa
ret
enter
mov
jns
push
mov
pop
dec
repz
arpl
push
add
sbb
clc
jne
mov
cmpl
xor
mov
test
mov
test
cmc
jnp
adc
pusha
test
sub
jl
pop
jmp
pusha
mov
cwtl
jns
out
aad
mov
pop
push
pop
clc
xor
push
cmp
jmp
and
pusha
mov
mov
test
xchg
mov
jge
cmp
pop
fisttps
roll
push
jno
mov
or
bound
les
int
cmpsb
repz
xor
jge
lds
dec
shl
mov
jbe
fcoml
dec
das
cltd
sarb
xchg
xchg
adc
insl
aam
test
scas
mov
mov
ret
je
sbb
jp
jmp
out
pop
dec
fwait
dec
mov
fldcw
push
sbb
mov
fidivrl
xabort
adc
sub
dec
repz
shll
aad
mov
sti
aam
cmp
jbe
push
shll
sbb
push
outsb
mov
repz
sbbl
pop
mov
mov
cmpsb
xchg
adc
jae
mov
xchg
xor
shrl
dec
pop
ret
out
in
popf
push
push
push
jecxz
pop
addr16
sahf
imul
cmp
mov
push
nop
gs
shl
lcall
outsl
popa
pop
mov
add
leave
loopne
mov
or
sbb
pop
call
and
add
movsl
sub
shlb
xor
jns
into
and
addr16
adc
adc
loopne
fdivrs
sub
inc
or
cmp
mov
xor
js
xchg
push
xlat
int
push
repnz
and
notl
sbb
es
sbb
test
aad
xchg
or
clc
fmulp
fcoms
repz
mov
movsl
push
add
repnz
pushl
imul
and
push
popa
leave
divps
out
xor
test
notl
jle
gs
pop
xchg
or
fnstsw
cwtl
cwtl
cmp
sub
fldt
xor
add
mov
or
jno
mov
mov
shl
pop
mov
lret
jp
mov
cwtl
push
xchg
inc
mov
mov
inc
stc
rorl
dec
out
stc
lret
icebp
sbb
cs
mov
cs
jae
fstpl
cmpsl
lea
fsubrs
ret
add
xor
push
loop
lods
pushf
sbb
push
add
jae
pushf
sahf
das
jg
add
mov
and
in
pop
test
push
stos
xor
push
lea
push
push
outsb
mov
mov
insl
sub
mov
and
ja
bound
sbbb
mov
jg
mov
or
pop
or
fmull
xor
xchg
shrb
ja
in
adcl
cs
sub
mov
adc
inc
lret
sbb
pop
sub
xor
mov
mov
out
xchg
cmovo
jg
imul
daa
popa
loop
cmc
or
or
test
xlat
mov
jl
inc
dec
push
cmpsb
mov
dec
push
cld
stc
ror
cmp
dec
adc
pop
and
pop
int3
rcrl
lcall
loope
sbb
push
stos
push
mov
mov
fstpt
cwtl
adc
hlt
inc
repnz
out
xor
ret
xorl
inc
inc
cmp
or
ja
jo
cltd
push
daa
or
orl
xchg
outsb
push
add
enter
xchg
cmp
dec
mov
arpl
cli
test
and
popf
cmp
outsb
in
sarl
cmpsl
test
add
mov
xchg
xchg
scas
adc
push
cmp
jl
rorb
lcall
cwtl
jnp
mov
in
lahf
mov
and
dec
data16
and
add
test
mov
adc
pop
push
mov
cmp
out
outsl
rcrb
mov
and
dec
jg
cmp
scas
xor
insl
xchg
fstpl
xor
add
mov
in
sbb
out
je
aas
xor
loop
pushf
stc
inc
jo
mov
jns
test
and
fistpll
inc
mov
pushf
or
push
ret
jl
xor
in
sbb
cmp
fdivrl
outsl
imul
xchg
cmp
movsb
inc
popl
movsl
clc
test
cltd
and
rcr
dec
fsubrl
flds
bound
pop
jmp
sub
dec
cmp
xlat
ljmp
add
stos
pop
push
mov
insb
sub
jne
jecxz
adc
inc
imul
add
dec
std
xchg
adc
lret
sarl
xlat
add
cmp
mov
jle
cmovbe
sbb
mul
pop
jmp
fdivrp
ret
add
rorl
fidivl
fnstenv
dec
into
jmp
pop
mov
inc
jnp
pop
test
or
dec
mov
mov
int
dec
or
test
xor
movsb
dec
inc
insb
xchg
jns
ja
or
loop
in
and
loopne
sbb
rdmsr
cmpsl
jecxz
insb
and
shlb
insb
jbe
enter
sub
push
or
or
leave
ret
inc
dec
rclb
dec
js
or
mov
xchg
mov
jne
push
lock
cld
jle
das
push
xchg
test
sub
adc
aad
out
fstpt
test
dec
pop
fsubl
ds
gs
cld
pop
push
pusha
and
xchg
fnstcw
xor
ret
int3
sar
sti
push
or
or
call
popl
mov
gs
adc
xchg
adc
cmp
stc
pop
arpl
popa
movl
push
push
sti
cmp
call
test
xchg
cmc
xorb
sbb
repz
pop
adc
push
jbe
loop
xor
sub
cwtl
shr
push
mov
pop
dec
mov
lea
cmc
fwait
or
scas
lahf
xor
cmc
rorb
mov
sbb
cmpsl
add
cli
js
cld
roll
jbe
mov
or
imul
push
sahf
push
xchg
inc
jecxz
pop
inc
add
inc
sbb
dec
call
loop
fistpll
jl
jle
inc
pop
call
cli
pop
inc
pop
and
imul
cwtl
test
in
xlat
orb
add
mov
int
mulb
jle
pop
roll
shrl
or
push
int3
sbb
pop
sahf
repnz
ret
adc
mov
out
push
cmp
lods
add
pop
dec
andl
test
movsb
lret
lcall
lds
adc
inc
add
sbb
dec
in
popa
loopne
fidivs
adc
stos
cmp
pushf
jns
mov
add
into
or
jae
cmp
or
std
sahf
js
sbb
and
dec
cmp
xchg
shlb
or
in
push
nop
pop
stos
call
sub
test
jle
jmp
es
jno
clc
loope
pop
mov
inc
jo
lcall
call
xor
test
hlt
xor
pop
sahf
xchg
and
cmp
movsb
pop
notl
stc
inc
and
lods
mov
lahf
fst
enter
lds
addr16
mov
cwtl
pop
mov
mov
xor
fsubl
inc
jbe
xchg
dec
cli
cmp
and
sti
sbb
sbb
mov
ficoms
addr16
dec
fsubrs
ret
test
cmp
out
test
mov
push
test
clc
mov
cmp
ja
mov
xlat
fsubs
rorb
in
lahf
mov
repnz
mov
sbb
xchg
gs
outsl
mov
out
pop
mov
sub
pushl
jle
into
cwtl
adc
jecxz
push
xchg
outsb
lods
jne
mov
icebp
mov
addb
cmpsl
std
jbe
lgs
call
js
jecxz
js
jmp
pop
sub
push
aad
and
sbb
in
test
sahf
push
jo
dec
sbb
fs
and
add
mov
xchg
xchg
fisubl
add
int
adc
mov
sbb
cld
jecxz
jg
jmp
in
es
mov
jb
leave
sub
push
aam
cwtl
mov
mov
cmp
mov
int
fucom
rcl
inc
cmp
push
into
and
loop
pop
jle
cmpsb
loop
std
push
xchg
push
call
fbstp
stos
pop
jg
cli
lea
mov
lcall
aaa
addr16
cli
pop
repz
addl
jne
into
je
or
in
and
dec
mov
jge
shlb
das
cs
in
jnp
or
jecxz
scas
repz
xchg
mov
popf
lcall
jb
cltd
cmpsl
lret
inc
test
jle
adc
dec
idiv
ret
pop
lea
mov
sti
and
xor
test
pop
push
xor
stos
imul
ss
adc
cwtl
testb
push
sar
iret
insb
dec
jno
in
scas
and
sub
mov
mov
fmul
lock
push
push
mov
cmp
negl
jns
push
out
inc
repnz
divb
and
mov
ret
mov
cmp
in
add
scas
test
ret
pusha
xor
push
cmp
adc
cmc
jg
jb
cmp
bound
pop
pop
push
data16
arpl
mov
int
mov
sahf
daa
sbb
lods
and
je
push
fstpt
adc
aas
jmp
jp
ss
dec
inc
clc
ffree
ret
fldenv
subl
jae
cmpb
jg
inc
stos
push
add
pop
xlat
push
sub
mov
sbb
rol
iret
addb
cltd
pop
and
sbbl
pop
or
sub
mov
lds
add
mov
mov
cmpsb
sbb
or
jo
stos
fcoms
jne
jg
ficompl
je
add
test
inc
dec
cmpsl
add
cmp
outsb
inc
dec
jno
pop
pop
sbb
cwtl
and
clc
lret
mov
out
mov
les
push
mov
outsl
lret
clc
push
rorb
cmp
imul
pushf
lea
aad
stos
or
fistpl
or
cs
jns
push
out
xor
cmc
xchg
cmp
push
aas
mov
lcall
and
push
pop
add
push
inc
sahf
dec
mov
repz
mov
lret
lret
sahf
push
in
or
cs
rcrb
call
cld
dec
iret
testl
popf
push
xchg
or
iret
xor
lea
adc
lea
sub
jb
add
lock
pop
jl
sub
jge
addr16
mov
in
out
mov
in
popa
push
aad
insb
dec
adcb
mov
fiadds
cmpsl
push
xchg
adc
jo
jmp
jge
mov
into
popl
cmp
mov
test
scas
cmp
stos
dec
repnz
dec
stc
cmpsb
sub
push
cmp
jge
dec
mov
mov
int3
dec
out
imul
popf
in
pop
fdivr
push
fwait
mov
sub
dec
or
dec
in
jb
dec
mov
scas
adc
stos
push
hlt
inc
mov
inc
inc
cwtl
out
js
mov
add
sti
je
fldl
pop
daa
push
jnp
bound
bound
test
cmp
outsb
rcrl
push
push
add
enter
push
out
jp
mov
test
cmc
ret
fst
das
dec
sub
int
cmp
jl
shlb
jl
xchg
fcomip
rol
test
shl
gs
pop
xor
or
mov
push
pop
insb
int
push
leave
xchg
pop
sub
insb
in
adc
mov
enter
xorl
push
and
ret
inc
lret
inc
enter
mov
lahf
cmp
pop
ljmp
push
push
xchg
xchg
or
cmc
xchg
push
in
mov
lahf
jge
jns
cmpsb
inc
lcall
ror
int3
dec
pop
sbb
roll
sub
pop
push
popa
in
pop
loope
adc
ret
movsl
fbld
pop
adc
stc
hlt
es
rclb
loope
pop
mov
xchg
in
lret
xchg
adc
pop
jecxz
movsb
mov
jge
jnp
mov
notb
mov
xlat
sub
jmp
orb
add
mov
aas
das
mov
movsl
xchg
pop
cs
cmp
lcall
leave
cmpsb
cmpb
and
pop
jecxz
add
gs
sub
jb
mov
mov
adcl
lds
push
in
and
xchg
push
imul
lahf
push
popf
inc
out
repz
mov
dec
mov
shlb
adc
jle
jnp
clc
or
out
inc
fidivrs
sarl
xchg
clc
rcr
mov
aad
pop
icebp
test
fistps
adc
loop
mov
gs
test
mov
icebp
test
dec
cmp
repz
aad
test
sbbb
mov
pop
adc
add
fbld
xlat
cmp
adc
dec
cs
jp
and
daa
jg
fisubrs
in
outsb
mov
popl
inc
popf
ror
roll
inc
xchg
outsl
push
push
push
das
js
xchg
jo
sbb
push
mov
sbb
pop
cmpsl
adc
xchg
test
sub
dec
xchg
mov
les
ja
xor
mov
daa
std
orl
jl
test
ds
and
insl
fs
loopne
mov
inc
push
fisubrl
mov
arpl
insb
xor
mov
sub
mov
push
or
and
jno
inc
popa
push
sbb
or
lcall
divl
xor
iret
jl
enter
cmpsl
push
int
mov
iret
loopne
dec
pushf
ljmp
testl
dec
ss
jl
das
push
inc
mov
out
cmp
dec
sbbl
lcall
mov
pusha
mov
clc
jno
out
rcl
test
mov
mov
cmp
dec
les
mov
push
fwait
test
push
mov
divb
test
and
out
aaa
nop
push
and
fwait
popf
adc
xlat
ja
sbb
ja
repz
jmp
jbe
pop
adc
daa
adc
test
call
or
dec
jp
mov
call
or
and
inc
xor
dec
mov
xchg
lcall
push
mov
sahf
addr16
leave
xchg
dec
inc
inc
xor
xchg
jo
mov
sub
ret
mov
mov
or
jo
stc
mov
enter
scas
xor
mov
andl
mov
push
cmp
test
aad
lcall
test
or
outsb
dec
and
ret
push
and
mov
out
popf
mov
dec
rorb
sbb
sub
pop
lret
imul
popa
lahf
in
add
jle
lret
dec
cmp
fdivs
lock
shll
std
fs
test
xchg
popf
sub
jo
push
imul
test
push
jge
out
call
dec
clc
or
xadd
dec
inc
xlat
lahf
sti
dec
inc
ret
stc
gs
ret
xor
imul
pop
inc
mov
lret
jnp
push
cmp
mov
mov
lds
aaa
mov
mov
xchg
sbb
inc
and
stos
jns
push
dec
cmp
das
push
jle
call
in
add
pop
or
add
lret
xor
push
jno
rcrb
negb
dec
jnp
mov
fs
cmpsl
aam
dec
fwait
cmpsl
mov
xor
and
mov
jo
stc
sub
rorl
movsb
inc
add
or
sar
cltd
lret
xchg
and
subl
stos
rcl
jge
cmp
rcl
xchg
pushl
pop
adc
scas
insl
lret
popf
dec
dec
arpl
fidivrl
fwait
iret
xchg
test
jo
sub
lret
pushf
mov
psraw
mov
das
and
stc
dec
mov
xchg
sbb
pop
cvtps2pi
loope
imul
cmp
pushf
stc
andl
jecxz
mov
mov
bound
das
or
or
movsl
dec
jbe
scas
xor
pop
je
jns,pn
xchg
pop
add
ja
out
mov
pop
mov
mov
mov
dec
pop
sbb
fdivrp
pop
fwait
sub
mov
and
daa
pop
and
xor
pop
pop
add
inc
cmp
movsl
lret
push
fildl
jno
push
test
jg
fists
sbb
ljmp
arpl
nop
jge
inc
std
cli
iret
push
mov
sub
std
scas
xchg
aam
cwtl
scas
add
adc
es
pushf
test
mov
loope
icebp
cwtl
xchg
mov
cmp
es
dec
xchg
scas
ja
cmp
mov
pop
adc
test
mov
jns
jle
xor
loop
fnsetpm(287
nop
andb
sbb
mov
push
or
add
pop
test
dec
pop
adc
outsb
and
mov
or
mov
inc
dec
mov
mov
jle
mov
dec
fstl
mov
mov
xchg
sbb
sub
or
fsubrs
push
pushf
popa
xor
repz
xor
std
and
orl
imul
aaa
cmovo
sbb
mov
inc
fmuls
scas
fidivrl
inc
jg
and
shlb
out
jo
aad
mov
ja
xchg
movsl
daa
bound
dec
pop
scas
clc
int
or
sub
inc
repz
cmpsl
adc
xchg
fistpl
in
fsubr
stc
arpl
mov
push
mov
clc
ds
adc
push
fisubs
mov
jmp
or
adc
jae
jg
std
mov
add
ljmp
push
inc
inc
inc
cmp
daa
loope
daa
add
test
mov
inc
loope
xchg
jmp
mov
lods
inc
inc
jg
sub
cmp
insl
cmp
stos
loope
pop
aaa
test
aad
addr16
cwtl
push
popa
mov
mov
xchg
cmpl
xor
mov
cld
sub
jmp
cmp
dec
incb
jns
add
sbbb
xchg
dec
mov
jmp
inc
data16
xlat
xor
stos
pop
xchg
inc
xchg
lcall
mov
test
pop
out
into
lods
xchg
inc
dec
mov
ret
or
ret
jno
jo
sbb
cmp
pusha
sub
mov
push
int
dec
fwait
cmp
sbb
cli
add
jp
ss
pop
gs
xor
dec
dec
das
sub
xor
sub
enter
stos
jae
mov
sub
dec
inc
mov
mov
push
nop
push
insb
loopne
arpl
popf
mov
sbb
std
xchg
xor
or
cmc
repnz
popf
jns
lds
push
pop
sub
fisttpll
cmp
imul
lcall
aas
inc
lds
and
xor
out
cld
js
aam
test
into
push
sub
addl
mov
testl
mov
mov
dec
dec
data16
pop
mov
cmp
mov
push
loope
xchg
fcmovb
test
mov
pop
inc
add
sub
add
repnz
inc
cmp
rorb
js
push
les
dec
or
cmp
iret
loope
xchg
mov
xchg
lea
xor
popf
imul
cld
jl
in
popf
xor
jns
fs
loop
push
call
fdivs
fwait
push
mov
int3
dec
add
lret
lock
adc
pop
fimuls
pusha
mov
sti
or
sub
sbb
push
sahf
adc
mov
mov
adc
jo
mov
nop
inc
out
in
movsl
jae
jmp
mov
push
pop
rolb
xor
mov
mov
loop
jp
mov
xchg
loopne
push
push
setne
ficoms
dec
adc
jb
dec
out
mov
icebp
mov
shrl
loop
repz
pop
aad
sahf
shll
sbb
mov
lcall
push
loop
xchg
sbb
xchg
jge
xor
xchg
addr16
jp
xchg
int
arpl
or
xor
std
popa
nop
cwtl
xchg
subl
lret
rcll
push
inc
test
in
push
std
sub
add
fnsave
mov
adc
jno
movsl
lods
push
pop
dec
xorb
xor
outsb
lret
jns
sbb
mov
lcall
jo
cltd
pop
js
cmp
ficompl
inc
xchg
mov
pop
mov
shrl
lret
into
dec
pop
xchg
stos
jmp
mov
push
data16
fcomp
outsb
jecxz
fimull
std
adc
mov
sbb
sbb
adc
pop
xor
and
mov
cmp
cmpsb
cwtl
inc
lahf
es
push
sbb
add
jl
inc
aam
int3
and
xor
jmp
subl
jp
scas
adc
xchg
bnd
pop
sbb
cltd
test
inc
lods
inc
inc
loopne
daa
mov
xchg
mov
push
mov
hlt
xchg
adc
icebp
fmull
setb
loopne
sbb
mov
outsb
xor
pop
add
clc
dec
inc
lock
and
fcoml
sbb
jno
sub
and
cs
pop
pop
cmc
mov
popa
push
jp
idiv
aas
mov
fadd
es
xchg
pushf
mov
imul
inc
rcrb
sti
int
fdivrs
push
sub
movsl
jbe
notb
movsb
mov
or
mov
out
popa
popa
add
lds
push
pop
mov
and
inc
bound
xchg
jbe
push
lds
rclb
aaa
roll
jns
mov
cmp
cmp
inc
mov
jmp
sbb
repnz
jmp
out
inc
nop
push
in
jbe
inc
or
inc
stos
fs
adc
mov
inc
pop
inc
jb
pusha
push
fwait
jge
sbbl
fisubl
jmp
push
lods
jbe
rorl
pop
xor
inc
call
in
pop
sub
fildll
or
mov
inc
push
push
pop
and
loope
les
jne
bound
movsb
sbb
and
repz
fsubr
mov
fwait
pusha
xor
add
sbb
mov
xchg
insl
mov
mov
stos
add
fstpt
xchg
push
pop
jb
add
inc
scas
push
sub
es
push
sbb
mov
dec
adc
or
pop
rolb
mov
adc
cli
push
push
call
in
orl
int
mov
mov
loopne
pop
dec
mov
xchg
mov
jb
pop
sub
mov
xor
adc
push
lret
lea
pop
fbld
mov
pop
stos
das
jmp
neg
sub
mov
push
dec
movsl
shll
loope
cmp
sbb
pusha
push
push
xchg
fs
in
pop
mov
dec
insl
pop
add
mov
fwait
ret
daa
sbb
loop
imul
inc
dec
dec
sub
pop
pop
and
mov
push
lods
pushf
pop
int3
xor
sbb
xchg
aaa
lahf
cwtl
jp
add
sub
adc
jo
jg
lock
push
jbe
xchg
stos
add
int3
loop
push
push
loop
aas
xor
jb
shll
pop
test
ds
pusha
imul
ret
mov
je
js
and
or
dec
pop
jecxz
int3
adc
lods
inc
and
jl
push
mov
dec
lcall
xor
cmp
fst
in
pop
addl
jns
mov
mov
push
out
sub
xchg
in
dec
mov
jp
dec
xchg
jne
movsl
cwtl
pop
out
sbb
icebp
enter
cmp
mov
inc
push
or
inc
sub
dec
stos
cmp
lret
sub
enter
cmp
fstp
ds
aad
mov
xlat
push
mov
or
sbbb
jecxz
mov
pop
adc
repnz
fcomps
push
push
xor
jmp
ds
dec
add
call
pushf
xchg
push
jb
jno
xchg
xlat
pop
xchg
cmp
mov
insb
dec
and
jno
std
scas
test
insl
in
fldenv
imul
nop
fcompl
test
and
test
dec
scas
xor
mov
jle
fwait
and
mov
sbb
cmc
movsl
dec
mov
mov
mov
out
into
shrl
dec
fidivl
lds
jp
inc
xor
fildll
or
sti
fldt
add
add
stc
imul
daa
gs
push
jo
fnstcw
mov
cmpsb
inc
jle
les
push
icebp
in
mov
sbb
movsl
dec
inc
roll
outsl
arpl
pop
sbb
xchg
gs
test
pop
das
shlb
fisubrs
jecxz
mov
adcb
mov
movsl
mov
sub
stos
cwtl
xor
xor
cmp
loope
push
cmp
sbb
sub
addr16
mov
pop
cmp
pop
loopne
mov
sub
push
dec
test
popf
addr16
lods
push
das
push
push
cmpsb
cmc
jecxz
adc
in
mov
das
jbe
mov
hlt
inc
out
mov
or
add
jmp
jmp
in
mov
inc
and
lods
aaa
sbb
call
ud1
in
or
decl
mov
mov
in
xchg
hlt
xor
aam
cmp
dec
divb
and
add
and
sbb
cld
in
adc
mov
pop
inc
cmpsb
push
outsb
push
jnp
pop
jb
mov
adc
iret
xor
dec
pop
movb
mov
iret
nop
cmp
push
add
out
adc
jp
enter
movsb
pusha
lret
test
lahf
popf
call
pushf
into
mov
leave
out
adc
inc
add
adc
jg
cltd
xchg
xor
xorl
xchg
out
sbb
loopne
pop
test
les
addr16
test
dec
jno
mov
into
pmaxub
mov
mov
push
pop
shrb
lcall
xchg
mov
mov
xchg
xchg
dec
cmp
lods
xchg
sti
incl
arpl
jo
lods
rolb
xchg
in
push
mov
xchg
ja
xor
flds
scas
sbb
dec
jl
cltd
cmp
popf
jp
test
mov
jo
lcall
mov
mov
lahf
pop
adc
push
int
push
mov
xor
dec
sbb
dec
sbb
mov
adc
test
push
call
xchg
jl
dec
inc
pop
inc
mov
push
leave
push
push
clc
icebp
inc
test
mov
lcall
dec
or
test
cmc
arpl
or
movsl
cmpb
xchg
inc
lock
pop
rcr
jno
sub
inc
push
ss
mov
repz
shll
cltd
dec
xlat
add
add
push
sarb
xchg
xchg
xchg
out
push
jnp
xchg
mov
es
dec
sti
cmp
repz
leave
xlat
test
ret
sub
xor
cmp
popa
jl
hlt
mov
mov
adc
ret
pop
movsl
and
jno
cmc
mov
adcl
in
cmpb
mov
rcrb
mov
fbld
xor
bnd
lds
cmp
fdivrl
jns
arpl
stos
in
dec
ret
add
ja
mov
sub
push
push
or
or
sub
pop
sub
jmp
dec
divl
out
push
arpl
sbb
mov
pop
lods
icebp
hlt
dec
jl
aaa
mov
in
jb
cmpb
adc
push
loope
cs
inc
xchg
call
inc
in
out
lds
in
in
sub
fdivs
adc
xchg
jecxz
cmp
gs
push
icebp
mov
pop
mov
cmp
repnz
add
in
or
daa
mov
xlat
add
mov
je
lret
fwait
or
movsb
jbe
mov
repz
mov
out
das
xor
popa
fcmovnu
std
insb
sub
leave
adc
pushf
ljmp
rcll
mov
inc
testl
inc
cwtl
mov
loop
mov
lods
add
jns
or
or
sub
lret
int
pop
stc
pop
dec
dec
sbb
dec
out
and
jae
mov
push
push
mov
cmp
mov
push
pop
shr
aaa
mov
pusha
and
cmp
test
add
or
mov
pop
push
sbb
mov
stc
xchg
ss
mov
xchg
jb
sahf
push
add
sahf
pop
xor
push
mov
jae
pop
pop
jae
iret
lods
clc
and
adc
jne
test
out
dec
lods
ficoml
outsb
std
fwait
cmp
jmp
pop
push
xchg
ss
mov
sbb
movsl
jecxz
test
repnz
les
push
pop
mov
aam
and
cld
mov
lcall
lds
bound
mov
cmpsb
sbb
push
data16
ss
movsb
cmpsl
mov
and
stos
in
pop
xchg
inc
jb
sbb
pop
fwait
ja
xor
xor
andl
aas
dec
jae
pusha
test
test
lcall
ja
jae
and
data16
or
mov
push
dec
jae
leave
sbb
ja
orb
sbb
shlb
in
scas
les
test
pop
lret
jge
repz
adc
push
test
shlb
adc
hlt
mov
add
int3
add
sub
ss
in
lcall
mov
and
popa
push
sub
pusha
ret
xor
mov
and
mov
pushf
and
or
in
cmp
adc
mov
push
jno
sub
or
dec
dec
imul
mov
movsb
bound
cmp
dec
rorb
or
push
loope
cltd
mov
mov
xchg
xchg
scas
std
sub
mov
sbb
xchg
sub
or
ret
mov
sub
add
xchg
loope
in
jl
xchg
lea
mov
xchg
or
sbb
gs
shrl
ds
lret
mov
pop
aam
lods
push
movsl
sbb
std
xor
pop
scas
paddw
inc
ret
std
jp
inc
inc
sub
fistpl
or
jnp
movsb
pushf
xchg
int3
xorl
rorl
adc
or
add
or
jb
movb
mov
and
pop
xchg
loope
test
or
out
or
xchg
push
rclb
jnp
flds
or
sbbl
adc
rcl
push
lcall
adc
sbb
sbb
mov
mov
out
scas
jno
adc
push
dec
loop
pop
xchg
fistpll
fadds
jmp
and
pop
dec
pop
add
cmpsl
push
xchg
cwtl
and
or
or
mov
pop
aas
inc
adc
sbb
jmp
les
mov
adc
in
dec
cmp
or
adc
jmp
mov
fildll
and
scas
out
or
test
cmpsl
out
push
sbb
xchg
adcb
cmp
adc
outsb
aas
xchg
ja
push
dec
mov
pop
and
cld
ja
mov
adcb
and
ljmp
test
inc
or
fisttps
or
pop
fcomps
out
cmpsb
inc
in
into
jg
out
cli
cmp
xor
jne
inc
inc
adc
dec
out
dec
xor
push
mov
jo
and
cltd
out
gs
sahf
pop
cmpsl
in
ljmp
mov
sub
push
mov
cmp
inc
dec
pop
mov
add
frstpm(287
fldl
cltd
dec
mov
aam
cwtl
jnp
inc
jecxz
push
sub
xorl
arpl
pop
add
jns
jmp
xor
add
roll
pop
cmp
lret
fldl
cmp
lret
popa
jmp
sub
pushf
pusha
jne
imul
jne
inc
fcomi
in
sbb
int
pop
pusha
lahf
xchg
xchg
cltd
mov
and
push
repz
or
jno
test
pop
sub
jns
mov
sti
into
das
xchg
dec
jmp
movsb
mov
test
popf
add
mov
pop
mov
xchg
les
jl
ficomps
adc
ds
sbb
ljmp
testb
and
cmp
or
outsl
xchg
scas
push
les
and
arpl
mov
test
xor
dec
or
dec
fucomip
bound
js
jle
into
sahf
movsb
add
fstl
pop
jne
adc
push
cltd
mov
mov
ret
mov
push
fcoml
popa
jl
adc
lahf
sarl
lret
ds
xchg
js
sar
test
mov
adc
out
or
lock
scas
mov
mov
push
call
out
push
pop
ret
jb
mov
cwtl
add
inc
insb
fsubrs
pop
adc
sub
mov
sub
adc
pushf
or
inc
testb
xlat
lcall
or
push
in
and
popf
mov
leave
or
ja
test
inc
cmc
mov
add
popf
pop
jns
test
leave
mov
js
adc
pop
inc
in
outsl
cmp
pushf
and
int3
cmovb
mov
and
lock
jmp
cmp
dec
daa
mov
mov
pusha
push
xchg
xchg
in
or
stos
enter
pop
mov
in
lret
pop
add
mull
bound
inc
std
push
jno
lods
insl
out
mov
add
and
jb
or
not
test
cmpsl
and
dec
out
mov
jg
fnstenv
sbb
aam
test
xchg
lds
xor
sti
test
pop
dec
push
dec
cmc
outsl
out
ja
jg
or
int
sbb
add
pop
adc
adc
fsubrl
rcl
and
xor
icebp
cwtl
dec
enter
sbb
mov
adc
adc
adcb
add
inc
aaa
jb
sti
out
ljmp
cs
push
adc
in
sbb
or
xchg
shl
cmp
xchg
sbb
loope
das
pop
sbb
popa
push
ds
ret
decl
push
aad
jl
fdivr
insb
and
pop
pmovmskb
cmp
mov
lods
pushf
mov
pop
in
aaa
sub
nop
pusha
adc
loope
mov
mov
lret
jg
xchg
in
fwait
jp
js
pop
cli
cmp
ss
movb
or
ds
mov
sbb
loopne
and
mov
mov
dec
adc
roll
movsb
inc
inc
pop
add
gs
xor
cwtl
inc
push
scas
mov
ljmp
add
nop
sahf
sub
sub
jl
add
les
jb
lret
aam
sub
pop
aam
push
sbb
add
mov
cmpsb
insl
cmp
mov
push
fmuls
and
sbb
fs
or
daa
mov
xor
sub
lret
lret
mov
sub
popf
aas
pop
and
pop
sub
mov
arpl
fimull
out
mov
cmpsl
stos
and
fcoms
in
js
sahf
cmp
in
or
rol
and
addl
push
inc
or
xor
sti
sub
mov
out
je
or
pop
xor
insl
xor
dec
sbb
cwtl
add
imul
mov
stos
or
dec
jp
das
xchg
outsl
insl
pop
xchg
adc
mov
ret
adc
icebp
daa
ret
aas
frstor
pusha
xor
mov
mov
test
out
mov
jg
stos
jp
mov
and
test
or
jge
imul
orb
in
in
clc
pop
mov
cmpl
pop
pop
add
stos
xorl
xor
cmp
pop
push
out
lret
in
lcall
outsb
and
shl
sbbl
inc
sub
clc
insl
xchg
pop
orb
ljmp
rcrb
add
sbb
das
fistl
rorb
dec
and
imul
jecxz
sub
xchg
stc
mov
stc
lret
adc
cmp
insl
sahf
push
add
les
outsl
pusha
aad
jnp
mov
push
xchg
lock
sarb
movsl
fnstcw
sbb
lret
or
mov
inc
fmul
push
and
adc
pop
lcall
mov
outsl
jnp
stos
jl
xor
mov
mov
mov
push
cmp
mov
test
jle
jbe
sub
mov
orb
xor
lods
popf
mov
fistpl
cmpsl
push
mov
sbb
xor
mov
sahf
or
mov
sub
cmp
inc
push
bound
push
cltd
sbb
out
inc
or
jl
dec
pop
int
int
mov
sahf
fs
into
mov
aaa
mov
popf
xchg
aas
cli
jbe
lock
clc
mov
lret
push
and
lahf
decl
hlt
std
inc
dec
mov
cld
push
fs
add
jne
sub
imul
xor
loope
inc
movsl
aas
ja
pop
les
imul
insl
adc
inc
jno
stos
jecxz
mov
insl
insb
or
mov
scas
dec
iret
mov
or
in
je
out
imul
dec
dec
loope
pop
jns
iret
imul
stos
jo
xchg
pop
mov
and
jmp
jo
xchg
jp
or
xor
jp
sbb
mov
xlat
lret
test
mov
mov
int
in
data16
pop
push
push
mov
push
mov
or
aaa
inc
mov
mov
inc
add
dec
pusha
cwtl
lret
or
add
lds
repz
hlt
sub
cwtl
mov
dec
int3
iret
push
dec
inc
das
stos
adc
sub
gs
shlb
test
push
sub
shll
sbb
mov
cli
ljmp
es
cld
fnsave
mov
movsl
jno
xor
imul
movsl
js
sub
add
or
mov
mov
pushw
lock
into
mov
jg
lret
aad
fcmovne
jns
xor
es
cmpsb
jne
xchg
jg
and
fisubl
test
stos
mov
adc
test
les
mov
out
aaa
cli
adc
lahf
cmpsl
inc
test
and
hlt
out
push
outsl
lea
sbb
arpl
mov
dec
clc
cmp
dec
cld
pop
test
repz
ljmp
ds
arpl
jno
icebp
pop
push
lret
jbe
sbb
pop
inc
jmp
xchg
push
cmp
leave
mov
test
jne
jb
mov
inc
sub
dec
pop
lret
adc
lret
xchg
ljmp
and
sub
insb
iret
pop
mov
xor
das
es
sbbl
xor
fdivs
movsb
dec
dec
xchg
mov
mov
sub
dec
inc
pop
imul
sbb
cld
addr16
aas
outsb
cmc
xor
mov
jg
gs
or
adc
mov
fists
mov
cmp
sbb
icebp
pop
jmp
xchg
arpl
outsb
dec
jl
push
aam
scas
inc
mov
pushf
dec
sub
dec
inc
dec
loope
loop
sub
pop
cld
mov
jmp
sbb
aas
ret
enter
ret
sub
dec
fninit
fstp
jge
dec
ljmp
mov
sub
and
loop
cld
test
adc
mov
and
clc
bound
notb
and
nop
mov
fimull
outsl
push
lock
mov
cmp
inc
pop
mov
test
mov
sub
lahf
lock
add
jle
mov
std
mov
scas
leave
mov
cmp
scas
pop
push
push
scas
jecxz
gs
sahf
xor
pop
sbb
cmp
lds
rorb
jne
aas
xchg
popa
icebp
enter
xorl
sub
lret
mov
andl
in
xlat
mov
fcomps
insb
sbb
xchg
daa
insl
repnz
loope
in
cmp
mov
cmp
adc
lret
ds
pop
fiaddl
pop
jns
sub
dec
and
sub
sbb
imul
fcos
popa
popa
add
inc
jl
jo
mov
sbb
xchg
in
pushl
mov
ret
cmp
jo
lods
push
mov
mov
cltd
jns
xor
movsb
jge
dec
stc
cmpsb
push
shlb
sub
jp
int
dec
xchg
sbb
rorl
mov
xor
aas
clc
sbb
xchg
or
xchg
mov
add
mov
pop
sbb
push
xchg
orl
inc
imul
sbb
push
push
jmp
xchg
jns
sbb
imul
lock
push
xor
les
stos
test
xchg
and
jnp
int3
cmp
popa
lods
sbbb
ja
dec
jmp
dec
mov
and
shlb
push
rclb
dec
jns
push
push
out
subl
mov
add
stos
mov
adc
rorb
adc
cld
aad
test
jle
adc
sahf
fcomp
inc
insl
jne
sub
xlat
add
int3
outsb
cmp
xchg
jecxz
sbb
and
jns
icebp
mov
out
cld
fwait
mov
xlat
jl
fstpl
es
adcl
sub
loopne
sbb
leave
mov
jne
loope
add
inc
inc
adc
sub
rolb
sbb
or
rcl
outsl
cmpsb
fisubl
lcall
je
xor
sub
xor
push
lcall
xchg
jl
adc
xchg
and
adc
dec
fs
sbb
sub
adc
add
nop
adcl
fmull
stos
loope
movsl
imull
dec
je
pop
mov
and
icebp
lods
in
mov
aad
mov
iret
xchg
fwait
mov
imul
stc
inc
dec
jae
mov
dec
sahf
scas
dec
mov
mov
adc
xor
pop
aaa
lods
adc
in
test
sti
pusha
mov
add
adc
pop
or
movsl
lret
into
pushf
fsubs
jno
inc
mov
and
sahf
ljmp
fbld
pusha
fsubrs
and
aam
and
mov
jecxz
sub
jns
xor
xlat
movsb
push
cmc
popa
js
add
cmpsb
xchg
pop
flds
cmp
adc
mov
out
adc
push
scas
clc
data16
or
inc
ret
lret
inc
and
and
or
sti
pop
je
xchg
pop
and
sbb
push
out
or
push
mov
cltd
and
js
xchg
out
pop
xor
outsl
mov
repz
stos
and
dec
mov
dec
mov
js
xor
ds
sub
xchg
fildll
lahf
repnz
jbe
shlb
pop
inc
popa
mov
jb
push
dec
in
add
popa
sti
fcomps
jns,pt
insl
xorb
push
adc
shr
jge
sbb
dec
xchg
jle
mov
mov
nop
out
dec
xor
aas
sti
and
or
cmp
pop
push
dec
xlat
mov
and
jge
jmp
adc
cmp
xor
inc
icebp
push
sahf
test
push
subb
lcall
arpl
pop
sub
icebp
push
adc
sub
loopne
ret
data16
loopne
fidivrs
fsub
pop
push
mov
ret
imul
xchg
cmp
dec
sbb
and
jle
dec
push
push
nop
int
mov
sbb
in
and
stos
in
imul
iret
xor
cmpsl
or
pop
jae
push
xor
push
push
movsl
mov
das
mov
lret
inc
repz
pushf
and
push
mov
cltd
add
fildl
pusha
push
imul
push
repz
xchg
mov
adc
lock
inc
push
call
adc
fiaddl
sub
and
fcmovb
cmp
dec
js
in
adc
push
or
lret
adc
add
add
mov
int
scas
cwtl
push
stc
aad
add
push
lret
add
mov
or
push
pop
rcrb
call
outsb
out
mov
dec
xor
aaa
mov
aam
jns
add
dec
jg
outsl
mov
jl
sbb
cmp
in
cmp
test
fsubs
pop
das
mov
xor
les
in
aaa
or
pusha
out
mov
push
andl
je
xlat
gs
cmp
inc
lret
shrb
mov
mov
sar
leave
adc
push
push
push
insl
dec
xor
or
sub
mov
incl
mov
adc
add
imul
cli
in
inc
push
sub
xor
aam
lods
loope
push
push
lods
dec
mov
dec
mov
and
ljmp
cs
xor
jp
lahf
les
test
pop
mov
or
push
test
sub
movsb
lret
xor
lcall
sbb
mov
outsb
sub
jbe
and
mov
repz
aam
add
icebp
cpuid
push
mov
push
ret
mov
adc
xor
icebp
and
xlat
sub
adc
pop
adc
add
int
jns
push
pop
cmp
js
in
cld
and
inc
xor
fsubl
into
push
call
bsf
inc
out
push
int3
adc
lods
add
push
ret
cld
pop
ljmp
jne
inc
ret
inc
aad
cld
dec
out
lock
pushf
push
sbb
cmp
imul
out
dec
rol
add
mov
mov
popf
fnstcw
icebp
adc
repz
int
fs
dec
jns
fcmovnu
sub
add
dec
js
pop
lret
inc
sbbl
mov
mov
mov
mov
js
add
dec
leave
shrl
or
test
mov
xchg
mov
mov
scas
cmp
loop
aam
and
pusha
and
pop
sub
clc
je
scas
lods
push
sub
aaa
push
or
int3
lods
pusha
and
loope
mull
repz
insb
fists
jmp
fsub
popa
lds
lret
mov
xlat
andb
cs
jae
mov
add
pop
cmp
add
loop
push
lock
das
loope
sbb
lock
fisttpl
pop
ret
xchg
xlat
pop
xor
add
pop
push
test
daa
add
push
jno
and
in
data16
cmpsb
enter
daa
and
push
sub
pushf
adc
bnd
xchg
scas
inc
mov
sub
mull
jbe
fsts
movsb
or
fsubs
mov
push
jl
stos
jg
push
popa
mov
sbb
scas
push
jmp
add
jg
fsubrs
xchg
cmp
mov
push
pusha
dec
decb
aaa
mov
sbb
inc
lea
add
sti
pusha
and
dec
push
sbb
sbb
outsb
xor
lods
xor
pushf
rol
int3
mov
fwait
xchg
mov
mov
and
inc
xchg
cltd
add
insb
adc
cmp
xchg
inc
mul
sbb
outsl
js
mov
or
or
movsb
fidivrs
pop
daa
cmp
movsl
push
and
cmp
in
out
fadd
mov
sub
sbb
pop
fst
sbb
mov
pop
enter
enter
hlt
sub
adc
sub
icebp
cltd
xlat
movsl
jmp
cs
fisubl
mov
int
popa
ret
test
outsb
dec
sub
xchg
testl
pop
inc
add
push
div
mulps
inc
or
and
call
inc
xchg
add
xchg
mov
out
mov
pop
inc
jg
mov
sbb
push
push
cmp
mov
xchg
repnz
cltd
cltd
push
dec
mov
sub
or
fnstsw
andl
faddl
push
scas
push
call
jo,pn
xchg
mov
jle
out
push
adc
cmpsl
pop
loopne
adc
imul
cmpsb
bnd
dec
insb
rclb
pop
addb
fdiv
cwtl
pop
jo
test
jp
push
push
int
add
adc
or
xor
lods
sub
lcall
dec
push
push
insl
test
out
nop
call
jle
jl
fmul
inc
scas
jg
jbe
dec
aam
shll
push
sbb
and
jne
pop
clc
lcall
loope
sub
xor
mov
enter
mov
inc
xchg
xchg
jmp
cmp
rcr
cld
xorl
pop
fcomip
inc
inc
inc
mov
push
mov
imul
fistl
jne
mov
xchg
mov
testl
sub
fwait
mov
push
repz
xchg
scas
sbb
and
rolb
pop
mov
cld
arpl
mov
pop
mov
jmp
sbb
mov
xor
sub
js
cmp
rclb
popf
movsb
jle
aam
inc
or
inc
je
mov
sbb
push
repz
popf
mov
scas
xor
out
mov
inc
subl
test
mov
aas
pushf
jg
xchg
shr
add
rol
fldenv
xor
stos
stos
pop
clc
push
jns
in
sbb
imul
sub
sub
mov
in
enter
mov
mov
adc
sbb
mov
mov
test
gs
dec
pop
insl
in
sti
shl
leave
or
add
insb
cmc
ja
inc
sub
ljmp
hlt
push
push
mov
insl
in
insl
dec
xor
pop
clc
inc
rcrl
fsts
or
mov
rcll
clc
outsb
inc
mov
dec
lahf
roll
inc
imul
sub
daa
ljmp
movsl
adc
fs
push
add
sbb
adc
mov
lahf
and
pop
test
push
sub
mov
adc
inc
xchg
addr16
adc
jb
sbb
cmpl
shr
or
sti
frstor
shlb
popf
addb
jb
push
shlb
jmp
adc
sub
fstpl
lea
sarl
pop
and
sbb
push
xor
icebp
add
sti
pusha
pop
aas
add
mov
pop
sub
jg
adc
fcomip
cltd
jno
cmp
outsl
sbb
fcomip
insb
xchg
mov
ljmp
xchg
ds
shlb
cmpb
xorb
jmp
icebp
ret
xchg
pop
rclb
xchg
nop
jg
jmp
adc
or
cli
mov
jp
ljmp
test
jns
fisttpl
sbb
push
adc
or
inc
pop
movsb
imul
repnz
xchg
divb
movsb
mov
mov
fisttpl
lods
ret
jo
lock
xchg
lea
sarb
jl
sub
mov
lret
packsswb
xchg
pop
cmp
dec
sbbl
jnp
jnp
insb
add
stos
sbb
in
adc
or
fildll
and
and
add
fwait
dec
push
fstpl
adc
outsb
popa
test
mov
pop
mov
and
or
dec
jb
adc
addl
xor
jmp
mov
inc
cs
or
mov
sbb
xchg
push
or
into
xchg
add
dec
add
lods
jo
inc
sub
mov
or
sarl
adc
sbb
addr16
orl
mov
pusha
pop
cmp
and
push
or
in
mov
add
xchg
enter
imul
arpl
out
inc
test
addr16
mov
mov
sub
lods
cmc
enter
jns
mov
ret
fildll
mov
xchg
fldt
ss
iret
dec
adc
pop
shll
xchg
inc
add
stc
or
sahf
out
fstpl
inc
js
lods
adc
aad
add
push
dec
cs
jle
mov
sub
out
push
cmp
sarl
cs
xor
adc
into
je
movsl
xchg
xchg
pusha
imul
sbb
les
push
push
cltd
shlb
dec
outsb
je
adc
jbe
adc
enter
iret
pop
add
xor
lcall
mov
test
xor
xchg
call
scas
lods
xchg
sub
pop
or
jecxz
dec
and
push
push
cmp
adc
insl
mov
jbe
adc
adc
faddl
xor
out
xchg
pushf
popa
lea
and
negb
les
inc
out
add
jne
mov
ja
stos
push
fistl
jnp
pop
repz
loopne
mov
pop
mov
lods
or
sub
insb
mov
sti
sarl
sub
lods
sbb
call
fnsave
pop
adc
ret
dec
jb
sub
mov
mov
iret
jp
fsubrs
jmp
repz
lds
sbb
cmpsl
idiv
sahf
and
pop
mov
jb
into
aad
sbb
push
push
loope
pop
lret
es
xchg
stc
fbstp
add
mov
sub
push
pop
mov
clc
and
mov
push
sti
ja
lea
psubusb
sbb
fwait
inc
xor
cmpxchg
lods
or
adc
and
ret
mov
xor
outsl
adc
mov
lods
push
jns
add
jbe
scas
or
test
imul
test
cmp
pop
sub
jne
mov
repz
popf
mov
mov
lret
mov
push
leave
cld
aam
lds
jnp
mov
das
adc
test
test
lods
psraw
sahf
add
daa
fmul
sbb
inc
sub
xor
cwtl
loop
out
pop
add
push
daa
xchg
xchg
add
mov
dec
outsl
hlt
jb
pop
arpl
mov
lret
adc
lods
xchg
filds
pop
insb
sbb
aaa
fwait
fwait
add
call
sarb
add
lods
out
pusha
mov
add
aam
ja
cmp
adc
test
mov
sub
aad
repnz
or
mov
push
add
push
push
flds
shll
ljmp
or
jmp
cmp
push
sub
lods
xor
jmp
pop
push
cmpb
in
pop
inc
test
out
lds
daa
xchg
out
and
sub
cmp
inc
pop
les
ficoml
out
ss
sbb
pop
inc
push
std
adc
xchg
pop
inc
mov
popf
les
repnz
fistl
arpl
mov
hlt
mov
cli
orl
imul
outsl
enter
or
lods
cmp
cmpsb
leave
lods
dec
mov
sub
in
cld
scas
cmp
loope
ds
cmp
insl
and
mov
adc
int3
fidivs
rcr
pushl
test
mov
aam
subb
cmp
outsb
test
mov
aad
jns
insl
adc
push
adc
bound
imul
loope
mov
xor
or
xchg
frstor
std
xchg
mov
rcll
mov
loopne
into
cwtl
je
inc
cmp
jl
adc
fs
or
jb
int3
rcrb
or
das
insl
xchg
add
inc
or
movsl
jb
into
stos
gs
fwait
xchg
popf
pop
jecxz
cltd
cmc
lock
push
push
sbb
pop
jecxz
inc
or
cmp
mov
pusha
sub
push
daa
pop
sbb
hlt
push
nop
jmp
push
test
loope
lea
sub
sti
cltd
movb
scas
and
push
movsl
mov
jbe
bound
out
cli
shrl
lret
push
flds
hlt
fistpll
xchg
sbb
and
mov
movsb
cs
adc
and
popf
fld
sub
or
inc
popa
jnp
into
idivb
test
mov
or
cmpsl
popf
cmpxchg
ljmp
into
adc
test
sbb
mov
mov
jo
xchg
test
mov
mov
jno
xchg
xchg
icebp
dec
ds
xor
sub
je
fisttpll
call
or
sub
lods
shr
cld
dec
loopne
inc
or
mov
inc
ds
mov
mov
daa
jg
xlat
dec
add
mov
dec
js
inc
pop
mov
xlat
push
sbb
cmc
popf
or
mov
bound
mov
leave
add
push
lret
and
fistpl
xchg
lcall
sbb
inc
paddsw
decl
rclb
mov
inc
test
aas
stos
repz
cmpsl
mov
push
lock
xchg
mov
das
sub
pop
adc
jmp
inc
shll
outsl
fildl
add
scas
xor
not
out
mov
movsb
push
adc
push
mov
iret
jae
jl
add
jp
sarl
shrl
or
push
jecxz
cltd
adc
mov
out
sub
mov
jmp
jb
cli
fldenv
pop
mov
aad
xchg
add
mov
in
xor
mov
mov
decb
je
xchg
sahf
insl
mov
adc
subl
ret
lock
insl
jmp
add
cwtl
sbb
rorb
cmpsb
sbbb
ljmp
cli
test
push
mov
leave
loop
ja
cmp
jg
push
aas
inc
outsb
push
add
mov
or
mov
inc
xchg
popf
lods
push
fstl
jmp
cs
cld
push
mov
sbb
xchg
mov
std
lods
push
loope
sbb
daa
aam
pop
cs
comiss
xchg
pop
push
xchg
lret
repz
xchg
idivl
and
add
mov
add
test
loope
shll
cmpsl
mov
insb
jno
std
lods
ret
pushf
sub
or
sbb
mov
sbb
jle
sub
movsb
data16
push
cmpb
pop
out
push
aaa
testl
cltd
arpl
pop
aas
pop
mov
dec
push
clc
pusha
sbb
stc
pop
push
lcall
inc
cld
cmp
sbb
incb
cmp
push
jno
mov
push
loop
ds
pop
inc
mov
or
mull
adc
xlat
jmp
scas
aam
enter
lahf
push
mov
push
xor
bts
aas
mov
cltd
mov
dec
jb
hlt
sti
gs
and
std
inc
xchg
mov
add
mov
cld
ret
sbb
push
popa
push
push
rcrl
sbb
mov
fisubrs
adc
mov
out
jg
fs
lock
ja
mov
jge
cmpsl
nop
mov
push
loopne
lea
mov
insl
push
call
mov
stos
jl
fildll
imul
inc
rcrl
test
cmc
adc
cmp
sbb
mov
pop
icebp
ja
andb
test
xchg
ljmp
sbb
scas
sbb
pop
inc
mov
adc
call
loop
mov
push
enter
dec
repnz
mov
jecxz
lock
shrb
mov
xlat
mov
add
aad
xorl
sub
pop
hlt
sub
mov
inc
sub
les
jge
movsb
cmp
lds
mov
das
push
lcall
jecxz
insb
xchg
mov
jl
push
lock
add
dec
cmc
gs
mov
inc
repnz
dec
cmp
es
push
pop
call
dec
push
pop
popf
fisubs
pop
cmp
push
cld
dec
dec
ja
sbb
addl
cmp
sbb
shll
mov
mov
xor
jns
stos
cld
mov
in
das
or
or
sub
loop
mov
shrb
mov
fsubl
dec
ret
xchg
pop
scas
xor
mov
movsb
or
ss
ds
cmp
add
fmuls
out
sarb
ficoms
cmpb
sbb
rorb
lcall
dec
cmpsb
sbb
outsl
lret
lock
mov
mov
cmp
add
pop
mov
test
fildll
aam
fisttps
out
repnz
adc
xor
je
shlb
xchg
sbb
repz
popf
ret
dec
and
xor
fnsetpm(287
test
movsl
add
mov
sub
ret
mov
insb
out
fdivr
sub
cmp
inc
sub
xchg
lods
fwait
xor
push
sbb
std
xor
adc
cmp
daa
iret
fistpll
or
sbb
dec
mov
dec
dec
test
fwait
mov
std
ret
xchg
int
popf
dec
dec
dec
push
stos
jge
sbb
sub
and
out
mov
mov
int3
fdivs
mov
and
inc
es
mov
push
push
dec
pop
rorb
ret
clc
loopne
fimull
pop
and
pushf
mov
movsl
stos
and
into
addr16
fwait
lret
pop
add
mov
fwait
imul
in
xor
mov
in
push
out
ljmp
enter
and
sbb
nop
scas
push
mov
mov
jo
ret
dec
cwtl
inc
out
xchg
add
cltd
popf
in
adc
adc
sbb
test
cli
clc
pop
in
mov
out
or
xchg
movsb
ss
scas
data16
lret
xlat
je
fcmovne
or
in
test
jnp
leave
pop
stc
mov
pushf
jns
adc
jns
inc
int3
push
add
pop
jle
in
orl
cmp
shlb
jb
imul
nop
aam
xor
lahf
xchg
gs
inc
or
clc
stc
inc
jnp
jle
mov
jecxz
jmp
or
sbb
mov
ljmp
add
addl
bnd
popa
inc
fsubrs
jg
in
mov
mov
sub
xor
pop
sbb
popf
inc
dec
push
jmp
or
bound
inc
xchg
cmp
inc
nop
adc
outsl
adc
clc
mov
or
fisttpl
call
dec
addb
jmp
adc
dec
lea
dec
mov
and
sub
dec
or
movl
mov
mov
or
xor
gs
xor
xor
flds
dec
sarl
jbe
jae
push
add
pushf
inc
jnp
cmpsl
sub
xorps
into
outsb
jmp
cmp
add
sub
add
or
xor
add
push
pop
cmpsl
jns
adc
lahf
inc
sub
jbe
push
data16
cwtl
cmp
loopne
jmp
and
aaa
lods
dec
mov
push
push
xchg
sti
fsubl
xor
mov
jno
push
or
dec
xchg
cmp
xor
sub
gs
shrb
dec
dec
mov
pop
add
sbb
inc
mov
pop
dec
mov
call
loope
mov
stos
pop
outsb
mov
add
push
loop
ret
pop
addr16
cmp
adcl
roll
or
fnstcw
ficoml
and
add
push
leave
icebp
popa
dec
in
and
popa
inc
sbb
rcl
popf
mov
gs
xchg
jbe
xor
testl
pop
pushf
out
inc
pop
push
xchg
mov
push
lods
xor
out
cmp
sbbl
mov
stc
push
dec
lods
mov
push
sub
cmp
mov
push
jae
je
and
push
inc
push
mov
adc
ret
jp
sub
xchg
or
push
pop
jg
out
mov
inc
jbe
ret
lods
lock
std
insb
hlt
sub
lock
in
dec
push
xor
jo
push
mov
lcall
add
push
sub
js
fiadds
push
mov
daa
mov
test
repnz
ss
popa
movsl
sub
gs
subl
ljmp
pop
cmp
or
sbb
mov
nop
adc
