sbb
add
fld
mov
clc
int
mov
scas
mov
cmp
cmp
in
test
fcoml
mov
and
mov
loop
outsl
loope
cmpsb
dec
inc
pop
andl
cmpl
cmp
testl
mov
sbb
imul
xchg
mov
push
xchg
mov
ljmp
fidivl
adc
fiadds
repnz
cmpsl
push
ret
addr16
outsb
mov
cs
daa
jecxz
stos
shlb
js
xlat
xchg
out
cwtl
jp
pop
xchg
imul
pop
sti
mov
stos
push
push
add
loop
cmc
push
pop
leave
ffree
scas
orl
imul
pop
pop
pop
xor
outsb
mov
loope
push
xor
adc
cmp
mov
rcr
mov
andl
loop
mov
mov
xchg
ficompl
mov
std
and
cmpsb
jle
ljmp
daa
stos
push
loop
sti
into
add
mov
mov
dec
push
pop
cmp
or
je
daa
mov
push
inc
sub
pop
xor
dec
xchg
setge
fildl
mov
adc
aad
js
mov
xchg
pop
mov
push
outsb
xchg
or
mov
inc
lea
push
jns
add
pop
sbb
xor
ja
pushf
sbb
pop
sbb
cs
out
pop
movsb
jb
pop
loop
sbb
mov
push
xor
pushf
jo
sahf
mov
outsb
hlt
mov
sti
pop
ffreep
mov
jb
jo
sub
xor
int
xor
fisttps
add
and
in
fbstp
repz
cmp
sbb
dec
xchg
add
push
or
and
cmpsl
movsl
xchg
gs
outsb
inc
loop
enter
in
iret
or
and
push
rorl
loopne
jbe
out
sub
jecxz
out
lods
jo
dec
leave
xchg
jmp
xlat
push
jae
pusha
adc
test
test
xchg
mov
cltd
and
repz
jo
dec
fcomps
add
aam
sahf
adc
mov
dec
arpl
add
or
jmp
lahf
pushf
out
fmull
push
mov
jno
add
mov
cmpsl
mov
sub
mov
or
lods
loop
das
cmc
dec
andb
mov
and
push
aad
lcall
movsl
outsb
mov
dec
ret
or
mov
mov
dec
xor
adcl
ljmp
pop
and
out
mov
sarb
jp
gs
rorb
iret
je
jne
or
or
fimuls
xor
sub
std
jmp
mov
aam
dec
add
shll
sbb
outsl
in
dec
or
xor
sti
or
cld
dec
popa
xchg
fs
or
je
test
enter
scas
jno
arpl
add
sbb
xchg
cli
mov
push
pop
mov
add
movsb
fs
add
hlt
mov
cld
sti
sahf
add
dec
inc
fsts
add
gs
adc
push
divb
push
shll
das
mov
push
xor
fs
jae
xchg
or
out
insl
jle
lcall
lret
lods
inc
inc
or
mov
aad
sbbb
mov
insb
push
mov
into
outsl
out
icebp
mov
testb
jnp
or
sbbl
pop
mov
dec
int
fsts
mov
sub
mov
shll
sbb
and
xor
aad
dec
cld
push
insb
mov
mov
mov
in
outsl
into
mov
ds
hlt
mov
or
nop
js
pop
sbb
insb
mov
pop
out
stos
sbb
pop
stos
jl
xchg
xor
xchg
out
clc
jae
jnp
aas
or
in
sbb
mov
out
and
adc
out
pop
xchg
scas
imul
pop
insb
insb
sub
fidivrs
mov
or
adcb
xchg
mov
loop
jae
cwtl
ss
jb
and
or
imul
sbb
test
jno
mov
lret
cs
xor
repnz
out
fidivrl
notb
pushf
outsb
adc
out
xor
nop
mov
sbb
push
cli
cwtl
or
fnstenv
pop
or
ret
aad
adc
sbb
inc
loopne
stos
xchg
sub
cmpsb
mov
cwtl
mov
aad
into
adc
and
sub
dec
faddl
pop
mov
push
pop
xor
in
mulb
imul
rolb
cmc
mov
scas
jnp
mov
inc
int3
dec
jbe
pushf
xorb
mov
dec
fxch
pop
xlat
mov
pop
lock
sbb
test
jae
jbe
shll
sarb
ror
enter
xchg
mov
xor
push
cmp
sbb
xchg
dec
jle
in
repz
adc
jecxz
xor
addr16
inc
out
icebp
std
jecxz
adc
mov
adc
filds
sub
pop
mov
shl
ret
sbb
inc
iret
xor
cmp
dec
sbb
je
js
into
addr16
sti
mov
icebp
cmp
sub
and
pop
and
sub
ret
adc
out
mov
rcr
daa
sbb
movsl
fwait
pop
mov
loopne
setp
pop
mov
fsubs
ljmp
sub
cmpsb
lea
addb
sub
into
cmpsb
push
xchg
mov
rcrb
sub
sbb
pop
imul
pop
test
sub
sbb
xor
test
add
or
seta
fcomps
fbld
mov
andb
add
pop
movsb
scas
xor
lods
lea
inc
xchg
ret
sbb
fstpl
pop
or
and
fistpl
or
clc
cmp
push
push
out
sti
sbb
xchg
je
jp
imul
aam
dec
xchg
sub
push
or
mov
test
mov
add
gs
popa
cltd
insb
xchg
jne
add
mov
jno
inc
push
test
push
mul
fwait
inc
push
mov
pop
add
pop
bound
je
mov
imul
addr16
sar
fdivrp
imul
push
jmp
mov
insl
pop
push
cs
rolb
scas
pop
arpl
lds
sub
jbe
adc
ror
fmull
adcb
fdivl
mov
insb
pop
out
jno
imul
data16
in
jg
jb
rcrl
iret
icebp
addb
into
sbb
xor
enter
es
adc
jno
lods
mov
pop
adc
add
bnd
mov
js
push
pop
testb
outsb
fstps
sbb
les
mov
in
mov
test
icebp
popf
jg
sub
outsl
sbb
cld
ror
test
sub
mov
add
repz
mov
pop
mov
dec
xor
and
sub
pop
dec
cmpsl
jmp
aas
ja
add
cwtl
pop
les
movsb
rorb
mov
cli
out
add
pop
mov
fistl
shrb
scas
inc
mov
push
pop
and
ret
cmp
jno
lock
test
pop
lret
push
cmpsl
fnsave
and
mov
push
sbb
test
dec
in
jb
lret
and
mov
clc
fwait
imul
std
mov
or
int
xchg
fldl
push
ds
sbb
add
xchg
in
roll
out
jns
sar
mov
mov
pop
xor
test
jb
enter
iret
rol
fsts
push
out
and
mov
dec
mov
lock
movups
inc
fidivrs
jmp
pushf
mov
loope
in
pop
hlt
and
pop
mov
jecxz
sbb
dec
or
loope
mov
iret
xorb
lods
das
int3
or
insb
hlt
mov
push
jns
out
shll
ficoml
jae
adc
in
xor
fldl
xchg
fmulp
stc
repz
test
inc
mov
mov
adc
pop
loope
sub
mov
data16
mov
ja
adc
or
dec
xor
out
inc
in
dec
xchg
sarl
in
pop
ret
mov
pop
cmp
fisubrs
jns
sub
dec
loop
dec
mov
in
outsl
push
gs
addl
mov
mov
mov
ficoms
mov
push
xlat
js
movsb
sbb
inc
sbb
mov
jg
sbb
mov
out
push
push
sub
sub
adc
sub
fstpl
push
shlb
mov
dec
sbb
movsb
inc
xchg
imul
sbb
xchg
out
mov
and
in
fisubs
fucomp
int3
adc
xor
aas
sub
imul
dec
dec
cltd
out
sbb
jne
mov
and
hlt
add
xchg
lcall
mov
jp
mov
cmc
pushf
fbld
mov
jns
mov
sub
mul
nop
rcr
and
adcl
mov
stc
addr16
inc
push
sub
inc
jmp
lods
mov
in
cmp
test
outsl
push
xchg
fwait
ljmp
mov
andl
xchg
mov
adc
data16
cmp
popf
enter
sahf
xor
int3
imul
lods
in
aaa
cmp
arpl
xchg
test
lret
rorb
icebp
cli
or
and
jne
push
push
mov
in
int
loopne
icebp
in
push
mov
cmc
inc
add
mov
inc
movsl
fsubl
add
repnz
shll
shll
xlat
loope
pop
jnp
jns
sbb
shll
jmp
cwtl
and
sub
and
int3
imul
jns
insb
jnp
test
dec
dec
ret
shrb
and
xchg
mov
inc
cmp
lcall
jl
jo
fsts
cmp
test
jns
dec
push
cmp
xchg
push
cmp
mov
sbb
dec
xchg
sarl
lret
xchg
cmpsl
jno
loop
bound
repz
cmp
and
xchg
mov
data16
push
icebp
jbe
lock
pop
call
or
add
mov
xchg
pop
push
fldl
cmpb
es
repz
xchg
mov
mov
movsb
sbb
lds
or
xchg
insl
xor
mov
divb
jno
sarl
inc
sub
shrb
je
adc
mov
popf
xchg
cli
scas
int
loopne
shr
push
lret
sar
lods
add
arpl
enter
mov
das
in
push
sbb
stos
iret
pushf
xor
mov
je
push
xchg
pop
int3
jmp
xor
cld
mov
jae
lea
and
mov
jno
xchg
add
sub
inc
mov
movsb
fadd
test
adc
add
in
xorl
xchg
mov
push
add
add
int3
int
clc
fmulp
shrb
pop
cmpsl
stos
pop
xchg
sti
or
xchg
xchg
mov
push
jg
in
cltd
repnz
jl
aas
xor
cmp
fcoms
jge
xchg
out
mov
push
cmc
jg
lock
iret
lcall
lea
adc
out
jecxz
es
lods
pushf
push
jb
fs
ss
sti
hlt
xorb
popf
jp
sbb
xor
loop
sti
push
mov
repnz
sub
repnz
pusha
mov
push
lret
rorl
sahf
jmp
and
mov
pop
hlt
mov
lds
out
rcrl
les
xchg
rcl
ds
and
imul
mov
mov
mov
push
push
popf
push
mov
or
int
sbbb
or
push
inc
js
add
lea
lods
out
mov
faddl
inc
xor
pusha
cmpsl
fsub
leave
push
mov
mov
mov
nop
shll
mov
xor
adc
cltd
pop
aam
ljmp
jno
cwtl
adc
jmp
fs
popf
xchg
call
iret
sbb
fs
mov
mull
mov
add
pop
imul
mov
icebp
lods
mov
stos
testb
fsin
pop
lods
cmc
mov
sbb
xor
push
rorl
pop
gs
mov
mov
push
rol
adc
lret
fcomp
rorb
je
lods
xchg
mov
pop
pop
loop
repnz
pop
ret
call
adcl
xchg
fildl
in
sbb
pushf
cmp
in
dec
jb
push
lods
jl
pusha
les
mov
lret
mov
push
jle
push
rcrl
inc
sbb
insb
out
test
shl
rcr
lock
cmp
jnp
mov
call
hlt
addl
inc
sbb
pop
sti
xchg
mov
js
dec
pop
inc
mov
hlt
popa
inc
rcl
aaa
cmp
sub
cmp
mov
jl
or
jecxz
lahf
shlb
clc
push
faddl
and
add
cmc
dec
nop
loopne
cmp
or
cmp
and
mov
inc
lods
aad
shrb
push
cmpl
clc
lock
loopne
push
in
inc
ds
mov
adc
out
or
add
inc
mov
push
cmp
js
pusha
test
add
cwtl
add
iret
aas
out
fadd
pop
jns
lcall
fidivl
int3
push
or
sbb
xlat
loopne
divb
cmc
sub
loope
xchg
mov
mov
adc
dec
out
adc
mov
ss
ds
call
cmp
sub
mov
sub
sub
out
xor
stos
xor
testl
push
dec
mov
mov
pop
fucomp
mov
push
dec
cmp
xchg
push
cmp
or
lret
cs
xchg
inc
loop
lods
mov
cmp
sbb
test
xchg
jno
out
rclb
mull
push
das
mov
out
gs
int
test
lods
stc
dec
xchg
std
in
pop
inc
push
cmpb
mov
out
test
mov
jg
inc
shlb
aam
mov
fstps
or
fmull
xlat
xor
int3
loope
in
mov
imul
xor
jecxz
dec
pop
mov
imul
and
jnp
call
aam
jp
stc
leave
sbb
mov
mov
nop
loopne
sub
aad
in
jg
icebp
add
push
mov
add
mov
adc
adc
adcb
shll
les
inc
jno
test
fsubrl
jae
stc
xchg
xchg
sub
mov
sahf
ss
push
ss
and
dec
testl
jns
pop
or
loopne
imul
sbb
adc
mov
cmp
sbb
jb
and
popa
adc
lods
lahf
dec
lret
es
xchg
and
shr
sub
xlat
repnz
dec
out
ss
inc
sbb
jl
and
in
je
fsubl
xchg
cs
inc
or
mov
xchg
insl
sub
jns
fnstsw
fsincos
sbbb
mov
clc
or
stos
pop
test
jns
mov
xor
adc
mov
insb
ss
jge
subb
fsubrl
loope
jg
jge
popa
or
pop
pop
xor
fxch
add
cmp
push
sub
add
mov
push
repnz
mov
ja
std
or
pop
mov
pop
xchg
push
cmp
cmpsb
insl
inc
xchg
cwtl
sub
xor
mov
movsl
mov
je
or
movsb
and
add
pop
xchg
sbb
call
jp
adc
adc
jno
pop
cld
or
ds
addr16
stc
lcall
push
inc
sbb
xor
mov
xor
cmpsl
and
dec
mov
cmp
push
add
outsl
cmp
push
insb
sub
jp
imul
mov
and
test
push
mov
outsl
lock
xor
push
jmp
mov
mov
mov
jno
push
dec
daa
and
std
js
cmpsl
or
lret
push
call
hlt
cs
dec
adc
mov
jns
jg
into
out
ss
sbb
movb
mov
sar
int3
cmpsb
jmp
ljmp
out
sbb
xchg
mov
mov
inc
sub
pop
out
rorb
jo
or
lret
fnstcw
inc
and
dec
test
and
jle
insb
sbb
icebp
fwait
test
xchg
add
cltd
pop
xchg
dec
dec
xchg
movsl
jo
pushf
adc
sbb
sub
add
std
or
mov
loopne
push
mov
loop
mov
jb
dec
int
and
inc
aaa
or
inc
in
fs
repnz
sub
adc
sub
dec
cmp
lcall
lret
dec
lds
jge
xchg
xor
insb
dec
mov
push
xchg
frstor
adc
in
cmpsl
inc
dec
mov
imul
cld
inc
jecxz
pop
shl
xchg
and
xchg
push
push
xor
cmp
and
xor
xchg
outsb
jge
mov
push
rcll
push
iret
mov
in
or
fisubs
jb,pt
das
sbbl
inc
xor
xorb
and
out
xchg
shrb
sub
xor
add
ljmp
dec
adc
out
fidivl
mov
add
aam
scas
dec
mov
jae
jp
repnz
ss
inc
nop
cmp
pop
lret
sbb
pushf
jne
jp
cmp
stos
adc
jg
fisubrl
popa
sar
xchg
sub
push
and
xchg
popa
add
or
sub
outsl
jo
mov
pop
dec
push
cmpl
and
and
das
or
insl
aad
mov
pop
inc
sti
fstl
mov
lahf
repnz
divb
adc
adc
xlat
inc
sbb
ljmp
aad
popa
frstor
popa
icebp
dec
out
loop
jb
clc
ror
cmp
fidivrs
jg
sub
call
loopne
out
out
lea
cmpsb
pusha
pusha
jno
mov
movsl
pop
and
out
js
sbb
mov
pop
shll
ss
popf
adc
mov
inc
pop
xchg
rcll
sub
sub
outsb
mov
sbb
xor
and
lea
and
mov
pop
add
nop
add
mov
sub
addb
rcl
cltd
movsl
cmp
xor
sti
imul
minps
add
adc
push
shll
adc
sbb
fwait
ja
mov
dec
adc
lret
adc
in
mov
fists
popf
cli
mov
cmp
xchg
pushf
push
gs
push
idivb
inc
mov
lock
sahf
sbb
popa
lods
cmpsb
lret
mov
fldt
stc
out
pop
lods
sub
xchg
sub
test
push
jb
shr
shl
scas
sbb
loop
in
mov
adc
cli
jo,pn
addb
pop
in
mov
stc
or
fwait
push
mov
push
mov
jmp
dec
rclb
negb
test
ds
mov
mov
sahf
inc
mov
test
jl
imulb
shrl
ss
scas
lret
ds
in
clc
test
movsl
ja
fistpl
cwtl
xchg
sahf
xchg
cwtl
xor
mov
or
lea
mov
sub
adc
loop
mov
dec
dec
pop
pop
dec
das
inc
mov
push
daa
jmp
jae
sub
and
loope
jp
aaa
insl
mov
pop
jae
push
push
xchg
xor
es
jp
push
inc
fildl
cs
stc
add
jnp
insb
lods
push
cmpl
adc
push
arpl
push
pop
mov
outsl
gs
lods
jno
sti
xor
add
gs
lock
leave
insl
lcall
sub
enter
xchg
sub
ja
ja
and
cli
icebp
roll
mov
leave
sub
mov
sub
pop
adc
jno
popa
fstpt
mov
and
gs
scas
test
jg
orl
fs
and
adc
or
mov
jne
push
scas
jns
inc
out
and
sub
mov
push
dec
test
lods
inc
and
or
jns
xchg
mov
mov
or
cwtl
ja
idivb
jb
popa
cmp
or
fsubrl
push
clc
xor
jp
mov
js
aas
repz
push
mov
lahf
and
lock
sbb
cs
xor
aas
jbe
xchg
cmp
lret
into
cli
loop
mov
xor
mov
or
inc
stos
sbb
pop
mov
xor
dec
push
repz
es
es
stos
cmp
mov
insb
jae
mov
loope
loopne,pn
lods
dec
jge
add
pop
and
sbb
fld
xor
rolb
dec
pushf
lcall
jno
shrb
cli
lcall
jb
iret
cmp
push
lock
call
cmpsl
sbbb
cwtl
fs
repnz
les
dec
add
sub
pop
mov
inc
fisubl
cmp
leave
test
test
jp
roll
out
mov
and
mov
xchg
sbb
and
inc
insb
push
xor
subl
xor
pop
fisubs
sub
repz
pop
sub
pop
cmpsb
repnz
push
and
mov
xchg
jns,pn
pusha
faddl
pushf
sbb
mov
test
dec
addr16
mov
gs
mov
cmp
push
jbe
ljmp
arpl
push
fsubrs
pop
inc
push
dec
push
lods
int
out
sub
xor
out
pop
sub
xor
stc
aam
xor
lock
ljmp
arpl
xchg
mov
rorb
jmp
stos
mov
sub
pop
rcrb
xor
mov
lret
in
sbb
stc
push
shll
js
add
push
fimuls
lods
xchg
add
iret
push
pop
jl
xor
and
imul
pop
mov
in
mov
insl
push
pop
sti
mov
movsl
mov
sbb
sbbb
xor
insl
jbe
orb
add
xor
add
xor
sub
mov
pop
mov
dec
enter
xchg
pop
clc
and
in
ja
xor
xchg
dec
mov
or
bound
imul
mov
add
repz
bnd
sbb
inc
aad
and
fldenv
int
cmpb
sbb
inc
push
pop
test
je
sbb
or
test
das
enter
mov
push
mov
jmp
fiadds
test
adc
push
movsb
add
ljmp
movsl
in
jnp
fs
imul
sub
cmovbe
imul
imul
add
pop
jns
aam
xchg
pop
and
out
clc
mov
sub
lahf
adc
data16
repnz
cmp
fstl
pop
movsl
lahf
and
and
cmp
pop
rcrb
in
icebp
jge
popf
jecxz
mov
jae
inc
cmp
stc
sub
imul
leave
sahf
sbb
mov
test
outsb
aad
fcmovnu
sbbl
add
adc
int
sub
ja
loope
or
pop
xchg
jmp
cmc
aas
jbe
les
inc
mov
jmp
jl
sub
jp
cltd
cmc
sub
dec
out
aam
xlat
dec
mov
in
fimuls
aad
mov
inc
cs
sahf
out
fnstcw
std
jl
stos
mov
gs
jne
fistpll
ret
xor
mov
jbe
cmpps
stc
add
mov
cmp
sub
ret
pop
stos
adc
cltd
adc
push
cmp
dec
das
test
pop
enter
adc
repz
out
insb
int
adc
fwait
dec
pop
sub
cli
push
fsubrs
scas
mov
repz
xor
mov
addb
cltd
pop
sti
adc
xchg
adc
insl
adc
inc
xchg
lret
and
into
lahf
xchg
dec
adcb
clc
andl
test
repz
das
xor
sub
push
sbb
rclb
push
adc
or
xchg
jl
jecxz
push
mov
cmp
lock
les
pop
aam
lahf
add
mov
cli
add
mov
movsb
sti
jnp
das
stos
mov
or
imul
dec
and
adc
xor
and
fimull
mov
xor
je
popf
popa
js
xchg
push
adc
cltd
rcl
mov
das
lds
xchg
xlat
dec
add
xor
jne
push
cwtl
cmc
jg
inc
notl
add
out
mov
fwait
xor
es
cltd
stos
jecxz
aad
lret
shl
ds
mov
inc
add
adc
in
jmp
xor
or
imul
pop
xchg
mov
mov
jmp
pop
dec
inc
pop
mov
stos
jb
aad
test
rolb
std
mov
fbstp
leave
imul
rolb
testl
hlt
xor
xchg
mull
pop
and
cwtl
scas
push
test
push
data16
jecxz
repz
add
push
idivb
aas
mov
sub
jp
in
dec
pop
fidivs
pop
adc
jae
jns
mov
push
mov
sbb
int3
xchg
scas
pop
hlt
cltd
push
xchg
mov
inc
xchg
mov
scas
les
and
sbb
inc
push
adc
lret
fcomp
push
xchg
lcall
scas
repnz
jge
add
loop
push
jae
and
sub
std
jle
mov
sub
add
adc
pop
mov
push
lahf
pop
cmpsb
mov
out
pop
int3
mov
testl
xor
ficoms
clc
loopne
std
add
les
add
push
out
pusha
stos
cmp
cmpsl
ljmp
push
cwtl
dec
xor
mov
in
jge
rcrb
das
adc
sub
rorb
push
stos
ss
inc
pop
mov
daa
push
insl
dec
fs
sub
xchg
mov
push
hlt
mov
or
mov
push
xchg
sub
inc
pop
ds
jbe
cltd
xor
mov
pop
pop
out
pop
sahf
pop
insl
in
mov
shrb
dec
fldcw
or
subl
pop
adc
pop
js
xchg
pop
inc
insb
and
add
mov
faddl
add
mov
jmp
xor
fs
mov
xor
xorl
sbb
mov
cmc
and
subb
ficoml
jmp
jp
or
es
pop
pop
mov
sub
pusha
mov
sub
adc
call
inc
aaa
mov
and
push
mov
mov
xchg
sarb
jns
rorl
xlat
rorb
ja
jb
pop
pop
dec
in
and
add
lock
imulb
push
xor
popa
push
mov
fistl
leave
jmp
jp
adc
addr16
popa
dec
dec
in
in
mov
jge
std
ret
cmc
mull
push
add
in
ret
jo
push
lds
add
outsb
imul
xor
jg
shll
xor
pop
cli
xchg
xchg
inc
xchg
shlb
ret
push
sti
adc
inc
push
sbb
test
mov
nop
mov
insb
ret
or
pop
je
cmp
imul
push
cmp
mov
mov
mov
lds
pop
jmp
sub
cmp
xor
test
mov
and
pop
mov
pop
and
xor
imul
sub
adc
out
out
es
insl
daa
pop
sub
neg
mov
push
and
gs
or
fucomip
hlt
push
mov
pop
test
xorl
scas
or
adc
insb
mov
aas
or
inc
mov
xlat
inc
jmp
subb
xchg
add
fs
ret
add
and
push
mov
aam
shrl
rcrl
push
sub
loop
sbb
shrb
lret
lock
fs
lahf
inc
stc
iret
rcrl
inc
and
imul
rorb
lods
push
or
jp
iret
cs
push
ss
cmp
or
sub
cmp
leave
xchg
fsubrl
pop
mov
or
xchg
jno
fstps
fmuls
adc
loopne
int3
test
mov
mov
orb
inc
arpl
jns
pop
mov
push
jbe
ds
cld
push
pop
jnp
cmp
pusha
push
cli
je
xor
mov
ja
sti
dec
inc
lods
push
dec
push
and
and
push
cs
sbb
imul
arpl
xchg
or
pusha
mov
sbb
jb
sbb
sub
adc
andl
ret
adc
in
fistpl
in
mov
ret
inc
push
addb
xchg
push
insl
clc
pop
clc
pusha
mov
adc
mov
aad
sti
call
xchg
jl
mov
in
mov
mov
or
mov
flds
nop
ja
lds
xlat
and
push
bswap
mov
gs
lret
roll
cltd
mov
sbb
std
mov
lea
and
pusha
mov
mov
popa
popf
jle
lret
nop
mov
jl
dec
pushf
fs
push
sbb
xchg
push
std
pushf
lahf
loopne
mov
loope
andl
push
out
cwtl
ret
cwtl
push
mov
xor
in
mov
and
stos
mov
xor
sub
jae
imul
insb
adc
xor
gs
xor
pushf
cli
pop
in
ljmp
popa
fstpl
inc
xchg
imul
test
push
mov
into
lea
mov
mov
jne
push
mov
inc
loope
mov
std
add
mov
ret
xor
adc
sti
dec
mov
insl
daa
aam
sub
dec
adc
fmuls
push
mov
mov
les
or
cmp
xlat
aas
sub
mov
popf
lahf
mov
or
aaa
repz
push
jno
scas
push
jne
insl
sbb
push
aam
scas
aas
decb
xchg
pop
fcoms
or
mov
add
sub
icebp
sub
and
popa
std
jne
out
not
ret
mov
fcmovne
xor
sbb
out
and
stos
stos
push
inc
enter
outsb
out
scas
ja
lock
mov
inc
jl
sbb
xor
sub
xchg
std
add
stos
in
inc
lret
imul
xchg
adc
xchg
int3
inc
ds
rorb
das
bound
jmp
jl
sbb
out
sub
or
pusha
test
andl
jecxz
adc
mov
adc
imul
jae
out
lods
outsb
sbb
inc
mov
sti
fmuls
stos
sbb
or
push
mov
dec
cs
stc
cmp
xchg
pop
scas
stos
fldcw
ds
inc
stos
incl
sub
fs
cs
jmpw
ret
fcoms
jp
js
mov
jo
rorb
pop
push
xorl
dec
scas
mov
scas
clc
repz
stc
pushf
pushf
lcall
stos
cmp
fidivrl
xor
mov
icebp
stc
loop
xchg
pop
test
push
adc
sub
or
nop
pop
xor
sahf
mov
mov
and
daa
pop
push
jbe
mov
insl
inc
movl
pop
daa
repz
aas
sub
jp
jp
arpl
cmp
test
loopne
lock
lret
icebp
mov
pop
xor
out
out
mulb
cmc
dec
xor
cmpsb
dec
or
dec
adc
xchg
adc
in
adc
jae
and
mov
adc
ds
ss
in
js
add
xchg
subl
sbb
and
and
leave
es
and
dec
sti
in
rcrb
mov
outsb
adc
mov
loopne
sub
insb
fnstcw
clc
cmp
xor
mov
je
pushf
pop
stc
jp
dec
jne
rorb
clc
dec
or
lret
or
mov
fadds
or
loope
mov
fldcw
xchg
lret
or
sub
pop
cmp
lods
push
das
jmp
iret
cwtl
cmc
xchg
adc
sub
das
fldcw
dec
lods
loope
jl
aad
daa
or
jbe
fdivl
xchg
stc
sbb
pop
lret
mov
lahf
in
inc
stc
inc
jp
test
jbe,pt
dec
shll
mov
fisttps
mov
sbb
out
and
ja
and
adc
lret
xor
iret
lods
mov
add
jecxz
addb
aam
mov
cmc
jecxz
pop
movsl
push
add
and
sub
and
idivl
loopne
inc
xchg
mov
lods
cwtl
mov
out
cmp
dec
out
mov
sbb
pop
aam
outsb
jmp
shl
xor
dec
test
cmp
mov
mov
mov
mov
jae
xor
sub
jmp
or
int3
lock
pop
dec
sbbl
xor
jp
push
daa
les
and
sbb
mov
push
mov
pop
push
je
push
lcall
test
xor
lock
pushf
cltd
jns
and
fnstcw
fs
popf
cltd
hlt
std
adc
push
mov
jbe
dec
adc
jo
sub
add
push
jne
popa
ljmp
jmp
mov
jbe
bound
add
data16
ja
ret
mov
adc
xor
das
sbb
jns
mov
xchg
mov
lods
push
fstps
add
test
xchg
daa
ja
push
add
out
sarb
mov
inc
int
xchg
mov
xchg
fmul
jns
cmp
dec
push
movsl
mov
xchg
out
inc
mov
aam
jmp
lods
ror
out
lea
dec
mov
enter
sahf
or
jo
in
aam
dec
fadds
mov
pop
icebp
jl
sbb
lcall
xchg
sti
mov
rcl
je
mov
add
stc
xor
aas
repz
xchg
out
xor
pop
out
pop
xor
xchg
and
sahf
jle
cmp
or
jle
bound
push
sahf
repnz
lea
negl
test
addb
or
jne
or
addl
jl
js
mov
loopne
mov
fwait
jmp
add
add
adc
outsb
pusha
aam
nop
repnz
xchg
hlt
xchg
fs
xchg
pop
ret
push
shlb
int3
adc
add
arpl
ret
mov
mov
and
enter
xchg
jle
daa
or
sbb
enter
add
push
pop
sbb
push
add
ja
outsl
xchg
sub
insb
cs
aam
jbe
pop
push
ret
sahf
adc
lret
popa
sub
test
xor
clc
ret
stc
negb
fdiv
das
mov
neg
imul
lret
sub
mov
xchg
pop
scas
lds
dec
push
push
cmp
pop
or
xor
mov
adc
ja
push
fwait
aas
aaa
scas
xor
hlt
mov
dec
pop
add
sbb
in
xchg
push
fildl
cmpsl
int
push
orl
lcall
nop
ljmp
into
push
jnp
xor
inc
hlt
rcll
cmp
sti
loop
aam
je
add
mov
dec
xor
xor
out
mov
xchg
in
dec
or
fabs
adc
shrb
test
cmp
das
scas
sub
xor
lret
and
clc
sahf
and
xchg
jecxz
mov
out
push
pop
lods
lods
cmp
pop
js
sub
add
dec
add
cli
repnz
jecxz
add
rcl
out
stc
cmp
jnp
mov
imul
icebp
or
mov
jg
jb
xchg
inc
stc
leave
scas
sub
leave
xchg
stos
fwait
sub
and
inc
cmpsb
mov
xchg
mov
mov
vmovntps
sbb
pop
test
mov
inc
orl
loope
inc
mov
sti
ds
sub
vcvttps2dq
shl
mov
shrl
add
sarb
cld
add
cld
jge
jb
xor
or
mov
push
add
lea
sub
imul
mov
mov
popa
add
das
filds
je
mov
add
test
aas
adc
mov
rolb
cs
inc
decl
jo
and
mov
sarl
call
pushf
js
loope
dec
mov
enter
frstor
cwtl
addr16
xor
inc
popa
fcmovnu
cmp
insb
mov
or
ss
xor
ss
movsb
adc
sbb
rcr
sbb
in
mov
xchg
jns
mov
mov
mov
mov
cmp
sbb
and
mov
mov
addr16
std
jmp
adc
leave
stc
or
mov
add
ficoml
ret
mov
daa
aas
push
jbe
dec
dec
or
mov
push
mov
dec
fisubs
lcall
mov
mov
pop
lret
xchg
cmc
fmuls
add
mov
insb
rep
sbb
stos
or
nop
cmpsb
pop
fbld
adc
in
jle
fstps
ror
out
insb
pop
or
jmp
push
fistl
mov
mov
pop
mov
fildl
faddl
bound
dec
jbe
push
div
std
push
aad
movsl
mov
sbb
rcrl
jl
addr16
ja
cmp
fidivrl
sbb
imul
pusha
dec
adc
and
push
sti
mov
sbb
dec
inc
or
loope
cltd
insb
add
les
stos
sub
dec
dec
mov
shlb
call
loopne
fldl
mov
xchg
js
pusha
cltd
and
mov
jbe
es
stos
and
enter
xchg
das
dec
mov
pop
shlb
and
ficoms
jbe
aam
mov
xor
mov
adc
inc
xor
mov
rcl
and
mov
or
xlat
pop
mov
pushf
and
inc
inc
ljmp
xchg
hlt
xchg
shlb
in
mov
aad
xchg
dec
das
dec
movsl
jne
and
jo
dec
out
cwtl
bound
or
test
pushf
popa
lds
inc
fdivs
stc
sbb
mov
adc
jns
mov
aas
add
les
jae
jecxz
dec
cmp
pop
push
push
push
nop
repz
js
popf
cmp
addr16
shlb
shlb
dec
jecxz
or
aaa
enter
lcall
mov
pop
js
lds
dec
or
dec
add
ja
or
mov
dec
ja
mov
ss
mov
push
dec
mov
imul
inc
je
icebp
jmp
loop
aam
add
xchg
and
xor
stos
ja
in
add
add
test
mov
flds
xchg
lahf
xchg
dec
cmp
scas
inc
flds
ljmp
pop
mov
mov
inc
push
mov
je
adc
stos
shl
out
pop
mov
inc
or
add
hlt
cmc
push
dec
fwait
insb
orb
dec
pop
xor
loop
ljmp
faddp
inc
or
cwtl
jp
dec
lret
and
and
in
gs
movsb
in
pop
bound
mov
enter
mov
pusha
inc
sbb
dec
inc
fdivrl
jg
xchg
popa
pop
out
testb
aas
mov
mov
pop
xor
or
std
shrb
int
in
andb
mov
clc
arpl
push
adc
int
aad
mov
pop
cmpb
mov
ds
push
sub
mov
inc
jmp
or
ret
daa
xor
arpl
and
cmp
mov
mov
ret
sub
cmp
xchg
mov
push
add
push
stos
cmp
cmp
addr16
mov
jg
pop
hlt
sub
push
clc
mov
movsb
outsl
les
push
jb
popf
sbb
mov
cmp
ja
neg
fidivrs
scas
or
sbb
stos
mov
ja
inc
jge
push
jge
dec
dec
scas
inc
in
xchg
sbb
idivl
push
add
mov
fwait
sbb
pop
jmp
mov
pusha
mov
dec
mov
cmc
pop
sbb
es
dec
xchg
mov
into
jno
clc
daa
fiadds
enter
mov
leave
vcvtsi2ss
pop
mov
in
xchg
push
jns
mov
ljmp
push
ret
aad
jp
pop
pop
rolb
les
sahf
mov
sar
pusha
ret
push
loopne
mov
popf
xchg
jno
xchg
adc
xchg
nop
cld
out
inc
or
fstl
inc
enter
in
jecxz
jp
in
mov
rcrl
mov
jl
xor
aam
push
mov
js
stos
das
mov
push
mov
mov
ljmp
push
mov
pop
dec
mov
testb
movsb
xor
mov
insl
popf
pop
sub
fbld
pop
mov
lds
jo
jno
pop
lds
sub
mov
mov
inc
jp
xchg
adc
test
aas
cmp
in
xor
inc
call
mov
imul
ss
or
xor
mov
sti
adc
xlat
jae
push
sti
xchg
jle
and
aaa
out
scas
jge
std
dec
sub
in
adc
dec
lods
and
incl
sahf
and
gs
fnstsw
jle
lret
add
xor
test
lods
mov
aad
test
sbb
add
fdivs
or
mov
rep
push
cmpsb
in
iret
or
add
and
mov
mov
dec
sbb
mov
sbb
push
or
ficomps
push
inc
js
push
dec
aad
outsb
xor
dec
jp
idivl
fcmovbe
jecxz
and
int3
sbb
test
sub
je
jne
sbb
xchg
mov
decb
mov
mov
sbb
and
inc
inc
pop
shr
xor
xchg
cmp
iret
xchg
aas
test
push
add
mov
jbe
sbb
xor
sub
fdivl
xor
mov
loop
mov
adc
scas
in
mov
cld
dec
sub
pop
adc
int
int3
pushf
jecxz
sarl
mov
push
inc
mov
rcll
push
sbb
inc
sub
in
out
push
push
out
or
mov
jp
mov
pop
popa
jge
mov
aaa
cwtl
jns
popa
fucomp
aaa
lahf
mov
stos
mov
insl
or
int
mov
test
push
sbb
inc
sti
scas
push
cli
jne
bound
xor
lahf
and
xor
das
addr16
push
enter
mov
push
or
lahf
xchg
add
clc
xchg
pop
jno
aad
imul
sub
inc
cmp
repnz
pop
lret
xor
ss
dec
in
test
mov
loope
xchg
int3
fsubl
push
mov
adc
rolb
push
sub
dec
aas
sbb
cmpsb
cmpsb
jno
clc
rcll
adc
cmp
adc
scas
je
sarb
or
push
push
idiv
sub
mov
cltd
jae
out
shrl
sbb
jp
in
lcall
xchg
push
push
inc
lret
rcll
aaa
pop
cs
and
jns
or
mov
xchg
sbbl
movb
dec
dec
or
sahf
push
dec
sbbl
cmp
adc
push
shrb
sub
or
icebp
mov
push
add
xchg
cli
xchg
mov
jge
cmc
or
inc
mov
loop
pop
sub
mov
fisttpl
push
jle
pop
bound
loop
xchg
icebp
les
sar
mov
jne
fidivl
test
in
outsl
xchg
add
mov
mov
xchg
mov
stos
mov
stos
rcr
fwait
dec
fistps
je
mov
lea
xorb
push
cmp
pop
gs
dec
adc
push
mov
bound
mov
push
and
add
insl
movsb
or
cmp
dec
jae
adc
fs
jp
test
cmc
gs
nop
ja
nop
fldt
mov
hlt
rcll
xor
sub
xchg
mov
or
push
stc
insb
or
jo
fsubr
addb
jnp
mov
cwtl
jo
jns
mov
fs
cmp
imul
in
in
fwait
jl
leave
xchg
sbb
mov
pop
mov
add
inc
mov
mov
pop
cli
aaa
xchg
cmp
insl
jnp
lret
adc
pop
out
das
mov
or
dec
mov
cltd
pop
loope
inc
scas
mov
cmp
and
ss
aad
and
xchg
outsb
js
adc
in
push
mov
in
xchg
shl
cmpsb
fadd
xchg
test
cltd
pop
sahf
xor
xchg
std
push
out
xor
scas
xor
mov
ja
fiaddl
add
xchg
scas
insb
int3
sbb
and
lret
xchg
sub
add
jns
sbb
push
fildl
mov
adc
jnp
les
gs
dec
hlt
mov
aaa
push
xlat
jg
pop
xchg
lret
pop
dec
dec
xor
aas
loopne
jns
lods
rolb
jmp
int
inc
inc
mov
popf
lods
add
sbb
lret
add
xorb
add
icebp
adc
inc
popf
pop
mov
cli
ficoms
mov
or
or
fisubrs
fldt
xor
xor
daa
imul
cmp
push
lea
jbe
clc
enter
xor
and
cmp
sbb
adc
lock
mov
xor
inc
dec
cmc
xchg
loop
lods
movsl
out
adc
mov
mov
sbbl
cmp
dec
popl
subb
mov
lcall
fwait
push
mov
test
mov
jp
hlt
enter
jo
fmul
xchg
iret
pop
xor
dec
sub
adc
adc
xor
pop
inc
mov
mov
test
xor
rcr
aaa
push
adc
shl
xchg
add
cltd
popa
lahf
xor
insb
jge
fstl
mov
aas
mov
mov
and
scas
push
in
xor
cld
ljmp
dec
xor
lret
das
jl
stos
inc
out
inc
or
pop
repnz
mov
add
sahf
or
femms
jecxz
xchg
icebp
and
or
insb
aas
ret
sub
mov
xchg
push
pop
std
push
mov
inc
jae
ja
cmp
adc
divb
mov
cltd
cmp
adc
mov
adc
fs
stc
aam
pop
xor
mov
inc
cmp
nop
and
mov
jae
or
add
sbb
lods
mov
dec
mov
lods
jge
std
std
aad
mov
out
pop
int
lret
lret
icebp
popa
shr
pop
pop
sbb
subb
ljmp
sbb
pop
arpl
mov
mov
and
stc
mov
iret
lret
lret
ficoms
bnd
push
cwtl
repnz
mov
je
ja
hlt
ds
sarl
lahf
sti
addb
stos
rorb
push
push
testl
push
stc
adc
push
cmp
cmp
mov
pop
xchg
jno
js
mov
lock
scas
enter
mov
lds
test
arpl
movsb
call
into
mov
push
xchg
sub
sub
sbb
int3
call
mov
into
mov
mov
push
fidivrs
daa
cmp
xchg
aas
cwtl
out
fidivrl
call
or
call
int
les
ret
and
mov
pop
push
call
pusha
rclb
scas
sub
mov
into
jecxz
pop
mov
jnp
fiadds
mov
in
mov
adc
pop
mov
insl
je
adc
adc
hlt
cmpsb
xor
leave
pop
xor
jle
mov
and
cmp
lock
pop
adc
xlat
outsb
dec
out
scas
ljmp
rorb
mov
loope
mov
mov
sbb
sahf
ret
xlat
mov
or
xor
lret
pop
push
add
fwait
adc
inc
shrb
stos
cmp
outsl
iret
cmpsb
sub
add
and
rorb
aaa
xor
dec
mov
pusha
add
mov
pop
add
pop
fiadds
arpl
push
pop
cmpsb
shufps
inc
sub
mov
sbb
or
rcrb
and
fsubr
mov
cld
xorb
adc
add
imul
push
lea
jo
pop
ja
fildl
jg
sub
out
mov
repz
test
xor
xchg
ss
mov
xchg
sub
adc
pop
repnz
push
sti
nop
rclb
sarl
sahf
mov
test
mov
lods
add
add
repz
inc
or
fcoms
mov
push
shll
mov
push
pushf
sbb
cltd
push
inc
ret
push
scas
mov
sbb
repz
idiv
je
shrb
loope
inc
add
sahf
jo
dec
and
jge
mov
cmp
jo
push
pushf
add
mov
and
pop
aad
mov
loopne
sarl
pop
mov
fwait
je
jmp
pop
stc
sub
mov
cmp
cmp
mov
jmp
jg
mov
loope
das
inc
fimuls
adc
dec
pop
out
aad
jp
fdivp
mov
inc
dec
cmp
cs
fdivl
scas
jp
or
int3
dec
pop
xlat
jl
adc
test
mov
cmpsl
aas
lret
sub
cltd
clc
pop
btc
sarb
mov
mov
xlat
scas
out
rcll
stos
gs
idivb
cmp
sbb
dec
dec
xor
mov
loope
adc
mov
sbb
rclb
and
xor
mov
adc
push
enter
out
pusha
mov
dec
jge
jg
pop
add
data16
or
test
lcall
jg
mov
cmpsb
dec
xorb
sbb
loope
dec
jnp
sub
push
inc
popa
pop
and
cmp
into
sbb
bound
pop
cmpsl
sub
shrl
stc
cmpsl
icebp
jae
inc
lahf
sub
cmp
inc
jbe
test
loopne,pn
mov
jmp
pushf
shl
jb
cmp
in
mov
iret
xor
or
cmp
faddp
pop
mov
push
sar
jb
push
fsubs
xor
jno
movsb
dec
fsubrl
inc
pusha
repnz
dec
shll
lds
outsl
inc
cld
bnd
sbb
popf
mov
push
pop
pop
int3
hlt
cmp
sub
scas
in
loop
xor
cs
and
xchg
push
aas
mov
arpl
cmc
xlat
cs
dec
out
xor
cwtl
pop
xchg
mov
pusha
jne
inc
push
out
lret
sahf
mov
ljmp
scas
fmulp
out
sub
xchg
push
push
xchg
in
or
cmp
jbe
adc
stos
mov
iret
and
js
jecxz
mov
pop
test
sub
movsl
mov
cmp
xor
push
fstpl
jge
pop
pop
pusha
iret
fsubr
mov
ja
out
jo
inc
pop
or
in
and
fbstp
mov
sub
scas
cmp
clc
fisttps
sarb
fbstp
adc
aam
cmpsl
lods
and
lahf
mov
xchg
sub
push
daa
xor
dec
int3
shrb
aam
sub
out
aas
bound
ja
mov
movsl
jecxz
jg
pusha
cli
rorb
mov
or
sbb
xchg
xchg
roll
in
jno
daa
sbbb
sub
xchg
lret
mov
inc
lahf
jge
sbb
mov
or
sahf
inc
push
or
pop
cmp
ret
sub
jl
fcomi
add
idiv
lret
mov
bswap
inc
mov
lock
add
mov
aaa
sbb
or
mov
fcomps
adc
icebp
jg
sahf
sub
shll
mov
test
mov
add
or
fwait
outsl
test
mov
xor
testb
inc
mulb
aaa
lds
jle
mov
jg,pn
inc
pop
int3
pop
xchg
movsl
cmp
fwait
out
scas
or
scas
hlt
sbb
push
add
adc
and
addr16
ja
popa
and
mov
fincstp
int
mov
and
push
xchg
sub
mov
xchg
xchg
inc
lret
stc
arpl
add
xor
push
jl
xor
in
xor
jge
mov
mov
or
mov
insb
repnz
pop
lods
cltd
push
sub
mov
adc
jl
push
pop
js
adc
mov
adc
mov
rclb
nop
outsl
repz
mov
pushf
fcomip
pop
push
aaa
mov
roll
jne
mov
stos
rcr
loop
les
inc
loope
add
or
mov
enter
add
mov
iret
imul
xor
loope
push
sti
fwait
cmp
sub
xchg
rcll
jecxz
sub
aad
sahf
dec
jbe
rolb
mov
and
adc
sub
mov
inc
pop
leave
inc
leave
icebp
movsb
xchg
xchg
sbb
std
imul
je
mov
gs
fsubrl
mov
jl
fisttpll
sbb
sbb
ds
icebp
mov
icebp
push
call
sub
ret
outsb
ret
daa
xor
dec
int
jae
and
das
es
dec
outsl
outsb
push
pop
fnstsw
jmp
push
xlat
pop
int3
pusha
scas
sbb
mov
push
pushf
xor
into
dec
scas
jns
dec
shlb
add
inc
ficoms
je
call
mov
push
inc
cs
mov
add
cltd
push
dec
rol
pop
and
loopne
mov
xor
hlt
rcll
clc
cs
cmp
ret
imul
sbb
in
pop
lods
jle
sub
jecxz,pn
jp
movsb
adc
sub
push
mov
pop
push
cld
jp
mov
mov
push
pop
fwait
lock
fcmove
aas
jnp,pt
pop
and
xchg
aam
xchg
ret
mov
pop
insb
cld
xor
rol
sub
call
aad
add
cmp
test
ret
mov
add
jge
and
imul
add
xor
int3
repnz
dec
iret
mov
mov
jb
push
imul
cmp
fs
cmc
or
dec
push
inc
pop
adc
cmp
fwait
adc
jb
std
mov
shll
push
in
hlt
rcr
js
or
ss
out
xorb
arpl
ret
pop
mov
cmpsb
sbb
inc
inc
mov
cs
add
leave
movaps
dec
fldl
lret
je
pop
mov
mov
xor
mov
aas
popf
push
scas
jl
add
or
aad
cli
dec
addl
pop
imul
or
fisubs
jmp
adc
xchg
call
cmp
rol
test
lods
push
xor
push
imul
repnz
in
pop
cli
add
lret
sub
mov
xchg
mov
jae
insl
and
insl
sub
ficomps
out
jl
push
inc
cmp
lods
ljmp
mov
dec
mov
sub
fmuls
int3
mov
adc
fsubl
mov
lods
inc
std
es
inc
dec
out
ljmp
popa
fldt
xchg
and
in
push
popf
lods
or
outsb
sub
mov
adc
cmp
add
lods
adc
adc
adc
loop
jg
jmp
lods
jnp
jmp
lcall
mov
dec
loopne
inc
loop
pop
xor
pop
jge
out
mov
mov
and
xor
adc
aam
pop
lock
and
mov
push
stos
adc
cmpsl
movups
rcrb
insb
test
or
mov
gs
shlb
mov
sahf
push
jmp
lea
int3
cmp
jo
clc
push
jno
mov
and
sbb
jmp
jg
adc
leave
out
sub
push
idivb
fs
aam
lcall
stos
sbb
jmp
cmp
sbb
pop
mov
cmp
adc
cli
mov
sti
subl
sub
vunpckhps
jle
ret
sbb
aaa
int3
fiadds
fildl
hlt
sbb
loopne
addb
popl
insb
jge
push
adc
xchg
xchg
scas
shr
adc
ja
mov
rcll
xchg
xchg
daa
xor
in
stc
daa
dec
cwtl
and
in
ret
fildll
jo
leave
inc
ljmp
jns
daa
mov
in
bound
cmp
xchg
js
adc
pop
mov
sub
dec
stos
sub
mov
test
sar
mov
jbe
je
addr16
pop
inc
cmp
pop
pop
push
out
push
push
dec
aad
mov
mov
fiaddl
push
pop
out
xorb
call
repz
rolb
fisubs
mov
ficomps
inc
sbb
clc
sbb
cmp
cmpsb
dec
add
or
repnz
cmp
fnsave
or
loop
push
adc
adc
lea
sbb
imull
mov
push
ds
and
pop
fildll
sub
loope
in
testb
test
lods
ja
dec
push
lods
sub
xlat
icebp
mov
repnz
mov
add
jb
sbb
jbe
mov
inc
pop
out
mov
sbb
push
shll
push
cmpb
cmp
jle
mov
fmuls
sub
fwait
stos
dec
lcall
outsl
sbb
dec
inc
loopne
push
std
out
dec
sbb
inc
dec
daa
sbb
jecxz
push
mov
and
jb
sub
dec
lcall
sarb
imul
out
mov
hlt
je
pop
arpl
pop
xlat
mov
and
push
ds
mov
mov
or
and
sti
mov
mov
xor
mov
dec
cmpsl
or
test
jno
inc
ds
pop
xorl
sti
pop
mov
cmp
jae
fcomi
inc
xchg
inc
sub
aam
or
lcall
shlb
push
ljmp
dec
xor
adc
cli
imul
shll
dec
cmp
fldcw
xchg
pop
pushf
mov
add
sub
inc
dec
adc
add
int3
call
pop
push
sbbl
fisttpl
out
xor
mov
inc
cmc
imul
sti
jg
stc
mov
add
cs
out
mov
jbe
pushf
add
insb
cmp
movsb
stos
xlat
lock
out
dec
jnp
or
add
pushf
mov
mov
pop
and
sub
pop
mov
ret
push
sub
or
dec
xchg
jo
inc
sub
daa
ss
fisttps
xor
fnstenv
dec
push
sbb
popf
inc
pop
sub
cs
mov
or
int3
pop
xor
les
jbe
hlt
lahf
mov
ret
dec
pop
lods
xchg
data16
mov
rolb
out
cltd
add
mov
cld
dec
and
mov
mov
mov
fldl
stos
push
sbb
test
push
xchg
test
loopne
sbb
inc
push
lahf
mov
cwtl
pop
mov
push
xor
fcoml
push
mov
and
in
addr16
pop
jb
mov
and
pusha
cld
mov
sbb
dec
inc
lret
inc
pop
out
fidivs
das
bound
in
cmp
jp
testl
scas
sbb
push
pop
jmp
jno
xlat
and
testb
in
xchg
nop
adc
sub
jae
pop
iret
outsb
aaa
outsb
out
in
and
xchg
in
sbbb
or
outsl
shll
and
push
jle
outsl
push
mov
adc
outsb
test
mov
lods
in
in
and
xchg
sbb
je
hlt
and
cmpsb
or
mov
inc
pop
aad
sub
push
fisubl
cltd
fs
xor
or
jnp
push
adc
inc
pop
jns
rclb
jo
mov
call
test
cmp
cmp
fs
mov
xchg
xor
sbb
lea
mov
jno
ficomps
ljmp
push
xchg
loopne
pop
jmp
sbb
imul
cmp
movsb
push
outsl
inc
xchg
clc
repnz
arpl
incb
shlb
ficoms
jnp
mov
mov
adcl
pushf
adc
adcl
adc
xor
int3
push
lret
setnp
xchg
nop
push
mov
insl
iret
data16
mov
mov
insb
scas
lret
jno
mov
rcll
cmpsb
clc
rcl
xchg
xor
cs
repnz
mov
rclb
shrl
fnstsw
jns
aam
ds
loop
sub
inc
test
mov
sub
sahf
jo
leave
in
inc
fmuls
loopne
popa
mov
popa
pop
push
cmp
jbe
push
xor
movsl
cmp
mov
xchg
lcall
or
into
ds
push
dec
jnp
sub
mov
daa
or
fiadds
jl
xchg
das
pop
ret
add
dec
or
dec
mov
bound
in
push
stc
mov
arpl
mov
ss
pcmpgtw
fstpt
jns
mov
fisttpll
cwtl
outsb
popa
mov
adc
adc
repz
push
mov
dec
cli
pop
cmp
xchg
inc
push
pop
push
jge
sar
jg
orl
ljmp
push
js
cltd
test
shrb
mov
rcrl
add
sbb
add
jmp
lret
addr16
dec
stos
sbb
xchg
mov
mov
inc
cltd
inc
fmull
add
js
mov
push
pmulhuw
test
repz
into
or
cmp
subb
mov
inc
jb
sahf
ja
sub
cwtl
adc
sbb
movsb
mov
mov
shr
orl
mov
fiadds
pop
mov
add
mov
es
push
int
out
leave
notl
sbb
testb
outsl
and
int3
cmc
out
dec
gs
je
and
div
mov
leave
pop
and
insb
lea
lret
pop
pop
mov
pushf
mov
pop
loop
mov
push
jnp
add
mov
orl
aas
adc
and
mov
jno
xor
lods
inc
das
mov
jp
mov
sub
jae
fs
cld
cmpb
and
adc
cs
cmp
ljmp
xlat
jb
adc
iret
out
mov
jnp
imull
mov
je
nop
xor
outsb
dec
cwtl
xlat
xchg
lahf
shll
lret
push
dec
jns
incl
sbb
dec
push
fdivl
or
rcll
xchg
lock
ljmp
adc
insb
push
mov
es
fcoml
stc
outsb
inc
push
xchg
push
js
insl
sub
pop
mov
add
int3
sub
leave
add
push
or
fnstcw
cli
ret
mov
js
mov
pop
xor
ret
push
stc
add
jns
stc
mov
std
mov
sbb
stos
lods
into
sbb
cmpsb
das
aaa
outsb
xchg
cs
movsl
out
add
mov
pop
xchg
out
test
gs
scas
add
out
into
mov
jle
xchg
push
sbb
or
jmp
mov
inc
dec
push
mov
dec
cmp
jmp
insl
ret
insl
inc
inc
add
jg
xchg
or
xchg
jae
cwtl
sub
add
cmp
lcall
ds
xchg
lcall
flds
or
pop
dec
and
mov
test
insb
xchg
imul
jnp
lds
insb
shll
scas
lock
push
jmp
cmp
hlt
mov
mov
in
cwtl
jmp
int3
shll
stos
mov
outsb
shlb
rol
cwtl
push
sbb
inc
jno
arpl
cld
cmpsl
mov
mov
adc
pop
xlat
js
push
xor
push
repnz
fisubrl
lock
jg
mov
add
dec
or
lret
dec
pop
fildll
mov
sti
adc
pop
loop
push
dec
ja
xchg
mov
pop
pushf
into
mov
gs
movsb
fcmove
ret
fs
sbb
rcrb
je
adc
rolb
push
int
mov
fsubr
test
cmp
scas
int
ret
pop
stc
xor
bound
pop
inc
sbb
sbb
js
jo
pop
into
pop
lea
push
mov
out
mov
sub
xor
cmc
adc
add
and
or
mov
mov
jno
aad
decl
ja
test
cmp
xor
jp
mov
push
push
je
in
in
mov
jmp
mov
lods
xchg
add
test
jl
cmpsb
mov
mov
xchg
shll
std
sbb
rolb
dec
mov
mov
repnz
fisttpll
or
or
dec
test
inc
int
js
bound
sbb
out
lcall
cmc
data16
jmp
out
mov
dec
xor
adc
cwtl
mov
sub
mov
jg
fs
mov
jmp
mov
jg
inc
cmpsb
pusha
dec
mov
mov
stc
vcvtsi2sdl
dec
sub
cmc
outsl
push
push
sbb
enter
sahf
ja
or
jl
mov
scas
sub
add
xchg
push
adc
test
in
dec
outsl
jecxz
dec
push
inc
adc
nop
lret
add
xor
mov
or
mov
xchg
shlb
mov
jl
cmpsl
sbb
ret
jmp
adc
movsb
test
mov
and
subb
xor
fcoms
ja
test
and
jp
loope
out
les
sub
cmp
ficoms
jg
sbb
push
insb
mov
seta
sub
loopne
xor
pushf
adc
imull
dec
jge
sub
mov
out
cmp
adc
mov
roll
shl
jg
cmc
rorb
int3
and
sub
lahf
dec
pop
cli
inc
shll
adc
sub
ja
xor
ret
jge
mov
add
insl
fisubrs
mov
dec
sub
outsb
pusha
sub
sub
out
imul
add
out
push
inc
cli
dec
daa
cltd
add
lcall
pop
fistpll
cmp
jmp
jns
repnz
out
adc
mov
sbb
inc
fstp
sbb
out
sub
add
rorb
icebp
push
and
sub
or
xchg
push
xchg
mov
pop
adc
sbb
mov
sbb
push
pusha
lods
pop
out
daa
cltd
aam
call
push
push
enter
and
fstp
push
cmc
inc
adc
jo
jo
int3
pop
mov
dec
mov
in
xor
scas
and
or
cmpsl
popf
mov
adc
add
dec
inc
xchg
and
sub
sbb
add
lcall
icebp
je
arpl
push
loop
cmpsb
lea
sub
pop
cmp
cmpsb
arpl
into
add
jbe
sub
les
addr16
sbb
mov
sbb
repnz
jne
data16
clc
push
push
fistl
sbb
loopne
jecxz
push
iret
std
push
enter
loopne
dec
mov
fsubs
js
xlat
lahf
sub
xchg
loop
adc
fisubrl
out
mov
out
aad
pop
jae
popf
jg
mov
xor
out
push
cli
ja
repz
xlat
push
xchg
cmpsl
inc
int
add
xor
popf
pop
mov
scas
add
mov
cmp
xor
stos
sub
or
add
outsb
push
add
add
fists
daa
imul
sub
call
cli
into
aaa
gs
fdivrs
xor
mov
add
push
imul
cli
lret
les
enter
mov
inc
push
fcmovne
pop
xchg
lret
je
cmp
cmp
adc
cs
add
push
pop
and
cmc
xlat
loopne
subl
and
xor
stc
xchg
scas
js
orl
mov
xchg
out
jns
and
popa
das
les
movsl
or
imul
loope
jmp
setp
shll
fldenv
shlb
push
mov
dec
dec
jmp
cmp
jl
mov
inc
add
xchg
out
call
rclb
into
fcmovnb
and
sar
push
or
fildll
lock
pop
icebp
lcall
xchg
data16
cmp
mov
es
jge
jmp
dec
loope
es
ret
mov
out
std
push
ljmp
loope
loope
popa
cmp
js
sub
push
outsb
xor
mov
out
sbb
inc
rorl
testb
sbb
inc
pop
push
mov
in
inc
ret
call
pop
cmpsb
inc
pop
lret
aas
cs
out
imul
out
inc
insb
stos
out
cwtl
cmpb
xchg
enter
and
adc
xlat
sbb
aas
mov
repz
mov
sbb
in
pop
mov
clc
pop
mov
or
xor
subb
imul
cmc
ss
sub
lret
out
out
iret
call
data16
push
jl
enter
out
int
outsl
adc
adc
adcb
mov
out
popf
inc
mov
dec
cmc
pop
popf
sbb
shll
mov
flds
push
jnp
pop
push
sarb
mov
inc
out
and
cmpsl
adc
xchg
mov
jnp
aaa
add
xor
pop
jno
pop
fwait
lods
in
sub
cmpps
jnp
pusha
mov
fwait
ret
pushf
aam
mov
notl
flds
mov
inc
movsl
repnz
adc
fidivs
or
lahf
adc
daa
test
and
pop
std
pop
aad
pusha
sahf
gs
leave
pop
idivb
js
addr16
or
or
addl
jne
fmuls
ljmp
jecxz
and
rclb
inc
cmpsl
cwtl
outsl
push
pop
mov
pop
lret
fsubl
inc
sbb
cmp
mov
jo
fstl
xchg
inc
xor
xor
repz
and
or
inc
lea
mov
mov
cmp
pop
and
sbb
pusha
mov
bound
xchg
sub
in
add
mov
or
popa
jge
out
lods
pop
and
jp
cmp
jmp
lds
mov
insl
adc
adc
jp
sarl
and
cltd
pop
fidivl
jnp
movsb
inc
pop
pop
fildl
and
test
mov
cmp
adc
repz
xor
push
aad
xchg
mov
and
xlat
cmp
adc
sti
xchg
mov
das
daa
sarb
test
stos
shll
sub
push
push
jnp
rcrl
fxch
ds
dec
stos
pop
xchg
push
cli
xor
stos
mov
hlt
mov
lcall
leave
addl
test
add
pop
add
movsb
or
inc
dec
negb
rorb
pushf
arpl
call
stos
ja
aas
lcall
push
test
loop
neg
mov
and
inc
test
loope
cmpsl
xchg
cli
sub
cld
insl
adc
sbb
int
out
hlt
adcl
aaa
ss
xchg
adcl
inc
nop
mov
in
in
shrl
jnp
mov
fldpi
mov
stos
add
jp
ja
cmp
mov
mov
mov
sbb
icebp
mov
sti
mov
pop
xor
ss
mov
dec
jecxz
push
pop
mov
aaa
add
pop
mov
loop
imul
mov
mov
loop
into
dec
mov
inc
xchg
cmp
dec
or
divl
mov
dec
shrl
xchg
out
or
pop
xor
bound
sbbb
xchg
mov
add
test
jne
cmpb
add
dec
std
scas
dec
mov
pushf
shll
cmovae
rolb
incb
aam
mov
mov
popa
sub
jae
xchg
add
test
jae
rcll
negb
lods
stos
xchg
call
cld
mov
jnp
repnz
jl
and
fisubrs
lret
fldenv
jp
pop
cs
push
pop
mov
mov
jne
or
push
lahf
jecxz
jae
dec
aas
cmp
sub
fcmovne
mov
mov
sbb
inc
in
ljmp
cmp
mov
mov
cmp
or
mov
dec
mov
dec
test
sbb
mov
fsubp
cmp
insb
mov
jge
inc
jp
data16
aad
and
sar
andb
dec
in
lods
jl
lret
dec
dec
call
dec
ljmp
adc
aam
or
and
lea
jo
fadd
and
test
cltd
addr16
sub
pop
add
xchg
mov
cs
outsb
pop
sbb
gs
shll
pop
jno
ss
inc
adc
faddl
das
mov
pop
imul
inc
xor
repz
test
jge
adc
out
inc
adc
adc
sbb
pushf
orb
sahf
cmpsb
pop
inc
fimull
aas
push
cmp
in
or
shr
into
jbe
jno
xor
fimuls
repz
call
popa
jmp
sbb
fwait
jle
xchg
fisttpll
fs
test
inc
sbb
scas
jmp
add
xlat
xchg
mov
inc
jmp
push
pop
daa
dec
ud2
inc
dec
lock
test
fs
imul
ja
les
in
lret
jg
fsts
mov
scas
push
xlat
insb
mov
mov
pop
ds
pop
xor
jbe
cmp
mov
jg
jl
mov
add
jmp
mov
insb
lea
and
jle
repz
out
pushf
dec
enter
mov
mov
jg
daa
jae
ja
pop
mov
mov
lods
pusha
xchg
mov
lahf
rclb
insl
pop
pop
scas
sub
pop
xchg
ds
cwtl
movsl
dec
mov
in
mov
adc
xchg
xchg
das
shlb
pop
bound
xchg
adcl
push
pop
jae
push
inc
int
sub
xorb
movsb
outsb
pop
lods
in
xchg
mov
sti
or
test
pop
iret
das
insl
arpl
pop
lret
shrl
jmp
lock
inc
xchg
je
push
iret
cwtl
imul
lret
hlt
sub
test
inc
dec
pcmpeqw
lahf
xor
andb
rcrl
loop
xor
pushf
insl
mov
loop
adc
xchg
push
or
mov
and
out
mov
pop
jg
push
lahf
fldcw
repnz
xor
sbb
dec
jge
into
int3
outsb
movsl
fwait
orb
mov
fldenv
push
add
lods
mov
test
lret
adc
in
push
mov
jno
call
xlat
and
repz
andb
fldt
xor
fildl
or
sbb
and
lods
xchg
adc
arpl
xor
call
or
and
testb
dec
mov
test
push
mov
in
mov
inc
rol
and
stos
xor
out
inc
mov
out
pusha
out
mov
and
jmp
adc
push
test
leave
bnd
movsl
lods
inc
ret
adc
mov
and
mov
sahf
mov
scas
sbb
shl
push
add
sub
and
sbb
mov
sub
dec
cs
lods
mov
mov
xorl
sbb
or
cmp
and
arpl
js
stos
jo
pushw
pop
nop
jo
push
inc
dec
lahf
mov
mov
mov
and
test
test
lret
data16
insb
call
fldl
jns
push
jp
loop
xchg
and
imul
cmp
leave
inc
aam
out
lock
pop
mov
mov
jl
arpl
cs
out
ret
push
repz
divl
dec
or
mov
mov
lcall
sbb
push
or
push
inc
lods
push
loope
bound
repnz
std
mov
enter
je
pop
lahf
cmp
jle
outsl
icebp
push
pop
out
bound
movsl
or
and
divb
lret
jecxz
imul
jbe
sub
mov
ret
mov
mov
inc
pop
int3
lret
mov
lock
sahf
std
jae
aaa
dec
push
xchg
sbb
aas
jle
popf
bound
mov
fucom
jmp
and
outsb
jmp
jnp
cmpsl
dec
cld
cmp
cmpsb
jp
ja
les
pop
in
xor
xor
add
mov
xchg
cmp
cmpsb
loop
cmpsl
sub
or
pop
outsb
fsub
inc
shrb
cmpsb
aam
push
xchg
dec
cltd
int
xor
rcll
aad
pop
and
sahf
addr16
adc
fistpll
push
dec
arpl
push
xchg
stos
sahf
mov
sbb
mov
iret
das
fcoms
sub
inc
call
pusha
inc
and
mov
scas
xor
lods
inc
add
jg
fmull
lods
ret
or
push
jb
sub
iret
mov
popf
mov
pop
cmp
sub
push
sub
push
lcall
push
inc
jns
inc
jp
xchg
jmp
jle
and
shlb
jmp
mov
rol
je
push
lods
arpl
adc
in
das
pop
sbb
lahf
test
aam
jae
movsb
pop
lock
out
jge
push
das
cmp
rorb
sbb
or
pop
xchg
les
std
inc
out
inc
pop
inc
mov
and
outsl
in
in
xchg
push
outsl
push
pushf
cwtl
stc
arpl
roll
iret
mov
xchg
rorb
gs
xlat
push
push
push
lods
dec
test
add
inc
shll
rorb
and
xchg
pop
ror
outsb
or
adc
outsb
pusha
push
dec
ja
in
popf
cmp
dec
je
and
les
imul
pop
xchg
ret
mul
rorb
pop
jp
js
out
jns
dec
loope
movsl
xor
xor
mov
xchg
jg
xchg
adc
sbb
mov
out
sahf
mov
daa
pop
mov
shlb
cmp
inc
push
or
jbe
xchg
pop
sbb
mov
fs
push
cli
repnz
xchg
lods
add
jg
xor
or
es
sub
push
aad
push
adc
push
test
scas
xor
movsl
pusha
popf
push
aad
jne
mov
test
push
add
mov
sbb
insb
inc
mov
and
scas
test
fwait
test
cmp
cmp
sahf
and
mov
push
add
and
lahf
dec
rorl
inc
lods
sbb
and
fwait
push
sub
in
mov
jae
or
jo
pop
mov
or
jp
iret
fildll
addb
xchg
xor
xchg
idivl
jp
jns
sub
scas
mov
or
cld
mov
aaa
pop
jl
pushf
cmc
mov
icebp
cs
dec
dec
orb
not
inc
xor
xor
and
cli
mov
gs
data16
add
ficomps
jmp
jnp,pn
push
aaa
cmp
pop
js
dec
mov
outsb
ret
pop
hlt
into
and
ret
dec
push
sbb
int
pop
pop
xor
mov
and
add
jbe
sub
push
addr16
jo
ljmp
leave
cmp
shlb
mov
shr
mov
push
mov
mov
pop
rcpps
inc
loop
aaa
and
js
in
lods
push
testl
in
dec
jmp
jp
iret
leave
sbb
dec
push
or
jl
mov
add
dec
sub
das
push
fsin
jl
or
mov
xchg
in
sbb
mov
mov
fs
xlat
stos
mov
lea
in
mov
xchg
mov
mov
mov
enter
dec
or
and
jbe
xchg
mov
push
jb
push
fists
call
lods
leave
pop
mov
adc
push
or
mov
add
stos
push
sarl
cli
jnp
inc
push
lcall
push
mov
inc
or
cmp
shrl
imul
jns
aaa
ds
movsb
inc
pusha
add
xchg
sbb
inc
cmpsl
fwait
outsl
cmp
mov
stos
adc
mov
push
lea
dec
and
mov
add
ja
and
add
cltd
cmp
pop
push
xor
jne
sub
cli
jp
inc
lret
xor
add
adc
notb
rorb
mov
js
js
sti
cmp
or
mov
int
lods
dec
inc
push
xchg
pop
sbb
push
inc
aas
scas
ds
arpl
jecxz
lock
push
inc
push
and
daa
push
ljmp
in
push
or
pop
inc
jb
leave
mov
lret
xchg
or
add
xchg
cmpsb
int3
outsl
adc
in
xchg
dec
jno
xchg
test
push
clc
sbbb
mov
fwait
in
push
pop
cld
loope
cmp
xchg
cli
cmp
adc
push
vpsllq
js
and
xchg
sbb
add
rcr
sub
push
fsubrl
cmpl
jnp
push
bound
mov
xchg
xchg
jno
insb
sbb
and
lds
mov
or
fiadds
jmp
fs
in
mov
or
mov
in
pop
inc
mov
xchg
mov
xor
add
cwtl
xchg
jg
lods
dec
dec
adc
jo
cmpsb
out
push
test
ljmp
cwtl
insb
jo
push
pop
push
test
cmp
cli
pop
xorl
sbb
adc
loopne
orl
and
pop
jae
clc
mulb
jl
ret
mov
push
jle
adc
imul
shl
movsl
pop
mov
jo
ds
mov
daa
orb
cmp
and
mov
repz
pop
call
xor
jae
adc
popf
mov
push
mov
sub
pop
jae
bound
cmp
dec
pop
xchg
out
imul
add
divl
or
ret
aaa
insl
mov
call
xor
scas
fisubl
test
push
xlat
es
mov
int3
adc
insb
out
cmp
nop
stos
movsl
mov
cli
adcl
jmp
xchg
test
test
les
push
rcll
js
xor
xchg
jmp
mov
hlt
call
mov
pushf
pop
cld
aas
dec
jmp
sbb
or
mov
ds
fimull
in
shlb
cwtd
lcall
cwtl
rcr
ss
rclb
daa
lock
std
cmp
pop
xchg
jp
mov
dec
or
cmp
out
lret
sahf
insb
push
aam
adc
mov
ds
sarl
xlat
xchg
pusha
inc
mov
dec
jne
jmp
je
xchg
jle
inc
mov
mov
jbe
lret
jp
sbb
sbb
lods
dec
or
push
test
in
cmpsl
and
inc
pop
xchg
xchg
inc
outsl
cmc
adc
call
sub
addl
ret
xchg
mov
jmp
test
jp
iret
lock
lret
push
fldcw
es
aas
ret
clc
fidivrs
shrl
mov
xchg
std
sub
push
ret
sub
cmp
pusha
push
adc
movsl
inc
xor
jecxz
jae
ftst
and
out
inc
jb
push
add
mov
push
push
les
ds
mov
jno
fdivs
fstpl
push
push
cs
out
dec
pop
mov
push
sarb
aaa
lock
mov
cwtl
in
or
or
fldenv
ret
setns
jbe
pushf
repz
shrb
insb
lahf
popf
jle
nop
sti
ficomps
add
and
mov
push
cmp
daa
inc
jo
iret
pop
bound
enter
out
hlt
pop
or
inc
dec
adc
cs
jmp
test
enter
mov
pop
jae
shlb
rorl
pop
adcl
shr
lods
movsl
inc
sub
stc
push
and
popa
dec
mov
mov
xor
jns
sbb
popa
xchg
mov
pop
mov
sbb
sbb
or
hlt
mov
mov
popl
inc
dec
push
in
xor
dec
lock
or
add
and
mov
adc
inc
xor
sti
idivb
hlt
loopne
pop
shr
and
sub
cmp
ds
fstl
outsl
in
fs
nop
fwait
cmp
in
jbe
pop
inc
sti
push
cs
fdivs
iret
mov
mov
and
in
xorb
xor
lret
mov
dec
scas
mov
cmpb
add
sbb
int3
sub
sti
pop
jl
xchg
jg
mov
and
inc
lret
int3
cmpl
cs
shll
cmp
sbb
adc
mov
movsb
xchg
lret
jmpw
or
icebp
sub
mov
in
xchg
imul
adc
inc
aam
int
jmp
mov
mov
dec
xor
dec
das
out
pop
xor
inc
jge
add
sbb
repnz
cmp
xchg
repz
xchg
int3
dec
fsubrl
xchg
dec
lock
ds
aad
fistpll
stos
in
push
adc
fdivrs
push
sbb
push
fs
adc
hlt
popa
mul
imul
fwait
xor
xchg
jmp
test
mov
fstp
cmc
insl
lret
add
iret
test
xchg
cmp
ror
sub
lods
dec
mov
pop
jmp
lds
imul
add
in
jp
lret
mov
add
lahf
rorb
pop
pop
add
mov
imul
cs
outsl
xor
sub
xchg
push
add
rclb
cmpsl
ffreep
jmp
sbb
sti
into
xor
dec
gs
add
in
lea
les
pop
sub
push
xor
in
mov
mov
es
lret
fildll
push
mov
xchg
adc
adc
mov
sbb
jnp
push
outsl
adc
pusha
mov
test
faddl
nop
inc
mov
pop
faddl
add
js
lahf
test
xchg
arpl
enter
mov
jne
inc
inc
xor
mov
mov
cmp
and
loope
cmp
das
and
sahf
xchg
mov
cwtl
outsb
jae
mov
sbb
fisubl
insb
test
dec
sub
jl
daa
fwait
idivl
enter
jnp
adc
xor
add
shrb
jle
fldl
mov
fnstsw
mov
cli
jle
cltd
movsb
dec
jg
jmp
aad
jle
inc
imul
or
pop
inc
pop
or
in
cmp
shlb
repz
or
inc
in
ret
cmpb
pop
lahf
sub
addl
repz
movsl
ss
cmp
sub
jmp
pushf
sbb
push
pop
jmp
xor
stos
popa
mov
jle
or
push
sub
test
lahf
sti
aam
cli
divb
loope
xor
insl
stc
sbb
jno
test
cmp
lods
jne
lds
bound
xor
add
adc
leave
sar
mov
pop
mov
or
cmp
aaa
inc
fldt
or
mov
mov
push
pop
cmpsb
mov
ficoml
cmc
lcall
das
movntps
jo
arpl
aaa
fmuls
fdivl
outsb
ret
adc
sbb
adcb
sbb
lock
jne
add
sbb
mov
xchg
shll
push
pop
add
lret
jae
mov
shll
jns
pushf
mov
inc
cmp
mov
sub
sbb
push
sub
insb
sub
xchg
mov
test
cmp
adc
mov
or
dec
nop
test
enter
movsb
pop
cmp
and
or
add
jmp
mov
mov
mov
loopne
gs
add
push
stos
mov
fstpt
jmp
pop
out
adc
mov
sub
incl
cmp
mov
stos
dec
fbstp
ror
pop
enter
mov
aad
fldl
cmp
add
dec
adc
inc
sar
das
adc
jg
imul
shll
xchg
xchg
out
push
in
mov
outsb
ds
xor
std
das
mov
add
loop
xor
shlb
dec
mov
imul
xchg
js
jl
cmp
jne,pn
fwait
shl
pop
xchg
sub
insb
test
stos
mov
fimuls
dec
add
mov
jp
jecxz
pusha
mov
jp
scas
sub
call
push
sub
or
push
movsl
divb
mov
stos
dec
aas
lods
stos
mov
mov
jmp
shlb
loop
add
test
lret
dec
pop
jle
xor
test
mov
adc
nop
movsl
mov
nop
or
cmpsb
push
mov
ds
fiadds
dec
mov
inc
mov
mov
mov
or
dec
adc
movsb
lahf
jge
pop
shlb
or
mov
push
jo
sub
pusha
or
xchg
mov
mov
cmpsb
push
sbb
das
sbb
lods
add
mov
jecxz
or
xchg
xor
sub
push
cli
cwtl
pop
xchg
loope
out
mov
loopne
or
fstl
addr16
repz
mov
adc
push
mulb
adc
out
xchg
xchg
repnz
xchg
fisttpll
adc
lcall
or
mov
push
adc
xchg
dec
sub
sbb
and
sub
inc
pop
xlat
jg
xchg
dec
xor
sbb
mov
push
flds
xchg
adc
cmp
faddl
addb
jne
xlat
jecxz
sbb
inc
adc
mov
loop
daa
or
xchg
pop
sub
test
shrl
xor
cmp
pushf
add
xchg
lds
lahf
imul
jne
cmp
pop
xorb
xor
sub
shld
adc
mov
fisubrs
mov
mov
test
scas
cs
cmp
inc
cwtl
adc
push
pop
inc
daa
shll
mov
addb
mov
mov
fldenv
push
inc
sbb
push
orb
ja
jb
mov
cmp
pcmpeqb
pop
add
push
testl
aaa
and
mov
xor
insl
and
xor
xor
addr16
inc
jle
mov
out
pusha
adc
fstps
jg
imul
xorb
add
lock
mov
inc
add
push
adc
sub
daa
stos
dec
dec
leave
dec
dec
lods
sub
pop
jmp
mov
add
test
sbb
imull
int
xor
sti
lcall
xchg
fcmovnu
xchg
test
mov
lods
mov
mov
cmp
xchg
push
lock
dec
inc
ficomps
add
pop
xchg
scas
fsts
jae
xchg
in
or
xchg
adc
sub
stos
dec
test
lods
inc
xchg
icebp
dec
cltd
fistl
shlb
fadds
inc
nop
jae
and
lret
sub
and
fimuls
clc
push
ss
out
sbbb
je
add
add
lahf
push
cwtl
enter
jp
cltd
mov
push
or
ret
pop
outsl
aam
sub
or
push
adc
and
sarb
repnz
int3
lahf
dec
pushf
fcomps
lahf
sub
xor
add
int3
loop
push
mov
push
pop
aaa
cmpsl
dec
test
adc
shrl
jnp
add
pop
mov
xor
dec
xlat
fisubrl
sbb
ret
adc
and
xchg
ja
cmpsl
leave
mov
cmpsb
lea
das
out
in
push
lods
mov
gs
sahf
pop
pop
fsubrs
loopne
sbb
popf
fmuls
xchg
aam
sti
jl
movl
test
push
inc
and
mov
aaa
cmpsb
mov
and
int3
mov
mov
mov
out
and
xchg
or
sbb
imul
stos
jecxz
jae
inc
aam
ljmp
xchg
ror
mov
push
testb
add
xchg
in
jg
in
stc
shr
mov
icebp
pop
fidivrl
push
stc
daa
pop
dec
pop
sub
cmpsl
sub
mov
push
loope
add
push
repnz
or
mov
jp
les
mov
daa
test
mov
cltd
xchg
fisubrl
inc
scas
fcmovu
inc
aaa
cmp
fisubs
jno
xor
sub
sbb
jo
lret
gs
dec
fmuls
inc
lods
leave
dec
inc
xor
mov
or
jae
leave
or
into
ljmp
mov
jb
imul
push
shrl
lds
out
aaa
mov
pop
cmc
sub
jnp
stos
repz
push
xchg
mov
jle
int3
js
in
outsb
or
movsl
sub
addr16
aam
or
xor
push
stc
adc
adc
fwait
jns
xchg
mov
shl
inc
andl
jge
movsl
rep
xor
rcrl
stc
push
jmp
cmp
xor
sub
out
es
or
dec
es
dec
sbb
add
stos
jp
in
jae
add
lret
jge
pop
rcll
inc
xchg
add
dec
mov
movsb
das
push
lahf
les
out
in
xchg
push
xor
push
negl
stc
rol
mov
dec
or
sub
mov
mov
xchg
push
push
jmp
cmp
sahf
arpl
mov
xor
std
insb
test
data16
mov
jecxz
or
push
mov
push
mov
dec
dec
pop
or
stos
clc
xchg
xchg
mov
scas
xchg
out
stos
inc
push
mov
pusha
mov
out
jbe
int
cld
clc
lock
call
ja
outsb
push
inc
lret
cmp
test
dec
lret
ljmp
icebp
inc
push
push
nop
lcall
add
mov
sub
push
cmp
rclb
pop
subl
lcall
adc
cmp
lds
cs
adc
xchg
cwtl
push
xor
sbb
fsub
add
push
les
inc
adc
fldl
and
dec
rolb
pop
jge
ret
jno
std
mov
rolb
xor
pop
lret
add
dec
std
fst
mov
add
sbb
mov
mov
imul
mov
mov
add
loop
je
and
dec
imul
or
pop
xor
mov
xchg
mov
push
ljmp
cmp
sarb
test
scas
xlat
imul
inc
fiaddl
jno
jmp
mov
adc
lahf
xchg
fmul
xchg
enter
ss
imul
xchg
pop
mov
sbb
aaa
lahf
mov
in
sub
sbb
stos
jl
out
xor
pop
jae
fsts
daa
mov
cli
mov
pusha
test
adc
mov
pop
adc
sub
aad
inc
push
mov
popa
push
into
lret
popl
pop
lea
popa
lods
dec
icebp
stos
jg
sbbb
adc
and
xor
lret
pushf
and
ss
cmpsl
rorb
adc
nop
add
jge
pop
xor
or
sub
rclb
lds
js
push
out
cmp
add
sub
cwtl
lret
xchg
inc
sub
lret
rorb
adc
cmc
es
and
sub
inc
lds
das
mov
pusha
nop
test
shrl
fnsave
or
mov
js
rcl
lcall
pusha
mov
mov
push
pop
push
movsl
jno
fistpll
sub
test
mov
or
and
jbe
nop
or
mov
mov
add
lcall
test
jmp
push
dec
loope
xchg
je
aaa
andb
out
jmp
xchg
push
test
test
out
in
ja
call
sbb
pop
sbb
sbb
mov
lcall
or
bound
cwtl
bnd
pop
jno
hlt
add
and
dec
adc
mov
xor
sub
cmp
jle
enter
repnz
lea
out
inc
push
xlat
sbb
and
and
shrb
jl
adc
mov
adc
cmp
pop
cwtl
push
pop
outsb
call
arpl
sbb
jnp
and
xor
mov
adc
push
adc
mov
sar
ja
xchg
push
push
jnp
sbb
cmp
push
or
cmp
xor
data16
pop
push
dec
cld
or
sbb
inc
cmp
adc
adc
xor
add
xchg
popf
bswap
cmpsb
sub
das
int3
xor
in
idivl
lock
cltd
fiadds
dec
pop
add
add
xor
out
aad
pop
or
mov
test
add
mov
dec
mov
pop
je
ret
inc
lods
and
dec
sub
repz
std
cmp
std
lret
jg
pop
adc
push
push
test
addr16
in
and
imul
fbstp
ret
jae
in
mov
scas
jo
jns
cmp
les
aaa
in
enter
mov
and
cmc
xchg
inc
scas
nop
mov
jmp
sbb
mov
mov
dec
les
mov
shl
fiaddl
ss
test
icebp
cmp
cmp
test
ss
out
inc
mov
mov
mov
test
add
xor
dec
lea
pop
test
in
popa
dec
and
sti
mov
cmovge
lods
xchg
lcall
loopne
push
bound
dec
sahf
cmp
fiadds
fwait
jne
scas
xlat
aaa
je
sbb
int
loope
popa
cmp
test
fs
xchg
pop
mov
outsl
pop
and
pop
loop
shufps
pusha
imul
push
push
xchg
jnp
fwait
in
fwait
jae
jg
jg
mov
std
cmp
daa
jp
test
jmp
add
fidivrl
hlt
pop
jno
xorl
mov
pop
mov
div
adc
scas
incl
repnz
enter
dec
sbb
ret
jp
adc
popf
mov
lcall
pop
popf
mov
sbb
ret
mov
xchg
out
movsl
aam
int
mov
xor
mov
fs
icebp
and
jne
sub
xchg
test
jge
sub
subb
push
jge
aad
ss
push
lret
mov
jnp
lods
mov
sahf
jbe
ljmp
aas
and
inc
dec
clc
mov
lods
in
mov
mov
out
fwait
test
lahf
in
test
mov
xchg
fcmovnb
daa
adc
ret
ss
ljmp
cs
rorb
stos
lds
and
or
jp
sub
mov
sbb
imul
and
add
or
add
scas
bound
push
andl
out
mov
and
fidivrl
ret
push
sub
into
pop
jl
push
push
mov
pusha
add
mov
sar
xchg
xchg
scas
insb
loope
push
pusha
dec
int
lret
rol
add
pop
pop
out
cmpsb
dec
xchg
push
xchg
or
add
add
xor
lock
dec
shlb
mov
jle
mov
fs
daa
xchg
lret
mov
das
addr16
subb
mov
cld
add
mov
mov
out
inc
sbb
out
fcomip
ret
dec
xorb
jnp
mov
lea
push
xor
ret
jg
xchg
sub
mov
loopne
decb
popa
movsb
or
inc
dec
fmuls
xor
aad
mov
sub
fs
cmp
dec
cmpl
sub
sub
dec
fcoml
fbstp
inc
cld
mov
push
xor
jmp
inc
insl
std
cltd
mov
sub
lret
mov
xchg
xor
ss
popf
in
sbb
fucom
subb
ret
jnp
fsubrs
and
cmp
adc
out
dec
jo
dec
adc
and
cmp
xchg
das
roll
pop
out
xor
out
xor
fwait
popf
cli
fistpll
mov
pop
in
and
push
ret
mov
js
fisttps
xor
outsl
or
ja
gs
and
push
mov
in
ret
pop
int
inc
or
xchg
pop
sub
cmpsl
rcll
int
push
jno
and
inc
cvttps2pi
bound
mov
stos
aaa
inc
lsl
addr16
outsb
cmp
xor
and
aam
add
int3
jno
notl
lret
push
imul
jmp
loopne
xor
mov
std
outsl
imul
mov
frstor
lcall
int
stos
test
mov
test
push
and
adc
es
adc
and
jnp
mov
jg
popa
push
mov
push
mov
enter
cli
cwtl
jnp,pn
test
xor
repz
push
in
lret
lock
pop
xor
scas
scas
inc
inc
mov
pop
je
clc
sbb
mov
adc
movsl
xchg
into
mov
dec
es
int
xor
push
xchg
mov
repnz
sar
shlb
xchg
adc
sub
test
sbb
ss
mov
adc
lods
xchg
fstps
cld
fwait
mov
inc
lret
xchg
dec
nop
adc
xchg
cli
mov
mov
and
inc
test
push
imul
mov
in
ljmp
xor
lret
sub
adc
dec
lcall
adc
sub
mov
repnz
in
mov
pop
int3
push
pop
xchg
jo
mov
adc
xchg
rcll
scas
pop
dec
lea
test
xor
in
outsb
mov
jne
test
bnd
add
in
lret
je
inc
stos
jecxz
les
idiv
sub
aas
adc
repz
idivl
xor
int
lret
xor
imul
or
adc
mov
xchg
cs
popa
add
dec
cmp
xor
and
pop
imul
push
shr
and
adc
jns
orl
push
lret
cltd
cmp
sti
notb
push
fstpt
rcrl
std
push
or
inc
in
std
pop
aas
mov
jmp
lods
jbe
out
or
arpl
out
lods
ficompl
aam
dec
insb
clc
dec
leave
sbb
adc
add
scas
mov
shrb
fistpll
mov
mov
push
shlb
xchg
clc
cli
ret
and
cmp
ss
in
pop
cmp
es
mov
xor
push
inc
cmpsb
push
push
xor
mov
cmp
sub
shrl
push
push
xchg
xchg
dec
adc
and
xlat
xor
enter
dec
enter
addr16
and
add
cli
adc
and
fcoms
dec
insl
cmp
inc
sbb
fisttps
fistps
out
fwait
rorl
and
cmp
sbb
dec
in
and
mov
jl
sbb
loopne
inc
mov
inc
testl
inc
dec
mov
push
mov
sub
fcoml
jle
fisttps
mov
fbld
fs
mov
jl
popf
and
jg
xchg
sub
pop
nop
sarl
and
adc
inc
mov
sar
cmpsl
sbb
jp
sahf
cwtl
add
mov
adcl
pop
adc
orl
sbb
lods
aas
outsb
lret
inc
dec
push
jecxz
ss
push
jecxz
jnp
ret
and
clc
inc
push
add
or
mov
nop
out
mov
xor
pop
inc
xor
push
out
fwait
cmpl
mov
jne
call
pushf
inc
pusha
xchg
sbb
xchg
mov
mov
sbb
lcall
and
neg
ljmp
pop
hlt
sub
push
pop
fsin
cmp
cmp
adc
mov
sbb
dec
call
lods
mov
mov
xchg
andb
cmpsl
sbb
lea
xor
out
stos
fwait
cwtl
inc
clc
or
cltd
and
jo
rorb
lods
add
or
fwait
inc
pop
sbb
add
out
or
sti
test
sub
jae
mov
iret
rolb
jae
scas
mov
je
cmp
xchg
ficoml
lret
fstps
dec
mov
push
std
jb
shrb
cmp
call
in
in
pop
sub
cld
out
jmp
les
lahf
mov
lcall
sbb
or
xchg
dec
aad
shlb
stos
dec
mov
mov
adc
pop
xor
mov
lds
inc
jmp
jg
es
scas
mov
inc
sbb
cmp
adc
xorl
xor
or
je
or
inc
out
movsb
sub
jbe
jnp
add
cmp
push
mov
mov
sbb
sbb
clc
loop
sub
lahf
fsubs
hlt
push
xchg
sbb
and
fcoml
adc
adc
fisubl
aas
add
cli
lret
movsl
aas
aaa
std
pusha
mov
or
xchg
mov
insl
in
mov
mov
adc
dec
xchg
mov
mov
stc
in
fbstp
es
sbb
push
mov
or
xor
iret
loopne
in
daa
or
xorb
ficoml
incl
xchg
sub
lahf
out
mov
ljmp
mov
xchg
in
jbe
jo
pop
test
xor
sbb
hlt
test
stc
decb
insb
lods
int
and
dec
out
xor
or
aas
mov
xchg
test
fcomi
ret
cmc
and
xor
xchg
jae
or
aam
lret
ret
rclb
jb
shrl
call
inc
out
ficoml
aam
int3
pop
adc
leave
jbe
punpckhdq
out
inc
cltd
nop
pop
jno
repz
test
insl
int3
mov
adc
jns
jb
mov
xchg
pop
sub
add
in
mov
jmp
inc
sbb
out
shll
call
jo
cli
lods
das
adc
mov
jns
push
dec
inc
popa
imul
loope
mov
popa
cmp
mov
xor
out
addb
imul
lcall
jg
xor
imul
adc
addr16
jl
or
sub
scas
rcll
addr16
xor
mov
ja
stos
out
push
xchg
clc
add
and
sar
hlt
mov
pop
mov
jge
inc
cmp
dec
sbb
pop
cmp
pushf
mov
sahf
in
call
xchg
stc
push
fsts
push
xchg
out
jl
cli
fildl
loopne
xchg
cli
sbbl
sbb
xor
cmp
shll
mov
lods
inc
sub
int3
ds
shll
and
lods
sbb
add
mov
cmp
fisttpl
inc
shl
in
into
ficomps
jbe
stc
scas
mov
xlat
popf
jle
movsb
pop
sbbl
enter
pushf
xlat
mov
hlt
sub
mov
in
push
ficompl
les
mov
pop
pushf
xor
and
dec
into
imul
gs
stos
icebp
fistpl
icebp
cmp
dec
pop
pop
add
in
mov
adc
fstl
push
cmp
test
mov
inc
imul
into
xchg
sub
lock
adc
xchg
adc
push
loop
mov
fistpl
int3
jmp
imul
es
in
mov
stc
subb
repnz
mov
pop
repz
jp
loope
aaa
fwait
pop
ja
lret
orl
fstpt
filds
popf
xor
rcrb
xor
sbb
inc
or
xchg
cmp
lcall
inc
mov
movl
mov
fstps
adc
cmp
inc
imul
hlt
cwtl
lahf
push
xor
js
cli
jnp
and
decb
mov
jbe
scas
leave
lock
mov
xchg
push
xlat
mov
pop
inc
stos
mov
add
sahf
xchg
sti
push
loop
cmpl
push
fistpl
rcr
xor
add
adc
xchg
test
je
xchg
dec
push
pusha
loope
mov
inc
and
loopne
repz
add
pop
inc
cmc
and
jno
and
dec
lock
lock
out
gs
mov
pop
pusha
push
fwait
negl
lret
jbe
xor
mov
jne,pn
imull
mov
insb
mov
mov
or
mov
test
arpl
nop
subb
outsb
jle
paddusw
xor
movsl
pop
dec
addb
into
sub
add
push
sbb
scas
repz
js
push
mov
icebp
leave
or
mov
gs
popf
lds
test
push
pop
adc
mov
repz
push
push
adc
cwtl
push
test
popf
mov
mov
negb
lcall
push
fstl
outsb
and
add
adc
mov
test
subl
xor
orl
lods
pop
and
push
inc
jae
jl
push
int
scas
gs
les
test
in
in
or
mov
pusha
fdivrl
cmpsl
iret
and
mov
cmp
or
fdivrs
mov
cmp
fiadds
dec
fists
pop
test
bnd
cmpb
andl
loopne
js
mov
int
mov
dec
sub
daa
cltd
mov
nop
push
push
and
imul
imul
sub
jns
push
fsub
cs
mov
lods
xlat
loopne
xchg
bound
mov
idivl
das
mov
ret
sub
push
mov
stos
pushf
mov
outsb
jle
cltd
insb
push
cmpsb
dec
ftst
push
leave
aad
iret
into
nop
or
add
add
das
loopne
xor
ss
mov
dec
mulb
addr16
jl
add
jmp
int
xor
xchg
mov
xchg
xor
pop
inc
inc
and
dec
jmp
push
ficompl
mov
pop
pop
and
mov
cmp
pusha
dec
dec
popa
cmp
jl
push
jmp
adc
mov
push
sub
sbb
jmp
vpsrlq
dec
ljmp
mov
out
in
xlat
shll
mov
lcall
sbb
fstpt
adc
imul
and
xchg
fistps
push
xorb
add
fidivl
mov
adc
pusha
test
sbb
push
cltd
fisubs
addr16
push
clc
push
enter
mov
rcll
ss
sbb
into
scas
shll
push
and
pop
call
ficompl
enter
data16
stc
call
push
imul
pop
push
cwtl
jg
pop
pop
fistl
add
movsl
out
mov
fisttpl
and
enter
cltd
int3
sbb
lea
iret
repz
or
inc
shll
jnp
and
ljmp
pop
push
mov
hlt
ss
jecxz
or
vrcpps
jmp
cmpsb
add
in
cwtl
xor
sbb
xor
incl
mov
adc
test
dec
fimuls
cmpsl
push
and
xchg
xchg
adc
fs
pop
cmp
xor
scas
rolb
das
cmp
mov
xor
sub
mov
sub
out
loop
xchg
lds
and
xchg
mov
adc
jo
aad
inc
dec
std
push
pop
aaa
icebp
inc
stos
mov
ret
mov
dec
jns
imul
adc
scas
pop
xchg
jb
push
or
xlat
in
dec
lret
loop
outsl
pop
add
add
xor
imul
stos
in
aam
or
cs
mov
cli
in
fadd
xchg
and
jne
ja
ljmp
dec
sub
or
bound
dec
lret
lcall
testl
movsb
mov
cwtl
xorl
or
pop
sbb
in
xchg
decl
xchg
lds
jnp
or
dec
mov
shlb
mov
sub
movsl
les
ret
or
aas
aam
shlb
fcoml
add
xchg
rorl
int
and
pop
ljmp
into
pop
sbb
sbb
lods
mov
sub
jns
xlat
xchg
mov
push
xor
ret
sub
dec
in
jns
imul
in
inc
daa
inc
dec
or
inc
push
dec
test
xlat
in
popf
cmp
jb
jnp
hlt
cmp
inc
rolb
inc
test
adc
cwtl
pop
add
loope
test
popf
icebp
popl
ja
loopne
repnz
test
cltd
sti
mov
sub
jecxz
cmpsl
mov
sub
xchg
mov
jle
xchg
rolb
mov
xlat
fsts
stos
fmull
je
adc
dec
aaa
adc
sbb
mov
xchg
test
push
idivb
lea
dec
xor
and
leave
add
in
jp
add
xchg
xor
loope
pop
mov
adc
pop
inc
fnstcw
mov
sub
lret
in
lret
cmp
frstor
scas
scas
xlat
jbe
push
pop
add
pop
stos
add
push
add
push
push
dec
sub
icebp
stos
inc
mov
xor
rclb
inc
repz
push
push
add
sub
leave
je
insb
push
pop
je
loopne
enter
add
sub
xchg
cmp
clts
mov
fwait
inc
xchg
pushf
testb
sti
mov
rcr
push
fimuls
mov
aad
jle,pt
xor
idivl
out
hlt
mov
jge
fwait
push
bswap
mov
jge
insl
test
push
adc
push
pop
push
sub
insl
sub
popa
fmull
loope
aam
push
stos
xor
xor
jle
aam
xchg
and
ljmp
daa
lret
mov
repz
mov
fwait
mov
loope
dec
mov
ret
test
xchg
stos
sub
cmp
hlt
sbb
xor
sbbb
mov
lds
sbb
mov
jae,pn
call
cli
pop
rcl
push
or
test
mov
das
jecxz
push
lcall
out
fmuls
lods
mov
sbb
dec
rorl
ret
sbb
fcmovnbe
cmp
cltd
clc
ljmp
push
adc
scas
clc
dec
stc
dec
mov
stos
fstpl
and
mov
jo
adc
sbb
mov
pop
dec
test
inc
xchg
std
shl
pop
addr16
mov
ds
mov
iret
sti
jp
fiaddl
dec
notb
adc
mov
fldt
jns
lret
mov
test
sbb
sti
cld
rclb
sbb
cmp
out
jb
sbb
es
std
nop
ret
insl
inc
scas
jp
ret
ja
adc
mov
fldt
xlat
out
shrb
sti
je
or
cmp
out
xchg
mov
in
sub
shr
outsb
loope
pushf
inc
adc
jge
mov
sub
push
mov
shl
inc
ret
sahf
sub
mov
xor
pop
sbb
ror
popa
nop
sub
out
jge
rcr
popf
popa
inc
je
xlat
adc
push
jb
outsl
xchg
pusha
mull
mov
fmull
pusha
jle
cmp
jp
orl
cmc
add
mov
fidivrs
mov
lcall
scas
adc
mov
shll
sub
inc
movl
cmp
mov
and
and
mov
pop
sbb
lcall
inc
sbb
xor
jg
lods
mov
jo
incb
and
lcall
cli
or
nop
cltd
inc
aad
mov
orl
sbb
pop
cmpsl
pop
loopne
add
movntq
or
jge
imul
repz
add
pop
ljmp
sti
and
ret
out
cltd
out
outsb
negb
or
sbb
xchg
xor
imul
lods
scas
push
add
xor
fs
shll
addr16
sbb
ja
fstpt
aaa
xor
xor
sbb
in
shll
loope
adc
lret
imul
and
mov
iret
mov
pop
outsb
mov
and
cs
ds
adc
lods
addb
xchg
xor
pop
and
add
roll
lret
test
add
mov
pop
out
das
add
mov
out
push
ja
idivl
pop
arpl
out
xchg
arpl
std
mov
adc
cmp
data16
into
inc
jo,pt
out
in
leave
jno
xor
sub
add
pop
jge
shl
repz
add
jp
es
cmp
scas
fmulp
mov
xchg
mov
pop
mov
mov
jae
xchg
mov
sbb
dec
stc
mov
aam
sbb
aaa
fidivs
ja
gs
and
dec
std
das
jne
jbe
das
test
push
push
sub
mov
sbb
cmp
lret
fs
rclb
jne
add
out
testb
dec
into
aaa
cld
push
mov
daa
ret
mov
adc
call
pop
push
ja
mov
arpl
nop
cs
jbe
aaa
leave
jns
mov
popf
mov
ret
dec
mov
jmp
mov
notb
mov
push
cli
orb
jbe
push
bound
jmp
xor
lods
cmpb
mov
xchg
inc
dec
mov
jl,pt
aaa
jl
xchg
test
jbe
loop
aad
scas
mov
cmp
movsb
add
jecxz
adc
out
iret
loope
push
adc
scas
pop
xchg
test
xchg
test
lret
mov
test
mov
add
rclb
xor
nop
pop
and
cmpsb
add
xor
ja
cmp
mov
jl
mov
std
pop
inc
ds
call
out
adc
hlt
lahf
mov
std
fistps
push
sub
cmpsb
insl
hlt
xchg
leave
idivl
sub
aad
xchg
jg
or
adc
adc
sub
mov
dec
imul
pop
lret
mov
xchg
mov
out
xchg
xor
push
sub
push
sahf
test
jae
mul
popf
ds
or
shlb
sub
add
sub
lods
movsl
xor
out
std
and
jl
in
repnz
aam
or
xchg
shlb
bound
push
inc
sub
mov
ja
negl
insl
dec
jecxz
out
rolb
jb
xchg
jae
jle
sbb
sub
cmp
jp
aas
mov
lods
test
scas
es
dec
mov
push
les
stc
inc
movsl
or
cld
dec
daa
mov
test
int
xlat
enter
fdivrl
mov
lods
mov
cmp
int
ljmp
push
jl
addr16
pop
lods
xchg
pushf
out
jg
xor
movsb
push
dec
mov
add
mov
push
mov
pusha
stos
mov
xchg
les
mov
cmpsl
ds
js
jp
clc
insl
mov
or
das
jmp
sbb
inc
jb
andl
sub
xor
dec
or
jge
push
xchg
mov
jbe
add
pop
int3
stos
mov
pop
adc
pop
icebp
insl
xchg
sbb
movsl
cmp
iret
sub
in
hlt
stc
dec
aas
adcl
fcompl
jae
movsb
aaa
fs
es
popf
je
mov
xor
in
int
inc
es
loope
or
sub
inc
sti
rolb
imul
add
or
or
push
or
dec
int
pop
lea
mov
push
int3
mov
sahf
stos
in
mov
lret
bound
lahf
arpl
sbbb
mov
push
int
and
dec
gs
stc
push
cwtl
jg
push
fwait
push
and
pop
shrl
adcl
cld
nop
scas
jge
test
ss
in
not
jmp
mov
das
testl
mov
rolb
cli
mov
and
pushf
jo
jo
bound
enter
jge
xadd
test
fwait
aam
popa
push
stc
insb
cmp
out
push
insb
cmp
shlb
shr
into
cli
add
and
icebp
pop
mov
in
sub
stc
stos
cwtl
inc
add
inc
addb
in
or
jno
mov
cmpsl
call
push
jecxz
adc
pop
test
subb
cmpsl
inc
call
jno
jp
or
mov
shrl
mov
je
jnp
xchg
push
sti
jne
adc
loop
lahf
add
push
mov
mov
sbb
rolb
fstpt
sub
movsb
pop
clc
pop
mov
sub
xchg
mov
mov
fistpll
daa
mov
push
call
push
ret
repnz
xchg
mov
decl
idivb
pop
add
mov
mov
rorb
out
or
push
imul
push
in
xor
or
push
jge
into
inc
int
jge
mov
loopne
movsb
fmull
mov
call
test
jo
mov
fcompl
and
imul
dec
mov
push
shrb
daa
lock
movsl
es
shl
pusha
jne
fsubs
movsl
mov
cmp
nop
push
adc
imul
adc
and
lea
shl
and
repnz
aaa
xor
roll
adc
in
dec
jecxz
in
add
fsubrs
push
fcoms
mov
cmp
stc
in
mov
subps
dec
xchg
sbb
loop
lock
popa
loope
mov
ret
repz
xchg
fdivl
fldenv
and
rol
cltd
cltd
xor
dec
push
xor
shll
sub
mov
mov
sbb
sbb
xchg
jp
in
in
push
dec
nop
les
inc
hlt
in
les
and
pop
sub
js
sbb
sub
addl
pop
out
or
std
xchg
popf
inc
cmpsl
jg
cmpl
call
imul
sti
rclb
jns
scas
or
test
adc
shl
ret
jbe
pop
xor
dec
out
jmp
adcb
cmpsb
orl
rorl
lea
pop
add
lods
xor
addr16
cmpsb
movsb
inc
xor
int3
mov
add
hlt
push
and
std
sub
fwait
pop
xor
push
jbe
in
out
bound
outsb
cwtl
mov
int3
stos
loopne
sub
lret
mov
arpl
inc
fsubrl
xorb
lcall
adc
jo
sub
ja
cmpsl
pop
fs
setns
addl
pop
std
in
rolb
push
add
cmp
int3
jmp
mov
dec
jle
pop
test
shll
roll
inc
pusha
lods
xchg
cmpsb
add
repz
test
aam
or
pushf
leave
rcll
xchg
ror
or
inc
pop
jb
xor
fnsave
mov
and
jne
push
shrb
xchg
lret
jne
ljmp
mov
jae
mov
jae
pop
push
adc
out
ljmp
ja
mov
ret
or
jnp
bound
andb
xchg
mov
jmp
and
xchg
aaa
hlt
mov
pop
mov
inc
out
dec
aam
jle
sbb
ljmp
jge
dec
in
add
add
arpl
dec
or
and
push
jne
jg
xchg
mov
les
sbb
negb
mov
sub
cmp
stos
stos
popf
sub
mov
push
shl
es
stos
sbb
jg
shr
addr16
sub
popa
out
movsb
icebp
xor
or
sbbb
test
in
adc
mov
ror
lahf
pop
add
imul
bound
mov
inc
and
fists
pop
ret
push
aam
scas
cltd
dec
sbb
test
add
aas
movsl
rcrl
cmp
and
xorb
jge
sub
das
mov
jmp
ds
insl
mov
jp
insb
rorl
mov
pusha
jno
pop
mov
movsl
je
data16
push
lahf
pop
jno
mov
roll
daa
ja
fnstcw
xor
or
sbb
enter
push
ds
sub
arpl
inc
cltd
iret
loopne
in
inc
fwait
jo
dec
push
mov
dec
xor
scas
outsb
test
in
add
xor
les
and
loop
xor
adc
js
lret
lahf
jno
shlb
add
xchg
and
js
jecxz
pop
sbb
movsl
sbb
popa
xchg
cmp
out
hlt
lret
inc
scas
xor
ss
xor
sub
jo
les
xor
setl
xchg
add
in
dec
test
ret
push
aaa
add
mov
sti
stos
or
or
les
pushf
adc
lods
dec
scas
inc
jge
add
add
or
movhlps
xchg
dec
sub
into
sub
cmp
jmp
out
push
sbb
pop
and
push
mov
movb
inc
hlt
fistpl
or
loope
sbb
mov
push
arpl
in
sub
add
int3
sub
xor
jbe
insl
mov
outsb
push
test
iret
add
test
push
mov
gs
mov
inc
into
sti
insl
push
lock
push
leave
ljmp
lea
in
std
add
dec
clc
lcall
sub
or
pop
in
in
pop
push
jne
stc
inc
stos
pop
rcr
add
ret
adc
mov
bound
xchg
in
stc
sbb
inc
les
inc
lret
cmp
fdivrl
xor
push
enter
jae
add
and
xchg
pop
das
ja
pop
aaa
leave
movswl
xchg
fcoml
sub
inc
shrb
cld
pop
push
inc
cltd
fdivrs
pop
mov
pop
xchg
add
clc
cmp
ss
or
lds
pop
lret
out
inc
es
xchg
ja
arpl
lret
add
cmp
hlt
push
xor
and
pop
xchg
push
lds
call
or
dec
push
mov
aam
or
lret
inc
fisubrl
mov
sbb
or
mov
inc
adc
std
iret
jl
cmp
pop
es
mov
ss
fidivrs
mov
testb
or
and
pusha
mov
jae
scas
loop
and
xchg
sub
inc
pop
inc
xchg
cli
push
icebp
push
jge
push
push
repz
ret
pop
pop
cmp
sti
enter
into
adc
xchg
or
fwait
and
cld
cmc
leave
or
xor
lcall
inc
cmp
mov
inc
je
test
and
jbe
cmp
stos
jbe
cmp
sub
lcall
and
and
inc
addr16
xchg
pop
mov
aam
mov
mov
pop
test
cltd
or
or
dec
cltd
xchg
aam
je
push
popf
fnstcw
xor
aaa
ret
and
out
inc
je
loopne
andl
je
in
sub
pushf
push
lcall
lret
nop
push
fdecstp
and
aas
in
mov
sub
nop
enter
ljmp
jbe
insb
mov
lahf
orl
xor
push
je
repnz
jbe
cmpsl
mov
loopne
mov
sbb
xchg
fsts
sbb
dec
testl
push
lret
orb
cs
dec
push
mov
sub
mov
fisttpl
mov
mov
cmc
imul
stos
add
fidivrl
icebp
in
cwtl
cmpsl
dec
xor
repz
std
mov
xchg
icebp
nop
dec
cs
iret
sub
mov
mov
cmc
loop
push
xlat
mov
test
cmp
jbe
cmp
xor
mov
int3
addr16
mov
jle
inc
sub
repnz
mov
inc
push
stc
mov
push
xchg
sbb
xchg
rcl
jge
xchg
mov
aad
jg
ret
mov
and
aas
lret
adc
inc
fucomip
jbe
subb
negl
adc
out
add
mov
mov
daa
outsb
into
add
sbb
sbb
out
pop
sbb
aas
and
adc
adcl
add
lods
cmpsb
addl
sahf
insl
test
push
in
leave
sbb
dec
sub
mov
outsl
mov
in
dec
andl
dec
pushl
pop
inc
jne
loop
mov
cmp
sbbb
pop
mov
in
adc
mov
rorl
rcr
dec
test
aam
and
or
pop
ffree
mov
mov
mov
ja
pop
mov
lods
bound
test
test
xchg
div
das
sub
cmp
sbb
ss
adc
sar
pop
in
sub
xchg
cwtl
imul
inc
in
lret
lret
fwait
jle
sub
je
mov
add
pop
push
hlt
ds
insb
cmp
push
outsl
sar
subb
jne
cwtl
add
and
outsb
loopne
bound
cmp
iret
out
mov
pop
push
les
fs
or
add
jae
pop
aad
loope
dec
into
push
popl
ss
pushf
cmp
out
ret
mov
inc
cmp
stc
gs
and
cwtl
xchg
mov
out
fbld
test
dec
xlat
adc
inc
xchg
add
jo
insb
test
xor
test
gs
or
xlat
aam
fwait
call
fisubl
in
xor
lods
aaa
xor
in
push
xchg
add
shlb
mov
adc
add
adc
mov
dec
popf
cmp
roll
mov
mov
inc
mov
dec
dec
pop
jg
insl
or
xchg
add
push
rcl
shlb
mov
xchg
lahf
mov
jge
dec
jbe
pop
dec
in
movsb
ret
popf
sub
and
bound
mov
dec
movsb
sbb
mov
sub
inc
insl
sbb
cmp
xchg
fwait
ja
ret
or
popa
add
mov
lcall
sbb
repnz
mov
pop
lock
xor
pusha
jnp
add
adc
push
ret
xchg
ja
out
push
orb
clc
adc
mov
or
insb
inc
sbb
jge
cmp
cli
insb
jnp
add
pop
shll
arpl
sbb
pop
jo
mov
sbb
lea
int3
dec
icebp
mov
daa
test
cld
or
ljmp
std
int3
dec
xchg
out
jl
cs
out
push
adc
out
das
sbb
pop
clc
adc
mov
rolb
scas
sar
cmp
adc
das
mov
notb
dec
jne
sbb
jl
arpl
xchg
es
cwtl
bound
cmp
mov
push
orl
or
flds
sbb
lcall
xchg
xchg
adc
mov
mov
adcl
mov
cltd
test
call
adc
cli
push
loopne
scas
pop
sub
sbb
hlt
loop
divb
or
fmull
sarb
mov
mov
test
aaa
sub
fs
push
test
xor
push
mov
mov
mov
and
jae
mov
pop
popf
int
inc
adc
les
push
adc
in
scas
arpl
mov
cmp
mov
das
sub
push
push
dec
popa
jns
xchg
cmp
les
jp
js
or
push
test
incb
arpl
cmp
movsl
fimuls
repnz
stos
push
pop
xor
sarl
mov
xor
lods
fstps
popl
jbe
jb
loopne
push
or
and
mov
add
mov
std
daa
mov
add
ss
pop
and
push
mov
in
or
mov
mov
daa
sbb
stos
push
xchg
into
xor
dec
out
test
mov
adcb
push
push
iret
adc
xchg
fwait
mov
push
repnz
jb
andb
jp
and
mov
int3
scas
sub
dec
push
scas
arpl
mov
xor
xchg
mov
clc
hlt
fwait
out
cltd
aad
mov
pusha
mov
push
in
push
in
repnz
jnp
mov
push
test
cmp
push
loop
fdivp
jns
es
out
xchg
cmp
add
out
leave
into
imul
jnp
rorl
test
jbe
daa
xchg
nop
daa
sbb
rorl
dec
sub
push
mov
jecxz
in
dec
pop
mov
jmp
pop
mov
jno
ret
dec
adc
or
insb
inc
add
cmp
jmp
mov
add
jnp
fistpll
cmp
mov
roll
pop
push
mov
add
cmp
push
inc
push
cmp
xchg
fwait
xchg
dec
cmp
movlps
dec
das
je
into
jl
cmp
sub
insl
xor
popf
rcll
insb
sub
lret
stos
xchg
movsl
rcrb
jecxz
fsubrs
or
push
je
mov
sahf
rorl
mov
sti
in
mov
or
xchg
mov
mov
xchg
sti
jae
adcl
cmp
adc
or
dec
bound
add
push
xchg
dec
daa
mov
jae
call
bound
ja
leave
or
cmc
push
pop
add
jmp
lds
cmp
scas
push
cmp
xor
sbb
dec
pushl
std
add
xor
mov
jne
push
ljmp
dec
popf
or
rol
adc
push
xlat
out
jle
iret
inc
in
sbb
jge
stc
test
add
adc
leave
jg
outsb
or
in
repnz
xchg
xchg
jne
push
loop
subb
or
sub
aam
iret
jmp
int3
pop
or
xor
ljmp
mov
jne
xchg
dec
jge
sub
push
mov
dec
decb
mov
mov
out
aaa
inc
cmp
xchg
mov
stos
and
lds
mov
movsl
in
sub
int
cmp
loopne
in
mov
in
mov
aad
jbe
call
cmp
inc
push
cli
xchg
gs
in
ret
mov
fsubr
mov
dec
mov
dec
mov
sub
cmp
scas
xor
xor
into
out
rcll
loop
sub
fisttpll
add
ljmp
push
sahf
jne
jns
mov
dec
adc
or
xchg
push
hlt
push
mov
mov
mov
pop
pop
cwtl
dec
or
inc
aaa
test
or
stc
dec
mov
inc
add
into
aaa
in
sbb
cmpl
ljmp
int3
add
popa
lds
pushf
pop
xchg
jno
push
je
ror
in
lods
notb
add
leave
or
xchg
pop
sub
adc
outsl
lock
push
and
jns
mov
cmpsl
mov
add
pusha
dec
jl
stos
arpl
sbb
shll
mov
and
pushf
sti
mov
scas
cmp
or
into
jb
test
sub
mov
jbe
sub
in
sbb
dec
out
cmp
stos
cs
jp
xchg
ret
mov
cmp
in
ret
roll
cmp
ret
push
repz
sbb
ss
mov
jle
dec
loopne
sarb
xchg
mov
xor
scas
inc
test
fbld
cltd
popa
into
mov
icebp
inc
mov
cmpsl
aas
loope
stos
daa
push
aaa
ds
inc
and
mov
add
in
bound
hlt
cmpsb
ficompl
and
mov
dec
stos
pop
sbb
cs
sbb
pop
jo
or
sub
jle
popf
xor
push
cmp
jle
jl
cmp
js
push
test
add
aaa
mov
sbb
xorb
push
bound
iret
in
fcompl
cwtl
dec
mov
pop
sar
xchg
add
pop
and
popf
es
inc
mov
mov
stos
xchg
lret
inc
sbb
and
jbe
sub
aaa
xor
pop
jecxz
ss
je
fstl
push
mov
ficomps
sbb
bound
imul
iret
lahf
push
cmp
sarb
lahf
ds
sub
jecxz
or
testb
cwtl
mov
mov
movb
std
jno
loopne
adc
push
dec
push
das
and
adc
out
scas
sbb
imul
dec
ds
mov
in
pop
les
mov
inc
cli
push
xchg
lcall
ret
repz
jge
fucom
nop
or
aas
cwtl
into
xor
sbb
jle
divl
test
adc
push
cli
outsl
push
cmpl
cmp
xchg
sahf
mov
scas
fsubs
sub
outsl
ja
jnp
mov
int
mov
pop
cmc
sub
stc
mulb
in
push
inc
sub
jbe
mov
cmp
sub
inc
mov
or
add
lret
xor
and
in
insb
cmp
push
into
cmpsl
mov
xchg
jle
mov
dec
cmpb
lahf
fildll
adc
icebp
cmpb
inc
fdivp
add
call
es
fisubs
mov
outsb
ret
jle
mov
sub
and
xchg
mov
sbb
mov
sub
lahf
inc
popf
or
add
cli
pop
push
loop
in
rcl
movsl
fdivrl
nop
arpl
cmp
fdivl
es
dec
cltd
ds
cld
out
clc
fmull
aaa
test
out
mov
imul
jns
ret
mov
inc
rep
popf
and
push
adc
rclb
jl
mov
push
rcll
or
add
xchg
push
cmp
div
adc
adc
lahf
mov
int3
mov
or
in
iret
inc
mov
push
mov
xchg
scas
das
invd
aam
in
mov
inc
sbb
dec
fs
inc
push
movsl
cmpsl
xchg
in
add
mov
or
test
mov
rolb
lea
dec
hlt
loopne
negl
pop
hlt
sub
pop
cmp
movsb
xchg
call
adc
add
out
dec
pop
pushf
push
aas
cmp
loope
mov
add
and
jge
xlat
aaa
js
mov
nop
mov
sub
nop
shl
mov
sahf
pop
lods
pop
xchg
andb
xchg
je
xchg
cli
and
les
push
cmp
sahf
jge
cmp
xor
mov
test
test
xchg
shl
jge
hlt
dec
sub
testb
int3
notl
pop
xchg
shll
sub
xor
arpl
jecxz
fdivrl
inc
push
test
push
scas
in
jns
push
loope
push
xchg
orl
sbb
push
shrl
lods
and
out
sub
cli
pop
ja
jne
mov
sub
and
sbb
inc
mov
xchg
xor
shl
cmpsb
stos
mov
enter
stc
faddl
and
hlt
mov
sbb
loop
daa
jbe
cs
push
pushf
enter
rorb
pop
pop
jmp
cmc
lods
les
lret
scas
push
xchg
mov
pop
dec
inc
cmp
mov
gs
cwtl
xlat
sbb
xor
push
cs
cmpsb
bound
sub
clc
and
lock
je
test
adc
subb
jo
mov
in
push
fisttpl
js
lock
push
cmpsl
imul
arpl
xchg
add
pop
movsl
and
enter
fwait
sub
mov
iret
jns
ret
lcall
bound
decl
xchg
orb
inc
push
mov
scas
push
out
mov
lret
stos
cmp
sbb
icebp
scas
rep
pusha
fdivs
xor
mov
and
dec
xor
sbb
test
xor
dec
sbb
ja
push
jno
dec
lret
out
ror
aas
stc
xor
or
mov
ljmp
jnp
lahf
mov
lahf
sbb
popf
movsl
cmp
inc
call
inc
leave
inc
enter
flds
imul
sbb
dec
jae
and
xor
lods
int
jo
jo
push
mov
xchg
jae
xor
test
push
cmpsl
push
mul
mov
aad
stos
and
outsl
xchg
movsb
push
jmp
or
mov
fucomi
movsb
cwtl
loop
cmp
push
push
cmp
repz
int
mov
sub
stos
enter
mov
sahf
into
sti
mov
mov
scas
xchg
scas
push
lds
in
mov
adc
into
and
xor
mov
into
xor
jl
sahf
imul
jo
mov
out
enter
pop
bsf
mov
jp
or
in
jnp
sti
xchg
cs
xchg
addr16
cmpsb
adc
hlt
stc
or
inc
bnd
sub
clc
dec
inc
outsl
mov
out
mov
or
push
jl
addl
ret
in
pop
jg
xor
mov
test
test
test
xor
mov
aam
icebp
adc
and
xchg
or
adc
ret
sbb
fadds
test
movsb
lcall
pop
or
pop
into
insb
cmp
fs
sub
roll
mov
test
enter
inc
mov
mov
shlb
pushf
enter
out
int3
and
nop
mov
dec
das
add
mov
stc
or
push
jp
push
jns
test
jmp
clc
repz
les
insl
lea
xor
in
inc
push
cmp
gs
xchg
pushf
xchg
pop
pop
cmp
xchg
mov
xchg
xchg
out
dec
divl
xor
ss
add
xchg
lret
ljmp
stc
xchg
push
in
jge
stos
arpl
in
fsubrl
xchg
pusha
aas
in
gs
sti
xor
or
lock
loope
sbb
add
jne
dec
fisttpll
dec
daa
sbb
pushf
push
add
xchg
and
scas
mov
sbb
in
shl
idiv
ss
sbb
jnp
sbb
roll
hlt
push
push
fmulp
test
int3
ret
leave
cwtl
loopne
and
jb
or
sub
out
inc
sarb
scas
jnp
test
jns
decl
das
das
jg
pop
inc
ja
addr16
aam
push
imul
sbb
decl
notb
aas
and
mov
mov
inc
rcrb
adc
dec
push
mov
xchg
mov
mov
pop
ja
dec
pop
rdmsr
jno
sbb
sahf
cmp
inc
sub
jge
lods
xor
lret
cwtl
mov
inc
gs
jae
mov
dec
in
rclb
insl
das
rcrl
inc
or
fnsave
cs
mov
xchg
mov
lea
xor
mov
xchg
dec
std
sub
test
js
and
or
nop
mov
fcomps
dec
dec
test
xchg
insl
test
sbb
jo
xor
je
add
adc
dec
incb
loope
inc
lods
fcoml
cmpl
test
imull
pop
int3
sahf
jbe
jno
push
fldcw
inc
cmp
xor
aas
in
sbb
rol
push
push
repnz
mov
adc
dec
mov
scas
or
xchg
adc
rcr
icebp
or
pusha
ds
mov
push
adc
movsb
push
sbb
vmovsldup
jbe
xor
inc
cmc
push
fdivrl
lods
daa
out
xor
push
insb
pop
mov
maxps
cmpsb
xchg
in
cmp
push
rcl
xorb
mov
sub
es
jg
sarl
lret
in
in
repz
incb
inc
add
cltd
gs
fcomi
mov
and
jg
xacquire
pop
insb
inc
enter
pop
lahf
pop
repz
xchg
jo
fstp
mov
sub
xchg
push
fcoml
xorl
lret
and
xchg
xchg
es
xor
push
mov
xor
stos
dec
repnz
sub
ja
jnp
sub
jns
fimuls
mov
cmp
cltd
sbb
ret
mov
sub
adc
pop
inc
ret
insb
push
inc
arpl
pop
icebp
iret
mov
je
adc
add
sbb
push
ret
adc
movl
jns
bound
dec
shrb
mov
push
xchg
inc
sub
xchg
imul
pop
inc
cmpsb
inc
sbb
fwait
nop
mov
mov
data16
lds
sbb
rcll
sbb
xchg
lahf
push
mov
mov
in
push
mov
cmpsl
xchg
addb
push
mov
xchg
shrb
les
movb
xchg
pop
fcomps
push
bound
bswap
mov
dec
push
inc
or
push
xor
std
xor
fimull
out
and
sub
mov
mov
and
push
jbe
push
outsl
lock
jle
or
je
sbb
fistpll
movsb
shl
movntq
and
out
popf
jmp
stos
pop
jmp
push
lods
idivl
mov
ljmp
movsl
movsl
xchg
mov
cld
pop
call
pusha
push
flds
shll
cld
push
inc
mov
imul
test
cli
jo
adc
daa
or
dec
dec
imul
sbb
stos
xchg
inc
fidivs
xor
out
fdivrs
dec
lret
pop
pusha
or
add
loop
data16
test
pop
add
cmpsl
adc
pusha
xchg
cli
repnz
fldl
ficomps
out
mov
sub
pop
or
iret
iret
stc
lds
cli
inc
jge
fsts
lret
xlat
idiv
das
lcall
lahf
in
inc
xchg
lret
mov
pop
mov
insl
mov
je
dec
ret
cmpsb
out
jns
imul
enter
pop
jmp
mov
xchg
das
pop
and
ror
loope
mov
pop
pop
push
shr
lock
sti
test
enterw
jne
repz
into
add
mov
xor
inc
dec
or
cltd
mov
popf
js
lods
test
inc
dec
jle
aas
popf
aas
xchg
lret
mov
mov
popa
cwtl
lahf
inc
enter
xor
loop
mov
cmpsb
loopne
cmp
in
adc
pop
pop
rolb
jp
repnz
or
xchg
jmp
hlt
shr
mov
je
sahf
mov
fcoml
dec
add
jmp
por
mov
frstor
test
jno
mov
repnz
push
sbb
in
xchg
mov
iret
in
jle
fs
std
js
out
adc
sti
inc
fcmovb
inc
insb
adc
adc
scas
add
mov
inc
jnp
in
in
add
jg
push
out
lret
push
mov
das
adc
outsl
add
xlat
fdivp
insl
loopne
and
insb
mov
icebp
lods
test
lcall
dec
jbe
pop
notb
sub
mov
cli
jo
nop
loopne
arpl
pop
scas
decl
mov
fdivr
movsl
arpl
hlt
adc
les
bound
in
and
lret
jno
jno
push
adc
fwait
stc
push
jno
lods
and
movsl
push
jge
jne
add
mov
es
sub
ss
pop
push
lock
adc
in
jmp
call
jmp
add
clc
push
ss
jo
movsl
mov
xor
dec
subl
mov
sbb
cli
mov
mov
mov
jb
arpl
fiaddl
lea
faddl
lods
scas
xchg
rorb
jecxz
sbb
xchg
out
arpl
xor
inc
push
lahf
jo
sub
mov
outsl
xor
stos
pop
sub
aaa
sarl
js
mov
mov
mov
mov
push
dec
stos
and
lds
fisttpll
gs
inc
int3
mov
out
aad
test
in
xchg
jno
hlt
inc
sub
or
pop
movl
mov
std
xor
mov
fstps
sbb
call
cmpsl
ficomps
add
mov
ljmp
adc
lea
loope
push
fcomps
push
xchg
lahf
adc
or
sbb
jbe
push
test
loope
fcomps
in
icebp
sti
outsb
push
lea
push
pop
int3
mov
lret
add
in
stc
sub
fsubp
std
addr16
call
sbbb
push
stos
mov
fwait
pop
fistps
xchg
push
fidivl
mov
leave
pusha
shll
jg
push
xor
cltd
mov
push
sub
das
lds
push
arpl
mov
bound
mov
iret
mov
addr16
push
dec
mov
cli
int
push
or
mov
daa
push
leave
cli
xchg
mov
mov
insl
cmp
mov
pusha
repnz
lods
es
incb
jo
xchg
fwait
xchg
pop
push
lcall
dec
xor
test
adc
insb
jp
mov
mov
dec
aam
aad
cmc
in
ffreep
mov
aam
in
dec
sbbl
jecxz
imull
jnp
add
mov
data16
addb
rolb
in
jno
out
and
xor
push
xlat
sub
in
lahf
insl
push
cmp
fcompl
addb
arpl
lahf
ret
and
mov
and
mov
jl
cmpsb
aam
push
pop
dec
jle
jb
sbb
repz
mov
adc
mov
andb
orb
xchg
cmc
mov
pop
ljmp
mov
mov
sub
sti
inc
int
shrb
leave
stos
inc
jb
jge
push
insb
imul
aam
sub
shrb
mov
and
in
out
add
fidivs
in
sbb
inc
fucom
jnp
std
shr
and
push
or
xor
cmp
out
in
push
cmpsb
xlat
shrb
test
nop
mov
or
mov
movb
or
jecxz
sbb
sbbb
andl
loopne
out
pop
mov
stos
ljmp
scas
mov
dec
divl
jmp
jno
leave
xor
clc
cs
pushf
int
inc
mov
lods
fdivl
pop
das
jg
push
enter
or
stc
jg
pop
outsb
bound
popf
std
push
scas
adcb
mov
jo
dec
orb
push
sbb
cmp
rolb
inc
sar
pop
add
push
and
loopne
fcompl
push
add
push
mov
or
bts
aaa
adc
sub
cld
call
pop
jg
xchg
inc
cmp
push
dec
int
test
je
adc
cmp
lcall
dec
and
dec
lock
add
inc
xlat
jne
addb
xchg
jo
hlt
lea
ss
popf
dec
xor
dec
push
pushf
xchg
sbb
js
xchg
push
popf
outsb
add
in
pop
push
push
roll
push
and
jp
jne
js
jnp
and
int3
call
stos
test
shll
call
xor
inc
push
ficomps
shll
nop
mov
aad
xor
jnp
scas
sub
test
scas
push
or
call
adc
and
add
cld
xchg
mov
jnp
adc
vaddps
sbb
or
sahf
shr
xchg
sbb
sbb
js
push
sub
add
mov
sbb
in
cmp
push
int3
call
or
test
stc
cmp
in
push
xor
sub
div
sub
shlb
adc
pushf
aaa
sub
sub
pushf
mov
jae
hlt
out
push
int
aas
cmp
cmpsl
or
push
lock
out
ret
dec
fsts
cli
and
stc
or
sbb
das
inc
out
cmp
das
data16
xor
cmp
fidivrs
popa
adc
adc
mov
cltd
sbb
test
fisubrl
ja
rcl
pop
not
or
cmc
pop
xchg
fisubs
pop
cltd
mov
je
test
popf
mov
fbstp
dec
inc
pop
les
add
inc
lods
push
mov
ret
cmc
sub
jne
jge
xor
cwtl
jne
mov
repz
imul
aas
mov
pop
aas
fidivs
xor
cmp
in
das
daa
lcall
pop
rorb
icebp
je
out
scas
icebp
enter
pop
or
inc
xor
sarb
mov
hlt
mov
add
movsb
daa
dec
sub
dec
pop
sub
inc
adcl
push
nop
xchg
ja
sbb
mov
mov
movsl
ret
and
dec
fstps
adc
mov
movsl
fisttps
adc
ret
dec
mov
int
ljmp
or
leave
and
pop
cmc
stc
mull
mull
ljmp
sbb
mov
sub
adc
ret
push
imul
in
mov
push
clc
mov
inc
int3
cs
insl
pop
mov
cwtl
push
push
lods
jg
push
dec
std
pop
pop
enter
or
push
clc
dec
adc
sbb
in
shll
or
adc
add
imul
jmp
mov
scas
inc
sub
mov
mov
rcrb
and
std
sub
popa
xchg
dec
fsts
fisubrs
jns
add
and
subb
mov
call
ror
mov
fwait
cmp
enter
pop
sti
or
hlt
rcl
xor
imul
and
jg
mov
cmpsl
xchg
testl
addr16
cmp
test
or
out
movsb
fdivrs
mov
push
adc
scas
not
in
add
dec
fwait
aas
outsb
data16
add
das
sbb
or
push
cli
cld
ljmp
pop
inc
ss
out
movsb
popa
xchg
push
out
dec
mov
js
xor
fcmovnb
sbb
aas
mov
lods
jns
fidivrs
push
mov
and
add
stos
out
rcrb
hlt
scas
sbb
or
pop
int
or
pushf
push
scas
pop
sbb
or
mov
call
cmp
scas
cwtl
out
cmp
and
sub
lods
jp
push
xchg
ss
cmpsl
xor
lret
cmp
xchg
ja
sbb
add
cs
xor
fldl
adc
push
inc
or
dec
sbb
inc
xor
dec
mov
cmp
pop
loope
inc
sahf
dec
inc
test
xorl
pushf
sub
push
enter
fstpl
int3
aas
in
test
add
jbe
loope
jmp
push
xchg
fsubrl
rep
sbbb
and
nop
in
xlat
mov
jb
stos
rcrb
data16
divl
sbb
or
lcall
mov
mov
xchg
cli
aad
movsl
pop
cmp
pop
divl
sti
cmp
add
and
movsl
inc
imul
dec
insl
lea
test
pop
test
or
mov
dec
divb
lods
sbb
adc
xchg
sbb
out
das
jnp
test
jno
xchg
lcall
outsb
je
mov
shll
fdivrs
bound
out
xlat
jno
jge
hlt
mov
sbb
jnp
mov
pop
fmul
mov
popf
pop
mov
cmp
ss
cmp
cmpxchg
dec
pop
scas
add
or
int
jae
lahf
daa
sub
lahf
mov
and
inc
lret
fiadds
xchg
lods
or
mov
or
outsb
xor
xor
inc
and
pop
add
mov
mov
jp
jne
xor
fldenv
stos
push
cmp
add
dec
divw
pop
and
mov
sub
push
inc
xor
mov
inc
movsl
pop
popf
dec
fwait
int
int3
dec
into
dec
xchg
jecxz
cmpsb
cmpsl
cltd
add
mov
xor
mov
inc
daa
or
fwait
and
cmp
aad
or
pop
shlb
mov
xchg
xchg
shrl
pusha
mov
mov
inc
push
mov
lods
and
icebp
adc
loope
xchg
dec
and
jl
dec
mov
fadd
clc
push
outsl
arpl
push
mov
mov
outsb
push
jle
lods
fidivs
fwait
popa
sbb
jecxz
cmp
inc
andb
jb
les
sub
aad
stos
nop
jbe
jb
mov
xchg
or
pop
sub
cli
xchg
mov
shl
jmp
and
mov
into
sti
out
sub
cmp
lahf
cmovne
cpuid
jbe
orb
mov
jmp
cmp
jbe
stos
push
inc
aas
and
push
arpl
and
xor
test
pop
cmc
mov
xchg
sbb
xchg
aaa
stos
push
imull
ss
je
aas
jbe
enter
popa
aaa
xchg
ss
in
pop
inc
inc
sbb
mov
aaa
cltd
inc
mov
xchg
add
inc
add
insb
fucomip
push
mov
mov
inc
push
xchg
popa
xchg
sbb
insl
stc
fildll
out
js
jecxz
mov
test
sub
cwtl
mov
fsubp
enter
js
sahf
fsubs
dec
xlat
lret
call
xchg
scas
test
mov
enter
mov
daa
ret
ud0
push
mov
test
outsb
jne
or
scas
fs
adc
mov
imul
repz
jo
xchg
push
cmc
fistpl
hlt
pop
mov
jge
inc
inc
and
scas
sub
cltd
in
or
sub
test
aaa
mov
lret
jl
mov
push
push
dec
adc
movl
pop
mov
xchg
pop
and
inc
lds
sub
aas
shl
divb
xlat
fldt
pushf
int
scas
mov
cmp
call
and
mov
mov
andl
test
xor
aad
outsb
cmp
adc
ss
incl
neg
dec
jb
dec
inc
sub
stos
jb
mov
popf
js
bound
repz
pop
jnp
jno
repnz
and
pop
loope
repnz
inc
jne
fwait
test
aas
in
jnp
call
imul
movl
outsl
push
insb
enter
adc
ret
mov
dec
fincstp
clc
pop
xchg
inc
rcl
mov
in
add
dec
divl
jne
enter
les
jp
sbb
arpl
aas
pop
mov
mov
cmp
incb
and
test
mov
imul
or
aaa
fsts
mov
aam
sbb
test
xchg
rcr
and
scas
dec
js
sbb
test
lcall
popa
shr
fists
cmp
push
mov
mov
cmpsb
sub
jno
dec
or
iret
ret
bound
hlt
test
adc
push
xor
xchg
sbb
mov
out
inc
sub
xlat
pop
pop
cmp
ss
push
mov
rorb
arpl
insb
mov
ja
iret
icebp
mov
shlb
cmp
xchg
bound
push
mov
cmp
mov
lods
inc
out
syscall
adc
test
xor
loop
fnstenv
adc
xchg
cmp
jl
shrl
nop
addr16
adc
lret
test
aaa
pop
add
sbb
inc
mov
addr16
sbb
lret
mov
sub
lahf
add
ljmp
ret
push
sbb
pop
rcl
lods
fwait
nop
add
lret
lods
lcall
jb
movsb
cmp
in
ret
ret
mov
cli
jns
cmp
push
pop
jge
arpl
outsb
cmp
push
xor
pusha
insb
test
mov
mov
jmp
das
inc
ss
lret
xchg
lcall
or
test
jae
pop
call
rcrb
xor
and
pop
xchg
das
mov
and
es
mov
and
or
pop
xor
adc
sub
adc
daa
test
int3
and
in
dec
adc
lret
or
outsl
aaa
mov
enter
sub
jle
add
lret
sbb
mov
out
lea
fucomi
add
dec
dec
ljmp
pop
dec
inc
jo
fwait
insb
jl
adc
or
sti
xchg
adc
jns
jae
cmpsl
cltd
fs
loope
push
mov
mov
pop
or
jbe
jb
das
mov
loopne
test
inc
mov
outsl
sub
loopne
mov
push
icebp
mov
xchg
enter
imul
mov
into
push
jecxz
imul
lods
push
loopne
popl
fidivl
dec
mov
inc
push
enter
pop
in
sti
ss
add
cld
mov
mov
dec
adc
mov
movsb
arpl
leave
cli
xchg
ljmp
loopne
cltd
sub
shll
insl
insl
hlt
andl
or
cs
mov
int3
fbstp
mov
scas
and
dec
loope
das
cmp
insb
ljmp
or
hlt
jns
jnp
jnp
lock
ds
xchg
jo
or
aaa
pop
mov
out
adc
test
cmp
push
sub
mov
or
jns
es
push
fistpll
out
shlb
loop
cwtl
xlat
repz
inc
aam
xchg
push
or
xlat
mov
imul
lds
xchg
bound
add
cmp
xor
out
sbb
test
jmp
and
out
cmpsl
jno
dec
inc
xchg
xchg
repz
cwtl
js
idivl
jae
test
sub
jge
hlt
fwait
sti
push
std
mov
call
outsb
jge
dec
repnz
or
sub
sbb
ss
cwtl
repnz
inc
movsl
mov
rorb
xchg
mov
adc
xchg
xor
fldcw
in
xor
pop
loopne
cltd
cmp
jge
addr16
idivl
mov
cmpsb
out
sub
mov
xchg
push
xchg
add
xor
jp
subl
sub
xor
dec
sub
xor
lret
nop
jne
mov
call
cmc
cmp
and
pushl
sahf
cmpb
and
hlt
sub
cmp
jne
out
push
es
sbb
adc
aam
stos
pop
rol
test
gs
in
sub
adc
xor
frstor
add
mov
pop
add
enter
dec
cltd
movsl
dec
add
dec
dec
ret
ret
pop
sbb
stos
outsb
cmp
ss
mov
cmp
cltd
dec
mov
pop
call
in
and
xlat
inc
cmp
lds
rorb
mov
into
out
out
jno
stos
movsl
std
xchg
jl
notl
loope
fwait
lahf
cltd
jle,pt
mov
jp
mov
scas
in
adcb
add
xor
int
dec
outsb
add
pusha
xor
push
sar
cmc
push
les
inc
outsb
pop
xchg
dec
xchg
and
loope
or
jmp
in
movsl
pop
andl
rorl
mov
cwtl
and
lea
call
pop
outsl
jle
mov
adc
mov
mov
rcl
in
mov
aaa
cmpsb
int3
pop
mov
xchg
xchg
sti
movsl
xchg
packsswb
cli
sub
ds
mov
idivl
dec
repz
or
add
cltd
shll
mov
cld
add
jle
movsl
clc
aaa
and
xor
test
xchg
inc
lock
mov
and
stos
arpl
data16
ja
hlt
dec
subl
pop
sbb
mov
fnstcw
xchg
and
dec
pop
adc
mov
jno
xchg
adc
jle
mov
cld
or
fildl
ret
leave
test
aam
or
mov
mov
in
mov
jno
icebp
lret
and
hlt
out
or
aaa
test
cltd
sti
hlt
adc
jg
lods
mov
out
jo
dec
sbb
fildll
ja
sahf
jmp
mov
inc
or
xor
cmp
cmc
adc
std
insb
mov
mov
push
mov
sbb
mov
arpl
inc
int3
test
cs
push
xor
movsb
lret
arpl
je
shll
xchg
inc
out
sti
and
pop
fwait
xchg
divb
data16
or
ljmp
and
imul
mov
arpl
push
adc
cmpsb
sub
mov
cmc
les
pop
insl
mov
bound
pop
loopne
push
mov
loop,pn
dec
cmp
hlt
aam
jbe
shll
add
adc
push
std
lods
sahf
push
mov
or
jbe
fisttps
and
popf
and
fiaddl
sarb
jb
mov
sub
fs
aaa
cld
or
ljmp
jo
pop
hlt
adc
loop
fmul
lcall
add
int
cli
mov
fldl
mov
insb
xchg
mulb
daa
aaa
rorl
ror
push
ret
push
js
iret
adc
cmp
pop
pop
lret
movsl
adc
in
mov
mov
inc
mov
dec
mov
mov
out
or
andl
push
bound
mov
loope
mov
cli
mov
mov
dec
mov
mov
fisubrs
call
mov
adc
lret
das
js
mov
xchg
repnz
ss
pop
mov
and
xchg
pusha
in
stc
mov
push
lea
leave
cmc
push
or
imulb
or
xor
loope
leave
cmpsb
scas
scas
adc
test
repz
mov
mov
cmpsb
push
sar
lcall
ds
imul
cs
imul
cwtl
jp
dec
sbb
imulb
or
push
imul
pop
jb
bswap
jno
jmp
scas
sub
clc
in
mov
fs
push
jge
aad
fdivrs
inc
sub
mov
mov
popa
fcmovbe
push
cmp
addr16
push
jbe
aaa
mov
cmp
cs
clc
orb
jp
outsb
mov
inc
pop
jg
xchg
lcall
ja
mov
mov
mov
popf
das
pop
scas
scas
rorb
out
cld
xchg
mov
mov
dec
ret
xor
xor
outsl
ss
adc
and
sub
mov
bound
push
jne
test
lcall
stos
push
rol
jo
cltd
jmp
jmp
roll
pop
ss
adc
and
shl
sbb
push
repnz
call
lret
loopne
stc
scas
add
add
mov
mov
add
sub
mov
mov
stos
cmp
adc
outsl
adc
sbb
add
popa
aaa
hlt
xor
and
bound
lcall
xlat
cmpb
repnz
fnstcw
hlt
dec
dec
inc
sbb
pop
fmull
sti
iret
and
xchg
xchg
testl
je
fimull
adc
xor
stos
mov
inc
adc
andnps
imul
mov
popa
mov
mov
dec
cltd
sub
cwtl
jmp
push
push
cmp
jle
adc
add
gs
mov
sbb
cli
rcrb
mov
pusha
in
gs
adc
stos
dec
std
imul
jg
cld
ja
mov
inc
add
aaa
inc
gs
je
sub
adc
adc
loope
add
insb
mov
cld
leave
xor
xchg
cli
fnstcw
inc
outsb
jo
ret
pop
ljmp
in
popl
mov
addr16
test
cmpsb
xor
jbe
inc
sbb
jne
sbb
cwtl
iret
mov
lods
idivb
fnsave
xchg
xor
and
bound
push
orb
mov
inc
or
inc
inc
sub
pushf
and
mov
add
adc
xor
inc
cld
and
sbb
and
sti
std
cltd
jbe
jnp
jo
cmp
xchg
and
movsb
std
lds
iret
loopne
jge
out
jle
dec
mov
in
push
fcomip
mov
sarl
call
imul
mov
or
or
dec
fiaddl
lret
pop
push
ret
mov
test
sti
orb
out
loopw
sahf
dec
int
ret
mov
xor
lret
add
and
sbb
sub
cmp
inc
sbb
mov
in
add
andb
inc
mov
xchg
lret
movsl
pop
sbb
mov
shrd
pop
orb
pop
push
rorb
cmc
ja
iret
fcompl
mov
add
cmp
mov
adc
sub
out
aaa
dec
and
sub
push
nop
and
or
ja
inc
push
test
stos
xchg
hlt
add
repnz
mov
and
push
mov
dec
xor
outsb
pop
rorl
cmp
pop
adc
push
pop
xchg
cmp
clc
cmp
dec
push
outsl
loop
arpl
or
jae
aaa
sahf
push
nop
loope
xchg
fisttps
rcl
dec
repz
in
lds
nop
je
xchg
sub
in
add
xchg
scas
test
mov
push
cmp
movsb
sbb
push
push
pop
sub
nop
lds
xor
jmp
push
or
xchg
addr16
cwtl
push
mov
cmc
inc
or
push
or
insb
dec
jb
cld
enter
rorb
jl
and
mov
outsb
jbe
jmp
pop
xlat
xchg
int
dec
mov
and
mov
lahf
inc
clc
in
sbb
sub
fwait
push
push
lea
and
cld
sub
mov
mov
push
xchg
pop
xchg
cmp
adc
mov
adc
jg
daa
xlat
cmp
loope
aaa
arpl
fldlg2
dec
roll
add
mov
fnstenv
in
out
outsl
push
push
movsl
push
mov
jge
sbb
sbb
lcall
lock
popf
jne
mov
pusha
mov
loop
outsb
repnz
test
push
sahf
push
dec
test
add
dec
fidivrs
ret
je
pusha
mov
sti
ror
out
outsb
mov
pop
lods
dec
not
shl
mov
icebp
push
clc
ds
mov
add
je
inc
stos
mov
xchg
jne
call
xor
bound
mov
int
xchg
sti
jnp
lods
adc
pop
jnp
stos
mov
cld
and
icebp
or
jp
ficomps
mov
testl
pop
daa
dec
cmpsl
pop
insl
test
pop
shll
mov
les
pop
lds
xor
inc
clc
iret
int
xor
pop
stc
jo
sbb
push
aam
dec
pop
outsb
sbb
out
movsl
stos
mov
pop
js
sbb
xchg
lret
pop
stos
mov
push
movsl
mov
cmp
cmp
clc
mov
mov
lahf
dec
int
outsb
movsl
add
out
sbb
sub
jecxz
ror
ret
add
repz
mov
cmpxchg
aam
xchg
pop
ret
or
ss
js
aas
fidivrl
jo
jbe
fcmovnu
iret
in
bound
lock
sbb
gs
test
repnz
inc
jle
call
inc
dec
aam
jnp
jl
add
push
cmc
add
mov
enter
hlt
in
pushf
in
push
xchg
cld
fisubrl
dec
xchg
cltd
mov
xlat
popf
in
and
sbb
cld
and
pushf
lahf
icebp
push
sbb
fwait
xchg
inc
pop
mov
cli
idiv
test
imul
loope
add
jns
cmpsb
lahf
mov
sub
std
lret
dec
sbb
xor
cmpsl
mov
mov
je
inc
jl
mov
mov
xchg
cmovp
int3
xor
and
repz
and
int
sub
das
pop
vpsubusw
sbb
mulb
ds
and
xchg
push
jmp
ja
in
push
nop
add
sbb
lods
pop
sbb
dec
cmp
loopne
lret
cmpsb
test
jne
out
lret
pop
dec
movsl
sbb
cmp
xor
sub
push
adc
push
inc
and
mov
adc
add
int
bound
inc
fwait
insl
mov
cld
dec
jns
sub
sti
jmp
xchg
movsb
test
push
mov
in
push
insb
xor
aad
in
cli
cwtl
ds
dec
jnp
xchg
inc
mov
bound
jg
int
es
mov
add
xchg
jnp
outsb
lcall
sbb
mov
ror
lock
loopne
push
push
adc
mov
inc
pop
mov
hlt
mov
jl
popf
xor
fcmove
mov
out
sti
adc
loope
mov
clc
add
mov
or
jle
ret
and
lret
cwtl
dec
rcl
adc
add
pop
mov
xor
sahf
andb
push
test
pop
sti
shlb
mov
push
mov
sub
mov
and
add
popa
aad
subl
or
popa
push
imul
ljmp
ljmp
enter
iret
cld
mov
stc
sub
sub
sbb
add
mov
pop
shr
mov
add
out
xchg
daa
cmc
and
call
lods
cmp
out
sub
jb
inc
inc
pop
mov
add
daa
arpl
scas
orb
inc
mov
push
stos
xor
or
in
xchg
or
mov
or
enter
hlt
mov
mov
jo
scas
mov
pushf
lods
in
pop
jne
mov
movsl
cmp
and
push
mov
inc
dec
and
xor
cmp
xorb
ja
out
shrl
jg
cmp
inc
enter
xor
mov
jno
dec
adc
push
loope
mul
mov
xchg
popf
repz
neg
ficompl
cmp
push
and
lret
xchg
pop
sbb
adc
data16
adc
test
movups
lret
adc
in
pop
loope
bound
subl
sbb
idivl
inc
outsl
rclb
mov
sbb
mov
testl
sbb
call
testb
sub
hlt
jge
mov
or
pop
add
ja
bound
jl
in
jns
fdivrs
ja
mov
hlt
push
inc
sub
sbb
inc
pop
fdivs
stos
mov
inc
adc
movsb
pop
xor
mov
pop
dec
add
clc
jl
jmp
imul
outsb
lea
mov
and
push
push
xchg
cmp
jl
add
out
into
fs
cmp
loopne
lods
sub
in
dec
imul
fsub
pop
sbb
int3
push
mov
dec
xchg
out
sti
cmp
cwtl
arpl
xor
sub
ret
imul
mov
int3
je
call
inc
mov
lds
lods
dec
mov
pop
lcall
mov
xchg
aaa
das
xchg
loope
sbb
add
test
out
pop
lret
sbb
rclb
sbb
out
inc
mov
and
cs
fstpl
std
inc
icebp
mov
pop
shrl
xchg
sbb
pop
out
xchg
ret
scas
jno
and
data16
dec
jbe
cmp
nop
les
pop
les
out
lret
push
std
mov
int3
push
sti
stc
loope,pt
loopne
push
cld
nop
cltd
cmp
je
int
and
cmp
mov
mov
cmpsl
or
mov
ja
mov
movsl
cltd
ja
dec
xchg
jl
es
mov
jne
xchg
adc
or
testb
pop
mov
and
xlat
pop
ljmp
int
jae
xchg
lods
pusha
push
jns
sbb
xor
mov
shll
je
jno
into
xor
stos
ret
xchg
jmp
mov
std
je
mov
pop
lods
lds
xor
push
xor
pop
fstp
sbb
arpl
jp
lret
xor
add
xchg
or
jmp
in
loope
fstpt
pop
lods
lret
push
dec
gs
sbb
and
test
mov
adcl
or
adc
cmp
xorl
xor
add
inc
iret
lock
int
mov
dec
xchg
mov
dec
mov
jp
cmpsb
adc
cmp
jecxz
xlat
xchg
jmp
je
and
jg
data16
repz
mov
cmpsl
sar
outsl
dec
push
loopne
push
shrl
shrl
dec
and
mov
or
sbb
jne
xlat
ficomps
cmp
dec
inc
js
aad
jae
cmp
data16
popf
sub
sar
pop
mov
add
jg
push
xor
out
push
cmp
pusha
mov
dec
cmp
mov
mov
add
popa
fistps
cmc
sub
aaa
cmp
fdivl
ret
scas
adc
xor
test
jl
lret
das
xor
and
loop
or
and
enter
sarl
repnz
xor
pop
shrl
mov
pop
ss
and
lcall
in
sti
dec
sti
cmp
mov
mov
and
cmpsb
mov
rorb
andl
and
pop
aas
and
lock
mov
std
adcl
sarl
cs
mov
jo
xor
in
or
call
fdivs
inc
cmpsl
xor
mov
pop
mov
icebp
add
pop
adc
stc
push
dec
or
daa
pop
dec
pop
jge
push
sub
sahf
cmp
cmp
sub
adc
iret
mov
cmp
into
adc
lds
cs
cmp
jl
pop
and
bound
sbb
adc
clc
je
adc
pop
loope
inc
dec
je
inc
jg
pop
inc
je
cmp
insb
sub
insl
outsl
shll
jl
pop
outsl
pop
sbb
mov
jnp
adc
test
js
xor
daa
sbb
movsl
fdivr
inc
out
int3
pop
cwtl
mov
sub
repnz
push
xchg
push
sbb
push
mov
pop
mov
cs
jp
dec
negl
ljmp
lcall
mov
ficoml
and
shll
mov
adc
mull
sar
loope
push
out
mov
push
and
xchg
cs
stos
stos
inc
push
sub
push
arpl
sbb
cmp
lods
outsl
hlt
dec
test
mov
push
pop
xchg
popa
xor
dec
dec
pop
mov
fs
movsl
mov
insb
jo
sub
xor
xor
dec
xchg
jmp
inc
push
icebp
pop
pop
sti
frstor
xchg
inc
je
jmp
outsb
cld
mov
cmp
enter
rolb
mov
pushf
pop
out
mov
cmpsl
and
push
mov
shll
mov
pop
pushf
lcall
pop
cmp
aam
loopne,pn
jmp
sub
das
scas
into
jns
subl
jg
push
enter
dec
subl
mov
icebp
inc
jecxz
cmp
fstpl
insl
lcall
adc
pushf
filds
sbb
inc
dec
clc
cwtl
popf
lret
inc
int
test
fcomi
xchg
sbb
add
fnsave
mov
cmpsl
push
enter
ret
add
mov
and
adc
imul
iret
xchg
int
jno
and
fdivp
adc
and
push
fdivp
pop
les
jle
icebp
jno
fwait
cmp
xchg
out
jnp
ret
xor
stos
xchg
jmp
jno
out
mov
mov
into
cmpsl
ja
add
mov
push
sub
jp
scas
mov
repnz
sub
adc
push
cmp
mov
mov
sub
xor
adc
sbb
sbb
xor
shll
pop
jp
sbb
dec
std
std
dec
push
fisttps
les
xor
xchg
out
je
sbb
mov
jp
bnd
test
cltd
xchg
cmp
call
ljmp
loope
imul
or
push
lods
sub
or
add
adc
mov
cwtl
or
enter
pop
loop
outsl
loopne
add
test
sub
xchg
xor
sub
mov
insl
push
mov
fldcw
jno
fisubrs
pop
scas
call
addr16
pop
pop
andl
dec
daa
cmc
lds
cmp
mov
adc
adc
adc
mov
xlat
adc
gs
push
xor
cmpsl
pop
pop
inc
jmp
testb
and
mov
push
add
lcall
jle
or
shll
adc
pop
daa
lock
mov
xor
bound
jbe
pop
jnp
inc
lea
lret
out
inc
iret
xor
loop
xchg
stos
cld
dec
or
adc
sbb
xchg
add
loopne
loopne
shlb
aas
xor
in
cmpsb
ficomps
loopne
xor
xchg
sub
inc
and
loop
mov
or
add
mov
leave
mov
sbb
sbb
xchg
dec
sub
daa
pop
pop
ret
mov
std
sub
bnd
sub
jecxz
jge
lret
mov
mov
jnp
and
jbe
insl
mov
mov
cmpsl
int3
faddl
adc
ret
les
std
cwtl
push
out
pop
sbb
pop
aad
insb
aas
out
rcll
int3
dec
pop
adc
sub
xor
mov
adc
push
pop
mov
or
sbb
test
or
ja
ret
cmp
or
sub
aaa
ja
jle
push
addr16
jl
std
mov
lret
xor
or
push
stos
pop
scas
lea
aad
sbb
and
cmpsl
fisubl
jmp
insb
cmp
dec
stos
fimull
rcr
cwtl
add
mov
pop
inc
movd
shlb
cmp
fbld
mov
imul
jmp
cmpsb
cmp
and
pop
lret
shll
stos
or
or
lods
repnz
rcrl
pop
int
dec
and
xor
inc
test
sarb
xchg
dec
repz
sar
sbb
adc
fldcw
outsb
pop
aad
sbb
int
adcl
push
iret
inc
cmp
cmpsl
iret
imul
pusha
adc
das
in
dec
adc
and
fdivr
xor
aad
dec
pop
into
mov
mov
push
es
mov
mov
psraw
lock
cld
je
psubusb
push
sbb
stos
shl
add
mov
or
xchg
add
or
push
xlat
push
mov
std
insl
test
hlt
cmpb
lret
and
std
and
pop
mov
std
sub
dec
rorb
xchg
ss
dec
mov
cmp
inc
sti
pusha
or
lods
mov
or
cs
adc
xor
xor
and
xchg
test
adc
scas
in
insl
les
or
movsl
stos
sub
xor
mov
mov
test
push
decb
addr16
fxch
add
push
xchg
mov
adc
or
out
inc
mov
sbb
adc
mov
imul
adc
loop
xchg
std
inc
in
addr16
stc
lahf
sub
enter
jge
xchg
xor
inc
je
out
add
cwtl
je
outsb
sub
xchg
scas
mov
adc
sbb
les
pop
mov
xchg
mov
cmp
jae
popf
loope
ret
jbe
sbb
adc
add
repz
adc
fistpl
inc
je
mov
xor
xchg
in
inc
jge
jno
xor
mov
add
xchg
pop
add
cs
aas
dec
les
sbb
ret
mov
mov
pop
adc
sbb
inc
mov
sub
or
jge
adc
xchg
sbb
dec
xlat
lods
imul
mov
jp
and
sub
mov
adc
mov
sub
inc
in
mov
xchg
inc
cmpsl
jb
push
inc
adc
popf
pusha
imul
cli
pop
mov
out
imul
dec
in
xor
push
inc
mov
movsb
mov
adc
popa
pop
jns
in
mov
arpl
jb
in
jl
push
and
fstpl
ret
rol
mov
pop
push
call
enter
pop
and
mov
cltd
cld
mov
add
repz
cmp
ret
mov
ror
les
int
ret
dec
ljmp
inc
add
xchg
sbb
push
jle
popa
mov
adc
out
adc
je
dec
lret
mov
jl
je
push
daa
cmp
mov
pop
cmp
sbb
outsl
mov
loop
jl
addl
cmp
insl
add
and
stos
cltd
xchg
aaa
rcll
sbb
adc
mov
mov
lods
je
ss
das
lods
cmp
daa
test
jb
push
sbb
jb
sub
into
xchg
pushf
xor
test
lret
fbstp
lcall
cmp
push
mov
xor
push
mov
mov
mov
dec
xorl
stos
mov
lcall
rcr
test
or
and
xchg
dec
push
or
imul
dec
pop
shrb
xlat
xor
or
fbld
adc
cmp
outsb
or
sub
sub
add
pop
jg
cltd
push
shrl
cld
xchg
mov
sti
sub
and
sbb
call
xchg
test
cs
lds
jecxz
add
pop
pop
ret
test
and
popa
sbb
xchg
xor
and
pop
insb
in
cmp
fidivrl
sbb
mov
xor
dec
aad
jge
andl
sub
xor
xchg
xor
add
pop
inc
sub
mov
ja
and
in
fmulp
jne
xchg
pushf
jecxz
cltd
add
mov
xlat
sahf
sub
es
add
jl
test
fwait
cmc
andb
or
cmc
or
js
jbe
xchg
add
popf
mov
dec
stos
mov
movsb
cmp
inc
popf
dec
sbb
add
pop
sbb
jne
jns
shlb
dec
xchg
add
xor
hlt
mov
aad
cmp
or
cwtl
sbb
lds
std
cmp
or
sub
push
ret
sbb
mov
adc
in
pop
push
push
mov
cmp
stos
push
insl
mov
jmp
pop
dec
adc
add
adc
jge
paddsw
cmp
mov
sahf
pop
mov
movsl
repz
sbb
inc
jmp
dec
in
mov
push
cmp
cmc
mov
mov
pop
fisubs
jns
out
pop
sub
sbb
mov
add
test
stos
outsb
test
push
sub
jo
lcall
xchg
or
xor
shlb
mov
xchg
pop
add
cmpl
mov
cmc
mov
adc
adc
mov
arpl
cs
dec
or
add
aas
mov
mov
cmc
movsl
sbb
sub
adc
repnz
mov
pop
inc
ret
ja
fs
mov
outsb
or
pushf
and
sbb
shrb
ljmp
push
int
pushl
sub
lcall
enter
xchg
arpl
fisttpll
nop
lea
jnp
fwait
pusha
lea
or
add
mov
lret
cltd
pop
ss
daa
sbb
insb
pop
test
sbb
negl
popl
xchg
pop
out
in
add
mov
mov
push
ds
movsb
dec
jae
dec
sub
psubb
ljmp
pushf
imul
lods
dec
mov
push
add
aad
jnp
adc
pushf
repnz
enter
mov
adc
add
repnz
clts
les
pop
repz
xchg
push
dec
fbld
int3
in
jns
cli
scas
out
sbb
push
frndint
gs
andb
inc
inc
xlat
stos
pop
mov
xor
adc
jb
ljmp
ljmp
loopne
test
xor
hlt
jmp
dec
mov
xchg
outsb
clc
jno
mov
leave
pop
icebp
popa
xchg
add
dec
pop
fmuls
push
and
dec
pop
movsl
and
jmp
inc
adc
mov
int3
cmp
fnstsw
push
mov
add
mov
push
push
lea
jge
je
or
push
mov
adc
test
sti
xchg
lcall
xchg
ret
inc
push
and
dec
or
jp
xchg
dec
adc
leave
clc
push
iret
clc
repz
fs
jmp
mov
ficomps
negb
dec
jnp
cmp
mov
xor
mov
sub
or
imul
mov
mov
test
mov
sbb
je
jnp
xchg
rol
jbe
repnz
mov
pushf
dec
or
loop,pt
shr
jge
mov
mov
sbb
push
test
daa
jno
hlt
or
daa
mov
inc
or
int
js
fnsave
xchg
push
pushf
daa
jmp
scas
pop
shlb
push
pushf
shrl
and
or
mov
test
cwtl
xor
pop
mov
mul
data16
and
pushf
je
or
nop
xlat
xchg
push
mov
dec
and
mov
andl
jne
loope
pop
cs
pop
push
xor
fs
adcb
cli
xchg
lret
push
bnd
push
add
add
push
mov
sbb
xchg
or
push
xor
daa
addr16
fptan
pusha
std
int
or
pop
mov
jecxz
aas
cmpb
ljmp
xor
fldt
add
shrb
push
jge
mov
fadd
insl
mov
lods
fwait
repnz
add
mov
add
fmul
mov
xchg
arpl
in
push
in
jge
jnp
das
sub
test
or
filds
mov
inc
iret
rcll
int
cmovs
or
sbb
fs
cmpsl
xchg
lock
dec
idiv
jns
das
pop
loope
ret
push
ja
popf
loope
es
fs
std
aaa
xchg
inc
jb
lea
cli
or
or
scas
pop
xor
xchg
div
movsb
sub
pop
aam
iret
sub
or
cmp
aad
movsb
loope
mov
call
sub
push
rcll
lret
xchg
imul
pop
out
pop
dec
call
push
adc
mov
sahf
pop
xor
icebp
ret
idivb
add
jecxz
filds
fildl
xor
sbb
ja
push
test
fmull
stos
mov
sbb
dec
lods
jmp
or
add
and
rolb
push
lret
pop
movsb
fsubl
aad
push
imul
mov
lods
ss
push
jmp
fwait
hlt
cmpsl
or
cmp
adc
pop
popa
shrl
pop
mov
fdivr
xor
leave
adc
or
jns
std
mov
fmul
andl
mov
mov
rolb
pop
dec
pushf
decb
jo
mov
inc
push
movsb
or
scas
push
idivb
jnp
je
dec
shr
cld
add
aaa
dec
mov
andb
pop
push
push
lret
cmp
scas
xchg
lret
mov
daa
push
inc
lcall
fimuls
movsl
pop
pusha
aad
push
cmp
ljmp
pop
push
sbb
aad
push
jnp
into
inc
or
lock
xor
mov
add
mov
push
lea
popf
int3
sub
mov
aad
rcrl
xor
out
lea
std
mov
or
outsl
push
ljmp
sahf
nop
xor
xchg
mov
out
invd
pop
scas
stos
sti
test
ja
ror
push
add
test
jg
xchg
fs
andl
stos
in
clc
inc
mov
cmpsl
sub
mov
ds
aas
xor
and
jmp
sub
mov
xchg
daa
pusha
enter
mov
jbe
lcall
imul
test
or
cmp
jp
mov
mov
add
and
sub
sub
ja
aaa
test
cwtl
xchg
adc
jmp
pop
lcall
pop
jns
xchg
push
rolb
jp
xchg
bound
xor
or
dec
movsb
xchg
mov
pushf
cmpsl
lods
pop
pop
or
jecxz
insl
xchg
in
shll
in
jno
mov
arpl
int3
shlb
outsb
int
mov
xor
pop
cli
divl
cwtl
iret
xor
cld
sbb
in
sub
imul
add
call
hlt
fsubl
cld
test
rclb
dec
idivb
sub
stos
xor
dec
xor
test
test
push
mov
sub
sbb
stc
into
or
lods
movsb
adc
mov
mov
jo
mov
rcll
pop
jns
mov
mov
je
pushf
xchg
lea
push
xchg
mov
xchg
push
push
pop
add
inc
mov
test
mov
call
dec
cmc
div
loop
leave
testl
movsb
jno
cli
cmc
test
jns
test
jp
mov
rdtsc
push
mov
xchg
cmc
mov
in
cmp
repnz
xor
mov
popa
inc
int3
xor
fsincos
jmp
xorl
dec
les
fisttps
cli
pusha
mov
sbb
es
jo
or
inc
mov
mov
or
push
inc
pop
pop
xchg
loop
sbb
cmp
rcrl
shrb
es
xchg
cld
jmp
aam
push
cli
mov
jbe
jecxz
loopne
xor
mov
sbb
push
hlt
pop
jmp
fdivr
pushf
add
jae
rorb
cmpsl
add
lock
jbe
subps
rclb
add
push
adc
xor
ret
stos
and
xor
cmc
fidivl
cmpl
lods
in
inc
ljmp
test
int
sbb
ja
rorl
cmp
jmp
xchg
mov
push
cmpsl
loope
xchg
adc
aaa
mov
mov
add
fsts
jne
pushf
cmp
loop
jns
aas
ret
ret
jmp
mov
dec
jmp
arpl
pop
lret
ret
mov
add
data16
lret
adc
push
subb
add
push
dec
jae
push
sbb
inc
flds
lcall
pop
into
das
mov
call
xorb
cmp
ud1
push
call
jb
and
or
bound
test
and
and
mov
jecxz
or
jecxz
xor
adc
push
fsts
mov
add
jno
xor
mov
push
hlt
pop
fcmovne
mov
push
mov
jne
inc
mov
das
xor
scas
mov
mov
mov
insb
inc
cmp
jno
dec
lret
and
cwtl
bound
dec
adc
rcrb
movb
scas
mov
fwait
xchg
aam
call
sub
subb
ja
cli
xor
add
sbb
sub
insl
jns
pusha
pop
dec
cmp
lods
not
sub
fs
cmpsb
cmp
repnz
fidivrl
xor
cli
sub
ficompl
rol
mov
loope
js
dec
stos
mov
push
dec
sub
nop
cmpsb
ret
mov
dec
add
mov
ror
addr16
push
mov
and
mov
cs
jl
jmp
fmuls
push
mov
adc
das
adc
andl
loopne
scas
ret
insl
cmp
js
pop
lods
inc
dec
xchg
in
and
scas
push
cmp
imul
jne
mov
enter
nop
sahf
adc
fcomip
xor
xchg
and
adc
pop
nop
or
add
mov
test
aam
mov
inc
xchg
pop
add
mov
push
pop
ret
repz
push
push
sub
mov
int
iret
in
shll
scas
loopne
cmp
aaa
out
inc
addr16
test
out
xchg
adc
test
adc
mov
rclb
fisubrs
jmp
repz
stos
or
out
inc
mov
and
push
dec
jl
fwait
dec
push
bnd
mov
dec
mov
mov
xchg
add
mov
cmp
push
das
cmp
ljmp
xchg
push
lea
fildll
pop
sub
cmp
pop
loopne
mov
dec
fisubrs
stos
dec
jae
or
jne
pop
stc
adc
add
rcrb
pop
xor
push
js
push
pop
insb
xchg
and
shr
jno
frstor
add
xlat
leave
jp
jge
ds
add
outsb
mov
out
add
push
pop
push
push
pusha
iret
movl
lods
sub
pop
add
int3
stos
addr16
push
mov
insl
fnsave
push
fwait
jmp
ret
adc
and
add
or
or
jle
pop
jno
add
scas
rolb
sbb
or
adc
xchg
pop
cmpsb
shlb
mov
mov
dec
sti
add
sub
jl
iret
mov
sbb
jae
sbb
push
pop
jnp
push
sbb
pop
out
sbb
and
cs
outsb
fists
lret
pop
xchg
mov
test
mov
movsl
test
sub
cs
das
daa
and
inc
lahf
aad
int
in
aad
or
lea
pop
cltd
jae
mov
jmp
test
sbb
pop
stos
and
leave
mov
or
dec
xor
dec
mov
push
jb
icebp
push
hlt
sub
out
shlb
jbe
jae
lahf
push
mov
jns
jg
mov
pop
dec
or
in
popf
fucomi
sbb
into
jle
popf
jns
dec
test
push
jnp
lds
xchg
cld
js
ja
jae
emms
adc
loopne
pusha
sub
imul
je
out
loopne
stos
lahf
mov
data16
stos
insb
out
in
pop
jg
movsl
jo
lret
dec
dec
pop
arpl
lock
je
ja
ja
xor
fstps
in
fcoms
add
xlat
nop
nop
sub
popa
xor
mov
test
mov
movsl
fidivrs
sbb
popa
shlb
daa
and
and
xchg
lcall
adc
fdivs
jge
out
lods
pop
mov
xor
test
inc
inc
inc
push
mov
or
cmp
popa
push
adc
pop
inc
sahf
fwait
adc
push
enter
cmp
xchg
sbb
lods
loop
icebp
jno
lock
dec
push
mov
hlt
mov
adc
push
cld
nop
add
test
sbb
test
rol
stos
push
jnp
pusha
xchg
inc
jae
and
jb
mov
test
and
mov
push
aaa
add
dec
dec
icebp
cmp
mov
aad
daa
cmp
aam
or
in
ret
mov
or
std
mov
jl
sub
xchg
aaa
into
pushf
pop
sbb
and
pop
jmp
mov
push
pop
out
sahf
cwtl
xchg
inc
or
out
lds
gs
sub
arpl
lea
mov
rclb
fwait
pop
xbegin
fcompl
pop
push
out
push
xchg
push
pop
imul
cmpsl
inc
inc
call
add
cmp
xor
jae
ds
mov
push
mov
dec
ljmp
sub
mov
xor
test
xor
dec
jae
push
add
pop
hlt
movsl
mov
cwtl
add
lret
and
sti
hlt
std
add
popa
lret
pop
mov
pop
aad
sbb
test
fs
push
sbb
loopne
mov
add
out
sub
sahf
add
lds
mov
rorl
loop
testl
sbb
lods
mov
and
jae
dec
test
jno
xchg
cwtl
mov
fwait
or
mov
sti
mov
popf
clc
jp
fcmovne
add
and
lods
jmp
shrl
inc
popa
add
adc
aad
sti
or
cmpl
pop
add
add
out
dec
cmp
ds
outsl
clc
mov
mov
lahf
push
xor
rcll
xor
int
js
rcrl
push
sub
cmp
adc
fldenv
mov
and
movsl
xor
or
push
and
dec
test
scas
ljmp
mov
add
xor
daa
std
lret
add
cmp
and
xchg
and
jae
mov
inc
mov
lock
xchg
jmp
jnp
cmp
sbb
add
call
sbbl
add
jl
loop
mov
scas
fwait
insb
jg
fldl
movd
pop
sub
xchg
popf
mov
shlb
stc
push
adc
insb
daa
push
and
jnp
mov
inc
sbb
inc
xor
cmp
lods
mov
push
rcr
pop
sbb
mov
mov
daa
aad
test
imul
bound
cmp
jae
mov
fcom
lds
mov
xchg
pop
fisubl
mov
std
mov
test
pop
mov
lahf
sub
mov
mov
sahf
repnz
nop
jb
xchg
out
movsl
insb
clc
and
push
mov
xor
pop
ljmp
jp
push
movsb
testb
inc
adc
aad
mov
fisttpll
shll
movsb
imul
dec
or
adc
cmc
das
fwait
in
sbb
jmp
insb
sbb
xchg
repnz
call
shl
mov
cmpsl
xchg
add
xor
inc
mov
clc
dec
pop
push
cli
pop
dec
icebp
fwait
xchg
add
xlat
test
fnstcw
add
call
push
pop
sub
pop
fdivs
cmp
subl
xchg
xchg
ss
outsl
xchg
push
add
pop
push
mov
push
loopne
xchg
repnz
push
xor
xor
ds
xor
jl
jge
lret
push
cmp
mov
inc
in
xchg
jno
jg
daa
int
or
adc
jge
movsl
pop
hlt
inc
add
add
dec
sbb
jo
and
jne
jno
lea
push
outsl
xchg
add
lret
pop
mov
mov
inc
fisttpll
pushf
cmp
adc
sahf
sub
cmp
outsl
loope
xchg
nop
loopne
shll
pop
adcl
pop
mov
sbb
jmp
sahf
mov
pop
push
and
inc
mov
mov
fldenv
scas
scas
sub
jo
inc
outsl
push
xor
int3
aaa
in
and
cmp
out
ss
add
insb
lcall
cmp
sbb
pop
pop
dec
neg
shlb
adc
xor
sub
xor
testb
adc
and
jns
cmpl
call
adc
pop
loope
adc
pop
popa
insl
cmp
jg
pop
jg
in
sub
push
jg
dec
lret
aaa
cltd
pusha
xchg
arpl
shl
stos
mov
mov
inc
xorl
sbb
daa
fstl
jns
repz
cmpsl
stc
pop
cmp
mov
mov
dec
adc
sub
dec
lret
jecxz
pop
mov
pop
scas
popa
fnsave
insl
sub
jno
lods
jge
sbb
mov
dec
jg
xchg
mov
std
aad
mov
rcll
cmc
addl
xorb
adc
cmp
imul
test
imul
loop
fcoms
mov
nop
and
ss
insb
inc
inc
iret
dec
in
aad
out
xor
cmp
adc
add
sti
dec
stos
adc
lret
or
icebp
and
fisttpl
xchg
cmc
pushf
inc
and
cltd
adc
mov
enter
dec
mov
inc
sub
je
mov
inc
inc
sbb
pop
push
das
xorb
mov
mov
out
pop
mov
call
or
or
out
push
sbb
mov
mov
loope
push
test
ljmp
mov
adcb
inc
xor
fcoml
test
inc
stos
out
jae
jo
aam
in
stos
ljmp
sbb
int
scas
rorl
loope
mov
push
int3
lret
jnp
push
xor
loope
adc
xchg
adc
and
ficomps
cmp
pop
sbb
mov
fistpll
mov
mov
jmp
jecxz
lahf
imul
or
mov
xchg
mov
mov
or
xor
mov
jp
bound
xor
xor
mov
call
lret
dec
xchg
and
cmp
imul
mov
iret
aas
jmp
mov
push
lret
mov
insb
into
lock
mov
mov
xchg
push
in
mulps
lea
aam
push
jnp
jmp
ret
into
les
fisubrl
mov
lcall
push
push
fdivp
push
imulb
inc
enter
pop
test
push
iret
test
add
rol
das
inc
dec
rcr
clc
arpl
fcmovbe
ljmp
pop
inc
and
pop
mov
insl
xchg
sbb
jp
mov
fbld
mov
loopne
xchg
cmpb
mov
in
repz
xchg
pusha
jnp
pushf
xchg
lods
push
mov
mov
xchg
inc
ds
mov
adc
jp
ja
add
push
ljmp
movsl
out
push
jo
xchg
cltd
xchg
and
inc
sub
xchg
or
xchg
loopne
mov
xor
iret
enter
gs
loopne
insl
fs
lret
lahf
dec
ds
adc
push
fadd
lock
push
or
lret
mov
push
and
sub
cmp
ret
fwait
out
insl
push
push
jecxz
sahf
leave
jb
popa
xchg
sub
scas
or
arpl
xor
das
jge
repz
jmp
imul
rcrb
xlat
jl
xchg
jne
clc
xor
push
hlt
add
test
and
test
or
push
dec
jmp
mov
imul
sbb
sub
push
out
test
setae
mul
jecxz
pop
mov
adc
dec
mov
sbb
shr
gs
adc
adc
push
cmc
pop
popl
das
jmp
jo
pop
inc
aaa
fcompl
pop
cmp
scas
cmp
dec
sbb
xlat
in
cmc
mov
dec
mov
xor
xor
mov
push
pop
pop
jns
adc
in
sub
and
and
gs
xchg
push
ret
mov
out
push
sub
mov
stos
mov
es
jae
dec
push
fmull
jnp
xchg
lods
jbe
mov
fidivl
jbe
add
xchg
into
roll
or
and
mov
repnz
push
popf
sbb
adc
ds
idivb
lret
push
sbb
loope
rorb
mov
in
mov
dec
fistpll
adc
jg
mov
pop
pop
shlb
push
popa
and
fwait
xorl
sbb
or
pop
jle
inc
xchg
add
dec
xor
decl
sbb
mov
mov
std
adc
sub
mov
out
mov
lds
xor
mov
movsb
cmp
inc
sub
imul
adc
in
cmp
stos
xchg
test
dec
add
mov
dec
inc
mov
jp
test
test
leave
pop
movsb
push
lret
dec
cli
cli
scas
decb
cwtl
push
popa
mov
mov
jp
lods
xlat
iret
ret
sbb
jne
mov
mov
inc
adc
or
mov
cmc
pushf
push
outsb
inc
sub
rcrl
xor
movsb
mov
imulb
cmp
je
int3
jae
movsb
pop
inc
pop
lock
std
jno
mov
add
adcl
push
mov
fucom
mov
mov
pop
xchg
hlt
in
sbb
loop
xor
pop
cli
movl
or
mov
xorb
xor
nop
jns
xchg
fwait
jp
adc
sbb
push
mov
imul
and
in
rcrl
xor
in
adc
loopne
jbe
js
push
add
outsl
sahf
test
and
sub
dec
lret
xlat
add
sub
or
popa
out
dec
and
hlt
ss
xor
shr
les
push
jo
vfmsubps
add
rol
rcll
pusha
mov
in
into
adc
fnstenv
jae
push
bound
push
inc
jmp
in
ljmp
cmp
mov
sbb
add
or
into
pmullw
jns
or
jne
enter
lret
jnp
lock
lret
mov
das
mov
cwtl
test
dec
pop
add
mov
jg
inc
imul
mov
gs
rcrb
inc
mov
and
mov
icebp
sub
pop
outsb
jnp
nop
jbe
in
xor
mov
sbbl
or
int
rclb
shlb
jbe
pop
in
xor
mov
in
imul
sbb
mov
fdivrl
mov
push
dec
in
inc
sbb
and
je
aas
cmp
fmulp
push
mov
pushl
js
ror
ja
inc
dec
adc
mov
sub
jbe
or
and
xrelease
and
add
mov
aad
xor
dec
xor
into
push
lods
dec
popf
ror
mov
in
or
out
sbb
iret
les
clc
into
scas
ja
jge
pop
and
shrl
push
in
ja
pop
pop
add
out
int3
sbb
in
adc
test
test
cmp
inc
fwait
call
je
or
xorb
lods
mov
jmp
shrb
mov
ss
rorb
imul
mov
sub
sub
and
inc
xchg
sbb
mov
add
push
xchg
rclb
xor
sub
aad
filds
les
loope
dec
fcmove
lods
cwtl
fstps
push
adc
inc
mov
or
mov
cwtl
or
notb
sub
or
je
test
insl
adc
js
ja
pop
jo
adc
pop
cmp
sbb
cmp
loop
movsl
popa
dec
xchg
lods
xchg
adc
mov
aaa
mov
xlat
sbb
test
aad
stos
push
popa
sub
in
sti
insb
xor
mov
stos
xor
mov
xchg
stos
jmp
dec
push
cld
scas
cwtl
mov
lret
int
cmp
insl
in
xchg
or
fisubl
ror
mov
and
sub
push
xchg
push
ds
lcall
popf
dec
in
arpl
sbb
dec
fsubrs
xchg
jl
imulb
sbbb
xor
xor
or
cwtl
mov
jns
into
outsb
cs
pusha
add
dec
cmp
bound
jp
call
sti
pop
sbb
lds
mov
xor
fwait
pushf
jl
push
aam
xorl
pop
shrl
cmp
sub
ja
dec
xor
dec
and
jmp
fwait
jbe
xor
cmp
mov
icebp
ljmp
mov
mov
xchg
and
pop
rclb
xchg
cli
xchg
push
enter
adc
adc
ret
and
pushf
popf
inc
sbb
pop
pop
call
daa
inc
mov
dec
xchg
add
xchg
cmpsb
nop
xor
cmp
add
lret
iret
lahf
arpl
mov
dec
cmp
arpl
les
shrl
addl
mov
pcmpeqd
sarl
scas
adc
ret
mov
das
push
enter
lahf
popa
std
jmp
fidivs
add
or
adcb
mov
xchg
mov
icebp
pop
sub
pushf
scas
test
pop
rcrb
cli
cmpsb
jne
ret
cmc
lods
jge
pop
loope
and
lock
mov
mov
lds
mov
insl
fidivrs
or
pop
cld
mov
push
fisttpll
mov
js
sub
sub
clc
cli
in
insb
inc
fsts
neg
loopne
and
xor
das
rcll
push
nop
jns
cmpl
lcall
loope
xchg
addr16
or
data16
sbb
pop
mov
mov
fwait
mov
ficoml
fwait
aaa
inc
in
clc
jns
cmp
test
aaa
pop
add
dec
mov
pop
mov
out
ljmp
adcl
mov
shlb
imul
mov
rcrb
lock
test
js
and
jbe
lods
mov
mov
sbb
out
repz
scas
pop
fstl
stc
mov
in
test
jecxz
fisubrl
or
pop
or
mov
cmp
insl
jg
aaa
daa
daa
test
hlt
push
cmpb
cmp
push
movsw
inc
inc
subb
xlat
ljmp
mov
sbb
scas
or
jl
loop
test
lret
sub
imul
push
jnp
nop
xchg
xor
aaa
and
call
lret
and
pushf
jo
sarl
xlat
addr16
pop
lods
insb
jo
out
jecxz
sub
sbbl
arpl
or
mov
popa
js
cs
inc
jne
dec
pop
shlb
cli
xlat
sar
dec
gs
ds
dec
add
cmpsl
cmp
lret
lods
mov
dec
fistps
hlt
xlat
cwtl
cmp
into
test
sub
xchg
cmp
push
cmpsb
mov
add
add
aam
or
jge
push
jmp
pop
xor
sub
arpl
je
cmp
shr
xor
dec
movsl
adc
imul
call
outsl
leave
shll
out
mov
js
adcl
test
mov
mov
int
lock
out
or
jnp
cmc
lods
cmpsb
pop
sbb
imul
sbb
call
cmpsl
cmp
sub
into
push
aad
andl
pop
sbb
xlat
sbb
cmp
lds
orl
pusha
movl
mov
mov
dec
pop
sbb
jnp
mov
or
jae
hlt
mov
mov
dec
push
mov
mov
fcmovnu
or
push
pop
mov
pop
subb
movsb
add
movsb
ljmp
jp
adc
adc
sub
outsb
xchg
push
mov
sbb
out
add
inc
mov
ret
jns
cmp
inc
mov
sub
or
adc
stos
lock
mov
jne
xor
or
ljmp
mov
push
leave
or
fcmovnu
dec
inc
xchg
xor
gs
xchg
mov
push
test
out
push
xor
pop
cmp
stos
int
sbb
mov
cld
push
push
sub
jg
cmp
loopne
and
adc
dec
out
cmp
pop
insl
adc
aaa
data16
out
pop
adc
stos
or
xor
pop
push
xlat
push
shrl
or
sti
lret
add
push
out
or
mov
jo
loope
mov
insb
push
insl
data16
mov
stc
subb
add
fwait
outsl
sbbb
sub
scas
lds
jecxz
mov
popf
dec
shl
test
ds
adc
or
icebp
sti
les
jp
dec
mov
dec
jo
testb
shlb
sbb
jo
sub
jg
xor
je
in
iret
or
rorl
or
xchg
xor
icebp
jl
push
or
xchg
mov
and
dec
cmp
lret
lods
pop
sub
pusha
lods
mov
scas
outsb
mov
xchg
mov
mov
in
push
or
sub
push
push
dec
push
adc
cmp
xor
xorps
dec
mov
cltd
xchg
int
push
and
inc
mov
jae
xor
outsl
push
lods
jp
int
imul
jo
psadbw
call
lock
stos
addb
lret
aas
jge
mov
cmpsb
pop
shlb
cwtl
sti
dec
mov
push
rcl
xlat
aad
fsubs
int3
mov
cmp
xchg
scas
ja
cmpsl
mov
add
lds
scas
mov
dec
les
loop
sti
and
cwtl
cmp
mov
pop
jne
mov
aaa
mov
jmp
maskmovq
mov
cwtl
jae
or
add
aam
xchg
ljmp
jbe
jne
mov
mov
fs
sahf
or
sub
in
ss
mov
push
xchg
loop
jmp
pop
inc
cli
or
inc
xor
and
xchg
adc
xchg
test
cwtl
inc
mov
stos
fisttpll
sub
loopne
cmpsl
or
test
aad
push
sahf
fwait
pop
aas
stc
mov
mov
nop
insb
sub
xchg
ss
mov
ss
out
mov
inc
out
inc
or
push
pop
sub
in
mov
xchg
mov
rorl
out
push
inc
popa
outsl
mov
lret
stc
inc
pushf
imul
mov
cmc
jns
jae
adc
cli
stc
out
cmpsb
test
adc
mov
fcmovb
xor
lea
jge
jg
and
repz
push
add
pop
fs
or
ffreep
pop
dec
movlps
bound
push
mov
jge
push
or
ljmp
fistps
loop
mov
add
jne
pushw
xchg
lahf
jo
imul
divl
faddp
insb
jo
mov
xlat
cmc
mov
inc
xor
push
xchg
push
jo
jo
lds
add
dec
out
dec
pop
int3
pop
xor
push
adc
test
push
lea
cmp
jg
sub
sub
rol
and
sbb
loopne
or
push
cs
jnp
stc
jnp
bound
insb
inc
repnz
int3
pop
push
sbb
dec
adc
dec
outsb
push
popl
add
js
inc
loop
lea
insb
and
mov
mov
push
sub
outsb
movsl
xchg
xchg
aam
xchg
je
mov
jmp
test
or
xor
loopne
stc
push
xchg
and
mov
dec
cltd
daa
jns
les
movsb
cwtl
adc
push
cli
lret
cmpsb
imul
add
jecxz
inc
push
jmp
hlt
and
pop
pop
mov
pop
cmp
mov
xlat
cli
xor
pop
mov
scas
lcall
lds
cmpsl
push
stc
push
inc
addb
addr16
or
fsub
push
pop
iret
lea
sbb
or
xor
loope
mov
pop
clc
xchg
loop
ljmp
xor
mov
ljmp
in
mov
mov
add
pusha
mov
and
fprem1
pop
lea
xor
in
shll
shll
adc
mov
test
or
gs
arpl
or
dec
jbe
mov
mov
test
push
or
fmuls
xchg
mov
shrb
ret
mov
in
jo
lret
mov
roll
ret
sahf
enter
or
pop
jno
push
jl
push
push
movsb
mov
aad
test
enter
push
cmp
add
jecxz
mov
aaa
xor
adc
ret
mov
xorl
adcb
mov
and
dec
rorb
into
jbe
fsubrs
dec
aam
adc
dec
mov
xchg
js
outsl
jno
pop
and
loop
mov
adc
cli
mov
inc
mov
push
mov
dec
aaa
dec
loopne
lods
jno
fld
xchg
out
mov
shl
lcall
xor
fwait
cmp
xor
push
stos
out
adc
pop
xorb
or
mov
adc
nop
cwtl
ret
dec
cmpsl
pop
pop
xchg
push
mov
inc
xchg
or
mov
dec
cmp
inc
dec
fidivs
enter
xor
out
xchg
outsb
push
fsubrl
add
sbb
lock
push
stos
fldt
outsl
in
mov
cltd
dec
lahf
push
jg
test
or
adc
adc
mov
iret
dec
adc
je
and
push
xor
cmp
jl
push
andps
push
clc
in
mov
cs
hlt
or
xchg
divb
and
out
in
lahf
bound
aam
jnp
xor
mov
shrl
inc
add
push
mov
mov
frstor
dec
dec
out
outsl
gs
and
dec
xchg
inc
icebp
daa
mov
cli
jecxz
sti
je
popa
xchg
ss
sbb
jbe
dec
adc
arpl
shll
cmp
and
popa
mov
adc
cmc
nop
sub
rcrb
decl
aaa
inc
int3
mov
mov
loop
push
mov
pop
push
leave
std
das
loope
dec
ret
and
xchg
xor
sub
repz
into
push
adc
mov
fcoml
add
xchg
dec
xchg
adc
sar
lea
loop
aas
inc
xor
js
cmp
inc
jno
addr16
mov
testb
adc
stos
mov
mov
imul
sub
mov
and
cmp
les
xchg
ss
xchg
and
xchg
aas
mov
repnz
pop
and
je
sti
frstor
mov
cld
adc
aaa
test
mov
xor
pop
xchg
pop
pop
je,pn
ret
jp
mov
dec
sti
sub
js
jg
dec
ds
xor
or
jbe
xor
mov
loopne
pop
jno
les
cltd
mov
sub
pop
xor
ror
jae
dec
les
xlat
loope
das
aas
and
mov
sbb
imul
sbb
pop
dec
iret
mov
push
lods
cmp
jmp
imul
mov
push
cmp
stos
hlt
cmp
mov
ret
cld
jmp
fimull
fs
jae
daa
cmp
add
lods
inc
repnz
pop
popa
mov
lret
or
aam
adc
das
or
mov
pop
das
repnz
cwtl
pop
sub
adc
sbb
shrl
and
push
pop
add
sub
xchg
dec
inc
xor
cmp
or
xchg
pop
dec
cmpsb
aas
adc
or
jb
cmpsb
jne
push
div
notb
push
arpl
mov
xchg
dec
cmpsb
scas
dec
and
and
das
xchg
xor
mov
hlt
cli
lock
pop
sub
stc
and
imul
adc
sub
gs
popf
sbb
inc
push
loop
cmpl
push
fnstsw
jecxz
sub
subl
mov
xchg
mov
inc
mov
or
jge
aad
jne
cmpb
mov
fwait
outsl
push
jge
scas
dec
mov
popf
mov
mov
daa
mov
pop
sub
addr16
sub
sub
or
xor
adc
sub
fsubrl
jle
js
ror
rolb
pop
stos
sub
out
dec
mulb
fildl
pushf
int
cmp
mov
orl
xchg
shlb
dec
lds
cwtl
out
xchg
aaa
pop
add
dec
pop
ret
or
jmp
mov
int
add
xchg
mov
cmp
aam
repz
out
add
popa
mov
add
movsl
shll
imul
push
repnz
cmp
rcrb
addb
xchg
out
lret
notb
push
imul
jecxz
sahf
or
std
xchg
arpl
sbb
pop
lock
add
mov
sahf
cmc
jecxz
lcall
ds
in
adc
fs
lods
repnz
xchg
fnstcw
ret
add
mov
or
js
inc
and
xor
pop
and
pop
enter
call
jp
sub
addr16
cmp
lahf
ss
cli
les
xor
pop
inc
mov
sub
cwtl
xor
push
hlt
sti
int3
jecxz
jecxz
xchg
jg,pn
adc
adc
sbb
in
into
push
jnp
pop
push
ljmp
dec
lret
pop
dec
lahf
pop
test
inc
add
out
lret
adc
xor
ljmp
dec
loopne
and
fmuls
sub
jno
ds
and
lods
push
jle
faddl
mov
jmp
sub
repnz
add
push
in
adc
aam
inc
clc
or
out
jo
aas
andb
sbb
xchg
sbb
loope
lret
stos
xchg
iret
mov
sub
outsl
jno
mov
sbbb
and
test
into
xchg
rcrb
jge
movaps
insl
insb
faddl
xor
loope
sub
icebp
dec
shrl
adc
test
xchg
xlat
pop
sub
movsl
jp
icebp
or
lods
xchg
cmp
popa
fnstcw
ficoms
pop
push
push
mov
or
mov
mov
nopl
pop
jecxz,pn
xor
mov
add
cmpb
mov
fidivrs
fdivr
sbb
adc
mov
inc
and
mov
mov
mov
or
rcll
sbb
cmpsb
push
jne
mov
scas
lahf
stos
gs
fs
dec
dec
in
add
xor
push
loop
xchg
ljmp
sub
xor
pop
push
test
push
or
subb
shlb
dec
adc
ss
or
insb
lcall
in
add
and
cmp
sbb
cmp
jns
scas
inc
push
enter
and
test
lahf
andb
push
cltd
cs
xor
xchg
pushf
xchg
in
xor
ret
dec
pop
jl
movsl
ja
pop
mov
ds
inc
test
jae
mov
pop
push
test
mov
insl
loope
lcall
addr16
and
movsb
insl
repnz
and
sti
mov
js
pushf
add
jae
xor
movsl
lea
pushf
rclb
mov
and
and
pop
inc
jle
mov
out
orb
cs
fdivrs
jne
das
arpl
repz
dec
fcmovnu
inc
flds
mov
dec
pop
out
fcoms
or
pop
repz
add
inc
sbbl
mov
insb
mov
and
push
mov
mov
mov
jb
out
nop
and
loope
push
adc
cmp
cld
stc
xor
sar
lcall
pop
movsb
adc
into
xor
pusha
mov
jl
bound
mov
in
push
push
das
cs
cld
pop
not
ds
test
pop
arpl
xlat
push
nop
scas
andl
test
cmc
icebp
iret
push
repz
or
sbb
jmp
adc
cmp
mov
jle
cli
add
adc
dec
pop
mov
shll
sbb
mov
adc
xchg
sti
pusha
mov
pop
cmp
jae
pop
cli
ss
inc
cs
mov
leave
test
or
mov
adc
fstl
cmpsl
dec
jbe
popa
and
jno
std
fldt
sahf
int3
xor
cmp
xchg
pop
mov
aad
and
or
mov
xlat
mov
xchg
pop
and
dec
mov
loopne
push
xchg
sbb
imul
call
ret
fwait
rclw
insb
ret
sub
fnsave
insl
imul
out
xor
lret
fs
mov
adc
stos
push
jns
mov
and
out
adc
pop
rcl
sbb
sbb
ja
hlt
mov
cmpsl
inc
jmp
aad
cmp
mov
movsl
xchg
jbe
and
push
dec
cmp
mov
aad
fiaddl
dec
xchg
adc
mov
cmpsl
mov
mov
call
mov
js
mov
lcall
push
mov
push
cld
xor
push
js
mov
addr16
lods
add
daa
mov
inc
stos
out
sub
cmpxchg
jge
sub
fwait
sti
cmp
aam
and
adc
aad
sub
jl
ja
mov
cld
cmp
sub
inc
lahf
out
sarl
ficoms
scas
pushf
imul
movsb
mov
cmp
repnz
hlt
dec
or
pop
cmc
rorl
cmp
cmpsl
iret
rorl
repnz
sub
push
dec
test
das
bound
iret
xchg
mov
jbe
cmp
add
stos
sbb
sar
aad
inc
ljmp
push
and
lock
jle
mov
jg
sti
pushf
pop
inc
push
mov
gs
iret
aad
test
test
ret
faddl
jno
fidivrs
jecxz
mov
pop
jbe
test
decl
jmp
lds
rcrb
out
xchg
es
push
mov
mov
mov
js
pop
ficompl
fiaddl
and
lret
sub
repnz
nop
jle
cmp
push
mov
lret
ret
mov
fistps
push
imul
popa
mov
es
js
std
xchg
cmpb
xor
mov
cmp
mov
pop
cmp
xchg
js
flds
lret
scas
ljmp
cmpsb
add
mov
xchg
inc
jge
pop
mov
mov
nop
cmp
mov
xchg
ficomps
or
cwtl
int3
aad
sbb
sub
mov
sbb
mov
add
mov
mov
jae
out
fcmovbe
push
push
leave
mull
insl
das
or
and
mov
arpl
out
cwtl
sub
mov
mov
sbb
sarl
imul
mov
ret
or
test
push
and
lahf
mov
iret
outsl
sub
in
xchg
movsl
xor
adc
cmc
fsubrl
mov
lds
shlb
cmc
push
and
jmp
test
mov
les
mov
in
andl
sbb
das
adc
dec
leave
das
das
push
fsubl
sbb
popa
and
add
mov
mov
sub
and
aaa
mov
hlt
test
inc
cmpsb
sbbl
cmp
push
icebp
dec
insb
icebp
nop
push
test
jp
inc
dec
insb
pop
ret
dec
pop
stos
or
pop
gs
or
outsl
sub
dec
in
ss
icebp
pop
jae
ja
iret
in
int
stos
in
xor
xchg
push
push
arpl
std
lcall
shrl
xor
inc
push
mov
push
jp
out
cmc
adc
int
or
push
ficoms
mov
arpl
popa
add
inc
notb
jmp
dec
mov
add
stos
mov
sahf
add
mov
jne
das
jle
mov
xchg
push
sub
ret
loopne
xor
mov
xor
loope
loop
js
adc
adc
imul
shr
ret
cld
mov
icebp
dec
push
or
mov
in
xor
jecxz
mov
or
mul
jp
cmp
mov
push
push
jo
fsts
rclb
sub
sbb
inc
adc
sub
lcall
loope
sub
cmp
nop
or
shlb
testb
cmpsl
push
jmp
xchg
xor
nop
in
jl
andl
mov
mov
add
and
scas
cmc
mov
cmc
push
dec
sub
add
dec
push
xchg
add
push
ss
shl
xchg
add
push
jae
nop
repnz
xchg
cmpsl
fs
sbb
cs
sub
push
daa
movsl
xor
push
dec
dec
addr16
scas
scas
aam
pusha
and
cwtl
ljmp
jno
jno
dec
lret
push
dec
xchg
dec
call
into
and
js
stos
bound
loopne
ret
sbb
xchg
jp
xor
or
dec
sbb
inc
xchg
xor
sub
cltd
dec
sahf
std
hlt
js
sub
add
in
xor
mov
or
or
mov
mull
lahf
add
pop
loop
fstps
shlb
imulb
cld
and
mov
jnp
add
sub
stc
jbe
pop
aad
mov
dec
out
mov
aam
dec
cmp
push
xor
ds
sub
js
xor
out
negb
shlb
loopne
mov
ret
bndstx
dec
mov
js
into
in
cld
sbb
add
ss
xchg
icebp
mov
inc
lods
test
into
cmc
inc
imul
scas
ss
sub
insl
cltd
push
shrl
sbb
adc
jmp
inc
push
mov
fs
jns
or
jg
mov
fistl
aaa
xchg
aad
fdiv
sub
iret
push
or
mov
aad
xor
je
in
jecxz
sbb
mov
dec
sar
sbb
jb
hlt
push
dec
adc
pusha
xchg
push
xchg
ficoms
fiadds
cld
icebp
leave
in
mov
cmp
push
lods
mov
mov
mov
push
sbb
xchg
into
nop
fs
in
and
push
rep
dec
int3
sbb
insl
inc
inc
mov
fldt
cs
adc
sub
sbb
test
or
xchg
jae,pt
xlat
mov
push
stos
pop
lea
lds
das
sbb
fcmovne
cmp
jbe
sahf
outsl
cli
pop
arpl
inc
sbb
sti
rolb
adc
test
mov
cmp
push
xor
std
pop
aad
inc
mov
xchg
cmpsb
jns
sub
pop
sbb
or
fisubrs
movsb
lcall
push
aam
mov
mov
cmp
imul
ud2
addb
lock
lahf
les
mov
cli
xchg
into
cld
sbb
adc
aaa
inc
push
ds
and
je
ljmp
enter
and
imul
test
lret
scas
mov
std
xchg
cmp
icebp
cmp
out
xor
xor
ja
pop
xor
loope
cmp
mov
mov
adcl
pop
int
cmp
fstpl
adc
sub
pop
adc
xchg
roll
cmp
idivb
testl
jg
in
adc
insl
dec
or
rorb
lods
test
pop
in
sbb
dec
nop
inc
inc
lret
rcr
add
xchg
fwait
lahf
inc
mov
xchg
and
dec
fwait
add
sbb
cmp
mov
cwtl
cmp
ss
outsb
sbb
pop
test
and
add
lret
push
jne
sub
leave
jne
push
xor
adc
xor
sbb
negb
push
mov
add
cmp
xlat
mov
push
outsl
les
stc
cmp
sti
or
push
sbb
or
push
mov
cwtl
pop
xor
pop
dec
movsl
mov
xchg
cld
test
insl
or
std
xchg
cmp
lahf
das
std
sahf
jge
mov
sub
jae
shl
mov
popf
addb
arpl
dec
pushf
and
xchg
das
inc
ds
cld
gs
sbb
scas
aam
push
scas
mov
inc
pop
add
mov
inc
adc
loop
mov
cs
insl
mov
aam
pop
test
xchg
xchg
mov
push
push
mov
or
cmp
mov
sahf
push
mov
and
pop
fistps
adc
add
in
aad
xchg
and
jne
pop
adc
add
push
push
pop
cwtl
and
xor
ds
jmp
into
imul
inc
dec
shl
lahf
repnz
mov
jnp
or
ds
mov
test
nop
leave
cmpsl
sbb
dec
push
jmp
lahf
xchg
dec
or
stos
sub
cmp
aad
pop
cmp
jmp
jno
mov
xor
call
ss
pop
sub
insl
dec
leave
test
stc
stos
or
push
add
fwait
xor
xchg
mov
ds
jge
sub
fs
adc
shlb
or
mov
sarb
imul
mov
jo
pop
cmp
loop
lret
insl
mov
jbe
stc
lds
push
and
les
lods
push
xor
jge
xchg
cltd
mov
jl
xchg
push
pop
lcall
ja
aaa
jno
sar
lds
pop
faddl
loopne
mov
out
inc
inc
ss
cltd
jle
inc
adc
xchg
nop
mov
mov
lea
or
out
roll
cmp
lds
push
imul
mov
mov
pop
lods
xlat
adc
negl
cmpsb
idivl
mov
push
inc
pusha
mov
arpl
out
mov
inc
test
or
mov
rcrb
orb
pop
or
ss
fcmovbe
je
popf
aad
push
mov
sub
adc
sti
sbb
les
pop
test
rcr
imul
sti
ret
test
cmpsb
mov
dec
xor
pop
xor
inc
add
js
fists
mov
mov
push
enter
add
lahf
gs
cmp
and
mov
pop
cmpl
adc
or
insb
adc
cmpsl
divl
or
mov
xchg
mov
stos
sahf
dec
xchg
daa
out
cmp
int3
push
or
mov
cmc
lret
xchg
mov
popa
inc
xchg
pop
inc
jmp
sbbl
enter
int
fmul
popa
test
mov
jo
rorb
fs
xor
mov
pop
pop
mov
mov
xor
sub
push
fsubr
xor
xor
scas
js
leave
into
mov
lcall
push
inc
and
insl
pop
cmc
lock
mov
mov
mov
xor
scas
dec
imulb
ret
push
xchg
add
sarl
lahf
push
enter
mov
dec
push
outsb
cltd
sbb
mov
les
sub
out
stos
fistl
stos
cli
sbb
in
lods
inc
out
sbb
cwtl
fsubrp
out
inc
stos
jg
icebp
xor
inc
dec
adc
and
mov
jge
jp
fstp
or
and
cld
cwtl
mov
xchg
sarl
leave
sub
xchg
mov
lret
jp
fwait
test
add
outsb
les
loopne
movsl
shlb
std
scas
cmp
mov
and
push
or
sti
or
pop
push
add
daa
inc
mov
adc
lods
pop
push
adc
enter
cmpsb
cmp
mov
push
cmp
aas
xor
xor
adc
xor
outsl
cwtl
repz
cld
int
iret
mov
out
dec
movsl
rolb
shl
mov
or
sbb
mov
or
mov
push
cmpsb
dec
cli
and
test
jge
mov
lds
aam
push
sbb
pop
mov
jl
je
sub
test
xor
or
mov
and
inc
xchg
out
push
sbb
xor
cmp
jg
xlat
popf
sub
mov
push
daa
or
sbb
nopl
ss
mov
mov
fnstcw
pslld
out
mov
mov
data16
jnp
xor
pop
or
jle
ret
inc
or
adc
push
pusha
aas
mov
std
xlat
xchg
push
mov
rorl
fldl
mov
pop
mov
cmpsl
movsl
loop
mov
xchg
cmp
jmp
xchg
mov
lods
jmp
das
mov
xlat
cmp
stos
pop
leave
dec
jbe
stc
cltd
jecxz
and
mov
xor
push
ja
nop
roll
jl
out
lret
mov
call
mov
lret
lea
jb
mov
push
inc
sbb
rcl
movsl
fisttpl
xor
call
sub
xchg
or
nop
cltd
lock
scas
mov
push
cmp
jbe
outsb
stos
inc
out
aad
add
hlt
xchg
jns
mov
cmp
add
enter
jnp
dec
movsl
adc
fcom
cmp
int
xor
pop
shll
mov
xchg
fnsave
inc
outsb
stc
cmpsl
or
icebp
cmp
adc
into
pusha
add
push
jg
mov
jae
xchg
les
mov
and
xor
inc
sbb
popa
xor
les
inc
xchg
stc
bound
xchg
push
lods
xchg
fcomp
pop
shrb
push
jne
mov
lock
out
pop
cli
les
dec
push
mov
loopne
lods
mov
aad
and
stos
psrad
mov
je
outsl
or
jb
xchg
xor
jmp
or
dec
push
out
cld
and
inc
push
js
ja
out
cmp
xor
xor
xor
adc
mov
decl
popa
sbb
add
jmp
push
pop
push
pop
cmp
or
ret
xchg
dec
lcall
xor
add
cmp
xchg
push
adc
insb
pop
xchg
adc
xor
xchg
cmc
js
cld
sti
push
and
mov
mov
mov
push
inc
sbb
mov
aam
cmp
add
inc
mov
push
pop
push
sub
std
hlt
mov
inc
insl
es
lcall
push
and
add
fs
jmp
xor
addr16
jmp
nop
push
mov
and
dec
dec
lret
or
aas
jbe
cmp
inc
cmp
xor
and
inc
jno
das
lret
xchg
sub
in
lahf
stos
ljmp
jecxz
lcall
sbb
adc
jmp
jmp
adc
lods
mov
sbb
in
push
rorb
ljmp
mov
insl
movsb
fidivrl
ret
add
outsl
in
xor
imul
mov
das
out
jle
sti
sbb
pushf
ja
popa
in
frstor
push
jae
loopne
mov
cmp
push
add
outsb
push
push
fistpl
scas
loope
dec
or
sub
add
mov
pop
aad
xlat
add
sub
xchg
push
push
repz
addr16
push
xchg
sti
fisttpl
stc
std
xlat
jno
rcpps
fs
outsb
orl
fimull
pop
inc
sub
daa
std
xchg
je
cmp
xor
jp
aad
pop
sbb
dec
cmc
jne
movsb
int3
cli
adc
jle
pop
cmc
stos
cmp
aas
dec
mov
mov
in
int
hlt
xchg
xor
leave
jb
dec
sbb
xlat
cli
dec
fstps
shlb
sub
xchg
std
xchg
sub
push
in
es
std
aaa
xchg
and
pusha
pop
adc
ljmp
fdiv
jmp
push
imul
enter
pusha
mov
cmp
xchg
inc
sti
movsb
daa
ja
mov
neg
xchg
lods
add
sub
jmp
pop
dec
adc
dec
dec
ljmp
pop
fistpl
rcrb
stc
cli
pop
mov
pushf
add
mov
repnz
test
push
push
stc
and
xchg
xchg
loop
adcb
xlat
divb
dec
and
repz
mov
sub
inc
rcll
fidivs
in
sub
fwait
pop
xchg
pushf
jmp
mov
dec
xor
outsl
int3
adc
imul
sub
adc
orl
cmpsl
dec
adc
inc
repnz
xchg
loopne
dec
push
add
shlb
daa
mov
out
das
or
imul
and
mov
mov
cmp
pushl
mov
jp
movb
adc
cmp
cld
in
repnz
scas
add
hlt
insb
mov
mov
in
mov
sbb
fldcw
call
dec
outsl
jno
pop
ja
cld
arpl
sti
push
loop
imul
sub
js
in
sbb
push
cmc
negl
sub
mov
lods
std
inc
sbb
jne
ret
xor
inc
ret
xor
stc
mov
lea
xorb
sub
punpckldq
stos
pop
jns
cmpl
pop
scas
lea
dec
or
push
cltd
cmp
aas
jbe,pt
adc
jg
pop
inc
pushf
and
dec
lods
push
mov
sub
pop
pusha
in
fsubl
push
out
pop
add
dec
nop
and
or
dec
loop
add
rorl
and
mov
sbb
ljmp
dec
mov
in
les
sbb
dec
xchg
cmp
repnz
mov
sub
mov
popa
add
out
xchg
dec
js
test
das
mov
cwtl
push
fnsave
xchg
aaa
call
insl
pushf
mov
data16
and
xchg
imul
pop
sub
xchg
inc
loopne
adcb
push
mov
xlat
cmpsb
push
jge
in
stos
xchg
mov
mov
test
fsub
inc
roll
jle
push
loopne
xchg
adc
jmp
or
jg
dec
stos
cmp
pusha
inc
xor
push
std
pop
xchg
aad
out
jo
push
aaa
ljmp
jmp
jecxz
in
imul
inc
iret
aaa
push
imul
mov
xlat
movsl
int
mov
lahf
aad
loope
or
xor
add
jl,pt
xchg
push
and
and
mov
insl
cmp
cmp
clc
out
xchg
dec
fcmovne
sub
outsl
mov
orl
ja
and
mov
push
push
div
add
dec
fbld
insl
or
int
mov
pop
mov
sbb
sbb
pop
add
pop
xor
popa
movsb
addl
inc
cmp
cltd
xor
sbb
dec
mov
outsb
adc
mov
mov
or
push
mov
inc
pop
add
iret
int3
test
add
cmp
jo
test
daa
mov
scas
sarb
mov
xor
repnz
xlat
sub
cmpb
je
ds
adc
outsl
or
out
cmpsb
dec
addr16
or
mov
xlat
addr16
mov
cltd
xchg
sbb
lds
sub
add
or
ja
jb
sbb
inc
pop
jae
scas
adc
mov
adc
stos
pop
leave
mov
in
shll
push
dec
mov
cwtl
ljmp
jg
in
adc
bound
mov
sti
fwait
dec
sar
iret
sbb
cmp
cld
fdivrs
jns
push
jne
mov
and
dec
stos
cmpsl
or
xchg
scas
inc
es
xchg
dec
jge
repnz
xchg
les
pop
dec
adc
mov
jle
cmp
xlat
data16
sti
popf
jmp
addr16
jmp
rcr
push
sbb
les
mov
cmp
mov
scas
ret
aam
xlat
jb
sub
fcmovnu
mov
xlat
repz
mov
js
mov
mov
xchg
fidivl
out
in
arpl
inc
ret
jne
fcmovnu
scas
fstp
popf
cmp
mov
pop
rorb
dec
cmp
int3
pop
insb
jns
loop
xor
es
dec
in
add
push
jp
add
ret
mov
icebp
sub
sarl
cmp
inc
adc
xorl
addr16
sub
and
mov
add
leave
call
mov
icebp
fdivl
mov
jo
iret
dec
or
es
adc
hlt
xor
scas
mov
push
push
push
sub
ror
adc
hlt
mov
add
ja
lahf
mov
scas
cmpsb
mov
imul
ss
xor
lcall
add
test
xchg
push
cli
mov
and
mov
cmp
leave
jp
in
data16
ss
mov
or
mov
shll
inc
dec
adc
scas
inc
pop
aaa
test
lcall
loop
xchg
sub
push
popa
or
sub
cs
mov
stos
mov
xchg
test
jle
and
adc
dec
inc
and
aam
test
add
enter
pop
cmp
and
enter
jb
sbbl
mov
add
mov
or
jo
insb
xchg
push
lahf
mov
mov
dec
fldl2e
sbb
test
ds
add
in
xchg
pop
or
fidivl
inc
xor
mov
nop
outsl
dec
add
mov
js
imul
mov
sarb
js
fmull
push
xor
add
inc
nop
gs
clc
movsb
out
adcb
mov
cli
test
aaa
cmp
aam
adc
test
xchg
lret
pop
outsl
jno
out
push
mov
mov
popa
push
int3
mov
xor
mov
subl
rcl
rcl
ljmp
shl
mov
test
ljmp
cli
pop
shlb
sti
sub
lds
dec
js
leave
mov
mov
idivl
clc
dec
aam
shrl
mov
push
dec
fimuls
mov
out
adc
movsl
pop
jae
lea
and
or
mov
call
sub
pop
inc
test
pop
rorb
push
push
pushf
mov
andb
sbb
call
push
inc
add
aad
jne
lahf
mov
call
int3
mov
xchg
in
push
adcb
imul
jp
add
ljmp
inc
and
xchg
rolb
popa
xor
hlt
repz
mulb
sahf
loop
dec
jnp
jnp
lock
pusha
adc
rcrb
fsubs
or
jnp
dec
stos
dec
arpl
push
loopne
cmpsl
fistpll
or
lds
sub
imul
push
adc
loop
cmpsb
add
dec
xor
push
ret
cmp
cwtl
or
pop
imul
push
pop
bound
inc
addr16
hlt
push
roll
test
idiv
dec
outsl
rclb
or
dec
jl
mov
popa
ret
fimull
inc
loopne
pop
stc
lret
dec
mov
jecxz
fucom
pop
pop
lcall
je
ss
mov
call
ss
jno
int
pop
imul
cltd
mov
or
dec
cs
sbb
sbb
push
cltd
jb
lock
sti
nopl
pop
pop
or
test
pop
lock
push
or
mov
sub
dec
sahf
add
pop
int3
insl
cmp
out
mov
aaa
adc
jle
sub
push
add
scas
sub
mov
push
mov
add
mov
sub
outsb
cld
pop
loope
cmpsb
sahf
cmpsl
ret
mov
divb
mov
or
int
ror
hlt
stos
inc
xlat
push
pop
lea
cli
out
cmpsl
icebp
push
enter
negl
aad
je
fisubl
add
sub
cmp
inc
xchg
push
pop
or
cmpsl
negl
mov
out
jecxz
push
fsubrp
in
cld
sub
inc
sub
dec
xchg
es
data16
out
jmp
push
movsl
lock
xchg
lea
sbb
push
ror
add
mov
sbb
xor
sub
jecxz
jp
push
mov
xchg
es
arpl
jbe
lret
fwait
pop
cld
and
sbb
or
bound
mov
cltd
jb
imul
pop
inc
ret
sub
add
jp
clc
pushf
push
mov
out
cmp
hlt
adc
sbb
arpl
mov
xchg
lret
daa
jge
push
xchg
sbb
testb
inc
mov
cltd
jecxz
shlb
movsl
mov
adc
mov
lock
es
cmpsb
icebp
sbb
loop
popa
cs
pop
cmp
mov
sbb
jo
ret
fwait
adc
out
sub
mov
popa
loop
bound
push
in
fcompl
mov
and
cwtl
in
adc
xor
sbb
arpl
fs
xchg
data16
sub
inc
jb
mov
push
sbb
es
jns
out
cmp
rcr
jecxz
cmp
xchg
loopne
add
lcall
push
xor
movsb
stc
or
sbb
inc
dec
ret
inc
mov
das
dec
sar
loopne
outsb
inc
and
repnz
mov
fsubrl
mov
pop
xchg
push
dec
jb
mov
mov
shrl
or
fsubrs
cli
sbb
out
xchg
jae
roll
movsb
push
rcrb
icebp
adc
rcr
xchg
xor
sub
adc
and
stos
cmp
mov
mov
fwait
mov
sbb
loop
push
mov
or
xor
push
and
dec
cmc
cmpb
push
push
mov
insb
test
scas
incb
bound
adc
inc
call
cld
outsb
add
clc
testl
adcb
das
add
mov
adc
push
imul
gs
dec
jp
lahf
sahf
xchg
xor
adc
cmp
mov
lret
ret
movsb
fincstp
pop
cwtl
sbb
pushf
lret
or
sub
andl
in
lods
sub
sub
nop
rcll
je
fbstp
jecxz
in
xchg
in
dec
mov
sbb
push
pop
inc
test
sub
sub
stc
jns
insb
outsb
and
jno
es
jo
xor
jb
cmp
aaa
push
stos
push
xchg
cmc
inc
lret
push
xor
scas
les
test
sub
cmp
push
dec
jp
sti
adc
or
daa
dec
push
adc
lods
jge
out
ljmp
and
mov
mov
and
jg
lret
sub
outsl
idivl
fisubrs
xor
repnz
sbb
movsl
lret
add
xchg
dec
stos
sub
push
cmp
mov
int3
adc
sbb
ret
call
cmpsb
test
adc
sub
fs
xor
jbe
std
shr
mov
das
xchg
adc
sub
cmp
jno
adc
stos
cmp
cmp
out
and
add
adc
ss
inc
fisubl
jb
sbb
insl
add
arpl
and
decb
mov
in
sub
pop
sbb
pop
andl
mov
aad
aad
dec
cmpsl
xor
mov
imul
in
adc
cmp
and
add
rep
or
dec
ret
aaa
shll
adc
cltd
jne
push
cmp
cmc
mov
xchg
sbb
pusha
add
int3
mov
lock
lds
cmp
push
mov
cli
and
popa
fadds
inc
adc
mov
push
push
mov
cmp
cmpsb
sub
or
out
adc
addr16
mov
mov
mov
aas
inc
in
mov
das
fisubs
jl
push
sub
mov
sbb
pop
ds
je
lock
jae
out
in
add
repz
imul
dec
xor
ja
inc
jo
cmp
mov
int
xchg
cli
outsb
int3
pop
cmpsl
cld
repz
adc
sahf
pop
push
pop
jnp
mov
lea
adc
hlt
mov
pop
in
inc
iret
inc
jl
adc
test
cli
xor
nop
jo
xchg
mov
dec
dec
sbbl
sub
cmp
repnz
jmp
and
mov
fcomip
and
jns
out
fstl
push
sub
dec
in
xor
and
xor
inc
into
pop
mov
and
sbb
jecxz
repz
les
dec
sub
in
push
jnp
mov
outsl
fsts
mov
scas
pop
and
dec
sub
incl
stos
popl
xor
stos
jmp
add
psubd
in
movsl
lods
pop
icebp
and
mov
jle
xchg
addb
ja
and
ljmp
jbe
clc
int
insb
xchg
pusha
dec
sub
inc
jmp
sbb
jmp
lret
jecxz
xchg
shll
ds
push
inc
mov
leave
movsb
cmp
push
mov
jg
neg
cmc
inc
mov
sti
dec
cmp
aaa
fwait
mov
in
push
cmc
sbb
addb
fcompl
mov
mov
adc
or
adc
mov
aam
jge
lods
loop
push
and
leave
test
outsl
mov
hlt
add
and
popf
xor
add
sbb
xor
add
mov
sbb
push
aam
and
mov
mov
sti
jmp
pop
mov
add
je
pop
sub
into
leave
outsb
inc
cmp
daa
popf
data16
fldlg2
or
sbb
push
pop
adc
mov
pop
faddl
mov
or
xchg
loop
mov
push
stc
inc
add
push
ja
daa
cld
sub
mov
dec
fs
push
ss
or
cmp
stos
sub
addr16
movl
add
out
dec
pop
xchg
push
xlat
je
and
push
shlb
xor
movsb
icebp
pop
inc
jmp
mov
pop
lds
adc
pop
sti
mov
dec
xchg
cmp
xorb
loop
lods
int
jno
adc
jmp
mov
push
mov
xor
out
nop
push
add
cmp
adc
test
or
lea
dec
jns
nop
cmp
iret
mov
jbe
xchg
jo
into
pop
add
aad
push
lock
cmpl
loope
sbb
sbb
call
jge
mov
lock
iret
sbb
or
and
dec
adc
aas
sbb
mov
ss
not
adc
push
movsl
jo
lahf
mov
fisubrl
dec
dec
ret
pop
pop
in
jg
xchg
pop
pop
jns
dec
daa
push
push
test
dec
stos
lea
aad
scas
pushf
jecxz
leave
jbe
into
scas
add
mov
in
fs
jns
or
movsb
sub
mov
test
movsl
mov
arpl
in
and
imul
mov
popa
inc
mov
jmp
xchg
inc
inc
lret
daa
mov
mov
xchg
sub
xor
push
mov
mov
pop
dec
loopne
mov
xchg
push
xchg
or
mov
xchg
cmp
xor
push
int3
jno
adc
cmp
mov
push
sbb
fsubr
enter
pop
cs
std
mov
jl
in
int
and
jl
and
pop
jno
xor
inc
outsb
test
mov
fiadds
sbb
outsl
mov
scas
popf
test
jg
mov
jle
cltd
roll
cmpsl
push
pop
jns
test
jecxz
and
adc
inc
xchg
test
cmpsl
inc
push
fildll
mov
push
movsl
pop
xchg
or
aad
sbb
or
jnp
lcall
adc
dec
test
push
cmp
lahf
pop
arpl
sbb
adc
loope
outsl
dec
fbstp
cmp
adc
sub
lret
loope
fwait
jmp
ljmp
out
or
in
xlat
push
hlt
mov
inc
and
and
aas
aad
aaa
out
leave
enter
icebp
in
sub
test
std
or
mov
add
pop
outsl
jecxz
adc
mov
jg
lea
mov
xchg
push
rcr
jmp
inc
sub
cmp
js
jmp
xchg
dec
sbb
jnp
mov
jne
out
pop
scas
pop
and
aam
mov
pop
outsl
adcb
jae
imul
mov
mov
or
out
xor
fcomps
movsb
int
sub
jge
jns
push
jl
test
inc
mov
iret
push
pop
mov
sub
jb
mov
xlat
pop
scas
aaa
xor
int3
cltd
mov
mov
push
es
inc
mov
enter
arpl
add
sub
xchg
stos
call
aas
ljmp
pusha
mov
leave
xor
and
and
orb
dec
and
or
add
and
in
outsb
negl
push
jns
mov
inc
test
fsubrs
push
pusha
mov
push
mov
cmpsl
add
jp
push
cmpsl
rcll
mov
pusha
loope
push
inc
lea
jp
xchg
outsl
sub
ljmp
push
inc
cmpb
lock
push
and
out
push
pop
and
adc
jns
sbb
in
rclb
fiadds
mov
mov
ja
cmpsb
pop
inc
out
jp
ljmp
mov
lret
add
popa
shl
pop
rclb
dec
daa
inc
inc
imul
mov
mov
xchg
daa
test
out
push
sbb
pop
mov
clc
pop
loope
add
push
mov
sub
adc
inc
inc
mov
pop
push
es
movsl
mov
pop
or
mov
mov
movsl
test
ret
adc
roll
repnz
pop
xor
or
cli
xchg
add
sub
and
test
mov
inc
jo
cmp
out
sub
pop
pop
into
push
outsl
call
jl
or
stos
out
pop
add
mov
pop
shr
xchg
mov
clc
add
or
rdmsr
xor
cmp
sub
push
sti
push
faddl
mov
hlt
aad
popl
cmp
mov
mov
movsl
push
mov
jbe
inc
xchg
adc
cltd
add
sub
push
add
mov
pop
sub
add
push
push
lods
sub
scas
test
es
ficomps
ljmp
xchg
sbb
jo
xor
push
arpl
xchg
jp
jno
mov
lods
or
push
adc
ja
sbb
rol
push
push
and
and
pusha
mov
ja
std
push
add
arpl
sahf
dec
lahf
sbb
add
outsl
pop
mov
mov
and
aas
out
les
or
enter
je
jb
bound
sarl
negb
and
xor
into
pop
mov
or
int
shrl
inc
dec
dec
dec
lods
ss
sbb
in
out
lods
dec
into
cmp
fcmovne
mov
sbb
jge
jl
xchg
movsb
in
nop
cmp
test
xor
xchg
mov
ret
pushf
xor
dec
cwtl
push
je
push
dec
jae
mov
sbb
xor
je
inc
or
dec
std
or
ja
add
sarl
int
dec
mov
fidivrs
jne
push
add
inc
ret
push
insl
hlt
sbb
inc
jno
fstp
insl
iret
jecxz
cmp
jno
push
jmp
cwtl
sub
roll
sarb
adc
shr
mov
xchg
push
daa
lret
bound
dec
sbb
repz
mov
popaw
ja,pn
dec
loopne
inc
mov
sub
dec
push
dec
in
push
and
jge
lock
xchg
push
dec
adc
test
popf
dec
cs
push
xchg
xchg
and
xchg
dec
inc
cmp
inc
adc
inc
addl
mov
mov
and
out
shrl
pushf
pop
testb
pop
inc
das
fldt
xor
subl
mov
aad
es
fisubrs
test
inc
verr
imul
sub
xor
lret
mov
mov
dec
pop
lcall
push
iret
popf
nop
orb
jne
sub
mov
cwtl
cld
pop
add
adc
dec
loope
xchg
sti
into
and
jge
add
repz
repz
dec
xchg
lret
stos
pop
sub
sub
int3
aaa
inc
std
xor
mov
xchg
sbb
stos
mov
fmuls
xchg
adc
ljmp
add
lret
sbb
jb
test
pop
sbb
fmuls
sbb
pop
aaa
push
add
jle
sub
pop
call
popa
fbstp
fstl
rcl
adc
rclb
mov
mov
mov
leave
test
mov
cmp
leave
scas
les
das
cli
cmp
pavgw
mov
mov
xchg
xor
idivl
jno
mov
mov
arpl
addr16
mov
aas
jge
push
insl
mov
sbb
les
pop
jbe
ss
xchg
or
mov
lods
adc
repz
outsl
add
mov
jns
sarb
adc
and
leave
pop
jg
mov
pop
int3
lret
lods
mov
xchg
hlt
cli
test
lret
test
ror
adc
jae
pop
cmp
xorl
add
mov
outsl
add
dec
js
dec
cmp
movsb
sub
mov
fwait
in
push
lods
mov
clc
lret
xchg
popa
jl
sub
mov
inc
pop
sbb
mov
inc
pop
aaa
hlt
mov
pop
jnp
mov
into
mov
jne
jge
push
inc
pop
sti
sti
mov
repz
outsb
out
shr
xchg
mov
repz
pop
or
test
adcl
scas
mov
push
lods
cmc
jbe
je
icebp
mov
bound
jo
jbe
scas
dec
push
movsb
jl
lods
mov
test
mov
add
jo
adc
adc
and
fisttps
push
in
dec
mov
mov
xchg
or
out
inc
ljmp
xorl
ret
rep
lods
inc
lahf
or
test
in
mov
xor
mov
jno
and
mov
jl
insl
pop
outsb
scas
pop
or
mov
pop
push
mov
sub
sub
or
aad
xor
inc
sti
or
and
loop
int
ret
fdivrp
dec
push
lods
jle
aas
sahf
xchg
ljmp
rcr
frstor
in
lret
pop
xchg
mov
push
add
or
aad
sub
xor
xchg
hlt
xor
fwait
fwait
sub
outsl
das
loopne
fistps
ds
sbb
inc
mov
jle
popf
sub
jnp
loope
sti
imul
insl
mov
push
push
jg
outsb
jmp
mov
int
jbe
mov
jp
ljmp
aas
into
sbb
xor
lcall
fdivrp
out
repz
xor
je
test
nop
in
jno
scas
sbb
dec
test
lahf
push
lret
push
les
mov
mov
lcall
ficoms
mov
jo
add
sbb
xor
xor
in
ja
aad
hlt
in
test
rorl
fmul
fs
mov
cs
mov
sahf
add
test
in
xor
rolb
test
xchg
ret
mov
lahf
xchg
push
repz
stos
lret
push
jle
lods
je
iret
sbb
xor
stos
xchg
jne
loope
xchg
shlb
and
wbinvd
mov
iret
fists
add
cwtl
out
add
jbe
iret
mov
lods
inc
enter
xor
push
rorl
push
loop
stos
push
cmc
push
fcoml
in
test
out
sahf
inc
pop
mov
and
mov
cli
inc
sbb
mov
push
stos
fwait
or
sub
daa
mov
mov
es
cmp
ret
arpl
pop
xor
int3
push
pop
into
cwtl
imul
mov
push
xchg
and
add
ljmp
sbb
mov
arpl
scas
adc
pop
ja
imul
and
adc
bound
scas
mov
and
push
das
sub
jnp
jae
push
or
out
mov
jne
les
inc
and
or
jbe
stos
loope
jo
or
and
adc
pop
imul
aad
cli
xor
push
xor
dec
inc
add
stos
cs
push
in
into
push
popf
inc
xchg
mov
sahf
mov
mov
lret
push
inc
imul
or
cmp
xchg
ss
mov
mov
mov
rcl
clc
les
adc
adc
lcall
mov
cmc
mov
or
inc
jl
cwtl
dec
hlt
adc
cmpsl
push
int3
push
and
lahf
and
cmp
push
adc
sub
scas
shll
xchg
push
mov
jo
fnstsw
call
jge
xor
out
or
jne
mov
pop
jecxz
sub
addl
dec
xchg
sub
pop
aad
and
sub
push
mov
or
outsb
movl
sti
adc
dec
add
ss
ffreep
dec
shl
inc
arpl
jmp
sbb
dec
mov
popf
in
mov
test
dec
push
adc
lods
push
pop
je
sub
cli
push
mov
loope
daa
fs
pop
sub
cmpsl
rclb
mov
xchg
in
xchg
loopne
or
mov
cli
pop
jge
gs
ret
sbb
lds
mov
mov
pop
std
xchg
loop
dec
loopne
inc
pusha
ret
aas
sbb
shlb
fisubrl
mov
cmp
mov
dec
inc
rcr
jecxz
inc
stc
or
dec
or
add
xchg
mov
data16
mov
scas
cmp
and
movsl
mov
push
arpl
sub
mov
jmp
dec
cmc
pop
enter
adc
les
scas
xorl
or
mov
fs
mov
lds
push
cmpsb
cmpsb
cmpsb
loopne
movsb
rclb
xor
out
enter
addr16
jns
adc
cmp
repz
into
movsb
xor
pop
aaa
and
push
or
fldcw
mov
jae
out
dec
push
cmp
loop
xchg
leave
cmp
dec
test
in
dec
sbb
movsb
adc
leave
xor
push
cmp
cs
cltd
fistl
xchg
sub
sub
mov
inc
push
adc
imul
pop
popl
mov
push
imul
push
out
fwait
push
mov
pop
mov
or
cld
jo
sub
cmp
pop
jmp
dec
test
lock
pop
fnstenv
cmpsl
loop
pop
fcmovnbe
add
mov
xchg
movsl
push
lcall
test
ss
stc
test
xchg
jae
mov
inc
test
fs
ds
pop
dec
aad
inc
sahf
jnp
mov
add
push
fwait
sub
pusha
sbb
mov
pop
out
and
inc
mov
pop
imul
cmpsb
push
push
xor
jmp
icebp
adc
test
and
sub
movsb
test
lds
scas
jmp
ret
xchg
in
add
dec
test
sub
or
mov
leave
jbe
add
mov
inc
arpl
shrb
arpl
push
adc
mov
fwait
pop
outsb
pop
inc
cmp
sbb
in
and
lods
dec
xlat
fidivs
iret
mov
xchg
repnz
xchg
movsb
lods
and
dec
xchg
xchg
adc
inc
aad
pop
popa
lea
mov
mov
cmpsl
adc
push
scas
jp
test
cli
add
inc
xchg
fnsave
loop
data16
jl
sbb
inc
hlt
incb
push
or
rcrb
in
jo
push
xchg
cmpsl
mov
ja
sti
lcall
negb
cmp
das
lock
mov
out
jns
dec
ret
ffreep
and
cmp
lods
adc
adc
mov
or
dec
push
sub
push
dec
jmp
push
adcl
aaa
dec
pop
out
xor
jmp
fwait
xor
mov
sub
jne
stc
popf
cmpsb
rcr
idiv
lahf
lahf
aas
leave
aam
aam
jb
daa
push
ror
mov
dec
fcomps
sarb
mov
xor
cmpsb
xchg
aam
int
std
rorl
or
push
sar
push
fmuls
lret
xor
and
icebp
xchg
stos
jmp
ficomps
psrld
adc
pop
adc
in
test
mov
into
jbe
and
aad
sub
rcll
aad
add
rcll
jle
pop
adc
int3
sahf
mov
in
cld
xchg
fists
ret
mov
sti
cmpsb
scas
loopne
dec
out
pop
fwait
lret
andl
int
push
cmp
ficoms
out
mov
ret
leave
pop
pop
xchg
sbb
cli
mov
add
lds
repnz
aad
jns
mov
jbe
fisubl
pop
add
dec
jg
sub
xor
mov
lahf
dec
mov
stos
out
ljmpw
daa
mov
jo
push
fistl
sar
lods
negl
pop
sahf
jo
push
xor
pop
sahf
fdivp
loop
lahf
or
shlb
and
xorl
jecxz
popf
sbb
shll
sub
push
jle
cli
cltd
xor
or
mov
int3
mov
mov
into
sets
cmpsb
push
das
popa
cmpsl
xchg
jns
push
jnp
sbb
out
xor
lds
sub
and
aam
lods
xchg
dec
push
xchg
xor
mov
jno
push
add
mov
rorb
add
and
dec
xor
pop
and
fstl
sub
push
or
inc
rcll
icebp
pop
mov
gs
ja
adc
popf
pop
scas
add
jne
ret
cmc
ljmp
cmpsb
sub
insb
in
push
loope
jecxz
rcr
or
sub
jb
aas
iret
mov
mov
pusha
xor
inc
sbb
imul
sub
mov
or
mov
fucom
sbb
cmp
jmp
incb
xor
mov
sarl
dec
mov
inc
adc
jp
pop
fstps
push
dec
outsb
and
rclb
inc
shrl
shrl
push
and
iret
mov
movsb
nop
push
mov
pop
cmp
cmpsb
sbb
int3
add
sbb
lret
cmpsl
add
push
mov
les
xchg
pop
cmp
daa
sub
cmp
or
out
mov
and
invlpg
push
pop
sub
lods
jp
sub
in
inc
mov
xchg
enter
dec
mov
and
and
mov
adc
cmc
xor
sbbb
inc
xor
fdivrp
mov
xor
xor
loope
aad
mov
cs
out
enter
loopne
jnp
adc
out
jg
jp
sbb
add
mov
adc
sub
enter
ret
mov
jle
jnp
mov
jns
scas
jno
leave
cmp
scas
jg
inc
and
sahf
xchg
les
push
aas
dec
push
jg
popa
and
test
mov
incb
mov
bound
das
lret
dec
fists
mov
aad
popa
pushf
push
push
orb
ss
mov
fdivl
push
mov
divl
iret
cwtl
cwtl
inc
repnz
pop
inc
test
dec
jne
aas
or
pusha
mov
push
sub
test
movsb
outsb
push
push
mov
pop
cltd
pusha
int3
cltd
sub
adc
out
mov
ret
movsb
les
mov
outsl
mov
dec
cmp
xor
dec
sbb
push
pop
in
sub
adc
cmp
jae
and
neg
push
sbb
push
test
lcall
clc
xchg
ss
jo
mov
lret
xor
mov
fyl2xp1
das
sbb
sbb
dec
daa
jmp
and
into
adc
or
sbb
dec
pop
arpl
mov
cmp
dec
aam
jecxz
in
test
lret
negb
sbb
insl
inc
icebp
jbe
movsl
ficoms
outsb
lcall
adc
sub
add
mov
test
pop
movsl
cwtl
pop
inc
sbb
or
in
cmp
or
sbb
scas
vpmovmskb
out
xchg
decb
loop
xchg
ja
and
xchg
daa
pop
lds
pop
scas
lcall
movsl
neg
rclb
movsl
fsts
or
adc
cmp
adc
xchg
add
fsubl
scas
jnp
mov
xor
jbe
outsl
jmp
outsl
sbb
or
in
incl
or
je
sbb
lret
cmp
mov
sbb
push
inc
or
xor
je
pop
cmp
xlat
pop
mov
and
jmp
and
scas
pop
in
add
and
roll
push
faddl
sub
cli
sub
xchg
xchg
mov
pop
or
sbb
cmp
cmc
repnz
ljmp
and
mov
cmp
xchg
js
sbb
lahf
cmpsb
or
dec
cmpsl
ss
fldenv
add
pop
xor
pop
js
out
aam
lahf
mov
mov
outsl
aad
cs
mov
int
push
fs
aad
push
pusha
imul
inc
mov
adc
adc
jo
das
aad
pop
das
gs
imul
js
lods
sub
dec
ret
rcrl
in
jbe
mov
imul
jg
int3
fidivs
adc
or
inc
mov
adc
jge
dec
sub
dec
mov
data16
mov
fsubr
or
ficompl
jne
and
mov
dec
xlat
test
hlt
sbb
popf
mov
pop
mov
adc
or
addr16
jg
push
pop
xchg
xchg
or
hlt
fldl
cmp
ss
mov
adc
int3
fwait
les
addl
push
mull
cmpsb
nop
push
push
inc
and
pop
sub
xor
sub
or
and
addr16
rcl
cltd
pop
out
lods
std
mov
cmp
mov
adc
aas
and
mov
sti
push
mov
pop
ljmp
cmp
out
mov
xchg
push
aas
xlat
in
cmpsl
push
pop
push
pop
repnz
orb
add
jp
pop
outsl
loope
test
adcl
dec
lret
mov
mov
xchg
xchg
jg
fidivs
push
lock
or
fstps
cwtl
cli
and
lods
in
sbb
mov
jbe
mov
mov
movsb
dec
test
dec
std
hlt
pop
xor
or
sahf
fmull
sbb
cmc
bound
fiadds
jecxz
fwait
inc
sub
sbb
xchg
in
out
in
leave
scas
jecxz
sbb
mov
push
jmp
pop
push
repnz
mov
inc
idivl
mov
pusha
pop
inc
or
cmp
dec
fstp
xor
aam
xchg
mov
cmp
das
cmp
add
repz
pushf
pop
pop
jbe
mov
popf
fdiv
xchg
sub
push
push
imul
mov
outsl
cld
mov
add
stc
mov
jno
mov
cmp
test
jnp
or
shlb
sbb
aad
out
sbb
xor
mov
scas
inc
ds
fwait
sbb
mov
repnz
test
mov
xchg
pop
aam
or
loopne
dec
leave
dec
pop
data16
mov
xor
xor
test
out
fstps
jne
pop
and
push
sbb
pop
nop
mov
dec
cmpsl
add
mov
insb
xor
daa
mov
xchg
stos
jno
mov
mov
dec
mov
or
or
inc
mov
jo
jmp
pop
notb
pop
cmp
push
cmp
stos
mov
roll
push
cmp
cli
cwtl
mov
pop
sub
jge
sub
inc
pop
popf
adc
or
mov
inc
enter
sbb
push
enter
lea
fs
sub
cmp
push
das
inc
mov
aaa
es
inc
bound
jg
mov
mov
inc
jne
jmp
dec
ja
outsb
fimull
pop
repz
arpl
mov
cmc
or
or
jbe
and
ja
or
dec
outsb
out
add
sbb
lahf
add
les
bound
xchg
scas
cmp
cs
sbb
js
fiaddl
sbb
inc
jno
fsts
lods
pusha
in
icebp
xchg
mov
xor
pop
push
addr16
xor
ret
cmp
aad
mov
fwait
rolb
negb
pop
xchg
hlt
fstl
fldenv
in
xchg
sub
incl
mov
dec
es
sar
dec
mov
add
in
mov
idivl
cmpsb
lret
push
inc
inc
jmp
jno
xor
pop
int3
lea
imul
dec
mov
into
cltd
psrld
cmpsl
jo
add
xor
lret
arpl
in
mov
cmpsl
test
inc
sbb
jns
mov
aaa
sbb
mov
lret
cmpsl
sahf
scas
daa
mov
fistpll
pop
xchg
adc
insl
cs
mov
inc
dec
jl
jo
jae
cmp
pusha
cmc
push
cmp
xlat
mov
jne
lcall
xchg
and
sbb
mov
add
popf
fsubl
and
lret
sarl
xchg
out
and
sub
jb
mov
add
jb
push
fmul
inc
sahf
or
jle
push
test
mov
jnp
add
sbb
mov
pop
xor
ror
shll
inc
test
jne
pop
add
sub
fdivrs
stos
xchg
les
or
daa
fmuls
jp
ret
jmp
adc
dec
fstpl
cld
out
fadd
cmp
mov
movsl
js
ja
xor
imul
jae
notb
mov
inc
outsb
mov
dec
jmp
hlt
pop
aam
push
fidivl
mov
aad
push
in
rol
add
or
dec
ret
cmp
and
push
lret
lock
add
inc
lods
bound
sub
jne
jl
int
in
mov
xchg
nop
aam
adc
pop
out
mov
jle
in
push
mov
or
push
lods
lock
lret
add
jnp
sub
mov
mov
pop
inc
shrl
mov
inc
inc
daa
in
scas
iret
test
sub
bt
mov
movsl
repz
loopne
xchg
pop
cmp
inc
in
shlb
les
call
sbb
aam
sbb
insl
xor
ljmp
flds
and
sbb
mov
dec
fnstenv
rcll
pop
or
xor
and
cmp
pop
in
ljmp
fcmovnbe
pop
mov
mov
mov
pop
pop
pop
fs
stos
es
adc
sub
jnp
and
inc
xor
dec
or
push
lock
xchg
or
das
int3
imul
jg
movsb
enter
cmp
cld
mov
lds
test
das
mov
popa
jne
mov
xchg
lods
addr16
rcrb
xor
xor
ret
sbb
jbe
push
mov
cmc
and
data16
push
pop
popf
jl
clc
ds
or
mov
xor
aaa
int3
or
dec
inc
dec
stos
cmp
adc
mov
inc
or
rcr
and
and
gs
aas
xor
mov
push
xor
out
out
adc
push
sub
and
dec
jbe
xchg
mov
jno
clc
stc
pop
cmp
cmp
pop
mov
sbb
push
xor
jge
adc
sub
lret
dec
sti
hlt
inc
inc
xor
sub
sahf
inc
push
in
and
insl
jne
lods
add
jp
cwtl
or
inc
mov
mov
xchg
imul
stos
mov
outsl
movsl
jle
cli
cmp
jmp
dec
adc
out
in
pop
test
pop
lret
ja
or
push
rolb
arpl
sahf
pusha
test
mov
mov
jmp
repnz
cmpsb
or
pusha
pop
and
shll
push
lahf
idivl
fiaddl
shll
ret
or
pop
fmuls
les
jns
xlat
daa
scas
push
daa
jnp
mov
fcomip
std
cmpsl
adc
movsl
or
out
jns
lds
movsl
mov
sub
aad
pop
xor
jp
les
cmp
xchg
insb
pop
sbb
xor
jno
pop
and
adc
xchg
push
and
lret
clc
into
push
add
adc
test
ror
shll
push
test
pusha
jo
int
popa
pop
mov
fbld
inc
xlat
xor
gs
cmp
pop
inc
add
dec
and
push
into
mov
xchg
add
das
xchg
dec
add
stc
repnz
mov
test
ficoml
incl
movl
shl
in
inc
jl
addr16
jne
int3
xchg
mov
cmp
jno
stos
imul
aam
xchg
jae
scas
jnp
dec
jl
out
jmp
pop
test
pop
xlat
roll
aam
outsl
icebp
adc
es
cmpsl
mov
sub
cli
push
mov
rcl
aaa
outsb
imul
lret
fistpll
and
or
std
bts
popa
mov
pushf
or
jo
popl
xchg
jmp
mov
repz
xor
adc
fstpl
dec
pop
pop
cmp
insb
push
mov
or
insb
lea
fsub
leave
out
arpl
notb
cmp
roll
rclb
imul
xchg
hlt
fsubrl
mov
mov
rorl
call
mov
or
inc
nop
lock
mov
mov
dec
push
adc
or
push
in
nop
mov
loope
loop
inc
sbb
cmp
call
addl
xchg
rcr
inc
pop
cltd
ljmp
cmp
jnp
dec
mov
push
fildll
ds
outsl
int
mov
int3
insb
fstps
or
adc
xor
cmpsb
mov
mov
data16
ja
push
jo
stos
and
xchg
outsl
sbb
rclb
mov
js
subl
lods
xchg
push
jb
orl
enter
fld
jb
in
mov
mov
loopne
daa
xchg
je
addr16
fdivl
bound
faddl
jg
adc
or
and
dec
aas
cmp
cmc
jae
lret
dec
roll
inc
sbb
mov
rcll
push
hlt
mov
outsl
test
les
push
in
idiv
push
jl
imul
cs
push
repz
mov
clc
ss
std
vprotb
adc
cs
jo
adc
pop
sub
rcll
dec
cmp
rol
fisubl
adc
aaa
jmp
add
rcr
lock
enter
push
lcall
and
rcl
iret
jb
xchg
or
cmpsl
or
adc
nop
cmpl
add
mov
fidivrs
mov
xor
notl
int
cmp
xchg
adcl
dec
into
xchg
push
pop
mov
repnz
mov
fstps
jns
outsb
and
fs
xchg
fldcw
ja
jge
call
inc
faddl
xor
aad
xlat
pop
stc
push
and
rol
ficomps
push
fstpt
or
int3
imul
mov
cltd
sbb
dec
out
pop
jns
ss
and
out
lods
adc
lods
sbb
or
inc
adcl
pop
in
fists
int
mov
in
cmp
movsl
jnp
cmc
mov
dec
cmc
and
push
jnp
into
sarb
fisubrl
das
out
push
adc
jns
sarl
xchg
mov
lods
cmp
and
xor
out
dec
push
push
cmc
leave
mov
sti
mov
leave
lock
lret
push
xchg
sub
xchg
leave
jne
cmp
or
rcll
add
pop
mov
aas
loopne
fcompl
jge
fsubrl
insb
xchg
movsb
movsl
add
adc
out
or
aas
imul
lcall
cltd
mov
sarl
xchg
xor
xchg
popa
inc
ljmp
insl
sub
and
repnz
insl
cmp
ret
cld
or
cmc
mov
and
repnz
jl
enter
ljmp
and
shlb
lods
pushf
das
mov
outsb
fisubrl
loope
inc
mov
fwait
or
jbe
cmpl
mov
stos
jbe
fldl
adc
sbb
js
enter
xlat
fldt
dec
loope
jmp
clc
les
jno
xchg
push
jne
rcl
push
dec
test
push
fisubs
mov
xor
inc
and
rclb
lahf
ds
xor
or
mov
fmulp
outsb
cmpsb
sub
sahf
test
sub
fldl
or
shr
test
or
mov
bound
sbb
out
push
push
ds
outsb
data16
inc
out
pop
and
xorb
rcll
frstor
loop
lea
jns
out
sbb
add
dec
xchg
jle
and
les
jne
push
gs
pop
rcrl
loopne
jo
div
int3
adc
jmp
sahf
jmp
mov
mov
add
rcll
test
test
dec
cmpsl
std
lcall
and
cltd
out
scas
sbb
mov
mov
xchg
cmp
push
mov
jmp
cli
inc
scas
pop
jnp
lcall
loopne
inc
stos
sub
xchg
mov
enter
pop
jne
rcrl
mov
jno
in
popa
in
mov
lods
ret
aas
out
jmp
decb
add
out
pop
mov
incl
sub
inc
setp
mov
sbb
dec
mulb
xchg
sub
jl
pop
loopne
out
mov
or
dec
add
fwait
dec
mov
jg
add
dec
aam
in
test
idivb
or
jae
mov
inc
sti
cmp
repnz
pop
gs
sub
ss
imul
dec
shll
xor
push
cli
cld
dec
inc
ja
push
mov
push
mov
cmp
pop
inc
adc
cmpsl
pop
mov
gs
push
mov
inc
scas
sahf
push
pop
mov
inc
les
jge
shl
sar
lock
insl
or
adc
sbb
sub
inc
push
fldl
in
dec
lods
adc
into
pop
pop
test
adc
and
xchg
lds
add
xchg
test
cmp
push
push
jge
int3
movsl
aas
out
mov
inc
lock
fsubs
mov
pop
jo
xlat
lcall
test
imul
adc
fistps
ds
pop
and
shrb
test
mov
add
fstpl
ss
mov
mov
movsb
xorb
xchg
pop
xchg
aad
mov
adc
or
outsb
test
and
arpl
sbb
lcall
sbb
cli
jecxz
faddp
shrb
mov
xchg
mov
mov
in
jl
cli
dec
cmc
imul
scas
push
iret
fistps
cwtl
xchg
test
bound
cmp
mov
nop
sbb
pop
mull
mov
sahf
dec
les
fimull
in
sbb
jmp
test
lret
pop
sti
sti
and
mov
cs
mov
xor
popa
popf
push
call
fmull
add
jmp
out
test
push
sti
jnp
and
fcomps
pop
clc
mov
lret
xchg
mov
lcall
mov
test
insb
cmp
fists
add
add
mov
jnp
pop
stc
pop
mov
outsl
xchg
fistpll
outsb
cmc
add
push
scas
hlt
add
imul
fsub
ret
data16
add
pop
ret
lret
jecxz
xchg
fwait
lcall
mov
repnz
cmp
out
jbe
aas
sbb
lea
gs
psllw
lahf
ret
inc
imul
std
fdivl
jmp
jle
loopne
sarb
xor
jo
sbb
movl
adc
push
push
lahf
frstor
pop
adc
or
frstor
int3
and
inc
pop
mov
xlat
dec
cs
enter
int
out
jecxz
leave
push
aad
xor
and
and
loopne
jmp
xor
mov
loope
jmp
movsl
push
testb
dec
scas
fsubrs
sbb
jecxz
call
jb
mov
xor
jle
in
negb
sahf
in
sub
inc
sbb
aas
repz
xor
ss
push
adc
aas
into
repnz
das
rolb
pop
jle
lods
movsl
sti
adc
pop
rolb
dec
mov
cmp
jns
cwtl
lahf
adcl
stc
out
mov
inc
outsb
insl
sub
sub
mov
inc
adc
mov
mov
jmp
mov
popf
pushf
test
or
in
lods
lretw
pop
jnp
sub
aaa
jbe
xchg
fidivs
add
std
gs
and
adc
out
mov
xchg
cmp
xlat
add
icebp
inc
movsb
mov
sbb
inc
shll
push
push
in
inc
mov
sbb
daa
das
repnz
cmp
arpl
push
ja
cmp
mov
out
test
sub
gs
repz
cmp
and
inc
iret
fidivrl
jno
sub
mov
aaa
sub
lcall
adc
xor
jp
dec
mov
cmp
cmc
ja
sbb
mov
push
sub
int
xchg
cmp
xchg
xchg
mov
loopne
sbb
add
pusha
arpl
adc
int
imul
inc
loope
out
add
aad
das
int
imul
inc
popf
adcl
clc
cmp
dec
imul
out
dec
push
ret
or
test
adc
in
ljmp
dec
mov
cli
push
enter
fistps
mov
jl
mov
inc
dec
or
sub
mov
ret
push
pop
testb
mov
fstpt
nop
scas
xchg
jns
mov
out
push
imul
jl
ret
clc
inc
inc
pop
outsb
pop
inc
mov
xor
jne
out
inc
and
cmc
dec
repz
repnz
paddd
pop
xchg
push
push
cmp
movsl
ja
xchg
fcomi
jl
mov
mov
cli
mov
mov
pop
push
in
xchg
sbbb
add
lea
lcall
pop
mov
cmp
pusha
stc
test
cmp
jbe
cmp
sub
jbe
nop
int
repz
sub
or
pop
popa
fwait
aam
iret
in
cli
inc
lcall
ficoml
or
mov
pop
rolb
out
sub
subl
dec
int3
and
xor
mov
das
adc
ss
mov
lcall
jge
xchg
andl
add
jge
stos
jmp
jo
ljmp
sbbb
lcall
imul
pop
lock
xchg
fs
adc
movsb
mov
push
ljmp
or
inc
mov
mov
outsw
xchg
xor
sub
out
mov
movsb
popf
sarl
and
xor
adc
stos
mov
cmp
movaps
xor
repz
filds
lahf
loopne
gs
hlt
rcrl
add
lds
sti
mov
pop
jb
lds
mov
daa
cwtl
pop
lods
lock
outsl
aas
scas
xor
in
mov
sub
adc
arpl
fisubrs
fimuls
or
insl
mov
pop
shll
sahf
inc
sti
cld
fnsave
aad
xlat
decl
outsb
push
push
adc
daa
cwtl
pushf
rcrl
jle
inc
hlt
xor
adc
repnz
out
pop
addb
mov
jae
mov
imul
and
leave
or
pop
insl
mov
faddl
mov
rcrb
xor
dec
cmp
repnz
jmp
jae
fisubl
push
inc
inc
jbe
sbb
inc
int
mov
xchg
ljmp
jl
add
add
mov
movsb
icebp
clc
jns
lock
jmp
push
daa
out
adcl
dec
push
inc
jbe
jge
cmp
fldt
adc
sub
popa
andb
jns
stos
int3
pusha
out
cltd
dec
std
movsl
jge
xor
inc
add
aas
out
mov
data16
jo
pop
je
lock
and
mov
mov
aas
jo
pop
nop
xchg
xchg
xchg
xchg
out
repnz
shlb
cli
cmc
push
and
jb
icebp
dec
addr16
or
loop
push
inc
repnz
enter
dec
loope
js
xchg
add
mov
jecxz
in
sub
jecxz
shld
mov
mov
ret
fists
pushf
dec
dec
jmp
jecxz
push
mov
push
fcomi
icebp
adc
adcb
jae
jne
or
sub
decl
adc
xor
in
je
inc
dec
loop
addl
pushf
mov
data16
push
sbb
cmp
inc
push
lret
repnz
rorb
fsubl
add
jecxz
in
scas
stos
pop
loop
dec
dec
fs
cmp
mov
orl
mov
bound
push
insb
mov
dec
cmpsl
lods
ds
xchg
push
cmp
enter
roll
lea
push
out
mov
xchg
lock
adc
arpl
add
xor
ljmp
repnz
jp
jle
mov
lahf
dec
in
cs
xchg
xchg
xlat
je
pop
push
or
cmp
insb
push
testb
movsb
shl
pop
aam
adc
sarl
outsb
rclb
out
std
repnz
test
jl
rcl
cld
arpl
mov
shlb
mov
mov
stos
lods
call
dec
mov
xchg
lcall
es
outsl
xor
and
loope
dec
daa
stc
test
xchg
adc
sbbl
or
mov
sbb
or
in
movsl
aad
sub
add
shll
ja
push
ret
cmp
es
lret
mov
jg
pop
fisubl
dec
sub
cli
popf
cmp
jb
shl
scas
insb
and
hlt
xor
aad
cmp
mov
xor
mov
and
inc
mov
rcrb
aas
mov
ja
fsubrs
subb
mul
frstor
add
dec
push
push
mov
ljmp
adc
mov
stc
xchg
out
mov
in
inc
jb
pop
dec
jno
lods
fists
xorb
pop
adc
jecxz
movsb
dec
iret
aam
inc
outsb
mov
cmpb
inc
out
jno
or
jg
pop
inc
ds
aam
mov
negb
fistps
cld
enter
xchg
push
pop
cs
fcmovu
add
pop
cmp
xor
inc
dec
sbb
shl
mov
xor
mov
push
mov
cwtl
xchg
scas
or
push
loope
mov
sbb
fucomi
pop
xor
iret
pop
pop
inc
push
test
js
mov
movl
mov
jae
xchg
cli
loop
lods
std
and
mov
mov
les
dec
dec
sbb
movsl
push
cmp
in
ss
jne
mov
enter
inc
cmp
xor
out
inc
jg
jne
jbe
nop
xor
iret
xchg
inc
pop
or
sub
js
pop
push
sub
mov
sbb
sahf
lods
dec
mov
and
cvtps2pd
cltd
stos
rcl
push
addr16
ret
and
hlt
enter
pop
push
int3
pushf
xchg
dec
xor
cmp
shlb
sub
dec
push
push
stos
gs
ss
xchg
cmpsb
sub
lea
nop
sbb
stc
sub
pop
out
mov
dec
xorb
lods
cmp
popa
pop
mov
push
int3
fldcw
ja
ffreep
dec
add
cmpsl
dec
outsl
mov
cmp
loop
push
pop
sub
jmp
aaa
cltd
loopne
pop
push
sbb
inc
dec
sub
clc
mov
in
sbb
fmul
sarb
shll
dec
stos
inc
cmp
shl
inc
lahf
cltd
push
jae
mov
push
shlb
dec
ja
adc
sahf
adc
aad
pop
pop
daa
xchg
iret
adc
push
divl
xor
les
lret
stos
xchg
ficompl
jmp
xchg
add
aas
test
adc
orl
fwait
sbb
cs
fdivrl
dec
shrb
addl
jg
testb
xchg
mov
xor
inc
and
fdivrl
imul
lods
push
sti
adc
mov
sbb
push
xor
xchg
and
lret
aas
sub
xor
push
jnp
and
mov
sub
mov
orb
sbb
clc
mov
add
outsl
add
or
movsb
out
in
pop
das
xlat
repz
mov
cli
xchg
les
das
pop
aad
jbe
cwtl
pop
xchg
sbb
icebp
ss
mov
mov
dec
sti
roll
add
mov
iret
mov
sub
in
aad
inc
outsl
cwtl
mov
scas
adc
pop
pop
push
pop
iret
std
jl
es
loopne
aaa
inc
sub
adc
imul
mov
jecxz
mov
stos
movsb
icebp
sub
shrl
fstpl
fs
xor
rclb
mov
insb
stc
sub
sbb
or
add
test
sub
jmp
lods
sub
inc
sbb
stos
loope
adc
xchg
mov
sbb
clc
push
xchg
inc
pop
push
andb
ss
scas
in
inc
jnp
test
jbe
xchg
cwtl
data16
daa
enter
into
inc
aas
or
xor
mov
jne
jbe
and
mov
adc
sub
ficoms
mov
mov
add
jecxz
in
cmc
xchg
or
cli
adc
leave
popf
lahf
fadds
aam
mov
ss
inc
int3
mov
data16
stos
push
gs
add
jl
fimull
sub
xchg
out
mov
out
push
mov
xchg
stos
sbb
inc
cmp
push
inc
jl
in
pop
and
push
sub
mov
fidivs
add
push
or
popf
push
leave
test
cmp
pushf
daa
es
loope
adc
popf
sub
insb
in
push
inc
and
cmp
imul
xchg
push
mov
cmp
or
adcb
repz
xor
mov
cmc
shlb
mov
std
in
fistpll
mov
in
mov
push
lock
incl
cmp
sub
push
test
mov
ret
test
jmp
cmp
or
or
cmp
sti
jae
dec
test
ret
push
inc
xchg
pop
and
jns
or
pop
cmp
inc
fistps
push
jle
and
inc
pop
adc
mov
push
cwtl
icebp
mov
in
jb
sahf
aam
jne
movsb
push
out
push
jp
into
stos
shrb
jnp
jl
cmc
subb
inc
xchg
xor
dec
inc
test
outsl
push
mov
pop
or
mov
mov
fs
and
cmp
inc
icebp
test
xlat
push
jb
loope
pop
test
push
pop
mov
ss
int
xlat
xor
call
fistpl
scas
xor
adc
rcll
jae
sbb
dec
sbbb
push
push
jne
add
movsl
aam
leave
out
fs
jmp
adcb
repz
mov
lods
out
pop
lds
in
ljmp
push
push
cmpsl
shr
mov
js
sub
push
push
int
inc
sub
leave
ds
fidivs
outsl
lods
or
or
dec
mov
mov
std
mov
xor
stos
xchg
sbb
lods
or
cmc
fildl
xchg
shll
fstp
pop
push
pop
mov
sbb
gs
fistps
sahf
nop
xchg
mov
xchg
nop
push
mov
add
xor
and
mov
jmp
sub
ficoml
call
mov
aad
stos
in
sbb
add
jns
sub
aaa
sbb
incb
pop
pop
ret
sub
mov
xlat
das
xor
cmp
mov
negl
mov
int3
mov
inc
mov
xchg
add
insb
nop
and
mulb
sarb
jo
int
arpl
gs
imul
leave
mov
out
mov
in
daa
negb
xchg
jg
rclb
test
fwait
in
cs
inc
lds
test
and
ror
adc
rclb
inc
mov
jecxz
dec
subb
xchg
gs
sbb
rcrb
aam
mov
pop
push
stc
add
pop
and
arpl
xchg
test
aaa
fsubr
repnz
mov
outsl
and
push
pop
add
or
or
insb
xor
movsl
loopne
add
push
push
add
aaa
in
push
adc
sub
pop
inc
test
cmp
push
add
mov
push
mov
push
add
pop
lds
out
pusha
rclb
sub
dec
ret
cmpsb
dec
push
push
std
add
pusha
adc
pop
or
cmpl
pop
pop
adc
push
fildll
out
jnp
mov
pop
push
fdivl
in
dec
loop
sub
xor
lret
jge
xor
in
and
gs
cmp
fsub
iret
out
repz
daa
jmp
std
xchg
adc
iret
inc
xor
push
cmp
mov
sub
xlat
mov
sub
adc
mov
cmp
test
push
popf
adc
fdivr
xchg
inc
inc
mov
cmpsl
ss
inc
mov
div
js
mov
cmp
xchg
cmpsb
scas
xor
cli
jg
mov
hlt
aaa
mov
fs
rclb
mov
sti
pop
and
jl
daa
je
js
aam
stos
mov
fdivl
pop
xchg
dec
aaa
mov
nop
dec
mov
movsl
xchg
dec
cltd
lods
sub
add
pop
insl
add
in
mov
arpl
adc
insb
lds
xchg
fs
inc
mov
xchg
movsl
dec
mov
mov
push
mov
pop
push
mov
std
push
psubusw
push
int3
icebp
scas
incl
xchg
or
push
pop
sub
rolb
mov
jle
out
mov
addl
fdivrs
mov
repz
jle
jnp
and
decl
outsb
or
dec
shl
cli
aam
repz
out
and
jae
mov
adc
ds
push
stc
cmp
call
call
xchg
div
sbb
imul
std
adc
lret
cmp
cwtl
inc
ret
push
and
inc
ret
cmc
aaa
daa
mov
lock
inc
mov
sub
lahf
lods
cmp
push
test
rorb
je
adc
pop
fnstcw
xchg
out
loope
and
lods
loop
fstl
and
sarb
jge
lahf
and
daa
addr16
jp
and
smsw
hlt
mov
push
mov
faddl
mov
push
insl
daa
and
inc
insb
loopne
mov
mov
mov
adc
hlt
jmp
hlt
jno
sub
hlt
mov
mov
pop
sub
push
leave
out
lods
imul
andb
inc
repz
addb
add
fucomip
into
push
cmp
xor
popa
dec
jge
jle
scas
aad
dec
jg
shrl
fwait
jo
cld
out
pop
adc
xchg
clc
test
push
popf
add
sub
jno
sbb
pop
sub
clc
dec
sti
pop
xor
add
insb
outsl
fildll
mov
jmp
mov
inc
fs
xor
add
out
push
jmp
mov
loop
ror
fsts
jmp
xchg
push
xor
leave
xchg
add
mov
mov
std
inc
popf
inc
std
loope
int3
mov
fcompl
mov
inc
or
pop
xor
lret
mov
add
sbb
pop
aam
jae
ret
lds
hlt
sbb
pop
mov
inc
imul
movb
cmpl
dec
mov
add
repz
cmc
inc
pop
pop
fstpt
cmpl
mov
lock
add
adc
xor
fidivrs
xchg
xchg
clc
add
push
lcall
out
sub
push
add
movsb
repz
ror
inc
cmpsl
pop
pusha
loope
cmovl
push
xchg
pop
inc
fs
scas
aaa
and
js
or
fstpl
data16
xchg
mov
test
shl
or
setb
jecxz
setg
mov
stc
lahf
loope
sbb
jb
jns
into
popf
pushf
clc
cli
cmc
in
lea
test
fsts
fisttpll
aad
aas
decb
shrb
xor
and
mov
dec
mov
mov
lret
add
mov
test
das
add
inc
jl
and
pop
push
outsl
int3
dec
xor
lea
ss
pop
and
sub
nop
mov
outsb
aaa
add
cmp
data16
jmp
dec
mov
bnd
int3
repnz
call
add
std
pop
pop
jbe
adc
sub
sahf
insb
pop
cmp
push
push
iret
enter
and
push
out
mov
nop
popa
inc
xorl
inc
das
lea
sub
shl
mov
int
arpl
inc
lret
cmp
pop
dec
inc
out
and
cmpsb
icebp
mov
into
ljmp
mov
push
mov
movsl
les
mov
dec
scas
imul
adc
sbb
popa
xchg
mov
sbb
ja
jmp
mov
faddl
sbb
aam
aas
faddl
addr16
popa
test
outsb
pushl
lea
jl
fs
sti
mov
adcl
push
in
xor
movsl
ljmp
and
jge
sub
jp
xlat
mov
sub
mov
dec
adc
mov
sbb
in
mov
sub
stc
insl
sub
out
ds
or
popa
adc
dec
int
aad
sub
mov
xor
sti
or
repz
mov
js
cli
cmpsb
add
jle
jle
pop
mov
add
pop
inc
adc
cmp
ds
jge
icebp
add
jb
std
loopne
push
xlat
sub
adc
shlb
pop
adc
dec
jmp
adc
xchg
mov
pop
or
loop
dec
in
les
mov
aas
mov
inc
or
scas
inc
test
ja
call
pushf
out
out
mov
mov
mov
sti
lret
mov
addb
xor
inc
cmp
shrl
jg
push
out
ret
lcall
scas
fdivrs
cmp
jbe
loop
clc
in
orl
mov
sub
std
fdiv
pop
cmp
mov
xchg
fwait
test
iret
lcall
inc
push
mov
sub
lds
pop
and
pusha
aas
jp
loop
pop
sti
je
call
imul
cmp
aad
jmp
mov
cmp
in
nop
ja,pt
mov
jo
ret
cmp
ret
xchg
cmp
fdivs
jne
inc
hlt
mov
icebp
mov
rcrb
fs
leave
cmp
mov
xor
mov
and
dec
fstp
cwtl
cmpsl
std
jp
lcall
mov
push
mov
add
fnsave
lret
shl
in
inc
insb
lods
or
jno
stos
xorb
clc
mov
jmp
mov
cmp
in
jno
cwtl
je
call
adc
icebp
push
pop
scas
push
push
jl
xchg
mov
hlt
aas
movsl
jne
dec
in
jo
in
xlat
pop
scas
orb
push
mov
shll
enter
imul
mov
jg
imul
inc
bnd
adc
fsubrl
push
clc
test
int3
lret
sub
inc
mov
sbb
add
movsb
inc
sub
sub
or
sub
fsubrs
sbb
xor
cld
mov
push
test
pop
mov
cs
loope
fldt
or
dec
cmp
mov
loop
cmp
jmp
cwtl
jmp
mov
repnz
jnp
add
ret
cld
sbb
jae
xlat
xor
inc
imul
xchg
jmp
xorl
pusha
mov
or
mov
or
dec
push
cmpsl
push
mov
rol
jbe
add
pop
xor
dec
sbbb
stos
push
pop
push
in
xchg
add
ja
and
dec
jns
dec
pop
sbb
leave
bound
movsl
in
inc
popa
repz
outsb
push
lret
scas
scas
lds
or
push
shrb
inc
outsb
add
les
fucomip
nop
repnz
or
lcall
adc
cs
adc
loopne
das
hlt
jnp
pop
mov
and
das
sarl
in
xor
mov
loopne
dec
int3
mov
jle
lahf
out
mov
lea
pop
mov
mov
push
jg
sbb
test
stos
cmpsl
fisubl
jecxz
inc
push
mov
je
int3
int
lret
rcr
out
dec
mov
insl
sbb
andb
inc
aaa
outsl
add
mov
fcompl
bound
rcrl
pop
out
into
repnz
push
jge
cltd
xchg
adc
fstpl
popa
out
sbb
sarb
mov
mov
mov
cmp
pop
xchg
fildl
hlt
mov
popa
and
cmp
insb
test
push
and
or
xor
adc
xchg
adc
jmp
scas
mov
lea
mov
sbb
add
je
cmovnp
push
sbb
stos
rorb
fisubs
aaa
push
loop
sub
xor
lock
dec
test
icebp
sbb
arpl
scas
xchg
lods
fcompl
jg
push
pusha
in
call
sub
stos
jp
stos
dec
xchg
movsb
ja
cli
fidivrl
pop
sbb
xchg
pop
push
out
icebp
aam
sbb
push
andl
popf
cmp
mov
pop
std
lods
shl
mov
orl
cmp
bound
xlat
test
cmpsb
inc
xchg
outsb
push
or
or
and
push
faddl
fwait
cmp
push
inc
inc
dec
xchg
add
sub
mov
loopne
mov
sub
mov
add
fdiv
jle
call
hlt
sub
iret
mov
mov
pusha
sbb
pop
popf
sbb
inc
xchg
cltd
dec
inc
dec
xchg
cmp
mov
add
inc
repz
shl
cmpsb
lahf
sub
out
cmp
xor
xor
insb
imul
xor
sub
mov
or
jl
mov
je
rcrb
sti
int
shlb
dec
jmp
into
sub
je
pop
rorb
aad
xor
mov
add
pop
js
movsb
je
inc
pushf
or
jg
xchg
jae
ficoms
mov
stos
cmp
mov
sbb
loopne
loopne
rcrb
not
adc
std
push
call
pop
movq
popa
push
mov
cltd
nop
stc
es
bnd
add
push
cmp
ret
mov
mov
jae
aaa
jno
add
out
lods
cmp
cmp
sub
in
pop
lods
adc
and
fadd
roll
stos
aam
push
lret
loop
inc
xor
sub
mov
faddl
std
mov
push
mov
sub
ljmp
mov
es
and
add
dec
adc
nop
xor
pop
inc
cmp
mov
repz
into
ja
mov
ds
hlt
sbb
add
les
dec
mov
and
or
fcmove
push
int
push
cmp
push
xor
testb
xor
add
dec
push
out
rcr
stos
mov
ss
mov
sahf
sbb
movsl
pop
imul
imul
sub
pop
in
fdivrs
push
xchg
adc
pushf
ja
repnz
add
mov
xor
aam
arpl
mov
repz
cwtl
cltd
aaa
in
out
lds
mov
push
jp
sub
mov
fistpll
and
cmp
jecxz
stos
sbb
adc
mov
outsb
jb
in
pop
mov
ret
push
add
mov
testl
xor
ret
xor
xchg
loopne
pop
aas
in
mov
fs
dec
jmp
cltd
xor
sbb
jns
cmc
push
popf
aas
dec
pop
xlat
aas
jns
clc
cmp
shr
xor
jl
pop
sub
dec
cmpsb
push
fcoms
ret
jns
and
push
rcrl
mov
sbb
cmp
push
xchg
gs
es
and
rclb
out
inc
sub
dec
mov
imul
mov
into
pop
jo
and
mov
hlt
jns
scas
adc
sahf
test
mov
push
mov
xor
mov
add
add
mov
sub
inc
mov
inc
in
aaa
pop
dec
jmp
shlb
push
stos
aas
sub
or
ror
in
ret
mov
mov
sbb
shll
nop
xchg
aad
lea
lock
out
out
cmp
sub
adc
jge
xor
outsl
lock
add
mov
jle
push
add
sbb
test
dec
repnz
movsl
in
and
cmp
dec
scas
jl
stos
xchg
jmp
sbb
fdivrs
scas
cmpsb
push
nop
dec
mov
movsl
imul
pop
add
jp
je
rcll
mov
faddl
pop
xchg
ret
clc
sbb
ror
mov
lock
out
ljmp
push
mov
rclb
and
cmp
fildll
lds
pushl
das
push
dec
lds
inc
enter
xchg
bound
xchg
es
fsubl
outsb
dec
ja
jmp
sbb
fldcw
out
outsb
pop
fldt
pop
rorb
int3
push
adc
aas
push
inc
push
popw
cmpsb
xchg
insl
out
mov
sbb
je
mov
mov
int3
mov
in
test
inc
cld
mov
and
mov
mov
inc
je
add
cli
pusha
push
ja
call
lret
sub
outsl
cltd
lahf
mov
fwait
and
test
enter
fildll
xchg
or
sub
lock
icebp
sti
and
imul
jmp
ret
pop
popf
xchg
xchg
lea
fisttpl
push
and
imul
mov
insb
push
jnp
test
gs
lcall
cmp
outsl
adc
fildll
test
jmp
cmpsl
mov
movsb
jmp
ds
lcall
dec
lahf
in
test
mov
mov
adc
or
mov
in
inc
adc
mov
push
ret
xchg
cmpsb
shlb
sub
mov
jmp
sbb
add
in
gs
dec
cld
and
mov
adc
sahf
rclb
outsl
pop
cmp
sbb
adc
xor
mov
incb
bound
leave
mov
or
dec
scas
fwait
inc
lret
dec
mov
xorb
pop
adc
xchg
jns
imul
and
mov
ret
arpl
pop
inc
or
dec
mov
incl
pop
aad
push
mov
sub
or
cmp
rcll
jnp
leave
push
jb
or
int
fldcw
fidivrs
cmp
loop
push
es
pop
xchg
sub
sub
jecxz
iret
pop
mov
or
sub
and
pop
fwait
int3
out
or
das
push
stos
out
mov
ljmp
movsb
push
jmp
cmp
shl
inc
adc
int3
popl
cmp
sub
pop
mov
jns
pop
mov
inc
rolb
test
or
adc
xchg
adc
pushf
or
faddl
int
divl
or
sbb
shl
push
dec
insb
dec
or
adc
pop
push
mov
mov
xchg
adc
jbe
push
es
out
push
pop
push
pop
out
test
mov
aaa
or
imul
aam
insl
mov
add
xor
inc
or
mov
lea
cli
cmp
sti
dec
mov
outsl
pop
ds
mov
push
jl
das
cmc
xchg
fbld
adc
adc
mov
xchg
sbb
rolb
or
dec
lds
mov
dec
push
ja
stc
jp
sub
sbb
push
in
jp
and
inc
cmp
dec
push
cmp
inc
cli
stos
insl
adc
scas
lods
nop
mov
dec
jno
movswl
xchg
cld
pop
or
push
jge
xorl
and
negb
pop
jecxz
sbb
ret
cltd
cli
jnp
adc
cmp
aad
pop
jb
call
ds
lods
test
and
push
ds
jg
in
data16
repz
xlat
jne
mov
inc
pop
xor
xchg
call
jno
dec
sub
arpl
xlat
jge
adc
and
sahf
out
std
ficomps
mov
or
jae
in
xchg
fbstp
insb
inc
mov
cmp
mov
sub
add
sarb
repnz
xchg
clc
dec
mov
movsl
push
bound
addl
rcr
sbb
ss
lock
mov
mov
or
xchg
xor
xadd
push
xor
outsl
xchg
xor
mov
ret
xchg
repnz
negl
pushw
jae
mov
daa
mov
xchg
test
loope
inc
aas
insl
dec
jne
mov
push
xchg
scas
fs
adc
xchg
inc
shl
ret
pusha
sub
aad
sub
push
dec
outsb
or
inc
mov
xor
xchg
or
mov
xor
cs
test
shlb
mov
movsl
int
sbb
je
imul
outsl
cs
in
xor
and
mulb
imull
mov
scas
push
mov
inc
inc
push
pop
xchg
push
and
stos
mov
ljmp
xor
pop
icebp
push
cmp
stc
or
push
jge
cmpsl
pop
test
push
cltd
sub
fistpl
cmp
dec
jnp
dec
ljmp
push
sub
jl
mov
xchg
mov
aaa
pop
push
jg
les
jb
lock
lgs
fbstp
data16
xorb
xchg
or
mov
pop
mov
dec
and
call
daa
mov
xchg
lahf
add
loope
dec
cltd
cmp
xor
cmp
adc
push
cmp
lds
cmpsl
sub
and
or
sbb
xchg
bnd
mov
data16
aam
js
add
mov
mov
aas
sub
addl
cmp
and
mov
push
pop
sub
xchg
xor
bound
push
loopne
ljmp
in
push
imul
add
jle
int3
pop
sbb
addr16
sti
bound
aam
jecxz
fisubrl
mov
mov
jg
xchg
sbb
pop
in
jmp
jmp
jge
xchg
dec
sbb
insl
and
test
pop
push
imul
js
cmp
push
movsl
in
repnz
jmp
setl
out
pop
inc
mov
iret
aad
inc
adc
jns
dec
xor
fs
shll
pop
popa
add
mov
sub
ret
fcomi
pop
xor
xchg
mov
push
fwait
in
arpl
mov
in
data16
push
mov
cwtl
or
mov
mov
pop
fmuls
mov
mov
insl
push
mov
or
pop
into
lret
sub
pop
dec
stos
out
mov
ja
dec
outsb
jns
sbb
mov
dec
cmp
sti
outsl
jecxz
loop
sahf
shll
and
addl
add
into
ret
dec
ds
out
sti
jmp
mov
push
gs
aam
cmpsb
push
cmc
add
insb
cltd
scas
mov
xor
pushf
or
mov
jae
aam
mov
pusha
jbe
fadd
fsubrl
enter
scas
fldl
enter
ja
call
adc
lock
mov
xor
pop
lret
out
xor
rcrb
xor
aam
hlt
and
andb
cmpsl
dec
pop
sub
aam
rolb
cmp
pop
shlb
lahf
or
jns
jle
and
jg
dec
mov
mov
or
or
adc
mov
or
aaa
out
pop
jecxz
dec
loopne
int
ja
or
add
jmp
inc
aas
mov
jo
ret
inc
sbb
lcall
inc
pop
test
push
jbe
sub
cli
sbb
xchg
test
pop
pop
jmp
shrl
fsts
and
mov
movsb
inc
jae
setp
out
sarl
mov
pop
cmpsb
or
or
adcl
sub
fnstenv
adc
push
in
fldcw
es
xchg
orb
or
imul
dec
jg
adc
movsl
push
mov
push
aam
aaa
inc
pop
xor
inc
pop
jns
outsb
stos
inc
adc
nop
outsb
outsb
dec
lea
sarl
sbb
aam
inc
cmp
ret
ss
jle
push
aaa
add
xor
push
inc
scas
pop
sub
pop
movsl
adc
movsl
fs
pop
dec
iret
daa
pop
in
mov
adcl
push
fnstcw
in
cmpb
fbstp
dec
sub
fwait
pop
arpl
jmp
mov
mov
mov
cwtl
push
mov
mov
and
cmp
mov
leave
sbb
jbe
popf
fisttps
leave
out
fnsave
stc
dec
int
shlb
cmp
sub
add
fcomps
mov
jo
xor
mov
and
js
jle
inc
int
mov
fsts
cltd
or
test
lahf
push
mov
leave
rcr
lock
fimuls
jge
mov
mov
cmp
rorb
stc
mov
adc
adc
jmp
outsl
pop
cltd
jmp
jg
fnstenv
xchg
sbb
scas
mov
jae
xlat
andb
out
call
cli
rcll
hlt
mov
adc
push
repnz
mov
xlat
add
pusha
stos
adc
jae
fnstcw
fcompl
mov
adc
jno
lahf
add
sbb
pop
fstpt
rcrb
insl
ss
jb
les
sbb
inc
sub
sub
mov
dec
xchg
adc
and
xor
dec
popfw
cmp
insl
fcoms
stos
sbb
xor
jo
add
insb
clc
and
repz
xor
addr16
pop
pop
xchg
sub
adcb
leave
push
lods
jecxz
jnp
adc
mov
sub
pop
fidivrs
add
pop
push
loope
sti
push
adc
imul
ljmp
dec
rolb
fildl
bound
cltd
popa
sbbb
fldenv
into
push
dec
cmp
cmpsb
bt
pop
pop
in
outsl
push
push
push
sti
inc
and
js
add
fsubp
mov
sbb
enter
cld
and
fdivrp
or
push
shll
pusha
inc
stc
daa
mov
and
dec
sub
adc
jb
cmp
sarl
int3
fnstcw
push
xor
and
cmp
push
jecxz
mov
sub
xchg
or
dec
mov
xchg
daa
add
push
popa
cld
xchg
cmpsb
push
cld
dec
add
sahf
fdivrs
dec
cld
dec
xchg
cmp
aam
pop
inc
loope
pop
xor
jp
shlb
sti
and
inc
inc
fs
xor
cmp
inc
push
mov
mov
sub
sbb
xor
inc
sbb
or
or
rol
push
or
jl
jo
inc
push
xchg
xchg
mov
mov
pop
lods
stc
cld
lret
jo
sarl
xchg
dec
inc
imulb
popf
mov
xchg
mov
mov
mov
jl
cli
adc
fstl
fiaddl
inc
lods
jl
scas
and
in
scas
popf
popf
ror
fcoml
lret
cmp
lds
cmp
push
ja
sub
test
adc
jl
adc
mov
cmp
dec
out
or
mov
nop
dec
lcall
arpl
and
fwait
add
cli
cs
or
jb
dec
clc
ljmp
adc
cmp
mov
fs
das
push
std
loop
mov
mov
sub
aad
cmpsb
push
mov
leave
je
or
dec
pusha
mov
pop
incb
bound
test
gs
mov
inc
mov
cmp
mov
inc
mov
mov
or
lahf
pop
xchg
mov
in
or
or
in
in
lea
dec
cmp
ud2
xchg
shll
pop
and
sub
fstpl
hlt
ret
movsb
aas
pop
jb
scas
xorb
push
or
sub
jnp
roll
popf
sti
addr16
push
jns
pop
nop
lock
sub
fildl
imul
push
adc
inc
fildll
jno
in
rcl
pop
clc
mov
sbb
sti
roll
adc
jp
fcmovu
sbb
lods
lret
add
out
sbb
adc
jl
fcompl
add
cmp
add
push
jecxz
sbb
cmp
scas
ja
lock
adc
lahf
mov
mov
dec
jp
xor
dec
inc
push
dec
sub
inc
mov
xor
dec
jo
pop
mov
es
js
jp
pop
pop
bound
mov
dec
ror
ljmp
mov
inc
in
xor
pop
pop
xchg
movsl
mov
jo
outsl
icebp
ljmp
sti
rclb
or
dec
ja
add
pop
dec
lcall
cmp
iret
dec
jmp
psubw
mov
cmpsl
aad
sbb
dec
incb
push
jmp
mov
mov
into
jle
fdivrl
sbb
aam
rcrb
pop
lret
aas
lods
mov
sahf
mov
or
into
xchg
cmp
mov
sub
mov
mov
fsubrs
inc
and
mov
adc
in
in
sbb
ss
outsl
loop
lret
push
fnstsw
ljmp
mov
cmpl
lock
sub
std
imul
jecxz
add
gs
mov
sub
popf
inc
and
fdivl
mov
data16
mov
add
pusha
pop
fbld
dec
mov
mov
mov
idivl
xor
mov
jae
pop
aaa
inc
or
mov
jb
inc
inc
sbb
iret
jmp
inc
movsb
mov
sub
adc
popa
leave
fidivrs
pop
fcmove
sar
mov
clc
sbb
cmp
rcrb
aam
inc
jmp
or
pop
mov
xchg
sub
out
dec
loop
out
mov
pop
cmp
scas
les
push
es
cmc
test
mov
xor
repz
js
andb
outsb
insl
xchg
lods
mov
lret
int3
int
mov
outsl
into
push
add
jns
clc
enter
mov
push
jp
imul
ret
int
sbb
cmp
xor
cli
lods
addb
cmp
jecxz
mov
cmp
pop
popf
cmp
add
add
sbb
xchg
sahf
pop
test
mov
pop
xor
dec
into
es
icebp
scas
rcl
rclb
inc
ret
mov
jle
in
inc
add
sarl
xor
pop
add
push
stos
mov
div
daa
mov
das
fisttpll
out
addb
out
nopl
sub
cmp
add
enter
fstpt
es
stc
inc
dec
cmpb
cld
inc
lods
pop
mov
jbe
loop
fwait
jecxz
pop
js
mov
je
nop
and
je
imul
mov
lock
fldcw
xchg
inc
xchg
jl
or
jg
popa
xchg
pop
push
xor
xor
rol
push
jb
or
jecxz
adc
xor
dec
stc
push
mov
adc
lods
cli
or
test
cmp
ljmp
bound
in
mov
icebp
rcl
ret
inc
pop
inc
push
mov
insb
mov
mov
mov
push
rcrb
data16
insb
test
mov
movl
push
push
xchg
push
mov
aad
jb
sbb
lret
pop
push
mov
dec
jno
mov
call
out
dec
jnp
in
inc
mov
xor
jb
cwtl
mov
popl
sbb
or
adc
in
xor
xor
je
adc
pop
cmp
in
push
cwtl
xchg
add
stos
lcall
cld
scas
sub
sti
sub
push
xchg
lock
cmp
aam
cwtl
or
hlt
xlat
repz
or
jae
inc
call
jp
sbb
push
aam
add
or
cmp
jo
mov
xchg
mov
mov
mov
jne
shr
out
lods
add
cmpsb
push
das
adc
out
mov
ljmp
mov
ja
js
cmp
jge
xchg
inc
loop
out
adc
jbe
cmp
repz
sub
ja
insb
mov
mov
jbe
lods
ljmp
test
into
aas
jne
mov
adc
mov
mov
inc
inc
testb
sub
ja
popl
jnp
sbb
xchg
shrb
and
testb
lock
movsl
stc
pop
std
sbb
testb
mov
xchg
fisubrl
fs
enter
cmp
lock
pop
out
xchg
dec
outsb
fdivrl
jnp
nop
aam
pushf
lea
andl
xor
jmp
out
dec
adc
lock
divb
fdivl
insl
adc
int
and
pushf
jl
sbb
mov
or
push
cwtl
shrd
fwait
inc
xchg
pop
das
call
cmp
mov
pop
push
add
fnsave
bound
push
or
in
scas
jae
mov
hlt
and
and
jo
mov
jo
push
fbld
jge
iret
cmp
js
inc
popf
rorb
jo
inc
in
xor
push
xor
adc
xor
fwait
inc
pushf
std
pop
cmp
ja
cmp
and
and
popf
lret
je
dec
pushf
das
ret
mov
mov
inc
jp
subb
rcrl
xor
pop
fstp
dec
imul
inc
mov
or
push
leave
or
movsl
jecxz
movsl
divl
push
sti
cltd
mov
xor
je
hlt
push
xchg
push
push
push
cmp
mov
jnp
loopne
pop
stos
and
cmp
leave
mov
adc
clc
add
pop
lahf
sbb
add
outsb
xchg
aam
ffree
lcall
jbe
xchg
xchg
rorb
out
mov
and
mov
outsb
movsl
pop
out
sbb
std
mov
or
hlt
or
pop
sub
push
push
add
cwtl
mov
cli
mov
addr16
dec
jle
cmc
inc
icebp
out
push
dec
mov
dec
outsb
jp
xchg
fistl
clc
int
dec
pusha
mov
sub
pop
pop
mov
daa
add
cmovne
xchg
dec
push
mov
jae
mov
add
out
shrb
push
out
fnstcw
pusha
pop
lret
add
jecxz
jle
daa
ljmp
push
shrl
inc
clc
and
mov
xchg
fnsave
adc
fdivs
xchg
push
ficompl
sub
les
mov
outsl
mov
out
push
test
mov
out
shll
fdivrs
jmp
imul
xor
nop
cwtl
or
stos
in
add
clc
pop
lret
dec
inc
or
and
rcll
dec
mov
jnp
aaa
ljmp
shrl
bound
push
adc
sbb
ljmp
or
es
sbb
iret
mov
in
mov
test
cmp
movups
pushf
xchg
mov
mov
popf
pop
sarb
jl
fdivrl
cmpb
js
xlat
push
xchg
sbb
mov
mov
push
mov
xchg
int3
dec
mov
repz
sub
psrad
sub
or
clc
and
cmpb
xor
fwait
int
addr16
stos
repnz
jg
push
imul
cmp
repnz
push
aad
aad
add
and
xchg
stos
je
add
pop
in
xor
jecxz
ss
icebp
mov
lret
pop
out
cld
or
popa
jae
jbe
xchg
push
mov
daa
stc
pop
addr16
add
fildl
mov
mov
int3
es
mov
stos
cld
lahf
addb
fcoml
sub
shl
cmp
mov
aam
cmp
aam
jnp
push
iret
push
movsl
pop
pop
xchg
les
outsb
fidivrl
jns,pt
movsl
shl
mov
aaa
fstpl
aad
cmpl
jl,pn
das
pop
icebp
jo
adc
loopne
sub
sub
les
mov
or
fidivs
mov
lods
icebp
movsl
pop
movsb
adc
lret
or
xchg
xor
aad
jno
push
mov
sub
out
popf
xchg
fidivs
xchg
pop
flds
int3
inc
movsb
and
mov
push
xorl
inc
add
loopne
mov
inc
cmp
inc
push
cmpsb
pushf
inc
ds
cmp
xchg
movsl
fistl
lods
jmp
or
pusha
mov
in
cmc
or
jae
inc
outsb
je
mov
mov
aas
lretw
mov
mov
mov
sahf
stos
push
fisubrl
push
shll
mov
xchg
dec
sbb
pop
jne
jnp
loop
test
mov
mov
fldlg2
sbb
out
das
stc
scas
clc
fisubs
push
scas
cld
sbb
out
daa
dec
sub
push
mov
pusha
jecxz
cltd
or
adc
je
fisttps
cld
lcall
push
adcb
push
bound
hlt
dec
inc
shrb
xor
sub
and
stos
bnd
xor
testb
cli
sub
std
dec
pop
aam
mov
push
cmpl
cmc
aad
cld
mov
imul
adc
popa
ucomiss
pop
test
or
pop
push
inc
jle
push
bnd
sub
insl
dec
out
out
shrl
cmp
mov
or
or
dec
dec
inc
xor
lcall
in
mov
outsl
cli
test
push
jl
mov
call
ret
xchg
movsb
pop
mov
push
adc
push
xchg
aaa
push
cmp
mov
aam
pop
aam
sub
mov
leave
sub
dec
out
push
flds
cmp
cmp
mov
into
mov
xor
xchg
popa
jo
pop
andl
jae
sub
mov
test
arpl
add
stc
and
lcall
cmp
adc
loopne
push
js
mov
xchg
adc
adc
or
clc
sub
jl
xchg
xchg
aaa
push
or
cmpsb
dec
mov
aas
xchg
ret
stos
cmp
bound
int3
adc
repz
incb
outsl
inc
fcomps
test
jl
push
frstor
enter
sub
xor
mov
ja
insb
filds
mov
sub
push
not
sti
stc
in
jge
xchg
setb
std
cmp
je,pn
jl
sub
in
pop
imul
jmp
mov
push
out
pop
fidivrs
xchg
jg
mov
loope
cmp
subl
cmp
lds
and
stos
test
adc
inc
dec
pusha
loope
pop
popf
push
mov
inc
sub
and
mov
sub
pop
out
popa
call
loope
xchg
cmpsl
inc
fprem
cmp
sub
inc
inc
push
and
pop
push
or
push
sub
sbb
and
mov
push
in
xor
fstpt
test
jl
lock
or
pop
mov
lahf
jge
call
lcall
inc
xlat
dec
jl
pop
pop
mov
lods
cld
loopne
xchg
lret
mov
hlt
lcall
mov
ret
sub
and
xor
xlat
inc
mov
mov
mov
dec
in
aaa
adc
stc
arpl
adc
pop
fs
dec
and
dec
mov
shl
vmovhps
xchg
sbb
pushf
adc
shr
jbe
adc
mov
lods
fcoml
outsl
xchg
out
out
inc
pop
fs
mov
js
out
popf
cld
js
or
cmp
ret
lods
fstl
inc
lret
mov
shlb
je
pop
jmp
mov
in
mov
scas
fidivrl
and
mov
je
xor
cs
scas
frstor
inc
icebp
jo
lds
push
cmpsb
pop
hlt
dec
insb
jne
test
xchg
and
xor
push
mov
out
sbb
mov
rcrl
rcrb
cmp
ret
out
push
test
mov
inc
pop
rclb
mov
pop
fcoml
sub
icebp
icebp
ret
notl
sub
movsb
testl
xchg
push
mov
imul
or
aam
xchg
loop
sub
mov
orl
mov
ljmp
insb
dec
jle
dec
mov
cmp
lds
dec
mov
fnstenv
fcmovb
and
jo
cmp
mov
lea
cs
or
fsubl
adc
mov
rorb
aaa
jo
mov
testl
cmovae
fistpl
sbbb
dec
scas
test
ja
jae
push
movsb
jmp
into
mov
and
add
pcmpeqw
addr16
mov
out
mov
cwtl
cmpsb
sub
push
int
lcall
add
mov
out
sbb
fsts
orb
xchg
inc
jno
out
inc
or
sub
addr16
mul
call
xchg
sub
pushf
insl
nop
and
push
pop
scas
orb
add
shll
aad
arpl
ret
xorb
push
pop
push
fidivrl
mov
pop
sub
sbb
mov
xor
aaa
push
int3
mov
xchg
xbegin
xor
mov
jmp
bound
test
mov
subl
or
popf
pop
sub
imul
int3
mov
dec
jnp
and
sub
imul
dec
mov
xchg
std
jnp
xchg
xchg
cltd
pushf
ja
fnsave
fdivr
dec
gs
adc
ja
out
movsl
lods
shll
daa
pop
sbb
inc
fnstcw
fadds
xor
xor
jae
outsl
aad
mov
cmp
mov
lahf
lahf
mov
sbb
sahf
lods
pop
repz
and
shrb
imul
cmpsl
fldt
and
mov
dec
fmull
addl
push
or
xchg
mov
btr
ds
fdivrl
movb
popf
loopne
sbb
je
jecxz
clc
jae
adc
add
leave
mov
mov
mov
jb
cwtl
cli
mov
fisubl
sub
loopne
fwait
pop
mov
add
mov
push
fdivl
loop
mov
pusha
inc
dec
mov
lea
mov
inc
mov
adc
dec
je
fidivrl
popa
dec
mov
push
and
and
es
scas
imul
inc
and
or
jns
mov
or
push
xchg
sub
cmp
into
cmpsl
es
ficoms
mov
inc
dec
fwait
sti
sti
out
pop
repnz
mov
mov
cmp
add
fdivr
sarl
into
incb
xchg
nop
mov
jbe
iret
gs
sub
loopne
adc
testl
sub
inc
leave
std
dec
dec
mov
out
stos
lods
mov
mov
cwtl
sbb
xchg
inc
add
sbb
cmp
mov
lea
jmp
or
inc
xor
inc
in
or
sub
dec
mov
cmpsl
imul
sbb
pop
dec
inc
mov
and
ds
pusha
mov
mov
pop
aam
inc
mov
fstl
adc
movsl
xchg
jmp
cld
mov
les
inc
push
cwtl
leave
divl
mov
gs
in
adc
mov
xchg
or
ljmp
out
int
stc
sub
and
mov
cltd
dec
inc
popf
test
inc
pop
sub
loop
ss
in
add
bound
aad
pop
dec
mov
push
dec
jmp
xchg
mov
in
out
pop
mov
xor
jne
cld
mov
mov
sbb
sub
jnp
cmpsb
leave
lock
jmp
cmp
aam
jl
jmp
jle
das
lods
mov
popf
mov
or
loope
lds
sbb
je
mov
movsl
mov
push
add
sub
push
mov
jo
add
loop
push
outsb
pop
mov
loope
pushf
pop
inc
mov
sahf
das
xchg
popf
hlt
push
cmp
cmp
pusha
add
pushf
dec
fstps
pop
push
cmp
mov
lahf
adc
dec
dec
movsl
add
fstl
xchg
aad
add
in
enter
mov
fists
ds
mov
xchg
or
loop
dec
and
popa
pusha
stos
dec
mov
sbb
lcall
or
outsl
sbb
mov
or
fs
pop
dec
cmpsl
or
popf
pop
mov
xor
fmull
mov
nop
test
mov
adcb
imul
jg
sbbl
mov
sub
cmp
test
es
inc
aaa
hlt
push
je
ss
inc
push
imul
fsubrs
mov
push
pop
jbe
bound
and
repz
or
mov
nop
hlt
in
push
mov
dec
inc
lret
push
dec
popl
rorl
pop
fdivr
cmc
mov
test
xchg
pop
adc
inc
push
sti
incb
mov
out
inc
and
jp
jmp
stos
cwtl
xor
push
and
pop
pushf
cmp
inc
push
in
js
mov
xchg
pop
mov
xchg
sbb
in
mov
loope
push
cli
mov
mov
aam
add
ret
mov
jmp
cs
inc
fmulp
add
adc
fistpll
jb
and
sub
imul
iret
add
xor
inc
ret
mov
sub
mov
ret
fsubs
mov
sub
rcrb
imul
or
pop
dec
icebp
mov
sysenter
aad
sub
sbb
sub
push
pop
int
cmp
jne
sub
stc
or
add
mov
xchg
lcall
mov
cli
outsb
cltd
scas
mov
pop
in
mov
rcrl
aaa
mov
mov
jecxz
ds
sti
aaa
cmp
mov
push
xor
scas
fnstcw
jmp
ret
dec
shl
dec
lods
xor
pop
or
pop
pop
cltd
jno
push
pop
dec
cld
fimuls
movsb
jns
pusha
cmp
mov
pop
shll
pop
hlt
dec
outsb
mov
or
jno
nop
js
jbe
jno
mov
adc
push
lahf
jmp
mov
mov
call
addr16
test
in
rclb
nop
lcall
push
pop
xor
mov
mov
jns
cld
aad
testb
cmp
mov
stos
mov
xlat
and
xchg
push
fnstsw
pop
adc
add
rcrb
mov
cmp
add
jo
push
mov
incl
xchg
lock
popa
add
and
mov
mov
ds
lods
and
call
dec
cmp
aad
insb
ficoml
mov
pop
pushf
or
scas
pusha
sti
rcr
incb
add
dec
into
and
sti
in
testb
cmpsb
jecxz
and
loop
cmpsl
in
enter
out
cmp
lahf
pop
xor
sbb
inc
or
push
and
repz
hlt
cmp
jne
and
fwait
jne
stc
aaa
pop
sbb
push
in
call
stc
iret
dec
xor
mov
push
in
mov
lea
pusha
mov
fs
cmp
cmpsl
inc
adc
xchg
test
push
push
lock
xchg
aas
and
or
mov
mov
aaa
shrb
cld
push
repz
adc
mov
mov
cld
cltd
pop
andb
jne
pop
repz
adc
insb
mov
ds
or
push
xor
xchg
jecxz
data16
xchg
imul
out
pop
jg
js
loopne
mov
lods
cwtl
into
cli
jb
pop
ss
lea
aam
sub
mov
ja
ljmp
fnsave
sbb
fucomp
neg
addr16
xchg
mov
or
punpcklbw
xorb
mov
ljmp
inc
int3
lcall
pop
mov
pushf
or
aas
sbb
cld
mov
or
sub
addb
in
icebp
test
mov
pusha
mov
lcall
fiadds
dec
and
fiadds
adc
adc
pushf
add
fs
shl
add
icebp
push
xor
lods
mov
into
testb
iret
mov
push
cmp
dec
sub
cmp
aaa
or
cmp
fnstcw
push
jne
lahf
outsb
std
sbbb
lea
ret
lcall
outsb
gs
add
cmp
cli
jl
aaa
es
mov
inc
mov
test
outsl
mov
fldcw
in
xchg
mov
aaa
pop
popa
rcll
pop
jg
call
xor
xchg
scas
lods
inc
rcl
clc
pop
scas
and
pushf
aad
sub
inc
into
inc
xchg
lret
repz
lret
mov
jmp
jns
fwait
repnz
push
add
int3
and
fcomi
lock
mov
int
inc
mov
adc
adc
scas
repz
ds
mov
push
or
into
push
repnz
rcll
subl
sbb
nop
cs
xor
push
ljmp
out
insl
add
pop
mov
cmp
pop
ja
jb
lret
negb
add
or
and
pop
addr16
xor
aad
call
rorl
mov
out
mov
mov
repz
loopne
scas
lock
fsubrs
mov
and
push
push
mov
sbb
das
nop
je
iret
insb
movsb
fisttpl
adc
sahf
pop
repz
incl
adc
sbb
cmp
stc
stos
push
jge
leave
mov
inc
clc
and
enter
cmp
push
push
pop
loope
mov
push
aas
ljmp
inc
movsl
xor
dec
push
idivb
les
push
clc
sbb
dec
clc
daa
fcoml
ja
popa
loop
mov
inc
loop
out
fdiv
arpl
repnz
ret
or
out
sbb
sbb
imul
nop
or
lahf
idivl
and
test
popl
adc
fisttps
jb
mov
repz
clc
int3
mov
cmc
pusha
add
jle
add
cmc
xor
or
xor
xor
mov
push
jp
cmpsb
lret
aam
shll
into
cmp
sub
cmp
xchg
mov
xor
xor
je
jg
dec
xor
push
adc
mov
popf
mov
jae
jae
mov
cmpsl
into
roll
cmpsl
or
test
adc
imul
pusha
mov
in
aaa
sarb
adc
push
push
mov
ss
sahf
call
data16
mov
ret
mov
test
fisubrl
pop
mov
adc
and
je
out
ret
ss
ljmp
jp
lods
das
mov
lcall
shlb
jge
loop
call
push
ss
ds
aaa
das
fcoml
xchg
daa
cmp
repz
fnstsw
sub
nop
sbb
rcll
aam
mov
cli
xchg
std
icebp
es
ffreep
jae
cmpb
lcall
and
sbb
leave
rclb
xchg
mulb
shlb
push
pop
imul
jl
ss
nop
xchg
js
icebp
jno
outsl
push
cmp
ss
shll
sti
dec
into
pushf
adc
aas
fsubrl
jb
push
and
pushf
xchg
mov
add
ret
adc
cmp
or
push
pop
fimull
pop
ds
mov
push
daa
cmp
into
xchg
inc
push
pop
out
mov
jb
js
out
mov
pop
mov
mov
push
inc
scas
test
xor
int3
adc
jne
ret
add
movsl
faddp
mov
incb
mov
jecxz
fwait
mov
inc
mov
push
into
xor
pushl
inc
adc
inc
iret
jmp
sbb
mov
movsb
push
or
xor
sbb
sub
mov
fnstcw
cmp
stos
xor
imul
adc
popf
xchg
in
gs
mov
add
clc
mov
into
and
inc
std
inc
push
xchg
inc
cld
jnp
arpl
or
jae
and
or
lds
adc
cwtl
cwtl
aam
sub
mov
xchg
dec
fadds
add
cmp
pushf
stos
add
push
fwait
jmp
mov
xchg
js
movsl
push
orb
pop
test
add
negb
fildll
imul
dec
add
int3
add
mov
test
daa
sbb
mov
push
pop
xor
shr
inc
mov
repz
push
adc
insb
or
add
daa
ret
int3
or
sub
lds
mov
test
or
mov
mov
lods
loop
insb
inc
and
in
and
sahf
packsswb
fidivrs
movsl
push
inc
mov
push
jne
push
pop
cld
or
icebp
out
fsubl
es
stc
xor
or
mov
mov
pop
push
xor
movsl
mov
or
fs
push
out
repz
sub
ss
mov
ds
ds
pop
popf
sub
stos
mov
stos
negb
dec
mov
lods
or
xor
in
andb
repz
xor
pop
fs
pop
loope
ja
add
outsl
xchg
out
push
xor
mov
dec
push
sar
dec
movsl
sbb
push
lds
mov
cmp
ffreep
adc
hlt
es
aas
std
jmp
xor
jp
test
sbb
xchg
mov
add
cmc
and
std
mov
stos
xchg
lret
lret
in
jp
fildl
sbb
jp
mov
xchg
or
pop
sub
cmp
mov
mov
pop
imul
jb
cmpsb
lea
je
pusha
pop
pop
xchg
sub
repnz
rorl
jnp
rclb
sar
inc
mov
push
imull
inc
stc
mov
pop
int3
fldenv
test
inc
pop
dec
pop
jae
cld
ds
pop
lahf
out
fwait
or
push
pop
loope
sbb
mov
xchg
xchg
pusha
iret
sbb
fldl
mov
mov
loope
cmc
mov
xchg
push
sarl
in
mov
add
cmpsl
dec
cli
pop
arpl
sub
arpl
jle
add
xlat
jae
movsl
push
xchg
cmpsl
sbb
mov
xchg
push
adc
rcrl
and
test
ljmp
dec
inc
insb
in
sub
clc
repnz
xlat
fwait
sub
pop
pop
adc
pop
xor
jbe
pop
adc
sub
out
push
ficoms
fidivrs
sbb
movsl
stc
cltd
icebp
arpl
and
xor
push
movsb
stc
fxam
mov
negb
sbb
add
sbb
push
aas
push
pop
mov
lcall
sbb
add
xchg
fstpl
cmp
push
jns,pt
xorl
push
mov
mov
mov
xor
push
mov
pop
cmpl
pusha
inc
sbb
in
mov
dec
pop
jb
dec
xor
mul
jl
adc
loop
mov
outsl
mov
mov
aam
adc
loop
loop
sti
jno
jge
adc
jmp
inc
fmull
orl
outsl
jne
mov
add
addr16
cmc
mov
mov
icebp
xor
jge
xchg
lods
ss
fnstenv
jae
or
gs
bound
paddsw
add
mov
loope
fmull
scas
mov
adc
mov
jns
jecxz
add
inc
in
pop
push
ret
pop
int
and
mov
pop
sar
repnz
daa
mov
out
xchg
testl
dec
cmp
mov
clc
mov
sub
test
xor
addr16
and
pop
inc
add
rcrb
and
rol
pop
insl
iret
dec
jmp
add
pop
pop
add
inc
jno
fwait
and
lock
sahf
push
jno
adc
cmpsb
xor
ljmp
leave
dec
cld
movsb
add
ss
shlb
jne
jnp
ss
icebp
dec
push
dec
xchg
dec
inc
or
shlb
andl
add
call
jnp
mov
shl
xchg
jmp
mov
jl
mov
daa
mov
pop
or
mov
mov
stos
data16
into
cmc
mov
mov
push
fld
call
push
cmp
add
in
dec
dec
mov
push
popf
jle
cwtl
fwait
ja
aad
add
xchg
aad
das
adc
test
rorb
icebp
out
jno
sarb
loope
sub
pop
mov
test
sbb
popf
data16
scas
xor
lret
jecxz
fidivl
fidivl
mov
lret
xor
mov
cltd
mov
sahf
push
scas
pop
fwait
out
data16
hlt
push
adc
shlb
insl
das
mov
enter
data16
decl
mov
cmpsb
mov
enter
sub
sub
cs
pop
mov
fwait
adc
dec
jp
mov
add
sahf
imul
pop
adc
lret
sub
lds
shll
xor
mov
sbb
inc
dec
loop
lods
cltd
xor
xor
in
sahf
jne
stos
mov
fidivl
imul
jg
xchg
dec
jb
sbb
sarb
cmp
xchg
cs
leave
sub
mov
loope
jg
popf
mov
cltd
fsubrs
xchg
cwtl
dec
push
cmp
iret
push
ja
in
imul
or
or
enter
mov
xor
xor
cmp
loopne
lock
push
xchg
cmp
arpl
imul
cwtl
sub
iret
or
add
rolb
sbb
popf
xchg
inc
cmp
add
sahf
mov
mov
loop
movb
pop
mov
cmp
gs
push
stc
mov
lret
xor
test
adc
inc
mov
pusha
xlat
orb
rclb
stos
pop
pop
add
adc
inc
iret
sub
and
subb
cmpsl
mov
jg
mov
cs
jge
shll
adc
and
dec
lahf
enter
fnstsw
fwait
jae
ss
dec
push
or
sbb
push
and
jge
mov
sbb
pop
in
int3
xchg
outsb
push
inc
out
pop
pop
fists
shlb
ljmp
or
out
jns
outsl
test
pop
jmp
and
mov
daa
push
jns
sub
std
sbb
mov
test
ja
and
inc
rcrb
push
pop
and
push
popf
movsb
mov
dec
ret
pop
in
pop
adc
sub
mov
sbb
xchg
mov
jl
aaa
cmp
xor
sub
add
xchg
mov
fadds
jp
push
and
xor
adc
cmp
into
pop
mov
inc
cmp
or
jg
stos
cltd
lock
inc
push
jo
pop
jb
sbb
cwtl
jmp
mov
and
lgs
cs
das
and
xor
cld
mov
movsl
mov
cmpsb
imul
push
rcrb
es
and
inc
adc
fdivrp
and
lea
int3
dec
mov
icebp
enter
and
jl
or
inc
scas
rcl
xlat
test
xor
pop
mov
aas
pop
mov
rcrl
xchg
dec
push
push
cmpsb
daa
fcoms
or
lods
ljmp
rorl
jno
lret
pop
add
push
mov
test
add
and
or
enter
andl
mov
imul
inc
fcoml
pop
mov
jl
mov
test
aaa
out
mov
mov
test
xor
sbb
mov
cmp
and
scas
dec
hlt
mov
xor
test
repnz
ret
push
sub
in
in
hlt
pop
jo
jne
notb
lods
int3
mov
xchg
dec
xor
arpl
pop
jnp
adc
push
push
mov
mov
lds
mov
lea
cmp
mov
imul
cmp
dec
add
cmp
mov
jle
insb
lret
cmp
mov
cs
cli
mov
rorb
sbb
nop
int3
rcll
arpl
ret
lret
mov
dec
adc
js
xchg
fists
fsts
sbb
xchg
pop
push
fsts
sub
ret
mov
icebp
or
push
push
and
cwtl
mov
dec
mov
xchg
incl
jp
popf
pop
cwtl
imul
pop
fmuls
loopne
push
sub
xchg
icebp
pusha
insl
in
ds
ds
cmp
add
lahf
call
xor
pop
iret
sbb
in
int3
sub
test
je
jp
jae
pop
xchg
aam
xchg
ror
int3
jne
and
adc
iret
jecxz
add
cmpsl
addr16
mov
sub
pop
jb
jne
in
fisubl
lret
add
das
mov
push
lret
jmp
test
xchg
aad
nop
inc
lods
fimuls
adc
test
lea
adc
mov
fistpll
pop
push
inc
dec
push
sub
push
jmp
adc
shll
and
lods
pop
or
out
sbb
jnp
push
add
and
mov
mov
aaa
fisttpl
in
xlat
xchg
imul
inc
hlt
outsl
jle
dec
aam
test
shr
cmpsb
xor
aam
cmp
xchg
out
push
sub
fs
rolb
jl
stc
mov
test
lds
fists
ret
xchg
stos
xchg
xlat
xor
fsubrp
nop
movsb
ret
mov
dec
jl
jge
cmp
pop
daa
shlb
pop
jle
aad
lea
and
add
inc
inc
int3
sbb
sbb
pop
aam
dec
aaa
inc
loope
loop
lods
loope
jb
mov
mov
out
and
jbe
sub
outsb
je
mov
scas
sti
pop
inc
sbb
pushf
push
adc
cli
or
jl
cmp
scas
aaa
push
lret
jns
mov
xor
outsb
push
es
jae
push
cs
iret
rclb
cmp
test
jle
mov
shl
mov
movsb
aas
pop
or
inc
mov
pop
test
dec
push
push
iret
push
push
mov
testb
pop
or
leave
push
aad
pop
push
mov
movsl
pop
stos
imulb
insl
loope
adc
out
inc
enter
push
aas
and
fbstp
loop
stc
push
pop
arpl
and
push
push
popf
scas
pushf
mov
mov
rorb
gs
pop
pop
sti
push
inc
mov
mov
dec
xor
mov
jecxz
mov
daa
int
movsl
add
cld
pop
popa
cmp
lret
or
add
test
pop
dec
xchg
inc
sahf
push
ds
arpl
mov
ficoms
mov
and
std
pop
add
mov
xor
in
mov
fmulp
dec
cli
xor
inc
les
push
jns
je
xchg
add
push
and
fldenv
fwait
add
and
insl
filds
push
sub
shll
push
jnp
mov
inc
jnp
push
mov
mov
mov
or
insb
jns
mov
mov
fisubrl
fstps
clc
and
xlat
pop
aad
fimuls
add
scas
and
les
push
pop
pop
shlb
jmp
and
and
push
js
fnstcw
jg
int3
mov
push
loope
ret
shrb
icebp
jmp
sub
xchg
sbb
push
lret
cmp
rclb
in
xor
ficompl
aas
pushf
std
cmp
adc
push
idivb
jge
cwtl
std
or
andl
push
test
add
push
push
adc
adc
daa
int3
or
push
xchg
ficoml
mov
pushw
ljmp
mov
mov
lret
jns
inc
js
rorb
dec
adc
repz
lds
sub
xchg
cmc
rolb
js
push
popa
ss
dec
inc
out
fisttps
push
and
mov
sbb
cmp
cmp
repz
mov
das
pop
pushf
jb
jns
mov
roll
jne
mov
jb,pn
ja
xchg
ljmp
mov
adc
jmp
imul
adc
mov
loop
jge
fst
test
ss
mov
int3
subl
int3
jno
cld
add
fs
rcl
lret
cwtl
xchg
mov
inc
out
and
fwait
lret
insl
or
js
cmp
pop
add
lret
rolb
je
and
mov
or
enter
mov
aad
pop
fs
mov
divb
jle
es
xlat
mov
jge
cld
scas
jo
dec
ss
jae
mulb
jge
repnz
movsb
and
jns
cmp
fxch
push
jecxz
jge
mov
jp
stc
inc
cltd
popa
mov
orl
sbb
test
dec
mov
xchg
dec
adc
and
scas
inc
mov
out
dec
stos
add
and
jo
cmpsl
sub
int3
and
xor
push
or
outsl
das
and
xchg
arpl
pop
std
inc
dec
out
out
loope
les
scas
movsl
test
xor
pop
add
xchg
in
xchg
cwtl
cmp
scas
fimull
and
push
dec
fwait
jbe
mov
inc
sub
adc
inc
pop
stos
xchg
fmuls
and
xor
xor
jmp
pop
push
sahf
out
scas
negb
adc
inc
aaa
mov
jl
inc
loope
pop
cmp
adc
pop
pop
iret
dec
lret
call
nop
lahf
add
addb
jns
into
dec
fnstcw
lcall
scas
mov
int
mov
pop
sti
mov
aas
lds
cmpsl
add
push
iret
divl
jnp
imul
lcall
adc
dec
cmpsl
lea
lret
adc
ljmp
sbbb
xchg
fwait
sbb
imul
inc
test
sub
orl
mov
pop
jae
inc
sbb
fimull
scas
jl
lret
scas
sbb
decb
inc
icebp
xor
in
in
cli
sarb
fmul
pop
test
push
fsubr
sbb
arpl
cmp
cmpl
mov
aam
jno
adc
pop
bound
outsl
cmp
push
fidivl
pcmpgtw
ds
pop
stos
idivb
mov
dec
repnz
jmp
push
inc
lcall
sbb
divb
dec
fadds
sub
jge
pop
mov
jp
xlat
int3
and
xchg
push
add
aam
mov
fisubl
or
push
insl
cmp
pop
std
dec
dec
jo
pusha
lahf
shlb
push
iret
xchg
outsb
adc
mov
pop
mov
mov
ret
aaa
pop
pop
mov
push
loopne
push
fucomi
adc
lahf
sti
sub
pop
fsts
push
xchg
sub
mov
leave
cld
jo
fists
clc
test
xchg
lods
dec
xchg
fstpl
aam
add
adc
sbb
mov
or
jo
mov
sub
call
fs
mov
bound
loopne
int
rcr
pop
pop
dec
sbb
jne
jno
in
xchg
xchg
pusha
enter
sbb
movsb
mov
pop
stc
dec
lds
cli
lods
cmp
stos
cmp
ljmp
ja
cmpsl
jns
sbb
cltd
adc
dec
imul
lahf
and
jbe
repz
ret
cmc
stc
test
pop
rcr
sti
movsb
outsb
pushf
out
mov
int3
movsl
cmp
out
mov
mov
mov
test
jmp
xchg
lods
imul
in
sbb
push
cltd
mov
cmp
addr16
cli
shll
outsb
ret
jbe
imul
mulb
adc
sti
cmpsl
dec
insl
out
mov
add
addr16
es
cmp
test
hlt
sub
sbb
insl
xchg
arpl
repnz
shll
into
flds
shlb
stc
jno
out
mov
nop
mov
sbb
test
fsubrs
fnstcw
push
bound
add
jp
dec
movsb
dec
adc
bound
dec
rcrl
push
adc
je
pop
lea
dec
subl
fildl
mov
loopne
jne
mov
aad
xchg
sbb
addr16
mov
fwait
cmc
or
fcmovb
lret
rcrl
out
adc
adc
mov
sub
ds
push
mov
push
jb
or
cli
je
dec
mov
cli
sbb
mov
insb
sbb
in
loope
les
xchg
sbb
in
pop
ss
js
ficompl
push
cmpsb
sub
out
outsl
testl
jmp
loop
ljmp
out
or
mov
sub
lahf
push
insl
cmpsb
mov
cs
sbb
inc
push
mov
dec
push
ds
mov
lods
scas
nop
dec
xchg
cmp
mov
test
mov
inc
xchg
fs
scas
pop
aam
pop
dec
stos
mov
sbb
sbb
jno
popf
gs
add
mov
lds
stos
jo
jae
mov
jl
pushl
xor
dec
push
mov
mov
xchg
mov
push
stos
jo
outsb
adc
aam
mov
bswap
sub
addr16
adc
sahf
and
divb
into
mov
test
push
sbb
sbb
fs
popa
arpl
jnp
or
test
cmpsb
fldenv
sub
divl
popf
dec
xchg
and
push
out
repz
movsl
and
push
inc
mov
xor
popf
jge
lahf
fstpl
shl
add
xor
sahf
into
push
test
sbb
iret
ret
icebp
popa
push
mov
lret
mov
addb
jmp
out
aas
idivb
inc
mov
push
dec
mov
scas
push
pop
adc
ljmp
mull
mov
push
mov
push
mov
jp
add
subb
loope
xor
test
in
xchg
fistpll
outsl
cltd
mov
inc
test
push
jecxz
or
daa
in
std
dec
sbb
mov
inc
out
mov
jnp
push
jg
jne
cmp
or
shlb
cmp
mov
dec
sub
cltd
xchg
cmc
lahf
cltd
jmp
insw
jb
cmp
lret
cs
js
clc
outsb
loope
pop
pop
mov
div
jae
mov
cmpb
out
mov
sbb
xchg
cmpsb
in
sahf
jne
mov
nop
cmp
and
clc
adc
jmp
xlat
les
in
xor
out
push
fmull
ja
cmp
jno
push
xchg
pop
cmp
insl
push
mov
dec
xor
aad
mov
pop
dec
dec
ja
xchg
sbb
xchg
dec
add
imul
push
pop
sbb
mov
pushl
pusha
je
inc
sub
addb
add
adc
iret
popa
lcall
je
orl
and
jecxz
aad
jmp
sub
stos
jbe
leave
negl
pop
cmpsl
popa
or
inc
xor
jmp
aad
mov
cltd
ss
mov
mov
out
loopne
xchg
in
aaa
adc
sbbl
lret
insl
inc
ja
inc
push
inc
dec
stos
mov
popf
push
cmp
stos
dec
es
mov
lods
jbe
clc
cmpsl
pop
inc
lret
lret
mov
dec
xchg
lret
test
fwait
js
xchg
inc
dec
popa
out
movl
mov
sbb
mov
aad
hlt
fiaddl
pop
js
pop
je
jecxz
sbb
movl
xlat
fiadds
test
mov
ret
mov
out
popf
insb
jno
push
pop
pushf
adc
test
adc
push
or
and
scas
and
nop
clc
fldl
jnp
inc
jg
mov
push
mov
xchg
and
xor
shrl
sbb
jne
push
sahf
stos
xor
ret
or
cmp
or
movsb
bound
mov
and
push
out
mov
imul
add
inc
mov
ret
mov
test
mov
jmp
dec
jno
mov
in
lahf
push
xlat
lock
push
sub
push
lock
add
test
sub
inc
lods
insl
out
jmp
fcoml
lcall
pop
sub
xchg
sub
out
jle
add
or
pop
xchg
xchg
int
dec
movsl
add
scas
and
hlt
daa
loop
push
in
pop
jae
js
popl
ja
pop
jmp
loope
push
aam
mov
push
mov
sar
mov
js
loop
and
jno
sbb
jmp
std
idivl
or
push
lea
mov
pop
inc
mov
rclb
imul
fstp
ffree
sahf
imul
ret
sbb
lock
js
aaa
fimull
insb
jae
fldcw
pop
cmp
iret
call
mov
scas
or
jb
xor
cli
popf
sti
push
sahf
mov
cli
dec
inc
jo
fldenv
lahf
ret
ss
test
xlat
adc
sbb
inc
xchg
gs
pop
or
inc
shlb
lahf
loop
pop
repnz
clc
xchg
aam
jl
inc
cld
rclb
and
lret
cmp
cmp
es
mov
jns
icebp
nop
or
out
cs
push
xcrypt-cbc
cmpsl
xchg
mov
xchg
fldlg2
loope
das
ficomps
push
inc
pop
shl
dec
pushf
mov
cmp
mov
loop
call
fiadds
sbb
std
jg
out
fwait
aam
cmc
xchg
mov
xchg
sbb
or
xchg
imul
xchg
in
addr16
lret
cmp
cmpsb
out
xchg
push
sti
sub
push
xchg
sub
jp
cmpsb
fistl
pusha
sbb
stc
out
inc
sarl
imul
jbe
and
cmp
sbb
aas
std
mov
mov
jae
fidivrs
dec
push
bound
stc
cltd
andps
mov
xor
dec
ds
loope
jl
addl
scas
sbb
enter
mov
cmp
cmp
punpckldq
adc
pop
xorb
xchg
mov
adc
lods
repnz
xchg
gs
lahf
mov
lods
push
ret
aam
push
cmp
ret
pop
or
iret
ret
mov
mov
mov
adc
sub
fwait
cmpb
dec
xchg
aaa
or
or
pop
cmp
pop
in
scas
inc
std
pop
out
mov
lcall
lods
pop
sub
cmp
call
push
sbbb
test
mov
mov
xchg
jp
push
shrb
js
test
lods
fcoms
sub
stos
cwtl
dec
push
out
and
enter
popa
add
sub
xchg
fwait
lea
fcmovnb
and
push
shl
or
cmp
mov
or
ss
mov
mov
cmp
pop
into
shl
ja
mov
dec
mov
inc
aas
push
les
sbb
sbb
aad
shlb
lret
insl
mov
sbb
int
sbb
shl
pop
popa
pop
sub
aam
les
mov
sub
les
iret
cmp
jp
aad
push
mov
mov
xchg
sbb
xchg
mov
push
lea
shlb
pop
or
cltd
jl
in
sbb
fists
fbld
jl
sti
xchg
rcl
mov
das
fs
xorl
iret
or
pop
push
imul
lds
mov
xchg
jge
fidivs
and
pop
cli
imul
push
das
mov
cmp
dec
xchg
xchg
sub
repz
stos
idivb
or
lret
call
mov
mov
les
inc
push
cmp
push
stos
int3
dec
mov
cwtl
jne
sub
xchg
inc
jecxz
sub
xor
dec
into
sub
adc
imul
jle
lock
push
int
fwait
arpl
jge
inc
add
add
loope
jne
and
hlt
mov
adc
jecxz
rolb
fcmovne
push
ljmp
cmpsl
pop
add
pop
adcb
push
sbb
sbb
shrl
in
fisttps
and
and
aad
int3
sub
gs
lods
fcoml
stos
cwtl
add
push
xlat
aas
push
mov
sbb
xchg
imul
dec
jmp
mov
and
mov
push
mov
push
shl
mov
jbe
stc
jb
cli
bound
push
ret
lds
in
sbb
sbb
or
fnstenv
mov
add
in
lods
xchg
fwait
out
icebp
repnz
and
lret
adc
add
enter
add
inc
ret
sub
stos
xchg
test
inc
dec
add
inc
xor
mov
sarb
cmp
pop
ds
cmc
mov
hlt
and
inc
dec
popa
inc
imulb
insb
stos
popf
repz
inc
adc
int
cmc
clc
rcr
inc
inc
push
cs
xchg
jecxz
mov
mov
loop
insl
shll
pushf
xor
push
inc
fs
imul
mov
mov
cli
pushf
in
es
mov
adc
shll
cli
insl
xor
lds
fidivrl
mov
rcrl
jl
daa
dec
pop
mov
mov
dec
js
jo
movsl
mov
stos
xor
icebp
xchg
pop
pop
mov
dec
mov
push
lea
jecxz
push
xor
mov
add
shl
arpl
aad
aad
ret
xor
subl
sahf
pop
lcall
xlat
push
push
and
mov
inc
out
repnz
dec
mov
andb
hlt
shl
xor
cmp
dec
aaa
add
jnp
mov
popf
sbb
sub
je
xor
rolb
movsl
and
movsb
push
cwtl
pop
ficompl
mov
lods
out
stos
lea
sbb
shl
mov
dec
loopne
xchg
lods
jg
jbe
mov
dec
sbb
jl
ret
or
jns
jne
movsb
push
lds
test
cmp
jg
adc
xor
scas
mov
les
iret
jmp
cmp
pop
testl
jae
pop
mov
sbb
movsl
stc
dec
cmp
push
push
mov
sbb
out
mov
sub
mov
pop
dec
stc
mov
push
mov
dec
push
push
mov
je
popf
ljmp
jno
lods
scas
dec
and
js
jnp
xor
lahf
icebp
fnstcw
push
mov
dec
lahf
jb
pop
mov
and
popf
jle
ficompl
dec
lock
sarl
pushf
inc
adc
fcompl
mov
mov
jecxz
stos
cmpl
mov
add
or
and
insl
in
scas
sub
push
in
pop
mov
cmp
out
or
in
jnp
stos
add
ds
outsl
adc
pusha
xchg
xchg
movsl
mov
push
sub
mov
and
das
rclb
int
pushf
mov
out
and
xor
and
movsb
repz
sbb
or
cmp
jmp
scas
popa
test
push
out
adc
sub
test
divl
push
push
xchg
and
mov
pop
xor
or
mov
jbe
or
subb
lret
mov
jb
xor
xchg
pop
mov
mov
sbb
add
ret
mov
fdivr
pop
sub
lahf
lcall
jne
adc
pop
dec
mov
mov
jns
inc
stc
int3
mov
mov
popa
mov
or
cltd
roll
shl
or
mov
dec
mov
lcall
addl
xchg
imul
pop
scas
fildl
add
orl
sub
outsl
push
jmp
test
cli
mov
inc
pop
loope
filds
lret
jno
aas
cmc
add
ret
or
mov
cwtl
sbb
adc
or
or
out
dec
sub
fdivr
mov
out
mov
add
push
dec
shlb
mov
stos
sbb
cltd
mov
inc
inc
pop
jmp
iret
movsb
xor
loope
or
inc
shll
inc
push
cmc
das
lds
push
mov
int
push
xchg
jo
repnz
sbbl
jbe
add
out
in
mov
add
lcall
mov
jnp
jbe
mov
ficoms
fnstsw
hlt
pop
inc
add
mov
fxch
js
movsb
mov
call
loopne
test
push
add
sbbl
and
adc
pop
cmp
subl
pop
out
mov
notl
adc
iret
push
les
mov
push
adc
lcall
scas
push
cld
leave
push
xchg
cmc
or
fwait
mov
repnz
in
mov
sbb
sahf
fnsave
add
inc
lret
push
cmpsb
cld
hlt
sbb
into
test
out
xchg
cmp
jns
jns
shrl
shl
add
or
cmpl
andl
scas
cld
sub
cwtl
jbe
dec
xchg
rol
xchg
or
ficompl
mov
or
mov
out
xchg
loop
imull
or
add
adc
dec
test
pop
int3
jg
push
lret
cld
or
roll
scas
sbb
outsb
lret
xor
in
mov
aaa
sub
jb
enter
sub
mov
sbb
lcall
jae
je
aas
stos
sarl
xor
inc
in
imull
sbb
shr
and
ja
jmp
in
sbb
mov
cmc
ret
cmpsl
insb
mov
int
cwtl
ret
cld
int3
hlt
std
add
mov
cmp
daa
outsb
push
iret
mov
lock
jne
ret
ss
insb
and
and
inc
rcrb
push
mov
jnp
inc
cmp
or
and
adc
std
cmp
pushf
test
xor
arpl
jg
jle
xchg
pop
push
pop
dec
pop
sub
addr16
fmull
ss
mov
xlat
and
insl
loope
and
jecxz
inc
xchg
dec
jbe
inc
clc
std
mov
and
jl
jmp
mov
push
lock
fisttps
icebp
shr
push
xor
sub
adc
push
add
fsubs
xchg
pushf
mov
ret
test
js
testl
movsb
sbb
push
jbe
jbe
mov
xchg
cmp
cmp
cmp
push
cmp
ds
mov
ret
push
inc
arpl
add
rclb
fs
add
mov
jp
inc
lahf
out
mov
iret
imul
push
popa
shll
imul
pop
movsl
pop
jl
inc
js
pop
mov
les
and
cld
or
outsl
mov
fsubr
je
inc
pushf
or
lock
int3
mov
cli
xlat
scas
pop
xchg
or
mov
popa
les
xor
fistl
ret
lret
cli
and
push
aad
iret
add
mov
and
enter
push
cltd
xchg
stos
pop
popa
insb
and
cmp
scas
sbb
mov
icebp
or
and
push
out
movsb
sbb
adc
cmpb
xlat
aaa
test
ja
dec
jmp
rorb
ret
jbe
cmp
and
movsb
stos
mov
lods
imul
mov
rcl
add
mov
jl
push
lret
dec
iret
orb
fsubp
add
jge
pop
stos
jge
mov
movsb
cmc
and
pop
sub
insl
out
mov
mov
lret
out
cli
lret
in
std
jb
lods
ret
in
xor
dec
imul
lcall
cs
fdivrs
lahf
sbb
inc
incb
sarl
ficoml
cmpl
adc
inc
xchg
cmp
xor
shll
popf
push
cmp
clc
jmp
push
pop
aaa
dec
lcall
test
leave
mov
scas
out
cwtl
pop
pop
enter
inc
fcomi
adc
jmp
cmp
cltd
lret
repnz
xor
mov
jp
inc
aad
cmp
push
leave
push
aaa
inc
jns
xchg
adc
mov
cmpsl
push
movsb
mov
adc
fstpl
shll
push
out
cmpl
jecxz
fisubl
and
test
jne
popa
pop
ret
dec
pop
js
pop
jge
test
and
movsb
or
fs
into
lret
adc
les
call
stc
mov
sbb
xlat
mov
or
inc
sub
test
xchg
aam
test
addr16
or
mov
add
idivb
xor
xor
nop
lods
or
mov
leave
fxam
pop
mov
loop
popf
fbld
dec
pop
stos
mov
int
lret
leave
ja
repz
jb
and
movsb
cli
inc
pop
fstpt
adc
or
push
mov
mov
imul
dec
dec
adc
out
loopne
sub
xor
xchg
pusha
pop
lock
adc
xor
sub
cmp
jb
dec
insl
pop
addr16
or
and
cmp
lahf
mov
popf
mov
sub
fwait
iret
jecxz
and
jmp
out
push
push
sbb
int
pop
fldcw
xchg
orb
xlat
xchg
in
fidivrs
pop
sbb
in
loopne
scas
aas
out
mov
jg
mov
cmc
dec
dec
hlt
aaa
mov
mov
sahf
mov
mov
cmp
push
sti
xor
mov
pop
jg
shr
jo
or
test
fmull
push
dec
daa
jb
stos
outsl
sbb
xchg
lds
dec
test
fstpl
mov
xor
movsl
pop
daa
mov
outsl
jb
sarb
jle
pop
movzwl
and
jmp
sub
or
jge
fldt
icebp
add
sub
fcoms
mov
fsts
sub
jbe
dec
xchg
outsb
ja
mov
sub
xor
jp
fsubp
aad
lret
dec
pop
jge
mov
in
mov
mov
repz
imul
dec
adc
mov
lock
cwtl
mov
les
pop
pop
cmpb
cmp
shll
mov
sarl
mov
mov
jmp
dec
jo
sub
int3
mov
sub
sbb
xor
out
xchg
dec
stos
lea
and
es
jecxz
push
and
imul
xchg
jae
mov
add
xchg
scas
dec
lds
mov
scas
scas
jnp
fidivl
push
cmpsl
jmp
insl
xchg
insb
popf
rcr
and
iret
cmpl
mov
out
sbb
dec
shll
fld
out
cld
sbb
loope
push
jb
addr16
jo
sub
addr16
pop
loopne
out
push
add
or
dec
push
xor
iret
popa
unpcklps
ja
insl
loopne
outsl
sub
es
fwait
pop
outsb
inc
jecxz
cmp
data16
mov
imul
xor
movsb
inc
jno
lock
jo
lods
push
sub
mov
sbbl
jecxz
je
cmp
outsb
das
adc
jmp
mov
xchg
inc
dec
lret
mov
sbb
mov
popf
out
mov
mov
xor
repnz
call
inc
pop
cmc
mov
sbbb
or
mov
ja
sbb
stos
int
pop
sbb
cwtl
repnz
ja
adcl
xchg
mov
loopne
mov
push
pop
sub
and
mov
call
sarb
push
xchg
inc
leave
pop
in
shll
inc
pop
pop
cmpsl
rcrl
xor
dec
ret
imul
popf
ror
dec
inc
inc
push
dec
sti
into
jb
gs
test
fstp
js
mov
sub
addb
ret
fs
inc
jb
xorb
pop
ljmp
andb
loope
push
inc
dec
icebp
outsb
and
cmp
repz
nop
shlb
fsubl
jo
cmp
inc
arpl
jae
shr
test
mov
push
lcall
mov
ret
cmp
popa
dec
mov
dec
lea
push
movl
lret
sbb
int
or
mov
dec
shll
sbb
mov
jmp
mov
jecxz
xor
nop
xchg
clc
xchg
cmpsb
stos
xchg
jmp
cwtl
add
divl
fimull
test
int
add
or
mov
mov
out
pop
mov
cmp
mov
gs
inc
aas
imul
inc
movsl
ljmp
fiaddl
or
lret
ds
out
outsl
lret
push
fnstsw
cwtl
imul
push
int
aas
addr16
ljmp
xchg
sub
sbb
mov
lea
data16
clc
ljmp
mov
jl
iret
xchg
divb
aad
dec
iret
push
and
outsl
jecxz
cmp
xchg
movb
adc
xor
or
ja
mov
enter
jbe
fisttpll
adc
sub
push
loop
dec
mov
mov
adc
pusha
jb
or
pop
sub
xchg
xor
inc
ss
ljmp
popa
ss
xchg
sub
push
or
push
sub
cmp
in
cmpsl
out
rcll
adc
xchg
and
add
movb
shrl
scas
sub
lret
or
mov
and
and
fbstp
sub
cwtl
dec
in
test
push
or
in
stc
into
insb
in
flds
out
mov
filds
cs
inc
mov
inc
lret
dec
mov
pusha
hlt
push
addb
fwait
pop
ja
pop
pop
test
enter
push
push
dec
jle
movl
repnz
mov
out
sbb
push
not
gs
ret
pusha
call
push
add
inc
xchg
push
sti
in
xchg
sub
mov
cmp
shrl
cmp
and
inc
repnz
pop
test
push
add
push
adc
int3
adc
mov
es
enter
mov
sbb
rolb
loop
add
xchg
lods
add
and
imul
inc
insl
scas
mov
lret
dec
pop
jb
sbb
fucomi
pop
inc
push
push
jmp
mov
xchg
lret
sub
fidivrs
push
pop
popf
outsb
add
mov
ret
push
cmc
in
popl
add
push
dec
push
stos
cwtl
test
ja
xchg
cwtl
cmp
fwait
dec
pop
leave
dec
lea
pusha
aad
jecxz
es
add
sbb
push
and
pop
mov
out
add
jecxz,pt
adc
in
jo
dec
test
call
add
call
pop
pop
rorb
mov
lcall
lcall
inc
mov
and
pop
sbb
push
or
push
mov
adc
cmc
call
negl
mov
mov
mov
dec
cmp
ljmp
pusha
ret
mov
xor
aas
outsl
in
xchg
out
inc
imul
push
in
mov
adc
mov
jmp
lret
lods
les
add
cmpsl
fimuls
sub
pop
and
into
inc
mov
movsl
cmpsb
int
lea
inc
sub
test
sub
xor
imul
cmc
in
jmp
cltd
cmpsl
jle
sub
dec
enter
cltd
pop
xchg
jbe
xchg
and
push
scas
fdivrl
jae
insb
cmp
fdivrs
push
and
or
rorb
adc
jno,pt
int
add
jmp
rcll
stos
or
push
rcl
mov
repnz
popa
add
cmp
in
fwait
jo
or
outsb
incl
push
xor
jbe
in
sbb
insb
push
lcall
popa
sbb
dec
cwtl
pop
inc
push
in
push
mov
into
cmpsb
jns
push
inc
scas
stos
sbbb
cmp
xor
into
not
jle
scas
cmp
inc
movsb
dec
test
jbe
push
push
inc
mov
mov
pusha
and
mov
repnz
or
jge
sub
jl
hlt
mov
pop
adc
inc
and
shll
lahf
dec
sbb
add
shlb
and
add
pop
push
mov
push
ret
insb
and
or
mov
stos
sub
add
insb
lcall
mov
adc
and
data16
mov
leave
daa
sub
and
sti
ljmp
pop
sub
push
and
adc
cltd
sbb
mov
aam
xlat
push
pusha
adcb
insb
int
xor
cmp
mov
xor
scas
mov
sub
ss
pop
ss
dec
cmp
dec
mov
popa
add
outsl
shll
cmp
lods
adc
rol
popf
pusha
sub
add
cmc
jns
and
out
lcall
and
pop
fwait
or
mov
scas
pop
cmp
jnp
decl
xor
jp
ljmp
testl
outsl
repz
inc
je
bound
pop
sbb
adc
lods
or
les
out
fbld
push
mov
inc
and
mov
in
adcb
dec
scas
arpl
mov
and
xchg
shlb
sbb
push
cli
pop
inc
pop
out
repz
mov
mov
shlb
jbe
clc
repnz
push
xlat
push
sbb
push
dec
xor
add
aaa
scas
daa
fildll
shlb
nop
imul
std
lret
scas
loop
icebp
rorl
les
ds
push
sbb
pop
sti
adc
xor
pop
jl
push
aad
in
cmp
cmpsl
sahf
push
mov
jg
push
aad
es
lods
mov
or
lds
inc
xchg
jb
loop
int
test
xor
jge
dec
cmp
or
mov
add
dec
test
lds
inc
cmpsl
out
mov
push
or
xor
fwait
movsl
mov
push
cmp
fstl
push
cmp
test
fdivrp
or
adc
pop
aad
lea
imul
mov
jmp
push
lock
push
test
jl
mov
sbb
dec
push
push
dec
cmp
adc
pusha
or
sbb
sub
scas
call
bound
iret
push
aad
jbe
inc
lods
push
xchg
jle
into
jbe
fwait
dec
mov
jne
mulb
adc
sbb
cmp
insl
fimull
xor
xchg
mov
cmp
sbb
fcompl
negb
add
xchg
or
bnd
dec
sub
lcall
xchg
fucomi
sbb
in
aam
sub
push
test
mov
add
repnz
push
cli
data16
clc
incl
out
mov
ror
push
movb
add
ret
pop
inc
test
loope
stos
xlat
push
cmp
mov
adc
lock
jne
inc
push
lret
cmpsl
cmp
add
xchg
mov
add
add
mov
js
pop
pop
icebp
pop
add
mov
loope
mov
loop
insb
mov
mov
inc
aaa
dec
hlt
lcall
fcmovu
and
into
add
sub
mov
dec
mov
jle
mov
jno
xor
pop
subl
push
stos
jbe
push
hlt
xor
inc
pop
ljmp
popa
std
fwait
ja
mov
xor
sbb
mov
daa
outsl
adc
mov
jne
pop
aad
xchg
rolb
pop
pop
adc
sbb
test
repnz
sub
dec
dec
add
sub
xor
movsl
xor
stos
inc
cltd
inc
pop
lods
dec
cs
mov
stos
vprotw
jecxz
sbb
xchg
cltd
pop
pop
jge
and
nop
jbe
cmp
leave
xchg
bound
and
cld
adc
fcos
add
repnz
cwtl
loope
pop
ljmp
xchg
cmp
test
testl
push
pop
adc
lret
xchg
push
in
rcll
iret
inc
mov
cmp
fcoml
push
ss
pop
jge
cwtl
loop
inc
mov
stos
aam
xchg
push
xchg
push
incl
iret
inc
fwait
mov
sub
sti
push
jne
punpcklbw
mov
cmp
and
shl
lock
cmc
call
mov
hlt
xchg
lcall
inc
xor
js
insb
sbb
popf
jno
mov
rorl
xorl
and
xor
in
std
jo
cmp
fwait
jb
xor
daa
stos
insb
mov
xchg
inc
js
iret
inc
das
mov
or
or
sbb
xlat
pop
xor
push
cmpsb
dec
and
divl
outsb
shl
inc
popa
mov
push
fildll
or
push
and
aam
lcall
mov
dec
lcall
sbb
out
jmp
pusha
lock
and
incl
mov
cmp
cmp
push
push
adc
or
ljmp
dec
and
iret
lcall
dec
rcll
cmpsb
xor
mov
ficoml
pushf
addb
test
in
mov
imul
jne
mov
inc
dec
mul
in
adc
push
int3
inc
cmp
aad
sub
sbb
repnz
mov
jecxz
aad
pop
pop
stc
fistps
adc
xchg
nop
lods
fs
adc
pop
jno
pop
nop
adc
push
sbb
cmp
mov
mov
jl
enter
fildll
or
fistl
arpl
rsqrtps
aas
mov
add
enter
pushf
cld
loope
rclb
sahf
call
sahf
lahf
sbb
cwtl
jmp
cmp
jne
push
outsl
adc
pop
cmc
xor
xorl
lods
xor
and
xor
enter
xchg
dec
sbb
pushl
xlat
popa
icebp
add
mov
mov
dec
inc
sub
adc
pop
stos
cmc
imul
fs
mov
js
sbb
dec
xchg
nop
jns
push
or
add
jl
mov
lahf
incb
arpl
xchg
dec
sub
lret
adc
push
js
je
test
xchg
mov
out
lds
dec
or
insl
lret
jp
mov
push
mov
and
bound
jecxz
lret
pop
mov
fidivs
lret
test
xor
inc
mov
movsb
inc
popa
pop
cld
mov
fmuls
shlb
mov
pushf
cmc
insl
fnstsw
xor
sub
sub
or
push
jp
in
add
push
nop
jle
mov
mov
inc
stos
in
imul
push
inc
push
sub
cmp
jno
icebp
mov
jne
adc
inc
mov
jae
rorl
dec
imul
sbb
pop
movsb
ret
cmp
fsubrl
jae
jg
out
cmpsb
lahf
sbb
push
shlb
dec
xchg
jge
arpl
add
or
sbb
jnp
es
mov
fildll
int
mov
in
popa
or
stos
inc
imul
add
scas
pop
mov
dec
shl
sbb
sub
jle
stc
fstpl
das
or
addr16
xchg
adc
cmp
in
ja
shlb
ss
jl
pop
lret
call
jecxz
or
adc
mov
mov
les
and
fldcw
mov
xchg
bound
xchg
das
inc
adc
xchg
jne
cld
fisubrl
shl
cmp
sub
jp
add
addr16
pop
adc
iret
or
xor
insb
sahf
and
jne
std
sub
lods
out
mov
icebp
cmp
mov
mov
scas
push
mov
mov
daa
ror
xchg
push
jg
mov
pop
pop
inc
repz
sarb
shrl
and
jno
int
adc
hlt
cmp
mov
inc
push
cs
ds
mov
cmp
arpl
mov
dec
out
inc
int
fstl
adc
std
dec
mov
mov
sbbl
popa
mov
xchg
fs
fstpl
mov
or
fwait
pop
fcmovnb
dec
dec
xchg
sbb
movsl
pusha
shlb
test
jmp
lahf
jge
mov
xchg
push
pop
sub
mov
enter
lds
fwait
pop
dec
sahf
in
adc
dec
mov
or
fiadds
fstps
push
cmp
std
jnp
lahf
xchg
add
adc
pop
mov
add
hlt
lret
cmc
mov
imul
out
les
pop
jmp
mov
cmpsl
xor
cmp
jae
sub
jmp
stc
scas
insb
xlat
loop
xor
lret
stos
add
lret
jmp
mov
dec
fldt
push
pop
and
imul
int3
inc
pop
pop
inc
outsb
add
and
out
test
or
int
mov
lods
jle
push
inc
add
in
sti
jl
push
xchg
cwtl
cs
add
inc
cmpsl
xor
les
nop
mov
loope
pop
int3
dec
mov
cmc
in
int3
sbb
lods
mov
repz
dec
pop
sahf
imul
outsb
pop
xchg
push
add
mov
movsb
std
xor
or
sti
mov
int
es
icebp
mov
and
mov
mov
icebp
into
int
dec
cmpsl
jnp
adc
vpshufd
data16
in
xchg
or
mov
push
mov
dec
aad
mov
out
pop
les
add
out
jmp
test
mov
jbe
aaa
popf
adc
lock
sub
pushf
jno
and
xor
icebp
jl
addr16
mov
gs
out
inc
jnp
dec
mov
mov
xchg
add
nop
loope
icebp
fcmovnbe
add
dec
cmp
push
daa
cmpsl
test
pop
cmp
dec
xchg
insb
jbe
mov
cmp
pop
jg
enter
jecxz
push
xchg
addr16
movsb
sarl
js
imul
and
adc
icebp
adcb
mov
pop
fwait
pusha
add
push
shlb
xchg
cmp
adc
dec
mov
jg
mov
jecxz
mov
test
xchg
xor
cmc
int
xlat
xor
stc
cs
jne
mov
mov
aam
pusha
mov
pop
add
xor
shl
mov
loope
jns
xor
rol
stc
rcll
adcl
outsb
fsubr
or
ljmp
cld
mov
insl
test
hlt
push
fldl
add
jge
dec
or
fwait
clc
add
push
insl
pop
sarb
aaa
mov
popf
jae
test
fbstp
lcall
sti
fistpl
mov
into
and
loop
jne
mov
scas
pop
sbbb
mov
movsb
cmp
in
sbb
fimuls
mov
test
dec
pushf
xchg
pop
stos
sbb
or
mov
pop
adc
or
cmpl
pop
add
lods
adc
mov
es
enter
mov
and
stc
inc
sti
les
dec
fwait
and
cmp
add
in
adc
pop
and
xchg
lods
inc
es
outsb
sub
pop
scas
inc
sbb
and
icebp
enter
lcall
jl
pop
fidivrs
or
xchg
fs
cli
pop
testl
stos
popa
pop
mov
xor
xor
pushf
fisubl
es
dec
test
mov
push
jbe
xor
sub
adc
dec
shrl
xor
mov
sbbl
sub
adc
cld
jne
cmpsl
je
cmpsl
jae
adc
call
out
xlat
in
mov
xchg
nop
jne
inc
in
mov
cmpsb
stos
fwait
leave
aaa
push
sub
sbb
jle
fimuls
xchg
out
rcrl
stos
lods
mov
test
or
test
mov
inc
cli
pop
pop
fdivrl
mov
mov
iret
or
mov
hlt
xor
xor
adc
fsubrl
ret
daa
inc
push
icebp
mov
scas
push
sub
stos
shl
cmp
jae
push
jo
ret
icebp
pusha
adc
inc
and
xlat
pop
shr
in
jmp
cmp
mov
dec
mov
stos
ja
lods
mov
call
dec
adc
lock
or
icebp
inc
add
sub
popa
sbb
dec
aad
movsb
mov
sahf
in
insl
fistpl
ja
mov
insb
ret
fcmovu
inc
sbb
xchg
fcmovnu
mov
imul
xchg
push
xchg
in
aas
mov
xchg
mov
cs
aam
jmp
xchg
out
sbb
ljmp
inc
adc
stos
mov
lahf
pusha
jmp
das
out
div
icebp
pop
or
xor
ret
jecxz
hlt
daa
push
jae
cwtl
repnz
mov
cmp
inc
xchg
cmp
repz
sbb
lahf
dec
call
lods
je
ljmp
mov
jnp
mov
int3
push
mov
add
sbb
mov
xor
push
xor
out
and
popl
inc
subb
popa
gs
test
movsb
mov
scas
lock
inc
dec
xchg
dec
inc
push
sub
inc
adc
jge
pop
jl
inc
pop
or
xor
test
pop
and
iret
xchg
gs
lods
sbb
aaa
mov
lods
test
sub
mov
ja
sbb
adc
enter
sub
lds
add
cltd
jmp
loop
sbb
jle
in
sti
push
dec
xchg
rcr
cltd
xchg
ljmp
ss
xchg
jp
pop
dec
negl
and
aam
imul
sbb
cltd
shll
js
jae
mov
sbb
dec
cltd
sbb
rcrb
test
data16
dec
in
dec
enter
and
mov
jbe
cmp
adc
pushf
dec
push
das
and
inc
dec
xor
rcll
inc
xchg
ror
push
xchg
inc
loop
add
dec
xchg
popf
inc
push
mov
pop
cli
gs
and
dec
dec
jnp
xchg
inc
jnp
sahf
call
lret
fdivr
inc
pop
or
dec
inc
test
push
ja
stc
push
xchg
out
stos
xchg
xchg
push
push
xchg
inc
push
or
fstpt
int
das
in
jnp
pop
or
stos
fsubrl
adc
daa
out
push
movsl
inc
fstps
sub
arpl
scas
jle
dec
dec
loopne
insl
cmp
jbe
xchg
ds
loop
or
sarb
dec
loop
inc
adcl
xor
movsb
pop
icebp
in
push
lret
rorl
adc
lea
jbe
push
int3
lret
out
in
int
push
jno
jl
xor
mov
movsb
adc
and
push
push
adc
out
xor
adc
popa
inc
sbb
ret
mov
adc
add
mov
sub
pop
aas
repnz
sbb
es
and
clc
mov
jmp
fiaddl
xorb
cmp
add
mov
jp
add
mov
fiadds
or
sub
insb
dec
cmc
jecxz
ss
cmpsl
js
mov
sbb
push
jecxz
sub
xchg
push
stos
push
cltd
pop
mov
shl
pusha
sub
daa
repnz
sub
or
mov
sub
mov
sbb
xchg
lds
fimuls
push
sub
mov
xor
sub
ret
jae
inc
jo
lret
or
lret
push
inc
cld
inc
or
push
xchg
dec
adc
ss
jg
into
nop
mov
adc
dec
push
pcmpeqd
std
js
jbe
sbb
rolb
stos
mov
cmp
sahf
jne
cmp
insb
rolb
jg
test
out
incb
cli
mov
jns
popf
arpl
mov
sub
ds
adc
enter
mov
push
loop
mov
lea
or
and
inc
cmc
inc
jge
fwait
adc
int3
mov
adc
movsl
outsl
push
push
movsl
xchg
jnp
add
dec
pop
out
xor
adc
inc
or
ljmp
pop
pop
or
insl
dec
in
movsl
sub
and
nop
jp
cmp
mov
add
daa
aas
jo
pushf
sbb
dec
push
ss
jg
jae
cmp
cs
fmul
into
imul
cmpb
clc
mov
daa
mov
pop
adc
popa
stos
fidivrl
dec
fnclex
fcompl
mov
and
sub
jge
jns
testl
dec
call
push
push
xchg
lret
les
pop
jle
jb
xlat
int3
pusha
sbb
add
hlt
xchg
xor
push
dec
mov
lahf
and
leave
fs
pop
inc
xor
pop
sbb
fadds
pop
xor
mov
jae
xor
insb
pop
mov
lock
pop
mov
adc
mov
sbb
push
pusha
ja
cmpsb
fisubl
in
imul
mov
out
xchg
and
shl
jl
mov
aaa
ret
das
mov
cs
dec
hlt
dec
mov
insb
pop
sub
arpl
jle
aad
push
rcrl
ja
and
daa
fidivs
repz
js
popl
add
fwait
mov
lods
ds
fsubl
mov
aad
les
add
cli
xchg
cltd
aas
add
sti
loop
inc
jbe
pop
adc
nop
ljmp
into
int3
push
push
adc
push
inc
and
add
mov
ljmp
stos
mov
pop
adc
lahf
adc
outsb
adcb
stos
lods
es
shll
push
xchg
and
lods
mov
adc
outsl
push
icebp
sbbl
jb
ds
insl
sahf
shll
roll
int
jae
mov
xor
das
add
sub
sbb
and
inc
add
gs
fstps
test
rep
int
mov
sahf
push
push
pop
pop
outsb
fcoms
mov
test
jg
orl
inc
mov
or
pushf
xchg
push
cmp
xchg
add
xchg
inc
add
dec
inc
mov
cmp
push
movsb
decl
call
pop
call
and
cmp
ja
xlat
mov
out
inc
adc
cli
into
adc
xor
pop
add
aas
shl
hlt
sub
jo
sbb
dec
mov
pop
cmpl
cmp
push
mov
icebp
paddsw
pop
xchg
pop
adc
in
xor
fcomps
or
ficompl
sbb
cld
mov
push
mov
pusha
sbb
scas
dec
mov
mov
dec
push
mov
dec
lret
decb
or
pop
or
push
push
xor
mov
mov
ret
xchg
pop
or
repz
inc
add
jne
inc
pop
movsl
mov
jmp
stos
jmp
ret
fiaddl
pop
sbb
lods
fidivrl
in
aam
hlt
mov
add
mov
pop
or
add
or
rolb
dec
lods
repnz
push
cmpsb
rorl
lods
adc
inc
cmp
in
mov
mov
mov
stos
dec
jecxz
jns,pn
xorl
orb
outsb
test
mov
xor
lock
cmp
sub
jmp
scas
sbb
fiaddl
add
idiv
jmp
push
repz
mov
push
icebp
push
jns
pop
rdmsr
sub
dec
jmp
lcall
shrb
outsl
xchg
fldenv
into
insb
mov
jnp
stc
push
jno
test
scas
add
cmp
nop
je
jl
add
fidivl
stc
sahf
cmc
jbe
mov
push
cmp
sbb
shrd
popa
push
fildl
rcl
pop
mulb
out
sub
fcomip
repz
sub
aam
mov
dec
shlb
cmpsb
pop
mov
push
lods
push
leave
mov
mov
loope
sti
xor
and
mov
fnsave
int3
out
mov
mov
and
xor
add
xchg
pop
lcall
push
test
cmp
imul
das
paddsb
std
out
mov
pop
add
loop
imul
cmpsl
outsb
pop
inc
iret
int
in
mov
sbbl
push
add
popf
sbb
and
xchg
ss
and
mov
mov
aaa
shll
lods
enter
ljmp
sub
mov
lcall
ja
sarb
jbe
sub
outsl
add
xor
mov
aam
data16
test
jns
in
inc
shlb
les
jnp
pop
enter
mov
out
dec
cld
int3
into
sti
jnp
in
and
and
in
adc
add
jne
sub
xchg
or
pop
sbb
cltd
jo
dec
sbb
add
dec
add
outsl
arpl
fstpt
or
mov
mov
sar
xor
xchg
or
out
out
dec
aad
cwtd
enter
mov
mov
adc
cmp
scas
add
pop
xor
fcomip
pop
aam
inc
jo
xchg
sbb
rcr
les
lods
mov
mov
scas
and
insb
and
imul
test
pop
mov
lea
sbb
in
ds
imul
mov
lret
xchg
add
cmp
pop
mov
mov
mov
mov
cmpsl
adc
cmp
rolb
inc
mov
push
xor
enter
fs
repnz
jb
jbe
stc
mov
lods
dec
imul
lcall
popf
xlat
xchg
inc
cmp
pop
insb
dec
mov
iret
xchg
and
imul
sbb
test
xor
fstpl
pop
dec
int
popa
xorb
mov
push
fcmovu
arpl
mov
jno
jmp
push
imul
enter
lds
adc
loope
imul
mov
mov
push
je
mov
scas
dec
xchg
movsb
push
sbb
pop
pusha
fisubrs
mov
inc
adc
cwtl
mov
jmp
pop
loop
and
xorl
subb
pop
jb
sbb
jmp
xchg
mov
jge
add
hlt
test
aaa
cld
ds
shrb
movsb
fstp
jb
push
push
icebp
mov
ljmp
mov
push
jae
movl
addr16
shll
call
clc
pop
test
cmp
lods
leave
dec
mov
dec
xor
cmp
mov
mull
jl
xor
cli
add
ss
xchg
popf
leave
cmp
add
stc
cmp
and
xor
xchg
test
pop
mov
leave
scas
icebp
test
dec
test
and
popf
mov
in
inc
test
adc
mov
mov
pushf
mov
adc
or
jg
fdivrs
mov
mov
test
js
mov
ljmp
and
paddd
mov
and
fs
cmpsb
cmp
fdivrs
jae
arpl
lock
sub
mov
loop
inc
push
dec
cmp
xor
jne
repz
stos
xchg
jp
rol
les
dec
sahf
add
sbb
cld
hlt
sub
mov
push
cmp
add
cmp
cmp
movsb
mov
call
dec
dec
xchg
jl
pop
add
nop
lods
add
push
mov
sub
sub
arpl
ja
mov
mov
and
push
jecxz
cmc
fisttps
or
cmp
imul
xor
sbb
ret
stos
sub
mov
mov
fisubrl
movsb
rcll
pop
xchg
mov
lea
fnsave
jg
adc
gs
adc
cli
in
cwtl
in
les
dec
rorl
lcall
pop
das
pop
mov
and
test
sub
fisttpl
fidivl
in
push
jge
ljmp
loop
dec
add
sub
push
inc
sbb
push
dec
dec
call
ret
add
testb
mov
sub
pop
lret
dec
scas
jecxz
cli
mov
es
cld
dec
arpl
gs
cmp
mov
loope
out
xchg
mov
aaa
aas
cld
mov
xlat
mov
xchg
cltd
in
sbb
pop
cmp
sbb
aaa
out
mov
xor
int
loop
xor
dec
or
and
jbe
sub
int
or
in
xor
fsubrs
stos
iret
insb
lods
inc
cltd
mov
ljmp
xor
imull
pop
sub
cmp
adc
push
and
test
inc
movsb
sbb
cmp
out
jg
popf
mov
int
cs
aam
outsl
lret
sbb
xchg
insb
and
jg
mov
ror
xchg
mov
xchg
nop
mov
mov
add
push
xchg
cli
stc
lock
imul
or
jg
mov
push
add
mov
addl
cmp
mov
ret
push
adc
sahf
popa
mov
outsl
mov
dec
inc
and
push
pop
lcall
mov
enter
in
xor
cmpsl
jmp
ret
shl
jmp
cmpsb
std
sbb
push
inc
pop
sub
jg
aam
xchg
stc
add
sbb
mov
dec
std
push
repnz
sub
push
adc
cmpl
das
cmp
pushf
mov
daa
inc
sbb
decb
push
pop
out
dec
add
dec
aaa
mov
add
mov
lret
idivl
clc
pop
fldl
jmp
cmp
arpl
mov
dec
adc
lods
or
dec
dec
add
dec
mov
sub
mov
cmpsb
sbb
adc
shlb
repz
jae
nop
iret
pop
and
mov
lea
sahf
push
xchg
xchg
add
pop
insl
dec
xchg
or
and
js
jle
sub
fcoml
sbbl
push
out
out
repz
adc
mov
loop
in
dec
mov
mov
adc
dec
iret
icebp
add
sub
jmp
dec
movl
cli
xor
mov
mov
push
adc
inc
dec
aam
out
pop
test
cmp
outsb
shrb
xchg
adc
pop
pop
mov
and
rcll
int
pop
jmp
leave
xor
adc
popf
pop
test
into
add
jnp
outsb
push
ljmp
cmp
adc
stos
cmp
cmp
insl
xchg
jnp
fs
enter
sub
sub
nop
in
lock
imul
xchg
imul
xor
cmp
sub
ss
dec
ja
mov
push
dec
mov
outsb
push
pop
inc
pusha
das
cmpl
inc
sbb
adc
call
xchg
mov
jns
jecxz
and
xor
inc
or
repz
dec
cli
push
lods
scas
inc
lahf
xchg
push
addl
aad
test
rorl
sbb
outsb
xchg
fwait
out
adc
lcall
je
in
push
cmc
jno
xor
xchg
sbbl
push
cld
xor
cmp
clc
cmpsb
imull
jle
adc
xor
sarl
push
stos
or
fchs
dec
popl
int
push
jne
cmc
aad
sub
inc
mov
clc
and
ja
adc
dec
jo
cmp
lcall
loopne
adc
mov
pop
sar
xchg
in
movsb
lock
push
aaa
mov
or
test
rolb
aaa
std
scas
inc
cmp
pop
fildl
dec
clc
or
les
jae
add
cmpl
pop
in
push
fidivrs
out
cmc
fsubl
xlat
rorl
and
cmp
in
xchg
mov
fst
jle
cmp
pop
stos
insl
inc
pop
daa
outsb
loopne
lret
fisttps
outsb
cli
ret
cs
pop
adc
dec
ret
scas
jbe
or
push
mov
rorl
shll
test
inc
mov
mov
jo
sub
lods
aas
mov
add
or
rsm
ret
jecxz
cltd
cmc
lret
cmpsb
fisttpll
in
and
mov
mov
sbb
inc
xchg
jg
sahf
shlb
loope
pop
es
out
movsl
jae
fists
mov
into
xchg
jbe
sbb
push
mov
lret
xor
inc
inc
mov
cmp
or
int
cs
sub
lret
pop
dec
and
andl
or
outsb
test
sbb
mov
mov
push
rclb
imul
lods
lods
sub
mov
dec
jnp
loope
ja
arpl
mov
gs
repnz
inc
std
ret
int
mov
mov
push
outsb
mov
mov
into
imul
es
sarl
int3
pop
out
pop
popf
lret
xchg
je
cmpb
inc
jg
xlat
and
mov
add
cmc
sub
fdivrs
addb
cmp
and
mov
cs
fs
insb
and
xchg
lcall
mov
mov
mov
mov
loope
pop
sub
xchg
shl
add
add
outsl
sbb
mov
or
cmp
push
lea
sti
repnz
sahf
xchg
xor
push
lock
ss
xchg
in
mov
lds
lahf
dec
push
sti
fwait
cld
mov
adc
test
inc
inc
scas
dec
jno
push
mov
aad
adc
aas
push
jge
stos
adc
loopne
pop
xchg
sti
popf
inc
adc
dec
xchg
clc
int
sbb
add
inc
mov
sub
inc
leave
pushf
mov
jno
cmp
cmpsb
lock
adc
push
setb
pop
clc
loopne
leave
test
and
out
add
js
mov
cmpsl
xchg
jle
enter
lret
xchg
ja
rcll
cli
lcall
out
cmpsl
div
mov
inc
pop
jg
sub
subb
add
mov
cmc
stc
pushf
xor
sbb
add
imul
sub
sbb
sbb
loop
int3
outsb
mov
add
mov
pop
ret
sub
xor
inc
or
cli
iret
clc
fimuls
mov
std
popf
inc
outsl
bound
adc
inc
sti
lret
cs
jae
mov
xchg
repnz
rcr
mov
pop
daa
repnz
addr16
mov
nop
sbb
cld
cld
xchg
xor
xchg
push
in
movsl
lcall
pop
xor
xor
icebp
or
pop
mov
lea
xlat
jns
insb
inc
sbb
mov
scas
clc
xor
and
adc
mov
pop
push
sub
mov
inc
jns
jp
xchg
or
jg
fiadds
inc
push
pop
xchg
sbb
push
adc
data16
cmp
shl
aas
jp
fcmovne
pop
stc
cmc
xchg
test
xor
push
push
jmp
and
add
mov
mov
stc
ds
ss
addr16
cli
shll
sbb
jae
add
sub
and
cmp
inc
lahf
stos
lret
insl
or
inc
inc
mov
idivb
sub
mov
cs
pushf
shll
fcomp
inc
pop
cmp
push
push
mov
fbld
fucom
outsb
jno
cltd
ret
and
das
dec
insl
sub
jge
jl
mov
addr16
inc
test
cmp
pop
and
push
jns
inc
insl
daa
lcall
mov
lock
rcll
lahf
lods
outsl
xchg
mov
stc
jns
inc
imul
xor
xlat
negb
syscall
clc
or
and
repnz
call
mov
lret
lods
lea
jp
pop
xchg
imul
rcl
sbb
jmp
in
sub
insl
xor
mov
lret
jnp
testl
leave
xchg
sbb
push
and
rcrb
outsb
push
in
add
into
push
in
adc
jp
inc
jecxz
push
adc
push
push
iret
xor
fiaddl
js
mov
mov
mov
mov
jae
test
sbb
xchg
js
mov
mov
jecxz
rcll
ret
ret
adc
cltd
testl
leave
push
mov
mov
push
pop
inc
sbb
xorb
adc
xor
mov
out
es
pop
xchg
sub
mov
add
les
popf
lcall
mov
push
fwait
sub
mov
test
xchg
add
data16
mov
push
and
inc
adc
stc
mov
or
rcll
das
sbb
xchg
movsb
mov
and
dec
push
cmc
out
push
add
dec
daa
inc
lods
mov
sub
and
mov
lcall
xchg
sub
stos
stos
lcall
add
aas
cmp
movsl
push
jno
imul
movsb
pop
lret
cli
idivb
sbbb
mov
cs
pop
rorb
mov
ss
in
mov
lahf
xlat
pusha
cmp
jns
push
mov
jae
adc
es
jno
bound
mov
sub
jns
mov
push
cmpsl
mov
and
sahf
cltd
aaa
mov
xchg
sub
xchg
mov
iret
dec
movlhps
sub
pop
cmp
mov
rcrb
loopne
mov
jg
lret
mov
rorw
push
sub
mov
mov
rep
ds
jne
push
xchg
lods
jo
push
jmp
pop
cmovnp
adc
pop
inc
xchg
scas
aas
jmp
decl
data16
mov
xor
pusha
add
mov
jae
and
push
xchg
mov
push
adc
les
or
addr16
pusha
cmp
dec
push
leave
sbb
pop
add
test
scas
testl
sti
aas
jge
mov
adc
push
dec
les
xchg
popf
call
pop
leave
mov
push
and
xchg
rolb
cmc
push
xchg
pushf
sub
pop
lahf
adc
movsbl
push
shlb
mov
pop
cmp
add
xor
add
push
dec
mov
insl
cmp
call
adc
inc
jl
mov
push
sub
xor
daa
push
xor
cwtl
and
mov
sahf
push
and
cli
push
daa
notb
jecxz
mov
call
push
sti
pushf
inc
dec
inc
ja
inc
ret
and
cmp
fcmovb
mov
inc
fwait
jno
mov
push
dec
pop
cld
pop
jp
pusha
dec
idivb
lret
test
mov
insb
xchg
cld
stos
pushf
and
push
imul
adc
push
cli
jle
push
inc
mov
call
and
in
fisttpll
out
fldt
mov
mov
lds
sbb
aam
cmp
pop
jmp
and
cmpsl
mov
insb
lret
mov
sub
and
bound
dec
xchg
rcrl
adc
jmp
fstps
into
fstpl
sbb
mov
data16
mov
dec
push
or
xchg
fucomi
pop
mov
sub
les
adc
rclb
insl
fisttpl
push
add
xchg
add
push
lcall
cmp
loop
adc
sbb
mov
cmc
aad
sbb
dec
mov
ficoms
mov
pop
cmp
sbb
cmp
popa
pop
mov
outsl
in
testb
insb
and
incl
adc
arpl
and
lods
lds
xlat
shll
adc
cmp
insl
ret
mov
add
sub
cld
rcrb
fidivs
pop
cmpsl
lds
dec
xchg
xchg
loop
scas
sub
les
xchg
or
add
repnz
mov
cli
lahf
adc
fcmovnbe
inc
cmp
insl
and
sbb
adc
cmp
cld
lret
lahf
sbb
ficoml
into
xorl
mov
sbb
pop
dec
loop
sbb
lcall
jnp
push
nop
inc
lret
sbb
in
fs
leave
cld
and
aad
push
add
in
addl
cmp
fistpll
jecxz
push
or
clc
lcall
sbb
dec
sub
jb
jns
xor
jae
push
daa
or
dec
mov
or
clc
loopne
push
ffreep
adc
dec
adc
scas
xchg
or
gs
stc
roll
xlat
dec
inc
xchg
outsl
pushf
pop
mov
add
or
dec
test
cmp
mov
int3
fcoms
pop
cmp
je
xchg
jne
lock
sub
in
mov
insl
rcl
jl
jbe
xchg
nop
xchg
mov
addb
push
lcall
test
addr16
sbb
scas
adc
hlt
inc
or
cmp
adc
jl
iret
xlat
jg
popa
clc
fstp
nop
xchg
dec
mov
js
cmpsl
sub
sahf
or
dec
push
sub
xlat
int
gs
je
cmp
dec
repnz
dec
xchg
lods
mov
mov
gs
mov
dec
mov
jmp
lcall
pushf
sarb
fistps
out
add
enter
loopne
or
xchg
mov
call
push
or
sbb
xchg
in
nop
push
test
mov
pop
rclb
cltd
sti
roll
cwtl
mov
in
lock
sub
test
test
in
jl
aas
and
lds
push
mov
mov
xor
cmp
push
dec
add
add
cmpsl
push
jecxz
je
out
xor
int3
stc
xor
xor
mov
test
daa
orl
in
scas
insl
repz
movsb
push
les
mov
push
mov
mov
mov
push
in
and
inc
sti
movb
xchg
xchg
pusha
dec
inc
mov
hlt
aam
adc
mov
stc
mov
test
fldcw
aam
xorb
sti
jmp
loope
dec
and
orl
or
stos
add
aaa
jno
sbb
icebp
and
inc
loop
mov
fcoml
mov
inc
in
mov
and
cmp
into
arpl
daa
push
push
sahf
mov
addr16
mov
arpl
test
pop
or
call
fidivl
int3
movsb
mov
push
inc
jecxz
out
lret
jbe
aaa
es
cmp
lods
pop
in
adc
xchg
mov
repz
cmpb
push
in
adc
rcrl
imulb
ror
mov
fsubrs
cld
rcr
xchg
jns
ljmp
ja
out
jecxz
loope
push
int3
xchg
and
int3
xor
add
lods
call
mov
mov
es
into
xchg
push
pusha
ss
scas
sarl
hlt
inc
test
and
xor
pop
daa
lea
int
mov
or
xor
loope
inc
sub
loopne
ret
fs
dec
mov
add
cmpsl
pop
xchg
cmpsb
ret
and
addr16
push
js
fdiv
fsubr
xor
xor
and
sbb
mov
push
cmp
mov
push
xlat
cmc
add
mov
adc
add
fbstp
push
add
dec
sar
imul
dec
xchg
nop
dec
adcb
and
es
jnp
mov
test
repnz
std
jecxz
aam
jbe
or
add
cmp
mull
jo,pn
mov
and
and
mov
ss
jmp
adc
rol
in
inc
dec
sub
jo
rcl
imul
cmp
je
aam
mov
mov
pop
stos
push
clc
mov
stc
popa
xor
push
ja
mov
out
in
jo
cmp
cmp
mov
mov
orl
cltd
sti
out
or
mov
les
and
mov
xchg
mov
pop
je
int3
adc
dec
lahf
add
mov
clc
mov
mov
xor
xchg
xor
lock
loop
inc
jne
adc
pop
rolb
adcl
adc
ss
mov
pop
mov
shl
cmpsb
mul
and
in
sahf
je
mov
scas
sbb
and
sbb
repnz
bnd
xchg
adc
fildll
xchg
fistpl
stos
mov
sub
push
mov
add
imull
add
inc
rclb
popa
rclb
cmc
jnp
xchg
out
sbb
dec
push
xor
add
into
insl
add
dec
xchg
and
mov
mov
jno
negb
inc
jae
or
cmpsb
cmp
push
inc
clc
cmp
int
or
sub
popf
push
inc
sbb
xchg
push
or
aad
mov
sbb
inc
ss
add
cmp
mov
fdiv
in
int3
push
inc
push
or
repz
out
mov
inc
dec
aaa
inc
dec
inc
loopne
in
fcoms
in
mov
and
mov
jnp
mov
mov
inc
add
xor
inc
adc
adc
adc
pop
jo
push
negb
and
adc
adc
mov
sub
mov
mov
cwtl
das
bound
je
add
into
iret
out
xchg
lods
rolb
mov
lods
or
cmpsb
xor
mov
idivl
push
xor
outsb
or
pop
stos
or
add
outsb
adc
fiadds
push
test
imul
mov
fbstp
sbb
icebp
outsb
out
lahf
fsubs
and
dec
push
pop
in
jmp
mov
pop
outsl
xlat
insb
mov
push
dec
test
clc
mov
xchg
jo
mov
outsb
mov
sahf
mov
sub
rorl
and
and
push
stos
adc
sbb
jb
pop
std
mov
imulb
sub
loop
jnp
jle
mov
je
or
insb
fnstsw
sub
outsb
adc
xchg
jo
leave
pop
cltd
mov
xchg
bound
gs
sub
mov
pop
mov
jnp
sbb
in
pop
je
dec
mov
xor
push
mov
into
fcom
fndisi(8087
bound
adc
leave
and
xchg
mov
push
jo
dec
test
dec
push
and
rcrl
mov
cmpb
add
add
sub
int
mov
mov
mov
cs
xor
adc
adc
push
dec
fstl
fs
ds
cmovbe
lret
movsl
mov
inc
dec
xor
loope
pop
push
repz
adc
cmp
adc
xor
mov
addb
xor
pop
out
testb
imull
test
aaa
leave
sub
mov
bound
fs
insb
test
sub
aas
nop
ljmp
push
mov
mov
mov
leave
xor
inc
dec
and
movb
lock
aaa
mov
icebp
out
xor
adc
iret
xor
mov
pop
sbb
pop
jg,pt
popa
cmp
and
aas
js
fs
xchg
pop
aam
sub
adc
repz
cmpl
pop
xlat
movsb
add
xchg
in
push
out
xchg
jg
mov
lahf
cmp
pop
mov
adc
or
pop
xor
or
pop
pop
mov
pop
dec
or
cmpsl
sti
movsl
xor
mov
jbe
mov
jne
jnp
cmpb
test
xor
push
icebp
jb
xor
mov
fldenv
jnp
mov
fs
mov
dec
mov
add
loop
sbb
lock
popa
jge
jne
xchg
push
jecxz
movsb
xchg
pop
inc
fwait
out
jle
hlt
cmp
test
lods
imul
xor
imul
push
ds
xchg
adc
jno
push
cmp
or
push
sbbl
sbb
pop
fsubs
aam
cwtl
movsb
jg
push
test
adc
mov
in
in
das
dec
divb
data16
jmp
imul
popa
lds
popa
cmpsb
loopne
lods
scas
cmpsl
loope
mov
jecxz
mov
test
mov
and
cmpsl
push
jae
adc
cltd
addr16
sbb
xchg
jecxz
scas
sahf
in
fistpl
sub
jne
and
xchg
mov
inc
mov
shlb
pop
jmp
jp
jae
xchg
xor
pop
or
test
pop
popf
xchg
mov
test
fmuls
das
inc
out
mov
adc
mov
push
mov
push
jns
nop
mov
or
fistl
mov
cmp
fcomps
in
jecxz
hlt
add
lea
into
repnz
cli
test
push
push
scas
jmp
push
shlb
dec
xor
push
mov
dec
das
bnd
sbb
xchg
out
sbb
xchg
ds
call
out
dec
mov
dec
inc
mov
xchg
sti
dec
mov
cmc
test
adc
cmp
or
mov
sarb
stos
out
fcoms
aas
mov
jg
push
pop
add
aaa
ficomps
adc
in
and
dec
sbb
shrl
ret
push
xchg
add
lea
mov
mov
js
cwtl
jbe
add
mov
jle
mov
pop
test
aam
xchg
in
jmp
subl
jecxz
dec
mov
push
mov
mov
dec
add
ret
lea
inc
push
mov
out
sti
or
das
pusha
and
cltd
dec
push
cld
inc
rorb
mov
dec
fwait
xchg
xor
mov
push
cmp
mov
insb
mov
mov
jns
arpl
fnop
jle
push
mov
push
jnp
scas
xlat
sub
movsb
jge
dec
jne,pt
loop
test
xchg
sub
das
or
inc
add
dec
sbb
add
sbb
and
jnp
sub
mov
jle
and
lcall
jmp
xor
or
arpl
dec
dec
test
inc
pop
pop
adc
push
dec
pop
cmp
xchg
fsts
xchg
mov
rorl
rol
daa
add
es
addb
add
mov
das
push
adc
lret
int3
mov
sub
pop
xor
push
pop
push
mov
adc
pop
xchg
push
sub
clc
popf
hlt
or
xchg
outsb
subl
leave
adc
dec
mov
vpaddq
sub
lds
jno
mov
fs
bound
jle
daa
scas
adc
out
aas
loop
xchg
jne
pusha
pusha
cwtl
and
push
in
adcb
fadd
or
adc
adc
lret
xchg
rol
pop
add
and
inc
ja
jmp
cltd
fs
out
addr16
push
fstl
out
pushf
push
inc
scas
outsb
add
aam
out
aam
sub
inc
pop
adc
scas
enter
mov
sbb
mov
test
xor
test
mov
cmpl
std
or
push
dec
add
es
adc
mov
dec
cwtl
mov
loope
sarb
inc
xlat
inc
sbb
sbb
dec
iret
daa
dec
into
mov
jne
aad
inc
jg
pop
loope
cmp
and
imul
lahf
sub
cmc
add
scas
cmpsb
sub
push
repz
inc
fimull
and
and
adc
mov
inc
out
adc
mov
ljmp
push
pop
cli
nop
push
cld
call
pushf
cmp
sbb
jle
les
fdiv
inc
js
dec
leave
xchg
cltd
push
jle
cmp
fsts
mov
orb
cmc
movsl
cmp
inc
insb
out
call
jg
or
sub
jle
lods
jge
sub
sub
lock
jp
inc
addr16
mov
outsl
adc
jmp
jb
add
mov
add
ljmp
sbb
call
mov
cmp
hlt
pop
and
fildll
sarl
or
inc
aam
das
pushf
aas
xor
not
pop
inc
jne
mov
fists
dec
dec
or
mov
clc
clc
sub
xlat
dec
repnz
mov
mov
adc
add
sub
subb
jns
ljmp
mov
pop
scas
pop
dec
jle
jno
ret
incl
movsb
mov
push
pop
push
pop
outsb
cmp
adc
addr16
shll
ret
dec
lret
jg
xchg
cmc
sbb
mov
cmp
pop
sub
imul
test
out
lcall
sbb
pop
inc
mov
sub
into
dec
mov
stos
mov
jge
xor
mov
mov
mov
xchg
cmp
push
lcall
enter
adc
ds
pop
into
dec
mov
int
sbb
in
rcrb
and
xchg
dec
in
or
lret
in
inc
sahf
or
push
or
xorl
test
loopne
lret
imull
xor
push
inc
imul
loopne
jmp
aaa
and
pushl
aaa
inc
dec
pushf
mov
and
outsb
or
mov
js
xor
jle
xchg
aaa
das
xor
adc
mov
int
or
mov
pop
pop
frstor
jmp
loope
clc
movsl
and
mov
std
jmp
mov
faddl
lea
repz
pop
add
rcrb
lret
push
fcoms
dec
or
xor
push
daa
aas
mov
pop
cli
cmp
push
and
and
je
dec
sahf
cmp
add
inc
add
sub
cmpsl
call
int
scas
cwtl
push
sub
mov
lret
cmp
sbb
push
insb
scas
fsubs
xchg
lret
mov
je
adc
rcl
sbb
out
leave
inc
loop
daa
icebp
inc
mov
rcrl
leave
pop
and
jmp
iret
lret
jb
xchg
fwait
test
adc
in
sbb
pop
mov
lods
xchg
pop
and
mov
push
notl
popf
insl
lea
mov
out
pop
insl
mov
cltd
mov
push
sub
add
ret
sarb
rcrb
notb
adc
mov
out
jle
jp
bsf
arpl
lcall
cs
mov
mov
inc
stos
mov
call
fldt
ret
adc
pop
mov
inc
adc
push
stc
mov
gs
pop
add
or
dec
pop
divl
mov
lods
adc
sub
mov
sbb
jmp
dec
leave
into
jecxz
dec
out
nop
dec
adc
jle
mov
stc
fisttpl
dec
jge
or
inc
xchg
test
fcmovu
jmp
mov
xor
dec
jmp
push
jo
mov
daa
subb
or
adc
xchg
gs
or
mov
jp
or
mov
push
xor
sbbl
pop
mov
xchg
add
mov
xor
jge
subb
dec
inc
ds
dec
fcmovnbe
repnz
data16
push
scas
inc
cmp
push
or
mov
repnz
lret
mov
adc
fimull
pop
or
push
sbb
jo
dec
sbb
sub
inc
sbb
mov
cmovo
loope
iret
dec
cld
ljmp
ljmp
mov
fs
dec
pop
pop
sub
jmp
mov
jo
and
test
addb
js
mov
mov
dec
out
outsl
nop
fnsave
lret
inc
fdivrl
lcall
dec
xor
mov
push
cmp
and
xlat
jl
movsb
ficoms
lret
xorb
pop
xor
and
fstpt
mov
sahf
ljmp
int3
gs
movsl
jnp
js
sub
xor
cwtl
test
loopne
shll
ret
ficoml
insb
incb
mov
dec
mov
insl
aam
lds
aam
loope
inc
pop
ret
push
xchg
adc
xchg
xlat
movsb
xlat
sbb
stc
std
js
arpl
xor
aas
movl
sub
dec
icebp
es
enter
or
imul
mov
scas
pushf
ljmp
cmp
rcll
nop
lcall
sub
dec
cmp
out
loope
mov
ret
add
gs
push
push
push
lcall
add
jge
lods
inc
hlt
push
sub
pop
addr16
icebp
xchg
mov
call
cmpsl
add
adc
ficoms
and
fstpt
adc
jmp
push
or
fisubrs
push
xor
jb
aad
fildl
cwtl
ss
or
mov
repnz
jns
aam
stos
test
insb
call
adc
xchg
stos
xorb
push
xchg
xchg
pop
popf
jno
jne
cli
xor
mov
push
loopne
or
aam
mov
out
je
fidivl
aad
add
push
lahf
add
and
jbe
lret
xchg
enter
fmul
mov
mov
cwtl
enter
sahf
push
dec
cltd
cld
jg
push
cmp
mov
fildl
add
xchg
pcmpgtb
push
jns
mov
sub
or
mov
lea
cmp
gs
cmp
xor
ja
lcall
add
jge
mov
inc
lret
xchg
sbb
adc
inc
lret
xchg
cmc
cmp
cmp
ret
add
in
sub
pop
movsl
retw
das
dec
pop
and
adc
test
sbb
movsb
imul
sub
dec
mov
int
mov
mov
outsb
push
into
je
in
jns
out
xchg
fidivl
ja
sub
ja
fs
lahf
mov
sbb
int3
xlat
mov
xchg
mov
mov
into
lds
dec
fnstcw
jne
repnz
stc
push
cltd
jno
mov
add
jp
add
or
fldl
mov
stos
dec
or
xchg
mov
test
mov
mov
fisubrs
clc
or
scas
loope
jns
imul
lods
xor
pop
xchg
xchg
mov
mov
cltd
int
jge
cmp
je
shl
mov
sbb
or
cmpsl
add
sub
lret
jp
jns
add
ljmp
jno
aad
xor
int
loopne
and
inc
jp
repz
jb
add
loop
xorb
push
pushf
mov
sahf
cmp
or
mov
iret
cmp
dec
fistl
dec
add
push
cld
xchg
cmpsl
xlat
adc
call
jno
jmp
xor
push
ljmp
sahf
lahf
inc
or
clc
mov
pop
gs
mov
add
pmuludq
mov
cmp
ss
stos
and
addb
int
enter
repnz
and
in
imull
icebp
fs
pushf
jp
stc
in
xchg
fiaddl
jmp
out
into
mov
lock
cmp
les
dec
mov
andl
data16
xor
cmpb
adc
push
mov
cld
fdivrl
test
pop
in
ljmp
push
add
and
fistpl
sub
sbb
dec
pop
cmp
ja
or
xlat
mov
sbb
hlt
cld
jnp
stos
mov
outsb
jo
jnp
adcb
movq
call
addb
sbb
inc
leave
idivb
push
ja
push
cmpl
inc
rorb
fdivr
popf
sub
dec
jbe
push
shr
adc
sub
mov
add
idivl
or
stc
jae
cmc
lret
inc
pop
loope
jns
dec
lods
das
xor
shll
add
adc
add
rcrb
addr16
push
jne
push
imul
pop
add
dec
out
mov
shll
mull
pop
cli
ja
imul
fdivrs
rcr
insl
insl
pop
sbb
pop
jge
xor
gs
mov
scas
lock
push
jb
and
mov
pop
mov
adc
or
iret
mov
sub
cwtl
jb
ljmp
mov
push
cli
and
popa
push
roll
xor
cmc
add
push
xchg
mov
add
adc
pop
lahf
js
push
aam
js
push
and
std
clc
lret
jge
lods
jg
fildl
mov
lcall
cmp
cli
or
movsb
in
push
out
sarl
iret
xor
js
push
sbb
and
fnstsw
cmpsl
shl
out
pop
adc
test
mov
test
nop
leave
scas
mov
mov
dec
xchg
push
scas
neg
and
test
pop
jo
sbbl
mov
test
dec
sahf
inc
mov
mov
fistpl
rolb
sub
mov
in
add
xor
fwait
xchg
mov
inc
cld
stos
aam
mov
push
das
loopne
stc
pop
insl
xchg
dec
mov
movsb
iret
shlb
fwait
cmc
mov
ret
je
movsb
mov
aas
sbbl
inc
arpl
cwtl
add
fidivs
inc
jmp
adc
pop
xchg
popl
fisubrl
addr16
mov
cmpsb
into
pop
pop
enter
adc
push
rcrl
dec
push
stc
sbb
push
pop
jecxz
out
mov
or
xchg
mov
mov
jb
sti
ljmp
xor
sahf
pusha
ss
notl
add
sbb
push
xchg
dec
xchg
lds
lcall
daa
add
xorl
or
aas
cmpsb
rolb
je
lret
push
inc
out
pop
push
inc
jge
dec
sub
icebp
fldenv
fldcw
dec
mov
js
dec
test
scas
enter
pop
js
and
bnd
int
push
repz
cli
cwtl
lcall
mov
imul
lods
mov
mov
mov
mov
lods
cmp
ljmp
add
idivb
pop
pop
stc
test
push
xor
rcrb
popa
movq
xchg
fiaddl
int3
insl
jns
jle
jns
sahf
cltd
xchg
pop
jno
adc
call
jne
rcrl
movsb
fidivrs
stos
sub
mov
or
sub
lods
test
xchg
or
adc
sbb
sbb
jl
cmp
mov
ljmp
adc
in
popf
sahf
xchg
sbb
cmp
cmc
insb
mov
push
shrb
movsl
jle
dec
mov
addl
and
push
add
in
xchg
and
loop
mov
mov
leave
or
cld
xor
loop
push
cmc
scas
das
cmp
cli
insl
loop
sub
adc
fwait
push
xchg
pop
clc
roll
xchg
mov
adcb
idivb
pop
pop
cmp
pop
stos
and
test
sub
int
add
fldpi
cltd
flds
push
test
lds
leave
movb
mov
jle
xchg
arpl
inc
out
mov
push
std
xchg
inc
lret
loope
push
lods
int3
dec
sbb
fsubr
cmp
mov
repz
jmp
das
cmpsl
call
pop
gs
cmp
pop
repz
xchg
sbb
ret
shrl
lea
ret
dec
push
mov
pop
pop
mov
sub
xchg
lcall
cli
insl
push
xchg
getsec
sahf
add
pushf
ds
int3
fcmovnu
shlb
sarb
ljmpw
cs
cmp
in
lret
xchg
nop
bound
xchg
push
ljmp
stos
cwtl
xor
pop
ret
add
push
push
js
imul
xlat
int3
mov
shufps
xchg
mov
inc
sbb
dec
das
adc
jp
imul
cmp
push
pop
test
mov
sahf
shl
jmp
jmp
xchg
dec
jg
jecxz
xor
push
lret
rcrb
cwtl
and
xor
movsb
jge
mov
xchg
mov
hlt
cmp
or
mov
xchg
push
pop
cmp
dec
test
jbe
cmp
lret
add
or
mov
xlat
daa
lods
mov
sbb
js
mov
inc
enter
cwtl
movsl
mov
mov
dec
push
das
int3
sbb
into
sub
fstsw
or
pop
or
sub
cwtl
mov
gs
xchg
xchg
in
mov
popf
fwait
stc
xlat
push
bound
mov
xchg
call
push
and
mov
push
sub
std
mov
cltd
adc
push
xchg
rcrb
or
lock
adc
fcomip
cmp
cltd
or
ret
xchg
out
test
cmp
sahf
xlat
movsb
sar
cs
and
fmuls
pusha
data16
in
out
pop
repz
rcrl
mov
repz
stos
sbb
rorl
cli
fs
fldenv
rorl
xchg
hlt
sbb
repz
cmpb
and
mov
pushl
jp
pop
pop
lcall
or
push
jl
out
jecxz
adc
push
and
cltd
aad
sbb
je
cld
jo
pop
dec
inc
imul
es
mov
popf
stos
lods
jo
int
mov
fsubp
mov
rclb
cmp
std
xorb
nop
enter
scas
je
sub
imul
inc
int
jo
push
cli
push
shlb
mov
sub
subl
and
fisubs
push
or
mov
mov
mov
ret
mov
call
cmpsl
stos
outsb
ret
sahf
dec
cltd
lods
pop
sarb
lods
pop
or
and
add
shl
mov
jmp
dec
es
test
mov
push
adc
adcl
adc
pop
fistl
mov
pop
xlat
mov
or
shrb
inc
pop
daa
sbb
les
push
sbb
out
loopne
or
shr
shll
out
mov
in
ds
sbb
mov
inc
jno
aam
pop
push
add
arpl
cmp
out
imul
iret
pop
sbb
adc
movsl
iret
shrl
testl
xchg
cmc
cmp
mov
jne
js
inc
xor
sub
clc
mov
mov
pop
push
faddl
pop
pop
out
sub
jo
pop
sub
jnp
dec
sub
xor
adc
or
sub
jg
dec
or
outsl
adc
inc
and
iret
fstpt
jno
jbe
imul
lea
das
out
testb
mov
lock
cmp
mov
adc
insb
jge
lods
dec
test
les
lret
sbb
xchg
pop
push
pushf
in
fnstsw
xchg
dec
mov
shlb
cwtl
cmc
pop
dec
and
xor
in
aas
or
cld
push
cmp
enter
or
clc
or
push
adc
rclb
scas
mov
and
sub
pusha
mov
imul
dec
inc
dec
inc
cld
sbb
out
mov
pop
mov
test
xchg
mov
std
popf
and
mov
xchg
push
out
push
mov
cli
scas
xchg
pop
cmp
test
popf
pushl
inc
cmc
mov
sub
ja
mov
in
leave
mov
cmp
repz
fldenv
dec
mov
adc
jne
cmp
lea
fisttpll
mov
xor
xlat
loope
lret
or
cwtl
xor
jp
jae
mov
fcomp
add
mov
xor
mov
jno
popa
push
mov
jno
cld
subb
dec
imul
shrb
mov
test
bound
sbb
aam
daa
push
push
inc
mov
pop
xor
out
adc
es
mov
or
fwait
popf
lret
jno
sub
jae
mov
mov
jns
mov
xchg
roll
jb
and
mov
adc
subb
adc
mov
jle
add
popa
inc
dec
sahf
scas
jns
lods
lods
movl
pop
mov
cs
dec
xchg
cmc
or
movsl
xchg
data16
xchg
fsubl
clc
cmpb
stos
icebp
mov
lds
dec
loopne
mov
stos
stos
mov
dec
std
dec
loopne
or
jne
push
popa
sahf
adc
dec
jo
lret
fsubrs
cmp
lods
mov
add
dec
cmp
xchg
jp
sbb
icebp
stc
adc
jo
sub
mov
rorl
out
mov
gs
inc
sub
mov
js
mov
imul
nop
cwtl
bound
jo
add
cmp
cmp
and
xor
popf
pop
sbbl
jns
cltd
push
mov
cld
lds
push
test
cmp
fsubl
dec
cmp
out
clc
ret
pusha
insl
jecxz
add
mov
inc
stos
and
push
loope
pushf
test
xchg
xchg
dec
roll
loope
sub
or
sbb
add
fisubl
shll
cmp
sbb
sub
inc
inc
add
push
dec
pop
jno
xchg
gs
sbb
push
jmp
rclb
dec
add
jns
sarb
pushf
test
in
jae
sub
insb
xor
movsb
iret
and
sbb
fisttpl
lods
test
cmp
loop
push
mov
xor
addr16
std
fwait
inc
divl
sub
jo
stc
mov
mov
lock
sub
std
fstpl
pop
push
jo
mov
bound
imul
add
jbe
mov
push
std
xchg
push
sub
popa
aad
les
imul
inc
xlat
mov
push
inc
dec
push
xchg
xor
in
jno
lret
sub
push
stos
dec
jg
inc
jae
jne
mov
xchg
hlt
mov
mov
pusha
inc
sahf
div
push
sbb
inc
inc
jl
mov
mov
xchg
push
int
dec
sub
mov
jmp
mov
test
out
stos
test
rdtsc
lods
ds
push
int
enter
xchg
sahf
je
sbb
jae
sar
int3
lea
out
push
dec
xor
out
or
jmp
xor
lds
and
cmp
divl
insb
outsb
fisubrs
pop
movsb
lret
jno
push
inc
hlt
cmp
inc
xchg
mov
mov
mov
cmp
sbb
or
xchg
adc
call
sti
adc
call
test
in
fneni(8087
mov
insl
cmpsb
jl
or
stos
mov
adc
mov
adc
out
cmpb
icebp
mov
les
jecxz
jne
cmp
sti
ljmp
dec
and
loope
and
movsb
pop
lahf
imul
and
sbb
sbb
les
dec
or
pop
fnsave
lds
imul
sbb
jno
icebp
lahf
xchg
sbb
fcmovb
mov
xor
sub
mov
ficompl
ss
jno
mov
or
push
fistpl
mov
popa
xchg
lea
xchg
adc
sub
mov
dec
pop
fwait
lret
mov
adc
inc
sbb
jne
xor
arpl
dec
mov
in
or
hlt
sti
mov
xor
and
pop
mull
ret
cmp
mov
push
aam
cs
pop
insb
jae
jl
cltd
xchg
in
hlt
xor
mov
ret
pop
scas
adc
shrb
cmp
xchg
pop
testl
jnp
pop
mov
je
adc
sarb
sahf
dec
mov
jns
sbb
adcb
gs
test
lea
fsts
push
shrl
lods
jge
mov
imul
ds
daa
or
int
or
xor
fsubrp
scas
push
mov
and
mov
pop
cmp
fdivl
rclb
es
adc
data16
movl
xchg
jnp
pop
inc
add
inc
hlt
xchg
sbb
clc
dec
pop
inc
jmp
pop
xchg
jb
mov
repz
and
cltd
lock
jp
xlat
push
jo
stos
fimull
lahf
shll
sbb
test
aas
pushf
push
or
xor
icebp
push
pop
repz
sarb
mov
out
aam
pop
xchg
and
sbb
inc
mov
test
cmp
js
and
repnz
js
clc
or
into
push
sbb
add
enter
outsl
cmc
pop
and
and
addl
add
jl
and
vmovhps
orl
es
lcall
dec
add
pop
pause
in
xor
add
push
sbb
fwait
test
xor
cmpsb
mov
pop
clts
mov
movsl
jbe
cmpsb
roll
mov
fdivrl
fwait
xchg
xlat
xor
mov
adc
stos
popf
andl
mov
repnz
pushf
int
mov
mov
xor
adc
jae
mov
pop
mov
lock
hlt
sub
cmp
mov
outsb
dec
das
mov
push
ja
std
inc
jnp
jns
pop
lock
rcr
dec
push
pop
add
add
les
pushf
add
stc
out
cmp
repnz
aam
fsubrs
mov
fstl
cli
cmc
sbb
in
inc
stos
in
test
sbb
pop
lcall
rclb
or
fwait
enter
test
mov
iret
leave
xchg
jno
loope
fnstenv
and
xchg
jg
inc
mov
xorl
ds
add
mov
gs
leave
or
or
aas
inc
ss
leave
roll
test
aaa
pop
daa
xchg
inc
mov
sarl
clc
sub
movsl
xor
jmp
call
push
loope
push
aas
jb
repz
fdivrs
inc
loope
sti
cmp
lcall
or
insb
mov
sahf
test
scas
jg
cmpsl
mov
mov
outsl
lods
dec
std
sub
outsb
fwait
cli
inc
mov
and
outsb
and
adc
stos
jbe
adc
aaa
and
jmp
xchg
jge
adc
adc
test
out
pop
or
cmovno
jg
or
imul
mov
in
pop
cmp
cmp
xchg
mov
cmpsl
lods
imul
stc
jnp
or
jb,pn
mov
int
ret
add
sbb
mov
mov
mov
aam
cmp
scas
push
jl
fmull
or
cmc
xor
daa
in
in
inc
insl
test
mov
mov
sbb
fndisi(8087
sbbl
adcb
mov
mov
adc
rcl
ja
jle
out
cmp
lret
or
dec
sbb
jmp
iret
adc
mov
xlat
jmp
push
sbb
scas
and
lcall
cwtl
cmp
cmc
fwait
ret
popf
push
iret
jb
jns
fstps
inc
cmp
mov
lret
xchg
cwtl
in
js
xor
pop
out
dec
sarb
mov
popf
dec
rcrb
aam
mov
jno
mov
roll
dec
scas
fchs
divb
lods
mov
pop
mov
or
shl
sahf
dec
dec
dec
xor
popf
test
mov
push
test
sub
pop
push
or
sub
xor
pop
cmpb
dec
pop
pop
les
add
sbb
outsb
sub
sbb
popaw
test
mov
inc
pop
outsl
push
mov
or
aam
aam
xlat
adc
push
cmpsl
sarb
sti
sbbl
mov
pop
mov
mov
cmp
les
pop
repnz
mov
rol
in
adc
loop
cmp
cmp
jg
cmp
or
xchg
repnz
pop
xor
mov
cmp
dec
push
imul
sub
xor
pop
or
mov
int3
adcb
out
jns
loop
mov
loope
xchg
cmpsb
jns
inc
push
fwait
lods
jbe
mov
inc
mov
cmc
jnp
dec
jmp
cmpb
fs
cmp
push
loope
or
adc
inc
inc
jg
inc
stc
inc
jno
out
mov
mov
mov
push
int3
lea
xchg
scas
lods
dec
or
popa
ljmp
test
stos
aad
movsl
insb
or
shl
pop
repz
cmpsl
mov
xor
jne
dec
adc
insl
into
lcall
pushf
push
fldenv
mov
cmp
mov
pop
inc
pushf
fildl
push
and
lret
adc
sbb
push
movl
push
pusha
dec
lods
js
gs
pop
and
mov
sub
xlat
frstor
cmp
sbb
ret
call
rcr
popf
and
mov
cmpsb
inc
ja
dec
clc
idivb
jns
scas
inc
sarb
in
fisttps
mov
mov
dec
xor
jno
loope
pop
sbb
cltd
enter
pop
and
orb
test
jmp
ret
dec
lea
cmp
jne
push
sarl
sub
pop
std
daa
push
push
pop
or
pushf
shl
or
adc
loop
lods
pushf
aas
out
jmp
cmp
push
mov
push
int3
adc
aas
and
push
out
mov
out
xchg
mov
popa
inc
int3
push
shll
inc
push
cmp
sbb
aad
unpckhps
push
in
call
inc
cs
mov
repz
xchg
xor
push
dec
or
push
xchg
mov
out
jae
add
insb
mov
pop
jmp
xchg
enter
fimuls
cmp
mov
dec
jnp
call
push
rorb
mov
pop
jg
loopne
aad
imul
les
xchg
pop
es
xor
push
std
stos
mov
adc
add
push
mov
shl
pusha
mov
or
mov
jns
je
addl
jp
lods
push
dec
imul
jns
sub
aaa
mov
icebp
test
sbb
into
xchg
pusha
jmp
enter
test
mov
xchg
push
clc
mov
dec
and
aad
or
sub
sbb
pop
sbb
popa
pop
xor
adc
xlat
iret
push
mov
and
adc
or
fists
imul
jnp
cmpl
xor
mov
push
mov
outsb
push
test
test
dec
repz
lea
jmp
mov
subb
mov
scas
sub
mov
adc
and
fadd
roll
out
ret
and
std
inc
shl
cs
cltd
hlt
outsl
inc
test
or
and
pushf
jmp
pop
mov
xor
jp
sub
aad
xor
pop
and
lret
mov
dec
adc
subl
sub
inc
or
jae
cmp
fucomi
enter
mov
sbb
stos
xor
pop
nop
push
icebp
and
addl
sbbl
cmpsb
inc
in
push
mov
insl
ja
fistpll
in
out
ja
push
sub
mov
in
leave
push
lds
sub
jg
fisttps
xchg
sbb
std
psubd
inc
nop
and
or
pop
ret
aad
xor
push
and
out
inc
loop
push
shlb
adc
jmp
push
pop
inc
shlb
out
ds
gs
mov
fsubp
xchg
cmpb
mov
push
dec
std
rcl
jmp
nop
dec
jns
daa
jnp
ja
push
mov
loopne
sub
and
addl
testl
push
lods
inc
andb
aas
aad
xchg
test
inc
repz
sub
mov
cmp
lahf
adc
inc
push
push
xchg
push
sbb
in
add
jecxz
or
jl
aam
mov
out
dec
xchg
xchg
cmp
call
es
pop
mov
test
adc
ss
ficompl
sahf
shr
xor
stos
out
ficoms
and
fs
push
ljmp
sub
xlat
cmp
inc
das
aam
fsubrl
and
arpl
es
shll
dec
lods
sbb
xchg
nop
sbb
loope
loope
pusha
test
sbb
das
adc
inc
mov
lock
in
das
add
jp
jp
lcall
cmp
mov
data16
inc
das
das
add
mov
repnz
jp
jle
jp
and
and
das
in
push
xchg
inc
dec
xlat
aas
lock
and
shll
movsb
lods
test
inc
dec
xor
bound
shrb
std
adc
pop
push
mov
sbb
movsb
push
mov
mov
lret
add
mov
pop
frndint
push
out
sbb
mov
fildll
ret
aad
enter
and
ret
cld
gs
xor
mov
pop
or
dec
dec
push
dec
mov
sub
gs
into
outsb
stos
pop
jl
mov
mov
push
or
add
cmp
nop
movsb
fs
mov
gs
mov
lahf
adc
fimull
mov
xchg
jmp
test
xchg
nop
loopne
mov
pop
sbb
jle
push
repnz
data16
jl
imul
and
es
and
sub
imul
data16
loopne
fisubs
test
int3
lods
xor
sahf
mov
nop
enter
imulb
push
js
clc
out
in
insb
sub
mov
mov
loope
mov
inc
or
xchg
mov
push
sub
sub
loop
pop
hlt
test
dec
or
cld
stos
mov
mov
sbbb
adc
rorl
jge
cmp
aam
push
or
in
sbb
addr16
cmp
jo
adc
xchg
lods
fidivl
sbb
ds
fdivrs
inc
jno
into
fdivl
imul
xchg
pop
ljmp
xchg
cmp
or
push
and
mov
shlb
fisubrs
cld
fmull
add
or
outsl
stos
dec
dec
or
stos
leave
cmpsl
fdivs
or
pop
lret
scas
cmp
sbb
in
rcrl
jns
and
inc
clc
sub
data16
or
mov
test
dec
cmpsl
push
xchg
mov
jecxz
pop
sub
xor
repnz
push
les
iret
sbb
fwait
xchg
les
lret
inc
add
push
dec
mov
int3
out
xlat
sbb
dec
rorl
sub
pop
push
leave
mov
outsl
mov
lret
mov
andb
outsl
in
dec
mov
imul
subl
dec
loope
dec
ret
pop
daa
loope
je
mov
pop
pop
jle
dec
in
popa
push
pushf
das
iret
lret
lret
clc
shrb
idiv
popa
lret
push
push
nop
iret
or
aaa
lock
loop
outsb
scas
and
push
scas
ret
lret
push
xchg
mov
adc
adc
sbb
popl
xchg
pop
inc
add
imul
xchg
fadd
push
and
lahf
dec
outsl
or
cmp
push
psubusw
xchg
or
push
pop
jae
and
pop
aad
sbb
mov
mov
jp
cmp
dec
mov
sub
cmp
jp
jmp
cmp
mov
xor
test
dec
ss
or
lret
adc
je
mov
fwait
inc
clc
fdivrl
add
sub
dec
dec
cld
dec
sub
xchg
push
sbb
dec
mov
fwait
enter
stos
call
shlb
pop
outsb
ljmp
test
iret
jle
mov
sbb
cmp
pop
ds
inc
add
push
ror
shrb
jp
nop
imulb
sub
and
repz
xchg
cld
jne
pushf
xlat
push
adc
mov
outsl
cmp
mov
sub
sub
add
aam
inc
push
call
cmp
xor
lds
push
and
jae
nop
sbb
pop
and
or
in
jno
cltd
syscall
cmp
ficoml
fucompp
es
movsb
sub
aas
pop
clc
rcrl
nop
sbb
fisttpll
jne
paddw
cwtl
out
or
mov
cmc
mov
mov
mov
xlat
imul
gs
push
sbb
pusha
ja
lret
xchg
xchg
mov
mov
fnstcw
rol
cwtl
dec
adc
jmp
push
rclb
push
mov
mov
dec
in
xorl
out
pop
in
adcl
cmp
mov
call
cld
adc
xchg
popf
in
popl
jl
xorl
lods
inc
out
je
inc
mov
lods
cmpsl
adc
mov
dec
lods
adc
popa
jne
jl
or
adc
pop
pop
lret
out
jbe
sahf
mov
mov
mov
cmp
ds
mov
mov
dec
xor
dec
cmp
sub
addr16
or
xchg
add
or
mov
stos
into
xlat
cs
mov
dec
push
jb
aaa
jne
lret
sub
rclb
xor
popa
mov
es
and
mov
fisubrl
jne
inc
pop
fstpl
loop
test
stos
pop
aaa
mov
fstps
lret
push
pop
out
pop
hlt
sbb
sub
jns
push
popf
dec
pushf
push
pop
jmp
sub
iret
fdivs
fisttpll
jl
sub
popf
and
xchg
pusha
adc
fcompl
fldenv
push
inc
in
xor
xor
and
popf
ss
clc
inc
push
sub
pop
mov
shll
mov
insb
hlt
fs
lret
pop
stos
or
cli
out
mov
icebp
in
aam
and
mov
inc
imul
fcomp
inc
xchg
push
outsl
cld
jg
mov
outsl
cltd
pop
xchg
add
xchg
incl
push
das
lret
je
decb
add
cmc
int
mov
jne
jns
enter
mov
inc
mov
jp
rolb
mov
mov
testl
mov
inc
in
lds
imul
movb
sub
icebp
mov
cmc
aam
int
enter
leave
jo
pop
in
jmp
mov
movsw
fistl
lahf
sbb
es
lret
jbe
mov
mov
arpl
cmp
sbb
andl
jg
pop
icebp
mov
xor
lahf
stos
jnp,pn
ss
cmp
mov
jle
movsl
jns
sbb
ret
dec
loope
pop
inc
pop
mov
rorl
loope
shll
out
sbb
dec
int3
xchg
hlt
loope
insb
outsl
dec
daa
data16
or
repnz
insl
imul
xor
jle
jp
ja
push
push
cmp
push
mov
pop
pxor
lea
push
inc
inc
testl
lea
inc
mov
push
sub
jbe
rorl
mov
bound
ret
fcomps
in
mov
xchg
mov
push
es
mov
out
lret
stos
push
shll
les
adc
dec
stos
fs
xorb
in
xchg
xchg
sub
sbb
jmp
add
cld
jbe,pn
mov
cmpsl
lea
sbb
popa
adc
rcrb
loop
pop
jne
fs
jle
iret
call
lret
out
adc
out
xor
adc
loopne
les
ds
inc
out
adc
inc
add
push
adc
fisubrs
dec
fidivs
adcb
xor
lds
fcmovnb
push
in
mov
sub
mov
cs
mov
sahf
push
js
fwait
outsb
int3
lods
xor
cmp
lods
stos
sbb
xchg
or
cmpl
addb
mov
mov
loop
inc
icebp
push
ds
or
adc
ret
jns
and
outsl
sbb
jb
popa
push
mov
or
inc
mov
jl
or
inc
sub
sbb
leave
and
out
adc
cmp
mov
das
pop
cmp
loopne
loop
jns
jnp
nop
mov
rolb
into
and
inc
aas
mov
imul
jb
scas
aam
pushf
sbb
aas
fisubl
int
add
repnz
and
jmp
aam
outsl
xor
fisttps
daa
xchg
mov
mov
dec
jns
stos
lret
roll
add
jmp
repz
repnz
into
sub
mov
or
jge
lods
fwait
shll
add
jg
sub
cmp
sti
inc
xchg
inc
test
jecxz
sub
rcl
ja
movsl
mov
pop
pop
fst
test
pop
jno
mov
push
push
test
insb
mov
gs
stc
sub
and
push
xor
test
in
imul
aas
adc
ja
int3
mov
mov
popa
lea
into
movsl
inc
in
xor
pop
dec
aas
and
addr16
out
and
pusha
rolb
std
xchg
sbb
and
sub
lret
cli
xchg
test
sarb
das
packsswb
ret
or
cltd
fwait
pop
push
je
push
out
jns
inc
dec
and
insb
leave
pop
dec
pushf
shl
fldl
sbb
or
mov
mov
sbb
pop
push
sub
das
loope
ljmp
xor
adc
fsubr
loopne
dec
mov
scas
push
fs
push
xchg
jae
mov
jo
fwait
je
sbb
or
adc
adc
or
sbb
cmp
pop
mov
jnp
inc
or
repnz
push
rorb
cmp
or
loop
dec
inc
mov
dec
lods
test
cmp
cmp
xor
aam
and
mov
adc
cmovb
push
stos
cmpl
loop
add
add
mov
stc
mov
int3
inc
in
stos
decl
int
jecxz
mov
notb
pop
or
int3
lock
jmp
ret
xchg
iret
xorl
pusha
icebp
je
cmp
xor
bound
cmpsl
int3
mov
jg
in
pop
xor
fwait
adc
test
repnz
fidivs
dec
adc
add
in
stos
jbe
loopne
cs
mov
sar
pusha
or
loopne
inc
pop
xor
or
filds
push
xchg
popf
lret
xchg
ret
xor
in
and
lahf
xor
jne
sti
ss
lds
mov
frstor
aam
aas
sbb
mov
loope
cmc
dec
insb
bound
lahf
add
jecxz
adc
push
jp
cmp
notl
pop
fiadds
or
inc
pop
xor
mov
jp
dec
lock
pop
scas
call
lds
xchg
inc
sbb
mov
loop
push
jb
jne
int
jl
imul
push
outsl
pop
cs
mov
dec
adc
xor
loope
in
ja
jae
arpl
rclb
negb
jns
hlt
sub
adc
cwtl
test
dec
jo
add
in
pop
cwtl
push
pop
popa
jo
cmp
add
cmp
xor
out
mov
leave
or
pop
je
and
bound
fwait
cltd
data16
hlt
mov
push
xchg
loopne
loopne
scas
push
aad
jecxz
iret
xlat
lahf
xchg
adc
lods
cwtl
pop
mov
outsb
push
movsb
sbb
dec
inc
push
cmp
xchg
pop
jno
addr16
push
aam
icebp
adc
jg
xor
and
jg
cmp
sti
xor
pop
cmpsb
jecxz
inc
js
cmp
push
xchg
jo
imul
in
xor
mov
jecxz
jle
sar
inc
inc
sbb
aam
nop
push
mov
test
push
loop
xchg
mov
je
add
dec
inc
xchg
cld
jmp
arpl
clc
cli
cmp
inc
push
mov
jmp
idivl
cmp
std
mov
xchg
ret
cmpl
jmp
insl
popf
lret
xchg
into
into
push
adc
and
xchg
sbb
dec
cwtl
js
jb
inc
sbb
adc
cmp
dec
aas
lret
push
lret
adc
test
adc
scas
add
out
push
mov
or
mov
xchg
in
adc
xor
and
rcrl
outsl
loope
mov
and
int
cwtl
xor
sbb
push
fmul
dec
mov
popf
inc
or
pop
cmp
psraw
and
shll
adc
xor
adc
insb
dec
incl
lcall
cwtl
jmp
in
jnp
jo
in
sbb
fsubs
imul
pop
ret
xor
mov
sbb
fxtract
in
mov
scas
cmp
xlat
push
dec
sarb
jecxz
dec
sbb
aaa
dec
add
mov
inc
andl
dec
enter
cld
bound
sbb
jae
aaa
ja
sar
arpl
or
lock
pop
push
ss
xchg
or
outsl
les
mov
insl
arpl
and
adc
add
in
mov
add
sub
clc
out
cmp
push
mov
mov
sahf
xor
xor
add
cmpsb
lods
mov
mov
inc
mov
lds
push
hlt
je
cmp
popa
adc
cmpsl
push
inc
adc
push
mov
outsl
cmp
cmp
mov
mov
sub
xchg
push
sub
or
jmp
int
pop
shrb
repz
pop
mov
mov
xor
loopne
pop
aas
mov
mov
test
mov
shrl
jbe
es
lods
inc
arpl
scas
mov
aaa
shll
mov
incl
and
sti
leave
cmp
pusha
int3
mov
cmp
add
stos
in
fildl
and
xchg
fs
outsb
xchg
push
inc
aaa
or
cwtl
popl
jg
push
imul
hlt
mov
inc
ljmp
dec
or
fldcw
int3
push
mov
lock
mov
addr16
jl
icebp
stos
out
clc
and
int3
loope
cmp
stc
sub
push
or
and
dec
cmp
out
adc
cmpsl
push
pop
dec
push
cmp
xchg
xorl
xor
inc
push
fadd
jmp
sub
daa
push
stc
pop
xchg
test
adc
test
sti
dec
and
and
push
arpl
xchg
dec
sbb
inc
cmp
xor
les
ja
ds
xchg
mov
rcr
insl
and
or
roll
cltd
out
fs
cmp
adc
mov
loop
in
jno
mov
xor
sub
mov
mov
dec
aas
xchg
sub
in
add
xchg
lret
in
mov
nop
repnz
cmpb
sbb
sbb
outsl
lcall
lock
push
and
hlt
flds
shll
lds
sbb
pop
rcrl
je
mov
jl
out
inc
push
je
hlt
call
mov
xorb
sub
sahf
ss
add
bsf
das
movsl
in
aad
mov
push
test
xor
out
mov
mov
adc
cmp
add
and
push
fmull
rcrb
scas
dec
popa
mov
and
int
push
test
cmp
mov
jecxz
sub
mov
jle
dec
in
mov
movsl
stos
adc
push
les
mov
addr16
flds
xchg
or
mov
and
mov
iret
xor
mov
pushf
push
dec
sbb
push
cmc
cwtl
ss
hlt
dec
mov
loope
rclb
ja
jp
scas
ffreep
or
cmpsl
cmpsl
sbb
pop
shll
stos
test
cmp
mov
mov
inc
data16
mov
jg
push
mov
jns
xor
xor
mov
sub
dec
lods
js
lret
sub
loopne
xchg
dec
inc
sbb
sbb
stos
rcrl
dec
popf
dec
sub
xor
mov
andl
fadd
jmp
or
jmp
icebp
xabort
les
ds
out
movsl
sarb
mov
dec
jmp
pop
cmp
lcall
cs
sub
xor
dec
fwait
xchg
test
dec
or
inc
xor
loopne
push
inc
sub
or
repz
test
scas
icebp
lahf
fildll
cld
insb
and
or
jecxz
add
xchg
ret
enter
call
data16
push
mov
decb
mov
push
mov
ja
mov
sub
mov
xlat
or
cmp
sub
push
fistpll
loopne
icebp
or
aad
and
lret
pop
jns
xor
mov
mov
test
lock
stc
outsb
in
add
cmpsb
inc
push
dec
cmp
jbe
ljmp
cmp
dec
lret
sbb
imul
je
rorl
sbb
sub
fbstp
out
scas
in
lods
imull
mov
mov
stos
jno
sub
sbb
gs
cmc
out
push
fimull
mull
mov
or
push
adc
in
adc
in
jecxz
fucompp
popf
add
in
sub
fwait
scas
gs
fcoms
pop
adc
adc
xor
jp
in
jo
cmp
js
test
cwtl
and
mov
arpl
dec
mov
and
pusha
stos
aaa
or
xchg
xor
cld
loop
mov
pop
mov
sbb
xchg
in
jae
int3
jo
mov
test
in
loop
xor
push
clc
or
inc
nop
daa
jge
xchg
mov
out
cwtl
pop
pushf
jecxz
or
aad
mov
xor
into
push
hlt
xchg
fstl
clc
xlat
lea
mov
hlt
lock
xor
out
pop
and
mov
or
negl
lods
pushf
adc
inc
mov
xlat
addb
inc
das
sbb
add
add
lods
fstpl
loop
stc
sbb
outsb
insb
addr16
mov
mov
ficomps
xchg
or
pop
mov
push
inc
push
jg
lea
cmp
mov
cmp
jae
mov
inc
mov
test
sub
dec
push
pop
imul
lea
mov
sbb
in
pop
fwait
notb
movsl
imul
pop
cltd
jp
push
xchg
and
cwtl
xor
or
pop
jmp
adc
lahf
add
dec
sbb
out
mov
cmpsb
xchg
cli
or
fisttps
jp
daa
push
int3
mov
inc
pandn
pop
aas
movb
sbb
jmp
jmp
aam
ljmp
and
mov
add
jge
xchg
and
push
leave
in
out
adc
adc
mov
insb
mov
out
mov
in
scas
sub
scas
ljmp
lock
inc
mov
mov
sbb
movl
push
pusha
sbb
lods
lret
dec
cmp
push
pushf
lret
lret
arpl
sahf
inc
outsb
ss
mov
gs
hlt
sarl
aam
push
xor
pop
cmpsl
mov
push
pop
xlat
xchg
sbb
pop
xchg
repnz
dec
popf
insl
push
xchg
data16
add
cmp
mov
mov
sub
shlb
subl
adc
in
dec
push
jnp
js
inc
inc
aas
mov
pop
pop
mov
repz
inc
cmp
inc
test
ljmp
gs
pop
mov
std
sbbl
lods
les
or
jecxz
mov
sahf
ss
lcall
rcrb
sti
and
lahf
aas
jnp
shl
mov
push
test
jo
rolb
cli
out
push
dec
or
push
int3
xor
push
xor
xchg
bound
test
push
jecxz
movsl
sbb
insb
sub
xor
xlat
jl
lods
jns
cmp
scas
xchg
and
push
fnstenv
adcl
andb
cli
aaa
in
jg
data16
dec
fwait
cmp
andb
xlat
adc
out
adc
or
ret
push
push
mov
loopne
setg
xchg
mov
jl
adc
jge
inc
cmpsl
pop
mov
cmp
xlat
imul
mov
test
shll
fcoms
jne
scas
cmpsl
popa
repz
mov
xor
test
test
xlat
aas
sub
js
fsubrl
and
roll
adc
pop
out
into
loopne
cld
mov
adc
jbe
inc
rol
jp
inc
stc
popa
pop
xor
inc
shrl
push
das
push
ljmp
hlt
mov
dec
pop
loop
bound
mov
dec
mov
dec
push
mov
fildl
mov
fs
lcall
fwait
movsb
cmp
fists
lock
jns
xor
fimull
pop
dec
imul
fdivs
mov
test
mov
iret
xchg
and
dec
pop
jmp
jb
or
dec
xchg
add
push
xor
in
lods
sub
sub
das
sbb
inc
xor
cltd
jecxz
es
xlat
add
pop
fcoms
pop
and
or
adc
inc
xor
js
pop
into
loop
ret
pop
loop
ret
dec
jne
push
sbb
fwait
inc
dec
aad
movups
cmp
push
insl
aaa
shlb
bound
or
lahf
mov
push
mov
sti
gs
mov
or
adc
pop
sub
jp
ja
aad
dec
stos
or
inc
jae
rolb
rcll
pop
test
aam
jne
hlt
das
ljmp
and
cmpsb
add
out
jg
adc
xchg
rorb
and
repnz
arpl
mov
out
or
xor
sbb
mov
pop
xor
call
cld
dec
repnz
sbb
popf
mov
pop
jb
mov
pop
nop
and
int
mov
mov
popf
shl
int
push
sbbl
into
jnp
outsb
mov
subb
adc
sbbl
mov
and
dec
mov
mov
bound
pop
mov
test
xchg
sbb
sub
and
icebp
mov
jmp
lea
lcall
and
lcall
inc
test
sti
cmp
mov
insb
sub
pop
inc
cmp
out
push
add
mov
mov
insl
mov
scas
in
or
sbb
jae
xor
dec
shll
addr16
pop
xlat
repnz
cmp
sbb
pop
bound
dec
sub
inc
mov
sahf
sbb
jne
mov
xorb
lcall
and
fsubl
scas
pop
inc
xor
lret
clc
mov
mov
mov
pop
lea
loop
aam
arpl
leave
imul
dec
push
add
popf
adc
enter
lock
inc
jo
and
inc
fs
mov
mov
lret
jmp
jmp
mov
dec
pop
fnstenv
push
cltd
jmp
dec
int3
sbbl
cltd
or
cmc
dec
sbb
aas
lds
ss
mov
shr
push
push
sahf
subb
mov
pop
int3
mov
push
cwtl
adc
jecxz
jg
sub
push
jp
dec
enter
sar
mov
mov
es
vmwrite
mov
cmp
call
xor
adc
rcrl
in
adc
enter
test
shr
lods
in
pop
sbb
sbb
mov
and
loopne
inc
in
ret
jmp
mul
sbb
js
clc
mov
cmp
cmp
push
pop
mov
fstl
xchg
in
ljmp
cmpl
lods
or
mov
fnsave
and
shlb
and
sahf
sahf
fwait
pushf
lock
or
movsb
jmp
cmp
rcrl
xor
cmp
aas
push
jb
push
sti
sbb
mov
ds
push
movsl
mov
cmp
inc
inc
pop
push
and
mull
adc
hlt
loopne
inc
push
pusha
push
mov
pusha
xchg
daa
xor
sub
mov
gs
xchg
mov
mov
syscall
js
cmp
dec
ds
adc
jbe
movsb
cmc
mov
outsl
mov
push
cltd
pop
jne
xchg
xchg
sub
imul
clc
out
xor
sub
or
cmp
or
mov
fbld
mov
xchg
mov
xchg
repz
inc
xor
dec
daa
les
decb
jnp
fs
or
ds
inc
in
mov
mov
cmp
cmp
aaa
fdiv
daa
jg,pt
add
out
in
and
mov
inc
jge
stc
pushf
ret
push
dec
mov
mov
sbb
pop
dec
gs
xchg
fisubl
add
test
cmp
inc
scas
test
popa
fistl
loop
jecxz
shll
in
cmpsb
add
adc
cltd
jl
and
jle
rcrb
dec
dec
movsl
mov
cmc
xchg
dec
sub
out
in
outsl
jle
mov
mov
lods
add
lcall
test
or
xchg
cmc
push
dec
ret
xchg
hlt
movsl
jns
jmp
addl
xchg
mov
fsubr
xchg
movl
setg
sbb
push
hlt
fstpl
adc
or
sub
sub
jno
inc
mov
xor
cli
lock
out
adc
aad
bnd
dec
orb
pusha
movsb
dec
jg
push
add
clc
out
cmpb
loopw
fidivrl
outsl
lahf
add
pop
fsubrs
enter
sub
into
xchg
mov
ljmp
sbb
jbe
xor
sub
xchg
add
stos
add
sbb
mov
adc
or
push
mov
and
push
cmp
outsb
nop
mov
loop
lods
divl
push
xor
movsl
push
sbb
mov
ss
enter
cmp
push
sti
popf
sub
nop
jp
xchg
aaa
pop
iret
roll
push
xor
mov
cs
add
cmp
mov
notb
ss
inc
mov
js
xchg
cmp
sub
cmp
push
jae
mov
pop
cmpsl
fwait
lret
in
dec
dec
clc
cmp
js
fsubs
rcll
jno
xor
rclb
adc
test
outsl
sbb
idivl
cmp
push
popa
out
mov
in
sub
outsb
push
fstl
clc
rcr
sbb
mov
add
inc
lds
aam
fisttpll
inc
cmp
jmp
jns
dec
sahf
addb
cmp
sti
int
sbb
push
adc
cmp
cmp
getsec
jbe
scas
cmp
ficomps
dec
iret
adc
cld
add
cld
and
mov
movsl
inc
daa
dec
ret
subb
inc
lahf
fsubs
sti
fstps
dec
inc
dec
mov
outsl
cli
add
cmp
movsb
jno
and
daa
jne
in
push
loope
xchg
cmpsb
cmp
cs
arpl
cltd
cmc
popa
sbb
lds
sbb
inc
imul
fnstcw
mov
adc
sbb
inc
mov
jl
inc
movsb
call
mov
jb
mov
xor
cmp
icebp
mov
iret
dec
cmc
lock
push
add
dec
popa
cmpsl
jge
icebp
xor
jecxz
mov
cwtl
leave
imul
mov
fwait
xchg
mov
cmp
mov
dec
cmp
lret
lods
fisttpll
sbb
cmp
push
cli
loopne
add
iret
cmp
sub
sub
cmpsb
test
arpl
arpl
not
std
fldt
fstl
push
dec
scas
out
hlt
cmp
jl
cmc
ret
jg
xchg
cltd
loopne
int
cwtl
test
subb
jmp
dec
cmp
or
nop
pop
jmp
jns,pn
iret
pop
loopne
mov
test
xor
hlt
sbb
inc
lock
js
lock
lahf
arpl
push
cwtl
and
stos
xchg
mov
lds
xor
fstpt
push
inc
xchg
iret
cmp
in
mov
jb
divl
sub
loope
push
insb
scas
mov
stos
add
or
mov
cmp
pop
sub
xor
stos
es
cmp
pop
and
sbb
leave
inc
cmc
xchg
dec
add
lock
mov
fbld
add
jl
divl
outsb
gs
and
jl
adc
cmpsb
add
push
mov
pop
aad
xchg
loope
inc
cmpsb
jae
out
inc
cmpl
mov
es
int
out
mov
rorb
iret
dec
outsb
mov
xchg
xor
cli
nop
push
fucomip
in
sbb
sub
fucom
dec
fsubrl
push
mov
imul
fidivl
cmp
mov
test
in
add
mov
lds
imul
test
or
mov
adc
addr16
xchg
mov
mov
subl
push
mov
add
adc
adc
sbb
or
stc
dec
inc
push
cmp
movsb
and
rcr
sub
pop
ficomps
xor
dec
inc
inc
and
scas
xchg
popf
xlat
mov
cmp
mov
test
lods
mov
sahf
mov
cmp
adc
imul
adc
jmp
jecxz
cltd
lea
jp
in
pop
in
lods
mov
or
xchg
add
or
popa
cmc
inc
outsl
inc
ds
jo
mov
call
mov
mov
out
mov
dec
test
loop
cmp
adc
insl
mov
out
xor
cmp
push
xchg
mov
dec
sarl
fsubrs
aam
push
lock
xchg
add
adc
imul
dec
fists
mov
les
pop
or
xor
jbe
push
inc
lret
lret
js
ds
or
std
nop
movsl
jg
pop
fcmove
push
in
cmpl
sub
add
stos
clc
sbb
mov
push
mov
cwtl
movsb
mov
inc
lods
and
mov
inc
xchg
push
enter
lcall
lcall
sbb
fcmovb
sbb
rcrb
jb
cmc
in
fwait
cmpl
and
pop
or
fmuls
idivb
repnz
in
mov
repz
sbbb
aas
in
xchg
aam
dec
stc
loopne
test
pop
push
inc
jbe
sbb
sub
fsubrl
mov
aas
les
stos
leave
mov
adc
jo
sbb
icebp
jecxz
sub
push
mov
sub
pop
fidivs
faddl
pop
or
xor
or
push
sbb
or
xchg
fprem1
sub
xchg
dec
mov
mov
xchg
cs
xlat
or
push
or
call
xchg
mov
dec
out
jns
dec
mov
and
jmp
or
add
outsb
inc
mov
leave
add
dec
loop
cld
mov
jne
imul
int
cmp
sub
hlt
xor
gs
adc
test
mov
push
adc
or
das
cmove
or
and
mov
push
outsl
and
add
jg
jg
gs
in
sbb
cmp
xchg
adc
xchg
push
push
movsl
jmp
ja
lds
notb
stos
mov
and
lahf
pop
fldcw
inc
lret
ljmp
jmp
add
xchg
scas
popa
push
cmp
es
xchg
push
jne
arpl
xor
test
push
xchg
xlat
mov
adc
inc
faddl
sbb
sarb
mov
addb
es
mov
cwtl
adc
cmp
xchg
add
shll
sahf
std
xchg
maxps
es
popf
into
and
mov
cltd
imul
call
mov
push
sbb
mov
add
dec
push
jg
inc
int3
and
sbbb
mov
bound
mov
cmp
les
scas
adc
lea
and
xor
and
fists
cmc
mov
cmp
sahf
pop
xchg
cli
out
pop
loopne
lcall
xor
inc
fisubrs
cmp
loopne
mov
outsl
jno
inc
cwtl
fcmovb
inc
fimull
mov
aam
cs
mov
shll
inc
mov
sbb
cmp
dec
lods
inc
sbb
stos
jl
mov
pop
ljmp
clc
movsl
mov
test
pushl
or
pop
cmpsl
pusha
mov
les
sbb
ljmp
cmp
nop
adc
test
sbb
repz
adc
mov
outsb
adc
je
inc
inc
subb
repnz
das
rcr
cs
cltd
ror
and
sbb
stos
jno
cmp
mov
and
subb
push
clc
sub
push
mov
sbb
data16
inc
nop
icebp
and
cmp
repz
push
les
aam
mov
outsb
adc
dec
or
mov
rorb
sbb
fldcw
push
repz
xor
inc
call
jne
mov
and
pop
mov
pop
pop
add
lahf
adc
sbb
call
xor
and
jmp
sti
pop
ljmp
inc
pop
mov
xorl
jmp
pop
or
out
in
cmp
jns
outsb
adc
mov
adc
push
int3
inc
inc
loopne
sbb
and
inc
inc
sbb
xor
ja
cmpsl
cltd
adc
add
jp
mov
add
mov
test
cmp
js
jns
stos
sbb
cs
and
cld
inc
jl
gs
hlt
push
pop
stc
push
mov
mulb
cwtl
mov
sbb
out
pop
cmp
xchg
fwait
call
mov
pusha
pop
xlat
push
jne
nop
push
sub
pushf
push
mov
xchg
push
insl
ss
into
cmp
int3
jno
pop
ljmp
push
or
movsl
stc
cmp
cmp
into
pusha
pop
fcomps
add
and
rcrb
imul
pop
dec
dec
fsts
imull
andl
imul
insb
mov
sub
test
mov
imul
stos
sahf
dec
add
push
test
dec
mov
mov
insb
cmp
jl
hlt
jbe
sbb
loop
int3
pop
mov
ljmp
in
sbb
out
inc
imul
ds
xchg
pop
fcomp
sbb
fstpl
addl
inc
dec
mov
dec
fmull
roll
in
xor
in
out
stc
cmp
mov
inc
adc
orl
or
mov
in
jbe
push
adc
xchg
gs
xchg
or
leave
icebp
inc
mov
cmp
out
dec
test
mov
and
mov
or
pop
insl
js
stos
xchg
es
add
imul
push
push
scas
sub
in
push
jne
fadds
rorb
sbbb
ds
cmp
dec
scas
mov
imul
jne
push
cmp
aad
ljmp
and
mov
add
push
pop
iret
scas
call
mov
loope
mov
ljmp
lret
push
adc
adc
xor
in
fiaddl
dec
scas
sti
out
sub
out
sub
in
adc
fists
add
cltd
lcall
outsb
inc
fimuls
sub
dec
lahf
les
sbb
mov
stc
dec
js
fs
ja
das
movsl
and
push
cld
mov
outsb
daa
xchg
pop
mov
cmp
sbb
adc
cld
ret
inc
xchg
mov
adc
mov
jl
aam
fs
xchg
push
jmp
decl
xor
lcall
adc
or
and
cld
push
sub
cmc
cs
dec
add
rolb
inc
xchg
jo
stos
add
loop
or
aaa
jae
jp
scas
sti
dec
stos
in
and
mov
rorb
cmp
test
add
xor
imul
bound
icebp
xchg
mov
adc
jmp
jecxz
push
int
sbb
cli
out
mov
iret
loop
or
add
cwtl
in
mov
push
addr16
or
jnp
add
cmc
push
imul
jb
adc
out
push
in
aaa
mov
loopne
sub
mov
je
dec
xchg
gs
shll
ds
bound
movsl
stos
sahf
xor
mov
push
cli
mov
std
push
xchg
pop
push
loopne
mov
sub
pop
cmpsl
int
and
jge
mov
mov
andnps
dec
pop
mov
scas
lock
jp
adc
mov
pop
pop
jge
add
lods
arpl
loopne
xchg
jns
and
and
xchg
mov
xor
test
call
fiadds
mov
movsb
pop
movsl
insl
mov
shr
out
pop
jle
in
pop
jmp
mov
jecxz
mov
sub
and
imul
orl
repz
leave
xor
pop
pusha
es
addr16
xchg
and
or
in
test
and
add
mov
sub
idivl
jmp
ret
mov
imul
imul
ret
dec
jp
das
neg
fneni(8087
clc
nop
dec
pop
movsl
ja
xchg
add
test
sbb
cmp
and
push
rorb
lods
mov
jp
pop
mov
ret
dec
and
negl
or
dec
cltd
xor
mov
loop
or
fildl
jle
clc
mov
dec
fs
sbb
int3
inc
pop
lds
or
pop
push
lahf
in
aas
fsubrp
bound
sbb
aam
rorb
das
arpl
rcl
xchg
call
and
data16
add
fdivl
out
cmp
jae
or
aam
xor
es
push
add
mov
pusha
lahf
and
sti
xor
je
cmpsb
xchg
gs
ljmp
movsl
push
shll
cmp
cmp
mov
dec
repz
jl
mov
cmp
jecxz
testl
aad
pop
in
mov
adc
mov
xchg
call
inc
and
out
push
push
out
pop
ret
xor
sbb
push
or
jo
dec
mov
stc
xchg
cmpl
test
outsb
aaa
mov
or
push
idiv
adc
push
mov
pushf
adc
jnp
in
jae
stc
inc
aas
hlt
or
pop
sub
push
dec
outsl
dec
push
sbb
xchg
push
ret
repz
jns
push
mov
cmp
xchg
imul
mov
xor
enter
pop
mov
loopne
shlb
ss
lods
mov
mov
mov
lcall
sub
mov
xchg
sbb
mov
lahf
dec
popa
pop
out
and
cli
or
cwtl
lahf
jbe
mov
cmpsb
fdivl
pusha
cmpsb
or
jbe
jge
into
outsl
ret
ret
repnz
scas
mov
lret
push
into
fdivs
pop
and
ret
push
test
bound
ret
cmp
ret
adc
mov
xor
jo
ss
sub
jno
mov
movb
pop
leave
loope
sbb
push
out
frstor
mov
std
xchg
insb
je
mov
in
hlt
orb
jo
rcrb
imul
insb
sbb
push
sbb
daa
cld
arpl
sub
in
jbe
sti
insl
das
mov
inc
xlat
jl
jl
add
ss
pushf
vmovddup
out
mov
inc
std
pop
insl
and
dec
fbstp
inc
mov
sbb
xor
std
mov
mov
push
xor
divl
push
and
in
sub
das
xchg
int
xchg
loop
stc
xchg
js
sub
movsl
int3
add
pop
sbb
je
outsl
push
scas
or
rcl
jp
gs
inc
push
xor
pop
mov
dec
or
add
jl
fwait
sti
call
lcall
mov
lods
cmp
cli
subl
push
or
ret
out
dec
mov
scas
xor
aaa
jge
cli
mov
dec
sub
xor
ljmp
pop
and
pushf
shrl
aad
mov
dec
in
pop
mov
cli
adc
push
jp
push
adc
enter
or
push
add
clc
shrb
js
mov
mov
push
sub
pop
jo
mov
int3
add
push
shlw
jge
dec
push
xor
adc
lret
gs
cmp
adc
js
cwtl
out
mov
jbe
daa
ret
jg
xor
mov
repz
les
dec
mov
add
jp
pushf
fndisi(8087
shrb
jbe
mov
lock
es
dec
es
add
js
xor
movsl
jmp
cmp
pushf
and
or
adc
ljmp
in
in
sub
test
pusha
adc
xchg
cs
test
inc
dec
test
rorb
xor
imul
imul
cmpsb
cmp
js
fidivs
lret
fsincos
loopne
pop
cwtl
std
jecxz
ljmp
xor
pop
inc
test
sub
add
fidivl
pop
xlat
outsl
cmpsb
jp
or
mov
stos
idiv
cmpsb
jns
ds
pop
push
or
xchg
test
test
mov
je
mov
aas
test
or
out
lods
ljmp
ds
lock
and
fimull
cmp
les
ret
jnp
ret
xor
es
es
jp
inc
sbb
lods
or
int
cmc
sub
jp
sub
mov
outsl
sub
leave
jbe
dec
call
rorl
std
into
lret
xlat
push
aaa
loope
out
in
inc
jns
mov
cwtl
test
es
jnp
outsb
ss
sarl
test
sub
adc
mov
jp
or
mov
dec
pop
inc
aad
or
out
iret
or
outsb
push
out
data16
outsb
fs
push
ss
sub
shlb
orb
adc
pushf
out
lret
xchg
dec
cmp
dec
movsb
xorb
or
dec
lock
ss
mov
mov
int
movsb
jne
nop
clc
repnz
clc
xchg
mov
mov
add
jnp
pop
adc
fmull
sbb
mov
ss
fsincos
aam
add
mov
dec
popf
mov
sbb
in
push
aaa
pop
dec
mov
in
dec
out
das
or
and
or
jns
jns
xor
xchg
cmp
jecxz
cmp
xchg
push
xchg
test
sub
pop
cmp
dec
adcl
outsl
js
jecxz
adc
xchg
cmp
ljmp
mov
cmp
into
mov
pop
dec
fstps
in
cmp
ds
sbb
xchg
and
push
jnp
and
jmp
adc
sub
shll
mov
insl
sub
dec
cmc
push
xchg
sub
and
adc
push
dec
test
pusha
cmpsb
mov
pop
add
sbb
shll
and
out
imul
insl
push
rorb
out
adc
xchg
js
add
fisubrs
cwtl
rcll
outsl
dec
lock
shll
hlt
cmpsb
fnstcw
cmc
cmpsb
jno
mov
rcrb
in
dec
mov
incb
mov
out
xlat
and
lcall
and
mov
pop
mov
sbb
dec
out
inc
lret
lds
xchg
cmpsb
xchg
aam
pop
jb
dec
outsb
xchg
push
dec
mov
or
into
std
mov
inc
push
cmp
cmpl
shll
dec
les
sub
repnz
xchg
scas
jo
sub
fiadds
jg
or
into
mov
jg
or
and
dec
sbbl
push
enter
fiadds
mov
jmp
and
imul
xchg
adc
push
call
loopne
jg
mov
mov
adc
mov
lods
ja
mov
pop
mov
inc
je
std
mov
nop
stc
ret
test
popa
jb
inc
sub
out
loope
sub
sbb
aam
sub
lock
adc
pop
shrl
sub
pop
out
pop
mov
lcall
rcll
and
out
mov
xchg
inc
add
cmp
cmp
add
nop
mov
adc
stos
ljmp
imul
or
mov
sahf
and
adc
lcall
mov
clc
pminub
pop
lds
in
pop
lcall
xchg
mov
or
addl
jge
xchg
push
jbe
mov
sbb
leave
sbbb
xor
xor
in
adc
fcmovb
lock
or
daa
mov
mov
sbb
xchg
mov
inc
adc
cltd
inc
jl
jmp
xchg
mov
hlt
mov
sarb
xchg
inc
pop
push
xchg
ret
cmp
sbb
dec
push
cmp
or
cs
add
call
fs
pop
fisubrs
hlt
inc
push
mov
inc
sub
push
fs
repnz
ljmp
repnz
js
inc
fwait
test
cmp
arpl
and
push
lcall
mov
test
lds
mov
mov
enter
les
rclb
xchg
into
cmp
mov
and
cmp
sbb
inc
outsb
push
push
dec
sahf
addl
adc
mov
sbb
xchg
cmp
push
mov
jecxz
mov
movsl
enter
mov
mov
aam
fisttps
insb
adc
and
mov
xor
jmp
ficomps
sar
js
mov
sahf
mov
jp
jne
lret
push
insl
in
dec
pop
jecxz
adc
stos
adc
fmull
imul
mov
or
ret
and
mov
lret
push
in
fwait
jl
in
shrb
out
sub
sahf
outsl
push
lods
cmp
lea
xchg
pop
movsb
fisttpll
sarb
les
insb
xchg
enter
push
divl
mov
scas
inc
jne
mov
jg
jl
and
mov
sub
loop
add
cmpsb
jp
push
pop
fstpl
lock
mov
in
sti
push
stos
outsl
push
shlb
mov
fwait
jmp
in
ja
stos
jns
cmpsb
inc
jnp
stos
jge
das
dec
sub
mov
inc
xor
add
test
cmp
imul
out
xchg
xchg
dec
xor
sub
inc
dec
mov
fdivrl
jecxz
fnstcw
mov
aad
or
sbb
test
sub
pop
mov
addr16
mov
cld
sub
out
cmpsl
mov
mov
call
mov
loope
stos
sbb
das
sub
push
mov
out
in
mov
ja
or
xor
pop
aas
xchg
aad
iret
dec
fbld
outsb
testl
push
mov
and
cmp
push
pop
scas
lea
inc
mov
dec
scas
into
inc
and
sub
sbb
dec
lret
push
pop
inc
das
cmpsl
lock
mov
xchg
xchg
add
clc
cltd
jge
and
dec
lds
xor
fsubrl
fsubl
adc
push
hlt
xchg
xor
push
sub
jnp
outsl
rorb
or
sub
cmp
inc
stc
cmp
orl
les
jl
test
loope
in
mov
xor
jno
repz
adc
jl
mov
push
sub
movsl
outsb
add
cmpsl
or
jg
jg
mov
mov
inc
aas
call
cltd
shll
fstps
xchg
and
fiadds
movb
cmpsb
jp
mov
mov
pop
int
mov
lahf
mov
hlt
aam
lea
xor
push
xchg
inc
add
std
push
mov
out
nop
sbbb
fcoml
adc
popa
sbb
scas
add
pop
stos
jnp
test
inc
mov
out
add
cmp
loope
jle
adc
sbb
inc
xor
stos
add
push
les
sarb
cmc
pop
cwtl
xchg
and
dec
or
ficoms
add
mov
sbb
sub
adc
jl
jl
jmp
jmp
rorb
leave
jle
rcll
sarl
push
jmp
pop
leave
shll
jns
and
arpl
add
jo
inc
scas
push
inc
mov
cmp
fcompl
dec
xchg
mov
lcall
loop
mov
pop
mov
lds
jmp
scas
pop
inc
pop
hlt
lock
scas
adc
mov
cmp
mov
lods
push
fs
hlt
lahf
adc
mov
mov
mov
insb
mov
int3
es
push
inc
cld
sahf
mov
ret
adc
out
pop
jg
cmc
push
xchg
mov
popf
aam
aam
lock
lds
loope
fsubs
mov
mov
stos
inc
pusha
mov
jecxz
xor
inc
mov
push
lock
idivl
jle
outsl
jge
xchg
push
inc
ljmp
into
mov
mov
or
test
int
test
jnp
jg
mov
push
and
mov
push
lods
lcall
xor
dec
push
cmovns
pushf
sub
sbb
pop
daa
and
mov
dec
pop
hlt
jmp
jmp
dec
pop
push
jb
dec
xchg
aad
pop
mov
jb
lock
sub
and
add
cmp
push
cli
jb
add
pop
jo
inc
stos
fs
xchg
mov
adc
jl
inc
insb
mov
lahf
add
jne
adc
or
fistpl
dec
mov
cmpsl
push
lods
jmp
sub
push
sub
adc
push
or
xchg
push
add
or
mov
dec
test
and
xchg
dec
mov
mov
sahf
add
inc
inc
sbb
sub
dec
mov
inc
sub
mov
shrb
add
lods
mov
mov
push
add
negb
movsb
data16
repz
jecxz
cltd
cld
jb
ljmp
popa
push
push
lahf
ret
mov
outsb
add
outsb
mull
xor
add
or
inc
jmp
sbb
in
xchg
das
jbe
out
push
jae
gs
les
gs
incl
int3
aaa
adc
loop
fwait
std
stos
adc
stc
inc
pop
sbb
aad
daa
in
mov
addl
pop
ficoml
jns
jle
mov
sub
mov
cli
push
inc
sub
mov
stos
inc
or
lahf
and
cmpps
jecxz
mov
pop
mov
pop
outsb
jmp
popf
and
adc
pop
xor
jg
sti
test
mov
ret
movsb
testb
cmp
dec
and
fisubrl
das
inc
jp
sahf
cmp
ret
push
pusha
pop
lds
loop
into
xorb
repz
mov
sahf
pop
scas
or
and
mov
loop
or
cld
sbb
dec
pop
xor
insl
pop
sahf
mov
iret
xor
mov
cmp
adc
mov
mov
pop
lahf
orl
shrb
dec
out
arpl
jp
iret
cwtl
fisubrs
xchg
cltd
mov
rclb
or
fwait
movsl
outsl
cwtl
mov
xor
inc
repnz
fwait
outsl
test
cld
int3
in
sub
cmpsl
fidivrs
fidivs
loop
subb
adc
aad
jle
clc
cmpsl
outsl
or
pop
sti
mov
jp
fstps
and
push
mov
xchg
xchg
outsb
jo
dec
sbb
add
sbb
push
mov
int
jp
mov
sti
jl
pop
psrld
adc
sbb
sbb
test
clc
cs
iret
fisubl
cltd
repz
cmp
xorl
hlt
pusha
loopne
into
mov
push
and
mov
pop
pop
xor
cltd
inc
lahf
test
pop
cwtl
daa
push
out
cmp
bound
mov
jg
ja
loopne
mov
icebp
sub
int
shrb
inc
or
sbbl
ret
cmc
data16
add
sbb
and
cmp
in
xchg
add
fsts
sbb
or
sub
xchg
xbegin
jb
xor
or
mov
mov
std
pop
pop
mov
xor
sti
pusha
pop
insb
or
mov
inc
and
cs
inc
xor
inc
pop
int
shl
int3
mov
jae
in
rcll
adc
cmc
cmpsb
filds
xlat
lcall
stos
movsl
sbb
cmpsl
xor
mov
andl
pop
int3
mov
and
mov
pop
xor
outsl
dec
xchg
aas
repz
out
fsubs
jo
adc
xchg
mov
test
jae
sahf
push
out
and
xor
mov
in
push
push
push
mov
call
int
outsb
jnp
mov
shrb
mov
mov
in
repz
call
jmp
mov
and
imul
scas
in
xlat
pop
aam
shll
ljmp
int3
test
mov
push
inc
sbb
mov
test
ss
sub
test
mov
cmpsb
jmp
mov
sbb
adc
fiaddl
ss
loopne
adc
mov
jg
ja
mov
pop
jge
insl
dec
xchg
pop
iret
xor
iret
push
jge
push
cwtl
inc
fmulp
out
sbb
or
loope
dec
mov
pop
xor
shlb
xchg
lock
leave
jns
std
mov
jae
push
push
xor
jl
sbb
mov
into
fcmove
mov
push
cs
arpl
or
daa
test
shll
add
popf
push
addr16
fistl
or
ret
adc
and
je
push
test
sub
ljmp
mov
mov
mov
clc
add
mov
mov
sbb
test
test
xlat
xchg
in
or
mov
clc
or
inc
repnz
stos
loop
fdivp
mov
sub
test
mov
insl
pop
cltd
rcr
enter
loopne
shll
mov
sub
cmp
imul
mov
push
jg
push
rcll
int3
adcl
push
jl
out
int3
push
cmpsb
dec
fs
bound
cmp
dec
mov
les
mov
xor
negb
and
test
movsl
adc
icebp
mov
and
xor
xor
cli
cmp
mov
push
jmp
add
mov
sbb
and
dec
mov
int3
int3
xor
cld
movb
and
add
mov
mov
lcall
addps
xchg
stos
adc
lcall
push
cvttps2pi
sbb
sub
addr16
jae
rorb
pop
mov
push
xchg
push
cmp
lds
shlb
std
inc
sub
adc
cld
in
and
cltd
cmp
sub
mov
push
outsl
or
dec
push
dec
test
jb
imul
repnz
sbb
pop
lahf
push
sti
add
mov
sbb
inc
fld
in
sub
pop
into
lock
sbb
cwtl
xchg
and
sbb
xor
jb
cwtl
cmpsl
jl
sbb
arpl
jno
inc
fs
loope
push
push
push
stc
aaa
add
insl
test
cmc
mov
movsl
push
dec
gs
push
sarl
loopne
cmp
mov
nop
outsb
js
inc
xchg
aam
and
lock
aam
sahf
bound
xor
jns
mov
mov
in
filds
cmp
mov
cmpsb
sub
push
and
push
pop
loope
mov
jb
mov
push
mov
sahf
loopne
mov
xor
dec
cmp
add
sub
ss
xorb
jne
mov
xchg
pop
rclb
dec
lock
xchg
push
xchg
push
ret
insb
fwait
xor
xlat
jne
mov
out
xchg
loope
cmp
jno
add
iret
sub
adc
push
mov
cmp
mov
cmp
movsl
pusha
xchg
mov
test
fidivl
in
ror
mov
cmp
xor
xorb
loope
mov
into
adc
jp
outsl
icebp
stos
lahf
xorl
fcompl
pop
imul
cmp
in
jmp
aad
xor
call
scas
push
pop
jmp
xor
insl
insb
inc
outsl
push
and
adc
dec
in
aas
jne
fiadds
xchg
dec
fnstcw
mov
out
insl
xchg
cs
pop
fcoms
pop
fsts
pop
rcr
pop
cmpsb
push
shr
cmpsb
xchg
push
inc
mov
jl
shl
and
shrl
scas
lds
dec
mov
cmp
cltd
push
mov
mov
loopne
inc
in
imul
xchg
mov
pop
xchg
dec
xor
fcmovnb
mov
iret
or
mov
push
loop
icebp
stos
mov
xchg
dec
mov
cmp
imul
insl
pop
cwtl
addr16
push
mov
cmc
push
inc
jnp
push
xchg
shll
cmp
lea
shlb
xor
pop
xchg
cmp
mov
dec
mov
ja
mov
push
mov
xchg
roll
sub
sti
cmp
pop
jmp
mov
dec
test
into
push
je
shll
mov
sbb
jb
jns
mov
nop
addr16
test
test
scas
add
jle
inc
jo
nop
mull
lds
cmc
jnp
jmp
cld
ljmp
jno
int3
or
sbb
cmp
xor
fists
cmpb
dec
in
inc
cld
hlt
cmp
sub
rolb
pop
lods
out
cwtl
les
xchg
mov
xchg
mov
call
pop
std
fcmovnb
cmp
daa
lock
jl
and
pop
divl
xchg
pop
fnstcw
test
es
push
push
push
dec
and
mov
and
mov
xor
adc
inc
adc
jb
pop
imulb
pop
cmp
jp
stos
insb
mov
fsubl
punpckhbw
daa
or
ss
mov
dec
xor
cmpb
push
or
push
repnz
sub
in
jb
mov
je
in
rcrb
xor
rep
mov
leave
iret
in
and
mov
bound
popl
push
lcall
dec
jo
mov
ficompl
adc
sar
push
mov
mov
add
sbb
std
push
push
mov
loop
lret
int3
and
sub
and
xchg
test
add
sub
xor
inc
popa
jne
and
inc
dec
lock
jle
adcb
xchg
mov
in
mov
pop
push
xor
fldt
jecxz
xchg
popa
sbb
pop
lahf
ljmp
std
aas
dec
xchg
cmp
pushf
push
idivl
mov
mov
out
outsb
xor
jle
outsb
scas
xor
mov
stos
xchg
add
and
xchg
inc
in
test
jno
inc
aas
stc
inc
jp
mov
pushf
cld
leave
insl
cmp
xchg
jno
aam
xorb
std
xor
push
push
iret
divb
out
iret
iret
and
test
xchg
jne
push
cmpb
sbb
repz
xchg
out
not
cmp
bound
dec
subb
sub
pop
jnp
mov
sbb
je
fdivr
je
sbb
fsts
ljmp
sbb
in
sbb
mov
mov
fwait
jne
push
sarl
je
pusha
out
movsb
sbb
daa
pusha
mov
clc
sub
ret
cmp
sbb
std
test
fidivrs
cld
jne
push
stos
cmp
shl
inc
cmp
xor
imul
sti
out
outsb
popa
jno
int3
nop
xchg
addr16
outsb
stos
jmp
out
mov
dec
jmp
inc
sub
insb
imul
fwait
movb
dec
ret
mov
je
loopne
ja
cmp
xchg
pop
mull
lds
out
adc
jmp
divb
cmp
fistpl
nop
pop
and
movsl
divb
rorb
aaa
xlat
pusha
cltd
push
or
sub
xlat
adc
ljmp
aaa
and
clc
push
aaa
jle
pop
or
xchg
cmp
mulb
jb
mov
add
incb
inc
sbb
pop
mov
nop
std
test
fildll
movsl
push
pop
lret
aad
lcall
inc
xchg
ds
mov
out
and
cmp
and
mov
adc
sarl
xchg
xchg
ds
xrelease
fstps
push
or
int
cwtl
outsl
xchg
jo
rorb
jmp
test
add
add
sbb
lea
push
aas
jo
dec
xchg
pop
pop
adc
in
mov
outsb
loopne
xor
push
mov
xchg
jnp
divb
ret
rclb
add
adc
sub
xchg
sbb
mov
push
int
mov
cli
xadd
mov
add
fs
test
xor
inc
mov
dec
xor
pop
xchg
in
scas
ret
push
or
mov
xor
mov
ror
cltd
cli
push
cld
nop
xchg
shll
test
in
dec
push
jo
mov
clc
pusha
call
ss
mov
mov
icebp
cs
out
mov
or
cwtl
mov
iret
mov
lods
repnz
cmp
and
xchg
jnp
mov
push
das
aad
push
lea
jo
nop
pop
movsl
xor
pop
cmpsl
sti
dec
sbb
movsb
push
fnstenv
xor
cmp
ds
xchg
xor
inc
xchg
dec
scas
pop
push
pop
ljmp
in
xchg
cmpsl
xor
push
xchg
ja
xchg
pop
mov
pushf
jae
cmp
cmp
ret
cmp
std
lock
push
pusha
insl
and
jne
push
mov
mov
pop
cwtl
sbb
repnz
push
or
movsl
or
es
or
scas
mov
stc
mov
dec
fildl
mov
outsl
and
add
inc
fildl
lea
mov
sbb
push
push
aaa
cmpxchg
out
pop
imul
in
push
shll
cmp
push
sti
ljmp
add
inc
jns
mov
and
lods
fabs
mov
sbb
pusha
data16
mov
push
outsb
pop
imul
adcb
daa
add
daa
hlt
inc
xchg
pop
daa
jle
scas
repz
scas
pop
in
sub
push
sahf
push
adc
subl
and
mov
dec
adc
sub
shrb
and
outsl
mov
js
cld
mov
xchg
inc
jg
fldl2e
mov
and
movsl
sbb
sub
push
outsl
and
jecxz,pt
mov
pop
dec
xor
dec
std
or
sbb
and
push
imul
sahf
lcall
mov
xor
sbb
and
lods
negl
fcoms
arpl
dec
mov
ja
adc
jne
inc
add
and
roll
notl
push
movsb
xchg
add
test
push
xchg
sub
xor
cltd
xor
push
push
daa
dec
adc
xchg
sub
loopne
movsb
int
pop
out
jbe
les
jecxz
inc
push
sub
lcall
fs
movsl
aaa
push
pop
pop
sub
lods
out
cld
push
xchg
jp
sbb
sahf
adc
divl
test
movsl
aad
hlt
mov
fiadds
in
xor
cs
dec
xchg
lahf
repz
cld
xchg
pop
mov
xchg
icebp
pop
sarb
cwtl
push
dec
sbb
adc
ja
mov
test
sbb
jg
leave
cmpsb
ds
xchg
movsb
testl
ficomps
push
es
out
cmp
inc
scas
es
sbb
out
ds
and
call
cmp
push
xchg
pop
pop
pop
mov
popa
adc
rol
orb
std
movsl
dec
mov
fimuls
sub
call
push
orb
cmp
add
add
scas
enter
les
cmp
xorb
lcall
test
mov
or
sub
sti
mov
mov
in
jnp
adc
bound
inc
dec
sti
aaa
push
xchg
cmp
mov
xor
clc
cmpsl
xor
sub
mov
inc
lock
sbb
pusha
fildll
or
cmpsl
fs
lock
iret
sub
movsb
ljmp
out
pop
cli
pop
cli
lahf
jne
sub
xchg
pop
and
pop
shl
rcrl
fidivl
inc
out
push
xor
dec
daa
pop
es
fcoml
push
adc
sub
push
clc
cmp
sbb
int3
dec
sub
sahf
es
fcomip
add
and
movsb
xchg
push
mull
push
sub
xlat
cwtl
lahf
frstor
stos
mov
jle
and
xchg
and
pop
test
xchg
xor
ljmp
shll
jae
sahf
and
pop
xchg
mov
dec
sarb
hlt
lea
sbb
dec
lret
lret
sbb
jns
mov
clc
pop
in
adc
mov
neg
xor
test
popf
testb
cwtl
aad
jp
fldl2t
mov
xchg
jl
sub
dec
jbe
and
addr16
in
sbb
jmp
inc
test
ret
outsb
addr16
jecxz
xor
sbb
sbb
and
in
lods
jns
cmc
xchg
icebp
adc
in
mov
mov
inc
and
leave
lock
ud0
lcall
cmp
jb
mov
sahf
adc
mov
add
pop
clc
pop
mov
xor
push
inc
movsb
mov
mov
cmpsb
insl
sbb
imul
mov
mov
stos
ljmp
into
data16
stos
in
nop
lock
pop
jle
mov
adc
fsub
mov
adc
sub
cmpsl
pop
push
rolb
and
push
icebp
pop
jne
jge
mov
push
daa
lret
inc
xchg
cmp
cmpsl
adc
stos
jp,pn
sbb
iret
mov
and
fstpt
mov
movsl
xor
out
xchg
in
and
inc
rclb
movsl
sbb
lret
inc
push
jbe
mov
sbb
fdivs
mov
loope
fwait
mov
dec
inc
adc
push
push
cwtl
gs
loopne
jmp
add
lcall
jmp
dec
or
addb
clc
add
pushf
int3
xchg
test
pop
mov
aas
and
push
sti
jne
lret
jae
push
stos
popa
lret
mov
dec
dec
sbb
imul
lods
divb
enter
lret
pop
ficomps
add
aaa
cmp
push
shr
repnz
jge
jge
add
mov
add
xor
xchg
sbb
inc
jo
es
cmp
xchg
xchg
std
call
jnp
push
mov
mov
in
out
or
mov
shll
sbbl
adc
movsl
and
mov
int
in
sbb
adc
xchg
lods
xchg
sub
in
ljmp
sub
daa
test
sahf
push
mov
cs
in
sbb
mov
imul
mov
cmp
add
sahf
rcr
std
pop
inc
push
lahf
cmc
inc
xchg
and
jg
int3
inc
pusha
mov
out
or
inc
jae
out
cmp
imul
popf
faddp
cmp
pop
fcompl
cmc
sbb
xchg
fwait
push
xchg
dec
flds
push
xor
stc
push
iret
push
aad
push
shrb
jge
push
pushf
out
out
gs
mov
insl
jp
clc
nop
dec
sub
xor
out
icebp
in
sub
jge
adc
push
cmp
outsl
mov
cmc
std
mov
push
adc
test
mov
pop
adc
call
push
pop
js
push
pop
mov
sbb
and
pop
dec
pop
lock
notb
testb
pop
cld
mov
popf
inc
in
rol
nop
adc
movsb
adc
jbe
movsl
and
test
push
pusha
outsb
push
in
mov
stos
jge
mov
in
stos
pop
dec
imul
or
add
sub
xor
jge
div
pop
dec
out
imul
mov
data16
repnz
mov
or
pop
push
sub
xchg
rolb
mov
es
enter
pop
xchg
jmp
ljmp
sbb
lret
sub
pop
pop
ja
sbb
sub
mov
test
mov
bound
jae
in
cmp
xchg
mov
jns
in
mov
dec
and
ljmp
xlat
insb
mov
and
das
add
cmp
movsl
inc
push
sub
cmp
sbb
nop
jbe
cltd
xchg
mov
popa
sub
repnz
in
mov
insl
jle
scas
and
mov
popa
daa
cld
push
out
mov
rcrb
adc
dec
out
ds
cltd
cld
cmp
jge
cmp
testw
mov
sub
cmpsl
cmp
fiaddl
pop
pop
jecxz
adcl
shlb
das
scas
cmpsl
mov
lret
mov
sub
mov
rorl
mov
mov
inc
outsl
jle
push
mov
aas
bswap
movsl
repz
sbb
cltd
pusha
or
adc
psubq
not
mov
out
mov
addb
rolb
mov
ret
mov
sub
lock
fnstcw
ja
xor
mov
pop
mov
adcb
rcll
dec
out
mov
jae
jle
in
bound
movsl
lcall
mov
nop
push
mov
mov
mov
fucom
or
into
cmc
cmp
add
idivb
lret
ret
sub
mov
jp
lea
movsl
and
sub
mov
lcall
outsl
mov
lahf
cmp
pop
sbb
jl
dec
mov
lret
mov
cltd
adc
jns
pop
add
int3
fwait
xchg
lds
push
out
test
inc
jns
push
mov
mov
bswap
insl
inc
movsl
fiadds
xchg
adc
push
mov
or
aaa
fstps
mov
negb
xor
icebp
outsl
or
pop
mov
cmp
jmp
sub
insl
cwtl
ss
into
daa
dec
jl
xchg
jecxz
xchg
and
push
fdiv
test
jb
mov
inc
test
adc
pusha
out
ds
shll
jnp
xchg
jge
pop
dec
je
cld
cli
jb
add
imul
repz
add
cmc
dec
xchg
sub
adc
mov
inc
or
sbb
mov
lcall
mov
loopne
scas
cmpsb
mov
add
lret
outsl
rdtsc
xlat
int3
popa
jecxz
cmp
xchg
jmp
mov
ljmp
cmc
popl
mov
mov
lea
pop
push
or
cmc
mov
adc
pop
jo
mov
insl
cs
pushf
scas
outsb
les
test
out
add
or
ror
in
cli
pushl
imull
fxch
add
divb
xor
and
sarb
shrb
into
adc
fidivl
minps
mov
stc
push
clc
idivl
pop
test
pop
jns
mov
pop
std
push
mov
call
out
adc
test
dec
add
loopne
inc
and
xchg
subl
sub
fldl
mov
cmp
insl
add
jmp
mov
sub
ljmp
mov
inc
shl
frstor
dec
arpl
mov
inc
or
inc
fldlg2
les
add
or
sbbb
and
divl
sbb
ja
adc
arpl
lahf
pop
iret
and
shrl
xchg
sub
mov
shlb
push
pop
mov
int
test
sbbb
cmp
push
pop
mov
fistpl
mov
jl
outsl
fdiv
ret
xchg
or
dec
push
fildl
or
mov
lea
push
jecxz
mov
fisubrl
jne
or
mov
adc
push
sub
lock
sarb
das
fisubl
add
xor
cmp
hlt
les
jge
sub
and
jecxz
or
lahf
mov
xchg
ret
testb
in
push
inc
fs
lods
js
mov
jns
cmp
jo
sbb
jbe
loopne
mov
ret
push
adc
insl
sub
ss
mov
rcrl
and
push
stos
dec
mov
xchg
addr16
clc
aam
bound
mov
add
notb
icebp
orb
mov
pop
pop
and
sbb
mov
jp
sub
dec
cmpsl
orl
rorb
loopw
pusha
loop
imul
adc
inc
testb
test
push
enter
inc
in
cmpsb
mov
in
and
mov
adc
mov
imul
test
sub
dec
fnsave
arpl
cmp
fmuls
sbb
mov
inc
xchg
jp
add
in
movsl
popa
adc
leave
inc
shll
mov
repz
loopne
sbb
push
dec
jb
jae
les
ja
dec
sub
in
dec
mov
mov
jae
mov
jb
jae
jle
push
into
pop
push
sub
fldl
mov
xchg
sarl
popf
jns
mov
inc
cmp
es
int
pop
adc
push
adc
adc
jg
test
pop
dec
fists
sbb
repz
sub
mov
sbb
lods
cli
test
inc
outsl
jg
rcrb
or
push
xchg
scas
loopw
mov
sbb
jg
movsb
andl
mov
popl
xor
mov
sub
loope
sub
xchg
and
das
mov
in
lods
fcoms
lock
dec
sub
xchg
cli
add
fldt
lea
mov
mov
adc
imul
pop
and
stos
rorl
sub
filds
dec
fnstsw
xchg
jae
fdivrs
mov
stos
repz
jp
pop
in
add
jecxz
ret
int3
int3
fsubrp
cwtl
scas
cmpsb
dec
mov
fldenv
cld
out
icebp
ss
bound
cld
aas
out
inc
add
out
mov
bnd
jge
fisubrl
addr16
inc
xchg
lods
pop
ja
push
and
sti
lods
xchg
pop
pushf
fcmove
mov
mov
es
mov
lods
or
stos
cmp
pop
rclb
incb
adcl
outsl
iret
ds
add
mov
mov
fmuls
mov
inc
push
inc
pushf
xchg
iret
imul
js
sub
lea
pop
rcll
adc
sbb
mov
and
out
loope
jl
push
or
push
adc
ds
popa
mov
sahf
push
sbb
movzbl
rorb
aaa
aas
adc
cmpl
dec
sbb
mov
lock
add
xchg
xor
mov
leave
popa
mov
mov
cwtl
outsl
shlb
dec
fucom
jg
add
inc
inc
push
sub
imul
pop
ret
aas
sbb
jg
test
adc
add
jo
xlat
das
aad
mov
jmp
inc
xchg
inc
jmp
mov
lock
cltd
xchg
je
mov
incl
fmull
adc
ds
add
ljmp
xchg
lods
loop
push
fmuls
lea
xchg
adc
test
cs
jne
stos
sahf
test
jmp
push
mov
add
and
mov
lock
aad
push
cmp
sbb
mov
and
daa
push
out
lods
adc
xchg
mov
cmpsb
pop
and
repz
movsl
in
dec
daa
incb
push
ss
cld
xrelease
divl
jno
data16
push
loop
imul
mov
mov
add
mov
push
fwait
jb
movsb
lds
push
loope
movlps
in
pop
addr16
xchg
dec
mov
popa
jmp
mov
scas
xor
aad
add
add
xchg
or
shl
mov
fldl
rol
repnz
push
shll
pusha
iret
jp
dec
pop
xor
fcmovnu
mov
push
fimuls
mov
sarl
and
sbb
ss
mov
mov
inc
test
mov
jmp
in
cmpsl
or
sub
jge
mov
jmp
shrl
xorb
and
sub
popa
lret
inc
lahf
pop
dec
push
cmc
xor
or
xchg
mov
add
loopne
cmp
shlb
sub
fsubp
pusha
xor
jecxz
mov
jecxz
ficomps
jb
or
add
or
dec
out
adc
inc
in
lods
mov
ljmp
das
clc
inc
pop
lock
popa
or
sbbb
out
sbb
mov
cmp
pop
fbstp
mov
inc
push
sub
leave
cmp
sbb
jmp
and
xor
scas
pop
cld
mov
pop
scas
or
flds
adc
inc
repz
or
shr
cs
popa
mov
sbb
xchg
rcl
sbb
scas
sbb
ja
bound
scas
aad
jnp
clc
int3
cmpsb
lods
push
jns
jmp
pushf
dec
sbb
cmpsb
inc
lcall
scas
jb
mov
cltd
mov
mov
mov
stos
sbb
mov
lods
sub
je
inc
sbb
xor
xor
cmp
sub
psrld
mov
jecxz
push
mov
into
xor
lock
scas
test
mov
mov
jecxz
cmp
sbb
inc
loopne
sbb
add
push
jmp
add
notb
inc
loopne
mov
pop
stos
inc
stc
push
cmpsl
and
dec
andb
push
dec
mov
lea
inc
lret
shll
mov
dec
das
cmpsl
dec
push
sub
push
cmp
stos
dec
push
stos
jmp
cmc
loop
push
nop
and
cli
cs
inc
inc
call
push
lret
inc
pop
cld
cltd
xchg
into
pop
mov
sub
adc
push
clc
loopne
int
sub
sub
cmp
and
or
mov
cld
pusha
into
cs
or
cli
xor
call
mov
or
xchg
sbb
mov
cli
sar
insl
cmpsl
jnp
push
sbb
push
and
fmuls
bound
cmp
div
cmp
popf
mov
gs
push
aad
aam
mov
sub
mov
out
push
push
sbb
xchg
int
pop
scas
icebp
out
loop
push
jmp
fstl
jnp
inc
loope
jne
lahf
xchg
push
lea
mov
mov
mov
ret
mov
insl
clc
fsubr
dec
fsubrs
mov
pop
adc
rol
jns
mov
lret
mov
and
adc
in
fnstsw
sbb
add
enter
scas
push
push
push
lods
es
lret
mov
arpl
out
adc
sbb
aam
ret
jns
pop
outsb
push
jns
add
fsubr
imul
pop
push
mov
mov
stos
and
addl
jecxz
add
popf
or
xchg
ljmp
out
xchg
sbb
mov
jp
pop
dec
sub
scas
test
jg
pop
fistpl
jle
push
pop
test
enter
adcb
or
loop
push
push
insb
ja
hlt
mov
call
dec
and
and
fimuls
mov
push
cmpsb
imul
cmp
adc
lods
and
pop
inc
popf
adc
inc
rcll
imul
loope
sbbl
test
cmpsb
dec
loope
into
xchg
xchg
popa
and
adcb
mov
ret
shll
sbb
mov
repnz
xor
shlb
xor
and
mov
dec
mov
mov
call
push
imul
loope
mov
adc
sub
sbb
pop
xchg
xchg
test
orb
sub
imul
sub
add
xlat
sbb
add
sub
outsl
cmpsl
adc
dec
adc
xchg
pop
mov
stos
jne
or
test
inc
push
insl
fidivrs
loop
enter
push
jmp
xchg
into
push
shr
and
addr16
sbb
jb
push
gs
cmpsl
sub
test
mov
mov
xor
out
sub
ds
aad
mov
push
mov
cs
push
ss
fdivrs
ret
stc
out
adc
jmp
lahf
stc
mov
mov
xchg
and
adc
xor
sub
lret
add
fwait
pop
popf
mov
or
jae
xor
mov
es
xchg
faddl
add
insb
leave
pop
aaa
cmovns
pop
jg
sar
lret
and
out
sub
pop
addl
xchg
lods
mov
pop
mov
lock
pop
inc
or
dec
pop
stos
or
cmpsb
add
jge
call
iret
cli
inc
ret
mov
jg
in
or
lea
jnp
imul
rcr
dec
lret
leave
jmp
fsubrs
push
ja
mov
xor
shl
mov
stos
arpl
imul
enter
push
sarl
jbe
and
jbe
lret
popa
push
mov
pushf
dec
inc
jno
and
fwait
jp
aad
mov
pushw
arpl
sub
add
vpsubsw
dec
das
mov
inc
jmp
or
sub
sub
mov
mov
ja
in
sti
in
jl
or
push
rcll
ss
xchg
fcomi
or
cmc
jnp
addl
jmp
mov
scas
repnz
mov
mov
jle
fmuls
addps
adc
call
lea
sub
ret
dec
mov
pop
sub
mov
cmp
xchg
sub
addr16
sub
xchg
mov
jp
dec
int3
nop
pop
or
add
mov
push
cmpsl
jecxz
adc
inc
dec
mov
pop
add
mov
pop
into
or
and
or
iret
pusha
push
adc
add
inc
sbb
adcl
outsb
mov
jmp
lahf
sbbb
xor
adc
cs
jno
xor
jae
mov
pop
adc
imulb
jge
dec
int
test
fcoms
in
inc
sbb
fistpl
inc
lret
pop
push
jo
mov
lret
popa
xchg
mov
bound
jb
jl
xor
cli
jno
popf
cli
xor
mov
or
jae
jb
and
mov
hlt
ss
aam
sahf
xor
or
xchg
lcall
loop
hlt
or
movsb
ja
sbb
rol
cmp
jbe
test
iret
int
cmp
sub
xchg
mov
test
repz
pusha
ret
jo
adc
incl
shll
adc
sub
into
and
addr16
stos
adc
je
pop
mov
movsl
inc
mov
int3
loope
mov
je
sub
addr16
shll
push
fnstenv
jmp
int
int
test
es
or
pop
movsb
in
outsl
dec
stos
mov
fldenv
insb
stos
out
sar
aas
mov
mov
mov
icebp
mov
pop
push
pusha
gs
js
in
roll
mov
movsl
sti
pushf
popa
and
sub
bound
pop
add
sti
cltd
ss
sbb
cld
mov
mov
inc
ret
and
mov
aaa
outsl
mov
pop
cmp
push
jo
hlt
fsubrs
lret
sub
es
dec
ret
test
ss
neg
mov
in
icebp
cli
lcall
es
sub
incl
cmp
mov
mov
incl
sarb
pop
mov
pop
sbb
ret
repz
pushf
outsl
push
loop
call
loopne
push
jb
fdiv
xchg
out
in
out
pop
add
sti
dec
test
dec
cmpsb
in
jp
mov
add
pop
aad
push
cmc
jl
dec
loope
iret
mov
or
fdivrs
xchg
hlt
pusha
inc
xor
xlat
or
ret
pop
imul
push
je
mov
and
pop
jg
ret
hlt
mov
sti
add
lods
cwtl
outsl
xor
xchg
xchg
push
mov
xorb
adc
rclb
sbb
inc
sub
jns
pop
mov
push
dec
out
jge
xor
in
mov
sub
jns
js
sahf
cwtl
movsl
fwait
addl
adc
add
movsl
ficoml
sub
xchg
sub
jo
insb
out
imul
outsb
cmc
out
push
cmp
mov
mov
sarl
out
in
jo
ljmp
stos
jp
pop
fdivrs
cmpsb
adc
or
sti
and
xor
imul
std
flds
fisubrs
aam
push
das
out
add
imul
repnz
jmp
mov
enter
mov
mov
pusha
repz
jmp
mov
pop
jl
pop
pcmpeqd
push
xor
ja
cmc
out
cltd
and
stc
hlt
fmuls
call
mov
les
jg
nop
sbb
testb
int3
fwait
ds
pop
xor
mov
int
lods
cmc
cwtl
cmpb
fsubrs
dec
shrl
mov
out
into
ret
ret
inc
adc
xchg
les
push
int
mov
inc
lods
shlb
stos
aas
jns
loope
push
mov
mov
push
pusha
aam
gs
movsb
lods
cmp
push
push
hlt
add
imul
mov
push
jmp
mov
add
xor
xor
addr16
cmp
pop
sbb
xchg
pop
mov
mov
fidivs
cmpsl
fucom
inc
pop
jns
lret
mov
into
mov
rcrb
test
sub
fcmovbe
sub
xchg
rcrb
mov
cmp
or
stos
pop
xchg
aaa
mov
xchg
lods
leave
fisubrs
xchg
icebp
jle
push
insl
movsl
and
and
loop
push
adc
or
push
jp
adc
std
jmp
in
icebp
sbb
pop
add
insl
pop
fwait
lret
push
cwtl
aas
and
dec
mov
sbb
xor
or
and
jp
aas
jle
into
mov
lea
cmp
popf
gs
add
daa
lahf
test
xor
lahf
sub
lea
icebp
dec
cld
enter
mov
xlat
pop
inc
xorl
push
fistpll
in
dec
in
pop
pop
icebp
inc
aad
adc
dec
mov
inc
sbb
mov
gs
lods
das
bound
push
sub
out
jns
pop
icebp
ss
sbb
or
dec
jne
or
iret
jmp
xor
add
mov
mov
push
stos
out
mov
ret
popa
mov
outsl
jae
xor
sub
insb
xor
mul
push
int3
test
sub
fwait
cmp
cmp
scas
or
in
xchg
ds
or
mov
ret
jo
sarl
ret
clc
xor
je
pop
jb
pop
xchg
mov
int
mov
cmpsl
vpextrw
insl
inc
pusha
pusha
or
imul
fcoml
sbb
push
jnp
adc
nop
ss
bound
xor
and
pop
enter
mov
nop
pusha
in
cs
jne
mull
sub
mov
sarl
adc
int
fimull
xchg
scas
mov
divb
repz
cmp
push
adcl
xor
mov
decl
imul
push
cmp
daa
push
xchg
sbb
jecxz
xchg
popa
dec
addr16
loope
sub
mov
inc
inc
lahf
and
cmp
lods
testb
gs
mov
lcall
xchg
aaa
pop
mov
lret
addr16
lods
das
shrl
in
sbb
jbe
pop
in
insb
stos
and
xor
pop
dec
cmpsb
movsb
mov
iret
and
lods
mov
cli
and
jne
ds
das
push
cmp
or
xchg
call
pop
add
les
sub
les
ljmp
push
adc
jnp
xchg
adc
pop
add
jecxz
cmp
jl
pop
int
pusha
loope
fildll
adc
scas
int3
lea
jb
roll
mov
shl
aam
mov
test
inc
jle
adc
mov
gs
inc
adc
push
test
jno
ret
fdivrs
movsl
sub
pop
hlt
jae
arpl
adc
bound
and
dec
dec
add
lret
mov
dec
xchg
xchg
lahf
and
sbb
adc
into
icebp
dec
mov
and
adc
ror
les
sub
enter
jb,pt
pop
xor
sub
push
jae
jle
dec
shll
push
data16
cmp
fmuls
push
cmp
adc
rcrb
or
je
inc
fs
ficoml
repnz
fmulp
jge
pushf
ja
sub
andl
mov
or
sbb
loope
sarb
cmpsl
sbb
out
sbb
fwait
sub
dec
testb
je
xor
inc
mov
mov
push
aaa
jmp
xchg
cmpsl
mov
sbb
adc
clc
fstpt
jmp
je
pop
xchg
ljmp
lods
stos
add
fstp
xchg
testl
call
lods
dec
int
jns
decb
popf
adc
jg
into
pop
xchg
sub
gs
adc
outsb
xchg
cmp
je
je
lods
xor
xchg
jmp
gs
icebp
cld
sub
dec
push
xor
lock
push
add
fcoms
fldt
fmuls
shlb
add
pop
pop
insb
pop
js
insl
pushf
sub
js
mov
or
mov
add
push
cltd
outsb
sub
or
mov
mov
enter
call
inc
aas
push
pop
insl
and
icebp
andb
cld
sbb
push
mov
leave
add
pop
push
mov
out
pushf
repz
dec
and
xor
xor
imul
inc
or
inc
cmp
out
pop
daa
aaa
test
jecxz
inc
xor
daa
push
xor
xchg
test
sbb
inc
and
notl
in
shl
or
add
pop
push
bound
sbbl
adc
les
inc
jno
imul
dec
jae
mov
mov
fistpll
cmp
push
dec
popf
ret
and
adc
mov
push
or
out
int
cmpsl
adc
pop
in
cmp
sbb
jge
add
aam
fsubl
inc
xchg
jg
xchg
sub
stc
das
xor
pop
mov
nop
push
mov
jae
or
test
sub
pop
add
les
mov
xor
mov
inc
push
ljmp
sbb
test
test
sbb
lcall
imul
cmp
scas
inc
or
bound
sbb
dec
push
aas
dec
jae
mov
pop
xor
dec
sbb
jae
ds
or
in
lret
inc
jo
inc
mov
mov
push
fwait
and
aas
scas
mov
fwait
xchg
sub
mov
cwtl
insl
daa
fidivrl
jo
int
call
jno
mov
push
aad
pop
xor
xor
and
xor
fwait
inc
fists
addr16
ds
or
add
pop
lret
aam
pop
rclb
adc
ja
xchg
std
or
jmp
cld
fisubrl
lret
imul
pop
and
cmp
les
push
mov
test
adc
cs
jnp
imul
sbb
jns
mov
aam
aas
push
je
xchg
push
dec
out
mov
insl
xor
jnp
jg
add
aaa
pop
lret
pop
js
jp
xor
fidivl
imul
sub
mov
cwtl
std
call
adc
push
jmp
bswap
dec
adc
mov
outsl
pop
or
lret
jle
dec
lods
mov
std
jae
inc
mov
lock
mov
iret
and
pop
push
adc
out
dec
lret
jg
in
ret
ret
cmp
lods
mov
push
or
das
rorl
nop
pop
jo
mov
popa
test
lret
sti
vmovups
pop
sbb
sahf
ss
xchg
cmpsl
mull
mov
aas
xchg
xchg
and
and
adc
adc
fisttpll
stc
lret
sub
fldl
insl
cmp
sbb
cltd
movsb
jae
cmp
sub
push
std
add
testl
test
mov
mov
enter
cmc
jle
test
pushf
mov
lahf
inc
repnz
add
leave
xor
push
mov
dec
or
outsb
inc
adc
xchg
push
aad
jl
cltd
push
outsl
popf
mov
stos
sub
dec
rcrl
outsl
xor
aam
ret
mov
adc
cwtl
jecxz
les
jmp
jp
cmc
js
das
push
into
in
inc
in
jmp
popa
pop
test
cmp
cmc
stos
imul
pushf
repnz
jmp
fadds
sbb
call
popf
push
push
call
adc
push
mov
mov
xchg
ret
mov
mov
insl
jne
loope
sbb
mov
scas
in
mov
inc
aam
or
xchg
das
in
imul
push
dec
dec
addl
loopne
and
pushf
cld
aad
shrl
stos
dec
rclb
mov
jns
dec
js
pushf
push
push
push
and
imul
xlat
mov
in
dec
nop
leave
inc
xchg
jno
inc
loopne
je
inc
jb
movsl
jp
push
jo
sbb
movsb
cmp
aad
dec
push
test
dec
dec
lret
pusha
dec
clc
ffreep
shll
or
jmp
inc
push
rorl
pop
cltd
fdivl
fcompl
dec
sbb
pop
jnp
add
pusha
call
lods
stos
out
ljmp
mov
je
jae
inc
xchg
add
push
xchg
sbb
in
mov
dec
jno
sbb
popa
inc
pop
xchg
popa
je
jnp
cld
jne
les
fwait
sub
dec
psubw
mov
js
add
test
jno
or
loop
jp
push
orb
in
das
pop
cmpsl
mov
stos
cmp
inc
jo
out
push
dec
mov
idivl
rcrb
dec
mov
pushf
pusha
sub
adcb
dec
ret
adc
cmc
mov
pop
adc
pusha
orb
lds
and
dec
insl
sbb
push
in
lret
mov
fiadds
enter
fs
mov
bound
in
inc
jb
pcmpeqw
inc
add
jle
out
inc
aam
jl
add
or
ds
push
jmp
xor
push
stos
jle
or
lret
loop
push
mov
push
sar
stos
ficomps
mov
lds
sahf
add
jb
shl
push
ret
leave
cli
mov
push
sub
sbb
mov
push
cmp
pusha
cs
jle
outsl
add
xchg
xor
cmp
dec
jo
mov
ror
loop
jo
rcll
mov
sbb
fnstenv
sbb
jno
iret
and
shrl
or
push
jmp
push
test
stos
lret
mov
push
loope
inc
xchg
sbb
lds
movsb
sti
rclb
fmuls
cmp
icebp
sub
jo
xchg
pop
and
into
scas
jno
lret
or
js
std
xchg
iret
mov
push
push
fbld
pop
add
push
fidivrl
icebp
daa
mov
xor
lock
mov
lods
adc
loop
imul
add
inc
out
in
mov
lock
jns
int3
xlat
aas
pop
mov
outsl
mov
aam
scas
sub
outsb
push
hlt
and
cmp
mov
outsl
inc
repz
fs
jno
jp
adc
dec
xor
aad
xor
add
popf
cmp
xlat
dec
lret
mov
lret
outsb
js
movsb
pushf
test
int3
pop
lea
mov
push
subb
popa
mov
imul
ds
icebp
sub
push
es
push
jp
out
mov
xchg
dec
addr16
jle
aad
icebp
and
stos
fisubl
add
add
std
lods
cmp
mov
xchg
mov
es
fstl
mov
mov
rclb
mov
and
inc
imul
loopne
mov
push
and
ds
mov
call
imul
sbb
or
sub
lcall
inc
aaa
jge
ljmp
inc
xor
ret
push
aas
dec
test
int
test
pop
fldl
dec
dec
push
ss
sub
subb
and
roll
push
ds
inc
mov
enter
ret
lahf
mov
xchg
push
xchg
mov
push
ds
fstl
cmp
fiadds
int3
push
imul
cmc
iret
imul
ds
divb
push
incl
jo
fisubl
loop
push
jnp
mov
stc
mov
stc
lahf
push
mov
inc
adc
pop
adcb
shr
mov
fisttps
inc
or
aas
lcall
sti
in
ja
ret
cli
into
int
rcrb
cltd
lods
lea
jnp
and
insl
insb
rorb
xchg
push
in
push
nop
js
ret
lock
xor
shll
scas
adc
sub
loop
mov
cld
scas
inc
dec
loopne
sahf
fldcw
cmp
mov
sub
xor
mov
dec
test
and
addl
mov
adc
add
or
movsl
negl
adc
lods
rclb
stos
mov
lock
cwtl
dec
ja
notl
mov
push
cwtl
es
add
pop
mov
ljmp
or
pop
jg
movsl
lods
dec
jecxz
movsb
popa
scas
pop
jns
aas
push
cwtl
imul
sub
pop
inc
stos
outsl
insb
or
xorl
gs
dec
adc
fimuls
sbb
lahf
dec
jno
sbb
sbb
push
incl
decl
orl
pushf
movsb
repnz
and
popa
dec
xchg
mov
int
or
pop
loope
sbb
ret
stc
dec
push
ds
jp
gs
sbb
ja
inc
mov
add
addr16
sarl
push
push
cmpl
fsubr
xor
dec
adc
mov
push
out
mov
xor
outsl
sbb
inc
push
pop
outsl
ja
dec
add
or
adc
in
sarl
lret
mov
fwait
mov
ljmp
cmp
sub
pusha
dec
fs
and
jge
mov
jecxz
mov
sub
add
jle
inc
inc
in
push
adc
xor
test
mov
push
xchg
xchg
cmc
cmp
mov
outsl
scas
xchg
adc
insl
or
in
dec
outsb
mov
adc
push
inc
stos
pop
xchg
addr16
jb
sub
mov
icebp
rcrb
mov
cld
rorl
not
sbb
dec
or
movsl
jge
enter
xchg
add
imul
dec
das
pop
inc
int
push
adc
add
scas
cmp
xchg
sub
dec
mov
inc
or
loop
add
stos
sbb
dec
imul
mov
imul
shl
cmc
and
lret
test
dec
inc
pop
enter
adc
pop
mov
jle
xor
dec
aam
repz
hlt
lahf
jmp
or
je
adc
repz
sahf
or
fstl
daa
mov
cmpsb
fisubrl
adc
imul
pop
arpl
iret
js
xchg
daa
xchg
dec
xchg
nop
sub
dec
or
fcomps
xor
in
mov
outsl
dec
mov
xchg
ljmpw
and
out
aaa
pop
push
push
cmp
test
icebp
lods
in
dec
imul
push
test
aas
adc
in
dec
rcrl
std
cmp
incb
imul
test
call
std
out
jno
mov
mulb
int
mov
cmp
into
sub
jnp
cmp
add
xor
cmp
imul
fisttps
jmp
or
add
inc
in
adc
jmp
loop
jl
mov
int
addb
inc
jbe
xor
std
out
mov
cmp
xchg
mov
cmp
pop
mov
sti
addr16
je
idiv
xchg
jns
rorl
es
push
int3
ja
pop
popa
repz
cmc
addb
lret
push
ljmp
orl
pop
sub
or
sbb
adc
xchg
jg
mul
dec
or
or
cltd
jb
outsb
jmp
in
add
jmp
sar
jmp
mov
pop
lods
cmp
rolb
xlat
dec
in
hlt
sar
test
push
inc
fisubl
je
dec
loopne
and
xlat
mov
insl
movsb
xchg
cmp
sbb
sbb
les
insb
call
int3
dec
jge
jnp
sbb
scas
sub
addr16
push
mov
scas
push
push
in
cmpsb
scas
xor
int3
scas
and
jno
ss
loope
mov
loope
adc
or
test
mov
xchg
or
pushf
add
gs
test
jns
imul
test
in
inc
in
data16
ret
mov
daa
cmpsl
dec
mov
bound
stos
jb
lahf
js
cmp
daa
enter
cmc
lods
shrl
popf
sub
jno
mov
popa
push
dec
syscall
mov
aam
mov
mov
mov
or
int3
xorl
sti
in
imul
jno
test
cmp
stos
nop
das
arpl
cmpl
xor
aaa
inc
fadd
mov
ds
jmp
cmp
add
lods
nop
mov
add
sarb
cmp
ret
pop
outsb
incb
xor
fdivr
inc
rclb
popf
mov
push
in
cmpsl
out
or
scas
stc
movsl
xor
mov
fildl
pop
push
rcrb
imul
push
jae
and
insb
call
gs
xchg
mov
jmp
aad
inc
int
inc
subl
add
insb
int
push
fisttps
lret
pop
mov
push
mov
push
insb
sbb
iret
xlat
sub
jmp
fdivp
orl
insb
call
filds
enter
dec
stos
sub
mov
dec
push
jb
dec
dec
ljmp
mov
pop
pusha
lahf
xchg
jl
popa
adc
cmp
mov
jmp
int
adc
sbb
push
pusha
test
scas
push
mov
es
or
stc
mov
or
arpl
ja
mov
mov
jp
insb
scas
int
dec
jg
push
out
cmp
jmp
xchg
shll
call
mov
cwtl
lock
addr16
xchg
pop
lahf
jne
dec
lods
mov
and
or
pop
jp
outsl
and
or
stos
inc
and
iret
pop
dec
negl
mov
mov
inc
jnp
pop
loope
adc
test
cs
sbb
into
ret
mov
test
shlb
push
mov
outsb
fildl
dec
dec
das
jnp
xlat
pop
cld
mov
flds
rcr
stc
xchg
xor
mov
jno
lret
stos
pop
nop
sbb
frstor
loopne
pop
outsb
stos
mov
fdivs
add
enter
cld
scas
je
sti
ja
jnp
dec
lods
in
xor
xor
sbb
lea
xor
push
and
xchg
into
nop
xlat
push
jg
sbb
daa
jo
mov
pop
or
sbb
add
ret
fisubrs
inc
fdivrs
les
andb
hlt
jbe
outsb
bound
lock
sub
test
fwait
leave
enter
add
and
out
jns
inc
jmp
push
ret
test
cmp
mov
inc
push
mov
inc
jb
cmc
ljmp
test
in
adc
jp
fiadds
call
push
jge
jns
test
dec
sub
jecxz
test
pop
in
or
stc
lret
jne
fsubp
cmp
data16
push
inc
outsb
sub
mov
xchg
mov
mov
rcll
ret
mov
test
aad
insb
mov
scas
xor
jns
or
loopne
in
lods
ds
cld
mov
or
lcall
shl
testb
stc
dec
cmpsb
hlt
jmp
or
sbb
push
inc
inc
mov
mov
fisubrs
js
push
dec
sbb
cmc
mov
stos
aad
and
push
stos
inc
xor
or
imull
xchg
popa
sub
or
mov
mov
xchg
sbb
sbb
in
or
add
ja
pop
pop
data16
mov
sbbb
imul
mov
sub
push
fdivs
mov
pop
and
loopne
push
xor
lret
inc
sahf
scas
dec
ljmp
fbld
rcl
clc
std
push
lods
fadds
rcrb
or
cmp
jg
popf
outsl
sub
insb
add
push
cmp
loope
pop
imul
je
test
in
jmp
mov
dec
adc
insl
movsl
aam
mov
xchg
lcall
dec
ja
xlat
inc
mov
mov
sbb
pusha
pop
push
xor
inc
xor
xchg
in
adc
mov
shlb
jmp
imul
fmull
cmc
mov
cmp
and
inc
ret
sahf
cmp
jmp
or
scas
lods
adc
test
sub
inc
hlt
pop
sbb
lret
das
add
incb
cmp
sbb
mov
add
adc
mov
add
popf
ja
pushf
fucomip
dec
cmp
sti
inc
mov
pop
jecxz
or
hlt
rcr
jo
repz
loop
fs
pop
mov
push
jns
pop
out
pop
cmp
dec
push
insb
push
je
test
push
fistpl
sbb
inc
jnp
rorl
adc
hlt
or
test
mov
test
stos
cmpsb
loope
and
add
xchg
into
cmp
dec
cmp
cs
roll
int
xor
or
jmp
test
out
xor
dec
clc
sub
jl
loope
outsb
mov
outsb
lret
aas
daa
stos
arpl
push
xor
sbb
and
sbb
gs
push
in
std
es
and
or
rolb
xchg
cmp
call
xchg
lcall
mov
out
outsb
jmp
mov
cli
shll
jb
negb
in
push
xor
cmpsl
lret
cmp
mov
sbb
dec
cli
loope
fiadds
stos
fcmovne
in
cwtl
pusha
shll
sub
push
push
dec
lcall
jge
jge
jnp
in
push
fmuls
sub
mov
gs
inc
cmp
mov
stos
mov
js
add
fidivrl
fsubl
int3
scas
add
out
cld
pop
shlb
mov
push
aam
jns
mov
sub
and
pop
jle
xchg
mov
or
insb
fsubl
or
mov
lcall
lds
sarl
ss
adc
popf
pop
push
jb
insl
xor
dec
and
cmpsb
popf
pop
es
cmp
lods
jp
or
ficoms
mov
cmp
mov
add
mov
jae
sub
or
jmp
imul
scas
xchg
inc
pushf
dec
cmp
aaa
ror
lahf
mov
outsl
mov
imul
dec
cltd
fwait
mov
in
stc
jne
addb
xchg
mov
xor
cmp
fbstp
int
gs
or
movsb
inc
das
sbb
jo
jae
inc
cmp
jnp
int
xchg
inc
jge
iret
inc
sbb
lcall
inc
je
or
mov
push
add
push
xor
mov
pop
mov
insb
xlat
adc
add
cli
fcomps
inc
jno
mov
jmp
jae
fbstp
sbb
push
and
cmp
and
adc
test
adc
stos
sbb
mov
daa
cmp
sarl
icebp
int3
stos
clc
xchg
push
daa
outsl
sbb
cmpsb
mov
mov
aas
add
push
movl
push
adc
pop
mov
cltd
mov
nop
aaa
fwait
mov
push
jo
push
movl
xor
jb
or
lcall
mulb
pop
dec
push
pop
mov
sbb
cmp
mov
aas
mov
inc
fbld
pusha
add
push
insl
outsb
push
je
shrb
loopne
inc
jbe
xor
data16
int3
xchg
movsl
mov
in
adcl
shrb
repz
out
mov
adc
mov
in
and
xor
mov
sbbl
mov
in
pop
dec
cwtl
int
mov
xchg
lahf
mov
jb
adc
xchg
inc
dec
daa
mov
scas
sub
fcoml
fdecstp
aad
pop
popa
das
jns
out
cli
mulb
xchg
sbb
inc
add
jae
inc
lods
stc
push
xchg
mov
xchg
xchg
jne
mov
aaa
sub
lret
adc
jle
add
dec
sub
jne
push
jmp
ficoml
out
dec
xor
push
pop
or
clc
jne
lret
cmpb
push
pushw
xchg
mov
mov
pop
jne
ficompl
bound
into
sarl
fs
fs
into
or
jb
add
sbb
fwait
insb
std
mov
dec
sahf
fistps
subb
repnz
mov
fs
cmpsb
jl
pop
out
sbb
adc
fcoms
xorl
and
gs
pop
gs
adc
cmc
fsubl
outsl
mov
pop
jecxz
push
push
mov
popa
and
loop
pop
and
mov
dec
push
xchg
testl
sbbb
sbb
inc
repz
xor
push
outsb
and
ljmp
fs
lock
loop
stc
pop
aaa
in
sub
aas
mov
jp
mov
daa
das
inc
call
in
lea
ja
xchg
ss
cwtl
lods
cli
pop
pop
iret
jge
sarb
mov
rolb
jge
cmp
out
lret
add
push
imul
mov
out
in
int
inc
mov
std
je
jl
cmpsl
sbb
fsubr
sbb
push
stc
jge
inc
push
mov
cmpsl
cmpsb
mov
cmp
cmp
ret
or
cmp
vmovddup
ret
dec
pop
xchg
inc
sahf
movsb
cltd
cmovnp
cmp
lods
nop
cs
and
stos
test
jo
int
or
add
xor
sbb
mov
sbb
xchg
mov
in
inc
shll
mov
shlb
push
cltd
repz
inc
xor
push
lea
sbb
mov
push
mov
movsb
in
adc
jg
int3
gs
in
xor
inc
add
loope
push
aas
jno
cmp
pop
mov
clc
ss
aas
in
sub
dec
repnz
enter
out
mov
inc
loope
test
je
fwait
movsl
jmp
stc
pop
inc
pusha
and
ret
add
scas
fisttpl
cmp
push
sub
inc
movsl
test
ret
push
pop
mov
push
sbb
enter
dec
call
jne
enter
cmp
inc
shr
sub
mov
jne
xor
imul
ret
adc
inc
xlat
fs
add
fists
into
shlb
sub
sub
das
dec
sar
lcall
popf
fs
adc
call
mov
cld
and
loop
jecxz
push
push
pop
int3
testb
xchg
sbb
jmp
inc
aam
incl
mov
shll
jg
jle
pop
xchg
shrl
leave
push
mov
dec
cwtl
mov
shl
or
nop
jae
aas
pushf
inc
rcll
lcall
and
inc
sub
xor
pop
ljmp
std
add
sahf
xchg
or
xor
xor
cmp
adc
pushf
push
dec
lret
or
std
xlat
cmp
sbb
scas
mov
sub
and
jecxz
pop
insl
mov
lret
ljmp
cs
insl
bound
call
cld
dec
rorb
scas
icebp
mov
add
cmpsb
sub
dec
jae
test
or
pushl
roll
xchg
data16
xchg
xlat
jnp
dec
jnp
fmuls
jl
pop
sbb
xlat
pop
imul
lds
cwtl
sub
ficoml
idivl
sub
test
lahf
and
lahf
cli
leave
out
imul
dec
push
arpl
loope
sahf
loop
push
pop
xchg
ss
dec
pop
xchg
scas
inc
in
aam
sub
mov
cld
mov
je
ja
jno
jb
aad
mov
orl
adc
rcrl
pop
sbb
jge
ret
pop
cmp
xor
nop
fistl
cmp
into
dec
stc
lds
adc
pusha
mov
inc
ret
mov
mov
sub
insl
movsl
or
and
and
fiaddl
insb
loop
mov
sbb
pop
mov
test
je
dec
jnp
xor
pop
loopne
xor
sbb
hlt
or
js
fidivl
mov
popf
mov
jns
jecxz
mov
sbb
lret
pop
mov
sarb
cmp
fdivp
int3
sbb
adc
mov
mov
jle
inc
adc
rclb
xor
movzbl
push
lahf
pop
jecxz
pusha
lret
ret
dec
hlt
pop
xchg
bound
lahf
lcall
sub
add
xlat
inc
xchg
std
aam
mov
cmp
lcall
dec
mov
xchg
mov
jecxz
aas
stos
imul
ret
dec
aam
sub
inc
pop
mov
jns
lods
jg
mov
repnz
fistps
mov
mov
xchg
hlt
and
sbb
mov
pop
mov
adc
gs
mov
sub
push
js
inc
jae
fucom
std
sub
push
rcrb
loope
dec
mov
clc
mov
cmpb
scas
shl
inc
xchg
jge
mov
adc
pop
xor
inc
in
lds
icebp
push
fists
fsubrs
pop
sbb
sahf
xchg
leave
test
clc
aad
jp
pop
add
push
add
lcall
lea
mov
push
into
push
iret
andl
mov
cmc
dec
fnstsw
mov
loopne
or
jle
mov
mov
stos
jns
push
xchg
pushf
lock
rol
mov
dec
aaa
fwait
jl
and
and
lods
mull
sub
cmpsl
mov
jmp
shll
clc
jecxz
cmp
push
jo
add
mov
ret
or
cmp
mov
xor
lret
xchg
in
push
in
cmpsl
sub
mov
fistpll
leave
mov
lock
addr16
scas
inc
and
lds
fimuls
pop
subb
leave
js
std
test
add
xchg
push
and
fisttps
bound
hlt
mov
icebp
xchg
nop
sbb
sti
jne
into
pushf
aas
push
movsb
add
push
roll
je
cmpsl
pusha
lret
jl
imul
xor
jl
dec
ljmp
data16
and
sub
cli
mov
jns
adc
xor
sbb
icebp
idivb
xor
and
test
aad
or
xchg
js
outsb
data16
or
lea
push
pusha
sti
mov
lea
repnz
cmp
push
jo
or
int3
sbb
xchg
sti
and
push
pop
xchg
nop
xchg
xor
je
adc
lcall
dec
stc
jae
mov
popf
mov
fsubrp
lcall
inc
inc
movsl
sar
and
xor
mov
mov
jl
sub
ret
mulb
rclb
popa
in
loop
push
stos
sub
daa
call
xchg
mov
cmp
loope
xchg
push
push
popa
xor
pop
fbld
fisttpl
xor
pushf
or
cmc
sbb
cmp
lods
cmp
xor
test
sbb
loope
xor
loope
mov
xchg
mov
cmp
sbb
scas
adc
lds
lock
mov
cli
lahf
mov
std
jns
push
pop
cmp
cld
test
push
or
mov
popa
jns
push
pop
xor
xor
sahf
outsl
mov
xchg
repz
jno
cmp
lods
fs
fmulp
jb
and
in
lods
subb
scas
adc
dec
cld
loopne
dec
dec
cli
add
jo
fldt
loopne
dec
scas
dec
outsl
cli
sub
mov
int3
xchg
dec
sbb
mov
js
aam
mov
fcoml
roll
in
fnsave
add
cmc
dec
pop
ljmp
stc
pop
mov
lods
cwtl
stos
xor
cmpsb
pop
mov
or
pop
adc
cmp
or
xor
fistpl
pop
mov
fsubl
xor
push
jno
sub
in
or
fnstenv
enter
mov
jle
xor
cmpsl
aas
out
xchg
pop
push
std
out
jae
cwtl
mov
hlt
sub
jo
loope
daa
mov
xchg
cmp
jns
paddsb
and
cmpsl
dec
dec
and
sbb
aad
fimuls
arpl
int3
push
sub
lea
xchg
lahf
in
in
or
xor
cmp
out
call
arpl
xor
pusha
push
ja
sub
rcll
cltd
movsl
in
es
test
sub
jmp
bound
sbb
and
mov
mov
sbb
mov
test
stos
jnp
mov
lret
sahf
mov
leave
cwtl
mov
adc
addb
not
xchg
rorb
sbb
xchg
cwtl
test
pop
repz
and
push
cmp
rcrl
and
xor
popf
pop
inc
mov
mov
or
inc
mov
xchg
pop
sub
adc
adc
cli
mov
xchg
mov
test
mov
push
and
inc
inc
out
lret
and
lret
xor
cs
popf
and
dec
stos
outsb
xchg
mov
popf
mov
mov
mov
pop
push
push
or
es
fsts
loop
sub
lods
push
outsb
leave
cld
adc
sub
pop
inc
pop
mov
es
clts
inc
and
push
stos
dec
mov
roll
push
out
sub
pushf
scas
idivb
sarb
push
and
repnz
sub
mov
push
test
divb
cmp
jae
mov
pop
clc
ds
scas
inc
push
xlat
mov
xchg
cld
das
lock
lods
lods
xor
enter
hlt
jnp
add
inc
arpl
mov
and
orl
ja
mov
clc
cmpsl
push
inc
and
mov
repz
push
mov
dec
shlb
lods
ss
sub
divb
mov
pop
rcrl
cmc
lods
mov
ljmp
mov
inc
lock
mov
xor
rcl
xchg
ds
sarb
aas
cmp
dec
stos
cmpsl
cmp
xor
fs
mov
cmp
jmp
fbld
sbb
jae
scas
push
inc
loope
daa
dec
mov
enter
jp
dec
push
stos
add
push
jae
push
gs
hlt
mov
js
sub
aad
jno
dec
ja
cmpsl
push
mov
xchg
xor
repz
dec
mov
iret
push
dec
inc
xchg
xor
loopne
cmp
cwtl
fnstenv
xor
add
add
mov
cmpsb
pop
ret
dec
sub
outsb
pushf
mov
inc
pop
sbb
mov
sub
gs
add
and
icebp
inc
aas
xchg
sub
repz
in
out
shll
lock
test
mov
jge
sti
pop
cld
inc
xor
in
hlt
fs
mov
ss
jle
or
sbb
push
xchg
insb
inc
jecxz
mov
dec
dec
jle
into
mov
jp
aad
fwait
jne
jecxz
push
pusha
out
add
and
cmpsl
sbb
jns
mov
jecxz
sbb
or
call
std
sub
out
insb
das
sub
xor
push
shrb
imul
mov
arpl
rcrl
in
inc
sbb
push
pop
or
cld
js
inc
dec
mov
aad
cmp
ds
sbb
rolb
data16
arpl
ljmp
adc
xor
or
lret
daa
push
push
dec
aam
jle
loopne
adc
xchg
jl
mull
data16
xchg
mov
push
xchg
mov
shl
nop
mov
sti
and
push
xchg
mov
add
stc
cmp
jmp
adc
jae
adc
lea
sbb
into
dec
xlat
xor
jge
adc
sti
dec
dec
xchg
mov
xchg
cmpsb
ret
cmpsb
mov
testl
adc
insb
ret
jb
jg
int
xor
push
stos
loopne
xor
push
and
cmp
pop
std
jbe
mul
jo
mov
xor
mov
cmpsl
jnp
or
jne
gs
cmpsb
in
push
push
and
fwait
cmp
cmpsl
std
in
mov
or
inc
dec
pop
sub
jbe
jmp
aam
cmc
mov
shr
xlat
pop
jmp
pop
push
inc
mov
xchg
sub
dec
inc
sbb
push
push
ret
shrl
cmpsb
cltd
xchg
xchg
addr16
sub
sbb
adc
cmp
clc
dec
mov
lods
pop
lods
pusha
cmp
and
shl
lods
add
gs
xor
mov
sbb
dec
push
push
aaa
sbb
pop
push
add
pop
mov
pop
pop
xor
and
push
jmp
repz
mov
sbb
cld
shr
pop
add
push
push
jbe
jecxz
and
push
mov
xchg
test
aam
cmp
dec
rcr
dec
dec
mov
je
int3
pop
cmpb
mov
jnp
xchg
add
push
lret
pop
out
push
ret
pop
out
lahf
aaa
inc
das
cwtl
dec
aaa
aas
lock
push
into
sbb
clc
jnp
pusha
mov
jae
data16
mov
cltd
adc
cltd
xchg
xchg
and
add
ljmp
bound
jge
lcall
adc
and
sub
and
mov
lock
repz
mov
loopne
sbb
jecxz
mov
cwtl
fldcw
mov
je
pop
mov
adc
adc
jecxz
js
mov
ret
and
out
imull
dec
mov
test
pushf
sbb
xchg
dec
add
insl
cs
cmpsl
fwait
cli
aaa
mov
xchg
xor
xor
popa
push
mov
movsb
mov
fdivrs
sahf
in
mov
daa
idivl
add
sub
repnz
shrb
addr16
out
push
xlat
mov
ficomps
repz
jnp
leave
int3
add
arpl
pop
fsts
adc
fxch
ficoms
jae
adc
pop
push
outsl
add
fmuls
nop
mov
sbb
rcl
leave
jno
adc
inc
imull
and
fmull
push
add
test
push
icebp
or
outsb
lret
jecxz
pusha
sub
clc
mov
shrb
repz
jb
xchg
shll
in
mov
fcoml
data16
sti
iret
dec
insb
sarb
dec
les
int3
imul
ret
dec
adc
aas
pop
popf
in
inc
or
cmpb
push
aas
cmp
lahf
dec
stos
les
sub
popa
dec
lcall
inc
push
inc
push
aad
inc
pop
lods
add
xor
mov
add
jge
les
nop
test
scas
jae
inc
push
pop
adcl
loop
sbb
loope
jecxz
sub
adc
push
scas
fldl
xchg
sbb
sbb
pop
lds
mov
jo
xor
sbb
sti
ds
jae
jg
inc
xor
call
pop
cmpsl
lret
mov
fidivrl
repnz
xchg
imulb
adc
jne
mov
imul
jg
pusha
pop
pop
push
xor
sub
insl
shlb
or
inc
jnp
xor
in
jnp
mov
or
sbb
je
daa
fsubs
jle
adc
stc
loop
push
inc
and
idivb
mov
int
pop
das
inc
mov
push
mov
sbb
dec
jnp
xchg
mov
sarb
push
data16
inc
add
mov
addr16
sbb
out
aas
jb
push
out
sbb
inc
lock
mov
fcmovu
test
out
mov
jl
clts
stc
out
ja
cmp
push
fcoml
mov
pop
add
push
pop
shrl
jne
cmpsb
lahf
js
popa
add
lret
das
testb
mov
out
xchg
cmpsb
mulb
std
ficoms
sub
cmp
sti
in
mov
add
adc
sub
movb
push
cmpsb
or
adcb
fs
jo
push
sarl
pop
sbb
jbe
mov
pop
push
or
jbe
pusha
xchg
mov
inc
je
push
mov
mov
add
or
sbb
xor
test
push
int3
jg
mull
loop
mov
sub
decl
pop
test
xor
std
cs
inc
fisttpl
int3
jecxz
push
fcmovu
and
cmp
sbb
iret
jne
mov
pop
cld
iret
popf
pop
pusha
int
sub
cmpsb
fdivs
mov
pushf
shrb
cmp
insl
push
addb
xchg
imul
pop
or
fidivrl
loope
in
sub
fs
mov
mov
mov
jae
shlb
cmp
mov
push
popf
test
jp
or
stos
je
mov
jg
mov
and
xchg
xor
clc
inc
pop
lock
and
xlat
fmul
xchg
pop
or
cwtl
fnstenv
movsl
cs
mov
mov
jnp
push
sub
sti
fldl
jns
add
mov
mov
int3
adc
jns
fimull
xchg
cmpsl
xor
ret
inc
cmc
xchg
repz
mov
mov
mov
popl
cs
ja
stos
js
pusha
test
xchg
or
xchg
jb
xor
stc
fiadds
and
adc
push
outsl
leave
mov
sub
lods
int3
xor
hlt
or
jno
gs
sar
mov
adc
xchg
lcall
xchg
aad
fisubl
inc
jecxz
je
xor
mov
mov
jge
xor
lcall
lcall
xor
insb
loopne
push
shll
insl
inc
sbbb
pop
mov
out
cmp
jmp
push
daa
mov
pop
pop
stos
scas
addl
sbb
aam
aaa
ja
hlt
imul
test
push
mov
sbb
cmp
adc
fimuls
sti
inc
cmp
jno
mov
push
jns
test
mov
mov
and
jp
pop
dec
adc
dec
inc
out
jnp
fcmovnbe
mov
loop
icebp
sub
push
inc
xchg
lds
test
movl
ja
add
adc
outsl
mov
push
jae
hlt
repnz
mov
fsubrp
jecxz
pop
mov
je
xor
pop
rolb
xor
popa
adc
imul
push
pop
mov
mov
sbb
lds
inc
push
movsb
push
sbb
imul
cmpsl
pop
dec
mov
push
lahf
pop
shl
test
lcall
outsb
repnz
cmp
push
dec
sahf
mov
sti
jb
and
lahf
or
sub
jo
inc
jl
lods
fbld
shl
xchg
hlt
dec
shrb
dec
aam
jb
sbb
push
pop
repz
jp
stc
outsl
repnz
jecxz
add
mov
lsl
sbb
mov
repnz
insl
dec
or
adc
loopne
sahf
adc
arpl
fsubrl
or
or
retw
jg
loop
cmp
push
mov
enter
xchg
mov
fcoms
or
movsl
jmp
sarl
mov
outsb
and
gs
js
lods
cmpsl
imul
xchg
gs
mov
repz
js
jp
rorl
cli
add
pop
lcall
cmp
dec
lods
fisttpl
arpl
sbb
mov
addl
fsubs
pop
xor
in
test
jp
icebp
mov
js
xor
or
pop
imulb
mov
movsl
cmp
pop
aas
inc
je
in
test
and
negl
aam
or
std
loop
stc
jmp
xor
pusha
or
sbb
or
push
dec
pop
ja
ljmp
dec
dec
cwtl
stos
es
iret
imul
mov
ret
cmp
repnz
scas
sub
imul
fists
int
xchg
adc
ret
rorb
inc
ja
es
adc
sub
sbb
enter
xchg
mov
in
dec
push
dec
inc
shl
ljmp
fs
jo
jo
cld
pop
sub
outsl
out
mov
loop
xchg
pop
sarb
mov
shll
cld
sub
cmpsl
ds
gs
lods
sub
sbb
adc
fisttps
push
xor
or
je
inc
xchg
movl
jne
icebp
je
fwait
aas
js
cmp
data16
push
out
mov
sar
lcall
mov
rcr
lea
mov
xorb
in
sbb
loopne
xor
cs
stos
push
aad
mov
add
inc
out
fcoml
ficomps
xchg
ss
dec
push
jne
xor
test
arpl
or
cmovb
fs
mov
mov
sub
push
sub
and
xchg
repz
or
cltd
ss
xchg
mov
inc
cltd
jmp
jle
lret
inc
pop
outsb
cmp
movsb
fs
out
cmpb
inc
out
aas
mov
out
fsubp
mov
lret
test
mov
cmp
and
jns
aam
xchg
cmp
in
ret
cmp
jnp
pop
jge
idiv
sub
mov
cmp
ja
or
enter
dec
push
cmp
cmp
mov
in
movsl
and
rorb
aas
and
fistpll
iret
pop
test
imul
and
jbe
pop
lods
rclb
lcall
xlat
loopne
or
ret
bound
ljmp
ljmp
stc
dec
out
ss
sub
test
in
pop
insl
xlat
dec
add
xor
or
cld
orps
divb
mov
pop
xor
repnz
or
fldl
repnz
and
scas
mov
loop
leave
and
in
iret
lea
mov
mov
rorl
fistpl
add
push
xchg
imul
xchg
jge
shlb
in
pop
and
mov
xor
push
jecxz
cmp
mov
lods
pusha
in
stos
cmp
popf
cmp
dec
fisttpll
enter
idivl
aad
loope
sti
add
cmp
add
addr16
xor
loope
lret
mov
stos
loopne
xor
adc
cmp
out
cmp
fwait
addb
enter
jle
ret
outsl
mov
or
lds
imul
inc
cmc
lret
inc
sti
stos
adc
outsb
cmp
filds
in
std
repz
sbb
dec
pop
testl
xor
sub
jecxz
clc
inc
pusha
push
imul
loopne
cli
sbb
pop
and
and
nop
xchg
push
mov
inc
mov
push
loope
and
lods
ja
adc
cmp
cmpb
lea
jge
hlt
pop
repnz
fcmovbe
mov
in
fs
leave
inc
jns
dec
stos
test
into
pop
arpl
out
cmpl
xor
mov
out
roll
xchg
data16
insl
pushf
mov
lcall
bnd
and
loopne
push
test
sarl
dec
jae
mov
loope
stos
or
jno
adc
enter
imul
jmp
xchg
xchg
xor
push
xchg
mov
xchg
data16
fwait
inc
dec
sub
mov
addr16
sub
inc
pop
lret
xchg
fnstsw
test
push
dec
cmp
inc
pop
jae
out
je
jns
mov
stc
mov
or
pop
pop
xor
cmpsl
outsb
unpckhps
mov
shlb
xlat
addr16
push
lret
loopne
fistps
in
sub
test
movl
ss
lds
pop
stos
scas
dec
mov
jmp
jne
xchg
ljmp
bound
pushf
mov
and
push
repnz
stos
add
mov
cmp
stc
jecxz
jp
cmpsl
and
rorb
add
addr16
lds
sbb
adc
test
xchg
and
cld
xchg
movsl
jne
lods
mov
andb
pop
and
lods
push
or
imul
js
addr16
jp
das
pop
adc
lock
inc
mov
push
addb
int
andl
push
push
dec
mov
lret
jecxz
ja
sub
dec
mov
dec
das
or
add
pop
subl
sbb
outsl
insb
call
and
test
cmp
xchg
pop
adcl
inc
pop
addl
fcoms
sub
push
outsl
push
pushf
or
jno
cmpsl
les
test
in
cmp
incb
inc
stos
jno
adcl
idivb
je
cltd
pop
clc
sub
add
into
push
mov
les
jmp
out
jle
ret
inc
fdivrs
repz
lods
mov
ds
je
sub
cltd
test
cmp
mov
dec
add
jp
xor
dec
mov
lea
int
add
rcl
mov
adc
sub
xchg
outsb
push
movsl
stos
mov
adc
jns
repnz
lods
push
jae
dec
std
mov
or
iret
shrb
cli
movsl
pop
pop
ficomps
pop
aam
and
stos
lods
ja
mov
add
fs
sub
dec
out
mov
scas
jg
fidivrl
mov
inc
mov
ds
sbb
dec
fimuls
arpl
into
push
dec
pop
pushf
xchg
xchg
push
loope
cmp
rcrl
cmp
jl
in
and
ss
aaa
insl
sahf
out
jl
push
mov
pop
mov
inc
hlt
jmp
in
stos
aas
mov
arpl
inc
aad
lret
dec
cltd
aaa
loopne
enter
adc
sub
mov
aas
pop
jg
adc
daa
jle
mov
ljmp
repnz
xchg
movsb
push
cs
in
dec
mov
sarl
push
and
xor
cmpsl
mov
sub
dec
cmpb
sub
jg
ret
gs
or
negb
push
dec
mov
cld
dec
mov
push
jb
push
jge
loopne
das
and
imul
lods
inc
pop
mov
sub
movsb
frstor
sub
aaa
xchg
lods
fildll
inc
out
xchg
aam
or
fistpl
xchg
rclb
sub
addb
int
xorl
sti
stos
lret
mov
mov
sbb
and
xchg
mov
xor
cs
ret
int
stos
out
adc
mov
pop
imul
inc
sbb
cs
test
cmp
add
fstps
stc
adc
xor
popa
imul
add
insb
inc
cli
scas
push
popf
mov
inc
cld
mov
xlat
int3
mov
cs
xchg
mov
mov
pop
sti
fldcw
dec
ret
mov
jae
xchg
repnz
popf
cmpsl
lods
mov
pop
enter
dec
xlat
aam
shl
mov
sbb
sub
lods
pop
add
mov
rcrl
mov
pop
jne
mov
push
rcll
dec
jp
push
out
dec
roll
out
cli
mov
mov
xchg
ret
bound
out
repz
stos
arpl
cmp
jp
lds
mov
dec
jne
test
scas
or
push
notl
xchg
in
and
adc
loop
pop
xchg
notb
add
push
push
data16
mov
orl
test
mov
iret
sbb
jnp
jno
adc
or
dec
rorb
xorb
test
loop
xchg
xor
fldt
aam
mov
adc
iret
push
sub
out
jmp
jle
scas
dec
rclb
shr
subl
jbe
cmp
data16
push
testb
in
mov
add
dec
adc
negb
imulb
loop
icebp
cmp
lods
mov
cmp
popf
pop
sub
adc
lcall
insb
scas
mov
xor
loop
nop
jne
mov
inc
sbb
icebp
push
add
jne
cmpsb
push
lds
sub
mov
xchg
xor
jmp
jbe
push
outsl
adc
mov
je
lcall
fbstp
insb
cmp
jne
mov
mov
jecxz
andl
adc
les
add
inc
mov
xchg
inc
dec
cmpb
outsl
jae
mov
fcmove
jge
stc
pop
mov
mov
pop
popf
int
fbstp
pop
xchg
sbb
in
sahf
outsl
jbe
stos
mov
lea
add
icebp
sahf
out
cmpsb
aas
cmp
mov
mov
ret
out
aaa
xlat
sub
lret
fists
mov
sar
inc
pop
pop
pop
xor
add
sub
mov
dec
test
xor
repz
movsb
stos
mov
jecxz
lea
rcrb
jp
cmp
xchg
mov
shll
add
mov
les
pop
or
or
andl
sbb
imul
test
or
adc
xor
fisubrl
int3
mov
pusha
and
cld
add
in
push
pop
cltd
push
dec
cmp
dec
lcall
cmp
dec
arpl
imul
lods
push
cli
push
test
or
int
in
jne
bound
popf
test
int3
cmp
and
bound
jle
pop
mov
inc
mov
sub
fisttpll
xor
cmpsl
jp
dec
mov
aam
filds
cmp
arpl
ja
testl
nop
jg
fistpl
dec
aad
ja
pop
xchg
xor
xor
add
mov
cmpb
ret
out
loop
int
or
xchg
pop
cmp
mov
xor
lods
sbb
and
sbb
push
shr
or
and
cmp
mov
mov
lods
shlb
and
movsl
xor
xlat
sub
push
stos
popf
cmp
jb
mov
xchg
xchg
cli
xor
xchg
dec
aaa
pop
mov
fdivrs
filds
push
or
sub
stos
enter
insl
icebp
push
ret
fs
js
sbb
xlat
test
fldl
jmp
test
cmc
lret
out
lcall
and
test
mov
inc
or
sbb
inc
cmp
cmp
std
rol
movsl
xchg
enter
movsl
pop
cmc
aam
cmpsb
sti
inc
and
movsb
jb
cmp
jno
out
push
push
mov
mov
div
lcall
xor
pop
cmp
cmp
push
sub
cmp
popf
outsb
mov
into
hlt
xor
cmp
xor
mov
mov
rclb
pop
jo
jnp
jns
cmpsb
xchg
lock
cmp
add
xor
mov
xchg
push
addr16
jne
mov
lods
jb
insl
push
sub
std
xchg
add
ret
rcr
xor
out
daa
cltd
fadds
adc
cltd
andb
enter
jg
pop
out
and
xlat
jno
mov
sar
xchg
arpl
shll
fsts
cltd
sub
sarl
cmp
push
mov
sbb
jg
push
cmpl
mov
ud1
dec
or
imul
enter
jb
repz
inc
repz
jo
mov
sbb
adc
sub
test
jo
lcall
loopne
std
movsl
xchg
cmc
imul
add
xchg
loop
push
shll
jmp
ja
inc
push
inc
mov
jecxz
cmpsb
mov
lahf
leave
add
push
add
cmp
push
cmp
dec
fildll
dec
jmp
clc
xchg
mov
adc
jae
test
pmulhuw
push
inc
shl
mov
mov
ds
or
sbb
inc
incb
add
lea
loop
jle
fcomp
adc
sti
scas
xchg
cli
dec
pop
mov
add
xor
arpl
jae
dec
into
mov
mov
push
jecxz
pusha
popa
push
sub
push
leave
aad
mov
jne
xor
mov
cmp
dec
scas
jno
repnz
push
loopne
sub
aad
fnstenv
inc
sti
push
fs
stos
push
add
scas
mul
push
inc
test
push
fsubr
jno
pop
ljmp
js
pop
push
or
dec
loopne
out
andb
push
adc
cltd
lcall
psrlw
scas
sub
mov
cwtl
shlb
mov
jmp
stos
fstpl
fxch
mov
out
jmp
push
xchg
xlat
adc
xchg
cmp
ljmp
aas
in
xchg
xor
push
addr16
mov
cmpsl
mov
xchg
sbb
mov
je
icebp
pcmpeqw
ret
xchg
jmp
out
nop
inc
cmp
jno
adc
call
out
popa
dec
ret
mov
ljmp
mov
repz
sbb
jl
dec
sub
mov
test
lret
cwtl
insl
push
push
xchg
xchg
sti
data16
dec
push
popf
rcrb
pop
pop
or
ja
nop
inc
in
test
sub
mov
call
xchg
add
cltd
adc
xchg
outsb
xor
mov
mov
cmp
pusha
xchg
repnz
loop
enter
mov
pop
test
fsubs
xchg
add
mov
mov
or
test
sub
cli
lock
push
xchg
adcb
jbe
mov
cmp
out
push
and
sbb
mov
mov
mov
and
rcll
mov
sbb
pop
dec
repz
adc
ret
test
sbb
jo
xor
ror
jl
and
xchg
mov
mov
arpl
pop
pop
ret
aam
push
div
mov
sbb
test
xchg
test
xchg
cmpsl
cwtl
popf
subl
cmp
imul
dec
add
or
push
inc
and
popa
rol
push
out
lcall
adcb
fmull
ud1
xor
jo
out
mov
ja
aas
loope
mov
cmc
pop
adc
inc
jb
stos
pop
loop
cld
fwait
xchg
hlt
lcall
and
inc
rcrb
aaa
divl
andb
or
ret
xor
inc
and
addb
leave
js
push
jnp
jae
xor
pop
fwait
or
orl
hlt
mov
in
ljmp
sbb
ja
lds
pusha
mov
loop
jl
inc
jns
inc
xchg
daa
inc
adc
inc
jae
pop
mov
cmp
mov
mov
out
cs
push
test
sub
dec
inc
out
imulb
fcmovu
rolb
aaa
fdiv
cmp
lcall
ret
jp
js
mov
xchg
or
pop
outsb
adc
bound
add
adc
decl
lock
pop
cmp
ret
std
stos
jae
add
inc
mov
or
sub
pop
sub
sbb
add
cmp
imul
data16
pop
imul
push
dec
mov
subb
call
and
pop
dec
or
mov
mov
xchg
and
cmc
pushf
and
add
mov
inc
jo
cmp
sub
push
test
aad
movsb
or
mov
and
lret
faddp
cmp
out
stc
jmp
push
push
and
fcompl
leave
jne
inc
in
push
jbe
sub
int
push
xor
pop
or
adc
adc
mov
sbb
xchg
add
xchg
lcall
pop
mov
imul
push
mov
adc
repz
pop
push
data16
sub
popf
mov
mov
shlb
xor
pushf
test
jo
sub
mov
dec
aam
hlt
imul
or
adc
call
dec
into
mov
dec
push
mov
adc
mov
pop
mov
push
or
sbb
or
in
jne
mov
fwait
enter
jno
xchg
jne
out
dec
ret
movsb
push
rorl
jo
aas
push
mov
popf
cmp
aam
sbb
mov
lock
adc
jne
lahf
push
aam
aam
mov
leave
pop
fwait
sbb
dec
lods
loope
jns
lret
xor
sub
std
aas
repnz
out
add
inc
sub
jae
cld
imul
sbb
mov
jb
lea
mov
cwtd
ljmp
push
jl
or
adc
out
aad
jl
add
sub
push
dec
shl
ds
jmp
adc
adc
mov
add
imul
pop
xor
inc
jbe
imul
aam
sahf
mov
lods
or
jp
add
push
jns
push
xchg
pop
cmpsb
xorb
aam
add
jecxz
xlat
push
pop
pop
xlat
jbe
xchg
lock
cmp
out
mov
dec
add
add
pop
mov
sbb
ficoml
es
and
adc
mov
inc
insl
fwait
rclb
mov
mull
shll
or
test
pop
adc
mov
jg
loope
or
cld
dec
or
clc
jo
movsb
sub
fmul
inc
cmpsl
mov
adc
pushf
ud0
movsl
scas
push
sbb
and
and
mov
jg
dec
call
lahf
mov
sub
lea
cmp
add
pop
aad
cmp
lcall
cli
jno
add
mov
movsb
cmpsb
sahf
xor
cmpsb
out
rcrb
or
mov
aam
mov
sahf
arpl
aas
inc
xchg
decb
insb
scas
mov
xchg
rorb
push
mov
daa
inc
insl
loopne
and
mov
adc
sub
xor
xchg
data16
and
les
push
xor
or
das
pop
xor
fsts
pop
or
sbb
push
mov
rolb
or
jb
pop
mov
mov
xchg
sbb
mov
call
inc
bound
icebp
subl
fisubrl
xchg
lret
daa
call
stos
sbb
jnp
pushf
adc
stc
lcall
xor
pop
ret
ret
mov
movsl
int
sbb
addr16
outsb
ret
dec
clc
pop
mov
push
inc
pop
sbb
mov
mov
test
sub
xchg
push
repz
mov
xchg
mov
pusha
or
flds
je
aaa
ds
mov
out
enter
in
arpl
mov
push
pop
sarb
dec
ds
lods
inc
lret
cmp
ss
lock
mov
mov
jae
shll
into
lret
leave
sbb
outsb
mov
jle
stc
or
or
add
jnp
mov
and
pop
lea
mov
cmpsl
sbb
dec
ljmp
imul
pop
stos
cmc
sub
out
sbb
xchg
or
sub
sub
loope,pn
adc
and
cmpsb
lahf
mov
ret
orl
testl
sub
icebp
mov
mov
mov
bound
imulb
add
mov
dec
add
mov
mov
popa
sub
mov
bound
jae
sub
xor
pop
adcb
xchg
push
gs
mov
out
and
mov
test
mov
inc
sbb
lods
push
shrb
jbe
repz
pop
adc
xchg
iret
cmp
out
outsb
xchg
adc
movsb
ficomps
enter
shl
ljmp
andb
fs
lret
adc
xor
dec
adc
jns
dec
push
in
movsl
add
mov
jl
loope
aaa
xor
xor
mov
pop
jl
push
sti
mov
mov
pop
mov
mov
repz
xchg
add
rcrl
mov
pop
jle
lcall
inc
sbb
aad
sar
xorl
gs
out
jp
mov
jnp
movsb
test
popa
loope
scas
xchg
mov
in
mov
push
mov
cmp
mov
xchg
mov
push
insb
shll
jmp
push
in
cld
fxch
test
cld
ss
xor
stc
les
add
mov
pop
mov
push
dec
ret
fwait
xor
push
inc
mov
adc
insb
add
mov
es
sub
dec
xor
sbbl
mov
roll
pop
cmp
movsl
mov
lcall
lahf
mov
fs
out
arpl
imul
std
dec
popl
push
cld
addr16
inc
popf
sbb
ja
in
out
popa
and
push
cltd
and
adc
xchg
inc
shl
dec
mov
pop
sbb
and
icebp
pop
not
lret
inc
jns
arpl
push
int
mov
add
clc
add
cmc
imul
stos
cmpl
jl
xchg
jg
push
cmp
icebp
jecxz
shr
std
out
out
test
sbb
nop
stc
adc
arpl
lds
xor
or
test
mov
inc
mov
adc
and
in
adc
dec
xor
mov
sub
and
cltd
lahf
cmp
dec
xor
mov
rorb
push
dec
pushf
cmp
adc
popa
mov
pop
cmp
std
sub
fdivr
xchg
sub
test
jnp
push
push
std
rclb
arpl
xchg
hlt
mov
push
pop
cmpsl
int
out
push
stc
add
loop,pt
cwtl
cmp
fstl
outsb
mov
fcompl
fldcw
xchg
dec
fdivs
jbe
push
dec
mov
inc
adc
jmp
adc
inc
or
in
in
adc
inc
dec
xchg
xor
mov
cmpb
adc
in
cmp
inc
push
icebp
cmp
out
mov
fcmovb
lods
decb
xor
jo
mov
mov
xor
sub
xchg
pop
outsl
ds
inc
mov
ret
cs
clc
jmp
je
scas
test
push
nop
and
insb
and
mov
xchg
std
inc
lds
pushf
cvttps2pi
ja
mov
cmc
sub
fildll
adc
lods
sbb
mov
scas
or
addr16
and
das
and
cmc
pushl
subb
out
fwait
ret
mov
int
in
repnz
or
xor
inc
scas
test
push
sub
xor
push
insb
pop
lret
nop
das
add
hlt
cltd
and
inc
sbb
addr16
jg
gs
pop
loopne
mov
xchg
cli
sar
sub
lods
xchg
hlt
imul
pushf
inc
in
ljmp
call
xor
pop
repnz
int
stos
push
out
push
xchg
mov
rcrl
jp
xchg
outsl
scas
pop
pop
clc
mov
cmpsb
pop
fistpll
pushw
ficoml
pop
sub
sbb
cs
movsl
push
and
mov
sahf
flds
and
inc
ret
xchg
pop
out
cmp
jno
pop
call
adc
arpl
cmp
int
xchg
sub
mov
idivb
adc
fadds
icebp
jbe
stos
sbb
or
clc
xchg
push
test
ja
in
jecxz
cmc
dec
pop
push
jne
es
fwait
sbb
movsl
test
cmc
loopne
aas
lock
stc
es
flds
nop
pusha
mov
pusha
mov
daa
lret
lret
add
xchg
inc
adc
jb
movb
stc
lret
dec
mov
pop
mov
lea
loope
das
test
jmp
push
mov
sbb
and
push
mov
mov
mov
sub
push
adc
insb
js
dec
mov
jns
aas
pop
mov
cld
pop
ds
xor
pop
jne
loope
pop
dec
and
lret
add
add
clc
lahf
sbb
clc
push
sbb
shrb
fmull
int3
pop
cmp
insl
xor
insl
jge
inc
cli
lcall
orb
in
or
dec
sub
adc
popa
push
loop
pusha
idivb
pop
push
xchg
jns
int
in
test
jle
jg
shlb
and
nop
cli
je
mov
dec
lea
test
cld
daa
fdivr
mov
push
add
and
rcl
sbb
adc
dec
inc
aam
das
mov
pushf
add
aas
adcl
sbb
jmp
xor
test
fcomps
sub
je
fnstcw
movsl
ds
cs
fcom
or
jl
or
insb
pushf
mov
stc
pop
xchg
loop
dec
xchg
jmp
sbb
sbb
or
inc
movsb
out
icebp
movsb
gs
outsl
mov
mov
imul
pop
int
mov
xchg
mov
add
mov
dec
mov
xlat
sub
xor
es
jbe
cmpl
mov
xlat
xchg
jmp
fdivp
push
mov
mov
dec
shrb
and
lods
sub
dec
xchg
sbb
push
push
lods
xchg
fistpll
mov
mov
pop
xlat
lock
insb
fimull
enter
jb
sbb
jo
cmpsl
enter
mov
fistpl
cmpl
xchg
popf
call
into
les
mov
sbb
xor
jl
or
mov
shlb
lahf
popf
jge
lahf
test
push
pop
xchg
sbb
mov
pop
and
icebp
jmp
repnz
mov
in
je
xchg
sbb
test
scas
mov
pop
mov
jp
xchg
sbb
js
mov
dec
into
push
dec
xchg
cmp
jnp
cltd
add
std
mov
test
push
outsl
cmp
jmp
negb
out
rolb
mov
cmpsl
or
push
mov
xchg
pop
mov
jne
pop
xchg
adcb
mov
ficoms
add
dec
push
cmpsb
data16
pop
inc
jae
inc
mov
pop
adc
xor
int3
cli
inc
cmc
cli
mov
mov
jge
dec
fsubrl
rcrb
jl
enter
popf
int3
clc
sar
cmp
repnz
or
cmp
and
jb
test
fld
xor
into
ficoml
jae
shll
mov
int3
mov
mov
and
sbb
push
scas
sbb
jp
push
popf
pop
pop
aaa
push
lods
xchg
or
push
scas
lahf
lock
and
enter
jne
fbld
mov
push
mov
cmpsl
lret
mov
push
xor
push
and
ffreep
cli
aas
or
adc
shrl
lea
mov
adc
fnstenv
dec
aam
mov
int3
stos
sbbb
and
cwtl
or
xor
pop
adc
sbbl
add
dec
inc
mov
call
mov
sub
sbbb
cld
mov
jmp
cmp
ja
imul
arpl
adc
in
lock
lahf
bound
mov
imul
pusha
mov
insb
mov
mov
daa
xchg
push
mov
out
insl
mov
leave
fcoml
fcmovne
repz
inc
push
xchg
inc
inc
push
jle
cmp
int3
dec
xchg
sub
std
leave
lahf
clc
adc
scas
and
mov
inc
idiv
pop
test
ret
rclb
xchg
xchg
shl
arpl
adcl
fistpll
xchg
fs
add
dec
fnstcw
test
or
push
scas
xchg
scas
cs
jl
sub
icebp
mov
jae
xorb
loope
add
add
mov
jo
insl
pop
pushf
fisttpll
pop
les
js
in
mov
jecxz
mov
jecxz
pop
xchg
loop
pop
movsb
rcrb
cmp
fwait
cmp
fdivs
int
xchg
movsl
inc
add
std
jmp
mov
mov
jnp
inc
sub
test
pop
jmp
icebp
es
jg
fdivr
out
test
cmpsb
xchg
es
mov
repz
pop
push
cmp
mov
jmp
pop
mov
bound
jns
cmp
mov
or
add
xor
adc
xchg
pop
add
insl
and
rclb
mov
mov
int
cmpsb
call
call
adc
inc
sti
mov
sahf
repz
sti
adc
ret
shll
rcr
movsb
add
fs
sbb
xor
loopne
mov
sub
inc
in
pop
lcall
lret
inc
pop
push
push
cld
mov
outsb
fisubs
out
or
ljmp
mov
fldenv
mov
lock
cmp
es
add
lods
sbb
rcrb
faddl
pop
dec
pinsrw
mov
push
sbb
dec
or
adc
repnz
shl
cwtl
cmpsl
mov
xchg
or
jnp
cmpsb
push
xorb
push
fwait
ja
mov
shrb
mov
jno
cli
inc
dec
cmp
cmp
cmpsb
inc
pushl
or
in
cmp
xchg
cmpsl
mov
mov
jae
mov
mov
cmp
lods
out
cmp
popf
js
ds
xchg
jp
les
pop
dec
push
clc
cmp
push
mov
jecxz
out
enter
mov
adcw
data16
jge
jg
push
pop
xchg
ljmp
or
push
aam
mov
mov
xchg
add
push
dec
daa
sti
cs
stc
mov
out
push
inc
mov
or
dec
inc
inc
cmpsb
test
icebp
ss
test
xchg
push
sti
mov
popa
sarb
cmpsl
jmp
nop
xor
cmp
ljmp
sbb
push
mov
dec
xor
scas
enter
mov
fs
add
adc
mov
xchg
lahf
and
insb
enter
xchg
mov
inc
sahf
push
jae
fmuls
test
pushf
popf
pop
movl
xchg
push
xchg
test
std
adc
pop
sbb
adc
jg
and
mov
and
mov
mov
test
jecxz
pop
hlt
movsb
sbb
scas
xchg
aaa
cwtl
xor
sbb
jbe
lods
and
repnz
pop
incl
mov
dec
or
mov
cwtl
testb
stc
push
push
push
sub
jne
or
shl
insl
in
xchg
jecxz
outsb
loop
rorl
rcrl
nop
addb
aad
push
out
push
pop
lock
and
sarl
mov
out
ja
dec
xor
pop
scas
fildll
cltd
cld
mov
xchg
fcoml
push
mov
jb
fadds
sub
in
jp
clc
cwtl
add
cmpsb
add
pop
xorl
jo
ss
out
mov
inc
mov
jl
mov
xchg
cmpsb
call
subb
adc
popf
pop
lea
mov
mov
in
xchg
pop
xchg
std
scas
sarl
or
fisubl
mov
cmp
loop
jecxz
xchg
cmp
divl
adc
mov
data16
xor
inc
pushf
dec
js
adc
jns
sub
mov
mov
iret
cmpsb
movsl
sub
dec
push
test
popf
inc
inc
std
mov
out
dec
int3
jg
sbb
add
loope
sbb
popa
or
call
jno
xchg
sti
push
dec
push
inc
sub
push
pushl
or
sti
shll
xor
pop
cmp
or
and
mov
repz
arpl
stc
lahf
mov
movsl
rcll
adc
loop
insb
adc
mov
push
add
leave
dec
insb
loopne
rclb
adcl
jl
cmp
aad
movsl
sbb
es
rorl
push
or
int
test
out
sub
mov
sbb
cld
popa
mov
scas
loope
mov
aas
mov
cmp
jb
cvtpi2ps
js
xchg
loopne
dec
jae
xor
rep
add
test
mov
mov
jle
sbb
rcrl
pop
cmpsl
mulb
jb
xchg
cmp
sbb
push
mulb
out
xor
ficomps
push
and
sbb
xor
loopne
pop
test
pop
adc
aad
xchg
jp
or
jne
and
sbb
rcll
mov
add
mov
jnp
cmp
dec
xor
mov
cmc
pop
in
xchg
cmpl
inc
mov
sbbl
jmp
and
cmc
cmp
push
mov
jbe
sub
adc
imul
adcb
push
andb
loope
lds
sti
xchg
adc
push
iret
inc
sub
push
cltd
inc
fwait
movl
insl
jle
dec
rorb
and
mov
adc
test
fimull
popf
mov
xchg
or
cltd
outsb
andb
lods
pop
jne
jno
lret
inc
xchg
gs
or
pop
push
adc
dec
imul
out
sub
popa
jne
inc
lcall
ds
into
sbb
fs
cltd
test
mov
scas
loopne
jmp
pusha
xlat
dec
in
xchg
or
add
mov
fwait
xchg
push
cli
xchg
movsb
xor
mov
out
push
mov
inc
out
imul
jo
mov
in
jb
xor
lock
ja
insl
pop
dec
das
movsl
pop
sahf
fidivs
add
aam
rsm
lret
inc
sub
insl
das
add
jl
adcl
dec
maxpd
xor
or
fst
adc
pop
imul
adc
loope
jmp
cmpb
decl
bound
add
outsl
rcrl
cmpsb
or
shl
pop
pop
cmp
mov
fs
pushf
jl
jo
js
xchg
pop
lret
xor
iret
outsl
rclb
xchg
ljmp
push
mov
add
enter
test
dec
bound
mov
and
mov
scas
ss
in
sbb
sbb
and
push
cmp
dec
push
push
bound
lret
inc
inc
in
mov
mov
fstpl
outsl
sbb
mov
mov
mov
adc
mov
bnd
cmp
int3
pop
scas
les
add
fsubl
aaa
jae
test
mov
js
repz
mov
push
mov
jbe
mov
inc
push
aam
mov
jmp
out
jmp
pop
enter
fmuls
push
fimuls
xchg
mov
mov
aad
aad
jg
dec
lret
adc
push
pop
out
pushf
in
ss
fucomp
xchg
out
mov
inc
js
mov
mov
not
and
adcl
adc
push
mov
sub
mov
fwait
mov
lcall
mov
pop
cwtl
ret
cmc
push
repnz
push
inc
add
pop
pop
mov
imul
xor
jnp
mov
sti
xlat
lret
into
xor
jl
jle
ret
jbe
lods
and
mov
mov
xor
pop
dec
notl
and
adc
jne
in
add
mov
inc
sub
test
sub
ficoms
adc
imul
test
or
sub
stc
xchg
popa
mov
fwait
enter
xor
cltd
xor
push
jl
pushf
cmp
dec
xchg
enter
xchg
ret
jb
or
leave
imul
aas
es
ljmp
adc
pop
mov
cmpsl
push
mov
pop
stos
and
nop
xor
popl
and
les
das
lahf
in
idivl
push
mov
mov
push
xchg
mov
pop
loop
lret
xchg
ds
iret
aaa
pop
xchg
xchg
repnz
cli
cmp
mov
xor
pop
dec
test
inc
xchg
mov
xor
and
loop
xor
shrl
xchg
mov
mov
mov
adc
inc
mov
div
mov
ds
decl
mov
push
pusha
adc
aad
fldl
xchg
stos
inc
dec
push
pusha
test
stos
mov
insl
das
mov
push
sbb
or
insb
fisubl
mov
cmpsb
dec
aad
sub
fsubrs
mov
loop
lret
mov
test
rol
mov
mov
mov
mov
out
jp
mov
fmull
pop
pop
xchg
popf
movsl
sahf
in
mov
repnz
xor
pop
cmovne
shlb
in
adc
push
mov
jp
lea
cmp
push
call
je
testb
jle
mov
lock
lret
pushf
adc
pop
dec
mov
scas
ja
jl
mov
sub
inc
pop
ljmp
bound
fdivrl
jmp
sbb
xchg
xchg
inc
cmc
shr
push
xlat
movsl
sar
or
jmp
sbb
jns
movb
mov
pop
int3
stos
and
popf
xchg
sar
imul
xor
xor
mov
jg
insb
ds
rorl
ficoms
mov
mov
jmp
mov
cmp
ss
mov
push
add
leave
into
jecxz
and
push
mov
push
jp
imul
mov
jae
jle
sahf
xor
in
test
mov
dec
mov
lds
inc
mov
add
mov
daa
push
rorl
jbe
insb
sbbb
mov
loope
push
leave
cmpsl
out
mov
mov
adc
cmpsl
incb
adc
pop
jle
push
int3
stos
out
rorb
sbb
mov
and
and
lods
inc
test
inc
subl
mov
adc
jl
xor
cmpsb
cmp
mov
and
xor
lcall
push
ret
pop
mov
add
and
dec
lock
hlt
outsl
test
call
sahf
push
push
addr16
in
pop
vpmaxuw
shll
leave
push
rcrl
and
sbb
mov
cli
jle
ljmp
mov
mov
sbb
jp
mov
mov
loop
shrb
cs
call
inc
icebp
mov
push
daa
dec
popa
iret
dec
cmp
and
xchg
arpl
jns
test
lcall
ret
out
sbb
icebp
push
dec
in
rcl
or
mov
sub
mov
add
inc
out
sub
jge
push
jb
icebp
cld
inc
ret
fsubl
mov
jle
or
cmp
cltd
cwtl
cltd
loope
popl
scas
pop
inc
lret
mov
gs
jl
cltd
sahf
punpckldq
mull
adc
add
sbb
dec
pop
adcb
leave
sbb
push
pop
dec
fimuls
xchg
push
mov
push
jbe
fisubrs
loop
outsl
scas
push
in
xchg
push
outsl
jmp
inc
out
sub
sbb
cmpsl
ret
xchg
stos
aam
pop
icebp
push
or
mov
jnp
adc
dec
pushf
es
mov
repz
push
xor
dec
push
jbe
mov
js
cltd
cld
jle
pop
add
dec
jge
test
cwtl
movb
adc
stos
outsb
mov
into
mov
in
ljmp
dec
xchg
out
xor
cmp
addr16
mov
aam
in
filds
pop
xor
mov
lret
imul
push
or
mov
jp
lahf
push
pop
xlat
sub
sbb
mov
adc
jge
mov
push
std
or
daa
push
imull
orl
cmp
fwait
mov
push
sbbb
les
cmpsl
push
mov
fisttpll
or
cmp
cli
pop
xor
std
frstor
add
push
mov
xor
stos
jbe
jae
pop
jle
in
aam
fidivl
sub
adc
lahf
sbb
stc
and
cmp
pop
das
outsl
stos
ret
mov
mov
or
adc
jns
cwtl
mov
jb
mov
bound
mov
jne
shll
cli
xor
std
mov
mov
pop
lds
mov
addr16
xchg
insl
mulps
dec
repz
jg
xchg
out
inc
out
js
push
or
push
mov
imul
mov
jno
pop
pop
call
es
push
fsts
dec
je
testb
cmp
rclb
repz
cmpsb
in
aad
dec
and
push
sbb
mov
fldenv
mov
jns
fstpl
in
dec
jae
push
adc
mov
cld
inc
push
insb
shrl
sysret
jp
mov
mov
jp
pushf
mov
nop
outsb
mov
gs
loopne
xor
in
jnp
jmp
and
lahf
mov
pop
jmp
cmp
inc
test
add
leave
mov
mov
mov
pop
sub
cwtl
pop
lea
lds
add
addl
xchg
mov
xchg
repz
add
int
out
insl
test
aam
lds
jmp
addr16
xlat
popa
aam
xor
rorb
lea
sub
scas
ficompl
inc
or
jle
in
mov
adc
pop
jno
pusha
mov
outsl
popf
adc
dec
add
std
jp
stc
negb
xor
add
jecxz
xchg
or
mov
lcall
jp
subb
mov
stc
pop
inc
pop
xor
pop
pop
cmpb
test
pushf
aam
aas
imul
jno
push
xchg
sbb
add
adc
jle
sbb
pop
stc
mov
jo
mov
scas
in
call
jge
or
je
ret
ficoml
sbb
loope
cmp
sub
xchg
loop
loope
out
sbb
xchg
xor
cvtps2pi
nop
inc
inc
ret
jmp
inc
js
dec
xchg
push
jecxz
sbb
xchg
pop
push
andb
mov
jecxz
mov
sub
pop
mov
divb
out
push
pand
push
mov
gs
sarb
lret
xchg
test
mov
dec
pop
or
dec
xchg
jle
sub
fnsave
std
hlt
pop
mov
and
inc
jnp
scas
or
fsubl
mov
cmpb
adc
call
icebp
pop
mov
or
enter
sub
std
add
dec
cmpb
js
jo
mov
mov
js
or
cmp
fdivp
mov
lret
stos
movsl
movsb
push
adc
ds
jmp
mov
outsb
xchg
lods
dec
notb
cmp
fldcw
jae
sub
add
cmp
mov
inc
adc
movsl
jg
ret
dec
push
fucom
mov
nop
adc
adc
fwait
bound
scas
notl
call
es
daa
inc
mov
imul
xor
test
cmpsl
aaa
fildl
das
and
adc
pop
xchg
cwtl
or
ret
sahf
cmp
in
enter
jle
and
push
pop
stos
hlt
mov
into
or
inc
shr
fwait
clc
push
fildl
stos
mov
dec
test
sahf
sbb
daa
jle
dec
sub
mov
push
fstps
dec
cmp
cmp
ja,pt
and
popf
xlat
push
cld
scas
in
push
out
xchg
in
movsl
int3
push
popa
arpl
mov
arpl
in
mov
mov
sbb
jo
and
dec
xor
push
test
frstor
mov
inc
push
lret
mov
xor
mov
adc
jne
mov
sbb
test
insl
mov
lea
push
insl
inc
aas
xlat
xchg
jo
popf
push
sarb
mov
ljmp
xchg
sub
mov
add
rcrl
cmpsl
test
outsb
dec
push
dec
fdivl
enter
mov
das
gs
add
and
nop
cli
dec
pop
arpl
popl
or
and
outsl
mov
mov
adc
vgf2p8mulb
je
fwait
cmc
lahf
jnp
fdecstp
jnp
push
dec
mov
push
orb
cmpsb
sub
cs
insl
sbb
xchg
jb
lcall
lds
inc
jmp
cmp
sbb
xor
pop
cwtl
ds
fbld
inc
adc
inc
push
jle
inc
jg
inc
mov
push
sarb
adc
inc
push
jo
test
xchg
inc
xchg
jge
ret
push
in
call
adc
outsb
rolb
push
xor
push
nop
jge
std
orb
jb
cmp
adc
pop
mov
sub
inc
roll
call
ss
mov
dec
shr
adc
bound
sub
ljmp
adc
aad
cmpb
mov
push
mov
out
dec
add
clc
loope
xchg
ret
clc
xor
out
pop
and
out
jbe
mov
cmp
lods
push
outsl
cmp
push
mov
clc
mov
repnz
add
pop
xchg
xor
aaa
dec
add
inc
enter
cmp
cli
adc
xchg
add
mov
call
pop
call
pop
mov
lods
lret
inc
sti
and
jne
sbb
dec
lods
or
icebp
xor
adc
jbe
jl
xchg
cmpsb
ficomps
rcrl
pop
inc
lcall
jns
and
jp
fmuls
add
dec
cmp
pop
sub
int
jp
addr16
lods
aaa
xor
scas
movsl
cwtl
pop
mov
aam
inc
add
adc
in
jae
push
repnz
js
rclb
out
into
int
mov
or
aam
iret
jl
int3
add
adc
and
jb
sbb
mov
stos
mov
in
push
out
pop
lret
push
sarl
mov
ja
xor
lret
int3
pop
xchg
rcll
add
fmull
jae
sub
add
mov
iret
orl
inc
push
insb
mov
jns
or
ret
cmp
sub
pop
or
mov
pop
movsb
dec
insb
sub
sahf
lock
jmp
cmp
xchg
push
or
xor
pop
stc
out
aaa
imul
mov
xchg
sbb
in
das
push
insl
pop
dec
out
into
mov
sbbl
cs
dec
scas
sub
and
push
jbe
push
pop
dec
sub
and
inc
fdivs
int
andl
push
cmp
jle
jns
push
xor
jp
push
sbb
cmp
xchg
in
mov
mov
jecxz
mov
add
mov
or
jg
xchg
fbstp
arpl
imul
fisttpll
rol
mov
jmp
lea
test
xor
push
adc
leave
aad
pop
inc
cwtl
int3
or
test
mov
out
pop
loope
lods
fwait
cmpb
cli
popf
cmp
mov
mov
lds
adc
push
and
dec
or
pop
jb
std
adc
in
mov
in
ficomps
lds
xor
inc
lret
add
or
push
fisubrl
addr16
roll
dec
inc
test
jmp
add
mov
fs
add
push
adc
push
cmpsl
andl
incb
popa
cmp
mov
adc
cs
dec
shrl
xchg
or
fildll
jge
adc
push
loop
mov
mov
sub
mov
xor
adc
outsl
add
daa
add
fwait
jnp
in
fcoms
push
sub
adc
jge
test
inc
repnz
xor
jmp
sub
push
push
mov
scas
mov
mov
sbb
mov
pop
mov
xor
inc
add
and
pop
jl
sub
mov
cmp
pop
aas
fisttps
sbb
fistl
es
inc
and
aam
dec
aas
xchg
test
adc
out
fwait
hlt
inc
mov
arpl
dec
fs
dec
fdivs
push
shrb
ds
lods
add
movsl
cmp
adc
jmp
jp
sub
repnz
or
mov
push
pop
dec
out
in
cmp
lahf
std
rclb
jg
sub
xchg
andl
jbe
pop
xchg
add
mov
sub
jo
lcall
shll
ljmp
push
movsl
cmp
movsl
int
xor
jg
mov
ljmp
and
aaa
loop
fdivl
cwtl
or
lds
mov
loop
subl
loope
xchg
aad
popf
or
pop
in
fstpl
repnz
lret
fwait
xchg
test
stos
or
pop
les
lahf
js
aas
adc
imul
stos
jmp
rcl
xor
adc
xor
dec
popf
and
cwtl
xor
mov
pop
add
add
jb
and
clc
or
mov
arpl
movsb
lea
lcall
mov
sbb
nop
mov
dec
pop
push
outsl
inc
movsw
adc
sbb
dec
cmp
or
mov
aas
and
pop
and
int
mov
adcb
push
cs
int3
push
xchg
push
push
in
mov
or
push
sbb
lea
loopne
jbe
sbb
cmp
clc
into
gs
or
add
movsl
xchg
fwait
lahf
sub
mov
faddl
xchg
in
push
pop
test
clc
iret
das
jge
fdivrs
mov
je
fadds
int3
mov
out
out
leave
push
cltd
add
xchg
das
mov
jle
lcall
mov
cld
test
test
cmp
sbb
popf
push
inc
jae
dec
pop
cmp
push
fimull
dec
int
aam
pop
mov
pop
xlat
fisubrl
jae
inc
pop
loopne
add
xchg
push
in
mov
push
jle
inc
mov
jg
push
ds
jbe
leave
pusha
ss
in
adc
mov
and
daa
in
or
scas
int
nop
cld
dec
xchg
test
scas
mov
in
cmpsb
imul
add
in
lds
push
test
dec
scas
jnp
imul
sbb
addr16
xor
aaa
mov
mov
aas
cmp
lock
or
das
push
sti
mov
lea
mov
std
mov
xlat
mov
mov
xor
xlat
out
sahf
jae
xchg
jae
push
push
lret
inc
push
push
inc
fs
mov
cmp
mov
insl
inc
ficomps
out
mov
jbe
or
lock
sbb
stos
or
and
loope
fsub
xor
xchg
pop
xchg
nop
jmp
subb
ja
pushf
add
js
and
dec
fisttpl
imul
adc
xchg
out
leave
push
rcrb
bound
in
imul
cmc
xor
mov
ret
lods
pop
pop
mov
xchg
xchg
xchg
sub
jbe
mov
and
cmp
cmp
dec
out
inc
shlb
lea
cmp
ret
push
mov
scas
jbe
sub
mov
imul
dec
xorb
ret
loopne
adc
idivb
ss
lret
out
xlat
pop
xor
fmul
movsb
test
xchg
cmp
pop
outsl
mov
push
and
adc
je
cmpsb
iret
xlat
addr16
popl
in
shrb
out
negb
push
sub
aad
out
sbb
jg
mov
mov
lret
nop
call
cltd
mov
or
adc
xor
cmp
push
mov
cmp
mov
fnstsw
test
sbb
out
repnz
sbb
inc
sub
loope
out
dec
mov
invlpg
sbbl
push
daa
std
and
pop
and
in
lods
mov
je
xlat
lret
fs
cmp
cwtl
sarl
lret
cs
popf
cmp
cs
mov
jnp
push
jg
retw
enter
cmc
loopne
int
add
addb
out
mov
aas
or
jnp
or
adc
fwait
and
xor
test
jecxz
stc
fbld
sbb
xor
jle
out
ror
movsl
lods
cmpb
push
pop
pop
inc
inc
std
test
sbb
add
in
dec
pop
int
nop
xlat
insl
cmp
inc
lock
or
cmc
loopne
dec
popa
pop
inc
xchg
jbe
sub
mov
fsincos
loope
insl
shlb
push
sub
stos
cmp
out
out
mulb
inc
jns
leave
sub
aaa
xchg
cld
dec
lds
ds
fisubrl
test
insl
or
mov
cmpsb
or
push
push
push
mov
dec
sbb
mov
sbb
mov
adc
neg
stos
loope
cwtl
popf
push
fisubl
js
add
jle
rcrl
sbb
fildll
push
imulb
leave
push
pop
mov
dec
lods
pop
xor
jle
movsl
ss
mov
invd
scas
xchg
ss
ds
cmp
arpl
test
aas
add
in
sbb
xchg
or
push
jbe
adc
hlt
in
jne
xor
push
js
inc
clc
test
arpl
cmp
call
ljmp
in
fcmovnbe
test
jle
cmpsl
insb
je
call
xchg
dec
sarb
mov
xor
call
in
outsl
fsubrs
mov
call
sti
jp
xor
out
add
mov
add
and
aad
hlt
bnd
inc
jmp
frstor
test
test
jg
pop
mov
dec
dec
push
mov
ret
jno
test
pop
mov
sub
and
out
ss
inc
mov
in
mov
addl
jbe
insl
int
movsb
js
ret
aad
cmp
xchg
test
dec
and
loop
dec
cwtl
sbb
fiadds
notl
dec
fs
mov
mov
js
lret
jecxz
jge
loop
icebp
out
in
std
int
pop
jb
add
rcll
mov
ss
push
adc
mov
pop
xor
scas
lahf
cmpsb
cmp
aad
lock
sub
sub
stc
sar
xchg
fdiv
pop
into
lcall
leave
sub
daa
cli
int
testl
ss
xchg
jge
cmc
imulb
out
les
inc
add
xor
pop
cmp
out
cli
push
mov
sub
subb
fnstsw
or
js
push
pop
adc
pop
inc
or
ret
mov
scas
jne
and
adc
sub
les
aaa
iret
out
popa
aad
dec
fldcw
sarl
aas
in
mov
add
leave
mov
mov
sbb
enter
sbb
inc
in
in
dec
and
lds
pop
pop
faddp
ret
in
pop
pop
sar
flds
dec
mov
or
xchg
stc
shufps
pop
decl
xor
mov
das
pop
or
push
popa
sbb
aad
inc
pop
inc
cmp
and
pusha
addr16
push
leave
in
push
sub
pop
ljmp
std
fldenv
pop
mov
jne
shl
xchg
pop
adc
jmp
xor
dec
test
scas
scas
aad
inc
jnp
ljmp
lea
popa
cmp
mov
mov
addb
pop
and
lret
dec
dec
sub
bound
movsb
inc
imul
scas
xchg
push
inc
add
jo
dec
pushl
mov
fwait
xchg
adc
lods
cmpsb
push
cmp
nop
sub
mov
sbb
adc
les
add
sbb
into
or
enter
cwtl
pop
ret
mov
push
filds
dec
daa
addr16
sub
jb
or
jns
aad
xchg
mov
inc
inc
mov
or
adc
inc
fdivrp
push
out
lods
movl
mov
add
shl
mov
ljmp
jg
outsb
jb
idivb
pop
mov
xchg
outsl
mov
nop
jae
mov
sbbl
push
adc
rol
stos
sbbb
outsl
cmp
test
ret
and
cli
adc
arpl
push
jmp
mov
mov
lret
or
outsl
dec
cmp
and
push
pop
pop
jle
adc
lea
shrl
or
inc
outsb
mov
out
dec
aaa
ret
movsb
enter
loopne
cmp
aam
jg
mov
or
add
pushf
mov
scas
mov
jl
xor
insb
pushf
shrl
jg
xor
cmpsl
add
xchg
movb
inc
push
xchg
cmc
clc
ret
aad
sbb
add
loop
xor
mov
in
sbb
decb
dec
jno
call
or
push
test
lds
fcoms
push
cmp
fistps
sub
insl
int3
cmp
xchg
sahf
out
rol
push
scas
test
and
in
adc
mov
push
fwait
shrl
repz
push
push
aas
fwait
out
pop
and
mov
lret
and
cmpsb
ds
fiaddl
pushf
mov
fistl
fstl
enter
xor
jbe
push
icebp
push
into
aad
cmpsb
lods
sbb
pop
daa
sarl
subl
mov
push
pushf
xor
addb
mov
push
push
add
call
imul
xchg
push
into
mov
loop
and
data16
and
sti
jecxz
add
je
add
jmp
sti
xor
push
aam
sub
push
insb
add
mov
inc
in
adc
out
sub
adc
adc
das
sub
out
adc
sub
mov
loop
adc
jle
xchg
push
jge
adc
cmp
cld
rorl
push
imull
xchg
sub
pop
push
jb
xorb
dec
movsbl
add
pushf
inc
push
push
ljmp
jns
xchg
adc
insl
clc
ja
mov
popa
mov
mov
sub
mov
inc
push
mov
mov
xor
push
pop
pushf
sarb
test
inc
push
test
mov
push
hlt
mov
pop
mov
repnz
pop
ret
or
push
fldenv
aam
push
xchg
push
stc
call
sti
fisttps
cs
mov
aam
movl
dec
mov
sub
mov
sub
fwait
sbb
neg
sti
xlat
das
je
mov
sub
xor
jno
pop
das
pop
fmul
pop
sbb
xor
pushf
aam
jg
cmp
push
push
push
mov
xor
dec
jmp
cmp
and
lods
jns
test
jmp
lds
add
fwait
mov
pop
mov
jp
xchg
pop
test
xor
sbb
jg
jge
or
xor
mov
jne,pn
ds
insb
aam
mov
mov
sti
je
dec
xor
push
xor
xchg
fsub
xchg
in
lahf
sbb
lret
dec
mov
into
enter
inc
leave
movl
popa
out
mov
mov
scas
imul
dec
loop
inc
lret
lds
mov
daa
cvttps2pi
mov
mov
add
into
imul
fcoms
mov
lret
popf
push
pop
pop
and
dec
mov
int3
xchg
fsts
xchg
mov
xchg
insl
call
mov
mov
test
push
rolb
adc
cmp
sbb
xchg
xlat
cmp
rolb
fs
push
enter
sbb
pop
idiv
sahf
dec
hlt
neg
adc
divl
push
mov
jmp
push
pop
or
add
push
push
sub
add
loop
ret
or
daa
rcrl
push
jl
dec
xchg
out
orl
mov
test
in
loope
adc
and
jns
pop
dec
inc
xor
mov
and
in
outsb
imul
xchg
cmp
pop
lcall
mov
sbb
inc
outsb
mov
mov
test
jl
xor
cltd
add
sub
add
mov
stos
lock
and
adc
xchg
add
and
jo
out
push
and
push
shl
popa
in
fisubs
cmc
je
pop
xor
or
pop
add
sub
mov
push
or
jp
test
cmc
aam
fnstenv
push
sbb
xchg
add
mov
adc
fwait
jg
add
or
pop
and
xor
out
shrb
xchg
push
jno
dec
dec
mov
mov
bound
push
add
fwait
push
call
jg
mov
scas
push
jae
adc
bound
subb
lods
out
mov
loopne
fdivrp
in
add
cmp
pop
dec
sbb
outsb
push
call
sbb
pusha
ficoml
imul
test
xchg
dec
and
or
push
mov
das
cli
mov
pop
in
out
jmp
ljmp
cmp
push
test
fisubl
push
daa
xor
int3
or
xor
leave
jne
shrb
cmp
cmp
clc
xchg
movsb
mov
dec
cltd
cmp
inc
inc
adcl
les
popa
inc
es
jb
push
sub
test
lock
push
aad
insl
and
inc
loop
inc
mov
jbe
sti
je
or
mov
inc
and
ljmp
pushl
clc
enter
les
add
and
cmp
ret
and
lods
jb
xchg
aas
pop
xor
cmp
push
mov
gs
in
lds
in
add
or
out
jg
je
add
mov
push
std
mov
sbb
jb
mov
add
push
popf
lods
ret
fnstcw
cmp
or
js
push
push
insb
push
adc
xlat
mov
cmpsb
sub
cmc
xor
inc
add
mov
sbb
xlat
frstor
and
rolb
dec
pushf
jne
jne
inc
mov
xchg
cmpsb
into
dec
leave
cmp
fcmovbe
pop
jbe
fdivrs
shll
popf
mov
rcrb
jb
add
cmp
push
sub
jnp
stc
int
inc
add
pushl
xchg
and
test
pop
rcrb
fdivl
mov
fistpll
add
pop
mov
popa
jns
and
nop
cmp
aaa
pushf
dec
addb
lret
add
scas
loope
xor
push
xchg
pop
xchg
sahf
pusha
rcr
pop
inc
dec
insb
xor
cs
cs
repz
push
or
clc
sbb
pop
std
push
dec
in
xchg
aaa
fnstsw
ds
sbb
loop
out
pop
aam
jl
sub
dec
and
orl
out
xor
in
or
push
lods
mov
inc
jge
or
movsb
sbb
cmpsb
xlat
lods
cmp
sti
jmp
arpl
pop
xchg
cmpsl
pop
jno
movntq
jb
mov
inc
int
or
out
jp
push
out
sti
outsb
add
xor
cltd
add
lea
adc
sbb
fwait
scas
shl
fstl
in
cmpsb
pop
bound
pop
jmp
movsb
ret
jne
and
sub
lahf
int
out
into
ficoml
rclb
xor
out
bnd
jg,pn
into
ficoms
in
fwait
push
aaa
lcall
in
shr
jg
jbe
cmp
jo
sti
xchg
fwait
ja
jns
out
mov
xor
pushf
stos
adcb
jnp
cmpsl
push
pop
in
incl
mov
and
mov
ljmp
test
inc
test
pop
sub
shlb
fiaddl
pop
cmp
mov
xor
out
sub
outsl
add
lret
xorb
dec
leave
and
repz
push
push
xchg
or
neg
mov
shl
or
in
mov
shll
jge
dec
and
push
adc
and
cld
add
ja
daa
adc
test
xor
inc
inc
lods
clc
mov
call
out
aaa
loopne
shr
sub
jecxz
std
iret
dec
add
mov
cmpsl
cmp
pop
out
mov
and
sbb
jb
xor
nopl
mov
aam
or
mov
dec
out
or
xchg
or
mov
sti
sub
shlb
nop
cmp
sarb
sbb
add
fistpll
mov
sub
in
pop
mov
ja
das
loope
xchg
sarl
lock
fnstsw
ja
pop
mov
rorl
jmp
push
mov
nop
lret
mov
xchg
inc
jp
mov
sbb
add
push
push
jns
mov
push
jle
or
out
push
xor
cmp
push
js
adc
cld
cmpsb
pop
ljmp
sbb
stos
pushf
rcrl
mov
jmp
scas
jae
ds
in
data16
ret
mov
mov
andb
pop
iret
jge
jmp
daa
add
mov
daa
sbb
andb
cmp
pop
add
add
sbb
add
sub
sahf
mov
or
jae
sub
in
lds
push
fidivl
sbb
xchg
pusha
xor
cmpb
divb
push
repnz
sbb
sbb
pushl
bound
jl
adc
mov
sub
dec
or
stos
sub
imul
call
sbb
cmp
push
mov
fisubrl
inc
xchg
icebp
xchg
hlt
insb
outsl
adc
popa
scas
loope
sub
repz
mov
arpl
mov
stos
fisttpl
or
or
dec
mov
out
dec
mov
aad
sbbb
ja
stos
leave
xor
inc
faddl
scas
jg
pop
sbb
or
xchg
cwtl
stc
outsl
fucomip
das
cmp
adc
fs
mov
in
cmpsb
cltd
jbe
call
cwtl
push
lds
jp
or
cmp
xchg
cmp
pushf
add
stos
inc
push
sub
adc
dec
add
push
lret
repnz
lret
loop
pushf
push
or
sub
pop
addb
sub
sti
test
dec
adc
xchg
mov
aaa
push
xor
mov
mov
add
mov
incb
addr16
in
sub
sbb
das
call
mov
cmp
dec
xor
cmp
cwtl
push
and
jmp
dec
add
lods
jmp
inc
xchg
jge
jne
aad
add
hlt
iret
addr16
mov
xchg
movsl
mov
xchg
xchg
call
push
mov
arpl
lret
cmc
mov
sub
mov
orb
adc
xor
imul
push
ljmp
fdivrl
xchg
cmp
stc
mov
cmpsb
lea
aaa
sbb
sub
lods
dec
incl
leave
insb
jmp
jne
bound
scas
or
jge
and
push
mov
sarb
mov
cli
fidivrs
xchg
je
cmc
bound
dec
movsb
dec
xchg
adc
xchg
aam
pop
pop
xchg
cli
jecxz
xchg
or
cld
jae
dec
push
pop
pushf
stos
sar
sbb
std
lahf
pop
pop
js
pop
scas
inc
fwait
and
dec
sub
xor
fs
mov
mov
fmull
push
imul
lret
mov
insb
cmp
data16
lea
fwait
pop
sub
daa
das
cmp
jp
call
dec
popf
jbe
shrl
push
mov
addr16
xlat
push
mov
in
mov
push
lock
jb
sub
push
jnp
jg
or
add
int
mov
add
sbb
lret
adc
adc
loop
cmc
aad
out
inc
pop
cmp
adc
aas
jne
mov
and
inc
mov
lods
mov
add
dec
mov
or
mov
test
movsl
and
inc
fildll
in
inc
adc
dec
xor
out
push
jge
push
mov
sub
xor
gs
test
sbb
fsts
sbbb
mov
clc
in
push
xor
addr16
shlb
jo
inc
xchg
cmp
fstps
movsl
ja
adc
pop
inc
ja
mov
imul
nop
xchg
data16
test
adc
inc
jge
mov
daa
mov
mov
loop
sub
movb
sbb
xor
pop
dec
gs
imul
mov
pop
enter
incb
adc
rcll
subl
les
xor
xchg
mov
enter
xchg
in
push
dec
lock
dec
cmpsl
dec
enter
sahf
enter
xlat
xchg
clc
xor
cwtl
aaa
lods
pop
hlt
push
xlat
enter
or
aam
test
and
pop
shrl
cmc
dec
cmc
pop
mov
loope
loop
jp
cwtl
cmp
scas
jnp
ficompl
fldenvs
mov
test
repz
push
add
sbb
inc
imul
sub
into
jo
lock
sub
push
jnp
add
lcall
mov
lret
adc
mov
mov
mov
out
int
mov
dec
and
mov
fldcw
rorl
pushf
or
dec
sub
hlt
mov
shrb
jnp
ds
mov
jecxz
mov
dec
pop
xlat
fwait
xchg
push
lds
cmp
xchg
mov
out
add
in
std
imul
stc
dec
enter
pop
sbb
test
in
fnstsw
pop
fwait
mov
pop
add
or
pop
xchg
mov
mov
xor
push
jbe
dec
jecxz
mov
es
pop
decb
jl
in
loope
pop
leave
sub
je
cmp
add
roll
inc
xor
jb
jns
pop
test
mov
xor
add
sub
cmp
jb
imul
push
repz
fstps
mov
fbstp
xchg
xchg
jge
sub
scas
push
rclb
lret
lret
inc
fs
test
shlb
sbb
mull
mov
lahf
je
in
jb
ret
sub
sbb
pop
xchg
stos
and
push
dec
pop
add
sub
in
xlat
dec
fsubr
mov
clc
xlat
cltd
outsb
cmp
movsb
sarl
test
popf
fimuls
or
sbbb
popa
inc
pop
ljmp
rorb
lcall
or
rorb
cmp
add
test
add
pop
pusha
dec
daa
scas
push
neg
or
sub
sbb
lret
push
add
ja
and
and
fwait
sub
xor
lret
inc
xlat
sarl
mov
daa
mov
pop
movsl
xlat
aam
sub
pop
int3
mov
dec
or
ss
mov
mov
dec
jp
push
enter
hlt
jmp
popf
into
or
loop
pop
int3
mov
pusha
je
in
mov
mov
test
push
jmp
or
sbb
mov
dec
add
jle
xchg
add
repz
test
sub
lea
fsubl
cmpsb
sbb
dec
pop
mov
dec
subl
xlat
adc
ljmp
lods
dec
enter
iret
jno
add
sub
xor
adc
cli
cmp
xchg
pop
xor
addr16
jmp
out
mov
push
insl
aas
into
imul
pop
pop
inc
pop
adc
out
xor
mov
cmp
push
js
inc
or
int
aas
daa
imul
and
adc
cmp
notl
bound
movsb
stos
sbb
sti
cmpsb
jge
xchg
xchg
sbb
fcmovnbe
mov
adc
test
fidivl
sbb
push
jo
and
into
sub
fbld
cltd
jo
popf
popf
xchg
mov
lds
stc
sarb
xchg
mov
and
sbb
hlt
inc
lds
jae
fs
xor
bound
test
fnstsw
mov
shll
jg
xor
push
scas
mov
push
lds
addr16
jmp
test
sub
lds
mov
cmpsl
sbb
out
rcrb
mov
out
testl
imul
pop
push
mov
shll
pop
cli
daa
dec
jg
add
daa
jmp
scas
push
out
popf
in
push
mov
jo
fwait
outsl
jle
rolb
fidivrs
call
sbb
hlt
sub
push
stos
repz
std
sbb
cmp
aas
lahf
add
xor
aam
icebp
pop
cmp
mov
sub
out
xchg
test
push
cmpsb
sahf
ret
inc
icebp
mov
dec
je
push
jle
insl
add
or
test
leave
mov
ljmp
mov
sbb
sbb
dec
pop
add
and
mov
hlt
leave
mov
pop
mov
xchg
or
roll
or
mov
push
iret
xchg
roll
jb
mov
das
and
jo
ljmp
jae
xchg
imul
xor
dec
clc
jl
adc
dec
testl
jmp
jbe
mov
jb
jno
mov
pop
inc
xor
test
addr16
or
mov
xchg
or
xchg
rorb
add
outsb
movsl
inc
adcb
or
jbe
pop
xchg
movsl
jp
and
mov
mov
stos
xchg
out
inc
mov
insb
jae
icebp
aad
jg
mov
test
pop
jb
dec
sbb
xchg
into
jmpw
enter
or
lahf
imul
xchg
jno
xor
outsb
fcompl
jmp
jle
xchg
dec
adc
cmpsb
int3
data16
sub
push
jb
inc
and
gs
int
xchg
loop
loopne
sbb
xchg
inc
test
inc
call
iret
push
mov
pop
push
sub
mov
mov
movsb
call
das
and
add
mov
cltd
xchg
dec
icebp
stc
ret
test
or
repnz
lahf
fldenv
pop
aaa
sub
pop
inc
xor
inc
sahf
cmpsb
gs
adc
test
es
stc
lods
ja
jmp
and
pop
ror
mov
cmp
mov
stos
add
mov
cwtl
push
xor
push
imul
jns
pop
push
insl
shr
pop
push
in
pop
outsl
nop
jno
das
xchg
mov
cltd
ror
out
cs
das
dec
push
mov
and
sbb
cld
pop
cmp
push
lret
sub
dec
mov
xchg
mov
cltd
xchg
ja
insb
and
pusha
or
and
mov
sub
fs
ljmp
popa
xchg
mov
xchg
add
lock
sbb
pop
int
fsubrs
sbb
pop
outsb
mov
adc
mov
cld
jmp
adc
add
leave
paddusw
mov
add
jo
inc
jae
mov
sub
push
test
inc
cs
fcmovu
into
movsb
xor
test
insb
mov
xor
inc
sub
inc
adc
loope
shrb
pop
mov
sub
and
sbb
xchg
enter
shrl
pop
and
sub
push
jmp
mov
loop
popa
call
leave
or
mov
fnsave
sbb
pop
dec
hlt
es
xchg
mov
sub
push
jle
gs
push
mov
xchg
in
repnz
xor
sub
lock
and
mov
mov
ja
and
sbb
out
clc
pusha
or
ss
ret
sbb
insl
fmuls
sarb
add
lea
mov
xchg
out
sbb
pusha
mov
ja
test
ret
pop
add
add
out
and
in
xchg
cmp
cwtl
add
jbe
sbb
repnz
pop
arpl
cmp
add
adc
pop
or
lock
in
call
test
add
aam
xchg
cmpb
jno
imul
dec
push
cmp
and
push
movsb
scas
mov
push
cmp
inc
adc
jbe
lock
subb
cmp
aam
pop
or
mov
fmul
outsl
jge
xor
push
mov
fnsave
pop
cmp
jbe
xlat
es
inc
das
loopne
addr16
xorl
cmp
cli
stc
mov
ds
add
hlt
rorl
lods
popa
mov
dec
rolb
cltd
sub
xor
push
je
push
mov
mov
cmp
sub
insb
incb
inc
scas
pop
cli
fiaddl
inc
cli
fstpt
out
or
js
mov
mov
sub
daa
mov
xchg
in
int3
cmp
inc
pop
cmpsb
cld
cmpsb
repnz
xor
cli
mov
lcall
pop
xor
int
xchg
outsl
pushf
add
mov
add
xchg
inc
cltd
icebp
mov
jnp
adc
push
subl
inc
mov
out
clc
sub
push
sbb
bound
push
mov
add
pop
sbb
fdivs
cld
pop
std
sarb
aas
inc
and
jecxz
or
pop
cmp
jge
add
cwtl
jl
xor
enter
loopne
mov
ljmp
jns
pop
sub
mov
nop
ret
out
inc
adc
jno
cld
ds
pop
sti
js
out
bound
mov
xchg
xchg
mov
ja
sbb
mov
cmp
adc
cmp
push
jb
aas
cltd
outsl
lahf
or
scas
out
hlt
xorl
in
dec
xchg
les
jo
arpl
cli
mov
xchg
addr16
or
negb
adc
dec
pusha
mov
aaa
xlat
sbb
cmpsb
mov
mov
sti
xchg
mov
dec
mov
ss
jmp
addr16
and
xchg
mov
pop
gs
test
xchg
push
int
xor
jg
dec
push
insl
imul
nop
and
pushf
pop
mov
mov
and
stos
or
adcl
int
hlt
dec
std
movsb
sbb
fmull
fsubr
je,pt
and
xchg
mov
xchg
push
xchg
xchg
inc
lods
pop
pusha
mov
jmp
xor
sti
fstpl
jns
mov
loop
fdivrl
adc
popf
shr
mov
out
in
sub
xor
mov
jge
dec
mov
mov
mov
shlb
xor
mov
les
jo
push
hlt
mov
icebp
fimull
mov
xor
decl
pop
sbbb
punpcklwd
push
imulb
mov
das
outsl
cli
lock
notb
add
dec
data16
adc
les
ret
jp
jno
bound
int3
jg
stos
inc
cmp
insb
movsb
add
rclb
cmc
sbb
add
dec
fistpl
stos
test
mov
ret
ret
mov
mov
loopne
bound
rol
cmpsl
stos
fstpt
movsb
add
cmp
and
popf
ss
addr16
jg
cltd
mov
inc
aam
cmc
lcall
inc
insl
xchg
sub
andl
jno
jnp
es
sub
fidivs
imul
or
mov
mov
sarl
aas
in
mov
aad
rcrl
std
lret
into
loope
ret
cmp
cli
mov
xchg
and
outsb
xor
shrb
out
mov
mov
imul
ror
popa
push
aad
mov
xchg
add
popl
cmp
and
cmp
shlb
pop
or
and
mov
leave
pop
or
or
fdivrl
mov
xor
xchg
lds
scas
les
stc
add
pop
push
add
scas
dec
rorb
mov
nop
rorl
cmc
leave
out
fmull
aam
and
mov
lahf
mov
mov
insl
push
in
lds
jmp
ds
pop
dec
sbb
fcmovu
scas
fists
mov
sub
fmull
out
loop
cs
inc
push
cmp
mov
imul
and
adc
jp
gs
pop
cli
testb
fcoml
aaa
icebp
fnstcw
int3
add
int
mov
fsts
aad
imul
ljmp
sub
mov
sub
jno
mov
pop
jmp
inc
ljmp
push
icebp
sub
jnp
mov
jae
sahf
cs
sbb
callw
lret
ret
insl
push
rcll
jge
lahf
mov
ret
xor
lods
inc
cmp
adc
les
mov
movsb
out
dec
mov
inc
and
negl
cmpb
pop
dec
push
cwtl
xchg
pop
enter
jmp
and
add
sub
adc
dec
in
cs
and
xor
stos
cli
sahf
ds
outsb
pop
test
or
jg
imul
inc
push
add
and
fisubrl
pop
mov
rorb
xor
push
pop
push
in
fidivrl
pop
in
xchg
cli
in
xchg
pop
or
insl
xchg
hlt
hlt
insl
xchg
cltd
inc
or
icebp
bnd
pop
ss
enter
mov
insb
push
pop
jno
jnp
xchg
pop
or
ja
sbb
or
inc
repz
push
imul
aam
in
aaa
or
mov
ljmp
adc
adc
lds
cmp
push
outsl
xlat
mov
sbb
and
jns
les
inc
outsl
or
repnz
addr16
mov
or
inc
dec
inc
xchg
loopne
adcb
iret
dec
hlt
test
mov
cmp
es
lock
push
loopne
fucompp
xlat
dec
adcb
icebp
shr
jl
aas
push
mov
and
xlat
mov
mov
xor
arpl
jle
pop
sub
push
jecxz
mov
or
mov
lods
aam
mov
xchg
subb
ja
mov
push
sub
xchg
shrb
enter
fildl
and
sub
flds
inc
lods
and
and
in
aad
sbb
movsl
xchg
mov
out
jmp
inc
inc
inc
call
add
cmpsb
jge
pop
repnz
dec
adc
mov
imul
or
xor
gs
movsb
xchg
mov
mov
push
mov
xor
ret
adc
decb
je
inc
cs
sbb
pop
and
sbb
push
aam
jl
arpl
loope
add
adc
leave
xchg
mov
mov
xchg
jne
mov
decl
jecxz
repz
movsb
rorl
xchg
and
jne
and
test
shll
pop
xchg
out
mov
mov
leave
enter
jne
in
fsubl
or
ds
xchg
jl
adc
mov
mov
orl
push
pop
cli
addl
fldt
xor
rorb
pop
pop
cmp
jge
cmpsl
or
mov
inc
fstpt
pop
out
leave
js
adc
or
pushf
hlt
sub
inc
jno
leave
insl
cmp
out
addps
outsb
mov
sarb
gs
rol
sub
fdivs
lods
rclb
movsl
or
sub
mov
jnp
and
lea
jle
xchg
dec
sahf
jno
jbe
push
and
cmpsb
jns
inc
adc
jge
cmp
sbb
in
cmp
cmp
dec
movsl
jg
xchg
cld
mov
jl
xchg
lahf
jae
fmull
mulb
sahf
popa
mov
jle
xchg
sub
dec
jl
data16
xlat
sub
lahf
pop
pop
inc
fcompp
push
dec
and
mov
cmp
rorb
pop
ja
int
mov
adc
ja
lock
push
mov
jb
in
scas
add
pop
jo
pop
test
enter
cmp
outsb
ret
add
mulb
movsl
dec
add
adc
sub
out
xchg
fisttpll
stos
leave
ret
jmp
push
or
sbb
sahf
sbb
fmull
pop
push
int3
out
fstpt
or
cmp
pop
dec
mov
pop
les
cltd
daa
pop
pop
lahf
pop
lahf
negl
sbb
fistpl
int3
inc
ds
xor
mov
movsl
push
shlb
jae
and
pop
push
add
js
pop
or
lret
and
fsubrs
xorb
pusha
xchg
repz
pushf
sahf
jmp
or
mov
and
nop
ret
call
add
outsb
and
jo
sbb
in
cmp
flds
je
mov
dec
arpl
pop
call
adc
leave
inc
dec
ss
stos
outsl
rol
mov
jp
ror
xlat
stos
jne,pn
icebp
mov
add
lret
xor
cmpsl
lods
push
xor
js
mov
xchg
push
mov
loop
inc
push
jge
and
jmp
aaa
aas
stos
lret
xor
xchg
inc
iret
decb
ljmp
ss
scas
mov
jnp
in
mov
ja
fsubs
movsl
loope
loope
xchg
and
and
es
in
lret
int
xchg
jecxz
icebp
ja
outsl
scas
decb
add
fsubrl
mov
sarl
pop
xchg
addr16
jmp
in
xchg
dec
and
pushf
movsb
aas
dec
pop
sahf
aas
lods
fisubrs
ret
jle
je
outsb
xor
xchg
cmc
lahf
xor
mov
push
int3
cmpsb
movsb
cmp
hlt
jno
pop
loop
inc
movsb
cmp
sbb
in
mov
add
and
dec
mov
cmp
int
inc
bnd
or
ljmp
inc
or
cmp
in
dec
andl
xor
in
jmp
lcall
sub
std
xchg
mov
jecxz
xlat
dec
call
inc
sahf
das
enter
jecxz
cwtl
sbb
dec
aas
fidivrl
addr16
inc
divl
mov
int
hlt
inc
pop
aaa
pop
sbb
adc
std
sti
pop
add
dec
in
pusha
jnp
je
push
data16
cmp
inc
dec
rorl
les
data16
in
outsl
jbe
push
les
adc
jmp
mov
clc
push
xchg
jecxz
jg,pt
in
and
lock
push
fwait
jge
push
sti
or
std
mov
mov
popf
mov
mov
orl
sarl
cmc
dec
adc
inc
mov
cli
hlt
push
cmp
arpl
xor
dec
add
or
rclb
loop
push
aad
cmp
mov
fisttpll
insb
ror
or
movsb
xchg
rcrl
or
xchg
push
leave
sbb
inc
sbb
nop
jecxz
pop
add
adc
or
jne
mov
jnp
adc
push
sahf
xor
lock
outsb
mul
pop
mov
add
jne
ret
push
addl
imul
or
movsl
lahf
mov
mov
xchg
pop
mov
rcrb
js
mov
mov
push
xor
sub
push
mov
mov
lret
push
sarl
adc
loop
test
pop
inc
leave
and
push
pop
mov
mov
lahf
push
jle
jbe
and
arpl
jg
inc
sbb
push
repz
adcb
enter
jl
cltd
adcb
mov
xor
orb
adc
push
aam
jo
stc
or
ds
test
mov
cmp
nop
cld
in
push
out
dec
shl
mov
mov
jg
movsb
jge
xor
cmpsb
jmp
enter
cmp
pop
adc
ds
jb
je
enter
add
adc
mov
lcall
sbb
addr16
gs
jmp
fnstsw
mov
pusha
and
push
leave
push
pop
bound
sbb
sti
push
std
mov
int3
cs
test
and
inc
jecxz
dec
inc
loope
or
add
ss
es
out
jo
push
jmp
mov
push
shrl
call
sti
daa
pop
adc
inc
xchg
data16
jbe
sbb
mov
cwtl
push
add
inc
fsubp
mov
in
in
test
mov
mov
int3
inc
lea
lahf
xchg
or
cli
imul
cld
push
xor
dec
sti
imul
aas
pop
sbb
pop
sarl
sub
adc
xor
addr16
inc
cmp
mov
hlt
jbe
mov
sti
mov
bound
shrl
sbb
scas
push
xchg
pop
push
inc
fdivrp
cs
cmpsl
enter
push
lahf
rolb
fisttpll
add
cmp
in
mov
dec
das
loop
pop
ja
adc
mov
outsl
out
mov
mov
loopne
arpl
push
dec
imul
mov
or
scas
test
pop
pop
insl
daa
cmp
fisubl
mov
push
imul
jge
aaa
loopne
test
cmp
test
out
pop
cmp
lea
mov
movsb
fs
mov
jmp
push
roll
rolb
adc
jp
pop
daa
shll
arpl
and
pop
jmp
xchg
push
sti
cmp
pop
adc
cmp
aaa
inc
out
dec
fcmovnb
mov
pop
jecxz
sub
pop
mov
lret
push
or
popf
xor
and
mov
ret
shlb
sub
xchg
shrl
xchg
dec
xchg
mov
dec
lods
js
ret
incl
cmp
jno
pop
cmp
mov
out
jmp
insb
ja
push
in
icebp
mov
inc
loopne
stc
jo
push
xchg
or
cmp
fs
add
xchg
sub
jp
pop
or
mov
fidivrl
outsl
ja
dec
inc
mov
push
push
pop
es
dec
scas
or
mov
ficoml
fistpll
xchg
xor
lahf
add
dec
gs
mov
insb
out
leave
rorb
cmp
jle
test
jmp
nop
push
cmpsb
jmp
dec
or
sbb
icebp
dec
cwtl
ljmp
lcall
mov
bound
mov
dec
sbb
test
xorb
lods
rolb
stos
call
jp
stos
or
pop
mov
sub
fwait
push
adc
mov
cwtl
imul
adc
and
clflush
inc
movsb
iret
ds
xor
repnz
gs
shlb
leave
add
xchg
pushf
xchg
out
nop
int3
iret
jecxz
cmp
jbe
es
mov
xor
ss
xchg
sbb
sbb
jmp
mov
pop
push
dec
icebp
mov
jge
pop
push
out
jp
jae
loope
mov
ret
imul
and
subps
lret
push
mov
or
in
push
mov
and
test
lock
mov
sub
das
inc
das
cld
mov
xchg
or
ljmp
mov
into
fs
jg
push
int3
arpl
inc
lret
cld
mov
sub
ds
adc
cltd
inc
sti
outsl
mov
jle
inc
pushf
fistl
fnstenv
out
frstor
js
testl
movsb
loop
std
push
jecxz
lods
or
pop
into
pusha
lret
pop
sbb
cs
jge
xor
jmp
sbb
repz
inc
call
test
fwait
cmpsb
mov
xor
out
inc
rcll
rcrb
out
dec
push
or
push
mov
cs
pop
imull
jo
mov
into
push
cmp
sbb
fwait
leave
mov
inc
inc
rcrb
lock
outsl
fsub
or
pushf
test
mov
into
sub
mov
sarb
aaa
nop
push
imul
jecxz
fistps
jmp
cmpsb
mov
loopne
sbb
sbb
dec
or
mov
stos
aas
and
cmc
xor
pop
fmull
dec
sub
divb
fstp
adc
enter
scas
sarb
push
imul
jb
lods
pop
pop
mov
add
lret
movsl
scas
add
cmp
sub
adc
xor
sbb
retw
dec
xchg
int
pushf
dec
test
xchg
stos
ret
push
jle
shll
and
pop
mov
addr16
jb
and
add
scas
or
imul
pop
pop
int3
pop
mov
push
int
ret
adc
add
rcll
divb
aaa
mov
stos
push
fucompp
fldl
push
push
imul
mov
lock
inc
lret
xor
in
inc
sbb
push
scas
movsl
imul
in
jae
inc
loopne
jecxz
mov
ja
mov
dec
fdivl
push
and
jmp
push
add
jle
imulb
add
push
ljmp
bound
loope
imul
pop
mov
daa
clc
xchg
xchg
push
fwait
or
data16
lahf
add
jl
icebp
sbb
repz
and
aam
ret
ja
xchg
or
mov
and
ret
imul
adc
mov
and
jmp
mov
mov
lock
mov
jmp
cmpb
adc
cmp
mov
stc
fwait
mov
cmc
fimuls
jns
sbb
dec
xor
imul
cmp
imul
mov
xchg
mov
pop
call
cld
mov
lods
in
and
dec
and
mov
cmpl
push
mov
pop
add
outsl
call
add
push
cmp
rcrl
pop
jbe
pop
cmp
scas
xchg
xor
or
ss
push
stc
sub
pop
mov
cwtl
into
jb,pt
addr16
jle
add
test
arpl
mov
int
inc
mov
xchg
mov
mov
jle
stos
lods
adc
addr16
mov
aam
insl
lea
movaps
push
lock
sahf
aam
jo
call
mov
loopne
mov
popf
cld
xchg
jecxz
add
stos
mov
lock
pushf
xchg
gs
repz
sub
daa
shl
sub
lret
sub
mov
push
outsb
hlt
mov
pop
in
mov
mov
xor
inc
test
lcall
mov
rcrb
in
add
or
nop
outsb
test
mov
mov
or
mov
adc
inc
add
inc
dec
pop
sti
sbb
sub
pop
push
testl
sbb
aas
stos
das
fiaddl
lea
dec
cli
clc
cli
sarb
scas
jo
pop
shll
cs
out
ficomps
stos
pop
lds
mov
add
xchg
xor
push
dec
fxam
dec
jg
leave
push
sub
jb
lods
push
frstor
jns
dec
xchg
iret
jns
mov
gs
lahf
rcrl
sub
rolb
cmp
dec
js
mov
cmp
stos
lret
adc
leave
push
sbb
fcmovnbe
and
jbe
adc
std
ja
in
rcrl
sbb
or
xor
cwtl
in
mov
inc
mov
aaa
jg
sbb
and
mov
push
stos
mov
jae
or
inc
pop
xchg
lods
inc
dec
sbb
dec
scas
pop
test
pop
and
mov
loope
xor
out
rcl
mov
mov
xor
or
add
loope
test
pop
cwtl
pop
push
push
add
cmpsb
cmp
iret
pushf
adc
out
addb
xor
cmc
in
imul
lret
popl
pop
jl
jns
popf
aam
push
ret
lret
and
loopne
cmp
xchg
cmp
call
sbb
xchg
jb
int3
dec
lods
lock
ljmp
cmp
imul
sub
fs
test
sub
pop
mulb
xchg
shufps
gs
push
cmp
xchg
and
test
sub
add
jl
in
xchg
adc
xchg
dec
mov
xor
mov
mov
or
ss
shrl
mov
xchg
popf
out
pop
fldenv
adc
repz
fdivrl
and
in
lds
fldenv
shlb
enter
mov
es
pushf
mov
mov
sarb
or
push
cwtl
lods
fidivrl
xor
loope
xor
pop
xchg
jo
adc
scas
cwtl
push
out
lods
mov
mov
push
test
pop
inc
insl
push
sbb
orl
decl
out
insl
lcall
fildll
ljmp
fs
icebp
mov
sub
sub
orl
pop
les
shrb
hlt
mov
sbb
cltd
jo
outsb
mov
dec
jnp
xor
frstor
jg
dec
jle
rorl
and
ja
sbb
mov
iret
loop
fistl
clts
mov
add
das
mov
enter
movsb
out
ret
mov
sub
or
lock
test
sbb
or
orb
and
scas
sti
push
jae
fwait
jo
imul
adc
or
cwtl
cld
std
je
mov
push
int3
add
leave
jge
add
test
nop
or
jae
xchg
into
sbb
daa
jecxz
inc
mov
into
loope
bound
repnz
stos
mov
imul
sub
cld
push
dec
aaa
pop
pop
stc
imul
shrb
ljmp
cmp
push
inc
xchg
stos
les
jnp
outsl
in
outsb
dec
daa
inc
fsubl
jge
jbe
jo
or
pusha
bnd
call
inc
jp
movsb
test
lret
xchg
or
es
pop
mov
fmuls
ret
adc
mov
inc
movsb
dec
fmuls
test
flds
scas
lods
rorl
xchg
add
dec
aaa
jbe
pop
push
rclb
fldenv
jbe
repz
test
xor
shlb
ret
mov
cs
mov
sbb
adc
mov
jo
jbe
dec
rclb
pop
divb
dec
in
andb
cmp
outsl
aad
scas
or
add
sub
fstl
mov
jmp
clc
shll
inc
movsl
push
lock
adc
dec
and
movb
sbb
and
push
enter
mov
rolb
imull
fidivs
enter
mov
mov
out
xor
lret
mov
imul
scas
push
jge
sbb
inc
clc
jp
push
jle
cld
dec
lahf
or
jle
fwait
jmp
cmpsl
push
outsl
xor
cwtl
lcall
gs
lea
dec
out
mov
sbb
pop
nop
subb
or
add
mov
pop
cmp
mov
hlt
xchg
aas
dec
shl
movsb
daa
into
inc
xchg
andl
adc
adc
pop
pop
cwtl
out
xor
sub
and
mov
xchg
push
push
or
xchg
dec
xchg
outsb
testl
sbb
pop
shr
insl
jge
push
rcl
icebp
imul
mov
push
testb
in
inc
loopne
add
push
mov
or
or
xor
adc
dec
lcall
mov
ljmp
dec
arpl
mov
jbe
inc
push
rorb
movsb
jp
ljmp
fwait
xor
lock
xor
js
xor
sub
sbb
iret
pop
mov
clc
lret
fmull
xor
pushf
cmpsb
test
or
xchg
cmp
add
loopne
mov
dec
loopne
cmp
shrl
pop
in
imul
jmp
movsl
ja
sub
add
in
les
stos
xchg
lods
les
jg
pop
call
dec
mulb
sbb
mov
cld
inc
xchg
out
sti
and
jp
adc
pop
mov
ret
inc
or
or
xor
sub
and
mov
cli
jp
mov
cmp
scas
or
arpl
daa
movl
and
test
sbb
mov
mov
popa
mov
mov
sub
test
mov
xchg
mov
sub
mov
push
mov
dec
in
or
pop
std
in
sub
xchg
dec
lock
pop
and
cwtl
mov
or
cltd
pop
std
sbb
test
xorl
and
movsl
mov
adc
lret
inc
or
xchg
dec
sahf
xor
mov
add
and
push
int3
cli
into
ret
and
xchg
mov
sbb
fsubrs
leave
in
out
adc
negb
rolb
addb
push
imul
mov
or
lret
in
mov
arpl
xor
adc
or
aaa
mov
xor
add
popf
in
jae
and
jb
mov
dec
push
cwtl
sti
dec
int3
ds
sub
in
inc
dec
icebp
add
addr16
les
push
or
inc
pushl
outsl
fldl
push
sti
fstenv
ljmp
adc
xchg
or
sbb
imul
ja
or
sbb
into
mov
sbb
fwait
andl
push
cmc
fldcw
and
sub
sbb
pop
test
clc
stos
es
lds
cli
pop
movsl
fnstcw
inc
mov
jbe
jo
repnz
inc
push
lret
imul
or
cmpsl
mov
inc
jmp
test
mov
enter
out
fwait
jg
push
sub
adc
sbb
push
aam
mov
orl
mov
xlat
xchg
xor
mov
ficompl
xor
out
mov
jb
mov
inc
pop
std
pop
scas
repnz
and
fwait
jo
test
lea
pop
cmp
lahf
push
scas
pop
or
dec
arpl
cmp
sbb
test
pop
test
mov
decl
rcrb
lcall
ret
test
mov
int3
xchg
iret
in
mov
pop
rcl
pop
filds
pop
fwait
dec
mov
ljmp
imul
sub
clc
rcll
jo
push
push
mov
test
scas
cmp
insb
int3
cltd
andb
gs
sarl
xor
jb
mov
push
push
es
dec
mov
inc
dec
push
aad
xor
or
cmc
and
xlat
pusha
adc
mov
add
xor
jmp
mov
mov
add
in
fistps
jecxz
jmp
dec
xchg
sub
sbb
outsl
mov
movsb
mov
push
aad
push
sbb
cmp
movsb
and
push
lea
mov
cmc
jns
adc
rol
icebp
jmp
js
hlt
int3
ficoms
lret
xlat
xchg
inc
push
lds
or
add
lods
add
dec
es
repnz
leave
int3
flds
in
jne
mov
movsb
pushf
iret
fadd
imul
fsubrs
mov
insl
es
popf
inc
out
inc
repz
jb
outsb
or
mov
lret
cmpsl
pusha
mov
push
add
aaa
jmp
mov
pop
divb
pop
or
add
cmp
sahf
dec
ds
std
push
mov
xchg
mov
repz
push
pop
cmc
sbb
adc
add
jo
fcmovnu
scas
mov
pop
mov
xchg
fwait
addl
lcall
jmp
addr16
mov
in
jge
mov
sahf
cmpsb
pop
cli
cld
inc
ja
scas
adc
int3
mov
sbb
inc
ror
cs
push
stc
popf
push
push
sahf
adc
outsb
jns
test
sub
mov
mov
in
mov
push
enter
mov
test
fisttps
mov
push
jae
xor
xchg
xchg
mov
push
stos
mov
jns
mov
mov
xchg
jns
cmpsl
adc
scas
out
adcb
push
mov
xor
hlt
dec
aam
repz
bound
pop
and
and
cmc
xchg
lods
cmp
into
dec
xchg
push
mov
push
push
loop
inc
je
xor
mov
jbe
adc
repnz
test
mov
inc
insb
ret
outsl
push
mov
or
in
js
adc
push
dec
popa
addr16
pop
fwait
cld
push
out
xor
call
push
sbb
inc
lods
notb
movsl
lahf
lock
fadds
ret
in
cmp
add
and
jmp
mov
imul
sub
pop
outsl
xor
and
push
mov
and
fists
mov
fimull
dec
xchg
loopne
xor
xchg
stos
fsubr
jge
dec
loop
fimull
mov
push
mov
pop
jmp
ljmp
insl
xchg
sbb
mov
clc
jmp
stos
add
pop
push
push
test
fimull
jnp
pop
enter
js
fwait
pop
int
int
push
xor
sub
scas
lcall
lret
es
mov
and
shl
adc
pop
add
mov
jno
loopne
movsl
jne
pop
push
jecxz
jne
sub
add
or
sbb
test
daa
xor
cmp
pop
adc
and
sti
loopne
pop
sbb
xor
add
insb
and
push
je
aam
test
out
idivb
or
nop
xlat
aas
cmp
sahf
imul
push
jno
int
paddusw
adc
push
enter
inc
rorb
loopne
outsb
fiadds
mov
rcll
mov
cmc
adc
dec
cld
or
mov
pop
imul
aaa
cmp
or
inc
movsb
cmp
sahf
dec
sbb
fwait
dec
jns
mov
outsl
inc
lods
xor
fcoms
mov
shlb
ljmp
popf
push
out
sti
popf
mov
rorl
jecxz
mov
sub
add
pop
and
adcb
mov
mov
in
idivl
sub
sub
inc
daa
popa
sub
test
pop
repz
add
cld
fwait
jecxz
sbb
into
jae
clc
dec
dec
mov
out
insb
xor
stc
xchg
test
aam
mov
sub
imul
fisubrl
mov
jp
pop
fsub
cmpsb
out
out
fs
push
aam
pop
sbb
or
lock
cmp
or
or
push
sbb
gs
sub
or
repz
and
push
imul
mov
mov
cmp
push
jmp
mov
push
outsl
fisubrs
bound
outsl
bound
cmp
xchg
roll
mov
add
mov
testb
pushf
add
out
sbbb
ret
aas
add
shl
outsb
test
dec
lret
lcall
adc
mov
movsl
sbb
fs
test
scas
cs
imul
arpl
pop
addr16
xchg
gs
mov
sbb
add
pop
es
bound
daa
xlat
lcall
sub
dec
mov
pushf
ja,pt
mov
mov
jnp
lcall
sub
xor
xchg
lock
insb
out
movsb
dec
vmwrite
add
jmp
int
dec
cmpsl
mov
scas
mov
xchg
push
loop
adc
xchg
test
mul
test
sahf
dec
mov
data16
arpl
or
jbe
mov
popa
xor
dec
jg
mov
mov
shrb
mov
mov
push
mov
out
test
stos
pushf
jnp
mov
insb
test
add
test
dec
and
add
imul
sub
jge
aas
aaa
lods
sbb
sbb
mov
out
and
xor
push
xor
adc
xchg
leave
jo
pop
cli
or
ljmp
mov
dec
faddp
ret
xchg
lret
adc
mov
mov
popf
fmuls
in
stos
cld
mov
mov
and
add
jp
xchg
imull
mov
and
pop
ja
insl
popf
cmp
fdivrl
push
outsb
or
add
mov
xor
or
ljmp
xchg
sub
out
fwait
lds
jl
adc
fldcw
inc
out
fstpt
jecxz
push
cmpsl
inc
inc
stc
cli
ljmp
mov
test
in
inc
out
jno
mov
mov
ljmp
in
xor
sbb
mov
add
out
imul
xor
pushf
cs
dec
sti
bound
jecxz
inc
aas
fsubr
sti
decl
sbbl
orl
repz
sub
ja
les
xor
or
and
lds
xor
mov
pop
insb
xchg
adc
cmp
ja
notb
cmc
inc
jle
cmp
data16
iret
jge
mov
or
xchg
idiv
std
lea
sub
xlat
mov
jge
cmpb
adc
mov
loop
xchg
cmpsl
cmp
stc
push
fsub
mov
and
sbb
js
dec
mov
or
mov
clc
incl
fdivp
adc
add
mov
cmp
mov
pop
popf
sub
pop
push
roll
add
cmp
sti
dec
mov
push
out
mov
insb
mov
sub
insb
push
fs
sar
mov
adcb
sahf
mov
mov
sub
mov
mov
pop
js
inc
or
mov
popf
outsb
jge
adc
scas
push
xchg
mov
hlt
add
daa
mov
or
outsl
xor
sub
lahf
mov
xor
mov
in
push
clc
cmpsb
jmp
or
inc
or
jg
dec
fnsave
sbb
pop
cs
je
adc
lods
insl
jo
adc
xor
add
sub
fildll
loope
out
mov
inc
adc
inc
cmp
fiadds
mov
lock
shr
movsl
mov
ja
icebp
sub
stos
aas
jp
leave
jp
cmpsl
ss
and
lret
je
jns
adc
add
call
cmc
inc
push
inc
cltd
pushf
jecxz
dec
cmp
lods
sti
add
aam
leave
adc
mov
scas
fimuls
jno
pop
jl
lock
and
cld
mov
mov
popf
sahf
mov
mov
stos
repnz
mov
mov
xor
out
dec
out
les
inc
loop
jns
leave
mov
push
add
fcoml
stc
add
lret
ds
mov
imul
pop
mov
xlat
out
push
mov
repz
xchg
mov
ds
data16
push
xor
or
fldenv
mov
daa
sbb
pop
call
or
or
xor
mov
sub
mov
int3
cwtl
sub
cmp
push
xchg
int
movsb
xorl
xchg
cmp
lret
movsl
ret
fisubl
pusha
leave
mov
call
clc
sbbb
add
scas
inc
mov
clc
push
adc
and
daa
adc
es
sahf
mov
and
or
add
mov
lds
xor
das
cld
dec
add
or
xchg
pusha
cmpsl
out
jns
das
and
xor
enter
or
and
xor
xor
cmp
mov
jecxz
mulb
cmc
xlat
fldenv
out
fwait
rep
lcall
xor
dec
leave
gs
fsubl
inc
and
pop
movsl
inc
adc
addr16
or
es
stos
icebp
call
and
cmpsb
pusha
aas
push
xor
mov
mov
in
push
cltd
mov
daa
xlat
dec
js
sbb
inc
clc
adc
out
mov
jmp
das
push
jmp
adc
pop
lods
mov
je
pop
pop
sbb
jmp
dec
mov
sbb
fwait
or
xchg
mul
mov
arpl
in
pop
add
lcall
clc
sub
sub
test
jnp
dec
test
mull
enter
dec
icebp
xlat
jmp
sbb
cwtl
test
cli
mov
and
mov
sbb
in
xor
popa
mov
push
cli
fcomps
cmp
xor
hlt
scas
jecxz
loopne
jbe
pop
cmp
dec
sbb
pop
mov
mov
cmp
sbb
cmp
mov
pop
leave
add
stc
or
push
sbb
lret
mov
xor
mov
int3
repz
inc
pop
es
sub
jb
cmc
pop
and
loopne
or
dec
insl
rclb
fcomps
push
fdivp
sti
and
stos
adc
les
add
xlat
repnz
xchg
mov
xor
movb
and
xchg
push
fimuls
xchg
and
inc
xor
fs
out
ret
out
adc
imul
loop
cs
test
xchg
and
xchg
xor
js
inc
ret
jp
rcr
push
out
cmp
mov
out
jns
lahf
clc
sahf
mov
lret
popf
mov
dec
add
or
pop
adc
sbb
or
loopne
xchg
xchg
icebp
out
fisubrl
or
fidivl
jp
jbe
and
cmp
push
sti
lods
mov
stos
ret
cmp
test
lock
idiv
dec
jmp
iret
fists
enter
not
nop
dec
and
xchg
xor
xchg
mov
sti
jge
mull
ja
ljmp
imul
mov
je
mov
rolb
sub
cmc
dec
inc
lock
xlat
mov
pop
rcrb
lcall
mov
jo
cltd
lock
hlt
and
inc
push
bound
cmp
divb
rcrb
insb
inc
adc
repnz
clc
test
sub
mov
jo
pusha
ljmp
nop
ds
repnz
mov
xchg
addl
pusha
lret
pop
jge
idivb
sbb
lret
in
push
fwait
xor
xchg
cmp
add
popa
mov
pop
jle
lcall
gs
add
dec
and
jge
arpl
add
add
push
aaa
addr16
push
aaa
inc
push
mov
mov
xor
sbb
leave
and
mov
daa
je
imul
add
into
dec
movsb
jb
in
mov
shrl
pop
ficompl
jno
inc
in
mov
aam
rolb
fcomps
scas
out
in
sti
xchg
mov
fbstp
mov
movsb
andb
jge
test
inc
jae
sub
clc
cmc
inc
dec
xor
push
adc
jle
xchg
out
sub
dec
shll
ror
sbb
fwait
xor
jnp
push
dec
or
sbb
mov
jp
sbb
aad
or
jne
inc
nop
inc
push
add
int
les
mov
call
js
mov
mov
idivl
cmpl
xlat
jne
pop
inc
lds
shrb
iret
cmp
add
pop
out
push
lret
mov
mov
xor
xchg
js
outsl
popa
inc
les
dec
adc
mov
mov
pushf
mulb
mov
mov
sub
iret
pusha
pop
xchg
sub
sub
pop
data16
mov
les
xchg
mov
xor
or
jge
fsubl
push
add
movsb
push
push
daa
and
jp
pop
sti
hlt
cmp
imul
inc
out
pop
push
out
pop
sbb
hlt
sub
jg
idivl
and
xchg
iret
jmp
push
ja
xor
sub
mov
call
pmaxsw
mov
adc
xchg
push
push
insb
ror
mov
sbb
inc
xchg
in
fwait
ret
fst
dec
mov
xchg
in
or
mov
mov
adc
dec
aam
inc
cmpsl
cmp
xor
sub
push
add
sub
mov
es
xor
loope
push
sbb
stos
sahf
mov
add
std
jl
and
xchg
push
divl
aas
lcall
push
sbb
pusha
xchg
mov
test
mov
xchg
push
mov
mov
insb
loop
jle
andb
jecxz
and
mov
sub
add
inc
iret
aaa
add
mov
dec
push
jne
das
into
mov
sub
add
lds
js
enter
leave
loope
add
leave
lahf
sbb
push
insb
int
cmp
cmp
outsl
std
enter
sub
adc
adc
cmp
sub
xchg
pop
lods
pop
fildl
mov
adc
mov
cltd
mov
mov
daa
cmpsl
nop
pop
dec
negl
mov
dec
or
out
pop
out
adc
ret
push
and
sbb
dec
in
pop
xlat
in
test
mov
jl
mov
loop
pusha
int
adc
outsl
je
push
jl
jne
lret
sub
pop
pusha
inc
dec
jne
push
adc
std
pop
out
orb
jne
popf
xchg
and
and
pop
mov
and
loope
xor
icebp
dec
or
push
xlat
mov
lock
pop
adc
sbb
sub
ljmp
xchg
mov
clc
lods
repnz
jle
add
data16
lods
dec
adc
xchg
lods
adc
or
in
mov
leave
jae
or
pusha
sub
fidivl
int3
mov
and
lcall
test
call
xchg
scas
or
addb
dec
xchg
les
clc
adc
aam
add
fs
mov
jb
cmp
mov
or
mov
mov
sub
xchg
push
or
sbb
outsl
mov
scas
push
mov
xchg
fs
cmpsl
xor
mov
jo
xchg
pop
inc
daa
aas
cmp
clc
jle
ret
out
push
adc
or
ret
cmc
add
lds
xchg
stos
les
out
inc
ret
jne
xor
das
mov
lds
int
movsb
out
sbb
mov
dec
mov
in
ds
adc
les
add
mov
push
insl
inc
sbb
dec
xchg
and
pop
ds
movsb
pop
cmp
push
jl
xchg
pop
andl
inc
ret
shrl
dec
sbb
in
adc
sbb
cmp
push
pop
jnp
mov
inc
rorl
and
ljmp
mov
inc
shlb
mov
lcall
sbb
xor
pop
push
mov
sti
pop
inc
xorl
orl
pusha
out
dec
fnstenv
pop
mov
gs
rcrb
in
aam
jne
pop
pop
daa
test
ret
lods
inc
pop
enter
jecxz
and
or
xor
stos
enter
jg
pusha
in
in
xchg
shlb
xchg
sub
mov
or
sar
stc
and
jns
jbe
sbb
rclb
jae
repz
nop
lock
dec
fisubrl
loope
call
jg
lds
fcomp
xchg
jb
enter
cmp
fildl
push
and
push
gs
add
or
xchg
scas
inc
scas
inc
in
push
lods
add
testb
test
shrl
xor
mov
stos
pop
nop
push
push
mov
std
sub
loopne
cwtl
dec
imull
stos
jo
add
outsb
mulb
ja
in
in
scas
dec
jae
mov
xchg
arpl
mov
adc
jge
mov
in
aaa
or
cs
inc
cmp
lods
jp
xchg
and
inc
subb
outsb
mov
xor
out
pop
pushf
push
hlt
xchg
mov
imul
sbb
icebp
pop
rcll
and
and
push
stc
jne
adc
xchg
int
cmpsl
lcall
xorb
inc
lret
inc
sbb
daa
movsl
inc
fmulp
loop
loope
outsb
test
fsub
mov
xlat
cmp
aad
cmp
lret
mov
test
add
xchg
lock
push
jbe
cmp
jl
cmp
xor
sbbl
inc
adc
mov
mov
aam
les
stos
jecxz
or
inc
bound
mov
pushf
jno
xchg
xor
cmp
mov
push
cmc
push
ret
jno
pop
jbe
sbb
scas
dec
inc
xlat
or
lods
push
int
sub
jns
stc
test
lods
cmp
mov
movsb
jg
out
or
dec
lcall
jne
xchg
ficoml
scas
call
fistpll
pop
stos
xlat
push
cmpb
pop
dec
stc
test
cmc
push
jno
mov
cmpsb
push
mov
shll
test
fdivrs
ja
push
push
fisubrs
mov
mov
cmc
sub
in
mov
pushf
mov
cmp
jmp
xlat
mov
mov
fistl
xchg
or
cmp
or
push
in
arpl
inc
mov
push
cmpsb
xchg
jmp
std
jae
jo
mov
dec
mov
sbb
xor
and
cmp
jae
mov
dec
stos
mov
jb
or
adc
les
outsb
sub
sbb
add
mov
push
scas
xor
cmp
out
xor
xor
xor
fscale
lcall
mov
jle
not
sbb
or
iret
adc
jno
or
imul
cmp
adc
loope
push
ficoms
jb
cmc
mov
add
fs
popf
out
dec
sub
mov
out
push
xor
and
lcall
out
mov
sbb
xchg
movsl
sbb
push
jnp
dec
dec
mov
jns
sub
lods
sub
test
fidivl
xor
in
jmp
scas
test
and
sub
repnz
add
pop
in
pop
andl
mov
inc
cmc
mov
and
adc
lret
stos
or
iret
sbb
leave
mov
sub
cld
iret
shrb
in
or
add
mov
cmpsb
sbb
fistps
scas
sub
mov
hlt
arpl
or
xchg
push
jae
sub
mov
ja
mov
inc
mov
movsl
in
test
mov
inc
test
dec
pushf
iret
stc
mov
popf
iret
xchg
lret
push
sub
cmpsl
in
hlt
insl
lret
lahf
add
mov
push
push
fidivl
inc
pushf
sub
or
js
mov
imul
insb
idivl
in
xchg
push
push
mov
mov
fcoms
cli
shlb
int3
jmp
setae
hlt
xor
fiaddl
mov
test
shlb
mov
cmp
dec
iret
or
jmp
lea
sub
sub
ret
dec
aaa
rorl
mov
sti
shlb
mov
pop
mov
jmp
inc
std
insb
out
sti
pop
mov
daa
cmpsb
xchg
mov
ret
sbb
scas
mov
or
push
movsl
out
mov
mov
or
test
das
sub
nop
shlb
jbe
pusha
adc
add
int3
test
adc
xchg
xchg
and
pop
sbb
pushf
or
cmp
cmp
inc
inc
test
mov
dec
mov
sub
gs
outsl
xor
in
xchg
daa
cmp
repz
inc
fisttpl
adc
nop
fs
clc
out
or
insb
movb
lock
pop
nop
xor
repz
fiaddl
scas
ljmp
fcmovb
jns
mov
push
xor
lea
lcall
jl
mov
es
sbb
jns
cwtl
xor
mov
jo
push
lea
mov
cmc
or
stos
cmp
xlat
enter
aaa
pushf
xchg
dec
add
scas
outsl
mov
fwait
mov
lcall
xor
lock
jns
mov
mov
jl
in
das
imul
dec
or
imul
repnz
lock
push
pop
or
push
lods
ja
ljmp
or
outsb
sub
mov
call
mov
and
sbb
adc
or
and
inc
xlat
loope
mov
xor
pop
push
jnp
xor
int3
cmp
jg
and
in
inc
push
pop
cmp
bound
int3
add
jg
dec
inc
shrl
adc
mov
aam
popf
lock
out
dec
adc
cmpsl
add
jge
xchg
cmp
loopne
out
xor
mov
xchg
enter
in
inc
stos
cmpsl
cmpsl
arpl
and
pop
push
negb
add
lds
inc
push
mov
mov
push
cwtl
call
int3
xor
push
sub
mul
pop
popf
sahf
sarl
sub
lcall
lcall
dec
dec
jle
outsb
jecxz
inc
icebp
aas
jp
dec
fnstenv
adc
js
jmp
data16
scas
stos
sub
pop
sub
ss
mov
jmp
and
test
jno
jp
scas
fildl
pop
jl
sbb
inc
and
pusha
sbb
push
or
inc
out
push
xchg
subl
or
adc
int
mov
subl
aas
lret
sbb
and
call
xorl
pop
sub
mov
ja
inc
scas
mov
cmp
orl
cmp
cmp
repz
stos
mov
cmp
rol
push
shll
sub
lret
push
std
mov
add
jg
es
fdiv
mov
sbb
dec
mov
push
xor
in
cmp
test
and
lock
in
loop
push
test
cld
loope
lcall
jmp
or
pop
gs
gs
xor
mov
ret
pop
xor
inc
fs
loop
inc
xchg
lahf
cmc
fmul
mov
popf
push
int3
loopne
cmp
xor
jl
push
push
enter
aas
adc
inc
adc
dec
js
dec
and
push
lods
dec
xchg
ljmp
and
sub
cs
data16
mov
inc
mov
pop
push
movl
jecxz
jl
sub
xchg
inc
inc
out
inc
test
xchg
mov
notl
inc
sub
mov
fmuls
mov
add
pop
cmc
xchg
call
rcr
lret
mov
daa
add
or
out
cld
xor
dec
push
dec
test
jecxz
xchg
xor
mov
push
xchg
mov
iret
jbe
test
sbb
int
jb
pop
pop
cmp
test
cmp
stc
into
data16
pop
jg
insl
cli
adc
shrl
rorb
mov
dec
movsb
sub
loopne
xchg
adcl
pop
loop
sbb
fidivs
lds
scas
inc
and
or
xchg
rcll
fisubrl
mov
fsubl
or
imul
rcrl
dec
je
repz
push
and
push
call
ljmp
or
andb
mov
cmc
andb
pop
jns
xchg
xor
mov
mov
shll
xor
pop
mov
xchg
stc
mov
popa
cmp
cmp
adc
add
pop
pop
mov
xorb
lods
add
mov
adc
imul
mov
movl
push
jle
jns
jns
subb
cli
pop
sub
pop
incb
fstl
xor
sbb
add
into
mov
iret
jle
push
lock
jb
mov
mov
das
xor
sbb
outsl
sbb
lods
mov
sub
bswap
inc
orb
jb
add
pusha
inc
lcall
fcmovne
loop
xchg
mov
daa
mov
adc
movsb
mov
pop
push
fisubs
push
out
shrl
jae
bound
popa
das
jns
roll
into
roll
adc
pop
mov
test
popf
jo
lret
xor
mov
aad
pop
jns
sti
jno
dec
scas
loope
mov
insb
or
addr16
xchg
push
xor
adc
das
adc
sub
inc
subb
sub
jp
push
cmp
addl
push
frstor
inc
cmc
in
jbe
fwait
divl
mov
repnz
daa
add
mov
mov
movsb
inc
add
mov
pop
cmpsb
xlat
cmp
fwait
icebp
ret
pop
into
push
hlt
add
push
inc
rclb
jecxz
lods
loop
mov
inc
es
call
fwait
mov
mov
dec
pushf
add
and
addr16
roll
adc
idivb
lock
adc
inc
out
int3
xor
lret
ficompl
popf
fwait
or
nop
xchg
mov
sub
add
jbe
jmp
push
inc
xchg
das
add
dec
fdivrp
xchg
add
cmpsl
aas
sbb
jnp
jno
push
mov
jle
mov
push
lods
rcrl
pop
sahf
xor
cld
in
mov
repnz
inc
imul
clc
ret
jns
mov
or
jg
mov
jp
jge
test
out
push
jnp
aas
jle
sti
roll
sbb
in
subl
cmp
ror
hlt
in
rorl
adc
das
fstpt
push
shrl
xchg
lcall
fdivl
rorb
icebp
jle
push
xor
scas
xor
cli
das
lahf
lahf
daa
dec
sub
and
fbstp
mov
movsb
pop
es
jne
mov
sysexit
inc
jb
mov
jge
pop
and
mov
jmp
loop
bound
mov
lea
pushl
xchg
js
xor
es
cmp
lock
cwtl
sarb
mov
adc
fcmovnb
loop
lahf
push
add
lret
cmpsl
in
mov
push
test
dec
shrl
lahf
cmp
jns
mov
push
fldt
pop
test
adc
and
pop
js
inc
nop
fcmovbe
rclb
add
push
mov
out
icebp
cmp
movl
test
cmp
test
jo
dec
cmpsl
test
lods
test
outsl
or
fcmove
xchg
pop
orb
sbb
insl
data16
sbbl
inc
lock
jl
adc
dec
mov
pop
out
pop
dec
push
xchg
mov
jmp
adc
mov
sub
dec
es
mov
mov
outsb
mov
xor
jae
dec
adc
popf
mov
push
repz
mov
fwait
pop
jbe
jbe
icebp
stos
jb
ret
repz
shll
imul
cmc
push
add
mov
adc
shll
push
push
pop
jmp
leave
add
inc
mov
les
fmuls
cmp
sub
jecxz
xor
popf
mov
insb
mov
imul
jno
adc
cmc
out
jno
lea
pusha
loope
test
add
push
push
stc
jbe
adc
bound
xor
popa
and
addr16
sub
daa
lods
pop
sarl
jmp
xor
jns
jns
lahf
jp
fcomi
xor
xchg
test
jno
movsb
adc
push
orb
sbb
and
adc
pop
and
xchg
repnz
fwait
shll
push
daa
sub
cmpsb
fadd
sbb
sub
mov
mov
or
xchg
shlb
fwait
lret
lea
icebp
mov
js
orb
mov
xor
movsl
pop
mov
xor
fs
and
mov
data16
daa
adc
dec
xchg
mov
cmpsl
sub
push
stos
clc
imul
inc
js
insl
sub
andl
dec
dec
scas
stos
add
lcall
xchg
add
inc
cmp
pop
sbb
loope
rcr
lcall
mov
mov
mov
ljmp
jmp
mov
or
daa
mov
leave
test
scas
jmp
and
add
dec
xor
mov
test
insl
aas
aam
jnp
shlb
stos
frstpm(287
dec
fidivs
inc
cwtl
mov
in
js
dec
sbbl
cmp
es
arpl
adc
mov
and
cmp
jp
aam
jns
sub
dec
cmpsl
aaa
test
adcl
or
jg
cmp
arpl
push
scas
pop
int
out
imul
push
or
aas
inc
mov
fiadds
mov
cmp
cmc
dec
mov
ret
pop
idivb
pop
in
decb
das
movl
loopne
sarl
pop
adc
loope
cmpb
cli
sbb
pop
iret
idivl
sarb
jae
push
or
hlt
cmp
and
inc
fisttpll
pop
jmp
xchg
fmul
int
push
jmp
mov
pop
xchg
outsl
fistpll
cmp
rcl
test
test
mov
cmp
mov
lods
xchg
call
jnp
fbld
sub
mov
mov
mov
push
lods
sbb
arpl
jno
rorb
int
adc
cmp
loopne
mov
stc
sub
jbe
stos
into
loop
adc
mov
push
cmpsb
test
sbb
dec
dec
repnz
cmp
mov
es
mov
mov
ret
xlat
mov
test
add
xchg
cwtl
fwait
pop
add
lock
js
adc
lock
ljmp
push
mov
fwait
mov
pcmpeqw
daa
iret
and
push
and
in
sahf
arpl
push
lea
jbe
cltd
push
lret
xchg
cwtl
pusha
lds
pop
cmp
dec
js
jmp
push
push
jg
push
repnz
mov
fcomps
cmp
add
aad
js
xor
jae
imul
xchg
outsl
lcall
test
and
mov
addr16
enter
cmp
ds
into
cmp
pop
add
sub
xchg
nop
cmp
stc
xchg
and
or
mov
pop
push
mov
xchg
fsub
pop
xchg
outsb
loop
inc
or
ret
ljmp
dec
and
adc
ja
in
mov
fs
in
add
mov
xlat
dec
xchg
pusha
sbb
xchg
cmp
jbe
push
add
and
mov
cmp
push
pusha
cmpsb
inc
dec
sbb
dec
les
dec
aad
fisubl
xlat
repz
xor
repnz
pusha
and
arpl
push
push
adc
jecxz
pop
popa
js
test
jne
mov
scas
out
test
push
stc
push
repz
jp
pop
clc
movsl
mov
ret
call
jnp
sahf
je
fwait
xchg
outsb
dec
xchg
sub
rcr
pop
loope
mov
adc
add
sti
xor
jle
iret
xchg
clc
inc
jnp
jle
ss
in
orl
es
fchs
dec
jge
or
loopne
loop
jne
cmp
add
adc
pop
or
in
jns
cmp
js
adc
rorb
dec
adc
stc
mov
ja
push
inc
movsb
clc
bound
mov
mov
pop
sbb
or
or
mov
or
xchg
push
xchg
stc
sbb
aas
out
rorb
data16
pop
cmp
cmp
sub
aad
int3
or
xchg
clc
mov
jle
lods
shl
adc
jnp
out
or
mov
nopl
mov
lahf
test
ss
pop
sbb
xchg
jae
addr16
dec
arpl
insb
xor
hlt
mov
aaa
sbb
es
arpl
push
sahf
jmp
mov
nop
and
mov
dec
xchg
sbbb
in
ljmp
fisttpl
xchg
adc
movsl
or
and
jmp
sar
push
out
icebp
mov
clc
jbe
mov
push
pushf
ret
mov
jl
cld
sub
jl
testb
jbe
pop
in
mov
sub
add
xchg
inc
adc
and
call
pop
sbb
lock
test
push
out
pop
mov
dec
and
addr16
movsb
xchg
and
add
and
or
cltd
adc
ficomps
fcompl
mov
int3
lahf
pop
mov
ret
xor
push
addb
inc
rcr
rcll
je
add
mov
fimull
push
repz
repz
dec
nop
mov
push
outsb
mov
cmc
pop
mov
std
jae
rcrl
sub
xor
fscale
jo
xchg
mov
scas
insb
sysexit
add
popf
mov
dec
fistl
das
loopne
inc
ret
dec
jmp
ss
xor
in
mov
bound
adc
push
stos
adc
push
pop
jno
pop
fnstenv
loopne
les
mov
fldl
adc
adc
sarb
jae
dec
data16
mov
nop
push
jge
mov
rolb
loope
xchg
sub
pop
dec
push
je
aam
jns
xchg
pop
sbb
cmp
gs
mov
and
mov
sahf
jns
enter
mov
test
xchg
xchg
scas
call
push
mov
mov
mov
fwait
nop
jns
clc
cmpsb
movsl
or
rcr
pop
fsubl
pop
ljmp
mov
jb
sub
popa
call
loop
sub
ja
mov
mov
into
lods
xchg
pop
sahf
adc
xchg
sbb
fidivrl
add
mov
pop
shr
bound
sbb
rcr
xor
into
xor
in
push
iret
lret
data16
inc
mov
test
ret
pop
cmpsl
mov
loopne
leave
jnp
nop
adc
daa
lods
xchg
or
aam
arpl
popa
pop
mov
icebp
mov
mov
ret
xor
sub
sbbl
xchg
int
fidivl
xchg
mov
pop
fsqrt
mov
cmc
inc
cmp
test
fstpl
mov
sub
dec
push
cltd
dec
lret
xchg
xor
addl
mov
add
add
into
push
popa
or
sbb
mov
loope
mov
dec
outsl
arpl
test
jle
mov
and
adc
and
xchg
mov
into
push
mov
inc
data16
mov
arpl
loopne
ficomps
push
in
inc
clc
xchg
lock
push
lcall
ret
out
jg
and
out
js
jmp
arpl
rorl
mov
inc
movsb
and
inc
data16
sti
stos
push
cmp
incb
adc
pop
cmc
popl
lret
mov
inc
mov
stos
add
xor
ret
dec
jle
aaa
sbb
into
ret
xchg
jg
scas
push
add
inc
jg
aas
sarl
sub
dec
enter
outsb
jmp
xchg
in
loope
fistpll
js
ljmp
adc
pusha
fistpll
or
dec
cmp
mov
dec
sub
inc
pop
and
xor
addr16
sbb
sarb
out
fstps
xchg
adc
test
push
mov
ffree
gs
fs
mov
jl
movsl
and
sbb
aas
add
push
dec
push
dec
xchg
rcrb
fs
negb
in
mov
dec
adc
mov
cmc
fsts
hlt
adc
sub
fsts
stos
sbb
jb
mov
sarb
mov
xor
dec
lock
adc
jle
jbe
xor
gs
pop
lret
add
fs
fisubs
fwait
xor
int
cmc
jp
adc
mov
test
or
hlt
fidivrs
repz
imul
movntq
mov
jmp
mov
jnp
xor
mov
or
xchg
xchg
movsl
mov
lock
jmp
cmc
rcll
jecxz
movl
daa
mov
dec
mov
aaa
scas
loopne
cmp
pop
or
dec
jecxz
mov
adc
xchg
popf
mov
andb
mov
cmc
call
rcrb
pop
xchg
mov
ljmp
xor
lret
xchg
cmpsb
xchg
js
shl
ljmp
mov
jns
cmc
and
dec
cmp
test
dec
cmp
sub
stc
add
mov
incb
push
or
mov
mov
fstpt
xor
icebp
add
jmp
xor
and
push
and
repnz
adc
mov
aam
push
shrb
xchg
inc
sub
sahf
repz
mov
xlat
popf
xor
data16
lahf
pop
ljmp
and
or
add
das
fnstenv
and
es
add
je
cmpb
es
or
jmp
push
mov
xor
pop
push
sub
push
roll
dec
mov
jge
aas
sbb
mov
push
xchg
les
ds
mov
leave
pop
mov
out
cmp
les
sti
sahf
mov
outsb
xor
sti
mov
dec
mov
jmp
jecxz
and
pop
jbe
or
sti
cmpsb
movsb
dec
daa
out
sbb
sub
jecxz
imul
adc
push
push
sub
jno
inc
ja
add
adcb
cs
mov
jns
lret
add
outsb
cmp
xchg
fcmove
dec
dec
or
lret
dec
mov
or
push
stc
aam
pop
cmp
insb
inc
lahf
mov
adc
addr16
push
push
xchg
in
pop
pop
lods
mov
shlb
rol
sbb
mov
loope
fldcw
push
loopne
test
shl
xlat
xor
das
cmp
movsb
sahf
in
xchg
adc
cmpsl
in
fs
adc
or
bndmk
test
dec
or
arpl
movsl
sub
mov
cld
insb
adc
das
mov
mov
sbb
cs
loop
xor
xchg
js
andl
stc
bound
xchg
mov
pop
mov
out
test
stos
dec
ljmp
mov
add
dec
adc
pop
into
shlb
or
dec
mov
fcmovnu
stos
sbb
std
mov
pop
sahf
adc
lret
dec
and
lods
push
ja
and
test
jl
mov
imul
push
inc
xchg
lcall
xor
out
add
cli
shll
pop
enter
adc
mov
or
mov
shrl
pushf
cmp
mov
adc
adc
loopne
std
add
jns
jb
movsb
pop
movsb
mov
pop
jmp
test
mov
xor
aas
cltd
xor
shlb
mov
sbb
mov
cmp
aad
ds
sub
fmull
inc
js
gs
insb
sbb
imul
cltd
pop
jne
int3
or
cmc
iret
xor
cli
stos
test
in
xor
ss
pushf
test
cltd
adc
outsb
fstpt
mov
jp
xor
insb
or
push
pop
and
and
cltd
outsb
inc
add
movsl
push
enter
or
fstl
inc
jne
dec
mov
outsb
aaa
cs
add
mov
jp
mull
sbb
sahf
xor
sub
cmova
and
mov
mov
and
inc
jg
xor
sarl
repz
lret
ret
sti
js
and
jo
inc
fldcw
mov
xor
lods
push
push
in
mov
xchg
test
or
push
jmp
cmp
call
xchg
push
ljmp
roll
xchg
mov
mov
or
addr16
or
ss
xor
cmp
clc
pop
sbb
and
lcall
xchg
or
ret
mov
add
out
loopne
xor
xchg
test
movsb
mov
out
mov
sub
xchg
and
insl
xchg
mov
insl
mov
pushf
lea
loop
fsubrs
outsl
xchg
insl
jne
test
mov
fildll
xor
inc
call
leave
inc
sbb
push
stc
add
push
in
das
cmp
mov
popf
mov
testb
xor
mov
and
jb
push
and
inc
inc
loope
push
inc
inc
shll
push
pop
sub
push
pop
lods
sub
rorb
loope
out
sarl
cmp
imul
xor
ljmp
arpl
insb
out
adc
dec
ljmp
dec
jl
push
xor
and
push
fwait
dec
jp
pop
hlt
inc
sub
jg
or
cmp
fwait
xor
leave
aad
arpl
nop
fidivl
cmc
and
fidivrl
jns
pop
mov
push
sub
add
test
fs
mov
inc
popf
lcall
movsb
or
push
adc
imul
outsl
push
ljmp
cmp
out
imul
push
xchg
mov
xchg
les
mov
mov
sub
loopne
int3
hlt
xor
or
push
mov
arpl
mov
fneni(8087
mull
xlat
jns
fists
stc
xor
aad
and
cmp
shl
dec
and
loopne
inc
pop
insl
aas
pop
pop
rcll
scas
push
add
lahf
cmp
mov
test
sbb
lods
aaa
cld
jle
ss
in
movsb
out
pushf
dec
mov
stc
push
pop
fs
rclb
lret
hlt
sub
addl
loope
mov
test
push
int3
jnp
gs
jo
shl
lea
fldenv
xchg
dec
pushf
out
out
jmp
fistl
iret
cmp
into
xor
cmp
and
xor
shrl
pusha
leave
loop
add
sub
dec
jne
fists
idivb
das
xchg
mov
les
aas
lods
stc
adc
xor
mov
ss
shlb
xchg
cmp
dec
add
in
pop
pop
xor
and
lods
in
jp
and
jno
fs
mov
in
sti
rcr
xchg
inc
inc
in
test
sub
loop
cmp
xchg
stos
mov
push
push
inc
inc
nop
ret
mov
mov
add
xlat
mov
mov
pop
sub
iret
sbb
pusha
aas
dec
ljmp
push
mov
mov
xor
adc
cmp
and
mov
int
in
mov
xor
sbb
lahf
ds
inc
push
loop
jmp
into
out
mov
pushf
and
mov
loope
adc
out
testl
lahf
arpl
cli
jb
and
or
dec
cmc
sbb
inc
adc
ja
stos
jae
movsb
sbb
mov
stc
xor
out
mov
inc
call
out
in
mov
push
jae
sub
pop
lods
sub
push
inc
pop
js
or
or
mov
mov
mov
pop
outsl
sub
push
mov
pop
xorl
outsb
daa
jmp
xchg
ljmp
ja
lods
in
jp
lahf
jbe
jle
rcl
adc
sub
imul
jle
adc
and
scas
lods
into
xchg
gs
jae
sub
popf
lock
in
orb
jne
pop
xchg
loop
push
push
sahf
add
data16
add
jmp
enter
or
icebp
ret
push
pop
push
roll
mov
add
sbb
filds
sbb
pusha
mov
popa
xor
jne
imul
test
mov
push
xchg
out
mov
cmp
mov
lahf
dec
pop
push
mov
dec
inc
cmp
out
movl
fists
cmpsl
xchg
sbb
mov
xor
insl
cmpsb
daa
decl
or
cltd
lock
add
dec
inc
test
mov
dec
mov
mov
je
lds
pop
movsl
icebp
out
inc
jns
outsl
leave
or
std
daa
insl
mov
inc
fists
mov
inc
inc
hlt
dec
scas
mov
xchg
sbb
cmp
fbld
mov
mov
pop
adc
cmpsl
fimuls
repnz
loopne
sahf
push
or
int
lahf
loope
and
aas
orb
push
lock
jbe
lahf
or
mov
insb
loopne
dec
std
mov
mov
loop
imul
inc
subb
push
mov
jo
mov
adc
push
mov
rolb
sbb
cmp
fsts
das
into
sbb
xlat
mov
sahf
gs
loope
sub
pop
dec
lcall
in
jg
jae
dec
adc
xchg
stc
aad
fs
mov
adc
mov
ljmp
mov
dec
and
dec
xor
add
pop
test
sub
movsb
jb
xor
lods
testl
pop
out
xor
mov
mov
insl
lea
or
les
jecxz
xchg
pop
pop
or
mov
sbb
xor
add
repnz
sbb
pop
pop
mov
sub
jo
sbb
adcl
or
iret
insb
iret
push
cmpsb
push
lahf
xchg
rcll
inc
inc
movsl
mov
int
xchg
scas
outsl
cmp
out
std
jl
and
pop
stc
xor
xchg
pop
mov
mov
xchg
lahf
push
or
lds
test
fcomps
inc
ficomps
sub
cmp
call
sub
inc
and
ja
mov
pop
rcll
dec
xchg
roll
xorl
or
leave
lock
fistpll
clc
add
pop
mov
jecxz
xchg
lock
adc
cli
sbb
pop
decb
pop
pop
xlat
and
repnz
sub
cmp
out
sbb
sbb
repz
inc
or
cltd
cmpsb
jne
xlat
xchg
inc
leave
jle
pusha
fucomi
xchg
out
jno
mov
sub
test
ret
in
inc
into
push
iret
xchg
or
std
sub
outsl
cmpsb
lds
dec
imul
loope
inc
out
cmp
test
sbb
sub
jo
test
push
lret
test
pop
mov
out
dec
push
inc
icebp
mov
push
mov
add
test
dec
in
xchg
and
jle
pop
mov
xor
lret
out
jnp
dec
jecxz
mov
sbb
dec
in
xor
ds
scas
fimuls
popf
idivl
hlt
mov
leave
push
mov
mov
jmp
stos
xlat
outsb
ret
lock
pushf
xchg
jnp
mov
ret
fdivrp
jmp
push
movsb
loope
aam
inc
xchg
jp
jp
mov
xchg
dec
fldcw
adc
lret
mov
jno,pt
mov
pop
cvtdq2ps
sti
fimuls
xchg
xchg
adc
jle
addr16
jae
mov
and
cmc
cmp
add
test
insl
test
insw
xchg
adc
dec
insl
ret
mov
inc
stos
mov
adc
lea
sti
sub
cli
push
add
rcl
sbb
sbb
mov
xchg
mov
loopne
adc
cwtl
lds
jmp
and
pushf
add
daa
cwtl
jmp
enter
sti
repnz
rolb
pminsw
and
pop
xchg
dec
or
or
mov
pop
inc
adc
jp
xor
lds
inc
shll
push
scas
neg
mov
mov
mov
xor
ss
imul
les
fwait
cli
nop
fsubrs
xlat
jecxz
call
push
andl
cmp
ret
xor
ficoml
minps
jle
fs
adc
aaa
enter
pop
or
sbb
and
aas
cltd
or
rorl
jmp
dec
shl
lcall
pusha
pop
insb
jae
jecxz
jae
sbb
push
or
pop
mov
pop
sarl
repnz
clc
jno
xlat
idivb
lds
xchg
in
negb
xchg
shll
and
les
scas
mov
inc
test
mov
xlat
lock
dec
fmuls
test
loope
lds
ss
sbb
adc
pop
mov
push
mov
sub
test
fdivrs
dec
aam
jg
jl
fldenv
js
jmp
push
out
adc
jl
outsb
shr
adc
subl
push
fcomps
inc
sub
test
lods
pop
jp
inc
inc
loope
pop
adc
fcmovne
pop
fprem
push
pop
sti
jl
seto
jns
mov
mov
aaa
jno
fdivp
cmc
imul
adc
pop
push
data16
jo
loop
mov
xchg
mov
inc
lcall
push
ds
clc
jne
imul
cmp
cmpb
and
mov
das
sbb
push
lock
insl
comiss
dec
sti
cmpsb
and
push
mov
mov
cmp
pushf
hlt
shr
ss
sbb
mov
iret
cltd
mov
in
mov
imul
outsb
xchg
and
fsubs
outsb
pop
rclb
inc
mov
cmpsl
mov
cmp
jg
sbb
decb
cwtl
jnp
push
gs
int3
out
movsl
mov
ss
loop
and
sbb
mov
lock
sbb
int
std
into
pop
cmc
xor
or
repz
or
int
call
fs
push
test
dec
in
push
jo
jmp
pop
jmp
fsubs
push
mov
lods
arpl
xlat
cmp
and
xor
pusha
xchg
xor
popa
adc
and
shr
jl
loope
sbb
mov
add
enter
fsubs
pop
add
jl
arpl
dec
adcl
repnz
push
and
push
hlt
pop
inc
inc
push
icebp
jne
xchg
mov
cmc
push
dec
pushf
sahf
adc
mov
and
ret
jle
mov
imul
ljmp
repnz
outsb
fbld
sahf
sarl
xor
fwait
mov
aad
mov
push
and
idivl
popl
lahf
in
lods
orw
cwtl
in
dec
mov
mov
mov
lods
cmp
ret
mov
dec
mov
sbb
jp
jmp
dec
nop
cmp
mov
mov
jnp
jne
dec
mov
je
mov
cmp
xchg
inc
and
add
adc
xchg
pop
loope
mov
cwtl
stos
mov
stos
cwtl
jp
in
cltd
bound
data16
xchg
std
loope
js
lea
xchg
xchg
test
push
cmpsl
lcall
jmp
xchg
cltd
mov
enter
out
mov
js
imul
mov
push
mov
repnz
mov
scas
mov
adc
fwait
push
iret
fisttpll
nop
test
adc
inc
loop
fmull
out
call
push
jo
hlt
fucom
inc
sub
dec
ja
dec
idivl
sub
mov
outsb
inc
adc
push
push
sti
movsl
sbbb
jae
imul
add
movsb
mov
mov
sbb
lcall
lea
mov
push
jmp
adc
insb
movsb
dec
pop
ss
dec
cs
mov
mov
mov
pop
push
mov
mov
rcl
insl
les
rol
sbb
mov
fdiv
shlb
and
sub
xchg
jge
pop
nop
scas
pop
nop
scas
mov
insb
insl
and
xchg
mov
pop
in
adc
stos
xchg
lret
inc
das
adc
and
loop
addr16
inc
scas
movsb
lea
les
stos
xchg
rcll
jmp
xor
sti
call
rcr
mov
out
push
loope
fprem
repz
dec
mov
loope
push
aam
in
xor
scas
and
adc
addb
jbe
pop
cli
sub
push
pop
jmp
arpl
insl
mov
pop
adc
jnp
mov
lods
ds
pop
mov
bndstx
inc
push
loop
sbb
cmpl
mov
and
js
lcall
cld
aaa
fisubs
mov
mov
sbb
adc
cmpb
jecxz
movsl
repnz
fstpt
mov
mov
or
aaa
bsf
sbb
fistps
scas
and
xchg
and
xor
movsb
aaa
clc
push
pop
std
aas
lret
sahf
mov
sub
mov
subb
lcall
pop
movsb
dec
sbb
and
out
lods
insb
imul
mov
ret
gs
enter
sahf
and
aam
xchg
aam
xor
arpl
fcmove
push
ret
push
test
scas
jl
pop
dec
insb
sahf
dec
jp
lods
sbb
or
cmpsb
and
xor
sub
push
jae
clc
addr16
sub
retw
and
xorb
scas
inc
scas
enter
iret
test
inc
or
jb
pop
mov
mov
popf
add
call
xchg
in
rolb
fcoml
add
sub
jb
es
outsl
subl
mov
push
addr16
int
testl
xor
inc
push
sbb
das
daa
rcrb
push
fiaddl
insl
icebp
xlat
jmp
ljmp
out
aad
sti
dec
pusha
or
cli
and
iret
sub
aaa
add
ds
rorl
mov
xchg
xchg
test
das
std
xchg
adc
or
or
outsl
pop
cmp
cmp
je
jle
push
mov
push
out
jne
inc
scas
push
inc
js
lock
daa
xor
ja
push
cmp
push
repz
push
cltd
mov
push
leave
sub
aaa
mov
cld
into
xor
dec
mov
inc
lret
push
fidivrs
xor
xchg
fwait
scas
icebp
lds
pop
push
fsubrl
cmp
not
xor
pop
jbe
jg
jmp
mov
popf
stc
stos
movsb
mov
nop
add
stos
add
sbb
test
addr16
xor
mov
fsubr
dec
inc
cltd
les
dec
pop
mov
dec
addr16
pop
pop
out
sbb
daa
xlat
or
xchg
sbb
movsb
add
jb
push
xlat
rcl
add
sub
sbb
in
mov
adc
pop
fldl
popf
pop
mov
std
cmp
movsl
dec
fcompl
sbb
dec
jne
pop
pusha
sub
cld
add
popf
pop
and
stc
jo
shll
pop
andb
sti
jmp
scas
jae
jp
dec
inc
shll
in
out
nop
lret
jle
ljmp
pop
insb
lar
mov
call
sbb
mov
repnz
pop
jp
push
ds
mov
test
test
dec
leave
cld
outsb
adc
fdivs
fcomps
sahf
xlat
mov
test
or
es
sbb
or
xor
mov
ljmp
rcrb
dec
cmp
jbe
loop
scas
sbb
jg
pushf
imul
xlat
or
inc
pop
push
into
icebp
jb
cltd
jne
push
adc
or
aas
je
in
mov
mov
cmpsb
adc
aas
pop
inc
stos
add
push
stos
mov
ret
xor
xor
sbb
pushf
or
in
sbb
mov
or
sbb
adc
ret
dec
dec
cmp
lahf
add
xchg
psubusb
sahf
in
dec
sti
iret
or
pop
add
repnz
jo
pop
test
cmp
and
stc
mov
inc
and
inc
mov
mov
rol
ljmp
push
stc
stc
adc
stc
clc
xchg
xchg
or
sti
mov
jge
add
lea
inc
xorl
push
and
pop
lods
imul
sub
jne
push
mov
sub
lea
cmpsb
stos
xor
xor
and
mov
inc
mov
hlt
pop
shrl
mov
int
mov
xor
sbb
and
test
inc
push
add
insl
pop
fistpll
loopne
outsl
cli
sbb
push
mov
mov
bound
ror
jb
in
loop
jl
in
jecxz
push
mov
out
and
and
adc
adc
divb
daa
int3
cli
ficoms
imul
jle
aad
fbld
sbb
scas
fld
lds
mov
mov
adc
pop
sbb
cli
jo
mov
aaa
push
repz
mov
lds
add
movsb
lret
add
add
pop
jg
xchg
mov
inc
push
push
push
loopne
xlat
mov
jns
fbld
or
and
add
and
mov
sub
data16
sub
mov
enter
jb
test
mov
cld
and
popa
xrelease
out
nop
inc
ret
lret
aad
jle
jne
repz
cmp
jbe
roll
cs
aas
dec
lahf
dec
and
mov
and
mov
mulb
sbb
jns
jo
push
inc
xor
sub
sbb
jl
fdivrs
or
xchg
push
lds
mov
inc
sub
push
xchg
sahf
sbb
and
stos
sbb
cmp
lret
push
jbe
jnp
fldt
call
jl
and
xor
sub
arpl
adc
sub
inc
pop
jnp
jl
repz
rdpmc
ljmp
xchg
iret
insl
ret
lea
adc
mov
cmp
sbb
outsb
sub
ljmp
dec
sbbb
incl
or
notb
cmp
pop
mov
or
dec
dec
and
js
popa
bound
xlat
pop
pop
cwtl
pop
pop
pop
sub
gs
loop
cmpb
fwait
xor
push
insl
jbe
lahf
into
roll
adc
mov
lahf
ret
je
pop
jb
es
sub
adc
mov
ss
or
sarl
xchg
inc
mov
or
add
cli
ds
out
in
mov
pop
pop
imul
mov
js
cmc
repz
dec
aas
mov
sub
mov
out
jne
sti
stos
dec
sbb
lret
or
addl
dec
lods
jg
out
mov
mov
mov
gs
push
repnz
or
and
icebp
stos
jnp
jle
out
je
aad
ret
out
lea
push
or
movsb
push
mov
or
cli
mov
inc
add
pop
jbe
les
aaa
xor
jo
pop
ds
adc
jno
adc
or
movsb
pop
push
push
jb
add
stos
cmp
and
xor
xor
lods
or
cmp
ret
jne
jmp
mov
pop
popf
xchg
fcmovu
sbb
loopne
push
cmp
stos
hlt
mov
gs
in
lcall
mov
sbb
jbe
sub
hlt
pop
pop
and
gs
in
inc
jecxz
cwtl
in
lahf
mov
adc
sub
cmpsl
pop
pop
icebp
fwait
stc
flds
mov
call
stos
test
int3
into
sub
leave
call
jg
push
mov
lods
xlat
cltd
outsb
adc
cmp
xor
mov
je
push
loop
pop
mov
shrl
sub
nop
cmp
in
jbe
loop
data16
cmpsb
inc
call
push
sub
jo
push
sub
adc
lock
bound
adc
fiadds
mov
fcoml
inc
jg
xlat
lret
stos
ficoml
push
cmp
dec
mov
mov
in
add
mov
sahf
sbb
xchg
je
jno
jb
cmpsl
leave
rclb
cld
rorl
call
into
push
mov
iret
or
cwtl
enter
loopne
js
ja
je
sub
inc
inc
loope
in
in
addb
jl
fbld
sahf
push
and
stc
mov
inc
jbe
and
inc
inc
loope,pt
pop
mov
sub
and
lea
or
jmp
and
sbb
out
fdivr
arpl
hlt
negb
in
and
mov
pop
pop
fcmovbe
sbb
fsubs
aam
mov
dec
out
or
loopne
cmp
movsl
popa
lea
out
and
fldenv
pop
dec
fucomi
out
inc
pop
mov
cld
mov
or
lock
enter
or
ffree
cwtl
cmp
shrl
sub
adc
push
sub
jmp
pop
leave
xor
xchg
xchg
mov
mov
ret
stos
aas
adc
shrl
idivb
push
xor
mov
pop
lds
jmp
xor
imul
popa
mov
mov
dec
cwtl
ret
lret
inc
or
cld
inc
jb
lret
push
rcrb
cmp
mov
aam
addb
fnsave
push
addb
jb
xchg
cwtl
push
ljmp
dec
jp
push
in
add
sub
loop
dec
jg
jp
lcall
xor
fwait
loope
jmp
scas
xchg
adc
cmp
fisttps
out
adc
pop
xor
call
xchg
stos
jbe
out
inc
sub
testl
push
call
mov
addr16
sub
adc
cmpsb
out
xchg
push
cmpsb
mov
cltd
pop
xor
adc
in
inc
jge
or
dec
push
add
call
adc
xor
subl
xchg
or
fwait
adc
fdivl
and
loope
pusha
ret
fcoms
insl
fdivrs
jl
sub
sti
adc
jle
xor
insl
sbb
test
lret
jmp
jns
sti
stos
pop
ds
sbb
outsl
push
pop
out
daa
pop
nop
mov
pop
test
xor
das
sub
and
adc
push
mov
fucomi
or
adc
pop
and
xchg
add
notl
imul
adc
mov
pop
out
subl
ret
sub
fldcw
push
sahf
push
fisttpl
aad
dec
ds
sbb
insl
xchg
cs
jmp
cli
lds
cmpsl
lahf
jecxz
add
loopne
and
xchg
std
test
jb
jae
call
fbld
cli
push
stos
fcmove
and
mov
dec
sbb
add
and
in
data16
fcmovnb
xor
fcompl
add
clc
sar
arpl
mov
imul
ljmp
addr16
aad
outsb
shrb
arpl
movsl
or
in
add
pusha
fxch
lahf
cwtl
jnp
and
sbb
xchg
xchg
or
add
scas
test
sub
jno
push
cld
inc
fwait
pop
in
loopne
test
ds
sbb
push
or
xor
adc
inc
jbe
xor
rclb
push
mov
jns
adc
mov
cmp
jbe
or
mov
call
lret
add
mov
mov
rcll
and
cs
sahf
mov
adc
or
repnz
shlb
test
clc
jg
add
imul
xchg
dec
jge
cmp
js
addr16
and
jno
cmp
orb
xchg
jmp
xor
add
jb
in
cmpsb
jae
cmp
and
lods
mov
sub
mov
add
lcall
jp
lcall
dec
jne
aas
mov
adc
pop
rcr
cs
xchg
cmp
jo
inc
cld
fwait
adc
cltd
cmpsb
aad
mov
rcll
insl
fsubs
mov
add
loopne
fnstenv
mov
jmp
imul
ffreep
pop
dec
andl
test
xchg
fwait
add
addb
jne
clc
outsl
incb
push
enter
movsb
lods
mov
push
add
test
pushf
fucom
cwtl
mov
lret
sahf
nop
stos
repnz
call
xor
jb
insb
or
mov
inc
and
mov
pop
ds
sbb
and
cltd
loopne
add
mov
xchg
jne
lret
adc
or
out
and
call
xor
mov
test
xor
pop
inc
push
pop
sbb
add
inc
adc
ret
pop
sti
movsb
xor
pop
stos
inc
insb
inc
jo
mov
rorl
mov
mov
push
sub
mov
or
cmp
xor
fcompl
loop
sbb
push
xor
xchg
jae
xchg
cmpb
es
mov
jb
dec
jmp
leave
mov
aad
stc
fsts
mov
jecxz
push
dec
aam
or
hlt
adc
mov
jo
call
test
enter
jp
repz
leave
in
sahf
test
add
pop
adc
rcrl
or
lods
fs
int3
pop
pop
xchg
adc
test
mov
mov
dec
mov
lcall
mov
stos
or
xor
xchg
sbb
sub
adc
lds
mov
mov
xor
sbb
nop
pop
into
int
push
test
and
push
fistpl
cmp
jnp
cwtl
sbb
xor
ds
je
scas
popa
aad
or
mov
xchg
fistps
inc
cmp
fisubl
cmp
outsl
fdecstp
fcompl
xor
sti
pop
mov
or
jo
hlt
sub
cmp
sbb
jg
fsubrs
dec
fistps
movsb
xor
ficoms
in
jp
push
push
cmp
std
je
cs
shl
adc
pusha
lret
lea
mov
adc
lock
in
mov
addl
jge
xor
cmpsb
or
repz
xlat
and
push
ret
jp
inc
mov
cmpsl
into
test
push
loope
ret
mov
je
and
std
les
push
mov
cmc
iret
stos
inc
arpl
jge
in
lea
jnp
and
xchg
sti
jnp
add
ret
stos
faddl
mov
bound
add
movsl
cmpb
int3
js
idivl
xchg
je
adc
mov
mov
out
cltd
push
aad
xor
xor
pop
jnp
lcall
add
enter
ds
insb
rol
ja
mov
sub
sub
adc
aaa
orl
lods
enter
rorl
insl
mov
or
cs
push
push
jnp
in
insb
mov
sbb
dec
mov
add
pop
sub
pop
into
arpl
orl
xchg
sbb
pushl
mov
cmc
and
push
es
jmp
scas
nop
popf
aam
xchg
dec
daa
mov
add
push
imul
mov
cwtl
popf
imul
mov
dec
sbb
aad
xchg
or
add
inc
inc
mov
cmpsl
test
inc
pushf
inc
add
scas
lahf
shr
in
mov
cli
aaa
push
outsb
bsf
pop
leave
loopne
jae
loope
pop
push
scas
gs
loop
pop
push
icebp
fmuls
cmp
or
inc
xchg
inc
mov
push
pushl
daa
inc
mov
fiadds
insl
test
bnd
popf
jl
gs
pop
and
icebp
sbb
out
xor
cs
jae
or
sbb
fildll
lea
les
sub
addb
lods
sbb
dec
xor
sbb
dec
clc
std
xor
insl
nop
xchg
out
inc
mov
xchg
ja
xchg
fcomip
popf
popa
mov
icebp
mov
in
aas
rolb
stos
adc
mov
mov
mov
imul
fsubrl
mov
mov
outsl
das
imul
mov
out
mov
sub
pop
out
mov
cmp
lods
ljmp
sahf
and
sarb
jae
sbb
add
push
stos
sbb
aad
out
ret
test
cltd
sbb
sub
xor
adc
jae
ficomps
fistpl
aam
sbb
sub
xchg
ret
sub
add
mov
dec
dec
pop
ljmp
mov
inc
leave
dec
std
mov
jne
mov
outsb
and
push
push
sbb
xor
xor
inc
dec
dec
or
adc
flds
sarl
insb
leave
jo
or
ret
xlat
negb
nop
lods
and
jg
out
and
inc
cltd
aaa
pop
adc
xchg
jg
repnz
bound
or
in
push
jns
lret
xchg
inc
movsb
push
int3
pusha
adc
mov
xchg
xchg
je
shlb
int3
or
cmp
or
repnz
ja
aas
xor
test
addl
outsl
xchg
dec
lea
fsubrl
aaa
mov
dec
inc
loopne
cmpl
dec
dec
cli
jmp
mov
mov
insl
int3
push
jl
aam
mov
shrl
loop
imull
rcll
movsb
jo
ror
xor
fcmovbe
lret
push
lods
or
cmp
pusha
out
daa
out
nop
jl
push
lcall
mov
test
inc
lock
xor
out
jg
in
aaa
loop
inc
ret
and
xor
daa
mull
les
lret
dec
and
pushf
cmp
fs
sub
imul
sub
mov
sub
mov
xchg
inc
xchg
sti
xchg
out
or
out
leave
loop
jge
adc
and
xor
test
pop
cmp
shl
xchg
ds
xor
mov
mov
pop
xchg
jmp
jb
ljmp
xor
inc
cmpsb
mov
mov
push
pop
ljmp
inc
sub
or
cmp
sbbl
sbb
xchg
add
out
hlt
out
or
in
add
cmp
jge
sbb
aad
rcrb
daa
dec
data16
subb
cs
ret
cmp
jmp
mov
cmp
movsl
imul
je
call
arpl
push
jo
mov
jle
push
les
call
mov
mov
mov
rep
out
mov
mov
push
loopne
pop
xchg
aam
mov
nop
ret
pop
xchg
push
push
cmp
cltd
out
cmpb
adc
mov
jns
out
mov
add
xor
sub
and
daa
sbb
pushf
pop
pushf
dec
fwait
ljmp
push
iret
xor
add
jno
mov
insb
out
outsl
cmpsb
dec
sub
ror
push
cmpsb
and
sahf
xor
movsl
mov
add
jno
lods
inc
sbb
xor
out
xor
idiv
sbb
inc
jl
push
rcr
mov
fwait
aam
dec
int3
test
xchg
sub
std
icebp
ljmp
sahf
pusha
mov
or
int
jns
pop
push
push
pusha
mov
inc
loope
dec
mov
repnz
lds
add
lock
jecxz
adc
aam
add
andl
inc
mov
mov
inc
sahf
add
xor
sbb
xchg
out
jmp
mov
icebp
nop
push
or
enter
adc
jnp
mov
shrb
mov
and
cmc
sbb
test
cs
sbb
dec
lret
add
loopne
and
sbb
jle
pop
mov
pop
in
insl
flds
scas
std
cmp
je
loop
mov
out
add
cmc
mov
fisubrs
addr16
rcr
pop
das
mov
sub
stc
test
push
xor
fisubl
and
xor
lock
fcompl
in
lods
stc
test
inc
imul
mov
bound
mov
cmp
sarl
rcrl
pop
pop
pop
sub
je
call
aam
jo
pop
or
stc
jo
movsb
sahf
sub
jl
fidivrs
fildll
scas
insb
mov
lods
fnstenv
je
fistl
and
mov
test
xor
dec
mov
std
mov
inc
ret
stos
insb
or
xor
out
dec
xchg
sub
push
filds
mov
push
cs
rcll
push
fsubrl
lahf
inc
cmc
xchg
or
or
sbb
cltd
rcll
insb
stos
jns
imul
push
inc
movsb
sub
incb
lret
xor
sbb
pop
push
dec
das
in
cld
xchg
sbb
lcall
je
jge
sbb
ja
cs
int
cmpsb
push
lret
dec
pop
sbb
jecxz
mov
aam
outsb
mov
fstl
xor
insb
je
jmp
mov
lret
cmp
fmull
sbb
fs
pop
add
xchg
rcr
ficomps
mov
int
add
xlat
aaa
out
pop
das
popf
mov
out
repnz
mov
popf
sti
sarl
mov
es
jb
sbb
cmp
mov
cmpsl
jg
daa
jnp
jl
xor
sub
pop
jne
in
es
push
ss
sahf
cmp
fstpt
fbld
imul
pop
pop
xor
cmp
sub
testl
lods
insb
xchg
movsb
call
inc
imul
xchg
icebp
push
sub
dec
mov
movsl
ja
fwait
ds
mov
mov
or
aaa
pop
dec
mov
adc
or
jbe
out
outsl
add
adc
popf
loopne
popf
pop
jmp
or
stc
and
sub
int
push
sbb
dec
cmp
repnz
lds
clc
ljmp
fistps
test
cmpsb
inc
movzwl
xor
inc
fnsave
rcrl
jecxz
addr16
xchg
pop
adc
lcall
loop
shlb
loope
test
adc
xlat
mov
xchg
adc
mov
xchg
jp
inc
jmp
addl
cmpsb
out
xchg
push
dec
adc
mov
sbb
int3
jle
push
daa
mov
cs
push
les
pop
lret
leave
lret
daa
popa
push
push
adc
stos
inc
mov
pop
jo
jnp
dec
xchg
nop
dec
out
and
insb
mov
pop
mov
and
mov
mov
fwait
mov
lret
xor
imul
je
stos
cmp
xchg
mov
xor
cmc
push
lahf
xchg
out
pop
ja
scas
repz
leave
lock
js
jno
xchg
pusha
push
lds
jmp
lret
loopne
les
popa
lock
pop
sti
push
or
and
sub
ret
fidivrs
mov
mov
icebp
enter
sub
dec
fndisi(8087
jbe
jle
mov
mov
sub
sbb
cmp
sbb
pop
add
and
rcll
and
mov
xchg
hlt
sbb
daa
outsb
xor
pop
push
pop
test
ja
in
into
sub
in
and
pop
imul
movsb
mov
jle
scas
mov
cmc
xor
outsl
sbb
xchg
sbb
sti
lods
mov
shr
aad
cmp
hlt
mov
sub
daa
cmpb
aam
add
push
lret
test
mov
lods
push
xchg
jbe
dec
sbb
js
pop
out
out
jge
fucomp
inc
aaa
not
push
scas
adc
in
shlb
jns
enter
in
aam
xor
or
stos
xor
outsl
loope
enter
xor
movl
cmp
push
pop
push
loope
sti
test
int
mov
cmp
fisubrs
std
cwtl
std
adc
cmpsl
and
test
out
sub
push
je
pop
inc
shll
cmpsb
pop
pop
pop
push
pop
in
push
jg
fldt
and
add
arpl
sbb
or
and
inc
lcall
mov
fiaddl
cmpsl
xor
lcall
sub
das
sub
push
xor
iret
mov
mov
sbb
push
cld
outsb
shlb
cs
inc
or
xor
fldenv
out
or
adc
jno
sbb
mov
aaa
loope
aad
ficoml
sub
repnz
xchg
dec
mov
or
or
iret
stos
scas
stc
cmpsb
arpl
icebp
imul
or
adc
inc
cwtl
jl
aad
dec
dec
dec
cwtl
test
cld
int3
mov
les
div
pop
cmpsb
mov
cmp
je
xor
mov
inc
lea
ficompl
pop
jb
sbb
sub
and
pop
cltd
and
mov
in
cwtl
sbb
aad
or
insl
jg
inc
inc
jbe
push
adc
addr16
ret
mov
addr16
enter
pop
cs
int
movsl
push
int3
inc
cmpsb
xor
movsl
mov
icebp
mov
pop
mov
mov
repnz
ja
inc
push
sbb
insb
cmp
ss
shrb
jno
mov
fsubp
jb
out
call
lods
rep
cwtl
push
outsl
imul
adc
scas
popf
xor
lret
pop
out
loopne
add
mov
jge
aaa
jp
aam
fcoml
fcoms
bound
aam
dec
jno
mov
jo
pop
ljmp
cmp
cmpsl
cltd
test
loop
adc
add
fst
negl
fcomps
inc
push
mov
mov
testb
dec
adc
sbb
adc
stos
icebp
jno
repz
test
lret
adc
test
sbb
cwtl
mov
fistpl
call
sub
testl
adc
dec
jp
repnz
movl
imul
sub
sub
xchg
mov
push
lahf
pop
mov
cli
clc
push
mov
outsb
psubusw
pop
lahf
dec
pop
mov
std
into
addr16
pop
add
mov
sbbb
adc
rcr
movsl
jns
mov
sub
outsb
fdivr
fists
or
fdivrl
jne
xchg
adc
xchg
out
cs
mov
pop
lods
and
adc
cmpsb
jle
pushf
out
and
push
js
out
lock
call
mov
in
and
lods
lret
out
cld
loope
sbb
out
jmp
jl
in
jne
pop
es
xchg
lret
push
in
leave
lods
xor
xchg
insb
sub
fs
enter
test
les
xchg
cmp
adc
adc
js
std
xor
dec
dec
push
scas
pop
push
cmp
xchg
or
fcomps
stos
mov
push
iret
jo
mov
sub
and
dec
or
scas
cmc
sbb
movsb
add
jns
int3
jno
ja
mov
adc
movsb
inc
jnp
mov
pop
iret
mov
out
pop
andl
loop
leave
and
jg
test
mov
push
xor
fldt
addl
movsb
inc
in
jae
push
dec
ds
mov
or
test
pop
xchg
es
xchg
xor
clc
jmp
fxch
dec
or
ret
cltd
stos
addr16
scas
push
ljmp
fdivr
xor
dec
or
mov
ret
cmp
adcl
stos
imul
cmpsl
mov
xor
adc
push
imul
lret
mov
rcrb
stos
mov
mov
test
popa
jbe
lods
mov
hlt
mov
arpl
add
sub
mov
jecxz
scas
xor
pop
jnp
stos
push
cmp
push
roll
sbbb
lea
inc
in
insb
and
dec
mov
jae
jecxz
inc
lret
daa
shrb
or
xchg
pop
add
rcrb
or
mov
insb
lret
jb
shrb
int
mov
fldt
fwait
mov
shl
ficoml
mov
jge
push
xlat
aaa
stc
mov
jne
xchg
pop
dec
rcrl
fstps
jecxz
push
cld
pop
sub
popa
fmuls
mov
stc
mov
pop
movsb
mov
sbb
ret
cmp
adc
fnstenv
icebp
int3
stos
pop
push
or
fbld
jl
push
dec
outsb
jg
rorl
jle
ss
test
xchg
mov
dec
es
jnp
pop
popa
and
pop
dec
shlb
sub
mov
dec
mov
sub
out
and
test
lock
pause
aam
loop
pop
cwtl
pop
int3
cmpsl
movsb
jmp
mov
pop
mov
dec
ljmp
iret
cs
mov
jne
fnstsw
sub
fldt
or
mov
dec
arpl
adc
mov
pusha
mov
ja
fisubs
jp
pop
mov
sbb
mov
mov
and
aaa
incl
loop
mov
and
mov
pop
add
xchg
adcb
mov
push
mov
add
loopne
in
jmp
rolb
jb
testl
cwtl
out
fxtract
adc
sbb
addl
mov
cmp
repz
aad
xor
or
aad
ljmp
and
sbb
les
xor
xchg
jno
gs
cld
negb
bnd
jns
jo
lds
lods
fsubl
adc
push
fsubr
mov
ret
call
ficoml
not
shll
outsl
pop
adc
push
fimuls
push
cmp
xor
adc
and
arpl
xchg
mov
fwait
in
imul
dec
std
into
movsl
lcall
xor
mov
xchg
pusha
std
mov
sub
push
mov
popa
xchg
je
out
aad
aam
fstpt
sub
and
jmp
in
mov
lea
xor
mov
and
and
dec
int3
int
mov
cmp
inc
mov
jb
and
pusha
push
mov
ret
xchg
ret
cmpsl
pop
pop
inc
push
in
sub
pop
sub
ljmp
mov
movsb
fnsave
mov
jnp
pop
shrl
mul
dec
ds
sub
dec
push
add
pop
push
pushf
aam
insl
insb
cmp
pop
popf
sub
outsb
aam
aam
negl
pop
pop
mov
xor
cmp
mov
aam
xchg
jp
mov
jns
mov
sub
mov
lahf
popf
jecxz
pop
data16
cmc
xchg
test
bound
arpl
sbb
mov
in
jno
fildl
mov
xor
dec
sbb
add
mov
jge
not
jle
xor
mov
adc
jbe
out
jecxz
jo
xchg
rorb
jge
mov
adc
xchg
jle
cmp
cmp
push
dec
je
in
ss
out
sahf
xchg
call
dec
insl
xor
add
push
movsb
movsl
or
mov
push
arpl
adcb
push
xor
dec
mov
popa
sub
dec
jne
popa
fists
jmp
xor
insl
sub
sahf
cwtl
rcll
sahf
or
loope
aad
rcrl
push
subl
jl
and
sub
pop
jae
std
lahf
inc
push
dec
xor
mov
or
cmpl
stc
dec
test
mov
ret
pop
pop
sub
daa
lret
cmp
hlt
push
xorb
sbbl
and
repnz
dec
pop
adc
hlt
xchg
in
cmp
mov
cltd
pushf
adc
int3
inc
sub
nop
rcrl
dec
sti
popf
push
ret
sub
cwtl
sahf
ja
rep
cmp
dec
pop
inc
js
add
mov
and
mov
cltd
int3
and
loope
add
sub
sbb
sti
adc
or
lcall
iret
repnz
xor
adc
test
cmp
test
insl
push
xchg
dec
mov
icebp
in
les
mov
and
push
mov
fsubrs
or
enter
or
xchg
popa
dec
adc
insb
movsb
xor
mov
xor
dec
divl
mov
and
es
cmp
xchg
xor
adc
ficompl
sbb
into
cltd
jae
pop
inc
in
scas
xchg
addb
shrb
ss
xchg
cmp
sub
and
fs
aad
test
mov
xor
mov
mov
xchg
inc
xchg
push
sub
mov
mov
jno
xor
push
mov
mov
xorb
or
xor
inc
mov
inc
insb
pop
push
inc
jmp
movsl
push
scas
lds
test
sbb
call
push
sarb
adc
mov
lret
sbb
xlat
divb
cmp
sbb
andb
out
mov
mov
jns
jns
out
adc
xchg
jne
xchg
xchg
insb
cmp
add
and
jle
call
dec
scas
scas
aam
mov
sbb
mov
in
push
lret
sub
fs
pop
push
scas
cmp
dec
cwtl
loop
dec
xchg
cli
inc
cmp
push
dec
leave
mov
cld
xor
pop
leave
in
mov
adc
pop
pop
ror
mov
scas
inc
sbb
push
lcall
cmpsb
aaa
rclb
mov
test
je
cmpsb
xchg
adc
mov
mov
mov
ljmp
jmp
push
cli
aad
jbe
mov
enter
mov
dec
movsl
aad
popf
jle
mov
addr16
sub
enter
xchg
js
ror
pop
push
sbb
jle
punpckhbw
cltd
insl
pop
jae
inc
inc
std
pusha
dec
mov
aam
fsubp
fisubrl
test
mov
rolb
outsb
jecxz
stos
movsb
cwtl
ja
into
das
dec
fldenv
cmp
jmp
fimuls
push
cmp
xchg
xchg
hlt
lods
inc
and
mov
jle
pop
cmpsl
mov
pop
dec
lcall
shll
xchg
dec
inc
ss
push
xor
imul
pop
inc
popf
ja
popa
dec
push
pop
ficoms
popa
dec
das
stos
push
sahf
jl
inc
inc
ds
out
ljmp
pop
cld
and
jo
and
mov
add
mov
pop
mov
lods
xlat
xor
in
sbb
rorb
mov
mov
push
pop
add
insl
lret
jl
jle
pop
sbb
mov
mov
arpl
enter
inc
fldenv
dec
add
mov
das
lock
dec
loope
cmp
push
sub
aam
ss
je
lcall
and
xlat
xchg
pop
test
jecxz
incb
xchg
inc
adc
mov
xor
xor
add
dec
scas
icebp
loopne
cltd
in
xchg
mov
inc
mov
addr16
lret
sub
cmp
insl
pop
mov
or
add
inc
lods
cmp
mov
dec
out
lret
outsl
pop
mov
std
cli
pushf
test
lods
mov
mov
aad
fnstsw
popf
mov
ljmp
xorl
arpl
aaa
mov
mov
ss
dec
or
rcl
jne
xchg
or
test
push
mov
je
adc
int3
data16
ds
or
mov
in
sub
xor
mov
dec
mov
inc
inc
loopne
dec
aam
mov
es
xchg
jno
inc
aaa
xchg
lahf
mov
mov
xchg
mov
and
xchg
mov
nop
repz
mov
jmp
hlt
mov
enter
jle,pt
jle
pop
lret
mov
push
mov
xor
lcall
shlb
xchg
mov
mov
mov
mov
mov
icebp
mov
cmp
mov
mov
or
xchg
jb
mov
adc
arpl
leave
jle
adc
fdivr
orb
or
sub
dec
hlt
outsb
and
mov
icebp
xorl
fsubs
leave
ja
fwait
add
leave
out
ljmp
in
pushf
sub
inc
pushf
mov
adc
add
push
divl
push
mov
add
add
cli
jge
mov
dec
adc
shrb
push
jmp
pusha
test
xchg
mov
pop
sbb
iret
pushf
mov
lods
cmp
mov
inc
sbb
sub
push
imul
or
fistpl
lods
adc
xor
xchg
pop
inc
orb
push
mov
pop
or
pop
pop
sbb
mov
dec
adc
jne
out
cmc
out
pop
dec
xchg
lods
jp
loop
shl
cmpsb
push
fldcw
ficoml
popw
mov
sti
mov
push
push
sub
mov
mov
mov
xchg
push
pop
fs
cmp
shll
jge
dec
mov
sub
jge
flds
dec
mov
sub
sub
or
fidivs
cli
out
insl
and
inc
and
or
iret
push
mov
mov
cltd
jge
mov
inc
iret
sbb
rol
dec
dec
and
pop
ljmp
gs
and
repz
pop
int3
sub
mov
ss
push
dec
sbb
ss
jnp
scas
dec
pushf
fneni(8087
xchg
cwtl
aam
jp
stc
push
negb
mov
push
icebp
data16
inc
or
adc
adc
sti
mov
insl
jg
adcl
lods
ss
dec
sub
aaa
jge
lret
mov
xchg
jg
call
rcrl
lret
xchg
or
idivl
in
std
jnp
into
inc
sbb
cs
add
pop
mov
fldcw
dec
cli
push
xchg
loop
dec
repnz
addr16
into
xchg
mov
fdivrs
xor
sbb
xchg
clc
xor
hlt
dec
int3
ds
pop
xchg
in
xchg
cwtl
sbb
jne
xchg
dec
sub
lea
cltd
jl
push
sub
sub
mov
jmp
push
dec
or
mov
jns
in
add
xchg
je
scas
cli
loope
inc
das
add
cmp
dec
wbinvd
pop
mov
fwait
mov
dec
idiv
insw
xchg
loope
cmp
and
test
mov
idivl
int3
mov
ljmp
push
lahf
cmpl
test
push
hlt
push
push
fs
jge
cmp
jae
pushf
pop
insl
cmpsl
rep
aas
push
lret
pop
cmp
nop
and
fldenv
inc
insb
jg
and
ja
xor
sbb
gs
lods
push
mov
es
dec
inc
xlat
dec
inc
inc
push
mov
test
cmc
or
xchg
adc
pop
das
push
xor
cs
pop
sbb
stos
lods
or
xor
aaa
das
ljmp
ret
lods
data16
cmp
adc
mov
inc
cmova
sbb
leave
mov
jnp
cwtl
jnp
movsb
jo
es
xor
lods
or
ds
shrb
adc
iret
sub
jge
ret
insb
pusha
sub
xchg
jmp
or
jp
dec
mov
fldt
xchg
mov
lods
lock
out
pop
into
mov
xchg
pop
mov
int
scas
push
sbb
xchg
sub
imul
adc
sub
roll
sbb
lcall
mov
in
pusha
mov
loope
shrb
testl
out
addb
sub
call
ret
add
mov
inc
mov
cmpsb
stos
pop
mov
mov
test
dec
mov
push
test
or
js
jae
cmp
jo
add
lock
aad
push
add
insb
fxch
out
test
or
mov
jns
loop
mov
imul
push
jge
pop
aam
lock
cmp
xorl
dec
stos
mov
insb
out
arpl
lds
mov
je
out
ret
xor
add
loopne
mov
or
loopne
sbb
shrl
cwtl
cmp
xchg
cmp
popf
sub
xor
jns
scas
test
addr16
out
push
jp
stos
cmp
sbb
pop
data16
fstpl
mov
push
fwait
cwtl
and
pop
js
ficoml
add
sbb
push
add
xchg
stc
fs
cmp
scas
in
les
cli
inc
pushf
dec
and
shl
movsl
mov
fcomps
push
push
bound
mov
inc
mov
mov
lret
or
adc
cs
cmp
sub
dec
addl
movsl
add
clc
mov
push
sbb
rorl
outsl
adc
shlb
xchg
push
aaa
dec
je
lea
das
ja
insl
jnp
sbb
loopne
or
adc
popf
lret
sub
sub
dec
fmul
pop
bswap
sub
insl
push
outsb
cmc
addr16
aas
mov
and
stos
pushf
imul
fwait
mov
add
aas
cmp
cs
mov
mov
aam
insl
push
mov
push
mov
xor
jg
xor
insb
sbb
cmp
mov
pop
mov
jl
test
je
mov
add
or
imul
sub
mov
cmc
aad
and
mov
mov
pop
and
popf
loop
inc
jmp
sbb
movsb
cmp
lahf
add
lcall
stos
xchg
mov
mov
jg
cmp
sarl
lret
dec
jno
dec
add
mov
push
push
loop
sub
and
pop
sub
inc
sbb
or
xor
jecxz
out
xchg
icebp
lods
jne
cmpsl
push
aaa
and
ljmp
ss
lea
fwait
cmp
movsb
in
rolb
adc
lret
xchg
mov
sbb
vmread
xchg
int
call
lods
outsb
xchg
and
or
cmp
pop
jns
pop
push
lds
les
pop
subw
addl
mov
jp
test
enter
inc
stos
and
test
test
mov
roll
push
push
fwait
xor
scas
push
ret
test
int3
push
andl
xor
imul
aam
jbe
or
or
out
outsl
mulb
inc
sub
outsl
pop
pushf
cmp
jmp
xor
sub
jp
idiv
jmp
sbb
jmp
adc
inc
inc
enter
inc
inc
mov
mov
push
push
pop
mov
cmp
loope
test
fcomp
sbb
pop
sbb
movb
sub
adc
imul
xchg
in
jp
aad
push
xchg
mov
cmpsb
adc
outsb
push
loope
out
mov
push
push
popf
out
pop
jo
pop
dec
sub
jne
xchg
jbe
sbb
jle
loopne
scas
gs
adc
cltd
int3
xor
out
xchg
leave
pop
pushf
cmp
mov
mov
or
sbb
pop
lahf
and
xor
or
lods
or
jne
aad
mov
add
mov
mov
cmp
frstor
test
scas
lods
add
jbe
mov
gs
sub
add
jecxz
mov
inc
nop
int
xor
cwtl
xor
fisttpl
dec
nop
mov
jbe
mov
fiadds
int3
aam
pop
pop
add
and
addl
ror
fisttps
lahf
mov
ret
inc
sar
and
cmp
enter
or
mov
call
in
xchg
dec
and
dec
push
jo
je
push
xchg
sbb
jb
jb
cmc
movsb
repnz
inc
psubb
xor
aas
sub
sbb
lcall
jmp
jne
sub
loop
lods
mov
imul
jp
mov
mulb
fisubrs
adc
xor
int3
jnp
pop
sbb
jae
mov
addr16
fmuls
inc
xchg
sarl
in
and
call
mov
lret
cmpsb
or
test
pop
xor
push
inc
push
int3
repz
cs
or
push
nop
insb
testb
pop
xchg
ja
dec
jecxz
add
popa
push
out
cmp
popf
loop
sbb
addr16
movsl
add
pop
push
pusha
aam
mov
add
test
jne
cmp
enter
xchg
ja
adc
mov
outsl
ss
sub
sub
stc
imul
mov
es
stos
and
jmp
fs
jae
sbb
stos
ret
stos
scas
sbb
fstps
addl
pop
push
insb
inc
dec
add
dec
jle
std
or
cmc
cmp
sub
or
dec
pop
xor
xchg
and
pop
loopne
mov
fiaddl
pushf
rcll
jbe
ja
mov
lds
lret
mov
sbb
ljmp
rorl
push
jbe
and
ret
sbb
scas
fisubs
faddl
test
pop
mov
mov
daa
andb
adc
fiadds
fcmovne
mov
xchg
gs
dec
push
sti
mov
or
dec
shl
daa
in
scas
outsl
pop
mov
dec
push
mov
loope
xchg
call
loop
dec
push
cwtl
insl
into
sbb
push
push
cli
pop
je
rcrl
aas
fistpll
stos
mov
cld
xchg
cmp
inc
sub
add
das
mov
lds
mov
add
jg
mov
mov
xchg
push
and
andl
mov
push
pop
or
dec
jb
mov
mov
stos
sbb
sbb
inc
mov
adc
jmp
inc
cmp
inc
dec
push
lock
dec
sub
cld
adc
mov
popa
into
adc
aad
daa
ss
fidivrl
and
out
cmp
out
mov
adc
pop
lds
add
fcmovnb
jle
jecxz
jb
rcr
lds
mov
fildll
pop
out
push
mov
xchg
push
and
or
dec
jb
jae
pop
test
repz
leave
jae
adc
mov
popf
cltd
mulb
cmp
sub
mov
cltd
pop
push
gs
in
mov
jp
jae
das
aaa
xchg
scas
es
lock
push
ret
and
enter
mov
inc
sub
jae
movsb
push
xchg
pop
scas
shl
loopne
ror
in
sub
xchg
push
int3
in
fcomp
mov
repz
push
lods
push
jge
ja
xor
popa
pushf
mov
dec
or
and
lods
outsl
dec
mov
cld
push
addr16
int3
sbb
arpl
sahf
stc
xorl
and
mov
sub
in
and
mov
or
sub
fisttpll
push
or
and
cmp
sti
xchg
push
bound
xlat
jno
stos
mov
sub
fidivrs
cld
mov
inc
scas
addr16
ret
mov
dec
js
inc
inc
ret
test
add
sub
cmpsl
fdivr
lcall
enter
push
inc
leave
xor
pop
lods
sub
lret
ret
rorb
or
pop
std
add
jmp
popa
pop
jmp
pop
mov
mov
sbb
xchg
ret
mov
jbe
dec
or
cltd
arpl
jb
pop
adc
jb
pop
push
cmp
cmp
repz
cmpsl
jp
cmpl
clc
fcoms
loop
xorps
mov
lret
addr16
insl
test
jle
mov
rcrl
neg
jmp
mov
sbb
xlat
mov
mov
imul
movsl
inc
scas
clc
ret
fwait
js
and
adc
std
mov
jge
test
and
lret
arpl
sub
jecxz
enter
adc
cltd
movsb
or
ret
push
dec
xchg
inc
fsubrl
cltd
cmpsl
dec
aas
cmc
lock
mov
scas
jle
sub
sbb
dec
loop
xchg
push
push
pushf
enter
cli
data16
in
fcoml
inc
xor
push
and
subl
out
imull
dec
cmp
xor
pop
add
sbb
pusha
dec
fcomp
jne
out
rolb
jle
dec
push
cmp
mov
hlt
sub
push
sub
pop
ja
ficomps
iret
dec
push
icebp
add
jecxz
je
sub
nop
lea
call
and
cmp
sbb
movl
inc
es
fstpt
pop
xchg
mov
sbb
fldt
aaa
cmp
pusha
test
cmp
ret
mov
add
adc
or
ret
cmp
lock
mov
jo
das
adc
sbb
adc
sbb
subl
es
dec
aad
xchg
pop
mov
jle
je
insl
nop
sbb
mov
or
idivl
jmp
sti
movsl
mov
mov
popf
ss
shl
iret
arpl
int
rolb
lret
pop
mov
adc
mov
ss
pop
jle
out
pop
jle
shlb
hlt
push
loop
or
pusha
sbb
jmp
fcmovnbe
js
repnz
push
push
arpl
imull
les
test
gs
mov
jg
sbb
je
insb
xchg
mov
mov
lods
fcompl
mul
add
out
xlat
or
fwait
adc
adc
aas
mov
pop
xor
pop
inc
popa
and
cmp
jg
mov
mov
aaa
lods
scas
addr16
cmc
push
sub
jae
ja
xor
push
arpl
ds
push
adc
sub
repnz
sbb
sub
xlat
ret
cmp
into
movsl
into
pushf
pusha
push
pop
call
testb
pop
arpl
xor
cmp
xchg
shlb
rcll
dec
push
test
nop
in
enter
xchg
rclb
sbb
mov
ljmp
pop
sbb
mov
clc
fwait
dec
mov
das
push
sub
cld
or
nop
incl
cmpl
sbb
lds
pop
and
lods
dec
int3
jecxz
xor
mov
out
add
add
ljmp
insb
pop
aad
movsb
fmull
xor
xchg
out
bts
in
stc
into
cli
pop
mov
add
mov
push
cmp
in
pusha
push
js
or
sarl
sbb
jmp
mov
adc
mov
or
popa
jle
ficompl
mov
jno
lock
gs
xchg
mov
jno
fchs
scas
lds
lret
enter
pop
gs
mov
cmp
xchg
add
lods
xor
mov
out
jo
ja
sub
and
mov
call
dec
sti
ja
sub
inc
int3
push
pop
jb
xor
int3
nop
lcall
pop
mov
nop
push
mov
repz
loop
cmpsb
adc
mov
rcll
inc
jo
jo
loop
pop
in
mov
lcall
xor
and
ss
adcl
inc
fdivs
xchg
and
add
mov
push
mov
mov
pop
sub
mov
cli
arpl
dec
sbbl
lcall
je
inc
push
sub
mov
das
pop
inc
mov
movsl
pop
test
cmp
and
popa
rclb
cmp
pop
sbb
jbe
ljmp
std
sub
push
out
and
addr16
mov
jle
mov
std
imul
je
pop
xor
fs
mov
cli
cmpsl
cltd
in
fwait
out
test
in
or
lods
lret
in
sar
push
aaa
movlps
xchg
shll
xor
xchg
in
pop
mov
add
jae
lahf
sahf
rol
dec
pop
jl
cmpl
cli
or
lret
fsubs
inc
pop
mov
sbb
movb
and
out
clc
rolb
into
in
mov
push
test
sbb
popa
arpl
push
mov
stos
std
sti
mov
hlt
out
fidivl
mov
rorl
mov
sub
addr16
jns
jno
jge
mov
cmp
add
inc
xchg
xlat
or
jae
outsb
add
mov
ficoml
xor
aas
and
js
mov
dec
xchg
xor
stos
into
jl
int3
jae
dec
pusha
ret
pop
xor
adc
jge
mov
add
mov
or
test
jns
inc
mov
cmp
roll
mov
cmp
inc
stos
jge
xchg
divb
cmpsb
scas
cmp
and
xor
insl
jmp
loopne
pop
pop
push
jbe
adc
and
xor
loope
aaa
hlt
jae
mov
xor
cmpl
or
xchg
xchg
adc
jecxz
fldt
xor
nop
dec
sbb
idivl
iret
push
popa
fstl
mov
pop
inc
mov
xor
pushf
ss
out
sbb
xor
sbb
adc
lret
lret
push
add
clc
out
xor
sub
nop
pop
ds
push
data16
lods
insb
loope
inc
add
es
test
loope
xor
adc
sti
gs
mov
jns
dec
call
or
shrb
sbb
add
and
pop
stc
dec
out
fsub
ds
push
cs
add
hlt
mov
jle
and
add
ss
jae
cmc
stc
arpl
ret
daa
mov
aas
or
mov
rcrl
inc
mov
inc
mov
cmp
inc
jb
mov
push
faddl
push
aas
mull
xor
pop
test
std
mov
inc
dec
sbb
mov
dec
test
push
xor
or
or
shll
jno
aam
sub
xor
movsl
lcall
sahf
sub
dec
inc
fwait
add
das
fidivrs
js
lea
mov
inc
popf
xchg
push
sti
dec
aaa
jno
sub
xor
ljmp
aaa
inc
inc
or
loope
mov
clc
xchg
add
int3
mov
xor
mov
or
pushf
xor
adc
adc
scas
insl
jbe
mov
arpl
or
mov
or
xor
inc
fimull
sub
clc
cmp
lea
mov
and
subb
dec
inc
mov
adc
sbb
fs
lret
pop
sbbb
lret
xor
dec
xor
add
das
dec
bound
cmp
imul
mov
sbb
or
test
shlb
mov
push
cs
xor
pop
push
fwait
gs
pop
mov
lds
and
scas
push
push
mov
mov
gs
xor
mov
inc
mov
fisubs
and
add
sti
repz
push
dec
xchg
xchg
das
addl
dec
push
mov
mov
iret
addps
notl
xchg
cmp
push
repnz
cwtl
inc
sub
lret
dec
lret
mov
xor
bnd
or
push
push
or
pop
xchg
in
push
add
mov
push
sti
stos
addb
pop
inc
orb
adc
gs
out
mov
jle
ja
dec
mov
out
fs
mov
push
gs
push
or
xchg
call
in
out
ror
es
mov
push
mov
dec
out
outsb
loopne
fists
xchg
jmp
add
xor
insb
push
aas
inc
mov
and
js
push
mov
xchg
aaa
out
sbb
test
scas
test
cwtl
pop
sub
stos
dec
add
xchg
ljmp
es
jge
sbb
sti
scas
inc
into
mov
jg,pn
outsl
jmp
jmp
pop
enter
in
inc
cmpb
mov
or
aam
mov
push
shrb
loop
nop
rorb
das
xchg
sbb
jbe
xchg
cmp
and
lock
mov
push
scas
stc
mov
in
xchg
xchg
nop
mov
cmp
adc
adc
push
insb
and
test
inc
adc
in
out
into
pop
mov
jb
pushf
enter
out
mov
sahf
je
xor
out
lret
sbb
imul
scas
add
icebp
mov
sbb
push
xchg
mov
or
ss
in
dec
add
add
test
mov
jno
lods
xor
rclb
pusha
pop
repnz
sbb
or
out
mov
jmp
inc
psrad
jecxz
leave
jle
fwait
mov
mov
cmp
roll
cmp
push
xchg
push
je
out
jg
popa
scas
mov
aad
lods
insb
or
pop
add
xor
adcb
mov
inc
sti
into
jg,pn
loop
addr16
loopne
fnsave
mov
mov
jo
pusha
jg
pop
pop
inc
xchg
push
dec
scas
push
lock
enter
xor
pop
data16
and
icebp
add
pop
insb
mov
repz
dec
mov
jmp
and
insl
ret
cmp
mov
xor
sahf
and
stos
int3
adc
pop
cs
add
aad
cmpsb
mov
inc
push
xchg
sub
les
mov
icebp
pop
sub
xchg
je
sahf
lea
popf
ret
xchg
xor
push
popa
outsl
std
lods
aam
sub
aad
mov
and
sbb
sub
adcl
test
dec
fcoml
xorb
out
fimuls
or
pop
stc
sahf
sbb
adc
js
add
mov
aas
fdivrs
jge
dec
mov
push
icebp
cmc
ja
sbb
adc
lea
clc
addb
push
sbb
pop
add
jmp
mov
jno
adcb
gs
leave
pop
push
sahf
add
jp
popa
in
dec
jp
push
mov
or
testl
mov
sbb
xor
add
imul
inc
imul
xchg
dec
ljmp
push
fisubrl
into
out
inc
push
push
add
or
orb
fs
aam
jnp
lods
mov
mov
test
pushl
enter
inc
lock
cmp
aam
sarl
les
ss
stos
adc
and
js
aad
aam
adc
scas
cltd
mov
mov
aaa
xor
xchg
push
inc
into
dec
add
pop
sti
call
adc
stos
out
jno
mov
test
dec
xchg
push
inc
sub
dec
dec
sub
add
cwtl
mov
sub
test
mov
and
data16
shrl
insl
sbb
dec
insb
clc
adc
mov
and
and
jno
adc
pop
std
cmp
icebp
add
insl
mov
adc
pop
repnz
jecxz
test
lahf
out
adcl
test
sbb
push
mov
mov
sbb
ret
enter
jle
sbb
jp
sub
cmp
cli
jle
xchg
mov
outsb
into
add
into
push
hlt
dec
push
ss
js
jbe
mov
pop
mov
push
mov
aad
into
mov
inc
mov
inc
imul
repnz
and
mov
cld
jnp
stc
lods
add
cmpsl
fimuls
imul
push
mov
clc
xor
or
int
xchg
pushf
fnstenv
mov
fadds
xor
cmc
roll
mov
sub
inc
adc
popa
xchg
mov
nop
inc
imul
pushf
sti
jnp
rcll
popa
outsl
dec
pop
xor
xor
jl
sti
adc
dec
add
fistl
cwtl
add
sbb
inc
dec
mov
rorl
bound
adc
mov
add
sub
out
mov
ret
jg
xchg
pop
test
cmp
pop
lods
fs
les
cmp
adc
add
and
flds
shll
xchg
jns
addr16
cmpl
in
sbb
cmp
jmp
xor
mov
in
xchg
mov
daa
pop
adc
pop
jb
adc
fsts
jg
outsb
jg
fs
shrb
add
sbb
mov
dec
mov
cwtl
cs
das
ret
adc
gs
loop
scas
pusha
lret
sbb
popa
ret
pop
cmc
scas
lahf
or
fsubp
pop
pushf
into
inc
stos
mov
pop
test
ss
push
bound
and
dec
nop
sub
xlat
sbb
iret
cwtl
lods
xor
pop
out
or
sbb
mov
mov
sbb
xchg
shrb
cmp
sbb
out
leave
out
push
aaa
fs
add
cmpsb
divl
mov
inc
mov
insb
and
and
or
add
scas
jo
andb
sbb
cmp
xchg
scas
cmp
inc
pop
dec
jnp
lcall
pop
ffree
mov
test
fidivrl
addr16
sub
inc
jb
std
pop
sahf
or
cmc
cmpsb
mov
xchg
fcomp
mov
or
xlat
movsl
mov
test
and
push
imul
test
movsb
daa
mov
fwait
xchg
adc
je
lea
add
sub
push
ds
int3
shrl
popa
pop
mov
dec
imul
inc
ljmp
stos
dec
jns
pop
pop
scas
push
inc
test
std
cmp
mov
ljmp
daa
add
mov
mov
sbb
xchg
or
sbb
add
sub
inc
lahf
test
push
aas
pop
movl
shll
mov
repnz
fists
sub
pusha
cmp
out
ljmp
push
cltd
push
and
cs
inc
hlt
sti
cmpsl
jle
lods
pop
dec
mov
and
stos
lcall
add
mov
mov
cmp
xchg
push
popa
je
mov
mov
in
addb
cmp
lahf
sbb
sbb
mov
adc
xor
push
jo
fildl
push
aas
mov
mov
nop
push
in
push
fcomi
out
arpl
aaa
popa
add
add
mov
cli
pop
pop
pop
insb
pop
inc
scas
data16
and
in
and
sbb
adc
aas
bound
push
fwait
clts
sti
leave
daa
sbb
rcll
hlt
fcompl
add
negb
loop
in
mov
enter
std
adc
add
cmp
jne
sbb
dec
xchg
in
out
mov
mov
movsl
inc
lods
test
xor
add
jp
mov
inc
lea
fistl
push
fcomp
jl
daa
jne
pop
sub
lds
jns
add
stos
test
push
cld
rorl
push
shlb
lds
insb
mov
gs
adc
jle
nop
inc
add
imul
fcoml
jg
js
cmp
test
sub
in
in
clc
lock
jbe
add
xor
jb
aas
or
shld
cld
addr16
and
arpl
sbb
pop
mov
fs
test
std
jecxz
rcr
in
mov
xor
andl
dec
push
aam
cmp
push
pop
pusha
imul
add
xchg
and
out
jecxz
rol
out
test
pop
fstpl
frstor
push
je
push
pop
das
imul
sbb
bound
test
sbb
push
bound
loope
or
nop
xor
int3
xchg
in
fs
sub
hlt
or
dec
sub
mov
stos
cmp
xchg
test
mov
dec
repz
adc
mov
sahf
je
ss
icebp
sub
mov
clc
pop
and
mov
lds
mov
test
testb
insb
loopne
test
out
mov
xchg
lcall
fisubrs
insl
test
adc
fwait
add
icebp
mov
test
ret
cmp
xchg
inc
ret
arpl
out
xchg
mov
jmp
mov
sbb
push
lds
cwtl
test
sbb
in
test
ficompl
out
fdivrl
test
mov
xchg
pop
repz
stc
push
xchg
lret
pop
sub
lahf
push
adc
gs
into
notl
xor
pop
mov
mov
push
xor
pop
aad
cmp
sbb
add
popa
pop
test
push
mov
insb
or
xor
popa
push
push
mov
mov
and
mov
push
gs
cld
mov
mov
inc
cmp
inc
roll
add
push
das
sbb
xchg
adc
fiaddl
es
lock
and
lds
push
xor
inc
push
daa
jae
out
sbb
es
xlat
sub
mov
int3
ja
sub
dec
gs
sbb
out
add
lods
dec
jno
pop
dec
test
shlb
sbb
imul
std
clc
pop
inc
sbb
daa
movsb
xchg
cmpsl
jns
mov
js
dec
mov
fucomip
cld
into
pop
fiadds
lahf
imul
pop
xchg
outsb
xchg
mov
frstor
lcall
rorl
add
gs
sarb
cmp
push
dec
adc
cwtl
pop
scas
lret
test
or
mov
xchg
pop
fdivr
in
stc
sub
insl
jl
data16
cmc
fsubl
mov
addr16
dec
cmpsl
test
jne
fwait
adc
mov
push
call
push
push
push
add
mov
fbstp
gs
fimull
out
cld
mov
sub
jp
mov
xchg
mov
xor
cli
jecxz
sbb
cli
or
mov
inc
out
out
push
out
lds
push
add
arpl
adc
fdivrl
frstors
xchg
jmp
cmp
sbb
mov
inc
cmp
cmp
sarl
js
mov
imull
ss
mov
push
and
bound
cmp
cmp
jecxz
cli
xchg
jbe
fistpll
adc
dec
xor
push
mov
out
jle
add
movsl
aad
jb
mov
std
jle
jnp
ss
andl
je
push
sarb
mov
jns
insl
sub
ja
cli
lods
xchg
inc
xorb
call
outsl
inc
adc
lcall
das
mov
rcll
aaa
in
and
out
mull
iret
mov
out
sti
enter
pushf
std
push
int3
xchg
jg
add
cmp
lea
out
aas
lods
repz
sub
es
imul
pop
and
push
scas
push
sbb
adc
shrb
xchg
push
and
loopne
add
mov
fsubrs
sbb
dec
push
out
loop
stos
jns
push
jmp
loop
test
lds
scas
scas
pop
sub
sub
jge
xchg
es
push
mov
cmc
cmpsb
loop
adc
aad
mov
xchg
loope
imul
jbe
jo
push
pop
out
sbb
add
js
shll
js
loopne
repz
and
mov
adc
dec
sbb
mov
ret
xorb
sarl
adcb
in
arpl
add
cmp
pop
insl
and
stos
mov
dec
mov
xor
xchg
lods
xlat
jnp
popa
popa
push
and
or
sub
aas
sbb
mov
cwtl
and
dec
inc
nop
js
decb
scas
loop
loop
xchg
fidivl
push
imul
bound
mov
dec
shlb
push
lcall
in
cmp
sub
shrb
or
sub
cmp
dec
adc
out
push
hlt
xor
inc
aas
cli
cmpsl
outsb
mov
add
nop
mov
pushf
sub
cmpsb
push
and
mov
lret
mov
cmp
cmp
mov
in
test
cli
das
stos
pop
into
clc
popa
and
sub
cli
pop
aas
mov
xchg
pop
sbb
pop
test
jle
les
test
lock
mov
sbb
dec
xchg
pop
mov
jbe
rorl
loope
pop
repz
cmp
inc
or
pop
jae
shlb
mov
push
call
mov
pop
or
inc
or
cmp
pop
xchg
lods
stos
fidivrl
dec
int
das
fsubr
xchg
jo
push
test
int3
cmpsl
pop
ljmp
stos
add
fcomp
push
pop
outsl
push
push
add
fstps
sub
jle
jmp
add
cli
lea
sbb
mov
sub
loope
lds
subb
jge
jl
mov
fldt
jne
and
es
jb
icebp
mov
cmpsb
cmp
mov
out
fsubr
mov
or
xor
into
lea
pop
mov
int
jnp
inc
loope
popa
ljmp
lcall
inc
xchg
faddl
ret
adcl
imul
outsl
out
aaa
test
dec
imul
addr16
lock
push
je
sar
jecxz
in
punpcklwd
jns
inc
nop
stc
lret
aad
add
push
sub
nop
mov
icebp
or
jle
ds
mov
and
cmp
sbb
cmp
jge
inc
inc
jae
popa
rorl
in
xchg
in
popf
bound
ret
js
xabort
imul
ljmp
xchg
dec
popf
push
inc
ds
data16
fcmovnb
ret
mov
xor
or
push
fs
lret
movsl
adc
adc
cmp
pop
daa
mov
dec
clc
lret
jg
sbb
mov
in
cmpsb
add
inc
mov
jl
push
and
stos
push
xchg
sti
pop
ret
pushf
xchg
lahf
aad
or
add
outsl
xchg
out
test
das
or
sub
loope
stc
lods
cmpsb
push
mov
ret
out
xor
cmp
push
pop
popf
jmp
lcall
add
pushf
loope
cmp
clc
aam
or
popf
decb
and
and
ds
cmp
pop
or
and
test
mov
pop
int
leave
xchg
scas
xchg
test
cltd
sbb
test
das
xchg
jp
mov
sub
inc
pushf
popf
cmp
ret
ret
xchg
sbb
std
jp
addr16
popa
fsqrt
faddl
ja
call
dec
inc
outsl
push
int3
mov
fldt
aad
sarb
scas
jmp
in
and
std
std
push
or
mov
sbb
lods
out
xor
popa
mov
sub
xlat
stos
orb
ucomiss
mov
fmul
pop
pop
inc
pop
jge
adc
adc
fcmovbe
dec
inc
aas
cmp
or
in
stos
sub
ss
xchg
xchg
dec
fwait
imul
rcrl
add
scas
push
pop
or
mov
push
mov
nop
pop
pop
pop
fcoml
fcmovbe
adc
mov
int3
adc
sub
ss
pusha
mov
sub
pop
fiadds
mov
call
push
pop
sbb
imull
scas
aad
mov
jp
stos
jg
dec
loop
xor
sub
out
ret
test
nop
hlt
hlt
movsb
outsl
sbb
dec
dec
mov
xchg
sub
jnp
dec
push
incb
out
mov
int
mov
cmp
call
jl
les
jo
add
sbb
push
mov
in
int3
aaa
cld
push
jne
or
jge
add
stc
sbbb
add
mov
mov
fistl
push
dec
and
dec
std
data16
push
mov
mov
cwtl
arpl
cmpsb
outsb
xchg
divl
pop
sub
mov
int
fcoml
mov
jo
fimuls
pop
mov
mov
adc
xor
mov
sahf
push
sbb
pop
ror
mov
ja
inc
cltd
daa
xchg
shlb
jb
ljmp
subl
in
fmulp
jne
loop
and
clc
and
scas
aas
lock
mov
mov
mov
mov
loopne
mov
xor
les
fs
mov
pusha
jge
sbb
cld
xchg
sub
jno
or
or
add
jecxz
mov
xchg
imulb
jmp
es
xor
mov
loop
repz
filds
in
mov
jge
push
adc
sub
pushf
js
cmp
xchg
je
sub
add
or
add
out
outsb
movsl
sub
dec
bound
xchg
dec
push
aad
in
lock
xchg
adc
xchg
and
sbb
f2xm1
pop
mov
call
sti
in
ficomps
out
xchg
insb
mov
push
mov
mov
cmpsl
into
popf
jge
inc
add
test
push
push
and
xchg
and
fstpl
out
mov
pop
pop
nop
insb
pushf
add
pushf
dec
sub
jae
arpl
fadd
in
push
ret
popf
xor
repz
mov
mov
xchg
popa
or
and
push
push
inc
mov
mov
aad
push
in
add
aaa
aas
fisttpll
jb
sbb
push
xchg
inc
negb
jge
out
arpl
fs
leave
stos
push
add
in
je
mov
cmp
mov
push
pop
push
add
jge
mov
xor
mov
movsb
cli
out
loope
mov
push
xorb
fdivrp
fdivrl
sbb
xor
rcrb
jp
inc
xor
jge
outsb
mov
fmull
clc
sub
mov
and
sbb
sbb
sahf
cmpsl
xchg
push
ret
inc
add
sub
cltd
ficomps
lcall
arpl
rcr
stc
pop
out
lea
aas
and
jecxz
sub
cwtl
shrb
or
repz
bswap
orb
cmpsb
insl
in
pop
int3
sub
sbb
je
mov
cs
loopne
hlt
push
nop
test
arpl
inc
pop
fwait
es
pop
arpl
aam
lods
fldenv
sahf
sbb
outsb
sbb
add
mov
test
and
scas
sarb
aas
test
fisttpll
bound
in
clc
or
in
lret
xchg
shl
fsincos
dec
jno
fadds
movsl
inc
ds
cmp
leave
jecxz
jmp
inc
cmp
call
pop
inc
jg
lea
mov
imul
sbb
sub
xchg
xor
lods
dec
sbb
push
pop
dec
aam
dec
jg
popa
insb
mov
inc
mov
int3
icebp
mov
add
xor
repnz
scas
hlt
outsb
mov
outsb
out
add
mov
add
divl
pop
lea
or
sub
lds
out
cli
int
shll
mov
cmpsl
mov
outsl
enter
jg
add
inc
ret
and
lret
inc
sbbb
jg
inc
fwait
sub
ss
sbb
popa
push
add
and
nop
jl
xor
push
jl
adc
sbb
mov
jmp
cwtl
cmp
mov
insb
mov
or
aaa
push
dec
scas
mov
adc
mov
test
push
push
add
mov
xor
stos
test
into
repz
xchg
test
imul
test
mov
pop
fld
inc
cmp
outsb
aaa
cld
push
add
in
movsb
push
xchg
mov
test
data16
push
scas
dec
push
mov
jg
mov
pop
xchg
rcrl
fwait
mov
sub
loopne
or
cmp
cltd
cmp
jb
popf
loop,pn
rcll
negb
lcall
pushf
test
inc
xor
dec
js
inc
mov
movsb
dec
out
daa
fcoml
in
repz
fldcw
cmp
mov
stos
pushf
lods
nop
sub
bound
lods
mov
jmp
inc
sbb
fstl
neg
sarb
pusha
or
addl
call
mov
mov
inc
imul
loop
daa
or
jbe
pusha
int
pop
andb
lods
stc
jge
pop
nop
cmpsb
adc
xchg
and
pop
loope
pop
ss
cmp
insl
push
ficoml
hlt
repnz
icebp
inc
lret
push
js
mov
imul
pop
jmp
pop
and
lods
aad
xor
sub
push
push
lods
icebp
xchg
mov
xchg
ljmp
jns
cmp
les
xor
cltd
cltd
sub
lea
insb
pusha
dec
mov
xchg
xor
mov
push
xor
insb
mov
pop
jnp
unpckhps
mov
repnz
je
sub
shlb
mov
test
push
push
and
daa
popa
into
clc
cli
std
lahf
jg
inc
lcall
mov
sahf
mulb
scas
lods
cmpl
push
cltd
jnp
mov
nop
mov
test
fisttpll
pop
aaa
cmc
lahf
jmp
lret
fsts
and
or
jmp
cmc
lods
imul
lock
xor
cmpsb
cmpsb
jo
add
imul
sbb
mov
gs
cwtl
pop
sub
mov
out
push
sub
pop
popf
pop
ret
mov
mov
mov
mov
push
call
push
ljmp
push
cs
mov
dec
mov
xlat
inc
add
sbb
mov
sbb
add
push
fwait
jae
popf
pusha
arpl
js
ds
and
dec
xor
loopne
push
xorl
icebp
stos
out
fimull
rolb
ljmp
je
jns
xchg
jmp
push
sbb
sbb
or
or
push
pushl
lods
jle
xorl
xchg
cmp
shll
dec
bnd
out
in
or
scas
xchg
add
in
repz
fsubrl
ljmp
inc
push
jl
lds
fstpt
xor
fists
jmp
sub
jb
loop
ljmp
xor
test
cmpsl
out
pop
mov
rolb
xchg
sbb
fs
test
imulb
pop
jns
adc
inc
shll
adc
test
adc
imul
xor
and
inc
xchg
sub
mov
testl
mov
and
arpl
ret
outsl
pop
adc
jl
inc
inc
jno
inc
xchg
dec
andl
ds
inc
sbb
imul
movsb
pop
pusha
inc
push
add
sbb
xor
ds
inc
or
in
mov
frstor
popf
pop
hlt
xchg
jecxz
adc
cmp
fld
lods
add
jg
push
fwait
int3
add
imul
mov
mov
in
push
iret
std
lods
and
push
pop
clc
sub
out
add
shll
lret
fstpl
out
test
push
pusha
into
in
aam
jecxz
or
mov
xchg
imul
pop
cmp
mov
cmpsb
hlt
sub
mov
cs
mov
and
scas
mov
and
ss
jae
mov
iret
jno
add
cmp
shrl
scas
les
rorb
mov
ficoms
pop
xchg
aam
mov
in
pop
insb
xchg
inc
mov
jb
mov
xor
aam
shl
or
jle
pushf
lds
test
pop
xchg
xchg
ret
ljmp
mov
sub
mov
xor
test
mov
insl
loopne
pop
in
jle
sti
lods
jmp
and
push
cld
cltd
fucom
inc
movsl
fdivrl
cli
lret
movsb
mov
push
mov
and
mov
push
repnz
stc
inc
sti
push
add
push
lahf
mov
pop
or
mov
and
int3
test
push
xor
mov
xor
and
lret
and
jmp
sub
ds
sahf
and
jb
and
shlb
mov
add
cmp
jmp
pop
lret
xchg
test
push
jle
out
xchg
adc
xor
test
fadd
mov
jbe
mov
es
mov
jnp
fsubl
mov
daa
mov
inc
in
shrb
xchg
test
inc
mov
or
pop
lret
adc
das
fldenv
mov
das
xchg
push
sub
mov
mov
popa
testl
xor
mov
jmp
mov
mov
jecxz
mov
ret
jle
das
and
lock
jne
pop
cmpsb
xchg
push
scas
and
pop
jns
aam
nop
xchg
popa
fildll
adc
clc
xchg
das
loop
sbb
push
mov
xor
lcall
rcl
cmpsb
mov
mov
xchg
lret
leave
fsubl
sbb
or
sbb
fdivrs
jecxz
verr
push
sbb
mov
and
mov
into
xor
adc
sub
mov
inc
mov
and
inc
mov
lahf
push
jl
fmuls
test
loop
fsub
push
aad
imul
mov
xchg
movsb
inc
outsl
imul
pop
adc
test
lea
push
aam
sbb
mov
je
insb
mov
xchg
add
ss
add
in
mov
imul
pop
mov
sbb
fwait
and
inc
pusha
or
lea
xlat
fs
fidivrl
inc
fisttpl
or
shlb
jle
leave
addb
add
ficoms
push
lds
loop
adc
or
ret
int
sbb
inc
inc
pop
or
mov
pusha
pop
jg
pop
mov
jo
ret
cmp
pushf
jle
stos
jae
jnp
test
mov
sbb
mov
popf
lcall
cli
jmp
ja
mov
adcl
sti
mov
addb
nop
loope
xchg
push
cmp
cmp
adc
xor
aad
and
cmp
jne
inc
sbb
inc
xchg
or
mov
fstpl
push
or
dec
pop
pop
jne
into
rorb
push
mov
mov
pop
adc
xchg
stos
xor
stos
leave
push
fisubl
mov
stos
sub
in
hlt
dec
lods
push
jmp
or
cmp
push
in
sbb
dec
inc
inc
push
in
push
std
test
jl
cmp
shll
pop
mov
dec
jae
sub
add
mov
pop
pop
dec
std
push
jp
cs
cwtl
jecxz
inc
jl
inc
stos
cs
test
xor
inc
mov
mov
shll
out
fwait
in
in
cmp
bnd
and
setno
loope
fsubp
pop
cmpsl
in
or
dec
xor
inc
xchg
dec
sub
cmp
jp
jns
ljmp
mov
sbb
ljmp
js
jno
dec
mov
data16
mov
sbb
or
das
out
addl
dec
sbb
inc
cmp
leave
inc
dec
mov
ror
sti
lret
shll
cmc
jge
dec
mov
imul
les
fcmovnb
popa
adcl
cmp
dec
push
push
pop
push
arpl
inc
inc
xchg
pop
jae
fldl
addr16
push
push
xchg
outsb
test
pop
xor
xchg
adc
mov
cmp
push
sbbl
repnz
or
inc
push
cli
jecxz
cmp
push
and
jmp
pop
adc
xor
pop
fdiv
fcoml
nopl
shlb
insb
lret
movsb
leave
jmp
jg
add
std
jo
in
xchg
mov
lcall
dec
lret
dec
sbb
cmp
in
orl
stos
cmp
hlt
cmpsb
clc
pop
add
ja
sti
push
lea
and
out
add
movsl
loope
daa
push
pop
inc
in
shrl
hlt
inc
ljmp
test
enter
shr
xlat
pop
pop
mov
cmp
scas
add
cmp
aam
or
cs
cmp
mov
cltd
jecxz
sti
jmp
jno
dec
pusha
call
js
mov
adc
pop
push
and
xchg
lods
xor
jnp
mov
fwait
push
mov
mov
mov
mov
mov
xor
jl
cwtl
rcrb
leave
add
or
fs
sub
lock
dec
scas
push
mov
int
sub
out
sub
mov
ror
adc
xor
mov
mov
cli
cmp
sahf
int
repz
jge
aaa
pop
jg
jp
xor
ds
adcb
jns
cli
mov
xchg
push
pop
mov
lds
mov
cmp
pop
push
pop
scas
cmpsl
lods
inc
sub
and
ficompl
inc
xchg
sbb
fwait
imul
sbb
mov
hlt
jno
rorb
fwait
mov
inc
in
mov
rolb
shlb
mov
mov
fs
add
out
adcb
clc
into
mov
in
vmwrite
dec
stos
inc
mov
add
mov
orb
adc
dec
gs
imul
aaa
xchg
daa
fsubp
pushf
pop
pusha
inc
fstl
mov
add
jge
cmp
mov
loopne
jl
jnp
pop
jecxz
fldt
scas
mov
mov
sbb
sahf
jns
mov
ror
cmp
stos
mov
cld
cmp
xor
xor
xchg
icebp
mov
mov
pusha
xor
mov
in
out
insl
push
stc
cmp
imul
push
sbb
repz
ret
add
pop
push
xor
mov
or
loopne
xchg
leave
xor
sub
jl
xchg
arpl
mov
mov
add
mov
mov
addr16
sbb
data16
adc
into
fs
int3
insl
or
xchg
in
in
jge
sub
ret
xor
les
xchg
sahf
mov
bound
ss
cli
repz
scas
mov
in
cmp
decb
or
cmp
sbb
cmp
in
sub
movsb
xchg
and
push
hlt
cmp
test
push
outsl
outsl
fisttpl
cmp
sbb
in
lcall
or
jb
jg
xor
test
int3
cld
outsb
xchg
add
mov
xchg
mov
sbb
dec
aam
test
scas
lahf
ret
lret
cltd
test
fisttps
xchg
fcompl
es
mov
sbb
cmp
mov
mov
add
cmp
jns
push
mov
sub
loopne
lret
sub
lea
loopne
jo
enter
pop
and
xor
cmp
adc
out
push
pusha
cmp
loop
push
adc
es
ss
mov
mov
mov
xchg
sbbb
lret
fcoms
outsl
imull
adc
inc
notl
fs
jae
dec
insl
xor
sbb
cmpsl
into
movsb
push
xor
data16
es
push
xchg
cmpsl
pop
popa
int
scas
push
out
in
sti
mov
fwait
mov
aad
sub
mov
add
test
pop
inc
cmp
xorb
mov
aam
mov
popf
push
rdtsc
out
jmp
and
cs
rcll
cmp
adc
mov
dec
jle
mov
aam
sti
pushf
sub
int
and
int
dec
push
inc
into
or
xor
pop
ljmp
pop
adc
popa
aas
hlt
push
cmp
mov
push
sub
xlat
loope
cmpsb
aad
iret
fsubl
out
and
pop
xchg
mov
sub
push
add
cltd
scas
push
fisttpll
inc
inc
mov
dec
out
sub
dec
sbb
and
shrd
sahf
sbb
js
push
xlat
sahf
fsqrt
das
hlt
and
inc
in
inc
adcb
je
mov
adc
xor
aaa
int
sbb
into
jl
dec
push
out
testb
pop
jg
add
jnp
hlt
in
jno
fnstenv
push
js
inc
scas
movsl
xchg
rorl
popa
xor
sbb
sbb
fdivrs
xchg
or
add
rcl
lock
xor
mov
sbb
outsb
jno
mov
fcoml
and
lods
mov
add
adc
aam
inc
cs
pause
out
pop
pop
std
xchg
popa
or
add
lods
inc
sbb
js
add
jns
jg
mov
xchg
jb
cmc
mov
xchg
xchg
sub
jp
dec
jae
or
jle
stc
xor
je
shll
ss
loopne
add
add
mov
jecxz
jae
fld1
loope
inc
mov
add
inc
sbb
or
lea
mov
mov
cmp
push
mov
dec
pop
cmp
xchg
xchg
outsb
xchg
push
sbb
sti
inc
push
gs
mov
add
test
int
cmp
mov
lret
cmpsb
xor
out
mov
aad
adc
pop
sub
mov
jmp
loope
pop
inc
and
pop
sahf
push
jge
jge
inc
rcrl
cld
pusha
add
test
sar
hlt
stos
xchg
push
inc
mov
sub
sbb
std
fnstcw
or
push
and
test
mov
mov
ficoml
adc
mov
mov
sub
add
adc
icebp
andl
divb
scas
inc
jmp
and
add
and
sub
pop
mov
inc
popa
fdiv
push
cmc
inc
jp
jae
fiaddl
inc
push
add
xchg
ljmp
sahf
scas
sbb
xor
and
or
xor
rorb
pop
mov
cs
or
inc
push
popa
pop
cld
adc
int3
xchg
inc
jp
adc
out
pop
in
push
mov
adc
and
cmc
ds
and
or
cmpsb
imul
adc
pop
es
xchg
lret
movsb
push
dec
and
adc
mov
hlt
scas
sub
adc
fs
jnp
das
test
mov
dec
movsb
mov
ljmp
pop
pop
jmp
sbb
sub
mov
pop
fs
ret
xor
add
sarb
movsl
lods
xchg
popa
xchg
lret
cld
mov
int
sarb
flds
mov
call
enter
mov
inc
sub
jmp
mov
negb
jns
lahf
xorl
jmp
inc
cmc
mov
int
dec
loopne
fistl
pextrw
dec
jmp
mov
outsb
dec
nop
jns
xor
cmp
popa
xorb
sbb
jbe
xchg
mov
popf
sub
xor
xor
xor
das
data16
pop
ds
iret
dec
shl
mov
xchg
notb
inc
xchg
pop
je
nop
sub
xorb
or
pop
jb
mov
and
cmp
jp
js
pop
pop
cld
ficompl
cmpsb
fiadds
imul
test
xchg
mov
hlt
cmp
fldt
addr16
or
mov
sahf
fwait
test
pushf
push
adc
or
in
sub
mov
mov
push
nop
mov
ja
rcrb
or
pop
add
fists
xor
insl
sbb
pop
adc
jp
lods
sbb
and
xlat
pop
mov
iret
adc
xor
sbb
out
fstpl
ljmp
ret
fs
sarb
popa
sbb
push
push
shlb
adc
dec
in
into
lods
push
fwait
push
gs
lret
out
inc
inc
imul
emms
push
pop
jge
push
sub
mov
jecxz
mov
cmc
loope
test
cli
jns
stc
xchg
xchg
cmpsl
and
bound
xor
mov
xchg
sbbl
loop
mov
pop
dec
xchg
cltd
add
test
divb
sbb
lahf
cmp
testl
daa
bnd
mov
pop
loop
clc
mov
jge
cmpl
jo
jnp
mov
jmp
mov
pop
jecxz
mov
xchg
mov
xchg
xchg
xchg
jg
cmp
cmc
cmc
loop
adc
inc
push
insb
mov
fistl
dec
testl
sbb
notl
fisttps
jmp
cmpsb
push
scas
das
dec
inc
xor
stos
jl
jecxz
cld
mov
or
push
nop
popa
push
and
lea
popf
pop
mov
mov
in
stos
add
cmp
fstps
ljmp
sub
arpl
push
in
inc
loopne
fadd
adc
dec
mov
les
lods
iret
xlat
push
loop
orb
sbb
mov
dec
mov
int
mov
or
and
stos
testl
mov
pop
aad
hlt
daa
mov
xchg
sub
dec
into
and
leave
inc
roll
or
pop
in
inc
and
jno
adc
shl
inc
cld
inc
sub
lret
sub
adc
jmp
fadds
cltd
inc
scas
or
shlb
push
insl
aas
fistpl
and
mov
test
inc
push
push
fnstenv
xchg
cwtl
fs
clc
lods
leave
dec
repz
cs
js
xor
mov
adc
stos
dec
mov
jge
jo
xchg
leave
adc
jmp
mov
cltd
outsb
outsl
jle
or
les
push
mov
add
sub
inc
adc
lcall
pushf
xchg
inc
mov
lods
or
mov
int
pop
in
loop
lcall
cmp
fmul
xchg
insl
sub
popf
insb
sar
test
dec
lahf
dec
mov
inc
dec
adc
mov
loopne
mov
gs
sahf
xchg
ja
int
cltd
jae
into
aas
mov
push
pusha
inc
rorl
push
and
js
das
cltd
fisubs
clc
sbb
lret
xchg
and
shr
stos
icebp
xlat
sub
mov
jp
ja
dec
jo
inc
lcall
cltd
xchg
jmp
mov
out
enter
mov
stos
cs
std
loop
loop
or
xor
add
xchg
pushl
pop
movsb
daa
movsb
pop
loope
jecxz
push
dec
mov
lds
lcall
mov
inc
xor
jne
mov
push
lcall
rcl
xor
fsubrp
out
js
in
insl
scas
loop
dec
iret
sub
inc
rcrl
xchg
push
jo
and
scas
jecxz
mov
jnp
sub
lret
mov
arpl
and
or
pop
pop
loope
imul
inc
inc
cli
xor
ljmp
push
jmp
mov
push
aas
popf
ret
jo
or
add
dec
mov
int3
fs
shrl
pop
pop
sbb
addr16
dec
mov
or
jp
mov
xor
mov
out
in
filds
mov
ficoml
mov
ljmp
mov
cwtl
js
mov
frstor
leave
lods
cmp
add
or
mov
lcall
lods
into
aaa
xchg
jl
hlt
stos
lret
xchg
insb
orw
ret
sahf
sbb
addb
lcall
addb
das
mov
cmpsl
outsl
faddp
jle
out
test
inc
cwtl
dec
pop
lods
das
jo
sbb
iret
mov
aaa
pusha
repnz
clc
pop
pop
cmpb
js
movsl
lock
lods
jns
ja
inc
aam
sbb
cmp
incl
cmp
cmp
jae
out
clc
lds
adc
or
adc
or
shrl
and
fisubrs
jo
fisttpl
mov
mov
ret
mov
test
je
ret
sub
mov
lahf
sti
outsl
mov
push
popl
repz
insb
orb
mov
jmp
dec
sti
sub
or
lcall
arpl
out
test
shll
ja
stc
out
mov
push
pop
pop
jg
not
nop
lahf
jno
or
ds
js
jmp
fnstsw
adc
adc
movsl
jnp
jecxz
scas
ficompl
and
cmpsb
mov
or
or
mov
mov
notl
out
inc
cmpl
jge
add
jp
push
out
xor
scas
mov
xchg
jg
push
push
jbe
mov
cmp
aam
push
aas
fld
adc
inc
xor
cs
xor
sub
test
dec
jb
subb
scas
xor
add
insb
adc
dec
or
add
push
mov
scas
push
aam
fsubrl
mov
sbb
pop
faddl
mov
mov
jle
add
xor
adc
fsubl
inc
popa
jl
jl
ss
adcb
stos
sbb
pop
lahf
xchg
push
sbb
push
push
ds
adc
inc
cmc
pushf
inc
mov
out
loopne
jge
add
jnp
sbb
fsts
inc
xchg
loop
insb
mov
xchg
add
cmp
pushf
push
xlat
adc
ds
mov
jns
popa
xchg
mov
out
je
arpl
pop
insb
jge
add
aam
test
test
test
scas
addl
test
leave
mov
imul
xor
in
sub
push
mov
xorb
inc
test
stc
das
xchg
dec
push
pop
std
mov
lea
sbb
arpl
xchg
and
or
sahf
andl
sbb
imul
pop
gs
mov
dec
mov
dec
push
mov
loope
in
and
nop
mov
scas
mov
arpl
out
cltd
ljmp
jb
sub
mov
jmp
loopne
push
or
push
jbe
xor
pop
pop
fldt
fwait
mov
adc
je
dec
jo
or
daa
cmp
adc
and
out
and
pusha
dec
scas
push
jge,pt
iret
out
std
jne
sbbb
divl
ret
cmp
pop
lds
jne
mov
or
mov
jmp
call
inc
jne
inc
inc
cs
mov
addr16
loopne
scas
ljmp
and
inc
inc
xchg
jns
int3
mov
xlat
push
jbe
cwtl
sbb
xchg
scas
stc
cmp
popf
mov
push
rcl
fs
push
or
push
push
jl
vpslld
aad
ret
jo
and
jbe
fidivrl
into
aad
xchg
into
sub
lods
js
add
mov
cmp
cmp
movsb
aad
jl
jp
hlt
gs
outsb
shlb
sbb
pop
add
lret
ds
jae
scas
aad
xchg
xor
sub
jae
inc
stos
push
mov
movups
pop
test
ljmp
mov
push
jb
mov
adc
stc
js
cmpsl
std
stos
push
push
cmp
mov
xor
cmp
out
pop
mov
leave
dec
pop
inc
out
or
add
adc
les
sarb
nop
gs
dec
cli
mov
inc
mov
addr16
cmc
jge
sti
and
sub
pop
stc
arpl
in
out
push
mov
add
cmp
les
add
loop
stos
add
loope
aas
cmp
inc
pop
and
rorl
xchg
mov
xchg
xchg
jb
push
ss
push
fcoml
dec
ds
or
test
sub
mov
out
add
sub
inc
sub
push
cmp
or
xor
shll
and
mov
in
mov
sbbb
sub
mov
bound
jo
not
push
gs
int3
shlb
ja
shll
shll
filds
shlb
mov
leave
mov
test
fwait
mov
mov
push
pop
shrb
das
cwtl
popa
mov
or
xchg
call
or
adcb
ss
and
pop
mov
push
pop
loopne
push
jmp
push
lock
in
std
addr16
adc
pop
sbb
xchg
fnsave
and
push
js
inc
incl
mov
adc
scas
xlat
cld
mov
repnz
int3
jge
adc
fs
adc
loop
mov
mov
push
or
sbb
shl
push
pop
xor
mov
xchg
sbb
push
aam
adc
push
roll
sbb
hlt
popa
jae
jo
and
cmp
stos
cmp
addr16
insl
ss
or
cmc
loopne
mov
sub
mov
cli
sbb
pop
mov
daa
in
insb
cmpsl
pop
mov
sbb
pop
mov
hlt
adc
xor
jae
sub
addr16
mov
sub
ljmp
jl
outsl
scas
and
je
movsb
ja,pn
add
pusha
inc
or
push
std
cmp
imul
jns
repz
xchg
jle
adc
push
cs
cmpsl
mov
lock
mov
loopne
jg
mov
ss
icebp
jne
adc
test
adc
dec
jl
adc
hlt
int
pop
cmp
dec
stos
cs
stos
popf
cmp
add
pop
andb
mov
sbb
push
push
adc
sub
imul
xor
sub
data16
xorl
jge
fwait
inc
xchg
scas
pusha
hlt
mov
stos
mov
lret
dec
shl
pop
sub
push
mov
cld
bound
into
enter
lea
gs
cltd
pushf
hlt
dec
lods
lods
outsb
xchg
push
ss
pop
dec
outsl
or
hlt
mov
fwait
pop
in
dec
rolb
sti
iret
cmp
adc
mov
aam
scas
cltd
je
pop
bound
sbb
mov
cmp
dec
xchg
dec
mov
nop
mov
lahf
loop
cmp
ds
mov
negb
nop
dec
inc
mov
xchg
and
daa
jb
outsl
ret
sub
das
add
add
das
add
ss
lcall
ficompl
mov
cmp
cmc
repz
xchg
dec
call
pop
xchg
cmpsb
loope
jb
imul
testl
mov
lds
jb
insb
aas
pop
add
cmpsb
jg
lcall
sub
or
out
mov
mov
aaa
xor
dec
cmp
xor
cmpb
out
jecxz
dec
jp
jge
mov
rcl
fisubs
pusha
add
mov
lds
adc
xor
push
jle
and
adc
dec
fldpi
daa
out
push
packsswb
cmpsl
push
xchg
pop
in
in
jp
sbb
push
bnd
pop
es
ret
dec
and
stc
test
in
sarb
inc
cmpsb
lds
mov
mov
lods
lret
je
push
je
aaa
xchg
js
pop
push
xchg
sarb
sbbb
xor
or
pop
lcall
cmp
popa
sub
mull
push
scas
scas
movsl
mov
dec
fisttpll
pop
pop
js
jne
inc
and
xchg
in
inc
in
call
inc
lcall
jae
inc
shlb
mov
pop
dec
lcall
lret
and
int3
xchg
xor
jns
mov
hlt
dec
xchg
mov
fstp
into
or
xorl
stc
add
lods
xor
rolb
pop
dec
and
push
in
ror
jb
enter
movq
mov
mov
inc
push
push
and
jmp
pop
push
inc
push
pusha
add
xchg
cmp
push
aaa
add
mov
incl
insb
push
sub
jge
sar
xchg
or
mov
out
mov
pop
dec
and
lahf
movsl
mov
jnp
xchg
sub
xor
jb
scas
push
xchg
xor
ss
mov
mov
push
push
dec
lahf
lret
fwait
imulb
loope
push
call
dec
jne
adc
xlat
cli
push
mov
fidivs
and
aas
cmp
fidivs
mov
or
xchg
add
in
xchg
call
cmp
push
xor
and
push
clc
out
mov
or
jo
test
sbb
push
push
xchg
mov
notb
and
dec
xchg
push
cli
gs
inc
dec
enter
lret
or
ds
fdiv
adc
int3
popl
and
xor
dec
test
dec
sbb
jge
or
scas
or
jbe
lret
lret
mov
mov
or
stos
arpl
pop
mov
clc
and
repnz
lds
xlat
cmp
clc
lret
inc
stos
mov
lcall
popf
out
lods
leave
lcall
lock
jnp
jmp
lcall
mov
xor
data16
daa
mov
subb
inc
inc
mov
xchg
jae
scas
in
push
je
lret
or
adc
ljmp
add
pop
scas
sar
cltd
sbb
rorb
popf
add
push
sbb
sbb
dec
in
cmpsl
jns
stc
pop
cli
mov
dec
xorb
push
sbbl
enter
xor
movsl
mov
and
push
ss
mov
outsl
push
cwtl
push
push
mov
jp
ljmp
sub
xchg
out
pop
push
jnp
aaa
stc
adc
cwtl
or
aas
xchg
inc
push
popa
iret
dec
ss
mov
lcall
pop
sub
push
mov
mov
sbb
out
es
call
and
sbb
es
push
jnp
mov
pinsrw
xor
imul
bnd
inc
mov
scas
sub
gs
add
fsubs
inc
ss
daa
jmp
mov
xchg
movsb
add
not
jns
inc
mov
jne
dec
xor
ljmp
xor
data16
hlt
scas
gs
pop
push
movsb
cs
sbb
imul
push
stos
rcrl
add
jno
pop
call
sbb
test
xchg
fwait
add
mov
inc
inc
nop
adc
or
bound
pop
jo
ret
pushf
fisttps
sahf
mov
ret
xor
in
sub
js
daa
sub
fmull
imull
fcmove
or
mov
addr16
mov
and
dec
movsb
mov
lcall
imulb
push
jp
stos
aaa
adc
pop
or
sarb
addb
jne
dec
add
xchg
lret
jo
add
leave
inc
inc
jne
imul
cmp
mov
lods
and
inc
popf
xchg
lods
and
or
or
or
sub
push
jae
mov
ljmp
push
pop
ds
sbb
xor
test
nop
popf
and
pop
cld
add
xor
pop
addb
testb
fistl
fmul
ljmp
fiaddl
pop
add
jno
cmp
iret
or
mov
sar
pop
jnp
lea
aaa
loop
jb
or
clc
cli
push
test
rcll
jg
repz
lods
imul
sub
arpl
inc
mov
lret
imul
inc
mov
enter
adc
inc
or
loop
lahf
rolb
nop
lahf
xchg
imul
pop
push
sahf
arpl
inc
add
or
add
xchg
sub
sbb
sbb
sub
jo
jg
sub
inc
mov
push
popl
pop
stos
push
xor
xchg
or
cmc
add
cmpsb
nop
rcrb
mov
in
stos
dec
std
jno
aam
lods
jmp
ficoms
xchg
add
mov
sub
sbb
jge
ret
jno
gs
out
sbb
sub
or
xor
test
iret
mov
call
or
push
mov
fstl
js
icebp
orb
jb
ljmp
mov
mov
jns
out
mov
fnstcw
and
lret
cmp
inc
loop
mov
data16
mov
fdivrs
or
jae
push
inc
ljmp
loope
leave
adc
xlat
dec
xchg
lods
mov
out
jno
movsb
stos
cmc
adc
pop
addr16
inc
sub
sarb
dec
mov
fcomip
inc
sbb
je
push
aad
rcl
lods
push
clc
pop
jb
push
sub
mov
dec
ja
dec
push
sahf
pop
or
testl
add
cmpsl
ds
sub
aad
jno
push
jecxz
fwait
xor
adc
lret
in
mov
sub
iret
popf
mov
pop
push
xlat
xchg
ds
stos
movsb
andb
pop
mov
es
inc
pop
push
sub
movsb
lock
movsl
loop
adc
sbb
dec
int3
rep
sub
fwait
loopne
add
popf
xchg
mov
jb
out
pop
xchg
inc
negb
lahf
fidivl
mov
sbb
daa
arpl
mov
in
les
mov
jge
fisubl
loope
les
arpl
push
adc
dec
icebp
or
movsb
pop
cmp
sbb
out
cmpsb
ds
xor
sbb
mov
cmp
xor
shl
inc
jecxz
and
outsl
cmp
mov
and
lret
fs
xchg
cltd
fistps
loopew
fisubrs
loopne
orl
jle
dec
icebp
add
push
stos
hlt
and
and
movl
dec
out
in
push
mov
inc
orl
and
lock
out
mov
sbb
test
movsb
push
ja
push
mov
imul
aad
scas
or
jo
stc
dec
outsl
lahf
popf
std
inc
std
ljmp
push
fs
sahf
cmpsb
mov
adc
test
jmp
sub
jmp
sbb
lea
fcmovnb
jp
and
shll
stos
push
mov
out
push
xor
mov
add
sub
mov
jmp
jmp
out
xchg
xchg
gs
and
xchg
dec
adc
dec
push
cwtl
das
dec
ljmp
iret
mov
cmc
cli
jo
jg
nop
test
mov
jg
sbb
xor
add
data16
lods
cmp
popf
adc
rcl
sub
aad
sub
or
in
push
mov
mov
xchg
cmpsl
sarl
sbb
in
bnd
cmp
mov
push
cltd
inc
rcll
mov
rcll
and
jmp
inc
lea
inc
cli
sub
push
mov
mov
mov
inc
mov
andb
xchg
sub
xlat
pushf
inc
mov
pushl
add
in
jl
xlat
test
add
shrl
push
movsl
cmp
lahf
dec
gs
jae
sti
in
addr16
ret
scas
sbb
in
push
cltd
sub
cmp
mov
fnstenv
popf
adc
dec
out
xchg
les
outsb
leave
mov
push
fadds
push
fsubrs
xor
vzeroall
outsb
xor
pop
and
inc
mov
jns
push
mov
sbb
mov
subb
cwtl
jo
in
pop
mov
pop
lds
dec
stc
cld
into
out
je
gs
dec
pop
mov
sbb
adc
clc
dec
pop
add
insl
fwait
into
push
push
and
adc
movsl
mov
lock
mov
add
lret
sub
subl
cmp
pusha
inc
cli
pop
lahf
cltd
push
push
popa
das
std
cmpsb
push
jp
popa
stos
loop
ss
mov
icebp
push
int3
lock
inc
mov
push
mov
inc
es
xchg
test
insb
jne
sub
das
lea
aaa
fistpl
sbb
vpavgw
faddl
imul
out
es
lahf
fs
cmp
xchg
repz
xchg
scas
fldl
xchg
ljmp
fwait
rorl
pusha
mov
fcoml
divb
and
cmp
pop
push
or
mov
adc
aam
adcl
add
sub
cmp
inc
and
in
adc
push
jno
pop
enter
shll
xchg
out
rcr
imul
push
jge
cmp
jnp
scas
inc
mov
fiadds
fcom
int3
daa
test
sarl
xor
xchg
xlat
jge
adcb
cltd
cmp
jmp
scas
sbb
enter
and
xor
mov
mov
xor
cmp
xor
repnz
add
outsb
adc
fdivs
fwait
out
or
pop
mov
lock
fwait
mov
xchg
lods
andl
aad
sahf
sbb
pop
mov
pop
sbb
jmp
jbe
nop
sub
addb
pop
in
insb
sub
cmp
fcoml
dec
inc
push
mov
fistps
jne
mov
cmp
push
ffreep
imul
pop
lods
iret
xor
ss
jg
cmpsl
dec
sahf
shl
push
jnp
xchg
gs
pop
outsb
int
aad
adc
sbb
lods
xchg
mov
push
adc
mov
cmp
push
es
or
bound
xchg
pushf
lds
mov
dec
add
ret
shrb
mov
rclb
inc
cld
or
test
cmpsb
mov
shl
enter
call
call
rorb
movsb
cmp
xchg
xor
and
push
or
nop
iret
push
stc
test
pop
nop
xor
mov
fistpl
jmp
mov
imul
sbb
in
xor
mov
scas
sbb
gs
sbb
mov
aad
jo
imul
leave
ficomps
movsb
shlb
push
dec
mov
mov
pop
pop
mov
jne
outsb
push
enter
sub
imul
mov
dec
and
repz
cmc
push
nop
mov
mov
push
mov
or
or
mov
sub
in
and
xchg
notl
jbe
inc
pop
sub
cmpsb
pop
test
sbb
inc
scas
mov
jns
mov
push
jge
cli
sbb
sbb
daa
popa
ret
ffree
mov
jl
ljmp
insl
pusha
das
xchg
dec
enter
adc
mov
sub
adc
inc
fsts
add
cmpl
and
jne
dec
pusha
sub
xor
roll
ja
push
ror
mov
in
dec
ftst
xor
into
jle
mov
cmp
in
and
rcl
push
mov
sub
push
pop
aam
shlb
es
loope
inc
jb
add
cmp
jbe
cmp
rep
push
xor
push
mov
jbe
aam
or
pop
inc
sbb
xor
ljmp
js
into
mov
sarb
in
clc
addr16
aam
push
jle
cmp
inc
pop
je
addl
sbb
cmp
adc
jo
popa
push
xchg
jle
dec
ficomps
jmp
lret
dec
pusha
mov
fidivs
cli
aam
mov
cmova
inc
add
xchg
and
inc
pop
aam
xchg
sbb
inc
stos
mov
pusha
and
pop
fs
ljmp
pop
movsb
insb
ret
push
push
lret
imul
cmp
push
push
popf
sar
popa
sbb
int3
xchg
mov
fs
fsubl
loope
int3
cmpsl
aam
jae
aaa
mov
sub
mov
inc
add
pop
lea
push
cmp
push
mov
stc
arpl
pop
in
fldenv
and
push
or
test
sbb
sbb
adc
mov
out
mov
insl
jl
ret
insl
pop
mov
in
mov
ja
sahf
cmc
sbb
movsb
jg
pop
dec
pusha
cmpsb
mov
inc
pop
mov
test
fs
jnp
mov
lods
mov
daa
lret
ret
xchg
jmp
test
repnz
add
cmp
inc
ss
daa
loope
test
pop
pop
cmp
iret
mov
aas
addr16
mov
lcall
fnsave
cmp
mov
mov
repnz
aam
xorl
sahf
xor
leave
lock
pop
nop
push
pusha
fs
xchg
pop
mov
movsbl
je
sahf
sti
sub
addr16
iret
outsb
mov
sub
int
mov
mov
xor
pop
pop
and
jo
push
lcall
daa
in
adc
pop
int
push
jle
ss
jle
sub
fdivs
inc
dec
imul
xchg
mov
sarl
loope
icebp
sbb
cs
xchg
mov
addr16
and
shll
adc
ds
mov
test
in
stc
in
fidivl
mov
lock
repnz
in
and
push
fadds
fisubs
xchg
add
jbe
in
or
mov
mov
rorb
mov
sub
inc
test
xor
movsl
mov
iret
dec
and
dec
lcall
fildll
jp
js
xchg
add
sarl
aas
add
dec
dec
mov
out
je
subl
jp
jns
jo
and
mov
push
sub
push
in
aas
sub
dec
mov
inc
pop
sub
mov
mov
movsb
arpl
es
sub
adc
or
dec
dec
and
mov
add
jge
lahf
loop
jl,pn
mov
xor
frstor
lret
rol
cmp
aam
xlat
inc
cld
sub
aas
insl
pushf
xor
xchg
push
cmc
dec
mov
or
fistpll
aad
mov
xor
stos
stos
cmp
aam
push
in
mov
das
mov
lea
iret
push
mov
mov
in
insl
adc
cmpsl
int
enter
dec
ret
xor
and
pushl
inc
inc
in
sarb
aam
cmpsl
shr
stos
test
and
insl
jecxz
and
push
pop
in
dec
sub
xchg
mov
inc
jo
pop
sbb
pop
and
ret
test
dec
xchg
xorb
testl
push
adcb
popa
ss
adc
sahf
mov
cmp
pusha
inc
dec
insb
jg
xor
mov
sbb
repz
mov
stos
enter
fisubl
mov
lods
mov
dec
jns
dec
sub
in
inc
neg
cmc
loope
push
jns
mov
leave
cld
testl
fsubl
sub
or
jbe
je
fbstp
xor
xor
pop
dec
aam
or
and
xchg
test
or
lock
test
sbb
test
arpl
ljmp
pop
dec
das
cld
out
xchg
xchg
rcll
inc
fildl
lret
cmp
push
add
inc
cmp
pop
dec
aad
xor
imul
lock
lds
ror
ds
shl
mov
pushf
nop
push
push
cmp
ljmp
sub
fidivrl
jnp
mov
ret
fiaddl
or
out
xor
in
test
ret
call
fists
mov
jns
sub
fstps
dec
add
js
js
push
lret
dec
inc
cli
sbb
stos
call
mov
aas
aam
adc
mov
mov
or
mov
movups
fildl
out
push
xchg
cli
icebp
mov
sub
push
xchg
push
adc
outsl
pop
fs
jno
jl
xchg
xor
mov
in
imul
sahf
rcrl
push
xor
add
cmp
xlat
cmp
inc
fcmovbe
arpl
cld
je
fdivrl
sub
xor
mov
imul
iret
gs
adc
lret
lods
lods
sbb
pop
into
add
jnp
int
movsl
out
add
out
int
mov
arpl
scas
or
sbb
popa
cwtl
subl
cmpsb
jle
outsl
pop
es
jecxz
mov
popa
jns
outsb
pop
dec
insw
pop
mov
pop
pop
xchg
in
xchg
iret
dec
int3
dec
pop
lds
sbb
arpl
jmp
cltd
cli
imul
test
shrb
mov
xor
cmp
jno
or
inc
in
sub
push
mov
mov
cmp
xlat
xor
push
lock
xor
mov
in
inc
jmp
xacquire
aam
mov
out
cmp
std
pop
outsb
out
mov
cmp
pop
ja
xchg
fmull
test
repz
mov
pop
fisubrs
mov
or
stos
jbe
mov
popf
aas
mov
xchg
scas
outsb
loope
mov
sahf
and
dec
cmp
aas
in
test
loop
jl
cld
mov
push
mov
lds
mov
aad
pop
leave
inc
and
pop
mov
stos
jne
dec
sub
mov
mov
ret
mov
mov
push
cli
mov
mov
push
cmp
rorl
aas
push
rcr
mov
je
ljmp
repnz
insl
jae
f2xm1
xor
add
sbb
fsubs
cwtl
dec
popf
push
mov
push
addr16
aad
mov
sbb
in
jnp
pop
inc
or
jle
and
leave
lcall
jecxz
in
and
mov
mov
insb
mov
cld
sub
shrb
ja
cli
test
pop
xchg
push
iret
leave
and
lds
mov
or
sbb
js,pt
xor
mov
fldl2t
add
mov
cmp
push
xchg
dec
insl
fcompl
pop
jns
cmp
aam
test
add
push
jle
jle
push
in
and
mov
mov
mov
push
dec
popl
push
add
sahf
or
add
cmpsl
ss
xlat
addl
dec
fs
out
add
insl
icebp
out
popf
cwtl
aas
push
sub
mov
push
mov
jno
jl
cmp
scas
dec
xor
sar
mov
rclb
test
jae
sti
or
pop
cwtl
movsl
test
pop
mov
je
cmpsl
adc
dec
pop
lea
adc
xlat
fs
mov
mov
lods
int3
mov
adc
or
insl
cmpsl
inc
pop
inc
cmp
cmpsl
adc
inc
aaa
sub
mov
xchg
rolb
jno
mov
cmc
inc
xor
loope
fnstenv
je
fs
mov
lcall
iret
cld
mov
loope
inc
fcmovu
sbb
jnp
or
aaa
jnp
data16
insb
decl
movl
push
stc
push
fstpt
push
repnz
xchg
ja
sbb
nop
push
ret
call
mov
xor
jge
adc
or
xlat
sbb
mov
add
bound
inc
ret
into
mov
pop
loope
cwtl
call
mov
repnz
mov
xchg
dec
adc
jae
test
mov
cmpb
gs
lock
add
mov
pop
adc
and
inc
dec
dec
js
adc
add
pop
adc
out
mov
add
jo
sub
js
lock
add
daa
dec
jp
mov
ljmp
enter
cmpsl
push
jo
pop
cld
jle
andl
fidivl
lahf
cmp
es
aas
jae
aam
repz
cmp
dec
mov
mov
xchg
fwait
ret
jb
insb
pop
enter
std
sbb
sbb
jle
cmp
dec
daa
lcall
mov
out
mov
mov
mov
and
xchg
loop
pop
pop
fnstcw
adc
xchg
js
lods
fnsave
scas
cmpsb
lods
and
out
aad
cltd
jbe
stos
bound
outsb
out
pop
ds
jne
daa
inc
adc
add
movsl
dec
in
test
pop
sbb
push
movsb
sbb
fildll
stos
loopne
add
cmp
pop
in
xchg
bound
lcall
popa
or
dec
incb
jg
ss
push
popf
pushf
ljmp
xchg
mov
aas
lock
aas
cmp
jnp
insb
ret
push
adcb
outsl
cmpsl
push
jnp
pop
xchg
sbb
gs
les
ds
test
mov
pusha
cltd
outsl
push
mov
and
mov
cmc
into
and
fwait
jne
test
outsb
inc
je
xchg
push
xor
and
sbb
pop
cmpsl
scas
push
aam
mov
pop
xor
pop
bound
xlat
jecxz
call
adc
out
mov
iret
or
cmpb
jbe
int
ret
mov
mov
mov
xlat
imul
mov
cmp
sub
cmp
pop
js
sbb
addr16
sahf
inc
jnp
movsl
push
pop
xchg
cmc
movsl
in
fs
sbb
dec
loop
iret
xor
outsl
testl
mov
or
loop
ss
int
lods
mov
cltd
mov
mov
add
mov
pop
mov
push
cmp
lods
mov
sub
xchg
lcall
jecxz
sub
and
cli
mov
shl
adc
out
cmp
add
shrb
test
popa
jp
xor
mov
cmp
ds
pop
push
push
add
imull
fldcw
stos
jno
bound
xor
cmc
mov
cmp
pop
xor
mov
ret
adc
mov
mov
fsubrl
push
adc
gs
leave
cmp
jns
fwait
mov
or
adc
lock
mov
loop
repnz
outsb
lret
mov
and
in
and
outsb
jge
jno
fnstsw
insb
sbb
mov
test
std
sub
hlt
jg
cmp
sub
mov
lahf
scas
scas
in
es
jne
fsubs
push
sub
mov
shrb
in
int
inc
je
mov
add
adc
std
jl
mulps
fdivrl
sbb
int
lods
test
push
mov
shll
or
orl
cli
movsb
jae
jg
stos
ds
popa
imul
int3
dec
push
xor
jb
xchg
ret
incb
adc
imulb
and
cltd
pop
pop
rorb
cmc
sub
fildl
scas
push
out
and
rcrl
push
loopne
sarb
sbb
mov
dec
icebp
push
push
cmc
loope
jno
test
sti
out
push
mov
sbb
or
mov
or
push
cmc
ljmp
mov
add
test
mov
ds
mov
xorb
push
xchg
adc
sbb
call
adc
xor
fmul
pop
add
pop
inc
gs
repz
or
pop
adc
mov
cmp
jb
outsb
int3
mov
inc
rorb
or
out
out
loope
adc
xor
inc
xchg
shrb
fsub
movsl
mov
lods
or
mov
loope
cli
pop
loop
mov
xchg
rcll
mov
push
aas
adc
fsubrp
adc
pop
aam
ss
dec
jb
loopne
in
push
loop
mov
aas
xor
roll
aas
pop
mov
push
hlt
int3
jle
mov
pop
jp
cs
in
mov
and
mov
popa
mov
sbb
pop
cltd
loope
jno
ficomps
filds
jl
popf
inc
and
jl
test
loop
push
jae
inc
ja
loope
jp
call
cld
lret
mov
cmp
mov
push
mov
addr16
gs
xor
and
or
adc
dec
gs
xor
stc
hlt
addr16
out
push
add
xchg
pop
cmp
xchg
push
xor
jle
sbb
in
sbb
lahf
lret
sti
mov
in
pop
loope
push
inc
outsl
pop
lds
jae
jp
and
test
or
push
sbb
in
fwait
inc
jle
pop
movsb
add
es
aas
fisubrs
and
cmpsb
icebp
mov
in
mov
bound
or
push
adc
inc
dec
cwtl
xchg
jne
xorl
add
in
arpl
jb
cmp
xchg
adc
cmpsb
mov
dec
fisttpl
xor
movsl
insb
xor
push
divb
sub
roll
stos
adc
adc
cli
lret
pop
xchg
shll
loopne
pop
push
cmp
and
add
orl
jo
cmp
ja
mov
push
jmp
sbb
and
call
xchg
mov
and
outsb
repz
icebp
jae
mov
subl
adc
xchg
dec
adc
push
dec
pushf
std
push
sbb
pop
repnz
pop
test
push
jg
dec
pushf
aam
addr16
or
xchg
adc
in
or
mov
fidivrl
stc
and
clc
test
cmp
mov
jb
jmp
loop
aas
loopne
xchg
push
push
lock
les
das
ret
dec
mov
push
dec
ret
push
ljmp
adc
ficoml
or
pop
fchs
adc
into
fnstcw
repz
xchg
mov
in
jbe
rcrb
adc
pop
jl
adc
adc
or
xor
jb
stos
mov
jge
xorl
fsubp
es
shlb
lods
push
loop
add
dec
rcrl
adc
xchg
xor
jmp
out
push
xchg
fimuls
scas
outsb
cli
xchg
imul
push
fimuls
clc
sti
cltd
push
fstl
adc
cmp
sbb
mov
pusha
xchg
mov
push
sti
ret
je
pop
and
push
fwait
adc
in
xor
mov
inc
andb
mov
push
add
push
push
lahf
push
ljmp
mov
pop
cmp
xor
int
icebp
jmp
add
push
push
push
inc
mov
sbb
mov
stos
sub
pushf
dec
iret
dec
sbb
and
pop
ret
jge
pop
sti
mov
cmpsb
add
andl
or
mov
mov
fsubrs
in
push
cmp
fmulp
xchg
xor
ja
daa
mov
roll
mov
movsl
push
sub
push
sbb
pop
js
out
imul
jo
jno
mov
hlt
sbb
add
or
jp
rcr
jne
xchg
xchg
push
push
fdivrs
pop
pop
in
inc
cmp
fs
cld
xchg
or
pusha
ret
push
push
adcb
fucomi
dec
bound
xor
xor
imul
fbld
xor
and
or
sub
mov
les
fidivrs
mov
es
pop
cmpsb
out
lock
lcall
cmp
ret
and
push
test
pop
imul
xorb
inc
in
mov
sub
add
sub
mov
dec
adc
cltd
add
xchg
xchg
cmp
sbb
jg
xlat
pop
rcrb
imul
arpl
repz
pop
mov
mov
ret
push
mov
adc
cmp
adc
jle
daa
enter
pop
lahf
imul
stos
pusha
jns
sbb
call
jbe
cltd
mov
lock
jo
fcomip
leave
test
hlt
notl
loop
mov
jg
xchg
test
stos
sub
fsubrs
jmp
cwtl
inc
outsb
or
repnz
pop
sbb
pop
jno
cmpsb
add
mov
dec
inc
loopne
out
in
mov
or
lds
fiadds
insl
push
inc
add
jae
mov
inc
leave
popa
inc
imul
xchg
xor
add
fistps
inc
sahf
mov
and
popf
xchg
jo
adc
mov
or
int3
adc
mov
es
or
lea
pushf
loope
fidivl
mov
jae
add
imul
rcrl
add
sbb
cmp
test
pop
mov
inc
iret
mov
insb
jno
das
add
cwtl
imul
xchg
mov
pop
inc
gs
cld
inc
ljmp
or
or
scas
mov
aas
out
cwtl
adc
sarb
stos
fstl
inc
jp
xchg
pop
movsl
mov
cmp
inc
arpl
pop
bound
mov
mov
push
lret
xor
out
push
mov
pop
jle
push
xchg
std
adc
cltd
in
pop
scas
push
jl
dec
add
mov
pushf
pushl
test
repz
adc
sub
sbb
mov
mov
or
shll
cs
movsb
mov
jmp
in
popf
bound
outsb
sbb
xor
mov
inc
dec
add
xor
lret
mov
es
imull
shll
lret
jne
jnp
gs
adc
cwtl
popa
xchg
stos
ficoms
xchg
fisttpl
mov
cwtl
jl
mov
or
cmpsb
xchg
or
push
ljmp
sbb
xchg
sbbl
dec
insl
adc
es
mov
dec
jle
sbb
cld
adc
add
fcoml
inc
cmpsl
push
inc
xchg
mov
mov
dec
dec
jne
adc
hlt
sbb
and
sbb
push
xor
leave
add
loopne
cmp
lret
adc
jae
sub
in
addl
pop
pop
mov
and
mov
inc
cli
xor
inc
pop
idiv
add
movsb
sub
insb
addr16
mov
xor
cmp
add
xchg
mull
lret
pusha
cmc
jmp
sti
pop
clc
sbb
and
loope
icebp
pusha
movsb
aam
push
out
dec
sbb
and
das
adc
mov
cmp
iret
push
adc
adc
aaa
filds
cwtl
mov
jnp
push
pop
imul
mov
jae
aam
xor
es
mov
cmp
insb
pop
iret
cmpsb
test
push
mov
push
xchg
ficoms
mov
jno
adc
mov
xor
das
fisubrs
jnp
jns
pop
pop
mov
testl
pop
xlat
imul
xor
sub
adc
movsl
jmp
sbbb
cmp
lea
lret
xchg
pop
pop
xchg
pop
and
je
or
leave
jo
jg
dec
ror
cs
dec
pushl
popa
sub
sarb
xchg
mov
mov
hlt
in
cmp
sbb
aam
xchg
jbe
cmp
pop
clc
mov
mov
mov
mov
movsl
add
fidivl
or
or
cld
cmp
insb
jmp
mov
test
out
push
xor
dec
jno
or
je
xchg
jle
mov
cmpsl
fadd
cmc
addb
jb
jecxz
pop
and
loopne
shlb
popa
test
and
orl
arpl
pop
xchg
loopne
imul
call
mov
filds
into
mov
cli
jno
ds
pop
or
loopne
and
jne
push
xlat
mov
add
adc
jge
pop
inc
pop
test
lods
sbb
jnp
pop
lret
mov
mov
out
cmc
add
sbb
xor
push
cmp
mov
and
sbbl
je
mov
sarl
xchg
test
pop
iret
pop
out
xchg
shlb
loope
jae
xchg
cmp
js
and
gs
ja
cmp
ror
add
mov
dec
xchg
xor
xorb
punpcklwd
inc
push
and
mov
sub
dec
push
jae
in
mov
add
cwtl
sbb
negb
movsb
ret
push
cli
xor
jns
adc
jne
loopne
mov
call
jecxz
push
lods
dec
sti
in
cmp
dec
dec
or
sub
fadd
cltd
mov
cs
mov
ret
out
out
or
mulb
sahf
lcall
outsb
test
arpl
push
cmc
fwait
or
dec
push
stos
outsl
cwtl
dec
dec
and
sahf
nop
stc
inc
test
js
push
out
or
fists
insl
in
lods
leave
adc
mov
sarb
sub
cs
js
ja
xor
or
clc
pop
lds
sbbl
or
cmp
inc
lcall
stc
es
push
scas
pop
int3
ss
add
push
mov
push
fists
out
int3
fdivrp
xchg
outsl
push
je
mov
inc
push
outsl
sahf
xchg
aad
bound
xchg
loope,pt
rolb
inc
testl
push
leave
sub
inc
push
sbb
adc
pop
mov
xor
loopne
xorps
inc
test
push
push
gs
jle
and
fisubrs
inc
gs
stos
mov
jmp
jo
mov
cwtl
ljmp
jmp
pop
xchg
push
idivl
jns
and
adc
adc
sub
push
aas
adc
mov
sub
cmp
aam
jmp
stos
jge
out
mov
fdivrp
jns
mov
sbb
mov
xchg
jb
or
mov
loopne
mov
mov
ficoml
out
mov
outsl
fsubp
das
insb
aam
sub
sbb
fdivrs
int
dec
aam
subl
mov
leave
or
cwtl
jae
popa
cld
sbb
fistpll
mov
inc
push
ret
xchg
xor
adc
pushf
int3
daa
push
inc
push
scas
cmpsb
iret
push
out
outsb
add
xchg
mov
aam
jno
dec
test
pop
push
mov
xor
ss
rclb
mov
adc
xchg
add
xor
or
mov
cmp
xor
lahf
bound
xchg
inc
push
mov
lret
rcll
mov
fdivs
daa
or
add
dec
daa
cmp
mov
and
lcall
les
inc
sbb
mov
adc
or
cvttps2pi
insl
push
sub
mov
push
add
jle
dec
dec
ds
dec
mov
pop
fdivrs
test
sub
in
push
out
xor
add
xor
loop
sub
pop
mov
fists
test
dec
fiaddl
roll
sub
mov
ds
in
repnz
jmp
jns
lret
rcr
jb
shl
or
in
xor
mov
or
sarl
pushf
sub
int
xor
mov
and
fcmovnbe
loop
pushf
dec
inc
cwtl
int3
mov
icebp
pop
cmpsl
xchg
xor
ret
mov
push
es
pop
cmc
cwtl
jmp
mov
je
pop
in
or
push
jno
pop
jno
inc
mov
push
mov
roll
cmpl
rcrl
test
pusha
inc
std
mov
adc
pop
mulb
lds
ja
loopne
xchg
jnp
mov
jge
adc
pop
iret
sbb
mov
mov
data16
stos
pop
and
push
add
jnp
mov
mov
lahf
fstpl
add
pop
add
call
mov
mov
into
xor
sub
insb
fwait
mov
inc
ficomps
fisttpl
jl
and
imul
clc
inc
imul
pop
sti
fnstcw
loopne
sbb
sbb
xor
dec
mov
inc
pusha
xor
jne
add
mov
push
fstpt
cmp
subb
das
sbb
mov
or
imul
hlt
arpl
xor
orb
jmp
inc
push
sbb
imul
mov
loop
jae
sbb
xchg
mov
dec
shll
arpl
or
dec
out
in
popf
mov
outsb
test
sbbl
adc
fs
stc
out
xchg
fnstsw
jnp
pop
pushf
idiv
jo
pop
dec
add
lahf
loopne
or
sub
add
xchg
stc
cmp
ss
sbb
dec
imul
mov
push
rcrl
dec
mov
jno
push
jmp
push
in
mov
mov
adc
xor
xor
fsubl
mov
icebp
mov
and
inc
and
movsb
mov
adc
in
jge
push
pinsrw
mov
divl
mov
mov
out
aam
test
push
jecxz
cmp
dec
mov
xor
movnti
jp
xor
jg
xor
stos
cwtl
xchg
inc
fsts
test
fistpl
incl
mov
in
movsl
cmc
mov
iret
fwait
adcb
lret
push
mov
add
fcomps
or
jns
inc
rclb
inc
xchg
inc
jmp
das
and
lahf
and
dec
or
jne
fists
mov
stos
sbb
push
add
sub
dec
and
dec
add
add
jecxz
ret
cmp
adc
mov
shrl
ss
sub
inc
xchg
imul
push
cli
cmc
stos
fdivs
leave
xor
jnp
out
movsl
and
pop
lods
dec
pop
push
bound
adc
and
outsl
jns
aad
pop
pop
pop
pushf
lret
sbb
enter
xlat
out
loopne
punpckhwd
in
mov
popa
test
mov
mov
xchg
popa
xchg
iret
xchg
mov
stos
js
lods
and
es
jge,pn
cmp
mov
repz
xchg
ret
push
std
inc
enter
pop
popf
push
pop
xor
fisttpll
arpl
or
incb
lds
js
mov
clc
incb
js
testb
add
data16
cmpsb
xor
xor
pop
fisttps
cld
lea
shll
ret
fimuls
rclb
mov
pop
mov
pop
iret
xor
dec
push
push
repnz
fcoml
pop
push
fdivs
subl
pop
push
push
jbe
mov
pop
loop
test
fs
dec
add
pop
mov
movb
mov
inc
cmp
xchg
inc
orl
mov
xor
pop
loopne
jmp
jns
insb
xchg
pop
jbe
out
push
add
popl
mov
mov
pusha
stc
popa
inc
fcmovbe
mov
test
or
xor
imul
xor
and
adc
jns
cmp
lods
sbb
int
mov
mov
inc
inc
xor
push
mov
cmp
or
mov
in
clc
testl
dec
loopne
das
loopne
sub
jg
mov
jle
mov
imul
aad
and
push
lods
push
cwtl
rcll
or
cmp
aaa
sub
arpl
lea
mov
cmc
ficomps
sub
push
loope
fstl
xchg
xchg
push
pop
imul
pop
jmp
into
test
pop
pop
jno
push
rcrb
cmp
or
sti
repnz
adc
fildll
jns,pt
cmp
mov
and
popa
and
lods
adc
iret
sub
push
mov
sub
jns
jb
and
movsb
stos
xchg
dec
mov
cmp
inc
std
mov
mov
jecxz
inc
add
cmc
out
fnstsw
adc
mov
inc
outsb
jecxz
sub
inc
data16
test
xchg
loop
add
lock
adc
pop
pop
mov
jnp
popf
jge
testl
push
sbb
orps
outsb
stc
and
das
icebp
lods
inc
cmp
push
mov
jo
inc
push
test
mov
cmp
lods
clc
inc
or
in
sub
pop
xor
sbb
mov
and
pop
lds
fiaddl
addr16
xor
fsubl
xor
stc
push
cwtl
jns
lcall
out
dec
pop
loope
fisubs
loope
cmc
cmpb
call
fwait
ret
mov
jg
xchg
repnz
or
jle
inc
and
sbb
inc
xor
iret
dec
rorl
icebp
lea
lods
mov
es
lret
xor
in
mov
jae
aad
and
push
mov
mov
rcll
xchg
out
mov
xor
mov
dec
out
addl
cmp
push
pop
xor
scas
mov
outsl
xchg
lods
adc
jns
cmp
rcl
imul
pop
xchg
xchg
outsl
push
ret
repnz
repnz
pushf
add
adc
cld
cltd
jne
or
pop
adc
mov
mov
andb
loope
mov
cmp
mov
inc
push
imulb
mov
hlt
dec
mov
sub
cs
iret
ss
js
into
jns
mov
sub
js
cmp
ret
in
dec
std
fcoml
sub
sbb
mov
es
mov
test
in
dec
lods
in
xchg
in
cmp
fnstsw
lock
and
test
out
jg
loop
pop
scas
mov
enter
stos
xchg
xchg
sub
mov
out
insb
in
aas
dec
scas
es
and
mov
pop
mov
hlt
mov
push
mov
pop
imul
xchg
ja
ds
sbb
aam
xchg
jb
jb
add
cmpl
inc
add
and
xchg
leave
sub
adc
lret
lds
xor
mov
pop
rcll
jg
andl
enter
movsb
rorl
jl
aad
mov
jecxz
mov
cmc
icebp
xchg
imul
mov
xchg
or
pop
pmaxsw
fwait
out
cwtl
sub
aad
insl
sbb
jge
test
xchg
jbe
mov
iret
scas
es
btc
outsl
cmp
lret
xchg
out
pop
cmpsb
out
sbb
clc
jo
dec
pop
mov
dec
rclb
scas
push
pop
xchg
mov
sti
out
add
leave
ljmp
test
insl
idiv
sbb
cmc
rclb
rcl
lret
and
aam
lods
cmpsb
mov
dec
xor
pop
adc
mov
cld
nop
lcall
xor
orl
js
xchg
fcoml
ficoml
lahf
rorb
imul
jmpw
imul
arpl
xor
aas
sub
add
xor
xchg
lods
push
cmpsb
jae
xchg
icebp
add
ret
enter
mov
icebp
mov
dec
xchg
mov
dec
ret
fsubrs
das
cmp
ds
jnp
pop
mov
push
out
inc
mov
je
fmulp
push
hlt
jnp
push
jge
jp
xor
cmp
push
mov
cli
mov
fcmovb
lea
es
data16
ljmp
or
xor
mov
inc
dec
mov
and
mov
adc
test
push
and
daa
mov
cmp
ja
out
pop
pop
pop
pop
scas
jbe
dec
inc
aam
movmskps
mov
push
call
xor
arpl
pusha
mov
jp
pop
lahf
push
and
scas
pop
mov
cli
iret
cmp
out
xchg
inc
xlat
scas
dec
dec
loopne
and
jns
ficompl
mov
mov
dec
ss
in
xchg
jno
add
lods
add
sub
or
pop
imul
stos
cmpsb
sub
out
rcrl
gs
adc
outsl
cld
add
fisttpl
mov
xchg
stos
jae
jmp
xor
scas
icebp
lods
dec
inc
sbb
icebp
in
leave
jge
inc
loopne
cltd
les
mov
dec
jge
cmp
stc
leave
jmp
jle
in
adc
gs
mov
or
mov
dec
sbb
push
sbb
sub
dec
sub
push
pop
jp
pop
stos
or
mov
dec
sub
sbb
out
mov
and
rolb
or
mov
cs
loopne
or
sbb
icebp
subb
in
mov
mov
push
bnd
sbb
pusha
pop
and
mov
xchg
cmp
push
cmp
sub
or
sti
push
aas
dec
mov
xchg
cwtl
pusha
cli
and
jle
je
les
sbb
push
test
jl
insb
pop
aaa
mov
xchg
stc
loop
scas
subb
pusha
bound
add
dec
dec
shrl
adc
sbbl
mov
mov
sti
addl
fimull
xchg
adc
popf
cmp
mov
jne
jns
test
mov
idivl
outsb
popf
js
cli
xor
aas
xchg
mov
push
negb
inc
lea
and
xor
mov
mov
enter
fldl
xchg
aad
inc
out
divb
nop
cmp
push
loop
loop
nop
push
dec
add
and
test
ret
adc
xchg
mov
ljmp
loope
sti
lds
test
jecxz
push
or
adcl
pop
xchg
xchg
inc
dec
add
repz
jne
add
lcall
clc
push
jo
jl
push
clc
sahf
push
xchg
divps
mov
imul
cmovnp
test
pop
push
push
js
aas
cli
xchg
xchg
mov
jno
cld
test
into
mov
push
mov
and
bound
in
callw
mov
pop
popf
inc
lods
inc
lods
sti
loop
ss
mov
clc
push
cltd
iret
mov
pop
sub
pop
pop
sar
cmpsb
add
addr16
popa
dec
arpl
orl
rcr
out
xchg
out
sbb
in
jne
addr16
les
jmp
aam
icebp
mov
add
sbb
nop
jnp
or
and
xor
push
fnstenv
test
std
sub
jns
xlat
iret
jne
sbb
jmp
pop
mov
fstps
xchg
mov
push
push
cmpsl
popf
xchg
mov
shrl
jbe
popl
frstor
inc
ja
popa
push
test
jnp
iret
cmp
enter
mov
or
sbb
mov
lcall
in
and
in
xor
jno
dec
nop
stc
mov
adc
add
adc
inc
out
bound
imul
push
aad
add
inc
popf
mov
add
test
popf
arpl
dec
movl
stos
imul
sbb
push
xchg
mov
outsb
pop
mov
inc
sbb
adcl
and
hlt
xor
mov
pop
test
xor
ljmp
shrl
imul
mov
sub
das
xchg
inc
roll
mov
sub
and
aad
sub
cmp
mov
movsl
jge
mov
mov
ljmp
or
cltd
xor
mov
ljmp
pop
aad
xchg
stos
fisubrs
test
and
in
sbb
sbb
insl
inc
dec
enter
pop
cmp
sub
adc
sarb
fwait
mov
mov
cli
js
int
xchg
dec
xchg
sti
inc
jmp
xor
ljmp
int
inc
jns
push
mov
adc
repnz
push
mov
hlt
loop
ud0
enter
mov
jmp
jnp
push
mov
add
repnz
xor
outsb
or
mov
and
es
jle
lcall
or
jg
or
out
rclb
out
shll
pop
pusha
inc
loope
cmp
inc
ljmp
pmulhuw
mov
sbb
pop
lods
mov
rclb
imul
enter
jle
icebp
fidivs
cmpsl
popf
aam
xchg
in
push
iret
inc
inc
xor
mov
pop
push
sbb
test
fwait
or
inc
and
sti
xlat
lods
jnp
add
divl
dec
nop
repz
dec
xchg
cmpsl
add
imul
adc
jp
push
mov
data16
jb
cmp
fadds
ss
cmp
lods
mov
add
aad
jbe
inc
inc
pop
push
mov
rorb
cmp
fnstcw
dec
sbb
in
mov
test
dec
dec
mov
mov
mov
and
ljmp
push
xchg
dec
push
add
inc
dec
movsl
pushf
ds
das
test
out
push
pop
das
lods
nop
jmp
decb
fstps
mov
out
sbb
into
mov
lret
leave
insb
xchg
xchg
jge
out
or
andb
int3
cs
mov
movsb
iret
sbb
xchg
mov
out
outsl
test
outsb
push
ret
fisubrl
mov
jp
cmpsb
push
xchg
add
lret
pop
push
add
pushaw
dec
adc
das
test
scas
sbb
jg
lds
jp
leave
xchg
jl
negb
mov
jp
adc
scas
popa
cmc
add
sbb
jle
iret
adc
cmp
mov
push
jmp
fists
cmpsb
mov
negl
push
mov
inc
add
xor
jne
mov
aad
xchg
out
mov
mov
clc
mov
pop
sub
dec
or
mov
pop
or
clc
sbb
aam
test
and
and
out
lcall
pand
xor
xchg
add
xchg
sarb
pop
mov
pop
add
fidivs
dec
iret
out
jl
or
sbb
out
sub
xchg
incb
or
mov
mov
mov
daa
adc
in
pusha
aad
pop
sub
jo
hlt
xchg
test
mov
stos
push
push
xchg
lods
and
sub
sub
inc
and
and
stos
pop
push
sbb
push
xchg
lret
xor
or
push
inc
enter
xor
push
cmp
and
sbb
outsl
push
adc
hlt
divl
dec
test
xchg
jbe
je
mov
sub
mov
aam
loop
out
ds
scas
jnp
repnz
dec
xchg
pop
xlat
jg
xchg
pop
outsb
pop
dec
push
js
mov
nop
mov
pop
fwait
adc
add
add
stc
inc
insb
fdivs
nopl
xorb
lea
ljmp
out
fisubl
in
jns
lcall
repnz
lret
or
push
jecxz
inc
int
dec
or
adc
ss
outsb
lods
or
shll
sub
ljmp
xor
jo
push
enter
sbb
in
push
cwtl
add
or
pop
jb
and
xchg
loop
int3
push
push
rcrb
into
cmp
hlt
imul
and
test
xor
lcall
and
add
outsl
je
xchg
dec
lret
clts
add
aad
push
push
mov
lahf
aad
lea
fs
cmp
and
mov
in
jo
mov
pop
push
mov
scas
pop
mov
mov
test
jmp
dec
or
fstpt
cmp
outsl
sti
daa
pop
sub
mov
loopne
mov
fsubr
pop
fcoml
pop
jmp
cld
or
xchg
repnz
mov
dec
jmp
leave
ja
pop
mov
test
and
loope
rolb
push
and
cvtps2pd
addr16
mov
mov
cs
nop
and
fldcw
lods
out
dec
mov
pop
dec
imul
jecxz
lret
sti
adc
stos
inc
gs
mov
add
cmp
push
inc
jne
mov
lock
xchg
repz
mov
push
lret
pop
push
sub
pop
mov
fistpl
mov
xor
data16
xchg
test
xchg
sbb
les
popa
inc
xlat
andl
jb
dec
sbb
xchg
cmpl
inc
lods
inc
imull
daa
inc
repnz
bound
xchg
push
ret
pop
jns
lods
sub
pop
sbb
jae
xchg
push
or
and
ret
jecxz
push
push
dec
into
cli
shrl
and
jmp
inc
inc
xor
mov
or
test
sub
jno
pop
xor
jne
mov
js
fnstsw
hlt
xchg
and
mov
loope
inc
mov
add
adc
aam
stos
and
or
loopne
shll
dec
jo
enter
push
cwtl
icebp
inc
or
aam
imul
push
jmp
push
mov
out
adc
aas
push
adc
push
bnd
in
in
jl
hlt
rcrb
pushf
xchg
fs
and
mov
pusha
cmp
pop
cmpsl
xchg
in
call
pop
add
into
push
push
movsl
jne
mov
xchg
dec
test
jge
faddl
lret
mov
fbld
outsl
icebp
hlt
push
mov
lcall
scas
cld
fsubrs
push
repz
jno
loop
outsb
sub
cltd
push
leave
pop
inc
subl
dec
mov
lcall
in
call
out
aad
aas
flds
or
push
mov
shr
jns
and
xor
cmp
xor
rcrb
daa
fcoml
scas
enter
pushf
jge
in
popa
dec
push
mov
stos
xchg
pop
test
fdivl
xor
mov
jno
mov
in
adc
test
loop
pop
gs
pushl
bound
inc
into
ss
adc
jp
sub
pop
xlat
jns
xor
mull
dec
push
test
or
js
imul
stos
push
aad
jns
or
lahf
xchg
into
in
repz
mov
and
scas
xchg
adc
push
sbb
jge
gs
into
fildl
mov
loopne
pop
imul
iret
aam
sbbb
icebp
lds
shrl
adc
or
aaa
notb
fdivrs
dec
push
into
cmp
or
leave
cltd
jl
cmpsb
pop
pop
jns
roll
daa
cmpsl
inc
xor
jmp
fisubrl
or
add
mov
fcompl
mov
or
xchg
mov
push
imul
das
jb
and
xchg
and
xor
adc
push
call
mov
sbb
mov
jno
aad
jae
mov
dec
mov
popf
int3
stos
cli
div
cmp
das
adc
xor
rcrb
xchg
inc
sbb
adc
cld
mov
fldcw
or
dec
aad
cmp
hlt
test
cmc
dec
stos
mov
sub
xor
out
movswl
mov
rorb
push
jno,pt
lods
repz
inc
cmpsl
loop
pop
push
jb
aaa
mov
shrl
in
addr16
xor
stos
xor
insb
popl
inc
add
sub
scas
pop
shr
mov
cltd
scas
in
test
xchg
daa
lods
fcmovb
popl
pusha
insb
xchg
cmpsl
orl
mov
add
test
xchg
dec
pop
or
mov
imul
stos
push
je
mov
insb
mov
imul
mov
sub
loopne
mov
push
jns
mov
cwtl
xchg
aas
stc
or
std
imul
rep
loopne
xor
aas
mov
enter
sub
imull
pop
in
sarb
outsb
mov
arpl
dec
xchg
mov
ficoms
and
cmp
cmp
jge
and
in
test
aas
dec
scas
adc
aam
mov
adc
cmpsl
dec
mov
mov
mov
fldt
mov
cli
inc
sbb
mov
add
sub
mov
mov
push
fistps
aad
dec
aaa
shr
movsb
in
add
pop
loopne
ret
cld
xchg
pop
shlb
ljmp
jmp
jne
out
dec
lods
pop
fwait
push
jne
fidivrl
dec
jae
jmp
movsb
or
jmp
sbb
add
cltd
xchg
mov
int3
and
std
adc
ja
idivl
mov
lods
daa
and
or
rclb
stc
xchg
mov
mov
leave
jb
scas
in
or
add
stos
into
stos
imul
xor
insb
xchg
inc
jge
dec
ret
sub
fs
adcl
mov
call
outsb
adc
xor
les
cwtl
mov
mov
mov
or
xchg
mov
jmp
and
je
mov
push
in
outsb
or
addl
nop
dec
dec
mov
inc
lahf
mov
dec
fdivrl
xchg
jnp
mov
xchg
arpl
mov
fadd
mov
inc
fiaddl
push
xor
push
xor
dec
adc
mov
lret
push
in
shl
mov
xor
push
mov
ss
test
xor
test
sbb
mov
cltd
dec
aas
xor
lods
pop
jle
xlat
sbb
ljmp
jle
jecxz
mov
sub
dec
inc
and
mov
movsl
sub
in
enter
sbb
fsubrl
mov
adc
movl
or
and
sbb
jb
ss
sbb
push
aaa
or
adc
mulb
aas
push
xchg
push
subl
and
lahf
mov
sbb
scas
cmp
aam
add
cmpsb
or
dec
andb
adc
ret
add
roll
iret
cmp
push
into
and
aam
inc
sbb
cltd
aad
cmpsl
mov
pop
aad
pusha
imul
test
data16
lods
out
pop
lods
mov
addr16
imul
mov
pop
mov
cmp
pop
push
cmpsb
push
loop
sahf
addr16
xor
sbb
or
mov
and
ficoms
loop
or
add
insb
mov
ret
push
test
outsl
xor
out
or
hlt
popa
ljmp
imull
adc
movsb
js
push
mov
sbb
ffreep
loop
pop
jle
punpckhwd
push
or
fisubrl
sbb
wbinvd
jle
outsb
in
cmp
leave
xor
pop
fxch
xor
cmp
sbbl
inc
inc
call
in
xor
test
mov
xchg
out
jp
mov
out
push
addr16
es
jae
dec
aaa
mov
sub
outsb
adc
stos
cmp
dec
mov
cli
sub
out
ljmp
cmp
test
push
sbb
movsb
jl
lahf
ret
ret
xchg
inc
movsl
repz
xchg
orb
idiv
xchg
das
pushw
aas
repz
mov
inc
mov
pop
in
or
stc
test
mov
int
jecxz
insb
sahf
outsl
subl
inc
cli
add
mov
sub
sbb
xchg
std
xor
jl
sub
ds
repnz
shrb
je
jae
fmull
mov
pushf
or
lret
mov
add
sub
out
mov
insl
mov
hlt
sbb
or
lret
pop
push
mov
jo
jbe
lahf
in
mov
mov
leave
cmc
xchg
mov
leave
xchg
sbb
mov
inc
loope
call
scas
mov
movsl
imul
loop
dec
sub
mov
cld
aas
mov
in
in
rorl
adc
xor
xchg
inc
and
cltd
xor
stos
or
insb
fwait
adc
je
cwtl
std
std
fnsave
dec
outsw
lds
lcall
ret
mov
mov
fdivs
jo
mov
call
or
xor
sub
daa
and
test
cmp
push
mov
jmp
ret
add
loop
in
dec
std
mov
cmpsl
lcall
dec
mov
ja
mov
incl
add
test
andl
lods
dec
xchg
movsl
int3
enter
jle
and
les
addr16
dec
xor
lcall
pop
push
movsb
pushf
je
in
push
iret
cmpsb
jo
pop
pushw
xor
insl
mov
inc
add
inc
in
mov
stc
lds
mov
xchg
fmul
imul
notl
sbb
dec
mov
lods
cmp
mov
pusha
inc
repz
fucom
test
or
push
je
mov
push
xchg
je
sbb
movsb
sub
ds
dec
and
fucomp
xlat
push
add
imul
mov
loop
fwait
repnz
xor
and
iret
xchg
cmc
ss
mov
sub
aam
sahf
nop
pop
inc
or
out
push
inc
stos
cld
mov
pop
rcrb
mov
andl
or
outsb
mov
cwtl
out
repnz
pop
test
mov
mov
fstpt
cltd
data16
inc
scas
add
test
fadds
add
inc
das
push
jg
add
fsubrl
stos
adc
cs
rcll
cmpsl
mov
pop
mov
or
adc
pop
pop
jno
mov
mov
mov
loopne
stos
xchg
test
cwtl
push
inc
lock
rcrb
mov
add
cmp
xchg
dec
jae
popa
cmc
xchg
xchg
enter
shrl
sbb
mov
lods
mov
pop
jnp
bound
cmpsb
add
mov
jg
sbb
mov
jp
aam
daa
mov
cmc
test
andb
les
xor
hlt
je
cmp
popf
adc
sbb
imul
xchg
add
push
out
sbb
adc
jbe
ss
push
aaa
outsb
adc
push
rcrb
add
add
loopne
out
arpl
arpl
pop
bound
sarl
in
test
xchg
jne
cli
lcall
xchg
mov
pop
shll
ljmp
xchg
sahf
lds
inc
cltd
and
jo
pushf
ficomps
inc
cwtl
insb
lock
in
in
loopne
adc
ja
or
sti
mov
jno
jno
jge
or
mov
mov
dec
mov
sbb
or
ss
lods
xor
outsl
push
aam
push
rcrb
adc
and
mov
xchg
outsb
or
push
push
cmovle
imul
lahf
ret
out
sbb
outsl
pop
shrl
mov
gs
inc
add
jl,pt
aas
mov
sub
cmc
pop
in
dec
fidivrl
loop
fldcw
cmpsl
popf
loop
dec
xchg
dec
jb
idivb
repz
cs
lods
sbb
mov
mov
aas
sub
sub
mov
sub
lret
ljmp
jg
xchg
loop
loopne
fmull
or
mov
rolb
xchg
cmpsb
mov
movsl
dec
inc
cwtl
adc
inc
dec
fstpt
dec
sbb
jge
cmpsb
ljmp
add
loop
leave
loopne
mov
in
push
movsb
data16
aam
pusha
mov
lcall
pop
mov
ds
icebp
cwtl
daa
mov
mov
push
push
not
mov
out
ljmp
xchg
inc
pusha
adc
out
mov
mov
sub
lcall
xchg
nop
push
push
hlt
dec
pop
sbb
fucomip
pop
pop
dec
std
test
insb
das
cmp
xchg
out
test
out
mov
push
sti
xor
daa
popa
or
mov
mov
pop
mov
sub
sub
inc
les
test
or
mov
stc
ret
into
xchg
movsb
mov
pusha
rcll
pop
into
dec
pop
xor
push
or
xor
xchg
mov
ret
clc
mov
mov
mov
push
divl
jno
out
and
call
sbbl
mov
jg
xor
leave
sbb
add
mov
loopne
pop
pop
and
pop
fidivl
sub
mov
xor
xor
mov
and
loope
mov
mov
shlb
rcrb
inc
lahf
and
adc
push
push
out
es
stos
dec
xor
loope
xor
cmp
fs
bnd
pop
sbb
out
lods
repz
sarl
jge
out
mov
pop
imul
add
inc
in
lods
xor
adc
sbb
or
mov
ret
mov
or
test
faddl
sub
cld
cmp
test
mov
mov
sbb
inc
sbb
jmp
add
or
push
lods
insb
scas
roll
mov
js
inc
push
cmpsb
mov
cmc
lods
cmpsl
loopne
dec
cmp
in
and
arpl
ficompl
pop
xchg
mov
or
rclb
insl
mov
fstpt
sub
aas
sbb
jne
jge
aad
jb
mov
sbb
lock
call
xor
fs
les
jo
mov
mov
icebp
xchg
clc
ret
sbb
out
xchg
and
cmpb
jae
jne
pop
out
adc
out
lret
or
mov
xlat
fstl
lods
and
inc
mov
test
and
xchg
pop
xor
cmp
push
sbb
cmp
gs
jecxz
loopne
hlt
sbbl
in
lahf
sti
or
dec
je
sbb
nop
lea
frstor
sub
mov
lock
fbld
loopne
mov
mov
add
inc
fisttpll
or
jo
and
inc
hlt
ficomps
sbb
mov
fnstenv
cmc
clc
dec
in
stos
neg
cltd
call
adc
push
xor
mov
pop
ret
int
sbb
or
test
mov
call
ret
enter
dec
jno
sbb
test
ds
popf
std
inc
jmp
inc
jge
adc
pop
xchg
shr
or
jae
adc
mov
shl
adc
xchg
loope
out
xchg
fucomi
out
push
fcompl
fldl
add
fiaddl
mov
faddl
fsts
je
test
sub
test
dec
enter
jae
das
push
cmp
leave
add
xchg
cwtl
and
test
andl
or
movsb
sub
fldl
mov
pop
xor
les
dec
dec
xchg
and
lods
cltd
ss
dec
testb
movsb
jnp
fisubl
inc
mull
lret
iret
push
xor
jae
xor
push
or
aaa
sbb
ficomps
pop
adc
out
add
pop
test
leave
cltd
lret
cmp
mov
aaa
sbb
or
dec
outsb
push
jae
hlt
mov
dec
inc
mov
mov
nop
popa
loop
into
std
lret
aam
pop
sti
push
das
mov
mov
lods
mov
lea
lock
add
pushfw
fcmovnbe
push
cwtl
in
insb
pop
cmpsb
push
xorb
bndstx
aam
push
push
adc
int
dec
mov
xchg
jge
dec
movsb
jbe
lahf
sar
gs
outsl
pop
adc
and
or
int
fnsave
lret
fiaddl
jne
fidivrs
jecxz
push
and
test
ret
cmp
scas
ja
rcrb
xchg
inc
pop
mov
sbb
sub
outsb
enter
out
cmpsb
in
inc
maskmovq
testl
fcomi
pop
sbb
cmpsl
scas
test
mov
xor
dec
iret
push
out
push
dec
cs
or
push
or
inc
add
fisttpll
and
aad
je
jbe
xchg
or
lock
jno
sbb
mov
lret
test
gs
cld
js
xchg
daa
mov
adc
std
subb
test
mov
xor
xorl
dec
mov
jns
stos
inc
mov
sbb
and
adc
mov
aas
mov
sub
sub
das
loopne
dec
sarb
stc
mov
leave
stos
jns
mov
mov
pop
pop
jno
mov
adc
xchg
inc
mov
shll
mov
push
mov
push
mov
inc
dec
jbe
je
cmpsl
or
sbb
pop
dec
lods
pushf
rcrb
mov
and
jo
adc
out
xor
pusha
lods
push
inc
adc
cmpsl
add
xchg
into
outsb
icebp
cmpsb
mov
call
mov
pushf
lds
sarb
dec
lahf
inc
pop
xchg
shlb
jp
mov
stos
inc
jnp
jo
sarl
mov
orl
adc
inc
call
or
sbb
sbb
or
cwtl
fisttpll
inc
test
ret
adc
jge
adc
cs
out
xchg
mov
fistps
cld
xchg
shrb
push
iret
dec
push
ljmp
mov
test
add
in
xor
cmp
cmpb
mov
fdivs
xchg
cmp
loopne
cld
inc
outsb
mov
pop
stc
push
inc
lahf
movsb
pop
lods
mov
lods
loopne
pop
pusha
sbb
outsb
sub
neg
xchg
xor
insl
movsl
push
cmpsl
flds
in
xor
mov
add
add
jo
mov
mov
ficoms
sbb
cmc
scas
mov
shl
sbbb
inc
out
sub
repz
or
sub
mov
xor
mov
cmp
lods
aas
fwait
popf
data16
hlt
mov
in
and
and
sbb
fidivrs
or
fmul
test
fsub
adc
mov
es
jp
mov
fimuls
push
or
loope
mov
mov
and
adc
ret
pop
repnz
sub
mov
cltd
jmp
scas
in
inc
out
jno
stos
pop
mov
jo
ret
stos
mov
movsb
lock
push
aaa
jge
imul
add
push
mov
cld
test
dec
arpl
add
pop
out
in
jb
rcrl
inc
xlat
pusha
and
push
testb
scas
and
sub
pushf
fwait
push
add
imull
int3
mov
sbb
mov
and
sti
test
pop
out
inc
ja
lods
lret
dec
pop
movsl
sub
mov
push
shlb
sarl
fdivrl
add
pusha
pop
xchg
mov
dec
and
and
mov
mov
xlat
int3
gs
pop
cli
fsubs
and
and
jbe
push
mov
cs
arpl
dec
nop
rcl
andb
scas
xchg
push
dec
fsubrl
jl
and
sbb
jle
ja
xlat
test
inc
push
sbb
sti
cli
pusha
mov
xor
or
popf
out
inc
sbb
test
mov
sti
pop
xor
or
ror
jl
mov
pop
notl
inc
int
lock
int
fs
jl
mov
and
test
adc
lods
sti
and
xchg
xor
scas
mov
and
jl
orl
push
push
xchg
add
inc
mov
sahf
mov
xchg
sbb
jno
pop
inc
dec
lret
out
aam
push
or
and
sub
nop
bound
lea
mov
subl
push
xchg
xchg
enter
mov
xchg
loop
movsb
cltd
adc
or
sbb
add
clc
loopne
fnstcw
jecxz
mov
sbb
jb
fldcw
inc
push
das
mov
mov
shll
pop
movsl
aam
sbb
rcr
outsb
mov
pushf
pushf
pop
outsb
fwait
ljmp
add
sbb
jecxz
adc
push
fwait
into
sub
cmp
xlat
pop
call
xchg
mov
ss
inc
xchg
jno
fcomp
mov
out
iret
les
scas
pop
ret
shll
push
dec
push
jecxz
or
push
cmp
cmp
sub
fisttps
test
cmpsb
xchg
ret
int
imul
sti
adc
mov
push
push
out
int
push
cmp
ja
inc
icebp
out
pop
mov
sbb
addr16
testl
orb
dec
sub
test
sbb
ds
fists
repz
lret
mov
repz
cmp
jl
idivb
addl
cmp
mov
adc
push
cmp
adc
insl
pop
mov
fnstenv
lcall
and
push
imulb
xchg
pop
call
in
mov
roll
int3
hlt
inc
sub
es
jnp
xchg
lods
hlt
lds
fimull
add
push
xchg
sub
js
data16
mov
xor
cmpsl
addb
imulb
jge
jnp
pushl
iret
rcll
add
repz
jmp
jb
xor
in
dec
insb
or
pop
push
roll
jl
and
cwtl
or
cmp
mov
mov
dec
jae
pop
repz
fs
xchg
adc
insb
fimuls
and
push
jg
adc
test
sbb
test
dec
mov
in
loope
jae
xchg
mov
sarb
popf
insb
test
pop
fidivs
mov
sarb
sbb
aas
bound
mov
rorb
in
dec
cmp
jmp
cmp
push
or
mov
xor
dec
xchg
fistl
in
pusha
dec
pop
pusha
dec
push
lods
sbb
push
das
push
in
sbb
pusha
xor
adc
fldt
mov
shlb
adc
stos
push
sub
inc
mov
cli
push
push
jbe
add
movsl
pop
fsubl
adcb
lds
push
jmp
and
iret
mov
mov
popf
mov
rol
fadds
in
sti
pusha
lahf
rcrl
sbb
xchg
sbb
rclb
out
cmp
imul
mov
gs
or
cwtl
jg
call
fs
dec
dec
mov
lret
jo
sbb
adc
push
outsl
push
test
out
mov
icebp
repnz
push
les
int3
push
xor
pusha
jecxz
cmp
sbb
cmpsl
pop
hlt
cmpsb
cmp
aaa
es
mov
mov
and
mov
add
ds
push
inc
test
mov
lock
pop
add
imul
lock
mov
ret
out
sub
rol
lahf
mov
sub
lret
nop
test
lock
jbe
ret
sbb
push
sahf
fldenv
sbb
cs
movsl
mov
mov
iret
mov
loopne
xchg
push
arpl
mov
popf
mov
jns
sbb
pop
inc
insb
or
adc
pushf
cmpsb
push
push
mov
std
xchg
cmp
bound
popa
mov
aas
jl
sbb
xor
xor
mov
mov
xchg
fs
lcall
mov
clc
lods
or
jae
test
cld
dec
lea
pop
dec
push
adc
adc
es
clc
fwait
sarl
mov
and
ss
je
repnz
mov
inc
andb
insb
pop
popf
idivl
daa
add
lcall
or
push
jb
cltd
mov
aam
jge
jecxz
push
popl
pop
fwait
stos
orl
push
cmpsb
jge
and
sbb
test
sti
addl
jmp
add
or
sahf
sub
stos
rorb
hlt
imul
xchg
pusha
ret
add
push
push
addr16
idivl
enter
lods
cwtl
iret
pop
push
sub
push
lahf
loop
push
setnp
xor
repnz
inc
imul
aas
xchg
xchg
jp
pop
fcoms
xor
lret
enter
inc
cmc
mov
in
add
in
and
aad
std
cmp
imul
xlat
xchg
dec
loop
pop
inc
testb
or
imul
fidivs
outsl
in
in
mull
out
dec
xor
lods
int
adc
sub
pop
jmp
nop
add
movsl
pop
push
das
stos
das
and
in
loopne
int3
scas
jae
rcr
xchg
add
cmp
test
outsl
mov
or
mov
out
xor
cmp
dec
pop
stos
inc
and
push
pushf
push
ret
std
sbb
dec
push
and
shll
cs
rcl
pop
dec
mov
cmpsb
icebp
loop
in
lret
mov
pop
rorb
popa
mov
adc
movsb
and
les
sbb
xchg
and
and
out
sbb
rcr
movl
cli
inc
jmp
jle
inc
dec
fisttpl
inc
jne
pop
mov
sbb
aam
repnz
sbb
xorl
lahf
out
std
push
jmp
lock
sbb
js
sbb
subb
mov
out
jge
xchg
out
sbb
repz
lods
jns
aas
adc
cmc
inc
sbb
jecxz
iret
mov
push
popa
dec
xchg
adc
jge
jne
repnz
sbb
sbb
ret
cmp
loop
xor
es
lea
imull
test
test
les
lret
xor
stos
imulb
int3
add
xchg
mov
dec
mov
mov
dec
out
rcrl
js
scas
inc
jle
jns
xor
push
scas
ucomiss
xchg
loope
mov
mov
ret
pop
ds
mov
mov
dec
mov
jae
sbb
movsl
mov
xor
push
sub
cmp
and
ja
jns
cs
pusha
lds
or
sub
aaa
mov
dec
sbb
sbb
out
psllw
push
mov
cld
xchg
das
pop
insl
mov
pop
xchg
fildll
jne
mov
popa
mov
lcall
outsl
lds
add
out
jg
or
aam
inc
shlb
push
aad
pop
fbstp
xor
testl
ret
mov
testl
inc
mov
jmp
fsts
test
in
cmp
popa
dec
cwtl
or
and
add
fwait
jo
xor
repz
xchg
and
dec
xor
out
out
xlat
mov
in
daa
or
shlb
jno
ret
xchg
lods
dec
pop
lods
ror
cltd
addr16
es
mov
mov
adc
daa
leave
loop
inc
or
ss
insb
lods
sar
xor
inc
pop
push
push
push
or
dec
push
stc
and
xchg
pop
jnp
mov
sbbb
mov
jp
addl
clc
cmp
xchg
pop
pop
imull
out
clc
push
enter
jle
fwait
scas
xor
mov
cs
inc
xorps
push
test
stos
ficoml
sub
xor
and
ljmp
xchg
not
sbbb
out
in
je
mov
leave
adc
mov
jecxz
lahf
and
xchg
es
inc
adc
les
mov
sti
in
mov
incl
imul
lahf
adc
push
cmp
mov
jle
and
sbb
icebp
add
push
smsw
xchg
mov
inc
pusha
and
mov
jecxz
pop
dec
lds
cs
jbe
js
xchg
popf
jecxz
daa
adc
inc
inc
and
into
lock
inc
int
test
cmp
and
call
sbb
jnp
xor
repz
std
loope
imul
cmp
dec
and
fdivl
or
xchg
cmp
mov
push
fadd
add
arpl
fiaddl
fs
sub
cmpsb
imul
loop
test
loop
add
xchg
sbb
cmpsb
sub
ret
test
cmove
pop
dec
outsl
push
ds
stc
push
mov
gs
lods
ror
out
mov
fimuls
and
loopne
jae
lods
cmp
mov
dec
fimull
mov
sar
sbb
xchg
mov
push
lea
and
push
inc
cmp
mov
mov
mov
iret
sub
mov
clc
jbe
jbe
rclb
fcomip
sbb
das
mov
cli
jne
fistps
lea
repnz
mov
in
pop
outsl
jp
insl
dec
pop
test
enter
pop
mov
lods
lea
je
adc
or
pop
loopne
cs
inc
jno
ret
mov
bound
jbe
sbb
push
xchg
mov
movsl
mov
stc
add
jno
pushf
mov
jmp
push
jg
jnp
daa
pop
lcall
imul
mov
lahf
mov
xor
movsl
in
xchg
adc
mov
pop
popf
sub
int3
imul
and
lahf
jno
shrl
gs
cmp
aaa
push
inc
in
rcll
icebp
adc
scas
add
dec
loope
ret
adc
and
push
pop
outsl
sets
xor
push
xchg
mov
jae
inc
das
mov
daa
mov
jne
addr16
or
loope
jg
inc
dec
pop
xchg
pop
inc
adc
mov
ds
add
test
mov
ret
jp
outsl
mov
cmp
jo
lock
bound
pop
rorb
std
and
xchg
out
mov
and
imulb
loop
mov
aaa
sbb
sub
ljmp
dec
popa
pop
in
int
xor
push
push
pop
pusha
nop
xchg
mov
xor
xchg
popf
aaa
repz
ficoml
push
pop
jnp
mov
mov
sbb
inc
jmp
cltd
sbb
jmp
push
jg
les
test
sub
add
adc
push
xor
fiaddl
nop
in
push
stc
dec
ds
dec
mov
jge
and
and
adc
test
scas
jge
sub
xchg
pop
testb
je
sti
cli
or
push
test
dec
dec
push
xorb
xor
xchg
ds
sub
popf
addr16
mov
stos
or
jnp
push
and
push
jns
mov
aam
add
mov
out
jae
sarl
scas
push
loope
out
fisubrs
int
push
lods
hlt
xlat
push
xchg
fldt
lahf
cmp
bswap
rcl
lods
mov
insl
pop
aaa
iret
sti
cs
sub
jmp
xor
outsl
cmpsl
std
inc
push
jmp
and
push
fiaddl
and
push
cs
les
and
and
pop
ret
adc
test
shrl
iret
out
jb
cmp
iret
bound
call
xchg
pusha
add
mov
enter
or
mov
pop
lods
addr16
push
enter
sub
mov
ret
xor
fldenv
outsb
or
mov
jle
add
push
sahf
test
inc
xor
adc
mov
cmp
rcrb
loope
mov
sahf
gs
push
inc
negb
jge
sbb
xchg
scas
mov
cmp
pop
inc
adc
xchg
pop
xor
arpl
movsl
outsl
jb
adc
and
dec
leave
test
xchg
push
pop
test
pop
cmp
jge
decb
sti
sub
stos
sbb
xor
dec
jle
clc
pop
dec
out
aam
jo
inc
loope
test
fnstcw
out
mov
sub
jecxz
add
cmp
movsb
mov
jle
ljmp
adc
lock
lret
les
mov
in
cs
dec
dec
loopne
jl
and
sbb
push
rorl
xchg
es
mov
ret
divb
inc
inc
add
or
and
pop
out
lods
pop
stc
nop
mov
out
out
aas
cmp
xor
mov
push
mov
in
jg
out
adc
cmp
dec
dec
xor
setnp
out
sti
xchg
lods
or
testl
daa
int
cltd
cmp
jo
mov
stc
push
mov
arpl
dec
mov
stos
mov
cwtl
rclb
and
or
and
or
pop
aam
shrl
jp
aam
jo
cmp
push
jmp
lret
inc
lret
pop
test
xchg
cld
in
sbbb
enter
push
mov
leave
pop
xor
clc
sub
rcr
push
pop
cmp
stos
bound
jno
fists
loopne
sub
jle
and
ja
jge
xor
inc
sub
push
sar
jl
icebp
fnstsw
push
int3
pop
insl
es
adc
loopne
aaa
push
fwait
inc
xchg
push
pop
cmp
inc
push
js
cmc
sub
fcomps
in
int
xchg
test
lock
enter
pcmpeqw
shr
daa
cmp
fcmovu
lret
inc
sahf
sbb
xchg
jg
pop
call
mov
jnp
dec
adc
cwtl
fwait
lret
cld
pop
rcrb
sbb
enter
adc
mov
push
push
cwtl
mov
cmp
xchg
sahf
xor
adc
out
sbb
inc
inc
push
xorb
mov
mov
pusha
daa
xchg
xor
repz
movsb
xor
imul
repnz
xor
lcall
jb
out
in
cs
xor
int3
clc
push
cltd
popf
repnz
or
push
in
add
subl
rcll
pop
data16
jno
jno
sbbl
and
int
sbb
inc
mov
inc
mov
cltd
clc
mov
fmulp
dec
daa
out
cmp
fmuls
or
fiadds
and
aas
ret
iret
outsb
outsl
fbld
out
mov
mov
out
sub
mov
ljmp
pop
xchg
mov
or
mov
lcall
test
or
cli
push
mov
je
cmc
call
adc
das
inc
sub
aam
dec
mov
lods
leave
hlt
mov
das
test
loope
leave
xor
pop
dec
les
mov
pop
jl
jne
cwtl
jb
jle
xchg
push
ret
ljmp
es
push
outsl
adc
pop
repnz
mov
jns
mov
dec
cmp
mulb
mov
inc
jbe
adc
loop
arpl
out
not
mov
sub
test
in
inc
call
mov
dec
loope
loop
mov
test
jno
pusha
aas
sub
inc
testb
test
mov
cwtl
xor
test
xchg
sub
jmp
sbb
add
or
int
lret
test
lds
lds
outsb
mov
mov
outsb
sbb
adc
scas
ja
ficomps
dec
mov
test
cli
dec
pop
sarl
imul
in
or
scas
adc
add
iret
add
xchg
in
sti
sbb
leave
sub
dec
lods
adc
out
mov
mov
xchg
js
sbb
cmp
xor
repz
add
shr
aas
add
add
push
vlddqu
test
mov
and
or
sahf
roll
xor
imul
inc
adc
sti
rorl
in
test
mov
incb
push
fisubrl
scas
fcoml
lcall
test
fucomip
add
push
mov
sbb
xchg
xchg
in
out
mov
jl
mov
pop
in
mov
jmp
nop
stos
pop
xchg
jp
lock
shlb
dec
mov
scas
adc
jg
xor
repz
mov
nop
mov
mov
and
idivl
jne
inc
jno
sbb
jle
cmp
mov
cmp
inc
or
lahf
sbbl
pop
repz
xchg
outsl
cmc
insb
add
pop
xchg
sbb
movsl
popf
mov
push
dec
dec
rcr
adc
push
cmp
adc
test
xor
or
fstps
cmc
pusha
mov
ficoml
and
mov
adc
orl
and
loopne
test
mov
aad
dec
xchg
scas
jp
fbld
mov
pop
pusha
test
push
add
stos
jne
loopne
pop
add
cld
sbb
and
cltd
scas
xor
dec
aaa
std
xor
rcrb
lcall
mov
scas
loope
xor
jp
push
push
into
jmp
pop
dec
psubq
rorl
mov
adc
xchg
xor
lea
jmp
in
repz
clc
pop
xchg
adc
adc
rcrb
cltd
fwait
dec
cs
xchg
cmp
adc
xchg
mov
scas
adc
push
pop
inc
mov
push
jnp
lahf
js
push
mov
jmp
inc
je
inc
insb
xchg
lods
xchg
fldenv
xor
dec
jg
or
cmp
xchg
push
rcrb
subb
fwait
jns
daa
fdivrs
pop
imul
std
or
lea
and
stos
mov
mov
mov
dec
sub
push
cmp
cmpsb
add
enter
xchg
notb
jl
and
dec
rcr
and
jp
jl
push
cmp
jno
sbb
add
pop
jbe
jl
in
ss
gs
out
sub
clc
xor
pop
js
daa
mov
push
push
jb
push
out
test
cld
mov
sub
push
mov
out
sub
into
sar
loop
inc
add
sbb
push
dec
pop
jbe
lds
mov
adc
in
mov
push
adcl
adc
mov
adc
rclb
insb
adc
into
cmpl
out
inc
repnz
pop
cltd
iret
adcl
pop
pushf
cwtl
call
xor
sbb
push
out
mov
or
sbb
repnz
mov
rcll
loopne
out
daa
int
push
xchg
out
mov
jne
push
add
shrl
dec
or
push
mov
mov
add
xchg
out
aad
lcall
bound
push
gs
or
xchg
mov
push
leave
aaa
sbb
addr16
mov
sbb
cmp
xchg
cmpl
fnstcw
lods
test
pop
testl
stos
push
dec
les
loope
call
outsl
out
test
icebp
rorb
call
mov
add
xor
jns
aas
cwtl
xchg
in
in
cs
jp
and
jnp
aaa
add
mov
lea
dec
lock
jnp
aad
and
mov
push
jns
mov
scas
dec
ret
push
mov
repnz
xor
call
mov
add
mov
sbb
add
orl
cmpsb
movsl
lea
das
mov
inc
sub
int3
shll
daa
push
sti
sbb
xor
jne
sbb
aam
adc
pop
dec
js
pop
stos
scas
shl
cmp
gs
sbb
movsb
push
xchg
cwtl
sahf
idivb
mov
jb
and
jg
cld
in
xchg
mov
xchg
das
pop
pop
jbe
insl
and
int3
inc
mov
rep
adc
subl
jno
lods
jne
push
mov
inc
sbb
pop
rcl
cltd
ss
lock
test
or
popa
jecxz
add
mov
arpl
aad
jno
mov
sub
xchg
cmpsl
push
jb
repz
cmpl
idivb
pop
sub
inc
and
or
mov
sbb
inc
adc
mov
arpl
inc
lret
add
hlt
lock
mov
inc
xorb
icebp
pop
popf
inc
divb
add
lret
repnz
sbb
notl
pop
or
mov
lods
xchg
cltd
add
and
xchg
jg
aam
ret
push
push
call
push
shrb
sub
mov
and
and
jns
sub
mov
je
lret
insb
add
popf
mov
and
jge
ja
jge
jb
fistpl
mov
mov
cmp
nop
xor
mov
arpl
sbb
push
inc
mov
cmpsb
call
xchg
fdivs
cmp
mov
push
mov
xchg
adc
push
push
xchg
mov
mov
outsl
sub
mov
mov
xchg
ret
ljmp
mov
push
nop
adc
pop
push
mov
mov
sub
xor
pop
dec
outsb
adc
adc
push
pop
mov
push
mov
daa
inc
mov
lret
mov
add
mov
and
stc
or
icebp
sub
repz
cmpsb
int3
int3
jl
adcl
pop
cltd
push
fstl
xchg
arpl
xchg
popa
lea
sbb
rolb
lods
push
adc
xor
lea
mov
jnp
and
incl
inc
xor
sbb
xor
ficomps
jge
mov
push
rcl
aaa
push
push
sub
mov
scas
aam
pop
xor
pop
or
scas
test
lret
mov
pop
lods
jle
repz
sti
pop
mov
jg
addr16
shlb
lods
jb
fdivr
inc
sub
push
sub
sbb
xchg
pushl
sub
dec
and
jge
std
jae
jmp
push
xchg
push
loop
daa
shrl
insb
cmp
lds
xchg
into
push
mov
ret
das
pop
mov
gs
fadd
loop
pop
mov
mov
mov
and
adc
lahf
xchg
aam
clc
and
add
xchg
mov
es
jne
pop
mov
xor
out
jp
not
test
in
mov
cmp
mov
xchg
fldt
mov
and
inc
cmp
pop
cmp
dec
nop
pop
inc
int
xchg
out
test
ror
sahf
push
pop
imul
rolb
jmp
popw
pusha
xor
jnp
test
push
sahf
jnp
or
add
cmp
jp
fs
in
ficoms
and
sahf
or
sub
leave
sti
pushf
cs
jp
inc
insl
jl
out
mov
jns
sub
mov
mov
les
fdivrl
jle
sti
hlt
divb
popa
shlb
jo
push
push
xchg
fmull
sbb
loope
mov
out
push
outsb
sbb
out
test
mov
and
add
ds
fidivs
movsl
cmp
movsb
push
cmp
xor
pop
sub
jmp
pop
xor
sub
int3
jns
pop
imul
out
daa
repnz
out
sub
mov
pop
fcmovne
mov
scas
add
and
xchg
push
icebp
xor
stos
jae
lods
sbb
stos
jbe
sahf
rclb
pop
jnp
jbe
sti
mov
adc
jecxz
arpl
jecxz
ds
daa
xor
dec
xor
into
cld
scas
loopne
inc
inc
sbb
loop
xchg
pop
mov
jo
ss
or
push
jecxz
repnz
fdivl
push
dec
test
mov
xchg
mov
mov
mov
cmc
add
jmp
mov
fcmovb
mov
xchg
mov
hlt
ljmp
cmp
pop
aas
cmp
out
leave
dec
cs
mov
imul
lds
adc
push
ret
mov
or
stos
push
jae
ljmp
cmc
mov
mov
bound
pop
jg
enter
inc
mov
cli
sbb
rcrl
mov
add
xchg
ljmp
inc
iret
and
fs
hlt
cmova
outsb
into
int3
insb
jne
mov
clc
xchg
fsts
out
xor
outsb
lods
lods
out
lahf
fidivrs
cmpsl
dec
fadds
in
ljmp
ret
ret
das
mov
aas
add
es
in
sbb
xchg
lods
mov
jns
js
xacquire
js
out
fistps
mov
lock
adc
pop
pop
gs
cmpsl
inc
lods
xchg
sub
pop
xor
mov
xchg
and
lcall
push
adc
add
sti
test
fucomp
xor
fistpll
popa
jg
repz
scas
xlat
in
push
xchg
pop
addr16
loop
aas
dec
cmp
loopne
push
or
jecxz
lret
subl
jp,pt
dec
fprem1
scas
cwtl
stos
pop
aam
imul
mov
sub
outsl
push
or
xchg
adc
jg
nop
sbb
lahf
mov
xor
in
adc
cwtl
movsl
xchg
xchg
lds
ror
sbb
test
out
mov
jmp
push
mov
sbb
mov
dec
imul
mov
pop
jb
mov
test
in
xchg
xchg
mov
movsl
xor
mov
addb
mov
pop
movl
iret
inc
daa
out
jge
rolb
or
mov
ds
mov
mov
push
ret
cmp
mov
inc
test
push
fwait
push
cmc
imul
int
mov
sarb
cmp
ret
insl
or
mov
and
cmp
mov
dec
mov
lret
cs
xlat
lods
jno
imul
fcomip
cmc
repz
movsl
mov
jl
and
adc
fnstenv
call
stc
mov
in
push
stos
outsb
es
sti
or
cmc
sub
leave
mov
add
mov
das
xchg
push
jb
outsb
hlt
xor
adc
outsl
and
xchg
out
sbb
loopne
std
mov
jae
push
pop
ret
test
pop
sbb
icebp
inc
or
rcll
pop
repz
fidivs
int3
adc
in
je
jb
loopne
sar
dec
xor
imul
leave
mov
mov
into
pop
jg
mov
and
xchg
dec
push
add
enter
lods
mov
pop
push
cmp
hlt
sub
mov
notl
jmp
sbb
and
loop
les
sub
outsl
mov
arpl
or
dec
mov
iret
aad
loope
sub
bound
xor
rolb
jnp
out
sub
subb
mov
jecxz
mov
lcall
lcall
mov
sbb
xchg
test
fildl
fistl
xchg
push
int3
add
loope
lock
mov
int
or
int3
clc
push
inc
jne
add
pushf
push
lods
cmp
push
lock
lds
insb
sbb
jo
jg
notl
jmp
xlat
sbbl
cld
fs
dec
pop
push
fisttpll
pop
das
inc
repnz
sub
xor
insl
movsb
clc
push
fildl
add
int
pushf
fisubs
inc
dec
outsb
or
or
mov
jne
cmp
xor
cmp
inc
sbb
cli
dec
xchg
jle
or
or
dec
inc
fcoms
xor
push
lret
fcoms
sub
aaa
jbe
xchg
sahf
movsb
sbb
xor
inc
inc
int
ss
outsl
mov
xchg
les
jmp
lahf
mov
and
cmp
push
movsl
dec
sub
cld
or
fmul
lahf
loope
mov
cmp
xchg
pop
movb
fabs
in
popf
sbb
pop
sbbl
icebp
jb
cmpsl
and
xchg
stc
adc
lods
jl
lds
stos
sti
sbb
movsb
pop
lods
or
test
pop
daa
sbbb
es
shll
popa
dec
in
xchg
mov
jnp
jns
pop
and
or
jp
cltd
ret
dec
add
adc
fidivs
cmp
adc
dec
jle
inc
push
cmpsb
add
pop
lcall
cmp
mov
jbe
movsl
dec
xor
arpl
mov
push
testb
jbe
pop
nop
imul
mov
dec
inc
adc
or
imul
cld
xchg
fbld
push
mov
test
test
addl
rcrl
inc
in
repnz
add
add
mov
sub
jnp
test
xchg
fstp
cmp
inc
push
xchg
pop
pop
and
push
push
xlat
pop
out
xor
pop
jb
icebp
stos
repnz
sti
in
fnstsw
aaa
sub
mov
pop
adc
icebp
loopne
pop
fldcw
mov
fildll
xor
mov
out
sbb
icebp
xchg
mov
pop
test
mov
sbb
inc
fnstenv
ja
pop
add
sbb
loopne,pn
cmp
xchg
addr16
and
test
dec
popa
and
ds
mull
iret
adc
dec
dec
rcr
ret
stc
push
aaa
lret
pop
fimuls
cmpsb
push
cmp
and
addr16
stos
xchg
xchg
push
dec
out
and
clc
je
flds
mov
jns
arpl
pop
sub
loop
inc
adc
in
sub
push
ja
xlat
xor
fbstp
mov
lcall
pop
int3
push
test
fucom
mov
jg
enter
ffreep
push
les
stc
int3
repz
int3
mov
lar
sahf
lret
in
mov
test
sub
adc
loop
sub
add
lock
test
xor
dec
dec
test
sbb
jecxz
xor
popf
insl
mov
lret
pusha
mov
dec
inc
add
mov
jmp
jmp
leave
rclb
lock
out
lcall
lock
adc
jecxz
mov
push
cmp
imul
aas
pop
pushl
jl
mov
in
stos
std
int3
pop
fldcw
add
adcl
or
loop
lea
aas
arpl
pop
cltd
fbstp
cmp
imul
subb
pop
dec
nop
je
xor
xchg
movsb
push
cld
pop
nop
cmp
hlt
xchg
mov
xchg
cs
scas
push
push
stos
adc
data16
stos
imul
mov
test
movsb
faddl
lahf
fstl
sbb
or
inc
aaa
mov
jmp
insb
ljmp
cmp
popf
lods
mov
cmpsb
xor
inc
imul
dec
shrl
lret
xchg
and
pop
repnz
push
pop
adc
outsl
push
sarb
adc
jl
jg
icebp
bnd
push
je
into
loope
mov
cmp
dec
jbe
rcrl
rclb
cs
cli
jns
and
ret
ja
sub
pop
cmp
pop
mov
cs
mov
aam
push
pushf
out
jmp
adc
fisttpll
scas
fdivrl
rorb
sarl
cwtl
push
mov
xchg
sub
ss
mov
sbb
xor
mov
cmpsl
inc
xor
stos
in
imul
sub
dec
cli
cmp
stos
ret
cmp
sub
outsb
xlat
ja
mov
imul
and
cmp
jle
add
sarl
xlat
mov
pusha
cli
mov
divb
arpl
jmp
sub
div
pop
data16
pop
inc
and
js
and
xor
sub
ficompl
and
hlt
cmp
popa
lods
lods
add
sub
push
sub
scas
inc
push
pop
or
and
dec
test
sub
inc
nop
cmc
es
hlt
or
inc
pusha
inc
fbld
push
cld
adc
mov
jg
dec
stos
jmp
mov
inc
and
int
xlat
mov
mov
push
dec
cli
or
pop
mov
test
fmul
cmp
sbb
insl
cmp
sbb
lret
adc
mov
xchg
push
in
gs
cwtl
in
imul
mov
cmpsl
in
xchg
rorl
iret
jl
cmp
out
cmp
lahf
push
or
rcr
fnstcw
mov
lods
hlt
ret
lods
mov
xchg
pop
fucomp
mov
data16
jno
inc
add
cmp
or
lea
push
cmp
std
dec
cmp
mov
enter
push
clc
out
sub
sbb
push
jnp
movsb
jbe
or
jno
int3
popf
and
mov
jge
inc
push
stos
sarl
mov
in
jne
popa
push
setne
xchg
js
aam
lea
adc
xchg
cmp
leave
sbb
xchg
cs
adc
adc
dec
xor
lods
adc
bound
cli
and
scas
mov
jl
bound
lods
icebp
inc
push
xchg
in
aam
rorl
fidivl
pop
or
mov
add
or
mov
std
xchg
fs
gs
cld
lods
dec
push
cmp
daa
mov
rorb
sbb
dec
repz
add
out
cmp
in
pushl
adc
mov
imul
sub
outsb
cmc
adc
jl
ss
cmpsl
dec
lret
xchg
fnstcw
repz
inc
in
mull
outsb
sbb
lahf
dec
das
icebp
add
or
arpl
dec
adc
inc
mov
jb
dec
lock
popf
inc
out
fldenv
cmp
daa
mov
outsb
pop
out
outsl
jb
push
cmp
testb
jbe
cwtl
xlat
addr16
jg
lock
push
rcr
sub
std
jg
data16
mov
sub
test
aad
xchg
es
sub
adc
lods
mov
add
cli
lcall
not
movl
jp
outsl
push
cmp
cli
cmpb
sub
mov
mov
inc
or
sahf
sbb
scas
clc
mov
rcll
cwtl
or
adc
inc
jmp
fisttps
cmc
fcoml
iret
test
inc
mov
jg
das
mov
daa
push
shll
sub
jmp
lret
lea
mov
je
or
rcr
nop
xchg
std
ljmp
push
sub
mov
pop
cltd
hlt
pushf
and
test
jg
jb
xchg
jno
rcrl
out
mov
sbb
xchg
xlat
loop
mov
jne
int3
rorl
jge
addr16
out
cmp
pop
or
dec
mov
lcallw
mov
xchg
pop
lret
push
cmp
fistpll
punpckhbw
inc
rorl
xor
ja
out
fs
mov
sub
loopne
dec
add
insb
xchg
pop
push
std
lahf
sub
add
push
pusha
mov
in
pop
mov
sub
test
and
mov
faddl
lahf
add
cmc
jo
push
xchg
push
mov
iret
adc
mov
mov
adcl
add
adc
add
je,pt
scas
ss
fs
sub
test
nop
mov
pop
inc
rcr
jp
rcll
xor
sti
shlb
imul
pop
xchg
cmp
shlb
movsb
sub
in
jo
mov
push
push
test
int3
cld
mov
rclb
outsb
int3
or
inc
inc
pop
fsubs
subl
dec
xorl
ja
popa
shl
mov
mov
mov
or
adc
dec
mov
ljmp
adc
pop
test
and
daa
xor
test
out
or
insl
icebp
sbb
mov
insl
sub
inc
outsl
sbb
mov
inc
shl
imul
xchg
or
out
repnz
and
and
arpl
mov
pop
fwait
or
icebp
inc
and
push
mov
shll
je
insb
adc
mov
push
pop
push
into
mov
mov
cmp
test
stc
gs
out
rcll
mov
push
jge
fdivrl
or
ds
fs
xor
clc
inc
pop
stos
enter
push
jae
out
mov
test
adcb
xchg
mov
insl
dec
dec
dec
pop
push
mov
dec
stos
popa
insb
cltd
cmp
mov
vpshab
sub
jns
pop
push
add
fnstcw
fdivrl
lcall
movsb
icebp
xchg
inc
pop
imulb
ljmp
adc
xchg
mov
ss
xchg
popa
mov
xchg
inc
gs
dec
fstpl
dec
adcl
std
insl
je
fsubr
shrb
mov
aaa
xlat
adc
adcl
icebp
frstor
fnstcw
inc
xor
pop
xchg
xchg
lret
sbb
push
sbb
push
inc
arpl
fcoms
in
mov
lock
out
ljmp
std
popa
jle
xchg
and
push
mov
pop
push
fstl
arpl
adc
shrb
adc
outsl
sbb
jbe
cltd
adc
lcall
mov
xor
mov
pop
sub
stc
std
or
adc
sub
mov
jae
out
xchg
imulb
shl
dec
mov
xor
cmc
fsub
mov
jns
lods
pop
or
mov
dec
jne
ret
cwtl
sbb
aam
pop
subl
jmp
inc
sub
loopne
stos
outsl
jo
fnsave
mov
sbb
cmp
movsl
cltd
lds
ja
xchg
mov
sbb
nop
cmpsl
outsb
cmpl
push
cmp
xor
sub
cmc
cmp
call
in
shlb
pop
inc
mov
xchg
mov
push
push
ffree
xchg
or
test
ss
xchg
sub
dec
mov
xchg
ret
cmp
scas
ds
shlb
pop
jp
push
xor
ja
dec
or
hlt
xchg
xchg
nop
jbe
test
enter
scas
sub
jo
pop
xlat
out
mov
cltd
xchg
dec
fwait
lods
arpl
ds
jo
jae
jbe
or
int
or
mov
inc
mov
sbbl
inc
je
pop
shrb
adc
lret
not
inc
outsb
add
loope,pn
inc
pop
mov
gs
lahf
enter
cmpb
loopne
inc
gs
fwait
mov
mov
test
adc
or
adc
call
rcrb
jge
adc
bound
int3
pushf
mov
ss
add
push
pop
add
jmp
int
and
repz
pop
mov
adc
and
inc
movsb
push
ja
push
pop
mov
stos
outsb
pushaw
loope
cmp
incb
dec
xchg
xchg
push
adc
sub
dec
fisttps
pop
movsb
inc
test
mov
outsl
inc
jne
push
out
xor
sbb
push
das
aam
push
and
lcall
xchg
cli
xor
stos
loopne
mov
movsl
add
insb
mov
ja
inc
sub
mov
in
scas
inc
stos
pop
aas
dec
or
sbb
sbb
jecxz
inc
jbe
add
dec
mov
fisubrs
cmpsb
push
ljmp
shlb
inc
outsb
daa
fnstenv
sarb
mov
outsb
call
aam
hlt
negl
or
xchg
lahf
xor
pop
push
xorb
sub
push
pop
not
scas
adc
cltd
and
adc
sbb
cmp
dec
scas
and
cmpsb
lahf
mov
push
popa
mov
int3
in
scas
lods
jnp
pop
fistpl
sub
adc
outsb
sub
dec
dec
jnp
or
pop
pusha
cli
lret
push
aaa
sarl
out
arpl
lret
aad
jecxz,pt
pop
mov
jecxz
adc
xor
cmp
iret
xor
cs
mov
cmp
or
mov
sti
out
cli
xchg
push
xor
mov
jg
pop
jp
jge
sub
jae
ljmp
push
ficomps
cmpsl
arpl
dec
push
jmp
aaa
mov
je
push
dec
pusha
out
ss
mov
daa
rcrl
add
ret
fsubrl
or
inc
pop
adc
push
mov
xor
lret
sub
clc
cli
fsubrs
out
scas
add
leave
xchg
idivl
fisttps
jmp
shrl
add
loope
iret
icebp
xchg
cmpsb
icebp
cmp
pushf
jno
inc
xchg
mov
mov
out
and
cmp
sub
dec
lcall
repz
ds
mov
mov
or
rcll
int
test
adc
call
sub
adc
or
jg
mov
inc
and
mov
or
mov
jne
cltd
pop
or
mov
jb
cli
xor
add
push
and
cmp
xchg
data16
mov
das
mov
adc
sbb
jge
push
call
jbe
bound
sbb
and
lahf
ret
popa
or
out
repnz
andb
sbb
loopne
dec
mov
push
adc
cmp
cld
xrelease
mov
adc
testl
movsb
es
mov
inc
and
popa
pop
mov
scas
and
enter
movsl
rolb
sub
jne
and
sub
xchg
sbb
push
bound
jne
gs
xor
repnz
pop
test
and
jno
mov
cmp
adc
pop
xchg
sti
loop
add
pop
adc
mov
pop
jns
lahf
adc
or
sahf
dec
add
mov
scas
cmp
mov
pop
loop
pop
sbb
mov
adc
movsl
xchg
int
mov
fs
jbe
adc
sbb
pusha
push
arpl
lahf
fisttpl
push
mov
adc
leave
xchg
out
push
fwait
adcb
aaa
push
fwait
mov
cli
imul
and
push
push
jno
repz
fildl
inc
sbb
dec
cld
mov
mov
adc
push
call
add
jecxz
gs
call
xor
push
jmp
lret
js
in
adc
jbe
xor
cs
and
aam
cltd
fisubl
add
and
push
adc
xor
cmpsl
adc
or
fcoms
jge
fwait
add
mov
clc
nop
mov
outsb
psraw
mov
mov
jmp
mov
sbb
movsl
aas
imul
movsl
js
add
shll
pusha
pop
pop
jp
pop
pusha
mov
inc
imul
pop
test
in
mov
hlt
ficoml
xor
pop
sbb
mov
je
xchg
movsl
shl
shlb
in
pop
and
gs
adc
sbb
leave
adc
stos
loope
push
mov
sbb
or
test
cli
inc
imul
rcrl
add
pop
jbe
pusha
mov
repz
cmp
iret
xchg
or
xorl
scas
xor
push
sarb
imul
repnz
out
jno
js
sbb
dec
cmp
mov
and
fs
or
scas
pop
add
add
jp
push
mov
cmc
pop
adc
test
sbb
jae
lcall
aad
adc
mov
dec
dec
in
mov
cvtps2pi
xchg
adc
jnp
pop
lock
or
aad
push
shl
lret
movsb
in
mov
jne
jg
pop
enter
xlat
sti
inc
sbb
scas
clc
jmp
test
fstl
in
test
xchg
addr16
das
inc
jg
ret
testb
push
cmpsw
stos
add
enter
int3
cmp
mov
add
jecxz
lds
mov
test
or
xchg
test
push
ja
jle
je
sub
lcall
jnp
sub
fidivrs
dec
icebp
xlat
adc
cmpsb
scas
std
jo
push
xchg
xchg
jg
mov
cs
mov
sub
mov
bound
out
out
jno
jno
push
cs
cmp
sbb
or
in
sbb
dec
das
pop
cmc
pop
sbb
xchg
cwtl
adc
xchg
adcb
ljmp
mov
adc
cltd
inc
std
sub
dec
mov
cmpsl
sub
ljmp
les
lret
inc
in
push
ds
shrb
dec
push
lahf
pop
mov
jns
jno
inc
pop
cltd
pusha
xor
xchg
es
fldt
inc
push
int3
out
push
fst
mov
fwait
xchg
in
push
insl
jp
xor
xor
push
lock
sbb
sub
sub
leave
sti
sub
push
sbb
mov
dec
scas
leave
test
into
cs
pop
nop
xor
inc
sub
mov
adc
and
sub
enter
jb
cwtl
sbb
popl
sarl
pop
movsb
sbb
addr16
dec
jge
repz
or
push
ljmp
fdivrl
xchg
jne
push
das
sub
add
inc
jecxz
repnz
or
lods
sbb
pop
mov
stc
bound
inc
jns
test
int3
cmp
rol
xchg
xchg
test
arpl
add
push
or
mov
outsl
ficompl
movsb
les
cmp
ss
divb
add
roll
pop
out
bound
sub
cmp
push
pop
pop
adc
lock
shl
incb
loopne
scas
push
aaa
ds
pop
sbb
sti
out
add
pushf
dec
sub
insl
mov
or
sahf
adc
pop
inc
sbb
ja
jle
sbb
inc
dec
and
jns
out
adc
shl
mov
jp
aad
fidivl
jbe
xchg
adc
mov
mov
insb
mov
insb
sahf
xchg
jge
rorl
or
add
int3
js
sbb
movsb
pop
cltd
jge
cmp
pop
pop
push
mov
inc
ss
data16
outsl
jle
les
xchg
stos
adc
ffree
pushf
fiadds
mov
sub
xchg
push
and
add
hlt
mov
jae
out
movsl
lods
xor
insb
pushf
or
sub
fwait
xor
idiv
dec
repz
cmp
push
xchg
arpl
ret
and
xchg
xchg
rclb
xchg
and
loop
call
or
out
push
fldt
jbe
cmpsb
scas
push
fimull
jecxz
sub
fsts
xchg
adcl
inc
cld
sbb
pop
mov
in
ja
rcr
mov
stos
pop
scas
and
xchg
gs
xchg
jbe
lahf
sub
or
les
fisttps
das
xchg
mov
stc
mov
call
adc
push
ret
scas
loopne
out
daa
ror
push
ds
mov
subl
lahf
into
mov
xor
sub
jne
subb
orb
or
sbb
gs
das
les
mov
mov
xchg
mov
inc
xchg
cmpsl
cltd
and
dec
jae
mov
sbb
imul
mov
mov
xor
sbb
icebp
mov
jns
test
fwait
mov
mov
or
cmp
sub
push
sub
sub
dec
sbbl
mov
insl
dec
inc
cmp
cwtl
movhps
ds
or
mov
stc
push
lahf
leave
gs
adc
xor
bound
xor
addl
inc
fwait
cld
and
xchg
push
inc
loopne
sub
xor
fpatan
shr
int
dec
fldl
cmp
aas
hlt
incl
pop
sbb
testl
popa
dec
dec
test
add
test
stc
icebp
shl
mov
cwtl
rclb
cmp
mov
mov
cltd
adc
pusha
ja
push
mov
inc
pop
add
add
jnp
xchg
mov
sub
mov
repz
and
les
mov
test
pop
stos
xor
pop
mov
cmp
test
pop
pop
fnsave
add
loope
and
testl
aas
into
dec
and
dec
mov
pop
sbb
mov
scas
nop
and
fistl
mov
dec
jecxz
pushf
and
mov
xor
std
xor
icebp
cltd
lock
mov
js
jmp
std
pop
mov
jmp
out
cmpsl
mov
aam
fcomp
cmp
xlat
cmc
push
ss
js
jne
sub
movsl
jbe
popf
fistl
add
xchg
fsin
ljmp
xchg
jne
outsl
add
hlt
add
inc
fst
in
loopne
jge
adc
or
fmull
dec
adc
insl
dec
push
push
mov
mov
mov
xchg
clc
jge
xlat
popa
dec
xorb
aad
mov
push
mov
gs
fcompl
jo
repz
lret
dec
cli
jmp
or
and
inc
in
jle
xchg
adc
cmpl
push
sub
cmpsb
sbb
nop
dec
mov
xchg
and
shlb
arpl
xchg
xchg
scas
jp
sahf
cmpsb
xchg
insl
imul
lcall
insl
sahf
and
or
stos
jnp,pn
loope
mov
addr16
dec
pop
or
mov
sbbb
idivb
imul
test
mov
sahf
mov
and
pop
push
dec
push
inc
push
in
int
je
xor
cs
ss
sarl
sbb
mov
clc
xchg
into
xchg
jmp
xchg
ljmp
sbb
inc
xor
sbb
cltd
sub
and
push
loope
inc
pusha
adc
lret
jle
aad
movsb
int3
sub
sbb
xlat
shll
mov
out
mov
mov
mov
or
lods
cmp
outsl
or
jae
lea
dec
fs
scas
testl
pop
scas
int
sbb
mov
test
in
aas
mov
hlt
add
jmp
jo
push
lret
fsubr
mov
iret
sbb
push
fisubrl
cmp
stos
lret
test
push
clc
xchg
je
mov
jno
dec
lcall
and
scas
out
test
dec
mov
push
cld
std
push
add
push
jns
inc
out
repz
rorb
pusha
pop
sbbb
sub
flds
mov
push
xor
pop
jnp
cmp
adc
sbb
mov
adc
setge
in
adc
push
jae
jg
cltd
shlb
ret
mov
cmp
mov
js
stos
nop
fstl
cs
push
gs
push
lahf
std
imul
push
jb
test
pusha
add
add
cmovae
push
aaa
mov
xchg
adcl
xor
pop
dec
into
push
jne
es
ss
mov
leave
sub
shlb
lock
push
insl
push
call
jo
xor
xor
jl
repnz
cmp
into
xchg
xchg
test
push
mov
insl
arpl
aas
fs
push
ret
jae
xchg
pop
inc
cld
pushf
fstl
xchg
xchg
sbb
shr
les
stos
bound
ror
shr
scas
cmp
arpl
mov
mov
or
ret
adc
orl
cmp
stc
in
sub
loopne
stc
subb
cmp
inc
outsb
jl
sbb
popa
dec
test
cmp
call
bound
dec
mov
mov
pop
mov
xor
cltd
inc
xchg
imul
cmp
dec
mov
jle
push
ja
psubb
push
sahf
mov
sbb
add
jb
adc
enter
aas
in
dec
add
mov
inc
and
push
cmp
or
rsqrtps
fbld
push
mov
jmp
jns
jmp
cmp
mov
sub
pop
shlb
shrl
mov
in
xchg
dec
in
adc
insb
xchg
cmp
jb
xorb
inc
push
fcoml
out
loop
push
mov
insb
dec
xchg
jp
sub
leave
cmpl
cmpsl
cmp
jge
dec
aas
cs
rorl
shrb
dec
sbb
sub
inc
popf
inc
pop
xchg
mov
repnz
fwait
aas
jb
mov
mov
and
cmp
add
inc
cli
inc
mov
inc
ljmp
fsubp
xchg
inc
repnz
into
into
jnp
out
adc
insl
enter
xchg
fimuls
dec
mov
mov
sub
jo
inc
movsb
call
adc
pop
add
sbb
pop
mov
enter
mov
inc
popf
int
mov
inc
aaa
lret
mov
flds
lret
mov
fsubrp
ret
sbb
jp
into
out
mov
mov
sbb
cmp
xchg
enter
mov
jbe
mov
pop
int3
push
adc
scas
pop
stos
lea
or
mov
inc
jle
les
movsl
bound
push
daa
xchg
enter
lods
pop
addr16
mov
repz
inc
push
jle
inc
cltd
add
jae
movsb
loopne
icebp
rol
dec
les
lret
int
add
repnz
sbb
mov
add
push
lahf
or
daa
inc
lret
jmp
sbb
or
push
ret
sbb
shrl
cmpb
jo
fwait
in
sbb
jae
add
daa
aam
std
clc
push
xchg
imul
push
xchg
or
or
inc
push
dec
aas
and
and
ja
mov
test
imul
lahf
or
cmp
push
mov
test
and
loopne
mov
hlt
icebp
jp
movsb
dec
fcompl
jmp
inc
jno
in
sub
push
push
cmpl
xor
imul
das
scas
mov
and
pusha
adc
xchg
daa
mov
js
mov
mov
add
jge
in
pop
stc
gs
mov
fbstp
aas
add
inc
inc
cltd
xchg
jbe
daa
mov
adc
push
popa
outsb
or
mov
das
fs
lea
inc
das
xchg
int3
int3
aad
xor
inc
stc
lret
sub
test
mov
mov
and
sbb
lahf
pusha
nop
mov
jge
ljmp
xchg
stc
push
mov
add
sbb
shrb
push
pusha
mov
arpl
sub
jns
sbb
aam
idivl
pop
jb
call
lahf
shrl
aas
orb
jo
adc
pop
scas
aad
es
mov
addr16
add
mov
xor
outsl
jb
lahf
loope
push
inc
addr16
add
into
in
jnp
frstpm(287
xchg
pop
mov
imul
scas
cmp
out
pop
outsb
jb
stc
xchg
sbb
mov
pop
fs
bound
lods
int
je
push
pop
cmp
jae
adc
inc
and
add
test
lds
push
cwtl
jno
fildl
in
mov
cmp
shl
arpl
jnp
aas
int3
cli
sub
add
sarl
jo
xor
aaa
mov
fyl2x
std
addr16
fistl
cmp
xor
ror
jp
popf
filds
js
push
push
and
cmpsl
imul
fstpl
pop
push
xor
mov
cld
scas
movsb
inc
insl
adc
jne
sbb
mov
loopne,pt
push
gs
pop
xor
imul
out
in
or
xor
addb
mov
add
xchg
mov
dec
lock
push
das
and
jns
test
in
cmp
mov
in
mov
incl
aas
xchg
pop
xor
xchg
aaa
add
repz
lret
add
imul
out
jne
inc
sbb
ret
mov
inc
ret
xchg
ss
ja
mov
adcb
cmp
cmpsl
sub
gs
stos
leave
pushf
rcrl
bound
mov
add
iret
mov
scas
idivl
pop
jmp
pop
mov
pushf
dec
jmp
ljmp
adc
jnp
dec
pop
lcall
pop
jp
stc
push
lea
pop
pop
jbe
popa
mov
push
lock
cmpsb
cmp
es
dec
aad
cmp
arpl
pop
cmp
mov
inc
ret
repnz
rorl
adc
lret
out
adc
lcall
and
out
push
sbb
aam
movsb
cld
xchg
and
add
rcrb
loope
pop
pop
add
lret
push
xor
std
push
movsb
jecxz
xchg
push
lods
pop
fs
lahf
sbb
pop
out
fcmovb
int3
lret
mov
in
in
add
fs
call
xchg
push
cmp
mov
cmp
add
dec
orb
pop
jns
pop
sub
je
out
mov
lret
push
push
mov
psllq
xchg
push
xlat
pop
push
leave
mov
fs
popa
ja
jno
inc
xor
adc
or
test
adc
inc
inc
xor
dec
pop
push
outsl
das
xor
inc
sbb
lea
ljmp
jb
pop
adc
jne
mov
enter
or
mov
add
pop
sub
jge
into
xchg
fisttpl
add
mov
mov
adc
mov
mov
pop
jge
mov
sahf
out
inc
push
add
ret
xchg
dec
xor
mov
fwait
aas
pop
aas
inc
mov
cltd
xchg
xchg
leave
lcall
stos
push
mov
jle
cmp
jne
adc
hlt
sbb
cmp
push
ds
loop
mov
dec
xchg
jle
add
testb
cli
sub
mov
dec
pusha
lods
and
cmp
add
insb
xor
mov
iret
xchg
and
mov
je
push
jbe
jmp
sahf
add
in
xor
sbb
nop
push
outsl
mov
sti
sub
mov
sbb
movsl
or
aad
push
dec
xor
or
mov
xor
mov
leave
call
sbb
out
movsb
mov
lds
js
stos
mov
into
dec
and
sub
pop
cltd
insl
mov
arpl
and
in
out
cltd
cld
xor
mov
out
les
test
sbb
add
xchg
lcall
iret
mov
xchg
or
lods
inc
and
pushf
out
arpl
and
cmp
fistl
pop
cld
or
xchg
jne
lcall
ficoms
aaa
in
pop
pop
push
shl
and
movsl
mov
fdivrl
popf
pushf
push
int3
das
dec
andl
ja
or
or
xchg
dec
inc
js
in
test
xchg
cmp
adc
ret
cs
add
insb
fs
addr16
mov
adc
insl
ror
jmp
and
in
jmp
leave
mov
mov
cmp
dec
outsb
scas
in
cmp
lods
cmp
pop
scas
mov
inc
xor
jae
pop
jp
mov
bound
enter
negb
mov
pushf
mov
int
sub
arpl
outsb
pop
cmp
icebp
jg
cmpsl
shll
sets
inc
outsb
lods
push
inc
pop
stos
xchg
push
loopne
es
gs
fiaddl
dec
mov
inc
adc
xchg
das
les
adc
dec
shlb
or
cld
xchg
ret
ficoms
sbb
hlt
dec
sub
ficoml
jle
jmp
or
or
out
mov
inc
adc
cmp
adc
jmp
js
mov
inc
je
pop
jg
ret
lret
ja
mov
push
test
adc
inc
loope
mov
mov
outsl
pop
dec
in
mov
mov
push
inc
cmp
in
or
push
and
icebp
test
xchg
push
mov
lea
inc
adc
mov
push
adc
xor
mov
or
pop
stos
and
jl
mov
rclb
scas
or
jnp
jl
mov
sbb
and
cltd
xchg
jp
jno
mov
mov
and
lahf
imul
push
fcompl
xchg
adc
loop
fldcw
sub
arpl
adc
rolb
mov
pop
scas
loopne
js
mov
sub
and
leave
insb
in
mov
fisubrl
adc
fwait
ret
adc
mov
out
sbb
jne
and
leave
ret
lahf
icebp
or
les
mov
mov
dec
lea
dec
adc
xchg
sub
outsb
aad
test
arpl
adc
les
sub
mov
xchg
repnz
xchg
sbb
mov
in
aaa
out
add
stos
imul
xchg
pop
mov
sbb
lret
mov
inc
push
jo
xchg
sub
mov
das
push
jle
test
adc
cmpl
lret
add
mov
mov
push
mov
adc
mov
pusha
mov
jnp
push
adc
rcll
rcll
out
loop
out
xor
pop
sbbb
lods
pop
pop
popf
test
aam
adc
cs
insl
and
fwait
inc
jbe
jno
cmp
adcl
lcall
mov
cmp
ficoml
ucomiss
aaa
xchg
lods
imul
aas
inc
mov
pop
fwait
mov
inc
arpl
fdiv
cmp
clc
mov
or
xchg
in
xchg
jge
gs
cmpsl
xchg
popa
sbb
dec
lcall
mov
mov
in
inc
shlb
rcll
rcrb
shl
test
int
mov
dec
xchg
movsl
jae
xor
xor
scas
cmpsl
popa
call
dec
adc
stos
lea
and
mov
mov
push
mov
mov
ss
mov
and
or
xchg
pop
ss
xor
xor
mov
push
out
jnp
daa
add
loope
add
out
jno
and
out
mov
repz
jle
mov
dec
adc
stos
in
or
nop
xchg
xlat
js
ds
pop
stos
scas
out
cmp
ret
jl
sbb
stc
imul
pop
imulb
jge
pushf
cld
movsl
int3
shlb
inc
cmpsb
push
jmp
push
popf
enter
scas
rol
mov
push
mov
sti
push
push
call
mov
and
xor
lret
in
popa
and
ror
sub
adc
popl
insb
inc
movsb
js
jns
fwait
sti
test
fidivrl
ja
dec
lahf
testb
aad
ret
clc
inc
fsubl
xchg
out
or
sahf
aad
insl
cmp
pushf
pop
add
popf
sti
mov
out
ret
out
inc
adc
push
mov
int3
outsl
sbb
push
jb
xor
push
hlt
add
adc
add
push
loope
sub
testb
sub
add
mov
out
loope
std
and
les
daa
daa
mov
xchg
pop
std
sbb
mov
lods
rorl
mov
pop
add
jns
sbb
leave
xchg
iret
pop
ret
jge
ljmp
arpl
pusha
shll
cld
pop
sbb
bound
mov
pop
jbe
std
fnstsw
xchg
add
sbb
cld
lcall
ret
in
and
nop
xor
sub
cmp
test
mov
adc
push
xchg
sahf
out
jle
stos
fnstcw
shlb
jge
cmpsb
test
pop
jp
enter
xchg
inc
in
or
in
out
outsl
mov
sbb
subl
das
lods
test
and
bound
aaa
or
jle
mov
push
add
and
rol
je
or
push
sahf
fdivrl
dec
sub
cmp
divl
add
sub
adc
xchg
jmp
push
arpl
testl
loope
mov
xor
loop
pop
cmp
imul
loope
dec
pushf
pop
or
mov
int
pop
retw
xchg
inc
xchg
aad
jl
and
xchg
or
aas
sub
push
call
sbb
mov
rclb
mov
inc
fisttps
dec
xor
dec
sbb
jle
insl
mov
inc
enter
sub
adc
dec
test
and
mov
mov
mov
xchg
pop
push
gs
lods
push
xor
mov
pop
popf
jns
cld
mov
xlat
xchg
add
movups
pop
mov
inc
out
jns
inc
fsubrl
and
loop
jg
lcall
cli
adc
push
call
cmp
push
scas
sub
push
jb
cmc
cmovb
testb
frstor
es
pop
adc
pusha
dec
movsl
jbe
lea
outsb
pop
cmp
js
sub
loopne
subb
add
xchg
xchg
insb
jb
push
jno
mov
mov
fwait
aad
cltd
add
mov
nop
xchg
mov
repnz
out
repz
icebp
push
mov
adc
sbb
sbb
rcrl
adc
inc
call
adc
out
sub
arpl
push
jle
js
sarb
pop
loop
loopne
jne
out
push
es
das
cmpsl
mov
clc
push
cmp
push
ficompl
sbb
mov
lods
in
adc
add
jnp
flds
cmp
mov
xor
pop
int
jo
dec
xor
in
das
pop
clc
out
ss
dec
and
lahf
in
insl
inc
ret
dec
loopne
roll
enter
mov
inc
fldt
adc
cmp
jb
inc
ror
mov
in
pop
xchg
add
adc
jbe
cmp
jecxz
sub
mov
repnz
aaa
xchg
cs
adc
in
fsubrs
push
xor
insl
sti
notl
push
cmp
rolb
jl
and
das
jo
add
fimull
leave
sbb
pop
cwtl
test
fldenv
fnstenv
inc
sub
pop
test
xchg
hlt
mov
jecxz
repz
push
daa
adc
pcmpgtd
push
jne
lret
xchg
das
rol
popf
xor
or
mov
subb
mov
loope
mov
call
sbb
andl
lcall
fmuls
shrl
mov
or
jmp
jae
hlt
xchg
push
out
addb
shl
icebp
cmpsl
daa
aaa
sbb
jae
repz
sahf
lods
mov
in
cs
icebp
pop
pop
dec
sbb
add
sub
xchg
pushf
and
cld
add
and
in
sbb
jp
popa
cwtl
push
fnstcw
jge
cmp
cmp
cmpl
aas
cli
sub
mov
aad
adc
xchg
xadd
xor
or
dec
lods
js
adc
out
cmp
and
mov
inc
call
jnp
int
pop
test
mov
rorl
jne
add
clc
inc
lret
push
movsb
movsb
mov
nop/reserved
mov
sti
ret
sub
mov
mov
lea
fisttpll
inc
mov
movsl
cmp
or
int
pop
mov
lods
fildl
mov
out
scas
inc
pop
mov
fidivrs
xor
lods
push
or
aas
fdivrl
int
movsl
call
lret
push
mov
fmuls
sbb
xchg
and
ror
push
dec
loop
int
mov
lret
pop
lods
movsb
sub
out
testb
imul
lret
cli
mov
data16
test
rcrl
mov
jg
lret
pop
arpl
hlt
sbb
fcmovne
xchg
jbe
jg
lcall
cmp
dec
lahf
or
mov
xchg
dec
stos
sub
in
cli
sbbl
mov
push
inc
mov
stos
dec
adc
fistl
adc
dec
lds
rolb
gs
xor
mov
inc
bound
sarb
pop
and
mov
or
pop
adcl
mov
cmc
iret
gs
fdivl
in
loop
cmpsb
adc
test
sub
mov
mov
mov
mulb
outsl
mov
lds
jno
jno,pt
ljmp
inc
fildl
js
ds
mov
mov
pusha
mov
stc
sub
or
jmp
ficoml
scas
inc
pop
cli
insl
cwtl
leave
and
pop
dec
dec
or
jp
daa
gs
aaa
in
push
or
pushl
jae
sbb
mov
jmp
push
add
scas
ret
sti
dec
gs
xchg
dec
dec
int
cmp
push
push
pop
pop
mov
mov
movsl
outsl
xchg
adc
xor
out
fdivr
cld
xchg
fwait
pop
jno,pn
cltd
stc
jae
dec
cli
sbb
iret
inc
cmc
cwtl
fldenv
add
xor
shlb
cmp
or
stos
jl
rclb
push
add
gs
shll
sub
imul
ret
je
or
jecxz
ss
add
xchg
inc
aaa
or
les
sub
dec
jne
dec
ror
push
adc
jl
and
xor
lea
cmp
mov
add
or
movsl
jb
push
sarl
pop
push
aaa
enter
cli
test
jb
jmp
sub
xlat
cli
sbb
orb
jne
push
inc
add
fimuls
jge
and
stc
xchg
fwait
cmp
bound
add
or
test
mov
xor
cmpb
sub
jnp
loop
leave
rorb
dec
mov
xchg
adc
jge
push
mov
out
push
outsl
into
xchg
bndstx
mov
jle
imul
loope
inc
test
jle
out
sub
push
fwait
test
mov
add
cmp
and
push
xchg
outsl
inc
rol
xor
pop
aam
dec
sub
les
subl
mov
stos
push
xchg
sbb
cmp
ret
push
icebp
adc
inc
ljmp
shrl
mov
das
sbb
addl
xchg
mov
in
sub
cmp
pop
push
sbb
mov
outsb
ja
add
dec
fisttpl
or
es
ds
push
ds
nopl
leave
inc
mov
hlt
std
adc
sbb
inc
mov
mov
sbb
push
add
test
notb
sbb
or
dec
cld
xor
testb
int
cmp
mov
fidivl
xchg
or
xor
sbb
bound
pop
pop
adc
sub
add
psubsw
xor
negb
test
pop
or
inc
out
loop
icebp
lahf
movsb
pusha
dec
push
push
dec
jne
or
loope
stos
rcrl
push
jns
cmp
mov
hlt
adc
jl
in
mulb
ja
or
pop
cs
add
sarb
lret
pop
mov
push
sbb
xorl
gs
pop
xchg
and
mov
pushf
insl
enter
negb
sahf
dec
push
sbb
mov
cmp
test
jecxz
push
mov
cmpsb
cmpsb
aad
mov
pop
movsb
sbb
bound
movsb
test
lods
popa
es
fisttpll
stos
insl
and
dec
pop
adc
js
xor
add
ror
bound
pushf
in
xchg
dec
pop
stc
ds
adc
lcall
daa
jle,pn
cmpsl
or
xor
xchg
rorb
mov
inc
or
xchg
push
and
or
popf
fiadds
fdivs
jns
xchg
pushf
add
add
mov
nop
pop
addl
mov
lret
shrl
push
ret
outsb
push
cmpsl
cmpsl
fsubl
iret
in
mov
stos
jne
push
adc
int3
mov
mov
bound
mov
loop
push
gs
fs
arpl
fsubrl
jmp
data16
sbb
cmpsb
xor
jo
cld
dec
imul
push
pushf
sbb
mov
xchg
adc
js
xchg
add
add
sbb
jecxz
dec
sti
imul
sbb
cmc
sahf
and
inc
sbbl
adc
cmp
pop
int3
mov
popf
out
fimuls
pop
add
aam
cmpb
outsb
lret
repnz
subl
push
mov
leave
mov
addr16
cmc
cmc
int
adc
push
add
imul
pop
aad
loope
cs
iret
es
mov
dec
mov
setge
imul
lret
sti
ja
js
lahf
push
and
mov
pop
xchg
mov
sbb
leave
xor
shll
xor
pop
sub
imulb
jp
stc
cmpsl
arpl
leave
mov
insl
nop
dec
and
nop
lret
std
xorb
mov
pop
fsubp
mov
or
daa
imul
and
sbb
xor
sbb
or
sub
jnp
add
pusha
stos
loopew
add
pop
stos
in
xor
lcall
int3
push
add
or
sahf
mov
mov
icebp
dec
dec
cltd
dec
pop
xchg
lea
xchg
fadds
mov
fst
data16
mov
mov
popa
loopne
icebp
popf
js
sbb
int3
insl
pop
ljmp
mov
mov
xor
inc
adc
aas
xor
movsb
lods
test
inc
xchg
mov
sbb
les
xor
rclb
or
xor
push
xor
mov
pop
or
push
loop
xchg
lret
cs
xchg
dec
adc
call
xor
hlt
nop
dec
push
cli
inc
sbb
xlat
outsl
xchg
dec
imul
aaa
out
pop
clc
push
gs
adc
int3
mov
mov
repz
pop
add
sub
dec
fiadds
rclb
insb
sub
shlb
xchg
jb
jbe
inc
cmp
les
mov
add
int3
cwtl
xchg
lods
mov
dec
xchg
cmc
cmp
dec
mov
ss
adc
push
enter
cmp
cmc
scas
stos
mov
lret
insb
jp
push
pop
call
fiaddl
es
xchg
orb
add
cwtl
cmpl
shll
mov
dec
test
cmp
and
punpcklbw
pop
in
cs
jg
insl
xor
stos
arpl
inc
add
popf
sub
xorl
pop
scas
pop
push
gs
pop
bound
lods
arpl
mov
cmp
lods
pushf
adcb
mov
or
stc
inc
pop
mov
cmp
cwtl
fnstcw
jecxz
xor
les
stc
mov
leave
push
adc
movsl
cmp
into
dec
aas
add
xchg
inc
xchg
adc
enter
push
lock
sti
push
mov
cmpsl
pop
popa
sub
push
adc
je
xchg
or
add
shlb
push
adc
inc
adc
adc
mov
cmp
stc
xchg
push
mov
arpl
add
xchg
int3
mov
notl
aas
pusha
mov
push
adc
rorl
test
out
jle
arpl
xchg
jle
loope
int
fmulp
adc
sahf
mov
sub
or
jle
std
mov
pop
insb
mov
add
cwtl
fcompp
dec
fnsave
insb
sbb
loopne
jns
pop
mov
sub
test
pop
addr16
jle
xchg
mov
mov
es
inc
xchg
out
int
mov
bound
jg
inc
sbb
cmp
in
jge
mov
fsts
pop
lcall
push
testb
jl
xor
test
test
jnp
int
pop
icebp
push
adc
mov
xor
sub
inc
mov
fimull
pop
adc
int
repnz
or
fs
jecxz
std
mov
sbb
inc
pop
or
mov
adc
jo
pop
push
ja
inc
mov
sub
test
cmpb
fldcw
jnp
and
mov
sub
sti
lret
xchg
xor
inc
popf
adc
pop
out
ljmp
in
mov
jmp
xchg
bound
repnz
cwtl
jbe
inc
push
rorl
sti
dec
pop
sub
sti
movsl
arpl
push
fs
jno
jne
jbe
cs
or
inc
jge
pop
xor
scas
fstl
push
lcall
pop
daa
loope
push
out
push
mov
mov
and
cld
repz
jl
mov
stos
das
push
cli
incb
mov
pushl
mov
insb
mov
cmp
sub
es
and
dec
sbb
aaa
push
popa
bound
and
mov
mov
inc
xchg
aad
pop
outsl
push
out
sub
and
mov
inc
mov
test
dec
mov
xchg
imul
arpl
dec
shrb
fwait
ja
clc
mov
mov
rcl
mov
sbb
and
sbb
out
sub
test
xor
bsr
pop
xchg
add
stc
and
xchg
fwait
jge
out
jo
inc
sub
xor
loope
inc
dec
fnstsw
int3
jnp
dec
push
jl
push
xchg
push
aam
loope
cmp
cmpsl
add
push
out
cwtl
or
xor
fabs
int
es
push
sahf
push
ret
js
pop
call
xor
fcomip
shrl
stos
adc
stc
mov
setb
push
mov
add
mov
jmp
and
add
pusha
hlt
cmp
daa
mov
addr16
inc
inc
sarb
jae
xchg
shlb
lods
mov
fwait
push
cmp
push
pop
ja
push
mov
movsb
inc
out
shrb
cmp
sub
mov
lret
pop
icebp
cmp
repz
xlat
pushf
pop
push
add
xchg
xor
les
inc
mov
ret
mov
shll
fsubrs
ljmp
dec
movsb
mov
xor
loopne
fsubrs
es
push
icebp
data16
icebp
insl
ret
xor
sbb
push
pop
int
test
mov
add
mov
or
stos
ja
mov
sbb
add
pop
jne
cmp
jae
add
repnz
lock
testb
loopnew
dec
xlat
fsubr
xchg
add
mov
pop
mov
lds
neg
cmp
cmpb
stos
icebp
xchg
mov
leave
sub
and
test
loope
or
mov
mov
scas
mov
nop
hlt
mov
je
out
loopne
sbb
cmp
mov
dec
push
arpl
lods
cmpsl
mov
mov
stc
cs
movl
mov
push
test
aad
and
in
rolb
push
dec
mov
aad
adc
setg
ss
and
and
pusha
and
inc
xor
push
cmp
and
cltd
andl
sub
scas
in
push
or
stc
mov
adc
and
icebp
cmp
jno
inc
inc
sub
sahf
and
scas
imul
test
dec
mov
jle
pop
adc
shr
sub
mov
pop
cmovge
addb
or
adc
xchg
adc
into
test
adc
dec
jg
cwtl
pop
leave
inc
loopne
mov
sbb
dec
outsl
mov
mov
and
jl
and
sbb
xor
inc
das
mov
push
jl
enter
or
into
sbb
insb
std
call
ret
clc
mov
add
ljmp
ja
sub
sbb
mov
aas
mov
or
je
xor
jmp
and
or
ljmp
dec
push
addr16
loop
leave
ret
lret
js
xchg
add
sub
pushf
jle
and
pop
mov
lea
andb
test
dec
rolb
pop
loopne
insl
dec
out
mov
mov
rorl
lock
je
mov
pop
mov
dec
ss
lods
addr16
roll
or
sub
call
xchg
notl
jo
int
loopne
cwtl
mov
xchg
movsl
aam
jae
jns
fimull
mov
scas
inc
loopew
lret
aam
cmpl
push
push
mov
and
add
mov
enter
cld
jb
fwait
ss
adcb
or
jns
mov
decb
bound
js
dec
mov
test
cli
ss
jge
inc
cltd
sub
ja
cmp
lods
nop
mov
fwait
xorl
or
xor
mov
mov
mov
lock
addr16
in
sub
stos
xchg
sarl
gs
mulb
test
mov
jg
cmc
ficomps
leave
cmp
aas
push
ret
mov
and
push
adc
aam
inc
stc
outsl
divl
adc
xchg
mov
mov
scas
dec
arpl
mov
dec
rcrb
dec
xchg
xchg
and
ljmp
stos
jp
int
jns
ljmp
repnz
out
bound
ljmp
or
jo
popf
xor
add
push
sbb
rorb
data16
addb
mov
inc
int3
test
in
pop
test
fsts
adc
imul
test
add
jbe
test
je
shll
or
inc
insb
mov
pop
inc
push
ja
push
sbb
call
jl
pop
scas
inc
adc
and
push
daa
rol
ret
popf
push
xchg
stos
ret
sub
iret
mov
fs
pop
in
das
mov
clc
or
sub
xor
mov
sub
jecxz
sub
cmp
mov
in
adc
int
mov
roll
sub
pop
scas
mov
popf
int3
cwtl
cmp
aad
inc
repz
ljmp
jbe
xor
pop
inc
dec
andb
jle
notb
in
neg
jb
mov
repnz
cli
xor
sub
inc
sbb
daa
dec
jle
mov
test
cmc
and
movsl
das
or
enter
int
decb
aas
push
dec
fdivs
inc
push
push
xchg
dec
pop
mov
xchg
ljmp
sarl
dec
cmc
sub
insl
xchg
dec
loop
fsubrs
add
aas
cmp
pop
cmp
add
fidivrl
adc
movsl
sti
or
cmp
cmp
out
sub
stc
ss
cmp
push
ljmp
mov
mov
addb
cmc
mov
push
ret
icebp
and
or
rolb
ljmp
jns
cmp
jb
ret
lcall
push
mov
leave
adc
ljmp
dec
inc
cli
outsb
mov
and
push
shl
es
or
jns
fs
pop
push
cmpsb
jb
mov
sbb
sti
adc
shrb
test
xor
pop
mov
cmp
push
popa
mov
jmp
movsb
jnp
movsl
add
stos
lcall
mov
mov
hlt
push
aam
lcall
shr
jg
xchg
add
fmull
cmpsl
int
jecxz
xor
inc
push
out
adc
cs
lods
cmp
jecxz
stos
ljmp
cwtl
fisttps
push
insl
scas
faddp
inc
mov
test
lahf
cmp
xor
sbb
xchg
and
jp
jmp
stc
insl
jecxz
insb
cltd
xchg
or
iret
ss
pop
rorb
mov
xor
push
or
or
mov
jbe
add
or
adc
xor
jp
push
flds
mov
pusha
jp
add
cmp
loope
psubw
mov
push
dec
mov
shrb
pop
xchg
xchg
add
jns
andb
xchg
test
jge
xchg
cli
ss
adc
mov
test
shrb
mov
sub
lret
fldt
and
scas
mov
or
sarl
jne
add
sub
inc
cmp
icebp
mov
fbstp
leave
dec
lret
add
xchg
mov
outsl
sub
pop
test
daa
pop
test
sbb
aad
dec
sub
out
loop
aad
dec
push
sbb
sub
mov
mov
les
scas
inc
add
das
shrd
push
or
int3
test
pop
mov
lahf
push
sti
fnstcw
adc
adc
mov
adc
xchg
jge
inc
iret
das
inc
in
inc
dec
les
mov
bound
ret
cmc
mov
mov
fcomi
addr16
mov
pop
inc
xor
ljmp
call
call
jge
leave
pop
mov
cs
jg
push
xlat
inc
stos
push
xchg
shll
dec
xchg
mov
sub
out
aam
mul
xchg
adc
pop
xchg
cmpsl
xchg
pusha
and
cmpsl
cmp
xchg
insb
sahf
sbb
sbbl
arpl
movsl
fwait
sub
pop
hlt
xchg
cwtl
add
jl
mov
and
jb
fcoms
lea
fucomi
flds
aaa
mov
push
movsb
cld
push
in
adc
pop
ja
xchg
imull
xor
into
jecxz
inc
loopne
aad
pop
xchg
mov
jo
sub
dec
sub
jb
and
iret
pusha
int3
pop
xor
mov
add
cmp
int3
mov
int
std
lock
sub
pop
fsubrs
stos
js
test
sbbl
inc
sub
mov
push
sub
gs
rep
call
cmpsb
enter
cmp
call
int3
mov
pop
fsubrl
mov
loop
xor
dec
cmp
ret
mov
mov
mov
jp
cmpsl
test
xor
xchg
xchg
and
xor
popf
adc
and
push
popf
sub
std
adc
jmp
loope
scas
mov
hlt
mov
stos
pop
xor
cmp
out
mov
fnsave
cld
fimull
rcl
and
rorb
cld
inc
mov
or
cld
xchg
or
jnp
daa
inc
cmp
cmpsb
in
xor
fisttpll
ds
push
xlat
jl
jg
cmp
test
subb
int3
mov
out
stc
mov
test
jno
push
clc
lods
incb
outsb
mov
in
rcll
fs
xchg
cmp
aad
xchg
aam
mov
pop
inc
outsl
nopl
scas
pop
or
test
bnd
sbb
cmp
subb
push
or
mov
pop
fiaddl
in
lahf
add
addr16
sbb
lea
and
push
xchg
scas
xor
xchg
adc
adc
cli
jecxz
shlb
fwait
jl
cmp
xor
pop
in
ljmp
push
or
and
or
scas
rcr
push
aas
mov
xchg
push
in
pop
sbb
or
pop
sbb
cmpsb
fsubs
dec
aad
mov
enter
stc
out
cmpl
lock
mov
repz
enter
cmc
mov
sbb
movsb
xchg
out
mov
je
fnstenv
test
out
xchg
inc
xor
adc
mov
out
shll
lea
mov
mov
jb
mov
les
popa
jbe
mov
inc
in
testl
loopne
pop
out
rorb
add
mov
jg
cmp
adc
mov
aam
test
add
jg
mov
xchg
push
mov
in
push
jae
ds
ret
lcall
jno
call
pop
adc
push
xor
aad
sub
jb
pop
mov
sbb
aam
xor
or
and
cmp
cwtl
test
pusha
push
lods
lahf
mov
pop
mov
mov
ret
or
enter
popa
arpl
push
cwtl
adc
aas
mov
in
inc
outsl
daa
fsts
sub
mov
aas
push
mov
mov
mov
data16
fsubp
scas
sahf
add
ffree
jmp
bound
pushf
fcmovnu
fdivl
rep
mul
ljmp
and
and
cld
cmp
movsl
clc
outsb
cmp
mov
and
paddq
mov
call
pop
movsb
mov
imul
push
jmp
sbb
fsubrs
push
push
testl
pop
aad
neg
cmp
mov
jbe
fdivrs
ret
ja
xor
or
xor
or
mov
imul
fstpl
cmp
fs
popa
dec
sub
dec
jmp
es
in
lods
repnz
jl
xchg
inc
jg
fwait
inc
sub
int3
jbe
mov
shlb
cmp
test
xchg
aaa
mov
cmc
test
stc
aam
pop
cmc
in
and
outsb
enter
data16
dec
sub
insl
daa
outsl
test
aaa
clc
adc
stos
pushf
mov
push
jmp
cmp
mov
mov
sbb
push
xchg
jp
mov
sbb
push
adcl
cmp
xchg
in
fcompl
jle
xchg
repnz
jp
add
nop
pop
and
test
fisubl
lar
pop
es
jns
jnp
int
sbb
mov
sar
inc
sub
cmpsb
inc
outsl
mov
jo
adc
arpl
sbb
or
sub
dec
cs
mov
mov
mov
mov
sbb
cltd
mov
movsl
cmpsl
push
movsl
hlt
add
push
jg
mov
dec
out
pop
mov
sbb
imul
clc
inc
sbb
arpl
mov
aam
vxorps
notb
lock
push
push
push
jmp
cmpsb
loop
mov
test
mov
rcrb
or
add
pop
xlat
loop
lret
mov
rcrl
inc
lahf
call
es
ds
and
js
pop
xchg
movsl
mov
popa
repnz
insl
mov
je
notb
mov
or
mov
fbstp
and
inc
cli
xchg
and
xor
inc
add
test
fildll
xchg
iret
repz
mov
mov
movsb
dec
stc
add
fistpll
cmpb
das
out
in
aam
int3
out
nop
int3
sbb
je
cld
push
sub
addr16
jp
movq
mov
and
and
xchg
ss
adc
push
fisubs
mov
jbe
push
fnstcw
test
punpckhbw
clc
pop
popf
cli
xchg
cmp
adc
ja
add
rcll
arpl
je
pop
pop
adc
dec
cmp
test
test
movsb
das
scas
dec
es
test
sub
shl
loopne
xor
mov
inc
mov
xchg
jo
ss
pushl
xlat
mov
jge
test
jno
push
mov
jne
icebp
lea
loop
mov
pusha
call
popa
lea
mov
fdivl
outsb
sarl
repnz
cli
loope
mov
rcrl
loop
and
mov
sti
xchg
in
push
xchg
xor
add
popf
pop
in
mov
sbb
inc
jbe
je
rcll
jns
mov
jns
mov
aam
push
add
push
cmp
jle
test
push
or
shlb
push
clc
je
inc
mov
dec
leave
insb
dec
sbb
out
sub
enter
push
push
inc
mov
push
scas
cwtl
pop
aas
sub
or
mov
fidivrl
nop
xchg
sub
mov
jb
cmpl
dec
out
sub
sbbb
ficompl
cmp
mov
loopne
push
pop
mov
xchg
mov
lea
pcmpgtd
push
sbb
and
mov
scas
inc
cmp
aam
imul
cwtl
fwait
jecxz
push
inc
mov
xor
xor
pop
xor
movsb
push
dec
das
sbbl
aaa
nop
stc
add
dec
mov
adcb
inc
int3
data16
sub
lahf
add
pusha
jmp
mov
mov
notb
xor
sub
xchg
ja
pop
jle
xor
adc
or
ret
and
mov
mov
cmp
xchg
add
repnz
inc
mov
aaa
fistpl
or
out
out
or
ja
mov
mov
jnp
mov
pop
js
loope
outsb
mov
push
cmpsl
into
adc
cld
icebp
aad
jmp
mov
or
repz
inc
mov
arpl
xlat
fsubrs
nop
fwait
cwtl
iret
pop
outsb
test
jmp
xor
js
insb
cltd
pop
subl
ficomps
lret
sub
rorl
int
adc
data16
dec
in
push
testb
pop
cmpsb
aas
rcll
lret
mov
repz
fbstp
mov
sub
stc
shll
xlat
jle
add
xor
inc
xchg
add
fisttpll
mov
mulb
mov
outsb
pop
mov
lods
lret
enter
rclb
in
sahf
push
icebp
dec
xchg
test
repnz
xor
fs
jmp
jecxz
mov
sbb
ljmp
idivl
cli
xchg
cmp
fldl
adc
xchg
movsl
lret
cltd
loop
and
ljmp
outsb
lret
cmp
dec
push
int
fimuls
fists
xor
pop
dec
jle
mov
or
mov
push
ficoms
subl
push
enter
ret
mov
fdivrs
sbb
rolb
scas
pop
stc
clc
ja
aam
test
movsb
sbb
inc
xlat
sbb
push
loop
sti
and
cwtl
mov
es
inc
jle
shll
mov
jb
or
and
mov
or
inc
imul
mov
hlt
addl
mov
repnz
stc
imul
dec
sub
cmp
outsl
faddp
push
icebp
push
sub
cli
pop
cwtl
les
cmp
xor
add
int3
ja
adc
push
fldenv
and
add
rclb
das
shrl
push
into
cmc
sti
cmp
daa
movsl
call
cld
rdmsr
rcrl
add
add
or
sub
cwtl
cmp
mov
mov
cli
rcll
les
lock
mov
mov
fildll
cli
mov
mov
addr16
cmp
cltd
ror
aaa
pop
xlat
out
sub
jl
push
aas
mov
add
pop
xor
xor
fdivrs
add
fs
andb
cmp
ss
and
mov
icebp
inc
cmp
sub
cs
in
ds
stos
or
popf
ss
cmp
xor
or
ror
pusha
shll
fs
test
movsb
jnp
loopne
test
mov
aad
sti
dec
mov
dec
and
shrl
dec
out
push
loop
pop
pop
push
dec
test
cltd
push
mov
bound
push
jne
into
in
into
loope
iret
xor
ljmp
cmc
mov
xlat
fnstenv
push
stos
push
ljmp
push
cs
push
mov
xchg
push
sub
lea
jno
in
xchg
mov
inc
lret
rorl
dec
ljmp
mov
je
xlat
je
data16
xchg
lds
jae
into
sbb
popa
fs
mov
and
lcall
inc
push
jl
imul
arpl
jno
mov
inc
sbb
fnstcw
mov
push
adc
adc
test
sub
pushl
mov
lock
mov
in
sbb
dec
sbb
sub
mov
xorb
mov
xor
imul
push
dec
int3
jecxz
pop
dec
jg
push
int3
dec
test
push
cmp
xor
adc
mov
cmovg
les
pop
xor
mov
mov
mov
mov
pop
clc
inc
pop
and
pop
inc
push
lret
or
and
xchg
in
popf
add
inc
xchg
mov
inc
test
imul
das
repnz
mov
dec
mov
pop
aad
mov
rcll
sub
mov
loope
mov
xchg
mov
or
or
in
outsb
fs
xor
shll
jge
inc
bnd
shl
jae
push
outsb
mov
inc
cmc
pop
mov
ret
xchg
mov
scas
fdivs
sub
leave
xchg
aaa
fstl
test
pop
shll
sbb
stos
sahf
mov
add
fnstsw
inc
insb
mov
sbbb
fcom
hlt
repz
mov
push
push
addr16
mov
loope
fidivrl
xchg
sub
scas
shlb
rolb
ja
into
cld
rorl
pushf
stos
adc
nop
es
pushf
insl
dec
sub
and
dec
rorl
xor
add
stos
out
clc
test
dec
call
das
adcl
or
and
mov
mov
pop
sahf
mov
jecxz
cmpsb
pop
mov
es
pop
pop
push
in
bsf
sub
xchg
xchg
mov
cltd
cmp
rcl
jle
outsl
dec
loope
mov
jmp
scas
add
shll
mov
int3
lahf
xchg
dec
dec
mov
in
or
ja
jmp
xchg
mov
adc
daa
out
popf
pop
stos
lock
cld
adc
fildll
jmp
push
shll
aam
push
fdivs
sahf
fs
es
aam
jge
push
push
add
mov
push
subl
ljmp
adc
adc
push
add
scas
lahf
btr
test
aas
cli
insb
pop
push
loope
iret
fdivs
add
mov
or
bound
arpl
mul
jnp
leave
das
cli
enter
cmp
mov
sub
shrl
sbb
outsb
xor
push
mov
sub
mov
jae
andl
push
lock
movb
jp
adc
bndldx
andl
pusha
pop
xor
mov
xchg
imul
shl
enter
add
push
ret
sub
clc
pop
repz
mov
int
leave
dec
arpl
leave
fimuls
xchg
jns
xchg
mov
xlat
adc
fmulp
dec
out
push
xor
xor
xor
inc
jge
mov
inc
mov
lock
push
add
cmp
int3
xchg
imul
mov
rcrb
inc
pop
aam
arpl
sub
pop
sbb
int3
mov
stc
xor
stc
repz
fdivs
mov
jmp
add
cltd
cld
xchg
push
sub
dec
xor
jl
and
jecxz
stos
shrb
sub
rcl
shll
adc
sub
fs
call
pop
scas
daa
pop
into
lock
jne
in
shl
jns
pop
mov
mov
xchg
mov
or
ficoms
or
adc
mov
fldl
and
jmp
fcmovb
jno
cmc
mov
inc
iret
scas
rolb
adc
push
jns
notl
pop
jecxz
cltd
jecxz
js
adc
add
jns
adc
divl
int
pusha
sbb
xor
mov
rorl
mulb
inc
ljmp
adc
xchg
sbb
mov
fwait
push
ja
in
add
movsb
sbb
hlt
dec
dec
pop
push
mov
orl
scas
je
adc
rorb
push
mov
out
push
ret
push
int3
call
xchg
cmp
pop
ficompl
or
jp
mov
xorl
cmp
xor
faddp
out
ret
insl
dec
or
cmpsb
fstpt
frstor
pushf
outsb
and
push
lahf
fdivs
pop
dec
xchg
jp
add
cmpsb
and
daa
test
mov
movsb
lds
fwait
pusha
xor
sub
lds
aas
mov
xor
lret
fs
enter
sub
test
add
aaa
lods
jne
sbb
lods
sub
imul
std
or
adc
and
enter
je
in
test
cli
mulb
inc
push
mov
sbb
dec
shlb
ret
lret
add
out
inc
mov
mov
jl
sti
mov
or
popf
out
sub
jp
push
add
mov
lret
mov
xorl
mov
pop
aaa
in
in
iret
or
mov
sbb
push
jae
pop
iret
cmp
mov
adc
arpl
leave
pop
sub
or
pop
mov
xchg
and
mov
dec
out
outsb
push
pop
in
shlb
push
pop
sub
mov
pushl
mov
sti
daa
pop
pop
mov
mov
mov
cltd
mul
push
add
cmpsb
push
push
push
test
inc
fistps
xchg
test
leave
mov
pusha
cmp
inc
push
das
and
and
xor
imul
lods
xchg
mov
ret
jle
imul
hlt
push
sahf
mov
mov
dec
adc
mov
push
mov
hlt
lds
mov
xchg
mov
popf
pop
push
xchg
dec
xor
loope
pop
negl
insl
jecxz
insl
or
in
je
jns
imul
int3
mov
cltd
adc
orl
test
mov
or
sbb
dec
mov
imul
subb
mov
jg
mov
mov
rcrb
movsl
jae
pushf
in
scas
add
mov
les
mov
clc
mov
add
or
xchg
mov
shr
push
mov
fildll
ds
out
notl
jno
mov
in
cltd
fstpt
enter
push
jg
sub
cli
cmp
xchg
xchg
popa
lcall
push
jecxz
fwait
insl
lret
hlt
cmp
sub
mov
mov
sar
lods
add
xor
std
dec
cli
cmp
add
sti
cmc
mov
inc
jp
test
scas
insl
mov
or
pop
or
enter
daa
xor
inc
int3
inc
idiv
push
inc
jle
aad
xchg
pop
mov
or
js
push
xor
mov
fiadds
jle
mov
mov
inc
cmpsl
and
or
lock
xchg
dec
lret
stos
xchg
adc
pushf
cld
adc
lahf
andb
xor
push
mov
xchg
cs
mov
nop
gs
cmp
or
dec
imul
testb
pushf
jno
or
popa
popf
or
stc
dec
ljmp
mov
loope
dec
dec
insl
rorb
dec
in
mov
or
xacquire
js
aaa
iret
inc
mov
fsubrp
jecxz
push
repz
ja
mov
stc
ja
faddl
mov
pushf
shl
in
stos
fcomp
lds
sbb
jge
mov
not
jo
or
outsl
aam
add
mov
xor
xor
test
ret
and
lret
pusha
and
jmp
dec
and
inc
jo
in
jno
test
mov
inc
push
fidivrs
xorb
xchg
push
mov
push
xchg
movsb
pop
imul
mov
xchg
push
or
fxch
lret
sbb
lea
sbb
xchg
sbb
mov
xchg
repnz
outsl
rcll
mov
cmp
push
clc
cld
out
in
xchg
mov
mov
daa
fcompl
xchg
xor
cltd
inc
shll
push
add
or
fwait
mov
adc
loopne
shll
or
or
jns
push
ror
dec
xor
sub
pop
clc
lret
dec
and
mov
popa
lahf
ss
lds
xchg
out
lods
inc
sbb
cld
cld
dec
xchg
outsb
iret
fists
mov
jne
mov
sbb
test
jecxz
jb
shrb
ja
ret
in
xchg
mov
das
jno
push
sub
ja
jne
lret
xchg
orb
lods
lods
sbb
push
and
movsb
call
or
dec
cs
icebp
push
lock
das
ret
stos
sarb
sub
loop
cmc
pop
js
xor
push
mov
jbe
mov
sahf
sbb
or
xor
pop
add
shll
test
dec
mov
push
sub
xlat
fwait
sub
mov
gs
mov
add
xchg
mov
cld
push
adc
xor
hlt
xlat
pusha
fildll
mov
shll
sbb
jecxz
mov
jge
mov
jl
pop
sbb
adcl
inc
dec
pop
mov
dec
push
jecxz
and
arpl
dec
mov
xchg
inc
cmp
or
pop
fisttps
add
loope
cli
popf
adc
mov
push
dec
sbb
out
cltd
push
sbb
pop
stc
push
lret
dec
and
xor
push
pop
test
mov
cmp
insb
or
out
mov
xchg
pop
call
scas
pop
shl
enter
in
sbb
or
mov
in
add
jae
das
stc
sbb
xchg
setnp
mov
jle
mov
call
shl
sbb
inc
test
mov
out
and
mov
lock
sub
and
sub
mov
imul
mov
xchg
sbb
cmp
or
arpl
cld
std
xchg
push
out
out
adc
repnz
mov
bound
fcompl
push
xchg
xchg
jge
cmpsl
mov
xor
xchg
sub
add
mov
dec
push
in
mov
mov
les
divb
lods
jo
pop
pop
outsl
inc
lods
mov
cmpsl
fiaddl
cmp
inc
sti
pop
loope
insb
arpl
jo
dec
aad
ljmp
cmpl
test
jb
adc
insb
mov
and
push
inc
push
dec
push
dec
insl
xchg
data16
push
test
mov
movsb
cmp
addr16
sbb
cld
mov
in
lds
cmpsl
xchg
bound
sbb
push
mov
cmp
imul
sbb
call
mov
jl
les
enter
xlat
gs
clc
test
rcr
pop
aas
adc
aas
and
sbb
cmpsl
movsb
je
sbb
pop
push
and
xlat
add
pop
lock
std
test
inc
lahf
and
xchg
loope
lret
and
fstpt
xchg
push
jne
and
add
sarl
je
imul
inc
fisubs
lods
sbb
aaa
lods
mov
clc
dec
ljmp
sub
sarl
sub
xchg
popf
es
sbb
movsl
adc
movsl
scas
addr16
mov
cmp
lea
push
add
push
subl
adc
jmp
and
daa
out
jmp
push
jge
cwtl
adc
inc
rcrl
cltd
xor
add
mov
add
fidivs
adc
testl
push
cld
jnp
es
cpuid
mov
aam
sub
imul
dec
xor
xor
mov
aam
and
mov
test
imul
mov
dec
mov
nop
jle
ret
cmp
cmc
hlt
inc
inc
push
sahf
ficoms
xor
push
inc
stos
pop
sub
lcall
addr16
cmp
rol
xchg
add
jecxz
decb
add
inc
jl
sbb
sahf
jnp
lahf
scas
pushf
and
aam
lods
inc
dec
stos
add
push
add
or
sbb
mov
and
xchg
stos
cmp
fwait
dec
insb
inc
jp
aas
out
andb
lock
add
mov
inc
mov
mov
ljmp
mov
outsb
aam
push
pop
mov
jp
and
push
fldenv
out
jno
and
imul
out
xor
push
sbb
jl
jnp
pop
repz
fdivr
and
sbb
jmp
cmp
sub
aaa
neg
jge
popl
daa
dec
xchg
add
mov
popa
sub
dec
adc
fldenv
inc
out
shl
jbe
xor
mov
jno
lods
adc
test
lock
and
ret
hlt
push
adc
lock
pop
pop
dec
out
pop
pop
mov
ret
scas
jp
pop
nop
enter
mov
dec
sbb
imul
in
je
mov
in
dec
cmp
ss
lea
jp
ljmp
int3
rorb
out
xor
mull
dec
cltd
cld
lahf
jle
sbbl
xchg
jbe
fimuls
repnz
sar
push
lock
fwait
cltd
inc
js
jmp
popa
push
jno
push
push
rorb
mov
dec
jne
pop
scas
aaa
imul
fdivrl
jns
cs
jae
xor
test
push
sbb
out
cmpl
aad
add
mov
cltd
jbe
xor
loope
sti
adc
mov
cmpsl
mulb
jecxz
neg
enter
test
test
subl
mov
jne
jg
dec
push
inc
mov
push
mov
je
sbb
out
es
stos
ss
test
aas
xor
sahf
lahf
mov
sbbb
xor
in
lds
jle
pop
add
add
fisttps
loope
jle
iret
and
sbb
out
inc
pop
push
mov
pop
jg
shll
xor
iret
cmpsl
adc
repnz
jbe
das
cli
adcl
shrl
ljmp
and
dec
loop
daa
mov
inc
ret
rcll
xor
jecxz,pt
dec
push
mov
cmp
imul
fs
pop
bound
pusha
xor
and
mov
sub
add
jg
aaa
dec
lret
out
sbb
jp,pt
pop
inc
insb
inc
mov
push
jmp
mov
cmpl
aam
lret
rorb
ja
xor
mov
pop
ret
inc
mulb
stc
sbbb
pop
or
cmp
pop
sub
pop
pop
aad
sbb
jne
dec
das
push
daa
jp
push
andl
add
enter
mov
je
in
mov
daa
test
bound
sbb
xor
stos
and
push
sti
cli
imul
out
sub
test
adc
dec
dec
negb
add
addb
shl
add
out
adc
mov
shl
push
aaa
fst
fisttps
nop
push
lret
push
repnz
out
dec
jo
leave
loopne
dec
movsb
xchg
mov
xor
iret
inc
and
jg
mov
ljmp
mov
pop
jg
pop
cmp
out
in
mov
xor
ud1
dec
mov
pushf
and
arpl
adc
imul
jno
hlt
in
and
dec
lahf
lock
add
jo
imul
ret
xchg
js
aad
loope
push
adc
stos
mov
clc
push
jne
jecxz
adc
aaa
popa
lods
shrb
popf
mov
sbb
lret
pop
fdivrp
lea
lods
sbb
jnp
push
or
idivb
div
jns
pop
cmpsl
jae
orb
xlat
frstor
movsb
mov
fsubl
mov
clc
fidivl
jbe
in
mov
sub
dec
scas
cmp
push
inc
addr16
mov
out
adc
aas
adc
ret
fnstcw
xchg
adc
nop
int
push
sbb
mov
add
insb
fstl
or
xchg
pop
cld
lcall
cltd
and
dec
xchg
jnp
jo
pop
adc
sbb
jmp
dec
fs
popa
cli
pop
scas
sbb
cs
cs
pop
pop
repnz
incb
es
and
and
scas
or
xor
and
dec
xchg
jmp
mov
ds
stos
and
jecxz
push
dec
add
adc
das
dec
mov
and
xor
jge
fmuls
imul
loop
addr16
cmp
mov
and
cmpsl
dec
popa
adc
rorb
mov
xor
imul
aas
fwait
iret
cmpsb
xor
mov
iret
mov
into
mov
stos
sub
sub
inc
mov
add
sub
dec
mov
adc
push
lahf
icebp
mov
cld
aad
scas
push
mov
xchg
xor
dec
cmpl
push
mov
insl
push
push
pop
ja
ss
mov
lods
mov
es
int
mov
dec
into
outsl
lret
ret
leave
jmp
js
inc
test
jo
pop
cmp
dec
js
add
icebp
clc
jnp
adc
push
pop
cwtl
and
daa
insl
les
pop
stos
addr16
popa
dec
push
aad
xchg
icebp
xchg
and
pop
xor
xor
lds
sub
sahf
push
push
sub
pop
jecxz
movsl
test
mov
outsb
sti
xchg
ja
push
mov
push
fisubrs
sub
clc
mov
cmp
lahf
inc
fmuls
xor
imul
sbb
icebp
jae
jle
clc
push
cmp
cmp
pop
jmp
xor
and
aad
fsubs
imul
test
inc
das
jno
loope
ds
jge
lods
loope
fstpl
jae
mov
or
push
adc
clc
mov
adc
enter
insb
orb
test
push
lcall
cmp
mull
jae
cmc
mov
jns
arpl
inc
out
stos
xchg
push
sub
xor
negl
mov
cmpsb
add
dec
mov
inc
adc
xchg
dec
or
rcr
xchg
xchg
lcall
inc
es
jp
bound
std
fdivp
sbb
aas
add
ds
and
loope
inc
inc
into
or
insb
pop
adc
call
test
shrb
jb
and
jno
cmp
popf
cld
xor
mov
push
cmp
jl
arpl
sahf
mov
lock
and
jb
or
sti
es
fidivs
stos
and
cltd
xor
add
push
dec
xor
mov
mov
repnz
jno
pop
adc
fcoms
imul
push
out
ljmp
sti
idivb
jnp
cmp
mov
nop
cmp
imull
mov
sbb
sti
sbb
cld
add
sub
addr16
js
test
test
flds
mov
clc
inc
test
adc
lret
mov
sub
jp
dec
pop
icebp
das
dec
push
lahf
std
jb
push
jle
ss
xor
sti
cmp
mov
add
out
pop
dec
pusha
mov
push
jle
testl
mov
inc
pop
or
jmp
push
cltd
nop
xor
je
imul
mov
popf
pushf
mov
int3
mov
cmp
call
add
cmpsl
cmp
adc
fcmovb
jmp
xor
mov
jle
lock
pop
les
and
add
popf
mov
cmp
xchg
data16
sbb
fnstenv
xchg
jl
or
int
cli
jp
in
das
sahf
xchg
cmpsl
mov
dec
inc
dec
add
jg
lods
lcall
adc
mov
pop
loop
mov
scas
dec
subl
lock
loopne
ss
dec
into
test
repnz
fidivl
push
out
int3
push
fbld
mulb
and
mov
ljmp
jle
add
and
loope
sti
pusha
ljmp
push
inc
adc
enter
cmp
aas
xchg
bound
mov
push
mov
sar
lcall
rorl
test
jb
insb
in
dec
out
ds
aad
fisubl
sbb
ljmp
mov
js
inc
cmp
jno
iret
stos
fiaddl
fwait
out
dec
movsl
add
es
repz
mov
stos
mov
stc
mov
cmpsl
mov
xor
push
jp
test
inc
out
or
pop
fwait
or
xchg
pop
in
mov
mov
mov
xchg
pop
leave
and
mov
fucomi
jmp
inc
xchg
inc
mov
in
sub
aas
nop
stos
dec
stos
stc
lods
sub
ss
stos
aad
loop
jmp
xor
push
int3
out
mov
divl
insl
dec
pushf
mov
jae
sub
test
int3
sarb
in
cmc
push
nop
jge
sub
pop
cmp
push
mov
adc
shrb
aas
mov
iret
cmp
push
push
sahf
das
popf
test
shll
pop
lret
ljmp
jl
std
inc
add
inc
jp
mov
les
inc
je
mov
mov
inc
cmp
dec
in
repnz
push
mov
xchg
repnz
push
je
jge
xchg
xchg
add
pop
mov
pop
jg
add
push
xchg
sbb
or
push
fsub
clc
lods
push
mov
push
fmul
ftst
mov
dec
jp
shrl
adcl
ficoml
xchg
dec
pop
or
mov
xchg
and
mov
imul
cmp
adc
repnz
data16
xor
inc
iret
shll
jb,pn
testl
and
cmp
and
and
rorl
mov
dec
nop
adc
inc
cmpsb
jle
out
filds
mov
lret
jmp
mov
sub
mov
xchg
lods
fisttpll
scas
andb
xor
cmp
aaa
pop
bt
fstps
jne
lods
inc
jno
shrb
imul
mov
jae
mov
mov
adc
mov
mov
out
lret
jb
addr16
jno
cmp
popl
dec
pop
mov
xlat
xchg
or
xchg
xchg
xchg
and
shll
lahf
xchg
repnz
les
stc
lret
ja
jp
pop
inc
pop
or
sahf
xchg
in
mov
sub
mov
pop
push
cmp
mov
lcall
loope
or
andb
lcall
inc
pop
into
mov
out
jle
cmp
or
idiv
xchg
sbb
mov
std
les
or
sbb
and
notb
add
decb
gs
add
adc
jmp
and
cmpsl
in
cmpsb
sub
and
pop
cmp
jo
int
ret
adc
int
cmp
std
out
mov
loope
and
push
sub
es
xor
ja
daa
push
rol
pop
push
scas
jecxz
adc
mov
push
rcll
mov
inc
js
imul
mov
sub
jle
cmp
mov
popa
lcall
inc
jp
cmp
in
mov
dec
shl
lods
sub
sub
add
mulb
dec
xchg
mov
arpl
mov
adc
jae
or
cld
shl
dec
mov
xchg
push
lds
sbb
push
mov
push
sbb
out
jno
pop
arpl
cmpsb
pop
push
out
pop
repnz
test
icebp
sbb
jns
sub
mov
mov
ret
xchg
jmp
arpl
cltd
or
inc
pop
pop
dec
lods
sub
pop
cld
sbb
mov
sub
adc
pop
lods
lods
jmp
pop
repz
sahf
lods
mov
movsb
int
xor
mov
adc
pusha
push
aas
adc
les
jmp
dec
iret
jns
out
in
add
cltd
pop
stc
xor
stos
lcall
inc
add
mov
out
inc
movsb
add
lock
dec
cmc
js
sbb
xchg
mov
and
cmpsb
and
inc
pop
add
rorl
xchg
cli
mov
nop
mov
pop
push
pop
popa
int
sbb
pop
hlt
pop
int3
adc
mov
xor
dec
gs
push
dec
dec
test
les
lods
dec
ss
call
mov
mov
jge
into
ja
icebp
dec
jne
int
adc
or
dec
ret
lock
xlat
xchg
push
inc
test
out
jbe
lret
and
mov
sbb
fidivrl
fisttpl
pusha
xorb
mov
enter
inc
dec
xchg
jl
add
testb
add
rcrb
stos
cmpsl
call
jbe
cli
cmpsl
mov
shl
dec
jp
sti
movsl
fwait
into
fsubs
mov
in
push
in
mov
movnti
mov
sarb
cmp
or
cmpsb
repz
scas
mov
xor
mov
jno
jl
aad
in
add
add
insb
and
dec
xor
sub
mov
lock
outsb
addl
sub
addl
add
int3
mov
and
mov
sub
pushf
pop
ja
cmc
pop
pop
sbb
jg
inc
xlat
mov
pop
and
or
in
cmpsl
clc
insb
leave
es
mov
cli
cmp
rorl
aad
jbe
xchg
pop
xor
popf
fldcw
test
push
enter
ret
dec
es
pop
mov
arpl
jg
stc
or
adc
notb
ss
or
loop
andl
and
ljmpw
std
jbe
jbe
xchg
sbb
mov
add
inc
mov
loopne
pop
and
or
test
sahf
cld
lret
sbb
xchg
cmp
xchg
in
push
jbe
or
pop
or
dec
arpl
mov
je
idivl
jbe
repz
mov
test
sub
mov
ljmp
inc
jecxz
xorb
pop
adc
ja
dec
cli
push
popa
ja
jb
jcxz
ja
sub
mov
cltd
xchg
ror
sub
jbe
idivl
mov
push
call
cmp
test
inc
pop
jb
popf
adc
lea
mov
sub
cmc
add
aad
rorl
in
dec
fldcw
fcoms
pop
cmc
andb
addb
pop
subb
or
mov
movsl
js,pn
decb
jmp
jg
jns
lea
test
pop
fbld
pop
imul
xchg
int3
fwait
jmp
movsl
cltd
fwait
xor
mov
cwtl
xchg
inc
shll
jbe
inc
push
sarl
shll
push
cs
popa
rorl
notl
xor
out
dec
jmp
sahf
jo
nop
xor
add
add
mov
out
pop
adc
and
push
push
mov
sti
xchg
insl
test
mov
repz
ss
addr16
loopne
icebp
push
pop
stos
xor
sub
xorb
push
aam
test
mov
cmp
add
xchg
push
movsl
or
addr16
adc
call
fdivp
cmpsb
jb
or
cmp
cli
out
jge
pushf
fsubs
movsl
mov
xor
xchg
push
adc
xchg
shl
lods
xor
pusha
cwtl
lret
add
mov
cmp
push
inc
fnstenv
mov
test
jg
mov
js
negb
push
and
mov
pop
push
sbb
xchg
incl
sbb
nop
mov
insb
fnsave
inc
inc
jp
out
jp
sbb
adc
mov
gs
call
jns
xchg
jno
test
jne
push
or
out
jbe
mov
cs
inc
shr
insl
fs
sub
dec
push
aaa
lret
nop
ja
push
cmpsl
and
nop
in
sub
mov
popf
sub
sbb
xchg
push
std
and
hlt
lret
and
stos
ja
inc
decb
cmp
dec
xchg
mov
xchg
pop
mov
push
jecxz
adc
or
or
jle
pushf
adc
fisubs
xor
cmp
or
lret
mov
xchg
loope
push
push
push
xor
jbe
sub
addb
adc
popa
outsb
fs
lods
mov
dec
sbbl
div
adc
pop
pop
pop
dec
xor
and
stos
aam
jo
mov
jno
jmp
push
pop
push
xchg
jl
outsl
pop
mov
int3
mov
out
pop
dec
aas
ljmp
fiadds
mov
xchg
xorps
push
xchg
ljmp
push
or
pop
xor
cmp
or
dec
mov
test
push
push
lret
mov
and
stos
loope
rcrl
or
push
add
js
std
cmp
clc
mov
inc
shr
lods
dec
sbb
pushf
daa
jg
aam
jmp
jno
fs
mov
jbe
pop
inc
cwtl
lock
xchg
ficomps
mov
add
inc
rcrl
mov
lock
sbb
ss
in
shll
sahf
cmp
aas
das
lret
pushf
pop
mov
in
fisttpll
jle
ja
popf
add
lods
aad
xlat
mov
and
into
mov
cmpsb
outsl
mov
ss
adc
mov
dec
cs
pop
and
fneni(8087
fnstsw
push
cwtl
push
xor
sbb
dec
jmp
outsl
das
jge
or
sti
xchg
or
mov
hlt
add
pop
std
imul
int
sbb
sub
daa
shrb
sbb
add
int3
xlat
fs
pop
iret
repz
jecxz
dec
pop
ljmp
sbb
addb
clc
dec
xor
push
cmc
movsl
sub
push
pop
xor
push
pop
xor
popf
adc
lcall
clc
into
push
push
add
in
xchg
mov
fcomps
repz
push
int
mov
cmp
daa
xchg
or
popf
xor
ss
ret
orb
mov
push
mov
fmul
fdecstp
aaa
int
imul
push
jae
cmp
fstl
test
int
jecxz
loope
les
mov
sbb
lds
cmp
pop
cmc
jge
xor
dec
pop
sbb
fdivr
scas
cmp
xor
adc
push
cmpsb
adc
int
mov
test
pushf
mov
cwtl
clc
cmp
test
ret
pusha
lea
int
addr16
iret
xchg
mov
enter
aas
ds
repnz
test
sbb
or
inc
out
movsl
xchg
movsb
dec
imul
out
xchg
mov
pop
lcall
pop
aam
imul
arpl
add
pop
leave
sub
test
leave
js
push
and
or
sub
lahf
fimuls
xchg
xor
std
cmp
cwtl
mov
ret
pop
in
sti
mov
aaa
sbb
ljmp
jnp
stc
or
jmp
jae
and
and
mov
inc
or
movsl
mov
mov
stos
pop
add
or
inc
push
push
inc
jbe
out
cs
ljmp
push
leave
add
out
lcall
adc
xchg
in
fs
pop
add
or
hlt
aam
repnz
mov
mov
sub
add
add
stos
lods
mov
aad
fneni(8087
out
call
jg
pop
push
mov
dec
lock
xor
outsb
in
xchg
es
cwtl
dec
pop
xchg
dec
sahf
and
jle
add
add
arpl
movsl
fs
mov
pop
jecxz
fcoml
pusha
xorl
adc
inc
push
lcall
dec
out
xchg
mov
add
jno
loopne
mov
jp
shlb
cmpsb
sarb
loope
dec
pop
jle
ja
ret
aam
pusha
fs
push
mov
je
push
sub
in
sub
xor
pusha
out
fs
push
imul
add
dec
jecxz
fidivs
jno
insl
jno
mov
insl
test
ret
sbb
mov
dec
movsb
sbb
sub
stc
add
test
loope
cmp
sub
bound
jo
sub
and
jle
mov
aaa
and
mov
push
outsl
cmpsb
sub
add
test
mov
bound
mov
mov
xor
add
insl
xor
fstps
mov
jl
xlat
xor
dec
cmpsb
imulb
rorb
add
or
repz
fwait
pop
cmp
dec
pop
daa
lret
popa
mov
mov
cmp
xchg
mov
aad
or
addb
push
out
out
out
ja
fldenv
fdivs
jp
xchg
cmc
pop
pop
pop
sub
popf
adcb
xchg
and
scas
push
insl
std
outsb
sub
ljmp
pusha
and
outsl
sbb
or
dec
je
fists
cmovns
std
imul
mov
sahf
bound
test
sub
add
jmp
xchg
mov
das
scas
cmpsl
sbb
arpl
sbb
ror
sbb
mov
scas
xor
xchg
mov
bound
fs
xchg
adc
psubsw
icebp
es
and
lahf
pushf
aam
mov
int
int
inc
insb
xchg
and
push
sub
or
cmp
inc
add
popa
pushf
xor
daa
outsl
xchg
jne
xor
push
icebp
shll
xchg
pusha
mov
iret
xchg
adc
sarl
mul
pop
fstl
scas
or
push
cmp
dec
sbb
and
jp
cmp
push
call
cwtl
mov
fwait
subl
mov
les
sbb
icebp
push
and
sbb
in
adc
lods
dec
andl
jno
jnp
insb
fldcw
inc
jbe
push
push
jge
cmpsl
inc
cli
adc
outsb
mov
out
mov
hlt
mulb
cwtl
jge
rdpmc
pusha
in
bound
daa
jmp
ret
sahf
aas
jns
adc
andb
cltd
or
nop
decl
js
dec
sub
into
dec
out
push
lahf
adc
push
imul
xor
pop
push
lret
inc
out
test
in
mov
es
movsl
fs
lods
jmp
add
lea
clc
mov
mul
insb
clc
xor
sahf
mov
hlt
xchg
sarl
jg
cmpsb
out
push
sub
aam
out
adc
das
push
mov
lock
cltd
push
lds
sbb
jle
scas
es
outsb
test
add
dec
call
cmp
adc
inc
mov
stos
inc
pop
jbe
lret
test
push
pushf
inc
jle
popf
cwtl
lahf
inc
jb
repnz
std
lea
stos
jl
es
inc
popa
aas
xchg
test
sub
mov
or
out
mov
xchg
test
push
test
fidivrs
aad
push
xor
add
jmp
or
cld
push
fisttps
push
add
add
mov
xchg
add
mov
cmp
cmp
setae
or
movsb
inc
ja
pop
cli
js
or
and
cmp
or
inc
pushf
daa
js
pop
push
mov
mov
stc
pop
pop
mov
push
adc
popf
inc
in
adc
push
mov
add
sbb
add
pop
in
cwtl
or
dec
outsl
aam
adc
mov
ljmp
adc
inc
vshufpd
cmc
stos
and
lahf
jbe
icebp
loop
add
mov
push
dec
test
loope
cmp
inc
loop
xchg
jb
and
or
and
popa
xchg
out
jl
jl
cwtl
test
pop
jg
add
test
test
jg
fwait
rorl
ljmp
insl
jge
or
lcall
mov
inc
int
and
xchg
mov
xchg
xlat
xor
jge
jo
sbb
cwtl
sub
dec
push
cmpsl
cmp
cmp
popf
add
push
dec
push
adc
or
push
dec
adc
arpl
jp
out
xchg
pop
and
fiadds
push
inc
or
inc
adc
xchg
jne
dec
or
cld
sub
inc
imul
jnp
aas
sbb
fsubr
inc
lahf
mov
fdivp
dec
or
mov
pop
add
mov
dec
loope
xor
sbb
shlb
pop
fisubl
sub
aaa
xchg
cltd
subl
cwtl
repnz
or
sub
das
sub
or
dec
mov
vmovapd
push
mov
fwait
iret
xchg
aas
movsb
push
mov
adc
mov
adc
fisttps
mov
cltd
idivl
mov
inc
push
mov
xor
aam
fwait
imul
into
divl
inc
sbb
movsl
xchg
mov
imul
cmp
mov
adc
mov
in
lret
lock
insb
ljmp
sarb
iret
mov
les
stos
inc
mov
add
leave
sbb
and
in
mov
pop
mov
inc
push
lret
out
shr
rol
jbe
gs
add
pop
push
stc
or
push
loop
aad
pop
imul
clc
jle
pushf
fdivr
sbb
in
ret
push
ljmp
shll
rol
out
sahf
mov
dec
scas
cmpsl
push
insb
xor
mov
mov
cmp
mov
inc
enter
mov
cmp
rcr
xchg
loopne,pn
add
in
push
into
push
outsb
adc
cmp
and
mov
rcrl
mov
out
sub
rol
add
fldl
pop
mov
movsl
pop
mov
fbstp
imul
loope
mov
outsb
addr16
leave
sub
cmp
ljmp
jecxz
xor
arpl
fs
addr16
pop
inc
pop
mov
and
or
mov
cmp
mov
inc
and
and
push
push
dec
sub
mov
pop
jns
dec
out
and
sbb
divl
push
lret
sbb
scas
dec
jns
lods
sbbb
mov
rorb
outsl
add
cmc
mov
xchg
push
mov
sbb
fs
jne
jp
arpl
mov
push
xorl
enter
popa
xchg
andb
sbb
push
stos
and
push
push
sub
and
xor
ret
pushf
js
pop
and
pusha
xlat
imul
mov
push
vmread
lret
cwtl
mov
xlat
inc
data16
out
loop
pop
and
in
dec
sbb
xchg
ret
test
pop
mov
add
xchg
sarb
add
aaa
daa
sub
fisubrs
mov
dec
and
add
mov
out
jb
mov
out
xchg
jecxz
cmp
outsl
test
and
mov
mov
test
pushf
xchg
and
jnp
imul
addl
int
xchg
dec
jb
das
iret
push
mov
adc
mov
outsl
fnop
sbb
sub
push
popaw
xchg
xchg
xchg
xchg
inc
mov
mov
je
fidivrl
movsb
sbb
test
add
test
pop
imulb
lock
jg
push
pusha
addb
mov
cmp
fimuls
mov
call
push
adc
insl
ss
inc
or
test
mov
xchg
adc
pop
fiadds
dec
jecxz
inc
ja
sbb
pop
das
ret
nop
cld
xor
std
bound
cmp
shrb
mov
push
cmp
sahf
shr
dec
jbe
fwait
inc
pop
int3
jecxz
or
pop
add
push
add
xchg
mov
lock
xchg
lar
mov
xchg
inc
sbb
add
daa
sub
jge
stos
push
test
imul
fcmovne
stos
das
roll
sub
in
lds
xor
fdiv
shl
aad
cmp
and
stos
subl
pop
popf
sub
push
cmp
push
daa
mov
ret
push
idivl
and
mov
loopne
les
mov
sbb
test
mov
leave
jne
mov
add
shrb
aaa
mov
lret
cmp
sub
rcrl
sub
imul
movsl
mov
stc
cmp
in
inc
xor
stos
pop
xchg
sti
or
jno
cmp
push
mov
outsb
push
mov
jo
nop
inc
std
inc
add
and
adc
push
mov
sbb
mov
fisttpll
hlt
mov
mov
ja
fistpl
mov
sahf
ret
mov
enter
insl
nop
ja
mov
add
gs
inc
jmp
shlb
imul
cmp
push
cmpsb
fistpl
xor
movaps
push
rolb
mov
adc
shrl
sbb
iret
hlt
aaa
mov
mov
das
cltd
or
int
cmpsl
cmp
xchg
mov
adcb
pop
sbb
push
divl
and
jg
es
mov
adc
xchg
dec
adc
inc
mov
repz
mov
popf
outsb
cmpsb
adc
scas
inc
arpl
repnz
push
sub
cli
into
xor
outsb
mov
xchg
sbb
and
lds
push
movsl
out
cli
call
ficoml
sbb
inc
pop
mov
cmpsb
cmp
cmp
push
mov
push
push
cmpsl
jns
xlat
jecxz
je
adc
lret
or
jne
packssdw
mov
cmpsl
cs
and
iret
daa
in
clc
es
or
cwtl
fsubs
ljmp
and
mov
cmpb
dec
stos
rcrb
mov
fisttps
push
in
popa
hlt
sub
mov
lret
movsl
push
cmp
adc
add
cmp
aam
lods
add
xchg
out
jecxz
popf
pop
in
dec
mov
xor
nop
dec
mov
test
mov
xchg
andb
jl
pop
test
sub
mov
insl
or
fisubrl
xchg
pop
shll
paddq
dec
ja
jb
xor
sub
iret
cmp
cwtl
or
xchg
add
daa
or
aaa
mov
push
insb
scas
xor
xor
xlat
out
mov
aad
xchg
loope
sahf
fistl
and
aas
and
pop
out
fisttps
add
js
add
adc
add
cmp
pop
push
inc
out
xchg
cmpl
pop
cwtl
adc
out
test
stos
sub
xchg
jae
nop
jnp
push
and
xchg
pop
jg
pop
fst
mov
mov
adc
add
std
add
dec
mov
scas
add
pop
out
mov
sbb
sbb
add
stos
jle
ret
movsb
scas
out
shl
decb
lret
in
mov
outsb
out
jo
xchg
jb
push
push
and
xchg
das
sbb
sbb
aad
rcll
cmp
sbb
mov
dec
aaa
clc
mov
enter
pop
rcrl
mov
fs
out
xor
lods
pop
jbe
dec
dec
in
adc
add
into
cwtl
sub
jno
lock
mov
xor
push
adcl
aam
pop
inc
mov
sbb
aam
add
xor
dec
mov
add
pusha
hlt
aaa
jmp
repnz
push
lret
icebp
aam
mov
xor
mov
mov
mov
xor
dec
or
adc
pop
fimull
fsubr
in
into
in
sub
push
rcrl
and
or
dec
add
jp
loop
push
jg
shll
sti
pusha
xor
mov
adc
and
imul
xor
xchg
inc
push
outsb
and
push
xor
pop
int
sti
and
call
mov
cld
les
shll
push
cmc
iret
das
cmpsb
lcall
shll
sbb
or
out
bound
fmuls
insb
mov
insb
imul
jbe
jg
dec
rolb
enter
add
inc
xchg
sbb
add
jne
mov
mov
mov
add
inc
rolb
inc
dec
aaa
mov
mull
insl
lret
sbb
xor
in
adcb
fdivrl
shr
adc
jae
add
pop
adc
sbb
or
dec
adc
mov
and
lahf
push
push
inc
cmpsb
std
and
data16
loop
popa
sbb
aaa
xor
add
and
push
shlb
mov
sbb
rcrb
xor
adc
mov
sub
mov
push
cwtl
hlt
dec
sub
and
push
dec
js
mov
repnz
int3
insl
and
clc
iret
test
fildll
mov
and
cltd
push
loop
and
and
pop
hlt
aam
roll
mov
mov
push
out
sahf
dec
sbb
and
mov
sahf
lret
or
negb
cmc
popf
push
arpl
mov
imul
mov
bound
mov
xorb
xchg
cmovne
cmp
xchg
or
inc
aas
cld
fcoms
adc
pop
adc
mov
fdivrl
mov
lods
cmp
outsl
jmp
scas
cmp
mov
repz
push
faddl
cmp
xor
lock
mov
insl
jnp
pop
cld
xlat
pop
loop
jle
cmpsl
push
xor
or
or
xchg
clc
add
ret
rclb
cmp
pop
sbb
jecxz
std
popf
aad
pushf
mov
mov
and
push
fcmovnb
push
addb
jb
shl
adc
mov
mov
filds
mov
xchg
or
mov
push
popa
push
jnp
adc
outsl
repz
mov
jecxz
sbb
and
jae
orb
and
push
jg
lea
push
adc
jne
daa
jb
adc
stos
fs
xchg
mov
jp
jge
adc
sub
and
cmpsb
xchg
xor
sbb
cmp
insb
and
lret
push
jne
cmp
and
jle
aas
repnz
into
stc
and
pop
and
es
inc
aaa
stos
jp
iret
test
add
dec
imul
rcrl
popf
xchg
mov
sub
xchg
or
in
popa
rclb
sub
icebp
ret
lock
mov
dec
jmp
lret
jnp
imul
loop
subl
push
mov
pusha
lds
inc
add
ucomiss
sbb
add
cmp
pop
fcmovb
add
xchg
jg
dec
addb
dec
push
dec
pop
push
xchg
add
mov
cwtl
outsb
push
ds
jo
adc
and
add
xchg
out
mov
jmp
bound
jle
add
cmp
outsl
jge
mov
sub
pop
adc
in
jo
loop
fs
adc
aas
push
cmp
inc
and
fcoml
xchg
mov
lcall
ja
into
push
or
jge
loop
popa
sub
pop
xchg
lds
aam
jmp
or
xchg
xor
lods
dec
fs
test
sbb
push
sub
push
xor
or
in
outsb
jmp
mul
loopne
lcall
inc
aam
push
or
xchg
xor
lods
jne
repnz
jnp
add
inc
sub
pusha
mov
ss
push
outsb
test
mov
sub
and
mov
mov
dec
rorb
xor
dec
pop
mov
inc
in
cmp
pop
call
imul
pop
insb
movsl
das
stos
subb
xchg
arpl
dec
shl
sar
fdivrp
push
lods
ds
sar
sarl
dec
pushf
int
out
add
dec
jmp
cmp
ret
push
in
cmpsb
sar
frstor
lods
cmp
andb
rcrl
cmp
mov
lcall
push
cmpsl
mov
jle
and
sbb
lretw
jae
push
hlt
inc
xchg
mov
mov
popa
jns
movsl
rol
cmp
aad
ror
push
rolb
outsl
out
push
fnsave
cmpsb
ficompl
pusha
cmc
pushl
jae
sbb
xchg
jne
movsb
inc
in
pop
sub
ret
inc
mov
je
test
mov
mov
lret
jne
xchg
mov
dec
je
les
loope
add
and
in
andb
xchg
testb
cmpsb
fnsave
jp
and
xor
das
pop
pushf
xor
mov
adc
popf
ficoms
mov
in
bound
loop
mov
stc
mov
mov
cmp
in
sahf
push
inc
cli
mov
sub
adc
push
mov
fiaddl
test
push
cmc
sar
add
add
sbb
insl
xor
std
lods
stc
and
ret
sbb
lahf
mov
aam
mov
cmp
int3
xor
push
push
push
push
in
in
pusha
shr
test
mov
xchg
pop
add
mov
cmp
push
adc
leave
daa
popa
dec
xchg
xlat
sbb
xchg
sbb
push
in
icebp
pushf
lcall
push
cmp
insl
mov
out
mov
push
jne
xorl
test
cmp
fdivrs
or
hlt
cmp
insb
mov
or
data16
and
iret
pop
in
outsl
sbb
sbb
or
mov
lcall
cmp
push
inc
and
pop
pop
movsb
shr
mov
push
das
test
out
xor
pusha
add
xchg
ds
pop
inc
ficomps
call
pop
xor
xchg
add
jae
mov
mov
imull
mov
mov
xchg
jl
popa
nop
call
fistpll
negb
fidivrs
mov
stos
mov
data16
rcrl
fsts
xadd
test
aas
mov
cmpsl
sbb
add
xor
xchg
notb
xchg
sub
shl
imul
jno
lods
leave
lahf
inc
and
pop
bound
xchg
mov
cld
data16
mov
mov
xchg
push
push
pop
xchg
into
dec
fmul
cmpb
ss
ret
or
test
aam
popf
ret
or
pop
pop
and
clc
pusha
shll
clc
daa
es
jns
outsl
cmpsb
push
mov
push
mov
xor
sub
call
adc
lds
pop
fdivrs
icebp
mov
cltd
les
mov
in
loopne
jae
scas
adc
scas
inc
mov
push
movsb
loopne
adc
and
mov
bound
imul
mov
dec
push
mov
in
in
je
adc
mov
pop
xor
jg
in
into
dec
repz
inc
and
add
into
pop
rcrl
mov
xor
test
inc
pusha
xchg
jae
pop
lods
out
cmpsl
shlb
lret
mov
and
stos
aad
js
inc
ja
addr16
pusha
adc
aam
in
push
rorl
mov
movsl
repz
loop
push
pop
pop
sbb
mov
fstpl
punpcklwd
jns
cli
mov
insb
adc
daa
mov
repnz
pop
cmp
mov
shlb
mov
jg
push
adc
dec
mov
iret
insl
call
or
sub
testl
aam
cwtl
jo
mov
xchg
mov
fsubr
mov
sbb
cmp
cs
insl
je
mov
outsb
into
ret
add
inc
dec
and
inc
xlat
pop
cmp
cmp
rolb
dec
jge
xchg
adc
je
pop
hlt
fists
mov
sbb
mov
scas
iret
mov
cltd
icebp
lret
stos
stc
mov
fsubrp
add
xor
and
pop
pop
or
lock
inc
lods
sti
mov
sbbl
push
jno
push
cmp
idivl
bnd
sub
inc
inc
popf
inc
xchg
enter
pusha
sub
insl
mov
xor
fimuls
test
push
xlat
lea
jle
jno
int
fmul
jae
clc
fcom
out
xchg
jecxz
push
sbb
std
push
pop
out
mov
mov
jo
sbb
cwtl
pushf
pop
aam
adc
inc
mov
insl
movsb
push
mov
adc
pop
cld
push
in
lret
jge
adc
dec
insb
xor
les
cmp
loope
outsl
inc
daa
ja
loop
dec
gs
mov
gs
outsb
int
fisttps
jmp
inc
push
scas
push
jmp
jmp
cmpsb
and
fsubs
mov
pusha
mov
shlb
cmpsl
ret
negl
std
xchg
mov
shlb
cmpsb
xchg
push
imull
adc
pop
ret
mov
push
pop
xor
fisttpll
nop
cmp
std
xchg
fs
sbb
fdiv
adc
and
adc
push
aam
sbb
movsl
dec
or
stc
jo
xor
dec
pop
sbb
scas
out
mov
jle
lods
stos
lahf
push
inc
mov
jo
fsubrp
jg
lds
mov
imul
adc
repnz
insl
xor
fidivrs
inc
jmp
jae
pop
fidivl
sbb
dec
push
ljmp
divl
sub
adc
jne
xor
or
push
mov
loop
inc
outsb
or
pushf
test
jbe
cwtl
stos
xchg
add
inc
std
add
push
jae
inc
jecxz
and
in
addb
pop
jl
enter
fimull
pusha
iret
xchg
imul
xor
pop
sahf
js
add
mov
pop
adc
hlt
aaa
shrl
adc
nop
imul
or
pop
dec
fcmovbe
push
test
xchg
fistl
push
in
inc
cwtl
lds
incl
ret
and
push
into
cmp
mov
mov
mov
ja
jle
or
push
lods
add
loopne
lea
inc
inc
jne
sub
cmp
movsl
pop
fdivrl
lcall
push
lods
add
subl
mov
push
cmc
les
pushf
adc
xor
xorl
jmp
mov
sbb
pop
fidivl
or
aad
in
sbb
test
sbbl
or
ja
sbbb
nop
dec
movsb
pand
pusha
aad
loope
sub
stos
push
mov
push
mov
repz
fs
mov
adc
xor
mov
sub
in
cmc
addr16
adc
inc
mov
xlat
mov
arpl
jnp
and
or
sub
pop
adc
sub
mov
pop
popf
cmp
in
outsl
push
inc
xchg
ja
testb
pop
inc
or
adc
jne
mov
insb
loope
xchg
test
jmp
dec
jecxz
or
dec
repz
cmpsb
mov
inc
add
xor
dec
addr16
fnstenv
inc
fistps
hlt
gs
clc
leave
enter
add
mov
test
in
sub
loopne
jp
pusha
ret
pop
fiaddl
xchg
mov
loop
jmp
fdivrs
xor
dec
cmpsl
or
in
mov
fwait
ja
xchg
cmp
leave
fistps
adc
adc
pop
jne
mov
out
test
in
mov
andl
repnz
dec
das
out
push
push
inc
cmp
jecxz
scas
sub
stc
push
cmp
sahf
jae
mov
add
xchg
dec
lret
fnstenv
stos
jns
rcll
and
gs
push
outsb
outsb
jmp
gs
push
aaa
mov
xor
push
mov
inc
push
lcall
adc
dec
add
sbb
add
inc
cmp
lock
mov
fldt
fadd
notl
fcomps
xor
adcl
test
mov
addr16
sub
sbb
sub
es
xor
inc
sbb
icebp
dec
sub
aam
mov
popf
xchg
imul
lcall
and
push
in
pop
push
fs
pop
xor
cli
loopne
or
dec
lods
fmuls
xchg
mov
xchg
cltd
pop
addl
adc
pop
sbb
stc
fstps
xor
repz
push
insl
cs
outsb
push
aaa
jbe
aas
cmp
or
xorb
or
icebp
pop
sahf
dec
push
xor
sub
inc
xor
hlt
js
jmp
xchg
rclb
inc
in
mov
adc
outsb
adc
pushf
lret
testb
gs
adc
push
dec
sbb
fwait
jl
mov
xor
add
mov
lret
hlt
fucomip
das
mov
pop
shlb
xorl
cmp
push
lret
and
lods
mov
sbb
call
and
dec
flds
and
jns
mov
or
lds
in
insl
movsl
std
dec
shlb
dec
movsb
je
jle
test
adc
jne
push
into
mov
sahf
and
add
mov
sar
sbb
fdivrs
mov
sub
jns
sahf
fwait
das
shlb
push
lea
and
cmc
loop
jg
insb
push
movsb
dec
jbe
daa
into
ror
add
pop
push
or
or
ficompl
push
lock
or
cwtl
adc
or
negl
pop
test
das
push
pushf
out
outsl
mov
into
push
mov
inc
xchg
lods
aas
mov
jg
stos
movsl
mov
push
xchg
iret
ficoms
and
ljmp
mov
lret
or
xor
pop
adc
mov
jo
adc
lret
pushf
xor
icebp
test
out
mov
ret
insb
mov
mov
rclb
inc
add
addr16
cs
cmp
xchg
lcall
xchg
lds
push
or
push
or
leave
mov
pop
pushf
mov
arpl
add
and
adc
push
mov
mov
add
jge
idivl
mov
shrb
cmp
shlb
jb
cmp
std
cld
iret
sub
mov
add
push
repnz
push
stos
shll
js
lds
js
in
sub
test
in
xchg
adc
fldenv
xor
jno
out
inc
call
cmp
or
cld
mov
mov
add
andl
push
and
push
sbb
fsubr
jle
jno
loop
sbb
jae
push
xor
sub
push
dec
sbb
stos
cmp
roll
outsl
out
and
cmp
xor
orl
lods
stc
js
xor
inc
inc
inc
icebp
jb
dec
inc
pop
ljmp
mov
inc
sti
sbb
rol
js
xor
push
pop
pop
or
loope
or
fstps
scas
and
arpl
ret
scas
arpl
pop
lock
test
aas
sbb
or
cmp
aam
cmpsl
jb
inc
aas
dec
ss
in
iret
mov
pusha
and
or
inc
in
fadds
add
and
add
sbb
sub
jmp
in
das
jae
cmpsl
xchg
inc
shl
fldt
or
ret
xor
mov
mulb
std
inc
fists
int
mov
push
daa
test
icebp
clc
xchg
add
xchg
jp
inc
mov
pushf
jae
in
adc
shlb
add
push
outsl
push
out
nop
int3
push
xchg
and
push
mov
dec
es
push
sub
push
fimull
push
repz
fidivrs
add
mov
and
out
jae
mov
jnp
out
add
loope
inc
sbb
lds
sub
adc
test
mov
mov
lret
add
fs
push
sbb
loope
lds
xchg
shl
xchg
in
cltd
loop
hlt
addb
adc
xchg
movb
jecxz
aam
jp
out
or
jae
and
icebp
fisubs
lahf
outsl
or
aaa
inc
loopne
xlat
into
mov
sahf
dec
rcll
lods
nop
jle
divb
mov
repnz
repnz
cmpsl
test
mov
fisttpl
imul
pop
sub
xchg
and
mov
pop
and
xor
testl
pop
and
shlb
mov
loope
xor
leave
cmpsb
push
pop
pushf
sbb
orl
push
insl
test
rolb
xor
cmpsl
sbb
cmp
push
cmp
mov
cld
mov
push
aam
sbb
cltd
push
cmc
fs
leave
scas
pop
jp
ljmp
gs
mov
sbb
bound
mov
jg
sbb
push
pop
enter
cli
mov
mov
lock
mov
and
push
idiv
jge
push
fisttps
and
push
pop
and
pop
lods
jecxz
adc
subb
xchg
mov
sub
jmp
sub
and
xchg
mov
fistps
sub
mov
js
into
clc
loopne
and
jo
mov
js
pop
sarb
int3
sbb
lcall
dec
lods
popa
cmp
scas
movsb
daa
xor
xchg
inc
jmp
mov
or
arpl
jne
sub
movsl
xchg
sbb
out
push
pop
pop
sbb
mov
lret
cmpsl
js
cmpsb
pop
aas
lcall
push
pop
sub
sub
sub
jnp
push
dec
cmp
inc
fnstenv
enter
xchg
mov
mov
cmp
sbb
test
mov
jmp
xor
inc
sahf
xor
pop
and
nop
dec
lret
add
sbb
inc
sbb
push
jge
pop
repz
jnp
pushf
test
aad
xchg
mov
imulb
jl
mov
push
jl
dec
dec
ficomps
mov
push
insl
jecxz
lods
incb
sbb
push
inc
dec
pusha
mov
fildl
in
mov
inc
and
sub
mov
jae
xor
shll
jmp
icebp
push
pop
mov
jmp
out
insl
loop
dec
ficompl
sub
inc
and
push
xorb
stc
push
movsb
sarb
int
mov
mov
movsb
in
andb
sbb
push
daa
fidivrs
sbb
shll
sub
jb
in
int
ficomps
mov
jns
loope
adc
cmp
and
and
int3
cmp
sub
push
das
dec
lcall
sub
jge
cmpsb
les
and
gs
mov
and
ret
dec
into
jmp
jnp
sbb
push
fadds
xor
jnp
adc
pushf
jge
in
push
fmuls
inc
xchg
lea
inc
lahf
xchg
push
fimull
mov
ljmp
repz
and
pop
jge
adc
mov
mov
push
mov
push
or
lcall
pop
cmp
ret
rcrl
imul
sub
leave
cld
std
aad
notl
or
cmp
mov
jmp
push
shlb
mov
rorl
rcrb
addl
lret
popa
xor
mov
sarl
jns
gs
adc
mov
and
mov
cmpsl
xchg
xor
into
pop
int3
mov
sub
jae
outsb
scas
mov
in
das
je
cld
lcall
enter
xor
mov
mov
add
fistps
in
shl
xchg
and
sbb
les
cmp
popf
lret
cmpsl
or
movsb
sbb
cmp
sub
pop
scas
pop
mov
mov
pusha
mov
dec
std
test
test
lock
fs
js,pt
mov
push
pop
dec
lahf
and
mov
test
sbb
and
pop
lods
mov
push
popa
ds
push
leave
add
xor
xchg
test
in
adc
xchg
ds
lea
enter
loop
stos
or
rorb
mov
pop
xor
sub
or
ret
or
jl
enter
fucomi
mov
dec
xchg
or
jns
cmp
int3
cmp
sbb
mov
pop
mov
cmp
cmpsl
movsl
inc
add
cmp
or
test
fimuls
mov
add
pop
mov
or
ror
sbb
dec
loop
add
mov
or
repnz
outsb
push
int
jecxz
mov
dec
push
xor
or
aas
and
jnp
add
dec
in
int3
push
mov
xor
mov
pop
fldenv
mov
les
cmp
fsubl
or
insb
lret
or
jmp
xor
push
pop
sub
fadd
push
shrl
mov
mov
mov
cmp
ret
sbb
adc
mov
mov
lock
add
push
std
mov
jne
js
out
mov
add
ret
addr16
cmpsb
mov
addr16
shl
xchg
fwait
testl
mov
mulps
lret
add
fmuls
and
add
inc
cwtl
xchg
xchg
jl
sarb
insl
stc
loope
stc
lds
in
ja
push
js
enter
lret
push
fxch
loopne
in
add
sbb
aad
into
adc
sub
popa
imull
mov
loop
add
lret
adc
jp
aam
dec
pop
sahf
jno
mov
cmp
pop
pop
cmc
mov
notl
hlt
scas
inc
xlat
out
push
mov
int
add
stc
sti
adc
fiaddl
and
jge
fcmovbe
xchg
jl
scas
xchg
push
dec
inc
mov
lret
push
cmp
ljmp
fmuls
aas
and
shll
call
in
jle
lcall
add
aam
and
stos
call
mov
mov
into
or
lds
push
sarl
pusha
icebp
mov
mov
mov
mov
orb
or
add
mov
xchg
mov
push
and
or
xor
jecxz
jae
or
jecxz
xor
dec
cwtl
loop
and
sbb
inc
int3
ss
imulb
push
mov
mov
sbb
fistl
mov
push
je
xor
mov
dec
mov
pop
mov
push
aas
insb
inc
mov
cwtl
into
cmpsl
shll
jl
outsl
nop
sub
mov
iret
inc
pop
fisubrs
cli
mov
push
lahf
shlb
stos
inc
xchg
sub
pop
cmp
leave
jbe
and
xlat
cli
xor
mov
sub
imul
in
cld
jnp
lahf
jecxz
sarb
push
jae,pt
outsb
enter
mov
nop
jae
inc
mov
cmp
test
jle
and
mov
push
mov
or
or
testl
add
ja
add
shrb
xor
xor
bound
inc
jbe
lcall
xchg
stos
push
movsb
push
test
inc
ljmp
das
ret
dec
bound
sbb
mulb
fdivr
push
dec
xor
inc
ds
mov
shlb
and
sub
jnp
sub
pop
jbe
clc
or
dec
mov
cmpsb
xchg
sbb
sarb
push
xchg
pop
les
mov
and
fs
pop
mov
sbb
faddl
add
dec
mov
dec
in
mov
pusha
stos
add
insl
mov
mov
test
inc
xor
sbb
or
int3
insl
repnz
jge
dec
inc
lahf
sbb
pop
lods
test
jns
cmp
fwait
cmp
pop
pop
mov
rorb
mov
add
and
aam
lods
mov
rcll
jne
aam
push
mov
mov
add
jbe
and
std
loopne
pop
repnz
sbb
imul
adc
cmp
push
inc
icebp
cmp
jl
or
cmp
imul
ja
push
xor
loopne
dec
mov
mov
test
popf
mov
mov
testb
or
push
scas
xor
popa
pop
inc
movsl
and
rolb
or
out
or
jl
sub
jnp
xorb
xchg
xor
adc
setne
out
popa
mov
and
mov
pop
adc
pop
mov
pop
or
int3
rcll
pop
cmc
andb
mov
cmpsl
add
dec
lahf
adc
xchg
out
mov
mov
iret
sbb
pop
sub
pusha
mov
or
cmpsl
in
mov
test
push
in
inc
dec
mov
sbb
jl
rol
and
gs
add
push
mov
cmpsb
insb
mov
pop
fidivrs
lret
push
sbb
sbb
rclb
clc
leave
xchg
push
xor
pop
mov
push
mov
call
int3
cmp
movsb
push
movsl
outsl
loopne
rcrl
ret
mov
cmp
sub
sbb
mov
outsl
mov
fimull
enter
es
in
test
adc
fcomp
lea
pop
insl
in
and
push
push
mov
lret
jno
cld
pop
aam
push
js
jp
daa
xchg
mov
cwtl
lods
jae
mov
in
push
pop
adcb
sti
hlt
xor
dec
fwait
sub
imul
mov
or
sub
cmp
mov
or
je
cmp
push
test
mov
add
dec
mov
pop
or
stos
xchg
xor
mov
mov
loop
test
shlb
ja
dec
cld
inc
add
cwtl
aaa
leave
and
imul
ds
repnz
mov
jge
or
pop
mov
mov
xchg
push
or
testl
xchg
mov
ret
mov
cmp
mov
shr
scas
mov
push
rcll
popa
pop
and
rcr
fdivl
mull
pop
mov
mov
sub
notb
scas
bound
dec
adc
push
clc
xlat
adcb
lock
sbb
rep
lods
cld
into
push
aad
popf
int
push
addr16
aas
cld
mov
push
cs
adc
cmpsl
lret
test
push
in
add
jbe
mov
mov
call
lods
xchg
add
pmaxsw
lret
cmp
add
cltd
sub
mov
pop
jns
das
jmp
or
lcall
pop
mov
in
push
scas
push
andl
jmp
lea
and
dec
cmpsb
cmpsb
or
xchg
sub
dec
scas
mov
fiaddl
cmp
iret
aaa
xchg
xorb
scas
cmp
insl
cmpsb
inc
scas
mov
divb
dec
add
xor
mov
pop
xchg
mull
add
fsubs
or
dec
dec
dec
pop
subb
aam
mov
and
dec
scas
cmp
loopne
loop
inc
stos
aaa
fidivrl
mov
push
jo
inc
xchg
mov
pop
mov
add
iret
push
pop
lahf
int3
pop
cltd
mov
mov
popf
push
std
xor
adc
out
sub
int
lret
add
les
add
mov
imul
insl
flds
nop
jge
dec
jo
adcl
mov
push
sbbb
dec
xlat
nop
inc
lret
fwait
shr
loop
rcll
push
or
push
xor
mov
les
push
adc
xchg
lret
push
add
lods
mov
xor
inc
cmp
rcr
mov
ss
inc
mov
pop
push
mov
sbb
iret
rol
ljmp
mov
data16
enter
push
and
arpl
dec
jbe
out
imul
ret
jmp
dec
xchg
sahf
test
sub
movsl
jle
test
push
sub
pop
or
insb
mov
int
add
je
cmp
das
cli
dec
and
fsubr
pop
push
cmp
pop
scas
icebp
cmp
and
xchg
in
mov
mov
das
movsb
cmp
adc
lock
imul
fcmovb
xor
mov
mov
sbb
subb
mov
mov
and
mov
jl
shlb
bound
orb
loopne,pt
dec
dec
out
lcall
gs
dec
xchg
in
stos
ljmp
dec
arpl
ljmp
das
fnstsw
xchg
adc
stc
add
stos
les
ljmp
dec
aad
inc
scas
outsl
xor
lcall
jge
xor
in
fwait
fwait
aaa
pop
xchg
dec
add
add
mov
adc
jb
test
inc
inc
and
jne
and
mov
lea
lcall
sub
loop
nop
mov
mov
mov
jbe
loop
add
hlt
mov
add
in
cmpsb
popf
leave
inc
sar
dec
shl
mov
jg
test
dec
mov
mov
aad
out
xchg
mov
lahf
inc
lods
xor
jg
or
push
and
push
arpl
movsb
mov
es
loope
sbb
pop
sub
pusha
icebp
inc
les
outsb
loopne
pop
les
pop
jle
push
das
mov
or
and
inc
dec
xlat
lret
push
addr16
loop
pop
or
add
jae
jnp
push
push
movsl
lahf
shll
mov
inc
jns
push
or
insl
cli
in
adc
xlat
popa
lock
adc
inc
add
lds
loopne
lea
add
nop
mov
fwait
mov
insb
push
sub
dec
movsb
jns
bound
iret
gs
subl
les
pushf
pop
scas
inc
rcrb
das
sti
stc
push
gs
mov
mov
inc
xchg
jns
fbld
hlt
hlt
jg
xor
add
push
pop
xorl
or
mov
push
xchg
loopne
jne
movb
aam
pushf
mov
inc
div
pop
ds
sub
adc
and
nop
mov
es
mov
dec
out
test
push
in
push
pop
fcmovnb
lods
pop
dec
sbb
sub
stc
sahf
ret
jnp
int
sbbl
jno
fisttps
xor
movsl
pop
xor
ret
inc
xchg
adc
jecxz
jge
jp
pop
inc
decl
xchg
cwtl
insl
jg
push
sub
lret
mov
or
xor
mov
and
add
cmpsb
adc
sbb
xchg
ljmp
mov
std
xchg
mov
push
scas
dec
mov
jg
and
enter
mov
push
stos
arpl
sti
mov
into
hlt
jl
cmp
mov
cltd
fwait
jb
lods
xor
xchg
mov
add
xchg
xchg
jne
stc
scas
or
jns
mov
inc
aas
pop
push
add
cmc
xchg
sbb
or
leave
stos
jo
lret
iret
and
mov
imul
in
dec
shlb
push
sub
cmpsb
adc
imul
mov
ret
push
inc
dec
mov
loop
popf
mov
cwtl
stos
xchg
outsl
xor
dec
xchg
sarl
push
push
jmp
mov
nop
out
stos
in
lcall
repz
jnp
push
pop
xchg
movsb
frstor
fisubrl
mov
cmpsb
push
out
insl
insb
inc
jo
adc
in
xor
pop
jmp
fisttps
aad
mov
push
in
mov
xchg
xor
pop
stc
repnz
pusha
xor
pop
imul
pusha
mov
js
scas
andl
imul
jecxz
cmp
outsb
xchg
punpckhdq
jmp
xor
aas
out
imulb
mov
pop
jle
test
jmp
lret
imul
lret
pop
add
lea
outsl
xor
push
lods
inc
ss
addl
fcomip
mov
icebp
cmp
mov
flds
mov
push
mov
push
mov
pop
in
lods
and
out
add
mov
and
xchg
inc
gs
outsb
mov
xor
mov
mov
cmovg
add
ja
xchg
jae
sbb
push
mov
dec
cmpsl
call
lods
fwait
outsb
ljmp
mov
mov
cld
push
std
ja
cs
leave
dec
push
insl
or
pop
repz
ffreep
les
pop
pushf
out
das
mov
dec
push
clc
aam
sub
insl
std
call
lds
js
out
inc
in
or
imul
push
jge
inc
out
pop
pop
mov
or
pop
shrb
xchg
movsb
jge
jmp
inc
push
cmp
xchg
pop
enter
xchg
cld
call
clc
sub
push
or
xchg
xor
jg
mov
mov
xchg
iret
mov
daa
fwait
insl
add
mov
push
repz
jns
out
pop
dec
sbb
stc
stos
mov
cmpsb
inc
ret
and
xorl
rcrb
fcompl
incl
in
data16
inc
mov
push
sub
jbe
lcall
adc
push
je
or
mov
or
imul
mov
sub
pop
push
mov
dec
jg
lods
out
sbb
inc
xchg
movsb
sub
arpl
fcomi
push
and
jns
sub
aas
add
jmp
jg
adc
mov
or
xchg
cmpl
mov
xor
push
ja
dec
adc
divb
mov
cli
cmp
mov
out
testb
mov
in
cmp
jnp
iret
jge
mov
pop
and
insb
stos
dec
dec
lret
mov
subl
sbb
leave
mov
bound
sub
cmc
cs
int
mov
ud0
ret
xchg
andb
cmp
add
jno
lods
sbb
jp
ljmp
fsub
sbb
jo
jbe
imul
cmp
mov
inc
test
adc
es
scas
insl
fsubrl
dec
xchg
sub
adc
adc
insb
mov
les
imul
and
mov
mov
pop
push
cmp
mov
lahf
jle
outsl
mov
push
fadd
sbb
pop
outsl
cltd
sub
dec
or
mov
xor
sub
cmc
rclb
inc
cld
call
sbb
and
pop
inc
cld
cmp
pop
xchg
inc
addl
fdiv
jg
jecxz
subl
inc
unpckhps
mov
mov
in
test
inc
or
sub
lcall
arpl
aas
lods
aas
cmp
in
imul
adc
rcrl
clc
jecxz
pop
test
out
xor
or
add
push
jnp
push
add
and
ret
add
sbb
xlat
push
pop
xchg
cmpsb
adc
push
xchg
sbb
add
sub
inc
jle
pop
cmp
mov
fs
mov
jo
cltd
mov
divl
cs
ljmp
call
mov
dec
bound
jl
sbb
hlt
popf
push
push
movsb
mov
pinsrw
mov
push
mov
lods
push
sub
xchg
dec
into
and
stos
mov
push
add
mov
pop
mov
mov
mov
mov
adc
fldenv
lock
push
arpl
int
sbb
cmp
shlb
push
lock
test
mov
mov
push
cwtl
jmp
push
daa
or
cli
addr16
iret
dec
sub
aam
jle
pusha
out
sbb
mov
xchg
inc
fucomp
iret
pop
xchg
pushf
and
jg
lcall
sub
inc
xorb
xchg
or
ds
mov
push
sbb
and
ss
stos
mov
pushf
pop
cmpsl
roll
dec
pop
fisttps
sbb
dec
jg
sbb
xchg
xchg
add
dec
and
mov
jecxz
gs
icebp
adc
dec
jnp
nop
mov
adc
xchg
pop
and
shrl
or
adc
stos
jmp
das
adc
sbb
cmp
mov
sub
das
jge
pushf
mov
xchg
inc
and
stos
stos
pop
roll
cmpb
ds
icebp
cltd
dec
fwait
std
sub
movsb
xchg
loop
or
mov
add
cmp
test
aad
dec
loop
xchg
aaa
or
push
add
lahf
inc
leave
fsts
aaa
mov
adc
xor
in
jb
bound
pop
enter
std
push
cs
cli
arpl
mov
xlat
inc
sarb
and
or
and
out
lods
and
fldt
pop
pop
lock
inc
outsb
mov
arpl
pop
int
cmp
shrb
nop
pop
mov
cmc
sub
xchg
sub
mov
inc
lods
cvtps2pi
psubd
es
jb
mov
add
hlt
pop
pop
and
rcrl
xorb
aaa
lret
in
jl
fwait
jbe
push
movsl
cmpsb
aaa
les
xor
mov
xor
int3
movsb
jg
mov
mov
and
inc
dec
xchg
sub
icebp
rcrb
adc
sub
aam
inc
sub
cli
into
push
dec
and
leave
mov
fbld
lock
imul
dec
or
aad
in
js
jmp
imul
loopne
scas
pop
sbb
gs
xchg
adc
test
leave
insb
jbe
ret
mov
loop
in
mov
xchg
outsb
sub
jns
adc
mov
lds
aas
out
xchg
adc
clc
push
in
movsl
sub
mov
adc
lret
sbb
push
sub
ficoml
lds
mov
and
ficoms
rcll
mov
dec
in
ja
out
aas
lret
js
or
mov
jmp
fwait
mov
push
and
mov
and
mov
jmp
cmpsb
mov
push
movb
xor
fsubl
into
nop
ss
cmp
es
cld
aam
pop
mov
call
add
stos
add
jne
pop
jo
add
imul
cmp
add
xchg
inc
jecxz
test
dec
call
push
outsl
imul
int3
shl
shll
push
push
aad
ja
push
jb
sub
cmpb
xchg
test
lods
add
mov
mov
rcl
mov
push
mov
fistl
or
pusha
lret
pop
fmull
mov
aad
scas
fmull
out
jo
cs
mov
unpckhps
shrb
xor
popa
sahf
fadd
jg
xchg
mov
lea
outsl
pop
mov
push
and
mov
add
and
cmp
ss
sub
flds
lahf
sahf
out
js
scas
shlb
inc
cmp
xchg
movsb
xchg
popf
cld
and
aad
xchg
mov
loop
cmp
js
faddp
mov
cmp
xchg
mov
out
loopne
jbe
out
mov
push
adc
int3
bound
cmp
or
imul
dec
push
sbb
cmp
movsl
imul
loope
pushf
inc
mov
push
or
dec
lds
pushf
cli
insb
xor
jmp
jo
jp
mov
bound
cltd
pop
mov
ss
pop
inc
cmc
ret
test
mov
sbb
inc
inc
xor
jb
repnz
inc
test
and
pop
cs
add
or
outsl
xor
stos
and
loopne
scas
jg
sub
cmp
sbb
jl
aas
xchg
imul
pop
rorb
rcl
push
aad
pop
sahf
ja
lret
pop
xchg
inc
sbb
inc
and
movsb
jo
dec
pop
xor
shll
adc
sbb
ljmp
cmp
dec
xchg
jmp
xor
jle
mov
lcall
and
mov
insl
push
cmc
xlat
jb
push
imul
out
inc
enterw
mov
cmp
push
cli
fwait
or
repz
hlt
and
cmp
xor
or
es
jle
dec
adc
jae
dec
sarb
loopne
xchg
cmp
dec
jns
mov
cmp
adc
fwait
fs
aad
in
pushf
mov
popa
roll
cli
dec
fstpt
imull
arpl
mov
xchg
test
out
dec
sbb
jmp
mov
test
in
mov
xchg
cmc
in
cmpb
adc
push
mov
arpl
jno
arpl
push
daa
fdivl
lcall
pop
dec
cmp
xchg
out
pop
cmove
ds
rcr
dec
push
inc
pusha
jbe
clc
sub
xchg
daa
add
pop
mov
ficompl
sub
cmp
lods
orb
data16
mov
or
pop
jns
push
lods
mov
shrb
shlb
push
mov
aas
dec
dec
cmp
outsl
sarb
xor
adc
clc
in
lahf
fucomip
dec
cld
ja
lcall
push
in
int3
ds
std
imul
xor
xchg
and
ljmp
xor
adc
cmp
pushf
inc
mov
sti
mov
mov
push
push
mov
lret
jmp
push
test
mov
xchg
xchg
xchg
iret
fstpt
shlb
pusha
insl
or
mov
imul
sarb
mov
push
mov
jbe
jmp
sub
mov
sbb
jp
js
aaa
push
dec
out
inc
cmp
insb
pusha
test
push
mov
mov
pop
add
test
or
cmp
add
push
test
mov
ficoml
push
inc
cmpsb
gs
dec
or
jb
inc
arpl
mov
pop
repnz
mov
and
sub
jecxz
dec
cmp
imul
add
mov
sarb
add
mov
sbbl
or
pop
sbb
jle
jo
popf
sar
lcall
mov
sub
lcall
test
data16
pop
adc
inc
rorl
sti
sub
mov
adcl
cltd
rcll
fst
fidivrs
mov
loop
je
lods
xchg
jp
std
ja
mov
mov
loop
lret
test
cmp
mov
xchg
pop
sub
in
dec
dec
insb
adc
add
mov
push
push
mov
pop
jo
shlb
pop
and
push
xchg
dec
fadd
or
or
lret
mov
insl
outsl
dec
pop
aaa
mov
scas
movsb
xor
data16
or
js
jae
jle
out
add
sbbl
xor
call
gs
arpl
gs
jge
test
psllq
mov
cwtl
pop
push
out
push
fstl
addl
dec
hlt
dec
dec
cld
dec
push
xchg
push
inc
sbb
jge
rcrb
lcall
ss
filds
icebp
inc
sbb
cmc
call
mov
in
test
jns
ret
ret
sbb
ffreep
push
lret
mov
push
dec
inc
xchg
xchg
jle
lret
data16
mov
pop
mov
test
dec
scas
sbb
filds
gs
repnz
outsl
mov
add
mov
imul
iret
imul
shl
adc
add
notb
xchg
mov
inc
sbb
push
push
sbb
ret
mov
sbb
mov
cwtl
inc
stos
pop
xchg
loope
xchg
push
mov
lods
pop
fdiv
cwtl
mov
call
pop
dec
out
aam
and
arpl
xor
imul
mov
cli
repz
outsb
pop
jb
cmp
int
jecxz
in
iret
xor
rcll
mov
dec
mov
mov
js
or
push
add
lods
cs
xchg
xor
icebp
dec
sub
fcompl
sarb
push
mov
lcall
sahf
push
push
or
mov
mov
test
pop
call
and
dec
jbe
lcall
cli
out
rolb
in
sub
mov
push
pop
push
fadds
adc
out
stos
out
mov
push
sbb
mov
nop
ret
jae
popa
dec
and
lahf
sub
lret
fisttps
cmp
mov
dec
cltd
jmp
sti
hlt
and
iret
je
je
call
loop
cmp
xlat
jb
pushf
jmp
test
mov
inc
pop
int3
cltd
sub
adc
mov
call
in
pop
adc
add
ja,pt
int
push
mov
dec
int
and
push
dec
std
js
test
push
push
inc
fcompl
push
pop
jmp
ja
push
cmp
xchg
test
test
pop
cmp
push
add
add
data16
and
mov
fsubrl
push
xchg
push
cmp
xchg
scas
adc
adc
imul
orl
xor
cmp
mov
lea
mov
popa
jns
mov
mov
inc
int
jns
jge
gs
cltd
mov
imul
dec
dec
xor
imul
cmp
dec
xchg
cmp
cwtl
lods
int3
add
push
mov
sbb
sub
sub
fnstsw
jns
test
cmp
xor
pop
gs
push
icebp
or
jg
int3
and
lea
sti
pop
xchg
adc
adc
pop
arpl
and
sahf
loop
jae
insl
lahf
mov
mov
cmp
ret
mov
mov
in
decb
sbb
adc
loope
outsb
ret
fnsave
and
dec
in
es
inc
or
sahf
pop
test
fsubrs
movb
or
mov
out
pop
xchg
test
xor
adc
pusha
xchg
and
or
mov
mov
mov
inc
out
xchg
push
jle
xor
aaa
jne
inc
aas
icebp
inc
out
cmc
ljmp
jecxz
push
sub
or
mov
mov
push
jne
std
and
xor
mov
lea
repz
cmc
loopne
and
push
lods
sub
mov
pop
inc
lret
jle
addr16
test
pop
add
mov
add
xlat
lds
xchg
inc
je
or
sbb
cmc
shrb
pop
adc
add
inc
daa
jp
jg
int3
jns
mov
out
in
lods
pop
sbb
push
adc
fwait
dec
add
bound
or
dec
aaa
or
out
mov
imul
mov
scas
aad
mov
sub
fisubl
cmp
sub
test
cs
das
shrb
mov
cld
aas
arpl
mov
dec
into
or
subl
mov
fs
in
pop
roll
inc
clc
movsl
pop
les
lea
out
jmp
imul
and
mov
push
add
out
daa
pop
fnsave
dec
xor
insl
js
pop
andb
cmp
leave
inc
fistpll
in
aaa
pop
sub
ret
sub
in
movsl
out
mov
loopne
xchg
push
ds
outsb
push
movsl
cli
es
push
mov
test
jle
repz
sbb
or
and
add
sbbb
cmc
adc
xchg
aas
dec
loope
mov
mov
pop
jae
mov
or
mov
imul
loope
sub
movsl
and
cmp
cmp
xchg
lret
movsb
mov
dec
in
jne
mov
gs
lcall
push
jb
ss
jle
inc
adcb
mov
add
add
inc
in
mov
out
in
out
xlat
cltd
mov
insl
xchg
jb
iret
xchg
and
inc
aam
push
inc
ja
inc
push
xchg
and
jp
xchg
cli
and
pop
cmp
aaa
and
outsl
jno
cmc
push
or
sub
imul
inc
push
aad
loopne
test
lcall
sub
xchg
xor
loop
mov
jo
xchg
lock
and
data16
lods
xor
cld
xchg
lcall
test
lahf
push
lods
in
push
fldcw
and
push
pop
out
cmp
jge
mov
lea
popf
adc
jne
xchg
adc
popa
or
add
les
sub
fs
inc
and
sbb
movsb
dec
xchg
sub
jmp
and
jb
jle
call
and
push
or
pop
dec
daa
inc
stos
mov
mov
dec
jo
pop
pop
ljmp
push
xor
dec
ja
enter
mov
xlat
cli
add
xlat
jmp
jle
sub
into
loop
inc
jmp
mov
push
aad
adc
sarl
dec
push
es
arpl
aaa
inc
push
adc
push
add
xor
inc
test
xchg
mov
adcb
dec
sbb
push
dec
insl
xchg
dec
gs
test
xchg
lods
fucomip
xchg
sbb
lcall
mov
mov
in
pop
sub
test
arpl
push
maskmovq
testl
popa
insb
ror
mov
push
outsb
mov
orb
mov
add
into
aam
mov
roll
xchg
xchg
mov
mov
loop
enter
clc
jnp
aam
or
xchg
cmp
pushf
enter
fimull
mov
cmc
or
or
outsl
lcall
or
lods
lar
iret
adc
sub
jns
jle
jp
or
fldcw
fdivs
fildl
push
cmpsl
push
lgs
push
shlb
xchg
add
sub
nop
or
andb
insl
nop
mov
shll
add
mov
xchg
inc
lods
mov
scas
jnp
mov
xchg
or
and
dec
aam
push
cwtl
nop
push
and
lret
jl
pop
stc
lock
int
or
fcoml
mov
mov
mov
out
jmp
cli
mov
sbb
fisttps
push
into
mov
test
int
xor
out
adc
bound
fwait
in
cld
jbe
pop
imul
sub
loop
jo
jecxz
sub
into
cmp
dec
mov
je
jg
pop
mov
inc
sahf
mov
repz
inc
shr
scas
lock
mov
or
imul
ds
jmp
and
mov
mov
stos
xor
daa
xlat
cmpsl
or
and
xchg
sbb
fsubs
aas
mov
lock
popa
arpl
cs
add
je
fsubrl
xor
add
rolb
frstor
add
pop
or
mov
add
lcall
sub
mov
rclb
bound
out
add
mov
pop
lods
jge
jnp
sub
jmp
les
je
pop
scas
negl
out
jns
movsl
pop
outsl
xorl
xor
aaa
pop
cmp
mov
mov
test
pop
xor
daa
mov
ja
fnstenv
sbb
jno
lock
shlb
sub
ret
sbb
cmp
bound
fdivl
push
outsl
and
daa
push
fstpl
out
insl
sbbb
jae
jb
and
and
sbb
stos
inc
lret
cmp
loop
pop
push
mov
stos
es
mov
pop
adc
pop
mov
lock
call
add
or
lods
inc
fwait
pop
lock
mov
scas
test
cs
lock
xchg
xchg
int
jmp
pop
scas
xchg
arpl
jae
inc
daa
test
mov
ret
push
dec
mov
jmp
xchg
fists
lock
add
subb
les
test
cmp
andb
jmp
lea
mov
pushf
xor
out
scas
popf
jo
push
test
inc
hlt
jmp
test
xchg
push
push
cmp
xchg
mov
insl
jmp
sub
or
xor
xchg
cmp
scas
ret
sub
sub
orb
loop
add
movsl
or
stos
out
fwait
xor
pop
bound
sub
or
dec
jge
mov
rol
ret
push
cmpsb
sbb
xchg
aas
jp
bound
pusha
sub
xlat
jno
loopne
push
inc
in
inc
rcr
dec
mov
adc
lret
adc
or
addb
mov
daa
pushf
cltd
stos
fs
pop
inc
pop
cmp
sbb
push
push
inc
mov
add
imul
cmpsb
mov
outsb
inc
inc
fildll
jg
es
pop
shrl
js
lret
adc
iret
stos
mov
cld
sub
ljmp
iret
cmp
inc
or
scas
lea
clc
cmc
sbb
scas
aam
int
and
inc
stc
cmove
mov
imul
enter
scas
stos
sub
iret
aad
cltd
mov
sbb
push
push
aam
lods
dec
jmp
out
ss
jge
clc
sub
nop
xor
dec
add
sub
adc
push
loope
jmp
fistps
fimuls
push
push
adc
nop
lea
fs
rep
pop
movb
xchg
push
mov
outsl
pop
popa
mov
or
mov
sub
in
mov
dec
pop
jae
loopne
fsqrt
xor
or
pusha
push
push
add
daa
pop
cli
push
mov
and
popa
inc
sbb
or
or
shrb
nop
inc
or
xchg
pop
loop
inc
xchg
aad
xlat
lret
std
inc
ljmp
inc
jno
aad
add
and
stc
ds
jbe
stos
xor
sbb
sbb
and
mov
or
addb
out
jo
xor
jg
sub
mov
je
and
es
jne
sub
or
xchg
adc
scas
ret
add
push
mov
stos
cld
xchg
mov
mov
test
mov
jg
jl
and
aas
test
mov
adc
cwtl
leave
ret
fstpl
pop
jp
stos
clc
add
mov
stos
sbb
push
sbbl
andl
in
andl
push
test
addr16
or
jnp
sbb
outsl
adc
popa
jl
pop
xchg
lahf
jg
inc
loopne
jmp
push
ret
add
xchg
pop
sarb
enter
jnp
inc
stos
sub
std
jnp
xor
iret
cmp
dec
loopne
mov
mov
cld
scas
mov
subb
insl
loopne
pop
fsubr
lock
xor
mov
adc
and
jle
enter
divb
jb
jno
push
insb
dec
aaa
xor
ret
cmp
inc
out
ja
mov
enter
sbb
call
in
xor
lods
je
loope
fistpll
push
test
mov
mov
mov
fcoms
xchg
mov
dec
xchg
testb
or
pop
jbe
nop
js
pop
pop
cmc
and
loopne
sahf
dec
xchg
xlat
repz
and
faddp
mov
leave
bound
cmpsl
dec
jae
sbb
mov
fsts
add
les
test
fstps
inc
nop
sbb
mov
dec
rclb
pop
test
sub
push
scas
adc
ds
rcll
loopne
or
out
xchg
cmp
clc
or
add
sbbl
inc
sub
fs
repnz
addb
cmp
xchg
xchg
test
xchg
aas
mov
push
or
test
adc
out
add
pop
jmp
stc
fcmovbe
cmp
and
ss
or
sarl
fcoml
mov
je
test
pop
outsl
outsb
in
loopne
hlt
inc
sub
sub
pop
push
sbb
adc
sub
and
repz
sbb
sub
jg
dec
mov
xor
cmp
xlat
out
leave
jmp
cmp
into
mov
seto
push
jl
and
adc
js
push
mov
mov
sub
xor
loopne
rcrb
imul
loopne
mov
jmp
mov
xchg
aad
pop
divl
sbb
and
cs
cli
xor
cmp
pop
mov
fildl
lock
or
outsb
push
push
cmp
inc
mov
and
lahf
sbb
add
cld
mov
push
cli
push
loope
sub
aad
xor
in
jmp
scas
movsb
ljmp
sbb
das
dec
loop
ljmp
outsb
in
add
push
cmpb
lret
dec
inc
dec
lcall
mov
jmp
dec
jle
fld
mov
xor
adc
dec
fidivrl
mov
ret
jp
test
lahf
rolb
or
mov
lods
out
jg
jecxz
sbb
jbe
inc
fldt
outsb
mov
push
or
lods
xchg
stos
shlb
add
cmc
pop
mov
sub
sub
push
out
in
cmp
xchg
or
es
or
inc
mov
fsub
clc
xchg
loopne
and
insb
dec
adcb
jl
mov
mov
or
jmp
xchg
push
sub
xchg
subb
inc
mov
xchg
cmp
sbbl
push
std
notb
lods
inc
cmp
jmp
and
add
push
sar
aam
pop
cld
scas
mov
mov
push
test
mov
shl
mov
mov
sbb
dec
or
mov
xchg
cmp
mov
xchg
mov
jae
jns
jmp
imulb
hlt
fs
mov
pop
jp
or
fs
lods
test
stos
fidivrl
jne
jnp
aas
push
xor
push
and
mov
fsubl
dec
and
fimuls
fnsave
in
sub
dec
cmp
flds
cmp
pushf
in
inc
and
inc
lods
fstps
loope
cmp
and
scas
out
in
mov
imul
std
jg
mov
add
add
call
mov
xchg
add
push
sub
push
jmp
imul
rolb
push
inc
inc
fnstenv
ja
cmc
aaa
shll
das
jecxz
shl
pusha
push
push
xor
cld
push
jle
add
test
std
push
inc
sahf
std
sarb
jp
out
lods
scas
in
fsubl
xor
sub
lods
testl
rol
dec
pop
or
leave
xor
notl
push
or
shll
or
xchg
jae
ds
data16
inc
shll
mov
fdivrs
pushf
repnz
inc
jmp
push
sbb
push
mov
pop
lods
loope
sbb
add
add
fimull
pop
addl
scas
flds
cli
sub
sub
jg
add
ds
pop
adcl
lcall
inc
jo
push
dec
flds
xchg
into
sub
sbb
mov
decb
push
add
dec
cmp
arpl
ja
push
int3
daa
mov
xor
and
divl
mov
jg
xchg
cs
out
jl
sbb
outsb
lock
sti
cmp
outsl
rcrb
into
cmp
cli
xchg
pusha
loope
push
add
inc
nop
aaa
das
push
jp
clc
int
lods
movsl
dec
dec
sahf
inc
pop
sbb
cmc
xchg
das
dec
push
mov
call
lret
mov
cmp
popf
cmpl
jne
pop
jbe
std
cmp
pop
scas
push
movl
xchg
in
ret
loopne
test
xorb
add
nop
out
pop
out
inc
mov
call
adc
add
sbb
pop
mull
push
jb
sti
mov
mov
xchg
dec
fiaddl
daa
pop
mov
pop
divb
fdivrl
lret
int3
push
mov
lcall
sbb
outsl
bnd
adc
ret
out
push
out
fs
mov
mov
cmp
stos
ficompl
mov
call
inc
lds
cltd
or
or
insb
ret
adc
dec
mov
mov
ret
pop
xchg
in
outsl
out
imul
rcl
ficoms
adc
fs
fwait
cmp
jge
jl
rorl
push
es
inc
mov
jecxz
adc
fistps
and
mov
pop
add
or
jp
mov
or
in
cltd
loopne
mov
out
xchg
push
sbb
stos
insb
mov
rorl
cmp
shl
mov
push
push
dec
iret
in
jecxz
jg
inc
lods
sub
icebp
xorl
pusha
sub
and
inc
adc
mov
into
and
frstor
loopne
sarl
lcall
and
insb
shrb
insl
jge
arpl
adcb
imul
out
jo
mov
mov
pop
add
jle
imul
adc
mov
mov
dec
mov
push
incb
sub
outsb
stos
addr16
fldcw
out
pop
out
mov
push
out
mov
push
pop
aas
shll
mov
movsb
jmp
mov
mov
sbb
idiv
mov
jnp
or
test
ja
jle
fadd
fs
push
iret
or
subl
jge
push
sub
adc
sub
lods
xchg
cmpsl
sbb
xor
popa
jmp
jmp
lds
mov
and
mov
xor
push
mov
mov
cld
jg
cli
fadds
in
adc
mov
push
fldl
fmull
push
aaa
jmp
int3
sbb
dec
repz
test
dec
fwait
addr16
pop
mov
pop
inc
repz
add
or
cmp
mov
push
mov
in
mov
cmp
mov
xlat
lahf
adc
pop
or
imul
jp
imull
cmp
jl
test
inc
int
ret
je
lret
dec
push
push
xor
mov
push
les
mov
fisubl
jne
or
pop
sbb
push
xchg
jbe
not
cmpl
push
push
out
minps
icebp
mov
lret
test
and
dec
xor
lret
les
or
sarb
pop
jecxz
mov
clc
dec
jmp
fstpl
mov
sbb
xchg
lahf
and
inc
cmpsb
jecxz
cmpsl
lea
or
xor
adc
push
repnz
es
mov
or
test
test
scas
mov
pop
add
sti
xor
fdivrs
mov
lock
outsb
inc
nop
popa
mov
push
jbe
setp
iret
adc
rcll
cmpsl
fwait
cwtl
fcomp
xor
orl
ror
and
std
xchg
cs
jl
addr16
xchg
xchg
rorl
cwtl
dec
inc
lea
test
negl
or
mov
xchg
rcll
jecxz
xlat
mov
mov
scas
inc
inc
insl
xchg
jo
stos
rclb
mov
sahf
push
int3
xor
or
mov
subb
das
daa
dec
pop
popf
dec
fdiv
les
lret
mov
or
dec
dec
scas
sbb
test
imulb
pop
aam
inc
insb
ret
out
mov
jno
mov
cmp
divb
cmc
inc
repz
xchg
xlat
sahf
xchg
sub
shl
es
xor
insb
push
loopne
imul
cwtl
lret
or
and
sub
xchg
push
mov
sub
jmp
pop
mov
aam
push
shll
shll
lods
push
loope
loop
cmp
outsb
inc
icebp
adcb
sbb
sub
stos
add
hlt
mov
bound
adc
mov
mov
sbb
int3
mov
aad
movsl
cltd
lret
xlat
pop
inc
jno
jle
inc
inc
in
testb
out
fwait
out
out
pop
lahf
adc
int
pop
xor
sbb
lret
cmc
js
cmp
xchg
jge
or
lock
xor
dec
push
mov
negl
add
lods
jnp
mov
loope
popf
xchg
aas
xchg
xchg
jo
scas
outsl
add
pop
dec
negb
xor
add
jb
pop
sti
push
comiss
xchg
movsl
inc
lahf
jae
inc
pop
push
pop
cmp
test
aam
stc
jne
mov
leave
arpl
push
add
jmp
jo
xchg
add
jb
imul
inc
push
mov
sbb
cld
scas
fdivrp
push
inc
test
mov
pop
pushf
adc
push
fcom
int3
sub
das
dec
mov
pop
addr16
out
cmp
sbb
pavgw
push
mov
jmp
mov
mov
inc
imul
mov
lods
pop
movsl
xchg
iret
or
adc
ljmp
push
adc
lret
je
roll
jo
sub
lret
nop
push
ds
je
daa
or
xchg
mov
dec
push
adc
xor
xchg
and
outsb
pushw
ds
in
jmp
jbe
add
push
in
push
lock
ror
cs
pusha
or
sub
loop
cld
mov
popa
das
test
push
xchg
enter
cmpsl
test
mov
daa
mov
add
fiadds
sti
mov
sub
insl
jae
movsb
lcall
mov
add
sub
loopew
fldt
xchg
xchg
loop
push
mov
sub
loopne
loopne
std
cwtl
mov
fcmovnb
mov
daa
lahf
mov
cmp
dec
jnp
scas
aam
in
std
inc
js
adc
push
xor
pop
adc
add
mov
enter
mov
loopne
sub
push
es
xchg
mov
cli
add
xor
add
push
lods
or
fcomps
mov
nop
outsb
hlt
mov
mov
push
sub
cmp
cmp
mov
mov
mov
lahf
push
cwtl
xor
mov
imul
pop
mov
sub
inc
dec
push
clc
pop
aam
rcrb
mov
or
pushf
xor
dec
outsl
mov
add
clc
pop
xchg
mov
test
enter
negl
mov
jecxz
sahf
mov
out
hlt
stos
jmp
add
insb
je
jle
pop
or
outsb
cli
jo
mov
ss
loope
dec
cmpsl
inc
push
xchg
jno
add
and
int3
pop
jg
aam
aam
out
sub
jmp
push
dec
mov
fcmovnu
test
in
add
jnp
fsubrl
lahf
or
push
adc
call
outsl
mov
and
mov
push
pop
fsubr
cmp
push
leave
push
jp
push
fwait
xchg
out
cmp
daa
test
pop
notl
leave
or
ds
and
ds
jo
xchg
and
sbb
arpl
icebp
popf
daa
and
mov
popl
inc
js
out
loope
and
mov
cmp
fs
repnz
xchg
pop
adc
lcall
pop
test
lock
mov
inc
inc
cs
add
rdtsc
push
loope
xor
mov
sahf
cltd
inc
repz
les
in
adc
mov
sbbb
pop
push
jle
jl
jb
push
ffreep
outsb
mov
iret
adc
mov
push
jmp
mov
dec
bound
imul
and
adc
popa
push
dec
out
mov
add
cmpsb
movsl
roll
loopne
push
aas
pop
mov
mov
mov
das
fcmovnb
sub
loopne
inc
stc
push
jecxz
scas
std
in
mov
and
xchg
nopl
repnz
leave
mov
stos
mov
mov
into
test
pusha
setle
cmpsb
jmp
ss
dec
xchg
mov
sub
js
stc
stos
call
lret
cwtl
out
jp
xchg
jle
sub
lcall
iret
test
push
ljmp
cmp
adc
xor
loop
and
pop
xor
pusha
cmpsl
adc
sbb
outsl
push
test
adc
xchg
sub
mov
out
in
pop
rol
push
mov
jmp
sub
xchg
cmp
sub
leave
push
jp
dec
into
inc
call
mov
sbb
inc
mov
xor
in
add
mov
into
stos
in
aad
pop
arpl
xchg
test
es
jge
xchg
inc
xchg
das
enter
aaa
lods
cli
pop
das
mov
xchg
div
adc
lods
cmp
and
xchg
adc
insb
es
pop
add
sahf
and
xchg
adc
sub
push
sub
and
ftst
ja
fistl
stc
ret
mov
icebp
fldl
dec
adcl
mov
cmp
repz
out
inc
mov
subl
add
mov
xchg
inc
xchg
shr
cmp
add
cmp
push
jnp
and
inc
sub
push
xor
push
mov
je
cmc
xchg
add
in
fsts
xor
call
addr16
mov
mov
aad
shrb
bound
hlt
pop
cmpsl
insb
ret
pop
shrb
mov
enter
cmc
dec
adc
xchg
cmp
testb
sub
mov
pop
mov
mov
cwtl
and
inc
xlat
xchg
sbb
xchg
or
lods
leave
cli
scas
inc
cmpsb
aaa
outsl
sbb
aaa
mov
pop
pop
decb
aaa
loopne
push
sub
iret
mov
mov
push
xor
pushf
xor
ds
subb
out
xor
cmc
ficomps
fstl
and
dec
sarl
aad
rcr
rolb
mov
push
ror
loopne
mov
outsl
sub
movsl
jo
lret
mov
inc
popa
data16
xor
stc
add
out
xor
call
cmp
inc
rolb
inc
sarb
scas
mov
test
jne
inc
push
mov
or
xchg
popl
decl
std
outsl
xor
or
mov
repnz
bound
sub
push
xor
and
pusha
rolb
into
int3
pop
stos
loop
jo
mov
mov
sub
test
mov
push
cmp
jecxz
aad
xchg
pop
jnp
and
arpl
push
imul
lret
mov
cmp
loopne
xor
ja
jp
xchg
xor
push
sahf
xchg
lock
lcall
push
cmp
fidivl
push
stos
fsubr
daa
das
gs
add
jecxz
int
clc
in
mov
mov
and
imull
sti
gs
mov
mov
add
decl
dec
les
leave
pop
mov
xchg
ja
ds
aam
decl
enter
fmuls
mov
push
jl
or
out
dec
hlt
adc
and
push
jp
dec
mov
pop
add
les
jb
pop
xorl
jmp
bound
cmp
lods
shld
pop
mov
add
add
into
shrl
rcrl
ret
mov
jmp
test
aad
jp
cltd
pop
add
mov
ja
xchg
and
stos
push
mov
repz
rcrl
pop
stc
fwait
scas
cmpsl
or
or
adc
push
cmp
sub
dec
cmp
neg
and
std
cs
dec
adc
jnp
and
lds
mov
mov
imul
pushf
jp
xchg
int3
xchg
ss
pop
lret
inc
addb
in
in
ret
aad
mov
pop
lds
push
pop
sub
push
mov
cmp
mov
xchg
push
cmpsl
icebp
fcomps
add
out
std
push
cmc
pop
mov
js
insl
push
ret
xchg
lock
int
mov
sti
gs
xor
cmp
movsb
mov
aas
jl
cmc
ja
repz
xor
pop
lret
jmp
ret
push
or
push
pusha
movsb
mov
mov
and
and
sub
sub
mov
add
clc
xchg
xchg
pop
imul
xchg
jl
mov
jns
mov
xchg
pop
mov
scas
gs
lret
jne
mov
dec
push
sub
sbb
or
sub
mov
add
dec
lahf
iret
sub
rclb
dec
xchg
xchg
stos
pop
daa
push
fucomi
cltd
inc
out
sbb
xorb
cmpb
enter
mov
leave
xchg
sbb
cmp
sub
mov
scas
shl
fistpll
xchg
jns
iret
sub
lock
sbb
dec
out
xchg
jno
xchg
push
mov
ja
pushf
xor
cs
fwait
repnz
cmp
in
aas
pop
jns
xchg
jg
les
pop
orb
popa
mov
call
push
popa
cmp
adc
rorb
add
sub
ljmp
dec
xchg
xchg
test
fcoml
incl
cwtl
xchg
xor
iret
insb
xchg
lods
push
xchg
dec
mov
das
mov
adc
add
in
arpl
push
cwtl
aas
mov
mov
dec
in
pop
cltd
lock
and
sub
inc
ss
mov
mov
fistps
negl
pop
aam
inc
pushf
roll
rcrb
mov
enter
jmp
lahf
lret
cmp
pop
jbe
loope
or
mov
lret
pop
aaa
inc
inc
xlat
push
dec
gs
scas
push
repnz
shll
aad
fwait
pop
or
ffree
adcl
push
popf
fcmovnbe
jecxz
shrb
stc
sub
xor
mov
mov
push
jb
inc
xor
outsl
inc
xor
arpl
and
fcomps
fldt
mov
jae
xchg
lock
cmp
stc
sbb
std
stc
mov
sub
fneni(8087
mov
push
jecxz
pop
lods
mov
mov
pop
idivb
mov
jne
mov
sbb
cld
jg
ss
mov
and
mov
inc
pop
or
push
hlt
and
addr16
fs
ss
cs
adc
hlt
pop
pop
cmp
fcoml
out
ror
fsubs
mov
or
repz
pop
imul
je
sbb
jg
xchg
aam
jb
ljmp
push
mov
xchg
inc
pop
jo
lods
into
mov
cmp
jp
sub
pushf
and
sbb
arpl
push
xlat
inc
out
and
mull
test
cmp
pushf
xchg
jnp
call
cmp
out
out
lods
arpl
lcall
test
mov
lidtl
hlt
stc
inc
sub
loop
mov
fs
addl
outsb
lret
mov
adc
scas
mov
lahf
rolb
std
sbb
into
fsubs
lods
out
not
lock
es
push
or
rcrl
mov
sbb
stos
lock
popf
adc
mov
lods
fistl
jb
lahf
aaa
lcall
dec
dec
jb
sahf
mov
pop
mov
fmull
push
out
mov
push
adc
jnp
pop
icebp
fptan
adc
push
xchg
scas
in
push
mov
mov
aaa
pop
adc
cld
xchg
mov
js
mov
inc
jbe
cmp
adc
jnp
arpl
imul
movsb
mov
stos
push
cli
std
mov
clc
adc
lods
scas
scas
dec
test
aad
cmp
mov
iret
cwtl
inc
aam
insb
jmp
iret
imul
roll
aam
mov
xchg
jmp
push
and
test
fcompl
test
fadds
dec
dec
pop
or
xor
cld
fsubr
xchg
and
sub
sar
cmc
mov
and
cmp
jb
xor
dec
push
sbb
sbb
and
inc
and
shlb
mov
lods
int
dec
outsb
loopne
mov
aaa
outsl
or
mov
mov
jbe
push
cmp
adcb
loopne
fidivs
std
xlat
inc
in
ja
out
ret
bound
adc
fwait
pop
inc
insl
mov
enter
jg
lahf
arpl
sti
in
dec
lret
add
and
dec
test
lahf
test
scas
jecxz
cmpsb
sbb
cld
cmc
loop
cli
int3
sub
sub
add
mov
loope
xchg
push
sub
xor
pop
adc
sbb
scas
sub
pop
mov
cmpsb
imul
ljmp
movl
testb
out
dec
mov
arpl
scas
xchg
fmuls
jle
sbb
sbb
divb
insb
add
iret
mov
repz
inc
out
adc
mov
movsl
pop
cld
out
mov
ss
pusha
mov
movsl
sub
xor
ret
add
sub
or
scas
push
sahf
xor
adc
pop
imul
cmp
jb
xchg
and
cwtl
cmp
ret
frstor
mov
decb
or
sbb
jg
in
aad
loopne
mov
imul
adc
inc
sub
test
xchg
inc
sub
aad
nop
pop
adc
dec
pop
lahf
push
js
jg
lds
jb
xchg
cmpsb
sub
jne
mov
fcmovne
and
xchg
push
fsubl
mov
mov
or
push
inc
cmp
xor
fldt
jne
in
mov
loop
stc
dec
imul
xlat
test
mov
add
xor
in
xchg
mov
jb
std
ror
pop
fisttpl
sahf
add
out
mov
xor
imul
ja
test
shrb
dec
inc
scas
pop
fildll
cli
inc
in
xlat
int
mov
mov
push
aaa
push
lock
jge
push
sti
scas
pop
pop
nop
in
call
xor
mov
adcb
cmp
push
test
jb
and
sbb
mov
enter
cmp
das
mov
lea
nop
pop
decb
or
mov
ds
adcl
cmp
call
inc
test
ret
xchg
aaa
pop
push
add
mov
jbe
adc
inc
and
enter
fincstp
iret
pop
push
sub
inc
push
dec
xor
inc
jne
push
in
xor
popf
adc
dec
aam
sbb
push
jnp
dec
push
xchg
addr16
sti
outsb
jle
mov
sub
push
add
jb
add
iret
push
aaa
xlat
out
sbb
dec
lcall
push
mov
mov
xchg
xor
ret
cli
pop
pusha
add
daa
out
mov
jmp
pop
mov
and
pop
and
jo
gs
bound
mov
pop
sub
ja
jmp
daa
mov
xor
iret
inc
xchg
repnz
out
adc
out
cmc
inc
jle
mov
fcompl
testl
inc
jl
mov
jp
leave
sbb
iret
dec
shrb
jmp
and
loopne
in
clc
lcall
push
pop
push
push
shll
push
adc
push
stos
cli
mov
int3
xor
enter
push
xchg
mov
loopne
mov
mov
adc
jne
fstpl
insl
mull
int
jno
aam
xor
pop
call
test
inc
lcall
imul
je
insl
cmpsl
or
lret
add
aas
mov
mov
mov
cmp
adc
mov
xchg
push
lret
iret
mov
xchg
dec
push
lret
loop
loopne
lret
std
dec
mov
adc
notl
jg
icebp
outsl
mulb
jg
popf
xchg
fstps
xchg
fadds
xor
dec
or
insl
fdivrl
xchg
xchg
lcall
mov
mov
loopne
fmuls
inc
data16
mov
nop
roll
rclb
divb
lock
jp
or
and
stos
dec
sbb
sbb
lods
inc
aas
mov
pop
push
das
inc
sub
push
mov
inc
fcomps
push
in
stos
mov
popf
mov
dec
insb
adc
jecxz
popa
pop
das
xchg
push
mov
inc
mov
xor
mov
cmpsb
sub
mov
mov
or
daa
dec
movsl
and
xchg
push
out
daa
cld
mov
adc
es
cmc
hlt
sbb
ljmp
cwtl
fnstsw
sbb
sbb
inc
mov
popf
in
mov
call
std
icebp
cwtl
movsl
pop
pop
lcall
shr
cld
call
aad
pop
or
mov
and
rclb
test
and
ja
stc
push
nop
mov
adc
push
xchg
inc
scas
mov
adc
int3
mov
movsb
popa
inc
aad
sbbb
gs
mov
scas
pop
dec
or
outsl
jg
fsubp
nop
add
bnd
and
pop
icebp
mov
sub
xchg
xor
mov
xchg
insl
lret
lock
adc
mov
sub
xchg
sub
or
loope
mov
inc
or
mov
jmp
xchg
xchg
mov
inc
pop
sbb
cli
in
bsr
xchg
sub
popf
scas
xchg
sbb
and
aam
repnz
ds
cmpsl
dec
or
sub
daa
adc
cmp
dec
xchg
adc
test
imul
mov
jl
xlat
jne
fildl
sbb
mov
sub
mov
out
rol
cli
sub
jo
pop
sbb
mov
loopne
loopne
mov
out
sub
imul
imul
fwait
repz
outsl
xorl
fdivs
sti
pop
popf
in
repz
xchg
into
ljmp
add
pop
dec
repnz
into
test
in
cmp
aas
sub
das
es
jae
push
xor
fsubl
inc
push
xchg
push
push
lods
push
xchg
inc
cmp
mov
js
jns
dec
or
sarb
clc
push
sar
and
xchg
loope
outsb
xor
push
mul
jae
push
jnp
dec
pop
add
cltd
xchg
out
pop
and
pop
add
mov
inc
cmp
fidivl
je
and
sbb
js
movsb
fistpll
and
mov
hlt
dec
push
dec
sbb
testl
jno
aaa
cmp
data16
test
inc
les
inc
pop
lods
ds
sbb
insl
insb
mov
sbb
out
in
in
scas
inc
pusha
in
into
xor
imul
xlat
lods
popa
mov
adc
aas
les
rcl
mov
js
popf
repz
scas
inc
xor
fcompl
cmpsl
adc
mov
into
repnz
das
add
jae
dec
mov
xchg
xor
test
popf
mov
mov
xor
push
stos
enter
mov
lcall
mov
or
dec
mov
inc
xchg
imul
pop
cmpsl
xor
sub
sub
jbe
adc
mov
pop
sti
cwtl
mov
mov
mov
lods
jp
xchg
insb
repnz
and
testl
aam
into
sub
pop
jl
mov
jae
lock
icebp
leave
ds
loopne
push
push
cltd
jne
and
sarb
lods
push
pushf
outsl
push
in
or
out
mov
int
mov
mov
cwtl
add
pop
jne
xor
scas
incb
inc
inc
pop
hlt
jnp,pn
xor
pop
popa
push
outsl
adc
repz
or
pop
imul
out
or
sahf
test
mov
js
in
je
sbb
test
pop
pop
add
push
pop
adc
int3
cmpsl
xchg
dec
push
pushf
xchg
mov
jl
es
shll
packssdw
jb
adc
adc
dec
push
pop
mul
xchg
jno
dec
and
push
nop
into
repnz
pop
dec
loope
outsl
sahf
xchg
xor
inc
ljmp
add
loop
scas
push
test
mov
dec
mov
adc
jo
sub
mov
pop
cld
mov
mov
jnp
clc
mov
dec
loop
inc
scas
or
mov
xor
adc
mov
lret
push
insl
add
call
lret
xchg
jg
mov
fdivs
in
adc
test
sub
shll
mov
push
mov
sbb
loope
mov
sbb
pop
add
cmp
rcrb
arpl
mov
fs
or
add
xor
cmc
das
pop
mov
adc
outsl
push
call
jg
mov
and
and
stos
fists
scas
mov
dec
mov
push
mov
stos
add
mov
outsl
mov
pushf
adc
movsl
add
or
inc
enter
mov
hlt
adc
sti
sub
and
xor
xor
loopne
pop
lods
push
push
mov
inc
adc
dec
mov
bound
mov
xlat
lret
inc
add
jmp
stc
lret
jne
push
pop
popw
sbbb
sub
nop
stos
stos
adc
mov
or
in
push
int3
dec
xor
pop
and
cmp
aaa
xchg
repnz
jecxz
inc
adc
inc
xchg
push
mov
xchg
loop
dec
inc
imulb
lods
repz
xchg
jl
call
mov
fcompl
sbb
jmp
inc
nop
mov
and
loope
aam
pop
in
imulb
push
xchg
cli
mov
push
and
mov
das
outsl
faddl
adc
cmpsb
rcrl
lods
ss
adc
shlb
adc
sar
icebp
push
adc
mov
cmp
clc
xchg
loop
cmpsl
pushf
push
lret
repnz
push
in
cltd
dec
xor
daa
mov
mov
or
or
adc
scas
or
dec
dec
loopne
mov
testb
in
call
push
lcall
mov
dec
mov
cwtl
adc
mov
mov
xor
in
pushf
jge
loopne
jecxz
dec
xorb
lock
push
loopne
int
add
frstor
pop
mov
push
loopne
inc
and
adc
push
stos
pop
jp
dec
ds
in
cmp
mov
lds
push
js
insl
dec
cli
arpl
xchg
mov
dec
or
jecxz
cmpsb
mov
jg
shlb
daa
dec
dec
pushf
or
add
pop
lods
pop
jo
sti
push
cld
pop
stos
mov
jnp
into
dec
sbb
jae
mov
mov
aaa
mov
push
outsl
inc
filds
in
push
sbbl
mov
xlat
cmp
rcl
mov
add
test
popf
popa
mov
popf
in
sub
push
jno
mov
out
inc
pop
shlb
ja
adc
pop
std
pop
shll
adc
enter
mov
es
imul
jno
nop
cmp
dec
mov
cld
mov
fadds
sbb
cmp
mov
or
insb
or
cmp
jbe
push
mov
xchg
std
jmp
pop
shrl
xchg
xor
add
mov
lahf
adc
arpl
mov
je
adc
cmc
test
pusha
fisttpll
add
mov
mov
pop
pop
addl
lcall
rcrl
add
dec
sub
sub
sub
sub
insb
push
add
enter
arpl
sarl
inc
jns
cwtl
gs
cmp
jae
out
lds
sbb
dec
or
loope
lea
cltd
fbstp
cmpl
lods
sub
das
mov
cmp
mov
les
es
and
adc
jp
push
cmpsl
scas
js
lret
out
mov
ffree
jge
mov
rcrb
push
ds
and
lods
add
scas
xor
jp
inc
loop
cmp
sub
inc
pop
add
shlb
stos
dec
pop
jns
mov
cmpsl
and
mov
jl
cld
mov
insl
add
sarl
mov
jg
and
push
fwait
jne
in
inc
fnstsw
dec
mov
dec
xor
cmp
cmp
add
dec
popf
aam
dec
addl
xchg
xor
scas
and
test
mov
mov
push
or
jo
cmp
into
adc
mov
and
fwait
icebp
pop
popf
rcrl
lods
pop
sub
pop
clc
ret
clc
mov
insb
fnstsw
mov
test
lcall
mov
push
lret
clc
insw
xor
jl
or
push
push
cltd
and
xchg
into
or
in
imul
adc
repz
stc
dec
cmp
and
xorl
pop
gs
insb
popf
mov
sbb
in
cmc
lods
aaa
rcrb
add
jae
clc
stos
into
jnp
or
cltd
mov
ficomps
js
jne
push
out
mov
mull
sub
fwait
add
xchg
arpl
lahf
cmpsb
lcall
or
cmp
imul
out
repz
inc
or
lods
sbb
jo
jmp
pop
jp
and
push
mov
rcr
shr
lock
sub
dec
xchg
jmp
imul
mov
push
adc
mov
inc
aad
push
xchg
and
call
int
imul
lret
jns
pop
lret
cmp
lret
mov
and
sbb
or
outsb
sbb
adc
test
aaa
imul
inc
pusha
js
jae
and
mov
lret
loope
mov
mov
mov
lock
xlat
push
lock
dec
add
mov
inc
xchg
inc
sbb
push
push
popf
lcall
jnp
jno
push
dec
cmp
es
mov
mov
or
xchg
sub
cmpsb
sub
adc
mov
mov
mov
je
and
pop
cmp
mov
inc
push
xor
dec
movsl
xchg
pop
cmc
lcall
sbb
ret
mov
push
jnp
lock
sar
push
sbb
dec
ljmp
jle
sub
add
ss
insl
or
mov
jmp
xchg
mov
cmp
clc
sbb
mov
ss
leave
push
mov
fstps
jo
adc
leave
or
fwait
xor
loopne
dec
cmp
xor
xchg
mov
hlt
pop
jge
jle
int3
aaa
and
ljmp
inc
enter
and
das
cmp
or
lret
push
mov
mov
scas
ret
dec
rcrl
add
outsl
nop
xchg
je
cs
out
dec
adc
and
in
xor
imul
test
lret
in
movsb
push
mov
pop
inc
in
dec
push
and
dec
mov
iret
loop
sti
int3
fs
push
xor
shl
xchg
mov
dec
lock
mov
or
jno
test
xchg
push
inc
cmp
adc
push
inc
orl
fs
stos
ficompl
fdivl
imul
scas
cmp
cld
lea
arpl
mov
daa
push
sahf
shrl
fimuls
sub
mov
pop
addps
cmpb
dec
xor
stos
notl
push
in
out
inc
lcall
cwtl
pop
mov
lock
sbb
mov
fsub
ja
xor
popf
pusha
sbb
or
adc
xchg
fldenv
add
dec
sti
arpl
pop
mov
mov
sub
sbb
fs
scas
stos
xchg
sub
into
push
xor
sub
aas
mov
fsubrs
xor
das
add
push
or
addr16
scas
fildll
lock
and
cld
fldt
jns
nop
imul
and
jge
das
fs
inc
sbb
jo
lds
mov
rcll
or
outsl
pop
and
nop
add
dec
push
lds
aam
fsubr
fstpt
mov
outsb
aad
cmpl
loopne
lea
shrl
decl
out
pop
adcl
inc
xor
cmpsb
cmp
cmp
xchg
mov
sub
inc
sub
loopne
xor
mov
xor
ss
jp
leave
lahf
fwait
out
daa
dec
mov
fnstsw
pop
enter
push
add
add
rcll
popf
fdivrl
adc
jl
les
pop
xchg
push
stc
mov
sub
gs
lret
jmp
fsubl
mov
test
mov
mov
push
aaa
mov
ljmp
jmp
sub
mov
test
sub
mov
jl
and
rcrl
xchg
xor
push
inc
mov
int3
mov
dec
rcl
mov
mulb
sahf
mov
push
inc
repnz
jmp
push
sbb
jb
int
scas
xor
dec
cs
cvttps2pi
sbb
xor
xor
ret
cwtl
lret
and
pop
mov
repnz
inc
or
sub
jmp
pop
test
jb
xor
insl
into
jge
dec
or
mov
movsb
clc
popf
mov
dec
xchg
xor
or
add
jae
loope
push
ds
or
in
mov
fisubl
cld
scas
ret
push
push
xchg
adc
out
sar
mov
adc
sbb
xor
xchg
fs
scas
jp
jp
cs
push
push
test
pop
mov
cs
jg
inc
and
xchg
push
pushf
repz
xor
es
adc
inc
and
sbb
and
scas
lret
mov
fisubrl
or
add
mov
jbe
int
inc
sub
jecxz
dec
xchg
adc
sbb
xor
aad
dec
je
data16
dec
dec
mov
inc
repz
outsl
lahf
cmc
dec
filds
les
mov
add
scas
out
mov
in
roll
mov
and
add
xchg
std
xchg
adc
inc
add
mov
inc
push
jo
popa
jnp
fcom
pop
dec
add
pop
les
addr16
insl
mov
ja
jns
fisubl
and
out
dec
adc
sbb
fcompl
outsl
push
call
mov
test
inc
je
mov
add
mov
loopne
sti
fs
cs
pop
push
in
xlat
mov
pop
aas
js
mov
mov
test
jbe
sbb
xor
dec
mov
pop
mov
inc
and
inc
xchg
es
aaa
daa
cmpsl
or
cmp
xchg
pop
arpl
cmp
dec
mov
adc
fs
push
nop
mov
ret
xchg
push
dec
push
pop
movsl
mov
cld
mov
rcrl
push
mov
jecxz
cli
cltd
stos
sub
adc
push
pop
and
push
jae
cmp
push
int
and
mov
fildl
mov
mov
mov
negl
scas
nop
sti
repz
add
fistpl
mov
cs
imul
hlt
loopne
add
pushf
jnp
int3
stos
mov
shr
ljmp
out
dec
mov
fidivrs
mov
adc
loop
inc
and
ficoml
in
add
sbb
int
les
push
and
popa
pop
in
push
sti
arpl
xor
adc
lret
insb
outsl
lret
mov
and
lret
add
dec
popa
jp
rol
add
or
aad
lds
push
push
or
leave
jp
lahf
outsl
add
testb
loope
clc
adc
clc
repz
mov
movsl
push
je
out
fstpt
inc
out
icebp
imull
idiv
std
out
xor
sar
sbb
add
imul
mov
and
add
sub
out
sbb
pop
daa
dec
xchg
mov
subb
imul
sub
or
xchg
inc
pop
outsb
and
inc
xor
sub
pop
jecxz
adc
enter
scas
repz
hlt
or
xchg
jp
mov
fistpl
jo
into
adc
jae
int
sti
jae
mov
dec
pop
sub
outsb
sbbl
cs
mov
insb
lret
mov
aas
je
int
sti
push
in
ret
sub
or
sub
cld
adc
push
sub
xlat
and
mov
xor
xchg
cmpl
dec
rcl
dec
lods
cmp
push
pop
or
dec
out
or
repz
mov
xchg
and
xor
aas
ret
cmp
xchg
jae
in
inc
lock
and
mov
fs
test
loope
jo
sub
jne
pop
mov
cmp
mov
cmp
push
fs
pushf
flds
xor
jnp
nop
nop
pop
rcrl
cmp
push
mov
jmp
fidivs
insl
mov
repnz
mov
cmp
sub
cli
cld
jp
jp
hlt
mov
inc
mov
and
lods
sbb
jno
in
scas
stos
pop
addb
and
daa
shrl
shll
dec
jbe
stos
imul
mov
adc
popf
test
mov
pop
test
cmp
out
ret
jb
push
scas
jmp
inc
mov
int3
pop
arpl
int
push
loop
pop
das
scas
lds
outsb
mov
std
mov
push
fdivl
iret
xchg
inc
idivb
push
xor
cmc
outsb
test
out
rorl
and
push
scas
out
aas
jg
test
xchg
push
push
xor
xor
xor
add
cld
jbe
xor
lock
xor
push
test
cmpsb
sahf
movb
js
or
enter
cmp
pop
and
adc
xchg
hlt
jge
adc
xor
sar
mov
call
cmp
lret
test
add
fimuls
shrb
insl
dec
sarb
xchg
fldenv
jne
pop
nop
xor
mov
mov
mov
mov
icebp
shr
pop
or
lret
cmpsl
mov
jle
mov
adc
push
lea
enter
jae
in
movsl
push
dec
inc
adc
sbb
ljmp
test
jle
in
repz
outsl
or
ss
and
in
mov
mov
sub
outsl
add
out
inc
test
int
call
sbb
mov
ficoms
testb
jnp
or
or
xorb
xchg
adc
or
bound
or
jns
adc
or
xor
enter
in
aas
sahf
and
fs
roll
out
loopne
cltd
loop
cs
xchg
jns
jbe
push
leave
xchg
addb
sbb
decb
xlat
cmp
sbb
sub
push
pop
aam
cmpsl
mov
leave
negb
xchg
xchg
cmp
sbb
fldz
inc
mov
test
imul
mov
andl
mov
and
jmp
cs
test
dec
xchg
test
testb
dec
cltd
sar
sbb
push
in
movsb
dec
insl
mov
mov
mov
stc
push
ds
lret
cmp
test
pushf
and
dec
popa
xchg
xor
imul
pop
xor
sti
jle
pusha
lods
sbb
mov
pop
inc
inc
mov
subl
call
push
insb
push
dec
inc
push
notl
fwait
push
jae
cltd
orl
cld
add
add
pop
adc
pop
push
adc
sti
out
adc
inc
enter
push
mov
push
lods
loope
mov
inc
jno
jge
loope
push
aad
loopne
lea
pop
addb
loop
test
pop
jmp
int
adc
arpl
sub
adc
adc
ficomps
lods
jno
lcall
pushf
lds
xor
test
fchs
iret
cmpb
push
mov
jg
out
movups
iret
pop
scas
popf
into
jmp
inc
ljmp
and
xor
movsb
int3
into
add
inc
scas
or
mov
ljmp
outsl
xor
jle
xor
inc
pop
add
bound
test
mov
cmp
inc
pushf
mull
xor
cmp
jecxz
dec
popa
mov
push
cwtl
push
adc
xor
aaa
cmp
mov
hlt
sub
jbe
or
ljmp
jns
out
mov
mov
add
stos
outsl
clc
cwtl
add
std
movsb
sub
lea
pushl
out
in
insb
inc
imul
pop
or
mov
movb
repnz
sub
or
push
jno
xchg
loop
mov
inc
popa
sbb
xor
adc
mov
outsl
mov
push
sbb
bound
test
cmpsl
cmp
pop
push
test
cmpsl
mov
lea
mov
sub
icebp
pop
xor
and
adc
sub
adc
lcall
test
xchg
push
add
jge
je
xor
scas
sub
ds
sub
mov
xchg
add
mov
cmc
test
or
xchg
lods
pop
out
das
cmpsb
mov
pop
xchg
mov
pop
ret
fwait
lea
cli
std
xor
shlb
out
mov
outsl
lahf
cmp
test
dec
adcb
roll
int
xchg
mov
js
mov
mov
jl
jno
pushf
xchg
je
dec
jmp
shrb
ds
add
and
js
push
or
add
sub
outsb
test
leave
scas
mov
lahf
mov
pushf
mov
mov
imul
rclb
sbbb
lea
movsb
xor
xor
out
fstpt
jp
mov
test
fisttpl
sub
test
gs
and
in
movsl
pop
cmp
jae
cwtl
inc
dec
xchg
testb
aas
sbb
lcall
adc
xor
add
lods
pop
sub
je
and
arpl
stos
in
iret
loop
xchg
inc
test
roll
sarb
sbb
outsb
mov
cwtl
dec
mov
mov
mov
aad
mov
add
cmp
xchg
inc
leave
or
xchg
sbb
inc
push
aas
fwait
insb
adc
sbb
push
adc
scas
lock
pop
xchg
cli
inc
ja
jecxz
push
icebp
push
clc
fs
ss
aam
sbb
rol
mov
mov
lods
cmp
stc
mov
dec
jmp
sbb
mov
into
add
and
fcmovne
xchg
xchg
rcrl
pop
dec
pop
xchg
cmp
in
sub
ret
sub
cmp
sub
push
daa
in
in
dec
xor
jecxz
add
mov
mov
sub
cld
popf
cmp
add
adc
add
push
hlt
pop
jno
jmp
xchg
rcrb
sarb
divl
ljmp
aam
cmp
push
jne
push
and
test
mov
dec
jns
adc
in
add
aad
sub
jae
popa
loopne
dec
mov
loope,pn
hlt
int3
xchg
pop
cmp
imul
lret
les
in
push
pop
outsl
push
jecxz
and
nop
push
jb
ror
fadds
mov
mov
pop
cmpsb
and
imul
jb
bound
jecxz
outsb
jp
hlt
test
xor
movsl
imul
les
push
addb
hlt
jp
call
push
mov
pop
popa
xor
mov
jge
out
scas
mov
test
insl
cs
fs
xchg
sub
add
push
jle
popf
loope
mov
or
ret
xorb
loopne
out
add
cwtl
dec
movsl
or
adc
dec
and
or
push
sub
add
adc
loopne
cmc
shlb
xchg
nop
pusha
inc
mov
xchg
sub
xchg
sub
subl
inc
inc
cmc
rcrl
xchg
ret
mov
imul
lret
sahf
and
lea
pusha
pop
xchg
mov
push
into
lret
sarb
jns
mov
dec
jle
repz
fists
rcl
mov
jge
or
filds
es
stos
sub
iret
mov
mov
jp
sbb
xchg
and
jnp
stc
idivb
arpl
push
jecxz
test
adc
adc
and
adcb
adc
ds
mov
mov
jne
inc
scas
ja
out
pop
pop
xchg
mov
daa
mov
dec
sbb
sbbl
sbb
xchg
pop
in
jl
cmpl
into
mov
scas
sbb
mov
int3
sub
or
xchg
cli
les
or
xchg
cld
cmp
ja
jge
push
ret
in
mov
pop
mov
dec
insb
inc
push
push
clc
int
das
mov
popa
fbstp
movsl
and
sti
ja
and
dec
push
mov
popf
pusha
outsl
push
add
cld
sbb
adc
in
imul
out
add
sub
jg
jp
gs
std
xlat
inc
cmp
pop
ss
incl
imul
cmp
push
pushf
add
dec
add
dec
sahf
sub
imul
jns
or
xchg
es
das
jo
mov
pop
mov
ret
xor
mov
xor
xchg
imul
in
out
cwtl
int
inc
imul
fcompl
outsb
jle
mov
pop
mov
jle
lret
shlb
addr16
daa
shll
or
hlt
mov
nop
mov
cs
sbb
shll
fmuls
andb
xlat
imul
cwtl
jmp
adc
mov
fisubl
xchg
sbb
fsubrs
lock
xor
push
outsb
xchg
test
jecxz
push
out
ljmp
andl
ljmp
push
pop
fcompp
bound
repz
clc
pop
mov
or
lahf
andl
and
push
mov
sub
sbb
clc
cmpsl
cmpsl
ret
pop
push
in
mov
subl
dec
scas
inc
dec
sbb
fadd
lods
incb
aam
loope,pt
std
dec
push
xchg
aam
xchg
rcr
adc
xchg
cs
mov
ficoms
into
adc
inc
in
mov
and
add
push
leave
jg
jecxz
jmp
jmp
pop
shlb
pop
xor
pop
repz
aad
ljmp
xchg
call
xor
lods
or
cmp
sub
bound
sub
and
imul
addr16
inc
imul
push
mov
or
insb
jo
xchg
insb
lret
push
orl
cmp
movsb
adc
pop
lods
cmp
adc
fildl
test
mov
lret
es
movl
jne
or
inc
aad
dec
loope
pop
imul
mov
popa
lret
aas
mov
notb
enter
inc
aas
lods
int
push
fcmovnu
pop
test
add
stos
inc
push
cmpb
or
cmp
mov
cmp
sub
mov
bound
inc
inc
jmp
cmpsl
ds
add
jge
add
push
lret
fisubl
pop
adcb
lds
stos
int3
pop
jge
insl
jl
and
popf
cmp
jecxz
mov
gs
add
sub
push
lahf
add
scas
jnp
push
mov
pop
sarl
inc
cmp
mov
or
xor
test
sub
mov
mov
aaa
daa
adc
pop
inc
jno
jle
jmp
mov
sub
adc
bound
add
xchg
xor
scas
sbb
cwtl
fisubrl
mov
or
rorl
push
xchg
pop
popa
inc
xor
jg
call
ret
adc
bound
rcll
mov
ja
and
push
cmpsb
in
jmp
imull
dec
call
ja
cltd
and
popa
roll
or
aaa
in
sub
mov
adc
mov
fisubrl
inc
pop
out
or
sbb
push
dec
adc
jae
std
orb
pop
shrl
pop
jae
sub
mov
xchg
mov
sub
xchg
mov
dec
in
push
jbe
stos
or
and
fistl
aad
mov
fwait
mov
fistpll
pop
cwtl
lods
dec
outsl
int3
add
sbb
fistpl
fnstsw
dec
mov
je
lods
icebp
or
adc
mov
pushf
js
lds
jbe
in
les
mov
out
ret
nop
jnp
stos
xchg
imul
mov
push
out
addr16
dec
je
jmp
jmp
out
int
shlb
lock
adc
jnp
fistps
and
cmp
push
in
fnstsw
sar
pop
adc
pushf
popa
loopne
xchg
sub
xchg
xchg
fdivrl
mov
jge
mov
add
mov
dec
ds
icebp
push
mov
add
mov
lods
push
out
pop
in
jecxz
outsl
jle
or
lock
xlat
sub
call
and
xor
cltd
in
sub
mov
push
fisubs
xor
repz
fildll
movsb
sub
xchg
sbb
add
imul
outsb
lods
icebp
shlb
adc
xchg
fldt
loopne
xchg
xchg
add
sub
xor
xchg
lea
push
mov
or
ret
cmp
pop
pop
dec
add
loopne
stos
xlat
bound
xchg
adc
mov
inc
mov
and
add
loope
stc
jno
mull
ds
inc
int3
fsts
mov
lock
lds
pop
xor
xor
cmpsl
fsubrs
je
push
jecxz
test
inc
push
jl
xor
cmp
jl
xchg
xor
call
into
mov
mov
inc
jno
sbb
test
dec
cmc
push
sbb
push
test
test
aaa
aad
cltd
dec
hlt
repz
nop
ffreep
ret
sbb
push
iret
mov
ljmp
push
shrl
mov
sub
jmp
cmp
fimuls
je
cmp
pop
jno
test
cmp
jle
jb
sub
inc
xorl
stos
cwtl
sub
test
xor
lea
xorb
ljmp
sbb
mov
rcr
mov
and
add
div
cli
ret
mov
addb
test
mov
and
or
lcall
movsb
sbb
clc
adc
or
dec
arpl
leave
fisubs
add
mov
out
xor
and
mov
push
xor
jnp
in
cmc
pop
adc
lcall
cmp
les
cmc
aad
xchg
adc
mov
cwtl
inc
enter
lea
push
hlt
xchg
aam
cwtl
ja
addr16
lahf
push
mov
fwait
mov
mov
mov
dec
int3
push
divb
inc
pop
push
push
cmp
mov
pop
movsl
mov
jge
mov
fildll
pushf
sub
cmpsl
pop
das
pusha
mov
mov
pushf
add
mov
jmp
sbb
sub
scas
lods
jnp
sahf
lahf
lcall
and
add
or
sti
pop
mov
mull
int3
xchg
mov
mov
and
push
adc
lcall
cmpsl
in
divl
push
in
pop
lods
xor
mov
gs
add
adc
add
int
push
inc
cld
fdivrs
cmp
sub
popf
rep
sub
push
inc
and
dec
cmp
shlb
out
hlt
test
push
jae
rcr
adc
int3
or
fwait
ret
fiaddl
xchg
dec
idivl
imul
xor
mov
sbb
jmp
stos
pop
cmp
mov
and
jecxz
adc
leave
cld
es
mov
fs
pushf
jns
adc
mov
sub
in
testb
or
ljmp
sbb
xor
scas
mov
push
mov
aaa
hlt
cmp
sti
push
shll
push
xor
out
int3
xor
jns
jne,pt
mov
cli
push
pop
sarb
jae
jge
lea
inc
aad
testl
fdivl
cmp
dec
out
dec
and
shrl
ljmp
ficoml
sbb
stos
ret
arpl
add
sbb
sub
jo
xlat
and
lahf
push
jg
cmp
lret
and
pop
rorl
pop
bound
clc
xor
add
mov
cwtl
in
dec
call
arpl
push
out
xlat
mov
cmp
lret
push
les
popf
mov
nop
in
ljmp
js
xor
imul
movl
xchg
pop
outsb
decl
dec
push
dec
xor
pop
mov
inc
rcr
sti
shll
fsubl
cwtl
sub
push
stos
stos
roll
std
pop
and
mov
inc
jnp
les
out
inc
mov
mov
pop
insl
fsubrp
mov
mov
aad
data16
outsb
lret
stc
out
and
iret
shrl
push
cmp
sbb
out
cmpl
jne
aam
xor
xor
cmp
outsb
xor
cmp
inc
add
pop
jnp
ss
fldln2
sbb
xchg
sbb
push
adc
int3
clc
movsb
inc
dec
fldcw
cmpsl
push
jmp
mov
inc
mov
pusha
imul
sbbb
pop
add
mov
mov
gs
adc
mov
cld
loopne
enter
data16
mov
sar
xchg
adc
jl
push
movsb
pop
sbb
cs
arpl
hlt
inc
jae
xor
fwait
adcb
roll
lds
sbb
loope
out
bound
clc
and
int3
dec
lods
mov
ud1
push
dec
sti
mov
pop
adc
mov
adc
shll
lcall
pop
cmpsb
mov
lock
sub
add
shlb
fists
hlt
mov
in
popa
mov
or
sbb
movsb
mov
scas
loope
outsl
fmull
add
leave
xchg
das
jno
xchg
sbb
pop
jne
sub
cwtl
mov
iret
sbb
sub
pop
dec
fwait
dec
mov
shlb
test
push
or
dec
test
fbstp
inc
mov
adc
mov
jo
test
lret
fsubrl
addr16
and
cmp
scas
cmp
inc
cmp
cmp
arpl
cltd
je
mov
sahf
inc
adc
xor
fstps
nop
test
mov
xchg
push
jg
jno
sub
jl
dec
int
sub
jle
fwait
mov
cltd
pop
mov
pushl
movsl
lods
mov
andb
fwait
jo
shrb
xchg
jmp
rcll
xor
adc
add
push
or
dec
les
mov
je
xchg
fidivs
cmpsl
sub
js
push
stc
gs
pop
ds
mov
into
sub
or
cmpsb
arpl
les
xor
adcb
testb
repz
pop
push
cld
push
mov
inc
gs
mov
mov
ljmp
ror
in
jns
mov
out
jge
dec
addr16
loope
lock
dec
bound
inc
push
adc
pop
sbb
add
jbe
rcrb
cmpsb
fdivs
imul
cld
int3
fs
ret
adc
sub
sub
sti
gs
hlt
mov
outsb
sub
test
mov
push
inc
or
neg
loopne
lcall
inc
dec
xor
dec
cmc
add
jns
pop
enter
imul
xchg
lods
lahf
into
pop
cmp
pop
enter
cmp
push
out
jecxz
loopne
xchg
enter
lret
movsl
mov
popa
or
dec
mov
ja
pop
sti
lahf
jmp
adc
sub
inc
or
mov
mov
inc
jnp
fsubrp
decb
out
mov
ficoms
inc
mov
mov
das
jbe
fdivrl
lds
lea
pop
jns
test
cmc
xchg
jne
mov
fldenv
dec
mov
sub
ret
push
test
test
xor
dec
sub
xchg
jae
sbb
lods
fcmove
mov
in
fwait
dec
dec
sbb
mov
les
sbb
aam
xor
lret
xchg
pop
or
insb
cmp
jge
push
ja
xchg
fisttps
loopne
aas
inc
in
mov
push
xchg
and
dec
jbe
cs
fdivrl
int3
adc
aad
out
add
arpl
sahf
jae
cmpsl
lods
jp
or
pop
cmc
adc
dec
rol
imul
pop
add
mov
std
or
ja
adc
ret
jns
jmp
jmp
adc
push
test
sarl
imul
lcall
mov
pop
push
mov
ja
leave
mov
popf
les
and
pushf
addb
lods
mov
push
cmp
xchg
cmp
dec
cmc
aam
jle
or
enter
push
xor
xor
jecxz
ret
imul
insl
jecxz
xor
stc
fucomip
xchg
mov
loopne
pop
cmp
mov
fimull
sbb
jnp
fisubs
sbb
js
push
mov
adcb
inc
pop
add
js
pop
add
cmpsl
sbb
cwtl
movsb
sbb
xor
loop
imul
mov
lods
add
mov
sbb
loopne
lret
leave
and
xchg
sbb
pop
int
dec
adc
orl
pop
mov
sarb
inc
or
ja
cmp
sbb
xchg
mov
adc
mov
pop
jecxz
loope
mov
xchg
test
fs
shll
jns
or
sub
enter
adc
jnp
adc
sti
shrl
std
mov
cmp
sahf
push
cltd
sub
js
dec
or
subb
dec
stc
data16
mov
cmpsl
sub
mov
cmp
stos
ljmp
mov
adc
xchg
xchg
or
jno
xor
pushf
mov
rcr
imul
dec
lret
adc
int
popa
repnz
out
xchg
cmc
stc
jmp
mov
je
fsubrl
and
cmp
loopne
cmp
movsb
shrb
and
iret
and
or
js
in
scas
repz
mov
cmp
popa
adc
jmp
jb
sbb
fwait
jae
mov
jo
pop
sub
dec
shll
adc
dec
cltd
xchg
aam
or
jg
xchg
leave
fists
test
mov
sbb
shl
sub
rcrb
adc
cmp
add
jl
and
movsl
lea
bound
pop
movsl
ja
or
lods
xchg
dec
dec
pushf
lock
jae
cmpsb
push
mov
add
in
jmp
inc
xchg
les
dec
pop
mov
or
cmp
dec
cmp
sbb
cs
fisttps
jecxz
inc
outsl
call
push
lcall
movsb
dec
shl
cmpsl
inc
pop
test
ja
aaa
pop
jmp
push
pop
pop
mov
sub
popf
mov
popa
fisttpll
cmc
add
jae
das
jno
mov
loop
sbbl
jne
cld
push
repnz
inc
xor
add
cli
dec
ret
scas
pop
push
pop
mov
xor
adc
fs
inc
test
loope
loop
aas
jp
sub
xor
orl
mov
stc
mov
mov
mov
cmpsl
lahf
fidivrs
out
imul
mov
fwait
xchg
je
mov
mov
inc
inc
or
add
add
cwtl
and
out
fs
mov
mov
clc
mov
pop
mov
cmp
jae
popa
lret
lea
push
dec
lret
aaa
dec
and
jge
pop
stos
pusha
sub
pop
xchg
xlat
cmp
mov
jg
push
movl
dec
sub
insb
push
imul
xor
nop
rorb
int
sbbb
lock
mov
std
loope
out
push
ja
in
lcall
outsb
pop
outsl
mov
jo
mov
or
xchg
adc
jo
adc
in
lahf
lods
adc
inc
fisubrl
pop
cmp
arpl
jb
outsl
xchg
pop
rcrl
mov
jnp
add
jb
lds
out
scas
and
cmp
int3
scas
shrb
inc
nop
mov
into
jns
push
push
bound
mov
jecxz
push
sti
sarl
out
into
xor
mov
rclb
push
jb
call
outsb
add
out
or
mov
aas
mov
ss
das
push
jecxz
fcoml
rorl
cmp
dec
or
jmp
loop
pop
cmp
adc
cmpsb
pushf
pop
pop
ror
jmp
or
jnp
fisubrs
xor
aaa
xchg
adc
cwtl
insb
pop
hlt
imul
jns
and
xor
mov
adc
std
and
sbb
jle
sbb
mov
sbb
cmp
inc
jmp
inc
adc
sbb
lcall
xor
lcall
xchg
outsb
into
cwtl
and
shr
push
adc
mov
lret
mov
fdivr
cmp
and
push
xor
mov
lret
lods
dec
or
adc
fwait
das
repnz
fsubrs
repz
lret
sbb
outsl
stos
sbb
clc
xchg
cmc
sbb
or
lahf
in
pop
mov
sti
adc
adc
xchg
jns
negb
inc
fisubrl
ss
mov
jl
xchg
ljmp
std
jge
shll
es
mov
and
pop
leave
in
jns
leave
fcomi
loop
mov
sub
push
mov
adcw
add
call
pop
mov
lret
aam
mov
fnsave
fcompl
out
jae
ds
dec
cmp
das
outsl
test
icebp
inc
mov
mov
push
cmp
push
pop
mulb
es
or
push
adc
mov
sub
insl
dec
bound
repz
dec
add
sub
jae
xor
fmuls
mov
and
popf
jo
jns
fsincos
cli
adc
aaa
xor
add
icebp
jge
fists
mov
cmp
sahf
push
mov
sbb
sarb
xor
pop
int3
cmc
popf
sbb
fchs
pop
or
jl
cli
or
ja
fidivl
cmp
iret
push
push
sub
fwait
xchg
mov
lret
imul
or
fwait
and
inc
stc
sahf
sti
shll
lds
pushf
xlat
ss
pop
sbb
sbb
loope
sub
mov
mov
out
stos
xchg
test
test
jg
mov
push
es
int
or
in
lahf
pop
call
sbbb
inc
fcomp
sbb
lahf
call
or
or
pop
xchg
outsl
sub
pop
adc
and
adc
mov
cmp
je
mov
xchg
cmp
push
mov
testb
mov
jp
fnstsw
inc
push
dec
pop
lds
aaa
mov
mov
repnz
mov
les
popa
mov
dec
xor
fdivl
jbe
shr
sbb
fists
mov
imul
lret
nop
dec
lods
shll
pop
movsl
jbe
push
aam
std
lret
fiaddl
mov
cwtl
mov
jo
adc
divb
pop
xor
jo
cmpb
adc
cmpsb
dec
or
test
sti
arpl
mov
rclb
mov
pmulhuw
lcall
orb
dec
sahf
out
jge
jb
inc
in
xor
sbb
lret
test
lret
sbb
xchg
hlt
or
lret
mov
mov
cmpsl
fdivr
jl
fbld
std
repz
push
das
push
cmp
pop
dec
add
loopne
inc
lock
jns
sub
add
jle
ljmp
mov
loope
dec
jne
xchg
jb
mov
inc
add
jge
dec
xchg
mov
cs
ss
mov
pop
std
inc
pop
mov
leave
xor
xlat
mov
sub
mov
sub
or
outsb
mov
movsb
lcall
sbb
les
test
mov
mov
or
pop
scas
dec
jo
mov
rcll
push
push
mov
call
mov
mov
enter
pop
fwait
in
dec
cmp
sub
and
dec
les
jmp
and
fnsave
mov
sbb
mov
test
xor
add
inc
and
idivl
ja
pushf
andb
pop
sbb
enter
mov
ret
in
dec
js
lret
pop
stc
sahf
sbb
inc
sub
mov
push
pop
cmpsb
test
popa
cwtl
pop
shlb
xchg
ljmp
pop
xchg
xor
stc
and
xor
rcll
fsubrl
negb
addl
call
insb
ja
inc
cwtl
inc
test
clc
loop
stos
negb
inc
test
pop
mov
out
and
int
movsb
repz
divb
repnz
aam
das
mov
mov
loopne
xchg
sbb
rol
cmpsl
nop
test
notb
fisttpll
dec
stos
and
mov
negl
rcrl
sbb
cmpsl
xchg
pop
lret
lea
sbb
repnz
iret
sbb
xor
xlat
xchg
xchg
mov
push
mov
mov
xchg
jbe
mov
mov
sti
pop
cltd
add
adc
cs
or
rorl
sub
rcl
and
jmp
jle
pop
fimuls
arpl
aad
shll
dec
mov
cmp
out
sbb
test
loop
ret
and
dec
sub
sahf
jg
int3
lahf
out
jle
push
bswap
mov
mov
popf
push
rcll
sbb
cmc
jns
pop
push
mov
push
f2xm1
fbstp
add
ljmp
inc
and
dec
mov
adcb
in
push
pop
inc
mov
sub
mov
mov
bound
ffreep
pop
je
xorl
movsb
sti
cmp
js
inc
xchg
mov
das
out
clc
cmp
das
repz
mov
or
jo
std
pop
adc
mull
mov
add
lret
lods
mov
in
enter
xchg
pop
leave
clc
into
push
hlt
or
sbb
in
imul
je
jp
repz
ja
xchg
xor
jnp
loop
jno
sbb
das
adcb
int
shrl
jnp
pop
push
and
xor
mov
popa
cmp
add
mov
stos
xor
sahf
arpl
xchg
pop
scas
std
cmp
das
add
notb
push
outsl
lea
pop
dec
push
jns
lret
test
aad
out
std
hlt
nop
int
ss
stos
jg
add
push
mov
push
xchg
cs
out
sbb
scas
movsl
push
pop
mov
sbb
popa
jnp
popa
push
fdivs
aas
sub
xchg
das
pop
sub
mov
dec
ds
addb
jmp
mov
dec
inc
std
dec
je
and
ret
inc
jnp
out
int
test
ror
cli
enter
and
dec
push
cli
outsb
cmp
les
mov
xor
lret
and
pop
gs
maskmovq
testl
imul
jl
push
fsubrp
mov
stos
mov
inc
adc
mov
and
ja
sbb
or
sbb
jmp
xchg
push
repz
cmpb
movsl
cltd
nop
ret
adc
stc
in
sbbb
das
xor
cwtl
enter
push
mov
cltd
sub
pop
out
daa
cs
and
jg
xchg
je
xor
ljmp
cmp
add
out
jge
jle
push
dec
pop
movsl
cmpsb
cltd
aad
mov
sarl
and
movsl
sub
cmp
shr
add
or
adc
or
in
jmp
sbb
dec
push
mov
inc
std
fbstp
jno
xchg
inc
stos
mov
sbb
sub
xor
xor
aas
sub
stos
hlt
xchg
push
mov
test
leave
loopne
mov
neg
mov
mov
cmpsb
cmp
inc
pushf
sbbl
adc
clc
dec
or
insl
mov
out
es
outsb
dec
pop
adc
jmp
pop
mov
mov
out
cmp
mov
inc
cwtl
insb
inc
cmp
je
and
iret
lods
sbb
cmp
cmp
mov
mov
push
stos
mov
inc
adc
out
and
into
mov
mov
pop
arpl
add
jnp
push
enter
out
pop
es
mov
inc
popf
add
scas
push
imul
cmp
pop
shrl
je
xchg
dec
fs
fcmovbe
pop
hlt
cmp
mov
pop
sub
data16
push
push
imul
ret
cmp
adc
addr16
in
ds
push
stc
scas
subb
fsubl
in
cmpsl
insl
lret
adc
addr16
or
push
jp
jl
ljmp
inc
lock
lcall
adc
int3
dec
inc
test
test
pop
inc
pusha
les
dec
xchg
in
in
add
xchg
add
cmp
push
addb
aam
int
cmc
ja
pop
movl
adc
and
subb
fcom
cmp
ja
lods
xor
lea
in
adc
addr16
jae
mov
mov
mov
mov
push
nop
sub
xor
lods
mov
enter
mov
push
je
cltd
jmp
adcb
xchg
xchg
jb
dec
cltd
or
jns
out
cmp
dec
jns
pop
loope
lods
mov
test
cmp
stos
mov
insl
inc
das
and
jge
mov
mov
xchg
outsl
mov
jno
test
cmpl
mov
out
and
cmp
iret
cmpsl
cltd
adc
stc
mov
xlat
pop
ror
pop
mov
add
loope
xor
pushf
repz
call
cmc
push
jne
push
loope
pop
cld
dec
cmp
or
inc
add
add
insb
jle
xchg
dec
mov
push
mov
mov
jb
cmpsl
dec
fdivrs
test
clc
xor
lret
cmp
dec
and
xorl
mov
mov
ds
sub
xrelease
pop
push
lret
pop
out
jbe
push
mov
pop
jg
xor
cs
syscall
and
mov
nop
cmpsb
sbb
jbe
mov
and
scas
and
mov
insl
and
add
sahf
daa
shrl
lods
or
jno
imul
flds
iret
leave
xchg
fs
xor
aaa
xor
push
push
push
lds
popa
out
enter
mov
lock
mov
sbbl
insb
mov
imul
inc
push
jb
and
ficompl
sbb
call
pop
inc
in
jp
into
xchg
jmp
sbb
cmp
xor
in
xchg
and
and
inc
push
mov
sub
je
or
jge
dec
mov
sbb
push
sub
sub
into
out
es
xchg
lea
fwait
lahf
mov
movsl
ffreep
push
sbb
dec
js
in
cltd
adc
testl
js
push
push
lahf
outsl
incb
dec
xchg
aas
push
sahf
add
and
in
add
push
adc
cmp
das
stos
lahf
xchg
stos
push
dec
pop
ss
in
xlat
lea
inc
cmp
pop
mov
or
scas
cmp
shrb
and
xor
and
mov
mov
ficompl
mov
mov
or
lahf
insl
fstl
aas
cwtl
mov
add
xor
jle
inc
fwait
sahf
mov
ret
push
xchg
stos
cmpsb
popf
push
push
xor
rcrl
divl
inc
sbb
sahf
cli
xor
xor
or
cmp
sbb
xchg
in
add
fs
cmpsl
sub
scas
inc
add
jne
xor
inc
stos
int3
daa
popa
loopne
push
mov
loope
ficomps
dec
xchg
lcall
pop
das
lea
jl
and
sbb
sahf
cltd
sub
test
cltd
mov
imul
jle
daa
push
jge
xor
mov
mov
idivb
mov
push
sti
pop
jb
fmuls
push
sti
mov
shll
shr
cmp
push
sete
rorl
cmp
fistpll
push
ret
mov
arpl
mov
lds
push
negl
repnz
inc
test
add
or
xchg
push
or
push
adc
gs
mov
or
jg
stos
mov
mov
sub
adc
fcoms
pop
sbb
mov
cmc
dec
mov
loop
dec
and
loopne
dec
dec
jne
jecxz
shrb
add
sub
ja
popf
daa
inc
ja
pushf
dec
lret
mov
outsb
vxorps
cmp
sbb
cld
adc
enter
push
add
or
cmp
add
mov
sbb
fs
mov
push
mov
push
or
shlb
pop
mov
outsl
inc
std
lods
jmp
sbb
imul
add
cmp
jns
adc
xchg
test
cmp
aaa
in
jbe
mov
lret
mov
fwait
inc
dec
cwtl
in
sub
packssdw
test
popf
sbb
add
mov
jp
mov
pop
rcr
cmp
sbb
xchg
xchg
or
and
push
dec
cmpsl
add
pop
jne
lds
add
stos
rorl
iret
pop
dec
cld
xchg
mov
sub
je
orb
xlat
fwait
popa
pop
nop
in
sbb
lea
and
cmp
jecxz
mov
pusha
pushf
pop
insl
mov
xchg
jmp
or
sub
adc
dec
add
pop
and
dec
xchg
jae
push
aad
push
push
pop
scas
out
ss
aad
aaa
mov
adc
arpl
rorb
test
xchg
jecxz
or
movsb
xorb
jle
sub
sbb
lock
outsl
in
mov
scas
cmp
jmp
inc
sti
mov
outsb
dec
ljmp
mov
adc
loopne
pushf
iret
rcll
cmp
ja
mov
push
jmp
mov
fadds
dec
sahf
sbb
sub
inc
sub
lock
fsubl
addb
dec
jo
xor
lret
clc
sbb
orb
out
jb
cmpsl
add
dec
pop
dec
pop
cli
and
and
xor
mov
popf
in
inc
mov
mov
jo
outsl
imul
imul
rol
or
push
imul
pop
jmp
int3
and
fdivs
dec
out
cmp
imul
cmpsl
dec
insb
out
test
ret
mov
inc
leave
inc
je
lods
or
mov
fisttpl
stos
arpl
mov
and
push
insb
arpl
pop
mov
mov
loope
adc
pop
mov
inc
push
add
jmp
mov
mov
cli
adc
subl
int
test
mov
cmp
inc
bound
pop
pushf
sub
mov
gs
fdivs
nop
push
or
in
lods
cltd
lock
jp
mov
out
pop
pop
dec
test
test
aam
jne
and
ja
into
mov
fildll
sbb
in
mov
ror
sbb
cmc
pop
xorl
mov
pop
ret
stos
pop
xor
nop
push
dec
sbb
ljmp
pop
sub
xchg
dec
xor
adc
fstpl
imul
shrl
je
out
xor
std
fcomps
inc
clc
xor
jg
add
cmpl
xor
nop
add
pop
fstpl
add
jne
cmp
cld
mov
hlt
in
andl
and
imul
sub
out
xchg
jbe
test
iret
pop
fldl
fwait
xor
ficompl
pop
cmpsl
adc
jns
or
mov
mov
add
and
cmc
or
jg
fnstsw
shll
cmp
xchg
dec
sbb
icebp
faddp
or
inc
arpl
loope
daa
insl
push
sbb
ljmp
in
sub
dec
sub
mov
mov
jl
out
dec
in
sub
cmp
adc
mov
mov
popa
outsb
mov
pop
mov
push
loop
mov
cs
testb
fst
imul
push
or
hlt
xor
jne
in
mov
leave
lea
in
fmuls
dec
or
sbb
pop
icebp
aad
popa
xor
cmp
inc
lods
cmp
xor
mov
jae
mov
mov
stc
int
cmc
ret
and
xchg
pop
add
icebp
mov
or
scas
cmp
loope
add
aad
stos
sbb
addr16
jae
shrb
jns
jnp
fisttpll
mov
inc
es
pop
mov
xor
cs
jno
jmp
mov
les
outsb
xchg
popa
mov
cli
xchg
push
sti
xchg
aad
roll
push
xor
mov
std
daa
imul
jg
jo
cmc
outsl
cmpsl
repnz
mov
mov
cmc
cltd
test
xchg
bound
movsl
mov
imul
repz
das
loope
inc
movsl
xor
jbe
cmpsl
mov
inc
mov
outsb
mov
sbb
fs
aaa
cmc
decl
mov
repz
imul
aaa
je
pop
and
add
jle
xchg
cld
sbb
sbb
xor
stos
shr
ficomps
mov
xor
push
mov
jne
lods
hlt
push
inc
adc
push
shll
mov
pop
loop
dec
aas
inc
lcall
lret
mov
das
push
sar
push
push
mov
sbb
and
lods
movsl
sub
push
loopne
inc
mov
mov
sarl
scas
push
pop
es
sbb
push
inc
xor
sbb
in
sub
pop
mov
mov
pushf
mov
jg
mov
insb
ss
or
sub
inc
add
bound
cmp
aam
push
pop
sbb
popa
dec
repnz
pop
pushf
int
stc
jno
fildll
mov
jns
cmc
icebp
mov
dec
test
lea
andl
jmp
cmp
push
jecxz
push
ss
lock
cld
shrb
adc
push
xchg
mov
mov
in
dec
imul
inc
dec
hlt
and
mov
add
or
std
lods
xor
mov
pushf
out
js
jmp
mov
mov
jnp
push
rcl
ret
outsl
mov
adc
notl
adc
push
aad
push
jnp
and
xchg
cmp
or
pop
stos
jns
test
cmpsl
and
test
cli
sbb
xor
pop
pop
pop
sub
cli
es
push
push
pushf
push
pop
icebp
insl
mov
mov
loop
push
rcrb
js
repz
push
pusha
inc
movsb
fadd
mul
jnp
test
inc
sub
sub
sub
sti
add
data16
subb
or
sbb
int3
in
mov
fldt
addr16
out
cmp
mov
mov
adc
loopne
mov
test
and
hlt
lds
inc
in
insl
insl
xchg
insl
mov
xor
mov
xchg
mov
cmpsb
push
lret
or
and
mov
out
mov
pushf
sbb
jmp
xchg
add
outsb
stc
xchg
xchg
inc
test
adc
movsb
pop
std
cmpsb
iret
cltd
mov
and
mulb
add
mov
adc
cltd
aas
in
sub
jns
rcll
testb
loop
dec
and
ljmp
or
in
lods
adc
or
lds
cmpsl
les
in
aas
pop
mov
mov
stos
pushf
mov
pop
mov
fldcw
push
lea
loop
popf
cmp
jle
add
adc
dec
inc
cs
adc
pop
or
clc
fbstp
stc
add
ds
insl
xchg
or
or
test
mov
or
int
into
and
inc
inc
xor
sbb
mov
fwait
decb
out
bound
insb
xor
push
mov
jbe
inc
adc
adc
jb
mov
cmp
fadd
pushf
cmpsl
jmp
das
inc
or
mov
insl
or
repz
pushf
fdivp
jne
jecxz
shl
repz
cmpb
das
push
jge
and
xor
xor
inc
hlt
mov
out
pop
mov
pop
or
mov
sbb
popa
push
je
or
xchg
and
push
or
sub
in
mov
fisubrl
mov
pop
loopne
dec
jmp
adc
lods
aad
ficomps
lahf
lahf
cli
stos
inc
push
pop
je
int
pop
push
leave
and
pop
sbb
lds
jg
loope
adc
nop
or
jl
test
push
xor
out
push
sub
sbb
ds
mov
push
std
mov
mov
pop
rorl
jmp
pop
fwait
ljmp
jno
dec
sub
cmp
add
pop
out
stc
lds
push
mov
mov
cmpsb
sbb
aas
jae
mov
add
or
sub
into
mov
sti
je
scas
jae
inc
add
dec
hlt
push
xor
cmp
mov
cmp
fsubs
push
scas
pop
scas
mov
out
ret
push
lea
in
dec
dec
pushf
lret
and
imul
xchg
jmp
inc
mul
out
lock
adc
jge
jg
in
insl
pop
xorl
push
cwtl
jle
pusha
dec
cltd
cmp
sbb
fildll
xor
imul
subb
loopne
adc
adc
sub
xchg
mov
popa
outsb
push
dec
mov
inc
sub
dec
adc
daa
ss
or
push
push
jge
hlt
mov
das
aaa
cmp
stos
ds
nop
ficompl
imul
jge
clc
and
dec
or
fidivrl
mov
adc
sub
fidivrl
imul
inc
push
arpl
pop
mov
arpl
cmp
fnstenv
cmc
ljmp
xchg
jns
and
popl
ds
int3
mov
mov
icebp
es
cli
push
add
lret
mov
cmp
inc
nop
add
pop
add
aaa
call
lret
mov
xor
pop
iret
mov
repnz
cld
mov
mov
pop
mov
testl
mov
fbld
cmp
addr16
rcrb
push
cmp
or
movsl
gs
cli
shrb
lahf
jb
add
xchg
xchg
cwtl
xcrypt-ecb
cmpsl
dec
int
xchg
sbb
sbb
lret
lds
xchg
cmp
rorl
add
cmc
in
cmp
adc
jl
mul
sbb
out
jne
mov
add
sub
sub
daa
xor
stos
imul
ss
xor
fwait
inc
leave
adc
arpl
fs
xor
fucom
out
sbb
ds
arpl
sub
dec
jmp
pop
out
dec
das
loopne
shr
fimull
mov
inc
add
pushf
dec
sub
outsl
lahf
push
mov
xor
mov
and
pop
jno
test
leave
shlb
push
sub
les
add
mov
test
adc
mov
xchg
inc
adc
fsubrp
jne
xchg
pop
movsl
pop
mov
jle
push
cmp
jge
or
and
mov
mov
mov
imul
aas
in
mov
xor
jne
and
pop
xor
loop
popf
les
mov
and
mov
and
lods
fbld
jbe
imul
sbb
out
loope
inc
pop
mov
or
cwtl
mov
sub
clc
mov
or
pop
les
js
rorb
test
cmpsl
mov
cmp
jp
mov
jae
ds
cwtl
jmp
add
mov
test
push
icebp
add
fs
dec
lods
faddl
or
sbb
push
push
orl
mov
push
xor
fbstp
mov
sub
lret
lock
rclb
cmp
loopne
aad
in
ss
jnp
lcall
scas
cmp
fwait
nop
loop
aad
jle
mov
loopne
sbb
in
test
icebp
in
sbb
dec
push
add
repz
out
push
push
cld
hlt
cmp
mov
push
nop
lcall
adc
adc
jns
push
daa
sti
inc
movsb
std
lret
fwait
orl
test
test
inc
or
mov
sbb
repz
mov
jbe
notb
push
cmpsb
loopne
xchg
add
or
sahf
insb
push
jae
lret
sbb
push
lds
fcompl
stc
inc
iret
loopne
mov
fnstcw
sub
pop
or
adc
aas
aas
inc
jmp
test
imul
fdivr
push
lock
lea
dec
sbb
jmp
add
popa
out
add
std
fisttps
mov
mov
call
cld
adc
sahf
icebp
and
lcall
mov
sbb
xchg
in
push
pop
fisttpl
cwtl
xlat
mov
jg
inc
pusha
mov
loop
xorb
mov
jp
dec
ja
cmp
dec
adc
push
pop
adc
sub
push
clc
lock
lret
popf
dec
imul
xor
add
daa
imul
dec
ret
sbb
xor
mov
xor
add
xlat
adc
and
xor
inc
pop
enter
fimuls
cmpsb
rol
inc
push
mov
iret
xchg
adc
imul
sub
jg
pop
stos
adc
test
iret
pop
je
push
stos
aas
daa
pop
icebp
or
shll
dec
adc
dec
xor
std
and
cmp
rolb
in
push
inc
mov
pop
stc
jnp
push
fisttps
or
sarb
xor
test
outsb
pop
push
mov
push
dec
fistpl
jno
cmp
sbb
das
ljmp
pop
mov
jl
xor
mov
push
pop
jg
inc
sub
std
lcall
aaa
xchg
sub
js
out
cmp
dec
xchg
sub
sub
jae
or
loop
mov
sub
movsb
jle
inc
and
adc
lock
jmp
cmp
adc
and
cld
xchg
lret
jne
adc
test
adc
fisttpl
test
adc
jne
jp
and
and
push
in
sub
xchg
rclb
sub
sbb
mov
jle
mov
mov
cmp
sub
push
stos
lahf
int3
cmp
lahf
test
ret
inc
lds
data16
imul
mov
add
pop
adc
bound
aam
jmp
aad
cs
add
fisubl
sbb
stos
mov
inc
popf
movl
xlat
pusha
into
test
mov
cmp
cmp
sahf
movb
shll
jmp
popf
adc
and
fiadds
aas
cmpsb
add
adc
xchg
idivl
push
insb
or
jl
jg
sub
aaa
push
add
mov
pushf
pop
and
xchg
lock
and
loopne
sub
movsb
push
imul
push
in
shr
pop
call
cltd
mov
mov
cmp
sbb
mov
adc
push
pop
dec
add
dec
xor
andb
cmpsl
divb
add
push
mov
push
sub
jecxz
push
ret
jb
mov
shr
filds
je
xchg
add
xchg
unpckhps
inc
adc
sub
and
sti
repnz
pop
pop
loopne
add
cli
clc
sbb
push
data16
outsb
ss
fisttpll
fisttpll
addl
xlat
into
repz
in
mov
cmp
and
sbb
pop
jmp
in
adc
mov
adc
dec
mov
es
mov
cmp
sbb
dec
dec
xorl
adc
aad
or
cmp
aaa
call
rcrw
jl
jp
push
adc
insb
pop
mull
scas
lret
ret
dec
scas
lods
push
inc
jb
bound
jmp
xchg
ljmp
dec
leave
mov
sahf
sub
shll
jmp
sbb
sarb
sbb
pushw
jae
ret
sbb
call
fscale
scas
ja
daa
jns
in
jecxz
test
aam
push
scas
int3
add
pop
icebp
mov
pop
cmp
popa
inc
std
sahf
add
aas
cmc
fstl
xor
iret
xor
lret
or
mov
jb
sub
push
arpl
push
xor
and
movsl
and
jge
aas
in
xchg
xor
dec
loopne
sub
or
ret
add
mov
roll
xchg
shrb
push
fldl
out
fsts
xor
xchg
rcl
jnp
cmpb
popf
or
mov
in
jge
adc
mov
mov
roll
add
pop
movsl
cmp
out
jnp
dec
mov
add
add
dec
cmp
adc
dec
nopl
mov
mov
inc
pop
pop
xor
jno
xchg
shlb
ss
xlat
add
les
lock
mov
mov
pop
cs
push
ret
loopne
out
mov
mov
dec
in
or
popa
xchg
cmp
xor
pop
lods
das
mov
lods
loop
jg
sbb
pop
jae
iret
repnz
out
in
sub
jne
pusha
inc
xchg
shrl
test
xchg
jge
mov
or
inc
fsubrl
cmp
inc
call
mov
aaa
mov
lods
dec
push
adc
xchg
push
dec
push
jp
in
push
jge
imul
jae
xor
push
and
cmpb
lahf
test
mov
hlt
iret
jmp
xchg
xor
xchg
cmp
aam
roll
dec
add
rcrb
push
insb
xor
stos
adc
push
mov
lahf
xor
or
cmpsl
js
jae
lcall
jns
fwait
adc
push
cmp
mov
xchg
mov
fidivl
test
les
mov
add
or
and
test
addr16
enter
xchg
lret
dec
push
ja
mov
jmp
adc
stos
add
xchg
movl
stc
sub
sub
fdivs
sbb
rcrl
jecxz
inc
ds
out
mov
xor
mov
push
adc
sub
mov
rolb
cmp
popf
push
shlb
nop
stc
iret
jmp
mov
sarb
sub
cs
shlb
loope
inc
mov
mov
scas
aam
mov
mov
clc
out
push
fwait
loop
mov
out
pop
sbbb
fisttpll
inc
jne
add
cli
and
mov
sbbl
push
stos
push
sbb
sub
push
and
xlat
and
orb
js
stos
icebp
push
mov
leave
and
jbe
syscall
ret
push
sahf
and
inc
push
inc
inc
mov
outsl
stos
imul
or
jmp
fwait
lcall
lds
test
cmc
fnsave
cmp
cmp
scas
jae
dec
std
fwait
jp
mov
bound
adc
and
and
fwait
mov
jmp
jo
cltd
loopne
ds
xor
mov
dec
jne
divb
xchg
int3
jecxz
test
dec
nop
push
lods
fucomp
jg
data16
int3
aam
cwtl
xchg
mov
es
enter
pop
fidivrs
or
xlat
adc
stos
lret
jl
je
or
mov
mov
loope
and
inc
pcmpgtd
fildl
and
jb
int3
and
jle
sub
dec
xlat
and
jmp
call
dec
jmp
call
loope
mov
notl
push
jbe
jae
push
andl
loope
insl
mov
cltd
jge
and
bound
movsb
fdivrp
shll
cmp
popa
notb
das
rclb
mov
adc
adc
adc
sbb
jge
into
dec
jecxz
jnp
mov
daa
out
stc
iret
jl
repnz
les
call
cmp
icebp
addr16
fldl
push
cmp
fiaddl
outsl
sub
lret
lahf
pushf
gs
pop
mov
cmpl
stos
std
sub
push
push
cmp
xorl
mov
sub
sqrtps
pop
fsubl
enter
add
and
jae
ja
sar
sbb
push
add
xchg
inc
dec
loope
fwait
outsl
lahf
add
adc
out
movsb
addr16
push
lret
mov
mov
insl
jmp
sbb
inc
mov
movsl
sub
adc
xor
mov
movl
out
xchg
mov
rclb
in
into
jl
mov
xor
inc
push
cmp
sbb
movsb
or
movsl
dec
fs
mov
mov
fisttpll
sub
mov
and
sub
mov
andl
inc
sahf
mov
jns
adc
and
mov
add
sbb
mov
xchg
repnz
xor
mov
out
inc
mov
out
add
in
inc
sbbl
pop
rcll
sbb
das
dec
in
or
out
cld
leave
xchg
jecxz
sti
sbb
xor
lods
mov
jno
shlb
sar
dec
imul
pushf
sbb
cmp
sub
lret
push
xchg
lahf
rorb
dec
jecxz
test
mov
sub
popf
cmp
loopne
dec
pop
fstl
xchg
and
es
xorl
shrb
mov
push
in
adc
pop
lds
movsb
lret
ret
aaa
push
jnp
and
cmpsb
xor
aas
jmp
pop
cmpsb
js
leave
cmp
push
mov
in
jae
mov
mov
cmp
xchg
mov
xor
adcb
stos
xlat
push
aas
movsl
mov
mov
cltd
cmp
push
cmp
popa
mov
pushf
and
dec
xchg
xchg
int3
pop
mov
pop
xchg
mov
jp
stos
loope
inc
mov
popa
push
call
jns
inc
or
lahf
stos
push
jge
adc
push
shr
out
jmp
aad
aaa
push
insb
mov
fmul
sub
mov
push
lods
lret
jno
xor
and
negb
data16
adc
ljmp
dec
pop
test
jns
mov
inc
je
aam
add
dec
les
sbb
cld
sub
insl
push
pop
popa
movsb
pop
mov
into
mov
adc
inc
loope
push
out
fcomip
test
sarb
out
std
inc
mov
loopne
inc
shll
sub
xchg
xor
xor
lods
or
dec
notb
js
insl
jbe
pop
sbb
popf
jae
popl
xchg
and
xchg
mov
pop
sub
mov
jecxz
xlat
add
aaa
xchg
push
sbb
add
push
outsb
xor
nop
in
push
lret
mov
fs
mov
cmp
movsb
imul
lods
int
outsl
fsubs
or
aaa
fdivrp
jge
fdivrl
test
jmp
sahf
cmpsl
addl
cli
xchg
inc
aad
push
cltd
inc
dec
cmp
cli
mov
mov
jb
add
mov
in
xor
jnp
movsb
pushf
dec
fbld
sbb
cmp
and
push
mov
cmpsb
mov
mov
adcb
stc
cmpsb
push
sbb
dec
rolb
addr16
push
jle
and
hlt
out
arpl
test
xchg
pusha
and
push
fidivl
data16
mov
push
les
pusha
jo
in
je
test
lea
push
movsl
dec
out
mov
xchg
xor
sub
mov
pop
dec
and
rol
es
mov
fwait
call
mov
xor
mov
jmp
popa
jl
dec
test
pop
cld
cltd
push
mov
ror
xchg
or
stc
push
stos
mov
aaa
dec
push
push
push
xor
sbb
cli
jge
bound
out
ljmp
lods
push
inc
fiaddl
xor
mov
ljmp
je
ss
inc
or
mov
dec
push
ret
test
mov
in
and
xchg
lret
je
pop
inc
sarb
jne
fildll
dec
sbb
sub
mov
or
loop
daa
or
or
lods
nop
dec
inc
movsl
push
dec
adc
inc
xchg
data16
rorb
fisubrl
dec
rclb
push
push
cmp
xor
adc
stos
out
shl
or
insl
pop
in
add
sarb
cmp
lcall
cmp
nop
inc
sbb
adc
inc
std
xchg
mov
test
pop
jl
adc
mov
jecxz
pop
clc
inc
rorl
pusha
mov
cwtl
mov
mov
orb
inc
sub
pushf
shr
daa
inc
cmc
pushf
xor
and
call
pop
in
inc
and
mov
addr16
push
pop
sub
xchg
xchg
xchg
les
insl
xor
inc
mov
int3
std
hlt
fsubl
sahf
or
pop
mov
addr16
adc
fcomps
mov
int
cmp
scas
jbe
xchg
in
addl
fadds
cmp
outsl
jecxz
xlat
in
xor
call
mov
cmp
or
mov
push
mov
adc
shlb
test
mov
cmp
sub
pop
cli
xor
sti
loop
mov
ss
pushf
add
loopne
xor
rol
cmpl
xor
mov
pop
or
mov
ljmp
jnp
adc
add
xlat
ret
in
pop
repz
push
xor
popf
aas
pushf
fidivrs
nop
pushf
lea
in
cmp
cld
jecxz
fldt
mov
push
mov
push
pop
inc
ljmp
mov
jle
fsubr
ss
sbb
jge
fdivrl
pop
cmp
pop
aam
fdivrs
mov
push
inc
jmp
cmp
xor
lret
xchg
arpl
daa
sub
jg
arpl
xchg
lret
and
push
pop
push
aaa
call
in
jns
insb
push
fwait
mov
jb
dec
test
mov
inc
push
sarl
mov
popf
iret
shlb
mov
stos
dec
push
fwait
ljmp
push
sbb
insl
aaa
jne
push
popaw
insb
mov
jge
xor
pop
jno
jmp
adc
inc
mov
sub
fidivrl
mov
shll
gs
or
mov
push
sbb
adc
aad
push
push
jae
out
clc
js
in
movsb
sahf
dec
mov
popf
push
push
mov
lods
and
sti
adc
fsubrl
sbb
xchg
pop
in
pop
testb
sahf
fstl
sbb
or
xchg
in
pop
add
daa
mov
outsl
shrl
repz
test
inc
test
pop
into
pop
ds
jae
add
adc
daa
adc
stc
add
jmp
mov
mov
fwait
bound
cmc
decl
pop
mov
neg
xlat
cli
pop
xchg
fldz
mov
cld
xlat
pusha
sub
dec
sub
cltd
roll
pop
cmpsl
mov
iret
hlt
dec
inc
mov
cmp
leave
adcl
das
adc
jbe
xor
pop
mov
pop
lcall
dec
cmp
adc
adc
insl
ret
out
mov
add
in
mov
push
nop
xlat
fsubl
sarb
mov
dec
lods
aad
test
cmp
add
inc
test
into
mov
movsb
aas
dec
nop
shrl
insl
push
fnstsw
cltd
mov
jo
pop
xchg
jno
rorb
loope
jl
movsl
add
add
pop
cmp
pop
inc
aaa
add
lahf
lret
in
gs
popf
fldenv
pushf
push
adc
sub
je
lret
mov
insl
lods
cltd
shll
fidivrs
xchg
xor
jnp
mov
xor
fists
push
sar
mov
and
lret
jecxz
idivb
in
push
add
into
sub
fstps
sub
dec
enter
lock
cmp
cmc
jmp
fs
into
cmp
xchg
adc
sbb
shr
bnd
stos
pop
push
mov
add
push
mov
sbb
push
mov
ljmp
push
test
dec
in
and
addl
lret
outsb
inc
stc
nop
out
jnp
imul
xchg
ret
mov
pop
jmp
das
fwait
ja
xor
inc
add
jno
sti
push
lret
and
cld
mov
test
fs
movsb
scas
mov
jle
push
ds
fcmovb
in
rorb
xchg
mov
cmc
scas
repz
inc
daa
add
sub
push
fadds
jne
leavew
insl
pop
rolb
mov
dec
push
add
popf
inc
dec
insl
and
rep
mov
sub
pop
cmp
push
mov
cmp
negb
pop
es
outsl
in
xor
jno
xchg
push
push
int
out
outsl
xor
mov
xchg
cli
cmp
push
add
mulb
push
int3
jmp
insb
jle
adc
pop
push
or
dec
call
imul
jg
in
fdivrs
es
sub
stos
pop
ja
arpl
push
popa
push
into
adc
lahf
mov
mov
mov
xor
jge
pop
and
imul
sbb
shll
repz
out
mov
push
cmp
outsl
ss
push
add
lods
push
push
sbb
or
push
out
add
test
or
jmp
dec
mov
pop
js
mov
xchg
push
popf
icebp
sub
dec
das
adc
aas
out
lcall
loope
jle
xchg
fisttpl
push
enter
jbe
or
push
and
sub
pop
sbb
inc
cmp
cmp
push
adc
sbb
js
pop
ss
scas
mov
aaa
imul
adc
sbb
cmp
mov
cmp
push
add
inc
sbb
mov
loop
imul
fs
xor
pop
xchg
xor
and
sahf
push
cmc
out
fs
jle
call
dec
ficoml
fidivs
jle
lcall
fneni(8087
mov
mov
stos
std
mov
std
push
aad
or
and
dec
jo
insb
sbb
inc
imul
inc
mov
out
cmp
pop
gs
lea
inc
mov
les
das
or
xor
divl
mov
inc
adc
fistps
js
mov
pop
cmp
fmull
pop
jl
in
cwtl
cmp
xchg
outsb
pushf
push
out
ss
push
leave
mov
jge
stos
cmp
pushf
sub
aas
sub
arpl
pop
fdivrs
out
jnp
lcall
jne
das
lea
fucomip
push
int3
enter
adc
ja
sub
push
adc
stc
inc
pop
push
and
insb
pop
jbe
daa
bound
jo
ret
or
cs
outsb
and
xchg
stc
mov
adc
jo
int
jp
out
push
testl
pop
inc
repnz
js
push
jo
call
sub
sub
push
outsb
out
addl
inc
push
add
or
out
ds
jb
aam
add
xchg
call
scas
xchg
out
or
and
cmpsl
push
fabs
dec
xor
pop
mov
cmp
or
mov
xor
mul
push
adc
add
clc
pop
xor
jecxz
xor
cmp
scas
inc
int3
stc
pop
sub
xlat
xor
mov
and
xchg
xchg
test
sub
jl
int
lock
aad
sbb
insb
stos
or
jge
push
fwait
icebp
cltd
and
dec
hlt
sub
jecxz
sub
sbb
sub
das
and
shlb
or
std
and
mov
call
xor
pop
add
push
xor
cmpsb
call
mov
mov
xor
aad
les
or
test
sti
mov
adcb
outsl
push
xlat
insb
add
scas
aam
in
adc
pop
push
loope
aad
sbb
leave
or
ss
xor
movsb
and
xchg
sbb
and
sub
dec
jle
cli
jnp
inc
fisttpll
out
inc
or
pusha
inc
fistpll
xor
xchg
dec
xchg
imul
mov
or
sub
pop
pusha
xor
nop
mov
orl
sbb
lock
mov
lahf
push
mov
into
in
xorl
or
jmp
xchg
inc
inc
sub
loop
mov
nop
mov
add
in
iret
mov
iret
adc
fildll
mov
test
xor
fiadds
push
pop
sbb
in
xchg
or
std
mov
pop
daa
pop
dec
mov
jbe
jmp
cmp
pushf
or
ja
mov
sbb
pop
adc
mov
adc
gs
add
sbb
out
cmp
pop
mov
push
rcll
aas
fnstsw
insb
xor
into
jp
cmpsl
jp
in
fisttps
lea
movsb
adc
mov
mov
repz
push
ss
sbb
repz
insl
jecxz
inc
add
jmp
xchg
je
movsb
out
jl
nop
imul
pop
lret
test
cmp
dec
pop
bound
pop
cmp
addl
dec
mov
popf
push
inc
and
in
cltd
xchg
mov
imul
aas
inc
add
push
pop
in
enter
dec
ret
push
negb
fcmovbe
aad
xchg
jne
imul
lret
imul
inc
inc
or
xchg
inc
mov
inc
js
xor
xchg
push
jle
dec
push
push
cld
xor
mov
or
dec
mov
cmp
pop
and
cmp
jecxz
hlt
out
xchg
clc
insb
cmp
xchg
repz
bound
cld
lods
ficompl
xor
push
pop
pop
sub
leave
outsb
enter
add
mov
daa
adc
out
ror
xor
or
cmp
lea
iret
fdivp
xchg
jle
push
and
xor
ljmp
daa
pop
shll
mov
out
mov
ljmp
lcall
or
sbb
xchg
push
movsl
add
and
insb
cmp
cmp
pop
in
popf
and
mov
addr16
xchg
push
lahf
lock
pop
cli
insl
mov
xorl
movsl
jb
pushf
scas
or
divb
push
push
mov
sahf
mov
xchg
cmc
push
and
sub
lret
add
cmpb
inc
scas
cmp
adc
div
ret
xor
les
mov
pushf
in
xor
shll
rcrb
cmp
push
xor
in
out
outsl
shrl
or
xchg
xchg
cmp
sub
pop
xchg
cmpsb
mov
mov
push
xchg
aam
ret
and
outsl
fld
fcom
mov
clc
mov
ljmp
fidivl
push
jnp
sub
ds
insl
hlt
inc
dec
leave
mov
inc
sub
filds
dec
or
insl
cwtl
jne
inc
cltd
cmp
pop
jb
sar
iret
clc
pushf
gs
mov
in
pusha
xchg
dec
fcoml
clc
testb
jle
inc
inc
pop
insb
sti
scas
pop
sbb
faddl
ljmp
pop
mov
sbb
inc
xchg
stc
sti
mov
outsb
and
loop
mov
sbb
push
rorb
test
sub
insl
pop
lods
xor
pop
dec
enter
nop
popf
sub
mov
inc
sub
mov
pop
sub
nop
roll
push
jo
xor
jo
fld
notb
pusha
add
add
sbb
in
xchg
pop
push
push
pop
aas
pushf
mov
pop
push
mov
dec
pop
adc
ret
pop
inc
je
mov
outsl
push
pop
lahf
inc
inc
out
xorb
mov
enter
sahf
xlat
xor
lret
mov
arpl
movb
and
sarl
or
mov
addb
movsb
cmp
mov
data16
inc
outsl
mov
arpl
add
insl
push
test
aas
push
cmp
mov
dec
stos
fdivrp
test
mov
sti
pop
dec
clc
test
inc
jnp
addb
or
pop
pop
jno
and
ss
xchg
int
mov
fcmove
ljmp
loopne
cld
mov
jno
repnz
jns
in
ss
repz
ja
mov
call
mov
adc
inc
sbb
adc
adc
je
ljmp
or
inc
das
add
or
aam
addr16
pushf
repz
adc
lret
adc
xlat
pop
push
aas
jmp
push
ds
das
int
sbb
dec
popa
and
ds
loope
cmp
pop
iret
mov
int
jbe
in
mov
mov
add
ret
jb
jp
xchg
pushf
loopne
inc
inc
xchg
sub
and
in
push
adc
push
xchg
repnz
ds
mov
ja
stos
divl
movsb
push
jae
je
cli
test
mov
pop
xchg
pop
loope
mov
sub
and
fninit
xchg
ds
mov
jbe
fisubrs
fcomps
inc
dec
push
int3
inc
je
push
sti
mov
push
pop
mov
xor
scas
and
xlat
imul
out
addr16
adc
jns
jp
mov
xchg
push
xchg
and
sti
popa
cmp
out
mov
shl
lret
and
lahf
loope
push
jns
inc
and
mov
test
sbb
and
shrl
ja
adc
push
incb
lret
leave
jl
paddw
and
daa
push
loopne
in
cmpsb
sbb
scas
out
cld
mov
pop
daa
ds
jl
or
mov
xchg
mov
mov
pushf
and
int3
mov
add
push
aad
lods
stos
mov
inc
push
or
popa
into
inc
je
out
daa
and
sbb
sbb
aam
outsl
or
leave
push
jns
loope
aas
cli
jo
pop
popa
xchg
adc
inc
inc
push
dec
mov
int
mov
inc
pop
cmp
jbe
xchg
imulb
pop
pop
push
xor
jno
xchg
cmp
aas
dec
mov
push
xlat
clc
or
inc
sub
popa
out
das
push
lods
mov
mov
or
iret
scas
aam
and
jmp
js
nop
or
lret
dec
pop
dec
clc
mov
call
sub
xchg
imul
shll
sub
sbb
int3
in
ret
mov
adc
setno
mov
es
fstpt
or
xchg
pusha
lret
aad
call
imul
push
xor
lock
push
cmc
mov
int3
xor
sbb
shld
push
ja
cli
xor
in
cmpsl
shll
sbb
dec
mov
cld
push
pop
les
repnz
test
jo
js
sub
and
jp
or
sbb
cmpsl
sub
mov
jno
or
inc
test
ljmp
jecxz
stc
xchg
cmp
addl
cmp
mov
in
inc
mov
inc
dec
add
cld
xchg
int3
test
sub
aad
adc
ja
lea
fnstenv
arpl
jecxz
das
inc
add
cmpb
push
mov
sbb
in
push
stos
jb
xor
fstpt
out
les
jne
xchg
pop
insl
dec
mov
adc
cmp
cltd
out
fcom
cmpsb
adc
mov
lea
test
sbb
adc
pop
lock
dec
lods
xor
mov
and
mov
cmp
pop
add
pop
xor
and
scas
add
mov
dec
andb
fstl
and
scas
adcl
std
cmp
lcall
push
nop
mov
leave
aaa
cmpsb
push
jmp
dec
sbb
jmp
lock
pusha
lods
jge
xor
or
sub
enter
sub
shl
mov
and
rcl
adc
inc
dec
pop
dec
xor
aad
xchg
les
shlb
jae
and
mov
fs
sahf
sub
aas
xchg
je
aad
jl
add
mov
fstl
outsl
mov
add
mov
jge
cmpsb
jl
pop
popa
adc
sub
repnz
jbe
fidivl
adc
mov
pop
outsl
add
fs
rcr
sbb
pop
push
dec
dec
push
ret
jae
add
cmp
cmpl
mov
mov
sbb
pop
or
mov
fcompl
ds
jl
jns
xchg
sub
inc
lea
popf
icebp
shl
cltd
add
or
xlat
push
and
imul
enter
inc
jb
test
mov
pop
imul
fcmovb
idiv
negl
jnp
shl
pop
pop
incl
xchg
add
jmp
call
jmp
sbb
imul
dec
flds
push
int3
mov
ret
ret
lcall
inc
jecxz
sti
gs
jmp
mov
sbb
adc
sbb
push
jne
pop
push
scas
pop
jl
inc
jo
jnp
test
nop
rorl
inc
sbb
push
fs
movsl
push
push
sarb
dec
mov
lods
cmp
out
mov
cmpsb
testb
movsb
rcr
and
add
xadd
cmp
push
movsl
stc
nop
dec
fdivrl
dec
and
mov
sub
fwait
mov
out
loop
arpl
stos
jae
mov
outsl
jo
nop
sahf
lcall
loop
xchg
and
fsubrl
cwtl
fdivp
jo
and
popa
xchg
mov
jb
cmp
cmpsb
dec
xchg
scas
push
mov
mov
pop
out
rclb
je
mov
push
stos
adc
xor
les
outsl
in
imul
addr16
nop
inc
movsl
mov
data16
aaa
ds
fbld
dec
repnz
add
cmp
lock
divps
dec
ds
or
test
popf
mov
movzwl
cmp
sub
push
mov
hlt
pusha
mov
cmpsb
cmc
xor
fcmovne
add
inc
inc
jmp
rorb
xchg
scas
rclb
in
aas
inc
gs
leave
das
aaa
fildll
sub
push
inc
shlb
and
jb
test
mov
mov
lret
push
out
inc
jecxz
xor
fcom
test
adc
xor
scas
loopne
mov
and
adc
inc
push
enter
cltd
cmp
add
and
aas
push
stc
cmp
pop
jnp
xchg
imul
idivl
stos
xor
jnp
or
rorb
dec
xchg
lcall
jle
pop
std
insb
cmpsb
pop
push
mov
scas
movsb
pop
xchg
popf
jns
dec
js
xor
xor
loope
addr16
mov
push
cwtl
fisubrl
bound
popa
sub
iret
sub
jnp
xchg
icebp
and
cs
outsl
jb
inc
xchg
decl
cmp
ret
mov
jmp
out
popa
mov
dec
mov
fs
dec
jmp
outsl
cmpl
sbb
bound
sub
es
arpl
mov
mov
xchg
xchg
sub
scas
jb
cmpsb
repnz
sbb
xchg
les
fdiv
insb
xchg
daa
and
sub
mov
movhps
cmp
lret
mov
sbb
pop
sbb
or
mov
test
clc
pop
and
pop
insl
scas
cs
lds
icebp
dec
sbb
jg
mov
push
lods
nopl
push
jecxz
push
enter
je
mov
bound
popf
pop
and
loopne
repnz
stos
inc
jo
movsb
inc
adc
stc
mov
xlat
insb
sqrtps
sbb
fcompl
sub
outsb
rcll
aaa
insl
sub
cmp
movhps
mov
mov
ja
push
mov
push
xchg
jns
je
push
and
sub
cs
cld
arpl
xchg
cmp
jmp
ret
fldcw
sbb
arpl
sbb
dec
xchg
lret
ljmp
out
pop
and
inc
sbb
push
add
fsubl
jl
and
cmp
add
dec
pushf
lahf
or
push
lea
mov
iret
and
aaa
clc
faddl
cmc
mov
lods
mov
cmp
cmpsl
jl,pt
es
shl
stos
mov
xchg
pop
push
mov
mov
pop
mov
fcmovu
inc
inc
push
lret
jbe
pusha
add
xor
int
sahf
movsb
mov
mov
pop
movsb
adc
cli
lcall
cmpsl
cmp
or
or
dec
insb
cwtl
movsl
xchg
mov
aas
rorb
loop
incb
mov
sbb
ret
in
xchg
sub
sub
jmp
mov
and
cltd
sub
outsb
lea
jmp
jnp
sub
inc
xchg
popf
out
fstps
aam
dec
add
fs
or
xorb
xchg
in
fcmovbe
cs
pop
fimuls
and
pmullw
mov
js
subb
testb
dec
dec
mov
add
jbe
dec
rcll
addr16
xchg
fnstsw
jb
jo
xchg
cmpsb
cmp
mov
es
sub
rorl
jno
dec
scas
sub
dec
mov
dec
pop
sbb
sub
data16
cmpsb
push
imul
imul
xchg
shrl
imul
xchg
sarb
dec
fisubs
outsl
out
out
pop
btr
push
imul
or
stc
xchg
sub
pop
jae
pop
int3
in
insb
or
cmp
cmpsb
and
add
bound
jge
out
movsb
idivl
pop
adc
inc
sbb
sahf
mov
jnp
mov
adc
mov
es
cli
pop
inc
inc
xor
jo
sub
shrb
fldenv
or
mov
xor
adc
mov
lahf
in
sub
jnp
out
cmp
movsl
test
mov
and
loope
cmpl
and
xchg
sbb
push
es
stc
popl
sti
mov
dec
and
and
or
enter
xchg
sub
imul
xchg
mov
scas
pop
adcb
imul
xor
and
xchg
divl
daa
scas
mov
lock
cmp
test
das
push
call
imul
pop
xor
jmp
loopne
pop
xlat
loopne
jo
mov
push
jg
add
negl
xor
xor
fistpl
sub
mov
pop
inc
enter
xlat
adc
jne
sahf
mov
loopne
hlt
stos
popf
fistps
push
nop
mov
add
jecxz
push
movsl
cs
pushl
jmp
daa
pop
xchg
cmpsb
bound
inc
mov
xor
outsb
mov
xchg
adcl
pop
jne
lods
rorb
or
dec
fstpt
jge
lds
and
mov
jmp
mov
jae
fst
jp
add
push
sub
jbe
inc
js
inc
mov
sbb
outsl
out
xchg
in
stc
cltd
and
addr16
xchg
not
inc
lock
daa
jp
inc
popa
adc
jne
push
cmp
inc
in
lret
fidivs
iret
jmp
iret
xor
ds
lcall
mov
xor
arpl
roll
mov
mov
and
pop
cwtl
mov
ljmp
jp
cli
ret
xor
repnz
jp
push
and
daa
jne
cltd
movb
push
push
sbb
insl
adc
or
lock
cmp
adc
or
or
xor
adc
ffreep
xchg
mov
sub
sahf
dec
mov
bnd
lea
push
push
mov
jl
sub
inc
xor
fwait
mov
and
addl
pop
dec
testl
push
popf
jnp
mov
and
sub
mov
rclb
dec
ret
xchg
lahf
sub
push
push
mov
xlat
xor
xchg
arpl
fs
in
and
std
shrb
stc
lahf
mov
test
xor
imul
mov
shl
imul
mov
repz
xchg
test
dec
xor
and
mov
pop
xlat
ds
inc
sub
cltd
daa
insb
test
jns
sbb
stos
mov
addr16
cli
mov
xchg
jae
popl
xor
das
dec
test
sub
sub
outsb
mov
push
adc
sbb
and
lods
sbb
xchg
jns
sbb
lret
xchg
jne
mov
cmp
js
lods
lret
push
and
popf
cli
popa
ret
sti
mov
lahf
push
test
sub
jl
andl
lcall
lods
add
in
cmp
movsb
mov
push
sub
dec
stc
repnz
inc
nop
push
addr16
inc
and
sbb
xor
cs
dec
xor
sub
pushf
sub
sti
cld
pop
mov
and
repz
insl
mov
imul
mov
int3
push
test
inc
mov
repnz
pop
sbb
xor
cmp
mov
ss
out
out
sahf
pop
mov
dec
jne
das
pop
inc
cmp
in
pop
outsb
mov
cli
mov
sarl
jns
shlb
or
or
sbb
faddp
loope
xlat
iret
xlat
ror
jge
hlt
pop
push
ret
dec
je
sub
lds
std
inc
cmp
test
jae
adc
cmpsb
xchg
xchg
out
fs
adc
mov
add
push
xchg
movsl
leave
pop
and
call
cmpsl
daa
cli
shll
in
and
pop
xor
lea
mov
imul
stc
cld
shrl
imul
sbb
fbstp
pop
mov
push
notl
dec
loop
popf
decb
and
das
and
lret
sbb
mov
push
fdivs
arpl
fsubrl
add
mov
mov
lods
cmp
lcall
mull
pop
mov
or
adc
inc
pop
jle
lahf
add
ret
pop
add
and
pop
outsl
enter
cld
pop
sbb
sbb
test
movsb
or
cmpsb
push
sub
cmc
jp
popa
push
lea
push
fs
fucom
mov
ficomps
inc
jae
daa
add
inc
iret
sub
lea
lods
mov
test
or
dec
push
adc
or
mov
push
sub
test
jp
mov
test
mov
sub
sbb
sub
pop
loop
into
pop
sar
add
jns
mov
pop
and
mov
push
call
mov
mov
inc
inc
push
adc
ja
mov
xchg
ljmp
xchg
pop
aad
sbb
cmpl
mov
add
dec
nop
repnz
add
testl
sub
dec
lds
movsl
xchg
repnz
or
aas
push
cmpb
ret
das
lret
adc
xchg
lock
aam
mov
std
test
pushf
and
xchg
cmpsb
scas
adc
dec
loop
mov
call
loop
je
insl
push
cmp
mov
call
sbb
pop
add
sbb
jmp
jae
jbe
mov
xor
mov
adc
dec
enter
adc
mov
dec
shlb
sti
push
fdivs
fwait
repz
pop
fsubr
testl
adc
push
dec
fmull
cmp
mov
int
pop
add
xchg
sbb
mov
sub
pop
xchg
mov
ja
mov
pop
sbb
inc
cld
lret
cli
aaa
out
inc
push
sahf
jb
push
aam
mov
test
push
gs
clc
js
addr16
add
nop
idivb
pop
push
lods
sbb
add
movsb
orl
daa
loope
out
adc
data16
or
add
in
push
sti
out
scas
xor
in
push
lods
sbb
and
cwtl
imul
pop
inc
sarl
pop
pop
imulb
clc
shr
mov
nop
dec
mov
loopne
aad
inc
iret
in
jnp
or
dec
jmp
jge
loope
inc
movsl
and
js
add
sahf
jg
add
pop
pusha
or
add
adc
fdivrs
pop
out
xor
dec
cltd
sahf
inc
push
shl
cmp
or
cmp
fs
aaa
or
adcb
or
jno
sub
xchg
dec
add
stc
xor
cwtl
cmc
int3
rorb
add
xchg
lret
mov
in
mov
push
loopne
sti
js
and
loopne
adcb
clc
test
push
decl
mov
sar
push
lea
inc
add
enter
pop
cs
imul
dec
xor
xchg
adc
ficoml
mov
daa
std
jp
push
push
mov
pop
jbe
jle
push
lds
pop
adc
mov
sbb
mov
inc
pop
pop
adc
mov
xchg
fstp
adc
mov
mov
mov
jp
adc
and
repz
js
cltd
or
dec
lock
es
out
xchg
xor
mov
xor
fidivs
jns
lahf
jg
mov
mov
arpl
sbb
enter
push
and
ror
push
push
xchg
fimull
nop
int3
lds
push
xchg
or
push
add
dec
push
inc
imul
mov
mov
rclb
inc
inc
adc
and
daa
mov
and
cltd
cmc
int3
jno
ds
mov
in
push
scas
js
mov
xchg
jne
mov
hlt
lcall
out
rclb
mov
dec
xor
push
dec
fdivrl
adc
popa
fistpl
add
test
jle
adc
lret
pop
mov
in
out
lcall
cmpsl
mov
dec
lahf
lea
sub
loop
bnd
imul
mov
aam
ljmp
ds
aas
cmpsl
out
sbb
mov
mov
jmp
inc
jb
test
dec
or
push
sbbb
push
outsl
rol
filds
cs
clc
mov
les
and
xor
sbb
sub
cmp
loopne
sbb
dec
into
xchg
sub
imul
dec
lea
xlat
lods
dec
fistpll
mov
arpl
add
cmp
out
pop
xor
rcrb
xor
out
jo
mov
sti
xor
adc
cmp
push
pop
and
jae
fldl
mov
mov
inc
mov
rclb
fnstenv
ljmp
add
mov
iret
or
add
mov
imul
and
mov
insl
in
cmp
cs
xchg
cld
xchg
test
jmp
xchg
xchg
cli
ss
scas
add
xchg
repnz
fbstp
sbb
and
sti
xchg
out
repnz
mov
xchg
testl
add
lcall
scas
cltd
push
push
dec
inc
cmp
cmc
mov
outsl
jp
jg
push
loope
add
jecxz,pt
subb
fcoml
push
cmp
cltd
xor
xchg
push
arpl
xchg
sarb
cmp
mov
mov
cmpsl
pop
lcall
test
adc
push
xor
push
lcall
lds
pop
sbb
xchg
movsl
sbb
fwait
jno
jl
xor
dec
jbe
jb
test
repz
ds
idivl
jp
cltd
xchg
mov
call
jmp
add
inc
push
cmpsb
adc
dec
notb
add
iret
adc
movsb
xlat
and
out
sbb
jo
add
adc
push
and
xchg
mov
and
ja
and
fs
xchg
add
aas
int
push
or
call
xor
dec
pop
inc
fstps
dec
sbb
xor
or
stos
rcrl
repnz
insb
mov
sbb
scas
or
or
adc
xlat
leave
mov
cmp
int
lods
xchg
enter
xor
loopne
bound
insb
imul
mov
mov
mov
lods
mov
xchg
cmp
clc
pop
adc
push
sbb
test
dec
or
jne
mov
int
inc
inc
popa
jp
sbb
loop
rcr
push
ret
imul
dec
dec
jge
mov
call
xchg
inc
xchg
xor
scas
mov
push
jo
mov
push
bound
mov
out
icebp
push
shr
loopne
or
xlat
adc
andb
xchg
mov
movsb
and
pop
add
inc
xor
ret
mov
or
push
mov
sbb
les
mov
dec
add
aaa
xchg
call
lahf
push
adc
dec
rep
xor
pop
call
fwait
and
aam
or
jge
sub
mov
lahf
xor
cmp
das
cmpsb
push
pop
add
xor
mov
pop
fldenv
and
sub
jge
adc
cwtl
mov
sbb
mulb
mov
push
push
jno
popf
add
mov
insl
push
jns
aad
push
pmulhw
push
mov
and
test
push
push
pop
leave
pop
mov
imul
xchg
lods
push
call
lcall
pop
sub
add
xor
xor
or
dec
pop
fcomps
sbb
fcmove
loopne
inc
sub
xchg
xchg
call
push
pop
fiaddl
mov
lret
fidivs
stos
sbbl
sub
mov
lock
xor
fldcw
adc
mov
sub
mov
ja
mov
aaa
sub
stos
or
rol
sub
mov
lea
pop
mov
and
lods
shll
mov
xor
xchg
adc
lcall
pop
fwait
or
in
dec
seto
stc
dec
cmpsb
aas
adc
pop
call
push
mov
lods
inc
notl
loope
out
push
sbb
push
lock
aad
enter
loop
xor
cld
sbb
das
in
jnp
fwait
dec
add
jl
lret
test
ret
jae
mov
movsb
lcall
pushf
lods
jno
test
mov
dec
loope
adc
sbb
in
pusha
mov
mov
loop
call
pop
cmp
inc
movsb
jg
push
rcrl
pusha
fldcw
inc
jno
lret
sub
pop
cld
cltd
inc
mov
mov
in
cmc
cli
cltd
das
xchg
push
sbb
sti
lock
and
jl
dec
clc
inc
fstl
das
fdivs
test
lods
add
cltd
rcr
sarl
stos
repz
xchg
loop
movsl
std
inc
into
sbb
cmpl
shlb
in
test
out
pop
cmp
and
lds
enter
out
dec
mov
fimull
stos
mov
mov
lret
add
jae
fidivrs
push
fnstenv
ja
movsl
xor
lret
cmp
cmp
cmp
lret
ret
pop
in
push
jne
je
popa
mov
int
int
or
cli
pop
sti
mov
das
adc
ret
imul
in
shlb
imul
test
xchg
sbb
repnz
cld
pop
sbb
push
mov
sbb
aad
out
rol
shrl
cmp
jbe
shrb
dec
dec
loop
sti
mov
mov
ss
xchg
xchg
fsubrl
pop
xchg
pusha
out
push
jbe
mov
out
ja
or
movsb
jmp
int
sub
mov
loop
pop
push
shrl
les
sbb
enter
jmp
je
arpl
loop
in
loop
pop
sub
test
mov
scas
sbbb
add
aas
push
jle
push
andl
or
fwait
out
in
inc
stc
xchg
out
fiadds
cwtl
jae
xor
int
testb
icebp
cld
sub
cmp
xchg
ffreep
add
movsl
or
scas
jmp
pop
lahf
loop
pop
ja
or
int
mov
or
pop
test
sbb
ret
aam
or
sbb
cwtl
mov
lods
mov
sub
push
mov
hlt
sub
jl
cwtl
rorl
dec
push
fcomp
push
sub
mov
ljmp
jns
inc
mov
jmp
iret
dec
ljmp
cmp
bound
push
aas
adc
dec
mov
pop
jle
jns
ljmp
test
js
dec
loope
push
add
mov
mov
mov
mov
popa
scas
lret
push
out
mov
inc
enter
sub
mov
pop
loope
int3
jle
stos
vorps
mov
sahf
inc
fdivl
test
std
nop
mov
sub
xlat
jo
inc
fstl
iret
fsubrs
in
fwait
inc
in
pop
cmpsl
daa
and
or
rcrb
cmpb
icebp
add
frstor
loopne
aam
and
pop
cmc
mov
in
xchg
push
mov
xor
lcall
scas
xor
push
jmp
cld
sbb
lcall
push
in
jecxz
icebp
arpl
mov
test
test
dec
xchg
push
out
mov
test
daa
jmp
mov
xor
and
mov
and
cltd
out
enter
aas
imul
imul
xor
sbbl
mov
movsb
repz
cs
scas
and
add
imul
pop
push
jge
pop
push
cs
js
mov
mov
mov
cmpsl
fucomi
pop
cmp
ror
push
or
je
xor
addl
aam
sbb
out
out
pop
adc
cmp
push
stos
pusha
aad
jge
jl
pop
mov
jbe
dec
fcomi
mov
lock
xchg
xor
outsb
dec
mov
jno
int3
outsb
sub
fwait
lret
shrb
cmpsl
fisubrs
imul
or
ret
pop
ja
inc
pop
mov
mov
jecxz
mov
lods
and
mov
add
icebp
imul
daa
popl
push
push
mov
xchg
and
xchg
test
lea
cld
inc
int3
xchg
lea
mov
loop
push
lock
xchg
lahf
addl
jb
rol
adc
arpl
pop
popa
push
sub
inc
jns
xchg
rcrb
loope
mov
push
jnp
xor
ss
mov
in
sbb
mov
sbb
aam
fidivrl
filds
mov
lahf
inc
mov
icebp
lret
jnp
loope
rolb
push
fdivrl
mov
nop
mov
cmp
pop
jle
xor
dec
xor
mov
rcrl
push
das
jmp
enter
in
pop
cmp
pop
jg
and
sub
fiadds
shll
mov
mov
jae
fs
pusha
lods
mov
movsl
lods
inc
addr16
cli
das
stos
xchg
rcl
adc
push
mov
stc
mov
sbb
loope
inc
or
stos
adc
pop
scas
adc
mov
dec
pushf
push
push
ret
scas
pop
icebp
cld
nop
and
cmp
or
xor
jne
scas
aam
xor
cmpsl
or
fstps
ret
out
sti
xchg
cld
sahf
out
push
inc
insb
insb
shll
sub
mov
push
daa
clc
sbb
inc
inc
movsl
cmpsl
or
bound
mov
je
mov
xor
or
repnz
test
push
cmpsl
cmp
xor
cli
arpl
dec
stos
mov
or
divl
mov
push
test
xor
inc
repz
add
mov
adc
ss
and
sub
cmp
jo
cltd
setae
movsb
sbb
loop
or
fucomp
fldt
xchg
and
sar
call
inc
mov
and
push
pusha
scas
xor
aaa
inc
cli
pusha
sarb
mov
lret
setg
pop
xchg
push
in
or
sbbb
mov
scas
insb
movsb
sub
sti
inc
adc
sub
cmpsb
lods
dec
push
sub
repnz
inc
xchg
ja
je
frstor
stc
add
mov
fcom
dec
mov
sub
jge
out
out
enter
inc
adc
push
adc
je
adc
xchg
les
repz
mov
inc
or
outsb
push
dec
insl
cmpsb
push
out
std
scas
inc
fnstenv
stc
stc
adc
xor
add
outsl
add
mov
push
sbb
jns
je
fwait
fwait
xor
pop
repnz
jno
das
add
adc
jae
sbb
pop
sbb
xor
adc
mov
cltd
add
or
xchg
fnstenv
mov
xchg
xor
sub
sbbl
cmpsb
int3
sub
xchg
add
xchg
pop
imul
or
jne
and
jg
pushf
test
adc
aad
dec
idivl
sbb
enter
mov
test
dec
push
lret
mov
mov
fwait
dec
jp
addr16
xchg
sti
adc
push
sub
xor
cmpsl
mov
push
iret
mov
out
stos
inc
pop
sbb
lcall
fistps
mov
cld
mov
fs
or
inc
sub
and
lds
cmp
outsb
hlt
mov
jg
fisttps
outsb
lea
and
fadds
pop
jge
add
jge
ss
sub
in
push
shlb
ret
lock
imul
xor
and
cmc
rcr
mov
int3
cli
out
sub
or
xchg
hlt
cmpsb
pop
lods
shl
push
push
dec
adc
push
js
lock
xor
mov
mov
push
lret
mov
dec
es
stos
jne
cmp
cmp
add
ljmp
sbb
or
pop
mov
shll
nop
dec
and
push
repz
stc
inc
push
sbbl
xchg
insb
aam
mov
hlt
movsl
mov
mov
imul
fistpll
lret
jmp
les
mov
in
pop
push
mov
movsl
jo
jb
cmp
cld
sub
pop
lds
pop
jmp
outsb
push
js
pop
cs
jne
popl
sub
and
cmc
jecxz
dec
inc
lods
mov
movsb
sub
popf
jns
loope
sub
jnp
lcall
mov
lret
sub
lret
jmp
mov
xchg
rcr
inc
js
xchg
orl
xorb
pop
fiadds
mov
iret
stos
sub
out
lds
jp
mov
fnstcw
mov
es
jp
and
mov
into
daa
lods
clc
daa
push
andl
jne
push
push
mov
test
shlb
push
in
xchg
sarb
enter
sbb
jecxz
pop
pop
sbb
xor
call
fucomip
adc
jg
shrl
shl
sbb
sarl
mov
stc
dec
inc
pop
jp
push
mov
push
push
orb
mov
pop
cmc
test
mov
dec
in
cmp
mov
in
cmp
xor
push
inc
mov
int3
insl
cmpsb
sahf
mov
cmp
mov
das
scas
fstpt
dec
cmp
mov
fldl
add
jns
in
mov
push
mov
inc
int
pop
mov
mov
jo
pop
xor
mov
jne
fisubrl
mov
cmp
mov
ss
fwait
scas
cmp
jo
mov
cmp
or
cmp
cmp
pop
pop
sub
fwait
test
sbb
sub
mov
ds
cmp
and
xchg
xor
add
loope
ret
jg
mov
mov
aas
lret
inc
or
pop
cmpsl
xorl
jmp
cmp
xor
sbb
je
mov
and
xor
ljmp
pop
add
in
lret
fistps
je
ud1
add
mov
cmpsl
sbbb
sbb
mov
popa
mov
pop
movsb
int3
adcb
jae
das
xchg
imul
mov
lods
pop
mov
mov
leave
fdivrl
dec
loop
cld
fwait
push
pop
jl
mov
bound
aam
sub
pop
jb
sbb
sub
add
sub
push
mov
mov
movsb
std
pop
xchg
repnz
cltd
cwtl
in
decb
dec
xchg
lret
and
lret
scas
mov
or
sti
es
adc
pop
mov
or
sbb
or
lcall
loop
test
mov
fdivl
mov
fnstcw
xlat
push
xor
mov
xor
pop
popa
lods
jnp
xchg
mov
add
mov
xchg
push
sub
jge
dec
cli
ljmp
int
mov
jo
cmp
ja
pusha
inc
out
scas
es
cs
int3
cli
cmp
dec
ret
adc
imul
jbe
mov
scas
imul
stos
fidivrl
mov
dec
pop
lods
int
test
and
cmpsb
sahf
jp
out
aad
adc
dec
mov
pop
out
mov
fldl
pop
out
out
jne
jmp
xchg
fnstcw
mov
movsl
test
xor
loopne
mov
adc
repnz
jae
in
add
xchg
pop
jg
cmp
scas
mov
imul
push
movsb
mov
push
fwait
mov
mov
into
ja
lds
and
out
addb
xchg
les
push
popf
out
nop
mov
mov
repz
push
xchg
fadd
sarb
xor
xchg
aas
dec
adc
subb
fiaddl
xor
icebp
mov
mov
int3
pop
fwait
jno
int3
sub
push
mov
push
jns
mov
fildl
inc
insl
or
sbb
loop
xor
add
rcrl
enter
add
or
push
mov
and
sub
in
addr16
pop
mov
pop
mov
xor
out
inc
repnz
sbb
sti
and
xchg
nop
xchg
cmpsl
xor
push
dec
ret
push
mov
outsl
sub
push
idivb
mov
aas
push
cmp
orl
in
sti
call
jno
out
sbb
jg
lods
ret
imul
adc
repz
sub
adc
inc
adc
iret
sbb
sbb
aas
push
xor
add
into
adc
enter
ja
aad
xor
bound
mov
cmp
sub
jl
and
mov
jecxz
pop
add
test
push
aam
lea
sbb
in
in
push
push
xchg
leave
stos
std
and
inc
push
subb
shll
outsl
mov
lods
cli
xchg
fists
outsl
lock
aas
jp
mov
ja
jle
jmp
jno
inc
dec
xor
sub
mov
xchg
add
dec
loope
xor
push
xor
mov
dec
lret
mov
test
xchg
mov
cmp
outsl
sahf
cmc
push
aad
aas
cwtl
shrb
rcr
or
mov
lea
std
pop
mov
testl
pop
packuswb
aam
sbb
arpl
lods
insl
dec
repnz
pushf
mov
xor
inc
cs
push
mov
inc
cmp
dec
pop
xchg
sbb
js
iret
sbb
mov
xchg
into
dec
jecxz
repnz
stos
mov
push
loop
and
fwait
bound
xor
jnp
stc
stc
inc
inc
pop
popa
push
out
out
sbbl
das
addb
add
add
fs
dec
sbb
push
ds
subb
fsubs
mov
add
push
js
push
lahf
mov
push
mov
sub
push
sub
xor
xchg
lods
in
pusha
mov
push
gs
clc
push
mov
rcl
push
xchg
adc
shlb
sahf
xchg
mov
adc
cmp
lret
add
mov
add
inc
lds
mov
iret
test
popa
mov
aaa
xor
je
add
fucom
out
xor
outsl
movsl
gs
pop
sub
and
fbstp
popa
stc
add
jmp
inc
pop
xlat
enter
cmp
shl
mov
jge
cmpsb
in
jno
inc
dec
jecxz
hlt
lock
addl
popf
push
imul
scas
dec
inc
icebp
dec
sbb
inc
fmulp
nop
xor
popa
ljmp
fsubs
xor
je
out
pop
mov
mov
in
dec
add
xchg
lahf
pop
mov
sbb
popf
pop
enter
jo
mov
push
outsb
xor
pushf
dec
ds
sbb
sub
das
insl
inc
xchg
push
pop
dec
out
jmp
adc
mov
hlt
loope
movb
cltd
sbb
hlt
lahf
mov
mov
aam
sub
scas
pop
jae
out
cmc
cld
dec
sub
add
dec
jge
pop
cs
mov
shrl
aad
mov
gs
sbb
cmp
mov
cwtl
jl
out
push
insl
orb
pop
int3
adc
stos
int
inc
xor
rcrl
ja
sahf
add
lods
clc
or
pop
add
out
and
cmp
xchg
clc
outsb
adc
cli
push
daa
mov
or
push
pusha
addr16
arpl
leave
sar
and
stc
jg
int3
repnz
add
xchg
fcmovnbe
pop
test
lods
fildl
popa
loope
sbb
bound
push
out
aam
sub
dec
loopne
test
xchg
loope
gs
out
mov
das
call
icebp
daa
xchg
cmp
dec
sarb
fwait
xchg
out
inc
inc
mov
or
std
jns
mov
in
dec
negb
sbb
add
dec
movsb
mov
pop
mov
cltd
push
repz
aas
inc
ret
addr16
mov
mov
daa
xor
in
ds
xor
bndldx
cmp
xor
sahf
xchg
fisubrs
cltd
cmc
cmpb
mov
pop
fisubrl
adc
cmc
xor
out
stos
rcrb
repz
mov
jmp
fstpl
mov
loope
cwtl
imul
out
in
dec
fnstenv
jl
ret
popf
mov
and
in
jbe
jnp
es
out
jmp
fwait
sub
add
inc
push
jnp
xchg
ja
inc
mov
dec
fsts
ret
lcall
cwtl
sbb
push
dec
mov
mov
cmp
add
sub
fstl
sbb
loope
and
sti
sub
mov
xchg
cmp
orb
sbb
xchg
daa
mov
sub
or
sbb
dec
insl
inc
inc
dec
xchg
pop
daa
cld
cmp
cmp
push
mov
or
aam
mov
jo
clc
test
movsl
lcall
push
xchg
xlat
sbb
ret
mov
adc
xchg
inc
xchg
jbe
or
out
out
outsb
xchg
addb
mov
leave
gs
sti
or
xor
xchg
sub
out
lret
std
addr16
mov
out
shll
stc
sub
pop
sbb
fwait
xor
hlt
xor
mov
mov
cltd
lock
stos
jecxz
push
in
pop
dec
jnp
sub
dec
arpl
pop
inc
sahf
jmp
stos
subl
xor
push
les
xchg
popf
lods
mov
cmp
lods
push
mov
mov
fisubl
mov
stc
leave
or
fldcw
sub
hlt
out
add
sbb
in
cmp
mov
add
cmpsl
out
js
mov
mov
loope
xor
clc
inc
ds
mov
mov
jno
and
cld
rolb
jbe
in
in
inc
sub
jl
inc
jmp
sti
aas
adc
ret
pop
pop
in
mov
cmc
std
inc
cli
ljmp
push
stos
jns
out
cmpsb
filds
dec
sbb
ret
hlt
sbb
jo
popf
inc
xor
mov
fidivrs
mov
icebp
aas
mov
push
mov
push
jo
mov
dec
pusha
inc
in
aaa
sub
xchg
cmp
repz
pop
scas
movlps
pop
and
cmpsl
sbb
lret
bound
lahf
jmp
push
or
std
lds
jle
push
pop
test
mov
cmp
add
xchg
lret
add
mov
icebp
pop
sbb
adc
cs
mov
jp
fdivs
lret
stos
inc
bswap
insl
cld
stos
xor
dec
pop
rcrl
sbb
std
fwait
cmp
push
add
subl
testb
mov
aas
in
push
adc
push
lcall
lds
enter
push
dec
lahf
jno
inc
movsb
mov
jae
pop
push
sbb
popa
dec
dec
push
lahf
sub
push
idivb
adc
jno
inc
test
ljmp
jg
iret
ss
jb
mov
or
mov
xor
push
outsl
les
test
xor
adc
sub
adc
push
push
pop
std
add
jne
iret
pop
mov
shrw
pusha
mov
icebp
clc
aas
cmp
mov
repnz
out
sbb
sahf
dec
xlat
jmp
mov
das
pop
xor
aad
mov
adc
xor
cmp
dec
cld
sarl
cmpsb
ds
int
mov
xor
icebp
sub
pop
loope
sbb
int3
sbb
lds
loopne
mov
push
fdivrs
adc
adc
iret
ja
out
sub
adc
cltd
push
pop
xor
insb
sbb
add
dec
ss
out
jbe
movsb
shll
ss
pop
inc
xor
sbb
fsubrs
dec
push
sbb
add
cmp
test
out
rorb
push
call
addl
shrl
aad
inc
jmp
jl
mov
dec
repz
sbbb
push
sbb
xchg
cli
and
cmpsl
and
sbb
insl
dec
cli
loop
sbb
or
cmc
mov
mov
pop
insb
leave
sbb
add
add
inc
lahf
push
add
push
or
clc
jne,pn
ret
addr16
pop
mov
jae
inc
loopne
leave
out
loopne
das
and
popa
and
movsb
imul
sub
scas
lcall
jl
or
push
repnz
pop
fsub
sub
cwtl
imul
lret
sti
jl
dec
fisubs
sbb
add
push
jp
mov
cmp
sti
rcrl
jae
mov
push
xchg
cmp
or
pop
sub
push
loope
fistpl
dec
popf
lcall
push
push
cmpsl
push
jae
leave
add
lods
setnp
cmpsl
xor
sub
adc
or
mov
push
ds
inc
cmp
cmp
shl
adc
rclb
mov
xchg
push
loopne
push
mov
int3
ss
lds
idiv
jmp
cmp
out
pop
xchg
sbb
jo
or
jbe
mov
xor
cs
lret
in
mov
rorb
movsl
pop
sub
aad
sbb
lret
iret
mov
jg
push
sub
jno
inc
and
loop
mov
bswap
pop
pop
mov
dec
imul
sub
cmp
sbb
insl
push
xor
addl
in
jle
sti
or
in
outsb
or
ja
cmp
aad
stos
dec
inc
cmc
mov
jge
out
xor
push
rorb
testl
test
ret
aam
sub
and
mov
test
aam
lret
mov
jle
daa
scas
addb
fmull
xchg
cmpsb
pusha
push
xchg
ret
into
cmpsl
jp
es
cmc
pushf
daa
or
jb
lock
mov
mov
out
cmp
mov
push
sbb
cmc
vcvtsi2ssl
mov
fcmove
rorb
cmpsl
jno
mov
sub
cmp
pop
adc
inc
mov
jge
shlb
fistps
loopne
cmp
inc
cmc
or
sbbl
roll
xor
imul
jle
fimuls
mov
mov
lcall
outsb
sarb
or
adc
pop
add
cli
adc
dec
jno
sub
cli
mov
sbb
mov
enter
inc
add
cmp
mov
inc
mov
outsb
mov
or
pop
mov
insb
push
xchg
add
loope
mov
adc
xchg
nop
movsb
sar
movsb
not
dec
push
insl
repz
in
add
imul
mov
inc
mov
jp
xor
xorb
inc
add
aaa
in
xchg
pop
jge
inc
ds
and
mov
pop
jns
push
cwtl
sbb
arpl
lods
jne
movsl
add
std
sub
adc
push
add
mov
mov
popa
or
into
xor
jmp
outsl
aam
fs
insl
daa
bound
mov
jl
test
popa
ret
jg
rcrb
lea
xchg
xchg
test
rcll
mov
scas
cmc
xchg
push
or
mov
mov
jns
ror
fadds
and
ret
mov
push
addl
cmp
pusha
ret
jae
mov
sub
inc
inc
inc
mov
dec
mov
dec
rcrb
in
push
add
jg
mov
cmpsl
out
push
test
dec
jg
inc
dec
add
xchg
add
push
outsl
lret
add
xchg
sub
sub
insb
mov
or
xor
divb
cld
pop
mov
xchg
inc
pop
test
int
xor
cmp
cmp
mov
test
pop
push
imul
lods
xchg
sbb
xor
inc
xor
mov
fcompl
xor
aad
push
adc
mov
add
cld
adc
mov
daa
push
xor
rolb
outsl
pop
push
sbb
inc
nop
sbb
aad
test
push
sub
cmp
mov
jmp
mov
dec
fildl
jb
lcall
test
movsb
mov
les
mov
inc
add
push
fs
push
arpl
insb
sahf
andb
repz
sbb
stos
xchg
pop
gs
inc
adc
leave
dec
outsl
dec
mov
int3
lret
cmp
fwait
mov
xchg
jecxz
push
rcll
jnp
ficoms
push
xlat
addr16
xor
test
cmp
sti
pop
aaa
jo
orl
fisttpl
jmp
adc
outsb
notb
cmp
mov
lahf
imul
and
xchg
call
das
out
xor
in
daa
xchg
or
fnstenv
jb
je
jle
mov
cmp
xor
imul
push
push
in
out
sub
add
das
jnp
pop
jne
insl
jecxz
mov
push
push
add
mov
sarl
jl
push
das
xorb
mov
lret
enter
js
fadds
loope
and
scas
mov
test
cmp
lods
ljmp
sub
and
mov
cmc
mov
call
rcr
cmp
pop
sub
mov
xchg
and
in
push
sbb
pop
fwait
lea
int
push
lea
stos
xchg
shr
push
outsb
rorl
in
shrl
std
fs
bnd
les
dec
xor
jl
pushw
jmp
sub
loopne
adc
imul
push
push
data16
mov
push
sti
sarb
xchg
fs
lahf
sbb
pop
std
dec
sbb
xchg
mov
cmpsb
fwait
mov
push
repnz
leave
mov
sub
or
hlt
lods
insl
std
sarb
out
mov
and
in
sbb
lret
xor
jae
add
push
fwait
seto
jno
push
stc
cs
and
xchg
and
cmp
mov
pop
adc
cltd
cltd
fcomps
aas
testl
imul
pushl
into
dec
outsl
cmp
test
mov
sbb
pop
sbb
pop
xchg
adc
xchg
jne
addr16
push
fwait
pop
subb
cmpl
sub
daa
lods
lcall
cmp
jl
add
sub
insb
cs
pop
loope
stos
pop
or
lods
cli
je
adc
out
movsl
pop
pusha
gs
in
adc
xor
lret
push
sbb
jns
mov
jg
mov
repz
jl
or
sbb
inc
mov
cmp
ljmp
addr16
adc
sbbb
or
lcall
sbb
pop
sub
pop
fadds
imul
mov
das
shll
inc
call
or
inc
pop
mov
sbb
and
push
jno
in
mov
push
into
xchg
jmp
int3
sahf
cli
inc
cmp
add
mov
lret
xchg
outsl
in
mov
mov
cmpsb
mov
sub
bound
push
cltd
and
add
push
pop
xchg
or
lods
and
ficoml
dec
into
cld
sarl
mov
and
mov
cmp
mov
insl
in
inc
outsl
mov
insl
std
jb
push
loope
mov
jno
cli
lcall
lret
or
outsl
ret
and
adc
xor
push
mov
mov
add
add
push
pushf
or
pop
mov
scas
sub
jb
sbb
movsb
dec
dec
xchg
xor
in
mov
xchg
faddp
lcall
add
mov
sub
mov
in
mov
xor
or
scas
repnz
pop
and
pop
cmp
in
pop
or
pushf
insb
jmp
cmp
xor
mov
xchg
inc
test
or
arpl
add
into
jge
xorb
stos
fdivrl
sub
xor
in
and
in
aad
mov
or
inc
cmpsl
adc
test
les
addb
cmpsb
jne
lahf
jo
nop
adc
call
test
mov
lds
mov
mov
test
stc
sbb
xchg
fmull
or
bound
push
adc
xchg
shrl
add
or
mov
push
pop
and
adc
pop
jae
mov
sub
rcrb
inc
clc
xchg
cmp
test
or
jo
xor
in
push
gs
out
fisubrs
push
jbe
popf
pushf
push
mov
or
mov
rorb
inc
inc
scas
in
sti
sub
ds
inc
pop
lahf
pop
fcoml
xchg
hlt
sbb
pushf
push
sbb
test
mov
inc
mov
adc
mov
add
je
call
jno
dec
inc
cmp
movsl
sbb
mov
mov
pop
out
cs
dec
movsl
ds
loopne
cmp
lods
in
mov
push
mov
dec
and
shll
dec
mov
mov
outsb
fs
push
popf
add
in
sub
insb
and
fimull
subb
and
inc
push
out
xchg
mov
pop
ret
jae
jnp
mov
orb
inc
stos
add
out
cmpsl
insb
push
sub
pop
add
das
stos
lea
lret
fwait
into
dec
adc
bnd
clc
je
and
hlt
push
mov
mov
or
add
xchg
into
insl
cmc
dec
sbb
xchg
filds
outsl
or
xor
xchg
sub
into
jne
iret
daa
out
pop
push
jg
or
or
jo
and
inc
fs
enter
aaa
xor
enter
aas
cltd
insb
fsincos
sbb
pop
sbb
out
inc
mov
mov
in
or
sbb
sbb
jecxz
rcl
mov
and
stos
mov
lcall
mov
daa
pushf
pop
inc
jl
jl
xlat
ljmp
inc
rorb
inc
xor
mov
ds
fiaddl
in
pop
ja
xor
pop
adc
cmc
pop
jl
fnstenv
clc
mov
adc
cmp
cmp
lret
cwtl
pop
test
mov
in
push
xchg
xchg
in
push
mov
mov
test
xor
movsl
aas
fistl
popf
aad
push
stos
jmp
and
rol
hlt
mov
xchg
js
in
out
push
adc
out
repnz
xor
rclb
aad
sahf
sti
shll
subb
xlat
icebp
sub
rorl
enter
test
stos
loopne
xor
fcmovne
orl
popa
outsb
dec
inc
dec
ljmp
mov
cs
sbb
jno
adc
ss
cmp
sbb
out
pusha
jnp
mov
mov
mov
cmp
push
cmp
dec
cmp
test
sbb
add
push
cmpsl
and
loope
aam
push
dec
lock
shlb
daa
stos
sbb
fs
xchg
xchg
and
clc
nop
pushf
enter
repnz
ss
out
sbb
sbb
lcall
mov
imul
subb
leave
jnp
mov
push
mov
add
fmull
adc
pop
sbb
pop
imul
xchg
out
push
iret
xchg
inc
sub
imul
pop
subb
mov
mov
xor
insl
mov
loope
mov
repz
jne
addr16
xchg
mov
mov
xchg
inc
mov
push
xor
cmp
test
test
lret
xchg
insl
sbb
aad
faddl
xor
cmc
cmpsb
add
push
out
pop
lods
repnz
push
daa
gs
mov
xchg
sub
pop
cmp
jo
stc
testl
sti
pop
iret
loop
mov
push
leave
sti
adc
inc
jmp
ss
outsb
mov
push
jge
sbb
cmp
inc
push
icebp
faddl
and
stos
inc
xor
loop
and
lret
add
xor
fisubrl
add
mov
mov
inc
cmpsb
mov
pusha
sub
adc
aam
xchg
push
adc
adc
inc
adc
xchg
inc
xchg
cmpsb
sub
test
add
cmp
test
rorl
and
push
and
test
addl
je
mov
jb
jbe
lock
ds
pushf
mov
call
and
mov
push
leave
cs
xor
sahf
cld
mov
jo
cmp
adc
dec
into
xchg
adc
out
dec
add
sub
xchg
hlt
mov
scas
or
and
cld
add
push
adc
sub
or
inc
jnp
push
jecxz
xor
push
aaa
mov
mov
lods
leave
arpl
and
mov
stos
mov
push
adcl
dec
fwait
rclb
nop
scas
js
dec
jmp
dec
ret
add
pop
xor
push
test
in
fwait
sub
repnz
out
push
adc
dec
hlt
sbb
jb
in
inc
xchg
mov
push
mov
sbb
pop
jo
xchg
adc
fdivl
adc
jge
shll
lods
xor
xor
mov
pop
or
mov
mov
mov
cli
mov
mov
cmp
jo
pop
jb
in
jp
push
sbb
sub
adc
adc
or
push
mov
jl
cmpsb
push
cmp
ljmp
and
icebp
push
hlt
pop
std
push
mov
jl
push
ret
and
xor
sub
dec
xchg
mov
pop
mov
imul
jae
mov
mov
into
cmc
dec
and
mov
leave
loop
pop
dec
sbb
mov
mov
dec
and
add
divl
pusha
enter
pushf
int
adc
mov
incb
push
mov
std
push
rorb
push
xchg
mov
test
mov
add
cwtl
mov
xchg
out
or
sub
add
pop
push
notl
mov
ds
pop
jecxz
lods
or
adc
test
mov
aad
stc
inc
or
or
jl
shll
jle
lea
ret
shlb
jae
mov
pop
fistpl
jmp
pop
mov
cwtl
pop
pop
daa
rcrl
inc
inc
push
dec
push
sub
movsb
xchg
stos
repnz
add
scas
and
xor
pop
mov
jl
sahf
out
cmc
ss
mov
jmp
push
jno
inc
add
jne
and
fsubl
fcomp
lcall
jb
std
stos
stos
jne
fldt
adc
xchg
or
cltd
dec
push
jmp
mov
or
adc
hlt
sarb
xchg
or
out
xor
cmp
cmpsb
pop
adc
je
sbb
roll
pop
and
mov
int3
negb
rcrl
push
daa
or
dec
jge,pt
scas
inc
jno
loopne
push
fwait
mov
pop
pop
mov
hlt
dec
mov
insl
sub
jge
xorb
cmp
hlt
mov
or
push
stos
inc
sbb
pusha
ja
xchg
aas
jb
mov
jnp
add
pop
adc
mov
pop
cmpsb
sbb
and
and
push
and
jge
xor
call
mov
cld
test
dec
xchg
fwait
and
jbe
and
push
in
add
out
push
dec
stos
outsl
inc
hlt
jne
jle
negb
push
cli
aad
xor
cmp
aas
lcall
loop
or
loop
xchg
cli
incb
cmp
jge
inc
lcall
or
es
xchg
adc
shll
mov
inc
leave
adc
and
cmpsb
fstpt
cmp
adc
cmp
ret
adc
inc
iret
add
pop
or
in
push
sub
xchg
in
out
dec
pop
fcoms
cli
adc
mov
enter
pop
sahf
cmp
sbb
jo
aaa
add
ret
mov
pop
repz
or
repnz
push
clc
mov
inc
fbstp
out
test
jmp
lods
dec
dec
jb
enter
push
dec
sbb
pushf
xchg
jp
or
sahf
inc
dec
xor
mov
sbb
popa
loop
jl
mov
outsb
in
inc
xchg
jbe
push
adc
aad
ret
jg
inc
sti
dec
lcall
dec
sub
sbb
mov
sbb
ftst
lret
xchg
push
sub
ja
sub
aad
pop
pop
mov
es
aam
test
push
icebp
cld
out
push
push
mov
jnp
jb
adc
xor
scas
fwait
adc
push
and
inc
jbe
and
cld
addr16
pushf
sbb
jecxz
xor
outsb
mov
call
pop
pop
cmp
stos
add
mov
or
inc
das
dec
ss
cmp
repz
stos
dec
pop
insl
add
sbb
popa
jmp
sbb
dec
xor
push
adc
mov
pushf
inc
ss
stos
mov
sti
jge
or
js
mov
cmp
out
mov
icebp
in
xlat
into
imul
popl
and
movsl
jp
sub
and
pop
dec
sub
testl
pop
xorl
or
js
mov
cmp
sti
push
test
in
fs
jo
xchg
sbb
cmp
sub
sbb
inc
xchg
sbb
inc
or
sub
mov
dec
lcall
comiss
or
daa
adc
ja
fdivs
jecxz
test
and
sarl
dec
lds
add
sbb
adc
adc
mov
outsl
cmc
bnd
test
out
shlb
mov
movsl
into
mov
aas
repz
mov
jnp
or
cmpsl
sub
pusha
or
stc
mov
push
loopne
cmpsb
sbb
xor
sahf
call
mov
sbb
fstl
xlat
cwtl
xchg
push
sbb
je
push
push
daa
sub
hlt
or
mov
push
pushf
or
fldt
push
pop
jb
stos
dec
ret
mov
in
and
clc
dec
cli
jns
pop
inc
or
lcall
adc
in
mov
pop
mov
aad
nop
loopne
mov
jb
jne
push
mov
sub
sbb
cmp
sbb
outsb
push
shll
adc
xor
xor
cs
inc
cwtl
adc
push
cmp
push
imul
test
lea
icebp
xchg
lea
les
pop
cmp
inc
add
inc
outsb
imul
or
jne
aaa
fbld
ror
pop
mov
sti
jp
jge
aas
mov
sub
insl
mov
mov
lods
mov
xorb
jne
and
sbb
insb
repz
ja
icebp
repnz
mov
pop
dec
xchg
jge
sbb
es
adc
mov
sbb
dec
adc
fsts
push
in
cld
xchg
lret
lcall
into
and
pop
or
xor
cmpsl
and
mov
aas
jl
vmread
xchg
imul
cmc
or
xchg
das
hlt
lahf
xorb
cmc
sbb
jge
xchg
enter
xor
cmp
inc
call
push
shrl
test
mov
popf
sbb
addr16
insb
sbb
shrb
dec
fistps
adcb
lret
mov
xchg
aas
cli
or
pop
cmpsl
and
lds
xchg
loop
ds
negl
adc
inc
inc
and
pop
or
pop
dec
xor
dec
xlat
lret
sbb
xor
add
sbb
clc
ret
subl
push
xchg
mov
in
jnp
cs
dec
inc
loopne
push
daa
mov
sbb
movsl
jne
imulb
pop
pop
add
rcll
push
repnz
mov
push
inc
sahf
in
and
push
scas
push
and
xorl
inc
jb
imul
or
dec
sbb
cmp
jb
xchg
in
cmp
jnp
xchg
dec
jae
das
xlat
lret
jnp
adc
add
push
aas
jo
ret
mov
push
outsl
and
jmp
push
xor
lret
xor
pop
aam
gs
mov
lahf
push
fistpll
loop
arpl
enter
aad
ja
stc
and
cmp
jo
stos
or
sarb
dec
sbb
lret
std
xor
outsb
fsubrl
jb
jbe
add
inc
insl
add
xchg
mov
mov
fs
inc
out
inc
cmp
subl
mov
sub
and
mov
dec
iret
jnp
mov
sbb
out
dec
jne
std
xor
cmpsl
int3
jmp
pop
jae
pop
popa
hlt
mov
push
popa
stos
cli
movsb
and
in
mov
fcomi
xor
or
sbb
les
mov
das
negb
stos
jbe
arpl
inc
mov
push
enter
loop
and
aad
popa
mov
sub
cmp
and
aad
int
sbb
stos
sti
sub
dec
cwtl
scas
mov
sub
sbb
push
sbb
xor
or
jne
and
mov
pop
sbb
jns
push
add
mov
in
shll
fisubrs
mov
sbb
fsubrs
pop
mov
jnp
adc
aam
jne
lds
pushf
outsb
fcoms
jp
shll
fisttpll
aam
test
int3
aaa
push
cwtl
cmpb
loope
mov
nop
jns
xor
repz
sbb
inc
insl
lahf
push
fsts
outsl
insl
jle
int
sub
andb
xchg
in
jbe
mov
dec
push
sub
lods
and
xor
xchg
push
jecxz
loopne
sbb
pop
jb
pop
out
mov
sub
inc
sti
push
dec
or
into
adc
xchg
mov
outsl
push
loope
cmc
insl
push
inc
ret
mov
loope
sbb
shll
mov
in
cld
cld
push
mov
push
imul
add
scas
orl
daa
enter
inc
push
sahf
sub
jns
pop
inc
xchg
and
mov
insb
dec
movsb
mov
aaa
jg
nop
push
push
xor
jg
or
mov
and
aas
fistpl
sahf
cmpsl
shll
or
pop
rorb
mov
dec
push
call
sub
in
sbb
sahf
testl
stos
lds
movntq
dec
xor
mov
gs
popa
or
inc
mov
pop
imull
stos
push
repnz
sbb
sbb
and
add
fwait
nop
jne
xlat
inc
fisubl
sbb
in
outsl
jo
xor
and
loop
daa
insl
dec
rorl
push
and
popf
xchg
in
add
inc
mov
int
mov
imul
and
and
js
jae
fwait
cmp
jns
fistpll
push
jle
popf
sbb
gs
pop
in
lahf
and
mov
pop
shlb
mov
in
addr16
push
ds
add
or
and
lret
mov
fsub
adc
cmc
out
icebp
mov
add
or
movsl
pop
cmp
in
cwtl
popa
cmp
cmpsl
cmp
add
dec
out
loop
jne
and
xchg
jno
add
jmp
imul
push
mov
outsl
les
jl
popl
and
loop
jecxz
sbb
wbinvd
fstps
and
stc
and
dec
fisubl
out
shl
push
lods
push
lahf
enter
in
scas
or
cli
popf
in
or
ret
mov
jge
add
mov
xor
cmc
xor
pmaxub
andl
enter
nop
dec
pop
xor
inc
iret
arpl
pop
jp
add
aaa
cli
add
inc
jno
cmc
or
xor
sub
jb
mov
out
xor
jge
sub
cmp
stos
pop
pop
jmp
js
movsb
shll
push
jb
sbb
mov
adc
dec
ret
int
movsb
mov
movsl
dec
push
xchg
mov
popa
mov
jge
sbb
into
fisubs
sub
mov
or
frstor
in
xchg
mov
psllw
dec
inc
xlat
and
inc
xchg
in
dec
mov
sub
rcr
out
insb
jnp
adc
or
and
iret
int
ja
mov
xor
cs
aam
outsl
dec
and
add
hlt
sub
cld
push
out
xor
or
inc
int
inc
ficompl
jb
add
add
pusha
addr16
mov
iret
in
shl
sbb
or
jae
fwait
cmp
sub
mov
sbb
iret
add
push
sub
out
xchg
add
mov
das
jle
pop
pop
das
add
daa
mov
cld
jge
ss
repz
jg
sbb
mov
iret
lods
fiaddl
mov
mov
ret
xor
adc
lret
ds
push
lock
mov
xor
cwtl
stc
or
add
in
scas
sahf
int
cmp
or
popa
xor
xchg
jl
sub
sbb
adc
cs
add
mov
pop
jnp
daa
push
cmpsb
and
push
daa
es
or
in
fdivr
pop
xor
loope
cmp
dec
fs
push
test
adc
push
lret
inc
push
mov
xlat
mov
push
loop
sti
test
and
fs
les
sarl
data16
xor
popa
mov
stos
sub
icebp
inc
pop
and
in
and
xchg
mov
int
lds
sbb
pop
or
js
push
xchg
fld
fs
mov
cmp
or
test
xor
mov
subl
sub
mov
lret
scas
cmc
dec
and
mov
movsb
push
pop
insl
jno
cmp
cli
popf
sbb
sbb
popf
fnstcw
jecxz
pop
cmp
shrl
mov
sbb
icebp
test
inc
in
pop
dec
jmp
push
enter
fs
push
sub
sub
sbb
leave
mov
mov
lds
xchg
jae
es
addr16
data16
or
adc
jecxz
mov
adc
out
mov
push
push
pop
jecxz
push
rclb
idivl
das
mov
push
mov
hlt
push
mov
pop
data16
push
add
outsl
and
call
je
xchg
pop
mov
fadds
xor
jb
daa
mov
ret
lods
jmp
pop
sub
icebp
ja
jmp
dec
cmp
sahf
out
jp
cs
ret
adc
and
adc
jne
das
jp
lret
mov
push
pushf
cmp
jl
aad
das
push
lret
in
lods
mov
lcall
in
or
push
jle
sub
lea
or
add
push
xchg
sbb
sbb
stc
test
pop
pop
pop
inc
fbld
xor
out
enter
push
aaa
outsl
add
jnp
daa
inc
mov
or
lods
and
cs
inc
adc
xchg
out
iret
jne
out
pop
cmp
sbb
xchg
in
mov
mov
out
cmc
fs
mov
sbb
mov
stc
or
pop
pop
repz
rolb
cmpl
jl
add
xlat
fimull
stos
cld
shr
jmp
xchg
ficompl
in
inc
mov
mov
xchg
leave
dec
cmp
fisubl
add
data16
pop
cld
cli
lock
movsl
push
movsb
dec
push
push
pop
mov
push
js
xchg
ljmp
leave
jge
int3
bound
mov
and
sub
nop
outsl
clc
cmp
mov
in
xor
cmp
outsl
push
and
push
fdivrs
cmp
sub
in
adc
popa
cmp
scas
sbb
mov
fimuls
and
mov
xchg
call
push
lea
mov
push
xchg
cld
adc
mov
outsb
aad
xchg
add
scas
dec
xchg
sub
sbb
repz
ja
call
fs
repnz
ja
sub
fidivrl
pop
xchg
mov
dec
sub
std
es
add
sub
jmp
out
dec
add
jge
sar
or
and
mov
mov
mov
inc
mov
lcall
cmpsb
inc
mov
xchg
loopne
and
int3
in
mov
adc
out
or
adc
shl
daa
les
sub
xor
cltd
sub
mov
jge
push
sub
push
mov
icebp
roll
cmp
bound
mov
push
loopne
xor
test
pop
sub
out
add
and
scas
fisttpll
push
lock
outsl
push
scas
in
xorb
test
sti
dec
or
int3
mov
loope
mov
and
cltd
jae
sbb
mov
mov
ret
lret
xchg
test
fmull
loopne
das
ret
mov
and
xlat
or
or
mov
pop
movsl
inc
mov
test
and
push
bound
shlb
call
push
jmp
imul
adc
stos
cmp
add
cmp
dec
sub
lock
arpl
and
ret
sbb
out
shll
lret
cmp
push
mov
mov
daa
shll
jns
cmc
adc
lret
pop
pop
imul
push
lret
push
mov
dec
push
insl
test
dec
pushf
and
out
mov
outsb
clc
mov
add
mov
movsb
fmuls
ja
insb
sbb
inc
push
sbb
rorb
jne
add
and
or
lods
or
cld
cwtl
xor
jbe
xchg
push
sub
sbb
push
lret
mov
add
popf
add
cmc
jo
sub
mov
daa
push
pusha
add
out
xor
mov
fcompl
or
int
stos
stos
xchg
test
xchg
and
or
sahf
nop
in
jge
adc
inc
inc
andl
loope
testb
rdpmc
pusha
push
js
imul
xchg
push
sbb
jecxz
test
jae
lret
mov
push
push
es
jbe
mov
out
adc
xor
mov
icebp
lahf
inc
stc
push
push
and
jb
cmp
cld
push
mov
mov
xchg
xor
xor
jmp
sahf
pop
les
push
imul
ret
mov
pop
call
mov
mov
mov
pop
bound
jo
leave
xor
insb
mov
adc
xor
pop
mov
xchg
mov
in
xlat
aam
xchg
fimull
push
dec
jae
or
into
mov
fadd
scas
sbb
pop
or
bound
gs
loopne
sub
and
mov
sub
clc
mov
cltd
xchg
inc
or
stos
mov
mov
faddl
dec
std
adc
icebp
scas
push
repz
pop
out
mov
mov
test
and
inc
hlt
loopne
outsl
fiaddl
mov
insb
jmp
jl
jg
sti
arpl
iret
inc
mov
into
dec
into
lods
xchg
fdiv
mov
out
xchg
fcmovbe
out
mov
mov
and
loope
xchg
rdpmc
inc
inc
ja
das
cmpsb
popa
scas
dec
adcb
loopne
inc
jp
in
xlat
cmp
pop
mov
ret
outsl
dec
mov
int3
sbb
ret
fs
inc
or
or
sbbb
sbbb
sub
sub
loope
push
mov
mulb
lcall
repnz
dec
sub
shlb
dec
dec
jge
sti
fs
call
in
push
push
icebp
test
cs
pusha
maskmovq
testl
add
xchg
lods
dec
addr16
push
sub
ret
ret
dec
lods
loope
rcrl
rolb
pop
mov
lret
iret
sub
dec
pop
insb
outsb
aaa
mov
pop
add
ss
mov
pop
outsb
jne
movl
jno
push
orl
out
mov
int3
popa
jb
in
mov
mov
notb
out
adc
pusha
rolb
mov
cmp
repnz
cld
xchg
fcompl
lods
ljmp
scas
scas
sub
dec
cwtl
pop
cmc
xor
inc
lcall
dec
movsl
mov
test
je
push
stc
ret
stos
xchg
insl
pop
pop
stos
aas
push
popa
leave
ficoms
pop
ret
aaa
xchg
into
adc
pop
xlat
call
mov
aam
pop
mov
push
mov
aam
mov
sub
jp
ret
inc
push
fistps
aam
xchg
gs
mov
in
xchg
test
mov
xor
dec
dec
loop
or
les
and
mov
ja
lret
xor
lahf
mov
mov
lods
out
fbld
mov
sbb
adc
inc
mov
sub
inc
mov
adc
lcall
mov
mov
xchg
xchg
adc
xor
pushf
call
dec
xchg
out
sbb
adc
test
sbb
fwait
lret
push
outsl
rcll
cmpsb
cmp
dec
fistpl
cs
rol
jp
pop
es
dec
pop
sbb
hlt
and
jmp
shl
int
test
sbb
sub
add
lds
and
test
add
mov
arpl
bound
popa
out
out
mov
or
push
xchg
aas
inc
lahf
add
addr16
fbstp
test
push
sub
jne
jg
push
fsubr
push
notb
cmc
push
and
add
mov
in
stc
fldt
push
inc
repnz
and
popa
cltd
ret
subl
pop
and
and
js
ss
mov
jnp
cmp
repnz
cmp
mov
mov
push
cwtl
cmp
dec
mov
add
jnp
inc
jno
pushf
mov
fnstcw
imul
call
dec
inc
sahf
push
or
pop
sbb
sub
pop
inc
or
aad
jbe
pop
jl
int
sti
movsl
mov
mov
fistpl
pop
fdivrl
sub
test
test
inc
cld
jb
stos
scas
fs
out
dec
sbb
in
xlat
jo
out
xor
cmp
sarl
mov
jg
pop
movsb
dec
push
js
mov
daa
xor
pop
daa
pop
outsl
les
in
imull
jo
mov
add
pop
and
adc
lea
inc
sahf
pop
aaa
sbb
clc
inc
stc
adc
loope
pop
push
or
call
repnz
daa
xor
cmp
push
cmc
xchg
cltd
sub
mulb
push
adc
jbe
adc
sbb
iret
enter
int3
imul
fdivrs
test
outsb
mov
das
sub
inc
lahf
jl
jecxz
and
adc
divl
das
dec
and
aas
test
jb
into
cmp
fnstsw
rclb
add
lds
xor
xchg
mov
ret
lahf
test
shrl
cmp
sub
js
mov
add
push
mov
mov
clc
mov
shll
mov
xchg
cmp
jae
pusha
popf
aad
ret
xor
imul
push
xor
push
insl
push
push
and
lcall
popa
inc
add
fsubrp
rcrb
outsl
sub
pop
mov
adc
adc
fildll
cmp
and
sbb
adc
fdiv
arpl
cli
sub
fbstp
or
add
arpl
imul
jl
mov
test
cli
jae
shl
pusha
fdivrs
sub
pushf
insl
mov
inc
dec
sbb
push
call
push
sub
xchg
loopne
jge
mov
and
jle
xor
jbe
mov
lcall
jnp
lahf
or
jb
or
ljmp
pop
subl
mov
subl
into
cli
int3
mov
cld
xchg
xchg
lret
cmp
adc
test
pop
les
xchg
jne
push
cmc
cli
aam
jg
negl
sbb
xchg
sarb
movsl
jo
in
inc
movsb
icebp
xchg
out
dec
repz
je
mov
stos
cmpsb
iret
mov
ucomiss
les
lcall
pop
or
lods
loopne
jmp
dec
lcall
js
add
cs
nop
into
inc
xchg
mov
and
jecxz
pusha
dec
push
mov
das
ss
imul
jge
mov
mov
or
add
mov
aad
adc
out
push
hlt
sub
scas
lahf
mov
push
aad
xor
dec
fcomip
bound
es
icebp
push
shlb
or
fistl
inc
sbb
push
jbe
repnz
hlt
rolb
mov
daa
mov
fadds
cs
into
fidivrs
inc
jg
sti
cmpsb
dec
ss
mov
lret
or
mov
cmpsl
xchg
cmp
repnz
add
xchg
pushf
push
dec
cmp
imul
ss
dec
mov
sarl
fdivrp
fstpl
or
inc
ja
pusha
mov
adc
or
inc
mov
daa
adc
in
rcrl
into
xor
sahf
jns
loope,pt
data16
es
xchg
fistpl
push
lgs
add
sbb
imul
adc
in
je
sbb
sti
push
mov
fdiv
lahf
stos
sub
es
sub
xor
jae
jp
mov
sub
imul
test
lret
rcl
push
or
inc
in
inc
jg
xor
shrl
sahf
xchg
inc
xorl
mov
mov
xchg
pop
enter
push
stc
mov
shrb
insb
mov
push
inc
or
in
mov
push
cmp
gs
inc
ss
and
rcrb
mov
mov
pop
mov
adc
adc
ja
jbe
jmp
and
mov
mov
add
mov
add
in
loope
push
inc
or
lea
dec
sarb
jb
push
bswap
adc
mov
in
fwait
mov
mov
add
mov
test
xor
stos
or
hlt
nop
mov
into
aad
sbb
xchg
push
mov
fiadds
cmp
cmp
jmp
push
cmp
aad
dec
sbb
push
cmp
je
xchg
in
cmp
cs
jmp
jmp
aad
gs
jle
outsl
mov
mov
xchg
dec
imul
xchg
add
jge
mov
sub
js
dec
sbb
aas
rcl
mov
xor
mov
fcom
or
call
sbb
sub
lcall
mov
in
or
xchg
imull
dec
pop
dec
sub
cmp
data16
enter
sub
mov
xorl
xchg
push
pop
lahf
push
rcll
pop
icebp
mul
push
dec
dec
ljmp
xchg
pop
stc
fidivs
sbb
shll
arpl
mov
dec
sbb
xor
adc
loopne
mov
lahf
outsb
pop
loope
inc
mov
ja
or
and
sub
cld
adc
sbb
inc
gs
pusha
imul
or
lds
icebp
test
push
xchg
push
fstpt
ret
jns
pop
add
sarl
push
out
xor
das
jb
frstor
lcall
scas
add
jo
into
mov
mov
clc
mov
mov
ja
sub
lret
js
sarb
fdecstp
inc
cmp
adc
pop
pop
and
and
int
fcomps
rol
xchg
sub
cmpsb
mov
in
jno
mov
dec
mov
rclb
shlb
scas
sbb
loope
cli
xchg
push
test
arpl
scas
arpl
sbb
add
push
or
mov
mov
pop
int3
jge
adc
pop
pusha
mov
nop
lds
nop
aad
lock
cli
inc
jl
mov
push
divl
lock
mov
fcompl
add
jg
loopne,pn
mov
test
xchg
bswap
jb
push
clc
dec
and
jp
fucom
mov
insb
lret
ljmp
pusha
cli
lock
push
nop
mov
push
cld
xchg
mov
pop
out
mov
xorb
sbb
ja
aaa
xor
cmp
out
fidivl
jl
mov
stos
xchg
or
cmp
roll
test
jo
dec
inc
js
add
iret
scas
lds
ljmp
mov
pop
pushf
dec
jmp
adc
adc
or
inc
insl
jb
shrl
xchg
xchg
cmpsb
mov
sub
xor
pop
dec
pop
inc
ss
dec
pop
lret
cmpsb
cmpsl
fsub
sbb
push
pop
enter
popw
mov
inc
arpl
pop
lahf
mov
inc
dec
push
imul
adc
rolb
cmp
cmp
movsl
and
jecxz
inc
leave
popa
insl
ss
aas
jns
xchg
or
jne
mov
negl
pop
mov
out
ud1
movups
es
mov
in
dec
fnsave
call
add
dec
shr
sbb
pop
dec
mov
jb
stos
pop
adc
mov
inc
push
fldenv
xchg
in
les
bsf
pop
xlat
repnz
loop
push
add
cld
jmp
pusha
into
cmp
pop
cmc
daa
push
fcomps
jb
cmp
xchg
mov
pop
out
shl
loopne
fisubl
repz
out
push
ret
addr16
mov
xchg
out
or
inc
adc
adc
jmp
loope
ret
loope
fisubs
push
sbb
jae
loope
mov
xorb
mov
xchg
int
pop
popa
repz
cmp
movsl
inc
cmpsb
cmc
or
inc
fstps
push
mov
mov
jo
or
jp
test
xchg
pop
fwait
push
push
and
sahf
shll
sbb
out
shrl
fs
int3
icebp
xchg
iret
sub
into
fnstcw
push
xor
lcall
jns
cmp
ss
in
out
jle
std
push
jmp
sbb
lods
arpl
pop
jb
adc
pop
jmp
xlat
lcall
pop
jns
sub
sbb
outsl
adcb
subb
xor
dec
push
adc
decl
dec
cmpsl
xor
xorb
fwait
sbb
into
push
xchg
in
pushf
inc
rol
push
mov
cli
into
pop
je
loopne
add
mov
cmp
add
mov
stos
mov
dec
adc
inc
sub
inc
cltd
jae
clc
movsb
xchg
call
pushf
clc
bound
pop
fimull
out
sub
jmp
fcoml
mov
test
or
pop
xor
fmul
cmp
ret
enter
enter
sub
nop
pushf
inc
movsl
inc
sub
mov
jnp
mov
cmp
rorb
pusha
stos
loope
mov
stc
arpl
int
adc
stos
jbe
mov
push
outsb
xchg
sub
adc
adc
dec
mov
out
call
call
test
mov
push
in
ljmp
pop
test
push
clc
fs
notl
mov
jo
mov
and
inc
and
adc
sub
mull
pop
popw
out
loop
adc
mov
ret
mov
sarb
outsl
dec
push
adc
icebp
mov
xor
xchg
sub
pop
mov
push
push
push
mov
aad
jns
push
jne
mov
push
dec
fwait
jo
xchg
dec
dec
push
mov
rcrl
sub
fwait
mov
mov
pop
xchg
sbb
push
xor
xchg
push
mov
and
cmp
outsb
mov
xor
jl
add
xchg
mov
lret
dec
inc
inc
ret
pusha
push
outsb
sub
mov
jnp
sub
xor
mov
add
movsb
repz
dec
xlat
xchg
sti
aas
or
inc
push
add
push
add
lcall
test
scas
arpl
outsb
sub
aam
mov
out
xor
pop
adc
int
leave
mov
les
ds
je
call
adc
mov
dec
and
faddl
ljmp
xchg
or
aam
cmpsl
cmc
or
cmp
dec
fstl
push
cmp
lea
xchg
and
les
scas
shrb
fbld
aam
in
push
stos
add
sbb
pop
hlt
orb
sub
loopne
xchg
lret
add
sbb
cmc
loopne,pt
shll
dec
fcompl
xor
stc
aaa
mov
pop
push
xchg
andb
dec
cld
cmpsb
mov
xchg
cmp
aam
call
pusha
jle
cmpsl
push
out
fcompl
cmp
or
out
xchg
add
jne
pop
pop
stos
xor
sub
in
lahf
call
fidivrs
outsl
jmp
hlt
ljmp
or
shrl
pop
mov
cmp
inc
sar
inc
jge
adc
inc
xor
hlt
push
pop
adc
and
mov
pop
add
gs
dec
add
data16
fdivr
lods
adc
pop
cmp
pop
in
dec
loopne
nop
into
adc
xor
jg
test
out
pop
inc
cmp
ds
int
xchg
subb
fs
pop
mov
cmp
lea
adcl
mov
and
sub
mov
jmp
cltd
inc
xchg
mov
push
cld
xor
ret
in
mov
mov
xorl
and
mov
xor
dec
outsl
jo
les
push
mov
inc
push
xchg
xchg
out
mov
xor
xlat
mov
movsb
aad
mov
scas
jne
xchg
lods
fildll
sub
lds
dec
scas
stc
and
xor
fistl
shlb
mov
adc
cs
aas
cmpsb
cld
outsb
lock
inc
pop
xor
sbb
daa
lods
mov
ja
movups
lret
xchg
fs
dec
xchg
sarl
jecxz
imul
mov
ja
pop
mov
std
and
sub
add
into
add
aad
mov
jecxz
pop
cmp
jecxz
sbb
dec
mov
sarb
paddb
jae
xchg
dec
xchg
testl
mov
pop
push
mov
popa
inc
fildl
es
mov
push
and
int3
out
lcall
inc
inc
pop
jne
scas
ss
mov
dec
xor
daa
mov
fnstenv
sahf
ja
push
dec
scas
pop
dec
out
mov
xor
in
jmp
or
in
rorb
mov
cld
insb
loope
push
mov
sub
sbb
push
iret
in
sbb
sub
mov
sbb
cmp
lret
movsb
and
inc
fs
add
jl
xchg
mov
mov
nop
xchg
js
mov
movsl
sub
inc
mov
fistps
shlb
lods
inc
arpl
inc
imulb
pop
lea
xchg
repz
mov
ret
mov
or
lods
inc
int
xor
pop
sub
mov
sub
push
jae
iret
push
clc
mov
mov
into
jle
cld
cld
in
mov
loope
addl
inc
adc
xor
ja
and
and
call
sub
mov
mov
lahf
in
scas
cmp
inc
das
fdivr
jmp
xor
imul
cmpsb
or
mov
inc
dec
inc
out
adc
lock
mov
addr16
adcl
test
cmp
lods
aaa
out
jb
mov
add
xchg
dec
mov
dec
arpl
test
scas
mov
mov
cld
rol
jle
icebp
xchg
mov
pop
add
pop
pop
mov
sub
ss
push
int3
rclb
cli
icebp
loop
imul
fcmovbe
and
xchg
pop
ds
mov
mov
imul
out
and
je
daa
lcall
ljmp
test
iret
sub
and
cmp
js
pop
subb
mov
mov
mov
jno
aam
push
mov
popf
lahf
addr16
scas
in
cmp
cmp
push
sub
inc
mov
mov
sbb
mov
pushf
sbb
or
jbe
jmp
sbb
pushf
test
jmp
idivl
mov
xor
lret
loopne
mov
aas
sti
xlat
push
shlb
cmp
add
nop
divl
jae
push
pop
adc
xchg
jp
dec
rorb
jecxz
dec
jns
push
inc
mov
add
cmp
adc
cmc
lock
inc
loopne
jno
mov
and
sti
lds
sub
and
fisttps
shl
repnz
movsb
ja
dec
data16
imul
jp
daa
jne
mov
xor
out
jb
jg
add
gs
pop
ss
fs
mov
rcrb
inc
hlt
in
push
daa
mov
adc
inc
inc
scas
ss
fnstcw
into
dec
adc
inc
or
mov
out
jns,pn
push
enter
lret
mov
mov
dec
cmpl
stc
scas
sub
cmp
mov
into
push
push
call
sbb
fwait
test
rorb
cmp
sbb
outsb
into
clc
int
fucomip
push
and
dec
test
cmp
jbe
mov
and
enter
xchg
insb
jno
mov
loopne
push
shll
jne
pop
fcomps
fldt
mov
inc
xchg
cmp
mov
sub
clc
inc
and
outsb
sbb
pop
test
push
dec
loopne
sub
sahf
mov
pop
insl
add
xchg
sub
or
and
and
movsl
pusha
popa
lea
pop
adc
fidivl
fisttpll
sbb
shlb
push
mulb
adc
out
xchg
adcl
enter
mov
jo
mov
imul
mov
xor
das
js
pop
push
pop
repz
inc
jmp
mov
jns
lcall
jmp
dec
mov
pop
js
inc
inc
insl
aaa
adc
inc
aam
sbb
xchg
pop
cwtl
popf
cmp
popf
fistl
popf
sub
lods
outsl
xlat
ds
jae
iret
or
mov
inc
jg
push
out
in
xlat
mov
test
dec
inc
sbb
icebp
je
iret
cld
jge
std
mov
xor
rcll
in
adc
popf
aam
pop
add
jge
or
mov
lahf
incb
pop
xor
shrb
rcrl
jns
test
outsl
mov
or
js
gs
fcomps
cmp
mov
xchg
push
sahf
push
mov
lods
mov
mov
adc
xor
pusha
adc
xor
jnp
push
dec
int3
jae
stc
sti
out
les
inc
xchg
xor
xor
cli
cli
dec
sbbl
sti
dec
mov
aas
test
xor
scas
push
in
fdivr
mov
xor
cmpl
dec
aad
lea
roll
mov
lock
mov
and
inc
xor
cmpsl
mov
jb
pop
es
push
imul
sub
repz
test
cmpsb
or
pushf
scas
add
ret
aad
sti
fdivr
loope
dec
push
sbb
mov
aad
dec
cmpsb
dec
loop
das
xor
leave
pushf
ljmp
out
out
aam
int
clc
lret
imul
jmp
jge
addr16
fs
fwait
inc
adc
add
stos
ds
les
aam
in
push
stc
aad
test
in
clc
sub
jmp
out
fists
mov
jb
jge
lcall
pusha
loope
daa
xchg
pop
stos
mov
or
sti
mov
arpl
les
add
cmp
pop
xchg
push
sbb
cmp
sahf
loop
stos
out
pop
and
hlt
pop
pop
adc
enter
and
ds
mov
mov
and
xor
inc
repnz
sbb
imul
fs
or
cmpsl
lock
lea
adc
push
nop
rorb
clc
fldenv
in
aas
loop
inc
pop
iret
inc
pop
jb
and
shl
push
xor
add
inc
leave
ret
cs
mov
xor
lcall
dec
inc
les
es
pop
pop
les
scas
pop
dec
ret
dec
fistpll
in
sbb
je
or
outsl
add
or
addl
iret
jp
jl
insb
shlb
iret
aam
jns
jns
test
jno
push
insb
mov
cmp
fildl
xchg
mov
cltd
clc
imul
sub
ret
je
loope
outsb
imul
lcall
or
inc
inc
lcall
mov
loope
or
jne
insb
cli
aad
mov
cmpsl
sub
adc
xor
push
arpl
push
mov
jg
sbb
data16
jp
shll
pop
jns
xor
test
and
ret
adc
xchg
dec
or
ds
enter
cmp
add
pop
pop
or
lret
push
adc
aas
jbe
sub
std
adc
outsl
out
lret
popa
outsl
gs
lods
bt
jns
sbb
xor
out
mov
repnz
jge
test
daa
subl
and
xchg
sahf
cltd
inc
pop
xchg
adc
xor
adc
rclb
jno
lcall
xor
lds
pop
mov
push
les
repnz
lret
pop
push
loope
ret
cmc
and
cmc
shl
out
rorl
lret
adc
arpl
jecxz
mov
inc
push
dec
xchg
adc
xor
int
push
pushf
hlt
sub
ret
dec
xor
stos
fs
mov
sub
jne
xorb
pop
mov
jo
rorl
loope
test
leave
xchg
mov
mov
hlt
int
sub
std
andb
mov
pop
mov
and
mov
mov
dec
das
aaa
sahf
cmp
mov
jg
add
das
int
icebp
dec
and
test
and
sbb
or
call
ljmp
mov
cmp
and
mov
adc
lea
leave
std
clc
add
cmp
mov
ljmp
into
pushf
jp
inc
and
sub
adc
add
rclb
jl
jmp
es
in
xor
mov
push
mov
or
insb
sub
cmp
scas
lods
call
sbb
xchg
loop
dec
inc
xlat
mov
and
daa
adc
in
lcall
test
dec
in
add
arpl
adc
adc
pop
push
dec
int
or
stc
sbb
push
js
and
es
mov
cmp
cld
ljmp
mov
pop
aaa
pusha
dec
xchg
inc
into
push
cltd
cltd
lret
dec
adc
scas
in
lahf
mov
and
xor
cltd
jo
dec
and
int
and
stos
loop
mov
orb
fldcw
pop
pop
jne
mov
cwtl
ja
jg
shrl
jns
jl
hlt
add
or
jl
lret
es
inc
sbb
aaa
je
imul
mov
stc
inc
dec
testb
loop
divb
adc
sti
or
fldl
xchg
dec
enter
sub
dec
xor
push
jge
xchg
cli
dec
add
mov
mov
negb
inc
inc
cwtl
sub
mov
mov
roll
test
push
adc
cld
jg
mov
and
cmp
xor
jo
pop
dec
sub
and
cwtl
int3
imul
push
or
lods
testl
jnp
cmp
or
push
std
cmc
or
daa
int
cmp
shl
lds
cmc
inc
lcall
mov
lods
jne
js
xor
into
addr16
stc
adcb
mov
add
dec
add
arpl
and
jg
jge
mov
dec
lret
nop
sbb
pop
xor
sub
stos
and
dec
pop
add
sub
cmpsl
push
sub
leave
sbb
fcmovbe
adc
sbb
cmc
mov
jge
fucomip
aad
mov
and
xor
push
leave
xlat
data16
das
jno
mov
jnp
xchg
fmul
test
xchg
fists
dec
gs
ljmp
loope
lret
cmc
pop
adc
test
xor
mov
mov
addl
inc
loopne
cs
lock
jo
jb
outsb
movsb
das
fidivs
inc
jp
inc
lock
aad
push
push
or
ror
mov
stos
cld
mov
dec
mov
add
push
xchg
sti
and
or
mov
xor
test
jecxz
lock
popf
in
test
pop
sub
pop
add
inc
fcomps
xor
sub
cmp
js
test
sub
ficoms
int3
jecxz
jo
loope
pop
add
sbb
inc
leave
xor
xchg
sarl
and
jne
mov
mov
mov
repnz
scas
push
push
sub
test
add
stos
jbe
cmpsl
ficompl
pop
adc
jo
orl
inc
pop
push
arpl
mov
mov
dec
push
mov
ret
test
mov
dec
cwtl
sub
adc
fists
inc
sbb
fisttpll
jbe
popa
pushf
ja
inc
in
test
ret
in
ja
inc
das
push
dec
mov
pop
sbb
popa
sbb
inc
sbb
gs
lock
call
cltd
fs
pop
inc
in
push
sti
jae
addl
ja
jle
jns
lahf
lahf
xchg
pop
movsl
fidivs
add
or
sti
xorl
xor
pop
hlt
jo
and
fsts
xchg
sbb
sub
ja
pop
adc
in
cmp
insb
cmp
sub
adcl
fistl
jg
rcrl
pop
xor
inc
sub
mov
xor
adc
es
cmp
and
push
in
pusha
push
mov
rcll
pop
daa
rcll
out
mov
lods
fsubrl
mov
mov
dec
ret
cmp
sbb
dec
pop
cmp
sub
jecxz
aam
mov
cmp
imulb
hlt
out
adc
sahf
xchg
fs
dec
dec
add
test
pop
mov
sti
cltd
insl
dec
jecxz
fldt
imul
xchg
sbb
loope
xchg
cmpsl
cmpsl
adc
and
xor
jge
dec
cld
hlt
fnstenv
xchg
cld
mov
xlat
sarl
mov
stos
jmp
cmp
pop
repz
push
testb
stos
jnp
dec
outsb
pop
stos
fisubs
cwtl
xchg
insl
nop
lods
mov
xor
orl
inc
xor
mov
jns
daa
xchg
shlb
movsb
xchg
xchg
jmp
imul
nopl
test
inc
dec
sbb
idivl
out
daa
xor
loop
and
mov
aas
loop
mov
dec
cld
iret
pop
bound
mov
sub
pop
or
pop
xlat
popa
pop
pop
xor
pop
repnz
cmpl
pop
xlat
xor
cmc
push
movsb
js
leave
outsb
add
mov
stc
stos
iret
and
sub
sub
cs
push
das
stc
fwait
loop
add
arpl
sub
inc
xor
push
push
pop
jmp
mov
adc
iret
cmpsl
pop
mov
or
jge
add
repz
aaa
xchg
loope
outsb
and
scas
add
mulb
and
les
jae,pt
out
std
mov
and
sbb
adc
hlt
push
mov
hlt
dec
jge
push
mov
and
adc
repnz
popf
les
in
frstor
xchg
outsl
lods
aaa
pop
inc
mov
ss
add
repz
loop
rol
lret
and
enter
fmul
mov
in
dec
mov
loope
inc
adc
xor
jle
or
pop
scas
cmp
push
cmpsb
int
cwtl
xor
mov
divl
mov
xlat
add
nop
repnz
xchg
or
xchg
mov
lret
cmpsb
jae
gs
insl
gs
fidivrl
mov
sarl
sahf
pop
in
repz
rcll
xchg
sahf
hlt
sub
scas
jmp
mov
and
hlt
out
jne
push
push
dec
jle
adc
add
out
sub
pop
add
jns
lahf
nop
cli
out
cmpsb
jecxz
aas
xorl
fcompl
and
divb
es
loop
jb
out
fisttpl
inc
frstor
jmp
sub
jae
add
mov
flds
cmpsb
shrl
faddl
xor
icebp
call
mov
or
mov
movsb
rorb
sbb
mov
sbb
mov
mov
rcrl
fisttps
jno
pop
rorb
xchg
push
sub
pop
push
test
adc
and
pop
jns
leave
xchg
mov
jnp
and
rcrb
out
test
das
in
sub
clc
mov
inc
inc
stc
loop
dec
xchg
imul
inc
push
dec
cmp
sub
mov
inc
aam
pop
cmp
push
pop
inc
push
lret
cmp
std
push
jle
fwait
push
scas
mov
jbe
popa
aam
dec
out
xchg
mov
in
imul
adc
aas
sbb
test
cmp
or
xchg
or
xchg
cmp
cwtl
dec
mov
repz
into
pop
cmp
imull
mov
call
xlat
outsb
add
insl
adc
das
clc
or
cs
cmp
daa
adc
leave
pop
add
fs
adc
push
incl
addr16
push
push
pop
fidivl
aas
sub
in
shll
mov
mov
adc
dec
test
push
xchg
mov
xor
test
jbe
pop
inc
ss
mov
jl
cmc
add
and
loop
or
cs
mov
jbe
lods
add
mov
xor
test
xor
push
push
out
mov
mov
xchg
in
je
aaa
jge
and
mov
push
out
ds
in
pop
xchg
push
pop
ja
cs
jg
cld
enter
ss
jbe
xor
mov
leave
sbb
bound
inc
insb
bound
loopne
aaa
daa
mov
daa
ds
ja
push
pop
mov
sbb
xchg
cmpsl
xor
test
jg
or
into
xchg
mov
jae
push
pop
fadds
jae
nop
mov
add
movsb
jae
js
adc
xchg
fnstcw
dec
dec
fdivl
subl
aaa
lds
call
xlat
mov
xcrypt-cbc
cmpsl
xchg
je
in
fsubrl
jno
dec
sub
xor
push
repz
mov
repz
sbb
orl
jecxz
pop
adc
mov
lods
aad
test
sub
shll
les
mov
or
inc
or
mov
mov
or
push
cmp
clc
lock
mov
notl
loopne
xchg
cld
jb
adc
mov
mov
push
cld
mov
mov
out
adc
movsl
pushf
fbld
cmp
mov
xchg
outsl
test
arpl
sub
repz
ficoml
ret
notb
xorl
scas
sbb
cmp
mov
aas
fists
and
push
addr16
sbb
int3
mov
mov
add
lods
addb
imul
pop
out
pop
mov
aad
or
movb
push
or
inc
push
mov
dec
dec
aam
outsl
nop
mov
das
cmp
ficoms
ret
lods
loopne
test
and
mov
dec
fistl
les
inc
in
out
test
adc
popa
mov
addr16
xchg
mov
test
ja
inc
gs
push
fstp
xchg
push
subb
ficomps
aam
adc
ljmp
adc
lret
jmp
add
shl
repz
test
mov
dec
cmp
dec
mov
ret
stos
mov
mov
movsl
repz
clc
mov
cltd
inc
adc
add
mov
mov
pushf
adc
xchg
adc
lret
cli
in
dec
and
xchg
stos
test
xchg
jno
iret
or
sub
adc
xchg
sub
cmp
jp
pop
push
fldcw
inc
enter
in
inc
ja
sti
sbb
rcrl
dec
pop
cmp
add
inc
bound
push
jge
enter
sub
push
dec
mov
xorl
jbe
dec
xor
pop
ja
cmpsb
sahf
or
sbb
pop
jge
sbb
jmp
dec
pop
pop
push
and
loopne
jb
sarl
int3
jp
xorl
xchg
push
xlat
ret
mov
aas
and
js
outsb
push
outsb
stos
imul
sub
mov
push
scas
ret
mov
push
inc
adc
dec
mov
xor
icebp
xchg
rcll
lret
jle
jnp
lds
pop
test
call
sub
push
out
repnz
xchg
movl
nop
sub
dec
sbb
cmp
jp
and
loopne
sub
fdivrp
je
mov
stc
push
in
movsb
jb
gs
bound
mov
clc
pop
jle
inc
xchg
adcb
xchg
or
in
aaa
outsb
mov
push
andb
or
dec
mov
jno
test
pop
mov
pop
js
pop
icebp
push
comiss
scas
xor
push
mov
add
scas
shrb
aaa
jae
xchg
push
push
pop
dec
or
cmp
repnz
mov
loop
sub
lret
sbb
lock
fcoml
scas
cwtl
leave
xchg
pop
push
cmp
jg
fwait
push
pop
rorb
dec
xchg
aad
fs
dec
mov
adc
xchg
into
mov
div
inc
hlt
test
inc
inc
xlat
fucomi
adc
lcall
add
lods
call
gs
loopne
ret
daa
mov
aaa
jl
movsl
mov
hlt
fucomi
jnp
int
call
xchg
mov
pop
add
rorb
jle
xor
rcrl
andb
cmp
bound
mov
and
addb
es
in
add
xchg
jle
jae
fmul
pop
inc
popa
mov
fs
pop
mov
lds
dec
shlb
cmp
push
and
adc
xor
pushf
or
repz
imul
sub
and
sub
outsl
mov
adc
lret
divl
shll
cli
popa
xor
mov
mov
mov
cwtl
cmpsb
mov
and
push
mov
aas
iret
mov
fwait
shll
sti
int3
dec
daa
mov
movsb
mov
push
or
loop
dec
lea
add
xchg
jl
loope
pop
sub
jle
dec
pop
inc
adc
cltd
sub
push
and
repz
in
xor
cwtl
xchg
push
mov
xor
in
sbb
andl
inc
shlb
cmp
sub
cmp
push
jbe
dec
movsb
mov
and
push
push
out
push
cld
fildll
mov
mov
stos
loope
cld
mov
shll
push
xchg
lock
mov
sti
jecxz
mov
mov
pop
inc
mov
mov
and
in
add
adc
mov
jl
xchg
jp
push
imul
inc
and
adc
test
rorl
pop
add
xor
mov
loope
mov
ret
ljmp
enter
mov
call
mov
mov
loope
mov
outsl
loopne
insb
pop
dec
cmpsl
int
std
fldenv
fimull
jp
repz
lcall
cwtl
das
out
sub
xlat
das
aas
dec
jecxz
in
daa
insb
push
xor
mov
aaa
stc
xchg
leave
push
inc
mov
in
and
fstpt
icebp
xchg
lahf
das
andb
push
fs
mov
cmpsb
sub
hlt
jp
sub
pop
movl
shl
sbb
faddl
imul
inc
inc
ss
dec
xchg
lods
cltd
das
fisttpll
push
lods
or
xor
fiadds
dec
bound
je
int3
je
pop
outsl
shlb
movsl
movsl
pop
ret
inc
push
add
inc
sub
sbb
dec
or
sbb
es
cmp
cmc
je
mov
mov
icebp
data16
xor
jno
jb
mov
fistps
stos
mov
mov
mov
fs
mov
lds
fwait
rclb
ss
dec
bound
xor
pop
sub
out
cli
sub
and
pop
pop
xchg
mov
cmp
jmp
dec
sbb
mov
mov
lods
andb
sbb
jle
inc
pop
jl
loopne
mov
mov
in
sub
in
and
adc
jmp
mov
adc
cmp
jnp
arpl
adc
adc
cmp
inc
repz
scas
mov
push
aas
jo
cmpb
shrl
cmc
jmp
sbb
sbb
test
cmpsb
mov
insb
mov
inc
push
outsb
lret
aad
xor
bound
ret
test
mov
repz
inc
scas
and
lahf
aam
add
push
inc
fistl
mov
pop
xchg
les
xchg
push
aas
xchg
lds
push
add
ja
shll
rcrb
cmpsb
push
jp
and
lock
nopl
das
adc
push
dec
faddp
out
jp
xchg
sub
bound
sub
mov
mov
cld
xorl
jb
or
lea
dec
jo
cltd
je
xchg
adc
sub
inc
push
jne
insb
or
or
daa
lea
mov
movsb
sti
int
gs
mov
cmc
or
in
mov
popf
inc
push
or
rcl
xlat
cmp
lods
jl
popf
and
inc
in
rcrl
dec
test
stos
add
inc
sub
pusha
add
jne
inc
inc
or
scas
mov
mov
gs
fmuls
das
add
data16
mov
pushf
pop
popf
pop
xor
loopne
jno
push
ss
push
and
add
cmp
not
mov
inc
mov
cmp
sub
jne
fstpt
inc
add
sahf
lods
insb
pop
or
dec
sbb
cmp
bound
dec
xor
inc
mov
jecxz
cmpsl
mov
out
adcb
mov
xchg
out
fisubrs
xchg
cmp
inc
dec
inc
jmp
jl
fs
xor
push
cmpsl
mov
jle
jmp
aaa
cltd
repnz
mov
mov
icebp
test
or
out
psrlq
mov
adc
mov
lea
push
adc
mov
pop
mov
and
sti
push
mov
xlat
and
xchg
inc
mov
rcrb
cmp
inc
adc
jge
imul
aam
iret
push
mulb
movsb
je
xor
in
imul
or
loope
adc
push
lods
push
je
jg
pop
loopne
xchg
lods
fsts
or
lds
lods
pop
ljmp
movsb
mov
lds
and
mov
push
jl
dec
mov
dec
daa
dec
jne
xchg
scas
pop
push
daa
arpl
sbb
inc
roll
push
inc
aas
int
incl
fbld
and
stos
pop
mov
or
jae
adc
pusha
lds
inc
std
mov
mov
adc
jge
repz
cmpsl
lea
lea
lds
add
shlw
clc
shrl
sbb
hlt
popa
test
xlat
filds
and
hlt
add
int3
push
pop
push
and
push
or
ja
sub
and
lock
fisubrs
sub
mov
fimull
mov
cmpl
xor
and
inc
sbb
sbb
cld
add
inc
push
push
ficompl
push
fldt
xchg
sub
dec
icebp
dec
lods
cmp
mov
dec
lods
jp
rcrb
cmp
inc
sub
test
sub
jp
leave
sub
jnp
hlt
add
shr
push
je,pt
xchg
hlt
lret
jg
pop
ret
mov
inc
clc
stc
jb
jg
mov
pop
enter
or
mov
gs
sub
insl
xchg
std
sti
lcall
inc
insb
sub
or
adc
rcrl
xacquire
mov
push
xor
icebp
cld
pop
jne
sub
pusha
enter
push
das
nop
mov
test
mov
push
dec
cmp
insl
dec
and
xor
push
in
and
rolb
outsb
loopne
xchg
jns
xchg
mov
xchg
ljmp
adc
jnp
push
sub
mov
insl
imul
fcomi
dec
bound
jno
dec
adc
lcall
iret
flds
jmp
popf
jp
mov
loop
imul
in
xchg
shrb
lcall
jns
mov
lahf
loopne
imul
add
loop
add
cmc
out
data16
inc
add
js
push
loope
shll
mov
out
xchg
inc
adc
int3
jo
ficoms
pop
lret
jl
or
pop
add
xlat
insb
leave
int3
test
outsb
lret
pusha
out
int3
pop
lahf
xchg
shl
xor
xor
iret
or
data16
les
in
add
or
std
sbb
popa
jle
pop
rclb
mov
pusha
popa
cmp
jmp
mov
sbb
lods
scas
xchg
adc
scas
imul
shrb
cmp
dec
dec
mov
sahf
cli
inc
sub
popa
mov
dec
xlat
insl
jnp
xlat
add
and
addr16
movsb
in
imul
jge
mov
pop
xor
adc
or
fistpl
not
sahf
adc
out
push
cmp
sbb
aas
loope
fmuls
pusha
add
call
sub
aam
std
stc
jecxz
scas
push
popf
jl
aad
dec
cmp
scas
out
leave
aam
pushl
xlat
sahf
fs
fs
call
cmp
mov
and
out
dec
int
add
dec
xchg
pop
mov
dec
jmp
pusha
rcrl
loop
out
push
or
push
mov
push
pop
mov
loope
loope
cmc
mov
cld
popa
jo
dec
jl
fadd
jecxz
dec
sub
jecxz
mov
push
fwait
test
scas
push
mov
dec
sub
jbe
js
sub
pop
mov
loope
outsl
xchg
sarb
out
push
add
sub
jp
int
jns
divl
lock
jecxz
rcl
push
inc
push
and
inc
out
lahf
std
push
outsb
xor
fnstenv
pop
jecxz
ss
das
sarl
pop
out
xchg
add
outsb
lahf
pop
cwtl
addr16
lcall
xchg
add
pop
and
repnz
dec
xor
iretw
stos
push
adc
pop
and
add
mov
xchg
adc
adc
cmp
les
add
push
dec
mov
mov
or
enter
jge
iret
sbbl
sbb
jbe
sub
push
push
sti
dec
mov
push
mov
outsl
cltd
shrl
or
cmp
shrb
cwtl
add
pusha
call
pushf
push
sub
rcr
cmpsl
test
pop
cmpxchg
icebp
aam
lahf
or
sub
stos
jae
add
sbb
sti
xchg
gs
test
add
mov
scas
sub
lret
ret
inc
dec
xchg
js
jb
sub
or
fldl
roll
lods
stos
stc
mov
aas
xor
inc
enter
sub
test
daa
loopne
ljmp
test
xor
mov
inc
inc
cmp
dec
push
in
adc
xchg
fisubl
int
mov
pop
adc
pop
dec
adc
outsb
shr
gs
jecxz
push
mov
mov
arpl
aad
pushf
test
pusha
test
xlat
dec
cmp
dec
scas
cmc
mov
adc
sub
outsl
rorl
pop
push
addb
mov
lods
and
mov
adc
push
mov
imul
xchg
mov
lcall
adc
push
mov
enter
loop
test
inc
sub
scas
add
test
xlat
add
shl
cld
sti
movsl
icebp
out
lcall
es
add
pusha
mov
sub
adc
sbbl
mov
sbbl
out
sbb
cmpsb
mov
shll
cmpsb
mov
enter
or
mov
ss
mov
and
in
push
xchg
sbb
add
xchg
outsl
pop
decl
mov
mov
mov
dec
xor
or
or
mov
jle
test
mov
mov
idivl
adc
sub
mov
addl
dec
mov
push
push
lcall
stos
loop
movsl
hlt
js
subb
mov
cli
push
outsl
jnp
mov
mov
addl
jo
les
out
or
xchg
lds
cmp
adc
inc
xchg
adc
rcll
mov
push
push
inc
or
shlb
lcall
addr16
pop
inc
insb
or
sub
imul
inc
mov
subb
popf
lea
nop
repz
dec
scas
movsl
add
aad
sti
cmp
add
stos
push
xor
or
or
jno
lcall
cmp
xchg
or
cs
push
int
push
or
sub
or
fists
sarb
lahf
push
loop
mov
out
pop
mov
mov
sbb
pop
cmp
mov
or
fsubrl
sahf
mov
sub
mov
aad
push
dec
nop
mov
mov
insb
ret
jne
mov
pop
dec
movsb
rorl
scas
out
scas
mov
bound
cld
adc
jmp
push
out
sbb
and
rorb
gs
push
push
pop
push
mov
mov
test
jbe
arpl
gs
dec
fwait
out
dec
jle
and
inc
mov
mov
add
xor
sub
lock
divb
aad
add
mov
das
and
out
cmp
std
mov
nop
xor
cmpsl
dec
insb
mov
dec
int3
mov
fwait
insl
jo
popa
loope
adc
push
call
icebp
mov
in
fwait
repnz
shrl
mov
ret
js
les
shrb
xchg
negb
mov
out
scas
dec
push
add
xor
jo
fimull
xchg
adc
mov
loope
mov
xor
stc
dec
xor
push
mov
and
push
mov
mov
mov
mov
pop
push
lahf
mov
adc
data16
xchg
xor
cli
addr16
or
call
cmpsb
mov
stos
dec
test
jge
push
test
add
bnd
cmp
pop
nop
shrl
mov
pop
dec
shl
mov
aas
xor
leave
push
jge
dec
sub
in
movsb
sbb
ja
sub
pop
nop
popf
mov
aam
jnp
mov
pop
repnz
leave
push
sbb
xchg
lods
ja
test
rolb
adc
cs
push
enter
je
sbb
cmpl
test
stc
add
lcall
sahf
inc
or
sub
mov
fidivl
lahf
leave
jle
sbb
sti
fwait
test
pop
mov
pop
dec
pop
adc
stc
mov
fucom
jle
sub
xor
pop
and
movsl
or
loop
and
testb
mov
push
and
xor
inc
pop
enter
mov
cmp
xor
and
fdivrs
pop
test
mov
jbe
lcall
inc
or
iret
cmp
mov
loopne
cwtl
xor
sbb
and
sub
sub
lahf
and
push
xor
fisubrl
push
jmp
push
into
and
es
es
mov
js
loopne
pop
push
sbb
adc
push
add
sbb
xor
sarl
arpl
outsl
call
cmpsl
lret
lahf
std
cmpsb
cld
mov
arpl
xchg
jae
sahf
mov
and
adc
xrelease
inc
or
shll
sub
inc
notl
lods
jmp
lods
lea
mov
lods
sub
mov
xor
fmul
aas
xchg
movsb
and
inc
pop
test
rcl
rorl
add
mov
imul
movsb
popf
imul
in
das
mov
out
adc
sbb
cmp
jns
loopne
into
lret
jns
into
xchg
les
pop
out
in
mov
mov
sub
call
pop
xchg
and
ds
ljmp
mov
stos
leave
xchg
iret
cmpsb
adc
ja
inc
sbb
push
add
test
jecxz
jae
scas
ljmp
movsl
jno
dec
jmp
jle
pop
outsb
sbb
loope
out
aad
call
mov
ret
xor
lret
addr16
bound
jne
mov
lock
pop
outsl
cmp
mov
stc
lcall
mov
pop
ja
push
jno
dec
aaa
fsts
xchg
push
adc
xchg
jge
aas
push
out
nop
mov
sbb
icebp
fcmovne
into
imul
sbb
mov
push
cmp
xchg
push
icebp
add
pop
ds
les
jp
ljmp
mov
sbb
arpl
iret
push
int
sbb
sbb
mov
pushf
iret
mov
icebp
cltd
fs
xor
ds
mov
gs
cltd
push
mov
xor
adc
ljmp
mov
repnz
push
lods
push
pop
ret
sar
push
xchg
inc
pop
movsl
lcall
pop
fildl
gs
add
mulb
pusha
or
dec
mov
into
imul
or
leave
jle
xor
sub
out
movsb
push
ret
mov
mov
pop
fdiv
je
lds
bnd
mov
push
notl
jbe
xor
inc
jbe
les
in
mov
fsts
leave
mov
mov
mov
dec
outsb
push
and
mov
dec
sarl
stos
shrb
into
arpl
ljmp
mov
sbb
jb
xlat
cmp
je
cmp
mov
aad
mov
fsubrs
cwtl
sub
sub
cli
fs
outsl
add
aad
adc
pushf
jp
jl
dec
push
movsl
into
ffreep
adc
inc
fwait
mov
pop
push
test
jp
aam
insl
aam
fstps
js
loop
mov
dec
jnp
mov
fiaddl
adc
mov
ret
ja
mov
outsl
push
jns
test
adc
xchg
pop
fs
decb
cmpsb
test
cmp
add
call
adc
test
or
sbb
std
bound
lds
pop
out
mov
cmp
pop
std
stc
xchg
ljmp
arpl
pusha
pop
mov
mov
nop
test
sbb
jg
lcall
mov
lods
dec
stc
out
xchg
insb
bound
pop
popf
into
popf
jo
movb
xor
xchg
jb
jbe
fisttps
sbbb
ja
adc
loope
pop
les
mov
ret
pop
or
dec
mov
mov
cmp
jno
sub
inc
cmpsb
dec
sub
add
leave
je
test
push
sub
pushl
ss
nop
sbb
scas
addr16
int3
inc
and
sub
inc
cli
pushl
mov
out
mov
jge
stos
jge
jno
jne
das
and
mov
jb
push
inc
ljmp
mov
add
pop
jge
js
sub
pop
sbb
and
out
xor
in
pop
cld
hlt
icebp
leave
or
jp
aas
aad
lods
enter
mov
inc
lock
iret
jae
insl
adc
imulb
lret
fbld
into
int3
xchg
xor
cmpsl
fiadds
lret
divl
mov
cltd
push
push
mov
dec
stc
push
inc
and
mov
and
sti
push
hlt
sti
ds
shl
push
mov
arpl
mov
pop
out
jle
stc
xorb
stos
aad
sub
shll
cmc
es
sbb
inc
test
imul
and
jg
test
nop
push
cmc
mov
mov
out
dec
add
push
inc
lds
fs
sahf
push
pusha
cmp
outsl
int3
cmpsb
cmp
daa
dec
pop
xchg
test
sub
popa
xchg
sarl
push
lds
jmp
and
push
inc
leave
mov
sbb
and
scas
icebp
jle
pshufw
xor
shrl
mov
mov
inc
scas
out
mov
lds
push
push
outsl
popa
inc
fldt
cmp
lock
aam
inc
dec
mov
aam
cwtl
scas
dec
movsl
into
and
aad
adc
stos
push
cmpsb
or
cmp
dec
push
mov
mov
or
mov
pop
dec
and
jp
sub
add
cmc
push
jge,pn
lcall
jmp
lret
xor
adc
push
push
outsb
cmp
call
nop
xchg
add
pop
mov
test
incl
daa
std
jp
pop
cs
in
pop
sarb
push
fimuls
ja
nop
mov
pop
fsubs
stos
mov
lods
sbb
movsb
push
add
popa
dec
add
dec
clc
dec
data16
dec
jmp
dec
push
lret
add
mov
xlat
mov
mov
and
jno
fidivs
std
jg
arpl
arpl
mov
dec
mov
aam
and
jns
push
cmp
xor
pop
lods
pop
xor
test
lahf
and
cmp
xor
add
sub
xchg
mov
hlt
sub
mov
es
adc
jb
in
jns
and
fistl
test
repz
cmp
mov
stc
sbb
push
test
scas
push
in
jbe
sahf
sub
or
jnp
lahf
fcomp
sbb
mov
sahf
mov
xor
stos
sbb
push
sbb
adc
and
mov
jns
rorb
adc
mov
aas
das
push
dec
jg
push
cmpsb
inc
ss
dec
or
jo
in
sbb
sbb
data16
sub
mov
imul
mov
mov
and
xchg
nop
push
rcll
ds
pop
xchg
jne
repz
test
xchg
sbb
int
sbb
mov
sbb
repz
push
push
int3
fcomp
insb
pop
sti
xchg
in
fucomip
outsl
mov
aaa
sub
mov
in
popa
outsl
push
insb
lcall
in
cs
cwtl
lret
int3
sbb
cld
cmc
inc
outsb
test
mov
cmc
xor
ror
mov
adc
sub
jmp
add
jb
mov
scas
test
sbb
jle
lret
int3
pusha
sub
adc
data16
fimuls
or
push
cmp
jge
adc
xor
inc
movsb
push
add
mov
dec
cmp
jp
movsb
xchg
aas
or
stc
mov
cli
cmp
xor
es
pop
pop
and
jb
add
or
popa
fnstenv
and
daa
pop
push
movsb
sarb
cmc
xchg
push
pop
shlb
mov
xor
xchg
xchg
xor
xchg
enter
push
pop
fisttpl
outsb
shlb
pop
inc
rorl
jg
pop
std
iret
leave
lock
sti
and
and
scas
inc
test
loop
inc
inc
sub
sub
loopne
not
lahf
or
pop
push
daa
cmp
outsl
jb
mov
inc
inc
cltd
mov
cmpsl
and
sbb
mov
lcall
and
add
xchg
je
icebp
cmc
cmpsl
orl
dec
in
or
pushf
fwait
lretw
fstps
inc
mov
daa
sbb
inc
int
mov
mov
cmp
xchg
or
fucomi
or
lea
or
imul
push
add
cmp
call
xor
mov
cmpsl
stos
mov
cwtl
ret
shrb
or
popa
shrl
jge
xorl
sub
xchg
pop
test
dec
int
pop
add
push
in
mov
xchg
mov
jns
ret
jo
mov
fwait
insl
cmp
mov
jle
xor
xor
mov
popf
mov
aas
popf
xorl
adc
xchg
cmp
mov
mov
mov
jbe
fildll
mov
xor
addr16
ljmp
jecxz
mov
dec
sub
sub
jnp
adc
jb
jo
rclb
mov
js
cmp
adc
inc
les
pop
clc
addb
inc
cmp
fstl
cli
shl
mov
imul
mov
push
sub
adc
cs
push
dec
mov
jbe
xchg
sub
jl
sbb
xchg
dec
sti
popf
or
lods
xchg
and
addr16
out
mov
rcll
ret
mov
xchg
in
jno
adc
outsb
inc
notl
mov
push
mov
insb
lods
fwait
dec
out
xor
fcompl
dec
pop
inc
inc
inc
js
movsl
sahf
xchg
stc
mov
outsb
mov
xor
ret
test
mov
out
pop
or
in
insl
pop
insb
add
stc
dec
mov
mov
pop
mov
insl
sub
jp
pop
xchg
jl
xlat
stos
mov
and
in
add
out
push
sbb
mov
mov
scas
pop
push
in
jl
stc
out
fstps
jl
xchg
andb
dec
jne
jmp
sub
mov
cmp
add
inc
ljmp
andb
das
insb
test
mov
mov
pop
subb
pop
hlt
jns
repz
sbb
jo
pop
push
pop
adc
adc
ljmp
ret
pop
add
andb
gs
mov
sbb
pop
lcall
xchg
or
or
jne
mov
loopne
dec
arpl
push
sub
jmp
add
fwait
pop
in
ss
push
jnp
xor
and
jb
jbe
add
std
pop
mov
std
sub
loop
mov
inc
pop
dec
int3
mov
call
dec
popf
xor
pop
cmc
mov
pushf
adc
imul
mov
pushf
cwtl
mov
clc
test
and
cld
xchg
xchg
or
xchg
push
sbb
cmp
lods
cld
ret
cmp
inc
loop
mov
scas
push
add
mov
pusha
cs
mov
sbb
add
push
jmp
jge
sub
sub
inc
ss
movsb
out
and
inc
sbb
frstor
nop
jecxz
and
jg
pop
mov
lcall
stos
imul
xchg
repnz
movsl
sbb
cmpsl
push
ret
mov
mov
pop
loopne
nop
fcompl
and
jae
movsb
rolb
fs
cmc
jle
aam
add
aas
dec
add
mov
mov
mov
push
pop
pop
insb
lret
mov
push
test
cwtl
mov
inc
xchg
pusha
pop
xchg
jge
sbb
iret
jbe
sub
fst
mov
js
orb
push
sbb
push
in
xchg
adc
xor
push
dec
loope
and
add
fsubrs
sub
loopne
in
enter
push
sub
add
dec
xchg
ds
das
repz
pop
xlat
mov
int
xchg
scas
mov
hlt
mov
adc
push
out
jg
push
in
rcll
mov
or
xchg
cmp
cmp
jg
mov
mov
push
mov
cwtl
dec
int3
je
movl
fdivrs
lret
das
dec
rcl
test
insb
stos
lods
sbb
aaa
mov
call
in
movsb
fisttpl
dec
mov
test
jnp
push
xor
jns
sbb
pop
xchg
jno
aaa
and
shll
push
fldt
icebp
iret
cltd
inc
sub
fldl
mov
lock
mov
push
sub
mov
test
mov
pop
xchg
cmpb
outsb
sub
xchg
jmp
sub
or
dec
shrl
or
mov
sub
jno
sbb
sti
repz
adc
xchg
pop
push
fwait
stos
std
outsl
sub
push
cmpb
adc
mov
jno
iret
adc
cmc
enter
pop
iret
es
rcrb
and
aad
scas
sbb
scas
mov
imul
jnp
push
and
push
gs
clc
mov
jno
or
pop
jbe
cmc
push
jmp
xor
flds
jb
movsl
xlat
neg
shrb
xor
idivl
jl
mov
cmp
dec
andb
hlt
cld
push
imull
sub
jl
shl
jbe
mov
fwait
mov
icebp
ds
push
jb
and
xor
stos
sbb
jge
daa
jecxz
sbb
adc
fists
sub
jge
repz
jmp
jb
lret
push
mov
xor
dec
ficomps
dec
sahf
sub
jb
pop
xchg
cmp
xchg
outsb
mov
mov
push
lcall
xchg
lcall
outsl
push
sbb
aad
negb
pop
sahf
mov
jle
push
repz
jae
or
inc
test
sub
push
sub
lods
lock
and
cmp
outsl
adc
loopne
sub
roll
mov
in
clc
insl
loope
shrb
mov
test
daa
hlt
jbe
jmp
adc
addb
fwait
test
pop
sbbb
pop
mov
adc
mov
inc
movsl
gs
imull
mov
inc
and
mov
fists
jo
sub
rorb
shlb
xchg
push
div
fwait
mov
xchg
xchg
fsincos
lds
in
cmp
outsl
std
mov
pop
rcrl
popa
xchg
cs
adc
inc
pop
repnz
push
mov
cmp
sar
js
push
fs
jp
mov
and
pop
cli
cmp
popf
rcl
test
dec
add
push
js
and
mov
push
sbb
and
adc
imul
mov
add
add
ret
add
aam
or
xor
sbb
xchg
jo
pop
int3
mull
outsl
xchg
in
lods
sbb
loopne
testb
pushf
xchg
movq
popf
in
dec
cld
jecxz
out
pop
shrb
xchg
ja
mov
rclb
push
sahf
sahf
mov
scas
hlt
cmc
lods
fwait
imul
hlt
sbb
sbb
mov
add
xor
rorl
les
dec
gs
cmpsl
xor
int3
xlat
dec
xchg
cmpsl
arpl
pushf
sbb
mov
cld
push
pop
or
xlat
sub
fs
int3
pop
sahf
xchg
jg
sbb
push
dec
jecxz
push
mov
adc
jns
sbb
imul
dec
mov
adc
out
in
and
push
pop
inc
sub
dec
mov
cmc
cmp
push
sub
xlat
adc
loopne
iret
test
aam
ret
pop
jnp
test
mov
adc
or
lods
inc
push
pop
stos
and
mov
pop
gs
in
mov
add
lret
sti
iret
mov
addr16
xchg
popf
xchg
xor
sbb
mov
mov
adc
scas
cld
jo
aaa
sbb
xchg
lahf
push
adc
pushf
adc
std
frstor
cmp
daa
fstpt
out
sub
push
mull
mov
or
dec
mov
add
stos
in
pop
cmpsl
iret
inc
fwait
decl
xor
std
pop
ret
mov
insl
mov
add
push
shl
inc
mov
mov
dec
mov
les
push
mov
out
jno
outsb
sub
sub
xchg
outsb
cld
cmp
lods
cmpsl
mov
fisubrl
mov
mov
dec
mov
sbb
dec
ds
mov
adc
push
cmc
jb
push
cmpsl
mov
scas
in
outsb
das
rolb
test
outsb
les
in
scas
inc
insb
push
xchg
jg
push
cmp
imul
cmp
adc
lock
jb
and
xor
scas
mov
inc
call
cs
mov
subl
jno
das
xchg
and
dec
mov
mov
aam
pop
xchg
lcall
aas
dec
adc
mov
pop
push
cmp
loop
and
xchg
std
outsl
pop
aaa
in
xchg
sub
rorl
das
add
dec
cmp
add
mov
lods
ret
inc
in
stos
xchg
ret
add
xlat
sbb
das
push
push
pusha
sbb
fwait
jmp
pop
push
mov
rcrb
mov
mov
aas
scas
cmpsl
push
mov
mov
xlat
inc
xchg
out
fwait
add
mov
aam
lret
insl
fisttpl
andb
data16
or
xor
xchg
movsb
mov
cmc
jmp
adc
xor
pop
jno
sub
mov
arpl
fildll
stc
lret
mov
inc
jnp
dec
gs
jl
iret
mov
xchg
jno
sbb
dec
xor
pop
cmp
push
jmp
cmp
xchg
pop
clc
mov
push
sbbl
aas
or
cmp
cs
cmp
je
repz
mov
daa
test
cld
and
sbb
pop
test
inc
test
pop
push
insl
jo
xor
xor
js
les
mov
std
pusha
xchg
mov
mov
push
jmp
inc
xchg
pusha
mov
imul
or
je
mov
cs
js
or
pop
les
push
mov
xor
add
xchg
or
inc
aaa
pusha
xchg
dec
out
lcall
add
pop
movsb
pop
mov
je
add
or
pop
xor
jle
jbe
and
ficomps
sub
mov
push
cmp
xor
fsubrs
sub
or
out
push
or
push
or
shrl
ja
shrb
xor
xor
push
mov
adc
lea
pop
dec
data16
enter
lcall
sub
pusha
jne
in
push
mov
xchg
and
push
aad
fwait
pop
mov
imul
xlat
enter
movsb
jae
adc
scas
adc
pop
jmp
scas
ja
jb
dec
insb
popf
aaa
mov
mov
mov
mov
push
lds
gs
scas
mov
repnz
pop
iret
mov
std
sub
inc
lock
bswap
clc
cmp
into
add
mov
mov
repz
add
xlat
pop
xor
andl
inc
lcall
cltd
xor
movsl
sar
lahf
mov
mov
mov
mov
fstl
jle
push
dec
xor
sub
mov
xor
and
sbb
aam
or
add
mov
push
scas
scas
xchg
clc
sub
loop
jbe
or
xchg
sub
mov
lahf
neg
dec
add
out
or
pop
or
aas
add
xchg
jle
jbe
sub
mov
cmp
add
pop
or
jl
arpl
lcall
jg
outsl
ret
push
outsb
loop
sti
inc
bound
mov
cmc
je
cltd
js
les
hlt
loop
dec
mov
mov
ss
jle
aad
pushl
and
add
movsl
xorb
dec
aaa
dec
mov
push
outsb
fs
leave
daa
lock
pop
xor
cmpsl
xchg
push
sub
pop
pop
negl
cmpsl
sub
push
inc
jno
and
pop
in
jp
scas
addr16
test
and
cwtl
mov
jecxz
fldt
sbb
addr16
in
cltd
pop
fwait
or
dec
mov
rcrl
sbbb
dec
daa
je
jne
ss
add
imul
aaa
push
sub
mov
cmpb
mov
push
aam
lret
jae
xchg
xchg
shrl
hlt
push
dec
push
push
pop
fsubr
out
int3
pop
jmp
scas
jo
ficoml
mov
test
adc
scas
mov
jecxz
test
adc
jge
insl
sbb
lods
movsb
dec
clc
and
popa
pop
into
testl
xor
add
stc
xor
notl
stos
xchg
xor
cmc
repz
stc
adc
xor
mov
jp
aaa
mov
dec
mov
xchg
pop
lret
mov
sub
mov
jbe
ljmp
enter
gs
pop
jecxz
xor
adc
int
add
adc
adc
xchg
or
lods
and
imul
push
inc
sar
sbb
es
mov
dec
pop
test
mulb
out
enter
mov
repnz
in
cmp
les
dec
pop
xor
xlat
aam
daa
push
aaa
inc
cmp
lret
xchg
mov
out
sti
mov
jl
outsl
lret
jbe
sub
out
xor
pop
les
int
mov
inc
stos
rcr
scas
ds
sahf
sbb
outsl
repnz
pop
mov
push
loopne
inc
mov
jmp
aad
sub
mov
and
push
jg
lea
fisttpll
negb
mov
cmp
cmp
mov
and
mov
test
push
pop
mov
mov
std
xchg
mov
shll
repz
cmpsl
mov
pop
mov
xchg
aas
push
inc
xchg
lock
mov
gs
xchg
les
sbb
xchg
int3
push
mov
lcall
pop
sbb
ja
aad
pop
xchg
test
inc
dec
push
cltd
and
into
int
sub
mov
dec
xchg
movsl
dec
mov
push
nop
pop
fdivrl
insb
mov
clc
cmp
lods
mov
cli
add
jo
rorl
fistpl
jle
enter
push
stos
clc
push
pusha
or
push
hlt
stos
enter
or
imull
js
dec
in
cltd
xchg
sbb
in
pop
jnp
add
cmc
push
add
jnp
fdivr
negb
mov
add
lods
mov
xorb
int3
pop
ret
push
mov
es
dec
pop
test
pop
sbbb
sbb
stos
xchg
push
adc
lret
mov
loop
in
pop
dec
xchg
icebp
mov
dec
jne
mov
or
cmp
fisubrl
call
cs
inc
xlat
movsb
dec
leave
enter
sahf
mov
mov
xchg
mov
repnz
and
std
divl
jl
sub
leave
dec
xorb
or
jnp
lock
mov
jne
je
gs
popa
sbbb
pop
and
addl
mov
dec
xchg
cs
cmpl
fsubr
les
adc
in
jbe
jbe
adc
dec
stos
and
lea
daa
out
sub
in
mov
mov
nop
and
sbb
mov
lods
and
shlb
cmp
push
and
push
add
xchg
mov
loopne
cmc
addr16
mov
ret
mov
sti
adc
fmul
int3
mov
sbb
sahf
ljmp
or
iret
or
mov
cmp
test
push
sbb
jg
mov
push
lods
xor
push
cmp
jb
mov
nop
add
ret
jle
push
outsb
movsb
inc
pusha
xor
mov
adc
jo
add
pop
mov
aad
notl
add
fcmovbe
pop
mov
mov
xor
pop
mov
cmpsb
ja
mov
mov
out
mov
adc
xchg
aam
aam
jmp
xchg
fiaddl
jae
int
push
or
adc
push
imul
push
enter
xchg
adc
mov
fdivrl
adc
push
fistl
clc
mov
ds
mov
fdivrl
jge
jg
cmpsl
pop
shll
adc
jo
fs
es
ljmp
outsl
xchg
ds
xchg
fsubrp
std
xlat
sub
mov
movsl
xchg
push
es
ljmp
addr16
rcll
fnstsw
imul
sub
inc
or
popa
push
inc
fsts
or
js
push
outsb
xlat
adc
jo
lds
mov
xor
mov
je
push
fldcw
sbb
pop
mov
into
jmp
inc
je
aam
push
dec
xchg
push
adc
sti
sarl
pushf
push
mov
mov
mov
les
sub
loopne
xchg
out
daa
sbb
jmp
add
outsl
fldl
add
mov
add
push
dec
insl
cmp
fwait
jge
jecxz
cmp
push
mov
iret
or
xor
mov
in
cmp
iret
and
mov
pusha
push
cli
rclb
and
test
and
push
dec
movzwl
aad
inc
fcomip
lret
mov
in
adc
mov
inc
out
add
ljmp
scas
and
mov
insl
cld
in
push
inc
clc
notl
xchg
aam
dec
xlat
push
mov
jb
cmp
fnsave
lea
and
adc
cmp
xchg
push
push
jg
es
out
scas
daa
and
pop
out
dec
js
arpl
xchg
testl
xchg
sbb
jbe
sti
mov
ja
pop
xchg
in
loop
es
int3
iret
lods
test
mov
or
add
lea
push
push
xchg
xchg
push
out
jae
aas
jno
aam
mov
movsl
int
roll
push
ljmp
adcl
popa
jnp
sahf
jle
out
cld
fadds
mov
loopne
cmpsb
popa
out
cs
mov
pop
subl
std
inc
clc
ret
enter
dec
jo
xchg
pop
sub
inc
pop
add
test
fidivl
jo
push
push
xor
repz
ljmp
dec
adc
xchg
sub
leave
cmp
hlt
jb
cmpsb
dec
add
int
test
cltd
ja
pop
dec
jno
into
add
jmp
fisubrl
fisubl
mov
inc
loopne
or
loopne
xor
imul
and
popl
add
sbb
pop
cmpb
add
mov
stc
fdivr
fldenv
repnz
test
xorb
out
imul
jno
sahf
cmpsb
call
bound
cli
outsl
mov
push
rcrl
cmp
or
push
lret
and
push
test
test
sbb
mov
mov
adc
sbb
in
js
lds
add
xor
in
sub
adc
in
xor
je
inc
pop
sti
in
push
lds
pop
sbb
mov
lock
call
push
jmp
dec
mov
lds
xchg
xchg
into
outsb
loopne
gs
mov
mov
jb
dec
jecxz
mov
sbb
xor
jp
incb
ret
fstps
test
inc
jbe
inc
ja
cmp
dec
gs
jmp
xchg
jo
cmp
insb
and
loope
cmp
jae
ret
push
cmpsb
in
jge
lea
mov
push
push
out
and
icebp
mov
jecxz
sbb
jle
push
jns
lea
cld
mov
clc
lods
fwait
lea
rclb
fisttpl
mov
dec
call
dec
cmpsl
js
ljmp
call
leave
adc
out
sbb
jns
push
push
pop
ret
in
call
mov
stos
jne
scas
roll
frstor
push
test
stc
addr16
sbb
pusha
dec
in
mov
xchg
xchg
mov
sahf
cmpsl
pop
sbbl
lcall
inc
mov
mov
xchg
fcomps
mov
cmpsb
outsl
mov
cld
inc
cmpsl
es
xchg
stos
outsb
dec
inc
loope
xchg
shlb
out
aaa
insb
stos
dec
inc
pop
xchg
pusha
cmp
mov
loopne
mov
mov
test
cmp
out
jl
sti
mov
leave
sub
and
cmpsl
popf
pop
mull
lods
lock
xchg
cwtl
pop
jmp
dec
jb
icebp
in
loope
aam
push
push
sub
mov
mov
xchg
xchg
mov
shl
aas
dec
mov
repnz
iret
sub
xchg
dec
or
sbb
mov
mov
push
lods
std
fucomi
fs
pop
push
jne
xchg
inc
fwait
sbb
testb
add
lcall
xchg
fistpl
lods
outsl
repnz
pusha
popa
inc
imul
mov
aas
sub
dec
dec
xor
out
pop
push
jge
ret
fwait
mov
jno
sub
out
shll
push
push
push
pop
jmp
xor
lods
pop
mov
and
jbe
lods
fwait
push
jns
add
leave
lahf
fldl
cmpsb
cmp
stos
loop
ja
cmp
pop
or
pop
imul
push
pop
pop
sub
dec
lods
scas
sbb
in
lcall
bound
jbe
dec
cmp
sbb
mov
mov
dec
dec
ja
cmp
loopne
adc
jo
adc
imul
lods
repnz
inc
push
mov
add
dec
mov
cltd
loopne
pop
fimull
mov
pop
gs
test
fdivrl
xlat
or
adc
jp
mov
mov
call
rclb
data16
jbe
inc
outsb
sbb
lods
sbb
lds
test
mov
gs
and
sub
xchg
movsl
lock
jns
dec
enter
lods
sahf
sbb
nop
adc
cmp
mov
daa
add
test
cs
jge
xchg
push
xor
dec
fmuls
loop
pop
dec
fidivs
shlb
push
out
push
dec
add
shrb
jle
or
stos
fcmovu
out
stc
mov
xchg
lea
push
mov
jl
test
sub
test
xchg
dec
mov
xchg
nop
push
jb
sub
out
stos
fidivl
pop
fs
call
in
mov
cs
clc
fmul
push
xor
les
jge
and
es
mov
imul
dec
xchg
jle
idivl
xor
int3
dec
add
jp
dec
aam
cmpsl
push
xor
mov
pop
shll
add
scas
mov
xchg
cmp
or
xchg
aad
hlt
or
lret
test
cmp
sbb
ret
cwtl
or
das
cld
ljmp
std
out
cmp
add
push
xchg
call
je
or
mov
gs
mov
xchg
fxch
push
sub
xchg
cli
cmp
fisubrs
dec
js
adc
lea
aaa
notb
xchg
dec
lahf
or
in
pop
out
mov
mov
xor
jp
cmp
mov
mov
mov
mov
mov
push
out
ja
sbb
popf
push
fidivrs
sbb
daa
pushf
sahf
sub
ret
lods
stos
xchg
stos
aam
jbe
xchg
push
xchg
jne
push
dec
aas
push
imul
jae
pushf
pop
add
fstpl
les
cmp
mov
xor
nop
imul
add
jmp
push
sub
sbb
sti
data16
int
cli
cs
stc
cmp
cmp
mov
jns
icebp
jle
jmp
fsubs
inc
inc
mov
mov
xchg
aaa
sarl
mov
fimuls
inc
xchg
jp
int3
fidivrl
ret
aad
daa
or
fwait
mov
xchg
mov
mov
fmulp
jnp
enter
shrl
pop
push
aam
icebp
inc
insl
sub
stos
arpl
mov
xchg
ret
jmp
push
dec
insl
nop
xchg
sub
sti
mov
jns
mov
movsb
mov
xor
cmp
add
sbb
mov
shrl
loop
sbbl
jecxz
data16
in
idiv
shll
add
es
sbb
xchg
dec
adc
decl
xchg
push
push
push
jg
into
mov
push
sbb
push
push
stos
ret
push
fs
hlt
or
test
iret
mov
out
test
xor
xor
or
mov
adc
movsb
mov
xlat
mov
sbb
pop
rcrb
or
and
push
leave
lods
filds
lods
test
js
cmp
int3
xchg
mov
in
and
cld
push
and
push
add
dec
fisubl
mov
xlat
pop
push
push
in
mov
inc
lods
cmp
mov
push
ret
xorb
outsb
das
nop
push
sbb
bound
sarl
outsb
in
repnz
mov
push
or
orl
mov
add
push
aas
imul
and
jmp
lahf
xor
inc
push
mov
aad
lods
icebp
xchg
sahf
repnz
sbb
scas
jb
cmpl
jo,pn
dec
sub
cmpl
inc
push
adc
or
pop
leave
mov
data16
mov
cmc
add
lds
sub
into
xchg
scas
pusha
testb
jbe
into
std
or
push
adc
sbb
jecxz
pop
fwait
gs
lods
fwait
sub
int3
sti
and
out
pandn
outsb
jae
lret
jnp
push
arpl
in
dec
and
inc
mov
js
push
add
ret
xchg
dec
in
scas
pop
shr
cli
mov
mov
mov
pop
inc
scas
clc
push
stos
mov
push
mov
cwtl
mov
jg
mov
fwait
shlb
or
rol
imul
or
xchg
lds
xchg
mov
push
push
inc
ret
mov
rolb
xor
sahf
cli
dec
jle
ds
repz
sbb
fs
adc
ret
or
mov
mov
aad
sub
mov
pop
mov
xchg
xlat
je
xchg
jmp
roll
mov
out
jo
jmp
lcall
mov
mov
push
add
pop
xor
inc
sub
cmp
dec
xlat
or
iret
int3
adc
dec
ljmp
mov
xchg
jno
xor
stos
fisubl
sbb
mov
sub
test
inc
shl
int3
xor
push
idivb
adc
mov
push
cmp
lods
mov
loope
out
subl
into
icebp
dec
push
out
rcll
xchg
lcall
lcall
lahf
test
stos
scas
test
mov
sarl
xlat
pop
cld
pop
pop
cld
rorb
enter
mov
stos
sub
xor
iret
icebp
lods
mov
add
xorl
push
dec
scas
pop
sahf
add
adc
adc
and
inc
xlat
or
mov
popa
ret
cmp
push
push
and
popf
sbb
inc
iret
leave
sub
or
dec
adc
adc
sbb
ret
dec
pop
push
mov
adc
nop
add
adc
inc
pop
loopne
daa
and
and
push
ret
or
or
sub
lcall
add
jbe
jmp
sbb
pop
inc
mov
lods
pop
movsl
mov
pop
add
mov
cwtl
cli
pop
popa
inc
or
jo
xor
xchg
ret
jl
inc
enter
mov
and
jae
xor
jb
lcall
pushf
jne
push
sub
pop
outsb
jae
xor
ret
jno
push
in
rcrb
push
pop
or
pop
scas
ja
cmp
fs
xor
call
sahf
sub
out
and
mov
ljmp
push
mov
shlb
adc
and
add
out
clc
and
add
push
flds
cmp
ss
stos
stos
push
lahf
jmp
cmp
push
ds
sbb
xor
sahf
or
mov
out
ftst
push
jge
lret
sbb
andb
data16
jge
pop
test
cmp
ret
cmp
and
inc
push
dec
outsb
inc
pusha
inc
pusha
dec
mov
ret
fsubl
pop
xchg
or
inc
dec
cmp
lds
aaa
loope
xchg
int
add
xor
adc
adc
and
rclb
mov
inc
add
cmp
add
cmpsb
dec
pop
rclb
sbb
or
jae
movsb
out
mov
dec
mov
dec
loope
std
enter
clc
fnstcw
popa
add
inc
cld
in
fsts
xor
shlb
xchg
xorb
sub
xor
or
mov
inc
jge
shlb
mov
mov
pop
adc
arpl
jg
jmp
hlt
mov
pushf
or
mov
daa
xor
push
rcrb
sbb
jae
test
pop
inc
sbb
sub
hlt
je
mov
imul
out
mov
adc
test
scas
and
mov
notl
adc
ret
sbb
and
lods
cmp
mov
jo
fisubs
ja
fcoml
arpl
mov
xor
data16
fistl
inc
push
test
and
test
cmc
and
out
lea
xchg
mov
inc
or
inc
and
push
pop
andb
in
push
xlat
jb
mov
orb
pop
inc
daa
test
pop
cltd
mov
xor
mov
movsb
cwtl
mov
aad
pop
hlt
pop
inc
pop
ds
lret
adc
jb
sbb
add
aas
xchg
repz
xorl
add
fnstsw
sbb
sub
adc
pop
mov
sub
xchg
pushf
dec
jns
add
mov
pop
mov
cld
sar
insb
xchg
add
pushf
cmpsb
ret
inc
or
adc
pop
lock
push
mov
ljmp
sub
pop
adc
icebp
das
les
add
lods
js
lcall
in
dec
cmp
loope
push
lods
or
ja
jno
mov
xchg
ljmp
or
pop
mov
mov
imul
adc
xor
xchg
or
adc
mov
sbb
lcall
pushf
mov
inc
push
aad
and
imul
inc
mov
jae
inc
push
jns
add
lea
sub
xor
sbb
fstpl
sbb
mov
lea
rcrb
ljmp
jg
inc
pop
fisttps
flds
xlat
mov
mov
xorb
arpl
icebp
and
mov
inc
cli
rcl
add
loopne
sub
and
xchg
fs
fwait
mov
mov
ja
xor
xchg
ljmp
jge
loope
mov
pop
in
push
xchg
nop
aam
into
sub
sbb
jae
adc
mov
rcll
push
adc
test
mov
mov
sbb
sub
sub
pop
loopne
cli
cmpsl
int3
outsl
enter
shll
jns
adc
inc
lock
xchg
repz
icebp
std
es
xchg
aad
rorl
cltd
sbb
inc
popa
jge
lock
xorl
xchg
imul
popa
push
in
push
push
imul
icebp
adc
mov
into
hlt
imull
jo
test
aad
test
add
or
ljmp
mov
mov
popf
pop
xor
test
pop
add
ja
fnstcw
mov
mov
pop
xor
fistpll
pop
test
mov
imul
jmp
push
ljmp
inc
dec
pop
or
mov
test
scas
ss
aad
mov
push
test
xchg
mov
nop
insb
repz
std
push
adc
mov
cli
test
mov
in
mov
dec
movsl
or
shll
xor
imul
sarl
push
arpl
cmp
sti
mov
mov
cmp
das
mov
dec
popf
fnstsw
mulb
addr16
lret
jb
push
and
mov
gs
imul
loop
pop
sbb
xor
aam
fiadds
pop
fsubl
sbb
and
inc
or
and
das
aas
pop
lret
stos
in
jnp
sarb
enter
ret
ljmp
sbb
xor
scas
scas
out
in
loopne
ret
mov
adc
and
imul
lret
xchg
inc
sbb
and
mov
out
mov
xor
adc
scas
pop
jmp
sbb
lret
lods
pop
jnp
std
call
ss
jecxz
mov
iret
lret
push
cmpsb
adcl
ret
push
push
test
pop
in
pop
cmp
jp
xchg
pop
out
sub
in
sbb
inc
push
aad
clc
addr16
sub
ljmp
push
fs
dec
sub
lea
aad
xchg
sub
add
sub
or
rorb
in
fiadds
loop
cmp
out
loope
pop
push
in
adc
xchg
jo
mov
lods
jnp,pt
xchg
gs
ds
push
in
shlb
adc
js
repz
fbld
jle
xor
leave
ljmp
enter
fcmovnb
shlb
push
hlt
popf
jne
dec
xor
add
or
hlt
daa
adc
lds
jg
scas
sub
and
and
aad
pop
push
fsubl
pop
call
mov
jbe
xchg
scas
add
or
mov
sahf
imul
inc
notl
jmp
adc
push
jb
popf
sbb
push
out
sbb
popf
pop
fsubs
mov
mov
push
push
inc
or
fstpl
mov
rorb
sbb
out
aas
addr16
push
sbb
pop
cwtl
js
add
dec
aas
mov
push
pop
add
mov
push
lock
cltd
mov
jb
mov
jns
das
jmp
pop
push
xchg
jecxz
arpl
subl
sbb
mov
mov
push
push
jmp
dec
shlb
or
inc
in
xor
movsl
adc
push
mov
out
clc
cltd
enter
add
or
into
mov
test
dec
ret
pop
inc
sub
inc
add
arpl
scas
sbb
daa
push
jne
inc
arpl
popf
out
shrl
loop
insl
xchg
jnp
dec
shrl
mov
sub
adc
lods
mov
mov
cmp
test
mov
fwait
sbb
test
test
sarb
repz
push
adc
xchg
sub
push
dec
loopne
cmp
pop
add
xchg
mov
mov
and
filds
add
mov
inc
mov
cmp
inc
nop
movsl
call
leave
scas
add
mov
push
xor
adc
cli
int
fnstenv
mov
mov
pop
cmovb
push
mov
aad
loopne
outsb
lea
jb
or
aad
out
jle
iret
ret
or
inc
mov
sbb
jg
mov
cwtl
addb
das
loopne
push
push
lds
jb
add
push
add
lret
rcrl
cmp
movsb
cltd
mov
aaa
mov
mov
mov
push
adc
paddd
rorb
mov
pop
int
pop
aam
clc
inc
testb
lods
sub
out
mov
or
bound
test
xchg
pop
lods
pushf
in
cmc
inc
jno
scas
out
and
xor
cmp
loope
cltd
inc
loopne
sbb
push
mov
sub
int3
pop
cs
add
loopne
aam
xor
js
scas
mov
push
push
faddl
xchg
shlb
add
inc
xor
sub
xchg
stos
flds
clc
shr
lock
movsl
sbb
dec
in
fmull
inc
add
rclb
mov
inc
mov
rcl
lods
jno
mov
or
mov
int3
cld
xchg
jae
push
cmpsl
xchg
mov
pop
je
rorl
mov
int3
sbb
push
fstpt
mov
bound
cmpl
shll
mov
sbb
pop
fstps
pop
lods
cmpsl
js
pop
pop
fdiv
inc
popf
cmp
loope
mov
out
inc
in
and
nop
sbb
and
repz
lahf
sub
sbb
bound
mov
push
jmp
push
inc
inc
lcall
inc
jge
mov
add
push
nop
frstor
xchg
fldl
punpckhdq
dec
xor
inc
xchg
dec
sbb
pop
ss
call
inc
ret
mov
and
jb
inc
mov
push
testl
cmp
mov
xor
inc
movsb
fnsave
mov
insl
lret
call
fdivrs
inc
xor
adc
jle
xor
sbbb
xchg
cmp
xchg
inc
xor
arpl
sbb
add
mov
push
cli
cli
pop
dec
push
call
pop
cmp
lret
test
loop
imul
push
aad
fsts
xchg
outsb
or
nop
ja
xchg
dec
cld
xchg
push
adc
ds
daa
lret
xchg
shrl
cmp
test
dec
addl
in
js
mov
xor
aaa
lea
repz
jno
fwait
repnz
adc
push
in
push
je
mov
mov
pop
xchg
jle
in
dec
cmp
inc
fs
out
movsb
fidivrl
lods
ds
add
lcall
insb
adc
stc
out
push
lock
mov
add
es
push
and
pop
sub
iret
jae
mov
jl
and
mov
xchg
xor
adc
insl
push
jg
inc
push
icebp
inc
push
lret
cmp
leave
movsb
pusha
mov
lock
inc
mov
jmp
dec
sub
sahf
aas
sub
loopne
and
shlb
xchg
cmp
xor
shlb
sbb
jno
push
fldt
sub
sub
xor
pusha
imul
out
xchg
lret
call
orl
vpsrlq
push
or
mov
or
call
fsubl
pop
jmp
mov
xchg
fldenv
ret
lock
rorl
cmp
and
lcall
out
icebp
aam
mov
stos
cwtl
mov
xchg
push
outsl
cli
cmp
xor
pop
dec
dec
mov
push
out
stos
push
cmp
rorb
faddl
or
repnz
xlat
cmpsl
sub
js
add
sarb
outsl
sarl
aas
push
scas
aad
lahf
mov
pop
loopne
out
adc
fcomip
pop
xor
pop
push
and
clc
test
mov
int3
clc
mov
imul
cmc
frstor
popf
ja
adc
aaa
inc
jle
sbb
stos
jne
cmp
push
xchg
and
loope
ret
xchg
ret
or
mov
icebp
fisubs
aam
xor
and
sbbl
popa
add
dec
in
lods
mov
adc
js
xchg
repz
push
or
xor
in
jnp
addb
xchg
mov
andb
shll
mov
mov
xlat
mov
daa
mov
mov
sub
pop
xchg
jp
sub
sbb
push
mov
in
sti
adc
mov
sbb
dec
jb
xor
sub
je
les
out
mov
xor
in
arpl
stos
adc
pushf
jge
sahf
and
ret
scas
dec
push
dec
clc
pop
mov
push
lcall
dec
scas
cmp
into
sub
adc
loop
js
jecxz
int3
lcall
aaa
pop
push
ja
mov
incb
xchg
jge
mov
in
fwait
outsl
jge
inc
adc
inc
negb
xchg
rcrw
dec
adc
pop
loop
pushf
or
insb
mov
adc
leave
mov
es
lds
jl
addr16
add
scas
pop
mov
clc
imul
orb
mov
dec
jne
dec
nop
or
dec
leave
arpl
stos
pop
ljmp
arpl
je
loopne
and
push
mov
ja
js
enter
xor
mov
push
adc
cmp
jecxz
cmpsb
shr
mov
mov
stos
sbb
movl
xor
shlb
mov
out
mov
dec
push
adc
cs
pushaw
pop
push
int3
push
das
nop
cmp
mov
pop
cmp
not
sub
and
mov
jp
cmpsl
mov
sub
out
add
xchg
lret
jl
push
imul
cld
mov
outsl
dec
xor
xor
sbb
test
dec
out
scas
mov
or
mov
or
mov
into
pop
ret
jecxz
cld
fwait
pop
cmc
inc
xor
xor
pop
mov
fwait
out
ss
loope
bound
cmp
bound
xchg
mov
add
stc
std
xorb
iret
mov
dec
popa
cmpsb
daa
xor
dec
mov
inc
cmpsb
out
shlb
cmp
add
movsb
push
nop
cmp
jmp
sti
push
ljmp
add
cltd
push
inc
sbb
test
and
xchg
lret
mov
movsb
rcl
dec
loopne
jno
les
lock
sbb
aaa
cli
adc
sbb
push
adc
stos
mov
sub
cwtl
leave
mov
cmpsb
xchg
or
add
pop
xchg
rcrb
mov
sarb
xchg
cmp
mov
enter
jae
push
jae
stos
adc
or
xor
and
cmp
mov
pushf
rcll
fdivrl
nop
jno
pop
cltd
pop
pop
or
clc
mov
imul
scas
xchg
cld
inc
cmp
stos
out
arpl
xor
mov
sbb
jge
jmp
sub
sub
fisubl
cmp
cli
fmulp
mov
sbb
femms
test
and
pop
repnz
mov
or
inc
cltd
cmp
dec
mov
js
adc
inc
inc
mov
and
mov
inc
mov
sahf
enter
scas
mov
fisttpl
mov
fstpl
fistpl
negb
sub
cs
mov
out
outsb
stc
add
iret
dec
or
ljmp
jnp
sahf
and
pop
inc
ret
inc
pop
add
je
jnp
xchg
push
test
cli
jnp
sub
test
cltd
ret
jl
cmpsl
inc
push
sub
sbb
or
mov
jnp
aaa
ficomps
mov
addr16
sub
xchg
or
and
sahf
mov
xor
ljmp
test
icebp
rclb
cwtl
repnz
xchg
inc
mov
pop
pop
pop
test
sahf
dec
mov
adc
mov
pop
test
jbe
and
je
sbb
das
call
repnz
clc
cld
cld
cmc
mov
addr16
scas
push
add
ljmp
shlb
arpl
pop
push
lahf
jb
adc
xor
imull
jl
cmp
xchg
mov
popa
call
add
dec
jns
cmp
mov
or
mov
int3
pop
mov
addr16
mov
mov
jno
xor
jno
pop
mov
cmpl
mov
mov
add
out
cs
out
lock
push
xchg
or
addr16
lcall
add
inc
arpl
fsincos
inc
mov
xchg
or
mov
cli
fisubs
push
addr16
and
jbe
loope
movsl
push
iret
leave
xor
cmp
lcall
pop
push
mov
loopne
mov
cmpsl
adc
inc
xchg
shrl
mov
push
and
out
cs
out
adc
lcall
adc
sahf
add
jne
add
jle
sub
cmp
push
lds
test
fnstcw
mov
stos
in
sub
std
pop
dec
daa
das
and
sbb
xor
sub
dec
inc
outsl
xor
mov
leave
movsl
jo
or
rcrb
outsb
dec
in
rcll
adc
es
jae
adc
scas
jb
sub
push
arpl
pop
sbb
lahf
or
xor
insb
sbb
lods
in
jae
xchg
pushf
xor
ljmp
or
adcl
mov
adc
push
push
lock
mov
xchg
adc
sub
xchg
inc
mov
or
add
jns
jmp
stos
aaa
mov
xchg
add
jmp
sbb
and
lods
add
lods
in
pop
cmp
arpl
sub
lea
rcrl
fistps
out
addr16
jmp
xchg
mov
or
cmp
jp
cltd
cmp
jno
inc
cli
insl
gs
inc
and
es
push
lret
dec
inc
dec
or
mov
outsl
out
mov
push
mov
pop
dec
into
repz
mov
movsl
shrl
mov
in
and
inc
notl
sub
ret
jnp
leave
jnp
xlat
test
pop
sbb
mov
jmp
xchg
xchg
fxch
lock
mov
inc
cmp
pop
fisubrs
nop
mov
daa
nop
jle
gs
cmpsb
xchg
mov
sarb
cwtl
push
pop
lret
and
mov
in
pop
xlat
movsl
hlt
push
imul
scas
test
mov
xchg
fists
imul
lods
jne
icebp
cmp
mov
xor
hlt
sahf
divl
xchg
jge
cmp
sarl
and
imul
dec
loopne
stc
icebp
fisttpl
push
sbb
fs
sar
shlb
and
or
mov
cwtl
hlt
mov
mov
ret
in
jmp
mov
loopne
xchg
rcrl
mov
mov
or
adc
xchg
pop
ds
out
sti
leave
cld
scas
adc
out
mov
jnp
jp
inc
adc
mov
dec
lods
jno
inc
fadds
lods
push
xchg
popl
pop
dec
rorb
mov
pop
adc
lahf
enter
inc
push
mov
xor
lret
ljmp
add
pop
pop
pop
shrb
or
daa
jle
stos
pusha
iret
xor
icebp
xlat
cltd
stos
jbe
test
pop
and
ret
pushf
xor
pop
jmp
mov
lahf
aad
test
push
ss
fldcw
imul
stos
dec
xor
cmp
lock
push
shrl
not
out
mov
and
ja
sbb
sti
and
pop
lods
push
jl
mov
out
add
push
das
and
loop
pop
dec
out
dec
mov
or
add
or
je
mov
lds
icebp
stos
add
rorl
push
int3
pop
sub
cmp
fcoms
cmp
ss
hlt
push
cli
jnp
out
enter
jmp
scas
jo
xchg
inc
scas
adc
cli
or
jb
and
jb
test
push
sub
jmp
xchg
call
cmpb
mov
xchg
loopne
push
dec
aam
imul
outsl
fcmove
icebp
mov
push
pop
les
mov
push
sbb
rclb
or
xchg
aaa
inc
clc
inc
cmovl
loope
sbb
out
xor
adcl
in
cmpsb
pop
add
ucomiss
mov
stc
pushw
cld
rorb
xchg
mov
rolb
sbb
dec
push
jl
cmp
arpl
lret
pop
test
pop
or
mov
sub
sub
jecxz
stos
lcall
mov
mov
rcll
stos
jno
jl
sub
rcrl
aam
xor
cmp
cmc
adc
pop
inc
ss
fnstenv
mov
jle
ja
mov
dec
notb
lahf
adc
nop
cmp
int
cmpsl
pop
cmp
push
std
pop
dec
fcoml
nop
jp
testb
inc
insb
adc
jbe
lds
mov
fnstsw
outsb
adc
push
jbe
stos
inc
add
and
cs
add
andl
or
popa
lahf
mov
sbb
lret
or
bound
insb
stc
adc
notl
sbb
scas
adc
or
or
xlat
sahf
and
imul
xor
jae
test
movsl
dec
mov
or
data16
pop
cmp
inc
stos
jns
arpl
cli
sbb
aad
test
jecxz
int3
shll
push
sbb
shrb
xor
mov
lock
xor
xchg
test
mov
lock
mov
int3
clc
cltd
jle
cmp
sbb
insl
loope
aas
or
mov
xor
sahf
mov
mov
mov
ret
mov
sub
push
je,pn
push
pop
ds
in
mov
cmpsl
fsubr
sbb
mov
xchg
xor
ret
adc
outsl
icebp
loopne
mov
les
popa
pop
add
sub
call
fsubr
or
repnz
mov
or
and
cmpsl
xchg
xchg
xchg
les
mov
xchg
xchg
lods
out
sbb
mov
inc
sbb
mov
sub
jecxz
pop
xchg
fadds
add
subb
mov
cli
pop
push
pop
xchg
pop
pop
in
orb
popa
aaa
sub
ds
xchg
shll
jecxz
std
fildll
cmc
inc
mov
in
xorl
push
mov
stos
test
jecxz
loop
push
sub
sbbl
push
push
in
xchg
leave
xor
cli
hlt
xor
xor
jecxz
fmuls
arpl
dec
dec
xchg
shrb
movsb
out
or
lret
in
out
jg
out
scas
mov
jle
xor
in
in
jno
mov
scas
nop
inc
adc
in
mov
mov
xchg
movsb
outsl
sub
pop
arpl
inc
iret
sub
or
roll
lret
ljmp
sub
fst
lods
ljmp
ss
lret
push
mov
ret
adcb
mov
xor
movsb
push
jecxz
inc
cli
cmp
pop
pop
or
add
inc
out
addl
std
xor
loop
fcomps
inc
mov
xor
arpl
cmp
cmp
pushf
sti
push
das
rcll
fidivs
pop
push
shl
into
fbld
stc
lret
popa
jbe
mov
std
sbb
std
lds
inc
fsubs
xchg
adc
loop
pop
sarb
cltd
outsl
xor
movsb
jg
je
jl
jns
sarl
xchg
xor
push
iret
fwait
test
cwtl
jl
bound
daa
mov
xor
addb
mov
inc
sub
pop
xor
loop
imul
aam
mov
in
loope
add
dec
lds
fmul
out
aas
jecxz
out
push
cmpsb
push
dec
sub
add
cltd
and
mov
inc
idivl
in
into
mov
ret
test
repnz
into
out
lret
pusha
loope
gs
das
sbb
sub
jae
test
mov
pop
in
mov
dec
mov
pop
xlat
fdivrl
je
or
popa
push
mov
fsubrl
push
cld
jae
js
mov
loopne
mov
sub
cmp
in
leave
clc
mov
cmpsb
enter
ljmp
cmp
loopne
rorl
dec
push
mov
loop
push
lods
xor
leave
ljmp
and
sub
mov
stos
setge
pop
adcl
xchg
jl
adc
sub
push
rcl
in
mov
mov
mov
out
adc
clc
dec
movsb
nop
repnz
bnd
ret
fcomp
lea
cmpsl
pop
movsb
mov
dec
ret
mov
jo
mov
arpl
test
subl
mov
dec
repz
pusha
insl
dec
and
test
outsl
aaa
pop
pop
insb
add
and
and
xchg
fdivs
testl
xchg
pop
cmp
cli
fs
data16
xchg
mov
push
cmp
lcall
in
inc
mov
movsb
lock
jmp
arpl
mov
sarl
sub
pop
pop
push
sub
lcall
stc
xor
and
jge
pusha
cmp
jns
insb
push
mov
cld
mov
mov
jbe
cli
pop
xchg
sub
cmpsb
in
flds
fwait
mov
orb
sub
test
popf
call
sbb
mov
mov
roll
inc
fiadds
add
lret
ficoms
cli
or
xor
addr16
sbb
xor
pop
gs
adc
out
mov
cmp
push
sub
ficomps
dec
mov
pop
sub
inc
jns
or
out
ss
xchg
fsubl
jg
lea
dec
sbb
mov
and
cli
mov
mov
pop
jbe
adc
loop
sub
dec
arpl
sahf
int3
hlt
mov
mov
fbld
jne
or
out
in
loop
scas
and
nop
inc
sbb
decl
pop
push
sub
dec
std
cmp
mov
mov
push
pop
add
sahf
pop
hlt
in
repz
mov
sti
sub
adc
adc
jne
movl
xchg
push
nop
ficomps
lea
cmp
je
mov
or
arpl
mov
ja
sub
cmp
test
sbb
adc
mov
scas
mov
int3
cmpsb
test
jecxz
xchg
hlt
cwtl
xor
push
jno
notl
fucomp
aad
mov
pop
js
xor
dec
out
fldl
icebp
mov
push
out
pop
inc
int
dec
fmull
push
sti
repnz
outsb
daa
cltd
shlb
outsb
xor
jnp
mov
add
stos
movsb
pop
pushf
cmp
push
scas
jb
add
flds
and
sub
push
cmp
into
test
les
dec
xchg
cwtl
xchg
lret
cwtl
lock
and
dec
out
imul
push
out
sbb
imul
mov
add
test
lock
out
push
out
ffreep
jne
dec
call
jmp
adc
int
jns
movsl
sub
xchg
out
stos
aad
mov
fstl
mov
sub
and
mov
dec
or
test
xchg
mov
sbb
push
aaa
imul
sahf
loop
call
int3
xchg
mov
imul
scas
or
mov
out
scas
push
mov
push
shll
inc
movsb
push
xor
inc
shlb
or
add
dec
adc
push
and
adc
mov
nop
push
and
cmp
xchg
lcall
test
xor
pop
cmpsb
xchg
loop
ja
popf
dec
shlb
cli
xchg
xor
and
pop
mov
gs
mov
cmp
inc
mov
mov
lret
ja
lds
pop
mov
daa
gs
mov
orl
insl
sub
stos
xor
jns
mov
cmc
cmpsb
pop
dec
jp
mov
jp
stos
pop
cmpsb
sub
sub
es
lods
hlt
and
rcrl
mov
stc
pop
loopne
push
out
cmpsl
rcll
sub
ror
sub
adc
incl
aas
mov
popf
shll
push
dec
cmp
sub
jno
mov
sub
and
jo
jns
test
loopne
adc
push
jecxz
xchg
push
out
jmp
ficoms
and
sub
insl
push
clc
sbb
insl
push
pushf
dec
data16
sbb
test
mov
jl
cmp
lret
sub
aaa
dec
mov
sub
jmp
ja
ds
fists
adc
add
cmp
and
mov
mov
jne
scas
call
sub
addr16
jbe
lods
test
cmp
cmc
jns
sbb
cmp
pusha
popa
xchg
decb
cs
shll
dec
fbstp
popf
imulb
xor
dec
xchg
push
leave
shrb
mov
fisttpll
push
jmp
mov
loope
in
enter
fcomp
ja
pop
aaa
mov
cmp
mov
sub
movsl
andb
adcl
inc
enter
movsb
xchg
cltd
mov
add
shlb
sbb
fwait
mov
imul
jl
mov
add
pop
outsb
enter
adc
mov
pop
jl
loopne
or
cmp
repnz
cli
sub
mov
rcrb
js
pop
ja
das
leave
testb
sbb
daa
mov
mov
dec
test
in
push
leave
ja
jbe
outsl
cmp
ljmp
push
or
sbb
pop
inc
jne
adc
sbb
cmp
mov
jne
sbb
cmp
in
mov
fisttps
scas
ret
ljmp
sbb
mov
jbe
or
call
mov
add
cwtl
and
int
pop
cmp
jle
imul
cmpsb
sub
in
mov
pop
push
add
inc
mov
inc
and
mov
loope
rcrb
inc
mov
std
insb
dec
and
loopne
mov
sbb
mov
addr16
test
push
sub
mov
syscall
aaa
xchg
adc
and
icebp
aam
aam
add
xor
or
dec
mov
cli
leave
cld
lahf
roll
adc
add
pop
inc
inc
arpl
jg
scas
loope
mov
mov
dec
in
mov
fiadds
popl
mov
mov
dec
push
mov
popa
adc
inc
sbb
loopne
es
outsl
jbe
add
pop
xlat
lds
add
and
cmp
cmpsl
fnstsw
mov
leave
repnz
xchg
fdivr
ret
nop
roll
test
cmp
popa
pusha
cmp
cmp
rcll
dec
in
stc
ljmp
jle
push
push
jns
test
es
ret
mov
jo
mov
dec
push
sub
out
pop
cmp
jns
les
lcall
jo
add
xor
out
data16
into
lods
mov
les
dec
add
cli
hlt
jne
sub
pop
pop
rcll
inc
or
into
push
outsl
aam
adc
mov
call
adc
add
pop
pop
mov
adc
adc
mov
repnz
jae
cmpsb
add
stc
imul
repnz
repz
out
add
bound
aas
add
out
loope
cmp
hlt
cmpsl
out
rcll
jbe
cld
push
std
xchg
cmp
or
mov
mov
push
pushf
lret
jecxz
mov
push
dec
push
repnz
js
sub
inc
outsl
mov
je
fisttpll
pop
repz
or
cmc
ljmp
jb
mov
loope
sti
sub
daa
cmp
push
pop
mov
fsubs
in
xor
pushf
sbb
mov
sbb
dec
xor
jns
arpl
cmc
pop
mov
xchg
call
jmp
je
sub
iret
subl
out
mov
outsb
lods
idivb
jo
arpl
cmpl
mov
or
dec
sub
arpl
insl
loope
pop
xchg
mov
std
rcr
fidivl
mov
jbe
in
inc
inc
arpl
pop
mov
call
out
sub
gs
pop
fwait
add
or
cmp
mov
test
pop
or
movsl
sti
icebp
cli
lods
inc
cwtl
out
fisubl
in
lods
mov
inc
jge
cmpsb
xchg
mov
in
ljmp
add
int3
ja
lods
in
aam
aam
xchg
mov
inc
jbe
mov
cmp
shll
int
push
test
cmpsb
cmp
add
ud1
sarb
lret
xor
pusha
adc
pop
lods
fstpl
aad
imul
pop
jns
adc
dec
lahf
pop
push
icebp
mov
xor
xchg
sahf
mov
movsb
xor
xchg
dec
or
cwtl
or
sbb
mov
cld
ds
add
dec
testl
xor
shrb
into
adc
inc
xor
loope
mov
shr
push
fsubs
sti
xlat
rolb
or
aas
fldt
cmp
lods
pop
pop
fwait
ret
nop
popa
leave
lods
xchg
loop
adc
mov
fs
out
xlat
aaa
leave
inc
xchg
cld
dec
xor
sub
outsb
lea
jg
cmp
scas
repnz
aad
movl
sbb
cmp
pop
inc
jmp
pop
test
xchg
hlt
jecxz
xchg
out
xchg
ret
adc
dec
push
and
mov
xchg
add
or
movsl
mov
inc
aad
adc
push
icebp
scas
inc
loopne
xlat
lea
cmpsb
jno
mov
adc
xchg
pop
xor
pushf
and
mov
cltd
cmpsl
jnp
gs
pop
clc
enter
aad
insb
jle
incl
les
sub
lret
xor
xor
mov
xchg
xchg
idivb
test
or
gs
add
call
loop
jnp
push
adc
xor
lret
ss
mov
lds
cltd
popf
add
add
ret
clc
xor
cmc
and
icebp
sbb
std
ficomps
js,pt
gs
pusha
xor
movsb
std
mov
pop
sub
xchg
fsub
mov
notl
mov
jno
rorb
aam
and
outsl
mov
cmp
dec
shll
pop
xor
add
out
enter
pushl
xor
inc
cmp
push
mov
xlat
sub
cwtl
push
or
jge
int
std
dec
jg
mov
out
push
cmp
fldl
xor
jge
xchg
fimull
sub
in
and
shrb
dec
pop
fsubl
lret
ja
clc
pop
test
repz
fldenv
push
mov
test
inc
cmp
test
pusha
adc
jo
mov
mov
cmp
imul
repz
inc
push
xchg
add
sub
mov
fcom
sbb
fwait
leave
ret
int
inc
mov
xchg
lods
bound
push
fcompl
inc
mov
mov
inc
repnz
pop
push
enter
or
iret
push
cmp
dec
xor
sbb
mov
jb
dec
arpl
xor
sarl
in
nop
hlt
jae
test
ficoms
mov
fcmove
dec
sub
jg
ja
int
pop
dec
iret
push
je
jae
sbb
push
pop
xchg
mov
lds
pop
xchg
mov
sub
or
sub
jle
and
push
mov
mov
repnz
shll
out
fsubl
push
mov
movsl
add
test
movsb
ss
mov
and
and
mov
pop
lods
pop
push
cmpsl
xchg
insl
dec
push
jne
and
adc
mov
cmp
ret
imul
loope
mov
xchg
stos
mov
mov
nop
dec
lods
jbe
pop
cmp
mov
pop
fbstp
repz
rcll
push
stos
sbb
jne
or
jo
gs
mov
addr16
inc
shrl
rcl
adc
adc
cs
sbb
jnp
pop
xor
inc
xor
test
cmp
push
aad
fidivs
add
hlt
pop
sub
xrelease
or
lahf
shl
in
fwait
lea
cmovnp
jge
jbe
repz
xchg
cmp
sbb
or
test
push
mov
add
xor
stc
adc
gs
push
scas
xor
mov
pop
rcrb
stc
inc
add
mov
lock
divl
jle
inc
out
sub
ret
test
pop
shll
xor
sbbl
mov
bnd
addr16
xor
bound
and
test
lret
inc
xchg
mov
into
adc
xlat
out
mov
repz
sbb
inc
das
gs
rorl
mov
cmp
in
jl
or
mov
jle
call
adc
daa
jae
jne
adc
jnp
rolb
mov
dec
ret
xchg
frstor
mov
mov
dec
mov
xor
cli
gs
dec
imul
jo
sbb
aad
sar
hlt
and
mov
and
push
jg
mov
mov
mov
les
pushf
ret
or
mov
cmc
inc
fsub
mov
rorl
loop
adc
mov
xor
push
lahf
sub
add
in
push
dec
pop
and
jmp
sbb
mov
leave
or
loopne
dec
mov
pop
jge
sub
lods
pop
push
mov
xchg
add
lret
lods
jb
dec
inc
shr
gs
adcb
push
mov
movsl
inc
mov
cmp
and
dec
js
shl
push
repnz
daa
test
insb
inc
and
jno
popa
out
and
xchg
sbb
jo
lret
lock
xor
imul
loop
dec
icebp
lahf
xlat
ret
jno
xchg
xor
iret
scas
sarb
lea
dec
pop
imul
pop
xchg
cwtl
xor
xchg
cld
add
or
pop
sarb
mov
or
xor
push
push
cmp
notl
gs
paddq
inc
fcmovne
and
mov
js
mov
setge
data16
outsb
sub
popf
cwtl
call
xor
js
ret
out
mov
dec
lret
adcl
ret
inc
fdivrl
mov
push
arpl
out
fwait
pusha
lret
outsl
ja
pop
mov
inc
jmp
mov
adc
adc
loop
fsubrs
cld
push
fisttps
jbe
lods
xor
int
clc
sub
xchg
cmp
inc
div
aaa
repz
jno
pop
dec
popf
pop
in
test
out
rep
push
sti
cmpsl
popf
mov
data16
adc
jg
stc
negb
or
pop
js
popf
cmp
or
movsl
push
cmp
add
cmp
lea
out
fsts
lret
mov
mov
dec
out
pop
out
sub
and
sahf
insl
cmc
jb
pop
shl
dec
jb
notl
sar
mov
popa
scas
or
add
arpl
aam
or
pop
addl
sbbb
dec
das
scas
sbb
inc
mov
scas
cmp
into
pop
mov
outsb
mov
pusha
jbe
push
mov
je
mov
xor
lods
cwtl
ret
push
dec
sub
cld
inc
jae
shll
xchg
and
sbb
nop
sbb
jo
notl
sbb
push
leave
outsb
push
fstl
add
icebp
dec
mov
and
fsts
sub
or
mov
or
push
scas
stos
cmp
mov
loopne
shlb
outsl
mov
cmp
sub
insl
loope
or
or
mov
in
in
sub
and
push
add
sahf
dec
dec
jmp
mov
dec
cmp
or
add
push
inc
imul
dec
in
mov
insl
daa
scas
adcb
pop
faddl
add
scas
out
add
in
cmp
and
js
outsl
inc
mov
in
les
andl
mov
push
insb
pop
cltd
inc
lret
fistpll
pop
mov
in
cmp
push
push
lods
popa
sub
jae
inc
and
jp
jnp
cmp
adc
sbb
mov
mov
cmp
pushf
sbb
jecxz
mov
push
lret
lods
sahf
mov
sub
add
out
pop
fdivrs
add
ret
fwait
push
ds
movsb
xor
adc
mov
mov
mov
stos
push
es
dec
scas
push
mov
fldl
cmp
xor
adc
add
cmp
adc
lcall
adc
push
jo
imul
pop
outsl
scas
dec
pop
fcmove
insb
sub
adc
iret
xchg
ds
pop
in
xor
mov
ret
xchg
and
dec
add
fimull
jge
or
arpl
into
out
adc
add
movsl
iret
insl
cmpsl
outsb
cmp
stos
adc
nop
xor
repz
lret
cmp
and
shl
inc
daa
mov
xchg
push
push
loopne
ss
test
sbb
adc
stc
pop
mov
sbb
push
push
stos
push
mov
inc
stos
and
ljmp
push
cli
cmpsb
mov
jnp
bound
cmc
xchg
cli
adc
out
mov
mov
cmp
inc
clc
jge
in
xchg
call
hlt
dec
cmp
jle
inc
pushf
cmp
push
add
sahf
push
fimuls
fstl
pop
js
push
mov
rol
push
jns
fstpt
popf
test
xchg
adc
jge
inc
daa
and
inc
sti
mov
and
and
cmp
adc
xchg
inc
mov
jmp
sahf
popl
jns
out
mov
rorw
out
lahf
orl
pop
jecxz
and
icebp
mov
mov
loope
sbb
push
cmpl
ret
xor
xchg
and
cvtpi2ps
push
lods
jbe
mov
xchg
cwtl
adc
mov
xlat
into
xchg
jge
pop
cmp
add
leave
fistpl
fldt
mov
mov
inc
lock
jmp
lret
sbb
int3
test
stos
das
pop
mov
cmp
pop
mov
das
cltd
ja
jo
push
push
shll
mov
mov
popa
inc
out
fmuls
inc
push
sbb
jle
adc
inc
sub
jo
cmp
stos
lahf
mov
or
data16
sbb
repnz
mov
xchg
sub
mov
fs
and
aad
loope
ret
inc
scas
mov
pop
cmp
pop
int
mov
mov
mov
mov
xor
stos
sbb
xchg
inc
pop
mov
sbbb
lds
ljmp
js
ja
nop
sarl
xor
pop
out
dec
and
mov
mov
popf
inc
inc
lret
xchg
pop
pop
imul
sbb
loop
pop
in
mov
inc
push
ljmp
pop
pushf
jl
mov
dec
gs
push
arpl
in
out
js
inc
mov
aas
jno
subl
push
ja
sub
xlat
xchg
rcrb
xor
adc
icebp
mov
adc
sub
and
fnsave
mov
xchg
out
or
dec
sub
inc
aaa
mov
shll
pop
inc
gs
cmpsb
and
push
xchg
jp
divb
gs
dec
inc
ffreep
xchg
sti
popf
xor
fnstenv
in
ret
in
xor
insb
xor
out
mov
inc
jne
std
pop
popf
scas
mov
ja
mov
inc
jnp
add
add
xchg
pop
and
fldt
mov
ds
mov
or
orb
push
test
mov
xchg
add
fwait
cltd
cmp
nop
xor
arpl
aam
mov
jg
in
xchg
repz
test
push
push
mov
mov
xchg
sbb
jo
push
cltd
mov
adc
pop
mov
add
lods
cwtl
inc
mov
mov
sub
imul
arpl
push
les
push
add
sbb
fldt
push
jb
or
mov
icebp
mov
aas
into
fdivrl
push
sub
and
and
orb
ficomps
mov
ret
lds
roll
add
arpl
dec
pop
mov
push
xor
push
out
mov
dec
lret
sub
pop
pushf
aas
mov
jp
cmpsb
xchg
outsl
sahf
xchg
sahf
lods
dec
inc
jl
jmp
or
sbb
in
add
inc
push
mov
pop
pop
jmp
sbb
jecxz
insb
xchg
add
mov
lret
inc
and
fidivs
bound
out
mov
clc
imul
xchg
loopne
pop
cli
jge
add
mov
pop
fst
and
sub
aas
and
jl
movsl
insb
sti
movl
mov
sbb
adc
sbb
add
jns
cltd
gs
jmp
ficoml
xor
rcrl
jae
mov
inc
push
inc
sbb
jns
out
ss
repnz
push
sub
add
arpl
mov
jnp
je
cwtl
xchg
sbbb
fs
or
sub
scas
pushf
hlt
rorb
jmp
ja
xor
xchg
les
pop
mov
mov
push
push
fsubr
pop
movlps
test
xchg
mov
push
ret
imul
test
in
sub
pop
push
or
sbb
arpl
jbe
dec
dec
fistps
add
mov
sbb
divl
mov
mov
pop
jno
cmp
pushf
ret
xor
xchg
jl
test
xchg
jl
dec
lds
jl
test
sbb
or
push
ret
nop
daa
loop
jge
sbb
fwait
lahf
cmc
clc
cmp
ret
cmpsb
jecxz
iret
mov
or
adc
stos
out
bound
rcrb
fbld
lcall
les
sbb
loop
add
cmpsl
jb
dec
xchg
popa
dec
ljmp
dec
xlat
scas
xchg
aad
or
loop
sub
sub
mov
in
xor
aam
sbb
sti
xor
push
xor
aad
pop
pop
arpl
shrl
pop
mov
push
sbb
pop
adcl
adc
repz
push
daa
xchg
mov
loope
sbb
ja
push
mov
loope
aaa
rorb
or
outsl
lahf
jno
fnclex
pop
mov
daa
cmp
test
in
mov
add
imul
gs
aaa
out
ja
inc
roll
xchg
jno
nop
stc
iret
movsl
out
aaa
mov
sbb
cltd
xor
insb
sub
xchg
fstpl
jp
adc
ret
outsl
push
out
sub
inc
movsb
pop
pop
cmp
outsb
inc
jle
push
fistpl
rorl
push
mov
add
or
shrl
add
and
and
jno
or
mov
xchg
mov
and
cmp
aaa
dec
or
test
es
movsb
out
imul
addr16
xchg
xor
mov
rorl
jecxz
outsb
test
outsl
mov
mov
outsl
cmp
and
call
sub
jno
mov
fisubs
push
pop
fcoms
and
repnz
iret
shll
sub
lods
jp
and
jle
scas
ret
jle
xor
cli
scas
enter
shr
mov
pop
jmp
fs
push
dec
jbe
test
outsl
in
aam
pop
je
lods
ljmp
outsb
sub
fs
repnz
dec
jb
out
pop
pop
das
push
mov
cmp
jns
dec
fwait
in
mov
into
rclb
out
call
dec
pop
fnstsw
scas
imul
xor
negb
into
add
or
jns
xor
subb
int
lret
imul
and
pop
int3
sbb
pop
sub
sub
jecxz
mov
jo
ja
in
fisubrl
in
notw
mov
cs
ffreep
mov
adc
jl
pop
xlat
out
mov
adc
cltd
int
js
or
mov
orb
mov
mov
xlat
sarl
push
mov
test
cltd
jb
loopne
mov
jbe
dec
cld
cmp
leave
out
jnp
lcall
or
lods
xor
inc
test
les
out
adc
jne
and
inc
les
push
xchg
cltd
mov
test
in
mulb
rorb
mov
in
ret
popa
sbb
push
push
mov
test
aas
bound
mov
dec
pop
or
in
cmpl
cmp
fwait
mov
xchg
ret
or
sbb
fisubrl
test
jge
lock
mov
jg
lret
or
cmpsb
or
sbb
das
and
push
adc
daa
mov
xlat
hlt
inc
lret
mov
mov
xchg
insb
and
jle
mov
adc
cld
cmovp
ja
call
xchg
xor
xor
inc
push
fildl
fs
sbb
loope
imulb
push
xor
or
jle
xchg
popf
sbb
cmp
jl
data16
test
add
dec
pushf
or
mov
cmp
outsb
push
jnp
jle
repnz
inc
cmp
pop
iret
sti
roll
mov
jmp
jg
mov
sub
pop
mov
out
xor
lods
lds
and
in
cwtl
cmp
push
adc
push
out
loope
push
in
cmpsl
jmp
or
xchg
xor
mov
lods
cs
lods
inc
push
rorb
lds
fs
adc
jle
or
pop
xor
jno
scas
xchg
sbb
sbb
xor
jo
repnz
ljmp
xor
xchg
pop
fcoms
cli
xchg
or
jae
xchg
pop
xlat
dec
xchg
fisttps
inc
xor
fstpt
rcrl
push
add
pushf
fs
out
push
and
sbb
mov
pop
into
movsl
loope
mov
andl
daa
pop
sub
cmp
lcall
and
pop
jno
xor
mov
push
or
push
loop
xchg
adc
in
lahf
rolb
or
std
sbb
out
daa
popf
int
leave
mov
popf
mov
bound
int3
xchg
mov
mov
hlt
pop
ret
addl
cmpsl
insl
fwait
mov
stc
imull
and
fnsave
jno
jge
fidivl
dec
inc
ss
out
jmp
fists
int
push
and
adc
lods
gs
lret
mov
lock
xor
mov
dec
jecxz
cmpl
xor
out
jg
scas
fmull
icebp
sbb
inc
push
icebp
and
mov
add
jne
pusha
mov
js
and
roll
aad
pop
mov
pusha
dec
in
adc
sub
inc
nop
outsb
push
lcall
xchg
insb
pop
push
je
add
scas
icebp
das
test
cli
push
mov
sbb
jb
aaa
push
push
cli
adc
pusha
in
xor
ss
add
inc
sbb
and
in
test
push
xor
cmp
js
inc
fisttpll
pop
mov
mov
cli
sbb
aam
sub
or
xchg
bnd
push
in
inc
or
mov
xchg
lret
call
fcmovne
stos
push
jle
xor
aaa
jns
mov
mov
imulb
pop
dec
sub
shlb
pop
add
fs
test
mov
cmp
into
out
pop
sub
lret
cld
sub
rclb
xor
lock
out
gs
xchg
out
pusha
stc
add
push
cmc
std
or
cmp
inc
jo
out
lret
mov
enter
sbb
ljmp
dec
lahf
jnp
inc
jge
sahf
jg
jp
test
sbb
adc
ja
sarb
xor
xchg
dec
xor
mov
mov
pusha
jge
add
je
aam
xorw
xchg
pusha
adc
movsl
jno
push
sahf
dec
ds
shr
arpl
lret
xchg
std
pop
insl
mov
push
and
xor
lods
add
scas
mov
jb
dec
pop
jp
int3
adc
mov
push
and
sahf
popa
es
inc
mov
inc
push
clc
sub
cmc
mov
inc
push
sbb
rcll
dec
push
ja
ja
fistps
adc
cmpsb
xchg
xchg
and
xor
mov
jge
jle
add
outsl
ret
aas
pushf
push
outsl
push
or
ljmp
fnstcw
mov
adc
sti
xchg
mov
add
push
pop
jns
imul
ljmp
lcall
dec
cmp
mov
bound
jecxz
mov
jb
push
dec
cwtl
jg
aam
lods
jns
pop
mov
xor
inc
imul
pushl
in
sbb
add
sub
pop
scas
dec
pop
and
decb
xchg
push
xchg
mov
jp
cmp
daa
nop
sahf
shrb
leave
mov
xchg
aas
lahf
mov
pop
lods
mov
mov
arpl
gs
push
dec
pop
xor
mov
lods
pop
std
push
fldl
xorb
xor
jl
test
scas
push
push
fdivl
ja
sahf
scas
shll
stos
loop
sahf
mov
push
dec
es
sub
jae
xor
stos
fmuls
int3
dec
mov
ror
lods
loopne
mov
test
jecxz
mov
and
enter
arpl
xchg
cmpsb
das
psubq
jmp
add
es
repz
add
shrb
mov
fs
inc
dec
les
add
fldcw
sub
xchg
bound
mov
icebp
push
fucom
mov
shr
sbb
test
nop
sub
pop
pop
and
sub
jl
leave
clc
xor
enter
and
pop
icebp
scas
mov
fwait
jl
and
dec
jne
out
lahf
movsb
dec
out
jl
pop
xlat
fs
dec
xchg
hlt
daa
ror
adc
cmpsl
mov
xor
push
enter
jnp
gs
lea
and
outsl
sbb
not
mov
xor
std
cmp
jecxz
add
sbb
fidivrl
lret
leave
fstl
addr16
mov
mov
sahf
sbb
mov
sbb
mov
call
ljmp
or
out
cmc
enter
dec
lods
xor
inc
mov
and
or
test
sbb
enter
pop
adc
and
xor
push
jae
pop
scas
mov
movsb
ljmp
jno
dec
xor
pop
push
pop
cmp
add
fldt
and
adc
cmp
adc
mov
ret
jmp
jnp
and
fwait
cmpl
stos
mov
push
xor
jecxz
shll
mov
jg
mov
mov
inc
push
xchg
ret
ljmp
dec
cltd
add
bound
or
xorl
jae
push
cmpsl
sbb
add
out
pushf
pop
xchg
xchg
leave
xlat
aas
mov
addr16
adc
sub
stc
jns
cmp
ja
insl
xorb
in
call
rclb
mov
dec
lret
clc
ret
lods
movsb
add
rolb
push
addr16
inc
in
icebp
add
push
in
mov
adc
mov
push
jl
xchg
and
testb
push
pusha
std
test
in
sahf
stc
push
repz
push
in
into
jp
aas
rclb
jns
shll
pushf
pop
push
int3
mov
and
stc
movsl
leave
es
lds
mov
sbb
xchg
mov
ds
rcrb
scas
lret
push
xor
fs
jmp
xchg
mov
lahf
sub
rcl
ret
xchg
aaa
scas
push
stc
repnz
scas
leave
ja
add
icebp
inc
jl
clc
daa
test
mov
aas
fsubs
loop
in
mov
jmp
andl
sarb
mov
adc
push
lahf
adc
pushf
fiaddl
insl
rcrl
push
dec
addr16
xchg
aam
push
stc
mov
into
aam
push
in
test
xchg
icebp
loopne
xor
and
adc
leave
fistpl
push
mov
pop
pop
mov
sti
add
or
fsub
outsl
iret
add
shll
outsb
dec
xchg
dec
insl
sbb
mov
mov
add
and
mov
movsb
mov
mov
cmp
scas
lret
fistpll
test
lcall
idiv
adc
fnsave
filds
dec
dec
mov
and
jecxz
xchg
or
in
cmp
xor
add
mov
xor
push
mov
pop
stc
lahf
inc
pop
sti
cli
int3
stc
nop
pop
repnz
and
push
or
ret
mov
push
inc
out
push
loop
pop
or
notl
jmp
jg
arpl
clc
jmp
dec
jbe
inc
cs
dec
notl
iret
mov
aaa
add
dec
cmp
ljmp
daa
or
test
stc
dec
lods
mov
inc
testl
lret
out
shl
dec
xor
loope
sbb
pop
dec
push
xor
in
sbb
cmpsl
ljmp
out
add
jo
lock
dec
cmp
outsl
sbb
shrl
cmc
mov
add
fdivs
jle
push
lock
mov
mov
adc
mov
jecxz
cmp
pop
imul
pop
mov
inc
pop
inc
pop
insb
sub
xchg
mov
loop
xchg
inc
jbe
inc
or
aas
imul
sti
jmp
sub
dec
adc
mov
and
rcr
jae
je
xchg
inc
shlb
adc
iret
xchg
xor
pop
inc
pop
popa
push
mov
fwait
adc
cmp
jp
iret
mov
inc
xor
sahf
jmp
in
dec
int3
xchg
popa
add
int3
fisubl
movl
cltd
leave
stos
cs
jne
in
mov
xchg
mov
mov
loopne
ljmp
divl
lods
cli
pop
lret
call
cld
test
aaa
scas
ficoms
shlb
xor
loope
xchg
les
out
aam
lcall
adc
cmp
js
pop
push
mov
and
ja
adc
inc
mov
mov
daa
jl
sti
adc
cmpsl
sub
rorl
bound
je
popa
sbb
lret
jae
add
xchg
enter
or
sbb
push
mov
leave
mov
ret
sub
push
push
movsl
int
stc
std
into
insb
ret
cs
inc
clc
mov
test
add
push
mov
iret
rolb
lds
adc
lret
insl
mov
fcoml
sahf
mov
push
hlt
mov
rorl
jns
in
subb
push
dec
fisubs
mov
pop
inc
push
cmpsb
data16
cmp
out
lret
test
dec
aam
xlat
je
nop
dec
out
mov
dec
fcmovb
aaa
mov
out
ss
test
jge
cli
push
das
call
bnd
pop
scas
lcall
rorb
pop
out
inc
js
jmp
sbb
push
sbb
sub
and
sahf
mov
das
ret
xchg
shld
push
dec
jmp
jb
pop
mov
cld
pop
mov
in
jp
adc
pop
int3
rcrb
fsubrl
stc
xchg
lcall
mov
dec
pop
mov
sbb
enter
jmp
xchg
sbb
mov
popa
in
dec
sti
push
cli
and
cmp
sbb
rcr
mov
pop
pop
adc
jb
jb
sub
movsl
add
into
mov
bound
mov
loopne
push
test
mov
adc
subl
icebp
lret
out
hlt
and
sub
rorb
sti
inc
cmc
mov
fldcw
jecxz
ja
cmp
push
sub
sbb
ret
fmull
xchg
xchg
dec
xor
out
movsl
mov
xchg
dec
cmp
outsl
mov
icebp
cwtl
push
rcl
int
cld
cmp
enter
lcall
arpl
lods
adc
and
mov
jmp
lahf
sub
div
cmp
or
mov
cs
stos
stc
mov
daa
aad
pushf
xchg
xchg
sbb
mov
mov
mov
andb
jnp
dec
ja
push
movsl
and
out
push
jbe
and
mov
cmp
push
lcall
or
and
lods
jmp
ljmp
in
push
jbe
inc
adc
pop
mov
stos
dec
pop
jns
ret
bound
aam
xor
adc
pop
mov
filds
js
fistps
sub
fwait
aad
ds
pop
mov
sbb
add
mov
mov
xchg
push
cmp
mov
sbb
nop
inc
mov
mov
jns
popf
out
xchg
xor
inc
xorb
leave
or
pop
outsb
dec
fstps
dec
mov
scas
cmc
insb
addr16
cli
push
push
fldl
sub
jg
inc
or
int3
sbb
jbe
iret
sbb
insl
insb
jno
mov
xlat
test
mov
pop
xor
cli
fistpl
mov
dec
clc
adc
test
inc
jle
dec
fcomps
mov
adc
mov
stos
fisubrl
ss
jbe
jle
mov
push
fsubrp
imul
adc
xor
mov
fadd
push
xor
adc
mov
mov
mov
popf
stos
mov
je
bound
rcl
mov
jge
shrb
and
push
in
fsubl
lret
cli
pop
jge
jge
jno
cmc
xor
movb
sahf
xchg
lods
or
add
ljmp
ret
sbb
push
and
add
mov
iret
test
ror
imul
loopne
sbb
lcall
xor
xchg
daa
scas
inc
insl
cmp
jg
scas
cmp
fstpt
stos
call
jno
loope
loopne
loop
pop
int
add
loopne
pop
aaa
or
pop
out
dec
test
sbb
sub
add
jmp
xchg
lock
inc
xchg
add
mov
xor
jns
stos
sbb
push
or
into
ja
outsl
shll
push
stos
insb
pop
xor
icebp
dec
dec
sti
daa
into
and
sub
das
push
xor
xor
inc
jl
ret
jecxz
add
dec
dec
addr16
sub
stc
jp
jl
jae
mov
movsl
mov
xchg
push
imul
pop
mov
lock
or
les
insb
dec
fdivl
inc
daa
mov
cmp
cmpsb
fnstcw
lods
je
mov
cs
scas
sbb
mov
mov
xchg
cmp
jae
add
push
clc
addr16
push
lods
add
xor
dec
cmp
mov
and
clc
and
adc
xchg
xchg
mov
test
icebp
call
jmp
push
jne
sbbb
sbb
ficomps
inc
xchg
pushf
sbb
mov
xor
fcomip
stos
sbb
les
dec
sub
and
filds
mov
or
or
aas
fcomp
mov
cltd
sbb
mov
add
daa
adc
mov
les
hlt
jnp
mov
mov
sub
cmp
ret
push
xchg
push
xor
jno
out
inc
sub
test
lret
dec
hlt
xchg
and
andb
fistl
faddl
idiv
sbbb
lods
testl
xchg
mov
rolb
jle
mov
jge
dec
cwtl
lock
stos
xchg
shll
out
push
push
inc
arpl
cmp
pop
insb
pop
je
mov
out
je
mov
insl
mov
scas
sub
in
jnp
mov
or
pop
in
popw
jmp
imul
mov
mov
add
and
push
mov
jno
daa
push
ss
into
jecxz
notl
adc
popa
jae
sbb
ja
dec
adcb
dec
jge
fneni(8087
sub
xchg
pop
pop
nop
sbbl
push
scas
and
jb
fnstcw
imull
bound
adc
sbbb
sub
sarb
push
jg
test
sub
jne
shlb
rcrb
mov
cmp
jbe
jle
mov
fs
clc
or
adc
pop
lea
in
push
ds
outsb
and
dec
jmp
lret
cmp
les
clc
jmp
or
adc
or
mov
in
popa
dec
stc
mov
push
adc
popa
add
adc
pop
pop
cmp
out
jbe
out
hlt
sbb
das
lods
lods
cmpsl
lret
lods
shl
movsl
cmp
jg
scas
rol
rcll
lods
lret
or
pop
out
sbb
lods
jns
outsl
sub
inc
popf
in
aaa
subb
sub
pop
inc
lea
or
in
inc
xchg
mov
inc
and
adc
cmp
in
mov
cmp
cli
xor
inc
mov
or
xlat
arpl
orl
and
dec
lcall
jns
icebp
add
pop
sub
movsb
or
loope
shr
movl
or
jmp
mov
repz
call
jns
and
test
or
stc
or
or
mov
imul
mov
les
cmpsb
sub
add
rclb
aam
dec
mov
lcall
mov
mov
add
loopne
sbb
lea
and
ret
push
imul
mov
inc
jnp
sti
frstor
mov
lret
and
adc
mov
insb
pop
mov
jle
cld
push
daa
push
mov
aas
lock
mov
push
pop
mov
imul
test
sub
jnp
sbb
add
in
push
test
mov
movsb
cltd
xlat
inc
ret
push
sbb
repnz
mov
lds
shl
scas
lods
mov
lcall
sti
adc
popf
fcmovb
shl
cmpsl
je
xor
int3
movsl
testb
out
and
inc
std
insb
inc
sub
cld
addr16
add
mov
or
cmp
push
add
dec
dec
mov
add
push
sbb
mov
inc
aad
cmc
xlat
lds
ljmp
inc
mov
adc
aaa
mov
xchg
in
xchg
sahf
xchg
dec
lret
dec
sbb
cmp
and
shlb
xchg
mov
fsubrs
int
lret
loope
xchg
scas
rcll
out
mov
jecxz
out
inc
aam
xchg
hlt
fbstp
add
sub
and
leave
movsb
shlb
push
mov
scas
jmp
inc
repz
ljmp
xchg
pop
outsl
out
ud0
sbb
mov
cmpsb
xor
pop
and
aaa
mov
icebp
sar
inc
hlt
dec
stos
std
inc
xchg
mov
mov
aad
jbe
cmp
dec
std
pop
push
movb
cmp
xor
clc
rclb
movsl
lods
mov
mov
outsb
mov
into
fwait
mov
jbe
cmpl
xorb
subb
arpl
pop
jge
push
pop
fstps
cs
int3
jecxz
dec
and
in
lods
mov
movsb
lret
hlt
xor
scas
jb
cs
arpl
cmp
loopne
mov
sub
lret
subb
mov
xor
std
mov
loopne
xchg
icebp
inc
push
rcrl
and
push
int3
push
cmp
shl
loope
or
test
cmp
jbe
std
xor
scas
dec
bound
adc
faddl
adc
xor
popa
adc
aaa
sbb
dec
xor
fadd
hlt
inc
mov
movsl
inc
mov
test
or
push
jge
mov
hlt
cmp
inc
int3
xlat
loope
push
jo
push
xchg
pop
mov
jnp
jnp
int3
sbbb
sarb
sahf
jge
cmp
fisubs
repz
std
xchg
or
push
imul
in
frstor
lock
loopne
push
dec
dec
pop
xor
dec
in
dec
inc
or
ret
push
movsl
xchg
ljmp
ret
lahf
mov
ret
adc
cltd
jmp
lret
fidivs
loope
lcall
sub
pop
insl
cmp
xor
cmp
sub
mov
push
fstps
xor
daa
ljmp
lret
xchg
scas
cmc
lock
andl
xor
aam
int
pop
mov
mov
and
in
clc
daa
ja
xchg
cmp
or
test
jnp
dec
aas
sbb
cwtl
int3
add
sti
loopne
aaa
lods
mov
out
pop
pop
jg
lret
pop
mov
fsubrp
outsl
dec
enter
add
dec
adc
mov
sti
dec
clc
loopne
xchg
dec
sbb
pop
xor
jae
xor
repnz
lds
jmp
shll
push
icebp
out
dec
aam
mov
jmp
aam
pop
jbe
mov
sub
loope
movsl
shll
mov
mov
ret
fs
stc
sbb
ror
out
sub
loop
movsb
cld
sub
push
gs
lea
repz
push
dec
sbb
inc
mov
jno
fildll
jae
pusha
test
out
out
add
push
jnp
fdiv
push
daa
cmp
mov
out
nop
mov
das
mov
fisubl
outsb
pop
cmc
mov
loope
mov
jle
outsb
daa
adc
movsl
gs
cld
test
popa
jl
sub
mov
pop
fdivr
arpl
jp
movsl
add
push
ret
shr
rcll
jle
mov
push
rcrb
lea
cmc
sub
mov
rcrl
enter
icebp
xchg
inc
inc
lods
or
idiv
dec
mov
aam
jnp
mov
push
jnp
movsl
sahf
push
les
hlt
push
gs
ja
xor
jle
clc
pop
loopne
in
push
test
stc
cs
stc
xchg
fisubl
xchg
insl
sub
or
mov
aaa
dec
pop
sbb
push
inc
mov
out
loopne
jno
jecxz
add
lahf
cmp
adc
addl
xor
adc
push
inc
adc
adc
vmread
stos
add
mov
dec
push
mov
mov
or
mov
stos
xchg
inc
pop
pusha
sti
sbb
or
pop
adcl
fstpl
rcrl
orb
fwait
jns
subb
or
add
sub
inc
subl
ficompl
aam
lahf
push
mov
push
lds
loope
out
sbb
setp
int3
fisttpll
dec
sbb
sbb
dec
sbb
adc
stmxcsr
je
outsl
int
or
decb
lods
addr16
or
or
pop
sub
add
and
hlt
dec
and
rolb
push
dec
sub
inc
push
jb
push
das
push
jmp
arpl
xchg
outsb
mov
mov
adc
dec
push
das
dec
xchg
adc
test
test
mov
jno
mov
and
adc
rcl
insl
cmpsl
xor
es
jge
sbb
fwait
dec
es
sbb
add
mov
imul
jns
sbb
sub
cmpsb
adc
dec
mov
adc
call
or
mov
sub
nop
jae
sbb
sub
fmuls
add
adc
mov
and
pop
add
sub
xchg
rcrb
div
mov
and
push
jbe
xchg
pusha
fwait
pop
lret
mov
sbb
fisubrl
fimull
and
push
dec
mov
jbe
dec
test
or
leave
add
and
addr16
arpl
jno
divb
jle
popf
stos
mov
loopne
mov
andl
data16
outsl
ds
es
loop
cmp
fwait
xlat
data16
jmp
mov
ficomps
cwtl
mov
lahf
lea
pop
loopne
inc
push
jge
adc
enter
mov
mov
in
cmpsb
adc
cmpsb
icebp
xor
adc
or
push
xchg
mov
xorb
inc
addr16
test
pop
inc
or
out
test
and
imul
stos
sub
jle
sbb
pop
js
mull
shrb
stos
jle
sti
mov
fisttpl
int
pop
inc
fstp
add
mov
testb
xor
jle
mov
outsl
jecxz
sub
mov
fnstenv
shrl
and
iret
mov
lahf
ret
es
push
int
cmpl
push
scas
sub
loopne
adc
mov
push
and
in
adc
lcall
in
cmp
adcb
xor
adc
aam
out
mov
ficomps
stos
in
inc
and
cmc
jbe
pop
jbe
mov
out
xor
mov
int3
dec
stc
cmpsl
repnz
push
xchg
inc
icebp
xlat
icebp
xor
shlb
lds
clc
xchg
xchg
stos
push
test
jns
xchg
push
clc
das
xchg
test
aad
push
adc
xor
add
arpl
daa
idivl
ret
scas
in
and
mov
outsb
jp
xor
out
outsl
add
hlt
ret
sub
push
xor
mov
sbbl
jp
sbb
push
in
jbe
dec
add
inc
subb
dec
cmpsb
ja,pn
cwtl
push
pushf
add
inc
jbe
stc
mov
outsb
cmp
lret
jp
enter
bound
xchg
rorl
sbb
mov
sub
loopne
lcall
or
push
addb
mov
sahf
jecxz
xor
pop
or
sub
scas
iret
sub
lods
mov
cli
aas
int
jo
testb
xchg
pop
push
loope
cs
test
lcall
fcomps
arpl
push
repz
cwtl
pop
sbb
or
inc
add
sub
ljmp
xor
iret
sbb
jmp
popa
xchg
adc
pop
push
iret
in
push
sub
lret
lods
test
adc
js
aad
jmp
sub
and
hlt
and
daa
pop
lret
loope
jle
sbb
push
or
cmpsb
loop
loop
xchg
cmpsl
aaa
lods
int
sbbb
pop
jp
ljmp
cmp
mov
sbb
outsb
sub
add
dec
movsl
xchg
pop
xor
add
push
inc
xor
ja
dec
mov
nop
movl
or
jo
jbe
scas
mov
mov
xchg
pusha
ret
or
fwait
mov
adc
lds
mov
into
int
mov
popa
in
cmpsl
jb
cmc
lods
fstl
sbb
mov
jp
and
xor
test
jp
jg
je
and
mov
fildll
lods
test
ljmp
sub
es
jne
hlt
adc
push
inc
add
cmp
cli
je
in
or
or
adc
mov
mov
add
add
mov
test
repnz
pop
adc
iret
repnz
fwait
pusha
sbb
jg
jecxz
out
adc
adc
push
fimull
or
pop
stos
dec
fmuls
fisubs
jae
adc
sub
xchg
xchg
cmpsl
outsl
repz
fstps
mov
fstp
and
shr
jb
psraw
das
dec
jno
jmp
imul
lret
call
sub
push
int3
les
setg
xlat
sbb
xor
fsts
or
pop
pop
push
int
in
xor
jns
mov
sub
dec
xor
cmp
subl
add
xchg
xlat
sbb
lea
js
shlb
iret
lock
cltd
out
sub
pop
stos
cmp
into
sub
outsb
cmp
subl
test
fiaddl
movsl
xor
shrl
dec
mov
imull
cmp
addr16
outsl
rcrl
mov
repnz
scas
or
rcr
aam
jp
clc
test
xor
out
sub
arpl
cmp
lsl
jg
add
dec
mov
sub
mov
add
subl
subl
adc
mov
sbb
fs
sbb
imul
popf
cmp
rcll
fstpl
dec
test
and
call
or
mov
sub
pop
dec
cmc
pop
xchg
adc
and
cli
inc
add
sbb
push
lock
sbb
fsub
mov
out
sbb
gs
rcrl
insl
outsl
mov
or
stc
push
cmp
bound
sub
dec
add
and
nop
cmp
or
lret
stos
push
in
pop
daa
shl
cmpsb
sbb
jns
lret
insl
or
or
aad
xor
test
or
dec
dec
cli
cmpsb
mov
rorb
push
adc
pop
ds
adc
daa
fcmovne
aam
cmc
pop
push
adcl
fdiv
adc
sub
out
or
fistps
add
pop
cld
mov
pop
popa
cmp
dec
leave
bound
adc
rorb
xchg
lds
call
dec
mov
cltd
out
dec
sarl
cld
leave
or
xlat
fisubrl
jns
xor
add
add
adcl
add
vandnps
jnp
pop
test
sub
cwtl
or
hlt
cmp
repz
cltd
mov
fsubr
inc
outsl
and
test
jae
icebp
sub
mov
orb
mov
xchg
shl
sub
sub
push
sbb
into
inc
mov
xor
jae
push
inc
add
lcall
adc
dec
lock
scas
add
jno
aad
mov
adc
pushf
push
mov
sub
cmp
xlat
sbb
call
test
jl
in
jmp
and
data16
xor
inc
dec
push
repnz
mov
out
lds
adc
shl
nop
mov
push
lods
leave
cmp
mov
xor
adc
push
jno
push
pop
ds
ss
aad
cmp
xchg
xchg
mov
cld
push
sub
adc
mov
or
cmp
rcrl
sub
int3
in
mov
jns
in
cmc
add
xchg
mov
mov
xchg
add
adc
mov
das
imul
xchg
pop
sub
cmp
push
pop
in
sub
mov
push
jns
pop
pop
jo
sbb
sub
sti
mov
xchg
jecxz
xchg
mov
and
es
inc
mov
pop
mov
add
lods
and
dec
mov
mov
int
outsb
inc
icebp
jae
pop
std
sub
add
in
les
add
xor
hlt
add
lret
mov
sub
stc
lods
divb
pushf
pop
mov
mov
je
xor
cmp
add
dec
ds
cli
sbb
mov
jne
mov
mov
fsubl
cmpsl
mov
add
ja
mov
jno
xor
cld
or
ret
pushl
jg
test
lods
cmp
adc
sub
test
imul
nop
negb
sbb
xor
lret
push
shrb
dec
jecxz
test
push
pop
sub
fldt
test
mov
movsl
clc
popf
xorps
and
push
test
cmp
xchg
js
jno
cmp
flds
mov
dec
addr16
sbb
mov
and
aaa
jns
push
mov
jg
inc
sti
cmp
add
ficoml
jg
mov
addr16
cmp
jmp
lods
cltd
push
mov
mov
jle
ss
cwtl
test
push
sbb
stos
movsb
adc
ficoml
in
or
out
push
int
in
add
pushf
cwtl
test
pop
aad
cwtl
repz
pop
les
mov
jmp
daa
pop
push
imul
imul
pop
push
pushf
push
mov
xorl
ljmp
cmp
inc
stos
stc
stos
movsb
push
pop
iret
hlt
out
arpl
add
inc
or
add
sub
and
lds
cli
dec
out
int3
push
shr
xchg
imul
sub
jne
sbb
adc
je
mov
insl
test
inc
mov
pop
mov
xchg
lea
in
or
das
push
push
xchg
dec
rep
pop
or
cmp
loope
mov
inc
cmpsl
popf
lahf
lods
in
rcr
pop
das
push
ret
pop
mov
ret
mov
int
mov
loopne
lcall
fstl
jo
daa
add
add
lahf
sbb
or
gs
pusha
fnclex
in
or
cmpsb
xchg
test
fwait
jl
mov
shl
mov
jb
add
xor
arpl
xchg
iret
js
xor
test
mov
pushf
hlt
mov
lods
xchg
cmc
outsb
cltd
push
dec
inc
jl
add
sbb
add
or
mov
push
insl
pushw
mov
fstl
xor
mov
jmp
ss
lds
shlb
adc
and
or
ljmp
or
inc
adc
mov
xchg
popa
insb
sbb
and
jl
jg
dec
mov
outsb
mov
xor
jle
xchg
xor
or
movsb
pop
cmp
jl
mov
push
sbb
mov
arpl
mov
fcomps
imul
iret
pop
xlat
movsb
adc
mov
sbb
push
iret
adc
adc
dec
jge
sub
mov
push
mov
shlb
nop
rol
rorb
push
push
inc
test
loopne
rep
mov
dec
xchg
ficoms
test
or
xor
jp
pop
xchg
inc
push
scas
mov
pop
mov
iret
dec
repnz
jl
rorb
adc
cld
stc
fldl
lret
fnstcw
pop
xchg
pop
insl
or
popf
std
xchg
pop
xchg
xchg
clc
jp
imul
adc
pop
pop
fcom
xchg
mov
xor
or
add
sub
sub
negl
lret
lahf
and
js
lods
aam
pop
aad
or
je
shrb
push
repnz
xchg
outsl
insl
jae
mov
adc
pusha
mov
scas
fs
movsl
jmp
or
idiv
incl
push
fisttps
test
fidivs
stc
adc
inc
dec
cmp
inc
jo
jo
xor
mov
or
or
xchg
mov
out
cmp
mov
push
mov
fwait
clc
lods
cmp
or
subb
pop
ret
sbb
push
mov
addr16
cmpsl
jno
or
cld
cmpl
cmc
xchg
lds
jge
pop
mov
mov
xchg
xchg
xor
and
jb
jbe
movsb
jecxz
mov
xchg
mov
xchg
jbe
add
jmp
out
pavgb
fstl
xchg
insl
test
cmc
mov
addl
aad
loop
push
ljmp
pop
jmp
ljmp
add
int3
jne
cli
mov
add
stos
and
push
sbb
rolb
push
pop
xchg
or
lea
cwtl
popf
xchg
jb
out
sbb
aaa
push
arpl
inc
dec
jecxz
pop
mov
cmp
or
movsl
leave
orb
push
sub
push
mov
jmp
out
or
outsb
outsl
fldenv
jl
cmpsb
fistps
in
dec
fsubr
cmp
mov
or
popf
xchg
mov
sub
arpl
loop
out
dec
push
or
mov
adc
jecxz
movb
or
inc
jb
mov
add
mov
xchg
jp
test
jns
mov
mov
in
neg
lds
dec
inc
jl
aaa
mov
aaa
sub
jecxz
aas
push
into
arpl
sub
gs
adc
loop
iret
pop
dec
mov
imul
ret
sub
dec
hlt
xchg
lret
lock
add
dec
mov
in
rcr
frstor
cmp
mov
xchg
push
repnz
fwait
lcall
cmp
or
and
ss
aad
cwtl
jno
sbb
pop
sub
sbb
or
pop
jnp
jae
lea
leave
push
sar
iret
jge
cmp
pushf
mov
imul
shll
cmc
pop
xchg
out
adc
sti
out
xor
cs
and
cmpsl
std
loop
pop
sub
jmp
add
scas
outsb
lods
or
pop
cmp
mov
cmp
adc
fcmovnu
lds
xchg
jl
xchg
push
mov
repnz
xor
mov
fcoml
cmp
inc
iret
aas
loopne
cmpsb
sbb
push
cli
xchg
imul
in
jle
popf
jae
mov
cmp
pop
fisubrl
pop
jecxz
movsb
stc
cwtl
xchg
jp
mov
aam
mov
push
xor
and
fwait
scas
sti
and
xor
gs
fsts
sub
rorb
or
dec
fs
ss
les
mov
cmpsb
jp
add
mov
adc
sub
fdivrl
dec
mov
dec
int3
jns
insb
daa
test
repz
dec
add
mov
adc
pop
mov
aad
pop
mov
sbb
sub
outsl
dec
jle
cmp
dec
add
mov
push
clc
lret
outsl
xchg
pusha
inc
sahf
or
push
fdivl
ljmp
in
aaa
inc
ss
cmpsb
stc
mov
mov
mov
lret
imul
or
push
xor
stos
mov
push
cmpsb
dec
insb
and
stos
add
outsb
mov
lock
filds
in
sbb
add
jbe
dec
mov
push
sbb
mov
mov
jmp
sub
cmpl
data16
pushf
inc
xchg
mov
shrl
push
fiaddl
pop
push
out
data16
jne
repnz
push
push
fldl
jp
pop
loop
incl
xor
and
rcll
es
mov
shlb
pop
add
jl
es
lods
push
in
xchg
fcoms
shrl
loop
movsb
jge
mov
inc
loop
sub
pop
js
or
mov
in
ljmp
add
cmp
push
lods
in
clc
sti
add
mov
inc
adc
les
lcall
in
leave
hlt
lcall
int3
aas
loopne
pop
movsb
xor
xor
fisttps
mov
stos
dec
imul
addr16
ljmp
hlt
imul
jl
pop
ret
js
inc
jnp
outsb
mov
sub
xchg
push
xchg
fisttps
pop
outsl
ljmp
std
or
inc
add
mov
test
xlat
fstpt
mov
mov
mov
insl
mov
ret
inc
int
pop
pop
daa
scas
rcll
jns
fidivrl
lret
jnp
gs
push
mov
fcoms
and
aas
pop
cmp
int
lret
dec
and
repnz
test
push
repz
cmp
or
inc
jmp
sub
xor
and
mov
flds
lods
addr16
out
cltd
pop
mov
and
les
jecxz
cmpsb
jns
pop
inc
fs
add
cmpsl
ficomps
sub
addr16
mov
stos
add
lret
mov
cmpsl
mov
sti
jecxz
xchg
add
ds
cli
cli
mov
loope
loope
sub
inc
xor
fstl
or
and
popf
xchg
xchg
aas
push
pop
fsubrl
mov
out
lds
sbb
lretw
fildl
cmp
imulb
nop
mov
xor
cmp
xor
add
sub
sub
addr16
cmp
stc
ljmp
daa
dec
cwtl
les
lret
loopne
mov
mov
loop
sbb
add
stos
inc
jmp
bound
imul
gs
andb
jl
mov
xchg
sti
sti
sbb
mov
or
pusha
sbbl
shll
jle
ljmp
sub
or
adc
mov
mov
sbb
pop
pop
mov
dec
aad
aad
push
es
xchg
ds
inc
pop
sbb
shlb
bound
push
pop
xchg
mov
mov
mov
pop
les
dec
nop
mov
ja
hlt
mov
push
int
inc
sti
jne
fdivr
pop
aas
daa
enter
fwait
lret
sbb
inc
cwtl
dec
push
push
mov
xchg
out
xchg
subb
imul
mov
cmp
sub
mov
mov
je
jl
cmp
cmc
jmp
and
mov
mov
or
mov
stos
mov
push
fucomip
scas
ret
lds
push
push
dec
loop
dec
movsb
nop
push
cmp
and
fisttps
and
lret
inc
push
pop
mov
inc
daa
lret
mov
jl
js
pusha
js
xchg
sahf
cwtl
xor
inc
loopne
jno,pn
xchg
outsl
xchg
mov
sarb
add
ds
repnz
lods
outsl
xchg
sbb
aas
jg
sbb
push
flds
cmp
pop
mov
pop
ss
or
jl
mov
dec
dec
jg
call
mov
cld
cs
sub
pop
sub
adc
xchg
add
xchg
rcrb
xor
push
fwait
dec
cmc
nop
hlt
ret
xchg
pop
cmp
shl
cmp
mov
movsb
inc
push
cmp
sub
notl
mov
je
mov
sub
cmpsl
inc
fnstcw
je
pop
push
cmp
push
cmc
jge
and
lcall
repz
loop
in
mov
and
or
aad
and
sbb
leave
mov
addr16
cmpsb
push
inc
push
mov
push
rorl
adc
add
ss
inc
mov
insl
cmp
mov
fbld
inc
mov
mov
inc
test
sti
push
icebp
pop
sbb
mov
int
dec
out
xor
ficompl
fldcw
es
xchg
xor
ret
adc
pushf
cmc
je
loop
add
jge
faddp
inc
mull
push
lods
int3
scas
xor
sarl
xor
mov
pop
mov
cmp
lret
lods
mov
clc
lahf
mov
mov
in
out
push
ljmp
and
pushl
push
xchg
sbb
mov
push
adc
je
pop
mov
push
mov
push
aad
out
pop
je,pt
in
sub
add
add
ficoml
mov
cmpsl
aam
ficomps
fwait
adc
sbb
sbb
jne
pop
or
cmp
movsl
adc
js
jge
xlat
jb
rcll
xchg
mov
cld
pop
add
ljmp
cmp
idivb
sbb
sahf
push
cwtl
gs
das
ds
xchg
js
shrl
dec
clc
push
mov
jnp
scas
fwait
das
clc
mov
add
test
pop
push
add
cs
push
mov
mov
ret
push
call
mov
push
hlt
ret
lret
cmpb
pop
or
jmp
jnp
test
xor
mov
jo
dec
inc
jge
pop
pop
xor
mov
cmpsl
mov
push
gs
mov
pushl
shll
dec
and
mov
and
jle
sub
lock
mov
add
std
and
sub
out
stc
in
add
mov
int3
test
add
add
pusha
pop
inc
popf
jb
cmp
in
add
inc
mov
adc
ss
cmpsl
jp
xor
dec
addb
inc
fistpll
movsb
aas
mov
or
mov
xchg
mov
fucom
jg
mov
scas
jae
aam
rcl
addb
and
cmp
loope
stos
out
jno
rcll
lahf
jmp
mov
xor
aas
dec
inc
lahf
mov
stos
mov
xchg
mov
dec
mov
mov
popa
das
pop
xchg
rcll
sbb
dec
adc
fldcw
push
and
enter
repz
push
int
test
jmp
ror
les
and
ljmp
push
and
leave
je
inc
test
and
shl
mov
stos
mov
jb
in
nop
fsubrs
xchg
imul
add
sub
inc
jge
out
sub
nop
jl
cmp
sti
lea
lret
push
rorl
repnz
test
jo
fcmovb
icebp
jp
jnp
imull
stos
jmp
mov
jbe
xchg
adc
pop
dec
and
les
cmc
cmp
test
mov
mov
add
adc
scas
and
shll
cmp
jae
loopne
sub
sahf
mov
fiadds
gs
dec
xchg
dec
mov
sbb
jmp
jge
insl
pop
jp
or
sbb
xchg
cs
pusha
inc
pusha
mov
adc
loopne
cmc
jo
inc
or
loope
mov
jl
and
test
mov
inc
sbb
sub
mov
sub
lds
daa
aaa
mov
xchg
and
stos
or
xchg
dec
mov
bound
xor
shrb
loope
jmp
push
pop
dec
adc
xchg
pop
dec
test
mov
sbb
cs
push
fucomp
scas
push
push
mov
insl
arpl
push
jecxz
out
rcrb
xor
sub
mov
in
scas
push
jge
and
and
iret
xor
leave
andl
into
fprem
jne
xor
mov
sbb
insl
sbb
int
pop
sbb
leave
jle
loop
pop
sub
cmp
in
and
ljmp
lret
xor
aad
mov
in
mov
xchg
popl
add
cmp
xchg
into
ss
adc
mov
addr16
jo
popa
dec
mov
sti
int3
gs
sub
mov
adc
into
jmp
shlb
test
mov
movsl
mov
iret
adc
inc
cmc
xor
and
push
add
out
ficoml
adc
pop
nop
dec
add
mov
aam
cmp
shl
aaa
fs
js
xchg
fimull
cmpsb
stc
leave
mov
mov
out
pop
inc
cmp
popf
scas
outsb
jb
and
aad
mov
stos
testl
jnp
and
push
cmp
sahf
push
leave
mov
cmpsl
or
jb
mov
mov
jecxz
outsb
scas
addr16
fsubp
stos
lock
movl
ljmp
mov
daa
std
xchg
test
aaa
jecxz
aad
push
adc
xor
push
mov
pop
sbb
jp
insl
outsl
or
movsb
subb
ss
fidivl
js
mov
fstpl
mov
inc
in
pop
addb
jl
mov
push
cli
jb
add
or
cltd
jo
jge
nop
out
fstl
stos
xchg
cmp
ja
dec
ffreep
lahf
xchg
popa
outsb
sbb
adc
and
dec
std
pushf
cmp
stos
push
and
call
stc
fs
mov
dec
imul
das
xor
jge
jecxz
out
sbb
or
nop
repnz
mov
sbb
int3
lcall
xchg
pop
aad
lods
push
inc
push
mov
cmpsb
fnstcw
jmp
loop
aam
inc
xchg
test
loope
leave
in
and
add
popa
pusha
repz
xchg
fdivl
add
loope
jg
jge
popf
je
adc
movsl
mov
jmp
or
lds
gs
jno
lret
ret
shrl
mov
and
out
ret
jns
sub
mov
lret
popf
mov
lods
mov
in
jl
mov
mov
scas
or
pop
push
mov
sbb
xchg
sti
mov
cs
cld
dec
mov
out
aad
dec
xchg
sub
in
sbb
xor
mov
data16
mov
fcmove
xor
leave
cmp
in
insb
xchg
mov
add
xlat
mov
push
je
mov
sbb
inc
push
lods
mov
xor
sub
js
xchg
sbb
push
popf
iret
push
mov
shlb
mov
sbb
mov
jmp
fwait
out
stc
jp
adc
clc
arpl
repz
push
and
dec
fimull
xlat
pop
push
cmp
in
fidivs
rclb
add
or
divl
or
pop
push
mov
xor
or
movsb
stc
mov
icebp
push
nop
push
fstpl
arpl
shrb
push
add
test
add
movsl
pop
mov
sbbl
and
cmp
jp,pt
dec
mov
cltd
inc
repnz
push
mov
into
dec
orb
push
push
ljmp
mov
outsb
fdivrp
adc
out
pop
cs
pop
adc
mov
or
cwtl
ds
sbb
xchg
mov
lds
push
addb
loope
stc
movsb
pop
or
mov
es
cmc
mov
cmp
lods
mov
iret
cmp
jns
xchg
dec
lret
rcrl
pop
cltd
lret
insl
popl
ret
inc
lods
scas
mov
xchg
push
nop
add
enter
pop
mov
in
imul
adc
scas
sbb
dec
lret
sbb
loope
push
push
cmp
jno
dec
cmp
daa
mov
decl
daa
xor
stos
push
mov
lahf
jo
xor
push
ret
mov
xlat
mov
or
sarb
pop
fxch
std
js
push
dec
stos
loope
gs
loop
rcll
test
xchg
es
or
dec
dec
test
mov
jo
out
inc
jl
pushf
push
aas
jmp
or
or
sbb
mov
mov
mov
fistl
movsl
sbb
popf
cltd
dec
sbb
push
popa
cli
movsb
push
scas
ja
lahf
andb
in
ds
loop
jge
fcompp
das
fiadds
and
pusha
je
pop
jae
aaa
hlt
cmpsb
dec
mov
outsb
jg
cwtl
loopne
xor
cmp
aad
enter
pop
je
push
xorl
push
xchg
test
movsb
sub
ss
lods
fldl
ss
push
and
push
jge
xchg
fmuls
mov
cwtl
inc
lret
ss
sti
cmpsb
cmp
mov
mov
xchg
in
addr16
mov
cmpsb
cmp
mov
mov
inc
xor
xor
sti
sub
bound
sahf
inc
sar
ss
push
insb
out
out
cld
sbb
push
pop
mov
test
xlat
lret
add
xor
sub
mov
pop
std
lret
pop
jnp
jne
sbb
icebp
repz
jne
fldcw
mov
test
dec
movsl
mov
pop
ret
inc
mov
fs
xorl
push
loopne
sub
jnp
imul
mov
es
movsl
add
cmp
mov
adc
cmpsb
or
out
push
and
jecxz
fwait
sbb
adc
fildll
dec
roll
pop
ror
js
push
xor
add
mov
idivb
add
inc
mov
and
cmc
arpl
std
dec
js
sub
inc
mov
and
jbe
xlat
add
into
jb
cld
add
ret
or
loopne
test
rclb
sbb
cmp
sbbl
adc
ficoms
test
mov
mov
push
repz
push
add
jns
cmp
inc
pop
mov
not
mov
push
stc
mov
outsb
mov
push
dec
push
sub
sbb
test
into
lret
adc
jne
xchg
and
cmp
test
mov
in
aas
int3
pop
fsubrp
jge
or
cld
nop
lds
jmp
jmp
mulb
out
cli
lods
jmp
popa
jae
rcrb
in
subb
push
iret
mov
xchg
xchg
in
cmp
adc
cmp
sub
fbstp
dec
fdivs
in
mov
mov
dec
or
int3
gs
std
lock
cmp
in
push
jno
mov
inc
mov
enter
fisubrl
test
outsb
popa
push
mov
outsl
test
in
mov
dec
cld
pop
dec
inc
inc
lret
add
fs
xchg
jb
jle
inc
je
in
sbb
mov
and
cmp
ljmp
fdivrs
fdivrl
daa
ja
add
addr16
out
aas
pop
stos
sub
out
adc
jp
fsubp
xchg
add
pushf
jl
ret
orl
adc
jbe
pop
or
cltd
pop
fwait
je
std
adc
and
cltd
mov
mov
pop
lahf
mov
jp
mov
push
mov
mov
insl
mov
lds
or
sub
adc
push
lods
cmpl
pop
mov
es
xlat
inc
xor
xchg
inc
mov
and
push
jmp
fdivl
xchg
fdivp
inc
mov
cmp
mov
pop
fstpt
mov
dec
test
pop
cmpsb
and
loope
sbb
mov
imul
lretw
and
jecxz
cmp
xlat
adc
cs
andl
sub
mov
or
sbb
xchg
mov
out
repnz
arpl
loop
add
jge
das
cmc
lods
push
jg,pt
adc
or
rol
fisubs
inc
or
rorl
aam
cmp
mov
ljmp
scas
sbb
jl
mov
push
xor
cmp
mov
inc
push
in
and
in
arpl
cs
iret
and
mov
add
shlb
ljmp
fistpl
imul
xchg
fiadds
negl
mov
or
push
jp
out
xor
and
or
mov
loope
rcr
push
pop
dec
stos
sub
nop
xor
dec
loope
fdivs
ljmp
jg
iret
aaa
adc
jp
mov
out
mov
jge
test
mov
xlat
sbb
sub
mov
dec
int3
jg
int3
popf
jp
andl
mov
or
and
push
sub
sbb
fcmovnbe
mov
dec
and
popf
into
imul
cmpsl
out
mov
jp
push
push
inc
into
aas
loopne
lea
jno
arpl
iret
push
dec
subl
adc
rcll
lcall
mov
bound
xchg
inc
and
lret
outsl
push
adc
adc
dec
ret
xor
fst
orl
mov
clc
cmpsl
pop
scas
sub
daa
aas
nop
stos
push
jbe
pop
inc
clc
jl
add
jae
mov
xchg
sbb
jmp
cmp
pusha
repnz
add
jnp
add
mov
pushf
jne
jne
fs
jl
btc
sbb
insl
cld
dec
mov
or
cmpb
test
mov
jo
push
and
sub
jbe
stc
pushf
pop
cmpsl
lock
repz
inc
mov
inc
jp
lock
pop
outsl
cmp
test
lock
outsl
sahf
flds
sub
mov
xor
jae
test
shlb
mov
mov
mov
xor
daa
mov
push
leave
and
mov
adc
fxtract
stos
cmp
push
xchg
sbb
in
fstl
mov
lahf
es
std
and
shlb
negb
jmp
and
cli
jno
out
lods
daa
and
push
aas
arpl
cltd
cltd
addr16
out
adc
fisttpll
in
push
adc
jne
pop
mov
lds
inc
out
in
cmp
les
pop
pop
xchg
push
and
jle
or
inc
lods
xchg
gs
jnp
mov
or
sbb
js
arpl
sbb
push
mov
mov
lds
add
pushf
mov
cmpsl
xor
fcom
stos
test
mov
mov
ss
xchg
cmp
push
cmpsl
xchg
aas
in
and
insb
fcoml
scas
cmpsl
fcoms
jl
and
mov
adc
and
or
aam
cmpsl
mov
outsb
outsl
xchg
push
jb
pop
sbb
jo
adc
fwait
idivb
cmovo
xor
push
stos
outsl
and
push
xor
pop
in
xorb
inc
jb
hlt
popa
jo
inc
mov
sub
dec
or
adc
fidivrs
fcoms
sbb
pop
mov
xor
dec
mov
ficomps
test
sbb
inc
push
hlt
mov
enter
rorl
cmp
adc
mov
mov
cmp
and
pop
sarb
loop
dec
push
adc
ret
out
lods
sbb
outsl
xor
nop
neg
dec
int
inc
mov
stc
inc
jne
cmp
cwtl
rcrb
xchg
jns
aaa
sbb
mov
pusha
js
jmp
ss
gs
lret
shl
xchg
mov
cmp
xlat
fs
aam
add
mov
sbb
outsl
cli
sti
stc
int3
inc
mov
leave
push
push
rol
hlt
mov
jl
out
shll
or
cmp
js
push
movl
cmp
jbe
mov
inc
cmp
mov
mov
ret
mov
sbbb
in
icebp
lods
daa
push
xchg
mov
lods
jmp
mov
fwait
adc
loop
jmp
dec
and
lret
sbb
pop
push
pop
call
pop
push
jo
fdivl
or
cmp
in
cwtl
jae
sub
icebp
inc
shrb
sub
data16
in
xchg
pop
les
pusha
fsubp
and
xlat
adcb
pop
cwtl
add
aad
rorb
xchg
cmp
pushf
test
xor
add
add
repnz
daa
push
mov
or
insl
aam
orl
test
push
popf
pop
dec
dec
dec
mov
scas
jns
sub
xor
sub
imul
xchg
sahf
iret
sti
adc
mov
inc
loop
jo
inc
lods
aaa
mov
test
jg
loope
fadd
fists
inc
inc
out
enter
push
bnd
pushl
cmpb
or
sub
popf
test
cmc
dec
leave
cmc
and
xor
jl
test
mov
push
aad
xchg
mov
xchg
popa
sub
out
or
pop
cmc
fsubs
mov
in
jne
jp
xchg
add
insb
aaa
push
adc
mov
lret
add
xor
cwtl
std
sub
lea
mov
xchg
data16
repnz
dec
jbe
mov
jo
je
xchg
xor
or
lods
add
decl
out
out
jae
bound
adc
outsl
outsl
push
stos
jge
xor
xor
shll
cmp
or
pop
or
xchg
jns
subb
pop
add
arpl
inc
mov
jg
sub
inc
paddusb
fnsave
out
jbe
push
movsb
mov
mov
sbb
test
push
pusha
sbb
mov
into
ds
aad
negb
jne
xchg
adc
push
pop
add
jo
int
push
icebp
addr16
scas
push
pop
adc
jne
cli
ja
mov
mov
add
or
arpl
jg
loop
jmp
xor
add
adc
lods
lcall
fcompl
mov
dec
xlat
cwtl
shrl
jge
mov
xor
outsl
clc
rcll
and
mov
add
mov
icebp
test
leave
or
nop
ret
iret
xchg
adc
cmpsb
cltd
or
cmp
inc
cmp
cmp
adc
or
rcrl
arpl
jne
mov
mov
orb
inc
mov
ret
dec
push
xchg
ljmp
cmp
insl
inc
aad
cmp
and
leave
jmp
push
dec
in
jb
fs
push
pusha
pop
xchg
sbb
mov
pusha
sub
mov
mov
jl
cld
out
mov
lret
sbb
jo
inc
cmp
mov
ja
hlt
scas
cs
dec
mov
mov
fisttpll
xstore-rng
cmpsl
xchg
sbb
push
scas
stos
jno
mov
inc
sbb
aad
jo
sbb
dec
xor
sbb
jge
mov
cmpsl
rcrb
loope
mov
mov
into
call
arpl
push
jb
xchg
repz
push
mov
cmc
js
outsb
out
xchg
mov
or
roll
pop
mov
push
hlt
mov
push
xchg
mov
gs
mov
adc
mov
shlb
sbb
xlat
in
cmp
test
test
in
xor
jecxz
testl
lcall
xchg
lods
cmp
sbb
or
pop
addr16
repnz
stos
pop
pop
cli
sbb
jne
faddp
fdivs
test
xor
ss
enter
mov
dec
cmpsl
inc
movsl
movsb
roll
pop
push
fidivs
mov
mov
in
mov
jmp
icebp
out
test
adc
push
hlt
add
dec
mov
push
or
or
in
and
out
cmp
scas
xchg
pop
fcmovnb
in
xor
aad
add
mov
dec
sub
insl
inc
push
leave
rorb
icebp
in
adc
dec
cmp
lcall
es
mov
pop
rol
sub
xchg
jecxz
addr16
dec
mov
loop
mov
inc
bound
pop
mov
insb
push
sahf
call
repnz
inc
je
xchg
cmp
cmp
cmp
pop
add
mov
das
out
sbb
lock
and
mov
daa
jge
adc
nop
rcrl
testb
jns
test
jl
pop
push
loope
ss
gs
push
out
mov
outsl
push
or
rorb
into
mov
clc
cmc
popl
lods
dec
mov
pop
popa
loop
mov
pop
lds
sub
adc
push
fwait
mov
or
pop
jbe
or
rclb
cmpb
shr
fldl
dec
fs
gs
data16
icebp
in
in
repz
fists
test
ret
mov
je
ret
mov
nop
add
pop
shll
inc
jne
in
jge
pusha
pop
icebp
sbb
pop
gs
dec
imul
mov
add
push
and
cmc
push
loop
adc
cmp
xlat
mov
ds
in
fmuls
imul
xlat
mov
mov
lock
jae
sbb
and
mov
iret
pop
and
fildl
or
xchg
insb
cmp
mov
push
push
testb
in
inc
insb
adc
pop
das
pop
dec
fsubrl
add
pop
out
ds
div
setge
adcb
push
lock
out
stos
int3
dec
xchg
mov
sub
cmp
cmc
int
imul
pop
es
cld
jl
add
in
or
int
add
ss
xchg
adc
mov
addb
pop
jno
jmp
enter
or
outsb
or
or
and
cmp
push
adc
xlat
cmp
je
jp
pop
cmpsb
popf
add
mov
jl
decb
xor
lods
loop
data16
test
mov
mov
jge
cwtl
fnsave
dec
adc
or
dec
pop
and
fsubp
pop
sub
xor
lods
cmp
pop
push
fsub
cld
leave
mov
stc
push
stc
in
aas
in
int
ficoms
scas
aam
lods
lcall
xchg
inc
pop
cmp
cmp
mov
xchg
pop
or
test
outsl
jmp
dec
and
mov
mov
lret
sub
mov
sahf
out
mov
xchg
sti
pop
pusha
mov
iret
jae
inc
push
arpl
in
cs
and
insb
mov
mov
mov
pop
mov
mov
loope
pushf
push
inc
repz
dec
xor
and
inc
mov
cmp
cwtl
sub
mov
insl
push
sub
outsb
jmp
add
bound
or
dec
std
jp
repnz
repz
lods
je
or
fdiv
fsubs
das
cld
movsb
jecxz
inc
cmp
mov
cmp
sub
sbb
aad
xor
and
and
aam
adcl
das
out
test
adc
push
ja
add
imul
sahf
xlat
loopne
sti
xchg
adc
jae
or
xor
es
fucomip
dec
ljmp
daa
inc
pop
sbb
jp
jmp
scas
jp
incb
dec
cmp
aaa
lock
jb
xchg
outsl
hlt
popa
push
enter
aad
inc
cmp
mov
xor
push
lcall
jecxz
in
in
and
addr16
mov
pop
stc
pop
insl
xchg
je
repz
popa
call
loopne
ret
ret
divb
aas
xchg
ds
adc
fwait
push
sub
bound
sbb
and
out
or
jnp
jl
in
movsl
into
pop
cmp
xor
pop
adcb
dec
mov
jne
in
inc
xchg
pop
inc
fsubs
pop
in
mov
shrb
adc
xor
mov
popf
mov
xchg
push
add
push
xchg
pop
xor
loop
or
jecxz
and
dec
jp
rcrl
ja
jmp
decb
push
jno
pop
jbe
and
xor
mov
ss
aad
pop
push
add
divl
pop
push
jl
jmp
xchg
ljmp
aad
push
add
adc
fnstsw
notb
jno
rorb
in
dec
sub
cmp
stos
xor
mov
or
push
sub
fs
mov
outsb
subl
adc
movsb
cs
pop
leave
push
ss
outsb
xor
out
fwait
cmpl
inc
sub
mov
shlb
dec
movsb
dec
int
movb
xchg
add
lds
mov
ss
mov
std
es
shll
push
aaa
fiaddl
lock
lret
xchg
push
sbb
jno
lahf
pop
popf
lret
xchg
pushf
test
aam
inc
fninit
shrb
fwait
std
xor
mov
dec
aas
push
mov
stos
adc
inc
jno
cltd
inc
sub
aad
rcrb
xor
jae
mov
je
jno
inc
mov
push
or
mov
dec
sub
pop
push
mov
rorb
dec
xlat
xchg
aam
pop
sub
test
inc
aam
jle
inc
push
mov
jl
push
std
ja
xor
and
mov
out
mov
imul
outsl
or
sbb
push
insb
or
xchg
dec
xchg
mov
mov
dec
scas
inc
scas
je
mov
enter
jmp
hlt
mov
sbb
adc
std
scas
ljmp
fldt
int
daa
arpl
xor
and
cmpsl
xor
ret
in
dec
inc
inc
ljmp
mov
dec
and
int3
push
jno
adcb
and
cmpb
add
inc
out
addr16
fcompl
loopne
pop
fiadds
loop
enter
arpl
insl
sti
pop
pop
pop
mov
adc
pop
pop
pop
fwait
mov
cmp
add
sahf
iret
sub
sahf
clc
inc
mov
cmc
mov
xchg
mov
stos
shlb
dec
dec
push
sbb
lcall
push
xor
lods
sbb
mov
sbb
pop
add
daa
dec
cmp
pop
sbbb
mov
adc
test
dec
andl
mov
mov
fwait
cwtl
or
cmp
push
lods
insl
rolb
and
repnz
mov
pushf
cmp
repnz
scas
fildll
inc
or
das
jecxz
sub
repnz
xchg
lods
loope
mov
ljmp
maxps
push
xchg
out
int
popa
xor
mov
int
xchg
xchg
xchg
and
aam
and
fcmovnbe
mov
jnp
in
cmpsl
ljmp
movsb
or
mov
or
js
mov
into
pusha
and
push
mov
and
adc
je
jo
sahf
int
loopne
jb
push
imul
pop
inc
xchg
jne
mov
xchg
bound
sub
jmp
push
and
sarl
pop
movsl
outsl
es
add
loop
rcrl
cmp
scas
sahf
cld
shrl
inc
xor
lock
inc
jns
movd
jge
sbb
cmp
adc
in
fstpl
mov
fdivs
cmp
in
xchg
inc
mov
test
jmp
cli
mov
rorl
bound
negl
aaa
pop
mov
push
ss
dec
mov
in
and
flds
xchg
jp
cli
or
je
mov
aas
lock
daa
int3
fisttpll
movsb
les
pop
cmp
pop
dec
inc
popf
sub
pop
je
repnz
xor
cs
mov
jg
rcrb
daa
test
mov
addr16
test
loop
addb
pop
sbb
in
add
imulb
arpl
sub
xor
inc
jbe
sub
jne
bound
gs
fmull
sub
or
imul
movsl
call
ja
aam
stos
cltd
inc
inc
jmp
imul
scas
jno
xchg
jge
add
addr16
mov
sahf
pop
idivl
push
ja
shll
inc
jg
push
jo
sub
mov
movsb
or
test
or
mov
sub
cli
push
mov
cmpb
adc
inc
decl
out
divl
and
mov
cmp
or
sbb
ljmp
add
push
xlat
mov
push
call
inc
add
or
jb,pt
or
jl
dec
and
call
clc
jl
pop
test
shll
icebp
pop
jno
or
add
mov
cmp
dec
shlb
adc
dec
push
push
push
jno
in
adc
xchg
push
or
adc
push
xchg
lock
push
punpcklbw
lds
inc
push
mov
cmp
ret
enter
fwait
xor
mov
fadds
xchg
and
movsl
mov
cmp
push
rolb
jle
mov
stos
mov
outsl
inc
imul
pop
dec
out
xor
out
lahf
xchg
cld
jb
adc
stc
mov
mov
movsb
mov
in
data16
aam
pop
mov
jle
sbb
sub
jl
mov
cltd
cmpsb
in
or
xchg
pop
sub
sbb
in
ss
adc
movsl
fimull
push
mov
cmp
and
testb
mov
push
sub
and
dec
mov
push
mov
adc
test
ja
fmull
cltd
fisttpl
xor
loop
mov
dec
adc
out
loope
dec
mov
add
jae
das
mov
ret
inc
int
xchg
sbb
push
pop
inc
sub
cmpsb
or
pop
fcomps
pop
cmpsl
jno
adc
nop
aam
dec
xor
mov
mov
xor
adc
xor
mov
stos
jne
leave
lcall
iret
out
cmpsl
fstps
mov
scas
and
ds
push
movsb
add
adc
mov
push
adcl
std
xchg
or
aaa
in
adc
and
ret
cld
shlb
jmp
ds
sti
add
mov
je
andl
fstpl
push
mov
jnp
jp
jge
scas
inc
mov
scas
shr
jle
subl
es
mov
xor
cmpsb
scas
loopne
sbb
rcll
les
adc
sub
adc
pop
mov
lret
sti
dec
cmc
inc
mov
xchg
jae
push
xchg
or
aam
pop
jo
dec
pop
nop
jno
mov
ja
filds
adc
iret
jg
ret
into
push
jmp
sub
std
adc
ficompl
aas
das
inc
xchg
inc
daa
mov
or
mov
jae
cmpsb
adc
push
nop
test
inc
arpl
add
in
repnz
loopne
sahf
mov
lea
xlat
call
loopne
in
outsl
shll
xchg
leave
cmpsb
inc
mov
xchg
xchg
push
push
bound
mov
lahf
mov
xchg
insw
dec
lds
mov
xchg
aam
cmp
sti
icebp
xor
cwtl
sub
test
mov
dec
sbb
int3
jnp
cs
fwait
das
test
cmpsl
sub
subb
mov
lret
fisubl
gs
pop
lcall
lahf
ficompl
or
sahf
or
lret
pop
inc
js
stos
and
mov
data16
jb
fmull
andb
out
daa
or
maskmovq
divl
fs
cmp
shll
enter
shrl
or
dec
add
test
int
xchg
cwtl
fwait
icebp
sub
scas
xchg
cli
adc
inc
lea
push
fisubs
inc
bound
xchg
adc
dec
ret
out
jl
lcall
cld
pop
pop
add
or
lret
loope
cmp
in
lea
fsubrl
cmc
fs
jg
aam
cli
pusha
mov
or
jb
dec
arpl
or
push
rcr
mov
fstpl
push
inc
jb
and
push
xorl
mov
sbb
xorb
enter
mov
add
pop
hlt
ret
pushl
sbb
shrl
jle
mov
push
loopne
jno
inc
pop
cwtl
fadds
push
out
movsb
xor
out
inc
pop
xchg
push
xor
fs
add
sub
imul
adc
cmp
fs
push
xchg
into
mov
push
inc
xor
lods
cmpsb
cwtl
fwait
or
mov
sarl
dec
inc
mov
loopne
ficomps
jg
in
add
insl
js
out
push
add
push
xor
pop
lcall
jae
inc
adc
jmp
cwtl
xor
dec
subl
pop
xor
dec
fmulp
inc
mov
and
mov
sub
ds
jnp
add
inc
add
cld
std
shll
lahf
jecxz
call
ret
inc
lret
lahf
cmp
sbb
xchg
sub
icebp
mov
push
rclb
adc
add
es
sub
loop
pop
pusha
and
cli
mov
add
add
jge
xchg
xor
call
xlat
mov
outsl
je
imul
jle
rcll
push
dec
pop
into
sbb
inc
and
into
mov
lcall
aam
hlt
fwait
add
scas
xchg
jbe
xchg
xchg
out
cli
fwait
lods
xor
in
lahf
mov
gs
xchg
out
xor
shrl
mov
xchg
mov
stos
mov
xchg
and
or
in
mov
loope
xor
bound
rclb
call
xor
jle
das
xlat
mov
push
imul
stos
sub
jecxz
stc
dec
mov
xchg
bound
xor
stos
jmp
bound
or
insb
mov
sbb
jmp
cmp
jmp
movsl
adc
and
fldcw
leave
das
les
inc
loop
movsl
shlb
pop
lret
xlat
xchg
sbb
mov
jmp
jl
sub
mov
mov
aaa
add
dec
and
popa
aas
idivb
xor
lods
les
inc
cmp
push
mov
mov
cmpsb
jecxz
adc
dec
or
jo
cmp
popa
adc
push
jp
stc
add
rorb
pop
incb
aaa
mov
aad
cmpsl
cmp
iret
test
xchg
xor
lea
enter
vandps
jns
aam
imul
push
sbb
and
dec
fdivrs
push
incb
stos
subl
xchg
xchg
fadd
sbbl
mov
cmpsb
mov
inc
sbb
imul
jmp
push
push
or
shlb
xchg
hlt
pop
mov
cltd
inc
jl
inc
and
fwait
ss
cmp
fs
cmp
aaa
sub
std
inc
and
xorl
jae
mov
outsb
push
lods
lock
sbb
imul
testb
pusha
mov
bound
pop
ds
clc
insl
popf
dec
xor
adc
enter
dec
jecxz
cmp
mov
loopne
mov
mov
sti
ret
repnz
mov
sbb
mov
adc
inc
aad
cmp
add
mov
mov
mov
xchg
repz
inc
sbb
aaa
sti
xchg
xchg
lds
and
push
and
cmp
add
jle
mov
shr
sub
push
scas
sub
loop
xor
hlt
ret
and
ljmp
fildl
jmp
and
dec
test
outsl
push
repnz
jae
js
inc
mov
shll
pop
xchg
and
dec
aad
cmpsl
outsl
mov
lds
iret
fcoms
mov
sbb
xchg
and
adc
fsub
push
jecxz
push
sub
pop
pop
lret
xchg
repz
mov
repnz
xchg
in
sbb
data16
pushf
lea
and
mov
in
incb
and
fisubl
inc
dec
and
lret
push
jl
pop
cmp
fs
lret
nop
push
inc
lods
cwtl
jae
mov
jle
leave
mov
dec
or
repz
and
xchg
fucomip
icebp
ds
push
andb
test
das
jge
xor
rcrb
dec
int
xchg
fwait
sub
xchg
or
stos
mov
jl
pop
inc
xchg
in
add
lahf
jge
mov
sbb
mov
adc
add
cmp
mov
in
lods
mov
cmp
xchg
dec
imul
push
xchg
xchg
flds
subb
leave
lea
sbb
lret
in
push
mov
scas
ret
push
jbe
clc
push
inc
sub
mov
test
pop
repz
xchg
cltd
xor
aaa
cli
push
aam
ds
xor
sti
lock
cltd
jle
ss
mov
aaa
push
and
push
in
mov
out
stos
push
ss
cmpsl
fs
test
pushl
add
dec
xor
push
pop
and
mov
push
scas
lret
mov
sbb
jae
dec
aaa
fnstenv
adc
insl
fdivrs
jns
push
popa
dec
mov
pop
push
push
and
xchg
jo
sub
jne
das
lods
mov
jg
mov
popa
pop
fistl
shrb
jns
xchg
jp
in
cmp
fs
negb
adc
sub
cs
sub
test
out
mov
jmp
popa
iret
mov
sbb
mov
into
mov
mov
mov
push
and
lret
mov
xlat
shr
pop
jo
lret
add
cld
stos
cmp
and
pop
xchg
sbb
int
data16
sub
rolb
add
sti
mov
pushf
out
lret
mov
mov
popf
inc
sub
mov
sti
inc
dec
or
cmp
cmp
sbb
test
or
mov
mov
cmpsb
adc
dec
sub
insl
andl
ds
add
inc
xor
in
xchg
inc
xchg
push
iret
lcall
add
inc
add
jns
adcl
pop
shld
lock
insl
insb
pushf
test
sarl
mov
xor
inc
scas
xchg
in
add
mov
sbb
mov
out
jmp
push
mov
jo
jle,pn
bound
jp
pop
int3
lret
xchg
frstor
push
fdiv
inc
aaa
cwtl
jo
rclb
jo
xchg
lea
xchg
mov
insl
jge
adc
in
jae
lods
sbb
xor
int3
out
and
jmp
push
pop
adc
jmp
cs
lahf
stos
in
in
push
fsts
xchg
das
sub
cmpsb
mov
cmp
xor
push
stos
sbb
lods
push
movsb
lret
fnstenv
mov
dec
movsb
repz
jns
push
push
sbb
inc
aas
repz
outsl
pop
repz
pop
arpl
aaa
scas
addr16
cld
mov
insb
movsl
fadd
fs
lahf
nop
sub
cmc
out
mov
ds
je
aam
das
xchg
mov
pop
xor
sub
insb
pop
fwait
nop
test
inc
dec
movsl
pop
lret
lock
cmp
pop
enter
xchg
mov
stos
gs
mov
bound
imul
cs
aaa
push
add
test
jbe
xchg
pop
adc
adc
mov
stos
xor
or
adc
add
mov
in
insb
inc
xchg
popf
lret
imul
pop
sub
in
sbb
sub
push
sbb
jecxz
stos
insl
in
mov
dec
mov
stc
and
sbb
fcmovnbe
add
push
daa
stos
js
pop
ret
adc
lea
push
push
fstpt
aaa
mov
pop
jo
lock
lcall
sub
mov
or
in
and
xchg
mov
jno
jp
insb
mov
dec
out
jg
cmp
sbb
clc
adc
push
xor
rcr
test
repnz
leave
ljmp
xor
push
sub
dec
and
mov
dec
sar
mov
mov
and
js
jne
ret
aas
popa
rolb
mov
data16
add
jnp
testl
or
adcb
jle
pop
mov
clc
lcall
stc
xor
jp
int3
xchg
stc
aam
mov
negb
add
or
sbb
xor
mov
imul
popa
xchg
push
repz
sahf
xor
cltd
loop
mov
stos
bound
daa
pop
add
sbb
pop
popa
add
mov
push
or
cmp
jns
cmp
adc
push
out
inc
cld
loope
out
popa
and
shrl
dec
insb
mov
bnd
mov
mov
xchg
lds
pushf
dec
popa
lds
mov
xchg
insb
xor
mov
cmc
push
clc
stos
jge
adc
ja
sub
aad
in
aaa
cli
adc
adc
cmp
aam
xchg
inc
aas
cmp
rep
std
mov
xchg
clc
fwait
dec
dec
mov
cmp
mov
stc
imul
xlat
xor
rclb
mov
in
dec
mov
or
push
ds
fiadds
push
lcall
shlb
jb
out
lock
divl
dec
out
scas
xchg
or
test
mov
shll
cltd
mov
insb
sub
test
jb
cs
adc
or
push
push
jnp
pop
mov
ret
and
push
xlat
cs
inc
xor
sbb
jmp
mov
int3
mov
mov
shll
mov
inc
call
sarb
ret
les
mov
sub
push
sub
call
jae
pop
xchg
mov
mov
and
push
fldl
cmpsb
ljmp
cmp
mov
push
imul
jno
push
iret
fldenv
mov
enter
out
fstpl
es
mov
shlb
fsubrs
pop
pop
mov
pop
mov
or
pop
subb
das
mov
add
and
cmpl
les
fwait
mov
mov
inc
lea
xor
and
shrl
ljmp
add
sub
loope
mov
mov
or
and
pop
mov
inc
dec
mov
jne
outsb
pop
int3
aaa
lea
xchg
in
mov
adc
lds
pop
out
mov
clc
movsb
mov
cmp
mov
mov
mov
rclb
les
or
push
je
insl
ljmp
xor
out
adc
pop
push
inc
int
inc
repnz
sub
rcl
rcl
dec
pop
xchg
cmp
add
repnz
mov
inc
jmp
dec
xlat
stos
or
push
ljmp
mov
push
ret
adc
sub
or
mov
dec
fnstcw
sub
fucom
inc
sub
mov
inc
mov
and
or
shlb
push
cmp
outsl
mov
lock
add
adc
mov
xchg
lahf
int
fisttps
pop
idivb
inc
and
stc
dec
call
mov
mov
ret
push
insb
adc
mov
gs
jno
decl
loop
mov
mov
fsubl
cmpsl
mov
xor
cli
push
jne
jg
add
pop
outsl
mov
inc
and
pop
loop
jmp
shll
sub
sub
push
mov
mov
mov
cltd
cmp
push
or
mov
adc
pop
xor
dec
push
push
dec
add
cltd
lods
mov
loop
nop
adc
cmpsb
aas
xchg
and
ljmp
lret
out
aad
in
fidivrs
imul
aad
ljmp
cmp
lock
xchg
inc
mov
sbb
pop
out
iret
push
ret
fistps
outsb
shlb
in
pushf
iret
pop
adcl
aas
ja
sbb
add
pop
cmpsb
pop
and
pop
xor
xor
aam
or
mov
jbe
dec
push
dec
es
fs
sbb
bound
lcall
mov
cmp
in
xlat
sub
frstor
dec
sub
cltd
add
add
or
pushf
sbb
sub
inc
push
cmp
loop
dec
adc
movaps
mov
incb
push
xchg
inc
cmp
nop
idivb
daa
in
xor
mov
mov
call
stos
std
mov
into
leave
cli
pop
int
lret
adc
mov
out
inc
inc
jg
and
rolw
movsl
cmc
or
faddp
push
pop
fnsave
dec
or
sbb
aad
jecxz
jle
and
mov
push
and
push
cmc
gs
arpl
scas
scas
cltd
lods
dec
and
sahf
outsl
lock
xchg
ficomps
popa
addr16
stos
pop
nop
mov
adc
add
inc
jl
popa
mov
idivb
pop
es
cld
cs
loopne
std
mov
lahf
jecxz
bound
push
xchg
fst
mov
cmp
mov
je
push
cs
mov
push
sub
or
leave
add
adc
adc
inc
stos
jo
jg
cwtl
imul
icebp
iret
push
xchg
jns
lahf
test
cmp
xchg
push
or
xchg
pusha
xchg
cmpsl
repnz
bound
mov
flds
push
inc
repnz
sub
cmp
mov
js
pop
andb
in
adc
lret
loop
gs
xchg
stc
rcl
test
orb
mov
fdivs
pushf
mov
pushf
int
lcall
mov
mov
push
fimull
pop
movsl
test
fisttpll
pusha
stos
sbb
shrl
incb
rcrl
cmp
xor
push
dec
inc
idivl
dec
shll
out
mov
lret
dec
mov
jecxz
mov
add
push
inc
jmp
adc
fistpl
add
ja
mov
mov
push
ljmp
icebp
test
mov
aad
push
int
mov
pop
xor
pop
movsb
ja
repz
dec
pop
add
jle
inc
icebp
sbb
test
xchg
cmp
notb
nop
adc
lds
dec
popa
lret
es
pop
cld
xchg
mov
xlat
cwtl
addr16
imul
jne
mov
adc
aam
int3
dec
fs
pop
dec
xor
dec
fadds
xchg
dec
loope
lret
lahf
push
push
fnstcw
pop
leave
stc
and
ror
or
and
in
sbb
jns
stc
loop
test
jae
dec
loop
jle
pop
iret
shl
sbb
push
test
xlat
push
adcb
sbb
inc
mov
sub
mov
scas
ss
daa
jne
popf
hlt
sbb
xchg
xor
or
or
jo
outsb
mov
addl
dec
sub
mov
aam
cmc
iret
jb
inc
mov
fsubr
icebp
sub
scas
popa
dec
int3
xorb
push
dec
inc
lahf
scas
or
ds
jne
ret
fbld
pop
dec
jb
or
aad
jmp
or
pop
pop
paddusb
xchg
gs
repz
push
aad
je
aas
cmp
lock
std
scas
loop
les
push
out
cmpl
inc
mov
js
push
cltd
inc
insb
fwait
pop
dec
jl
in
xor
xchg
out
ret
out
sti
mov
sbb
neg
xor
xchg
xchg
lahf
push
fcomps
insb
mov
rorb
imul
and
ficoms
jns
cltd
push
pop
pop
call
lods
shl
dec
movsl
aas
cli
xor
test
xchg
add
pop
mov
loope
jns
or
pop
sbb
mov
pop
sar
mov
and
lods
mov
pop
jp
pop
jnp
fimull
cld
xor
jg
sbb
clc
mov
cmp
notb
insl
fnstenv
orl
dec
orb
lret
fnstcw
or
test
add
ljmp
pushf
sub
cli
fndisi(8087
stc
lea
popa
pop
add
xchg
lahf
push
loope
jmp
frstor
aaa
sbb
sub
mov
xchg
into
call
xchg
adc
movb
mov
idivb
sbb
out
in
enter
inc
scas
inc
push
hlt
repnz
je
out
pushf
call
clc
and
inc
cs
xor
iret
pusha
mov
jmp
mov
sub
repnz
loop
mov
xchg
sub
mov
ret
cmp
cmpb
cld
test
jo
cld
add
mov
test
aam
sahf
pop
loopne
test
xlat
sbb
cmp
dec
cmp
orl
mov
cwtl
in
adc
aam
lcall
gs
push
adc
xchg
mov
mov
movsl
cmpl
mov
clc
cwtl
das
mov
push
xor
mov
int3
cmp
lock
insb
pop
sub
adc
shl
mov
fcomps
gs
inc
push
jne
mov
xor
icebp
xorb
adc
in
jmp
test
xor
repnz
seto
test
ss
addr16
fs
inc
mov
fidivrl
mov
jns
mov
addl
push
cltd
or
jbe
scas
ror
xor
inc
sbb
jnp
testl
ret
cmove
xor
mov
pop
sahf
xchg
cld
dec
enter
cmp
leave
fwait
leave
aaa
fdivs
xchg
ja
adcb
mov
mov
inc
mov
and
xor
push
or
lcall
cmp
pop
dec
sub
xor
inc
repz
out
lret
addl
insb
sbb
mov
add
mov
jge
cmp
test
sub
loopne
inc
jle
notb
jne
xchg
jl
fdiv
dec
xlat
fcmovnbe
pop
popf
mov
jb
pop
outsl
notb
xor
inc
js
and
sub
dec
xchg
dec
mov
and
add
shl
cs
and
mov
clc
mov
movsb
stc
movsl
aaa
cmp
jecxz
push
outsb
jnp
ret
in
aas
xchg
lahf
pusha
ret
mov
lock
cwtl
loopne
and
jns
inc
mov
inc
mov
or
or
lods
push
mov
push
cli
jle
and
ret
dec
inc
add
and
inc
int
mov
fs
lock
mov
jae
jecxz
ficoms
movsl
xchg
sbb
shlb
mov
jle
mov
inc
pop
add
popf
addl
mov
add
jl
adc
mov
sbb
cmp
jge
aam
push
out
insb
scas
bnd
sub
push
pop
insb
out
into
jecxz
xorl
and
jmp
xchg
pop
inc
mov
xchg
cmc
inc
call
dec
inc
dec
into
inc
outsl
adc
pop
rcrb
aaa
gs
scas
cmp
lret
cmp
jl
adc
enter
push
loopne
mov
mov
push
dec
xchg
mov
loope
psrld
nop
rcll
stos
sbb
mov
cmp
xor
jb
gs
out
sub
stos
and
out
in
jae
repnz
xchg
mov
mov
jmp
mov
adc
and
mov
inc
outsb
iret
daa
xor
jbe
sbb
arpl
add
pop
int
shrb
or
rorb
scas
inc
test
bound
or
stos
stc
arpl
enter
or
xor
xchg
dec
std
leave
pop
sbb
js
jno
mov
dec
je
mov
sahf
movsl
dec
repz
push
add
inc
sbb
jnp
into
push
repz
outsb
pushf
and
adc
sbb
aad
sarl
pop
mov
imul
arpl
jle
jg
movsb
and
cmp
out
dec
fcomi
lret
dec
push
std
sbb
jle
inc
xchg
mov
sti
add
jmp
testb
mov
and
ret
push
inc
insb
or
repnz
inc
jo
ljmp
scas
int3
enter
out
add
test
cmp
jle
xchg
add
fnstenv
sbb
inc
test
adc
cmp
push
scas
leave
pop
push
add
sub
cmpsb
jb
fldenv
xor
fstpt
fstl
shrl
ja
mov
mov
jl
cld
push
rorb
push
sub
inc
adc
add
mov
pusha
sbb
adc
cld
jb
adcl
movsb
xchg
xchg
sti
orb
sbbl
data16
jae
pushf
rorl
test
pop
out
add
cs
repz
mov
data16
pop
andb
xor
sub
cmp
jmp
mov
rcrl
xor
xlat
pop
popl
lods
cmpl
xor
mov
sbb
push
scas
testb
jo
imul
mov
outsl
lods
inc
test
outsb
mov
aam
or
lcall
lock
xchg
adc
cmp
fcoms
jle
lods
testl
push
out
jne
cs
call
or
pop
jae
ror
neg
cmp
fadds
int
mov
cmpsb
mov
mov
pop
mov
xchg
xlat
jge
adc
std
xchg
testb
xlat
rep
adc
mov
and
xor
sub
call
subb
ror
loope
xor
dec
pusha
jmp
lods
addr16
gs
xlat
push
out
xchg
inc
jns
sbb
out
xor
cmp
fdivl
rcll
addr16
test
adc
lret
mov
gs
sub
mov
inc
sub
push
push
cmp
mov
mov
inc
xchg
add
push
popf
clc
dec
sub
pop
mov
sbb
pop
test
push
adc
je
lods
scas
test
movsb
ret
sub
jp
in
sbb
loope
je
repnz
cmpb
sahf
cmpb
jecxz
les
push
and
or
jmp
adc
push
push
push
lods
inc
roll
in
pushf
scas
xchg
lods
pop
sub
dec
mov
mov
cmp
pop
cmp
mov
adcl
sub
lret
cld
add
mov
test
inc
fstps
mul
insb
pop
decl
add
btc
inc
fisttps
repnz
stc
push
sbb
adc
pop
push
sarb
jno
insl
xorl
adc
push
mov
test
mov
int3
sahf
lds
das
loope
insb
add
sbb
stos
inc
in
loop
aaa
xchg
adc
mov
mov
mov
ds
out
lea
stc
lcall
push
les
imull
jle
cmp
test
leave
dec
add
xchg
push
cs
pushf
decl
in
pop
sub
push
cmpsl
or
mov
sub
cld
in
cmp
sar
clc
inc
xor
fs
dec
ret
insb
and
mov
cmc
cmp
or
mov
dec
ja
add
aas
out
in
sub
mov
xor
jbe
pusha
lds
cmp
ret
bound
inc
lods
mov
jno
cmp
inc
xchg
mov
adc
imul
and
fildll
sub
inc
push
add
pop
shl
dec
das
cmp
scas
lahf
mov
push
mov
mov
jbe
dec
inc
xchg
add
movsb
jo
push
int
inc
sbb
xchg
sub
aam
sbb
lods
adc
xchg
cwtl
push
ja
imul
inc
in
sbb
pop
xchg
adc
mov
mov
pop
pop
fs
mul
add
fs
xor
cwtl
lock
shr
inc
incb
pop
mov
icebp
lods
lds
and
push
sbb
test
cmc
and
push
xorb
into
cmc
nop
fs
sbb
loopne
cli
push
ja
jecxz
lahf
mov
fnsave
stos
fwait
int
loope
pop
sahf
fs
mov
icebp
pop
mov
decb
scas
aam
addr16
sub
ret
pop
or
pop
int3
lret
imulb
insl
ret
fwait
xor
xor
inc
out
xchg
repnz
jbe
out
movsb
cs
jae
inc
lock
dec
add
jb
bound
xchg
jne
into
mov
mov
negl
cmp
imul
cmpl
sbb
push
lea
cmp
roll
clc
shlb
inc
push
bound
addl
adc
push
push
add
inc
shrl
ja
or
pop
insl
xor
add
push
dec
lahf
push
inc
sarl
adc
xchg
mov
mov
mov
push
cmp
stos
push
mov
xorb
shrl
stos
sbb
loope
das
inc
sbb
dec
test
cmp
push
pop
arpl
mov
shlb
jmp
or
pop
pop
das
das
sbb
jg
fildl
dec
cli
push
cmp
cltd
pop
test
push
xchg
mov
xchg
lds
mov
subl
sbbl
mov
hlt
sbb
or
mov
test
adc
cmp
ljmp
pusha
sub
push
sahf
daa
aaa
mov
int
movb
std
ret
jle
jge
pop
pushf
sbb
icebp
lds
xchg
rcrl
daa
inc
fnstcw
ss
js
out
adc
std
aad
stos
rorl
dec
jb
inc
fucomi
rcll
or
adcb
cmp
cli
add
repz
std
mov
adc
push
lods
ljmp
xor
pop
sbb
dec
shrl
rcll
mov
pushf
mov
or
sahf
mov
popf
roll
lcall
pop
popf
jne
xchg
ret
out
sub
rcll
pop
adc
mov
inc
mov
fimull
pushf
pop
xor
dec
loop
jno
fsubs
push
mov
mov
mov
fnstsw
dec
cmp
mov
pop
add
pop
push
arpl
sbbl
pusha
pop
sub
lock
mov
xor
mov
insb
inc
pushf
xchg
or
sub
ljmp
test
jle
push
add
pop
xchg
jae
aas
test
sub
loop
and
lods
inc
bound
int
add
cmpb
jno
mov
mov
xchg
mov
jb
loop
push
sbb
adc
inc
pop
pop
jae
jp
mov
arpl
push
negl
xorl
or
sub
cwtl
mov
mov
dec
rorl
imul
or
fnstsw
inc
fdivr
pusha
lcall
imul
add
add
sub
das
test
jbe
or
push
jne
or
push
or
xchg
leave
and
jmp
out
cmp
mov
and
lcall
gs
call
xlat
add
imul
sub
cmp
fisttpl
fcmovne
and
dec
mov
stos
xchg
in
sti
mov
cmp
sbb
jbe
ficomps
sbbb
popa
test
imul
imul
and
inc
mov
ficoms
js
push
dec
add
pop
jmp
clc
mov
cmpsl
sbb
testb
sbb
push
fwait
add
adc
xchg
inc
clc
aaa
and
cli
adc
jmp
sahf
push
push
fimuls
mov
lahf
out
pop
sbb
add
xor
pop
pop
inc
cmpsb
xchg
jo
jnp
out
jnp
loopne
xchg
lods
mov
dec
xlat
mov
cld
pop
mov
fidivrl
sub
add
je
pop
xor
push
leave
in
mov
sub
repnz
fs
add
shl
insl
repz
xchg
mov
mov
mov
jo
data16
cmc
sbb
mov
push
xchg
bound
inc
push
pop
pusha
mov
mov
cld
sbb
imul
mov
jnp
cmp
jge
jae
and
jp
or
sub
jl
stos
rorl
rcll
test
and
gs
dec
fdiv
xchg
aam
xchg
out
xchg
xchg
ja
sub
jle
into
outsb
sub
jg
rcrb
xor
es
jbe
pop
imul
repnz
outsl
stos
sbb
insl
lods
sub
push
dec
mov
xchg
divl
dec
cmpsb
jg
mulb
mov
enter
jl
in
pop
orl
shrl
clc
and
dec
enter
incb
fldcw
mov
out
arpl
iret
cld
dec
push
and
and
in
dec
outsl
enter
mov
dec
test
cld
push
pop
mov
nop
cmpsl
pop
pop
shll
imul
mov
ret
xchg
repz
stos
add
pop
inc
mov
push
push
rcll
xchg
arpl
ljmp
mov
repz
jb
push
adc
je
sub
xchg
aaa
fiaddl
loope
push
push
dec
imul
ret
or
fadds
sbb
sbb
jp
test
cmp
push
push
rcl
lahf
fisttpl
dec
lods
lods
pop
aaa
and
enter
inc
cmpsl
jb
fnstcw
mov
push
pushf
dec
orl
in
repz
lret
aas
ja
stc
inc
lea
loope
jb
imul
andb
imul
dec
mov
mov
sub
mov
in
fcomps
fistpll
jecxz
rolb
sub
loopne
xlat
sbb
sbb
jg
mov
cltd
andb
subb
jle
mov
clc
or
mov
rorb
loop
jg
sub
lret
stos
imul
dec
mov
cwtl
iret
fxch
test
shlb
shr
popa
or
loop
adc
dec
rcrl
sbb
cmc
repnz
in
fmulp
sbb
mov
rcl
mov
xchg
movsb
push
mov
addb
inc
jno
clc
pop
outsl
fwait
add
cmp
sub
and
xor
enter
mov
mov
sub
int3
imul
int3
aaa
mov
jle
cmc
mov
fwait
push
pop
shlb
shlb
sub
and
pop
pushf
xor
inc
inc
inc
ror
lods
sbb
dec
jns
bound
in
dec
cmp
xor
or
imul
imul
dec
arpl
cmp
subl
sbb
ljmp
xchg
cmp
shrl
shrb
sti
add
jge
inc
inc
cmpsl
pop
and
mov
repz
or
sbb
adc
lods
push
adc
sar
pop
or
insb
cmp
scas
pop
iret
mov
mov
lahf
push
sub
pop
jne
clc
or
mov
cmpsl
and
push
call
imul
push
adc
inc
call
stos
rcrl
push
pop
dec
push
sti
pop
xchg
clc
insl
add
jle
xchg
cmpl
movsl
xchg
push
xlat
push
mov
mov
push
arpl
loop,pt
in
cmp
adc
rcrb
insl
push
dec
mov
push
add
xor
mul
mov
jne
inc
xchg
lahf
ss
cmp
mov
fdivrl
push
divb
js
mov
cmp
mov
aad
adc
jl
movsl
xor
mov
out
sbbl
out
stos
lcall
lcall
sti
test
loopne
mov
jbe
dec
mov
push
ja
add
adc
test
jns
loope
popa
xchg
xor
push
mov
jb
sub
xchg
psrld
fildll
xchg
aaa
shll
pop
xor
or
push
mov
push
cld
push
sub
pop
shll
les
ret
jb
orl
adc
pushf
icebp
xlat
addr16
push
rcrl
jecxz
rcrl
aaa
std
mov
mov
push
lods
lret
xlat
xchg
sbb
cmp
inc
sahf
inc
dec
jns
out
out
push
mulb
aaa
add
jecxz
cld
arpl
fsubr
jp
mov
pop
ret
jle
add
xchg
cmp
cld
pop
mov
cwtl
push
pop
iret
pop
inc
into
gs
sbb
mov
mov
in
cld
data16
sbb
daa
les
fnstenv
in
mov
test
ljmp
shlb
inc
push
int
mov
xor
add
dec
pop
ss
fimull
jnp
mov
push
or
cli
add
cltd
pop
mov
push
arpl
xor
or
in
fdivrs
or
lods
push
loope
mov
ss
sbb
int
jns
adc
jb
or
daa
pop
cmp
mov
test
rcl
aad
scas
or
dec
popa
scas
fistl
jg
into
cs
lcall
xchg
pop
icebp
and
push
iret
fbld
js
shll
imul
dec
in
xor
xlat
push
gs
jl
jg
ret
in
dec
jb
mov
bound
repz
sbb
repz
jmp
jge
outsb
xchg
rcll
cmp
cmp
cmp
adc
repnz
mov
loope
dec
scas
push
iret
xchg
lret
mov
sti
aas
xor
in
stc
xor
fsubrl
insb
sub
pop
sub
add
mov
andl
mov
or
add
enter
das
inc
movsl
loope
out
notb
flds
sbb
push
leave
dec
push
mov
fsts
sti
stos
sub
mov
push
pop
test
cltd
jmp
xor
dec
mov
aad
es
inc
call
mov
adc
call
and
pop
lods
mov
xchg
shlb
or
testb
rcrb
mov
hlt
ljmp
mov
lods
js
xchg
xchg
movq
mov
mov
in
cmp
mov
pop
and
jge
sub
cmc
and
mov
test
xchg
sarb
pop
sbb
push
jg
pop
inc
fidivs
rcrl
inc
std
ffreep
ds
xor
loop
cmp
shlb
ljmp
lods
mov
inc
cmp
cmc
js
hlt
cmp
out
sbb
push
push
jecxz
inc
stos
or
mov
xchg
aaa
out
rorl
stos
lods
cmp
jo
imul
push
mov
loope
stos
mov
in
hlt
pushf
es
pop
rolb
es
jb
adc
sbb
sbb
rcl
mov
add
hlt
data16
push
sub
cmc
jmp
or
gs
dec
jno
mov
xor
addr16
push
inc
int3
arpl
sbb
clc
lahf
adc
icebp
cmpsl
std
into
ret
mov
mov
dec
mov
enter
sub
aaa
or
fstpt
out
and
stos
mov
xchg
xchg
mov
dec
test
ja
jg
loopne
out
sbb
push
clc
in
ja
push
jns
pop
imul
cmp
mov
jmp
inc
cwtl
jmp
cltd
mov
push
sbb
fs
insb
xchg
lods
in
nop
lret
adc
arpl
ja
mov
test
sbb
mov
and
jg
mov
sbb
adc
mov
cmpsb
aam
fsubrl
xchg
mov
addr16
enter
ficomps
in
mov
sub
out
movsb
xchg
aad
mov
lods
adc
out
mov
push
jmp
add
push
push
dec
push
subb
out
fisttps
sub
inc
jae
shll
dec
andb
cld
jne
dec
xchg
gs
dec
popf
testb
xchg
pop
test
cli
scas
adc
sbb
lods
jo
enter
cld
sbb
push
add
mov
orb
addr16
imul
nop
jecxz
mov
repz
orb
adc
sbb
mov
xor
push
popf
mov
aam
mov
inc
jg
cmpsl
add
cs
push
es
adc
mov
push
pusha
adcl
leave
xor
fstp
daa
cld
cmp
movsb
shlb
jno
aas
sbb
sub
orl
jle
iret
ds
in
out
movaps
push
mov
add
into
cmp
inc
lock
cmp
jne
call
fwait
ljmp
fwait
and
add
int
inc
mov
rcrl
repz
xchg
add
sti
adc
lret
pop
repnz
aad
pop
cmp
fmuls
les
ficoms
addr16
sbb
das
out
jne
orb
sarl
xchg
movsl
sub
cmp
cmpsl
mov
aad
sbb
imul
pop
and
push
mov
sahf
mov
sub
into
mov
push
lds
mov
sbb
sbb
icebp
fadds
xchg
pop
lcall
sbb
and
fbld
clc
fwait
push
mov
repnz
out
mov
aam
push
lock
sub
imul
je
aaa
popaw
into
mov
mov
and
mov
sbbl
imul
push
test
jg
jle
popf
adc
divb
aad
xor
jae
jl
lock
xor
adc
enter
pop
jecxz
call
mov
mov
mov
lds
jl
cs
mov
insl
pop
nop
pop
sub
cmp
nop
push
call
fsubs
jb
xor
pushf
rorl
adc
xor
sbb
dec
clc
stc
das
lret
rep
mov
dec
test
divb
mov
ret
unpckhps
cwtl
cmp
leave
loope
xor
arpl
arpl
orl
les
lahf
add
sbb
js
movsb
jne
adc
push
mov
movsb
lea
pop
shrl
mov
rcrb
les
js
popa
sub
shl
in
cld
pop
cmp
aaa
inc
stos
out
or
in
adc
dec
dec
mov
ss
jge
jp
sbb
mov
and
daa
mov
mov
out
jle
movsb
nop
mov
loopne
dec
push
out
jnp
sbb
sub
lock
out
inc
movsb
sbbb
pop
fcmovnb
cmp
scas
cmp
sar
out
mov
test
mov
mov
mov
arpl
pushf
test
mov
xor
mulb
push
dec
pop
out
out
push
rcr
clc
mov
addr16
je
scas
ret
mov
add
sbb
lods
sbb
repz
push
mov
push
ja
cmp
flds
pop
mov
mov
das
jns
gs
inc
shrb
pusha
xchg
cmp
xlat
mov
mov
push
sbb
add
lods
nop
xchg
out
or
call
jo
pop
bound
jae
xchg
shlb
dec
mov
sti
pop
sbbb
in
add
sti
mov
fldt
or
fldl
scas
outsb
pop
inc
add
outsl
cwtl
insb
add
mov
out
jns
rorl
arpl
shlb
repnz
lfs
adc
adc
xor
pop
mov
stos
mov
scas
xor
negw
sbb
cmp
xchg
insb
jmp
xor
sub
loop
mov
scas
jne
ja
xor
rcrb
dec
cmp
aam
mov
pop
jmp
push
add
movsb
out
mov
ret
fbld
bound
out
ljmp
out
arpl
adc
push
jo
jl
subl
push
xchg
push
jle
add
scas
gs
mov
fs
loopne
or
das
imul
sub
push
test
scas
test
ja
arpl
or
cld
xor
sbb
xor
fwait
adcl
pop
pop
mov
pop
test
cli
stc
fstps
and
cmp
call
imul
rcrl
push
xlat
mov
mov
sbb
fidivrs
inc
je
shlb
rol
xor
dec
popf
cmp
jbe
xlat
sbb
jno
rorb
dec
enter
adc
cld
lahf
loop
jecxz
jb
clc
js
movsb
cmp
lea
mov
inc
loopne
push
pusha
scas
cwtl
cmp
or
fldt
leave
scas
sahf
mov
out
scas
cmpsb
or
mov
movsl
mov
pop
daa
mov
ret
and
fmuls
adc
xor
pop
bound
lahf
lds
xchg
or
xor
ret
test
pusha
stos
aam
sub
sub
mov
lods
mov
adc
imul
cmp
aas
outsl
gs
test
iret
aaa
fstp
dec
and
cltd
out
and
clc
addr16
dec
out
aaa
jecxz
lret
mov
cmpsl
pop
icebp
sbb
dec
into
imul
popf
ljmp
xlat
aad
push
pusha
jecxz
pop
les
rclb
fsubrl
leave
mov
call
jo
movsl
cmc
ret
mov
cs
repz
and
xchg
int
lock
sub
adc
xchg
xchg
add
inc
lahf
inc
dec
xor
jle
iret
sarl
mov
out
xchg
xor
imul
aas
jg
ret
mov
roll
fwait
sahf
xchg
inc
dec
ds
jmp
mov
jge
sbb
jmp
cmc
xor
pop
dec
enter
pop
cld
mov
rcll
call
fisttps
out
jnp
jg
jo
repnz
mov
dec
je
int3
imul
sbb
cmp
and
insb
or
adc
lcall
cld
fiaddl
ja
insb
mov
out
insb
adc
mov
pop
jne
or
pop
movsl
cmp
mov
and
insb
pop
or
or
ret
push
aaa
rcrb
mov
push
in
jb
rcrl
je
dec
xor
ret
ljmp
mov
sub
dec
xor
xchg
addr16
sub
fadd
lret
xchg
sub
movb
pop
aam
aas
or
mov
pop
cs
in
push
nop
add
out
pop
push
jnp
cmp
xorb
push
sahf
pusha
out
xrelease
mov
dec
call
xchg
adc
lahf
mov
cs
push
dec
movsb
test
insl
mov
subl
lods
mov
pop
mov
cld
insb
insl
cmc
scas
sub
inc
push
dec
aam
shrb
mov
lret
xorb
pop
loopne,pn
jnp
mov
xchg
test
push
inc
in
iret
cmc
or
or
dec
jmp
rol
push
nop
out
ss
lea
dec
fimull
xchg
stos
sbb
adc
in
mov
sbb
pop
lods
pop
inc
mov
pushf
xor
call
mov
sub
fwait
inc
and
jo
pushf
jge
push
pusha
lods
stc
aam
jp
int
movb
mov
insb
mov
orl
ret
push
mov
rcrb
lahf
mov
js
and
lret
inc
xchg
inc
imul
jns
xor
aaa
push
cmp
fistpll
dec
jp
orl
push
test
sbb
xor
mov
cmpsb
mov
out
mov
dec
cld
in
pushf
test
jg
nop
xor
loop
jne
shll
inc
lods
and
stc
and
pop
ss
jecxz
push
xor
dec
fsubrl
pop
mov
jnp
inc
jae
js
jbe
or
inc
push
inc
dec
dec
repz
ja,pt
icebp
dec
rcll
and
int
jb
mov
aam
movl
push
mov
sti
jae
push
mov
mov
pop
xchg
rclb
jp,pn
push
cmovge
mov
scas
mov
imul
or
test
push
mov
pop
out
int
je
dec
jns
push
aas
mov
fcmovu
mov
cmpsl
ret
xchg
mov
dec
pushf
repnz
adc
filds
add
jecxz
lock
xchg
and
loop
jno
lds
pop
mov
arpl
ss
cmp
mov
push
popa
mov
es
push
rcl
movsl
flds
mov
or
inc
inc
pushf
das
in
mov
es
cs
add
outsl
idivb
test
pop
sbb
add
stos
out
cli
imul
jle
in
sbb
loope
adc
das
or
push
pop
fsubrs
pop
sbb
mull
jmp
jmp
dec
inc
scas
cmpsl
aad
push
push
lret
cld
sbb
push
dec
popa
in
pop
push
push
ss
divl
lret
sarl
mov
stos
adc
xor
std
imul
data16
scas
mov
push
xor
popa
and
imul
repz
dec
sbb
and
arpl
xchg
mov
and
inc
add
insl
mov
fwait
nop
aad
xchg
fcomps
fsub
pop
loope
add
push
add
inc
xchg
jb
movsl
push
mov
in
lret
ljmp
push
bound
gs
in
jno
lea
pusha
test
out
jmp
popf
pop
xor
push
and
loop
jmp
sahf
push
dec
rclb
mov
cld
shrb
out
clc
adc
mov
out
pop
cmpsl
and
dec
xchg
stc
sbb
in
into
push
cmp
or
dec
out
lret
pop
sbb
dec
inc
add
scas
xchg
push
fcoms
clc
mov
xchg
mov
cmp
adc
pop
adc
sahf
jecxz
mov
out
xor
sub
mov
rcrl
push
push
cs
xchg
adc
mov
sub
popf
insl
sti
cmp
adc
mov
cmp
je
or
fucomip
add
jmp
scas
pop
in
fcomp
fwait
push
jle
cmp
jp
sbb
xor
and
das
fisttpl
lds
mov
ja
inc
mov
mov
sbb
les
in
jg
fisubl
in
push
divl
loope
push
pop
pop
xor
imul
imul
sbb
mov
inc
andl
subb
mov
lret
push
test
dec
push
add
adc
or
fisttpll
and
cwtl
xlat
pop
pop
xchg
and
pop
sub
lcall
pop
pop
aaa
cltd
xor
push
outsb
mov
cs
pushf
or
dec
and
sub
sbb
jb
mov
dec
jns
xchg
fwait
rcll
cmpl
sbb
int
lods
mov
imul
pop
push
pop
repz
add
insb
lods
or
sahf
cmp
inc
jns
movsl
sbb
pop
fiaddl
jns
dec
jp
xchg
mov
jo
out
fidivl
lock
mov
jp
fst
adc
cmp
push
push
adcl
jecxz
xchg
push
call
lahf
cmp
sub
sbb
popa
loopne
dec
lock
push
pop
cwtl
xor
push
mov
cmp
push
in
and
int
aaa
pop
push
adcl
incb
sbb
jns
shrb
push
xchg
std
sbb
jecxz
es
mov
mov
shll
lock
add
xor
mov
jge
mov
jmp
sahf
out
sub
cmp
fs
stc
add
mov
dec
mov
jnp
js
jo
jl
adc
ret
pop
adc
push
push
inc
pop
jmp
adc
sub
dec
mov
xchg
or
adc
insb
std
or
or
add
fldenv
jmp
jb
loop
xchg
sub
pop
mov
xchg
pushf
adc
push
sub
mov
xlat
mov
lahf
cmpsb
xchg
xchg
out
pop
push
jb
test
adc
insl
aam
cmp
sarb
shrb
fnsetpm(287
xorb
jbe
shr
and
inc
add
popa
sbb
icebp
lods
gs
lret
push
jg
mov
pop
shlb
lds
add
lahf
mov
std
pushf
cmc
add
stos
cmp
dec
mov
dec
sub
jecxz
fptan
insl
sub
rcl
push
lods
add
and
pop
mov
sbb
pop
push
leave
andl
sub
subb
sar
in
stc
pop
jp
std
pop
arpl
lret
jae
mov
loopne
loopne
cs
mov
mov
clc
movsb
loopne
in
dec
addr16
shrl
or
dec
mov
or
xor
lret
adc
dec
xchg
repnz
scas
shll
pop
jns
ljmp
nop
test
movsl
cli
pop
pop
roll
addr16
test
outsb
mov
stc
je
dec
stc
xchg
sbb
xor
clc
cwtl
cmp
push
dec
pop
mov
or
popf
or
sahf
push
cs
mov
cmpsb
add
adc
and
xchg
inc
jl
shlb
push
pop
push
addr16
pop
push
jbe
add
movsl
sub
push
into
add
adcl
xor
int
mov
xchg
pusha
stos
popa
push
sub
cmp
or
add
sub
scas
xchg
xchg
ds
cmp
daa
or
iret
sub
or
add
lods
iret
lods
push
sub
fsts
jns
iret
mov
cmc
xchg
or
and
cmp
incl
in
imul
jne
mov
out
inc
push
cmp
xchg
loope
js
push
pop
push
xchg
fcomps
xor
lods
push
cmp
es
scas
aam
lret
sub
lea
sub
jge
mov
cmp
jg
cvtps2pi
insl
in
ljmp
jp
push
or
aaa
inc
add
mov
adc
xor
push
jo
fsubr
sbb
adc
mov
mov
arpl
mov
and
adc
flds
cltd
clc
cmc
movsl
inc
and
add
pushf
add
cmp
scas
and
dec
and
adc
pop
rorb
xchg
add
cli
sbb
mov
xor
shlb
bound
mov
pop
sub
sub
sub
mov
roll
sub
mov
mov
in
lods
xchg
imul
out
aam
sub
inc
mov
loop
push
nop
outsl
push
and
cmc
movsl
push
divb
jns
lahf
inc
inc
dec
jbe
or
sbb
mov
test
or
lcall
out
push
ja
stos
roll
jne
lahf
inc
lret
ljmp
ficoml
lahf
jl
jp
inc
inc
jmp
mov
aam
xor
cmpsb
lcall
fmulp
adcl
mov
xchg
xchg
xor
adc
sbb
jmp
rorl
les
inc
adc
clc
fwait
and
in
int
lret
push
mov
and
fisubrl
and
loope
push
test
ret
push
fisttpl
and
popf
inc
jmp
aad
mov
adc
dec
mov
xchg
nop
ja
mov
out
mov
jle
mov
rcll
lret
jnp
cmpsb
insl
lcall
nop
insl
mov
lret
inc
inc
in
sarl
mov
cwtl
repz
lahf
sbb
or
cmpsb
mov
imul
mov
hlt
arpl
aad
jmp
jne
inc
push
push
xchg
mov
cmpsl
pop
xor
repz
jno
insb
push
adc
cmpb
sbb
mov
sbb
not
jmp
or
or
xchg
imul
test
imul
and
cld
ljmp
xor
fmul
outsb
sbb
decb
mov
push
leave
inc
ss
mov
stc
jne
lds
xchg
clc
lret
pop
push
fsubs
lods
or
stos
or
push
dec
pusha
xchg
pop
les
inc
and
jno
mov
mov
loope
in
mov
sahf
or
out
xchg
push
jne
std
imulb
js
mov
or
jmp
rcr
sub
cmp
mov
adc
repnz
enter
mov
cltd
pop
cmp
lahf
adc
mov
or
sbb
shlb
clc
xor
or
ret
lret
int3
sahf
sbb
shll
push
shl
ss
divb
add
imul
sbb
iret
and
outsl
dec
push
sbb
xorb
les
test
stos
outsl
pop
ror
and
int
mov
out
scas
pop
inc
stc
cltd
mov
addb
pmulhuw
pop
scas
and
out
or
and
iret
rclb
pop
mov
adc
arpl
pop
popf
adc
sbb
cmc
xchg
int3
outsl
inc
mov
hlt
mov
push
jne
movsl
in
ja
xchg
rclb
and
or
mov
push
mov
or
fwait
xchg
jl
push
in
xchg
cmp
ficoms
jecxz
pop
dec
enter
lret
mov
lret
and
xor
stc
mov
cwtl
or
inc
jge
test
nop
dec
mulb
jecxz
push
stc
push
imul
lahf
aad
out
stos
and
sahf
and
scas
loope
xor
pop
or
sub
and
mov
loopne
in
mov
insb
imul
cld
push
xchg
mov
movsl
addr16
cltd
jp
stos
cmpsb
inc
and
jo
jmp
pop
jge
cwtl
ss
ret
jmp
adc
lret
inc
jp
cli
mov
pop
lods
or
pop
lods
mov
or
lea
out
repz
dec
cmp
repnz
andl
pop
int
test
inc
xchg
mov
inc
sbb
test
in
in
xor
mov
or
in
mov
leave
rcl
xchg
sbb
sub
cmpsb
divb
arpl
fs
clc
movsb
sub
dec
pushl
gs
jge
inc
repz
push
inc
push
cwtl
jnp
clc
sub
pop
adc
push
jno
cli
stc
and
sub
mov
outsl
cmpsl
and
mov
aam
cmp
pop
lcall
mov
lods
inc
dec
cmp
outsl
into
cmpsb
shrl
mov
lods
lods
sbb
mov
mov
orb
xor
inc
aas
jecxz
lods
cmp
inc
shr
jae
in
repnz
popa
inc
scas
push
xchg
sub
repnz
bnd
inc
mov
std
and
mov
fnstcw
cs
addl
dec
and
inc
mov
jmp
pushf
insl
cmp
push
fcompl
stc
mov
cmp
out
rclb
pusha
ret
andl
add
xor
dec
xorl
push
mov
pop
test
and
sub
jbe
push
jne
test
jo
lret
and
aad
fstpl
push
aas
add
mov
test
cltd
inc
inc
inc
in
sbb
inc
push
out
sarb
sbb
mov
int3
inc
rcll
stos
xor
nop
xchg
cli
cmp
les
sahf
cwtl
xlat
sub
aam
xlat
jle
jle
std
mov
and
enter
ss
loop
out
inc
mov
pop
arpl
outsl
sub
xchg
popf
pusha
mov
cmpsl
test
dec
divb
orl
or
jp,pn
dec
sbb
cmp
out
jmp
lcall
sbb
push
inc
divl
and
dec
sbb
fidivrl
mov
in
push
mov
mov
daa
cmp
push
outsl
call
loope
add
adc
jmp
add
xor
sub
imulb
faddl
testb
daa
cs
and
push
sarb
pop
loop
push
lds
adc
out
jmp
jmp
and
adc
sub
iret
mov
xchg
rorb
icebp
jmp
inc
lods
inc
int3
inc
sahf
out
pop
pop
loope
mov
movsl
sqrtps
sbb
arpl
in
enter
or
jl
pop
pop
pop
neg
nop
inc
daa
pop
push
sbb
popf
pop
xchg
push
mov
push
sbb
aad
sub
cld
in
cld
testl
and
adc
jecxz
dec
and
pushf
bnd
push
adc
sbb
xchg
pop
out
dec
insl
cmp
movsb
mov
rcrb
dec
xor
mov
icebp
cltd
mov
add
dec
iret
aad
cs
mov
mov
fs
mov
mov
push
and
pop
das
jmp
lahf
xorb
jp
push
adc
add
push
xor
lret
shrl
imul
imul
cs
nop
pop
inc
push
adc
lock
popa
insl
pop
jbe
cmp
in
sbb
cs
lods
pop
jnp
mov
xor
jg
sub
cmp
test
jno
test
or
scas
mov
int
pop
sahf
notl
push
daa
pop
andl
test
xchg
call
dec
pop
arpl
cmp
bound
and
dec
rcr
mov
mov
xchg
dec
stos
out
pop
cmpsl
xor
in
cmp
stos
cmp
outsb
sbb
inc
jge
popf
lods
inc
xchg
popa
mov
jbe
lret
movsb
pop
pop
fs
cmp
cmp
pop
loop
xor
test
inc
inc
jb
pusha
pop
adc
ljmp
sbb
add
sbb
sbb
and
mov
loop
rcr
mov
imul
fbstp
addr16
push
mov
xor
adc
push
xor
or
pushf
idiv
das
sahf
cmp
xchg
mov
pusha
xchg
inc
pop
mov
sti
jns
cmp
loop
adc
xor
fcomps
dec
adc
add
scas
mov
sub
stos
adc
iret
rcll
lods
in
sbb
xor
cmc
push
mov
aad
dec
arpl
or
loope
pop
sbb
cwtl
mulb
jp
jecxz
jo
icebp
insl
fcmove
mov
sub
cmp
das
mov
jns
pop
fmuls
jge
mov
sbb
iret
dec
push
insb
test
push
mov
loopne
xchg
lret
adc
inc
popf
cs
sbb
cs
push
sbb
lret
push
or
shrb
out
mov
mov
add
cmc
mov
dec
xorl
dec
lcall
jnp
fimull
jge
inc
jb
sub
movsl
mov
fstpl
loope
inc
push
mov
aam
or
pop
outsb
test
pop
fcoms
mov
xor
pop
in
pop
inc
out
lea
test
mov
cmpsl
lods
adc
dec
mov
fdivrs
pop
sub
mov
or
testl
test
loopne
out
test
rolb
pop
mov
adc
addr16
lcall
ja
stc
movsb
loop
xchg
test
rcrb
push
lods
push
mov
inc
enter
lret
mov
roll
sbb
lds
clc
insl
jl
xlat
mov
xor
lahf
inc
nop
mov
sbb
jns
jo
add
inc
loopne
pop
test
mov
daa
pop
mov
adc
lods
sub
repz
call
or
xor
and
jl
cmp
lcall
aaa
and
push
pop
out
xor
shll
shll
xchg
push
ror
scas
mov
data16
int3
daa
sbb
repz
push
out
push
and
pop
cmp
nop
mov
xor
sbb
sbb
jle
mov
jmp
mov
and
lds
imul
nop
dec
pop
and
cmp
mov
insb
xor
js
ss
sbb
xchg
xor
or
jg
xorb
stc
mov
ljmp
xor
inc
push
lods
add
hlt
scas
cmc
xadd
sahf
xor
mov
insb
pxor
or
out
pushf
sbb
test
rolb
mov
xchg
inc
fmuls
pop
lods
repnz
mov
insl
fisttps
mulb
fmull
push
lahf
jnp
fwait
das
repz
adc
loopne
fdivl
imul
jae
pop
icebp
adc
lods
adc
mov
icebp
dec
dec
mov
jnp
lods
jns
popa
add
dec
push
jecxz
repz
gs
cmpsb
push
xor
adc
jb
or
lods
pop
pop
movb
fldcw
cli
mov
lret
rcl
or
mov
aaa
aad
add
ja
mov
test
int3
cmp
sub
mov
cli
and
and
and
pop
sahf
cmp
adc
xor
mov
sbb
mov
sub
hlt
lods
mov
imul
fadds
mov
push
fists
and
adc
mov
fisubl
sub
scas
mov
push
inc
mov
imul
xor
fdivrl
ret
idivl
les
pusha
pop
std
movhps
and
sbb
xor
mov
mov
dec
dec
mov
xchg
test
mov
pop
inc
arpl
aam
lds
mov
and
add
cltd
fistpll
arpl
scas
adc
mov
into
mov
cmp
pop
andl
dec
sbb
dec
xor
popf
lea
pushw
arpl
jge
inc
pop
jnp
push
mov
xlat
xchg
mov
add
xor
repnz
int
insl
stos
dec
jno
ret
jle
xchg
les
icebp
mov
xchg
mov
mov
sbb
lods
sub
dec
pop
mov
add
inc
push
call
jno
jno
mov
das
add
or
popf
push
arpl
dec
cmp
xchg
jg
jge
and
shlb
sbb
adc
test
lcall
imul
mov
pop
mov
xchg
ror
mov
xor
dec
mov
mov
clc
lds
out
dec
sar
mov
aam
test
xchg
fnsave
fnstenv
sarb
gs
inc
push
dec
inc
mov
lds
repnz
push
das
adc
inc
xor
adc
jmp
or
movsb
rclb
cmp
xchg
and
jp
dec
mov
xchg
sbb
xchg
clc
aaa
cltd
out
pop
or
mov
sub
gs
sub
xchg
hlt
into
xchg
push
or
sbb
jbe
cs
dec
fidivl
xchg
out
cmpl
shl
xchg
push
push
cli
in
or
leave
test
sub
jmp
or
es
cmp
sahf
hlt
icebp
lret
arpl
xor
pop
mov
mov
mov
or
popf
sub
sahf
arpl
out
out
xlat
add
mov
mov
mov
jae
push
ret
adc
in
add
outsl
push
test
sbb
in
inc
jno
sub
decb
mov
in
outsl
xchg
add
int3
mov
adc
sarl
jge
aam
xchg
arpl
push
push
or
jp
mov
inc
sub
test
sub
xor
pop
adc
fwait
pop
addr16
mov
mov
mov
fildll
adc
cmp
test
push
lahf
ljmp
ljmp
popf
push
es
imul
pushf
adc
mov
sbb
jae
push
cmp
add
xchg
or
jle
lods
cli
xor
xor
std
pop
clc
int3
and
loop
mov
add
not
dec
adc
fwait
scas
inc
hlt
sbb
enter
imull
test
and
pushf
mov
dec
pop
xchg
cmp
pop
push
mov
in
dec
test
mov
cmp
dec
push
cmp
rolb
mov
push
outsb
mov
sbbb
mov
dec
xchg
cmp
movsb
sub
popf
cmpsl
inc
pushw
ret
adc
out
in
ret
lds
mov
int3
add
stc
inc
mov
xchg
loopne
popf
inc
in
sub
pop
cmp
xchg
lods
imulb
add
sbb
or
test
push
inc
test
mov
pop
sbb
xchg
sub
push
jno
lods
adc
xchg
mov
outsb
int
mov
push
jns
pop
fwait
mov
rolb
aaa
dec
cmpsl
cmp
push
nop
pop
mov
pop
dec
inc
fwait
je
add
mov
in
mov
push
adc
mov
sub
andl
lock
cld
aas
sbb
lret
mov
in
test
call
sbb
cmp
add
dec
xlat
sbb
xchg
sub
xor
mov
jo
add
int
xor
cmp
jbe
subb
or
movsb
iret
jns
xchg
sbb
inc
sub
dec
insl
addr16
sub
xor
push
mov
popa
push
cmp
xchg
inc
mov
mov
sub
push
mov
fwait
pop
mov
jb
idivl
add
shrl
and
jg
inc
push
pop
sbb
inc
sahf
mov
cmc
sarb
movsb
pusha
inc
xchg
xor
mov
and
inc
int
lock
fs
jb
lret
in
cs
lret
cld
enter
icebp
outsb
jae
lock
subb
mov
push
fcmovbe
jmp
loopne
mov
adc
and
push
insb
sbb
cmp
je
mov
push
ret
mov
jp
js
rcrb
test
mov
sti
int3
inc
inc
dec
push
xchg
mov
xor
push
or
scas
sarl
ds
jge
mov
lret
jp
fldcw
inc
fs
sahf
pop
mov
add
cwtl
jo
imul
jge
in
loope
push
pusha
cmp
sub
imul
mov
jl
outsl
mov
or
mov
cmp
mov
push
cmpsb
cmp
packssdw
es
in
inc
and
adc
dec
xchg
xorb
jge
call
mov
lds
or
xchg
imul
dec
inc
pop
cmp
rcrb
es
cli
or
xor
dec
nop
pushf
jne
and
sbb
icebp
sbb
mov
nop
xor
out
lods
add
sahf
xchg
and
push
lret
xchg
popa
mov
jns
lods
loope
clc
inc
jnp
push
aaa
testb
insl
push
push
ret
insl
adc
aam
aaa
rolb
mov
dec
sbb
mov
iret
es
es
cmp
cmp
pop
add
in
jg
dec
std
adc
push
scas
into
inc
movsb
push
shrl
lret
cld
cmp
lret
sbbl
xor
jb
and
fs
in
out
sbb
add
sbb
movsl
addr16
es
pop
into
adc
lret
aad
popa
repnz
cmp
imul
jbe
sbb
xor
sub
xchg
jb
pop
sbb
adc
bound
sbb
lods
das
stc
sub
hlt
shl
cmp
cmp
jp
jns
jbe
shlb
jp
ss
dec
int
int
gs
adc
jae
frstor
aam
xor
aas
in
and
out
cmp
test
sub
pop
cmpb
pop
lods
fsubl
clc
fmul
dec
lret
pop
pop
adc
and
sbb
lret
mov
popf
mulb
js
jl
dec
out
test
popa
imul
pop
mov
test
push
and
xor
outsb
stc
out
outsb
mov
pusha
cmpsl
ficompl
fldcw
inc
fs
addr16
jecxz
adc
movsl
shlb
repz
or
sub
pop
add
imul
cmp
mov
lds
adc
inc
sbb
mov
pushf
cs
and
pop
mov
data16
fs
fnstcw
lods
adc
imul
repz
sbb
js
xlat
clc
call
push
sbb
cmp
ss
jmp
pushf
into
mov
and
stos
xor
xchg
mov
ficomps
mov
push
dec
test
dec
cmp
and
adc
cli
sub
mov
xor
xchg
incl
sbb
xor
xchg
add
xor
in
cmpsl
and
xlat
mov
jmp
add
jle
lds
stos
jge
mov
outsb
add
add
xchg
jne
iret
scas
lds
cmp
scas
addb
mov
dec
inc
sahf
dec
daa
mov
lret
add
outsl
icebp
dec
stc
adc
call
jbe
shll
jmp
scas
jmp
jecxz
jb
mov
outsl
jmp
inc
aam
sub
inc
hlt
push
sub
add
jbe
sbb
add
cs
ljmp
sub
filds
lds
int
lret
sub
sbb
int3
xor
xchg
scas
xchg
aam
sbb
add
or
cmp
xchg
cmc
dec
mov
cmc
or
arpl
push
int3
or
xchg
mov
xchg
cmc
in
lret
es
inc
xor
jne
inc
inc
call
mov
out
sub
icebp
xchg
clc
in
mov
cli
gs
xlat
test
iret
mov
push
or
dec
fcoml
mov
xor
mov
jge
sbb
adcb
inc
sub
ss
daa
jl
fcoml
pop
arpl
out
pop
jle
movsb
fnstcw
sbb
hlt
fidivs
cld
push
mov
sub
push
mov
out
orb
daa
lock
and
and
jo
fdivl
adcl
mov
pop
adc
add
jp
cmp
test
lods
fwait
dec
pop
idivl
popf
sbb
in
das
pop
xor
call
or
adc
mov
andl
mov
daa
pop
xchg
jo
cmp
stos
sub
inc
cmp
rcrl
cmp
clc
test
stos
mov
pop
mov
jno
mov
movsb
addr16
out
sbb
out
out
fsubr
push
scas
cmp
das
mov
jle
shlb
repz
fcoms
cmp
inc
sub
xor
adc
test
aas
ss
imul
inc
test
sub
cmc
xchg
pop
mov
sub
xchg
cmp
push
pusha
xchg
in
sub
or
jae
decb
or
xlat
loope
mov
xchg
mov
pop
mov
les
pop
int
cmp
mov
jne
sbb
cmpsl
adc
ss
addr16
fucomi
jno
xor
ds
dec
idiv
xorb
es
push
cwtl
pop
push
test
loop
inc
inc
push
mov
xor
adc
cld
or
imulb
and
jg
sbb
stos
aaa
out
ss
cmp
repz
movsb
add
sarb
sbb
push
psrld
add
dec
aam
out
sub
xchg
dec
test
inc
ja
dec
inc
push
sub
cmpsl
and
jge
std
cmp
bnd
add
sub
fmulp
mov
push
test
inc
scas
pop
call
inc
adc
rcr
pop
cmp
dec
test
adc
adc
adc
dec
push
movsl
xchg
and
xchg
mov
in
push
xchg
xchg
add
repnz
adc
mov
ffree
pop
int
aas
repz
mov
dec
add
ja
push
inc
mov
stos
jae
int3
mov
xor
in
dec
mov
pop
adc
in
push
sbbb
or
scas
sub
jbe
mov
push
test
test
les
rcll
jecxz
repnz
inc
cmp
lcall
out
mov
pop
or
dec
lds
fcmovne
pop
nop
and
loop
into
xchg
push
xchg
hlt
dec
jmp
dec
mov
jb
lds
xchg
xor
push
jl
sub
mov
inc
xor
dec
mov
fisubl
push
iret
fstpl
in
mov
xchg
jae
mov
vshufps
ja
and
add
sub
outsl
xchg
addb
mov
iret
stos
imul
icebp
cmpsl
and
int
and
arpl
fisubrs
cmp
dec
pop
fdivrs
add
adc
jecxz
jnp
iret
les
out
jne
ret
mov
adc
les
es
pop
popf
daa
arpl
cs
adc
xor
lds
ljmp
xor
repz
dec
inc
dec
hlt
cmpsb
mov
cmp
aad
pop
ljmp
lahf
idiv
pop
shrl
mov
xchg
sbb
dec
stos
mul
pop
negl
cmc
popf
test
scas
int
cld
pop
lret
popf
test
mov
je
mov
sub
fcoms
rorb
sub
lea
insb
add
xchg
sbb
nop
adc
dec
mov
xchg
xchg
dec
vpmacssww
lds
jb
dec
mov
in
xchg
cmp
fdivs
cli
cli
dec
ljmp
std
stc
aas
popf
or
sub
fsubr
addb
sbb
gs
lahf
cmp
shll
xchg
sub
lcall
aam
scas
and
add
push
inc
jl
mov
hlt
data16
add
ja
filds
push
inc
and
or
rorl
insl
cmc
xchg
push
pop
pslld
mov
inc
std
jp
push
sub
out
les
bound
dec
insb
in
sbb
jmp
sti
gs
fcoms
fcomps
inc
insb
sahf
or
cld
push
jmp
and
pop
mov
mov
sub
sub
imul
and
data16
push
sub
and
cld
leave
sbb
xor
push
ds
rol
or
inc
outsb
lahf
jmp
aad
rcr
mov
mull
mov
mov
mov
push
xor
mov
mov
push
dec
pop
cld
testl
int
and
outsb
test
dec
fwait
jp
add
jnp
add
dec
aad
insb
jecxz
mov
pop
inc
clc
hlt
and
ja
call
roll
loope
push
jns
jae
jmp
mov
push
fs
rorl
sarb
xchg
clc
std
idivb
cltd
js
sub
add
and
xchg
dec
in
jp
mov
shlb
movsb
mov
sbb
mov
sub
sbb
inc
imul
shr
mov
adc
leave
or
out
cltd
ss
push
cltd
lods
cli
push
fisttpl
mov
xor
sbb
push
jmp
adc
push
mov
in
das
scas
xchg
add
dec
xchg
dec
push
pop
js
push
je
xchg
int
xchg
xchg
xchg
or
xchg
outsb
scas
jp
js
mov
adc
xlat
pushf
leave
mov
mull
and
les
jno
shrb
xchg
pop
add
loopne
dec
add
std
or
icebp
gs
push
mov
sbb
push
in
int
or
xor
les
mov
bswap
in
xchg
arpl
cwtl
lock
inc
mov
add
sti
into
out
ret
mov
cld
ljmp
mov
outsl
mov
ret
lahf
inc
clc
push
into
das
sub
lret
into
jle
imul
lea
cmp
inc
iret
in
pop
call
and
movsb
cmp
cmp
push
mov
ret
push
addb
push
lret
adc
xchg
push
sbb
adc
push
dec
jp
or
lret
adc
ljmp
fsubrl
pop
jnp
arpl
into
hlt
cmp
ret
inc
repnz
dec
pop
dec
push
cmpsl
js
jnp
mov
ret
cmp
insl
aam
pop
or
aam
stos
loope
mov
test
xor
insb
inc
or
fcomip
cmp
popf
clc
mov
int
xchg
ficomps
pop
loop
inc
js
mov
dec
mov
sub
jmp
iret
xchg
clc
movsb
jae
mov
push
inc
fdivrs
arpl
fbstp
xchg
xchg
in
enter
je
xchg
mov
ja
pop
inc
or
aas
jp
add
js
inc
xchg
popf
add
mov
mov
repnz
or
mov
lea
loop
outsl
xor
lds
fsubrl
cmp
push
popa
add
push
adc
popa
enter
ds
dec
pop
out
xor
enter
sub
insl
ss
rclb
insl
lret
xchg
pusha
aad
nop
mov
jns
xor
imul
fstp
std
dec
mov
xlat
addl
lds
or
andl
add
iret
in
test
enter
cld
mov
cmpsl
sub
jl
mov
pop
int
sbb
or
xlat
scas
testl
jp
scas
popf
push
int
sarl
sub
xor
rcr
ficoms
sbb
test
cltd
dec
sbb
xchg
arpl
cmp
es
ja
in
xchg
sub
loopne
into
lock
xlat
adcb
mov
ret
dec
add
mov
test
push
pop
pop
push
or
cmp
cs
arpl
decb
inc
out
nop
pop
in
shrb
xor
outsl
dec
shl
in
loop
sub
or
jmp
dec
xor
mov
fdiv
incb
std
out
outsb
into
es
jl
mov
sbb
push
add
jo
xor
clc
sbb
es
enter
in
stos
dec
cmp
xor
push
out
xor
mov
sysenter
test
inc
push
ret
gs
fsts
push
cmp
pop
xchg
cmc
movsl
fwait
mov
pop
jae
dec
sti
mov
insb
out
stos
cmp
mov
scas
push
movsl
cs
rolb
add
push
cmc
mov
jnp
mov
push
xor
in
dec
outsb
sbb
repnz
mov
jge
inc
cli
adc
mov
fldenv
dec
add
inc
cwtl
and
jb
leave
sbb
add
les
or
and
and
adc
adc
and
mov
mov
insb
push
xor
clc
mov
or
adc
jnp
xor
push
xor
fcompl
mov
cmp
shlb
scas
pop
and
popa
int3
cmpsl
push
adc
sbb
inc
aas
dec
fsubrs
add
sbb
lods
sbb
idivl
out
dec
rcrb
in
in
sarb
mov
jno
loop
icebp
stos
aas
fstpl
xchg
and
lcall
testl
dec
loope
pop
fcmovb
fwait
pop
in
jb
sarl
push
movsb
xchg
into
xchg
sub
sub
mov
xlat
lret
push
aaa
cmc
movsl
add
popa
clc
lahf
mov
sti
imulb
test
jge
jns
adc
cmp
pusha
pop
mov
jns
push
outsb
mov
sbb
add
cmp
xchg
out
decl
movl
stos
aaa
popf
jge
jecxz
cmp
inc
movsb
push
ret
jno
mov
ss
fwait
in
inc
dec
mov
pop
sub
and
ficoms
sbb
and
clc
stos
inc
aad
push
stc
mov
inc
es
xor
decb
push
movl
enter
stos
add
movsl
cmp
and
add
dec
test
movsb
aad
pushf
test
fcmovne
int
mov
cld
repz
ja
sbb
fstps
mov
adc
mov
cmp
xchg
dec
leave
inc
test
repz
std
dec
andb
enter
lds
push
jno
mov
sub
ljmp
mov
inc
push
xor
and
lret
and
ret
xlat
std
stos
adc
xchg
jnp
pop
in
xchg
jne
fcmovb
lcall
stc
xchg
fimull
imul
push
and
push
cs
mov
sbb
enter
std
jo
push
jo
pop
mov
push
jp
aaa
add
scas
sub
cmpsl
in
xchg
in
cmpl
jne
xor
push
out
mov
repnz
scas
push
jecxz
push
jb
xchg
mov
push
fs
loope
bound
xchg
fisubrl
inc
rcrl
andl
sbb
out
cmp
sub
in
jo
jns,pn
xchg
ds
in
xor
pop
mov
pop
inc
or
mov
lods
iret
or
inc
lds
add
hlt
xor
sbbb
sbb
bnd
repnz
jle
add
sarb
es
stos
dec
popa
xchg
aad
pop
push
xchg
mov
push
inc
testl
add
xor
adc
cmc
insb
js
es
ljmp
adc
pop
jne
inc
and
jl
sbb
icebp
clc
shll
iret
mov
adc
sub
lds
cld
pusha
or
cmpsb
ret
mov
idivl
pop
push
sbb
cmp
cmpb
xorl
dec
dec
clc
jmp
aas
into
out
pxor
cli
xchg
add
cmp
jbe
cmp
pushf
and
sub
sbb
add
out
mov
pop
push
and
xor
scas
cmc
test
sbb
mov
nop
out
adc
daa
sahf
inc
rclb
push
loop
mov
or
jo
mov
push
cmpsb
push
cmp
sbbl
lods
jge
cmp
iret
mov
xor
sbb
nop
int3
mov
pop
cmp
jp
mov
js
lock
xor
pop
mov
sbb
or
mov
scas
rcl
data16
lea
add
sbb
dec
push
sub
imul
dec
sbb
out
or
gs
into
fistpl
sbb
push
xchg
cmp
jmp
aam
lahf
add
xchg
xchg
push
iret
aaa
adc
pop
pop
xor
sub
jo
in
hlt
repnz
es
mov
mov
jns
adc
push
test
push
and
imul
or
dec
hlt
jb
insl
roll
or
fsubrs
sbb
and
xor
jp
sbb
xor
mov
cmp
sarl
fcomps
inc
sbb
xchg
ljmp
xorb
xchg
pop
mov
dec
mov
mov
loope
aam
adc
frstor
sbb
adc
fmul
xchg
mov
jnp
movsl
insb
lret
dec
push
sbb
sub
add
adc
sub
jo
mov
adc
or
fwait
adc
sub
sub
or
sahf
dec
shr
mov
add
mov
hlt
pop
dec
test
and
sbb
adc
lods
fidivl
fildll
mov
lock
xor
push
fisubrl
pop
pop
jmp
push
loop
stc
xorb
pop
push
push
clc
std
movsb
mov
mov
sbb
shlb
mov
pop
and
or
sbb
xorb
dec
mov
sub
pop
pop
icebp
or
cmp
add
inc
fsubr
add
pushf
add
cvtdq2ps
push
dec
decb
pop
daa
dec
xchg
rorb
popa
dec
and
pusha
mov
pop
std
inc
mov
call
orl
jp
jg
push
mov
and
out
add
ficoms
mov
fwait
push
stos
push
cwtl
xchg
sbb
icebp
jecxz
lahf
mov
rcrl
aad
arpl
jge
fnstsw
lret
pusha
lds
jo
add
out
cmp
dec
das
pop
cld
and
dec
mov
inc
iret
orl
sbb
les
mov
out
fwait
punpcklwd
in
and
ret
int3
out
pushl
xorl
and
mul
int
push
inc
inc
fwait
mov
mov
jp
mov
fidivl
fstpt
lret
push
outsl
insb
test
fbstp
repz
lea
out
pop
mov
popw
mov
in
pop
xor
cmpsb
fisubl
dec
mull
xor
jecxz
pop
movsl
lret
jmp
cmp
and
mov
js
push
rol
mov
std
mov
mov
fldl
cli
pop
sbb
clc
out
faddl
idivl
aad
stc
push
pop
into
lock
xchg
xor
fwait
sub
or
xchg
mov
add
pop
cmpsl
mov
sbb
cmpsb
lahf
mov
fsqrt
in
je
mov
insb
or
sbb
jl
fcmove
xchg
loop
leave
jl
adc
loopne
stos
es
aad
and
pop
or
lahf
fists
stc
fisubrs
loope
xchg
push
pop
mov
fwait
testl
jne
rclb
bound
outsb
insb
mov
add
mov
bound
mov
inc
outsb
and
mov
popa
cmp
jbe
jbe
sbb
mov
frstor
mov
dec
mov
arpl
daa
icebp
stos
nop
aad
fs
cmp
sbb
xchg
lock
popf
dec
insl
scas
xor
add
xchg
clc
xchg
add
and
dec
fnstenv
pop
dec
lods
ja
mov
mov
orl
mov
xchg
push
fidivl
jns
xchg
mov
mov
std
xchg
ret
jb
pop
mov
add
pusha
loopne
cmp
sti
and
sbb
scas
inc
dec
ret
arpl
push
in
decl
lods
jmp
mov
mov
jbe
xchg
fisubs
mov
inc
dec
lods
adc
ds
push
dec
imul
inc
cwtl
notb
inc
adcb
inc
and
mov
insb
xchg
sbb
movsl
add
pushf
xor
in
call
cmp
icebp
push
push
cmpsl
ret
cld
inc
mov
std
xor
mov
popa
out
sahf
pop
rcr
cli
ja
mull
push
cmpl
sbb
insb
mov
inc
js
add
adc
test
sub
shlb
negb
sbb
mov
dec
sbb
push
push
push
mov
imul
push
roll
xchg
jle
mov
or
and
jg
lret
pop
pop
and
daa
out
xchg
in
sub
mov
rorb
mov
add
or
sbb
cs
jmp
sub
stc
cmp
xchg
mov
inc
mov
adc
lret
testb
xorb
adc
shl
inc
mov
xlat
cli
mov
adcl
mov
cmp
hlt
cmpsl
adc
dec
and
sub
mov
cmp
out
testl
nop
push
sbb
arpl
push
xor
xchg
mov
popa
test
out
aas
cmpsl
adc
jb
sbb
and
sbb
mov
pushf
dec
add
gs
xor
ret
pop
jmp
scas
mov
mov
aam
sub
cmc
lock
dec
fwait
out
fisttpl
adc
fst
popf
cmpb
mov
mov
inc
cmpsb
xor
mov
sbb
repnz
pop
les
pop
notb
aas
xchg
rcrb
xor
scas
xor
push
mov
jae
imul
std
mov
fwait
or
mov
pop
arpl
pushf
insl
sbb
gs
and
stos
adc
fadds
cwtl
loopne
jg
or
sbb
out
fisubs
and
mov
js
jbe
jle
aam
and
add
jne
mov
out
jge
sbb
mov
xor
push
adc
bound
lahf
cs
or
or
int
jmp
pop
xchg
shl
dec
adc
pop
push
cltd
mov
add
sti
xor
push
in
add
pop
clc
pushf
negb
out
fwait
push
imul
xor
scas
scas
mov
stos
lahf
lret
stos
mov
jbe
roll
adc
xchg
imul
push
add
lahf
out
out
out
dec
pop
pushf
cmp
js
add
pshufw
push
xchg
cmp
pushf
jge
stc
shr
xchg
nop
add
sub
mov
shlb
std
mov
outsb
repnz
cltd
loopne
cmpl
repz
jo
push
xchg
shlb
cmc
addr16
mov
enter
mov
imul
add
mov
add
pop
pop
cmp
or
movsb
push
ljmp
lahf
dec
outsb
cwtl
jge
aaa
hlt
mov
mov
mov
xchg
push
insl
test
into
inc
je
or
xor
and
pop
sahf
sub
sbb
dec
insl
out
xchg
fcoml
lret
repnz
mov
rcll
pop
cltd
xchg
mov
pop
mov
jne
lcall
and
or
icebp
inc
xchg
adc
sti
rol
lds
js
std
inc
cwtl
mov
aad
loop
pop
xchg
cwtl
das
rcll
loopne
or
fdivp
xor
mov
ror
pop
cmpl
mov
std
xchg
ljmp
movsb
aad
loop
push
cmp
les
push
aad
push
jo
test
add
mov
dec
dec
push
cs
sti
inc
mov
jo
xchg
std
dec
aam
jno
je
das
jge
repnz
mov
cld
fistpll
jne
xlat
das
fistpll
push
ror
push
inc
push
xchg
mov
jmp
test
fldcw
mov
nop
cmp
sbb
add
aam
mov
cmp
icebp
xor
imul
loope
mov
testl
cwtl
adc
daa
dec
xor
adc
and
push
jle
add
arpl
int3
or
iret
mov
xchg
std
mov
rorl
fidivs
pushf
imull
jne
mov
or
add
inc
fwait
das
sub
insb
into
outsl
jo
cmp
push
lods
mov
cwtl
outsb
imulb
rolb
pop
xchg
nop
xlat
mov
mov
cwtl
dec
dec
je
mov
ret
adc
jmp
stos
shrb
data16
in
add
cli
jbe
ds
mov
cmp
cwtl
movsl
dec
cmpsb
or
icebp
pop
or
dec
dec
lahf
cmc
pop
mov
shlb
jne
xchg
sbb
jecxz
aam
sahf
sbb
test
testl
xor
arpl
cmp
in
xlat
test
jge
scas
in
push
push
cmp
sub
adc
scas
enter
cmp
or
xlat
imul
mull
icebp
mov
add
mov
push
loop
aad
ja
popa
and
aam
jns
xchg
les
mov
mov
inc
jne
mov
cmpsl
test
push
dec
or
mov
in
adc
mov
cmp
add
jnp
das
lea
mov
push
hlt
je
mov
sub
xchg
pushf
hlt
popf
mov
lahf
dec
repz
pop
xchg
leave
and
pushf
dec
je
dec
out
ds
sarb
pop
fistl
xor
js
lock
js
lds
ss
mov
xchg
mov
or
arpl
pop
or
inc
mov
int3
and
xchg
inc
or
in
sub
pushf
xchg
aas
and
iret
adc
daa
in
imul
sarb
push
shrl
xor
sahf
mov
mov
lcall
push
or
xchg
mov
jno
loope
mov
xchg
test
lods
jo
daa
ds
xor
out
outsl
shll
push
sbb
adc
lods
out
dec
in
mov
subl
das
fistl
sbb
bound
ja
roll
jns
mov
aad
adc
dec
mov
in
lret
arpl
sahf
add
mov
out
mov
dec
add
int3
mov
mov
ljmp
push
sahf
and
iret
data16
push
imul
aas
push
popf
mov
dec
add
fwait
push
lods
mov
xchg
and
popf
insb
push
push
inc
addr16
mov
mov
pop
mov
cmpsb
sbb
data16
jno
add
and
sub
xor
jg
loope
cltd
sti
std
mov
enter
lods
fdivrl
jmp
das
in
ffreep
fsub
lea
jp
stos
jns
data16
aam
cs
sbb
insb
stc
test
cli
jle
int3
icebp
cwtl
andb
mov
xlat
stos
jmp
lret
nop
pop
in
push
push
js
mov
xchg
xorb
jmp
and
ficoms
cmp
movsb
sbb
jae
xor
repnz
out
push
mov
sbb
test
push
hlt
xlat
pusha
popf
dec
mov
cmpsb
cmp
push
jmp
sbb
je
pop
inc
leave
ja
orl
push
fimull
jae
xchg
inc
jno
jg
or
sub
pusha
push
jno
push
push
adc
xor
dec
sub
xor
divb
mov
push
jg
pop
inc
adc
aas
mov
dec
cmc
aas
cmp
adc
int3
mov
push
cmpsb
jno
aad
cmp
mov
jge
clc
insb
push
inc
xchg
mov
xchg
or
jmp
pop
lock
sbb
scas
aad
and
shrb
nop
imulb
cmp
sub
lcall
lods
jae
scas
clc
mov
cwtl
sbb
push
cmc
lahf
int3
out
mov
mov
jnp
mov
xor
std
cmp
jmp
jg
test
jno
and
adc
rcrl
xchg
cmp
stos
pop
cmp
adc
cmp
mov
es
push
addr16
cmp
and
jp
jge
adc
loopne
xchg
orb
cwtl
sbb
mov
faddl
push
pop
add
faddl
cmp
push
ret
int
icebp
inc
mov
xor
pop
dec
lea
and
sti
dec
aaa
add
add
ret
cmp
jg
aad
mov
outsb
aad
cmp
cmc
imul
std
nop
popl
repnz
mov
xchg
jne
fsub
into
insb
inc
jmp
test
repnz
dec
fucomp
and
dec
xchg
adc
sbb
iret
add
repnz
dec
cli
adc
sti
or
sub
adc
daa
cld
xchg
push
sbb
mov
mov
jg
aas
ja
shrb
cmp
add
movsl
mov
rcrl
ds
adc
lret
jnp
shrl
enter
rorl
xchg
ret
out
data16
dec
jne
sub
fcomp
subb
pop
push
jbe
jbe
xor
popa
mov
sahf
sub
jbe
push
xor
xor
jmp
das
fsubs
xor
mov
lock
sub
mov
xlat
sub
pop
or
enter
popf
stos
icebp
cs
xlat
imul
jecxz
xchg
push
out
sub
shll
mov
mov
mov
pop
test
ror
push
xor
sbb
aam
hlt
out
push
es
pop
mov
sbb
lret
xchg
repz
sub
jecxz
lods
push
mov
and
dec
in
jg
gs
je
lret
insb
pop
add
and
dec
dec
iret
cmp
nop
cmpl
sub
je
xchg
lods
and
or
ja
sbb
rcll
nop
insb
push
test
and
lods
je
pcmpeqw
and
push
pop
sbb
popf
lahf
int3
incl
in
ljmp
cmp
lock
jp
les
or
or
dec
cltd
push
aad
push
adc
jl
xchg
push
push
fsubrl
lods
lret
in
and
inc
pop
jg
ljmp
xor
shll
cmp
test
lret
xchg
lret
ljmp
lcall
jmp
push
test
dec
pop
mov
sarb
dec
jae
ds
dec
icebp
xchg
mov
sub
cmp
mov
xor
je
ljmp
mov
or
fdivs
push
dec
pop
out
xor
sahf
fisttpll
add
add
insl
mov
cs
xchg
add
mov
les
jl
pop
xor
jle
or
mov
jle
insl
aad
rol
sub
inc
mov
daa
ds
pop
pusha
jp
pop
leave
xchg
mov
pop
mov
rcll
aas
sub
push
sbb
sbbl
sti
out
xor
sub
xchg
mov
jbe
mov
sub
jns
xor
pushf
jnp
mov
mov
jge
sti
test
jl
sub
push
outsl
bound
jl
rcrb
mov
jp
test
and
lods
fsubrl
sub
imul
lea
fistps
stos
leave
cmpsl
fisttpl
sbb
inc
mov
lret
sub
inc
enter
arpl
mov
nop
mov
jle
stc
xorb
jmp
lret
aad
es
add
outsl
mov
xchg
dec
push
cmpl
push
mov
ret
xchg
cmc
xor
fdivrl
sub
out
subl
dec
ret
lea
inc
clc
mov
lret
fisttps
fmuls
imul
mov
fidivl
jg
adc
sub
lea
adc
mov
loope
push
xor
pop
sbb
jle
mov
mov
in
sub
inc
and
xor
cmpl
inc
fldl
inc
arpl
xor
xor
enter
sub
mov
fwait
sub
and
sbb
pop
lret
imul
mov
fstl
pop
mov
int3
push
mov
sbb
push
test
cmpl
xlat
pop
out
lods
popa
cmpsb
stos
jge
jnp
ds
in
jnp
mov
sbb
outsl
popa
negl
jno
notl
adc
repz
push
mov
mov
outsb
ja
push
sbb
xchg
sub
jno
adc
leave
add
push
pop
ss
mov
pop
lcall
cmpsl
xor
cmp
std
int3
lea
fwait
or
mov
cld
sbb
pop
dec
jle
loop
fmull
nop
imul
mov
sub
mov
orps
loope
data16
and
int3
loop
loop
cs
pop
ja
mov
outsl
lret
cmp
notb
inc
icebp
jnp
repnz
mov
add
mov
shll
fsubrl
pop
icebp
frstor
jp
ja
cltd
ja
pop
sub
xchg
rcll
sbb
inc
adc
jecxz
push
jge
mov
and
loope
jmp
insb
adc
xor
mov
js
adc
cmp
dec
repnz
pusha
stos
out
jne
fwait
ljmp
sbb
daa
mov
xchg
or
mov
push
pop
mov
or
push
and
fidivrs
mov
and
or
ret
jge
cli
jnp
mov
adc
pop
jmp
mov
push
or
inc
test
inc
fstl
rcrl
mov
call
or
outsl
adc
push
sbb
and
mov
dec
jne
push
pop
sti
aam
add
sbb
test
xchg
call
scas
gs
sub
push
cld
and
jb
subl
or
lret
out
dec
or
mov
loop
pusha
inc
cmc
lods
addl
push
sti
in
scas
fisubrs
stos
pop
inc
inc
addr16
addr16
jb
dec
fdivr
inc
push
mov
mov
nop
pop
sbb
ss
repz
enter
xchg
in
adc
lahf
jne
inc
sahf
test
and
and
push
and
cmp
addr16
out
insl
pop
mov
nop
pop
lret
data16
loope
jl
fiadds
xor
push
inc
mov
push
popa
push
pop
aad
leave
sbb
js
inc
fwait
sub
sbbl
cmp
mov
lret
shll
inc
inc
cwtl
mov
mov
pusha
add
clc
pop
push
in
mov
sub
test
call
lods
mov
pop
add
flds
sbb
mov
fbstp
dec
cmp
lret
movsb
mov
adc
lea
sub
adc
jno
sub
aam
icebp
ret
xchg
jno
jp
pop
leave
dec
cli
sbb
cwtl
sahf
and
in
pop
and
rorb
ret
nop
imul
xchg
sub
jecxz
adc
jg
adc
mov
outsb
imul
sub
popa
dec
adc
and
fcmovb
sti
push
jo
mov
xchg
lods
mov
stc
mov
add
fstpt
mov
sbb
pop
sti
dec
mov
cld
cltd
xor
jne
sbb
loope
mov
sti
mov
aas
aas
enter
mov
sub
mov
sub
or
cmp
cmp
xchg
lea
sarb
jae
sti
dec
mov
push
pop
push
pushf
je
cmp
xchg
pop
cmp
cli
icebp
scas
xor
jnp
mov
adc
cmp
test
xor
jns,pt
mov
movsl
cmc
test
pop
sbb
jp
mov
cs
mov
fadds
adc
pop
loopne
in
and
and
inc
leave
adc
sbb
stos
dec
jne
daa
cmpsb
rol
cmpsl
sub
xorb
dec
jecxz
cld
adc
fucom
notl
fnclex
xor
inc
xchg
sahf
jo
mov
mov
xchg
loop
pop
enter
adc
xchg
aaa
pop
out
inc
jnp
push
mov
data16
pop
rcl
sub
or
dec
add
loope
in
jle
lods
lret
shlb
push
sti
lods
popf
and
or
xor
pop
and
stos
jmp
out
sub
jbe
xor
ja
adc
scas
lcall
lods
fisubl
popl
int3
cmpsb
mov
push
aas
sbb
sub
xorl
adc
sub
adc
and
inc
jb
sub
cmp
lahf
outsb
fcompl
cmp
mov
push
fsubrs
xchg
mov
daa
ljmp
stos
data16
insl
mov
dec
mov
repz
hlt
or
inc
add
jmp
test
in
dec
adc
les
add
sbb
aas
xchg
lahf
xchg
add
inc
jge
mov
jg
shlb
or
into
adc
push
xchg
cwtl
sbb
test
loop
add
jecxz
adc
mov
dec
mov
jae
repz
cmpsb
add
movsb
inc
sub
mov
xchg
lret
sbb
in
pop
out
xor
xor
mov
sub
mov
inc
gs
scas
adc
mov
or
and
push
jne
xchg
cmp
inc
daa
xor
aam
notb
daa
xor
in
pop
mov
xchg
xchg
push
xor
xor
popf
xchg
js
daa
push
insb
fsubrs
out
aad
mov
or
dec
dec
pop
add
mov
jmp
add
mov
adc
xchg
lods
repz
push
pushl
add
fisubrl
mov
ja
outsl
mov
pop
cmpsb
inc
xchg
out
pop
fcomi
shll
fidivrs
add
lret
dec
js
mov
push
dec
adc
mov
std
fmuls
stos
lret
mov
mov
in
cltd
scas
mov
xor
stos
shrl
addb
ss
adc
mov
sbb
push
xchg
hlt
add
or
inc
sub
lret
xor
jne
pop
add
out
mov
jg
loopne
imul
pop
rorl
or
cs
fdivl
call
push
xchg
shlb
cmp
xchg
adc
or
popf
call
fs
mov
xor
out
addl
fadds
inc
push
jg
outsl
pop
mov
je
jp
mov
sbb
repnz
in
adc
call
cmpsl
inc
add
jmp
jmp
sbb
pop
sti
andl
icebp
sbb
imul
fs
push
bound
imul
pop
pop
cmp
jo
nop
sub
sub
stos
fsubl
fidivrs
and
push
xchg
mov
fcompl
push
jle
or
xchg
and
mov
ds
push
add
xchg
leave
mov
movsl
xchg
mov
into
inc
inc
test
std
out
and
imul
shrb
push
subb
rol
imul
cltd
jno
cwtl
xchg
ficoms
shl
inc
pop
sub
sbb
jle
cmp
js
lds
sahf
sbb
jmp
aas
mov
xor
ja
xchg
xor
pop
test
aad
and
cmp
rorb
adc
sub
jmp
add
sub
sarb
inc
push
xchg
sub
fidivrl
dec
mov
out
lods
jecxz
adc
in
ret
jmp
xor
xchg
mov
loop
enter
add
xlat
shll
aad
fldl
push
mov
stos
stos
xchg
xlat
pop
out
mov
cltd
insl
cmc
jmp
rcll
cmp
xchg
dec
adc
fmull
sar
sbb
fstps
mov
xchg
sbb
aad
mov
mov
subl
lea
mov
clc
mov
xchg
cmpb
sub
and
insl
shlb
xchg
inc
lock
cmpsl
or
lods
sbb
sub
pop
leave
dec
bound
sub
sbb
mov
mov
mov
jb
dec
loope
outsb
adc
lret
inc
lahf
pop
sub
fwait
insb
cmpsl
fnsave
xchg
inc
adc
or
sahf
clc
add
adc
pop
mov
cmp
mov
faddl
push
call
nop
push
test
jns
cld
dec
inc
clc
orb
cmp
out
jg
leave
cmp
out
mov
mov
je
mov
mov
and
and
bound
out
lods
jnp
cmpsl
inc
mov
out
out
and
neg
jnp
pushl
push
add
sub
mov
xchg
jb
jmp
aad
imul
dec
data16
leave
testb
jne
sbb
repz
inc
in
inc
jmp
leave
jne
cmc
adc
dec
jno
push
ret
fwait
add
pop
shrl
sahf
xchg
mov
add
fstps
jo
adc
cwtl
jae
loopne
pop
cmp
sti
mov
mov
sub
pusha
inc
adc
lods
cmp
push
addr16
leave
clc
push
mov
sbb
dec
add
mov
in
andb
stc
frstor
xchg
inc
add
popa
push
addl
outsb
shl
aam
aam
add
xor
pop
or
shlb
insl
aad
xor
xchg
gs
pop
ret
and
xor
pop
mov
jmp
imul
lods
clc
jnp
sbb
lods
jnp
outsb
mov
or
int3
test
inc
cmp
xchg
sub
insl
adc
push
loop
sbb
testl
mov
outsl
push
jl
pop
inc
pop
push
mov
cld
jg
ljmp
rorl
cmp
arpl
adc
jmp
xchg
or
les
fwait
sbb
dec
mov
sti
rorb
push
xor
fdivrs
or
xchg
push
xor
outsb
stc
pop
movsl
leave
mov
fisubrl
adc
push
ja
decl
xorb
sub
jp
scas
dec
jmp
testb
rcll
pop
mov
inc
pop
ljmp
jl
jp
pop
inc
mov
mov
outsl
xchg
push
shr
mov
jecxz
cmpsb
add
cmp
cwtl
push
mov
sbb
lret
int
xor
ss
dec
stos
stc
jecxz
inc
cli
add
jbe
loopne
add
dec
pop
xchg
lahf
out
sub
in
mov
push
cwtl
incl
mov
aas
jbe
shll
loope
into
push
fcompl
jg
xor
and
daa
or
enter
mov
sub
and
call
sub
sub
test
or
jle
sbb
adc
test
and
out
aad
push
aam
inc
scas
gs
clc
mov
add
cli
stos
mov
push
je
add
pop
inc
andb
or
add
ret
scas
clc
pop
into
mov
loopne
cmpsl
cmp
mov
sti
hlt
cmpsb
mov
or
fwait
sbb
mov
xchg
xchg
fcomip
dec
int
lods
or
testb
add
adc
jns
in
popf
fcmovne
cmc
out
aaa
jmp
or
je
and
cmp
mov
pop
dec
jle
inc
mov
loop
aas
cmp
lods
int
xor
cmpsb
out
adc
xchg
repz
enter
test
repnz
push
enter
xchg
out
xlat
pushf
loopne
mov
xchg
xor
sbb
cmp
xor
repz
xchg
sub
dec
pop
mov
dec
adc
sub
mov
pop
push
in
or
arpl
jecxz
js
movsb
pusha
fstps
fucomi
mov
mov
fucomi
push
test
pop
jmp
les
mov
dec
loopne
mov
movsl
adc
xlat
call
push
mov
fcmovb
cs
lret
push
add
xlat
leave
inc
loopne
sbb
jno
sbb
test
push
lret
cmp
sbbb
add
pop
xor
test
scas
jnp
xorb
mov
inc
loope
cmp
mov
fisttpll
rclb
fistps
push
aam
mov
pop
movsb
test
jmp
repnz
cmc
mov
sbb
lods
ja
push
xchg
inc
imul
jno
addr16
test
psubb
fs
push
inc
jmp
icebp
jg
cmp
xor
or
dec
pop
in
jo
sarb
pop
push
mov
pop
inc
sti
clc
or
out
jns
subl
aas
mov
sub
dec
lret
lahf
push
lock
test
js
aas
sub
lea
xchg
xchg
faddp
mov
in
cmp
dec
cltd
jg
sbb
mov
or
or
arpl
push
cmp
ret
negl
and
add
or
scas
out
ljmp
out
insl
inc
imul
jo
adc
dec
sbb
push
inc
jmp
mov
rorb
imul
sub
fiaddl
dec
push
fstp
or
fldl
jl
punpckhwd
cmp
mov
addr16
sbb
not
cli
call
imul
xchg
jnp
and
call
push
pop
add
xchg
pop
mov
inc
ret
addl
orb
cmp
xchg
ret
lock
cmp
fcoml
call
inc
jbe
lods
xchg
cmp
pop
subl
push
push
inc
scas
mov
mov
sti
outsl
gs
dec
test
mov
das
sbb
aam
mov
mov
ljmp
fsubl
lret
push
push
sub
add
dec
rcll
out
push
mov
repz
push
negl
mov
mov
das
push
cmpsb
mov
test
xorl
je
inc
cli
dec
test
sbb
sbb
mov
js
mov
and
and
xor
dec
out
dec
loopne
mov
pop
dec
dec
imul
or
subl
fldenv
xchg
xchg
aaa
test
ret
jne
pusha
sbb
push
or
cmp
rcrb
scas
cmp
es
lret
ss
xchg
pushf
arpl
scas
lahf
insl
cmp
je
and
shlb
lods
call
les
fwait
test
add
push
jmp
mov
das
adc
inc
mov
jecxz
and
shrb
push
sub
in
or
in
xchg
dec
lret
jbe
push
rorb
iret
mov
inc
imul
xlat
xlat
add
cmp
int
pop
xchg
idivl
lcall
insb
ja
xor
repnz
in
adc
into
jl
push
repnz
pop
hlt
xchg
aaa
jmp
sbb
sub
out
sub
pop
jg
push
enter
mov
and
orb
xchg
lds
mov
js
cmpsl
mov
out
mov
inc
in
mov
or
enter
lret
pushf
xor
mov
in
pop
cld
mov
das
jg
jo
in
mov
pop
loop
cld
jecxz
cmpsl
mov
stc
stos
jo
test
testb
xchg
pop
or
cmp
push
and
jnp
out
jno
cmpsb
xchg
push
iret
adc
aad
jnp
sti
insl
stc
bound
shl
shrb
cmp
sbb
lea
outsl
jns
dec
icebp
pop
aas
adc
pop
xchg
dec
xchg
cmp
adc
jge
es
inc
pop
jns
mov
xchg
pushf
fdivr
pop
out
or
lods
add
jl
and
jb
jae
imul
ret
xchg
cmpl
and
sub
push
ljmp
enter
test
pop
sbb
ss
mov
and
sbb
sub
mov
outsb
xchg
leave
push
fstpl
push
js
sbb
fs
daa
testb
jle
inc
je
je
lahf
mov
push
push
loopne
mov
mov
xchg
sar
jmp
mov
popa
dec
push
cli
jecxz
out
sub
in
pop
lahf
inc
mov
push
lods
loope
push
and
mov
xor
mov
rcrb
cmp
mov
cmpsl
jb
mov
movsb
and
add
pop
into
xchg
das
repnz
repnz
ror
mov
adc
and
mov
in
das
data16
stos
mov
pusha
inc
scas
xchg
out
pop
fidivrl
jno
pop
repz
outsb
mov
insb
mov
in
cs
add
data16
out
es
adc
inc
out
mov
xchg
inc
inc
jmp
and
push
sar
cmp
pop
in
scas
jno
inc
mov
jo
cwtl
push
sti
shl
sbb
nop
insb
cmp
xchg
iret
rdseed
pop
cmpsl
popa
push
out
cmp
mov
cmpsl
and
push
sti
add
insl
xor
clc
xor
push
in
push
jnp
mov
out
loope
js
jae
pop
mov
cmpsb
push
pop
push
mov
pushf
or
xorb
sarb
adc
xor
scas
lds
jnp
jge
imul
popa
pop
push
cltd
adc
or
outsb
out
jmp
lds
jp
pop
daa
mov
outsl
js
das
lret
push
movsb
cmp
cmpsl
lret
xchg
adc
lcall
jmp
or
movsl
sbb
notb
add
movsl
cmp
inc
mov
ss
mov
inc
xchg
mov
ret
mov
outsl
mov
imul
in
xor
aam
push
pop
pusha
cmp
lret
test
xchg
roll
xchg
adc
sbb
mov
jl
ret
ror
pushl
leave
imul
gs
pop
or
fs
outsl
cmp
mov
cmp
push
das
aad
bound
fsubr
stos
clc
lea
push
xchg
jge
lret
mov
daa
ja
arpl
enter
push
testl
and
popa
imul
dec
sub
jg
mov
into
mov
fs
push
fcomps
mov
mov
pop
inc
cmpsl
cwtl
sahf
push
jbe
adc
out
inc
lahf
sarl
mov
xor
out
pop
dec
mov
pop
ss
mov
iret
jecxz
push
loop
pop
cmp
mov
jg
sbb
movsl
lods
inc
mov
jecxz
inc
mov
fisubl
std
push
mov
gs
xchg
ja
sub
mov
cmc
and
and
stos
js
sbb
push
pop
loopne
int3
sbb
fsubs
adc
loope
setns
lea
pop
inc
imul
test
sbb
test
stos
or
pop
cli
movsl
stc
ljmp
movsl
xchg
hlt
adc
lds
jl
rcll
push
or
subb
sbb
mov
in
xchg
or
dec
hlt
cmp
pop
mov
dec
rorb
test
lods
inc
push
add
jne
test
mov
stc
lahf
pop
loop
shrl
cld
mov
xor
outsl
rolb
pop
cmc
push
xchg
add
jbe
jecxz
lods
jns
outsb
call
call
popf
popf
add
fdiv
cld
push
xor
and
call
inc
addr16
adc
and
or
cld
and
dec
lods
dec
ss
pop
rclb
xchg
fstpt
out
je
lret
or
hlt
or
xchg
mov
out
ljmp
int3
cmp
mov
fnsave
rol
sub
xlat
cs
or
in
xor
call
jecxz
mov
push
inc
jae
mov
aaa
mov
outsl
insb
xlat
lods
or
sbb
inc
cmpl
dec
xor
pop
push
imul
and
icebp
out
fs
xchg
jg
xchg
push
and
add
jne
test
xchg
push
ljmp
pop
out
ss
imul
inc
jmp
js
pop
dec
push
fisubrs
aam
lcall
add
xor
shll
stos
sub
jo
adc
xchg
pop
decl
test
jl
sub
cvtps2pi
leave
push
add
mov
and
out
rcrl
outsb
xor
nop
jno
aaa
lds
lret
xchg
add
pop
lock
repz
add
jmp
inc
jae
sbb
and
cltd
mov
call
sbb
push
loopne
pop
mov
int3
test
cmpsl
xchg
stos
or
mov
shll
add
mov
jle
inc
push
out
jo
in
push
pop
fstp
insl
xor
ret
imul
dec
fstl
je
push
out
int
xor
jle
sub
jp
or
arpl
mov
sub
fisttps
dec
push
push
nop
fld
in
sub
and
insl
and
das
push
fdivr
rcl
push
pusha
cmp
pop
scas
pop
mov
inc
icebp
stos
pushf
mov
sti
adc
add
mov
sbb
aam
inc
adc
adc
jnp
push
inc
xchg
push
xor
loop
cs
dec
push
sub
or
jb
mov
xlat
out
loop
enter
sbb
shl
sub
pop
dec
sahf
xor
lock
test
inc
std
lret
push
sub
xchg
orb
leave
mov
test
xchg
je
xchg
fdiv
cmp
nop
fst
dec
sbb
xorl
int3
or
xchg
and
adc
jp
andl
push
bound
cmc
in
pop
stos
hlt
push
arpl
jns
xchg
sub
dec
mov
mov
jne
and
adc
xlat
pop
shlb
mov
mov
in
adc
and
push
ret
mov
jae
inc
jae
mov
lret
inc
inc
data16
stc
test
fimuls
push
xlat
mov
lock
mov
call
rcll
fistps
popa
mov
rorb
pop
xor
sbb
fcomp
repz
fldcw
out
imul
jae
adc
push
xor
mov
add
mov
test
mov
out
jge
pop
pushf
jle
jne
sbb
out
xor
add
or
pop
sub
xor
xor
hlt
pop
jmp
jecxz
fs
mov
push
int
stc
vpsrld
mov
lock
aam
mov
data16
cmp
sbb
mov
scas
test
daa
lahf
add
cltd
pop
pop
scas
enter
inc
rol
mov
and
popa
mov
mov
and
xchg
scas
add
bound
aad
add
mov
loopne
js
or
xlat
sbb
in
xor
jmp
sub
roll
icebp
pushf
xlat
out
fisttps
mov
fidivrs
mov
push
test
outsl
sbb
mov
push
jo
and
fldl
push
xchg
mov
jp
push
push
push
pop
mov
dec
pop
sbbb
inc
aaa
jbe
xor
inc
mov
push
into
pop
mov
test
push
mov
imul
ds
dec
inc
jnp
pusha
inc
or
popf
popf
ja
ret
mov
outsl
hlt
lods
or
cs
xchg
jnp
sar
aad
or
cmp
lret
outsl
xor
xchg
shll
xchg
jno
inc
pop
dec
icebp
pop
cvtpi2ps
data16
dec
jb
fiadds
daa
add
or
cmp
push
scas
je
jl
repnz
xchg
jo
outsb
cmp
mov
aam
lock
jbe
ret
mov
aam
mov
rorb
lahf
icebp
cmp
fscale
insl
std
ret
divb
addl
mov
por
enter
sahf
mov
movsb
push
jns
mov
lock
test
ljmp
test
push
jp
ds
pop
dec
pop
mov
push
shll
xorw
aaa
sbb
ljmp
sbb
je
pop
mov
shr
out
popw
hlt
mov
add
xor
int3
pop
or
or
pusha
aad
xor
mov
jmp
or
mov
cltd
in
pop
adc
push
xor
scas
sbb
sti
or
xchg
adc
popf
in
inc
repz
inc
lret
pop
les
popf
mov
hlt
xor
xchg
dec
fstl
or
cmpsl
mov
into
jl
sub
negl
cmp
mov
adc
gs
loop
aaa
adc
ror
inc
gs
xchg
jg
xchg
in
or
adc
shl
adc
data16
stc
int
or
adc
testb
clc
adc
enter
mov
test
out
pop
push
xchg
fwait
adc
movsb
lods
push
notb
clc
lcall
push
ljmp
inc
fdivp
mov
loope
cmp
es
enter
in
cmpsl
mov
sub
xchg
jmp
inc
mov
out
sub
pop
fbstp
stos
hlt
jp
mov
sarl
mov
clc
cli
xchg
ret
sub
test
and
inc
sbb
shlb
add
fldl
mov
dec
jnp
out
mov
pop
mov
lret
loop
jnp
jb
add
pop
pop
aam
aad
jle
out
pop
out
loope
mov
jb
mov
daa
sub
psubsb
test
pusha
sbb
or
jo
jg
cmp
aas
mov
nop
mov
pop
pop
mov
imul
das
imul
outsb
popf
mov
add
mov
pop
daa
push
mov
dec
stc
jl
mulb
hlt
or
outsl
out
jns
adc
aam
popf
aam
popa
jae
ret
sbb
mov
jne
imul
and
push
push
sbb
aad
push
or
dec
stc
mov
sub
mov
push
test
rolb
sub
mov
loop
jae
outsb
imul
ljmp
push
inc
call
and
orl
mov
mov
adc
xchg
mov
imul
out
jecxz
loope
mov
push
xor
enter
or
imul
mov
mov
pop
pop
sub
repz
ret
pop
or
or
xchg
or
in
orb
out
fsts
push
popf
lods
hlt
and
and
js
fs
xchg
lret
jae
mov
jge
lret
push
push
inc
cmp
jle
addl
pushl
pop
lret
push
push
popf
lcall
rcl
jne
arpl
push
ss
scas
in
dec
jl
xchg
add
inc
mov
mov
adc
or
es
int3
and
gs
out
mov
ljmp
xchg
or
mov
ja
jmp
loop
xchg
push
or
xlat
xor
gs
xchg
in
repnz
aas
sbb
jnp
xor
cmpsl
pop
add
shrb
adc
mov
enter
jl
cmpsb
xchg
ja
xorps
sahf
lahf
adc
imul
sarb
lods
movl
loope
and
push
mov
ja
adc
enter
pop
enter
xor
out
pop
clc
ds
sub
dec
and
mov
sbb
jne
pushw
imull
cmp
ret
mov
out
int3
imulb
adc
add
and
scas
gs
mov
pop
pop
mov
or
jmp
rcl
adc
push
lds
jmp
movsb
push
dec
add
adc
sub
mov
and
lret
mov
cmpl
clc
sub
hlt
push
sti
dec
imul
push
sahf
icebp
les
inc
inc
xor
inc
repz
aaa
ret
jne
jg
into
xchg
sbb
addr16
in
adc
pop
sbb
and
ja
jecxz
lar
fwait
pop
or
add
popf
scas
loop
mov
fcoms
sub
ret
cmp
psrlq
jno
daa
aam
imul
inc
or
adc
push
aad
xchg
int3
jge
adcb
mov
pop
add
scas
ljmp
cmp
jmp
xor
or
mov
lods
cld
mov
mov
mov
fwait
loopne
cmpsl
add
mov
gs
sub
stc
mov
fstpt
mov
pop
sub
push
or
add
inc
add
cli
mov
jl
xor
aaa
adc
push
imul
fiaddl
add
imul
and
jno
and
std
cmpsb
inc
dec
sub
jge
sbb
jo
sbb
scas
xor
push
sbb
dec
imul
outsb
sub
imul
aad
sbb
sbb
cmp
lahf
rcll
ret
mov
mov
sbbl
loope
aaa
movsl
dec
shll
jle
call
mov
inc
sub
xchg
les
pop
sbb
pop
jge
dec
movsb
pop
sarl
push
xchg
dec
fdivl
pushf
loope
and
out
and
imul
cli
rcrl
xor
mov
scas
mov
testb
enter
jbe
xchg
lahf
fiaddl
adc
pushf
mov
in
cwtl
mov
testb
jge
pop
std
inc
xor
xchg
push
out
add
xchg
jp
adc
mov
mov
xor
mov
mov
out
movsb
inc
mov
je
pop
sbb
mov
jae
rcrl
xchg
in
in
jns
sbb
scas
xchg
lret
icebp
add
mov
pop
add
ljmp
adc
push
add
sbb
mov
in
xor
jnp
imul
inc
scas
test
or
jo
js
shrl
mov
rolb
cmp
inc
dec
push
js
pop
inc
xchg
aaa
push
mov
xchg
jbe
pop
scas
xchg
clc
std
cmp
mov
mov
fdiv
pushf
loop
repz
ret
movl
mov
getsec
outsl
sub
inc
sub
inc
mov
scas
and
pop
test
cld
inc
mov
adc
push
push
ljmp
shlb
stos
or
dec
push
pop
into
int
jg
jno
xchg
jmp
adc
mov
pop
push
testl
das
aaa
std
push
leave
repz
inc
jecxz
iret
mov
fstpt
imul
sub
lds
idivl
cwtl
push
mov
daa
pop
mov
xchg
add
xchg
out
sub
jo
adc
jg
stos
push
xchg
xchg
and
adc
dec
lods
push
mov
in
cli
inc
mov
or
lret
mov
pop
scas
lea
add
push
in
push
sbb
nop
leave
pushf
or
xor
xchg
dec
cs
in
inc
jp
stc
clc
cs
leave
das
sub
stos
pushf
add
fisubrl
aaa
xchg
ja
sub
dec
pushf
sub
sub
cmp
and
jns
mov
jmp
mov
inc
jge
xchg
xor
dec
pop
or
adc
dec
jecxz
lea
xchg
cmp
int3
inc
mov
cmpl
in
xor
mov
jbe
push
adc
jb
add
inc
jmp
mov
pushf
mov
leave
push
pop
cmp
sub
pushw
loop
jmp
dec
outsl
in
xor
mov
fs
cmp
idivb
lods
pop
stc
pop
mov
sub
jle
into
sbb
add
cmp
lods
xchg
jb
and
out
mov
add
rcll
add
xchg
cmp
fs
outsl
pop
cld
fs
loop
ja
sub
mov
push
mov
daa
add
addr16
ss
fwait
mov
xchg
mov
mov
jmp
stc
jp
dec
cmp
push
jp
pop
and
and
loope
addl
inc
addr16
notb
iret
xchg
andl
jo
and
or
pop
nop
je
stos
cli
daa
jl
repz
insb
sar
and
sti
lock
adc
xor
leave
cli
jo
push
jg
popa
imul
rorb
and
push
cmpl
dec
enter
jae
movsl
sar
inc
rolb
mov
ss
flds
dec
fwait
xlat
lret
mov
sub
lret
or
punpckldq
pop
pop
mov
cld
mov
nop
dec
mov
dec
lea
rorl
xchg
cltd
pop
sub
popa
add
jmp
push
jo
ds
pop
mov
adc
cmp
stos
pop
push
mov
movsl
sub
xor
pop
jno
out
call
jmp
fwait
jae
arpl
mov
stc
push
jp
lods
pop
push
mov
xchg
sub
int3
mov
decl
out
cmp
mov
push
loopne
lock
iret
shl
movsb
sbb
arpl
std
push
or
mov
xor
sarl
or
bound
jnp
dec
imul
out
pusha
iret
stos
dec
out
xchg
jle
insb
popl
jge
lcall
cmp
mov
push
sub
jle
sbb
add
out
and
push
test
adc
lods
imul
cmp
push
and
xchg
adc
movsl
daa
rolb
popf
jbe
mov
lret
mov
inc
push
cmp
jne
and
mov
sahf
inc
shl
scas
ret
dec
sbb
fstpl
push
cmp
jge
mov
mov
ror
into
mov
mov
std
loopne
inc
mov
in
mov
pop
xlat
int
fdivrs
sub
add
popf
cmp
jnp
dec
mov
mov
incl
ret
pop
or
ret
sub
mov
cmc
aas
inc
push
rcl
jecxz
pop
and
lahf
scas
lods
lods
ficoms
push
sbb
or
jge
shll
add
jae
lret
or
ret
ljmp
test
sub
loop
pop
push
test
pop
test
icebp
and
outsb
cmp
ljmp
in
aas
xor
dec
jmp
jb
mov
jge
sbb
dec
test
aam
js
push
fs
in
repz
adc
jl
lods
cwtl
ss
push
lock
pop
adc
es
jg
jge
and
push
out
jle
enter
push
pop
es
push
into
add
ret
jno
pop
aad
add
mov
fcom
xchg
push
enter
ret
and
cmp
xor
in
je
jns
or
lea
pop
cmp
in
roll
cmp
and
movsb
inc
sub
stos
nop
or
popf
mov
outsl
cwtl
fistpll
popa
gs
clc
mov
lds
loop
or
dec
cs
xchg
sbb
xor
inc
inc
and
jp
sub
inc
push
inc
sub
mov
xchg
aad
push
lods
cmpsl
mov
push
xchg
and
jle
cmp
loope
arpl
pushf
cmpsl
mov
popa
inc
clc
dec
jmp
mov
mov
les
push
push
inc
xor
add
mov
call
lock
add
out
cmp
insb
sbbl
adc
dec
out
and
sbb
fidivrl
inc
cmp
or
push
xor
dec
in
mov
sbb
mov
arpl
mov
enter
rol
mov
and
jmp
jle
scas
loop
sbb
mov
js
and
pop
xchg
mov
mov
sbb
jns
or
lea
cmp
push
bound
mov
sbb
pop
stos
xor
shl
add
stos
jno
push
cmp
dec
js
pop
fistl
rdtsc
mov
js
lods
lcall
icebp
sbb
ficompl
xor
cmp
cmp
icebp
leave
lahf
xor
xchg
pop
sbb
jnp
xor
in
adc
inc
and
fsub
aas
scas
inc
pop
sub
loope
jg
or
or
push
xor
push
cmpsl
bound
jne
sub
pop
mov
sar
push
cmp
jl
jne
push
jns
inc
mov
movsb
adc
orb
cmp
dec
repz
addr16
dec
adc
bound
mov
jae
scas
ljmp
mov
xor
gs
dec
add
scas
add
fldl
add
pop
push
add
adc
and
hlt
stc
cltd
sbb
nop
out
push
adcl
pop
pop
push
out
sub
jmp
mov
pop
mov
aam
out
dec
xchg
stos
jns
int
lahf
adc
jo
jle
cwtl
cltd
iret
sbb
or
pusha
loope
mov
cmp
xor
jecxz
pusha
outsb
push
adcb
adc
push
mov
out
pushf
push
add
addl
bound
lret
leave
inc
outsb
flds
xchg
imul
int3
lret
push
call
and
xchg
push
fisttpll
ror
pop
pop
nop
xchg
xor
out
inc
aam
mov
xchg
cmpsl
popf
pop
adc
fucomip
fimull
loope
jp
inc
mov
cmp
out
cs
jl
pop
repnz
mov
lret
adc
or
stc
fcmovne
sbb
js
pop
lret
andb
pop
ljmp
iret
cmp
imul
faddl
cwtl
push
test
xor
pop
xchg
sub
pop
sub
daa
test
lret
popf
jmp
mov
mov
movsb
or
mov
sub
cs
dec
or
dec
aad
adc
inc
or
fbstp
sahf
aam
jae
fildll
fisttps
push
inc
mov
sbb
cmpsl
jle
orl
outsb
jns
pop
ljmp
aas
movsb
push
pop
fldt
outsb
or
sbb
jno
sub
sub
in
dec
mov
jne
jge
push
sahf
mov
adc
out
in
mov
jecxz
fisubs
sub
and
fisubrl
and
sub
jb
jb
xlat
pop
idivl
sarl
loope
insb
daa
cmp
mov
stc
int3
pop
aas
testl
lret
and
xor
and
adc
cmc
mov
and
icebp
movsb
aaa
adc
pop
mov
cmpsb
xchg
mov
daa
out
fistl
into
aaa
sbb
mov
out
adc
xor
shl
pop
fsubl
outsl
rcr
mov
mov
push
add
xchg
push
push
std
pop
imul
pop
xchg
push
jg
dec
adc
sub
and
and
mov
pop
cmp
in
cs
adc
push
lret
jns
xor
inc
imul
into
xor
jg
push
or
dec
fs
xchg
and
cmpsl
ja
xchg
aas
mov
gs
add
jl
aaa
loope
sbb
jae
pushf
mov
inc
cmpb
loop
fdivrp
arpl
cli
sub
xchg
cmp
xchg
out
xchg
cmpsb
xchg
cwtl
lret
daa
sarl
icebp
push
mov
fs
pushf
or
movsl
lea
sub
daa
popf
jns
aaa
sti
pop
add
call
cmp
bound
aaa
push
mov
movsb
call
mov
cmp
clc
inc
imul
pop
add
iret
pop
xchg
sub
inc
or
push
adc
insl
daa
push
dec
mov
negb
push
shl
jge
repnz
bound
sbb
and
and
dec
pop
sbb
push
inc
mov
je
mov
aam
stos
daa
lods
cwtl
push
push
fistpll
inc
repz
pop
mov
push
leave
ret
xchg
stos
fistpl
test
cmp
insl
leave
sar
pop
ss
pop
lds
stc
mov
pop
fistl
dec
outsb
xor
pop
dec
inc
loop
enter
xchg
aad
insl
adc
lods
cs
mov
lahf
cmp
adc
in
jo
xchg
sub
insb
or
pop
pushf
jns
mov
pushfw
mov
mov
mov
xchg
push
rclb
or
add
iret
pop
xlat
cmc
pop
lock
popf
jge
mov
jp
push
in
cmp
hlt
lods
add
push
adc
mov
xlat
inc
pop
push
mov
aam
imul
gs
xchg
adc
and
cmp
js
xlat
out
outsb
ret
daa
inc
mov
sbb
aas
jbe
adc
mov
pop
pusha
cwtl
les
dec
xchg
insl
pusha
and
negl
popf
stos
and
mov
mov
lcall
xchg
inc
mov
loope
dec
and
jno
and
mov
push
push
lret
sub
jo
xor
sbb
shll
aas
xlat
pop
std
cmpb
push
das
xor
xor
xchg
cmpsl
dec
inc
insb
mov
mov
push
push
push
orl
sub
cmp
jmp
ret
cwtl
imul
lret
xor
sub
add
scas
sbb
enter
inc
mull
aas
jp
movsl
jmp
leave
push
fdivrs
add
and
hlt
pop
rclb
fstps
mov
lcall
dec
nop
test
in
roll
insl
sbb
orb
les
data16
mov
testl
xchg
jno
flds
cmp
sub
mov
shrd
ja
mov
icebp
dec
or
pop
ret
dec
jp
lret
sub
push
aaa
popa
lods
pop
adc
icebp
xchg
xor
dec
pop
add
cmp
lods
fwait
sahf
pop
and
jg
and
loopne
dec
loopne
movsb
loope
mov
gs
iret
hlt
cmp
jg
insl
sar
cwtl
mov
sbb
leave
cmp
jmp
mov
imul
out
jb
and
dec
or
add
jbe
pusha
and
jns
push
test
mov
out
mov
insl
setne
and
cltd
cmp
call
dec
xor
add
jb
leave
push
addr16
int
cmpl
mov
xor
dec
ret
ffree
xor
push
xor
dec
stos
mov
test
lods
stos
sbb
sbb
add
in
int
test
into
leave
aaa
mov
movsb
cmp
cmpsb
lods
and
xchg
jnp
mov
fnsave
mov
mov
das
fucom
xor
das
jg
ret
mov
push
xlat
out
add
dec
scas
ret
into
insl
cmpsl
rclb
lahf
sub
loop
scas
cmc
and
xchg
pop
cmp
rcrl
movsb
jmp
sbb
mov
mov
xchg
fstp
xor
test
xor
xor
mov
jle
and
dec
mov
xor
inc
repz
dec
jae
mov
outsl
in
xchg
push
pop
mov
add
sti
insl
lea
push
mov
jg
movsb
lcall
mov
fdivs
or
clc
shrb
dec
and
xchg
xor
imul
mov
xor
push
mov
dec
out
bound
das
fsubrs
push
xor
sub
mov
test
fs
mov
jns
add
or
fldenv
out
mov
stos
jno
pop
pop
pop
test
mulb
xchg
xchg
pop
das
ret
stc
push
into
pop
add
sbb
inc
cs
in
lods
xchg
or
lea
xchg
xchg
or
jbe
out
mov
jnp
cmc
pop
lods
les
lock
inc
jnp
sbb
orb
dec
cmp
cmp
or
mov
xor
cs
jno
loop
jae
call
iret
xor
repnz
call
or
rolb
dec
jg
push
sahf
fsubrp
push
inc
sbb
sub
inc
adc
mov
repnz
or
cmpsb
popf
scas
lcall
movsl
sbb
fmul
mov
cli
mov
shr
mov
shrb
mov
pop
push
add
jns
cmp
push
sub
sbb
aas
sub
sbb
adc
push
cmp
dec
mov
pop
rcr
jae
cld
and
stos
rcr
push
rorl
mov
pop
jae
jg
loope
loopne
ret
cltd
loop
pop
ds
aaa
inc
mov
adc
cmpsb
xchg
mov
add
lods
aas
iret
sti
bound
push
pushf
pop
pop
es
push
fwait
into
xlat
cmp
iret
cld
xchg
call
sub
ret
or
sbb
jns
add
repnz
lock
int
jecxz
ja
cli
leave
cs
mov
xor
xchg
test
sub
ljmp
imulb
stc
fadds
test
mov
jle
cmp
es
shll
cmc
cs
out
cmpsl
insb
dec
lods
add
fsubs
mov
pop
jne
push
dec
jo
or
loopne
es
jno
nop
je,pn
or
ja
adc
xchg
dec
pusha
cmpsl
fimull
mov
mov
imul
les
scas
ret
shlb
mov
int3
mov
test
lock
cmp
scas
aas
jae
pop
pop
mov
mull
sbb
add
les
xchg
mov
addr16
xchg
xor
mov
ja
bound
inc
repz
xchg
or
mov
popa
adc
sti
jl
jae
pop
jbe
add
or
shl
mov
les
jnp
leave
xor
dec
dec
shrb
enter
lods
pop
fs
inc
cmp
adc
int3
jae
add
ja
sbb
cltd
mov
repnz
inc
gs
cmc
inc
in
stos
mov
cmc
mov
lock
mov
call
xor
adc
mov
or
bound
push
ret
cltd
cmp
xor
icebp
scas
or
push
mov
pop
pop
test
pusha
aam
shrl
lods
popa
out
inc
cld
inc
and
mov
push
xorb
cmc
fcomps
pop
pusha
sub
adc
mov
jmp
rorl
sub
in
adc
adc
push
loope
cwtl
cs
gs
pop
mov
or
scas
ds
stos
insb
lcall
insl
mov
inc
je
aas
pop
ror
add
mov
loop
lock
test
jecxz
xor
jge
pop
in
dec
enter
sbb
cld
stos
fdivp
adc
insl
cmp
and
ret
lret
cli
cld
loop
daa
mov
jge
adc
cltd
add
or
fnstsw
aas
dec
dec
fs
cmp
popf
mov
in
inc
add
jnp
xchg
sub
mov
cmp
cmp
push
fisttps
dec
fwait
adc
mov
outsl
arpl
jnp
push
ja
xor
pop
mov
icebp
les
xor
jne
imul
out
add
cld
mov
in
push
insb
pop
aas
clc
mov
aad
pop
rcrl
lret
loope
mov
lods
in
mov
add
dec
jmp
mov
loop
ret
nop
aas
adc
sub
or
push
pushl
orl
push
daa
xchg
xor
xchg
ds
mov
inc
cmp
xor
lcall
fdivrp
shrl
and
lods
lcall
xchg
jmp
mov
outsb
jecxz
add
lds
in
or
and
jae
rcr
mov
fwait
pushw
jge
push
cmp
arpl
mov
cmp
mov
pop
negb
push
pop
aaa
mov
mov
pop
inc
xor
inc
jnp
pop
mov
jg
shll
jb
sub
or
cwtl
push
xor
inc
mov
pop
add
xor
ja
fwait
inc
lret
repz
in
cmc
mul
mov
dec
push
dec
mov
test
das
mov
and
fstpl
es
push
sub
lret
xchg
dec
js
lea
inc
leave
sbb
or
xor
lock
xor
mov
data16
mov
and
je
loope
sbb
es
bound
inc
int
and
sub
sub
pop
cmp
xchg
test
jge
and
dec
mov
dec
jo
jge
cmp
pop
scas
and
jno
loop
mov
and
clc
sbbl
sub
sub
ljmp
lock
rcrl
inc
inc
sub
push
push
loop
mov
pop
jg
lds
xchg
and
adc
jl
pop
cltd
mov
das
push
dec
jmp
cli
cmp
movsb
test
fwait
adc
shrb
mov
inc
pop
sbb
movl
sbbb
push
add
loop
add
sub
mov
test
popf
xor
jp
jp
test
popa
mov
jne
jge
scas
mov
imul
test
sub
pop
xor
out
sub
mov
test
rolb
mov
add
xor
push
das
inc
fisttpl
loop
dec
mov
push
pop
loopne
adc
jno
add
test
sarl
aaa
cs
ja
es
stc
mov
sub
jge
rcrb
cwtl
xor
paddb
shll
sub
adc
in
push
pop
jae
icebp
ja
fstpl
aaa
outsb
sub
mov
and
clc
or
add
enter
insl
imulb
mov
cmp
push
mov
sbb
push
int
add
sti
pushf
cmp
mov
cmp
popf
sub
jecxz
aam
in
mov
ds
adc
xor
xchg
push
movsl
adc
ret
or
xchg
inc
and
pusha
insl
adc
ss
mov
roll
repz
mov
fistpll
cwtl
in
loopne
ret
sbb
xchg
movsb
mov
inc
fwait
jecxz
sahf
bound
shrl
sbb
sahf
and
or
ret
jg
xchg
ret
mov
mov
sbb
mov
xchg
inc
xor
jle
inc
enter
fxtract
fwait
adc
mov
lods
or
cmc
flds
inc
mov
in
data16
inc
or
or
jmp
pushf
aas
cmp
cmp
nop
ret
shlb
or
pop
ret
jno
mov
pop
orb
into
clc
stc
scas
addb
scas
sbb
mov
outsl
jmp
shl
lods
aam
inc
lds
cli
outsb
and
xor
cmp
lret
add
pop
mov
popa
sbb
dec
shrl
pop
aam
icebp
sbb
push
pop
mov
scas
mov
stos
cmpsl
in
subl
mov
nop
out
aad
aad
cmpsl
push
lahf
sub
add
arpl
jnp
ss
add
jmp
cmp
fldt
pusha
popa
mov
sbb
or
mov
xlat
inc
jge
imulb
ja
lds
das
insb
jmp
pop
aaa
mov
lahf
fdivl
xor
shlb
sub
add
mov
out
or
sbb
or
ret
lret
pop
mov
std
jbe
jg
int
xor
push
jg
pop
xchg
mov
fsubs
pop
loope
xchg
sub
test
aam
mov
xlat
inc
jl
cld
cld
icebp
pop
mov
lcall
lods
shll
popa
jp
in
jae
inc
stos
ret
leave
xchg
test
rcl
pop
mov
push
aaa
insb
out
mov
incb
stos
add
pusha
xor
mov
xor
int3
fsubs
mov
shlb
push
popf
mov
adc
lods
mov
int3
xchg
cmp
das
outsb
or
sub
repnz
clc
mov
add
or
mov
aaa
and
push
pop
xchg
cmc
mov
pop
sahf
and
push
in
loope
fs
mov
inc
mov
add
jmp
aas
jnp
xor
lret
testl
mov
mov
xchg
mov
mov
int
repnz
adc
or
inc
stc
lcall
loop
aaa
ud0
jae
cwtl
js
sbb
sbb
testb
sub
lret
sub
mov
xchg
mov
into
sbb
cmp
pop
jg
mov
mov
ficompl
mov
mov
pop
sahf
dec
mov
cli
lcall
add
mov
cli
iret
cmpsb
mov
idivl
mov
push
mov
sahf
sbb
cmp
cmpsl
enter
test
push
push
das
loopne
jge
in
out
xchg
add
pusha
das
bound
bnd
dec
fs
pop
int
pop
sub
push
ficompl
or
cmp
cmp
mov
jno
insb
cmp
adc
push
aas
fistps
stos
or
push
sub
std
aaa
ja
sub
xchg
cmc
sbb
les
test
leave
inc
jae
inc
xor
sarb
xor
sub
jns
lcall
jge
cmpsb
leave
popf
scas
sti
jnp
xchg
and
mov
and
test
movsb
xchg
lcall
sbb
mov
popf
xchg
mov
test
sbb
mov
push
loop
jb
mov
stos
sub
fisubrs
fs
test
insb
ja
mov
lods
fists
or
push
mov
insl
in
mov
sahf
arpl
jbe
xor
xor
ret
cwtl
mov
inc
inc
mov
mov
mov
scas
pop
enter
cmp
jbe
xor
fiadds
fwait
mov
pop
je
movsb
jb
mov
sbb
fisubrs
test
inc
mov
test
imul
lcall
pop
pop
js
xor
push
pop
pop
mov
test
aas
clc
pop
xchg
shlb
mov
popf
repnz
and
icebp
push
xchg
sbb
fidivl
cmpsb
mov
ja
and
add
imul
and
push
pop
mov
add
sub
insl
mov
mov
mov
pop
stos
xor
push
test
into
mov
inc
dec
pop
clc
dec
sub
pusha
add
lret
jo
dec
dec
scas
sbb
add
xor
push
pop
xlat
push
pushaw
dec
jmp
adc
push
mov
mov
or
shll
pop
lret
push
pop
cmp
imul
and
inc
daa
inc
add
lahf
pusha
cltd
rcr
cmpsb
xchg
sarl
mov
rclb
mov
hlt
push
jno
adc
sub
call
adc
fnstsw
sub
xor
mov
inc
scas
shl
inc
gs
stos
cmp
sub
ja
add
add
pop
xlat
adcl
dec
jae
pop
mov
out
jp
cmp
push
mov
mov
es
xor
mov
fstpt
sub
mov
push
enter
pop
test
clc
mov
xor
jmp
sbb
dec
es
int3
pop
aaa
mov
add
ja
outsl
push
aas
sbb
dec
imul
mov
fwait
inc
and
movb
push
fdivs
out
add
pop
dec
popa
pop
sub
jg
rcll
jo
fs
add
jbe
clc
mov
push
xor
js
nop
pop
lock
jmp
bound
aad
out
movsl
cmc
es
addl
aaa
jecxz
xchg
lahf
mov
fldt
stc
jnp
and
loop
std
mov
add
movsl
and
xor
sbb
mov
cmp
and
div
fnstcw
sbb
sub
cld
fidivl
xchg
jnp
mov
es
inc
pop
idiv
or
int3
mov
jno
cmpsb
ljmp
mov
or
test
pop
jp
xor
sub
add
and
iret
adcl
or
mov
cld
lea
adc
jmp
cmp
int
lahf
adc
push
xchg
cmp
jbe
and
addb
call
jmp
mov
push
and
and
mov
lret
push
outsb
pop
jae
sti
sbb
jb
push
fwait
dec
mov
sti
mov
push
orl
dec
push
push
scas
shlb
xor
inc
rcrb
fildl
repnz
in
sbb
push
xchg
clc
push
repz
ret
sarl
pop
dec
inc
or
add
mov
scas
and
or
daa
repz
push
cmp
fildll
es
xchg
movsb
or
push
adc
xchg
shlb
subl
pop
pushf
fsub
xchg
mov
cmpsb
nop
sbb
fisttpl
and
pop
push
cmpsl
leave
aad
hlt
cmc
mov
in
and
or
lahf
dec
cmp
xchg
mov
out
testb
jo
mov
dec
mov
rorl
mov
xor
popa
cmp
pop
adc
sahf
roll
inc
push
test
adcb
mov
adcb
movsb
sub
fdivrs
xchg
xor
lods
imul
popa
ja
sub
xor
je
xchg
cmpsl
or
push
mov
ljmp
aas
inc
jg
xor
addr16
pop
lea
pop
sub
or
xor
xchg
cltd
add
mov
push
jmp
mov
cmp
push
mov
fsubrs
in
dec
pusha
icebp
imul
inc
push
insl
test
xor
adc
cs
cmp
mov
dec
pushf
inc
loop
inc
inc
push
dec
xchg
ja
add
sbb
sbbl
mov
xchg
mov
add
xchg
cmc
xchg
dec
adc
decb
dec
push
movsb
leave
cmp
jg
subl
sbb
insb
xchg
aad
roll
aas
mov
inc
push
rcr
lret
ret
out
cmc
das
je
xor
insl
jno
sub
or
inc
gs
movsb
arpl
inc
sub
cmp
sub
add
mov
out
xor
cmpsl
lret
imul
adc
inc
mov
mov
sub
xor
mov
sub
pop
pop
pop
insl
loop
xchg
pop
xchg
dec
lods
jge,pn
mov
push
pop
aam
sub
test
mov
sbb
cmp
push
cwtl
add
sbb
pop
loope
lcall
push
popa
aam
add
std
xlat
mov
jno
dec
sub
test
cmp
jl
or
sub
cmpsb
sarb
daa
stos
sub
xor
adc
sbb
jmp
std
inc
ss
fstpt
sbb
sbb
jns
int3
cmpl
dec
inc
and
pop
jb
cld
or
notl
sub
push
enter
mov
out
sub
data16
sbb
cltd
popa
fwait
rcl
add
pop
mov
push
shlb
xlat
fisubl
ficoms
lret
inc
add
inc
bound
in
sub
lods
push
sub
enter
loopne
mov
xor
push
iret
rolb
cmp
xchg
mov
adc
repz
pop
xlat
or
pushf
pop
out
mov
test
iret
faddl
daa
xchg
push
cmp
pusha
cmpb
repnz
jbe
jnp
fcompp
jg
enter
loopne
sub
sbb
mov
mov
data16
push
cli
or
push
jne
adc
and
stos
lcall
xchg
xchg
jecxz
ret
test
inc
xchg
xchg
mov
mov
pop
sbb
sub
rorb
pop
stc
mov
loop
loop
mov
xor
test
data16
mov
pop
jecxz
xor
pop
xor
mov
xor
repz
addb
repnz
loop
push
mov
jg
inc
pop
fistpl
push
sbb
xor
dec
mov
adc
sub
int
cmc
jo
sbbl
rorb
cli
test
repz
out
mov
insl
adc
loope
aam
mov
lret
mov
mov
adc
jno
or
push
into
bound
lahf
ds
jle
cmp
mov
push
call
popa
cmp
test
out
or
enter
stc
jnp
ja
das
ds
xor
fsubl
decl
rorb
mov
lahf
icebp
add
xchg
test
cmp
ret
add
ds
test
dec
movsb
or
mov
dec
push
cmp
popf
imul
add
mov
jmp
cwtl
xchg
fs
loopne
shlb
jae
add
pop
cmp
fwait
mov
xlat
sahf
dec
sbb
or
fmuls
mov
xor
test
push
and
out
xor
jecxz
jno
and
xchg
xchg
or
fcompl
pop
sub
cmc
je
add
and
sub
add
in
repnz
into
fcoms
gs
orl
iret
sbb
loope
xchg
std
insl
sti
scas
sbb
sbb
dec
dec
lahf
and
push
pop
lahf
sbb
jae
sbb
dec
sbb
dec
xchg
add
mov
adc
add
push
dec
mov
stos
mov
add
aam
popa
test
lahf
fdivrp
lahf
insl
add
aam
mov
or
es
pop
mov
out
hlt
push
adc
cmp
out
fcomps
or
fadds
ret
sti
cmp
mov
mov
mov
lods
sbb
out
sub
xchg
push
enter
movsl
inc
cmpsb
xchg
cmpsl
call
jb
xchg
les
das
adcb
jmp
adc
xchg
int
lret
xor
out
pusha
loop
fs
mov
jp
aaa
imul
mov
aam
cli
pop
sbb
inc
lcall
push
cmp
xor
sbb
test
out
arpl
mov
jmp
or
mov
movnti
mov
mov
dec
jg
hlt
sbb
xor
cmpb
push
cmc
cld
mov
lock
mov
dec
mov
pushf
inc
mov
mov
mov
mov
inc
jne
cmpsb
jecxz
aam
jmp
jae
add
mov
stc
outsb
pop
in
and
mov
and
jb
or
std
push
push
sub
movsb
daa
mov
push
stos
jg
enter
ret
ret
std
ja
jbe
mov
mov
add
pop
xchg
out
jp
pop
xor
scas
mov
fcompl
sub
cwtl
add
add
lcall
mov
or
repz
scas
xor
rorl
les
and
cmove
sbb
sub
int3
aad
icebp
mov
pushf
mov
mov
adc
lods
clc
xchg
pop
leave
push
push
mov
mov
ret
add
arpl
jecxz
sub
adc
cld
and
sbb
cli
xor
test
adc
push
pop
out
add
dec
adcb
sti
daa
or
loopne
shrb
loop
dec
mov
jno
jg
fstpl
out
lea
mov
push
pop
xor
inc
repnz
sbb
mov
fsubp
pop
fwait
cmp
sub
adc
and
cmp
addr16
dec
cmpb
mov
fs
je
pushf
pop
dec
sub
adcl
push
int3
pop
outsb
jno
dec
jno
sub
fwait
xchg
jo
fcoms
mov
add
mov
sub
jns
test
hlt
inc
dec
pop
daa
call
sub
push
rcrl
and
cmc
jne
sub
and
xchg
cmp
or
stc
shrd
js
mov
repnz
test
in
int
sub
movsb
add
adc
std
xor
movsb
or
popa
or
mov
xorl
dec
adc
and
call
cld
jnp
mov
xchg
mov
sub
xchg
push
enter
jbe
sbb
rorb
arpl
stos
in
fisubrl
movsl
sbb
xor
pop
sbb
scas
sbb
sbb
mov
jne
out
or
pop
jle
in
sbb
push
pop
imul
aaa
adc
test
out
sub
mov
fistl
orb
mov
add
mov
stc
shlb
adc
mov
sbb
clc
cltd
movsl
mov
add
sub
das
daa
pop
mov
scas
inc
or
movb
fdivp
imul
out
orb
mov
fcmovnu
dec
push
rol
and
inc
and
or
jbe
mov
insl
inc
test
dec
in
lock
je
imul
sbb
jno
and
faddl
cmpsl
jmp
testl
rolb
jl
icebp
call
fwait
popa
pop
push
mov
imul
jae
fstpl
sub
push
aas
mov
ficomps
ret
and
jmp
cmp
cmp
leave
orl
pushf
jbe
addb
mov
jae
std
dec
das
bound
pop
jge
inc
std
fildl
fbld
xchg
xchg
outsb
xchg
and
jne
jl
pop
mov
imul
int
sbb
ret
das
jno
outsl
das
sub
lret
pop
jb
insl
push
bound
out
sbb
loop
inc
stos
aas
fisubrl
pop
cmp
push
filds
fdivrs
mov
add
xor
ds
sbb
pop
push
loope
shlb
ficomps
push
jl
popf
mov
dec
vaddsd
cmc
loop
jg
jns
inc
cmc
pop
sbb
fdivl
jg
mov
shlb
stos
xchg
adc
lret
stos
cmpsb
cmp
lret
xchg
fcom
clc
push
repnz
jne
pushf
outsl
pop
push
sahf
pop
leave
je
mov
adc
xchg
push
or
inc
mov
dec
xlat
dec
repnz
mov
mov
pop
aas
mov
jle
pop
sar
test
loope
je
lret
push
push
movsl
das
inc
cwtl
shrl
int3
cmpsb
stos
sbb
cmp
lds
fs
push
ss
add
sarb
mov
mov
inc
push
cmp
jae
or
pop
push
dec
les
mov
ss
cmp
outsl
stos
xor
jmp
mov
negb
cld
push
pop
xchg
xor
popf
mov
test
pop
xor
pop
push
repz
xchg
or
add
fsubrl
sahf
sti
mov
outsl
iret
add
push
cld
mov
cmpsl
shll
sahf
int3
lret
mov
pop
movsb
jmp
and
enter
das
pop
inc
js
rcrl
inc
inc
sbb
inc
xchg
add
in
aaa
je
fisttps
mov
jns
nop
mov
loopne
mov
sbb
ljmp
imul
cld
popa
pop
adc
int3
sbb
scas
cmc
adc
loopne
pop
inc
mov
push
cmp
adc
sbb
in
imul
jo
adc
push
sbb
notb
push
sbb
mov
dec
dec
addl
mov
adc
ljmp
or
dec
or
es
sahf
or
inc
icebp
lods
or
mov
push
inc
and
sbb
movsb
sarb
sbb
cmp
jae
adc
dec
test
lea
add
dec
in
int3
aas
push
inc
or
stos
ror
dec
pop
xor
mov
ret
dec
pushf
cmpl
cmp
out
subl
push
adc
cmpsb
mul
sbb
int
and
imul
getsec
inc
xchg
int
sub
cmp
xchg
cli
ss
xor
lods
pop
pop
loopne
xor
add
push
iret
cmpsb
add
mov
push
and
in
loopne
mov
mov
mov
mov
lods
jg
xor
cli
xchg
in
mov
repz
adc
dec
jg
adc
jecxz
jmp
dec
call
add
mov
pop
pop
mov
push
pop
inc
fldcw
xchg
std
aam
gs
mov
dec
xor
mov
add
mov
mov
movsl
dec
rcrb
jae
mov
stos
adc
jle
jae
jno
insb
data16
std
scas
aam
fstpt
dec
cli
sbb
xchg
ds
pop
roll
js
rcl
roll
imul
jge
dec
cmp
mov
pushf
repnz
jae
lea
insb
mov
inc
ret
mov
loop
je
cmp
inc
push
int
xor
fisubrs
lods
add
pushf
cmp
mov
fdiv
jecxz
cmp
imul
cmc
push
stc
adc
out
stc
loope
fimull
arpl
sbb
xchg
enter
scas
mov
scas
inc
and
loopne
andl
fwait
xchg
push
sub
scas
jae
inc
scas
divl
add
lcall
xchg
xchg
sub
xchg
jmp
in
push
adc
in
jg
divb
or
pop
call
push
mov
dec
stos
xchg
mov
sbb
mov
sbb
ja
shlb
enter
jo
movb
icebp
cmpsl
dec
aad
nop
loopne
dec
sub
or
ljmp
fwait
sub
jne
mulb
xor
mov
jo
pop
pop
mov
or
data16
jge
lock
nop
dec
addb
int
push
bound
inc
hlt
repnz
jns
jmp
shll
xor
pushf
sub
in
rcrb
inc
fildll
cmp
push
jo
inc
add
rcrl
xchg
jmp
sbb
pop
and
cli
test
jbe
push
cmp
jg
push
shl
dec
adc
xchg
or
push
inc
sub
sub
xchg
pop
cmpl
xchg
jne
mov
and
inc
or
scas
xor
je
fs
aaa
pop
push
sub
push
pop
imul
testl
lret
lock
lock
test
dec
and
mov
xchg
pop
push
jbe
stos
add
ret
dec
add
cmp
or
shlb
push
ljmp
icebp
pop
jbe
lods
push
pop
js
sbb
aad
int
test
push
sbb
inc
into
inc
not
dec
mov
in
int
xchg
arpl
xlat
es
push
inc
es
stos
hlt
arpl
mov
mov
xchg
sbbl
data16
push
rcll
shll
push
xor
in
arpl
dec
incb
add
setp
mov
lahf
lret
dec
jns
jb
mov
jno
fs
nop
adc
or
and
mov
aaa
lds
sbb
mov
jle
xchg
dec
cmpsb
xor
inc
xor
lahf
and
rcl
xchg
and
dec
scas
add
dec
adc
dec
xor
mov
push
lods
push
add
stc
mov
test
lret
sub
test
or
js
xchg
hlt
pop
push
sbb
mov
call
and
gs
mov
imull
sahf
jo
lea
mov
les
ss
loopne
rcr
aaa
pop
adc
add
daa
and
mov
mov
mov
pushf
mov
loopne
lcall
adc
and
lds
test
repz
cltd
mov
xchg
jno
mov
movsb
fsubrs
push
jmp
addb
xrelease
test
fsts
loopne
ds
jecxz
push
pop
mov
lock
mov
sbb
int
mov
fcmovnu
or
lods
aas
dec
or
push
and
cmp
loop
daa
jp
iret
push
mov
xchg
lret
repz
popf
les
push
out
xchg
outsb
js
pop
adc
push
hlt
outsl
sub
pop
lods
lods
push
xchg
or
xor
pushf
fnsave
shrb
setne
adcl
outsb
mov
fs
stc
adc
inc
pop
fcomps
testb
stos
rolb
jl
xlat
rcrl
cmp
das
insb
hlt
int3
loope
cli
push
jae
mov
mov
inc
pop
mov
push
mov
fs
iret
push
addr16
icebp
mov
mov
push
cwtl
icebp
add
lahf
ret
test
sub
mull
pop
mov
xor
lret
or
mov
fisubrs
shl
mov
aas
mov
cwtl
jns
fstpt
in
pushf
dec
shll
lods
xchg
jl
pop
in
sub
sub
js
mov
mov
sub
movsl
mov
adc
cmc
rcll
pop
inc
pop
std
lds
pop
jge
cli
imul
sub
lods
std
sub
in
jp
dec
bound
testl
adc
stc
test
jns
movsl
push
int
inc
stos
mov
cmpsl
cld
int3
sbb
mov
lods
mov
or
add
pushf
sub
pop
jo
add
pop
pop
test
xchg
lods
sub
push
insl
mov
mov
push
xor
pop
iret
imull
out
sub
cltd
out
fbld
mov
mov
arpl
mov
mov
into
and
push
adc
xor
xchg
jge
test
jmp
je
cmp
adc
push
fdivl
mov
dec
push
test
lcall
out
sbb
cmp
mov
clc
or
push
mov
stos
xor
xor
and
cld
scas
cmp
pop
xor
dec
rclb
jne
sub
dec
dec
movsb
aad
repnz
enter
cmp
ret
dec
call
arpl
xor
xchg
fcmovnu
pop
mov
add
push
mov
pop
xchg
and
adc
mov
jno
mov
mov
enter
sbb
xchg
je
movsl
popa
rcr
dec
push
xchg
inc
jl
dec
clc
shll
imul
xchg
mov
sahf
mov
mov
push
mov
out
fdivrp
imulb
adc
mov
pop
sti
mov
push
jnp
mov
dec
dec
mov
pop
mov
sub
clc
scas
fiadds
pop
ja
cli
sbb
push
mov
mov
dec
dec
inc
xlat
rolb
imul
ret
les
sub
fcompl
mov
stos
dec
std
lahf
mov
mov
push
dec
push
ret
pop
mov
xor
mov
inc
inc
xor
push
mov
sbb
push
es
add
jne
dec
push
pushf
pushf
movsb
xorl
push
jnp
cltd
cwtl
mov
insl
xchg
cmp
dec
xchg
jno
leave
push
lahf
xor
adc
shlb
push
mov
es
mov
test
call
add
and
mov
dec
pop
imul
cld
add
sbb
jnp
pop
cmp
add
cmp
cmpsl
outsl
arpl
cmpsl
outsl
sbb
loope
loop
movsl
sub
inc
sub
push
js
gs
test
add
outsb
out
rorl
lret
addr16
lock
lea
int
adc
or
xorb
push
jg
jl
and
addr16
cmp
xlat
aad
mov
dec
push
lahf
loop
outsb
xchg
or
insb
mov
add
and
lcall
jno
xor
out
mov
out
jg
fsubl
shll
cmpsb
and
inc
dec
test
jns
les
sub
xor
in
sarl
xor
sub
ficompl
pop
lock
push
fwait
inc
add
inc
shll
insb
pop
scas
in
test
add
adc
push
add
jb
and
adc
lcall
pop
aas
jmp
xor
sbb
daa
int3
pop
je
cmp
push
xor
push
jns
movsl
xor
or
sub
push
and
and
into
adc
loop
cs
cmp
loop
dec
jne
inc
lock
loopne
outsl
outsl
push
lcall
add
cmp
fldenv
inc
inc
dec
push
repnz
and
inc
jae
mov
data16
xchg
test
mov
jmp
es
adc
fwait
les
popa
movsb
adc
in
out
ret
mov
add
jns
rcr
imul
jae
mov
add
add
rcrl
int
scas
mov
adc
cli
cmp
xor
cmpsl
dec
push
in
sarb
ss
xor
mov
mov
mov
cli
clc
inc
mov
push
mov
xor
xor
xlat
in
imul
dec
inc
mulb
xor
sub
push
inc
jecxz
cmp
fistl
shll
push
dec
cmp
inc
in
mov
mov
fsts
and
adc
push
sub
push
xor
arpl
xor
fisubl
mov
xor
mov
pop
and
bound
pop
mov
out
mov
or
jmp
pop
outsl
inc
sub
orl
push
mov
repz
mov
imul
adc
sub
fsubrs
and
and
stos
push
and
aaa
sub
les
add
jne
sub
es
cmpsb
mov
test
inc
in
out
inc
cmp
jb
rcrl
mov
sub
pop
push
in
pop
ret
mov
push
mov
jo
add
add
mov
xchg
inc
or
lcall
inc
mov
mov
out
jno
xchg
pop
pop
and
sub
mov
jae
or
mov
pop
cmp
into
xchg
icebp
lret
ret
sbb
cs
push
sbb
jbe
mov
ljmp
shrl
fadds
sahf
lds
loopw
popf
sarb
cmp
out
xchg
adc
push
out
adc
sub
cmpsl
xchg
fwait
cmpsl
cmp
inc
add
sub
mov
jl
or
inc
pop
add
test
lret
div
or
daa
in
in
sub
adc
iret
cmp
sub
or
jnp
adc
mov
push
xchg
gs
mov
xor
fstl
mov
add
and
push
adc
out
cwtl
addr16
mov
sub
mov
into
jb,pn
dec
push
ss
addr16
test
or
mov
cmpsl
and
cmc
adc
fcoms
cli
mov
mov
dec
and
inc
repnz
inc
mov
jl
out
cmc
fldt
fstpt
xlat
jmp
inc
dec
or
faddl
sbb
pop
adc
push
movsl
jg
pop
and
stos
out
jae
minps
pop
sub
xchg
lea
mov
test
push
jecxz
int3
mov
mov
pop
push
ljmp
adc
leave
out
adc
mov
je
jns
ficomps
push
mov
mov
xchg
add
rcrb
in
cmp
push
sti
pop
mov
adc
push
stos
inc
xor
test
les
inc
ss
mov
cmpsl
or
cmp
sbb
fdivl
aas
std
add
out
dec
and
scas
mov
add
sbb
rclb
sbbl
lahf
mov
mov
adc
dec
rcll
insb
mov
push
jmp
out
push
div
stos
cli
call
sub
inc
add
pop
pushf
jle
xor
xchg
jbe
and
add
adcb
std
popf
jne
lret
push
mov
and
add
sbb
push
scas
sub
dec
daa
insl
sub
mov
lods
out
in
xchg
mov
int3
mov
icebp
icebp
mov
xchg
lahf
mov
lret
fs
inc
xor
xor
cld
fwait
mov
andl
stos
icebp
lock
dec
aam
str
push
aas
xchg
inc
loop
inc
mov
aas
movsl
xchg
xor
and
sub
test
ss
unpcklps
mov
cmp
in
mov
mov
push
fdivrs
sub
and
inc
jecxz
shl
sub
add
inc
stos
lea
lods
sub
rclb
sarl
cmp
sbb
push
fcmovbe
neg
and
adc
push
popf
sub
push
leave
shll
push
lret
js
add
xchg
xor
sub
mov
push
cltd
addl
dec
jmp
enter
cwtl
add
loop
fnstcw
inc
mov
jbe
lret
lret
lods
movsl
push
es
sahf
data16
cmc
ja
pushf
push
das
push
movsb
in
neg
movsb
test
mov
cmpl
fs
stc
or
int
mov
pop
jecxz
or
jbe
lret
pop
push
sub
dec
cmp
lods
sbb
push
sbbb
sbb
and
mov
stos
mov
cmpsb
in
ret
icebp
xlat
sbb
and
sub
cmpl
or
adc
and
sub
stos
test
dec
repz
fwait
into
add
pop
cmc
mov
push
sbb
sub
orb
lcall
inc
and
push
sbb
xchg
dec
pop
fsubr
mov
mov
lds
xchg
add
inc
les
arpl
mov
test
mov
pop
js
sbb
clc
data16
or
push
fxch
xchg
jnp
inc
mov
xchg
add
sti
mov
test
mov
mov
mov
fnstsw
cmpsl
inc
ljmp
xor
xor
mov
cli
int
mov
or
mov
rolb
lcall
nop
insl
mov
insl
xor
aam
pop
mov
or
sbb
dec
or
pop
fnstenv
mov
movsl
lahf
insl
insb
lds
arpl
xor
lahf
fstl
das
cmp
jns
xor
jae
data16
sahf
and
jbe
adc
je
mov
insb
mov
movsb
jl
enter
xchg
jl
mov
scas
inc
sub
ss
fstpl
std
or
mov
mov
cmpsb
jge
cmp
sbbl
insb
jne
or
adc
loopne
scas
sbb
loopne
out
inc
movsb
addr16
xchg
push
or
lods
jecxz
inc
mov
mov
xor
ds
push
ficompl
dec
xchg
loop
pop
movsb
dec
push
dec
je
cmp
inc
nop
rclb
and
jne
add
xorb
xor
pop
pop
mov
lcall
xchg
ret
fs
add
jp
int3
ja
dec
jmp
cmp
sub
adc
movsl
cld
fcoms
dec
int3
cmp
adc
xchg
andb
xchg
or
int
mull
mov
inc
scas
inc
test
lods
repnz
mov
push
es
ja
mov
inc
xchg
inc
sbb
fldl
sub
in
or
test
stc
mov
clc
xchg
fdivrs
push
adc
loope
mov
inc
in
fs
les
fstpt
mov
sub
fdivl
and
nop
pop
imul
mov
or
xchg
sub
int
hlt
push
aaa
push
popa
int
mov
adc
xchg
scas
mov
aas
lret
shl
cwtl
and
gs
test
mov
inc
js
mov
pop
lea
jne
adc
xor
psubd
jne
popf
mov
lock
pop
or
adc
mov
adc
inc
icebp
in
mov
icebp
inc
add
imul
adc
adc
sahf
ljmp
sbb
mov
jmp
jno
mov
insl
mov
sub
xchg
mov
mov
jp
lret
test
loopne
in
lock
mov
idivl
sbbb
dec
addr16
notl
push
aam
xor
or
xchg
xchg
jp
out
ret
cs
wrmsr
or
loopne
call
std
dec
xchg
xor
cmp
jno
fwait
in
shll
mov
xor
and
add
jb
sahf
aad
push
mov
mov
jp
jg
shrl
push
fld1
insl
cmp
psubsb
aam
andl
push
insl
cmp
ds
sti
xchg
repnz
mov
xor
or
in
or
add
jmp
jb
add
mov
pop
jecxz
nop
outsb
je
push
inc
adcl
mov
pop
fcmovnu
mov
push
divb
adc
sbb
adc
push
stos
dec
or
mov
dec
cmp
jl
sub
repnz
adc
lds
and
dec
subb
out
arpl
cmpsb
data16
and
cltd
les
cmp
xor
test
sbb
icebp
and
shl
shlb
insl
mov
sub
jge
lea
mov
in
ljmp
xor
sub
pushf
lret
inc
sub
push
sbb
adc
adc
iret
pop
ret
lcall
movsb
add
cmpsb
fdiv
into
jge
mov
dec
test
cmp
dec
dec
mov
cld
mov
into
mov
mov
jbe
xchg
mov
jmp
cmp
pushf
xor
jp
cmp
imul
test
bnd
out
mov
jnp
xlat
in
int3
pop
mov
fildl
rcl
out
ja
push
ret
imul
cmp
fs
stos
dec
int3
mov
add
sub
jbe
mov
outsb
jns
mov
repnz
add
insl
int3
add
mov
je
push
cld
mov
sbb
or
push
adc
jns
and
fsts
xor
cmp
pushf
dec
fsubrl
fisttpl
and
lods
adc
outsl
mov
stc
and
stos
ret
inc
shl
jg
aaa
pop
mov
or
mov
xchg
repnz
in
jnp
mov
xchg
mov
lret
mov
test
mov
mov
out
cmp
mov
shrl
xor
sub
lret
pushf
xlat
add
mov
or
mov
inc
popf
mov
je
mov
pop
jno
out
inc
push
push
lods
push
lcall
mov
rolb
rolb
stc
popf
cmp
mov
leave
fiaddl
mov
jnp
push
cmp
pop
mov
int
jmp
mov
jbe
pop
inc
lds
jno
in
pop
les
pop
mov
cmp
xor
pop
jo
in
dec
cli
pop
pop
xchg
and
dec
and
jb
std
aas
xchg
adc
clc
iret
xchg
cmpl
adc
ss
shll
negl
movsb
mov
addr16
fsts
lods
fimuls
xchg
and
divb
mov
mov
jl
push
mov
and
mov
or
test
or
ds
cmp
out
dec
jno
rcrb
sub
daa
ja
and
cmp
shll
and
jmp
dec
loop
or
mov
imul
cli
xor
imul
add
icebp
cld
insb
and
movsb
in
xchg
or
sbb
adc
icebp
shlb
mov
lea
adc
xor
xchg
ds
push
dec
add
lahf
add
aaa
xor
sub
cli
push
mov
arpl
sub
stc
cmp
cmp
and
insb
rclb
loope
mov
mov
xor
sti
adc
lods
repz
das
and
mov
dec
ss
ror
lret
xchg
pop
add
iret
inc
xor
lock
js
icebp
xor
inc
inc
or
jecxz
mov
jne
bound
ljmp
repnz
mov
add
cld
sbbb
pop
sahf
pusha
lret
iret
inc
in
into
int
fistpll
in
push
pusha
dec
xchg
inc
mov
mov
and
jle
cmp
push
inc
and
pop
js
inc
dec
mov
nop
bt
std
sbb
and
mov
popf
adc
mov
ret
test
les
sub
push
inc
lahf
add
adc
jae
test
adc
icebp
out
test
adc
ja
ljmp
inc
push
dec
fadd
sub
mov
add
sahf
cli
xor
xchg
adc
mov
mov
pop
jp
sub
repz
mov
mov
scas
sub
lcall
xor
popa
add
sahf
scas
test
mov
lds
sub
sbb
popa
ret
ret
push
pop
mov
mov
scas
mov
adc
shll
and
push
test
mov
add
test
sahf
jge
and
xchg
and
jl
gs
mov
std
xchg
mov
push
mov
pushl
cmpsb
lods
loope
imul
nop
ja
mov
dec
loope
and
rorl
out
cs
cli
aaa
psrad
pusha
pop
fisttpl
inc
add
mov
dec
mov
dec
lods
aam
mov
inc
in
or
mov
push
or
jne
lret
jae
adc
jo
add
push
test
scas
mov
ret
stos
imul
dec
jo
ljmp
mov
lods
lods
fwait
imul
movsb
in
in
push
inc
dec
lahf
call
sub
out
bound
xchg
pop
inc
adc
cmc
dec
dec
mov
sbb
dec
loope
jne
les
dec
call
outsl
adc
pop
mov
pop
and
mov
stc
cmp
and
and
scas
test
mov
clc
les
jecxz
sbb
xor
sbb
movsb
fidivrl
push
scas
loopne
dec
dec
std
loopne
call
jge
or
faddp
jle
push
lret
and
cmp
mov
mov
or
dec
sbb
ret
dec
pop
or
pop
push
pop
jo
cltd
jno
nop
mov
fst
fldenv
sbb
adc
add
mov
pop
inc
xchg
xchg
lcall
adc
cmp
ds
aam
mov
mov
push
out
push
stc
nop
sbb
stos
stc
mov
das
sti
bound
fadds
das
xor
loopne
adc
sbb
xchg
cmp
xchg
pop
cld
sahf
dec
fcompl
testb
jo
dec
rclb
call
idivb
push
mov
push
aas
stc
jb
push
insl
pop
or
rep
or
push
popf
cmp
jae
adc
push
cli
data16
popa
cwtl
lods
lds
cmp
jno
mov
and
call
in
repnz
insb
lea
movsb
lcall
mov
out
xchg
add
push
loope
cltd
xor
push
pop
pushf
lea
pop
stos
adc
add
and
pop
mov
ljmp
push
aam
inc
and
pop
push
mov
or
not
je
lret
bound
mov
dec
test
inc
sbb
lods
imulb
push
adc
ficoml
mov
lea
lret
jnp
mov
dec
sub
lods
cmp
or
jb
xchg
movsl
cmc
fsubs
mov
clc
loope
and
cmp
movsb
pop
cmp
pop
dec
mov
xchg
loopne
pushf
iret
insb
out
stc
pop
mov
icebp
jnp
scas
jns
pop
cmp
lds
leave
rcll
cmpsl
pop
int3
jl
pop
xor
mov
sub
pop
loopne
dec
adc
ljmp
jb
fistl
testb
cmp
popa
insb
ss
into
stos
cmpsb
movsb
outsb
out
cmp
pop
jecxz
mov
pop
in
imul
xor
mov
in
push
fimuls
stos
fstpt
loopne
adc
xchg
adc
lar
sub
mov
call
xchg
lods
pop
xchg
jae
repz
mov
lods
out
xor
sbb
sbb
mov
nopl
cmp
pmaxsw
jmp
or
lret
or
repz
loop
in
mov
lret
mov
lahf
out
in
sub
push
mov
aam
cli
aad
mov
cs
aaa
pop
jne
cmpsb
test
scas
xchg
sbb
loop
sbb
mov
mov
or
pop
mov
mov
dec
cwtl
pop
xor
xor
cmpsb
testb
mov
dec
out
pop
dec
jg
ss
cmp
cmp
test
mov
and
int3
cmc
loop
cmp
es
dec
jo
iret
je
pusha
rcrb
inc
mov
push
pusha
push
popf
stc
xor
into
in
outsb
repz
popf
mov
fsts
adc
bnd
push
mov
das
mov
xor
adc
int
loope
push
fistl
jg
or
outsb
nop
add
std
xchg
jp
jbe
mov
sub
mov
stc
sbb
add
in
leave
push
es
loopne
adcb
sti
iret
xor
insb
xor
testl
sbb
add
add
and
mov
roll
lcall
sbb
je
rcrl
xor
orb
aam
push
dec
sub
xchg
push
pop
mov
nop
or
lods
mov
push
daa
sbb
dec
out
mov
shl
call
outsl
mov
into
lds
dec
push
or
mov
scas
leave
mov
bound
jo
out
mov
daa
lock
mov
mov
adc
les
dec
in
cmc
push
imul
add
repnz
fstps
inc
out
add
outsl
out
movntq
sbb
loopne
xor
jmp
pop
test
int
add
ret
add
jne,pt
xor
pop
sbb
mov
cmpsb
mov
xchg
mov
inc
cmp
repz
mov
repnz
fstpt
lods
inc
popf
ror
push
sbb
lods
loop
cmpsl
sub
or
sub
push
and
scas
xchg
add
leave
ljmp
stc
inc
mov
fcomps
into
andl
ds
pop
in
push
mov
mov
into
jmp
fmuls
mov
enter
movsl
icebp
mov
les
iret
test
js
push
dec
mov
mov
xchg
shrb
pop
sub
adc
scas
out
cld
mov
xor
jae
scas
sarb
mov
jae
outsl
cmp
sbbl
mov
cmp
idiv
mov
sub
mov
fsts
shll
subb
sub
sahf
jle
fwait
insl
js
lods
xor
fiadds
sbb
jge
add
push
fistpll
pop
lods
leave
push
ret
pop
mov
fs
cmc
cmpsl
ret
cwtl
sbb
or
sub
push
mov
jb
enter
es
into
in
add
mov
xor
push
call
les
jmp
mov
push
adc
adc
cmp
xor
or
or
jb
push
dec
xchg
comiss
jg
rcr
mov
sub
out
sub
push
xchg
test
test
mov
adc
and
mov
pushf
mov
std
jbe
push
dec
fsubs
shll
insl
sub
in
in
dec
sarl
pop
fcom
xlat
inc
cltd
inc
lret
mov
mov
pushf
xchg
iret
adc
lea
jmp
jns
inc
mov
ljmp
je
shlb
mov
movsb
inc
and
push
testl
mov
cmp
lcall
push
in
push
das
out
sub
iret
into
mov
sbb
pusha
pop
dec
pop
mov
add
dec
stos
pop
pop
pop
inc
push
dec
cs
push
daa
lea
fsubl
push
dec
das
pop
pusha
lock
dec
xchg
xchg
in
shrb
cmp
and
and
sti
test
or
shl
es
leave
fidivs
clc
cli
xor
cmp
push
dec
inc
fsubrs
sub
jnp
movsb
mov
push
fstpl
cmp
jp
sub
xchg
insl
dec
xchg
shlb
dec
or
insl
mov
sahf
pop
jo
adc
movb
jns
inc
cli
mov
cwtl
fcomps
mov
adc
push
testb
dec
or
jb
push
add
jae
jbe
and
jae
mov
sbb
addr16
push
js
inc
int3
loopne
pushf
pop
cli
lahf
and
jno
les
or
sar
inc
xchg
sbb
out
push
pusha
xchg
adc
call
dec
rcr
pop
inc
or
jbe
xchg
jb
inc
dec
stc
xchg
or
xchg
out
xlat
pop
mov
sahf
xchg
mov
mov
xchg
dec
or
dec
cmpsb
or
sub
adc
int3
out
imull
cltd
rcrb
test
in
test
mov
inc
ret
dec
lcall
mov
ljmp
inc
daa
mov
rolb
xchg
aad
sub
xchg
jb
add
data16
xorl
stc
inc
arpl
imul
adc
cmp
cli
add
fsubl
xchg
ljmp
or
pop
mov
mov
popa
xchg
sub
sbb
push
stc
iret
movsl
pop
and
ret
mov
xor
sbb
jnp
pop
sub
cmc
cli
fisubrl
dec
xor
movsb
dec
test
mov
mov
rcll
mov
leave
pop
jmp
aaa
aam
jno
clc
push
push
inc
push
leave
adc
mov
dec
ja
fisubs
fisttpl
and
mov
push
pop
fs
inc
add
outsb
push
leave
xor
sub
sahf
jp
pop
xor
and
pop
add
mov
dec
ljmp
fs
jle
xchg
enter
jp
arpl
movsl
scas
xlat
arpl
pop
fdivs
adcb
ss
jge
dec
out
mov
je
enter
cs
fbld
lods
sub
fs
and
or
ljmp
jl
pop
cld
jp
pushf
bound
dec
jne
push
cwtl
sahf
enter
inc
cmpsb
pop
pusha
cwtl
sub
in
xchg
adcl
sbb
popa
or
jno
addr16
bound
fdivrs
sbb
xlat
or
jns
xchg
test
stc
nop
or
mov
xor
lret
add
addr16
icebp
stos
in
push
scas
pusha
pop
jl
mov
mov
pop
ret
in
popa
lock
xchg
clc
and
cmp
dec
lahf
add
xchg
pop
std
mov
cmp
in
push
mov
lret
jecxz
sub
push
ror
lahf
leave
lea
jge
jbe
js
mov
mov
fistpl
pushl
je
lret
cmc
outsb
insb
ja
lret
rolb
mov
sbb
fsubp
lods
arpl
ret
gs
lret
shll
loopne
sbb
xchg
nop
into
cli
mov
or
shr
mov
push
pushf
push
xlat
fs
xlat
push
push
pop
mov
mov
dec
sbb
mov
icebp
mov
and
cmp
cld
cmp
scas
addr16
imul
xchg
sbb
popf
adc
out
int3
add
or
mov
test
enter
cmpsl
dec
lea
sub
xor
popf
cwtl
scas
test
sbb
push
pop
cmp
jecxz
pop
xchg
lock
xor
pop
ds
fcomp
nop
popf
jbe
mov
test
aad
add
inc
pop
mov
repz
inc
sbb
stc
es
pop
loop
fwait
in
lret
popf
mov
testl
pop
lcall
jmp
xor
sub
mov
add
subb
inc
or
xchg
xchg
fwait
xchg
ljmp
mov
adc
and
stc
in
lret
fildl
or
and
mov
fsubs
adc
lret
mov
or
jge
aad
adc
pop
in
int3
shrb
push
sub
sbb
daa
push
adc
int3
stos
cmp
shrb
sbb
push
sub
shll
scas
push
xchg
cwtl
push
cmp
jge
js
dec
loop
sub
je
jg
subl
mov
pusha
sub
ret
mov
jp
jbe
mov
cmc
or
hlt
sub
inc
push
lds
in
pop
pop
dec
inc
movsl
popf
and
mov
pop
aam
or
cmpb
fs
mov
inc
jno
inc
or
test
sbb
mov
jbe
clc
xlat
mov
add
inc
xor
jne
pop
ljmp
addb
mov
je
mov
mov
imul
leave
ds
out
rol
fwait
repz
ljmp
inc
pop
pop
add
sbb
lods
jl
dec
ror
cmpsb
inc
xlat
push
aaa
mov
sbb
fcmovbe
fcoms
sarb
popf
mov
lret
sub
out
test
movsb
mov
int3
mov
mov
dec
inc
es
imulb
push
dec
xchg
sbb
xlat
call
outsb
lcall
inc
idivb
mov
std
dec
sub
js
xchg
push
icebp
mov
test
dec
loop
ljmp
xor
and
xorb
jp
mov
sub
jo
push
mov
mov
int
lret
or
fiaddl
lds
or
fildll
or
add
xorb
cld
mov
subl
jnp
into
jno,pt
mov
test
je
mov
dec
out
mov
out
es
add
je
int
jae
mov
arpl
mov
enter
sahf
mov
mov
jl
out
xchg
inc
or
xor
or
jp
xor
enter
lret
inc
xchg
imul
frstor
mov
lahf
pop
pushf
nop
mov
out
call
out
inc
or
mov
xor
pop
mov
xchg
lods
inc
insl
sbb
pop
adc
adc
jne
jg
xchg
imul
xor
fists
testl
xor
jmp
jecxz
lock
shrl
xchg
add
xchg
mov
insb
cmp
or
nop
sub
in
push
and
cmpsb
leave
popa
xchg
daa
or
shl
pop
int
xchg
inc
loope
mov
adc
dec
pop
adc
inc
test
shr
decb
ret
ss
cmpsb
mov
addb
jmp
jo
xor
jns
jb
add
daa
inc
dec
xor
and
loopne
rcll
fdivrs
lock
mov
pop
pop
movsl
adc
stos
into
xchg
shl
or
fxch
ds
das
cmpsl
dec
or
mov
test
jns
in
rcr
lds
rolb
mov
add
cmp
jns
loope
in
sarb
sbb
dec
movsb
sahf
and
pop
mov
push
shlb
fisttps
stos
xchg
mov
xchg
mov
jmp
rorl
cmc
test
pushf
enter
jbe
and
xchg
mov
out
jecxz
loope
jo
mov
push
push
dec
sarl
mov
inc
out
cmpsb
xor
or
and
mov
inc
push
mov
lods
insl
inc
mov
sub
out
mov
rol
les
dec
jge
jae
pop
dec
dec
aad
sbb
daa
mov
xchg
mov
inc
mov
int
mov
fiadds
cmp
cmp
fstl
dec
mov
pop
sbb
push
add
jle
dec
and
pop
jb
clc
fisttpll
lret
push
aad
sbb
mov
push
jno
ljmp
test
inc
pop
popf
hlt
daa
lods
jo
adc
xchg
cld
lret
mov
std
aam
loope
xor
cmp
jb
pop
jle
je
stc
aaa
popf
popf
jne
aad
xorb
inc
xor
adc
gs
out
jne
stos
xchg
push
add
sbb
mov
push
sbb
mov
xlat
jnp
outsl
pop
iret
out
fcom
add
or
sbbl
hlt
pop
scas
push
and
sub
cltd
inc
or
pop
push
cmp
inc
pop
loop
popa
and
int
lods
fwait
arpl
push
push
adc
pop
push
jno
cmp
iret
mov
xor
fildl
das
dec
cmp
jbe
xchg
sub
adc
lods
sbb
adc
int3
sub
cli
mov
cmp
jo
or
xor
fstl
push
test
icebp
paddusw
sbb
add
cmpsl
add
pop
ret
shrl
and
add
mov
and
push
aad
stos
mov
scas
push
mov
flds
pop
loopne
outsl
mov
lret
popa
lods
xchg
mov
mov
fisttpl
xchg
xchg
xchg
mov
lods
sub
cltd
inc
imul
testb
dec
adc
loope
xlat
jecxz
push
addb
dec
push
fdivrp
push
out
xchg
mov
push
or
jl
insb
push
aam
mov
bnd
fcmove
cmp
mov
aad
jecxz
enter
jecxz
popa
insb
leave
pop
mov
movsb
test
cmp
roll
insb
cli
inc
adc
mov
mov
mov
fs
push
push
inc
fisttps
jp
ds
lcall
fwait
imul
cs
dec
mov
mov
sub
cmpsl
lock
loopne
hlt
lret
cld
frstor
stc
repz
push
stos
sbb
jecxz
gs
xchg
jb
mov
xlat
cmp
push
sbb
out
imull
mov
ret
add
adc
lock
sub
xchg
cmpsb
outsl
jle
push
filds
cli
inc
fistpll
sub
add
push
xchg
xchg
cmp
cmpsl
mov
inc
mov
inc
cmp
outsb
push
push
adc
xchg
jne
xor
mov
stc
imull
stos
cli
push
mov
mov
popa
xor
cmc
dec
insb
out
xor
bound
mov
inc
lds
add
mov
mov
push
test
lock
out
fcmovnu
ss
push
enter
mov
out
mov
int
std
fwait
xor
push
shl
push
xor
xchg
pop
push
outsb
cmp
or
sbb
mov
xchg
pop
mov
xchg
inc
mov
movsb
shll
push
jecxz
jne
jbe
negb
lahf
push
mov
inc
lret
mov
ror
lret
mov
pop
imul
js
cld
dec
sub
xchg
xchg
gs
ljmp
jl
adc
rcrl
outsl
pop
out
data16
cmp
xor
dec
int
and
sahf
and
icebp
pop
add
into
add
scas
nop
cmpsb
xchg
xchg
jmp
lods
les
xchg
mov
fxtract
fsts
jmp
leave
fnstsw
and
repz
test
movsb
dec
lds
dec
sub
insb
mov
addr16
pop
in
fildll
popf
mov
loopne
je
sti
in
add
xchg
jg
pop
push
xchg
int
cltd
cltd
or
cmp
pushf
rorl
push
pop
push
xchg
mov
out
or
fisttpl
popf
xchg
in
mov
jns
adc
pop
sbb
out
in
imul
popa
xor
decl
jecxz
dec
mov
mov
cmp
loopne
data16
fcomps
aaa
inc
stos
inc
ljmp
arpl
imul
sti
insb
add
push
movsb
inc
xchg
fidivl
not
dec
adc
add
gs
fwait
cmpsb
icebp
nop
cli
jmp
pop
cld
icebp
jg
xor
out
pushf
or
adc
mov
pop
push
mov
jne
lret
sti
xlat
cmp
and
notb
ss
sbb
jge
sub
mov
ret
adc
pop
lcall
mov
cltd
mov
push
cli
inc
test
fs
icebp
adc
sti
test
adc
adc
mov
stos
js
inc
mov
out
loope
inc
lods
lods
push
das
jp
xlat
ljmp
ret
rcll
jmp
dec
dec
dec
jg
clc
in
dec
ficompl
fs
jp
push
icebp
cmc
add
jmp
mov
ss
push
testb
lods
das
shr
cli
daa
xchg
loope
pop
nop
cli
shlb
js
fstps
enter
jecxz
icebp
add
pop
std
lahf
inc
inc
idivl
cmp
pop
sahf
shll
xor
xchg
cltd
fistl
cmp
jp
push
arpl
outsb
mov
scas
mov
jbe
pop
mov
mull
fstpt
scas
out
push
mov
xchg
in
insb
fsubl
xor
push
pop
cmpsl
nop
or
add
movsl
pop
leave
sbb
mov
xchg
push
push
repz
psllq
jnp
bswap
les
push
mov
xchg
xchg
xchg
mov
fists
push
stos
sbb
fidivrl
pop
mov
lds
ret
xchg
aaa
sbb
xor
push
jge
jge
pop
add
bound
cmp
and
mov
mov
pop
fiaddl
xor
out
mov
outsl
jns
test
rolb
adc
mov
xor
fs
jae
mov
cmp
push
jbe
or
jg
dec
aas
rorl
fisubl
fnstcw
outsl
scas
dec
xchg
push
push
dec
jmp
movsl
insb
lea
sub
sub
add
jmp
jmp
lock
rolb
aas
sub
push
test
xor
aam
and
mov
cmp
and
sub
ljmp
pushf
loop
test
es
rorl
push
movsb
dec
xchg
incb
nop
adc
sub
pop
mov
pop
int
mov
rcrl
aaa
insb
rorb
bound
out
idivl
cld
int3
cs
xor
xchg
leave
test
cmpsb
dec
hlt
push
or
cmp
iret
sbb
fmuls
adc
std
jno
clc
lds
jo
mov
push
fisubl
push
inc
ficompl
in
add
xchg
sbb
inc
mov
popf
imul
xor
testb
push
decb
shlb
je
imul
arpl
in
jp
jle
dec
mov
mov
jp
nop
sub
inc
pop
scas
add
adc
iret
ja
out
add
or
or
xchg
fnsave
loopne
shll
cmp
cmp
xor
bswap
adc
xchg
vmptrld
pop
les
in
movsl
lds
rcrl
lcall
into
ret
in
aas
inc
xor
movq
mov
mull
mov
pop
insl
fwait
lret
in
test
cld
add
xorb
adc
xor
out
pusha
jecxz
xor
jmp
push
rcrb
fidivrl
aam
push
add
pusha
mov
or
out
call
pop
les
add
sarb
cmp
mov
and
jge
aaa
mull
out
pop
fcmovnb
dec
xchg
mov
pop
pop
xor
iret
je
test
shlb
mov
pushf
mov
sbb
sbb
jl
pcmpeqd
mov
adc
scas
in
sub
sub
movsb
lock
lcall
xor
lds
scas
adc
je
test
loop
push
lods
cli
je
pop
cltd
xor
fldl
or
scas
jge
sub
hlt
aaa
mov
mov
fisubrl
mov
or
pop
je
iret
jl
out
push
stos
jge
cmpsl
aaa
xor
jb
push
enter
xchg
push
mov
jb
dec
and
pusha
jmp
jnp
out
imul
repnz
cmpsb
adc
sub
sub
in
cmp
hlt
insb
xlat
adc
pop
mov
pop
fldt
in
inc
std
pusha
out
das
mov
inc
jne
inc
and
jmp
jns
inc
jp
ljmp
dec
mov
rorb
call
sbb
das
ret
fs
push
add
je
inc
rcrb
push
jbe
add
sbb
out
inc
clc
call
jg
xchg
les
xchg
mov
cmp
adc
pop
and
insb
cwtl
cld
jge
mov
push
xlat
add
push
shl
dec
ficoms
repnz
pop
lds
jmp
sub
mov
add
mov
lret
repnz
int3
movsl
cli
jno
outsb
sub
dec
popf
sub
repnz
mov
jns
ret
dec
scas
daa
pop
mov
test
mull
cmp
mov
in
fwait
or
aaa
cmpl
ficomps
mov
jno
andl
mov
dec
xchg
push
inc
pop
cmpsl
mov
mov
stc
icebp
and
insb
repz
xor
test
mov
scas
sub
test
leave
dec
sub
faddl
ror
mov
lret
jl
repz
inc
insb
lret
jno
cld
mov
push
jb
cmpsb
add
in
sbb
sbb
mov
pop
lods
mov
dec
sub
imul
lahf
in
ja
shll
ficompl
or
iret
xlat
imul
mov
outsl
sub
out
nop
and
cmp
sub
out
or
out
add
xadd
das
movsl
aas
in
ret
pop
jns
cmp
aad
jle
adc
and
sbb
dec
pop
jae
push
xchg
mov
cmp
jecxz
sahf
push
sarl
mov
repz
rcrl
sub
adc
out
pop
mov
ja
ljmp
cmc
jb
in
inc
dec
pusha
dec
popa
clc
leave
pop
es
insb
mov
mov
mov
pop
jno
fwait
mov
inc
mov
mov
mov
movsl
iret
sub
inc
mov
test
push
dec
cld
loope
cmpsb
add
or
add
orl
test
add
cmc
clc
cmp
aas
jecxz
data16
pop
mov
xchg
outsb
mov
lahf
stos
xchg
or
inc
push
loop
cmpsl
sbb
enter
cmc
mov
punpcklwd
aas
dec
ret
and
xor
pop
pop
sub
arpl
nop
jo
xchg
out
outsb
and
stos
clc
lret
cmp
test
cmp
lahf
dec
mov
sub
mov
test
fucomip
push
enter
dec
or
fwait
outsb
mov
xor
sub
adc
pop
cs
push
inc
and
aas
push
push
movsl
shlb
in
xor
mov
dec
jo
bound
and
dec
adc
jae
div
jb,pt
adc
clc
lcall
inc
repnz
orl
mov
dec
pop
into
movsb
lods
xchg
pop
divl
xchg
sub
lea
mov
xorl
pop
mov
shll
cld
dec
inc
mov
dec
popa
sbb
lcall
rorl
mov
mov
lock
lahf
xor
sbb
add
sbb
sbb
lret
out
cmp
sub
call
into
mov
mov
mov
hlt
mov
xor
adc
xor
mov
xchg
and
pop
loope
pusha
sub
aam
or
imul
clc
mov
bound
je
xchg
sub
int3
push
adc
out
test
xor
arpl
fcomp
jae
mov
inc
pop
mov
jae
ljmp
push
imul
xchg
fsubrl
sub
mov
pusha
rorb
mov
add
add
int
dec
mov
das
dec
mov
dec
pop
cmc
lods
and
mov
and
call
pop
mov
and
out
lret
push
fdivs
repnz
fildl
shll
xlat
loopne
shrb
outsl
push
sti
xorb
xchg
cwtl
inc
loopne
and
jmp
add
sti
push
mov
and
pop
rcrl
cmp
stc
or
or
cwtl
hlt
cltd
hlt
mov
sbb
int
xchg
rorl
out
cli
xchg
jge
das
nop
iret
imul
mov
push
lods
cmc
fstpt
fdivp
push
pop
xor
jo
es
mov
mov
shlb
lahf
sbb
dec
or
out
je
jge
jl
mov
imul
data16
adc
pop
sbb
xchg
ss
dec
jbe
inc
push
push
jecxz
out
fnsave
cmc
jns
adc
sub
mov
or
adc
loope
nop
push
mov
mov
aad
or
jae
inc
jg
mov
lds
dec
shlb
aad
test
addr16
sti
or
into
mov
in
sbb
addr16
xor
data16
pop
popf
mov
aad
xchg
push
icebp
and
clc
xor
add
lds
dec
mov
pop
dec
sub
adc
mov
push
mov
xchg
imul
xlat
cmp
in
mov
xor
mov
pusha
fcmovb
xor
hlt
loope
cmp
mov
int3
cmp
jnp
sbb
add
push
aad
jp
imul
les
sub
fwait
pop
insb
sub
mov
mov
push
ja
pushf
lahf
mov
stos
push
inc
ja
aam
push
fmull
or
jns
push
outsl
jmp
push
shrb
jmp
or
push
stos
cmp
inc
loopne
jecxz
pop
pop
loope
inc
pop
sub
lods
fildll
add
fcoms
js
xorl
cmp
mov
inc
lods
or
push
inc
hlt
add
sub
insl
xchg
in
inc
std
outsb
cmpb
jns
inc
lcall
stos
mov
sti
adc
into
inc
mov
or
inc
cld
adc
sub
dec
add
stos
sub
lahf
lret
xor
clc
jg
mov
std
ss
mov
jecxz
cwtl
ja
pop
outsl
popa
and
test
stc
or
push
mov
dec
or
cs
out
mov
jno
push
int3
cmpsb
inc
push
arpl
call
jae
lret
jo
stos
imul
mov
rorl
pusha
jle
test
or
fwait
cmp
adc
out
cld
lcall
sbb
stos
fcmove
adc
test
cltd
xchg
jl
and
mov
out
enter
or
ljmp
add
sub
mov
popa
adcb
adc
dec
cmp
mov
jecxz
mov
sub
sbb
cmp
ljmp
xorb
fistl
inc
into
sbb
out
push
insb
sbb
inc
inc
mov
and
push
mov
lahf
dec
pop
int
ljmp
iret
mov
jbe
mov
dec
sub
push
sbb
xchg
mov
xchg
inc
add
cmp
lods
inc
sub
xlat
ja
stos
shr
inc
mov
jmp
fwait
nop
fstpl
call
cs
iret
or
scas
lea
lahf
adc
mov
popf
and
mov
cmpsl
negb
push
loopne
fistpll
push
outsl
aas
test
xchg
hlt
push
add
mov
sahf
mov
pop
jo
add
push
movsb
cld
mov
ret
mov
nop
push
lret
out
pop
mov
popf
jno
jecxz
dec
or
push
lcall
mov
in
fdivr
loope
sub
pop
out
pop
dec
xchg
mov
loopne
adc
mov
aaa
sbb
adc
inc
push
xlat
add
push
fwait
or
out
push
loope
shrl
dec
fcoms
sbb
pop
js
push
into
popa
inc
add
sbb
xor
rorb
pop
mov
mov
push
scas
scas
and
nop
das
shr
push
aas
rolb
cmp
dec
cmpsb
inc
outsb
push
mov
cmc
xchg
fs
push
cmp
dec
or
or
cmp
rcrb
and
add
xor
and
jmp
icebp
mov
cmp
inc
shlb
popf
das
xor
dec
ficoms
cltd
inc
push
bound
sbb
jno
and
sbb
jo
inc
push
mov
stos
cwtl
jmp
xor
in
ret
mov
cltd
mov
je
ja
sub
test
aad
pushf
pop
or
enter
fcmovbe
lcall
mov
add
sti
sub
sbb
cmp
sbb
inc
std
mov
sub
add
das
lds
icebp
mov
and
mov
icebp
jb
ds
xchg
iret
xchg
xchg
sub
push
cld
out
push
push
inc
pop
jl
inc
andb
cmp
ss
iret
sub
rorl
lock
adc
xor
mov
das
lock
out
fdivl
leave
adcl
aam
scas
pop
cmc
ret
inc
xchg
inc
jge
lret
xor
or
pop
stos
sbb
cld
fucom
or
sub
cmc
icebp
jecxz
lret
outsb
push
addl
or
ja
or
push
arpl
and
das
cmp
imul
out
push
mov
inc
ja
test
clc
sbb
cmpsl
test
in
mov
je
dec
mov
iret
adc
inc
rclb
int3
aad
sbb
in
xchg
mov
in
lcall
pop
call
mov
sar
in
push
inc
movsb
xor
jmp
lds
cmp
mov
xchg
dec
fxtract
cmp
daa
test
push
push
dec
nop
je
into
dec
and
insl
negb
test
adc
xor
icebp
leave
cmpsb
cmp
dec
xlat
int3
jge
or
add
pusha
xor
fwait
enter
pop
pusha
jle
mov
das
icebp
aas
mov
int
inc
ja
push
fs
popa
sar
pop
nop
xor
and
xor
xor
fsubr
cmp
adc
call
cs
or
gs
adc
xor
sbb
aad
jle
imul
adc
out
imul
adcl
pop
and
call
sbb
and
sbb
push
mov
cs
adc
mov
cld
adc
cmpl
jl
jge
mov
ficomps
jl
sbb
std
in
out
lret
cmp
xchg
lret
jno
or
mov
cld
or
repnz
xlat
pop
cld
xor
sti
ljmp
aas
jmp
fwait
push
outsl
into
fsubrl
sarl
sbb
fldenv
fsubrs
mov
cmpsb
sbb
outsb
out
shlb
arpl
mov
outsl
cmp
push
pop
out
lret
mov
add
arpl
in
nop
outsl
insl
loopne
sti
cltd
mov
lods
lret
jae
fmuls
fs
and
aam
push
pushf
dec
push
mov
jae
repz
aas
xchg
movb
out
adc
pop
pop
adc
jmp
cmpsl
out
cmpsl
add
add
pop
jnp
jg
cmp
adc
loop
mov
ds
stos
inc
test
popa
xchg
adc
call
ds
cmpb
es
clc
jg
xchg
aad
push
cmpb
movsb
sub
rorb
xor
jmp
sahf
sub
adc
or
out
sbb
stos
dec
pusha
call
test
dec
in
aad
jns
gs
push
xchg
loopne
lods
push
and
add
jecxz
adc
cli
fwait
mov
leave
imul
faddp
sub
lock
xor
mov
rcll
pop
mov
aaa
pop
bnd
call
inc
dec
or
xchg
mov
insl
iret
mov
mov
es
xor
sbb
enter
call
incl
adc
inc
xor
mov
cwtl
and
xchg
movsl
mov
std
stc
add
mov
int3
inc
ja
dec
sbb
fiaddl
push
test
loopne
addr16
push
adc
dec
ja
sbb
cs
or
sub
mov
test
popa
faddl
mov
add
ljmp
mov
jns
fs
mov
in
push
out
or
pop
outsw
repnz
repz
into
enter
adc
out
cwtl
jbe
ret
mov
dec
mov
jbe
incl
loopne
xor
xchg
imul
mov
push
pop
mov
xor
testb
mov
or
jo
xchg
mov
sbb
sbb
or
cs
mov
add
lods
push
test
mov
and
xor
xchg
in
scas
repnz
push
and
add
in
add
add
jp
pushf
push
pop
cld
pop
roll
pop
xor
popf
mov
push
sbb
lods
into
rcrb
jge
dec
xorl
cmp
mov
xor
aaa
mov
mov
rolb
cwtl
pushf
rcll
loope
mov
int3
pop
xchg
hlt
stos
sub
jge
in
pop
mov
cmp
xchg
sahf
mov
inc
or
out
push
mov
pop
in
jp
inc
dec
inc
out
inc
je
push
push
clc
jne
jnp
mov
add
imul
das
shlb
jmp
rorl
push
sahf
insb
xchg
fcoms
and
and
pop
lahf
loop
xchg
inc
les
sub
setnp
or
adc
or
cld
push
mov
or
and
and
cmp
push
mov
and
jmp
loop
xor
inc
mov
push
cmpsl
inc
xchg
sbb
jbe
mov
movsl
xchg
pminsw
dec
enter
sti
aas
imul
mull
mov
push
jne
adc
or
or
out
adc
pop
lock
stc
jl
int3
fdivs
mov
andb
xchg
arpl
inc
jne
pusha
mov
mov
mov
mov
dec
push
into
xor
out
out
adc
or
add
dec
ja
and
xchg
inc
mov
jp
icebp
das
mov
mov
mov
addb
imul
xor
pop
fdivrp
mov
jo
mov
mov
loop
dec
rcll
hlt
push
pop
outsb
pop
adc
xchg
testb
mov
repz
adcl
negb
mov
out
add
data16
std
outsl
pop
into
cltd
push
loop
sti
mov
dec
fcomps
mov
xor
bound
test
add
mov
mov
pop
cvtdq2ps
in
pusha
jp
loope
mov
sub
add
ds
inc
push
dec
pushf
pop
add
hlt
popa
into
cmpsl
dec
out
mov
xchg
inc
inc
repz
sub
cmp
lcall
stos
and
enter
mov
jmp
add
pop
call
mov
mov
shl
ljmp
lods
add
inc
loope
lods
and
pop
xor
fnsave
push
stos
adc
fisttpl
xchg
ret
pop
cmp
aaa
roll
jg
int
dec
mov
jo
sub
inc
xor
mov
rolb
push
cmpsb
or
out
int
lret
pop
jp
aad
cmp
mov
pushf
call
mov
pop
xor
ficoms
push
inc
xchg
mov
push
into
mov
stos
and
inc
movsb
lahf
adc
push
mov
lahf
xorb
cmp
iret
or
and
repz
pop
psubusb
mov
push
mul
in
out
jo
pushf
inc
cmp
jp
into
adc
xchg
das
es
pusha
or
jge
inc
push
sbb
pop
mov
or
outsb
xor
je
movsl
cli
sub
clc
jo
push
and
push
cmp
fs
xlat
ret
jo
jne
subl
cmp
pop
adc
sbb
test
cmp
pop
cmp
lds
int3
sti
mov
lods
call
and
loopne
push
cli
leave
mov
fmulp
in
pushf
lret
adc
adc
xor
notl
divl
test
or
std
aaa
adc
push
xchg
scas
or
sbb
dec
scas
add
sti
jne
rorl
jae
xchg
aam
jno
shrb
sub
dec
jnp
adc
mov
lret
cmp
in
addl
in
push
cmpb
push
idivb
subl
adc
pop
jmp
inc
lods
xchg
arpl
scas
cmc
inc
add
imul
mov
lret
jmp
pop
dec
fsubrs
pop
loopne
fwait
dec
inc
adc
xchg
mov
lret
repnz
shlb
pushf
pop
sbb
stc
dec
dec
mov
mov
adc
test
js
adc
out
inc
add
xlat
mov
js
mov
mov
xchg
mov
data16
pop
sub
loopne
les
cmpsl
sbb
fsub
repnz
lahf
notl
push
repz
lods
lcall
in
enter
in
sbb
push
jnp
xchg
adc
lahf
fdivl
jecxz
mov
test
std
mov
add
add
fsubrp
test
adc
stc
in
adc
rol
inc
lds
jp
sbb
push
jb
repz
scas
rorl
popa
repz
and
xor
int
cvtdq2ps
subl
xchg
repnz
sbb
leave
mov
into
imul
dec
mov
repz
dec
shll
and
fdivrs
movsl
popa
je
cli
pxor
loopne
int
sti
cmp
call
movsb
daa
outsb
mov
and
xchg
roll
imul
sbb
clc
lock
mov
mov
es
cmp
dec
inc
pop
pushf
loope
xor
mov
in
lock
scas
movsb
pop
xchg
jl
fsubrl
sub
mov
push
test
mov
std
jg
inc
push
mov
aad
dec
jbe
cli
cmp
scas
mov
iret
fstps
dec
xchg
outsl
jae
sub
xor
lock
inc
pop
mov
rcr
add
test
pop
add
mov
lods
xchg
test
les
frstor
clc
add
sti
rolb
ret
pop
cld
add
cli
test
add
and
mov
into
or
call
fcomps
mulps
std
and
jb
cmp
ss
push
ss
xchg
mov
pop
cltd
mov
adc
data16
enter
pop
sahf
jbe
lcall
dec
shrl
push
sub
jecxz
lods
sahf
es
ss
movsl
mov
sub
pop
call
jmp
hlt
mov
cmp
pop
je
and
lahf
pushf
fs
int
lahf
test
lds
pop
dec
je
enter
adc
rcrl
mov
or
std
sbb
dec
shl
out
jge
mov
xlat
push
lods
dec
rcll
call
add
cmp
fcmovnb
cmp
repnz
add
xor
inc
popf
out
mov
popa
in
add
pop
cltd
cmp
scas
add
mov
insl
or
loope
lahf
loopne
add
and
mov
sub
fsubr
dec
cs
ds
cmp
test
in
fwait
incl
sub
jl
sub
cmpsl
pop
xchg
mov
push
pop
and
into
mov
mov
push
mov
insb
xchg
mov
adc
jle
mov
mov
jns
lock
pop
push
cmp
movsl
mov
lods
popa
sub
mull
mov
mov
pop
ljmp
loope
cld
mov
xchg
jl
add
sbb
adc
outsb
out
push
dec
pushl
sub
imul
dec
push
loop
mov
mov
xchg
sbb
pop
push
hlt
out
sbb
mov
or
loopne
iret
dec
mov
out
sti
and
stc
jo
test
lock
and
and
jmp
fistps
sar
sub
jl
or
es
jl
jge
pop
dec
push
mov
adc
mov
addb
add
adc
mov
inc
xor
lret
in
fwait
icebp
adc
push
jge
in
ret
push
xchg
push
cmp
stos
lods
rorl
sbb
sub
xchg
mov
fwait
cmp
xchg
lahf
lret
inc
in
mov
inc
movsl
pop
out
in
loopne
insb
jle
xchg
mov
in
pusha
lret
shrl
cmp
hlt
lock
push
stos
xor
sub
mov
hlt
dec
cmp
je
adc
mov
push
jl
sub
mov
rol
jg
insb
aaa
ret
ror
xchg
cmp
mov
jo
sarb
xor
mov
lret
xorl
rcrb
lock
push
sbb
rorb
lret
or
and
pop
ss
aam
mov
call
mov
hlt
dec
pop
xor
xor
cmpsl
jecxz
mov
icebp
data16
fisubrl
jno
imul
inc
xchg
test
xor
mov
shrl
mov
std
mov
jne
sbb
lods
cwtl
cmp
push
xchg
popl
add
cmp
dec
mov
and
imulb
xchg
inc
add
push
xchg
push
dec
sub
jae
adc
out
sbb
adc
jmp
outsb
sub
push
mov
push
cmp
inc
sahf
mov
sbb
xor
inc
pop
pop
aas
xor
arpl
lock
call
jecxz
xor
mov
inc
popf
aam
inc
repz
popa
adc
out
sbb
insl
sub
or
dec
lods
jnp
lods
sti
push
dec
sbb
push
jle
jmp
fcoml
std
xor
movsl
sub
lock
out
pop
mov
clc
dec
jno
addr16
mov
test
hlt
mov
repnz
jno
shlb
or
cmpsl
jo
leave
mov
lods
dec
mov
fwait
out
inc
in
push
leave
dec
push
leave
sbb
icebp
jb
xor
mov
aam
pop
repz
pushf
push
or
mov
nop
pushf
fs
out
xor
lock
xor
test
jns
into
xor
jnp
mov
xchg
std
sub
mov
jo
cmp
movsl
or
or
mov
mov
xchg
xchg
push
popf
cmp
jl
jnp
pushf
pop
scas
cmp
mov
xchg
sahf
icebp
das
sub
loop
movsl
xor
push
mov
rol
cmp
test
push
cmp
lods
sub
mov
fcmovb
popa
pop
nop
mov
jns
sbb
add
pop
loope
ror
cmp
sub
je
mov
adc
sahf
lret
push
out
cmpsb
mov
xor
cmpsl
ja
and
cmp
adc
inc
cmp
cmp
adc
adc
fildll
push
xor
push
or
out
jnp
cmp
cs
and
and
or
jle
data16
add
cmc
xchg
leave
sbb
pop
add
sub
leave
call
pop
lods
in
out
test
or
jbe
push
mov
in
jmp
mov
push
sti
rcrb
fs
mov
orl
mov
sub
adc
inc
push
mov
enter
prefetchnta
pop
add
sbb
lods
adc
adc
fs
dec
int3
test
fcompl
fbstp
inc
mov
testl
fbstp
call
clc
push
pop
pusha
lret
xor
icebp
adc
push
jae
pop
daa
and
shl
negl
and
jecxz
push
mov
jmp
cmp
mov
mov
jbe
xlat
out
fisubs
xor
add
jl
lods
loope
push
dec
dec
mov
jbe
inc
test
sbb
fidivl
ds
mov
test
loopne
lea
cmpsl
dec
pop
mov
es
ret
or
lret
rorl
int3
insl
mov
test
xor
push
stc
nop
ds
xchg
enter
mov
cmp
imul
aam
decb
decb
xor
stc
cmpsl
jnp
test
fistps
push
pusha
icebp
int
mov
inc
pop
cmp
insb
gs
stos
adc
cmc
stos
mov
inc
sub
mov
fucom
andl
jne
mov
pop
pop
mov
sub
push
add
mov
pop
cwtl
sbb
sbb
and
pop
mov
bound
fwait
dec
loopne
inc
sbb
mov
push
xchg
mov
sbb
push
and
popf
data16
fstpl
sbb
repz
stc
je
sbb
jno
and
loope
orps
insl
lock
mov
cmc
sub
out
insl
mov
enter
lods
sub
leave
fistl
les
and
mov
popa
ja
push
aaa
sbb
sbb
mov
movsl
dec
shlb
fdivr
push
sub
or
push
daa
imul
nop
loopne
das
inc
sbb
cwtl
fistpl
stos
loope
xchg
movsl
ss
mov
popa
bound
mov
push
and
xor
lahf
mov
fdivs
and
inc
xchg
fcomps
mov
in
dec
sub
fdivs
insl
dec
jb
push
or
mov
xor
xchg
pop
or
jg
xor
add
pusha
xchg
insb
or
subl
mov
aas
sbbb
inc
pop
dec
dec
or
xor
mov
ficomps
test
scas
roll
sub
mov
jnp
xchg
popf
arpl
cmp
sub
adc
add
pusha
mov
jp
mov
jno
push
not
dec
fwait
test
push
jnp
mov
push
mov
or
or
mov
loop
mov
outsl
js
fisubl
and
test
outsl
adc
das
mov
test
and
and
add
and
int
sbb
cmc
out
xor
dec
cs
jge
fucom
fcomps
pop
ds
jno
dec
iret
insl
pop
dec
aam
mov
nop
lea
sub
cmpl
jle
jnp
xchg
addr16
xchg
cmp
pop
pop
jecxz
dec
cmp
dec
mov
andb
in
add
mov
cltd
imul
cmp
imul
push
add
adc
fnstsw
imul
jo
add
aaa
hlt
addl
sub
inc
das
adc
xchg
or
mov
sbb
mov
cmpsl
sub
fadds
jb
fcmove
pop
lock
add
adc
xchg
inc
mov
divl
or
cwtl
cmp
cmp
call
fistl
add
dec
push
or
gs
pop
xchg
push
ljmp
lret
bound
test
movsb
and
in
pop
clc
dec
popf
sbb
std
ja
and
xorb
lods
insl
insb
adc
cld
dec
into
xor
push
adc
pop
adc
mov
xchg
xchg
dec
pop
xlat
movsl
cld
and
fisttpl
scas
xor
lock
lret
fsts
popa
sbb
frstor
mov
jmp
movsb
icebp
arpl
adc
aas
out
lahf
data16
push
loop
leave
mov
sub
inc
xchg
out
decb
adc
mov
fldt
and
icebp
inc
push
mov
dec
cmp
cs
mov
xlat
jl
pushf
fwait
and
push
fnstcw
pop
cld
jbe
or
push
push
push
jge
je
jmp
outsl
notl
mov
scas
inc
ds
testl
outsl
xchg
enter
pop
add
jg
mov
mov
nop
adc
cmp
cmc
ja
cmpsl
shrl
aam
adc
notb
xchg
jg
js
adc
mov
mov
adc
stos
lea
xor
mov
aas
je
cwtl
mov
add
ja
adc
xchg
insb
push
xor
ret
inc
imull
test
jae
cld
gs
in
into
mov
mov
push
pusha
pop
pop
das
jb
push
inc
push
dec
pop
leave
jp
cmp
xchg
pop
pop
test
popa
xchg
push
dec
fsub
adc
fcmovb
jp
call
mov
mov
sub
int
imul
ljmp
mov
xchg
fcoms
test
sub
cmp
shrb
shlb
popa
pushf
out
sbb
pop
outsb
xor
pop
jne
ss
push
push
cmpsl
stos
jg
sahf
pop
sub
inc
add
add
mov
cmp
out
dec
xor
and
sahf
and
insl
and
pop
inc
fidivs
rclb
jo
cmc
or
and
xchg
cmp
cmp
cmp
push
push
call
insb
outsb
aas
flds
mov
dec
or
jp
jp
and
out
xchg
pop
test
and
pusha
ficomps
mov
test
lahf
xchg
dec
mov
cmc
pushf
inc
and
enter
mov
dec
addr16
in
cli
jnp
mov
xor
loop
and
mov
xor
mov
push
jmp
aaa
lea
add
sti
movsl
lcall
push
fwait
adc
mov
fwait
in
or
mov
lea
add
push
das
icebp
sahf
shlb
dec
xchg
xor
popf
mov
cmp
add
lahf
jmp
repnz
jo
mov
dec
enter
popf
jae
jp
dec
ficoms
mov
ja
aas
mov
mov
int3
daa
jl
repnz
pusha
jns
pop
sti
mov
cmp
scas
xor
in
jne
das
in
jge
dec
fs
jecxz
adc
into
sub
fildll
scas
jae
and
into
xchg
ret
jmp
fdivr
pop
dec
insl
imul
adc
push
jbe
stc
cmpl
in
leave
lods
repz
scas
idiv
sub
and
ficoms
nop
add
sub
pusha
repnz
dec
aad
test
out
xor
sti
add
sub
xor
inc
push
sbb
outsb
mov
jp
sub
stos
mov
orl
js
mov
sbb
popf
push
lds
idivb
adc
mov
fs
iret
shrl
dec
sub
xor
fsts
mov
scas
push
out
jp
or
nop
pop
movsl
lods
icebp
lahf
shl
in
rclb
out
out
jp
dec
into
push
add
ret
xchg
sub
push
push
bswap
fwait
xchg
xchg
sbb
or
dec
xor
and
mov
pop
sbb
push
mov
pop
push
stc
cltd
test
outsb
sub
jne
sub
sub
pop
int
loop
cmp
push
faddl
sub
jge
or
add
rorb
cwtl
out
mov
jne
sbb
icebp
mov
scas
lods
inc
and
test
xor
mov
dec
popa
sub
and
xor
pop
or
jg
add
jno
adcl
aad
popa
enter
mov
push
cmp
add
mov
fstpl
mov
adc
xor
pop
nop
addb
mov
inc
dec
mov
mov
inc
mov
cmp
cmpsl
or
pop
mov
xchg
or
pop
sahf
add
pop
mov
dec
movsl
addr16
sbb
xlat
cli
sarl
sbb
jl
subl
pop
popa
insl
jns
jmp
movsb
lret
fidivrl
pop
push
insl
mov
push
scas
out
add
inc
sbb
mov
cmp
clc
mov
push
mov
xchg
pusha
incl
gs
cmpsl
sub
fmull
jmp
pop
fstpt
push
sub
lock
xchg
andl
fwait
outsl
cs
iret
push
mov
mov
xor
mov
out
inc
mov
fistpll
dec
xlat
lret
add
and
or
pop
insb
mov
out
sub
mov
jo
add
push
pushf
push
mov
inc
pop
fdivr
add
aam
fbstp
xor
sub
nop
add
mov
push
xor
or
aas
cmp
fs
lods
push
roll
leave
jmp
mov
sahf
mov
arpl
sub
mov
and
and
loope
arpl
pop
mov
inc
mov
das
js
inc
and
add
in
in
push
or
cmp
xchg
test
adc
or
sub
ret
or
push
sub
mov
fnstenv
mov
inc
jge
stos
jns
sbb
mov
iret
mov
xchg
jge
push
mov
cmp
pop
sbb
divb
jecxz
xchg
mov
cld
icebp
and
and
in
andb
rorb
xor
jmp
in
cmp
outsl
and
lea
mov
aaa
mov
sbb
fldt
mov
imul
cmpsl
push
mov
in
testb
and
ret
pop
roll
fildl
xchg
test
push
adc
or
xchg
rolb
data16
pushf
mov
imul
dec
or
mov
cli
mov
cmc
das
arpl
pop
fbstp
and
mov
and
iret
sbb
out
or
fdivl
mov
loopne
jmp
add
mov
xor
mov
pop
add
fsts
sbb
aam
inc
mov
sbb
out
inc
xor
jne
sub
hlt
daa
cmpb
js
ret
jb
xchg
sbb
call
adc
mov
mov
icebp
xor
push
push
pop
lea
imull
pop
or
xor
mov
cmova
xchg
pusha
pop
scas
mov
jno
in
inc
sub
dec
xchg
out
mull
idivb
or
add
mov
push
rolb
stc
lods
jg
rcrl
jge
adc
mov
push
xor
test
loope
xchg
call
lret
data16
jle
pop
mov
int
test
jp
cld
jecxz
pop
fcomip
pop
repnz
int3
outsl
in
scas
out
sub
adc
mov
xchg
aad
inc
sbb
hlt
rep
fs
js
jae
or
push
int
lods
inc
add
mov
pop
jo
pop
clc
adc
jle
jbe
xchg
lahf
push
neg
loopne
nop
int
lods
call
repz
scas
subb
sub
aad
pusha
xor
dec
push
push
dec
mov
cmpsb
popa
cmp
inc
mov
ret
add
in
pop
into
imul
add
adc
cld
or
je
call
shl
out
scas
dec
lret
cmc
jae
xlat
xor
push
adc
pop
add
nop
cmp
mov
cmp
pop
mov
push
test
arpl
inc
shlb
hlt
test
cli
jle
sti
sub
stos
push
add
xor
add
out
test
lcall
dec
cmp
add
push
add
daa
xchg
dec
jl
jns
inc
sub
jo,pt
mov
test
push
out
adc
or
in
pop
or
repnz
cmpsb
loopne
test
out
dec
aas
cmpsb
mov
mov
lods
jp
dec
mov
fbld
rolb
shl
xchg
data16
add
cmp
lods
cli
add
lds
push
sbb
dec
test
adc
sub
push
std
xor
shrb
ret
stc
jns
sti
clc
bound
pop
xor
fisubrs
stc
loope
inc
out
push
adc
inc
lahf
popa
jle
js
mov
and
sub
jp
fisubrl
in
adc
outsl
divl
insl
pop
pop
out
pop
or
in
dec
cmp
sub
outsl
mov
dec
add
pop
stos
dec
lea
jo
test
loop
in
mov
adcl
inc
push
mov
mov
cli
loope
in
xchg
js
pusha
or
xor
outsl
push
mov
jno
or
lods
or
xchg
outsl
mov
das
fiadds
movsl
xchg
push
pusha
fsts
daa
jnp
ret
inc
mov
hlt
ficompl
add
fdivs
std
xchg
add
lcall
nop
aad
jbe
mov
jl
mov
sbb
mov
or
lea
rcrl
lods
dec
pushf
div
inc
dec
bound
jmp
lcall
imul
out
adc
lds
mov
dec
repnz
out
push
and
push
mov
jb
mov
cmp
mov
ljmp
outsl
sbb
mov
cmp
pop
sti
sarl
dec
mov
inc
jp
imul
or
mov
dec
jg
sub
dec
sbb
mov
loope
xlat
movsb
lea
xchg
scas
sub
jno
xor
js
popa
or
and
test
test
and
in
and
mov
cmp
and
mov
mov
subl
add
cmc
sub
adc
pop
sbb
mov
insl
mov
in
sub
jb
out
jnp
mov
lock
xor
cmp
inc
pusha
adc
or
sub
sub
daa
xor
stos
repnz
in
mov
lret
mov
sbb
mov
jecxz
mov
dec
pop
mov
lds
add
outsb
bound
dec
push
outsb
popf
fnstenv
jmp
or
xor
incb
sbb
pop
add
or
jns
xadd
sub
fst
or
das
jbe
xchg
std
int3
or
sbb
notl
cli
out
xchg
adc
pushf
adcl
pop
popa
dec
jl
inc
and
sahf
jle
out
mov
les
push
push
jmp
add
call
repz
mov
mov
pop
dec
or
movsw
jmp
dec
sbbl
adc
pushf
in
cmp
jb
sub
and
push
inc
add
pop
xchg
ja
pushf
push
jmp
mov
inc
arpl
pop
mov
aas
addr16
and
xchg
xchg
insl
fsubrl
ljmp
add
adc
ret
sti
dec
fsubrs
push
int
int
les
sbb
daa
into
or
lret
out
lahf
fdiv
cs
cld
xchg
mov
push
sbb
push
or
pusha
xor
iret
xchg
push
clc
repz
idivl
out
sahf
adc
pushf
daa
and
push
daa
jne
lods
pop
scas
add
jp
pushf
mov
add
fwait
push
adc
xchg
frstor
pusha
sub
inc
or
add
test
sub
sbb
pop
inc
xchg
xor
add
repnz
dec
mov
fwait
imul
xchg
sub
jbe
sbb
adc
jle
bound
int3
cmp
push
iret
cli
adc
adc
arpl
push
std
push
dec
xchg
out
pushf
loope
pop
repz
xchg
lods
rolb
dec
fistps
pop
sahf
jbe
xor
jno
outsb
mov
jns
xor
xor
in
out
sbb
add
int3
cld
cld
pop
leave
cmp
insb
mov
jae
dec
ljmp
pop
sbb
jle
pusha
fs
sub
shll
fisttpll
les
lret
faddl
movsb
mov
add
ret
dec
std
test
clc
sbb
fcoml
idivb
cmp
lea
ret
shll
sub
mov
dec
jg
sbb
scas
add
adc
add
lds
jmp
movsl
inc
inc
sbb
fld
insb
lds
lahf
fwait
sti
inc
jb
orl
xor
dec
testl
add
xchg
iret
xchg
rolb
push
push
push
pop
sub
scas
insl
sarb
push
dec
cmp
jbe
xchg
aas
out
js
iret
xor
stos
jecxz
xor
out
roll
and
nop
mov
jg
mov
xlat
mov
ljmp
fwait
aaa
pop
sub
cwtl
jbe
pop
sarl
jle
cmc
pop
mov
jb
mov
fs
xlat
lock
insl
jmp
lahf
rolb
lods
inc
jo
or
pop
ficoms
mov
mov
xchg
push
sahf
jno
aam
lret
mov
es
dec
fs
mov
dec
sti
xlat
adc
in
stos
daa
push
cmpsl
xor
imul
fldl
fs
jae
dec
jbe
stos
xchg
push
jge
dec
cmp
jmp
adc
outsl
imul
insl
xchg
xchg
or
sbb
and
fmull
or
mov
adc
push
pop
daa
mov
lods
xchg
jns
jl
add
int3
insl
xchg
push
xor
xchg
xlat
cld
lods
lods
pop
flds
int
and
ljmp
xchg
std
fbstp
sub
mov
rcr
xchg
gs
and
cmp
sub
push
mov
bound
fnstcw
fildl
scas
push
jb
cmp
ss
movsl
lret
cmc
adc
jl
movl
lcall
int3
xchg
cmp
pushf
leave
xchg
jl
loop
sbb
test
fstl
cmp
ds
xchg
mov
popa
loop
pop
xor
mov
cld
jecxz
stc
addr16
inc
mov
fisttpll
push
cld
push
loope
cmp
jmp
aam
mov
cwtl
inc
push
push
jg
pusha
pop
in
stos
cmp
mov
sbb
gs
stos
or
adc
jp
push
pop
sti
lcall
rcrb
movsl
push
mov
push
in
std
lods
fisttpll
inc
sbb
cmpsb
cli
leave
pop
aaa
pop
push
loopne
outsl
and
dec
aam
mov
sub
sbb
test
xor
jmp
mov
adc
hlt
push
daa
or
rolb
mov
stos
aam
add
icebp
cmp
mov
gs
push
icebp
cmp
or
cmp
fidivl
rcll
int3
jmp
iret
aas
dec
rcrb
imul
cmp
mov
dec
jns
push
pushf
push
les
push
dec
pop
stc
sar
in
jne
mov
sbbb
xor
lock
jbe
or
dec
andl
xor
jp
mov
sbb
inc
stc
insb
dec
mov
stos
or
scas
js
sbb
pop
push
jle
cld
out
cmp
cmp
xchg
cwtl
pop
aas
jl
jecxz
cmpl
shrb
pop
push
in
mov
xchg
mov
mov
lods
arpl
mov
dec
ds
adc
adc
push
rorl
sbb
orb
fwait
aas
or
int
or
xlat
outsl
jne
pop
int
mov
and
or
inc
jne
xor
std
rcll
pop
xchg
popf
test
lcall
mov
xchg
pop
adc
fsubrl
jae
mov
inc
jns
lcall
fisubs
imul
movsb
jmp
dec
ss
outsl
lock
out
xchg
push
push
cmc
adcl
xchg
lret
out
pop
cmp
pop
stos
sti
loope
int3
dec
mov
loop
pop
add
or
daa
int
push
sbb
jge
jle
sbb
inc
es
jge
cmp
sub
xchg
mov
add
int
mov
or
pop
mov
stos
cmp
cs
andl
xor
lret
stos
pop
inc
hlt
test
sbb
daa
mov
addr16
mov
das
xor
jl
inc
rcrb
adc
cmp
add
jae
leave
sbb
aaa
push
cmp
rorb
mov
push
mov
xor
pop
or
or
nop
ds
sub
xor
xchg
xchg
sub
movsb
outsl
xlat
mov
sbb
add
jb
inc
sbb
push
add
stc
addl
sub
aad
dec
adc
fisttps
mov
push
adc
out
movsl
jb
sbb
pop
jo
xlat
pusha
dec
mov
sahf
sub
movsb
mov
push
sub
scas
xchg
fcoms
idivb
int
mov
push
into
daa
lods
sahf
cmpb
loop
add
adc
je
insl
jg
or
jb
add
sub
outsb
mov
ljmp
xchg
mov
push
xchg
fxch
sti
fdivl
adc
das
jl
inc
sub
sbb
inc
repz
pop
dec
mov
in
dec
adcl
xchg
lock
repz
cltd
in
js
sbb
push
xchg
mov
les
xor
dec
mov
out
dec
push
sbb
out
lcall
jno
and
mov
rcrl
lcall
call
or
es
jmp
ds
add
cmp
stc
cmp
fcoms
ja
pop
cmp
pop
rcrl
mov
xchg
std
adc
push
push
or
xor
push
xlat
in
jmp
out
pushf
ret
adc
or
repz
movb
add
leave
jg
test
in
shll
mov
push
adc
movsb
ficompl
mov
sbb
jnp
cmp
dec
cmpsb
scas
jne
pop
dec
enter
push
fisttps
lds
dec
xchg
pop
mov
lock
cmc
test
dec
or
pop
out
ffree
inc
sbb
xor
imul
jnp
jmp
daa
xlat
add
jl
mov
dec
cmp
pop
lds
insl
repnz
xlat
lea
cmp
imull
fistpl
mov
adc
hlt
or
inc
inc
dec
jno
les
xor
imulb
xor
add
lret
mov
test
sbb
retw
fwait
pop
into
cld
sbb
push
mov
sub
rcr
pop
push
jmp
xor
jge
or
inc
jg
out
pop
xor
jb
cmpsl
int
add
pop
push
outsl
xchg
gs
pop
call
mull
scas
addr16
mov
push
mov
aas
cmpl
inc
mov
int
xchg
inc
xchg
push
or
xchg
ss
ficoml
jg
dec
repnz
and
pop
imul
ljmp
or
xchg
push
dec
cmpsb
push
lods
push
cmpsl
rol
pop
ret
or
fwait
inc
and
cmpsl
sub
cmp
adc
nop
mov
icebp
and
mov
push
inc
xchg
enter
inc
and
cs
gs
mov
sti
sti
add
fs
dec
or
fdivl
lds
xlat
out
mov
adc
cmp
call
sub
cmp
and
mov
add
xchg
xchg
cmp
popa
pusha
jp,pn
mov
push
fnsave
lcall
sub
neg
aad
imul
sub
test
dec
mov
mov
pop
jmp
cmovl
movsb
lea
jmp
ror
fists
inc
xchg
jge
mulb
push
bound
jbe
xchg
adc
mov
gs
jne
test
ja
popf
adc
dec
mov
mov
xchg
insb
stos
mov
lods
push
adc
sbb
adc
cmp
mov
mov
lods
mov
mov
or
mov
jge
pop
sbb
das
in
sub
adc
inc
push
push
cmp
lods
xor
lcall
xchg
xchg
cli
mov
andl
push
ljmp
test
sti
jmp
incl
addb
mov
cmp
imul
mov
int
xchg
sbb
lods
jb
cs
mov
cld
dec
fsubrp
or
ret
lahf
leave
scas
or
or
bnd
mov
daa
insb
lea
sbb
ds
mov
mov
pop
ret
into
dec
shrl
sub
xchg
adc
sbb
sub
cmpsl
xor
aam
xchg
cmp
jae
mov
mov
es
push
testl
lods
add
mov
push
jb
cmc
pop
rcrb
xor
inc
popf
push
fidivl
stos
pop
int
arpl
imul
mov
pusha
cmp
mov
or
ds
pusha
gs
fmul
mov
dec
push
pop
lock
mov
xor
push
jnp
push
or
and
xor
mov
inc
ja
xchg
hlt
mov
in
popa
jle
movsl
and
ss
stos
imul
lahf
mov
xlat
jle
xor
ljmp
push
jg
inc
cltd
sub
enter
pop
sub
push
xor
sub
xchg
bound
scas
sti
push
sbb
mov
sbb
loope
cli
es
cmp
shll
subl
dec
adc
in
sahf
mov
iret
cmp
sub
sahf
inc
dec
jne
aad
add
adc
insb
repz
stc
out
sbb
push
popf
int
or
iret
and
pop
aas
mov
fmull
inc
mov
pop
inc
cwtl
jbe
jbe
pop
sub
stc
loopne
test
enter
lret
sbb
jne
in
cmc
mov
push
add
pop
jns
fstpl
lods
xor
pusha
sti
sbb
sbb
and
popa
loope
adc
fwait
dec
mov
xor
pop
jmp
lds
and
dec
lret
fwait
daa
jae
cwtl
xchg
mov
mov
fadd
xchg
or
mov
stc
js
push
loope
or
xor
stc
add
in
rcll
jp
out
mov
dec
push
addr16
xchg
insl
sbb
ljmp
repz
rorl
add
cmp
jl
into
and
enter
jmp
mov
fadd
mov
sub
in
in
jp
bound
lahf
cwtl
std
pushf
sub
ret
lods
or
lods
into
mov
and
add
hlt
xor
stos
fistpll
xchg
mov
out
imul
add
adc
fcmovu
mov
mov
mov
int3
pop
outsl
pop
fwait
test
mov
cltd
fucomip
or
push
loopne
jae
andl
or
out
outsb
pop
das
imul
repz
popa
das
adc
inc
add
flds
xorl
mov
inc
sbb
push
mov
aad
es
fistpll
pop
xchg
pop
xchg
cs
test
fwait
mov
lock
aaa
dec
daa
imul
fidivrs
pop
mov
lods
idivl
jl
inc
push
push
fucom
lret
add
rcl
hlt
inc
sbb
shr
sub
inc
and
xchg
insl
jns
adc
push
cmp
push
push
icebp
lret
push
mull
xchg
orb
scas
pop
mov
inc
xor
inc
lods
jno
mov
mov
clc
push
mov
push
popf
int3
jge
xsha256
cmpsb
adc
push
and
sbb
cmc
cmp
push
lcall
scas
or
mov
js
shr
movsb
insl
stc
test
daa
clc
call
popf
sbb
jl
stos
fstl
mov
ret
add
add
push
adc
rcrb
bnd
mov
mov
int
and
subl
aad
mov
ret
push
push
xorb
scas
es
sahf
jns
sar
pop
bswap
sahf
adc
and
movsl
mov
leave
ds
sahf
adc
hlt
fbld
adcl
mov
fisubrl
dec
mov
in
repz
lods
loope
out
jp
repnz
xor
leave
cwtl
sub
inc
pop
int
into
jg
fwait
icebp
pop
int
mov
push
pop
loope
or
jns
iret
fisttps
jle
dec
repz
dec
repnz
lret
mov
enter
jns
xchg
test
push
mov
sbb
xlat
or
faddl
xor
ret
jecxz
xor
xlat
push
xorl
pop
les
dec
mov
int3
xchg
xchg
fucom
pop
jg
dec
jns
cltd
mov
cli
push
movsl
add
adc
dec
xor
lret
push
rcr
push
mov
outsb
cltd
jbe
pop
jmp
pusha
or
push
jle
enter
or
mov
sbb
sub
mov
mov
mov
add
adc
mov
adc
push
dec
mov
inc
xchg
sub
inc
jp
jo
sbb
mov
xor
jg
test
mov
xchg
xor
push
ljmp
shl
out
out
ret
jle
int3
dec
icebp
sub
das
in
add
loope
mov
push
ljmp
lods
xor
mov
pop
cwtl
or
clc
lahf
lods
lahf
lahf
clc
sbb
mov
adc
cwtl
and
shll
ret
out
out
inc
rorl
insb
ret
sahf
xchg
cli
test
sbb
sub
pop
aas
or
imul
cmc
mov
dec
popa
sbb
lods
clc
add
cld
das
mov
sub
mov
ficoms
int3
dec
dec
rcll
pop
jmp
enter
cli
icebp
je
jg
add
div
xor
imull
mov
out
pop
push
ja
iret
push
inc
pop
int
pop
cwtl
cmpsl
lcall
inc
leave
jbe
mov
xchg
xor
mov
test
in
dec
repz
and
pop
add
call
xor
idivl
loop
mov
fwait
rorl
lret
push
mov
and
addb
push
fucomp
cmp
bound
push
aad
daa
adc
dec
jle
ret
mov
cmp
xchg
xchg
xchg
or
lds
daa
iret
mov
adc
int3
aaa
jmp
das
and
fdivl
ret
shrb
pop
mov
out
fwait
pop
dec
pop
fsubs
aad
cs
loop
sub
sub
sarb
in
stc
sbb
mov
sub
or
popl
pop
mov
pop
ss
notb
testl
xor
jecxz
mov
ret
in
pushf
mov
jl
cld
mov
mov
push
nop
jmp
jbe
push
cltd
push
scas
cmp
cs
jl
adc
sti
shl
mov
add
shlb
add
mov
dec
mov
lcall
pusha
xchg
test
mov
cmpsb
mov
adc
jl
dec
adc
test
push
cli
add
loope
outsl
js
push
ljmp
or
repz
sub
test
das
out
xchg
scas
and
cmc
mov
inc
push
aad
pop
enter
imull
call
xchg
jo
data16
dec
xchg
mov
shl
xchg
hlt
xor
lods
xchg
inc
push
sub
mov
mov
mov
jo
sub
notl
test
xchg
sub
shlb
jecxz
or
push
out
bound
and
cmp
jge
pusha
notl
sub
repz
clc
cmp
jno
test
xor
adc
shll
jp
cmpsl
call
dec
lods
test
jg
dec
iret
jae
mov
push
into
cmpsb
iret
add
mov
fnstsw
or
inc
inc
inc
ljmp
cmpl
jecxz
out
leave
addb
imul
pusha
dec
mov
push
ret
push
and
je
adc
int3
lods
jo
mov
lods
mov
cld
imul
xor
mov
jle
push
nop
sub
sub
add
cmp
pushl
xchg
mov
imul
mov
jbe
adc
fwait
and
movb
adc
mov
fnstsw
mov
or
dec
sub
sahf
lock
enter
stc
dec
mov
inc
xlat
dec
mov
rol
xor
stos
adc
rolb
in
stos
xchg
enter
xchg
adc
push
xrelease
icebp
bndldx
fnstcw
push
fwait
mov
pop
cmc
enter
pop
and
cli
lcall
imull
orb
neg
daa
loope
pop
cmp
push
mov
std
in
lret
rclb
inc
mull
xchg
xchg
lods
xchg
mov
repz
rcrl
fstpl
jp
dec
aaa
dec
pop
inc
fwait
inc
fwait
in
cmp
ljmp
xorl
shlb
push
xor
cltd
std
lahf
cmpsl
sub
push
mov
inc
jmp
clc
xor
mov
and
add
jmp
aam
out
loop
inc
stos
imul
push
pop
repnz
es
jno
ret
js
sbb
inc
jne
in
dec
mov
inc
mov
clc
inc
aaa
pop
out
inc
lret
jg
mov
mov
jecxz
popf
icebp
pop
shrl
xchg
insl
jmp
pop
and
insb
xchg
sbb
pop
aam
imul
or
stc
dec
jne
pop
sbb
sahf
xchg
jle
jp
cmp
outsl
and
jbe
pop
or
sbb
les
jecxz
jnp
lret
xchg
push
mov
icebp
dec
cmp
xor
out
mov
stos
idivb
add
inc
js
xchg
jp
lret
xchg
fdivrp
cmp
adc
mov
dec
sub
or
insb
mov
jnp
mov
push
bound
fstp
sbb
dec
lahf
sbb
mov
jl
cmp
aaa
pop
push
loope
or
into
stc
push
sarl
das
fsub
mov
jge
sub
xchg
pop
fists
scas
loopne
ja
adc
jecxz
je
ret
pusha
add
int3
jle
xlat
mov
add
arpl
jnp
jbe
mov
jbe
subl
jge
out
adc
sbb
scas
mov
pop
call
movsb
mov
xor
test
mov
movsb
sub
add
jecxz
inc
xchg
push
movsb
cmpsl
fstps
mov
int
jle
xchg
scas
fsub
addl
stos
in
faddl
or
scas
add
dec
dec
pop
cld
dec
and
rcrl
xchg
fstps
adc
imul
pusha
pop
lret
sub
sbb
int
mov
mov
mov
mov
xchg
pop
test
sbbb
add
adcl
add
jg
pop
mov
scas
cwtl
aam
push
rolb
mov
daa
xchg
lods
push
repnz
ret
arpl
std
stc
xor
inc
push
jmp
mov
pop
jle
insb
jb
cmp
pop
or
or
popf
inc
fisttps
ds
cmp
add
scas
xchg
mov
cmp
sbb
in
dec
xor
iret
xor
lret
lret
test
scas
test
cmp
int
stos
outsl
or
orb
inc
imul
mov
mov
das
xchg
out
mov
loop
rclb
loopne
test
ljmp
mov
mov
inc
xchg
ret
daa
pop
dec
mov
pusha
push
addr16
sbb
sbb
and
cmp
and
hlt
ret
push
mov
jle
or
sub
sbb
sahf
mov
adcb
sbbl
int
lret
movsb
out
mov
pop
dec
int3
sbb
iret
fdivr
mov
scas
dec
pop
add
mov
inc
adc
insl
dec
enter
pop
ret
ja
inc
or
add
imulb
push
dec
and
jno
jl
dec
push
and
push
inc
jl
jg
jge
xchg
in
sar
and
pushl
xor
sbb
fcoms
es
fdivl
outsl
mov
stc
mov
xchg
mov
dec
in
lcall
or
ljmp
jmp
xchg
or
pop
sbb
outsb
or
das
daa
or
and
cmp
and
pop
sub
and
sbb
and
push
fs
sub
mov
cld
ljmp
pop
mov
pop
push
in
mov
cli
mov
push
ja
lea
sarl
lods
test
or
add
in
int
mov
outsb
pop
scas
aad
not
cmc
sub
mov
sbb
dec
jmp
test
jns
push
sahf
mov
jmp
dec
in
fldl
rol
iret
jnp
bnd
mov
enter
xchg
dec
cmp
add
mov
mov
leave
hlt
mov
out
mov
push
es
mov
fstpl
dec
out
sub
idiv
pop
ret
inc
imul
mov
add
sbb
xchg
lock
lahf
dec
jbe
fwait
testb
sbb
mov
repnz
inc
call
and
or
into
jae
pop
sbb
int3
xchg
stc
sbb
pop
add
lahf
ror
adc
xchg
sbb
int
jnp
push
sub
lea
mov
xchg
aas
das
jb
push
ret
xlat
mov
dec
push
pop
cmc
jne
lock
fs
fdivr
dec
sbb
add
in
sub
addl
dec
xchg
andb
sbb
out
inc
and
into
dec
loope
cwtl
mov
in
jne
mov
movsl
sbb
and
xor
outsl
movsl
popa
lahf
stos
mov
mov
push
ret
xor
repz
movsl
inc
push
pop
mov
mov
out
movsb
xchg
fmull
cs
add
outsb
adc
mul
jg
fistps
addr16
in
jge
pop
outsl
movsl
es
fsubr
in
stos
xchg
sbb
mov
into
rorb
ret
psubsw
xchg
and
jae
cmp
and
test
jle
and
mov
outsl
sbb
sar
push
mov
dec
data16
sub
push
or
rcll
loope
sarb
es
cmpsb
and
xchg
call
cmp
loopne
cmc
jge
adc
into
std
cmpsb
fwait
mov
mov
in
cwtl
add
sub
lahf
in
fmul
ja
inc
push
popa
dec
push
xor
and
int
pop
add
pop
fwait
lret
lods
pop
fwait
jae
dec
mov
xchg
addr16
mov
adc
ror
sahf
xor
aaa
popa
loopne
cld
lret
test
sub
cmp
jb
aaa
mov
xor
cmp
stc
ja
idiv
into
dec
mov
aaa
cmp
dec
or
daa
cli
and
and
pop
pushl
pop
jnp
xchg
movsb
push
in
aas
lret
cmp
out
push
push
inc
sbb
xorl
sbb
daa
or
push
cwtl
loop
fdivrs
or
outsl
inc
sbb
ret
cmp
fdivrs
inc
in
adc
pop
insl
imul
inc
cmp
dec
in
lea
pop
outsb
outsl
jecxz
push
or
cmp
lcall
ds
xor
int3
xor
pop
sub
push
in
jmp
add
or
xor
dec
cmpsb
arpl
scas
lds
jnp
mov
cmp
push
sbb
das
mov
sub
pop
sub
or
xchg
sbb
adc
js
xor
cli
lods
lcall
adcl
sbb
dec
movsb
xor
adc
jle
fs
iret
movsl
out
mov
ret
jns
js
mov
mov
addr16
popa
xlat
fistps
push
and
adc
int
and
das
aas
push
pop
insl
xor
inc
jp
lods
mov
xchg
mov
lea
pop
cmp
xlat
inc
ret
das
push
in
mov
call
out
fbstp
mov
stos
jbe
inc
in
sbb
cmp
lods
cli
mov
cld
pushf
lret
inc
mov
insb
mov
dec
imul
cmc
stos
mov
dec
xor
push
jo
gs
xor
les
fwait
cli
ss
inc
popa
enter
dec
pusha
or
inc
mov
inc
push
loopne
int
popf
dec
jge
sub
mov
ja
mov
jb
fcoml
je
pusha
pop
mov
lahf
and
int
les
dec
std
sub
mov
cmc
jge
mov
ror
outsl
je
or
gs
lahf
movsb
pop
jnp
add
loope
xor
dec
addr16
lods
sub
notb
inc
dec
in
mov
xor
jns
sub
inc
or
sbb
pop
push
ret
push
in
stc
pop
inc
pop
cmpsl
add
add
cwtl
outsb
xchg
push
jo
movsb
push
push
cli
jbe
fcmovbe
ficoms
mov
lds
and
pop
xor
das
xchg
testb
push
test
push
je
inc
hlt
ret
mov
test
daa
xor
adc
add
je
pop
mov
data16
negl
sub
jle,pt
in
loop
sbb
sub
out
pop
mov
scas
dec
pop
lret
jecxz
in
jno
xchg
cmpsl
cmp
bound
mov
lret
inc
shlb
ss
lcall
sub
pop
lcall
sub
sbb
xor
inc
mov
mov
inc
in
test
lods
insl
pushf
ret
scas
mov
sbb
das
jnp
jns
sub
push
sbb
and
scas
mov
sar
mov
into
ja
add
fs
lock
xchg
lock
pminub
les
jns
scas
stos
icebp
lcall
jl
mov
mov
movsb
adc
jmp
xchg
in
fdivrs
cmc
xchg
xchg
mov
add
mov
sbb
rclb
dec
sbb
call
push
lock
jno
jle
fldl
bnd
shlb
js
testb
xchg
iret
rcrb
int3
mov
fdivs
or
inc
pusha
xchg
add
ror
dec
sub
gs
push
or
push
int
mov
out
repz
rorl
shll
xchg
mov
mov
fidivs
std
add
inc
add
andb
ffree
or
cmp
or
add
inc
cmpl
push
pushf
pop
xchg
inc
imul
mov
xor
loop
outsb
add
popa
push
insl
in
jne
ljmp
cmpsb
lock
mov
jp
xor
les
pop
or
nop
inc
mov
out
cwtl
ljmp
sbb
mov
rol
jne
mov
dec
leave
clc
jg
jb
xor
xchg
lcall
in
push
dec
lahf
sbb
ret
mov
aam
je
cwtl
add
out
dec
rcr
loope
sub
xorl
push
mov
lods
jb
test
and
cmp
jge
xor
sarb
int
sbb
and
adc
inc
xchg
addl
xor
xor
sub
jmp
jb
icebp
cltd
mov
xor
cmp
js
leave
adc
xlat
in
icebp
lds
mov
fidivrl
fstl
adc
inc
mov
mov
lahf
pop
lea
ret
sub
bound
push
int3
or
pop
mov
notl
ret
lret
pop
aad
xchg
mov
dec
and
inc
lods
jg
pop
sarb
imul
in
aaa
movsl
dec
fcmovnu
pop
cld
inc
jns
cmpsb
ss
pop
sub
subb
pusha
shll
inc
outsb
mov
out
and
ret
sbb
lods
xchg
lea
popf
jns
stos
xchg
sbb
pmullw
mov
pop
lret
fs
pop
stos
cmp
xor
mov
jbe
mov
cmpsl
test
inc
out
sbb
push
mov
sub
push
inc
mov
int3
inc
mov
fistps
stc
jo
pop
inc
mulb
pop
pop
mov
dec
xlat
pop
mov
add
rcr
out
mov
sub
add
pop
push
or
add
rclb
test
jle
cmp
testl
sub
inc
aam
push
and
jno
push
ljmp
cmc
pop
lods
addr16
mov
sar
mov
cmp
jno
sbb
inc
mov
ljmp
push
mov
adc
lret
xlat
xor
imul
out
aam
mov
in
add
xchg
push
out
ltr
mov
inc
inc
bound
clc
jp
in
pop
aad
shlb
mov
adc
ss
adc
mov
inc
popf
test
mov
mov
sbb
std
dec
xor
mull
ss
sbb
or
lods
xchg
mov
in
fisubrs
inc
ljmp
out
out
dec
inc
loope
xor
sahf
test
jmp
sub
rolb
jmp
stos
push
fiaddl
sahf
and
mov
xor
jbe
inc
xchg
jno
mov
mov
mov
mov
xchg
movsb
aas
cmp
jle
jg
or
cld
inc
inc
mov
cmp
sub
push
test
stc
mov
mov
fsubrl
int
lahf
cmpsl
cwtl
int
nop
lods
in
xchg
data16
int
pop
int
mov
leave
jp
pop
lds
jns
lcall
je
fcompl
adc
arpl
jnp
hlt
rclb
lahf
mov
in
dec
push
loope
cmp
inc
jo,pn
cmp
in
and
jle
fdivrp
outsl
sub
jb
add
jo
ret
xlat
ret
insb
add
adc
dec
aam
insb
inc
insb
daa
pop
xchg
aaa
mov
or
rorl
dec
xchg
xchg
call
jl
push
lods
das
push
insl
push
mov
pop
jbe
mov
or
fs
cmc
jg
dec
fldt
ret
js
push
imul
lods
mov
sahf
or
ret
jns
lret
mov
adc
cld
insb
fxch
jae
pop
fimull
xchg
shll
arpl
pop
sbb
xor
sub
push
jg
mov
dec
push
insb
mov
pop
cmpsl
cmp
mov
xchg
movsb
cmp
cmp
out
loope
ret
fs
xchg
out
into
es
enter
clc
dec
push
fldz
pop
xor
inc
push
stos
jg
dec
sbb
mov
scas
jns
lret
adc
cli
mov
cld
inc
xchg
xchg
aam
and
jb
ret
lock
and
mov
loopne
daa
pop
xchg
lods
jb
mov
push
mov
rol
mov
adc
xchg
lahf
fwait
dec
insl
adc
push
push
loope
or
imul
or
incl
inc
int
sbb
jns
cmp
xchg
test
inc
fldcw
mov
sbb
push
loope
pusha
or
pop
rolb
out
out
adc
stos
arpl
shrl
dec
scas
sbb
mov
dec
xchg
pop
sbbl
add
fsts
popf
inc
cmp
sbb
fldl
pop
jl
cmc
mov
push
lret
cmp
xchg
sub
cmp
imul
push
in
enter
and
xor
cmp
test
mov
dec
mov
cmp
xor
dec
test
cwtl
sbb
ljmp
mov
mov
cmpb
and
dec
mov
jne
fcompl
push
pop
mov
and
loope
inc
xchg
xchg
or
fdiv
imul
roll
pop
and
sub
out
lods
mov
xchg
mov
daa
mov
sti
push
rcrl
jle
push
imull
and
ds
mov
mov
dec
jb
push
push
hlt
cmp
pop
gs
cmp
js
pusha
loope
mov
jnp
psubsw
xchg
pop
mov
in
xor
lcall
pop
jne
inc
xlat
or
mov
adc
flds
mov
ffree
add
pushf
pusha
add
mov
cmp
outsl
out
pop
add
movhlps
fisubrs
shll
cli
mov
daa
mov
xor
fsubl
mov
js
stos
pop
bound
pusha
sub
xor
mov
jae
pop
mov
fwait
int
jbe
cwtl
out
mov
pop
cmpsl
popa
and
jecxz
mov
je
call
mov
cmp
stc
mov
ret
mov
dec
cmp
or
scas
push
and
aas
int3
ss
xor
fwait
push
ja
adc
fdivrl
adc
push
lcall
push
push
clc
pop
lods
inc
jbe
ret
ret
push
stos
xchg
push
cmovns
inc
nop
adc
add
mov
xchg
push
pop
xorb
dec
aaa
add
or
movsl
out
fsubs
or
jmp
shlb
xchg
jg
std
hlt
mov
js
cmp
scas
nop
pop
cmp
cmp
lods
mov
pop
push
loopne
dec
cwtl
fiaddl
mov
jl
jae
dec
and
in
roll
addr16
insb
lret
mov
sbb
sub
add
fisubrs
lods
cmp
lock
or
pop
pop
mov
out
lea
mov
lea
aaa
jl
add
rorb
es
mov
iret
std
popa
mov
push
std
pusha
mov
je
xor
push
push
insb
push
test
negb
xor
push
mov
test
pop
int
jnp
inc
push
daa
cmp
lods
clc
push
je
movsl
mov
rcl
stc
in
mov
jae
test
xor
xor
sahf
push
mov
fwait
pushf
cmpsb
sub
enter
push
jne
or
stc
enter
cmpsb
sbb
lea
mov
int
imul
inc
or
pushf
cmpsb
int3
pop
loop
pop
mov
into
bnd
mov
stc
aas
stc
int3
inc
push
cmpsl
js
push
jmp
jle
sarl
pusha
lcall
jp
jl
loopne
sbb
inc
dec
dec
jge
xor
sar
cmp
pusha
mov
test
sub
pop
enter
mov
in
xor
imull
cmp
pop
fidivs
mov
or
cmp
jp
mov
aad
adc
ret
or
inc
jecxz
mov
mov
in
out
pop
sarl
cld
mov
jg
push
xor
mov
sub
dec
sub
int
ja
cltd
jl
mov
add
or
mov
int3
jns
iret
add
push
incb
adc
pushf
mov
pop
jns
mov
mov
mov
pop
fmull
stos
jecxz
mov
std
pop
or
push
mov
insl
je
xor
nop
jmp
int3
mov
adc
xchg
mov
xchg
insb
and
out
int
adc
mov
push
dec
jmp
sub
mov
push
dec
popf
pop
mov
loope
dec
adc
lds
loop
jl
xor
enter
ret
mov
in
and
mov
sar
enter
das
jmp
sub
dec
cld
jmp
mov
dec
fsub
repz
in
scas
loope
rclb
repnz
shl
dec
adc
cmpb
sub
mov
popf
cmp
lahf
pop
xchg
pop
pop
mov
mov
out
out
dec
ds
xor
and
outsb
int
rorl
lods
sbb
inc
sti
sbb
jecxz
cmp
jno
fcmovnbe
or
xor
in
scas
aad
ret
push
jo
mov
js
sub
dec
jp
dec
sbbl
es
mov
aad
stos
cmp
push
icebp
hlt
sti
and
imul
iret
mov
popf
or
mov
pop
cld
mov
cwtl
nop
xor
jecxz
pop
xchg
dec
or
cmp
push
adc
jle
out
hlt
mulb
into
cvtdq2ps
push
cmc
aaa
xchg
cltd
jb
xor
sahf
push
fs
in
aad
pop
aad
mov
push
and
adc
insb
das
cmp
lods
imul
fs
mov
arpl
xor
or
rcrl
loop
adc
push
aad
xlat
cmp
loope
arpl
repz
cmpsl
ljmp
jl
xchg
iret
or
cltd
pop
push
jae
mov
push
mov
hlt
cmc
xchg
mov
xor
cld
pop
addr16
es
inc
in
cmp
and
dec
addl
mov
fucomp
dec
pop
pop
adc
adc
insl
js
outsl
mov
dec
adc
or
mov
push
jl
int
aam
and
clc
jne
test
xor
pop
mov
dec
ljmp
jl
rcr
xor
xlat
lahf
add
imul
add
jmp
cmp
and
sub
xor
mov
jb
mov
jo
insb
nop
aaa
in
icebp
lods
and
sbb
fildll
jbe
sbb
stc
js
int
lds
and
pop
repnz
jne
sar
mov
clc
out
jo
pop
in
or
outsb
rorl
cmp
loope
jne
addr16
mov
dec
jmp
push
push
sub
test
or
adc
jg
mul
popf
xchg
mov
movsl
subl
pusha
cmp
mov
lock
xor
imul
sub
inc
xlat
push
rcll
sti
xor
mov
iret
in
inc
mov
and
mov
sub
sbb
jecxz
cwtl
lods
xchg
push
cwtl
xchg
fs
paddd
add
cli
lcall
out
jno
mov
dec
orb
insl
mov
nop
pop
or
jecxz
test
pushf
shl
icebp
int
xchg
scas
jb
outsl
ds
dec
push
cltd
cwtl
or
cmpsl
mov
mov
ficomps
in
and
in
dec
pop
jge
or
pop
mov
inc
adcw
push
sbb
cmpsl
ror
jnp
pop
ja
icebp
xor
jg
inc
sti
add
adc
orl
and
add
stos
or
xchg
js
jae
pop
xor
dec
or
in
scas
je
cmp
adc
into
inc
hlt
adc
int
cmp
out
add
mov
loope
mov
xchg
test
mov
js
popa
sbb
cmp
arpl
lods
lds
or
mov
ud1
fs
lea
movsl
jo
sahf
adc
or
add
mov
sub
add
fwait
and
xchg
inc
lcall
int3
fwait
xchg
sahf
ss
jg
lahf
pusha
data16
adc
sahf
add
mov
dec
and
cltd
xor
push
dec
push
rclb
in
imul
insl
arpl
aam
jl
mov
outsl
mov
mov
lret
adc
add
xchg
lea
jmp
lea
mov
int
jmp
out
mov
and
lahf
aaa
cmp
xor
shll
lds
cmp
jo
int3
mov
lret
xlat
jp
filds
inc
adc
xor
movsl
les
stc
inc
pop
mov
jmp
xchg
sbb
xor
dec
mov
dec
popf
mov
cmp
pushf
cmp
mov
adc
lahf
mov
add
jmp
jns
push
test
call
fcmove
pop
cmp
add
call
rcr
cmp
adc
push
adc
add
mov
mov
inc
inc
sbb
adc
cltd
inc
data16
xchg
adcb
scas
cmc
into
mov
push
stos
das
rolb
call
or
pop
mov
push
sbb
lea
pusha
add
imul
pop
mov
addb
sbb
mov
stos
dec
popf
fs
xchg
dec
shlb
dec
pop
sbb
adc
sbb
xchg
out
push
rolb
dec
and
imul
lcall
mov
dec
sbb
adc
jae
loop
push
xorl
inc
out
rcll
jno
icebp
jns
fwait
mov
jb
inc
xor
xchg
test
mov
aaa
inc
insl
and
cmp
cs
mov
adc
dec
repnz
rorb
dec
mov
and
lds
mov
or
dec
out
sub
pop
adc
inc
dec
test
rcrl
mov
ret
mov
sbb
dec
fimuls
mov
hlt
js
repz
fwait
inc
imul
mov
sub
push
mov
jmp
mov
jno
movsb
push
ja
ficoml
test
fdivrs
pop
pop
scas
xor
inc
sbb
lcall
pushl
pop
mov
mov
hlt
gs
pop
leave
cmc
push
divl
mov
shl
jbe
mov
sbbl
xchg
lods
fldcw
xchg
jo
mov
sub
jbe
lcall
mov
jno
addr16
data16
xchg
jle
es
mov
cmpsb
out
add
push
mov
cwtl
fisttpl
pop
and
add
lods
cli
jge
mov
insl
cwtl
sbb
sub
jb
neg
std
popa
jmp
add
cmpsb
sbb
fs
xlat
nop
fcoml
aaa
in
mov
les
push
push
lret
in
inc
jno
cs
aam
xchg
jg
sbb
jp
out
mov
inc
std
fcoms
aas
adc
mov
lods
push
xchg
adc
sbb
pusha
lret
xchg
or
scas
fsubrs
movsl
sti
out
out
xor
cmp
lds
shrb
das
loope
push
loopne
enter
gs
or
mov
jge
adc
cs
dec
popf
xor
scas
jmp
inc
mov
fists
sub
sub
divb
les
jmp
test
cs
mov
sub
loop
hlt
pop
fimull
cwtl
jno
push
mul
cmpsb
sbb
scas
mov
ret
pop
cmp
sub
arpl
adc
testl
mov
or
das
adc
jno
jg
dec
insb
nop
outsb
mov
xor
cs
add
mov
out
lret
nop
fistpll
adc
movsl
sub
jb
lahf
sahf
mov
jecxz
clc
leave
push
dec
push
jns
int
negl
jp
cmp
fs
shl
pop
icebp
std
stos
push
add
mov
mov
xor
inc
fs
clc
fimull
jmp
push
dec
nop
addl
jmp
clc
orb
sbb
dec
mov
dec
xchg
pop
movsb
pop
negb
mov
and
and
outsb
lret
jp
inc
mov
xorb
dec
cs
loope
fldenv
fcoml
cmp
inc
dec
xchg
jmp
fdivl
addr16
cmpsb
inc
inc
adc
jmp
mull
scas
ljmp
xchg
in
mov
xor
dec
sub
aaa
sahf
cli
std
or
add
xchg
xchg
das
jb
enter
je
and
addr16
lock
das
outsb
stos
push
inc
daa
jb
mov
je
sbb
repz
mov
inc
int
out
and
push
mov
aam
lsl
adc
stc
pop
in
sahf
xor
jno
les
and
scas
je
cmovo
fs
push
add
mov
xor
lret
jmp
ss
mov
in
xchg
pop
or
repnz
mov
push
mov
pop
lea
pxor
xchg
xchg
sbb
ds
mov
or
mov
inc
mov
mov
and
addr16
shll
testb
xor
std
lret
pop
and
outsb
adc
shll
inc
ret
dec
scas
sub
push
pusha
movsb
paddd
and
mov
mov
dec
push
xchg
out
testb
ja
mov
ret
stc
pusha
pushf
stos
xor
out
push
fs
out
jmp
adc
mov
lock
sbb
imul
les
out
and
jle
lock
pop
dec
cmp
dec
jg
ljmp
lock
pop
push
pop
dec
ss
cltd
add
jge
pop
add
hlt
decb
repz
gs
and
lcall
test
adc
jge
xor
jnp
gs
sub
pop
and
or
sarl
ret
jb
fistpl
in
cmpsb
in
cmp
fs
imul
jno
popa
clc
push
hlt
mov
and
jnp
imul
fwait
jns
lahf
bound
mov
jp
jne
adc
push
sbb
adc
jbe
dec
adc
mov
mov
jnp
cwtl
inc
into
pusha
sub
test
dec
add
inc
dec
hlt
lods
das
adc
add
sub
filds
imul
repz
in
icebp
ds
sub
inc
xor
jno
inc
loopne
ret
xchg
cs
sahf
xchg
dec
repz
dec
inc
repz
loope
popf
adc
push
xor
fs
mov
xlat
lcall
adc
jecxz
in
shrb
shlb
mov
inc
fsubr
sti
aad
out
mov
mov
and
movsl
push
pushl
mov
mov
repz
cmp
cwtl
add
sbb
add
test
int3
push
or
mov
sti
push
jmp
push
fldenv
add
fdivrp
movsl
jb
sbb
test
sub
les
jmp
sbb
dec
and
cmp
add
fs
sbb
mov
mov
and
leave
mov
sub
cmp
iret
and
xor
js
dec
je
das
cs
mov
cli
lret
add
out
jecxz
inc
sbb
mov
movsb
mov
scas
hlt
testb
mov
jne
out
jne
add
cmc
insb
fnstsw
xchg
clc
sub
ret
mov
lods
pminub
and
cmc
fs
sbb
loop
aad
sbb
or
rorb
loope
loopne
push
insl
push
xor
div
mov
add
mov
mov
xor
and
sarb
out
push
mov
ret
dec
xor
pop
sub
pushf
incb
adc
sub
in
dec
inc
xchg
lods
rcrl
dec
inc
sub
sbb
xchg
jg
ljmp
cmp
sarl
xor
lock
dec
mov
pop
rolb
es
imul
inc
test
and
movsl
repz
outsb
ljmp
push
andl
mov
inc
dec
push
int3
cltd
sbb
in
outsb
sub
ret
sub
and
ret
popa
nop
std
or
fstps
sbb
jns
outsl
lahf
mov
mov
push
rclb
pop
sub
add
lcall
mov
sahf
fstps
ds
fdivs
cmp
adc
jp
or
or
aaa
and
sahf
movsl
cmp
xchg
and
dec
fdecstp
xchg
jge
movb
into
fimull
ret
pop
sbb
pop
adc
adc
outsb
not
xchg
out
sub
insb
test
sbb
xchg
dec
add
adc
jno
or
out
pop
mov
xchg
mov
aas
fwait
sbb
jmp
xrelease
lret
dec
nop
test
sarb
cmpsb
out
jbe
js
xchg
mov
xor
jb
xchg
data16
cmpsb
bound
mov
push
jmp
mov
push
mov
jb
and
cmp
cmpsb
push
fdivrs
jb
push
jecxz
ror
jae
jmp
add
scas
jno
xchg
daa
ficompl
loopne
cmp
sbb
repnz
jbe
jg
mov
dec
cmp
test
insb
aad
clc
in
push
inc
cmp
jp
jns
popf
jge
dec
xor
dec
cmp
dec
ja
fwait
scas
mov
add
loope
or
jmp
mov
scas
or
sub
das
sbb
sub
subl
imull
pop
sub
cld
cmpb
dec
and
cld
outsl
cmp
inc
dec
int
sarb
sub
clc
push
int
mov
push
pop
pushf
xlat
test
cli
nop
push
rolb
inc
push
sbb
jbe
mov
adc
call
jmp
jmp
je
fsubrs
out
sub
lss
jl
mov
dec
and
iret
dec
mov
pop
jl
mov
test
cwtl
int
loop
sub
stos
xor
leave
mov
mov
cmpsl
cli
mov
ja
das
xchg
adc
lahf
add
and
sbb
jl
fdivrs
fistpl
cmp
jl
add
and
enter
pop
sahf
sahf
mov
jnp
mov
adc
push
test
out
mov
mov
adc
mov
sub
adc
mov
loop
xor
lea
popf
lods
fnstenv
push
pop
mov
lret
stc
push
test
repnz
stos
popf
rcll
cwtl
fdiv
adc
clc
lea
fadd
call
gs
inc
inc
mov
mov
sbb
lret
aas
std
insb
jne
lahf
jb
stc
fwait
cli
lods
call
outsl
int3
jne
push
pusha
adc
jo
stos
testl
ljmp
push
adc
or
mov
cs
popa
cs
ret
test
pop
jg
and
or
leave
or
sub
cmp
lret
jmp
movsb
rorb
lock
xor
ret
and
aas
adcl
and
add
xchg
test
cmp
xchg
and
sub
into
test
fiaddl
sbb
dec
mov
insl
jg
and
arpl
loopne
cmp
inc
repnz
push
lret
rorb
lods
int3
cltd
out
out
je
mov
aad
out
ja
incb
int3
mov
lret
dec
jp,pn
test
subb
sbb
lret
mov
inc
cmp
in
movsl
adc
ret
aam
in
inc
outsl
and
xchg
ret
test
imul
jno
adc
int3
pop
or
cwtl
adc
fldenv
cld
jbe
mov
sbb
iret
pop
xchg
pop
xorl
cmp
ret
insb
cli
pop
add
mov
mov
sub
insb
aad
iret
icebp
and
imul
cld
dec
outsb
adc
fcmovnb
jge
stc
and
neg
adc
cmpb
xor
jns
jno
shrb
mov
mov
mov
mov
gs
or
or
xlat
sub
enter
jb
sub
ret
dec
clc
mov
add
add
shl
fdivrl
or
jbe
lds
shr
out
scas
inc
inc
mov
dec
sbb
shrb
dec
pop
pushf
jmp
in
mov
imul
or
lahf
mov
mov
les
jae
das
inc
jno
outsl
call
mov
mov
jg
xchg
pop
or
mov
pop
outsb
fs
lahf
jmp
add
dec
jl
lds
jo
out
mov
repz
cmp
mov
rolb
aam
in
pop
insb
xor
dec
xor
jbe
push
add
cmp
cmpsb
test
xor
dec
pop
sar
outsl
pusha
js
daa
dec
js
movsb
test
inc
push
sbb
pop
cmp
cmp
xorb
or
sbb
scas
orl
daa
push
mov
int
out
dec
mov
cltd
lcall
push
popf
scas
stos
scas
and
das
add
pop
push
je
inc
pop
xchg
mov
imul
push
ret
ljmp
out
aaa
jnp
hlt
xchg
rcr
das
inc
push
fcoml
es
cltd
outsb
fs
and
xor
mov
stos
or
inc
mov
mov
mov
lret
push
arpl
bound
fcmovnu
ljmp
cs
sbb
dec
push
xor
adc
sbb
jg
scas
mov
int
and
ljmp
add
dec
rolb
aam
push
and
addb
pushf
push
pop
xor
dec
in
xchg
mov
sbb
das
fmuls
and
cmp
dec
add
icebp
shrb
aas
push
push
mov
pop
pop
sbb
ret
sahf
repz
lock
jp
mov
sub
xor
xor
pop
pop
int3
test
or
mov
loopne
sti
cli
fs
push
aaa
cmp
jecxz
subl
dec
mov
shrb
pop
popa
add
xchg
daa
scas
lea
mov
mull
cli
mov
shll
xchg
jge
mov
hlt
sti
cld
mov
adc
repz
hlt
scas
add
loop
jp
addr16
jne
jmp
mov
lahf
out
std
lahf
jo
dec
mov
cs
out
mov
or
pop
xchg
cmp
pxor
fwait
mov
ss
jl
and
add
push
dec
pop
xchg
and
and
xorl
jae
xor
test
jge
ret
pushf
in
cltd
in
xchg
stc
xor
xchg
std
addr16
out
ficoms
adc
popa
or
int3
xchg
and
xchg
adc
pop
faddl
rorl
clc
push
jae
mov
outsb
pop
mov
popa
int3
sbb
fwait
sbbl
pusha
fadds
repz
lods
sbb
into
sbb
lcall
fmul
fidivrs
xor
aam
cld
push
test
xchg
int3
pop
inc
scas
xchg
jb
and
sub
add
push
data16
sbb
mov
ss
or
fcomip
lret
test
fcmovnu
lret
js
xchg
push
sub
lcall
add
data16
filds
pop
fwait
shl
repz
sub
push
addr16
cmp
adc
cmp
mov
inc
lret
out
loop
int
push
addr16
hlt
out
filds
xchg
incl
popf
dec
hlt
xchg
xor
pop
fidivrs
enter
jmp
roll
mov
data16
imul
pop
cmc
fistps
pop
push
mov
inc
and
dec
dec
test
xchg
jecxz
jne
sbb
pushf
xchg
or
push
xchg
pop
repnz
jl
mov
xchg
push
dec
bnd
xlat
mov
or
or
inc
sub
and
dec
gs
add
hlt
outsl
add
out
jno
pop
pusha
addr16
std
bound
xchg
repz
inc
loopne
jnp
insl
jecxz
loope
insb
inc
fldl2e
dec
sti
sub
shr
jge
mov
fwait
insl
sahf
pop
jb
sbbl
cmpl
lret
push
push
mov
and
sahf
xlat
pop
cltd
sbb
call
and
mov
iret
roll
repz
nop
fisttps
hlt
call
ja
mov
cs
sbb
inc
daa
cs
dec
jns
flds
jmp
xor
or
xchg
xchg
pop
insl
jae
pushl
push
hlt
add
es
mov
push
out
in
in
pop
cmp
adc
mov
adc
outsb
ficoms
mov
test
inc
imul
dec
inc
lcall
pusha
popf
mov
sahf
loopne
sbb
sub
sub
push
xor
mov
popa
sub
jae
pop
mov
cmp
mov
jg
mov
sub
cmp
ret
test
jg
shll
dec
jnp
push
sbb
dec
test
add
stos
xlat
xor
test
js
xchg
js
fcom
bound
popf
stos
aad
lcall
leave
mov
fstpt
inc
fdivs
stos
imul
pop
test
inc
inc
jmp
adc
lds
push
imul
or
ss
mov
xchg
push
iret
mov
out
add
adc
pop
into
out
adc
pmaxsw
inc
jnp
hlt
dec
sbb
cmp
cmc
adc
xchg
xor
stc
xor
dec
loope
mov
ficoms
sbb
mov
movsb
cmp
insl
pop
rcll
mov
in
mov
pop
inc
inc
nop
pop
sahf
dec
ss
ret
add
or
jmp
out
sub
in
ds
inc
incl
mov
ret
es
and
xor
add
xchg
mov
cld
jb
push
xorb
popa
adc
add
mov
outsl
sub
loopne
rcrl
iret
aad
xor
lret
popf
mov
das
inc
rcl
loopne
loope
xor
ror
ret
clc
jp
mov
adc
out
sub
lods
leave
fstps
lret
add
pop
push
dec
orb
popa
mov
cmp
xchg
dec
sbb
mov
inc
sbb
adc
xor
mov
jne
ljmp
shrb
inc
lcall
cmp
das
fwait
cmpb
push
nop
int3
dec
xor
xor
push
loop
js
test
mov
mov
pusha
lods
inc
negl
push
mov
sbb
fstps
dec
cmpsl
shll
xchg
outsb
dec
fsubp
add
ret
pop
test
subl
mov
push
pop
cmp
and
xchg
mov
add
cmp
mov
fcom
ficompl
int3
mov
sub
cmp
ljmp
cmpsb
sbb
or
or
arpl
cld
push
ljmp
orb
bound
mov
or
call
dec
insb
addr16
rorb
push
xchg
sbb
push
idiv
ds
dec
jnp
lcall
inc
cmp
test
bound
mov
lcall
js
add
xor
lret
add
sti
movsb
adc
sbb
repnz
cmp
xchg
mov
mov
fcompl
xor
fcmovnbe
adc
dec
cmpsl
mov
mov
mov
cmp
add
xlat
stc
dec
push
cmp
push
popa
push
pop
cmp
cs
xlat
and
jmp
imul
mov
insl
push
icebp
inc
outsb
divl
lahf
popf
and
sub
stc
xchg
sbb
enter
adc
loop
jns
fwait
xor
cmp
lods
leave
inc
or
enter
push
test
lods
lret
push
xlat
jnp
fcos
arpl
fstl
xchg
sbb
out
mov
nop
sti
mov
mov
js
jge
push
sbb
or
dec
cmp
sub
push
and
pop
shl
pop
dec
movsl
xor
aaa
pop
mov
in
sub
xor
movsl
pop
push
adc
jae
and
xor
fsubr
sbb
adc
sub
repz
xchg
ljmp
push
push
pop
movsl
ret
push
cs
mov
mov
xlat
fldenv
ljmp
mov
xchg
cmp
fdivr
inc
rolb
and
or
pop
jl
xor
leave
push
mov
in
push
aas
inc
imul
mov
mov
mov
xor
jne
lret
ror
stc
out
fs
ds
mov
push
in
cmp
mov
dec
loope
add
pop
negl
into
sub
imulb
dec
outsl
lcall
mov
aas
xchg
dec
push
in
lret
in
aas
hlt
mov
adc
out
addr16
or
push
mov
mov
jae
adc
jle
arpl
xchg
jnp
dec
xor
inc
xor
out
xchg
ljmp
fwait
nop
xchg
fsubrs
pop
pop
add
imul
and
xor
xor
iret
sbb
fldenv
push
jecxz
imul
jg
or
xchg
jnp
cli
xor
pop
pop
sbb
ljmp
cmp
push
mov
push
divb
sub
pop
mov
cmp
jg,pt
and
xor
test
mov
aas
pop
mov
lcall
int3
mov
jle
add
mov
and
inc
leave
sbb
pushf
int3
popf
inc
cmp
mov
or
add
push
sbb
pop
inc
mov
and
rcll
jb
inc
jnp
push
sub
jge
dec
xchg
addr16
andb
mov
fmuls
sub
scas
xchg
fldt
out
rorb
pushf
xor
test
js
out
lods
lock
nop
pop
sub
pop
dec
fucomp
pop
cmc
fcmovne
js
jle
pop
ds
mov
push
or
cmp
push
icebp
fsubl
rcr
sub
push
test
ret
push
mov
pop
xor
or
pop
xchg
cmp
pop
adc
or
roll
dec
or
add
out
shrb
cwtl
decl
ret
inc
push
movsl
add
nop
dec
pop
jb
jno
lock
dec
dec
mov
cs
loope
xchg
nop
mov
or
ss
cwtl
lcall
mov
in
add
jge
sbb
xchg
push
dec
mov
mov
iret
das
jecxz
pop
add
idiv
cltd
out
ficoms
dec
or
push
vorps
rorb
mov
lret
repnz
ficoms
imul
jg
jne
adc
cld
or
adc
mov
cmp
adc
mov
mov
fwait
or
fidivrs
addr16
aas
cmp
push
jae
jmp
pop
mov
pop
xor
adc
and
enter
or
jmp
into
cmp
sub
int
insl
out
mov
jbe
cwtl
cmp
enter
fildll
nop
sbb
adc
stos
scas
icebp
ret
rorb
push
cli
scas
xlat
test
push
nop
xchg
pop
push
mov
shl
jo
std
inc
xchg
dec
inc
jb
lret
mov
idivl
cwtl
in
pop
insb
out
aaa
dec
add
into
jmp
sbb
sub
xchg
push
stos
les
lret
hlt
add
push
div
sub
mov
xchg
or
add
cs
mov
xor
movsb
xchg
sbb
aaa
xor
in
stos
es
sub
xchg
fists
xor
mov
xchg
xchg
gs
dec
jg
or
aam
dec
shrl
sbb
lret
setae
xchg
sbb
or
xor
bound
iret
lods
and
cmp
fstpt
jle
pop
orl
mov
dec
add
sub
pop
mov
fs
std
sub
ret
cmp
insb
notl
inc
aaa
lea
arpl
mov
xor
mov
pop
xor
into
repz
push
mov
test
test
inc
out
add
inc
mov
repnz
xlat
mov
icebp
jmp
or
cmp
pop
add
int
repnz
subb
pop
mov
or
add
xchg
xor
cld
adc
inc
pusha
icebp
mov
add
out
repz
rcll
xchg
stos
outsb
mov
or
into
stos
add
shll
out
xchg
xor
int3
dec
cmp
dec
imul
jne,pt
xchg
push
or
fcomi
xor
push
inc
rclb
xor
push
push
lahf
sbb
lea
mov
add
fcomps
fs
mov
loop
cli
cmp
icebp
out
mov
into
or
cmc
or
jne
cltd
hlt
mov
pop
adcl
mov
xor
push
in
and
pop
sbb
push
les
push
cmpsl
int3
out
call
cmpsl
ljmp
and
lret
loope
adc
aas
cs
dec
jmp
ret
jge
jl
pop
inc
add
push
lahf
popl
aam
out
adc
call
push
sbb
dec
mov
jle
mov
cmpsb
mov
pop
fwait
add
pop
orl
jg
push
arpl
sahf
adc
dec
adc
xchg
enter
mull
xor
or
dec
push
dec
test
fidivrs
mov
sbb
mov
or
add
das
repz
push
fidivrs
jge
scas
into
sbb
inc
mov
mov
movsl
enter
xchg
jecxz
and
cmpsb
icebp
dec
sarb
add
pop
cs
enter
aam
shrl
mov
mov
fidivl
push
in
scas
jge
jae
and
xor
adc
add
mov
and
sbb
cwtl
dec
loope
add
xchg
rcl
xchg
mov
data16
repnz
adc
repnz
dec
xchg
fstl
mov
ds
shlb
xor
stos
jae
in
leave
mov
hlt
sub
xchg
lahf
jg
push
popa
push
cmpsb
stos
ffreep
jle
push
jg
and
gs
fdivrs
mov
jge
push
sub
or
push
pop
jns
movsb
xchg
call
push
pop
xchg
add
add
popl
sub
xor
cmp
add
jns
push
mov
stos
jp
lods
aas
cmp
xor
jp
out
mov
in
incl
leave
popa
sub
scas
test
out
add
negl
orl
cmc
mov
mov
dec
outsb
jmp
mov
lods
push
idivl
mov
dec
sti
int3
outsl
push
mov
push
repz
mov
sbb
rcll
xchg
jmp
and
mov
adc
lcall
xor
cmp
out
mov
gs
mov
push
inc
rcl
mov
loopne
jne
adc
bound
sub
inc
lods
xchg
adc
mov
cmp
faddp
pop
pop
pop
pop
mov
push
xchg
adc
or
push
inc
xor
adc
ja
popa
cmp
lods
movsl
sub
cmc
pushf
cmpsb
pop
mov
aad
push
ja
rcll
bound
rep
push
bound
arpl
fiadds
jmp
test
add
sub
dec
icebp
and
jns
xchg
inc
xor
dec
or
cwtl
cmp
mov
outsl
sbb
mov
jne
pushf
leave
lcall
mov
test
adc
or
push
sahf
shl
sub
fists
xchg
in
mov
sbbl
add
mov
push
mov
adc
xchg
cwtl
xor
shrl
jne
adc
mov
aam
xchg
sahf
push
pop
lock
dec
xchg
pop
or
dec
repnz
mov
cmpsb
mov
repz
cs
mov
mov
sbb
sbb
dec
fisubrs
in
mov
sub
out
and
jbe
mov
add
mov
movsb
xor
mov
out
daa
dec
jae
data16
or
and
je
dec
jg
lods
dec
mov
sbb
mov
inc
repnz
subl
loope
jnp
clc
mov
das
or
out
jg
addr16
dec
mov
pop
cmp
shl
jp
jne
js
stos
mov
data16
mov
xchg
ret
xchg
jb
jle
fsubr
movsl
inc
xchg
dec
jns
or
dec
adc
das
cwtl
inc
push
stos
outsl
xchg
mov
arpl
jmp
pop
enter
add
mov
test
cltd
loop,pt
movsb
sbb
xor
in
adc
or
mov
inc
aas
add
popa
add
mov
push
ds
sbbl
aad
xor
das
in
das
es
push
loopne
sti
jmp
mov
lret
rol
jmp
mov
orl
mov
rorb
js
dec
das
fists
nop
jge
outsb
test
cltd
fwait
add
sti
adc
pop
mov
dec
sbb
mov
mov
sbb
sahf
sbb
mov
test
inc
mov
daa
mov
push
rcll
jbe
sbb
or
sub
or
les
inc
push
es
and
ds
mov
les
add
pop
adcl
mov
orb
mov
inc
sub
xor
dec
testb
cmp
dec
sub
xchg
push
bound
rolb
sub
out
out
ja
lret
ss
sbb
and
mov
push
fs
ffreep
jae
lds
outsb
hlt
fbstp
in
and
iret
out
inc
inc
mov
mov
jg
mov
mov
push
mov
imul
out
sbb
popa
push
push
leave
cmp
aam
pop
push
pop
adc
xor
test
mov
popa
add
sbb
pop
push
mov
dec
and
into
stc
push
or
ss
cltd
push
cmp
sbb
sahf
aam
dec
cwtl
cmpsb
lock
lods
sub
pop
stos
cmp
shl
jbe
imul
adc
pop
je
xor
sub
into
outsl
jne
insb
mov
lcall
cmpsb
dec
pop
pop
aam
mov
fbstp
pushf
pop
cmp
jne
inc
stc
jo
pop
and
sbb
or
adc
inc
adc
xlat
cmpsb
dec
mov
xor
dec
fcmovnb
pusha
or
pop
or
insb
scas
push
movsl
js
mov
lds
shl
dec
pop
push
push
adc
jb
or
stc
jne
loopne
pusha
sub
cwtl
adc
add
lods
in
pushf
aaa
notb
cmp
xchg
loope
fwait
outsb
in
lcall
aaa
cmp
xchg
xchg
push
leave
pop
sbb
dec
bound
jl
rcrl
mov
xor
sub
adc
pushf
pop
call
jle
popf
dec
stos
imul
mov
movsb
sub
and
inc
cmpsb
int
xchg
push
ret
jbe
jbe
mov
pop
pop
ja
aaa
es
movsl
pop
mov
dec
push
jg
mov
jg
ljmp
xor
lds
inc
icebp
mov
dec
jno
xchg
adc
sahf
adc
push
cld
fwait
sub
lods
stc
les
data16
nop
pop
stos
jnp
xchg
icebp
out
pop
andl
mov
pop
in
ret
scas
lods
popa
stc
ror
inc
xchg
in
jns
jle
dec
filds
ret
xchg
cmp
sysret
cmpsl
and
outsl
jns
pop
push
cltd
movsl
cli
fimuls
or
sbb
xchg
jno
out
outsl
fcomip
jae
in
jmp
arpl
jle
mov
mov
leave
push
and
or
je
fistl
sub
insl
xchg
fisubrs
dec
jbe
xchg
inc
roll
jg
rol
push
adc
push
xchg
repz
or
mov
mov
fcompl
sub
cmpsb
js
jg
scas
imulb
fimuls
mov
aas
je
xor
dec
in
jmp
pop
xor
fcoms
fisttpl
mov
pop
pop
sub
pop
fsubl
inc
sub
loopne
das
inc
pop
and
frstor
jecxz
pop
xchg
aaa
mov
xor
pop
add
in
addr16
jl
sbb
mov
jge
inc
orb
add
push
cmp
fcoml
clc
lods
xlat
mov
fcmovnbe
mov
or
push
enter
adc
int3
sub
mov
test
cmp
add
xor
cmp
ret
out
pop
cmpsb
push
clc
mov
cli
ss
xor
add
add
add
inc
jo
cmc
aas
sub
sub
aaa
incb
mov
fs
ss
jmp
jge
jle
fs
fnstcw
mov
inc
mov
outsb
loop
ds
movsb
sbb
pop
imul
scas
dec
es
cmp
ljmp
cmp
addr16
js
pop
mov
xchg
jbe
mov
mov
shl
adc
dec
xor
cmp
jns
pusha
cmp
sub
mov
repz
mov
xchg
pop
out
rcrb
bound
test
int3
mov
adc
jno
mov
mov
rorl
sbb
pop
sbb
sarl
push
cmp
repz
outsl
or
setno
sbb
ror
push
xor
xchg
jne
cmp
out
data16
mov
add
cs
lds
scas
xchg
add
ja
out
hlt
and
lahf
sub
in
dec
dec
out
lods
inc
dec
add
xor
mov
test
pop
mov
cvttps2pi
stos
and
xchg
out
imul
rorb
sub
and
test
clc
daa
rolb
js
dec
addr16
es
adc
mov
pusha
imul
aad
xor
rol
jbe
cmp
sahf
cltd
data16
or
fdivrp
les
lcall
in
and
mov
push
into
jbe
test
xchg
sbb
lret
lea
adc
test
jmp
jae
adc
bound
and
es
popf
loopne
push
out
loope
push
pop
ficoml
jbe
cmp
xchg
mov
scas
or
sub
push
loop
leave
pop
fcomi
sub
dec
or
stos
sti
lods
sar
lds
fsts
dec
mov
std
aas
das
cmc
stos
mov
pop
aas
sub
add
mov
push
out
out
sbb
mov
add
mov
cmp
clc
or
mov
stos
jecxz
fldcw
or
outsb
xor
test
in
xlat
aam
jp
mov
xchg
mov
xor
add
es
add
jno
sbbb
xor
pop
mov
cltd
and
and
sub
into
out
cmc
sub
push
adc
pop
jno
xchg
push
imul
push
push
sub
and
out
lods
rcrl
sbb
cmpsl
lods
xor
addr16
push
jge
mov
push
stc
cmp
cmp
into
adc
fidivrs
gs
and
or
mov
jnp
mov
iret
insb
shlb
inc
fmul
push
je
adc
xor
cmpsb
jmp
sub
mov
mov
and
jo
push
fbstp
jne
push
lods
cltd
sub
mov
sbb
les
inc
mov
ret
std
imul
jp
repnz
xor
xor
adc
sbbb
mov
jge
xor
inc
mov
jns
dec
sub
lea
stc
jno
mov
jp
popa
inc
inc
scas
lds
xor
add
sahf
cmpsl
and
pop
mov
sbb
and
xchg
mov
cwtl
arpl
xor
enter
inc
in
inc
cmp
xor
pop
shlb
test
lret
sub
nop
lods
std
pop
ds
xchg
push
pop
movsb
daa
pop
sbb
xlat
sbb
out
and
ret
mov
pusha
push
and
mov
mov
sbb
cld
jns
jecxz
xor
rorl
std
incl
xor
cmp
cld
or
dec
dec
mulb
popf
test
sbb
pop
arpl
pop
adc
cmc
cmpsl
inc
das
jmp
pop
in
push
imul
jge
pop
jecxz
out
push
les
push
insb
xchg
and
icebp
scas
xchg
outsl
std
xchg
pop
mov
dec
popf
or
jno
cmpsl
push
out
lods
outsl
add
movsl
mov
mov
jmp
popf
in
add
dec
add
mov
aaa
rcrb
pop
sbb
imull
lock
out
int
sub
mov
insl
dec
repnz
je
mov
fwait
push
sbb
insl
fs
sbb
push
mov
outsb
or
lret
xchg
inc
xor
movsl
shl
fsts
shr
test
mov
aaa
xor
icebp
sbb
mov
or
fcomp
pop
xchg
and
and
insb
int
xchg
addr16
std
cmpb
mov
ficompl
add
bound
mov
hlt
sets
popa
mul
mov
lods
sub
push
pop
mov
outsb
cltd
mov
or
fnstcw
mov
jmp
ss
jne
lahf
lret
out
dec
push
sbb
push
dec
lods
add
ljmp
jae
cltd
pop
icebp
aaa
test
push
in
lcall
jns
shlb
pop
jbe
popl
cmpsl
rclb
xorb
aaa
sub
jbe
sbb
mov
je
push
out
stos
add
xchg
out
push
sub
sbb
adc
iret
es
mov
and
in
xor
filds
xchg
in
xchg
add
fsubrs
mov
imul
lods
es
inc
and
push
popf
mov
inc
mov
inc
cltd
xor
lods
jge
dec
push
filds
into
adc
lret
dec
xchg
mov
inc
dec
mov
add
push
bound
aad
imul
adc
jg
loop
es
mov
roll
jne
mov
das
mov
cmpsb
inc
mov
cli
jnp
mov
jns
mov
add
mov
push
pushf
out
mov
or
push
scas
cli
or
xor
fwait
add
lcall
inc
nop
jo
mov
adcl
mov
jle
xchg
add
pop
fs
inc
xor
aad
pop
add
ljmp
xor
sub
and
mov
fs
jne
popf
frstor
mov
hlt
mov
sti
and
movsl
xchg
sbb
cmc
or
scas
dec
popf
and
scas
jecxz
into
mov
xor
test
jle
std
fnstenv
fmull
fstpt
sub
lret
or
cmpsb
jae
pushf
sbb
sbb
jo
cld
fmull
lea
lahf
pusha
ret
cld
dec
lds
pop
inc
ljmp
xor
in
testl
push
sub
test
dec
mov
in
lea
fs
pop
imul
jg
test
fdiv
push
mov
mov
cwtl
cmpsl
cmp
scas
cmp
sub
aaa
dec
ljmp
jne
adc
mov
pop
adc
adc
out
adc
mov
movsl
cmpsb
mov
cmp
jecxz
cmp
xchg
xchg
mov
push
aas
sub
insl
outsl
cmp
mov
push
inc
sub
pop
mov
xor
icebp
mov
add
jns
ds
shl
repnz
push
ljmp
ret
dec
cli
insb
imulb
sub
sbb
cli
push
pusha
jno
imul
dec
cld
ret
add
outsb
sub
pop
adc
repnz
mov
out
or
pop
dec
movsl
inc
add
dec
fisubs
pop
mov
sbb
in
jne
xchg
sbb
je
push
aaa
adc
xchg
mov
shll
sahf
pop
xchg
iret
jae
das
call
cltd
mov
insl
test
lahf
push
mov
pop
cmp
fs
sbb
cmp
scas
and
mov
cwtl
fsubp
pop
les
cmp
imull
xchg
inc
dec
gs
clc
dec
nop
jmp
push
or
fstl
push
mov
jb
push
imul
or
sbb
jp
sbb
stc
mov
das
test
xchg
bound
outsl
jecxz
mov
pop
test
pop
jb
or
push
jns
inc
mov
leave
test
leave
sar
xor
adc
pusha
cmp
add
pop
dec
xchg
outsb
dec
sbb
lcall
ja
ret
stos
xor
add
lock
fwait
jecxz
loop
mov
mov
add
mov
cmp
hlt
cmp
mov
insb
test
mov
lea
rorl
rcrl
data16
mov
cmp
xchg
stc
notl
sahf
mov
inc
lods
cmp
stc
push
sbb
stos
push
push
jmp
in
lea
sbb
and
sbb
lods
bnd
ljmp
lea
cmp
or
inc
mov
mov
aam
repz
adc
cmp
mov
xchg
enter
pusha
in
cmp
mov
mov
in
cld
xchg
or
cmp
shl
pop
ljmp
fwait
or
mov
add
scas
push
clc
push
adc
scas
inc
dec
mov
shlb
es
xor
pusha
ret
pop
pop
mov
not
test
cwtl
stos
jge
pop
stc
push
or
fstpt
mov
xchg
sbb
cmpsb
into
sbb
sub
dec
out
je
mov
push
push
cmpl
push
jo
and
out
cmp
nop
adc
or
xor
je
push
loope
dec
xor
fcomp
xor
data16
xchg
or
cltd
inc
mov
and
test
cmp
mov
loope
and
mov
hlt
test
aam
decl
es
mov
in
xor
js
lret
ja
in
mov
dec
out
xor
jge
adc
sahf
adc
cld
das
loop
xchg
shll
inc
outsb
or
mov
xlat
daa
xchg
lock
xor
push
add
mov
dec
push
pop
mov
addb
push
ret
cwtl
xchg
sub
mov
lret
pop
pop
nop
scas
jmp
adc
pop
ja
or
xlat
arpl
push
shll
mov
push
pop
and
test
pop
inc
xchg
mov
dec
jle
stc
mov
or
jmp
add
mov
and
or
rcrl
fwait
mov
pop
stos
cmp
jecxz
scas
mov
jnp
add
xchg
clc
cwtl
push
lods
add
xchg
xlat
jae
mov
push
roll
sti
fadds
mov
clc
xchg
daa
movsl
cmp
lcall
ficoml
cmp
lahf
les
dec
mov
mov
cwtl
cmp
lds
js
sar
adc
je
mov
clc
in
jne
xchg
out
fs
pop
add
push
aam
dec
jbe
mov
arpl
xchg
dec
push
adc
insb
into
add
in
sbb
push
adc
sbb
das
mov
dec
out
out
andb
sbb
cmp
cmp
or
mov
loop
ljmp
lods
std
pop
lcall
mov
stos
cmp
gs
pusha
mov
test
sub
loop
iret
mov
cmp
cmp
cs
pop
sub
test
popf
push
push
pop
jne
mov
std
mov
push
add
idivl
es
xchg
push
lods
adc
enter
adc
mov
fwait
mov
xchg
xchg
pop
xchg
add
in
xor
pop
std
cmp
xlat
jbe
push
mov
inc
push
add
pop
aad
test
arpl
adc
stos
jecxz
xchg
icebp
xchg
mov
push
fwait
stos
jno
adc
and
lret
mov
int
xchg
mov
or
je
inc
inc
push
dec
incb
test
shlb
subl
add
addr16
and
cmp
shrb
push
aad
add
jmp
sbb
push
outsl
lret
in
test
iret
stc
pop
add
or
mov
shlb
sbb
stc
incb
hlt
jae
test
or
dec
or
xchg
movsl
jmp
jecxz
cmpsb
ljmp
sahf
sti
mov
jne
pop
addb
jne
pushf
lahf
in
pop
xor
int
notl
jp
xchg
and
cmp
mov
pop
xor
sarb
cs
inc
js
pop
or
push
out
inc
dec
mov
scas
bswap
ret
mov
and
mov
pop
nop
xchg
add
ret
xor
cmp
rolb
inc
jns
mov
mov
sbb
std
popa
and
loopne
mov
or
mov
int3
and
and
ret
jecxz
lret
dec
les
mov
rcl
loop
push
movsb
jecxz
xlat
stc
push
cmpsl
sub
push
jmp
or
mov
dec
repnz
mov
ror
mov
rcrl
cwtl
lods
shlb
jge
pop
daa
inc
popf
add
das
fstps
adc
fwait
nop
lcall
pusha
and
addb
and
fimuls
dec
sub
addr16
in
push
inc
stc
and
movsl
adc
xchg
inc
sub
out
cmc
test
pop
sti
rcll
cmp
rcrb
lods
dec
lahf
test
out
into
ficoml
imulb
jge,pn
pop
popa
and
fwait
xor
lock
cltd
pop
xchg
or
faddl
repnz
out
adc
cld
xor
ss
fstl
pop
push
mov
jb
mov
jae
out
sti
out
mov
or
inc
iret
push
stos
repz
add
or
lcall
sub
cld
and
dec
aas
jge
adc
out
into
mov
add
mov
xor
stos
sub
es
mov
stos
or
sarb
mov
xchg
daa
dec
std
cltd
lds
loope
xchg
push
hlt
popf
js
aad
and
mov
ret
ret
push
fimull
mov
or
cmp
mov
inc
mov
jecxz
sahf
les
loopne
dec
rcrb
or
test
aad
jo
lahf
sub
and
xor
adcl
fwait
cld
popa
push
insl
xchg
cli
rcl
out
cmp
push
and
add
std
gs
and
inc
jno
aad
add
sub
pop
aaa
cli
sub
push
decb
icebp
cmp
out
dec
fnsave
cmp
mov
dec
pop
popf
mov
aad
inc
loopne
mov
std
jl
loop
insl
shll
std
shr
cwtl
imul
pop
pop
pop
bound
xor
mov
in
pusha
int3
gs
push
cmp
xchg
jge
jo
push
pop
mov
add
add
imul
js
lock
mov
hlt
and
cmpl
movsb
mov
cwtl
sub
adc
out
jle
mulb
dec
nop
xchg
or
cmc
and
xor
adc
aaa
dec
addl
push
lret
mov
aas
ficoml
xchg
or
and
pop
aam
lea
fstpt
int
push
pop
jl
push
or
test
adc
pop
bound
push
sti
push
nop
sbb
pusha
loop
out
xorl
lahf
sbb
mov
xor
push
sub
fbld
idiv
add
adc
push
and
imul
mov
sub
jl
mov
stos
aam
aad
sub
fbstp
cs
xchg
clc
jnp
fistps
push
sbb
sbbb
or
aaa
mov
ss
pusha
shlb
sbb
hlt
sbb
mov
add
sbb
fists
dec
stos
push
push
ss
xchg
add
fiadds
cld
mov
iret
inc
outsb
sub
dec
ljmp
gs
pop
inc
ja
pusha
sbb
jno
push
shrl
pusha
in
xchg
cwtl
adc
sbb
stos
out
ljmp
xchg
idivl
adc
adc
xchg
adc
cld
or
dec
jbe
enter
adc
pop
jp
xchg
mov
xchg
repnz
dec
aam
mov
or
dec
mov
sub
mov
dec
dec
push
cmc
cmp
adc
mov
dec
lock
into
mov
xchg
cmp
roll
fdivs
int3
outsb
mov
mov
push
add
int
stc
bnd
jno
mov
out
mov
test
jge
scas
shlb
pshufw
and
mov
cli
xchg
ljmp
popf
or
sub
sub
cmc
inc
fimull
outsb
cli
adc
sbb
adc
test
shl
test
les
imul
daa
ja
fsubrs
and
xchg
jne
xchg
and
pop
sti
hlt
xchg
imul
push
push
xchg
jecxz
mov
mov
jnp
or
inc
rolb
cmp
loop
loop
fwait
pop
sub
jbe
jl
lret
insl
mov
pushf
lcall
mov
cli
cmc
mov
pop
test
push
pop
push
rorl
xor
das
inc
sbb
aad
sub
and
out
ss
shll
dec
add
pop
xchg
push
das
ljmp
inc
imul
mov
out
xchg
adc
xchg
or
sub
push
inc
push
xor
and
push
push
mov
push
sub
jbe
xor
sti
cmp
cmpsl
xchg
jg
add
loope
xchg
ret
stos
or
fnstenv
sbb
jb
ja
mov
lret
pop
ret
xchg
mov
or
add
fs
and
lock
jle
ljmp
mov
and
mov
mov
sar
sbb
push
je
leave
push
faddl
xor
or
push
or
jno
test
idivl
sarb
inc
inc
cmp
dec
int3
add
dec
loope
rorl
and
movsb
push
inc
push
jl
adc
fdivr
mov
cld
repz
sbb
aaa
enter
mov
push
cmpsb
mov
lock
pop
iret
pop
lods
ret
push
pop
cwtl
bound
out
shll
jmp
scas
mov
orb
mov
push
les
vcmppd
js
sbb
push
mov
dec
dec
sub
fmull
or
pop
xchg
mov
sub
adc
and
mov
inc
jo
lds
sbb
mov
pop
cmp
enter
icebp
adc
fisttpll
jl
or
orb
leave
xor
adc
dec
ljmp
imul
xchg
insb
cmpsb
jmp
rcrb
mov
mov
ret
pop
mov
pop
inc
push
xor
or
rorb
inc
fidivrs
adc
xchg
imul
ds
xchg
push
movsl
clc
mov
add
mov
jae
pushf
and
push
sub
insl
mov
adc
rcrb
mov
jl
stc
stc
fldl
arpl
mov
dec
aam
orl
dec
cmc
push
pop
shrl
push
in
pusha
mov
mov
cmp
gs
cmp
insl
mov
in
call
lods
sub
icebp
test
adc
dec
or
dec
loope
xor
in
int3
jle
lods
shlb
fs
push
mov
addr16
leave
idiv
sbb
roll
jg
jle
xchg
dec
imul
sub
icebp
jl
out
dec
or
scas
testl
xchg
stos
rorb
mov
mov
in
sbb
stc
gs
stos
cmp
lret
cmp
dec
xor
and
gs
or
insl
push
inc
mov
in
cld
arpl
addl
int3
mov
ljmp
dec
cld
mov
lock
lcall
adc
sbb
mov
pusha
add
push
inc
out
lods
scas
popf
mov
test
sub
or
dec
push
bound
ljmp
hlt
lret
sahf
add
daa
dec
inc
pop
and
fidivs
add
inc
aad
lahf
loop
xchg
das
dec
out
dec
imul
aas
sub
mov
cltd
pop
dec
jp
in
sub
cmpsl
cmc
lret
jmp
push
loop
popa
pop
push
jl
loopne
aad
add
mov
add
jae
ja
sbb
or
adc
xor
sbb
mov
pop
cmp
push
cmpsl
mov
cmp
push
push
fcomps
pop
mov
jne
ja
adc
test
orl
shlb
inc
push
dec
push
clc
cmpsb
std
icebp
arpl
dec
inc
mov
cmpsl
mov
lock
rcll
and
mov
int3
dec
sahf
pop
xchg
in
stos
inc
mov
mov
pop
fsubrs
inc
adc
sub
cmc
jg
jnp
in
mov
das
sbb
es
dec
inc
je
sbb
out
movsl
andb
mov
enter
leave
into
cwtl
push
sti
repz
fucom
lods
pop
push
adc
fs
dec
sub
outsl
adc
dec
inc
pop
mov
pop
sbb
scas
xor
lock
pushf
pop
or
inc
fiadds
outsl
out
jmp
inc
pop
rcl
jmp
push
movsb
jns
cmp
jg
lds
mov
pop
iret
push
or
movsl
dec
jno
outsb
add
jl
and
jmp
lock
adc
lret
loop
xchg
xchg
and
lds
fnstcw
cld
inc
push
xchg
popf
cmpsl
pop
sub
ss
mov
and
cltd
push
arpl
dec
mov
cmp
pushf
orb
mov
int3
pop
ds
stos
or
push
repz
inc
sahf
pusha
xor
ret
push
jae
ret
mov
xchg
or
imul
test
stos
ret
adc
mov
popl
orb
mov
test
fnsave
in
or
xor
out
imul
aad
pop
push
and
xor
fdivrl
add
outsb
lods
leave
add
ret
mov
insl
loop
cmpsb
testl
adc
dec
mov
aaa
aad
mov
dec
dec
cmp
int
xchg
lods
mov
xor
arpl
sbb
loope
add
inc
sti
les
sbb
imul
xor
imul
xchg
imul
dec
cmp
pop
aam
adc
dec
popf
lea
subl
inc
lea
sbbl
inc
pop
sub
loopne
mov
shlb
negb
jg
mov
outsl
loop
nop
pop
and
bound
cli
call
repz
inc
sbb
arpl
and
mov
mov
cli
xor
jbe
xor
mov
lcall
sbb
cmp
push
insb
fs
lahf
lock
iret
xor
jecxz
inc
jp
xchg
std
push
inc
cmc
sub
repnz
xchg
sbb
pop
ret
ja
ror
dec
shll
pop
mov
es
nop
sbb
xchg
movsb
jnp
aam
mov
shl
pop
xor
out
mov
stc
add
jecxz
sub
lds
roll
test
jne
cld
xchg
divl
inc
stc
in
mov
in
and
push
arpl
nop
pop
mov
jno
jl
pusha
lret
xchg
mov
fsubrs
push
out
sub
pop
pop
icebp
ss
insb
mov
push
imul
adc
je
enter
add
push
adc
and
lret
stc
out
add
pop
lods
and
ds
ljmp
sti
and
xlat
decl
dec
mov
insl
pop
xor
push
xchg
jmp
int
mov
mov
push
sub
shlb
sbb
in
call
mov
aam
xor
sub
push
test
push
push
in
xchg
pusha
adc
lock
mov
jae
mov
lret
loop
adc
in
push
lahf
aas
fadds
mov
dec
push
adc
outsl
jne
or
lods
inc
and
dec
pop
xor
sti
sub
inc
into
cmp
jo
and
or
or
push
pop
out
inc
mov
stos
push
enter
insl
in
push
push
adc
idivb
mov
lods
movsl
imul
adc
dec
shrl
xchg
jnp
call
cwtl
sbb
scas
test
sbb
outsb
aaa
pop
or
movsl
cmp
jnp
clc
outsl
mov
fwait
cmpsl
fldt
adc
test
push
flds
ja
fdivs
movsb
or
out
mov
hlt
push
pop
mov
sahf
ljmp
pop
ja
sbb
imul
sbb
inc
notl
pop
inc
mov
mov
mov
push
orb
rcll
fiaddl
sahf
leave
mov
movsl
iret
mov
push
cmp
lods
daa
mov
icebp
lret
pop
mov
popf
inc
jmp
rclb
push
add
out
xchg
lcall
mov
mov
ficoms
mov
mov
xchg
jno
adc
push
cmp
inc
loopne
jbe
or
mov
subb
clc
test
addr16
int
or
dec
insb
aas
lods
mov
dec
hlt
mov
jno
or
mov
test
mov
mov
pop
test
xor
mov
test
sub
loop
cli
in
jne
andl
push
push
movsb
test
pushf
mov
xchg
mov
test
inc
dec
xchg
bswap
mov
add
clc
add
pop
loope
pusha
jbe
cmp
mov
ds
fidivrl
and
push
adc
movsb
iret
mov
subl
inc
xchg
pushf
sbb
clc
push
test
fdivrl
sub
imul
es
pop
out
xchg
inc
jg
jno
aam
push
mov
jnp
sti
bound
pop
ret
add
pushf
add
fbstp
addr16
adcl
xor
sahf
jnp
sbb
cmp
add
jb
out
outsl
fwait
cwtl
cld
jle
push
or
fs
xor
or
fwait
pop
cltd
popf
loopne
leave
add
sahf
sub
xor
mov
test
mov
divl
cmp
cmp
mov
sub
movsl
or
int3
cmp
mov
xor
inc
push
in
xorl
xchg
mov
ficomps
cmp
movl
lret
pushf
inc
test
jne
rcr
lods
negb
jl
inc
jecxz
jge
cmpsl
inc
sbb
pop
ret
push
or
dec
inc
mov
sbb
repz
lret
xchg
movsl
mov
cwtl
mov
test
dec
scas
add
xor
xor
jno
outsb
xor
mov
inc
ja
dec
mov
cld
xchg
scas
mov
cmp
nop
bound
lahf
push
lods
push
test
xchg
inc
shrb
insl
inc
ret
lahf
lret
adc
lret
loop
mov
test
push
ficompl
cmp
pop
test
add
cmp
ja
pop
cmp
inc
das
xlat
mov
or
data16
sub
test
mov
dec
or
pop
lods
mov
repnz
push
out
mov
jp
sbb
jmp
inc
lret
lods
add
out
fnstcw
inc
clc
add
jg
testl
inc
in
ds
sub
out
in
jl
and
bound
repz
xlat
sub
dec
jmp
leave
inc
mov
xchg
add
xchg
xchg
mov
test
in
lcall
test
jae
or
stos
cmpsl
loopne
pop
or
shll
fsqrt
fldcw
leave
dec
or
sub
and
sub
nop
arpl
in
and
mov
mov
imul
in
add
inc
push
xchg
int3
cmpsl
stos
outsl
outsb
fistpll
mov
adc
sub
scas
xor
xor
repz
cmp
inc
cld
test
jg
cmp
or
add
cmp
stos
jmp
xchg
stc
jae
mov
sub
pop
cmpsb
xchg
cld
jnp
ds
leave
sbb
aad
notl
sahf
jb
xchg
sub
or
fptan
jge
in
addr16
outsb
cmc
rcrl
popa
cmpsl
leave
mov
xor
dec
mov
popf
xor
rcrl
fdivp
push
inc
inc
les
rcrb
test
adc
pop
enter
mov
jecxz
jmp
inc
nop
sti
in
jmp
lret
lcall
and
push
out
inc
aam
leave
std
adc
xchg
mov
mov
xchg
enter
in
aas
pop
loop
insl
ljmp
cld
xchg
out
jmp
cs
out
jo
sti
sbb
push
xor
push
jns
cwtl
ret
push
lds
cmpsb
xor
inc
mov
repnz
mov
decl
gs
push
addl
pusha
cmp
adc
jg
std
aaa
ret
mov
or
arpl
or
cmpsb
call
daa
jno
add
ds
stos
cmp
xor
scas
pusha
repnz
enter
or
sbb
lods
call
leave
cmp
and
test
je
aaa
icebp
callw
std
mov
iret
ja
dec
push
dec
sub
sbb
cld
daa
push
inc
inc
pop
fmulp
add
mov
popf
and
outsb
and
jle
xchg
shrb
inc
mov
test
fiaddl
int
je
fsubrl
and
push
dec
fs
xchg
lock
or
cld
test
aaa
xchg
imul
jns
inc
test
call
repz
mov
sti
mov
mov
rcrb
jae
add
inc
lock
fimull
xor
aad
and
jge
add
jge
es
rorb
lods
shl
pop
sbbl
push
inc
int3
xchg
push
adc
movsb
mov
mov
or
jae
xchg
jne
mov
sub
imull
push
loop
mov
mov
jge
adcl
pop
sbb
rorb
inc
xchg
jg
add
aad
cs
or
push
mov
jecxz
aad
loop
nop
push
inc
loop
aad
mov
test
mov
xchg
aam
push
sti
js
adc
clc
inc
out
pop
xchg
pop
imul
push
popa
imul
mov
dec
into
adc
sti
and
fdivr
orl
xor
movl
int3
cmp
fidivrs
jo
push
mov
dec
shr
or
pop
jle
add
jo
push
imul
lods
add
jnp
or
sahf
adc
cwtl
incb
js
fcom
push
fsubrs
out
xchg
push
xor
jno
add
sub
sub
mov
call
mov
sbb
es
cltd
nop
sub
sti
mov
enter
push
dec
scas
push
pushf
dec
mov
mov
jle
xchg
cmp
mov
aas
sub
dec
cmp
shll
in
scas
and
frstor
aas
mov
test
movsl
out
xor
fdivrs
and
std
out
aaa
xchg
stos
push
ret
orb
fs
jb
sbb
test
addr16
mov
mov
and
jmp
cmp
push
mov
add
and
push
push
imul
mov
mov
mov
repz
insl
jg
jo
fcomps
xor
adc
push
jnp
jl
lds
out
mov
mov
insb
push
jbe
xchg
xor
in
jecxz
ds
fcom
cmp
bound
es
into
in
pop
lds
add
pop
mov
jle
rcr
test
test
dec
fsub
or
jns
scas
scas
ljmp
test
in
ret
mov
and
into
mov
jns
sub
aaa
test
cltd
push
ror
shrl
jne
jl
sar
xor
ret
mov
and
mov
repz
and
xor
shll
fs
movsl
int
xchg
loop
inc
xorb
mov
incb
or
ljmp
mov
add
jle
scas
ss
int3
ss
insl
push
push
popa
mov
test
das
xchg
and
cmp
cld
pop
daa
dec
jne
fldz
mov
loopne
fdivrl
add
mov
add
xchg
sub
shrb
pushf
or
int
mov
xor
push
out
loopne
adc
repnz
popf
xchg
push
xor
or
aaa
jmp
push
faddp
hlt
dec
loope
lret
jp
shlb
inc
cli
data16
dec
push
mov
jb
xor
rcll
jle
daa
test
mov
add
std
pushf
jae
cmp
mov
adc
push
mov
bound
mov
movsl
les
lret
cmp
lds
jbe
movsl
outsb
imul
cwtl
jae
test
push
mov
in
outsl
sbb
in
aas
cmp
mov
xchg
jno
or
popa
cltd
sub
jmp
int3
repnz
sbbb
mov
mov
mov
mov
movsl
icebp
orl
aad
lods
dec
mov
fwait
stc
repnz
fisubrl
mov
push
add
push
and
xchg
sub
mov
test
push
push
outsb
shl
mov
mov
ja
lock
cli
mov
adc
clc
sbb
xchg
jmp
loop,pt
jmp
and
xchg
js
mov
mov
pusha
cwtl
es
push
pop
mov
jb
popf
adc
vpunpcklwd
into
dec
mov
push
stos
add
xor
sbb
jne
out
shll
int3
and
xchg
mov
ljmp
sub
call
xchg
xchg
aas
ss
jns
lret
repz
jmp
jecxz
xlat
and
stos
mov
sbb
add
push
xchg
mov
in
and
xor
jne
movsl
std
xchg
jle
mov
pusha
pop
pop
pop
add
orb
lods
xlat
cmp
dec
xor
hlt
ljmp
mov
mov
orb
test
fbstp
xchg
add
adc
mov
adc
inc
lock
jecxz
jb
mov
bound
pop
and
hlt
dec
cmp
test
push
test
outsl
mov
not
into
insl
jmp
push
inc
aam
packsswb
jg
dec
test
jnp
or
std
sahf
add
out
xchg
mov
or
clc
rcrl
cld
sub
into
ret
mov
icebp
nop
pop
mov
push
xchg
add
in
mov
add
xchg
jmp
sub
test
pushf
xchg
popf
daa
and
jb
sbb
xchg
xor
lret
in
or
mov
sbb
aad
xchg
xchg
jl
mov
xor
aad
xchg
jecxz
xchg
lods
ret
les
sbb
int3
inc
mov
mov
fidivs
jp
loopne
push
imul
out
test
jo
jnp
xchg
mov
and
or
pop
mov
popa
mov
xchg
push
pushf
mov
shr
ret
fimuls
lahf
pusha
repz
cmp
inc
jp
mov
cmpsl
mov
shrb
xor
mov
jns
inc
jmp
xor
mov
lret
pop
sbb
sub
lods
adc
test
xor
lahf
pushf
int3
dec
dec
sub
ret
and
mov
mov
xchg
out
mov
push
iret
mov
orl
fdivrl
aaa
mov
mov
sahf
leave
pop
in
ja
shlb
pop
mov
popf
sub
lcall
mov
xchg
in
in
test
shl
mov
mov
inc
dec
add
out
test
inc
int
xchg
jbe
dec
inc
add
add
sub
mov
insl
fwait
and
popf
sahf
stos
insb
gs
aad
dec
jae
and
cmpsb
xor
cmp
out
xor
mov
mov
adc
add
inc
add
xchg
xor
setne
sbb
imul
icebp
loop
mov
aas
cmp
int3
push
fnstsw
or
sub
out
fdivl
subl
and
icebp
pop
ss
iret
xor
jb
push
adc
data16
dec
xchg
add
lcall
pop
add
in
scas
scas
mov
dec
fsubrp
clc
dec
in
clc
inc
js
dec
icebp
add
bound
movsl
and
pop
lcall
sub
pusha
and
cmp
stos
mov
add
xchg
clc
adc
push
mov
dec
int3
test
test
das
mov
or
or
push
mov
dec
sub
addr16
dec
fildl
mov
fildll
inc
xor
dec
dec
add
shll
stos
pusha
pop
or
add
xchg
and
push
mov
jmp
int
shr
in
xor
nop
xor
mull
outsb
push
add
xor
cmp
int
in
jmp
daa
outsl
jmp
in
push
ds
jl
and
andl
outsb
mov
movsb
sar
pop
into
sbb
clc
or
out
xor
mov
dec
in
mov
fstl
loope
pop
rorb
lods
push
or
jb
cld
pop
dec
insl
adc
loope
sub
jno
cmpsb
mov
lods
or
pushw
xor
stos
mov
adc
aas
cmp
pop
in
cwtl
aam
ss
jmp
fwait
insl
aaa
dec
cwtl
xor
sub
jb
fdiv
mov
sti
dec
outsl
inc
push
mov
push
mov
cmp
adc
mov
subl
mov
dec
ljmp
in
out
popf
pop
dec
test
cmp
sbb
cwtl
and
out
jecxz
daa
mov
jp
push
inc
leave
sub
pop
je
test
ljmp
popa
pop
mov
js
mov
out
mov
mov
sarb
sbb
adc
bound
push
leave
push
cltd
jg
cmp
jnp
aaa
cmc
or
dec
xor
lcall
loopne
xchg
std
sub
add
test
daa
gs
jge
in
jno
cmp
data16
rcr
dec
or
push
fldz
mov
cld
xchg
jmp
jle
hlt
xor
je
scas
adcb
pushf
aam
push
and
and
mov
sub
mov
jnp
test
fstpl
je
fldcw
mov
incb
addl
cmc
ret
repnz
sti
scas
cmp
pop
ficomps
pop
cmp
xchg
test
lret
ret
jne
fisttpl
cmp
stos
adc
mov
pop
jns
movb
shll
rolb
hlt
inc
pop
fadds
pop
inc
dec
pop
mov
xor
push
xchg
nop
pusha
xchg
push
jl
dec
xorb
mov
sbb
jo
push
sbb
jae
jnp
pushf
mov
mov
cli
xor
leave
rcrb
test
out
xchg
dec
add
push
pushl
push
push
dec
scas
popf
cmp
mov
pop
mov
add
inc
flds
iret
pop
adc
imul
sarb
push
fistl
mov
lods
and
inc
jo
sahf
inc
add
jle
cmpsl
mov
lret
sbb
adcb
cmp
sar
jns
cmovo
das
pop
or
roll
add
jns
mov
xchg
mov
mov
push
aas
cmc
push
and
loopne
dec
mov
cmp
add
mov
and
xchg
lahf
dec
sub
shrl
out
mov
xor
ljmp
jbe
mov
or
jnp
cmpsb
aad
xchg
repz
movsl
mov
inc
sbb
sub
repz
pop
inc
or
out
movsl
notb
ret
sbb
jns
inc
jae
and
and
push
pusha
jle
in
pop
cmp
mov
daa
xor
leave
pop
push
push
test
popf
xchg
mov
fwait
mov
out
rcrl
push
mov
mov
mov
and
cwtl
aas
subb
jg
mov
jae
jno
cmp
push
insl
fwait
in
xchg
sarl
cmp
add
clc
ljmp
ficoml
sbb
cmp
repnz
les
jg
ficoml
jbe
cmp
sub
push
push
pop
das
inc
mov
sbb
fnsave
push
into
mov
sbb
sahf
test
mov
sbb
pop
xor
adc
lock
pop
jb
mov
dec
mov
inc
jo
out
aam
test
sbb
pop
data16
inc
mov
sub
ljmp
dec
push
jae
leave
pushf
mov
xor
sub
sbbb
roll
lds
mov
or
int
push
outsb
jecxz
iret
xor
jb
inc
adc
jns
fcompl
stc
call
mov
add
dec
daa
adc
pop
push
lret
mov
xor
cmc
and
inc
lods
fnstsw
add
or
add
push
scas
push
pop
fxch
lock
mov
arpl
jae
mov
xlat
sbb
mov
cltd
repz
pop
hlt
mov
push
and
dec
pop
pop
shll
mov
pop
daa
mov
xor
mov
in
and
fistps
repz
add
push
push
mov
dec
inc
jo
rcr
jb
mov
inc
cmp
test
or
pushf
pop
repnz
xor
lcall
pop
ret
xchg
cli
mov
xor
repz
jp
sbb
xchg
sub
loop
add
es
xchg
xchg
pop
unpcklps
ja
rcr
syscall
add
add
and
stos
pop
in
dec
imul
adc
dec
inc
cmp
and
lock
mov
mov
pop
sbbb
push
sbb
push
daa
bound
sub
dec
adc
or
jno
imul
cltd
hlt
or
sarb
mov
xchg
iret
pusha
jge
pop
sub
mov
pop
jecxz
pcmpeqd
mov
xor
push
jecxz
or
jns
mov
ds
icebp
inc
nopl
ret
jns
out
xor
addr16
mov
xor
testl
pop
jns
cmp
mov
ret
dec
ljmp
mov
cwtl
aam
sti
push
loop
mov
sti
push
pop
lock
fstpt
popf
push
jne,pt
push
sarl
ja
and
jp
icebp
test
add
dec
xor
mov
and
pop
jae
and
or
cmp
inc
pusha
cmp
mov
push
outsl
idiv
mov
or
imul
dec
mov
fists
push
call
stc
adc
inc
orb
lahf
or
lcall
mov
sub
pop
push
xchg
cwtl
dec
push
rclb
int
cmpsl
sahf
add
lret
popf
or
in
xchg
mov
sti
int
movsb
jmp
cmp
jns
dec
test
push
sub
loop
pop
mov
lods
lea
rcl
addr16
inc
fdiv
jno
cmp
add
data16
sub
inc
inc
cmpl
mov
mov
jo
sbb
and
rcrl
leave
ficomps
jecxz
ss
push
pushf
divl
rcll
sti
and
push
popf
add
enter
test
popa
sbb
mov
jb
pop
pop
nop
sbb
insl
jg
add
lock
lret
push
jno
ret
push
cmpsl
ljmp
sub
pop
int3
or
cld
aam
pop
cmpsl
into
les
cmp
mov
addb
pop
and
cwtl
add
pop
cmp
push
shl
sub
insb
clc
push
aad
inc
pushf
sub
mov
ss
outsb
mov
sar
rcrb
arpl
scas
adc
xor
les
hlt
ljmp
call
cli
stos
scas
cs
insb
xlat
cwtl
lret
movsb
ret
es
insb
jo
rorl
mov
repz
cmc
cmpl
shlb
enter
dec
fsubrl
pop
ljmp
pop
fdivl
loop
stos
movsl
cli
cmpsb
lret
shll
xchg
xor
cmp
inc
sub
xor
ret
shl
fwait
mov
push
and
xor
ds
inc
jle
add
and
pusha
push
xor
push
daa
testl
lret
inc
and
imul
push
fs
sbb
mov
pop
repnz
mov
add
sub
sub
lcall
mov
xchg
mov
xchg
cmpsl
xor
and
bound
cmp
outsb
psllw
rcrb
outsl
mov
lcall
divl
nop
stos
pop
andb
cmpsb
insb
add
xor
test
cmp
sbb
pusha
test
sub
pop
adc
into
and
movb
lock
repz
xchg
sbb
jle
outsb
pop
pusha
test
fdivrl
jl
ljmp
lret
fs
fistpll
xchg
aas
dec
lds
cmp
sub
or
add
jo
fwait
sbb
mov
adc
push
jmp
mov
jbe
test
jg
add
adc
loop
adc
lcall
sub
es
lcall
dec
dec
cwtl
jne
or
push
lods
xor
fmuls
cmp
sbb
xchg
pop
jo
cmp
inc
vmovq
mov
in
imul
out
in
jg
jne
jo
push
outsb
js
int
or
mov
xor
mov
adc
mov
rorb
dec
mov
cmp
in
lea
mov
aas
rcrb
das
mov
in
decb
outsb
lret
cs
fidivs
lock
int
and
inc
or
aaa
cmp
or
mov
or
jo
pop
call
inc
jns
sbb
pushf
cmc
sub
xor
mov
add
hlt
out
or
push
loope
cmp
test
xchg
mov
shrb
xorl
cwtl
xchg
out
cs
movsb
js
add
decl
sub
add
or
sub
inc
lahf
cmp
lods
push
scas
dec
dec
or
in
lret
mov
pop
dec
nop
insl
pop
dec
dec
fistps
pop
es
sub
popa
push
and
sbb
repz
call
xchg
cltd
xor
adc
push
in
sbb
mov
nop
rcr
lret
sub
mov
pushf
mov
lahf
fucom
insl
movsl
sub
cmp
push
pop
pop
and
xchg
push
push
ss
inc
fstpl
insb
adc
push
mov
mov
jp
sbb
jnp
pop
and
jge
sub
jl
push
mov
repnz
and
lcall
xor
pop
mov
ljmp
imul
or
xchg
sub
lock
cli
push
addr16
xlat
fbld
add
mov
jo,pn
jns
push
adc
leave
mov
in
pop
pop
cltd
sarl
out
call
pop
nop
lods
sete
and
cltd
adc
inc
inc
inc
sbb
sbb
jne
sar
cs
ds
pop
lcall
fisubrl
add
mov
xorl
das
int3
repz
lea
mov
jle
aaa
lcall
xor
push
dec
inc
hlt
movsb
jne
inc
jmp
sbb
loopne
pop
jns
sbb
and
mov
in
xor
push
cmp
sbb
push
leave
mov
mov
out
or
sub
cltd
jle
cwtl
mov
push
jbe
cld
addr16
add
mov
fmull
in
sub
int3
and
cmp
movsb
aad
or
stos
sti
lods
xchg
pop
out
cmp
or
sarb
jnp
lcall
les
push
mov
clc
add
decl
mov
pop
add
pushf
bound
pop
push
mov
mov
outsl
pop
sub
xchg
mov
cmpl
cmp
sub
imul
inc
mov
int
scas
jnp
push
add
outsl
sarb
ret
aad
mov
movups
movsb
in
pop
mov
dec
cmp
sbb
and
shl
dec
mov
lahf
iret
and
ljmp
jmp
add
lret
inc
call
jge
cwtl
sub
int3
dec
mov
adc
cwtl
and
push
in
test
ror
sbb
cld
stc
mov
aas
mov
jo
fwait
inc
ja
mov
inc
and
push
fwait
sti
popa
imul
es
mov
call
jb
and
popf
inc
ja
daa
roll
sti
fstp
ds
mov
andb
in
fstpl
push
out
adc
popl
and
test
std
jno
pop
adc
inc
in
jne
lods
xor
loopne
scas
ja
jp
jecxz
test
fdivrl
xchg
jns
out
into
rolb
scas
adc
dec
mov
repz
pushf
jb
pusha
je
or
or
pop
push
movsb
xchg
mov
fs
movsb
xchg
pop
inc
popf
dec
bound
cld
xchg
out
cmp
pushf
jmp
xlat
dec
xchg
loope
loope
imul
mov
leave
movl
lahf
or
xor
popa
jecxz
sbb
pushf
test
xlat
cwtl
pop
add
sub
movsl
sbb
fildl
clc
xor
repz
ja
xchg
mov
rclb
mov
and
cwtl
dec
push
cmpsl
mov
xchg
add
add
dec
pop
arpl
ret
imul
scas
dec
mov
hlt
dec
movsb
leave
mov
sahf
rolb
fs
rcrb
lea
stc
cmp
cld
repnz
mov
rcl
add
les
mov
insb
add
out
sbb
test
xorl
jmp
in
repz
xor
aam
cli
lds
pusha
call
xlat
mov
out
or
fldt
jg,pt
loop
push
imul
enter
mov
dec
add
aaa
adc
fstps
inc
inc
ret
mov
in
cmp
and
fistps
aaa
xor
cwtl
rclb
xchg
insl
push
aad
shrl
fs
xchg
xchg
or
rcl
add
nop
lahf
stc
and
sub
pop
push
xor
sti
fadds
dec
lock
mov
push
mov
clc
sub
out
in
cmp
cmpsb
testb
cmp
ret
std
sub
push
mov
mov
xchg
cmp
int3
sbb
lcall
push
in
lea
out
idivb
jg
stos
pop
sub
jp
mov
push
jo
out
push
mov
adc
js
jnp
roll
repnz
fsubrp
or
jmp
fcoml
jno
jmp
loop
push
cmp
loop
and
lahf
roll
stc
push
lds
lods
xor
push
ret
push
pop
out
push
lcall
mov
jnp
ss
and
iret
in
ljmp
cmpsl
lock
pop
rorl
jne
and
xchg
int3
add
jne
mov
aas
pusha
mov
sub
sub
inc
or
mov
pop
fwait
add
xchg
and
xlat
jne
int3
test
sbb
inc
add
call
jb
push
fildl
dec
sbb
inc
push
cmp
shlb
bound
stc
xor
add
rorl
js,pn
jne
pushf
mov
xchg
xchg
add
loop
xchg
push
icebp
sub
mov
data16
mov
cltd
in
mov
sbb
fs
add
add
sub
xchg
shrb
xor
adc
dec
xor
mov
mov
insb
add
inc
pop
xor
mov
lahf
add
and
or
cmc
test
push
inc
mov
into
jne
add
or
sub
mov
cmp
mov
scas
adc
jnp
into
jne
rcrl
popf
xor
cwtl
add
cmp
pop
std
into
stos
adc
dec
sub
insl
rcl
adc
pop
lods
lcall
daa
lcall
push
loop
jmp
jmp
mov
lods
sarl
xchg
pop
fwait
ljmp
aam
add
add
lahf
dec
int3
out
inc
xchg
test
aaa
jp
adc
cld
jae
jo
imul
mov
xor
mov
jnp
sub
daa
ss
cltd
orb
inc
pusha
test
jno
insb
mov
adc
jnp
jp
mov
sub
mov
sbbl
pushf
addb
mov
pop
stos
adc
add
sub
jo
mov
movsl
in
lds
out
iret
jae
outsb
sub
insl
jl
test
mov
mov
pop
add
inc
pushf
jae
popl
out
dec
mov
xor
push
jb
clc
dec
outsl
mov
or
cmp
adc
fucomi
pop
and
pop
repnz
or
nop
mov
out
loope
fadd
adcb
fdiv
lock
fadds
mov
dec
fdiv
sub
jbe
jge
jg
push
pop
xchg
lea
sub
fildll
push
fisttpll
test
pop
or
and
dec
mov
sub
repnz
xchg
jecxz
fwait
call
pusha
lods
dec
push
lds
xchg
push
sbbb
jmp
fwait
cmp
xchg
sbbl
jl
sti
sbb
daa
enter
pop
mov
lret
in
pop
outsl
out
fs
mov
js
or
sti
mov
popa
mov
xlat
inc
dec
imul
mov
inc
and
xchg
jecxz
std
pop
lock
push
cli
mov
scas
repz
stos
in
inc
outsb
sbb
and
sub
or
push
insb
das
and
out
pop
daa
int3
jecxz
out
imul
mov
xor
arpl
dec
pop
dec
xchg
hlt
orb
addb
in
jo
and
notl
outsb
dec
mov
jle
mov
lret
in
adc
sub
fcoms
pop
out
mov
jmp
push
repnz
popa
dec
jno
pop
mov
pop
inc
arpl
stos
mov
mov
jmp
std
popa
xchg
repz
test
mov
or
out
pop
pop
jne
and
into
shrb
sub
jecxz
push
sbb
lret
inc
jnp
mov
mov
mov
stos
mov
xor
lcall
jns
and
mov
fwait
cmpsl
mov
or
jns
mov
test
enter
movb
addr16
out
mov
ret
add
test
loope
bound
scas
loope
imul
mov
sbb
out
test
xchg
lretw
adc
test
push
lock
mov
int3
rol
mul
lock
jmp
rcll
imul
jecxz
test
fisttpll
pop
addr16
psubd
xlat
sbb
scas
jmp
pop
sub
adc
loopne,pt
pandn
xor
inc
or
adc
or
mov
scas
or
aad
lock
cmp
movsl
movsl
xchg
add
push
ja
scas
and
push
jg
orb
and
dec
das
test
in
das
or
add
sbb
jp
push
fcmovu
and
movsb
jge
adc
xchg
adc
aaa
fs
out
mov
xor
repnz
and
sbb
sub
adc
out
rcrb
push
lcall
shll
adc
ljmp
repnz
incb
inc
mov
adcl
out
imul
cmp
lahf
imul
outsb
hlt
testb
pop
std
test
push
mov
mov
inc
dec
leave
or
jg
popf
mov
call
les
divb
sbb
xchg
push
jne
or
adc
jp
cwtl
inc
out
push
arpl
adc
loopne
jno
out
sbb
jmp
push
inc
outsl
mov
ja
xchg
lea
push
mov
mov
dec
pop
jbe
aam
sub
xchg
fcoml
imul
push
xchg
pop
test
push
mov
mov
jne
jb
cmp
les
xchg
dec
lcall
scas
out
cmp
imul
xor
xchg
jbe
mov
fiaddl
adc
ss
loop
arpl
movsb
jns
xor
bound
scas
iret
and
stos
sub
dec
arpl
jp
cmp
lods
mov
cltd
int3
leave
ret
jns
popf
out
push
ret
sti
pop
xor
lret
sub
pop
xchg
cmc
stc
xor
dec
dec
out
cmp
stos
movsb
add
imul
movsb
dec
pop
lods
dec
sbb
inc
loopne
mov
mov
and
push
jg
mov
sbb
cs
ss
addb
jno
sbb
inc
fnstsw
out
cwtl
inc
lods
int3
xchg
xor
hlt
cmp
push
xor
inc
push
cs
hlt
ret
out
xor
rclb
testl
imul
add
pop
jnp
iret
inc
nop
fiaddl
enter
aam
pop
cmp
xchg
js
cmp
hlt
xchg
and
icebp
testb
and
push
sbbb
cmp
sbb
sub
xchg
std
repz
fwait
lret
push
sbb
mov
xchg
cmp
ficompl
cmp
lahf
inc
push
mov
sarb
and
enter
cmp
jge
enter
jne
add
test
inc
or
dec
sbb
add
lods
dec
loope
inc
ret
test
addr16
sbb
lret
or
cmp
imul
sbb
inc
mov
into
lret
sub
andb
cmpsb
movsl
ds
push
jno
in
mov
pop
iret
lods
arpl
jno
mov
jp
in
add
ret
push
jbe
scas
jno
jno
ljmp
cmp
gs
rclb
out
inc
xchg
mov
es
mov
cld
push
out
call
js
mov
jnp
roll
sti
mov
mov
arpl
jae
mov
sti
cmpsl
orl
jle
xor
sbb
js
imul
js
jge
ret
cmp
in
dec
add
in
xchg
jge
jbe
inc
jg
add
out
aam
mov
sbb
nop
enter
icebp
jo
jne
sub
in
pop
cmc
cld
ds
sbb
cld
mov
out
adc
scas
jle
push
mov
add
icebp
sub
xor
sub
test
and
adc
xlat
sub
mov
lds
lcall
sub
lds
xchg
mov
jp
aaa
adc
and
fistpll
cmpsl
dec
popf
pop
movsl
adc
pop
fwait
lret
pop
adc
scas
or
lea
lret
or
pop
ja
jge
mov
call
pop
or
in
sbb
bound
orb
xchg
mov
out
inc
pop
mov
mov
pushf
in
lods
pop
jmp
mov
stos
insb
mov
enter
ret
inc
dec
and
lcall
xor
jne
clc
movsl
fwait
push
mulb
flds
pop
jnp
movsl
or
mov
add
fmull
pusha
mov
mov
or
movsb
cld
sbb
push
jmp
sub
cmp
mov
inc
jp
dec
mov
insb
or
push
inc
xor
pop
inc
repnz
cld
shrb
sub
ss
sahf
repnz
fdivl
call
mov
aas
jecxz
mov
mov
cmp
cwtl
int3
adc
pop
jg
and
push
add
dec
jge
repnz
mov
idivl
test
out
pop
and
js
scas
and
mov
dec
cli
pushf
in
out
nop
cs
sti
mov
loope
stc
jbe
lcall
inc
or
mov
les
dec
addr16
add
mov
pusha
sub
addr16
sub
adc
jno
jbe
incl
xchg
aas
fnstsw
jle
out
fcmove
sbb
and
adc
addr16
mov
xchg
sbb
mov
dec
es
cmp
aam
out
in
add
mov
ss
jle
cltd
and
test
ds
push
xchg
mov
rorl
cmp
lods
mov
aas
loopne
js
sub
inc
inc
adc
js
shr
adc
pop
mov
imull
sub
or
pop
sbb
nop
xchg
cld
cmp
xchg
or
aaa
loop
xchg
inc
mov
and
xchg
or
dec
call
add
popa
and
iret
pop
pop
dec
fdivl
stos
jmp
add
outsb
aam
sahf
insb
push
nop
cli
imul
xor
jno
popa
inc
outsl
lret
mov
hlt
in
xor
jecxz
jp
lods
mov
in
outsl
xor
push
xlat
fdivs
mov
sbb
sti
cmp
or
pusha
shl
loop
lods
sub
data16
inc
outsb
xor
xor
fimull
dec
xchg
scas
xchg
mov
adc
mov
mov
daa
pop
sub
aaa
call
xlat
nop
jge
jnp
push
arpl
or
inc
je
mov
and
movsb
mov
jmp
testb
cli
in
in
mov
push
int
xor
mov
rclb
push
adc
jge
mov
jne
adc
push
jae
mov
push
xor
jmp
scas
in
lret
aad
xor
xor
xor
pop
add
push
xchg
aam
add
shll
pushf
stc
cmp
ficoms
div
je
push
jmp
pushf
sbb
jns
mov
addr16
shr
cli
lret
ljmp
sub
cmp
lods
mov
lods
push
lret
xchg
add
test
add
mov
enter
out
out
mov
popa
adc
mov
mov
jecxz
call
mov
stos
mov
outsb
test
sub
pop
adcl
mov
cmp
loope
mov
and
xor
push
mov
orl
jmp
int
cmp
mov
xor
push
stos
mov
jl
cs
xchg
pop
dec
mov
pop
scas
cli
clc
xor
mov
sub
fnstcw
fiaddl
cmc
add
nop
imul
es
xor
push
movsb
cmp
mov
add
jmp
pop
andb
mov
sub
stos
xchg
dec
mov
loope
in
in
add
xor
int3
mov
or
call
mov
push
push
pusha
ljmp
inc
cltd
sub
aaa
mov
dec
and
cmpb
add
cmovp
nop
add
out
test
inc
adc
les
in
mov
popf
jg
and
pop
std
or
sbb
jecxz
cmpsl
aaa
dec
push
sbb
adc
cmpsl
shrb
cmp
lods
fistl
jne
inc
fidivrl
sub
jnp
adc
add
sub
pop
jnp
xor
or
inc
call
cltd
or
inc
pop
and
inc
daa
movsl
pop
jae
lds
cmp
aad
adc
bound
int
leave
mov
cmp
inc
mov
inc
jo
lcall
adc
mov
mov
pop
daa
add
out
icebp
lahf
nop
daa
adc
cli
lods
call
repz
push
out
shll
cld
sbb
ja
js
call
cmpsl
sub
jbe
xor
fiadds
sahf
pop
mov
stc
fmull
fxrstor
cmp
inc
cmp
dec
test
cmc
leave
scas
imull
insl
mov
test
sub
mov
and
ds
popa
cmpl
dec
rol
je
cmp
sarl
pop
out
pop
je
pop
movl
popf
out
adc
popa
and
xor
pop
mov
je
jnp
xor
hlt
iret
lcall
sub
fiadds
mov
push
add
pop
push
subl
ret
sbb
or
sbb
xor
mov
in
xchg
and
cmc
movsb
int3
add
lret
stos
sub
lret
mov
rcrl
loopne
jo
gs
stc
imul
sub
aaa
packssdw
jb
stos
xor
aam
jns
mov
mov
aas
dec
jmp
out
jbe
jb
icebp
fiadds
repz
xor
lret
and
fisubs
out
mov
je
mov
shrl
loop
xchg
rolb
out
xor
xchg
push
mov
or
pushf
out
mov
dec
faddl
cs
out
mov
insb
inc
outsb
ret
mov
jb
inc
xor
fnstsw
jl
xor
stc
inc
lcall
push
aam
mov
in
push
lahf
push
frstor
mov
sub
test
or
jb
mov
into
imul
dec
in
cmp
ds
pop
xchg
insb
leave
les
xchg
lock
lds
movsl
lea
sub
loop
pop
jg
test
cmp
push
mov
je
jl
cmpsb
mov
in
insb
push
pop
sub
fstps
pop
jle
cmp
outsl
xchg
xchg
push
ss
inc
or
hlt
push
pop
xchg
lret
das
and
xchg
ds
aam
adc
pop
push
and
mov
scas
cmp
loop
xchg
ljmp
or
mov
or
mov
push
cmp
pop
repnz
fisubs
push
stos
daa
mov
movsb
gs
cmp
aaa
push
push
fldl
ja
xchg
shll
fs
sbb
push
popf
addr16
out
mov
repz
mov
add
js
push
pop
or
lods
mov
movsl
pop
pop
mov
pop
or
pop
mov
lret
pop
test
mov
or
add
sbb
pop
out
cs
mov
ficomps
aam
dec
mov
add
cmp
push
rcll
xchg
push
mov
xchg
add
mov
sar
sub
out
jo
lds
inc
or
mov
ljmp
adc
push
mov
mov
pop
cwtl
ret
mov
les
or
divl
sahf
add
pop
imull
cmc
adc
or
mov
jge
ljmp
js
pop
xchg
test
les
inc
ds
scas
xcrypt-cbc
cmpsl
push
pop
iret
das
cmp
cmp
inc
sbb
mov
xlat
mov
cs
inc
cmc
repnz
fildll
add
adc
fdivrs
add
pop
push
mov
gs
repz
ret
xchg
enter
add
add
sub
aam
push
mov
mov
fs
adc
imul
lock
insb
out
lock
data16
cmp
xchg
push
mov
iret
cmpsb
rclb
cmpb
mov
add
mov
mov
loopne
xlat
and
test
jae
mov
mov
loop
ds
sbb
lcall
or
xchg
adc
shr
loope
shll
daa
out
jae
shrb
jo
push
pop
jo
fstps
lods
pop
pop
sbb
push
psraw
mov
div
loope
mov
inc
add
cmp
mov
fbstp
fnsave
mov
test
fisubs
cmc
xchg
bound
lret
loope
icebp
add
add
mov
loope
jmp
jno
jge
mov
rcrb
ss
insl
dec
adc
push
outsl
inc
jmp
int
outsl
outsl
sahf
cmp
or
and
push
mov
lea
sub
cmc
inc
in
cmp
test
stos
outsl
inc
das
fs
push
add
jne
mulb
fs
add
loopne
pop
pop
loope
pop
push
sbb
sub
mov
mov
xchg
lret
cwtl
out
shrl
aas
push
jp
add
mov
lock
imul
inc
push
xchg
mov
enter
mov
je
arpl
out
pusha
pop
loop
cmp
cmp
outsl
es
jp
stos
std
andb
aas
fisubs
adc
loopne
push
lea
add
cwtl
sub
sbb
add
cltd
out
pop
lcall
lock
into
jecxz
adc
adcb
mov
add
shlb
push
aas
in
dec
sahf
fstl
cmp
std
les
fimull
and
enter
es
arpl
jg
aam
jecxz
mov
xchg
pop
adc
shlb
shrb
int3
sub
mov
mov
lods
mov
mov
jge
pushf
sub
jge
sbb
rsqrtps
andb
push
cmpsl
sub
push
jmp
xchg
clc
fwait
jno
cmp
arpl
cmp
mov
jecxz
sbb
mov
call
sub
add
iret
and
pop
rcrb
outsl
inc
adc
gs
mov
push
mov
mov
outsb
sbb
and
sub
fists
push
xchg
fnsetpm(287
cmp
popf
jmp
pop
test
add
mov
pop
or
pop
sbb
test
lea
fcomi
shr
mov
ret
push
in
cmpsl
jno
popa
clc
inc
aaa
rorl
shl
push
cld
arpl
mov
xchg
int
adc
cmpsl
dec
pop
cs
mov
popf
dec
jns
mov
xchg
mov
repz
ss
or
scas
dec
movsl
adc
sub
test
repz
adc
insb
sar
stos
sbb
daa
cmp
mov
in
mov
xchg
sub
xor
addr16
insb
les
push
daa
push
addr16
fdivrp
mov
imul
cwtl
test
cltd
inc
cmp
daa
sti
adc
push
aad
mov
pop
pmulhuw
mov
outsl
xchg
mov
mov
or
sbb
std
es
mov
mov
dec
and
jle
cmpsl
pushf
inc
jg
lock
jns
ja
pop
arpl
xor
dec
sub
aas
icebp
add
sbbl
cmp
cltd
in
or
out
push
add
cmp
pop
test
cli
push
lcall
repnz
mov
psubd
sub
mov
sbb
adc
push
xchg
or
mov
dec
xlat
mov
jecxz
pop
stc
mov
sbb
mov
pop
mov
arpl
jne
popa
mov
jge
lds
hlt
cli
cmpsb
or
jecxz
adc
js
inc
add
xlat
adc
ror
mov
or
cmp
xor
mov
pshufw
sbb
sub
fsubl
shlb
sub
push
jno
push
or
pop
xchg
adc
ss
cmc
aam
xor
fs
lock
pop
test
sbb
mov
xlat
in
sub
lea
pop
xchg
mov
pusha
js
jb
addr16
pop
scas
mov
sbb
sbb
xchg
cmpb
jo
sti
mov
xchg
jns
cli
adc
ret
iret
insl
repz
stc
and
or
adc
cmp
adc
or
lds
and
jg
gs
out
or
inc
clc
mov
inc
mov
test
dec
repz
rcr
mov
jo
add
dec
neg
cmp
rolb
mov
xchg
cld
outsl
js
mov
lds
mov
cmpsl
test
out
aas
fs
iret
xor
iret
sbb
mov
sbb
jp
xor
jecxz
imul
adc
mov
add
mov
push
mov
adc
fndisi(8087
push
inc
push
or
dec
pop
mull
cmp
cmc
andb
jle
negb
sub
cmc
mov
pusha
or
stos
lods
sti
push
mov
adc
xchg
jg
and
sub
inc
adc
lret
jmp
xor
jns
test
cwtl
mov
in
or
inc
push
je
mov
mov
push
gs
hlt
xor
outsl
aaa
push
xchg
jae
push
mov
data16
ja
repz
xchg
movsl
xchg
inc
push
outsl
mov
aas
jae
jle
push
scas
pop
leave
ljmp
add
repnz
enter
and
fmull
cmp
flds
loop
mov
mov
scas
loop
popa
mov
enter
push
cmp
loopne
mov
mov
adc
mov
pop
cld
out
push
les
inc
jmp
sub
adcl
mov
ljmp
add
sbb
cmp
push
aad
sub
jb
adc
pop
call
push
xchg
mov
pop
cmp
mov
xor
dec
mov
jns
sbb
ds
es
daa
lock
cld
adc
jg,pt
dec
mov
push
lods
sub
mov
push
xor
xchg
orl
inc
and
subl
in
lcall
sub
pop
sbb
xor
sub
loopne
popa
clc
scas
jle
setge
ss
hlt
cmp
insb
dec
push
ret
shrl
push
and
pop
lea
pop
jb
xor
out
fsub
inc
jne
ret
xchg
cmp
adc
jl
adc
mov
ljmp
mov
fs
testl
xchg
xor
cld
cld
sbb
out
push
jle
xchg
mov
test
enter
add
mov
cmp
in
out
insl
addr16
je
repnz
out
insb
dec
xlat
test
mov
pop
shr
stc
js
xchg
dec
dec
pop
mov
aaa
mov
pop
addr16
pop
in
mov
cwtl
adc
hlt
xchg
xlat
mov
js
adc
adc
cmpsb
sub
push
adc
add
aad
push
fsubs
inc
inc
int
cmp
mov
or
fisttpll
add
sub
imul
js
in
lods
push
out
mov
dec
cmpsb
sbb
mov
cmp
bound
sbb
mov
pusha
xor
lea
xchg
lahf
outsb
out
imulb
mov
ret
cli
adc
dec
pop
stc
cs
insb
push
jp
sahf
jmp
inc
lock
addr16
aad
xor
cmp
inc
int
inc
xchg
mov
mul
lds
mov
out
pop
cld
cmc
mov
in
cmp
add
daa
inc
out
add
out
push
and
cmp
test
sub
mov
sub
mov
out
popf
jge
jbe
loop
xchg
adc
xor
out
and
popf
cmpsl
mov
or
xor
mov
inc
popa
fsub
xchg
or
pop
mov
xchg
in
aaa
and
jecxz
loopne
xorl
xchg
mov
dec
sbb
lcall
pop
mov
inc
sbb
fstps
jmp
std
hlt
xchg
xor
mov
mov
lret
pop
sbb
mov
in
mov
jmp
mov
adcl
pop
repnz
adc
daa
jns
and
adcb
imul
and
test
xchg
sahf
mul
je
cld
sbb
mov
dec
imul
lcall
add
fcmovbe
es
js
push
mov
loopne
dec
outsb
or
xchg
movsb
popa
xor
inc
push
popa
inc
insb
adc
mov
scas
xchg
push
add
faddl
stc
ljmp
sub
cmp
loope
leave
mov
jo
pop
and
test
inc
fdivs
ret
mov
ds
fmuls
mov
fwait
cmc
rcrb
pop
pop
push
mov
shrl
imul
mov
mov
lcall
dec
jge
xor
push
pop
subb
push
lods
test
and
out
xlat
add
pop
sti
jl
adc
mov
sub
pop
cmp
dec
idivl
daa
cmp
add
les
subb
imul
movsb
shrl
dec
outsb
push
aad
xchg
push
mov
int
pop
jmp
sbb
mov
or
or
push
fnstenv
inc
pop
add
xor
xor
in
ljmp
jl
sahf
data16
xor
js
inc
movsl
cmpsl
fnstcw
ret
out
repnz
or
call
cwtl
stos
ds
fcoml
xchg
fstl
fisubs
insl
jns
xor
sbb
xor
jl
test
push
hlt
sub
push
cld
pop
xchg
inc
adc
in
add
mov
repz
push
sub
std
fdivl
add
pushf
jne
fidivrl
fisttpl
pop
jg
int
out
test
popf
xchg
cmpl
jo
push
xchg
add
dec
mov
repnz
fisubrl
ss
mov
and
xor
inc
xorl
pop
lock
ljmp
shrb
lods
jg
pusha
mulb
scas
mov
fnsave
pop
imul
push
and
mov
rorl
jle
repz
dec
loopne
nop
rclb
lret
in
gs
dec
insl
movsl
push
test
cmp
in
jno
rclb
jmp
repz
cmp
pop
pusha
sub
push
mov
leave
fdivrs
inc
xchg
aaa
sub
mov
in
ds
dec
mov
daa
sub
shl
rorb
mov
int
sbb
stc
add
xor
mov
ja
cmpsl
mov
clc
ret
dec
aaa
mov
mov
or
xor
mov
loopne
pop
jmp
pop
jmp
iret
test
xchg
inc
imul
rcr
ret
arpl
cmpsb
in
loopne
xor
pop
pop
add
movsl
cmpsl
dec
imul
shl
push
xlat
or
subb
jno
inc
add
push
mov
movsl
jae
push
dec
cmpsl
xchg
mov
sub
mov
lock
nop
mov
adc
ds
pop
jmp
cltd
mov
testb
or
fscale
mov
les
loope
push
and
imul
jno
shlb
mov
sahf
aaa
out
cmp
in
xor
or
mov
xor
mov
das
push
repz
sbbb
shrb
dec
aaa
jne
shlb
push
xor
lock
lods
cmc
cmp
daa
cltd
add
lea
xchg
fisubrs
adc
mov
cmp
jns
xor
bound
inc
insl
lods
fiadds
jne
subl
lret
pop
inc
or
imul
sbb
inc
movsb
xor
fwait
pop
mov
int3
sub
ja
test
mov
and
test
insl
daa
push
dec
bound
xchg
cltd
pop
cmpl
inc
xor
xchg
in
out
sub
mov
xor
add
push
stos
stc
xchg
xor
in
out
jge
mov
arpl
jge
add
sbb
dec
dec
movsl
inc
cltd
push
sahf
in
arpl
pop
in
pop
mov
enter
test
cs
and
jmp
aad
mov
mov
xchg
fs
sbb
and
jb
xchg
loope
pop
cmp
test
insb
iret
push
and
pop
adc
mov
lret
out
inc
repz
jne
loop
push
push
fs
lahf
or
loope
mov
arpl
les
fwait
aad
lods
sti
add
mov
mov
sub
pop
call
mov
orb
rcr
pop
dec
lods
es
push
pop
xor
or
loopne
mov
bound
jecxz
push
es
out
fbld
mov
orl
cwtl
cmp
stc
xor
insl
cmpsl
or
or
in
pop
aad
ret
fisubrs
push
int
shrl
sbb
mov
mov
or
lcall
jbe
push
sbb
sub
mov
sub
arpl
push
repnz
cmpsl
jl
adc
push
cmpsl
out
fnstenv
xchg
xor
test
xor
push
test
shlb
mov
lret
adc
cmp
dec
arpl
out
int3
mov
or
and
mov
jne
shl
bound
lds
xor
pop
test
xchg
push
test
push
pop
fcoms
pop
daa
rcrb
fcoms
pop
cmpb
add
test
or
push
mov
jnp
xchg
jae
lods
ja
pop
xor
pop
inc
cmp
cmpsl
mov
add
dec
cltd
and
inc
jnp
out
aas
out
add
xchg
test
xchg
js
loopne
and
push
stos
clc
dec
insl
or
test
add
mov
pop
movsb
mov
mov
dec
pushf
test
lret
lods
nop
lods
icebp
fcmovu
subl
mov
adc
fstpt
adc
int
aam
in
stos
mov
push
and
or
mov
xor
or
xchg
mov
out
or
insb
adc
sub
test
xor
notb
xchg
xor
ret
push
je
arpl
cmp
push
mov
adc
jmp
dec
in
jg
gs
insl
add
mov
push
in
lock
push
aam
and
shl
xchg
out
call
repnz
inc
insl
sarb
sub
cmpsb
popf
jnp
andb
lret
sbbl
jmp
les
pop
hlt
jno
ljmp
jo
dec
js
mov
mov
jge
stos
or
fldt
xor
mov
imul
test
push
mov
mov
fnstcw
adc
push
aam
xorb
repnz
jne
and
sbb
mov
lods
xor
out
cmpsb
lahf
popa
iret
xchg
test
call
cmc
inc
sbb
sub
out
dec
outsb
dec
scas
out
in
sub
xchg
xor
pop
or
jecxz
adc
cli
mull
xlat
push
cmpb
stos
cmp
add
mov
test
gs
les
imull
mov
mov
xor
xor
cmpsl
xchg
int3
ret
mov
sbb
int3
sub
enter
sub
pop
movsb
xlat
pop
or
or
cwtl
sub
cltd
jge
pop
mov
cltd
or
fistpl
push
sub
mov
jne
ret
scas
jnp
and
cs
loopne
sbb
sbb
cltd
sbb
leave
inc
jecxz
push
push
aad
decl
xchg
push
mov
inc
pop
idivl
add
pop
paddw
jg
sti
add
or
add
loope
mov
lock
rcl
or
leave
adc
and
jmp
xor
mov
adc
scas
adc
sbb
les
aam
sbb
jg
xor
add
xchg
nop
arpl
out
pop
pusha
jno
fs
and
test
in
add
jnp
add
sub
push
and
clc
ljmp
xchg
jno
outsb
lret
outsb
sahf
loop
push
fmulp
outsb
mov
fdivs
and
mov
add
pop
cmpsl
scas
mov
scas
stos
out
icebp
sub
sar
mov
inc
sbb
xchg
xchg
add
push
sbb
outsb
pop
jne
and
js
gs
and
xor
push
leave
scas
repnz
xchg
xor
cmp
sbb
mov
and
and
loope
repz
push
jg
js
aam
repz
out
pavgb
or
ret
movsb
mov
add
ds
jg
std
data16
aam
xchg
popf
imul
sub
pop
xchg
sahf
and
loopne
sbb
sbb
iret
sti
sub
adc
add
orb
pushf
lds
daa
arpl
dec
popf
pop
in
int3
or
xor
inc
add
sar
or
pcmpeqd
and
arpl
mov
pop
adc
cli
push
sub
mov
es
stc
fsubl
ss
jb
jmp
mov
cmp
jmp
jns
push
and
xchg
mov
cmp
fbstp
rol
sub
mov
pop
das
call
jb
leave
pop
mov
mov
xchg
aad
jb
lock
mov
sti
or
mov
test
or
fstps
sbb
out
push
xchg
cmp
mov
pop
inc
jo
popf
hlt
xchg
ss
cmp
imul
or
cs
xor
mov
bound
int3
and
and
aam
xorb
add
push
test
out
loopne
lods
push
repz
jge
sar
jbe
loop
in
fsub
jmp
inc
mov
add
xchg
imul
push
cmp
add
push
outsb
aam
insl
and
mov
dec
int
adc
loope
icebp
push
push
lret
inc
cmp
cmpsb
stos
cmp
push
movsl
nop
scas
in
adcb
es
and
ja
jne
xorb
push
push
int3
stc
mov
push
xchg
ljmp
imul
gs
aaa
out
mov
in
aam
stos
sub
jnp
xor
out
cmp
fsub
cs
push
cltd
test
stc
xchg
xchg
push
push
popf
in
and
call
sbb
dec
daa
pop
or
aad
mov
test
insl
movsl
bound
xor
and
sub
inc
add
or
xor
fisubs
sarl
and
add
loopne
fwait
push
fldt
int
nop
xorl
movsl
mov
cmpsl
cwtl
movsb
repz
cli
cmc
sub
push
inc
sbb
cmc
xor
testl
lcall
mov
cmp
lret
mov
aaa
sub
pop
jno
nop
cmp
push
sahf
dec
xor
jne
pusha
fcmovnu
sub
or
lds
lret
stos
xchg
mov
outsb
inc
inc
sub
pop
shrl
roll
sbb
adc
pop
or
sbb
push
lods
jge
sub
push
add
aam
adc
mov
mov
stos
inc
insb
out
fsubl
loop
jle
xchg
std
insl
xchg
push
xchg
cs
imul
adc
push
add
sub
pushf
loopne
mov
add
call
fistl
outsl
xchg
dec
mov
lods
ret
in
sbb
jbe
push
in
cmpsl
std
es
mov
icebp
out
or
cwtl
mov
xchg
sarb
jnp
mov
xchg
sub
pop
repnz
out
push
insb
test
jo
outsl
pop
mov
orl
xor
pop
fnsave
mov
push
sti
cmpsl
pop
aam
fidivrl
sub
scas
daa
xor
pop
fwait
stos
and
inc
fwait
es
in
push
pop
xor
or
push
jae
movsb
xor
dec
xchg
jns
hlt
mov
jb
jbe
add
and
into
enter
lods
inc
ja
dec
aas
daa
sub
imul
dec
sbb
add
lods
int3
xchg
sti
cmpsb
sahf
fcmove
mov
pusha
stos
pop
lds
in
sbb
movsl
push
xor
jbe
xchg
or
inc
mov
or
roll
dec
icebp
into
push
dec
mov
jge
dec
fdivl
stos
add
and
pop
iret
daa
scas
sahf
ror
icebp
stc
out
cs
sti
enter
fldt
cmp
xchg
push
rclb
iret
int3
and
out
and
test
xor
or
jne
and
add
jbe
and
test
pop
ret
popf
clc
shl
lret
mov
sbb
int3
rorl
sbb
out
adc
or
outsb
leave
js
sbb
pop
in
iret
sub
sub
pop
jle
popf
push
test
mov
add
es
lcall
repz
jae
adc
adc
jl
fld1
arpl
push
dec
jg
inc
adc
add
popf
cmpsb
jne
orl
leave
mov
mov
cmpsb
ficomps
repnz
mov
cmp
jmp
repnz
cmp
fwait
jge
jnp
cltd
in
mov
movsl
cmp
xchg
jge
stos
repz
je
mov
pushf
pusha
lret
mov
or
xchg
out
out
sub
jo
nop
ss
dec
mov
xchg
aaa
into
push
int3
ljmp
out
adc
cltd
lret
jl
iret
rorb
out
mov
imull
fcmovnb
jmp
pop
sbb
cmpsl
ja
sbb
cmp
add
stc
or
mov
xor
mov
js
dec
movsb
or
leave
xor
std
dec
iret
pop
jno
frndint
mov
insl
mov
inc
inc
push
pop
sub
into
mov
push
xchg
push
jbe
or
jl
mov
ljmp
pop
sbb
push
push
jne
jb
imul
pop
push
into
sub
dec
cmp
cld
cwtl
std
xlat
mov
dec
lahf
pop
daa
sbbb
loopne
xchg
mov
decb
sub
sub
xchg
ret
shr
sub
adc
mov
andl
xchg
sarl
add
out
test
jae
loop
add
pop
inc
roll
sbb
ret
pop
push
sub
inc
ja
add
pop
and
push
push
add
and
lcall
adc
ret
xchg
ljmp
cmp
adc
subb
inc
arpl
xchg
aas
jecxz
push
ret
in
test
mov
mov
inc
mov
adc
and
popa
adc
inc
pop
jne
rolb
sti
enter
xor
mov
push
dec
xor
cs
in
addr16
scas
adc
sub
cld
rolb
cwtl
fldenv
rcll
movlps
sub
ret
pop
js
and
push
js
pop
xchg
in
xor
hlt
fcmovb
jp
ljmp
inc
push
dec
shlb
push
pop
loop
or
std
cmp
jne
adc
es
aad
scas
mov
add
or
xor
sub
pop
lret
or
movsb
cld
jo
jae
mov
gs
lea
das
jo
lods
xchg
push
mov
test
sarb
cmp
loope
popa
aad
jae
push
out
push
outsb
shl
mov
je
ja
add
out
pop
inc
mov
mov
aad
sarb
xor
and
or
or
out
scas
repnz
les
aad
mov
mov
out
cmpsb
cli
cwtl
mov
fbld
sbb
stos
add
cmc
xchg
sbb
jp
stos
ja
and
cltd
inc
cld
outsl
out
inc
hlt
mov
nop
cmpsl
sub
inc
lods
scas
test
pop
xchg
sub
inc
xlat
sub
pop
stos
add
das
xchg
in
mov
sub
xchg
fldenv
movsl
inc
and
stos
jg
dec
enter
pop
push
xchg
pop
or
mov
test
mov
xchg
addr16
jecxz
xchg
sbb
or
and
cmp
and
clc
xor
iret
inc
push
arpl
mov
or
nop
clc
jmp
std
mov
adc
mov
das
pop
movsb
and
aad
std
add
mov
gs
shlb
and
lea
ds
jb
jecxz
test
xor
jae
std
lods
pop
decl
pop
xor
pop
inc
cmpsl
xlat
mov
inc
cmp
lea
lock
push
inc
insl
dec
hlt
jp
das
pop
out
not
in
gs
lcall
xchg
fs
cwtl
sub
mov
pushf
and
dec
sbb
loop
sub
adc
cld
stc
aaa
inc
nop
inc
aam
inc
loopne
dec
pusha
add
sub
lahf
mov
or
fistpll
aad
add
cs
cmp
cmpl
dec
popf
pop
push
cs
xchg
sbb
outsb
fistl
lcall
loopne
mov
push
sbb
scas
out
pop
push
sbb
xor
dec
inc
out
adc
jmp
mov
cmpsl
xor
push
fbstp
ja
out
lret
lea
dec
sub
call
and
jge
in
daa
push
movzbl
stc
out
cmp
xchg
add
fcomps
in
xor
jne
mov
xchg
sub
repnz
std
scas
in
out
jo
ja
jb
ret
xor
lea
xor
das
lret
jno
or
pushf
dec
mov
fs
orb
movsl
repz
mov
push
xor
add
into
out
jns
dec
shl
jmp
adc
jb
out
cmc
outsl
aad
fdivs
cmc
jmp
lret
rcrl
arpl
add
and
mov
daa
jmp
dec
jecxz
fwait
mov
inc
insl
or
popa
xchg
mov
mulb
cmp
sbbl
mov
sbb
mov
in
sub
mov
sahf
push
mov
pop
mov
xorl
add
lds
pop
mov
ljmp
sti
inc
xchg
dec
jno
jmp
dec
pop
scas
icebp
xchg
sbb
inc
jbe
negb
cmp
mov
lcall
loopne
push
rcrl
lea
out
cmc
popf
imul
cmp
iret
mov
gs
inc
jmp
xor
repnz
in
mov
adc
lahf
mov
ljmp
aaa
mov
add
mov
pop
cmp
hlt
call
nop
pushw
xchg
stos
imul
adc
popa
mov
add
cwtl
mov
leave
stos
loope
js
mov
insl
mov
out
sub
inc
cmpsl
mov
sarl
or
jns
inc
js
sbbl
mov
daa
cmc
mov
and
mov
jge
jns
jae
cwtl
cltd
adcb
movsb
jb
xchg
je
or
dec
aam
mov
and
xchg
dec
fisubrl
jns
sbb
enter
in
mov
movsl
lcall
dec
aas
push
push
pop
cli
push
pop
sub
push
push
dec
popa
cmp
pop
sbb
fisttpl
idivl
mov
pop
movl
push
mov
lahf
cmp
in
mov
mov
mov
imul
adc
ljmp
push
lret
mov
repnz
add
mov
int
aam
push
test
mul
ret
xchg
lea
pop
sarb
loope
das
mov
dec
mov
inc
cmp
add
jns
imulb
and
es
cwtl
inc
add
inc
pop
push
and
ja
inc
jecxz
or
leave
fs
sbb
add
add
push
lahf
sub
and
inc
shrb
idivl
adc
xchg
jns
jo
cltd
adc
push
cmp
mov
inc
les
cmp
mov
negl
mov
and
outsl
mov
or
stos
or
shl
repnz
es
dec
leave
xchg
mov
jmp
pop
xchg
jo
inc
fwait
and
xchg
fdivr
jno
test
mov
sub
lods
rcrl
pop
mov
ljmp
mov
mov
pop
sub
test
outsl
out
int
mov
or
cwtl
and
mov
mov
fidivl
sbb
push
pop
into
dec
test
mov
add
stos
pop
inc
fsubrs
pop
inc
or
outsl
sub
adc
cmp
adc
test
lds
movsb
mov
pop
in
jae
cmp
mov
pop
and
and
ds
pop
ja
mov
mov
ss
cmpsl
and
dec
or
jno
mov
push
sub
pop
pop
cli
jg
sbb
sub
shrl
xor
pusha
mov
inc
xchg
repz
and
outsb
stc
mov
rcrb
jl
inc
inc
mov
push
lods
stos
in
push
or
paddsw
sbb
push
mov
aaa
pop
stc
leave
lods
inc
xor
sti
mov
jo
mov
push
sahf
cmc
xor
iret
cmpsl
stos
push
sbb
pop
jne
jno
pop
or
sti
jp
jg
lret
popa
pop
pushf
adc
xrelease
arpl
jb
inc
in
fcomip
lods
add
jns
cmp
pushf
adc
stos
int3
out
and
and
cwtl
xchg
pop
xchg
in
cmp
divl
lock
mov
loopne
inc
repz
pop
mov
shl
sarb
push
cltd
ds
pop
xchg
xlat
sub
pop
hlt
aas
cs
mov
repz
addl
arpl
enter
sub
cwtl
or
pop
jl
mov
loop
aaa
sbb
and
stc
test
inc
mov
push
sub
and
xor
dec
xchg
ret
arpl
in
pop
mov
pop
mov
cld
adc
mov
ret
out
fcoml
imull
pop
inc
pop
dec
and
xchg
loopne
out
mov
lods
pop
in
cltd
and
dec
cwtl
insb
jns
popf
pushl
cmp
in
xor
xchg
sub
bound
popa
es
into
cld
hlt
lcall
xor
test
push
push
stos
pushf
cmp
fldl
sub
and
in
movsl
adc
test
xchg
mov
fwait
popf
iret
sahf
push
cmpsl
aaa
sar
lds
pop
lods
pop
and
lds
sbbb
xor
addb
jmp
pop
pusha
and
mov
outsb
into
in
jecxz
cmc
push
mov
xchg
dec
mov
jb
lahf
addr16
movsl
mov
repz
loopne
or
inc
inc
and
les
jo
inc
andl
ds
pop
sbb
adc
clc
call
test
jae
sbb
imul
mov
jp
outsl
cmpsl
and
or
aam
adc
enter
inc
cli
push
fstl
sub
pop
cwtl
push
in
sub
add
std
and
push
adc
sahf
mul
sar
rcl
fs
loope
loop
ljmp
cmp
mov
aas
mov
xchg
sub
clc
lock
ds
push
shr
mov
xchg
xchg
xor
sbb
clc
cmpsb
and
mov
and
pop
inc
aam
ja
or
ret
cmpsb
ja
mov
pop
fidivl
cmp
inc
les
in
testb
dec
sbb
in
xchg
xchg
mov
in
sub
inc
call
inc
scas
pop
mov
cmp
aaa
add
imul
sbb
xor
dec
cmc
xchg
testl
mov
repz
xchg
lret
fildl
aaa
cmpsb
lret
inc
in
jle
cmpb
fcoml
in
fisubs
pusha
adc
dec
xchg
jo
add
test
xchg
lea
mov
push
pop
adc
inc
cltd
jae
mov
ljmp
or
mov
adc
inc
lret
dec
in
ror
or
xor
adc
lea
add
mov
js
push
cmp
jecxz
hlt
icebp
add
out
addr16
jns
mov
xor
push
sti
mov
divl
sti
xor
loopne
jp
test
adc
les
mov
mov
mov
loop
fcomip
mov
clc
jnp
mov
pop
add
push
and
imulb
addb
imulb
mov
mov
mov
adc
push
inc
mov
adc
or
adc
test
test
enter
in
sbb
jnp
jp
xor
popa
repz
mov
ret
bound
inc
loope
andl
ss
cmpsb
lahf
test
jg
inc
jne
shlb
and
cwtl
xor
ret
sarl
shl
push
mov
ret
addr16
rorb
push
jb
mov
mov
stos
outsl
pop
mov
test
icebp
roll
mov
inc
add
xor
insb
stos
fcoms
ret
andl
xchg
fsubl
mov
test
adc
xchg
cmp
mov
push
sub
push
stos
xor
pop
push
xor
mov
out
fdivl
into
addl
and
stc
mov
xor
jae
ficoml
mov
fsubrs
rcll
daa
insb
mov
fwait
movl
sub
cmp
jl
in
test
outsb
mov
data16
loope
nopl
sbb
cmp
jb
lret
ss
test
in
push
sahf
and
sbb
daa
inc
fdiv
pop
inc
mov
in
xlat
cmpsb
pusha
jo
add
xor
ljmp
addl
call
lcall
fistps
xchg
sub
lds
lea
or
in
push
or
or
fbstp
jne
mov
push
jbe
shll
inc
push
je
or
test
fsubrs
sbb
out
loop
mov
loope
ret
nop
sbb
sbb
jecxz
jmp
popa
pop
jl
pop
cli
sbb
mov
cmc
jmp
pop
mov
push
jo
xlat
mov
adc
push
or
bound
in
sahf
int3
jne
lock
and
xchg
xchg
pop
adc
pop
sbb
lds
adc
clc
lahf
sbb
hlt
fstps
inc
jp
adc
ret
ja
add
cli
in
cmp
inc
loop
ds
rcl
inc
xchg
or
movsb
push
pop
lret
pop
push
mov
bound
test
dec
cltd
mov
cwtl
sbb
and
push
jg
lods
pop
cmp
jae,pn
cmpsl
lcall
aas
or
add
dec
orb
xchg
test
adc
add
xchg
in
loope
stc
idiv
addb
ds
sbb
in
ret
dec
and
loope
dec
ret
jl
sub
loope
lcall
rcrb
stos
clc
xor
jge
xchg
cmp
jb
mov
fisubrl
aad
push
xor
sub
jmp
dec
or
ja
or
mov
int3
aam
out
sub
push
dec
sarl
inc
into
lret
insl
sbb
push
xchg
aas
pop
xchg
out
aaa
push
ret
arpl
idiv
loopne
scas
push
imul
lds
mov
add
jl
das
movsl
sub
sbb
sbb
mov
divl
fsubs
sbb
lock
sbb
xor
shl
in
jl
movsb
test
mov
push
and
pushf
jnp,pt
dec
mov
int3
icebp
or
popa
adc
xor
sbb
es
cs
push
int
add
bound
in
imul
cmp
add
ds
sbb
test
lods
sbb
bound
int
sbb
rcrb
cmp
xor
loop
js
mov
loop
cmc
icebp
push
mov
repnz
pop
and
jg
scas
and
sub
outsl
sbb
in
fnstsw
xorb
ss
stos
cmp
ror
jmp
add
lock
xor
cmp
js
pushf
and
jmp
divb
mov
outsb
dec
das
push
clc
mov
mov
xchg
lcall
push
adc
ljmp
sbb
mov
mov
mov
adc
mov
jne
sub
popf
jae
into
push
in
ficompl
in
or
adc
ret
push
loop
test
mull
jl
nop
jbe
dec
aam
ja
rcr
ret
xchg
add
dec
or
or
leave
push
out
cmp
and
int
mov
aaa
xchg
ret
mov
cmpsl
test
lret
in
ljmp
daa
dec
sbbl
lret
xlat
mov
incl
pushf
adc
pop
scas
dec
xchg
mov
add
rcrl
jne
jl
jae
jg
inc
or
ds
jp
orl
stc
and
std
incb
xchg
imul
jmp
lods
int
test
or
xlat
cmp
outsl
ljmp
repnz
mov
shr
insl
std
jns
mov
push
loope
xor
lods
dec
jge
jo
lahf
jecxz
call
aad
mov
jle
faddl
insl
jge
pusha
mov
testl
fwait
jp
push
pop
pop
push
inc
sbb
pop
mov
jmp
bound
push
mov
cmp
aaa
lcall
cmpsl
dec
dec
mov
enter
mov
sbb
sub
sub
mov
xlat
scas
dec
pushf
adc
dec
loop
cld
lds
hlt
adc
div
loope
xchg
and
loop
mull
faddl
fsub
je
inc
adc
sub
or
shlb
jo
aad
xchg
dec
les
inc
sub
divb
cmp
testl
add
mov
pop
sub
pop
and
mov
fnsave
dec
fiadds
movsl
sub
dec
sti
jg
scas
insb
lea
out
nop
setge
ss
add
mov
out
das
jle
test
sbb
mov
pop
xchg
ljmp
int
add
xchg
jbe
xor
mov
and
mov
data16
xchg
sub
pusha
js
push
lret
fdiv
adc
pop
cmc
das
mov
lea
mov
test
jne
cs
xchg
js
adc
sbb
mov
adc
mov
stc
push
lahf
or
imul
mov
shlb
arpl
js
push
pop
test
push
popa
dec
pop
rcr
mov
jecxz
rcll
sbb
loop
sbb
int
jl
in
cld
xor
cmp
and
inc
push
sbb
lret
pop
jae
in
into
mov
mov
out
pop
pusha
push
and
jno
and
xor
dec
push
aad
sub
cs
pop
push
lds
movsb
mov
jle
popa
ss
loop
jb
fsubr
jmp
add
and
lods
cmp
mov
inc
lods
ficoml
das
inc
xor
inc
adc
rclb
movsb
or
cmpsb
stc
mov
shrb
push
fdivrs
lahf
and
dec
mov
xchg
and
jns
jp
jbe
and
das
test
mov
mov
call
push
inc
inc
jns
sub
pop
mov
or
push
flds
sti
daa
add
xchg
jp
mov
decb
lea
add
mov
iret
enter
sbb
adc
int
push
ljmp
push
insl
cltd
insb
out
lret
pop
cmpsl
cmp
lret
ret
inc
xchg
imul
shrl
dec
lret
sub
aam
sub
push
xchg
js
lock
jl
xchg
rorl
sub
fidivrl
sub
mov
sbb
xor
lds
repz
lret
mov
adc
aad
ljmp
mulb
clc
daa
in
enter
inc
sub
iret
or
iret
cmc
or
inc
inc
sub
add
push
es
mov
sub
scas
fwait
push
mov
mov
sbb
aam
and
mov
fsubp
aam
push
sub
imul
xlat
inc
jp
lock
dec
rorl
loopne
push
test
jo
outsl
inc
repnz
cmp
dec
test
int3
mov
decl
cmp
pop
call
and
mov
imul
add
std
cmp
lret
pop
push
shlb
mov
add
and
xchg
mov
das
movsb
shlb
pop
iret
xchg
scas
or
xchg
stos
pop
test
out
jmp
dec
out
clc
xchg
or
bound
lds
jne
addb
decl
cld
aas
adc
or
xchg
jo
insl
and
fisubrl
dec
add
out
xorl
rorl
pop
sarl
pop
and
enter
in
movsb
mov
addr16
sub
inc
andb
sbb
mov
repz
aam
sbbl
fldcw
add
jge
add
xchg
cmp
mov
loop
push
cmp
adc
sub
shl
sub
js
mov
movsb
movsb
out
lods
pop
shll
xor
mov
fcom
adc
push
rcrl
cld
jmp
and
adcl
daa
fcoml
xor
cmp
or
inc
inc
inc
mov
add
and
sub
pop
sub
adc
mov
rcrb
arpl
out
inc
jmp
in
ffree
push
mov
push
add
notl
jns
adc
inc
dec
pop
jg
pop
test
cltd
mov
aas
pop
push
jbe
pop
addr16
and
or
cmp
test
cmp
insl
cmp
rclb
push
popf
sti
rorb
pop
sbb
into
add
jp,pn
sbbb
ljmp
push
into
pop
push
ss
lret
js
movsb
jbe
lcallw
push
jne
cs
inc
lds
dec
xchg
sub
jae
push
shrl
sbb
and
cmp
or
testl
and
jp
ret
adc
addr16
dec
add
mov
std
popa
dec
std
jno
lock
leave
imul
call
sub
fs
dec
push
popl
and
or
cmp
xor
andl
xorb
out
xor
lcall
fcompl
std
cltd
jg
lods
xor
repz
in
jg
jmp
cli
fxch
testl
sub
enter
mov
xchg
xor
es
sbb
bnd
push
mov
icebp
mov
inc
popa
jecxz
or
push
lock
sbb
dec
or
xchg
movsb
dec
push
push
stos
jno
and
in
out
leave
repz
cld
pushf
aam
ret
stc
mov
div
in
popa
xchg
push
cltd
les
jle
cmp
jb
std
xchg
test
add
add
add
cmp
mov
addl
jno
repnz
push
xchg
daa
dec
stc
lea
or
fsub
loope
nop
jl
mov
adcl
clc
xor
jo
adc
sbb
pop
imul
test
and
je
jge
pop
sbb
int
cmp
sub
xor
add
dec
fucom
xchg
sbb
push
pushf
arpl
push
and
sbb
decb
punpckhwd
aaa
adcl
outsl
mov
ja
mov
inc
inc
enter
sub
dec
lds
jle
cmpl
cmc
out
popa
dec
or
shlb
sub
cmc
push
push
and
pop
loopne
fwait
pop
lods
ds
mov
adc
and
sub
and
mov
addr16
inc
ficomps
inc
pop
add
lcall
in
call
mov
sbb
cmp
inc
fiadds
js
hlt
outsb
iret
jecxz
mov
subb
add
xor
xchg
cmc
xlat
and
inc
fcoms
jecxz
inc
cmp
jg
int3
pop
adc
and
mov
js
add
adc
fdivp
leave
rcl
push
out
dec
mov
lcall
lret
cmc
xchg
adc
popf
into
push
cmp
add
ror
test
daa
popf
and
and
jno
loop
inc
fidivrs
lcall
aaa
xor
daa
pop
adc
xlat
xor
test
mov
xor
and
xor
insl
xchg
daa
movsb
xor
insb
ret
cli
inc
cmp
sbb
call
adc
dec
sbb
repnz
inc
mov
js
int
popf
in
cli
and
push
jmp
push
jnp
scas
int
adc
jns
lods
addr16
or
out
or
movsb
lods
inc
fs
xchg
and
sbb
leave
sub
ljmp
push
or
inc
sub
les
pop
leave
push
inc
mov
loopne
lret
and
loop
jb
test
pusha
inc
and
add
sahf
loope
xchg
into
dec
cmp
jecxz
es
imulb
out
fimuls
ljmp
or
push
dec
out
in
je
cmp
and
jge
mov
jns
push
jl
jle
cmp
jnp
imul
jae
cmpb
adc
movsb
rorb
movsb
sbb
in
xor
jge
or
jp
clc
push
out
mov
lea
jbe
stos
xor
push
sub
iret
inc
mov
addl
call
and
fstpt
imul
adc
scas
imul
push
outsb
loopne
jl
cmp
jg
add
inc
sarl
xchg
and
xchg
xchg
or
push
xchg
test
dec
jbe
mov
mov
int
daa
mov
ret
xor
enter
lds
xchg
call
add
mov
mov
sbb
sbb
insl
jle
mov
cmp
fimuls
cmp
cmp
inc
div
int3
mov
jno
sbb
add
xchg
xchg
xchg
call
imul
sbb
test
sub
jnp
in
pop
adc
push
sub
sbb
pop
xchg
xchg
pop
dec
mov
cmc
popf
or
cltd
mov
in
insb
jo
in
sub
inc
sub
filds
mov
sbb
or
pop
sbb
add
or
pushl
lods
adc
inc
fnstenv
loopne
sub
or
bound
cwtl
mov
mov
gs
outsl
pushf
dec
or
imul
ret
and
dec
pop
dec
lcall
push
inc
sbb
stos
cmp
arpl
fists
mov
jb
imul
aaa
push
ret
xlat
cmp
scas
and
lods
enter
sbb
rolb
jbe
jle
out
push
lret
pushf
aam
loop
cli
cmpsl
int3
in
jp
jp
ja
cmp
xchg
mov
jbe
fwait
aaa
mov
add
sub
scas
push
mul
dec
push
mov
test
ja
arpl
mov
cmp
add
sti
xor
cmp
pop
out
frstor
test
cwtl
sbb
icebp
xchg
xchg
push
dec
mov
mov
inc
outsl
fidivs
push
imul
push
dec
cmpsl
jle
shrb
add
shll
imul
fcmovne
or
subl
cmp
test
jne
cmp
lods
rorl
jae
sub
loopne
add
scas
out
jo
mov
icebp
ljmp
pop
dec
gs
dec
rcll
push
xchg
pop
sub
dec
daa
mov
xchg
into
sti
adc
mov
mov
cld
std
fisttps
test
lcall
outsb
lock
stos
clc
mov
sub
adc
filds
inc
mov
inc
add
add
pop
dec
mov
sbbb
pop
push
and
call
inc
adc
inc
enter
je
lcall
dec
sahf
outsb
fs
ficompl
fdivp
shll
stos
dec
es
hlt
adc
ljmp
mov
sbb
sub
mov
rorb
js
nop
adc
xor
xor
stc
fcmovnu
mov
jmp
adc
pop
scas
pop
lea
sub
pusha
data16
aaa
fsubl
sahf
dec
inc
pop
and
push
or
fs
sub
pop
cmp
dec
or
dec
cmp
testl
test
frstor
cli
pop
jge
sbb
nop
sbb
ficompl
cmc
cltd
dec
mull
or
fstps
cmp
sub
pop
mov
test
scas
xor
dec
daa
cmc
popf
bound
test
and
mov
adc
sub
es
lcall
jmp
and
xor
adc
leave
pop
dec
daa
movsb
xchg
clc
pop
mulb
add
add
mov
mov
sbbb
sahf
pop
cmp
das
xlat
mov
insl
mov
and
js
pop
hlt
dec
sbb
movsb
cli
in
adc
pop
add
xchg
lock
test
ja
add
in
hlt
rol
push
pushf
jno
and
dec
pop
push
inc
sub
sbb
pop
pop
or
xchg
rcl
sahf
mov
sub
aad
adc
insb
add
aad
stos
sbb
aad
jg
push
jle
lahf
cmp
adc
xor
pop
push
and
pusha
pop
cmp
lahf
push
mov
ljmp
jmp
or
sbb
adc
add
dec
cmp
loop
out
das
cmp
je
scas
addr16
push
dec
cmc
sub
cmp
call
dec
cs
mov
sti
repz
mul
popa
test
sbbl
or
in
xor
ja
dec
cwtl
sub
inc
jl
adc
or
cmpsb
mov
or
inc
divl
dec
xchg
xchg
clc
mov
push
popa
lret
icebp
bound
ret
imul
in
mov
mov
adc
lods
call
push
xor
dec
mov
lods
cld
aam
mov
mov
lcall
sbb
cld
mov
xor
iret
dec
push
mov
int3
cwtl
fst
xor
ficomps
or
sub
cmp
rolb
push
adc
arpl
pop
adc
sub
shlb
test
xchg
in
inc
imul
mov
xor
add
lahf
ret
sub
and
push
stos
add
adc
xor
fisubrs
push
imul
movsl
pop
fwait
cmp
iret
icebp
mov
mov
ljmp
test
addb
inc
addr16
dec
jb
outsl
jbe
xchg
in
decl
pop
and
pop
mov
filds
inc
addb
fsubrp
xor
rclb
mov
mov
ja
jg
push
lea
xchg
out
out
aaa
or
jge
lret
xor
mov
fsts
push
dec
pop
fs
sbb
addb
sub
mov
repz
lds
cmc
gs
sbb
inc
jb
sbb
push
mov
jmp
cmp
pushf
mov
lahf
dec
push
popf
lret
stos
xchg
test
jne
into
sub
loope
sbb
lcall
lahf
ljmp
xchg
xorl
hlt
dec
aaa
push
fisubl
icebp
xchg
arpl
mov
stos
js
mov
add
xchg
pop
and
adc
daa
add
rcrb
jmp
inc
inc
xchg
fcomp
imul
loope
enter
negb
xchg
xor
adc
ret
cs
push
lret
bound
scas
test
popa
ss
cmp
in
push
jae
xor
shlb
ja,pn
jne
ds
ret
incl
call
mov
xor
fs
les
aaa
mov
ret
add
xchg
xchg
bound
jmp
and
push
scas
push
outsl
rcll
sub
inc
mov
sti
nop
mov
mov
lods
sti
lahf
insl
add
outsb
dec
pop
cli
call
daa
imul
mov
sbb
jns
je
scas
nop
sub
pop
lds
leave
jb
prefetcht1
jnp
mov
dec
jo
cs
rcrl
icebp
ljmp
xchg
and
mov
je
loopne
pop
push
adc
ja
push
imul
testl
test
ret
cmc
sbb
xor
dec
scas
loope
push
mov
and
push
idivb
mov
test
dec
and
pop
sub
push
repnz
inc
xchg
jb
jmp
sbbb
inc
mov
mov
pusha
push
adc
mov
sub
dec
jno
mov
enter
test
test
mov
pop
std
in
mov
iret
lret
inc
xor
pop
inc
cmp
addb
push
push
fwait
lahf
leave
sar
xor
pop
cltd
repz
push
adc
dec
cmp
add
sahf
mov
add
outsl
or
lcall
movsl
and
inc
mov
fstps
loop
ror
xor
ficompl
dec
insb
push
test
jne
inc
arpl
loope
pop
mov
pop
loopne
mov
mov
arpl
scas
insl
mov
adc
lds
mov
filds
xor
jo
or
in
xchg
push
fldenv
mov
push
add
int
je
push
xchg
faddl
xchg
lock
sbb
ud1
daa
cmp
divl
cmpsb
gs
scas
aad
inc
notb
push
jge
and
lods
lods
fcmovbe
push
push
sub
jmp
imul
jo
lret
cmpsl
clc
mov
cld
adc
sub
mov
lods
cmpsb
dec
movsb
aad
js
out
add
fs
or
outsb
jmp
shll
sbb
lahf
daa
outsl
jmp
pop
sub
sbb
dec
mov
mov
cld
mov
call
jbe
lods
xor
sahf
xchg
ret
cld
jmp
mov
inc
lahf
and
inc
xor
fdivrp
daa
cmp
ret
cmpsl
test
popa
push
cmp
sbb
xor
lret
push
and
pusha
mov
and
aam
xor
xchg
hlt
xlat
push
fisttpll
gs
lds
enter
movsl
sub
cs
cmc
cwtl
sbb
inc
sub
in
push
dec
out
out
bound
push
into
push
or
sbb
aaa
sahf
dec
or
add
push
repz
adc
mov
inc
or
sbb
add
enter
mov
mov
in
mov
repnz
pop
mov
lds
fsts
cld
outsl
jle
cmp
leave
cmp
sbb
pop
cmc
or
jecxz
mov
mull
push
lock
adc
and
std
inc
jo
jnp
jnp
jne
in
lahf
add
cmp
inc
dec
div
cmp
cmp
jmp
adc
int3
aam
xorb
loopne
rcll
xchg
insl
mov
pop
insl
xor
sbb
or
push
cmpl
sbb
aas
imul
xchg
dec
add
in
fwait
ljmp
out
xchg
out
and
push
js
push
jnp
mov
aaa
arpl
and
in
lcall
jbe
lcall
mov
leave
pop
sub
dec
mov
outsl
popa
in
dec
and
cmp
jge
dec
aas
pop
leave
daa
fisubs
mov
pop
outsb
test
pmulhw
jg
loopne
lds
out
or
xorb
into
xchg
sub
out
mov
xchg
jmp
sub
jge
fwait
push
inc
sub
mov
mov
int
xchg
mov
sbb
je
push
out
enter
in
inc
add
xlat
jae
dec
int
and
imul
iret
movsl
lods
dec
loop
mov
pop
das
fsubrl
dec
int3
mov
ljmp
add
and
movsl
pop
cmp
jae
loopne
ret
inc
fmul
movsl
ljmp
sbb
loope
add
cltd
lcall
scas
and
and
enter
or
pop
push
mov
jne
aam
scas
mov
mov
fwait
dec
push
sbbl
lock
sbb
dec
lret
imul
out
mov
cwtl
inc
clc
jne
and
inc
aas
mov
add
adc
jae
xchg
cld
frstor
jmp
mov
es
push
and
cmp
cmp
xchg
inc
sbb
xchg
mov
adc
xchg
jae
repz
test
sub
cli
push
lret
loope
mov
addr16
int3
xchg
sbb
cmc
push
lret
rcll
shlb
mov
xchg
and
jb
cmp
mov
imul
mov
inc
pushf
pop
mov
mov
sub
dec
xchg
xlat
orb
add
inc
mov
test
add
or
cltd
mov
cmc
mov
adc
sti
ss
outsl
and
adc
add
insl
dec
stos
fwait
loopne
arpl
addr16
out
pop
dec
movsb
sbbb
or
scas
or
add
jbe
ds
into
xor
push
dec
adc
xorl
jns
aad
mov
push
js
mov
mov
sbb
pop
sub
or
idivl
jne
sahf
dec
inc
and
std
fdivl
mov
push
sub
fistps
cld
mov
std
dec
fs
mov
stos
cmp
or
fnstcw
bound
cmpsl
jae
add
jno
pusha
pop
adc
add
jmp
sahf
inc
mov
arpl
pop
xor
loopne
test
popa
pop
jbe
pushf
aaa
jp
scas
adc
xchg
es
ja
mov
jmp
paddq
fwait
mov
lea
cmp
and
or
shll
in
push
inc
insl
out
add
incb
imul
stc
stc
sub
add
dec
call
dec
daa
push
les
sbb
mov
jo
insl
adc
test
inc
or
in
in
xchg
cmp
hlt
sub
dec
sub
ret
leave
imul
ja
addb
orl
test
cmpsl
ret
cmpsl
jmp
jge
add
adc
bound
xor
jae
loopne
or
aaa
or
cli
inc
or
stos
rcl
push
adc
and
gs
pop
inc
jb
mov
ret
ja
mov
jle
mov
sub
call
leave
mov
out
jge
adc
stc
into
mov
cmpsl
mov
sub
roll
in
std
adc
adc
add
and
shlb
push
mov
push
mov
push
mov
mov
mov
xchg
inc
adc
mov
dec
into
repz
xchg
or
dec
or
movd
jle
mov
push
data16
outsl
sbb
ja
xor
mov
subl
ficoms
arpl
sbb
sub
and
adc
cwtl
jge
in
sarl
jae
and
ficomps
xchg
mov
ja
jae
in
xchg
jl
mov
call
ds
insl
sbb
testl
xor
std
jp
es
pusha
pop
pop
xchg
cli
push
xor
nop
mov
mov
pmaxub
fisttps
rolb
pop
pop
jo
out
loopne
pop
mov
imul
jecxz
add
out
insb
add
cmp
mov
dec
stos
sti
lds
or
cmp
iret
popa
out
sub
xchg
movsb
insb
aas
sbb
push
dec
sbb
xchg
xor
out
xchg
insl
data16
jge
mov
int
xor
pop
call
mov
adc
jmp
sahf
mov
xchg
pop
or
lahf
adc
pop
enter
fstl
push
sbb
shlb
dec
ja
mov
ja
xchg
aaa
lea
adc
mov
mov
pop
repz
fcompl
mov
sbb
xchg
mov
aad
cmc
push
int3
ret
push
adc
cld
and
xor
adc
divl
outsb
mov
movsl
cwtl
iret
mov
xchg
push
pop
push
and
jne
mov
scas
sub
dec
fs
pop
cmp
imulb
shrb
adc
inc
lods
cwtl
out
inc
dec
ret
xchg
inc
stos
xchg
jnp
repnz
sub
adc
mov
mov
jbe
fsubrs
pushf
xchg
repz
inc
and
loope
in
insb
sbb
mov
or
dec
pop
jno
xchg
or
jmp
nop
dec
mov
movsb
pop
arpl
into
loop
arpl
push
cmc
jb
and
lret
mov
hlt
pushf
pop
sub
xlat
hlt
xchg
mov
pop
bound
push
mov
inc
arpl
ss
sub
scas
aad
push
test
icebp
cmp
das
por
subb
mov
test
or
in
jns
or
xchg
rcll
jns
fmulp
repnz
inc
sub
cmp
adc
out
jns
test
test
ljmp
or
and
in
adc
fs
negl
aas
sbb
mov
pop
push
gs
arpl
jae
sbb
dec
dec
dec
stc
mov
mov
jg
push
push
xchg
xchg
cmc
cmp
sub
or
lock
test
add
xor
mov
pop
testb
add
mov
mov
cmc
outsb
jp
and
adc
leave
or
adc
bound
push
imulb
xorb
pop
dec
int
pop
flds
cmp
push
out
inc
cmp
das
add
inc
sbb
pop
pop
dec
dec
xchg
lds
xor
lods
cmp
sbb
add
in
loop
fdivrs
dec
jne
push
add
and
lret
adc
mov
in
into
mov
push
inc
shl
jle
out
fildl
cmc
cltd
test
mov
shl
push
sub
mov
jne
pusha
xchg
cmp
adc
and
imulb
je
add
jns
jo
cmp
les
notl
adc
pop
push
mov
cmp
insb
out
arpl
aam
push
mov
enter
mov
sub
or
xlat
xchg
and
test
lods
sub
dec
mov
aas
jle
les
mov
stos
jg
pop
data16
inc
ds
fnstsw
add
add
add
mov
movsb
xor
outsl
mov
cs
mov
cmp
xor
sub
jns
xor
arpl
arpl
ja
lcall
or
mov
and
pmullw
out
lods
out
jno
movsl
out
je
into
shl
sbb
cmp
mov
xor
int3
xchg
ret
sar
popa
fsub
or
in
nop
or
jnp
int3
sahf
idivl
xor
dec
jne
andb
dec
lahf
loopne
push
pop
jecxz
inc
dec
pushf
sub
dec
lods
add
movsl
rep
or
fiaddl
add
pusha
and
mov
dec
cmp
sbb
adc
mov
pop
lret
dec
mov
in
xadd
ficompl
cmp
pop
mov
mov
adc
sub
add
popa
aas
mov
lods
je
fs
mov
sbb
ror
popf
xchg
mov
jns
jb
js
aaa
xor
sub
jg
js
inc
jns
ss
fidivrl
aaa
sub
psllw
gs
outsl
out
outsl
and
aam
loop
push
test
sahf
insb
lahf
mov
cmp
mov
mov
mov
inc
add
scas
aaa
sahf
pop
ret
sbb
mov
sbb
loope
cmp
stos
dec
rcrb
int3
adc
lcall
out
in
mov
dec
int3
sbb
jne
nop
icebp
lret
add
xor
testb
pop
mov
ss
fnsave
inc
xchg
mov
xlat
stc
xchg
in
inc
jl
sbb
lcall
xor
xchg
test
xorb
sub
enter
xor
test
mov
xor
lret
testl
lret
adc
movsb
adc
loopne
pop
and
dec
mov
dec
ret
mov
add
scas
sub
xchg
std
fbld
mov
scas
cmpsl
push
repnz
push
outsb
dec
sbb
out
xchg
pop
add
test
sub
inc
inc
push
xor
jl
push
adc
bound
sar
push
dec
mov
iret
cmp
jle
and
xlat
push
fldl
and
dec
clc
ja
jl
mov
in
fst
pop
cmp
ds
mov
lret
jg
push
ret
aaa
jbe
xchg
inc
sub
inc
xor
dec
jns
test
jp
lods
cwtl
imul
add
pop
and
sbb
dec
and
xlat
push
or
into
mov
test
aad
rcr
inc
jecxz
in
jge
dec
ret
dec
je
cmp
aam
adc
mov
sahf
aas
xor
mov
inc
into
in
sbb
mov
pop
push
push
cltd
mov
test
push
sbb
push
scas
popf
fcoms
xor
cmc
jno
xchg
test
fildl
call
stos
mov
pop
xlat
lea
add
stos
stos
test
push
inc
jae
imul
sbb
comiss
or
cmp
inc
xor
xor
xor
push
clc
mov
aaa
jp
sahf
add
scas
pusha
sub
int3
adc
fsubrl
das
scas
ja
daa
faddp
xor
int
fdivrl
mov
jmp
fisubrs
popa
aam
dec
fs
fsubs
pop
push
mov
notb
mov
sbb
enter
ss
jb
rorl
stos
sub
or
dec
xchg
test
mov
subps
imul
fiadds
icebp
jb
xlat
sbb
test
sbb
xlat
test
popa
fsubrs
scas
rcl
cmpsl
outsb
ud0
push
out
sarb
test
and
imul
mov
xchg
fs
jnp
addb
mov
adc
adc
repnz
and
inc
mov
or
pop
enter
in
add
gs
sbb
popa
inc
clc
xchg
cld
mov
loop
mov
das
add
test
insb
cmp
pop
nop
loop
jbe
and
ja
imul
inc
or
sub
out
fs
pop
cmpl
mov
inc
scas
pop
mov
aaa
mov
sbb
call
cs
mov
mov
sbb
rol
std
mov
data16
aad
jle
scas
popa
movsl
inc
repz
rcr
mov
jnp
push
hlt
jge
jmp
sub
aad
cli
in
idiv
or
xchg
cmpsl
mov
or
adc
mov
dec
out
xchg
xor
pop
icebp
xchg
aam
fdivs
pop
lcall
push
mov
or
jecxz
or
ret
rcl
sub
xchg
pop
xchg
ret
div
cmc
mov
or
add
xchg
mov
imul
or
out
jecxz
in
xchg
imul
adc
and
sub
mov
in
jle
inc
inc
in
and
inc
mov
cmp
fdivrl
testb
mov
jle
inc
mov
xchg
inc
pop
in
les
jne
cmovne
mov
sub
test
mov
xchg
push
pusha
add
dec
ret
pop
es
push
mov
stc
mov
shll
xor
test
dec
xchg
popa
and
js
pop
sbb
push
es
push
xchg
inc
pop
xor
dec
xchg
out
out
test
xor
jmp
lret
push
sahf
sbb
or
add
xchg
push
pop
test
cltd
mov
mov
push
test
mov
xchg
lcall
int
sbb
sti
mov
roll
and
clc
mov
nop
jle
call
pop
push
mov
dec
xor
jl
imull
sub
loop
jno
orl
jno
shlb
sbb
cli
xor
out
mov
mov
and
and
and
mov
ja
mov
sbb
push
sub
mov
ljmp
adc
dec
ja
subb
loop
xor
xchg
adc
dec
jle
or
jns
sub
xor
cmp
aaa
cmp
aad
jmp
shlb
adc
cmp
clc
popf
sahf
sbb
sahf
popf
mov
mov
and
sahf
fbstp
out
and
pop
inc
or
inc
and
pop
jle
jg
and
inc
and
imul
sbb
mov
and
jecxz
mov
cwtl
cmp
inc
mov
xchg
or
pop
push
xor
outsl
inc
sete
movsl
pop
inc
sbb
adc
fs
rcrb
enter
ret
loope
cmp
divb
pop
fdivrs
dec
pop
dec
push
pop
nop
inc
adc
xchg
push
pop
cwtl
test
ljmp
sub
lock
mov
xchg
and
sbb
idivb
and
cmp
loop
sub
ds
and
pop
jge
mov
adc
in
sbb
mov
sbb
cmc
sbb
jae
ret
lahf
inc
mov
pop
decb
popf
xchg
push
cltd
icebp
shr
jne
cmpsb
jp
es
ret
mov
xchg
inc
sub
or
pop
xlat
mov
dec
ret
jbe
fcomps
paddw
test
arpl
movsb
shll
dec
ljmp
leave
insl
lahf
push
fs
pop
frstor
in
jno
xchg
mov
push
mov
push
push
inc
fwait
ja
push
push
sub
mov
xchg
or
movsb
out
xchg
stos
and
mov
lock
sbb
mov
cmc
out
pushf
cmc
lret
lock
test
ss
sbb
dec
cmp
cmp
dec
jle
fnstsw
call
pop
mov
sub
out
clc
lcall
xchg
sbb
aas
sbb
inc
cmp
stos
and
andb
in
js
jns
btc
push
data16
push
mov
nop
int3
adc
or
and
pop
jo
or
iret
sbb
imul
dec
add
jecxz
jp
add
push
cmp
lret
mov
std
ds
stos
inc
es
mov
sbb
fildll
adc
sub
push
jg
mov
cmp
in
xor
xchg
outsl
pop
loopne
imul
jb
outsl
sub
cld
push
cmpsb
or
sub
sub
sub
and
xchg
aas
aas
push
scas
ds
jmp
mov
add
jnp
lret
sbb
outsb
sbb
jns
fcompl
xchg
aaa
dec
sub
jge
test
dec
add
lods
rclb
cltd
sbb
xor
popf
nop
push
outsb
mov
cli
xor
and
pushf
sbb
mov
xchg
jbe
ljmp
ficoml
rolb
and
call
push
jne
loopne
fisubrs
adc
pop
lret
mov
xor
cltd
aam
test
imul
push
xchg
ret
shl
int
push
xchg
xor
xor
jl
outsb
jae
and
push
jg
bound
out
mov
inc
pop
pop
mov
shr
mov
inc
movsl
in
or
dec
add
les
inc
jle
cmp
imul
add
add
xor
and
or
and
push
jg
andb
pop
sbb
add
lcall
jle
ret
loope
add
inc
sub
push
test
or
xchg
or
dec
leave
push
lahf
sbb
stos
xchg
sub
dec
and
cmp
adcl
ret
jnp
cmp
test
outsb
inc
xchg
lcall
jns
aad
out
out
push
ss
fcmovb
dec
mov
jmp
pop
xchg
mov
sub
mov
js
fwait
sub
arpl
mov
push
js
hlt
lretw
enter
sbb
xor
push
push
daa
test
xchg
lahf
and
fucomip
adc
xor
insb
xor
pop
cmpb
xchg
movsb
dec
loopne
pop
add
xchg
mov
lret
or
push
mov
dec
fld
ret
and
pop
lret
sub
push
addr16
inc
rol
dec
pop
sti
icebp
gs
ja
cmpsl
or
or
adc
movsb
outsl
or
mov
and
adc
popa
pop
mov
mov
sbb
icebp
test
insb
mov
mov
push
inc
lods
cmp
add
test
inc
pop
and
cmp
lods
leave
cmp
iret
xor
jp
jle
ror
pause
push
clc
adc
sbb
xor
out
inc
xchg
jmp
cmp
fcmovnbe
jl
enter
stos
push
cmp
xchg
stc
aam
cmp
addr16
and
push
cwtl
mov
mov
je
adc
sahf
pop
sarb
dec
loopne
loop
stos
and
cmc
filds
cmp
jecxz
xor
pop
outsl
aas
push
imul
movd
loop
mov
out
scas
pop
stc
pop
out
cmp
lret
inc
dec
test
xor
dec
ret
pop
adc
decl
leave
lock
push
jg
je
fsub
lock
jecxz
stc
fidivs
popa
ljmp
ljmp
pop
xchg
xchg
call
repnz
pop
shll
andl
add
in
out
in
out
pop
push
or
adc
shl
lock
aam
dec
jo
int3
jge
mov
cmpsb
adc
addr16
movl
cmpsl
mov
cmp
pop
imul
lret
into
xor
sbb
push
add
add
gs
add
sahf
cmp
nop
es
inc
xchg
insb
daa
inc
mov
xor
sub
je
push
sub
sbb
jbe,pn
out
jl
xor
loope
scas
fldt
das
pop
fucomp
mov
scas
inc
adc
jecxz
movsb
lahf
shl
xchg
in
push
dec
ljmp
das
mov
xor
ja
push
jbe
sub
mov
dec
lea
lea
icebp
gs
pop
or
mov
jnp
and
fisubs
jno
test
mov
add
jns
addr16
aas
mov
fwait
out
dec
xor
js
add
sarl
xor
mov
mov
add
enter
ds
loopne
xchg
sub
fs
mov
mov
arpl
adc
repnz
cmp
lahf
shlb
inc
lcall
adc
je
push
xchg
cli
sahf
pop
cmp
and
and
fdivrl
sbb
push
iret
adc
adc
sub
cwtl
iret
out
jp
lcall
pop
mov
fdivp
add
negb
pop
enter
xchg
dec
and
out
adc
fwait
inc
outsb
mov
or
mov
mov
push
cli
xor
adcb
push
fcomps
mov
dec
rcrl
add
stos
out
adc
cmc
mov
mov
rcll
sahf
imul
mov
mov
pop
mov
jne
and
ja
out
lret
loop
fnstsw
addl
ja
lahf
sbb
in
xor
in
cmp
cmp
mov
leave
imul
ljmp
add
inc
dec
je
shll
leave
pop
rol
ljmp
and
mov
dec
dec
mov
pop
xorb
pushf
push
cmp
mov
imul
and
xor
test
test
xchg
cmpsb
pushf
roll
rolb
ja
dec
fsubs
mov
or
addb
add
sbb
mov
dec
and
push
xchg
idivl
jp
arpl
mov
gs
fldcw
fcoms
loop
sbb
jmp
mov
js
xorl
add
adc
dec
mov
mov
fwait
sbb
insl
adc
out
lods
push
add
pop
fnstsw
mov
pop
or
loop
mov
push
sbbl
pop
test
mov
ds
addr16
inc
adc
mov
sahf
adc
push
fcompl
popf
xor
imul
push
inc
int
jno
loopne
popf
sub
pop
ss
and
enter
pop
pop
fsubrl
dec
xor
sahf
or
or
xchg
adc
js
and
push
mov
push
fidivrs
inc
inc
test
mov
loop
shll
scas
xchg
inc
aam
roll
xor
jno
pop
xor
xlat
inc
lret
adc
mov
cli
addl
adc
jmp
iret
ror
ss
daa
fwait
das
and
imul
xor
jl
inc
test
and
inc
das
lea
add
daa
mov
subb
cs
fst
push
dec
pop
push
mov
fwait
mov
jg
adc
mov
mov
inc
jle
fistps
adc
jp
jp
push
mov
xor
scas
pop
daa
cmp
popa
movups
mov
add
xor
push
scas
mov
mov
push
inc
popa
jmp
add
das
mov
dec
leave
inc
pop
xchg
mov
jns
mov
mov
cmp
out
xor
or
int
or
sbbl
ret
jmp
xchg
push
arpl
cld
pushf
arpl
or
mov
jne
cld
adc
mov
mov
fcoml
add
fistl
fucomp
inc
inc
pop
ror
adc
jmp
push
paddusb
jg
or
aad
mov
or
ja
cmp
sar
stc
gs
xchg
ret
jp
xor
adc
sub
fcompl
sub
inc
test
or
push
insl
call
test
xchg
add
mov
xchg
cs
push
adc
or
adcl
out
out
into
pop
imulb
in
aas
into
add
shll
xchg
shrl
jg
sub
insb
lret
rolb
daa
and
fildll
sbb
pop
adc
xchg
lods
fwait
mov
or
and
dec
mov
sbb
dec
outsl
mov
lds
push
fwait
push
inc
xorb
int3
push
mov
push
loop
sub
inc
mov
jnp
adc
call
add
jge
push
test
push
int
shl
cmp
out
sbb
dec
int
adc
adc
dec
and
mov
out
out
je
stos
fs
outsb
shrl
iret
xorb
ret
insl
push
inc
dec
adc
mov
pop
pop
mov
sbb
movsb
pop
jmp
pop
adc
inc
js
sub
and
adc
std
xchg
jl
xchg
out
sar
cwtl
push
pop
imul
test
or
inc
bound
push
jns
xchg
stos
jno
inc
ss
bound
mul
mov
inc
or
sub
sbb
add
pop
and
into
adc
pop
and
data16
mov
out
inc
inc
mov
fiadds
add
das
pop
push
in
js
rolb
dec
and
in
dec
pop
outsl
pusha
lret
js
mov
scas
mov
lret
adc
movsb
jl
test
stos
push
loop
and
cli
pop
fs
pop
in
adc
sub
loop
push
stos
jmp
aad
pop
adc
xchg
mov
inc
push
or
jl
fimull
jge
pop
sbb
sub
pop
data16
xor
in
sub
nop
inc
pop
inc
adc
lods
hlt
in
std
jbe
cld
int3
and
push
rcrb
pop
inc
test
pop
mov
dec
xchg
lea
lcall
out
scas
dec
ds
mov
add
fwait
lret
scas
mov
fwait
push
xchg
dec
xor
scas
fsubp
gs
aad
xchg
movsl
sbb
cmp
push
lcall
mov
xchg
jge
sub
or
cmp
mov
lock
ud0
loop
in
test
pop
aaa
jb
fsts
mov
push
cs
test
or
sub
sbb
mov
sbb
and
adc
push
data16
fnstcw
or
mov
xchg
stos
imul
adc
std
push
shrl
dec
gs
mov
mov
sbb
xor
add
pop
ret
xor
lret
cmp
testl
int3
fists
jg
int3
xchg
mov
mov
jb
mov
xor
mov
jo
push
mov
shll
outsl
testl
xor
js
push
xchg
jbe
pop
jl
push
sub
stos
dec
movsl
adc
jle
shl
dec
add
pop
push
jl
jmp
jge
or
cmp
out
inc
push
std
adc
iret
xor
leave
test
mov
sbb
out
xchg
sub
adc
lds
jne
sbb
mov
cmp
shl
lea
inc
sub
aad
scas
hlt
add
xchg
cwtl
lret
mov
ljmp
dec
int3
sahf
jmp
jnp
xchg
aaa
sub
xor
sbb
cltd
jle
push
push
and
dec
dec
ss
mov
repnz
ss
nop
mov
cmp
rorb
lcall
add
ds
jl
pop
dec
adc
imul
bound
addr16
or
test
testl
test
enter
out
test
insb
cmpsb
pop
dec
data16
mov
and
into
ss
and
loop
std
out
or
test
sub
rclb
pop
call
stos
mov
imul
and
dec
add
adc
ss
mov
loopne
dec
pop
push
cli
jne
sub
bound
dec
sbb
add
enter
movl
adc
xchg
cltd
dec
ja
xchg
out
cmp
repnz
cmp
or
popf
pop
xor
cmp
mov
call
inc
fwait
sub
cli
mov
aaa
stos
mov
inc
mov
and
out
ljmp
push
and
std
js
in
fcmove
jmp
xor
popa
mov
dec
pop
and
cmpsb
jns
fdivl
enter
mov
divl
mov
cmp
jb
jl
push
fstp
push
xchg
jnp
imul
rorl
popf
lods
pop
mov
inc
sbb
push
movsl
pop
xor
or
cltd
cmc
xchg
or
adc
ss
les
add
cmpsb
int3
es
jns
test
sbb
cld
icebp
in
pop
sub
out
inc
push
inc
test
lret
pop
mov
lds
jecxz
ffreep
mov
aas
nop
sarl
imul
jnp
lcall
add
xchg
fwait
mov
movsl
adcl
lds
jg
jnp
jecxz
sahf
mov
sbb
ret
mov
icebp
cmpsl
adc
jns
pop
stos
inc
jne
cmp
cmpsb
addr16
es
jb
pushf
jl
xor
lods
jmp
das
lea
outsb
jmp
xchg
decb
pop
push
adc
mov
divl
xchg
jecxz
sub
jo
cmp
push
gs
popa
sbb
mov
pusha
stos
mov
or
mov
dec
gs
cmp
sti
pop
sbb
dec
sbb
push
push
pop
fists
rol
and
mov
js
sti
jle
cwtl
jb
rcr
in
or
xor
movsb
adc
sbb
gs
sub
test
fists
inc
sahf
adc
mov
pop
mov
and
iret
xchg
out
jnp
aad
pshufw
lea
test
setns
push
xlat
dec
test
rol
out
loop
or
jbe
pop
xor
pop
and
clc
pop
sbb
add
insl
dec
and
or
int3
insb
cmpsl
pop
and
outsb
fs
in
push
rcrb
cli
or
fdivr
xor
imul
dec
dec
data16
in
mov
popa
jae,pn
add
mov
bnd
push
in
icebp
jno
std
sbb
pop
cmp
mov
cmp
add
lods
mov
dec
mov
ss
mov
je
inc
iret
jno
cmc
pop
sub
jl
mov
test
popf
movsb
repz
cmp
push
mov
adc
add
mov
lock
dec
enter
inc
pop
iret
or
pop
push
mov
adcl
ja
and
les
adc
stc
jns
jecxz
jle
add
dec
inc
ds
push
lock
ds
cmp
xlat
scas
jo
jno
jne
stos
repnz
cs
mov
out
xor
test
shl
adc
mov
cmp
xchg
dec
ret
gs
jns
push
cltd
je
xor
imul
and
jmp
lea
movsb
fsubrs
push
data16
mulb
jg
inc
push
test
mov
pop
dec
adc
add
push
int3
jg
ss
orl
in
mov
inc
xchg
mov
and
xchg
mov
cmp
mov
ja
cmp
mov
push
in
fcmovnu
out
cmp
jp
ret
in
and
sbb
or
in
adc
sub
shrb
or
push
cld
pop
fstl
mov
hlt
jo
out
repz
outsb
pop
enter
push
xor
dec
sub
pop
test
ds
shll
adc
scas
sbb
scas
or
ja
add
dec
mov
movl
push
jg
or
xor
lret
js
adc
mov
outsl
push
sub
ds
in
jmp
jecxz
out
out
mov
xchg
rorb
loopne
jne
out
fs
repz
adc
push
negl
jnp
and
std
adc
push
push
mov
hlt
push
rcl
inc
int3
popf
or
mov
pushf
ds
test
cmp
rorl
ss
xor
jmp
ret
jge
inc
stc
cmp
fs
icebp
lret
addr16
test
adc
iret
jmp
std
sbb
ret
sub
das
add
mov
xor
mov
inc
pop
and
cmp
pop
popa
inc
incb
xchg
lcall
call
addr16
xlat
inc
imul
out
fs
lret
ret
sbb
adc
dec
adc
scas
test
mov
inc
call
icebp
push
subl
add
popf
int3
jge
fsubrl
rorl
dec
dec
push
dec
push
jg
nop
lret
leave
hlt
mov
lret
arpl
inc
jnp
ljmp
and
call
shll
pusha
mov
sbbb
out
stos
das
inc
mov
andl
lock
xchg
dec
and
jns
aas
bound
imul
xor
mov
jae
cmp
dec
loop
adc
jge
pop
negb
pop
or
aam
jnp
and
or
and
add
adc
fildl
not
or
cmc
rdpmc
test
mov
ja
std
xchg
outsl
push
adc
data16
xchg
lret
clc
xor
inc
xchg
push
loopne
dec
arpl
sub
sub
daa
mov
sti
cmp
mov
hlt
enter
dec
addr16
in
cs
cs
jg
sub
insl
inc
into
test
lcall
pop
mov
repz
push
cwtl
mov
jns
pop
and
inc
push
sbb
jae
xor
mov
repnz
inc
mov
push
test
xchg
mov
add
adc
fwait
push
xchg
mov
gs
in
xchg
repz
jmp
or
mov
leave
bound
psubsb
test
pop
subb
ret
hlt
aas
jle
jle
dec
std
push
mov
lock
pop
dec
add
add
inc
js
push
mov
imul
test
icebp
stos
pop
push
sub
rcrl
sbb
cltd
lods
mov
mov
shll
mov
cli
xchg
lret
sub
pushf
adc
rcrl
jns
subl
or
xlat
push
mov
jecxz
test
loopne
mov
lret
dec
mov
sbb
pusha
pop
dec
cmpsb
stc
inc
jecxz
mov
mov
insl
fwait
push
xor
adc
dec
mov
popf
ret
imul
sbb
negl
pop
mov
lret
lcall
notb
mov
lret
sbb
lcall
out
push
adc
dec
sbb
mov
dec
mov
cmp
jbe
in
ret
int
xchg
pop
neg
imul
into
mov
cmp
movsb
test
adc
das
popf
and
jo
outsb
pushf
xchg
push
jmp
mov
test
dec
or
cmp
and
xchg
push
push
sbb
loope
and
mov
mov
dec
fisubrl
inc
dec
jl
add
pop
scas
dec
pop
lock
ficoml
out
or
ret
lcall
popf
cmp
add
ja
or
cmpsb
dec
loope
jns
cmp
dec
dec
sub
add
fldcw
aas
bound
pop
dec
gs
imul
fistl
mov
dec
push
out
js
mov
inc
adc
rorl
clc
scas
pop
pusha
mov
int3
and
sbb
sti
insb
xor
inc
add
jae
rcll
in
jno
cmp
adc
cs
mov
xor
push
push
or
and
mov
inc
cmp
shlb
sbb
dec
fldt
xor
push
jbe
add
jmp
mov
pop
dec
sbb
xor
or
test
push
dec
inc
fbld
sub
js
test
pop
in
inc
pop
cmp
out
movsb
xor
mov
out
jno
sbbl
js
pop
outsl
test
aas
mov
cld
jp
cmc
push
sub
inc
push
std
mov
adc
jge
sahf
enter
cmp
and
or
std
jl
lods
pop
cmc
push
jmp
cmp
je
inc
pop
inc
mov
push
fidivrl
pop
int
and
pop
mov
bound
push
fnstenv
out
cmp
das
in
test
aas
lds
sbb
sub
repnz
adc
jb
into
out
and
loopne
pop
cs
jne
sbb
dec
cmp
cmp
jmp
xchg
leave
and
lret
add
sub
sub
mov
pop
stos
add
andl
add
or
xor
mov
stos
stos
xchg
mov
aam
push
push
push
or
int3
mov
sti
add
pop
mov
jl
jne
imul
pusha
lea
xchg
cs
push
dec
mov
dec
jbe
mulb
push
sti
jge
faddl
repz
pop
andb
lahf
add
fldenv
jmp
testb
sub
cmpsb
xor
std
iret
jae
sahf
mov
inc
cs
test
enter
push
dec
adcl
fdivr
mov
adc
fcompl
mov
in
cmp
jp
cmpsl
sub
dec
mov
std
sbb
pop
lret
imul
icebp
gs
std
into
mov
and
mov
add
mov
dec
push
xchg
xor
mov
mov
push
dec
mov
jns
imul
fwait
add
out
out
test
mov
std
lods
mov
xchg
in
or
addr16
push
pop
push
scas
push
pop
pop
adc
rcr
and
xchg
jb
mov
jl
lds
es
les
test
mov
iret
mov
dec
cmp
add
data16
sbb
or
ds
mov
mov
push
jns
pop
in
add
fisttps
pop
nop
mov
repnz
sbb
xor
mov
ljmp
lret
cmpsb
xchg
test
loop
sub
and
cmpsl
int3
fwait
subb
mov
xchg
data16
aad
jns
nop
jae
pop
fidivl
mov
cli
jo
repz
and
xchg
inc
lods
in
scas
popf
sbb
jne
insb
sbb
dec
pushf
pop
out
jle
rol
xchg
movsb
out
imul
xchg
popa
push
outsl
aaa
mov
mov
jns
xlat
inc
stos
add
pop
ret
es
das
dec
movsl
mov
xor
gs
xchg
pop
lret
sub
pop
cmpsb
and
pop
mov
jo
jp
push
int3
outsb
in
push
mov
fwait
nop
data16
lahf
call
push
adc
out
sub
out
mov
mov
push
mov
jns
cs
jl
or
jl
sbb
jl
fstps
push
in
cmpsl
sbb
push
push
jle
pop
pop
inc
bound
cmp
jg
mov
test
fbstp
jne
fmul
lods
xchg
inc
pop
fdivrs
jmp
push
dec
sub
ds
aaa
stos
cs
mov
jne
fbstp
inc
stc
push
hlt
mov
push
and
das
add
leave
cmp
and
repz
push
into
add
rorl
inc
pop
std
sbb
dec
or
jp
mov
and
inc
clc
fstpl
or
clc
lahf
and
mov
push
lock
push
xor
je
inc
cmpsb
pop
cmp
jge
mov
add
xchg
jmp
jno
inc
andl
xor
clc
xchg
jge
sbb
cmc
mov
pop
mov
das
mov
mov
sbb
jmp
jns
sub
sub
daa
lods
nop
cmp
adc
mov
imul
lcall
shlb
test
xor
mov
jl
adc
jmp
pop
movsb
les
daa
and
add
fdivl
movl
adcb
cmpsb
and
inc
stc
sbb
cli
ret
xchg
xor
jmp
leave
jmp
sub
fildll
rorb
adc
out
inc
rol
loop
test
cwtl
mov
lock
and
jecxz
add
jmp
sub
sub
push
jecxz
outsb
loop
add
cmp
and
outsl
es
xchg
mov
test
xchg
jno
mov
fwait
addr16
cld
sub
mov
jl
sbb
outsl
adc
adc
mov
adc
les
outsb
xchg
add
leave
dec
adc
jp
mov
mov
and
and
subl
jmp
clc
into
jle
dec
loopne
shrb
mov
sub
fmul
jl
fadd
lret
mov
push
sub
sub
ljmp
sub
and
push
adcl
jbe
xchg
test
cmp
cwtl
mov
sub
push
and
xchg
adc
ret
movb
ds
mov
jg
push
int3
dec
clc
jmp
scas
or
cmp
jae
pop
cld
jnp
int
xor
mov
je
pushf
lea
test
sub
js
std
sub
int3
add
and
popa
rcrl
xor
fwait
in
in
dec
call
pop
imul
idivb
mov
test
add
imul
in
shl
popa
sub
push
xor
pushf
arpl
fstpl
ret
aad
mov
and
inc
mov
sti
pop
je
mov
or
lods
sbb
out
or
int3
cs
stos
incb
jne
dec
jae
add
in
mov
dec
fwait
adc
xor
dec
push
iret
inc
es
loop
and
jecxz
outsl
mov
sub
adc
jns
mov
adc
ret
call
dec
or
jg
out
test
cmp
dec
aas
push
ja
sub
call
pop
mov
stc
int3
pop
cmp
int
inc
push
cs
or
mov
xchg
mov
xchg
sbb
aad
add
mov
clc
out
adc
inc
and
sub
adc
push
icebp
mov
loopne
fwait
lods
mov
outsb
subl
add
out
in
add
sub
jbe
call
cs
ret
cmpsl
out
ret
fisttpll
add
push
sarl
pop
dec
pop
push
xchg
out
mov
fs
xchg
out
sbbl
dec
movsb
mov
bound
and
pop
pop
mov
inc
sub
ret
push
cmp
sbbb
sub
dec
inc
and
sti
mov
xchg
adcb
cltd
scas
add
test
mov
loopne
fdivl
andb
ja
daa
inc
imulb
jae
gs
xchg
cltd
or
push
fcomp
lret
iret
aam
stos
in
and
sahf
jge
sub
ss
or
std
jb
dec
mov
in
xor
and
push
push
xchg
push
sbb
dec
mov
repz
or
or
movsl
fildl
xchg
or
or
outsl
cmp
adc
mov
sbb
aad
and
out
jp
xchg
aas
stos
dec
pusha
and
movsb
cli
jno
jmp
mov
into
mov
test
and
xor
cmp
subb
jnp
push
outsl
or
and
xor
pop
in
xchg
inc
sbb
mov
imul
dec
in
sub
into
and
out
js
rorb
cltd
push
out
ljmp
in
dec
ror
mov
into
movsl
lahf
out
sbb
insl
popa
test
inc
icebp
fldl
inc
inc
mov
mov
mov
cli
sbb
popf
jle
stos
cmp
xor
mov
test
ljmp
pop
bound
mov
jg
jp
xchg
sarb
bound
ret
cmc
pop
arpl
mov
shl
pusha
sbb
fcomps
popa
mov
add
in
aad
mov
xchg
xor
loope
mov
loop
mov
stos
cmp
movsb
mov
je
xor
ret
push
fdivrs
pop
imul
mov
xor
daa
push
cmpsl
or
fwait
sub
popf
push
cld
inc
mov
pop
dec
fadd
clc
add
push
imul
ds
sbb
mov
or
push
aas
push
add
ret
sbb
mov
pop
lods
cmp
sbb
xchg
je
dec
add
jle
cld
std
shll
xor
loopw
pop
cwtl
repnz
insl
clc
mov
jns
cltd
mov
daa
sub
dec
mov
mov
dec
decl
outsb
out
cmpb
int
fistps
push
jb
cltd
fldenv
xor
cmp
cmc
and
ret
push
fbld
bound
iret
cmp
mov
xchg
pop
ja
data16
push
push
daa
lock
inc
mov
pop
ds
jno
outsl
mov
xchg
test
xor
lret
aas
in
jb
dec
clc
mov
fiaddl
test
cmp
rorb
xchg
push
pushf
mov
cmpsl
sbbb
push
ror
aaa
mov
and
lods
in
incb
mov
mov
scas
pop
aas
std
insl
loope
out
bound
xor
mov
mov
es
inc
cld
outsb
idivb
pop
lds
xchg
pop
addr16
mov
sub
cmp
ss
jmp
push
mov
repz
movsl
cmp
cs
jp
loopne
imul
mov
jp
aad
push
fisttpll
xchg
fmuls
jb
popa
adc
les
das
pop
sti
sub
fwait
icebp
ret
lock
push
and
ret
and
jle
pop
and
int
rcrb
cltd
jge
xor
daa
out
xchg
imul
push
mov
inc
cs
imul
lcall
jg
orl
call
or
xchg
push
call
xor
idivb
adc
pop
jl
lahf
dec
rcrb
imul
xchg
cwtl
pop
push
adcl
inc
in
cmp
dec
jmp
sbbl
sbb
andl
andl
add
jle
sbb
inc
ficompl
mov
int3
lods
aad
lods
push
mov
imul
add
ljmp
pop
enter
insl
test
clc
fnsave
ret
outsl
std
and
xchg
mov
or
movsl
xor
mov
mov
push
mov
repz
mov
pop
test
pop
sbb
push
sub
test
pop
fcomps
and
jmp
mov
inc
dec
pop
push
cmp
cmp
xlat
mov
inc
daa
push
jae
xor
mov
or
sti
dec
sahf
jp,pn
clc
in
in
sub
mov
lret
mov
dec
sub
icebp
and
mov
xor
push
scas
mov
fstpl
add
and
es
je
es
addr16
mov
jg
sbb
int3
jbe
in
int
test
in
lret
insl
jp
or
nop
das
or
inc
outsl
insb
stc
and
test
dec
cwtl
cmpsb
stc
push
xorb
mov
das
out
pushl
push
js
rcr
fdivl
sti
mov
loope
push
cmc
jle
pop
daa
mov
sti
push
push
stc
or
out
mov
xchg
int
es
data16
xor
enter
xor
cmp
adc
adcb
push
pushf
pop
inc
inc
aas
lahf
or
in
sbb
lret
cmp
jns
adc
inc
and
add
jae
xor
fwait
test
mov
mov
shll
hlt
lea
scas
xchg
or
enter
fwait
enter
dec
inc
popf
mov
mov
test
aaa
cmp
inc
mov
xchg
imul
sbb
call
adc
test
je
gs
test
leave
loop
cmp
add
gs
je
push
out
flds
lret
insl
imul
inc
outsl
inc
mov
repz
bound
jmp
psubq
jge
jo
xor
push
rclb
loop
daa
shlb
dec
push
dec
dec
stos
enter
test
aas
mov
scas
sbb
dec
adc
pop
jo
jno
fnsave
repnz
xchg
ljmp
sub
xchg
fsubs
daa
jecxz
xchg
lahf
rclb
xchg
mov
inc
leave
lds
mov
scas
xchg
xchg
lahf
adc
xor
ss
into
push
adc
hlt
push
sti
inc
mov
dec
cld
xor
or
cltd
xchg
mov
fcoms
imul
lods
aam
push
dec
push
jb,pn
inc
jecxz
aas
repz
es
andl
adc
int3
jbe
sahf
frstpm(287
cld
paddd
jle
imul
popa
jns
jecxz
xor
add
sbb
in
shlb
fdivrs
data16
pop
dec
lea
mov
insb
fwait
adc
jmp
xor
fcoms
scas
iret
push
sbb
dec
push
cmp
ja
into
mov
je
and
add
jnp
aas
gs
sbb
add
xchg
jo
sbb
daa
jmp
test
lret
mov
mov
xchg
out
jno
inc
cmp
xchg
cs
out
mov
push
pop
sub
sahf
xor
jp
adc
js
lret
push
cmp
insl
aaa
movsl
bound
inc
fwait
pop
cmp
adc
sbbb
add
js
movsb
mov
andb
pop
ja
arpl
idivl
cli
in
shll
faddl
add
mov
jg
insl
popf
inc
xacquire
nop
outsl
pop
inc
mov
push
les
iret
mov
mov
movntq
and
xchg
and
pop
jmp
or
enter
cmpsl
sbb
mov
notb
push
push
xchg
mov
and
sti
enter
fs
xchg
inc
jp
pop
push
cmp
push
out
fcoml
icebp
pushf
and
cmp
and
loop
mov
push
inc
sbb
mov
mov
mov
xor
insb
mov
mov
adc
inc
mov
bnd
or
dec
jno
xor
jmp
and
mov
testl
push
xor
jno
fimull
ss
pop
leave
outsb
loope
stos
ss
ljmp
sub
fcmovnbe
sbb
sub
cld
call
cld
es
sbb
popa
xchg
clc
mov
mov
dec
push
sub
lret
push
cmp
mov
test
addr16
inc
fsub
pop
loop
sbb
xchg
sbb
cmp
jo
imul
jae
xchg
out
push
add
dec
sbb
fisubl
sbbl
scas
xchg
out
pop
fmul
test
std
fwait
adc
rolb
sahf
inc
sbb
pop
dec
pushf
inc
push
dec
mov
sbb
push
insb
subl
pop
xchg
int
cmp
mov
das
je
add
pop
stc
push
popa
mov
into
sub
into
popf
ja
fs
test
cmp
lods
pop
addr16
jns
xchg
nop
dec
mov
mov
push
loop
cmpsb
dec
sbb
xchg
sub
or
mov
shll
mov
cwtl
test
popa
jae
inc
cmp
loope
shrb
cwtl
pushf
mov
sarl
repnz
push
fs
pop
dec
mov
fs
pop
sbb
cmc
pop
fdivp
sbb
lahf
xor
cs
shl
xchg
push
pop
pop
ret
stos
mov
and
mov
out
adc
out
and
js
mov
daa
jmp
xchg
dec
in
leave
xor
mov
fs
test
mov
mov
mov
jle
enter
fidivrl
shl
dec
ja
adc
jp
adc
xchg
and
adc
repz
int3
insb
leave
push
push
div
mull
jmp
addr16
jmp
adc
imul
sub
in
lods
lcall
scas
mov
sbb
les
add
mov
xchg
dec
adcl
pop
add
test
lods
mov
mov
xchg
fs
aaa
aad
mov
ds
int3
scas
add
ret
mov
push
stc
call
cli
imul
mov
fdivr
fwait
sub
test
pop
inc
adc
cwtl
aad
xor
cwtl
mov
je
fsts
xor
jo
lret
cli
xchg
imul
call
ds
lret
dec
xor
xchg
std
sub
pop
dec
sbb
xor
daa
add
je
mov
jbe
pop
int3
mov
dec
fsubs
loope
int
cmc
or
dec
sbb
add
xchg
es
addr16
pop
jl
in
mov
je
inc
test
sub
ja
xor
dec
mov
fs
mov
mov
cmp
sahf
mov
push
cltd
and
xchg
push
sbb
cltd
cmp
jmp
or
roll
fisubl
push
jbe
xor
in
jg
iret
mov
inc
mov
jae
mov
and
out
sbb
pop
pushf
loop
add
jge
cltd
out
cmp
jns
pop
add
cli
cmp
aas
les
sbb
clc
scas
test
cs
cs
jp
outsl
aam
iret
cmp
mov
lods
mov
popf
and
cld
push
add
adc
cltd
xchg
fdivrl
inc
ds
stos
mov
loopne
xor
jmp
movl
mov
sbb
repnz
imul
xchg
mov
test
cltd
cltd
imul
adc
ret
subl
insb
or
stos
pop
xchg
dec
stc
push
jp
in
fstl
add
lcall
call
fs
dec
into
inc
pop
mov
cmc
inc
repz
mov
loope
mov
inc
and
xor
push
mov
in
cmp
and
sub
adc
movsl
mov
cltd
addr16
push
int3
lret
frstor
cmpsl
and
xor
sarl
std
into
mov
popa
in
mov
xchg
popf
or
enter
imul
and
adc
jl
push
sbb
test
add
dec
scas
aas
mov
adc
fstpl
in
dec
push
pop
or
hlt
sahf
stos
mov
cwtl
gs
lds
cmp
stos
push
fidivl
fwait
mov
movsl
mov
testb
popl
push
xchg
call
pop
pusha
jns
out
cld
sbb
pop
lret
movsl
mov
mov
mov
or
stos
pop
lods
cs
stos
cmpsl
push
mov
nop
dec
add
inc
sbb
jecxz
movsl
in
mov
cmp
pop
sti
and
repnz
add
mov
mov
nop
jl
sub
sub
cmp
mov
add
in
fs
fstps
ret
push
xchg
iret
cmp
xlat
mov
pop
je
scas
mov
testb
nop
add
or
icebp
cld
jg
test
sbb
mov
lea
rcrb
lea
lret
mov
jb
loopne
jge
dec
outsb
shll
xchg
mov
sub
or
test
pop
out
stc
lds
sub
sbb
into
rcrb
repz
rcll
pop
add
cs
insl
inc
sub
inc
mov
xchg
cmpsb
inc
cwtl
fistpl
and
lahf
jge
mov
jmp
hlt
popw
jns
inc
aad
fildl
out
cltd
mov
mov
mov
divl
mov
mov
dec
sahf
push
ljmp
mov
mov
push
jb
push
mov
fdivl
push
jno
cld
or
adc
fists
std
pop
xchg
xchg
jmp
mov
sbb
mov
into
and
cmp
ss
jns
push
sbb
inc
bound
out
mov
cltd
mov
test
out
andl
or
inc
mov
dec
mov
insw
jbe
fsubl
movsb
in
fndisi(8087
push
and
fldenv
ss
cwtl
daa
add
cmp
dec
sub
dec
and
fildl
lock
int3
cmc
push
adc
add
fwait
and
inc
push
cmp
or
jo
in
outsb
fisttpll
ret
test
inc
fwait
outsl
xchg
dec
ret
inc
dec
gs
and
sub
es
outsl
xor
clc
jae
or
ret
gs
test
cmp
loopne,pn
cmp
add
pop
jb
cmp
cmp
xor
cmpsb
fs
dec
cmp
xor
lcall
push
xchg
pop
xchg
add
lret
add
xchg
mov
jecxz
mov
adc
repnz
dec
and
inc
mov
fistpll
hlt
or
rcrb
push
add
dec
or
fidivs
push
pusha
mov
mov
ja
mov
adc
inc
lods
pop
inc
dec
bound
notl
adc
fidivl
js
shll
in
scas
call
std
or
scas
mov
andl
movsl
es
jns
ss
loopne
mov
clc
iret
cmpsb
pop
mov
or
push
stc
ja
mov
push
lahf
push
arpl
sar
sub
pop
mov
pop
fcompl
sets
outsl
inc
or
add
xchg
inc
inc
sbb
push
or
mov
adc
movsb
sbb
icebp
xchg
loopne
pop
scas
adcl
mov
in
jne
pop
sbb
lret
push
fistpl
pop
adc
gs
shr
les
mov
xor
lods
fsubl
shl
call
adcb
push
out
stc
dec
cld
xor
test
das
jg
stos
fwait
imul
adc
es
mov
and
ds
dec
imul
sbb
paddusw
in
sbb
cmpsl
sub
xchg
push
stos
aas
arpl
add
daa
pop
push
mov
jns
or
out
icebp
adc
and
and
push
dec
shlb
cmp
cmpsb
fimuls
mov
scas
mov
xchg
data16
sbb
test
and
arpl
sub
xchg
movsb
xor
and
cmpsb
dec
daa
jbe
jae
int3
pushf
hlt
xchg
inc
jo
fistpl
xchg
inc
mov
and
jmp
fisubs
mov
mov
xchg
mov
xchg
int
inc
pop
xchg
add
xchg
mov
sbb
lret
ljmp
jecxz
inc
cld
leave
cmp
frstor
in
sub
mull
xchg
imul
adc
arpl
jae
push
dec
adc
push
jmp
push
test
outsb
rcrl
adc
imul
mov
movsb
add
in
mov
jp
imul
cmp
lahf
mov
sahf
and
adc
push
loope
mov
mov
mov
stos
pop
push
addr16
cmc
mov
mov
outsb
jno
cmpsb
mov
imulb
ss
movsl
add
insl
repnz
test
mov
push
push
add
lcall
cmp
cs
and
hlt
xchg
shll
jnp
pop
sbb
inc
mov
shlb
dec
mov
sub
jne
roll
xor
sub
cltd
add
into
fwait
sbb
call
test
test
xchg
ljmp
stos
sub
mov
out
iret
filds
es
popa
rorl
mov
add
mov
out
pop
icebp
jns
push
inc
repnz
lods
mov
mov
sub
test
xchg
push
out
into
mov
outsl
jo
or
je
idivl
lret
pop
xchg
ss
dec
mov
and
fs
popf
jns
cmp
pop
push
and
mov
xchg
sbb
incl
data16
outsl
push
add
jecxz
xchg
pop
pop
or
in
pop
enter
wrmsr
inc
fidivs
or
sub
addr16
daa
sar
pop
inc
call
enter
in
icebp
xor
loope
cmp
inc
xchg
roll
sbb
or
adc
jnp
mov
je
jmp
or
addb
mov
stos
test
inc
js
shrb
cmc
test
outsl
popa
sahf
std
sbb
shll
dec
push
icebp
sbb
cmpsl
cmp
loopne
mov
aad
and
out
cli
adc
shl
and
lret
in
jb
ljmp
popa
cltd
adc
mov
fsubrs
idiv
aas
int
loope
add
sbb
out
pop
sub
mov
pop
pop
icebp
xchg
test
sbb
mov
test
aad
jns
aas
lds
or
aad
pop
push
inc
clc
sub
aas
cmp
cmp
cmpsl
mull
or
in
test
sbb
nop
out
lret
rorb
push
lds
fisubrs
xchg
loope
mov
pushf
mov
lock
outsb
push
out
clc
sbb
mov
push
or
adc
fdiv
les
mov
pop
leave
mov
in
push
push
ret
push
pop
and
jbe
stos
ja
sbbb
int3
mov
mov
adc
dec
test
cmp
inc
or
aad
popf
in
pusha
aas
int
xchg
add
push
cmp
aam
fists
int
push
hlt
fs
dec
mov
push
cmp
add
in
adc
aad
push
dec
inc
lcall
xor
mov
cmp
jecxz
enter
ss
pushf
scas
and
std
movsl
cld
xor
mov
cmp
inc
sub
jmp
imul
or
xlat
mov
cmp
lret
data16
xchg
ds
cmp
dec
outsl
icebp
mov
enter
mov
ret
push
adc
in
mov
mov
lods
ret
dec
push
aam
cmp
aad
pop
pop
fsubrs
jnp
out
es
push
and
iret
dec
push
pop
mov
popa
outsb
sti
shll
idivb
js
clc
jo
cmp
shl
stos
adc
sbb
bound
addr16
cmp
mov
imul
xor
pop
adc
fisubrs
dec
adc
in
xor
and
sti
cmp
loopne
dec
push
or
or
mov
clc
jg
cmp
mov
xchg
dec
inc
outsl
dec
fs
jbe
into
out
test
inc
mov
push
testl
or
mov
out
leave
adc
push
les
inc
dec
and
outsb
test
test
in
pop
shr
jne
push
inc
jae
inc
lea
xor
pop
data16
xor
add
gs
jl
cmp
fdivs
jecxz
xchg
push
ja
ds
je
pusha
cmc
mov
sbb
sbb
cmp
in
insb
sub
mov
pop
pushf
mov
sub
push
push
sbb
inc
xor
xchg
mov
add
pop
cmp
pushf
push
sub
mov
rorl
inc
repz
movl
cmpsw
jmp
dec
mov
repnz
ss
dec
mov
dec
test
inc
fsub
fiadds
or
pushl
adc
xor
mov
pusha
mov
rol
xorb
dec
xor
rcr
pop
sub
pop
rol
cmp
push
scas
add
inc
scas
inc
loopne
add
sub
jo
mov
ret
jmp
dec
jns
scas
cmp
cmpsl
je
int
push
scas
xor
push
mov
nop
xor
es
inc
test
mov
adc
cmpsl
les
sahf
insl
outsl
loop
sbb
ja
lea
inc
sbb
movsb
or
mov
mov
lret
sub
ljmpw
or
mov
mov
lahf
mov
incb
xchg
jecxz
xor
out
aaa
shll
sbb
inc
aad
jbe
stos
lret
aad
out
adc
adc
mov
inc
jp
gs
lcall
fcmovnbe
adc
pop
js
out
aad
fdivrs
loopne
ss
mov
adc
lea
pop
push
mov
inc
inc
pusha
loop
xchg
fdivl
mov
push
xchg
popf
xor
mov
scas
sub
sbb
xor
lea
dec
jo
xor
xor
dec
cmp
sub
mov
out
jne
addr16
inc
outsl
or
mov
adc
add
outsl
sub
cmp
sbb
flds
bnd
lcall
loopne
lods
jl
add
and
mov
and
icebp
mov
mov
fildll
lcall
test
jle
lock
inc
mov
adc
push
xchg
pop
scas
in
adc
pop
in
push
xchg
js
jmp
mov
cli
mov
cmp
loop
push
and
popf
pop
cmpsb
ds
fs
cltd
mov
xor
push
rorl
jmp
cwtl
scas
and
dec
fisubrl
mulb
push
dec
and
lock
int
push
xchg
movsb
jle
mov
mov
ja
mov
jmp
cs
js
dec
stos
data16
loope
pop
jbe
repnz
add
jp
aaa
sub
add
dec
scas
rclb
inc
test
ret
out
push
xor
xchg
mov
inc
cmp
pusha
and
test
dec
jl
jb
pop
shlb
mov
sti
fst
fcomps
xor
or
or
movsb
or
ss
out
or
mov
pop
shll
imul
aam
lods
test
call
sub
push
rorb
xchg
test
mov
lods
mov
lcall
pop
inc
sbb
pop
xor
rcl
xchg
stos
dec
xor
pop
lods
adcl
and
call
in
dec
and
repnz
gs
push
inc
sti
pushf
outsb
fstl
call
xor
xlat
iret
aas
adc
fs
das
inc
cmp
movsl
or
out
and
call
movsb
mov
cmp
jp
ss
in
icebp
xor
xchg
ds
std
adc
dec
or
outsb
roll
bound
pop
pop
sbb
scas
pop
imul
jge
into
fwait
push
add
xchg
insb
out
in
cmp
out
pop
jecxz
xchg
xchg
es
fdivrs
out
lods
bound
pop
inc
jmp
iret
stc
mov
mov
movsb
fcmovb
fidivrl
cwtl
call
nop
xchg
je
ljmp
or
mov
lcall
xor
sbb
iret
pop
push
mov
and
or
cs
rcll
push
push
imul
repz
dec
outsb
jecxz
lods
es
mov
fisubs
in
jge
pop
xlat
ja
stos
insb
je
pop
sub
insl
leave
call
adc
ret
aam
pop
push
cmp
push
adc
fnsave
dec
cmp
je
jp
push
cmp
aaa
sbb
divb
idiv
nop
push
mov
push
cmp
mov
inc
jno
mov
jl
dec
sbb
mov
loope
mov
cmp
mov
mov
cmp
sbb
imull
repnz
jne
adc
mov
movsl
mov
jge
imul
scas
sub
mov
or
or
pushf
fs
hlt
mov
mov
sub
sbb
mov
sub
push
outsb
test
jp
pusha
mov
sub
into
fistl
pop
sub
dec
inc
pop
aaa
jo
movsl
xchg
mov
cmp
fbstp
into
mov
jnp
pusha
daa
xor
jg
aam
aad
xor
xchg
cmpsl
dec
mov
or
xlat
cmp
inc
push
dec
sub
jo
fsubp
in
cmp
mov
das
mov
lea
lods
mov
mov
sti
or
fmull
pop
fcompl
cmp
add
sarl
push
inc
cwtl
movsl
sub
test
ret
data16
add
int
adc
xor
add
xor
mov
sub
stos
popf
xor
ficompl
push
pop
add
jl
repz
push
mov
ret
pop
and
push
mov
std
xchg
scas
cmp
sarb
fstl
jg
pop
es
in
flds
pop
movsl
pop
mov
cld
fwait
mov
sub
push
test
inc
cmp
or
mov
xchg
adc
push
jae
popa
xor
lea
int3
push
adc
jno
inc
imul
call
mov
xchg
add
out
repnz
xchg
jle
dec
mov
sub
dec
add
cmp
sbb
sub
xchg
arpl
sub
negb
out
sub
pop
cmpsl
lcall
sub
ds
pop
mov
scas
pop
xchg
cltd
adc
dec
pop
nop
ja
xor
or
int3
mov
or
jnp
xlat
cmpsb
adc
cmp
int
add
push
popa
push
push
inc
or
lods
jnp
nop
sbb
dec
into
sbb
sub
push
cmp
andb
dec
out
fnstenv
movb
adc
or
xchg
xlat
xchg
jle
shrb
mov
sahf
jge
es
mulb
xor
pusha
or
jg
and
push
cld
jmp
and
sbb
stc
cmp
jp
dec
std
lock
rcrb
mov
imul
out
das
pop
add
or
cld
mov
or
addb
ja
or
inc
repnz
ficomps
ljmp
out
clc
push
aaa
ret
addr16
adc
mov
xor
je
mov
jmp
jbe
sbb
ja
adc
imul
cwtl
jecxz
rorl
je
mov
mov
add
stos
std
sahf
mov
lret
in
inc
stos
popf
adc
push
xchg
out
out
push
sub
mov
dec
loop
push
mov
lahf
jmp
lahf
xor
roll
adc
inc
insl
testl
in
icebp
outsb
sub
loope
sbb
mov
sub
hlt
adc
icebp
pop
lods
pop
mov
jmp
scas
hlt
push
aad
xor
lods
lock
lret
sub
xchg
push
xorb
mov
js
aad
jb
or
xor
pop
mov
inc
lahf
xchg
rorl
cltd
test
ja
cwtl
push
jle
add
dec
xchg
test
cltd
fisttps
out
mov
movsl
int
insb
adc
cs
cmp
inc
pop
jno
mov
outsb
in
arpl
testl
xor
mov
sub
mov
mov
mov
mov
ficompl
jne
lds
lea
shlb
mov
dec
lcall
adc
mov
fnstcw
or
enter
iret
mov
jae
sbb
pop
adc
test
add
pop
scas
push
push
out
in
push
in
pop
loope,pt
rcl
lods
popa
xchg
and
sbbl
loope
mov
mov
mov
aaa
out
repz
inc
sub
inc
aam
imul
jo
mov
fbld
aam
ret
mov
int
int3
jmp
out
in
mov
mov
or
test
dec
addl
or
push
xor
jb
lea
xor
out
jne
sub
add
jae
test
in
movl
jl
ret
xchg
arpl
fdivl
pop
pop
mov
or
push
test
or
subl
or
cmp
push
mov
shrl
xchg
in
jecxz
fcoms
int3
mov
inc
loopne
sbb
or
je
jbe
jp
aaa
popa
and
cmp
xlat
addr16
jecxz
jo
mov
xor
pop
je
inc
out
push
adc
push
fbstp
es
pop
mov
iret
inc
pop
in
mov
outsl
dec
xor
xor
xchg
lea
and
and
push
outsl
fadds
pop
lods
xchg
xchg
popa
add
ret
test
ficoms
lret
int
loop
mov
jmp
lock
xchg
mov
test
pop
mov
pop
test
mov
jbe
lret
sbb
mov
out
popf
and
dec
insl
test
mov
push
pop
js
pop
inc
sub
or
iret
mov
dec
cwtl
mov
mov
es
outsl
pop
call
fst
or
popf
sub
outsl
ret
lea
xchg
stos
aad
movsl
pop
cmp
sbb
int
pop
adc
dec
mov
cmpsl
xchg
mov
dec
xor
jg
mov
xor
xor
repz
movsb
xor
sub
pushf
aad
scas
lret
std
jle
or
popa
add
pop
inc
fs
xor
lcall
adcl
sbb
or
idivl
mov
out
shl
bound
or
fwait
push
lea
cmpl
loope,pt
leave
mov
cmc
pop
mov
jnp
cs
mov
loop
jecxz
lods
sub
shr
add
sbb
cmc
lds
pop
mov
shrb
pop
out
dec
mov
jg
pop
fidivrs
add
or
inc
push
add
adc
es
aas
cmp
add
outsl
add
sub
imul
pop
sbb
addr16
in
mov
mov
sub
rcll
into
add
fldcw
push
xor
jns
rcrl
gs
ja
add
pushf
push
mov
inc
ja
fildll
fs
ljmp
or
cmc
mov
xchg
aam
sub
movsl
out
xchg
mov
mov
dec
cmp
mov
xlat
cmp
inc
jns
mov
lret
stc
cmp
gs
ss
stc
dec
push
loopne
xchg
adc
enter
cs
and
loope
or
adc
nop
fcoms
mov
sarb
fucomip
ljmp
js
aad
push
test
enter
icebp
stc
cltd
insb
push
xor
leave
mov
pop
nop
repz
stc
ret
fistl
ficoml
loop
idivl
in
je
stos
aam
int
mov
jmp
orl
pop
aam
jbe
in
loopne
int3
and
dec
mov
xor
sub
fs
dec
adc
mov
fdivr
fdivl
pushf
mov
idivl
jle
sub
pop
dec
imul
xchg
les
pusha
movsb
sub
xchg
lahf
out
xor
movsl
sbb
out
adcb
jg
call
test
sub
ljmp
cmp
jl
jae
mov
or
aam
or
shl
int3
sbb
loopne
pop
xor
xchg
les
cmp
sub
aam
and
mov
jnp
movsb
push
loopne
pop
cmp
mov
xchg
pusha
out
or
pop
arpl
add
sbb
cmpl
jbe
push
mov
ja
dec
cs
or
sub
daa
cmpsl
lcall
push
pop
pop
mov
stos
sbb
sub
jo
loopne
iret
lods
mov
ss
adc
push
dec
cwtl
shll
lods
sub
icebp
dec
adc
cmp
daa
into
jo
jle
test
xchg
ret
call
adcb
mov
sub
and
sarl
jo
cli
mov
cwtl
data16
imull
adc
rolb
sbb
push
jl
dec
adc
es
mov
cmp
nop
imul
daa
pusha
gs
sbb
ss
out
out
movsb
and
add
hlt
fwait
lock
aaa
adc
mov
lret
imul
pusha
jle
or
sbb
sbb
mov
fisttps
loope
ret
add
movsb
jmp
mov
movsl
xchg
add
xchg
ljmp
fcmovb
mov
jae
pusha
mov
xor
sbb
adc
and
mov
jns
pop
dec
imul
push
in
in
movsl
mov
cmp
lds
mov
ficompl
lds
xchg
std
mov
and
movl
or
cs
or
ja
xor
mov
and
xchg
and
add
mov
sub
jae
adc
fisubl
mov
add
mov
pop
mov
cltd
sti
and
pop
push
fidivs
jbe
adc
push
out
mov
xor
pushf
sarl
cwtl
out
or
mov
test
push
into
cmp
or
mov
imul
inc
or
xchg
jae
dec
bswap
add
push
xchg
shll
jae
add
es
mov
out
fistpl
mov
out
test
fwait
or
hlt
sub
daa
jne
xor
ljmp
xor
push
lret
mov
stc
inc
mov
xchg
pop
xlat
cmp
movsl
add
mov
int3
adc
mov
or
mov
aam
mov
shrb
mov
mov
stos
pushf
fadds
pusha
jp
lea
and
jae
out
in
pop
sbb
mov
bound
outsb
mov
cmc
out
push
fsts
mov
pop
shl
cmpsl
in
aad
int
cs
lret
pop
xchg
xchg
lcall
dec
pop
popa
pop
out
std
aaa
repnz
pushf
or
sbb
mov
xor
in
les
cmp
adcb
inc
scas
push
lock
stc
xchg
sti
fildll
adc
or
xlat
xor
paddusb
setbe
cs
jns
insl
or
outsb
or
movsl
xchg
outsb
shrb
pusha
ja,pn
push
jmp
push
push
cmpsb
xlat
mov
push
loope
scas
sub
lret
fs
sub
and
scas
xchg
mov
fwait
inc
ret
mov
push
jae
pop
pop
mov
pop
jae
rcrb
pop
or
into
arpl
mov
jecxz
mov
pusha
push
fsubrl
dec
xchg
pop
cmpsl
xchg
mov
pop
scas
cmp
jge
adc
mov
xor
add
in
inc
call
dec
add
into
xor
jo
and
ja
jne
and
pop
sub
mov
lcall
sbb
inc
xor
loop
mov
loope
jne
xor
mov
sbbb
mov
pusha
sub
pop
fs
negb
adc
ja
sbb
mov
call
adc
sbb
rcl
pop
int
lcall
mov
aad
aaa
jmp
jne
mov
or
sub
xchg
dec
mov
insl
imul
push
jge
adc
sub
decb
lret
test
fidivs
cmpsb
shrb
xor
or
or
nop
test
dec
pop
mov
into
mov
cli
cmp
lret
lret
ret
push
xor
loop
xor
lahf
neg
and
dec
push
int
lods
jecxz
bound
fimuls
and
pop
jg
rclb
mov
sbb
mov
mov
cs
sbb
xchg
pusha
repnz
xchg
iret
xlat
psrlw
sahf
lock
pop
icebp
jg
pop
add
xor
rorb
hlt
xchg
insb
fists
xlat
popa
roll
lds
mov
cmp
fdivrl
adc
push
xchg
and
push
inc
sub
clc
divb
insb
dec
mov
in
scas
xchg
nop
pop
sbb
dec
cmpsb
mov
fimuls
xlat
xor
gs
stos
or
repz
mov
dec
mov
or
adc
jne
jns
xorb
push
inc
adc
pshufw
mov
ror
sti
xchg
lds
test
mov
xchg
data16
iret
xor
clc
roll
stos
jne
std
pop
add
shrl
sarb
roll
jp
orb
in
stos
fwait
nop
ret
call
push
sbb
jge
inc
test
jb
adc
or
outsl
dec
and
sbb
lret
jae
and
sbb
jae
mov
in
cmpb
sti
das
cmp
scas
jecxz
lods
mov
aam
sub
out
and
pop
dec
imul
or
addr16
repnz
les
cwtl
dec
ds
jg
jnp
ja
pop
mov
jo
dec
cmpl
jae
xor
lods
ja
loopne
or
ret
push
rcrl
cmp
into
cli
jns
adc
dec
mov
mov
inc
ljmp
jns
jecxz
movsb
loopne
sub
fcomps
add
dec
pop
jl
inc
cmp
push
cmpsl
xor
sar
mov
les
pop
mov
rcll
imul
in
jnp
jb
std
lahf
mov
cmp
loope
cmp
out
insl
adc
gs
sub
inc
jl
addr16
fisubs
mov
mov
xchg
inc
jne
xor
sub
xor
cmp
or
repz
xor
js
stc
dec
push
inc
cmpsb
stos
push
mov
lret
imul
leave
jb
ljmp
cli
in
mov
cmp
aam
mov
lock
lcall
mov
dec
cwtl
jae
imul
mov
jns
push
decw
mov
imul
cmp
jle
shr
push
or
out
test
movsb
arpl
subb
sub
pop
push
pcmpgtb
jp
lahf
cli
sub
adc
loop
push
in
stc
scas
add
cmp
sub
ljmp
push
add
lds
popa
test
cmpsb
repnz
cmpsb
mov
and
lret
das
fs
mov
or
sbb
mov
fmull
push
sbb
xchg
cmp
pop
sub
push
popa
imull
movb
mov
mov
xchg
popa
cmp
ret
xchg
xor
dec
push
rcrl
sbbl
sti
mov
jg
inc
mov
bound
mov
pop
gs
cld
es
daa
or
sbb
sub
xchg
pop
xchg
pusha
lock
cmp
mov
stos
xchg
push
adc
aas
scas
cmp
out
lods
sarl
push
hlt
mov
and
call
fcmovbe
mov
pusha
and
jg
testb
push
jnp
pusha
fwait
mov
cmp
add
in
fidivs
lock
insb
insl
inc
add
add
scas
cmp
jae
inc
mov
add
jp
roll
testb
lea
xor
lahf
sub
lcall
xor
rcrb
add
in
movsl
pushf
movsl
insl
mov
clc
mov
inc
cli
sub
das
add
and
aam
or
push
jae
leave
pop
fisttps
xor
lods
and
test
or
lahf
jl
int
and
loopne
sbb
mov
out
fists
jnp
pop
jnp
sub
mov
push
rol
jns
add
mov
jg
pop
ret
out
xchg
push
inc
mov
imul
rcl
mov
push
pop
push
lock
fimuls
cmc
lcall
xchg
push
sahf
ret
jge
pop
push
fiadds
call
sbb
lock
fdivrp
add
sar
pop
sub
cs
aaa
lods
push
mov
add
ds
mov
inc
gs
bound
loop
adc
xlat
stos
mov
xchg
pop
xor
in
jecxz
push
inc
flds
imul
iret
fwait
js
sub
adc
cmc
push
nop
cmp
adc
mov
hlt
mov
mulb
shrb
pop
out
mov
lods
mov
dec
pop
mov
icebp
adc
add
cwtl
orl
push
cmpsb
shlb
push
repz
call
jbe
sub
push
insb
jno
ss
inc
mov
add
mov
popf
and
xchg
nop
in
cmpsb
jbe
ss
sub
icebp
iret
or
lock
das
sti
pop
xchg
xadd
sub
icebp
xor
ret
adc
mov
enter
sbb
fwait
sub
dec
ret
adc
sub
adc
popa
adc
icebp
or
jns
cld
push
cmp
xchg
inc
xlat
add
fsubs
dec
and
xchg
pusha
sub
shrb
xchg
jg
and
mulb
mov
cmp
inc
leave
jns
movsb
mov
cmpsl
push
pop
clc
inc
and
lahf
js
fs
push
lea
repnz
jbe
mov
jbe
pusha
das
mov
lods
int
popf
xlat
rcr
pop
jge
hlt
in
sub
inc
push
pop
sub
aam
call
mov
ss
xchg
sti
mov
sub
and
cmp
add
outsb
inc
sbb
es
inc
daa
push
jecxz
out
movsl
push
push
and
jmp
fmuls
inc
cmp
popf
nop
xor
int
cmc
mov
xchg
inc
lods
dec
cld
ret
mov
sbb
out
add
icebp
mov
jnp
hlt
sbbb
push
insl
mov
mov
out
enter
cmp
scas
mov
mov
xchg
or
lods
dec
dec
loopne
dec
jle
jne
lds
pop
enter
int3
adc
sub
pop
mov
lret
vunpckhps
mov
pusha
mov
fcoms
inc
and
sbb
push
data16
fwait
les
jae
cmpsl
xchg
std
dec
jbe
push
int3
jno
lods
inc
imul
pop
inc
lret
in
fsubrl
mov
int3
jge
movsl
add
test
mov
fwait
xor
dec
mov
mov
mov
adc
push
cld
sahf
xlat
insb
test
mov
mov
mov
mov
mov
stos
out
scas
int3
xor
cli
in
mov
stos
test
and
cwtl
mov
daa
fnstcw
or
or
lods
mov
jno
push
outsb
push
mov
jecxz
aad
shll
dec
insl
std
into
mulb
adc
in
fldcw
xchg
scas
dec
inc
sub
sahf
les
add
dec
lret
adc
outsl
xor
mov
pop
ret
iret
ljmp
xchg
mov
cld
repz
add
movsb
inc
jl
nop
je
xchg
das
pop
jbe
not
gs
push
shlb
jns
out
push
mov
pop
test
mov
pop
aad
or
das
jbe
shll
xchg
lods
vmread
mov
inc
hlt
cmp
call
std
sbb
or
push
out
xor
cmc
daa
stos
ljmp
mov
dec
jne
sbb
jmp
jp
test
cmp
jle
push
mov
adc
push
stos
pop
sbb
and
bound
lods
daa
call
xchg
adc
cld
sbb
dec
and
enter
mov
enter
jg
pop
cmp
sahf
push
sub
jecxz
xor
and
insl
sub
xorb
popa
ljmp
fsubrs
sahf
clc
imul
dec
stos
mov
sbb
lock
pop
mov
xor
adc
adc
jecxz
xchg
cmp
mov
xchg
or
pop
mov
enter
push
inc
iret
inc
jle
add
popa
adc
inc
xchg
or
jp
push
scas
lods
xor
leave
mov
push
adc
sbb
test
lods
ret
lock
push
sahf
out
mov
aas
aam
mov
scas
inc
fdivl
cmp
jo
jae
mov
jl
mov
out
fnsave
add
sub
add
pop
fsubrs
iret
jns
mov
add
in
jo
and
std
fldcw
mov
add
mov
aaa
mov
lret
jge
jmp
jl
loopne
roll
ficomps
popa
int3
sub
icebp
clc
scas
mov
mov
ret
scas
je
and
jp
bound
imul
adc
adc
xchg
scas
sti
sub
or
mov
vpsubb
mov
aaa
add
mov
paddusb
rcl
rcll
pop
pop
xchg
int
ja
add
xor
xchg
mov
mov
sub
or
push
hlt
fs
mov
jbe
lods
mov
inc
filds
cmc
dec
and
jle
inc
cwtl
insb
mov
movsl
mov
xor
pop
cltd
loop
inc
sub
jno
pop
sarb
push
repz
in
mov
pop
in
das
cmp
dec
loope
fiaddl
xor
or
xlat
lahf
xchg
mov
ljmp
fisubrs
gs
xorb
sbb
test
jl
and
leave
and
and
jno
and
movsb
cli
loope
adc
push
dec
pop
cmpb
mov
push
xchg
std
cli
xor
bound
sarb
mov
cmc
jmp
mov
pop
insb
jbe
sete
call
xchg
sub
mov
arpl
adc
inc
sbb
shr
sbb
sub
add
aam
xchg
and
roll
fwait
or
fbstp
add
jb
pop
pop
mov
popl
xchg
stos
add
mov
cmp
push
movsl
shlb
in
stc
lods
mov
insl
pop
dec
xor
jne
bound
enter
movsb
cmp
push
inc
lods
insb
dec
lahf
pop
aas
push
out
pop
test
push
out
rorl
gs
push
fiaddl
sub
sub
gs
pop
outsl
dec
jecxz
fisttpll
add
add
movsb
dec
inc
or
adcb
pop
adc
inc
hlt
and
mov
jp
lea
mov
xor
std
and
nop
jmp
cmp
rcll
sub
int3
mov
cmp
stc
add
xchg
mov
push
gs
or
outsb
push
daa
sbb
fstpt
shl
fdivrl
lahf
xchg
lahf
sub
cld
lods
push
jb
icebp
lret
imul
and
ret
fs
inc
xchg
xchg
test
je
stos
mov
outsl
push
sbb
push
out
jae
jp
icebp
ja
rcrb
dec
cmp
cmp
mov
clc
fmul
cmp
push
test
cltd
add
shll
or
out
adc
cmp
pusha
scas
fiadds
andb
loope
add
aaa
je
outsl
ret
inc
dec
imul
push
shrb
dec
jp
test
fildll
and
test
lock
add
outsb
mov
pushf
stos
imull
das
in
pop
mov
jne
loopne
sbb
lcall
pop
xchg
mov
outsl
xchg
cld
cltd
dec
add
scas
sub
jnp
mov
mov
popa
add
test
test
or
lods
mov
pop
repnz
add
jg
sbb
lods
xchg
or
aas
cmp
sbb
clc
imul
lahf
insb
dec
mov
fisubs
mov
outsb
xchg
out
or
xchg
mov
xor
loopne
jns
sub
push
in
gs
mov
pop
cmp
cld
sbb
femms
mov
ret
xchg
mov
xchg
pop
mov
xchg
cmpsb
mov
inc
cmp
insl
sub
fwait
and
jmp
sub
adc
inc
das
xor
xlat
in
ret
or
int3
arpl
and
add
ficompl
cs
dec
inc
mov
int
mov
jp
or
insl
mov
popf
adc
jns
cmp
dec
imul
and
push
icebp
mov
push
sub
dec
bound
push
jo
ds
sti
out
mov
mov
mov
adc
mov
and
push
pop
loopne
push
xchg
sahf
dec
fcomi
dec
dec
mov
mov
shrb
or
xor
and
adc
ljmp
mov
adc
sbbl
roll
sar
adc
icebp
mov
shl
xor
addr16
or
aad
test
pushl
dec
es
push
cs
aad
ljmp
add
or
mov
and
jns
inc
mov
repz
loope
out
or
mov
mov
cmp
mov
repz
xchg
lret
push
cmp
or
fadd
and
inc
test
rclb
insb
je
lret
rol
rcrl
pop
and
or
mov
mov
mov
pop
xchg
jbe
out
and
push
loope
xchg
mov
cmp
xchg
pop
jge
call
das
shrl
movsl
add
dec
add
jge
scas
sbb
cli
push
stc
cmpsb
xor
es
jmp
je
lods
mov
xchg
mov
add
rorl
lret
in
cmp
subl
cli
clc
cmp
pop
inc
push
test
pop
or
or
add
dec
sub
out
js
sub
add
sbb
xor
mov
and
pop
inc
mov
xor
rclb
and
test
out
add
or
aas
push
pop
out
lahf
in
movsb
sti
mov
xchg
xor
hlt
jp
aas
add
sbb
rorl
or
scas
addl
push
test
cmp
push
mov
cmp
ret
pop
js
fcompl
xchg
sbb
add
push
ja
xor
fsubs
stc
out
mov
inc
mov
fbstp
fdivl
int3
xlat
xchg
mov
test
cmp
into
mov
in
fwait
xchg
inc
jecxz
cli
xchg
hlt
cli
sahf
push
dec
notb
fbld
mov
lods
or
stos
fnstenv
fwait
or
mov
mov
sbb
mov
lret
fcomps
movsb
cmp
movsb
gs
aas
scas
xor
dec
cmc
fbld
pop
pusha
lahf
lods
fstpt
lcall
pop
pop
subl
aad
sub
hlt
mov
mov
push
jo
sbb
cmp
in
add
inc
and
push
push
fmuls
setnp
xchg
int
jg
sbb
adc
mov
dec
ss
sub
stos
shrl
int3
insl
hlt
add
call
sbb
adc
in
and
frstor
out
xlat
gs
fs
ficoms
and
arpl
andb
lock
test
mov
fnsave
mov
int3
xlat
fsubs
dec
pop
out
inc
sub
hlt
mov
lret
std
sti
pop
adc
stos
mov
xor
out
cli
pop
pusha
jmp
lret
push
mov
push
inc
out
and
inc
sbb
or
dec
push
add
cmp
push
sahf
pop
stc
cmp
push
pushf
cs
push
or
jge
pushf
mov
mov
xchg
or
and
sti
lock
mov
mov
notl
jno
addr16
inc
or
dec
outsl
in
jo
inc
pushf
loope
out
lods
lahf
sbb
mov
xchg
movsl
scas
push
dec
xor
outsl
filds
xchg
and
mov
int
fisubrl
push
inc
popa
cmp
movsb
cli
jecxz
cmpsl
push
sbbb
lods
xor
xlat
cmp
mov
dec
andb
xor
iret
es
test
sbb
pushf
fidivrl
insb
pop
push
std
or
sarl
sbb
pop
cld
es
lret
out
aaa
in
cmp
mov
ljmp
sbb
je
fistpll
mov
mov
fwait
leave
movl
push
in
insb
inc
je
mov
adc
and
sbb
mov
lock
mov
or
arpl
jp
adc
inc
daa
ret
fcoml
shl
es
clc
in
outsb
pop
push
test
pop
insb
rclb
in
sbb
push
jmp
push
test
shld
xor
and
pop
mov
or
mov
sub
cltd
mov
sub
les
rcr
scas
cmp
cmc
or
mov
cwtl
mov
out
cmp
xchg
mov
shrl
xchg
mov
call
sbb
xchg
arpl
addr16
cmp
adc
fcoml
cltd
popf
xor
and
jno
or
neg
fimuls
imul
repz
addr16
bound
sub
inc
pusha
ds
js
dec
out
aad
repnz
xchg
int
loopne
mov
sbb
mov
arpl
call
xchg
mov
cwtl
iret
push
jno
jecxz
xor
sub
lock
sbb
push
jae
lods
orl
add
inc
pop
add
into
testb
adc
mov
sbb
insb
push
repnz
gs
pusha
xchg
push
xchg
shl
movl
in
jno
int
adc
adc
jbe
jmp
inc
sarl
inc
xor
jg
and
xchg
add
rorb
mov
es
mov
xchg
xchg
scas
sub
push
aas
fnstcw
ret
pop
fcomp
pop
push
adc
jne
test
dec
dec
add
and
cmp
shlb
xor
shlb
mov
fsts
addr16
or
dec
dec
stos
out
sub
jo
push
ljmp
ret
inc
lahf
in
pop
sub
xor
mov
sub
cmp
scas
sbb
insb
push
dec
mov
and
stos
dec
mov
lds
lock
pop
inc
outsl
enter
bound
mov
sbb
or
xlat
mov
dec
imul
xchg
subl
push
xchg
stc
fdivl
shrl
mov
push
loopne
jmp
mov
cmp
into
sub
xor
or
jno
je
pop
idivl
rolb
out
test
mov
sub
xor
hlt
sub
call
jge
jp
xchg
dec
aaa
scas
xor
test
movsl
pop
je
adc
fisttpll
insl
daa
call
mov
jnp
fsubr
icebp
jmp
jle
shrb
outsl
and
lea
sbb
pop
and
outsb
xchg
mov
and
add
dec
jnp
adc
push
ljmp
fcomp
test
clc
adc
jge
mov
movsl
sub
imul
push
lds
and
mov
enter
lret
xchg
push
jb
call
je
insl
jbe
loopne
cmpsl
or
sbb
pop
stos
jbe
sti
jge
fwait
dec
jnp
iret
in
lret
cmpsl
subb
popf
dec
fcoms
jecxz
pushf
xchg
mov
mov
xor
mov
in
pop
mov
fisttps
push
mov
pop
cmp
call
mov
dec
jge
mov
insb
adc
push
loope
dec
cmc
popa
mov
out
mov
pop
test
pop
mov
lods
cld
jbe
mov
adc
in
dec
xchg
and
packsswb
shl
lds
or
out
fs
lcall
les
in
fwait
dec
mov
add
sbb
in
mov
fldl2t
inc
mov
adc
sbb
insb
rorb
lods
adc
jle
mov
dec
imul
hlt
pushf
in
push
adc
lea
push
jnp
fstps
pop
movsb
sub
mov
cltd
imul
out
aam
dec
mov
insb
cmp
nop
mov
dec
sbb
in
test
jecxz
rorl
faddp
in
sbb
sub
filds
pop
mov
addr16
cmp
outsb
pop
popf
mov
xlat
xor
sti
movsb
dec
inc
or
outsl
roll
push
mov
mov
push
cld
lock
pop
or
adc
add
scas
xchg
and
adc
push
xor
pop
inc
jg
shll
xchg
mov
cmp
scas
out
movsb
out
cmpsb
stos
cmpxchg
dec
and
cmc
inc
mov
push
dec
inc
and
enter
adc
xor
inc
push
addr16
and
adc
pop
mov
and
das
fsubs
pop
add
jecxz
pop
xor
sti
stos
xor
xchg
lahf
mov
repz
loopne
popf
bound
rolb
push
mov
pop
sbb
subl
in
aam
les
ds
add
ret
jb
sbb
subl
xorb
mov
call
and
pop
dec
inc
out
push
sub
mov
enter
jg
movsb
adc
imul
mov
pop
jmp
cmp
add
jl
repz
pop
lcall
mov
jl
jl
mov
xorl
adc
push
inc
add
xor
inc
pop
cmp
rorb
adc
pushf
shlb
ja
rol
xlat
cmpsb
int3
push
adc
jle
subb
loop
sub
xor
mov
sbb
out
out
pushf
testl
mov
dec
inc
jo
jnp
nop
sub
std
jecxz
fiaddl
or
sbb
sbb
pop
sbb
cmpsl
mov
dec
mov
lea
xchg
xchg
idiv
fnstsw
dec
fsubp
std
mov
int
rorb
xchg
xchg
clc
lods
and
cmpsl
shlb
fisubrl
inc
gs
incb
sbb
outsb
mov
push
pop
push
fincstp
cmpsb
mov
jmp
andb
add
cmc
movsb
and
lahf
mov
aaa
loopne
push
xchg
popf
fisubl
mov
push
sub
add
movsl
repnz
loope
inc
in
sub
adc
jae
scas
and
test
cmp
adc
movsl
mov
lea
push
mov
loop
in
mov
rcrl
in
jnp
jo
push
arpl
filds
pushf
and
mov
subb
jl
add
pop
test
imul
fwait
cmc
push
or
inc
stc
sti
jne
sub
fistpll
jno
repnz
jle
push
test
push
dec
fadds
ret
and
xor
xchg
test
jnp
adc
xor
dec
test
pop
or
mov
mov
mov
loop
jge
cmp
and
push
lds
push
testl
and
mov
jns
pop
lock
push
aam
out
cwtl
repz
push
dec
pop
out
mov
out
fscale
jo
lock
xchg
push
sbb
aad
test
popf
cli
xchg
cld
jg
leave
push
or
fmull
bound
repnz
and
or
out
cmp
jge
cmpsl
inc
adc
inc
out
aam
cs
inc
stos
dec
rcrl
pop
fcoml
dec
xor
push
rcrl
insl
xor
xchg
add
xor
loopne
cmpb
push
cltd
inc
pop
lahf
outsl
xor
and
outsb
mov
shll
out
mov
mov
cmpsb
ljmp
sbb
mov
inc
dec
mov
jbe
sahf
sti
fistl
movsl
mov
add
stos
int
sub
les
stc
aam
fsubl
xor
fcoms
xchg
sbb
ja
and
stos
std
test
xor
daa
or
mov
call
inc
lcall
sbb
insb
and
mov
fiadds
add
outsb
xor
loop
mov
sub
call
or
test
aas
gs
daa
mov
and
dec
adc
ljmp
pop
or
test
dec
into
push
inc
ljmp
cmp
pop
mov
cltd
mov
mov
jns
ja
sub
xchg
add
jge
shrl
fwait
lods
adc
adc
scas
pop
stos
and
stos
jge
repnz
or
jl
pop
je
cmp
es
mov
or
or
sarl
jecxz
sub
out
pop
aad
pushl
pop
sbb
roll
pop
mov
pushf
cs
enter
mov
mov
inc
adc
push
and
enter
mov
stc
rorl
dec
iret
pusha
inc
pop
mov
push
fiadds
out
nop
cmp
inc
push
sarb
jno
pop
push
xor
fwait
arpl
ficomps
nop
scas
mov
pop
insl
popa
sbb
mov
aam
lcall
jl
fisubrl
sub
xchg
jle
xchg
aaa
inc
jge
lret
bound
cs
lcall
push
insb
jb
stos
test
add
lret
cmp
out
or
jecxz
adc
stos
pop
ficomps
jb
push
or
shrb
ret
mov
add
loopne
sbb
ss
gs
mov
insb
mov
mov
ret
movsl
outsl
outsl
add
inc
cmp
push
imul
ret
sub
add
sbb
jo
sub
ret
out
jp
cmpsb
rolb
rcl
or
outsb
pop
in
xchg
lret
arpl
ss
mov
enter
scas
mov
mov
sbb
pop
xchg
push
pop
test
xor
jecxz
sub
daa
repnz
lret
dec
loop
aad
dec
mov
decb
fidivs
mov
dec
lahf
push
pop
test
icebp
xor
xchg
mov
int3
mov
test
xor
out
cld
mov
sbb
adc
xchg
xlat
sub
pop
mov
pop
out
mov
sub
bound
imul
ss
add
mov
add
mov
stos
popl
int3
add
jecxz
and
fwait
jge
mov
adc
jecxz
out
xchg
fdivl
push
rcrb
lods
xor
aaa
or
mov
popf
xchg
pop
push
loop
or
mov
lahf
into
dec
push
addr16
inc
outsl
icebp
push
fidivs
in
inc
inc
pop
fisttpll
das
pusha
cwtl
pusha
je
xchg
ret
cmp
lahf
das
popa
cmc
stos
lret
sub
arpl
ja
pop
mov
addl
adc
pop
dec
adc
notl
jne
pushf
push
inc
cmpl
pusha
xor
jp
add
das
jae
cmpsb
or
into
ljmp
mov
dec
daa
adc
or
loopne
fnstcw
mov
sbbl
lcall
adc
adc
pop
mov
pop
jbe
cmpsl
push
int3
adc
sbbl
inc
push
movsl
jg
jbe
jns
lods
in
pop
movsb
mov
push
dec
inc
clc
add
stc
out
jmp
jg
aad
mov
aas
inc
or
fwait
sbb
je
jl
nop
hlt
mov
outsb
push
inc
clc
scas
jg
cmp
xchg
sbbb
push
push
iret
lods
mov
pop
and
lods
pop
cmp
dec
xchg
inc
jmp
push
inc
fstpt
sub
jne
sub
out
xor
aad
insb
sarl
lods
dec
pop
cmp
rcrb
aaa
xchg
mov
cmpsl
lret
mov
mov
xchg
movsl
out
test
frstor
ja
mov
test
aas
dec
aam
xchg
or
adc
push
stos
and
test
popa
pop
outsb
lret
ret
push
mov
test
loop
pop
in
hlt
out
xor
clc
mov
jne
xchg
sub
mov
xor
fnstcw
dec
mov
pushf
dec
push
imul
pop
out
mov
aam
in
fsubrp
mov
mov
sbb
call
mov
pop
xor
clc
out
shlb
sarl
push
cwtl
dec
scas
and
mov
test
sti
or
mov
hlt
ret
je
dec
sub
mov
add
xor
push
sbb
test
sbbb
and
jnp
xchg
fsubr
sti
xor
pop
stos
xorb
mov
jo
xchg
push
testl
in
lretw
jle
arpl
out
jne
sbb
dec
dec
enter
dec
push
cmp
xchg
lods
push
xorb
dec
call
cmp
inc
push
xchg
fstps
outsb
cmpsl
ja
inc
cld
bound
cmp
movsb
imul
pushf
lret
jge
in
fildl
cmpsb
pop
fcmovne
jge
hlt
mov
mov
or
xor
sahf
mov
lret
inc
mov
cmp
insb
loop
cltd
xchg
test
je
fnstsw
jnp
jae
pushf
add
mov
xchg
fidivl
dec
and
pop
shll
pusha
pop
jmp
pop
sbb
repnz
test
movsb
orl
mov
dec
aam
xor
in
add
insb
jno
and
adc
mov
aad
mov
rcl
pop
or
and
ljmp
insb
inc
outsb
shlb
xchg
repz
inc
dec
fwait
test
jbe
sub
fisttpll
dec
adc
sub
repz
shrb
sub
fisubrs
jge
cmp
or
pushf
insb
push
sbb
addr16
lock
mov
fisttps
mov
lcall
lret
push
loopne
loop
and
ret
or
pop
jo
xchg
jecxz
pop
mov
pushf
xlat
xorl
jmp
sub
stc
jge
nop
jbe
in
and
mov
stc
jae
xchg
int
mov
sub
jp
test
movsl
clc
jae
mov
and
fs
out
shl
call
mov
push
push
test
xor
inc
ficoml
int
and
xchg
mov
and
fwait
inc
fisubrl
cli
push
mov
cmp
shlb
ljmp
dec
int3
loopne
inc
sub
imul
in
pop
addr16
or
xlat
xlat
xor
adc
jge
stos
jmp
inc
repnz
testl
idiv
js
mov
sub
arpl
or
das
inc
xchg
test
pop
dec
push
push
call
inc
and
adc
in
mov
mov
mov
and
dec
ds
sbb
addr16
int
pop
out
sub
ja
enter
stos
push
leave
sbb
ret
mov
sub
cmp
loope
add
add
add
and
imul
popl
push
shrb
mov
inc
pop
xor
mov
test
xchg
mov
test
pop
lret
dec
insb
fimull
mov
xchg
xchg
xor
sbb
jge
mov
add
jmp
cld
sub
mov
pop
in
sahf
int
int3
fistps
mov
and
push
mov
stos
cs
std
pop
jne
cmp
mov
xchg
mov
xor
jb,pn
xchg
mov
bound
cwtl
dec
mov
xor
repnz
stos
cmp
add
loop
mov
test
test
jns
mov
into
sbb
pop
cmp
xchg
jmp
shll
xor
repz
imull
mov
out
xchg
mov
cmpsl
scas
or
outsl
sahf
int
cmpsl
xor
in
mov
les
nop
inc
cs
scas
ret
add
icebp
cmpsl
clc
mov
dec
cmpsl
mov
adc
and
xchg
xor
cwtl
inc
mov
adc
sub
inc
add
es
cmc
xchg
in
shlb
mov
mov
lods
in
sti
movsb
rolb
xchg
fwait
das
ds
mov
subb
and
ja
xchg
ljmp
mov
cmp
out
call
pop
xchg
test
enter
push
hlt
push
mov
aas
mov
dec
xchg
in
aas
mov
or
sahf
adcl
xor
xchg
jo
test
mov
mov
push
negl
push
testl
arpl
mov
addl
mov
and
or
aaa
outsl
jno
or
add
push
sub
add
stos
int3
cli
lods
add
mov
test
dec
cwtl
stos
fldenv
jae
out
mov
cld
fiaddl
jbe
jns
add
push
loope
sub
add
hlt
aam
xor
fadd
pop
push
adc
or
in
arpl
test
xchg
out
and
add
fs
inc
xor
sub
sbb
loop
mov
and
mov
mov
add
mov
shrb
fiaddl
mov
fwait
lock
push
ss
xchg
cs
or
addl
push
fadds
les
orb
add
xchg
out
mov
add
popf
xor
cld
dec
loope
sub
push
xor
jle
daa
xor
enter
lock
mov
jbe
cmpsb
in
adc
add
movsb
cmp
shll
cmp
imul
pop
lds
incb
in
sub
xchg
lods
mov
les
pop
add
xchg
push
test
test
fwait
jp
inc
insb
cmp
outsb
pop
in
xchg
inc
shlb
lods
pop
in
data16
stos
adc
aam
inc
jge
mov
sub
test
rcll
sub
faddl
sub
fwait
jmp
push
aad
jne
mov
in
popf
scas
repnz
ss
loopne
test
rol
xor
pushf
push
outsb
fstl
or
jge
lds
push
adc
dec
std
add
jnp
jne
cmpsb
sub
add
aaa
push
mov
fcmovb
test
fld
js
push
adc
mov
arpl
inc
in
repz
cmp
mov
inc
nop
movsl
sub
sbb
jge
shrl
mov
mul
lahf
push
dec
imul
enter
sahf
jo
ficomps
loop
mov
mov
push
mov
andb
or
in
es
out
ds
jae
pop
clc
cmp
push
xchg
fiaddl
mov
adc
pop
rcpps
mov
cmp
xlat
lret
insb
add
push
cmp
scas
rclb
gs
xorb
notl
js
daa
jns
sub
out
cld
movsb
jb
push
popa
inc
nop
ret
sub
in
loop
jg
dec
and
fnsave
mov
out
les
xchg
jmp
dec
ficompl
jge
dec
jle
inc
aaa
adc
push
cmp
out
sbb
pop
aad
bound
fstl
jp
adc
sahf
addr16
pop
or
mov
xchg
icebp
mov
mov
dec
dec
adc
push
aaa
xor
test
mov
test
popa
mov
mov
sbb
dec
bound
icebp
je
mov
xor
shll
mov
xchg
shll
imull
jo
xor
push
inc
xchg
cmpsb
shrl
dec
jmp
dec
lea
pop
mov
aam
cmp
adc
enter
inc
dec
mov
xchg
inc
cld
addb
std
jl
fstps
mov
js
clc
cmp
mov
add
mov
sahf
cmp
pop
fldl
push
xchg
jecxz
and
jnp
enter
xor
pop
test
xor
lret
and
mov
mov
sub
and
xchg
orl
or
lret
adc
ljmp
mov
xchg
out
adc
lret
cmp
mov
push
and
cld
std
fbld
mov
movsl
enter
or
pop
test
insb
das
aam
and
fsub
pop
cmp
ret
add
gs
cmp
and
mov
popa
lret
int
mov
dec
xor
fisttps
adc
push
pop
mov
push
add
mov
jecxz
je
jecxz
mov
mov
xchg
inc
lds
or
out
cmp
shll
push
loopne
popf
mov
in
js
inc
mov
dec
push
test
insb
and
pop
shl
dec
sbb
mov
or
inc
ret
jle
cmc
jl
lea
pop
repnz
dec
adc
imul
and
fwait
mov
sbb
js
push
scas
scas
inc
adc
or
mov
pop
push
in
outsl
mov
aas
jb
aas
pop
call
inc
hlt
cmpsl
ds
xchg
push
stos
outsl
fcomp
out
mov
popa
hlt
psubsw
mov
dec
mov
pop
cs
fimull
cmp
stos
fdivl
inc
leave
mov
lods
sub
and
xor
jp
xorb
push
pop
cmc
sbb
leave
or
pushf
mov
fcomi
inc
call
add
cmc
or
jb
popf
mov
push
xchg
xor
test
stc
ds
xor
cmp
aas
ljmp
insb
cli
xchg
jmp
das
jo
jns
mov
addps
stos
dec
xor
aas
inc
xchg
add
outsl
xchg
fsubl
repz
mov
movsl
adc
and
popf
sub
fidivs
jno
sti
inc
imul
or
mov
pusha
mov
dec
aas
xor
in
sbb
ss
xchg
in
jge
out
dec
adc
fbstp
and
jne
and
mov
scas
dec
dec
mov
lret
push
mov
cli
lcall
push
in
fwait
sbb
pushf
and
inc
outsl
rorb
test
call
bound
sbb
push
mov
sub
sub
sbb
sbb
inc
lods
xor
pop
imulb
fcoml
test
sbb
fs
jno
sbb
out
test
inc
ljmp
mov
and
inc
pop
popa
mov
add
cld
pusha
sub
daa
push
outsb
out
addr16
jecxz
mov
jo
jnp
sbb
roll
cmc
movsl
mov
leave
std
out
xchg
sub
popf
add
adc
cld
cmp
into
add
xorl
and
jecxz
jns
insb
mov
cltd
cwtl
push
ss
jo
sub
inc
and
and
mov
stc
add
mov
lahf
pushf
in
dec
xchg
outsb
pop
int3
xchg
lods
out
les
xchg
jp
lret
test
popf
pop
xchg
scas
pop
inc
add
sub
or
push
fstpl
test
ja
inc
mov
mov
dec
sbb
inc
sahf
ds
adc
stos
loope
arpl
js
dec
in
addr16
mov
ds
es
pop
mov
imul
hlt
rorl
inc
mov
jnp
pop
cmp
push
jecxz
stos
ljmp
pop
jmp
push
repz
dec
pop
inc
sub
xlat
mov
pop
test
sahf
mov
icebp
inc
add
aaa
gs
xor
xchg
rolb
out
mov
rolb
stos
shrl
sbb
es
bound
fmull
outsl
shll
pusha
bswap
or
out
mov
aas
push
je
pop
das
adc
mov
lret
mov
pop
ficompl
mov
cmp
dec
dec
mov
cmc
mov
cmp
std
shrl
jns
int3
ror
cmp
or
adc
test
sub
inc
daa
lds
aam
adc
pop
mov
inc
sti
stc
mov
iret
pop
insb
pop
sub
sbb
stc
xor
push
mov
dec
xchg
mov
iret
mov
int
jnp
jg
mov
iret
fmul
xor
mov
movsb
je
sub
inc
sti
cs
and
fs
mov
xchg
mov
mov
out
mov
std
cli
or
sub
in
xchg
jne
cmpsl
icebp
shl
scas
fsubr
or
iret
insb
call
popa
jnp
jae
js
rolb
shll
lret
jae
dec
dec
fwait
xor
mov
leave
xchg
scas
inc
adc
sub
inc
rorl
out
arpl
in
out
mov
ret
xor
push
mov
pop
fisubl
mov
ljmp
lock
cld
test
xchg
repz
adc
dec
sbb
mov
aaa
xor
sub
inc
pop
into
pop
mov
sbb
movsl
imul
fildll
enter
out
cmpb
sub
inc
xchg
mov
fsubp
push
lds
stc
in
imul
fbstp
cmp
in
enter
or
adc
insl
lcall
adc
mov
fdivrl
mov
push
cli
push
std
dec
sub
mov
aad
jmp
cld
movsb
add
pop
and
dec
push
mov
loopne
mov
in
jb
das
push
leave
cmp
pop
aam
mov
lfs
jns
dec
or
jge
jge
sbb
into
into
adc
ret
xchg
cmp
pop
lods
xchg
push
sbb
es
mov
cmc
or
xchg
test
lahf
je
xor
dec
mov
and
adc
rcrl
cltd
or
xor
mov
in
fxch
jns
adcb
and
inc
lods
add
dec
les
lea
push
decb
jno
clc
lret
sbb
iret
jge
or
adc
push
or
lahf
push
addl
xchg
push
mov
xor
stc
mov
outsb
sbb
adc
inc
push
push
stc
mov
inc
push
repz
ds
jge
outsb
test
mov
sub
and
dec
pop
xorl
xchg
insb
cmpsb
push
out
and
jle
popa
push
lds
push
mov
incl
jbe
test
sub
jle
push
adc
ljmp
in
pop
enter
clc
jl
dec
adc
sub
or
rdmsr
mov
add
mov
add
imul
out
movsl
movsl
cld
mov
mov
nop
xchg
cmpl
scas
pop
xchg
imul
hlt
sbb
dec
or
scas
nop
jnp
cmp
sub
inc
inc
fs
ret
pop
pop
out
add
mov
movsb
inc
insl
loopne
cmp
in
mov
daa
sub
out
ljmp
or
cmp
adc
stos
fcmovnb
flds
inc
mov
imul
jo
inc
bound
into
out
sub
out
sub
ret
push
dec
dec
cwtl
inc
cwtl
xchg
mov
cmp
push
xchg
out
call
sahf
push
pop
cmp
jno
xor
push
cmpsl
cli
je
xchg
shlb
fsubl
inc
mov
hlt
in
push
subl
mov
aaa
repnz
testl
inc
add
data16
xor
sbb
ret
add
das
pop
push
pop
cltd
dec
mov
pop
clc
outsb
mov
lcall
enter
test
jns
pop
nop
push
mov
xchg
adc
inc
mov
aam
clc
out
dec
pushf
inc
ret
shll
jge
negb
and
jp
xor
pop
sti
xchg
inc
jno
mov
mov
or
cmp
movsl
ljmp
fs
inc
adc
and
pop
js
std
jmp
ljmp
sti
sub
jmp
andl
mov
mov
shrl
in
pusha
and
bound
push
movsl
movsl
jp
or
fsubrl
dec
stos
add
mov
xor
cmpb
add
sub
rolb
mov
sti
push
insl
xchg
testb
xor
pop
sub
test
sar
sbb
adc
mov
push
test
pushl
xchg
pop
notl
popa
shl
rol
daa
movsl
push
push
push
inc
scas
gs
icebp
mov
test
xchg
xor
dec
dec
popa
and
jmp
xchg
loop
and
inc
stos
xchg
addr16
out
iret
fdivrs
pop
pop
aaa
dec
out
fwait
imul
lahf
mov
bound
lds
loopne
xchg
out
and
jno
pop
mov
mov
xchg
inc
mov
cmp
inc
lds
and
jmp
dec
mov
cmp
xor
out
lret
and
imulb
loopne
xchg
outsl
stc
fidivrs
js
dec
xchg
dec
rcrb
insl
mov
pop
adc
data16
pop
or
mov
mov
jo
ja
imul
mov
sar
fmuls
punpckhwd
loop
jle
and
and
mov
flds
adcb
fidivl
xor
jmp
jp
out
outsb
daa
aaa
mov
xor
jno
mov
pop
mov
in
loopne
inc
and
inc
je
cltd
adc
loopne
xlat
into
or
fs
cmp
push
cmc
jnp
lret
ret
adc
sub
dec
roll
push
dec
rorl
fwait
dec
add
fs
jmp
insb
sbb
jmp
in
movsb
int3
sub
jl
insl
sahf
and
xchg
inc
push
les
call
pop
in
lcall
push
inc
push
imul
mov
dec
daa
mov
rol
cltd
or
js
mov
xchg
popf
test
sub
jecxz
dec
les
push
mov
jle
mov
sub
dec
fnstenv
sbb
gs
dec
or
xchg
pop
xor
ds
mov
dec
icebp
je
call
jb
adc
push
mov
xchg
dec
fwait
outsb
push
lcallw
xorb
push
inc
or
lcall
cli
in
sti
inc
jne
shr
pop
jmp
lret
sahf
flds
jne
andb
daa
push
dec
enter
add
and
xchg
xchg
add
ljmp
push
pop
mov
ds
movsb
push
xchg
sarl
cmp
lahf
aad
or
movl
fiaddl
jg
leave
mov
mov
loope
mov
xchg
ja
sub
add
add
pop
or
and
mov
in
fisttpll
in
or
mov
sub
imul
xchg
out
mov
mov
adc
outsb
push
sub
out
push
cmp
in
or
or
fldcw
shlb
xchg
fistps
mov
mov
or
popf
mov
cmpsl
scas
lock
dec
mov
sbb
out
jno
enter
sub
std
test
xchg
out
xchg
pop
xchg
mov
fwait
sub
jno
into
sbb
sbb
repz
push
movsb
in
rcrb
mov
push
mov
into
push
sbb
jmp
xlat
fmull
dec
sbb
xor
mov
test
cmp
sbb
shll
js
and
sahf
mov
std
addb
mov
lcall
std
cmc
inc
cld
inc
mov
pop
popa
insb
orl
test
cmc
addr16
lret
jmp
clc
pop
sarb
out
push
mov
pop
scas
stos
mov
cwtl
add
and
add
lods
fucomip
cmpsb
addr16
push
outsl
cmpsb
or
inc
jmp
stc
inc
lret
inc
and
dec
jmp
mov
clc
mov
pop
movsb
jmp
das
lods
test
sub
mov
adc
jl
cmp
add
ljmp
push
mov
sub
cmc
sti
test
mov
jns
xorb
xor
mov
daa
pop
in
les
std
lock
aad
dec
jp
xchg
push
cmp
js
test
xchg
xchg
add
lret
adc
shrb
or
out
outsb
jecxz
into
jno
fldt
push
adc
or
imul
jmp
mov
ret
ss
cmp
mov
lret
scas
mov
xchg
mov
lods
aad
mov
cmp
ss
xchg
inc
dec
mov
sbb
andps
or
das
dec
jb
fs
xchg
fsts
nop
and
pop
mov
adc
adc
mov
jbe
push
loop
cmpsl
dec
andb
dec
arpl
hlt
push
adc
cltd
mov
dec
or
ljmp
jl
mov
xor
mov
imul
mov
and
ljmp
jle
out
push
mov
push
inc
xlat
xchg
fidivrs
test
pop
lcall
popf
mov
pop
xor
push
mov
ret
xor
inc
and
add
scas
pop
mov
jge
push
push
arpl
or
icebp
sub
or
mull
inc
add
jecxz
fxch
push
rcr
sub
cmc
pop
out
jecxz
lret
sbb
jge
lock
and
rclb
ret
cmp
pop
add
outsb
sbb
cld
repz
scas
jns
imul
into
addr16
fdivrl
pop
jmp
adc
mov
mov
adc
xchg
inc
sub
xchg
div
cmp
mov
sti
sub
data16
sbb
jb
dec
nop
and
gs
imul
pop
adc
mov
pop
adc
sarb
cmc
in
rolb
insl
cmp
popl
stos
lahf
in
push
lahf
in
adc
repz
xor
movq
fsubs
rolb
xchg
gs
pop
mov
scas
in
adc
xchg
mov
push
out
lods
fwait
loopne
mov
fadd
jecxz
hlt
adcl
jge
pusha
addl
pop
mov
mov
cmp
push
mov
test
mov
pusha
fs
jge
ret
repnz
fstpt
inc
loope
jecxz
push
ret
inc
xchg
lcall
aaa
mov
push
xor
cmp
and
and
push
mov
mov
add
gs
cmpsb
sbb
shll
add
imul
shl
mov
pop
cmp
aaa
dec
pop
dec
jmp
mov
test
cs
cmp
popf
insb
js
aas
pop
int
int3
pop
push
sub
imul
inc
cmp
lods
iret
lret
and
fwait
js
jo
adc
inc
or
jns
sarb
out
inc
mov
inc
jb
mov
push
cmp
pop
and
pop
mov
test
aas
cmp
das
aad
mov
or
lcall
ret
rcrb
cs
fbld
cmc
int3
ljmp
jbe
inc
dec
adc
add
xchg
or
inc
pop
imul
repnz
adc
pop
jne
jg
enter
test
xchg
in
adc
adcl
in
bnd
sbb
adc
cli
daa
pop
jo
les
bound
mov
push
jl
or
sbb
adc
mov
or
inc
scas
xchg
inc
es
add
jg
and
ja
rcrl
sbb
fiadds
les
mov
ss
xchg
lret
insl
jb
xchg
mov
and
push
jae
adc
jge
sbbb
mov
push
mov
jge
jne
mov
mov
jge
out
adc
jecxz
cmc
push
jo
divb
aam
push
adc
rorl
dec
inc
test
cmp
xor
push
fisttpl
lock
add
pop
bnd
stos
imul
insl
adc
leave
mov
call
sbb
dec
cmp
stos
rorl
jle
imul
xchg
cltd
test
xchg
push
xchg
xor
movsl
aad
out
lahf
push
rcl
xor
adc
std
jo
adc
test
shrb
mov
add
in
jl
sbb
jecxz
je
mov
xchg
adc
mov
test
xchg
xor
les
lds
pop
add
xor
xchg
adc
dec
pushf
out
xor
jp
iret
les
inc
push
shlb
cs
push
ds
or
dec
mov
loope
jo
movsb
aad
fsubs
insb
sub
cmp
mov
enter
push
outsb
ret
xchg
pop
lods
jecxz
adc
clc
cs
fdivl
inc
cmp
mov
mov
in
push
int
fdivrl
pop
cmp
stc
dec
jnp
push
ficoms
rorl
sbb
iret
call
ljmp
mov
in
cmpsb
popa
jmp
lret
sbb
mov
pop
inc
adc
mov
xor
shll
mov
inc
sub
xor
imul
lret
insb
in
push
ret
negb
pop
sti
lret
shl
out
mov
adc
testl
inc
cwtl
divb
sub
mov
pop
or
push
daa
sbb
les
push
cli
push
xchg
push
xchg
xlat
adc
cmp
stos
add
add
mov
test
lcall
jmp
add
mov
test
pop
xchg
push
push
enter
mov
out
sarl
adc
cwtl
bound
in
push
repnz
jecxz
or
mov
stc
xor
out
jae
lods
xor
inc
ret
mov
jle
and
xchg
inc
jno
push
or
rcll
leave
std
dec
loopne
out
and
ds
mov
xchg
fwait
cmp
inc
sbb
nop
push
mov
sbbl
push
in
fdivr
dec
or
adc
les
ds
out
mov
dec
sarl
bound
cmp
sub
mov
test
sub
movsb
std
subl
fdivl
jl
add
andb
push
es
xchg
popa
dec
popf
sbb
loopne
daa
test
repz
pushf
outsl
out
xchg
gs
xchg
iret
push
fs
adc
fst
xlat
int
dec
addr16
adc
xor
xchg
mov
fsts
dec
movl
xchg
loop
lcall
cmpsl
in
xchg
pop
clc
cmp
rcr
mov
jbe
adc
popa
out
pushf
xchg
scas
push
lret
mov
pop
push
in
sub
sub
dec
mov
mov
lret
add
cmp
push
inc
out
test
lret
inc
mov
loope,pn
into
cli
outsl
or
out
inc
xchg
xorl
popa
push
lret
stos
push
add
aas
dec
sub
or
imul
in
jns
mov
rcr
pop
addr16
xchg
loop
adc
cli
pop
lds
icebp
jbe
fs
mov
fisubrl
cld
xchg
cmp
adc
push
and
adc
sub
sub
imul
mov
test
sbb
int
add
cmp
add
or
in
sbb
or
aam
add
dec
mov
leave
mov
call
aam
mov
fimuls
dec
jle
nop
int
aas
xchg
lahf
shl
sbb
rolb
mov
push
sbb
xor
xorb
dec
pushf
out
push
in
std
popa
sub
jg
xchg
fstpl
cmp
xor
fidivs
cmpsb
dec
loope
pop
mov
ficomps
sbb
sbb
or
test
mov
mov
add
pop
push
sbb
cltd
dec
mov
cld
sub
frstor
imul
mov
inc
pop
insb
add
lret
sbb
mov
aam
lods
cmp
repnz
out
cmp
mov
cli
sbb
ret
hlt
add
inc
aad
xchg
mov
lahf
adc
push
inc
enter
xchg
aaa
sub
or
adc
sahf
into
sbb
xorb
inc
lods
xor
mov
xchg
sahf
lds
cli
push
mov
push
idivb
mov
xchg
fstpl
ret
mov
shlb
jb
sbb
sbb
mov
enter
inc
push
rorb
pop
xchg
add
jbe
inc
mov
test
push
and
lret
movsl
into
jne
sbb
push
mov
imul
inc
pop
shrb
in
sbb
and
les
xor
aad
gs
aam
xor
bound
jp
jge
fwait
int
insl
lock
test
mov
add
mov
pop
push
push
sub
addr16
stos
cwtl
cmp
imul
imul
pop
adc
cmp
pusha
pop
fsubrl
xchg
and
mov
adc
pop
cmpsl
mov
enter
dec
xchg
mov
mov
jae
push
inc
cli
insl
mov
add
mov
fidivrs
paddw
lea
xor
lea
mov
lea
cmp
xchg
icebp
cmpsb
push
sub
outsb
mov
add
xchg
js
pop
push
es
clc
cmp
xchg
pop
dec
adc
cmp
hlt
push
push
adc
push
stc
pop
stc
repnz
adc
pop
xchg
ret
and
lret
sbb
insb
cmp
clc
mov
and
fcomps
imul
mov
nop
ret
shrl
dec
adc
mov
mov
icebp
andb
shl
mov
jb
mov
or
rclb
jae
sub
add
xor
fidivrs
sub
and
enter
mov
mov
xor
mov
xor
push
out
or
push
mov
inc
cmpsb
lcall
es
push
mov
ljmp
jg
pop
inc
jb
popf
test
cmp
push
dec
jge
roll
add
sbb
ror
mov
jne
das
cs
and
inc
mov
inc
call
sahf
push
or
ss
leave
int
jnp
push
add
loope
rcll
ret
mov
push
fidivl
and
ljmp
scas
mov
jo
ja
xchg
nop
ret
mov
test
jno
fistl
pop
arpl
cs
ljmp
xor
push
hlt
in
cs
in
mov
addr16
cmp
leave
ja
lcall
inc
enter
mov
fiadds
in
lret
mov
rolb
mov
cmp
pop
aam
jle
insl
std
xchg
inc
notl
cmc
out
mov
test
loope
dec
adc
lock
xor
sub
push
mov
nop
psraw
jno
dec
stos
or
mov
call
mov
psrad
mov
push
stos
loopne
shl
ret
jecxz
or
shlb
jnp
mov
jo
jns
jmp
pop
xorl
mov
cmp
mov
adc
shlb
mov
dec
test
fistpl
push
jmp
mov
mov
sbb
mov
bound
adc
loop
ret
bound
jnp
push
jle
add
mov
inc
ret
fnstcw
mov
fucomi
xlat
dec
mov
xchg
data16
push
jae
nop
das
xor
test
sub
sub
leave
mov
bsr
cld
or
arpl
sub
imul
jbe
cmp
int3
movsl
adc
sahf
outsb
push
ds
lods
in
stos
shll
xor
cmp
fwait
jne
dec
xchg
sub
fs
shr
fistpl
pop
jmp
jo
cmp
hlt
fcoml
push
mov
and
shlb
sbb
in
test
dec
orl
pop
pusha
mov
mov
movsb
popf
outsl
jge
clc
jg
aad
repnz
jg
ficoms
cli
cmpsb
stos
and
add
andb
aam
jae
adc
mov
aad
in
pop
fwait
cmp
sub
adc
in
out
out
sub
adc
sub
push
movsb
sub
stos
jmp
sub
icebp
gs
mov
xchg
push
cmp
inc
mov
mov
lea
in
aas
adc
lods
jae
sub
stos
mov
daa
inc
insb
push
sbb
fcomps
xchg
aas
jmp
or
dec
mov
leave
sub
orb
jne
mov
xchg
pop
fwait
mov
outsb
mov
fucomip
test
sbb
fistpl
call
stos
inc
inc
pop
sarl
mov
adc
cli
or
sub
mov
adc
or
mov
xchg
test
xchg
test
movsl
sub
mov
jo
cs
xchg
add
stos
and
add
xchg
fistl
cmp
dec
sub
nop
mov
mov
sbb
adc
clc
rclb
xchg
jns
imulb
xchg
rcr
pop
lods
cwtl
lods
xchg
jno
stos
jmp
adc
xchg
jb
push
imul
pushf
adc
and
mov
movsl
pusha
pushf
fldt
xor
inc
mov
movsl
pop
pop
jecxz
jae
or
mov
push
jae
jg
jmp
pop
add
mov
fstps
rcl
or
push
xor
dec
mov
out
add
push
lea
dec
aad
add
nop
mov
out
fsub
test
sahf
andb
les
rorl
sbbb
cli
pinsrw
push
cltd
pop
and
xchg
cmp
or
popw
pop
dec
popa
stc
fnstcw
hlt
pushf
mov
in
cli
sti
mov
push
add
jb
ret
push
mov
stc
pop
std
test
sbb
sub
rolb
xchg
int3
mov
and
or
mov
or
lahf
push
sub
mov
add
daa
rolb
ss
call
mov
xchg
push
cmp
int
and
cmp
cmpl
lret
out
movsl
jb
dec
pushf
fldl
push
mov
and
mov
and
pop
int
loop
and
push
dec
cmpsb
push
out
mov
jne
add
mov
mov
lahf
mov
adc
ds
cmc
pop
adcb
sahf
mov
sbb
popf
mov
push
lock
mov
ret
sbb
dec
push
cmpsb
arpl
xchg
mov
shlb
sahf
jmp
ret
add
inc
mov
pop
or
add
cmp
arpl
fdivr
lods
adc
adc
sbb
add
and
sbb
aad
jmp
pop
out
inc
cld
fbld
jge
or
push
sub
jbe
in
sbb
sbb
lds
cmp
dec
mov
hlt
call
das
cmpsb
stos
aas
lods
test
mov
mov
xchg
dec
scas
jnp
es
xchg
in
mov
mov
in
loopne
rcrl
xor
out
push
mov
xchg
ja
xchg
and
mov
fcomps
sbb
mov
fwait
dec
push
into
adc
push
inc
pop
rcrl
outsb
dec
add
dec
out
mov
and
cmp
fldenv
sahf
or
cmp
aaa
fisttpll
out
lods
adc
or
push
dec
imul
jb
aas
cwtl
jnp
xor
pop
cmpsl
lahf
dec
inc
in
int
ss
dec
iret
pushf
xchg
loop
daa
adc
push
bound
into
lcall
ss
mov
arpl
adc
addr16
sub
sub
lret
stc
orl
add
ret
loope
shll
jo
icebp
dec
aad
adc
xchg
ljmp
xchg
aaa
push
jb
lods
pusha
xchg
adc
mov
pop
repz
jle
mov
add
lea
in
pop
sbb
mov
loopne
add
xor
ja
lock
imul
sbb
adc
shll
xchg
add
sub
loopne
xchg
push
les
xchg
inc
mov
jns
bound
mov
mov
lods
icebp
leave
pop
into
cmp
subl
jp
push
jmp
das
or
test
cli
fucomp
fwait
cwtl
add
pop
das
pop
and
dec
mov
out
jge
addr16
aaa
pushf
sub
xor
ds
mov
lret
test
stos
das
xchg
aad
jmp
add
add
dec
push
loop
js
roll
popf
out
xlat
std
in
insl
out
aam
xchg
add
loop
into
add
nop
mov
add
mov
mov
insl
xor
xchg
gs
icebp
lods
lods
dec
ret
mov
dec
push
cwtl
stos
lock
neg
xchg
jne
adc
jge
cs
push
push
jle
add
dec
test
mov
pop
cwtl
xchg
sti
mov
push
mov
popf
add
js
adc
imul
sti
lret
xchg
cmc
inc
pop
mov
and
mov
loopne
lcall
pushw
imul
call
int
xchg
dec
rcrl
cmp
cmp
mov
xchg
pop
movsl
fcoms
push
xchg
xchg
jl
jl
test
pop
pop
jno
outsb
mov
mov
push
mov
mov
repnz
sbb
lret
out
test
arpl
fnstcw
shll
dec
and
lea
je
inc
push
stc
out
xchg
nop
mov
jbe
adc
fs
xchg
sub
out
out
cltd
pop
jecxz
mov
or
mov
fisubl
shlb
je
ficomps
mov
nop
int3
pop
loopne
clc
out
xor
insb
push
xchg
mov
mov
inc
bound
mov
inc
and
push
stc
push
push
es
and
aad
mov
aad
inc
shll
les
cmpsb
inc
rorl
leave
jl
dec
cmp
pushf
cmp
in
sbb
mov
add
inc
add
mov
ret
outsl
roll
adc
in
cmp
clc
mov
loop
sbb
mov
xchg
stos
hlt
movsb
outsl
gs
cmp
push
adc
adc
pop
imul
dec
inc
or
and
popa
jmp
sub
cld
mov
fcoms
mov
popf
pop
pop
popf
mov
mov
clc
fmulp
sub
and
lea
daa
add
aad
push
push
les
or
dec
pop
or
or
lods
sub
add
mov
dec
push
aad
dec
fidivs
mov
sbb
popf
xor
loope
jecxz
adc
stos
sub
loope
jbe
mov
sub
outsl
les
cmpl
jmp
sbb
shll
dec
mov
mov
test
cmp
mov
and
push
mov
and
pop
sbb
outsl
in
lods
xchg
lods
push
mov
inc
adc
in
scas
and
mov
cmpsl
inc
sub
imul
pop
enter
or
cmc
lods
bound
add
cltd
mov
das
daa
xorl
stos
pop
aaa
das
jmp
pushf
dec
pop
mov
dec
and
lahf
mov
incb
mov
sahf
jbe
xchg
rcrl
test
cmp
repnz
or
mov
pop
adc
in
xor
add
cmp
xchg
xor
xor
loopne
and
xchg
mov
out
push
sarl
pop
mov
adc
bound
fnstcw
mov
dec
idivl
sub
loope
push
aad
xchg
adcl
mov
mov
or
or
add
shll
mov
orb
and
fdivrs
mov
xchg
sbb
mov
nop
test
setbe
mov
pop
repz
adc
adc
out
fisubrs
xchg
ja
xchg
jl
mov
pop
scas
stos
fdivp
inc
push
sub
pushf
xor
push
dec
in
xchg
add
add
clc
popf
ss
out
and
mov
ss
cmp
js
mov
scas
cmp
ljmp
adcb
out
dec
ret
cmp
out
mov
lock
adc
cmp
popf
push
js
xor
repnz
add
dec
in
dec
fistl
pop
rcl
mov
mov
rcrl
dec
loopne
sbb
push
arpl
je
sbb
jecxz
lret
dec
dec
mov
sti
sarl
jbe
fcompl
mov
dec
mov
xor
sub
rolb
scas
out
scas
pushf
xor
push
adcb
fwait
dec
jns
ljmp
pop
push
enter
outsl
xchg
in
shlb
por
pop
push
test
pop
dec
and
lods
push
int3
xchg
add
cld
adc
lcall
lock
or
adc
jbe
mov
dec
mov
and
add
fndisi(8087
cs
pop
mov
andl
jle
cmpsl
push
jp
in
in
pop
addr16
inc
loopne
leave
and
scas
or
xchg
push
sbb
mov
cmpsl
arpl
dec
xchg
fdivl
jb
fwait
add
or
inc
jge
pop
or
or
inc
sbb
mov
data16
mov
cmp
lea
enter
add
push
cmpsl
loopw
push
pop
ja
pusha
dec
gs
mov
iret
mov
inc
adc
int3
movsl
shrl
into
in
adc
xor
or
out
loope
lea
shll
loopne
xchg
jae
add
fwait
aad
call
cli
mov
mov
push
movsb
testb
rcrl
loopne
and
lahf
add
pop
lcall
sub
insl
and
es
xchg
jl
jmp
mov
shll
sub
mov
pop
sti
and
enter
enter
in
hlt
ret
arpl
ja
sbb
ret
insl
xor
test
lret
dec
mov
jae
cmp
es
pop
out
sub
mov
and
push
sub
cmpsl
popf
and
sub
jnp
mov
sti
xor
stos
repz
mov
push
dec
pop
cwtl
lea
pop
repz
aam
ja
inc
pop
cmpsl
jp
test
in
jae
mov
add
pop
test
aaa
outsb
adc
add
test
js
clc
jge
sub
xchg
xchg
lea
hlt
out
jg
cmp
sahf
cwtl
fcom
loopne
fdivl
mov
and
pop
adc
mov
cli
cmpl
clc
aas
les
ss
xchg
xorps
mov
test
divb
jo
ret
mov
lds
leave
push
in
add
xor
xor
repz
xchg
push
sbb
xchg
cs
push
scas
push
iret
inc
imul
inc
or
xor
ja
mov
insl
outsl
loope
dec
adc
dec
mov
pop
and
or
xchg
pop
pop
or
cmpsl
jge
sti
or
adc
mov
icebp
fwait
jp
xor
dec
test
push
aaa
and
cmp
repz
pop
adc
or
xchg
push
mov
pop
cwtl
ficompl
jns
shl
ja
pusha
add
mov
adc
cmpsl
dec
and
cmc
push
lea
aad
cmp
dec
outsb
dec
pop
pusha
inc
push
fldcw
and
mov
std
pop
xor
cmc
inc
inc
push
fst
rorb
pop
adc
inc
mov
sbb
imul
lea
pop
sti
xchg
je
fdivrl
mov
data16
xchg
jno
in
data16
dec
add
cwtl
movsl
rolb
fisttpl
fwait
sbb
add
lret
and
popf
push
cmp
loop
jl
movnti
pop
sub
jb
out
int
pusha
test
jmp
or
push
sub
icebp
cmp
xchg
jns
push
call
test
outsl
mov
in
lods
fwait
out
xor
xor
push
test
es
adc
pop
loope
mov
test
mov
outsb
push
pop
xchg
and
out
adcl
push
xor
xchg
mov
lahf
or
daa
cmp
pop
insb
inc
mov
pop
rolb
push
hlt
mov
stc
jne
inc
xor
mov
mov
mov
adc
fistpl
lea
scas
repnz
sub
cmpsb
movsb
in
inc
xor
jge
cmp
lcall
xlat
fcomp
in
addr16
sbb
testb
adc
cmp
js
out
je
aam
insb
pop
mov
or
xchg
ret
cmp
icebp
xchg
mov
xor
movsl
mov
outsb
mov
imul
mov
jnp
mov
mov
and
out
inc
addl
jg
daa
es
push
lds
push
xlat
push
mov
push
cmp
lcall
lcall
loopne
out
shl
lock
pop
xchg
in
jp
mov
hlt
xor
sbb
ljmp
in
or
divb
movsb
jno
inc
and
and
jbe
int3
mov
daa
push
loop
inc
push
jo
pop
mov
add
or
mov
push
xchg
cmp
outsl
xchg
pop
pop
mov
inc
enter
in
sub
mov
fcmovb
push
cs
lds
fsubrs
addr16
in
and
jne
out
adc
sbb
clc
cmp
bound
fbld
or
pop
jns
movsl
lock
adc
jnp
test
pop
test
aaa
sbb
or
popa
pop
adc
mov
and
cwtl
lret
dec
sarb
and
adc
fisubrl
pop
and
lret
cmp
sti
mov
jge
mov
int
out
sub
loope
mov
div
and
insl
sbb
or
pop
push
mov
mov
and
or
lods
mov
aas
pop
test
cmc
mov
push
clc
lcall
insl
push
jno
mov
mov
xchg
mov
lret
cmp
call
mov
lret
popf
out
fs
mov
push
das
inc
jae
int
punpckhbw
rcrb
mov
into
ds
cmp
xchg
fs
adc
mov
js
int3
mov
sub
jnp
out
cmp
ss
shll
ja
sbb
xchg
aad
rorl
in
dec
out
cmc
lds
outsl
sbb
pop
or
pop
and
pop
test
mov
or
rcrl
cwtl
data16
daa
mov
pop
ljmp
sbb
stos
push
adc
jae
pop
jg
dec
cmpsb
stos
nop
pop
and
cmp
sbb
gs
pusha
lret
cli
jl
ret
arpl
jb
mov
adc
movsl
fdivl
sbbb
sarb
dec
inc
ds
loopne
push
stos
cmp
pop
pop
std
loopne
adc
addb
in
fstpl
fsubrp
scas
push
sub
mov
cmp
and
imul
inc
adc
not
stos
mov
jbe
js
jo
xchg
jmp
lret
or
pop
lds
pop
lahf
xor
andb
mov
xchg
add
inc
mov
jge
icebp
cli
pop
out
sbb
mov
rcl
xchg
dec
xor
sbb
mov
sbb
push
movsl
les
push
jo
mov
cmpsl
xchg
loope
dec
cmp
vpsrlq
add
ret
pop
push
jae
aam
adc
mov
push
outsl
mov
sub
mov
mov
mov
insb
add
scas
das
adc
push
cmp
sub
cld
test
mov
stos
test
lods
je
ljmp
sub
and
movsl
push
bound
add
mov
or
jae
pop
in
repnz
stos
sub
xchg
xlat
cmp
mov
jbe
pop
shlb
sub
cwtl
xor
aas
cmp
dec
add
nop
ret
jg
iret
sub
and
into
mov
sti
mov
add
xchg
fiadds
xchg
lcall
xchg
dec
dec
push
jp
and
xchg
mov
sarl
xchg
test
aas
mov
mov
jp
sub
jbe
xchg
xor
shlb
mov
mov
mov
add
jb
inc
outsb
and
push
fwait
push
and
in
inc
cmp
ss
cmpsb
sub
lods
add
xlat
stos
out
fstpl
mov
mov
pop
js
in
pop
pushf
leave
daa
or
les
mov
xor
stos
imul
mov
pop
xchg
xchg
jns
fnstcw
sub
popa
and
push
adc
call
fdivrl
xor
divb
sub
jnp
inc
sti
push
mov
adcl
insl
int
subb
aas
pop
push
inc
repnz
sbb
stc
test
icebp
and
into
mov
div
loope
mov
sbb
outsl
inc
data16
jo
cmovl
adc
pop
inc
pop
sub
shrl
jno
aam
xor
cmpb
movsb
shl
jno
cmp
pop
jecxz
jle
xchg
bound
adc
rol
adc
jp
rcrl
adc
or
sti
mov
push
xor
cmp
lods
cmp
insl
mov
dec
imul
adc
push
mov
leave
mov
xchg
icebp
jl
or
pop
fadds
adc
stc
sar
adc
incl
aaa
fs
dec
or
mov
dec
jmp
jns
jnp
xlat
int3
dec
mov
mov
jecxz
jae
addr16
jmp
mov
out
rclb
sub
fisubl
or
das
or
inc
mov
inc
ljmp
outsb
rolb
aam
push
addr16
in
cmp
and
dec
lret
jb
pop
xor
mov
inc
cmp
cmp
in
pop
aad
cwtl
mov
sub
mov
lcall
adc
lcall
mov
popa
pop
dec
insl
dec
sbb
mov
mov
lea
adc
sub
push
sbb
mov
mov
rol
xchg
pop
aaa
push
jg
push
insb
mov
pop
sahf
ret
movsbl
lret
mov
icebp
pop
ds
dec
pop
ret
sub
dec
fs
outsb
rcrl
mov
int3
sbb
outsl
test
jbe
sbb
jne
sub
cmp
cwtl
jo
add
or
mov
out
pop
lahf
fdivrs
test
mov
mov
loop
fidivs
cmp
and
jecxz
rcl
sahf
xchg
arpl
mov
lock
sbb
mov
in
arpl
insb
cli
or
xchg
xor
in
xchg
sub
aas
insb
arpl
xor
mov
test
and
fwait
sbb
aam
push
mov
pop
mov
ret
lea
sub
clc
pop
pop
out
pop
adc
mov
cmc
loopne
aam
arpl
lahf
shr
hlt
pop
scas
cld
pop
sti
gs
dec
xchg
mov
xor
cs
into
ficoml
mov
push
mov
cwtl
mov
pop
pop
inc
int3
inc
mov
jl
or
mov
pop
mov
xor
jg
mov
xchg
aam
ficoml
and
push
pop
jne
clc
int3
div
insb
aaa
cmp
mov
inc
call
test
jp
dec
lds
loope
out
pop
fwait
cmpb
hlt
xorl
and
call
add
ljmp
pop
ret
sub
xor
sbb
mov
cmp
dec
dec
pop
stos
aam
mov
mov
enter
mov
mov
test
lcall
fdivrp
cmc
js
and
jb
push
inc
addl
es
cmpl
cmp
push
repz
mov
mov
popa
or
mov
sbb
dec
xlat
jmp
cmp
arpl
xor
add
iret
jb
filds
inc
or
jns
negb
shll
and
das
lcall
mov
mov
dec
push
jb
pop
pushf
daa
and
ror
jmp
lea
out
fldenv
inc
jns
mov
pushf
les
scas
outsl
jle
adc
mov
and
sub
dec
shlb
insl
or
push
verw
gs
xor
cwtl
mov
jmp
jmp
sti
mov
inc
jmp
testb
popf
pop
mov
inc
inc
or
sbb
adc
test
hlt
shll
xor
add
push
jg
rcrl
ficoml
mov
jnp
out
imul
frstor
jns
in
test
mov
dec
scas
push
push
mov
cmp
or
pop
inc
lods
int3
repnz
or
das
aas
inc
xchg
inc
outsl
rcll
inc
fcom
push
push
jmp
push
pushf
sub
adc
mov
add
mov
clc
mov
or
xor
mov
clc
mov
sbb
add
fcmovbe
mov
dec
push
or
cld
add
cs
xchg
rorb
stc
fdivrl
cmp
fistl
shrb
sbb
cmpsb
and
mov
sub
aam
repz
sar
xchg
jecxz
cmp
sub
push
pop
xchg
sti
and
cmpsl
add
pushf
jnp
xchg
jmp
shlb
or
mov
in
add
xlat
imul
rorb
and
jae
jb
jle
repnz
pop
lock
add
lds
add
xchg
rcll
lahf
movsb
pop
in
inc
addr16
cltd
jnp
and
jnp
popf
jbe
daa
push
jns
lahf
xchg
pop
mov
movsl
das
dec
pop
rol
inc
out
insb
hlt
xor
pop
jl
inc
sarl
mov
cmpsb
and
arpl
jmp
jo
xorl
into
mov
lds
xchg
mov
bound
clc
jb
xor
int
in
shlb
imul
cld
mov
sbbl
mov
ret
lds
mov
dec
fwait
int
cmpb
dec
dec
lock
jbe
bound
jp
scas
mov
ss
lret
pop
pusha
or
sbb
pop
add
mov
sub
cmp
icebp
stos
call
dec
loope
add
out
aaa
fwait
xchg
and
mull
fs
jb
es
adc
dec
vpmacsww
sbb
inc
and
xor
xchg
vminsd
add
mov
cmp
push
dec
fsubs
jmp
pop
or
mov
pop
cmp
lret
ja
in
inc
adc
jo
jmp
pop
andl
shrl
mov
push
lods
enter
and
pop
sub
pop
pop
inc
scas
adc
lods
pop
repz
add
std
pop
cmpsl
test
mov
jnp
fcompl
mov
adc
or
push
push
inc
ja
mov
sbb
xchg
push
or
pop
jbe
repnz
out
fstpt
adc
jmp
pop
in
cmc
repnz
mov
in
mov
or
add
mov
mov
pop
loop
mov
rorb
cmpsb
adc
push
mov
pop
hlt
cmpsl
into
adc
aam
rcll
sahf
lcall
into
out
pop
inc
in
roll
dec
sub
shlb
jae
repnz
dec
pusha
inc
insl
mov
shr
push
in
orb
fiadds
push
sarb
addr16
adc
mov
ds
and
or
inc
add
jmp
loope
cwtl
cli
pop
mov
jno,pt
cld
pop
mov
pop
aad
pop
pop
daa
jo
or
xlat
dec
dec
sub
sbb
jbe
aad
loope
std
or
mov
jne
inc
mov
cmp
sar
bound
shrb
ret
sbb
inc
ljmp
inc
pop
fildll
pop
outsb
or
rorl
add
jecxz
int3
mov
repnz
pop
inc
sub
pop
jb
sbb
inc
dec
mov
clc
scas
loop
inc
insl
std
dec
cmpsl
mov
aam
repz
cli
push
outsl
fmuls
add
add
rcl
jp
shlb
pop
mov
inc
pop
xor
flds
je
cmpsl
ljmp
icebp
jnp
pop
fstpl
dec
in
xor
movsl
call
cld
call
aam
dec
imul
call
repz
adc
pop
movsb
mov
movsb
push
xchg
sbb
popa
fwait
mov
dec
push
std
pop
in
mov
xor
xchg
xchg
jecxz
cmpsb
bound
decl
jns
xor
inc
popa
repnz
pop
cmp
loop
xchg
test
inc
cmp
bound
fiaddl
sbb
jmp
sub
add
adc
mov
dec
jp
mov
cmpsb
jnp
push
loope
xorb
ja
hlt
je
mov
mov
pop
inc
jle
dec
and
mov
mov
pop
sub
out
scas
mov
popa
outsb
cmp
aas
xlat
daa
dec
lock
mov
fs
cltd
jmp
test
shll
sub
mov
and
and
mov
int
pop
sub
cli
outsb
sbb
fildl
add
jno
pop
sub
push
lds
fdivrs
aad
xlat
ret
into
les
xchg
insl
mov
int
int3
lds
aas
jb
pop
fistpll
sbb
dec
scas
fists
jmp
stos
ror
aas
js
in
mov
aam
inc
sub
scas
sub
add
sbb
or
dec
mov
mov
cwtl
cmp
mov
xor
loope
cltd
mov
mov
adc
jge
cmovp
push
popf
insl
fstps
or
jbe
fcomip
outsb
adc
xchg
push
lods
mov
pop
adc
push
dec
mov
or
jno
inc
aas
sarb
movsl
outsb
inc
mov
int3
mov
mov
mov
into
xor
fcompl
mov
iret
addb
pop
mov
dec
sbbl
sti
or
sbbl
dec
push
jge
mull
mov
mov
cs
stc
scas
mov
mov
xchg
lcall
push
cmp
or
enter
jne
popf
data16
mov
push
aad
xchg
lcall
mov
push
pop
pop
and
std
lds
pop
jne
lods
cmpsl
lods
dec
xchg
outsb
test
add
push
mov
nop
mov
adc
mov
out
fs
addr16
or
lods
shrl
and
cmp
leave
mov
movsl
insl
daa
ja
ds
subb
mov
shrl
push
adc
xor
test
pop
ret
shll
cmp
imull
add
lods
adc
pop
cmp
mov
mov
enter
ja
and
mov
out
xchg
repnz
fdiv
sub
sbb
lretw
push
jbe
jne
mov
daa
enter
add
adc
daa
ret
cli
mov
jp
xor
pusha
inc
mov
mov
inc
mov
es
sub
mov
hlt
add
pop
pop
jnp
mov
add
inc
dec
or
sar
add
pop
inc
mov
mov
dec
mov
lcall
shlb
sub
xchg
mov
popf
in
loope
jecxz
out
or
enter
clc
pop
dec
mov
gs
ret
cmpb
xchg
push
xchg
imul
out
int3
mov
imul
dec
xor
and
jle
mov
popf
inc
xchg
pop
or
cmp
andl
add
cmp
movsl
mov
dec
rcrl
imul
jns
jp
not
hlt
testl
je
enter
imul
cmp
push
adc
mov
sbb
rcrl
mov
mov
mov
sub
sub
mov
lea
sub
popf
sti
mov
jmp
adc
add
shrb
sarb
mov
imul
cmp
add
sbb
clc
mov
sarb
arpl
cli
sahf
mov
xchg
fmul
jl
mov
adc
ror
pop
lret
call
mov
mov
jae
and
mov
outsb
dec
fdivl
or
pusha
mov
cwtl
adc
and
dec
push
out
iret
imul
push
lret
stos
test
pop
sbb
cs
inc
ret
inc
jge
jne
push
sti
inc
mov
jo
scas
and
out
cmp
pushf
out
mov
fwait
repnz
mov
fdivrl
cmp
cmp
ja
and
adc
add
insl
cwtl
dec
icebp
dec
sbb
jmp
stos
into
sub
loop
cli
jae
add
adc
sub
and
mov
aam
add
les
fisubrl
outsb
jl
and
dec
fimuls
sbb
sub
fistps
adc
or
pushf
scas
pop
loop
xchg
add
daa
adc
jns
cmp
pop
daa
jg
out
in
out
adc
push
mov
or
push
mov
lahf
fwait
hlt
jnp
mov
repz
sub
cmp
push
inc
lock
cli
xchg
test
pop
xor
popa
xchg
test
cmp
gs
aam
sbb
popa
dec
sti
or
jp
add
fs
jnp
incl
out
stos
rclb
and
fnstsw
stc
pop
push
add
sub
sbb
sbb
jmp
add
rolb
orb
jl
dec
incb
fadds
push
mov
lret
sbb
push
sarl
icebp
mov
fdivrs
cld
call
iret
pop
pusha
stos
ss
bound
test
push
add
mov
mov
lods
aaa
pop
ret
int
xor
frstor
sbb
adc
add
pop
sub
sbb
add
movsb
and
lds
mov
adc
cmp
hlt
into
nop
adc
mov
or
rorb
jo
adc
xlat
adc
push
mov
mov
jo
push
jns
adc
jmp
push
xor
jle
push
mov
stos
mov
leave
sbb
cmp
popf
mov
daa
or
fildl
mov
ljmp
mov
or
dec
rcrl
test
lahf
cmpsl
push
ret
icebp
jnp
pop
aam
shll
ds
jnp
stos
mov
xchg
add
int3
sub
in
and
iret
and
dec
enter
faddp
roll
or
scas
dec
push
jbe
cmp
mov
stos
icebp
xchg
push
adc
seta
insl
mov
jns
aam
sbb
scas
test
test
loopne
dec
mov
jle
sbb
popa
dec
jno
xorb
push
outsl
lods
mov
inc
sbb
sbb
cs
or
mov
push
std
subb
loope
jg
rorb
idiv
or
push
push
push
push
xchg
adc
adc
in
fstps
fadds
testb
xchg
pop
mov
mov
and
stos
add
test
push
addb
push
sbb
xchg
orb
in
stos
pop
outsl
and
xor
mov
cmp
in
ficoml
ret
in
fadds
das
dec
fcomps
xchg
mov
xor
xchg
fidivl
insb
xchg
add
dec
cli
and
pop
cmp
mov
ror
add
lods
mov
fnstcw
lods
lods
cmp
shrl
push
push
cmp
lods
fcoml
in
pop
icebp
jnp
jns
mov
xchg
out
je
stos
add
and
cmp
js
pop
lods
daa
mov
imul
test
out
cmp
out
into
out
sbb
movsb
scas
or
jmp
out
dec
jp
test
adc
nop
and
dec
lcall
fiaddl
dec
mov
cmp
sbb
inc
mov
cmp
ljmp
cs
fs
push
rolb
movsl
jbe
sbb
xor
iret
push
stc
adc
mov
mov
nop
daa
cmpsb
ror
cli
push
cmpsl
add
adc
std
xor
data16
mov
popa
sub
jns
mov
mov
mov
addr16
data16
jge
ret
jge
and
mov
pop
cmp
pop
call
jno
jge
stos
mov
sbb
inc
jg
imul
sub
add
xchg
push
scas
push
sub
lods
mov
mov
xchg
xor
nop
fildl
aad
push
adc
mov
cmp
clc
pop
test
mov
addb
mov
ss
arpl
mov
mov
ss
pop
int
xorl
push
inc
aad
push
pop
sub
imulb
test
int3
out
rdpmc
push
orl
arpl
xchg
scas
ljmp
sti
sbb
loopne
xchg
clc
in
sub
cli
dec
mov
adc
shrl
enter
inc
mov
test
sub
push
scas
and
or
mov
ja
insb
adc
sbb
xor
mov
fsubl
xchg
mov
jle
or
stos
iret
sbb
in
mov
push
mov
mov
xlat
sub
lea
mov
fsubr
push
insl
insb
imul
mov
int
sar
fmull
fnstenv
cld
mov
sbb
out
and
mov
adc
ja
dec
jno
pusha
sub
nop
gs
cli
jae
mov
in
sti
or
stos
adc
xor
adc
notl
cs
adc
es
dec
mov
out
xchg
push
out
sbbb
dec
ret
aaa
mov
and
lret
mov
mov
insl
data16
aaa
adc
stos
outsl
mov
mov
lods
xchg
xchg
jns
xor
push
stos
in
leave
xorl
xchg
lods
rol
fwait
outsl
jno
lahf
aam
dec
cmpsb
lahf
push
mov
filds
mov
push
fistps
jnp
movsb
mov
add
xchg
cmp
movl
lods
add
pop
imul
arpl
call
es
aaa
faddl
cltd
scas
sbb
movsl
or
sbb
gs
and
dec
sbb
push
scas
sub
mov
sub
inc
mov
insl
inc
jg
xchg
mov
pop
imul
addb
push
ret
cli
inc
movsl
mov
xchg
and
mov
xlat
xchg
jmp
inc
adc
rcrl
jmp
add
mov
or
lahf
cmp
out
pop
call
jne
and
in
pop
mov
cmpsl
movsl
aam
daa
ljmp
xor
into
mov
lods
cmp
and
dec
inc
xor
adc
xchg
lds
in
cmpl
pusha
int
das
inc
inc
push
gs
xchg
dec
in
ret
rcr
push
pop
loope
pop
pop
out
xlat
sti
mov
cmc
in
push
mov
or
xchg
pop
cmp
mov
mov
cs
cmp
jns
pop
xlat
or
jge
outsb
cmp
sar
icebp
negl
popf
arpl
mov
test
adc
insb
fimuls
sub
inc
push
and
add
sub
inc
jae
in
sahf
por
add
out
stc
loopne
imul
dec
repz
mov
iret
repz
cmp
and
push
xchg
out
nop
jp
mov
pop
imul
mov
lods
and
sub
lea
iret
stos
cmp
out
dec
pop
push
fs
push
popa
ret
push
enter
mov
jmp
xor
sbb
xchg
push
xchg
faddl
shll
outsb
dec
inc
push
insb
int3
sti
pop
add
cmp
cmp
cmp
push
dec
stos
movsb
adc
or
movsb
and
jb
mov
pushf
jno
lahf
or
stc
ret
and
sub
es
mov
fcoml
in
dec
adc
adc
inc
addr16
push
xchg
iret
push
popf
xchg
loope,pn
xchg
rclb
pusha
stc
loope
mov
cmpb
arpl
mov
adc
cmp
or
push
and
inc
mov
pop
cmpsb
outsl
push
mov
cltd
pop
xor
mov
mov
aam
mov
je
cwtl
jno,pn
out
xchg
leave
scas
xor
push
push
jo
adc
xchg
inc
gs
mov
push
cmc
mov
xor
pop
das
movsb
shl
ret
xor
mov
cli
in
cmp
icebp
stos
xor
jbe
adc
pop
pop
nop
bound
add
push
pop
stos
push
les
js
and
pushf
insl
shll
lock
dec
fistl
mov
adc
popa
pop
xchg
push
pop
sbb
add
push
jno
and
mov
je
sub
pop
pop
sub
insl
dec
xchg
and
and
or
insl
stc
or
leave
inc
ds
inc
clc
sub
jg
mov
jne
mov
ja
popf
mov
mov
sbb
ret
fwait
cld
insb
shr
arpl
pusha
inc
sub
push
ficomps
cmp
lret
clc
pop
inc
outsl
mov
cs
lods
cmc
push
mov
push
mov
mov
push
iret
aas
fcomp
in
pop
inc
push
mulb
arpl
push
cmp
xlat
xchg
stc
jmp
imul
nop
push
dec
call
js
out
inc
adc
xchg
mov
mov
jns
in
fstps
test
mov
inc
mov
mov
or
inc
xor
dec
les
dec
adc
adc
and
inc
fldl
dec
push
lods
inc
cmpsb
mov
hlt
cs
jle
adc
adc
push
dec
sti
lea
fmuls
mov
aam
adc
mov
sub
lret
lods
fisubrs
mov
cmpsb
mov
sub
xchg
mov
out
push
repz
aad
sahf
mov
fcomp
aad
adc
rcrb
push
dec
ds
jb
cmp
push
negb
imul
jle
push
popf
dec
pop
inc
xor
push
pop
cld
jb
fsts
inc
jne
push
jb
or
inc
popa
mov
xor
mov
into
dec
pop
pusha
mov
aam
dec
mov
frstor
mov
push
setge
mov
jg
sbb
test
ficoml
aam
jb
inc
repz
fwait
mul
cmp
stos
leave
rclb
cmp
je
sarb
add
push
xlat
adc
or
pop
sub
pushf
sahf
int
adc
ds
push
xor
lret
and
js
jbe
mov
popa
jge
int
add
fcmovnb
icebp
fmuls
setb
or
and
movsl
mov
jmp
xchg
inc
or
cld
xor
dec
xlat
leave
icebp
mov
jno
xchg
rcrb
xchg
lea
cli
jmp
out
jp
xor
mov
enter
clc
dec
mov
xchg
inc
push
cmp
je
repz
icebp
negb
or
pop
sbb
jns
retw
push
or
imulb
fwait
pop
cmpsb
dec
mov
lds
jns
cmp
dec
lods
sti
xchg
out
mov
xchg
xchg
addr16
ja
fsubr
bound
rcll
jne
mov
mov
mov
pop
shll
orl
jb,pt
adc
lret
jne
xor
add
in
xor
movsl
icebp
fnsave
in
or
cmc
notl
daa
pushf
gs
pop
loope
sbb
aad
repnz
sbb
in
fldenv
lret
dec
sub
repnz
loopne
mov
mov
into
je
aam
and
scas
jge
aas
adc
jno
nop
pusha
dec
push
pop
and
arpl
stc
push
xor
je
popl
fs
out
push
cmp
jo
cwtl
mov
lcall
movsl
ret
lahf
ljmp
sub
inc
mov
xchg
hlt
bound
divl
lret
push
loop
push
loopne
mov
dec
mov
call
adc
push
jge
cmp
negb
inc
pop
pop
out
push
jne
ja
inc
xchg
mov
fistpll
push
test
shll
push
addb
pop
dec
out
xchg
iret
lret
or
jmp
mov
push
insl
andb
out
imul
adc
push
cmpsl
mov
jge
in
adc
es
gs
push
mov
push
das
repz
jmp
fcmovne
push
icebp
inc
popa
mov
fincstp
loopne
pop
scas
inc
enter
lret
loope
in
lds
or
repnz
mov
mov
scas
lret
movsl
negl
sbb
dec
cwtl
pop
out
jp
or
mov
push
cmpsl
push
and
movsl
add
pop
add
adc
mov
dec
flds
sbb
mov
lock
push
test
sbb
les
aam
cmp
call
icebp
rcrb
aas
cmc
fbstp
ss
stos
mov
pop
addr16
iret
add
inc
cmp
aam
into
xor
movsb
enter
xor
mov
sti
inc
imul
mov
scas
pop
ljmp
dec
pushf
cmp
cltd
pop
ljmp
adc
mov
enter
sub
push
sub
daa
inc
sbb
jae
pop
in
push
xchg
cmp
pop
shl
sahf
dec
dec
fwait
int3
stos
cmp
fnop
call
mov
ds
mov
int
scas
mov
daa
inc
dec
icebp
pop
xor
add
insb
adc
mov
lods
pop
lods
pop
mov
js
cmp
cmpsb
xor
into
ss
add
roll
movsb
push
pop
pop
push
jo
out
lods
mov
inc
mov
cmpsb
pop
xor
scas
xchg
incb
push
fnstcw
out
stos
inc
addb
sbb
push
dec
sub
xchg
mov
mov
xchg
mov
sbb
mov
lds
ret
xor
flds
push
cmp
mov
dec
movsl
cmp
stos
or
inc
push
mov
sub
mov
movsb
jo
loop
push
jle
dec
fnsave
cmpsb
mov
sahf
int3
push
fldenv
inc
push
xor
xlat
jle
ja
inc
mov
xchg
sti
mov
pop
shll
frstor
cltd
jae
lret
add
mov
jl
out
mov
lods
mov
and
test
mov
mov
movsl
pop
in
cmc
xchg
mov
push
popl
je
add
repnz
insl
mov
clc
sub
push
cmpsl
fstpl
pop
sub
adc
xchg
inc
pop
inc
xchg
mov
movsl
popa
adc
rcrl
loope
insb
mov
daa
js
cmp
in
mov
xchg
aad
aas
cli
add
xor
mov
cmc
push
pop
je
pop
jo
sahf
not
popa
cmc
ljmp
stos
jle
mov
push
test
push
das
jle
out
mov
imul
sub
ss
mov
shl
nop
scas
cmp
and
call
mov
iret
push
push
data16
or
sbb
mov
stos
adc
mov
xlat
notb
pop
lahf
sub
ret
shl
mov
clc
adc
pop
or
iret
mov
cwtl
mov
xchg
loopne
andl
aaa
adc
stos
insb
aad
call
popa
std
orl
and
cmpsl
dec
inc
in
push
rol
dec
addr16
inc
sbbb
jle
dec
jg
dec
lods
in
xlat
dec
push
sub
jb
in
sub
xor
call
pop
and
mov
adc
mov
test
hlt
int3
jmp
scas
in
stos
inc
push
xchg
fstp
xchg
inc
outsb
add
ja
push
sbb
cmp
scas
jnp
ss
stos
lcall
insb
add
jl
sbb
cmp
std
cmc
inc
mov
pop
cli
xor
sahf
stos
out
ja
dec
jl
das
xor
and
test
adc
push
xchg
push
fmull
mov
xchg
xchg
jmp
xchg
andb
stos
or
dec
loope
sub
int3
aas
xor
js
cmpsl
arpl
fldt
pop
adc
sbb
test
popf
stos
lcall
xlat
pop
sbb
add
inc
adc
xor
and
pop
cld
xchg
fwait
jl
clc
jb
cli
dec
imul
stos
fmuls
cmp
sbb
cwtl
movsbl
fidivl
repnz
ljmp
in
inc
sbb
das
mov
imul
xlat
mov
add
roll
inc
cmp
pop
sbb
mov
mov
enter
xor
mov
pop
mov
add
dec
xchg
push
test
xor
jns
xlat
stos
push
xlat
push
ljmp
in
aam
cmpsl
push
add
push
xchg
mov
fisubl
int3
xchg
gs
in
cmp
inc
dec
js
cld
jbe
mov
repnz
in
in
test
fnclex
adc
rcrb
mov
fisubrl
lods
stc
or
pusha
loop
mulb
jb
ja
daa
add
jno
xchg
or
cmp
subb
mov
xor
inc
stos
dec
and
test
mov
dec
xchg
enter
pushf
nop
adc
pop
shll
dec
imul
or
ss
stos
filds
cmp
mov
cs
jnp
xchg
imul
pop
cmp
and
and
bound
add
out
inc
or
cltd
pop
insl
aad
jne
adc
fildl
or
aas
push
aam
or
lcall
in
dec
imulb
divl
push
rclb
insl
aad
mov
lods
inc
out
jp
add
lahf
mov
jge
mov
movsl
fistl
aaa
or
or
xor
jmp
testl
mov
test
dec
mov
add
ret
push
cmpsl
mov
cli
shlb
scas
sub
movsl
add
cmp
addr16
repnz
addb
xor
sub
sbb
ds
aam
cs
lea
sbb
push
cmp
mov
xchg
dec
adc
inc
mov
mov
sbb
pop
inc
sarl
ss
ret
sbb
xor
cmpl
sub
stos
mov
fistpll
add
shr
sbb
mov
aaa
lds
adc
jae
sub
sub
daa
jg
cmpsb
andl
fiaddl
add
andb
dec
outsb
aaa
jno
adc
push
int3
push
out
push
cmp
mov
rorl
mov
out
ds
test
push
popf
push
xorl
jp
push
adc
leave
nop
sbb
dec
mov
sbb
push
cs
ret
pop
pop
lea
dec
cwtl
push
mov
cmp
leave
mov
push
dec
bound
jae
out
clc
fwait
and
scas
or
dec
sahf
sbb
in
push
push
js
dec
pop
jge
aaa
push
inc
rorl
cmc
xorl
popa
imul
je
cs
or
fcomps
jle
insl
mov
cmpsb
cmp
cs
mov
ret
xchg
mov
insl
sbb
stos
or
notb
push
ja
jae
jnp
pop
dec
insb
inc
jmp
stc
insl
cmp
jge
imul
inc
stc
push
add
xchg
std
out
xchg
lds
pusha
imul
inc
in
stos
and
mov
dec
popf
shll
push
xchg
cwtl
cmp
push
out
addr16
or
imul
jbe
add
cmpsl
ljmp
push
cmc
pop
mov
shrb
stos
inc
les
fisubrl
outsl
push
xchg
aam
scas
daa
jbe
xchg
adc
adc
sbb
adc
inc
dec
push
outsl
inc
cmp
iret
xchg
mov
pop
ljmp
cmpsl
pop
jnp
dec
out
pop
add
inc
dec
mov
or
sub
divl
adc
push
pop
add
pop
loop
dec
or
enter
cli
in
insb
inc
jo
push
int
push
daa
xchg
add
pop
add
pop
dec
stc
pop
in
ljmp
adc
in
xchg
in
or
sub
or
xchg
add
or
jne
imul
xor
rcl
mov
loop
inc
inc
xchg
das
das
xchg
push
or
sahf
sub
andb
sahf
sbb
push
jle
js
jle
gs
sahf
mov
sub
scas
pop
sbb
and
cli
and
inc
adc
or
and
lret
call
sbb
mov
out
nop
pop
out
or
pop
mov
sub
shl
fimull
es
in
scas
call
and
movsl
cmp
je
movsb
pushf
in
std
sbb
js
out
pop
fidivs
add
push
mov
movsb
loope
pop
or
or
push
push
scas
add
push
popf
push
jp
mov
in
iret
sahf
negl
add
sbb
out
andnps
xor
add
hlt
aaa
cmpsl
test
cmp
fcmovne
xchg
sub
jo
mov
sbbl
daa
cli
mov
loope
in
jo
sbbl
iret
subb
roll
ss
jb
jb
out
stos
add
mov
pop
repz
pop
leave
mov
cmpsl
nop
movhps
addl
cli
daa
cmpsb
add
xor
push
mov
mov
out
rclb
xor
sub
stos
mov
jb
pushf
lock
push
aas
cmp
pushf
cmp
push
push
je
out
pushf
ds
in
stc
aaa
rcrb
jg
xor
push
mov
add
mov
test
jb
loope
dec
call
sbb
lcall
pop
les
cmp
sub
lock
fsubrl
sub
and
cs
aad
mov
lcall
or
jle
cmp
mov
test
outsl
cld
jo
stc
adc
mov
dec
fcompl
pop
xchg
sub
and
stos
jne
ss
jmp
daa
jae
jmp
mov
gs
sub
push
sti
iret
adc
popf
cltd
mov
xor
adc
lret
out
push
dec
es
push
mov
xchg
cltd
cmp
push
xchg
push
sub
dec
popa
jae
mov
push
popa
lret
imul
push
sahf
sub
cwtl
sub
dec
adc
push
lods
mov
and
imul
mov
adc
jle
int3
sti
test
dec
sub
cmp
int
outsl
push
xchg
loop
pop
push
int3
or
imul
pop
xchg
and
jp
daa
xchg
cld
dec
aas
out
test
aad
aam
leave
in
sarl
out
or
loop
inc
lret
loop
pop
stos
cmp
push
add
push
imul
mov
dec
pop
push
pop
sbb
jmp
sub
cmp
les
pop
pop
jo
jp
dec
or
mov
test
in
into
divb
fistpl
scas
ss
or
lea
ror
jno
cltd
loope
pop
sub
aad
jmp
cmpsl
push
inc
push
push
sub
pop
pop
cld
jg
mov
in
push
sub
imull
fcompl
insb
pop
insl
gs
lods
daa
sub
adc
or
inc
subl
inc
test
xchg
xor
cmp
xor
xor
mov
aas
and
roll
push
sti
scas
xchg
jne
or
mov
out
mov
xor
and
lds
pop
jp
adc
sub
rcrl
dec
loop
and
xchg
sbb
dec
cmpsl
inc
cmp
das
loop
cltd
sub
std
aas
push
dec
sbb
clc
jne
mov
add
cmpsb
pusha
and
sbb
aad
and
xor
cmp
imul
push
stos
les
js
lret
jns
ss
cmp
xchg
dec
or
push
cmp
and
and
pop
push
jle
adc
mov
or
das
in
dec
push
mov
pusha
jnp
jbe
leave
jns
mov
mov
push
dec
cmp
ss
pusha
and
or
daa
test
repnz
pop
cmp
mov
pop
cmp
out
xlat
mov
lock
inc
pop
jge
movsb
jg
je
out
cmp
in
jmp
cmpsb
push
pusha
sub
jle
jae
dec
cmp
adc
insl
lret
or
lret
call
mov
xchg
or
jb
push
adc
jle
cld
stos
add
std
push
pop
pop
dec
loop
stos
insb
add
aaa
aam
jmp
mov
xchg
aad
mov
and
and
mov
mov
fsubr
test
xchg
outsl
xchg
and
add
mov
fidivrs
lds
insb
inc
scas
add
adc
cmp
jae
clc
lcall
inc
sbb
inc
aas
push
pusha
cmp
mov
fucomip
test
xor
iret
gs
js
loope
js
fcoml
leave
xchg
and
sub
mov
inc
bound
xchg
pop
push
cwtl
sub
push
xor
pop
out
dec
push
pushf
mov
mov
push
in
ss
mov
jo
sbb
lret
jmp
sub
adc
push
push
jle
cld
mov
outsb
rcrb
and
jne
filds
dec
or
adc
xor
sub
and
jle
or
dec
xchg
ja
xor
cmpsl
ret
ficomps
frndint
sub
mov
js
inc
mov
lds
es
xchg
adc
lcall
inc
pop
adc
lds
lods
cli
loop
stos
xchg
jl
jge
cmpsl
int3
and
aaa
fld
add
and
cmpsl
mov
iret
nop
popf
and
rcll
sub
dec
and
dec
cltd
data16
je
or
xor
sbb
shll
shrb
push
add
dec
adc
or
mov
jns
mov
cmpsb
xchg
mov
mov
sub
cmp
mov
jne
and
cmpsb
pop
aad
insl
outsl
insb
and
xor
or
and
popf
sbb
repnz
cmpsl
into
fists
lret
xor
dec
xchg
das
inc
xchg
push
ja
lea
in
aaa
sti
aad
xchg
and
aas
pushf
xchg
cmpsb
imul
andl
fidivrs
stos
ret
test
push
ja
movsl
cmp
push
in
xchg
xchg
fcomps
xor
push
xor
or
in
adc
xchg
dec
insl
dec
dec
loop
pop
pop
loope
ljmp
das
aad
mov
int3
xchg
lret
movsl
cwtl
lcall
sar
mov
jb
pop
xor
jno
je
xchg
shrb
sub
in
inc
inc
pop
lcall
mov
les
stc
cmp
decb
jmp
xor
dec
fsubs
in
jmp
pop
iret
jbe
gs
test
ret
dec
cltd
scas
icebp
or
nop
loop
dec
sub
loope
loope
dec
in
and
pop
sbb
js
call
mov
dec
repz
push
cli
jne
insb
jle
jmp
add
mov
pop
loope
test
ror
pop
pusha
rclb
cmp
stos
or
mov
xchg
mov
jmp
das
adc
push
mov
gs
adcl
lods
movsb
psrlq
incb
dec
fildll
into
and
mov
inc
mov
or
mov
rep
push
andl
aam
mov
sbb
add
add
fstpl
bound
xchg
and
push
test
jl
fldenv
mov
movl
sti
in
add
cmc
lods
aam
mov
stos
stos
loope
and
ss
mov
inc
xchg
lea
test
and
cltd
sub
cmp
inc
orb
adc
arpl
aas
add
fnsave
dec
fcmovbe
cmp
cmpsb
lock
xor
inc
mov
aas
test
jae
or
testb
or
mov
in
cmp
gs
add
mov
push
pop
sub
lahf
dec
xchg
sbb
scas
cmp
cltd
pusha
pop
mov
mov
add
jecxz
fistpl
adc
mulb
xlat
mov
and
stos
dec
enter
cs
sbb
xor
jle
jp
cwtl
call
pop
andl
sahf
mov
roll
or
jo
cs
in
inc
pop
outsl
pop
cmp
dec
test
xchg
mov
mov
jg
mov
xchg
pop
dec
mov
into
pushf
push
dec
in
clc
loope
mov
and
jo
testl
out
mov
mov
mov
mov
push
pop
scas
push
out
das
rcrb
popa
jp
jbe
mov
mov
or
int3
mov
in
mov
mov
adc
sbb
outsb
mov
stc
adcl
push
adc
out
jg
js
insl
ds
outsl
pop
call
inc
aam
ret
cmpsb
outsb
js
sar
cmp
ljmp
sub
fildl
dec
ficoml
aad
psraw
add
jo
sar
mov
jae
arpl
mov
div
jl
daa
mov
js
lods
adc
out
lds
jmp
clc
mov
movsb
or
mov
xchg
mov
inc
loopne
out
inc
mov
dec
shll
int
jle
or
mov
in
mov
jmp
ret
and
cmpsl
cmp
inc
xchg
insb
data16
js
fsubrs
adc
jg
cmp
sub
dec
mov
aaa
cmp
inc
jne
inc
sub
add
inc
push
loopne
fcomps
aam
lahf
add
xchg
push
scas
inc
mov
sar
pusha
mov
and
sbb
pop
mov
in
push
mov
mov
ja
jle
sti
out
inc
jns
sbb
jno
mov
js
shll
cmp
cmp
aad
push
sarl
mov
frstor
jmp
lds
xchg
xor
divl
sub
imul
sti
scas
push
pushf
pop
sarb
dec
sbb
lds
mov
xlat
sysexit
movsb
mov
lods
punpckhdq
jno
jp
lcall
xor
push
xchg
jp
shl
add
and
ret
jbe
xchg
inc
mov
xor
pusha
aas
xchg
inc
push
mov
das
push
pusha
lds
rclb
mov
rol
insb
adc
enter
and
jb
xchg
in
lahf
and
arpl
ljmp
pop
sub
imulb
ret
nop
clc
fimuls
xchg
test
daa
shrl
or
pop
call
int
mov
pop
cs
les
pop
and
mov
mov
and
sbb
or
add
aas
mov
add
adc
inc
scas
inc
cs
rolb
jne
mov
loope
mov
scas
nop
cmpsl
icebp
outsl
loope
sub
push
sahf
pushf
mov
pop
mov
dec
mov
mov
rcr
addr16
addr16
xor
push
aas
cmp
out
xchg
xor
lahf
inc
push
ljmp
xchg
pop
insb
push
pop
xor
shr
addr16
bound
jecxz
sub
inc
stos
xor
int3
mov
dec
leave
dec
or
xchg
cmp
imul
add
cli
push
and
inc
and
data16
cmp
pusha
popa
sbb
mov
mov
pop
xchg
ret
jmp
popa
sub
fistl
pop
lcall
pushf
mov
push
xor
out
mov
pushf
or
pop
mov
repnz
or
push
push
xchg
ja
iret
sbb
mov
pop
add
lods
mov
sti
test
ss
imul
loopne
ret
or
insb
add
loop
test
lret
push
int
or
js
add
data16
outsb
ss
pop
movsl
push
enter
bound
adc
jp
inc
cmp
inc
js
enter
leave
mov
loope
repnz
lds
cs
sub
mov
xchg
mov
call
scas
xchg
push
mov
or
jns
xor
jecxz
orb
adc
cli
xorb
je
xchg
xor
inc
repz
cmp
stos
cmpsl
fcoml
call
jno
fsubrs
lret
cltd
fdiv
das
sbb
loopne
aas
loop
repnz
sbb
push
icebp
in
mov
ljmp
push
into
or
lods
mov
mov
xchg
cltd
fcoms
ret
push
inc
mov
add
sub
pop
fisubrl
xor
push
ss
clc
push
jmp
pop
xchg
mov
ficoms
enter
pop
dec
jecxz
leave
xor
fdivrl
int3
sub
or
out
xchg
fsubl
cmp
fs
mov
das
lcall
pop
iret
fidivs
xchg
sub
mov
push
add
cmpsb
cwtl
dec
mov
jae
mov
scas
inc
sahf
or
adc
js
mov
out
mov
xchg
mov
add
imul
leave
das
sbb
push
es
pop
xor
cmp
stc
popf
sub
xor
or
movsb
icebp
bound
dec
mov
push
lret
sub
xor
sub
jbe
jbe
mov
jo
sub
or
mov
icebp
fbld
js
outsb
push
jae
cmc
xor
push
repz
jl
std
stos
xlat
das
aam
movsb
dec
inc
jp
mov
int3
pop
cltd
out
pop
push
cltd
popa
idivb
xor
sub
lock
mov
aam
jns
sub
cmpsb
jecxz
dec
imul
add
adc
mov
pop
dec
aam
data16
jl
xchg
pushf
lds
insb
push
push
lret
xchg
idivb
sub
sub
lret
mov
not
mov
dec
aaa
sbb
mov
mov
add
lock
sbb
mov
add
inc
arpl
out
xchg
cmp
sbb
mov
sbb
lret
cmp
sub
icebp
dec
mov
int
ja
mov
jle
test
sarl
xor
pushf
push
inc
add
js
xchg
push
js
ror
push
xchg
sbb
cmpsb
cmpsl
insl
cmpsb
dec
mull
pop
dec
sldt
or
and
fld
dec
add
sub
lds
mov
pop
adc
and
das
sub
adc
cmc
rcl
add
orb
inc
mov
aaa
pop
lock
mov
in
dec
jecxz
sub
nop
or
mov
pop
loopne
xchg
pop
jnp
insl
arpl
mov
aas
jle
int3
lret
xor
push
push
jl
in
mov
xlat
mov
fwait
outsb
inc
cmpsb
dec
jbe
mov
mov
cmp
pop
lret
ficomps
cltd
les
in
cmp
mov
push
dec
xor
add
pop
inc
mov
mov
cmp
mov
xlat
or
push
ja
decb
mov
ja
jg
mov
ds
jle
mov
jg
leave
in
mov
lds
sbb
jno
mov
mov
ss
sub
dec
cwtl
dec
or
xchg
sti
test
xchg
jae
hlt
in
lds
pushf
es
das
rclb
adc
dec
das
and
sbb
add
dec
pop
scas
stc
ds
test
lret
mov
addr16
pop
cmp
es
aas
inc
rcrb
cld
aad
mov
fmull
inc
inc
or
imul
or
push
mov
or
pop
add
mov
xchg
jne
sub
inc
xchg
ljmp
lret
repz
mov
icebp
mov
das
add
sub
and
mov
cmpsb
push
pop
lock
fdivr
xor
add
aad
mov
in
xchg
lcall
cs
cmc
jl
test
inc
add
arpl
mov
iret
mov
push
jmp
dec
sbb
outsl
xchg
lea
test
adc
and
in
movsl
jmp
adc
lods
scas
mov
inc
stos
pop
xorl
jp
dec
cmpsb
incl
jecxz
and
xchg
jecxz
leave
inc
popl
adc
xor
fmuls
sbb
sub
orb
push
rclb
dec
sub
lods
cmp
xchg
mov
push
push
push
or
pop
aas
fnstcw
cmp
aad
in
jmp
or
jg
cmp
repz
sbb
mov
jbe
jb
inc
sbb
and
jecxz
jmp
sti
repnz
mov
lock
dec
push
mov
xchg
movsl
mov
imul
test
lds
stc
loopne
int
das
xor
outsl
mov
enter
out
rol
pop
add
leave
icebp
nop
sbb
adc
cs
fwait
sub
sarl
mov
add
cmp
jno
pusha
out
je
cmpsb
add
fwait
or
cwtl
sbbl
push
imul
sbb
das
repnz
daa
sbb
push
je
inc
cmpsb
nop
cmpsb
cmpb
lea
jmp
mov
cltd
jecxz
movsl
ss
pushf
imul
dec
fstpt
adc
xchg
insl
push
addr16
repnz
into
rsqrtps
insb
movl
sub
push
xor
mov
cltd
sbb
pop
add
fists
scas
repnz
inc
aas
mov
push
shrl
push
add
aas
fcompl
push
popa
into
jge
icebp
cmp
out
ds
sub
and
enter
lods
cmpsb
cmp
out
xor
popa
lods
sahf
cli
lods
in
jle
sbb
pushf
mov
mov
mov
aas
idiv
cmpb
aaa
push
inc
mov
mov
aad
xchg
ret
inc
fsubs
sbbl
test
sub
push
and
arpl
es
mov
push
sbb
cmp
pop
int3
test
pop
dec
pop
and
pop
cmp
adc
jmp
mov
gs
cmp
lods
and
icebp
adc
and
xchg
sbb
jmp
add
bound
jmp
or
mov
mov
mov
lock
clc
pushf
fimull
bswap
mov
mov
and
mov
outsl
int
inc
push
pop
mov
xlat
adc
fstps
aam
js
pop
and
stc
push
push
les
incb
test
or
out
cmpsb
outsl
push
loopne
jbe
sub
mov
pop
sahf
insb
sub
js
cmpsb
push
enter
jg
test
imul
out
push
ljmp
lahf
mov
imul
xchg
lock
scas
imul
pop
and
add
or
scas
mov
shrb
push
shlb
push
out
push
mov
lods
stc
sub
xchg
pop
std
cmp
mov
call
ret
fwait
gs
rcr
pop
adc
fcomps
xchg
mov
sahf
lcall
push
enter
sub
test
repnz
cmp
adc
xchg
sti
and
subb
jns
ds
mov
or
mov
or
mov
sbb
repnz
subb
cmp
cli
jmp
lcall
aas
arpl
inc
fdiv
xor
ret
add
push
jne
je
pop
stc
cmpsb
push
adc
outsl
mov
sti
xchg
xchg
adcl
rcrl
or
pop
inc
in
lahf
jl
outsb
cwtl
push
mov
mov
leave
idivl
mov
sub
xor
or
cmp
lcall
dec
mov
cmc
dec
xchg
out
sub
orl
dec
data16
or
ficomps
adc
into
ret
mov
jmp
and
pushf
jae
pop
cmp
inc
leave
jnp
mov
mov
fcmove
add
stos
xchg
push
cli
scas
scas
negl
add
clc
xchg
jecxz
je
mov
mov
adc
loopne
cmp
dec
jp
mov
sub
mov
jns
jbe
mov
jbe
jae
mov
push
cmp
shrb
in
jae
fsub
ficompl
xor
mov
das
rcr
inc
push
in
es
push
scas
rcrb
mov
lea
aad
add
shr
jo
or
or
fsubrl
jmp
idivl
sbb
pop
or
jmp
mov
mov
out
sbb
mov
mov
sub
sub
fdiv
mov
add
mov
xorl
movsl
popw
adc
mov
sub
add
mov
std
mov
movsl
stc
mov
shlb
cld
movsl
icebp
imull
jae
and
addr16
cmpsl
cltd
sbb
pop
dec
jle
in
mov
add
pop
orl
and
insl
test
xor
mov
adc
jae
pusha
mov
sub
loope
push
push
mov
loope
pop
dec
adc
add
xor
sub
push
xor
xor
xchg
adc
and
push
pop
xchg
push
xor
add
xor
scas
push
inc
clc
push
mov
mov
mov
test
mov
bound
mov
pushf
add
ret
test
or
mov
jge
cmp
dec
sub
sub
in
outsb
jmp
mov
cmp
or
xchg
in
int
xchg
movsl
fdivl
xor
aad
fstps
or
adc
xlat
xor
inc
mov
stos
inc
les
mov
popf
adc
outsb
movsl
mov
xlat
idivb
mov
fimull
push
add
dec
xor
fdivl
xchg
jno
fs
push
mov
mov
push
out
ja
xchg
lods
jle
stc
cmpsl
pop
xchg
ds
addb
repz
pop
sbb
call
fstpt
out
je
jl
test
inc
call
xor
fbstp
lahf
cli
scas
mov
sbb
movsl
pop
jne
mov
scas
jg
cmc
test
addl
jg
loopne
bound
mov
dec
in
cs
or
add
enter
cmp
shrl
fs
mov
or
cs
repz
pop
xorb
out
mov
fistpll
adc
adc
add
test
push
sbb
jmp
fcomps
push
xchg
data16
js
sar
push
lock
call
sti
add
xor
add
mov
fmull
sahf
mov
mov
filds
popf
dec
adc
lods
push
inc
xchg
lds
shll
cmp
stos
pop
lds
dec
test
or
add
add
ud2
pop
out
mov
xchg
cld
scas
push
test
inc
lock
inc
sbb
adc
pop
in
pop
ljmp
sahf
adc
xorb
xlat
jae
test
mov
test
add
repnz
shl
into
aaa
std
xchg
lret
mov
mov
lea
push
fs
fmuls
mov
dec
xor
lret
roll
out
jecxz
mov
popa
xor
es
call
mov
pusha
insb
repz
fildll
mov
cmp
jge
aad
mov
cli
pop
fcmovnbe
test
cwtl
pop
ljmp
adcb
or
dec
sbb
mov
jnp
fwait
cmpsl
push
mov
shlb
shlb
outsl
popf
cltd
outsl
push
pop
aas
pop
add
jb
pop
jns
and
dec
sbb
jmp
mov
cmpsl
xchg
shr
shl
mov
in
xchg
movsb
dec
test
insl
xchg
lea
shll
hlt
jg
mov
xchg
xor
jns
sbb
scas
int
mov
std
cmp
sti
in
dec
leave
pop
inc
jbe,pn
jle
mov
inc
mov
dec
outsb
push
in
pushf
fstps
adc
in
push
out
add
cld
insl
nop
mov
jecxz
in
orb
lock
add
test
adc
push
pop
mov
mov
cmp
and
adc
int
mov
jle
mov
cmp
inc
cwtl
xor
punpcklwd
xor
mov
xor
test
lock
mov
jge
aad
xchg
mov
mov
out
inc
sub
gs
into
neg
xchg
mov
pop
mov
and
fmull
and
into
cmpsb
cwtl
rcrl
mov
jecxz
ss
sub
push
push
lret
push
or
rcll
and
dec
ffreep
add
in
lcall
stos
jg
fwait
xor
popa
adcl
jge
ds
push
inc
mov
lock
push
mov
mov
int3
outsb
pop
jo
das
xor
or
inc
sub
jb
pop
fs
pop
cli
mov
int3
push
xor
sub
lds
jl
enter
xlat
sbb
dec
pop
cwtl
sti
cwtl
mov
sub
rcl
sub
ljmp
hlt
xor
xor
lods
cmpl
dec
jb
adc
ficomps
cmpsb
dec
mov
dec
add
sub
inc
stos
out
in
rcr
insl
hlt
lahf
movsb
or
pop
les
mov
push
mov
push
mov
pop
imul
cmpsl
pusha
mov
or
scas
je
lahf
pop
xchg
pusha
jmp
lret
cmp
cmp
push
popf
pop
add
adc
pushf
mov
gs
pop
push
outsb
imul
or
int
movsb
sti
adc
mov
es
mov
jno
das
push
aas
dec
imul
sahf
test
ret
gs
jo,pt
sbb
int3
jmp
lods
inc
push
and
adc
aad
pop
cmc
sbb
sub
or
leave
scas
psubusw
lods
sub
mov
lea
cmp
pop
scas
adc
sub
into
fwait
nop
jnp
jmp
scas
sbbb
push
xchg
mov
dec
fwait
in
lods
push
push
add
cltd
sbb
jg
ret
mov
add
push
shll
push
test
and
mov
clc
imul
push
sub
sbb
js
push
push
sbb
imul
data16
repnz
jl
inc
fcoml
lret
cmc
cltd
cli
loopne
cmpsb
test
jge
loop
pop
mov
das
push
aas
or
repz
mov
js
and
xor
sub
fists
sbb
arpl
out
add
call
push
dec
std
fisubrl
int3
cmp
and
sahf
xchg
lcall
fwait
xlat
push
std
ljmp
inc
notl
pop
hlt
imull
jle
cld
push
xchg
pop
mov
lcall
sahf
jmp
imul
cli
mov
dec
push
enter
sbb
rorl
jmp
push
sub
test
mov
imul
xor
pop
scas
or
adc
push
movsb
mov
cltd
pop
and
add
sub
into
mov
mov
mov
adc
sub
loope
movsb
mov
push
daa
push
call
cmp
add
and
xchg
or
sub
jbe
sbbl
sub
nop
hlt
icebp
dec
dec
cmpsl
cmp
lret
xchg
lahf
shrl
stos
push
pop
daa
sub
adcl
mov
pop
jp
mov
pop
stc
cmpsl
xor
cmc
les
cwtl
es
xchg
fsubr
out
or
sarb
push
push
jb
xchg
xchg
ljmp
mov
mov
cwtl
xor
xor
xor
dec
mov
aas
rcr
loope
lahf
in
jmp
les
je
loope
inc
fnsave
arpl
lods
insl
out
ret
mov
and
loop
pushw
jo
inc
jp
test
inc
outsl
mov
mov
and
cmp
jmp
sti
shrl
add
int
and
mov
adc
jae
cmp
sarb
push
cltd
clc
lret
mov
push
cwtl
dec
jne
setno
dec
cld
ss
int
or
push
jge
pop
dec
jbe
aam
dec
cmp
jp
adc
cmp
jecxz
insb
cmp
mov
outsb
adc
jl
push
lds
lods
fadd
ret
les
sub
cmpsb
data16
aam
pusha
frstor
fwait
push
adc
les
lahf
or
mov
add
lcall
sar
sbb
hlt
nop
mov
add
fidivrl
dec
cmp
dec
inc
push
shlb
mov
and
mov
dec
lods
ljmp
cmp
int3
push
int
faddl
mov
movsb
mulb
xor
sub
mov
mov
test
jbe
sbb
mov
or
ret
jge
adc
popf
lock
int
jbe
cmp
adc
fldt
inc
aad
or
mov
cli
and
mov
mov
nop
or
xchg
and
inc
mov
sbb
insl
inc
xor
stos
int3
adc
in
adc
mov
sub
mov
jo
or
cmp
call
es
pusha
push
clc
scas
sbb
das
and
add
and
lea
repnz
sub
das
sub
popf
adc
loopne
ja
jl
sbb
popf
sbb
lcall
stos
movsb
stos
or
pop
cmp
sbb
push
cmp
stos
popa
and
add
pop
xchg
cmp
xor
sarl
out
icebp
xchg
ss
insl
xchg
sbb
ficoms
cltd
inc
jo
mov
das
ja
dec
dec
pop
cmpsl
in
cwtl
inc
sbb
mov
jns
sub
pop
push
out
push
push
push
popa
hlt
mov
in
arpl
mov
ljmp
pop
lret
xchg
jbe
push
xchg
clc
stos
mov
jb
xchg
cwtl
xchg
add
jno
and
mov
mov
xlat
sarb
adc
repnz
out
aad
lret
push
clc
pusha
mov
mov
fmull
dec
out
test
mov
lret
jne
lock
mov
arpl
movsb
in
test
xlat
sbb
aaa
pusha
pop
push
jmp
xchg
test
push
pop
sbb
jno
sahf
jmp
jae
adc
fwait
mov
je
inc
ret
pop
and
test
gs
mov
mov
aam
insl
out
add
adc
cmc
popa
xchg
insl
clc
or
xor
lahf
std
stos
push
jecxz
pop
repz
sbb
pop
mov
out
adc
leave
push
data16
or
fisttpll
xchg
fsts
cltd
add
mov
aad
pusha
push
fwait
daa
inc
cwtl
outsb
cmp
sub
movzwl
push
adc
mov
xchg
adc
shll
shlb
fucomp
leave
loopne
sub
sub
jg
cmp
je
loope
repz
repnz
lret
cwtl
jge
mov
add
stos
xchg
fwait
xchg
jns
cld
jbe
arpl
sbb
stos
sub
sbbl
and
iret
test
lea
cmpsl
les
sbb
jl
arpl
cmp
bnd
testb
enter
mov
ss
pop
jmp
out
xchg
nop
pusha
pusha
popf
dec
imul
add
mov
mov
pushf
mov
sbb
push
sub
cmp
ljmp
repnz
jg
mov
and
or
lea
cmp
scas
ret
or
repz
dec
push
ljmp
iret
sub
jnp
mov
push
sub
xor
popf
xchg
lret
iret
add
xchg
cmp
dec
mov
leave
stc
cs
adc
mov
out
sbb
lret
xchg
aad
lock
aam
jae
adc
popf
aaa
xor
repnz
fidivrs
and
sbb
inc
lret
add
push
inc
lds
jbe
pop
mov
enter
sub
scas
sahf
xor
pushf
roll
imulb
adc
pop
sub
movsl
outsb
xchg
add
or
stos
div
mov
aam
imul
ffree
xchg
dec
ret
xor
call
push
jnp
testb
rol
cli
mov
shlb
pop
sbb
out
xchg
ds
lods
add
xor
das
lcall
and
inc
cli
sbb
xor
mov
mov
pusha
sahf
jo
sub
lahf
roll
daa
lret
push
subl
add
dec
or
mov
or
adc
imul
pop
shll
jmp
push
repz
out
in
mov
ja
push
mov
push
repnz
pop
sbb
jb
pop
or
sbb
in
push
fisubrs
sbb
dec
fildll
pop
mov
add
mov
popf
mov
lds
rclb
mov
pop
or
add
jb
cmpsl
mov
cmpsl
filds
jne
xor
fistpll
sub
mov
xor
pushf
mov
push
scas
fucom
hlt
mov
outsl
repz
xor
or
mov
cmp
jg
out
adc
adc
push
daa
mov
stc
fdivrs
sbb
inc
xlat
shlb
repz
and
xor
adc
test
insl
adc
mov
mov
push
or
loope
push
outsl
in
dec
push
insl
ret
sub
mov
sub
cmp
inc
sarb
out
jmp
jbe
cmp
xchg
pop
bound
adc
dec
movsb
fnstsw
sbb
add
and
in
in
mov
xchg
aam
loop
cmpsl
jns
jno
ret
cmc
xchg
scas
cmc
outsb
mov
rcrb
sub
jo
push
imul
test
or
push
mov
stc
sahf
mov
bnd
sbb
sub
pop
leave
lock
cmp
ja
mov
outsb
in
pmulhuw
cmp
stc
cmp
test
pop
lods
out
test
imul
adc
pop
aad
setae
lock
and
imul
fstpt
int3
shl
stos
insb
cmp
fwait
ret
lahf
dec
scas
dec
push
cmp
cmpsb
nop
adc
adc
repnz
jmp
aas
fistpl
icebp
dec
pop
loopne
mov
hlt
test
ret
fmull
mov
cmp
test
jno
xor
insb
ret
or
popa
fsubrl
int3
roll
stc
std
xchg
stc
inc
test
and
clc
and
jae
shrl
or
aas
adc
xchg
mov
lret
cs
lea
sbb
mov
push
dec
jne
sub
cltd
clc
cmp
les
xor
mov
mov
mov
cmp
jl
pop
dec
mov
repz
mov
jnp
push
test
outsl
ficoml
aam
mov
add
mov
push
out
out
mov
dec
test
movsb
sahf
loop
sahf
fxch
ss
pop
je
je
cmp
push
cmp
sbb
inc
imul
jae
jecxz
xor
daa
sub
add
dec
push
add
les
loop
push
mov
lcall
dec
jne
mov
xchg
stc
push
adc
sbb
cwtl
pusha
testb
mov
cmc
out
mov
cmp
add
call
xor
dec
call
pop
hlt
leave
push
mov
imul
adc
out
add
add
jae
push
inc
push
int
loope
mov
inc
cmpsb
imul
xchg
cmp
loope
adc
add
je
pop
push
add
lret
jp
fimull
xchg
js
inc
or
out
mov
sub
push
cli
adc
dec
mov
cmovne
loopne
inc
sbb
loop
leave
mov
leave
imul
pop
pop
sbb
popf
mov
xchg
mov
movsl
int3
enter
xchg
and
adc
stos
fistpl
jecxz
jge
ret
mov
jno
stc
mov
inc
fisubl
lret
in
mov
mov
mov
mov
xor
lea
pusha
sbb
mov
lea
in
push
mov
mov
leave
insl
dec
push
inc
minps
mov
add
ffreep
aam
aad
aas
xchg
mov
inc
sbb
add
mov
xchg
jle
popf
mov
pop
movsl
push
pop
adc
dec
popf
dec
imul
in
lock
xchg
jbe
shlb
incl
aaa
dec
das
sarb
adc
inc
and
dec
xchg
sub
sub
cmp
pop
cli
das
mov
cld
mov
pop
gs
pushf
jne
outsb
mov
sbb
cmp
jl
mov
jnp
or
cmp
mov
imul
jge
jge
sub
mov
aad
repnz
stc
scas
sbb
add
xchg
ret
in
dec
sarl
cmp
cmpsl
repnz
xor
or
adc
push
mov
cltd
xchg
jmp
pop
inc
mov
sbb
add
pop
adc
fsts
xor
sbb
in
fldenv
jae
fildll
out
negl
xlat
xchg
jle
test
fs
dec
lea
cmpsb
imul
cmp
dec
loopne
pop
divl
mov
inc
setnp
cmp
inc
fnstsw
mov
mov
xor
jle
xchg
inc
mov
dec
mov
repz
jo
jecxz
ljmp
xor
sbb
out
pop
imul
adc
xor
lcall
aad
mov
pop
push
ja
fs
push
lret
mov
cmp
shr
shll
ss
daa
cmp
int
jecxz
mov
sub
mov
jg
lock
jo
sbb
fildl
xor
outsl
stos
cmp
stos
jo
mov
fmull
sar
enter
popa
mov
jmp
imul
ret
adc
mov
out
pushf
and
into
mov
cmp
call
add
js,pn
mov
mov
pop
fstpt
fstpt
in
repnz
nop
xor
loop
stos
push
add
fsubl
xchg
jbe
js
fldl
mov
push
jg
aad
adc
ret
lret
xchg
mov
cmp
sbb
mov
jb
pushf
inc
push
ljmp
xchg
bound
sarl
pusha
clc
pop
xchg
movsl
jmp
pop
sahf
dec
adc
shlb
movsb
jno
cmpsl
das
lods
insb
mov
bound
jbe
cmp
jo
rcll
fs
sarb
sub
lods
clc
jno
xchg
je
push
inc
sub
insb
sahf
in
mov
push
xchg
in
int
fldt
sti
xchg
push
scas
mov
mov
in
pop
jne
loop
out
cmp
in
stos
stc
arpl
mov
cli
ss
int3
dec
jo
loope
push
pusha
rcl
cs
sub
dec
cli
lods
lcall
and
cltd
addr16
sbb
adc
aas
cs
arpl
pop
cwtl
gs
inc
int3
jmp
jmp
scas
negl
int
test
sbb
dec
xor
pop
adc
mov
test
enter
xor
mov
mov
inc
test
es
sub
mov
std
jp
fmuls
pop
pop
inc
sbb
jg
aam
adc
jp
xchg
es
addl
lret
jle
sub
outsl
pusha
bound
into
mov
popa
push
sbb
dec
jae
dec
rcrb
repz
and
inc
dec
js
repnz
loope
out
pop
andl
iret
mov
or
pop
insl
pop
imul
ret
imul
pop
dec
jg
jg
dec
pop
cld
adc
fcoms
shrl
sahf
insb
mov
nop
mov
push
pusha
pushf
es
dec
pop
shl
mov
outsl
push
xor
bound
or
add
das
loope
adc
pop
jmp
je
sbb
push
in
cmp
push
pop
and
mov
cmovno
pop
jl
js
add
cmp
jns
fstps
mov
cwtl
inc
fsubr
dec
lahf
add
shlb
fwait
vpmovsxwd
inc
xchg
enter
mov
add
sub
push
fwait
cmc
std
mov
faddl
pop
stos
xor
xchg
rcll
push
les
rolb
popw
push
hlt
out
add
ret
movsl
jp
in
jo
mov
adc
loopne
pop
gs
cmc
pop
addr16
cmp
out
stc
push
adc
rcl
stos
pop
or
inc
sbb
dec
inc
rcrl
mov
dec
fmul
adc
or
out
inc
out
ss
fs
in
xchg
pop
out
push
sub
jno
stos
add
or
fisubl
pusha
dec
inc
pop
sub
xchg
xlat
bound
icebp
cmp
mov
xor
mov
insb
cmp
or
inc
xchg
stos
aam
jns
fnstsw
pop
ss
add
jo
in
push
sub
int3
fwait
adc
daa
mov
mov
imul
testb
stc
movlps
cmp
notl
pop
push
repnz
push
push
add
sbb
push
fs
or
xchg
dec
pusha
aad
rolb
lock
insl
push
add
lds
imul
fildll
pop
push
jge
cli
sbb
dec
fadds
mov
mov
lds
in
inc
sbb
cmpsb
sbb
xchg
or
imul
movsb
cltd
push
mov
mov
push
adc
out
xchg
jae
push
dec
std
in
ljmp
push
jmp
cld
xchg
aam
xor
pop
negb
jno
shr
in
pop
cli
fldl
jmp
adc
adc
sarb
cwtl
cmp
shlb
cmp
shlb
mov
insb
orl
mov
pop
stc
mov
out
mov
mov
xchg
popf
xchg
dec
push
lods
mov
lds
jp
inc
sbb
cmp
js
xchg
in
in
mov
outsl
cmc
ret
sbb
push
shlb
cmp
mov
mov
mov
stos
arpl
call
mov
and
out
push
mov
pusha
xchg
pop
imul
adc
cmp
out
sub
mov
push
fwait
out
push
mov
movsb
bound
push
mov
std
push
popl
mov
jo
out
fidivrl
rcrl
lahf
movsb
mov
hlt
sub
rclb
in
adc
xchg
mov
pop
push
scas
mov
inc
or
inc
push
shll
out
sbb
mulb
mov
jae
inc
inc
scas
iret
mov
shlb
imul
cld
jb
adc
jbe
test
loope
daa
repnz
and
cmp
jbe
out
scas
mov
aas
or
xor
lret
into
ret
movsb
outsl
mov
loope
out
out
js
sti
iret
daa
lods
or
inc
js
dec
mov
sti
adc
push
aam
or
fs
out
mov
xor
or
movsl
cmpsl
ret
ret
cmp
inc
adc
push
push
scas
mov
and
clc
das
mov
mov
cmc
adc
jp
mov
lahf
inc
sbbl
sarb
ss
lods
push
jmp
inc
cmp
scas
fildl
loope
pop
loopne
sub
nop
mov
stos
push
das
aam
scas
adc
jge
sbb
push
fsts
adc
imul
leave
or
cli
mov
and
jge
xchg
pop
xchg
mov
cltd
ja
lods
push
lcall
sbb
xchg
xor
call
rcll
out
cmc
in
sbb
cmp
adc
push
ror
cmpsb
fistpl
mov
enter
sar
mov
leave
pop
push
dec
loopne
loope
add
aad
cmpsl
inc
pop
push
jle
fs
popa
clc
fisttpll
sub
dec
shll
xor
jae
inc
pop
push
and
push
mov
packsswb
iret
inc
fnstcw
sub
cmpsl
dec
or
cltd
push
into
or
ja
cmp
aas
lock
push
or
lret
imul
sbb
jp
push
insl
jecxz
jbe
in
daa
lock
aam
mov
stos
xchg
js
fcomi
or
dec
adc
cmp
jmp
rcll
loopne
outsl
sbb
test
out
int3
idivb
push
xchg
js
cld
notb
jl
out
test
fsubr
cmp
scas
xchg
adc
sub
lahf
add
pop
push
repnz
pop
or
jp
add
mov
mov
fstpl
adc
jnp
jno
sti
inc
jmp
jle
mov
or
lret
pop
ljmp
je
jl
cld
inc
mov
test
inc
mov
and
jbe
cmp
imul
sbb
jbe
xor
or
lret
popa
insl
xchg
sbb
test
cmpsl
cmpb
ljmp
and
mov
add
out
movsb
pop
dec
mov
jg
loop
dec
shll
in
cmp
mov
stos
cmp
iret
stos
mov
pop
add
push
xor
sbb
scas
mov
lods
clc
fistl
imul
insb
mov
es
mov
shll
int
dec
in
push
pop
xorl
push
gs
adc
pop
pusha
shrl
inc
mov
pop
test
dec
push
aas
and
cmp
repz
mov
xchg
inc
push
push
sbb
ret
push
pop
adc
sub
fistps
adcl
ds
push
sub
and
ljmp
cltd
mov
inc
adc
fbld
cmp
xor
inc
shll
in
out
or
into
cmp
cs
daa
dec
inc
and
fstps
je
and
loopne
icebp
icebp
jle
push
insl
lods
inc
popf
int3
add
xor
shlb
inc
cld
mov
or
addb
ljmp
ja
lcall
xchg
push
mov
push
add
cltd
ret
xor
jns
les
in
ja
sti
incb
jmp
adc
cwtl
jl
rcrl
jg
xor
repz
mov
inc
cmp
call
and
mov
xchg
test
push
push
or
jmp
pop
lcall
jecxz
ret
rorb
pop
arpl
add
test
daa
mov
ret
jbe
lock
lea
adc
and
out
jmp
popf
pop
outsl
clc
cmp
shlb
ror
jo
push
mov
int3
mov
or
cmp
popa
mov
rorl
ss
popf
cmp
cmp
fmull
hlt
mov
inc
dec
push
xchg
popf
ror
sahf
clc
daa
addr16
lcall
adc
add
cwtl
aad
movsb
shlb
and
sub
add
jmp
sahf
rcr
test
cvtdq2ps
mov
inc
aaa
add
aaa
dec
mov
test
jno
je
add
mov
shr
push
leave
shrl
mov
lret
mov
addb
and
jb
clc
decb
and
sahf
inc
push
mov
mov
paddb
in
push
mov
je
sarb
loope
pop
adc
add
xor
mov
pop
jae
test
in
dec
xchg
and
jbe
out
jne
push
mov
call
jp
popa
call
mov
push
mov
adc
xchg
jne
sbb
and
push
mov
sbb
aaa
adc
mov
add
aad
xchg
icebp
xor
ljmp
repz
mov
ret
in
aad
mov
mov
sbb
push
popa
pusha
mov
sahf
iret
mov
clc
iret
pop
loop
stos
push
xlat
int3
out
lret
xchg
push
lock
test
les
loop
xor
inc
inc
add
and
cmpsb
shll
pop
iret
push
jnp
xlat
movsb
testl
dec
scas
mov
mov
ss
sahf
lret
xor
mov
xor
inc
cmp
pop
jmp
jmp
dec
dec
xchg
jae
shrl
loop
lods
cwtl
arpl
jecxz
mov
sti
jo
jb
clc
dec
mov
lock
test
inc
and
pushf
addr16
cld
xor
xor
je
cmp
mov
int
mov
loopne
sub
or
aas
data16
cmc
repnz
xorb
es
and
jle
push
xor
and
test
cmp
and
lea
shlb
pop
stos
xchg
cmp
xchg
icebp
mov
push
jnp
mov
dec
pusha
cli
cmp
dec
push
mov
push
and
imul
loopne
mulb
xadd
or
cmp
inc
mov
int3
rclb
hlt
pop
and
test
xor
push
dec
cmp
add
mov
fdivs
loopne
push
je
out
rolb
out
or
push
lahf
jbe
and
mov
cmp
imul
jno
insb
mov
inc
mov
dec
xchg
jo
push
and
test
sbb
jmp
xor
clc
mov
xor
imul
mov
mov
movsl
inc
mov
and
cmp
sbb
fisubrl
lods
cmp
push
arpl
xor
pop
sbb
sbb
sarb
jns
outsl
xor
mov
sub
cmp
sti
imul
jae
shrb
sar
or
pop
cmp
xlat
lcall
dec
bound
sub
cmpsb
mov
add
ret
pop
daa
push
pop
inc
pop
mov
lods
test
lret
adc
mov
test
into
mov
jmp
in
jg
movsb
fstl
add
in
add
in
mov
dec
inc
mov
shrb
ret
cmp
cmp
movsl
popf
clc
addr16
pop
sbb
enter
sbb
and
xchg
mov
stos
sbb
jge
jl
inc
mov
cmp
mov
jno
mov
dec
push
jp
sbb
add
jmp
pop
std
rcrb
inc
das
jne
into
sbb
out
icebp
pop
lcall
in
dec
rcrb
xchg
adc
sub
sub
sbb
cltd
movsb
adc
dec
sbb
mov
mov
ds
push
inc
adcl
movl
into
dec
adc
int
jl
fbld
cmpsl
ret
iret
and
int
inc
pop
jmp
insl
in
push
sbbb
ss
cmc
sub
ret
and
insl
dec
push
xor
cmp
enter
adc
lods
add
gs
fcomps
push
pusha
in
iret
sbb
mov
add
aad
pop
insb
jge
or
sbb
cld
in
adc
jecxz
or
cltd
repnz
lahf
mov
mov
into
inc
jbe
mov
rclb
int
leave
dec
jbe
sbb
xor
sbb
cmp
cmpsb
sahf
push
in
stos
ljmp
in
cltd
outsl
dec
adc
add
xchg
xor
jp
pusha
call
mov
mov
inc
cltd
inc
jg
sbb
dec
add
ja
inc
or
lock
out
bound
add
mov
inc
or
inc
xor
add
outsl
ds
stos
xchg
mov
inc
in
inc
movsb
adc
xor
jmp
cmp
repnz
es
push
fbstp
mov
mov
push
xchg
push
faddp
cmpsl
mov
cmc
stos
jbe
out
xlat
and
loopne
ja
or
push
pop
imul
push
popa
leave
das
sahf
ret
shrl
jns
mov
popa
or
sbb
aam
std
mov
sar
pop
fwait
sarl
flds
cmp
lea
push
aaa
scas
adcl
loopne
xor
jle
ja
mov
sti
jnp
mov
mov
jle
call
sub
push
sub
shrl
adc
loope
mov
or
cmp
jno
mov
jl
cmpl
outsb
dec
push
xchg
adc
cltd
fsubrs
and
movsl
aaa
jae
inc
or
dec
mov
cmpsl
repz
aas
sub
inc
inc
dec
fimuls
or
nop
dec
ljmp
in
test
faddp
xor
shrl
xorb
arpl
pop
rcrl
je
data16
in
mov
jns
rclb
daa
push
fldl
int
xorb
call
sbb
enter
cmp
cmc
loopne
sti
jle
add
add
push
adc
jg
shlb
or
push
adc
mov
sub
in
in
lds
or
sti
dec
lret
subl
cli
mov
sub
or
out
dec
inc
xchg
cmp
xor
jae
es
out
add
add
sbb
sarl
sub
cli
test
mov
mov
div
hlt
push
ret
mov
dec
sti
or
jle
movsb
pop
pop
cld
push
xchg
stos
jnp
sbb
or
push
loop
cmp
movsb
loope
jp
ds
or
push
ret
not
adc
adc
jmp
mov
mov
inc
fstl
test
push
sbb
cs
ja
xchg
mov
nop
rolb
fisubs
lods
rolb
stos
ret
push
push
sub
mov
mov
adcl
push
dec
iret
call
dec
pop
ja
int3
and
jno
flds
shll
aad
lea
adc
inc
pop
jmp
pushf
dec
sbb
stos
imul
aam
xorb
nop
fldt
adc
sti
or
sbb
pop
sbbb
popf
cltd
jne
cmp
pop
fisubrs
lcall
pushf
xchg
imul
inc
xchg
mov
movsb
shlb
cmc
out
nop
fst
lock
push
pop
movsb
pop
mov
js
in
add
jae
inc
cltd
fisubl
mov
sahf
pop
lods
stos
sub
or
jl
fdivrl
sbb
lods
mov
hlt
sbbl
fwait
data16
add
out
lods
orl
fisubrs
dec
push
shrb
inc
stos
jmp
loope
mov
daa
lahf
iret
addr16
mov
inc
push
mov
cmp
xlat
jae
add
scas
scas
out
out
adcl
xchg
xor
fistpl
mov
popf
mov
adc
mov
or
inc
xor
ds
dec
movb
imulb
mov
fisttpll
lret
lcall
call
lea
mov
je
add
out
add
sbbl
inc
inc
mov
ljmp
jns
xor
sahf
cltd
xor
mov
cmp
lds
stos
call
shlb
rcr
pusha
or
inc
jbe
repnz
pop
or
add
sti
or
xor
int3
in
push
ret
shll
dec
outsl
dec
inc
xchg
dec
xor
fs
call
cmp
add
popa
dec
or
push
sbb
push
test
in
adc
imul
push
or
stos
hlt
pusha
lods
test
adc
xor
adc
mov
mov
insb
push
mov
dec
loop
xchg
xchg
aam
or
and
add
fld
pop
push
jmp
leave
inc
cmp
psubusb
fnstsw
mov
xlat
pop
xor
sub
xchg
jne
je
mov
loope
stos
or
xchg
push
sbb
in
outsb
sahf
xchg
adc
push
cmpsb
cmc
inc
push
dec
les
xchg
jno
cli
xchg
rcr
xchg
mov
mov
decb
adc
jle
adc
jmp
mov
pop
push
xchg
adc
fsubrl
lcall
fidivl
cltd
or
mov
xor
ret
call
es
pop
daa
adc
sbb
add
popf
jb
sbb
mov
sti
xchg
mov
push
mov
cs
in
std
out
sbb
pop
pushf
lods
fwait
sbb
icebp
sti
dec
dec
mov
cmp
add
pop
in
int3
popl
add
jle
mov
stos
xor
mov
xor
outsl
ljmp
and
or
idivb
push
pushl
adc
fldenv
sbb
cmp
sub
pop
push
sbbl
test
cmp
push
dec
push
adc
add
in
rorl
popa
inc
out
pop
stos
out
and
cmpsb
or
shll
aam
xchg
xchg
push
movsl
pop
jb
push
inc
add
inc
xchg
mov
cmpsb
add
jae
sub
addl
je
sahf
call
ret
test
jl
call
fldl
jp
adc
and
cmp
ja
xchg
pop
inc
jecxz
repnz
dec
jno
sub
add
adc
clc
xor
dec
out
clc
add
push
adc
cli
sub
dec
das
xor
loop
dec
je
js
sub
shlb
xchg
add
jp
out
hlt
and
jle
inc
test
jl
adc
push
lock
aam
xchg
test
mov
adc
push
mov
push
addl
sub
into
adc
outsb
andb
mov
push
test
mov
cld
sub
inc
jns
adc
scas
sbb
xor
jg
mov
push
add
and
popf
sbb
sub
cmp
clc
push
stos
mov
add
lcall
mov
jb
dec
adc
cmp
lds
cld
lret
in
lea
aam
and
rolb
outsl
inc
xor
push
loope
movsb
mov
add
mov
outsb
cmpsl
test
xor
and
les
mov
mov
ds
rol
jns
fcmovb
push
mov
jo
xchg
rorb
xchg
es
sub
lods
nop
out
iret
cwtl
push
xchg
xchg
mov
aam
adc
mov
cmpsb
std
out
icebp
nop
xchg
cltd
mov
push
dec
xchg
pop
inc
and
cmp
test
insb
mov
fbld
popf
or
inc
inc
jae
jmp
sub
mov
and
fucom
loopne
arpl
popf
sbb
dec
pop
sbb
mov
or
sarb
inc
lcall
rolb
sub
in
xchg
add
movsl
idiv
jecxz
lcall
es
mov
imul
outsb
jecxz
xchg
add
or
xchg
ret
push
iret
nop
lock
mov
hlt
dec
push
and
xor
insb
cmpl
push
mov
ja
xor
adc
adc
mov
loope
cltd
or
cmp
add
clc
aad
inc
cmp
ror
shr
movl
les
push
mov
xor
jmp
iret
mov
orb
mov
loop
xchg
aad
outsl
push
lods
mov
mov
xchg
sbb
xchg
movsb
mov
xor
jo
xlat
sub
xchg
fidivrl
movsb
mov
fsubrl
cmc
sub
imull
mov
dec
push
jne
sarb
mov
push
or
mov
push
fisubs
sahf
pop
inc
lret
add
pop
push
mov
push
cmp
mov
mov
sub
mov
sub
mov
xlat
fs
jmp
mov
lahf
dec
add
xor
adc
jbe
mov
stc
sub
mov
icebp
aas
outsl
orl
xchg
in
cmpsb
sahf
jecxz
xor
xor
aad
pop
test
hlt
sbb
fsubrl
loope
aam
daa
fwait
daa
mov
pop
mov
gs
inc
xor
inc
arpl
push
insb
into
hlt
popf
sbb
ret
pop
push
lret
mull
pop
mov
ljmp
jmp
aaa
popa
xchg
in
daa
mov
xchg
shlb
into
fdivrs
sbb
push
ret
lods
jp
or
negl
lods
jne
repnz
jbe
aad
dec
and
cld
ss
sbb
shlb
gs
dec
call
lret
dec
jl
out
and
js
sub
arpl
subb
jns
fs
or
shlb
std
pusha
out
dec
daa
sbb
mov
or
adc
daa
insl
into
xchg
push
mov
mov
decb
bound
jb
xchg
ficoml
mov
xchg
pop
inc
jmp
push
js
or
fcomi
mov
jge
pop
sahf
inc
pop
stos
adc
aad
mov
cltd
jnp
xor
std
out
cmpsl
pusha
shll
outsb
sar
mov
or
mov
hlt
ret
es
arpl
int3
jno
xor
cld
jp
sub
iret
addr16
js
out
fnstenv
addl
jns
or
mov
sub
in
or
dec
in
lock
aas
mov
dec
dec
xchg
outsb
cmp
inc
insl
and
xor
mov
and
iret
ficoms
in
insl
cli
push
mov
pop
mov
mov
xchg
pop
sbb
addr16
mov
dec
pop
mov
mov
out
xadd
and
inc
in
inc
lcall
mov
mov
mov
xchg
mov
aad
in
fcomps
outsb
cwtl
add
cmp
out
daa
mov
clc
aaa
push
popa
dec
jnp
mov
es
sbbl
sub
or
int3
lret
xor
idivb
pop
lods
and
bound
and
test
mov
mov
sub
cmp
pop
or
shlb
jbe
jp
lock
test
sub
nop
mov
repz
jecxz
lahf
data16
stos
lahf
lds
mov
out
addl
cld
push
sub
add
stos
fwait
adc
adcb
mov
mov
out
mov
adc
test
insl
sub
add
dec
xchg
or
or
sbbl
sbb
xchg
dec
lea
arpl
xor
frstor
cmp
mov
movsl
xorl
fists
sti
jge
sub
lret
xchg
cltd
imul
repz
push
add
scas
subl
nop
int3
and
lret
add
iret
mov
push
xchg
out
lea
adc
add
xchg
or
mov
das
fs
or
int3
jge
pop
push
arpl
adc
sbb
xor
subl
xchg
scas
add
popa
jecxz
subb
push
xchg
push
mov
in
int
cmp
pop
fwait
push
pop
cmp
bound
orl
push
scas
pop
mov
xchg
cli
adc
in
inc
test
jae
jg
mov
jmp
push
xchg
in
ret
add
addr16
xchg
or
pop
ret
mov
and
pushf
jecxz
mov
lock
dec
popa
pop
pop
jbe
pop
mov
push
inc
orb
jle
mov
in
sahf
jae
ja
aam
and
ret
or
dec
aas
cmc
sti
adc
loop
adc
mov
divb
mov
shll
cmpsb
lcall
out
jle
mov
fiaddl
stc
xor
mov
int
dec
sti
mov
inc
sbb
xchg
fnstsw
mov
ret
repnz
sti
testb
fnstcw
ret
out
cmp
inc
shlb
xchg
out
test
jbe
insl
sub
inc
dec
cmp
notb
mov
dec
in
pop
cmp
sub
leave
jge
sbbb
adc
daa
hlt
mov
mov
inc
mov
sti
cs
and
fcmovu
inc
sti
mov
data16
sahf
jnp
test
lret
push
popa
push
mov
push
test
dec
test
jecxz
adc
jp
clc
sbb
jns
icebp
ljmp
or
in
sbb
dec
jnp
push
sub
or
dec
scas
daa
push
pop
call
xchg
ret
adc
xlat
stos
jg
cmc
sbb
mov
mov
xchg
movsl
and
or
mov
call
decl
dec
sub
and
push
xchg
sub
das
and
fsub
add
add
lods
mov
cmpb
inc
roll
cmpb
ret
mov
or
sahf
xlat
push
jmp
inc
adc
xchg
int3
lcall
jb
call
or
push
mov
mov
push
nop
and
lock
icebp
jae
popf
mov
adc
push
or
xor
cltd
jp
notb
push
jb
cmp
lret
jnp
lret
mov
and
mov
test
stc
iret
xchg
add
faddl
pop
je
mov
push
or
into
push
sbb
imul
xchg
loopne
add
adc
hlt
stc
popf
aas
add
pop
jmp
movsb
jmp
push
nop
or
xchg
adc
out
xchg
fbld
arpl
cmp
popl
and
xchg
xchg
inc
lock
mov
sbb
pop
push
sub
xchg
loope
fbstp
pop
inc
xor
jp
mov
sub
ljmp
lret
mov
xchg
fdivr
pop
xor
pop
cmc
mov
push
jae
lds
lock
push
lcall
xor
inc
xchg
popf
iret
addr16
js
pop
jb
mov
dec
movsb
dec
sub
cli
sbb
push
mov
sbb
cmp
test
gs
divb
scas
loope
call
sub
ret
inc
mov
adc
leave
mov
push
add
iret
movsb
xor
adc
loop
in
or
lcall
sub
mov
sbbb
mov
mov
sbb
sub
xchg
push
jb
or
lahf
or
pop
in
xor
cmp
ds
cmp
int
mov
inc
sbb
and
clc
add
and
mov
movsb
xchg
jl
sti
xchg
cmp
push
imul
cltd
nop
aam
fimuls
xchg
addr16
lods
in
es
inc
push
call
ror
sub
dec
dec
aas
in
fldl
mov
mov
pop
jne
rcll
pop
xorl
adc
fidivrl
fucompp
fildl
aam
sbb
sbb
mov
sub
lret
test
xlat
push
cmpsl
jge
xchg
push
lret
shrl
cmp
push
das
repnz
dec
sub
add
inc
stos
cmpl
push
cmp
in
out
jmp
out
popa
pop
outsb
testl
test
bts
adc
test
outsl
in
adc
push
addb
push
cmp
add
outsl
or
ljmp
mov
imull
xor
sub
dec
jo
inc
inc
jnp
lock
dec
addl
or
add
or
jb
xchg
dec
lahf
sub
sti
xor
and
lds
xchg
mov
stc
mov
sbb
enter
cs
mov
cmp
int
fisttpl
inc
andl
aam
jo
add
push
mov
faddl
ja
or
es
in
pop
inc
cltd
ja
imul
mov
mov
jecxz
fwait
mov
dec
std
xor
mov
lods
sub
inc
mov
addb
test
sbb
sub
mov
lea
loop
dec
dec
dec
jbe
push
dec
cld
int
data16
inc
pop
cld
push
repz
inc
push
dec
pusha
stc
aam
sbb
lods
adc
inc
cli
fisubrs
xor
shll
data16
mov
jns
mov
cmc
xor
push
das
mov
nop
cmp
adc
add
push
xor
mov
inc
aam
ss
dec
pop
fcoms
cmp
fcomps
inc
int
mov
js
or
in
xlat
dec
mov
nop
mov
and
rcll
push
leave
sbb
mov
call
pop
ja
cmp
pop
jecxz
fcmovu
dec
psraw
call
outsb
sbb
std
leave
dec
cmovnp
out
loopne
int
adc
jge
xchg
fimull
sub
call
jo
sahf
sbb
mov
imul
lret
sbb
sti
cwtl
push
mov
inc
push
xor
cmp
or
testb
xor
dec
xor
inc
push
jns
rcr
add
loope
in
rorb
aas
dec
cli
push
sbb
aam
and
nop
push
icebp
mov
mov
pop
loope
inc
rclb
iret
aaa
xchg
push
fsubrl
and
gs
sub
cmpsb
aad
stos
jle
arpl
cmp
mov
sahf
mov
das
loopne
jo
hlt
out
jl
flds
mov
inc
stos
arpl
inc
sbb
dec
lods
sub
dec
lds
jb
iret
pop
lret
das
repnz
xabort
outsl
fisttps
dec
es
xor
jg
sbb
mov
arpl
push
outsb
pop
in
out
adc
or
mov
push
aad
dec
out
out
xchg
sub
dec
or
mov
sti
pop
movsb
jecxz
jmp
imul
xor
xor
jp
add
rorl
sub
mov
aas
pop
push
daa
inc
push
push
xchg
pop
dec
sahf
cli
incb
rorl
jecxz
pop
jp
mov
cmp
cmpsl
std
mov
lret
push
dec
icebp
clc
pop
mov
aas
sbb
add
rcrb
pop
daa
sbb
xchg
xor
out
int3
clc
popf
jecxz
daa
mov
add
dec
call
and
add
ltr
loop
push
sub
or
fnsave
subl
fnstenv
cmp
enter
cmp
pop
jp
ja
pop
jg
xor
xchg
cltd
push
sbb
push
cmp
fadds
inc
and
lahf
scas
cmp
lret
or
push
xor
jge
test
sti
cmpb
iret
or
ja
fisubrl
das
xchg
ds
mov
dec
mov
dec
out
xor
int
int3
int
popl
push
pop
push
das
sub
mov
fisttpl
pmulhuw
add
mov
rcrl
dec
mov
movsl
rcrb
outsb
aaa
in
cld
mov
aaa
leave
pop
cwtl
orl
or
and
testb
dec
setl
dec
adc
adc
movsb
out
jmp
js
and
xor
clc
popa
xor
add
push
popl
jmp
add
mov
sahf
arpl
into
enter
mov
ficoml
push
mov
es
inc
scas
mov
mov
push
pop
jne
jb
jecxz
scas
inc
popf
inc
cmp
jl
and
sub
dec
xor
push
lds
xor
repnz
dec
mov
hlt
and
jp
or
cmpsl
mov
ss
mov
fwait
dec
gs
jmp
xor
cld
adc
pop
mov
push
push
icebp
lea
or
mov
mov
scas
movsb
xchg
xlat
and
xor
mov
jae
lds
cltd
divb
mov
push
addr16
xor
adc
mov
mov
jp
push
add
mov
mov
push
sbb
andl
ror
push
mov
dec
mov
jl
adc
dec
cmpsl
adc
xor
xchg
scas
mov
pushf
enter
adcb
cmp
dec
arpl
insl
xchg
dec
mov
shll
movsl
in
cld
in
xor
jns
jmp
sti
aas
mov
ret
jne
cmc
cltd
mov
cmp
dec
xchg
test
mov
mov
subb
cmp
mov
je
pop
and
imul
add
cmpsb
jb
push
or
mov
pop
sub
jbe
ja
in
sub
mov
sti
roll
dec
inc
sub
aad
arpl
cmp
iret
ds
rolb
xchg
mov
sub
or
or
arpl
inc
inc
fs
popa
lret
mov
xchg
lret
test
dec
ds
cmp
dec
test
mov
fisubrl
push
dec
push
jae
ljmp
xchg
jecxz
adc
xchg
test
adc
jnp
xchg
ljmp
mov
push
ds
push
jo
mov
push
int3
shrb
jmp
jecxz
aaa
or
pop
sub
sbb
xchg
sbb
ficompl
or
adc
cmpsb
je,pn
ss
test
arpl
incl
popf
xchg
xor
test
lds
mov
xchg
movsb
mov
aad
test
jnp
mov
sub
sbb
in
mov
fs
idiv
filds
sbb
xor
loopne
xor
xor
sbb
imul
push
leave
xchg
iret
int
adc
inc
fcmovnu
lret
cmp
int3
lds
cli
mov
inc
cmpsl
add
sub
push
imul
lock
inc
inc
mov
flds
cmp
add
mov
xchg
cmp
call
jae
movsb
xlat
testl
stos
adc
test
push
cmpsb
jnp
jne
xor
lahf
push
scas
pop
aad
loope
pop
mov
int
pusha
movsb
insb
mov
sti
lahf
repnz
xor
insb
in
push
in
repnz
pushf
pop
xor
push
mov
push
std
cmp
mov
je
push
cmpsl
scas
mov
pop
xchg
shll
cmpl
notl
mov
jnp
int
pushf
sbb
xor
and
mov
aaa
lods
es
mov
aam
lcall
mov
pop
sbb
mov
push
mov
pushl
cmpsl
jge
xchg
xor
pusha
rcr
hlt
push
sti
sbb
fcom
scas
je
sub
aam
call
xlat
mov
inc
fisttps
xchg
setge
mov
sar
mov
push
dec
xchg
adc
fcmovu
repz
jmp
movups
mov
js
push
dec
das
pop
loope
cmp
xor
cmc
sbb
std
hlt
mov
movsl
lds
lret
adc
pop
fs
in
lods
in
cmp
lahf
jle
mov
lods
xrelease
sbb
daa
pop
and
fisubrl
sti
sarb
mov
insb
xor
dec
cltd
inc
das
fmull
loope
and
fwait
add
sti
imul
mov
incl
filds
shll
xor
addr16
and
fdivrs
and
mov
xchg
inc
pop
in
hlt
out
mov
stc
fwait
jb
mov
dec
jbe
pushf
je
sub
pop
cmp
dec
scas
mov
enter
mov
mov
adc
sarb
jge
jl
xchg
adc
jo
sbb
daa
inc
ds
fadd
es
or
sbb
dec
fcompl
xor
pop
jecxz
cmp
mov
sub
lcall
dec
cli
sub
mov
inc
mov
pushf
xchg
scas
inc
xchg
xor
mov
shrl
xchg
jns
outsl
fldenv
mov
out
and
sbb
sbb
or
jno,pn
sub
out
adc
ret
pop
sub
add
aas
lock
jg
outsb
adc
xor
hlt
test
and
aad
mov
jle
push
dec
cmp
push
pop
sub
cmp
push
lret
ficompl
cmp
add
or
and
test
test
xchg
inc
lahf
jnp
xor
jo
rclb
xchg
mov
popa
aad
inc
scas
loop
jp
stc
mov
repnz
xor
movsl
push
stc
jp
xor
sbb
mov
mov
and
mov
sub
es
fs
mov
mov
imul
mov
loopne
cmpsl
and
inc
cmpsl
push
mov
mov
mov
push
pop
cwtl
adc
insb
sbb
pop
inc
cmp
pushf
dec
scas
divb
pop
push
pop
sti
decb
xor
mov
inc
pop
jo
xor
fsubrp
into
mov
lret
xor
lods
push
inc
sbb
idiv
add
ds
mov
shrb
lahf
cmpsl
jp
scas
sti
shl
pusha
sub
jecxz
scas
arpl
lahf
mov
xchg
inc
fcompl
cmp
mov
jecxz
popa
mov
mov
dec
add
adc
das
mov
iret
adc
insb
fisubl
add
jmp
pop
call
mov
les
lcall
icebp
cmp
stos
push
jo
insl
xchg
ljmp
fsubrl
pop
fdivr
lea
cmpsl
stc
fisubrl
adc
dec
cld
inc
adc
aam
out
inc
aad
leave
addr16
push
adc
aaa
aas
add
sbb
ret
shll
test
aam
test
insl
xchg
add
icebp
cmpsl
jle
insb
add
lcall
mov
pop
aad
stos
ss
scas
mov
cmp
test
sub
mov
lcall
adc
mov
dec
out
sbb
push
cmpsb
xor
cmp
jb
inc
cli
fcmovnu
xor
out
or
scas
scas
lcall
jb
cmp
sub
pop
dec
add
in
inc
adc
pop
inc
sahf
fisubrl
movsb
adc
mov
mov
movsl
mov
icebp
dec
sbb
push
pushf
sahf
popa
fucom
aas
sti
arpl
cmp
loope
pop
add
and
imul
sbb
jns
movsb
jbe
push
scas
iret
or
sbb
inc
jl
dec
adc
xchg
pop
aad
mov
jo
nop
gs
es
push
cmp
push
jbe
dec
adc
test
cs
inc
out
add
arpl
sbb
mov
test
loop
push
add
mov
jg
jae
mov
xchg
ret
inc
int
dec
clc
fwait
bound
enter
pop
sbb
add
int3
and
xor
mov
adc
aas
imul
mov
ds
lret
scas
xchg
dec
push
insl
pop
xor
and
push
lea
je
dec
nop
jbe
jb
mov
aad
or
xchg
lret
ret
mov
jg
pop
inc
add
push
mov
aaa
fstl
xchg
fldenv
pop
mov
or
xor
je
push
icebp
cmpsb
jb
mov
jle
movl
shll
ja
test
add
inc
jmp
into
int
add
lahf
cmp
fdivl
mov
jne
daa
jl
test
call
push
stos
or
ret
fistpll
pop
in
mov
lds
add
stos
fs
mov
jns
pop
xor
jbe
movsb
xchg
ljmp
sub
clc
ret
sbb
dec
mov
cmp
hlt
std
jle
test
aad
mov
inc
pop
xor
sub
adc
in
jl
lret
push
hlt
ret
popf
push
fs
lahf
dec
fadds
cmpsb
xchg
push
daa
and
xchg
and
aad
iret
cld
jns
jne
jmp
xor
jge
mov
lret
not
mov
jo
mov
sbb
nop
mov
lret
inc
adc
lahf
inc
daa
pop
loope
xchg
test
sbb
in
inc
mov
mov
xchg
pop
test
pop
loopne
fcmovne
int3
mov
je
sub
mov
sub
imul
cmp
jmp
idiv
pop
scas
fistpl
dec
in
dec
rcl
add
fildll
out
or
and
push
mov
adc
outsl
sti
or
mov
push
cs
cmpsl
enter
aam
cwtl
nop
lea
cld
add
ficompl
leave
repnz
nop
push
lea
sbb
dec
orb
pop
xor
out
les
pushf
fcoms
jno
mov
decl
rcrb
stos
and
ljmp
sbb
rcll
mov
ja
call
adc
adc
jns
pop
in
cld
test
cltd
orb
mov
iret
fxch
mov
test
lds
outsl
rcr
inc
pop
test
das
push
cmpsb
jno
dec
push
lret
mov
jecxz
sbb
fmull
adc
adc
xor
mov
and
or
push
xchg
xchg
mov
stos
and
mov
loop
test
popf
pushf
cld
inc
pop
imull
in
cmp
xchg
jo
sbb
mov
mov
xor
inc
xor
stc
mov
cmc
and
pavgw
inc
mov
cmp
and
or
jp
push
in
out
mov
rcll
push
or
push
push
jl
push
push
dec
lock
cmp
arpl
gs
adc
fsubs
jo
or
loope
mov
xchg
jb
jl
jle
lea
scas
inc
pop
pop
leave
iret
lods
mov
bound
sbb
imul
inc
daa
dec
fwait
dec
sub
ja
sbb
cmp
inc
and
rclb
out
aas
movsl
pop
sub
dec
out
mov
bound
andl
out
out
mov
xor
jb
or
pop
adc
sub
push
jnp
and
ficompl
fdivl
add
pop
dec
inc
popw
cld
movsl
xlat
mov
mov
flds
pusha
lods
adc
mov
stos
xchg
gs
iret
pop
mov
mov
jo
pop
mov
int
jmp
jne
popf
cmp
mov
call
xchg
jne
nop
jbe
mov
and
lds
adc
pop
pop
mov
dec
aaa
shlb
or
in
or
sub
pusha
rcrl
sbb
xor
or
pop
mov
cltd
sbb
aaa
cmc
cmp
pop
dec
addr16
pop
cmp
push
pop
fwait
dec
mov
and
arpl
and
popa
notb
stos
inc
cmpsb
lret
stc
adcb
hlt
push
sbb
dec
jns
cld
push
popf
jmp
adc
xchg
jge
push
mov
dec
out
pop
or
cli
stos
lcall
add
mov
and
fldl
inc
lahf
xchg
std
shll
and
push
stos
popf
nop
pop
sub
daa
push
sub
inc
cmc
pop
addr16
lods
mov
ds
sub
mov
test
hlt
mov
aam
mov
and
sub
xchg
es
adc
xor
mov
add
out
cmc
cli
por
mov
cmpsl
push
sbb
mov
ds
sub
enter
mov
jb
rcr
into
in
jno
pop
fs
add
and
push
push
mov
lahf
ja
scas
xor
ja
cwtl
sub
mov
loop
xchg
aad
adcb
aad
ljmp
jae
scas
divb
xchg
sarl
decb
loope
bnd
ljmp
in
sbb
cmp
mov
in
cwtl
lods
xor
or
and
std
push
test
push
sbb
fwait
jo
dec
sub
xchg
inc
push
push
ds
loopne
push
or
xor
movsl
jno
xchg
xchg
int
ds
sub
int3
shlb
clc
jmp
mov
jmp
sbb
sub
ja
loop
xor
lods
jne
adc
sub
jecxz
pop
ds
xchg
std
jle
inc
push
mov
loopne
push
fwait
cmp
test
and
aaa
in
out
in
mov
jae
mov
inc
dec
bound
mov
fdivr
ret
loopne
scas
movsl
jo
cmp
nop
sbb
sub
inc
adc
mov
imul
mov
inc
push
push
push
adc
nop
xchg
adc
pop
add
sub
push
sbbb
xor
cltd
andl
lods
addr16
cmpsb
cld
and
mov
shrl
add
cli
mov
sbb
orl
pop
js
dec
out
sbb
or
mov
and
xchg
mov
adc
sub
fnstcw
push
insl
aad
mov
sub
sbb
pop
push
sub
lods
insl
cmp
outsb
in
hlt
test
push
xchg
jnp
int3
mov
lods
aam
cmp
jle
add
mov
pop
adc
movsb
imul
leave
mov
pop
das
mov
mov
or
xor
ljmp
cli
sub
and
shlb
inc
mov
movsb
xor
mov
xor
out
mul
xchg
inc
mov
pop
call
mov
push
cmp
std
testb
pop
enter
push
lahf
cmp
jle
pushf
insb
sbb
cld
insb
lea
iret
jo
xchg
shr
inc
mov
sub
jne
adc
mov
mov
frstor
mov
in
jo
std
pextrw
sub
mov
daa
dec
cmpsl
adc
inc
aas
movsl
lods
inc
or
outsl
jp
movsl
clc
or
or
popa
lock
pop
push
xor
mov
sub
shlb
jecxz
push
mulb
rclb
test
mov
add
ja
leave
test
mov
inc
sbb
rorl
dec
aas
das
js
inc
pop
jno
jg
and
jnp
mov
daa
loopne
sbb
cmp
in
mov
adc
sbb
lret
cmp
xor
xchg
or
mov
mov
or
shlb
pop
add
sub
cmp
dec
ja
flds
mov
fimull
jb
stc
lcall
out
mov
fnstsw
cmpsl
scas
push
fiaddl
xchg
sub
mov
aam
mov
fbstp
xor
fs
test
push
shll
test
aam
jp
out
sbb
xchg
popa
add
push
push
testb
cmc
sti
pop
mov
add
cltd
das
leave
or
and
int3
xchg
mov
xor
addr16
test
push
aaa
sbb
dec
ljmp
sub
xchg
clc
outsl
filds
sbb
pop
leave
dec
jle
das
mov
xor
pusha
push
icebp
fs
mov
ds
add
repz
int3
scas
push
or
mov
cmp
cmpsl
lcall
int3
cld
mov
popa
bound
jl
inc
xchg
lods
mov
pop
add
rcrl
ss
insl
out
pop
in
mov
leave
jbe
popa
aam
leave
ds
mov
insb
ja
jg
xchg
inc
decb
jno
in
pop
or
inc
cmp
jmp
aam
rcrb
fdivrl
ret
in
jno
xchg
ja
call
pop
stos
or
stos
push
sbbb
and
ss
lods
cmpsb
cmpsb
mov
mov
adc
and
mov
call
sub
popa
xchg
out
sbb
add
xor
loope
sub
xchg
push
add
sbb
jmp
imul
shl
jno
into
lock
shrb
ds
push
fdivl
das
xchg
div
dec
fs
xor
or
xor
leave
xchg
xchg
shlb
dec
loope
loope
lods
test
or
lock
xchg
out
hlt
repnz
rolb
sbb
jge
cld
pop
adc
mov
inc
movsb
jle
push
sub
jno
xchg
jae
inc
xor
or
call
inc
ljmp
add
sarb
add
pop
inc
mov
xchg
jno
fidivs
ficomps
pop
stos
gs
push
ret
stc
inc
mov
out
jle
movsb
dec
ret
mov
loopne
sbb
jns
adc
addr16
xchg
sbbb
or
or
cs
jbe
out
mov
lock
out
pop
fwait
jo
stos
es
push
and
pop
xor
das
pusha
inc
mov
sbb
mov
mov
xchg
mov
push
shll
sbb
push
jns
js
mov
xor
iret
mov
mov
sub
stc
mov
xchg
into
jge
call
xchg
inc
inc
sbb
clc
repnz
cmp
xchg
sbb
int3
outsb
xchg
icebp
lcall
ljmp
outsl
cmp
cmp
jp
out
dec
inc
fsubp
xor
out
mov
mov
xchg
jae
in
pop
movsl
xor
dec
sbb
or
in
cwtl
loop
sbb
cmp
sub
iret
in
fistps
mov
sub
test
lock
movsl
dec
push
mov
dec
xchg
pusha
pop
aam
xor
repnz
adc
adc
jg
jp
adc
and
repz
loopne
inc
lahf
and
not
outsb
insb
inc
aad
daa
daa
lods
mov
sub
xor
jb
cmc
pop
adc
dec
ret
idivb
std
xor
clc
dec
sub
fmulp
mov
test
scas
test
xor
inc
push
repz
clc
pushf
stos
iret
and
jno
dec
rol
jp
fs
in
sbb
add
xor
dec
sub
cmp
dec
les
les
jno
aam
jg
out
cmp
push
push
ss
jnp
dec
pushf
mov
cmp
xchg
mov
pusha
pop
xor
int
aas
dec
test
inc
xchg
lret
adc
mov
adc
jb
mov
pushf
aas
fsubr
mov
sbb
push
push
enter
aam
jae
sti
dec
call
xchg
mov
push
bound
adc
sbb
ja
ret
cmc
cmp
cmp
in
or
xchg
imul
mov
cmp
sbb
push
xor
pushf
and
mov
notl
dec
xor
or
shrl
int3
lret
jl
jne
add
aam
lds
stos
lods
jae
mov
ds
jl
in
mov
mov
arpl
jbe
test
jns
enter
sub
pop
mov
stos
sbb
push
mov
das
xchg
add
push
jbe
sbb
inc
sbb
mov
in
dec
mull
in
adc
xchg
sub
mov
xchg
iret
jb
adcb
mov
inc
push
mov
xor
sub
aad
push
pusha
ja
ss
and
fidivrs
push
lea
leave
jmp
fsubs
sbb
or
ljmp
add
jnp
xchg
cmp
jb
pop
or
add
mov
mov
mov
pop
test
jne
mov
and
iret
fstpl
adc
pop
push
stos
fwait
cwtl
aas
push
or
mov
aas
lret
ja
ret
sbb
dec
fisubrl
xchg
lods
inc
jb
jg
gs
movsb
insl
cli
in
xor
mov
adc
pop
lahf
fstps
in
icebp
lods
subb
add
xor
mov
inc
add
jg
dec
outsl
insl
inc
mov
icebp
cs
test
cs
es
jmp
movsl
ss
sub
enter
stos
test
aam
adc
sub
jle
pop
outsb
mov
lret
push
push
pop
ja
insl
push
mov
adc
or
jecxz
cmp
adc
add
push
sub
fnstcw
cmpb
ds
inc
jle
jle
sbb
pop
add
aam
dec
call
xor
push
inc
sbb
adcb
hlt
cwtl
inc
xchg
and
mov
xor
sbb
add
ss
outsl
cwtl
rolb
lock
stc
loopne
or
filds
rcrl
and
inc
xchg
mov
pop
xor
dec
lcall
int
inc
jge
lret
mov
mov
test
or
sti
mov
movsl
loope
inc
xor
stc
push
mov
or
cli
add
mov
inc
pop
adc
int3
shl
jne
dec
xchg
out
xchg
jb
in
aad
sbb
pop
pop
cmpsb
mov
fisubl
push
ja
push
imul
leave
rorb
mov
pop
or
scas
das
rcr
dec
sub
xchg
push
push
mov
decb
xorb
xchg
jl
out
add
fmull
ss
dec
mov
and
cmpsb
and
sub
iret
daa
adc
push
inc
jno
fdivs
popf
inc
leave
inc
pop
pop
enter
pop
lods
pop
dec
int
jnp
loopne
enter
add
or
cmp
sbb
pop
jmp
sbb
or
add
shr
mov
dec
xchg
and
repnz
push
mov
in
add
icebp
lea
movsl
stos
cs
dec
mov
cmc
mov
lock
mov
inc
adc
int
sahf
mov
rorl
xor
out
jl
and
loopne
adc
data16
pop
adc
out
mov
inc
data16
jno
mov
jg
xchg
loopne
mov
ret
shlb
mov
lret
dec
push
ja
jge
ljmp
test
in
inc
pop
stos
mov
pop
mov
xchg
push
fst
or
dec
ficomps
cmp
lea
push
jmp
rorl
lods
mov
das
shlb
inc
adc
rol
and
xchg
imul
inc
mov
sbb
bnd
lods
aam
pop
inc
or
pop
imull
data16
push
xorb
fcmovnu
lods
adc
mov
aas
sub
cltd
add
mov
pop
push
aam
and
aad
cmp
sbb
add
pop
adc
inc
aad
adc
ror
repnz
sbb
push
cmp
mov
mov
or
dec
lock
fidivrl
mov
cmp
lcall
dec
cmp
push
popa
outsl
mov
in
pop
roll
jo
xor
adc
cs
sbb
ret
cmp
shr
pop
mov
insl
leave
cmp
cs
jg
pop
scas
cmp
adc
inc
lahf
sub
je
xchg
out
jge
mov
sbb
or
das
into
push
inc
or
sar
and
fstl
ret
dec
sbb
sbb
adcb
jle
es
push
mov
lock
in
adcb
pop
std
ds
je
jecxz
adc
jle
pop
push
mov
and
roll
inc
ret
stos
imul
sarb
rolb
in
dec
pop
je
mov
test
sti
cltd
imul
push
mov
iret
cmpsl
aad
or
pop
in
pop
rorl
push
ss
out
and
adc
stos
push
out
xor
loope
xor
ss
int
inc
add
iret
sbb
push
push
loopne
mov
inc
in
push
cmpsl
icebp
or
dec
ret
or
je
js
or
outsb
scas
mov
gs
inc
int3
scas
nop
or
int
test
imul
add
or
jle
popf
or
jnp
xor
lret
or
mov
lret
inc
xor
or
dec
outsl
out
jecxz
fwait
mov
pop
push
jae
aaa
mov
aam
dec
imul
iret
xchg
xchg
sbb
mov
push
sbb
mov
jne
dec
daa
aad
mov
hlt
pop
push
jo
lods
sti
negb
inc
xchg
mov
cltd
insl
leave
adc
adc
insl
out
mov
addl
ficomps
sub
stos
js
cmp
mov
push
ficomps
outsb
jae
sbb
daa
dec
mov
in
xchg
sbb
ljmp
in
shrl
jg
iret
inc
lcall
mov
pop
pop
imul
cmp
ljmp
mov
insl
mov
les
jp
aas
fldcw
repnz
jno
push
dec
out
cmp
popa
pop
sub
int
and
xor
scas
scas
jns
lods
cmp
in
mov
mov
push
inc
call
pop
flds
ret
in
xchg
mov
mov
ret
xchg
pop
pop
movsl
mov
jb
push
xchg
and
mov
or
cld
fiaddl
ja
add
pusha
xchg
adc
das
sbb
pop
add
mov
in
stc
push
ljmp
in
cld
mov
sub
clc
das
bound
inc
loop
inc
inc
je
jle
cltd
inc
adc
jb
xchg
mov
push
outsb
adc
fldenv
push
mov
fs
xor
sbb
mov
fs
stos
in
lock
ljmp
lahf
aas
adc
sbb
punpcklbw
cltd
mov
cmp
add
adc
jge
add
push
maxps
adc
dec
repnz
std
cmp
rcll
sub
stos
and
dec
cmp
fldcw
movsl
fs
mov
mov
and
adc
cmp
sbb
lods
dec
jne
pop
sub
std
inc
stc
xor
sbb
vminss
mov
scas
aam
jne
or
jne
adcb
add
ficomps
testb
mov
sub
imul
stos
mov
xchg
in
jae
cwtl
mov
sti
lret
bound
lret
pop
add
jbe
cwtl
shll
aas
inc
insl
pop
icebp
xchg
and
loope
sub
jne
in
jle
sub
or
sub
inc
mov
cmp
fcomps
xchg
pop
xor
lods
jg
imul
iret
mull
add
aad
mov
jg
fimuls
ror
push
fcmovbe
sbb
sub
dec
dec
xchg
insl
and
divb
and
xor
mov
out
mov
jae
push
jnp
dec
add
fdivp
in
add
push
mov
pop
inc
dec
sbb
and
jmp
jg
sbb
rolb
sbb
addl
sbb
das
outsl
js
movsb
rcll
ja
movsl
leave
call
int3
sbb
fcoml
sbb
or
push
xchg
leave
cmp
add
xor
lods
fbld
mov
mov
cmp
push
mov
mov
fstl
pop
mov
test
nop
push
scas
push
lahf
mov
test
loop
pop
sbb
mov
mov
dec
int3
sbb
icebp
daa
enter
incb
dec
hlt
sub
lea
push
ror
jmp
mov
shll
into
fnstenv
pop
and
push
data16
pop
out
mov
mov
push
shll
xor
adc
jb
mov
shll
sub
fwait
push
gs
pop
pop
das
jmp
pop
or
pop
inc
mov
sbb
aas
xor
add
call
clc
push
test
mov
into
fadds
cld
pop
dec
cmc
ja
in
mov
ja
lds
add
in
sub
mov
dec
in
mov
in
xchg
cmp
inc
sub
pop
jo
fcomi
xor
loop
mov
mov
add
xor
mov
dec
mov
mov
jl
push
mov
out
outsl
out
xchg
cmp
adc
inc
xchg
sti
adc
or
iret
loope
mov
or
jg
ds
sub
dec
sbb
or
ss
loopne
pop
mov
call
dec
imul
xor
xlat
gs
jnp
nop
frstor
xor
lock
frstor
std
adc
mov
cmpsw
and
cwtl
xchg
data16
movsb
das
in
in
pop
ret
int
xor
test
mov
add
mov
inc
call
mov
mov
xor
hlt
jle
jl
add
mov
dec
inc
es
icebp
push
shlb
dec
xor
movsb
sub
push
int3
push
out
inc
aad
enter
adc
test
pusha
pop
shlb
xor
call
pop
xor
cmp
inc
xor
rcrb
push
pop
out
in
test
int
inc
out
mov
jmp
sub
cld
das
inc
pop
jg
mov
push
mov
mov
xchg
inc
jae
or
pushf
adc
lahf
cld
ja
xchg
adc
lea
or
or
mulb
pop
push
and
dec
jno
mov
addb
jl
or
jmp
imul
data16
jge
xchg
inc
mov
test
movsl
dec
or
mov
xchg
shlb
lret
add
aas
push
mov
divps
lcall
pop
or
and
daa
enter
rorl
aas
dec
inc
or
fcoms
mov
sub
repz
add
and
hlt
jl
adc
hlt
pop
jmp
or
and
lea
push
xor
mov
loop
dec
pop
ret
ret
call
dec
outsl
or
mov
and
repnz
pop
adc
jge
mov
xchg
xor
rcl
repnz
jg
push
cmp
lods
pop
fisubrs
pushf
cli
push
jne
sti
leave
cmp
fsubrp
sbb
cli
je
outsl
pushf
scas
dec
cmp
inc
push
push
lods
stos
and
cmp
mulb
loope
pop
lock
outsl
sbb
movsl
cld
sbb
movsb
aad
enter
aam
sub
arpl
adc
push
enter
or
outsb
outsb
pop
xchg
add
mov
jns
push
outsb
mov
xor
nop
cmp
dec
sbb
fisttps
loopne
loope
sbb
scas
mov
pop
scas
sbb
push
shr
adc
pop
xchg
inc
rcrb
mov
add
pushf
ds
adc
push
clc
mov
sub
jg
fcomps
push
xchg
iret
orl
pop
jge
stc
pop
arpl
push
es
or
mov
sti
cld
xor
fcomip
sbb
sub
leave
ds
aad
mov
stos
jecxz
and
xor
dec
shl
xchg
cmp
ret
push
sub
out
imul
lods
dec
push
fistl
fsts
mov
cli
sub
inc
icebp
ds
aad
rcr
sbb
imul
sbb
out
arpl
adc
imul
xchg
mov
cmc
stos
cmp
aaa
stc
outsw
lock
jecxz
movdq2q
and
das
inc
pop
or
sti
lret
inc
dec
je
sahf
popa
loop
sbb
xor
push
mov
mov
dec
stc
scas
and
push
movsl
push
or
lea
aaa
or
adc
jecxz
loope
xchg
xchg
xor
clc
into
popl
xor
repnz
inc
pop
icebp
or
std
lea
push
lds
fnstcw
cmp
js
jg
nop
test
sbb
scas
mov
lock
loopne
jae
incb
mov
movsb
or
loope
in
in
cmpb
data16
sbb
loopne
rorl
jl
xlat
icebp
sub
push
cld
jo
call
fisubrl
cmp
xchg
data16
out
adc
int3
push
xchg
loop
xchg
or
xor
jae
pusha
lock
xor
pop
mov
pop
mov
mov
enter
loopne
or
xchg
jmp
xchg
adc
rcll
sub
xchg
enter
popa
inc
lret
push
pop
inc
xchg
pop
push
xchg
mov
jns
jno
add
xorb
sub
shl
sahf
stos
gs
gs
aas
aaa
jnp
push
sbb
pop
add
aam
andb
add
push
insb
fdivr
cmp
pop
cmc
aam
add
mov
push
push
fnstenv
add
mov
xchg
imul
scas
mov
lds
push
xor
daa
dec
cmp
test
mov
addr16
cmp
cmp
jb
lcall
stos
sbb
cmp
je
lock
jecxz
and
roll
bound
jns
test
fistl
pop
push
test
mov
jge
stc
lods
cltd
pop
adc
test
enter
pop
fmull
lret
shrl
inc
shlb
add
mov
test
xor
push
fimull
scas
push
adc
ds
xor
aaa
mov
dec
cli
mov
add
pushf
xor
xchg
fwait
je
pop
icebp
push
jbe
or
push
xor
adc
cs
push
dec
and
pop
xor
shll
push
and
and
in
add
pop
inc
aaa
adc
ret
sahf
mov
bound
or
repnz
stc
or
push
mov
push
cwtl
jno
push
repz
pop
pop
jbe
push
lret
pushf
faddl
dec
out
and
push
mov
stos
repnz
pop
pop
ficoml
inc
bnd
sbb
rcrb
in
sahf
and
push
les
int3
sub
sub
mov
jo
fcmovb
jl
out
out
fildl
xor
add
sub
in
lock
pop
shlb
jg
andb
imul
movw
jecxz
dec
mov
int3
dec
dec
mov
flds
adc
sbb
or
scas
mov
sbb
repnz
sub
mov
mov
jb
adc
shr
int
sub
add
fdiv
push
fildll
mov
and
xchg
mov
xchg
adc
jae
pop
pop
in
mov
out
pop
push
fistpll
call
lods
mov
lret
adc
pop
xor
jmpw
or
in
dec
sti
dec
and
jns
clc
adc
fistps
aam
jb
inc
jp
sbb
sbb
cmp
xchg
dec
nop
fisttpl
sub
pushf
nop
popf
push
xor
adc
sub
xor
cmpsb
rcrb
jge
xchg
addr16
jg
push
cltd
pushf
mov
and
hlt
xchg
loop
lea
popf
mov
adc
xor
lret
pop
mov
mov
or
or
mov
mov
push
ja
scas
jle
mov
lds
repz
push
mov
cmp
bound
push
lock
sbb
sbb
mov
ret
pop
pop
test
dec
shll
inc
pop
cmp
fstpt
and
and
fisttps
and
data16
shll
aaa
les
fyl2x
jno
sub
sbb
pop
mov
fcoml
mov
int
pop
adc
jae
jl
aaa
std
mov
adc
mov
mov
loope
xor
jp
xchg
pop
mov
lods
add
fsubrs
and
sub
push
cmp
in
call
popa
jl
xchg
push
cwtl
out
jge
cmp
in
dec
inc
bound
shl
bound
mov
jg
ljmp
in
fst
xchg
imul
xchg
sarb
loopne
mov
sub
leave
repz
iret
fwait
mov
popf
loop
lret
lods
or
repz
fsubp
mov
in
insl
push
lret
mov
in
cmp
xor
pop
pop
lahf
jg
adc
addb
mov
cmp
dec
add
jno
cwtl
aam
cmp
incb
xor
out
inc
js
pop
xchg
sbb
add
dec
in
aaa
fiadds
bound
xchg
popa
jo
aaa
pop
pop
ret
insb
loopne
pushf
rolb
mov
insl
rol
dec
lods
adcb
std
pop
pop
pop
lds
push
cli
loopne
fs
cmp
hlt
test
out
cld
or
or
inc
sarl
xor
ret
jns
adc
dec
push
cmc
lods
jb
xchg
rclb
mov
and
clc
xlat
out
mov
in
lcall
pop
cld
ljmp
dec
xchg
pop
popa
jl
jo
cmp
shlb
loopne
jo
pop
sahf
cmpsl
lods
jmp
mov
mov
mov
andb
add
rcrl
and
sbb
popa
in
dec
push
int3
stos
jle
mov
dec
mov
push
bound
lret
xchg
fcomps
sub
shr
flds
lret
je
lods
lods
jl
out
sub
xlat
call
mov
cltd
in
add
pop
add
ds
outsb
add
test
fistps
pop
pop
jno
push
fcoml
lret
jne
ja
lret
icebp
dec
jo
les
mov
and
fisttps
idivl
pushl
adc
pop
jge
xorl
sbb
pop
inc
mov
sub
lret
out
out
push
imul
add
inc
pop
sbb
sub
dec
push
in
ds
and
mov
jno
rorb
and
inc
in
mov
test
mov
xchg
test
fiaddl
inc
mov
push
mov
adc
cmp
sub
fildll
mov
hlt
sbbl
std
vpackuswb
add
addl
mov
xchg
out
jb
dec
cmp
xchg
or
pop
test
mov
pop
or
jg
jge,pt
scas
cmp
and
dec
push
shrl
cwtl
mov
sub
fisubl
cmp
pop
loope
loope
js
addr16
lock
mov
push
test
push
mov
in
adc
or
jae
movsb
das
aam
dec
mov
lret
jg
inc
sub
ja
iret
mov
lcall
ficomps
adc
rolb
jae
rclb
inc
add
mov
jne
sub
cmp
imul
leave
rcl
mov
cwtl
les
imulw
rcrl
fwait
mov
lods
dec
stc
fisubrs
insl
jmp
jg
cld
test
lods
fisttps
fbld
int
push
ljmp
pop
mov
stc
sti
out
in
inc
aaa
divb
pop
js
mov
xor
ja
cmp
jnp
lods
call
fbstp
into
xchg
mov
push
ss
mov
pop
mov
sar
mov
out
inc
andb
dec
jo
xchg
lods
jne
mov
out
pop
mov
xchg
cmpsb
add
cmp
fistps
test
push
cmp
fwait
incl
mov
mov
sub
or
cmp
movsb
sub
jnp
xchg
repz
stc
je
sti
cmp
cmpl
jmp
rcrl
aad
jge
in
sub
movsb
xor
out
dec
cmc
jns
dec
nop
cli
fwait
push
js
addb
cmc
call
mov
sub
lds
lret
das
test
mov
mov
aam
and
jle
dec
ss
add
jmp
fcmovnb
out
inc
lods
mov
out
cmp
in
bound
mov
adc
inc
jbe
mov
pop
jbe
xchg
lret
cli
in
dec
das
sub
inc
jecxz
mov
leave
xor
fcoms
aas
sub
jnp
mov
into
sub
dec
loope
aam
enter
mov
cltd
sbb
sbb
dec
incb
in
pop
movsl
out
mov
jmp
lds
cmp
movsb
nop
push
jb
and
and
notl
hlt
out
bnd
mov
sbb
and
je
push
inc
ret
add
inc
mov
shlb
dec
push
test
mov
add
incl
mov
pop
inc
sbb
lods
popa
mov
loope
mov
dec
loop
aad
xchg
and
inc
and
adc
pop
xor
push
adc
fildl
xor
dec
dec
adc
cmp
dec
lock
cltd
scas
xor
push
pop
sbb
xchg
xor
js
inc
out
xor
sub
push
fsubl
xor
int
push
add
call
cmp
cmp
nop
add
ja
xchg
fsub
in
pop
imul
outsl
add
sbb
pop
pop
add
pushl
inc
sbb
repz
jl
add
adc
cmp
jbe
adc
jg
pop
jns
push
inc
aas
fwait
mov
xchg
scas
cmp
cmp
test
ss
or
xchg
mov
mov
lcall
aam
das
sub
js
xor
sahf
fstpt
int
xchg
adc
cmp
xchg
daa
shll
jmp
aaa
sub
out
jb
test
gs
cmp
cmpsb
fldl
cmp
jge
hlt
imul
iret
sahf
mov
add
int
fwait
push
xchg
pop
pop
ljmp
push
fdivrl
mov
jae
jmp
pop
cmp
std
fsubs
push
cmp
inc
lock
es
mov
or
push
pop
xchg
jno
aas
push
pop
add
rcl
jg
imul
in
inc
lcall
shrl
push
push
shlb
stc
in
dec
cmp
popa
scas
mov
cld
pop
sub
mov
pop
mov
iret
imul
sub
adc
call
movsb
add
jge
lods
pop
jl
mov
and
sahf
or
je
addr16
fwait
mov
mov
add
call
pop
and
jnp
jnp
dec
sbb
ret
stc
mov
shrl
arpl
stos
sub
mov
xor
pop
or
pop
jno
xor
push
loopne
das
popf
hlt
ret
in
jno
das
fidivs
xor
mov
pop
lea
inc
pop
mov
mov
dec
dec
rcll
adc
cltd
mov
pop
cli
fucomi
mov
push
icebp
push
lds
push
insb
mov
popf
fst
fsubs
imul
repnz
mov
cmp
lods
mov
fldt
repz
pop
jb
shld
mov
pop
push
aad
fwait
cs
mov
adc
jle
mov
mul
ret
or
lods
popa
cmp
or
mov
rclb
mov
push
adc
sbb
divb
pop
sub
push
jbe
popa
out
inc
addl
arpl
add
call
adc
in
pop
sub
or
cmp
push
sbb
xor
inc
pop
out
sarb
mov
xchg
mov
int
jmp
push
inc
adc
jno
jbe
outsb
in
cmp
jecxz
popa
or
in
pop
cmpsl
repz
xor
scas
dec
inc
add
mov
mov
push
ret
mov
sbb
xor
ds
mov
gs
pop
inc
jnp
loop
mov
ja
fistps
sbb
or
inc
lret
aam
gs
fbld
cwtl
cli
test
fsubl
jae
stc
and
data16
repz
pop
sub
fmuls
lock
ret
repz
call
stc
dec
pop
test
movsl
sub
or
mov
shll
lods
cmpsl
dec
ret
pop
inc
idivb
pop
push
jnp
cmp
iret
cli
test
xor
push
stos
subl
jns
mov
rcll
mov
out
inc
inc
test
aam
mov
push
and
xchg
std
mov
add
pushf
xchg
scas
out
loopne
imul
and
pop
in
fildll
aad
sbb
mov
mov
std
pop
bnd
mov
decb
sti
jmp
and
fdivrl
pop
and
rcr
xchg
dec
repnz
fsubrl
adc
rolb
mov
jge
gs
mov
xchg
call
pusha
aaa
mov
adc
shrl
insl
and
cmp
in
sub
mov
sbb
in
add
dec
insl
push
add
pop
in
or
cmp
pusha
dec
sub
push
add
imul
in
sbb
clc
ret
lds
add
push
stc
mov
fsubs
xlat
sub
insb
lock
insl
xchg
outsb
sbb
mov
jns
popf
leave
pop
hlt
ds
pusha
gs
rorl
add
fwait
aas
sahf
mov
and
sub
adc
je
dec
or
ljmp
or
int
mov
call
mov
aaa
mov
fldt
mov
outsl
mov
pop
and
or
sbb
int
mov
mov
lahf
inc
mov
fmull
mov
inc
add
push
mov
loope
and
jns
sub
into
daa
cmpsb
cmp
les
fistl
in
adc
mov
jl
imul
into
push
inc
movsb
inc
sub
push
mov
outsl
loopne
mov
clc
cmp
int3
xchg
mov
popf
insl
sub
mov
jno
clc
lret
sub
scas
outsl
sbb
cmpsl
jno
add
in
xchg
cmp
xchg
push
aas
adc
adc
movsb
ffree
xor
adc
cltd
aam
sub
mov
cmpsb
push
leave
divl
lds
movsl
sbb
jmp
mov
fcoms
enter
pop
push
pop
les
mov
rorb
jge
jne
jb
test
or
mov
mov
mov
repnz
xchg
xchg
mov
test
andb
add
fcomp
adc
imul
or
push
adc
stc
shll
add
adc
pop
jg
sub
stc
inc
mov
mov
jnp
lret
test
rcr
notl
or
in
lahf
or
test
sbb
mov
in
and
out
add
and
mov
jb
and
adc
inc
dec
cs
jo
mov
hlt
jle
or
xchg
sbb
icebp
adcb
xchg
in
imul
ss
pop
mov
push
and
pop
cmp
in
xor
jle
mov
push
xor
cmp
fs
push
push
and
sbb
mov
mov
pusha
xor
jno
sub
sub
mov
push
sub
into
insl
gs
stos
dec
mov
lea
out
scas
jg
and
jb
add
jo
lods
dec
andl
clc
movsl
dec
pop
lea
test
cmc
and
pop
adc
scas
into
inc
xor
or
cmp
int
jl
mov
inc
rcl
mov
enter
js
mov
andl
push
dec
xchg
roll
adc
inc
dec
lods
iret
out
xor
inc
lahf
jno
gs
and
fmul
mov
and
fmuls
mov
stos
mov
adc
xchg
cmpsb
addb
xlat
push
sbb
pop
pop
sbb
mov
loopne
cmpb
arpl
fimull
pop
jb
addr16
sbb
sahf
loope
xor
jmp
lret
jge
int
xorb
xchg
push
test
mov
repnz
cmp
clc
adc
or
and
das
fwait
out
imul
xchg
xchg
inc
mov
cmpsl
dec
mov
mov
or
fldenv
mov
push
pop
adc
lcall
xchg
inc
movsb
sub
rcr
fildl
outsb
dec
jae
xchg
outsl
adc
sahf
pop
movsb
sahf
mov
arpl
push
or
outsl
ds
cmc
stc
data16
adc
mov
insb
jae
jo
sbb
popa
cmp
dec
lods
out
xor
or
arpl
inc
pop
xchg
rcll
pop
push
leave
movb
and
push
sbb
ja
dec
fnsave
cmpsb
pop
adcb
push
pushf
call
test
jg
adc
xor
push
lea
je
lea
mov
cmp
xchg
cwtl
je
aaa
jae
aaa
add
pop
mul
nop
dec
and
push
or
je
inc
xlat
inc
adc
and
in
imul
dec
rcrb
je
test
stc
dec
enter
pop
jne
push
xchg
adc
dec
sub
mov
sub
cmc
movsb
es
add
sahf
and
sbb
mov
pop
int3
dec
adcb
lea
add
cltd
adc
add
ljmp
and
fbld
lds
in
lds
aam
cmp
dec
shrl
add
push
xlat
cmpb
testb
leave
inc
ja
dec
inc
and
dec
sti
int3
fstpl
mov
in
inc
iret
push
mov
or
int
cmp
pop
mov
jns
popa
sbb
test
and
push
pop
xor
imul
xor
sbb
mov
in
les
mov
into
cmp
daa
bound
push
imul
dec
popf
daa
xor
pop
scas
rorl
cmpsb
cmp
lea
es
ja
and
imul
jecxz
lret
xchg
in
lods
hlt
mov
jecxz
push
cmpsl
fistpll
rsm
dec
mov
adc
jno
notl
sub
loop
push
test
lea
cmp
dec
mov
cmpsl
test
daa
repnz
pop
dec
scas
jb
scas
lock
jecxz
fists
mov
loopne
stos
cwtl
arpl
xor
and
dec
pop
lds
pop
mov
cmp
out
pop
sub
jge
jb
mov
push
mov
sub
addl
icebp
out
push
jle
sahf
adc
leave
mov
je
xor
hlt
cmpb
inc
push
xchg
mov
xchg
in
das
out
lret
xlat
fwait
lret
and
out
into
mov
idivl
sbb
push
insb
imul
int3
mov
aaa
push
xchg
add
push
stc
enter
fdivl
lret
add
loop
lods
ficoml
jge
mov
dec
subl
pop
sarl
xchg
xor
test
fs
mov
mov
add
std
ret
cmp
xor
in
icebp
jne
jp
jmp
clc
sbb
js
sbb
neg
mov
lret
repnz
mov
addb
loop
add
or
xor
insb
mov
xor
add
xchg
add
sub
dec
insb
adc
aas
add
jecxz
out
xchg
mov
sbb
mov
mov
daa
mov
mov
and
ret
and
add
xchg
popf
inc
test
jmp
xchg
jb
cltd
sbb
jle
mov
inc
and
jns
or
push
xlat
dec
cmp
dec
out
shlb
sub
clc
test
sbb
jne
sbb
arpl
imul
xchg
add
jl
call
and
ds
mov
inc
jae
or
pushf
cmp
or
or
push
or
add
cmp
cmp
dec
or
stos
adc
shlb
loopne
sub
and
xchg
stos
add
cmp
inc
pop
xchg
repnz
or
xor
les
mov
cmp
mov
fists
negb
mov
mov
cwtl
adc
jmp
js
mov
dec
ret
cmp
fdivl
mov
lea
pop
mov
ret
call
adc
mov
test
lcall
mov
mov
dec
inc
cld
push
fiadds
sbb
push
or
adc
inc
xchg
sub
sbb
fisubs
add
test
or
stos
sti
inc
sbb
push
ss
jg
push
jp
aas
push
adc
fdivp
inc
pop
or
dec
in
xchg
leave
inc
adc
mov
shl
inc
and
pop
bound
je
mov
or
call
rcrb
fistl
int
cmp
sub
rorb
fadd
mov
enter
clc
lcall
dec
pop
dec
jge
or
cmpsb
push
das
pop
out
cltd
rcl
loopne
xor
push
or
in
cmp
scas
clc
stos
adc
cmp
cli
xchg
insl
insb
mov
xor
dec
cli
xor
inc
movsb
lods
xchg
sbb
pop
and
or
xlat
pop
cltd
xchg
out
pop
dec
xchg
and
or
push
ja
add
mov
outsl
aaa
or
cli
sahf
xchg
mov
xchg
in
sub
push
or
cmp
outsl
inc
pop
push
jb
call
sub
sbb
xchg
clc
mov
mov
pop
pop
fstp
push
stos
sbb
insl
fwait
addr16
arpl
or
mov
mov
bound
and
mov
push
mov
xor
clc
fxch
aad
stos
pop
cmp
lahf
std
xchg
imul
lea
dec
xchg
cmp
test
push
insl
aas
lret
jne
jns
stc
dec
add
lods
adc
scas
insb
mov
cmp
rcrl
call
adc
lcall
fldl
cmpsl
jo
pop
pop
test
movsb
sub
xchg
sbb
fwait
icebp
mov
sbb
jp
test
stos
mov
lea
enter
jl
or
gs
mov
inc
sahf
add
and
roll
std
lods
pop
sub
inc
push
pushf
push
jp
cmpsl
test
fcoml
daa
jno
push
mov
adc
mov
jo
leave
or
cmp
mov
inc
pop
mov
inc
mov
cmp
int3
cltd
jo
or
dec
in
in
das
stos
fcomps
jp
adc
jp
push
xor
imul
mov
sar
cmp
sbb
out
loope
adc
push
daa
or
mov
mov
sbb
mov
out
test
hlt
push
lret
jnp
cmp
rolb
in
mov
cld
jp
pop
pop
jp
shlb
adc
shlb
push
mov
insb
loope
mov
dec
add
add
mov
pop
mov
sbb
xlat
data16
fisttpll
xor
mov
push
jnp
xlat
jae
ja
cmpsl
mov
pushf
test
xchg
lods
rorb
or
lds
pop
add
fcompl
in
jno
mov
and
lods
jmp
xorl
push
int3
mov
fidivrl
or
negb
inc
pop
dec
xchg
dec
sub
in
jno
call
xorb
xchg
repnz
pop
add
sub
in
and
and
mov
jecxz
and
sbb
inc
loope
lret
pop
cmpsb
pop
in
jne
js
xchg
mov
mov
testl
inc
loop
insb
dec
sub
jl
push
mov
pop
sti
add
cld
mov
cmp
add
cmp
ja
sbb
cs
mov
negb
pop
push
dec
stos
cs
dec
adc
adc
sub
mov
and
lods
mov
pop
add
cmp
push
mov
mov
pop
mov
mov
sbb
push
repz
dec
jl
xorl
fnstsw
ljmp
jns
shll
lret
mov
repz
sbb
repnz
out
pop
push
inc
bound
sub
test
push
pusha
scas
xor
inc
xchg
jecxz
ss
test
mov
decb
popf
pop
and
push
dec
out
mov
and
fsubl
add
lcall
jno
pop
push
pop
adcb
mov
inc
push
cs
movsb
sbb
or
dec
add
push
aas
push
dec
pop
ret
addb
jmp
cmpsl
int
and
enter
inc
mov
xor
xchg
xor
and
sbb
ficomps
daa
shr
jge
xchg
sbb
out
mov
jp
std
aad
add
jmp
and
neg
push
js
jo
movsl
pop
les
mov
dec
jge
lret
pop
dec
jmp
mov
ljmp
push
adc
push
xor
jle
aaa
sbb
enter
fidivrs
push
mov
jo
lds
dec
dec
daa
and
adc
fcmovnb
enter
and
clc
mov
in
cmp
icebp
gs
fildll
fstpl
dec
popa
add
mov
rorl
xor
mov
pop
xor
loopne
jmp
mov
sub
rcll
or
cmp
add
aaa
ds
add
sbb
jmp
test
inc
loop
rorb
dec
jns
mov
shrb
or
push
xchg
dec
jno
lock
fwait
inc
xchg
rcr
xor
int3
pusha
mov
cwtl
aad
shld
popf
ljmp
cmc
bswap
xchg
pusha
cmp
ret
xor
int3
or
repz
mov
cmp
insb
outsb
mov
sarl
sbb
clc
or
mov
in
xchg
mov
jae
fcoms
sbb
jns
ljmp
ficoms
es
pop
adc
fs
pop
mov
sub
cltd
int3
add
cli
pop
jl
mov
mov
stc
fnstsw
inc
nop
loope,pn
pop
cmp
scas
mov
call
mov
fidivs
jp
adc
push
nop
cmp
cmp
lret
insb
mov
inc
inc
std
je
sbb
pushf
or
lock
mov
jg
aam
add
movsb
je
mov
das
test
xchg
adc
aam
xor
and
xor
fsubs
mov
sbb
paddsb
std
sbbb
ja
fstps
pop
subl
aad
inc
sahf
inc
pop
mov
dec
cmc
pop
and
cmp
ja
pop
int
sub
das
sbb
stc
ja
je
mov
adc
xchg
adc
lea
jmp
mov
mov
in
pop
arpl
scas
leave
xlat
idivb
mov
loop
js,pt
cli
xlat
sahf
push
mov
aam
push
test
jle
sub
sbb
add
test
adc
ss
sub
dec
xor
movsl
mov
sub
jle
clc
dec
mull
cmp
inc
cmp
cwtl
or
es
mov
or
mov
in
popa
xchg
movsl
flds
aas
xchg
outsb
cmp
sbb
cli
cwtl
rcll
adc
lcall
and
cwtl
pop
bound
push
push
testb
scas
pop
hlt
enter
pop
std
or
cld
in
pop
jmp
xchg
fistpll
and
jmp
arpl
not
fisubs
mov
cltd
xchg
mov
repnz
sahf
push
sbb
daa
push
movsl
jg
cmp
xor
rorb
stos
stos
and
dec
call
sahf
jle
mov
add
dec
xchg
cmpsl
fdiv
mov
popf
adc
aam
dec
dec
loopne
dec
mov
test
lret
jmp
subb
test
xchg
nop
xchg
stos
pop
jo
fistps
xchg
sub
insb
movsl
jecxz
cmpsl
mov
mov
sahf
push
jp
int
or
into
adc
fnstenv
icebp
ss
std
imul
loop
cmp
dec
inc
icebp
pop
ret
inc
sub
cltd
jg
and
into
jns
fildll
repz
and
seto
push
push
aam
inc
daa
loopne
cltd
outsb
dec
sahf
lock
sbb
dec
inc
jle
push
add
cmpl
pop
js
rorb
loopne
add
fs
inc
xchg
or
or
and
jae
aaa
xchg
add
xor
mov
ds
pop
clc
xchg
add
cmp
movsl
test
mov
sub
outsb
xor
rcr
rorb
push
jl
mull
push
and
test
jno
cli
cltd
mov
ljmp
dec
jne
cwtl
adcl
repnz
and
jmp
sbb
outsb
ja
ja
sti
mull
jb
jg
dec
add
or
cmp
shrb
into
pop
int
rcl
mov
jns
add
add
jp
loopne
adc
mov
push
lahf
xor
inc
add
push
imulb
es
cmp
pop
dec
mov
movsl
ljmp
aaa
mov
fisubl
add
and
rcrl
push
push
rcr
std
cmp
lea
into
aad
iret
push
push
sub
push
inc
pop
dec
clc
mov
loop
mov
dec
jae
out
sbb
loop
test
or
or
stos
mov
cs
pushf
xor
xor
mov
jnp
push
stos
push
sbb
adc
cwtl
add
xchg
popa
fs
pushf
adc
clc
pusha
mov
pusha
jae
mov
jg
arpl
nop
mov
pop
add
outsb
adc
xchg
cwtl
dec
into
dec
aas
dec
dec
and
das
sbb
push
xlat
xor
sbb
outsb
push
jns
pop
or
sub
mov
cmc
int3
cltd
sub
jle
ror
rcrl
mov
xor
cmpsb
iret
shr
outsb
xchg
sbb
add
sahf
adc
enter
xchg
jmp
lret
out
jecxz
fcompl
jo
sbb
mov
cld
dec
mov
push
inc
xor
adc
xchg
lock
push
arpl
pop
dec
out
addr16
lods
sub
aad
ljmp
cmp
dec
mov
push
aas
aad
mov
cmpb
push
lock
sub
out
sub
pop
add
jge
mov
jbe
push
inc
pop
sub
pop
pop
fdiv
ljmp
push
mov
pushl
sbb
test
pop
in
and
call
jbe
mov
and
xchg
sub
dec
mov
mov
xchg
add
cltd
xchg
mov
mov
jp
mov
cwtl
add
in
imulb
lahf
push
inc
sbb
xlat
xor
fdivs
mov
sbb
icebp
leave
mov
loop
jg
add
lock
into
mov
mov
sub
fildll
movsb
mov
sti
mov
popa
sbb
fnsave
adc
mov
js
fcomip
sub
adc
outsl
sti
into
jp
xlat
stc
orb
jle
sbb
add
fs
movsb
pushf
jle
icebp
sub
pop
fisubrs
fsubrs
repz
imul
adcb
xchg
and
stc
xchg
dec
mov
int3
mov
adc
sub
jnp
push
loop
inc
jbe
sbb
xchg
sub
fiadds
out
xor
inc
sbbb
sub
adc
call
arpl
addr16
sbbb
inc
fldl
setp
mov
sbb
pop
adc
out
outsb
or
stc
sub
movsb
scas
cmp
or
push
in
bound
scas
xor
mov
mov
inc
aam
cmp
sbb
fmul
addr16
les
xchg
ficoml
and
adc
fldcw
xor
mov
into
cmpsl
mov
xchg
hlt
shlb
pop
jae
in
cmp
shlb
aam
pop
ja
imul
cltd
incb
sbb
mov
outsb
inc
or
add
jae
outsb
dec
add
nop
add
sub
jb
mov
imul
add
popf
fdivs
xchg
ss
dec
out
in
fs
jge
mov
lret
jb
or
loope
aaa
lret
stc
and
cmp
jo
lea
mov
push
repz
fnstcw
mov
ret
addr16
jns
mov
decl
mov
or
in
add
imul
cmpsb
popf
mov
out
insb
mov
pop
mov
rclb
clc
loopne
jb
push
mov
mov
adc
ret
xlat
jmp
add
cmp
lds
pop
dec
mov
push
je
adc
cmp
fildl
jp
pushl
jg
sti
dec
dec
scas
imull
jp
xchg
cmp
sub
daa
in
xchg
fidivrl
sbb
sbb
jmp
loopne
xor
nop
scas
stos
shrl
in
dec
mov
fisubl
popa
sub
pusha
and
ficomps
cmp
std
or
mov
xchg
pop
sub
lret
mov
mov
ljmp
dec
adc
xor
jns
vdivsd
cmp
stc
rol
xchg
test
scas
adc
lahf
js
test
lock
popa
fiadds
data16
jg
xchg
xchg
sar
jo
jl
mov
aad
push
subps
fsubs
je
dec
push
fwait
arpl
ds
or
push
and
std
pushf
inc
mov
dec
dec
lods
dec
ret
mov
icebp
mov
pop
sub
mov
jg
lods
es
rcr
cmpsb
mov
loopnew
pop
inc
fwait
mov
cmp
movsb
xchg
adc
or
out
test
push
adc
dec
cwtl
mov
testl
add
clc
adc
addl
pop
cmp
imul
jle
arpl
int
enter
xlat
jno
mov
pop
jge
into
daa
enter
inc
xchg
xor
mull
insl
psadbw
xchg
jp
and
into
or
dec
mov
inc
ret
lahf
test
in
jl
push
insb
sub
test
add
jmp
mov
push
or
and
mov
pop
mov
notb
das
movsb
pop
xor
and
sbb
push
inc
sbb
lret
push
movsl
sti
sub
mov
movb
fldenv
fdivl
cmpsl
rcr
outsl
fidivrl
xchg
fsubl
add
jbe
jg
ljmp
dec
dec
mov
movsb
xchg
shrb
jmp
xor
lods
outsb
lcall
dec
mov
mov
cltd
dec
loopne
lock
xor
nop
ljmpw
add
mov
inc
hlt
stos
leave
pop
test
mov
dec
and
mov
sbb
or
xchg
mov
adc
xchg
pop
push
or
bound
cmp
mov
sbb
pop
fildll
sarb
sbb
sahf
or
add
adc
das
inc
xor
pushl
lock
cmp
push
inc
cmpsl
fwait
dec
in
mov
pop
mov
stos
jg
xor
push
daa
bound
bound
cld
ds
out
mov
pop
xor
test
inc
inc
cmpsb
sub
push
sub
jbe
or
push
js
call
testb
in
sbb
sbbb
jne
or
std
xor
test
adc
inc
inc
lds
and
cld
loopne
cmp
ds
bound
jmp
and
push
rcrl
movsl
adcl
pop
sbb
lcall
leave
movsl
aad
jp
xchg
out
mov
shrl
bound
cmpsl
adc
mov
inc
xchg
ljmp
lods
pop
and
and
pop
mov
and
xchg
xor
inc
push
aad
popa
push
in
pop
aas
jno
or
pop
adc
push
sbb
mov
lea
cwtl
ds
mov
or
out
xchg
neg
adc
dec
subl
sub
jecxz
cli
adc
jg
decb
or
in
cmp
rorb
insl
clc
out
pop
mov
mov
or
scas
dec
cmp
jg
popa
jp
or
test
dec
cbtw
cmpl
repnz
dec
inc
pop
push
roll
sbb
aad
pop
and
imulb
rcrb
aam
adc
test
sbb
pop
std
ds
and
xor
adcb
arpl
test
movntps
cmp
lds
mov
ss
sub
adc
lea
test
cwtl
xchg
jns
out
and
fdivp
test
xlat
jnp
cmp
inc
scas
sarb
xchg
push
xorl
je
iret
cmp
sahf
and
test
dec
or
les
mov
cmpsb
xor
hlt
add
into
stc
stos
hlt
ja
iret
ds
sti
jg
popf
imul
lcall
inc
repz
frstor
leave
stc
pop
aad
dec
adc
fdivrs
mov
sbb
push
cmpsb
mov
inc
push
xchg
jle
push
xor
jo
inc
inc
leave
mov
mov
mov
nop
lret
shrl
add
stos
fimull
int
roll
push
clc
inc
xor
test
mov
addr16
adc
xchg
lock
int
adc
mov
mov
sbb
lods
imul
roll
push
push
cmp
cltd
mov
scas
mov
jnp
cli
sarb
enter
lea
fmull
mov
les
pop
dec
lret
cli
add
cmp
shr
pop
sbb
sub
dec
daa
jnp
mov
movl
adc
sbb
adc
stc
push
mov
insb
std
jp
les
sub
cmpb
lret
dec
insl
sub
sub
mov
xlat
mov
xchg
out
xchg
pop
mov
xlat
mov
scas
ret
pop
mov
jl
dec
out
push
loope
sbb
jle
scas
mov
dec
mov
lods
mov
loopne
push
cltd
out
in
inc
mov
sbb
jae
iret
jmp
js
lret
add
cwtl
adc
clc
xor
int3
test
mov
out
jbe
inc
mov
sbb
jno
add
out
push
popa
cmpsb
pop
or
sbb
jno
jno
in
mov
out
push
push
jbe
push
sbbb
add
inc
jmp
push
fmull
pop
add
cmp
imul
ror
mov
rolb
sub
add
jnp
mov
and
xchg
les
pop
gs
lods
or
loope
pop
sbb
imul
in
aam
test
adc
jae
sahf
outsb
test
sbb
add
push
aam
sti
mov
jne
out
clc
push
outsl
xor
pop
adc
pop
jp
mov
add
jae
sub
sbbb
aad
repnz
and
jle
mov
sbb
sub
shrb
sub
mov
mov
pop
xchg
stos
add
scas
insl
lea
into
or
nop
dec
add
jb
push
icebp
add
lcall
loopne
idivl
mov
add
push
jg
loopne
mov
lcall
mov
cmp
hlt
jp
and
lret
bound
cmp
sub
arpl
jb
fs
mov
addr16
inc
lock
cmpsl
scas
sbb
cwtl
out
fcompl
insb
leave
hlt
clc
jo
in
clc
pop
daa
mov
fs
clc
fs
fstl
ret
mov
adc
pop
fs
aas
dec
lcall
cld
sbb
lret
mov
fistps
es
aam
lds
mov
sub
sahf
out
ds
popa
enter
push
ss
aam
jns
int3
test
mov
xchg
ds
lock
cwtl
leave
or
insl
ljmp
mov
push
xchg
lods
adc
movsl
pusha
cmp
mov
xchg
out
xchg
pushf
dec
jbe
roll
enter
add
and
nop
sti
loopne
pop
jbe
mov
adc
dec
les
addb
xor
int3
xor
rcrb
loope
xor
adc
cwtl
lock
fs
imul
mov
sub
sti
mov
or
xchg
inc
ja
enter
jl
je
cmpsb
sub
outsl
pop
push
xchg
loopne
mov
leave
int3
xor
sbb
cwtl
jb
sti
in
jo
sbb
jmp
push
and
adc
enter
mov
xchg
test
pop
pusha
and
jle
xchg
in
lret
cmp
inc
mov
and
ret
xor
ficompl
bound
and
mov
subb
jo
inc
mov
jno
rclb
lret
sahf
in
push
and
push
pop
fildl
xchg
je
fnstsw
push
push
adc
sub
adc
jns
dec
mov
or
mov
or
jg
aas
push
sahf
add
push
mov
xchg
cmp
out
into
lock
out
inc
add
call
and
out
add
ja
push
mov
mov
cld
jo
adc
inc
cli
out
inc
les
enter
cmc
fcoml
cmp
mov
fbstp
outsl
or
mov
push
inc
popa
mov
jae
lcall
lods
mov
into
ja
sbbb
mul
lcall
mov
mov
jne
cmp
push
ds
das
xor
sbb
sbb
xchg
leave
and
enter
cmpsb
test
inc
ficomps
push
insb
mov
or
adc
pop
push
ds
rcll
sbb
xlat
jge
inc
out
xchg
cwtl
mov
xor
clc
cmp
sti
fildll
lods
or
daa
loope
aas
fsts
xor
dec
out
lock
orl
out
addr16
pop
sub
jmp
jp
rorl
mov
sbb
pop
inc
xchg
dec
xlat
rcll
push
jmp
inc
sub
xlat
sahf
xor
and
mov
mov
mov
ret
xchg
add
scas
imul
mov
out
add
inc
out
in
ret
mov
cmpl
cmpb
xor
int3
cmpsl
test
sbb
jle
mov
mov
xchg
or
fdivs
pop
adc
ret
lahf
jno
jmp
xchg
in
xchg
mov
aad
mov
xor
mov
adc
mov
dec
icebp
sti
jg
add
call
and
fstl
popf
shrb
pop
shll
stos
cli
cs
cmp
sub
or
popa
out
push
xlat
fisubrl
mov
shl
inc
cld
stc
hlt
mov
or
jne
orb
or
scas
and
pop
dec
lret
jb
enter
nopl
jmp
jns
cmp
fstpl
rcll
inc
out
inc
jo
inc
mov
ja
xor
jns
mov
cmpl
and
sub
mov
hlt
mov
xchg
mov
xor
dec
pop
jb
cltd
insb
xor
cmp
push
inc
lock
add
sbb
and
stos
addr16
mov
xor
add
mov
jbe
js
aas
fldenv
ret
rcl
adc
out
stos
lret
push
xor
fwait
test
sahf
cmc
mov
pop
aas
das
les
outsl
pop
fdiv
mov
roll
mul
pop
sbb
xchg
sub
sbb
jb
jne
xor
adc
ret
stos
jnp
push
dec
add
notl
inc
jmp
jns
pop
leave
and
or
inc
movlps
mov
push
in
push
inc
es
syscall
xchg
mov
enter
insl
shll
cmc
and
ret
or
jnp
pop
stos
inc
jnp
imulb
mov
sbb
pop
inc
cmc
insl
jg
out
dec
inc
dec
jp
inc
mov
jge
mov
in
loopne
lcall
sub
out
push
loop
sbb
lods
fnstsw
fldenv
pop
cwtl
jecxz
mov
cmpsl
dec
add
or
push
mov
rorl
add
cmc
mov
imul
jnp
pop
dec
dec
subl
pop
dec
mov
adc
cmp
jbe
movsl
outsl
loopne
orb
repz
pop
and
mov
stc
test
int
bound
sarb
cli
mov
xchg
mov
dec
dec
andl
and
mov
lret
rsqrtps
mov
jg
dec
and
out
jo
pshufw
daa
fwait
in
inc
jb
repnz
stc
jecxz
and
arpl
scas
cmpsb
lcall
push
sahf
movsl
adc
fbld
pop
das
idivl
stos
mov
mov
pop
into
adc
pop
jecxz
fs
hlt
insl
push
fsub
es
imul
and
ljmp
xchg
jne
rcll
ljmp
test
fdivrs
and
sub
popa
mov
test
xchg
cmp
scas
loopne
rorb
push
push
sti
push
jl
int
popa
sub
test
sti
fs
lret
mov
cmc
out
in
pop
inc
sbb
xchg
std
pop
testb
sti
sti
cmp
sub
fidivrl
mov
call
mov
sbb
jno
pop
dec
test
mov
jb
pop
and
jno
faddl
pusha
int3
push
mov
bound
in
test
cmp
arpl
repz
leave
sbb
sub
call
add
pop
jb
xchg
loope
xor
rolb
dec
movsl
scas
arpl
arpl
gs
push
jp
mov
das
popf
jno
adc
mov
push
aad
push
stos
movl
inc
outsl
lea
mov
fwait
test
or
popf
ret
mov
adc
sub
or
fwait
or
pop
sbb
sysret
arpl
clc
push
shrl
and
iret
cltd
int
mov
inc
ljmp
mov
icebp
dec
mov
imul
adc
rcrb
cmpsb
frstor
in
cmpsl
and
imul
testb
or
dec
mov
and
aas
pop
sub
mov
mov
mov
xchg
int
push
sbb
test
in
sbb
dec
pop
imul
inc
clc
jl
push
push
test
pop
ret
stos
jne
mov
xor
int3
imul
jecxz
jle
clc
mov
xor
pop
incl
inc
scas
jae
adc
cli
insl
test
lahf
fwait
xor
mov
mov
push
loope
ljmp
scas
shl
roll
cltd
cmc
sub
adc
jp
jp
loope
xor
out
xlat
pop
arpl
pop
sub
inc
or
mov
scas
in
mov
popa
scas
lret
in
imul
call
in
sub
xchg
cmpsl
xchg
push
nop
adc
add
mov
cmp
or
sub
push
je
or
dec
sahf
in
cs
pop
inc
and
cwtl
mov
in
fwait
aaa
xor
out
xor
adc
cmp
dec
fsubl
mov
enter
shr
leave
dec
adc
add
imul
pop
ja
shrl
mov
lret
movsb
push
mov
pop
jbe
lahf
dec
bound
pop
out
mov
jecxz
inc
xchg
cli
das
ss
fsubrl
push
sub
or
cmpsb
push
pop
sarb
hlt
dec
mov
popa
cwtl
and
pop
mov
push
mov
in
dec
aaa
push
cld
inc
add
rolb
mov
out
xor
cmp
dec
xor
push
cmp
test
jle
cltd
out
xchg
into
or
and
pop
mov
xchg
sbb
dec
mov
in
testl
bound
push
add
mov
cmc
arpl
movsb
push
push
ja
mov
jmp
push
mov
enter
test
test
sub
or
mov
jp
mov
fsubrs
das
xlat
in
pop
lahf
push
cmp
in
js
cmp
mov
mov
mov
dec
mov
push
sbb
out
add
sar
sbb
mov
inc
push
lahf
jmp
jns
and
outsb
test
pop
mov
into
aad
xchg
adc
sub
mov
sub
xchg
pop
sbb
add
bound
pushl
jmp
cmpsb
je
xchg
stc
lahf
xor
enter
jp
pusha
inc
xchg
push
ds
int3
lea
jg
gs
or
cmc
fnstsw
mov
sbb
xor
sub
fmuls
and
mov
cmc
lahf
mov
pop
out
pop
dec
scas
pop
lahf
add
mov
outsb
adc
push
mov
pop
arpl
mov
out
adc
adc
dec
push
rcrb
popl
mov
arpl
into
mov
xchg
aad
push
inc
mov
roll
adc
addr16
xchg
jne
sbb
shlb
outsb
js
ret
test
call
cmpsl
and
mov
mov
pop
fidivl
int3
mov
call
jge
test
popa
loopne
xchg
jno
mov
bswap
dec
stos
pop
dec
aad
sub
outsl
in
pop
push
cmpsl
and
sbb
push
out
add
cmpsl
jbe
popl
cmpsb
cwtl
jbe
fwait
outsb
scas
and
stos
adc
mov
cmp
test
adc
jae
int
fldln2
mov
push
adc
scas
ret
xchg
int3
sbb
call
in
inc
insb
ss
movsb
outsb
popl
cmpsl
xor
sub
lea
insb
lock
mov
daa
add
outsl
mov
or
xchg
test
lea
mov
mov
adc
and
push
add
shll
arpl
cmp
test
xchg
mov
push
shlb
sbb
sbb
js
ret
dec
push
xchg
cwtl
lcall
out
xchg
loopne
xchg
adc
rcrb
pop
pop
jecxz
ret
mov
pop
pushf
sbb
fstps
ficoml
test
in
push
xchg
sub
push
sub
repz
in
repnz
push
cld
out
lahf
cmp
xor
lahf
jbe
sub
jb
add
add
and
rorl
test
clc
push
mov
aas
lods
leave
jno
jb
adc
add
xor
add
and
cld
movsl
loope
loop
adcb
dec
icebp
rcll
fstpl
push
xor
ss
stos
repnz
xor
mov
into
jg
fcmovb
mov
gs
pop
jnp
cmp
jle
fnstcw
mov
enter
int
cld
movsl
fildll
xor
xchg
aam
dec
mov
and
flds
push
shll
dec
iret
sub
pop
cld
dec
test
jno
dec
add
xorb
mov
mov
cmc
mov
into
adc
jl
xor
pushf
mov
es
dec
pop
hlt
add
inc
clc
stc
sbb
add
add
cld
leave
xor
push
and
mov
pop
cmp
mov
int
adc
pop
outsl
mov
jle
call
cs
push
es
jb
in
sbb
addl
out
aad
lea
dec
insl
jge
xchg
xchg
subl
xor
std
fiadds
cltd
mov
jecxz
xlat
jbe
mov
fwait
jnp
std
add
adc
call
cmpb
ds
jne
jne
xor
push
in
mov
mov
jb
sbb
dec
ret
cli
ds
shlb
fcomps
jbe
sti
in
sub
mov
mov
inc
or
movsb
test
std
xor
push
inc
xchg
iret
fcompl
push
sub
push
je
js
rorb
jg
ds
jmp
mov
jg
std
push
and
xlat
out
pop
adc
mov
mov
cwtl
push
pushf
cmp
dec
imul
cmp
mov
sub
clc
add
andl
mov
cmp
aas
and
icebp
dec
push
iret
push
xchg
out
push
mov
xor
xor
cmc
clc
lock
and
inc
test
and
mov
mov
test
inc
loope
inc
popa
xor
loop
sub
or
and
rol
aas
pop
jecxz
hlt
inc
or
mov
iret
dec
sbb
jne
lcall
add
lock
pop
fs
mov
loope
hlt
std
dec
addl
jbe
jp
mov
arpl
mov
mov
push
gs
xchg
pop
je
lahf
xchg
pop
sahf
insl
mov
and
repz
xorb
mov
test
mov
inc
mov
stc
mov
xchg
ljmp
inc
test
push
fs
cld
pop
add
hlt
mov
inc
sahf
sahf
push
ljmp
xchg
lods
pop
daa
xor
iret
dec
push
icebp
sub
stos
adc
jnp
jb
bound
jl
fildll
or
sub
push
das
gs
mov
fdivrp
mov
inc
push
sbb
imul
cs
inc
pop
cmp
loopne
mov
adc
ret
jle
mov
popa
cmp
xor
fwait
pop
pushf
dec
or
clc
sub
ja
enter
jp
mov
mov
daa
jp
mov
icebp
add
jp
add
xorb
inc
mov
cmp
aaa
or
out
mov
xchg
mov
movsb
out
inc
mov
jae
mov
push
aam
dec
cmp
inc
in
cmp
es
or
shll
pop
icebp
xchg
scas
jg
mov
cltd
repnz
xchg
mov
int
mov
xlat
xchg
xor
out
dec
inc
jns
jbe
push
mov
push
adc
pusha
cld
fcoml
pop
mov
inc
imull
mov
mov
cmpl
jno
sbb
fs
or
or
add
mov
adc
lea
sbb
icebp
dec
pop
pop
xor
cli
jno
mov
ss
movl
cwtl
stos
mov
push
testl
xchg
cmc
fidivl
sub
inc
outsl
mov
push
pop
sbb
or
out
popf
fstpl
les
jns
fst
daa
or
sbb
lds
inc
ja
or
add
fiaddl
pop
test
aad
dec
shll
cld
push
lcall
sti
xchg
mov
aam
lret
push
sbb
cmc
xchg
sub
in
movl
adc
shr
roll
cli
mov
in
testb
inc
push
xor
jecxz
inc
inc
inc
xchg
mov
icebp
fs
rolb
cli
out
xchg
lods
mov
push
cmpsl
mov
adc
inc
inc
lock
js
roll
sbb
dec
cwtl
fistpl
cmpsb
es
scas
cs
or
in
mov
jnp
mov
cmpsl
imul
cs
rcll
loop
dec
and
andl
cmp
xor
adc
jge
jae
mov
jbe
xor
fwait
lcall
movsl
jbe
and
repnz
xor
ljmp
shlb
mov
aam
stos
pusha
inc
sbb
cmc
xadd
pop
ret
push
jb
xor
mov
or
out
sahf
dec
mov
inc
mov
ror
daa
pop
xor
mov
sbb
xchg
lcall
push
dec
test
faddp
popa
mov
push
cli
push
push
in
in
frstor
in
mov
addr16
in
lcall
in
pop
xor
lea
cmpsb
adc
bound
int
xor
or
mov
sbb
adc
leave
fldl
sbb
cmp
inc
xor
add
fildl
adc
mov
jcxz
dec
xor
aaa
aam
rcrl
inc
std
jno
push
pop
adc
inc
loop
jecxz
movsb
call
lea
mov
daa
pusha
fstl
negl
movsb
sub
mov
imul
addr16
add
pcmpeqd
lret
cltd
mov
mov
inc
push
xor
es
cld
xchg
mov
filds
stos
ret
mov
ret
outsb
in
subb
fwait
aas
in
push
cmc
inc
xchg
je
inc
and
pop
add
cli
dec
xor
or
sub
xchg
mov
jmp
std
pop
insl
xlat
js
in
pop
and
push
int
jne
mov
fnstsw
loopne
loop
mov
lods
je
mov
jns
inc
data16
cmp
dec
cmpsl
addl
and
or
or
push
in
fildll
mov
xchg
in
cs
fisttpl
and
mov
orl
int
inc
int3
dec
loopne
mov
jl
aam
xchg
or
int3
push
fsubp
pop
cmp
pushf
es
ja
cmp
ljmp
cmpb
bound
xor
fdivrs
add
xchg
cli
dec
daa
push
nop
mov
jo
ds
loop
mov
into
mov
mov
jmp
push
inc
adc
in
jp
loop
push
pop
sub
lods
mov
xchg
xchg
push
push
inc
lds
test
sub
rorb
inc
mov
gs
int
or
fidivs
xor
add
cmp
push
sub
adc
cmpsb
imulb
push
mov
out
sbb
cli
iret
add
mov
in
dec
rcr
or
lds
lea
andb
fs
cmc
lock
outsl
repnz
sub
in
sub
scas
jl,pn
xor
jae
fsubs
bnd
adc
imul
sti
lods
lock
cmpsb
out
fisubl
cmp
cmc
arpl
push
jg
inc
scas
jp
sti
fisubs
insl
adc
andb
lods
sahf
aas
test
sbb
cld
lds
daa
outsb
test
daa
sub
mov
in
icebp
push
dec
scas
dec
stos
imul
inc
xchg
xchg
mov
mov
add
mov
lahf
andl
mov
movsl
inc
mov
test
ja
pop
dec
sub
cli
sbb
gs
cmp
pop
sbb
movsb
mov
in
mov
inc
and
mov
pop
pop
lock
out
pop
stc
mov
adc
xchg
jmp
clc
dec
ja
scas
mov
jecxz
or
out
pusha
or
jo
shll
movsl
sbb
push
adc
mov
ljmp
jb
jns
sahf
adc
xchg
xlat
cmp
loope
nop
loopne
xchg
jne
test
jl
stc
or
cltd
sbbl
add
pop
sbb
mov
stos
dec
adc
add
fstl
hlt
or
stc
mov
and
jo
lcall
out
xchg
wrmsr
pop
xchg
sbb
ret
add
test
lods
loop
jno
mov
mov
rcll
push
roll
test
push
or
dec
jg
cli
mov
ds
shlb
mov
jg
jmp
insb
cmp
xor
ficoml
mov
ret
aam
mov
mov
stos
aad
mov
xchg
pop
iret
pusha
stos
stos
inc
rorb
data16
cli
adc
cmp
lret
pop
sahf
mov
adc
ds
mov
ret
cmp
repnz
cld
inc
add
mov
and
add
xchg
stc
sub
jns
mov
in
add
xchg
enter
notb
inc
add
push
stos
test
lcall
dec
nop
push
aas
loopne
jl
cmpsb
and
jge
mov
cmpsb
lods
mov
mov
add
pushaw
in
lods
cmc
hlt
cli
or
lahf
shr
outsb
inc
repz
shlb
in
mov
adc
ja
dec
mov
push
ss
sbb
imul
adc
cld
cltd
push
adc
fs
pop
sbb
mov
out
outsb
fstpl
rcr
sub
out
int3
cmp
test
pushf
repnz
fists
hlt
dec
jg
pushf
es
mov
ja
testl
xchg
push
xor
aad
sub
adc
rclb
adc
sub
jmp
sti
pop
jle
aam
lock
mov
aam
xchg
jb
mov
icebp
es
adc
mov
inc
pusha
test
lods
mov
jne
sbb
and
leave
ret
and
mov
pop
xchg
bound
sbb
and
lret
scas
sub
cmp
outsb
or
subb
loop
and
add
sub
mov
sarl
outsl
cld
inc
inc
mov
lcall
testl
fwait
pop
out
shll
fabs
mov
mov
and
outsb
inc
add
int3
xchg
and
inc
into
lods
sub
test
pop
mov
mov
mov
xchg
jl
push
mov
and
pusha
incl
mov
push
ljmp
cmp
mov
popa
fwait
outsb
fdivl
cltd
loop
mov
xchg
and
mov
popa
lcall
fucom
dec
xor
cmp
pop
adc
push
cli
out
cli
sub
das
dec
add
xchg
aaa
loop
xor
popa
out
lock
lds
lods
je
test
xchg
mov
pop
push
and
mov
rolb
jle
out
inc
in
fadds
daa
mov
dec
insb
mov
lds
je
push
mov
dec
push
fsts
add
and
sbb
xchg
xchg
iret
pop
std
cltd
inc
add
std
aam
jecxz,pt
jl
sarl
leave
jge
push
jmp
xchg
cmp
xchg
nop
push
into
add
push
pop
stc
cmpsl
pop
xchg
jo
xchg
inc
pop
xor
sub
or
mov
mov
jno
jb
das
inc
loop
and
inc
xchg
pop
scas
leave
mov
into
testb
imul
mov
scas
fmulp
xlat
inc
mov
int
lods
push
adc
pop
cmpsl
int
test
aam
sbbb
cmc
cmp
jmp
mov
ret
imul
pushf
jbe
or
adc
sbbl
lret
xchg
dec
or
jo
bound
mov
push
or
imul
movsb
hlt
out
scas
cwtl
push
pop
cltd
mov
fldt
cld
in
imul
shrb
cmp
inc
push
push
inc
pop
sbb
fidivrl
sub
repz
in
ret
mov
mov
inc
mov
and
jg
icebp
leave
enter
test
ret
mov
jno
pop
shlb
pop
sbb
push
out
popa
fistpl
xchg
subl
sub
push
ss
cmpl
cwtl
rorb
or
aam
jns
cmp
out
divb
lods
aad
cmp
and
pop
stc
leave
and
ds
cmp
xlat
test
cmpsb
loop
adc
repnz
mov
data16
push
sbb
bound
fidivrs
mov
mov
cmpb
jl
add
test
pusha
lds
imul
sbb
out
inc
push
add
push
sbbl
mov
popf
xchg
lret
adcb
cmp
push
mov
jae
push
or
mov
and
hlt
add
shl
push
cmp
and
test
pop
dec
lds
mov
ret
into
push
test
repz
xor
test
stc
cmp
mov
push
mull
cmpsl
movsb
or
call
add
stc
cwtl
mov
pop
in
push
lret
mov
push
dec
cmc
dec
adc
popa
jmp
xor
icebp
or
subb
and
lods
mov
aaa
fnstenv
sub
pop
fistpll
dec
divb
fsubp
loope
mov
mov
cltd
testb
inc
mov
ljmp
mov
sbb
lahf
mov
mov
xor
sbb
sub
into
jne
mov
jg
popa
xchg
add
fnstenv
mov
ror
gs
push
xchg
lods
mov
aad
or
jb
lods
add
cltd
mov
iret
mov
aam
fists
pop
pop
pusha
out
in
or
push
shrb
std
ja
mov
les
pop
dec
dec
push
dec
push
lods
sbb
cmc
mov
pop
adc
mov
jbe
sbbb
lcall
outsb
ror
sbb
sbb
test
and
subl
ljmp
and
mov
pop
mov
cmp
push
dec
cmpsl
cmc
ret
pop
jns
clc
lahf
stc
loop
push
loope
pop
and
jge
in
rcl
add
sarl
sbb
fnstenv
enter
cmp
test
add
mov
bound
mov
cmp
dec
negb
adc
adc
cs
jo
out
popf
mov
int3
pop
cwtl
push
add
and
cmp
sahf
cmp
adc
cmp
in
mov
sub
xchg
sbb
jno
jge
out
int
or
push
sbb
inc
inc
and
pushf
enter
pusha
jne
jb
cmp
cmp
aad
cltd
and
std
jl
jnp
fldcw
ljmp
std
mov
mov
xor
mov
cmpsl
cld
jmp
test
dec
fucomip
test
jmp
adc
push
out
mov
cmp
add
pop
leave
lret
inc
inc
sub
or
pop
push
cmp
cwtl
xor
inc
push
jns
dec
adc
clc
mov
inc
outsl
and
xchg
mov
inc
fsubs
pop
movl
cmp
jg
add
fimull
jne
dec
sbb
sbb
sub
pop
mov
mov
sbb
bnd
mov
push
pop
xchg
ss
push
lret
test
xchg
aas
dec
test
add
mov
jb
or
cmp
das
push
sub
je
mov
inc
ret
clc
ja
dec
jb
mov
pusha
loope
icebp
fcmovb
sub
xchg
sbb
mov
pop
lcall
scas
pusha
xlat
xor
repz
xchg
sub
inc
lods
jne
sbb
push
aas
inc
dec
xchg
jmp
push
rorl
cltd
into
lods
lcall
in
outsb
mov
in
sbb
push
mov
inc
leave
or
lret
out
cmp
xor
rcll
xor
mov
jbe
aas
dec
lahf
dec
jno
xchg
imul
dec
scas
dec
mov
mov
lret
mov
xlat
xchg
bound
aaa
sub
sub
cmp
inc
mov
xchg
mov
loope
and
sti
mov
sub
add
mov
jo
mov
repnz
icebp
in
add
mov
paddd
xor
sbb
dec
cmc
mov
cmp
xchg
cltd
divl
bound
dec
cmpsl
sbb
aam
daa
add
xor
jg
xchg
je
xor
pop
arpl
jmp
mov
call
mov
push
das
mov
fiaddl
in
dec
outsl
in
pop
or
mov
xchg
in
std
inc
xchg
cmp
cltd
les
cli
nop
sbb
jae
mov
inc
lcall
jl
push
lret
pop
adc
cmpl
inc
xorl
jno
xor
repz
cmc
jecxz
xchg
shll
pop
and
add
or
xor
mov
leave
lea
insl
adc
icebp
xchg
bnd
or
les
push
jecxz
jecxz
pop
adc
into
or
inc
and
mov
mull
cmp
push
mov
add
add
loopne
roll
pusha
xor
mov
jge
jmp
in
lret
jne
arpl
hlt
push
push
mov
imul
aas
rorl
jecxz
popa
cs
xor
mov
ret
int3
ja
xchg
or
adc
inc
movsl
sti
lcall
add
mov
add
sub
inc
out
and
or
aas
adc
adc
inc
call
test
mov
ljmp
sbb
jae
sarb
icebp
jecxz
cwtl
sub
inc
int
cmp
sbb
mov
enter
mov
cmp
cmp
adc
lret
pusha
cmpsl
jne
leave
rcrl
fld
mov
push
sti
negl
push
pop
rorl
or
xchg
pop
aaa
in
in
mov
jg
inc
idivb
inc
xchg
push
hlt
pop
mov
mov
pop
out
testb
in
int3
idivl
xor
mov
dec
cmp
repnz
repnz
sahf
push
pop
repnz
rol
push
inc
dec
fnstsw
inc
in
jbe
fbld
fldl
mov
sbb
dec
in
cmp
xchg
repnz
pop
imul
sub
pop
sbb
ret
das
mov
add
mov
sub
push
mov
movsl
aad
daa
repz
xor
jno
pop
adcl
adc
data16
push
das
ja
data16
xor
and
jle
pop
es
lahf
jle
cld
fs
xchg
dec
ficoml
add
enter
jmp
repnz
ds
inc
dec
pop
mov
xchg
mov
push
sbb
adc
rcrb
fcoml
or
fldl
rclb
lds
insb
mov
scas
mulb
cmc
push
push
ret
jle
and
js
push
and
jmp
insl
adc
sbb
or
pushf
sahf
shlb
bound
or
inc
in
adc
and
shl
gs
out
ss
cmpsl
sbb
xor
mov
andl
fnsave
push
and
insb
scas
xchg
sub
jp
xor
ret
decb
xchg
lret
gs
mov
aas
in
xchg
loop
pop
jp
push
push
xchg
std
jne
jg
int
aaa
sbb
les
stc
lret
roll
push
mov
cmp
cmp
mov
mov
push
mov
fdiv
xchg
iret
cmp
fisttps
lock
aad
stos
out
daa
jl
lret
cmp
pop
fsubrl
hlt
lea
sbb
lods
icebp
sbb
bsr
inc
outsb
daa
adc
mov
popa
cmp
in
pop
fildll
add
je
jg
pop
adc
insl
in
xchg
xchg
jne
fdivrs
inc
or
cmp
pop
lods
xchg
xor
push
call
mov
or
push
sbb
dec
int3
data16
pushf
jp
mov
sub
mov
int
mov
pop
mov
add
aam
cmp
movsl
xor
push
mov
movsb
loop
add
lret
mov
out
aaa
leave
jb
lock
fists
sbb
xchg
xor
mov
shrl
shrl
out
jo
test
mov
test
xchg
xor
lea
shl
pushf
and
cmp
and
aad
repz
mov
mov
add
mov
xchg
les
mov
cs
loope
adc
mov
sti
or
push
or
dec
mov
push
outsb
pop
inc
mov
dec
cmp
je
mov
sbb
loop
cltd
mov
out
push
ja
cmpl
push
mov
mov
cmp
ds
cltd
pop
inc
jne
movsb
lidtl
movsb
iret
in
xor
push
pop
jnp
pop
cmc
call
xorl
lock
sub
sbb
xor
mov
in
push
outsb
test
sbb
movsl
lods
push
push
aam
mov
in
fs
inc
aam
je
inc
sbb
dec
ljmp
and
mov
ret
mov
sub
rclb
mov
idivb
add
int3
cltd
fs
cmp
pop
out
mov
xchg
scas
in
mov
pop
mov
scas
ss
inc
mov
hlt
inc
and
or
inc
popa
lods
pop
jo
popa
inc
out
jmp
les
scas
lret
repz
stos
pop
mov
mov
dec
outsb
fwait
mov
cli
mov
add
jge
and
sub
stc
pop
movsb
push
cs
jle
add
and
repnz
mov
cli
xchg
push
es
cmp
xor
inc
dec
push
pop
movsb
arpl
mov
or
xchg
addr16
ljmp
nop
pop
in
inc
fnsave
shlb
xchg
dec
cmc
pop
imul
fisttpll
pop
cmp
push
push
hlt
pop
divl
mov
enter
incb
cmp
test
pop
adc
lds
pop
loop
ja
add
inc
jno
xchg
scas
cmpsb
jg
xchg
xchg
mov
out
jmp
cmp
sbb
fsubrl
xor
loope
mov
add
and
or
mov
out
xlat
xchg
cmp
in
and
push
ljmp
shl
adc
add
mov
dec
push
js
les
inc
inc
or
in
test
inc
sub
lock
mov
insb
scas
rolb
lret
rcll
inc
push
inc
adc
clc
sub
lds
push
mov
lret
jmp
pop
out
dec
jbe
dec
cmc
popl
mov
add
jbe
ja
jae
lret
dec
pop
fcomi
stos
ss
hlt
insl
fildl
ret
sbb
sbb
push
mov
sbb
aam
insl
or
call
push
js
pop
pop
stc
pop
outsl
or
loop
xor
in
pop
fwait
xor
pop
scas
adc
push
mov
cmpxchg8b
ret
xor
sbb
and
popf
arpl
jnp
imul
pusha
imul
or
jbe
mov
lret
push
dec
movsl
mov
mov
sbb
dec
sub
adc
fmuls
loopne
cltd
in
test
or
push
jne
sbb
lret
loopne
mov
fadds
icebp
int3
and
add
mov
push
lods
mov
push
xchg
bound
xchg
bound
pop
test
loope
out
shll
pop
jo
ltr
sub
or
imul
mov
xor
imul
jae
outsl
mulb
lds
sbb
cmp
push
testl
imulb
ss
sbb
mov
aam
mov
inc
clc
mov
inc
or
stos
inc
mov
xchg
aas
cltd
negl
jle
jb
inc
addb
sub
xchg
out
or
arpl
ss
adc
outsb
andb
dec
bound
popa
cmp
mov
lods
test
jno
push
mov
dec
nop
mov
cltd
mov
js
adc
or
pmuludq
push
mov
mov
mov
adcb
stos
mov
imull
sub
aaa
mov
push
cld
push
xchg
pop
xor
dec
sub
repnz
mov
jle
sub
xor
jl
push
arpl
push
popf
lret
cmp
and
dec
mov
lret
aaa
scas
outsb
lods
xchg
dec
popa
fidivrl
nop
xor
push
sub
jecxz
fists
aas
adcb
int3
fstp
inc
push
test
cmp
cmc
pop
notl
adc
cltd
pop
xchg
jecxz
sbb
std
filds
cmc
mov
test
shlb
in
leave
adc
stos
out
int
shll
cld
lret
add
lcall
push
adc
jmp
and
ror
or
add
add
insb
fdivs
test
jbe
pop
int
jno
je
addr16
jle
xor
mov
loope
ja
mov
inc
cmp
add
push
add
push
and
adc
dec
xchg
pop
enter
jno
iret
enter
push
aas
test
sub
sub
insb
and
fwait
xor
pop
fidivrl
xor
jp
and
jnp
insb
sbb
push
cltd
fildll
cmp
pop
lcall
mov
loopne
fstp
mov
lahf
mov
fildll
and
mov
cmpsl
insb
inc
aad
xchg
add
cmpb
in
aad
cmp
lock
push
inc
out
aad
movsb
lret
jg
xor
es
outsb
push
xlat
pop
fsubrl
xchg
punpcklwd
mov
pushf
inc
mov
ror
shlb
dec
ret
fldl
stos
out
pop
adcb
dec
xor
push
inc
jb
cmp
and
test
dec
std
gs
pop
pop
mov
and
inc
rcrl
mov
pop
dec
cmpsb
mov
pop
xlat
mov
add
xlat
rclb
addr16
hlt
ja
pop
jmp
cmp
ljmp
push
hlt
push
jno
inc
sub
lods
sbb
ss
xor
xchg
and
sbb
pop
lock
jecxz
iret
stos
lcall
jmp
adc
and
cwtl
mov
addb
fwait
xchg
outsb
adc
loopne
xchg
sbb
in
adcl
cmp
popa
sub
lahf
das
sub
stos
loope
repnz
out
insl
fdivrs
outsb
sub
adc
ror
inc
or
shrb
jmp
in
adc
dec
outsb
lea
idiv
sub
ja
ljmp
lret
test
and
jge
leave
xor
lret
xchg
shl
and
mov
cmp
add
sbb
xchg
test
sub
push
mov
jl
ret
mov
pop
mov
fsubrs
push
test
pop
jae
cld
into
push
and
add
pop
jp
and
das
mov
inc
sbb
add
mov
push
dec
mov
mov
and
shll
notb
xchg
movsb
mov
dec
mov
xlat
cltd
test
pusha
mov
xchg
shl
adc
movsl
push
sti
pop
mov
mov
adc
cmc
int3
jl
int3
in
mov
shrl
inc
xchg
push
inc
jmp
aaa
loope
fists
xchg
xor
leave
pop
xchg
test
data16
push
mov
cwtl
inc
adcb
lods
sub
dec
push
fcoms
sub
lock
add
scas
jg
jg
loop
dec
imul
popf
out
loop
jmp
mov
jecxz
or
aad
mov
fisubl
adc
xchg
pop
cs
dec
fsts
xchg
and
dec
or
jmp
in
sbbl
aas
sbb
or
jae
push
addr16
pop
or
iret
in
mov
add
xchg
popf
aas
mov
adc
push
int3
mov
lcall
jg
test
ret
dec
outsl
push
or
jnp
bound
or
out
jge
in
xor
inc
mov
cmp
adc
pushf
push
pop
testb
sbb
orl
in
push
imul
mov
pop
jecxz
enter
mov
test
js
mov
push
inc
xchg
pop
dec
mov
stc
js
shl
not
repz
mov
push
mov
lods
scas
jmp
outsl
icebp
loopne
mov
mov
push
cmp
popa
adc
push
xchg
out
jnp
push
gs
jecxz
jo
test
je
mov
sub
fists
inc
sbb
daa
jmp
int
sbbl
std
fcomps
xchg
shlb
or
js
pop
pop
cmp
mov
jno
fildl
lret
repz
test
iret
push
les
adc
ja
stos
ret
add
add
and
mov
lock
inc
iret
xor
ret
lods
test
movsb
lahf
mov
pusha
xchg
xlat
dec
jb
in
and
mov
mov
cs
cmp
push
in
mov
mov
fyl2x
adc
push
lds
ss
sub
jnp
xchg
stos
xor
mov
xchg
mov
std
add
jno
pop
add
push
add
push
ljmp
add
adc
xchg
insb
aad
fisttpll
lcall
data16
jbe
jle
add
sbb
pop
fsubl
mov
fldenv
into
jge
jnp
test
cmp
movsb
mov
pushf
mov
mov
mov
out
out
xchg
jo
shrb
xchg
ret
lock
adc
mov
scas
sbb
mov
subl
int
sbb
fimull
lock
ret
mov
mov
xor
cmpsb
and
mov
or
pop
lahf
or
push
cmp
or
popf
ds
cmpsl
xor
mov
in
test
rcll
add
xlat
outsb
in
xchg
jmp
add
lret
mov
mov
out
push
adc
imul
add
lods
mov
mov
pop
mov
jns
push
lahf
aas
jmp
arpl
and
sahf
add
cld
testl
sub
or
pop
lods
mov
icebp
dec
cmpsl
out
push
dec
mov
jnp
fisubrs
cmc
test
push
sbb
sub
lahf
aam
das
adc
ja
call
outsl
hlt
xchg
xor
xor
cmp
cmpsb
sub
dec
push
mov
jb
dec
cs
sbb
in
and
add
xor
stc
idivb
dec
mov
cld
add
test
push
stos
and
int3
ss
and
pop
pop
add
shll
fnstenv
push
fistpl
pushf
xor
push
or
push
pop
sub
arpl
mov
push
jbe
fisubrl
cmp
scas
clc
pop
fs
sub
bound
add
dec
clc
cmpsb
add
sbb
mov
js
add
and
push
inc
jns
cld
adc
lds
sub
lds
enter
mov
push
shrl
ficomps
cmpsb
jae
out
push
pushf
or
add
out
mov
mov
jbe
xor
and
mov
rolb
test
jge
mov
rorl
in
cmpsb
lcall
mov
mov
dec
imull
inc
dec
out
pop
rcll
xchg
sbb
cwtl
and
repz
inc
push
push
sbb
out
addr16
sub
cmp
sub
and
and
adc
jnp
out
rorl
jp
and
frstor
sbb
roll
xlat
rcr
outsl
push
xchg
sbb
push
fimull
lahf
imul
push
adc
pushf
fs
jae
popa
or
or
testb
test
jmp
test
cli
xchg
mov
adc
xor
sbb
hlt
mov
call
lods
sbb
jmp
fcoml
in
adc
rorl
notb
and
add
neg
in
add
dec
pusha
xchg
mov
clc
roll
inc
std
or
insb
xor
fs
and
dec
xchg
or
mov
mov
shrb
out
pop
dec
mov
xchg
jb
dec
aas
xor
mov
mov
or
lea
je
and
sbb
cld
in
sub
add
xchg
test
cmpsb
lds
cmp
into
in
or
repnz
cmp
mov
adc
inc
lds
jnp
and
jo
jp
cltd
loopne
aas
mov
std
loopne
cli
add
and
push
pop
cmp
pop
jnp
faddl
pop
fstpl
in
add
pop
push
jmp
in
sub
adc
sub
or
mov
insl
aaa
in
push
out
cmc
pop
orb
xchg
add
out
jnp
movsb
test
into
mov
mov
rorl
loope
cmc
cmp
rcr
mov
shll
je
cli
xchg
pop
lret
scas
xchg
sti
cmp
jns
pop
push
inc
rolb
stc
stc
out
inc
icebp
push
cmpb
repz
mov
pop
iret
inc
mov
loope
add
and
cltd
sub
xchg
xchg
sbb
imulb
sbb
decb
xor
and
sbbb
dec
push
xacquire
dec
sub
shlb
and
loope
adc
inc
xor
scas
fst
shrl
mov
jno
not
xchg
ja
push
xchg
loop
xchg
int
sbb
ss
bound
in
ds
xor
mov
jge
push
or
js
dec
cld
movsb
arpl
out
clc
sub
mov
and
xchg
test
pop
setne
mov
pop
pop
inc
jle
cmp
mov
jp
xor
cli
mov
fldl
jae
scas
mov
sbb
inc
mov
jne
add
sbbl
mov
jno
out
mov
rcr
mov
fldenv
push
adc
jmp
inc
dec
pushf
and
insl
addb
xchg
popa
arpl
mov
push
xchg
inc
and
loopne
popf
gs
insl
das
cmp
in
enter
insl
call
rcl
addr16
mov
psubusw
pop
fsubs
jnp
mov
push
adc
add
mov
mov
or
mov
pushf
add
sub
pop
jo
mov
mov
jno
jl
imul
or
dec
pop
out
mov
jl
imul
jns
xor
add
ss
sub
jl
sbb
dec
inc
add
ljmp
jne
mov
mov
rorb
mov
pop
in
sbb
aas
mov
mov
imul
push
sub
jae
ret
inc
lret
test
shrl
and
and
ss
lahf
add
cmp
fsubrs
sbb
imul
test
or
jno
or
dec
and
mov
fisubrl
pusha
cmpsl
jle
popf
cmp
mov
or
pop
push
lret
popf
lods
sub
xchg
pop
xchg
push
xchg
out
iret
jl
jb
mov
or
xlat
cmpsl
rcrb
insl
leave
scas
jne
repnz
xchg
sbb
push
pop
jns
xchg
outsb
ja
jae
mov
loop
and
mov
shll
fs
aas
inc
fiadds
add
and
mov
int
xchg
subl
fwait
pop
hlt
jno
or
cmpsl
scas
pop
loope
mov
cmc
daa
ret
inc
out
int3
pop
stc
rcll
mov
inc
add
pop
jle
lret
cmp
add
mov
in
sub
scas
cmp
jae
hlt
popa
fnstenv
gs
insl
inc
lods
loopne
fld
inc
mov
lret
or
jmp
inc
mov
pushf
sbb
push
add
orl
imul
sub
clc
loop
and
cld
jecxz
lds
or
jne
inc
push
push
in
mov
sbb
mov
push
add
dec
mov
pop
cmpb
and
mov
xchg
cli
sbb
idivb
imul
pop
ljmp
notl
inc
jmp
xor
mov
mov
lcall
pop
mov
pop
std
xor
repz
inc
scas
pushf
or
fiadds
inc
jo
mov
and
and
and
jo
shll
sbb
mov
cmp
xchg
pop
or
fisttpll
movsw
add
dec
arpl
int
rcrb
flds
hlt
inc
mov
inc
fidivrs
or
mov
scas
popf
repnz
clc
push
ret
dec
cwtl
out
pmaxub
mov
nop
mov
mov
mov
or
notb
jbe
test
hlt
and
mov
shll
addr16
and
push
loope
inc
outsb
cltd
out
and
dec
xchg
in
pop
cmp
fwait
ja
add
add
and
and
dec
cltd
xchg
ret
insb
aaa
xor
mov
cmpb
sbb
aas
addr16
mov
xor
clc
xchg
out
add
cmp
dec
mov
loop
sub
clc
push
jae
jmp
add
xchg
cmp
sahf
or
push
xchg
mov
sti
or
rcrl
pop
push
das
xor
mov
inc
xchg
shrl
iret
mov
rcrb
mov
repnz
pop
adc
mov
in
popa
mull
scas
out
or
jg
mov
insb
pop
cltd
mov
ret
jg
mov
nop
pop
faddl
in
inc
insb
dec
outsb
jle
mov
push
cmp
sbb
std
mov
dec
imul
sbb
mov
xchg
cmp
and
xor
sbb
fmulp
xchg
negb
sub
cld
lret
jb
adc
sub
cmp
mov
adc
inc
pushf
cli
stos
sbbl
in
jmp
mov
mov
or
aad
cmc
cmpb
adc
push
rcll
shrb
xchg
adc
movsl
roll
sahf
fimuls
bnd
out
add
push
adc
cltd
fwait
sbb
push
jae
scas
mov
xorl
cld
retw
pusha
imul
rcl
mov
movsl
into
jo
cld
push
mov
pop
fcomi
mov
sbb
cmpsb
sbb
hlt
ror
push
add
lds
lea
movsl
and
sub
dec
mov
leave
addr16
lods
sub
nop
xor
mov
jns
popa
pop
dec
iret
jb
loop
and
or
inc
xchg
iret
xor
daa
dec
pusha
adc
fwait
cld
and
outsl
leave
sbbl
iret
jge
adc
and
hlt
sub
and
mov
inc
fldenv
sub
pop
mov
cs
es
ss
jbe
push
adc
icebp
dec
push
popa
repz
subl
out
push
sarl
inc
fisubs
int3
daa
mov
sbb
add
cmp
lahf
xchg
jb
sub
pusha
push
icebp
and
das
mov
mov
cmp
pop
int
fisttpl
mov
cs
jmp
and
cltd
sbb
mov
test
loopne
inc
movsb
and
call
into
mov
dec
xorb
cmc
pushf
xor
unpckhps
cmpsl
or
pslld
push
mov
aad
sub
dec
hlt
xchg
inc
aam
lds
movsb
dec
mov
sbb
icebp
mov
aad
adcl
or
pop
push
imul
clc
xor
cmp
repnz
dec
and
pusha
test
inc
xor
sub
sbb
jecxz
enter
clc
loop
mov
mov
sbb
jmp
cmc
imul
jg
and
push
or
addb
mov
icebp
int
addr16
mov
adc
or
pop
inc
test
fcmovbe
loope
push
inc
stc
les
loopne
stos
and
ljmp
dec
cwtl
sbb
insb
leave
loope
push
push
nop
addr16
jnp
ljmp
xchg
cli
mov
jmp
mov
es
ret
ret
jno
mov
xchg
push
sub
ret
or
or
push
jecxz
mov
dec
data16
xchg
push
scas
ror
test
stos
mov
ss
stc
adc
out
or
lret
mov
xor
adc
cmpsb
pop
cmp
test
dec
push
xor
jl
pusha
fs
lock
cmp
xchg
lods
jno
lds
scas
js
out
scas
mov
dec
dec
fprem
pop
inc
inc
cmp
mov
addb
cs
xchg
notb
lret
ds
dec
shr
das
push
cmpsl
stc
mov
sarl
sbb
xchg
mov
les
aaa
and
cmp
popf
adc
mov
arpl
imul
fcoms
push
sub
xchg
xor
adc
test
sbbb
sti
arpl
pop
in
fstps
hlt
vpcmpgtw
scas
or
leave
xlat
ret
cli
adc
dec
adc
insb
jae
shll
push
fdivrs
in
mov
cmpsb
lds
cld
test
lods
loop
jno
mov
outsl
andb
mov
outsl
add
pop
out
mov
repnz
sbb
stos
mov
dec
jmp
jno
data16
aaa
movaps
mov
xor
fwait
sbb
movsb
enter
call
jno
lods
adc
and
leave
xchg
fwait
inc
dec
jg
jbe
dec
lock
dec
cmp
cld
push
es
xor
push
stc
arpl
sbb
clc
mov
test
js
ja
test
fldl
push
jb
or
mov
mov
pop
fsubs
mov
inc
int
sti
jbe
jno
in
pop
movsl
pop
cli
pop
mov
or
lret
mov
jb
aaa
int3
sarl
sbb
ret
cmc
insl
add
mov
imul
push
daa
mov
ds
mov
push
add
sub
jp
adc
lods
pop
xchg
in
int3
insl
cld
sbb
stos
or
push
and
mov
pop
pop
jle
fisttps
mov
inc
mov
and
pop
repz
gs
inc
jbe
dec
js
sub
mov
repz
sbb
cltd
pop
sub
enter
or
subb
sti
fmull
xchg
mov
xchg
mov
adc
or
mov
in
xor
stos
push
xchg
inc
cmc
xor
stos
sbb
adc
out
mov
sbb
xchg
sbb
ret
mov
or
stc
and
hlt
mov
cmp
or
mov
cmove
test
test
mov
je
xchg
es
mov
mov
sahf
je
call
add
fsubrs
call
inc
into
dec
jg
and
cmpsl
sarl
mov
jbe
bound
jmp
and
mov
sahf
xchg
test
xchg
dec
imul
imulb
lods
decl
push
add
inc
push
mov
cld
aad
int3
or
jbe
mov
xor
xchg
sbb
rorb
jecxz
pop
rcrl
fsts
shll
scas
lods
or
pop
push
push
in
arpl
dec
cli
insb
cli
jb
das
mov
loope
movaps
jg
xchg
pop
push
movsb
mov
cmp
or
movsb
ja
sub
in
rorl
int
not
sahf
mov
dec
push
test
ljmp
leave
out
repz
into
lock
fs
lcall
test
sahf
rcrb
lds
mov
mov
outsb
mov
adc
mov
xchg
mov
cmc
jmp
push
xchg
jno
dec
or
adc
rcl
addr16
inc
int
loope
pop
aas
movsl
push
jae
adc
xchg
pop
pop
xchg
xchg
push
data16
cmp
shrb
xchg
sahf
or
push
cmp
cmp
add
cmp
dec
add
fcomps
mov
sub
sbb
inc
xchg
out
loop
sub
popf
mov
add
adc
pop
jmp
mov
call
es
push
xchg
push
insl
lods
lahf
rorb
mov
jo
sbb
dec
rolb
shlb
test
xor
mov
cmp
cld
mov
negb
js
pop
jg
lret
aas
das
pop
fucomp
fucomi
lds
pop
out
mov
ljmp
adc
in
mov
xlat
xchg
lcall
sbb
test
sbb
cmpsb
xor
push
clc
mov
mov
dec
mov
add
push
push
xchg
pushf
pop
xor
js
jbe
and
pop
mov
jbe
push
ret
jo
push
mov
fcompl
xchg
sub
in
jle
jmp
mov
dec
xor
addr16
pop
push
xchg
fldenv
test
mov
adc
jl
jb
sub
jne
jb
mov
xchg
push
jmp
jns
jecxz
push
jno
insl
mov
clc
and
aaa
rcll
fisubrl
div
sub
mov
call
jge
stc
scas
or
jno
or
loope
push
sbb
or
call
lcall
inc
mov
bound
cltd
ljmp
fdivrp
sub
pusha
lret
jbe
imul
jp
fdivrp
scas
lea
cmp
pop
dec
xor
inc
sub
push
popa
mov
pop
pop
push
cmp
ljmp
ret
push
clc
out
push
sbb
inc
xor
pop
add
stc
movd
push
test
je
fcomps
faddl
out
lret
loopne
lods
or
sbb
adc
sar
aaa
lcall
fwait
pop
cmpsb
adc
adc
out
ret
add
jl
mov
lret
je
jmp
ljmp
inc
iret
add
cmc
rcl
mov
pushf
jo
sbb
movsl
loope
notl
xorl
sbb
mov
mov
mov
xchg
out
xor
jnp
outsl
lods
test
insl
shll
cld
daa
gs
sbb
sbb
sub
jecxz
cmp
push
sub
dec
cltd
add
pop
jl
cmc
add
stos
xor
fwait
rclb
cmpsb
or
in
sub
fldenv
sub
mov
into
jne
fwait
mov
jl
ficoml
push
push
inc
movsb
fisubl
inc
add
pop
out
push
pop
mov
in
mov
ja
pop
movsb
sarl
inc
dec
imul
movsb
aas
xchg
dec
add
xor
push
insl
arpl
adc
push
ret
test
call
xchg
mov
cwtl
sbb
mov
dec
dec
mov
fisubrs
jecxz
xchg
push
scas
bound
dec
and
dec
sub
addl
test
push
dec
jae
fs
xchg
or
repz
fildll
xchg
sbb
jne
or
and
adc
push
push
adc
xchg
stos
or
rcl
xor
aad
das
test
and
orl
mov
add
cmp
jo
jae
cmp
das
and
aaa
aas
or
and
inc
mov
sub
push
xlat
mov
push
push
xchg
aam
leave
mov
popa
loopne
dec
fistps
jmp
test
scas
enter
ret
xchg
jbe
pop
lahf
mov
gs
loopne
jge
mov
je
mov
jns
pusha
jg
cltd
std
sub
mov
xor
dec
scas
dec
sarb
scas
icebp
lcall
out
pop
xor
lods
sub
es
mov
fstpt
xchg
cmp
sub
rcrl
and
push
popa
fidivrl
js
push
aad
push
push
push
jg
xchg
aam
aad
pop
out
aam
pop
sbb
sub
jg
outsb
push
pop
iret
mov
es
adc
or
adc
mov
mov
insb
sbb
jecxz
inc
gs
xor
or
inc
or
lds
loope
mov
test
or
adc
add
ja
leave
mov
xor
sbbb
ficoml
xor
bound
xchg
iret
sbb
ss
jecxz
mov
jae
push
fs
jg
daa
push
into
movsb
pop
jecxz
xchg
scas
add
lar
fidivl
lcall
pop
pop
and
shlb
or
jae
jg
shrb
mov
inc
insl
sub
inc
cmp
pushf
dec
call
aam
mov
fstl
jns
pop
mov
sbbl
fisubl
mov
pop
xorb
add
insb
movl
cmc
inc
aad
inc
sbbb
sub
ja
mov
sub
arpl
test
popa
loop
jae
mov
mov
pop
and
mov
loopne
in
sbb
adc
jle
out
test
inc
and
cmc
push
nop
mov
pop
xacquire
xor
and
addr16
cmp
lret
shl
aas
ljmp
int3
fsubrs
pop
sbb
cmp
sbb
inc
insl
adc
adc
es
stos
and
arpl
xor
sbb
movsb
xor
mov
lock
sbb
jns
sub
and
xchg
xchg
addb
enter
popa
aad
dec
adc
xchg
dec
dec
mov
cmp
and
mov
dec
xchg
dec
add
and
xchg
out
jbe
test
aad
mov
stos
and
leave
push
push
inc
mov
push
jo
mov
notb
mov
popf
dec
sbbb
push
movsl
mov
xor
test
inc
inc
xor
pop
lcall
imul
out
pop
push
add
xor
jb
addb
into
out
adc
fs
test
aaa
in
sub
mov
add
mov
fcmovnb
sbb
adc
inc
push
stos
cmp
dec
or
inc
push
add
test
dec
outsb
stc
mov
adc
leave
inc
pop
jg
lea
dec
add
and
nop
xor
repnz
outsl
xor
pop
xchg
leave
scas
sti
cmp
cmp
xchg
inc
jecxz
mov
jp
int3
inc
xchg
cmpsl
xchg
sbb
mov
fadds
mov
icebp
and
test
or
cmp
mov
cwtl
add
aad
jb
jle
inc
jne
scas
int
gs
pushf
jnp
pop
repnz
jg
sbb
jbe
mov
mov
setne
popf
imul
cmpl
and
mov
arpl
inc
lds
jns
inc
xchg
cwtl
dec
mov
clc
mov
sti
mov
or
mov
call
daa
aaa
cwtl
jo
ffree
pop
out
push
les
sahf
call
pop
ljmp
xor
sbb
loope
xor
fcomip
jl
imul
jle
mov
xchg
jl
repnz
push
outsl
push
hlt
pop
je
repz
adc
adc
adc
stc
mov
mov
mov
mov
daa
sbb
out
push
aad
ficomps
mov
dec
adc
xchg
jne
cmp
push
sbb
out
push
mov
dec
dec
pusha
dec
std
mov
loope
aaa
loope
mov
insl
xor
test
lea
lds
jl
mov
stos
mov
cs
out
push
js
ss
fdiv
into
ret
pop
ret
mov
and
or
movsl
cs
ficompl
push
lock
fwait
imul
rdmsr
ret
mov
fisubrl
movsl
add
xor
mov
cmp
mov
pushf
sub
inc
lahf
xlat
sbb
and
cmc
mov
cmp
imul
daa
lock
leave
push
lock
inc
sbb
fdivrs
imul
mov
dec
ds
test
add
jns
ss
incb
fcmovnbe
push
decl
fst
sbb
lods
push
mov
sbb
lcall
pop
out
or
rorl
inc
add
and
inc
jge
mov
je
std
push
jg
daa
test
sbb
sbb
mov
push
mov
mov
cwtl
ffreep
cmp
sbb
fs
jnp
cmp
sbbb
dec
push
ret
jns
pmaddwd
aam
cmp
mov
pop
iret
xchg
loopne
fistl
lods
clc
out
xchg
daa
pop
cmp
and
stos
mov
mov
ja
fistl
jge
gs
xor
in
rcrb
fs
push
xor
dec
popa
sahf
add
push
xor
ret
sub
xchg
cwtl
mov
nop
imul
push
sahf
in
mov
add
fnstcw
into
fistps
sbb
jne
dec
aas
inc
ss
stos
dec
loope
dec
call
iret
ret
mov
das
push
dec
das
ss
inc
pop
and
xor
mov
test
cmp
mov
lods
xchg
int
fldt
loop
push
repnz
cltd
loope
repnz
adc
shrl
jle
in
lahf
adc
adc
mov
and
mov
fbstp
std
stc
mov
leave
xor
fs
movsl
test
imul
clc
mov
int
mov
sarb
daa
lret
lea
pushf
and
daa
insl
cmp
repnz
pop
shll
jge
push
sub
cltd
stos
in
dec
xchg
dec
xlat
add
jmp
cmp
out
cmp
test
adc
cmpsb
rcll
pop
aam
cmp
imull
mov
push
aam
xchg
jge
cmpsl
mov
jmp
mov
fisttps
inc
dec
sbb
sbb
and
mov
aas
mov
adc
mov
or
dec
data16
movsl
adc
movl
push
xor
cltd
in
mov
add
jle
orl
add
mov
jl
add
and
mov
jle
inc
notl
dec
push
sub
cwtl
fwait
dec
addb
mov
out
stos
and
sub
mov
push
fbld
sub
push
out
movsb
fsubl
das
out
xor
mov
fildl
pop
shlb
scas
adcb
data16
jecxz
xchg
nop
xor
mov
push
cmp
loopne
or
movsl
add
in
cmp
addr16
lret
ret
pop
add
fwait
out
push
dec
clc
mov
mov
add
jae
pushf
xor
jbe
push
xlat
fadds
xchg
bnd
movsl
testl
jl
inc
cmc
add
rcll
inc
es
xor
dec
mov
repnz
dec
jl
push
sub
or
mov
call
sub
lock
ja
lea
mov
cs
cmp
call
xchg
lret
ror
sbb
in
call
xchg
mov
jg
enter
and
loope
dec
fs
lods
test
out
dec
loope
sub
xchg
call
scas
cmp
push
enter
imul
ret
dec
insl
inc
inc
and
loop
cmpsl
dec
xor
mov
daa
push
sbb
xchg
mov
cmp
or
mov
test
xorl
jg
push
dec
lahf
xchg
ret
sti
je
fsub
mov
std
and
adc
jns
or
cmp
dec
dec
mov
or
fs
push
stc
push
lods
mov
mov
mov
xor
lahf
sub
jp
xchg
mov
lea
clc
dec
pushf
and
push
cmpb
out
add
inc
int3
fcompl
ret
mov
ficompl
jge
orl
popf
lods
jae
push
jnp
cwtl
cmp
insb
fs
or
mov
mov
out
jne
lods
cli
xchg
mov
push
or
scas
push
mov
inc
scas
fs
insb
rolb
loopne
clc
repnz
sbb
jno
jle
mov
or
add
or
pop
mov
lock
inc
ds
jns
mov
icebp
sub
mov
fs
sub
ret
into
push
xchg
jns
mov
orl
imulb
push
dec
push
loop
ss
gs
fcmovne
pop
pusha
enter
inc
fs
dec
int3
fs
adc
fistpll
sbb
jle
cmp
dec
add
setno
sbb
add
xor
sbb
inc
test
dec
fildll
cmpl
mov
idivl
sti
loope
lret
sub
jmp
das
daa
js
outsl
orl
cmpb
mov
scas
addr16
jp
sbb
repnz
lods
jl
jg
je
adc
ficoml
cmp
mov
or
sub
mov
in
sub
jp
xchg
or
test
jb
movsl
adc
cmp
pop
js
lods
pop
jmp
mov
test
xchg
sub
xchg
test
loope
les
gs
stos
dec
mov
out
and
and
or
flds
lods
int3
cli
cwtl
or
jb
pop
cmpsb
adc
mov
xchg
push
loope
jmp
popf
jbe
rol
iret
shlb
or
jnp
adcb
and
jle
inc
ret
sub
inc
hlt
fisttpll
pop
sub
les
push
inc
fcomps
jecxz
push
pop
or
loope
fs
jmp
shrb
mov
ret
xchg
jb
mov
gs
mov
decl
xchg
out
inc
mov
jo
jb
jne
icebp
mov
inc
jo
sub
xor
dec
inc
xchg
add
pop
clc
jns
ret
jae
fdivs
mov
lret
mov
leave
push
outsl
out
adc
out
push
push
es
lret
test
dec
stos
cmp
sbb
mov
lods
sub
rcl
mulb
cmpsl
jl
scas
mov
mov
enter
mov
icebp
fs
push
out
lahf
nop
clc
int3
ljmp
xchg
mov
ja
or
mov
cltd
mov
adc
cmc
mov
adc
xchg
scas
mov
lahf
retw
sbb
repnz
insl
nop
lods
mov
cmp
lea
push
cmp
shll
cmp
cmp
add
icebp
pop
rorl
pop
adc
push
int3
test
xlat
hlt
lret
aad
lahf
push
in
xor
jo
xor
adc
out
test
add
jp
mov
out
dec
fmuls
les
adc
xor
sub
in
rcrl
stos
dec
faddl
mov
repz
jae
jbe
outsb
inc
cmp
test
cmpsl
dec
jb
insl
pop
in
js
cmp
mov
mov
insb
xor
rolb
mov
enter
test
stos
fiaddl
cmp
and
dec
lea
rolb
push
sub
fsubrl
pop
mov
scas
push
test
outsb
or
pusha
scas
jne
add
stc
fwait
adc
fldenv
ljmp
xor
and
js
add
les
mov
unpckhps
aam
aas
stos
pop
in
jg
xor
sbb
cmpsb
pop
es
push
ja
xcrypt-cbc
cmpsl
adc
jmp
inc
and
mov
pop
adc
jo
xchg
dec
mov
inc
sbb
sub
dec
add
aam
fs
les
pop
push
and
call
lods
out
mov
pop
or
imul
bound
into
pop
xor
pop
push
jno
xchg
add
jl
movsl
movsb
pop
and
stc
repz
xlat
fistl
sub
xor
mov
test
aad
jo
clc
subl
fidivs
pop
mov
push
repnz
pop
add
adc
add
aas
in
call
shrl
sbb
stos
mov
add
test
cmc
in
cmp
and
stos
bound
jnp
ds
outsl
inc
xor
lods
popf
jb
lods
add
dec
les
mov
sti
lret
das
mov
das
add
arpl
iret
cmp
adc
repz
fldt
xor
mov
xchg
icebp
aam
mov
mov
xor
push
int3
arpl
sub
adcb
jns
jp
outsb
add
pop
mov
add
xchg
ret
xchg
mov
cmc
push
out
mov
inc
cli
out
cld
pop
sbb
rcrl
pop
fwait
les
fcomps
aad
xorl
cltd
or
jnp
dec
test
pop
arpl
sbb
and
mov
xor
pop
stos
popf
loopne
daa
or
ja
xor
cmp
sub
or
aam
mov
xor
fwait
xorl
inc
dec
adcl
dec
rcll
aas
or
out
xchg
inc
lcall
out
loope
adc
faddl
xchg
mov
lret
cwtl
fs
sub
in
dec
mov
or
push
jb
xchg
pusha
cmpsb
sbb
dec
or
mov
test
sbb
flds
mov
jecxz
nop
inc
mov
mov
stos
ret
testb
cmp
int3
loope
sbb
sbb
mov
sti
mov
xor
cmp
jbe
jb
jmp
gs
jmp
push
add
sbb
inc
lret
sbb
inc
mov
cltd
movsl
mov
push
rol
subl
jecxz
rorl
fcomps
add
movsl
scas
mov
out
cmpsl
and
add
lea
mov
jmp
sub
fisttpl
sbb
push
mov
and
push
mov
xor
test
mov
pop
or
xlat
jmp
test
cmpsb
inc
mov
in
sub
jmp
cmp
pop
popa
pop
cltd
fsubp
inc
out
stos
out
xchg
movsb
shrl
sahf
mov
jno
orb
fisubs
ret
mov
in
out
test
mov
add
out
sti
shr
ja
out
movsb
push
insl
jmp
push
incl
lods
mov
inc
push
and
pop
pop
mov
add
cmp
push
dec
loope
out
jge
mov
sahf
add
or
pop
out
sbb
and
js
popf
out
rep
push
pop
mov
sbb
mov
adc
orb
dec
lea
dec
mov
mov
data16
idiv
ret
jmp
and
stos
mov
and
adc
imul
mov
add
aam
dec
ljmp
imul
cld
js
and
sub
add
js
out
negl
pop
mov
je,pn
sub
and
inc
inc
int
bound
push
das
punpckhbw
insl
sub
wrmsr
leave
aaa
or
stos
loop
pop
outsl
in
fcomps
sub
add
sbb
xor
xchg
sub
jmp
mov
fdivl
push
dec
data16
or
js
lock
adc
pusha
data16
jb
mov
dec
popf
movl
fistps
pop
push
jp
es
sub
pop
mov
cmp
cmp
in
jae
je
out
loopne
push
je
cltd
mov
mov
jmp
mov
jne
pusha
push
cltd
icebp
sbb
lods
js
fwait
mov
cltd
ret
mov
mov
and
insb
mov
icebp
xchg
push
adc
add
adc
cmc
jmp
jl
arpl
mov
aaa
cmp
mov
mov
add
xor
fldcw
cmpsl
filds
jl
jbe
mov
mov
jbe
cmp
jge
jl
mov
scas
cmp
int
shl
sub
and
fsubs
add
add
adc
mov
xchg
out
cmpsb
lods
sub
cwtl
xor
pop
lahf
scas
mov
jmp
mov
pop
out
icebp
add
xor
xor
inc
test
push
cmpsl
jp
jno
pop
enter
out
test
xor
lret
fists
inc
xor
push
bound
fdivr
and
mov
sti
inc
jmp
jg
es
pop
mov
mov
or
pop
or
lahf
jge
sub
sbbb
ret
sub
inc
adc
push
out
jle
pop
repnz
jmp
in
inc
push
push
jge
cmpsb
loop
push
jmp
and
dec
jb
xchg
sahf
pop
dec
mov
scas
repz
divb
push
sti
imul
enter
jmp
adc
mov
xchg
xorl
cs
shlb
bound
mov
dec
add
sub
inc
adc
idivb
leave
mov
mov
pop
pop
dec
scas
lea
mov
aad
and
das
sub
mov
push
sbb
xchg
stos
xchg
mov
test
or
cld
mov
or
sbb
mov
jno
and
dec
adc
insl
add
xor
dec
bound
mov
sbb
mov
mov
cmp
add
jno
mov
mov
sbb
pmaxsw
mulb
paddq
xchg
push
and
mov
add
inc
push
cld
jns
inc
add
pushf
dec
cli
movsl
jle
xchg
scas
mov
test
lods
leave
into
incb
jb
dec
push
test
cwtl
sbb
ret
jb
imulb
loopne
out
leave
scas
push
jne
jl
sahf
push
adc
xchg
and
cs
mov
icebp
jp
inc
mov
pop
mov
lds
out
lcall
ljmp
and
sub
repz
insl
jbe
sbb
sub
lds
mov
imul
cli
xchg
sbb
xor
xor
shrl
mov
fdivs
adc
cmp
jle
fistpl
sub
pop
mov
xorb
inc
lock
jp
cltd
mov
mov
sbb
adc
in
adc
into
int
sub
fcoms
div
jge
mov
jle
repnz
xor
cmpsb
repnz
pop
dec
push
sub
int
add
adc
mov
mov
in
arpl
cmpsb
jge
subb
xlat
xchg
js
lahf
stos
out
and
xchg
leave
mov
inc
enter
mov
sbb
inc
jbe
sbb
inc
lret
outsl
jno
jmp
xchg
test
adc
xchg
mov
pusha
pop
arpl
pop
xlat
in
mov
pop
add
jp
xor
mov
sub
jecxz
sub
sbb
xor
and
push
pop
mov
mov
sbb
sbb
fcompl
and
adc
mov
mov
or
xchg
push
cli
xchg
jp
sub
sti
add
icebp
adc
xor
scas
xchg
jg
push
cmp
mov
aam
pop
cmc
pop
into
jns
cmc
inc
xor
inc
and
testb
xor
icebp
push
cmpsb
jns
mov
shlb
xlat
inc
xor
insb
lret
xchg
push
dec
sbb
sub
fwait
xor
rcrl
fwait
loope
adcb
mov
adc
mov
ja
divl
ret
cmpsl
in
icebp
mov
leave
fildl
les
add
fildll
hlt
mov
or
push
imul
int3
mov
ret
xor
adc
sub
mov
inc
gs
push
arpl
adc
jl
pop
repnz
mov
push
test
inc
pop
cmp
xchg
xchg
push
adc
movsb
xchg
pop
int3
arpl
jns
dec
dec
dec
mov
mov
push
jns
mov
pusha
inc
in
shl
jnp
rorb
das
clc
lret
mov
mov
sbb
incl
jns
xor
push
mov
cmc
mov
pop
xchg
loop
out
dec
mov
ret
dec
sub
push
xchg
and
lods
data16
xchg
pop
push
inc
lock
sub
inc
cmpsb
mov
nop
cmpsl
fstl
xchg
or
jo
fldl
outsb
jecxz
adc
nop
mov
mov
repz
add
and
inc
cmp
lret
ds
leave
or
loope
bnd
push
cmc
stc
pop
cltd
add
mov
testl
push
sti
movsb
pop
mov
push
jge
lret
clc
sbb
dec
xchg
scas
dec
loop
stos
leave
xor
loop
xchg
scas
int3
out
movsb
fyl2x
mov
mov
imul
cli
and
enter
ja
gs
jg
or
js
add
jns
cmp
jae
mov
mov
push
mov
ror
dec
mov
stos
xor
lret
cmp
and
adc
add
inc
push
pop
fisubs
sub
push
int
loope
sbb
dec
inc
sarb
in
movb
ja
or
adc
cli
or
call
movsw
inc
sti
dec
sbb
mov
xchg
addl
sub
sbbl
test
cmp
mov
sti
adc
loopne
popa
movsb
daa
dec
or
ss
movsl
out
repz
das
outsl
insl
inc
push
add
dec
cmc
adc
pop
cmp
sub
mov
sbb
xchg
xor
xor
pop
in
mov
pop
subl
lods
cmp
pop
cli
movsl
mov
jp
fsubr
fmuls
mov
push
cltd
pop
and
xor
stc
xor
cmp
mov
es
sub
negb
ret
push
cmpsb
dec
clc
inc
inc
ret
ljmp
adc
jns
in
cltd
mov
push
push
push
pop
and
dec
les
decl
into
aaa
or
loope
inc
aad
cltd
push
loopne
sub
out
jecxz
xor
cmc
cltd
dec
js
bound
jnp
xor
aam
sbb
inc
subl
leave
movsl
insb
sbb
outsl
jecxz
call
add
pushf
es
add
or
in
push
sbb
clc
lods
lret
shl
mov
push
mov
lea
hlt
movsl
arpl
fisubs
sti
adc
cmova
cmp
dec
popf
mov
xor
jg
imul
sub
xor
push
mov
push
into
cwtl
into
pop
lcall
loop
jmp
daa
popf
inc
ja
add
pop
push
adc
xor
scas
adc
push
popf
ljmp
mov
popa
test
add
jno
imul
xchg
stos
lods
sbb
cmp
int
adc
push
ja
ja
lods
js
push
and
or
jo
sub
or
cwtl
fists
and
out
jne
stos
fwait
pop
pop
and
cmp
lahf
aad
push
pop
mov
scas
fisttpll
out
rclb
hlt
add
add
and
out
stc
repz
mov
jne
pop
outsl
sti
adc
xor
push
or
fstps
push
mov
nop
hlt
out
inc
ret
push
sbb
popf
fdivrl
rcl
aas
xchg
popa
add
shlb
pop
cmp
or
popa
aas
mov
xor
daa
and
or
xchg
mov
pcmpeqw
cwtl
dec
stos
into
adc
sbb
imul
mov
and
dec
dec
push
jbe
call
jecxz
sbbl
movsl
dec
imul
jp
mov
subb
dec
scas
xor
sahf
mov
nop
sbb
xor
dec
push
rcrl
jnp
lds
movsb
sub
je
arpl
outsl
scas
movups
repz
add
fwait
lods
jp
pop
sbb
push
mov
leave
sbb
lret
jle
xchg
pop
sbb
adc
jl
mov
test
bound
popa
and
test
in
out
sarl
aaa
hlt
es
pop
stos
loope
or
addb
push
loop
sarb
and
push
xchg
mov
ds
shll
clc
inc
add
addb
rcll
addr16
sbb
sbb
mov
xchg
test
out
cltd
or
divps
repnz
loop
sarb
lret
mov
sub
adc
xor
subl
add
call
pop
add
arpl
insl
test
or
in
scas
std
mov
xrelease
mov
idivb
xor
jle
push
sub
push
inc
out
addl
xchg
push
mov
adc
push
xchg
sub
repnz
push
cmp
negl
cltd
jnp
sub
pop
stos
cmp
pop
pusha
cmp
mov
pop
push
lods
cmp
inc
fcmovnu
push
mov
je
pushf
add
pusha
pop
inc
adc
xchg
push
cmpsb
addr16
xchg
cmpl
ja
inc
daa
sbb
push
inc
cmp
or
popa
lods
dec
xchg
adc
mov
add
adc
scas
add
fldl
xor
fwait
push
cmpsb
push
xchg
fwait
mov
add
lods
mov
push
aam
aad
cmp
fs
pop
fnsave
test
pusha
sub
mov
dec
std
mov
mov
jo
addr16
outsb
pop
test
sub
xchg
es
idivl
cli
cld
fnstenv
push
cs
or
daa
fldcw
lcall
mov
xor
out
or
out
stos
icebp
cmp
cmpsl
pop
adcb
inc
jmp
faddl
out
mov
sbb
add
fsub
mov
mov
push
lea
sbb
mov
rorb
incl
xchg
adc
mov
and
mov
je
or
push
hlt
fsubrs
sub
push
sub
outsl
add
mov
jl
nop
mov
or
or
insl
das
std
mov
mov
mov
les
sbb
push
cmc
adc
xor
fcomps
pusha
aaa
jmp
sub
pop
push
xchg
fstp
jb
add
fistpl
scas
lods
stos
mov
or
in
dec
mov
dec
jg,pn
inc
pop
dec
inc
mov
pushf
dec
cs
cmp
outsb
cmc
iret
aad
cmc
pop
xor
cmp
ss
arpl
imul
inc
out
adc
iret
mov
cli
cmp
xor
sbb
pushf
inc
ffreep
neg
push
sbb
xor
push
cmpsl
pop
add
cli
daa
add
pop
and
mov
jno
push
das
mov
jecxz
jl
aaa
jmp
and
icebp
jnp
cltd
and
and
nop
push
imul
insb
jge
sub
jbe
pop
jae
cmp
pop
movsb
cmp
add
test
movsl
pop
test
adc
loop
shlb
aad
jne
mov
sub
jb
push
adc
adc
bt
aaa
jns
sbb
add
jg
movsl
cmp
sbbb
xor
dec
and
iret
or
mov
test
or
aas
std
mov
enter
xor
aaa
cmp
inc
jnp
jno
add
cmp
pop
add
mov
imul
xchg
mov
adc
dec
filds
or
push
into
mov
and
stos
xor
movsb
mov
pop
jne
imul
les
jne
ret
sub
ja
pop
push
adc
sbb
lret
filds
push
in
and
pop
shl
iret
das
out
sub
shr
dec
lock
mov
mov
test
flds
push
jo
mov
imul
mov
clc
mov
orl
fwait
pop
sub
cmp
inc
add
push
mov
mov
aas
inc
lods
adc
gs
jge
or
scas
pop
lahf
out
sti
add
xor
xor
xchg
icebp
mov
leave
xchg
cwtl
sbb
movsl
push
jle
sti
inc
test
and
insl
les
out
stos
push
aas
loop
inc
push
add
and
sbb
test
aam
push
addr16
inc
and
shll
add
cmp
push
and
and
and
jmp
jae
cwtl
xor
adc
aas
or
cltd
loop
inc
arpl
cmp
popa
mov
enter
xor
jle
pop
jns
jns
out
cmpb
push
push
pop
cmp
fmuls
dec
pop
xchg
mov
in
sarb
ret
push
sub
test
mov
jle
jbe
mov
mov
xchg
dec
fisttpll
sbb
or
adc
xor
gs
loope
and
push
pushf
add
clc
nop
outsb
and
jmp
jle
and
jecxz
pop
push
iret
xchg
mov
dec
in
movsb
dec
insl
ja
ja
scas
pushf
ds
pop
mov
popf
xchg
add
pop
jge
inc
xchg
jnp
nop
data16
jmp
adc
mov
push
icebp
shl
lahf
xchg
rorb
outsb
fdivrl
test
xorl
mov
push
mov
daa
mov
add
orl
sti
pop
inc
das
push
movsb
pop
pop
out
nop
les
xchg
jecxz
xlat
xor
mov
es
pop
cmp
not
aas
fisubl
sbb
ret
lcall
shll
lods
pop
aas
mov
sbb
sbb
test
xchg
popa
jp
mov
xor
push
inc
jp
or
fstl
in
dec
adc
pop
inc
xchg
adc
mov
ret
repnz
xchg
cli
and
mov
clc
sbb
fisubs
leave
push
sub
lahf
ds
ja
arpl
imul
bound
into
xchg
out
xchg
lods
shll
xlat
sti
orb
test
jmp
rcrl
cltd
mov
xor
xor
xchg
rol
orl
mov
imul
pop
mov
cmp
sarb
sub
in
push
inc
xchg
cmp
in
sub
js
push
clc
je
xchg
rcrb
add
push
mov
mov
popa
mov
push
dec
sbb
arpl
leave
lods
jnp
mov
rcrb
js
orb
lret
jbe
ret
sbb
mov
cmc
in
ljmp
xchg
mov
icebp
cs
popf
cld
push
loop
pop
dec
jnp
jns
leave
or
testb
mov
cmp
xchg
xor
or
mov
cmpxchg8b
push
lret
shrl
adc
inc
lret
stc
testb
jge
mov
jge
fsubrl
aad
mov
rcll
fwait
push
loopne
add
fbld
ret
inc
add
in
xchg
scas
inc
stos
xor
push
enter
daa
cmpsb
ja
sub
shrb
stos
xor
cs
stc
in
push
in
cmp
or
mov
jne
cli
dec
mov
mov
in
xor
cmp
adcb
out
adc
pushf
pusha
and
pop
pop
push
jnp
xchg
hlt
mov
in
push
xchg
push
mov
sbb
cld
and
leave
insb
pop
repnz
mov
push
mov
shll
mov
jle
push
pushf
xor
push
inc
push
pop
loopne
inc
jmp
gs
out
or
sbb
or
adc
add
mov
ret
test
adc
xlat
arpl
push
adc
pop
pop
call
mov
fbstp
subl
mov
jno
fs
xchg
inc
adc
test
dec
xchg
mov
add
stos
lcall
int
out
cmp
add
fldcw
stc
popf
in
add
shl
mov
mov
inc
fstl
testl
add
out
dec
ds
push
lret
loopne
test
dec
inc
cmpsb
jno
test
rorl
lock
push
xchg
push
or
dec
or
push
xchg
cmp
stc
adc
out
add
pop
sti
mov
mov
mov
sbbb
xchg
into
mov
pop
dec
imul
lds
cmp
cwtl
test
adc
mov
mov
sub
cmp
jo
ds
sbb
mov
jo
hlt
shrl
out
scas
xchg
sbb
mov
nop
jge
icebp
ljmp
pop
sbb
mov
or
mull
pop
scas
cmpsb
cld
loope
xchg
mov
int3
adc
cmpsl
xlat
insb
adc
and
shrb
les
loopne
mov
cmpsb
or
repz
inc
push
addr16
fstps
ficoms
in
mov
jg
sub
sub
out
sub
add
push
in
cld
xchg
push
enter
and
pop
dec
dec
cmpsb
or
lods
cmp
mov
or
adc
or
jp
mov
mov
mov
outsl
and
pop
inc
dec
and
and
imul
lcall
jne
add
enter
mov
ja
add
pop
cmp
stos
fcomps
inc
xor
imul
mov
aas
cld
test
test
inc
mov
scas
adc
cwtl
mov
cs
mov
scas
push
sub
int
cmp
mov
sub
mov
rcll
adc
sub
enter
sbb
ss
adc
push
push
decl
subb
inc
mov
inc
mov
pop
dec
imul
insl
mov
cmp
nop
pushf
jae
jnp
repz
out
xchg
movaps
sub
ljmp
jg
sbb
jmp
pop
stc
sar
mov
cmp
cwtl
subb
dec
aam
adc
icebp
inc
adc
popa
mov
daa
inc
pop
adc
imul
data16
push
call
push
insb
add
mov
jne
lret
dec
pop
push
lds
ss
loopne
mov
dec
inc
sahf
or
dec
push
and
cmp
sbb
cmpsl
daa
jns
mov
mov
mov
scas
mov
xchg
cli
aam
std
fmuls
out
jp
cs
sarb
sbbb
cltd
sti
repz
stc
or
mov
arpl
xchg
movntq
push
adc
or
daa
insl
or
cwtl
lea
push
lods
fmuls
mov
adcl
adc
xchg
fiadds
and
sbb
in
test
jbe
dec
mov
or
add
fldl
dec
movsl
dec
lret
pop
mov
inc
lea
sub
mov
in
mov
inc
jbe
outsl
jmp
mov
aas
inc
loope
test
leave
movb
mov
dec
dec
push
mov
movsb
cmc
fisttps
add
inc
daa
cwtl
dec
mov
jo
cmpsb
test
sub
das
lods
jecxz
and
andl
das
rclb
dec
daa
out
dec
test
movsb
jbe
sbb
lcall
cmp
xor
sbb
and
fwait
lds
ja
mov
out
push
fwait
out
jbe
xor
stos
enter
inc
jnp
pop
cmp
sub
mov
test
adc
icebp
pop
mov
mov
add
xchg
pop
js
push
or
das
pop
jbe
bound
in
je
mov
enter
loopne
mov
xor
je
push
adc
jae
jns
imul
jp
pop
sti
cmc
loope
sbb
push
idivb
adc
pop
into
aad
cmp
mov
repnz
sbb
outsb
push
addr16
mov
cmp
rcl
enter
lock
cmp
or
adc
sub
mov
jge
jge
repnz
mov
and
insb
xor
in
sbbb
jnp
pop
sbb
hlt
pop
pop
fsubrl
sti
shlb
sbb
repnz
cmpsb
or
mov
icebp
mov
jne
repz
dec
or
mov
mov
mov
mov
lds
pop
sahf
push
push
out
push
push
pop
out
adc
adc
nop
dec
pop
movsb
pop
cmp
mov
scas
cmp
clc
jg
mov
jmp
dec
in
push
inc
xchg
mov
xor
mov
push
mov
out
jno
xchg
ror
mov
fcmovnu
mov
push
cmp
loope
cmc
or
cmp
jg
scas
push
add
dec
xchg
mov
stos
scas
jno
pop
cld
inc
xchg
stos
fisubs
fwait
outsl
mov
mov
add
cmp
add
sub
flds
xchg
xchg
pop
das
stos
sub
mov
jecxz
inc
mov
in
mov
jb
test
cltd
rclb
xlat
jge
dec
imul
mov
ret
pop
mov
enter
adc
xor
addb
sub
xchg
cltd
sti
negl
pop
inc
dec
push
adc
ljmp
pop
mulb
scas
jg
jne
jnp
scas
cmp
add
fs
stos
dec
out
pop
dec
add
stos
inc
daa
dec
mov
lds
idiv
popf
cmp
enter
mov
inc
jne
jno
adc
xor
pop
pop
jg
rcrl
pop
cld
aaa
mov
loope
sahf
pop
push
xor
js
or
xor
test
repz
dec
cld
mov
push
jae
out
into
cmp
sbb
push
insb
test
xor
daa
imul
or
mov
daa
call
and
imul
jl
mov
out
lret
cmp
icebp
fisttpll
seta
dec
mov
jle
add
std
and
std
cld
jl
sbb
shr
fidivl
movsb
test
sbb
mov
into
btr
movsb
or
not
dec
cli
sbb
subl
and
inc
cmc
jno
fs
dec
fisubs
jns
mov
pop
cmp
lahf
imull
cmp
mov
mov
pusha
je
lret
lret
xor
inc
sahf
leave
sub
mov
imul
into
cmp
mov
imul
int
add
out
add
int3
and
pusha
dec
cmpsl
push
mov
insl
mov
push
adc
mov
les
xor
mov
jecxz
call
mov
pop
adc
mov
mov
imul
pop
xchg
arpl
sbb
sbb
jo
inc
mov
popf
icebp
mov
jmp
xor
xchg
adc
imul
in
xchg
pop
jmp
dec
push
outsl
enter
cmp
sbb
and
movsb
mov
or
xchg
mov
out
dec
push
mov
add
inc
mov
or
cwtl
jmp
lock
cld
insl
out
ja
nop
frstor
jne
rcll
sub
scas
and
push
adc
fcomip
mov
icebp
mov
ds
cmp
lea
jg
gs
jmp
push
scas
or
sbb
add
fnstcw
adc
dec
hlt
in
xor
mov
outsb
outsb
pop
xor
mov
push
repnz
in
adc
adc
pop
in
scas
cmpsw
inc
sbb
cmp
inc
xlat
inc
pop
bndstx
mov
pop
pop
pop
xor
inc
mov
pop
imull
fadd
stos
add
rcr
jbe
inc
imul
mov
xor
imulb
out
rorl
push
dec
addb
or
mov
jbe
fisttpl
xchg
fildll
notb
stos
mov
push
rcrl
adc
testb
inc
idivl
pushl
mov
data16
xor
jns
mov
in
jge
inc
adc
enter
shlb
aam
sbb
sahf
xchg
pop
scas
std
or
push
shl
mov
cmpsb
shrl
imul
jl
test
filds
jecxz
popf
mov
out
bound
fstpl
mov
psllq
pop
dec
inc
mov
std
clc
pusha
dec
mov
iret
lcall
rcl
loope
lds
inc
std
rol
cmp
mov
lock
jno
pop
push
imul
out
mov
pop
fimull
add
cltd
jae
shlb
enter
divb
psadbw
and
push
inc
pop
in
fcomp
lds
lds
test
jle
push
and
mov
mov
adc
push
xchg
shrl
cmp
fsubp
insb
adc
in
in
sbb
lods
pusha
shlb
sub
dec
cwtl
push
mov
inc
out
dec
std
inc
mov
cvttps2pi
mov
je
mov
add
mov
pop
adc
jns
mov
out
sarl
sbb
jne
les
mov
loopne
or
jno
sub
dec
ja
adc
xor
ret
pushf
xchg
dec
pop
jp
add
sub
mov
test
iret
mov
xchg
jae
sbb
imul
popa
push
adc
fnstenv
sahf
pop
and
mov
sub
scas
push
mov
rcrl
jno
sub
subl
mov
jg
test
adc
lods
xchg
or
pushf
es
pop
mov
dec
mov
test
test
jg
ret
xchg
cmc
decb
sbb
push
out
lret
and
push
pop
add
xor
fcomip
out
inc
add
cwtl
push
js
out
std
xor
cmp
mov
mov
add
lcall
xchg
dec
pushf
push
cmpsl
cwtl
out
lret
and
mov
sub
and
out
and
mov
iret
and
shll
fstl
mov
mov
es
inc
push
jbe
or
dec
in
outsl
sub
mov
pusha
loop
mov
fwait
shr
subb
shll
jo
push
mov
xor
scas
shlb
fcmovnb
pop
sarl
adc
jae
jmp
das
and
dec
movsb
data16
in
xor
and
outsl
xchg
aas
jnp
lock
mov
mov
sbb
loopne
jb
jnp
hlt
cmpsb
xchg
push
pop
cmp
lock
sbbl
adc
inc
test
sub
push
enter
in
push
fistps
jnp
push
outsl
and
sub
ja
ficoml
enter
cmp
adc
mov
add
dec
add
int3
ss
sti
shrl
jmp
adc
jl
sti
mov
ret
mov
xchg
icebp
sarl
insl
lock
ret
inc
js
enter
cmp
pop
stc
or
mov
shlb
cmp
testb
mov
imul
sub
mov
sub
and
mov
push
adc
arpl
adc
pop
xor
mov
pop
int
pushf
push
lcall
sbb
in
inc
cmpsb
mov
push
jp
jle
into
mov
test
cmpsl
faddp
fldcw
cmp
mov
inc
mov
iret
jecxz
fisubrl
loop
or
popa
loop
lret
out
lret
outsl
jo
jge
outsl
mov
leave
sub
mov
inc
push
and
scas
sti
inc
mov
es
incl
cwtl
imul
inc
mov
pop
push
inc
xchg
push
loop
mov
fidivrl
xor
jl
jg
testb
mov
sti
mov
dec
imul
ljmp
aas
push
jbe
sahf
imul
and
pop
sub
or
xchg
pusha
xlat
push
ficomps
xchg
inc
xor
xor
icebp
popa
in
and
sahf
repz
pop
shlb
lods
aaa
push
add
gs
inc
inc
mov
and
cli
xchg
pop
pop
imul
cmp
mov
dec
clc
pop
movsl
pop
add
push
sbb
mov
inc
adc
mov
lea
add
sub
xchg
jns
insb
inc
in
mov
inc
icebp
and
jb
gs
jp
filds
fs
js
pop
adc
pop
dec
mov
dec
fdivs
sbb
add
jg
ficompl
shrb
add
jbe
stc
outsb
push
out
jb
sahf
fs
lds
pop
lods
pop
mov
fs
inc
xor
jno
dec
mov
insl
mov
loopne
jge
cmp
fisttps
stc
xor
push
ficoml
dec
or
mov
daa
inc
jo
fisubs
dec
pop
mov
inc
fildl
cwtl
cmp
icebp
in
ljmp
repnz
sbb
and
inc
out
jle
jb
mov
push
adc
jmp
fwait
out
das
adc
fimull
mov
mov
mov
jno
cs
push
testb
nop
and
je
pusha
sub
xchg
mov
shl
add
pop
adc
inc
or
mov
shll
imull
orl
outsb
mov
sti
pop
mov
orl
lods
jge
pop
push
xor
loope
jp
loope
or
pop
call
pop
adc
sbb
js
gs
pop
adcl
sahf
adc
repnz
cs
test
mov
dec
ficoml
mov
divb
sarl
inc
ss
into
ret
std
cmp
push
sarl
cld
xor
mov
push
cmp
int
or
shlb
out
dec
lahf
roll
int3
pop
dec
rcrl
xor
rclb
adc
cmpb
and
ds
fdivrs
xchg
fs
fidivs
jno
xorl
cmpsb
bnd
lret
push
aad
lret
jno
cmp
stos
lret
ret
sub
pop
insl
xlat
mov
rorb
lods
cli
dec
sbb
rclb
cmp
cmpsl
xchg
adc
loopne
mov
jge
shll
sub
int3
mov
mov
cld
aad
xor
mov
add
sbb
dec
lahf
pop
cs
or
hlt
mov
out
inc
cmc
mov
adc
cmpsb
pop
xchg
fistps
sti
or
add
push
cmp
dec
and
mov
popa
inc
test
inc
rolb
loope
mov
and
cmp
test
ret
outsl
inc
fisubrl
xchg
sbb
sub
mov
in
mov
pop
pop
push
push
aad
xchg
in
pop
dec
hlt
inc
xchg
insb
mov
lcall
xchg
sbb
jns
or
adc
bound
shlb
std
mov
shlb
ja
adc
push
pushf
mov
cmc
inc
pop
mov
adc
cltd
cmp
insl
stc
fcompl
test
rcll
loope
repnz
adc
jb
push
mov
xchg
pop
add
pop
aad
mov
in
mov
sub
insl
pop
pop
and
sub
mov
jle
jp
stc
lods
rorl
cmc
sbb
data16
stc
cmp
pop
jne
cmp
iret
int
out
ja
lret
push
outsl
pop
insb
sti
test
xlat
and
lock
xlat
iret
inc
pop
int
and
pop
add
insb
jns
mov
sbb
push
inc
jle
jo
xchg
xor
test
arpl
adc
mov
add
cwtl
mov
mov
add
cld
adc
mov
adc
in
and
jb
arpl
push
pop
test
call
push
dec
inc
inc
push
aad
imul
adc
sub
adc
int
xchg
xchg
push
dec
adc
jp
jno
xchg
jg
cmc
in
cmp
subb
lcall
stos
ret
roll
lods
sub
and
sub
ja
sub
leave
std
lock
stc
dec
psubusw
ret
sub
xchg
sub
pop
pop
sbb
jge
fimuls
pushf
mov
cwtl
aaa
repz
test
cmpsb
popa
notl
cld
out
and
test
jge
pop
hlt
xor
inc
fsub
ja
in
mov
xchg
dec
jo
lret
test
int3
pusha
js
lcall
cmp
mov
push
mov
cmp
pop
or
sbb
fabs
or
ret
adcb
call
lods
cmpsb
in
mov
add
ret
mov
xor
push
outsl
gs
fimuls
or
popf
imul
aas
xchg
xchg
mov
in
inc
pusha
pop
loope
dec
gs
or
test
in
push
das
das
xor
sbb
aam
mov
jp
adc
push
jge
loopne
jp
aaa
lret
pop
jno
add
pop
dec
mov
xorl
and
cmp
fistl
outsl
dec
mov
icebp
dec
movsl
push
cs
ret
dec
inc
test
push
in
aad
push
fisttpll
ljmp
aaa
test
add
jnp
ret
xor
fstpt
xor
ret
loope
popl
andps
shl
mov
mov
scas
rcll
das
jns
cli
ret
cmp
bound
icebp
mov
mov
or
stos
adc
push
inc
call
stos
adc
sub
lds
dec
lds
test
sbb
in
sbb
test
cmp
jecxz
iret
mov
pop
js
jle
jecxz
mov
push
or
cmp
mull
jnp
cmpsb
gs
fsubrs
adc
xor
push
dec
mov
out
push
add
xor
pop
or
adc
lods
sbb
xor
aaa
inc
iret
das
scas
dec
cmpl
cmp
mov
dec
push
loop
fmul
arpl
sub
fs
dec
popa
test
cld
jge,pt
inc
fisubrs
fcmovb
mov
fldenv
xlat
push
lret
dec
aad
fstpt
xor
rcrb
dec
sbb
insl
and
movsb
sub
cld
xchg
jne
adc
dec
outsl
or
pushl
imul
jmp
adcb
jl
das
adc
adc
inc
xor
cwtl
dec
pushl
mov
jbe
or
cmp
es
popa
scas
and
mov
stc
sub
or
push
addr16
inc
stos
jge
jno
push
repnz
push
and
jg
subb
and
fimuls
dec
mov
lcall
loop
xorl
shlb
pop
clc
out
xor
inc
lods
arpl
inc
or
or
int
loopne
imul
jmp
push
mov
fucom
lahf
inc
int
insl
jmp
nop
cmp
stos
das
or
mov
cmp
gs
mov
mov
and
mov
subl
pop
inc
xchg
cmp
das
sti
nop
adc
int
std
pop
jno
push
inc
rclb
out
in
lods
fs
icebp
xchg
jnp
out
movsb
js
sbb
scas
mov
push
push
cmpsb
add
and
pop
imull
cli
movsb
in
push
or
xchg
push
orb
xchg
push
mov
dec
mov
aaa
out
aad
and
outsl
test
ret
test
lret
pop
aas
xchg
repnz
aaa
mov
mov
dec
sbb
sub
mov
jge
lret
inc
adc
orb
clc
fwait
xchg
scas
mov
repnz
pop
imul
les
mov
pop
cmp
cmp
sub
bound
mov
dec
cmp
fwait
clc
jo
scas
inc
mov
jecxz
scas
ret
lods
mov
jmp
aaa
cmpl
shll
loopne
inc
ret
call
clc
cltd
ret
arpl
outsb
lcall
cmp
pushf
jns
sbb
fsubs
iret
mov
lret
sbb
push
xchg
adc
pop
popa
mov
add
loopne
pop
xchg
shl
fidivl
add
shrb
xor
lea
int3
inc
xor
scas
adc
daa
shll
sbb
mov
cli
repz
movsl
loope
lds
insb
incl
ss
in
imul
xor
icebp
out
sub
outsb
jbe
add
pushf
ds
mov
dec
lcall
pop
add
mov
out
std
sbb
jge
lds
push
cmc
mov
cmpb
pushl
dec
xlat
sahf
sarb
cmp
jb
sub
imul
mov
mov
jae
xor
mov
fadd
inc
pop
inc
rorb
mov
das
rcll
cmpsl
or
popf
outsb
rcll
arpl
loop
pop
je
xchg
cmp
sub
ja
test
outsb
inc
fistpll
out
xchg
imul
cmpsl
bound
mov
mov
test
sahf
jp
mov
fwait
and
out
xor
mov
jecxz
adc
lock
mov
jbe
xchg
int
icebp
mov
adc
lea
jne
testb
sbb
jl
jg
adc
mov
hlt
adcl
xor
xchg
xor
call
push
jl
inc
mov
shl
dec
cmp
pop
movl
ret
lds
inc
pop
push
hlt
sahf
dec
leave
aam
aam
sbb
cmp
dec
mov
add
mov
xchg
cmp
inc
push
clc
mov
imul
lcall
fists
faddl
xor
jo
nop
imul
cmp
cmpsb
ljmp
mov
mov
sar
cwtl
lods
cltd
xor
xchg
sbb
sahf
dec
subb
mov
neg
or
ret
aas
push
cmc
cmp
daa
iret
sbb
addr16
mov
ret
sti
adc
shlb
popa
mov
jno
mov
cwtl
or
jb
push
fs
inc
fstpl
lock
cmpsb
ret
push
enter
add
xlat
xor
jae
rclb
jb
lock
aam
push
sub
and
mov
xchg
cmc
mov
vcvtps2ph
insb
popf
mov
or
mov
jg
push
cmp
and
push
sub
xlat
xor
cmp
dec
jnp
stc
iret
dec
mov
pusha
jg
or
adc
xor
nop
sahf
loop
sub
iret
in
in
jl
cmp
pop
pop
jle
das
adc
aam
cmpsl
dec
ds
mov
lods
mov
in
int
scas
in
xorl
sbb
lret
xlat
add
xchg
add
aas
inc
popa
xlat
mov
push
pusha
and
xchg
xor
dec
sbb
dec
adc
mov
hlt
pop
data16
mov
jmp
cmp
mov
fsubrl
mov
pushf
cmpb
std
pop
stos
pmaxub
or
mov
add
lcall
xchg
mov
and
and
shlb
xchg
pop
sub
ficoml
scas
cmp
and
dec
inc
push
push
jge
inc
jecxz
out
dec
xchg
add
jl
dec
hlt
shrb
dec
xor
mov
je
pushf
repz
dec
inc
je
enter
cltd
adc
push
xor
in
adc
aad
out
cmp
push
and
mov
xlat
loope
cld
lahf
adc
shll
jge
pushf
stc
jns
push
test
add
ss
mov
and
call
fisttps
clc
repz
pop
shll
ret
gs
or
iret
lods
jecxz
lods
xchg
sbb
rcl
pusha
inc
jno
mov
call
lret
mov
rol
push
sub
out
dec
les
xor
inc
pop
cmp
xchg
fadd
jmp
mov
add
pop
and
sbb
mov
jp
rcl
sbb
pop
push
test
xor
int3
daa
fdivrs
mov
sbb
das
outsb
bound
imull
jns
int
push
pop
pop
clc
xor
sbb
dec
sarl
adcb
or
lock
scas
sub
stos
iret
dec
dec
and
jae
test
stc
insl
pushf
mov
mov
in
cmc
scas
dec
pop
nop
lods
ror
mov
arpl
clc
jl
sbb
jg
in
in
in
or
adc
cwtl
xor
pusha
adc
sbb
sub
xchg
fldl
or
mov
xchg
clc
xchg
pop
cwtl
jge
outsb
xchg
pop
adc
aam
or
scas
xor
mov
mov
mov
mov
xor
xchg
lret
mov
sub
divl
fcmove
dec
sub
cmpsl
inc
call
ret
mov
lahf
fstpt
and
dec
pop
movsl
inc
dec
cwtl
mov
mov
mov
mov
jle
les
xor
or
outsb
cld
dec
sbb
xchg
or
ds
lret
repz
lcall
arpl
fisttpl
xchg
sbb
and
es
push
fildll
test
push
neg
xchg
in
test
sbb
popl
inc
movsb
addl
shll
push
pop
push
jno
add
cmc
pusha
mov
mov
pop
sbb
and
push
in
pop
int3
mov
shrb
adc
rcll
add
xor
xchg
cmp
stc
or
lea
push
aaa
loopne
cmp
mov
test
into
negl
xchg
or
pop
aaa
dec
pop
xlat
rcll
lock
sub
pop
ret
fdivrl
test
or
cmp
push
xchg
push
push
mov
xchg
test
loopne
insb
push
mov
sbb
stc
and
decb
idivl
sti
or
cmovbe
cwtl
mov
scas
mov
inc
repz
and
cmpsb
pop
notb
clc
gs
inc
frstor
out
js
out
subl
sub
lahf
sub
testl
out
pop
mov
mov
out
mov
adc
leave
mov
fwait
imul
xchg
cmpsl
pop
ss
stos
push
sub
imul
movsb
inc
jae
cmp
cmc
and
lds
and
rcl
xchg
push
out
jle
mov
loope
or
popf
jmp
mov
push
insl
outsb
xor
cli
imul
adc
push
push
mov
mov
lods
cmpsl
lods
or
xchg
out
xchg
movsb
jnp
lret
xor
cmpsl
ds
pushf
sub
arpl
repz
imul
cmp
add
jmp
push
and
lock
jp
mov
iret
pop
pop
dec
xor
outsl
bound
sub
test
int
in
sti
cmp
or
mov
push
lods
lret
inc
es
popf
xor
call
xor
and
aas
xchg
in
aas
out
cmp
nop
subl
mov
push
in
cltd
and
sar
mov
jno
jno
or
xchg
add
cmc
adc
cmp
mov
xchg
adc
lret
mov
jns
test
call
test
add
sahf
pop
add
lahf
sahf
in
scas
inc
pop
push
clc
ss
in
lock
xchg
pop
imulb
mov
int
push
xchg
jl
jp
jbe
adc
and
mov
sbbl
popf
scas
das
jnp
mov
lds
push
loop
or
or
push
add
fstpt
test
adc
test
mov
pop
rcrb
xor
iret
sbb
pop
or
inc
jno
or
pusha
inc
push
lds
adc
push
sub
das
fstpt
cld
dec
loop
lcall
sahf
mov
inc
fucomi
fwait
lods
cmp
fdivl
add
mov
jecxz
xor
sub
xchg
aad
xlat
and
jge
cmp
mov
daa
xchg
ss
insb
shlb
add
mov
shll
add
push
lds
sub
pop
push
ja
into
hlt
testl
cmpsl
aad
andb
insb
sbbl
push
std
bound
mov
or
stos
sarb
pop
fs
adc
xchg
mov
dec
push
rolb
shlb
or
jl
ljmp
mov
out
test
aam
mov
cmp
mov
shll
mov
mov
adc
in
fstpt
pushl
sub
sub
or
mov
push
fisubrl
and
sbb
pop
or
cmp
in
and
stc
dec
cmpsb
rolb
mov
mov
testl
out
movsb
push
pusha
gs
in
push
sbb
dec
int
sahf
dec
push
adc
fstpt
xchg
cwtl
test
or
xlat
scas
mov
arpl
ret
sbb
loopne
or
cmp
xor
sbb
push
push
push
addr16
mulb
mov
and
outsl
mov
les
gs
jge
pop
popf
adc
ja
movsl
mov
and
pop
inc
sub
loop
jl
fimull
pop
movl
outsb
push
inc
cmp
xlat
leave
xchg
roll
in
popf
fwait
cli
mov
decb
into
les
addr16
jl
vmovntpd
push
stc
fs
xor
or
inc
jnp
dec
ret
test
push
and
mov
popa
push
lods
add
mov
xchg
test
adc
loope
mov
lea
stos
inc
sub
jmp
pop
jns
mov
es
es
cmp
sahf
leave
gs
xchg
loope
in
mov
fnstenv
push
in
in
mov
stos
imul
jle
xor
sarb
gs
cli
fyl2xp1
in
addr16
adc
or
out
xor
into
in
push
xor
pop
mov
cmpsl
xor
in
mov
jmp
out
fstpl
loop
rorb
or
sub
xchg
sbb
movsl
sub
adc
jo
dec
cmpsb
imull
mov
aaa
dec
fcompl
insl
icebp
loope
fldcw
sbb
sbb
popf
loope
mov
adc
mov
aad
mov
mov
adc
fimull
push
scas
pushf
popa
shll
jg
cli
or
sub
dec
outsb
sub
in
pop
or
pop
aad
roll
in
sbb
add
mov
push
xlat
jbe
jle
and
sub
dec
in
inc
xor
les
int
out
dec
testb
insb
or
push
gs
dec
into
icebp
pop
jnp
adc
nop
xchg
jl
stc
rorl
xchg
push
out
push
mov
mov
btc
adc
stos
adc
adc
add
push
test
lahf
hlt
and
lds
push
pop
inc
into
inc
imul
stos
mov
lahf
fwait
icebp
mov
pop
mov
mov
push
pop
mov
shll
mov
rorb
nop
pop
fs
jo
dec
in
int
cmpl
aas
or
ljmp
out
loopne
int
mov
jle
push
insl
push
hlt
xchg
cli
iret
loopne
nop
test
jp
inc
dec
dec
mov
aas
mov
inc
inc
in
xorl
xchg
and
lret
inc
imull
ja
rcrb
push
mov
fiadds
or
adc
into
add
jne
push
dec
or
in
sub
jbe
sub
dec
cmp
mov
repz
inc
pop
shrl
clc
or
cmc
push
push
push
aam
pop
sbb
sub
jmp
addr16
gs
mov
mov
pop
call
xor
xor
dec
pop
mov
push
xchg
sub
mov
push
add
repz
ljmp
lret
sbb
cwtl
pop
ds
pop
mov
dec
jo
sarl
and
pop
pop
pop
jns
or
fcomps
sbb
sub
mov
data16
leave
jle
imul
in
jno
adc
mov
inc
nop
mov
mov
sti
fimull
lahf
sbb
fnstenv
mov
push
pop
push
rclb
pop
aas
scas
cmp
js
rcrl
out
iret
xlat
daa
jecxz
icebp
sub
add
cli
outsl
pop
sbb
or
loope
cwtl
mov
push
icebp
mov
lea
repz
dec
sbb
dec
pushf
jmp
movsl
cs
xorb
cld
and
stc
adc
mov
xor
fistpl
or
sub
movsb
inc
aam
cld
je
xchg
dec
outsb
fs
push
sub
fs
imul
or
mov
fcmovne
mov
xchg
adc
fmuls
lds
fidivrl
sub
dec
cmp
pop
pushf
loope
pop
sub
lock
pop
or
cmpsl
rolb
sbb
and
lods
rorl
fldt
jnp
sub
adc
stos
mov
cmpsl
adc
adc
fcompl
shll
sbb
adcl
xchg
adc
push
xchg
dec
pop
popf
xchg
fmuls
pop
andl
sbb
je
hlt
repnz
cmc
jns
cmp
arpl
jge
inc
jnp
xlat
nop
xchg
push
pop
push
and
scas
leave
movl
bound
mov
fwait
add
mov
and
sub
xchg
mov
sbb
fwait
cltd
movsl
sbb
mov
out
sub
ret
dec
mov
adc
dec
in
lcall
data16
add
xchg
xchg
cld
movsl
push
fildll
iret
inc
add
shll
xlat
xchg
push
int
jge
mov
and
push
cmpsb
sbb
nop
fstp
incb
imul
add
mov
mov
xor
js
call
out
jo
xor
pop
popf
leave
dec
xlat
fs
out
pop
repz
pop
add
rcll
mov
rol
inc
xchg
jbe
xchg
inc
call
int
cld
xor
iret
xor
cmp
adc
mov
stos
xchg
std
mov
push
es
std
sub
sub
mov
ret
scas
ljmp
push
adc
mov
add
xor
xchg
xchg
test
lods
pop
int3
clc
pop
andl
dec
inc
sbb
pusha
push
or
inc
cld
mov
xchg
repz
jl
incb
cs
jb
cmpsl
rdmsr
pop
adc
int3
adc
mov
int3
inc
dec
mov
inc
imul
dec
pop
addr16
scas
jecxz
out
dec
popa
jg
lcall
xor
and
out
jp
pop
inc
ucomiss
sbb
stc
shrl
in
push
in
cmpsl
dec
lret
push
clc
jo
cmc
stos
shlb
movsl
mov
idiv
push
cmp
roll
inc
pop
pop
add
sbb
rcr
mov
xchg
jnp
jp
call
xchg
lds
pop
lret
daa
test
adc
testb
push
movsb
je
or
repz
fdivrl
into
dec
fisubrs
sub
loop
into
xor
mov
xchg
ja
lret
lahf
xor
push
ret
addr16
stos
repz
mov
cmpsb
lods
mov
arpl
jb
lds
testl
push
push
sub
push
lcall
cld
sti
xchg
add
int
or
mov
pop
sarl
xchg
shrb
enter
cmp
loopne
ja
fs
sahf
fcomip
mov
inc
push
jecxz
in
ds
aad
and
mov
in
ja
cwtl
mov
push
xchg
mov
imul
dec
icebp
or
sub
pusha
push
and
mov
insb
mov
mov
xchg
loope
rcrl
dec
ret
or
and
dec
dec
frstor
movsb
jp
or
call
repnz
in
mov
xor
or
pop
jecxz
leave
xor
xchg
movsl
xchg
stos
repz
test
sbb
or
shlb
cs
pushf
mov
icebp
outsb
fstps
icebp
xchg
repnz
pop
pop
jnp
cmc
bound
push
loop
mulb
out
mov
imul
mov
test
or
pop
jl
neg
stc
and
stc
je
test
xrelease
ss
or
inc
adc
push
movsl
clc
pop
icebp
or
lds
je
mov
cmpsb
or
mov
scas
mov
sbb
stos
movsb
mov
jb
data16
jl
sbb
add
int3
in
and
icebp
clc
movsb
dec
and
xor
inc
lods
lods
pop
dec
shr
jmp
xchg
fld1
sbb
jno
fldl
pop
mov
cmc
fildll
ds
int3
into
mov
scas
jae
cmc
scas
add
pop
inc
mov
insb
xor
mov
fs
dec
mov
fistpl
inc
clc
lods
nop
pop
xor
aam
insb
pop
add
jns
jbe
subl
fsts
adc
add
push
rcll
call
sbb
push
mov
test
cmp
ds
ljmp
sub
adc
roll
rcrl
stc
adc
rcl
loop
or
xor
aas
xchg
jl
push
sub
cmp
adc
dec
jb
les
imul
jmp
inc
mov
sbb
fsubs
push
fildl
mov
popa
and
rorb
in
dec
js
jb
cmp
sbb
fsubp
fildl
shr
clc
cmp
ret
sets
dec
cltd
sbb
stos
mov
das
pop
pop
lods
arpl
add
mov
imul
decb
test
cmc
je
lret
and
cmp
imul
mov
dec
mov
push
jne
lahf
loop
jb
lock
cltd
sbb
cld
mov
jl
cwtl
lahf
dec
dec
in
xlat
jnp
outsl
shrl
jmp
add
fdivrs
mov
xchg
mov
jecxz
dec
xlat
mov
addr16
xor
xor
int
xor
sub
push
loopne
cmpb
cmp
imul
ss
test
xchg
test
lock
adcl
daa
lahf
push
xchg
pushl
leave
movsl
in
push
sub
imul
lods
roll
pusha
mov
cmp
pop
loopne
adc
in
scas
outsl
fistps
adc
or
mov
mov
push
enter
rorl
dec
les
or
cltd
mov
push
cmp
inc
sbb
adc
lods
mov
pop
push
imul
push
aaa
mov
sub
mov
es
lret
ret
repnz
imul
in
popl
cmp
in
gs
mov
insb
in
add
fs
add
adc
lds
rorl
xor
mov
out
xchg
outsb
mov
or
adc
loope
jae
push
jns
imul
or
or
idivl
je
out
pop
jnp
test
dec
ljmp
mov
lret
insb
bound
test
and
out
xor
pop
push
or
sub
sub
aas
sarl
adc
xchg
imul
mov
push
and
xor
sbb
cmp
ja
sub
jp
push
dec
rol
xlat
xor
jge
push
pop
xor
jnp
push
loop
insl
dec
push
jae
popf
dec
mov
bound
and
lods
sbb
jno
repnz
sub
daa
arpl
ds
cli
or
push
cmp
rorb
cli
leave
push
inc
mov
mov
xchg
dec
or
cmp
jnp
push
fadd
and
icebp
mov
mov
nop
pop
in
arpl
pop
xor
clc
filds
cmp
add
out
jp
divb
movsb
enter
adc
lret
fisttps
or
js
sub
incl
lock
lock
loopne
mov
cltd
sbb
cmp
aaa
mov
push
std
imul
push
ljmp
adc
adc
push
bound
cli
push
mov
jbe
leave
mov
xchg
mov
mov
mov
xor
outsl
cmp
push
cs
imul
pop
cs
in
fwait
sub
dec
mov
jle
adc
jg
add
push
aad
ljmp
push
jae
into
out
xor
ret
lods
mov
mov
cmp
dec
inc
push
sbb
or
jecxz
mov
cmpsb
sbbl
sub
sub
xor
dec
sub
fisubrs
mov
lock
cmp
mov
mov
cmp
iret
cmpsl
scas
inc
lret
jns
rcrb
rcl
data16
mov
int
cmpsl
mov
ss
jl
sub
adc
xlat
nop
xor
lret
mov
xor
fwait
int
push
jb
adc
movsb
jns
or
les
mov
imul
mov
and
ss
out
cmpb
jg
xchg
sbb
movsl
insb
std
xchg
mov
push
ret
xchg
mov
loopne
rcrb
icebp
test
stc
mov
jnp
mov
sbbb
push
push
sbbb
sub
mov
pop
movsb
sbb
pop
jb
jg
aad
xorb
xchg
dec
scas
mov
nop
test
inc
fnstcw
add
inc
test
fimuls
repz
adc
xlat
and
in
int
sub
xlat
les
jbe
fs
pop
pop
add
cmpsl
jge
shlb
cmpsl
outsl
out
and
fs
sbb
in
insb
dec
jl
mov
sahf
inc
jecxz
cli
xchg
jge
js
ss
orl
inc
in
ljmp
or
jbe
and
or
mov
adc
xchg
int3
daa
rcrb
cmp
jnp
movsl
sbb
fidivs
enter
insb
dec
cmpsl
jg
jmp
insb
stos
inc
in
adc
enter
dec
and
push
mov
pop
scas
xor
cmpl
inc
xlat
pop
fdiv
inc
addr16
test
adc
and
or
stos
inc
dec
adc
cli
js
icebp
das
inc
lds
sub
mulb
into
xchg
push
test
gs
ja
mov
and
adc
cmp
shl
leave
pop
dec
les
sbb
repz
inc
out
mov
movsb
jmp
inc
inc
fistpll
xchg
stos
call
mov
dec
sbb
in
repnz
movsl
fldl
jno
addr16
or
imul
lods
clc
xchg
sti
ret
lahf
and
cltd
inc
in
outsb
mov
pop
xor
and
sar
das
jnp
ja
inc
fcompl
ret
jge
inc
pop
mov
movsb
inc
pop
sub
repz
push
mov
cmp
das
xor
mov
push
fwait
or
add
lahf
xor
insl
int3
inc
leave
dec
sbb
jae
shlb
aaa
shlb
push
cmp
pop
jnp
cmpsl
push
xchg
rcrb
fistl
or
out
or
pop
int
mov
repnz
je
stos
outsl
mov
sub
or
xchg
adc
and
jp
cmp
out
icebp
push
sbb
and
mov
jecxz
xchg
dec
cltd
mov
idivl
in
mov
pop
mov
cmpsb
rorb
mov
sbb
xchg
fwait
lods
xchg
jecxz
dec
jp
fwait
lahf
lret
mov
fs
std
lea
jg
cld
hlt
popl
pop
pusha
mov
dec
sub
dec
inc
or
fldcw
lahf
jne
xor
mov
and
dec
ss
lock
aas
mov
sbb
push
sub
dec
daa
addr16
in
int3
lret
loope
fldl
cmp
jne
mov
xchg
jae
push
popa
data16
add
sbb
andl
lea
dec
shll
xor
mov
jecxz
pop
pop
in
or
arpl
rcll
fidivl
mov
popa
aad
shrl
xor
mov
dec
loope
adc
subl
cmpsb
and
push
jle
stos
in
mov
xchg
inc
aas
push
or
xchg
xor
lret
je
or
add
mov
cwtl
and
bound
mov
mov
clc
lret
js
loop
jp
cmp
dec
scas
loopne
add
push
gs
mov
push
idivl
stc
out
shl
and
mov
mov
repz
cmc
or
arpl
int3
cltd
mov
adc
sbbb
pop
lock
mov
ljmp
xchg
mov
pop
scas
inc
xor
mov
dec
aad
xor
cmp
sbb
das
xchg
std
cli
mov
stos
inc
pop
jno
cmp
loop
xchg
les
xchg
push
aad
out
mov
push
lcall
dec
mov
cmp
popa
je
scas
xchg
pop
out
aad
jg
jne
test
inc
int3
cmpsl
andb
aaa
inc
int3
pop
loopne
pop
orb
lds
pop
xor
xchg
dec
pop
cmpsb
jno
cmp
and
jb
hlt
jns
and
pushf
test
mov
adc
lods
lret
repnz
mov
cmp
sub
xchg
int
sbb
enter
iret
mov
jge
aaa
fmull
dec
and
std
xor
cwtl
xchg
dec
pop
lods
leave
test
or
xchg
fisttpll
mov
mov
imulb
dec
out
jle
rcrb
or
enter
cwtl
cld
lret
inc
adc
sub
movntq
adc
je
out
mov
jmp
popf
push
xchg
fadd
sub
sahf
std
aaa
xor
shrl
negl
std
inc
adcl
and
xchg
dec
inc
mov
mov
jb
mov
notl
jae
dec
xchg
cmp
xchg
xor
xor
mov
into
push
dec
lock
pop
pop
psubusw
rcrl
xchg
jmp
add
loope
mov
adc
xchg
xchg
dec
xor
dec
dec
jnp
out
dec
gs
out
test
daa
adc
add
sub
and
jbe
rorl
iret
in
xchg
pushf
xlat
jecxz
jecxz
dec
fcmove
dec
xchg
jp
cmp
sbb
mov
pop
ret
or
xor
mov
loope
inc
or
xchg
adc
pop
or
mov
outsl
arpl
int3
inc
out
cmc
sahf
dec
xchg
ss
adc
sahf
adc
jmp
fcmovnu
cmpsl
sbb
sbb
repz
mov
cmp
mov
pushf
test
pop
fisubrs
mull
sbb
lods
scas
fistpll
and
jno
loopne
jg
inc
mov
out
icebp
sub
mov
mov
loop
pavgb
jp
jbe
fdivl
daa
push
xor
adcb
ds
outsb
rorb
adc
mov
loopne
add
inc
jbe
insl
enter
or
cld
js
addr16
loopne
xor
repz
xchg
dec
in
push
nop
sub
std
lahf
mov
xchg
xor
push
jno
cmp
mov
add
sub
sti
jbe
sbb
adc
out
gs
gs
push
dec
sbb
and
pushf
pop
and
push
sub
jb
into
sbb
hlt
sub
xchg
test
or
test
cmp
jp
jo
push
sub
imul
into
gs
bound
push
push
shrl
cld
jge
sbb
and
adc
pusha
mov
jnp
adc
or
xchg
stos
mov
and
rcr
in
ret
pop
adc
mov
pop
jmp
gs
arpl
hlt
dec
push
xor
out
lret
push
sub
scas
leave
lret
bnd
lods
lcall
pop
and
jl
pop
test
push
or
xor
push
inc
push
ss
lods
dec
dec
roll
in
in
lds
xchg
outsl
sub
insb
cld
sti
push
jg
stos
sub
fbstp
add
out
clc
pminub
push
mov
bound
nop
xchg
stos
inc
mov
mov
les
stos
repz
mov
mov
lods
jg
scas
int3
sbb
push
cmc
sahf
stos
sbb
mov
jmp
mov
sarb
cli
inc
je
pusha
add
or
or
mov
mov
cli
push
or
movsb
test
xchg
in
mov
adc
cmp
cmp
into
and
adc
lret
je
bound
jp
mov
iret
push
shrl
insl
push
inc
xchg
sbb
imul
inc
sub
pop
cmp
or
rsm
push
stos
shrl
inc
movsl
xor
stc
or
bound
add
std
jl
sbb
xor
cmp
jbe
xor
movsl
jge
sbb
jo
xor
lret
mov
cld
xor
testl
stos
and
or
or
jmp
xor
jl
cmpl
pop
fimuls
add
or
shl
data16
dec
ret
popf
in
xchg
and
sub
mov
int3
insb
jno
rorb
sub
xor
jno
pop
outsl
dec
or
jmp
rcll
mov
adc
in
pop
dec
adc
xchg
dec
cmpb
sub
xchg
aas
popf
int
in
pushf
mov
shrl
test
pop
imull
in
mov
push
jo
stc
and
aad
jbe
ds
je
rol
xchg
in
inc
das
sub
inc
and
pop
lahf
dec
les
adc
das
insb
mov
je
pop
add
sahf
xchg
test
lcall
jo
add
mov
sub
add
fdivrl
shrl
nop
mulb
sti
or
xor
adc
shld
jle
inc
pop
and
cmp
imul
ret
inc
std
xchg
es
and
call
or
cs
and
and
call
stos
das
push
mov
cmc
ljmp
dec
out
or
jnp,pn
inc
or
xchg
push
cmp
add
sub
mov
push
insb
iret
mov
test
and
stos
pusha
push
lods
jp
jg
or
in
ljmp
mov
in
outsl
jne
shll
fisubs
jne
or
pop
mov
jecxz
jl
pop
ficompl
pop
jp
les
lods
aas
pop
inc
loope
sbb
mov
sbb
movsl
int
xchg
sub
bndstx
sbb
enter
xorb
sbb
sbb
adc
sub
mov
ret
jae
push
xor
andl
jno
sub
je
dec
ljmp
test
fcomp
scas
add
mov
pop
add
ja
xchg
popl
cmp
inc
lods
jp
jbe
push
xchg
xor
iret
cltd
mov
jp
fildl
fstl
cmp
cld
lods
pushf
sub
inc
mov
scas
popl
sahf
jne
mov
mov
inc
imul
xor
mov
pop
stos
scas
xchg
push
mov
xor
inc
jbe
cli
aad
sbb
mov
inc
push
call
in
les
pop
cmp
scas
cld
fdivs
push
cmp
fcompl
insl
scas
mov
inc
cltd
in
sti
rclb
jnp
dec
shrb
rol
lods
shl
js
cwtl
shl
sahf
test
movsb
inc
add
adc
inc
iret
lret
je
in
jp
xlat
mov
add
aaa
nop
inc
loopne
int3
out
xchg
lds
sbb
and
sbb
xchg
jb
pop
xor
add
lods
pop
add
lret
jns
push
test
inc
out
adc
enter
mov
or
mov
in
adc
insb
in
mov
sarb
sub
jl
lret
mov
lock
ret
push
mov
scas
cmp
test
subb
dec
add
xor
sbb
repnz
xor
adcl
pop
shlb
push
cmp
cmp
dec
sbb
es
in
call
xchg
jle
outsb
xchg
add
outsb
add
fdivrl
jle
push
mov
insl
imul
mov
imull
jb
stc
inc
lea
push
leave
cwtl
lods
mov
cltd
or
add
lret
xchg
enter
out
pop
lret
lods
sub
push
scas
sbb
cmove
pusha
mov
xchg
xchg
bsr
xchg
jge
mov
adc
jp
and
xchg
add
xor
push
add
xor
xchg
xlat
xchg
add
in
inc
jb
push
jge
sub
movb
inc
nop
lods
sbb
lods
inc
lcall
movsl
mov
out
mov
fcoms
in
aam
xor
push
lods
nop
ljmp
rcr
ljmp
push
outsl
push
jae
rcl
and
test
inc
jnp
ds
lret
add
jge
jae
sbb
cmpsl
sbb
xchg
dec
out
out
jb
and
aad
adc
popf
mov
and
gs
mov
or
subl
and
dec
mov
sbb
add
cmpsl
movsl
jl
dec
adc
shll
shr
clc
dec
loope
adc
lret
loop
testb
pop
imul
mov
sbb
sbb
cmp
dec
hlt
cmp
xor
outsl
or
inc
das
hlt
insl
dec
jo
push
or
or
adc
mov
int3
and
loope
pop
popa
mov
notb
inc
pop
lock
inc
leave
popa
stc
loop
xchg
jo
dec
roll
sti
inc
xchg
dec
test
adc
sbb
jnp
rcl
fnstcw
sti
jmp
jne
pop
or
nop
aam
shrb
dec
or
notl
mov
cld
popf
jl
cwtl
ret
fidivs
bound
out
mov
inc
scas
outsb
icebp
mov
jmp
and
fsubr
jb
adc
cmp
jge
jae,pn
xor
ja
subl
mov
into
cmpb
push
mov
ja
jle
ret
fs
stos
jb
push
fldl
ljmp
ds
cwtl
call
xchg
cs
out
push
jecxz
mov
int3
test
ret
popf
sub
add
out
push
jge
in
mov
add
sbb
xchg
mov
xchg
insb
pop
ret
negl
jnp
pop
fs
pop
ror
sbb
imul
fwait
mov
mov
xchg
mov
mov
nop
fcomps
inc
adc
jbe
and
enter
mov
lret
inc
push
mov
scas
gs
sub
lods
das
lcall
pop
test
xchg
xor
xchg
xchg
add
mov
out
or
xchg
xor
xchg
cltd
idivb
lock
int
test
xor
in
std
rolb
xor
ljmp
mov
pop
adc
fcmovu
inc
sub
and
les
fstl
cli
push
bound
mov
mov
lds
jmp
push
mov
jbe
sbb
inc
push
cmp
out
int3
and
cmp
int3
or
shrb
pop
cmp
jecxz
lcall
in
mov
jne
idivl
xchg
jge
sub
jbe
sarb
cwtl
jbe
pop
jns
mov
push
lods
mov
lcall
leave
popf
dec
mov
inc
and
add
adc
cmp
jo
insb
repz
mov
mov
push
ds
push
and
sub
pushf
gs
fiadds
mov
sbb
add
cmpsb
mov
repnz
insb
outsb
sbb
push
adc
adc
or
inc
je
stos
ss
inc
cmpsb
dec
stos
push
add
rcrb
mov
cmp
inc
cli
lcall
cwtl
inc
add
cmp
mov
xchg
lock
adc
inc
aam
ficompl
jmp
ss
push
sbb
mov
mov
popf
int3
pusha
stos
fldenv
in
xlat
inc
mov
bound
cld
mov
in
push
iret
pop
or
daa
adc
add
mov
inc
dec
stos
xchg
call
scas
jne
push
jg
lods
jno
lods
mov
jp
xchg
lds
jle
outsl
sbb
adc
lcall
imul
lret
fimuls
popf
iret
or
mov
ret
mov
mov
rcr
into
iret
sub
lret
int
sbb
bound
or
jae
jne
pop
xchg
inc
daa
mov
pop
mov
popf
jle
push
outsl
sahf
xchg
imul
scas
jg
xchg
xchg
mov
push
jne
push
aaa
arpl
lcall
pop
push
cmp
or
setge
mov
push
jns
shl
pop
xor
pop
cli
cmp
fists
cmp
imul
mov
je
inc
arpl
dec
fmuls
jmp
xor
lods
sub
sub
jmp
out
imul
stc
les
mov
aaa
xor
mov
sub
popa
add
sbb
into
mov
sub
jecxz
add
inc
lds
push
mov
ss
ljmp
add
push
lods
mov
insb
dec
movsl
inc
shlb
cmp
lret
cs
or
lods
mov
ret
adc
call
movsb
jo
xchg
jnp
xor
or
cld
xor
xchg
in
pop
xchg
lcall
scas
test
repz
jae
xrelease
push
mov
addr16
pop
ret
shlb
jne
outsb
xchg
xor
cmp
sbb
stc
sbb
mov
pop
pop
or
push
jnp
xlat
or
hlt
into
mov
lret
stc
dec
mov
jl
arpl
ss
jnp
daa
test
push
ret
or
nop
dec
fildll
iret
mov
or
dec
repnz
pop
movb
in
xor
dec
outsb
mov
pop
adc
aas
jbe
xor
jmp
cld
jp
rorl
bound
cwtl
and
xchg
sbb
push
push
jnp
cmp
mov
adc
jl
inc
insb
mov
cmpsb
sub
insl
push
outsl
ret
xlat
sahf
cld
loope
cmpsl
inc
and
sahf
pushf
aam
push
nop
mov
gs
out
jno
nop
jns
jle
divl
adc
cmpsb
mov
imul
mov
scas
out
sbb
imul
adc
ljmp
int
push
xchg
jns
pop
mov
repnz
daa
push
rclb
xor
aas
in
test
mov
pushl
rcll
rolb
push
mov
aam
sbb
mov
test
popa
test
xchg
mov
sbb
and
mov
mov
aas
cli
out
mov
add
movsb
bound
xchg
into
mov
mov
pop
mov
sub
clc
lds
sub
pushf
xchg
sbb
jae
test
fdiv
js
fnstsw
inc
mov
sbb
cmp
push
pop
and
mov
adc
call
sbbb
push
js
push
inc
cmp
jle
ficomps
out
or
fs
dec
sbb
lahf
leave
sub
and
inc
add
cmpsb
int
cli
das
cwtl
test
mov
push
jp
cmp
mov
sti
jecxz
out
mov
jle
jae
inc
push
push
jl
mov
mov
mov
mov
cs
mov
adc
mov
cmp
pop
pushf
sbb
mov
mov
push
jae
call
cwtl
movsl
fdivl
lret
clc
cmp
out
mov
pop
loopne
loop
int
repnz
hlt
arpl
in
push
rolb
jns
cmc
jmp
push
adc
sbb
inc
push
mov
push
dec
stc
fildl
and
mov
and
jbe
hlt
sbb
and
adc
fwait
mov
mov
imul
mov
push
xchg
sbbb
dec
cmp
dec
nop
cmpsb
pusha
cwtl
arpl
test
add
arpl
mov
adc
jge
jmp
push
paddb
xchg
in
dec
mov
jecxz
and
mov
and
lret
xor
lods
bound
xor
mov
dec
add
cld
cltd
mov
inc
xchg
data16
bound
xchg
sahf
mov
xchg
dec
xchg
jle
and
out
dec
icebp
push
mov
das
adc
cld
mov
add
xchg
in
rcr
bound
lea
and
and
ljmp
adc
jne
push
out
lret
out
in
fwait
mov
lcall
jno
jae
hlt
sahf
stos
fsubs
mov
lcall
aam
bound
pop
repnz
cwtl
jo
outsb
rorl
rcr
popa
mov
sbb
pop
loopne
arpl
cmp
js
fs
insl
cmpsl
and
mov
iret
cmpb
push
ds
and
ds
inc
enter
fcomps
loope
lret
fs
xchg
pop
gs
scas
jae
xchg
ss
xor
push
push
daa
int
xchg
mov
and
lds
xchg
rorl
daa
loopne
pop
or
enter
rclb
dec
and
sahf
dec
ljmp
mov
imul
xor
dec
mov
test
and
mov
les
movsl
adc
xchg
aas
fxch
in
imul
pop
fnsave
test
inc
repz
mov
xchg
sbb
movsb
cld
push
shll
lea
mov
aam
pop
andl
cmc
jle
push
push
daa
fcoml
and
nop
es
pop
xchg
adc
or
mov
pop
out
cs
pop
ds
lcall
inc
sub
and
lods
xchg
jae
dec
push
cmpsb
fimuls
int
push
inc
data16
dec
loopne
jge
adc
pushf
mov
mov
push
pop
pop
aaa
adc
test
data16
sbb
lds
mov
and
sbb
pop
imul
dec
mov
dec
adc
dec
repnz
test
mov
push
mov
push
dec
push
cmp
into
dec
iret
mov
lcall
pop
dec
cmpsb
mov
and
mov
push
mov
divb
push
xchg
setge
lods
test
cmpsb
insl
jb
mov
sbb
mov
dec
ss
mov
loopne
cmp
mov
push
rclb
sbb
sbb
test
cmp
xor
pop
ret
add
sbb
rcll
loopne
jl
fildll
negb
sbb
adc
add
imul
mov
ja
and
push
aam
jmp
mov
push
inc
jecxz
sub
mov
lret
or
ja
das
mov
sub
repz
in
xor
out
popa
add
xchg
std
enter
cmpb
lahf
or
jl
mov
dec
aaa
jo
test
sub
xor
leave
mov
std
or
inc
pop
loopne
outsl
pop
stos
mov
mov
fisubrs
sbb
sbb
subl
sub
popa
pop
inc
cmp
jmp
mov
mov
cmp
mov
push
addl
jo
outsl
negb
mov
addr16
popa
fwait
sbb
dec
mov
bswap
xor
stc
push
inc
mov
ret
sbb
fsts
pop
inc
insb
mov
sbb
push
pop
mov
into
sbb
icebp
mov
js
aaa
cmp
xchg
adc
jle
mov
lds
jecxz
fistl
xchg
cwtl
mov
push
add
leave
jmp
scas
xchg
mov
scas
mov
sbb
push
pop
stc
push
jb
js
pop
xchg
push
push
in
fs
pop
cmp
inc
dec
adc
and
fstps
pop
in
fldcw
mov
pop
jle
mov
jecxz
in
adc
or
mov
inc
lret
jo
stos
pop
pop
jae
std
sbb
dec
daa
xor
repz
mov
dec
xor
xchg
mov
ja
xlat
jnp
sbb
das
in
lret
pop
out
pop
mov
sbb
xor
mov
mov
sub
mov
insb
push
mov
loop
dec
out
fistl
ror
lcall
outsl
or
mov
mov
int3
jmp
adcb
fmuls
hlt
cmc
pop
push
mov
lods
aam
adc
call
push
cmp
push
flds
enter
out
mov
add
xor
divb
stos
repnz
sahf
lods
adc
gs
shlb
movsl
jl
aad
pop
push
add
sahf
sti
dec
in
push
movsb
insl
shl
arpl
push
fstl
sahf
bound
jns
jle
fildll
push
aas
ret
imul
jmp
mov
fiadds
daa
fbld
sub
push
cltd
inc
dec
inc
bound
xchg
jb
cld
xchg
decl
test
mov
fs
js
test
jle
mov
sbb
in
popa
rol
mov
mov
addb
lea
cmc
test
in
sub
add
pushl
inc
imul
scas
and
xchg
sbb
std
icebp
int3
cwtl
int
pop
fisubrl
xchg
mov
adc
fwait
pop
sbb
dec
xchg
dec
nop
dec
dec
mov
or
leave
cmpxchg
movsl
or
pop
cwtl
xchg
push
fildll
repnz
add
jle
push
loope
testb
xchg
lock
inc
push
sbb
mov
xor
in
push
cmp
jb
fldenv
jns
jecxz
cmpsl
xor
mov
sarb
dec
sub
pmaxub
adc
pop
inc
sbb
and
outsb
inc
insb
sub
jno
mov
sbb
out
xchg
out
test
dec
adc
xchg
or
push
mov
clc
or
fcmovnbe
pmaddwd
sar
enter
das
and
and
and
jle
cmc
mov
mov
cmp
leave
orb
cmp
out
xor
cli
int3
adc
xchg
je
aam
enter
jne
rcrl
sub
push
cmp
notl
shlb
test
push
add
mov
push
cmpl
dec
xorb
mov
mov
rcr
pusha
jmp
jp
ja
mov
or
dec
jmp
movsb
jle
sbb
roll
mov
jo
mov
jnp
push
mov
nop
push
xor
into
add
inc
ljmp
cmp
or
adc
mov
stc
sbb
loopne
out
inc
lcall
xchg
test
int
pop
fldenv
sti
push
aam
xor
mov
mull
je
and
in
mulb
test
jg
mov
pop
stos
cmp
cmc
push
pop
fisubrl
sub
and
xor
iret
mov
dec
dec
outsl
out
movsl
add
call
hlt
icebp
dec
lret
popa
testb
inc
fisubl
push
mov
add
cmp
shll
pop
stc
jle
mov
movsb
or
mov
pop
sbb
pop
clc
sbb
or
cmp
and
adc
sub
repnz
push
pop
add
dec
push
jb
movsb
sub
xor
mov
lds
and
out
cmpsb
int3
sub
stos
fwait
sbb
sahf
dec
cwtl
sub
xorb
mov
stc
fidivl
clc
pop
xor
add
cltd
xchg
call
cs
in
test
push
data16
shl
shl
mov
pop
das
and
jg
cli
shld
lea
lea
pushf
outsb
pusha
push
xlat
je
push
stos
mov
add
mov
sbb
mov
jl
add
rorl
popf
shl
fadd
jne
add
nop
loope
repz
movsb
mov
bound
xor
adc
andl
pop
cmp
adc
mov
add
mov
sub
xor
jmp
bound
imulb
jg
sbb
dec
fsubl
inc
mov
lods
jecxz
add
add
into
xor
pop
mov
test
pop
jg
aaa
outsb
in
jnp
psraw
mov
push
cmpsl
pop
push
mov
sub
stos
mov
lds
aad
loop
xor
push
fcmovu
push
addr16
or
outsb
jno
ret
sub
jmp
jl
dec
sub
jo
gs
aas
push
and
pop
add
outsb
inc
cmp
mov
or
scas
lock
cli
test
and
push
mov
sbb
cmp
aam
jnp
mov
lds
xor
mov
xorb
mov
cmpsl
mov
cmp
clc
sbb
cmp
adc
iret
pop
subl
ja
loopne
call
iret
cli
fbstp
pusha
mov
sbb
xchg
lcall
and
mov
cmc
jg
push
ja
add
shlb
scas
sub
cmp
and
push
fcomi
cmp
mov
pop
pop
ret
and
xchg
stc
cmp
mov
shll
andl
lahf
xchg
imul
pushf
add
dec
mov
sbb
xchg
sbb
ret
dec
mov
sbb
ja
add
stos
mov
sti
cmpsb
cmp
movsb
movsb
push
lods
test
ror
mov
jbe
je
das
push
addr16
mov
shlb
jp
rcrb
adc
mov
shr
mov
pop
data16
add
scas
and
push
test
mov
sub
adc
cld
inc
divps
fstpt
jns
pusha
testb
push
cli
xor
dec
mov
xchg
push
out
out
dec
hlt
xor
insb
push
fsts
pusha
lea
push
movsb
lret
or
andb
adcb
jecxz
jecxz
sbb
insl
dec
or
jbe
mov
inc
and
fstl
mov
pop
lret
loopne
mov
cmpsl
jecxz
fidivs
and
xor
or
mov
sbb
jne
pushf
push
out
addr16
and
add
fsubrs
push
push
inc
mov
ror
xor
inc
xchg
jge
push
iret
add
add
dec
push
sub
push
addr16
cmp
outsl
or
jae
aas
scas
xchg
xchg
push
shl
mov
mov
jmp
sbb
test
or
mov
xor
pop
push
inc
adc
jle
push
dec
hlt
lcall
pop
insl
les
lahf
cmp
rcll
popf
jl
dec
sub
stc
sub
js
jae
cmc
fwait
xchg
mov
nop
js
jbe
cmp
cmp
cmc
inc
inc
ja
sub
push
mov
paddq
in
rcrb
dec
push
push
fidivs
loope
jo
test
dec
movsl
jecxz
xchg
rcrl
mov
loope
xchg
add
scas
cwtl
fistpl
enter
adc
cmp
les
sub
lea
jge
pop
xor
inc
mov
movsb
mov
ja
jno
dec
jne
mov
mov
sbb
xor
pushf
push
negb
or
xchg
ds
cvtdq2ps
rep
dec
data16
idiv
xor
arpl
icebp
insl
stos
jnp
test
push
inc
loope
xor
pop
sbb
jge
ds
add
xchg
push
pminsw
addr16
dec
add
imul
push
sarl
add
jmp
add
cmpsb
push
call
pop
push
popf
fwait
fs
cmp
movsl
cli
rcrb
out
xor
movsl
hlt
in
jg
pop
movsl
sub
xlat
mov
xorl
int
out
pop
das
jo
mov
pop
sbb
inc
inc
sbb
sub
aad
loop
mov
dec
xchg
pop
or
and
jns
loop
add
or
cmp
stos
sub
sbb
pop
mov
out
mov
shlb
fstpt
dec
mov
nop
xor
imul
mov
ret
add
xlat
lods
and
insb
imul
mov
insl
push
in
test
fs
ja
ret
push
xchg
imul
pop
js
pop
in
clc
lret
shrl
sub
sti
sub
and
cvtps2pi
mov
cmp
cld
cmp
and
adc
add
sub
push
stc
cmc
lds
pusha
mov
fcoml
xor
pusha
mov
es
cli
sbb
ret
xor
push
sbb
xchg
xchg
xchg
mov
movsb
pusha
fsts
cwtl
fimull
inc
data16
std
push
lret
dec
daa
out
adc
stos
xchg
sarb
cltd
frstor
sub
jo
mov
popa
lret
rcl
mov
jle
jmp
cmpsb
out
add
jb
pop
iret
push
daa
pop
imulb
dec
mov
repz
mov
sbb
sub
mov
mov
and
loop
add
addb
or
push
push
xchg
sub
mov
inc
pop
and
or
jp
cmp
push
mov
mov
out
xchg
adc
mov
and
xor
xchg
and
and
pop
fadd
pop
imul
mov
mov
test
cmpb
adcl
inc
mov
fstps
lret
adc
in
getsec
jle
fsubs
xor
add
jb
cli
lea
cmpsb
xor
das
pop
test
jo
jae
sub
sbb
sub
xor
sub
sti
ficomps
dec
or
pusha
jecxz
stos
int
pop
jno
mov
cmp
fdivrl
rcr
rcrb
clc
imul
inc
sti
cmp
add
push
pop
mov
testl
fwait
inc
es
stos
ficoml
jl
stos
and
rorl
pop
icebp
push
or
faddp
or
jle
push
daa
sub
inc
mov
xor
add
inc
mov
push
xchg
scas
or
outsb
cmp
fists
mov
xchg
pop
mov
or
fnsave
xchg
cmp
nop
add
jge
in
xchg
in
enter
pop
sub
sbb
scas
and
pop
or
test
je
sbb
xlat
mov
or
mov
sub
movsb
push
jg
mov
adc
lods
jmp
movsb
lods
loope
push
in
push
cs
sub
lahf
jae
xlat
add
inc
mov
cmp
fs
cmc
jae
add
ror
lahf
sub
lahf
nop
adc
ja
mov
sahf
xorl
gs
sub
jns
jge
in
into
push
inc
jmp
mov
mov
cmpsb
add
imul
mov
xor
xchg
inc
cmp
or
mov
lahf
cmpsl
sub
pop
push
pop
pop
int3
hlt
push
leave
xchg
push
cmp
jbe
popa
mov
out
push
dec
xrelease
adc
pop
mov
mov
pop
aam
sti
cmp
inc
in
imul
xor
mov
mov
into
cmpsb
stc
orb
adc
flds
mov
pop
cmp
mov
andb
jb
shll
dec
mov
xor
data16
push
imul
or
shll
int
or
push
in
mov
inc
test
and
mov
and
int3
test
fimull
dec
shlb
mov
cmp
or
imul
adc
stos
or
imul
xor
inc
adc
mull
nop
push
sar
addr16
push
int3
idivl
pop
push
add
adc
into
fmull
jp
iret
inc
mov
cld
std
pop
out
fmul
mov
je
pop
push
xchg
pop
loope
in
push
xor
inc
in
ret
xor
mov
or
sub
and
xor
inc
pop
shlb
mov
and
out
js
aam
aas
xor
adc
bound
inc
and
add
inc
scas
js
cmp
xor
xor
cmp
dec
mov
xchg
or
cmpsb
testb
sti
addl
dec
les
in
xor
lret
dec
daa
push
adc
mov
iret
cmp
lds
jbe
out
ljmp
push
dec
pushf
cmp
xchg
push
je
repz
push
sbb
fildll
dec
push
push
adc
shlb
out
xchg
mov
or
dec
test
imul
and
ljmp
jl
mov
pop
sub
dec
rcrl
mov
adc
or
mov
dec
insb
xor
mov
push
mov
add
sub
outsl
push
es
mov
and
sbb
inc
insb
mov
push
jne
cmp
jmp
mov
cmp
add
and
pop
lock
cmpsl
std
in
insl
or
daa
push
jno
sub
fwait
and
xlat
sub
sub
mov
dec
cltd
faddl
stc
push
es
call
cmp
adc
inc
gs
sbb
jns
jno
mov
adc
and
fwait
jg
rcl
call
cltd
stos
jnp
in
mov
hlt
loopne
dec
mov
orl
cwtl
lods
push
scas
push
in
addl
mov
scas
mov
mov
jge
xor
arpl
outsl
lods
xlat
xchg
pop
loop
jae
push
adc
jbe
ds
movsb
mov
popf
ss
inc
or
ja
sub
or
in
insb
sub
xor
test
pop
inc
xor
add
mov
jno
aam
inc
arpl
xor
mov
out
sub
call
aam
lret
mov
push
push
mov
pop
or
mov
jle
or
mov
pop
out
jae
cmp
aad
or
test
aad
push
inc
and
ja
cmp
and
shr
mov
out
pop
xchg
push
mov
imul
jle
fldt
mov
rcl
bound
in
cmp
movsb
adc
cmpsb
int3
mov
lock
lock
lds
ja
inc
dec
sbb
std
mov
adc
mov
leave
mov
xchg
shr
sub
sti
mov
jmp
dec
int3
cmp
andb
test
xchg
push
mov
fstps
es
mov
xor
sub
mov
push
cmp
ja
imul
insl
rolb
mov
and
insl
mov
pop
mov
scas
inc
cli
std
int
shrb
movb
jbe
repz
xchg
popa
cmc
loope
mov
xchg
adc
jnp
mov
push
adcb
popa
sub
aad
jo
adc
daa
or
out
clc
xor
sbb
cmpsl
cs
add
sub
sbb
dec
f2xm1
shrb
iret
inc
pop
je
sub
jb
das
iret
inc
inc
das
cmc
rol
outsl
shl
sbb
sbb
push
scas
pop
fsubr
test
rorl
add
xlat
xor
sahf
fst
push
test
aaa
stos
movsb
or
shl
push
mov
push
push
xchg
fstps
inc
repnz
push
cmpsb
add
sbb
repz
fldl
into
nop
xchg
sbb
es
iret
gs
mov
fs
jb
movsl
dec
pop
mov
popf
mov
push
in
aas
cmp
push
lahf
xchg
inc
sbb
hlt
out
fists
and
mov
cmp
dec
leave
sub
leave
push
inc
leave
jmp
sub
inc
imul
and
xchg
aam
hlt
push
inc
mov
aas
ret
inc
adc
pop
gs
jle
push
orl
dec
sti
repz
imul
sub
push
out
stos
or
xor
popf
jae
fisttpll
sahf
mov
movsb
and
inc
pop
add
popa
adc
mov
jb
clc
repz
mov
paddsb
frstor
xorl
cmpsb
cltd
cmp
stos
push
cmp
jl
notl
cmp
and
mov
jne
cmp
mov
mov
mov
inc
int
nop
push
mov
das
loop
xor
out
lods
out
imul
in
sbb
mul
scas
stos
loopne
mov
scas
jp
sbb
sub
add
pop
and
or
add
add
test
sub
lcall
mov
cli
mov
dec
add
pop
mov
jmp
inc
sub
iret
fdivrs
mov
mov
cltd
je
push
loop
aas
insb
aaa
es
and
movsl
sub
mov
mov
sar
dec
lea
shrb
xor
adc
cltd
or
cltd
das
mov
lock
test
out
xor
pop
xor
into
insb
mov
stos
mov
xor
cmp
and
mov
jb
inc
xchg
push
movsb
call
arpl
test
xchg
pop
adc
mov
pushf
iret
imul
fs
shll
call
mov
cmp
inc
stos
mov
add
jmp
pop
cmp
loope
jne
into
adc
fcomps
xor
adc
lods
cmp
daa
sub
sarb
dec
fiaddl
inc
adc
cli
push
outsb
rcll
xor
testl
cmp
cld
fdivs
gs
insl
fdivl
mov
adc
jno
lds
xchg
dec
arpl
adc
cltd
std
push
jne
mov
jbe
dec
into
mov
ret
xchg
add
into
dec
test
adc
rdpmc
mov
popl
jecxz
insb
and
dec
add
xor
and
sbb
xchg
inc
inc
xchg
mov
fidivrs
and
gs
jo
cltd
push
shll
outsl
imul
mov
add
enter
cmp
es
sbb
lcall
outsb
xor
jno
mov
cld
aad
fwait
dec
dec
hlt
icebp
inc
sbbb
inc
push
ret
inc
ds
das
out
loop
mov
mov
rcr
lods
mov
jno
sub
mov
bound
mov
add
sbb
lds
jecxz
clc
and
insl
icebp
test
fcompl
cmpl
push
jbe
hlt
mov
movsb
aas
cmp
jmp
cmpb
or
jmp
push
repz
xor
add
pop
pop
lret
das
rolb
imul
cltd
pop
frstor
mov
and
mov
push
pop
fwait
subb
cs
outsb
fisttps
xor
mov
mov
stc
gs
fists
mov
sbb
lock
je
or
fsub
or
sbb
loop
fistpll
dec
mov
fsubs
jno
and
mov
cli
movl
jecxz
xchg
stos
xchg
add
or
or
xchg
and
sub
loope
dec
xchg
ret
xchg
xlat
cmpsl
lea
mov
cltd
and
mov
sub
nop
lods
dec
inc
push
mov
and
sub
sbb
cmp
xor
inc
outsb
loopne
repnz
sbb
lods
jge
pusha
xchg
or
jp
jge
xor
int3
test
dec
xchg
xor
or
rol
aas
arpl
jmp
sub
not
or
mov
push
aaa
lret
popa
xlat
adc
jmp
xchg
cmp
xlat
jl
pushf
mov
movsb
jg
add
fidivrl
mov
add
sbb
int3
mov
mov
ret
jbe
inc
imul
inc
cmp
mov
or
lcall
jmp
inc
das
ds
sub
fsubrs
mov
andb
rol
mov
fld
out
cmp
mov
jne
fcmovnbe
mov
fs
push
aam
xor
das
cmc
stos
push
push
aad
mov
outsb
fldt
mov
push
and
push
nop
icebp
and
add
inc
pop
xor
adcb
sub
jmp
push
cs
sbb
add
movsl
xor
jnp
or
sub
inc
mov
stos
sub
rcl
push
xor
pop
pop
jl
icebp
lcall
adc
pop
rcrb
adc
push
add
xor
hlt
and
repz
enter
mov
fsubrl
add
scas
les
sub
sbb
cmpsl
in
inc
inc
mov
fldcw
lahf
call
adc
in
push
call
push
pushf
in
or
push
push
mov
push
daa
adc
cmp
mov
dec
mov
add
or
xor
ret
popl
adc
and
test
test
mov
fsts
mov
and
pop
adc
jp
out
cmp
mov
aad
loop
addr16
repnz
xor
imul
shll
add
dec
ret
mov
test
icebp
mov
nop
das
popf
or
adcb
and
mov
fstl
push
sbb
push
mov
imul
ret
ljmp
fs
nop
test
nop
sysexit
adc
fs
ljmp
adc
mov
js
sti
inc
or
outsb
loop
mov
int3
jbe
pop
inc
cmp
out
xchg
lods
lods
pop
inc
inc
mov
pushfw
das
jo
fwait
cmpsl
sbb
testl
shll
push
and
mov
jbe
inc
call
fsubl
pop
fiaddl
pop
jecxz
fcoml
insl
mov
mov
outsb
adc
mov
dec
das
js
incb
movsb
xor
shrb
jne
and
es
jmp
clc
dec
cli
sub
xchg
sti
stc
xchg
scas
lea
push
push
sbb
icebp
roll
subl
xchg
das
lds
xor
cmp
push
sub
xor
jne
aas
mov
cpuid
xchg
pop
sbbl
cli
push
cmp
mov
loopne
ret
sahf
mov
jae
sub
mov
dec
inc
xor
ja
add
sub
lds
sbb
cmp
in
inc
xorl
adc
daa
incl
sub
rcll
and
push
fcoml
cltd
rcll
out
mov
jne
mov
loope
fsts
cs
repz
imul
mov
or
test
movsb
idiv
sbb
mov
sub
insl
icebp
adc
and
or
pop
push
or
lcall
push
popa
or
cmp
xorl
and
xchg
imul
ret
aad
mov
mov
mov
addr16
loop
mov
vminss
jge
xchg
xor
icebp
imul
aad
add
bound
adc
imul
imul
lcall
clc
mov
sbb
enter
lret
lea
and
jbe
or
aad
popa
push
shlb
mov
cmp
pop
pop
lea
aaa
mov
mov
sub
andl
dec
into
push
push
inc
and
push
test
in
pop
cld
inc
pushf
popfw
addr16
out
insb
or
sti
negb
jno
jle
lock
jno
xlat
insl
cli
cltd
adc
ret
cmp
popf
jnp
or
mov
dec
vmwrite
or
lret
sub
mov
jne
add
lods
jecxz
inc
sti
out
imul
mulb
shr
cmp
adc
sarl
push
daa
imul
pop
mov
lock
pop
inc
jl
rcl
cmpsb
imul
sub
sub
sub
dec
inc
enter
pop
in
jbe
jp
xchg
setae
ja
inc
sbb
cmp
xor
in
inc
pushf
xchg
mov
pop
xchg
sbb
in
cmpsb
sub
sub
pop
aad
js
inc
xchg
mov
mov
sub
pusha
cmpsl
jle
fwait
xor
insb
aad
pop
ficoml
push
pop
ss
pop
or
ret
adc
pop
jle
jmp
xchg
movsl
xchg
imul
lret
push
adc
cmpsb
hlt
mov
in
mov
cltd
mov
mov
addl
push
ret
jg
push
mov
ret
dec
out
bound
fs
pop
push
inc
mov
popf
mov
pop
test
jg
scas
daa
fstl
inc
jno
push
jge
pushf
push
jbe
adc
das
add
mov
sahf
push
cmpsl
lock
jl
mov
and
loop
xchg
mull
or
nop
test
sbb
fwait
mov
cmp
mov
imul
mov
pop
dec
imull
mov
push
scas
out
movsl
sar
xor
stc
out
xlat
sbb
push
frstor
add
dec
xor
pop
rolb
aas
fwait
and
add
cmp
and
dec
xor
arpl
inc
in
jbe
xor
fst
dec
jmp
les
lods
fdivrl
mov
jl
lcall
mov
inc
xlat
push
lret
sbb
push
cmp
lods
fidivl
xchg
mulb
push
mov
popf
sub
xor
jae
sbb
out
xor
sub
jnp
inc
mov
sti
cltd
adc
dec
rcrb
xchg
pusha
sbb
dec
imulb
andl
push
push
popf
rcrb
and
call
pop
aaa
ja
mov
gs
or
stos
xchg
adc
out
pop
scas
mov
pop
push
pop
fstpt
and
inc
add
xor
and
fwait
inc
ficoms
into
and
test
test
out
ss
test
cmp
aaa
mov
dec
hlt
lock
xlat
fstp
cltd
mov
fbstp
sub
push
mov
sub
adc
mov
out
xor
dec
and
orl
mov
daa
clc
and
int3
in
pop
mov
mov
fisttpll
dec
mov
cmc
or
imul
push
adcl
test
shlw
sbb
ss
fwait
jno
sub
mov
out
cmpsb
icebp
dec
add
or
xchg
adc
into
sbb
imul
cld
es
inc
out
sbb
mov
out
incl
add
daa
xor
and
bound
xor
xchg
test
mov
je
push
pop
mov
add
popa
dec
orl
mov
and
and
cs
inc
and
cld
stos
xor
and
xchg
fildl
rcrb
sbb
mov
js
cld
sti
sub
and
or
nop
and
pop
fwait
mov
int3
rorl
das
pusha
fwait
jbe
lret
ja
ljmp
or
imul
jle,pt
call
adcb
sub
mov
push
pop
pop
mov
icebp
into
cli
adc
jnp
roll
outsb
ljmp
js
cld
fsubr
aam
out
mov
leave
movsl
mov
jl
jbe
fstpl
enter
mov
test
ret
jmp
mov
and
call
mov
test
fidivs
mov
out
repnz
orl
mov
js
jp
jl
cltd
std
xchg
jb
and
pop
outsl
leave
mov
or
mov
add
mov
add
fsubrs
jg
lahf
adc
ret
dec
sahf
pop
cmc
dec
das
pop
stc
lods
mov
sub
aas
push
push
icebp
rcrb
int3
lret
add
jae
pop
pop
mov
adc
sbb
rcrl
mov
in
movsl
popf
out
mov
push
js
fldenv
ja
fcoms
ja
bound
lds
test
mov
and
push
sti
and
or
stos
sbb
popl
push
jae
andl
insb
rol
push
mov
rcll
dec
inc
xchg
mov
ret
mov
mov
add
and
lock
imul
ror
fistpl
mov
adc
push
sarl
and
lahf
rcrb
int
push
ds
or
dec
repz
insb
mov
add
or
or
inc
xor
stos
popf
mov
sub
repz
or
sub
jp
inc
pop
pop
adc
lcall
stos
aam
push
dec
test
push
cmpps
xor
out
orl
out
outsb
adc
aaa
inc
aam
jo
enter
arpl
sti
xor
xchg
add
sbb
arpl
mov
xchg
push
push
mov
mov
mov
jnp
push
rcll
xor
in
or
clc
stc
les
scas
lahf
adcl
dec
jne
mov
xchg
leave
clc
push
aad
or
push
leave
mov
inc
pop
sub
dec
lcall
mov
xchg
stos
mov
outsl
mov
sbb
iret
sub
jno
pop
cwtl
call
cli
test
cmp
sbb
dec
fbld
pop
fs
dec
ljmp
cmpb
sub
inc
cmpsb
lea
mov
inc
sub
adc
popa
cmp
ss
imul
cltd
add
sub
addb
dec
stos
jb
fldenv
imul
lret
xor
add
or
add
mov
cmp
or
pop
sahf
dec
mov
push
dec
inc
jle
mov
mov
xchg
decb
bound
jae
std
jmp
mov
rcrb
aam
adc
sub
pop
stos
lods
mov
es
cs
sub
add
in
enter
cmp
xchg
cmpsb
test
mov
stos
aam
mov
sbb
mov
cmpsl
pop
or
jp
scas
cltd
movsb
lcall
clc
les
xchg
jb
push
dec
and
hlt
dec
mov
fsub
mov
je
das
xchg
sbb
and
cld
loope
cmpsl
pop
jp
pop
cs
ret
mov
xchg
movsb
jns
out
repnz
inc
cmpsb
in
push
and
mov
dec
cli
lock
and
stos
adc
cmp
out
jl
fwait
lcall
rclb
dec
sub
xchg
or
movsb
mov
idivb
cli
lods
xchg
or
or
mov
inc
inc
inc
inc
sub
xchg
push
dec
sahf
jg
lods
cmpb
gs
xchg
xor
lcall
push
sti
mov
mov
xchg
xor
xchg
cld
mov
stos
repnz
add
cmp
inc
sbb
sbb
lods
in
movsl
in
ret
cmp
or
pop
insb
lret
gs
mov
dec
xchg
shl
push
mull
sbb
repz
mov
or
test
stc
rcrb
jo
inc
mov
into
add
add
pop
push
add
fistpl
mov
mov
pop
dec
mov
jmp
stos
xor
jns
lds
push
sub
add
arpl
and
in
jmp
and
test
addr16
xchg
sub
daa
jne
mov
iret
dec
sub
mov
mov
and
inc
mov
ror
fwait
push
lock
je
dec
or
dec
push
mov
adc
out
add
addb
movsb
dec
sub
and
cld
dec
insl
imul
movups
pushf
adc
mov
loope
shll
adc
scas
orl
jge
sbb
out
out
lahf
or
cmp
push
mov
cmp
mov
pop
push
pop
hlt
sub
iret
cmp
adc
ss
iret
sub
or
aaa
int3
dec
and
push
in
jbe
inc
iret
out
lods
cmpsl
ja
insl
sahf
ljmp
add
mov
ficompl
dec
sbb
push
push
sbbl
inc
movsb
sbb
mov
ret
sbb
aas
inc
hlt
rcr
push
push
adc
pop
jnp
sbb
movsl
push
mov
loope
pop
cmpsb
ficomps
cmc
inc
repz
lcall
xlat
or
xchg
into
cmc
jecxz
test
and
sub
in
mov
push
dec
push
sti
fwait
adc
fcomps
dec
pop
mov
dec
push
jg
mov
pop
mov
sub
lahf
fsubl
fcompl
popf
mov
ret
movsb
sub
mov
aas
mov
fmull
dec
pop
or
mov
sub
daa
jle
inc
sbb
cld
jnp
dec
push
mov
jbe
jno
lahf
push
jg
cli
xor
in
ret
mov
cmc
pop
hlt
test
out
fwait
push
mov
mov
lock
xlat
pop
mov
js
or
in
xor
lods
out
addl
mov
mov
xchg
pusha
push
dec
mov
xchg
mov
subb
pop
adc
pop
cmp
dec
xor
sub
mov
mov
call
lods
out
mov
out
in
mov
ss
mov
lods
xor
mov
jl
pusha
pop
loop
cmpsl
and
fmulp
xor
lcall
repz
cmpsl
or
mov
pop
ds
movsb
add
xchg
js
xorb
push
fucomi
push
sarl
xchg
add
mov
lahf
push
pop
adc
push
add
mov
or
dec
push
repz
sub
call
lret
adc
divb
es
sahf
es
cli
jne
into
in
push
leavew
fimull
js
aas
repz
stos
xor
inc
adc
mov
jns
fistps
insb
daa
ja
inc
push
or
xchg
pop
mov
arpl
imul
lahf
aaa
out
int
push
pop
add
push
ror
mov
and
lock
xor
cli
or
lahf
iret
jle
lock
dec
out
rcll
or
adc
loop
testb
mov
in
cli
nop
imulb
sti
sahf
gs
push
cmpsb
push
decb
imul
pop
adc
inc
and
jp
and
sbb
cs
lret
cmpb
jb
pop
pop
sbb
fisubl
ret
jg
repnz
mov
sahf
in
ja
cwtl
out
mov
cmp
mov
ret
mov
inc
sbb
pop
inc
into
and
int
and
push
push
add
push
testb
pop
xchg
jg
cmpsl
leave
or
dec
cltd
insb
cs
pop
cmp
push
sub
mov
sub
push
faddp
jmp
pop
cmp
and
dec
cltd
mov
push
push
mov
add
mov
popa
or
jne
cmp
je
into
xor
inc
inc
dec
shl
jg
dec
nop
dec
mov
mov
cltd
aad
pop
cltd
jp
icebp
dec
pop
aaa
sti
sub
shr
adc
sub
lret
sbb
out
gs
xchg
xchg
mov
xchg
mov
jbe
fdivrs
dec
ja
fistps
add
mov
push
sbb
repz
xor
sub
cmp
shlb
cmp
inc
jae
test
dec
cmp
mov
cmpsb
dec
push
stos
stos
jnp
dec
mov
scas
bound
and
sbb
lret
lret
add
out
addr16
sbb
cmp
jns
add
ret
pop
adc
popa
js
sub
mov
aam
mov
or
xchg
add
sub
sub
push
fidivrl
sub
hlt
int
int
mov
insb
fwait
subl
jl
or
mov
sbb
and
ret
sub
das
jmp
mov
adc
mov
movsl
push
pop
push
out
sub
mov
popl
mov
mov
fidivs
pop
mov
out
scas
xchg
popf
push
lcall
mov
mov
in
pop
xor
inc
adcb
dec
mov
lds
sub
fstpt
lds
mov
adc
cmp
rorl
pop
mov
mov
jb
add
daa
xor
mov
jo
ss
xchg
and
jb
add
push
popf
jmp
imul
add
in
jecxz
and
shlb
mov
clc
add
pop
aas
dec
xchg
sbb
push
mov
aaa
orb
repz
js
dec
xor
cmp
add
xchg
daa
sbb
lock
sub
push
cli
adc
rorb
hlt
mov
fiadds
mov
inc
and
loope
push
and
ja
dec
sarl
and
sbbl
mov
js
cmp
nop
xchg
cmp
sbb
fsubrp
aam
imul
gs
add
mov
jne
arpl
push
ds
sahf
lret
dec
dec
jno
push
stos
mov
push
push
pop
sub
insl
mov
pop
jns
enter
xor
jne
repz
repz
jmp
insl
push
imul
bound
and
or
sti
ljmp
addl
outsb
xchg
out
xchg
sub
or
jae
fs
cs
lcall
jae
fldcw
movsb
es
lea
jbe
rorl
or
jbe
ret
cs
or
xchg
xchg
xor
jg
test
sub
imulb
push
jecxz
test
inc
push
shrb
dec
fsubr
jmp
les
js
add
aad
movsl
into
loope
sbb
test
or
dec
bound
pop
jbe
pop
jge
les
mov
jmp
jle
addr16
fs
adc
clc
out
fstpt
push
in
push
push
lea
dec
dec
add
adc
pop
std
add
jp
or
cmp
adc
ja
mov
out
xchg
out
fildl
pop
sbb
std
jecxz
shrb
mov
mov
lds
lahf
out
rcll
out
lods
pop
mov
int
and
cwtl
mov
lock
movsb
add
jp
adc
faddp
arpl
daa
add
inc
out
rcrb
sub
test
push
pop
inc
push
xchg
test
pmulhuw
or
lods
cwtl
imul
leave
sbb
or
inc
mov
rcrb
inc
in
mov
xorl
mov
mov
add
adc
add
sub
inc
sbb
ret
mov
icebp
sarb
push
lret
jle
aas
mov
lods
rcrb
fidivs
dec
cmc
push
sti
jmp
jecxz
mov
or
jle
imulb
stos
stos
cmc
pop
mov
dec
xor
xchg
in
adc
push
cltd
int3
pushf
cmp
sub
cmp
gs
mov
dec
in
inc
rol
cmp
int3
dec
jge
push
icebp
and
or
iret
sbb
or
aad
push
inc
leave
inc
clc
mov
scas
cli
loopne
push
sub
es
cmp
adc
xchg
test
sub
fs
adc
xchg
xchg
les
jo
pop
push
filds
ds
nop
pop
mov
jae
and
xor
cmp
inc
dec
in
idivl
dec
mov
pop
lret
daa
outsl
jb
xor
nop
adc
sbb
stos
hlt
pop
mov
shll
mov
dec
push
mov
sbb
sti
rorl
jg
mov
cld
and
adc
push
or
xchg
mov
jle
dec
cli
cmpsb
enter
add
mov
xor
mov
std
pop
cld
leave
jp
jecxz
faddl
cwtl
push
pop
nop
addr16
sub
adc
sbb
or
les
sub
fmuls
dec
out
sbb
inc
js
arpl
pop
arpl
or
popa
pop
pop
cmp
add
pop
add
gs
movsb
jge
xor
cmp
adc
pusha
mov
cmp
pop
pop
loopne
cmc
loope
sbb
add
add
sti
aam
pop
js
inc
ljmp
lods
in
clc
xchg
sysret
add
xchg
jae
scas
jge
orl
xchg
push
ja
and
bound
sbb
xchg
or
dec
push
jnp
scas
call
mov
fistpl
imul
lahf
pop
mov
pop
scas
int
dec
lgs
push
xor
dec
inc
cmpsb
mov
inc
aas
add
cmc
and
add
sahf
aad
ds
std
jne
pop
push
imull
jns
inc
loop
loopne
in
jle
pop
pop
mov
dec
jnp
in
mov
mov
and
jo
adc
fsubp
lret
xchg
stos
adc
push
mov
ret
or
int3
adc
dec
mov
adc
shrl
mov
stos
and
cmpb
xor
push
adc
xor
icebp
in
adc
xchg
into
cld
add
jmp
mov
andl
insl
add
or
lret
cwtl
lods
jg
or
inc
loopne
out
cmp
pop
pushl
jno
gs
cltd
jp
movsb
movsb
mov
loope
push
movzbl
pop
mov
andb
adc
insb
ja
test
movsl
mov
shll
jo
out
xor
dec
sbb
test
test
pop
pop
cmp
lods
lods
loope
dec
addr16
dec
call
bnd
inc
pop
xchg
dec
jae
push
pop
jmp
mov
rorl
iret
divb
lods
test
addl
xor
pop
pop
or
or
dec
sbb
jbe
pop
lea
ss
test
mov
mov
frstor
loope
jmp
jle
ficoml
mov
std
ljmp
jo
xor
bound
mov
sbb
clc
sbb
inc
add
cli
leave
mov
cmp
fadd
inc
loope
mov
mov
stos
ret
cmp
xchg
divb
mov
hlt
incb
mov
xchg
rol
jno
jecxz
inc
sub
dec
and
jno
ja
mov
add
xor
sahf
loope
cmpsb
jmp
loop
or
les
adc
ja
shlb
das
bound
mov
push
xchg
out
sbb
push
lcall
jo
lret
jne
test
and
xchg
xor
or
inc
rolb
inc
fisttps
cmp
jmp
mov
clc
pusha
xchg
ds
or
jae
sbb
xchg
mov
or
adc
dec
out
lret
pop
ret
leave
pop
aad
dec
add
lcall
jbe
jp
addr16
mov
or
cltd
aas
mov
push
or
shll
mov
fbld
in
and
scas
xchg
pushf
mov
ret
cmp
mov
cmp
sub
cmpsb
pop
dec
xchg
lock
pop
jns
jl
js
jge
test
pusha
or
ljmp
in
scas
dec
push
popf
cmp
andb
dec
push
push
inc
lods
push
orb
inc
mov
call
std
out
dec
shll
int3
and
dec
sub
pushf
cmpsb
lahf
push
das
nop
out
mov
popf
fxch
jge
mov
cmpsl
push
xor
out
jnp
add
pop
fwait
setle
cltd
push
adc
pop
and
pop
lret
sti
repz
test
mov
scas
mov
fisttps
nop
in
mov
je
paddsw
cld
inc
fcomi
in
push
leave
pop
loope
insb
inc
cmp
mov
movsb
lret
sbb
mov
leave
xor
xor
jle
xchg
daa
jb
xor
mov
xlat
push
add
jo
lds
gs
xor
add
push
loop
mov
sti
pop
js
pop
xlat
cs
movsb
sub
mov
es
test
and
and
in
mov
pop
lcall
int
jecxz
sbb
jmp
jnp
mov
jnp
xor
mov
ret
inc
mov
cwtl
scas
repnz
cmp
aam
xchg
repz
movsb
inc
bound
repz
bound
push
jge
or
negb
mov
push
rcrl
fsubrs
das
push
and
std
fwait
aam
aad
xchg
inc
or
imul
xor
pop
xor
fs
dec
mov
xor
mov
popl
or
and
push
mov
push
jecxz
ret
aaa
inc
mov
mov
stc
inc
int
out
add
mov
leave
cmp
sbb
sbb
lods
xlat
cmp
pushf
mov
jmp
inc
iret
lret
jp
or
cmp
and
call
mov
sub
clc
jae
jle
popa
cld
mov
cmp
mov
sbb
xor
cmp
mov
je
sbb
jmp
iret
jb
repnz
push
into
push
in
mov
outsl
shr
das
test
orb
mov
cmpsb
enter
inc
rcr
and
std
pop
in
inc
bound
add
xchg
ss
xchg
rclb
mov
adc
lds
clc
mov
xchg
imul
fcmovbe
cmp
clc
add
sarl
add
les
dec
add
push
stos
mov
icebp
mov
and
aam
mov
lods
mov
sbb
nop
mov
sbb
cmpsb
jbe
add
jns
mov
sub
rcrb
or
and
add
jb
in
mov
jmp
std
sub
pop
rorb
inc
testl
mov
push
add
cld
stos
adc
inc
add
outsb
or
jns
xchg
mov
dec
dec
jl
push
jge
dec
pop
adc
daa
pop
call
out
pop
inc
jecxz
push
sbb
push
in
divb
pop
loop
js
test
arpl
aad
sbbl
std
sbb
sbb
nop
stos
es
xor
aaa
rcll
push
insb
pop
xlat
mov
mov
dec
dec
inc
repz
jns
fnsave
jbe
xor
xchg
mov
in
test
dec
adc
mov
cmp
xor
lret
out
jne
popa
out
idivl
cmpsl
out
mov
shlb
mov
lret
and
mov
int3
push
icebp
xchg
test
repnz
mov
cmpsb
scas
loope
mov
push
sub
push
pusha
js
add
inc
xchg
mov
ja
dec
into
loopne
jo
inc
mov
push
hlt
hlt
loop
stos
jbe
in
push
xchg
orb
stc
inc
inc
add
lahf
hlt
inc
aad
leave
lcall
lods
mov
in
cld
pop
cmp
pop
mov
jb
inc
inc
sahf
xor
jb
xor
xor
sarl
addb
inc
adc
and
pop
in
xor
popf
jo
mov
das
das
sub
xchg
arpl
dec
mov
jg
scas
push
divl
test
test
inc
jge
dec
dec
or
cs
cmp
shl
jp
cmpsb
lea
cmpsb
xchg
jns
add
ja
test
xchg
pop
lds
stos
sub
pop
pop
test
mov
lcall
iret
mov
xor
imul
sub
addr16
repnz
or
imul
insb
pop
int
dec
sub
cmpsl
adc
cmpsl
xchg
pop
stos
dec
mov
arpl
adc
movsb
sub
sub
inc
or
call
cmp
js
jnp
inc
cmp
inc
ljmp
inc
sarb
push
jns
lcall
mov
lahf
es
mov
jo
xchg
lds
dec
test
enter
ret
pop
stos
mov
repz
add
cmp
jbe
pop
pop
adc
and
fsubl
pop
jle
mov
test
sub
push
cld
call
inc
nop
daa
push
lods
sbb
sbb
sub
adc
dec
push
fwait
aad
push
push
dec
adc
mov
adc
dec
mov
mov
mov
stmxcsr
sub
orl
lahf
lods
lret
inc
dec
cmp
jle
pop
fwait
out
inc
cmp
out
js
mov
inc
in
ret
fcoms
mov
add
sub
int
push
jl
in
jnp
aaa
bound
aas
jbe
mov
mov
cmp
cli
cld
mov
ret
aad
cmpsl
pop
push
and
subl
xlat
jbe
xchg
dec
jbe
adc
shr
mov
fstpt
dec
shrl
pop
xchg
and
rcrl
xchg
xchg
les
imul
nop
dec
nop
mov
sub
shrb
sub
mov
ret
cmp
test
mov
int3
jecxz
sbb
push
sbb
dec
mov
mov
inc
lock
mov
mov
mov
aaa
leave
push
outsl
mov
mov
pop
and
mov
daa
iret
cmpb
pop
jg
je
push
xchg
popf
xchg
adc
fistpl
roll
sub
das
lcall
mov
push
or
mov
mov
sbb
sbbb
shld
inc
pushf
stc
cld
cmp
adc
cmp
push
into
lods
shll
dec
jg
mov
jnp
xchg
pusha
repnz
ss
roll
add
scas
cmp
loopne
scas
into
sub
pusha
adc
mov
adc
hlt
mov
rcrl
inc
sub
mov
dec
fmul
sub
push
pop
mov
stc
push
test
sub
daa
mov
ret
ljmp
push
mov
cmp
pop
dec
mov
nop
or
xor
cmp
call
enter
pusha
repz
mov
add
hlt
or
les
imul
es
gs
popl
popa
mov
inc
cmp
inc
dec
mov
sbb
jb
fcompl
cld
xor
jne
mov
and
inc
ja
push
shr
add
ljmp
roll
int3
aaa
mov
loopne
inc
aam
sahf
out
sbb
hlt
mov
xchg
adc
sub
or
fidivrs
adc
cltd
loopne
mov
notl
cmp
mov
xchg
aad
fcomp
push
fdivr
jle
cld
mov
aam
jl
xchg
loop
out
sbb
lods
sbb
mov
lret
mov
outsb
mov
lock
sahf
cs
sub
stos
and
ret
fwait
insb
std
or
jne
adc
mov
out
jp
adc
icebp
ja
cmc
or
xchg
sbb
test
or
pop
mov
xchg
out
dec
xor
adcb
mov
mov
dec
testl
icebp
adc
jne
mov
nop
lods
js
mov
adcb
xor
mov
in
xor
xor
movsl
aas
xchg
and
push
mov
lea
jp
mov
cmp
inc
scas
nop
in
xchg
fs
outsl
sbb
sti
ljmp
xor
rclb
or
lods
fldl
mov
data16
dec
ljmp
xchg
data16
into
sbb
and
mov
mov
mov
and
repnz
aad
insb
pusha
leave
xchg
ljmp
out
sbb
xor
dec
imul
popa
adc
call
incl
mov
aas
imul
sub
pop
mov
aam
sahf
mov
add
xor
je
sbb
or
cmpsl
cs
xchg
movsl
or
fldcw
jl
bound
pop
mov
inc
arpl
push
cmp
fisubs
inc
addr16
xchg
inc
daa
pop
or
cmp
nop
push
es
adc
jbe
imull
das
mov
clc
incl
xchg
push
xor
xorl
outsl
cwtl
ss
sti
push
rcrl
or
dec
pop
sub
lcall
aad
mov
pop
lret
mov
jnp
ret
xlat
lcall
pushf
in
bnd
cmp
outsb
lds
lods
mov
lret
xchg
mov
add
inc
mov
jbe
popl
adc
mov
add
arpl
inc
mov
add
shr
lcall
stos
dec
dec
jp
mov
cwtl
js
add
push
push
mov
or
fucomi
sub
insl
xchg
imul
insl
pop
mov
xorb
dec
fs
arpl
add
jg
movl
notb
lods
push
dec
call
dec
mov
mov
dec
push
mov
fcmove
add
daa
mov
sbbl
jb
das
cmp
fnstsw
cmp
push
jnp
jo
sbb
aam
mov
mov
popa
jg
inc
arpl
pushf
jmp
sar
jb
and
pushf
cli
dec
pop
jae
repnz
scas
nop
ret
mov
push
les
dec
xchg
sbb
cmp
xor
jbe
popf
sub
push
lods
outsb
jge
in
lret
fbld
aaa
jnp
jmp
ret
in
loope
add
test
in
stc
outsb
aam
push
stc
mov
pop
mov
adc
imulb
gs
hlt
jb
xor
lret
inc
mov
pop
xor
lcall
push
cmpsl
scas
jae
or
mov
mov
dec
loopne
jp
dec
xchg
push
fimull
xor
or
sub
es
out
add
jle
mov
mov
pop
push
test
rolb
dec
mov
add
jno
test
cli
andb
pop
mov
mov
sbb
ret
scas
dec
outsb
and
pushl
mov
fucomip
jge
jmp
out
or
hlt
inc
enter
dec
mov
jo
roll
repz
push
push
js
inc
add
mov
adc
sbb
in
mov
aam
and
int
sub
insb
inc
outsl
jmp
cmp
fiadds
sub
xor
mov
call
lds
sub
xchg
cwtl
xchg
cs
inc
add
cli
sbb
sbb
push
es
sbb
and
in
enter
pop
sbb
mov
popl
mov
iret
cmpsb
adc
pop
inc
and
and
push
fsts
pop
pop
pop
sahf
ds
hlt
cmp
cmp
in
imul
and
xchg
out
jg
sbb
cmp
push
dec
faddp
test
lea
movsb
cld
loope
in
pop
rorb
xchg
xchg
add
dec
nop
scas
or
xor
mov
arpl
mov
mov
out
testb
and
sbb
dec
xor
cmp
sub
dec
and
fcmovu
loopne
cltd
sub
jno
pop
sbb
pop
pop
xchg
movsl
xchg
sbb
sbb
push
lds
xchg
adc
popa
test
ret
xor
pusha
mov
xchg
and
into
jp
jge
scas
daa
imul
adc
cltd
jo
mov
add
arpl
adc
push
cs
push
jmp
jnp
pop
aam
jl
or
dec
mov
xor
mov
inc
je
or
shl
repnz
mov
jns
clc
aas
pop
xchg
mov
xor
cmp
fldcw
fsubs
xchg
rclb
xor
std
mov
sub
dec
dec
and
shrb
adc
xchg
clc
mov
sub
and
push
cmp
mov
cmp
mov
jmp
lods
add
add
stos
mov
insl
cmp
imul
stos
jae
mov
das
lahf
xchg
mov
mov
jnp
pop
mov
clc
jns
hlt
in
cwtl
popf
xchg
fildll
mov
or
or
mov
shrl
mov
lods
mov
imul
add
xchg
push
push
sbb
pusha
js
ja
xchg
sub
dec
sbb
dec
cwtl
sbb
out
xor
mov
xchg
dec
je
les
mov
test
cwtl
in
push
scas
sub
ror
xor
repnz
mov
cwtl
insb
xor
and
jg
xchg
cli
jl
adcb
mov
mov
cld
push
mov
jns
mov
cmp
fstpl
mov
insl
jl
jmp
xchg
test
inc
xor
gs
loopne
sbb
stos
adc
enter
fmull
stos
fidivs
dec
rclb
xchg
imul
outsl
stos
xchg
inc
jb
mov
xchg
jge
rorl
gs
lods
filds
ret
jb
js
inc
ficoml
idivb
notb
ds
and
jb
fwait
sub
mov
enter
sahf
cmp
sbb
mov
push
pop
mov
push
jl
xor
out
mov
jl
mov
das
xor
or
or
imul
and
or
repz
inc
push
and
add
insb
sub
ljmp
in
push
inc
xchg
push
loope
pop
and
and
in
shl
jge
push
mov
fs
xchg
scas
dec
cmp
es
mov
xor
or
aas
sbb
inc
std
fisubl
repnz
sub
mov
into
fistpl
imul
or
jb
xor
pop
das
fistps
es
mov
nop
sbb
out
inc
stc
fidivs
mov
adc
mov
fs
mov
negb
mov
add
mov
cli
mov
cli
rolb
iret
rcll
inc
or
sub
inc
sbb
sub
ja
mov
outsb
mov
jle
sti
pusha
fsubl
mov
int
xlat
mov
es
insl
sarb
fstpl
push
ficompl
into
xchg
xor
pop
addr16
jmp
flds
or
jl
add
sbb
cmp
pusha
jnp
inc
jae
outsb
mov
lods
cmp
adc
dec
fiaddl
ljmp
das
push
enter
pop
add
btr
outsl
push
cwtl
in
das
and
xor
mov
cmp
jno
jg
iret
sahf
pop
dec
ds
in
cmp
mov
adc
mov
jge
flds
les
int
jecxz
sbb
sbb
xorl
pop
mov
and
cmp
test
and
cmp
js
inc
and
sbb
cltd
adc
push
stos
scas
jbe
mov
inc
and
xor
jbe
xlat
cltd
dec
mov
sbb
xchg
rcr
or
mov
ds
out
pop
mov
dec
roll
mov
xor
jo
pop
cld
lods
shlb
test
jne
call
xchg
inc
add
cli
loop
pop
daa
push
loop
enter
insl
or
fimull
sahf
lcall
xchg
loop
mov
test
bound
mov
rorl
aas
jg
add
inc
adc
mov
sub
xor
xor
xchg
lret
pop
sbb
push
cmp
aam
mov
stos
inc
test
push
cmp
in
pop
clc
fxch
mov
push
mov
adc
add
and
fwait
repz
pushf
lahf
add
mov
lret
add
pusha
jnp
ret
xchg
inc
push
xchg
lds
std
mov
imul
mov
sub
push
xchg
adc
mov
test
dec
pusha
rorb
nop
push
mov
stc
jne
xchg
movsb
jnp
push
mov
jl
xor
pop
xchg
pop
in
pop
outsb
jmp
scas
outsl
or
pop
call
insb
jecxz
cmpsl
mov
push
push
cmp
sar
gs
ja
sbbl
movsl
gs
push
sarb
xchg
adc
xchg
xchg
jae
movsl
mov
inc
data16
or
imul
adc
mov
cmp
aad
xchg
dec
lods
scas
ret
in
dec
pop
pop
jns
lret
xchg
popf
cmp
ret
adc
leave
hlt
push
ret
insb
les
ljmp
in
jg
push
fsts
sub
pop
jnp
sub
xor
xor
cmp
xchg
movsb
dec
pop
popf
dec
test
js
add
or
popa
clc
and
mov
mov
sarb
cmpsl
sbb
test
out
scas
out
sub
sub
or
mov
mov
jge
mov
and
ja
add
imul
test
push
jge
lcall
loopne
aad
test
pop
stos
pop
outsb
enter
test
adc
imul
push
and
and
popf
inc
out
and
mov
aam
xchg
sti
mov
or
leave
xor
int
ret
sbb
mov
repz
or
mov
add
insb
out
add
out
mov
dec
cmp
sbb
stos
test
inc
pusha
repz
and
icebp
mov
and
push
popf
or
jmp
cmp
test
repz
jbe
icebp
add
int3
div
xor
insl
gs
cmc
nop
xchg
jo
jmp
insb
shll
fstps
mov
push
and
push
xchg
roll
mov
or
movl
cld
push
sub
scas
sub
aam
inc
movsb
adc
fistl
popf
popa
out
xchg
movsl
inc
inc
lods
sbb
xlat
sbb
ds
callw
pusha
push
or
or
stc
es
mov
jge
aad
int3
enter
das
cmp
lods
sbb
xor
dec
test
cwtl
mov
add
push
xchg
ds
cmpsl
in
push
cmp
mov
jge
jne
cli
js
fsubrl
sbb
dec
or
lahf
or
sub
adc
and
in
and
jle
frstor
and
and
in
pop
mov
xor
or
fwait
mov
aas
pusha
sbb
dec
fmulp
mov
add
mov
lds
addr16
mov
jmp
enter
imull
std
mov
je
cmpsl
or
jecxz
daa
mov
sbb
push
ret
sbb
jg
jl
cmp
pop
fstl
sbb
in
mov
mov
rol
aad
mov
lea
pushf
jne
or
mov
test
popa
fisubrs
fcmovbe
and
or
iret
aam
inc
enter
int3
ret
dec
cmpsl
sbb
cmp
pusha
jnp
dec
mov
andl
and
xchg
out
ds
xchg
sub
add
in
lods
mov
pop
into
xchg
mov
and
xchg
xor
outsb
pusha
jns
sbb
sbb
xchg
lods
adc
repnz
incl
and
push
insl
and
cli
pushf
and
arpl
ds
add
and
arpl
fcoml
mov
mov
adcl
imul
rcll
cmp
add
outsb
jns
rcll
in
call
dec
dec
cmp
nop
jp
and
movsl
jo
icebp
cmp
rcl
pop
lods
adc
jp
and
fistpl
sti
mov
mov
imul
dec
popf
shl
adc
mov
sub
lods
mov
stos
scas
sahf
inc
jns
adc
mov
in
imul
push
mov
pop
or
mov
fwait
mov
cmp
jl
decl
add
adc
fwait
dec
in
adcl
stos
jae
mov
mov
xor
pop
push
pop
sti
mov
push
fsts
add
pop
mov
les
sbbl
pop
test
fs
into
mov
add
inc
test
fistpl
cmp
test
jnp
xchg
stc
sbb
je
aad
push
push
jle
scas
push
movsl
jae
pop
mov
or
mov
or
or
getsec
pushl
lcall
add
sub
add
xlat
push
cwtl
sbb
add
mov
or
xchg
loopne
pop
pop
push
push
clc
outsb
cli
cmp
sub
sar
or
test
mov
bound
cmp
and
dec
adc
sti
mov
stos
rcl
sub
lods
enter
adc
shl
idivl
xchg
or
or
xchg
fwait
ret
sbb
inc
mov
test
sbb
or
leave
stos
das
inc
mov
jecxz
and
pop
dec
xorb
sbb
loope
cs
lds
frstor
aaa
or
push
dec
lahf
mov
mov
or
mov
inc
jno
lods
sub
fidivs
mov
lret
test
pop
mov
sbb
out
adc
loopne
sub
inc
jno
xchg
xchg
push
xor
sbb
lods
jno
sahf
mov
popf
lock
inc
orl
fstpt
add
mov
xor
pop
inc
fdivl
xchg
sub
adc
pop
inc
repz
jmp
outsb
out
clc
aaa
lcall
jmp
adc
push
xchg
mov
sbb
iret
jle
sbb
sub
scas
out
mov
mov
pop
lahf
mov
in
aaa
sub
jne
mov
jbe
dec
sub
out
mov
in
jl
or
inc
call
ljmp
pop
mov
sbbl
rorb
adc
lods
mov
nop
imul
das
and
pusha
ljmp
imul
push
xchg
pop
pop
lret
lret
jb
push
jno
xchg
pop
and
imul
push
fistpll
add
adc
push
icebp
arpl
sub
jo
nop
sub
cwtl
mov
imul
test
xor
add
stos
push
pop
mov
dec
xor
and
sbb
jb
dec
movsb
push
dec
imul
push
inc
sbb
int
stc
dec
xor
jg
pop
rcll
push
mov
xchg
gs
jnp
loope
pop
adc
cwtl
movsl
fwait
shrl
sbb
mov
fs
js
fwait
stc
inc
out
stos
sub
inc
add
mov
inc
dec
loopne
mov
cltd
push
daa
mov
push
pusha
xchg
mov
subb
add
add
mov
gs
xchg
add
push
xor
mov
fmull
xor
lods
or
pop
das
loopne
jl
mov
jmp
fcompl
aam
std
test
xchg
scas
mov
and
jb
out
mov
movsb
and
push
pop
jae
or
fnstenv
mov
or
xor
xor
jmp
imul
lds
pop
test
add
nop
jns
jle
arpl
ds
fadds
push
inc
or
in
jl
dec
test
outsl
cs
pop
pop
mov
push
or
xchg
cltd
jns
orb
jbe
loopne
jo
add
aas
mov
test
out
imul
add
adcb
mov
or
push
fwait
negb
dec
sahf
fisubs
test
ljmp
ljmp
aaa
cmp
push
frstor
push
lret
mov
frstor
jns
pop
jo
or
mov
cmp
xor
aam
popa
push
stos
in
sub
fsubrp
jno
test
or
xchg
sbb
pusha
loop
pop
divb
mov
push
xchg
adc
insl
and
repnz
mov
cmpsl
les
ret
xor
test
roll
jb
outsl
int3
push
insb
mov
loop
mov
mov
cli
adc
js
mov
mov
push
ljmp
popf
cltd
jns
rorl
lods
pop
adc
cmpsl
inc
cmp
jge
movsl
addr16
je
loopne
loop
int
in
dec
hlt
andl
jle
int
jns
aam
das
xor
loop
pop
push
add
mov
iret
loopne
sahf
push
jns
sub
arpl
mov
mov
lods
pushf
lret
xchg
push
sub
xchg
fisubrs
fwait
adc
divb
ret
pop
ficoml
mov
mov
xchg
xor
addr16
dec
outsb
ror
pop
daa
addr16
cwtl
sbb
std
mov
lock
sbb
test
xlat
sub
xchg
xchg
inc
mov
and
outsl
or
popf
push
jle
icebp
add
fildl
mov
filds
addb
ret
inc
lret
dec
xchg
inc
xor
imul
sahf
adc
lods
and
cmp
aas
cltd
mull
ds
popa
adcl
and
fcoml
in
dec
fistps
mov
push
out
cmp
hlt
mov
je
lcall
dec
in
mov
sbb
pushf
stos
ss
jo
push
adc
js
or
leave
inc
jecxz
dec
jne,pt
lea
add
in
sbb
loopne
pop
sub
push
adc
cmp
cmc
sub
movsb
into
mov
pop
ljmp
sbb
ss
push
aaa
test
test
popa
inc
shl
inc
dec
adc
call
add
dec
jge
scas
mov
sub
shrb
add
movsb
ret
push
jl
mov
cs
in
sti
cmpsl
test
jg
push
decb
jp
je
jb
push
fnstsw
xchg
inc
cmp
imul
std
or
in
cwtl
pop
int3
cmc
xor
es
ret
dec
es
clc
mov
stc
xchg
push
fxtract
js
inc
or
out
push
notl
mov
jb
scas
aad
test
dec
dec
and
rdtsc
mov
mov
out
cmovs
rclb
sbb
rorl
cmp
ret
enter
add
lret
dec
xchg
lods
inc
mov
cmc
adc
xchg
iret
mov
inc
test
xchg
push
dec
cmp
arpl
aam
add
test
sbb
and
test
adc
outsb
jp
jp
pop
mov
lahf
fidivrl
jbe
lods
inc
sub
mov
pushf
sbb
in
dec
mov
cld
inc
pop
xor
loop
jnp
sarb
scas
xchg
jnp
pop
popf
testl
xchg
js
ret
lcall
push
mov
dec
js
or
cmpsl
pop
lcall
aad
adc
addl
popa
sbb
inc
dec
sub
fs
dec
cmp
push
cmc
xlat
testl
mov
fiadds
fdiv
inc
orb
or
movzbl
icebp
lret
jo
push
popf
inc
out
mov
cmp
adc
push
jl
adc
sbb
aad
sarl
xor
stc
clc
jo
mov
lcall
sahf
mov
lods
mov
xchg
pop
dec
fucomip
aaa
push
dec
inc
repz
aam
push
dec
pop
inc
lock
mov
scas
fwait
or
cmp
push
mov
incb
test
jecxz
andl
pop
sub
push
fsubrs
fnstenv
cli
ja
jmp
mov
or
push
pop
mov
or
xchg
jbe
stc
lret
xchg
inc
mov
pop
lahf
inc
mov
loopne
mov
ror
int
sub
iret
xchg
flds
idivb
jp
push
mov
mov
adc
xchg
sub
push
add
movsl
paddd
or
ds
sub
mov
mov
movsb
dec
ret
inc
arpl
push
mov
cmpl
loope
add
and
in
rcr
and
jns
clc
aam
cmpsb
arpl
daa
dec
push
pop
fcom
lds
aaa
mov
inc
mov
roll
sbb
pop
mov
and
cld
imul
mov
adc
arpl
or
push
dec
dec
jg
mov
nop
mov
sbb
addl
aam
sbb
insb
loope
test
sub
pop
shl
jnp
push
insb
lods
push
adc
into
fnstsw
cmpsl
or
add
pop
or
mov
mov
lea
pop
leave
push
pop
leave
xchg
cwtl
push
out
jecxz
cmc
cmp
ljmp
xor
pop
insl
cmp
pop
push
fmulp
js
mov
cmpsl
and
jl
or
fs
out
fcoms
fcompl
jns
sarl
inc
outsl
testl
loope
mov
and
push
testb
xlat
inc
ja
pop
lds
stos
dec
adc
outsb
xchg
mov
mov
adc
lret
ja
xchg
sahf
push
popa
mov
leave
cld
mov
fld
into
push
jle
enter
mov
loopne
fnstcw
cmp
sub
nop
cli
cmp
pusha
sbb
sbb
mov
xchg
mov
pop
inc
xchg
adcb
call
repnz
jl
mov
jl
addr16
sbb
sti
mov
fmull
jle
pop
mov
mov
into
mov
push
fidivrl
insb
mov
cmc
jo
ds
mov
fisubrl
loope
imul
xor
mov
movsb
jb
adc
mov
xchg
lret
imul
dec
movsb
jnp
jbe
decb
dec
mov
repz
in
es
mov
push
pop
dec
xor
fnstenv
mov
je
std
dec
pop
addr16
hlt
add
dec
xorl
xchg
mov
dec
scas
divl
repz
in
mov
and
fmul
inc
arpl
in
shr
or
xchg
fiadds
jb
sbb
xchg
cmovnp
cmc
xchg
add
ja
popf
mov
sar
cmp
push
jo
scas
imul
addr16
repnz
mov
pop
lods
arpl
rclb
xchg
shlb
or
ret
int
inc
sbb
pop
ds
jae
xor
inc
scas
inc
ror
xchg
dec
popf
mov
pop
dec
test
cli
jle
or
or
lock
aaa
mov
jp
and
test
fwait
lods
xchg
iret
mov
aas
andl
mov
stos
adc
and
push
and
add
test
int3
shl
adc
fidivl
fnsave
mov
ljmp
repnz
pop
nop
daa
jecxz
push
pop
je
xchg
mov
shrb
test
or
dec
push
fldenv
popf
lahf
fnstenv
inc
mov
flds
mov
and
or
scas
in
push
pop
inc
cltd
movsl
fs
stos
push
nop
pop
pop
mov
adc
mov
adc
addb
lret
and
and
imul
xchg
mov
jae
movsl
ss
sub
or
insl
sarb
mov
pop
jns
outsb
int3
lret
cs
push
es
xchg
mov
cmc
xor
dec
fsubp
and
in
sub
add
jns
into
movsl
push
rorb
std
and
mov
imul
rolb
rcll
dec
incl
in
sbb
test
mov
nop
sbb
push
fistpll
adc
mov
mov
xor
icebp
in
lcall
addr16
lods
xchg
cmp
cmp
test
lahf
dec
mov
or
js
cwtl
stc
int3
data16
sbb
and
push
aam
dec
jmp
lret
and
popf
dec
adc
and
mov
test
cmpsl
clc
mov
xchg
repz
add
xorl
or
jo
dec
push
jle
aad
fildl
jg
push
popf
mov
cmp
rcrl
and
lock
push
mov
lods
xor
sub
out
imul
sbb
in
iret
gs
clc
mov
mov
jae
mov
add
mov
push
inc
and
jge
xor
xlat
dec
pop
jmp
push
jl
in
xchg
fcmovbe
movsb
arpl
pop
mov
mov
pushl
sub
xchg
imul
add
mov
push
xchg
cwtl
test
adcb
lea
cmpsb
insb
in
imul
or
or
xorl
sbb
jno
pushf
repz
lods
imul
scas
xchg
les
mov
xchg
outsl
jno
fcoms
jl
dec
aam
stos
sbb
pop
inc
or
inc
loop
loope
nop
push
and
jge
sbb
sahf
or
out
dec
pop
cmpsb
enter
sub
push
rclb
leave
outsl
hlt
jge
inc
mov
fucomp
movsb
into
and
dec
pop
pop
jmp
repz
ss
or
xchg
mov
data16
jmp
jb
fdivl
leave
push
sub
push
pop
xlat
in
mulb
pop
out
sub
and
mov
or
cwtl
pop
sbb
enter
mov
shll
sub
mov
scas
jo
mov
mov
push
jg
std
outsb
inc
out
dec
aas
js
pop
inc
add
std
or
and
xor
or
xor
int3
and
adc
std
push
xchg
jno
in
jg
sub
adc
popa
fadds
jnp,pt
flds
sbb
leave
add
cwtl
nop
sbb
xchg
xchg
xchg
jge
jp
and
mov
xchg
adc
and
rcrl
add
pop
xor
cmpsl
inc
mull
aam
mov
outsb
add
lods
or
cmp
sub
fadds
mov
push
addl
add
cmp
sub
lcall
sbb
xchg
lahf
inc
movsb
mov
scas
out
hlt
repnz
and
cmp
fxch
pop
out
mov
aas
lret
imul
fcoms
fnsave
jo
insb
std
aas
out
inc
popf
pop
sbb
iret
test
pop
cmpsb
stos
push
or
fwait
dec
cmp
hlt
loopne
pop
stos
cmc
xor
nop
mov
adc
push
lcall
clc
mov
data16
aam
loope
dec
cltd
dec
mov
add
pop
cmp
add
sub
sahf
movsb
or
lahf
add
xor
jge
or
mov
leave
addr16
shlb
cmp
outsb
leave
int
cli
out
jp
mov
ss
popa
enter
leave
push
decl
loop
andl
pop
mov
mov
xchg
dec
icebp
jg
aaa
pmaddwd
jmp
fcompl
mov
rcll
loop
inc
shl
adc
lret
adc
push
mov
lretw
in
pusha
or
imul
lea
aas
sub
call
insb
dec
cmp
pop
push
jecxz
jns
cmp
imul
cmp
pop
insl
or
xor
hlt
add
cmovle
shll
ds
adc
adc
test
sub
xchg
jbe
xchg
xor
lahf
sbb
pop
fisttpl
pusha
and
mov
int3
mov
cmp
imul
in
jne
mov
iret
cmp
dec
call
push
jbe
fs
adc
and
les
push
lods
arpl
sbb
push
sti
lret
inc
sbb
ret
sub
mov
inc
adc
pop
jbe
jo
mov
push
dec
push
loop
stos
cmp
test
push
rcll
aam
add
xchg
and
mov
pop
xor
dec
add
adc
mov
adc
jno
mov
aas
fsubrl
jbe
pop
push
das
mov
or
cmp
rorb
xchg
adc
addr16
fistpll
rorl
or
jp
out
ret
jmp
or
fmulp
dec
out
test
clc
fcmovne
in
test
sbb
or
leave
loopne
jbe
push
xchg
out
mov
dec
cld
pop
ja
clc
pop
push
cmp
fs
mov
loop
mov
jmp
or
cli
cltd
pop
fwait
in
fucomp
adc
clc
lock
fisubrl
fimuls
arpl
pushf
pop
and
fwait
xchg
out
sti
fistps
adc
xchg
imul
loope
add
mov
cwtl
movsl
insl
jmp
or
cmpsl
pop
xchg
mov
insl
xlat
lea
jg
push
sbb
mov
mov
and
sti
hlt
mov
rclb
sahf
sbb
mov
jno,pn
frstor
fs
or
fs
sub
jbe
jl
nop
inc
fmuls
pusha
push
test
mov
pushf
int
popf
push
pusha
sbb
cmpsl
adc
shrl
cld
mov
lods
pop
sub
push
cmpsl
shll
adc
dec
fistpl
lea
cs
js
jbe
lret
jle
repz
test
xchg
push
mov
cld
enter
pop
mov
jbe
in
fimuls
pop
sbb
inc
sub
adc
outsb
xchg
sbb
ret
inc
add
sbb
test
jmp
push
hlt
mov
or
push
je
mov
in
push
iret
stos
in
xchg
push
xchg
rcll
in
mov
or
addr16
into
or
int
cmp
cmp
jbe
leave
lahf
int
cltd
fs
inc
stos
in
xchg
sub
inc
xor
rcr
fisubrl
adc
insl
mov
andb
xchg
sub
push
xor
adc
out
ja
fstpl
jl
adc
js
adc
and
dec
add
addr16
sbb
and
outsb
dec
push
shr
out
fbstp
push
rclb
push
or
mov
mov
movsb
fdivrs
popa
lret
jmp
fsincos
nop
xchg
out
mov
inc
xlat
adc
ret
jno
mov
jns
filds
sbbb
lock
sub
mov
mov
jg
push
loop
imul
fsubrl
test
in
cld
aad
xchg
jns
in
arpl
test
jae
lods
outsb
dec
loopne
add
loop
jnp
or
jl
in
mov
or
add
loope
jg
adc
xchg
addl
mov
sahf
sub
sar
mov
push
fcomps
sbb
std
push
lcall
mov
adc
mov
gs
into
add
xchg
adc
or
pusha
insl
and
xor
inc
jle
repnz
xchg
out
stos
sub
in
mov
sub
enter
add
cs
sarb
cwtl
pop
lcall
xor
jmp
test
dec
arpl
xchg
xchg
adc
push
inc
int
fdiv
icebp
xchg
sti
bswap
negl
rorb
cld
xor
sub
insl
lret
lea
push
cmp
negb
shll
cwtl
jg
push
idivl
fcoms
test
pop
outsl
mov
pop
push
pop
pusha
mov
mov
sub
xchg
test
and
or
cmp
movb
fstpl
test
push
xor
jns
in
andl
pop
in
sub
xor
mov
fidivrl
in
out
bound
sub
adc
cld
les
sbb
push
incb
in
and
test
cmpsb
xor
fisttpll
in
popl
jmp
xor
dec
std
popf
mov
repnz
setnp
movsb
in
loope
sahf
mov
shll
xchg
ja
sub
xor
cltd
aad
sub
les
and
xchg
data16
cmp
pusha
out
aas
and
mov
push
xchg
imul
pop
sub
adc
mov
std
xchg
hlt
cmp
xchg
in
fidivrs
sub
adc
mov
mov
dec
xchg
dec
int3
add
sahf
sbb
add
les
mov
pop
adc
ficompl
cmp
mov
sub
fwait
fs
rcl
push
int3
std
jle
mov
jle
aam
paddw
cmc
sbbl
fadd
sti
gs
lret
fisubs
pop
ja
adc
imul
push
fistpll
popf
xor
in
dec
pop
jmp
nop
sub
in
push
mov
ret
push
cld
arpl
test
xchg
mov
xchg
decl
xor
std
fmuls
cmpb
out
sub
jns
pop
sbb
lret
bound
add
sub
or
aad
in
xor
add
pop
rolb
ret
mov
orb
dec
cli
xlat
pop
and
mull
out
xchg
in
push
repnz
mov
jmp
mov
xchg
insb
test
inc
lods
cwtl
jle
negb
cmovle
lock
adc
lret
or
int
xchg
cltd
jo
rorl
cmp
ret
push
loope
cltd
push
add
fimull
push
jns
adc
leave
ja
push
jae
das
cli
lea
jbe
cld
std
aam
fsubrp
push
sbb
out
push
das
mov
or
jl
and
dec
inc
je
mov
lret
push
mull
sahf
add
clc
repz
imul
xor
pop
adc
loope
xchg
inc
and
test
and
sar
shl
stos
cmp
push
fcomps
mov
ret
aam
shlb
add
inc
pop
xchg
ljmp
int
push
enter
fwait
pop
jle
fimuls
aad
popa
jle
push
outsl
mov
push
loop
rcl
cltd
insb
cli
dec
data16
sti
out
sub
cmovg
mov
pop
sub
pusha
inc
fwait
cs
mov
shlb
out
push
add
es
out
jnp
lods
push
xchg
xchg
sbb
fdivr
shr
pop
mov
inc
arpl
jb
add
call
mulw
dec
cli
fdivs
arpl
ss
push
xor
jp
or
push
mov
and
jnp
push
arpl
push
rcr
aas
and
aas
jb
pusha
out
sbb
out
dec
xor
sub
cmp
jecxz
arpl
insl
xor
mov
add
insb
data16
fnsave
xchg
out
inc
outsl
insl
and
ja
bound
dec
mov
mov
out
mov
mov
jne
test
xchg
xchg
dec
fisttps
test
pop
sub
jns
in
and
int
sbb
push
fsts
stc
in
fcmovnb
pop
sub
jno
or
xchg
and
popf
sub
cmpsl
fcmovnu
repnz
jecxz
int
adc
xchg
and
pop
xchg
jge
ljmp
mov
add
jo
or
mov
or
jbe
push
sbb
dec
int3
icebp
add
fnsave
jns
adc
clc
lods
pop
xchg
or
repz
in
lret
push
xor
js
and
xor
push
cmpsl
and
xchg
xor
test
aam
mov
shll
cwtl
fiaddl
add
test
cmp
stos
addl
shrb
sub
mov
mov
filds
pop
dec
add
fsubrs
pop
in
and
lds
xchg
push
ror
js
cmp
sbb
ss
lods
int3
lret
popf
bound
mov
jmp
xor
addr16
dec
cwtl
leave
mov
sahf
inc
arpl
int
push
iret
repnz
xorl
xchg
push
mov
pop
addr16
cli
push
shll
iret
adc
out
and
fisttpll
aam
sub
lock
inc
daa
ret
xor
out
bound
sub
and
dec
sti
hlt
out
push
xor
and
or
dec
xchg
cli
popf
cmpsl
sarb
adc
sbb
dec
mov
xor
nop
xlat
xor
or
mov
arpl
in
mov
in
mov
xor
cli
add
inc
cmp
mov
js
out
repnz
mov
andb
push
aas
sahf
cmp
aas
clc
fsts
xor
push
inc
and
cwtl
fistpll
jge
je
je
fs
ss
cmp
and
xor
mov
dec
fidivs
adc
out
test
cmp
lea
movl
inc
inc
inc
out
or
std
sub
xlat
mov
push
push
xchg
fdivrp
rorl
int
das
rclb
mov
punpcklwd
add
dec
or
insb
sub
rclb
inc
and
sub
ret
enter
into
or
loope
mov
rorw
les
add
lds
push
in
mov
pop
inc
sbb
fsubrl
mov
das
sbb
ja
pop
jge
inc
lcall
scas
mov
mov
imul
cmp
xchg
xor
fxch
pop
movsb
aas
jbe
xor
cli
xchg
insb
cmpsl
dec
adc
xor
sbb
nop
loop
je
jae
sbb
mov
sub
loop
dec
adc
sub
sub
mov
cmp
xor
inc
es
xor
je
cmp
add
js
mov
insl
ss
popa
jb
mov
js
icebp
xchg
jno
jns
push
cli
test
add
xor
aaa
fisubrl
inc
rcrb
mov
loopne
pop
les
jb
repz
sub
xchg
imul
in
jge
sbb
dec
out
std
cwtl
imulb
aaa
orb
es
inc
sbb
xor
xlat
sbb
push
cmp
jo
repnz
test
xorb
mov
adc
add
cli
xor
jae
cltd
adcl
xchg
inc
imul
aas
pop
jl
and
ret
mov
popf
je
int
mov
cli
insl
fdiv
inc
or
push
push
push
bound
sbb
cli
sub
push
xor
cmpsb
mov
inc
test
dec
test
cmpsl
pop
dec
push
mov
cmpb
loope
int
push
dec
mov
push
lret
movsl
sarb
into
add
scas
and
dec
pop
aas
sbb
insl
xchg
out
mov
dec
adc
xchg
adc
cmp
arpl
mov
xchg
movsl
add
sub
jge
xchg
mov
cwtl
test
jnp
cltd
adc
in
mov
fsubs
rorl
mov
sub
in
and
fldcw
push
jp
cmpsl
jl
les
rcr
sbb
scas
jecxz
mov
repnz
int3
sbb
xchg
cld
ljmp
inc
push
push
lret
rolb
sub
pop
aam
ljmp
ljmp
cmp
mov
jne
push
aam
les
aaa
sub
aas
ds
sti
mov
jecxz
xchg
push
in
movsl
cltd
push
scas
xorb
inc
mov
pop
fdivrl
out
cld
or
fs
jbe
sbb
loop
sbb
in
sub
and
sahf
dec
cmp
mov
mov
movsb
cld
push
sti
dec
xor
fdiv
cmp
jne
xor
add
out
mov
imul
addr16
mov
sub
sahf
out
cld
push
dec
mov
mov
ficoml
ret
aad
sbb
test
jae
sbb
push
movsb
pop
cs
push
add
out
push
cmp
mov
mov
pop
pop
lock
stc
push
dec
jne
or
mov
negl
andb
xchg
or
mov
popf
xchg
rolb
cmp
aaa
rorl
pop
pushf
lds
popf
pop
shlb
in
dec
out
xor
je
insl
cmp
sub
int3
out
cld
xor
leave
je
dec
pop
push
dec
or
xchg
pop
pop
dec
loop
mov
stc
pop
andl
pop
jno
mull
sub
movsb
inc
dec
lahf
push
and
ja
dec
testl
sbb
lods
into
daa
adc
fcoml
jne
push
jne,pt
out
jmp
insb
loope
jbe
mov
pop
pusha
mov
push
mov
pop
repnz
gs
push
mov
mov
mov
std
in
sti
mov
sub
sti
mov
xor
sub
jp
mov
push
iret
stos
movsl
add
sub
in
ja
fwait
iret
mov
ljmp
cmp
pop
or
push
dec
out
in
repz
pop
cli
push
dec
xchg
mov
dec
stos
dec
or
bnd
addr16
dec
je
data16
push
push
sub
bound
mov
mov
cli
or
pop
pop
ret
adc
cmp
jb
in
shrb
out
movsl
cmc
fmul
xchg
cwtl
loop
test
mov
aad
inc
sbb
nop
push
inc
push
mov
ljmp
clc
sub
ret
cs
push
sahf
or
add
dec
lea
dec
rcll
out
out
lds
cli
test
xor
mov
mov
imul
jb
aaa
cltd
cmp
test
ja
add
rcll
sub
xlat
cwtl
daa
cwtl
cmp
lret
scas
lcall
jae
mov
mov
js
sbb
movsl
movaps
rorl
popa
les
enter
push
lods
inc
mov
mov
shrl
cmc
aam
or
loopne
pop
push
mov
outsl
sub
xchg
rclb
sub
mov
mov
or
loop
push
enter
and
out
xchg
mov
dec
mov
popf
mov
notb
jp
sub
mov
mov
mov
movsb
dec
pop
fnsave
insl
and
sbb
divb
mov
lret
sbb
nop
repz
and
jge
cmp
enter
add
adc
imul
mov
pushf
pop
scas
sbb
loopne
jne
adc
sub
sbb
pop
xchg
addr16
sub
pusha
aad
mov
push
out
mov
pop
mov
pop
cmpsl
push
and
cmpsl
dec
mov
out
xor
pop
or
ljmp
mov
dec
shll
inc
mov
cmp
xor
loopne
adc
cs
jmp
jmp
rclb
pop
pop
push
pop
movsb
enter
xchg
mov
and
xor
js
out
and
aaa
loope
adc
iret
imul
xor
mov
stos
mov
xor
imul
cli
out
dec
xchg
adc
or
mov
cmp
inc
xchg
dec
mov
movsb
push
xchg
sbb
xchg
jne
or
mov
setae
pop
addr16
outsl
lods
repnz
mov
xor
mov
shll
lds
imul
mov
call
cmc
pop
jns
lret
inc
add
ficompl
shl
pop
rol
pop
mov
inc
daa
bound
rorl
clc
aaa
push
and
and
inc
or
inc
orb
mov
not
sahf
fdivrs
cli
ss
pushf
xchg
inc
dec
xchg
nop
pop
sbb
ljmp
int3
sbb
fs
xchg
iret
mov
xor
sbb
jno
scas
inc
shll
subb
sub
aaa
mov
jnp
rcll
mov
inc
imul
scas
jp
imul
push
xor
cmpsb
mov
mov
in
xchg
mov
cmpsb
aam
fbld
mov
andb
gs
mov
pop
ljmp
daa
int
int
pusha
leave
fcoml
clc
push
sub
jb
pop
push
outsl
mov
rcrb
pop
push
add
rclb
cli
fucomip
jl
out
lock
jae
test
inc
and
dec
or
jle
pop
int3
and
pop
shrb
icebp
mov
jbe
out
rolb
dec
xor
jb
insb
out
push
aaa
push
insb
scas
cltd
sub
sub
clc
or
jg
rorb
shl
enter
call
inc
dec
in
inc
or
mov
imul
sbb
imul
out
jl
xor
cld
xchg
loop
das
mov
sbb
mov
movsb
into
mov
sub
mov
xor
fs
icebp
mov
popf
shrl
sbb
adc
push
push
clc
call
orl
daa
es
iret
or
scas
jnp
sub
jge
cmp
xchg
and
movsb
cmpsl
bnd
mov
repz
push
in
lea
push
mov
fimuls
inc
xor
cli
pop
mov
sbb
insb
and
mov
dec
jbe
mov
and
push
mov
addr16
mov
sbb
pop
outsb
jb
insb
sbb
and
ljmp
jg
jg
push
jg
out
out
sbb
aas
cld
mov
xchg
push
nop
mov
lods
jns
js
inc
mov
mov
mov
push
popa
jecxz
or
dec
test
shll
mov
cmpsb
xchg
in
mov
jbe
data16
ret
push
xchg
enter
xor
jp
xor
ret
lret
or
push
in
es
inc
shl
dec
sub
repz
xor
or
dec
icebp
ss
mov
xor
in
pop
in
rcll
fidivrl
ret
dec
add
stos
movb
popa
push
mov
mov
rcrb
lock
les
mov
xchg
data16
cltd
movb
sbb
repz
adc
jmp
add
push
jb
mov
orl
or
mov
pop
jo
cmp
mov
in
and
xchg
cmpsl
mov
push
push
mov
iret
fs
sarl
lods
jge
pop
xchg
lcall
test
stos
in
mov
nop
fsts
ret
or
stos
mov
dec
jno
add
xchg
mov
add
sbb
jne
jae
in
adc
sti
dec
repnz
js
and
mov
sbb
addr16
fmull
jmp
sbb
cwtl
push
cmp
mov
fnsave
xchg
scas
fwait
in
shl
push
xor
mov
lahf
sbb
stos
xor
rcr
outsl
out
movsb
jmp
scas
inc
repz
pop
jb
test
bnd
push
stos
insl
fsubs
pop
jecxz
add
sti
stos
mov
cmc
mov
jmp
ror
iret
or
adc
outsb
xor
fmuls
js
jo
cmp
cmpsb
mov
ret
loop
and
lahf
push
lods
les
loop
sub
mov
aam
cwtl
pop
jp
mov
sbb
pop
shr
dec
dec
lret
lods
pop
dec
mov
dec
je
mov
movzbl
jp
xor
push
out
dec
cli
cmp
add
cmpb
jl
jmp
jns
xlat
int
add
mov
imul
stos
and
dec
out
and
push
push
mov
xor
aad
mov
das
lret
mov
ljmp
jmp
mov
push
in
imul
cmpsl
inc
jo
mov
filds
cmc
xchg
push
fwait
xlat
movsb
pop
pop
xor
xchg
mov
ret
pop
lock
leave
inc
hlt
pop
mov
ljmp
cmp
iret
mov
call
pop
mov
jne
xchg
xlat
or
inc
inc
mov
daa
loopne
lock
out
leave
das
or
push
mov
cmc
push
inc
out
jle
popf
dec
xchg
scas
pop
into
inc
test
dec
xchg
fdivr
jmp
repz
dec
inc
std
adc
adc
out
adc
sbb
movsl
mov
xchg
pop
and
flds
push
mov
jmp
dec
sub
pop
mov
sbb
rcll
inc
or
out
dec
adc
ss
xor
js
stc
faddp
stos
rcrl
cmp
mov
push
dec
inc
xchg
shr
mov
adc
dec
lock
mov
mov
cmp
add
pop
or
cmp
sbbl
out
xor
test
daa
jmp
adc
clc
push
jg
xor
cwtl
push
jg
sbbl
pop
fildll
cmpsl
adc
xchg
dec
cs
cmp
cmc
js
out
and
std
int3
mov
pop
jae
xchg
pop
bnd
or
ss
je
notb
in
cmp
pop
ljmp
xchg
dec
fchs
out
filds
out
xor
lret
push
mov
sbb
and
and
sarb
and
aam
mov
xor
sbb
dec
inc
jnp
cmpsl
je
pop
loope
xlat
mov
jmp
jl
push
jno
mov
lahf
sar
pop
lods
add
mov
mov
mov
fnsave
gs
jo
fstpl
xchg
sbb
pop
inc
sbb
sti
pop
ja
daa
jne
cmp
push
jo
aaa
insl
scas
aam
xchg
div
lock
cmp
dec
insl
pop
sbb
in
xor
ret
pop
dec
outsb
lret
ret
rcrb
ljmp
ljmp
adc
fildll
aaa
cmovg
jae
push
mov
iret
mov
aad
mov
dec
mov
dec
mov
cli
push
cmp
sahf
push
in
test
imul
stos
sbb
shrl
xchg
addb
xlat
pop
xor
subb
mov
jp
jge
into
in
fs
nop
xor
fwait
out
mov
flds
xor
hlt
outsb
int3
pop
or
hlt
sub
xor
test
xor
repz
int3
mov
repnz
shlb
push
and
sbb
pop
push
sbbl
insl
pop
add
clc
subl
mov
and
movsb
in
sbb
push
test
xchg
mov
stos
aam
xor
xchg
cs
xchg
dec
sbb
in
fcompl
jp
js
push
xchg
adc
rorl
leave
sub
cmp
fidivl
outsb
cmp
lock
and
jmp
movsl
stc
ret
enter
mov
lahf
mov
push
dec
call
cmc
sbb
push
sti
or
sub
push
loopne
lret
rol
les
mov
mov
adc
jge
es
andl
cld
pop
pop
lahf
mov
int
pop
or
cs
stos
scas
test
adc
pop
xchg
mov
and
mov
cld
mov
or
ficoms
pop
addr16
jl
lret
push
insl
scas
daa
fldt
xor
jae
mov
mov
repnz
dec
xchg
inc
lds
xchg
pop
and
mov
andb
js
or
imul
push
int3
mov
pop
pop
arpl
std
shlb
dec
sbb
and
or
inc
jecxz
sbbb
jb
or
pop
in
jg
in
inc
xchg
push
mov
sub
sbb
je
cmpsl
fistl
das
sti
xchg
test
call
movsb
leave
or
cmpsl
xchg
xor
cli
and
push
sub
cmp
int
mov
jb
sti
xlat
insb
and
jne
xor
and
sbb
mov
cmc
jmp
inc
xor
jb
filds
and
push
and
inc
sbb
mov
fadd
pusha
in
inc
pop
inc
aas
bound
dec
shlb
mov
dec
movsl
in
lds
add
add
pop
sbb
push
test
pusha
mov
xchg
mov
das
xor
je
in
and
mov
sbb
xchg
scas
add
mov
or
int3
in
and
mov
sbb
xor
jae
les
lods
orb
mov
cld
mov
mov
pusha
adc
mov
push
jle
inc
xor
cltd
loope
mov
cli
mov
test
fcmovnbe
adc
mov
xor
pop
fildl
adc
mov
or
roll
push
pop
sub
mov
and
mov
sahf
ja
pop
inc
out
cmpsb
jbe
mov
popf
or
jnp
imul
std
push
jae
cmc
dec
pop
xlat
mov
arpl
leave
mov
ret
jo
sti
std
mov
add
dec
testb
jbe
cs
sbb
adc
push
daa
sub
ftst
shll
clc
jne
mov
mov
mov
outsl
xchg
sub
cmp
push
aaa
jns
pop
lock
adc
mov
push
push
inc
cmpsl
mov
cmc
pusha
and
movsb
dec
loope
and
xor
leave
inc
repz
add
mov
pop
iret
xchg
jl
or
sub
dec
jo
pop
mov
adc
into
mov
lods
mov
sub
xor
or
loopew
insl
or
mov
mov
and
popf
jl
aaa
sub
out
lahf
mov
xor
insb
loopne
cmp
insb
pop
enter
push
mov
inc
add
ja
jmp
dec
outsl
int
jns
sbb
mov
ret
sbb
jmp
dec
test
add
jle
mov
jmp
pop
loope
stos
ret
push
ds
inc
dec
lea
in
pop
xchg
dec
jmp
dec
int
in
cmpsl
xchg
pop
andl
ljmp
adc
lret
add
ret
divl
jae
int
sub
mov
out
xor
xor
pop
jecxz
cmp
mov
fwait
fsubs
jmp
cmp
scas
aas
sbb
fcomps
icebp
rolb
push
mov
mov
subl
rcrb
fcmovne
push
mov
add
je
inc
dec
dec
mov
ss
and
cmp
pop
mov
sub
pop
negb
jmp
inc
push
adc
inc
out
jns
popa
pop
sbb
std
hlt
gs
dec
je
xchg
mov
mov
stos
jbe
adc
push
rclb
adc
ja
inc
inc
fistpll
mov
dec
cwtl
aad
adc
mov
pop
push
andl
scas
cs
in
jmp
mov
mov
enter
cltd
enter
sub
es
sbb
lds
scas
lods
ret
mov
dec
lret
je
sar
push
lock
mov
push
push
push
ds
jbe
outsl
sbb
adc
sti
sub
js
inc
jnp
popf
sub
fstpl
lock
stc
bound
cmpsl
mov
sbb
cmc
je
xchg
mov
pop
adc
repnz
loope
in
mov
dec
jmp
iret
jecxz
mov
adc
jecxz
shlb
pop
inc
pop
xor
pop
push
jae
and
jae
scas
jmp
sbb
and
cmpsl
mov
mov
sub
lcall
sarb
int
pop
cmp
hlt
leave
or
xchg
mov
aad
fwait
je
mov
ja
pop
cmp
sub
pop
cmp
dec
stc
aam
lahf
aam
aas
movsb
mov
and
sbb
mov
sbb
sub
sbb
imul
inc
call
negl
cmp
push
movsl
mov
push
push
pop
mov
add
mov
ja
es
mov
mov
aam
jno
cltd
jmp
sub
inc
mov
mov
jle
jno
ret
pop
psubw
out
in
scas
inc
iret
lods
jo
fidivl
sbb
sub
push
popf
lcall
ret
lret
call
dec
mov
xor
fdivrl
pop
sti
pop
cmpsl
push
lret
call
mov
xor
out
test
adcb
adc
mov
int3
xchg
lcall
dec
ret
jg
mov
rcrl
push
sbb
cmpsl
adc
cs
js
and
xor
int
or
sbb
repz
mov
js
insl
or
or
ret
push
and
data16
pop
dec
add
int3
and
pop
inc
jns
cmp
hlt
add
insl
popa
sub
rclb
mov
push
adc
cmp
push
lods
aad
rcll
push
sarl
and
push
xor
sbb
push
test
outsb
mov
in
sti
enter
lret
sub
std
xchg
and
adc
adc
ret
xchg
cmp
aad
stc
pop
shlb
adc
cltd
and
pop
mov
pop
cmpl
push
movsb
arpl
jno
or
ja
test
mov
add
add
and
pop
cmpsb
pushf
mov
mov
rorl
cmp
out
fnstsw
in
sahf
mov
and
jmp
jl
popf
shll
jb
mov
int3
and
jmp
jecxz
cmpl
lret
clc
mov
xchg
dec
mov
cli
mov
cld
insl
lock
jae
fwait
icebp
sbb
adc
mov
cmp
pop
jecxz
cmp
dec
adc
icebp
pop
xchg
adc
xlat
mov
pushf
call
cmpl
pushf
sahf
bound
fnsave
into
jecxz
lods
mov
adc
sbb
push
aas
adc
add
cltd
jo
jne
shrb
inc
aaa
pop
mov
mov
push
outsb
jle
mov
cmp
sbb
in
push
mov
adc
xlat
xor
stos
jecxz
outsb
movsb
mov
dec
movsb
jp,pn
cmp
mov
xor
daa
stos
std
jno
cmpsl
faddl
aas
mov
testl
jecxz
test
fisubrl
cmpsl
push
jns
cmp
cmp
adc
mov
in
dec
movsl
mov
call
stos
add
adc
cmp
lahf
push
mov
add
cmp
out
mov
clc
pop
pushf
cli
aaa
inc
mov
push
outsb
mov
mov
syscall
fs
mov
cmp
shlb
and
bound
jno
sub
xchg
and
or
out
sarl
scas
cmp
mov
mov
push
dec
mov
icebp
loop
push
repz
mov
add
cltd
mov
xor
fcompl
jbe
jo
ljmp
xchg
es
hlt
push
aad
in
aas
and
xchg
loopne
scas
and
mov
frstor
pop
adc
aad
popf
sub
xchg
dec
pop
mov
push
push
or
cwtl
or
sti
shrb
imul
out
mov
clc
push
sarl
loop
sar
and
push
int3
dec
sti
dec
jecxz
jp,pt
jnp
call
in
xor
test
test
into
push
outsl
mov
jmp
cmpsl
cld
outsb
add
mov
jmp
fsubr
lret
popa
sbb
movsb
jno
pop
or
cmp
cltd
imul
cmpsb
fdivrs
dec
jbe
pop
mov
testb
stos
adc
orl
lods
stc
sbbl
dec
movsb
xchg
inc
in
movsb
xor
sahf
sbbl
inc
mov
leave
adc
ja
xchg
scas
lods
xchg
mov
pop
loop
arpl
add
das
lahf
pop
sub
lods
lock
mov
xchg
cmp
xor
adcb
out
repz
shr
xor
add
or
push
mov
test
in
and
cmp
enter
dec
mov
cmp
sub
ror
jmp
movsl
fs
xchg
push
mov
and
pop
in
and
dec
loope
adc
rcrl
jo
push
dec
addr16
xchg
sub
imul
pop
add
mov
jecxz
std
jmp
push
dec
jg
mov
cltd
and
push
mov
pop
mov
fcoml
jbe
repnz
inc
push
inc
xor
data16
jmp
sahf
cmp
jns
dec
sub
xchg
lcall
xchg
push
adc
mov
cmpsl
and
cmp
fnstcw
xchg
cld
push
jg
ficoms
mov
cmp
ljmp
jb
or
insb
xchg
fsubl
pop
fiaddl
inc
add
out
out
out
xchg
xchg
mov
pop
icebp
hlt
ret
sbb
ja
lahf
gs
push
pop
add
lcall
jnp
in
enter
mov
in
mov
or
sub
push
dec
inc
or
sub
cs
xor
stos
mov
dec
and
mov
outsl
cmp
loope
adc
jae
pushf
ds
mov
mov
rorl
jmp
mov
addl
fwait
shll
stos
sbb
jmp
scas
in
add
orb
std
stos
lret
pop
and
push
in
mov
int
clc
bnd
and
test
sbb
mov
aad
push
notl
loop
xchg
popf
dec
ss
pop
clc
inc
test
inc
jo
sub
test
je
loope
jecxz
cwtl
mov
nop
fsubr
mov
xchg
clc
jmp
enter
scas
insl
pop
les
push
dec
repz
ror
and
xchg
arpl
dec
inc
repz
bound
fisubs
je
mov
aaa
mov
loope
fcoms
jnp
xchg
test
xor
sahf
loope
pop
mov
icebp
add
js
fsubrs
scas
sub
testb
dec
out
push
mov
or
cmp
rcrb
shll
or
lds
bound
ret
sub
lock
mov
stos
inc
rcrb
sbb
mov
pop
cmpsb
movsl
inc
rcrl
xor
cmp
xchg
sahf
sbb
rolb
testb
inc
loopne
push
testb
aad
mov
xor
ret
cmpsb
ja
cmp
ljmp
scas
jmp
in
ljmp
and
daa
mov
aas
std
out
sub
adcl
xchg
pusha
rolb
imul
stc
movsl
es
ds
stc
lods
icebp
fwait
aas
lret
pushl
push
jb
dec
das
sub
inc
es
jbe
push
sti
xor
int3
incl
xor
movsb
pop
movsb
and
mov
insb
lea
dec
xorl
push
push
add
jbe
sub
lods
mov
lods
insl
hlt
sbb
in
fsubrp
cwtl
jg
sub
mov
mov
jle
xlat
mov
gs
insl
fldenv
jmp
shrb
setnp
pop
add
test
inc
pop
fsubs
mov
rolb
loopne
aad
daa
jbe
xchg
movsl
es
cmp
cmp
xor
push
pop
ret
roll
push
mov
sub
xor
gs
loope
pusha
add
aam
push
mov
or
fists
andb
push
popa
nop
xorb
inc
jnp
inc
add
aas
xchg
mov
sarl
pop
lahf
pusha
cltd
test
cmp
xor
add
fldl
mov
int3
push
lret
pop
dec
pop
inc
and
mov
add
js
xor
std
ja
sub
lcall
test
jg
loopne
sub
fmuls
adc
jmp
int
in
popf
addb
int
adc
fstp
and
clc
dec
pop
sbb
out
push
mov
jo
loopw
and
mov
sub
movsb
pushf
call
lock
repz
adc
mov
flds
push
adc
in
adc
std
sub
push
jno
sub
cmp
rorb
fdivs
pop
in
sub
aad
sub
fstp
pop
or
sahf
and
sub
mov
pop
imul
jo
shlb
or
mov
cmp
inc
mov
push
imul
lahf
loope
adc
mov
cli
inc
jmp
lds
daa
enter
push
push
scas
dec
loope
movsb
in
roll
pop
arpl
cmp
mov
stos
test
sub
xor
test
shll
test
and
cmpsb
pop
fildl
or
xchg
mov
call
jp
std
data16
push
popa
sbb
clc
popa
jge
push
aas
xor
fsts
scas
adc
xor
push
or
leave
jne
sub
cmp
lahf
push
ficomps
inc
mov
sbb
jnp
in
push
push
popa
adc
int
aam
fiaddl
mov
cltd
ss
mov
mov
pop
sbb
icebp
aaa
daa
sarl
push
mov
mov
mov
clc
or
insl
shll
nop
std
xchg
pop
insb
inc
ss
out
gs
or
push
mov
mov
imul
xchg
subb
dec
and
in
pop
rorl
jo
adc
pop
pop
add
adcb
outsl
or
faddl
mov
cltd
push
pop
adc
push
adcb
scas
bound
or
cli
inc
cmp
xorl
or
jp
fmull
add
test
xor
add
inc
dec
adc
jae
fwait
repz
stos
mov
test
gs
sbb
xchg
lods
int3
or
jne
aad
mov
inc
lea
lds
adc
adc
dec
xchg
lret
mov
pop
push
cli
fdivr
dec
jae
push
movsb
loope
imul
mov
mov
in
add
xchg
mov
pusha
repnz
fadds
jmp
adc
or
lds
xchg
rolb
es
xchg
rcrl
stos
out
push
jmp
push
inc
xor
jns
pop
aam
add
xor
mov
lock
adcb
pop
imul
enter
jecxz
push
xchg
popa
pop
lahf
es
repz
fs
sub
int3
mov
mov
cmp
data16
and
decb
sub
clc
mov
jle
sub
mov
and
std
push
add
jbe
insb
dec
nop
out
lcall
sahf
mov
addr16
pusha
inc
andl
outsl
sarl
sbbb
xchg
cmpsl
cltd
mov
push
arpl
scas
addl
rcrb
mov
mov
adc
and
dec
nop
or
push
scas
xor
inc
mov
xor
xchg
inc
and
test
stos
cmpb
and
fs
jle
fildl
mov
inc
sub
xor
push
sub
and
sbbb
sub
jl
loopne
jecxz
mov
push
xlat
in
or
test
mov
pop
xchg
jns
cli
sub
incl
sti
cmp
xchg
push
add
pop
insb
or
pop
shrl
popa
fstpl
mov
pswapd
in
cmp
mov
and
push
mov
dec
xchg
shl
pop
nop
mov
xor
in
and
adc
dec
in
mov
mov
or
push
mov
mov
dec
push
push
jp
mov
xchg
jno
lahf
jmp
shlb
icebp
into
xor
imul
jle
pop
xor
mov
stc
push
mov
fisubrl
xor
push
scas
adc
xlat
fldt
jg
pop
mov
mov
loope
insb
adc
push
xor
or
jecxz
adc
aad
clc
mov
test
ret
movl
sub
sahf
fldl
jb
test
je
xchg
pop
in
fdivrl
dec
xchg
xchg
inc
adc
mov
into
and
leave
int3
mov
test
sub
in
sbb
jbe
icebp
add
mov
push
test
repz
xchg
addb
js
sub
int3
movsb
fpatan
inc
sub
hlt
popa
test
test
and
fxch
mov
pop
pushl
push
aad
or
mov
mov
inc
xor
or
fistpl
stos
cld
lods
mov
push
adc
ja
sbb
test
adc
xchg
push
je
jle
adc
mov
pop
add
dec
push
push
pushw
adc
aad
lods
data16
xchg
lds
mov
pop
push
sbb
lds
jp
jmp
and
fsubs
rcll
into
mov
bswap
aam
xchg
inc
enter
xchg
lret
arpl
aas
jp
adc
jecxz
or
push
lret
lcall
or
or
cwtl
add
xor
test
adc
add
movsl
mov
mov
lcall
hlt
mov
xchg
push
pop
push
icebp
out
inc
repnz
ret
xchg
sahf
stos
mov
and
scas
pop
cmpsb
push
inc
sub
lret
sahf
clc
sahf
scas
fs
or
sti
pop
addb
xor
and
sub
call
pop
jno
inc
mov
jnp
fistps
cld
in
lea
stos
mov
ret
mov
push
popf
xor
push
je
pop
call
nop
cmpsb
push
adc
inc
sar
test
and
loopne
mov
mov
mov
and
mov
sti
jecxz
ja
mov
pop
scas
cmp
adc
movsl
sub
sbb
mov
sub
inc
and
mov
mov
and
cmp
sbb
call
dec
stos
push
add
inc
mov
inc
repnz
cltd
arpl
pusha
jno
inc
cmp
sbb
adc
jb
iret
loopne
arpl
inc
js
jne
dec
scas
shl
dec
pop
sbb
scas
cmpsb
pop
add
sbb
add
adc
jne
dec
and
sbbl
add
sub
outsl
dec
clc
add
daa
ja
repz
pop
xor
mov
pop
mov
inc
test
addr16
test
cld
std
dec
push
int3
ret
jecxz
jp
rcrl
fwait
mov
dec
out
jae
pushf
cmp
fstl
jmp
lods
or
cli
xor
shl
out
ljmp
adc
jo
rorb
icebp
sti
mov
ljmp
push
jl
sub
pop
sub
jb
jbe
mov
mov
jge
dec
mov
xor
stos
lods
int
imul
push
pop
pop
inc
fimuls
movsl
test
jne
mov
pop
sarb
mov
push
jne
xor
loopne
fadds
sti
dec
out
pusha
dec
push
dec
lods
xor
mov
or
movsb
mov
mov
inc
or
leave
loop
mov
ret
rcl
punpcklbw
push
dec
mov
mov
mov
clc
add
or
repnz
mov
push
cs
in
dec
cltd
and
jmp
in
push
xchg
in
jle
mov
data16
mov
push
stos
lret
test
xchg
mov
insl
add
jle,pn
sbb
in
cmp
nop
stc
sub
jmp
cmc
loop
inc
int
dec
fcomps
fidivl
xchg
lods
js
mov
nop
jp
lods
lods
sahf
ret
subl
addb
pop
movsb
cmpsb
cmpsl
roll
push
shlb
mov
pop
arpl
stc
pop
pop
xor
xor
rolb
popa
lds
push
outsl
mov
or
fs
and
aas
xor
jmp
das
xchg
pop
lods
sbb
mov
pop
push
int3
pushf
lds
and
jo
lea
ljmp
mov
sbbb
pop
sub
sub
inc
arpl
jns
testb
mov
xchg
cmp
xor
outsl
xor
add
mov
pop
subb
cs
dec
adc
xchg
insb
loop
movl
test
popa
popa
scas
mov
sti
repnz
mov
inc
jmp
push
out
pop
into
cmp
cmp
sub
inc
mov
mov
fistl
pop
push
call
dec
lcall
test
fsts
dec
lods
mov
pop
pop
enter
insl
or
insb
inc
sbb
sahf
xor
xchg
or
shr
ret
mov
into
xchg
and
jno
in
inc
sub
add
nop
testl
es
out
fidivrl
xchg
imul
mov
jp
xchg
adc
cmp
stc
cmp
xor
je
shrb
outsb
sahf
or
pop
push
mov
aad
mov
mov
or
iret
mov
je
aas
or
sbb
cmp
and
aam
mov
lock
adc
jle
syscall
out
mov
xchg
push
je
dec
fistps
sbb
out
lret
pop
and
sbb
rcll
push
xchg
mov
or
lds
sub
cmp
repz
stc
loopne
jge
fld1
daa
int3
cmp
lcall
cmp
out
dec
pop
jp
jecxz
cmp
test
and
mov
xchg
mov
je
xchg
sub
cmpb
popa
mov
fdivrl
shlb
sbbb
fs
std
dec
sub
sub
hlt
test
sbb
sbb
mov
inc
cmp
push
xor
shlb
inc
xor
outsl
repz
rorl
push
cltd
jg
clc
inc
and
ja
faddl
out
xchg
ljmp
outsl
movl
nop
cmpsb
dec
push
test
divb
mov
fnstcw
decl
leave
add
repnz
icebp
lods
jecxz
int3
mov
jmp
and
and
mov
inc
xlat
das
fcomps
cwtl
and
mov
negl
mov
pop
decl
in
mov
dec
nop
mov
fcomps
and
sbb
cmpsl
dec
ds
in
push
shrl
jge
insl
jg
addl
ds
cltd
xor
mov
movsb
mov
addr16
xchg
fadd
xchg
push
std
xchg
cwtl
mov
cmpsl
lea
cltd
loope
xchg
push
and
arpl
and
inc
inc
sub
rorl
lds
jge
mov
out
push
aas
dec
mov
inc
inc
out
sbb
jnp
lret
xchg
lret
xor
mov
jmp
xchg
mov
and
insl
sub
insl
call
xchg
ret
mov
pop
jmp
dec
js
inc
fcompl
add
pop
fnsave
push
push
xor
xor
or
stos
aam
rcll
popa
lods
mov
pop
mov
jns
xchg
push
hlt
notb
or
ds
xchg
pusha
sub
cld
mov
xchg
jno
jmp
stos
pushw
fcomi
cmp
popf
arpl
and
mov
adc
repnz
movsl
and
call
mov
test
push
lahf
std
insl
out
outsb
shrd
inc
pushf
les
xchg
add
pop
ret
sbbb
jmp
mov
insb
sbb
jge
in
adc
fdivp
and
lds
aas
fsub
dec
hlt
push
push
mov
dec
xorl
daa
addr16
jnp
pop
mov
sti
xor
scas
pushf
push
pop
sbb
bnd
pushf
out
inc
inc
in
xor
add
mov
sub
lods
pusha
dec
xchg
push
hlt
jl
mov
xor
cwtl
ret
or
jb
dec
add
jne
push
int3
aaa
out
add
test
cmp
incb
mov
scas
and
ret
rcl
shl
add
popf
cli
cld
mov
sbb
pusha
cmp
and
scas
pop
inc
xchg
add
es
push
in
pop
sarl
call
pop
int3
data16
mov
iret
stc
in
mov
daa
adc
push
pop
mov
push
jl
add
push
mov
jmp
repnz
loopne
loop
push
xchg
pop
add
fsts
shll
pop
and
aad
lods
leave
pop
mov
mov
dec
cmp
imulb
int
push
mov
ljmp
and
in
push
mov
cltd
pop
xchg
leave
jle
movsl
in
mov
sub
fisubrl
cmpl
scas
dec
lcall
loope
outsl
pop
cmp
xchg
mov
push
aas
mov
add
jno
or
scas
outsl
test
jb
pusha
in
inc
cmp
jo
mov
sbb
scas
xchg
jg
push
popa
movsl
fnstenv
and
nop
data16
fcmovbe
repz
xchg
into
aad
add
insl
dec
xchg
push
add
adc
mov
fmulp
mov
loopne
scas
das
stos
ss
out
jbe
shlb
inc
data16
fdivs
imul
iret
int3
scas
das
and
cmp
xor
mov
mov
cwtl
mov
cwtl
jmp
nop
rorb
pop
gs
jo
subl
outsb
fldenv
fsubrs
cmp
jle
xlat
je
xlat
fsts
cmpsb
jge
lods
dec
es
inc
std
aad
stos
mov
jae
test
lret
mov
cmp
outsb
pop
pop
or
fsubs
adc
fistl
dec
cmp
pop
sahf
cmp
loop
sub
sub
add
pop
cmpsb
imul
and
jb
in
push
ds
xchg
sbb
xor
test
out
lcall
pop
sub
test
xor
lret
sete
cmc
jno
ficomps
xor
push
or
mov
sti
inc
inc
ljmp
lea
mov
inc
or
pop
fmulp
scas
imul
xor
sahf
lret
sub
es
xor
fsubl
xor
mov
xchg
and
fs
shll
incl
mov
mov
xchg
out
pop
das
or
stos
push
cli
sahf
push
sti
popa
pop
mov
jb
fidivrl
insb
cmp
sub
push
jne
cmp
mov
int3
outsl
cs
pop
iret
stos
lahf
andb
cwtl
push
test
or
xchg
push
ljmp
push
scas
mul
sub
dec
or
sahf
ja
cmp
in
clc
jle
cmp
lock
push
xorb
andb
push
sbb
mov
outsl
popa
call
popf
lock
stos
and
pop
sbb
pushl
mov
xchg
mov
sub
adc
fwait
mov
movsb
inc
cltd
movsl
and
fmulp
jp
test
sub
adc
popf
int3
sub
fsubl
add
push
add
popf
adc
jmp
push
imul
test
aad
xor
sbbb
outsl
xchg
into
mov
insl
jle
movsb
aas
sbb
jae
aaa
push
sbb
subb
xchg
fsubl
mov
lock
add
mov
cmp
mov
lock
fldl
dec
sub
pushl
jmp
and
outsl
enter
sub
inc
ds
xchg
cmp
adc
xchg
jns
mov
arpl
mov
push
insl
pop
adc
xchg
fcmovnbe
add
inc
jns
adc
insb
inc
mov
pop
repz
jno
adc
outsb
sub
pop
pop
cli
mov
xor
clc
adc
insl
xor
leave
jp
pop
sub
mov
popf
idivl
call
add
fisttpl
lret
clc
and
jmp
push
rclb
mov
jae
mov
mov
sahf
loop
inc
mov
inc
xlat
cwtl
xchg
or
dec
loopne
popa
repnz
push
imul
dec
pop
xor
mov
dec
frstor
movsl
mov
dec
push
sbb
daa
sbb
cmp
ljmp
jb
aad
daa
mov
cmpsl
inc
dec
xor
int
fbstp
iret
add
icebp
sbb
int
test
sub
repz
pushf
lds
push
sub
sub
xchg
inc
pop
in
cmp
mov
adc
push
packssdw
xchg
mov
push
cltd
mov
pop
jbe
cmp
aad
cmp
lahf
cltd
and
sbb
insl
push
jg
pushf
jns
jae
mov
pop
sub
lods
stos
ljmp
stos
mov
cld
xchg
sub
sbb
and
or
pop
mov
pop
and
sarl
pop
dec
subl
dec
outsl
adc
sahf
cmp
dec
xor
aas
jnp
fsubrs
cli
inc
cli
lahf
gs
push
mov
mov
test
jle
push
in
bound
pop
out
addl
cmp
xchg
bound
inc
jp
adc
cmp
hlt
repz
movsb
in
jb
adc
mov
sbb
ljmp
jmp
xchg
enter
mov
add
jp
pcmpeqw
loop
aad
or
mov
mov
or
data16
fmuls
pushf
and
xchg
outsl
in
pop
rcll
lods
in
pop
lcall
cmpsl
mov
fdiv
pop
dec
pop
pop
push
xchg
imul
outsb
inc
stc
cld
and
cmp
pop
pop
cltd
outsl
fcomps
popl
andl
movsb
sub
mov
in
add
push
insb
ret
sbb
outsb
mov
pop
jns
mov
dec
mov
and
adc
inc
cmc
dec
xor
call
ss
ret
repnz
xchg
lds
and
rorb
and
cmp
gs
jae
pushf
daa
lahf
adc
sub
dec
ds
addr16
mov
mov
xchg
enter
je
push
outsb
jle
stc
int
push
push
jno
xor
and
fcompl
inc
rcrl
mov
test
inc
pop
nop
subb
inc
cmp
arpl
add
mov
imul
and
out
sahf
jg
loope
mul
adc
mov
push
out
fimuls
in
pop
add
ja
dec
shlb
in
lods
cld
orb
push
repnz
pushf
sar
mov
ljmp
mov
and
stc
ret
iret
ja
jg
insb
incb
inc
push
scas
lret
sbb
or
inc
mov
mull
into
fdivl
xor
cmpsl
cmc
dec
push
or
inc
out
and
sub
out
cmpsl
jle
aad
pop
sbb
orl
jbe
adc
lock
xchg
push
movsl
cli
sbb
xchg
arpl
int3
jecxz
data16
xchg
insl
stos
cvtps2pd
fsts
and
out
dec
loopne
jbe
mov
and
lods
or
lahf
pusha
mov
test
xlat
xchg
out
xlat
pmulhw
jae
fs
xor
fnstsw
cmpsl
aad
ds
cmp
push
movsl
jnp
xor
test
push
ficompl
and
bound
icebp
add
incb
and
push
ror
xor
mov
in
insl
jg
into
lcall
je
popa
stos
fwait
shlb
inc
adc
xchg
clc
sar
xor
push
fadds
dec
xchg
fidivrl
dec
scas
sbbb
xchg
mov
sub
sbbl
adc
xchg
mov
call
sbb
sbb
jge
inc
dec
js
test
and
or
test
data16
jnp
mov
mov
pushf
pop
mov
or
add
stc
cmp
jns
mov
ret
stc
sahf
push
movsl
ss
sbb
lret
inc
add
pop
aad
insb
enter
mov
ds
sub
rdtsc
mov
movsb
add
ret
jae
pop
loop
mov
xchg
mov
and
and
ss
cmp
scas
sub
pop
out
dec
mov
or
out
nop
hlt
push
cmp
call
sub
sub
test
sbb
cs
fsubrs
jbe
ret
arpl
testl
cmp
or
roll
mov
xchg
lods
mov
fldz
lret
push
jbe
int
int
lds
cmpsl
or
stc
bound
outsb
mov
xor
push
int
out
lods
jbe
imul
and
repz
cmp
rcrb
jnp
stos
jae
sub
movsl
pop
jbe
out
sub
mov
fistps
mov
mov
stc
or
ret
and
mov
push
std
fdiv
inc
or
shl
xchg
sub
and
or
outsb
daa
push
sub
cmpsb
mov
jmp
sahf
inc
getsec
cmpsb
mov
iret
inc
aaa
xor
or
cltd
or
push
aad
add
and
sbb
mov
aaa
sub
cmp
fcomip
jbe
or
in
repnz
sub
aam
outsl
lret
or
cwtl
cmp
ret
leave
jo
adc
repz
inc
les
and
int
sti
cld
loopne
jl
xor
cmp
cmp
fs
addb
and
mov
cltd
pop
data16
add
adc
push
xchg
mov
ret
jp
bound
dec
add
inc
push
sar
cmp
xor
repnz
mov
mov
lahf
inc
inc
rol
jl
xchg
imul
add
xor
je
rcrl
cmp
sbb
fistl
lods
or
jno
divb
and
xlat
or
int
cmp
adc
fdivrl
sbb
dec
inc
lock
xor
pop
rcr
mov
adc
stos
cmp
mov
mov
pop
mov
fstl
push
cmpsb
jns
sbb
mov
repz
dec
out
and
dec
inc
and
cmp
movsb
or
movsb
push
fcomps
add
jecxz
push
cli
inc
ret
mov
lahf
adc
cvtps2pd
inc
cmc
in
lcall
mov
jl
pop
adc
xor
adc
mov
jo
loopne
les
mov
iret
icebp
ret
inc
xchg
pushf
out
xorb
cmp
push
and
push
pop
loopne
mov
xor
sbb
xchg
les
sbb
pop
test
xor
jle
pop
pop
cld
sub
enter
mov
add
imul
imul
lea
add
inc
loopne
mov
jae
movsl
mov
sbb
mov
addr16
and
addr16
mov
ret
mov
inc
dec
dec
push
in
cmpsl
int3
cmp
dec
out
push
mov
xchg
mov
pop
mov
pop
mov
push
inc
outsl
pop
insb
out
cmp
add
cmp
pop
dec
leave
jle
cltd
hlt
add
popf
rcr
popa
addl
mov
dec
mov
xchg
icebp
or
rcll
clc
popf
sahf
ljmp
xor
cmp
cmp
sbb
sub
push
addr16
sti
and
xchg
sti
imul
inc
aam
pop
addl
sub
pop
push
test
mov
inc
sub
mov
and
push
sbb
jecxz
mov
push
xchg
lock
cltd
int
cmpsb
movsl
cld
mov
arpl
lahf
leave
inc
jmp
xor
je
out
push
addr16
fidivrl
sbb
xorl
imul
fsts
shrl
jne
jecxz
stc
movsb
popf
imul
jp
dec
in
cltd
cmp
movsl
loope
add
ror
add
cltd
sub
sub
lock
and
dec
arpl
mov
add
sub
cld
adc
mov
inc
and
pop
sub
int3
cmp
lahf
mov
loope
mov
xor
jno
add
mov
xor
rolb
dec
xlat
les
adc
pop
xchg
mov
outsb
pop
out
jg
mov
or
ret
pusha
and
rcrb
addb
add
ljmp
stc
leave
add
fldt
fs
jnp
fadd
and
std
iret
nop
pop
out
pop
outsb
fnstcw
pop
aaa
pop
adc
xchg
push
cli
clc
mov
mov
or
ret
jge
call
add
cmpsl
sub
loopne
loope
pop
mov
aas
stos
nop
push
inc
out
sarb
fs
lcall
enter
in
and
mov
sbb
dec
mov
loope
imul
ja
and
add
hlt
loope
jae
mov
aas
jmp
cmpsb
sbb
psubsb
mov
js
inc
test
mov
ret
push
out
sub
aas
lcall
push
test
pop
and
xor
add
jmp
scas
inc
dec
cmp
scas
xchg
sub
lret
dec
add
mov
xchg
add
mov
or
xchg
and
add
dec
and
in
add
repz
aas
subl
jno
mov
jnp
pop
xor
fnstenv
call
hlt
xchg
sbb
jl
and
jmp
lahf
dec
pop
or
add
add
out
push
lcall
das
and
loop
cmpsb
fsubl
imul
iret
mov
xchg
notl
hlt
add
cmp
sbb
mov
sub
inc
mov
xchg
lods
pop
gs
adc
fnstsw
mov
inc
aam
sub
pop
test
sbb
mov
push
sbb
xor
jns
fs
jnp
sbb
cld
sbb
add
mov
movb
daa
xor
leave
dec
add
cmpsb
adc
xchg
clc
pushf
add
cmpsb
scas
bound
dec
pop
push
add
movsl
mov
pop
fnstsw
cltd
popf
xchg
outsb
push
or
push
mov
les
mov
cmp
in
jg
test
sbb
in
or
in
push
in
test
cmp
adc
push
sahf
jne
sete
mov
imul
mov
arpl
xor
or
loopne
inc
xor
jbe
mov
jmp
ret
inc
dec
cmp
test
mov
movsb
loopne
and
imul
push
push
int
mov
movl
cmpsl
in
pop
xchg
mov
cmp
dec
sbbb
cmpsl
stos
lcall
jnp
ficoml
sar
pop
push
pop
ljmp
arpl
add
gs
aas
push
in
stos
cmp
incl
test
xor
mov
mov
mov
jnp
push
test
insb
cmp
lret
inc
xchg
rorb
push
mov
imul
call
les
loop
and
or
mov
lock
pusha
in
pop
or
lods
into
shlb
cli
sar
mov
cs
out
jnp
cmpsl
dec
mov
ss
mov
or
loopne
cmpsb
mov
or
xor
sbb
xor
push
aaa
out
jbe
push
insl
or
fisubs
clc
test
fdivs
lds
loopne
sbb
test
adc
xor
stos
push
xor
cltd
dec
dec
outsb
mov
ljmp
adc
in
adc
int
fisttpll
int3
sub
es
lcall
mov
pop
cltd
pop
in
movsb
xchg
or
mov
rcrl
xchg
shll
or
mov
lret
loope
ds
test
nop
mov
mov
cli
cmp
sbb
enter
scas
pop
jns
lods
loop
add
pusha
cli
sbb
mov
sub
shl
insb
ljmp
sarl
mov
hlt
sbb
lods
pop
jnp
pop
test
fstp
mov
sub
push
test
fcmovne
push
push
shrl
mov
sub
arpl
fildll
movsl
js
fs
or
into
or
sub
jmp
push
push
outsl
mov
pop
adc
xchg
out
jb
xchg
leave
int3
gs
lret
inc
fisubl
xor
test
adc
aad
loopne
push
sub
xchg
cmp
pop
cmp
adc
push
imul
popa
pop
or
loop
fidivrs
pushf
jg
inc
xchg
lods
inc
jmp
jle
lret
pop
jnp
and
inc
sbb
bound
sti
mov
in
and
push
jbe
mov
bnd
or
add
sub
ficompl
gs
push
fcomps
inc
jecxz
push
orl
sub
repz
dec
outsb
cli
mov
addb
xchg
jecxz
pop
mov
inc
mov
xchg
test
cmp
insl
mov
je
sbb
inc
xchg
xor
arpl
mov
int
mov
cmp
loope
nop
xor
mov
mov
inc
mov
test
out
jo
jge
cs
add
scas
lret
insb
and
repnz
ljmp
shll
adc
roll
imul
jo
sarb
inc
popf
push
xchg
cmpsl
scas
je
jo
push
je
jae
ds
test
imul
je
xchg
mov
dec
sub
xor
xlat
int3
out
push
xor
mov
data16
xor
pop
xorb
mov
dec
mov
gs
and
jne
push
popf
testl
insl
jne
xor
lods
sub
loopne
insl
pop
sahf
clc
fildl
cli
mov
fsubrs
aas
and
int
ja
add
jae
lods
shl
mov
adc
int3
and
dec
push
pushf
mov
loopne
fcmovu
xchg
ret
mov
pop
sbb
and
fimull
je
aam
or
or
add
sbb
lock
jnp
cmp
inc
xchg
testb
insb
hlt
movsl
pop
mov
test
out
push
das
mov
cld
xchg
mov
fsubl
fsubl
xchg
ja
jnp
jge
mov
jns
and
adc
jns
loope
stc
icebp
sbb
orb
jle
push
mov
mov
sub
xorps
lock
inc
push
arpl
movsb
dec
mov
outsb
jno
lcall
insl
hlt
and
mov
mov
push
or
ds
test
lock
scas
shrl
push
sahf
cld
mov
out
mov
sbb
adc
cmp
sbb
jl
jo
test
pop
add
push
and
jmp
dec
dec
push
ret
inc
es
jb
daa
jmp
ret
aam
orl
and
add
imul
cmc
xchg
pop
cmpsb
mov
rclb
sub
push
xor
xchg
bound
outsl
sub
ret
push
jge
xor
lods
mov
xchg
cli
iret
cmp
push
jp
push
xor
pop
cmp
ja
test
mov
mov
movsl
imul
daa
loope
fsubr
jle
in
lock
xchg
cmp
pop
dec
pop
stos
push
clc
mov
pusha
ljmp
adc
into
scas
addr16
je
mov
inc
fldenv
sub
dec
xor
jecxz
add
dec
in
imul
or
pop
xchg
inc
std
shll
in
jge
jmp
sbb
das
sbb
cmp
cs
sub
aam
das
lret
and
sbb
and
jbe
fwait
outsl
xor
sbb
fidivrl
jo
mov
sbb
xchg
movsl
cmp
pushf
mov
test
or
popf
movsl
jne
dec
jnp
add
xor
shlb
popf
mov
adc
or
xor
xor
push
stos
out
push
add
adc
jno
mov
pushf
jnp
push
lret
xor
adc
adc
fstps
bnd
sbb
jno
lds
jmp
je
and
dec
nop
sahf
pop
lds
sahf
push
mov
repz
pop
in
subb
es
aas
icebp
mov
test
xor
loope
fs
fsubrp
ja
pop
fcmovbe
or
arpl
jbe
sbb
scas
sub
dec
lds
cmp
push
cwtl
xchg
popa
mov
ret
int
cwtl
push
and
sub
add
sbb
hlt
cld
cltd
mov
pop
bound
int
fidivrs
xchg
mov
add
sub
mov
fstl
pushl
sbb
pop
sahf
and
call
pop
aas
call
jb
or
mov
cmp
dec
jns
xchg
clc
out
stos
cmpsb
roll
sti
jp
and
adc
bound
mov
adc
shlb
push
imul
push
add
pop
and
paddsb
out
cmp
ja
test
adc
add
cli
test
stc
pop
mov
and
xlat
dec
inc
cltd
pop
test
jp
adc
pop
int3
push
mov
inc
fnstenv
pop
mov
int
shlb
sub
fsubs
and
pop
xchg
sbb
js
pop
jl
lods
fdiv
aaa
leave
ffree
lock
push
sub
imulb
ss
push
dec
sarb
jle
jecxz
rcr
leave
ret
push
fwait
xorl
stos
sbb
xor
repz
fiadds
push
or
fwait
and
inc
jg
or
addr16
jp
sbb
fstpt
xchg
jnp
push
imul
jge
sub
pop
adc
jno
es
push
lods
inc
frstor
jge
add
icebp
pop
add
jl
sub
push
cmp
inc
aaa
out
xchg
mov
rcrb
rcrb
or
addr16
add
xor
cmp
jns
dec
sahf
mov
shlb
dec
fsubl
repz
xchg
xorb
repz
rcll
cmp
inc
rclb
inc
adc
adc
adc
icebp
add
or
sbb
xchg
in
adc
sbb
sub
push
in
jp
fldcw
mov
mov
mov
icebp
pusha
scas
lsl
pop
bound
fwait
roll
mov
inc
ss
arpl
scas
or
adc
ljmp
xchg
in
jno
aaa
lods
jecxz
push
rcrb
cmp
mov
in
jae
sahf
xor
test
inc
or
push
cmc
std
push
das
inc
or
cmp
fildl
jg
shll
inc
dec
incl
add
icebp
pop
lret
mov
xchg
adc
xchg
orl
cmp
fcompl
or
repz
jne
mov
ret
adc
int3
dec
sbb
dec
jae
add
in
jle
adc
sbb
cmp
arpl
lcall
popa
into
es
std
pop
fs
cmpsb
mov
leave
adc
insl
into
pop
loop
push
jge
test
push
pop
push
shrl
push
sub
mov
sub
leave
insb
call
sbb
sbb
js
cs
loopne
addb
push
mov
add
stos
loope
sbb
xor
jge
jb
outsb
jb
cwtl
jb
xor
in
xlat
adc
pop
jl
jg
fdivrs
andb
repnz
scas
sub
cltd
stc
popa
fcompl
inc
ss
lret
dec
rorl
mov
fimull
pop
in
push
mov
inc
mov
xchg
bound
movsb
sbb
rclb
cmp
add
cli
xor
mov
jnp
dec
mov
jp
sub
jne
lret
ret
mov
mov
jg
je
and
pop
push
fmul
xchg
daa
aaa
addb
sbb
ja
xchg
xor
jnp
pop
cmp
outsb
nop
xchg
sar
mov
in
cmp
sbb
adc
xor
pop
adc
dec
mov
mov
or
fidivs
jbe
sbb
movsl
fldcw
cli
fs
pop
cld
pop
inc
ljmp
xchg
insb
inc
mov
ror
lea
sbb
out
mov
jo
jnp
dec
or
aaa
push
add
push
insb
pop
mov
test
pop
pusha
ss
mov
bound
dec
fndisi(8087
jo
push
aas
or
dec
js
arpl
roll
and
addr16
mov
fxch
cmc
movsl
out
or
mov
icebp
popa
fnsave
imul
jle
cmp
jnp
mov
pop
cmp
sbb
mov
cmp
fs
sub
loopne
decb
pop
jle
loop
shl
jo
insb
fcos
sahf
aas
in
fwait
cmp
add
jecxz
sbb
xchg
sub
repz
jecxz
xor
in
mov
loopne
arpl
cmpsl
loope
mov
fidivrs
ja
sbb
rorl
jb
loop
ljmp
pop
push
iret
mov
aaa
fistps
and
outsb
push
xchg
jae
test
push
sbb
push
pop
faddl
rcr
ljmp
sbb
popf
cmc
cmp
xchg
jbe
mov
pop
sub
je
in
int3
xor
jge
push
dec
movb
or
fnstenv
pop
imul
cmp
imul
jg
add
out
inc
sbbl
es
mull
shl
pop
push
outsl
pop
lock
ss
push
mov
jno
xor
sbb
mov
mov
sahf
lods
jno
addr16
cld
scas
push
fidivl
xorl
jmp
out
lcallw
incl
add
test
fldlg2
mov
xor
inc
add
iret
dec
dec
sub
outsl
or
push
das
fs
jmp
jge
test
cld
popa
sti
cmp
add
jbe
jl
jecxz
mov
jbe
je
lret
dec
aaa
push
or
ja
cltd
cmp
or
sub
mov
cwtl
aam
and
int3
mov
mov
pop
jns
jg
aas
into
ret
movsb
xchg
mov
les
outsb
es
cmp
dec
aas
mov
cmp
jnp
mov
mov
pop
in
cmpb
inc
push
aaa
shll
pop
xchg
adc
jmp
aas
push
rclb
lret
cmpsl
es
rorl
out
ficoml
lret
pop
or
or
inc
pop
mov
push
jmp
ret
cmp
scas
mov
test
mov
or
repnz
adc
jb
xor
jp
and
je
aam
notb
cmpsb
in
arpl
mov
sbb
pop
into
or
pop
push
sub
repnz
pop
pop
repnz
out
push
mov
cli
pop
cltd
dec
inc
fldt
cs
jle
sbb
jp
inc
scas
outsl
ja
outsl
cmp
and
and
mov
out
or
rcr
ss
decl
jne
cmp
je
or
in
cwtl
js
pop
dec
jb
pop
add
pop
mov
xor
sub
jns
lret
sbb
xchg
pop
icebp
push
in
movsb
pop
int3
stos
xchg
jmp
mov
pop
bound
sbb
pop
sub
daa
or
add
dec
or
mov
pop
call
pop
sub
stos
pop
and
mov
jle
dec
lock
out
mov
scas
push
loop
aad
andb
stos
add
push
loopne
adc
and
test
out
out
pop
nop
push
push
adc
jg
cltd
add
xchg
movsb
ret
sarl
gs
sub
xchg
ret
xor
and
fwait
sbb
mov
fdivrl
test
xor
in
clc
dec
xor
mov
jb
jmp
or
mov
mov
in
push
xor
outsl
aas
xor
roll
pop
dec
pop
bswap
rorb
lods
jne
jmp
xchg
orb
and
repz
jb
in
adc
xchg
push
sbb
aaa
outsb
cs
xor
xchg
aaa
adc
inc
sbb
repz
cltd
sub
cmp
loop
dec
lock
xor
lcall
popf
jnp
jmp
adc
sbb
outsb
mov
inc
stos
test
push
mov
cs
dec
das
adc
and
dec
jne
cs
sti
movb
and
mov
fdivrl
cwtl
lods
loopne
mov
sub
lahf
xor
mov
cmp
popa
sub
fstl
div
aaa
pop
dec
push
movsb
mov
js
pusha
or
daa
aaa
outsb
sbb
mov
aaa
sub
pusha
pusha
sbb
pop
scas
in
sbb
mov
mov
mov
mov
sbb
gs
mov
es
in
adc
lock
fcmovb
push
es
xor
sti
sbb
push
je
lea
push
filds
jecxz
cwtl
cli
in
jmp
cmp
sbb
sbb
fcoml
cli
frstor
nop
jle
dec
lcall
loopne
xchg
pop
repz
loop
mov
into
divb
ss
sub
in
sahf
push
pop
mov
scas
ret
mov
lcall
arpl
leave
std
push
push
test
push
jb
mov
push
jbe
lret
std
xor
adc
shl
jmp
daa
inc
hlt
jl
push
iret
hlt
sahf
xor
xor
test
push
jae,pt
mov
aas
testl
jg
out
out
lock
sbb
inc
fists
loop
sub
xchg
pop
mov
jns
int3
fsubr
xor
or
icebp
cmpsb
jno
mov
jmp
popf
dec
es
mov
xor
pop
jge
in
stos
imul
sarl
pop
into
imul
and
xchg
dec
in
mov
dec
pop
pusha
lret
dec
xor
cmp
loop
mov
inc
dec
out
sbb
and
arpl
adcb
loopne
push
lahf
sub
cmp
sub
js
push
pop
pop
xor
gs
xor
mov
in
cld
loopne
xor
stc
sbb
cmovbe
cmpsb
pop
sbb
test
dec
jl
insb
loope
fisubrs
call
notl
shr
jge
test
cwtl
or
xchg
mov
fistpll
jns
jno
xchg
fsubrl
push
es
into
fstpt
mov
rolb
mov
xchg
test
add
push
sub
or
xor
sub
jp
lds
insw
fucomip
lods
dec
inc
push
bound
xchg
cld
add
mov
testl
lock
mov
or
into
mov
rcr
insb
dec
fiaddl
ja
mov
pop
or
loope
and
pop
scas
scas
sbb
inc
cmp
mov
lock
shll
adc
clc
sub
pop
sub
pusha
mull
jle
or
shl
jg
movsl
cmpsl
pop
push
fxch
lods
out
in
cli
mov
cld
popa
cmpsl
mov
cmp
icebp
fadd
adc
mov
inc
pusha
popa
pushf
ror
mov
fucom
mov
test
fmulp
xor
sub
aad
xchg
in
xor
test
insb
int
adc
loop
jge
scas
jg
jb
and
int
dec
jmp
xor
in
into
lods
xlat
mov
je,pn
push
mov
insl
pminsw
push
into
mov
gs
int
incb
xchg
lds
pop
lahf
dec
push
decb
inc
in
adc
jge
dec
push
rcrb
sbb
adc
adc
pop
push
movsl
lret
outsl
outsl
mov
adc
outsl
mov
outsb
push
std
fnop
test
and
and
fcoml
es
pop
mov
lock
lret
sub
push
das
inc
mov
mov
test
and
fsubs
mov
jge
pop
add
test
mov
or
sub
xchg
pop
sbb
aaa
add
jne
test
je
imul
mov
inc
push
in
leave
sarl
push
lds
push
xor
aam
inc
push
in
pop
inc
scas
cmp
aad
mov
aam
dec
jmp
mov
xor
or
and
cmc
dec
es
shrl
insl
push
mov
mov
sbb
in
mov
js
jo
fcmovnu
mov
xor
push
lds
in
stos
push
in
cld
btr
sahf
arpl
in
or
inc
add
xlat
pop
mov
add
mov
mov
imul
in
jl
xchg
mov
pop
add
js
ret
out
daa
xchg
jne
out
call
fstps
and
sub
test
push
mov
in
mov
mov
loopne
inc
pop
in
dec
mov
notb
push
mull
xchg
xor
sbb
enter
loopne
sbb
mov
sub
mov
fwait
seto
xchg
push
sub
xchg
shrb
push
fldt
sarl
jne
cltd
hlt
add
push
jle
sub
ja
push
cmc
pop
daa
cld
jnp
out
mov
push
inc
aas
jecxz
stc
mov
int
push
out
pop
jbe
inc
mov
cwtl
call
push
or
or
pushf
mov
std
enter
arpl
xchg
add
sbb
mov
lahf
xchg
stc
outsb
xchg
mov
into
addr16
pop
fsubrl
lcall
addb
push
aad
gs
inc
fs
adc
andb
dec
inc
mov
cmc
lret
xchg
loope
mov
shlb
into
test
inc
xor
inc
sbb
cmpsl
loop
pop
cmp
mov
xchg
cmpsb
dec
or
stos
cli
test
mov
pop
add
push
addr16
jns
pusha
mov
iret
stos
sbb
add
nop
jne
call
sti
fsubp
pop
imul
add
jnp
and
push
push
enter
daa
xor
scas
dec
xor
gs
mov
dec
jge
xor
insl
ja
pusha
pop
adc
mov
or
daa
xchg
rcrl
arpl
icebp
push
adc
cmp
std
out
adc
push
rcr
nop
cmp
aas
fstl
sarl
movsb
and
pop
and
dec
sarl
mov
stc
dec
lock
push
dec
cmp
and
cmc
lahf
pusha
fistps
jns
icebp
push
lret
sub
xchg
pushf
popf
fdivs
loope
cmpsl
mov
sbb
jb
and
stos
dec
and
mov
js
cmp
push
lea
icebp
test
fisubl
daa
loop
dec
mov
sbb
scas
xchg
add
xchg
cmp
insb
test
sahf
adc
mov
and
jl
xorl
inc
outsl
jge
dec
sbb
icebp
pop
mov
xchg
push
sbb
mov
mov
fistpl
pop
mov
cmp
sub
int
imull
cmp
add
je
out
pop
bnd
mov
gs
mov
lret
add
sbb
lret
mov
mov
cwtl
sub
add
push
sub
sub
push
xor
sarb
bound
jb
jmp
cld
sar
fsubp
insb
mov
cmpsb
jbe
xchg
mov
inc
mov
mov
or
popf
xchg
lds
sbb
add
sub
sub
fldenv
shlb
int
sbb
inc
mov
lock
mov
push
out
or
jl
xorb
jmp
jbe
dec
in
sar
jmp
adc
add
xor
fwait
int
pop
in
cmpsb
sbb
sbb
inc
dec
mov
je
lcall
clc
lahf
cwtl
cmp
sbb
inc
ds
sbb
adc
loop
pushf
pushf
adc
in
or
call
lods
push
mov
fimuls
add
lahf
cli
in
lea
push
fistpl
and
xor
loope
fstps
sbb
inc
sub
and
cmp
cmpsb
fmulp
cmp
push
jecxz
sbb
lret
jg
mov
pop
xchg
xchg
popf
dec
cmp
mov
or
repz
inc
les
ds
xchg
xor
xchg
jo
cli
pushf
fldcw
lock
out
rolb
lret
push
and
push
mov
int
sbb
inc
xor
and
pop
inc
mov
mov
cmp
fisttps
std
test
mov
es
push
adc
leave
leave
xlat
jl
or
jl
xor
xor
fsubrp
lock
mov
dec
in
ss
test
or
divl
stos
xchg
or
fdiv
adc
js
push
fistl
add
pop
lret
mov
adc
lcall
add
jge
jl
ficoms
jp
jp,pt
push
je
inc
mov
aad
push
shrb
push
dec
inc
sub
sub
pop
dec
xchg
xchg
and
in
add
inc
adc
mov
lds
in
jno
sbb
xor
insb
lock
cwtl
lahf
cmp
int3
iret
mov
and
jno
push
mov
xchg
or
or
lret
xor
jecxz
xchg
push
bound
stos
xchg
jb
pop
rcr
pop
pop
push
adc
add
ja
add
jbe
dec
pop
pop
lret
popf
sbb
mov
mov
jne
jno
and
lods
int
inc
inc
jb
out
adc
push
xor
lea
or
repnz
leave
sahf
or
sub
fxch
nop
lcall
scas
out
xchg
scas
mov
popa
adc
xchg
into
sub
and
xorl
stos
pop
in
pop
inc
push
mov
iret
fwait
ss
mov
in
int3
push
roll
into
enter
mov
xlat
pop
jg
and
loope
loope
iret
dec
cmpsl
mov
popa
je
test
lock
orb
jle
push
jecxz
or
jne
popa
push
test
imulb
mov
iret
sub
loop
and
push
in
insl
imul
cmp
inc
xchg
je
imul
pop
sbb
push
aaa
sarb
adc
icebp
dec
addr16
mov
sbbb
or
outsb
mov
push
sti
fldcw
int
xchg
pop
jmp
test
sub
cmp
test
addl
mov
adc
ss
in
push
and
aad
push
rolb
fisubrs
xchg
aad
jmp
xchg
sarb
jp
jmp
pushf
hlt
and
repz
rcl
outsl
and
and
out
sub
inc
xlat
adc
jns
jbe
mov
rorb
ja
arpl
pushf
pop
bound
outsl
out
out
push
iret
jg
fbstp
push
gs
sti
push
das
jae
xchg
dec
sahf
pop
inc
xor
jbe
scas
mov
rcrl
mov
push
cli
mov
nop
mov
cmp
pop
adc
mov
and
cltd
lret
xor
mov
mov
cmpsb
sbb
int
jae
nop
jp
das
mov
nop
ret
pop
mov
fwait
ret
adc
incl
test
int3
fcompl
cmp
adc
dec
xchg
sbb
fs
loop
fsubp
popa
sbb
sbb
arpl
push
jge
jle
inc
mov
xchg
xor
mov
pop
adcl
shl
push
scas
dec
push
and
pusha
addr16
inc
test
repnz
push
cmc
sub
and
in
pop
lahf
lret
ret
add
xchg
fisubrl
filds
adc
mov
fildl
movsb
xor
repnz
movsl
pop
lods
pop
repz
outsl
push
sahf
pushf
lret
insb
xchg
loopne
sbb
and
jns
dec
xchg
cmpb
aad
out
inc
mov
es
mov
jmp
or
cmp
mov
rcrl
hlt
call
mov
popf
movsb
push
mov
mov
mov
negb
test
ljmp
mov
and
add
test
dec
push
stc
push
cltd
out
mov
push
push
adc
jle
test
add
std
push
test
or
push
dec
fisubrl
iret
xor
sub
lret
iret
int
mov
sarl
lret
dec
aam
sub
xchg
or
pop
repnz
mov
mov
and
aas
ds
mov
and
pop
sbb
add
or
cmp
jbe
arpl
push
cmpsb
xchg
lcall
lock
pop
sub
cmp
push
mov
movb
or
mov
lahf
fnstenv
stc
dec
and
mov
aad
sahf
imul
push
dec
orl
rcl
inc
les
imul
out
mov
jno
fistpll
jno
dec
iret
in
and
jle
mov
std
fstpt
mov
addr16
jge
cwtl
out
shlb
and
sub
in
insb
cmp
lahf
push
arpl
dec
cmpsl
push
icebp
adc
test
rcll
call
dec
lds
xchg
test
inc
ret
lret
fstps
pop
decl
and
add
xchg
fldl
xchg
xor
push
xchg
loopne
add
push
shlb
inc
adc
cs
pushf
cmpsb
push
fs
push
mov
cmpsl
inc
inc
loopne
lods
mov
cli
mov
mov
add
scas
mov
pop
xor
loop
movb
push
lock
popf
out
sbb
fs
sahf
pop
mov
push
jae
repz
sti
cs
cmp
jg
mov
rcll
rcrb
add
and
into
sbb
jno
inc
popa
mov
cmp
xchg
jnp
dec
ret
fwait
lcall
ss
and
adc
sar
iret
fisubs
adcb
std
es
insb
or
call
add
inc
aad
xchg
mov
mov
stos
pop
push
jo
add
fisttpll
pop
test
inc
inc
ds
stos
add
push
dec
cmp
shr
in
dec
out
jno
out
dec
push
jne
jp
gs
push
lret
xor
mov
fwait
rcll
sbb
jnp
setl
or
icebp
test
pusha
jmp
cs
stos
add
pop
test
pop
divb
dec
negl
cmp
outsl
rcll
loopne
add
incb
cld
pop
shrb
mov
movsb
mov
in
cmc
inc
fisubrs
mov
in
lret
sbb
mov
insb
jnp
mov
sub
loopne
jo
mov
je
rcll
inc
xchg
add
out
pushf
not
inc
loop
and
std
clc
dec
lock
cmp
or
fimull
mov
sub
mov
ret
and
out
in
gs
fisttps
pop
jb
fidivrl
imul
xor
sbb
imul
or
andb
or
stos
sub
sarl
jbe
mov
mov
ja
mov
cli
mov
out
and
push
arpl
sbb
jle
dec
xchg
mov
mov
scas
add
mov
inc
xchg
mov
mov
filds
xor
lret
pop
add
aas
clc
mov
scas
fcoms
pusha
jmp
lods
lret
push
or
mov
je
mov
sbb
loop
cmp
pop
mov
pop
icebp
ret
iret
push
cmp
scas
and
stc
dec
adc
pop
push
push
mov
mov
mov
adc
cmp
rdpmc
pop
pop
sbb
int
push
popa
idivl
adc
xchg
add
rcrb
and
out
push
xchg
dec
sbb
and
jl
and
xchg
pop
sbb
sbb
jnp
push
addb
fidivrs
sub
les
push
iret
mov
gs
ficoms
cmpl
mov
or
xor
and
add
mov
cltd
or
sbb
push
sub
into
pop
adc
or
push
mov
inc
mov
or
outsb
or
aas
or
push
and
and
out
dec
into
dec
shll
bound
into
enter
pop
fbstp
pop
jns
mov
adc
popa
sub
mov
addr16
jnp
test
mov
and
sub
lret
pop
pop
adc
push
jmp
xchg
pop
pop
dec
jp
test
out
jae
cmp
ret
xchg
cmp
shl
push
sbb
push
mov
xor
sub
push
dec
cwtl
push
inc
jecxz
and
xor
pop
das
push
add
jbe
xchg
stos
sub
jo
mov
movsl
sbb
aam
xchg
jge
sbb
sti
into
es
pop
enter
xor
mov
mov
test
in
cmp
das
iret
jbe
xor
mov
sahf
imul
xor
xlat
dec
call
les
shl
shl
ja
or
xchg
je
xor
int
enter
add
dec
int3
pushf
in
imul
or
jb
push
cmpw
mov
imul
pop
bound
cmp
in
stc
dec
jmp
insb
ss
inc
out
xchg
into
mov
xchg
dec
inc
dec
and
push
cld
sub
ja
insb
ficoms
mov
lcall
mov
push
xor
daa
fisttps
insl
aam
je
inc
sbb
add
adc
jg
pop
inc
movsl
mov
lea
jmp
and
pop
and
pop
sub
dec
stos
ds
or
movsl
or
orb
or
sub
fimuls
mov
js
and
adc
dec
mov
ficoml
jmp
xor
inc
xchg
mov
cmp
push
hlt
js
mov
push
xorl
je
xor
push
jmp
pushf
outsb
cmp
jge
adc
shl
int
or
push
or
adc
insl
idivl
sbb
or
data16
jae
outsb
call
insl
jo
in
or
cli
cmpsb
mov
xorb
test
sub
test
dec
sbb
mov
inc
shll
icebp
dec
outsb
jecxz
test
xchg
push
in
dec
lods
pop
mov
mov
xchg
andl
adc
dec
pop
xor
outsb
andl
jecxz
test
jmp
test
cmp
sbb
movsl
repnz
mov
sub
ret
out
insb
bound
cmp
shlb
xchg
fwait
lods
fs
outsl
out
lcall
bound
pushf
gs
pop
and
stos
or
fsubl
arpl
aad
add
jle
push
jp
jae
aaa
jns
jne
fnstcw
test
mov
imul
icebp
loopne
adc
aam
les
cwtl
je
lret
fwait
xlat
dec
loopne
int3
lods
or
imul
cmp
xor
aaa
out
mov
add
inc
jo
loope
popa
jmp
imul
push
push
cmp
inc
mov
pop
push
jno
or
enter
push
addr16
xchg
sbb
filds
test
adc
fs
imul
sbb
aas
pop
in
scas
mov
pop
jo
aam
adc
fwait
dec
xor
mov
mov
outsl
cli
popf
pop
cmpl
mov
add
lret
cmp
adc
cs
xchg
aam
nop
movsl
sub
jne
pop
jbe
pop
sahf
adc
sbb
mov
pushf
aad
cli
les
mov
pop
push
push
mov
cli
mov
push
dec
mov
inc
sbb
push
mov
fstpt
sub
shl
jno
loopne
sub
cwtl
pop
mov
test
sbb
push
mov
stc
lahf
add
add
xchg
pop
push
and
int
movsl
pop
xlat
xlat
add
dec
mov
xorl
pop
lods
dec
or
inc
movsl
adc
adc
daa
popf
lods
test
or
push
pop
jns
test
loop
imul
and
adc
aaa
adc
inc
dec
call
mov
in
notb
mov
lret
jns
pop
xlat
push
push
fisttps
xor
out
mov
xchg
dec
in
xor
pop
js
aaa
mov
in
xchg
aas
hlt
jg
mov
inc
ss
stos
icebp
sbb
mov
sub
and
stos
repz
add
xchg
popa
faddl
sbb
cmpsb
adc
int3
std
pushl
es
call
fwait
test
in
inc
cmp
jne
mov
jp
lahf
inc
push
lret
adc
dec
mov
push
cs
mov
fmuls
aaa
in
push
jno
push
fidivrl
and
fstps
xor
dec
push
add
je
push
mov
push
cmc
add
pop
bound
pusha
sbb
jae
xchg
cwtl
inc
push
orb
int
int3
fucomi
jp
rorl
jae
lods
cwtl
add
test
sub
pushf
xchg
cmp
into
bound
mov
aam
sub
pop
into
sub
xchg
adc
cmc
dec
mov
sub
lcall
cmp
incb
shrb
into
push
mov
push
xor
jb
and
sbb
xor
insb
jne
pop
aas
lods
xchg
sbb
pop
and
or
jno
cwtl
mov
clc
cmp
sbb
fs
imul
mov
add
stc
clc
xor
pop
in
xchg
fwait
jg
xor
adc
or
aas
inc
sub
dec
bound
pusha
xchg
ds
sbb
adc
xor
lock
mov
adc
popa
mov
out
push
cli
jecxz
fistpl
arpl
mov
and
notl
jb
data16
repz
arpl
mov
xor
mov
push
fdivl
imul
in
mov
sbb
cmp
notl
and
jl
aaa
pusha
xor
xchg
outsb
sbb
jl
movsb
pop
lock
addr16
or
cvttps2pi
mov
lea
bound
cwtl
and
nop
movsb
fidivl
ss
gs
aad
cmc
add
lret
divl
rol
push
adc
into
sti
imul
ja
dec
rcrb
inc
cmp
ljmp
imul
pop
push
xchg
fists
dec
jl
loope
icebp
mov
dec
mov
imul
mov
idiv
scas
mov
dec
in
pop
push
es
mov
xchg
or
cltd
inc
lret
inc
fisubs
cmpsl
lcall
xlat
mov
repz
sub
lods
pop
pop
xor
adc
add
mov
hlt
jns
mov
adc
cmp
and
in
and
sti
pushf
pop
mov
cltd
test
dec
mov
inc
inc
jmp
mov
insl
fistpl
add
cmpsb
jecxz
sub
push
stc
sub
sub
pop
push
mov
leave
xor
add
xchg
popf
ljmp
iret
lods
mov
es
mov
xchg
cmp
sbb
lret
inc
scas
jno
call
sahf
push
enter
aad
movsb
ret
mov
jmp
scas
out
push
jle
int
xor
add
or
inc
push
pop
out
push
addb
xchg
outsb
sarb
ror
dec
push
pop
les
cmpsb
fwait
xor
mov
sbb
mov
add
testb
pop
dec
mull
mov
dec
stc
in
ret
mov
imul
add
cmpsl
sahf
push
mov
movl
addr16
dec
rcrb
std
pushf
mov
lea
movsb
fst
dec
sub
out
dec
pop
fnstsw
lcall
jne
movsb
xchg
imul
adc
out
mov
and
das
and
leave
pop
call
enter
mov
adc
dec
add
pop
jne
jns,pt
int3
inc
push
jle
jmp
clc
fwait
xlat
out
test
iret
dec
or
fwait
loop
pop
jg
stos
push
push
jg
xchg
nop
xorb
pop
mov
xchg
inc
fs
imul
orb
out
pop
xchg
mov
push
sbb
popf
adc
push
aad
push
cmp
mulb
ret
ret
shlb
in
mov
jp
test
dec
and
lods
aam
adc
cmp
hlt
xor
cmpsb
cmpsl
sarb
mov
mov
idiv
ja
fwait
inc
pop
inc
pop
rcl
inc
add
fcomps
lret
ljmp
enter
mov
dec
add
push
sub
xchg
cmp
cld
cwtl
fucomp
int3
pop
pop
xchg
xchg
je
lea
adc
mov
push
ss
dec
in
fbld
mov
loope
push
loope
mov
outsl
and
and
sub
and
sarb
inc
ret
leave
or
jae
pop
mov
flds
jne
lea
adc
pop
std
fidivs
mov
sbb
xor
jne
mov
jbe
inc
mov
cld
jae
add
cmp
adc
xlat
dec
jl
jmp
pusha
push
out
sub
inc
sahf
jmp
pusha
or
inc
ljmp
addb
xchg
jnp
pop
lret
call
sarb
lods
xchg
out
addr16
in
or
popa
pop
mov
jno
mov
pop
fnstenv
daa
mov
mov
cmpsl
mov
adc
fdivs
xchg
lods
not
ljmp
cmpsb
loope
lds
gs
stos
and
inc
js
jae
repnz
dec
rorl
cltd
sub
inc
adc
adc
dec
hlt
and
cmp
xchg
gs
sbb
dec
and
fwait
lahf
sarb
inc
push
rolb
out
cmc
fucomp
lcall
mov
and
jae
push
xor
mov
call
mov
adc
xchg
cmp
jmp
mov
pop
pop
xor
xor
bswap
sbb
push
ja
cmp
shrb
cmp
lret
imul
push
mov
mov
xchg
sbb
ret
sbb
das
adc
xor
or
lock
ljmp
pop
shrb
insl
mov
jge
sahf
in
ljmp
xchg
pop
and
aas
jae
push
inc
lods
add
push
aad
inc
or
sub
pop
repz
rolb
les
rolb
mov
jnp
int3
dec
adc
jg
roll
ja
dec
mov
pop
dec
std
jo
subl
ss
out
mov
ret
outsl
pop
add
push
cmc
mov
icebp
seta
adc
sbb
std
jmp
xchg
pop
mov
or
push
or
mov
insb
rorl
ret
test
insl
mov
add
adc
mov
lods
daa
jmp
and
mov
inc
repnz
pop
and
xor
sti
xchg
popl
xchg
xor
sub
add
add
mov
mov
pop
fidivrs
das
xlat
xchg
jmp
int
clc
and
arpl
loope
pop
sub
inc
stos
sbb
push
jle
push
es
lahf
cli
mov
adc
imul
mov
adc
filds
add
mov
xor
mov
and
aad
mov
int3
push
xor
push
xor
out
test
or
mov
fimuls
movsb
ja
jl
add
sbb
jae
xor
add
imul
insb
mov
push
in
mov
jmp
mov
aas
andl
repz
in
stc
xlat
add
mov
leave
int
push
jns
dec
insb
cwtl
sub
mov
fnstcw
cmp
xchg
jns
cli
aas
lods
cmp
push
sub
pop
int3
mov
sub
jae
insb
repnz
emms
push
cmp
cmpl
jge
jl
jecxz
sub
cmp
aad
stc
sbb
mov
jg
scas
mov
jnp
sbb
lds
mov
pop
outsl
mov
inc
je
mov
sbb
hlt
and
clc
in
out
imul
jge
cmpsb
push
push
aad
add
jecxz
div
cwtl
xor
add
mov
stc
adc
jle
popa
cmc
ret
cli
loopne
stc
sub
push
dec
stc
inc
dec
jp
or
pop
cmc
loopne
mov
shll
adc
sarl
loopne
mov
dec
jge
cwtl
test
jns
mov
out
adc
or
ffreep
mov
lcall
divl
jnp
push
ja
pop
test
ja
mov
mov
adc
mov
and
sub
mov
add
pop
jg
jl
xor
addr16
xchg
orl
push
jge
lods
jmp
roll
inc
add
adc
jno
mov
stc
jo
mov
inc
xor
cli
mov
mov
jge
stos
and
pop
out
cwtl
int3
iret
or
jmp
dec
adc
sub
lods
adc
jmp
or
leave
dec
or
aad
jo
shrb
insb
cwtl
push
pop
xor
mov
adc
and
cli
loopne
pop
sbb
int
ja
cmp
jl
cwtl
push
stos
sti
xor
hlt
add
mov
aam
jb
jge
lock
pushf
mov
push
jo
inc
pushf
adc
lcall
mov
daa
lcall
repnz
mov
sbbl
sbb
ja
sub
jle
mov
mov
sub
pop
ror
sbb
inc
jb
xchg
jmp
rclb
icebp
or
sbb
jle
pop
sbbb
jo
adc
jo
popa
sub
jno
mov
push
xchg
adc
bound
es
jp
lds
sar
andl
dec
lods
daa
int
scas
mov
adc
jp
es
loope
fwait
popf
dec
pop
mov
and
add
inc
les
mov
xchg
ret
sub
or
xchg
mov
and
cld
std
jmp
data16
shlb
ss
pop
jo
inc
dec
pusha
or
or
xor
xlat
lock
mov
sti
jg
popa
iret
aas
imul
mov
add
mov
jo
out
jge
lcall
mov
lcall
int3
ds
lret
adc
add
cmp
sbbb
imul
insl
dec
clc
xchg
lods
mov
push
xor
fxch
mov
jbe
jecxz
add
pop
cmp
bound
sar
imul
sub
pop
inc
lea
fisttpl
fwait
pushf
fstp
test
arpl
xor
dec
push
pop
pop
or
fwait
data16
lods
cmp
and
cmp
xorl
jns
dec
dec
mov
std
push
roll
xor
jb
repnz
mov
or
dec
xor
lods
movsl
cld
pop
pop
es
or
cltd
mov
test
rcrb
pop
lcall
insl
in
pusha
roll
pop
mov
xor
xchg
lods
jg
cli
cmp
rcr
dec
jnp
orb
scas
insb
adc
es
dec
add
add
inc
lds
or
mov
jnp
lods
js
inc
ja
repz
cld
add
jns
aad
lods
popf
cmp
test
jno
jp
dec
test
xor
or
sti
dec
movsb
loopne
fisubrl
aad
hlt
daa
out
mov
test
mov
xor
cld
out
dec
mov
cmp
xchg
mov
ja
inc
jne
inc
cs
out
and
int3
pop
push
push
inc
bound
dec
test
pop
popl
out
addr16
sbb
loop
nop
out
pop
loope
pusha
mov
xor
jmpw
and
out
jns
ljmp
jl
xchg
mov
or
outsb
adc
fisttpll
dec
fsubrl
popf
dec
cwtl
out
enter
sub
adc
adcl
clc
mov
fisttpll
sub
mov
xor
pop
and
cli
xchg
or
inc
xor
into
int3
mov
and
out
pop
pop
jg
popa
or
sar
mov
mov
ljmp
test
adc
sub
mov
mov
xor
add
js
pusha
and
fdivr
mov
shlb
fists
roll
or
std
add
loopne
push
and
mov
das
in
dec
call
pop
int
and
sarb
lret
aad
push
mov
mov
sti
xlat
jge
jb
mov
sahf
inc
and
roll
decl
add
push
or
pop
cmpsb
push
adc
pop
sub
dec
dec
fbld
mov
mov
jo
sub
fisttpl
inc
jnp
insl
inc
pop
xchg
fs
xchg
adc
xor
jo
fiaddl
sti
mov
pop
or
xchg
scas
mov
loop
mov
cmp
fdivs
outsl
jmp
enter
jno
jp
ja
test
and
outsb
xor
enter
sub
pop
or
scas
lods
cmc
xchg
xchg
add
mov
jecxz
cmp
and
add
lds
pop
arpl
or
enter
jns
jecxz
push
mov
stos
jg
les
sub
mov
pop
xchg
fnstenv
mov
add
scas
cs
subl
dec
lds
mov
fisttps
inc
ret
fidivs
pop
iret
xor
popf
pusha
mov
mov
pushf
lock
push
push
sub
or
jmp
xchg
add
int3
sahf
mov
es
xchg
inc
cmpsl
rclb
push
fucomp
rclb
insb
push
rcrb
rcrb
pop
addr16
jmp
jbe
cmpsb
pop
mov
mov
mov
outsb
incl
xlat
mov
pop
aaa
lods
bound
in
in
xchg
test
fwait
sub
iret
add
xchg
xlat
cmp
cs
in
subb
jne
bound
fwait
mov
mov
rorb
mov
jl
dec
xchg
jl
out
sub
mov
fstl
xchg
or
mov
jno
jb
negl
divl
hlt
ljmp
adc
adc
enter
dec
inc
sub
add
stc
mov
andl
cmpsb
mov
mov
or
add
mov
nop
mov
je
decl
sub
subb
mov
popa
mov
aas
and
sahf
aas
scas
sub
and
or
dec
lock
mov
bound
xchg
mov
popf
icebp
out
aas
sub
adc
or
outsl
sbb
and
sub
mov
cltd
mov
bound
adc
and
sbb
lret
lods
or
jb
push
jp
aad
mov
out
jmp
out
sbb
ds
rclb
push
gs
das
xchg
push
das
rclb
push
dec
sub
cmp
cmp
xor
stos
jecxz
pop
cmp
xorl
or
add
mov
pushl
push
ds
and
das
and
fidivrs
call
or
xchg
sub
jmp
jno
mov
xor
pop
sub
and
xor
mov
xlat
mov
add
loope
inc
insb
enter
or
xor
sub
out
mov
mov
cmp
xlat
add
mov
cmp
daa
cli
mov
sub
inc
repnz
xchg
inc
int3
cld
mov
xchg
loop
testb
cmp
mov
outsb
xor
jmp
ss
or
je
pop
test
and
cwtl
cmpsl
mov
shrl
ds
dec
popa
mov
xchg
out
add
inc
mov
inc
outsb
xchg
out
mov
ret
jae
aaa
shlb
or
mov
sbb
cwtl
sub
sub
xor
push
mov
mov
mov
insl
mov
mov
scas
sarb
jbe
les
jae
and
add
int
mov
pop
inc
rorb
fistps
or
xchg
insb
shll
ss
lret
ljmp
cmp
mov
into
dec
push
stos
push
insl
xlat
in
loope
pop
mov
and
cld
mov
lret
pop
mov
add
js
cli
xchg
jp
out
test
out
out
xor
iret
cmp
loope
shll
nop
adc
test
pushf
lcall
cmc
rol
mov
aad
mov
loopne
out
and
cld
mov
push
sbb
test
aam
jle
push
loop
das
addr16
iret
lcall
mov
add
fisubrl
punpckhdq
pop
jle
je
xchg
insb
jge
ret
inc
jg
outsb
ljmp
scas
or
jbe
sub
mov
or
mov
xchg
out
pop
cs
js
mov
aam
pop
fsts
jbe
mov
inc
xor
jmp
push
aaa
cltd
sbb
pop
sahf
jnp
mov
negl
inc
adc
cmp
pop
mov
mov
jb
lret
mov
std
fstpt
mov
arpl
sbb
and
xor
xchg
lea
arpl
outsl
jne
pushl
dec
das
out
inc
or
out
out
aaa
jle
das
repnz
stos
test
movsl
sti
dec
test
outsl
mov
add
pmaxub
lret
pop
jno
aad
mov
adc
rorl
cmp
or
loopne
popf
push
dec
inc
out
iret
sbb
push
dec
mov
mov
xchg
mov
mov
out
dec
mov
in
add
sti
pop
jl
bound
fstps
mov
mov
rolb
mov
xor
or
iret
push
mov
pop
test
jns
fidivs
jno
mov
in
jno
sbbl
daa
inc
stos
scas
sar
mov
jno
xchg
mov
das
or
mov
push
or
jp
adc
mov
dec
mov
adc
cmp
mov
shl
mov
aaa
in
mov
pop
cld
xchg
sbb
xchg
add
inc
sub
mov
mov
fadd
mov
pop
jb
outsb
das
call
fbld
pop
or
ds
inc
add
xor
sub
ja
mov
fs
add
mov
xchg
sub
jecxz
loop
pop
xchg
nop
jecxz
fidivrs
std
leave
jne
push
sub
cmp
dec
jno
cli
in
sbb
loope
jl
icebp
cmp
sbb
movsb
loop
js
out
stos
inc
sbb
aas
les
adc
imul
inc
icebp
xchg
addb
dec
add
mov
mov
jecxz
divb
adc
mov
xor
mov
subl
add
out
hlt
xchg
mov
icebp
loop
sub
into
xor
loopne
xchg
and
lahf
aaa
mov
sbb
cmp
xor
mov
xchg
inc
mov
popa
push
mov
outsl
push
cmp
pushf
mov
std
test
gs
inc
aas
or
pop
les
aad
fistl
pop
dec
adc
aad
cwtl
cmp
enter
pop
loopne
mov
pop
lods
in
push
and
inc
dec
popf
pop
pop
cmp
or
cmc
mov
outsb
mov
pop
dec
in
lods
push
call
sub
adc
inc
cwtl
mov
stc
cmp
inc
inc
lea
jmp
pop
aad
lret
in
dec
and
adc
test
std
test
lds
pop
inc
or
lret
pop
inc
adc
and
data16
stos
mov
pop
sub
mov
push
pop
push
fcmove
mov
shll
das
cmp
mov
mov
and
mov
dec
test
sub
xorb
push
in
mov
mov
lahf
ret
fucomp
loop
pop
jns
sbb
ret
out
jl
scas
adc
cmp
aaa
sub
jbe
push
cmpsl
mov
gs
xor
pusha
lock
jns
inc
sbb
out
mov
pop
push
mov
ljmp
fwait
pop
jne
cmp
adc
and
adc
scas
lds
mov
push
lock
push
xlat
dec
out
sbb
scas
inc
jp
sub
hlt
dec
es
fsubrs
or
xor
sbb
and
notb
fsts
pop
and
insb
sub
adc
cmpsb
insb
push
shll
faddl
sub
adc
scas
push
mov
adc
lock
pop
lret
push
xchg
mov
jecxz
add
ficoml
stos
push
xor
push
jl
push
xorb
into
mov
cltd
test
movsl
sbb
arpl
mov
fs
adc
inc
das
dec
lea
add
sbb
jbe
xchg
mov
xchg
out
sub
negl
movsl
mov
mov
sub
jecxz
jb
into
jnp
xchg
adc
cmp
dec
or
je
js
pop
lods
es
cmp
xor
inc
imul
jae
lods
dec
rcll
mov
xchg
mov
xchg
por
fwait
das
mov
jae
xchg
fisttps
test
bound
popa
mov
push
ret
sub
and
dec
lock
dec
sbb
lahf
mov
fists
adc
jbe
arpl
sar
mov
cwtl
imul
out
mov
into
sti
mov
mov
xor
mov
dec
out
cltd
cltd
push
and
dec
aam
lret
int
mov
shrb
add
inc
hlt
sub
inc
hlt
pop
int
cmp
sbb
insb
push
xor
jne
xor
lods
mov
push
sub
sbb
jg
or
ret
or
dec
pop
js
cmp
mov
dec
pop
or
mov
push
xchg
sub
lock
test
pop
inc
inc
loop
push
mov
xor
xor
loop
ja
pop
sbb
jae
ds
sub
adc
lods
rorb
xchg
jecxz
sarb
ja
push
inc
sub
inc
sub
push
dec
fisttps
pop
clc
imul
orb
popa
pop
xchg
pop
imul
sub
jb
nop
xor
dec
dec
pop
jge
je
repz
dec
pshufw
inc
sub
push
es
and
cmpsl
sub
add
xor
inc
xor
daa
ficompl
sbb
mov
xlat
inc
mov
inc
scas
jno
or
outsb
xchg
inc
cmpsl
icebp
popa
cmc
bound
xor
xchg
inc
xor
in
out
cwtl
lock
sub
arpl
roll
js
cmp
sbb
adc
imul
into
xchg
aad
xor
mov
pop
or
push
mov
dec
frstor
rcrb
stos
add
movsb
adc
pop
mull
push
adc
sub
insb
insl
jbe
xchg
sub
xchg
push
sub
add
shrb
pop
sbb
je
cmp
repz
and
pop
xlat
call
push
xor
ljmp
push
sub
mov
push
mull
mov
sbb
push
and
push
pushf
imul
inc
cmp
dec
push
ljmp
adc
xor
je
gs
call
ljmp
outsb
xchg
shll
and
pusha
push
in
sub
mov
push
push
push
pop
dec
adc
adc
adc
xor
cmpsl
pop
loop
pop
mov
jno
js
adc
lods
jbe
sub
pop
je
je
pop
inc
cmc
sti
mov
dec
movsb
adcl
nop
aas
add
fnstsw
sbb
jo
leave
repz
imul
ret
add
mov
aad
mov
dec
fsub
scas
pop
dec
scas
popa
jae
dec
mov
mov
cmpsl
orl
cmc
in
mov
ret
sub
xchg
mov
mov
cmp
jnp
inc
add
mov
push
inc
imul
mov
data16
mov
fsub
insb
mov
push
ja
rol
imul
stc
outsl
jns
mov
inc
jae
neg
sti
add
popa
push
or
lea
jle
jle
jns
push
and
test
push
sub
cltd
insb
js
call
movsl
movsl
xchg
or
orl
add
std
inc
jno
dec
lods
mov
fsubp
addr16
xchg
test
push
sub
fimull
sbb
popf
shll
pusha
or
imul
ljmp
cwtl
pop
xchg
and
jae
fsubl
cli
and
aad
mov
jl
xor
ljmp
icebp
movsb
frstor
jle
pop
stos
dec
sub
add
or
xor
push
fsubr
loop
mov
les
xor
mov
push
mov
push
je
jmp
push
loope
fdivrp
cmp
push
mov
mov
push
ss
shr
jmp
faddl
push
js
inc
dec
inc
stos
aaa
jecxz
mov
insl
mov
adc
xchg
insb
cmp
jg
adc
xchg
outsb
fucomi
fmuls
adcl
es
mov
mov
lods
jns
jns
jo
adc
sbb
and
inc
stc
inc
repz
adc
adc
mov
cmp
in
pop
jl
aas
repz
push
imul
and
push
push
jp
popa
gs
leave
aam
pop
in
inc
jle
scas
ret
data16
jmp
pop
iret
shll
or
push
inc
pop
mov
adc
cld
sbb
push
outsb
ret
mov
popa
jb
jo
adc
cmp
and
stos
dec
call
dec
sbb
pushf
dec
or
cli
shlb
arpl
out
push
maskmovq
inc
jnp
xchg
jnp
mov
imul
push
insb
bound
in
inc
je
dec
pop
jbe
lea
pop
scas
lods
push
cmc
imul
add
jns
mov
ja
out
test
mov
sti
jbe
pop
mov
stos
jns
jnp
movb
sbb
mov
js
pop
pop
leave
sahf
push
out
lods
xchg
pop
cli
jg
xchg
ret
scas
mov
cld
xchg
or
mov
ljmp
adc
xor
sbb
fidivl
loopne
leave
fldenv
std
sub
pop
insl
ror
mulb
into
xor
cmp
jle
fwait
xor
mov
sbb
pop
xchg
jp
or
pop
dec
loope
test
insl
xchg
cmpb
pop
jmp
sbb
movsl
xor
arpl
push
insl
sub
or
js
jae
ja
sub
loopne
adc
fmuls
mov
movsb
xor
ss
pushf
and
or
pushf
mov
inc
fidivrl
and
push
pusha
cmc
or
pop
sub
or
sub
or
js
rcl
mov
std
adc
pusha
add
js
mov
out
dec
or
cltd
pop
jbe
mov
shl
jns
test
adc
insb
xor
mov
das
add
sub
loope
xchg
mov
mov
push
call
xor
ja
inc
std
icebp
push
aaa
dec
aad
pop
sahf
fmull
push
push
aam
xor
test
dec
inc
data16
sub
arpl
xor
push
outsb
fnclex
dec
loopne
loop
mov
mov
test
js
cmp
push
shl
pop
int
lret
pop
lahf
int3
xchg
xchg
in
enter
push
jnp
mov
repz
leave
je
icebp
mov
fwait
sbb
adc
pop
push
scas
stc
fadd
pop
cmp
fidivl
icebp
cs
cltd
ljmp
test
sbb
jle
lods
loopne
pop
xchg
xchg
scas
jns
sub
pop
push
addr16
mov
cld
or
mov
scas
jns
cmp
push
ljmp
loope
mov
sbb
adc
gs
cmp
and
mov
flds
inc
fiadds
cmpsl
pop
fnstenv
sarl
pop
jae
stos
imul
fistpll
xchg
push
lods
push
jbe
lods
cli
adc
out
add
cwtl
mov
or
repnz
in
mov
xchg
mov
mov
decl
xchg
pop
popf
mov
es
js
and
or
add
clc
into
call
not
gs
into
fmull
ja
jg
inc
sub
jno
int3
mov
adc
sbb
out
test
jae
rol
out
jp
add
jle
in
sbb
cli
insl
sbb
mov
daa
mov
testb
mov
stos
out
enter
sahf
fldcw
push
jmp
push
push
mov
lds
xchg
decb
xor
int
adc
mov
adc
inc
push
pop
sub
xchg
inc
push
fidivrl
pop
int3
int3
jmp
xlat
and
xchg
inc
aas
ja
sbb
jle
sub
inc
jns
in
ja
jge
outsb
lock
cltd
xchg
sbb
push
mov
push
pop
shrl
push
pop
call
jmp
gs
xor
int3
cwtl
add
imul
inc
add
or
inc
cmp
xchg
mov
dec
imul
jns
scas
scas
and
jge
inc
lds
lret
jmp
clc
mov
dec
mov
jge
loop
test
test
push
cmc
std
cwtl
lods
inc
sti
jnp
sub
insb
cmc
testb
push
push
mov
mov
hlt
adc
push
xor
test
and
cmp
push
mov
clc
popf
das
ja
lret
adc
mov
inc
jg
fcompl
lds
push
cmpsb
mov
xchg
mov
inc
or
push
mov
fucomip
pop
mov
out
pop
test
pop
out
add
dec
imul
in
sbb
cmp
fisttpl
xchg
adc
cmp
dec
clc
in
add
add
inc
inc
or
mov
addl
pop
loope
jmp
cmpsl
dec
in
mov
icebp
dec
rorb
add
pop
in
pushf
scas
mov
lcall
xchg
dec
nop
and
cmc
inc
orb
jle
jge
jp
subb
pop
test
inc
dec
inc
fldcw
mov
pop
add
inc
lea
xchg
negb
dec
xchg
xchg
and
out
aas
or
jmp
mov
xchg
jo
jo
and
outsb
mov
stos
cmp
insb
inc
push
sbb
and
inc
test
cmp
sbb
bound
out
xor
std
push
add
sub
mov
push
inc
out
pop
into
jl
imul
jns
lea
fisubrl
xor
push
inc
adc
stc
clc
fs
push
pop
pop
jbe
shrb
pusha
lea
mov
jg
rorb
repz
xchg
fs
ljmp
and
fs
iret
bound
incl
mov
aaa
call
mov
shll
cld
cs
cltd
inc
movsl
jno
xchg
int
xchg
shrb
jecxz
or
fdiv
je
shrb
dec
das
jne
mov
rcl
mov
xchg
stos
stos
cmp
dec
or
xor
cld
test
ljmp
jnp
stos
xor
inc
jmp
nop
cmpsl
std
inc
sbb
and
aas
xor
jge
mov
sbb
sbb
dec
sbbl
stc
xor
xchg
cmp
js
cmp
sub
test
mov
and
loop
aaa
pop
mov
stos
cwtl
push
inc
or
mov
add
or
dec
imul
pop
les
popl
push
stc
xchg
ret
test
negl
aam
loop
repnz
bound
fwait
mov
rcl
aad
ret
mov
call
movb
xchg
out
ss
sbb
adc
enter
lock
dec
xchg
cmpsl
fstl
orl
int3
inc
adc
in
push
cmp
or
adcb
pop
mov
sbb
xchg
pop
xor
fsub
gs
bound
push
xor
out
cmp
cwtl
es
pop
mov
mov
cmpsb
fcmovne
popf
and
adc
shlb
jne
rcll
cmpsb
xor
pop
push
dec
aas
jae
push
rorb
lcall
mov
adc
adc
inc
ja
fsubrl
pop
inc
pop
sub
cs
jae
orl
arpl
test
lcall
negl
cltd
les
insl
fs
movsl
xchg
pop
mov
fcomps
fisubs
xor
mov
cmp
sub
adc
lds
mov
cltd
clc
sub
jp
sbb
inc
mov
jp
or
movsl
mov
adc
jl
xor
and
or
std
stc
push
mov
cltd
cmpsb
cld
mov
xor
cmp
mov
push
mov
lcall
fsub
xchg
mov
mov
add
jae
shlb
popa
or
xchg
jo
sbb
inc
lahf
cmp
jge
xchg
pop
loopne
inc
outsb
mov
mov
les
jmp
push
push
add
sbb
adc
push
gs
mov
loop
cmp
out
cmp
mov
push
xor
and
and
call
shrl
mov
pop
jl
xchg
inc
aaa
rorb
cmp
adc
push
aas
fwait
jnp
pop
in
imul
mov
aam
inc
xlat
sbb
cmpsb
imul
fwait
lods
mov
sbb
clc
cli
cmp
mov
popa
in
or
xchg
mov
pushw
fstpt
lea
rcrb
lods
add
mov
push
sbb
sbb
mov
xchg
mov
movsb
in
sub
mov
out
test
adc
adc
mov
jnp
sti
jp
daa
pusha
jno
dec
pop
shll
sub
mov
pushf
sahf
addb
inc
mov
mov
or
dec
jnp
xchg
shrb
scas
mov
cltd
push
xchg
popa
jl
mov
push
cli
lods
jg
cmp
movsl
jp,pt
lret
lea
sbb
in
sub
xchg
test
outsl
call
inc
sbb
lea
stos
dec
loopne
jbe
push
mov
loope
sbb
sbb
cmp
jns
or
push
out
mov
mull
ret
and
adc
mov
ss
testl
xchg
sub
pop
lods
iret
xor
add
das
pop
add
test
sub
jmp
roll
xchg
xchg
mov
popa
xchg
cmp
mov
sub
xor
ja
stos
mov
clc
dec
fcmovnu
movsb
icebp
ret
outsb
push
sbb
fnstsw
dec
test
icebp
push
ja
sbb
test
lods
ret
es
adc
mov
testb
nop
mov
sti
mov
and
lcall
jne
mov
adc
cmp
mov
pusha
sbb
ljmp
push
negb
mov
xchg
ret
int
push
push
das
push
fnop
enter
xchg
dec
aaa
mov
out
loopne
cmp
xor
mov
adc
das
ret
dec
pop
repnz
xchg
cwtl
xchg
sahf
mov
in
jl
pop
in
cmpsl
mov
and
mov
mov
lahf
fs
sub
fisubs
in
movsb
pop
rol
sahf
mov
aas
add
and
adc
ss
xchg
pop
sbb
dec
push
pushf
push
dec
xchg
loope
repz
in
and
loope
daa
pop
into
sbb
sbb
aas
dec
pop
outsl
fbld
mov
sti
rorl
loopne
jmp
sbb
lcall
cmp
sti
pop
inc
xchg
dec
sbb
pop
andl
or
icebp
nop
xchg
cmc
sub
and
cltd
jns
sbb
mov
xchg
mov
aad
xor
movsl
outsl
pop
jecxz
inc
test
xchg
stc
out
jnp
mov
mov
loop
or
jecxz
fstpt
int
fs
js
sbb
pop
and
dec
adc
mov
int
bound
ljmp
cltd
and
sub
loop
stos
push
jbe
mov
sub
mov
inc
xchg
cmp
mov
cmpsb
mov
lds
jns
movsl
push
or
mov
test
negl
sub
call
push
sahf
lea
jae
push
js
test
popf
aam
cltd
cs
mov
sbb
ja
sbb
fisubrs
and
in
ficoml
jne
mov
jge
in
jg
mov
ret
imul
mov
jnp
enter
mov
jg
push
lds
loope
cmp
sbb
push
jae
icebp
cmp
cmp
hlt
stos
aaa
lcall
push
cmp
pop
xchg
inc
mov
cmp
and
xchg
add
dec
mov
js
jnp
xor
sbb
xchg
mov
inc
loope
sbb
push
mov
xacquire
sti
lods
mov
outsb
or
out
movsl
mov
psraw
sbb
xchg
scas
or
mov
imulb
mov
lret
and
mov
sbb
mov
and
sbb
sub
adc
or
jmp
fcomp
pushl
divl
mov
mov
pop
xchg
fsts
lea
and
bswap
fimuls
or
push
call
lods
lea
fnstcw
clc
adc
inc
cmpsl
inc
push
xor
out
shl
pop
or
and
lcall
aam
repz
loopne
push
add
adc
ljmp
add
inc
cld
mov
or
xor
or
fs
xchg
pop
mov
dec
les
mov
jo
jp
and
sbb
sbb
mov
mov
push
mov
pop
cmp
dec
push
jp
or
and
or
cmpsl
xlat
mov
inc
lcall
inc
stos
lea
insl
test
out
fistl
stos
mov
or
mov
mov
test
push
aas
jg
sbb
imul
roll
ds
arpl
xchg
jecxz
cs
dec
pop
jnp
mov
sti
or
fs
sub
push
mov
xchg
mov
dec
mov
repnz
push
outsb
enter
and
repnz
add
out
push
fwait
dec
icebp
sbb
cmp
lcall
ljmp
xchg
xchg
push
inc
mov
xchg
je
cs
into
stc
inc
dec
cwtl
popf
loopne
das
push
mov
pusha
cmpsl
sub
dec
or
mov
mov
sbb
fs
mov
push
test
fildl
and
mov
insb
sbb
loop
test
fs
mov
add
popa
add
ss
sti
outsl
lods
and
push
lea
sbb
stos
jge
repnz
sbbl
add
lret
inc
mov
lahf
or
adc
xor
sub
mov
enter
sbb
inc
js
adc
dec
sbb
aad
and
jo
adc
cmp
insb
xlat
pop
push
repnz
shl
stos
rclb
jns
cmp
xchg
out
cmp
xor
cli
adc
inc
and
push
shl
loope
cmp
inc
sarb
mov
pop
mov
mov
mov
push
cmpsb
int
fldt
stc
into
adc
outsl
mov
in
xor
icebp
std
lods
repz
lahf
jb
mov
cmp
pushl
das
add
jecxz
adc
add
iret
and
dec
sub
ret
flds
dec
mov
out
push
es
fbld
jns
mov
push
imul
pop
sbbl
jmp
divl
adc
rorb
dec
jo
add
cmpsl
out
dec
out
add
push
arpl
popf
je
mov
repnz
jge
mov
movsb
push
pop
sbb
and
jp
and
xchg
xor
mov
test
cmp
push
add
scas
cmc
xor
sbb
lods
repz
shl
mov
push
xchg
sub
and
orb
inc
rcl
xor
fldcw
jns
ja
stos
out
mov
movsl
idiv
jge
ret
pop
in
jmp
mov
loope
and
neg
sub
lret
fistl
shl
fwait
xor
jge
mov
shlb
lret
lods
or
or
stos
xchg
mov
subb
jecxz
fs
fsubrs
addl
and
sub
mov
xchg
jns
cli
dec
lds
mov
ficoml
fsubrl
mov
sub
les
into
or
stc
cmc
addr16
add
test
repnz
pop
pusha
pop
mov
in
scas
inc
xchg
sbb
jae
ja
daa
push
js
and
es
sub
mov
ljmp
ret
and
cmp
pop
stc
arpl
cltd
jle
xchg
cmp
bound
repz
fwait
rcll
jne
jno
data16
lret
xor
in
dec
and
mov
sbb
orb
out
inc
mov
inc
inc
je
jo
xchg
insb
cltd
cli
inc
dec
jae
test
push
adc
mov
xchg
mov
pop
push
cmp
lret
into
sarb
push
shr
mov
cmp
in
xor
dec
ret
shrb
call
jo
jmp
roll
jle
jb
lahf
dec
shrb
loope
sbb
push
cs
push
jb
pop
or
dec
cmp
jns
in
cmp
pop
js
in
lahf
mov
or
cltd
jl
xor
xor
adc
cmp
mov
outsl
das
pushf
cwtl
data16
imull
jbe
in
pextrw
outsl
pop
inc
jne
or
xor
jb
outsb
popa
and
in
call
loope
into
xor
add
pop
clc
insb
mov
jns
dec
sbbl
mov
cmp
cmpsb
les
ljmp
sbb
pop
sti
adc
mov
cmp
fcoml
lea
mov
mov
dec
mov
push
outsb
bound
in
inc
shll
or
shrl
push
or
push
rorb
gs
cmovb
push
mov
jno
imull
pop
adc
mov
scas
xor
les
pop
ret
mov
jb
mov
mov
lahf
fisttpll
loop
mov
loope
lds
leave
test
fs
and
inc
jnp
sbb
pushf
inc
adc
imul
lret
jnp
insl
jbe
aas
aad
gs
out
loopne
or
xorb
iret
or
mov
sbb
mov
sbb
fwait
xchg
mov
sti
shlb
mov
in
fadds
stos
mov
push
subl
loop
aas
cmp
mov
daa
xchg
int3
add
out
xor
sub
mov
pop
mov
ljmp
push
popa
pop
cmc
jecxz
sub
xor
les
scas
in
fimull
out
push
int3
xchg
push
mov
or
sbb
rcrl
pop
mov
mov
sarl
push
sbb
aad
pop
inc
pop
and
sub
or
hlt
cmpl
sub
mov
jl
verr
push
inc
pusha
ja
insl
dec
jns
push
std
sahf
mov
cwtl
ds
xor
stos
repnz
aam
push
or
xor
loope
les
sub
cmc
sti
in
lret
stc
leave
inc
cmp
fbstp
pop
dec
cld
adc
push
insb
les
cmp
mov
jno
enter
cmp
test
fadds
jg
or
lds
invd
sahf
fbstp
jecxz
inc
imul
mov
mov
mov
and
stos
mov
sarb
lret
cltd
clc
bound
xor
and
and
lds
cld
shl
mov
aad
mov
loope
rorl
repz
mov
xchg
mov
mov
pop
fistl
cwtl
push
lods
xchg
dec
movsl
fldenv
cltd
mov
aas
xchg
inc
jp
ss
insl
and
insl
push
push
lahf
add
in
stos
cmp
or
and
repz
mov
int3
cs
movsb
nop
lods
ss
call
ja
scas
sub
push
cmpsb
pop
jmp
jns
and
in
mov
jge
imul
cld
jmp
add
dec
dec
lahf
test
push
inc
aad
cmp
into
dec
pop
icebp
sub
test
sub
add
enter
into
out
push
lahf
mov
inc
or
mov
sub
pop
pushf
fwait
aam
add
push
mov
push
hlt
or
cmp
mov
sbb
pop
mov
out
mov
les
jnp
clc
mov
pop
cli
inc
inc
pop
jmp
mov
adc
sub
and
in
fisubs
cmpsb
jp
lcall
jge
mov
je
push
dec
aam
jns
add
push
jge
pop
push
rcll
lods
ret
sbbl
push
fisubrs
push
fcom
inc
addr16
mov
xchg
mov
daa
fisubl
out
sbbb
fwait
insb
mov
popl
pop
js
sar
dec
xchg
adc
or
pusha
jg
xchg
mov
out
jge
push
jo
add
cli
and
les
adc
sub
mov
dec
data16
xor
cmp
es
les
outsb
ret
test
mov
push
mov
mov
lea
rorb
inc
cld
mov
fs
mov
test
pop
rcpps
sub
push
sbb
loop
and
int
mov
or
pop
aas
adc
and
push
and
into
je
jl
xchg
fcmovu
outsb
xchg
dec
stos
mov
pop
dec
mov
xor
xchg
movsb
mov
ds
loope
arpl
dec
jle
es
xchg
ss
ss
mov
and
mov
xor
xor
push
dec
mov
pusha
sub
jp
mov
push
sub
or
sub
scas
pop
inc
mov
mov
cmp
sarb
ret
das
loope
cltd
js
adc
daa
outsl
movsl
push
ficoml
mov
pop
out
sub
cmpsb
inc
xor
push
dec
xchg
mov
jecxz
xchg
cmpsl
frstor
xor
pop
mov
leave
xchg
pop
pop
xor
ds
jns
int3
mov
gs
mov
jge
inc
sahf
test
test
test
push
push
xchg
xor
inc
les
scas
loope
xlat
jae
je
cmp
pop
testl
fsub
lock
test
xchg
cltd
repz
setg
outsb
stos
aad
push
mov
lret
js
push
and
subl
sbb
jne
xchg
and
test
adcl
xor
out
push
mov
push
popf
loopne
xor
or
mov
sub
cmp
inc
jle
pop
mov
sub
push
stos
add
mov
jb
sbb
mov
push
xchg
repnz
add
inc
fsub
mov
push
out
repz
sbb
adc
outsl
aas
rol
add
shl
xor
adc
jne
inc
rcrl
xor
mov
fs
adc
xorb
mov
repz
pop
pop
stos
psraw
add
mov
jle
fdivrs
inc
addl
jno
rorb
test
sbb
inc
daa
push
das
add
dec
fnstsw
xchg
outsl
jns
mov
pop
sbb
sti
sub
and
mov
mov
or
gs
or
ret
repz
ret
mov
dec
adc
insl
jle
pop
xor
sub
jb
stos
dec
lret
sub
cld
test
or
xchg
jmp
leave
ss
inc
in
sahf
pop
dec
aam
icebp
loop
xor
sbb
jae
mov
cmpsl
bound
test
arpl
add
lret
imul
sti
in
scas
lods
xchg
mov
rcr
fld
mov
add
push
and
daa
call
je
cmp
xor
gs
and
xor
daa
push
cmpsb
insb
imul
inc
mov
inc
mov
mov
or
adc
fbld
pop
adc
imul
nop
mov
pop
or
xor
dec
xchg
mov
mov
xlat
out
nop
ja
dec
in
clc
cmp
rcrb
and
jmp
push
mov
dec
pop
lahf
push
loopne
cs
pushf
mov
enter
ret
jno
aam
inc
sbb
add
fldl
push
push
mov
repnz
inc
or
fadds
adc
daa
add
bound
mov
roll
mov
outsl
roll
push
jno
jo
inc
mov
pop
inc
les
sbb
pop
ja
popa
push
inc
and
stc
mov
mov
jb
subb
in
outsb
pop
out
ljmp
outsl
and
push
xchg
icebp
lds
in
repnz
movsl
out
and
cmp
pop
push
inc
xchg
sub
popf
lahf
orb
shll
sbb
outsb
dec
mov
or
add
or
cmp
test
orb
inc
xlat
pop
aas
mov
jmp
pop
pop
cmpsb
test
sub
mov
test
inc
push
popf
cwtl
sbb
xor
sub
mov
popa
push
sahf
in
jp
mov
pop
jne
lea
fisttps
repnz
sub
cmp
push
aad
out
push
xor
xor
sbb
inc
xor
sbb
movsl
inc
out
movsb
add
lfs
and
das
pop
push
jae
pop
out
cmp
cmpsb
lret
ja
jecxz
jns
imul
cmpsb
xlat
and
sahf
fcomps
sbb
xchg
cmpsb
jl
mov
cmc
add
test
aam
cwtl
insb
and
stos
cmp
cs
push
ljmp
push
cmpsl
imulb
or
movsb
jno
aaa
aam
insb
inc
int
les
loopne
daa
jne
loopne
fnstsw
dec
mov
jbe
pop
push
pop
inc
jge
fisttpl
subb
and
xchg
sub
jg
cltd
daa
movsb
mov
mov
in
mov
fsubrs
xor
push
imul
pop
jge
sbb
xor
or
dec
mov
negb
cmpsl
jecxz
xor
mov
mov
roll
icebp
sub
dec
pop
imul
cmp
add
xor
int3
stc
scas
inc
movsb
lods
ror
adc
loope
cmc
movsb
neg
mov
cmp
loop
jns
rcrb
jns
xchg
movsb
jmp
and
mov
dec
stos
mov
push
ja
mov
stc
shll
inc
in
addr16
mov
cmp
push
jnp
mov
push
dec
mov
outsb
loop
arpl
pop
dec
sahf
hlt
mov
adc
mov
adc
nop
inc
ds
rcrb
xchg
andl
jae
lods
xchg
pusha
push
ss
mov
clc
daa
push
pushf
mov
jae
es
sub
mov
lahf
dec
push
adc
ss
push
or
mov
in
jge
add
jbe
xor
cmpsl
mov
das
xor
sub
sub
sbb
cwtl
push
pop
xchg
cmp
in
frstor
cmp
mov
mov
pop
int
jns
es
scas
iret
jbe
shll
jb
fcoms
mov
fucomi
inc
in
shrl
insb
outsb
aad
mov
mov
in
or
icebp
adc
mov
push
sahf
adc
push
sbb
adc
mov
leave
xor
push
push
sbb
xor
hlt
and
lcall
popf
pop
daa
pop
push
add
and
les
mov
xchg
scas
sbb
test
lds
or
cmp
sub
cld
mov
pop
mov
mov
popl
inc
test
repz
mov
dec
test
sub
xchg
jle
sub
es
daa
push
and
icebp
popf
sub
jmp
push
inc
jb
dec
out
mov
cwtl
pop
lods
xchg
sub
jae
flds
testl
dec
mov
dec
push
arpl
push
inc
iret
and
leave
fcmovb
pop
inc
push
adc
test
sbb
pop
inc
clc
adc
pop
into
mov
test
adc
scas
fbstp
jo
inc
ret
cmpsl
ss
mov
pop
pop
icebp
test
int3
adc
rol
pop
cmp
add
jp
test
mov
ret
jge
push
call
dec
sahf
addr16
subb
icebp
loope
mov
testl
adc
jmp
sti
std
sahf
in
pop
adc
daa
ret
lahf
adc
mov
je
leave
mov
jne
cmpsl
imul
mov
jb
fsubrs
push
popl
jl
push
ffreep
mov
int
xor
stos
mov
nop
or
addl
cmp
sub
lea
dec
faddl
jns
mov
jmp
jne
pop
sti
push
repz
stos
ja
mov
loope
repnz
fs
cmp
mov
mov
lret
jo
out
in
mov
xchg
ss
adc
and
sbb
gs
aas
lds
test
push
lcall
xor
ds
or
js
mov
mov
xchg
shlb
sub
int3
mov
insl
xchg
outsb
sub
sti
jb
or
faddl
fistps
add
xchg
fsubr
test
xor
incl
mov
hlt
adc
rol
xor
or
inc
out
jbe
dec
cvtps2pd
jecxz
push
sub
adc
pop
sti
addr16
cltd
imulb
jns
lock
push
jl
mov
stos
incb
inc
pop
adc
std
repnz
dec
mov
sahf
stc
ljmp
lret
push
ja
loope
out
push
es
inc
fsubrl
pop
adc
mov
hlt
addr16
fildll
mov
jmp
and
jmp
mov
lcall
dec
xor
dec
xorb
push
add
in
flds
and
push
std
les
xor
test
xor
jl
call
lret
or
push
les
es
mov
fistl
mov
in
lret
jns
mov
repnz
push
push
inc
in
fstpl
movb
lcall
push
lods
inc
fs
call
iret
add
sarl
lret
mov
push
mov
nop
mov
sub
or
pop
adc
mov
lret
and
adc
decl
sti
sti
repnz
js
lods
icebp
int3
jl
adc
nop
sahf
cld
ret
dec
nop
xchg
scas
addr16
adc
adc
sub
lret
cmpb
ja
adc
xlat
sub
in
cmc
out
xlat
mov
mov
push
mov
mov
or
sub
out
cmp
push
fyl2x
icebp
jns
jbe
adc
ret
jge
cmp
rcrb
cmpsb
and
inc
push
clc
movsb
fstl
mov
push
stos
jne
pop
js
dec
mov
dec
repnz
mov
or
mov
sbb
pop
divl
ljmp
add
jmp
lods
push
sbb
cs
movsb
cli
fs
lret
into
dec
inc
shlb
push
pop
and
ficoml
mov
loop
xor
fdivrs
sub
and
cltd
mov
lret
sub
pop
adc
hlt
push
jg
std
jae
inc
aad
add
or
insb
in
mov
add
scas
jmp
inc
push
sub
xlat
jae
jbe
imul
xchg
push
xchg
loope
xorl
daa
and
inc
sub
loope
sub
mov
in
rcrb
lcall
sbb
fldl
testb
lahf
cmpsb
pop
pushf
daa
test
inc
or
mov
cmp
xchg
sub
frstor
add
ljmp
into
mov
cmp
scas
sub
push
outsl
insl
jmp
adc
cmpsl
mov
stos
add
jnp
mov
cmpsl
cmp
cmp
pusha
push
mov
and
lret
jl
js
and
ljmp
mov
lea
int
jo
fldcw
mov
test
xor
lods
dec
pop
push
cld
insb
push
xor
push
push
inc
lret
xor
out
lock
and
jae
pusha
mov
nop
jbe
sub
sub
cmp
mov
xor
aam
pop
fldl
xchg
lock
je
inc
notb
jbe
jle
movsl
dec
xor
fwait
sbb
lds
sbb
or
jns
cmpsl
push
jb
xchg
movsl
bound
movsb
and
rolb
add
subb
das
cmp
stos
hlt
jle
adc
mov
fistpll
shll
lods
int3
mov
mov
add
mov
mov
push
stos
hlt
jp
adc
push
add
inc
popa
mov
mov
push
jae
dec
lods
les
mov
mov
xor
dec
into
ljmp
je
les
jg
mov
stos
leave
movsl
movsb
adc
xor
aam
mov
ljmp
sub
xor
addr16
pop
jae
cs
bound
jo
cmpsb
jg
subl
xor
or
dec
push
push
xor
lahf
inc
sbb
dec
enter
pop
jl
outsl
imul
hlt
xacquire
mov
das
adcb
icebp
clc
data16
and
fistpll
pop
ljmp
fisubs
subb
xchg
subb
inc
icebp
cmp
xchg
sbb
xlat
movsb
or
rol
lods
rcll
movsb
dec
les
cs
pop
rcll
rorb
ljmp
jbe
aad
and
sti
cmpsb
push
adc
lcall
cmp
mov
in
pop
aas
in
test
jg
lcall
divl
mov
add
icebp
dec
jne
or
lahf
xchg
fwait
jecxz
das
jae
jo
loope
cld
push
push
add
arpl
mov
mov
mov
cmp
push
fmul
xor
pop
loopne
out
pop
aaa
punpcklbw
adc
and
cld
push
inc
push
je
daa
dec
es
and
xlat
hlt
pop
pop
jo
pushl
outsb
ret
pop
xor
adcb
jle
addr16
lret
out
sub
push
andb
daa
wbinvd
in
adc
lds
out
cmp
in
xchg
iret
ljmp
test
cmp
jb
sbb
jo
cmpsl
and
aad
in
push
mov
cmp
loop
test
movsl
test
cs
cmc
jne
push
push
cld
or
pop
fnsave
mov
add
lret
mov
jno
mov
sub
ficoms
push
adc
adc
xor
mov
and
das
dec
xchg
fisubrl
mov
xchg
dec
or
and
inc
mov
mov
fisubrs
jb
jecxz
jno
and
hlt
add
ffreep
inc
fisttpll
lods
popa
and
adcb
mov
inc
mov
cltd
mov
cld
xor
int3
jno
insb
or
jae
into
fdivrl
add
lcall
mov
sub
inc
dec
jge
or
fsubrl
jno
fisubrs
pop
pop
iret
test
add
add
test
mov
pop
movsl
jp
add
rcrb
mov
cmp
movsl
jmp
mov
sub
inc
sbb
ljmp
adc
mov
pop
mov
iret
lea
add
notl
fisubrl
test
sub
pop
mov
mov
les
mov
xor
popa
aad
xchg
jb
dec
nop
mov
addr16
push
lods
xchg
es
shrb
pop
test
xchg
test
rorb
cmp
ret
and
sub
test
lock
bound
outsl
pusha
cmp
jl
pusha
jge
insl
pop
pop
mov
fs
test
mov
les
inc
loopne
loop
pop
sahf
dec
fwait
xlat
rcl
rorb
xchg
jns
cmc
aam
fisttpll
cmp
and
cmp
cli
divl
jl
pop
fwait
int
inc
fdivrl
pop
and
jo
out
std
insl
sbb
test
xchg
xchg
js
movsl
jge
sub
movsl
mov
ds
push
cli
xchg
push
sarl
xchg
and
and
mov
mov
jle
or
jno
mov
xor
dec
add
insb
inc
dec
cld
add
or
mov
out
pop
mov
and
mov
loope
xchg
add
mov
int
mov
cmp
push
enter
arpl
mov
loopne
push
cli
or
bound
mov
push
fs
lret
je
pushf
rorw
add
in
mov
das
pop
pop
pusha
xor
test
or
sbb
jle
subb
scas
clc
and
jge
jne
movsl
jo
pop
stos
or
mov
dec
sbb
fcoml
test
jle
jle
lods
gs
sbb
ja
mov
outsl
add
iret
dec
cld
xchg
ss
jmp
jnp
daa
or
mov
mov
mov
push
xor
out
push
mov
inc
call
mov
pop
in
popf
mov
jecxz
dec
arpl
mov
lds
or
dec
jmp
hlt
btr
outsb
mov
test
sbb
out
aam
cltd
repz
dec
push
adcl
out
outsb
sarl
inc
mov
in
xchg
addr16
gs
aad
notl
mov
lea
pop
cmp
fidivs
or
mov
mov
lds
jno
icebp
in
into
cmc
sahf
cmp
sub
test
push
popa
jecxz
and
sbb
adc
or
mov
repz
ja
pop
cmp
enter
add
inc
jbe
inc
pop
lahf
jge
fldt
dec
sub
push
lods
andl
dec
mov
testl
jmp
jae
jnp
and
or
lret
pushf
pusha
mov
rorb
jo
jae
loope
inc
xor
push
jmp
lret
jnp
jecxz
sti
cmpsl
push
in
sbb
daa
outsb
iret
repz
paddsw
scas
insb
out
fsts
ss
repz
mov
cmp
push
into
pop
dec
jle
adc
cmp
xor
ret
pop
add
jmp
adc
mov
imul
dec
shr
mov
push
pusha
ja
popf
or
pop
stc
lcall
repnz
xor
repnz
mov
adc
or
inc
fs
sub
scas
pop
bound
xchg
xor
sub
sub
loopne
pop
cmp
and
xchg
xor
mov
jge
jp
scas
xchg
inc
scas
shll
imul
sub
pop
in
lret
xchg
sub
cmp
jne
and
loope
or
mov
fdivrp
incl
or
cmpsb
xchg
jne
or
popa
or
test
rorb
xchg
outsb
jb
jp
cltd
addr16
cli
adc
rcrb
or
push
repnz
popf
jb
insb
fistps
icebp
arpl
jns
cld
into
xchg
imul
mov
or
ret
ljmp
popf
mov
insb
movsb
push
lock
shlb
aam
sbb
jo
jp
xchg
inc
mov
movsl
arpl
es
mov
daa
push
mov
jnp
ret
xrelease
lods
xchg
dec
cwtl
sbb
jne
mov
push
and
push
orb
dec
xchg
loop
mov
mov
test
mov
dec
mov
push
out
mov
idivb
jno
imul
sub
xchg
sti
push
loopne
repz
jecxz
daa
and
jb
inc
test
cmpsb
mov
pushf
mov
mov
imul
fisttpll
cmp
mov
mov
stos
mov
mov
das
push
jge
sbb
push
jnp
xchg
jns
testb
lret
ficomps
loope
loope
out
icebp
lahf
mov
cld
or
xchg
scas
bound
mov
stos
mov
xchg
inc
fiadds
xchg
test
stos
pushf
rorb
jbe
adc
loop
movsb
inc
push
xchg
mov
mulb
adcl
inc
lcall
pop
fisttpl
jb
into
xchg
xchg
loopne
bound
or
lret
jmp
rclb
pop
mov
adc
or
and
xor
mov
popa
rcll
out
rcr
vpsubq
pop
mov
inc
in
es
mov
or
es
push
push
ds
cmpsl
sub
loope
loopne
into
imul
sub
push
push
dec
mov
cmpsb
or
push
push
jl
dec
jmp
out
cs
add
mov
call
outsb
dec
frstor
icebp
mov
push
data16
add
mov
xor
mov
jns
jo
data16
xchg
adc
repnz
aaa
pusha
dec
shlb
filds
jnp
dec
push
and
out
fdivrs
jne
stc
repnz
fistps
mov
rclb
mov
test
adc
sahf
cmp
push
jle
je
cwtl
push
inc
inc
stos
ret
push
fst
mov
mov
cwtl
cmp
inc
test
out
push
push
xor
xor
pop
pop
aas
mov
fistpl
movsb
jmp
fsubr
or
call
leave
dec
dec
leave
lods
push
sub
das
test
xor
sub
stc
sub
cmp
scas
pushf
lcall
and
inc
orl
sbb
mov
and
xchg
popa
sbb
stos
sub
aaa
popf
jo
cmpsb
push
loop
or
outsl
adc
divl
insb
push
call
mov
scas
movsb
sub
fnstcw
cmp
pop
and
adc
aaa
loop
sahf
test
xchg
adc
push
xchg
push
scas
jmp
sub
pop
adc
and
lret
inc
cmp
sbb
jbe
je
insl
shll
xchg
sub
test
imul
dec
insl
outsb
jp
lcall
shlb
repz
fdivs
rolb
mov
mov
jmp
mov
xor
xor
adc
icebp
cmp
inc
add
dec
pop
enter
outsl
or
xchg
data16
adcl
inc
or
or
div
fsub
lods
inc
add
pop
in
xchg
out
add
out
sarb
sbb
xchg
inc
cmpsb
push
icebp
sarl
xchg
dec
xchg
sbb
das
int3
jle
leave
stos
ror
mov
xorb
push
dec
ljmp
sbb
lcall
sbb
pop
outsb
hlt
sbb
stc
pop
outsl
adc
lods
hlt
dec
idivb
lods
jb
loopne
mov
xor
jle
hlt
xchg
in
push
cmp
in
loopne
mov
pusha
loope
es
dec
out
sub
jne
test
pop
insb
icebp
sub
mov
clc
lods
xchg
cmp
aas
mov
mov
push
movsl
fwait
jmp
test
mov
cmc
mov
in
cmpsl
pop
in
add
xor
pushl
pop
es
pusha
sar
mov
cmpsl
popa
mov
cld
or
push
sub
in
inc
test
xor
cmp
outsb
cmp
and
dec
fwait
lods
inc
or
arpl
nop
cmp
sahf
pop
mov
cmp
fldcw
push
pop
hlt
lcall
fadd
test
sub
or
fstps
or
xchg
mov
push
addr16
and
and
movsb
arpl
jno
cwtl
pop
pop
dec
fcomp
inc
inc
cmp
ret
out
imul
dec
out
fsts
out
stos
sub
xor
rorl
movsb
add
pop
mov
scas
sub
cmp
pop
push
mov
testb
jnp
cmp
xlat
testl
mov
xor
rcl
aam
loopne
pushf
mov
out
mov
dec
cmpsb
lret
sti
mov
adcb
mov
mov
sbb
in
movsl
cmpsb
aas
lods
jbe
mov
jmp
mov
imul
test
dec
daa
mov
xchg
shl
fstpt
inc
add
int
imul
std
xor
mov
dec
ds
movsb
dec
add
adc
xchg
push
xchg
in
mov
loop
stc
and
sub
aas
sbb
rolb
xchg
inc
pop
sbb
adc
notl
push
hlt
or
push
in
loope
cmp
lods
lcall
js
add
sub
jnp
loop
cli
dec
sar
dec
test
or
push
cmpl
lret
and
in
pop
pop
pop
rclb
mov
out
cmp
jne
pusha
mov
jo
jnp
adc
cmp
out
sub
jle
xor
mov
inc
xchg
clc
or
pop
movsl
das
bound
and
mov
in
in
inc
jg
mov
jnp
inc
loopew
scas
mov
dec
xchg
xor
lock
pushf
sbb
mov
inc
popf
pop
movsl
adc
push
push
jb
jae
xchg
add
push
sti
test
dec
add
aam
aad
xor
fldt
mov
xchg
mov
mov
clc
lcall
push
in
pop
jl
or
cltd
cmpsb
push
stos
loopne
and
clc
pop
call
stos
mov
push
adc
lods
loope
pusha
rcll
xchg
xchg
fsubs
fldl
popa
in
jno
repnz
bound
loopne
out
movb
pop
inc
cmc
xchg
push
xlat
push
jge
jnp
loope
scas
push
and
push
cli
out
fs
test
pop
push
lcall
leave
push
fmull
sub
cwtl
inc
jb
pushf
sub
and
int3
das
dec
mov
xor
xor
cmp
xor
daa
push
lahf
mov
mov
je
adc
pushf
insb
mov
sub
iret
push
mov
jb
jno
into
and
push
sahf
cmp
push
cmp
sub
rcll
nop
out
std
dec
pop
xchg
outsb
scas
add
xor
and
lret
fcom
mov
outsl
jb
jcxz
or
es
or
in
jno
mov
stc
ljmp
lea
aaa
outsb
cmp
and
push
addr16
push
ret
dec
test
cmp
sbb
mov
inc
nop
jmp
cmpsl
fisubrl
mov
aas
out
lods
adc
inc
rcll
sbb
stc
mov
les
js
fcmovb
addr16
cmp
fildl
cli
addr16
cs
lds
insb
push
cltd
push
aaa
push
and
std
fwait
loope
mov
ds
loopne
mov
out
movsl
sbb
mov
jo
addr16
ret
test
add
sub
cmp
or
or
push
pop
mov
pop
nop
lds
xchg
popa
and
loopne
push
vmptrst
mov
lods
sbb
push
inc
dec
mov
and
shlb
jbe
jecxz
jmp
ss
or
fistps
mov
fisubl
mov
data16
sarb
fwait
push
inc
jp
inc
pop
mov
xchg
cltd
mov
fcoms
inc
andb
push
out
popf
lea
iret
mov
sahf
pop
cmp
xchg
loopne
in
in
dec
out
mov
inc
nop
xchg
fldln2
xlat
aad
mov
adc
jg
lea
cmp
mov
out
sbb
test
dec
or
test
add
loopne
dec
mov
and
jbe
mov
test
mov
mov
repz
call
mov
nop
sub
fldt
in
inc
sbb
jl
sub
in
or
jo
repnz
mov
in
out
pushf
inc
xchg
loop
js
cmp
lods
xchg
mov
and
pop
dec
out
mov
lea
loope
fcmovbe
push
push
dec
cmc
xchg
mov
sahf
les
mov
xchg
popf
jno
add
bound
gs
cmp
popa
orl
sbb
insb
outsl
rcrb
rolb
mov
jns
mov
sbb
ficompl
faddl
sarb
pop
xor
mov
outsb
adc
mov
jmp
cmpsb
pushf
movsb
xchg
cmp
pop
out
outsb
mov
out
pop
mov
aas
js
and
cmpsl
sbb
push
jge
adc
rorb
pop
jmp
or
aad
cld
stc
cltd
sbb
or
incl
jle
sub
outsb
cmp
and
inc
ljmp
or
or
pushf
fmuls
jp
add
loopne
push
mov
cmpsl
sub
sarb
sti
push
ficoml
dec
xchg
push
xor
lret
bound
adc
lods
mov
mov
mov
pop
hlt
je
xchg
sbb
add
inc
loopne
shr
andl
cmp
mov
jae
mov
fwait
xor
push
push
fcomps
mov
fldcw
add
aad
rorb
cli
loope
sbb
out
mov
jne
lret
mov
jbe
adc
sti
sbb
pop
mov
xchg
cmp
push
mov
cld
or
mov
shll
cmovns
and
push
mov
jg
adc
scas
jbe
test
clc
cs
xor
jno
xorl
lds
adc
sbb
cmp
imul
adc
or
or
dec
mov
push
ss
mov
xchg
int3
jge
adc
or
and
sahf
andl
cltd
dec
adc
mov
popa
lea
fadds
adc
sahf
sbb
xor
out
mov
outsb
ljmp
call
mov
jne
popa
subb
xchg
inc
fisttpll
or
ret
lods
int
inc
mov
mov
int
or
ljmp
pusha
cli
jbe
mov
outsl
xchg
outsl
in
dec
lret
ss
dec
xor
decb
sub
adc
push
jno
aas
lahf
lcall
fwait
repnz
mov
test
mov
lods
pusha
mov
push
xchg
addr16
push
xchg
mov
in
add
mov
cs
xor
pop
mov
jl
decl
into
shl
cltd
mov
cwtl
pop
and
cltd
cmp
sub
stos
adcb
mov
lret
jno
adc
mov
xor
jne
jle
or
fmulp
mov
cmp
gs
iret
adc
sti
sub
and
popa
movsl
arpl
sbb
movl
pop
jne
out
mov
or
pusha
cmp
nop
mov
out
xchg
mov
cwtl
test
sbb
data16
stos
jnp
xor
sbb
push
sbb
pop
fildl
pop
ja
int
outsl
gs
fdiv
mov
mov
jb
pop
out
lret
icebp
out
repnz
adc
add
das
inc
shlb
pop
les
iret
push
xchg
cmpsl
ja
icebp
mov
out
imul
enter
or
pop
sub
cmp
inc
addb
data16
push
sub
rol
jne
mov
iretw
push
adc
inc
add
out
add
lret
dec
xchg
adc
cwtl
fwait
sbb
sub
rcrl
xor
out
lea
outsb
insl
pop
sub
cmp
into
js
xchg
mov
dec
mov
mov
and
cmp
push
fcmovnu
or
dec
jl
es
test
cmp
sbb
xor
jg
adc
out
jae
xor
js
mov
sbb
dec
int3
insb
rcrb
cmp
jge
scas
cmp
pop
cmc
push
xor
out
pop
das
push
negl
lds
cmp
or
dec
fdivs
mov
fsubrs
je
orl
lds
dec
sub
shl
add
sub
dec
xchg
and
ss
scas
cmpsb
mov
in
mov
add
push
filds
push
mov
xchg
xor
arpl
arpl
mov
inc
or
loope
adc
cwtl
inc
inc
push
jmp
jae
mov
stc
cmp
pop
lods
adc
or
jl
test
stc
addl
int3
jg
sub
jb
lock
repz
nop
cmp
scas
mov
mov
add
out
repnz
pop
adc
pop
cmc
cmp
xchg
and
stos
add
movsl
out
imul
push
gs
daa
cwtl
inc
mov
lret
adc
mov
in
sahf
xchg
lret
orb
lock
sub
pop
and
ljmp
arpl
mov
xchg
out
ja
not
mov
inc
jb
shrb
in
pop
ss
outsb
rclb
jecxz
or
sbb
enter
neg
mov
fsubs
inc
adcl
adc
test
add
stos
pop
push
js
sbb
add
xor
movsl
bound
adc
jo
cwtl
xlat
sahf
mov
cmpsl
aam
lods
adc
roll
cmp
mov
js
push
or
mov
pop
and
lods
into
push
andb
hlt
lahf
insb
mov
stos
mov
adc
mov
ret
and
je
pop
std
mov
popf
push
js
xor
xor
leave
imul
ja
cmp
and
lock
dec
dec
mov
testb
push
mov
jl
cmc
sbb
inc
pop
test
lret
mull
inc
dec
and
jbe
in
cmc
mov
int3
sbbb
inc
mov
das
gs
and
ljmp
test
daa
sbb
lods
mov
and
call
adc
jo
sbb
adc
arpl
daa
bound
je
cld
fs
xchg
mov
mov
push
push
inc
inc
je
pop
popa
sub
pop
inc
mov
jbe
jecxz
mov
cmp
xchg
lock
pop
scas
lret
and
pop
or
fwait
push
inc
inc
inc
pushf
add
add
mov
adc
clc
movsl
mov
inc
xchg
adc
mov
lods
fs
mov
mov
adc
inc
out
jns
pop
or
mov
sub
cmp
cmp
jmp
inc
add
cmp
jmp
iret
inc
pop
mov
xchg
inc
inc
mov
xchg
sbb
or
adc
test
and
pop
cmp
pop
xchg
stc
pop
movsl
add
cmp
inc
mov
sbb
mov
les
cld
jecxz
fidivrs
rorl
jp
fnstcw
testb
sbb
mov
push
mov
std
inc
mov
push
mov
push
add
fmuls
pop
ret
aad
icebp
mov
int3
out
shll
bound
stos
int3
or
loopne
inc
pushf
and
mov
bnd
aaa
mov
aad
jmp
push
mov
repz
dec
repz
sub
adc
aas
jnp
push
push
cmpsl
mov
pop
xchg
imul
mov
cld
jno
je
pop
xlat
and
and
insb
pop
jno
rcl
inc
int3
cmpsl
push
jecxz
xchg
lcall
mov
mov
rcrl
pushf
not
sbb
pop
arpl
push
sbb
fdiv
mov
pop
roll
leave
out
pcmpeqb
push
movsb
arpl
sub
add
test
out
mov
cwtl
and
popf
push
push
sbb
push
js
movsbl
out
sahf
stos
mov
addb
out
into
outsb
inc
iret
xchg
mov
pop
mov
mov
mov
cmp
mov
jbe
inc
pop
mov
or
add
jge
or
xor
push
pop
xor
leave
cli
dec
out
xor
xlat
jge
push
or
push
or
stos
xor
nop
pop
cmp
rorb
xor
fistps
in
mov
mov
jns
jecxz
xchg
movsl
sub
push
cli
jb
mov
inc
jmp
jns
xor
cmp
outsb
jae
repnz
outsb
jae
fcomip
rcrb
mov
imul
sbb
jl
and
ficoml
lock
xlat
orl
pop
ret
mov
xchg
ja
or
dec
test
jbe
fwait
dec
aad
mov
adc
repnz
js
hlt
scas
cmpsb
xor
fiaddl
arpl
mov
sub
pminsw
pop
mov
mov
ficoms
in
sub
xchg
cmp
jl
mov
adc
adc
lcall
xchg
mov
rcrl
add
jl
mov
ja
mov
rcrb
scas
sub
xchg
popf
add
dec
push
jnp
mov
jecxz
movsb
stc
xlat
xchg
mov
jg
hlt
shlb
add
mov
dec
mov
jnp
cmp
test
out
mov
cmp
cld
xchg
cmp
cmpsb
mov
lret
jno
xor
push
xchg
jns
mov
xchg
pop
mov
xchg
xor
mov
fiaddl
cmp
jmp
push
out
push
lret
in
aaa
or
lahf
xchg
jle
push
pop
pop
aam
push
movsl
xor
adc
jo
push
mov
ret
subb
cld
cmc
cmc
jno
fldcw
jo
cwtl
sbbl
stos
loop
add
pop
pop
jno
shll
inc
mov
mov
or
xor
adc
leave
cmp
xchg
or
mov
adc
pop
jne
jmp
inc
imulb
lret
nop
movsl
sti
call
cmpsb
pop
das
subl
mov
push
add
neg
mov
sti
dec
adc
lea
inc
adc
repnz
sub
sti
daa
mov
push
cmpsb
scas
lods
inc
gs
iret
dec
test
or
fnsave
outsl
and
imul
xchg
cmpsl
insl
inc
mov
cli
lahf
jb
enter
sbb
popl
and
xor
je
mov
or
cli
je
jg
lods
mov
xor
cld
nop
int
sub
push
and
test
mov
movsl
lods
ret
jne
insl
lea
push
outsl
mov
out
call
scas
mov
ret
mov
fs
andl
aad
ds
inc
xchg
pop
pop
repz
push
push
xchg
mov
add
inc
iret
inc
cltd
or
and
ljmp
sub
or
mov
mov
mov
jmp
add
in
enter
mov
test
scas
mov
and
jl
mov
repnz
mov
repnz
add
and
mov
jns
iret
push
mov
lea
and
pop
xchg
loopne
pop
mov
mov
add
ret
xchg
or
or
filds
pop
sbb
mov
and
loop
negb
fldl
or
xor
or
xchg
out
rcr
bound
mov
mov
sub
jge
cmp
mov
cmp
test
data16
test
mov
dec
in
or
insl
jp
sub
sub
mov
sbb
sub
mov
mov
add
mov
lock
aad
cmp
lret
lret
ror
mov
jp
mov
sub
jmp
fildll
cmp
and
cltd
xchg
repz
and
aaa
stc
es
mov
cmp
dec
adc
hlt
arpl
xor
pop
ficoms
push
cli
adc
lcall
enter
test
mov
loopne
sub
aas
mov
mov
mov
cmp
repnz
jecxz
mov
sub
in
inc
xchg
and
fsubs
sub
jbe
push
mov
imul
mov
add
and
adc
xchg
faddp
sahf
mov
sbb
jmp
int3
scas
xchg
mov
mov
test
outsl
cmc
pushl
mov
lea
std
pop
movsb
xchg
mov
es
addr16
or
add
es
sbb
insb
stos
sahf
cmpb
push
xchg
and
adc
daa
pop
pop
dec
push
mov
loope
mov
mov
sub
cmpl
rcr
andb
jo
mov
lahf
rcr
mov
rcll
mov
sahf
jnp
daa
in
sbb
aam
sub
mov
jae
mov
lods
mov
cld
xchg
arpl
aaa
mov
add
je
sub
lods
adc
push
and
fs
mov
dec
push
cs
xor
mov
testb
adc
push
enter
and
or
gs
std
sbb
mov
dec
fucomip
mov
iret
jb
call
ret
nop
push
cmp
xchg
mov
pop
data16
ljmp
movsb
mov
mov
sub
push
inc
decb
push
imul
xchg
das
mov
lods
mov
dec
dec
xor
dec
mov
sarb
inc
pushf
xchg
or
push
cmpb
mov
add
push
or
push
push
stos
mov
or
cmp
mov
xor
rcrl
mov
and
mov
sub
mov
push
mov
xchg
mov
push
push
xchg
jne
lret
xchg
test
sbb
mov
cld
push
push
in
mov
inc
sahf
int3
and
inc
add
adc
mov
popf
jge
ss
cmpsl
pop
cmp
xchg
rcrl
fisttpl
out
sub
imul
icebp
xlat
sbb
lds
xor
sub
lea
popa
mov
xor
sub
cwtl
imull
sbb
cmpsl
push
test
push
push
iret
rorb
repnz
xchg
lsl
push
jnp
inc
or
popa
mov
aaa
jmp
jae
in
imul
in
rorb
cmp
lods
mov
in
in
jne
and
xchg
mov
xchg
inc
insb
xchg
and
mov
hlt
push
mov
jge
xor
add
inc
mov
loope
jg
int3
pop
int
mov
lret
and
roll
insl
icebp
cltd
xor
adc
adc
fiaddl
notl
cld
mul
sbb
push
pop
cmpsl
out
mov
cmp
cli
int
mov
insb
mov
out
jecxz
jle
ss
dec
adc
adc
or
ja
pop
out
lods
out
adc
xchg
aad
lods
sub
pop
ljmp
cmpsl
or
sub
lock
movsb
ja
jmp
and
dec
fsub
shlb
out
or
sub
mov
push
loopw
push
nop
adc
sbb
call
nop
adc
test
xor
bound
jp
dec
imul
pushf
jle
mov
out
mov
je
jp
popl
fdivl
fldenv
and
jp
xor
stc
cmp
jns
ret
loopne
cld
aad
xor
fbld
jecxz
jbe
mov
pusha
out
fcoml
xchg
pop
je
xchg
dec
test
cld
or
lods
int3
mov
andb
dec
mov
cmp
mov
fcomps
cmp
iret
int
aas
xchg
or
and
jb
test
push
ficomps
jne
pop
cmp
push
and
cli
jmp
sbb
aaa
mov
or
jbe
and
add
and
outsl
scas
cld
call
out
ret
or
sbb
fwait
notl
and
lahf
fs
arpl
insb
lret
ja
cmp
addr16
sbb
jg
icebp
mov
inc
mov
sub
inc
int3
inc
mov
mov
jl
sbb
mov
pop
xchg
cmp
mov
test
push
cmp
jp,pt
xchg
in
loop
cmc
mov
push
mov
jl
mov
xor
adc
sti
adcb
test
dec
jae
cs
aad
cwtl
adc
pop
adc
int3
jg
mov
mov
and
loop
fistpll
test
lock
mov
loop
pop
lcall
in
xchg
ficompl
sub
mov
xor
push
aaa
mov
push
fisttpll
add
insb
dec
mov
repnz
add
mov
jmp
adc
or
scas
popf
jnp
mov
aam
in
call
adc
gs
and
or
adc
cwtl
mov
mov
xor
jb
cmp
fadd
pop
popf
push
inc
cmp
mov
push
xlat
out
loope
cli
pusha
adc
mov
pop
mov
test
mov
xor
shrb
enter
leave
fstl
inc
outsb
scas
inc
mov
mov
push
or
mov
or
es
faddl
out
shlb
into
jns
call
push
pop
shll
shll
fistps
shlb
add
pop
ja
mov
add
sahf
leave
ja
movsb
ret
repz
out
sbbb
sub
or
sbb
and
test
push
xor
xor
pop
cltd
int
adc
in
cltd
pop
pop
outsl
fisubs
stos
mov
jge
cmpsb
jae
in
fnsave
andl
adc
int
aaa
push
filds
in
pop
movsb
inc
adc
test
or
jp
and
lahf
mov
out
outsb
jns
xchg
cld
imul
lds
sbb
dec
out
addps
iret
icebp
into
es
out
pop
dec
mov
or
inc
inc
js
and
out
and
xchg
addr16
push
aas
xchg
xor
loop
popa
xor
ret
js
ljmp
dec
lcall
inc
jno
arpl
jbe
push
jb
mov
jle
popa
imul
push
pop
mov
test
xchg
shll
scas
loop
mov
mov
cmp
xor
fwait
xor
das
jp
mov
test
loope
cmp
aas
outsb
jae
lock
test
aad
xchg
out
adc
data16
testb
movsl
ret
call
imul
xor
push
mov
adc
sti
push
pop
dec
jbe
mov
and
mov
loopne
adc
push
cmp
pop
add
ss
jg
fsubl
and
sbb
sbb
push
pop
pop
orb
mov
mov
mov
push
or
xchg
or
add
movsb
pop
sar
clc
jp
xchg
mov
and
pop
sbb
and
js
addb
push
cmp
out
xchg
popf
jbe
pushf
jno
pop
out
aad
ljmp
out
out
inc
mov
jle
ficoml
scas
jns
mov
out
outsb
sti
cmp
ds
push
lret
jno
cmpsl
outsb
scas
mov
mov
dec
cmp
sar
xlat
fnstenv
add
fcomip
pop
xchg
jne
lcall
dec
xor
mov
and
imul
inc
xor
mov
inc
xchg
cmpsl
fdivl
dec
psrlw
clc
sub
push
jne
jge
out
inc
repnz
adc
or
push
pop
sbb
mov
mov
adc
test
xor
or
pop
jns
push
pop
nop
or
pop
popa
sbb
mov
mov
add
sbb
push
in
aaa
xchg
out
pop
cli
inc
jmp
push
loop
int3
mov
inc
adc
movsl
ljmp
push
stos
test
test
mov
sbb
pushf
xchg
aad
push
cmp
leave
out
inc
pop
xor
cmpsb
jno
data16
dec
and
int3
xlat
cmp
in
dec
gs
repz
lret
and
jg
jne
xchg
or
xchg
pop
or
mov
stos
rorb
add
movsl
or
push
sub
shll
mov
aad
dec
and
cmc
or
push
mov
xlat
xchg
loope
pop
cwtl
sbb
and
xchg
jne
xchg
jmp
pushf
hlt
lcall
bound
lret
lret
leave
adc
jno
pop
mov
mov
movsl
and
arpl
incl
and
inc
jecxz
ljmp
out
addr16
mov
add
cmp
divl
jg,pn
and
sub
dec
fistpl
mov
repz
add
aas
fisubrs
ror
mov
push
pop
fmuls
stos
pop
push
adc
fwait
xchg
cmp
call
sub
mov
adc
or
jge
mov
mov
sbb
jo
in
inc
mov
stos
aas
pop
movsb
into
dec
in
std
inc
cli
repz
mov
jge
ror
mov
mov
or
ljmp
out
clc
lds
rcrb
dec
mov
fimuls
mov
mov
in
pop
rcrb
subl
fistps
pop
or
add
setne
xchg
inc
sub
fwait
test
ficomps
out
addr16
and
pushf
push
in
push
sub
dec
sarb
cltd
mov
mov
dec
or
fwait
add
hlt
jmp
test
enter
fwait
sub
jecxz
or
pop
movsl
test
subl
inc
inc
imul
js
ret
js
cwtd
dec
lods
int
mov
cld
sub
push
and
loop
lea
outsl
sbb
stos
mov
mov
loope
mov
fwait
cltd
ja
lock
imul
pop
dec
add
mov
cs
dec
scas
lret
adc
or
dec
xchg
repnz
pop
loope
ja
or
or
pop
jg
push
pop
cmp
in
ficomps
scas
inc
inc
mov
imul
bswap
nop
lods
adc
cmpxchg
push
pusha
or
jl
sub
shl
rcrl
push
inc
cmp
sub
nop
add
pushf
inc
test
outsl
inc
shlb
xchg
dec
cmpl
pop
mov
push
adc
cltd
ja
mov
jb
leave
inc
mov
pop
jmp
pop
sub
jae
adc
addr16
push
xor
xlat
subl
push
mov
rcrl
cmp
inc
sarb
scas
pop
int
xlat
das
mov
xor
xchg
push
idivb
mov
push
rcll
shrl
in
mov
mov
insb
shll
sub
stos
rolb
and
jns
mov
push
in
or
xchg
rolb
or
xchg
shll
push
stos
dec
rolb
out
rcrl
pop
jp
aas
sbbb
fcomps
jne
mov
push
test
inc
add
jmp
aam
mov
into
mov
sti
out
lret
aad
rorb
mov
mov
push
ja
cmpsb
or
stos
ffree
fistl
push
cli
jae
xchg
fisubrl
addb
pushf
xchg
les
aad
dec
mov
xor
aad
mov
adc
mov
add
sti
lcall
addb
cwtl
hlt
dec
enter
cmpsb
cmp
icebp
pop
adc
mov
mov
jmp
cmp
sub
pushf
int3
dec
dec
lret
movsl
mov
leave
loope
hlt
pop
rclb
xor
jl
rcrl
jno
out
lret
jg
mov
fidivrl
pop
dec
fisubrl
adcl
insl
add
imul
push
cmpsl
mov
jns
pushf
mov
jl
addl
and
sbb
push
xor
imull
jmp
in
js
cltd
jbe
movsl
imul
lcall
mull
stos
adc
mov
cld
xor
inc
ret
cmp
pop
push
notb
push
cltd
inc
std
in
push
and
mov
incl
loopne
pop
out
cmpsl
andb
hlt
test
jecxz
mov
sbb
mov
mov
pushf
jecxz
and
push
rorl
gs
dec
les
imul
lcall
lock
inc
scas
push
xlat
sub
rcll
out
dec
adc
ret
enter
std
rorb
xchg
flds
nop
fisttpl
mov
fwait
outsb
iret
inc
push
testl
stos
cmp
std
or
not
aam
lds
adc
jge
stos
lahf
cmp
js
adc
mov
aas
sub
lcall
xchg
mov
ds
sbb
js
jmp
mov
mov
loope
inc
push
icebp
scas
ljmp
mov
xchg
adc
pop
inc
cmp
mov
nop
fidivl
mov
addr16
loope
loopne
aaa
or
inc
aaa
sub
mov
mov
sbb
enter
add
and
cmpsl
and
sbb
jecxz
cs
lret
jp
hlt
lret
add
jge
in
pop
dec
jne
pop
inc
xlat
add
shll
push
mov
xor
cmpsb
jb
pop
adc
cwtl
and
sub
cld
push
add
rolb
xchg
ret
jne
shrl
movb
xor
jge
cmp
adc
jns
enter
inc
stos
sub
lret
les
pop
pop
outsb
cmp
adc
xor
jbe
les
ss
cs
or
cmp
rcl
pop
sbb
mov
popa
mov
jg
lock
js
negl
loopne
jnp
iret
ds
mov
outsb
lods
andb
iret
cmp
cltd
fistps
ljmp
divl
mov
inc
addr16
hlt
insb
bound
jae
ss
je
push
iret
fistpll
test
stos
mov
data16
jns
movsb
into
mov
sbb
mov
jb
xchg
jecxz
mov
rorb
push
and
in
gs
pop
pop
fcoml
test
ljmp
xchg
lret
push
xor
aad
mov
mov
mov
andl
or
mov
mov
ljmp
jecxz
mulb
and
sbb
sbbb
inc
cmp
xchg
and
int3
mov
or
mov
in
mov
call
or
pop
push
sub
fisubrl
jns
fisubrl
outsb
and
out
pop
push
cs
mov
inc
sub
int
jns
push
stos
mov
or
jo
adc
ljmp
mov
and
lods
out
add
repz
lods
dec
lcall
enter
sarb
fdivr
cmp
pop
inc
push
loopne
jge
shrb
hlt
arpl
popa
sub
mov
inc
inc
or
in
ljmp
dec
int3
ss
cwtl
push
pop
push
mov
jno
dec
pop
repnz
push
pop
lock
jo
jge
les
jmp
lret
cmp
mov
add
mov
mov
dec
repz
out
cmp
xorb
sub
out
jl
dec
or
in
sbb
popf
dec
mov
cmpsb
jmp
leave
sarb
fsubr
fdivl
aad
inc
xchg
lret
hlt
jae
or
jo
add
inc
mov
sbb
aam
int3
test
xchg
lcall
push
mov
sbb
and
cld
pop
inc
shr
dec
in
cmp
clc
add
xor
test
out
sbbl
aam
arpl
out
data16
cmp
adc
andl
mov
cmpsl
addl
ret
ret
orb
sbb
mov
dec
sbb
andl
pop
out
sub
cmp
lea
ds
push
mov
cmpsb
pop
push
in
and
mov
les
je
cmp
pop
push
pop
xor
adc
jecxz
jne
loop
leave
push
aad
pop
scas
inc
add
mov
jae
add
jno
dec
lock
push
test
cmp
aam
mov
jns
inc
push
push
notb
lret
roll
inc
push
call
ja
dec
sbb
pop
pushl
jo,pt
push
mov
int
jo
pop
cwtl
pop
xlat
mov
adc
outsl
inc
outsb
sbb
sub
cltd
push
mov
call
mov
mov
push
shll
sbb
hlt
imul
cmp
sahf
in
sti
or
add
pop
inc
jns
fwait
in
movsb
out
sbb
xchg
pop
adc
repnz
push
add
mov
sbb
out
xlat
sub
and
int
andb
sbb
repnz
movsb
std
sub
pop
or
aad
cltd
jp
addr16
je
roll
jae
out
rorl
xchg
inc
or
shrb
push
jp
xor
and
mov
dec
inc
pop
xorb
sbb
xchg
outsb
aad
push
lock
xchg
jbe
xchg
mov
or
popf
inc
loope
add
sbb
inc
sbb
aam
cmpsl
and
aad
ja
fidivrl
xchg
pushf
sbb
movsl
xchg
imul
cwtl
movsb
dec
adc
mov
mov
rcr
mov
popa
pop
sbb
push
xorb
or
dec
popf
mov
pop
or
fdivrl
loop
xor
or
or
ret
scas
mov
mov
jl
inc
repz
jo
xchg
ret
jecxz
popa
mov
ja
mov
xor
jno
push
xor
pop
jns
dec
mov
mov
jb
xchg
rclb
xor
push
cmpb
ret
jge
popf
int3
bound
jo
daa
mov
lds
movsl
fs
jmp
int
dec
or
daa
and
outsb
cmp
dec
push
adc
pop
in
inc
push
adc
scas
hlt
xchg
pop
mov
int
decl
xchg
in
dec
push
fiaddl
fldenv
sub
xor
inc
sbb
xor
rorb
inc
inc
test
mov
popf
push
jg
dec
mov
xor
in
mov
push
ja
data16
xchg
push
pop
ljmp
jecxz
xor
int
xchg
push
jbe
std
add
xchg
push
jo
sbb
test
repnz
push
lahf
out
sub
stc
dec
aas
mov
repz
mov
call
add
pushf
xor
fnstsw
mov
xlat
mov
xor
gs
dec
icebp
sub
sbb
mov
cld
ds
or
hlt
sbb
sbb
enter
xor
rorb
inc
jg
fstl
sbb
enter
push
adcb
mov
outsl
jmp
push
iret
out
push
into
mov
popa
lds
js
mov
sti
mov
adc
adcb
sub
xchg
add
cmp
xchg
cmp
out
out
jns
stos
push
xchg
push
movsl
jnp
subl
lret
mov
in
xor
lods
sub
sub
adc
lcall
loope
xchg
mov
pop
pop
or
mov
insb
xchg
sbb
xlat
and
cmp
and
push
jmp
test
push
jge,pt
daa
push
cmpsl
sub
fiadds
jbe,pn
ficoml
movsl
mov
enter
cmpsb
mov
jae
cltd
cmp
pop
cmc
sbb
xlat
add
xorps
xor
and
mov
leave
push
cmc
inc
or
insb
push
repnz
cmp
pushf
cmp
and
cmpsb
lcall
jno
add
imul
cmp
daa
pop
xor
mov
mov
add
popa
ja
test
notb
jbe
fsubs
fs
into
nop
xor
adc
mov
push
dec
clc
mov
inc
test
arpl
je
push
rcrb
xchg
push
dec
push
daa
mov
test
push
pop
xchg
fs
dec
into
enter
pop
mov
pop
sub
cmpsl
or
cmpsl
xchg
inc
out
and
sub
add
dec
cli
stos
aaa
dec
mov
dec
cwtl
ss
stos
lods
insb
mov
lea
in
jmp
sbb
ficomps
pop
xor
mov
in
sub
call
mov
lret
pop
mov
mov
mov
jp
dec
sub
xorb
stc
jns
dec
mov
mov
ljmp
bound
fwait
lret
pop
sub
movsl
imul
sbb
adc
es
hlt
lret
pop
push
mov
inc
adc
push
mov
aas
sub
mov
inc
push
mov
out
lods
push
test
fcmovb
xchg
adc
lcall
mov
fldl
fidivrl
sbb
mov
dec
jge
mov
icebp
cwtl
xchg
adc
xchg
add
xor
lods
jns
mov
ljmp
sar
in
insl
stos
mov
nop
daa
xchg
imul
outsb
mov
fcmovu
push
out
adc
xchg
pop
mov
repz
mov
xor
inc
scas
sub
lds
stc
mov
mov
mov
cwtl
or
jg
fdivrp
subps
xchg
ret
stos
or
dec
mov
jecxz
in
xchg
insb
in
sti
pop
xor
mov
mov
mov
in
cli
xchg
inc
sub
mov
stos
das
lds
dec
outsl
cltd
and
mov
mov
stc
aaa
mov
mov
subl
popa
and
jns
mov
adc
stos
push
mov
sub
or
mov
inc
pop
scas
and
movsl
dec
test
es
lcall
sahf
pop
add
sti
adc
pop
mov
sub
sbb
out
fldt
les
mov
sbb
movsb
pop
stos
xor
daa
mov
fsts
enter
shl
lahf
sub
mov
fistpl
or
test
sbb
dec
subl
jnp
xchg
sbb
fnstsw
repnz
bnd
stos
jmp
sub
jle
adc
pushf
mov
stos
or
daa
mov
mov
mov
sub
cmp
ljmp
mov
sbb
cmpsl
xchg
mov
bound
sbb
mov
inc
pop
test
jbe
xchg
sub
xor
ret
mov
push
sbb
gs
aas
and
movsl
shl
out
inc
add
mov
and
xor
pushf
mov
pusha
pop
xor
sahf
ss
lcall
inc
dec
out
in
mov
add
lahf
or
and
daa
lret
flds
jnp
sub
sbb
jb
shl
fucomp
std
jge
mov
and
jp
clc
out
adc
mov
xlat
pop
sub
ss
scas
mov
cld
push
sbb
stc
pushf
in
repz
and
ror
sbb
dec
call
pusha
cmp
lahf
jnp
and
fwait
xlat
push
fistps
inc
lret
and
lock
mov
aad
mov
imulb
xchg
iret
mov
les
stos
push
in
mov
lcall
test
xor
xor
cli
mov
fdivs
rolb
mov
and
sarb
jl
stc
daa
mov
into
fnsave
mov
repnz
push
xchg
jmp
mov
pop
ss
push
and
fadds
mov
push
ret
outsb
frstor
jns
sbb
in
out
fwait
and
je
dec
cli
mov
dec
and
bound
adc
adc
pop
jmp
push
hlt
mov
mov
cs
aad
push
in
pop
pop
dec
in
push
in
push
int
cmc
popa
cmp
fs
out
pop
sub
aam
inc
pop
xchg
push
test
inc
xchg
or
sbb
adc
sub
clc
mov
outsb
add
cmp
aas
pop
insb
and
aad
or
nop
add
sub
test
dec
mov
daa
and
xlat
or
cld
in
jbe
pushf
jecxz
lods
sub
sub
lock
mov
inc
inc
dec
repz
and
add
testl
movsl
leave
ret
xlat
pop
mov
lahf
dec
pop
mov
cmp
dec
ss
dec
mov
fcompl
ljmp
int3
and
bnd
push
dec
sbb
mov
out
xor
dec
movsb
sub
add
mov
inc
out
and
cwtl
stos
std
mov
test
cmp
cmp
mov
mov
xchg
pop
ja
notb
mov
sub
push
fsubrl
pop
jo
push
and
sbb
inc
je
lock
pop
mov
add
cmp
xchg
outsl
call
mov
outsl
movsl
adc
inc
daa
sub
xchg
mov
fcmovnbe
aaa
scas
loope
js
scas
mov
lret
aaa
adc
pop
shld
inc
sbb
push
pusha
pop
jecxz
sub
push
dec
cs
roll
in
add
arpl
pusha
mov
stc
ljmp
or
sbb
and
mov
push
lods
scas
and
inc
lahf
push
jecxz
jno
cmp
nop
push
sbb
dec
aam
jge
mov
andl
cmpsb
popa
shll
push
mov
jg
mov
sub
rcrl
cmp
and
pop
fwait
scas
sub
xchg
repnz
stc
cli
cmp
jmp
xchg
pop
les
add
nop
scas
gs
add
adc
fstpt
push
ljmp
sub
ja
cmp
filds
xor
loopne
push
xchg
push
cmpsl
popf
or
into
jno
xchg
ret
insb
jge
lea
pop
andl
xor
das
add
push
inc
aad
das
mov
or
es
add
push
push
mov
and
nop
je
push
add
or
mov
aam
dec
jle
add
fldcw
fnstsw
pop
fldenv
and
cmp
lret
and
cmp
add
ret
test
icebp
adc
das
push
repnz
scas
in
shrb
add
mov
add
mov
das
cmpb
lret
mov
imul
in
fnstenv
enter
and
lret
sub
cmpsl
mov
les
testb
ja
jnp
push
push
push
jo
mov
shlb
imull
ret
pop
sub
dec
inc
sbb
das
dec
mov
dec
jp
cmp
push
pop
ret
pusha
incb
xchg
je
bound
lods
es
dec
popa
dec
jl
lea
fsubrl
inc
pop
mov
mov
dec
out
xor
lods
and
into
rclb
in
push
mov
inc
sub
es
enter
shlb
sbb
hlt
cwtl
jo
xchg
xchg
or
out
lds
fmul
and
imul
roll
push
out
test
jo
in
inc
pop
pop
gs
cmp
mov
dec
mov
cmp
or
cwtl
adc
mov
and
test
cmp
ret
idivl
clc
xchg
xor
pop
lret
andb
imul
cs
movsl
add
mov
stos
inc
jnp
add
mov
cmp
sbb
dec
dec
add
fxch
in
test
jae
popa
imul
push
jb
fdivrs
fisubs
gs
jnp
dec
repnz
adc
xor
sbb
cld
pop
int3
xor
fnstcw
adc
pop
add
fcoml
pop
xchg
movsb
fs
xchg
enter
imul
adc
fcomps
pop
push
cltd
shl
or
stos
and
xor
mov
cmp
push
sub
push
jo
rorb
dec
xchg
sarl
cmc
push
movsb
and
shr
das
fiadds
push
mov
in
in
divb
daa
jmp
roll
cwtl
xchg
push
xorb
mov
call
inc
fisttpll
lods
mov
test
cld
cmc
push
or
into
xchg
ret
mov
loop
jo
sarl
push
pop
push
cltd
xchg
test
mov
jo
jb
mov
mov
in
scas
dec
lret
hlt
cmpsl
jl
add
dec
popf
jo
ss
ficomps
stos
fldln2
and
mov
subb
jle
mov
mov
pop
leave
dec
outsb
push
mov
lds
or
gs
mov
add
loope
sahf
movsl
dec
stc
mov
hlt
pop
push
xorb
xor
dec
add
popf
add
mov
cmp
mov
ret
ljmp
and
shll
sub
pop
sbb
xchg
pop
xchg
fimuls
xor
cmpsb
xlat
imul
stc
mov
rolb
repnz
mov
or
pushf
adc
mov
test
int3
clc
cmp
std
scas
popl
sbb
sahf
or
cltd
cmp
mov
movsl
mov
jl
mov
xor
addb
shrb
jno
sub
into
mov
bound
fcomps
pushf
mov
lret
movsb
fs
in
xchg
push
xchg
pop
cmp
rorb
test
iret
shrl
push
and
pop
cltd
dec
mov
cli
sbb
push
sbb
cwtl
add
jl
mov
clc
shr
pop
mov
das
push
or
movsl
rcrl
outsl
jmp
sbb
jp
xor
lret
mov
xchg
scas
cmp
faddl
sub
cmpsb
in
cmp
nop
jmp
jg
pop
inc
shrl
icebp
fdivrs
xchg
inc
arpl
gs
pop
loope
add
push
gs
sahf
pop
test
je
xchg
rcr
bound
push
jle
lahf
mov
push
pop
test
xchg
push
imul
mov
or
ret
xchg
loope
pop
sbb
sub
adc
cmpsl
lcall
jno
sub
mov
fsubrl
dec
lret
popa
inc
mov
fdiv
idivb
inc
xchg
stos
shrb
sbb
mov
dec
out
ss
loope
gs
mov
insl
xchg
scas
js
mov
sub
pop
cli
lret
rcrl
cmp
pushf
or
cmp
cld
mov
cmpsb
lods
add
push
xchg
xchg
out
popa
adc
jne
insl
push
jns
lcall
add
sub
cmp
push
fidivrl
dec
iret
sbb
lea
dec
xor
xor
adc
adc
sbb
jmp
push
pop
jns
xchg
mov
cmp
test
popf
arpl
inc
enter
cmp
jne
fdivrl
decb
xor
pop
cmp
cli
aad
ss
dec
mov
movsl
jnp
sti
pop
sbb
xor
inc
sub
push
jg
xchg
outsb
pop
aam
push
mov
sub
jg
movsb
imul
stc
cmpsl
pop
pop
mov
mov
xor
cld
stos
pop
push
inc
dec
int3
nop
mov
xor
out
or
mov
loopne
dec
out
rorl
rcl
shlb
cmp
push
lea
mov
sbb
movsl
sarb
mov
fstpl
punpcklbw
mov
cmp
jl
sub
add
xor
inc
or
mov
arpl
push
pop
in
imul
das
and
sub
inc
pop
xor
sub
mov
xchg
ja
jo
rcrl
ds
scas
imul
lahf
rclb
imul
jp
into
pop
sbb
in
scas
sbb
fld
imulb
push
insb
repnz
iret
pop
decb
or
adc
pusha
push
pushf
icebp
subl
jecxz
addl
xchg
imul
and
mov
xchg
nop
shll
sahf
sbb
in
cmp
cmpsl
push
inc
mov
call
popa
mov
inc
out
mov
lods
mov
lret
add
jnp
sub
dec
rcrl
std
mov
jmp
pop
loopne
not
jmp
add
and
jge
mov
call
scas
pop
push
in
pop
cmp
mov
mov
aad
jnp
cli
sbbb
aam
or
jae
arpl
xor
jecxz
mov
movb
jecxz
mov
lods
outsl
nop
sub
lods
mov
shlb
gs
insl
lods
xor
scas
mov
rorl
sbb
inc
xchg
out
in
scas
fs
jo,pn
cmpsb
cmpsb
test
add
dec
inc
add
cmp
jbe
push
mov
mov
push
adcl
jae
orb
sub
in
insb
clc
and
ror
inc
mov
mov
addl
call
arpl
or
adc
cmp
or
fcompl
and
fwait
pop
adc
aas
fnsave
sbb
js
fnstenv
adc
xlat
xor
adc
lea
mov
stc
repnz
std
mov
mov
cmc
mov
jbe
pop
mov
insb
jp
fldt
lret
xchg
mov
inc
adcb
test
int
xor
xor
imul
push
or
jns
scas
in
dec
fs
push
ljmp
sub
push
outsb
cld
inc
add
mov
dec
xor
test
in
xchg
fdivl
popa
std
cmp
jmp
push
cs
sub
sbb
dec
sbb
xchg
fildll
je
test
xor
sbb
xor
mov
sub
mov
dec
mov
fwait
inc
xchg
xchg
xchg
enter
fucomp
cmpsb
adc
je
ss
and
movsb
repz
push
and
int
lahf
xchg
sti
aam
dec
mov
cli
das
stos
cltd
push
mov
cmp
jnp
clc
fimuls
inc
xchg
arpl
ret
xchg
sub
scas
adc
mov
dec
inc
outsb
add
lahf
je
outsl
pop
popf
fisttpll
xor
shr
ret
jnp
nop
outsb
sbb
dec
lods
mov
xchg
out
repz
ret
xchg
cs
outsb
and
xchg
test
mov
lret
adcb
inc
bound
mov
stc
mov
lret
sub
bound
and
mov
sbb
or
cmp
mov
and
push
xchg
mov
jo
inc
xor
cmp
push
dec
int
addr16
or
out
or
iret
ret
shrb
dec
jge
inc
mov
fbstp
mov
stos
lahf
clc
mov
xchg
loopne
cmc
icebp
rolb
sub
ss
rol
xor
ljmp
lea
lret
mov
leave
mov
push
sar
lock
in
pop
push
pop
sahf
jnp
or
popa
pop
jge
jns
mov
cltd
daa
pop
jb
rcl
or
lret
inc
dec
xchg
xor
lods
in
mov
sub
fwait
xchg
rorb
scas
pop
and
ficoms
jne
cltd
inc
scas
cltd
xor
sar
int
push
mov
adc
int
sti
mov
data16
testb
and
adc
fistl
jo
or
std
outsb
dec
ljmp
sbb
xor
or
push
inc
sbb
mov
pop
test
sbb
call
test
in
aam
xlat
in
and
sub
sti
iret
mov
sbb
js
mov
stos
cmp
mov
mov
and
je
cmp
dec
sub
les
mov
push
pop
int
fucomip
arpl
js
lcall
jge
in
stos
jp
xchg
rol
xchg
mov
dec
pop
or
js
cmp
ficomps
lret
cmc
xor
xor
stos
in
ljmp
inc
gs
mov
and
cwtl
stos
add
out
jns
stos
mov
jbe
nop
idivb
insb
pop
sbb
cld
mov
xchg
inc
mov
adc
jnp
cmp
xchg
test
mov
in
faddl
loope
gs
js
push
mov
bound
rclb
inc
es
sub
test
stc
fwait
push
stos
cld
adc
aad
incl
cld
aas
dec
jp
pop
inc
addr16
jns
adc
stos
bound
and
in
lcall
fwait
xor
cmp
movsb
push
xor
sarl
adc
push
fisubl
add
ret
popa
enter
divb
call
jb
cmp
xchg
nop
add
inc
xor
mov
ljmp
adc
or
scas
xchg
xchg
sbb
mov
dec
sub
iret
push
ret
mov
and
je
mov
inc
icebp
test
pop
mov
call
out
loop
loopne
lea
lahf
out
cmp
xchg
repnz
sub
lret
pop
xor
sub
cmpsl
or
inc
sub
ljmp
leave
mov
scas
pop
fwait
sub
mov
scas
scas
scas
fmull
mov
or
aaa
test
jo
sub
js
and
fmul
sub
add
jg,pn
sub
test
adc
mov
push
sub
mov
or
adc
andl
mov
testb
fnstcw
shlb
or
into
push
test
mov
loop
xchg
jp
nop
mov
mov
cmpsl
xor
and
mov
jle
fstl
lea
js
test
fdivr
xor
loope
scas
icebp
inc
push
or
lods
ftst
and
testb
pop
out
fcoms
push
outsb
adc
std
in
test
cwtl
ret
inc
adc
nop
sbb
and
je
inc
pop
je
mov
or
sub
gs
inc
ret
shrb
push
adc
movsl
sbb
cmp
jg
push
scas
int3
iret
stos
ja
push
mov
inc
in
les
mov
lahf
xchg
mov
lock
and
or
pop
int
stos
stos
sbb
lret
pop
fadds
cwtl
mulb
nop
movb
mov
cmpl
ss
xorb
enter
sbb
cmpsl
inc
add
pop
push
mov
lea
xor
fwait
inc
daa
in
out
dec
frstpm(287
inc
fwait
add
imul
sub
test
xor
push
mov
icebp
jne
std
leave
sahf
aaa
xchg
cmpsl
mov
popf
fidivl
jl
out
sbb
addr16
test
xchg
idivl
mov
das
xor
pop
rorb
sub
add
popf
dec
jl
jns
lea
pop
push
push
mov
xchg
adc
test
sub
out
inc
dec
mov
pop
ficoml
fmulp
pop
aas
fwait
repz
mov
fidivs
lret
mov
xchg
or
pop
adc
push
in
pop
sub
xchg
incb
sahf
add
dec
loope
add
push
jl
jmp
jmp
xchg
repz
mov
ja
test
es
xchg
jg
cltd
shr
push
jmp
and
push
das
mov
sbb
jns
in
aaa
jp
dec
mov
inc
mov
cmp
aas
gs
imul
daa
shlb
or
sarb
pop
mov
cmp
fsubrp
adc
mov
daa
xchg
adc
and
imul
in
fsts
mov
xchg
popf
in
dec
fidivrs
cs
pop
pop
aad
pop
xchg
mov
sub
jns
jg
test
popl
das
ja
cmp
mov
icebp
les
sub
scas
mov
pop
dec
push
cli
mov
lret
cmp
cmc
xchg
jle
popa
and
inc
push
adc
push
or
cmpsb
inc
bound
insb
idivl
inc
jge
pop
imul
test
int3
mov
dec
cltd
sub
xchg
ljmp
es
ja
push
aad
shl
mov
jle
mov
daa
sbbb
pop
ficompl
lods
in
call
insl
mov
jecxz
je
test
pop
pop
dec
aad
xchg
outsl
lcall
sub
fists
jns
push
aam
push
repnz
ss
lret
outsb
imul
cmp
decl
test
and
adc
dec
fcom
clc
or
psrlw
ss
inc
movsl
ljmp
and
jns
jno
das
inc
sar
and
mov
adc
int
out
testb
cwtl
aas
mov
js
decb
cli
pop
jge
imul
shr
pop
cs
mov
mov
sbbl
ja
pushf
inc
fisubrl
jns
push
cmp
lea
lret
mov
lods
pop
cltd
pusha
fs
xor
int3
stos
test
fwait
xor
adc
dec
mov
sbb
mov
push
or
push
aam
rcrb
mov
ss
rcll
loopne
js
lods
repz
push
inc
adc
xchg
mov
in
xchg
sub
mov
adc
mov
or
push
mov
loop
xchg
test
cmp
inc
pop
jnp
mov
sbb
and
lods
jnp
and
sbb
rolb
jge
sti
data16
fsts
addr16
mov
in
ljmp
fisubrl
sbb
xor
push
ds
inc
cmp
pop
lahf
sti
repnz
inc
fdivrl
out
inc
or
xor
pusha
fmull
mov
push
shrl
push
xchg
mov
pop
fadds
jl
outsl
xchg
xor
arpl
inc
movsb
pop
add
arpl
add
xor
mov
outsl
lods
push
add
or
mov
scas
fsubl
outsl
push
xchg
cmp
push
jg
ret
xor
sub
push
pop
pusha
sub
dec
sub
inc
imul
call
dec
shll
cmpsl
sub
mov
sbb
fstl
test
mov
nop
pop
lahf
cmp
sub
adc
push
pop
arpl
adc
push
sub
jmp
sbb
inc
test
std
cmpsl
xchg
jo
jae
inc
inc
pushf
sti
lret
pushf
jmp
es
shlb
out
movsl
jns
aam
sub
into
mov
js
mov
pop
popa
mov
outsl
xor
lea
jecxz
mov
out
pop
out
xchg
and
add
faddl
xor
push
xor
mov
lcall
insb
xchg
imul
sbb
push
jmp
add
lahf
pusha
mov
mov
in
popa
sar
in
lahf
js
xchg
fs
outsl
mov
out
and
call
movsb
cmc
or
adc
shrb
repnz
lret
adc
loop
add
ret
pop
inc
jmp
inc
cmc
shlb
pop
orl
mov
clc
mov
adc
adc
cmp
repz
sbb
adc
xlat
mov
loop
cli
into
sbb
inc
mov
mov
fcomi
cmp
add
fs
aaa
jb
xor
xchg
testl
sub
sahf
mov
repz
dec
cmp
xor
rclb
xor
lcall
inc
or
stos
andl
cmp
int3
inc
lods
pop
aas
push
addr16
mov
aaa
mov
pop
das
and
rolb
xchg
scas
into
jbe
xchg
cli
pop
or
fs
mov
loopne
mov
cmp
jmp
cld
jmp
lcall
ljmp
std
jbe
pop
jo
popa
jne
add
sbbb
loope
adc
loop
xor
adc
and
adc
jp
sbb
mov
imull
mov
outsl
mov
popf
adc
pop
dec
stc
arpl
cmovae
push
arpl
jge
bound
mov
dec
mov
xchg
ja
repz
stos
je
fstl
adc
and
int
xor
jb
in
int3
leave
push
mov
je
pop
lock
test
dec
sbb
sbb
pop
sti
aad
xchg
dec
gs
cs
sub
xlat
mov
push
loope
call
test
jge
jbe
mov
jp
push
push
mov
cmp
mov
shlb
sahf
lods
movsb
in
fwait
dec
dec
insb
pop
bound
jl
xor
in
mov
lcall
jmp
mov
and
cld
sub
scas
mov
outsb
inc
dec
fcoms
pop
add
inc
cmp
cmp
xor
outsl
inc
adc
lret
xor
xchg
mov
adc
and
lret
sub
mov
dec
mov
enter
sbb
push
pop
pop
mov
cmp
out
inc
in
out
sub
and
loop
adc
arpl
js
push
dec
pushf
cld
leave
or
push
dec
xchg
mov
insb
pop
out
xor
cmp
push
push
in
fldl
imull
mov
and
outsb
cs
subl
xchg
mov
pop
leave
jg
mov
pop
flds
push
movsl
pop
and
repz
jecxz
int
popf
dec
dec
sub
dec
clc
and
popa
stos
jne
sub
scas
addr16
add
out
in
out
jbe
adc
mov
lcall
xchg
leave
inc
jno
add
add
xchg
cltd
jo
hlt
push
add
and
lods
adc
lea
shrb
stc
mov
push
jb
popf
fidivrs
dec
mov
cmp
lret
fiaddl
mov
mov
or
inc
sub
or
int
scas
push
fidivrs
jp
scas
mov
popf
test
mov
repz
xor
or
or
mov
pop
push
or
add
rcrl
pop
pushf
ds
or
adc
icebp
cmp
cmpb
std
loopne
inc
sbb
dec
inc
and
dec
jmp
out
inc
fld
js
in
scas
repz
inc
rorb
sahf
push
test
fcoml
add
cmp
or
and
jnp
push
mov
cmp
dec
imul
shrb
push
rcrl
inc
jbe
cmp
jle
mov
mov
pop
inc
jno
mov
cmp
cmovne
in
out
test
sbb
adc
aas
imul
inc
inc
scas
pop
imul
aas
scas
inc
push
out
or
cmc
lahf
add
or
stc
fs
out
imul
into
fcomp
lcall
sbb
jo
push
mov
mov
cmc
hlt
js,pn
mov
push
push
sahf
mov
xchg
add
stos
or
dec
or
scas
imul
ret
and
jecxz
add
gs
shll
imul
insb
decl
aaa
ret
push
test
lcall
adc
xchg
add
xor
repnz
aam
xor
push
lcall
mov
lret
movsl
push
xchg
lea
into
shlb
imul
xchg
mov
lret
pop
mov
xor
push
mov
xlat
call
xchg
rclb
push
rcl
loope
xchg
repz
mov
flds
sub
mov
out
ss
mov
fisttps
dec
pop
and
mov
dec
add
add
out
mov
jle
leave
mov
xchg
push
and
jns
sub
stos
fldcw
or
sbb
and
jecxz
outsl
push
cmp
sub
xchg
mov
in
out
ret
and
inc
shlb
mov
adc
cmp
loopne
imul
fisubl
pop
pop
pop
shrl
setg
nop
mov
addr16
cs
adc
lods
sub
and
stc
push
mov
push
fstpl
mov
xchg
adc
and
ja
add
inc
xchg
adc
adc
sbb
pop
jno
pop
mov
jbe
sub
imul
and
mov
push
test
mov
push
loope
rorb
add
mov
xchg
or
push
sbb
add
shrb
sbbb
xchg
inc
or
and
add
cmp
cwtl
adc
cmp
orl
imul
icebp
pop
sbb
xor
iret
mov
sub
shlb
repz
mov
and
outsl
or
rcrb
xor
pop
mov
movsl
xchg
mov
dec
outsl
dec
push
jge
adc
fisubrl
lret
icebp
xlat
adc
push
outsl
testl
mov
idivl
mov
xorl
mov
adc
pop
stc
mov
loopne
into
xorl
daa
dec
and
jecxz
pop
inc
enter
lcall
bound
or
sub
test
mov
aam
pushf
xor
imul
mov
mov
test
fwait
xchg
pop
cmp
inc
push
adc
adc
push
scas
rcrl
xchg
xchg
ja
dec
insb
mov
insb
or
xor
xor
pusha
xchg
cwtl
call
cmpsl
mov
gs
xchg
or
and
sahf
sub
xchg
inc
mov
stc
jle
js
ljmp
pop
cmpsb
xchg
cmp
and
outsb
rcl
xor
lret
xchg
mov
mov
jae
les
test
les
adc
lret
xchg
repz
rolb
or
lock
dec
repz
divb
lcall
mull
xchg
in
or
jae
xchg
aam
notl
daa
fadds
cmc
stos
jge
addr16
adc
and
shr
push
xor
pop
mov
mov
add
sahf
addr16
dec
inc
jmp
mov
mov
arpl
mov
fsubrp
fmuls
ret
mov
in
cwtl
insl
mov
cmp
out
fsubs
rcrb
pop
sub
leave
pop
jno
jnp
jle
jge
clc
cmp
aad
fdivrl
ds
dec
sahf
push
test
hlt
mov
push
xchg
popf
dec
rorl
dec
cs
lret
gs
imul
hlt
push
or
mov
dec
divl
pop
adc
cltd
fidivrl
jmp
pop
dec
inc
in
jge
imul
mov
mov
and
jp
mov
push
testb
cmp
sbb
lods
sub
jecxz
jmp
lcall
dec
iret
mov
mov
jge
xorb
dec
xor
aaa
sub
cmp
and
pop
mov
movsl
xor
mov
mov
fisubrl
mov
addr16
jecxz
test
fisubrl
push
js
mov
repz
pop
je
sub
loope
cs
inc
stos
inc
mov
mov
outsl
xchg
jbe
pop
das
arpl
into
andl
hlt
xor
in
insl
and
mov
fwait
mov
xchg
pusha
push
jbe,pn
dec
push
fnstcw
and
test
mov
cmp
jo
stc
lret
mov
push
sub
push
add
rep
cmp
loop
xchg
stos
sbbb
and
xchg
iret
mov
sbb
dec
ljmp
sub
es
mov
call
cld
or
xor
cmpl
addr16
lret
inc
scas
fs
mov
aaa
and
mov
mov
inc
lock
pandn
jae
fcomps
mov
stc
repnz
mov
in
add
ret
roll
in
xchg
mov
sarl
mov
cmpsb
out
dec
jb
popa
rcr
sbb
shll
pusha
push
cli
add
inc
push
xor
imul
and
push
cmp
iret
test
pop
test
xchg
xchg
dec
stc
call
and
mov
cld
jo
rol
fdiv
jnp
int
clc
push
cmp
inc
xor
inc
mov
mov
lcall
adc
enter
xor
push
push
call
pop
inc
pop
sahf
gs
mov
adcb
push
in
push
insl
xor
add
mov
fs
add
or
xchg
mov
add
adc
and
add
dec
cmp
mov
mov
enter
push
insl
mov
and
mov
ss
insb
cmp
mov
push
xchg
fisubl
add
mov
test
pop
xchg
xchg
sarb
xor
out
cmp
and
lahf
cli
fidivrs
or
aad
mov
cmp
lds
add
outsb
jmp
lahf
dec
inc
les
jo
hlt
fcompl
pop
pop
and
cmc
lahf
sub
into
movswl
mov
cmpsl
add
loope
cmp
xchg
out
xchg
push
and
daa
hlt
mov
out
nop
mov
mov
mov
lds
pop
xchg
mov
cmp
cmp
lock
nop
pop
fcmovnu
cwtl
sub
out
shrl
fs
adc
imul
shll
out
ds
dec
mov
xor
imul
push
pop
fisubs
sub
leave
mov
mov
dec
lret
mov
pop
int
dec
in
in
add
fwait
push
mov
jl
ss
xor
push
add
push
jns
fmuls
getsec
hlt
cmpb
es
or
fidivs
adc
in
inc
in
enter
out
push
andb
lds
shll
insl
iret
push
movsb
jp
arpl
cwtl
out
fsts
jae
es
or
fnstenv
fldenv
mov
rcl
test
push
jns
rcl
es
xlat
and
add
mov
movsb
sbb
mov
shlb
jne
nop
mov
sti
jb
jmp
inc
pop
and
fucom
clc
xchg
out
aaa
scas
js
aas
cs
aam
mov
sbb
pop
mov
sbb
sub
ret
and
jmp
and
xchg
lahf
push
jne
mov
push
and
les
push
clc
lret
das
popf
jg
sub
sbb
jge
jecxz
test
pop
jge
cmp
clc
mov
mov
jmp
pop
movsb
jle
rclb
push
xor
xor
and
fdiv
sub
loopne
sbb
scas
pop
aam
les
out
imul
shlb
push
adc
into
xorb
rcl
and
or
adcb
faddl
push
xor
mov
dec
inc
icebp
adc
dec
rclb
enter
pop
in
outsb
xor
or
test
or
sub
mov
inc
nop
loop
mov
cmp
push
pop
fwait
aam
adc
jp
lcall
bnd
addr16
mov
sub
inc
clc
mov
test
xor
mov
dec
inc
mov
jo,pn
das
in
cmp
jp
and
mov
clc
jnp
stos
scas
or
adcl
and
repnz
jg
or
es
jne
xor
fst
outsl
mov
outsl
imul
cmpb
ret
mov
sbb
aad
cli
and
xchg
xchg
adc
leave
sbb
sbb
xor
mull
dec
and
cmp
test
push
mov
loop
out
movsl
xchg
in
incl
xor
mov
mov
sti
jl
or
sbb
and
out
out
mov
jne
in
sahf
and
lds
jecxz
popa
stos
idivl
dec
lock
add
ljmp
or
push
sbb
mov
mov
jecxz
iret
mov
xlat
mov
out
xchg
rcll
aam
test
mov
xor
insb
lret
inc
insl
push
loop
mov
cmp
popa
enter
shll
dec
adc
or
mov
cmp
lcall
ljmp
xor
jge
hlt
int
lods
xor
mov
xor
push
stos
mov
jge
sub
movsb
lahf
mov
lcall
sbb
fwait
mov
cmp
jl
movsb
xlat
ss
cli
adc
and
fcmovnb
mov
cmp
cltd
stos
pop
xor
and
cmpsl
jg
and
add
push
cmp
lock
dec
adc
out
xchg
jp
jb
push
in
clc
scas
out
int3
popa
rorl
cltd
push
iret
and
ljmp
les
sbb
loopne
scas
pop
inc
mov
add
pop
popl
das
cwtl
sub
roll
pop
push
jne
repnz
push
pop
push
sub
adcl
mov
in
xchg
push
and
add
xor
add
pop
or
pop
mov
sbb
andb
fwait
add
lret
and
sub
icebp
ja
fdivs
clc
mov
js
adc
xchg
insl
icebp
movsl
or
clc
mov
subb
mov
out
fwait
sbb
mov
and
mov
and
inc
iret
xor
push
xchg
movsl
mov
jmp
movsb
inc
aad
xchg
dec
lods
mov
imul
xor
inc
pop
imul
push
daa
inc
push
adc
mov
mov
jmp
push
xchg
jno
lods
jge
mov
jp
or
xchg
sub
je
in
ljmp
imul
addr16
je
xchg
outsb
lret
or
fsts
sbb
jl
fisubrs
test
fcomi
jecxz
call
out
mov
add
int
movsl
test
inc
test
cmpsb
scas
mov
fsubs
xchg
pop
cmp
test
fsubrl
test
out
addr16
mov
fsubrs
lea
lea
stos
add
cmpsl
adc
pop
or
xchg
in
jae
xchg
and
sbb
pop
add
pop
and
sbb
jne
nop
sub
inc
cs
lock
loop
mov
cmpsb
xor
nop
push
cld
mov
shrb
clc
inc
std
out
jns
ja
adc
pop
insb
pusha
addr16
add
or
cmp
shll
xchg
add
adcb
lods
or
daa
adc
or
mov
inc
sbb
push
and
lock
mov
inc
fistpll
outsb
mov
xlat
pop
lock
in
rcpps
rcrb
pop
jno
sbb
jl
jge
fildll
les
cmp
push
fucomi
xchg
sub
aaa
push
xor
or
push
addr16
mov
mov
insb
into
arpl
inc
inc
inc
out
hlt
add
gs
fimull
mov
sti
iret
and
rol
fldl
mov
xor
ja
jno
jns
jnp
jp
jmp
call
aas
push
push
inc
mov
inc
movsb
jnp
sbb
push
insl
or
loopne
mov
cmp
mov
stos
xchg
mov
ret
outsb
mov
loopne
cld
and
dec
leave
mov
movsb
cli
dec
sahf
push
jae
xor
repz
pop
add
mov
dec
es
push
lahf
jo
nop
das
ds
mov
xchg
sbbl
aad
xor
mov
lret
or
fdivrl
jg
es
xchg
add
push
lds
ret
test
fidivl
sbb
dec
clc
pop
js
leave
xchg
call
dec
repz
add
push
and
adc
out
push
fdivr
out
pop
mov
or
and
out
mov
mov
mov
shll
fs
lret
lcall
and
xchg
adcl
lea
dec
gs
mov
cli
popf
and
cmp
cmpsb
cmc
push
and
cli
lea
mov
cmc
cmpsl
mov
pushf
push
pushf
or
mov
mov
stos
cmc
add
adc
je
jge
sbb
stos
mov
mov
inc
cmpsb
jo
lea
push
add
xlat
mov
dec
adc
hlt
xchg
mov
mov
dec
test
xchg
scas
ret
inc
decb
and
pop
repz
cmpsb
fstl
and
pop
cmp
or
mov
pusha
hlt
mov
mov
insb
pop
adc
push
stos
sbb
outsl
hlt
gs
cmpsb
cld
mov
xlat
rolb
popa
mov
dec
icebp
sub
jae
lret
repz
pushf
dec
inc
dec
sahf
mov
cmp
push
cmp
pop
pop
pop
xor
fists
and
jl
inc
test
lods
into
test
sbb
sbb
jle
rcll
rcrl
aad
ret
xchg
dec
test
iret
test
cmpb
pop
iret
arpl
add
sub
mov
loop
xor
mov
xchg
aas
push
push
or
inc
jne
fdivrp
insb
inc
movsb
mov
shlb
aaa
inc
es
call
mov
cmp
fwait
pushf
mov
scas
out
lahf
cmpsb
cmp
nop
hlt
xor
gs
imul
lcall
push
in
or
push
repnz
xlat
cltd
mov
mov
aam
cs
xchg
mov
cmp
and
push
aam
xchg
pop
mov
dec
out
or
jno
lods
icebp
leave
sbb
stos
xchg
and
fstpt
push
lret
in
cmp
add
ss
inc
xchg
arpl
pop
mov
jnp
into
cmp
pop
fcmovb
jns
sbb
adc
dec
push
sti
imul
adc
sbbl
daa
jmp
sbb
mov
xchg
mov
fsubp
mov
lret
rcrb
ret
push
test
int3
filds
jo
test
push
mov
popa
xchg
xor
sbb
loop
andl
aad
pop
mov
icebp
sbb
das
inc
addr16
dec
or
iret
test
xchg
sbb
movsb
insl
pop
popa
lods
fdivr
mov
imul
repnz
shll
lods
xchg
mov
test
js
mov
and
pop
jp
cmpsl
lret
cmpsl
xchg
rcrl
call
adc
nop
popl
int
vpsrlq
jge
mov
mov
imul
jo
add
sahf
xchg
dec
dec
jb
popa
lods
mov
push
mov
jbe
ret
xor
cmc
clc
inc
int
fistpl
mov
mov
push
cmp
cmpsb
repz
mov
arpl
ret
pop
loop
repz
xchg
in
lea
pop
lret
jae
pushf
jl
in
icebp
ljmp
mov
pop
aam
mov
movsb
shlb
sbb
xchg
into
jle
bound
int
push
out
cmc
pop
repnz
or
pop
pop
mov
scas
pop
mov
pushf
cmp
mov
imul
push
sub
cmp
cmpsb
in
out
jae
jae
xchg
mov
movsb
enter
jge
and
adc
mov
orl
cmp
cs
push
mov
push
fisttps
mov
mov
pushf
mov
outsb
fidivrs
je
sti
push
adcb
jbe
push
adc
loopne
mull
in
loopne
shll
cmpsb
cmp
nop
sarl
push
push
pop
cltd
jmp
pop
enter
movsb
mov
sub
sbb
sbb
mov
arpl
jge
imul
lods
sub
mov
sarl
xchg
cmp
enter
sub
aad
out
xor
cmc
aad
das
test
aad
or
dec
jg
cmpsl
inc
fisubrs
push
aam
into
mov
inc
jecxz
stos
pop
pop
or
mov
nop
inc
pop
adc
inc
insl
jmp
mov
stos
or
inc
xchg
sbb
out
sub
hlt
and
jg
mov
sbb
xchg
push
movsb
das
sbb
jae
cmc
adc
xchg
es
popa
daa
add
jecxz
pushf
mov
inc
sub
add
sub
xchg
stc
aaa
mov
add
pop
fs
cltd
out
loope
in
repnz
jecxz
sbb
ja
mov
dec
sbb
or
jne
and
jl
rorl
call
cmc
pop
xchg
leave
mov
jnp
sub
pusha
data16
mov
pop
aaa
mov
addr16
push
scas
rol
pop
cmp
cmp
xchg
pop
mov
sub
rorl
xor
loope
enter
jge
adc
xor
pushf
lods
cltd
sub
pop
xchg
insb
roll
lahf
mov
in
es
js
inc
iret
push
push
stos
sub
in
mov
je
cs
pop
ret
lods
jnp
nop
mov
in
sub
lcall
or
inc
mov
or
pop
xchg
outsl
push
lods
sbb
ret
subb
mov
xlat
fsts
fdivr
fisttpl
sahf
cmpsl
pop
mov
mov
pushf
scas
jl
scas
fcmovu
or
js
push
mov
dec
and
fcoml
xchg
cmpl
xor
inc
jp
nop
mov
sbb
xlat
mov
push
dec
mov
cmp
addr16
xor
pop
pop
shrl
hlt
sub
loop
insl
xor
mov
out
or
and
lea
lock
jbe
mov
xor
scas
into
or
fildll
movsb
xchg
mov
inc
out
xchg
push
test
or
or
rorl
daa
push
outsb
mov
orl
fcmovnbe
insl
add
add
aaa
push
pop
jmp
stos
sbb
enter
fisubl
mov
mov
mov
or
inc
pop
push
scas
test
push
xchg
dec
std
int
sar
out
jp
pop
inc
push
loope
out
int
ljmp
pop
xor
sbbb
loopne
push
add
aad
mov
stos
shrl
mov
push
test
add
dec
xor
push
lret
xlat
repz
mov
popl
arpl
adc
adc
ds
cmp
or
cmp
jae
and
rol
std
ljmp
mov
xchg
les
push
adc
repz
in
adc
testl
pushf
mov
xchg
and
out
jg
cmp
mov
mov
loope
call
push
ja
mov
shl
lds
sub
lahf
rclb
mov
mov
loop
pop
roll
xor
cli
pop
inc
fucomi
cwtl
add
xchg
adc
push
and
add
inc
mov
push
shr
mov
dec
nop
clc
mov
insl
sbb
repz
mov
test
jbe
aam
push
lds
fdivrs
sub
and
in
push
push
test
mov
inc
cmpsb
lods
mov
lret
je
xchg
pop
sub
pusha
jmp
icebp
cmp
sar
mov
jae
inc
cmc
shll
or
sub
mov
imul
push
popa
mov
xchg
xchg
fisubrl
cmp
scas
jb
roll
inc
icebp
or
jne
jb
mov
cmp
test
dec
icebp
ret
movsb
dec
push
xchg
dec
hlt
mov
les
sub
repz
les
cmp
pop
push
cmp
inc
aam
push
adcb
xchg
insb
mov
mov
push
movl
imul
inc
or
or
dec
add
jl
movsl
nop
sarl
insb
notl
inc
xchg
inc
inc
movsl
jnp
pushf
aam
cmp
fdiv
or
loope
adc
push
ljmp
sub
ret
ret
jno
jno
mov
dec
popf
lds
xchg
push
repnz
hlt
lods
test
inc
add
test
dec
jmp
testb
stc
pop
popa
add
xor
sub
mov
insl
sahf
jne
imul
fmulp
inc
inc
mov
mov
inc
bts
in
push
cli
add
mov
inc
inc
jb
ljmp
orb
ficompl
sbb
dec
inc
mov
loop
cmpsb
enter
mov
mov
jb
out
jae
add
xchg
lock
outsl
shlb
fucom
xchg
dec
cmpl
push
aam
ds
inc
mov
xchg
outsl
lods
lahf
and
bound
insb
in
xchg
mov
mov
cmpb
pop
in
in
and
push
lods
rcrb
in
in
push
cmpsl
jne
xor
cmp
jle
les
insb
xor
push
mov
or
jne
scas
inc
pop
sbb
in
lcall
adc
sti
mov
cmpsb
in
xor
mov
and
arpl
or
or
js
pop
loop
pop
adc
xor
addb
fst
push
dec
out
or
pop
sbb
pop
jle
push
sti
lods
xor
loop
pusha
add
outsb
adc
mov
dec
cmpsl
clc
jo
imul
ja
inc
les
test
adc
dec
js
push
cmp
mov
in
and
dec
es
mov
jne
xor
jp
fdivp
push
sbb
pop
add
cltd
dec
xchg
add
call
movsl
dec
xor
mov
in
aaa
and
mov
repnz
sbb
pop
nop
mov
lock
xchg
sbb
stos
repnz
int
push
push
cmp
cmc
test
push
test
pop
fstpl
xor
repnz
sub
test
int
push
dec
repz
shlb
pop
std
loope
out
push
inc
iret
lcall
dec
pop
sbb
sub
cmp
les
cmp
jmp
jne
cld
insl
pop
add
xchg
sbb
lret
lahf
fucomip
adc
nop
push
add
test
push
pusha
xchg
aas
pop
dec
sahf
call
xchg
pop
pop
stc
jb
pop
jle
mov
push
hlt
pop
jbe
lods
mov
lods
jnp
jp
sub
xor
inc
mov
inc
pop
lahf
pop
subb
or
xchg
mov
push
mov
pop
rclb
cmp
jecxz
ljmp
cmp
jmp
mov
daa
mov
cmpsb
dec
jecxz,pn
jno
stc
into
xor
mov
push
leave
aas
push
imul
and
and
or
into
push
cwtl
inc
imul
imul
xchg
scas
aam
xchg
jp
loope
xchg
fwait
movsb
fcompl
push
and
fisubrs
pop
pusha
jl
xor
push
and
mov
push
xchg
mov
cmp
inc
mov
cltd
gs
or
ret
sub
movsb
pop
in
imul
int3
mov
sub
xor
js
jecxz
dec
push
or
shl
cmp
popa
fadds
arpl
adc
test
cmpsl
ds
cmp
jge
imul
lret
leave
test
jl
das
ret
and
imul
add
mov
in
sbb
xchg
push
mov
xor
cld
repnz
xchg
add
das
lods
xchg
shlb
movsb
xchg
loope
add
in
in
push
sbb
das
popf
sbb
jmp
stc
sarb
sbb
pop
aad
cld
out
rorb
adc
test
and
repnz
xor
add
rol
adc
pop
stos
das
fistps
mov
shl
add
push
add
and
xor
nop
lret
pop
and
bound
fstp
pop
pop
add
mulb
int3
jg
push
ljmp
out
pop
xchg
xor
xor
inc
mov
ss
push
call
mov
and
xchg
xor
lret
fdivrl
add
xchg
mov
in
aaa
aam
adc
lds
lret
jecxz
in
les
mov
fmulp
filds
cmp
aaa
adc
jo
aas
jle
shrb
repz
sar
sbb
add
fcmove
xor
pop
dec
fsts
push
mov
out
xchg
adc
mov
add
repnz
inc
push
insb
fwait
rcrb
dec
or
das
clc
pop
push
jno
out
jge
push
fldl
gs
push
mov
push
mov
lods
or
cmp
gs
fimuls
cltd
repz
dec
je
mov
cmp
xchg
mov
scas
cmp
add
inc
mov
loope
dec
pop
imul
cmp
jecxz
pushf
call
mov
sbb
mov
cmp
std
or
inc
lret
lds
add
jns
nop
fldt
adc
adc
lds
ss
and
data16
jns
aad
and
xor
and
pop
in
ds
mov
jle
adc
js
sti
jo
jb
jmp
add
xchg
xchg
push
outsb
adc
mov
sbb
pop
fld
inc
pop
movsb
int3
ljmpw
cld
xor
das
push
push
in
cmpsl
mov
adcb
mov
dec
test
fistps
sti
nop
or
data16
pop
out
sbb
lds
mov
inc
sbb
clc
mov
loop
pushf
mov
and
mov
pop
dec
xor
mov
xlat
in
add
fs
mov
push
pop
test
cmpsl
jb
dec
std
lret
int3
shlb
outsb
bound
outsl
mov
jae
adcb
test
rcrb
mov
ljmp
fnsave
dec
inc
mov
mov
xchg
adc
mov
or
push
clc
mov
sub
out
push
or
fwait
inc
cmp
add
sub
mov
ja
mov
nop
jmp
lods
pop
cmpsb
sbb
stos
das
ret
add
pusha
inc
std
rcl
xor
mov
dec
jecxz
mov
cmp
inc
xchg
test
mov
fbld
jbe
dec
js
movsl
enter
inc
push
jmp
ja
sbb
add
sub
cmpsb
test
or
sbb
sbb
add
jmp
inc
add
xchg
sub
lds
fisubs
push
cli
jecxz
add
movsb
ret
imul
push
cmp
cmpsl
mov
push
shl
loop
mov
out
sbb
sbb
add
push
xor
pop
mov
jmp
adc
pop
insl
xchg
push
and
mov
xchg
inc
ret
enter
mov
mov
test
pop
jb
pop
or
and
aam
in
shl
outsb
mov
in
lret
cmpsl
outsb
stc
dec
mov
jns
sub
dec
or
add
push
aas
es
xchg
pop
rcrb
push
push
test
sbb
addr16
fwait
push
and
test
pop
call
shrb
mov
shrl
push
lahf
mov
mull
aam
dec
and
stos
popf
loopne
sarl
out
and
push
push
cmpb
push
in
js
lret
and
bound
or
push
shrb
rclb
pop
dec
jbe
test
imul
push
add
jne
cli
fs
jmp
pop
mov
les
mov
sub
inc
arpl
insb
js
insb
bound
sahf
xorl
xor
loope
out
jecxz
insl
cmp
repnz
mov
mov
out
pop
ds
outsb
aas
arpl
lret
push
pusha
sti
cmc
out
push
in
pop
push
xor
mov
out
ficomps
and
cmpsl
sub
stos
aaa
insb
push
mov
mov
fstpt
cmpsl
sti
pop
jecxz
bound
test
dec
stc
cmp
jmp
shlb
add
sub
jne
or
mov
js
push
xchg
outsb
pop
les
jo
cmp
dec
and
pop
push
loop
mov
xlat
insb
inc
xchg
stc
insl
mov
addr16
cmpsl
daa
jl
inc
ds
mov
es
and
jmp
lock
dec
mov
rorl
movsb
jo
xor
mulb
dec
jl
sbb
dec
mov
jl
orb
jge
xchg
lret
shr
test
test
and
jle
inc
pop
dec
cmc
fildll
loopne
pop
and
push
cltd
pop
xor
xchg
jl
push
mov
add
sbb
in
sbb
movsb
inc
adcl
into
sbb
jg
in
roll
lea
mov
mov
roll
pop
dec
push
xor
mov
std
repnz
pusha
gs
cmc
inc
sbb
jp
jmp
out
negl
dec
jle
push
mov
jp
inc
or
imul
cltd
cmc
scas
idiv
add
pop
hlt
cmp
int
popa
insb
test
out
stos
push
xor
mov
adc
jo
test
call
dec
ja
add
mov
out
movsl
mov
inc
inc
jnp
push
clc
sbb
fstps
pop
mov
insb
and
xchg
shrb
stos
pop
cmp
ds
sbb
push
sub
push
adc
pop
stc
popf
out
jno
ror
mov
xchg
imul
or
pop
subl
xor
jp
cmp
repnz
stos
xchg
scas
lock
lea
lods
fs
mov
out
imul
push
mov
push
clc
outsb
inc
adc
pop
pushl
pop
scas
lcall
lret
std
repz
push
pop
popa
jmp
ss
daa
mov
or
mov
aam
push
cld
das
mov
outsl
xchg
inc
rol
adc
mov
data16
pop
mov
sahf
xchg
inc
mov
xor
jge
push
xor
mov
ret
int
xor
sbb
test
int
stos
dec
sarb
outsl
out
lds
es
mov
dec
rcll
pop
int3
push
pop
call
or
xchg
mov
xorl
xchg
scas
jp
mov
dec
cwtl
adcb
rolb
sbb
out
out
lods
test
and
loopne
inc
int3
dec
cmp
mov
inc
xor
jle
stos
stos
dec
mov
neg
and
xchg
inc
js
scas
push
adc
mov
out
sub
out
cs
cmp
lcall
jo
sub
out
adc
lret
incl
xor
mov
lret
sub
lahf
jge
test
pop
mov
and
sub
test
loopne
insl
into
subb
add
sub
in
sbb
xchg
jno
mov
je
sbb
jne
or
shlb
es
push
jle
ja
adcl
lods
sub
int3
mov
mov
test
jns
test
add
pop
dec
test
js
push
fs
out
mov
jno
or
adcb
push
adc
stos
pop
cltd
int
and
adc
or
pop
lock
loop
shrl
scas
xor
daa
mov
rclb
fs
dec
and
les
cli
fisubl
push
leave
ds
or
stc
into
imul
sti
push
lods
stos
adc
adc
xorl
jle
sbb
cmpsl
aas
adc
push
mov
and
sub
add
inc
pop
mov
js
mov
jne
and
push
int3
testb
into
mov
push
xchg
test
jnp
icebp
insl
add
mov
lds
mov
gs
and
popf
sub
fwait
sbb
mov
pop
shr
dec
xor
mov
jg
mov
jl
loopne
push
lods
add
or
mov
pop
lret
movsb
inc
mov
insb
jnp
mov
cmp
daa
and
icebp
push
leave
mov
push
pop
inc
int
std
mov
add
inc
sbb
inc
mov
addr16
js
push
push
adc
push
rcrb
rorl
or
or
xor
fcoms
icebp
jmp
xchg
out
mov
lret
mov
push
push
pushf
je
lahf
lret
int
push
xchg
mov
std
cmp
outsb
inc
in
lahf
cmpsb
popf
arpl
lcall
mov
push
andl
test
fnsave
cmp
or
in
imul
cmp
pop
test
fnstcw
sub
cmp
mov
pop
xchg
push
xacquire
movsl
cltd
cmp
dec
and
das
insl
stc
ret
sbb
or
or
jns
pop
or
jae
scas
jno
or
daa
jno
xchg
imul
jbe
and
fcomps
rclb
mov
loope
or
dec
setle
dec
pop
xor
pop
das
push
loopne
push
mov
sub
or
adc
dec
xchg
scas
ret
sub
ds
test
rcrl
in
mov
dec
out
pop
sub
xchg
xor
xchg
in
dec
bound
dec
rcrb
inc
neg
outsb
inc
pop
xchg
push
jne
testb
xor
popf
jge
iret
pop
add
jg
fisubs
and
aaa
imul
xchg
dec
subb
pop
rcll
cmp
dec
inc
in
jle
ret
pop
cltd
mov
sub
mov
sub
or
mov
shll
and
xchg
enter
in
add
repnz
out
jb
push
std
mov
scas
lret
in
aaa
in
adc
jmp
mov
xchg
out
add
or
mov
jge
push
adc
inc
imul
je
std
mov
ss
inc
aas
ljmp
cmp
je
cmp
fcmove
jg
fiaddl
enter
add
xor
icebp
test
aas
mov
pop
and
sbbb
cmc
sub
xchg
stc
mov
lods
inc
add
sahf
push
push
sub
clc
mov
mov
mov
cld
push
cmp
inc
clc
cld
xchg
jne
push
xchg
mov
cmpsb
cmp
into
cld
or
enter
or
jbe
lds
and
pop
push
int
xor
jg
push
add
sbb
fimull
lock
mov
mov
sbb
cmp
cmpsl
jmp
stc
xchg
cmp
mov
jb
mov
test
jg
dec
adc
shrl
push
data16
push
xor
push
shl
out
push
mov
and
and
push
pop
es
dec
inc
cmpsl
inc
sub
and
leave
dec
ljmp
jg
repz
mov
mov
test
mov
sti
push
xchg
int
adc
notl
push
sar
test
xor
push
cmpsb
mov
mov
mov
stc
cmp
test
xchg
fcomps
push
call
pop
mov
add
je
mov
and
int3
andb
jae
negb
cmp
imul
adc
lahf
ud0
mov
cmp
sti
push
ud2
xchg
cmpb
imul
ffreep
xlat
test
movsb
add
and
insl
sub
push
icebp
sub
stc
subb
sub
jecxz
fmulp
push
or
mov
cltd
aad
adc
or
xchg
jns
add
xchg
xchg
sar
inc
xor
std
add
test
or
call
adc
fnstenv
jp
mov
clc
hlt
cmp
jecxz
pop
fwait
mov
push
jne
test
adc
lcall
push
pop
mov
cmp
rcrl
add
sub
or
xchg
div
aaa
aas
lahf
icebp
icebp
pop
or
and
jmp
pop
fbstp
ja
bound
out
pusha
das
mov
sbb
daa
out
sti
sahf
dec
push
int
subl
xchg
cmpsl
push
aaa
int
or
sbb
clc
loope
xchg
popf
xchg
mov
and
js
pop
jl
cmp
sbb
fldl
lds
and
xchg
stc
lahf
mov
inc
add
add
adcb
ss
jmp
pop
stc
pop
sbb
icebp
fistps
arpl
pop
sub
out
jge
jge
sbbl
insb
cmpl
loope
xchg
jns
pop
mov
push
insl
test
dec
or
dec
sub
mov
dec
mov
push
sbb
sub
mov
lret
out
jge
xchg
in
imul
sub
pop
insb
nop
pop
outsl
cmp
ret
adc
cmp
pop
xor
stc
push
dec
adc
mov
sbb
mov
push
ror
and
sbb
rorl
mov
push
pop
or
jae
int3
add
inc
mov
dec
and
xchg
adc
lret
xor
or
jae
ja
add
rolb
daa
sbb
and
pop
mov
adc
adc
test
adc
jo
ret
fiadds
push
xor
xchg
sub
mov
cmpsl
sub
lcall
lods
jae
in
stc
je
xchg
sbb
push
pop
test
rcll
jnp
mov
sarb
out
rcrb
lds
shl
std
xchg
cmp
sahf
scas
mov
fs
movsl
mov
int3
mov
fistpll
imul
subl
fadd
enter
push
repnz
mov
xchg
jb
int
insb
cmp
cmp
adc
xchg
add
in
mov
icebp
add
xchg
sbb
test
adc
loop
in
lret
or
mov
inc
pop
push
lahf
loop
add
add
mov
stc
push
jns
ja
int
ss
loop
daa
jo
cmp
pop
das
pushf
dec
ret
ret
enter
adc
inc
popf
jp
mov
mov
test
jno
jo
sbb
and
int
push
mov
xor
push
mov
or
les
mov
std
pop
mov
inc
in
ljmp
or
dec
in
dec
outsl
xchg
pushf
jge
mov
iret
cmp
or
pop
fnstsw
pop
into
insl
ret
add
andl
push
call
call
pop
xchg
pop
or
lahf
fistpl
inc
and
push
xor
mov
pushf
push
repz
lds
nop
clc
adc
lods
dec
sbb
hlt
cmp
push
or
mov
popf
ja
insl
xchg
pushf
test
sub
xchg
add
push
mov
pop
lods
push
in
dec
out
shl
push
das
lods
repnz
movsl
in
mov
sahf
pop
or
rol
cmovb
inc
pop
cmp
subb
mov
pop
pop
mov
in
int
fisubl
out
arpl
xchg
pop
mov
cmp
push
ret
ja
adc
cmpsb
test
in
rorl
jg
jg
mov
aaa
cmp
popl
adc
test
push
in
and
popa
mov
mov
fst
push
iret
icebp
inc
adc
imul
xor
dec
pop
and
adc
sbb
xchg
cwtl
in
adc
sub
jb
fnstsw
xchg
push
mov
cmp
rcr
sbb
das
mov
mov
mov
cmpl
shll
outsb
clc
inc
and
sti
outsl
int
mov
push
adc
inc
enter
repnz
pop
out
rcr
mov
adc
jne
jbe
rolb
jno
hlt
jle
ret
in
adcl
sbb
shlb
cmpb
or
mov
pop
push
daa
ret
ficomps
dec
sahf
shlb
xor
mov
xor
lock
pusha
mov
xchg
aad
inc
dec
xor
xchg
scas
mov
xchg
sub
cmp
insl
jle
stos
jge
sbb
int3
pop
repnz
inc
cli
xlat
pop
sub
scas
scas
loope
xchg
decl
and
cmpsl
sbb
mov
test
mov
xchg
mov
in
ret
mov
inc
push
sub
dec
sbb
and
mov
test
in
nop
mov
xor
sahf
jae
adc
cmp
xor
neg
adc
mov
test
push
sar
cmp
shlb
mov
imul
jmp
dec
testl
repz
ret
sub
xchg
js
clc
imul
fadd
sub
cmp
mov
jmp
mov
dec
ret
mov
lds
cwtl
imul
pop
and
test
stc
mov
ljmp
xchg
jecxz
out
mov
sarb
cltd
nop
sub
push
repnz
xchg
xor
xchg
iret
adc
pop
xchg
fnstcw
sub
adc
rcll
push
call
ljmp
test
mov
fwait
or
sbb
or
sub
xor
sbb
sarl
xchg
sbb
loop
jg
adc
std
mov
mov
dec
int3
push
sub
repnz
aam
mov
mov
xor
lcall
push
aaa
adc
and
mov
ret
and
sbb
xchg
push
mov
aaa
fwait
repnz
stc
cmp
mov
not
dec
in
cld
sub
cmp
adc
add
sbb
dec
arpl
add
or
repz
push
repnz
mov
inc
ljmp
mov
pop
jle
imulb
add
jp
ss
jmp
fdiv
lds
inc
dec
adc
mov
ficompl
cmp
pop
add
cmp
jns
lods
jnp
xor
fstpl
dec
repz
enter
jo
mov
lret
sbb
js
or
movsb
xchg
sub
subl
jle
push
push
add
fsubrs
jne
iret
push
sbb
in
cmp
pop
lea
sahf
cmpsl
testb
repz
add
shl
outsl
negb
and
aaa
and
sub
fsts
out
mov
add
and
and
jo
enter
fdivrs
lock
add
push
aaa
dec
xlat
inc
loope
es
movsl
inc
xor
mov
dec
sub
or
add
push
dec
lahf
and
shlb
enter
shlb
lock
mov
je
and
mov
insl
cmc
ss
xor
stos
and
mov
mov
in
lret
push
sbb
lods
inc
fsub
jp
dec
stc
repz
leave
nop
jb
bound
add
jge
sbb
cltd
and
pop
jns
and
add
push
imul
push
dec
sarb
das
sarl
mov
inc
dec
fcomp
int
shl
sub
push
push
cmpsb
fldcw
xor
adc
test
add
push
and
aas
push
push
fwait
sub
stos
fnstsw
sbb
xlat
cmp
repnz
inc
jmp
test
or
lds
sti
sbb
jg
iret
mov
inc
adc
or
enter
popl
xor
lahf
adc
add
push
loope
insl
pop
popf
push
mull
dec
mov
out
test
and
out
inc
ja
sub
ret
xchg
xchg
mov
add
adc
daa
jnp
mov
fnsave
aaa
adc
ss
out
insb
cmpsb
mov
jge
push
pop
movsb
loope
dec
xor
xlat
jmp
push
dec
pop
jecxz
pop
jb
addr16
aad
outsl
push
test
push
pusha
inc
data16
mov
jo
inc
cltd
or
adc
or
rcll
add
into
mov
dec
mov
dec
xorl
xchg
dec
cmp
dec
pusha
cmpsl
std
in
jbe
daa
into
or
faddl
or
xor
ja
push
lcall
pop
sbbl
int3
pop
adc
lret
and
stos
cwtl
jmp
stos
sbb
scas
dec
cmpsl
ja
push
repz
out
gs
ljmp
sbb
iret
shll
loop
rdpmc
fdivl
ret
repnz
cmp
or
xchg
les
jecxz
fsubl
lods
int
xor
jo
sbb
jecxz
mov
into
inc
arpl
aas
test
add
jo
repnz
sub
data16
jnp
stos
pop
add
add
add
imul
jo
sti
mov
dec
ficoml
dec
decl
scas
jne
xchg
dec
or
lods
fnstcw
add
ds
and
sbb
fdivl
fistpl
mov
lods
es
or
lret
cmpsb
push
aad
scas
shrl
push
fs
xchg
xor
gs
fxtract
sbb
inc
adc
sbb
je
sub
push
ss
nop
test
mov
jmp
test
rorb
mov
or
jo
lock
cmpsl
fisubrs
lods
test
lods
cmpsb
repnz
push
pop
andl
mov
lea
testb
ror
cmp
sbb
push
loop
add
pop
dec
push
cmp
jae
shrl
jmp
and
xchg
mov
or
cmc
popf
inc
pop
js
int3
rorl
pop
sub
popa
push
mov
insb
arpl
and
jno
cmp
inc
sub
add
push
scas
mov
fists
xchg
repz
xor
leave
rorl
fwait
je
out
cmp
rorl
orb
lahf
xchg
out
leave
pushf
int3
jmp
rcr
or
mov
rcrl
jb
add
sbb
inc
gs
mov
lret
fs
push
les
add
mov
and
cs
shlb
and
mov
test
or
lock
xchg
stc
mov
pop
gs
jae
sbb
sbb
fwait
aas
sarb
add
cmpsb
and
xchg
in
gs
enter
adc
sub
lock
dec
xchg
jmp
mov
scas
dec
and
clc
push
mov
icebp
adc
jg
and
jb
subb
mov
push
pop
jp
jge
popf
xlat
lret
sub
xchg
cmc
add
insb
dec
mov
cli
popf
imul
xchg
or
ja
loopne
nop
outsb
xchg
xchg
mov
pushf
inc
js
ljmp
je
aaa
std
jp
and
push
mov
pop
and
in
push
add
mov
cmp
fstpl
and
mov
pop
jno
mov
fcomip
fcmove
push
xchg
loop
jbe
pop
adc
mov
push
jl
push
aas
xchg
mov
fcompl
and
mov
adc
stc
jg
or
mul
mov
add
or
andb
xchg
repnz
leave
sti
push
sbb
imul
xor
lret
fdivrp
xlat
sbb
sbb
sub
jl
mov
aam
sbb
cmp
sub
mov
push
pop
addr16
or
pop
or
or
xor
cmp
dec
xlat
and
aaa
adcl
mov
xor
dec
int
test
pushf
in
enter
pusha
xchg
iret
lret
dec
mov
std
pop
mov
sti
cmc
and
pop
inc
xchg
add
scas
js
loop
mov
cmpsb
push
jl
cmp
mov
cmpl
cmpsl
test
jb
shl
iret
jge
and
psubusb
mov
dec
repz
test
into
clc
cmp
push
rolb
or
pop
mov
repz
and
mov
adc
xchg
lods
addr16
sbb
push
jg
sub
gs
stos
inc
or
loop
pop
and
xor
inc
lods
adc
addb
add
pusha
jmp
testl
add
add
ss
inc
adc
in
jno
aaa
imul
loope
shll
out
push
mov
dec
lea
mov
or
daa
inc
outsl
pop
mov
push
cmpsl
cmc
fwait
jbe
or
sbb
inc
xchg
cmp
mov
adc
divl
aam
lfs
leave
sub
orl
clc
out
push
das
add
mov
mov
jecxz
call
cmp
push
dec
jo
dec
pop
ja
lock
inc
cld
xor
pop
mov
fstp
fildl
cli
mov
dec
mov
sahf
mov
mov
xchg
daa
nop
bound
int
jne
sbbb
inc
cmpb
mov
xor
ljmp
out
aam
lcall
sarb
mov
sub
push
fstpl
push
or
test
adc
js
push
dec
jg
inc
cli
push
jge
scas
push
stos
scas
push
jns
movsb
xchg
gs
mov
xchg
inc
mov
out
mov
and
sbb
jecxz
mov
cs
imull
test
mov
jne
xor
mov
pop
add
push
and
ror
nop
sbb
jg
ficoms
mov
test
jne
arpl
lret
pop
insb
xchg
rcr
ja
push
hlt
mov
iret
add
jne
bound
cmp
je
sbb
rcrb
ljmp
aad
sahf
leave
outsl
out
xor
mov
daa
pushf
xchg
xor
sub
sbb
adc
lret
outsb
out
sbb
mov
out
dec
adc
in
rclb
cmp
jno
pop
aaa
adc
push
cmp
or
clc
imulb
lock
dec
fnstsw
in
inc
jp
pop
pop
jo
stos
aam
divb
outsb
dec
les
aas
loope
cmc
mov
movsl
test
mov
adc
add
arpl
xchg
push
pop
sahf
leave
mov
out
arpl
cltd
and
push
repz
push
aam
jmp
sub
outsb
fnstcw
push
fdivl
mov
cmp
cltd
cs
xchg
ja
jne
adc
fldcw
sbb
test
in
fistps
push
push
and
sbb
mov
mov
in
sub
push
out
inc
xchg
pop
pop
push
push
add
shl
in
jnp
mov
out
sbb
push
ret
icebp
push
int
and
add
stc
imul
push
xor
push
scas
or
jo
xorb
leave
int3
shl
sub
mov
jle
adc
gs
xchg
sarb
cmp
loopne
int3
mov
cmp
out
xorb
mov
mov
hlt
xchg
dec
imul
push
push
dec
lcall
pop
mov
pop
mov
flds
in
dec
cmp
add
push
jo
sub
push
pop
dec
out
decb
adc
add
sahf
mov
call
push
xchg
pusha
xlat
mov
jnp
cs
les
hlt
dec
lret
or
or
ljmp
adc
addr16
sti
call
sti
xchg
xchg
test
add
xor
push
aaa
push
sub
inc
sbb
das
jmp
pop
outsb
mov
insb
jne
jne
sbb
mov
aam
jo
mov
cmpsb
lods
out
cmp
arpl
or
add
andl
push
push
cmpsl
stos
mov
mov
push
loope
xor
inc
fisubs
adc
adc
repnz
sahf
nop
xchg
pop
iret
dec
out
bound
lea
xchg
ficoml
adc
mov
pop
lret
push
push
sbb
test
jp
les
mov
insb
fistpll
jae
mov
cld
lcall
test
xchg
sub
or
fistpll
in
mov
in
stos
outsb
mov
pop
repz
mov
cmp
mov
add
add
fidivrl
xchg
lods
pop
xor
out
inc
sub
lret
sar
jns
xor
sbb
data16
jnp
mov
mov
lods
and
cmp
sbb
adc
or
daa
sti
inc
pop
jo
dec
arpl
sub
sti
xchg
repnz
lcall
in
insl
jp
adc
in
out
adc
imul
out
lea
mov
xchg
cmpsb
lcall
arpl
es
mov
scas
out
inc
scas
ljmp
cmp
sbb
cld
xchg
lods
outsb
pop
push
nopl
int
shrl
outsl
in
adc
and
das
int3
loopne
aas
push
addr16
mov
sub
xchg
mov
aaa
dec
das
mov
jl
std
inc
pusha
ljmp
adc
loope
adc
mov
in
fucomp
mov
jl
pop
push
in
or
lods
cmp
sub
pop
xlat
stc
jp
mov
movb
xchg
mov
xor
fildl
clc
push
dec
lahf
int3
call
mov
sub
aad
icebp
out
int
pushf
adc
mov
dec
mov
xor
fwait
rorb
jg
push
int
sbb
int
mov
aas
cmp
sbb
es
lret
out
into
call
fisttps
jge
xchg
mov
je
and
out
in
sbb
pop
test
mul
pop
inc
inc
cmpsb
ljmp
mov
mov
push
lods
adc
fisubrs
xchg
pop
xchg
scas
cli
inc
cmp
push
add
sti
mov
jecxz
sbb
mov
pop
test
inc
fbstp
jne
sub
xchg
sbb
jno
aaa
jo
enter
jb
ds
mov
inc
sbb
sbb
sbbb
movsb
mov
push
mov
ds
push
into
push
popa
add
mov
xchg
lret
cltd
enter
and
out
repnz
push
ret
dec
cmp
cmp
or
ret
aad
mov
andl
inc
cmpsl
jge
inc
or
test
sub
jae
lds
mov
sysret
inc
test
lods
das
sbb
dec
xchg
dec
int
mov
jmp
pop
push
xlat
and
add
mov
push
sbb
hlt
xor
sub
cmp
mov
or
pop
in
pop
cli
jg
xor
leave
cmp
and
mov
out
add
mov
clc
outsl
cmc
or
cmp
lea
xchg
xchg
dec
jnp
mov
rorb
pop
or
xor
js
popa
lea
or
pop
pop
sub
icebp
add
adc
loope
ja
xor
or
jge
insb
push
add
adc
mov
xor
nop
jne
pop
cmp
aam
jno
mov
fs
call
fs
mov
xlat
add
sbb
mov
sti
int3
mov
mov
fadds
mov
inc
mov
adc
in
mov
rolb
adc
sub
fsubrp
mov
add
js
xchg
xchg
js
lret
or
fs
push
shrb
lret
jg
das
cmp
or
sub
shll
inc
cmp
rcll
call
add
or
iret
jge
mov
mov
pop
add
jge
and
loop
and
addl
lahf
push
shrl
aam
cmp
inc
push
mov
mov
out
mov
jl
addl
add
or
and
int3
mov
loopne
mov
inc
push
repnz
in
or
sahf
dec
dec
mov
call
call
sub
or
push
add
roll
inc
xor
add
pushf
cltd
lods
adc
inc
mov
loop
test
lcall
mov
sub
popf
mov
jl
jmp
daa
pop
jle
stc
and
pop
out
outsl
pop
cmp
aaa
lods
mov
ret
test
cwtl
int3
imul
sub
xchg
popa
push
pop
lret
andl
in
pop
mov
hlt
or
adc
jne
adc
and
leave
filds
lea
stos
adc
pop
rol
mov
xchg
mov
push
pushl
mov
cmp
js
add
ret
push
and
movsb
loope
push
subb
lret
das
cmp
sti
fistpll
rorb
lods
mov
pop
sbb
cmp
ret
aad
adc
ljmp
int
inc
sub
cmc
int
pop
inc
inc
adc
adc
mov
jle
fwait
pop
stos
ljmp
std
dec
ss
push
pop
pop
test
mov
lock
jno
mov
jmp
fstpt
cltd
mov
insl
in
imull
mov
jnp
jns
sub
ss
lahf
insl
fldl
int
mov
jne
dec
lea
add
test
mov
add
pop
fdiv
xchg
iret
add
in
sarb
push
sahf
in
test
add
inc
rcll
inc
rorb
enter
inc
or
ret
repnz
aaa
inc
mulb
sarl
fwait
jl
pop
in
cmc
push
add
aaa
add
or
lret
test
fildl
dec
daa
and
jmp
cmp
sub
out
push
imul
out
dec
leave
jg
cmp
lea
lret
push
fwait
jp
out
dec
pop
push
jmp
add
int3
dec
cmpsl
dec
inc
ficomps
jmp
cltd
push
push
push
push
inc
cli
xor
sub
jmp
pop
sahf
lret
subb
xor
aam
mov
imul
shr
test
or
notl
pushf
mov
sub
iret
pop
cmpsl
or
inc
push
cmp
rolb
sub
xchg
scas
adcb
jno
jbe
pusha
sarb
aam
fistpl
mov
pop
cmpsl
test
cmp
test
sub
cmp
cmc
vmaxsd
fdivp
sti
out
cltd
dec
lock
mov
xlat
xor
sahf
shl
adc
push
dec
xchg
lret
sub
out
das
xchg
mov
push
inc
cmp
cmpsb
add
dec
dec
push
lret
jbe
push
pushf
jl
iret
mov
jae
push
sub
jmp
imul
repnz
fcompl
cmp
mov
mov
cmpsb
rcl
push
lds
test
imul
dec
pop
rcr
imul
xchg
mov
cmpsb
xchg
adc
jle
lret
orl
pop
jbe
push
repnz
mull
subb
ret
push
ret
dec
and
inc
mov
dec
sub
int3
mov
outsl
jmp
mov
xor
sub
stc
adc
cwtl
in
imul
mov
imul
cmp
scas
push
push
rcll
test
adc
mov
pop
dec
pop
movsl
push
sbb
popf
mov
push
push
imul
or
or
neg
icebp
cmp
movsb
les
ret
outsb
fstpl
repz
shrb
fs
xlat
inc
flds
jmp
cld
cmp
ss
jge
out
movsl
xchg
ds
sub
adc
or
into
dec
inc
sbb
aam
pushf
popa
push
movsb
sbb
shlb
sub
push
or
subl
pop
test
dec
cmp
adc
call
sbb
js
fwait
mov
pop
lret
sub
sbb
repnz
jae
mov
mov
rcrb
inc
in
dec
inc
sub
ret
repnz
sbb
ds
cli
out
sbb
fcmovne
cmp
incb
jecxz
mov
xor
stc
push
xor
loop
and
pop
jb
lahf
fwait
out
aaa
push
inc
adc
nop
pop
out
aam
les
cli
enter
lret
ffreep
clc
cmp
xchg
movsb
cmp
aad
jbe
inc
pop
inc
pop
in
test
pop
jnp
and
sahf
sub
jl,pt
inc
movzbl
push
ficompl
int
push
mov
adc
testl
cmp
es
sbb
xchg
mov
push
insb
and
cmp
arpl
mov
mov
adc
adc
sub
xchg
jno
cld
testb
xor
and
xchg
insl
jmp
mov
in
dec
cmpsl
xor
cmp
test
fcomps
add
ret
jp
leave
addl
inc
into
or
test
pop
inc
adc
inc
inc
fcmove
ficoml
jle
movsb
or
pushf
add
mov
push
int3
add
mov
shlb
into
push
jle
pop
xchg
inc
push
notl
cli
aaa
lret
gs
xor
inc
scas
aam
int
lock
aam
das
ja
dec
ljmp
mov
roll
out
cld
mov
rolb
sbb
mov
in
or
push
mov
cli
or
xchg
dec
xor
push
aaa
jns
dec
mov
insb
sti
xlat
dec
ret
jge
aaa
test
adc
adc
xchg
fists
in
cmpsl
stos
mov
jae
lahf
mov
sahf
sub
mov
xchg
mov
cmp
scas
bound
sbb
aas
cwtl
add
rorl
sbb
or
inc
add
subb
ds
stos
repnz
lods
rorl
sub
mov
mov
xchg
into
loope
and
push
in
js
push
test
loopne
pop
cmp
insl
dec
in
test
xchg
dec
add
inc
popf
jns
aaa
mov
push
lahf
cmp
repnz
or
inc
xlat
sub
mov
xchg
stos
inc
mov
jmp
test
pop
incb
jl
cld
mov
and
jne
cwtl
mov
mov
and
lret
fiaddl
int3
popa
cmp
jne
jnp
notl
leave
mov
cmp
xor
pop
adc
jo
cmp
mov
loop
hlt
jns
xor
imul
scas
push
cltd
xor
add
push
nop
jp
cli
cltd
push
sub
cmp
out
fdivrl
dec
mov
shrl
int3
jge
jbe
or
dec
cmp
ds
icebp
adc
push
lds
lea
scas
cmpsl
jne
jecxz
pop
and
enter
pushf
push
cli
lret
xor
lods
add
int
pop
jb
add
arpl
sub
int
or
mov
in
push
or
lock
sub
lock
outsl
mov
out
cmp
xchg
sub
lds
ret
daa
push
cmp
cmpl
popf
scas
fs
jle
ficomps
aaa
leave
add
cli
xchg
push
or
dec
xchg
ficompl
xor
jnp
mov
fsubrl
mov
bound
loop
dec
fcmovnbe
cmp
pop
cli
in
clc
jo
shlb
mov
inc
arpl
push
lahf
push
and
cs
dec
xchg
scas
cmp
jl
xor
mov
scas
es
push
cmpsb
mov
push
pop
xchg
ljmp
inc
fbld
cli
pop
mov
mov
adc
loopne
sarb
jle
push
out
pop
pop
push
xlat
addr16
mov
daa
loope
stos
push
aad
sub
outsl
mov
inc
rolb
jl
xor
mov
dec
inc
mov
dec
sbb
dec
test
das
cmpsb
and
idivb
inc
jmp
mov
add
cmp
mov
fs
sbb
outsb
jns
adc
jbe
scas
das
xchg
xor
mov
in
repnz
mov
jl
mov
ljmp
lock
les
mov
scas
fbld
cmp
sbb
adc
and
mov
insb
hlt
clc
jb
lcall
jne
xchg
mov
test
push
fucomip
and
nop
loopne
pop
aam
pop
push
sub
pop
lret
mov
mov
adc
sub
ja
stos
sbb
fdivrs
jecxz
mov
or
shl
aam
push
lret
add
cmp
outsb
addr16
mov
sbb
mov
sub
cwtl
mov
sbb
bound
out
pop
pop
dec
xchg
mov
push
sahf
mov
std
subb
popa
xchg
scas
mov
clc
je
cmpb
cmp
push
fstps
js
sar
push
mov
push
frstor
jl
sub
out
test
flds
adc
cmpsb
hlt
test
aas
cmp
in
lods
imul
iret
sbb
cmc
jb
dec
mov
loop
insb
push
fs
sub
xchg
enter
xor
ljmp
sub
sub
ret
imul
imulb
xor
mov
xor
mov
out
pop
mov
jle
adc
jp
push
loope
nop
pop
xor
inc
aas
lds
fsubr
mov
inc
pop
and
mov
sub
mov
cmp
in
enter
and
jmp
cwtl
es
push
push
lret
in
sbb
add
out
cmp
in
out
rcrl
pop
adcb
out
pop
mov
xor
loopne
inc
clc
dec
je
jne
pop
ljmp
in
or
lods
mov
dec
into
push
jb
xor
xchg
and
adc
repnz
or
sub
stc
inc
and
xor
mov
jns
push
sbb
jbe
mov
jb
scas
add
clc
cmp
roll
adcb
jns
mov
test
in
inc
into
fcmovnb
mov
cwtl
imul
mov
push
lret
je
loop
or
pop
rclb
mov
movsl
call
sbb
dec
xchg
ret
or
inc
int3
sbb
loopne
aas
pushf
and
je
lods
fsubrp
shrb
iret
in
add
pop
cmpsl
sub
dec
adc
pop
rcr
cmp
pushf
lret
fdivp
xor
push
out
cli
mov
inc
adc
sub
cmp
cmp
mov
xchg
pusha
push
ljmp
cli
imul
sub
mov
daa
adc
push
inc
push
mov
nop
xchg
into
sub
int3
or
sbb
out
fdivrs
adc
sub
in
rclb
fs
or
sbb
or
jne
shr
subb
idiv
xchg
xchg
fdivrs
and
mov
push
and
sbb
push
sbb
and
dec
dec
pop
or
clc
test
hlt
cmpsl
jno
ja
cmp
insl
jp
lds
xor
test
xorl
cmp
movsb
in
jle
repnz
and
out
lret
push
pop
mov
pop
movsb
std
mov
add
jg
test
and
in
push
mov
dec
lret
inc
sub
test
loopne
cmp
je
lahf
xor
or
arpl
mov
mov
xor
outsl
lods
test
clc
pop
mov
jecxz
fidivl
call
jno
jmp
add
inc
lcall
lock
mov
popf
jg
ss
imul
daa
jle
add
stos
add
cmp
mov
cmp
and
mov
xor
mov
out
shlb
mov
not
sti
ficompl
pushf
mov
cmc
mov
ja
cwtl
mov
pusha
cmp
fsts
or
adc
and
je
cmp
std
cmc
lea
add
cmpsb
xor
sbb
mov
cltd
jno
jge
add
ror
push
fsubrs
clc
xor
cs
mov
mov
push
call
decb
jbe
mov
pop
add
fs
shll
sub
fdivs
xchg
js
dec
mov
dec
addb
lds
pop
ja
sbb
mov
adc
fcmovnb
test
movb
and
or
xchg
mov
jl
pop
mov
clc
pop
repz
adc
xor
mov
pop
push
inc
movsl
cwtl
movsb
icebp
xchg
in
cwtl
lods
pushf
pop
out
sub
aad
in
mov
subl
ret
out
sti
fldenv
enter
sub
pop
fs
testl
bound
loopne
cli
sarl
cmp
aas
and
pop
sbb
cmp
dec
repz
fdivp
sbb
sbb
mov
inc
rcll
lock
lahf
scas
sahf
pushf
mov
repz
or
jp
or
or
add
cmp
xor
xchg
ret
push
push
sub
xchg
push
fiadds
in
ret
mov
es
mov
sub
lds
popf
mov
arpl
add
inc
inc
pop
push
jle
dec
mov
push
jns
mov
cltd
mov
ljmp
or
push
jecxz
jne
xchg
aas
fstl
iret
cmp
aam
jb
pop
mov
iret
inc
push
loope
inc
rorb
jl
pop
or
test
out
cmpsb
push
sbb
jmp
mov
push
adc
push
mov
mov
psrlw
mov
sbb
xchg
sub
dec
sbb
cwtl
add
scas
inc
add
loope
cltd
pop
pop
ja
push
mov
mov
or
or
sub
sbb
imul
or
int3
lods
xchg
fs
out
les
lahf
pop
ficompl
cmp
mov
mov
and
insl
jnp
mov
xor
xchg
xor
jg
push
adc
test
push
jl
lods
push
or
insb
lea
push
rcr
add
in
inc
and
or
insb
popa
mov
and
ss
enter
sub
sbb
mull
mov
call
jno
mov
loope
add
mov
out
je
test
push
aad
lock
repz
jne
pop
fcoms
insb
mov
mov
jge
testb
add
data16
adc
sub
imul
push
int3
and
adc
into
leave
cmp
lret
fistpl
mov
sub
mov
and
add
ss
insb
stc
inc
or
sbb
sti
sub
loopne
xchg
cmp
dec
test
int
mov
jge
call
xchg
stos
xor
dec
cli
cmpsl
fsubrs
adc
cmp
aad
test
cmpb
rolb
inc
stos
lock
push
cmp
nop
mov
popf
rorl
test
adc
xlat
mov
sbb
xchg
jl
mov
sbb
xchg
out
xor
inc
pop
push
mov
lods
addl
lcall
fsubp
ljmp
ret
and
aaa
andnps
addr16
cmp
pop
mov
push
cli
add
and
ret
popa
xchg
ljmp
jecxz
loop
xchg
stos
into
or
cli
cmp
sbb
sub
in
push
mov
jecxz
mov
and
ss
insl
inc
jns
rcrl
ret
xlat
xchg
cmc
pop
xor
push
xor
xor
mov
aas
in
mov
or
fstl
icebp
arpl
pop
popf
mov
mov
test
testb
pushf
mov
lock
push
scas
dec
push
test
or
ds
jae
stos
stos
mov
out
jge
into
xor
dec
call
xchg
mov
cmpsl
fcoms
sub
mov
add
in
leave
mov
mov
push
inc
add
mov
hlt
ret
fcmovu
xchg
and
test
stos
movsb
loope
das
sub
xor
xlat
adc
xor
dec
pop
mov
lea
pop
ss
mov
cs
dec
mov
sub
jmp
cmp
int
imul
push
notb
push
into
jle
mov
aas
ds
addl
int3
jle
cmp
pushl
jecxz
pop
lds
sub
out
mov
dec
out
test
adc
jmp
bound
mov
xor
jo
adc
insb
inc
xor
rorb
clc
cmpsb
test
movsb
repz
inc
aaa
fnstsw
xchg
pop
mov
sarl
push
push
dec
sub
test
push
and
push
push
jmp
lret
popa
jp
dec
or
mov
xchg
mov
mov
lea
push
or
sub
test
bnd
sub
ret
sub
add
push
stc
in
dec
add
adc
push
out
pop
xor
pop
sub
add
jbe
xor
leave
out
subb
in
dec
push
mov
inc
jne
and
lret
test
jge
mov
push
daa
pop
shlb
pushl
pop
xor
or
iret
xchg
jns
push
push
popl
fs
movsb
sbb
mov
xor
mov
movsb
mov
xchg
sbb
adc
stc
mov
sti
scas
dec
and
repz
scas
mov
cwtl
pop
pop
stos
in
aam
int
inc
dec
cmp
ss
pop
fisubs
mov
push
cmpsb
inc
dec
jb
out
pop
shlb
idivl
xor
adc
or
jg
jecxz
js
ficompl
lret
xor
in
inc
mov
add
jl
jg
aam
scas
or
das
icebp
cmp
push
push
fmuls
je
adc
cmp
and
insb
xor
xchg
mov
xchg
lods
loopne
aaa
cwtl
lcall
xchg
sbb
push
movsb
out
sti
mov
xchg
call
jbe
xchg
out
pop
scas
roll
mov
pop
sub
ret
mov
leave
cmp
icebp
dec
mov
loope
call
into
fldt
stc
pop
aad
es
daa
ds
icebp
pop
xlat
adc
test
daa
daa
push
push
das
jb
jmp
call
cmp
out
mul
add
pop
imul
ror
inc
jp
clc
add
aad
push
js
fdivr
cmp
fcomps
fs
mov
fs
jge
lcall
fadds
jne
mov
mov
xchg
ja
xor
add
icebp
pop
and
sub
jb
ss
lea
andl
add
xchg
adc
cltd
and
icebp
pop
mov
in
cwtl
insl
pop
xor
or
pop
xor
testl
xor
dec
fstl
fimull
xor
jp
pop
xor
inc
aaa
pop
outsb
addr16
cmc
cmp
pop
in
push
cmc
adc
outsb
dec
aad
add
sbb
ret
movsb
psubsb
outsb
clc
and
and
dec
mov
xchg
mov
loope
xorb
iret
dec
test
sbb
mov
sahf
and
stc
push
and
add
jle
rclb
adc
enter
lods
or
adc
cwtl
lcall
push
fimuls
pop
fnstenv
inc
pop
je
sbbb
outsl
repz
dec
fisubrs
shll
jno
jo
jns
adcb
fidivrs
inc
fnstcw
mov
pop
or
fisubrl
pop
cld
shr
scas
imul
mov
int3
adc
mov
sub
inc
xchg
in
mov
mov
ret
cmp
mov
push
leave
pop
and
gs
xorl
sarb
fs
ljmp
imul
in
fistpll
rsqrtps
fmull
mov
pop
cmc
pop
test
lret
adc
lcall
xor
jbe
or
int
stos
push
add
add
arpl
pop
sub
push
jecxz
xor
mov
stos
inc
cmpl
fisttpll
pop
movb
mov
lods
xchg
test
das
xor
jl
cmp
mov
sbb
add
mov
xchg
sub
pushf
lods
test
insl
xchg
push
lret
cwtl
add
push
jmp
outsl
ds
loopne
and
or
jle
js
add
push
nop
rorb
lds
and
cmp
xchg
fstpt
mov
data16
aas
and
xchg
xor
pop
in
sti
les
lcall
sar
scas
and
sub
das
add
and
xor
stos
in
dec
mov
mov
cmp
add
sbb
cmp
jmp
imul
jmp
cmpsb
pop
fstpt
test
adc
add
cltd
inc
aad
dec
pusha
rorl
addr16
xchg
xorb
addl
mov
rorl
lcall
and
stc
adcl
fs
mov
push
insb
pop
pop
mov
addb
lock
mov
bndldx
mov
inc
movsb
lds
dec
ret
push
dec
ffree
icebp
jo
pop
aad
adc
push
pop
pop
mov
mov
push
jns
int
mov
sub
dec
arpl
roll
iret
sbb
sbb
orb
xor
inc
jb
push
or
pop
es
in
into
fildl
push
ds
repnz
push
push
adcl
sbb
add
cld
in
sub
xchg
pop
popa
mov
addl
test
adc
mov
jg
stc
mov
cmc
mov
test
xor
jb
cs
test
test
add
filds
dec
dec
push
pusha
jb
hlt
add
push
repz
mov
addl
mov
jle
inc
jnp
loope
int3
pop
mov
xor
sbb
dec
cli
insb
push
faddp
flds
and
imul
das
pop
enter
ret
fwait
pop
cmpsl
insl
repnz
fwait
test
jge
sbb
mov
mov
xchg
lcall
out
into
sbb
sbb
es
sub
or
js
rol
cmc
or
rorl
cld
insb
mov
out
mov
fimull
mov
cli
mov
cmpsb
mov
imul
sbb
out
pusha
jmp
inc
cld
xor
aas
dec
and
and
mov
fsubl
mov
fstpt
rcrb
xor
pop
je
int
jmp
lret
pop
push
mov
and
cmp
jae
das
cltd
int
insl
fistps
sarb
lcall
add
ja
fs
mov
hlt
mov
inc
out
jbe
or
inc
jo
movsl
inc
loope
into
pop
pop
cli
fcomps
out
lods
pop
imul
add
jae
xchg
pop
mov
add
in
sub
mov
in
pop
fistl
data16
cmp
jle
cmp
fcoms
popa
ds
ljmp
rol
add
inc
jp
add
insb
popf
and
mov
inc
or
ja
insb
push
scas
sbb
mov
ja
lcall
or
mov
test
mov
addb
sub
sbb
inc
sub
sub
es
mov
add
enter
push
fldenv
jp
ret
hlt
or
push
push
inc
pop
shrl
mov
and
call
test
sub
in
xchg
add
jnp
dec
repnz
ds
jl
dec
or
sti
je
mov
sahf
jle
movsb
mov
mov
popa
mov
sbb
jbe
shlb
sub
aad
and
dec
mov
jp
ja
lcall
cmp
cmc
jo
adc
jne
cwtl
push
cmp
ds
test
into
jmp
repnz
inc
inc
insl
and
add
xchg
ds
and
add
mov
fadd
sbb
lock
jmp
cmp
push
and
dec
jns
and
ret
pop
fsubrl
dec
inc
popf
add
or
mov
fdivrp
imul
dec
loop
lcall
inc
xor
mov
cwtl
add
fwait
daa
mov
mov
inc
jbe
aad
push
addb
dec
cmp
lahf
insb
in
nop
sub
leave
xchg
clc
fcmovnu
and
cltd
pop
or
mov
jo
jecxz
jge
or
mov
imul
pop
add
mov
shlb
insb
jmp
in
cmc
fmulp
adcb
movsl
sbb
and
repz
lret
adc
fbld
icebp
adc
pop
sbb
repz
mov
sbb
cltd
out
and
xchg
sub
mov
sti
push
cwtl
ss
je
xchg
mov
shll
std
sbb
pop
mov
jnp
mov
push
add
inc
xlat
push
fldt
ret
mov
jecxz
xchg
repz
pop
fisttps
jg
jg
dec
stc
test
mov
or
and
xor
lock
je
inc
inc
orl
mov
inc
lahf
sub
mov
clc
inc
cld
push
aas
int
insb
leave
push
ss
mov
nop
and
jbe
add
mov
dec
shrb
xchg
gs
ret
jl
jle
cmpl
inc
andl
imulb
movsb
push
fiadds
in
adc
jb
push
fnstcw
mov
pop
test
aam
inc
shl
inc
mov
rcl
jbe
sbb
inc
or
mov
rcrl
cwtl
pop
jo
clc
add
inc
mov
dec
mov
fbld
push
sti
jmp
push
adc
insb
pop
cld
xor
in
pop
inc
mov
cmpsl
dec
cmp
loopne
adc
daa
testl
dec
jge
or
pop
cmpsl
adc
aas
add
push
dec
jg
andb
adc
xchg
cmova
mov
scas
ffreep
push
xor
insb
add
mov
sahf
stos
mov
jne
stc
jns
xchg
shlb
jg
int
outsl
cli
sbb
push
mov
and
cmp
xchg
xchg
movb
jno
fsubrs
adc
clc
jbe
fs
cmp
and
dec
or
insb
es
insb
out
push
shlb
clc
test
sbbb
ret
push
or
inc
push
ljmp
sub
sahf
loopne
and
dec
popf
repz
fdivs
mov
cmovne
shll
inc
aas
add
cmp
cs
and
popl
xchg
add
mov
gs
pop
push
xorl
aaa
sbb
mov
mov
push
mov
es
mov
push
in
pop
sub
mov
movl
pop
dec
cmp
mov
into
ret
add
and
cwtl
jae
add
and
cmc
loop
cmp
mov
das
iret
cmpsb
je
enter
aas
inc
ss
lea
mov
shrl
push
push
out
dec
sahf
loope
lods
daa
orl
xchg
adc
pop
inc
sbb
loop
push
and
movsb
mov
sbb
push
lret
bound
fsubrp
xor
adcb
rcrl
repnz
in
shrb
decl
push
xor
lret
insl
or
mov
leave
xchg
push
ret
int
loop
nop
jae
rcr
jne
cli
lea
cmp
jno
int
popa
ds
cmp
cld
sub
imul
jg
js
sbb
in
in
sub
cmovs
add
pop
aas
or
out
jmp
pop
les
clc
iret
cwtl
out
lea
xlat
cmp
stos
notb
ret
jp
pushf
mov
fldcw
cli
popf
pop
pop
neg
je
subl
and
rol
ja
jg
lret
lret
repz
fsubrl
pop
pop
fwait
cmpsl
aas
xor
lahf
orl
cli
mov
inc
mov
mov
mov
and
js
jmp
and
into
test
ror
es
rol
push
adc
mov
fistps
jbe
xchg
int3
add
test
jecxz
testb
mov
fst
push
xor
and
ljmp
jbe
mov
mov
and
jno
shrl
inc
arpl
popa
dec
and
int
mov
leave
stc
test
pop
cmpsl
mov
push
imull
pusha
sbb
outsb
popa
add
fcomps
test
or
mov
outsl
gs
sbb
add
ret
add
push
jne
adc
inc
arpl
jbe
pusha
mov
outsb
rol
lret
fiadds
scas
lret
shlb
adc
mov
js
out
xchg
mov
orb
mov
cwtl
jno
shll
mov
test
into
and
xchg
xchg
aaa
les
or
les
lret
cs
sbb
rorb
pop
std
fwait
dec
ss
mov
xchg
inc
cs
jecxz
cwtl
out
jecxz
je
adc
daa
cmpsl
call
jbe
pop
or
fdivs
das
jne
lahf
push
and
out
dec
ret
xor
pushf
mov
dec
lret
aad
inc
int3
stc
mov
mov
xchg
pmulhuw
sti
in
adc
cli
sbbb
or
int3
mov
mov
bound
push
or
jle
sbbl
jmp
pushf
fisubrs
jns
push
push
mov
and
aad
out
call
mov
lahf
adc
and
mov
dec
xor
testb
push
bound
jne
sbb
jg
stc
push
iret
jg
imul
cmp
imul
and
xchg
lret
inc
add
shlb
mov
pop
out
movsb
push
pop
mov
dec
rorl
add
enter
fwait
jmp
push
imul
jo
inc
inc
int3
xor
imul
mov
mov
out
rcll
aaa
dec
sti
fsubp
pop
inc
mov
pop
push
clc
orb
mov
jnp
mov
xor
lret
iret
sarl
andl
sbb
imull
and
sub
lods
icebp
rolb
jno
jb
icebp
adc
mov
sub
loop
adc
mov
aas
jle
addr16
mov
mov
aaa
mov
lods
rcrl
outsl
leave
mov
fnstcw
dec
xchg
jno
dec
outsl
imul
jmp
test
mov
arpl
jecxz
fisubrl
orl
lahf
xchg
add
push
cmp
push
cmp
cli
subl
lods
js
add
sbb
data16
int
and
xor
inc
cmp
adc
pop
xchg
int3
dec
ljmp
or
sub
xchg
and
rorb
pop
dec
and
aad
add
inc
popf
or
xchg
jns
mov
lahf
repnz
mov
jo
pop
mov
xor
enter
stos
fnstsw
lahf
subb
das
ret
adc
scas
inc
mov
jge
or
div
ja
aad
repnz
xchg
pop
jne
xor
aad
unpcklps
cs
insb
bound
xchg
pop
les
adc
mov
js
fcmovnb
gs
mov
mov
xchg
push
lret
inc
jb
je
or
or
scas
int
sbb
shrl
or
les
jnp
out
clc
sti
enter
xor
mov
and
out
push
jae
cmc
adc
jne
mov
mov
jmp
adc
nop
imul
push
xchg
cli
xor
cmp
push
ror
add
imul
or
cmp
into
add
mov
sbb
xchg
adc
jo
sar
or
pusha
adc
add
xor
inc
cs
xchg
push
xchg
inc
movsl
fmuls
push
das
test
sahf
adc
out
movsl
push
dec
fcomip
daa
or
test
sub
cld
ficoml
jmp
sub
cli
push
cwtl
addl
out
addl
lods
xor
or
fistl
add
cltd
dec
and
cwtl
mov
js
test
stos
dec
scas
sbbb
add
cmpl
xchg
adc
pop
mov
dec
lods
test
test
xchg
arpl
xchg
cmp
xchg
push
call
aam
mov
dec
rcr
and
mov
jnp
mov
mov
hlt
in
jae
ss
cmp
int3
xchg
ficoms
mov
nop
xchg
mov
xor
popa
inc
or
pop
push
mov
cmp
jecxz
sbb
cmp
and
fsubl
dec
int3
xor
push
add
call
fnstenv
dec
test
aas
out
jecxz
adc
mov
or
push
cmc
movsb
mov
loopne
scas
adc
psubb
int3
and
push
movb
out
call
cmp
out
push
dec
sbb
push
repnz
xchg
mov
mov
mov
popf
mov
lea
mov
pop
or
mov
pushl
mov
iret
scas
cmp
std
adc
cmc
xor
lea
ljmp
lcall
push
imulb
cmpsl
jge
dec
mov
adc
in
jg
xchg
pushf
or
pop
movsb
mov
xor
sbb
cli
and
adc
fsts
loop
mov
sub
jno
or
and
mov
movsl
cmpb
jecxz
shrb
push
fisttps
adc
cld
loope,pn
mov
rcrl
pop
call
mov
mov
out
sub
stc
out
out
add
xor
test
aad
in
pushf
aaa
leave
push
hlt
mov
adc
shll
jge
mov
orl
fildll
or
add
nop
lahf
mov
test
inc
pop
xor
jnp
test
cli
imul
adc
ljmp
bound
div
jge
adc
jg
xchg
jge
fcoms
cli
out
scas
in
mov
stos
jns
inc
adc
cli
jnp
fldl
popf
arpl
add
mov
jmp
pop
mov
imul
out
outsl
call
int3
aad
in
icebp
mov
mov
cltd
or
sbb
js
iret
or
leave
data16
cli
jge
orb
pop
ljmp
clc
inc
stos
inc
jle
mov
inc
cs
lcall
cmp
call
add
in
add
pop
andb
sub
bound
push
adcb
imul
xor
js
push
xor
loopne
daa
inc
sbb
adc
jae
lock
mov
jle
imul
loopne
cmpsl
repnz
outsb
mov
lods
pop
dec
out
sbb
inc
add
imulb
icebp
sub
mov
xchg
push
mov
in
push
adc
movsb
cmp
and
mov
incl
int
push
push
sbb
mov
inc
jne
hlt
mov
mov
jle
adc
imul
test
push
jg
lods
sub
cmp
js
loop
lcall
cmp
sub
loop
xor
cltd
and
bound
js
mov
fdivrl
add
shl
mov
sub
addr16
push
push
dec
leave
int
and
xchg
pushf
fwait
or
test
pop
stc
sbb
fmuls
xor
push
pop
xchg
pop
sbb
cmp
pop
jp
int3
jo
stos
in
sahf
aam
dec
leave
in
inc
or
xchg
test
jnp
xlat
adc
iret
adc
cmc
test
pop
ljmp
sahf
mov
or
mov
shlb
sbb
sub
cmpsl
mov
sbb
or
push
arpl
push
out
sbb
cmpsb
test
fistps
or
cmp
jb
xchg
pop
mov
and
cmp
mov
ja
outsb
sub
mov
data16
and
dec
out
pushf
jae
out
mov
dec
movsb
and
data16
jmp
xor
inc
cld
mov
ficompl
mov
fiaddl
mov
inc
jmp
adc
pop
inc
scas
add
sub
lea
xor
repz
test
sbb
int3
xchg
cmp
outsl
jno
jnp
push
sarb
nop
sub
stos
mov
std
in
mov
movsb
xchg
mov
movsb
addr16
adc
sbb
out
aad
dec
aaa
in
subb
cmp
mov
xor
sbb
xor
xor
xchg
out
mov
stos
jecxz
pcmpeqd
lock
xlat
sti
das
sbb
fidivl
lret
or
mov
add
jmp
clc
push
jge
insb
fists
or
iret
push
sar
cmp
in
pop
dec
sub
or
inc
pop
mov
push
push
xor
xchg
lock
adc
scas
sub
ja
divl
clc
inc
add
std
ljmp
cwtl
out
push
mov
ds
sub
orb
ret
fistl
fcoml
xchg
in
mov
jge
mov
and
xor
pop
ret
adc
xor
pop
mov
jnp
cmp
aad
inc
inc
aad
jmp
xchg
out
in
cmp
inc
ret
sub
in
push
pop
sub
inc
shr
or
mov
jmp
movsl
loopne
sysexit
aam
shl
hlt
jmp
pop
daa
dec
mov
ds
adc
push
cwtl
jae
mov
les
addr16
ret
jp
arpl
pop
adc
daa
bound
mov
mov
mov
inc
ja
mov
fildll
test
ret
mov
pop
ldmxcsr
in
dec
cmp
mov
jbe
and
pop
push
adc
fcmovnb
jne
dec
ljmp
inc
out
mov
loop
cmpsl
mov
cmpsb
lcall
cli
xchg
lds
and
nop
jl
imull
in
lods
lds
lahf
mov
add
subl
inc
aaa
repz
push
mov
fbld
mov
bound
jae
test
mov
adc
loope
gs
out
subl
xchg
movsb
aad
jbe
xor
scas
fs
and
int
cmp
adc
sbb
jo
pop
lock
xchg
mov
inc
mov
mov
rcr
inc
jmp
adc
repnz
sub
clc
cmp
adc
aaa
lea
cld
mov
js
scas
lods
sub
mov
fldl
nop
xchg
test
movsb
cmc
and
sub
jecxz
ja
fcompl
into
pop
cs
test
popl
out
lock
mov
push
add
add
push
out
sub
sti
inc
mov
movb
faddp
pop
lock
andl
jbe
ja
mov
test
in
sub
pushf
flds
arpl
fdivr
cmc
cmpsb
lcall
cmp
das
call
xor
cmpsb
movsb
push
js
or
add
push
inc
ss
ds
scas
dec
adc
fnsaves
mov
andl
insl
out
sar
push
or
loop
out
ja
sbb
notl
in
xchg
add
pushf
jl
repnz
cld
xor
and
ljmp
add
lcall
or
xor
aad
mov
lds
int3
outsb
fisubrl
mov
pop
or
adc
jnp
sub
add
mov
in
mov
je
jmp
in
or
xchg
jp
jno
outsb
jle
adc
xor
add
dec
int3
inc
jb
xchg
inc
cs
mov
dec
jle
sub
dec
out
jecxz
stos
push
rclb
jno
insl
fadds
int3
mov
cli
lahf
push
dec
xchg
dec
jne
nop
inc
jae
dec
aas
into
test
jno
out
pop
sub
sub
mov
fiadds
push
mov
movsb
cmp
add
les
mov
xchg
push
leave
loopne
cmp
sub
icebp
dec
sub
cltd
test
cld
adc
add
pop
add
ljmp
sub
xor
xor
jae
mov
movsl
sub
sub
inc
mov
into
jg
loop
stc
das
fstps
add
in
ret
out
test
push
xchg
xchg
mov
inc
and
sub
mov
mov
andl
mov
adc
into
sbb
lods
adc
mov
add
ss
push
and
xor
jne
dec
xchg
lret
cmpsl
in
cmc
test
push
int
jo
pushf
xlat
lret
cld
push
scas
iret
iret
fnstsw
jle
ljmp
daa
dec
aaa
xchg
dec
andb
mov
stos
push
push
inc
jb
cmpl
push
into
jno
jnp
inc
add
es
lods
stc
jo
loope
and
sbb
inc
pop
mov
adc
mov
imul
dec
loope
pop
scas
xor
mov
mov
mov
cli
sbb
xchg
mov
arpl
fs
add
jbe
ret
jecxz
inc
aas
std
out
sub
pop
adc
mov
roll
inc
mov
mov
arpl
adcb
mov
mov
iret
and
cmpsb
sarb
mov
fwait
rolb
push
fsubrp
rclb
mov
ds
mov
jle
lds
cli
lret
in
leave
popf
push
jae
lea
mov
cmp
lret
dec
xchg
adc
lret
mov
lea
mov
and
shl
cmp
push
div
push
inc
fmul
mov
mov
rolb
cmpsl
and
cmp
sahf
mov
in
jg
mov
push
test
clc
fcmovb
mov
aaa
ljmp
pop
xor
jmp
dec
fistpl
outsb
shr
dec
pop
push
into
daa
test
ljmp
loope
clc
ja
das
les
xor
test
ja
push
cs
loop
jbe
mov
roll
inc
mov
imul
lods
lds
jnp
mov
ficomps
mov
pop
rcl
scas
inc
cld
lret
clc
insb
cmp
sub
fdivrl
cmpsb
jae
pop
outsl
adc
pop
scas
pop
lcall
cmp
outsb
mov
hlt
mov
icebp
andl
lods
roll
jl
adc
xchg
imul
mov
pushf
out
jne
cltd
int
inc
sbb
shrb
mov
fdivrl
mov
andl
dec
cmp
cmp
dec
movsb
addr16
dec
das
loopne
leave
mov
dec
pavgb
popf
leave
mov
int
in
movsl
aam
sbb
xchg
cwtl
iret
inc
mov
ja
out
enter
repnz
cs
hlt
imul
xor
pop
add
ret
mov
push
xor
and
mov
in
add
jns
add
movsl
mov
xchg
jp
das
int
push
stos
sbb
shl
cs
and
adc
push
dec
fdivs
in
movl
sbbl
fsubrp
test
sub
add
sbbl
mov
add
inc
cli
dec
rclb
adc
cmpsb
xor
cmc
add
push
jb
inc
xchg
cmp
push
sub
xor
push
cltd
les
mov
sub
pop
in
in
adc
ds
push
dec
loope
test
cli
lahf
mov
je
std
lret
push
lahf
mov
fwait
pop
mov
add
mov
scas
js
int
xlat
pop
xchg
xchg
xchg
jnp
loop
xor
mov
inc
add
xchg
imul
push
sbb
ss
mov
pop
or
sahf
hlt
in
xchg
cmp
std
pop
pushf
xor
xchg
pusha
mov
inc
std
inc
xchg
std
sub
scas
or
imul
out
or
dec
repnz
jmp
movb
stos
and
mov
out
ficoms
mov
push
mov
cli
shll
stos
pop
jno
inc
xor
mov
xor
mov
ja
jnp
inc
lcall
xchg
sbb
dec
cmp
jb
js
jbe
mov
pop
addr16
dec
fsubrp
push
add
push
out
stc
cmpsl
test
fiadds
lds
jp
mov
int3
push
adcb
jecxz
imul
xchg
pop
repnz
jne
sub
or
add
mov
les
push
gs
andb
andb
in
jbe
andb
xchg
cmpsl
cmp
lahf
sub
aas
leave
lea
adc
xchg
xor
ret
rorb
mov
mov
mov
mov
lcall
push
mov
fstpl
sub
in
or
lock
movsl
rclb
add
sub
daa
clc
adc
icebp
aaa
cwtl
bound
dec
jl
sbb
jns
loop
test
inc
rdseed
clc
add
dec
pushf
lock
add
push
lods
test
lock
mov
jne
in
or
rcll
jae
mov
mov
cmp
outsb
add
je
xchg
jmp
cwtl
push
roll
lret
dec
xchg
fisttps
hlt
mov
dec
in
pop
add
inc
sbb
loope
out
pushf
inc
and
xor
imul
jo
jns
cli
cmovae
ret
mov
sub
cmpsb
xor
sbb
lret
xchg
mov
fbld
dec
xchg
sti
or
mov
mov
sbb
fisttpl
fstl
es
sub
and
rcrb
fisttpl
inc
nop
push
sub
pop
sahf
add
mov
cs
push
xchg
xor
mov
cmpb
xchg
pop
fildll
popa
dec
push
sbb
aaa
xchg
insl
stos
dec
jp
mov
and
mov
in
aaa
pop
cltd
or
xor
sbb
lcall
inc
push
arpl
dec
shll
push
or
clc
and
cmpsl
xchg
xor
fisttpl
jne
mov
xchg
cmp
or
xchg
std
loope
dec
mov
daa
mov
push
fdivp
xchg
clc
mov
in
mov
jns
dec
cmp
mov
push
scas
or
mov
loop
push
cld
fs
mov
push
cld
and
xor
enter
cli
pushf
ret
or
paddsb
and
leave
mov
mov
cmp
pop
and
dec
jg
push
fnstsw
pop
cs
push
push
les
mov
insb
sahf
adc
push
call
jle
xor
cld
shlb
xor
push
outsb
cltd
jl
popf
test
or
sub
mov
jae
pop
shl
cmc
repz
push
stos
mov
movsb
fcomip
mov
test
mov
inc
push
adc
mov
mov
pop
daa
lret
pop
test
jbe
mov
loop
and
xor
push
sub
test
mov
testl
jnp
xchg
out
insl
mov
repnz
jns
sbb
fnsave
inc
cmpsb
repnz
adc
imul
outsb
call
outsl
cld
push
insl
pop
xchg
ljmp
mov
mov
rclb
dec
cmpl
mov
push
fs
dec
hlt
data16
jns
ret
scas
mov
pop
mov
cld
push
outsl
les
mov
insb
stc
mov
sbbl
inc
repnz
mov
dec
mov
aaa
adc
push
push
mov
or
push
jmp
inc
dec
lahf
xchg
and
sub
xlat
inc
into
mov
lret
mov
outsl
xor
mov
fdivs
push
lds
fcom
adc
das
cli
adc
dec
mov
mov
ljmp
xor
inc
adc
movsb
pop
sahf
mov
int
test
xor
leave
pop
pop
xchg
in
aas
xchg
mov
push
cltd
pop
dec
jb
int
ficompl
sub
fwait
mov
cmp
inc
mov
jmp
loop
imul
xchg
add
inc
in
sub
mov
or
pop
popf
fwait
jle
imul
int
sbb
mov
jmp
mov
out
mov
cwtl
push
hlt
sbb
mov
aam
sbb
cmp
aas
push
mov
jge
cmp
mov
mov
and
cmp
cmc
pusha
ret
ret
mov
pop
bound
xor
xchg
pop
fistps
mov
mov
out
mov
or
push
je
dec
into
dec
gs
xchg
mov
adc
push
loop
in
fdiv
pusha
sub
into
mov
xor
subl
insl
aad
lds
aas
inc
aaa
rcrb
jmp
jno
xlat
xorb
imul
lods
punpckldq
or
push
movsb
cmpsl
jmp
push
jge
cltd
test
sub
jp
fcom
movsl
cmpsb
pop
pusha
pop
mov
iret
int
cmc
sub
xchg
push
xor
adc
ja
insl
sbb
std
or
ret
movl
cvtps2pi
aad
and
nop
dec
push
mov
push
push
and
enter
stos
pop
push
push
sti
xor
call
cmpsl
add
loope
dec
or
pushf
fbld
fdivrp
mov
loop
mov
inc
ret
lea
aas
gs
dec
sbb
and
scas
cmp
fdivrp
pop
sub
dec
pop
dec
lret
xchg
xor
mov
cmpsb
dec
or
push
ljmp
lds
lods
pop
scas
add
adc
xlat
je
lcall
sub
out
and
push
lds
les
and
pop
cli
sbb
js
stos
xor
mov
test
fisubrl
dec
sbbl
cmpl
cltd
negb
push
jnp
stc
sti
inc
shrb
pop
add
lods
mov
mov
lods
pop
push
push
into
push
xchg
mov
push
cs
jecxz
push
push
cmp
stos
in
imul
iret
cs
call
xchg
xchg
jns
or
dec
dec
sub
mov
addb
pop
sub
cwtl
sbb
out
fcoml
es
jns
mov
das
sub
or
mov
and
jnp
gs
or
hlt
mov
std
sbb
and
mov
sub
scas
mov
sub
inc
or
or
int
mov
mov
cmp
add
push
stc
insb
jne
clc
cmpsl
cwtl
out
push
in
cmpps
push
shrl
loopne
dec
mov
and
scas
movsl
repnz
lcall
sahf
fisubl
adc
pop
mov
sti
andb
or
ret
push
xor
lds
sbb
or
mov
imul
pop
push
insl
mov
fld
fdivrp
test
jno
push
dec
pushf
pop
jge
cmpsl
jmp
subl
popf
sub
imul
test
add
adc
pop
cmpsb
mov
xchg
mov
xchg
cltd
mov
fmull
xchg
cwtl
scas
in
mov
mov
aam
pop
or
enter
mov
js
ret
add
iret
cli
mov
les
fistps
outsl
push
jns,pn
sub
leave
push
or
mov
test
jge
inc
daa
jne
lahf
ja
aam
mov
out
pop
stos
ficomps
in
pop
imul
shl
imulb
data16
mov
cmp
mull
es
xor
or
xchg
jno
stc
mov
jge
mov
lods
lret
testb
and
movsb
incb
jno
hlt
cltd
jecxz
or
cmpsl
push
jbe
cmp
adc
mov
sub
sub
stos
test
into
movsl
adc
mov
push
loopne
xchg
sub
loop
out
pushf
jne
cs
in
clc
das
ficompl
cwtl
sbb
cs
lcall
cmpl
bound
rorl
xor
mull
cli
cmp
adc
lods
int3
push
jmp
inc
jecxz
cmp
inc
inc
lock
bound
call
insl
mov
outsl
mov
xchg
stc
jmp
inc
mov
movsl
lcall
xchg
jns
aas
repnz
pop
test
insb
mov
loope
ss
rcrb
xor
adc
gs
sub
inc
filds
aas
mov
mov
mov
adc
imul
inc
sti
and
xchg
mov
mov
data16
imul
cltd
mov
add
mov
pushl
mov
and
cltd
and
movsb
mov
fcomps
fcmovb
sub
jb
xor
mov
jnp
inc
pop
add
mov
lods
aas
loopne
test
cmp
loope
das
dec
adc
test
xor
mov
add
imul
bnd
sbb
sti
mov
jmp
in
adc
xchg
dec
fiaddl
sub
mov
inc
xor
jnp
pop
mov
or
dec
mov
bound
mov
sub
pusha
sub
repz
cmp
sbb
shl
aas
movsl
dec
aad
inc
into
mov
dec
xor
bound
pop
pop
ljmp
lret
mov
dec
add
rcrl
push
cmp
mov
ror
sbb
push
inc
js
add
mov
push
mov
cmp
push
in
pusha
mov
add
or
lock
enter
jmp
and
ds
les
cmp
mov
and
dec
mov
out
aaa
ficoms
sahf
outsb
adc
les
sbb
jg
xor
aaa
ds
test
mov
jnp
pushl
pop
xchg
sbb
dec
xchg
xchg
mov
adc
adc
sub
in
lahf
leave
jnp
cwtl
dec
lret
ds
mov
jle
cli
lret
mov
jne
movsl
clc
subb
call
inc
sbb
stc
pop
dec
sub
fwait
fisttps
test
repz
and
lods
scas
inc
sub
jl
fisttpl
test
and
sbb
subb
ret
lea
jne
lock
add
lds
add
inc
js
sarl
or
into
dec
test
sub
push
roll
push
push
ficoml
pop
mov
inc
push
sti
incl
mov
flds
jns
jge
jg
insl
fs
cltd
fucomp
sub
rcrb
pop
std
jns
hlt
lcall
inc
jp
pushf
fdivrs
sbb
jb
xor
cmpsl
lret
jno
jle
std
loope
imul
xorl
cmc
mov
mov
and
out
imul
leave
push
sbb
imul
mov
fcompl
cmpl
xor
jns
add
jns
daa
mov
add
jg
add
adc
or
in
pop
push
int3
cli
pop
cwtl
add
and
int
lcall
rol
lock
add
ror
scas
lcall
rcrl
lea
cmp
xchg
cmp
call
es
mov
ret
xchg
icebp
rolb
lods
xchg
pop
jg
mov
and
pushf
push
and
jge
push
insl
mov
pop
xchg
jns
loop
cmp
mov
adc
mov
mov
add
mov
or
pmullw
mov
and
loop
arpl
repz
shlb
and
je
std
mov
ds
popa
negb
gs
daa
fsubrl
jbe
lods
cs
rclb
imul
stos
dec
and
inc
inc
lea
pop
push
lock
ret
cs
jecxz
mov
insl
lods
cli
sub
rcrb
and
fidivrs
jne
dec
inc
cmp
xchg
les
shrl
sbb
addr16
add
cmp
pop
adcb
fcomp
push
cli
dec
in
test
stos
and
jg
mov
jl
into
sub
adcl
pop
mov
shll
iret
popf
push
jae
xchg
flds
inc
cmp
add
jmp
cmp
push
mov
fstpt
push
jae
xchg
push
test
jo
inc
ds
cmp
pop
ljmp
xchg
aas
jno
pop
nop
aas
nop
sbb
sub
popf
or
jo
mov
add
inc
or
push
insb
xor
push
fwait
sbbb
mov
mov
xchg
push
inc
nop
pop
aaa
sbb
fsubp
mov
scas
movsb
testl
jno
or
nop
adc
adc
mov
fld
cmp
popf
jge
ret
or
pop
daa
hlt
out
xchg
daa
pop
or
loope
ja
sbb
mov
pusha
dec
testb
mov
lods
jecxz
pushf
repz
lods
jmp
cmc
xchg
and
sbb
cs
mov
adc
or
ficoms
lods
xchg
sub
pop
mov
dec
push
and
jmp
dec
pop
sbb
and
sub
inc
iret
lea
pop
mov
add
mov
push
jg
dec
fistl
mov
insb
inc
dec
xor
jbe
jmp
mov
imul
dec
jne
cmpl
mov
sub
jl
out
and
xor
into
sub
shrb
pusha
xchg
jp
sbb
mov
js
in
adc
mov
push
mov
xchg
cli
xor
jmp
insb
mov
mov
lahf
mov
inc
ljmp
xchg
push
movsb
mov
iret
rorl
xor
fnstenv
jg
dec
test
sbb
pop
xchg
dec
inc
cmp
jg
xchg
xchg
xor
imul
mov
jo
lcall
loope
std
push
sti
sbb
adcb
setle
mov
mov
push
jns
pop
sbb
cmp
movq
cwtl
repz
ljmp
into
lahf
jo
mov
push
xchg
sbb
sbb
ljmp
icebp
inc
mov
inc
cs
daa
mov
gs
out
leave
cmpsb
fwait
fwait
sub
imul
dec
call
adc
dec
dec
lret
stos
mov
xchg
xchg
mov
dec
mov
xchg
pop
lret
mov
xchg
insb
push
and
cmp
sbb
stos
add
rolb
lret
xchg
xchg
jmp
aad
xchg
xor
daa
jb
movsl
mov
push
xor
jnp
dec
push
mov
dec
adc
mov
sbb
aas
outsb
test
push
mov
fs
sub
xor
fisttpl
cmpsb
jne
mov
icebp
xor
jne
xor
pushf
xor
inc
and
dec
loop
lods
push
mov
and
sbb
or
in
mov
cmpsl
mov
cmc
outsl
mov
lock
sbb
inc
or
es
add
les
aas
insl
mov
lods
sub
push
orb
lret
in
cmp
sub
divl
out
test
aas
cld
cmpsb
jecxz
mov
xchg
jae
and
repnz
jle
ja
mov
lahf
pop
sbb
jg
stos
cltd
in
xchg
jge
int
add
sar
jmp
inc
pop
leave
mov
sub
stc
xchg
or
fbld
andb
cs
lret
insl
adc
sub
dec
hlt
aaa
push
cmpl
jecxz
jae
xor
shrb
cmp
int3
sub
pop
into
mov
xor
pop
shll
lds
add
imul
leave
je
dec
mov
xor
imul
mov
or
xchg
js
pop
lret
mov
mov
cmpsb
pop
bound
fs
xchg
in
or
das
addr16
xchg
push
popa
in
ljmp
ret
add
outsl
inc
jp
push
scas
ja
scas
in
stos
sub
mov
mov
xchg
push
push
fcmovnu
dec
sub
xor
jg
xor
std
mov
mov
mov
cmovno
adc
add
lods
and
inc
loope
ljmp
xor
or
sub
push
out
push
inc
clc
sti
pop
push
in
jno
jmp
inc
repz
xchg
test
aaa
dec
fcoml
sti
push
outsb
mov
fistpll
int3
sub
mov
bound
int
pop
mov
roll
lods
lret
and
mov
pop
mov
ljmp
pop
cmp
mov
jl
jle
pushf
das
leave
inc
stos
cltd
mov
sub
cli
xchg
and
ss
jle
cmp
and
in
cltd
loope
pusha
out
and
shr
or
mov
inc
mov
mov
jmpw
add
hlt
lret
lods
pop
jle
mov
aad
mov
fdivs
lahf
in
xor
jmp
cmpsb
negl
cwtl
aad
gs
jecxz
sti
mov
dec
mov
loopne
pop
pop
out
mov
pop
lock
lea
xchg
fwait
in
mov
fdivr
jle
test
mov
fsubl
scas
subl
aad
icebp
in
jns
inc
and
div
jp
push
jae
comiss
xor
sub
scas
jge
int3
lods
mov
pandn
fisttpl
or
stc
aad
inc
cmp
into
sbb
sub
pop
stos
cmp
das
in
inc
ja
out
fstps
sarb
int
pop
jge
jg
xor
in
add
inc
jge
out
mov
sub
pmuludq
stos
pop
mov
jp
in
push
push
lea
mov
outsb
jnp
adc
mov
dec
push
dec
js
dec
inc
fldenv
dec
mov
hlt
mov
aam
out
jo
adc
sub
cli
sbb
and
add
aaa
pop
push
xorb
imul
sarb
cwtl
push
cmp
aad
arpl
jecxz
aas
js
push
shl
imul
sbb
into
cli
push
push
psrlq
lds
into
mov
dec
stc
pop
mov
pop
mov
mov
fmull
int
add
mov
and
dec
or
mov
aam
outsb
test
outsl
pusha
cmpsb
loop
es
fs
push
xor
repnz
in
call
mov
inc
leave
arpl
jmp
xchg
adcl
inc
mov
lods
shlb
cmpsb
xchg
inc
xchg
movsb
inc
sub
gs
test
adc
pop
jecxz
and
add
fmul
lcall
or
movsl
xor
and
cmpsl
xor
sarl
mov
adc
inc
cmp
int
dec
scas
lods
xchg
mov
push
jmp
aas
jns
jnp
iret
adc
sub
shrl
cli
fsubrp
jne
divl
scas
testb
dec
dec
test
pop
push
jns
popa
imul
test
test
das
sahf
cmovbe
lock
cs
xchg
push
xchg
mov
jge
jle
jae
mov
scas
and
cmp
xchg
in
jp
pop
loop
push
push
lret
mov
mov
xchg
mov
clc
nop
xor
sar
std
imul
cmp
out
lock
gs
pop
data16
outsb
dec
push
push
iret
ds
fs
jbe
push
pop
sub
arpl
shll
dec
jge
outsb
loop
or
movsb
jecxz
or
loopne
push
and
xchg
outsl
cld
dec
in
push
pop
dec
inc
jae
cld
out
cld
and
stos
inc
xchg
add
sahf
add
lods
mov
xchg
stos
pusha
out
divl
cmp
fidivrl
jmp
cmc
std
inc
push
and
inc
sub
pop
repnz
scas
push
mov
aas
inc
lcall
sbb
fistpll
in
mov
inc
cmpsl
or
mov
mov
jno
insl
pop
inc
mov
xchg
push
addr16
xchg
repnz
dec
mov
sub
push
lock
das
lea
mov
xor
in
sbb
xchg
adc
out
jo
testb
orl
jecxz
mov
rorl
mov
adc
inc
insb
leave
cltd
push
mov
dec
shlb
push
sahf
inc
cmp
add
test
aas
cs
mov
ljmp
dec
bound
test
popf
je
mov
in
popa
mul
inc
sub
shll
das
jnp
fs
hlt
sti
out
mov
out
push
pop
or
mov
sub
xchg
dec
dec
and
dec
enter
or
mov
mov
mov
mov
aaa
std
cmp
sub
les
lahf
sbb
and
mov
ljmp
push
test
jge
xchg
xorl
xchg
or
xlat
out
add
js
loopne
push
pop
scas
or
ret
test
fdivl
jno
sub
icebp
daa
mov
dec
push
lret
iret
pop
fildll
mov
adc
xor
push
das
and
mov
and
dec
xor
jae
adc
xchg
xchg
adc
je
push
push
fsubr
mov
test
xchg
shll
jnp
push
xchg
adcl
cmc
lods
push
lods
in
adc
mov
insl
pop
pop
loop
in
cmc
adc
dec
xor
cld
push
loope
jno
inc
repnz
scas
test
xchg
int3
jnp
fucomi
adc
insb
jno
sbb
pop
leave
fldenv
or
sub
adc
pop
fdivl
push
and
pop
add
push
hlt
insl
sub
leave
outsb
jl
mov
inc
jge
dec
xchg
aad
xchg
sbb
pop
out
cwtl
sbb
popa
sub
repz
outsl
lcall
ret
aam
std
sti
fcomps
clc
in
mov
mov
cmpsl
cmp
mov
jae
and
das
jg
xchg
xlat
dec
and
sub
jb
icebp
mov
movsl
jge
adc
mov
xchg
dec
and
or
mov
and
aas
inc
jmp
stc
push
ja
pop
out
inc
testb
add
dec
push
imul
sub
jo
stc
arpl
aaa
hlt
cmpsb
aas
xor
cld
xchg
loope
lahf
jnp,pn
adc
fldt
int
jmp
icebp
cli
xchg
jne
mov
setg
aam
subb
cmp
mov
jb
enter
sbbb
das
lcall
out
jl
adc
test
out
xchg
or
add
mov
outsl
xor
or
sbb
pop
mov
pop
mov
aam
shl
push
mov
and
sbb
mov
pop
rcll
lcall
lahf
inc
add
lret
dec
daa
adc
cmp
fwait
add
adc
push
inc
cwtl
sbbl
sbb
xchg
dec
sub
fdivrl
cld
mov
in
cmp
neg
int3
pop
leave
pop
xor
mov
into
fwait
aaa
or
ret
jle
xchg
movntps
cmp
xor
push
push
iret
mov
jne
aad
pop
test
xor
jmp
cmp
push
roll
dec
sub
leave
addr16
bound
pop
icebp
mov
mov
loop
jmp
shrb
imulb
mov
aaa
sub
cld
sti
leave
fwait
xchg
mov
mov
out
arpl
in
xor
fstps
ljmp
xor
pusha
out
and
sub
mov
and
clc
adc
insb
ljmp
pop
jmp
movsl
scas
bound
mov
aaa
adcb
sub
xor
in
mov
pop
aam
xchg
dec
das
fcoml
mov
jecxz
repz
hlt
adc
and
jmp
cmp
push
mov
outsb
pusha
scas
movsl
add
push
jge
xchg
xchg
adc
cmp
int3
lds
jb
dec
fs
push
rcr
and
mov
shrb
shrb
repnz
in
xchg
rcrb
pop
add
sub
dec
adc
aas
ret
jle
push
inc
sbb
das
xor
xchg
and
cltd
xor
fwait
adc
dec
add
inc
hlt
jnp
push
xchg
and
hlt
lods
mov
cmpsb
jno
fwait
lock
or
xor
mov
inc
sar
scas
repnz
je
fdivl
int
rcll
push
jle
sbb
xchg
adc
fidivs
loop
sbb
int3
push
push
and
jns
push
ds
ficoms
dec
push
jge
repnz
iret
mov
xchg
pop
sbb
pop
movsb
test
dec
int
cmp
mov
or
nop
ljmp
in
loop
mov
inc
add
mov
imul
movsl
fnstsw
pop
xor
mov
outsl
push
scas
lahf
jecxz
sub
cmp
mov
test
movsb
mov
rclb
fucom
sti
pop
ss
push
pop
or
je
mov
aad
mov
inc
xchg
ficomps
mov
andb
lock
sar
loopne
mov
movsb
rolb
and
ficomps
push
xchg
scas
sarb
hlt
out
inc
or
jb
lods
mov
aaa
push
mov
sbb
in
adc
mov
jns
loope
mov
psubsw
xor
bnd
cmpsb
pusha
pop
cmp
dec
or
in
pusha
js
pusha
and
je
cmp
mov
or
jnp
fisttpl
or
iret
mov
mov
dec
xor
mov
push
sub
cmovge
pop
mov
cmp
ret
sbb
inc
mov
sbb
dec
sub
in
ret
sbb
jge
movsl
xor
lcall
or
into
ret
int3
lock
inc
sub
add
cmp
jo
or
into
jns
aam
jbe
lahf
push
pop
dec
add
aam
jle
xchg
sub
loope
or
dec
mov
subl
inc
push
lods
das
jge
cltd
aas
or
out
pop
movsb
push
cmp
negb
into
push
push
adc
jmp
pop
mov
iret
sbb
pop
or
repz
sti
inc
push
decb
loop
jge
pop
lahf
ficoml
xlat
mov
adc
int
imul
jg
ret
fcmovu
pop
and
andb
es
dec
cmp
out
mov
and
mov
into
test
jle
es
subb
adc
addr16
jne
sbb
stos
aam
mov
in
inc
stos
stos
pusha
in
dec
in
dec
enter
repnz
xchg
push
jge
rolb
or
mov
mov
jmp
xor
xchg
xor
imul
cmp
pop
leave
sub
xor
xchg
mov
leave
jecxz
jne
push
stos
push
cmp
xor
xchg
mov
xchg
or
test
test
and
inc
push
xchg
mov
repz
jb
jno
add
enter
adc
or
aaa
inc
mov
xor
sbb
scas
dec
sub
out
sbb
sti
paddw
mov
dec
cmc
xchg
out
jae
sub
cmc
cmpsl
ror
push
cmpsl
test
outsb
orb
into
punpckldq
pop
arpl
rorl
dec
outsl
testl
xchg
add
dec
jae
in
mov
in
jo
enter
jp
inc
mov
clc
sbb
mov
pop
jnp
cmp
test
testb
mov
pop
call
jo
xchg
lret
cmp
sarl
push
popa
or
inc
dec
test
in
and
ja
cwtl
mov
in
push
mov
jo
and
outsl
test
sahf
test
cmp
out
daa
fs
sahf
sbb
adc
xchg
jp
lods
xlat
sub
fwait
and
cltd
xlat
scas
pusha
xadd
push
fstpt
ss
aad
sub
es
sub
cwtl
jge
xor
or
bound
sub
fistpl
sbb
sahf
dec
or
sbbl
dec
adc
cmp
push
add
dec
insl
pop
mov
fwait
inc
movsl
cmp
das
mov
jno
add
loopne
ss
lods
inc
jmp
push
and
mov
sbb
adc
add
adc
xchg
test
dec
push
push
dec
jbe
sub
jecxz
gs
pop
cs
subb
adc
or
sub
mov
xor
imul
mov
sub
inc
rol
jne
clc
mov
dec
mov
cmp
call
rolb
cmp
fldl
xchg
sar
jge
popf
cltd
jle
jnp
xchg
cmp
mov
sbb
sbb
or
jp
adc
jle
cmp
xor
adc
lock
cltd
sbb
dec
add
icebp
iret
sub
loopne
out
xchg
xor
xchg
or
push
test
pop
sub
shll
test
arpl
mov
xor
jmp
inc
fs
in
pop
mov
add
fs
and
mov
mov
scas
fnstenv
jae
jb
and
fiadds
aas
mov
mov
mov
dec
cmpsl
jmp
xor
mov
jo
scas
sbb
shll
es
ret
mov
out
inc
jns
lret
cmp
xor
sahf
push
xor
out
add
jmp
lahf
adc
dec
push
arpl
mov
enter
fbstp
add
jb
lret
inc
inc
mull
pop
shl
jo
jp
xlat
xchg
lcall
and
pop
ret
pop
cmp
js
cltd
pop
push
jno
std
lock
push
test
stc
insl
in
les
mov
int
inc
xchg
dec
imul
fdivs
out
pop
subb
jbe
mov
jae
int
and
xchg
sbb
mov
fadd
pop
lret
addb
sahf
and
pop
in
jle
shlb
dec
xor
mov
out
ss
jmp
shrb
adc
add
sbb
shl
outsb
lahf
push
pop
jg
sub
cmpb
xor
or
mov
cmp
add
std
push
fcom
add
popa
ds
movsb
sbb
push
dec
sub
cli
test
sbb
inc
aas
cld
mov
sarb
ds
cld
pop
cmp
cmpsl
mov
mov
mov
orl
push
pop
cwtl
test
andl
cld
gs
mov
fsubrl
in
dec
xchg
dec
mov
mov
push
xchg
push
mov
jb
dec
enter
push
cmp
mov
jg
sarl
gs
das
mov
adc
dec
iret
loopne
scas
adc
imul
pop
sahf
mov
xor
loope
mov
bound
xor
adc
mov
dec
mov
nop
sarb
xorl
jmp
inc
sbb
ds
sbb
mov
arpl
cld
movzwl
inc
clc
scas
xchg
xchg
pop
mov
push
out
jp
jb
push
lcall
cmpsl
leave
push
mov
xor
or
adc
xchg
ljmp
jecxz
jne
inc
ja
push
inc
dec
and
xor
ja
fldenv
fiaddl
sbb
ss
inc
push
jbe
dec
mov
mov
icebp
loop
fcoms
pop
jb,pt
mov
rol
shlb
loopew
sub
in
bound
cltd
adc
mov
hlt
dec
sub
mov
dec
xchg
mov
cmp
adc
out
jmp
xchg
adc
ss
mov
mov
mov
adc
push
xor
jnp
repz
rorb
movsb
pop
mov
inc
xchg
lahf
cmp
push
into
cwtl
mov
sub
cmp
sub
movsb
je
lods
test
mov
arpl
roll
add
sbb
and
test
sti
paddusb
stos
repnz
dec
ja
mov
shll
mov
testl
inc
inc
sbb
add
aam
sbb
imul
cli
pop
cmp
xlat
js
mov
and
sahf
jmp
subb
dec
xchg
xchg
stc
ret
ljmp
js
std
idivb
pushf
movsb
pop
sbbb
mov
lret
ret
ds
pop
jo
movb
sahf
push
push
push
aaa
mov
adc
cmc
xchg
mov
out
fwait
and
inc
mov
pop
cwtl
test
jmp
je
adc
pop
loopne
out
dec
bound
add
mov
inc
sub
dec
cmp
or
outsl
stos
das
mov
mov
mov
aas
and
pop
add
sbb
xchg
xor
adc
out
jno
fisttpl
cmpl
test
push
dec
stos
in
test
cmp
rcrb
cli
fmull
or
jns
adc
rcrl
mov
mov
mov
sub
jmp
inc
gs
pop
cld
mov
out
ja
std
out
incl
cmpsb
push
xchg
xchg
sub
mov
xchg
lret
and
inc
movsl
fwait
mov
lahf
in
jne
cmp
sbb
mov
out
dec
and
or
xchg
loopne
cmc
jne
inc
jge
or
xchg
mov
push
lret
ret
leave
ljmp
mov
cmp
lock
ljmp
sub
lds
aam
mov
mov
or
in
popa
stos
insb
sub
pop
insb
inc
dec
sahf
notl
inc
and
ret
ljmp
mov
rol
xchg
or
dec
xchg
mov
rol
mulb
add
stos
dec
cli
loope
sub
push
sub
and
add
fidivrl
jp
ja
adc
int3
fcompl
stc
push
sub
leave
loope
jnp
ljmp
mov
in
xor
sbb
sbb
jns
push
je
call
xor
mov
dec
adc
jno
cmp
lahf
test
push
int
ret
sti
inc
scas
push
stos
filds
and
rorl
movsb
mov
test
add
nop
mov
sub
in
xchg
scas
fwait
xchg
cltd
cmpl
mov
cmpsl
rorb
out
pop
movsl
add
mov
inc
or
and
or
repz
nop
fiaddl
xor
pop
jo
dec
push
adc
xor
subb
pop
outsb
ds
ficomps
mov
jb
js
lods
dec
cld
je
lea
pop
cmc
xchg
sbb
stc
xabort
mov
repnz
jo
in
inc
out
jecxz
arpl
push
sub
add
ja
pop
fxch
mov
dec
mov
xchg
pop
jge
dec
repz
add
jnp
dec
nop
cmp
out
mov
jb
mov
pop
mov
enter
aad
imul
push
jnp
lock
mov
test
push
cltd
repnz
fs
add
dec
dec
aad
rcr
fistps
mov
test
pushf
in
aam
adc
cmp
clc
mov
pop
add
fdivl
push
scas
mov
push
jp
xlat
loop
and
movsb
sub
push
mov
and
xchg
mov
xlat
cmpsb
jno
pop
mov
clc
push
dec
rcr
cli
push
lods
test
mov
lea
jnp
mov
pop
xor
loop
inc
pop
mov
cwtl
adc
jg
stos
pop
sub
jb
test
ds
test
aaa
cwtl
inc
add
mov
test
mov
inc
jb
aam
xor
ja
jae
xor
inc
out
mov
pop
add
jl
insb
jo
sbb
jbe
fdivrl
mov
sarl
cmp
enter
repnz
nop
jmp
loopne
jnp
lahf
lcall
les
push
ret
lea
push
out
xor
jo
loop
jecxz
jg
mov
out
or
test
push
fisubrs
outsb
lret
xchg
daa
xor
mov
and
xchg
out
daa
sbb
lret
and
outsl
push
shr
cmp
pop
divl
xchg
and
jmp
cmp
dec
orb
xlat
jle
push
mov
arpl
mov
cmp
test
mov
sbb
hlt
or
outsb
xchg
stos
aam
addl
or
push
stos
hlt
push
loope
scas
in
movsl
mov
push
das
xor
push
repnz
inc
ljmp
fldenv
js
stos
repz
stos
js
cmp
call
push
out
push
push
lods
mov
rolb
xchg
dec
jo
jne
divl
icebp
mov
pop
mov
adc
fcomip
jmp
push
jg
into
in
mov
ret
cwtl
push
inc
aam
sbb
jmp
ds
out
sar
mov
popf
push
and
sub
pop
and
and
xchg
lock
jnp
mov
inc
and
push
jae
push
movsb
insb
and
cs
lret
enter
pusha
push
ds
xchg
push
dec
insb
pushf
dec
pop
jge
pop
or
cmp
push
out
dec
arpl
aaa
mov
mov
pop
cmc
add
mull
stos
mov
mov
mov
lods
orl
adc
xlat
les
test
adc
jo
scas
or
cmpsl
icebp
arpl
dec
lods
adc
jge
xor
shl
sahf
test
pop
or
bound
pop
push
repz
fsubrs
jle
mov
loop
mov
add
cmp
xor
mov
adc
add
scas
pop
dec
inc
loop
add
sub
mov
mov
ror
mov
ret
std
rorl
mov
xor
mov
in
push
rcll
stos
je
sbb
xchg
mov
dec
popf
mov
and
fisubrs
and
mov
test
fcmovnu
arpl
addr16
mov
cltd
int3
call
pop
mov
xor
and
mov
mov
xchg
mov
add
cld
lods
dec
xor
pop
pop
rorl
jl
scas
cmp
out
int
lahf
cwtl
adc
out
xor
sub
iret
insl
pop
mov
leave
movsl
mov
jno
cmc
cmc
aad
mov
fucomi
cwtl
out
in
mov
pop
addl
inc
cwtl
ds
imul
jl
sarb
pop
popf
sbb
outsb
jle
add
xchg
in
jge
xor
scas
pushf
sub
daa
lcall
lods
repz
and
xchg
cld
gs
pusha
je
lock
lret
repnz
call
mov
out
scas
jecxz
stos
xchg
sub
loopne,pn
jp
repz
xlat
or
cs
out
ficompl
stos
add
out
adc
fcmovnbe
mul
pushl
dec
test
data16
aaa
sbb
test
xor
stos
das
pop
jo
pop
jp
sub
sub
ret
jecxz
mov
pop
pop
push
add
lret
cmp
pop
loopne
adc
das
cmp
repz
jb
sbbl
and
sbb
xchg
push
cmp
mov
xor
shrl
testb
mov
mov
lds
sbb
pop
scas
and
mov
aas
rclb
popf
xchg
mov
loop
cs
push
jp
push
and
mov
push
arpl
cmp
jae
or
xchg
insl
call
jbe
mov
enter
mov
daa
sahf
pop
mov
lahf
add
push
fdivrl
mov
add
sti
sub
fs
in
cld
stc
sbb
out
jae
aam
imul
adc
or
inc
and
xchg
inc
adc
insl
xchg
inc
enter
fidivs
lods
fcompl
sbb
aaa
fscale
rol
and
andl
pop
cmpsb
lea
imul
dec
imul
lods
mov
push
mov
xor
or
xchg
adc
cmpsb
in
sub
neg
mov
jmp
mov
stos
jbe
int3
fwait
stos
push
jp
sarb
jne
and
sub
popf
xor
iret
mov
es
sub
js
or
pop
ret
sub
psllq
popf
cmp
stos
xchg
xor
sub
push
cltd
dec
mov
push
adc
mov
xor
cmpsl
jle
cmpsl
pop
jns
push
or
outsl
vandnps
js
fwait
sahf
sub
test
add
xor
pop
jle
or
jne
pop
leave
test
aam
push
mov
inc
es
loopne
or
subl
or
cwtl
or
add
lods
lahf
inc
dec
lea
nop
push
mov
in
jge
pop
mov
dec
pusha
jo
cmpsl
ss
jb
inc
aas
notb
pushf
out
rcrb
or
xchg
insl
stc
cmpsb
popa
jb
mov
dec
xchg
adc
hlt
daa
hlt
outsl
mov
sub
gs
or
sub
mov
ret
cwtl
jae
mov
sbb
xchg
hlt
push
xchg
jno
inc
jp
aam
or
jp
test
out
bswap
div
push
sbb
pop
iret
stos
xchg
push
dec
jp
dec
int
dec
cltd
cmpsb
mov
stc
sub
mov
pop
dec
pop
mov
popa
cmp
idivb
mov
or
or
addr16
out
mov
sub
mov
mov
in
test
mov
into
lods
ror
mov
rcrl
inc
mov
jg
cmp
inc
push
add
in
out
cmpsl
sub
aad
int
xchg
xor
pop
push
out
sbb
sub
int3
jl
cmc
or
loop
dec
jnp
lods
pop
cmp
data16
ret
inc
adc
jg
mov
dec
lret
popa
dec
jbe
push
loopne
add
pop
xchg
shll
lret
filds
push
jg
xor
and
je
les
pop
dec
adc
cmc
xor
xchg
inc
xorb
out
push
cmc
imul
test
ret
xchg
add
add
call
and
out
xor
sti
xor
inc
inc
std
mov
out
dec
pop
jno
mov
std
std
jle
push
mov
dec
fcmovnb
xor
and
or
mov
xchg
test
fldl
jo
rcrl
sbb
je
mov
or
xor
call
bound
andl
popa
nop
daa
pop
enter
jp
mov
sub
jl
xor
sub
in
shll
sbb
or
add
dec
fisttpl
mov
loope
lods
mov
inc
xchg
bswap
add
test
sbb
cmp
cli
mov
jl
ror
icebp
aam
ljmp
inc
mov
mov
sti
or
ja
cmpsb
call
cmpsl
inc
dec
jl
lret
push
pop
pop
pop
cli
or
mov
ljmp
mov
jle
and
aad
pop
stos
fmull
sub
push
lock
xchg
mov
fcoml
jo
jo
cmp
notb
loop
push
movsl
in
jp
sbb
adc
jo
sub
roll
or
popa
add
gs
mov
out
gs
mov
push
clc
cli
dec
ficoms
push
push
movsl
outsb
daa
inc
iret
cmp
push
mov
clc
add
fildl
outsb
sbb
jge
scas
adc
pop
xchg
fcompl
dec
xor
add
or
repnz
xchg
stc
cmpb
jp
popa
inc
cltd
sbb
adc
mov
cld
je
mov
decl
lock
cmp
jge
dec
jp
push
mov
pusha
stos
cmp
lea
mov
mov
mov
jg
stos
shlb
push
mov
adc
cmc
push
push
out
and
int
mov
dec
cltd
sub
dec
loopne
loope
mov
iret
add
shll
jmp
xchg
inc
push
ret
lea
hlt
outsl
jno
mov
sbb
sbb
inc
jbe
mov
mov
add
sbb
movb
scas
ret
push
mov
sub
or
loope
mov
pusha
ss
fnsave
in
lods
dec
fnstcw
mov
dec
cmpsw
scas
inc
in
cli
pop
add
loope
push
adc
movsl
lahf
cmp
mov
cmp
hlt
and
sub
int
hlt
test
fmulp
gs
push
in
add
lret
leave
in
mov
imul
xor
cmp
dec
scas
fbstp
inc
or
les
inc
jg
ficomps
es
jne
shll
aad
xor
xor
aas
xrelease
inc
in
inc
or
ss
pop
pop
rol
or
ret
lcall
adc
out
adc
add
mov
mov
dec
out
mov
aaa
nop
outsb
and
popf
jo
lods
fdivr
std
mov
adc
cmp
call
cld
not
fcoml
add
mov
ljmp
popf
popa
in
mov
xor
loope
cltd
mov
sub
and
fcoms
dec
dec
rcll
fsubrp
call
in
orb
push
jl
mov
jb
sbb
test
xchg
xor
push
sbb
test
ss
jno
xor
fisttpll
pusha
mov
loopne
ljmp
das
cmp
repnz
push
and
leave
or
mov
cmp
int3
mov
mov
fwait
movsl
xchg
icebp
xor
jnp
mov
pop
fistl
pop
or
idivb
add
ficompl
ret
in
xor
mov
movsb
scas
je,pt
cmp
sub
pop
punpckhdq
fdivrl
shll
lods
out
jmp
aas
mov
sbb
std
sahf
mov
jp
sbb
pop
lds
hlt
pop
push
xchg
out
movl
or
xor
fs
dec
lret
test
dec
or
xchg
in
incb
lea
pop
cmpsb
sbb
or
movsl
xchg
mov
jnp
aad
lahf
pop
mov
mov
mov
outsb
xor
mov
jno
cmp
xor
das
xchg
and
mov
lahf
inc
pop
popa
inc
sub
adc
sub
nop
into
fmull
aas
ret
cmp
and
cmpsb
inc
mov
cmp
rolb
shll
mov
cmp
fimuls
rolb
mov
leave
push
scas
stc
aad
data16
sti
sti
cmpsb
mov
cld
jle
stos
ds
into
in
xchg
into
and
fsubl
fwait
cmp
ds
aam
dec
cs
xorl
inc
push
cmpsb
imul
imul
negl
icebp
mov
mov
and
add
jb
push
iret
rcrb
fs
xor
test
iret
sbb
int3
adc
mov
lock
das
sub
cmpb
jns
adc
push
xchg
jmp
fcomi
add
lret
js
movsl
mov
loopne
xlat
add
cli
int3
out
push
lret
xlat
dec
shll
addr16
sub
jg
push
loopne
pop
push
push
inc
and
imul
add
adc
les
outsb
aad
popa
ljmp
mov
arpl
movsb
mov
sub
fdivrs
imul
mov
imul
dec
mov
jne
lods
inc
xor
ss
insl
pop
lock
cmp
jl,pn
ficoms
adc
and
in
cld
testb
add
stc
dec
xchg
adc
sbb
jnp
xlat
inc
mov
jae
lods
add
jmp
add
adc
out
repnz
mov
test
out
jl
or
iret
sub
dec
mov
mov
cmc
rorb
stc
mov
fmul
sub
fnstcw
mov
sub
loope
ljmp
lret
ret
pop
icebp
aad
rorb
mov
test
test
push
es
cmpsb
enter
adc
jecxz
push
mov
push
add
sbb
daa
dec
xor
jno
jnp
xchg
inc
xchg
in
test
mov
xchg
lods
cmp
xchg
pop
in
std
mov
cmp
rclb
fwait
push
into
stc
push
test
add
xchg
test
js
mov
mov
sbb
mov
add
and
mov
push
mov
adcl
fisubl
and
mov
mov
stos
xchg
dec
mov
dec
je
pop
jmp
outsb
inc
inc
xor
mov
movsb
ja
mov
push
inc
xor
insb
loop
ljmp
outsb
mov
das
adc
jg
mov
call
add
lret
inc
sub
jg
insl
push
inc
aas
ljmp
inc
int
pop
adc
dec
mov
mov
sub
in
push
jp
cmpsb
adc
xor
jecxz
mov
outsb
lods
aad
adcl
out
jmp
xchg
cmp
xor
outsl
mov
jg
ds
std
mov
mov
pop
add
cmp
sbb
leave
xor
push
cmpsl
sub
cmpl
fidivs
clc
adc
xlat
adc
test
or
pop
lock
adcb
pop
push
in
int3
mov
mov
push
imul
mov
repnz
xor
shr
xchg
mov
in
jmp
add
pop
fcomps
xchg
adcb
movups
xor
enter
dec
mov
pop
sahf
cltd
pop
add
push
push
adc
das
jecxz
sub
sub
jmp
frstpm(287
out
ret
or
cmpl
in
inc
xchg
out
push
cmp
ds
sahf
adc
daa
adc
push
lcall
stc
push
sbb
cmp
cwtl
std
mov
data16
jbe
or
test
inc
xor
lahf
aam
fisubrs
leave
cmpsb
fstpt
int3
pop
push
mov
sbb
das
jmp
ret
jmp
fidivrs
jmp
cmp
xchg
outsb
nop
mov
call
adcb
fldl
aam
fucomip
and
outsb
rclb
push
inc
pushf
jecxz
inc
jne
lret
pop
mov
ds
fbstp
add
aam
mov
xchg
mov
ljmp
int
inc
xor
push
ljmp
jae
inc
mov
xor
mov
aam
insb
insl
pop
std
xor
mov
lods
dec
test
pop
aam
fstpt
shrb
jae
xlat
add
and
lock
scas
dec
sub
pop
add
ficompl
cmp
xor
movsl
adc
dec
cs
scas
add
outsl
frstor
add
push
push
repnz
push
push
mov
divb
rcll
iret
call
icebp
xchg
in
ret
repz
xor
cmp
xchg
mov
cli
je
fwait
cmpsl
sub
and
fld
cmp
pop
stos
leave
mov
pop
push
aam
fisubs
aas
dec
test
jo
imul
inc
sbb
xor
and
mov
dec
das
and
enter
mov
cwtl
test
or
rorw
clc
sub
jo
popa
cmp
push
scas
mov
mov
mov
adc
lods
popa
movb
and
icebp
adcl
out
mov
ja
mov
pop
sahf
jno
sbb
add
fnsave
adc
and
aam
pop
mov
icebp
cwtl
push
dec
mov
int
mov
mov
xlat
push
cwtl
xchg
gs
les
fisttpl
jb
addb
push
bound
cltd
out
sti
mov
gs
fildl
fucomi
out
ret
rcrb
xor
dec
or
mov
jp
into
xor
jmp
scas
and
mov
fsubl
pusha
push
cmc
adc
mov
jp
cld
insb
xchg
sbb
je
xchg
lcall
inc
mov
dec
mov
mov
jbe
inc
out
jmp
cli
das
repz
and
lds
xor
pushf
cmp
xor
push
and
sbb
dec
push
xchg
mov
ja
jo
mov
movsl
mov
mov
pop
pop
lea
mov
push
dec
add
std
mov
cmp
jp
and
push
cmp
mov
mov
xchg
or
push
lahf
fstp
cltd
movsb
mov
sbb
inc
and
rclb
push
pop
push
xor
adc
rclb
jg
or
rolb
push
or
push
ret
xchg
scas
iret
xchg
xchg
cmp
das
sub
aad
xchg
pop
mov
pop
lds
adc
inc
aad
push
mov
adcl
adc
push
ret
pop
lret
xchg
shlb
popa
ret
fnstcw
pop
mov
das
leave
and
mov
sti
dec
arpl
xor
lret
xor
pop
add
add
sbb
cmp
cmc
cmpsb
jle
cmpsb
mov
mov
movsb
mov
jae
mov
or
xorb
mov
inc
pop
mov
mov
or
fbstp
addb
daa
in
aad
jns
jg
repz
int
repnz
cmc
inc
xchg
cwtl
out
jmp
pusha
push
jno
nop
test
dec
bound
out
or
ds
je
into
and
dec
in
jecxz
xchg
lret
es
mov
sbb
fwait
adc
push
or
in
mov
sub
push
cmp
add
out
scas
les
mov
or
jae
pop
cmpsb
lods
mov
or
fidivl
xchg
rol
pop
sbb
or
popf
sub
mov
push
xor
pop
lock
sub
popa
les
lret
xor
mov
jl
jle
cli
fldenv
cmpb
jne
xchg
ret
xor
mov
sbb
nop
pop
cmp
cmp
jne
inc
gs
sbb
sbb
xchg
rcrb
xchg
mov
mov
sbb
xchg
cmp
jl
dec
movsl
cmpsl
pop
dec
in
adc
sbb
call
push
mov
lret
je,pt
dec
jp
sbb
hlt
fwait
scas
mov
xor
push
add
aaa
mov
pop
ds
data16
ljmp
cltd
pop
push
mov
jle
sbb
popa
adc
inc
mov
cli
and
daa
push
je
hlt
addl
cmc
cmp
lahf
cmc
add
daa
cmp
in
mov
xchg
movsb
jae
pop
inc
mov
loope
xor
es
mov
fsts
dec
sub
inc
add
jb
ss
xor
and
jg
es
add
enter
daa
ljmp
repnz
stc
aaa
subb
pop
add
xor
outsl
adc
scas
mov
pop
orl
into
pop
aaa
aaa
out
mov
fdiv
adc
jecxz
or
mov
dec
sub
inc
testl
lret
xlat
std
cmp
addr16
stc
add
movsb
iret
and
fisttps
test
or
xor
stc
lahf
xor
and
mov
push
flds
or
dec
push
sub
mov
test
cmp
cs
jg
push
mov
push
call
mov
push
xor
mov
rcrl
imul
insl
fimuls
sbb
rcl
in
mov
adc
mov
push
adc
push
cmp
pop
or
mov
sar
push
lahf
fmul
rclb
lret
in
sti
jle
xchg
cli
test
xchg
dec
sub
and
testb
xor
pop
repnz
loop
mov
aad
cmpb
pminsw
pop
ja
and
mov
movsl
cmp
sub
rolb
cmpsl
leave
in
js
sub
push
cltd
xchg
fsubs
mov
or
into
shrd
into
int3
cmpsb
adc
dec
ja
jae
repnz
in
outsb
xor
mov
mov
sub
cmp
mov
imul
xchg
xchg
fs
add
xlat
insl
int
bound
pop
xchg
cld
push
imul
mov
dec
testb
xor
adcl
adc
xor
jb
lcall
and
les
popf
push
mov
es
out
mov
pop
test
mov
in
andl
xchg
mov
vpackssdw
inc
cmp
and
gs
jge
fdivr
push
mov
mov
daa
daa
push
push
add
jns
xchg
or
js
nopl
fwait
jbe
and
mov
lock
and
and
push
xchg
outsl
iret
mov
cmpsb
add
jo
les
jecxz
adc
pop
pop
insl
lret
jnp
xor
xchg
and
mov
jge
cmc
xchg
jl
aad
xor
ja
imul
dec
push
mov
jbe
fdivrl
mov
adcb
adc
rorb
jb
add
cld
or
jle
or
cmc
popa
in
xchg
lods
adc
je
loop
xor
call
cmp
pcmpeqw
mov
pop
sbb
roll
rcrl
inc
pop
ss
test
mov
and
in
sarl
ds
mov
push
aaa
jg
or
mov
push
gs
or
xor
movsl
push
stc
mov
sub
jl
fwait
mov
xor
jb
cmp
xchg
adc
sub
movsl
inc
test
jae
in
add
jle
gs
push
fwait
inc
fldt
int3
lds
cmp
gs
xchg
in
notb
mov
aas
sub
sub
push
dec
nop
sarb
mov
mov
xchg
inc
add
outsb
insb
ljmp
ror
shlb
xchg
and
pop
and
notb
ret
jbe
lea
xchg
push
in
arpl
add
lahf
mov
sub
mull
lods
lcall
pop
mov
add
ret
jp
and
jp
js
jnp
push
jmp
jecxz
popa
inc
test
sub
rol
mov
mov
or
push
sahf
xchg
mov
loopne
rcrl
dec
cs
fcmovnu
xchg
add
xor
xchg
mov
pop
pop
js
jno
xchg
shrl
fnstenv
inc
and
cltd
mov
push
add
aam
movsl
orl
ja
add
popf
dec
pop
cmp
js
popa
sti
and
inc
and
mov
lods
mov
stos
xchg
or
js
dec
push
jmp
dec
sub
ss
or
inc
les
test
cmpl
xchg
movsb
sarl
fwait
push
inc
outsl
fstl
jno
mov
pop
cli
jne
push
inc
dec
lock
divb
adc
in
pusha
shlb
push
or
outsl
push
xchg
or
and
sbb
out
jmp
mov
lahf
xor
rcrb
push
push
mov
fstl
adc
nop
xchg
xchg
addr16
shlb
inc
inc
lods
shll
scas
arpl
xchg
testb
pop
dec
mov
out
xchg
mov
mov
mov
aaa
xchg
rcrb
xor
std
aad
adc
popf
rep
cmc
xor
adcb
xchg
inc
addr16
cmc
aad
xchg
into
or
push
dec
pop
adc
mov
jmp
lds
or
dec
cmp
mov
incl
push
jge
arpl
inc
push
ds
mov
loop
movsl
cmpsl
sbb
add
and
lcall
adc
inc
jge
rclb
jge
and
stos
jl
cltd
pop
lcall
xchg
je
ja
imul
sub
neg
lret
pushf
cmp
inc
mov
aad
mov
in
jl
xchg
jl
mov
xor
mov
shr
or
sbbl
sub
fwait
ds
pop
data16
pusha
jb
popf
rolb
mov
outsb
mov
aaa
filds
leave
sub
loop
mov
icebp
inc
xlat
jnp
rorb
mov
cld
test
cld
add
jl
pop
hlt
and
and
jecxz
std
jle
push
dec
xor
push
arpl
rcll
sub
xchg
test
ds
bound
mov
mov
std
es
cmp
mov
jns
sub
bnd
rcll
pop
mov
mov
pop
pop
inc
in
mov
dec
sarb
jg
aaa
inc
and
and
ret
cmp
cmc
sub
imul
sbb
lods
cmpsb
xchg
arpl
insl
pop
popf
mov
push
enter
dec
inc
cld
imul
push
adc
dec
inc
flds
loop
mov
mov
je
fsin
or
mov
push
out
mov
sbb
xor
dec
inc
int
mov
aad
test
imul
add
leave
mov
enter
sub
sub
data16
inc
dec
inc
add
dec
xchg
mov
hlt
das
popa
push
fwait
pusha
ljmp
pop
pop
lods
cmp
push
popa
add
push
cmp
aad
cmpsb
andb
mov
add
test
or
fcoml
sbb
test
sahf
lret
mov
imul
cmp
mov
push
xorb
nop
data16
mov
cmp
mull
add
lods
dec
mov
mov
inc
mov
sub
xchg
into
loope
add
lret
push
jl
fisttpl
cmc
rorb
dec
mov
and
pop
push
cmc
imulb
sub
cwtl
xchg
mov
and
roll
je
dec
outsb
dec
adc
imul
shll
xor
cltd
jle
cmpl
adc
add
xor
inc
gs
ss
fcmovne
in
mov
notb
sbbb
aaa
test
ss
movsl
mov
cmc
fsubs
movsb
std
fs
fcomp
mov
lahf
sti
cmp
sbb
add
insl
add
mov
cmc
mov
addl
lea
mov
push
cmp
movsb
sub
fisubl
in
iret
mov
cltd
push
cmpsl
sbb
fildll
xchg
push
fsubp
and
scas
and
sub
inc
jns
in
je
jl
push
and
jne
test
push
pop
jbe
les
dec
dec
mov
mov
outsb
add
in
sub
mov
scas
fsubrs
xor
push
pop
rcl
mov
stos
inc
add
mov
push
jne
and
add
adc
mov
stos
push
out
jb
jp
cmp
push
cmp
popf
add
jne
repz
notl
mulb
jbe
adc
pop
and
adc
das
pop
fnstenv
inc
pop
sbb
xchg
or
mov
add
sub
pop
popf
cmp
or
enter
sbb
nop
fisubs
daa
push
cwtl
out
push
cmpb
movsl
mov
pop
mov
shll
jecxz
das
mov
mov
push
popf
fsub
sbb
mov
xor
fwait
mov
inc
dec
xchg
add
js
pop
sbb
and
loop
fcmovne
ss
mulb
mov
sbb
sbb
and
adc
sbb
mov
stc
imul
add
pushf
adc
xchg
popa
push
push
pop
sub
dec
dec
in
mov
out
addr16
mov
aad
call
push
or
or
sti
mov
xor
test
and
add
repnz
fdivrp
cld
xchg
ret
mov
jmp
mov
scas
dec
clc
movsb
fdivl
popa
or
xchg
mov
adc
sbb
pop
pop
lret
fstl
dec
xchg
inc
pop
sub
or
movsl
ret
sub
xor
movsb
inc
fildl
xlat
das
icebp
pop
sbb
fs
lds
popa
sbb
sarl
dec
add
cmp
push
cmp
mov
pop
and
xor
inc
xor
sub
cmpsb
aaa
adc
loop
cmp
js
jmp
mov
shl
mov
xor
roll
aas
inc
xor
pop
and
jnp
mov
nop
andl
rorb
push
rcl
subl
stc
test
pop
xchg
mov
or
mov
xchg
cmpsb
and
xor
mov
dec
stos
lods
sub
add
imul
out
testb
imul
rcrl
mov
mov
and
scas
cld
test
jg
cmp
aam
test
mov
cmpsb
in
jno
outsl
push
jae
lahf
xor
cmp
push
iret
imul
sahf
dec
xor
lret
xor
pop
inc
out
dec
dec
adc
ret
mov
setae
pop
xor
aad
jne
enter
cmp
push
lcall
aam
lahf
push
mov
push
and
cmp
inc
mov
sbb
sub
aaa
mov
jp
dec
push
sbb
xchg
std
lahf
out
or
sbb
pushf
rcll
mov
lock
lds
pop
or
lea
fldcw
push
or
add
push
adc
mov
sbb
xchg
or
pushf
int3
lcall
pop
xlat
dec
popa
decl
pop
mov
sbb
data16
mov
testl
andb
xor
pop
cmp
aad
test
adc
jns
jne
or
dec
addr16
sub
lods
push
mov
outsb
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
stos
int3
lahf
aaa
xor
cmpsl
clc
fists
fstpl
sbb
jns
cwtl
frstor
jae
mov
mov
js
xchg
pop
pop
mov
xchg
xor
xor
push
out
mov
xor
push
ss
push
je
testl
mov
repnz
mov
bnd
dec
out
jb
inc
add
andb
add
es
add
nop
int3
leave
shrl
pop
jae
mov
xor
popf
int3
sti
inc
popa
adc
int
enter
push
sbb
sub
stos
aas
add
xchg
jae
mov
pop
in
pusha
rcrl
test
arpl
fstps
in
int3
and
lods
lcall
test
fbld
cmp
fcoms
xor
enter
dec
sub
arpl
jno
popa
lock
and
cs
or
xchg
and
add
mov
push
mov
ds
ret
nop
popa
jnp
out
arpl
or
xor
inc
adc
or
int
cmc
sbb
jmp
fidivrl
and
mov
dec
and
or
add
add
add
add
add
xchg
add
inc
xchg
popa
add
and
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
in
adc
add
mov
