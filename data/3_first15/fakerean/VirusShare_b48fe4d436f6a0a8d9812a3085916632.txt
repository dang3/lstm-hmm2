add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
sbb
inc
add
decl
decl
test
mov
xor
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
ja
inc
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
jbe
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
dec
add
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
or
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
mov
andl
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
jecxz
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
adc
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
scas
sbb
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
adc
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
pop
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
xchg
adc
sub
test
outsb
cmp
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
mov
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
pop
inc
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
push
inc
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
add
push
rcrb
xchg
repnz
mov
add
jle
add
mov
stos
jae
out
jno
add
push
add
loopne
jnp
add
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
ficoml
add
add
in
add
add
add
lock
add
pop
add
add
js
add
mov
nop
jbe
add
clc
mov
add
jns
popl
cmpsl
cmpsb
mov
add
into
add
add
lock
call
cmpsb
mov
lea
pop
popl
push
lea
push
push
push
push
push
push
push
call
add
add
add
lods
add
imul
push
js
popl
add
add
add
sti
add
mov
add
push
mov
roll
add
pop
shl
add
fldt
and
push
push
push
push
push
push
call
aam
lcall
jns
test
pusha
into
add
mov
leave
outsl
addr16
jge
fildll
add
mov
add
add
popl
lods
lock
bound
rcll
sahf
push
push
outsl
fildl
test
rolb
add
jnp
jno
jle
add
jmp
out
add
roll
add
repnz
movsl
lds
pop
push
push
push
push
push
push
push
push
call
add
scas
mov
rolb
add
in
lock
hlt
stc
pop
add
addb
xchg
add
add
ja
add
push
mov
jnp
add
add
fxch
add
hlt
add
add
mov
add
hlt
xchg
pusha
js
xchg
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
insb
add
movsb
add
scas
add
xchg
les
mov
add
add
add
pop
pop
add
xchg
jae
call
add
add
add
mov
aad
jmp
mov
mov
mov
add
mov
arpl
enter
leave
xchg
xchg
xchg
divb
data16
call
push
push
push
push
push
lea
push
push
push
push
call
decb
cld
loopne
mov
jns
out
push
fcomp
add
into
fs
ja
cmpsl
add
pop
lea
push
cmpsl
add
cmpsb
out
add
fstp
add
jge
insb
add
popf
lock
push
insb
add
add
jge
mov
mov
lahf
mov
add
add
out
xchg
add
add
push
add
add
mov
lea
pop
call
push
push
push
push
push
lea
push
lea
push
push
push
call
push
add
xchg
push
xchg
add
add
push
add
pusha
out
pop
lods
roll
add
out
mov
add
jb
test
jle
push
hlt
add
add
repnz
push
shr
push
add
xchg
je
add
fistpll
aam
bound
pop
call
jmp
push
push
lea
push
push
push
call
lret
scas
testb
add
mov
add
add
out
mul
add
xchg
leave
lret
lea
mov
aam
out
mov
add
call
flds
mov
add
aam
cld
add
add
add
add
add
icebp
mov
jnp
xlat
xchg
add
add
arpl
add
push
mov
lea
pop
ret
push
lea
push
lea
push
push
call
add
add
add
int
loope
leave
mov
xchg
scas
add
into
mov
int3
xchg
add
ja
add
sbb
lret
add
pop
add
add
add
cwtl
add
jae
mov
adcb
into
mov
pop
add
call
add
icebp
add
icebp
testb
mov
lea
pop
mov
push
push
push
push
push
push
call
add
movsb
xchg
add
add
add
mov
pusha
sub
add
add
test
cmpsl
add
into
ja
cltd
add
add
test
add
add
jno
jne
mov
out
out
add
rolb
fiaddl
mov
addr16
adc
mov
adcb
sbb
rolb
xchg
mov
arpl
pop
mov
push
push
push
push
call
imul
lea
pop
mov
add
add
add
pop
aad
xchg
test
add
aad
scas
fwait
loopne
add
add
lock
andb
add
jae
xchg
out
add
mov
lods
add
out
jae
mov
lea
pop
add
add
push
push
push
push
push
push
push
push
call
add
add
add
push
jae
mov
rorb
push
push
xchg
push
lahf
notb
stos
add
mov
add
jge
add
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
call
mov
add
push
xchg
stos
add
addr16
push
ja
je
hlt
add
incb
add
mov
add
decb
cli
add
sbb
pop
add
repz
push
push
push
shr
xor
push
sub
add
shr
shr
sub
dec
not
pop
shl
sub
pop
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
jno
in
mov
jmp
jns
rolb
add
add
mov
fiadds
xlat
mov
roll
ret
jmp
add
add
lock
nop
mov
mov
add
pop
pushl
call
push
push
lea
push
lea
push
push
lea
push
lea
push
call
jne
test
add
mov
mov
out
movsb
push
add
shr
push
xlat
lea
loopne
add
popa
add
ficoms
xchg
add
enter
add
add
add
test
fcmovb
add
cwtl
jnp
imul
sbb
mov
push
push
lea
push
push
push
push
call
test
test
push
add
gs
cwtl
fcom
icebp
jmp
out
add
add
aam
mov
add
cwtl
add
in
xchg
fcoml
sbb
inc
loopne
add
add
push
ja
push
lea
push
push
lea
push
call
add
add
jb
ficompl
add
mov
add
out
into
add
out
add
aad
jecxz
add
add
movsb
pusha
call
add
add
push
jmp
add
mov
test
add
fmulp
add
add
add
cltd
push
mov
add
lret
loop
add
pop
add
pop
lea
push
push
push
lea
push
push
call
scas
pushf
mov
pop
xchg
mov
add
popf
add
add
add
les
add
jne
ficompl
rolb
mov
add
mov
jae
leave
add
stos
popa
mov
pop
mov
push
mov
lea
pop
pushl
push
push
push
lea
push
call
sti
mov
add
mov
add
mov
add
add
add
stc
ret
mull
add
clc
jbe
mov
imul
mov
add
mov
add
add
testb
mov
sti
andl
aad
aam
bound
pop
pushl
push
push
push
push
push
push
push
push
call
mov
into
mov
les
add
cmc
push
bound
add
test
lods
add
std
arpl
ja
mov
fstpl
push
out
mov
popa
add
add
bound
mov
mov
sahf
push
mov
lea
pop
call
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
jno
leave
add
mov
leave
add
xchg
push
add
mov
push
js
out
movb
jp
fcmove
enter
icebp
jecxz
out
enter
add
mov
fsubl
std
add
mov
test
mov
add
add
add
out
add
cltd
add
pop
pushl
pushl
push
push
push
push
push
push
lea
push
call
xchg
pop
imul
mov
insb
lds
outsl
add
mov
mov
adcl
std
xchg
add
pop
push
enter
mov
scas
les
stc
push
add
test
add
addl
add
add
lea
pop
call
push
push
ror
shl
push
or
not
add
xor
ror
not
sub
rol
rol
pop
xor
pop
push
push
push
push
push
call
add
mov
jne
add
in
rolb
out
imul
add
add
js
out
imul
add
idivb
add
add
add
rcl
iret
add
imul
mov
lea
pop
pushl
push
lea
push
lea
push
push
push
push
call
add
aam
fcoml
fwait
notb
push
add
push
add
add
pop
les
add
jmp
jp
mov
xchg
add
out
fdivrs
mov
mov
mov
jnp
lcall
aam
bound
pop
call
push
push
lea
push
lea
push
call
add
mov
mov
add
jo
jmp
jle
add
mov
add
jl
add
jb
fwait
sti
outsl
push
add
add
outsl
add
add
test
pop
push
push
push
sub
push
push
pop
add
add
sub
dec
pop
shr
dec
pop
push
push
push
push
call
cli
pushf
add
cli
jecxz
addb
test
sti
add
movsb
je
add
scas
jp
xchg
add
sahf
insb
push
stos
add
add
sarb
cmc
pusha
add
notb
jno
push
add
add
xchg
add
add
add
push
add
lock
add
add
mov
lea
pop
push
push
push
lea
push
push
push
call
pop
lock
ffreep
add
cmpsb
mov
add
xchg
add
add
hlt
lret
add
jl
cld
mov
cmpsl
push
add
push
add
add
add
in
add
stc
mov
add
imul
lea
pop
push
call
push
push
push
push
call
std
mov
nop
add
cmpb
jge
into
pop
add
add
clc
add
add
shlb
jmpw
push
add
rol
mov
xchg
mov
add
cli
push
mov
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
lahf
pop
add
shlb
add
jns
add
outsl
add
xlat
stos
xchg
out
pop
int
cmpsl
add
pop
mov
mov
xlat
repnz
mov
in
jbe
aam
bound
push
push
push
push
push
push
push
push
lea
push
push
call
movsl
mov
jae
jne
ljmp
lea
clc
lds
loop
int3
add
xlat
out
nop
adcl
mov
jle
insb
lds
push
addb
hlt
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
add
push
add
add
mov
jp
push
leave
add
jae
push
add
in
pop
gs
rcrl
mov
add
lods
mov
add
fiaddl
push
addb
mov
add
in
add
pop
mov
add
pop
add
add
push
lea
push
call
jecxz
mov
shl
movsb
aam
push
mov
add
data16
call
add
push
loopne
add
add
add
jne
add
push
add
mov
pusha
popa
jbe
pop
into
mov
rol
popa
mov
add
pop
jle
add
in
add
push
aam
fmull
ret
mov
push
push
lea
push
lea
push
lea
push
call
mov
imul
out
mov
arpl
jle
add
push
loope
pop
mov
xchg
add
ret
pop
into
add
ljmp
mov
jecxz
add
add
std
mov
push
add
shr
incb
movb
add
pop
add
lret
pop
add
fmull
xor
push
push
push
push
push
push
call
stos
jno
add
push
int
outsl
jns
add
pop
rolb
mov
sahf
add
add
int3
add
add
add
add
add
pusha
mov
mov
jle
rolb
add
jb
add
outsl
add
pop
mov
xchg
jl
add
add
stos
test
stc
filds
jl
scas
push
add
mov
lea
pop
add
push
push
push
push
push
push
call
add
loopne
add
mov
add
fisttps
add
add
jae
add
add
add
add
xchg
add
test
faddl
js
add
add
jbe
add
add
add
add
add
mov
add
incb
add
push
add
xchg
add
arpl
add
add
incb
mov
lea
pop
mov
xor
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
push
icebp
add
lahf
add
add
ljmp
add
fsubrl
add
add
pop
xchg
add
add
xchg
mov
rolb
out
pop
loopne
mov
add
ljmp
add
add
add
push
lcall
lcall
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
jmp
push
ljmp
add
mov
ror
fildl
add
lret
int
xchg
add
pop
add
jl
add
ret
add
call
add
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
pop
icebp
or
std
add
add
or
ja
out
add
xchg
add
lcall
add
lock
fadds
aam
add
lret
xchg
add
push
imul
add
mov
add
loop
test
add
mov
add
fmull
dec
add
test
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
test
add
xchg
jmp
add
add
add
data16
mov
add
shll
add
pop
add
addb
enter
ret
add
push
add
mov
mov
mov
cli
mov
testb
cli
mov
lea
pop
xor
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
aam
push
in
mov
mov
jp
add
cmpsb
andb
mov
lret
mov
and
mov
cwtl
jno
pop
jecxz
cli
in
add
add
add
add
pushf
add
add
mov
add
cmpsl
test
add
fdivl
add
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
data16
mov
movsl
test
xchg
mov
loope
andb
add
add
hlt
add
xchg
addb
add
mov
add
xchg
mov
add
mov
add
adcb
call
push
addl
out
add
out
add
ljmp
push
push
lea
push
push
lea
push
push
push
call
stos
add
cld
add
gs
add
into
add
pop
add
mov
popl
mov
add
stos
add
lock
filds
add
add
mov
mov
add
sbb
inc
or
pop
jae
push
push
lea
push
push
call
xchg
test
add
jl
add
clc
jle
add
stos
fldl
lcall
mov
in
add
popf
movb
movsl
sarl
jge
shrb
nop
push
add
mov
add
add
add
lret
mov
add
orl
push
lea
push
lea
push
push
call
loope
xchg
fidivrl
add
mov
jp
jecxz
push
add
xchg
xchg
jmp
add
add
stos
add
into
lock
mov
add
incb
add
lock
cwtl
out
in
rorb
add
add
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
xchg
sti
add
mov
ret
fdivrs
add
ljmp
add
push
bound
imul
sub
mov
cmpsl
add
add
in
out
js
mov
movsl
add
in
out
arpl
imul
out
mov
add
jecxz
cld
lea
pop
sub
push
push
push
lea
push
lea
push
call
clc
mov
add
add
call
add
iret
mov
gs
test
imul
into
pop
mov
mov
test
push
add
jge
add
popf
sbb
ljmp
add
add
lea
pop
add
mov
xlat
sbb
add
gs
ficoms
add
xchg
mov
lea
pop
pop
push
lea
push
lea
push
call
xchg
add
mov
mov
add
fistl
add
mov
add
add
out
pop
mov
in
add
push
nop
fwait
movsl
popa
stos
mov
lea
pop
rep
push
push
push
push
lea
push
call
push
add
add
add
add
rolb
xchg
add
xchg
xchg
stos
add
aam
test
xchg
rcl
add
lods
stos
mov
add
adcb
lret
add
nop
lods
mov
flds
mov
movsb
mov
push
jno
add
fcmove
xchg
ljmp
addr16
add
mov
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
jmp
pop
add
mov
fwait
int3
pop
add
icebp
loop
add
lahf
mov
addr16
in
repnz
add
add
sahf
add
jnp
add
add
add
add
mov
add
push
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
call
push
bound
jno
lods
mov
add
add
add
add
je
xchg
add
pop
loop
mov
in
mov
xchg
mov
sti
add
stos
mov
addr16
mov
add
xchg
add
xchg
mov
lea
pop
add
push
push
push
push
push
push
lea
push
call
js
sbb
mov
add
jno
add
mov
add
lods
repnz
add
add
add
inc
test
add
jmp
add
xchg
add
movsl
add
pop
xchg
popl
mov
pop
jmp
add
add
mov
lea
pop
add
push
push
push
call
bound
add
xchg
add
add
test
mov
mov
lock
fsts
add
shl
call
xchg
roll
scas
mov
fsubrl
add
add
push
pop
shrl
add
add
pop
mov
add
add
jp
in
mov
lea
pop
add
push
lea
push
push
push
push
call
imul
mov
shlb
in
xchg
add
add
add
addr16
fidivl
add
jno
hlt
in
xchg
ret
add
lods
add
mov
mov
pop
xchg
int
cmpsb
ret
aam
mov
push
lods
add
jns
call
add
popl
mov
lea
pop
mov
push
push
push
push
lea
push
push
call
ror
cltd
mov
cli
out
mov
je
add
push
out
add
add
add
add
scas
int3
loop
add
mov
rclb
add
add
pop
sti
add
add
add
add
rcr
jne
pusha
cmc
add
les
add
push
lea
push
push
push
lea
push
call
mov
pop
into
add
mov
add
add
add
xchg
mov
arpl
mov
add
call
addl
add
add
add
int
push
loope
pusha
xchg
add
sti
fiadds
cld
add
cltd
mov
add
xchg
out
leave
call
pop
add
jge
pop
add
lea
add
movsb
mov
lea
pop
add
push
push
call
mov
add
push
mov
add
shrl
hlt
in
rolb
out
mov
repnz
add
scas
add
add
addb
add
pushf
sti
jns
std
addr16
mov
cmc
add
xacquire
lea
pop
mov
xor
push
push
call
cmc
mov
movsb
add
cmp
clc
add
push
add
add
outsl
mov
add
mov
rcl
arpl
add
andb
add
add
lea
pop
mov
push
push
push
lea
push
push
push
call
mov
les
xchg
cmc
add
add
roll
aam
aam
fcoml
add
add
jns
movsb
mov
add
add
mov
roll
shl
add
add
add
push
sar
add
lea
pop
xor
push
push
push
call
out
mov
mov
lock
loope
popf
xorl
add
add
pop
fs
pop
pop
les
add
ja
add
mov
addl
add
or
add
push
push
lea
push
push
push
call
int
scas
add
in
add
or
shl
mov
lds
lds
lds
js
ljmp
arpl
pop
int
jmp
add
shrl
mull
mov
lea
pop
add
add
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
mov
add
mov
lret
add
cld
add
imul
mov
iret
add
add
xchg
add
ljmp
add
add
lret
add
add
mov
push
pusha
sbb
fsubrs
cs
dec
dec
push
push
pop
add
ror
sub
add
ror
xor
lea
pop
sub
pop
push
push
push
push
push
push
push
push
call
cmc
pop
add
imul
gs
mov
fdivrp
mov
add
add
pusha
add
add
movsb
cld
add
mov
add
js
aad
iret
push
mov
add
jne
mov
in
andb
add
mov
add
add
mov
add
sahf
out
adcb
fdiv
enter
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
jbe
hlt
push
mov
add
add
add
add
mov
stc
fisttps
xchg
jne
add
jp
mov
stos
cltd
add
add
pop
call
push
push
push
lea
push
push
push
push
push
call
shll
fwait
nop
lahf
jns
mov
add
fildl
add
mov
call
add
add
movsb
jb
xlat
roll
enter
pushf
xchg
mov
add
add
ljmp
nop
add
add
add
mov
lea
pop
push
push
push
add
push
xor
add
sub
add
pop
add
shl
pop
push
sub
pop
push
push
push
lea
push
push
push
push
call
add
out
stos
fucom
add
pop
popa
pop
flds
mov
call
add
imul
add
lea
call
outsl
add
pop
add
vcvtps2dq
xchg
in
add
mov
lods
repnz
cld
hlt
pusha
mov
mov
lea
pop
call
mov
push
lea
pop
push
push
push
call
xchg
mov
out
add
add
add
movb
add
mov
mov
add
xchg
add
mov
add
jbe
movb
add
mov
add
mov
mov
mov
pop
jae
mov
jmp
add
repnz
mov
lea
pop
push
mov
push
lea
add
ror
pop
add
add
push
shl
add
pop
add
push
dec
add
pop
mov
xor
push
push
lea
push
call
lods
add
fisubl
rcll
insb
add
add
scas
add
add
add
fmul
add
mov
cmc
jns
ja
push
data16
mov
mov
outsl
push
mov
ja
mov
in
add
push
jb
mov
mov
je
clc
mov
lea
pop
add
push
push
lea
push
push
push
push
call
add
add
fldl
jge
iret
add
add
add
add
add
add
hlt
add
cltd
lret
int3
iret
hlt
add
adcl
sti
jno
add
mov
xchg
add
cwtl
add
add
add
js
add
int3
cld
sbbl
add
push
lret
mov
mov
lea
pop
mov
xor
push
add
lea
pop
add
pop
push
xor
xor
dec
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
je
add
fs
pop
jo
pop
push
mov
fwait
in
rolb
pushf
pop
int
add
add
mov
add
add
rorb
xchg
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
push
call
xchg
popf
hlt
add
movsb
incb
addb
aad
xchg
add
mov
stc
add
add
rcll
mov
mov
add
leave
popa
scas
stos
mov
test
lea
pop
add
push
push
push
call
jo
frstor
test
jbe
xchg
mov
push
xchg
add
pushf
add
pop
mov
mov
pop
int
mov
add
call
add
rolb
mov
add
pusha
faddl
push
mov
jmp
mov
mov
cmc
rcrb
jo
fbstp
mov
test
lcall
pop
rep
push
sub
inc
dec
sub
pop
mov
push
push
lea
push
push
lea
push
push
call
data16
add
jo
jae
push
add
add
add
shlb
repnz
lods
add
push
ret
popf
in
add
movsl
xchg
add
add
faddl
icebp
push
add
test
mov
lea
pop
xor
push
push
push
push
push
push
push
lea
push
call
add
scas
add
in
cli
add
add
add
icebp
lcall
mov
rolb
add
jmp
lcall
add
add
fsubrp
add
mov
scas
mov
pushf
add
add
xchg
adcl
fwait
add
scas
imul
and
les
inc
shr
pop
or
je
mov
push
push
push
lea
push
call
lock
loopne
add
stos
cli
fnstsw
je
add
add
add
out
test
into
jl
scas
add
add
incb
f2xm1
add
add
add
popf
lcall
hlt
lea
pop
xor
push
push
lea
push
push
push
lea
push
push
lea
push
call
push
add
mov
imull
jecxz
add
add
mov
add
xchg
add
xlat
les
lods
pop
lea
imul
mov
js
scas
icebp
add
add
je
in
loopne
mov
pusha
add
stc
push
lods
push
add
mov
lea
pop
add
push
xor
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
push
call
addl
mov
faddp
testl
add
fld
add
mov
add
push
add
mov
mov
add
add
pop
popa
add
loop
hlt
add
add
jmp
add
data16
adc
push
push
push
push
push
push
push
push
call
mov
mov
imul
add
jecxz
test
add
push
push
add
nop
add
cltd
add
mov
loop
stc
popf
add
add
enter
mov
add
int3
add
stos
add
xchg
xchg
rol
xlat
add
add
xchg
out
roll
mov
add
add
add
lods
rcrl
cli
pop
push
pop
jmp
fildl
add
add
mov
mov
lea
pop
add
push
lea
not
pop
add
push
push
push
push
call
add
mov
pop
add
popf
out
add
fists
add
loopne
pop
stos
add
add
rcll
add
test
mov
sarl
add
std
add
add
mov
test
aam
bound
pop
add
push
push
push
call
jbe
out
add
stos
add
add
cltd
mov
add
add
add
mov
push
ja
aam
mov
ljmp
sti
xchg
mov
add
ljmp
mov
add
add
arpl
add
add
jl
add
sbbb
rolb
push
add
mov
aam
bound
pop
mov
xor
push
xor
lea
pop
add
push
push
push
push
push
lea
push
push
push
call
mov
in
fidivrs
add
add
xchg
mov
iret
add
into
add
mov
add
pop
add
add
mov
cwtl
ja
push
addr16
lods
add
add
push
add
add
add
add
pop
add
add
in
push
rolb
add
add
clc
xchg
lds
xlat
add
add
add
add
call
and
rep
push
inc
sub
pop
mov
push
push
push
push
call
add
ror
add
pop
add
jbe
mov
add
testl
add
jbe
add
gs
add
into
mov
enter
add
hlt
jns
add
add
add
add
xchg
nop
mov
lret
repnz
lcall
jb
add
into
pushf
popa
add
mov
lea
pop
xor
push
push
push
push
push
push
push
push
lea
push
push
call
les
add
jmp
mov
add
jle
xchg
push
add
add
sahf
xchg
push
scas
dec
int3
xchg
jl
insb
add
mov
cwtl
lods
jle
pop
mov
in
add
add
int3
lea
pop
add
push
push
call
aad
mov
fisubrs
xchg
test
out
add
jp
fsubl
pusha
mov
add
add
rcrl
lahf
lods
mov
fldl
arpl
cmpsl
jne
fldl
add
mov
lea
pop
or
je
push
inc
dec
pop
mov
add
push
not
shr
pop
add
push
push
push
push
push
push
push
call
add
js
add
pop
scas
add
pop
rcrl
mov
pusha
mov
add
add
add
subb
add
add
push
scas
add
push
idiv
xchg
lds
mov
in
add
mov
lea
pop
rep
push
push
push
push
call
rcr
test
add
add
jns
xchg
add
add
mov
cmpsb
popf
aam
flds
addl
add
gs
add
add
mov
aam
bound
pop
pop
push
push
add
not
push
push
pop
add
ror
ror
sub
ror
pop
shr
inc
rol
pop
push
shr
inc
rol
add
pop
pop
push
push
lea
push
push
push
call
mov
add
mov
jge
jmp
xchg
je
lret
xchg
imul
jb
mov
add
popf
sahf
jns
jae
aam
stc
mov
shll
add
mov
loopne
add
mov
add
add
out
add
add
add
add
mov
lea
pop
mov
mov
push
lea
push
push
push
push
push
call
pop
cmpsl
jns
jnp
add
add
add
int3
cwtl
testb
add
jne
lcall
add
mov
aam
pop
jge
jmp
add
add
push
jecxz
in
out
fcmovu
add
xchg
add
imul
jge
imul
jmp
add
sbb
inc
and
push
lea
push
lea
push
push
push
push
push
push
call
fldl
add
loope
stc
add
adcl
fadds
mov
cmpsl
add
ficoml
add
add
mov
in
div
add
add
add
add
add
mov
cmpl
mov
add
aad
jns
cmc
add
push
add
mov
cltd
test
mov
lea
pop
jmp
push
rol
shl
add
pop
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
xchg
jecxz
add
add
mov
cmpsl
arpl
loope
add
ret
xchg
add
std
cmc
add
jnp
popl
add
test
bound
add
in
add
ficompl
add
add
mov
lahf
mov
cmpsl
add
testb
jl
push
cwtl
push
add
push
mov
lea
pop
mov
push
lea
pop
add
push
push
inc
rol
lea
dec
pop
push
push
shl
pop
push
push
push
push
push
push
push
call
add
rolb
arpl
add
add
add
add
fstl
lret
add
fwait
add
pop
mov
scas
mov
add
pop
add
xchg
add
add
add
stc
add
add
add
into
jno
add
iret
scas
les
pop
mov
mov
lea
pop
mov
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
push
call
add
add
mov
jmp
add
add
fwait
cmc
in
jne
imul
add
add
call
adc
loopne
leave
add
xchg
into
cld
add
mov
add
ljmp
add
add
leave
add
mov
lea
pop
pop
push
inc
pop
pop
pop
push
shr
not
pop
leave
push
lea
push
call
add
add
pop
push
xchg
mov
xchg
add
add
sahf
add
add
out
lret
jl
cmpsb
add
add
out
mov
data16
or
push
lea
pop
push
push
not
add
sub
pop
mov
push
push
push
push
push
push
call
push
mov
ret
pop
add
test
jmp
add
mov
cmpsb
loop
add
add
out
pushf
add
add
in
push
add
jns
add
mov
pop
jbe
sti
jl
data16
mov
add
lret
into
mov
add
add
add
fmull
clc
push
push
push
push
push
push
push
push
push
push
push
call
rolb
cmpsb
jb
mov
addl
jno
out
mov
stc
xchg
add
stc
push
pusha
add
pop
add
mov
add
add
add
out
add
push
jnp
xchg
add
mov
pop
hlt
mov
add
clc
std
hlt
cltd
lock
add
cmc
add
cld
lea
pop
push
push
push
ror
pop
push
push
shl
inc
pop
movl
push
rol
add
pop
addl
push
lea
pop
test
je
mov
push
lea
push
call
jbe
add
add
mov
cwtl
jne
add
jp
add
xor
add
add
add
push
sahf
add
into
add
nop
mov
mov
add
iret
frstor
nop
jnp
add
add
mov
faddl
add
add
popa
or
push
add
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
add
movsb
xorl
pop
insb
mov
add
add
add
cltd
pop
add
test
js
jp
add
out
add
test
add
add
add
push
js
js
add
jl
add
and
push
dec
pop
pop
push
push
lea
push
call
mov
mov
jmp
add
js
add
fwait
xchg
jnp
add
sar
add
add
add
pop
add
fwait
add
lock
lahf
add
subb
add
add
add
push
add
gs
imul
push
add
add
jmp
movb
add
cltd
jne
add
mov
popa
or
leave
push
dec
inc
pop
ret
push
lea
push
push
push
push
push
push
call
jl
cmpsl
add
ficoml
in
mov
mov
loope
gs
lods
je
add
cmp
add
lds
add
mov
jno
insb
loopne
add
roll
loopne
add
add
add
jo
add
xchg
add
add
mov
mov
add
add
cld
mov
sbb
push
push
push
lea
push
lea
push
lea
push
push
call
nop
mov
add
add
int3
mov
in
add
add
push
pop
notb
clc
xchg
add
add
add
add
mov
add
add
lods
outsl
ret
pop
mov
add
aad
clc
call
rolb
mov
lea
pop
mov
add
push
lea
inc
inc
not
pop
push
push
add
inc
rol
not
pop
push
push
lea
push
call
gs
hlt
cmpsb
add
xchg
add
scas
xchg
mov
add
add
add
add
lds
pop
fildl
push
roll
mov
fildl
mov
push
add
rolb
add
insb
pop
js
fmull
push
inc
pop
push
push
push
lea
push
call
mov
jl
pop
data16
add
add
jp
jno
scas
fsub
add
pusha
add
add
add
push
scas
addr16
jmp
add
popf
mov
in
fmul
mov
mov
jp
jnp
add
movsl
jnp
movl
xchg
add
mov
add
int
fstp
rorb
testl
push
xor
dec
pop
addl
push
push
lea
sub
pop
call
push
push
lea
push
push
call
mov
add
mov
add
out
fwait
push
add
pop
jmp
push
imul
mov
fildll
stos
add
mov
add
add
xchg
jmp
js
add
in
mov
jbe
add
xchg
mov
ljmp
add
sti
pop
xchg
in
add
into
lea
fsubl
addb
add
mov
lea
pop
mov
push
add
add
shr
pop
pushl
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
cli
push
add
add
ret
mov
cld
add
shlb
pop
add
aam
pusha
add
ficompl
add
add
add
xchg
add
add
add
pop
pop
pop
add
lea
fcompl
add
popf
lret
out
xchg
add
mov
gs
lea
pop
push
call
push
lea
xor
rol
shl
pop
cmpl
jne
push
push
push
push
push
lea
push
lea
push
push
push
push
call
sahf
andl
mov
add
add
add
add
lea
fcoml
add
mov
aad
add
add
add
xchg
push
add
mov
add
add
add
lea
pop
pop
push
rol
pop
pop
push
lea
push
push
push
lea
push
call
mov
mov
add
aad
add
mov
addr16
mov
add
jae
jecxz
add
fsub
lock
push
insb
add
jl
mov
add
add
add
lods
cmc
rolb
mov
add
add
add
int3
add
pop
pop
push
rol
dec
shr
pop
pop
push
shr
pop
leave
push
not
pop
ret
push
lea
push
push
lea
push
push
lea
push
push
push
call
imul
int3
xchg
jp
xchg
mov
mov
mov
out
testl
stc
jo
pushf
fidivrl
mov
divb
lahf
shr
add
pop
into
test
ret
pop
shll
add
add
popa
mov
jmp
fwait
imul
jge
lds
xchg
jp
aam
bound
pop
push
push
xor
pop
mov
push
push
push
lea
push
lea
push
push
call
lock
add
mov
add
add
mov
out
add
add
lods
mov
pop
add
mov
jmp
mov
cltd
cmpsb
sahf
addb
mov
mov
lea
pop
add
push
not
rol
inc
pop
push
push
dec
lea
pop
push
push
push
rol
shl
lea
pop
push
push
ror
inc
pop
movl
push
push
lea
push
push
lea
push
call
lods
testl
jne
add
rclb
add
test
add
bound
loopne
out
and
mov
out
ret
test
add
add
jmp
addb
add
pop
jne
add
add
rolb
mov
mov
lret
mov
fcompl
push
push
pop
stos
fcmovbe
in
hlt
mov
lea
pop
push
call
push
sub
ror
pop
push
push
xor
add
lea
ror
pop
call
push
push
lea
push
push
push
push
push
push
call
ja
in
cld
add
mov
nop
test
shrb
add
jecxz
ljmp
fiaddl
stc
add
push
add
add
lret
imul
add
in
mov
lea
pop
subl
push
ror
pop
cmpl
jne
pop
push
push
push
push
push
push
push
push
call
lret
rclb
add
push
add
sarl
enter
popf
jle
jl
add
mov
xchg
add
xchg
nop
mov
add
push
mov
lea
fwait
xchg
rcr
add
int3
lea
pop
pop
push
add
pop
pop
push
lea
not
sub
pop
pop
push
pop
leave
ret
push
sub
pop
push
push
push
call
push
add
aam
add
add
aad
mov
imul
pop
in
out
add
mov
loop
add
add
lds
add
add
mov
add
add
imul
not
pop
add
push
push
push
lea
push
push
push
push
push
call
test
fwait
add
data16
fimuls
add
add
test
shll
jge
mov
add
add
int3
clc
add
call
add
lahf
add
pop
jmp
add
add
add
mov
push
mov
test
addr16
push
push
push
push
lea
push
call
jne
mov
rcr
add
ja
stos
add
fildl
sti
rcr
mov
lock
add
add
lahf
add
lret
mov
rorl
jmp
add
add
hlt
add
pop
push
mov
push
shl
shl
rol
pop
lea
push
push
lea
push
push
push
lea
push
call
mov
add
cmpsb
fistl
lods
add
int3
add
int
in
jmp
push
in
add
fldenv
fcomip
mov
add
push
push
jp
jo
mov
mov
add
mov
shl
pushf
je
add
mov
lea
pop
sub
push
lea
push
push
push
call
add
add
push
jle
mov
out
add
add
add
fs
pop
add
cmpsb
mov
add
add
test
cld
repnz
add
fmull
add
call
rorl
add
push
ror
inc
pop
mov
push
dec
pop
mov
push
add
rol
pop
add
add
push
push
lea
push
push
push
call
out
ja
cmp
loope
in
mov
jae
loopne
sti
add
add
add
add
lods
add
add
add
add
clc
lds
add
add
cmc
cmpsl
roll
add
shlb
lret
add
push
test
add
xchg
pushf
lcall
add
ja
fisubrs
push
mov
lea
pop
mov
push
shr
add
pop
mov
cmp
jne
push
add
pop
cmp
jne
push
push
lea
push
push
lea
push
lea
push
call
stos
add
cwtl
mov
mov
jne
idivb
stos
jae
enter
fdivrl
mov
out
mov
add
mov
jl
add
lds
add
lds
rcrl
add
roll
rclb
fwait
stos
repnz
add
in
addb
add
sbb
inc
adc
sub
pop
movl
push
push
push
lea
push
call
add
add
ret
jae
data16
mov
add
add
add
mov
aad
push
add
lahf
xchg
mov
mov
fnstcw
iret
add
add
sub
add
in
movl
lock
mov
xchg
mov
into
add
loope
add
push
iret
pushf
mov
addr16
lea
pop
jmp
push
push
lea
push
lea
push
push
push
push
push
push
call
les
mov
add
cltd
outsl
cmp
sti
add
pop
add
lret
add
shr
add
add
cltd
fiaddl
push
imul
push
shll
call
add
add
fldt
test
add
jnp
mov
lea
pop
mov
mov
push
push
call
call
jbe
arpl
imul
mov
out
cld
add
add
mov
loopne
add
jmp
cli
add
add
filds
pusha
ret
js
mov
add
or
ljmp
xchg
add
add
loop
ror
pop
movl
jmp
push
push
push
lea
push
lea
push
lea
push
push
call
sti
addr16
add
ror
add
pop
add
jno
add
lds
mov
add
int
push
add
mov
add
add
add
int
addl
jl
cltd
push
add
faddl
add
add
push
xchg
add
jp
push
movb
pop
mov
lea
pop
mov
push
shr
add
pop
mov
push
ror
add
sub
lea
pop
cmp
jne
mov
push
push
push
push
push
lea
push
push
push
push
call
mov
jmp
push
add
mov
in
les
add
in
clc
add
jmp
add
stos
add
add
fucomi
push
add
filds
add
popf
fildl
add
movsl
cltd
ljmp
add
stos
add
insb
test
add
pop
loop
mov
std
lea
test
and
movl
jmp
push
lea
push
push
push
lea
push
call
cwtl
add
add
pop
add
gs
add
loopne
arpl
loope
add
add
pop
add
cmpsl
add
add
add
add
xchg
add
add
add
js
cmpsl
mov
adc
mov
push
push
call
movl
add
add
add
jecxz
pop
mov
test
std
addl
cld
mov
xchg
rclb
mov
imul
add
xchg
push
cwtl
scas
aad
incb
add
add
mov
lea
jge
add
push
add
iret
ljmp
add
mov
fmull
cmpl
jne
mov
push
sub
ror
pop
movl
push
push
push
push
lea
push
lea
push
call
add
add
stos
cmpsl
add
add
add
add
add
lds
cld
cwtl
jnp
mov
add
clc
pop
add
add
bound
testl
roll
out
mov
add
mov
pop
mov
cmc
mov
cmc
jae
pushf
subl
add
jae
add
add
mov
lea
pop
jmp
pushl
push
push
call
jbe
mov
push
add
add
push
lahf
push
add
popf
imull
mov
jge
fildl
add
cli
push
add
xchg
add
outsl
andl
push
cmpsl
add
push
add
iret
cli
jbe
add
mov
add
lea
pop
pop
mov
push
push
push
push
push
call
add
mov
jbe
cmc
add
add
push
add
jns
roll
add
add
pop
add
addb
in
add
rorb
add
pusha
adc
mov
push
push
push
push
push
lea
push
lea
push
push
call
xchg
les
add
add
add
incb
fldl
push
add
repnz
add
mov
xchg
subl
add
jle
xlat
add
test
add
add
add
xchg
add
imul
imul
add
call
mov
lea
pop
mov
push
push
rol
push
and
add
inc
sub
sub
add
lea
not
pop
not
pop
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
add
orb
fs
stos
fldl
jnp
add
add
add
rcl
add
lds
pop
hlt
enter
loope
mov
rcll
pop
push
mov
popl
mov
cltd
push
add
int
xchg
imul
roll
mov
pop
ja
mov
and
push
push
sub
ror
add
pop
call
push
push
lea
push
push
call
ja
popf
add
push
add
repnz
mov
rcll
add
xchg
push
add
add
aam
pop
fsts
aad
mov
add
mov
mov
add
add
pusha
pop
test
in
add
jl
add
push
int
push
call
lea
pop
cmpl
je
push
push
inc
dec
push
push
pop
add
dec
add
xor
sub
sub
lea
pop
dec
shl
dec
xor
pop
push
not
shl
pop
push
push
lea
xor
pop
call
cmpl
je
push
push
push
xor
add
add
shr
dec
shl
sub
sub
shl
pop
dec
lea
dec
not
pop
push
shl
dec
shl
pop
push
call
push
lea
push
push
push
push
lea
push
lea
push
call
shrb
fidivrl
add
push
addb
jno
into
popl
jae
add
add
add
loope
add
mov
loope
mov
jb
mov
xchg
enter
mov
add
in
int
add
lea
add
fldt
add
in
dec
cwtl
mov
add
mov
add
mov
lea
pop
cmpl
je
push
push
sub
push
and
add
dec
sub
lea
ror
add
pop
not
shl
add
pop
push
push
push
push
push
call
in
js
add
xchg
push
mov
imul
popa
insb
add
add
fadds
add
and
add
add
clc
cld
shll
sahf
jne
icebp
add
add
add
pop
add
add
fdivs
loope
cli
add
add
xchg
aam
mov
addr16
push
push
push
push
push
lea
push
call
push
std
jns
add
jbe
mov
pusha
add
pop
add
in
hlt
je
stc
xchg
add
add
add
fsubrs
nop
mov
jne
add
add
add
add
push
add
mov
push
add
mov
add
add
add
add
pop
pop
add
xchg
arpl
rcrl
mov
add
pop
call
push
push
push
push
call
roll
mov
add
add
mov
add
lea
mov
add
loopne
add
add
mov
add
lea
mov
pop
mov
out
add
push
rclb
add
mov
add
in
push
mov
out
add
int3
lea
pop
cmpl
je
push
push
lea
push
or
inc
add
sub
shr
pop
add
rol
dec
pop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
movb
cwtl
add
push
add
pop
mov
scas
ficompl
add
jmp
cmpsl
push
mov
xchg
jae
add
ja
add
mov
scas
stos
jmp
add
xchg
jle
add
mov
add
sub
call
push
lea
push
push
call
mov
add
add
add
stos
mov
pop
subb
push
scas
push
xchg
pop
ja
lds
mov
js
test
rcrl
push
push
insb
pop
mov
xchg
pusha
negb
push
add
push
mov
push
jno
jmp
jmp
xchg
test
hlt
lea
pop
cmpl
je
push
push
sub
push
or
inc
add
dec
xor
sub
ror
rol
dec
pop
not
pop
push
push
push
push
lea
push
push
call
add
rcll
add
addr16
fucomp
add
xchg
add
mov
mov
add
add
xchg
add
bound
mov
jge
cld
hlt
add
int
push
jle
add
mov
lea
pop
push
push
push
push
push
call
xchg
add
push
mov
mov
push
push
add
test
add
imul
jle
add
add
add
mov
add
sar
hlt
lea
pop
call
cmpl
je
push
push
add
push
sub
add
add
dec
inc
sub
shl
sub
pop
sub
sub
ror
shr
pop
push
shl
rol
pop
push
push
push
call
add
roll
loope
xchg
pop
add
movl
je
add
add
add
xchg
add
add
call
cli
add
mov
add
add
add
add
add
cmpl
jmp
outsl
les
push
push
mov
add
add
pop
add
in
iret
add
mov
jno
add
lea
pop
call
push
dec
inc
dec
pop
cmpl
je
push
push
add
push
xor
add
shl
sub
sub
dec
pop
sub
shl
pop
push
shr
pop
push
call
push
lea
push
push
push
lea
push
call
gs
popa
add
cmpsb
stc
fs
add
add
add
mov
add
fnstsw
add
imul
add
out
faddl
pop
mov
add
ret
jno
mov
out
mov
scas
push
xchg
mov
mov
ror
lods
enter
mov
clc
jp
iret
add
pop
cmpl
je
push
push
add
lea
push
and
add
add
sub
shl
sub
shl
pop
lea
rol
pop
push
dec
pop
push
push
shr
lea
rol
add
pop
call
cmpl
je
push
push
xor
push
sub
add
sub
sub
pop
dec
pop
push
sub
add
lea
pop
push
push
sub
shr
pop
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
fldl
shrl
hlt
jl
aam
mov
add
add
pop
push
out
mov
add
int3
mov
shll
mov
add
outsl
add
mov
add
rcrl
loop
add
stc
jnp
add
add
leave
cmp
mov
lea
pop
cmpl
je
push
push
lea
push
push
pop
add
sub
shl
sub
pop
sub
lea
not
shl
pop
push
inc
dec
xor
pop
push
push
rol
dec
shr
pop
call
push
push
lea
push
push
push
push
push
push
push
call
clc
add
stc
add
jnp
enter
js
ja
xlat
add
push
add
nop
jle
jo
add
stc
in
out
fbld
enter
pop
int3
add
rolb
add
mov
lea
pop
cmpl
je
push
push
push
sub
add
ror
xor
sub
rol
inc
pop
not
xor
xor
pop
push
add
sub
pop
push
push
dec
pop
call
push
push
lea
push
push
push
lea
push
push
call
mov
testb
in
xchg
mov
imul
add
ja
mov
fcomi
add
add
add
add
cmpl
test
pop
pop
fmul
popa
push
add
add
fdiv
bnd
push
mov
lea
pop
cmpl
je
push
push
not
push
or
not
add
sub
not
dec
sub
ror
sub
ror
pop
ror
shl
pop
push
lea
push
push
lea
push
push
push
call
fildl
jecxz
test
in
into
add
add
sti
fsubl
std
bound
aad
roll
xchg
add
cltd
ficoms
mov
add
push
leave
lods
arpl
mov
jle
add
fistpll
add
add
lret
jecxz
mov
pusha
sbb
push
push
call
jne
idivl
add
je
add
cmpsl
jo
stos
add
jge
mov
add
imul
jge
fs
add
add
jne
add
stos
add
adcb
push
fbld
lcall
mov
lea
pop
call
push
shl
pop
cmpl
jne
mov
push
sub
shr
pop
movl
push
add
add
sub
pop
jmp
push
add
ror
pop
xor
push
shr
lea
add
pop
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
xlat
fldl
mov
mov
add
add
add
add
push
add
add
add
add
mov
mov
lods
scas
ljmp
stc
test
gs
add
test
add
add
ja
in
jge
add
push
mov
push
arpl
pop
push
push
push
lea
push
call
addl
add
push
add
lahf
push
js
mov
cwtl
int3
mov
jnp
add
mov
xchg
add
add
add
lret
add
mov
add
stc
out
stos
ja
add
add
jb
add
arpl
cwtl
mov
movsl
mov
add
jmp
push
test
add
popa
adc
push
push
push
push
push
call
cmc
jmp
hlt
cmc
std
mov
add
insb
repnz
jae
add
ret
lods
push
in
out
push
add
add
jmp
mov
add
lret
add
in
add
mov
test
cwtl
enter
add
add
xchg
outsl
hlt
mov
lea
pop
pop
push
sub
pop
leave
push
ror
inc
shl
pop
ret
push
push
push
call
push
call
add
add
roll
xchg
loopne
in
add
add
negb
add
test
add
lea
mov
add
add
sti
sahf
add
lahf
xchg
add
mov
add
int3
add
rolb
lods
fs
int
mov
pusha
ljmp
xchg
add
xlat
add
cli
data16
hlt
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
addb
nop
out
add
mov
add
rcr
bound
cmpsb
lea
mov
mov
pop
lret
xchg
add
lock
pop
rcll
mov
add
pop
pop
add
lret
arpl
add
add
add
cmc
add
add
add
test
jo
push
js
out
mov
add
lods
mov
pusha
and
add
push
push
push
call
mov
orb
cmpb
add
mov
aad
imul
pusha
xchg
gs
add
add
outsl
je
nop
cltd
add
add
mov
lea
pop
cmpl
jne
push
push
shl
ror
push
sub
add
dec
xor
sub
sub
add
pop
ror
pop
push
push
lea
push
push
push
call
xchg
insb
add
add
adc
mov
add
jp
bound
pop
popa
add
movsl
pusha
add
cmpsl
add
fdivrs
xchg
mov
add
add
pop
push
add
xchg
mov
add
lea
cmpsb
add
jbe
add
lea
pop
pushl
push
push
call
push
movsb
out
add
xchg
push
add
cmpsb
out
lahf
add
nop
pop
mov
into
add
lret
fcmovne
mov
xchg
add
addl
jle
add
add
xlat
mov
add
add
add
add
jno
lods
add
push
xchg
loope
into
add
out
movsb
mov
lcall
outsl
divl
pop
add
cld
lea
pop
call
push
lea
push
push
push
push
call
add
lcall
fidivs
fldl
jno
test
mov
rol
push
add
jnp
popf
add
movsl
pusha
orb
lock
loop
add
jge
xchg
add
in
add
add
xchg
add
add
ljmp
arpl
add
add
add
pop
push
push
push
push
push
push
lea
push
push
push
call
xchg
mov
loop
add
decb
add
std
in
test
mov
roll
xchg
add
add
add
js
sahf
aam
flds
fstpl
jle
add
mov
push
jb
stos
push
push
icebp
jmp
add
add
jge
jbe
jae
add
add
lret
xchg
add
out
sahf
lods
movsb
jecxz
rorl
pop
call
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
lds
jno
cli
out
add
clc
mov
icebp
lret
int
add
in
in
xchg
add
leave
in
add
int3
jle
xchg
add
mov
arpl
add
sbbl
lods
add
add
add
xchg
push
loopne
lret
in
pusha
add
mov
xchg
add
jp
add
xchg
add
xchg
add
mov
aam
out
jmp
les
fsubs
add
ljmp
je
push
lea
push
push
push
push
lea
push
push
push
call
add
xlat
clc
into
add
fldl
cltd
leave
add
add
gs
data16
mov
pop
fcoms
add
lahf
mov
int3
lds
add
filds
add
fsub
fldcw
add
cmpsl
add
jmp
test
add
mov
add
push
out
rorb
pop
cmpl
jne
leave
push
lea
push
push
push
call
arpl
xchg
insb
or
in
mov
add
jno
push
add
mov
add
loopne
cwtl
xchg
rcll
add
push
add
fldl
jmp
add
out
pusha
call
mov
add
add
test
add
add
add
addl
add
imul
add
incb
or
adc
les
push
ror
shl
ror
pop
pop
pop
push
push
push
call
xchg
je
std
lret
push
int3
lret
add
lods
push
ljmp
add
lock
mov
lock
add
add
mov
test
add
add
push
hlt
add
lea
pop
pop
push
sub
pop
pop
push
push
lea
push
push
call
add
xchg
xchg
fldenv
jmp
fisubrs
pop
mov
jnp
jbe
push
mov
mov
shrl
jp
jp
call
xlat
addb
add
add
cld
scas
cmc
cltd
into
shl
add
in
out
pushf
add
add
pop
leave
push
lea
sub
pop
add
ret
push
push
push
lea
push
push
push
push
call
add
add
scas
fildl
iret
cmpsb
add
add
add
add
add
clc
into
xchg
stc
mov
ja
push
add
lcall
add
push
add
add
movsl
add
fildll
mov
add
mov
add
add
sbb
jmp
push
not
xor
not
pop
cmpl
jne
push
push
add
sub
not
add
push
and
add
sub
sub
add
sub
ror
inc
ror
pop
rol
add
pop
push
push
lea
push
push
lea
push
push
call
out
cltd
add
mov
les
ja
je
les
iret
imul
mov
test
std
scas
add
data16
push
test
in
jp
add
enter
out
add
add
loope
mov
clc
lock
add
add
add
cmpsl
add
xchg
test
add
mov
mov
add
push
stos
out
add
lea
pop
pushl
push
lea
push
call
add
xchg
xchg
add
add
insb
mov
xchg
add
leave
add
lock
add
push
test
fiaddl
add
mov
sti
xchg
std
jge
pop
pop
mov
scas
aad
add
xchg
gs
mov
add
add
orb
call
push
push
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
jge
mov
popf
add
xchg
add
push
xchg
add
jle
push
cmc
cltd
scas
cmc
pop
xchg
add
add
ficompl
add
fiaddl
mov
lret
push
add
enter
mov
xchg
pusha
add
mov
lea
pop
jmp
push
push
push
push
lea
push
call
bound
int
add
push
jae
add
addb
add
add
cmpsl
shr
jge
add
add
fldz
add
add
js
add
fiadds
shll
add
scas
add
add
xlat
pop
fwait
mov
addb
pop
add
idivl
sar
fsubrp
lods
movsb
add
push
add
fmull
jge
add
test
and
add
push
rol
rol
dec
pop
mov
push
lea
push
push
call
jno
jle
ja
add
add
lcall
std
cmc
pop
add
add
jecxz
xchg
cmc
imul
rcrb
mov
test
add
add
into
add
add
pop
add
add
mov
lea
pop
push
push
push
rol
not
add
push
xor
add
add
sub
lea
add
pop
not
pop
push
sub
shl
pop
pushl
push
inc
shr
add
shr
pop
call
push
push
ror
ror
rol
add
push
sub
add
sub
shl
sub
shl
pop
inc
rol
pop
push
lea
push
lea
push
push
push
call
push
in
add
cli
add
pop
push
mov
imul
lret
test
mov
sahf
lds
xchg
add
cmpsl
add
mov
jl
jbe
add
arpl
push
jne
fucomip
pop
add
loope
jecxz
fadds
mov
addr16
loope
icebp
push
jne
std
mov
mov
lea
pop
pushl
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
jno
imul
add
jecxz
pop
testl
jae
jl
fcomps
loopne
jle
mov
add
add
add
lret
mov
push
outsl
add
mov
mov
add
loope
aad
xlat
add
mov
lahf
rcll
sbb
add
lret
jmp
add
add
mov
add
add
mov
push
fsubrs
mov
lea
pop
call
push
push
push
push
push
lea
push
push
call
shl
pop
lods
pop
add
mov
push
mov
add
add
add
xchg
add
in
nop
bound
pop
test
cmc
stos
cltd
mov
fcomps
add
mov
in
cmpsl
push
mov
jge
add
pop
out
add
jmp
mov
imul
jp
rcll
add
mov
add
add
ljmp
fmull
shrb
or
and
add
inc
sub
shl
dec
rol
pop
lea
pop
push
push
push
push
push
lea
push
push
push
push
call
add
add
lea
int3
mov
icebp
jb
add
xchg
aad
push
add
add
jle
jmp
imul
int3
jp
mov
add
add
enter
add
add
into
into
add
rcr
mov
lds
add
scas
add
add
add
add
lea
pop
pushl
push
shr
shl
rol
pop
call
push
push
lea
push
call
add
lahf
lods
fcomp
xchg
loope
roll
addb
mov
jmp
into
scas
les
add
mov
mov
add
mov
enter
fildl
ja
add
movsb
add
add
les
shrb
sub
or
push
and
add
add
add
add
sub
pop
xor
shl
pop
push
sub
dec
pop
pushl
push
push
call
pop
bound
pop
rolb
add
add
add
std
clc
add
enter
push
add
popf
mov
mov
pushf
xchg
cld
cmc
push
in
mov
cmpsl
in
add
ret
add
add
flds
in
add
fs
mov
lea
pop
call
push
lea
push
push
push
push
lea
push
push
call
insb
add
mov
add
jnp
pop
add
add
mov
mov
into
in
add
cmc
mov
add
cmpsb
cwtl
addl
pop
xchg
push
add
push
hlt
add
add
test
add
out
les
shrb
js
lods
push
xor
push
or
inc
add
dec
sub
lea
sub
inc
pop
sub
pop
push
push
call
std
add
addb
lret
mov
int
sarl
add
rolb
xchg
mov
outsl
jge
push
mov
xchg
xchg
popa
pop
add
add
pop
stos
lret
out
sti
popf
mov
int3
lea
pop
pushl
push
push
push
push
push
push
push
push
call
gs
pop
add
rcl
add
cld
lods
add
lea
add
stos
lahf
add
add
lock
mov
pop
mov
add
add
add
jo
add
pop
call
push
push
lea
push
push
lea
push
push
call
sti
push
add
add
scas
insb
xchg
add
add
add
add
jecxz
cld
pop
add
pop
add
add
aad
jp
mov
pop
add
add
mov
int
add
clc
mov
add
loop
mov
arpl
addr16
rcl
add
add
add
pop
call
push
push
dec
push
and
add
inc
sub
sub
dec
pop
rol
ror
pop
push
push
lea
push
push
push
lea
push
lea
push
call
pop
pop
mov
imul
jne
xchg
frstpm(287
ljmp
jle
add
cld
in
add
loope
int3
mov
fldenv
repnz
xchg
jl
movsb
add
jl
popf
mov
xabort
mov
leave
fwait
stos
in
add
add
hlt
add
push
jno
cld
imul
add
scas
fildl
add
add
add
sbb
pushl
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
xchg
add
int3
aam
add
test
jo
outsl
add
pop
lahf
add
add
add
push
mov
jo
add
push
add
cmc
pop
jp
add
xchg
jecxz
pop
mov
mov
add
les
add
jb
movl
popf
add
add
filds
push
pop
mov
out
mov
jnp
mov
add
fistps
lea
pop
call
push
push
dec
sub
sub
sub
push
or
inc
add
rol
shr
inc
sub
rol
shr
rol
pop
ror
pop
push
lea
push
push
lea
push
push
push
call
std
enter
scas
lret
add
jl
add
lods
add
arpl
loope
add
test
add
cmpsl
jne
lcall
jge
pop
add
jp
mov
mov
jno
cwtl
cwtl
add
add
pop
sbbl
fwait
hlt
push
add
add
int
xchg
add
mov
add
add
add
add
mov
testb
add
pop
pushl
push
push
push
lea
push
push
call
add
add
mov
push
add
xchg
add
out
add
add
mov
pusha
nop
outsl
pop
add
push
sahf
add
pop
icebp
xchg
add
add
jmp
add
fnstenv
add
call
lea
mov
lea
pop
call
call
push
sub
pop
call
lea
push
push
not
lea
push
or
not
add
add
sub
xor
rol
sub
add
shr
pop
not
pop
push
shl
dec
pop
pushl
push
push
push
push
push
push
call
mov
add
sahf
add
frstor
add
fisubrs
mov
fucomp
repnz
out
mov
pusha
mov
add
add
mov
add
out
leave
mov
movb
aam
bound
pop
call
push
push
push
push
push
push
push
call
jmp
push
xchg
push
xchg
add
pushf
mov
add
push
mov
out
ffreep
in
add
cld
add
aad
add
xlat
add
insb
jmp
add
add
add
jno
cmpsl
add
add
add
into
add
add
aam
add
bound
scas
mov
stc
mov
les
mov
lea
pop
push
push
shl
inc
pop
call
push
push
lea
add
push
or
not
add
ror
sub
rol
sub
xor
pop
not
rol
ror
pop
push
xor
pop
pushl
call
push
lea
push
push
push
push
push
push
push
call
cmpsl
lods
add
add
add
add
cwtl
test
push
add
jmp
sahf
addl
add
in
xor
add
jecxz
out
std
add
stos
add
add
push
add
add
add
loope
add
stc
mov
lea
pop
call
push
push
push
push
lea
push
push
push
push
push
lea
push
call
pop
jl
loop
shlb
add
test
add
std
xchg
jge
test
add
add
stos
mov
gs
fiaddl
jns
mov
bound
call
add
add
add
jecxz
fadds
loope
add
add
xchg
pop
aam
add
imul
add
add
ffreep
mov
lea
pop
mov
push
push
lea
lea
push
or
not
add
sub
sub
pop
xor
xor
add
pop
push
dec
ror
add
pop
pushl
call
push
push
push
lea
push
push
call
add
xchg
add
add
jo
lea
add
fldl
nop
add
add
push
add
movsl
xchg
mov
lret
add
aad
jo
clc
add
cld
in
add
add
testl
leave
test
out
add
add
add
mov
imul
add
add
jge
xlat
jnp
add
lea
pop
push
push
lea
xor
sub
pop
pushl
push
add
pop
call
push
push
shl
inc
push
and
add
xor
sub
dec
shl
shr
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
push
add
sahf
mov
push
add
fsubr
mov
into
add
fsubrl
vmaxsd
mov
pop
fwait
add
add
mov
add
loop
add
add
ficomps
mul
add
add
add
bound
pushl
call
push
push
not
ror
add
push
or
not
add
sub
add
inc
pop
sub
add
xor
ror
pop
push
push
shl
inc
push
xor
add
shl
sub
lea
ror
inc
pop
add
add
rol
pop
push
add
rol
sub
pop
call
push
push
sub
sub
ror
add
push
and
add
inc
inc
sub
sub
ror
sub
pop
shl
sub
pop
push
lea
push
push
push
lea
push
call
call
fiaddl
add
ficomps
fcomps
add
add
movsl
add
scas
add
jmp
add
pop
pop
mov
jno
jecxz
xchg
add
loop
mov
mov
sarl
insb
fwait
add
add
mov
stos
push
stc
xchg
add
mov
lea
pop
pushl
push
lea
push
push
push
push
push
call
insb
lret
gs
jge
movsl
sahf
cwtl
add
aam
jo
mov
add
out
pusha
mov
lods
add
jns
popl
roll
cwtl
stos
add
mov
xchg
mov
enter
xchg
mov
jns
bnd
xchg
mov
sbb
andl
push
push
push
push
push
push
push
call
mov
in
into
lods
add
xlat
push
jbe
gs
pop
jnp
cwtl
negl
jns
add
push
mov
add
add
add
mov
add
sahf
mov
lea
pop
mov
lea
push
push
push
lea
push
push
push
call
add
add
add
add
mov
add
xchg
roll
add
add
rcll
mov
popl
repnz
int
add
ljmp
lret
filds
outsl
mov
pop
add
jb
add
mov
movsl
push
cli
addl
add
mov
add
xchg
mov
push
in
xchg
xorb
add
pop
add
pop
lea
push
lea
push
push
lea
push
push
push
call
mov
add
add
xorb
mov
lea
aam
add
out
add
addb
xchg
lods
push
push
cmpsl
js
add
add
add
mov
test
jmp
out
add
mov
lea
pop
push
push
lea
push
push
call
add
add
mov
add
add
mov
mov
add
push
mov
add
movsl
add
push
add
ja
icebp
test
add
add
mov
push
mov
clc
arpl
add
or
push
push
push
dec
add
pop
push
push
dec
inc
sub
pop
push
push
push
add
pop
push
push
push
call
mov
fcomps
add
add
mov
pop
orb
enter
add
movsl
nop
flds
add
add
xlat
nop
rolb
pop
movsb
xchg
add
fwait
add
push
jecxz
mov
fstpl
or
add
into
call
xchg
push
add
add
add
add
arpl
cmpsl
cmpsb
imul
in
pop
addb
pusha
rolb
add
fldl
add
mov
add
add
jl
lds
insb
add
add
stos
add
mov
bnd
pop
push
aam
rcl
push
imul
add
jmp
pusha
add
mov
outsl
add
mov
lea
pop
pushl
push
push
lea
pop
call
push
push
rol
push
or
not
add
shr
sub
sub
shl
dec
add
pop
ror
dec
lea
rol
pop
push
inc
lea
pop
pushl
push
xor
lea
sub
sub
pop
call
call
push
push
push
push
call
leave
popf
add
cmpsb
cmpsb
incb
mov
add
loopne
add
mov
lret
lcall
addl
mov
add
loopne
ljmp
imul
mov
clc
add
add
jne
add
movl
push
pushf
add
xchg
rolb
add
add
mov
in
js
add
mov
jnp
roll
fidivs
int3
mov
lea
pop
mov
push
sub
pop
pop
push
push
push
push
push
push
call
add
mov
shr
push
add
add
jnp
cmpsb
add
leave
test
out
pop
jo
add
mov
bound
mov
add
int
icebp
add
add
mov
lea
pop
dec
jne
push
ror
pop
jmp
push
ror
sub
pop
call
push
push
ror
dec
add
push
or
inc
add
dec
inc
lea
sub
pop
pop
push
push
call
addr16
xchg
ljmp
add
sahf
add
add
aam
sbb
add
add
add
xchg
mov
add
out
mov
add
xchg
add
nop
push
add
add
loop
hlt
lea
pop
pushl
call
push
dec
sub
pop
push
push
push
push
push
lea
push
call
add
add
push
pop
je
add
test
lock
add
add
xlat
out
jmp
xlat
gs
int
popl
jb
mov
imul
add
add
roll
add
mov
add
aad
out
fsubl
jnp
movsl
push
cltd
add
hlt
lea
pop
call
mov
push
push
push
push
call
add
bound
add
add
add
add
loopne
jp
add
add
add
add
sahf
jo
shrb
xchg
add
subl
fiadds
call
add
xchg
add
add
add
xchg
mov
lea
pop
lea
push
push
sub
ror
push
push
pop
add
xor
sub
not
pop
ror
inc
pop
push
add
shl
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
loop
add
rcll
mov
add
add
jns
jnp
add
mov
in
add
test
jl
mov
add
ljmp
ret
mov
rolb
jmp
add
je
cmpsb
mov
pop
bound
add
fnstsw
mov
add
add
repnz
jno
rorb
pop
call
push
push
push
push
push
call
push
jecxz
insb
ja
pushf
outsl
testl
popf
xorb
add
in
mov
shl
add
pop
add
cld
pop
push
hlt
ja
add
leave
into
lea
lea
pop
push
call
push
push
inc
push
sub
add
not
shl
sub
ror
add
pop
sub
add
dec
pop
push
push
push
call
add
add
mov
clc
jno
adc
add
add
test
out
add
add
add
iret
lahf
add
add
xlat
fiaddl
aad
mov
popf
push
jbe
mov
xchg
lahf
pop
mov
rolb
sahf
push
loope
push
jne
add
fucomip
arpl
pop
push
je
add
addl
fistpl
fmull
jne
push
push
push
push
push
push
lea
push
push
push
push
call
test
mov
and
nop
add
movb
mov
add
push
jae
je
jmp
jo
icebp
flds
add
sahf
out
add
stos
fmul
mov
fadds
fisttps
add
mov
jo
stos
add
add
jne
hlt
lea
pop
call
push
push
push
push
lea
push
push
push
call
cmpsl
xchg
in
ja
sbb
add
lods
add
mov
mov
loop
add
pop
add
add
add
in
rcl
jge
add
add
negb
fcomps
add
lea
pop
call
mov
push
not
add
lea
pop
lea
push
push
dec
dec
lea
push
sub
add
add
rol
sub
sub
shr
ror
not
ror
pop
ror
pop
push
lea
push
push
lea
push
push
call
pop
add
add
add
add
add
cli
test
add
add
jno
ficoms
add
push
add
add
add
out
ja
add
xchg
test
add
mov
add
add
outsl
mov
rcl
xchg
add
add
test
add
mov
lea
pop
pushl
push
push
push
push
push
call
ljmp
loope
add
add
add
fadds
push
add
add
add
add
mov
cli
add
mov
add
jle
data16
outsl
clc
add
add
add
add
add
mov
add
in
testb
add
jno
pop
aad
jmp
leave
mov
repnz
lea
pop
call
push
push
push
push
push
push
lea
push
call
mov
xchg
stc
jae
add
mov
push
push
add
jp
mov
jge
xchg
push
outsl
add
flds
cld
mov
cli
add
xchg
add
xchg
add
xchg
add
add
add
mov
lea
pop
lea
push
push
lea
push
push
push
push
push
push
call
mov
aam
stc
push
mov
jmp
xchg
cmpsl
rolb
imul
pop
mov
add
ja
add
repnz
iret
add
mov
add
mov
lahf
frstor
jecxz
add
stos
notb
add
int
int
add
push
push
add
aam
bound
pop
push
push
add
pop
push
push
sub
sub
not
pop
push
pushl
push
push
push
xor
add
sub
sub
not
sub
add
pop
shl
rol
sub
pop
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
add
std
add
movsb
add
lcall
add
scas
add
add
add
add
bound
add
out
add
leave
xlat
xchg
jle
pop
add
into
fstpt
jl
jmp
mov
aam
bound
pop
push
push
lea
push
push
push
push
push
call
in
rclb
push
mov
pop
add
imul
add
roll
add
mov
jne
iret
add
add
data16
shrb
outsl
in
in
push
shl
push
xor
add
not
shl
sub
add
add
pop
shl
lea
sub
pop
push
shr
add
pop
pushl
push
push
call
jns
mov
rolb
add
jl
add
push
add
add
mov
add
pop
xchg
add
add
add
push
movsl
mov
movl
push
sahf
add
je
mov
lea
pop
call
push
dec
xor
pop
push
push
xor
sub
pop
call
push
push
dec
lea
push
push
pop
add
shl
lea
sub
sub
sub
pop
sub
add
pop
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
xchg
addr16
jo
xchg
add
mov
ficoms
mov
out
add
add
add
jae
add
cmpb
into
movsb
add
mov
jle
add
xchg
imul
add
add
pop
test
add
lods
jae
fwait
xchg
adcb
pop
pushl
push
push
push
call
fcomps
insb
loope
jb
leave
mov
add
arpl
pop
xchg
add
rol
addl
add
jecxz
push
add
add
add
je
out
add
clc
xchg
mov
push
jbe
mov
lret
jmp
add
mov
mov
addr16
add
mov
lea
pop
call
call
push
shl
inc
shl
pop
jmp
push
add
ror
lea
inc
pop
pushl
mov
push
push
push
push
lea
push
push
call
add
loop
add
out
fadd
add
add
subb
fmul
push
add
call
add
stos
lret
add
add
cmpsl
mov
pop
mov
add
add
out
notb
mov
mov
lea
pop
jmp
push
push
not
push
or
not
add
sub
not
sub
xor
shl
pop
shl
ror
inc
pop
push
push
push
push
push
lea
push
push
push
call
add
push
add
mov
rorl
add
imul
mov
stos
add
lock
add
fmul
mov
gs
push
lods
fisubrl
nop
add
add
add
jnp
loop
jp
lods
lds
mov
cld
lea
pop
pushl
push
shr
inc
pop
call
push
push
add
not
dec
inc
pop
call
push
push
inc
sub
add
ror
push
xor
add
add
inc
dec
sub
rol
add
shr
pop
add
ror
pop
push
lea
dec
sub
sub
pop
pushl
push
lea
rol
lea
ror
pop
call
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
xchg
add
add
add
xchg
add
add
add
add
add
mov
addb
push
add
add
mov
rolb
icebp
addb
mov
cwtl
cltd
js
roll
cwtl
add
add
lret
stos
pop
lret
jbe
js
add
xlat
enter
add
pop
mov
lds
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
je
push
aam
mov
add
ret
fsubrl
add
mov
je
add
add
cltd
add
sti
add
mov
mov
out
pop
repnz
mov
add
add
mov
lea
pop
call
leave
push
push
push
lea
push
push
call
cmpsb
add
aad
add
int
test
cltd
mov
add
push
pop
add
mov
in
jl
add
add
fildl
in
pusha
add
add
rcrb
add
add
sahf
add
outsl
shlb
aad
stos
enter
add
aam
loope
add
in
in
add
mov
lea
pop
add
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
loope
mov
add
add
data16
popf
mov
xchg
jl
out
into
add
mov
add
add
fwait
cwtl
pop
jno
mov
lret
add
jmp
popf
mov
outsl
jmp
pop
add
push
jmp
stos
jge
int
add
mov
cld
mov
add
add
add
xchg
add
mov
add
add
ja
mov
add
add
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
in
std
jle
add
movsl
movsb
push
mov
push
sahf
pop
ja
xchg
push
rolb
add
loopne
jo
add
jmp
iretw
add
add
cmc
add
jecxz
pushf
mov
add
lock
add
add
jecxz
jmp
push
leave
add
push
push
lock
add
addl
popa
and
pop
push
lea
push
call
mov
pop
cmc
add
mov
out
mov
cwtl
xchg
pushf
pop
fldenv
cltd
add
mov
fcmovbe
test
test
mov
in
add
add
mov
movsl
in
add
iret
pop
pop
enter
mov
add
add
cmpsb
cmc
mov
push
add
mov
lea
pop
leave
push
xor
pop
add
ret
push
sub
lea
inc
pop
leave
push
xor
inc
pop
ret
push
rol
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
add
push
cmpsb
mov
add
add
add
add
jno
mov
test
cmpsl
xorb
cmc
ret
push
mov
add
add
jecxz
mov
mov
add
cmpsb
push
iret
pop
fiadds
les
cmpb
add
pop
add
out
add
xchg
test
push
add
fadds
add
cld
lea
pop
mov
push
shl
dec
add
shl
pop
cmpl
jne
mov
push
sub
dec
sub
pop
jmp
push
add
inc
pop
mov
push
push
push
push
push
call
jae
call
add
sti
add
in
mov
add
fiaddl
add
gs
pop
mov
add
pushaw
subl
movsl
add
faddl
stos
fcmovnu
add
xchg
nop
jge
mov
lea
pop
and
push
push
lea
push
call
add
add
add
xchg
fadds
arpl
pop
xchg
add
cmpsl
iret
movsb
push
stc
jl
add
push
add
add
stos
add
mov
aam
loop
mov
in
out
imul
lcall
xchg
test
arpl
xor
xor
push
push
push
push
push
push
call
addl
add
add
add
add
lods
add
rolb
aad
add
jb
add
sti
add
add
fisubrs
pop
add
into
add
xchg
push
call
lahf
mov
fidivrl
add
out
push
add
int3
scas
filds
je
add
add
add
frndint
add
cld
add
add
mov
add
pop
add
push
push
push
lea
push
push
push
call
add
cmpsb
add
add
jno
mov
add
add
add
add
fisubrl
lds
sti
add
js
stos
add
int
fnclex
aam
movb
mov
hlt
lds
jp
mov
add
add
cld
lea
pop
xor
push
push
lea
push
lea
push
push
push
call
mov
js
mov
xlat
cli
enter
pop
imul
mov
iret
add
std
jb
jns
xchg
xchg
xchg
out
imul
int
add
lcall
icebp
add
nop
mov
fldl
add
mov
add
in
add
add
pop
dec
push
push
push
push
push
push
push
lea
push
call
cli
pushf
fdivl
lret
out
pushf
add
loope
popf
lret
mov
ficoml
add
add
add
add
cld
add
add
sbb
add
test
mov
test
addb
fwait
mov
add
add
jmp
cltd
mov
testl
stos
fisttps
pop
sub
push
rol
shr
xor
pop
jmp
push
sub
pop
sub
pushl
push
dec
rol
sub
pop
pop
sub
push
push
push
push
lea
push
lea
push
lea
push
call
add
mov
add
mov
popa
movsb
add
add
mov
aad
sarl
add
add
arpl
add
mov
mov
add
add
add
insb
add
add
into
add
fadds
sbb
cmp
jne
push
push
call
add
mov
sbbb
movsb
jp
add
filds
in
rolb
in
push
add
ret
mov
jo
fwait
push
clc
mov
mov
push
mull
clc
mov
shl
fisttpl
repnz
je
mov
add
mov
clc
add
jo
or
add
add
out
jge
add
pop
mov
lea
push
shl
add
shl
add
pop
sub
push
add
not
pop
mov
push
push
push
push
push
call
add
movsl
add
mov
clc
testl
mov
add
icebp
push
icebp
arpl
add
jbe
icebp
mov
rolb
xlat
push
mov
out
xchg
leave
mov
pop
les
fiadds
lods
pop
jecxz
addl
in
into
push
call
jns
shlb
add
pop
shr
add
push
xor
xor
lea
pop
sub
pushl
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
cwtl
call
xchg
nop
add
pop
fildl
add
jecxz
add
push
out
sarl
mov
test
jl
cli
push
add
les
shr
push
inc
pop
and
push
lea
dec
pop
sub
cmp
jne
push
push
push
call
add
jp
ret
out
add
in
add
mov
fwait
add
mov
mov
jle
add
add
add
divl
pushf
add
add
xchg
add
mov
pop
mov
lea
pop
leave
push
push
push
lea
push
call
fidivrl
in
iret
lea
add
lods
leave
add
add
mov
mov
add
add
mov
or
cmc
add
std
add
jecxz
add
add
iret
les
add
add
mov
push
push
int
jbe
nop
add
push
add
adc
add
push
sub
add
rol
pop
push
push
push
lea
push
lea
push
call
je
iret
mov
xchg
add
add
stos
mov
add
add
add
add
cmc
jbe
data16
add
gs
addl
mov
out
enter
add
mov
in
mov
out
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
add
add
popf
mov
add
add
fwait
add
push
pop
icebp
mov
data16
ljmp
add
mov
in
mov
pushf
mov
add
pop
add
push
rol
shl
pop
push
push
push
lea
push
push
call
aam
pop
push
add
add
idivb
add
pop
mov
xchg
add
mov
lahf
ljmp
pop
lock
add
in
mov
push
lahf
mov
aam
add
add
mov
add
loop
roll
push
add
pop
out
stos
mov
xchg
flds
fcomp
add
mov
call
adc
push
inc
add
ror
pop
push
push
lea
pop
push
push
push
shr
pop
mov
lea
push
lea
pop
sub
mov
push
dec
sub
pop
shr
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
mov
add
add
cwtl
push
stos
jmp
add
sti
mov
mov
pop
pop
add
xchg
add
cmpsl
jno
out
insb
add
add
in
idivl
nop
lret
cmpl
pusha
add
mov
add
add
mov
add
pop
add
push
push
push
push
push
push
push
push
push
call
out
fcoml
jmp
jge
push
mov
add
fists
add
test
call
pop
xlat
js
lret
ja
sti
add
push
loopne
add
enter
add
xchg
fbld
mov
push
out
test
mov
icebp
les
add
mov
cli
add
add
add
jb
movb
mov
popf
add
ficomps
xchg
mov
and
mov
push
push
push
call
bound
clc
icebp
addl
lret
fs
add
add
cltd
mov
add
add
roll
cld
mov
fiaddl
aad
add
fadds
add
jmp
in
ljmp
add
int
cld
mov
lea
pop
add
push
lea
push
push
push
call
fadds
mov
add
mov
roll
add
ljmp
enter
lock
add
in
add
aam
idivl
int3
ja
loop
add
imul
add
jge
add
fcomi
xchg
loop
push
mov
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
push
mov
add
fadds
add
js
out
jecxz
add
add
scas
lret
add
add
add
movsl
mov
xchg
add
add
add
add
mov
add
mov
add
scas
add
push
loope
jnp
fwait
mov
lea
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
add
in
fwait
sahf
lahf
add
subl
filds
movsb
jb
add
add
repnz
icebp
mov
lods
xchg
les
xchg
stos
mull
add
add
add
add
add
push
cld
mov
add
add
add
add
hlt
lea
pop
xor
push
push
push
call
push
add
mov
test
add
in
push
insb
mov
add
jp
add
mov
fdivrl
hlt
in
int
fmull
add
pop
popf
add
scas
mov
add
mov
js
data16
lods
add
lret
jle
jb
clc
mov
je
fmull
xlat
push
lea
push
lea
push
push
call
jbe
mov
add
add
je
lds
pop
add
addl
lret
mov
pop
mov
jl
out
mov
movl
xchg
pop
push
jno
jne
add
mov
lea
pop
and
push
xor
inc
pop
rol
push
add
add
pop
rol
xor
push
lea
push
push
push
lea
push
push
call
add
gs
add
add
mov
add
js
iret
int
add
jle
add
add
int3
mov
rcll
out
jmp
call
add
mov
lea
pop
inc
push
add
pop
cmpb
jne
add
push
not
add
not
pop
cmp
je
add
push
push
push
push
push
push
push
push
push
call
les
scas
add
jno
mov
fsubs
xchg
iret
add
out
add
shr
add
sahf
add
mov
add
add
lea
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
call
xchg
les
add
bound
aad
lods
add
add
scas
add
mov
add
mov
cmpsb
test
movsb
imul
hlt
xchg
push
add
add
mov
enter
add
add
cmc
add
add
call
add
cmc
mov
jo
lods
mov
cmpsl
jecxz
out
jae
jae
movsb
pop
add
pop
xor
push
lea
inc
add
pop
pop
push
pop
pop
push
push
push
call
add
stos
add
add
add
fldl
ja
mov
test
add
test
fucom
nop
loop
stos
test
into
int3
sti
mov
add
add
xchg
add
test
pushf
add
fwait
lcall
jmp
mov
mov
lea
pop
pop
push
push
push
lea
push
call
filds
cli
add
loop
jae
sahf
add
add
add
je
imul
popa
fisubrl
xchg
add
divl
je
mov
mov
add
add
jo
mov
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
arpl
add
sahf
add
add
add
pop
add
rclb
test
pop
add
mov
add
addb
jns
add
add
rcr
add
add
push
pop
add
mov
add
mov
xchg
lock
loopne
scas
sahf
addr16
add
xchg
add
mov
lea
pop
pop
leave
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
add
test
in
add
jb
add
scas
add
in
outsl
cltd
jmp
add
mov
test
add
add
rorb
jae
mov
mov
add
insb
popf
add
add
pop
ret
push
push
push
push
lea
push
call
fisttpl
add
add
imul
add
xchg
add
add
add
roll
enter
ljmp
add
loope
repnz
add
add
imul
jno
in
add
add
add
imul
out
hlt
lea
pop
mov
add
push
inc
not
sub
add
pop
push
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
push
pop
add
add
mov
add
push
add
add
xchg
add
int3
lock
add
pop
add
xchg
aam
js
add
lret
fs
gs
faddl
jae
add
add
iret
xchg
add
mov
lea
pop
add
mov
push
lea
push
push
call
out
add
mov
lret
lahf
movsl
popf
add
add
add
cltd
in
jl
jb
add
repnz
add
loope
stos
cld
add
rol
mov
mov
loop
add
add
add
add
mov
js
rolb
add
pop
cmpw
push
push
push
call
lock
pop
fwait
imul
cmpsl
mov
out
mov
mov
jnp
add
add
add
lahf
mov
add
cltd
test
jmp
mov
push
lock
add
popa
xchg
add
gs
mov
cli
add
stc
add
flds
cmpsb
out
fidivl
insb
movl
mov
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
jne
mov
sahf
int
mov
xchg
jp
add
add
mov
sti
push
sahf
test
add
add
add
add
scas
add
add
xchg
cltd
xchg
push
mov
add
add
mov
add
jo
fchs
add
mov
fmull
mov
push
lea
push
call
jp
add
add
hlt
leave
add
add
add
add
add
add
push
jp
ficompl
jecxz
xchg
fisubl
add
mov
jne
add
add
push
flds
mov
addl
add
test
jmp
sti
imul
add
stos
push
and
lea
pop
push
push
sub
not
pop
call
xor
push
ror
pop
pop
pop
push
push
push
push
call
add
in
add
add
jnp
gs
push
in
pop
lods
add
pop
add
add
mov
add
jbe
add
leave
add
lea
pop
pop
push
rol
pop
pop
push
add
lea
sub
rol
pop
pop
leave
push
pop
ret
push
push
call
add
stos
add
add
add
cwtl
push
cwtl
add
add
mov
add
add
add
ficoml
add
add
fnstsw
in
scas
or
mov
lea
pop
push
mov
push
push
push
call
add
add
add
add
cwtl
ret
add
add
in
je
ficompl
add
cltd
mov
test
rolb
incb
add
push
popf
lcall
data16
add
push
not
pop
push
push
not
dec
pop
push
push
push
lea
push
lea
push
push
call
hlt
add
fiadds
clc
testb
add
jb
jns
movsb
lcall
mov
add
add
add
add
add
push
jle
aad
fs
mov
add
test
loopne
loop
sbb
add
add
xchg
mov
in
movsl
mov
mov
push
lea
int3
lea
pop
push
push
pop
push
push
add
pop
mov
push
push
push
push
call
add
add
mov
rolb
subb
lea
lret
cld
arpl
je
in
idiv
add
add
add
add
add
lahf
aad
ljmp
test
add
mov
adc
pop
push
add
pop
lea
push
rol
pop
sub
push
lea
push
call
imul
fdivrl
add
jp
add
in
mov
ret
je
jo
add
movsl
add
test
test
add
imul
fmull
adc
hlt
add
xor
ror
pop
shr
push
xor
dec
pop
add
push
shr
pop
mov
push
lea
push
push
push
call
fstps
loope
add
jmp
add
add
add
add
add
mov
insb
mov
push
mov
add
add
add
add
clc
cmpsl
lcall
clc
add
jge
add
xchg
add
js
popf
add
add
mov
add
add
test
je
movsl
nop
int3
pushf
mov
lea
pop
add
pushl
push
shl
pop
popl
mov
push
push
push
call
testb
enter
fildl
cwtl
cwtl
xchg
mov
and
loopne
jmp
xchg
mov
std
add
pop
int
lret
add
ror
add
out
add
add
jae
subb
mov
push
add
cli
push
fsubrl
xorb
cmpsb
les
add
enter
arpl
add
loope
add
out
mov
lea
pop
add
push
shr
sub
pop
xor
lea
push
push
lea
push
lea
push
push
lea
push
call
andl
nop
mov
add
sti
faddl
gs
push
shlb
add
push
addl
je
add
add
xchg
in
mov
mov
fs
cmpsl
mov
add
jp
add
int3
mov
mov
lea
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
cmpsl
add
pushf
int
cmpsb
in
xlat
outsl
scas
out
lret
add
add
mov
add
add
stc
xchg
icebp
add
add
pop
add
push
ja
stos
in
add
push
mov
out
mov
mov
lea
pop
add
xor
push
add
ror
sub
pop
rol
push
rol
pop
nop
push
sub
xor
pop
nop
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
mov
mov
cli
testb
fistps
add
mov
fs
lods
xchg
into
add
stc
xchg
mov
cld
pop
leave
add
pop
add
and
add
push
xchg
mov
add
pop
jmp
add
mov
mov
add
call
test
loope
add
add
int3
ljmp
fistl
arpl
arpl
add
push
mov
add
imul
test
pushf
pusha
add
xchg
shl
add
add
out
add
add
data16
add
add
pop
nop
push
rol
pop
nop
push
lea
push
push
push
push
push
lea
push
push
call
in
xchg
sar
add
fldl
add
ficomps
add
xchg
repnz
lds
lds
add
arpl
mov
shll
mov
add
add
loop
leave
fsubs
aam
bound
pop
inc
nop
push
push
push
call
add
int
jae
sub
icebp
divl
jp
mov
add
add
lock
add
notl
xchg
jp
add
add
outsl
mov
add
mov
add
addl
add
add
addr16
nop
cmpb
jne
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
add
popf
fnstsw
into
and
add
fists
mov
sar
aam
xchg
mov
add
add
lahf
sti
push
add
neg
fistpll
lahf
call
mov
add
mov
lea
pop
add
nop
push
shl
sub
add
shl
pop
nop
push
ror
rol
shl
pop
cmp
je
push
xor
pop
nop
push
shr
pop
nop
push
push
push
push
call
add
mov
jo
jb
add
xchg
addl
add
js
add
movsb
addb
push
add
mov
jns
add
xchg
add
imul
mov
scas
orb
adc
push
push
push
push
call
mov
sahf
int
mov
mov
add
add
faddl
add
add
add
add
cltd
neg
add
push
add
add
rorb
fwait
loop
int
add
mov
pop
fucom
mov
ja
add
push
mov
lea
pop
nop
nop
push
dec
pop
cmp
jb
xor
push
shl
not
pop
jmp
push
push
push
push
push
push
call
sahf
push
sahf
add
xchg
mov
out
add
out
add
pop
add
add
jns
pusha
mov
add
aam
aad
xchg
add
add
mov
add
add
add
add
jle
sbb
add
pop
add
add
iret
add
add
add
xchg
add
filds
push
sahf
add
add
mov
lea
pop
mov
push
ror
shr
ror
pop
add
push
push
call
xchg
add
add
push
add
imul
add
add
add
add
add
mov
add
filds
lea
mov
sar
jl
rorl
pop
movzwl
push
xor
pop
mov
add
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
leave
addb
ror
push
jno
push
aad
fiaddl
add
movl
shl
mov
mov
add
add
in
mov
in
leave
cld
fcoms
add
negl
mov
roll
mov
xchg
pop
add
add
mov
out
add
aad
lods
add
shr
add
add
lcall
push
add
ret
rorl
pop
mov
push
add
pop
xor
push
inc
ror
pop
xor
shl
push
push
lea
push
call
rolb
add
cli
notl
add
add
add
cld
cmpsb
pop
push
outsl
xlat
jo
out
mov
add
stos
add
mov
lds
hlt
mov
out
test
add
add
loop
add
loop
push
icebp
mov
mov
test
jne
push
mov
add
mov
add
mov
lea
pop
xor
push
rol
shr
ror
sub
pop
shl
xor
push
push
push
lea
push
push
call
lret
in
add
in
ficoml
add
jnp
roll
rolb
add
add
je
add
add
add
mov
add
les
fldl
add
jb
add
mov
xchg
out
int
add
add
pop
shl
xor
push
xor
shr
xor
rol
pop
mov
add
push
add
shl
pop
pop
push
lea
xor
shr
pop
pop
push
dec
pop
pop
push
lea
push
push
call
in
mov
fnstenv
push
mov
ret
cltd
add
call
outsl
nop
lahf
int3
add
add
lods
mov
xchg
ljmp
lods
mov
jmp
xchg
add
xlat
cli
add
pop
pop
leave
push
push
push
push
lea
push
push
push
call
xorb
add
add
ret
add
add
imul
shl
fbstp
add
push
fiaddl
jge
add
call
add
les
add
xchg
jp
xchg
add
les
or
push
push
push
lea
push
push
lea
push
push
call
mov
test
add
fldenv
add
in
leave
add
add
testb
add
push
lock
data16
add
in
pusha
aam
mov
add
add
cltd
shr
mov
add
gs
add
add
push
in
sahf
pop
add
add
xchg
ljmp
lea
pop
mov
push
sub
add
pop
push
push
add
add
sub
pop
push
push
sub
add
shl
pop
push
push
not
pop
push
mov
push
xor
pop
mov
push
shr
shr
shl
pop
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
insb
add
add
std
add
fldl
add
add
into
add
add
pop
jge
add
jno
stos
test
add
jne
ljmp
fiadds
add
mov
add
push
int3
lret
add
jl
hlt
sar
stos
fsubrp
add
rcl
mov
testl
pop
add
mov
lea
pop
test
je
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
jl
xlat
icebp
sarb
add
movb
pop
jle
add
icebp
imul
mov
mov
mov
add
add
out
add
nop
jp
add
mov
lcall
pop
add
add
repnz
add
add
addr16
mov
mov
aam
out
mov
lea
pop
mov
test
je
push
push
lea
push
call
add
addr16
mov
add
add
add
add
pusha
add
mov
fiadds
ficomps
mov
add
add
mov
add
icebp
add
jae
add
xlat
divl
add
add
mov
lea
pop
mov
push
rol
ror
not
pop
mov
push
push
lea
push
push
push
call
ja
jle
cmc
call
divl
push
add
ret
add
add
sti
add
add
push
push
add
add
add
jmp
lea
add
add
out
xchg
mov
out
jae
jae
add
jo
imul
add
lea
pop
mov
push
lea
pop
inc
push
push
lea
push
push
lea
push
push
push
call
mov
mov
jecxz
add
add
xchg
filds
add
rclb
add
leave
add
pop
add
mov
lret
mov
mov
repnz
jmp
popf
add
add
pop
cmp
je
test
je
push
push
push
push
push
lea
push
push
push
call
mov
add
ljmp
out
add
hlt
addl
arpl
out
jge
faddl
add
add
add
mov
test
add
scas
int
add
pop
mov
inc
push
push
push
push
push
push
call
add
jmp
add
add
stc
into
add
testl
add
test
add
jne
jbe
je
rolb
push
stc
add
pusha
mov
lea
pop
cmp
je
push
add
sub
pop
test
jne
push
shr
pop
xor
push
lea
push
lea
push
push
push
call
add
in
add
ret
mov
js
add
test
iret
enter
iret
into
aam
repnz
lret
add
add
add
add
lahf
lcall
add
add
add
add
adc
pop
push
add
lea
pop
pop
push
not
dec
pop
pop
pop
push
add
dec
xor
pop
leave
push
inc
shr
add
pop
ret
mov
push
push
push
call
pushf
add
push
mov
out
add
jl
add
jl
fldenv
shll
pop
fsub
decb
add
mov
frstor
fisubrs
xchg
movsb
mov
add
cld
mov
add
rolb
mov
lea
pop
inc
push
xor
add
pop
cmp
jne
lea
push
push
push
lea
push
lea
push
push
push
push
push
push
call
lret
cwtl
add
call
int
xlat
jno
add
add
pop
cld
data16
add
sar
jnp
add
add
add
popa
add
fcomp
andl
add
imul
int3
add
fidivs
cli
add
adc
mov
in
add
sahf
lea
repnz
add
mov
mov
sub
popa
add
add
push
shr
add
pop
mov
push
shl
sub
dec
pop
add
push
lea
pop
cmp
jne
push
dec
ror
lea
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
ja
addl
mov
add
ljmp
jp
add
pop
icebp
out
mov
push
xchg
imul
push
add
mov
stos
add
add
test
sarb
add
pop
test
je
push
add
add
lea
not
pop
mov
push
inc
pop
add
push
shr
pop
cmp
je
push
add
add
shl
pop
jmp
push
push
push
push
call
add
xchg
lds
icebp
mov
int3
fs
pop
mov
jbe
cwtl
gs
jbe
repnz
pusha
sbbl
pop
fldl
add
icebp
in
add
in
stos
add
push
test
push
jmp
imul
xchg
out
add
xchg
add
ljmp
jl
add
fmull
rclb
je
xchg
push
push
push
push
push
call
lds
mov
outsl
insb
add
loope
add
mov
add
add
fidivrs
mov
add
clc
mov
repnz
add
imul
lds
lods
jne
add
mov
lea
pop
pop
pop
push
not
not
add
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
in
add
nop
mov
aam
jp
pop
push
add
mov
add
fcompl
add
xchg
mov
arpl
gs
insb
add
cmpsl
mov
call
mov
add
push
fwait
add
fmull
push
xor
ror
pop
leave
ret
push
push
push
push
lea
push
push
push
lea
push
call
add
jo
enter
xchg
jb
add
xlat
mov
hlt
mov
sti
add
test
add
cmpsl
les
rolb
lret
add
add
add
add
add
add
add
sarb
add
negb
insb
in
stc
mov
add
mov
lea
pop
lea
pop
push
add
inc
sub
pop
pop
push
rol
xor
pop
pop
push
sub
pop
pop
push
push
lea
push
push
lea
push
call
add
cli
cli
subl
in
notl
cmc
add
jne
add
fisubrs
lahf
mov
leave
xchg
add
jne
rcl
fidivrl
add
pop
add
add
xchg
lcall
bound
leave
push
add
inc
shr
pop
ret
push
add
rol
pop
mov
pop
push
not
pop
pop
push
push
call
add
add
clc
add
add
movb
rcll
add
mov
push
xchg
push
cmc
add
push
add
int
mov
add
add
in
add
add
int
pop
ret
lods
repnz
pusha
mov
mov
lea
pop
pop
push
inc
pop
pop
push
xor
dec
not
pop
leave
ret
test
push
test
jae
test
jb
sub
jae
in
jae
stos
jae
test
jae
mov
add
add
pusha
lock
pop
mov
orb
sbb
jb
mov
xor
xchg
mov
inc
push
orl
mov
movl
stos
test
sub
pop
fdivrp
arpl
out
mov
push
pop
sub
negl
or
divb
inc
sbb
test
aaa
mov
xchg
imul
xchg
push
add
xchg
dec
fildl
push
movsb
xchg
jmp
aas
loop
adc
inc
sub
sbbl
push
fwait
repz
xchg
jno
and
push
das
jae
testb
or
shlb
pop
push
rcrl
jo,pn
dec
lret
loope
data16
inc
inc
sub
lods
lahf
jbe
ret
outsl
push
push
push
fdivrs
xchg
sub
lods
mov
pop
mov
int3
or
mov
adc
adc
ljmp
ss
aas
jg
mov
add
ret
dec
adc
xchg
inc
sahf
cltd
add
xchg
outsl
outsl
push
cmp
mov
rclb
mov
clc
push
sarl
repz
push
ret
imul
movsl
pop
movsl
cmp
xchg
mov
lds
ret
inc
inc
fisttpl
aad
push
dec
sbb
pop
stos
stos
loopne
sbb
push
rcl
sub
movb
cmc
leave
mov
pop
out
les
push
movl
inc
js
xchg
inc
scas
dec
shlb
adc
js
rolb
mov
sarb
ljmp
mov
sbbb
pushf
pop
sbb
jbe
movsb
pop
sub
cmp
daa
push
fcoml
add
stc
in
fisubrl
aad
cmp
add
ljmp
jnp
mov
bound
stos
add
fsubrl
jle
jae
out
repz
and
jp
js
mov
mov
mov
mov
out
dec
loopne
sahf
in
mov
push
sbb
add
mov
stc
mov
insb
cwtl
ret
pop
push
xchg
in
out
pop
rcl
cmp
ljmp
add
push
shrb
jbe
xchg
adc
repnz
cld
mov
and
fcomps
mov
cmp
and
sbbb
repz
add
js
lods
xor
cltd
push
jne
fdivrs
movsl
pop
cli
adc
mov
xchg
mov
mov
add
hlt
sahf
cwtl
adc
fbld
push
lret
lret
sub
cwtl
jns
sub
dec
push
dec
lds
or
scas
jl
rcrl
or
ret
jecxz
and
and
sar
mov
sbb
xchg
adc
or
test
push
ja
enter
xchg
add
push
shlb
add
or
in
mov
mov
int
jge
inc
je
push
mov
stc
lds
mov
dec
enter
in
ja
xchg
adc
add
jno
out
mov
test
and
divps
scas
stc
ja
scas
or
lcall
mov
gs
push
push
push
add
pop
mov
adc
add
mov
es
and
cmp
daa
cmp
jnp
jp
xor
cmp
add
fimuls
pop
cmp
mov
xlat
xor
pop
outsb
sbb
xor
jecxz
xchg
xchg
negb
ds
xor
or
jno
out
int
cmpsl
push
out
xor
cmp
cld
adc
xchg
push
or
add
push
ljmp
adc
pop
dec
lods
movl
in
jp
mov
hlt
lcall
lds
ja
xor
enter
imul
and
mov
jmp
sub
inc
hlt
inc
mov
cmc
aam
jle
dec
cmovl
xor
mov
cmp
sar
mov
add
and
inc
cmp
ljmp
aaa
dec
sub
sahf
stos
cmp
mov
mov
lea
fst
push
mov
add
rol
or
mov
mov
xchg
test
cmp
sub
cltd
or
add
sub
stos
ret
cmp
daa
cmpsb
clc
loopne
aam
out
jmp
cmpsl
xchg
popf
push
ljmp
mov
dec
and
add
popa
ficompl
push
pushf
pop
nop
in
dec
fmulp
jecxz
int3
xchg
sub
insb
push
mov
clc
mov
jle
pusha
xchg
in
mov
out
movsl
sarb
inc
pop
push
std
pop
cmp
arpl
xchg
sub
aam
ja
mov
movsb
cmp
dec
add
mov
pop
inc
xchg
mov
je
mov
iret
stc
dec
dec
cltd
je
ret
dec
pop
mov
enter
pop
xor
cmp
sbbl
testb
push
imul
lcall
xchg
lret
mov
mov
jb
jmp
fisubrs
insb
inc
out
add
xor
xchg
dec
fxch
ss
mov
out
pop
mov
jmp
out
jg
push
xor
repz
pop
adcb
dec
xor
xchg
int
mov
xor
imul
and
imul
push
xchg
es
cmpsl
push
or
adc
jecxz
cmp
xchg
jp
sub
popf
jle
pop
out
pop
inc
pop
imul
mov
xchg
pop
movsl
dec
lods
dec
sbb
cmp
es
and
aas
mov
leave
icebp
xchg
sub
lahf
popf
push
pop
pop
sahf
dec
sbb
jae
xor
stos
or
push
cmp
jg
mov
mov
lcall
xchg
jge
push
sbb
jl
ret
sbb
popa
insb
jmp
push
scas
test
dec
clc
sub
add
loope
ficomps
frstor
sbb
cwtl
stos
cmpsb
xor
and
pop
jnp
cmp
loopne
repz
into
mov
sbb
push
pop
cmp
repnz
inc
sub
insl
mov
cltd
orl
sub
pop
sub
test
nop
add
xchg
fcmovu
and
xor
scas
scas
pop
and
mov
mov
les
ds
adc
mov
add
mov
outsl
xor
fwait
mov
jle
push
sbb
out
call
hlt
test
mov
xchg
scas
rclb
cmpsl
push
icebp
rcll
mov
cs
ret
sub
lcall
sbb
and
cwtl
push
scas
adc
xor
stos
sbb
cmp
jae
dec
pushf
loope
into
aad
cld
xchg
jbe
inc
dec
lret
sbb
and
push
inc
mov
mov
cli
jns
stos
pop
out
push
add
insl
mov
add
mov
push
add
jns
lock
cmp
fcmovbe
add
test
jge
pop
mov
dec
sbb
out
mov
test
or
and
dec
cld
sub
push
pop
gs
mov
sub
outsb
pop
daa
adc
insb
fst
and
push
push
int3
inc
sub
or
movsb
es
pop
insb
push
in
imul
dec
fdiv
movsl
jp
xchg
ds
or
dec
and
pop
push
dec
lods
shrb
ret
cmp
lods
notb
testl
stos
movsl
jnp
and
mulb
lcall
test
clc
inc
push
mov
sbb
mov
ret
push
push
and
push
out
pop
sbb
es
pop
sbb
jno
mov
in
mov
push
mov
insb
inc
and
lret
je
jmp
in
cmp
push
mov
xchg
or
dec
mov
mov
push
xchg
xchg
pop
mov
mov
in
add
pop
push
in
rcrb
cld
dec
and
pop
sub
sub
add
jecxz
jmp
in
cmp
bound
and
mov
adc
dec
or
mov
lds
or
dec
roll
lds
nop
pop
and
es
add
push
pop
andb
testl
les
dec
and
hlt
movsb
ret
pop
pop
lahf
out
xlat
sub
adc
lret
inc
adcb
mov
sbb
test
xchg
stos
jge
mov
ja
scas
push
sahf
outsl
mov
std
inc
stc
pop
outsl
lret
dec
cwtl
or
push
mov
and
xor
pop
loop
add
cmp
xorl
jne
fistpl
call
adc
dec
or
sbb
movsl
jl
jbe
hlt
add
adc
pop
jno
mov
mov
ja
xchg
mov
cld
loop
movsl
out
fisubrs
pushl
jp
adc
jb
sub
movsl
outsl
add
adc
in
repz
stos
xor
jnp
test
sub
inc
jae
fwait
mov
mov
das
push
outsb
data16
in
outsl
fdiv
jno
lret
xchg
fwait
xor
and
std
or
add
addr16
push
cmp
xor
cmp
push
jl
and
jg
push
lods
dec
xchg
das
jecxz
pop
mov
je
incl
jp
ret
cmp
and
cld
cmp
lea
icebp
fldcw
adc
mov
sbb
pusha
dec
sti
inc
ret
push
clc
clc
gs
orl
xchg
push
mov
sbb
rol
sub
and
dec
push
pop
jnp
or
imul
aas
sub
sbb
fsts
dec
lret
dec
cmp
sub
out
jae
mov
xchg
lods
dec
call
rorb
in
fwait
push
lock
sbb
fwait
popa
dec
aas
mov
shl
jl
int
daa
xchg
testl
inc
arpl
lods
pop
imul
mov
int3
lret
fmull
out
lods
loope
insl
xor
add
dec
add
nop
leave
jg
push
aad
pop
jbe
ret
xchg
les
mov
jae
cwtl
je
ja
mov
adc
popf
neg
aas
pop
mov
adc
test
loopne
push
ss
jno,pn
and
iret
shll
pop
and
add
dec
mov
andl
fidivs
pop
fldcw
rorl
repz
mov
pop
clc
xchg
adc
add
stos
cmp
pop
push
sub
icebp
out
dec
add
adc
pop
inc
and
ja
jbe
xor
outsb
cmp
pop
stc
adc
push
cli
stos
iret
or
cmc
lock
inc
or
and
add
mov
cli
jecxz
jns
cmp
insb
and
and
lcall
xchg
mov
scas
xchg
pop
pop
cli
xchg
jp
mov
icebp
and
in
push
add
outsb
push
xor
int
cmp
addr16
jge
mov
xor
fsubrs
jmp
mov
pop
xor
mov
test
movsbl
std
in
adc
scas
leave
jno
sbb
call
sbb
sub
sub
mov
add
push
aam
and
push
adc
dec
push
sub
movb
fisttps
jl
mov
push
iret
push
pop
add
pop
or
sub
outsb
out
lods
sarb
mov
add
dec
add
jge
imul
mov
ds
inc
fimull
cmp
mov
mov
mov
and
outsl
dec
fwait
xchg
stc
sbb
push
test
cmp
and
mov
mov
inc
jg
cld
sahf
dec
bound
repnz
and
cmp
mov
sar
and
rolb
ret
insb
ret
xor
or
sbb
stc
mov
lock
xchg
mov
pop
pop
imul
call
jno
or
inc
cltd
cwtl
add
xchg
cld
or
bound
enter
xor
xor
in
mov
push
sub
movhps
add
and
dec
push
addr16
stc
add
and
stos
xchg
dec
jno
cmp
xchg
mov
aam
leave
mov
aam
xchg
int3
sti
negl
out
mov
int
inc
pop
fbld
jl
rclb
xchg
lds
in
in
mov
add
sub
xchg
mov
jle,pt
shll
jae
sub
push
mov
repnz
in
movsb
aas
push
pop
xchg
cmp
enter
inc
scas
mov
mov
or
dec
lea
push
cli
and
mov
jbe
repz
mov
sub
les
dec
enter
fsubrs
out
sub
ds
mov
test
arpl
test
test
out
aam
pop
mov
les
mov
ret
push
shll
ret
test
xchg
xchg
mov
fisubs
and
incl
adc
mov
popa
fs
out
cmp
jnp
pusha
adc
push
daa
fsubr
not
xchg
outsl
xor
out
int3
cmp
rorl
stos
cwtl
inc
leave
push
cmp
push
cmp
jo
call
dec
int
or
sahf
in
mov
mov
rorl
repz
xor
out
or
repnz
xlat
add
xchg
mov
data16
and
out
dec
cmp
test
jo
mov
xchg
sub
mov
shrb
ret
mov
data16
idivb
fnstcw
rol
or
inc
mov
out
aas
xor
ja
adc
mov
add
dec
dec
sub
lea
out
pop
in
push
loopne
cmpsb
inc
xor
stos
sub
and
push
rcr
and
pop
daa
je
and
add
insl
inc
xchg
rcrl
pusha
jno
and
int
xchg
mov
cmp
xor
mov
sti
call
out
sbb
mov
pop
dec
add
ret
nop
out
xor
in
adc
or
cltd
mov
fldt
xchg
add
inc
les
idivb
cld
pusha
loopne
fistl
mov
dec
mov
hlt
push
mov
je
rcrb
sub
mov
lods
xchg
sub
and
add
fcomi
xchg
stc
scas
daa
in
xchg
sbb
arpl
daa
negb
ficomps
push
fwait
shrl
xchg
clc
test
jns
inc
testb
and
out
cmc
inc
repz
cld
xlat
movsb
leave
divl
rcrb
sbb
gs
push
fnsave
cmpl
insl
lahf
into
fs
or
mov
imul
pop
or
in
shlb
push
add
push
inc
int3
inc
aaa
pusha
xlat
or
iret
mov
mov
sbb
mov
push
and
out
shl
shrb
out
jmp
fcoml
mov
pop
jmp
push
aas
add
push
mov
mov
mov
add
test
mov
xchg
mov
je
or
add
pop
add
out
or
dec
mov
pop
mov
ds
je
ss
or
dec
mov
pop
jno
add
addr16
inc
les
in
adc
pop
rcll
mov
fcoms
add
cmp
hlt
das
push
lea
jmp
lock
pop
add
fwait
pop
insl
mov
sti
xchg
jo
add
jb
adc
mov
mov
ds
nop
fwait
clc
inc
mov
mov
xchg
sub
ds
pop
adc
mov
jl
ljmp
test
add
gs
push
stos
inc
mov
sbb
mov
inc
inc
adc
aas
jl
xchg
mov
mov
mov
stos
stos
xchg
test
or
cld
xorl
mov
and
addr16
test
adc
pop
sbb
in
cltd
push
push
dec
xor
jmp
jecxz
repz
negl
xchg
xchg
inc
sub
test
aas
movl
rcrb
pop
rorb
push
scas
mov
orl
aaa
sub
daa
hlt
pop
insl
and
jns
push
xor
mov
loop
loopne
add
or
adc
inc
sbb
aaa
in
adc
addl
icebp
push
mov
mov
sti
xor
call
call
inc
and
or
int
add
xlat
inc
adc
rcl
adc
clc
mov
addr16
pushl
popa
push
inc
mov
push
mov
stos
loop
mov
xor
imul
sar
in
pop
mov
mov
stos
gs
mov
stos
gs
cli
test
xchg
movsl
popl
add
addb
mov
sahf
fs
sbb
aaa
ljmp
mov
rol
fs
lods
pop
ret
repz
aaa
vpsadbw
xchg
mov
aaa
pop
push
xlat
cmpsb
xor
push
adc
sbb
or
cmc
inc
subl
in
or
loope
sbb
nop
xor
cmc
sets
mov
sbb
xchg
inc
test
ljmp
cmp
dec
pusha
inc
rcl
aas
cmpsb
jmp
lds
pop
adc
dec
or
leave
sub
pushf
cwtl
pushf
aad
dec
pop
roll
orb
movsl
dec
popf
pop
subl
mov
lods
jle
test
cmpl
popf
mov
xorl
xor
lret
ret
push
cmp
out
mov
mov
adc
decl
into
add
adc
insb
rorl
jge
cmc
pop
fld
cli
push
or
inc
fwait
test
nop
icebp
inc
dec
in
lds
dec
push
int3
cwtl
cwtl
mov
push
cmpsb
jnp
mov
jnp
push
sbb
adc
cmp
inc
mov
call
rclb
jg
jmp
mov
adc
cmp
and
sarb
jl
imul
aad
or
sbb
and
pop
jl
mov
sub
mov
pop
mov
imul
scas
scas
sti
cmpsl
test
sub
inc
fdivrp
xor
xchg
andl
add
sub
jecxz
mov
mov
arpl
xchg
aaa
jnp
inc
enter
leave
jmp
sub
test
mov
rclb
pop
pop
add
xchg
and
pop
pop
push
aam
add
dec
shlb
insl
dec
add
mov
cmpsl
xor
mov
test
mov
xchg
sbb
jl
xchg
add
fistl
inc
sbb
sbb
and
mov
orl
dec
leave
cwtl
push
adcl
ret
jne
sub
mov
mov
add
idivl
js
test
dec
fbstp
push
push
scas
and
add
mov
push
hlt
sbb
ret
and
in
repnz
mov
aad
add
ret
out
or
sub
push
cmp
and
or
rorb
fs
xchg
or
jo
pop
jmp
shll
xchg
adc
pop
aas
sti
mov
test
pop
aam
aam
dec
inc
cltd
xchg
jno
fisubl
stos
sub
addr16
pop
cwtl
mov
shrl
cs
sbb
mov
pop
outsl
add
fsubr
mov
fwait
adc
push
mov
mov
jmp
add
dec
add
lea
in
outsl
jge
mov
test
aad
addr16
sbb
mov
ljmp
push
setp
out
data16
mov
dec
xchg
test
sub
dec
testl
sub
inc
ret
insb
inc
test
pop
imul
dec
aam
inc
sub
or
jge
or
add
clc
fdivs
mov
mov
push
daa
dec
xor
sbbb
lahf
jne
mov
jge
jmp
pop
aaa
push
stos
jmp
in
mov
cmp
mov
out
out
and
mov
test
scas
push
and
das
sub
adc
lcall
leave
pop
je
in
mov
or
or
mov
loop
inc
inc
push
push
dec
outsb
dec
xchg
in
jg
jmp
or
jns
sbb
mov
mov
popf
out
inc
jne
push
sbb
loopne
out
dec
xchg
fcmovu
inc
std
xchg
sub
push
add
je
xchg
pop
xchg
pop
lcall
and
jae
mov
fbld
aaa
fucom
cltd
and
jl
cwtl
test
push
mov
sbb
xor
mov
movsb
rcrl
and
jg
inc
sub
inc
inc
dec
jne
sub
imull
mov
xchg
dec
scas
mov
add
repz
test
pop
clc
cmpsl
pop
cld
mov
push
add
sub
xchg
mov
arpl
jge
push
lea
jbe
push
or
test
test
pop
cmc
jns
test
or
cs
jecxz
inc
lds
mov
lds
xor
fstpt
cmp
add
rcrl
mov
inc
cmp
xor
mov
cwtl
mov
jno
shlb
dec
or
or
icebp
or
imul
lds
and
aaa
cmp
leave
add
lahf
rorl
dec
lods
cmp
xchg
push
je
adc
fists
jno
pop
insb
xchg
ja
sbbl
lret
loopne
mov
into
dec
cmp
aad
out
pusha
subl
or
aam
jle
xlat
jmp
cmp
mov
pop
mov
mov
xchg
inc
add
popa
add
sub
and
fstps
mov
or
std
mov
dec
movsb
xor
mov
mov
out
xor
shl
or
push
cld
nop
fs
shrb
fcompl
out
jge
adc
push
inc
mov
pop
sbb
xor
fidivs
movsl
mov
xchg
call
cltd
repnz
jbe
outsl
mov
sbbl
mov
xlat
mov
pop
stos
cmp
sahf
test
shlb
cli
pop
inc
dec
out
nop
jnp
jl
push
js
out
mov
jbe
out
jge
negb
mov
cs
sub
or
xchg
sbb
fdivl
xchg
movsl
icebp
pcmpeqd
xor
repz
jne
jg
fistl
arpl
mov
xorl
inc
lea
in
out
incl
cmp
dec
insl
aaa
out
sbb
subl
mov
outsb
dec
jle
fs
cmc
add
out
jmp
scas
insl
mov
fisubs
cmp
divb
sarl
mov
jmp
lahf
leave
mov
pop
sbb
xbegin
mov
mov
fnstcw
lock
fsubs
xchg
sub
ret
pusha
insb
int3
arpl
and
xchg
pusha
test
push
jmp
inc
stos
dec
ret
subl
cli
mov
and
push
or
jmp
cmp
mov
adc
jp
push
add
fisubs
push
rcr
in
inc
pop
add
mov
stc
lods
add
addr16
cmp
scas
outsl
mov
ficomps
xor
jecxz
movsb
or
lret
or
mov
sub
jb
icebp
pop
mov
sub
sbb
jae
stc
jp
mov
mov
mov
add
or
xor
adcb
popa
cld
pop
dec
mov
int3
push
jmp
xor
les
pop
lods
jge
testl
movsl
gs
sahf
movsl
fsubp
xor
bnd
pop
sbb
loopne
lds
es
and
jb
jge
mov
lret
mov
ja
and
das
cmp
scas
repnz
add
jle
add
not
in
lods
push
lcall
add
insl
rcrb
loope
insl
inc
sbb
push
inc
inc
xchg
mov
aad
std
xor
fldt
mov
mov
adc
xchg
dec
xchg
and
xchg
into
inc
mov
mov
jmp
test
sub
loop
outsb
pop
sub
mov
repnz
xor
add
cmp
push
mov
lret
sbb
std
push
lcall
out
enter
les
lret
lods
or
movsb
test
sbbb
pushl
push
inc
push
dec
inc
lock
mov
sbb
adc
push
rcll
ja
sub
imul
iret
cltd
cmpsl
inc
dec
insl
mov
clc
les
orl
mov
mov
or
mov
arpl
dec
pop
lcall
cs
sahf
push
jnp
push
xchg
in
pop
jg
sub
ss
js
clc
punpcklwd
add
pusha
cld
push
rolb
ljmp
adc
sub
pusha
jmp
mov
mov
xorl
fimull
in
push
mov
sub
cmc
mov
jmp
fimuls
jp
orl
cwtl
inc
and
rcll
cli
xlat
loop
mov
rolb
lahf
jb
sbb
addl
ret
and
add
jnp
push
sbb
je
lods
mov
mov
mov
mov
lret
dec
and
cmp
sbb
and
inc
ret
aam
test
inc
in
stos
xchg
xchg
cmc
sbb
lahf
icebp
jae
cmp
dec
mov
aas
lret
mov
in
xchg
clc
outsb
cmpsb
dec
int3
cmp
insb
xor
rcll
sub
lds
daa
imul
int
jle
loopne
pop
shrl
les
shr
scas
es
fcomip
mov
cmp
fs
stc
arpl
gs
xchg
inc
jl
lahf
lret
sub
in
or
cmpsb
outsl
pop
or
xchg
mov
aaa
fs
insb
pop
mov
inc
and
cmc
aam
cmp
fwait
js,pt
in
mov
ret
movsl
sbb
arpl
pushf
pop
inc
sub
dec
sbbb
out
mov
jb
icebp
mov
xor
add
inc
mov
clc
lea
imul
mov
lock
and
xchg
sbb
arpl
sar
pusha
clc
mov
sub
inc
lock
in
icebp
test
js
sub
xchg
lret
aam
add
ss
mov
sbb
mov
fisttpl
pushf
mov
ljmp
jl
cmp
loop
fiadds
loopne
pop
scas
sarb
fisttpll
cmp
xor
push
jg
push
jecxz
arpl
pusha
gs
cld
or
jmp
jp
xor
jle
xlat
pushf
dec
loop
jno
add
push
int
jg
fmull
mov
js
sub
arpl
jmp
and
loop
lahf
mov
insb
lret
adc
cwtl
outsb
scas
out
cmp
shrl
cmc
aaa
lret
jle
cmp
stos
sbb
rcl
sbb
sub
jo
xor
pop
scas
cmp
mov
pop
outsb
xchg
mov
inc
xorb
pop
jo
repnz
adc
inc
add
or
movb
out
push
adc
js
mov
enter
movsl
aas
das
mov
outsb
inc
add
lret
mov
mov
int3
cld
out
loop
scas
movsl
out
mull
sub
pop
jns
fwait
insb
cs
mov
add
add
test
jo
inc
push
lods
mov
push
test
jae
pop
adc
push
movsl
xchg
pop
cs
aam
repz
lret
int3
push
push
imul
jle
dec
popf
or
popa
cmc
sub
xor
loope
sbb
sbb
mov
gs
xchg
mov
ja
adcb
loope
ret
push
fldenv
push
mov
mov
mov
pop
xor
pop
negl
sub
or
pop
cmp
loop
pop
jecxz
add
dec
push
and
sbb
add
jae
je
mov
pop
mov
mov
fcoml
fldt
mov
mov
in
adc
adc
pop
dec
add
mov
fstpl
inc
adc
idivb
mov
mov
out
jbe
jge
adc
ret
fidivrs
mov
aad
push
jecxz
dec
sbb
dec
inc
or
les
and
rcr
call
pop
ds
pop
dec
out
in
inc
repnz
aas
or
ret
inc
jbe
pop
cmp
loope
rclb
cwtl
sub
pop
inc
xlat
adc
inc
pop
or
jmp
dec
loope
popa
mov
popa
inc
lcall
scas
mov
std
pop
sub
inc
mov
sbb
popf
test
sub
arpl
mov
movsl
and
mov
jg
jae
xchg
push
adc
xor
iret
jb
sbb
shrb
push
jnp
imul
inc
std
test
rcrb
lcall
jle
jg
inc
lea
or
not
ljmp
jecxz
cmp
mov
outsl
shll
dec
inc
push
call
xor
ja
mov
push
dec
xchg
adc
mov
jae
sbb
lret
xchg
outsl
insl
in
cwtl
cmpl
clc
sbb
jmp
es
xchg
add
aam
into
adc
bound
mov
mov
daa
sbb
cmp
fsubl
sub
imul
inc
jb
insb
sahf
push
aam
pop
imul
mov
pop
mov
fistl
cmp
mov
test
lods
dec
fcmovb
adc
fidivs
cmp
push
push
mov
ljmp
push
les
jne
movsb
test
jle
icebp
cmp
mov
cmp
outsb
mov
or
f2xm1
movsl
xor
mov
push
nop
inc
or
scas
roll
pop
iret
lea
mov
pop
movsb
cmpsl
push
jmp
pop
mov
push
jp
jl
mov
fstps
cli
mov
or
imul
fcmovnu
inc
push
add
jecxz
or
sub
sub
cmp
movups
shl
in
mov
lcall
imul
jle
std
dec
xor
jmp
outsb
cs
loope
ljmp
mov
movsl
lahf
test
das
mov
mov
repnz
movsb
dec
cmp
sub
mov
pop
adc
imul
mov
icebp
dec
xchg
lea
outsb
mov
stos
insb
inc
and
sbb
add
sub
in
mov
inc
lahf
stc
inc
fdivs
fiadds
rorb
out
dec
lds
inc
mov
es
sbb
lea
sar
clc
sbb
xchg
sub
daa
and
mov
mov
repz
cmpsl
rol
icebp
cmp
mov
adc
ror
ret
in
mov
out
ss
and
xchg
push
jge
hlt
push
jnp
sbb
or
fiadds
add
fdivrs
jge
jne
xor
xlat
cmp
outsb
lock
lock
loope
sub
addb
xor
ljmp
cmc
mov
jns
jb
jns
je
add
add
xor
outsl
cmpsb
addr16
sub
cmpsl
mov
push
jb
loope
lea
xchg
aaa
lcall
push
push
out
xlat
pop
jge
fidivrl
lcall
sbb
sub
test
shr
jge
paddw
inc
lods
std
insl
jp
or
int
popf
jl
lcall
movl
jl,pt
es
mov
int
lret
loopne
insl
xor
jnp
mov
dec
and
xor
jns
lret
push
lret
je
lret
add
adc
jb
lahf
int
jb
lcall
test
inc
es
sbb
push
int
lcall
jle
lods
xchg
enter
std
addb
mov
jbe
mov
int3
jnp
mov
daa
loope
mov
mov
jne
fwait
xchg
or
fadd
std
xor
pop
cmp
push
mov
mov
into
scas
outsl
mov
sbb
or
sahf
push
shl
ljmp
xchg
add
xlat
xchg
aad
pop
lods
sbb
adc
lods
popa
inc
and
mov
mov
insl
mov
ljmp
xchg
repz
nop
sbb
adc
add
push
mov
push
notb
icebp
add
cmp
jp
cmp
cmp
mov
add
xor
arpl
xor
test
fs
cli
lret
adc
jg
dec
int
inc
cli
inc
cmp
jg
lret
jo
and
inc
dec
jnp
push
push
xor
xchg
push
mov
pop
mov
inc
and
jns
popa
push
cmp
dec
leave
fisubrl
out
mov
mov
adc
sbb
int
int
cmp
std
jecxz
fidivrl
js
mov
test
lods
lods
xor
in
push
into
sub
dec
jmp
sub
loop
out
popf
xchg
aam
adc
out
add
inc
xchg
loop
add
enter
dec
ficoms
cmp
push
fsts
adc
lahf
ficoml
pop
push
xchg
mov
jo
in
jo
lahf
loope
rorb
fsubr
pop
sub
repnz
add
sar
ljmp
xchg
sti
sub
pop
xchg
ss
test
dec
loope
sbb
shll
movsb
xor
dec
andb
addl
iret
aad
lret
repnz
pop
adc
sbb
mov
push
push
inc
adc
adc
scas
pop
fsubs
pop
popf
adc
fdivs
ja
pop
sahf
pop
sahf
ljmp
cmp
pushf
dec
lds
jg
mov
push
addr16
jb
das
inc
gs
dec
pusha
fdiv
je
push
cmpsl
sti
cmc
pushf
mov
and
fwait
test
xlat
push
insb
pop
pop
out
xchg
jl
inc
dec
xchg
ja
inc
in
add
subb
mov
jmp
daa
mov
mov
lahf
cwtl
xabort
sti
daa
outsb
jnp
enter
adc
jno
outsl
aam
test
mov
and
dec
mov
jae
filds
dec
lret
push
dec
sub
iret
outsl
push
mov
mov
insl
les
fidivs
js
outsb
addb
lea
add
pop
sub
add
scas
mov
loopne
jb
push
loope
aas
lods
push
xchg
es
lahf
leave
daa
cltd
ja
ret
scas
sub
out
fbstp
xchg
jns
sahf
popa
xchg
push
mov
in
test
rcrb
pop
mov
dec
mov
inc
jle
mov
imul
xor
ja
call
push
push
insb
sbb
mov
movsl
add
in
test
into
mulb
jno
out
push
pop
sub
pop
in
fcmovne
jg
cli
pusha
push
fbld
daa
data16
mov
cli
jecxz
in
loop
out
inc
cmp
arpl
and
pop
ljmp
dec
enter
mov
xor
xchg
xor
test
aas
jb
mov
call
bound
pop
jne
divb
inc
pusha
inc
cwtl
loopne
xchg
les
push
or
and
mov
push
dec
dec
stc
xor
mov
or
outsb
outsl
std
mov
or
imul
sar
mov
int3
cwtl
or
xchg
das
sub
pop
inc
cmpsb
sbb
dec
push
push
sub
stos
sbb
in
stc
mov
push
test
mov
push
mov
push
test
mov
xchg
in
jg
mov
adc
pop
sbb
rcll
mov
std
shrl
repnz
push
push
adc
les
add
push
adc
xor
sub
dec
sub
mov
mov
hlt
call
jle
insl
sbb
addr16
stos
nop
ds
mov
mov
sbb
cmc
inc
out
adc
sub
dec
daa
or
mulb
mov
and
andl
sbb
rcll
or
repz
push
das
ds
sub
push
int3
inc
mov
dec
fcmovnb
add
cmp
mov
mov
daa
adc
arpl
lea
push
rol
hlt
in
ret
shlb
nop
scas
jecxz
ret
and
es
lock
inc
loop
inc
add
mov
dec
sbb
adc
fisubs
mov
pop
xchg
inc
das
ljmp
lds
xlat
movb
incl
stos
cmpsb
add
int3
popa
push
push
xor
aaa
and
rolb
call
fldcw
cmpsb
inc
and
cmpsl
and
or
xor
cmpb
push
aad
pop
imul
nopl
fsubrs
inc
mov
stos
aad
lods
jae
inc
sti
pop
lahf
push
mov
push
jnp
xchg
xchg
in
out
push
aaa
divl
and
xchg
jle
js
into
and
xorl
addr16
outsb
popa
outsl
xor
movsb
repz
sbb
repz
push
jmp
stos
mov
lret
imul
jecxz
inc
mov
pop
subb
push
ja
test
sti
push
gs
dec
cmp
jbe
sub
mov
insb
inc
imul
mov
pop
or
mov
mov
popf
push
lahf
xchg
pop
xor
outsl
mov
xor
mov
inc
or
enter
sbb
in
daa
fdivrl
ljmp
inc
test
or
cld
out
xor
xchg
add
add
in
and
stc
pop
mov
mov
jge
jbe
enter
adc
pop
test
add
ret
movsl
xor
mov
jnp
jmp
jge
shl
hlt
cli
rcll
flds
sbb
or
push
int3
lea
sub
dec
stos
mov
loope
dec
dec
test
mov
pop
push
mov
rorb
std
sbb
mov
pusha
sbb
int3
mov
stos
jne
insl
sbb
in
sbb
sub
out
in
mov
jne
sbb
dec
iret
xor
adc
mov
cmp
push
and
jo
imul
adc
mov
arpl
cmp
xchg
xor
xchg
push
xlat
jle
fs
mull
in
mov
mov
adc
in
jns
inc
push
dec
aad
push
fstps
in
mov
xchg
flds
out
xor
push
pushf
cmp
mov
jo
push
dec
mov
mul
cmpsb
outsb
mov
mov
mov
sub
test
cs
or
rclb
sub
jl
pop
int
mov
int3
rclb
test
insl
inc
ret
push
mov
xor
out
cs
les
jmp
lods
fmulp
jp
sub
sub
mov
jmp
sub
out
lock
js
lahf
mov
pop
dec
das
imul
lea
outsl
int3
cmp
sbb
movsb
movsb
push
addb
sbb
hlt
adc
and
mov
aam
mov
cmp
nop
sub
and
push
cmp
ljmp
dec
enter
xor
outsl
sub
out
xlat
jnp
mov
sub
xchg
das
inc
adcl
and
jg
push
and
xor
jb
lret
int
sub
push
fldl2t
fstpt
ret
cmpsb
jmp
jecxz
push
ds
xchg
sbb
movsl
aaa
sbb
cmc
bound
pop
lahf
add
mov
lea
push
ljmp
rclb
mov
leave
jo
es
xchg
add
mov
cmp
mov
lock
and
dec
popa
sahf
push
insb
mov
and
jg
cmp
push
in
sbb
bound
inc
pusha
cmpsl
loope
mov
clc
inc
xlat
in
or
js
adc
pushf
outsb
inc
mov
mov
jnp
fdivp
sub
ret
sub
adc
out
add
insb
pop
loope
loop
inc
popa
hlt
xchg
jp
inc
cmpl
shll
movsl
cwtl
inc
pop
and
jae
mov
sub
cmpl
cmp
repz
ss
jg
sbb
jp
add
adc
jns
sub
je
andl
ja
and
lahf
das
mov
push
pop
sub
jnp
sbb
ss
jno
movb
mov
insb
cmpsl
rcl
fwait
out
dec
imull
or
and
dec
xor
mov
sar
pop
mov
mov
push
aam
push
push
aaa
jl
outsl
movsl
in
and
jo
cltd
push
mov
les
pop
les
shr
mov
test
pop
mov
cmp
ret
clc
push
ret
push
cld
mov
rcrl
bound
popf
push
jns
and
movsl
int
shrb
add
in
sub
dec
sbbb
repz
xor
pop
jno
ljmp
jle
ds
lahf
mov
mov
mov
xorb
cmp
fldt
repnz
das
lahf
test
lods
insb
mov
ja
mov
pushf
ficoms
loopne
icebp
call
fisubrl
insb
adc
jmp
out
xchg
outsl
push
jbe
es
xorl
cmp
test
xchg
in
in
sbb
cmpsb
sbb
sub
test
xchg
mov
add
pop
sahf
out
pop
iret
or
nop
xor
push
cltd
scas
js
push
add
cld
popf
push
and
push
adc
add
cltd
or
pop
push
outsl
test
xlat
arpl
xchg
or
mov
jecxz
cltd
jp
lds
ss
cmc
pop
cld
sub
rolb
clc
dec
and
fiadds
xor
xchg
lds
dec
mov
push
or
aam
daa
in
xor
or
into
cwtl
scas
xchg
mov
leave
xor
or
outsb
mov
dec
mov
add
mov
sub
int3
insb
imul
push
mov
or
into
xchg
lret
mov
mull
int
rorb
xchg
lods
inc
popf
out
ret
mov
add
ss
lods
arpl
jo
es
and
sbb
orl
daa
rcll
nop
jmp
xchg
jno
sub
movsb
pop
movsb
mov
pop
mov
call
stos
inc
fs
xchg
rcrb
cmc
mov
adc
loop
mov
clc
mov
pop
or
fwait
adc
adc
push
mov
es
out
xchg
push
pushf
push
xor
fsubs
pusha
inc
dec
in
and
mov
fmul
pop
daa
jno
scas
aam
je
push
lods
jbe
stos
out
lea
sub
repz
fwait
push
fs
gs
pop
popa
sbb
adc
inc
pop
push
nop
push
movsl
enter
pushf
gs
pop
cmpsl
iret
stos
xchg
lods
adc
pop
mov
inc
inc
dec
jns
mov
xchg
lods
rcrb
bound
mov
mov
adc
adc
jno
jmp
xor
cmp
mov
mov
or
enter
sbb
mov
xchg
call
fadd
sub
cbtw
cmpsb
sbb
jbe,pt
loope
movsb
cltd
xlat
pop
lea
sbb
or
lods
ret
sarb
cs
test
fdivrs
sbb
out
push
std
mov
loope
aaa
push
add
jno
cmp
push
lock
sbb
inc
xor
or
jg
popf
pusha
inc
pop
ficompl
inc
dec
dec
in
daa
in
ss
out
mov
dec
jecxz
and
shlb
sub
sub
call
scas
and
cltd
mov
cmp
cli
loopne
sbb
pushf
in
pop
imul
data16
jmp
push
stc
xor
into
pop
pushl
or
jns
mov
or
jl
jp
stos
sub
fsubrl
imul
ljmp
movsl
mov
bound
lods
sbb
dec
call
push
adc
sub
mov
pop
dec
fcomps
ret
ss
push
outsl
rcl
repnz
cltd
jne
pop
in
lcall
xor
ret
aas
and
and
imul
mov
out
ds
filds
les
cltd
mov
jns
or
adc
ficomps
cwtl
insb
arpl
into
cmpsl
jmp
in
faddp
mov
mov
sub
inc
rorl
adc
mov
daa
add
les
dec
stos
mov
inc
sbb
mov
shr
xchg
and
cmp
je
mov
mulb
fisttpll
pop
test
hlt
ret
stos
push
or
or
in
adc
jl
and
xchg
xchg
adc
mov
ret
xchg
lock
cmc
jo
jns
add
push
cmp
push
scas
das
dec
xchg
pop
push
cmp
loopne
mov
push
ds
cmpsl
and
test
pusha
adc
rcll
div
push
pop
pop
in
repz
fsts
fildll
jp
xor
lds
pop
lea
fcmovb
pop
andb
jg
inc
fs
lea
inc
mov
mov
popa
iret
xor
aad
test
sub
sub
std
je
xchg
pop
and
mov
and
mov
call
test
sbb
icebp
sbb
repnz
mov
jae
mov
jbe
cmp
sub
push
xchg
dec
and
enter
mov
lcall
dec
pop
mov
aam
lods
push
xor
cmp
jae
ja
cmp
loop
lcall
jno
xchg
and
stos
rcrb
push
or
addr16
aad
aad
xor
pop
push
fcoml
add
mov
xchg
sub
mov
inc
int3
mov
and
sub
ds
dec
popw
lret
int3
sahf
pop
mov
adc
and
push
cmp
xchg
es
in
xchg
sub
push
jg
cmp
push
sbb
xor
sub
xorb
adc
ret
xchg
dec
cmpsb
or
cli
dec
repnz
std
mov
jmp
int
and
pop
inc
scas
add
mov
mov
pop
lahf
lds
insl
push
adc
push
mov
adc
test
shrb
mov
mov
loop
dec
jne
sub
pop
loope
cmp
cmc
sub
je
into
sbb
adc
movsl
cltd
mov
movsb
cmp
push
or
add
jne
inc
xor
mov
push
mov
lock
xchg
testl
dec
rol
cmpsb
scas
push
pop
push
mov
movsl
pop
lahf
dec
lods
push
scas
aas
lcall
js
xor
jl
mov
pushf
xchg
in
imul
daa
xchg
jg
inc
pop
or
sub
push
outsl
jmp
and
and
xchg
mov
leave
mov
std
insl
push
jbe
cmpsl
enter
sub
cmp
iret
adc
xchg
add
mov
loopne
popa
mov
cmpsb
rorl
jnp
mov
xchg
cmpsl
cmpb
fs
adc
cmp
mov
pop
les
cmpsl
out
cltd
jge
sub
call
mov
pushf
inc
inc
dec
sahf
and
xor
cmp
add
test
ja
repnz
pop
test
add
ret
loopne
ficomps
mov
mov
or
into
sub
loope
leave
ret
in
fwait
jbe
addr16
adc
push
sti
cltd
into
sbb
dec
insl
cvtps2pi
jns
push
arpl
rolb
add
stc
xchg
in
sub
cmp
mov
hlt
dec
pop
mov
mov
ds
inc
cmp
mov
sub
mov
sub
int3
cmp
scas
cs
lret
mov
adc
push
mov
dec
stos
push
inc
inc
movsb
test
jl
push
mov
movsl
daa
dec
pushf
add
fsub
addr16
mov
inc
push
dec
clc
xchg
insb
cltd
sbb
push
xchg
xchg
call
adc
cmpsl
add
inc
ss
jecxz
gs
pop
sbb
gs
fdivrp
sbb
cmp
xor
ljmp
mov
bound
add
add
shrl
cltd
int
mov
ljmp
test
je
std
sahf
dec
lahf
int
movsb
pushf
pop
mov
stc
pushf
mov
add
jl
adc
xchg
jno
add
xorl
jecxz
dec
jb
inc
mov
cmp
xor
fidivl
dec
fistpl
lods
xchg
ja
and
xchg
cmp
mov
mov
and
bound
xor
or
arpl
inc
fisubs
jnp
bound
aas
push
shll
lock
jg
cmp
mov
xor
ja
pop
ljmp
jae
out
outsl
arpl
orl
inc
mov
clc
imul
xor
mov
inc
push
adc
sub
jne
or
pushf
sbb
popf
mov
mov
mov
sub
fcomi
mov
mov
sub
pop
rorl
jns
cmp
out
mov
ret
test
cmp
mov
jns
aam
push
rorl
out
shlb
inc
icebp
clc
testl
ret
ljmp
add
cs
test
xor
mov
testl
insl
sub
adc
inc
mov
adc
cltd
out
les
fs
push
bound
xor
lahf
mov
lret
adc
dec
lahf
loopne
sbb
xlat
into
add
adc
push
fisubl
mov
ss
aas
or
push
ljmp
pop
adc
inc
out
js
pusha
jno
cmp
rorl
xor
das
scas
mov
adc
xchg
dec
out
je
retw
pop
rclb
mov
out
inc
into
aaa
fs
fbld
adc
cltd
cli
pop
jne
cmp
enter
inc
sub
push
std
mov
push
cmp
imul
gs
loope
xchg
mov
testl
pop
cmp
or
add
cs
out
or
xor
jne
rclb
ja
jns
jae
mov
add
ljmp
sbb
in
idiv
sbb
mov
sarl
inc
aaa
arpl
aas
push
xor
sub
jbe
sti
cli
xchg
sbb
cmp
sbb
dec
push
inc
rcl
mov
jl
adc
pop
daa
and
xchg
nop
popf
mov
ss
jmp
inc
iret
enter
push
call
dec
inc
lods
mov
mov
fwait
adcl
lods
fiaddl
pop
repz
xchg
ficoml
push
or
xchg
lea
into
mov
and
nop
daa
adc
xchg
or
cmp
inc
mov
jb
or
jmp
jae
movsb
push
out
fisubrs
ljmp
gs
mov
shr
or
push
mov
add
dec
in
add
jg
dec
popa
scas
pop
or
aad
lahf
xor
push
and
and
push
xor
cmp
dec
adc
insb
loopne
xchg
movsl
fcompl
sub
out
stos
mov
pusha
xor
xchg
jp
inc
and
xor
shll
scas
test
scas
xchg
push
sub
inc
test
insl
fidivl
ja
mov
jmp
push
in
pop
dec
and
jo
push
roll
ret
mov
les
test
jo
pop
loopne
mov
or
rep
fsubp
lret
push
scas
xchg
out
imul
cmp
sbb
sbb
sub
mov
dec
cmp
ljmp
iret
outsb
inc
scas
and
jns
dec
xlat
jl
xchg
popf
subb
mov
cs
jno
out
jbe
test
nop
and
cld
mov
pop
outsl
mov
mov
hlt
cltd
adc
fistps
dec
xchg
test
ret
es
pop
hlt
xchg
in
dec
inc
lods
pop
push
sub
fdivr
mov
in
add
lds
pusha
push
xchg
scas
and
jl
push
jae
mov
push
inc
cld
lods
xchg
andb
sbb
pop
pop
mov
push
and
inc
sbb
inc
ja
bound
sub
fidivs
sub
mov
fbld
les
adc
scas
mov
xor
out
pop
jge
mov
cs
sub
test
xor
jmp
push
pop
push
dec
std
in
mov
dec
js
adc
fmuls
ss
mov
test
sarl
sbb
rolb
xchg
push
sbb
push
push
outsb
push
loop
xchg
outsl
cwtl
les
and
jb
mov
aas
stos
add
and
push
jns
lods
dec
adc
sbb
push
jo
jne
das
rclb
in
lods
fdivr
sbb
ds
jb
inc
ret
mov
jnp
pop
lahf
stc
test
ret
mov
test
dec
imul
add
jl
mov
arpl
mov
sbb
mov
pop
cmp
cmp
adc
cmp
mov
movsl
mov
and
lret
jmp
shlb
js
das
out
push
mov
or
push
pop
dec
and
lret
push
ret
repnz
sub
inc
jnp
jnp
outsl
sahf
xchg
push
mov
sub
xchg
jns
inc
insb
add
insb
int
push
es
jne
rcrl
jmp
outsb
push
in
jecxz
pop
orb
lret
sbb
scas
nop
into
cmp
mov
add
sub
clc
nop
mov
mov
sbb
imul
xchg
fucomi
push
mov
mov
push
test
or
int3
cmp
nop
int
into
mov
push
sbb
jne
inc
dec
arpl
rclb
sub
mov
jge
movsb
mov
loop
pop
out
das
dec
mov
cmpsb
xchg
xchg
cwtl
out
int
inc
mov
pushl
in
adc
jne
mov
dec
sbb
pop
adc
je
add
jge
adc
push
rorl
push
cmp
pop
sub
hlt
inc
das
xchg
fcoml
jb
aaa
push
dec
jmp
movsb
jb
push
rclb
pop
dec
xor
fisttpl
sbb
xor
shll
jbe
pusha
loopne
cmp
loop
cltd
mov
inc
andb
sbb
fs
imul
lret
sahf
mov
jle
ds
cwtl
and
lret
repnz
jno
jge
mov
xchg
and
mov
je
stos
bound
and
movsl
call
inc
xchg
inc
jae
pop
pop
and
jns
or
add
sbb
cmp
mov
sbb
loop
data16
bound
int3
fadd
clc
push
sbb
jae
push
test
cmp
mov
inc
in
rcr
push
sub
cmc
sub
xchg
pop
test
cmp
jb
lahf
and
rcrl
fistpl
rcrl
adc
cmc
loope
xchg
jns
shlb
frstor
xchg
dec
push
mov
pop
mov
mov
adc
mov
and
ret
mov
push
nop
out
hlt
jg
dec
das
and
rcrl
xor
mov
in
lds
test
adc
xchg
femms
stos
pop
repnz
mov
xor
push
fwait
xchg
out
cmpsl
inc
pusha
fisttps
in
adc
fists
cs
xor
insb
dec
mov
xor
sbb
mov
dec
scas
sub
loopne
xchg
ficoms
xchg
pop
ljmp
lods
ja
fnstcw
push
adc
xchg
lahf
mov
or
in
mov
lods
pop
jb
xor
lods
push
xchg
add
xchg
movsl
cmpsl
adcb
subl
dec
out
fdivrs
leave
xor
add
pop
push
or
fcomp
push
pusha
cld
std
inc
je
loop
test
push
out
cli
in
xchg
les
loope
outsb
outsl
repz
leave
icebp
adc
pop
mov
imul
dec
sub
xor
adc
dec
insl
sbb
cmp
imul
int
ds
daa
cmpsb
dec
popa
popf
adc
test
adc
push
fisubrs
add
icebp
cli
enter
xchg
lret
add
mov
jp
and
mov
cwtl
loopne
jno
movsl
mov
sub
jnp
xlat
xchg
fcmove
jne
dec
sti
enter
cmpsb
mov
pop
fbld
inc
sti
cltd
sti
mov
cmp
push
pop
lea
popl
dec
push
ja
dec
xchg
jg
fs
icebp
setg
pop
in
imul
loopne
out
add
mov
jmp
mov
xchg
pop
mov
cwtl
mov
mov
test
pop
inc
mulps
les
mov
inc
pop
in
cmp
por
loope
icebp
jp
adc
inc
and
mov
mov
sbbl
int3
mov
xchg
ss
lret
lret
mov
aaa
jecxz
dec
movsl
dec
decl
push
out
adc
or
mov
xchg
test
enter
es
push
insb
inc
sahf
mov
xchg
jne
ds
adcl
ja
cltd
xchg
iret
xlat
scas
ja
mov
out
in
std
fildll
sbb
xchg
pop
stos
mov
repz
push
push
sub
mov
jle
jns
insb
loope
lea
push
cmp
insb
cmpsl
xor
repnz
pop
addr16
mov
test
test
insl
fisubl
push
jno
cmp
imul
dec
jl
test
inc
lret
jns
les
leave
jge
mov
test
ficoml
movsl
push
aad
cs
std
xlat
fimull
pusha
xor
push
mov
dec
pop
sub
and
or
sbb
das
mov
xchg
xchg
jne
mov
push
mov
jb
aad
xchg
jb
inc
xchg
jg
xor
repnz
mov
push
jp
xor
sbb
sub
pop
mov
push
into
jno
sbb
scas
xchg
jle
or
repnz
stos
pop
pop
xor
aas
sub
pusha
icebp
xchg
cmpsl
cwtl
dec
fsts
sbb
es
sahf
out
sub
push
push
mov
jmp
dec
das
out
add
bound
xor
shr
mov
mov
push
mov
aas
outsl
je
clc
mov
mov
mov
icebp
ror
adc
inc
sbb
add
testl
jge
dec
fcomps
iret
loopne
jecxz
mov
inc
fmull
xchg
loope
push
cmp
fistpl
or
push
in
loopne
shll
xchg
adc
or
push
push
mov
fistpll
mov
test
sbb
outsb
out
sti
int3
sarb
aam
cmpsb
push
pop
xchg
push
lea
mov
inc
or
rcll
das
cli
jle
mov
pop
jne
int3
scas
cli
adc
fimuls
lret
loopne
and
orb
pop
popa
xor
nop
aaa
mov
xchg
shrb
xchg
sub
sarl
lcall
jge
aas
ljmp
loope
lret
dec
xchg
loopne
shrb
nop
jnp
mov
dec
fsubp
aad
clc
jmp
movsl
shlb
and
add
int
in
jl
enter
imul
mov
imul
faddl
aam
dec
push
mov
jns
ret
ljmp
pop
mov
daa
enter
out
mov
cmpb
jno
fnstsw
sub
repz
clc
int
out
xor
into
ret
lea
or
popa
pop
or
xor
inc
mov
xchg
sbb
xchg
out
shll
movsl
orb
mov
repz
push
rol
es
out
imulb
mov
inc
lea
mov
loope
pop
sub
xchg
popa
mov
and
ffreep
daa
jnp
cmp
ret
sub
loop
mov
jns
cld
sbb
pop
negl
out
imul
std
pop
jge
jnp
push
jl
je
sub
jmp
or
jns
pop
inc
insb
mov
pause
aad
mov
mov
push
test
xchg
outsb
sub
push
cmc
sbb
hlt
shl
fcomp
repz
and
jg
jae
arpl
in
lods
mov
add
outsl
add
cmp
movsl
dec
mov
adc
mov
stc
add
and
test
ljmp
sub
int3
jl
nop
in
mov
push
imul
nop
pop
out
lea
sarb
and
sahf
test
stos
arpl
jne
inc
outsl
dec
push
nop
sub
loop
pop
data16
xorb
and
push
fnstenv
test
mov
adc
out
in
push
std
mov
int3
fsubr
adc
sbb
xchg
call
pusha
hlt
movsb
sub
sub
js
test
mov
ret
pop
mov
movsb
lods
mov
sbb
lods
mov
add
xor
sub
mov
scas
insb
mov
call
out
push
sub
or
arpl
mov
daa
lods
and
mov
jo
xor
ud2
xchg
gs
js
bnd
cmp
pop
mov
mov
cld
push
xchg
leave
jg
mov
mov
pushf
pop
xchg
mov
repnz
sub
jle
jbe
push
xor
dec
mov
daa
mov
ds
add
bound
cmp
repnz
sbb
mov
stos
jecxz
int
enter
or
ljmp
int3
addr16
xchg
adc
mov
cmp
jmp
mov
popf
daa
adc
pop
negb
pop
sbb
mov
lret
cs
out
loope
push
adc
cld
subl
aaa
sbb
inc
xchg
test
fimull
sbbb
out
gs
mov
mov
cs
in
hlt
stc
mov
mov
jb
and
scas
adc
enter
cmp
xor
sub
dec
sbb
incb
rcrb
sbb
rcrl
js
std
jae
xchg
cmp
sbb
cmc
xor
imul
out
les
adc
sbb
enter
test
insl
out
aaa
fs
pop
xchg
clc
xor
or
add
dec
mov
push
inc
and
mov
repz
mov
imul
in
idivl
and
dec
hlt
pop
xchg
ficomps
aam
in
pop
stc
push
cwtl
xor
test
repz
mov
xor
inc
and
xchg
aad
inc
cmp
lret
shrb
cmp
cs
bound
inc
mov
fcmovnu
or
cld
pushf
movsb
cmc
inc
mov
sti
es
add
fsubs
xchg
xor
ret
orl
call
add
cmpsb
cmpb
rol
insl
and
xor
mov
test
cmp
test
xor
loop
not
push
movsl
pop
cld
xchg
jg
enter
cwtl
fdivr
xchg
xor
cs
aaa
movsl
add
cmp
mov
je
dec
rclb
cmp
sbb
jbe
add
repnz
pop
dec
push
aaa
stc
or
test
clc
ret
dec
fcmovu
ljmp
jb
adc
sub
mov
cmp
xchg
jne
push
mov
loopne
xchg
lods
cmp
fmuls
inc
cmp
pop
jnp
jmp
fisttpl
inc
and
dec
call
test
sbb
pop
inc
aaa
xchg
xor
add
in
into
sub
loopne
nop
cmp
insb
dec
xlat
dec
aas
push
shll
loopne
inc
or
jge
xchg
out
jnp
push
and
mov
dec
scas
ret
push
stos
mov
js
jg
mov
das
arpl
jge
int3
int
xchg
fidivl
lret
inc
mov
and
sub
add
fidivrl
fstl
xor
or
pop
lret
out
leave
fistl
push
cli
movsb
inc
in
xchg
jecxz
push
ffreep
stc
outsb
push
lea
jne
popf
xchg
shrl
cmc
push
mov
sub
addb
inc
in
jp
call
push
insl
out
pop
insl
xchg
adc
mov
mov
sbb
xor
pushfw
inc
push
fsubl
test
mov
imul
ja
pop
jns
jge
mov
pusha
sahf
xchg
cmpsb
mov
cmpsb
or
cmp
cld
ja
jg
sub
scas
cmp
mov
dec
cs
cmp
fcomp
sahf
sbb
aam
mov
sbb
xor
mov
fs
sbb
lds
or
adc
addr16
mov
and
pop
lods
jno
jbe
pop
enter
aaa
cmp
gs
mov
inc
ss
xchg
sub
xlat
bndldx
es
inc
mov
dec
sub
mov
out
cmp
mov
adc
popa
daa
cli
loope
sbbb
xor
out
mov
xchg
lea
in
sub
sub
ss
mov
mov
ficoml
jns
jp
xchg
les
xchg
mov
dec
lods
xlat
pusha
sahf
xlat
lcall
and
cltd
pop
jb
test
add
mov
push
xchg
push
dec
jge
repz
push
adc
xchg
and
mov
mov
xor
jl
and
or
pop
mov
xchg
loope
sub
sbb
arpl
pop
mov
gs
call
faddl
jle
in
jbe
clc
fsubrl
das
outsl
jbe
hlt
mov
or
fstps
fidivrl
outsb
cli
jle
data16
sub
ffreep
cmp
push
lods
add
lahf
dec
or
pop
fiadds
dec
pop
xor
ret
adc
in
add
mov
lret
jno
xor
add
adc
out
xchg
mov
sbb
repnz
fbstp
cmc
mov
mov
fisubrl
dec
push
imul
adc
or
mov
adc
lods
add
jl
mov
pushf
adc
and
stc
pop
push
or
leave
inc
lret
pop
mov
or
jl
pop
or
push
push
push
in
push
xor
jns
and
mov
and
mov
leave
movsb
shrb
clc
inc
mov
push
dec
movsb
lret
mov
fstpt
in
lahf
loopne
stos
jo
add
xor
xor
dec
or
das
lahf
jo
inc
loope
int3
mov
push
push
out
pop
es
xor
inc
aad
test
fmuls
mov
mov
sbbb
inc
sahf
cmp
cs
pop
shll
sbb
cmp
dec
push
addr16
jge
arpl
sahf
jno
and
mov
dec
aad
adc
mov
cld
xchg
fcmove
popf
mov
sbb
push
imul
jns
pop
pop
std
sub
push
xchg
imul
jae
out
sub
xor
addr16
sbb
mov
adc
sbb
xorb
rcr
fisubl
cli
jne
cs
push
cwtl
push
mov
neg
xchg
scas
lods
jnp
mov
cmc
xor
stos
lock
sbb
and
xchg
inc
jecxz
xchg
jmp
xor
shll
xorb
jbe
je
dec
mov
dec
dec
inc
push
loopne
lds
fsubrp
adc
mov
js
xlat
jecxz
dec
repnz
push
jae
and
mov
jns
mov
push
iret
fmull
pop
inc
and
sahf
mov
lret
xor
sub
ret
das
add
and
dec
mov
mov
xchg
call
outsb
xor
cmp
cmp
xor
lock
mov
mov
or
scas
jle
inc
subl
add
mov
and
push
inc
jecxz
in
adc
scas
lds
sbb
std
and
mov
fdivr
adc
imul
movsl
adc
mov
add
cmp
popf
lret
jp
cmp
adc
loopne
pop
push
push
mov
mov
out
xor
dec
dec
lret
int
mov
dec
xor
pop
cmpsb
sbb
push
aad
push
cmpsl
ja
cmp
cmp
shlb
jp
roll
stc
shlb
xchg
movsl
aas
ret
shl
cltd
aam
fstps
jo
and
xorl
inc
hlt
cmc
pop
fisubrs
mov
add
outsl
les
sbb
xor
cmpsb
mov
mul
pop
movsl
sbb
inc
pop
cmp
test
push
jo
push
cmp
or
loope
scas
imul
into
in
fcmovnu
cmc
in
repnz
mov
repnz
ljmp
fnstsw
scas
stc
sub
test
aam
jecxz
imul
ljmp
es
pop
or
shrl
push
loopne
cmp
mov
xor
insl
xchg
loop
stos
cmc
gs
sbb
fwait
dec
mov
pop
inc
push
jmp
ret
push
enter
mov
cltd
dec
aad
cmp
sub
nop
in
mov
pop
dec
xchg
ss
inc
mov
ret
xchg
lret
inc
jo
cmp
mov
mov
push
pusha
and
imul
add
adc
sub
insb
jne
sbb
cltd
add
das
fnstenv
xor
pop
ds
mov
mov
lret
aad
xchg
mov
fisubl
mov
sarl
fistpll
insl
inc
inc
dec
push
lods
push
bswap
pop
int3
rorb
push
sbb
inc
push
xchg
pop
loopne
pusha
mov
mov
scas
cmpsl
cmpsb
inc
or
jno
xchg
mov
mov
dec
or
cmp
cmp
inc
fnstcw
mov
mov
cmp
mov
insl
jns
ja
adcl
xor
mov
pop
mov
dec
inc
jnp
cld
xchg
xchg
scas
adc
outsb
data16
aas
mov
dec
cltd
inc
nop
sub
adc
mov
cs
dec
mov
adc
test
sti
adc
fsubrs
mov
pop
mov
xchg
cmp
xchg
push
or
pop
sti
divl
das
mov
add
mov
popf
cmpsl
loop
pop
fisttps
add
jge
push
clc
cmp
das
adc
frstor
icebp
insb
scas
std
sahf
movsl
in
fmul
dec
cmp
jp
xchg
sub
loop
jbe
sbb
scas
mov
outsl
adc
dec
aas
push
dec
out
xchg
rcl
sub
hlt
jp
xchg
mov
cltd
inc
add
xchg
jle
jge
jge
pop
int3
loopne
adc
cltd
pop
mov
jnp
ficomps
dec
mov
aaa
mov
adc
repz
mov
daa
xchg
rclb
pop
push
push
out
in
aam
and
mov
push
mov
dec
sbb
sub
push
outsb
mov
data16
outsl
testl
xchg
out
ljmp
push
in
dec
adc
sarl
add
repz
mov
inc
jmp
and
and
cmp
pop
lods
add
lds
inc
mov
int3
ljmp
shlb
insl
mov
insl
in
xor
sbb
test
out
mov
pop
pop
lds
arpl
nop
shrb
xor
fs
xchg
rol
js
fnstcw
cmp
or
mov
dec
jno
push
jne
push
jmp
inc
jns
mov
xchg
mov
xchg
ds
adc
andl
push
pop
xor
mov
mov
stc
cmpsb
pop
jns
movsb
loope
jp
insb
jo
andb
mov
push
imul
push
inc
cmc
daa
lea
in
movsb
dec
pop
jl
adc
bound
inc
jg
sub
jmp
dec
jae
inc
jne
pop
or
fwait
leavew
hlt
and
dec
dec
cmpsl
loopne
in
testb
add
mov
out
iret
mov
or
cld
imul
cmpsb
loope
daa
stc
popf
inc
inc
sub
sub
lcall
xor
ja
or
xchg
aas
mov
loopne
test
fs
int
jbe
xchg
xor
mov
pop
jno
and
jg
xchg
imull
fimull
jns
adc
out
pop
out
fistl
jle
rorb
adc
xor
adc
inc
sbb
push
arpl
cmp
or
in
inc
lea
rcrb
nop
outsb
int
dec
inc
push
jns
pop
pop
cli
fdivl
sti
pop
sub
int3
push
or
push
and
mov
sti
adc
roll
loopne
je
loopne,pt
xchg
lcall
test
push
shl
lods
sahf
les
dec
jg
xchg
aam
roll
nop
out
push
pop
pop
outsl
cmp
xor
jecxz
sbbb
in
push
hlt
add
lcall
outsl
adc
outsb
mov
fcmovb
dec
jb
gs
jns
aas
xor
xchg
sub
cmp
mov
jae
mov
or
push
jecxz
push
pop
fsub
in
xchg
xlat
cmp
jo
pop
sbb
cld
xchg
es
lock
popf
push
mov
sahf
xchg
mov
mov
pop
push
mov
into
cmp
jg
mov
pop
dec
lret
aaa
repnz
mov
int3
sub
xlat
inc
icebp
inc
stc
jl
inc
push
or
lret
aaa
xchg
mov
lcall
mov
sbb
push
fs
and
mov
sub
outsb
js
scas
ljmp
fsubp
pop
or
stos
je
mov
mov
data16
or
xor
push
aad
sub
cmc
mov
mov
push
stos
stos
daa
andb
ds
mov
negl
ljmp
mov
or
movsl
cmp
or
mov
shlb
and
push
pop
or
cmp
push
iret
mov
xchg
fs
lret
or
mull
aas
sub
mov
jbe
stos
dec
jb
imul
mov
mov
mov
mov
mov
and
xor
adc
xorb
data16
les
rcrl
mov
xor
or
int3
sub
insb
inc
or
jge
add
pop
inc
ror
sahf
andl
rorb
cmc
rorb
xchg
std
or
fsubrs
adc
bound
lock
and
and
xlat
push
test
shlb
mov
testl
pop
shll
leave
rorb
mov
sbb
xor
lods
xchg
xor
jb
jmp
lret
mov
mov
xchg
jns
out
add
out
adc
xor
test
sub
dec
cmpsl
or
mov
rcrl
jmp
mov
fdivs
mov
xabort
mov
mov
mov
gs
mov
jmp
out
inc
or
cs
mov
mov
and
mov
aam
iret
ficoml
jnp
sub
xchg
cmc
pop
arpl
jo
movsl
sub
mov
mov
clc
sub
fdivl
aam
lods
scas
and
pop
lcall
inc
cmp
loopne
insl
inc
aad
adc
and
fidivs
cmp
ja
fcomps
xchg
loop
and
adc
aas
add
jmp
jo
repz
dec
daa
dec
fstpl
int3
mov
ljmp
push
rclb
mull
pushf
mov
add
mov
and
add
xorl
cmpsl
lods
cmp
jle
pop
stc
lret
sbb
mov
push
or
inc
inc
cmpl
mov
jns
rorb
inc
jl
int
pop
test
outsb
pop
shrb
mov
mov
mov
ss
aaa
inc
mov
jge
outsb
add
push
fstpt
lret
xchg
and
pop
ljmp
sub
xchg
scas
or
xchg
cmc
push
mov
and
adc
lahf
cmpsl
in
fistpll
ds
sti
std
hlt
dec
enter
fnstenv
insb
mov
je
fs
lret
sti
dec
mov
mov
flds
ds
pop
jbe
inc
scas
or
sub
scas
inc
lcall
lret
mov
xchg
gs
leave
mov
rorl
sbb
sbbl
push
mov
sbb
pop
pop
mov
test
push
push
loop
imul
sub
std
incl
std
in
lahf
jne
addr16
xchg
cwtl
cmc
mov
addr16
cmp
pop
inc
jl
ret
in
inc
mov
rol
sahf
mov
andl
push
out
lcall
pop
addr16
lock
dec
jmp
inc
or
xchg
push
push
sbb
jno
xor
jmp
lahf
ljmp
test
ljmp
lret
or
cmp
push
pop
mulb
imul
ret
lock
mov
shrb
stos
daa
pop
jb
mov
adc
adc
or
push
fsubl
jecxz
mov
fadd
push
addr16
shrb
mov
out
testl
arpl
push
push
rol
flds
shrl
pushf
inc
xchg
push
mov
ja
idivb
mov
push
shrl
add
cmc
mov
jns
or
in
jns
xchg
iret
dec
pop
push
clc
jecxz
xchg
dec
push
jecxz
iret
mov
jno
and
xchg
js
or
mov
lcall
xchg
mov
insl
testb
pushl
call
aas
cmpl
call
rcr
xchg
jmp
dec
adc
ret
pop
stos
dec
inc
push
stos
adc
cmc
into
push
inc
adc
xchg
lods
cltd
inc
mov
sbb
enter
rolb
mov
sbb
jns
imul
shrb
mov
enter
mov
and
pop
mov
pop
xchg
ret
jp
inc
sub
mov
add
jo
push
add
lret
test
push
repz
jmp
xchg
adc
cwtl
pop
inc
push
insb
mov
lahf
ja
lods
mov
mov
cmp
dec
das
test
mov
mov
jp
mov
and
jecxz
add
std
repz
lahf
lods
loope
ljmp
mov
popf
dec
insb
xor
add
push
test
jns
imul
pop
inc
hlt
jp
lds
aad
repnz
mov
sub
imul
shrb
fwait
movsl
in
ret
add
xor
inc
scas
cmp
js
dec
push
dec
sbbb
mov
cltd
inc
inc
push
and
mov
sahf
stos
jns
ja
frndint
add
dec
lcall
push
lret
fcmovnu
sahf
jmp
mov
enter
fcompl
out
outsl
scas
imul
mov
imull
add
xchg
in
std
pop
stos
test
and
xor
lea
xchg
sbb
in
iret
add
jle
outsl
mov
scas
push
jo
adc
jg
ja
xchg
ja
mov
inc
mov
jae
xor
pop
sub
sub
movsl
pop
pop
and
sahf
xchg
lods
cmp
filds
rcr
cli
outsb
sbb
stos
stos
sub
fwait
jmp
cmp
das
test
mov
aaa
xor
cmp
pop
lods
cmp
addr16
andb
test
leave
lea
leave
cmp
enter
cwtl
mov
xor
push
mov
lret
in
inc
push
mov
inc
xlat
icebp
xchg
and
in
imul
jl
mov
jns
aas
push
jg
mov
sahf
pop
push
xor
pop
cwtl
fisubl
mov
dec
and
mov
fiaddl
jb
adc
add
out
and
loop
lea
cli
adc
pop
inc
jne
and
lods
fimull
adc
je
mov
iret
or
xor
xchg
mov
sti
mov
aad
cmpsl
xlat
push
rcl
or
ffreep
shr
add
rcrl
out
inc
xchg
outsl
insl
cmp
mov
inc
out
push
ret
xor
gs
push
loop
adcl
mov
insb
and
cmpsb
rsqrtps
jo
dec
aam
jns
adc
cmp
je
pop
insb
jno
push
jle
test
or
cmpsl
add
repnz
sub
mov
cwtl
pop
lret
pushf
sbb
xor
sub
test
andb
and
xchg
cmpb
lahf
pusha
dec
rorl
pop
dec
dec
sub
dec
sbb
push
loopne
fwait
insl
fwait
sti
dec
out
mov
jl
dec
cmp
imul
ja
je
inc
mov
mov
sarb
stc
out
cmp
cmp
lods
jo
and
outsb
fcom
jmp
out
xchg
outsl
in
mov
sub
ret
xor
repnz
push
xchg
fisubrl
dec
inc
and
inc
mov
popa
rclb
shll
hlt
gs
sub
xchg
bound
in
and
imull
push
test
int
aam
sti
sti
pop
add
fwait
inc
add
loope
nop
xchg
add
mov
fsubrs
and
sub
repz
jnp
dec
int3
orl
or
xchg
add
sbb
mov
fwait
aam
jnp
sub
cmp
fldcw
push
and
pop
das
mov
pusha
sti
in
xlat
insb
and
roll
or
cmp
pop
iret
fmul
adc
pop
popa
cmpsb
int
frstor
pop
or
nop
arpl
pop
jp
mov
aam
popf
fcoml
faddp
es
inc
cmp
lret
test
adc
les
popa
pop
xchg
sub
scas
xchg
js
and
jl
stc
in
and
cmpsb
inc
aad
rcl
outsl
mov
pop
add
cmp
stos
inc
inc
sbb
adc
clc
pusha
dec
jg
fwait
mov
push
pop
push
sub
imul
das
add
or
ret
xchg
xchg
scas
jmp
add
das
adc
push
or
scas
mov
push
push
jl
or
or
scas
enter
inc
outsb
xor
cli
mov
repnz
and
repz
add
xor
push
dec
or
add
xlat
jp
xchg
movb
aam
arpl
sbb
inc
mov
rolb
popf
sub
sub
js
out
loop
faddl
leave
mov
jmp
inc
pusha
aas
pop
adc
lods
stc
shrl
mov
push
pop
pushl
pop
das
adc
movsb
lcall
push
xor
jno
inc
cwtl
jo
xchg
xchg
sub
scas
pop
pushf
or
mov
push
or
sub
out
les
out
sti
test
push
cmpsb
fs
adc
out
sahf
nop
pop
xchg
jae
cli
sub
lea
dec
mov
div
fistpl
lret
xchg
pop
xor
and
pop
pop
jle
mov
mov
adc
inc
sbb
mov
jg
add
orb
xchg
mov
mov
shl
mov
xor
or
mov
push
mov
sub
loope
in
or
add
cmp
mov
mov
lods
fildl
pop
iret
pushf
enter
jns
push
mov
push
fidivrl
pop
adc
out
xor
test
ds
addr16
mov
xchg
mov
cmpsb
sti
mov
fwait
leave
or
pop
sarl
out
xor
in
adc
mov
inc
or
testb
adc
test
push
stos
jg
mov
je
sub
scas
mov
arpl
cmp
fbstp
adc
shlb
mov
mov
adc
pop
sbb
and
daa
sti
popa
int3
mov
mov
lret
add
sbb
push
or
add
xchg
lods
or
ficoml
add
xchg
or
mov
inc
dec
ss
jge
jae
lret
iret
lock
sub
jbe
int
bound
call
clc
push
push
clc
jge
xor
cwtl
cmp
movsl
int3
mov
les
push
sbb
pop
scas
sub
jecxz
pop
inc
add
mov
sahf
fdivrl
xor
sbb
lods
int3
push
arpl
psllq
ja
lds
sub
push
jo
popa
stc
test
outsl
ret
pop
in
mov
hlt
ss
add
aam
inc
add
inc
loopne
stos
ficomps
loope
xchg
mov
jno
addr16
int
fbstp
gs
lds
mov
xchg
shrl
in
inc
and
dec
mov
mov
lock
or
fisttpll
pop
mov
mov
mov
push
ret
or
or
rcll
and
dec
jb
insl
in
adc
dec
xchg
adc
fmul
pop
mov
aaa
cli
clc
rolb
sbb
das
cmp
repz
mov
inc
push
inc
outsl
daa
lds
call
lods
fidivrs
sbb
test
lret
int
jae
sbb
clc
ja
add
vpcmpgtb
jg
shll
lock
cmp
and
test
xchg
fldcw
lds
stos
mov
in
icebp
imul
dec
pop
pop
mov
movsb
test
popl
and
js
xchg
popa
cmp
pop
repnz
pop
lea
aad
ss
mov
cltd
in
sub
pop
data16
aas
dec
sub
jge
jnp
jp
dec
out
fimuls
lea
add
xchg
jmp
cmp
cmp
jne
push
mov
mov
ret
hlt
addr16
cmp
jp
dec
std
clc
aam
data16
dec
mov
ds
adc
cli
arpl
in
sbb
outsb
aad
daa
ss
pop
mov
fucompp
fs
arpl
cmpsb
shll
ss
pop
loope
push
xor
jecxz
divl
push
inc
ret
jns
jb
lahf
lahf
ror
test
js
add
jae
xchg
sbb
mov
add
adcb
xchg
fmul
es
bound
repnz
mov
ljmp
call
insb
adc
shrb
leave
sub
notl
shl
call
int
fldenv
inc
add
popa
and
sub
aad
movsl
cli
dec
jno
cmc
decb
and
test
pusha
push
lods
mov
dec
les
push
dec
idivl
sbb
out
mov
jmp
inc
dec
out
fadds
dec
test
lock
ljmp
adc
das
jg
rcr
adc
jns
add
cli
jne
nop
mov
and
adc
clc
int
or
adc
push
pop
adc
test
mov
push
or
pushf
mov
xlat
in
data16
les
xchg
loopne
xor
lret
pop
xchg
push
outsb
push
and
mov
xor
mov
out
imull
or
dec
add
in
mov
jo
jo
lahf
stc
push
iret
dec
lret
mov
filds
sub
aam
mov
inc
jns
pop
mov
sti
mov
jmp
mov
ds
cld
push
adc
xchg
or
into
loop
hlt
xchg
sub
push
mov
mov
dec
imul
insl
pop
lea
add
push
cmp
pushf
cmpl
lds
adc
or
addr16
aam
dec
push
clc
ss
fmull
std
imul
pop
mov
mov
sbb
adc
inc
popa
pop
jb
stos
and
dec
push
cli
xchg
or
ret
sub
xchg
adc
stos
fldl
sbb
fdivrp
sbb
push
add
mov
jb
cmp
adc
inc
cmp
mov
hlt
xchg
push
dec
dec
and
ss
mov
ret
push
scas
cmc
lea
xor
jb
stc
cmc
jns
pop
sub
xchg
sahf
loop
and
jnp
inc
pop
adc
ljmp
lods
daa
and
push
outsl
repz
rclb
stos
sub
subb
xor
push
jno
or
push
in
xchg
ftst
mov
xor
cmc
xchg
push
jno
push
xchg
pop
negl
push
arpl
into
cmp
push
inc
inc
xchg
stos
lds
jg
test
or
lock
iret
sbb
nop
fstps
mov
mov
push
mov
jmp
lds
rep
sbb
xchg
lcall
jge
sub
ja
mov
lret
ds
rol
lahf
sub
mov
jmp
mov
push
mov
pop
mov
fbld
test
fdivrl
fistpl
mov
and
xlat
pop
sbb
in
sti
incb
push
shlb
or
or
pop
xor
cs
mov
push
in
or
pop
rcrb
inc
push
xor
je
sbb
or
outsb
adc
in
movl
lret
sbb
js
dec
sub
roll
pushf
inc
lds
bound
push
or
mov
imul
jne
mul
test
sub
pop
negb
scas
shl
cmp
jp
pop
inc
inc
addr16
cwtl
popa
push
mov
inc
cmpsl
lock
or
cltd
inc
mov
je
add
fsubs
gs
lret
rcrl
xchg
daa
push
in
cs
pusha
test
inc
add
enter
insl
clc
dec
jae
stos
add
mov
lret
outsb
test
jae
jmp
mov
mov
sbb
cli
mov
lcall
mov
cmp
fucomip
out
cmc
daa
mov
in
cwtl
addr16
inc
ret
movb
ljmp
dec
add
hlt
dec
roll
push
xor
mov
mov
or
push
mov
mov
mov
shll
cmp
cmp
pushf
mull
xor
lcall
movsl
xchg
or
mov
mov
sub
xor
sub
dec
lret
mov
adc
lret
inc
pop
cli
add
push
movb
insl
cmp
aas
jbe
adc
negl
mov
jp
push
cmp
div
jmp
xchg
std
cwtl
push
push
mov
inc
in
out
js
jecxz
cld
add
mov
loopne
lahf
jo
pop
stos
shrl
movsb
icebp
das
and
testb
mov
dec
movsb
sbb
daa
cmp
sbb
mov
and
in
out
in
cmpsb
and
inc
adc
push
or
pop
inc
jo
in
stc
cltd
daa
clc
outsl
cmpsl
add
lods
in
push
and
adc
pop
mov
mov
add
push
repz
inc
adc
push
shlb
lock
jle
add
loopne
push
push
enter
iret
dec
adc
pop
idivb
mov
dec
pop
sub
mov
sbb
mov
mov
rorb
pusha
enter
test
loopne
jo
xor
jnp
mov
leave
mov
mov
jle
out
iret
repz
pop
je
int
pop
inc
mov
mov
xchg
lret
cmc
mov
movsb
mov
leave
nop
adc
sbb
sti
lds
rcrb
icebp
daa
jl
push
mov
repz
adc
dec
jo
cs
push
sbb
push
xor
loop
mov
outsl
and
inc
mov
lods
mov
cmc
pop
addr16
cltd
mov
push
aas
push
je,pn
es
cwtl
xor
outsl
aad
lock
mov
nop
inc
and
dec
repz
jg
imul
add
loop
adcb
decl
int
xchg
cmp
rol
push
adc
cltd
and
fxch
dec
xchg
out
cmp
or
pop
inc
xchg
push
testl
add
das
sbb
in
fnstenv
jge
pushf
push
push
xor
inc
imul
adc
icebp
mov
mov
in
daa
insb
sbb
pop
cmpsb
jns
test
es
push
cmp
push
jmp
rorb
pop
sti
test
fdivs
sub
idiv
xor
and
sbb
in
ret
pop
test
xor
jo
xlat
push
pop
or
mov
call
xchg
stos
pop
mov
mov
mov
aas
lcall
sub
scas
loope
xchg
push
mov
pop
inc
addl
aaa
mov
sub
jb
jbe
imul
and
push
loopne
or
outsl
sub
inc
dec
ds
add
mov
into
pop
insb
pushf
cmp
lret
xor
shl
mov
adc
lret
out
gs
and
popa
inc
je
dec
in
incl
fsubrs
dec
xlat
int3
mov
push
scas
sahf
jns
ljmp
adc
sub
mov
pop
das
push
leave
icebp
jnp
out
pusha
mov
mov
mov
push
out
pop
ljmp
xchg
dec
mov
sub
mov
and
rorl
or
movsb
sbb
sbbl
xchg
jnp
sub
push
cs
dec
mov
imul
dec
cmp
xor
adc
fildl
push
jmp
dec
mov
stos
push
push
call
sbbl
dec
mov
mov
push
pop
cmp
sub
pop
push
out
or
rorb
cmp
mov
xor
inc
outsl
test
cmp
sub
fldenv
lret
xchg
mov
mov
hlt
and
mov
add
add
pop
adc
mov
dec
outsb
inc
jle
pop
and
dec
mov
fidivrl
pop
int
test
leave
mov
es
jae
lcall
jp
adc
arpl
xorl
sub
shlb
adc
jg
scas
call
scas
rcrl
or
xor
xchg
xlat
mov
iret
aam
sbb
sub
pop
movsb
push
mov
in
fs
cmp
mov
lret
and
dec
adcl
push
add
jnp
jno
inc
lret
and
popf
in
aam
rorb
out
sub
add
sbb
mov
pop
cmp
rolb
ret
int
repz
cs
xor
push
mov
test
repz
mov
mov
xor
stc
int3
inc
insb
pop
xchg
add
fldt
pop
push
sbb
popf
out
adc
les
fmull
cmp
mov
in
fs
pop
imul
lods
mov
subl
add
xchg
inc
daa
mov
bound
outsl
pop
pusha
scas
shl
mov
and
jl
add
loop
jge
out
les
iret
loope
dec
dec
cld
in
sbb
sahf
aam
pop
add
insb
shrb
pushf
mov
dec
pushf
or
aaa
mov
jno
cmpsb
mov
in
test
stos
mov
adc
and
push
sub
sti
lods
add
mov
push
cli
loopne
and
adc
pushf
add
cltd
inc
ror
aaa
mov
xor
inc
cwtl
shrb
mov
inc
sub
sub
nop
mov
xor
or
inc
sbb
ret
je
xchg
xor
push
loopne
int
out
aas
add
rorb
mov
jg
dec
xor
push
repnz
adc
std
aaa
pop
movsb
jnp
fs
cli
leave
sbb
jno
dec
stos
jp
fwait
or
test
mov
stos
dec
ds
jb
pop
arpl
mov
cli
push
adc
adc
addr16
cld
call
shll
das
sub
jmp
jae
mov
or
dec
gs
jmp
or
dec
xchg
sbb
jb
xchg
xchg
das
and
repz
inc
xchg
stos
inc
dec
dec
mov
mov
mov
cli
xor
pop
cs
pop
sbb
shlb
pop
mov
lahf
jecxz
orb
mov
scas
in
adc
pushl
cld
xor
icebp
mov
xor
fistps
and
in
pop
fstp
jne
cltd
mov
jno
mov
add
jb
jb
push
mov
cld
imul
push
mov
mov
test
enter
lcallw
das
sti
dec
sbb
inc
aad
cmpsl
and
leave
movsb
mov
cwtl
mov
mov
dec
fiaddl
sbbl
lahf
out
cli
imul
adc
push
imul
mov
dec
int3
xchg
addr16
test
arpl
outsl
sub
insl
push
mov
mov
leave
ja
loop
sbb
popf
mov
nop
push
sbb
xorb
mov
push
xchg
inc
fisttps
scas
outsl
insb
fwait
insb
and
mov
inc
dec
das
xchg
scas
sahf
or
clc
ret
adc
das
push
jae
or
or
pusha
mov
xchg
pop
jmp
popf
dec
cmc
lret
cmp
inc
hlt
int
pop
popf
cmp
xor
ss
or
sub
mov
cmovge
and
xor
pop
xor
cmp
je
xor
cmp
mov
stos
mov
sarb
pop
ffree
xlat
inc
imul
imul
loope
pop
loopne
xor
gs
sbb
inc
ficompl
pop
cld
add
adc
mov
mov
loop
dec
xlat
or
ficompl
cmp
add
sbb
std
fcompl
jns
mov
into
loop
cmp
sahf
cwtl
cmpsb
mov
repz
imul
xchg
fnsave
popf
jb
addr16
cmc
lods
mov
andb
pop
aaa
sar
repnz
mov
pop
test
lahf
cli
push
pop
dec
cmpsb
cs
push
pop
mov
out
stos
sbb
pop
inc
or
mov
pop
adc
std
mov
jge
inc
aaa
insb
incl
nop
jne
dec
push
outsl
add
dec
pop
add
ja
bound
and
adc
insl
imul
cmp
nop
loope
sbb
dec
xchg
xchg
ja
xchg
fwait
xchg
mov
in
addl
cmc
movl
loopne
mov
xchg
popa
stos
mov
add
dec
jmp
rorl
mov
pushf
and
cmpsb
ffreep
push
das
pop
nop
imul
mov
push
dec
sub
xlat
push
out
std
mov
dec
icebp
sbb
scas
nop
mov
push
inc
add
sbbb
test
ljmp
sti
dec
mov
add
push
into
pop
test
fidivrs
test
adcl
mov
mov
adc
cmp
daa
pop
aad
dec
push
mov
add
mov
push
fwait
std
add
aaa
das
rcrb
lods
mov
xlat
ss
jmp
imul
cmp
xor
push
jl
jb
je
dec
mov
or
mov
cmp
test
add
xchg
test
and
shl
push
jns
fsubrl
xchg
test
in
mov
enter
inc
loop
fldenv
adc
fsubrp
or
lcall
jg
xor
cmp
pop
orl
mov
mov
mov
sub
lret
data16
sbb
jle
dec
sub
sahf
inc
inc
mov
repnz
int3
sahf
iret
sub
scas
cs
mov
dec
nop
pop
mov
cmp
test
mov
out
mov
mov
and
mov
in
xchg
cltd
push
jmp
mov
jnp
test
jl
pusha
aad
scas
mov
inc
adc
sbb
enter
xchg
cmp
shll
aam
inc
dec
and
imul
dec
hlt
iret
mov
xchg
lds
mov
lret
jbe
insl
mov
mov
dec
insb
ret
or
mov
inc
mov
xorb
test
mov
iret
dec
clc
or
pop
pop
inc
add
xor
and
pop
movsb
das
ret
xor
aaa
jg
jnp
add
jnp
cmpsb
jbe
and
movzbl
sbb
test
push
fisubrl
sbb
dec
stos
loop
mov
adc
sbb
mov
cli
mov
inc
dec
mov
adc
xchg
cwtl
test
inc
dec
cwtl
pushf
scas
push
popf
sub
test
inc
mov
jg
xor
test
push
and
imulb
ret
mov
and
loopne
je
shrl
xor
aad
fsts
lea
mull
sub
and
sti
jno
in
push
gs
mov
xchg
xchg
imul
daa
mov
cwtl
scas
nop
cmp
les
stc
imul
insl
popa
sbb
or
in
xor
xchg
pop
push
mov
cs
stos
adc
pop
std
loope
daa
push
cs
mov
pop
fidivrs
jecxz
fwait
jp
adc
cmc
adc
or
leave
or
pop
mov
mov
mov
and
dec
mov
pop
pop
xor
adc
repnz
fwait
mov
fwait
insb
adc
mov
jmp
sbb
pause
fs
jle
add
repz
leave
repz
or
mov
or
cmp
testb
and
jae
xor
mov
dec
insb
aam
in
add
push
adc
insb
mov
jnp
dec
and
mov
pop
jg
pop
inc
call
cwtl
and
adc
add
lahf
mov
jg
into
jp
push
aaa
andb
push
xchg
or
mov
aad
xor
xor
mov
fimuls
negl
push
xchg
in
loop
adc
ss
shll
cmc
nopl
push
out
mov
xor
xchg
and
add
daa
aam
loop
sub
ss
fidivrs
popf
ror
adc
sbb
cmpsl
sub
pop
xor
jl
sbb
or
dec
mov
inc
in
idiv
out
xor
inc
divb
pop
dec
test
mov
dec
cwtl
add
cmc
dec
jb
dec
in
push
testl
push
add
and
mov
mov
add
call
push
rclb
pop
pop
ja
mov
shl
aas
mov
aaa
stc
lods
and
xor
stc
das
inc
jmp
mov
cmp
sub
imul
into
push
fs
adc
adc
aas
or
mov
aaa
cmp
jae
in
jae
out
iret
mov
inc
fwait
jns
shl
adc
loope
inc
and
push
sbb
notl
pop
jge
pusha
xor
ja
xchg
enter
minps
cmpsl
mov
jns
leave
xor
adc
daa
cmp
inc
inc
data16
jns
les
and
push
jge
mov
mov
bound
bound
outsb
pop
cmp
inc
xlat
enter
lret
sahf
inc
dec
and
push
xchg
sbbl
push
inc
pop
xor
imul
inc
aas
jg
stc
jb
stos
hlt
popf
andl
sub
adc
rcl
mov
cmp
sbb
sub
in
sbb
push
mov
popa
jle
jecxz
adc
adc
and
xorb
repnz
stos
sbbb
mov
push
scas
enter
imul
adc
mov
mov
mov
mov
mov
add
fs
cmc
fisubl
mov
sahf
flds
adc
inc
mov
sub
jle
addr16
lret
mov
and
xchg
inc
stos
mov
adc
sahf
test
cmpsb
jb
lret
addr16
xchg
or
mov
jge,pt
lret
push
lock
push
sbb
and
ret
sbb
jle
cld
pushf
add
inc
mov
push
inc
dec
xor
insl
lock
dec
stos
push
and
outsl
dec
sti
les
add
dec
mov
int
mov
mov
movsl
sub
addb
jne
jecxz
jb
mov
pop
adc
push
jns
fwait
movsb
insl
push
xor
and
scas
adc
mov
push
jns
pop
cwtl
xchg
mov
shll
in
mov
sarl
adc
jne
mov
pop
arpl
lret
fildl
or
outsb
arpl
leave
lods
xchg
adc
popa
in
int
leave
out
cld
and
loope
imul
pushf
inc
gs
jnp
jmp
popa
outsl
addl
arpl
cld
outsb
pusha
pop
push
push
cmp
or
and
repnz
call
cwtl
adc
aam
mov
dec
mov
outsb
xlat
inc
daa
cs
dec
outsl
rclb
ret
adc
mov
push
adc
call
sub
jecxz
mov
dec
mov
loope
sbb
jp
enter
aad
add
sbb
sbb
jo
mov
cmp
push
xlat
jnp
mov
push
inc
or
and
arpl
xor
xor
mov
inc
sbb
loopne
sbb
movsl
add
cmp
sahf
popa
iret
or
push
mov
iret
je
movntq
out
xor
orb
xchg
mov
mov
ljmp
lahf
pop
rcll
xchg
in
add
xchg
and
mov
sbb
fisttpl
out
loop
call
xchg
or
les
outsl
adc
rclb
push
ljmp
ljmp
xchg
je
sub
push
int3
subb
arpl
mov
fwait
xchg
dec
push
and
lcall
nop
and
xchg
push
and
inc
roll
xchg
push
outsb
scas
pop
pop
outsl
aaa
jmp
fwait
cmpb
rcl
mov
adc
jp
adc
mov
xchg
sub
sti
int3
cmp
push
jno
fdivrs
jnp
lret
pop
jge
outsb
mov
dec
and
xor
inc
dec
out
sahf
test
insb
cmpsl
dec
xor
xchg
jno
cli
dec
ss
xchg
push
cmpsb
ret
sahf
and
repnz
dec
sahf
inc
cli
xor
stos
cmp
xchg
pop
je
and
dec
cmp
loop
jae
jae
clc
and
pop
outsb
ljmp
push
int3
rclb
test
stc
dec
mov
or
mov
cld
movsb
sub
test
cmpsb
dec
add
sbb
mov
xchg
push
outsb
scas
dec
jno
dec
inc
fiadds
fcmovb
pop
jo
mov
js
loope
std
mov
push
movsb
add
movsl
insb
jne
int3
push
lret
stos
fadds
pop
rcll
dec
movsl
mov
and
pop
dec
fstpl
js
popa
lea
or
rorl
enter
inc
xor
inc
mov
jns
dec
xor
mov
in
xchg
dec
sbb
pop
jmp
je
jns
dec
cmpsb
dec
jg
adc
dec
lock
repz
push
lret
adc
cmp
pop
stos
mov
iret
ret
mov
aam
into
mov
add
mov
ret
mov
xchg
inc
jb
lods
lods
insb
ds
icebp
stc
or
into
push
jo
jge
int3
scas
jno
cmpsb
cmp
pop
out
add
rolb
test
out
inc
sub
or
mov
lods
add
jle
into
dec
loopne
dec
add
aas
xchg
mov
dec
iret
xchg
pop
sbb
adc
test
mov
mov
adc
arpl
sub
repz
jnp
stc
repz
dec
or
mov
pop
subl
sub
inc
push
jg
mov
cmp
xchg
repnz
pop
and
jl
xchg
xchg
fmul
cmp
xchg
push
dec
ljmp
stos
aas
xlat
or
sub
or
lahf
notb
pop
pop
push
ja
rolb
jecxz
dec
les
jns
stos
push
ljmp
icebp
das
test
dec
push
vandnpd
add
mov
loopne
fldcw
mov
pop
dec
jns
add
inc
movsl
mov
jecxz
shlb
sub
out
ds
and
xchg
dec
push
inc
xor
mov
lods
and
inc
repz
add
mov
lcall
into
data16
daa
scas
das
xchg
mov
pop
jno
xlat
mov
pop
and
lret
sbb
inc
pop
rorl
ret
inc
into
cs
roll
adc
flds
mov
mov
into
push
insl
mov
xchg
jl
emms
das
pop
adc
sahf
pop
arpl
sbb
push
push
adc
mov
lret
stos
fldenv
aad
dec
cli
imul
sub
adc
aad
gs
icebp
lds
xor
stos
not
sbbl
push
push
fbstp
shrl
js
cmp
pop
jb
xor
ret
test
addr16
nop
js
pop
ljmp
cmp
pop
add
inc
movsl
or
mov
test
out
adc
fwait
insb
mov
xor
cld
data16
js
xchg
xor
or
decl
sub
outsl
pop
pop
mov
in
mov
sbb
and
lret
cld
push
movsl
fistl
lcall
out
jge
mov
push
push
mov
outsl
mov
mov
insb
mov
push
or
js
push
cltd
addr16
call
into
mov
push
test
jle
cmc
in
xchg
dec
mov
mov
mov
lea
pop
repz
pushf
or
mov
scas
inc
into
jmp
xor
push
mov
icebp
into
aaa
out
xor
push
scas
or
bound
jp
jne
cmp
in
fdivrl
jg
fdivrl
jg
inc
cltd
pop
xor
jl
jne
xchg
sbb
cmc
out
push
inc
mov
and
jmp
and
in
and
push
mov
and
shlb
nop
mov
insl
push
sbb
repnz
int3
mov
adc
jl
add
ud1
pop
aad
dec
sub
or
sti
sub
insb
jp
jecxz
jo
pop
add
fs
xor
ljmp
sub
aaa
out
push
sub
in
xor
lods
xchg
fwait
mov
dec
rcrb
punpckhbw
icebp
loopne
ja
fsubrs
in
in
mov
repz
mov
bound
push
inc
xchg
popa
jb
cltd
or
xchg
sahf
fisttps
aad
lcall
pop
pop
pop
das
sahf
jbe
dec
aam
data16
loope
ja
es
sahf
or
xor
inc
inc
xor
xor
inc
or
scas
jo
das
repnz
fwait
jns
mov
sub
into
cmp
cli
xchg
mov
enter
jecxz
add
into
enter
movsl
mov
roll
adc
push
pop
cmp
push
push
arpl
or
into
outsb
adc
jo
pop
add
popa
outsb
lret
pop
push
mov
pop
xchg
nop
pop
push
sti
bound
rorb
push
inc
push
sbb
test
add
es
mov
and
dec
add
cmp
out
je
pop
mov
hlt
xchg
fidivs
xchg
adc
or
dec
lcall
pop
fstps
stc
in
and
ficoml
fs
cli
dec
add
out
sbb
mov
fcomps
lea
cmpl
mov
pop
inc
xor
push
mov
lahf
xlat
xorb
xchg
fsubr
inc
out
mov
jecxz
stos
cmp
mov
mov
dec
mov
test
dec
in
adc
jo
add
or
test
roll
iret
inc
inc
push
and
das
jne
jg
pinsrw
gs
popa
or
add
xchg
imul
out
add
mov
lods
adc
inc
lret
test
sub
fs
sbbb
jg
jbe
jp
jl
pop
push
adc
pushf
decb
pop
sbb
xchg
fs
push
mov
test
mov
mov
out
data16
inc
cmpsl
jecxz
pop
cmpsb
or
push
movsl
inc
mov
ss
sbb
mov
inc
jmp
ret
divb
jge
ja
push
lahf
lods
mov
lock
mov
loop
scas
ja
fisubrs
add
fwait
insl
jbe
jo
mov
rorl
mov
scas
cmp
push
arpl
inc
pop
or
dec
aas
mov
xchg
sbbl
repnz
sbb
add
adc
xor
dec
rcrl
or
push
xchg
adc
jns
mov
int3
or
out
movsl
cmp
fcmovb
in
fdivrs
call
mov
xlat
or
test
mov
sbb
inc
in
add
scas
shrl
shrl
add
xor
cmp
mov
lret
mov
push
jns
jecxz
xchg
out
push
sub
xor
xchg
and
mov
inc
pop
dec
cld
popf
jg
clc
int
mov
or
sti
xchg
loopne
stos
hlt
call
mov
je
xlat
lcall
lcall
stc
mov
fcompp
lahf
das
pushf
nop
xor
ja
xor
add
jno
pop
pop
fisttpl
sbb
and
fcomps
stos
or
or
xchg
push
insb
and
mov
sbb
dec
adc
mov
fsubrl
jp
pop
cmp
mov
mov
dec
xchg
ja
dec
mov
fsts
imul
fstl
fnstsw
loop
into
cli
adc
lea
cmp
call
sub
rcr
push
into
ljmp
mov
lds
out
jl
enter
lods
les
lret
cmp
add
inc
push
vpcmpeqw
dec
inc
adc
or
lahf
js
pop
aaa
fisubrl
pop
aam
mov
adc
or
adc
pop
mov
push
test
adc
insl
stc
cmp
pop
cmp
mov
sahf
xchg
lock
ljmp
xor
push
les
and
mov
push
cmp
or
scas
ss
jecxz
fwait
sahf
inc
jp
mov
nop
xchg
repnz
subl
push
cld
in
enter
cld
cmp
and
jg
mov
inc
push
xchg
or
pop
mov
lret
testb
out
push
mov
jp
mov
je
mov
addl
lods
test
add
test
mov
enter
or
mov
xchg
jnp
inc
sti
adc
dec
jmp
in
inc
xchg
mov
adc
test
inc
dec
out
mov
sub
pop
add
insb
mov
movsb
xlat
mov
mov
ss
aam
aaa
sub
out
and
call
sbb
repz
mov
fildll
dec
fdiv
or
mov
ja
mov
js
sti
int3
push
inc
adc
pushl
xor
push
gs
loop
jge
pop
imul
or
mov
ja
scas
xchg
aad
sub
sub
test
xchg
push
push
roll
sbb
or
jbe
add
xor
imul
xchg
mov
dec
das
jmp
insb
mov
das
cmp
lcall
sbb
sahf
addr16
test
jecxz
adc
mov
nop
jno
jbe
stos
daa
subl
xor
mov
adc
cmp
pop
cli
add
xchg
mov
faddl
mov
jae
data16
test
clc
scas
mov
push
xchg
mov
mov
cmp
or
or
repz
test
pop
xchg
sub
mov
bound
pop
xchg
jmp
push
adc
and
jb
pop
dec
jle
notb
or
gs
fwait
add
imul
test
pop
mov
cmpsb
mov
fmuls
jmp
les
or
jecxz
jae
xor
ret
out
ror
daa
fstl
es
jmp
lcall
dec
pop
mov
lock
bound
rorb
and
aad
xor
aad
clc
xchg
jmp
mov
jg
negl
gs
insb
jne
rolb
mov
lods
lret
xchg
out
lock
imul
movsb
jecxz
inc
outsb
iret
lods
mov
xchg
jb
jmp
repz
pop
and
pushf
ret
dec
sub
or
adc
addr16
add
js
das
sbb
push
out
adc
js
inc
dec
scas
test
ret
xor
mov
jg
scas
dec
imul
xchg
imul
pop
inc
je
outsl
xor
push
push
xchg
xchg
in
jne
leave
jae
adc
xor
dec
loopne
dec
inc
xchg
jae
or
sub
push
pusha
ret
sarb
outsb
mov
and
xchg
movsl
loop
dec
dec
out
inc
out
arpl
fistpl
jnp
das
cmp
push
cld
testl
pop
pop
xor
mov
jbe
ljmp
inc
imul
pop
dec
xchg
scas
inc
pop
sub
in
jae
cmp
in
xlat
inc
subl
scas
jae
fisubrl
loope
stc
fmuls
jb
and
mov
loop
in
mov
xlat
clc
cmp
xlat
enter
lea
roll
adc
bnd
fs
sti
adc
or
sub
sbb
mov
sarl
cmc
lret
adcl
xchg
mov
pop
jae
shl
or
insl
xor
lods
push
enter
sbb
inc
pop
pop
jp
loope
and
pop
jl
mov
xchg
lds
sbb
xor
pop
cltd
mov
jb
and
popf
adc
cmpsl
sub
pop
leave
pop
sbb
jne
dec
mov
lcall
pop
stc
ret
std
cwtl
mov
lcall
scas
repnz
cmp
pushl
out
cltd
dec
add
mov
fdivl
aaa
fs
pop
push
inc
sbb
push
jne
mov
mov
xchg
clc
or
les
rorl
jo
ds
push
rcl
mov
aad
adc
or
movsb
jge
popl
mov
adc
dec
mov
push
dec
jle
adc
adc
rcrb
inc
mov
mov
or
out
push
adc
pop
lcall
lahf
jmp
sub
xchg
sub
jmp
and
lret
or
xchg
fistpll
decl
pushf
xor
and
js
loop
lock
pop
sub
lea
or
stc
mov
fnsave
inc
fs
into
add
xchg
scas
lds
lea
scas
or
push
cmpl
push
inc
fldl
jne
lock
ja
in
mov
inc
rorb
sbb
mov
adc
loop
leave
insl
sub
xchg
mov
xchg
xchg
pop
sbb
imul
sbb
dec
inc
xor
mov
shll
add
xchg
or
xchg
push
and
andb
lcall
mov
sbb
add
repnz
pushf
and
dec
movb
movsb
cmpb
lahf
sub
xor
mov
push
fcompl
cs
das
stos
mov
fwait
std
sarb
fucomi
adc
add
mov
pop
lods
and
je
mov
mov
lret
and
std
sbb
push
lea
dec
pop
fbld
cmp
mov
pop
mov
hlt
mov
or
arpl
lea
and
add
lds
adc
hlt
push
mov
fs
pop
xor
pop
test
in
adc
fwait
xor
mov
dec
out
mov
add
sbb
add
mov
jb
mov
mov
pushf
cmp
ss
lret
ret
xchg
jg
addb
in
std
push
push
pop
fcomps
insl
lods
mov
mov
cmp
xor
pop
sub
inc
stos
xorl
mov
sbb
or
pop
call
pop
fldenv
mov
mov
jne
std
pop
lds
test
cld
hlt
pusha
xorl
pop
and
xchg
into
scas
jl
jo
or
mov
xchg
xorl
sub
add
mov
adc
mov
out
js
jb
push
stc
sbb
enter
icebp
pop
stc
mov
pop
fisttpl
and
adc
and
bound
xchg
and
push
adc
repnz
loopne
popf
subb
mov
subl
loop
aas
out
js
and
push
push
mov
push
mulb
push
pop
test
sbb
loope
push
sbb
dec
dec
hlt
sub
mov
ja
addr16
push
out
outsb
mov
adc
mov
mov
adc
mov
cltd
jnp
cli
divl
clc
in
sbb
sbb
inc
outsl
aas
mov
pusha
xor
inc
leave
push
push
pop
scas
jae
pop
subl
lea
int3
xchg
and
add
pop
pushl
lea
daa
mov
je
xchg
sub
scas
jno
push
pop
jge
loope
mov
fimull
pop
out
cmp
jno
sub
hlt
movsb
mov
xchg
sbb
loope
adc
pop
inc
cwtl
shrl
roll
aas
xchg
andl
nop
in
and
inc
and
scas
adc
imul
data16
add
loope
sbb
xchg
inc
sbb
decb
mov
in
out
movsb
xor
and
lock
dec
in
loopne
mov
orb
jmp
push
add
push
daa
inc
pop
stc
cmc
push
jmp
lods
mov
enter
gs
std
out
ficomps
stc
mov
out
xchg
les
jp
enter
push
xchg
xor
mov
arpl
fwait
inc
fldenv
aas
inc
int
inc
push
pop
push
int
sub
push
rorl
push
pushf
cmpsb
inc
add
mov
pop
sahf
ss
or
aad
movl
pushf
rolb
ret
sub
xchg
mov
push
sti
mov
aad
imul
cmp
test
out
push
je
out
xor
xchg
sbb
jmp
adc
mov
fcomp
inc
pop
adc
jg
push
nop
and
sub
mov
mov
dec
scas
pop
mov
ljmp
xchg
push
bound
popa
les
cmpsb
sahf
icebp
push
xlat
sub
pop
sbb
cwtl
push
imul
pop
roll
xchg
fidivs
rolb
call
fsubrl
test
adc
xor
cmpsb
lds
imul
fildll
mov
aad
nop
sub
or
pop
stos
repz
xchg
push
lods
sub
imul
mov
jns
outsl
or
or
sub
sub
les
sub
lcall
aaa
test
add
mov
adc
mov
lret
test
pop
sub
mov
sbb
sub
popa
shll
popf
jecxz
mov
loopne
imul
inc
and
lea
aas
pop
push
sti
loop
mov
push
rcrb
sub
jb
decl
gs
stc
sub
into
dec
pop
push
rorl
jae
dec
xchg
jecxz
sarl
lock
clc
sub
mov
int3
xor
lods
imul
xchg
fildl
jmp
cwtl
sub
mov
mov
test
mov
xor
out
xlat
adc
add
mov
mov
inc
mov
cmp
dec
stos
test
inc
pop
inc
or
push
fidivl
lret
pushf
cs
call
notl
cmc
inc
pop
pusha
idivb
sub
mov
jo
mov
and
xor
or
inc
popa
loope
sbb
dec
or
cld
adc
ret
pop
adc
sbbb
mov
xor
rcr
mov
aad
sub
mov
or
sbb
pop
add
test
pop
icebp
int3
cmp
insb
dec
and
sbb
leave
test
xchg
or
cmpsb
aaa
nop
or
std
adc
jg
push
pop
inc
push
mov
popa
lahf
clc
dec
int
pop
loopne
push
in
pop
push
sbb
pop
lock
loopne
mov
add
mov
data16
pusha
dec
inc
mov
jmp
into
add
dec
cli
cwtl
jmp
adc
jmp
mov
pusha
adc
mov
cmpsl
and
xchg
push
rcrb
jecxz
jmp
movsl
cmc
sti
and
test
in
repz
arpl
sar
lret
xchg
sub
movsb
test
enter
push
sub
pop
popf
push
cmp
jns
mov
mov
out
sbb
jg
pop
lret
mov
dec
scas
insb
test
inc
mov
rclb
popf
fsubrl
adc
loope
movsl
lret
cld
ret
and
jno
rolb
cmpsb
loope
xor
movsl
mov
icebp
icebp
sahf
mov
or
adc
call
ds
push
mov
mov
mov
aam
mov
mov
or
fwait
xchg
lret
stos
pop
std
lcall
pop
mov
jne
pop
fiadds
out
xor
in
je
push
testl
pop
sbbb
lea
sti
xor
insb
xchg
xor
movsl
jle
je
sbbl
pop
cmp
out
cmp
pop
dec
mov
inc
mov
and
loop
cmp
sbb
mov
xchg
inc
mov
sahf
push
aas
push
int
jecxz
fwait
das
and
add
push
inc
jns
sahf
imul
shr
pop
pop
ds
popa
inc
lret
xchg
add
adc
imul
xchg
jo
enter
adc
fidivrs
sbb
adc
addr16
push
dec
push
rcll
scas
in
xchg
jne
fwait
push
gs
add
add
sub
jb
jo
lret
mov
xor
adc
enter
test
sti
iret
cmp
jo
movl
and
out
sbb
fld
movsl
mov
sbb
mov
jge
stos
jge
inc
mov
sub
cltd
mov
sub
mov
fisubl
xor
jo
and
lahf
xlat
inc
fnstsw
xlat
or
adc
mov
sub
fsubl
pop
aad
data16
pop
adc
out
or
out
lock
inc
push
subl
lret
das
lret
jmp
popa
dec
test
sbb
add
mov
adc
push
jne
mov
xchg
movsl
add
fdivp
mov
push
inc
out
xchg
stc
addl
jp
and
jle
or
or
add
int3
xor
adc
hlt
xlat
fsubl
mov
jno
out
adcl
lods
xor
pop
outsb
mov
jbe
pop
cwtl
mov
or
outsb
loop
jmp
mov
scas
sub
icebp
pop
add
pop
dec
ret
xchg
fldcw
mov
mov
pusha
je
add
cmp
data16
xlat
pop
pop
xor
loope
jbe
aam
mov
push
popf
inc
mov
adc
int
cmp
cmpsl
or
lea
insl
fldcw
sbb
mov
cmp
gs
mov
repz
adc
or
sbb
mov
jle
mov
test
popf
add
jmp
lret
sbb
scas
rorl
insb
ljmp
das
test
fildl
loop
es
pop
into
jno
or
loope
loop
dec
jle
clc
stos
cwtl
lds
pop
dec
daa
or
add
inc
pop
xchg
pop
ss
push
cmc
and
mov
mov
loope
mov
mov
ljmp
inc
pop
inc
lahf
call
ret
int
repz
pop
lods
inc
inc
hlt
xlat
sar
loopne
xor
outsl
jae
pop
and
cmp
sbbl
std
mov
pop
jno
add
loop
or
add
jns
daa
lret
nop
and
nop
push
add
inc
and
cmc
loop
test
ret
dec
mov
sbb
scas
lods
lds
inc
arpl
pop
pop
jns
mov
mov
lds
cmp
testb
mov
aad
jns
shl
test
sub
subl
mov
xchg
push
adc
into
nop
jne
dec
cli
fidivs
lods
lea
sbb
movsl
push
fdivl
push
jnp
inc
sbb
or
and
out
push
in
flds
mov
pop
call
inc
adc
shrb
stc
adcb
sbb
adc
xlat
and
jae
sarl
mov
popf
jle
das
inc
cld
jmp
xchg
and
movsl
mov
hlt
scas
insb
push
push
jno
inc
xor
roll
mov
loope
cli
mov
nop
push
insb
aas
rol
cmp
lret
pop
hlt
or
decl
sar
ljmp
pop
mov
mov
cmp
adc
js
shll
mov
mov
cmpsl
inc
jb
and
stos
cli
push
pop
mov
jo
lock
xchg
xchg
mov
cmp
notl
xchg
inc
mov
cwtl
cmc
ret
insl
or
call
cmp
mov
sbb
out
pop
mov
pop
jnp
adc
or
mov
pop
push
mov
es
mov
out
mov
and
bound
add
add
or
sub
cmp
dec
fs
xor
jg
push
jmp
jb
dec
cwtl
mov
mov
in
aam
lcall
shll
xor
arpl
in
mov
push
xor
or
bsr
inc
into
dec
int3
push
out
cmp
movsl
rorl
popa
mov
call
mov
mov
fidivl
iret
push
pop
pop
jp
enter
push
lea
repz
outsl
imul
mov
jmp
pop
clc
pop
push
loope
adc
mov
push
cmp
mov
mov
xor
mov
in
mov
xor
lcall
adc
jmp
cmp
testb
mov
loopne
push
mov
jle
test
mov
sarl
mov
and
pop
push
fmuls
shrl
cld
or
fstps
shrb
add
fs
inc
lods
movsb
arpl
fistpll
mov
mov
mov
cmpsb
test
scas
pushf
mov
stos
test
sub
dec
pusha
push
mov
loop
icebp
mov
hlt
cmp
call
mov
inc
out
insb
jmp
lcall
fistps
jne
mov
cmc
xchg
in
jmp
ss
pop
mov
jno
mov
xchg
mov
dec
push
data16
cmp
fsubrl
and
pop
adc
xchg
adc
lea
pop
test
cmp
imul
imull
or
popa
rorb
adc
push
test
sbb
outsl
dec
addr16
add
xor
mov
inc
jge
sub
scas
jecxz
xchg
cmc
leave
pusha
adc
jbe
iret
mov
loope
sbb
rorb
push
jmp
sbb
jmp
sbb
sbb
fstpl
xor
cmp
jg
xchg
cld
jbe
adc
sti
ljmp
test
push
ret
pop
into
es
arpl
pop
dec
pop
sbb
push
in
and
sar
fbld
push
fstpt
pushf
dec
dec
inc
cld
lds
push
inc
xchg
mov
lock
test
jb
negb
xchg
push
pop
movsl
and
divb
repnz
in
loopne
fiadds
arpl
ret
inc
xor
pop
sub
push
divl
xlat
or
inc
jo
dec
cld
mov
dec
xor
adc
mov
adc
sbb
loop
ret
xchg
dec
pop
mov
adc
shll
ds
into
ret
and
jmp
mov
iret
mov
add
sahf
loop
lret
lret
negb
xlat
jmp
lcall
mov
xlat
je
cld
daa
stos
sub
filds
and
roll
incl
sbb
xor
dec
push
std
sub
ret
in
dec
lcall
sub
jae
xchg
add
cmp
inc
sbb
add
icebp
stos
stos
push
xchg
pop
mov
shrl
xchg
dec
jle
adc
cwtl
cmpsb
or
push
and
push
or
mov
jmp
notl
push
jecxz
aaa
addl
lods
out
adc
xor
test
jmp
mull
push
adc
xchg
jnp
push
rcll
js
imul
dec
daa
leave
pop
mov
sti
push
lret
arpl
pop
je
xchg
daa
fiadds
sti
lcall
jbe
stos
test
leave
jno
pushf
std
push
lret
shl
jno
fimuls
or
pop
hlt
adc
cmp
stc
sbbb
push
pop
shl
sub
add
subb
repnz
sub
add
push
loope
outsl
inc
add
movsl
mov
push
jne
hlt
dec
mov
movd
sbb
sbb
xor
xchg
ret
or
xchg
jb
or
push
cmp
xor
outsb
iret
jae
std
sub
imul
and
sbb
outsl
in
mov
nop
scas
fmuls
jnp
mov
sbb
std
nop
addr16
mov
popa
hlt
xchg
ljmp
loop
cmp
add
push
stos
lcall
jge
sbb
faddp
stos
pop
pop
scas
and
push
in
mov
scas
fs
faddl
mov
pop
gs
incb
and
addl
adc
sub
not
push
sbb
gs
pop
and
aaa
lea
mov
and
cmc
push
jl
cmp
out
inc
mov
add
jo
xor
sub
gs
mov
imul
loopne
jo
bnd
in
dec
dec
fs
or
push
enter
arpl
mov
jne
xor
mov
aas
xor
cmc
cmp
pop
mov
mov
dec
packuswb
gs
mov
adc
add
push
adc
imul
fildll
inc
bound
aad
jle
fildl
dec
sti
insb
movsb
add
movsb
pop
fs
mov
and
stos
push
dec
movsb
xor
sbb
out
imul
xor
fldenv
sub
addl
and
jnp
add
popf
cmpsl
les
xor
int3
push
movsb
sti
adc
or
jae
iret
iret
jmp
pop
cmc
or
fldcw
lahf
in
cmp
pop
push
adc
jmp
icebp
dec
mov
jnp
dec
fldenv
jbe
xchg
push
mov
jnp
mov
mov
int
lods
iret
popl
popf
push
xchg
cmp
out
jnp
xchg
popa
imul
pop
xchg
sub
jecxz
or
cs
xor
mov
inc
sbb
inc
cmp
jnp
mov
xor
jb
mov
jns
cmp
jle
pop
repnz
jae
jae
scas
xor
cmpsb
std
je
dec
mov
mov
out
stc
cwtl
inc
inc
popa
dec
test
push
insb
sti
inc
gs
sub
les
mov
cltd
and
mov
ja
jecxz
pop
push
pop
rcrb
dec
xor
sub
xor
mov
pop
jns
dec
and
arpl
stc
jle
push
js
sub
loopne
fiadds
inc
sti
in
ss
jno
jne
dec
jmp
sbb
std
imul
add
rcll
enter
mov
inc
les
inc
addr16
movsl
scas
pop
icebp
jae
inc
dec
shl
mov
repnz
ficompl
and
scas
movsl
sbb
sti
jb
enter
pusha
cmp
int3
sub
out
add
repnz
ja
in
cmp
dec
xchg
add
jge
mov
xor
shl
add
sub
sub
clc
sub
stc
pop
add
fsubp
insl
sbb
lcall
shl
icebp
sbb
stc
out
mov
lret
inc
adc
jge
mov
pop
push
in
push
push
btr
mov
xor
lret
data16
idivl
rcll
imul
pop
loopne
int
movsb
add
ja
aad
movsl
pop
cmp
xchg
nop
cmp
lods
mov
or
into
ss
mov
test
dec
dec
popa
xchg
mov
rorl
insb
lahf
xchg
fwait
or
cmpsb
cmpsb
aam
xchg
xor
fucompp
cli
push
mov
shrb
cmp
sbb
and
ss
fsts
jns
inc
sub
popa
lea
inc
jmp
sbb
cmp
dec
add
dec
jne
call
pusha
xor
shll
js
adcl
sub
fcmovu
nop
cmp
push
je
or
test
or
xchg
mov
xor
add
shll
decb
jmp
mov
lds
ror
out
movsl
icebp
les
cmp
pop
test
js
sub
inc
js
bound
mov
jp
push
jg
jbe
push
add
and
add
or
inc
jbe
cli
add
test
stos
mov
aad
sub
popf
testb
ljmp
inc
or
or
add
inc
in
push
add
cmp
cli
inc
add
push
dec
push
jl
inc
push
sub
fdiv
and
push
mov
or
test
cs
fxch
xchg
aad
fists
daa
jecxz
xchg
lea
xchg
and
pop
mov
stos
mov
loop
cmp
and
imul
loope
or
sub
mov
inc
sub
ljmp
jmp
imul
outsl
xor
dec
popf
mov
dec
ror
add
push
into
in
faddl
xor
jns
xchg
frstor
pop
movsl
cmp
stos
add
or
faddl
repz
and
push
std
clc
data16
outsl
mov
and
pop
shrb
add
out
out
inc
and
xor
sub
xor
mov
dec
aaa
jge
add
jo
mov
popf
movsb
sbb
movsl
pop
ret
pop
and
push
xor
mov
in
adc
ret
or
push
in
out
fwait
mov
negl
adc
push
mov
and
daa
or
addr16
insl
jg
bound
and
push
lret
cmpsb
and
call
push
cmc
push
icebp
add
sub
mov
jbe
repnz
pop
js
jae
negb
push
and
lret
int3
xchg
jge
mov
sub
cmpsb
shll
adc
mov
inc
daa
daa
adc
lret
xor
xchg
ficomps
mov
pop
inc
pop
push
repnz
inc
cmp
pop
lahf
mov
fcmovne
mov
aaa
jb
push
adc
aam
aam
test
inc
ss
aad
jle
or
enter
adc
loop
add
scas
mov
cwtl
push
mov
repz
pop
jl
loopne
sbb
jecxz
jo
scas
inc
and
cmc
adc
cltd
jl
xchg
adc
fwait
jbe
sub
addb
data16
ljmp
inc
mov
push
test
inc
push
movsb
call
loope
rclb
lods
dec
pop
test
data16
call
dec
inc
pop
mov
je
clc
jnp
and
shrb
mov
in
rolb
leave
xor
xchg
repz
or
iret
mov
jnp
and
out
sbb
sub
jns
in
movsb
jno
inc
dec
mov
popa
pop
nop
mov
jmp
lahf
sbb
cs
mulb
pop
int3
shrl
mov
or
shr
jns
and
movsb
mov
mov
int
sahf
sub
adc
push
inc
pusha
cltd
cld
insl
addr16
bound
arpl
jge
push
aad
daa
into
fcomi
sbb
je
sbb
or
inc
mov
in
rcl
push
popa
dec
sub
jnp
iret
dec
test
inc
es
xor
jno
adc
inc
pop
iret
jge
mov
or
xor
cmp
cmpsl
stos
fwait
out
mov
xchg
add
loop
mov
dec
dec
push
ljmp
rclb
jb
xor
cmp
xchg
xlat
cltd
xor
repnz
loope
or
xchg
or
movsb
mov
sbb
mov
js
mov
movsb
mov
push
fisttpll
pop
and
or
pop
mov
popa
popa
push
arpl
aam
jg
pop
fsubrs
cmpsb
pusha
data16
adc
in
mov
les
scas
xchg
sbbb
xchg
icebp
sahf
in
in
pop
into
fstl
dec
je
out
aam
out
push
adc
cs
xlat
mov
loopne
xor
hlt
shrl
inc
out
inc
ss
insb
sbbl
je
cmp
lods
xor
shll
pop
scas
xchg
aad
jl
dec
mov
iret
sub
jg
cmp
or
mov
mov
ss
lret
ret
imul
lret
push
mov
sbb
dec
xor
ljmp
or
pop
jb
inc
jg
in
sbbb
dec
or
add
out
test
sub
pop
loop
xor
xchg
xchg
cmp
loopne
movsb
fiaddl
inc
sub
idivl
aam
mov
jmp
cmp
mov
sub
mov
movsl
fmul
add
pop
inc
jo
mov
push
fwait
jmp
jmp
pop
sub
les
mov
imul
mov
bound
inc
dec
cmpsb
sarb
dec
add
adc
add
cmp
jecxz
mov
or
das
stos
inc
xchg
jnp
fistpl
jg
pop
xchg
ljmp
stos
inc
xor
mov
idivl
add
sub
cwtl
pop
adc
sub
fldt
sub
and
mov
mov
xchg
or
jnp
pop
mov
or
push
in
and
fdivl
cmp
lods
in
into
mov
lods
xorb
pop
cmc
dec
pop
bound
xor
xor
sti
and
scas
mov
sub
mov
fdivrp
notl
cmpsb
mov
adc
cli
loopne
fmuls
cmp
jecxz
and
aad
sbb
hlt
mulb
push
jno
out
adc
addr16
mov
cld
mov
aad
fdivl
bound
mov
pushf
mov
or
mov
shll
push
ja
jmp
pop
or
imul
ss
inc
sub
decb
lcall
out
sbbl
orb
mov
dec
lods
dec
or
stos
cmp
pop
fs
mov
std
filds
push
cmpsl
jp
inc
je
sbb
xor
push
sarl
cmp
dec
fnsave
xor
dec
pop
cmp
cmp
push
nop
les
outsl
pop
jne
and
jo
stos
xchg
push
insl
outsb
mov
adc
cmp
in
fadd
push
sub
adc
inc
icebp
pop
sbb
xchg
iret
daa
fisttpl
push
insl
add
xor
pop
jo
mov
jg
and
mov
sub
add
inc
add
pop
les
pop
daa
lcall
add
in
xchg
sub
lea
lret
sub
mov
inc
test
jecxz
jmp
test
call
das
lcall
mov
test
lea
dec
lods
pop
push
scas
addr16
lea
adc
data16
mov
jl
dec
clc
inc
push
fdivrs
repz
jmp
in
in
cmp
out
popa
cmp
mov
popf
out
push
sbb
mov
inc
insb
inc
loope
xchg
cmpsl
pop
sbbb
scas
sarl
xchg
push
fwait
xor
push
jno
jge
cli
fs
dec
add
cmp
pop
iret
fldt
sub
cmc
repnz
xchg
cmp
xchg
push
lahf
cmp
xchg
stc
mov
mov
addr16
push
sahf
adc
fnsave
jp
scas
lret
loop
fs
lea
cmc
inc
mov
xchg
push
xor
imul
mov
les
ret
jge
sub
test
frstor
push
cmp
in
cmpb
jae
sti
xor
pop
ret
and
jmp
jno
mov
push
stos
pop
inc
xchg
mov
int
push
sbb
lods
sub
fxch
cmpsb
clc
push
movsb
sub
bound
cld
in
loop
test
dec
jnp
xor
nop
iret
fmull
gs
jnp
add
sub
in
rorl
or
testb
xchg
stc
pop
mov
push
add
ss
pop
ljmp
lds
dec
jo
and
loopne
out
shl
jbe
negb
xor
enter
cltd
rolb
cmp
mov
test
sbbl
lods
lods
mov
inc
imulb
pushf
sub
dec
mov
jbe
fucom
xor
scas
shll
lods
sti
lock
sbb
pusha
mov
cs
adc
out
push
dec
out
outsl
out
lcall
mov
or
dec
movsl
test
xor
pop
popf
add
outsl
dec
je
ret
je
sub
dec
xchg
inc
push
dec
adc
fiaddl
cmp
cmp
in
sub
push
ret
test
in
std
rorl
cmp
mov
jl
dec
movsb
incl
enter
insl
push
nop
repz
mov
shr
mov
imulb
cltd
and
jmp
outsb
or
sbb
outsb
xor
aaa
aad
mov
add
fbld
inc
fstl
insb
ficomps
lods
push
push
fmull
enter
out
int3
cmp
stc
jle
xchg
jg
mov
nop
or
int
jno
enter
pop
cmc
std
hlt
mov
jae
das
and
fisubrl
inc
push
sub
lret
add
cli
cmpsb
fadd
push
mov
cmp
out
pop
test
test
iret
ja
imul
ja
push
cli
jns
fisubs
jmp
jb
dec
mov
jmp
stos
sbb
lock
call
xchg
mov
ss
popa
add
dec
xchg
shl
push
movl
adc
imul
or
test
jmp
adc
loopne
out
push
roll
dec
adc
jg
clc
sbb
add
rolb
test
sub
mov
dec
out
fmull
das
adc
rcl
cmpsb
cmp
mov
enter
int
adc
and
pushf
sub
fwait
xchg
xor
addr16
inc
ret
dec
into
push
mov
mov
add
cmp
jle
pop
setl
dec
lahf
imul
loope
cli
or
fs
insl
mov
add
dec
xor
mov
mov
push
adc
frstor
cmpsb
repz
movsl
imul
bound
ds
pusha
je
test
ljmp
jl
mov
push
jno
sbb
aad
pop
repz
jmp
out
adc
xchg
int
cmpb
stos
push
fisubrs
arpl
jo
jp
mov
test
sub
imul
adc
add
bnd
repz
mov
andl
push
mov
pop
dec
adc
xor
neg
mov
xor
lods
testb
cmp
xlat
mov
push
mov
xchg
out
dec
inc
cmpsb
shll
and
add
sub
mov
scas
mov
pop
ljmp
sti
outsb
test
and
dec
shll
in
and
push
push
push
mov
data16
jecxz
push
stc
mov
mov
sbb
jecxz
sub
aas
sub
nop
ret
loope
pop
mov
bound
cmp
sbb
xchg
inc
insb
sub
jl
mov
insl
pop
mov
mov
pop
add
add
pop
repz
insl
lahf
mov
jecxz
icebp
xor
pop
fsubr
cmpsb
pop
push
cwtl
sbb
cmp
xlat
cmp
das
insb
into
fidivl
sbb
mov
pop
int
mov
nop
pop
ficoms
int
push
jae
rep
fsub
mov
xorb
aam
push
ret
scas
rclb
bound
sub
adc
push
push
pop
addb
pop
fstp
inc
outsl
mov
mov
scas
push
ret
mov
into
fstpl
push
mov
mov
or
pop
js
insb
mov
repnz
rcr
jmp
outsb
in
ss
lock
leave
jecxz
adc
jge
adc
vmovsd
adc
xchg
pop
movsl
dec
bound
das
dec
cmp
enter
pop
repnz
movsb
int3
in
repz
mov
mov
les
dec
cmpsl
dec
sbb
out
js
adc
mov
sub
cmp
data16
fcmovu
add
sahf
sbb
push
pop
mov
cmp
or
xor
xor
movl
add
out
daa
loope
cmpsb
daa
scas
lock
or
jmp
mov
outsl
dec
inc
fs
cmp
inc
cmp
sub
or
sarl
lods
adc
pusha
push
icebp
fdivrl
xchg
mov
pop
sti
dec
jmp
cmp
or
add
and
je
packssdw
cmp
pop
loopne
hlt
rcrb
cmpsl
inc
mov
loope
xchg
int3
cwtl
xchg
loopne
aaa
push
cwtl
mov
and
inc
sti
add
ret
call
insb
lret
insb
test
sbb
lods
into
out
leave
sarb
nop
shrl
jnp
into
jmp
movsb
loopne
sub
sub
decb
push
push
push
arpl
and
lret
imul
jge
popa
and
sub
into
push
lea
outsl
or
pop
mov
sbb
mov
rorl
cmpl
xor
or
adcl
or
and
mov
mov
popa
mov
movq
idivl
add
adc
lret
jo
loop
call
lret
andb
push
push
add
sbb
and
and
loopne
leave
sub
and
arpl
push
xor
fwait
push
ljmp
insb
sarb
outsb
push
xchg
xchg
inc
orl
cmc
xor
jg
pop
in
out
pop
push
xchg
in
cmp
xor
and
loopne
das
mov
stos
adc
jle
add
or
fwait
int
jg
xor
xchg
mov
and
add
adc
in
hlt
mov
dec
cli
add
bound
mov
jmp
ret
and
insl
call
outsb
cmp
pop
sbb
movsl
les
pop
fldt
mov
and
aad
mov
aaa
jae
xor
cmp
jg
stos
inc
cmp
pushf
mov
gs
xor
or
xchg
mov
or
xor
jno
sub
loope
icebp
dec
and
test
bnd
xor
insb
shrb
pusha
cmp
aad
js
mov
jmp
or
aad
sbb
popa
es
daa
outsl
sub
imul
std
aam
xor
enter
fidivrl
jge
je
jne
scas
inc
int
imul
cmc
in
insb
lret
dec
add
ds
cmp
add
or
dec
ljmp
faddl
mov
fisttps
leave
push
shl
rolb
in
add
test
mov
clc
clc
sbb
scas
push
push
xor
fsubp
push
mov
jp
out
popf
stos
sbb
movsb
call
nop
pop
sub
or
cli
mov
lds
jg
aad
or
lds
lcall
dec
or
push
add
dec
cld
fsubr
add
or
xchg
inc
add
adc
je
clc
jmp
mov
gs
movsb
nop
jge
cmp
and
add
pop
stc
nop
pop
sub
nop
out
push
cmpsb
dec
imul
out
out
notl
jno
jle
jecxz
ret
or
clc
mov
xor
add
mov
jle
mov
pusha
mov
aas
adc
sub
push
sub
mov
lret
push
jg
aaa
out
push
xor
stos
rcr
mov
out
and
aad
jne
xor
xor
lret
inc
add
dec
rdmsr
psadbw
sahf
lret
imul
xor
dec
mov
daa
adc
loop
add
test
add
test
push
mov
and
fmuls
dec
fadd
xchg
iret
sbb
test
int
loop
xor
test
xchg
lahf
jnp
jnp
inc
dec
roll
fdivrs
cmc
dec
xor
std
add
mov
add
in
push
jo
js
sbb
or
cmp
stc
push
xchg
daa
adcb
rorb
jnp
js
imul
clc
rolb
dec
or
mov
addb
inc
sub
shrl
out
dec
stc
jp
xchg
mov
mov
cli
into
cmpsb
push
lsl
decb
mov
and
sahf
negb
lret
mov
loopne
mov
dec
mov
adc
cmp
push
in
scas
adc
outsl
xlat
push
mov
cwtl
sbb
test
jae
pusha
mov
or
xchg
sub
xchg
out
xor
shll
pusha
dec
inc
pusha
std
loopne
jle
imul
je
in
mov
cli
sub
sbb
xor
imul
popa
aad
enter
cmp
imul
rolb
push
push
dec
aad
sub
mov
sbb
je
test
in
or
mov
pop
fadds
arpl
mov
cmpsl
cmc
xor
sub
cmp
scas
pop
int
xchg
ljmp
jmp
aas
and
adc
shll
loope
pop
mov
or
ficoms
dec
jbe
pop
inc
pop
add
pop
stos
dec
mov
and
mov
test
mov
or
adcb
int
push
mov
pop
dec
hlt
or
and
add
hlt
outsb
adc
cmp
adcb
mov
mov
cmp
cmpsl
out
jne
inc
xchg
mov
fmuls
adc
mov
ja
add
pop
popf
pusha
and
mov
xor
scas
cmp
jecxz
pop
sar
shlb
jb
roll
lret
fisubrs
inc
xor
xor
in
mov
hlt
imul
fsubr
ja
mov
xlat
addr16
aas
pop
outsb
xor
in
push
lods
push
adc
insl
mull
bound
mov
xor
out
push
out
xchg
inc
icebp
xchg
dec
mov
mov
adc
inc
in
push
and
adc
loop
subl
inc
push
xchg
xchg
pusha
stos
ljmp
sbb
fwait
jne,pn
pop
aam
inc
insb
dec
xor
jnp
xchg
orb
mov
xchg
test
rcrl
or
mov
or
push
jge
pmaddwd
orb
inc
pop
mov
mov
popa
jmp
xchg
xchg
jle
les
add
and
mov
aam
out
mov
mov
in
sub
negb
xor
bound
sbb
xor
push
addr16
pop
push
test
xor
push
and
in
fstps
ss
int
hlt
push
push
xchg
xchg
jp
push
xchg
push
jne
int3
fnsave
negb
outsl
hlt
sbb
jnp
cld
xor
sub
inc
jns
fwait
lret
add
mov
inc
imul
incb
mov
jne
xchg
push
inc
add
insb
dec
fldt
arpl
test
sarb
nop
idiv
pop
and
lock
adc
adc
cltd
mov
out
lock
cs
xor
sbb
jbe
addb
stc
pop
adc
mov
cmp
pop
cmp
shll
mov
clc
adc
or
jae
xchg
sbb
aam
inc
push
bound
test
decl
xchg
inc
mov
cli
dec
xchg
mov
jg
sbb
mov
xor
lret
and
loop
loopne
popa
xlat
mov
and
mov
mov
inc
dec
dec
lods
push
jnp
nop
sbb
inc
mov
cmpsl
adc
adc
enter
adc
pushf
push
dec
or
cld
jmp
pop
aam
fs
pop
into
ljmp
ss
popf
mov
sahf
xchg
jecxz
xchg
fidivrl
ret
pop
dec
cmp
stos
enter
pop
xor
jmp
cmpsl
ljmp
mov
outsl
xchg
das
sahf
ss
xchg
dec
mov
mov
int3
in
adc
sahf
ja
loope
jae
fstps
jge
dec
cmpsb
mov
xor
loopne
je
stc
adc
xchg
mov
jae
cs
outsb
mov
in
xchg
sub
sbb
push
push
and
pop
insb
addr16
insb
testb
pop
inc
js
aam
push
lcall
mov
adc
cmp
jo
inc
pop
mov
out
pop
subl
mov
and
mov
sub
push
mov
loope
gs
fs
cli
shr
inc
sbb
xchg
sti
adc
stos
or
xor
sbb
mov
jp
adc
int3
push
xor
push
js
sahf
arpl
cmp
shll
jnp
push
test
add
into
cmp
mov
jno
mov
std
scas
mov
mov
inc
nop
inc
sub
jge
jge
scas
push
leave
ficompl
sbb
lret
dec
fdivr
stc
fdivrl
popa
mov
cs
adc
inc
loop
fcom
xchg
sub
mov
hlt
aas
adc
fstpl
loopne
jge
fs
cmpsl
mov
cmpsl
enter
dec
inc
inc
das
in
push
lock
mov
adc
push
sbb
shlb
push
and
mov
lock
cmp
out
jne
andb
mov
aas
aaa
aad
fimuls
insb
push
mov
xor
adc
lea
movsl
push
jmp
out
es
mov
pop
push
fisttpll
jne
add
fwait
movl
mov
or
pop
jl
je
xchg
aam
daa
pop
nop
ret
imul
aad
inc
cltd
fnsave
push
inc
push
xchg
or
add
sub
and
adc
xchg
ds
repnz
or
loopne
push
nop
xor
lea
push
push
sbb
fstpl
bound
fsubl
jl
inc
fsubl
je
and
dec
xchg
cmp
sbb
sbb
fisttpll
aaa
out
stos
pop
pushf
cmc
ss
ret
push
pop
je
xchg
adc
clc
inc
lods
flds
shll
negl
jae
mov
daa
mov
in
mov
fwait
test
adc
pop
cmpsb
cmp
jmp
rorl
and
push
lahf
jle
movsb
xchg
bound
xor
mov
push
fnop
adc
inc
lock
lahf
mov
xor
inc
test
cmc
adc
sub
pop
mov
sbb
mov
xor
inc
ss
cmp
js
xchg
testl
or
int
mov
xor
sbb
inc
test
jno
or
cmp
shll
imul
sub
flds
cmp
out
fdivl
jle
push
pusha
mov
inc
add
popl
outsl
das
jns
xchg
push
dec
mov
push
xchg
sti
fsts
int3
add
mov
adc
jnp
jb
add
sbb
jge
data16
xchg
adc
loopne
fildl
iret
pop
stos
std
mov
test
loop
mov
out
jnp
cmp
add
ret
andb
push
and
ret
in
mov
repz
mul
mov
aas
shll
movsl
movsl
arpl
imul
arpl
xor
fwait
push
cltd
dec
jbe
mov
push
js
or
mov
and
fwait
out
nop
mov
mulb
jae
cmpsb
outsb
out
pop
cmpsl
mov
xchg
lods
xor
inc
in
sbb
inc
sar
outsl
cwtl
and
mov
in
decl
int
push
minps
jne
sbb
repnz
mov
ljmp
scas
je
sti
rorl
adc
pusha
xorb
dec
pop
ljmp
dec
loopne
orl
into
fcomip
cmp
pop
xchg
pop
cmpsl
adc
or
ficoms
push
aas
xchg
push
sahf
cmp
jnp
pavgw
ljmp
in
xchg
mov
rorl
pop
jb
out
cmpsl
inc
stos
fldlg2
jns
daa
mov
cmp
cwtl
jo
mov
int3
adc
sbb
or
repnz
xor
cwtl
lahf
add
adc
into
fwait
push
sbbb
hlt
xchg
mov
lcall
pop
mov
jno
cmpsb
adc
dec
or
outsb
mov
xchg
mov
push
cmp
pop
mov
xchg
out
jb
xchg
daa
stos
mov
and
dec
les
adc
sahf
lahf
jnp
lock
and
or
jmp
popf
ret
mov
and
xchg
mov
jnp
mov
cmpsb
dec
in
scas
ret
inc
scas
add
push
or
add
jnp
sbb
test
call
je
sub
test
cmp
lret
xchg
je
stos
or
lret
pop
inc
dec
hlt
jle
into
or
pop
mov
scas
push
ja
mov
xor
mov
adcl
or
loope
cli
inc
fisubrl
das
das
or
push
mov
stc
aaa
dec
cmpsl
pop
adc
pop
and
out
cli
cmpsl
and
mov
imul
pop
and
inc
stc
sbb
xchg
hlt
mov
enter
cli
test
add
andl
and
xchg
sub
mov
mov
jp
mov
int3
lods
ljmp
cmpsb
push
xchg
push
adcl
gs
add
mov
sub
adc
or
in
mov
sbbb
jg
push
push
jns
add
jbe
jge
ja
sub
mov
orl
je
mov
lea
pop
pop
jmp
in
mov
dec
fnsave
cmp
xchg
repnz
xor
ret
aad
pop
mov
mov
mov
and
mov
push
scas
sbb
insl
sbb
pop
incl
mov
fldl
or
sar
mov
shlb
add
mov
leave
nop
pop
pop
cmpsl
jbe
xor
out
rcl
ror
dec
sub
mov
inc
xor
aas
stc
lcall
aad
js
adc
les
adc
fistpll
pop
fidivrl
ret
xchg
mov
lock
call
fiadds
lret
mov
xchg
or
test
sarl
cs
pop
dec
cmp
rcrl
cmpsl
or
lds
sar
test
pop
js
js
push
aaa
pop
test
js
lds
cmp
cmp
mov
mov
stos
dec
testl
testl
clc
sbb
pop
xor
cmp
int3
subl
js
cmp
imul
sbb
lock
roll
xchg
loope
sbb
mull
pop
push
adc
mov
lea
jne
mov
xor
lods
mov
out
xchg
mov
aad
push
push
push
negb
aaa
cmovne
data16
lret
cmp
pop
lret
loope
jg
test
insb
lcall
pop
mov
loopne
test
xchg
fnstenv
xor
rclb
xlat
xor
and
adc
aam
hlt
sub
cwtl
addl
jmp
std
shlb
inc
mov
aad
outsb
jg
mov
aam
incb
clc
pop
cwtl
pushf
lock
cli
push
mov
xor
rolb
pushf
scas
scas
adc
push
adc
in
out
adc
jmp
aad
or
pop
je
xchg
inc
test
sbb
mul
adc
dec
jnp
cmp
lcall
xchg
jns
loopne
lds
dec
into
sti
ja
fcompl
pop
add
inc
fcmovbe
pushf
popf
pop
xlat
lret
std
jo
sub
pop
sbb
or
in
cmp
jle
cli
bound
lahf
mov
int3
leave
lds
gs
inc
sbbb
cmp
out
dec
fisubrs
lret
mulb
cmpsb
dec
mov
and
in
out
xchg
mov
in
mov
repz
loopne
xor
ret
adc
cli
xchg
add
mov
jo
les
outsl
xchg
jne
cmp
aaa
cmp
ror
xchg
inc
push
ret
push
push
mov
stos
xchg
notb
lds
int3
into
push
mov
pop
add
mov
push
and
orl
mov
std
lret
dec
movsl
xchg
pop
jl
ret
add
enter
ja
jl
sti
cmp
hlt
ljmp
pop
subl
dec
mov
sub
inc
or
dec
rclb
int3
mov
in
pop
add
fstps
dec
jns
int
mov
lret
test
mov
or
adc
xor
les
sbb
pusha
mov
push
fwait
mov
and
dec
push
stc
xor
add
mov
xlat
int
imul
push
mov
cli
sub
pop
jecxz
insl
loopne
sbb
mov
js
xchg
add
xlat
mov
das
or
add
aas
or
jns
jno
out
imul
imul
push
stos
in
nop
es
add
jnp
pop
add
mov
int3
ja
mov
and
and
loop
cltd
mov
inc
push
pop
or
aas
or
into
lahf
push
jp
add
stc
ljmp
ljmp
mov
dec
movsl
fldenv
jle
insl
sub
mov
add
jge
xor
xchg
je
andb
gs
dec
outsb
adc
movsb
and
pop
xor
ljmp
xor
pop
mov
das
mov
xchg
push
int
dec
adc
sarb
cli
ljmp
lcall
mov
lret
movsb
or
js
aad
gs
and
subb
hlt
je
lea
fsts
sahf
ret
push
fwait
outsl
je
xchg
or
test
adc
in
mov
insl
cwtl
pop
or
inc
mov
mov
gs
sarl
fdiv
stos
out
aam
push
sbb
jno
insl
push
push
cmpsb
jmp
push
push
cmpl
fsts
and
stc
test
pop
test
nop
inc
push
push
cmp
outsb
sub
wrmsr
sub
arpl
pop
adc
mov
pop
mov
movsb
es
idivl
sbb
jae
or
outsl
imulb
add
lds
sahf
push
dec
lea
pusha
xchg
jmp
xor
mov
cmpsb
pop
fucomip
fisttps
rclb
das
js
mov
std
push
outsb
ljmp
out
jae
clc
sbb
mov
loopne
in
out
mov
mov
adc
pop
pop
rep
mov
jo
add
sarl
xchg
adc
test
filds
and
xchg
or
push
mov
inc
inc
push
pop
or
cwtl
sub
lret
add
cmp
aas
pop
sub
decl
push
ja
int
imul
pop
fldenv
outsb
inc
xchg
pop
dec
adc
mov
insl
outsb
xchg
in
or
cmpsb
lret
or
das
xor
fs
sub
push
pop
repnz
ret
testb
std
popa
inc
mov
js
jb
jns
rclb
in
mov
fnstenv
inc
cwtl
or
lret
push
pop
ss
cwtl
sbb
cld
jge
outsl
inc
mov
mov
or
lcall
inc
mov
leave
rcrb
pop
jae
mov
mov
push
push
jb
cmp
movsb
inc
popf
cmpsb
or
jl
pop
cmc
xchg
lods
lods
addb
dec
bound
imul
sbb
daa
jle
push
hlt
rcrb
lods
jno
and
movsb
mov
xor
lahf
push
ja
pop
daa
dec
add
lds
jns
orl
sbb
daa
in
jo
sub
insl
out
sub
out
cs
int3
push
pop
sbb
dec
jo
in
or
mov
lods
imul
pushl
mov
inc
cltd
xchg
popa
sbb
imul
arpl
loope
imul
dec
out
mov
je
nop
jg
test
popf
jo
and
pop
lods
adc
cltd
lods
add
ret
rcr
mov
aam
leave
cmp
inc
movsl
scas
sbb
or
fcoms
sbb
seta
pushf
out
jl
jle
xchg
insb
or
pop
cmp
xchg
aas
push
xor
jge
mov
xchg
push
push
cmp
push
sub
jp
pop
sub
mov
out
mov
shr
xchg
pop
gs
dec
and
in
mov
sahf
xor
lahf
cmpsb
test
loope
push
cmp
lds
pop
inc
fiadds
mov
aam
testl
shll
dec
std
jge
dec
jmp
push
sbb
xchg
fistps
cmpsb
out
mov
dec
mov
xor
cmp
insb
adc
pop
je
stos
pop
add
jne
xchg
popa
xchg
jl
mov
negl
inc
inc
pop
mul
sarb
mov
jmp
push
xchg
int3
inc
push
mov
fldcw
jnp
stc
inc
shl
clc
mov
cmp
add
xchg
jae
fwait
ljmp
cltd
push
xchg
mov
lcall
adc
mov
jno
push
pop
xor
sahf
sub
lods
imul
mov
push
mov
sbb
pop
fs
mov
cmp
pop
add
adc
and
aam
jl
adc
loopne
pop
adc
ds
and
add
mov
ficomps
sub
movsb
jge
clc
arpl
dec
ret
js
cs
dec
or
or
push
lods
sahf
add
mov
lods
add
jns
sub
mov
xchg
pop
pusha
leave
stos
mov
fcomp
cwtl
lahf
aad
sub
mov
dec
pop
idiv
adc
mov
fadds
add
pop
outsb
repz
stos
lods
sbb
cmc
lret
enter
loop
cmp
lock
loopne
dec
call
fisubl
dec
and
add
jle
mov
aam
and
sbb
dec
and
cmp
stc
adc
xchg
test
mov
iret
xor
mov
lock
jno
pop
push
lods
leave
or
mov
mov
push
outsb
das
xor
xchg
or
stc
aad
rol
sub
loope
mov
ffree
mov
repz
pop
lcall
cmp
pop
xchg
mov
or
pushf
popa
adcb
push
or
sub
lods
pop
movsb
ret
add
inc
xlat
sub
add
fucomp
jnp
outsl
lahf
shlb
mov
jne
adc
push
cmp
out
mov
stc
push
cmp
jo
mov
aaa
lahf
dec
subb
les
testl
les
lock
mov
mov
cmp
movsb
push
lods
pop
imull
inc
sbb
arpl
mov
mov
sub
jecxz
add
push
lret
dec
fdiv
test
dec
and
ss
shr
mov
jbe
das
mov
mov
mov
xlat
cld
jo
out
sbb
jecxz
lret
lcall
jg
add
inc
or
pop
pop
int3
clc
push
fidivl
jo
cmp
inc
leave
ja
inc
or
mov
daa
std
push
jo
sbb
jb
testb
sub
jb
xor
and
or
sbb
fisubrl
lods
cmp
sub
pop
subl
xchg
jg
ret
lcall
sub
sub
xor
xchg
repz
inc
es
mov
cmpsl
stos
xchg
fidivl
ljmp
rcrb
test
sub
mov
cmp
popl
sbb
ret
adc
popa
sahf
jl
sub
push
push
add
lret
fldt
ffreep
lea
jp
cld
pop
dec
jb
sti
adc
aad
js
les
dec
adc
pop
daa
ficoml
outsb
dec
mov
inc
pop
in
sbb
fnstenv
in
cmp
jno
push
mov
pcmpeqb
mov
movsl
daa
sahf
xor
popf
int3
pop
and
scas
xchg
test
addr16
addr16
fildl
ljmp
sbbl
faddp
sub
cmp
pop
and
pop
push
adc
icebp
cmc
movsl
jge
inc
xor
adc
shlb
or
out
icebp
lock
mov
lret
sub
pop
xor
adc
and
fcomps
sahf
rcrb
add
mov
inc
xlat
or
mov
mov
pusha
repz
mov
call
lcall
sub
mov
mov
inc
add
add
popl
cwtl
bound
addr16
jg
mov
mov
and
push
mov
aad
mov
jmp
in
jno
imul
mov
mov
fdivs
and
icebp
mov
xchg
cmpsl
outsb
sub
pop
push
jmp
repnz
shrb
out
cld
movsb
mov
lock
pop
xor
into
mov
leave
ss
and
sub
inc
and
aaa
sbb
jns
fadds
fbstp
cld
pop
pop
mov
push
jmp
mov
pop
les
sub
icebp
lret
jo
lahf
lock
xor
mov
shlb
lahf
xchg
test
jne
cmp
fmuls
jb
cmc
sub
dec
faddl
pop
lods
aas
shll
fistpl
clc
or
lock
bound
sahf
test
cmp
movsb
adc
lods
je
ret
js
jmp
xchg
add
xchg
mov
or
cltd
dec
lea
adc
pop
sbb
jne
cmc
pop
add
arpl
neg
fcmovnb
pop
fwait
jae
push
xchg
mov
mov
dec
inc
push
mov
imul
mov
sub
dec
cmc
aaa
out
sahf
adc
xchg
adc
stos
add
out
pop
clc
add
mov
xor
pop
xchg
or
inc
lret
fstpt
mov
pushf
aam
out
inc
loopew
mov
fsubs
call
xchg
jns
xchg
adc
pop
js
arpl
push
and
sub
jle
push
jge
lret
inc
or
aas
rcrl
mov
or
push
mov
movsb
out
adc
or
inc
or
call
and
popf
xchg
sar
iret
inc
or
dec
outsl
pushf
mov
cmp
cmp
sub
daa
ss
aam
add
andb
or
dec
jg
push
cmp
inc
imulb
fimuls
mov
aam
pop
mov
pop
in
push
aas
xor
or
mov
lea
pop
mov
mov
sub
dec
movsb
mov
dec
lret
dec
icebp
mov
xlat
jp
cmp
aam
jnp
lret
fdivs
in
scas
lret
inc
sub
inc
pop
inc
pushf
filds
push
cmpxchg
jp
xchg
insl
xchg
sub
jmp
pop
jo
pop
data16
xchg
jl
sub
lods
or
outsl
jns
push
test
adc
jns
jnp
test
sbb
xchg
sbb
mov
jae
xchg
rolb
jecxz
test
imul
adcb
xchg
add
fldt
sarl
inc
xchg
mov
mov
push
xor
les
mov
cwtl
js
sbb
adc
rcrb
imul
test
test
cmpl
add
mov
movsb
lods
cmp
int3
or
xor
inc
or
inc
jns
sbb
sub
cmp
sbb
dec
out
dec
xlat
imul
add
in
psrlw
lods
aad
mov
jo
rorb
ret
mov
pop
xchg
pop
add
pop
sub
xor
xchg
mov
sahf
sbb
inc
dec
out
jo
jnp
adc
mov
mov
pop
and
mov
and
popa
mov
addl
loope
test
mulb
dec
jmp
fcoms
mov
or
std
jg
test
jbe
add
lods
lea
xchg
mov
out
add
mov
adc
out
addr16
mov
lret
imul
stos
lods
insl
lea
aam
negl
lahf
mov
rclb
push
pop
stos
fdivs
imul
or
dec
pop
pop
aam
cmp
push
repnz
outsl
rcrb
and
jle
lret
cmp
sbb
sbb
dec
shlb
imul
jo
push
sahf
fcomip
inc
stos
cwtl
pop
imul
jb
xchg
pop
popa
pop
and
popa
ret
xorb
sbb
mov
push
push
jmp
cmp
xchg
out
cltd
inc
mov
mov
adc
push
int3
dec
imulb
shrl
xchg
out
test
mov
lods
cli
sbb
jne
push
stos
pop
jbe
cltd
xor
mov
jbe
fcmovnbe
sahf
push
aam
cmp
mov
arpl
sub
pop
push
mov
or
mov
aaa
test
test
imul
xor
aad
lret
sub
push
sbb
inc
ficompl
fisubs
push
les
fimuls
inc
cli
jns
sbb
mov
les
call
push
ljmp
iret
fwait
or
jmp
mov
in
enter
aam
scas
sub
enter
dec
add
mov
mov
push
dec
gs
push
mov
xchg
outsl
nop
xor
lds
pusha
sti
mov
dec
int3
jmp
stos
mov
popa
jns
ret
mov
arpl
shlb
sbbb
les
mov
mov
cli
and
call
icebp
push
daa
jo
ror
fdiv
jecxz
add
push
jae
mov
jnp
addl
mov
xor
lock
aas
int3
mov
clc
cltd
xor
das
scas
xchg
das
les
adc
in
jns
jp
mov
xchg
and
dec
sbb
lods
mov
dec
call
add
nop
sub
imul
mov
bound
stos
push
adc
sbb
add
and
push
lds
mov
popa
aas
addr16
push
movsb
dec
addr16
lods
jmp
mov
mov
popa
fsubl
rcpps
clc
stos
mov
in
add
hlt
and
sub
sbb
loopnew
addr16
popa
es
mov
divl
test
cli
hlt
push
or
fdivs
sbb
stc
push
inc
fwait
into
sub
das
mov
sarb
adc
out
je
testb
int3
push
push
fs
sbb
leave
mov
call
adc
iret
lret
or
add
orl
fdivp
sub
sbb
jo
test
int3
cmova
addr16
movsl
les
ret
pop
inc
push
push
add
or
leave
stos
stc
jns
clc
mov
scas
test
inc
and
js
xor
xchg
pop
int3
imul
xchg
adc
clc
mov
sub
and
pop
addr16
and
fxch
xchg
jge
call
aas
mov
xor
xchg
mov
mov
and
loop
shlb
imul
sub
xorb
mov
ret
add
mov
jp
jns
aam
jno
mov
and
adc
jge
or
fldenv
inc
iret
fldt
lock
cmp
jb
pop
cmpsl
movsb
pop
and
inc
std
cmpsl
sbb
enter
lods
xchg
push
idiv
mov
mov
jae
clc
aam
push
add
out
into
pop
mov
imul
enter
jmp
bound
mov
pop
or
push
xchg
mov
mov
les
add
loop
cmp
xor
setl
adc
xor
lea
les
insb
jecxz
inc
mov
mulb
stos
mov
sbb
pop
fdivl
cmp
pop
and
pop
outsb
in
inc
jno
cmp
xchg
add
sub
pop
in
lahf
frstor
cmp
lret
les
push
int
mov
rcr
mov
lea
adc
mov
inc
dec
or
leave
mov
paddd
mov
je
les
dec
push
imul
mov
fnstcw
outsl
ljmp
fildl
popf
jo
repnz
or
cmpsl
call
cmpsl
gs
imul
jle
aad
pop
or
cwtl
dec
mov
es
inc
push
stos
stos
sbb
adc
push
popf
xor
sbb
xor
or
push
or
mov
jle
xor
scas
ret
add
fistpl
call
pushf
inc
scas
mov
lcall
scas
ljmp
aam
insb
outsb
shlb
sub
or
jge
xchg
ja
imul
jns
push
bound
int3
ds
and
mov
outsb
aad
sarb
fists
ds
cmp
call
inc
out
dec
dec
test
call
jge
les
jns
pop
aad
mov
xchg
push
lock
setns
subl
lret
icebp
mov
enter
cli
sbb
je
xchg
jmp
cmpsl
xor
sub
fsts
enter
scas
mov
inc
cmc
dec
mov
imul
or
inc
pop
sti
and
inc
aaa
data16
pop
push
inc
adc
in
or
add
scas
ljmp
inc
mov
cmpsb
cmpl
aaa
pop
lret
adc
jns
inc
dec
outsb
jae
repz
stc
popa
push
cli
shlb
push
lds
mov
cli
pop
pop
movsl
aad
adc
int
ss
movsl
pop
out
ja
iret
fisubrl
push
xor
pop
dec
fdivrl
sahf
push
dec
mov
xchg
aam
mov
mov
testl
fnsave
pop
jnp
ret
lret
rcr
inc
or
add
push
xchg
pop
mov
cmp
fcoms
mov
repnz
cmp
or
cmpsb
mov
rcll
pop
push
out
mov
lods
or
sbb
and
popa
addb
pop
in
scas
and
adc
hlt
iret
je
test
add
jns
out
jo
imul
aad
mov
pop
es
xor
pop
sahf
xchg
shlb
or
mov
and
cmpb
dec
jbe
popl
test
mov
scas
adc
xor
fcompl
pop
lea
in
or
mov
pop
and
sbb
lcall
and
mov
cmp
and
xchg
leave
sbb
ljmp
jecxz
cmpsb
inc
enter
movl
cmc
push
push
mov
sbb
lcall
enter
fwait
push
out
pop
sub
pop
adcb
aas
out
lret
mov
xchg
scas
ret
sahf
pop
pop
aas
pop
xor
je
ljmp
mov
jg
and
dec
sbb
xor
add
out
es
das
and
inc
shr
cmc
adc
or
sbb
dec
sarb
mov
fisubrs
loope
jp
mov
dec
sub
pop
pop
repnz
int
pushf
push
or
aaa
je
pop
jg
jge
iret
xchg
push
dec
pop
jnp
lcall
jge
sub
jle
jo
mov
mov
mov
jp
das
pop
repz
mov
inc
mov
leave
dec
push
xchg
xchg
mov
xor
pop
ret
pop
and
fucomip
cmpsl
mov
sub
mov
test
inc
dec
mov
popa
fmul
fcmovb
roll
pushf
or
inc
mov
std
int
lcall
dec
pop
add
xor
mov
repnz
xor
shll
cs
test
or
or
push
aad
adc
cmp
sbb
push
push
jo
les
aas
mov
pop
test
inc
mov
fisubrl
adc
dec
fwait
fwait
pop
or
in
mov
mov
push
sarl
int3
and
xchg
aas
jge
or
push
dec
xor
mov
mov
or
jb
arpl
inc
cs
inc
jo
leave
je
sbb
aad
xor
xchg
imul
mov
addr16
mov
cvtdq2ps
jg
test
ss
and
xchg
fs
mov
and
je
fnstsw
lock
aad
and
popfw
jae
scas
pushf
dec
js
movsb
sub
cli
sbb
dec
xor
pop
callw
stos
rcll
sahf
out
scas
mov
idivl
fisubl
test
in
jne
jmp
aam
lods
push
mov
test
nop
mov
call
cmp
adc
and
push
jg
add
repnz
mov
mov
push
out
in
adc
loopne
ja
popf
in
insl
mov
dec
sub
mov
and
stos
inc
aad
push
mov
ja
ljmp
jmp
mov
and
in
nop
mov
lahf
or
hlt
dec
jns
mov
cmp
inc
cld
jmp
aas
cmpsb
mov
jmp
mov
loope
xor
pushf
sbb
shlb
mov
xor
mov
adc
push
fbld
mov
mov
mov
lcall
lahf
pusha
stos
js
enter
paddusb
add
or
fisttps
fsubl
out
mov
call
mov
sbb
insl
hlt
cmpsl
pop
mov
mov
lods
push
loop
mov
aad
jge
mov
pusha
push
push
inc
movsb
popf
aas
stos
lret
adc
sahf
cld
jbe
fsubs
lret
cli
stos
int
stc
push
and
lret
jae
mov
or
iret
negb
ret
or
imul
cmp
sahf
mov
movsb
dec
inc
or
mov
jo
lea
add
andb
jns
jnp
sbbl
inc
sbb
ror
mov
data16
sbb
push
pop
inc
inc
pop
inc
ret
sbb
clc
ret
mov
clc
outsl
cmp
and
int3
mov
sbb
insb
xlat
mov
sbb
leave
in
fcmovnu
cltd
sub
and
icebp
pop
stc
and
push
loopne
sarl
jle
loopne
add
mov
enter
mov
ror
pushf
sub
lcall
pop
loope
out
cmp
sbb
mov
inc
das
mov
add
mov
aad
stc
std
jmp
rcr
loop
imul
rolb
test
xor
lahf
jmp
stos
es
ss
mov
data16
inc
loop
xchg
out
xor
ret
outsb
fiaddl
mov
push
loope
inc
fisubrs
clc
sub
and
xchg
subb
sti
js
mov
pop
xchg
icebp
xor
xchg
cmp
mov
mov
push
out
popa
int3
stos
ljmp
mov
fsubrp
shll
cmp
or
test
jl
ljmp
das
mov
js
ret
loop
mov
inc
lods
adc
inc
data16
subl
fcoml
lahf
in
cmpsb
sti
push
mov
lea
dec
or
imul
jbe
add
inc
sub
jns
fadd
push
mov
inc
cs
sbbl
call
ljmp
int3
push
out
call
cmp
jno
scas
lcall
decl
std
shl
sbb
lcall
scas
inc
out
push
lahf
mov
jo,pt
icebp
icebp
aaa
mov
iret
fwait
rolb
mov
arpl
sbb
loope
pop
insl
or
xorb
xor
push
pop
stos
sahf
cmp
sarb
mov
mov
adc
in
movsl
pop
popf
ss
scas
js
push
imul
pop
and
cmc
int
roll
insb
pop
pop
inc
xchg
cmpsb
xor
cmp
fwait
std
pop
rorb
pop
leave
sub
dec
test
out
jno
lods
mov
aad
cld
aam
movsl
xor
aam
add
dec
add
in
push
shrl
add
xchg
pop
scas
or
add
mov
inc
or
mov
pop
sbbl
outsb
outsb
gs
scas
in
or
into
lods
mov
rcl
arpl
js
mov
repz
cmpsb
xchg
xor
aas
mov
int
xlat
ss
ficomps
cwtl
push
sub
mov
pop
loope
and
mov
xor
xchg
out
outsb
sub
and
stos
mov
in
mov
mov
mov
mov
test
mov
push
subb
xchg
fsts
sub
adc
cs
out
in
repz
push
aad
mov
mov
push
mov
xor
cs
daa
mov
jae
push
mov
or
out
or
push
nop
int
dec
aaa
pop
push
bound
insl
jg
ficoml
iret
rcrb
push
stos
std
dec
pop
shll
lea
push
jae
adc
iret
xchg
fistpll
aaa
dec
cmp
in
inc
jne
inc
ljmp
outsl
jl
loop
cmp
push
outsb
or
stos
lods
inc
xor
jle
repnz
dec
fldln2
mov
sbb
push
arpl
sahf
outsl
in
loopne
repnz
mov
les
fucomp
sbb
pushf
sub
add
sub
push
jb
sub
fisttps
xchg
ja
xor
and
pop
dec
push
cld
call
popl
out
lock
pusha
mov
cmp
and
lret
sti
sarl
rcrl
xchg
mov
xor
jo
mov
mov
push
mov
enter
out
jb
pushl
jp
test
inc
nop
int3
decb
aas
jl
add
add
sarl
das
dec
or
push
minps
adc
and
out
push
push
mov
into
adc
in
loope
std
add
lock
pop
fidivrl
dec
movsb
les
lret
or
cmp
jl
cmp
out
es
pop
outsl
or
jnp
lea
jnp
leave
popf
sarb
mov
sub
add
sbb
jl
mov
xchg
sub
dec
push
or
ret
enter
cmp
cs
mov
mov
icebp
sub
les
cmc
inc
mov
adc
fs
test
iret
jo
sbb
daa
test
test
jbe
sbbb
push
ds
mov
dec
push
imul
int3
jnp
aam
add
dec
repz
shrb
add
and
outsl
sub
test
hlt
mov
ss
mov
shr
mov
mov
or
sbb
pop
data16
and
aas
pop
sub
negl
cli
sub
pop
push
arpl
test
cli
xor
mov
jg
movsl
mov
ret
scas
cmpsl
sbb
cld
adc
dec
scas
into
mov
xor
inc
pop
iret
lea
jle
cmp
jmp
dec
mov
in
out
cs
orl
shlb
adc
or
data16
pop
add
aaa
fiadds
jne
mov
cltd
ljmp
mov
cmpsb
mov
xchg
stos
out
daa
cltd
imul
lea
fwait
sub
scas
fcomps
enter
pop
daa
push
cmp
mov
leave
xor
jecxz
int3
scas
fstpt
stos
sbb
mov
add
sbb
imul
jo
ret
sbb
jnp
mov
fidivrs
xchg
push
mov
pop
ljmp
dec
jbe
movl
cmp
jno
push
outsl
pop
adc
sub
mov
mov
jmp
incb
fwait
call
cltd
sbb
jmp
aas
xchg
daa
and
les
inc
mov
shld
add
mov
in
xor
cmp
out
cmpsl
lock
inc
lods
push
outsb
inc
add
push
inc
fistpll
movsb
popf
sub
sahf
cwtl
inc
arpl
mov
testb
xor
sbb
and
repz
xor
push
lock
sub
pop
clc
and
and
add
jge
mull
or
sti
xor
jno
stc
in
cmpsl
cli
dec
push
adc
sbb
jns
and
mov
mov
aam
dec
push
lods
adc
addl
ja
push
cmc
loopne
cmp
scas
in
cmc
jecxz
imul
popa
and
rcrb
jbe
std
mov
call
sbb
enter
movsb
mov
rcrb
pushf
nop
lret
in
jbe
in
mov
es
push
call
jbe
insb
sbb
or
repz
cmpsl
xchg
rorb
icebp
into
jbe
int
loope
ror
or
push
xor
lock
sub
dec
lods
jge
mov
fidivrl
leave
mov
adc
ss
lahf
cmc
jmp
into
add
imul
negl
out
sti
iret
dec
addr16
dec
mov
fsubs
pop
inc
inc
loope
push
xchg
mov
sti
jle
mov
cmpsb
push
test
sbb
and
or
push
mov
enter
add
adc
mov
sar
jle
scas
mov
lea
add
xchg
idivb
in
shl
arpl
adc
or
nopl
mov
cmp
aad
fmull
into
pop
imul
ljmp
stc
push
inc
mov
dec
les
sbb
or
ja
testb
fwait
pop
fisttpll
cmpb
cmp
jbe
mov
jno
mov
outsb
pop
test
pop
inc
adc
xchg
ljmp
jno
sbb
jmp
outsb
or
push
jle
movswl
jmp
rolb
call
jbe
movsl
decb
ja
xchg
mov
push
sub
lret
and
popa
rol
or
jmp
mov
pop
lret
sub
inc
inc
popa
xor
or
lods
pop
dec
pop
sub
fldl
sarb
inc
dec
or
mov
js
mov
jae
add
push
int
mov
push
sub
decb
mov
out
pop
sbb
mov
xchg
mov
scas
aas
cmpsb
in
fisttpll
xchg
lea
mov
inc
pop
lret
dec
fcomi
aad
cmc
push
or
cmpl
or
testb
xor
std
sahf
pop
outsb
test
fnstcw
aad
pushf
lahf
push
cwtl
push
pop
lret
es
jbe
daa
daa
cltd
and
mov
sbb
es
pushf
mov
jo
out
dec
sub
push
lret
xchg
je
xchg
in
sbb
inc
pop
sub
aas
inc
gs
call
adc
push
sub
push
mov
mov
inc
cli
lahf
repz
icebp
imul
int3
push
outsb
in
pop
push
xor
out
dec
mov
mov
dec
test
movsb
les
dec
jo
lds
out
fimull
loop
jae
jbe
jbe
add
jbe
insl
pop
inc
out
cld
pop
into
cmp
lret
fisubl
in
shlb
mov
fs
scas
fiadds
lcall
jno
and
add
pop
sbbb
sub
iret
hlt
push
cmp
divl
sbb
ret
outsl
dec
icebp
xchg
xchg
mov
iret
push
pop
shll
mov
outsl
jmp
paddb
push
mov
mov
movsb
iret
mov
outsb
stos
decb
repnz
sahf
rclb
sub
mov
or
mov
mov
clc
inc
push
rolb
inc
dec
testb
mov
outsl
lds
pop
mov
sbb
mov
nop
leave
les
aam
sub
mov
jge
adc
enter
fstpt
xor
arpl
mov
mov
bound
adc
imul
scas
pop
cwtl
bound
sbbl
gs
mov
push
push
movsl
popa
int3
pop
pop
mov
clc
push
ret
xor
lret
fists
xorb
mov
adc
paddusw
arpl
cld
pop
movsb
adc
out
xor
adc
into
mov
imul
pop
add
out
mov
insb
repnz
repz
movsl
ja
mulb
cmpsl
je
xchg
lds
mov
mov
fwait
xchg
mov
sbb
add
push
push
mov
inc
mov
mov
jmp
dec
ja
mov
xor
inc
mov
mov
enter
test
add
ret
sub
nop
jnp
lods
xchg
ljmp
mov
xor
cwtl
xlat
mov
dec
cmp
scas
or
lods
mov
loopne
outsb
jg
out
test
pop
mov
sub
push
out
sbb
add
hlt
push
fwait
fs
int
notb
mov
sub
xchg
mov
mov
jmp
gs
dec
mov
fwait
outsl
sub
cli
mov
jge
cmc
dec
xor
leave
outsb
adc
xchg
cmp
add
push
xor
int
and
divl
mov
subl
xchg
scas
inc
leave
xchg
pop
lods
adc
rorl
xchg
fidivs
add
cmp
daa
mov
dec
jl
das
inc
cli
mov
cltd
sbb
outsl
in
push
lods
sarl
filds
adc
push
adc
or
mov
mov
push
mov
inc
inc
pop
xor
ljmp
or
leave
mov
inc
jmp
stc
jbe
fstp
dec
mov
lcall
jns
cld
add
mov
mov
dec
sub
lret
lahf
mov
call
int
pop
sbb
pop
outsb
loop
lcall
mov
das
scas
push
enter
test
lret
addw
xchg
lcall
fildl
icebp
xchg
xchg
sub
mov
sbb
in
xor
sbb
xchg
cs
push
push
inc
xchg
xor
cli
xchg
loop
mov
cld
push
hlt
jne
and
xchg
push
ds
in
xor
and
in
and
xor
scas
jns
iret
sarl
xor
add
aas
dec
mov
inc
test
adc
or
push
insb
dec
repnz
iret
sub
mov
push
pop
ljmp
inc
test
xchg
lcall
mov
sar
push
pop
push
aaa
add
in
dec
xchg
mov
int3
dec
inc
xchg
mov
add
mov
sbb
jae
or
rolb
lret
ja
jae
cld
cmc
push
das
sar
ret
mov
pop
out
or
xor
lahf
pop
push
out
jmp
mov
mov
gs
sbb
ret
pop
loop
mov
outsl
mov
cli
out
mov
add
push
cmp
inc
or
aaa
outsl
or
cmp
fbstp
insb
sub
mov
andl
fists
iret
xchg
rorl
xchg
out
add
ljmp
aas
adc
mov
cmp
icebp
mov
lcall
lret
add
fmul
jp
jnp
fmuls
lock
fisttpll
mov
mull
cs
adc
push
ficomps
push
js
fwait
add
in
adc
push
jo
mov
fwait
icebp
push
shl
cld
stos
xchg
add
cwtl
ds
out
sub
sbb
jge
bound
pop
pop
mov
pop
in
xor
popf
inc
push
cmp
pop
sarl
shlb
dec
pusha
loope
jmp
ret
iret
cmpsl
mov
and
and
mov
mov
cmp
mov
and
test
and
pop
iret
dec
adc
icebp
into
and
shlb
jb
sub
sbb
in
es
pop
mov
xchg
and
les
daa
mov
scas
cmp
lds
add
or
das
test
insb
pop
ljmp
sub
cwtl
xor
push
outsl
jbe
roll
inc
push
sub
add
add
cmp
add
dec
aam
mov
addr16
inc
in
fs
lods
ja
enter
in
and
sbb
add
and
call
jb
cmp
orl
cmpsb
rorl
mov
stos
push
pusha
or
push
mov
mov
xchg
push
xchg
mov
cs
or
cs
sub
inc
repz
push
lahf
cmc
jmp
test
out
mov
xor
fistps
in
in
xchg
stc
mov
xor
push
jl
stos
movl
enter
pop
jle
adc
and
mov
mov
fisubrs
lret
add
jno
cmp
and
lret
imul
dec
xchg
mov
pop
push
icebp
jae
rcrb
mov
push
mov
inc
adc
les
idivb
cmp
ret
push
mov
cltd
test
sarb
ljmp
stc
stos
mov
push
shlb
sti
adc
cmp
sub
xor
divb
test
roll
rclb
jle
ret
mov
inc
pop
dec
scas
mov
or
push
and
sub
scas
mov
repz
push
sbb
es
mov
add
push
cmp
fbld
mov
cmp
sub
adc
scas
clc
xchg
scas
push
loope
rcll
jge
pop
movsb
out
ds
mov
lds
sub
mov
sub
stos
aas
mov
adc
rcrb
pop
int
addr16
shll
jbe
mov
cs
fcoml
mov
jne
sub
in
xor
inc
mov
xor
cmc
jo
insb
jp
mov
fdivr
xchg
and
xchg
subb
loope
lods
in
dec
inc
loopne
out
mov
outsl
add
arpl
mov
scas
addl
jge
pusha
or
aam
shr
pop
gs
adc
adc
ret
dec
lcall
pop
push
fwait
cmpsl
shrb
dec
mov
call
mov
shrb
mov
clc
or
out
mov
sub
dec
jp
push
push
mov
repz
dec
fs
push
mov
iret
xchg
mov
outsb
lods
pop
iret
lahf
cmovg
pop
nop
xchg
leave
jno
in
add
cwtl
popf
insb
cltd
sti
lret
inc
roll
arpl
mov
mov
outsb
int3
dec
and
jne
insb
test
mov
in
repz
out
mov
mov
sbb
jae
pop
stos
lods
aaa
add
or
fwait
jb
sbb
sbb
or
cmp
sub
ja
push
test
dec
fs
mov
sarl
loopne
aam
sarb
lock
clc
data16
mov
loope
enter
mov
out
and
lods
fisttps
jo
rcll
adc
xchg
pop
or
and
and
push
ret
aad
lret
and
outsl
push
sub
jge
movsl
adc
dec
cmpsl
adc
add
repnz
mov
in
hlt
xor
add
cmc
push
push
cmp
xchg
pushf
push
pop
push
lock
mov
out
xchg
push
test
filds
sub
inc
mov
fwait
into
push
mov
lock
xor
fisttpl
fiadds
imul
aas
into
idivl
sbb
mov
mov
push
mov
push
mov
cmpsl
nop
mov
mov
adc
rclb
and
sbb
stos
aaa
inc
mov
jge
std
fidivs
jge
cld
arpl
mov
repnz
adc
or
mov
adc
test
loopne
hlt
jne
adc
sahf
or
or
mov
xchg
pop
jae
cmp
outsl
jns
rorl
xlat
aam
xlat
mov
add
xchg
lret
jge
lahf
aam
mov
xlat
sub
push
ds
xchg
mov
and
mov
pop
imul
sub
fwait
jp
test
xchg
cmpsl
adc
adc
xchg
mov
xlat
sbb
daa
icebp
jp
repnz
push
inc
jns
and
pop
iret
cli
sub
sbb
dec
ja
je
stos
daa
or
mov
mov
dec
arpl
movsl
fistpl
es
fs
jg
lods
mov
sbb
fldt
scas
pop
jl
dec
sbbb
in
ret
movsb
sahf
xor
jmp
sti
insl
jns
jnp
jge
add
cmp
int
in
test
xchg
inc
push
jmp
mov
movsb
rorb
imull
cmp
ret
std
push
sub
test
outsb
mov
jl
shrb
mov
rcr
xor
fmul
add
add
push
inc
or
adc
xchg
das
push
xor
pop
xor
mov
addr16
cmpb
lahf
daa
adc
hlt
into
push
leave
mov
lds
xchg
std
push
mov
shrl
and
mov
enter
adc
daa
adc
in
mov
mov
mov
jae,pn
jbe
out
nop
cmpsl
xchg
outsb
sarb
dec
xlat
data16
int3
mov
outsl
jecxz
mov
pop
pop
test
cltd
xchg
jecxz
xchg
dec
icebp
cmp
mov
vmwrite
in
mov
jns
inc
lea
divl
cld
inc
mov
insb
ror
dec
push
lret
add
pop
addr16
adc
sbb
mov
dec
movl
sbb
das
cmp
pop
insl
and
cld
cmpsl
inc
nop
xchg
xchg
pop
mov
adc
xchg
jmp
mov
sahf
xchg
rorl
mov
aad
sub
mov
ja
fstps
dec
jnp
shr
test
aas
push
and
sbb
dec
and
rol
aad
insb
repnz
jb
push
add
stos
lret
mov
add
and
dec
fstpl
cmp
daa
sub
ss
mov
fisttpl
std
ret
sub
jo
cmp
fwait
cmpb
aam
xlat
out
ja
pop
cltd
xchg
add
daa
fldt
sub
fnsave
push
xor
mov
ds
gs
roll
roll
lock
adc
loopne
sbb
jae
mov
scas
aas
mov
pushf
in
pushf
jb,pt
dec
mov
lods
out
mov
outsb
loopne
sub
sbb
lods
ja
stos
ljmp
dec
cld
sbb
cmpsb
mov
dec
lock
sbb
ret
loope
iret
jg
xchg
cmc
xchg
loopne
jb
and
adc
lret
test
mov
pop
inc
jne
cwtl
add
adc
ds
roll
enter
push
mov
cmp
js
int3
push
clc
jmp
cmp
sub
inc
inc
in
jge
into
mov
jp
or
inc
shrb
test
mov
ss
xchg
jnp
pop
inc
test
insb
xor
jae
fwait
xor
inc
pushf
addr16
mov
js
popa
and
jne
lods
push
lret
jecxz
lods
addr16
and
add
popf
das
cltd
lcall
push
push
sub
push
mov
adc
add
sti
mov
adc
xchg
dec
icebp
push
adc
cmp
inc
mov
jmp
sbb
push
add
ret
addr16
call
in
cmp
cli
jnp
pop
inc
adc
shll
mov
or
jb
push
xchg
in
push
and
negb
in
neg
adc
scas
outsl
pop
mov
and
arpl
mov
or
pop
push
out
cmpsl
in
cmpb
lret
sbb
loope
leave
xchg
push
or
or
insb
ds
add
stc
cmp
ds
icebp
test
cmp
fldt
mov
sub
xchg
outsb
xor
js
ljmp
mov
jle
test
test
adc
inc
or
xchg
mov
cmpl
push
xchg
and
mov
pop
and
mov
xchg
sbb
call
mov
cmp
mov
sub
shl
inc
mov
ja
inc
cmp
outsb
and
fisttps
dec
jbe
fisttps
xchg
fisubs
lret
aas
sbb
sarb
add
cs
lds
push
and
test
jbe
cli
fsubr
pop
fs
kmovw
rolb
pop
jp
out
cmp
xchg
cmp
xchg
sub
fdivrl
push
adc
imull
add
js
imul
jb
jbe
mov
stos
rcrb
xor
sti
stos
imul
push
mov
push
xorb
xchg
imul
test
out
pusha
xchg
dec
popa
or
imulb
daa
pop
jae
fcmovnbe
rclb
out
jns
ret
icebp
lret
shrb
xor
cmp
push
pushf
sbb
adc
sub
sbb
fdivrl
xchg
pop
mov
jo
or
dec
jno
adc
adc
cmc
xchg
sti
nop
arpl
testb
in
and
mov
mov
out
ja
sahf
icebp
aaa
loopne
add
aas
shl
mov
sub
push
js
lcall
sbbb
roll
jne
push
loopne
pop
sbb
loop
jmp
dec
les
test
inc
je
lock
and
or
or
movsb
leave
inc
add
sbb
les
in
pop
fldcw
mov
jne
mov
in
cwtl
ss
sbb
dec
lds
je
popa
ficompl
psrad
push
add
xchg
movsl
pop
sub
dec
mov
sbb
lcall
je
mov
shrl
mov
les
shr
adc
pop
sbb
add
imul
ljmp
pusha
dec
and
sub
jae
flds
hlt
notb
xchg
mov
sub
mov
add
fstp
pop
stc
stos
sub
push
loopne
or
and
pop
inc
mov
rcr
aas
adc
out
imul
sub
dec
int
fimuls
test
sbb
pop
adc
add
movlps
jl
sub
add
imul
sub
ds
nop
movsl
mov
movsl
xchg
lahf
data16
xchg
push
push
jbe
sbbl
fnstcw
aam
push
gs
sarb
inc
cld
aas
cmp
jae
sarl
ret
lcall
sti
mov
jns
outsb
out
div
pop
les
dec
jecxz
inc
xchg
mov
sub
imul
cmp
cmp
arpl
cmp
sbb
and
pop
test
outsb
jmp
jbe
push
outsl
mov
jno
lods
aam
dec
xor
popf
sbb
cmp
dec
test
icebp
fwait
leave
jae
pop
push
insb
sub
xchg
jo
es
dec
sub
ret
sbb
clc
loop
les
loope
push
jp
or
ud2
xchg
pusha
hlt
outsb
ljmp
lcall
test
pop
pop
xor
xchg
xchg
sub
js
mov
adc
daa
adcb
push
ljmp
jnp
addb
sub
pushf
outsb
outsb
stc
cmp
inc
mov
outsl
lds
fisttpll
push
pusha
ljmp
sbbb
xchg
icebp
incl
xchg
pop
pop
cmp
jl
adc
inc
sbb
mov
push
hlt
sbb
pop
sub
mov
pop
jmp
or
adc
xchg
add
and
and
xchg
pop
jne
sub
fsubl
rorb
xor
and
cld
pushf
mov
inc
int
inc
sbb
dec
or
stos
push
sbb
mov
js
fstp
push
cltd
gs
sbb
fimuls
push
jl
sub
fdivl
movsl
or
nop
fisubl
xchg
sub
mov
mov
xchg
call
dec
repz
bound
insl
jae
jns
push
pop
arpl
cmp
test
es
push
xchg
jp
xchg
add
sbb
or
sbbb
inc
mov
das
test
adc
sarb
add
mov
lods
jns
mov
push
add
out
fadds
mov
push
les
or
xchg
add
push
rcll
outsb
jae
xchg
mov
sbb
push
inc
test
fistps
inc
push
loop
ret
sub
subl
cmp
into
sbb
sub
cmp
and
cmc
pop
test
adc
sahf
add
adc
cmp
jo
cmp
inc
loope
fdivrl
push
fwait
inc
int
sbb
xchg
aam
mov
jno
scas
sub
fdivrs
jecxz
mov
out
popf
bound
sub
pop
cmpb
add
jg
insl
out
pop
fldlg2
pushf
insb
imul
call
divb
pop
mov
push
sbb
dec
lock
xor
lret
push
inc
fdiv
dec
sub
push
les
add
mov
adc
jae
out
inc
jecxz
mov
xchg
push
insb
movsb
or
pop
sbb
mov
test
pop
cmp
sbb
or
js
pop
lods
fstps
dec
scas
pop
jge
arpl
cltd
pop
dec
adc
inc
ja
pop
scas
or
testl
xchg
dec
das
inc
and
icebp
jb
shl
adc
adc
fwait
jecxz
add
mov
xor
mov
ljmp
int
iret
aam
rcrl
xor
xor
ret
out
aaa
sti
push
pop
sub
stos
aad
or
sub
sbb
pop
cmpsb
jb
dec
cmp
cmpsl
mov
andl
jb
lret
mov
and
add
xlat
add
xchg
adc
out
sahf
inc
subl
mov
stc
stc
int3
add
mov
mov
push
mov
jl
sub
mov
js
sbb
lods
data16
push
sti
les
xor
xchg
clc
icebp
xchg
iret
pushf
dec
shl
in
mov
xchg
fcmovb
sbb
xorl
mov
mov
mov
sbb
nop
inc
pop
jmp
and
xor
jle
ss
mov
xchg
lods
sarl
adc
loop
hlt
mov
jle
push
and
lods
cmp
sbb
dec
cmc
xchg
dec
outsl
lods
pop
push
dec
mov
cmp
rcll
and
out
xor
icebp
or
jp
jmp
push
test
mov
jp
insl
jnp
andb
xchg
adc
loop
jl
cmpsb
jno
es
aad
add
push
int
sahf
sbb
pop
push
sub
cmp
add
adc
push
divb
or
mov
push
lret
push
pop
mov
testb
mov
dec
inc
test
sbb
inc
cwtl
in
and
push
ret
lock
adc
movsl
bnd
out
arpl
ljmp
push
fldl
dec
or
dec
aad
mov
pop
add
mov
lods
dec
xchg
push
and
loopne
loop
adc
shlb
packuswb
jae
imul
sbb
movsb
sbb
mov
mov
or
add
inc
orb
in
js
xor
sti
shrb
and
insl
cld
das
xchg
or
sbb
fstpt
cmp
repnz
cltd
mov
movsb
leave
mov
aam
bound
sub
fdivr
sbbb
mov
mov
sub
mov
lods
outsl
xchg
test
mov
out
cmp
bound
push
test
xchg
aad
aas
rolb
cmpb
movsl
add
cwtl
pop
jae
test
push
leave
pop
mov
pop
rorl
mov
out
xchg
repnz
and
push
testl
jl
stos
adc
in
out
in
popf
mov
lods
repz
js
imull
call
iret
jne
jp
xlat
and
cmp
xchg
xchg
push
repnz
adc
jae
sahf
lods
movsb
mov
mov
rcrl
sahf
dec
xor
add
add
in
jne
sbb
stc
sti
test
inc
xchg
sub
insl
mov
pop
ret
fists
dec
xchg
out
xor
divb
cmp
in
ja
scas
insl
adc
dec
aam
lods
mov
sub
and
xor
hlt
mov
pushf
inc
mov
movsl
jg
add
ds
js
add
sbb
test
test
shr
and
push
cld
iret
push
sar
lods
sub
xor
jae
repz
repnz
mov
or
hlt
dec
lahf
mov
subl
jp
loope
push
pop
add
adc
aad
gs
jae
daa
push
testb
cld
xchg
icebp
mov
sub
out
fst
insb
or
adc
cmp
mov
xor
mov
es
lret
xchg
mov
imul
ljmp
shl
loopne
imul
cmc
jns
dec
jo
jecxz
movsl
icebp
imul
push
xchg
xchg
loope
rorl
pop
rorl
repnz
pop
test
outsl
cltd
stos
jns
pop
imull
cli
sub
in
cmpsl
jb
jge
fs
cmc
xchg
in
js
popf
lret
or
lret
fstpt
and
loop
xor
in
sti
sbbb
adc
sub
ficoml
jbe,pt
xor
inc
mov
mov
outsl
into
test
push
rcll
gs
push
aas
mov
xor
insb
pop
les
cs
and
sysenter
push
fwait
dec
shlb
mov
adc
ret
push
fldcw
shrb
jns
jae
pushf
fwait
sbb
pusha
mov
loop
ljmp
mov
pop
ss
pop
lahf
cli
jns
clc
dec
push
sbb
in
mov
pushf
jg
notl
sub
repnz
mov
int
and
pop
jb
xchg
dec
test
xchg
out
dec
dec
jne
shrl
lea
arpl
fbstp
popf
neg
loopne
inc
inc
sub
movsb
and
sbb
cli
push
pop
scas
pop
cmp
and
stc
shll
js
inc
outsb
ret
clc
test
divb
dec
bound
subb
int3
sub
mov
imul
roll
sbb
ljmp
adc
jge
cwtl
in
jp
and
inc
jbe
es
test
fnstsw
sub
and
push
stos
cmp
jno
fcoms
mov
sbb
negb
sub
sub
xor
jge
pop
repz
pop
mov
stos
into
sbb
inc
and
jne
nop
dec
jg
pop
sbb
pop
xchg
aad
ss
cmp
jne
imul
scas
iret
ss
hlt
jg
in
pop
sub
div
pop
xchg
inc
pop
lds
sub
fisttpll
sbb
mov
test
leave
mov
addr16
leave
cmp
das
sub
enter
add
hlt
mov
insb
adc
adc
xchg
xor
xchg
add
xor
les
adc
xor
cmc
inc
dec
mov
add
shll
pop
es
push
cltd
xchg
fistpl
xchg
ss
insb
lahf
je
inc
mov
es
or
scas
xchg
xchg
add
repz
repnz
fidivs
in
pop
jmp
iret
fwait
int3
xchg
add
mov
hlt
mov
cmp
mov
adc
pop
nop
mov
jns
sub
sbb
add
dec
push
negl
xchg
clc
mov
inc
imul
in
scas
xor
in
sub
sub
jnp
jno
xchg
out
aas
insl
or
insl
jmp
xchg
dec
lcall
add
in
mov
imul
jae
fwait
repnz
shlb
jbe
ss
insl
pop
cwtl
lods
push
int3
jecxz
cmp
mov
test
sbb
sbb
les
scas
inc
ds
cs
movsb
out
adc
je
aam
fiaddl
imul
pop
ljmp
stc
push
sbb
mov
shlb
and
bound
test
inc
inc
aam
inc
lea
aaa
enter
loop
xor
aad
and
sbb
sub
xchg
fcomps
xchg
sub
mov
mov
cmpsb
dec
xor
xchg
cltd
out
rcrl
lahf
ret
xchg
inc
pop
jno
inc
pop
adc
out
subl
lcall
mov
lret
mov
imul
fwait
aad
and
xchg
cs
test
fistps
cmp
cli
or
sahf
mov
test
jg
inc
and
aas
mov
call
addr16
push
aaa
enter
push
test
mov
lea
mov
repz
frstor
aad
inc
mov
dec
insb
in
sbb
imul
in
pop
loop
xchg
inc
repz
xor
sub
fists
dec
data16
roll
jo
adc
test
push
pop
add
test
outsl
jmp
outsl
andb
lcall
inc
cwtl
cltd
icebp
or
cmpl
jno
xor
lahf
pop
test
jb
cmp
or
mov
jmp
clc
xchg
bound
adc
les
enter
addb
adc
mov
push
push
xchg
fimuls
jmp
imul
aaa
adc
bound
into
mov
or
xchg
cmp
mov
jo
outsb
push
mov
dec
das
add
das
ret
sbb
or
xor
inc
inc
je
fcoms
sub
mov
das
daa
cmp
subl
xor
fs
testb
addr16
pushf
lock
and
dec
cli
push
bound
and
jno
scas
shlb
fsubs
push
jl
jecxz
mov
xchg
pop
stos
fs
pop
cltd
shlb
adc
sbb
mov
js
aam
int3
pusha
inc
cmp
jo
fiaddl
cmp
mov
mov
jg
or
inc
dec
dec
imul
pop
loope
rcr
daa
rcll
insl
cmpsb
or
pusha
loope
fldcw
sub
lods
popl
lahf
cmp
xchg
mov
lahf
sub
inc
shrl
sbb
xor
leave
push
adc
fcoms
jo
cwtl
jmp
shrb
mov
in
jmp
mov
cmp
xor
pop
sub
adc
sbbb
add
and
or
jg
int
jnp
insl
fisttpll
out
lods
mov
outsl
stos
mov
int
xorb
aas
dec
aaa
dec
mov
push
or
mov
roll
adc
inc
mov
mov
add
popf
decl
cmp
lret
leave
lods
in
jl
in
aas
cmp
pop
loope
outsb
jae
shrl
andb
in
roll
and
ja
imul
mov
daa
cmp
loopne
pop
jl
out
jp
sbb
test
mov
push
hlt
add
int3
int
cmpsb
cld
out
or
aaa
pop
gs
xlat
xor
push
arpl
jae
scas
and
gs
call
ja
jmp
std
aad
jle
and
push
cmc
loop
fiaddl
sbb
enter
scas
rcl
sbb
imul
andb
orl
cmpsl
jbe
jb
pop
xchg
xorb
out
popf
cmp
dec
push
push
xlat
adc
std
or
imul
ficomps
xchg
pop
push
inc
add
adc
cmp
xchg
and
or
filds
xor
sti
sub
mov
inc
mov
mov
aam
xchg
fs
pop
iret
test
scas
xchg
pop
in
and
pop
arpl
push
and
xor
lret
xchg
inc
mov
je
enter
cmp
cmp
popa
sub
mov
sub
aad
aam
ret
andl
mov
adcb
cmpsl
push
and
outsb
enter
push
es
mov
scas
pop
mov
jo
push
jb
sub
movsb
xor
inc
das
cmpsb
and
xor
sti
jnp
shl
punpckldq
or
arpl
ss
loope
inc
mov
jb
movl
cli
push
dec
add
ds
das
loope
imul
stos
cmpsb
cmp
lods
pop
loope
dec
nop
lods
inc
mov
pop
dec
enter
cmp
mov
inc
movsb
jo
mov
bound
inc
cs
adc
daa
adc
arpl
repz
dec
in
push
xchg
mov
enter
pop
mov
nop
jb
pop
divl
les
jb
sub
lret
lods
adc
fwait
mov
sbb
dec
ds
out
add
push
arpl
push
adc
jmp
mov
jle
out
popa
jbe
shrl
jecxz
mov
jae
lods
jae
mov
mov
lea
je
xchg
in
mov
fidivl
cmpsl
mov
push
mov
test
xor
adc
pop
push
xchg
and
pop
sub
mov
dec
dec
add
sub
pop
pop
mov
jnp
int3
movsb
jge
pop
mov
jle
push
cmp
cmp
inc
bound
dec
ja
in
iret
fistpl
ret
mov
sbb
inc
je
hlt
sti
jae
mov
pusha
popf
jno
mov
mov
jle
and
inc
andb
mov
jp
jno
dec
arpl
mov
inc
cli
and
imul
inc
dec
pop
clc
pop
aad
ret
test
lcall
pop
das
xchg
pusha
mov
movsb
cmp
mov
movsb
adc
incb
and
ljmp
scas
and
lds
or
dec
inc
jnp
mov
data16
sub
dec
add
mov
mov
mov
mov
jg
xchg
je
das
dec
xor
add
ja
dec
incl
ret
cmp
stos
dec
mov
outsb
stos
push
or
daa
mov
inc
fldenv
fxam
mov
mov
std
fs
call
jp
and
cli
lods
loopne
xchg
mov
cmc
rep
dec
and
cltd
lret
daa
sbbb
jnp
or
inc
and
mov
pushl
in
push
ret
fiadds
dec
mov
mov
adc
mov
sti
push
nop
iret
xor
or
popa
insl
and
dec
lods
cmp
mov
adc
jno
int3
test
sbb
loope
js
movsl
cmp
mov
insl
push
cmp
icebp
mov
mov
in
cltd
jl
mov
insb
or
push
pushf
lods
das
sub
xchg
mov
adcl
push
rorb
sbbb
cltd
cmpsl
sub
pop
cmpsl
sub
rcl
int
cmpsw
js
sbb
es
cmp
mov
ret
cltd
cmp
daa
shll
xor
add
sub
lret
pop
xchg
push
jne
mov
and
adc
aad
mov
mov
xor
loopne
xchg
or
outsl
mov
lret
mov
cs
and
jg
xchg
sbb
into
cmp
mov
sbb
or
call
jg
adcw
outsl
inc
loopne
cmpl
lcall
and
cmc
cmpsb
and
or
enter
sbb
in
xor
mov
bound
adc
pop
inc
xlat
lret
push
das
test
fwait
push
xchg
je
push
jg
jbe
fs
or
addr16
adc
push
sub
mov
roll
cmp
insb
leave
enter
xor
inc
mov
sub
adc
dec
rcll
pop
popf
stos
enter
stc
rol
idiv
adc
pop
sbb
dec
sub
adc
pop
jmp
sarl
dec
pop
push
bnd
ret
mov
sbbl
or
cwtl
fisttpl
mov
mov
inc
leave
jmp
shlb
aad
repz
int3
aaa
sbb
ret
push
sbb
mov
in
ja
fcompl
mov
sbb
mov
xor
popf
ror
shll
mov
dec
add
fdiv
stos
das
pop
dec
lret
add
cmpsb
and
in
daa
and
or
and
addr16
fwait
mov
push
jnp
jg
out
les
sbb
mov
push
inc
fs
pop
cmpsl
mov
push
add
stos
mov
icebp
xchg
nop
mov
xor
mov
out
iret
xchg
mov
adc
leave
fwait
add
out
cmp
pop
and
jne
push
xchg
fstps
test
adc
or
pop
jl
cli
enter
movsb
pop
jle
xchg
shlb
mov
mov
sub
cmpl
gs
cmp
pop
xchg
and
xor
jne
pop
fwait
xchg
test
clc
xchg
jecxz
sti
pop
iret
mov
push
adc
mov
inc
adc
jecxz
mov
jae
add
cmp
mov
arpl
bound
adc
out
jb
cld
sbb
lods
mov
and
mov
mov
iret
mov
mov
shlb
test
push
push
sarb
ret
sub
mov
xor
and
lock
pop
in
pop
aaa
cmp
stos
inc
sub
adc
jb
sbb
cmp
sahf
mov
jl
push
out
jne
lret
flds
jnp
lods
cmovle
mov
lret
scas
inc
imul
movsb
push
dec
repz
js
xchg
cmp
dec
rolb
mov
mov
fimull
sbb
adcb
test
mov
out
ds
out
ds
cmp
push
mov
mov
pop
sbb
sub
cmp
das
lahf
adc
pop
test
inc
in
movsb
add
arpl
frstor
cmp
jge
xor
ret
xor
imul
jge
mov
shll
dec
in
ret
dec
add
or
mov
push
mov
addr16
repz
dec
push
dec
ror
jo
push
sarb
mov
leave
jno
lods
cs
jbe
lahf
fdivr
sbb
inc
push
stc
mov
repnz
pusha
push
pop
decl
in
push
adc
xchg
shl
stc
ret
js
lret
xor
aad
adc
scas
pop
add
aaa
call
lock
sbb
pop
into
jmp
jb
or
fmulp
add
repz
shufps
xor
pop
pop
aas
jnp
xchg
jbe
xchg
xor
div
xchg
test
lahf
mov
in
stos
or
sbb
ret
loop,pn
into
pop
test
inc
stos
sarl
pop
pop
and
in
xchg
popa
hlt
xor
jnp
rcrl
adc
sub
bound
aaa
lret
pop
scas
mov
test
mov
inc
fs
xor
aaa
and
push
rcll
xchg
sbb
pop
mov
or
xchg
jno
sbb
or
in
pop
cmp
sbb
cwtl
and
or
jae
stos
in
outsb
adc
mov
ud2
jno
test
stos
leave
xchg
outsb
adc
mov
test
lcall
xchg
lods
daa
call
mov
mov
mov
dec
in
das
dec
lea
in
mov
xlat
iret
xchg
jne
cmp
push
test
jo
arpl
dec
js
stc
or
lret
sahf
push
add
sbb
js
fdiv
fcoms
js
sub
add
popa
out
push
ds
mov
mov
pop
dec
jge
shll
xor
xor
fidivrs
je
and
xor
inc
aas
cmp
cmpsl
sbb
lods
lods
in
ficoms
adcb
xchg
xchg
xchg
adc
mov
cmp
mov
pushf
stos
ljmp
sbb
outsb
mov
xchg
rcrb
sbb
xor
shl
pop
repz
xor
sub
cli
pop
mov
idivl
mov
lods
lods
push
mov
push
call
rorl
mov
push
es
jg
jl
jb
adc
aas
jp
push
jp
xor
jmp
sbb
or
adc
or
lret
mov
sub
jb
and
pop
insb
mov
imul
insb
ret
ret
lods
shr
in
sub
sub
cmc
and
sub
lcall
es
iret
aaa
icebp
out
std
cmpsl
pushf
shll
movsl
mov
icebp
lahf
xchg
fstl
imul
icebp
add
ja
or
cltd
icebp
mov
lods
fcompl
cmp
inc
jns
in
inc
sub
inc
aam
int
mov
dec
popf
stos
jmp
in
loope
sti
loopne
xchg
cmc
addr16
push
mov
or
sbb
out
xchg
and
movhps
inc
xchg
ja
and
jecxz
stc
xchg
mov
push
aaa
cmc
test
ds
xor
test
loope
pop
test
dec
mov
push
sahf
sub
dec
xor
cmp
je
int
mov
sub
andb
or
cmp
jae
cmp
stc
dec
pop
jb
repnz
inc
xor
or
mov
out
or
lret
pop
sbb
sub
out
fdivs
movsl
cmc
jge
loopne
fs
cs
inc
sub
lods
xchg
dec
push
add
cmp
push
and
push
ror
jp
adcl
test
sahf
lret
ds
sbb
daa
ret
cmp
fidivl
or
inc
popl
mov
mov
inc
xchg
popf
push
sub
inc
cld
lods
cmp
shlb
cli
stos
sub
fwait
int
rclb
test
mov
cmp
testl
test
mov
push
imul
or
nop
imul
push
sbb
movsb
aaa
sub
mov
jb
mov
push
fidivs
pop
mov
loope
sbb
or
clc
into
add
xlat
adc
mov
inc
pop
cs
repz
cs
push
outsb
out
xor
pop
std
loop
jae
negl
xlat
cli
push
repz
imul
ret
pop
mov
inc
test
mov
or
sub
mov
inc
mov
and
adc
fiadds
cmpsb
andb
aas
inc
test
fmull
sbb
cmpsl
xchg
sti
popa
adc
repz
fs
fs
rcll
sbb
bound
inc
rcr
cld
pop
fnsetpm(287
cs
cmpb
jg
push
andb
lock
push
aad
mov
aaa
nop
jne
dec
add
inc
popf
push
dec
cmpsl
cwtl
sbb
stos
cmp
sbb
mov
push
xchg
rcrb
lds
ficoms
fdivp
fsubl
xor
jae
pop
aam
pop
mov
cmp
lsl
xchg
lcall
push
push
and
xchg
lret
inc
pop
push
xchg
mov
pop
and
repz
imul
xor
pop
or
mov
mov
jb
stc
addr16
es
xchg
jne
or
inc
pop
jp
cltd
mov
ret
or
or
mov
jecxz
call
mov
cmp
adc
imull
je
cmp
jge
div
daa
jno
adc
sub
popf
in
or
sbb
mov
shll
cmpsl
push
ds
je
fdivrl
fincstp
or
mov
mov
in
arpl
leave
mov
stos
jnp
jmp
mov
ror
outsb
xchg
loopne
fsubp
sahf
dec
mov
cmp
subb
push
and
xchg
stos
xchg
iret
sub
mov
add
mov
cmpsb
movsb
fimull
mov
sbb
xchg
lret
insl
aam
es
xchg
ret
push
pop
jle
test
mov
lahf
jmp
cs
xor
xor
test
dec
es
push
push
dec
push
stos
sbb
testl
loope
push
aad
popa
inc
push
stc
ds
jmp
sbbl
push
repz
aaa
xor
mov
sub
and
ret
sbb
dec
shr
shrl
pop
cld
loope
sub
mov
hlt
mov
mov
dec
test
outsb
mov
mov
push
sub
imul
cmpsl
pusha
jp
sbb
shl
and
mov
je
cmp
jl
es
ret
pop
data16
fcoml
sahf
pop
mov
jle
rcl
jnp
jle
cmpsl
or
push
mov
into
mov
sub
fdivs
sarb
push
jl
jnp
out
cmp
arpl
out
xchg
dec
ret
pop
pop
xlat
out
xchg
sar
or
inc
fmul
outsb
fimull
lds
fcoms
adc
fildll
pop
testb
popa
je
mov
inc
cmp
loopne
aam
sub
test
in
xor
jmp
loop
and
mov
pusha
mov
aaa
lea
xchg
repnz
rorl
push
inc
sbb
pop
popf
jne
stos
lret
repz
inc
je
jb
inc
addb
sbb
adc
insb
mov
push
lock
push
mov
es
gs
mov
mov
sub
mov
xchg
push
pop
and
and
rorb
scas
or
push
push
xlat
sub
lret
xor
loopne
xor
mov
icebp
xorb
adc
cmp
andb
outsb
and
sub
mov
sub
sbb
repz
push
shrl
cmp
jg
adc
jnp
fisttpll
mov
repz
fbld
icebp
enter
mov
pop
push
and
jne
cli
and
or
in
cli
jbe
rol
mov
aaa
fdivs
adc
fimull
xorb
push
lods
xlat
pop
xlat
and
popa
lahf
pushf
and
and
push
lods
xor
jg
lahf
imul
pop
fs
xlat
loop
repnz
outsl
sbb
shll
mov
dec
insl
xchg
addr16
mov
jb
pop
mov
lahf
xor
dec
sub
or
push
adc
mov
xor
xchg
js
das
lret
xchg
cmpsl
pop
test
sub
lods
in
mov
jnp
jg
mov
daa
xor
mov
repnz
das
xchg
push
mov
clc
mov
jmp
mov
pop
mov
rorb
lea
out
push
subb
in
fcoml
cmp
stos
movsb
jge
xor
imul
clc
add
pop
adc
stos
or
repz
xor
cmp
test
or
jns
adc
loop
inc
push
or
xchg
pop
das
cmp
jb
iret
add
cmc
mov
pop
or
pop
mov
xchg
sub
pop
mov
cmp
mov
popa
or
xchg
push
ret
repnz
or
in
popa
push
icebp
fcomps
sub
filds
cmc
out
xchg
adc
cs
mov
loop
mov
movsb
pop
nop
lret
xchg
xlat
inc
sub
push
mov
and
add
mov
or
fwait
and
cmp
pop
sbb
clc
mov
dec
and
fidivrs
sub
enter
xor
out
sbb
jl
inc
pop
shlb
pop
inc
lret
rcll
leave
jns
fildll
out
cmp
aad
enter
sbb
mov
sub
or
ljmp
and
jo
sub
insl
sahf
ljmp
adc
lcall
push
cltd
fcomp
add
mov
aad
sar
lret
loopne
into
ret
xchg
hlt
in
inc
icebp
mov
pop
mov
adc
adc
cmpsb
xacquire
test
sbb
pop
fnstenv
sbb
cmpsb
pushl
adc
lcall
cmp
jns
hlt
outsl
cs
push
lcall
cltd
lcall
das
loop
jbe
je
insb
je
or
aam
das
loopne
xor
xchg
arpl
das
lock
ficomps
push
subb
add
ja
xchg
jecxz
and
mov
in
xchg
add
mov
xor
push
add
iret
inc
rolb
adc
cld
sub
lds
test
and
lret
add
stc
pop
mov
adc
xor
je
enter
xor
in
fs
es
movntps
mov
out
or
mov
push
mov
push
bound
jg
dec
out
mov
mov
fisttps
into
fdiv
sub
cmp
inc
mov
mov
cmp
mov
sbb
xchg
jmp
adc
rcl
or
lds
adc
jnp
mov
inc
ljmp
mov
dec
sub
xchg
xchg
lods
jg
xchg
mov
nop
sarb
push
ret
cmpsb
dec
mov
fistps
xchg
js
pop
rcll
lret
mov
aas
data16
dec
lahf
and
xor
lea
loope
js
add
push
push
pop
adc
mov
enter
mov
addr16
fisttpl
mov
ficomps
cs
mov
jnp
mov
mov
jo
lret
lods
movsl
and
push
add
sub
insl
xchg
popf
ret
mov
cmp
into
ss
in
push
aad
fcomip
mov
mov
loop
sub
cmp
cwtl
lods
mov
jmp
push
not
hlt
jo
in
ja
ret
movsb
xor
and
es
jae
push
inc
ss
dec
not
lret
pop
push
lret
or
sbb
fcmovnu
rorb
mov
pop
mov
fwait
pop
jge
inc
jge
jl
adc
dec
test
jle
nop
or
xchg
mov
pop
pop
movsb
xor
jnp
mov
fsubrp
sti
out
fs
xlat
pop
sub
dec
and
lds
fldln2
addr16
pop
mov
sub
subb
js
inc
jns
das
fisubs
inc
cltd
not
fs
outsl
fildl
xchg
nop
out
cwtl
jmp
mov
push
mov
jb
mov
cs
mov
in
cwtl
movsl
jnp
xor
cwtl
push
cs
jecxz
cmp
pop
sbb
les
lret
out
mov
sbb
les
pop
lea
jge
and
lret
lock
jnp
clc
in
addl
mulb
cmp
ljmp
aad
in
push
add
and
cmovs
negb
test
inc
mov
mov
inc
popa
je
inc
ss
les
cwtl
fdivl
dec
shrb
fisttps
or
das
mov
push
repz
and
jp
mov
pop
sbb
mov
ds
xor
adc
cmp
cmp
outsl
sub
mov
xchg
push
or
js
test
cltd
mov
mov
out
xor
xor
jns
mov
cmc
repnz
rcrl
add
adc
rcll
inc
push
rorb
jns
pop
out
jp,pn
xorb
xor
xor
int
test
mov
outsl
mov
dec
cmpsb
inc
outsl
push
and
test
xchg
outsb
jnp
int3
sti
or
cmp
and
outsb
dec
xchg
or
mov
inc
idivb
aam
out
and
mov
scas
lahf
dec
xchg
arpl
mov
popf
pusha
sub
aam
and
mov
xchg
arpl
ret
xor
mov
scas
xchg
cmp
xor
push
jmp
fucom
sbb
hlt
adc
mov
xor
dec
lcall
dec
ss
es
aas
idivl
adc
cli
into
scas
mov
daa
jp
repnz
ja
stos
push
push
jno
lea
add
pop
mov
add
enter
ds
in
xchg
jb
in
stos
lock
arpl
pop
mov
dec
pop
and
js
pop
mov
subl
dec
sub
fiaddl
xor
aad
insl
inc
aad
popa
mov
lret
mov
addr16
les
xor
jno
push
dec
fistps
out
shll
arpl
prefetcht0
pop
repz
sbbb
cmp
lods
mov
sbb
and
jbe
call
inc
ds
mov
scas
pop
lods
xor
rcl
and
add
nop
shl
mov
or
xchg
dec
or
inc
xor
ds
insl
dec
mov
xchg
jnp
and
ljmp
fidivs
adc
jae
cmp
into
jmp
fwait
adc
pop
jg
outsl
adc
aaa
dec
cmc
ljmp
cltd
mov
mov
popa
xor
loopw
mov
pop
dec
ret
roll
mov
shll
mov
xor
lea
aaa
add
jb
test
sbb
insl
or
inc
mov
mov
xchg
push
inc
iret
mov
push
mov
mov
and
loope
xor
push
xor
les
addb
xchg
sar
mov
in
out
mov
jge
loopne
push
int
inc
sub
dec
and
call
lcall
pop
jae
xor
sbb
jg
push
xlat
jnp
sbb
data16
jge
icebp
jne
sub
push
sub
rcr
adc
lods
mov
std
mov
inc
movsb
mov
repnz
popa
fcomps
mov
mov
inc
ret
cmp
mov
push
loopne
into
dec
fcomi
sti
std
ja
js
xlat
gs
in
ds
mov
mov
pop
das
das
cmp
subb
ss
adc
and
stc
in
out
cmp
jp
pop
xor
fwait
lret
mov
mov
xchg
push
or
add
insl
subl
adc
add
movsl
dec
push
cs
int
jmp
mov
sub
and
push
mov
mov
add
or
push
cmp
mov
std
sbb
add
test
and
mov
or
dec
xchg
fsubs
enter
mov
das
push
fcoms
fidivl
in
adc
icebp
pop
ret
negb
insb
xchg
movsb
dec
xor
mov
popf
push
fidivrl
call
dec
fs
lds
pop
xlat
sub
mov
xchg
xchg
jb
nop
or
pop
jae
mov
cmc
push
dec
cs
mov
sub
add
scas
or
rcrl
fld
repnz
mov
inc
xchg
lahf
add
into
mov
xchg
lds
repz
xchg
xchg
mov
or
sbb
adc
frstor
push
or
cmp
mov
aad
mov
jo
mov
in
jne
inc
jae
ret
das
mov
rcll
mul
pop
and
mov
stc
sti
pop
loop
mov
cmpsl
lods
cmpsl
or
sub
mov
mov
idivl
ds
mov
scas
inc
popa
in
and
xchg
adc
xchg
mov
mov
xor
iret
into
out
add
test
test
sub
test
out
dec
push
xor
fistl
mov
popf
jmp
inc
sahf
jmp
scas
ljmp
adc
and
add
shll
stos
paddq
push
mov
int
sub
add
lds
hlt
sarl
jp
pop
and
add
addr16
shrb
std
add
out
and
nop
inc
add
out
ret
fcompl
add
sbb
ret
rclb
xchg
dec
add
jne
sub
in
sub
push
xchg
cmpsb
test
cli
ficoms
dec
adc
xor
pusha
fistl
cmpl
enter
jp
push
push
push
mov
insl
gs
dec
jne
ss
dec
icebp
mov
hlt
inc
fbld
and
mov
mov
mov
bound
mov
push
mov
xchg
push
decl
sub
mov
aaa
cli
imul
jo
out
test
mov
in
mov
inc
mov
movsb
or
icebp
or
sub
dec
std
je
jne
gs
scas
dec
outsb
adc
repz
stos
popa
sarb
mov
push
and
aam
test
movsb
repnz
cmp
lret
jnp
and
arpl
cwtl
pop
cmp
in
jp
pop
ljmp
jl
mov
add
stos
sbb
stos
imul
or
int
mov
clc
fwait
inc
loope
add
jl
cld
addr16
repz
sbb
pop
jmp
pop
aam
ffreep
xor
jle
inc
pop
andb
inc
mov
sub
push
sbb
inc
bound
mov
jp
xchg
iret
jecxz
sbb
js
mov
imul
adcl
dec
lods
mov
xor
push
pop
xor
out
or
fbld
test
lea
sti
sti
packssdw
cwtl
jp
sub
lcall
mov
xchg
lods
div
push
lds
push
push
lock
push
push
jbe
adc
es
jmp
scas
rorl
cmp
xlat
int
and
mov
inc
addr16
xor
cmc
fidivrl
sub
pusha
jp
orl
and
aad
fdivl
ffree
insl
xchg
es
in
or
dec
xchg
or
pushf
push
ret
mov
mov
adc
mov
xlat
lea
push
pop
lock
mov
mov
xor
inc
mov
or
cmpsl
fisttpll
les
loope
push
cmp
je
adc
mov
mov
add
jmp
add
cli
cmpsl
xor
cld
or
sbb
sub
xor
int3
cmp
imul
lcall
jno
sub
call
inc
mov
inc
xchg
ds
push
repz
push
cld
inc
cmpsl
in
jmp
cwtl
movsl
mov
pop
jo
dec
push
sbb
mov
mov
int3
movb
and
lret
rclb
icebp
jnp
add
inc
nop
jp
fisubl
push
add
dec
out
sbb
scas
xchg
sbb
jp
fucomp
dec
push
adc
fimull
cmp
repnz
aaa
into
and
mov
mov
inc
jg
psllq
push
js
push
cmp
lret
lret
inc
ret
xlat
xchg
push
js
loop
jnp,pn
pop
sbb
lock
into
aad
jbe
pop
out
fcmovnu
xor
mov
mov
aaa
mov
dec
fcmove
jmp
add
mov
sbb
pushw
mov
je
out
push
repz
or
lret
adc
adcb
pop
mov
jp
cmpsl
movsb
cmc
mov
adc
dec
loope
inc
mov
out
pop
xor
rorl
stos
mov
dec
aas
jmp
jmp
push
je
cmp
mov
xchg
add
pop
daa
jno
jns
inc
addr16
dec
push
sub
ljmp
adc
xor
sahf
xor
lahf
sbb
insl
and
adc
arpl
xlat
mov
inc
inc
sub
shrl
int3
les
nop
mov
movsl
sub
sub
fdivrs
sub
in
mov
sub
xchg
in
cmp
rcll
cmp
inc
jnp
mov
dec
add
test
rorb
mov
push
popa
push
mov
movb
lods
pushf
lds
clc
ja
pop
and
cmp
outsb
test
push
movsb
loopne
cmpb
mov
jmp
mov
add
lret
cmc
xor
dec
es
lret
xor
mov
dec
pop
or
jae
jmp
testl
dec
fdivrl
int
inc
jmp
sub
pop
xor
rcl
jle
aaa
fcoml
pop
push
jp
xchg
mov
movl
scas
rolb
adc
dec
bound
jg
addr16
ret
dec
adc
xor
jbe
daa
pop
cmp
imulb
pop
cltd
or
push
movsb
and
mov
jno
insb
cltd
fwait
loope
sub
mov
adc
mov
sbb
cmpsb
mov
leave
idiv
mov
cltd
sbb
enter
js
rcl
lret
cmc
insb
inc
inc
insl
xchg
lea
xor
scas
push
fs
or
cmp
test
mov
or
cmpsl
inc
xchg
cs
subl
adc
cld
imul
stos
mov
fisubl
sub
cmpl
mov
test
jns
leave
test
gs
sub
gs
adc
mov
mov
je
adc
out
sbb
pop
inc
ds
out
sub
jo
xchg
jno
das
xor
shll
daa
andl
xor
rorl
xor
dec
lahf
repnz
shrb
mov
mov
xchg
ljmp
and
mov
daa
cld
cld
jno
ficomps
fbld
xor
ja
getsec
mov
test
call
out
cltd
jns
addr16
adc
imul
popa
xchg
adc
xchg
ds
in
pushf
or
mov
inc
sbb
push
add
imull
xor
iret
rcrb
jno
daa
push
lock
xor
or
sub
push
stos
call
out
scas
inc
ja
pop
pop
lea
push
dec
mov
psrad
outsb
cli
popf
sbb
mov
mov
mov
push
lahf
xchg
and
lods
lahf
mov
repz
outsb
sarl
add
cmp
push
jne
icebp
add
dec
mulb
outsl
in
fs
sbb
test
ss
rclb
test
mov
addr16
scas
xorb
loop
mov
xor
push
mov
sbb
and
and
jp
and
jno
test
or
das
push
sub
sbbl
push
adc
shlb
loop
and
dec
xchg
fdiv
cwtl
es
or
xchg
jg
in
test
jp
pop
repnz
cmp
rorb
cmp
push
jge
das
ficompl
nop
popa
out
call
lret
jne
mov
hlt
dec
fiadds
pop
sbb
jle
and
mov
inc
out
push
mov
imul
fwait
xchg
imul
aaa
mov
mov
jle
add
movsl
or
push
into
push
inc
aas
mov
mov
loopne
pop
addr16
and
aam
mov
lret
js
push
jae
jae
mov
mov
std
mov
xor
mov
mov
ret
mov
fisubs
out
xchg
mov
stc
shll
sub
std
loopne
dec
cmc
cmp
imul
dec
jnp
pop
pop
lcall
dec
or
mov
dec
sbb
push
stos
push
cs
xchg
loope
adc
loope
rcrb
sti
add
add
jno
leave
nop
popf
pushf
adc
xchg
push
out
xchg
dec
or
lcall
test
mov
mov
into
orl
outsb
xchg
mov
dec
gs
push
sbb
sub
shlb
std
lcall
fistpll
fidivs
xor
rol
movsl
push
sbb
scas
push
test
cmp
adc
adc
sbb
stos
push
fwait
dec
and
xchg
pop
mov
in
jno
jmp
push
clc
sbb
adc
cmpsb
sub
sbb
add
sbbb
out
add
std
inc
in
sub
ffreep
inc
iret
in
inc
stos
nop
bound
push
call
out
mov
nop
clc
jle
iret
insb
gs
jecxz
js
xchg
in
pop
or
jo
jae
out
test
stc
aas
sbb
push
les
fwait
daa
add
ret
fisubrl
xor
insl
cmc
jge
loopne
and
cmp
mov
pop
ret
mov
inc
push
push
push
add
frstpm(287
cli
and
cs
pop
in
sbb
mov
lock
roll
orb
fidivrs
add
push
or
cmp
sbb
jmp
adc
xchg
mov
cli
icebp
inc
push
jne
sti
fwait
push
mov
inc
jb
cmp
sub
push
cmp
pop
jne
jl
and
movsb
lods
or
imul
repz
je
fidivs
and
sbb
xchg
sbb
and
mov
or
push
pusha
sub
xor
stos
fcoms
or
roll
push
push
ficoml
int3
jmp
decb
mov
stos
pop
loopne
les
jp
add
fs
add
fidivrs
and
out
adc
push
pop
xchg
fwait
push
out
push
cld
sub
mov
lock
stc
aad
loop
jns
rorl
cmp
push
loopne
iret
push
notb
gs
cmp
repz
jecxz
push
sarl
ss
inc
push
inc
or
shrl
lds
outsl
pop
mov
jae
xchg
insl
add
pop
or
cmpsb
sbb
fstpt
jbe
push
dec
fnstenv
out
sbb
cltd
cmpsl
cmp
ljmp
movsb
xchg
ja
lret
sub
sub
lods
push
fdivr
or
xchg
pushf
mov
cs
cs
mov
jbe
insb
into
cltd
aam
xchg
mov
stos
outsl
cmp
jecxz
orl
xchg
xchg
sbb
sbb
jno
push
rcrl
hlt
and
or
cmp
add
fucomip
jmp
mov
push
les
dec
daa
xlat
cmp
xor
jle
les
lock
jno
sub
es
out
push
pop
jns
sbb
fstps
jle
sbb
popa
fldl
inc
scas
mov
adc
sbb
in
inc
mulb
movsl
xor
pop
add
mov
lock
jp,pt
jg
fyl2x
push
cmp
jo
addl
stos
cmp
mov
into
jle
fcoms
sub
dec
movsl
xchg
leave
mov
xchg
call
fdivl
xchg
stc
outsl
sub
int
aad
movsl
adc
repnz
jecxz
cltd
sbb
push
mov
push
inc
push
mov
or
icebp
stc
xchg
out
sbbb
xchg
repz
mov
sub
push
and
cmpsl
ror
test
pop
loopne
stos
into
dec
das
mov
fs
imul
mov
cmc
push
jbe
cld
mov
push
xchg
or
xchg
or
out
out
jo
test
stos
push
pop
loopne
inc
xor
jecxz
test
es
jb
fdivl
adc
add
inc
test
fidivl
popf
cs
inc
mov
lret
xor
jns
add
push
dec
in
mov
cmp
ret
jecxz
fwait
in
push
aaa
fistl
lods
mov
stc
pop
push
push
mov
jle
lret
jecxz
js
inc
sbb
repz
push
shll
loopne
or
aam
xor
out
ss
xor
mov
aad
add
add
jbe
ret
imull
or
in
icebp
fmul
rcll
mov
dec
aaa
rclb
push
dec
pop
fidivrl
sub
idivb
cmc
xor
inc
pop
fisubrs
xlat
jo
aam
in
mov
push
push
xor
out
sbb
mov
loope
jno
jmp
push
sbb
mov
push
push
lods
inc
push
adc
enter
sub
xchg
subl
pop
cmpsb
mov
mov
mov
js
test
or
dec
repz
sbb
cmp
jp
movsb
sbb
icebp
rcll
sub
ljmp
dec
stos
add
mov
pusha
jle
xchg
sub
cli
and
pop
out
lahf
inc
idivl
pop
mov
xor
stc
shll
ljmp
adc
andb
push
add
fldcw
adc
add
or
enter
lret
sub
cmp
mov
sti
dec
loop
cmp
or
xchg
cli
xor
stc
mov
inc
and
mov
ret
cs
cmp
inc
fwait
xchg
push
movups
sbb
daa
loop
sub
in
mov
ljmp
sbb
lods
push
mov
jl
add
in
nop
xor
out
outsb
repnz
push
lret
cmc
fildll
shll
adc
test
jae
sbb
sbb
sbb
pop
fs
addr16
mov
leave
inc
dec
sub
push
fildll
cmp
jge
jg
je
mov
or
outsb
nop
mov
cmpsl
sti
inc
adc
imul
insl
cmp
pop
div
sub
stc
negb
inc
hlt
push
cmp
ja
stos
out
dec
ljmp
fisttpll
pushf
scas
xor
aas
xor
lods
subb
jae
loope
out
loopne
xchg
fstpl
xor
adc
stos
xchg
push
sbb
aad
imul
cmp
xor
mov
mov
out
stc
pop
pop
ja
cli
out
lret
dec
xor
push
aad
lock
loopne
push
insb
sub
push
scas
and
inc
cmpsb
movsl
out
mov
push
adc
mov
or
sub
jb
shll
inc
xchg
and
fwait
jne
mov
test
dec
fldl
test
sub
out
in
jge
push
cmp
cltd
hlt
ja
insl
cmp
insb
insb
in
ret
mulw
cli
inc
dec
lods
aam
insl
jnp
push
movsb
sub
out
das
push
mov
xchg
dec
push
loop
and
in
lret
xchg
pop
js
mov
hlt
or
js
mov
xchg
out
lods
icebp
inc
sbb
dec
test
push
dec
in
mov
jl
mov
pop
dec
mov
mov
data16
inc
out
pop
imul
loopne
add
inc
pop
in
dec
cli
push
dec
daa
sar
pop
xchg
pop
push
cs
or
cmp
pop
das
mov
in
jmp
xchg
or
fimull
ficomps
or
stos
add
les
cmp
shrl
inc
int
jecxz
mov
inc
popf
mov
or
or
and
push
sub
mov
inc
out
mov
es
sahf
imul
mov
aam
inc
mov
xchg
and
push
push
std
mov
sbb
xlat
sahf
xorb
loop
push
pop
xchg
inc
sub
add
call
sub
jnp
lahf
mov
push
adc
inc
jg
fstl
inc
mov
and
xor
xor
roll
daa
and
mov
daa
mov
stos
lods
jge
and
push
mov
mov
lods
and
jbe
les
sbb
stos
lahf
popf
fwait
js
outsb
xor
in
hlt
jle
repz
push
mov
inc
negl
mov
das
lds
clc
movsl
sub
lret
movsb
xor
jmp
dec
mov
mov
cld
bound
je
mov
insl
lahf
jne
ljmp
nop
jo
xchg
adc
xchg
mov
orl
repz
rcrl
test
lret
mov
push
inc
add
jb
pop
lcall
add
or
mov
inc
add
jbe
leave
mov
sarl
dec
mov
rcl
and
lds
sahf
and
loop
test
loopne
lods
pusha
shlb
in
out
mov
pusha
mov
scas
pusha
cmp
lret
lcall
stos
ljmp
pop
repz
mov
imul
and
shlb
sub
cmc
pop
add
pop
xor
xchg
xchg
test
cmp
jnp
adc
jns
hlt
xchg
imul
pop
mov
mov
loop
sbb
jbe
mov
in
dec
mov
adc
sti
test
jmp
pop
or
insb
lcall
cli
cli
inc
test
cmp
mov
xlat
inc
repz
push
cwtl
inc
lret
inc
cmc
icebp
js
jo
imul
push
pop
jle
in
jecxz
movsl
mov
adc
push
sbb
std
repz
dec
inc
dec
and
pop
sbbl
xor
rorb
arpl
imul
in
in
xchg
jb
lcall
shrb
mov
mov
imul
or
jb
repz
nop
mov
and
lods
out
sub
xchg
sub
jnp
sub
push
ret
push
sbb
scas
inc
in
push
fstps
or
gs
xchg
stos
jno
ret
pop
stos
adc
pop
outsl
hlt
cwtl
jo
sub
dec
and
lret
push
addb
clc
ret
xchg
leave
xchg
aad
sbb
cld
xchg
les
lcall
and
es
xor
cmpsb
fwait
imull
mov
jg
sbb
sahf
enter
cld
out
push
adc
jp
xchg
shr
sub
out
jbe
aam
and
adc
mov
inc
sar
inc
ds
mov
jno
push
inc
jbe
jae
les
push
iret
mov
dec
jnp
adc
mov
iret
mov
lcall
mov
stos
orb
add
dec
jns
inc
add
pop
orl
sbb
xchg
cvtpi2ps
add
call
and
aam
das
push
add
inc
subb
mov
loop
fnstcw
shrl
leave
movsb
sbb
nop
in
nop
nop
popa
sub
addr16
or
je
sbb
sbb
xor
push
dec
roll
movsl
add
test
fiadds
shlb
push
cwtl
cmc
jnp
xor
jbe
inc
daa
andb
lahf
insl
aaa
pusha
xchg
gs
stc
mov
and
xchg
cmp
dec
cmp
pop
into
movsb
ja
mov
scas
jns
xchg
xchg
cld
std
mov
push
mov
pop
inc
aam
lods
fs
movsb
movsl
and
jge
xchg
sub
mov
sahf
mov
adc
pop
jb
mov
add
push
fdivl
adc
cmp
movsl
pusha
loope
xchg
insl
rclb
sbb
mov
sub
add
inc
push
int
add
imul
jge
cmp
lret
pop
sbb
sbb
repnz
insl
dec
or
xchg
mov
xchg
push
movsl
lods
dec
outsb
mov
jecxz
cwtl
out
mov
xor
fisttps
out
repnz
sub
fidivl
xor
lret
in
cmp
aad
popa
or
pop
ror
add
cltd
je
add
xor
test
sbb
mov
add
imul
inc
mov
add
xlat
cmp
dec
outsl
mov
pop
push
in
lret
fisttps
add
cmp
xchg
in
add
xchg
xchg
mov
push
add
inc
sub
mov
std
enter
stos
je
adc
inc
stos
pusha
add
out
mov
jp
mov
cld
fucomi
lods
mov
popf
mov
pop
cli
mov
mov
dec
mov
jns
mov
sub
stos
sarl
adc
testb
scas
sbb
jae
xchg
jg
pop
xchg
jg
shlb
rcrb
dec
stos
pusha
lcall
cmp
orl
icebp
lret
rclb
xor
adcb
in
mov
cmc
js
push
lods
lret
xor
bound
cmp
pop
adc
adc
ss
sub
movsb
clc
pop
rcr
rclb
adc
jno
push
arpl
pop
sahf
orb
jae
in
pop
imul
popa
xchg
add
mov
aas
popa
enter
mov
sub
stc
mov
xchg
xchg
dec
jnp
dec
xor
cmp
popa
sti
xor
imul
cmp
fcmovnbe
outsl
inc
aam
adc
test
jbe
cmp
icebp
ss
sub
cltd
jle
lods
adc
bound
mov
sub
into
inc
insl
idivl
xchg
lret
lret
or
es
addr16
cld
jb
fwait
cwtl
jb
not
or
jns
mov
repz
jg
xor
sub
clc
icebp
xor
in
mov
cmp
je
mov
arpl
adc
lcall
xorl
mov
sbbb
dec
movsl
sbb
push
shrl
mov
jbe
nop
fldenv
sbb
mov
cs
out
cmp
add
pop
bound
xlat
mov
lods
adc
lahf
lea
insl
mov
aad
jnp
cmp
stos
or
hlt
stc
cmp
dec
ret
inc
push
jo
jb
shld
jns
xchg
push
xchg
dec
leave
sarl
sub
push
adc
mov
dec
out
xchg
je
add
mov
inc
or
sub
inc
fsubs
inc
lret
mov
repz
pop
pop
addr16
mov
sbb
faddl
cmp
fimull
sbb
fwait
dec
dec
pop
loope
sub
mov
dec
shlb
adc
and
add
fstpl
out
outsl
andl
iret
dec
push
cli
test
sbb
sbb
inc
aas
mov
and
xchg
fstl
and
add
sub
ret
js
adc
inc
ss
ret
xor
push
dec
cli
ljmp
aad
ljmp
dec
stos
fidivrs
push
testl
out
int3
pop
lret
test
lahf
shlb
mov
pop
dec
imul
mov
sbbl
dec
xchg
sub
push
repz
pushf
add
stos
arpl
fiadds
int3
push
lret
iret
jbe
jno
lahf
daa
std
sub
inc
pop
sbb
inc
xchg
adc
inc
ret
repz
rcrl
add
xchg
sub
mov
scas
jl
mov
cli
push
lcall
jg
jp
test
enter
sahf
push
push
push
xorl
daa
test
test
adc
scas
or
or
adc
jo
xchg
add
mov
int
sbb
in
das
insl
adc
push
lret
in
mov
into
and
pop
xchg
ja
daa
sbb
roll
dec
cs
fs
xchg
addr16
movsl
inc
adc
and
sub
adc
jge
in
sub
fwait
movsl
add
xchg
mov
inc
nop
pushf
lock
xor
pop
loop
dec
and
roll
aad
xchg
bound
sarl
insl
cld
xor
sbb
push
rcl
or
jg
into
pop
in
push
addl
mov
sti
adc
jnp
push
jno
push
push
cld
insl
ret
add
add
es
jo
cmp
shll
flds
into
xchg
pop
pop
aad
loop
inc
sub
jmp
call
mov
gs
and
leave
fcmovbe
xchg
sub
cmp
mov
pop
lods
dec
out
jnp
inc
jns
mov
jmp
mov
not
das
dec
push
aas
mov
pop
lcall
cmp
loope
xchg
xchg
jge
shlb
je
add
xor
rorb
ss
jmp
sub
sahf
sub
add
xor
sub
rorl
icebp
scas
xor
sub
mov
cwtl
xchg
mov
or
dec
jge
cmp
dec
push
push
and
pop
es
mov
fsubrs
rcl
outsb
mov
sarl
dec
lcall
add
pop
pop
pop
dec
out
cmp
ja
and
ss
mov
lahf
stc
hlt
leave
iret
in
mov
pop
arpl
bound
push
xor
cmp
shlb
lahf
mov
fdivp
ret
sahf
cmp
xchg
mov
inc
add
adcl
idivl
ljmp
pop
dec
xchg
insl
in
push
mov
int
adc
xor
aaa
sub
xchg
sarb
cld
cmp
mov
scas
movsb
adcb
sbb
mov
mov
and
jno
push
push
movsb
ret
fstl
cwtl
data16
insw
push
jg
imul
jg
cltd
lahf
and
outsl
icebp
stc
xchg
or
pop
xlat
pusha
push
test
ficomps
push
xchg
in
or
ss
inc
xchg
in
call
sub
rorb
rol
or
adc
loope
jge
adc
cli
xchg
jg
jb
add
scas
jb
shrl
pop
and
outsl
imul
pusha
ja
jnp
clc
divl
mov
jg
mov
pop
dec
sub
pop
adc
cmpsb
push
leave
outsb
push
loopne
fistpl
stos
xor
and
pop
pushf
sub
fst
and
push
xor
test
ret
fdivrl
insb
adc
xor
fdivr
stos
icebp
cwtl
das
mov
mov
movsl
xchg
mov
loop
xorb
ja
lods
stos
dec
mov
int3
notl
int3
data16
or
xchg
inc
ljmp
push
insl
lret
add
sub
and
add
mov
xlat
pop
inc
lahf
popf
leave
scas
sub
cltd
push
and
and
imul
in
jg
push
sbb
sarl
aas
addr16
xor
out
dec
push
jno
sbb
pop
cmp
hlt
movsl
mov
nop
jno
mov
shll
push
push
aaa
aaa
jge
adc
sub
cmpb
pop
cltd
loopne
mov
testb
mov
dec
and
add
lods
outsl
js
mov
jbe
add
push
cs
push
pop
sti
sahf
loopne
mov
mov
pusha
fwait
push
shrb
jne
fcmovb
mov
mov
mov
lret
pop
and
repz
cli
shlb
mov
inc
xchg
dec
sub
inc
sahf
sub
mov
sbb
push
testl
mov
movsb
xchg
movsl
push
rclb
lcall
nop
mov
fs
movsl
movsl
nop
in
aam
jmp
out
lock
enter
in
mov
and
and
adc
scas
movsb
enter
outsl
pop
xor
push
stc
je
pop
test
cmpsl
inc
sbb
movl
jns
call
xchg
inc
in
mov
jmp
pop
inc
aas
inc
aas
int
or
pop
lea
xchg
inc
lock
orb
mov
jae
imul
add
fs
xchg
js
fisubs
int
fcmovnbe
inc
cwtl
test
pop
and
and
or
fnstsw
pop
fcom
in
movsb
shlb
rolb
outsl
adc
dec
clc
sbb
lea
xchg
pop
mov
sbb
push
mov
arpl
test
mov
mov
imul
lock
add
xchg
js
dec
lods
mov
and
jns
mov
cmc
inc
push
mov
test
inc
sahf
int3
test
xchg
dec
jne
data16
js
cmp
cmp
dec
dec
aad
pop
shll
scas
mov
xor
imul
jp
inc
add
imull
pop
std
and
mov
push
jnp
mov
mov
lret
jl
inc
inc
dec
xorb
les
arpl
or
insb
add
mov
lods
pop
test
adc
stc
sbb
int3
or
jg
das
push
rcll
rclb
aam
or
in
sbb
out
pop
hlt
xchg
pop
push
ds
inc
jb
jns
jno
das
xchg
aas
scas
xchg
cmp
pop
cli
lods
insb
lock
inc
in
loop
add
cmp
cmpb
cmp
dec
push
insl
fdiv
or
xor
sarb
jae
sub
mov
xchg
fidivrl
sahf
fwait
scas
out
scas
mov
push
mov
stos
aad
mov
in
ret
pop
pop
fistps
pop
sarb
out
push
bound
inc
or
jecxz
lret
adc
jp
mov
scas
test
or
call
lret
mov
mov
xlat
xor
jne
sub
lods
mov
enter
out
xor
idivl
cmp
fwait
insb
or
lock
fs
cs
push
inc
pop
xchg
inc
jl
inc
jbe
jle
insb
adc
xor
in
pop
je
stos
pop
adc
lods
lret
mov
push
jmp
inc
mov
pushf
or
cmp
pop
dec
icebp
shrb
insb
enter
test
sbbl
repnz
sbb
stc
lcall
cmp
xchg
lcall
daa
add
pop
fadds
xchg
mov
arpl
push
ds
aam
outsb
xor
push
pop
push
scas
nop
lret
jnp
outsb
xor
mov
jecxz
call
in
xlat
jmp
push
xchg
or
pop
push
mov
or
jne
mov
cwtl
jl
repnz
lahf
aaa
sub
push
push
push
adc
testb
aam
adc
inc
nop
enter
lcall
sbb
push
fwait
neg
fistl
mov
sbb
jbe
fs
xchg
lock
mov
pop
mov
sub
out
xor
sti
jp
or
lds
repz
das
mov
orl
loop
leave
scas
imul
mov
clc
jp
in
ffree
cmpsl
mov
enter
push
rcrl
gs
ret
out
in
stos
jle
fistl
xchg
jno
int3
adc
mov
sub
inc
ret
push
sub
clc
mov
clc
push
jae
inc
shlb
sub
add
add
push
jecxz
mov
sbb
std
ljmp
push
jne
sbb
inc
mov
stc
mov
rolb
inc
jo
data16
arpl
jecxz
jns
cmp
leave
adcl
mov
mov
neg
pop
test
fwait
lcall
mov
fsubrl
sti
int3
add
into
fcmovnu
ds
lahf
cmp
test
lds
roll
aad
jmp
iret
fnstcw
fbstp
xor
adc
outsb
cmp
ja
js
jno
out
sbb
fistpll
dec
add
pop
add
adc
sub
das
xor
sub
push
add
repz
aas
das
repz
pop
lds
movsb
out
fcoml
xchg
jmp
out
scas
out
shrl
ja
ja
adc
movsl
jg
xor
stos
jns
orb
push
popf
ffree
outsl
movsl
fldcw
cmp
sbb
lcall
mov
and
cmpsl
xchg
cld
fwait
arpl
pop
lea
pop
pop
inc
xchg
xorb
das
mov
aaa
stos
sbb
and
ljmp
sbb
mov
add
nop
push
mov
pop
xor
mov
mov
and
mov
sti
cmpsl
pop
mov
lret
mov
hlt
f2xm1
push
test
pushf
or
or
lea
pop
sub
repnz
stc
scas
int3
jg
rorb
jne
jo
repz
popa
ljmp
lods
add
jbe
cmp
add
jp
mov
jbe
lods
inc
adc
cmp
pop
das
addr16
cmpsb
movsl
mov
jp
jp
js
out
cmc
xor
clc
fisubs
lret
mov
add
cmpsl
movsb
aam
test
fiadds
test
inc
nop
ss
xchg
ficoml
pop
cli
in
lods
and
adc
mov
lods
adc
fs
in
mov
cmp
push
dec
aaa
ret
mov
jge
xchg
fcmovnu
push
adc
xor
mulb
aas
sub
fnstcw
sbb
hlt
mov
popf
lret
out
ficoms
adc
jmp
mov
lock
cli
adc
test
andl
dec
lret
cmpsb
cmp
and
adc
out
push
sub
pop
std
push
arpl
mov
stos
add
adc
test
fwait
xchg
stos
pop
mov
push
xor
xchg
lock
insl
leave
adc
movsb
les
cltd
pop
mov
jle
dec
mov
adc
push
fs
inc
mov
outsl
fnsave
sub
cld
js
add
mov
xor
pushf
mov
scas
dec
repz
jg
pop
cmc
icebp
std
sub
push
sbb
sbb
outsl
mov
xor
mov
inc
or
ljmp
mov
lea
out
push
pushf
fdivrs
cmp
push
mov
popf
imul
xlat
xor
out
outsb
nop
fbld
sub
mov
icebp
dec
xchg
jne
imul
mov
pop
scas
int
lcall
sub
clc
addr16
xchg
mov
icebp
fwait
loop
mov
insb
push
rcrb
setnp
pop
mov
lret
mov
aad
loop
and
xor
jno
fmuls
adc
lret
xor
lret
pop
sub
cld
rcr
xchg
js
mov
mov
lahf
ss
ss
lods
nop
push
or
mov
inc
popa
outsb
cmp
mov
dec
rol
xor
test
cmp
enter
fnstcw
push
jno
add
mov
fimuls
pop
dec
mov
or
jae
test
roll
pop
fildll
push
gs
pop
pop
xlat
roll
imul
call
je
ret
neg
cmp
pop
insb
xor
sbb
jae
mov
iret
add
ror
loope
mov
inc
sub
sub
mov
push
pop
jecxz
jns
or
pop
data16
mov
pushf
push
xchg
fdivrl
jb
or
mov
movsb
fstpl
jbe
iret
mov
xor
aad
mov
jle
pushf
aas
inc
push
iret
add
sahf
mov
aas
in
loopne
mov
cmp
and
push
jnp
add
jno
sub
lea
pop
add
outsl
lret
mov
add
adc
fwait
imul
mov
imul
add
cli
shlb
dec
subl
inc
popf
jo
jnp
dec
adc
pop
jbe
sub
push
sub
pop
in
jo
push
or
loop
sub
movsl
push
ret
add
xor
repz
out
cli
mov
insb
jo
jl
movsb
lods
dec
xchg
pop
inc
pop
cld
mov
xor
push
js
pusha
mov
xor
clc
es
dec
push
ljmp
movsb
out
fsubr
push
fdivp
jmp
mov
mov
xchg
repnz
repz
mov
in
cs
in
je
dec
jl
in
lret
ljmp
sti
mov
pop
int3
xor
mov
xor
sub
int
aad
sbb
jb
and
mov
cmpsb
sbb
inc
mov
es
and
inc
mov
cld
and
repz
pushf
lret
xchg
lods
jge
push
jecxz
icebp
adc
scas
cmp
pop
scas
sbb
mov
or
inc
lock
cmp
jp
in
or
mov
sbb
aas
imul
outsl
cmp
add
adcl
fadds
xchg
jle
add
or
mov
xlat
mov
mov
fildll
mov
mov
xchg
dec
das
popa
cmp
pop
pop
pushf
test
ss
pop
add
fiaddl
dec
mov
lret
sahf
mov
orl
jle
js
movsb
pop
pop
inc
cmp
fmul
cmp
mov
test
subb
in
out
ficompl
and
push
cwtl
loope
es
inc
adcl
loope
fbstp
push
sbb
pop
xor
jo
lea
pmuludq
bound
out
sbb
or
repz
adcb
stc
jle
mov
addb
es
shl
mov
dec
mov
mov
enter
inc
dec
iret
adc
pop
pop
test
in
mov
add
in
je
in
dec
hlt
add
fs
xor
dec
into
push
popa
inc
jb
xchg
jnp
sub
inc
scas
mov
xchg
sub
adc
movsl
mul
jmp
ret
jbe
or
push
arpl
lods
rclb
sbb
outsl
loopne
xor
std
enter
jg
xor
mov
movsb
mov
bt
in
inc
xchg
enter
nop
and
fdivrs
pop
addl
fucomi
aam
scas
sbb
mov
repz
ja
jle
ljmp
sbb
sub
push
test
les
call
inc
fs
xlat
sub
lea
ret
or
pop
scas
pop
jg
sub
add
xor
test
jns
scas
pop
pusha
pop
cmp
insl
rorb
cwtl
popf
lret
mov
loop
jns
xor
xor
mov
pop
fs
cli
sbb
xchg
loopne
lds
pop
adc
xor
test
test
jmp
sbb
arpl
add
xor
jmp
dec
stc
xchg
insl
add
pop
and
and
fwait
stos
bound
imul
mov
cmp
jbe
push
mov
push
or
enter
sub
dec
js
fldl
xchg
jae
add
jns
xchg
push
add
cmp
push
loop
rcrb
mov
mov
dec
xchg
out
shlb
lret
adc
mov
xchg
cmp
clc
push
sub
mov
fs
xchg
cwtl
jb
sub
insl
push
out
mov
inc
sbbl
dec
mov
into
pop
fidivrl
xchg
rol
jecxz
aaa
jnp
mov
cltd
push
jbe
cmpsb
dec
fbstp
int
xchg
aad
mov
pop
outsl
dec
push
dec
or
std
aad
les
add
mov
popa
cld
neg
xor
sbb
out
push
testb
enter
xor
popf
jl
insb
push
shlb
ret
ljmp
out
xchg
push
xchg
xchg
gs
arpl
inc
jno
cwtl
mov
aad
andb
fsubl
int3
das
in
push
cmc
fsubs
arpl
cmp
dec
mov
sub
jge
mov
push
js
out
lock
adc
inc
fildl
jnp
dec
andl
movsb
sub
dec
xchg
out
add
movsl
sahf
pop
mov
call
imulb
jbe
add
or
sub
and
xor
pop
outsl
push
nop
ret
mov
and
jle
mov
mov
aas
insb
mov
push
sub
je
jmp
add
cwtl
pusha
xorb
mov
jo
cltd
std
imul
push
loopne
imul
lret
push
mov
dec
pop
xchg
xor
lcall
mov
adc
mov
mov
fs
xchg
repnz
or
cwtl
add
and
es
outsb
adc
jae
add
add
and
rcrl
pop
out
push
mov
enter
outsb
mov
std
inc
xlat
and
sbb
push
lret
fs
sahf
push
mov
js
fisttpll
and
jg
iret
fwait
out
jnp
lcall
mov
mov
imul
fcmovnb
jbe
dec
pop
mov
mov
sbb
fbld
std
fs
hlt
pushf
mov
dec
mov
leave
aam
ja
pop
cmp
fstpl
imul
jb
jge
mov
or
push
pusha
fistps
jae
inc
outsl
adc
cmp
inc
movsl
data16
sbb
fisttpll
lret
flds
repnz
imul
stc
inc
mov
shlb
js
or
mov
mov
frstor
ret
mov
adc
jge
inc
adc
stos
cli
stos
js
cmp
insb
xor
imul
outsb
testb
adc
jbe
and
inc
mov
push
jge
js
dec
or
in
sbb
enter
pop
push
aas
or
scas
imul
mov
push
test
mov
stos
sub
lock
out
mov
lods
ljmp
mov
addl
cli
xorl
pop
imul
jo
adc
sub
jge
gs
pop
shrl
mov
js
sbb
ljmp
xor
ret
les
fs
aaa
aaa
or
cmpsl
cmpsb
xchg
cwtl
inc
cli
mov
fisubrl
cmp
rorl
cld
int
mov
gs
jmp
cmp
enter
xchg
mov
movsb
stc
jbe
or
jmp
repz
sub
imul
nop
mov
inc
nop
ret
cld
pop
jp
sub
and
scas
lret
and
lock
mov
and
mov
xchg
imul
and
loop
bound
adc
fnsave
push
in
lret
sub
cld
mov
loop
rolb
xor
cmpsb
pop
mov
xorl
sub
pop
pop
xor
stos
jecxz
push
push
popf
in
push
mov
fcompl
xchg
aas
bound
xlat
inc
pop
scas
sub
mov
in
xor
loope
pusha
dec
cltd
ja
in
push
or
xchg
push
stos
in
pop
call
push
push
pop
fisttps
jge
fwait
popa
orl
test
pop
sub
jns
dec
xor
je
loop
cmp
rorl
pop
stos
pop
dec
imul
test
ljmp
or
dec
es
mov
inc
mov
loop
fistpll
jae
mov
push
bound
sub
jbe
lcall
fsubrs
addl
sub
pop
loopne
stos
mov
inc
popf
or
out
mov
mov
aas
mov
inc
jge
mov
mov
jb
fnstsw
repz
das
xor
dec
cmc
sti
ljmp
inc
mov
stos
and
repz
sub
daa
mov
loopne
cmp
mov
cmp
push
arpl
ljmp
scas
lods
mov
inc
lock
js
mov
xchg
sti
xchg
cmp
xchg
xchg
mov
sahf
fdivp
loopne
inc
loop
add
test
into
dec
pop
lds
in
add
scas
jb
inc
lods
fwait
stos
stos
fidivl
jns
push
push
mov
push
lret
enter
imul
sub
cmp
stc
sub
outsl
jecxz
mov
mov
xchg
add
in
xchg
inc
ret
and
subb
push
pop
add
xchg
int
push
pop
sbb
dec
enter
xchg
mov
cmc
mov
lret
sub
pop
or
dec
inc
sbb
insb
faddp
gs
and
inc
loope
mov
dec
add
inc
pop
ds
lods
loopne
test
jo
mov
or
push
fldl
aaa
push
dec
insb
pop
cmp
in
imul
sbb
leave
lcall
ja
pop
popa
mov
push
mov
lahf
xchg
jmp
cmpb
sbb
xchg
push
pop
test
jne
and
mul
dec
pop
xchg
out
in
jbe
xor
xchg
pop
mov
cld
shlb
dec
add
add
popf
mov
inc
mov
int3
test
xchg
scas
adcb
xchg
sub
movb
lret
std
out
stos
pop
aaa
pop
cwtl
test
fcmove
pusha
and
sub
mov
lret
mov
lret
je
arpl
sysret
insl
pop
or
mov
les
or
cmp
xchg
sub
cmc
rcrb
and
jnp
jnp
sub
and
popf
jno
sub
xbegin
or
push
mov
pop
fstpl
and
adc
push
sub
xchg
insl
fistps
out
jmp
mov
sub
xor
mov
jl
and
pop
xor
cmc
lock
cmp
push
or
in
mov
push
lock
sbb
pop
cli
cmp
lahf
aad
cs
mov
mov
xor
test
xchg
sbb
xchg
andb
and
icebp
lods
or
arpl
push
into
or
ss
sub
lods
mov
sbb
dec
out
leave
repz
push
movsb
test
mov
cli
mov
mov
and
loope
dec
insb
push
in
std
fldenv
push
mov
push
xor
cmpsl
xor
sbb
fildl
lods
movsb
popa
cltd
add
adc
mov
std
dec
fwait
pop
jbe
jle
xor
add
mov
xchg
stos
adc
and
push
notb
sbb
xor
dec
lahf
or
pop
aas
adc
out
fisttpll
lret
ja
jae
push
mov
push
push
mov
xchg
daa
inc
xchg
cmc
sahf
cs
lret
repnz
push
pop
add
imul
cmp
xlat
cld
in
jo
sahf
jno
stc
adc
push
and
sbb
adcl
clc
stos
mov
pusha
or
cmp
test
cs
mov
xor
dec
pushf
cmp
testl
cs
xchg
push
mov
jmp
xor
loope
int3
dec
das
js
outsb
mov
jmp
push
movsl
mov
cs
in
inc
idivb
xchg
push
lsl
or
pushf
xor
cmp
sbb
lods
and
loopne
xchg
jge
mov
addr16
mov
xor
aas
mov
aam
fsubrp
es
and
xor
or
cmpsl
push
fdivrl
out
xor
lods
fidivl
sbb
rcrb
pop
pop
push
jns
ja
jmp
xor
out
aas
fwait
add
notl
adc
push
and
pop
mov
inc
lahf
jge
fcomps
jl
cmp
clc
dec
fildl
push
xor
scas
dec
fwait
lds
test
popf
mov
cmpsl
jmp
fisubs
xor
andb
cmp
bnd
sub
and
pop
cmpsb
ds
jbe
leave
pushf
push
xchg
test
or
pop
scas
aas
gs
clc
xchg
mov
mov
pop
and
pop
dec
sbb
and
push
jb
mov
or
cmp
out
fbstp
mov
lahf
repnz
bound
adc
shlb
icebp
pop
mov
mov
int
xchg
pushf
out
jge
mov
or
sbb
push
push
cld
adc
mov
out
test
push
push
adc
dec
push
or
lcall
jne
orb
push
test
faddl
stos
push
jae
repz
gs
or
jp
xchg
xlat
sub
dec
in
jmp
dec
xchg
dec
sbb
pop
jnp
jle
sbb
mov
sti
call
pop
xorb
jg
outsb
mov
and
punpcklbw
jecxz
mov
jnp
mov
jns
sti
jecxz
adc
sub
xor
imul
les
adc
call
dec
int
xor
inc
cli
inc
push
pop
clc
lods
jl
sti
cltd
jae
and
and
inc
cmp
mov
xchg
out
imul
xor
mov
pop
stc
aas
inc
cld
iret
mov
dec
cmc
mov
mov
subb
and
xchg
cmp
jb
mov
lods
ljmp
sbb
daa
adc
cmpsb
int3
in
loop
pop
rorl
lea
xor
add
add
cli
stc
shrl
cmc
push
cmpsb
cwtl
loopne
jmp
xor
push
mov
addr16
nop
pusha
loop
fdivrs
push
and
inc
mov
cwtl
jl
mov
add
outsb
lea
cwtl
fwait
dec
inc
mov
je
dec
xchg
in
xchg
iret
fistpl
xor
push
cmc
ljmp
mov
push
jae
fimull
mov
aam
sub
cmp
dec
ljmpw
pop
push
ja
or
inc
dec
enter
mov
lods
ret
pop
mov
xor
in
ret
les
cwtl
adc
sarb
loope
dec
xor
sbb
insb
outsl
jmp
loop
pop
pop
pusha
arpl
ret
and
sbb
jo
shrb
seto
add
jno
test
fcomps
add
lds
dec
scas
loop
push
fucom
ss
sub
out
ret
add
push
push
insb
mov
dec
inc
jns
pop
push
gs
divb
pop
mov
or
rcll
sahf
test
movsb
inc
xchg
int
mov
lea
mov
sar
fldt
mov
aam
inc
fstps
fcoms
xchg
sub
popa
mov
sub
movsb
in
sbb
ret
fwait
dec
mov
daa
out
imul
ret
rol
ds
push
push
sbb
jle
sbb
jmp
out
and
pushf
cwtl
repz
xor
out
sub
and
mov
and
fwait
mov
std
lods
jg
scas
xor
sbb
jp
int3
leave
fldl
stos
daa
dec
loope
xchg
out
loope
pop
shufps
int3
add
inc
subl
stos
mov
xor
mov
ret
arpl
xchg
inc
cld
imul
jl
mov
xor
sbb
inc
aad
ret
in
lcall
repnz
and
lods
aad
lcall
jne
out
dec
nop
cmp
sbb
and
sahf
adc
mov
aam
mov
cmc
pop
mov
movsb
or
inc
lea
jnp
test
xorl
enter
sbb
sbb
xchg
rcrb
inc
push
push
std
cmp
aas
add
icebp
ror
cmp
and
xor
rorb
mov
dec
arpl
cmc
rorb
mov
adc
test
cltd
in
cmpsb
mov
fildll
push
push
xchg
daa
inc
movsl
xor
imul
xchg
or
sbb
insb
lret
push
cmpsl
dec
fsubs
pop
dec
insb
scas
fidivrl
sub
push
shlb
xorl
andl
dec
sahf
cmp
lea
cmp
les
fwait
dec
js
daa
sbb
jecxz
mov
push
xor
sbb
mov
fs
addr16
dec
adc
mov
sti
sbb
movsl
xor
push
cltd
cli
mov
lods
out
test
cmp
mov
xchg
and
aaa
or
pop
dec
push
lods
mov
or
xchg
and
pop
in
sti
mov
data16
fwait
test
lcall
mov
repz
fistpl
dec
mov
xor
loopne
pusha
enter
dec
mov
add
xchg
aaa
iret
jno
xchg
mov
xchg
jl
pop
pop
out
pop
lcall
call
sbb
je
sbb
dec
and
arpl
iret
imul
sbbl
pop
outsl
sbbb
and
cmp
shrl
sub
push
cmp
daa
imul
sub
nop
dec
add
jnp
je
lret
sub
add
push
sbb
lea
dec
imul
in
and
test
stos
lahf
adc
sbb
mov
in
dec
inc
cmp
adc
mov
jo
push
push
or
cltd
fcmovu
scas
sbb
xchg
adc
and
mov
mov
pop
outsb
cmp
dec
or
daa
les
jb
scas
or
xchg
sti
ja
divl
push
out
out
mov
push
lds
lret
cmp
nop
outsb
test
xchg
leave
sbb
dec
lods
test
jno
add
ss
outsl
dec
pop
pusha
sbb
pushf
inc
jl
mov
xor
popa
sub
add
add
push
pop
cwtl
rolb
and
sub
sub
mov
add
scas
add
xchg
inc
cmp
fistpll
or
xchg
and
pop
cmpsb
in
cmp
mov
ds
sub
add
stc
pop
sbb
sub
lcall
pop
jne
jns
ja
mov
fildl
inc
repnz
int3
adc
movsl
inc
stos
jnp
push
mov
mov
push
dec
mov
adc
movsl
fisubs
test
jbe
mov
dec
mov
imul
dec
std
jle
pop
and
xchg
push
ret
mov
hlt
dec
inc
data16
and
pusha
mov
xchg
repnz
jg
mov
and
fisttps
imul
adc
push
test
push
jo
cld
jg
inc
test
add
sub
jle
roll
adc
pop
adc
rol
lahf
and
repz
es
fistpll
jg
cli
and
fcoms
cli
and
cmpsl
mov
loop
dec
jg
iret
and
scas
test
iret
inc
mov
gs
xchg
sahf
lahf
push
in
cmp
hlt
inc
out
sbb
jmp
push
incb
inc
inc
ss
lret
xchg
sub
mov
adc
fistpl
mov
into
mov
pop
add
ds
fmull
push
jne
pop
ja
pop
jg
insb
cwtl
popf
mov
imul
jae
sarb
jno
in
fs
movsb
sarl
sti
sti
icebp
das
cmc
inc
inc
inc
test
mov
fwait
mov
imulb
pop
sti
mov
pop
jne
insb
je
pop
or
sub
testb
jo
not
subb
daa
sub
sub
pop
arpl
xchg
pop
lahf
mov
int3
gs
shrb
add
sub
aaa
mov
int
repnz
ficoml
dec
xor
jg
mov
subb
mov
adc
mov
mov
jno
push
adc
leave
lret
ja
mov
inc
xchg
les
xor
mov
pushf
jle
in
repz
aaa
xchg
xor
mov
out
aaa
dec
fwait
sub
cmp
fisubrl
add
mov
aad
mov
daa
add
nop
or
jno
inc
sub
xchg
sub
sbb
jnp
addl
jno
scas
cli
mov
or
sbb
add
jg
test
cmp
jg
xchg
push
cmp
push
mov
and
lea
mov
and
dec
lret
push
push
outsl
or
add
mov
mov
cmp
jmp
fwait
pop
cmpsl
fsubrs
mov
mov
sub
cmp
pusha
in
xchg
jno
xchg
lahf
sbb
stos
dec
pop
sub
mov
dec
inc
xor
push
lahf
sarl
test
sbb
jg
loope,pt
ss
sub
jne
push
lahf
lcall
popa
js
dec
pop
push
dec
adc
mov
and
movsl
sbb
adc
pop
push
and
fwait
fisubrs
mov
sar
lea
jo
dec
mov
fldenv
dec
pop
pushl
jo
je
divb
jne
dec
fptan
pop
add
ret
sbbl
rcll
cmp
inc
test
repz
shlb
mov
rcr
sbb
scas
rcll
push
xor
vsqrtpd
pop
aaa
sub
repz
pop
jo
insb
sub
ret
je
outsl
cmpsb
mov
lahf
out
xor
and
xor
mov
and
pop
push
inc
mov
push
mov
popf
cmp
std
repnz
mov
cli
rolb
inc
inc
dec
push
out
orl
int
pop
or
jecxz
cwtl
out
aad
sbb
cmpsl
call
jb
stc
cmc
dec
add
pushf
stos
cmp
sub
adcb
bound
cmpsb
lret
loop
xchg
xor
scas
test
lods
lcall
jp
or
sub
adc
insb
cmp
fiaddl
ds
mov
orl
testl
adc
cmp
in
out
ss
push
mov
fimull
push
cs
in
daa
lret
dec
inc
or
bound
int
les
or
add
cmc
xchg
mov
or
or
xchg
loope
js
test
mov
ss
shrl
inc
mov
movsl
add
and
and
and
xchg
aaa
into
std
icebp
inc
push
popa
cmpsb
es
pop
popl
lds
or
adc
gs
imul
dec
lds
jns
into
hlt
jb
cltd
test
push
out
ja
jb
sahf
inc
test
push
inc
sbb
cli
ror
rcrl
out
inc
outsb
mov
cmp
pusha
mov
sbb
or
out
repz
cmp
int3
mov
sub
daa
cmp
out
aaa
mov
jnp
daa
and
loope
rcll
mov
adc
lods
repnz
mov
push
fadds
push
loop
repnz
inc
dec
dec
pop
inc
cmp
mov
push
lods
and
decl
stos
ret
inc
pop
pop
and
std
aas
test
pop
hlt
jae
mov
mov
icebp
stos
xchg
mov
int3
int3
sub
mov
incb
jecxz
mov
dec
aad
push
shrb
outsl
mov
jmp
mov
fidivrs
lret
pop
xchg
lret
dec
lahf
test
jmp
dec
and
push
imul
mov
jmp
fsubr
mov
mov
test
cmp
pop
in
and
jl
jecxz
loope
mov
out
sbb
fwait
scas
fistps
add
iret
mov
out
loopne
repz
cmp
pop
jno
inc
cmc
dec
add
xchg
add
dec
mov
jg
push
push
in
cmpsb
loopne
sub
cmp
pop
jns
jb
test
mov
lahf
xor
jle
std
test
rcll
enter
inc
frstor
and
leave
jo
cmp
mov
out
sbb
loope
mov
into
dec
push
aam
sub
inc
pop
sub
repz
adc
imul
mov
mov
xchg
outsl
mov
outsb
icebp
cli
test
fucomip
nop
jle
push
mov
mov
jl
scas
outsb
push
xchg
sbb
sbb
dec
push
push
cld
or
imul
test
mov
icebp
xchg
adc
lahf
in
pop
cmp
mov
and
cltd
mov
sub
and
mov
out
mov
push
xlat
sbb
scas
outsl
outsl
pop
inc
add
jle
addl
fs
enter
sbb
je
fidivs
faddp
adc
or
cmp
mov
test
add
lcall
aaa
fmulp
inc
out
fdivl
stos
scas
shll
ja
daa
mov
xor
push
dec
lods
add
movsb
and
sbb
dec
push
push
jp
xchg
imul
les
std
or
cmp
xchg
ljmp
adc
mov
inc
fcomi
jmp
sbb
jnp
sbb
mov
mov
js
add
lcall
dec
or
aam
mov
jnp
repz
push
pushf
stos
int
lock
int3
icebp
in
or
push
pop
das
jns
in
aaa
cmpsl
mov
mov
fwait
js
adc
ss
mov
push
mov
add
test
and
addr16
inc
add
adc
mov
stos
sub
jmp
cmp
sub
dec
cld
clc
fisttps
mov
fwait
popf
ja
sub
out
ret
stos
call
cmp
test
dec
sti
movsl
out
mov
cmp
adc
push
mov
call
lret
adc
xor
mov
std
xlat
inc
pop
mov
mov
fstp
mov
pop
pop
inc
xchg
xchg
addb
rcl
into
inc
sub
fsub
in
gs
roll
popf
shlb
inc
mov
das
jo
xorl
fnstsw
mov
mov
push
cmp
jno
dec
sbb
sub
iret
xorl
jns
adc
pop
mov
jbe
scas
in
jnp
jle
xor
xor
dec
outsb
es
fstps
dec
sbb
cmp
cmc
std
fidivl
jbe
cltd
sti
and
nop
mov
pusha
cmpsl
sahf
pop
push
and
inc
fwait
idiv
jg
mov
sarl
aas
fadds
mov
fildll
ja
stc
mov
scas
jle
add
or
stc
jp
lods
outsl
or
outsb
arpl
xchg
push
sbb
loop
xchg
jae
in
movsl
aam
pop
loop
xchg
mov
das
icebp
dec
arpl
fnstcw
mov
aad
cmp
clc
das
fwait
arpl
aas
pop
aaa
mov
mov
loop
mov
rcl
aad
ret
sbb
push
fistps
pop
int3
add
popf
ds
jmp
pop
repz
pop
mov
pop
or
jge
aam
jle
bound
dec
gs
imul
mov
ja
add
push
add
adc
sub
add
pushf
in
push
pushf
daa
lods
lds
jmp
jo
in
sarb
jp
pop
neg
and
adc
nop
mov
push
xor
outsb
cmp
add
cmp
mov
cld
cmp
dec
lods
dec
xchg
in
rcr
imul
add
push
mov
pop
push
xchg
and
sbb
arpl
roll
movb
dec
idivl
stc
leave
pushf
outsb
mov
xor
mov
repz
add
cmpsb
xchg
fstp
ret
dec
inc
popf
data16
sub
push
or
sahf
cmpsl
dec
out
and
mov
xchg
lods
or
ret
sub
jbe
add
xchg
in
orl
cmp
adc
mov
rcrl
outsb
loop
push
movsl
bound
dec
icebp
and
sub
int
bound
loop
xchg
rol
inc
push
jge
dec
push
addr16
sub
pop
add
pop
out
aaa
lods
dec
dec
pop
es
leave
or
sti
ss
std
cltd
into
adc
sbb
mov
adc
mov
cs
pop
mov
or
mov
lods
ljmp
push
dec
movsl
sbb
lahf
push
cli
lea
push
cmp
mov
push
mov
sbb
pop
sbb
mov
leave
pop
divl
ret
xlat
aam
aam
fcoml
xchg
mov
cmp
imul
pushf
pop
adc
lds
fwait
xor
scas
in
mov
popa
fcomps
addr16
in
or
sbb
sub
adc
lock
jo
add
shl
repnz
fcompl
lock
mov
stc
push
bound
subb
aaa
or
jl
fimull
je
dec
sub
pusha
and
ror
jo
mov
je
cmc
jb
fbstp
popa
test
in
sub
add
push
push
ficoml
inc
xor
dec
insl
in
cs
cmp
or
push
outsb
shlb
in
inc
add
outsb
mov
clc
jg
insb
in
mov
fsubrs
loope
pop
push
int
pop
xlat
out
leave
out
sub
orl
push
jne
dec
adcb
shlb
pop
and
mov
pop
jb
xlat
aas
lret
jnp
test
fnstsw
out
and
mov
mov
call
jp
xchg
and
fwait
movsl
jae
dec
jo
std
push
mov
mov
sub
pop
jecxz
dec
test
jle
add
push
js
loopne
out
repz
sub
popa
movsl
jecxz
imul
test
push
push
std
lods
and
xor
xor
adc
inc
mov
dec
xchg
xor
mov
jae
add
lds
dec
push
scas
push
mov
daa
sbb
pop
ret
mov
sub
xchg
xchg
mov
or
or
and
sbb
adc
stos
inc
fbstp
adc
and
lds
mov
daa
lahf
adc
mov
sahf
add
xchg
mov
push
jns
dec
divb
dec
sti
sub
xchg
and
cs
pushf
cmpsl
jl
cwtl
rcll
mov
adc
dec
sub
mov
pop
pusha
frstor
mov
xchg
ret
clc
mov
adc
pop
ljmp
cmp
mov
test
rcrb
adc
mov
sti
push
pmaddwd
pop
repnz
daa
shll
test
fistpl
lods
mov
inc
xchg
adc
pusha
add
push
imul
cmp
lods
jne
add
loop
jbe
sbb
inc
in
mov
frstor
pop
mov
xor
pop
add
push
dec
or
push
mov
inc
mov
dec
sub
xlat
out
pop
jnp
sbb
leave
std
sbb
jmp
in
push
cmp
jae
dec
pusha
sbb
or
pop
popa
sub
pop
mov
notl
jg
add
sub
ss
pop
decb
sub
mov
mov
adc
pop
leave
cwtl
ret
add
fwait
sbb
adc
imul
lock
xor
or
and
xorl
xchg
adc
inc
test
mov
sbb
mov
cbtw
ret
pop
xchg
adc
inc
xchg
decb
mov
pop
xor
xchg
loope
ja
pslld
push
push
mov
and
sub
and
lods
push
cmp
test
popa
cs
fs
jnp
pop
or
or
mov
cmp
xlat
mov
or
xor
mov
and
aaa
mov
or
sbb
aad
idivl
adc
mov
dec
mov
in
mov
add
out
loop
pusha
pop
nop
imul
lods
mov
outsl
clc
add
mov
jb
mov
repz
scas
cld
in
addb
xor
int3
call
add
jo
adc
push
lcall
leave
mov
cmp
cmp
not
xchg
call
inc
pop
paddw
icebp
jge
dec
out
dec
les
inc
je
cmp
fcoms
and
mov
dec
lcall
jge
push
and
pop
fwait
cli
ja
mov
mov
mov
rorb
mov
aad
sbb
sbb
xchg
jge
fistl
inc
inc
add
hlt
xlat
inc
or
sub
xor
leave
or
mov
jo
adc
and
sbb
mov
mov
dec
inc
subl
aam
insl
xchg
adc
mov
xchg
cmpb
popa
fsubrl
mov
and
nop
loopne
pop
dec
or
push
pop
pop
or
pcmpgtd
sub
cmp
addr16
pop
sub
push
inc
sbb
imul
dec
rcll
cmp
insb
inc
shlb
daa
aaa
ljmp
idiv
cmp
mov
cmp
add
adc
mov
adc
xchg
sub
adc
int
and
repz
fisubrl
mov
insl
rcrl
mov
sub
jmp
jno
xorb
xchg
jns
scas
addl
dec
ss
mov
cltd
je
testl
bound
mov
flds
imul
mov
test
lahf
mov
scas
cmp
push
mov
push
add
dec
add
mov
or
std
pusha
push
imul
mov
cltd
dec
test
and
dec
gs
push
add
lods
cmp
out
dec
sbb
outsl
inc
mov
subl
pop
hlt
and
jge
push
xchg
inc
sbb
mov
sbb
or
xchg
push
fsubl
and
push
adc
and
inc
push
mov
mov
or
popf
test
ljmp
dec
lret
les
fdivr
inc
fmull
bound
rdmsr
push
xchg
push
sub
movsb
jo
xor
mov
lods
es
addr16
xchg
xchg
xchg
lods
lods
mov
repz
add
outsl
arpl
in
lret
loope
inc
adc
sahf
sbb
clc
lds
mov
sub
arpl
es
cmpsl
test
std
stos
hlt
sbb
sahf
push
xor
stos
and
lock
mov
dec
jns
call
jge
je
add
cmp
mov
xchg
xchg
xchg
pop
jns
add
call
xor
sbb
mov
into
sarb
pop
aam
push
fwait
pop
jl
push
mov
imul
pop
mov
pop
jl
cmp
ret
jp
dec
pop
insl
dec
shrb
xlat
cmp
jb
and
jb
sbb
lea
sbb
push
hlt
or
pop
dec
mov
lods
out
test
test
and
hlt
fcmovb
inc
push
push
lock
pop
sub
sti
mov
adc
dec
in
lahf
aas
jno
rclb
pop
popf
sub
push
or
lret
dec
in
loop
xor
push
push
out
clc
pusha
ljmp
add
fcmovnbe
icebp
cmp
or
je
xchg
jg
jae
ss
sti
xor
lock
sub
push
push
dec
inc
xorb
lret
pop
das
cli
mov
dec
arpl
fdivrs
and
cmpsl
aaa
push
inc
cmp
xchg
mov
sbb
jnp
in
mov
imul
push
fiadds
sbb
aad
lock
pcmpeqd
pop
add
adcl
lret
push
sbb
loope
mov
lock
jle
lea
outsb
cmp
xor
xorl
adc
idivl
aas
push
testl
mov
ja
popf
mov
and
mov
mov
imul
pop
scas
leave
lcall
lock
cmp
sbb
adc
mov
fs
and
jle
imul
push
adc
dec
imul
mov
popa
daa
adc
cmp
in
lea
xor
push
mov
jmp
jl
movsl
add
rcrb
test
ret
fistpl
xor
pop
mov
mov
scas
mov
cmpsl
mov
xchg
fldl
jne
and
pop
cmp
xchg
xchg
mov
fwait
loopne
sub
ret
pushf
xchg
dec
lods
mov
pushf
pop
dec
js
and
mov
scas
lea
daa
pop
shlb
imul
inc
xchg
xchg
loopne
mov
stos
fistpl
ret
sub
xor
inc
xchg
xor
jo
xchg
pop
les
dec
pop
sbbb
shr
cmp
or
mov
popf
push
mov
sbb
cltd
and
in
jp
jbe
in
in
add
rep
jno
fiaddl
cli
test
cmpsb
jns
pop
loop
or
enter
xor
xchg
stos
mov
cmc
xchg
scas
jne
out
mov
pop
mov
pop
stos
inc
and
pop
jmp
hlt
mov
pop
push
popa
ss
adc
push
rcrb
test
mov
xchg
jae
push
xchg
mov
lcall
repz
sbb
xor
in
inc
or
aaa
sub
fwait
inc
xor
ss
movsb
add
adc
or
sbb
xchg
adc
sub
adc
mov
cmp
fisubrs
or
movsb
sub
xchg
push
dec
adc
mov
xchg
mov
lock
bound
loope
mov
adc
and
mov
mov
jge
je
aad
addb
jmp
insl
dec
mov
jnp
popf
lods
int
xchg
jmp
mov
out
jns
push
das
insl
ret
sub
jb
inc
adc
jle
sahf
insb
pop
loop
out
push
pop
ja
lret
mov
iret
pop
lea
sbb
rcll
xor
cmc
cld
sti
or
sub
dec
lods
xor
leave
pop
into
clc
daa
adc
fcom
cmp
dec
mov
mov
into
mov
pop
lcall
inc
clc
addr16
popf
push
mov
dec
cmp
negl
pop
bound
dec
sahf
jmp
jge
jp
shl
insl
adc
push
frstor
adc
mov
enter
lods
xor
sub
sahf
inc
push
jo
xor
lret
ror
insb
test
cmpsl
and
add
pushl
pop
fidivl
subl
sbb
fisubrs
call
push
cmpsb
cmp
push
jno
push
mov
push
mov
test
ja
shlb
aad
lds
mov
jg
xchg
pop
in
inc
mov
loopne
push
jmp
clc
pushf
nop
aam
pop
or
sahf
scas
sub
cmp
push
or
movsl
sbb
cltd
mov
jle
push
inc
loope
mov
push
and
rcl
fcoml
push
pushf
mov
xor
and
sbb
es
lods
mov
cwtl
lea
fcoml
mov
pop
cmp
out
and
pop
or
divl
mov
pop
and
movl
push
cli
xor
ret
out
mov
mov
adcb
stos
subb
in
mov
jge
mov
push
nop
mov
jae
lock
push
cmpsl
xorb
adc
inc
add
push
fxtract
fldenv
loopne
idivb
rcr
push
xor
xlat
repnz
fistpl
dec
in
sbb
addb
clc
xor
jnp
adc
jl
jbe
add
out
lods
cwtl
lods
cmp
or
sub
adc
mov
fs
xchg
mov
add
dec
sbb
dec
inc
jne
xchg
jmp
xchg
ficomps
pop
cmpsl
inc
jne
xchg
lahf
mov
pop
mov
jne
jb
inc
adcl
std
xchg
sub
xor
xor
enter
cwtl
and
jl
sahf
ret
mov
xchg
push
xchg
stos
jl
mov
sub
xchg
out
lods
mov
mov
push
push
stos
inc
outsl
repz
pop
lods
sub
lahf
nop
test
xchg
or
jl
fcmovne
dec
add
push
cmpsl
xor
and
cwtl
pop
shl
into
xchg
arpl
or
sbb
lds
xor
lahf
iret
rcrl
in
daa
push
mov
or
adc
hlt
movsl
mov
cltd
pop
inc
scas
fisubs
outsb
addr16
jb
loope
sub
inc
sbb
les
fiadds
push
gs
mov
xchg
pop
dec
sub
inc
mov
ss
adc
mov
mov
sbb
jb
in
or
or
fwait
pop
pop
push
fisttpl
out
mov
xor
sbbb
fdivrl
enter
movsb
mov
adc
pop
inc
ret
call
loopne
std
clc
xchg
hlt
ljmp
inc
jne
in
mov
rorb
movsb
fs
daa
cli
dec
mov
sub
lret
mov
imul
mov
mov
mov
dec
popf
aaa
xchg
orl
jp
movl
xchg
or
clc
mov
ret
cmc
xor
fisubrl
sub
push
lock
jne
sti
jg
in
test
pushf
ljmp
in
out
fsubr
imul
inc
in
repz
pop
scas
xor
loop
in
sub
fsubs
inc
mov
jns
and
dec
sub
imul
push
adc
out
inc
ss
fidivs
imul
ss
int3
push
fcompl
mov
out
fisubrl
in
push
out
out
mov
mov
out
sbb
jae
push
mov
in
ds
xchg
cmp
mov
push
jg
inc
fildl
aam
in
inc
xor
jmp
mov
int3
jo
or
fsubr
mov
fcmove
cltd
das
pop
lcall
pop
in
push
mov
mov
pusha
lahf
xor
ja
jmp
loope
xchg
xchg
lock
push
dec
or
cmpsb
push
xchg
fsubl
xlat
cmpsl
pop
shr
sub
xchg
out
les
divl
add
fnstsw
ret
fidivrl
insb
out
imul
and
add
pop
rolb
lret
push
mov
add
xor
sar
popf
xchg
fiaddl
mov
stos
in
test
jns
and
pop
fidivrs
mov
inc
xchg
and
dec
ljmp
and
sub
in
jge
jge
and
mov
pop
movsb
mov
sahf
lahf
out
push
jecxz
es
pop
jmp
ljmp
insl
ret
scas
mov
lret
cmpb
test
adc
mov
xor
insl
or
jp
hlt
pop
mov
pop
adc
aad
icebp
mov
stos
cld
lcall
in
and
fsubr
call
stc
mov
dec
mov
sub
dec
xchg
or
adc
push
push
scas
fldenv
add
movsb
xchg
jbe
jno
popf
test
jp
and
das
inc
nop
lahf
pop
insl
push
or
into
loopne
subb
xchg
jb
mov
jl
and
pop
orb
out
or
and
jae
insl
in
in
mov
inc
ja
pop
jg
insl
aas
pop
jmp
jb
idivl
shlb
sbb
imul
inc
repz
inc
add
and
sub
xlat
notl
mov
je
sahf
add
loop
je
dec
hlt
scas
cmp
popl
xor
test
je
mov
hlt
pop
call
sbb
daa
shlb
fwait
lcall
divb
xlat
add
sahf
mov
sbb
movsb
jge
negb
scas
clc
in
cld
clc
mull
or
adc
out
shr
xchg
adc
adc
sbb
mov
jb
dec
out
cmpsb
shrb
arpl
xor
sahf
in
insb
jb
inc
jle
xor
outsb
lods
inc
xchg
adc
add
jmp
pop
int3
lea
scas
add
xchg
adc
cltd
icebp
xchg
jno
ret
popf
or
mov
dec
fbstp
and
test
filds
out
in
shrb
repz
xchg
xchg
jbe,pn
int
push
jge
push
jle
repnz
sbb
mov
testb
dec
cli
jl
les
push
xchg
mov
mov
xchg
shll
ss
imul
dec
sbb
xor
movsl
fidivrs
sbb
fwait
mov
imul
popf
adc
add
ja
cmp
dec
pop
add
dec
cmp
sbb
ljmp
test
sub
pusha
sti
xor
sbb
repz
in
jl
push
dec
rcl
lds
psubd
and
div
fcoms
jns
jp
and
push
bnd
mov
insb
push
inc
pop
test
clc
mov
dec
jns
stos
xchg
rorl
mov
jle
test
imul
mov
pop
pusha
and
dec
dec
cld
rcll
jg
push
xchg
xchg
pop
aam
mov
and
loopne,pt
push
sbb
insl
movsl
imul
or
add
jmp
mov
aad
mov
pop
adc
lahf
and
cltd
leave
jbe
loope
push
mov
mov
push
fisttpl
push
xchg
dec
ffree
sarb
xchg
rcrl
or
lcall
bound
jmp
inc
test
in
lcall
xor
addl
lret
pop
jp
ja
fimuls
test
hlt
push
adc
call
popa
mov
lods
dec
add
lea
push
add
mov
jb
int
and
sbb
aam
into
dec
sahf
sahf
mov
mov
cmpsb
out
inc
pusha
adc
adc
xchg
mov
lods
test
jle
repz
mov
popl
jge
jnp
fidivrs
sub
inc
aas
int
mov
divl
imul
xor
fwait
outsb
add
test
fnstsw
push
and
dec
daa
sbb
ret
lret
ret
outsl
cmp
leave
jae
shr
mov
sbb
ret
push
mov
aad
cmc
repnz
in
mov
adc
mov
adc
js
push
push
xor
jl
fwait
push
lret
loopne
inc
jbe
dec
pop
pop
in
mov
test
adc
outsl
imul
loopne
in
shlb
inc
in
push
dec
insb
ret
aas
into
cmp
sbbb
push
xchg
andb
push
pop
in
das
in
jo
fcoml
cmp
inc
stos
das
jecxz
pop
insw
cmpsl
daa
sbbb
mov
sarb
outsb
pushf
pop
adcb
stos
sub
adc
lret
mov
je
adc
jge
adc
dec
stos
outsl
mov
iret
push
lea
aam
mov
xchg
sub
jle
data16
or
cmp
ret
sub
push
mov
pop
dec
ljmp
mov
cmpsb
pop
or
mov
fsubl
mov
adc
xchg
dec
or
sbb
pop
xchg
dec
lret
lret
nop
popf
fists
add
push
mov
movsl
mov
mov
xor
mov
mov
lret
pop
xor
ret
dec
test
fiadds
xchg
jns
mov
loop
or
add
sbb
loope
cmp
pusha
adc
mov
cmp
daa
orb
idivb
sti
cmp
cmpb
jmp
push
int3
insb
repnz
sub
cmp
jge
push
orl
imul
loop
jno
and
cwtl
jae
sbb
pop
lahf
xchg
cmp
insb
push
imul
mov
sbb
stc
inc
lcall
dec
xor
and
mov
push
inc
push
xor
sahf
push
sub
and
mov
loopne
push
sub
sahf
ljmp
xor
xchg
inc
cmp
xor
add
mov
fdivrs
jg
addr16
mov
jge
mov
jmp
mov
dec
stc
pop
mov
std
arpl
mov
pop
call
inc
xor
aam
sub
and
inc
pop
shlb
and
subl
pop
loope
pop
push
xlat
mov
adc
mov
ljmp
rcll
sti
adc
jno
push
jno
js
adc
mov
pushf
pop
xchg
add
test
jmp
sbb
xchg
jbe
aam
lret
and
movsb
leave
sbb
push
cltd
outsb
xchg
andl
insl
test
pop
dec
xchg
movsl
ljmp
dec
jbe
int3
pop
sub
jbe
je
arpl
jne
icebp
cmp
fisubs
push
sub
sti
mov
les
mov
jg
sbb
push
lods
aaa
cwtl
addl
or
dec
loopne
push
xor
xchg
ficompl
rol
data16
cmpsb
ds
cmp
movsl
and
int3
jge
lods
xor
dec
mov
fsts
out
pop
in
lods
pslld
sahf
insb
jle
je
outsb
pop
cmp
or
int
rorb
ds
sahf
jp
xor
jge
fcoms
xor
push
or
ror
rcrb
or
sub
clc
fdivl
mov
pop
std
inc
les
fcomps
inc
and
ds
mov
movsb
scas
mov
jno
inc
test
pushf
dec
mov
push
mov
mov
cmp
das
fisttpll
icebp
jnp
add
push
pop
mov
inc
sbb
jg
lahf
sub
test
jp
pop
addr16
and
movsl
ret
shlb
mov
lcall
mov
js
ds
ret
out
cmc
cmp
iret
pop
or
xor
mov
mov
mov
addr16
mov
stc
stos
das
repnz
cmp
ljmp
jmp
xor
ret
adc
test
arpl
xor
aas
jnp
and
adc
js
sub
mov
push
outsl
adc
std
fdiv
pop
mov
jne
cmp
pop
sub
outsl
sub
dec
sbb
sub
int
clc
test
outsl
jno
out
mov
fwait
xlat
sbb
xchg
or
adc
repnz
dec
jns
mov
mov
add
outsl
mov
adc
cwtl
xor
lock
mov
push
pop
and
in
inc
pop
leave
dec
sub
rcrb
stc
sbb
push
repnz
pushf
xor
icebp
xor
and
lahf
inc
fldt
imul
pop
les
push
nop
cmp
mov
cmpsb
adc
jbe
in
rcl
and
dec
pop
roll
mov
or
insl
aam
dec
aaa
inc
add
inc
loopne
les
xchg
and
mov
dec
dec
sbb
scas
lcall
adc
mov
icebp
imul
inc
lret
push
adc
sbb
add
scas
lahf
icebp
push
and
xor
add
mov
cs
xchg
ja
add
add
jne,pt
xor
jmp
stos
repnz
int3
sub
mov
mov
push
sub
rclb
pmaddwd
test
popa
add
pushf
das
mov
jge
fists
jg
push
dec
jne
dec
sbb
in
outsl
iret
sbb
das
sahf
and
pop
fldz
cmp
out
test
icebp
and
sub
lea
pusha
xchg
clc
test
ret
pop
ror
mov
add
adc
add
jmp
add
js
mov
xchg
push
stos
or
sbb
pop
sbb
cmpsb
popf
xchg
inc
mov
jnp
and
dec
mov
jmp
call
cmp
aam
jmp
test
sbb
mov
xor
and
pusha
jbe
insl
ds
pop
lahf
pop
test
jbe
xor
push
loope
push
jne
xchg
add
mov
add
inc
mov
incb
adc
jo
pop
or
lret
stos
sub
mov
push
mov
jo
mov
xor
int3
scas
mov
or
and
test
adc
dec
mov
frstor
adc
mov
push
mov
mov
adc
rorl
sbb
arpl
cmp
or
inc
mov
add
cld
inc
daa
stos
mov
shr
sub
add
push
cwtl
push
jl
clc
fisttpll
jecxz
mov
bound
rorl
test
xchg
cltd
xchg
test
cmp
and
sbb
notl
mov
dec
pop
inc
mov
cmp
push
push
jl
adc
lea
push
or
movaps
and
adc
fiaddl
js
add
pop
insl
push
mov
sbb
faddp
gs
jle
mov
loopne
pop
sahf
mov
push
push
test
push
push
neg
imul
lea
adc
scas
repnz
jne
jmp
popa
popf
imul
pop
call
clc
movsb
push
and
fnstsw
popl
insl
dec
and
inc
adc
xor
outsl
xchg
pop
cltd
xchg
mov
ret
cli
mov
fisttpl
inc
sbb
lret
mov
sahf
mov
js
dec
cwtl
push
cwtl
cmpsb
push
cmp
ja
out
jae
ret
mov
xchg
mov
xchg
push
popa
pop
jb
nop
push
es
adc
imul
jp
popa
subb
mov
sbb
das
stos
sub
int3
mov
repnz
xchg
pop
mov
shlb
cmp
xchg
jp
je
stos
rorl
sbb
ret
or
fisttps
xchg
cmpsl
enter
scas
pop
in
out
and
push
je
fdivrl
in
mov
sub
cmpsb
leave
pop
mov
xor
add
sub
popf
cmp
or
je
insl
rcrl
cmc
or
jns
jns
mov
les
roll
cli
add
int3
sbb
cmpsl
sbb
lods
fsubr
test
shrb
pop
loop
in
mov
push
xchg
pop
mov
mov
push
hlt
inc
idivl
mov
and
cld
pop
test
pop
sbb
mov
mov
lods
mov
loop
push
outsb
ret
icebp
xchg
or
mov
je
shll
andl
jecxz
xor
lretw
add
and
mov
mov
and
xchg
add
cwtl
fstl
loop
aad
ljmp
je
je
sahf
out
xchg
std
cmp
sub
dec
sbb
ret
jne
out
or
jns
dec
fbld
aaa
lods
push
jbe
ds
jl
movsl
mov
paddd
sub
add
push
shlb
lds
inc
xor
incb
int
jl
and
dec
stc
test
fsubrs
push
xlat
ret
push
aaa
ficompl
roll
xlat
push
enter
and
outsl
in
adc
inc
jp
sub
cmpsb
jecxz
xchg
dec
in
fcomi
in
loop
cmp
lock
xchg
push
jns
mov
aas
dec
and
pusha
dec
ror
idivl
nop
out
jo
pop
hlt
cltd
into
stc
popl
ljmp
aas
jno
jae
clc
lods
mov
or
sbb
sbb
shl
rcll
jnp
pop
ds
mov
pop
lock
or
mov
leave
pop
filds
movsl
pop
pop
dec
jl
lock
mov
fidivl
jecxz
aam
stos
out
rorl
fmulp
mov
addr16
int
push
dec
arpl
lock
or
leave
inc
in
aam
jo
mov
cmp
sbb
sub
jno
popa
or
mov
pop
sub
jae
push
cltd
outsb
jmp
movsl
mov
imulb
xchg
pop
aaa
or
sbb
inc
xchg
mov
pop
push
mov
test
and
push
das
addl
dec
mull
addb
and
rclb
push
jge
cli
movsl
test
sbb
dec
sbb
or
jnp
mov
mov
push
dec
out
out
shll
pusha
inc
sbbl
add
mov
gs
lock
pop
mov
add
sbb
jno
das
pop
inc
push
fidivs
jnp
sub
orb
jnp,pt
jge
xchg
lret
mov
cmp
sub
push
sub
dec
arpl
sub
fnsave
xchg
inc
mov
and
lahf
jnp
dec
push
inc
addb
int3
xor
fstps
pushf
rcl
insb
je
mov
cmc
gs
je
mov
push
or
sbb
out
mov
cmp
lock
mov
mov
mov
adc
mov
cmp
cmp
shlb
jecxz
sti
pop
mov
mov
repz
and
jmp
loop
cltd
sbb
push
aaa
push
popa
rorb
loopne
jp
ja
sbb
sbb
fiaddl
rcrl
push
dec
sbb
mov
jae
pop
xchg
ja
out
movsl
int3
lahf
fs
sub
leavew
pop
test
icebp
out
arpl
mov
mov
ljmp
leave
pop
and
jno
push
add
jnp
idivb
pusha
es
rcl
adc
out
push
dec
out
xchg
aas
mov
jno
es
cwtl
mov
mov
lcall
push
orb
cwtl
daa
xor
mov
add
in
outsb
cmpl
adc
cmp
lods
push
repnz
dec
jp
mov
cli
xor
ds
push
in
adc
std
insl
add
and
pop
mov
dec
jl
sti
adc
dec
xchg
cmp
cmp
pop
mov
inc
jl
xchg
mov
xor
ret
scas
xchg
sbb
add
ja
xor
or
sub
add
aaa
fwait
mov
fimull
loopne
pop
loope
pop
lret
popa
inc
cmp
sub
add
fistps
out
jnp
cli
adc
xchg
cmpsb
inc
inc
in
int3
mov
cmp
xor
xlat
in
popf
lret
fcomi
fidivs
test
or
pop
ja
pop
scas
adc
or
adc
mov
rorl
movsl
fmul
stos
inc
cmovnp
iret
inc
jg
adc
xor
mov
pop
xor
mov
xor
pop
sbb
leave
cld
call
inc
lock
dec
mov
lret
mov
dec
mov
mov
sub
fdivrl
mov
sti
ja
cmp
mov
add
push
jb
or
adc
mov
pushl
fsubrp
hlt
loope
jb
xchg
daa
test
cmp
lea
test
xor
sbb
int3
je
dec
jae
jmp
rcr
mov
cmp
mov
xchg
ret
js
pop
fsubl
and
dec
test
push
minps
jle
outsl
or
gs
jge
fstpt
movsl
cmp
or
sbb
scas
int
std
dec
int3
cmp
nop
push
repz
into
gs
lret
ljmp
movsl
dec
std
cmc
pop
jle
sbbb
push
in
pop
sbbb
pusha
scas
mov
movsb
pushf
jbe
and
iret
jg
jge
and
mov
pop
fisubl
daa
out
daa
mov
sbb
xor
cmpsb
out
mov
cmp
sub
jb
lods
inc
nop
or
mov
dec
adc
scas
faddl
dec
cmp
insb
xor
imul
jae
pop
aas
xchg
pusha
adc
test
push
scas
sarl
daa
bound
scas
mov
xor
arpl
outsb
adc
aad
inc
cmp
adc
pop
lcall
adc
scas
test
lock
sub
xchg
mov
bound
xchg
mov
mov
pop
lods
cmp
clc
adcl
xor
sbb
xor
outsl
sub
test
test
xor
bound
mov
cmc
xchg
test
repnz
icebp
fcoml
mov
pop
outsb
cmp
notl
sub
xor
test
add
adc
popf
adc
inc
xchg
lcall
pop
mov
in
xor
mov
xor
dec
dec
lds
mov
dec
mov
iret
iret
pusha
jno
std
fcoms
dec
adc
gs
jg
rcl
loope
adc
sub
mov
push
adc
xlat
dec
ljmp
fs
dec
loop
adc
and
sub
cmc
cmp
add
test
outsb
and
xchg
inc
push
mov
mov
mov
pushf
mov
in
cmp
push
and
jns
sbb
xor
cltd
jmp
lahf
out
lret
lahf
sbb
das
sbb
int3
xchg
mov
lock
mov
sbb
sti
jl
lret
xchg
divps
sub
sub
cmpsl
leave
rorb
fcomps
cld
cwtl
xor
inc
loope
sbb
dec
mov
popf
js
dec
sti
pop
sbb
mov
jp
xchg
add
ljmp
loop
xchg
adc
imul
inc
mov
std
test
fimuls
outsl
adc
int3
icebp
addr16
mov
movaps
out
jl
mov
mov
or
dec
inc
mov
das
fbld
ret
push
mov
sbbb
rorb
xor
test
add
dec
inc
cmp
pop
xchg
enter
js
mov
dec
push
lods
dec
cmp
xor
fstpt
jne
inc
push
rolb
cltd
into
jae
mov
imul
mov
addr16
push
add
jbe
fsubl
fiaddl
pop
stos
sarl
lock
mov
jne
cltd
pop
xchg
andl
into
scas
inc
mov
dec
fdivrl
push
outsb
jle
mov
xor
mov
stc
xchg
push
jno
push
add
bound
repnz
loopne
shrl
je
dec
mov
cmpsb
add
push
jp
xchg
sbb
jecxz
ret
xchg
dec
mov
xchg
fwait
in
and
mov
jle
fsubr
inc
mov
lahf
in
inc
xor
push
jae
pop
push
push
and
and
mul
fwait
or
int3
fisttpll
leave
ror
add
add
jo
flds
lock
enter
pop
pop
aad
mov
add
inc
pop
inc
push
mov
add
mov
xor
pop
dec
dec
xor
repnz
inc
add
pop
ret
enter
push
movsl
imul
xchg
mov
popf
push
les
testb
or
inc
push
mov
cmp
add
fwait
in
pusha
add
push
dec
dec
pop
mov
push
das
fsubs
or
dec
inc
aaa
add
dec
mov
lea
nop
fs
xor
mov
push
mov
daa
aaa
lock
js
js
and
lock
mov
add
cmpsb
mov
mov
loopne
xor
movl
push
leave
cmp
insl
sub
and
scas
or
push
mov
mov
dec
cld
pop
pop
cmp
fisubrl
xchg
fiaddl
mov
push
pop
pop
aam
dec
cmpsl
jmp
mov
and
mov
xchg
dec
xlat
adc
cli
inc
scas
and
das
push
shrb
cmpb
xchg
out
cmpl
inc
cltd
ret
arpl
xchg
sub
in
cmp
mov
shl
adc
fwait
jbe
and
pop
ret
push
fmuls
lods
or
das
in
cld
mov
ja
lods
ss
dec
sub
dec
jg
js
inc
dec
xchg
sti
outsl
sbb
push
sbb
outsb
lret
mov
loop
mov
das
decl
test
jnp
cwtl
rcr
jno
sub
push
sub
stos
stc
push
adcb
lcall
aad
std
jle
jle
lods
aaa
inc
data16
into
and
sub
loop
adc
inc
sarb
mov
mov
aad
push
imul
in
ss
and
xor
out
sub
orb
pop
dec
xlat
mov
jl
jae
dec
popa
test
and
mov
ljmp
loop
xor
sti
testb
jge
addr16
fisttpll
enter
scas
adc
jg
and
push
cmp
push
push
je
sbb
jl
and
fcompl
icebp
inc
mov
adc
mov
fcomps
mull
andb
or
jo
mov
and
outsb
adc
js
fstl
jb
popa
adc
push
out
mov
das
addb
ret
sbbb
xor
out
lock
jb
sbb
xor
and
gs
repnz
mov
push
adc
mov
pop
pusha
jg
push
hlt
inc
ljmp
sub
out
dec
adc
out
in
add
enter
jne
mov
out
into
inc
fwait
sbb
inc
rcrl
add
fldcw
pop
into
scas
sbb
xor
pop
and
lea
xor
cmp
sti
repnz
test
inc
imul
lcall
test
mov
jl
daa
or
repnz
inc
pop
adc
orb
mov
call
mov
aam
sub
pop
fnstcw
sbb
cs
push
inc
jb
push
pushf
insl
pop
pop
dec
and
addr16
imul
sbb
shl
push
jbe
jbe
add
shl
sbb
dec
lcall
mov
out
cmp
dec
incb
lahf
imul
lcall
mov
not
sub
les
orb
loopne
jne
rorl
or
pop
push
and
mov
sub
aas
popf
std
enter
test
scas
fistpll
mov
ljmp
xchg
push
fs
cltd
gs
jg
cmp
push
and
call
pusha
rorl
sbb
jmp
pop
add
mov
jno
mov
push
mov
pop
adc
lret
inc
jl
cmp
clc
add
aam
int
loop
sub
movb
lret
sti
shrl
dec
cwtl
daa
jo
push
out
fbstp
stos
dec
mov
int3
testl
sbb
add
test
mov
repnz
lea
fucomi
je
fistl
lcall
popa
push
mov
lods
data16
in
call
shl
dec
ljmp
ss
mov
push
xor
dec
xchg
mov
stc
mov
ret
pusha
pop
int
fadds
pop
fldenv
lea
das
out
mov
push
out
nop
repnz
scas
enter
shrb
sti
rorl
mov
rol
out
mov
jno
imul
in
subb
cli
adc
push
dec
mov
and
add
dec
pop
imull
fadds
inc
sbb
out
jno
int3
add
xchg
pop
js
int3
mul
dec
cld
jb
and
dec
test
cli
pop
pop
loope
dec
xor
negl
stos
je
and
adc
mov
sbb
lods
cwtl
sub
pop
lea
movb
push
cmp
and
xchg
push
mov
jbe
std
pop
dec
sbb
mov
dec
jno
push
dec
xor
and
xor
add
mov
add
ret
jge
mov
hlt
lock
in
lret
push
mov
imul
movsl
pop
ds
js
test
push
cmpsl
cld
adc
cmp
js
lcall
popa
aas
xchg
jle
mov
add
and
adc
mov
cmp
jne
fisubrs
repz
add
xchg
push
outsl
dec
adc
pop
mov
push
and
in
mov
mov
cltd
xor
loopne
push
cmp
sbb
inc
aam
leave
xor
mov
lea
inc
inc
stos
dec
repz
je
sbb
or
hlt
adc
sbb
add
lds
mov
mov
call
adc
dec
loope
ja
rcll
enter
xlat
add
add
xor
inc
jecxz
jnp
pop
lock
test
jno
out
scas
pop
push
dec
in
shlb
dec
mov
pop
jne
push
pop
outsb
loop
xchg
cmp
fiadds
push
out
mov
pop
xor
jecxz
inc
test
fstpl
fs
mov
push
stos
scas
push
xchg
xor
and
mov
jbe
test
lcall
push
test
stos
rolb
dec
mov
or
lods
mov
jbe
dec
and
shrl
mov
mov
lahf
mov
lahf
ret
loopne,pt
es
mov
sahf
cmpsb
jns
dec
test
out
outsb
mov
mov
cmpsb
push
testb
mov
data16
mov
pop
jmp
fiadds
cmp
aaa
mov
scas
push
call
pop
inc
mov
pop
mov
cli
or
test
jg
test
ret
mov
xchg
mov
scas
cmp
xchg
js
mov
std
jnp
cwtl
inc
xchg
pop
and
or
and
in
pop
push
aad
arpl
cwtl
enter
mov
add
mov
cmpsb
aas
insl
pop
leave
jnp
lods
inc
test
jo
rclb
cmpsl
pushf
loop
and
es
cmp
lcall
test
and
cli
test
mov
or
push
dec
inc
and
addr16
push
xlat
jnp
outsb
clc
cmp
push
mov
insb
fidivs
test
and
sub
imul
push
notb
cwtl
leave
push
test
popa
arpl
add
pop
push
out
mov
jne
aam
cli
and
popa
mov
xor
xor
xor
sbb
xchg
sub
mov
lods
or
mov
movsl
test
into
and
dec
sub
adc
aas
sub
cmp
adcl
pop
push
adc
fcmovb
cmp
pop
stos
mov
int
xor
pop
or
mov
push
jl
jge
dec
sub
bound
inc
movsb
ja
mov
mov
sti
pop
lahf
jmp
adc
shlb
std
push
add
push
mov
mov
ljmp
push
add
je
lret
hlt
mov
mov
fisttpl
ret
add
push
rol
ds
push
imulb
insb
or
push
out
mov
sarl
xlat
xchg
adc
cwtl
sahf
xchg
imul
into
lret
add
ja
scas
mov
dec
shll
loop
mov
jno
mov
adc
pop
ficomps
xchg
nop
or
cli
dec
popa
fmuls
stc
scas
and
inc
sub
stc
loop
jg
stos
popa
repz
xor
out
xor
hlt
and
shlb
push
call
pop
mov
add
hlt
mov
rcrl
mov
inc
push
daa
ljmp
and
xchg
jns
fcoml
out
lcall
int3
lds
xlat
push
sbb
or
movsb
popf
test
xlat
sti
pop
or
mov
aad
xchg
inc
insl
fistpll
icebp
arpl
xchg
xor
sbb
dec
xor
daa
loope
push
jge
out
cli
add
jae
mov
lcall
jo
fwait
cli
ja
movsl
in
adc
xor
divl
dec
ret
rorl
loope
rclb
add
mov
push
pop
add
cmp
xchg
sahf
push
pop
lahf
xchg
inc
or
xorl
sub
pop
sbb
shlb
ret
aad
insb
push
in
dec
pop
pusha
rclb
jmp
cmpsb
push
push
cs
and
mov
dec
mov
mov
push
outsb
ss
lock
inc
or
mov
loope
lcall
shll
sbbl
pop
sub
push
testl
add
mov
inc
mov
push
inc
xchg
movsl
cltd
jo
ret
clc
fiaddl
gs
adc
pop
mov
pop
or
cmp
cmpsl
xor
xchg
jns
mov
int
ret
roll
and
inc
inc
mov
stos
adc
popf
sbb
fsubrp
xor
pop
fildll
test
sahf
loope
addr16
in
cltd
push
clc
enter
mov
jg
loope
imul
jae
fcompl
inc
fmuls
js
sub
arpl
popa
mov
mov
inc
ret
jno
mov
jne
lahf
leave
cs
jo
incl
in
cmpsb
cmpsl
mov
into
ljmp
mov
outsb
sbb
xorl
imul
or
push
xchg
cltd
sub
outsl
push
jg
fisubl
lret
sarl
pop
lret
pop
jge
jbe
add
fcmovu
aas
mov
sbb
pop
ss
lods
jle
mov
cmpsb
xor
mov
adc
out
mov
mov
aam
aaa
insl
subl
and
adc
fs
dec
mov
sub
xchg
pop
dec
out
mov
xor
mov
dec
ja
sub
inc
jl
jg
push
jp
xchg
cwtl
xchg
jl
nop
bound
imul
jae
addr16
sti
xchg
pop
add
test
popf
lret
push
cmp
cmp
ficomps
sbb
or
imul
scas
fisubrs
cmpsl
in
adcb
xorb
inc
jns
cltd
test
cltd
and
mov
jo
orl
fidivrl
sbbb
or
mov
fwait
mov
loop
popf
xchg
cmp
dec
inc
xchg
fmul
outsb
cmpb
test
out
lahf
jns
inc
xor
dec
js
dec
sbb
fs
or
in
lods
lds
decl
sbb
sbb
stos
imul
js
xor
sub
cld
clc
adc
cmp
call
xchg
dec
sub
cwtl
outsb
add
fmull
aam
int3
jl
test
inc
sti
pop
iret
in
aad
mov
inc
pop
adc
arpl
das
pushl
repnz
xchg
jl
outsb
jno
hlt
mov
inc
sub
push
sbb
adc
sbb
rclb
cli
cmc
push
sbb
je
mov
xor
or
add
adc
cld
jno
mov
rorb
std
das
xchg
xchg
lods
test
sahf
lgs
mov
das
mov
push
outsb
pop
push
std
jb
sahf
stos
int3
push
cwtl
mov
dec
jo
daa
cmp
jne,pt
addr16
jno
and
jge
mov
std
aaa
fwait
add
xor
push
mov
adc
movsl
sbb
popa
addr16
xor
sub
cmp
pop
cltd
iret
and
pusha
jo
push
lret
stc
dec
ret
sahf
popf
jbe
xchg
sub
xchg
mov
test
or
dec
fs
pusha
add
das
mov
pop
cwtl
xchg
sub
into
ret
scas
cmp
mov
inc
inc
jg
mov
subl
fs
outsb
insb
add
fnsave
xchg
cmpsb
daa
repz
dec
dec
aad
aam
lock
or
mov
cmc
hlt
sub
sbb
mov
add
inc
inc
xchg
fs
test
dec
cmp
enter
mov
mov
dec
hlt
in
fwait
scas
push
js
push
lods
popf
cmp
gs
mov
pushf
xchg
nop
adc
lock
dec
and
adc
and
je
sbb
jmp
je
clc
addr16
sbb
loope
jo
xchg
dec
aas
mov
push
mov
push
dec
push
dec
push
out
sbb
das
les
aaa
mov
sbbb
dec
repnz
inc
mov
ja
mov
mov
and
je
xor
adcb
je
cmpsl
adc
aaa
push
add
mov
xchg
fcomi
pop
icebp
jns
mov
mov
sub
or
orl
pop
xor
push
jne
mov
jle
imul
or
push
inc
adc
and
cmp
pop
pop
dec
scas
fcmovnb
cmc
ret
sbb
add
push
xchg
stc
mov
mov
insl
fbstp
sub
mov
and
test
jo
ds
sub
and
push
call
js
cwtl
into
test
out
jo
push
sub
inc
dec
outsl
inc
jo
jns
or
jb
out
mov
or
push
mov
jecxz
fs
insl
outsl
pop
cwtl
je
imul
test
mov
jl
mull
xor
push
cmp
jle
in
cmpsb
sbb
or
ljmp
add
adc
ret
add
rorl
cmpsb
jmp
and
lds
faddl
insl
out
mov
cli
lds
roll
xlat
mov
hlt
outsl
mov
sbb
sarb
jnp
or
xchg
ret
xor
mov
stos
fs
jae
mov
aaa
and
aam
mov
add
leave
and
inc
mov
ja
add
cmp
inc
int3
shl
lea
lds
mov
enter
ret
sbb
adc
xor
mov
add
int
cld
rcll
dec
sub
or
jle
lods
lods
bswap
jo
inc
aad
mov
ds
mov
add
sbb
jl
pop
rorb
movsb
ret
mov
cmc
into
xor
in
dec
pushf
fsubrl
data16
xchg
mov
mov
push
cmpsb
sub
ja
mov
pop
loopne
inc
aam
xor
ficoms
movsl
push
inc
push
lea
cmp
stos
mov
pop
sti
fistpl
or
in
mov
pop
and
xchg
cld
sbb
fdivr
and
aas
mulb
subl
mov
mov
lods
das
movsb
mov
push
mov
xor
mov
push
mov
sti
pop
mov
pop
or
shlb
cmpsb
mov
adc
stc
jge
lock
insb
dec
mov
and
inc
pop
dec
shrl
and
iret
mov
dec
lea
lahf
cs
movsl
mov
and
cmp
pop
scas
mov
adc
lods
xor
push
addr16
fs
mov
and
stc
cmp
dec
in
rclb
adc
mov
test
inc
adc
cwtl
dec
inc
and
xchg
jmp
rcll
call
loope
scas
sbb
adc
inc
cmpsl
repnz
jecxz
inc
js
lds
mov
jp
xor
jne
in
insl
jno
push
jmp
imul
out
test
mov
repz
leave
scas
inc
fcoml
fbstp
jno
and
ret
xor
in
aam
out
adc
in
sub
xor
xchg
inc
jg
push
sub
push
cmp
imul
mov
adc
cmp
and
jnp
cmc
jb
addr16
addr16
pop
inc
sbb
inc
pop
dec
mov
int
pop
lcall
pop
mov
dec
loope
mov
cwtl
test
ljmp
jno
cmp
xchg
inc
push
mov
popf
iret
orb
or
and
ljmp
int3
mov
push
loop
ds
inc
fwait
inc
push
jbe
mov
mov
cmp
pop
and
loope
jns
fistl
mov
or
imul
inc
jmp
cld
xor
call
fdiv
out
out
cmp
fisttps
cltd
in
add
sbb
pop
xchg
sub
jge,pn
movsb
jl
loope
xchg
daa
leave
outsl
testl
inc
xchg
cld
cmpsb
roll
mov
jecxz
frstor
jae
fcmovu
dec
pop
out
add
clc
or
clc
mov
in
scas
cmp
xor
aam
lret
inc
inc
outsb
mov
out
std
and
aam
jp
inc
dec
push
lahf
stos
or
inc
push
sbb
outsl
or
jp
enter
mov
push
das
push
inc
and
xchg
hlt
popf
stc
jge
mov
jl
xchg
clc
fwait
addr16
pop
mov
int
hlt
inc
push
sub
cmpl
jp
mov
or
mov
pop
ss
add
mov
add
addr16
clc
mov
loop
adc
inc
std
inc
iret
mov
mov
mov
scas
out
test
cld
mov
mov
popa
xchg
push
mulb
movsl
repnz
lods
aam
sahf
cmp
xchg
addr16
mov
pop
mov
out
pusha
sub
lret
mov
push
cmp
sub
xor
add
out
mov
jmp
mov
mov
mov
and
dec
nop
jns
pop
add
in
add
xor
inc
scas
xchg
pop
ret
inc
in
mov
gs
fs
popf
adc
mov
adc
fsubrl
dec
jo
loopne
push
scas
mov
rorl
imul
dec
dec
data16
pop
dec
leave
cmpb
fdivl
stc
lret
lods
inc
sbb
ret
clc
arpl
xchg
sbb
mov
aas
lea
mov
std
xchg
sub
cmp
cs
clc
dec
or
inc
jns
push
jns
repz
push
shrl
jmp
push
and
in
ss
cmp
xor
jle
arpl
fidivl
jge
xor
sbb
inc
lock
aaa
adc
pop
js
adc
cmpl
cli
iret
stos
inc
mov
movsb
fisubrs
out
and
addr16
sbb
cmp
sbbl
popf
in
sahf
adc
cmp
iret
out
fidivs
dec
loope
pushf
inc
mov
mov
and
ret
inc
add
sahf
fidivs
lock
fistps
sub
fidivrs
lods
iret
int
or
ret
lcall
mov
sub
fwait
jl
sbb
pushf
outsb
or
clc
stos
das
mov
mov
fwait
mov
adc
int
inc
ss
xchg
sub
adc
adc
jb
jns
inc
aad
repz
dec
movsb
testb
add
push
sbb
or
fmuls
sarl
in
inc
adc
push
push
stos
and
and
rorl
ret
cmp
les
out
push
andb
sti
jmp
xor
fs
mov
popa
mov
sbb
xor
lahf
ja
sub
xor
stos
mov
cmp
aaa
sahf
test
push
add
imul
xor
sbbl
dec
add
lods
in
jns
cmc
cs
mov
int3
sub
or
sub
popf
fcomp
jb
out
mov
leave
inc
add
and
pop
popa
adc
decl
scas
movsl
mov
call
pop
mov
push
jbe
push
or
clc
inc
or
std
rclb
sub
or
ja
mov
and
add
xor
push
jge
js
ljmp
jae
imul
dec
mov
jmp
ljmp
out
xor
mov
fdivr
add
mov
push
push
nop
fldt
icebp
mov
in
xor
cld
mov
insl
sub
inc
aaa
arpl
jns
lcall
mov
push
cli
stc
je
mov
xlat
pop
sbb
cli
sarb
mov
sbb
les
cmp
inc
push
subb
ja
pop
xchg
cltd
iret
pop
pop
daa
xchg
jle
adc
leave
mov
pop
notl
add
xor
cli
adc
push
jge
adc
mov
repnz
or
add
adc
imul
insb
xor
or
inc
push
add
pop
dec
hlt
and
add
std
xor
inc
aad
leave
test
dec
mov
aas
cmp
std
push
or
cmp
lret
xor
loope
test
dec
xor
sub
rcll
jb
cld
std
dec
add
adc
sub
xor
sbb
fdivs
lods
lock
inc
inc
je
mov
jp
xor
dec
mov
push
xchg
add
xor
adc
jno
dec
movsl
call
xor
lods
js
pop
cmp
sub
lret
fnstenv
int3
jb
loop
lret
inc
or
pop
inc
scas
mov
jle
lcall
nop
fsubl
neg
xor
lret
flds
cmp
lret
fadds
les
push
repnz
xor
lock
andb
popa
mov
clc
rclb
mov
or
lods
lea
mov
jnp
lret
add
test
cmp
cmc
xchg
xchg
sub
mov
dec
jle
dec
inc
fisttpl
ret
nop
push
insb
sarl
xor
or
out
adc
mov
mov
push
loop
leave
pop
mov
out
mov
lods
stos
cmp
xor
out
je
repz
test
rcll
js
push
pop
push
dec
arpl
xlat
or
movsl
or
jmp
adc
mov
pop
popa
inc
int3
test
pop
xor
jmp
ror
dec
cmpl
popf
sbb
addr16
xchg
scas
jno
dec
mov
jmp
sub
sbb
ja
bound
mov
adcb
and
or
lods
ret
pop
and
jo
or
push
push
jmp
xor
mov
inc
adc
pushf
out
mov
subl
push
pop
addr16
daa
push
dec
sbb
andl
sub
sub
mov
imul
insb
rorl
pop
cmp
cmpsl
dec
into
jnp
das
fsts
push
sbb
mov
dec
movsb
addr16
pop
aaa
call
hlt
fnstsw
lods
aaa
dec
sub
xlat
pusha
adc
and
test
jp
sbb
adc
lcall
js
fildll
cmp
test
sub
hlt
fiadds
inc
fnstsw
push
dec
sub
xchg
test
cs
mov
movsl
dec
fisubl
jmp
sarl
jnp
jnp
iret
aam
jg
dec
ret
lret
aad
in
push
fidivl
nop
jl
mov
pop
fcompl
aam
adc
cld
cmp
inc
dec
pop
stos
imul
jns
shlb
add
cmp
or
jns
aad
mov
ret
mov
insb
adc
pop
int
cld
shll
jl
fs
pop
cmp
dec
jge
inc
cwtl
jmp
or
xchg
dec
mov
mov
mov
movsl
popf
xor
mov
insl
and
movsl
pop
sbb
adc
scas
cs
push
bound
imul
push
mov
test
ret
mov
inc
pusha
repnz
in
cmp
sbb
repz
xorb
or
cwtl
dec
frstor
pop
sub
out
inc
sahf
cmc
mov
pop
std
lahf
mov
xchg
pop
lahf
dec
mul
inc
jo
jns
lcall
cmp
out
xchg
ret
out
enter
adc
loopne
jnp
pushl
or
addr16
les
lods
push
jae
je
jo
imul
fld
pop
sub
js
andb
adc
int
cld
fists
std
adc
or
loop
sub
and
fmuls
sbb
add
ffree
add
mov
adc
mov
dec
repnz
movsl
xchg
adc
and
mov
cmp
icebp
adc
dec
pop
push
dec
cmp
cmpsb
xor
lods
sub
int
lods
push
adc
fs
imul
mov
push
hlt
arpl
outsb
int3
arpl
mov
je
push
out
repnz
lods
mov
xlat
aam
xchg
addr16
inc
loop
cwtl
mov
mov
fwait
bound
lods
and
jecxz
sub
test
cmp
call
jle
or
loop
push
jne
mov
in
pusha
das
dec
jne
xor
rorl
in
out
clc
sub
pop
mov
xchg
mov
psrad
std
jne
push
sbb
mov
in
out
push
aad
push
dec
lahf
pop
push
repz
cmp
aaa
dec
push
sahf
pop
bound
push
or
sti
cs
or
sub
xchg
stos
sub
in
jmp
sub
testl
jecxz
add
leave
bnd
fs
repnz
sbb
fwait
cmp
and
int
aas
or
xchg
test
ja
loop
cmpsl
xchg
xorl
sar
add
adc
repz
mov
xor
les
insl
xor
jge
stos
in
mov
xchg
outsb
adc
adc
xchg
mov
cmpsl
jno
das
fmulp
es
add
cmp
stos
es
pop
ret
jge
sub
pop
add
fmull
mov
xlat
cli
jecxz
mov
push
pop
xorl
std
test
fnstsw
adc
sbb
xor
cmpsl
pop
inc
pop
fsubrl
inc
test
shlb
notl
adc
pop
inc
mov
sub
cmp
cwtl
jg
jno
daa
sub
mov
adc
mov
ljmp
push
jecxz
xchg
lahf
out
mov
sub
inc
mov
adc
adc
cwtl
and
dec
adc
mov
and
arpl
mov
shll
mov
push
notl
jns
mov
lea
mov
fs
mov
faddl
mov
push
scas
fstpt
and
mov
je
inc
pop
lds
adc
xor
iret
test
pop
inc
cmpsl
mov
ror
arpl
pop
add
test
jbe
bound
mov
dec
or
sti
lods
lods
and
mov
ret
fldl
or
mov
out
lcall
into
pop
stos
jbe
jns
inc
std
fs
sub
fcoml
adc
test
jb
inc
push
gs
test
jno
popf
inc
loopne
jle
lds
pop
insb
or
data16
scas
gs
pop
imul
sbb
lcall
sub
lock
mov
or
jp
sbb
pop
pop
fsubrp
into
fwait
jnp
pop
or
jl
out
add
aam
sbb
or
movsb
cmc
mov
inc
cmp
jecxz
imul
insb
jns
xchg
adc
out
mov
xchg
aaa
ss
cmc
ret
push
adc
mov
push
aad
lcall
inc
loopne
pop
add
call
cld
push
pop
pop
add
mov
loopne
sbb
das
fldt
rol
mov
ss
insw
stos
or
jmp
ficoml
adc
jb
popa
xchg
lcall
movq
or
mov
xchg
sub
add
pusha
sbb
lods
lods
jl
imul
jb
or
js
dec
andb
adc
dec
add
aad
outsb
scas
pcmpeqb
ret
xchg
imul
mov
scas
iret
sti
fmulp
addr16
leave
cmp
jecxz
fsts
adc
dec
mov
int3
xlat
fucomp
add
fiadds
mov
push
mov
dec
lret
dec
mov
mov
ja
mov
in
pop
jbe
xor
gs
leave
sub
pushf
shl
pop
push
pop
sbb
or
cmpsb
sbb
mov
push
push
or
ljmp
aad
mov
jae
xchg
mov
and
adc
test
lods
pusha
xchg
xor
pop
or
and
clc
mov
ss
int3
std
pop
lahf
jge
jl
add
mov
aad
xchg
sbb
dec
adc
mov
mov
test
jg
adc
sub
fwait
jp
xchg
sbb
mov
out
xor
ss
mov
rol
sbb
dec
outsb
push
inc
xor
mov
js
xor
and
xlat
mov
mov
cmp
and
xor
enter
push
insb
lds
jbe
std
mov
in
fnstsw
cli
sub
int3
iret
cmpl
xchg
out
pop
dec
dec
fildl
sbb
insb
loopne
jns
into
dec
test
jo
loop
out
jg
adc
mov
pop
pop
adc
outsb
dec
dec
push
cmp
jae
sti
fdivr
pop
pop
add
mov
mov
push
push
addb
add
xacquire
mov
mul
test
mov
ret
xlat
outsl
mov
inc
or
jno
mov
aad
dec
lea
lea
cs
adc
mov
and
lods
dec
push
xchg
mov
stc
cli
dec
jle
pop
fldenv
mov
neg
sbb
dec
push
imulb
sub
imul
add
lcall
cltd
jmp
in
dec
stos
ds
jne
jp
and
cld
jmp
mov
data16
jge
mov
jge
mov
sub
xchg
fidivrs
imull
ja
into
pop
cld
fildl
inc
loopne
jne
cltd
adc
and
das
in
or
push
mov
mov
sbb
mov
mov
jb
aad
xchg
jns
dec
idivb
mov
sbb
sarl
inc
jae
ss
pop
pushf
mov
fs
jmp
inc
cmp
mov
sub
mov
mov
mov
outsb
popl
xor
out
sub
sahf
push
dec
xchg
dec
jb
roll
fldenv
test
pop
in
cmpsb
xchg
push
fstpl
mov
cmp
rcr
nop
stos
nop
xor
loope,pt
rcll
data16
inc
xchg
imul
js
cmp
jmp
rep
mov
enter
insl
mov
jecxz
cmp
out
push
adc
sub
ljmp
mov
inc
cltd
int3
add
xor
sahf
xor
dec
cmp
sub
cmpsl
xchg
xor
out
icebp
out
ret
sbb
out
fdivrl
inc
cmp
adc
mov
loope
repz
mov
mov
gs
ret
or
push
inc
mov
ret
daa
sbb
enter
push
adc
pop
mov
gs
pop
iret
add
mov
arpl
pop
adc
xchg
es
pop
dec
std
in
pop
push
fwait
out
gs
mov
subl
xchg
pop
mov
fmuls
pop
xchg
bound
add
xor
test
mov
dec
adc
mov
mov
roll
mov
mov
int3
cmp
nop
xchg
movsb
push
jns
pop
pusha
mov
arpl
xchg
pop
lock
insb
xchg
dec
ljmp
inc
scas
shll
jo
inc
fisubl
into
xchg
xor
add
push
mov
test
pushf
mov
fs
jge
inc
out
mov
test
imul
sbb
imul
sub
cmp
pop
xchg
out
mov
movsb
fucomip
in
rcll
jg
rcll
out
push
ret
xor
push
int3
add
cmp
xchg
cmp
sub
in
mov
rorl
cmp
fsubs
xor
sub
test
or
push
jl
out
test
add
push
pop
lock
xor
xchg
repnz
out
or
je
mov
xlat
mov
out
xchg
xchg
enter
and
mov
mov
jns
out
sti
pop
jp
xchg
fstpt
mov
inc
inc
test
daa
shll
dec
xor
jmp
dec
dec
lret
adc
call
xchg
sub
mov
aam
mov
pop
push
test
cmp
mov
sbb
pop
ret
in
pop
clc
sub
mov
insb
subl
sub
bound
mov
dec
xchg
ds
cmp
push
jecxz
scas
add
testl
sbb
push
xor
bound
inc
enter
and
mov
ja
or
xchg
pushf
xchg
loope
push
or
lods
cmpsl
ljmp
sub
or
das
aam
movsb
icebp
fcomi
adc
push
cmp
jnp
addr16
popa
sti
roll
cmp
and
inc
cmpl
xor
xchg
sbb
inc
push
test
mov
add
xchg
mov
in
pop
pushf
vrcpps
in
out
xor
mov
or
dec
push
mov
mov
jmp
inc
out
add
ret
call
or
out
inc
lods
pop
lea
xchg
push
push
or
sbbl
mov
aad
ljmp
testb
scas
add
popf
cmpsl
jecxz
in
fwait
xchg
mov
sbb
sbb
adc
sbb
jle
and
shr
aam
stc
inc
xchg
stos
push
adc
push
add
ds
int3
xlat
aam
sub
pop
xchg
loope
push
jge
mov
and
adc
cwtl
mov
mov
and
aas
fwait
inc
mov
mov
or
mul
cmpsb
fst
and
xchg
in
jecxz
sbb
cmp
enter
in
xorl
ret
out
inc
jo
xchg
cmp
lock
xchg
jo
jge
jle
cmp
inc
sti
ret
out
dec
sub
hlt
xchg
jmp
icebp
dec
or
cmp
call
xchg
mov
inc
mov
sub
inc
xorl
pop
scas
insb
iret
stos
in
xorl
std
mov
clc
scas
pop
mov
push
adc
lahf
xlat
or
xlat
pop
adc
add
or
mov
xchg
mov
mov
push
xorl
push
lahf
adc
into
loope
jmp
push
xchg
jo
and
in
jp
mov
jp
aam
sub
sbb
dec
sbb
inc
xorl
push
mov
fstpt
fcomi
inc
adc
out
movsb
jg
mov
sub
jbe
mov
pushf
pusha
mov
mov
pop
std
inc
cld
loope
dec
xchg
add
xchg
xchg
orl
data16
pop
fcmovbe
mov
push
sub
mov
clc
addr16
pop
sar
aad
test
adc
out
mov
lahf
mov
or
imul
pop
arpl
adc
out
in
dec
mov
in
in
cld
fs
or
cmp
cmp
xchg
add
roll
popl
test
mov
xchg
std
cmp
jmp
sbb
ja
dec
xchg
cmp
in
cmp
mov
adc
xor
sub
sbb
mov
into
scas
out
lahf
pop
push
or
pop
xchg
adc
push
pop
movsb
inc
and
lahf
daa
sbb
pop
pop
mov
ret
aaa
lea
popa
mov
jbe
sub
loope
test
inc
test
pop
popf
fildl
imul
pop
push
lods
xchg
or
out
jbe
mov
int
xchg
push
imul
lahf
nop
adc
mov
and
add
and
xchg
lea
imul
cmp
pop
xor
aad
dec
mov
mov
out
sub
sbb
jg
sarl
xor
jno
push
jmp
dec
int3
and
imul
mov
je
loop
adc
dec
stos
out
cmp
or
cltd
or
lock
dec
lahf
mov
lds
mov
inc
or
mov
or
outsl
push
repz
es
out
lret
add
sub
cmp
ja
repnz
and
sbb
ss
mov
mov
mov
test
sarl
push
dec
sub
xor
inc
push
fadds
cmpsl
xor
xor
push
xchg
stos
loopne
fisttps
imul
cmp
aas
adc
sbb
rcll
pop
imul
scas
pusha
or
jge
cmp
push
scas
mov
and
mov
stc
inc
mov
in
sub
aad
pop
sbb
inc
or
fnsetpm(287
ret
pop
or
jne
sbb
lcall
fildl
pop
cmc
mov
and
mov
adc
outsb
aas
adc
inc
aas
fwait
out
imul
shl
gs
dec
mov
cmp
jmp
xor
push
jl
fisubrs
dec
sbb
es
xchg
daa
add
adc
mov
or
push
inc
insl
sbb
pushf
shll
scas
scas
out
mov
aaa
push
or
pop
push
dec
pop
rcrl
arpl
repz
dec
adc
inc
mov
daa
leave
mov
adc
cmp
mov
test
sbb
cmp
cmpsl
mov
imul
mov
arpl
shlb
mov
jb
add
sbb
insl
cltd
jg
pop
xor
cmp
xchg
pushf
imull
into
dec
mov
cmpsb
push
dec
repnz
jle
shll
aad
add
cmp
fdivl
mov
cmpsb
sbbb
add
jo
xchg
sub
jge
mov
push
hlt
sub
dec
mov
mov
xchg
dec
sub
dec
push
adc
adc
sbb
out
rcr
sbb
shlb
in
jnp
mov
in
mov
pop
sbb
push
jb
lock
mov
imul
stc
stc
test
and
andps
mov
in
sub
lds
sbb
or
stc
lock
push
cmpsb
pop
adc
mov
in
and
mov
sub
pop
lods
inc
out
jecxz
mov
add
adc
test
sahf
movsb
das
in
inc
lods
and
mov
sbb
xor
or
jg
add
pop
mov
ljmp
mov
cmpsl
insl
inc
xchg
mov
or
sub
add
adc
loop
inc
inc
add
lock
push
lcall
cld
loope
bound
testb
push
mov
mov
mov
inc
aam
js
adc
js
mov
cmc
dec
sbb
add
bound
out
incl
or
ds
enter
cmp
dec
fists
stc
xlat
push
dec
and
loope
cli
clc
repz
push
icebp
je
cli
mov
sbb
aad
mov
push
dec
lret
pop
sbb
pop
inc
add
mov
or
pop
mov
sub
dec
or
out
dec
cmp
decb
inc
insl
mov
xor
imul
mov
fnsave
push
movsb
jne
mov
or
dec
jmp
add
iret
das
and
out
push
pop
pushl
das
sub
int3
test
insb
in
hlt
cmp
cmp
xchg
out
mov
scas
fsts
sbb
dec
lahf
test
inc
fmuls
sbb
pop
sub
dec
outsl
xchg
dec
fisubrl
lods
loopne
jnp
orl
fistpl
test
cmp
out
aad
lock
aam
scas
inc
aad
es
inc
ljmp
add
mov
cli
mov
out
adc
in
test
inc
rcrb
sub
mov
movsb
push
push
add
iret
adc
lcall
cmc
loope
fs
xchg
pop
filds
pop
aad
arpl
mov
lds
sbb
test
bound
mov
js
lcall
adc
ret
add
out
sti
out
cmp
adc
xor
mov
scas
push
jecxz
jbe
xchg
or
push
cmp
fldcw
xor
in
mov
sbb
mov
jmp
int3
xchg
push
mov
pop
imul
leave
jne
inc
pusha
xor
and
dec
and
mov
xchg
mov
add
sub
fsubrl
fstpl
push
jg
cmp
les
mov
or
mov
jle
adc
fiaddl
xchg
test
orb
xorb
mov
stos
out
xlat
pop
aaa
pop
fidivrl
and
out
inc
int
cmp
pop
aaa
jb
test
or
ljmp
rol
scas
enter
popa
jb
fdivrs
ficoml
xor
jg
lods
pop
push
and
and
les
xchg
shl
mov
pop
cli
xchg
les
imul
dec
inc
or
adc
shrl
pushl
cmp
sbb
cmpsb
or
adc
and
jge
fnstcw
loop
pop
pop
fdivr
loope
cli
mov
imul
xor
fldcw
mov
outsb
div
xor
les
mov
cltd
lret
push
push
fisttps
push
cmp
inc
or
pop
dec
or
andb
loope
andb
dec
add
or
dec
outsb
xor
inc
test
mov
mov
xchg
pushf
push
xchg
cltd
cld
xor
ja
inc
mov
ja
test
jo
in
push
adc
pushf
push
sbb
jle
adc
aad
popf
sub
mov
xor
cwtl
pop
hlt
jno
roll
fmull
jecxz
mov
pop
xor
mov
cmpsb
push
scas
mov
sbbl
pop
xor
scas
mov
fs
mov
jae
cmpsl
lods
xchg
cmc
sub
add
mov
mov
sahf
xor
pop
mov
sub
xchg
lods
rcrl
adc
pop
xchg
fcompl
xchg
sarb
xor
lret
insl
sbb
lcall
xlat
dec
or
ja
outsb
lds
add
pop
sbb
not
pop
pop
orb
or
hlt
xor
idivb
mov
sbb
xor
or
add
xor
into
les
lock
sub
inc
out
xchg
jmp
pop
xchg
pop
dec
in
pusha
js
lret
or
sub
mov
xchg
mov
jp
xchg
movsb
test
mov
mov
cmp
inc
fisubrl
sub
push
fwait
adc
cmp
dec
push
push
jb
push
dec
mov
dec
js
xor
push
push
xchg
xor
pop
push
sbb
inc
les
pop
and
pop
pop
nop
mov
sahf
out
push
out
les
fdivrp
movsb
loop
fcoml
outsl
iret
pop
mov
shrb
test
sub
mov
test
or
dec
das
sub
nop
push
insl
mov
adc
cli
inc
test
mov
aas
dec
add
in
int
cmp
repz
xor
xchg
xor
sub
repnz
pop
daa
roll
add
or
xor
daa
jg
je
push
int
sbb
mov
ljmp
push
sub
movsb
push
sub
xchg
lea
sarl
xchg
mov
cmp
jo
imul
xlat
sub
mov
sbbl
mov
xor
and
jmp
or
cmpsl
inc
test
loope
add
jbe
in
mul
imul
sar
mov
outsb
add
lods
xor
inc
xor
sbb
scas
pusha
or
xchg
sub
int
add
inc
divb
mov
push
repz
stos
les
rcrl
fidivs
cmc
sbb
inc
inc
fadds
dec
pop
fs
xchg
pop
mov
sbb
js
mov
adc
and
sub
and
fs
adc
add
jbe
sbb
inc
jp
iret
and
mov
cmpsl
mov
inc
jae
sub
mov
mov
cwtl
mov
mov
loop
mov
shrl
mov
lods
pop
loop
push
sahf
test
shl
sub
pop
dec
cld
movsb
scas
mov
icebp
xor
hlt
jo
sub
incb
inc
pop
push
je
xchg
loope
sbb
loopne
cwtl
pmaxsw
and
stc
mov
insb
sbb
ret
ds
clc
cltd
inc
js
sub
sub
xchg
pop
inc
lret
mov
xchg
insl
clc
loopne
stos
imul
negl
inc
pusha
and
mov
sub
addr16
cmp
sub
mov
cmp
mov
pop
stc
test
lods
adc
fbld
insl
call
xor
sbb
sub
push
mov
or
xchg
dec
out
push
add
daa
jle
pop
jle
aas
pop
dec
adcb
xor
incl
inc
outsl
lahf
xor
sahf
mov
jmp
mov
ret
inc
js
add
mov
flds
cmp
add
mov
addr16
fstps
dec
ret
xchg
out
ret
loop
xlat
push
inc
iret
imul
js
cmp
cld
es
fs
aam
push
daa
sahf
lret
inc
fdivr
mov
pushf
aam
lock
inc
or
sub
jge
movsl
out
subb
and
cmpb
mov
push
bswap
aaa
pop
xchg
mov
inc
popf
test
xchg
push
jmp
dec
xchg
push
mov
jecxz
es
dec
and
jge
les
loope
loopne
dec
cmp
jo
in
mov
adc
pushf
push
mov
js,pn
mov
movsl
test
mov
out
jmp
and
inc
xlat
inc
and
add
shlb
pop
lret
inc
fcmovu
andl
adc
mov
in
fisttps
cmpsb
sub
mov
loopne
pop
xor
imul
push
jae
dec
adc
xor
mov
icebp
int
sub
mov
xchg
fsubrs
xchg
rcrb
inc
adc
pusha
lret
pop
mov
cmp
in
addr16
stos
div
fwait
test
adc
mov
data16
mov
addb
pop
outsl
mov
pop
imul
fwait
in
add
test
andb
xchg
dec
mov
pushf
dec
add
daa
mov
in
cld
test
negb
stc
mov
or
or
xchg
test
cmc
adc
shl
scas
jl
push
push
jne
aam
popf
or
js
xlat
aam
xor
xchg
jmp
ss
out
and
lcall
lcall
sbb
dec
dec
jns
aas
mov
movsl
mov
add
mov
repnz
call
xor
fcoms
cmp
inc
jne
inc
mov
jne
push
arpl
stc
add
nop
cltd
mov
adc
jae
push
mov
lret
fistl
sub
or
and
stos
repnz
aad
iret
sahf
aaa
pop
mov
stc
js
nop
je
jne
or
movsl
push
gs
call
movsb
movsl
fnstsw
jl
jmp
mov
shll
jl
push
out
bound
inc
les
push
fucomi
push
inc
mov
rorl
aad
out
das
xor
flds
push
cmc
jle
int3
sbb
cmp
outsl
fistpll
dec
push
mov
and
add
or
dec
add
lea
mov
cmp
xor
add
cmpsb
adc
outsl
or
push
and
add
cmp
icebp
aad
je
push
sbb
or
xchg
test
test
or
xor
push
mov
incb
loopne
xchg
pop
add
mov
repz
jo
add
insb
out
movl
pusha
arpl
adcb
mulb
add
mov
cmp
inc
sub
sub
je
cs
fsubl
lods
pop
xor
cmp
js
leave
in
push
div
aaa
dec
xchg
pop
pop
sub
bound
pop
int3
mov
sbb
add
push
sub
out
push
lcall
jg
cmp
xlat
xchg
mov
dec
cmp
jmp
jp
inc
ret
jne
pop
lret
fstps
inc
mov
sbb
scas
push
jle
cmc
pop
or
vmovshdup
sub
sub
mov
mov
addl
scas
ss
scas
hlt
ret
pop
clc
xchg
add
popf
and
xor
lock
lods
xchg
xorl
stc
orb
mov
out
push
push
js
inc
movsl
lahf
or
push
rcl
rolb
imul
rclb
and
sti
push
mov
inc
xchg
imull
test
inc
cli
mov
jecxz
movups
mov
dec
sub
pop
inc
mov
push
ret
out
pop
sub
ljmp
loope
xchg
pushf
cmp
sub
jp
ret
dec
mov
jp
sub
cwtl
les
decl
mov
dec
insb
inc
andb
outsl
cmp
insl
xchg
sub
lods
pop
push
out
shrb
jne
push
xlat
inc
mov
das
and
bound
pop
insl
cltd
xchg
js
scas
pop
mov
mov
pop
jbe
imul
xor
js
in
scas
jp
push
out
and
mov
sbb
jg
inc
call
jne
ficoms
mov
mov
lods
and
in
xchg
out
jb
sbb
push
clc
dec
rcll
jmp
stos
mov
dec
fcomip
lahf
mov
bnd
dec
jb
mov
fwait
leave
mov
cmc
or
dec
nop
jbe
adc
lods
adc
mov
fsubr
ret
adc
stc
js
and
test
insl
mov
stos
in
mov
out
pop
push
cmc
push
dec
jo
shll
jmp
dec
mov
movsb
lock
cmp
dec
int
push
cmp
xor
test
xchg
cmp
sbb
jmp
stos
xchg
imul
sbb
adc
sub
add
mov
adc
adc
scas
jmp
inc
sub
adc
sahf
mov
push
xor
or
mov
or
mov
scas
aam
pop
test
inc
pop
jg
and
insl
sbb
frstor
shrl
jns
rcrl
push
jmp
pushl
pushf
mov
dec
sbb
lock
xor
lods
mov
pop
dec
cmpsl
lret
push
xchg
or
lret
loop
insl
stc
dec
cwtl
sbb
sub
push
pop
ror
sbbb
je
inc
adc
aaa
cmp
xchg
aaa
pop
cwtl
lcall
xchg
cmp
pushf
aam
ficomps
mov
jmp
je
jmp
fldl
xchg
push
ja
inc
mov
hlt
mov
dec
push
adc
xchg
fcoml
cwtl
mov
lods
xchg
sbb
dec
js
push
icebp
mov
fidivs
test
fisttpl
sbb
mov
jae
adc
outsl
sbb
add
push
aad
nop
int
pop
pop
mov
cmp
in
movsb
pop
xor
lock
aaa
pop
aas
mov
icebp
xchg
sub
dec
fdiv
loop
in
mov
js
jno
lcall
fwait
lret
xchg
call
not
pop
jns
cmp
pop
xorl
idivl
push
popf
mov
dec
add
fists
xor
mov
out
dec
in
lret
pop
imul
cwtl
fidivs
mov
inc
cmpsb
loope
sahf
dec
inc
lahf
mov
cmp
lds
enter
lret
add
cmp
sti
mov
sub
mov
out
xchg
xchg
subl
notw
test
js
push
cli
add
pop
mov
fstpt
sub
nop
arpl
xchg
xor
xchg
lret
test
icebp
pop
and
out
or
or
ja
sbb
jmp
pop
aas
stos
cld
xor
cmp
inc
and
push
push
mov
mov
out
fwait
xchg
pop
inc
adc
inc
pop
sub
dec
push
mov
inc
loope
iret
inc
or
jecxz
ds
mov
sbb
aaa
mov
pop
fnstsw
cmp
mov
jae
iret
aas
ret
and
nop
test
cmp
push
mull
fsubrs
push
inc
call
cmpsl
stos
rcr
jae
loop
adc
fstl
repz
fcoml
je
mov
in
and
jmp
xchg
dec
jb
leave
inc
cli
lahf
pop
mov
lea
push
movsb
cwtl
and
lods
inc
jae
pop
xchg
push
mov
cmp
sub
and
out
xchg
push
sbb
inc
aas
sbb
lock
sbb
add
sbb
mov
aas
mov
xchg
loope
xchg
add
dec
scas
lods
sahf
int3
dec
add
cs
sub
mov
rclw
mov
scas
lods
sub
shlb
xor
roll
inc
mov
push
fnstenv
mov
add
mov
adc
fwait
loopne
lods
push
cmpsb
cmp
mov
xchg
jne
jecxz
out
mov
or
inc
ret
outsb
in
push
call
add
into
loope
mov
mov
icebp
inc
cmp
push
mov
out
test
lret
movsl
ret
hlt
and
and
or
stos
sbb
cs
mov
testb
aad
inc
arpl
test
mov
sbb
mov
lods
outsb
incl
adc
icebp
hlt
xchg
xchg
xor
pop
add
pop
mov
xor
adc
xchg
inc
and
mov
fildll
pop
into
mov
jnp
xor
push
gs
lret
popa
adc
pop
inc
and
je
or
sub
mov
push
or
mov
sahf
sti
bound
scas
mov
cmp
sub
pusha
int3
mov
repz
loopne
ja
decl
xchg
pusha
inc
adc
adc
out
pop
insl
mov
sti
push
or
adc
sbb
jecxz
sub
stos
shlb
adc
jns
scas
xchg
frstor
push
pop
xor
cmc
and
scas
xchg
push
jns
sbb
fisttpl
sbb
pop
sbb
outsb
std
jge
imulb
pop
push
cmp
inc
das
or
xchg
scas
jg
jmp
popf
xor
mov
jge
inc
jmp
sahf
adc
xor
in
js
repnz
insl
mov
jnp
cmc
shlb
fisubrl
pop
fwait
mov
mov
cld
pop
repnz
push
fists
sbb
xchg
adc
adcb
out
test
in
test
test
pusha
or
push
cmp
and
test
and
lock
dec
outsb
jmp
mov
out
add
pop
cmpl
xchg
xchg
push
add
fmull
in
loopne
clc
pop
inc
cmp
lahf
or
movsb
das
push
sbb
pop
mov
mov
xchg
ficomps
sti
add
add
insl
sub
ljmp
ljmp
mov
cwtl
filds
mov
or
push
push
push
and
mov
ret
mov
add
cs
call
sbb
hlt
sub
adc
aas
jnp
in
mov
jae
push
movsl
or
sub
sub
lahf
pop
pop
mov
pop
add
mov
sub
addr16
popa
push
mov
and
fadd
ss
adc
jge
cmp
popf
inc
or
add
sub
sub
mov
mov
inc
cmpsb
imul
push
mov
rcll
jo
aam
jno
movsb
shlb
inc
inc
mov
test
imul
dec
nop
ret
jl
mov
xchg
cwtl
fldl
add
les
fstpt
cmc
mov
outsl
mov
idivb
arpl
jle
fdivs
ja
gs
jg
daa
xchg
aad
cmp
lret
test
pusha
sbb
mov
pushf
jbe
xchg
lret
jecxz
popf
loopne
popa
or
push
call
dec
movsl
mov
fmul
sub
shlb
out
addr16
iret
add
mov
repz
mov
xchg
sub
inc
into
cld
push
stos
imul
xchg
cwtl
lods
add
inc
and
iret
enter
jg
xchg
mov
ljmp
xor
rcr
sbb
lsl
jecxz
lcall
xor
push
cltd
notb
es
push
mov
mov
sub
pop
imul
xor
in
fs
push
enter
push
mov
inc
mov
out
ds
test
jecxz
or
cmc
aad
ljmp
mov
sahf
dec
adc
scas
psrlq
and
cld
ja
jno
mov
inc
std
cmpsl
pushf
int3
mov
inc
cmp
fldln2
cmp
push
fcmovnbe
jmp
xchg
sbb
mov
call
ficoms
sbb
inc
cmp
adc
inc
mov
mov
in
fiaddl
xor
dec
jp
cmp
and
or
mov
rcll
mov
fldcw
jae
hlt
fldl
out
shl
stos
jnp
fidivrl
dec
xor
imul
gs
mov
test
negb
xchg
and
inc
je
sti
lcall
outsl
jmp
add
jbe
xor
pop
sti
subl
jl
and
imul
lods
adc
mov
add
mov
rcrl
or
fidivs
in
jl
xor
mov
lahf
stos
mov
adc
push
pop
mov
je
xor
lds
int
fs
insl
pop
pop
insb
and
ljmp
push
divb
js
pop
fistl
mov
pop
mov
neg
sbb
imul
fld1
adc
inc
xor
sub
lahf
jl
rcrl
lret
xchg
imul
nop
std
inc
cld
jle
xor
fbstp
imul
pop
lahf
imul
push
hlt
pop
scas
pop
jb
lea
loop
pushf
mov
fbstp
movb
mov
or
cmc
cmc
cmc
in
mov
sub
nop
mov
int3
mov
cmp
sahf
fcompl
adc
movsb
popa
dec
adc
jns
sub
insb
add
lods
cltd
mov
xor
adc
fldlg2
adc
push
push
movsb
and
xchg
mov
into
pop
mov
sub
mov
cmp
xchg
mov
jmp
xor
push
outsl
pop
repnz
icebp
sbb
daa
xchg
jecxz
bound
andb
push
fisubrl
in
adcl
xchg
push
xor
movsb
or
popa
cli
mov
call
cmp
lret
push
xor
jae
inc
jmp
outsb
add
and
fisubl
jle
push
ret
mov
mov
outsb
xor
scas
sti
xchg
addr16
adc
stos
pop
cli
jne
movsb
dec
jnp
movl
test
dec
adc
imul
outsb
lock
fscale
push
pop
imul
xchg
add
dec
stc
jne
cmpsb
hlt
lea
push
push
push
cmc
jmp
movsl
stos
xchg
roll
dec
loopne
and
leave
jp
xchg
jecxz
repnz
lret
nop
mov
cmpsb
mov
jno
ja
stos
sbb
ror
or
lcall
pop
mov
loopne
imul
xchg
mov
icebp
adc
and
sub
stc
sbb
jo
aaa
clc
push
rclb
pop
repz
sub
cmc
push
cld
sbb
sbb
cmp
push
cmpsl
jle
xor
dec
aas
jae
and
jg
mov
cltd
inc
xchg
add
fisubrs
pusha
sub
push
cmp
inc
fucomip
sub
sub
orl
rol
repnz
fdivrs
aam
xchg
xor
mov
mov
rolb
adc
or
int3
mov
cs
pushf
xor
mov
sub
imul
pop
sbb
in
sbb
repnz
ror
inc
xor
xbegin
addr16
lahf
jno
ror
cmp
xor
sub
mov
mov
sub
adc
push
sahf
std
or
jnp
adc
or
and
pushf
sub
hlt
in
in
bound
bound
mov
pop
cmp
sbb
or
ja
xor
lret
shlb
inc
add
rorb
int3
mov
dec
movsl
stos
pop
and
ja
sbb
xchg
cmc
es
gs
sub
pusha
sbb
call
cmpps
inc
cltd
push
cmc
mov
loope
mov
cltd
jge
sub
push
sub
xlat
ss
push
xor
ljmp
add
popf
cmpsl
dec
xor
add
int
xorl
inc
aam
pushf
pop
out
jo
dec
jmp
enter
pop
dec
int
push
mov
out
dec
sbb
cmp
dec
nop
fwait
dec
mov
aas
pusha
dec
sti
xchg
es
out
jge
scas
icebp
push
pop
cmp
push
aad
sbb
mov
mov
add
and
test
cmp
cmp
sub
leave
sub
xor
and
fdiv
popa
push
out
or
aaa
xchg
int3
push
rcll
popa
lea
scas
ja
xchg
bsr
mov
les
mov
xchg
xchg
inc
push
lods
rorl
cmpl
adc
sti
push
nop
enter
insl
int3
fidivs
jns
inc
lds
sbb
add
test
lods
cmc
roll
pop
jg
fidivs
xchg
or
in
cmpsb
xor
pop
jl
xchg
rorl
addr16
lea
mul
sbb
dec
push
cwtl
gs
pusha
sbb
xor
data16
in
rorb
cltd
and
arpl
call
and
or
adc
xchg
leave
pusha
mov
fst
xchg
pop
jmp
pop
cmpsl
dec
fildl
leave
pushf
pop
jmp
scas
push
paddusb
xchg
movsl
cmpsb
mov
push
mov
sbb
std
push
cmp
into
mov
je
stos
push
pop
cmp
cwtl
sub
cmp
insb
pop
in
movsl
push
mov
pop
cmp
out
jno
clc
and
push
mov
lea
andl
xchg
aaa
xor
xchg
xor
sbb
xchg
mov
jecxz
mov
int
inc
xor
jo
mov
sti
popf
push
pop
ss
ficoml
cmp
or
ljmp
imul
mov
or
cmc
daa
sbb
mov
movsb
inc
int3
jae
in
or
xor
popf
idivl
mov
dec
sti
cmc
ja
fwait
jecxz
jno
mov
rclb
stc
sub
add
mov
mov
aas
aas
int
fildll
push
jb
lret
in
adc
test
mov
sub
sbb
std
aam
enter
lds
rcr
jb
jno
cli
insb
sub
dec
xchg
in
int
dec
pop
dec
xor
hlt
rolb
jg
rolb
enter
pop
push
and
xchg
pop
jb
jno
xchg
push
out
iret
lods
cmp
sbbb
vmwrite
int
in
mov
xor
mov
jno
add
popa
cltd
sahf
sti
out
aam
lret
addr16
lcall
ficoml
repnz
loopne
pushf
sub
and
mov
sub
mov
sbb
or
dec
mov
in
adc
test
out
jno
imul
je
jno
jle
jbe
clc
cmp
lock
stos
lret
fbstp
mov
ficompl
inc
pushf
mov
ja
outsb
push
add
dec
movsb
jle
mov
mov
das
test
lds
cmp
outsl
ficompl
aam
fcmovu
mov
mov
fisubrs
inc
testb
enter
jmp
mov
loope
into
cwtl
xor
xchg
mov
jmp
pop
sbb
lahf
fwait
stos
mov
cmp
cmp
jbe
jae
xor
mov
mov
shlb
jae
pop
and
mov
lahf
lcall
and
sti
aaa
cmp
adc
arpl
xor
fwait
and
sahf
mov
insl
sbb
ss
out
js
or
aad
lret
movsl
sub
scas
mov
mov
pop
lcall
notb
add
or
outsb
and
mov
jno
cld
loop
sbb
ret
push
sbb
xchg
bound
cs
lret
negb
adc
and
push
mov
push
sbb
and
js
or
outsb
lea
dec
shr
pop
cmp
mov
enter
outsl
cs
daa
add
mov
pushf
fs
sub
mov
lret
sahf
xchg
addr16
cli
pop
stos
ret
jo
sahf
cli
inc
outsb
arpl
aam
xor
fisubrs
or
je
mov
je
insb
xor
cmp
hlt
shrb
divl
popa
cwtl
and
add
pop
push
push
popf
xor
mov
add
loope
jns
bound
insb
bound
ficompl
dec
fdivrl
movsl
dec
adc
dec
sbb
sub
repnz
and
aam
ffreep
mov
adc
pop
popa
out
fbld
lret
xor
insl
clc
jg
jb
sbb
add
std
mov
repnz
mov
in
or
jb
cmpsl
mov
mov
popa
jno
fdivl
das
sahf
sub
jae
cmp
movsb
mov
dec
ficomps
aam
and
cmp
test
movsb
adc
mov
dec
inc
loopne
jno
bound
mov
sbb
pop
dec
jae
push
stos
xchg
pusha
stos
shl
imul
data16
ds
out
aas
xchg
mov
fnstsw
popa
das
jp
xchg
pop
inc
cmpsl
leave
mov
xchg
or
lods
mov
negl
lret
mov
out
test
pop
out
in
cltd
rol
inc
mov
xchg
xor
lahf
es
xchg
xor
xchg
xor
std
popl
sbb
lret
scas
mov
xchg
push
xchg
scas
movsl
xchg
dec
mov
xchg
push
mov
or
push
lret
adc
inc
out
add
xchg
xchg
faddl
in
out
imul
xchg
dec
xchg
shlb
cwtl
cli
mov
out
jmp
ja
mov
xor
stos
xor
shlb
ficoms
mov
mov
adc
notb
mov
push
scas
dec
xor
push
fisubrs
out
inc
aad
mov
jnp
into
push
rcrl
dec
pop
orb
pop
mov
gs
jp
ret
sbb
mov
push
popa
inc
push
addl
in
fwait
push
mov
jmp
mov
insb
pop
xor
rcrb
lods
lcall
test
pop
test
inc
aam
loop
mov
mov
outsl
mov
mov
fbstp
aas
jae
scas
adc
scas
push
popa
cmpsl
mov
aaa
iret
pop
adc
pop
insl
ljmp
test
mov
and
push
push
push
call
js
mov
daa
les
push
dec
and
loopne
imul
das
inc
xor
jg
xchg
pop
stc
or
js
mov
daa
jb
fiaddl
mov
pop
movsl
aaa
lret
pushf
cld
xor
imul
call
mov
dec
jo
mov
mov
lea
mov
scas
push
mov
sbb
dec
pop
jns
mov
divb
stos
clc
test
adc
cmpl
ss
and
mov
and
add
xor
orb
jnp
dec
pop
dec
sarb
dec
sbb
mov
or
movsl
outsb
mov
and
jl
or
jecxz
in
movsb
cmpsb
adc
push
xor
aaa
fcomps
inc
dec
pop
fnstenv
lds
ret
in
sbb
push
fsubrs
dec
ds
xor
inc
or
mov
cli
popa
mov
lahf
push
sbb
sbb
pop
xor
xchg
sbb
pop
cmp
data16
xchg
xchg
sbb
repz
insb
sbb
sbb
add
xchg
test
mov
xor
xchg
out
shr
cmpsb
jne
sbb
cmc
in
insb
jmp
sub
mov
pop
cmp
movsb
mov
lods
stc
pop
dec
push
cmp
mov
js
mov
loope
xor
dec
test
pop
repz
xorb
xor
mov
sti
cwtl
stos
mov
mov
or
mov
das
test
lods
add
jp
lods
sbb
xchg
mov
sub
cltd
lret
mov
addr16
loop
push
hlt
fimuls
push
cltd
adc
and
fwait
call
xchg
fdivrl
inc
stos
pop
hlt
sbb
add
push
rorb
ficoml
push
jb
cmpsb
inc
adc
fsub
push
mov
lea
lds
push
push
pop
add
xor
maskmovq
fidivs
cli
out
push
test
frstor
scas
adc
int3
mov
inc
and
das
imul
xchg
cmp
or
stos
add
cltd
cmp
cwtl
repnz
cwtl
adc
xchg
xchg
add
pop
cmp
sbb
cmp
mov
lock
adc
and
jae
cld
icebp
subb
adc
add
xlat
insl
mov
push
xchg
faddl
jg
pop
push
add
scas
loope
xor
testl
xchg
inc
fs
push
inc
out
gs
fstpt
jmp
inc
cmp
js
cmc
push
stos
cwtl
mov
mov
ret
imul
mov
jnp
outsl
cwtl
fs
jg
mov
mov
pop
jl
cmp
int
fs
fwait
pop
cmpsb
sub
mov
jecxz
cmp
bound
fcmovbe
mov
jns
mov
push
sbb
lds
dec
sub
add
push
sub
add
mov
inc
lret
mov
lods
adc
mov
movsb
dec
dec
push
aaa
aad
rcll
das
dec
loope
add
fcomi
ss
imul
push
lds
adc
dec
or
push
cmp
icebp
dec
cmp
add
aam
inc
hlt
mov
inc
inc
adc
scas
stos
movsl
cmp
rcrl
sbb
mov
mov
mov
or
fnstsw
mov
cli
call
mov
adc
ficomps
push
xchg
mov
push
scas
mov
pop
sub
stos
mov
jbe
jle
sbb
xor
daa
add
cmp
jecxz
fs
sbb
or
add
insb
stos
push
mov
push
jl
gs
cmp
mov
lea
dec
add
lret
or
pop
clc
inc
xchg
adc
xlat
insb
cmp
push
fistpll
not
rcl
das
pop
jecxz
out
sub
push
das
xchg
mov
pop
sub
popl
imul
push
push
mov
lahf
cltd
pop
sarb
cmpsl
pop
inc
fistl
pop
pop
fsubs
push
adc
mov
inc
xor
test
lret
add
cs
inc
addb
jp
orb
aaa
shrb
hlt
pop
jae
jmp
pusha
rorb
inc
pop
loop
xchg
mov
or
fwait
mov
rorl
mov
mov
mov
scas
in
gs
sbb
mov
daa
lret
cld
sbb
adc
xchg
mov
pop
mov
sahf
mov
add
out
cwtl
shll
les
mov
decb
mov
mov
pop
mov
add
sbb
sub
aaa
jecxz
sti
mov
lods
addr16
or
cmove
inc
cmp
jge
cltd
mov
outsb
rcr
lret
enter
jecxz
cmp
cmp
enter
push
add
cmp
fidivrl
daa
cs
fadd
jle
bound
loope
adc
in
out
cwtl
ds
js
mov
mov
inc
push
xor
cmpsl
es
jmp
mov
filds
dec
testl
jne
inc
mov
sbbl
dec
sbb
push
les
int
xor
ret
lea
fldcw
cli
pop
lret
or
jne
push
push
shrb
xchg
or
rolb
push
or
repz
and
and
mov
adc
movsb
stc
sub
jmp
sbb
xchg
popa
popa
das
in
pop
rclb
push
jmp
pop
xchg
cmp
add
add
addr16
addr16
sub
mov
das
add
jne
mov
pcmpeqd
mov
mov
inc
cmp
lds
push
cltd
or
mov
test
dec
call
jno
jecxz
fnstsw
cmp
call
xchg
shll
pop
mov
mov
lret
and
pop
aam
into
mov
inc
mov
pop
les
mov
sub
push
mov
in
hlt
dec
test
shl
inc
test
xor
cmp
sti
push
nop
sti
cmpsb
pop
je
cld
dec
push
scas
add
daa
imul
sbb
in
aaa
popa
jge
lcall
sub
stc
sbb
jns
mov
out
ds
out
xchg
xchg
add
or
xor
loopne
int
outsl
lods
sbb
jp
fwait
lods
mov
mov
lahf
int3
shl
imul
pop
pop
sbb
adc
movsl
fldl
xchg
movsl
xchg
mov
insb
roll
mov
push
aad
adc
iret
jae
and
adc
in
movsb
push
cwtl
adc
sti
enter
das
and
jl
jecxz
jns
cmc
scas
mov
jge
adc
bound
stos
adcl
daa
jl
xchg
sub
inc
or
jns
mov
dec
xorb
fcmovb
movsl
mov
jae
mov
jecxz
pop
insl
sub
push
aad
inc
test
imul
fsubr
mov
repnz
nop
jge
fcmovbe
pop
cmp
jno
xorl
xchg
xchg
push
add
mov
scas
add
xchg
xor
out
into
jnp
gs
arpl
add
add
mov
mov
mov
inc
ficomps
push
insl
andb
pop
jl
push
push
andb
jmp
lret
lcall
mov
xchg
outsb
cmp
pop
imul
ret
adc
jecxz
inc
sar
cs
sbb
or
lcall
pop
sbbl
loop
pop
fstpl
inc
or
and
mov
push
aas
hlt
pop
mov
stos
dec
lahf
jecxz
push
jmp
add
jnp
into
inc
cltd
mov
aaa
fwait
in
jbe
lahf
ljmp
insl
imul
outsl
popf
inc
into
cmc
adcl
dec
jbe
ljmp
cs
mov
mov
pop
jp
nop
lods
mov
rolb
push
dec
xor
cmp
add
jae
dec
lret
lock
pushl
loop
fcoms
lods
test
pop
shlb
push
pop
sub
inc
fwait
roll
xchg
or
ja
inc
cmp
and
es
mov
pop
test
shr
pop
dec
lods
dec
rorb
and
push
pop
lret
pop
pop
mov
xchg
cltd
dec
mov
movsb
xlat
dec
push
movsl
jecxz
jno
mov
loope
push
pop
add
fs
jnp
jle
pop
cmp
jbe
aaa
push
push
pop
sbb
or
imul
mov
stos
sbb
xchg
xlat
jle
fwait
and
adc
fcmovb
shl
fldenv
mov
mov
cmp
or
mov
popf
sbbb
icebp
lret
ljmp
mov
cmc
adc
cmp
or
sub
mov
data16
lods
pop
adc
es
and
nop
cmc
jne
xor
and
lcall
cmc
lcall
and
dec
xchg
arpl
sub
outsl
add
mov
add
sbb
fisubrs
daa
das
enter
mov
dec
mov
xor
aad
arpl
jg
scas
mov
imul
xchg
fcmovnu
js
cs
push
add
inc
jecxz
imul
dec
pop
fstps
mov
mov
stc
lcall
pop
stos
add
dec
sbb
adc
divps
mov
or
ljmp
movsb
cs
iret
and
adc
dec
xlat
sub
jbe
outsl
pop
push
lock
cmp
pop
les
icebp
es
fcomip
xchg
mov
inc
xchg
outsl
and
ja
sar
add
ja
mov
sbb
das
data16
push
jle
es
aaa
sub
or
andl
jb
jecxz
popa
repz
mov
add
mov
pop
mov
pushf
and
pop
test
mov
pushf
lsl
mov
nop
adc
and
call
hlt
and
mov
dec
cmpsl
xchg
fneni(8087
cmpb
in
sbb
es
nop
adc
sub
lock
push
push
lods
pop
mov
mov
aad
test
lcall
mov
daa
xchg
cmpsb
subl
aaa
arpl
mov
idivl
sbb
in
popl
fistps
mov
pushf
sub
jg
jno
and
push
and
outsb
les
or
dec
lds
iret
jge
xor
mulb
sbb
arpl
and
xor
dec
outsb
push
mov
xor
push
daa
push
mov
jne
mov
and
hlt
adc
sub
xchg
js
clc
pop
cmp
inc
mov
mov
sub
sbb
cmp
call
jle
sub
ljmp
inc
lcall
jl
out
rorb
jle
push
and
in
jno
xchg
inc
cmp
cmp
pop
cmp
cltd
out
jo
xor
sub
mov
bound
loopne
pop
dec
shlb
scas
pop
xchg
stos
mov
cmpsl
dec
mov
stc
sub
xor
imul
decl
sub
xchg
repnz
mov
mov
lock
adc
jo
dec
push
jle
rol
loope
pop
popa
les
dec
ja
out
gs
out
ficomps
idivl
mov
dec
ja
pusha
push
mov
xor
testl
cmpsl
push
push
dec
cmp
movsb
imul
fstpl
fnsave
fdiv
xor
jns
xchg
fbld
scas
ljmp
cltd
pop
cmp
lcall
cmp
xlat
jmp
leave
es
xor
loope
ret
sti
push
fsubs
dec
mov
add
xchg
cmp
xor
adc
jbe
cmp
rcr
stos
push
or
mov
dec
mov
jmp
arpl
and
mov
test
cmp
movsl
cmp
sbb
scas
rcll
pop
pop
pop
mov
inc
lret
cmp
icebp
es
cli
jb
imul
pop
sbb
push
insl
sub
ret
mov
test
pushw
inc
test
in
and
push
inc
and
sbbl
sbb
dec
clc
sub
divl
fdivrl
subb
stos
push
bts
daa
std
adcb
adc
xchg
data16
popa
out
dec
push
mov
or
add
push
imul
cmp
lods
fldt
cmp
lret
xchg
cmp
outsb
mov
sbb
fdivr
adc
ss
push
scas
jb
ret
rcll
mov
push
jl
movsb
mov
clc
and
movsb
push
fdivl
xor
cmp
pushf
push
insl
cmp
movsb
jne
adc
xchg
rorb
jae
nop
pop
lret
iret
jbe
mov
add
roll
push
mov
sbb
cld
sub
cwtl
ds
js
sub
